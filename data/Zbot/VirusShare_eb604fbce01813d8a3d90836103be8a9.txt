sbb
add
mov
es
mov
lock
mov
cmpsl
iret
sbb
rorl
in
int3
xlat
jmp
pop
or
in
lret
iret
cmp
scas
sub
fisubs
lret
cmpsb
int3
aam
push
jnp
xchg
arpl
call
dec
and
sbb
dec
jl
sti
or
jb
sti
outsb
push
pusha
xor
xchg
gs
call
inc
in
enter
adc
ficoml
adc
xchg
cwtl
add
aas
xlat
jecxz
or
aaa
fstpl
nop
mov
outsb
jp
add
icebp
cmc
pop
mov
cmpsb
aas
cltd
mov
jl
ficoml
push
mov
xchg
ljmp
inc
mov
mov
ret
pop
push
es
lret
push
leave
jnp
pop
inc
sbb
filds
mov
jg
xchg
nop
scas
js
jbe
xor
xor
cmpsl
xchg
cmp
mov
cmp
mov
imul
fs
adc
sub
addr16
mov
mov
les
and
push
sbb
testl
dec
and
movsb
mov
mov
xchg
or
rcll
out
pop
cmp
mul
push
xor
into
jae
xor
push
scas
pop
scas
dec
ror
cs
jne
pop
jnp
xor
inc
test
addl
push
pushf
jno
push
adc
addb
sti
jl
pop
fwait
imul
fiaddl
mov
fimuls
cmp
mov
lcall
nop
mov
jl
jb
or
test
push
adc
sahf
mov
pusha
sti
sub
rcl
and
jle
sub
push
daa
int
aam
mov
std
inc
nop
shll
sbb
shl
mov
inc
ret
jmp
push
bound
in
stos
notl
jg
pusha
xchg
iret
outsl
jb
fsubr
loopne
insb
movsb
out
int
icebp
lock
cltd
icebp
mov
in
hlt
enter
in
addr16
mov
sarb
cmp
ret
sub
mov
aaa
add
push
and
sub
mov
js
dec
outsb
and
cwtl
or
inc
lret
std
cmp
jns
jmp
fmuls
mov
int
ret
and
loop
out
or
leave
pop
test
fmull
jo
pop
adc
mov
push
ffreep
push
mov
mov
inc
fstpl
and
sub
jge
adc
xor
sub
and
xchg
and
inc
dec
ret
or
jmp
loop
pop
sub
mov
inc
jmp
and
outsb
dec
push
dec
add
int
xor
sbb
jge
loop
cmpsl
sub
inc
cmpsb
fldcw
aaa
pop
testl
mov
das
pop
sbb
stos
aam
popa
jb
mov
subl
inc
pop
repnz
popf
jle
leave
mov
sbb
loop
sti
mov
nop
sub
cmp
rcrl
movsl
push
jge
pop
int3
aad
mov
or
mov
mov
push
pop
cwtl
imull
lds
sbbl
jne
jge
pop
movsl
sbb
adc
mov
in
stos
jno
mov
cld
jge
sbb
ljmp
cmpsb
ffreep
js
cmp
mov
sahf
addr16
pop
push
xchg
aam
mov
mov
cmp
cltd
lcall
sub
push
add
mov
rcr
xor
dec
cli
mov
mov
filds
pop
xor
cmp
gs
jo
jnp
mov
aaa
addr16
mov
adc
add
sub
ret
pop
aam
fsubrl
subl
mov
out
cmp
neg
sub
adc
mov
mov
sub
xlat
adc
or
not
jp
lock
repnz
jl
adc
outsb
addr16
imul
popa
fldt
cwtl
outsb
fadd
sub
imul
icebp
dec
pop
jle
fs
xchg
cmp
mov
imul
lods
lods
mov
test
xchg
aas
sub
pop
jnp
mov
icebp
cmc
dec
mov
pop
lods
sti
int3
dec
sbb
out
sbb
sti
mov
mov
call
dec
sbb
xor
imul
or
gs
inc
pop
in
lret
out
pop
xor
data16
sbb
les
dec
mov
inc
mov
test
mov
leave
es
or
mov
pop
add
fists
xchg
mov
cmp
cs
insb
push
int
push
stos
dec
lahf
orb
inc
daa
adc
pop
ds
pusha
int3
and
xchg
in
das
add
sbb
iret
inc
insb
cltd
inc
dec
mov
stc
dec
call
fisubrs
pop
lods
mov
xchg
dec
lea
sbb
sti
rcl
sahf
enter
sbb
fisubrs
pop
and
jp
jbe
push
and
int3
popa
mov
jg
push
pushf
cmp
mov
inc
pop
ficomps
inc
pop
xor
repz
popf
mov
inc
fisubrs
push
dec
jp
inc
dec
out
add
push
and
stos
xchg
pop
xchg
jne
imul
pop
jl
pop
ljmp
in
vandps
jge
mov
sbb
ficompl
imul
in
add
jge
fadd
lcall
push
fildll
mov
adc
lcall
jmp
sbb
adc
inc
lahf
pop
shlb
pop
push
xchg
pop
and
jne
divl
and
push
mov
popf
xchg
int
adc
sub
hlt
mov
hlt
aam
xor
pop
pop
xchg
sbb
iret
mov
pop
xor
out
aaa
mov
jg
pop
push
mov
daa
push
mov
cs
dec
push
or
sbb
loop
inc
ret
enter
mov
dec
or
mov
jne
cmp
add
lcall
push
cmp
ret
xchg
add
jp,pn
enter
pop
mov
xchg
mov
cltd
dec
mov
pop
cmp
out
xlat
sub
jmp
cmp
xchg
jl
xor
hlt
cmpsb
fcmovnu
sti
xchg
pop
fs
jae
xchg
andl
ret
adc
fistps
jg
cmp
movsb
mov
cmpsl
and
adc
fs
sub
in
push
rclb
scas
dec
out
inc
cmp
out
mov
xchg
cli
call
cmpsl
cwtl
push
leave
push
scas
xor
mov
mov
pop
les
es
outsb
mov
sbbb
mov
stc
and
dec
xor
lods
in
mov
xchg
xchg
xor
push
pop
jo
ja
mov
and
mov
pusha
pop
add
jl
cmp
sbb
loopne
das
jo
pop
sub
cmp
jmp
scas
add
dec
xchg
int
xorb
hlt
sbb
jns
push
std
add
dec
fcomps
cwtl
and
icebp
and
sub
mov
dec
sarl
adc
insl
ret
dec
push
jne
pop
ffreep
add
xor
ljmp
push
pop
mov
and
pushf
lret
add
aam
xor
inc
repnz
movsb
faddl
inc
lcall
movq
jb
fisubrs
sti
xchg
popa
scas
mov
loopne
pop
ja
push
push
movsb
dec
sahf
xor
xor
cmp
push
mov
sahf
pop
out
sbb
jae
mov
mov
fstl
push
aam
xor
pop
pop
les
and
cmp
test
and
mov
dec
test
fsts
shll
sbb
faddl
mov
hlt
stos
aam
ficoms
ret
jg
mov
xchg
sub
fxtract
lcall
insb
pop
cwtl
ror
repz
cmp
lods
or
lret
push
outsl
jecxz
add
xchg
callw
and
push
lret
lahf
or
pop
loop
dec
xchg
cld
push
les
mov
adcb
shlb
lea
cltd
push
jp
lock
mov
and
fcmovu
push
loopne
push
in
jae
sub
sarb
sub
pushf
pop
loope
repz
or
movhps
mov
cmp
aas
add
cs
mov
divl
mov
inc
cmpsl
mov
lcall
mov
mov
rcl
outsb
mov
jo
ffree
or
imul
xchg
dec
mov
gs
jecxz
pop
push
cmp
jle
xor
test
dec
cltd
add
dec
test
mov
and
test
dec
mov
arpl
push
adc
outsb
pop
jmp
repz
aaa
sub
add
mov
jae
lret
aas
pop
hlt
lahf
mov
out
and
aas
cs
mov
sub
mov
enter
lcall
sbb
adc
pop
movsb
mov
mov
mov
outsb
jge
sbb
data16
push
sub
push
or
iret
inc
ds
mov
jg
xchg
pop
and
dec
and
into
xor
xchg
call
das
inc
daa
pop
or
ljmp
pop
xor
inc
mov
push
inc
sarb
pop
jp
orb
adc
vmaxss
fdivrl
cmpl
stos
js
cld
pop
loope
cltd
sbb
pop
mov
mov
les
lret
in
xchg
or
mov
jne
mov
test
mov
push
sarb
jnp
fwait
mov
aad
add
pop
sub
sub
and
call
popf
add
rorb
stos
aad
pusha
out
fcoms
movsb
shr
dec
shll
pushf
dec
or
cmp
mov
sbb
mov
and
subb
push
loopne
jb
xor
sub
mov
adc
shl
repnz
xchg
pusha
pop
adc
mov
xorb
xor
dec
push
pop
les
pop
inc
lret
jo
adc
xchg
add
scas
mov
mov
int3
xchg
dec
mov
mov
pop
insb
sub
push
clc
mov
xchg
cltd
pop
fstps
out
pop
sbb
or
xchg
and
or
push
rcll
cmp
add
mov
insb
ss
in
loop
ss
pop
mov
shl
lahf
shrb
xor
jo
mov
cmp
clc
mov
mov
dec
dec
arpl
mov
mov
jb,pt
out
cmp
loopne
jmp
cld
ret
jno
mov
mov
jle
div
mov
int
jne
sbb
inc
loopne
pop
add
outsb
popf
push
mov
insb
mov
sub
pushl
cmp
mov
ss
aam
xor
lahf
dec
dec
jle
fidivl
push
jmp
xchg
adc
sbb
sub
out
outsb
ja
lcall
enter
dec
es
dec
pusha
push
xchg
pusha
sahf
push
stos
dec
push
adc
xchg
xchg
lret
mov
jno
movsb
call
xchg
dec
jno
inc
lcall
mov
xor
sbb
xchg
mov
int3
jge
ret
outsl
ss
mov
movsb
mov
outsb
sahf
mov
jmp
xchg
adc
jmp
push
jno
xchg
ret
push
rcrl
adc
cmp
mov
cmp
leave
in
adc
and
add
and
add
jecxz
cmc
push
add
push
mov
xor
cmp
mov
add
or
cs
lods
ror
sti
rolb
pop
adc
xor
pop
push
mov
or
loope
push
jns
sti
sti
out
inc
das
cmp
nop
insl
jl
bound
cmc
cmp
push
dec
insb
sbb
pop
mov
movsb
pop
repnz
add
fisttpll
xchg
or
push
mov
sbb
jg
ljmp
jmp
scas
call
mov
dec
xchg
mov
jmp
enter
paddusw
repnz
jle
imul
xor
mov
push
jae
xlat
mov
mov
push
push
insb
mov
xor
fwait
inc
xor
mov
nop
inc
aas
js
sbb
mov
jo
jb
xor
ljmp
lds
enter
fnstenv
sub
scas
adc
adc
stc
push
xchg
js
out
pop
push
xor
imul
out
sub
jno
jbe
ret
test
fcomps
xor
cmp
sarb
sbb
xor
mov
push
jo
lds
xchg
dec
and
leave
scas
push
and
gs
js
insl
mov
xchg
pop
ret
add
fs
stos
fiaddl
mov
jl
loop
pop
jnp
mov
lcall
mov
inc
stos
inc
fmull
nop
fadds
sub
cs
mov
jns
jle
stc
jne
in
dec
scas
clc
cs
loop
jnp
pop
xchg
stc
out
js
push
bound
dec
test
inc
js
mov
push
xchg
clc
ret
inc
bound
stos
sbb
int3
xchg
or
and
sub
xchg
sub
xor
dec
outsl
jmp
rorb
mov
push
push
push
xchg
xlat
dec
mov
fstps
xor
jl
ret
cli
popa
lods
sbb
mov
neg
push
aam
inc
xchg
add
test
lahf
or
cmpsl
cmp
pushf
lcall
inc
xor
sub
add
jecxz
lods
add
xchg
arpl
sub
sub
mov
ljmp
jae
aam
jb
fs
mov
adc
mov
xor
push
fcomi
sub
hlt
and
sub
test
mov
repnz
enter
push
and
lods
mov
inc
push
arpl
mov
sbb
cmp
fnstcw
out
jecxz
cmpsb
out
sub
test
iret
pop
mov
adc
mov
sti
push
cmp
cmp
mov
xchg
jp
dec
mov
lret
sbb
js
cli
sbb
push
int3
mov
cmp
stos
mov
xor
and
stc
or
jno
push
pushf
mov
jbe
dec
xlat
jg
mov
mov
les
popa
jae
mov
decl
mov
rcrl
pop
pop
mov
inc
push
jns
inc
push
jo
icebp
outsb
mov
mov
mov
fcomi
repz
sarw
add
xor
xchg
hlt
in
ror
inc
jns
test
inc
daa
mov
push
mov
into
bound
enter
lea
sbb
outsb
push
fs
js
sbb
adc
xchg
ret
jae
gs
leave
mov
lret
jbe
fidivrs
testl
incb
jg
je
push
push
cmpsl
push
in
inc
xor
sub
adc
ljmp
js
lcall
mov
jecxz
mov
in
outsl
inc
push
out
xchg
and
shl
jb
mov
mov
and
call
pop
lea
push
movsl
mov
in
cmpsb
push
and
adc
xor
fwait
out
mov
xchg
sub
clc
dec
push
leave
insb
mov
mov
pop
stc
sti
push
and
outsb
popa
cli
push
push
in
fs
sub
xlat
mov
cmpsb
push
call
pusha
addr16
push
sub
add
std
jecxz
mov
jne
xchg
mov
shrb
int3
ret
dec
push
or
xor
push
push
add
aad
xor
imul
jae
cmp
sbb
jo
loope
out
hlt
sub
mov
sub
sub
ret
popf
jg
pop
jns
clc
mov
aam
iret
hlt
sarb
mov
push
aaa
movsb
dec
adc
leave
lds
mov
jp
jecxz
jmp
jbe
xchg
clc
sub
mov
cmp
outsl
xchg
sarl
cmp
sahf
cmc
ret
mov
daa
and
mov
mov
mov
in
mov
pop
fdiv
sbb
push
andl
popf
bnd
jmp
in
int
movsb
outsb
push
pop
es
mov
cmp
or
mov
push
negb
test
in
test
aam
and
xor
sub
ds
pop
jo
dec
ljmp
je
shrb
test
es
addr16
out
rcll
fisttpl
xor
in
cwtl
ljmp
jne
inc
mov
mov
push
sti
std
stos
push
inc
imul
jo
dec
push
inc
add
repnz
pop
imul
push
mov
lret
or
lret
xchg
mov
lock
bound
outsl
sbb
pushf
sbbw
mov
inc
sbb
cmc
std
adc
scas
add
int
adc
xchg
mov
push
jbe
add
in
sar
add
addr16
mov
sub
push
pop
mov
bound
sub
rcll
cmpsl
fists
fldcw
shlb
mov
add
or
hlt
inc
inc
mov
and
clc
ds
push
js
xchg
xchg
stc
cmp
test
mov
test
movsb
and
out
mov
pop
cmp
push
or
xor
repz
push
adcb
or
push
enter
addl
loop
pop
or
test
mov
aas
xchg
sbb
pushf
xchg
push
cmpsl
jle
mov
outsb
lock
enter
dec
repz
dec
test
mov
lds
popf
cmp
stos
daa
fdivrp
les
sti
fildl
rcrb
cmp
loopne
xor
loopne
inc
sub
jae
mov
pop
mov
jae
xchg
cwtl
jg
add
lret
jg
lret
shlb
ljmp
insb
cltd
movb
in
imul
lods
nop
clc
xchg
lea
or
jbe
or
sbb
inc
test
jo
pushf
xor
popa
xchg
pop
outsb
xor
xor
aas
enter
inc
jae
add
jmp
adc
jecxz
and
xchg
xchg
loop
test
aam
push
insl
push
loop
and
popf
or
dec
cmp
push
sbb
ret
scas
mov
or
js
push
sti
or
pop
sub
jae
jb
mov
xor
and
lock
fld
rcrl
and
out
pusha
xchg
hlt
and
cmc
mov
test
sub
loopne
push
rcll
rolb
dec
jae
pop
mov
mov
push
fistpl
jge
mov
icebp
dec
aas
and
lcall
jge
lret
dec
lea
movntps
outsl
iret
scas
adc
sub
cltd
jmp
mov
movsb
xchg
jg
cmp
nop
outsl
aam
cmpsb
lcall
test
rol
cmp
ret
mov
jmp
stos
lret
pop
xchg
mov
mov
xor
jne
jp
rclb
int3
jl
fstpt
andl
cmp
inc
sbb
out
ss
push
mov
movsl
cli
push
sbb
ret
std
dec
lods
jae
push
test
ja
fcoms
mov
or
insl
jno
mov
add
sub
sub
loope
jns
in
ret
xor
mov
push
xchg
jbe
or
pop
xchg
lret
outsl
dec
lock
sbb
pop
xor
ret
inc
adc
jns
in
and
sti
jb
bound
sub
cmc
mov
add
pop
imul
push
adc
push
push
sbb
je
adc
or
push
push
js
andb
fs
outsl
imul
sarl
inc
jecxz
jmp
add
fcoms
and
jle
xchg
dec
iret
pusha
imul
fiadds
push
aam
mov
dec
dec
mov
movsl
call
hlt
pop
sub
mov
cmp
cmpsl
out
xor
mov
or
fidivrl
add
cltd
push
or
cmpsl
test
cmp
push
adc
push
jg
fisttps
add
pop
dec
xchg
jge
xor
lret
dec
mov
enter
jbe
das
add
cld
dec
flds
jg
out
mov
and
aam
and
jl
ja
mov
cmpsl
sbb
out
push
push
sbb
mov
xchg
add
cli
sub
shlb
pop
js
scas
or
adc
mov
lds
out
push
ret
cmpsl
push
negl
fdivrl
lds
xchg
push
out
imul
cld
xor
call
dec
mov
xchg
les
or
mov
adcl
shll
cmp
xor
mov
cmp
mov
ja
mov
loope
std
pushf
in
mov
sbbb
inc
movsb
xor
aam
bnd
insb
mov
mov
aas
sub
and
push
mov
clc
sarl
call
mov
sti
mov
in
loop
pop
ret
add
adc
inc
mov
dec
adcb
cmp
pop
mov
pop
pushf
sahf
mov
push
adc
popf
xchg
dec
cmp
loop
test
sub
xchg
xchg
shrl
js
cmp
popa
sub
pop
shr
mov
roll
pop
adc
and
mov
int
push
enter
bound
sub
sarl
dec
mov
fstpt
or
arpl
fisttpll
gs
aam
push
jns
mov
loope
add
xchg
pop
outsl
pop
mov
adc
sub
sub
sbb
inc
hlt
adc
shrl
mov
in
shll
cwtl
das
ljmp
or
mov
int
jecxz
jnp
orl
dec
imul
xchg
rsm
dec
rorb
repz
dec
pop
and
xchg
mov
fdivr
xchg
xchg
in
dec
jg
xor
rcll
pop
push
xchg
or
jo
pop
sbb
sub
mov
out
lret
insb
sub
daa
push
xor
lret
adc
and
lahf
push
sub
fimull
negb
xchg
adc
pop
sbb
movsb
xchg
mov
imul
fidivrs
adc
adc
pushf
jno
test
inc
pushf
jb
mov
jno
mov
je
push
inc
inc
jbe
imul
fwait
push
loope
xor
icebp
inc
test
decb
pop
xor
imul
inc
mov
and
mov
iret
push
out
fs
jne
repz
rol
ret
lods
cmpsb
into
cmp
xlat
out
pop
dec
ret
jb
add
pusha
fstl
shll
aas
and
inc
fstl
jge
cmpsl
into
sub
pop
popa
cmp
or
dec
mov
inc
jmp
imul
mov
or
outsl
pop
cmpsl
cmp
je
icebp
mov
mov
mov
mov
js
or
and
dec
inc
or
xor
dec
cli
decb
iret
sbb
les
mov
scas
rclb
and
mov
cmp
or
pop
gs
sahf
xchg
adc
dec
imul
fucomp
jecxz
adc
scas
dec
shl
data16
repnz
int
or
mov
push
jnp
fwait
sti
out
in
les
aam
stos
test
add
adc
fnstenv
cltd
cmpsl
xchg
bound
pop
lcall
dec
sub
jmp
add
dec
into
mov
jmp
jmp
daa
shrl
sbb
bnd
ljmp
mov
cmc
sub
mov
jb
pop
push
loope
mov
mov
inc
pop
aam
sahf
movsb
pop
mov
or
mov
jae
or
inc
imul
cmp
jbe
rcrl
cli
cmp
xchg
into
repz
jae
inc
ljmp
inc
mov
jns
cld
dec
fdivrs
in
daa
or
outsb
jb
jne
dec
shrb
xchg
imul
std
stc
stc
adc
mov
je
aaa
jge
decb
imul
pop
push
insl
inc
shll
dec
insb
sbb
pop
push
cmp
or
sahf
test
or
fsubl
mov
jecxz
mov
out
jbe
dec
add
pop
dec
jns
inc
clc
xor
push
push
jp
mov
add
lret
popa
nop
outsl
lret
mov
jmp
idivl
lahf
sti
push
filds
dec
stc
push
loope
xchg
mov
pop
in
int3
dec
mov
or
idivb
jo
mov
xor
add
pusha
cltd
xchg
dec
das
notl
dec
es
pop
std
dec
push
lods
push
jl
adc
xchg
dec
pop
andb
lret
fimull
mov
les
adcl
mov
jae
lods
imul
cmc
sub
dec
jb
inc
cmp
fwait
aas
xchg
and
push
cwtl
arpl
outsb
shlb
pusha
mov
popf
lds
push
inc
mov
xor
mov
dec
add
sbb
mov
sbb
movsl
xchg
aas
push
andl
cmp
pop
scas
jecxz
inc
and
jns
dec
lea
fcompl
mov
cmpsb
test
lahf
sub
xchg
enter
out
push
adc
pop
cmp
mov
in
mov
push
pop
movsl
xchg
mov
push
iret
ljmp
sub
subb
xchg
aam
test
fnsetpm(287
cmc
lcall
fldz
test
adc
cmp
adc
fcmove
or
add
testb
mov
aam
jno
add
jo
mov
imul
sub
mov
in
aas
mov
sub
scas
jl
int3
mov
push
sarb
inc
pxor
inc
mulb
out
jne
ret
call
push
ss
push
insl
ds
push
lcall
xchg
jmp
xor
dec
mov
stos
lret
fwait
shrb
repnz
xor
cmp
lods
and
dec
add
mov
loope
push
ret
mov
sbb
rcrl
or
js
and
cld
out
push
adc
push
sahf
scas
sub
adc
jo
cmp
sti
fnstcw
pop
or
fsubrs
mov
cmpsl
sbb
mov
std
cli
inc
scas
ljmp
inc
push
inc
cmc
cmp
fs
and
dec
inc
push
sub
lcall
sti
and
xor
push
out
adc
fs
ret
aas
xor
test
xchg
and
sub
rcrl
das
mov
inc
inc
adc
sub
or
xorl
or
xchg
sbb
pop
dec
and
jle
jns
sti
mov
xchg
cmp
add
icebp
out
popa
or
jp
dec
push
out
cli
add
add
mov
pop
shrl
jge
cs
jmp
xlat
icebp
cmp
mov
jns
pop
jnp
std
fstpl
sbb
lock
popf
lahf
mov
pop
lods
ja
push
lahf
sub
es
cltd
and
sub
or
mov
sbb
or
xor
jge
mov
pop
pop
push
cwtl
leave
sarl
xor
test
jns
cmp
std
les
sub
sub
fidivs
ret
imul
popa
and
aam
xchg
pop
in
xor
in
je
das
int3
sub
mov
jns
insl
mov
rcr
mov
loopne
add
test
sbb
outsb
stos
in
mov
push
cli
mov
fistpl
pushf
ret
mov
inc
jno
rorb
iret
fists
mov
or
sub
pop
add
sub
icebp
sub
sub
add
inc
mov
xor
es
repz
adc
addl
loop
and
insb
sbb
sbb
pop
les
and
add
xorb
jnp
aad
leave
dec
mov
sti
adc
std
jne
mov
dec
jmp
mov
mov
inc
or
pop
loopne
mov
inc
mov
cmp
shl
ss
mov
sahf
int3
jecxz
mov
inc
jmp
jb
ror
and
xor
add
ficoml
dec
push
sti
aaa
insl
mov
mov
or
test
dec
push
cmp
push
imul
cmpsl
test
cld
hlt
jnp
inc
jno
dec
js
imul
xchg
loope
jp
push
mov
xchg
and
insb
mov
mov
test
xchg
jns
mov
push
ljmp
lcall
sbb
jo
cs
aad
cmp
sub
or
mov
insl
rol
push
jno
mov
or
loope
lahf
stos
popf
inc
loope
jns
push
bound
sub
into
and
test
scas
dec
pop
into
push
test
dec
and
sub
or
dec
mov
gs
andb
pop
push
movl
cmp
call
jno
inc
test
ja
repz
xchg
xchg
gs
gs
or
push
xchg
pop
popf
jo
add
iret
ljmp
sbb
std
mov
loopne
pop
lahf
adc
mov
pop
xchg
enter
jle
aas
xor
pop
inc
xor
xchg
pop
mov
adc
aad
mov
aad
dec
cmp
outsb
dec
adc
data16
push
or
out
push
icebp
call
and
dec
imul
pop
xchg
outsb
repz
inc
cmp
addb
xor
in
mov
mov
jae
scas
call
in
jb
iret
sub
aam
shrb
out
dec
cmp
shl
incl
cmp
cmp
fistpll
ret
sbb
or
xor
ficomps
jl
cmp
adc
iret
imul
adc
inc
icebp
daa
pusha
cltd
addr16
sub
xor
dec
gs
js
rolb
push
jp
sti
mov
sahf
pop
adcb
inc
fldt
dec
lock
inc
cmpsl
bound
stc
cmpl
mov
adc
sbb
and
fsts
out
fdivl
aaa
dec
loope
fsubrs
sbb
jne
xor
rcrb
mov
xor
cmp
test
in
mov
push
mov
sub
add
aam
dec
lret
mov
dec
pop
cs
pop
jp
sahf
adc
jnp
fwait
cmp
sub
pop
ficomps
pop
jae
scas
cmc
mov
movsl
pop
sbb
xchg
stos
jge
lcall
in
cmp
jmp
xchg
in
cli
lret
aas
std
les
cs
mov
lcall
cmp
mov
pop
xchg
rcrl
popf
imul
inc
and
lods
mov
jl
xor
scas
mov
sbbl
inc
sbb
push
scas
mov
jp
sub
sub
ljmpw
mov
mov
cmp
sub
in
pusha
pushf
ret
jecxz
sbb
fildl
outsb
pop
pop
dec
inc
aam
testl
cmp
ror
cld
out
cli
lods
dec
clc
xchg
fwait
outsb
mov
mov
and
jb
mov
xchg
fimuls
cmp
call
hlt
negl
mov
mov
in
aad
in
cli
push
ljmp
sub
in
sub
sub
add
mul
mov
shrl
clc
pop
sahf
inc
pop
cmp
push
dec
test
data16
or
lods
pop
and
iret
ljmp
xchg
sub
push
pop
mov
gs
inc
sbb
inc
ja
jg
iret
add
add
add
pop
and
dec
push
shlb
inc
push
sub
or
fwait
mov
push
cmpsb
inc
fucom
dec
push
adc
or
cld
jg
aam
xorb
test
frstor
fcmovbe
sub
ljmp
out
mov
pop
popf
mov
hlt
cs
xchg
pop
or
inc
std
inc
or
xor
fists
jp
pop
movsl
rcl
and
dec
mov
mov
mov
pusha
push
fwait
imul
and
mov
leave
out
adc
lock
sbb
push
hlt
sub
mov
nop
popa
jge
loop
fbld
test
divb
lods
fistps
ds
loopne
mov
js
out
or
nop
scas
xchg
mov
mov
je
lret
je
push
dec
ss
jp
mov
cmc
add
call
xor
movsb
popa
and
and
cwtl
in
and
dec
popf
hlt
sub
jmp
jns
mov
clc
pop
loopne,pt
ret
cld
fcomps
cmp
vunpckhpd
mov
out
mov
mov
stos
out
test
das
jnp
sar
repnz
fdiv
data16
push
out
data16
xchg
mov
pusha
in
in
cmp
mov
rcr
add
addr16
jne
int
pop
lods
dec
xchg
xor
sbb
mov
rep
push
in
xor
jp
lret
lret
add
out
aad
bound
mov
jmp
push
pop
adc
int3
mov
test
orb
stc
sti
loope
fwait
scas
xor
jg
bswap
adc
hlt
leave
add
je
push
push
ret
xchg
cwtl
popf
add
pop
push
test
das
sub
dec
shl
repz
fwait
jecxz
lret
xor
cmp
mov
dec
inc
popa
int3
jle
inc
push
adc
pop
pop
mov
out
jae
lods
pop
in
in
add
clc
arpl
xor
ss
dec
mov
add
in
inc
cmp
push
into
repnz
aad
adcb
cmp
sbb
aad
in
push
aaa
jp
or
test
xor
sarl
xchg
cmp
push
daa
mov
std
add
push
xor
and
mov
add
jp
cmp
or
adc
sahf
and
rol
stos
aad
stos
call
pop
jne
sub
pop
jle
mov
insl
clc
outsl
imul
daa
test
lahf
sarb
lock
insb
test
push
jns
mov
rorb
add
jge
mov
in
mov
rcrl
cmp
cli
out
mov
sbb
adc
pop
xchg
mov
cmpsl
push
lret
xchg
lcall
mov
leave
cli
nop
xchg
or
and
dec
gs
cltd
int3
jl
push
xchg
cmpsl
mul
fwait
cmpsl
push
push
pop
int3
sbb
cmc
cmp
inc
rcl
es
cmp
fdivrs
push
mov
adc
cmp
or
out
cmp
and
cmp
nop
cwtl
inc
inc
mov
in
sbb
mov
cmp
les
cld
add
inc
cmp
cmp
sbbb
mov
inc
ja
pop
cli
push
mov
mov
fisubrl
imul
jnp
jl
aaa
or
jp
adc
pop
adc
psrlq
push
in
lods
loopne
ljmp
adcb
les
test
cmp
mov
inc
lret
int
inc
movsl
gs
adc
lret
js
cmp
cs
lods
xchg
mov
jno
push
sub
pop
shlb
outsb
push
cld
mov
xor
testb
shrb
mov
ljmp
adc
xlat
dec
pop
sbb
xor
jne
sub
mov
cld
mov
das
mov
xor
adc
mov
xorl
loop
fimull
not
cmp
mov
movsl
xor
sub
insl
mov
xchg
std
lahf
dec
push
in
or
cmp
adc
addr16
xor
sbb
mov
imul
sti
cltd
mov
out
push
int
mov
cltd
push
dec
xor
mov
xor
popl
fcmovnb
sub
push
scas
ret
sbbb
cmpsb
dec
movsl
push
pop
aam
jns
mov
cmp
rclb
mov
dec
repnz
cltd
and
add
ja
es
mov
shrl
stc
rorl
inc
fimuls
cmpsb
or
pop
stos
mov
test
stc
dec
dec
gs
add
sbb
dec
stos
rep
shr
nop
or
fbld
adc
mov
adc
das
dec
jge
mov
scas
test
in
out
mov
and
hlt
stos
jg
or
in
lods
out
mov
outsb
loop
pusha
push
jl
dec
pop
int
decb
and
jo
cmp
fdivp
xor
outsb
inc
sbb
jb
cmp
hlt
pop
mov
mov
add
jo
lcall
and
imulb
cli
inc
clc
inc
pop
mov
fs
lahf
pop
out
imul
jae
adc
cmp
jnp
adc
jle
mov
lahf
in
pusha
pop
push
pop
les
fcmovnb
fists
decl
pop
ja
adcb
aam
jp
mov
imul
and
ficompl
mov
adc
clc
pop
mov
and
pop
mov
movsb
stos
out
and
adc
lds
mov
imul
sub
xor
dec
xor
aam
mov
lahf
dec
mov
adc
mov
pushf
pop
int3
fisubrl
dec
or
outsl
mov
adc
jae
fwait
decl
pop
pushf
popf
imul
or
mov
dec
cmp
jmp
sbb
call
ds
inc
int3
dec
add
inc
fwait
mov
jns
pop
sbb
ja
cld
stc
xchg
je
pop
pop
inc
sti
jmp
lea
js
pusha
cmp
push
scas
mov
fcoms
mov
iret
pop
ljmp
dec
jbe
mov
sbb
push
mov
mov
je
dec
push
mov
inc
push
add
inc
lock
add
cmp
mov
sbb
out
pop
jmp
daa
push
mov
dec
add
pusha
cmp
pushaw
pop
pushf
hlt
sub
fucom
xchg
inc
jae,pt
sub
sti
orb
int3
cli
mov
sbb
aad
pop
jmp
repnz
jne
aad
sbb
out
outsl
stc
jbe
or
add
xchg
clc
push
push
jecxz
das
int3
push
and
rorb
daa
mov
pop
push
add
mov
sub
pushf
mov
mov
or
xor
lods
sbb
in
cmp
push
ljmp
mov
jnp
sub
inc
lcall
xor
add
gs
jne
cwtl
mov
iret
out
jne
jl
imul
mov
dec
aas
loope
scas
dec
jg
data16
pop
dec
mov
add
fsubs
push
xchg
and
repnz
das
ja
adc
in
loope
jl
push
push
mov
mov
push
add
sti
aad
mov
inc
mov
popa
cltd
mov
dec
pop
cmc
out
pusha
push
mov
and
in
insl
shl
sbb
hlt
mov
shlb
push
mov
jg
dec
aas
scas
dec
scas
pop
or
pushf
repz
xor
std
imul
aad
js
sbb
filds
dec
in
and
mov
es
in
lahf
xor
jno
cmp
pop
adc
mov
imul
movd
push
addl
pop
cmp
fcompl
pop
aam
adc
jle
stos
inc
pop
adc
push
das
popa
aas
mov
int
scas
mov
pop
push
add
addr16
or
incb
mov
test
sub
mov
inc
jl
cmp
cmp
jl
jg
leave
mov
or
jo
movl
fwait
dec
cmc
sti
xchg
clc
inc
shr
mov
jle
pop
xorb
push
or
push
inc
fwait
cwtl
in
shr
inc
jp
adcb
mov
imul
push
ret
fcomps
call
and
add
push
aas
in
pushf
mov
in
jge
and
test
add
in
ljmp
cmp
or
add
jp
xchg
dec
enter
outsl
and
call
repnz
and
inc
sbb
and
add
inc
cmp
adc
or
fldt
add
and
mov
pop
ds
adc
aam
push
adc
ljmp
out
repz
mov
mov
lds
cmp
lods
andl
inc
clc
inc
lcall
dec
mov
jmpw
roll
push
inc
push
arpl
mov
adc
cmp
fdivs
jle
jno
push
cmpsl
cmp
lret
mov
lret
and
cltd
mov
out
mov
test
roll
js
lret
dec
loopne
test
call
daa
aad
lret
cmp
cmp
pop
lret
mov
hlt
dec
add
push
cmp
or
cltd
and
fs
dec
sbb
imul
fcmovne
push
and
adc
and
cmp
stos
pop
mov
pop
xor
adc
mov
push
cmp
add
jno
add
mov
sbb
xorl
add
rorl
movsb
inc
fildll
loopne
mov
sbb
add
orb
jg
jns
sarb
les
xor
mov
sahf
subb
mov
push
sub
gs
idivl
pushf
rclb
jle
cmp
mov
shrl
xchg
arpl
lcall
adc
pop
xchg
mov
lds
pop
lods
add
inc
jge
fcomps
in
adc
fimull
add
pop
in
imul
jno
and
push
and
pushf
mov
jb
push
push
cmp
out
lahf
incb
mov
sbb
pop
loope
inc
cmp
sbb
lret
mov
mov
cltd
lcall
ss
je
rorb
and
adc
xchg
cmp
add
sti
into
push
pop
pushf
lods
aaa
loopne
inc
cmp
outsl
outsl
jns
hlt
jmp
popf
pop
jmp
addr16
jb
and
mov
xor
movsb
lahf
out
out
fwait
xor
push
shr
cmp
and
stc
cmpsl
xchg
xor
loope
lock
cmc
mov
cmp
rcll
enter
add
push
stos
je
xor
subl
call
mov
adc
adcb
pop
aas
pop
and
pop
pop
pushf
lret
out
cltd
insb
cld
enter
pop
adc
sub
les
sbb
mov
outsl
add
xchg
mov
mov
ljmp
fcoms
pop
jbe
jne
idivb
jl
jg
pop
add
lret
ss
or
ret
inc
and
or
add
add
or
inc
cmp
push
xchg
hlt
hlt
add
adc
adc
inc
mov
mov
addb
lods
mov
arpl
mov
xor
popf
ljmp
pushf
jne
cli
test
movsl
mov
testb
dec
insb
jbe
gs
enter
bound
or
ret
add
xchg
dec
subb
push
test
push
notl
jge
push
jae
mov
imul
jecxz
pop
bound
lods
mov
push
shll
mov
and
mov
mov
das
test
mov
xor
push
outsb
test
or
cmc
clc
dec
cmpl
cs
aam
jp
enter
inc
jg
sub
fsubr
sub
cmp
shlb
or
in
push
push
fwait
loopne
js
dec
bound
pop
push
sub
xchg
repnz
jb
add
push
shl
mov
or
scas
pop
add
jge
dec
out
push
mov
add
push
inc
cmpsb
jnp
das
cmp
test
pop
xchg
inc
fnsave
in
stos
and
adc
cmpsl
scas
and
stos
sub
mov
xlat
hlt
iret
mov
push
add
imulb
leave
fwait
push
clc
xor
mov
in
ja
scas
jecxz
sarl
mov
cld
and
jnp
pop
inc
mov
iret
sub
into
mov
pop
sub
scas
push
movsl
je
lds
ss
sub
pop
testl
pop
in
cltd
out
movsb
pop
xchg
sub
clc
arpl
and
jl
int3
lock
es
pop
js
lds
lods
sbb
dec
adc
dec
icebp
scas
add
loopne
or
stos
fldcw
jnp
imul
add
imul
fs
sub
lahf
out
sbb
xchg
mov
sarl
xchg
mov
jnp
adc
mov
pop
repnz
pop
cmp
or
dec
inc
lret
cs
and
ret
mov
clc
push
aam
push
cmp
sub
lret
pop
inc
scas
adc
mov
test
into
push
pop
lds
push
mov
dec
or
mov
iret
push
mov
pusha
cmp
cmpsb
xchg
add
adc
add
jp
jp
pop
ret
movsb
lock
xlat
jb
mov
test
cmp
aam
xor
int
mov
sbbl
outsl
in
add
fcompl
adc
adc
jl
pop
xor
test
and
push
push
mov
mov
stos
es
mov
mov
pop
or
sahf
xchg
push
lret
mov
jae
ds
mov
sub
ljmp
push
cmc
or
ret
push
push
in
inc
sbb
fnstenv
push
shlb
xlat
gs
imul
scas
mov
out
dec
jno
push
pop
scas
xchg
into
add
mov
adc
out
data16
push
imul
add
icebp
mov
cmp
out
leave
hlt
mov
mov
ret
scas
inc
jns
leave
dec
inc
ret
cmp
jecxz
or
imul
adc
ret
and
loopne
or
pop
cltd
or
add
fstpt
pop
sbb
loop
mov
add
aas
inc
stos
sub
inc
stc
outsb
cmp
jb
js
push
fdivs
pop
leave
xchg
mov
xchg
mov
movsl
mov
inc
ret
popa
add
fisubrl
inc
int
mov
scas
in
mov
or
jno
les
lea
divl
and
sub
xchg
add
sub
pop
mov
insb
cltd
sbb
lret
push
pop
xor
adc
imul
pop
rcl
and
es
push
adc
insl
in
jecxz
daa
subl
jecxz
test
repnz
aas
popf
push
ds
les
lret
dec
leave
sub
sahf
push
test
or
cmp
into
push
push
das
pop
out
push
add
in
rcll
inc
jmp
gs
push
scas
mov
cmpsb
mov
mov
jne
dec
add
loopne
pop
pop
in
stos
adc
out
jb
or
cwtl
je
ss
jge
dec
popa
push
xor
xor
scas
add
xchg
cmp
outsl
mov
inc
jge
or
mov
xchg
stos
push
leave
hlt
lret
sbb
adc
test
or
pusha
mov
loop
lea
lods
cmp
mov
jmp
adc
adc
sbbl
inc
shll
in
fidivrl
je
sbb
cld
jecxz
adc
pop
and
lods
pop
es
sub
mov
xor
cwtl
pop
cs
aam
pop
jbe
lcall
xchg
add
shll
js
and
test
jecxz
push
gs
mov
ja
pop
fs
ret
dec
nop
movsb
call
pop
pop
mov
icebp
fsub
cmp
pop
ror
adcb
insl
sbb
fs
test
fldcw
and
jg
lret
negb
movsb
imul
and
loope
cli
jae
aam
push
xchg
shlb
stos
xor
mov
ds
xor
mov
sbb
add
mov
xchg
shrl
cwtl
and
jmp
in
imull
add
popa
sub
popa
mov
insl
mov
add
push
xchg
ret
out
imul
mov
cmp
ror
cmp
xlat
jo
xor
shrb
adc
dec
sarb
out
pop
push
lret
daa
cmp
sbb
rclb
ret
sarl
iret
pop
cmp
pop
aad
test
mov
or
mov
cmp
push
fxch
dec
in
jg
mov
dec
fstps
hlt
loopne
les
dec
cs
cltd
dec
mov
or
jle,pn
int
lea
in
dec
pop
mov
rcrl
sahf
aas
xchg
push
mov
mov
lods
dec
in
inc
bound
and
inc
mov
loopne
out
out
fucomp
dec
decl
mov
push
outsb
movsl
mov
sahf
xor
and
test
or
sub
xlat
pop
imull
test
jmp
or
jl
lock
cs
pop
cli
push
jecxz
movsl
cmpl
jae
fs
fwait
sbb
pushf
nop
imul
mov
std
je
push
ss
push
and
test
ds
push
cmp
subb
mov
mov
mov
mov
or
xor
rcll
stos
push
rcrb
int
fnstcw
xor
xor
adc
jb
and
mov
sbb
popf
loope
ljmp
inc
ret
xchg
mov
mov
adc
cld
addl
cmp
or
mov
cmp
dec
stc
in
add
inc
sbb
aam
cltd
roll
xor
xlat
mov
pop
jle
adc
scas
cmp
test
mov
repz
lods
xchg
rolb
and
add
inc
ss
cli
not
mov
lods
das
popa
enter
rol
outsb
lret
cmp
mov
push
cld
pop
add
inc
lahf
push
dec
lcall
lea
aas
lea
jne
cmp
std
adc
loopne
outsl
mov
jno
pop
mov
mov
push
addr16
sahf
adc
cmpsl
inc
jnp
js
sbb
aad
inc
div
pop
dec
in
adc
rorl
jno
xor
mov
push
or
jmp
jg
arpl
mov
inc
in
jno
push
cltd
sahf
jecxz
and
xor
out
pop
das
xor
dec
xchg
jbe
add
jb
scas
fistpll
call
or
push
cltd
ret
jmp
mov
adc
sbb
jo
aas
mov
rclb
jnp
cmp
pop
aad
cmp
jecxz
ror
pop
pop
add
cs
cmpsl
outsl
jb
xchg
inc
add
aaa
add
stos
mov
inc
repnz
jo
push
push
mov
dec
jg
inc
xor
out
sub
adc
and
outsb
mov
jmp
inc
gs
fldcw
and
mov
cs
pop
stc
test
mov
and
mov
jecxz
mov
ret
jp
movsl
fwait
sub
mov
cld
add
aaa
cmp
iret
pop
mov
sub
lret
pop
mov
mov
sbb
movsb
std
inc
fisubrs
jb
shrb
pop
leave
out
pop
mov
movsb
push
cwtl
stos
pushf
mov
xor
mov
stos
add
jecxz
pop
jnp
xchg
push
pop
iret
sbb
out
mov
adc
in
sti
or
and
shlb
cmp
push
and
lea
and
or
fwait
cmpsb
inc
rolb
inc
ds
push
add
popf
jno
fincstp
repz
dec
outsb
call
movsb
add
mov
pop
jne
insb
add
and
outsb
iret
cmp
jle
fstpt
dec
ljmp
cmp
sub
mov
fwait
add
dec
je
jo
lcall
popf
jmp
jae
push
cli
and
jnp
out
fwait
inc
les
pop
sub
call
pop
je
outsb
push
xchg
xchg
sarb
into
cmp
cmp
dec
xor
push
inc
xchg
pop
jno
xor
inc
lds
std
xor
fs
jle
sbb
fs
cmp
push
mov
aad
popa
pop
push
add
and
mov
cwtl
lock
outsl
cmp
call
lahf
cmp
xor
pusha
cmp
sub
jge
dec
ret
xchg
bound
loop
pop
aaa
lock
jb
xor
cltd
add
nop
scas
mov
test
das
or
jmp
sbb
mov
repnz
jmp
out
push
fldl
and
cmp
fwait
mov
or
jae
imul
xchg
dec
cmc
test
push
fstpl
pop
popf
mov
xlat
stos
je
lods
sub
mov
jecxz
and
sti
mov
cltd
or
shlb
inc
cmp
fs
or
add
mov
jl
sbb
add
dec
cwtl
movl
or
lea
xchg
mov
insb
xor
mov
call
or
test
pop
movsb
mov
mov
mov
roll
mov
jg
push
divb
or
or
pop
and
fisttps
push
in
stos
jnp
push
imul
sbb
fsubp
lods
outsb
testb
and
inc
cltd
in
mov
pop
xor
in
xchg
mov
or
adc
in
cmp
in
xlat
outsl
sub
mov
orb
xchg
mov
pmaxsw
mov
push
mov
repz
bound
dec
mov
mov
lock
sbb
xor
imul
inc
shrb
mov
or
and
mov
jae
xchg
fsub
mov
mov
xor
mov
push
stc
adc
gs
mov
push
es
jl
or
mov
sub
cld
mov
sub
test
cmp
lcall
jne
mov
pop
add
push
inc
out
push
fstpl
dec
jnp
dec
daa
dec
insl
or
mov
adc
xchg
cmp
cmp
iret
sub
stc
in
ret
mov
xor
stos
ret
sub
inc
in
std
test
mov
pop
add
es
push
jl
dec
sub
and
loop
out
mov
mov
fdiv
daa
nop
mov
pop
cmp
cwtl
mov
cmp
addl
sbb
lahf
fucomip
cwtl
xchg
stos
push
cltd
add
sbb
dec
cmc
rcr
inc
je
repnz
stos
xchg
xchg
call
ficomps
jns
ret
dec
stos
add
push
adc
dec
jbe
pop
into
or
into
mov
cmpsl
pop
loope
pusha
or
dec
inc
incl
xchg
xchg
int3
les
dec
aas
push
cmc
icebp
and
loopne
push
dec
scas
aaa
jl
lea
shll
add
pop
xchg
or
ds
sub
fs
leave
pop
jb
fidivrl
lea
xchg
dec
mov
mov
hlt
mov
mov
scas
cmc
mov
add
das
xchg
cmc
lock
cmp
or
icebp
movsl
fs
into
bnd
push
mov
pop
sub
pop
out
inc
leave
xlat
pop
xor
push
enter
cmp
jg
adc
inc
mov
xchg
dec
xchg
dec
leave
ja
sbb
xor
mov
rclb
mov
push
dec
adcb
and
rcrb
cmpsb
dec
enter
push
mov
fistps
xor
lds
xor
loopne,pt
dec
loop,pt
addl
and
shlb
mov
stos
xchg
inc
call
xor
cmp
lock
sti
outsl
outsb
out
sbb
xchg
adc
mov
fsubl
es
inc
mov
mov
jg
dec
dec
ljmp
inc
adc
dec
sbb
shl
cli
xchg
out
mov
push
cmp
lods
sub
push
outsb
js
add
jg
out
jae
imul
push
repnz
hlt
push
push
in
rolb
dec
hlt
adc
out
add
pop
lods
int3
movsl
ror
gs
cltd
or
mov
lret
mov
mov
sub
push
js
sub
hlt
dec
ret
push
nop
adc
repz
int
cmc
shll
aaa
outsb
out
mov
fcompl
jge
mov
push
test
lds
dec
nop
ret
clc
faddp
push
cli
leave
movsb
sub
push
and
outsl
out
fmuls
je
xchg
aam
xchg
ljmp
add
into
push
mov
mov
cwtl
divb
mov
push
mov
jl
rol
jae
rcrl
test
cmc
aam
cmpsb
ret
daa
outsl
pop
inc
add
fdivl
mov
sub
mov
lods
and
push
pop
les
mov
and
cld
push
popa
cmpsb
je
inc
enter
bound
xchg
inc
sbb
outsl
mov
jns
addl
es
rcl
pop
pop
inc
inc
insl
mov
pop
adc
sub
xchg
dec
adc
test
test
pop
sbb
mov
push
push
cld
pop
lods
dec
and
mov
scas
das
andb
lret
loope
and
daa
aam
xlat
insb
mov
xchg
lcall
jle
mov
or
rclb
in
bound
das
inc
dec
mov
mov
dec
arpl
repz
mov
adc
jl
xchg
into
pop
out
cmpsl
sub
in
adc
push
ja
push
sub
sbbl
fisubs
mov
add
sub
pop
test
das
and
sbb
add
pusha
aam
sbb
cli
seta
lret
mov
inc
pop
fisubs
cmp
mov
jno
fcmove
movsl
fsubs
mov
sbb
aam
lea
fstps
or
and
jo
or
sahf
and
test
dec
mov
sub
fadds
sub
push
mov
pushf
or
shrb
jne
cmpsb
sbb
jne
in
cli
lods
xor
pusha
sbb
clc
pushf
outsl
mov
ljmp
jne
jp
fcoms
push
pop
insl
int
push
call
pop
lahf
cmpsl
in
leave
push
jg
mov
xchg
arpl
ja
inc
mov
and
pop
in
fldl
repnz
jg
lods
out
jns
xor
mov
shlb
and
das
inc
inc
iret
mov
fwait
mov
sti
js
movsl
imul
cld
push
push
jl
lock
stos
int
xchg
jmp
xor
sahf
dec
push
pop
mov
es
push
mov
xchg
rcrl
xchg
push
adc
lods
shll
dec
mov
push
out
inc
fucomp
push
and
sbbl
std
add
or
and
lods
ss
mov
xor
sub
int3
sbb
mov
popf
test
sbb
jge
mov
cmp
mov
stc
mov
xchg
fcomip
clc
enter
mov
cmp
add
inc
sub
mov
xchg
lahf
mov
push
and
pop
in
adc
jb
cmpsl
stos
fldenv
arpl
cmc
ljmp
xchg
int3
ljmp
mov
out
bound
mov
cs
pcmpeqd
sti
push
lahf
jae
insl
ds
hlt
adc
adc
sbb
addr16
and
ljmp
out
aaa
rcll
or
lods
sub
jecxz
aam
mov
adc
sub
test
ljmp
fmuls
call
push
cwtl
std
and
mov
aas
jecxz
push
or
xlat
cwtl
je
fistpll
push
jecxz
push
jnp
inc
pop
and
and
and
adc
pop
cs
iret
xchg
adc
scas
or
ja
fistpl
dec
sub
and
sub
insb
rcrl
popf
fmuls
mov
jl
testb
sahf
ret
jo
cwtl
or
iret
lret
jmp
mov
sub
mov
cmpsb
popf
test
pop
jmp
pusha
mov
jae
les
test
adc
stc
cwtl
jns
lds
outsl
jns
cli
je
inc
bound
inc
imul
mov
cli
idivb
popa
in
jb
ss
cli
push
in
sar
lods
and
cli
pop
mov
dec
sbb
sti
mov
mov
jp
dec
cmpsb
mov
dec
insb
dec
dec
push
js
mov
or
add
and
mov
negl
dec
pushf
inc
xchg
flds
xadd
inc
mov
ss
jbe,pn
and
inc
xchg
push
pop
lcall
add
fistl
jno
jbe
dec
fldl
jbe
stos
inc
cmpsl
adc
pop
sub
jmp
mov
fbstp
inc
xor
adc
mov
jb
addr16
into
lock
jl
pop
dec
mov
adc
test
int3
inc
cmpsl
pop
sbb
dec
push
sbb
int3
les
pop
xor
movsb
xor
fs
jp
mov
movsl
dec
sti
movsl
mov
mov
gs
mov
push
pop
mov
sti
xchg
das
sbb
jg
inc
mov
arpl
rcrl
cmpsb
shll
les
cwtl
xor
push
mov
jge
lret
mov
ret
icebp
push
stos
sti
mov
in
lahf
pop
out
xor
xor
lea
xor
push
lahf
or
imul
mov
je
outsb
out
mov
adcb
mov
nop
jmp
aas
xlat
xorb
and
cld
mov
fnstenv
sbb
ficoms
push
enter
scas
je
movsb
cmpsl
xor
mov
and
push
inc
push
lds
test
ja
xchg
in
fistpl
scas
inc
pop
les
rcll
push
sbb
push
mov
mov
push
scas
in
mov
loope
or
fistps
jg
jmp
imul
and
pop
ja
je
stos
call
add
pop
into
stc
inc
add
mov
in
leave
and
outsb
mov
in
ss
sbb
add
out
sub
insb
hlt
push
es
and
xor
inc
fs
push
adc
aam
add
xor
add
iret
and
test
repnz
sub
xchg
or
dec
fsubl
mov
jae
js
fmul
stos
xchg
in
xchg
mov
adc
sub
push
insb
xor
sub
mov
in
sub
push
pop
lret
add
cmpsb
divb
mov
jo
jo
in
mov
dec
scas
inc
xor
pop
fnstsw
cwtl
stos
aaa
push
mov
and
mov
mov
insb
call
pop
aad
push
sub
leave
int3
adc
int
std
cs
inc
aad
fisttpll
call
and
push
psrad
jl
xchg
mov
sbb
loopne
jg
shrl
xor
jmp
out
in
cld
call
das
sahf
push
int
pop
std
xchg
sbb
mov
xchg
andl
hlt
nop
es
xor
dec
cmp
pop
pusha
inc
hlt
inc
imul
outsb
lcall
or
sahf
mov
jmp
mov
mov
fisttpll
push
insb
pop
shrl
sbb
mov
js
std
imul
movsl
popa
adc
popa
ljmp
dec
rcr
out
fs
enter
stc
out
xor
pop
ljmp
test
popf
aas
cmp
inc
mov
out
inc
mov
repnz
mov
dec
or
inc
and
fcmovnb
and
xchg
dec
int
cmp
ja
outsb
jle
call
and
sarl
lahf
pop
mov
ss
jecxz
scas
test
push
push
mov
push
jge
mov
loop
xchg
outsb
or
and
nop
mov
fdivrp
adc
pop
das
iret
mov
fs
movsb
cmpsb
push
stc
arpl
or
loope
fwait
dec
push
outsl
mov
sub
loope
jo
data16
push
add
icebp
pop
push
leave
outsl
lahf
xchg
cmp
add
in
xchg
das
popf
stc
movsl
scas
pop
adc
mov
cmp
das
jge
js
fcoml
ror
js
lods
dec
cld
pop
and
mov
and
cmp
mov
aam
and
pop
dec
rcll
popf
xor
xchg
and
out
leave
lret
gs
push
fsubl
push
loop
adc
mov
dec
or
lcall
mov
dec
fwait
cltd
outsl
dec
pop
push
or
mov
arpl
dec
or
xor
call
movsl
es
cld
push
mov
sub
mov
add
push
mov
inc
stos
jl
pop
inc
jb
push
cld
rcl
sbb
mov
xchg
enter
or
arpl
iret
sbb
mov
outsb
and
mov
js
loope
cmp
mov
mov
jl
es
adc
ja
sub
push
mov
ficoml
sarb
dec
mov
test
add
lcall
pop
lods
pop
lahf
or
inc
jo,pt
cwtl
call
arpl
clc
popf
or
scas
jne
lods
pop
loopne
loopne
cwtl
and
fsubrl
rorl
fisubs
or
sub
iret
dec
test
mov
and
popf
addb
gs
iret
xor
push
in
clc
or
adc
dec
xchg
std
lret
pop
sub
bound
or
std
cmp
and
mov
push
cmp
cld
rcrb
in
stos
dec
jg
sbb
lods
or
pop
mov
adc
mov
repnz
push
call
cli
adc
es
jecxz
adc
jecxz
arpl
lret
insb
loop
add
insl
stos
mov
call
data16
add
les
scas
push
push
fwait
movsb
and
sub
dec
jns
add
or
pop
push
sbb
mov
jbe
scas
les
pop
scas
inc
loop
movsb
push
push
mov
mov
loop
mov
push
sbb
int
test
push
ljmp
cmp
xchg
orl
jle
jmp
scas
xchg
mov
sbb
pop
jmp
push
dec
sbb
iret
lods
sarb
dec
das
sub
das
cmp
sbb
jnp
ja
stos
add
and
sarl
mov
scas
push
pushf
mov
in
hlt
les
in
aaa
mov
jmp
int
push
repnz
mov
movsl
aas
add
sub
addl
mulb
fsubrs
hlt
mov
addl
xor
and
insb
sub
jl
divl
aad
fcoml
loope
test
dec
popa
in
sbb
push
push
mov
xorb
mov
std
dec
pushf
sbb
jmp
or
fildll
enter
adc
xchg
out
je
dec
mov
ja
add
pop
mov
pop
sbb
push
outsb
inc
push
adc
fsubs
stos
daa
mov
xchg
cmpsb
js
add
xchg
imul
ljmp
or
mov
icebp
mov
pop
arpl
jns
pop
dec
mov
adc
iret
and
add
add
mov
nop
mov
movsb
push
sbb
sub
mov
dec
imul
iret
xor
out
orl
jge
or
mov
enter
movsl
inc
shll
leave
pop
and
xchg
xchg
jp
frstor
jno
cmpsl
mov
out
xchg
ret
sbb
movsl
xchg
mulb
or
jg
pop
mov
cld
scas
out
popa
arpl
mov
cmpsb
push
xor
push
cmp
lock
dec
add
out
out
sahf
and
and
xchg
lods
sbbb
cmp
or
out
hlt
pop
decb
jbe
cmc
lods
jge
lret
jns
cmp
push
xchg
cwtl
daa
scas
jns
and
sbb
cmpl
cmpsl
jp
pusha
adc
sub
and
aam
adc
add
mov
addr16
out
inc
fsts
aam
adc
adc
das
cmp
jp
dec
inc
daa
add
push
mov
jp
jp
call
cmp
cli
das
mov
ds
out
shll
push
and
and
xchg
ja
out
aaa
lret
aad
inc
icebp
mov
lret
or
lds
or
test
inc
les
jns
fdivr
xlat
jl
xor
sti
aas
pop
inc
outsl
ja
push
add
rcrb
int
pop
push
stos
fimull
aad
and
mov
inc
xchg
fwait
out
js
push
stc
arpl
mov
iret
xlat
imul
rcrb
pusha
mov
mov
xor
test
test
test
or
addr16
subl
stc
in
inc
add
sub
inc
ljmp
jb
lcall
xchg
mov
dec
mov
push
push
out
push
lahf
dec
aam
sub
mov
lret
clc
es
dec
outsl
iret
or
mov
cltd
push
fcompl
mov
divl
xor
add
mov
idivb
mov
out
dec
cmpl
repnz
aaa
mov
out
pusha
mov
fdivr
cli
addr16
popa
cwtl
popf
scas
and
je
sbb
add
adc
sti
mov
jb
adc
imul
sub
sub
clc
dec
sbb
mov
cvttps2pi
es
lahf
pop
mov
hlt
adc
pop
push
add
inc
pop
sbb
lret
mov
mov
mov
mov
pop
mov
aaa
int3
pop
adc
mov
repz
ja
shlb
push
ds
out
cmpsl
and
fiadds
sub
mov
insl
es
jnp,pn
lahf
ficoml
adcb
es
jne
push
repnz
xchg
mov
mov
xchg
iret
into
mov
pusha
popf
inc
pushf
arpl
pop
push
imul
enter
jns
repnz
and
push
std
mov
or
ljmp
and
xchg
data16
and
cmpsb
xchg
push
xchg
mov
xchg
jne
jae
sbb
mov
sub
out
xlat
fcomps
cmpsl
lret
and
shlb
lods
sar
sti
pushf
adc
imul
push
inc
pop
or
dec
ds
push
add
xchg
ror
dec
jg
sbb
mov
fadd
lods
mov
push
push
loope
mov
push
cmp
sbb
ds
adc
dec
push
sbb
daa
stos
mov
add
out
loopne
adc
cltd
cwtl
sub
mov
pop
push
jnp
bound
cmp
pop
inc
xchg
fs
mov
repnz
test
cltd
cmp
jmp
in
mov
pop
push
adc
cs
daa
pshufw
mov
or
jmp
ja
push
or
cmc
xchg
sbb
dec
add
xor
decb
mull
scas
jae
shrl
mov
add
pop
shll
sub
add
mov
mov
adc
jle
insb
fwait
xchg
and
mov
aad
inc
js
cmp
inc
aaa
xchg
test
cs
mov
ljmp
outsl
test
std
mov
cmc
fcoml
inc
add
sbb
or
jo
xor
dec
mov
cs
in
les
pop
mov
jno
sbb
das
sarl
jp
jge
xor
daa
inc
jecxz
xlat
mov
cmpl
jbe
test
mov
pop
mov
ret
js
cmc
mov
pop
scas
pop
fdivr
push
test
sub
fisubrl
mov
push
xchg
in
cwtl
sbb
jle
inc
pop
ror
jae
sub
lcall
cmp
outsb
xchg
mov
lods
loopne
shl
inc
popa
ja
rol
popa
pop
test
push
lds
dec
ret
dec
int
sar
cmpsb
mov
insl
sub
ret
movsb
shrl
in
sub
imul
popf
movsb
add
mov
adc
ds
adc
fadd
jg
fs
add
mov
jno
sbb
sarb
repz
dec
sbb
sbb
cmpb
test
mov
push
mov
and
stc
int3
push
adc
mov
ret
les
pop
in
lods
pop
lret
ret
cld
push
inc
inc
mov
js
lds
push
dec
addb
les
xchg
xor
xor
sarb
sub
loopne
fildll
sbb
pop
and
loop
aaa
cmp
push
dec
mov
or
dec
add
stos
cli
test
ret
mov
test
stos
xorl
push
push
mov
jno
jno
jae
xchg
mov
and
mov
mov
jmp
out
jp
mov
gs
int
mov
aam
adc
dec
push
out
inc
dec
test
push
push
hlt
in
cmpb
clc
cmc
lcall
in
dec
mov
insl
sbb
xchg
mov
int
add
aam
adc
inc
jmp
popf
pushf
jbe
hlt
fdivp
add
pop
lahf
mov
cmp
jecxz
and
stos
pop
jb
ret
mov
cmp
xchg
fcomps
mov
jmp
in
cli
cwtl
jo
repz
jg
xchg
push
sbb
cmp
and
jbe
xchg
les
test
pop
ret
push
pop
sub
pop
test
int
aas
xor
addr16
mov
pop
iretw
dec
setg
lret
mov
fs
orb
mov
inc
cmp
push
push
daa
pop
int
dec
xor
cmp
jbe
inc
adc
loopne
sub
sub
inc
fld
push
xlat
outsb
notl
xor
mov
ret
ja
or
outsl
push
mov
dec
inc
scas
jb
rol
nop
leave
dec
daa
rcr
out
fldl
xchg
sub
xchg
shll
inc
enter
dec
enter
and
dec
or
push
push
pop
inc
xchg
push
ljmp
sbb
jne
negb
add
cmp
cmpsb
inc
xchg
cmp
pop
add
cmpsl
xor
xor
mov
push
sbb
test
xor
mov
subb
lods
jecxz
mov
jp
or
jbe
mov
mov
xorb
leave
sbb
ljmp
scas
sub
fsubrl
lods
dec
scas
cmp
movsb
mov
push
test
cwtl
scas
or
cs
xor
icebp
in
add
aaa
mov
xor
adc
xchg
jbe
mov
xchg
mov
dec
mov
aaa
jo
xor
adc
cs
imul
inc
lcall
leave
repnz
and
push
and
mulb
adc
adc
push
jmp
jmp
mov
or
sti
dec
adc
dec
mov
adc
nop
xor
movsl
loopne
aam
mov
fstpl
cmp
sbb
rorl
addr16
cmp
mov
mov
fbld
shrb
xor
push
mov
push
enter
xlat
and
mov
adc
push
cmpsb
fmulp
and
fnstenv
insb
movb
sub
mov
dec
xchg
add
mov
sbb
ss
test
dec
fdivrs
xchg
jo
inc
jne
jle
daa
sbb
dec
jmp
sub
pop
xor
clc
ret
push
and
pop
jns
dec
stos
imul
mov
or
cmp
shll
mov
sub
in
rcll
es
pusha
ret
fwait
pushf
push
call
or
dec
sub
mov
jns
outsl
adc
int
mov
push
add
mov
xor
clc
cmpsb
imul
jbe
mov
jne
sbb
sub
jle
shrb
mov
mov
and
jge
mov
mov
xchg
mov
push
clc
fs
or
fiaddl
call
rol
mov
jo
bound
xlat
sub
xor
mov
mov
xor
out
sbb
popa
imul
jg
sbbb
lret
dec
pop
leave
nop
insl
jecxz
mov
mov
movsl
movsl
sub
rcr
in
les
outsl
out
les
enter
sbb
and
dec
sbb
xchg
push
add
pop
mov
xor
jo
mov
fwait
mov
jecxz
fucomi
push
push
negb
loop
adc
popa
jmp
pop
jns
movsl
sbbb
xchg
int
xchg
adcl
adc
stos
bound
jp
cli
scas
pop
fisubrs
rorl
mov
pushl
pusha
mov
push
sub
mov
repz
mov
cmp
hlt
enter
roll
lods
jnp
jno
push
imul
add
or
mov
outsl
ret
push
or
lret
cs
lea
push
bound
cmp
push
ljmp
add
test
mov
jbe
mov
sub
mov
ret
jno
lods
movl
lahf
test
or
push
jg
xorb
dec
outsl
je
jbe
mov
add
subl
dec
push
daa
mov
sti
int
mov
fsubl
sahf
aad
outsb
push
pop
and
or
call
lock
dec
sti
sbb
add
push
pop
nop
mov
arpl
and
add
inc
stc
inc
push
jo
lea
sbbb
stos
sub
sbb
and
popa
cltd
das
jo
sahf
xchg
mov
inc
dec
repnz
sti
mov
shlb
xor
push
jl
movsl
dec
es
or
or
push
push
push
push
ds
movsl
filds
pop
push
push
fs
fucomp
push
test
mov
cld
dec
dec
push
xor
sbb
cmpsl
and
outsb
shrl
mov
stc
and
aam
pop
insl
out
rclb
xchg
popf
icebp
mov
js
xchg
fidivrl
je
jae
out
sbb
jge
adc
hlt
divl
ficoml
or
lods
dec
cmc
add
in
adc
sbb
out
mov
mov
in
inc
jg
outsb
dec
push
mov
adc
mov
jnp
push
cltd
sti
cmpsl
insl
imul
popf
aad
mov
lret
adc
mov
in
stc
in
jmp
add
adc
das
jb
mov
clc
adc
mov
stos
aad
pop
les
test
mov
and
inc
bound
lahf
add
push
jns
xor
pop
fldt
shll
out
jp
mov
outsb
inc
test
push
sti
sbb
mov
int3
out
ret
movsl
in
faddl
bound
pop
sti
sub
add
int3
fcomi
xchg
add
adc
inc
pop
scas
pop
mov
adc
xchg
cmp
enter
stos
mov
outsl
mov
test
push
mov
pop
adc
lods
lret
mov
out
inc
vpcmpeqd
es
int3
icebp
mov
mov
int
mov
dec
adc
lea
and
or
les
jecxz
push
mov
insl
add
in
movsb
fistpl
loop
in
int3
dec
std
fcoms
mov
push
sbb
scas
add
lds
outsb
xchg
pop
adc
jle
push
clc
cmp
jl
pushf
out
push
pop
out
push
ja
pop
loope
xlat
sub
stos
out
mov
aas
cmp
or
jb
mov
dec
sbb
loop
adc
in
push
jo
sub
lods
mov
insb
scas
adc
imul
jne
imul
xlat
iret
sbb
inc
and
jne
or
cwtl
lret
mov
imul
add
faddl
and
mov
jg
movsb
jbe
jbe
push
fistpll
xchg
daa
jge
lea
jle
mov
sub
les
in
out
pushf
and
pop
fdivrs
into
repnz
push
push
adc
test
cmp
in
or
adc
and
cmpsb
mov
jge
xor
mov
xchg
mov
jmp
jmp
inc
sub
enter
inc
rcl
and
fcmovnb
repnz
inc
pop
scas
out
cmp
xor
mov
sbb
pop
and
fcom
cmp
add
enter
pop
jbe
pop
cs
jb
test
push
testl
mov
or
dec
xlat
and
xchg
pushf
fs
pop
adc
cmp
pop
bound
aaa
inc
shll
es
jmp
xchg
iret
cmp
into
inc
testl
loop
lock
lret
into
push
cmp
cmp
xchg
jnp
and
xor
into
clc
mov
mov
ret
inc
rolb
sub
xchg
in
mov
repz
sbb
call
add
mov
repnz
add
cs
adc
arpl
stos
pop
adc
out
imul
pop
test
push
rorb
jo
sbb
lcall
sbb
jp
push
xor
rclb
dec
shlb
inc
jns
es
xor
jmp
arpl
movsl
test
push
sarb
hlt
std
mov
sbb
jo
mov
icebp
imul
and
ret
mov
outsb
outsl
ja
sub
into
cmp
and
xor
stos
mov
cmp
mov
loop
mov
aad
sbb
push
jo
mov
sub
into
and
cs
mov
pop
idivl
cmp
cltd
pop
mov
lahf
fdivr
mov
test
repz
nop
sub
or
sbb
test
lock
and
jge
sub
cmp
sub
insl
dec
mov
fsubrl
pushf
sub
or
mov
mov
mov
mov
push
inc
push
cmp
js
lods
jle
push
mov
dec
xchg
sub
push
and
jle
xor
pop
movsl
xchg
fadds
pop
rcl
mov
pop
pusha
adc
mov
add
sbb
mov
jecxz
add
sub
jno
pushf
cs
pop
nop
jno
das
pop
rorl
push
jl
loope
icebp
jle
aam
ficoml
rcl
out
cmp
imul
ljmp
jb
cmp
in
js
mov
cltd
test
stos
cmc
movb
aad
sub
pop
push
inc
mov
sbb
push
insl
xchg
dec
int
mov
out
mov
iret
sub
leave
shl
cli
mov
inc
mov
jne
mov
mov
jmp
fs
iret
jecxz
and
sub
enter
cld
ja
sub
lahf
xchg
inc
xorb
or
sbb
insl
call
das
sub
fsubp
in
jle
cltd
fbstp
mov
lods
xchg
xchg
inc
lret
lea
cmpb
in
xor
mov
shlb
cs
aad
mov
stos
mov
cmp
ja
lea
jb
dec
fs
xor
jbe
sbb
and
pop
push
and
sbb
cmpsb
insb
pushf
jno
sbb
daa
fs
cmpsl
push
jae
push
pusha
cli
mov
and
pop
sbb
push
jno
cmp
in
stos
cmp
jae
inc
xchg
loopne
lea
ja
jge
mov
outsl
lret
je
shll
sarb
test
xchg
leave
add
movsl
dec
lcall
cmp
popf
inc
pop
push
and
cwtl
xchg
bound
or
xchg
fsubrs
mov
out
js
rcrl
andl
pop
pop
outsb
push
cmc
js
shll
inc
push
push
test
or
jl
aas
jp
and
add
xor
scas
inc
mov
xchg
je
andl
push
jbe
xor
lea
and
xchg
test
mov
sub
and
js
rorb
push
out
or
cmp
jnp
xchg
pop
sub
adc
dec
cld
aad
movsb
pop
or
pop
lods
popa
ss
es
sbb
fadd
inc
addb
xchg
rol
push
fcompl
insl
and
pop
nop
mov
out
or
mov
sbb
sar
xchg
cmp
bound
push
test
push
xor
add
cmp
cmp
sbb
ds
andl
mov
dec
xchg
and
push
xchg
mov
sbb
lahf
rcll
lods
sti
sti
orb
movsl
push
dec
adc
aad
push
and
cltd
push
idivl
cmp
mov
es
movsl
sahf
rcrb
xchg
lret
inc
mov
scas
add
cmp
rorl
add
daa
testb
jp
push
rorl
addr16
dec
dec
mov
dec
jl
fsubrs
push
inc
cmc
adc
out
cmp
cmp
pop
push
loop
fstpl
push
testl
dec
aas
and
inc
ja
movsl
xor
loopne
dec
jge
fnstsw
cld
pop
pop
jecxz
dec
sti
mov
mov
add
cmp
mov
adc
testb
lock
dec
sbb
push
inc
scas
mov
test
cmp
call
incb
pop
cld
inc
loope
add
jo
test
sbb
add
lods
ficomps
aas
insb
or
out
jmp
leave
mov
dec
jmp
dec
pop
add
push
push
loop
xor
push
dec
cmp
addr16
aam
inc
push
fimuls
jmp
addr16
scas
stc
pop
scas
aam
mov
xchg
scas
shlb
loope
cwtl
enter
lahf
sub
maxps
xchg
aad
push
xchg
sar
cmc
int
pusha
movsl
mov
loopne
lods
pop
orl
pop
cmp
mov
daa
rcrl
enter
add
lods
sub
jne
scas
adc
dec
inc
enter
cmp
addl
inc
sbb
or
loope
mov
and
into
cltd
lret
push
aad
les
dec
sub
daa
jmp
jns
fcoml
jae
pushf
add
mov
pop
lret
inc
sti
loop
fstps
vdivsd
mov
push
fsts
mov
test
out
andb
iret
xor
mov
sarb
and
inc
and
sbb
adc
mov
shlb
mov
pop
add
mov
dec
or
cmc
adcb
pop
jno
pop
mov
lret
sub
fisubl
sub
push
jmp
xor
jge
cmpsb
outsl
pop
jns
xchg
icebp
outsb
cmp
push
adc
jns
xchg
xchg
ja
cld
pop
push
repnz
xchg
xor
pop
adc
imul
adc
push
cli
shlb
pop
xchg
outsb
in
movsb
imul
jg
dec
lods
repz
mov
ljmp
mov
std
nop
out
in
push
insl
mov
ljmp
call
cmp
push
pop
sub
and
pop
stos
pop
iret
mov
xchg
lret
adc
add
mov
xchg
mov
fnsave
pushf
clc
inc
shrl
inc
push
test
nop
jae
push
mov
sti
sub
jmp
inc
push
push
cmpsl
sub
jnp
cltd
cwtl
jl
aas
hlt
mov
add
dec
xor
ret
fidivrs
ret
dec
stos
or
mov
fwait
mov
jno
sahf
xchg
pusha
xlat
outsl
pop
divb
hlt
incb
inc
stos
repz
das
cld
addr16
movsb
loopne
adc
fcompl
mov
adc
sub
fdivl
lret
iret
xchg
xor
nop
sub
dec
je
xor
arpl
in
mov
mulb
in
jbe
mov
push
pop
stos
or
fistl
fsubrs
inc
imul
push
jbe
xor
out
fcomps
jbe
sbb
movsb
jl
xchg
cs
xchg
cltd
sub
fstps
in
add
pusha
rorb
subl
sub
fistps
lods
test
or
pop
scas
jmp
adc
call
inc
jbe
mov
mov
xorl
sub
jno
addl
jns
sahf
clc
mov
sub
jg
in
testb
xlat
and
fiaddl
cmp
mov
push
int3
int3
cmp
dec
xchg
inc
movl
sbb
pop
pusha
shrl
inc
lret
js
stos
xor
leave
and
mov
into
lret
in
gs
mov
sub
add
sbb
adc
mov
dec
pop
xor
jecxz
pop
dec
fbstp
cmp
pop
cmpsb
lret
repnz
add
sbb
sub
popa
inc
lcall
in
dec
fstpt
mov
mov
scas
aas
jnp
stos
clc
adc
pushf
sarb
addl
mov
cmp
add
call
xorb
push
fs
insl
dec
lds
add
xchg
jbe
xchg
das
lods
dec
pop
icebp
push
test
mov
xchg
pop
sub
je
push
pop
mov
inc
pop
mov
mov
syscall
in
gs
js
lds
fisubrs
mov
adc
lahf
scas
loop
pop
out
or
loop
ret
pushf
and
movsl
ds
jo
jno
js
out
jns
add
mov
mov
mov
data16
popa
leave
in
jle
loop
stos
mov
xor
das
mov
pop
movsl
test
in
shl
shrl
push
ss
jmp
xlat
mov
int
in
pop
lahf
inc
shlb
push
out
inc
sbb
jbe
insl
dec
rcll
xchg
sub
xor
pop
sub
sbb
stc
add
out
addl
stos
dec
mov
in
inc
cmpsb
ja
mov
addr16
fistl
call
xchg
aas
js
sub
scas
pop
std
or
sbb
jno
rol
stc
addr16
cmp
add
lds
mov
or
pop
xor
ljmp
loope
lds
int
sub
aad
cmp
inc
mov
sahf
jge
sti
cmp
jae
push
jmp
pop
xor
bound
nop
add
in
jg
pop
movsl
flds
pop
loopne
out
jmp
mov
push
inc
rorb
cli
int3
dec
shrb
mov
cs
enter
insb
xor
rcrl
jle
lock
xor
mov
enter
push
lods
repnz
sbb
lock
and
push
jno
imul
xor
stos
mov
adc
fmul
test
lods
int3
mov
arpl
push
xor
je
or
cmpsb
icebp
mov
or
and
or
test
pop
mov
sub
pop
aad
out
movsb
imulb
adcl
push
loope
jnp
mov
sti
in
in
sbb
add
xchg
loopne
cmpl
cmp
inc
in
push
dec
add
mov
inc
push
fisubs
nop
sti
loop
inc
in
into
dec
jmp
out
jle
mov
shl
pusha
aam
fs
outsl
sub
popf
sbb
rolb
cmpsl
mov
mov
xchg
push
push
ds
imul
subb
and
pop
jmp
cmp
jge
cld
xchg
sub
add
pop
mov
xchg
fsubrs
push
scas
add
fwait
mov
pop
mov
cmc
call
jns
aas
and
mov
mov
and
mov
push
pushf
in
js
or
push
cltd
sbbb
ds
or
push
sub
imul
movsb
jg
shlb
sbb
sub
jp
mov
fcmovnb
jg
testb
inc
or
aas
xchg
push
rcr
mov
and
rcll
push
movsl
outsl
pop
or
pop
xchg
cmp
daa
xchg
shrl
out
or
sbb
push
adcl
mov
mov
dec
and
and
add
dec
jmp
dec
pop
dec
mov
push
xor
sahf
sbb
inc
mov
jno
sub
loop
push
sub
mov
rorl
outsb
push
inc
sbb
insb
adcl
adc
and
ljmp
enter
nop
sub
push
in
mov
jne
pop
mov
roll
cmp
test
ret
lock
xchg
icebp
andl
popa
pop
test
fldt
sahf
add
add
lock
add
in
or
cwtl
jbe
test
sbb
sahf
adc
push
and
sub
enter
fs
fwait
sub
dec
incb
sbb
stos
mov
cmp
mov
inc
rcrl
mov
pusha
loopne
and
xchg
inc
push
ret
leave
out
push
cli
das
clc
mov
jbe
or
jae
sub
jecxz
adc
xchg
mov
lods
mov
mov
or
xor
ret
jmp
stc
sarl
pop
cmc
xchg
fs
shll
pop
inc
or
hlt
mov
cmc
lahf
stc
inc
jp
ss
and
push
cmp
aad
out
je
lods
pop
mov
pop
mov
nop
dec
movsl
mov
mov
pusha
mov
lret
mov
das
inc
mov
add
jp
out
movsb
mov
mov
sub
loope
test
hlt
jmp
push
imul
mov
dec
lea
rcrl
cmp
ss
std
mov
mov
pop
test
negb
sub
sub
fdivrl
push
pop
push
sahf
mov
push
mov
repz
loope
iret
jl
sti
std
cwtl
insl
test
insb
data16
cwtl
xchg
mov
and
push
and
jle
adc
push
addr16
cmpl
sahf
push
icebp
scas
lods
lock
pop
repnz
dec
mov
cltd
push
sbb
je
pop
or
add
lret
mov
pusha
cltd
outsb
pop
xlat
dec
jg
xchg
imul
pusha
sub
and
inc
loopne
cmpsl
cmp
jl
jp
imul
sub
in
test
mov
lcall
cli
sti
sbb
aas
inc
mov
add
and
ds
jne
mov
dec
pop
jne
jne
or
gs
pop
test
mov
mov
leave
js
scas
mov
sbb
cmp
data16
bswap
xor
clc
mov
sti
adc
lods
fadd
mov
mov
push
mov
push
xlat
lods
xchg
fucompp
loop
test
nop
icebp
mulb
mov
mov
sub
sub
out
aas
jnp
imul
add
xchg
inc
adc
lahf
movb
mov
sbbb
jge
rcrl
pop
jg
ljmp
cmp
mov
cltd
pushf
xchg
xor
stos
mov
jno
stc
sti
add
pop
shlb
clc
adc
pop
cmp
es
cmp
in
jb
sub
push
shrb
jmp
sub
enter
ds
orl
cmp
repnz
mov
cld
mov
out
cwtl
mov
sub
je
push
in
insb
pop
ss
cwtl
xor
fbld
add
int3
xlat
mov
repz
test
jno
stos
xlat
pop
or
push
jl
add
xlat
push
out
negl
fidivrs
cwtl
or
adc
push
push
sti
push
scas
xor
lock
cmc
repz
scas
jne
int3
sub
mov
clc
mov
push
or
fdivrl
push
adc
cmp
mov
mov
adc
sub
lods
adc
insb
popa
push
pop
das
lret
aam
sarb
inc
or
adc
fcoml
ret
dec
dec
xchg
into
adc
int
insb
daa
das
cmp
icebp
mov
adc
mov
or
testb
push
ljmp
shlb
movsb
xor
mov
int3
lods
fmull
mov
or
and
inc
or
mov
or
push
pushf
inc
sbbl
cmpsb
mov
or
sbb
inc
gs
movl
orb
jae
and
ret
outsb
test
loopne
aam
ret
jmp
jg
and
ljmp
xchg
mov
xchg
cmpl
popa
loope
or
inc
stos
jl
sub
xlat
je
push
mov
pop
shrb
mov
push
inc
mov
jno
pop
mov
adc
push
pusha
xor
mov
pop
mov
mov
lcall
adc
mov
ja
mov
arpl
dec
pop
mov
mov
fiadds
mov
in
aas
push
jecxz
jl
and
aad
lock
xor
jmp
push
jecxz
shlb
pop
sbb
jmp
inc
pop
or
xor
imul
or
push
jnp
aam
xchg
sbb
popa
call
fwait
out
in
push
sbbb
jbe
fsubrs
mov
ja
adc
jg
outsl
pop
shrl
sbb
rcrl
cmp
fisttps
pusha
xchg
test
xor
sub
ss
push
inc
mov
into
in
push
push
sbb
test
cmc
arpl
cs
xchg
cwtl
xchg
xor
fisubrs
sahf
inc
mov
push
fchs
inc
lods
sahf
push
adc
fmulp
jb
scas
add
xor
xchg
enter
jmp
arpl
pop
int
stos
mov
sbb
loopne
jae
iret
xlat
mov
or
pop
inc
fidivrl
xor
mov
dec
adc
pusha
or
mov
mov
and
mov
aaa
mov
fs
rol
pop
in
bound
sbb
adc
mov
adc
mov
jne
cmp
lock
shl
pop
jl
rcrl
addl
das
jl
fstps
xchg
mov
pop
sbb
call
div
popa
int
aad
sbb
outsl
mov
pop
incb
fdivl
pop
loope
dec
sub
lret
mov
outsl
jo
pop
mov
or
or
cmpsl
shrb
popf
aaa
sub
in
jne
ljmp
inc
jmp
mov
or
mov
rcr
inc
out
cli
and
cmc
scas
push
xchg
ds
out
push
pushf
je
nop
je
movsl
outsb
sarl
push
cmpl
sub
addr16
insl
cmp
mov
and
int
in
push
gs
inc
xlat
fcomi
adc
aam
push
addb
add
fbstp
dec
ds
mov
or
movsb
mov
inc
pushf
cwtl
aam
push
frstor
jns
or
push
cmp
mov
lcall
cmp
cmpsl
bnd
xchg
sahf
pop
pop
inc
cld
shrl
rcrl
repnz
dec
lock
leave
rcll
cli
loop
sub
std
and
mov
lcall
push
pop
rclb
cmp
jmp
fcmovb
sbb
iret
stos
cmp
clc
jne
cmp
and
repnz
shrl
je
xor
jg
cmpsl
aaa
int
lock
cmp
jmp
shll
mov
sbb
jae
mov
daa
mov
sub
in
cld
es
das
clc
push
jg
jecxz
cmp
pop
jo
pop
lock
xor
pop
sbb
lahf
jnp
lcall
repnz
popf
pop
adc
mov
pop
or
xchg
repz
xor
or
sub
adc
inc
lods
clc
jns
push
lods
sub
jl
pop
repnz
and
or
js
adcb
jae
xchg
pop
faddl
jmp
add
push
inc
subb
out
push
sbb
xor
ss
inc
push
cmp
repnz
xor
imul
or
xchg
add
inc
xchg
test
or
rolb
pop
in
nop
xor
mov
cmp
push
push
dec
jb
cmp
jmp
mov
pop
jl
adc
popl
mov
stos
xor
movb
pop
rcrl
clc
mov
push
lret
jno
mov
int
jns
mov
mov
dec
xchg
pushf
aaa
fisubs
int
add
cli
aas
fadds
rcrb
jmp
hlt
jo
std
aas
repnz
xor
enter
or
out
orl
mov
and
fidivrs
mov
or
pop
add
movsl
sbb
adc
shll
add
add
daa
or
neg
xchg
test
stos
inc
mov
sub
shl
sub
pushf
jge
addr16
jo
loope
adc
sub
xor
sub
mov
lock
je
arpl
jl
das
movsb
fadds
cmpb
scas
int3
pop
mov
xor
pop
mov
aad
xchg
lock
cltd
orb
mov
insb
xor
xor
sbb
out
inc
in
incb
push
push
movsb
stc
and
jg
out
or
shll
and
arpl
fldenv
test
pcmpeqb
ret
cmp
out
or
or
dec
hlt
push
addl
fstps
push
sbb
add
insl
mov
std
jge
pop
sahf
imul
sub
push
ljmp
mov
scas
movsl
outsl
pcmpeqw
js
lret
mov
popf
and
xchg
cltd
jg
xor
fcomps
sub
dec
adc
inc
pushf
lock
xor
subl
popa
sub
pop
pop
jle
lret
scas
aas
or
xor
int
stos
repz
dec
fcoml
pop
addr16
push
pop
pop
ja
jb
ss
push
xor
enter
add
out
xchg
push
cld
sub
pop
xchg
mov
mov
cmp
shrb
stos
lcall
pop
sti
shlb
shrl
cmpsl
cltd
mov
mov
mov
aam
gs
add
xor
loope
sub
cli
das
insb
dec
popf
mov
or
shrl
lret
mov
clc
iret
jbe
or
insl
inc
rcrb
pop
cmp
int3
mov
incl
subb
jo
arpl
push
pushf
cmp
por
sti
dec
push
std
lahf
into
scas
aam
mov
inc
xchg
enter
and
mov
xor
sub
inc
mov
leave
aaa
mov
jns
je
jge
or
outsl
or
mov
pop
mov
pop
xor
inc
dec
mov
sub
inc
xchg
and
or
pop
pop
dec
push
loope
es
mov
out
mov
sub
mov
and
ret
lahf
push
arpl
jl
sahf
mov
daa
adc
aas
push
popa
out
in
mov
fistl
dec
xchg
pop
fwait
andl
sub
or
int
mov
les
inc
and
dec
inc
mov
rolb
add
cmc
int
push
xchg
sti
add
adc
pushl
and
sahf
cmp
repnz
and
mov
cli
mov
in
je
addr16
imul
fisttpl
mov
icebp
gs
jno
fsubrp
pushf
sub
fidivrl
jb
std
mov
or
adc
mov
pop
std
mov
and
mov
outsl
jb
jbe
scas
popf
sti
cmp
dec
jle
dec
test
lcall
test
mov
popa
cwtl
cmp
shlb
dec
out
pop
and
jae
loopne
add
in
jbe
xchg
xchg
push
inc
cmp
adc
and
jae
ja
aaa
mov
lcall
jp
jbe
xchg
sti
mov
lahf
lret
pop
xchg
mov
adc
dec
popa
inc
loop
pop
inc
call
int3
jo
jb
test
add
fisubrs
iret
cmp
movsb
ss
mov
int3
mov
sub
mov
out
dec
std
rol
movsb
cwtl
sahf
dec
fcomp
adc
sti
pop
inc
xorl
fwait
and
stos
aas
dec
jecxz
scas
xor
ss
sbb
gs
ret
mov
cli
outsb
dec
pop
dec
shr
mov
aas
cmpsl
rcrl
mov
aad
mov
adc
repnz
hlt
pop
stc
popa
adc
mov
ror
test
stos
mov
aad
in
and
cmpsb
jb
or
xchg
push
sbb
int3
sub
out
test
pop
mov
popa
pop
rolb
pop
dec
fdivs
cmp
add
push
mov
loopne
and
or
xor
push
andl
inc
pushf
clc
je
pop
pop
addr16
fwait
test
mov
jae
cli
sbb
shrl
mov
fld
bound
cwtl
fstpt
adc
popf
dec
aam
add
outsl
mov
push
xor
insl
lock
push
cli
mov
and
das
xor
lret
jmp
jl
pop
andb
aad
sub
lret
cltd
pop
sbb
subb
mov
andl
std
cli
nop
push
mov
pop
dec
fldenv
mov
add
xchg
mov
pop
jnp
fisttpll
mov
mov
mov
imul
mov
lcall
pop
shlb
dec
into
data16
sbb
push
lret
cmc
sbb
das
pop
mov
scas
mov
push
jg
push
in
jae
add
in
ret
xor
inc
insl
mov
xchg
fiadds
inc
mov
cmp
dec
int3
and
popa
arpl
mov
pop
sub
fimuls
sub
sub
add
pop
mov
xchg
push
arpl
int3
stos
gs
not
push
movsb
clc
stos
stos
mov
cli
cmp
add
lret
push
mov
orl
adc
push
push
jae
jge
test
push
ja
sbb
cmp
lods
aam
cmpb
shlb
or
mov
adc
cmp
aaa
jg
pop
and
fnsave
movsb
fimull
mov
xor
movsb
push
rorb
xchg
inc
int3
inc
and
xchg
pop
push
jmp
in
fldt
xor
scas
mov
inc
cmc
testb
out
imul
in
or
mov
ret
and
jnp
repnz
inc
or
scas
cmp
add
out
test
ljmp
js
dec
sti
loop
lret
out
dec
es
js
je
int3
xlat
call
fidivl
jmp
push
mov
and
add
push
and
pop
nop
sub
xlat
ja
popf
mov
enter
and
xorl
out
dec
movsl
push
in
je
rolb
jmp
lcall
cmpsl
mov
inc
jb
cmp
mov
xor
and
lea
mov
mov
into
popf
out
fiaddl
int
icebp
dec
cmp
xchg
lods
pop
pop
cltd
dec
fcompl
enter
push
aas
sbb
shrl
nop
sbb
pusha
insb
addb
inc
xchg
and
je
int
aad
mov
pop
xchg
cmp
xchg
dec
add
fnstsw
sahf
xorb
xlat
out
dec
cmp
ja
or
out
pop
cmp
lods
incb
inc
adc
and
or
addr16
and
cmp
iret
add
add
cmp
mov
jmp
mov
push
popf
xor
or
adc
cld
mov
push
out
pop
mov
idiv
fwait
jge
mov
jae
sahf
je
lock
dec
push
arpl
ret
xchg
xchg
data16
je
popa
sub
xchg
sub
repz
shll
add
test
aad
sbb
xorl
incl
out
rcrl
or
insb
leave
sub
stc
adc
xchg
rcl
andb
inc
or
push
inc
imul
pop
notb
sub
mov
icebp
cltd
mov
stos
vphaddwd
in
push
mov
xchg
testb
sub
repz
data16
sbb
mov
xchg
cli
inc
xor
sbb
pusha
inc
jl
fmull
xchg
inc
inc
pop
mov
orl
pop
repz
mov
mov
fcmovb
das
repz
sti
xor
adc
scas
sbb
into
xorb
dec
shl
ss
lock
xchg
jo
lds
sarl
push
inc
or
or
rol
add
inc
sahf
sub
jl
and
lcall
sbb
hlt
dec
mov
test
inc
aaa
push
mov
push
cltd
jbe
pushf
call
mov
mov
roll
imul
mov
push
jo
dec
push
cmp
test
scas
fnstcw
xor
mov
mull
out
lods
lds
or
pushf
out
jnp
sbb
cmp
mov
pop
mov
pop
mov
out
fimull
sub
cmpsl
dec
incb
add
cwtl
mov
mov
pop
jg
lret
mov
jmp
pushl
mov
xchg
lds
lods
test
cld
push
iret
das
imul
stos
mov
pop
pop
pop
fwait
cmp
cmpsb
lods
imulb
mov
pushf
xlat
push
lahf
lahf
or
lds
fsubl
aas
cmp
in
fstpl
popa
es
insl
mov
push
pop
dec
dec
push
idiv
das
adc
add
xorb
pop
stc
jmp
add
enter
ret
leave
mov
sub
sub
repnz
xchg
in
pop
push
add
test
inc
mov
adc
adc
and
inc
sub
and
mull
shll
pop
sbb
movsl
dec
xchg
inc
pop
pop
pop
out
call
xchg
jmp
decb
fists
lock
int
out
push
pushf
lods
stos
jmp
jbe
or
cmp
mov
xor
insb
xchg
out
shrb
push
mov
inc
mov
imul
clc
ds
movsl
sar
clc
pusha
imulb
and
mov
mov
jp
adc
arpl
sti
pushf
fsubr
dec
shr
mov
dec
sbb
sbb
jne
jnp
lret
xor
into
ret
out
lock
sarl
les
and
push
inc
pop
push
sub
stos
inc
lods
out
insb
mov
adc
or
adc
push
jge
or
cmp
adc
daa
insl
outsb
int
nop
push
cwtl
push
or
lret
stos
and
mov
xchg
push
xchg
push
or
push
daa
mov
jne
nop
cmp
js
testb
cmp
daa
ret
xchg
mov
rclb
bnd
mov
add
mov
dec
dec
lahf
dec
test
das
cmp
jne
pushl
jbe
xchg
sub
push
fcompl
into
pop
cld
xchg
sahf
push
les
mov
fsubrs
xor
test
adcl
mov
push
push
xchg
outsl
mov
cwtl
sub
and
fisttpl
jmp
pop
pop
mov
cld
push
in
idivb
mov
mov
xor
adc
jp
pop
ficoms
es
inc
shrb
mov
jge
enter
andb
mov
jae
ret
mov
mov
int3
inc
add
addr16
push
pop
dec
loope
loopne
in
sub
push
daa
mov
mov
mov
ror
cmp
push
movsl
adc
push
jnp
mov
jno
ffree
xchg
loope
mov
mov
pop
out
cmp
pop
xor
pop
lds
les
push
ds
inc
xchg
mov
jno
cmp
rcrl
jecxz
jge
mov
mov
rol
sub
mov
imul
mov
push
std
mov
bound
bound
cmpsl
sti
mov
or
push
in
in
cmpsl
daa
rorl
rclb
sbb
add
subl
sub
jmp
cmc
mov
dec
shld
jmp
negl
lods
xor
loope
xchg
enter
sub
adc
ret
inc
sahf
and
pop
jo
divb
adc
ja
xchg
daa
push
fisttps
or
out
cmp
leave
cs
dec
ljmp
lret
xchg
xor
sub
or
bound
pushl
cwtl
imull
inc
and
push
mov
pusha
movsl
call
pusha
lds
push
push
mov
into
push
imul
rcrb
sub
fbld
or
pop
mov
scas
sub
rol
mov
leave
lods
xchg
mov
xor
push
add
jmp
aas
adc
dec
dec
loop
loop
scas
or
lret
pop
inc
jno
cmpb
mov
sub
mulb
daa
sub
cmp
cmp
dec
adc
mov
inc
sbb
inc
and
inc
add
mov
shrb
daa
cmpsl
movsb
ror
std
pusha
cmp
lds
add
nop
sub
or
cmp
xchg
push
fs
int
dec
inc
shll
xchg
movsl
jle
stc
pop
outsb
out
push
adc
enter
hlt
cli
pusha
xchg
lahf
mov
xchg
add
into
ret
mov
outsb
pusha
scas
xor
cmc
mov
inc
cld
sahf
xchg
cmp
jae
xor
jle
mov
sbb
or
rorl
hlt
scas
test
add
lods
adc
je
xor
and
lahf
subl
cwtl
cmp
push
jae
and
adc
cmp
inc
push
iret
mov
xlat
jno
ss
mov
es
mov
rep
jae
pushf
movsl
add
les
mov
ljmp
adc
out
aaa
and
test
and
fcmovb
out
pop
jb
mov
mov
cmp
jge
cmp
xor
mov
mov
leave
imul
mov
pop
clc
xor
push
mov
or
mov
add
pop
imul
repz
mov
lcall
lods
pop
sbb
add
ss
movsb
jmp
out
add
sub
sbb
outsb
or
adc
das
pop
dec
pop
loop
mov
xor
sub
cmp
ret
and
jne
adc
insl
or
dec
aam
jecxz
sub
sbb
imul
sbb
or
ljmp
sbb
or
push
mov
hlt
outsl
adc
mov
and
add
xor
fs
dec
lahf
lret
sahf
adc
pop
ficoms
lds
ret
sub
sbb
or
andl
adc
cmc
sahf
repz
cmp
repz
aas
mov
xchg
cmp
dec
loopne
mov
iret
gs
inc
and
or
lcall
mov
lret
jae
add
pop
jle
add
outsl
inc
xor
jp
or
push
mov
dec
aad
test
rclb
ret
add
int
adc
test
inc
ja
mov
ss
addl
pop
inc
pop
fadds
mov
pop
jge
inc
sbb
lcall
inc
dec
jl
leave
add
sbb
arpl
ret
add
fidivl
pop
mov
mov
mov
mov
or
push
js
mov
popf
xor
push
clc
sub
cltd
je
lea
mov
xor
ficoms
cmp
sbb
fnstcw
cli
xlat
mov
adc
mov
add
cld
inc
mov
cli
sub
xchg
add
aaa
out
insl
dec
xor
jge
inc
inc
push
js
mov
shlb
xchg
int
pushf
and
fsts
inc
loopne
test
divb
jnp
lea
addps
jae
lods
sub
das
lea
ja
sbb
jo
or
cld
ret
push
mov
mov
in
scas
mov
xchg
fidivs
shr
cltd
test
enter
adc
dec
mov
adc
imul
mov
fmul
outsb
dec
aas
aam
pop
mov
call
jle
mov
push
in
xor
jnp
int
out
inc
lods
or
mov
xchg
push
xor
and
or
pop
jp
pop
ret
inc
rcrb
push
fsubrs
pop
jge
paddw
xchg
ja
pop
and
inc
dec
push
out
xor
mov
inc
cli
cmp
imul
hlt
fsubrl
sub
in
fs
andb
bound
xor
call
icebp
inc
dec
xorl
xchg
stos
scas
adc
lods
loopne
enter
sarb
mov
and
add
pop
inc
ja
xchg
jns
dec
adcl
in
and
pop
into
inc
pop
add
push
xor
popa
xor
adc
ljmp
test
cmp
aas
imul
adc
lock
sub
mov
into
push
cmpsl
fisubrl
in
push
fiaddl
dec
pop
ds
imul
sarb
outsb
pop
add
mov
insb
and
lcall
pop
addr16
inc
iret
lds
xorb
test
jb
aaa
sub
add
out
imul
dec
or
negl
cmpsb
cmpl
decl
pop
inc
and
das
mov
add
jo
pop
sarl
mov
ljmp
adc
mov
sbb
push
dec
add
inc
or
aas
arpl
icebp
add
jae
xor
dec
xor
jmp
out
jnp
or
sbb
jne
or
in
jns
repnz
inc
popf
imul
sahf
pop
jae
mov
cmp
jle
bound
repz
mov
out
loop
es
loope
cmpsb
mov
insb
dec
sub
xor
add
dec
mov
out
pop
mov
sbb
xchg
iret
sub
sub
mov
js
ret
stos
cmpsl
mov
ljmp
imul
adc
ret
adc
mov
popf
je
adc
ja
test
cmp
pop
js
cmp
push
adcl
cmpsl
arpl
xchg
jns
push
fdivs
movl
xor
data16
xchg
cli
xchg
xor
test
iret
pop
pop
addb
psllq
imul
imul
out
pop
mov
dec
stc
push
lahf
jnp
inc
pop
lret
fwait
sbb
repnz
idivl
bound
push
cmpsl
into
subb
outsl
in
sbb
push
mov
aad
pop
out
mov
dec
push
sub
push
jb
dec
iret
xchg
xchg
cwtl
dec
rcr
mov
jo
dec
push
and
arpl
ss
out
cs
sbb
bound
aas
loop
shll
outsb
ja
sub
or
mov
icebp
sub
push
push
mul
fidivl
lretw
lods
sub
inc
pop
pop
xchg
dec
ss
and
mov
mov
dec
push
dec
in
push
mov
push
sub
xchg
pop
les
andb
mov
pop
cmp
outsb
fmull
testb
dec
push
mov
xchg
shl
clc
ret
pop
jmp
ja
dec
adc
shll
sub
push
sub
jbe
xor
orl
mov
lea
fnstenv
enter
lods
jo
test
sbb
xchg
call
sbb
sbb
dec
out
cmovne
cltd
lahf
dec
jp
xor
pop
jae
mov
test
fdivl
sahf
push
jo
inc
fnsave
mov
mov
pop
cmp
cmp
mov
addr16
lahf
pop
xchg
add
push
fsubrl
pop
sub
xor
xor
and
jp
data16
lret
mov
xor
inc
popa
arpl
ss
cwtl
mov
dec
or
xor
mov
sbb
xor
mov
subb
sub
imul
mov
popa
insb
iret
pop
bound
ljmp
aaa
mov
jno
out
or
lods
sub
insl
and
xchg
mov
jb
movsb
cltd
jbe
xchg
addr16
cs
sub
imul
add
popa
xorb
sub
or
movsb
jb
jle
cmpsl
mov
inc
mov
not
add
xor
fnstsw
test
sbbb
dec
fcompl
lds
and
xchg
mov
mov
scas
or
addb
pop
dec
aam
mov
jae
mov
pop
jbe
insl
cmp
aaa
ja
lock
xor
das
xchg
add
adc
inc
das
or
push
cltd
loope
dec
mov
aas
shlb
fs
aas
cmp
imulb
or
imul
and
push
sbb
sub
jl
mov
mov
xchg
inc
cli
pop
dec
aam
or
repz
loope
sbb
jge
insb
repz
insb
mov
imul
jbe
add
pop
mov
jae
lods
in
cmpl
jbe
mov
jb
xor
aad
leave
or
test
imul
pop
lock
add
cmp
sub
hlt
adc
jns
jmp
scas
test
jg
pop
fabs
arpl
adc
test
repnz
popa
cmp
test
xchg
jb
data16
mov
rorl
jno
xchg
out
lock
pusha
js
sbb
cmp
rolb
pusha
ja
in
int
xor
push
jbe
rclb
cmp
lods
stos
je
shlb
sti
push
add
test
ljmp
mov
mov
cltd
jns
icebp
push
or
cmp
mov
push
mov
aad
outsb
mov
je
inc
push
push
lahf
test
jge
dec
js
aad
out
ret
call
sub
fldenv
scas
lcall
idivl
lcall
sbb
push
mov
outsl
lds
cld
dec
decl
adc
repnz
pop
ds
sub
sub
lahf
push
popf
sahf
shr
out
fs
and
sub
mov
int
in
sbb
sbb
insb
gs
xchg
lret
dec
push
icebp
add
inc
loope
aaa
mov
loope
mov
cmpsb
into
dec
push
pushl
cmc
cs
call
ret
es
jecxz
mov
cmpsb
jne
outsb
cwtl
mov
xchg
lods
fisubs
push
ja
icebp
xchg
pop
or
jmp
push
jne
xor
int3
ds
mov
or
push
cmpsb
add
or
sar
xchg
add
setae
push
jg
mov
mov
pop
xor
aaa
test
cld
or
je
hlt
inc
lahf
loop
addl
jge
daa
sbb
pusha
mov
fisubrs
xchg
data16
arpl
xor
mov
xor
cmp
lret
pop
push
add
clc
aaa
jmp
movsb
frstor
jge
dec
pop
add
pusha
cmp
popa
xchg
mov
sub
stos
xchg
mov
push
or
cs
jno
imul
xchg
inc
mov
jae
cmp
fdivrl
outsb
mov
das
ja
std
mov
les
fwait
cwtl
pusha
xchg
mov
and
hlt
in
nop
pop
push
lea
mov
jns
sbb
inc
dec
lods
addr16
incl
cmpsl
in
xor
mov
xorb
fsubrl
ror
cmpsl
int3
adc
inc
data16
inc
push
add
movsb
dec
int
mov
loop
or
mov
mov
pop
jnp
jnp
daa
pop
jnp
or
lods
sbb
adc
inc
or
jbe
xchg
xor
pushf
dec
sub
cmp
jne
dec
or
sub
lods
xor
repz
dec
and
push
sbb
inc
and
loope
pop
xchg
leave
or
inc
shll
mov
pusha
cltd
roll
jl
push
pop
push
inc
pop
jmp
mov
cmp
sbb
sub
cld
jp
jno
vhsubpd
add
pop
add
xadd
arpl
insb
xchg
xlat
and
into
stos
lcall
and
inc
xchg
mov
xor
loopne
push
mov
mov
sbb
inc
xchg
rorb
insl
jl
cmp
out
test
lds
in
fs
mov
outsl
push
mov
stos
xchg
into
adc
mov
mov
xorb
mov
xor
movsl
or
inc
cwtl
push
xor
popa
iret
mov
push
arpl
aad
pop
xchg
cwtl
ficomps
xchg
adc
sub
in
dec
addl
test
xchg
xchg
sahf
or
movsb
call
push
mov
mov
orl
lcall
in
pop
xchg
adc
or
fidivs
xor
inc
loope
sbb
dec
push
pop
mov
je
in
jle
repnz
fisubl
dec
dec
test
and
xchg
lcall
cmp
std
fs
call
mov
pop
cli
pop
push
stos
adc
mov
xchg
cli
sbb
and
and
test
add
lcall
hlt
je
jo
jb
pusha
jnp
lea
pop
sub
fwait
aad
dec
xchg
out
stos
ds
jns
cmp
inc
ret
je
add
fistpl
push
in
mov
sub
mov
arpl
cli
jae
cmp
or
sti
lds
mov
clc
cmpsb
icebp
pop
ficoms
pop
xor
adc
xchg
divb
fs
sub
pop
in
and
add
cmc
mov
in
jl
cs
vmwrite
or
and
xchg
pop
jno
or
xchg
idivl
fstps
mov
sbb
in
sub
lds
add
mov
outsb
mov
pushf
cmpsb
push
jne
mov
gs
pop
cmp
pop
jge
sbb
inc
jne
arpl
iret
add
dec
adc
adc
add
aad
fwait
iret
mov
pop
cmpsb
mov
sbb
push
test
sbbl
sub
scas
outsb
jp
mov
and
or
sub
dec
daa
scas
dec
imul
inc
dec
sub
cmpl
movsl
cmpsl
insl
add
mov
mov
cmp
les
jne
mov
pop
dec
outsb
aam
mov
test
lea
mov
jne
imul
inc
sahf
add
fisttpll
jle
lods
add
cltd
insl
mov
and
dec
push
pop
lods
adc
jns
mov
or
push
xor
ljmp
in
push
aaa
popa
xor
jmp
and
ret
pop
mov
push
out
sbb
pop
out
icebp
pop
sub
fidivl
test
mov
loopne
stos
pusha
rclb
mov
sahf
jecxz
ljmp
sti
jp
rcll
dec
fdivr
or
and
mov
dec
jno
dec
ret
clc
mov
cld
mov
scas
test
xchg
dec
jmp
push
nop
jo
or
mov
lods
push
test
mov
add
loope
push
popa
cmpsl
psraw
xchg
scas
mov
ficompl
insb
mov
mov
adc
or
add
mov
movsl
ds
inc
out
xor
loopne
xchg
inc
ss
inc
popa
jp
icebp
dec
out
cmpb
fadd
out
mov
mov
cltd
nop
test
repz
jne
cld
or
ja
xchg
insb
ljmp
outsl
in
outsb
pop
inc
movsb
aad
aam
jbe
pop
lret
jge
cmp
jl
aam
xor
mov
add
or
xchg
dec
dec
pop
xor
mov
dec
cli
sbb
mov
or
jecxz
xchg
lret
outsl
popf
lea
in
pop
mov
cltd
xchg
mov
ret
cmc
mov
inc
or
rol
jb
jl
and
cwtl
jo
shl
xchg
jb
fidivs
fwait
push
cmc
xchg
xchg
cmp
repnz
mov
ds
out
rol
inc
push
jp
sar
arpl
and
sar
mov
pop
leave
pusha
aad
out
sub
inc
jno
add
addl
movsl
cld
js
pop
rol
ss
inc
mov
scas
fnstsw
scas
jmp
dec
sbb
pop
lea
dec
addr16
std
out
mov
gs
mov
and
sahf
insl
or
pop
ds
in
aaa
loop
cmp
xchg
dec
sub
mov
sbb
and
loopne
stos
outsl
loopne
inc
shlb
pop
rcr
adc
mov
lock
cmpl
movsb
inc
insb
fists
andl
mov
aad
popf
addr16
cmp
or
mov
ret
insb
and
mov
std
adc
xchg
sub
sub
mov
or
jno
sbb
mov
inc
xchg
fmul
fidivl
scas
mov
cli
in
lahf
push
jmp
push
popa
mov
cmp
xor
mov
mov
mov
popa
repnz
ljmp
hlt
cmpsb
movsl
out
pop
or
jg
inc
leave
mov
inc
adc
ret
pop
cmp
push
rol
xchg
push
mov
jge
xor
or
xchg
ljmp
ret
add
leave
mov
and
mov
fs
mov
and
sahf
or
daa
je
mov
les
mov
jle
enter
or
into
scas
xor
sub
mov
inc
es
lock
sbb
andl
outsl
fisubrs
cmp
sahf
sbb
out
xlat
popa
shll
mov
inc
mov
or
mov
lret
hlt
nop
out
js
icebp
das
cs
jo
sub
je
mov
stc
sbb
jmp
lea
mov
test
lret
inc
cmpsl
repz
js
enter
or
ljmp
mov
incb
or
dec
mov
xchg
arpl
add
faddp
mov
shr
adc
dec
in
movsl
mov
andl
dec
xchg
push
pop
xchg
jns
ja
xchg
push
sub
mov
cmp
pop
push
pop
nop
in
inc
and
push
ja
fstps
or
pop
xchg
or
scas
out
sahf
pop
dec
fldenv
jl
out
add
xchg
aaa
push
sbb
add
lret
xlat
pop
les
enter
mov
test
fcoml
dec
dec
iret
cmp
push
repnz
mov
cli
leave
rcll
fs
repz
and
test
andl
hlt
mov
movq
decl
call
adc
shll
lock
shlb
loopne,pn
jno
cmpsb
sbb
jne
inc
outsb
push
ret
or
mov
into
movsb
mov
stos
scas
xor
xor
fisttps
call
cmp
aas
mov
test
sub
hlt
jle
push
insl
imul
pusha
inc
pop
test
fxch
pop
insb
push
or
and
pusha
push
add
add
movb
push
dec
out
dec
push
push
imul
or
in
lods
adc
mov
or
mov
inc
popa
rol
jno
xor
test
adc
pop
sub
jbe
xchg
pushf
mov
lods
je,pt
adc
add
out
cmpsb
inc
rclb
ret
pop
imul
fisubrl
add
and
ja
call
mov
mov
nop
xor
inc
xchg
cmp
sub
cmp
add
lahf
add
fdiv
sbb
mov
mov
aam
rcrb
push
test
pop
cld
pop
leave
jle
mov
xlat
mov
movsl
js
lock
push
push
fadd
stc
fdiv
xchg
cmp
xchg
movsl
sar
fucomi
clc
mov
inc
popa
loopne
ja
push
mov
dec
jns
sub
int
xlat
sub
cmp
sbb
cwtl
pop
dec
clc
dec
mov
jne
call
fsubs
into
mov
in
or
lret
lcall
xchg
leave
cmpsl
fsubrs
mov
leave
push
mov
in
pop
add
mov
stos
jg
mov
xchg
mov
mov
lock
xchg
and
fcomps
and
aaa
ret
mov
nop
or
mov
sbb
push
inc
ljmp
push
jmp
andb
mov
cwtl
dec
in
mov
fdivrp
out
dec
mov
sub
fcmovnb
push
xchg
and
ret
sbb
xchg
cld
dec
adc
addr16
adc
iret
cli
out
sub
stos
inc
in
ffree
mov
jnp
pop
fldt
lds
jle
out
cmpsl
mov
xor
cld
jl
stos
inc
push
dec
and
inc
stos
adc
xlat
les
pop
ljmp
arpl
dec
shl
movsb
fistps
or
js
cmp
mov
cmp
into
mov
aas
fsub
das
jmp
stos
mov
inc
insb
jae
aas
fdiv
mov
cmp
xorl
rcll
popf
aad
or
inc
gs
or
and
mov
push
sbb
adc
je
js
das
cli
fdivrp
dec
jmp
sub
lods
lcall
adcb
into
ret
vpsllw
aad
out
sub
xor
scas
insb
push
int
inc
arpl
sti
push
cmp
mov
inc
xchg
lods
dec
sbb
push
lea
in
jo
mov
push
ss
dec
repnz
js
sub
les
pop
mov
or
push
scas
divl
loop,pt
les
icebp
int3
je
je
je
push
push
shlb
xchg
test
ds
rorl
pop
mov
repz
dec
pusha
lds
xchg
push
dec
icebp
xlat
push
lods
sub
push
test
shrl
not
sub
fwait
push
out
loopne
call
cmp
repz
jge
pop
jge
std
dec
arpl
pop
pop
int
add
das
cmp
push
sarl
xor
xchg
sahf
xor
out
daa
mov
jl
xchg
lock
movsl
push
adc
jae,pt
je
pop
inc
and
aam
and
and
xchg
lahf
add
stos
dec
lds
jno
cmp
push
mov
dec
mov
nop
inc
sbb
es
cmp
lods
aad
add
jbe
mov
test
movsl
and
sub
rcl
add
xchg
mov
xor
xor
and
fcomps
fcomps
sub
sub
in
das
xor
pop
imul
fidivs
inc
sti
in
push
lock
icebp
ds
scas
mov
mov
lret
and
or
nop
pop
jns
fwait
inc
fbld
sbb
mov
xor
mov
xchg
cmp
aaa
call
or
jle
bound
int3
subb
inc
jmp
stc
insl
gs
push
push
push
imul
jl
cmp
fcmovnb
fsts
mov
push
leave
sbb
roll
and
mov
mov
outsb
divl
out
push
insb
push
pop
out
in
pop
jl
mov
sub
adc
lds
xor
clc
sbb
mov
or
mov
or
aas
leave
cwtl
call
sub
cmp
es
aas
cmc
inc
add
cmp
or
int3
ficomps
lcall
dec
sub
add
jne
or
pop
jae
stc
add
dec
mov
xchg
adc
sbb
xchg
ficomps
jle
loopne
stos
dec
popf
jp
push
inc
dec
xchg
leave
or
fistpl
push
sahf
je
xor
test
mov
cmpsl
stos
scas
fimull
sub
or
ljmp
stos
fdivrl
es
loope
out
adc
test
sarb
cs
std
scas
jns
int3
add
les
call
or
ja
lcall
in
push
mov
cmp
or
dec
sahf
lret
cmp
inc
cmc
fsubr
sub
sbb
cmpsb
ljmp
into
pop
outsb
sbb
jge
outsl
fidivrl
inc
adc
sub
scas
popa
sbbl
jle
sahf
sti
pop
idivl
or
inc
cmp
dec
lret
mov
xor
push
popa
cmp
jns
mov
outsl
sbb
mov
mov
jno
mov
xor
out
into
popa
jmp
sbb
icebp
jb
idivb
in
sub
insl
pop
mov
jae
pop
cmpsl
or
aaa
mov
jmp
sub
ret
sahf
sbb
mov
pmovmskb
fs
inc
mov
jnp
cmp
sbb
je
lahf
pop
dec
dec
push
pop
aaa
shlb
fsubr
or
fcompl
stos
mov
add
sti
mov
push
add
lods
stc
test
scas
xchg
sbb
dec
js
fisubrs
out
lds
je
pop
pop
pop
sub
roll
xor
imul
stos
fdivr
dec
mov
iret
fwait
je
sbb
and
in
js
dec
iret
inc
sbb
test
pusha
insl
mov
dec
push
pop
cmp
sbb
mov
inc
adc
jg
sti
mov
sub
mov
cmp
sahf
dec
pop
pop
std
mov
mov
inc
and
fildll
insb
jl
pop
cmc
clc
into
jle
ljmp
loopne
push
sub
jge
out
ret
idiv
loop
jnp
cmp
sub
dec
dec
sub
cmp
push
clc
out
testl
mov
or
jecxz
xor
out
fcmovu
mov
xor
jno
test
push
repz
fmuls
adc
into
jns
sbb
fidivs
les
shll
push
sbb
xor
mov
mov
imul
mov
sbb
imul
repz
xchg
adc
test
mov
mov
push
cmp
inc
rcl
frstor
push
enter
jl,pn
jb
add
lods
movsl
out
lret
xor
xlat
fidivrs
pop
negb
rcrl
inc
cltd
adc
das
lods
loop
stos
jmp
mov
xor
sbb
sub
daa
rol
test
divps
inc
add
fs
xchg
arpl
push
dec
cmpsb
xchg
add
subb
imul
xor
inc
xchg
pop
dec
in
jge
pop
push
popl
shl
jl
cmp
fcmovnbe
and
push
fiaddl
cmp
and
loop
in
add
incl
in
add
or
fmulp
cmp
xchg
or
jb
and
pop
sub
mov
xor
arpl
stos
push
imul
mov
icebp
icebp
bnd
bound
cli
pushf
sbb
mov
loope
push
jnp
in
fcmovb
add
mov
inc
repnz
xchg
xor
testb
lret
movsb
cmpsb
mov
and
add
sbb
les
mov
jnp
jne
cli
xor
cmp
xor
and
or
call
cmpsl
mov
pop
inc
or
add
mov
mov
mov
aas
cmp
mov
mov
shrl
sti
and
mov
push
shll
inc
inc
push
xchg
imul
push
mov
mov
into
cmp
inc
hlt
inc
js
mov
movsb
jg
jae
dec
inc
ss
cmp
cwtl
fs
cmpl
sahf
sahf
ss
div
or
or
adc
jns
mov
in
mov
and
arpl
xchg
sbbl
cld
loop
inc
ficoml
testb
ljmp
pusha
dec
mov
mov
inc
frstor
lcall
int
push
adc
dec
scas
or
adc
xchg
negl
call
loop
cld
adc
or
mull
push
adc
fs
inc
out
push
int
cli
mov
data16
mov
sub
jp
aaa
push
fadds
ret
out
adc
lret
int
ljmp
loop
sbb
int3
insb
cld
in
popa
sti
loopne
jne
bound
fistpl
pop
xlat
sbb
mov
cmp
icebp
xchg
or
push
inc
pop
sti
pushf
lret
sbb
cmp
daa
dec
fstpt
leave
insb
daa
jb
mov
out
xor
ja
sub
mov
pop
inc
dec
adc
sahf
cs
mov
add
mov
push
adc
and
out
aad
jle
std
loop
push
xchg
lds
std
xchg
fnstenv
mov
and
rorb
outsl
insb
sbbb
xchg
xchg
pop
jnp
data16
lods
popa
test
cmpl
mov
dec
sbb
repz
mov
ficoms
xor
push
fildll
mov
flds
lea
or
cmp
sbb
mov
or
inc
ficoms
test
mov
pop
sbb
inc
out
insl
add
jecxz
insb
test
inc
cmpl
mov
sbb
pop
jle
cmpsb
sub
sub
in
push
pop
sub
mov
mov
inc
mov
sbb
mov
lods
pop
lods
cld
in
mov
jno
in
cmp
shlb
pop
sbb
sbb
xor
test
jmp
adc
jns
mov
and
daa
stos
add
sarl
sub
push
test
dec
push
clc
cmovns
dec
sub
dec
lea
xchg
push
test
push
xchg
in
xlat
mov
cli
test
outsl
pop
fs
dec
scas
pop
xor
xor
add
pop
mov
push
clc
icebp
cmc
lock
xor
lret
std
shlb
in
jae
outsl
jo
in
mov
ret
jne
ss
lahf
mov
cmpl
scas
int3
repz
rcrl
sbb
sti
sub
adc
rcr
loope
clc
pop
dec
bnd
jmp
jae
lcall
mov
sbb
std
mov
mov
rorb
push
fcompl
inc
xchg
fldenv
sbb
loopne
push
add
adc
mov
pusha
or
cmp
add
popa
sub
pop
inc
inc
pushf
ss
pushl
cli
pop
or
shrb
stos
sahf
decb
xor
pop
ds
mov
pop
arpl
dec
sti
sub
iret
loop
dec
aam
ds
mov
or
cmp
fwait
mov
sbb
movsb
out
mov
cmp
scas
mov
sbb
push
shll
repz
xor
or
sbb
movsb
out
mov
pushf
ffree
or
mov
sbb
popf
jge
data16
jp
jmp
inc
fldz
subb
mov
leave
arpl
ljmp
or
arpl
inc
mov
jns
loopne
bound
lcall
loopne
fs
sbb
or
imul
inc
and
enter
xchg
pop
pop
pushf
push
sub
cmpsl
out
xchg
add
push
lods
inc
xchg
aad
js
icebp
fucomp
pop
mov
adcb
aaa
mov
fiaddl
data16
rolb
push
loope
fwait
daa
cld
mov
testl
repnz
roll
imul
pop
cmp
dec
pop
dec
imulb
call
mov
int
push
daa
adc
movsb
stos
das
push
idiv
fstpl
outsb
test
cli
pop
xchg
cmpsl
or
sub
fistpll
push
stc
rcll
mov
jmp
push
cmp
or
sub
test
pusha
popf
dec
cmp
and
inc
pop
cld
stos
cmp
xor
repnz
inc
mov
js
js
test
sbb
fisubl
mov
pop
aas
xchg
pop
jnp
xchg
mov
lcall
insb
popa
scas
mov
std
dec
pusha
sbb
ret
adc
nop
das
nop
sbb
stos
dec
loopne
aas
mov
xor
xor
ret
frstor
fcoms
ss
push
repnz
sarl
notl
in
push
es
int
mov
mov
sahf
movsl
sbb
test
sub
inc
loope
xor
pop
pop
in
xchg
aas
mov
dec
clc
ret
jmp
insl
mov
lods
adc
mov
add
jae
inc
inc
xchg
adc
jb
frstor
addr16
popf
div
mov
test
jecxz
aas
add
push
xchg
popa
test
pop
icebp
inc
sbb
cli
addr16
xchg
scas
outsl
push
scas
pop
sub
add
in
mov
adc
repnz
push
mov
cmp
insl
hlt
rcrb
xor
sub
jns
inc
mov
and
sti
add
mov
mov
push
cli
push
into
cmc
jnp
rcl
xchg
insb
adc
pop
repnz
ret
dec
cmp
lahf
arpl
outsl
vmovupd
icebp
cs
dec
outsb
inc
jg
mov
jmp
pop
or
xchg
xchg
sub
mov
shlb
pop
pop
loope
cli
icebp
pop
cltd
cmc
and
pop
sub
ficompl
pop
dec
sub
lods
lahf
out
mov
lock
dec
es
fcomps
or
outsl
mov
push
out
push
jecxz
xor
mov
dec
scas
xor
push
and
mov
addb
jno
push
out
dec
inc
cld
dec
adc
add
mov
pop
pop
or
punpckldq
add
and
mov
iret
out
inc
and
das
das
mov
inc
loop
sbb
xchg
inc
mov
dec
inc
aas
dec
xchg
lock
cmp
imul
xchg
mov
push
sahf
in
add
and
mov
or
xchg
loope
mov
inc
cmp
incl
xchg
jne
out
divb
shll
xchg
jmp
sti
adc
repz
sub
dec
leave
xor
jns
jge
cwtl
scas
out
aad
pop
mov
std
ffreep
pop
pusha
arpl
xchg
out
push
cmp
lret
or
shl
jbe
popl
xchg
xor
fwait
mov
dec
clc
and
roll
and
ss
push
out
inc
xlat
mov
pusha
jmp
dec
sbb
mov
or
mov
jecxz
inc
aaa
mov
jbe
aas
iret
stos
xor
dec
imulb
loopne
mov
adc
add
mov
ret
in
andl
dec
jmp
jg
repz
sbbl
dec
popa
movsb
fisubrs
ret
inc
das
pusha
repz
dec
ss
mov
or
push
fcompl
shll
xor
in
ds
xor
push
push
inc
insl
cld
jb
adc
sbb
lds
sub
push
popa
aas
test
sbb
mov
xchg
shll
out
sbb
push
inc
jge
imulb
inc
subl
sub
lret
xchg
lcall
sahf
sub
mov
cmp
mov
popl
push
cltd
repz
mov
in
jbe
adc
inc
out
mov
cmpsl
sarb
cmp
das
or
xchg
and
mov
inc
lcall
push
cltd
push
cmpsb
clc
std
sahf
fadd
subl
call
inc
arpl
shrb
pop
jle
sbb
mov
mov
into
add
ja
mov
ret
outsl
imul
cmp
mov
mov
mov
push
divl
icebp
and
sub
xchg
int3
sbb
les
mov
or
rclb
in
repz
jmp
insb
or
test
inc
clc
hlt
sub
aas
or
addl
data16
pop
xor
jl
loope
mov
or
push
psubsb
push
out
nop
add
and
popa
jmp
push
fcompl
daa
lret
mov
mov
fwait
in
pop
jge
mov
mov
rcl
insb
roll
fstpl
cmp
xchg
ds
fs
add
adc
jb
repnz
pop
adc
add
dec
add
xchg
icebp
and
nop
or
insb
fbstp
out
pop
fcoml
je
push
and
cmp
mov
aaa
mov
sub
add
and
sub
mov
pop
push
push
lret
mov
mov
xorb
jmp
inc
xor
and
push
dec
push
out
sbb
mov
jecxz
outsl
mov
jne
jns
and
daa
cwtl
gs
mov
xchg
lret
movsb
xor
loop
xchg
cmpsl
mov
add
cmp
mov
jecxz
push
adc
aam
loope
jg
jl
notl
adcl
mov
mov
add
dec
ja
out
mov
loope
pop
xchg
es
lods
pusha
loopne
div
push
add
mov
imul
rcl
push
adc
jg
fcmovnu
push
and
dec
pop
call
jecxz
imul
dec
and
daa
test
jp
sub
mov
std
xor
xor
ds
or
mov
xchg
lcall
mov
mov
dec
push
sub
rolb
add
lahf
and
or
inc
loope
cmp
push
movsb
dec
pop
sub
mov
movsb
and
xchg
icebp
xor
insl
addr16
daa
out
stc
adc
cs
aaa
inc
pop
rclb
cmp
pop
ret
enter
out
dec
cmp
adc
mov
mov
dec
xor
push
jp
inc
lods
xor
jo
add
jg
lahf
out
cmp
mov
dec
xchg
mov
cmpl
xchg
je
imul
xchg
loope
bound
insl
push
roll
rolb
shrl
call
in
out
rcr
mov
xchg
cli
lods
mov
out
cmp
cmp
jl
dec
xor
popa
lods
or
imul
mov
cmpsl
or
add
lea
lret
dec
cmpsb
or
add
mov
fwait
jle
pop
dec
mov
jp
lahf
idivl
pop
cmpb
jmp
lret
int
scas
push
sub
jb
pop
movsb
sar
insl
cs
add
and
cmp
jae
xor
mov
mov
mov
loop,pn
arpl
push
insb
aam
fldcw
sub
aas
xorl
shll
adc
out
loope
xchg
jl
out
and
jbe
nop
enter
or
loope
ret
sbb
xchg
and
mov
fisubl
xchg
push
int
mov
jp
dec
push
or
fisubrl
enter
int3
xchg
fsts
add
push
enter
ljmp
mov
xor
add
fisttpll
pop
or
int
in
cmp
fdivl
ss
xor
pop
mov
mov
and
imul
push
xlat
or
add
xchg
adc
inc
adc
pop
aam
jo
add
xchg
loope
fbstp
push
sbb
into
in
test
js
add
mov
or
mov
imul
movsl
lret
hlt
mov
or
into
in
push
ds
fistpl
pop
mov
jge
sbb
dec
xchg
jo
jns
xchg
stos
es
mov
push
sar
insb
xor
movsb
int
clc
xchg
mov
add
inc
sbb
dec
scas
xchg
sub
and
sbb
outsb
jo
xchg
call
dec
cmp
cmc
je
jns
je
iret
lds
mov
push
stos
out
shrb
cmp
push
lret
inc
repnz
adc
cmp
add
faddl
inc
add
out
jecxz
pop
sarl
scas
dec
scas
pop
mov
cmp
or
gs
inc
repz
das
pop
test
push
repz
fstps
mov
pop
cmc
mov
repz
aas
push
ret
lock
jnp
das
shlb
gs
pop
mov
cmpsb
sub
adc
shll
roll
pusha
lea
pop
test
insl
sbb
cmp
jp
xchg
jle
sbb
and
cmp
add
stc
xchg
mov
inc
sub
sub
ja
adc
data16
jge
xor
mov
push
jl
inc
cs
icebp
fstpl
sub
push
aaa
imul
xchg
ss
sahf
lret
or
int3
xor
insb
push
frstor
sahf
sarl
into
xchg
movsb
mov
fld
add
cmpsl
stos
pop
addr16
push
ret
js
sbb
bound
adc
in
or
icebp
sub
sbb
in
aas
ret
mov
mov
mov
mov
sub
adc
push
push
and
inc
cmp
inc
jp
lahf
jns
pop
imul
mov
stc
inc
cmp
inc
add
xchg
mov
xor
shll
int
add
in
gs
cltd
cmp
jbe
lods
push
test
pop
xchg
add
cltd
pop
inc
shll
mov
inc
clc
mov
ret
push
xchg
popf
nop
push
xor
rcr
mov
int
and
xlat
add
ds
loop
js
shrl
lahf
dec
sbb
rorb
push
lcall
loop
sbb
sub
insb
popf
cli
sbb
fs
cmpsb
gs
adc
mov
push
test
adc
mov
mov
enter
repnz
inc
or
loope
push
aad
mov
inc
inc
push
mov
cmpsb
shl
clc
jnp
dec
outsb
jmp
outsl
mulps
outsl
outsl
mov
sub
pop
mov
out
shlb
fwait
mov
lds
mov
mov
add
pop
imul
call
nop
adc
xchg
cwtl
scas
stos
dec
adc
cwtl
aam
lods
mov
jns
mov
cmpsl
and
pop
fdivrl
and
inc
imul
cs
lahf
aas
pop
sbb
push
add
xor
jo
stc
adc
test
test
mov
pushf
test
or
xor
inc
insl
out
clc
nop
xchg
das
sub
or
cmp
int3
out
or
mov
push
push
lods
stos
sbb
das
arpl
aas
and
mov
outsl
sbb
sub
insl
xchg
jmp
jno
push
fistpl
mov
arpl
lods
test
psubd
or
mov
and
ret
pop
insl
xchg
cmp
js
not
inc
ss
popa
mov
sbb
mov
std
pop
subl
add
inc
insb
stc
mov
xlat
sarb
sub
add
mov
mov
inc
pop
ret
cmp
xor
cmp
dec
int
mov
inc
or
aad
mov
mov
pop
mov
iret
mov
add
cmove
iret
mov
mov
pop
clc
xchg
or
shl
shr
in
popl
jbe
sbb
sahf
addr16
cmp
inc
cmp
dec
inc
or
ja
jle
int3
insl
jecxz
rolb
push
in
xchg
in
mov
js
lods
pop
sub
ja
mov
out
xor
mov
cli
sbb
sbb
fisttpll
fsts
rcll
mov
into
stos
push
sbb
imul
cmp
mov
ss
test
mov
popa
xchg
daa
cmp
xchg
sbb
dec
and
nop
adc
mov
leave
icebp
out
pop
mov
xor
data16
repnz
js
dec
jbe
sarl
mov
subb
bound
push
fistpl
pop
ss
pushf
lret
xchg
push
jle
orl
xchg
jbe
mov
and
outsl
aam
aas
mov
ss
test
jecxz
and
hlt
addl
adc
mov
fidivrs
adcb
mov
mov
jo
repz
sar
call
xchg
xor
arpl
test
sbb
lret
or
sti
adc
hlt
cmp
push
mov
dec
leave
sbb
lods
test
push
xor
in
mov
mov
mov
out
mov
mov
or
jae
jmp
jo
lods
sub
jns
lds
lds
cmp
xor
pop
fcom
adc
xor
movsb
cmp
cld
fmuls
mov
rol
ror
jl
test
and
push
sub
and
mov
push
cmp
data16
lods
movsl
cmp
adcb
lock
inc
jecxz
mov
xlat
xor
loope
fnstsw
out
mov
mov
enter
cltd
pop
in
lods
xorb
mov
movsb
jg
push
ds
push
inc
pop
inc
sbb
ljmp
push
xchg
push
lds
or
incb
scas
incb
out
sbb
and
popa
ss
adc
and
in
pop
sub
jmp
ret
dec
adc
jne
xchg
cmp
mov
inc
aas
aam
or
adc
stos
pusha
mov
aaa
xchg
add
sub
push
ret
or
mov
push
fsts
cld
ror
hlt
push
mov
icebp
adcb
fadds
push
xor
add
test
enter
aad
bound
mov
mov
and
lds
dec
pusha
pop
xchg
insl
cmpb
pop
cwtl
std
fistps
sarb
push
shlb
rorb
adc
push
inc
mov
stc
xor
icebp
shl
subl
mov
cs
and
adc
jnp
xchg
lea
xchg
dec
add
jmp
cld
xchg
test
lods
or
pop
nop
cwtl
aaa
sub
std
sub
pop
bound
and
mov
xchg
inc
pop
xor
sbbb
enter
out
out
rcrl
and
adc
addr16
mov
or
and
test
ret
jge
insl
add
sub
call
fiaddl
xchg
sbb
inc
xchg
fwait
push
mov
or
insb
sbb
and
add
xchg
fcmovb
cmpsb
hlt
scas
cli
sbb
push
in
adc
add
int
xchg
and
mov
ss
fiaddl
stc
iret
scas
ret
mov
das
jae
push
insb
push
lock
repnz
ljmp
push
repz
popa
insl
mov
fsubl
or
test
add
popf
loope
jecxz
fwait
push
repnz
int3
rsm
addb
dec
inc
dec
inc
pusha
daa
leave
sbbl
test
adc
lret
push
pop
lods
sbb
dec
add
insl
mov
stos
faddp
xchg
fldt
cmp
cli
push
lret
and
rdmsr
cli
loopne
outsl
movsl
mov
lea
fbld
mov
pop
or
xchg
mov
cmpsl
xchg
iret
jns
in
dec
flds
ret
cltd
out
xor
je
arpl
cld
push
mov
sbb
inc
sub
push
arpl
add
pop
outsb
mov
mov
add
ret
mov
cwtl
lock
sarb
push
and
and
push
lret
lcall
ret
orb
repnz
ss
dec
push
orl
adc
aad
lahf
test
add
jnp
xor
test
lret
mov
cmp
jno
jo
dec
push
in
jg
inc
xor
lret
adc
and
add
mov
les
fists
jmp
js
mov
mov
cmp
fidivrl
or
in
xchg
push
in
mov
add
ficoms
cwtl
popl
mov
jo
mov
dec
std
lods
cmp
cmp
xchg
adc
repz
mov
lret
dec
xchg
inc
push
cmp
or
outsl
xchg
xor
in
ficoml
mov
aam
inc
pop
repnz
out
in
add
sub
xor
and
pop
inc
test
test
jg
mov
push
int3
add
clc
in
pop
ljmp
mov
cmpsb
dec
cmp
adc
mov
sbb
dec
loope
cmp
movzwl
repnz
inc
lea
test
cmp
stc
jge
jp
push
fsubs
ja
test
cld
rcrl
and
aad
lods
cmpsl
mov
test
fs
jl
push
xchg
mov
sub
pusha
or
addr16
les
or
and
add
in
jl
mov
mov
jmp
das
fisttpl
fcompl
pop
bound
mov
lds
enter
lret
jns
mov
ror
inc
call
push
sbb
xchg
mov
fbstp
cmpsb
shrb
mov
ret
popf
shrb
and
fldt
loop
leave
clc
sub
and
cmp
pop
mov
rclb
lahf
lods
imul
jno
push
repz
push
out
jae
fwait
orps
insb
xor
jne
loop
push
in
js
enter
loop
std
push
cmovl
jecxz
cmp
int3
push
leave
lahf
xor
xchg
pop
pop
popf
pop
aad
sub
pop
loop
push
fstpt
pop
out
in
xchg
shlb
dec
lods
dec
mov
jmp
push
addl
mov
mov
mov
insb
mov
aad
xlat
lea
inc
scas
pop
repz
aas
sub
adc
jg
lds
push
dec
es
rol
ja
movsl
pop
cs
sbb
icebp
adc
and
dec
mov
pusha
mov
je
stos
iret
bound
fistps
dec
pop
push
dec
mov
push
pop
insb
shll
xchg
popf
ljmp
mov
pop
inc
jg
cmp
mov
pop
dec
icebp
repz
ds
cmp
in
mov
repz
fwait
sub
mov
int
imul
dec
and
inc
pop
xor
mov
scas
mov
popf
aad
and
call
mov
inc
xchg
sub
adc
lods
dec
std
and
mov
popf
push
jg
lret
fistpll
stos
mov
icebp
les
pop
lock
jp
inc
fs
enter
mov
jmp
fwait
mov
sbb
jns
incb
orl
lret
and
jo
xor
sti
pushf
cwtl
divl
mov
dec
repz
fldt
push
dec
add
loope
push
fmuls
pop
arpl
sbb
mov
pop
push
push
inc
pop
lods
xor
filds
pushf
mov
inc
xor
gs
and
inc
repnz
in
data16
mov
int
push
iret
sti
divl
sbb
cmpsb
jno
aam
jbe
and
sahf
fstpt
dec
loop
adc
std
shlb
push
rorb
pushf
and
mov
add
jae
mov
or
mov
inc
mov
aad
pop
cli
cmpsl
call
cli
andb
fadds
push
test
xchg
cmpsl
xchg
pop
and
gs
aaa
into
push
sbb
xchg
mov
outsl
gs
std
xchg
into
sbb
push
push
xchg
icebp
js
and
dec
ljmp
mov
or
cltd
xor
les
push
mov
jge
ret
mov
dec
scas
xlat
push
mov
push
mov
ret
sbb
call
dec
jg
pop
and
inc
and
fildll
imul
daa
gs
pushf
fcompl
add
add
mov
idiv
inc
lock
out
ja
and
std
dec
sub
push
icebp
lret
inc
jmp
adc
add
push
xchg
sbb
aad
daa
addl
out
ds
mov
popa
ret
cmp
pop
xor
fs
addr16
cmp
and
push
inc
mov
js
adc
or
orl
cli
frstor
or
mov
dec
pop
imul
cmpsb
stos
sbb
sbb
iret
mov
lfence
inc
inc
mov
pop
pusha
or
cmc
mov
cmp
inc
xchg
inc
pushl
iret
call
dec
popf
sub
xorb
cmp
mov
ficoml
js
cltd
xor
imul
xlat
lahf
shll
fnsave
sahf
dec
mov
cmp
out
and
adc
push
sub
movsl
inc
into
enter
jle
and
sbb
cmp
cmpsb
and
and
fcompl
sbb
push
and
aas
and
mov
in
mov
and
cs
jmp
int3
xchg
fs
aad
pushf
push
xchg
int3
loope
repnz
push
enter
imul
pop
es
insl
and
xchg
imul
sub
push
mov
xchg
dec
ds
and
stos
lahf
fisubrl
cmp
clc
add
cmpsl
mov
sbb
idivl
adc
pop
rorb
cmc
cmp
sahf
clc
les
xchg
cmp
mov
cmp
pusha
dec
out
dec
and
xchg
xchg
cmp
addl
dec
scas
jo
cltd
xchg
or
mov
orl
push
imul
inc
mov
xor
jp
andb
xchg
scas
faddl
aam
dec
xor
sbb
jne
pushf
ret
mov
jb
in
cmpsl
test
dec
pop
mov
lods
lret
lret
xchg
mov
push
inc
push
sub
jmp
mov
push
cmpsb
or
ficomps
push
loope
outsl
xorl
push
dec
push
repz
cmpb
xchg
bound
xchg
cmp
push
not
jnp
ja
loopne
sub
xor
repz
sub
stos
idiv
push
arpl
mov
ja
dec
insb
pop
lcall
and
lahf
cmp
mov
fs
leave
cmp
jle,pt
outsb
lahf
dec
jne
add
pushf
je
xor
sbb
popf
mov
movsb
jmp
ds
sti
out
push
bound
cwtl
cwtl
fs
call
lcall
fiaddl
andb
push
push
into
scas
lahf
or
fstps
and
inc
mov
outsl
mov
push
insb
pop
psllq
cmpsb
aad
mov
aaa
fldt
sbb
and
loopne
in
rcll
push
and
in
inc
and
inc
push
xor
addr16
in
fcompl
inc
mov
shl
mov
inc
cli
xor
fisttps
push
xlat
jle
in
fbstp
dec
divb
sahf
add
cwtl
int
into
cwtl
lret
pop
or
sti
cmp
xchg
ret
push
test
insb
std
sub
mov
cs
out
xorb
fcomi
in
mov
call
int
lods
or
into
mov
push
mov
arpl
jno
sbb
xor
addl
cvtps2pi
fsincos
fcoml
mov
dec
pop
pop
push
dec
aad
push
pop
scas
xchg
push
sbb
addl
mov
clc
int
pop
lret
adc
cwtl
or
inc
cmpsb
enter
call
push
xchg
insl
cmp
cld
mov
xor
aas
cmp
and
or
jbe
or
mov
mov
mov
adc
inc
pop
into
sub
mov
adc
xchg
push
pop
cld
popf
pusha
loop
mov
dec
adcl
cli
js
mov
xor
in
jle
jmp
mov
dec
lds
jle
sbb
sahf
js
movsb
je
les
cmp
insl
sbb
or
adc
mov
pop
push
test
in
call
nop
or
pop
mov
outsb
jnp
leave
adc
lods
iret
sbbl
jnp
and
jno,pt
and
xchg
cmpsl
add
cmp
inc
mov
sbb
xchg
push
mov
cmp
push
mov
add
mov
cltd
inc
repz
iret
sub
mov
movsl
mov
mov
push
pop
xchg
sub
xchg
push
popa
subl
rcrb
xor
std
mov
out
or
test
popa
or
iret
add
faddl
mov
pop
mov
sarb
enter
lds
mov
or
sbb
shl
pop
dec
test
imul
repnz
loopne
cli
mov
fistps
call
data16
push
xor
mov
push
insb
inc
xlat
orb
loope
stos
rolb
jne
lods
out
push
cld
sahf
leave
adc
inc
mov
mov
out
pop
rcrl
ja
mov
aad
hlt
test
push
insb
int
xchg
lods
cwtl
xchg
mov
jbe
mov
shll
repnz
mov
testb
leave
xchg
aaa
movsl
imul
into
add
jecxz
or
sub
cld
dec
jle
sbb
lahf
xchg
loop
dec
mov
xor
dec
testl
jl
loop
in
cwtl
adc
lock
mov
in
insb
mov
add
aaa
and
pop
movsb
loop
loopne
aaa
js
lods
rolb
mov
movsb
fs
mull
jecxz
jns
push
scas
xor
cmp
int3
mov
sarl
fcomip
out
jae
aas
aas
xchg
xor
jnp
push
xor
xchg
stos
mov
mov
add
cmp
aam
sti
mov
push
fucom
movsb
push
cltd
in
mov
add
iret
jne
outsb
sbb
rcrb
or
clc
inc
xchg
push
hlt
jo
mov
dec
stc
pop
enter
rclb
mov
or
and
jnp
lea
cli
xchg
xor
lds
sub
adc
and
lods
inc
arpl
clc
cmp
cli
sbb
mov
xor
jmp
jbe
mov
mov
xor
sbb
mov
mov
jns
lahf
test
test
push
leave
inc
adc
sub
jbe
out
mov
int3
scas
push
lret
mov
add
ss
fldcw
inc
push
iret
js
sub
xor
les
dec
ss
test
xchg
nop
int3
cltd
fildll
jno
and
stos
cltd
mov
sub
sub
test
mov
data16
inc
scas
repz
xchg
adc
fcomps
mov
aad
jne
adcb
hlt
leave
and
mov
cmp
in
cli
inc
rorb
jnp
mov
out
out
aam
push
popa
stc
jb
pop
out
mov
pop
sub
into
scas
stos
inc
je
fsubs
out
lods
into
hlt
clc
shll
mov
popa
jl
sbb
adc
enter
or
xchg
out
dec
rcr
adc
sub
pop
xchg
popl
pop
stos
jg
testb
add
add
jb
cmp
pop
filds
sub
dec
pop
inc
and
push
cmp
ja
loopne
xchg
psubb
and
in
pop
pop
mov
cmc
int
scas
call
lods
adc
insb
jle
fcoms
mov
js
or
mov
movsb
bnd
lds
movsb
int3
ds
fcoml
ja
push
jp
xchg
cwtl
pop
jge
xchg
scas
sub
call
lret
push
lods
xor
std
in
fstpl
sub
jae
cli
stos
int
push
popa
lds
pusha
and
dec
sahf
push
pop
ror
inc
adc
mov
dec
or
test
out
in
cs
pop
les
pop
pop
fucomp
inc
lds
sbb
and
je
sbb
mov
cmp
pop
into
scas
mov
leave
scas
imul
ljmp
pop
or
lret
loopne
cs
bound
add
addl
adc
inc
orl
cmp
or
mov
scas
jp
shll
dec
out
int3
push
mov
cmp
mov
add
daa
sub
imul
xchg
mov
dec
lcall
aaa
sub
mov
mov
xchg
fwait
cltd
pop
mov
std
add
lds
nop
add
cmp
ret
jbe
sbb
add
push
fistpll
aas
fsubrl
mov
adc
out
scas
jbe
push
pop
dec
add
in
insl
shlb
das
inc
xchg
lahf
add
nop
addr16
jns
sub
and
jmp
pop
fs
mov
or
lcall
cld
push
or
cld
mov
jle
sahf
inc
loope
xor
jns
xchg
lods
inc
lds
bound
lcall
insl
mov
xchg
mov
cli
shrb
cmp
loopne
ffreep
repz
push
pop
adc
jp
test
popa
cli
cmp
movsl
mov
dec
js
xor
jne
aaa
movsl
mov
lret
fwait
loopne
pop
xchg
std
mov
popa
sub
int
sub
mov
push
dec
pop
daa
sti
lret
les
int
mov
stc
xlat
xchg
scas
inc
fiadds
jae
popa
inc
push
repz
fldenv
jmp
mov
loop
mov
into
fildl
add
cli
scas
aaa
cmc
icebp
or
rcll
es
jo
aad
clc
aad
mov
add
mov
mov
fwait
lods
cwtl
mov
adc
xor
outsl
pop
faddl
xchg
js
dec
jge
movsl
xor
adc
xchg
stc
mov
aad
sub
sub
jge
and
mov
cmp
xchg
adc
mov
mov
iret
mov
adc
lret
ljmp
pop
and
loop
frstor
cmp
int
cmp
xchg
mov
stos
arpl
adc
sub
push
sbb
scas
or
sub
adc
jns
lods
mov
popf
outsl
sarl
push
sub
into
pop
mov
stos
outsl
int3
rclb
and
push
sbb
xor
fistps
mov
popa
pop
inc
sbbb
push
add
cmpl
cmp
jb
add
jg
sbb
sub
mov
cmpsb
adc
repz
inc
sbb
rcrb
imul
sbb
jmp
mov
dec
lahf
es
lret
punpckhdq
out
das
dec
add
movsb
mov
mov
xchg
pop
xchg
lods
repz
rcrl
xchg
push
sub
sbb
xor
xchg
mov
testb
ljmp
int3
push
xchg
jnp
push
idivl
imul
push
pop
fadds
das
jge
mov
and
xlat
shr
stos
add
adc
sbb
test
mov
ds
rorl
test
and
mov
aad
and
outsl
sub
movb
add
sti
pop
mov
ret
inc
xchg
mov
pop
subl
lods
aad
subl
test
lods
xor
xchg
call
addb
je
pushf
sbb
lods
fs
out
and
push
ja
stc
mov
repz
adc
scas
das
je
sbb
cli
sub
std
pop
cmp
add
loope
aaa
mov
mov
mov
mov
aam
or
mov
sub
mov
jmp
xchg
and
hlt
cltd
fwait
lret
in
cmp
mov
sub
std
jmp
jb
aad
jns
mov
out
add
stos
test
add
ja
mov
out
xchg
sbb
mov
ret
mov
aam
xchg
xchg
xchg
in
imul
mov
inc
add
cmpsl
repz
mov
leave
mov
jnp
dec
outsl
adc
push
mov
stc
mov
imul
mov
or
lock
adcl
pop
jl
add
push
sbb
push
mov
out
add
mov
adc
mov
xchg
mov
push
add
mov
arpl
cmp
sbb
cmpsl
fdiv
sub
pushf
pop
ret
dec
pop
jns
rclb
mov
mov
or
dec
dec
imul
sub
pop
jecxz
test
add
pop
pushf
loop
and
pop
mov
rorb
in
jmp
dec
cmp
inc
push
jle
rorl
mov
mov
and
jnp
jmp
adc
pop
out
pop
je
inc
ds
enter
or
jb
lret
ror
mov
gs
push
mov
sbb
push
enter
adc
rcrb
jb
xadd
xchg
jl
cmpsl
shlb
sub
jle
bound
mov
and
mov
clc
aas
data16
pop
add
jge
xlat
mov
rol
push
cmc
jp
and
out
mov
adc
enter
sub
or
popf
cmp
push
adc
mov
shr
adc
movsl
or
lock
stc
jno
mov
add
dec
pop
popa
mov
test
jns
out
leave
aaa
rcr
jae
out
hlt
inc
in
in
lcall
add
xchg
stc
add
cli
addr16
stos
sbb
inc
mov
xchg
ret
jns
les
dec
std
rcll
adc
lods
pop
xchg
es
or
jae
mov
xchg
aas
push
dec
jae
into
jno
insb
aad
ss
push
call
push
int
loopne
fcomip
and
or
hlt
gs
out
sbb
sub
movsl
dec
decb
cmp
jmp
push
in
jp
add
jnp
push
dec
test
ljmp
xchg
gs
jno
mov
outsl
nop
mov
ja
bound
ja
int3
leave
dec
push
mov
jecxz
cmp
int
jns
jae
push
int3
or
test
lods
adc
ss
inc
cmpsb
sub
xchg
imul
and
aad
dec
aad
and
fadds
add
jge
ljmp
pusha
add
notb
pop
mov
icebp
sbb
das
mov
movsl
pusha
pop
pop
mov
jno
loop
cmpsb
cmp
stos
dec
xchg
scas
pop
or
cwtl
cmpsb
ja
pop
and
xor
jnp
dec
push
dec
mov
push
shlb
loopne
call
out
rol
insb
ror
and
add
pop
jg
js
jg
cltd
lea
or
pop
push
pop
lret
cld
sbb
mov
push
pop
add
test
in
dec
icebp
or
pusha
call
sub
test
push
dec
das
mov
mov
add
mov
mov
and
xchg
loop
mov
cmpsb
into
xchg
xchg
ja
idivb
mov
pop
lea
mov
outsb
roll
and
scas
xchg
subl
mov
mov
cmpsb
or
or
lahf
or
insb
out
dec
out
sbb
mov
in
adc
pop
or
lds
cmp
dec
mov
lcall
mov
mov
rorl
daa
xchg
sbb
and
mov
rclb
icebp
adc
adc
pop
and
aad
adc
add
lret
in
imul
push
mov
pusha
pushf
sub
jae
popa
sub
mov
inc
mov
xor
std
ret
jo
in
jge
inc
data16
sub
daa
sbb
cmp
call
setnp
sub
loop
mov
mov
or
fcoms
sbb
or
fwait
stc
pop
scas
cmpsl
xor
or
shll
add
test
push
mov
sbb
jge
ds
xchg
xorl
sub
arpl
mov
ds
rcrb
dec
ret
lock
cmp
dec
mov
popf
adc
icebp
les
inc
inc
mov
jg
and
inc
push
lods
idivb
jle
mov
dec
adc
xor
pop
sbb
push
test
mov
or
inc
sub
dec
xchg
pop
std
rcr
addr16
ja
mov
out
inc
stos
pusha
out
mov
mov
and
ss
aam
daa
adc
pop
push
cwtl
sbb
pop
pop
test
xorl
inc
jbe
lea
xchg
cmc
dec
fistps
add
inc
adc
jnp
rcl
cmpsb
mov
andl
test
xor
sub
push
pop
testl
clc
js
fildl
enter
arpl
mov
mov
inc
sub
xor
test
test
cltd
jmp
or
push
orps
repnz
imul
out
cwtl
test
pop
test
or
pushl
fwait
push
adc
xchg
and
sub
hlt
mov
insb
jbe,pt
in
test
in
pushf
inc
mov
mov
pop
in
cmp
fwait
mov
mov
push
or
cmp
dec
jb
cmp
lcall
fiaddl
rclb
cltd
popa
xor
dec
test
fsubrs
cld
hlt
sbb
push
lods
lods
aaa
mov
testb
sub
das
insb
shr
mov
in
adc
inc
sbb
mov
jecxz
push
mov
mov
test
jmp
addb
negb
sbb
sbb
jnp
mov
pop
bound
xchg
push
aas
cmp
cmp
hlt
pop
dec
xchg
subb
fwait
in
push
or
or
sbb
xor
into
jge
test
push
cmp
lahf
add
inc
sbb
shlb
lahf
leave
adc
inc
xlat
scas
cltd
dec
test
inc
mov
mov
outsl
cltd
cli
stos
mov
dec
or
ja
push
lahf
add
test
jle
add
jmp
popf
mov
pushf
adc
sbb
loop
dec
push
ret
pushf
sbb
inc
push
push
ja
xchg
out
sbb
mov
inc
stc
cmp
xchg
cli
lahf
hlt
adc
add
xor
xor
xchg
push
cmp
cmp
ret
add
lea
dec
sbb
lea
sub
cs
shll
lcall
es
dec
test
xchg
loopne
push
push
addl
pop
cli
or
cmp
push
out
sbb
push
pushf
cmp
stc
cmpsb
adc
dec
lds
das
xor
xor
lods
xchg
mov
daa
repnz
adc
ja
jp
insl
in
xchg
rol
jns
mov
bnd
inc
je
clc
xor
adc
cmp
push
orl
push
jno
jle
lcall
adcb
sbb
jp
xor
jnp
sub
test
sbb
cmp
lret
xchg
inc
xchg
dec
cmpsb
imul
mov
cmp
jmp
xor
aad
xor
enter
push
movsb
or
push
aam
shl
and
xchg
mov
in
lret
ja
lods
jecxz
or
add
rol
sbb
mov
stos
aam
notb
fsubr
ss
ret
pop
call
mov
jne
xorb
pop
xchg
fwait
imul
lock
mov
sub
es
lcall
jne
sbbl
mov
xchg
or
cld
add
lcall
pop
lret
push
pop
lods
das
out
xchg
push
jmp
xchg
push
repnz
repz
les
ljmp
fdiv
lods
mov
lret
push
dec
push
data16
mov
and
adc
out
pop
ljmp
lea
pop
jo
jp
cmp
adc
addr16
jnp
mov
movq
mov
adc
push
pusha
or
pop
jno
ss
push
jb
cltd
fs
mov
xchg
ret
mov
sti
or
daa
inc
push
xchg
xor
ret
xchg
adc
xbegin
gs
adc
pop
test
cli
lret
push
pop
lea
add
jnp
mov
shl
mov
sbb
cmp
jl
push
or
jae
dec
fcomip
ds
adc
stc
ja
xchg
inc
pop
cmpb
jg
aam
and
jns
mov
fisubrs
int3
leave
fwait
daa
xchg
and
fistps
sbb
outsl
cmc
pop
dec
lock
lret
insb
add
test
or
pop
xor
jns
cmpsl
jecxz
and
cmc
popa
scas
shll
ret
lahf
add
inc
mov
xor
adcl
andl
push
fcmovnu
add
movsl
jnp
int
mov
mov
es
adc
iret
mov
test
arpl
cmpsb
and
mov
lods
cli
arpl
int
pop
popa
scas
adc
sbb
sbb
in
mov
adc
push
mov
push
adc
arpl
cld
or
mov
test
push
pop
in
sbb
cmp
pop
scas
sub
sarb
aad
mov
sahf
cmp
mov
push
idivl
shl
pop
lcall
add
test
arpl
mov
jg
inc
outsl
nop
dec
mov
dec
sub
hlt
enter
stos
fsubrl
jno
scas
dec
adc
dec
ja
sarb
pop
inc
rclb
inc
pusha
jge
adc
mov
lcall
mov
mov
shll
ds
pop
lcall
xor
and
jb
mov
stos
in
xor
jecxz
push
popa
mov
lcall
or
cli
and
dec
mov
or
and
jo
or
roll
pop
das
xchg
insl
sbb
inc
push
lahf
jbe
movsl
loope
xchg
aad
jnp
xchg
addb
pop
stc
push
pop
dec
icebp
add
fs
xor
addr16
sbb
jge
test
stos
orl
jnp
in
lret
test
xchg
or
in
mov
inc
xor
in
rorl
fidivl
cwtd
cwtl
stos
dec
int3
sbb
jle
cmpsb
jge
rclb
inc
push
int
push
data16
or
popf
lds
pop
push
or
xor
mov
dec
cmp
ja
cmp
jbe
addl
jbe
movsl
packsswb
loope
xlat
mov
enter
sbb
shr
mov
mov
xor
in
sub
sbb
or
mov
fs
inc
in
inc
lret
rcll
mov
dec
jns
add
imul
push
push
leave
addl
rcr
xchg
mov
sar
out
jo
jnp
fmuls
test
inc
jae
sbb
aas
push
shl
dec
icebp
pusha
add
test
les
push
pop
jmp
push
sahf
ss
stos
movsb
sbb
push
mov
jg
xor
fsubl
movsb
xchg
cltd
ds
movsl
push
sub
mov
xor
inc
inc
mov
dec
movsb
add
addr16
lods
pusha
cld
mov
xchg
mov
hlt
popa
mov
ret
xchg
nop
cltd
das
cmp
in
xlat
out
xor
outsb
and
xchg
fwait
xor
out
pop
dec
add
add
shl
and
ret
mov
inc
or
je
ja
pushl
pop
sub
scas
and
add
cltd
lret
or
cmc
or
shr
es
xor
psrld
pop
rorl
pop
stos
add
shrl
jns
jle
dec
pop
pop
sti
jecxz
mov
xor
mov
and
xchg
or
xchg
xchg
and
xor
hlt
mov
cs
daa
inc
stc
and
subl
out
xchg
xor
cwtl
dec
xchg
add
rclb
dec
cmp
dec
push
dec
push
adc
sahf
mov
movsb
mov
sbb
cmpsl
and
pop
add
dec
or
pop
cltd
pop
mov
and
stos
xor
xchg
mov
dec
dec
pop
mov
push
xor
and
rclb
nop
mov
cmc
mov
scas
or
sarl
xchg
scas
jne
loope
dec
cmp
cmp
jge
mov
cltd
push
jge
addr16
mov
inc
fistl
mov
aaa
mov
adc
inc
xor
mov
pop
fnstcw
lea
fcoml
popa
mulb
mov
xchg
or
pop
xor
inc
push
imul
bound
jae
cmpsl
mov
jge
mov
test
pop
sbb
pop
push
mov
dec
ss
lods
or
adc
adc
out
fwait
fs
push
fwait
mov
sbbl
dec
mov
mov
cmpsl
stos
jns
lock
xchg
push
dec
pop
xchg
or
sahf
sbb
insb
sub
xchg
loopne
fmull
add
cmp
pop
mov
and
out
add
xor
add
add
popf
push
mov
sbb
cmp
jge
iret
int3
sti
jns
imul
cmp
sub
mov
out
xor
fldcw
jmp
adc
sub
cmp
sahf
or
push
add
insb
icebp
or
popf
stos
mov
cmp
shrb
xor
mov
mov
clc
and
mov
jg
jbe
push
outsb
dec
mov
mov
adc
arpl
fwait
cld
dec
fnsave
loop
mov
lret
pop
xchg
test
lods
jl
cs
je
pop
loope
push
movsl
ret
popa
rorl
lock
add
xchg
es
pop
inc
sbb
push
add
and
les
cmpsb
lcall
xor
sahf
jo
jg
add
cmp
jmp
jmp
loop
mov
flds
popf
sbb
in
or
adc
stos
jmp
lret
and
int3
adc
cli
cmp
mov
lds
lea
push
or
sti
test
push
push
scas
cmp
pop
into
loopne
nop
mov
xor
test
iret
mov
ja
xchg
pop
and
pop
icebp
int3
jl
lds
xor
xor
popf
inc
les
popl
lds
imul
fadd
pop
icebp
pop
mov
push
cmp
sub
jo
aad
add
movzwl
stc
mov
mov
dec
data16
jle
ss
adc
in
loope
pushf
or
out
mov
cmp
mov
add
bound
test
adcl
pop
mov
aas
out
jecxz
fsub
push
xchg
add
cpuid
lret
scas
xlat
sbb
mov
lock
push
adc
sub
adc
xchg
xchg
add
dec
jns
lret
insb
jp
jp
mov
push
cmpsb
inc
pop
mov
ds
pop
mov
or
imul
hlt
cmp
pop
sbb
push
add
int3
es
xchg
cli
mov
fstp
scas
lods
loope
shl
and
xor
dec
push
inc
lds
call
jnp
push
dec
jne
outsb
xor
in
sbb
jl
dec
lret
pushf
popf
andb
icebp
cmpsb
push
xchg
ja
les
pop
daa
pusha
stos
xchg
xor
inc
adcl
mov
jge
add
push
push
iret
lods
rorb
out
lods
pop
adc
jmp
xor
enter
cmpsl
dec
inc
sbb
sbb
and
dec
and
lahf
arpl
nop
je
arpl
mov
mov
jge
xor
dec
ret
or
cld
push
addr16
push
out
xchg
pop
repnz
xchg
test
dec
addr16
sarb
xlat
fildl
dec
sbb
jbe
mov
clc
push
adc
adc
push
push
rorb
mov
jnp
dec
xchg
mov
lcall
or
mov
lds
adc
repz
mov
add
shlb
negb
or
xchg
jmp
cs
mov
sbb
shrb
mov
adc
mov
mov
mov
sub
mov
test
out
push
pusha
mov
js
mov
dec
pusha
int3
and
repz
xchg
js
push
daa
aaa
push
mov
icebp
jns
xor
add
aam
sti
aam
leave
jmp
sbb
pop
xor
xchg
ds
mov
add
addl
xchg
scas
aam
lcall
sub
push
fisubrs
comiss
jns
or
aam
mov
mov
jmp
dec
dec
hlt
push
ja
jno
cli
and
cmp
inc
push
or
push
fsubrs
and
roll
dec
fs
imul
xlat
jns
orl
xchg
fidivl
mov
and
ja
or
lret
mov
xor
sbb
xor
outsl
push
test
pop
push
bound
outsb
sarb
les
adc
add
xor
jp
je
or
inc
dec
pop
sbb
leave
xchg
jae
stc
mov
cmp
adc
mov
xchg
xorl
stos
xor
dec
cmp
push
mov
popa
and
loop
or
and
lret
ret
sub
push
adcl
adc
ds
jg
xchg
or
mov
jl
add
mov
popl
pusha
repz
fld
sbb
pop
inc
pop
xor
lcall
das
sub
mov
imull
lock
das
add
jecxz
jl
dec
xor
test
mov
addr16
push
and
xchg
pop
inc
sub
test
push
rcrl
pop
out
or
xor
jmp
xor
or
jmp
and
movsl
mov
aas
jmp
cld
stc
jnp
std
sub
or
push
loop
jb
xchg
adc
jo
jnp
pop
push
icebp
mov
out
stos
dec
repnz
jmp
mov
jle
lods
fwait
pop
sbb
out
aam
sub
rcr
je
and
cli
pop
jp
xor
push
jl
pop
rolb
cs
jmp
rcll
jo
push
jle
mov
or
imul
lods
pop
in
mov
test
shl
xchg
insl
inc
cmp
mov
out
shl
xchg
mov
leave
sub
and
pop
addr16
mov
outsb
mov
lods
sti
xchg
mov
jno
dec
push
fdiv
xchg
repz
roll
paddw
adc
mov
push
add
adc
pop
push
add
lods
iret
cmp
xchg
enter
add
dec
js
je
les
cmpsl
scas
mov
cwtl
int3
push
insb
rcr
aad
pop
nop
sahf
jg
flds
cmp
jle
adc
call
in
js
subl
jns
in
cltd
mov
leave
xchg
mov
and
es
mov
jae
out
pop
into
std
ror
rcl
jl
add
pop
lret
repz
mov
adc
inc
popf
pop
pushfw
xor
push
loope
cmpsl
lock
outsl
or
gs
mov
jp
push
rclb
shll
prefetchnta
lea
insb
imul
jns
rol
out
xor
adc
pop
scas
incb
iret
mov
jb
out
mov
cmpsb
mov
stos
cmp
imul
shll
pop
pop
mov
mov
sub
sub
mov
xchg
out
fmul
xchg
shrl
adc
lret
cld
dec
dec
add
xlat
add
sbb
scas
ja
mov
xchg
icebp
arpl
mov
inc
std
inc
mov
mov
push
cmc
xchg
dec
int
dec
mov
add
enter
pop
stc
mov
jp
aas
ja
and
call
lods
xlat
dec
mov
lret
into
push
popf
mov
add
mov
fucomp
mov
gs
sbbl
push
mov
sub
lahf
xor
in
adc
jl
mov
push
lcall
xchg
cmc
adc
or
inc
and
aam
xchg
stc
sbb
or
in
pusha
loopne
xchg
mov
dec
inc
inc
mov
fdivr
adc
or
insb
bound
jg
lock
and
sbb
lods
dec
fwait
xor
stos
sbb
loope
and
shrb
push
pop
shl
jno
push
push
jp
int3
fisttps
add
xor
daa
aam
mov
jecxz
fldenv
and
lcall
sub
fs
jbe
call
es
mov
out
stos
pop
mov
xchg
sahf
rcll
push
stc
or
xor
push
sub
mov
jp
push
lret
dec
xchg
inc
lret
fidivs
jg
insl
imul
mov
rorb
div
mov
dec
push
jb
lds
and
xchg
adc
sub
mov
push
push
pop
mov
js
out
decl
mov
das
mov
push
in
lcall
and
or
frstor
mov
jo
xchg
mov
push
neg
outsb
inc
push
adc
xchg
in
js
shl
jbe
dec
mov
stos
fistps
jo
sahf
pop
jno
push
cmp
cwtl
adc
scas
fiadds
xorb
pushf
cmp
mov
sub
jge
cmp
fdivs
lods
push
out
and
jo
xchg
dec
add
and
xchg
enter
repz
in
insl
xor
jo
jo
xchg
insl
cmp
push
insl
jl
ret
jmp
push
jbe
mov
push
ja
fsubl
xlat
pop
inc
fisttpl
orb
sbb
lods
jmp
mov
xor
xchg
les
jmp
outsl
ja
mov
adc
xor
orb
stos
push
testb
int
aas
add
daa
outsl
pop
inc
lahf
pop
sbb
sbb
xchg
jmp
aas
mov
jno
in
in
pop
jno
enter
adc
sti
cmc
scas
mov
sti
loope
into
out
dec
jg
in
mov
aas
scas
ljmp
cmpsl
xchg
stos
adc
call
dec
cltd
cmp
ret
lods
inc
in
sbb
mov
cwtl
lret
or
jno
imul
out
pop
cld
incb
xchg
push
aas
mov
push
adc
xorl
notb
dec
xchg
sbb
jns
and
jmp
into
sbbl
cmp
sbb
lds
loopne
pop
xchg
insl
cmp
cltd
xchg
insl
into
shrl
negb
dec
dec
lret
sbb
insb
outsb
outsb
test
cmc
push
dec
add
in
jl
sti
or
outsb
sbb
pushf
jl
adc
ljmp
push
jne
jmp
mov
roll
jmp
dec
pushf
rcrl
das
pop
movsl
xor
loop
pusha
mov
pop
push
mov
mov
mov
out
dec
cmp
dec
cs
hlt
repz
dec
gs
add
push
cmp
fcomi
cld
aad
xchg
jo
xchg
xchg
outsl
sub
lret
inc
push
xchg
fcoms
sbb
stos
cli
mov
xchg
add
push
xor
les
cs
insb
pop
insb
in
mov
inc
fsubs
mov
loopne
cmp
pop
mov
lcall
in
insl
pop
insl
test
int3
fsubr
and
push
out
arpl
push
arpl
in
fwait
xchg
mov
inc
xchg
mov
int3
jg
adc
xchg
push
fbstp
int
aad
mov
ljmp
cmpsl
sub
xchg
pusha
aad
jns
jmp
test
fistpll
push
test
das
mov
xchg
adcl
out
ljmp
std
cmp
cltd
ja
sub
xchg
sbb
out
movsl
lret
push
das
jb
neg
mov
mov
dec
inc
dec
or
adc
scas
rol
fisttps
xadd
das
out
into
push
push
push
fcompl
pop
je
jp
xchg
dec
lods
stc
imul
jecxz
jbe
mov
mov
scas
xor
sarl
mov
push
and
std
inc
stos
cmp
add
adc
and
mov
shrb
jg
sti
sub
dec
imul
gs
mov
mov
inc
adc
sub
xchg
je
gs
pop
mov
dec
iret
scas
inc
xchg
jns
xchg
mov
lret
push
daa
xor
mov
pop
in
jb
mov
loope
roll
adc
push
lock
push
mov
jp
imul
pushf
dec
adc
loop
push
fimull
pop
or
ret
jle
jae
stc
adc
sbb
mov
hlt
mov
ds
add
xchg
rolb
add
cmpsl
lcall
lock
gs
hlt
orl
add
pop
mov
mov
xchg
cmpl
mov
jge
gs
fadds
push
mov
xchg
pop
pop
into
cmp
push
rcrb
mov
incb
mov
out
in
xor
jmp
cmpsb
and
mov
mov
cmp
inc
fs
mov
and
aad
sarl
jbe
in
push
push
push
add
insl
xor
rorl
inc
pop
sbb
cmp
test
xchg
cld
rorb
test
adc
mov
iret
dec
fmuls
addr16
js
mov
inc
mov
outsl
cltd
movsl
pop
mov
and
outsb
xor
pop
inc
fistpl
sbb
jae
test
stos
mov
scas
push
or
clc
test
pop
cltd
fildll
dec
lret
daa
xchg
xor
mov
inc
xor
mov
push
sub
test
mov
push
in
jmp
in
adcl
push
mov
push
mov
les
sbb
sbb
add
xor
inc
dec
mov
sbbl
cmp
imulb
push
jle
lods
mov
adcb
or
movsl
dec
and
cmpsl
xor
cmp
lret
dec
nop
jecxz
stos
clc
das
jno
inc
cmpsl
add
cmp
in
pop
gs
mov
jns
adc
push
in
inc
or
lods
fildll
lods
jnp
xchg
dec
add
or
iret
sub
sbb
movsb
lock
repz
lds
mull
fwait
inc
xchg
or
sub
mov
dec
loop
and
and
dec
dec
in
mov
jecxz
loope
sti
push
fistps
cwtl
cmp
pop
jmp
push
ja
jnp
adc
into
inc
lcall
xchg
jge
cld
fisubrs
aaa
lcall
icebp
fldt
or
int
sbb
stos
icebp
push
mov
cmpsl
repnz
stos
iret
dec
push
mov
popf
xchg
inc
data16
jmp
and
mov
inc
sub
fidivs
sbb
daa
icebp
insb
dec
imul
xor
push
mov
int3
dec
inc
add
cmp
mov
fldenv
push
adc
dec
cs
or
xchg
dec
mov
xchg
push
xchg
arpl
pop
into
xchg
lea
arpl
xchg
ret
xchg
dec
xchg
popa
inc
mov
jbe
mov
fsubl
subb
mov
mov
pop
lods
into
adcl
enter
fwait
je
movsl
xor
daa
sub
fwait
push
and
stc
mov
mov
sarl
cmp
ret
fnstenv
mov
fadd
fwait
sahf
cmp
pushf
movsb
inc
push
jmp
in
aas
imull
fwait
repnz
mov
aaa
pop
push
inc
mov
aad
mov
or
mov
jae
xor
or
mov
scas
sub
ret
dec
loopne
push
mov
popa
inc
jbe
test
xchg
xchg
push
add
pushl
cmp
add
notl
dec
pop
outsl
bound
lret
xlat
push
and
mov
rcrl
insl
push
xchg
dec
popf
aad
insb
pop
jns
mov
mov
adc
aas
xor
xchg
xor
pop
dec
notl
out
aad
rcll
rcrb
hlt
cmpsl
add
rorl
pop
into
sbb
xchg
cs
inc
pop
sahf
sbb
push
cmp
jns
iret
mov
xor
and
xor
cwtl
sub
jb
fldcw
pop
push
fcompl
sahf
push
cs
imul
sbb
adc
cltd
pop
or
addr16
outsl
rcrb
dec
inc
and
xor
adc
subb
adc
push
jns
mov
or
inc
sti
cmp
adc
and
fmul
je
cmpsb
lods
xchg
inc
sbb
ret
cmp
inc
jle
jne
inc
ljmp
xor
push
shrb
sub
in
call
pop
imul
mov
mov
loopne
orl
test
jp
inc
mov
inc
test
xchg
or
sub
xchg
push
or
xor
pop
scas
enter
jl
jnp
fstl
sbb
addb
icebp
pushf
nop
bound
clc
cmpsl
scas
sahf
addr16
test
fmull
sub
or
jnp
sub
mov
xor
xchg
andl
sarl
insb
test
cmpsl
xor
xor
jb
mov
jno
mov
sti
jle
or
lds
inc
cmp
or
jge
scas
sti
adc
push
pop
adc
cmpsl
or
mov
cmp
mov
stos
int
xor
mov
mov
scas
in
xlat
jecxz
daa
sub
pop
sub
pop
in
push
xor
inc
adc
sbb
jp
cmpsb
adc
scas
call
pop
jge
mov
sbb
pop
cli
shrl
jmp
lret
xchg
dec
imul
sub
mov
jl
cmp
ds
cmp
imul
loop
pop
mov
jns
pusha
mov
aad
push
in
mov
jne
popa
lahf
xchg
ljmp
cmp
sbb
jnp
int
mov
scas
dec
dec
and
xor
xor
pop
xchg
lds
sub
xor
or
or
mov
shlb
jns
pop
jl
push
repz
pop
mov
lcall
dec
sub
inc
inc
mov
xchg
sub
jno
pop
mull
lock
pusha
mov
jg
push
fistpl
cmp
mov
into
out
push
jns
mov
xor
xor
inc
clc
nop
inc
ret
nop
lret
insl
xor
jmp
mov
adc
pusha
adc
hlt
inc
push
out
mov
adc
call
sahf
movsl
inc
aam
mov
lcall
pop
nop
mov
or
ss
orl
ss
dec
sbb
jno
jnp
and
xchg
aaa
mov
inc
mov
das
arpl
cmp
inc
addl
mov
test
lds
inc
sbb
jns
lahf
rcll
mov
pushf
pop
jmp
or
fmuls
pmulhw
inc
ret
sub
fcompl
mov
or
pop
adc
sbb
mov
mov
xor
cs
ret
adc
ret
std
dec
cs
mov
cmp
and
inc
outsb
inc
mov
xor
addr16
shrl
rcl
sbb
fcompl
ja
cmp
adc
adc
push
les
cmp
aam
fldt
xchg
enter
mov
push
stos
jle
ds
jns
int
push
pop
pop
lret
fcoms
sub
in
jbe
jl
mov
mov
cmp
jns
repz
in
out
mov
testl
push
test
stos
xchg
dec
or
sbb
jle
ljmp
mov
ficompl
ds
outsl
out
sub
pop
adcb
fidivs
and
jge
jne
out
mov
bound
xchg
imul
outsb
ja
pop
xchg
push
push
test
sub
mov
cmp
daa
and
add
push
into
rcrl
push
pusha
add
fisubl
lcall
or
arpl
sub
hlt
xor
add
pop
pushf
ret
into
out
mov
int3
and
mov
test
fnstenv
push
and
andb
leave
sbb
call
dec
loop
popf
faddl
mov
lcall
mov
ss
sar
lahf
jb
movsb
and
in
les
fisttps
xchg
and
inc
jge
test
xorl
sub
aam
sbb
xchg
dec
mov
push
cmpb
inc
push
add
dec
js
insb
xchg
jno
mov
xor
aad
add
mov
xchg
mov
inc
push
scas
push
hlt
mov
sub
mov
pop
or
inc
xor
dec
test
mov
mov
mov
push
xchg
testl
sbb
jbe
adc
adc
pop
je
scas
cmp
mov
xchg
xor
sarb
push
aas
adc
pop
into
scas
and
xor
xchg
das
pop
ret
jmp
pop
jns
int3
and
sahf
test
js
jb
sbbl
sub
repnz
fisubrs
xchg
fwait
sti
xchg
cmp
sbb
in
xchg
cmpsb
push
add
movsb
xchg
mov
xchg
sbb
cmpsl
into
daa
out
faddl
xchg
mov
ss
jo
out
push
jge
jg
rep
sbb
mov
xchg
dec
insl
or
cli
push
std
imul
popa
cwtl
roll
xor
sbb
inc
sub
or
decb
add
add
cmpb
add
faddl
xlat
xor
iret
punpckhbw
loop
dec
inc
push
leave
mov
lret
and
lahf
lret
out
out
push
pop
dec
push
jb
and
call
push
lock
aam
or
add
inc
mov
mov
and
daa
rolb
sub
clc
rcr
dec
insl
push
jns
xlat
xlat
shlb
incb
inc
jnp
xchg
aad
or
mov
jge,pn
lods
movd
xchg
pushf
xchg
hlt
pop
push
insb
stos
sub
loopne
cmp
insb
pushf
or
sbb
or
outsl
jno
add
inc
inc
xor
xchg
cmp
mov
mov
xchg
lret
mov
data16
add
clc
in
je
icebp
inc
add
jl
mov
int
testb
cmp
mov
fld
daa
pop
adc
push
xchg
cmc
arpl
jb
ret
sbb
adc
fwait
in
mov
mov
aas
nop
fistl
xor
loopne
aad
mov
insb
cltd
push
xchg
xor
inc
xchg
outsl
enter
mov
lahf
cmpsl
jle
inc
lea
cmpsl
mov
mov
xchg
test
mov
in
and
sbb
mov
push
sarb
inc
cltd
in
jb
pushl
popa
nop
out
xor
mov
test
mov
mov
scas
movb
xor
pop
int
outsb
stc
popa
data16
aaa
scas
in
mov
pop
into
jno
cld
or
jl
mov
mov
aas
cli
lret
loope
mov
sbb
pusha
ljmp
enter
add
pop
cmp
stos
xchg
addl
adc
mov
xchg
mov
daa
xlat
cmp
inc
mov
mov
cmp
push
cmp
xchg
or
jge
repnz
dec
outsb
fwait
sub
adc
call
stos
out
fdivr
out
xor
aas
mov
lds
clc
mov
xchg
xchg
mov
cmp
push
add
rcr
sbb
xchg
xchg
mov
aas
arpl
mov
push
dec
lea
cmp
fsubrs
test
fbld
push
jno
sub
pop
xchg
adc
cltd
fidivrs
stc
cmp
fidivrl
sub
ljmp
xchg
stos
int
lock
iret
dec
call
or
out
cmpsl
or
adc
rcrl
push
jno
jne
shr
mov
ja
fsave
cltd
cltd
addr16
aam
sbb
sbb
out
je
mov
movsl
fiaddl
adc
sub
add
sub
pmaxsw
jbe
cmpsb
push
mov
fwait
add
mov
mov
sub
jo
push
insb
ja
xlat
dec
jecxz
in
inc
scas
lods
xor
push
pop
daa
cwtl
mov
sbb
mov
aam
mov
sbb
mov
xor
nop
dec
leave
mov
mov
stc
pop
cmp
xchg
lret
adc
sahf
lds
call
test
into
fs
lods
shrl
insb
mov
adc
rcll
xor
ret
mov
xor
aam
imul
add
in
in
cltd
adc
jnp
loopne
xchg
mov
int
inc
push
fnstsw
jecxz
jo
pop
jb
add
jo
repnz
lret
dec
loop
jno
jo
inc
mov
add
dec
dec
repz
mov
xlat
jns
cld
inc
pop
jle
pop
popf
add
sub
fldl
lea
inc
hlt
adc
dec
loope
rorb
daa
or
jl
xchg
in
xchg
outsl
sbb
xor
stos
test
sti
clc
add
inc
mov
pop
aad
fistpll
jp
adc
xchg
xor
pop
jg
fchs
mov
imul
cmc
dec
cltd
loope
mov
add
jb
sbb
xchg
rcrl
arpl
jb
es
scas
xchg
adc
adcl
aaa
cmp
cmp
jne
xchg
popa
xchg
fstpl
adc
into
mov
in
rcrl
mov
lds
dec
cmc
push
leave
enter
pop
dec
xchg
mov
mov
mov
fisttpll
insl
dec
jnp
push
mov
loope
and
aam
fwait
lret
push
and
sub
test
mov
or
sub
pop
daa
mov
cmp
call
lret
fbld
and
mov
mov
test
cmp
dec
or
jge
mov
ss
xor
orl
xchg
pop
loopne
fcmovnb
repnz
lods
mov
mov
xor
icebp
push
xor
or
sub
jge
sbbl
push
dec
lods
jns
decl
fistpl
cmpsl
in
mov
or
cmp
jecxz
dec
es
xor
jl
push
xchg
push
js
mov
xchg
pop
cltd
xchg
fs
mov
sbb
or
or
mov
arpl
fbld
pop
cwtl
add
push
xor
cwtl
push
adc
mov
inc
hlt
sbb
leave
adc
inc
and
enter
enter
xchg
and
les
cmp
push
adc
mov
jle
adc
mov
jnp
imul
xor
ljmp
push
data16
jge
jo
sub
and
jb
mov
xor
insb
add
pop
xor
loope
sti
jge
jg
push
jge
ljmp
mov
popf
push
push
and
xor
insl
test
push
dec
les
pop
leave
aam
jae
pop
inc
inc
pop
data16
lcall
xor
add
andb
ds
mov
xor
sbb
mul
jp
push
je
sbb
or
lahf
imul
push
iret
push
sti
daa
rol
xor
mov
mov
pop
scas
add
push
std
mov
aad
rorb
out
lahf
pop
loopne
js
cmpsb
cmpb
bound
stc
outsl
popf
and
fsubrs
push
cltd
ljmp
sti
negl
enter
add
jb
jl
test
out
xor
out
mov
mov
sti
aam
cmp
fsubs
outsb
mov
std
jbe
dec
mov
sbb
xchg
sub
ror
inc
xchg
pop
pop
xchg
push
outsb
xor
out
fsts
cli
jmp
mov
jge
cmpsl
aas
dec
adc
jp
ret
out
push
mov
jmp
xchg
inc
mov
jmp
xchg
xor
adc
cmp
mov
mov
jne
imul
in
sub
push
into
sub
cmp
add
jo
adc
int
cmp
xchg
or
fcompl
jae
mov
and
adc
push
hlt
mov
ss
dec
sbb
jb
inc
push
adc
jge
mov
xchg
jge
inc
call
cmpsl
adc
dec
insl
cmp
lea
or
jmp
sarb
ja
inc
adc
mov
mov
or
cmp
adc
push
dec
mov
test
push
sbb
inc
and
scas
movsb
mov
and
in
xchg
lret
call
pop
mov
test
adc
les
sbb
cwtl
sbb
adc
lods
or
or
push
mov
push
mov
and
jnp
pop
push
aas
ss
jl
dec
mov
mov
movsl
jbe
ficoms
inc
push
divb
dec
jge
sti
lret
cmp
cmp
stos
sub
sbb
xor
movsl
lds
in
fmuls
inc
cmp
shrl
test
push
into
int
out
cmc
sbb
cmp
and
aaa
sbb
mov
imul
jnp
push
jle
out
cmp
cmc
and
mov
pop
outsl
mov
ds
insb
scas
jns
sub
insb
fcompl
jecxz
pop
adc
cmp
cli
jbe
loopne
test
daa
mov
or
inc
xchg
popa
sbb
mov
push
sbb
iret
inc
shrl
add
sub
adc
popf
add
and
pop
mov
dec
ret
int
aad
ljmp
inc
rorb
jb
stos
enter
adc
mov
adc
sbb
imull
leave
iret
or
das
pusha
cli
movsl
sub
mov
test
cmp
pop
push
sbb
pop
aam
shlb
rcll
mov
ret
arpl
xorb
xchg
inc
je
cmpl
lods
pop
and
dec
dec
xchg
push
push
push
mov
notl
stc
aas
dec
outsl
push
shrb
stc
icebp
cld
add
imul
rclb
push
adc
mov
xor
cmovp
movsb
roll
and
cmpsl
xor
jecxz
fsubs
mov
aaa
and
xor
test
test
pop
sub
mov
leave
imul
repnz
jl
sub
loop
mov
sbb
push
das
je
xchg
and
aas
stos
or
add
jbe
mov
pop
lods
rorb
out
fwait
mov
ds
mov
fs
ret
stc
ficomps
pushf
das
mov
cmpsl
jae
imul
mov
into
or
jae
and
mov
daa
sub
popa
aas
lret
repz
pop
mov
imul
dec
stos
dec
add
mov
shr
scas
mov
xchg
lods
xor
xchg
jbe
mov
stc
jg
adc
ljmp
jmp
push
shr
pop
andl
rolb
mov
pop
jo
imul
or
movb
decb
sub
jo
mov
mov
arpl
push
cmp
hlt
jg
shrb
push
add
pop
loop
xchg
lret
xchg
mov
ret
sti
xchg
xchg
sbb
add
add
mov
loopne
loop
into
data16
in
sbbb
adc
icebp
mov
xor
adc
pop
incl
or
mov
dec
cmp
les
dec
femms
push
mov
mov
sbb
sbb
test
and
popa
jl
cld
es
push
js
stos
dec
insl
mov
jbe
mov
lret
and
xor
loope
iret
lods
and
outsb
and
stos
mov
adc
inc
dec
mull
jp
in
xor
movsb
test
adc
arpl
sarl
and
jecxz
xor
jns
add
outsl
inc
dec
inc
mov
jne
pushf
call
cmp
adc
fistpll
ds
mov
insb
lcall
sub
aam
mov
mov
ljmp
cltd
xchg
enter
in
jb
out
bound
fmul
push
sbb
rcll
lret
pop
dec
push
push
int
push
insb
mov
cmpsl
adc
js
xchg
pop
adcb
pop
and
cmp
xor
add
fwait
lret
js
adc
mov
sbb
xor
std
dec
lods
outsl
and
jp
and
mov
jge
xlat
loope
test
or
ret
push
pop
jne
test
adc
and
test
sbb
loope
cld
aam
lcall
mov
lahf
xlat
pop
outsb
push
xchg
js
test
jnp
or
movsb
insl
cld
popf
dec
ljmp
sub
movsl
xor
movsw
lret
mov
rorl
add
pop
push
sarl
xor
fcomps
mov
sbb
repz
xchg
es
rcr
mov
ljmp
jge
add
insb
push
xor
lock
jno
sub
out
in
mov
jg
scas
mov
jle
mov
clc
mov
aam
xor
adc
daa
adc
test
mov
nop
mov
dec
stos
notl
mov
in
andb
add
icebp
jg
fwait
xor
fisubrl
out
aaa
test
xchg
xlat
or
bound
jmp
stos
mov
rcll
jae
lahf
jae
jnp
inc
shll
mov
test
gs
sub
and
mov
bound
sbb
xchg
shl
fsubrs
outsb
xor
fdivs
ja
addr16
idivl
xor
lret
int3
enter
inc
lea
and
icebp
ljmp
or
das
fwait
xchg
xor
pusha
loop
popf
int
or
imul
je
sbb
fidivl
stos
xor
and
inc
pop
or
lahf
dec
xor
mov
xor
pop
sbb
cbtw
sbb
jb
lret
xor
and
bound
loopnew
jne
fcoms
cmpsb
in
iret
pop
jp
fpatan
loope
sub
jnp
xchg
ret
sarb
test
sub
pop
mov
jp
inc
push
dec
xchg
push
repz
les
push
enter
jmp
push
sahf
sub
leave
cmpsb
out
push
or
cmc
mov
mov
cmp
cmc
or
jo
scas
adc
inc
push
lock
int3
test
xchg
adc
fnstsw
cwtl
pushf
test
idivb
sbb
pop
scas
sbb
xchg
test
ss
sahf
int3
ret
pop
test
push
pop
jmp
in
je
or
insl
cmp
mov
xor
mov
add
cltd
pusha
fwait
nop
icebp
lods
mov
int
inc
shlb
inc
mov
and
inc
arpl
mov
sub
jbe
int
insb
cmp
mov
xchg
mov
ds
cmp
aas
jmp
fcomp
mov
pop
cmp
jg
ror
xchg
fdivs
dec
sub
dec
push
bound
lea
jo
mov
fwait
rolb
inc
sub
cmp
popf
xchg
popf
pushl
aaa
or
jae
imul
xchg
push
lret
sbbl
dec
and
popa
outsb
inc
mov
test
or
push
std
jno
popa
push
adc
sbb
pop
pop
xchg
adc
pop
sbb
jne
mov
in
inc
ret
outsb
repnz
jl
push
mov
pop
icebp
ret
outsb
fistpll
sub
pop
stos
test
test
fdivp
sbb
in
xchg
inc
mov
ljmp
push
jae
jl
ror
pop
mov
out
pop
dec
int3
adc
in
lods
mov
inc
hlt
pop
xor
lret
das
insb
xchg
rcr
adc
cmpsl
jbe
inc
sub
sbbb
xor
nop
lcall
pop
adc
loope
out
adc
arpl
inc
rcrb
cmpsl
bound
sbb
fucomip
mov
pusha
mov
call
mov
stc
loopne
shlb
mov
ret
sub
fidivl
pop
pop
aaa
je
lods
or
push
mov
xchg
jmp
aam
xchg
in
add
inc
mov
call
das
sbb
sahf
sbb
fs
push
ud2
aaa
push
dec
pushf
cwtl
inc
cmp
pop
shl
add
push
rcll
cwtl
cltd
repz
es
xor
xchg
clc
inc
and
push
cmp
xor
lea
xchg
or
fbld
mov
pop
add
fst
and
ror
int
mov
sub
lcall
rcll
imul
out
dec
repz
cli
cmc
mov
inc
push
dec
pop
fsubrl
mov
adc
fstl
jmp
mov
cmp
mov
roll
jg
sti
mov
ja
jo
push
inc
mov
addr16
sti
or
add
xchg
leave
es
test
pop
dec
es
jp
les
rol
push
cwtl
pop
add
fstl
pop
test
repnz
clc
int3
rcll
jno
adc
mov
clc
out
sub
pop
mov
push
adc
gs
cltd
pop
adc
clc
and
enter
cmp
ss
dec
push
pop
stc
xchg
push
leave
mov
jmp
pop
push
mov
shrb
pop
or
fildll
into
bound
lods
mov
adc
dec
jb
daa
popa
jb
pop
jo
cld
dec
mov
fwait
xchg
mov
sub
cmpsl
scas
jge
mov
mov
cmpsb
pushf
mov
adc
mov
or
iret
sub
stc
fcoms
xor
fndisi(8087
cmp
or
imul
adc
test
iret
mov
aam
outsl
rcll
cmp
add
bound
in
pop
adc
cmp
pop
ja
mov
sti
lret
jnp
out
jo
or
or
lock
shll
inc
dec
js
dec
pop
rcrb
ljmp
out
sbbb
add
imul
or
pop
or
js
sub
xor
adc
cmpsb
nop
push
inc
dec
fmul
ljmp
ds
sub
movsb
roll
mov
mov
fisttpl
pop
sbb
imul
xchg
xor
sub
dec
xchg
pop
add
clc
or
cltd
sub
inc
outsb
lcall
pushf
mov
in
jmp
sti
popf
loopne
mov
jg
lret
dec
mov
seto
xchg
je
daa
movsb
in
mov
push
push
ret
adc
xchg
and
jns
insb
or
fs
push
out
cli
xchg
ret
aad
cmpsl
jge
mov
push
shlb
mov
loop
jno
or
into
pop
mov
loopne
mov
mov
or
jnp
dec
inc
loopne
shlb
addb
xchg
jp
arpl
lret
dec
sti
stos
dec
fisubs
add
dec
test
adc
insl
fxch
imul
sub
push
mov
add
aad
lcall
add
and
fnsave
pop
pop
fsubs
imul
adc
mov
adc
sti
mov
idivb
fsts
sub
les
mov
aas
pop
adc
pop
dec
xorl
xlat
mov
push
ret
enter
mov
jno
insb
sahf
and
cmp
in
adc
mov
insl
mov
stos
jno
xor
fstpt
mov
sbb
jl
cld
push
add
push
and
xor
xchg
fidivrs
or
jne
lds
xor
es
cmp
mov
lahf
subl
or
ss
out
pop
cmp
out
data16
out
repz
lcall
gs
out
pop
lret
cmp
fcomi
pop
test
push
cmpsb
popf
pop
loopne
or
cmp
mov
popa
sbb
pop
outsb
cmp
xor
adc
fcomps
ljmp
xlat
xlat
cltd
push
mov
sub
push
inc
and
xchg
and
or
nop
mov
loopne
ret
ss
sbb
icebp
inc
fnsave
std
cmc
incl
mov
xor
dec
notb
int3
push
fs
dec
add
in
lds
insb
push
les
mov
push
pop
iret
out
mov
lret
lea
push
xor
addr16
sub
adc
push
testb
push
mov
adc
pop
andb
ljmp
testl
jno
and
shlb
xlat
cli
mov
xchg
adc
lods
jecxz
ret
xor
notl
adc
ja
jnp
sbb
sub
inc
sub
je
repnz
out
jne
jle
out
ljmp
fcomps
scas
mov
sub
sbb
sbb
setg
repz
repz
lock
mov
pop
rorl
dec
and
aad
cmp
adc
and
sub
dec
aaa
bound
sub
rcr
out
repnz
repz
push
cwtl
sti
iret
dec
mov
sbb
add
pushf
cmp
inc
xor
mov
mov
into
jne
xor
cmp
and
push
and
aam
mov
pop
mov
push
push
xor
xchg
or
xchg
sbb
cmp
sbb
enter
inc
call
push
push
lods
add
mov
xchg
lcall
imul
scas
xchg
aad
mov
mov
pop
adcl
rep
scas
add
jle
in
adc
add
or
cmp
jbe
daa
adc
add
jp
jb
or
gs
pinsrw
shl
movsb
shll
mov
adc
add
hlt
loop
rclb
inc
imul
jge
cwtl
jp
push
and
jle
test
mov
sub
or
push
scas
lahf
movsl
loope
or
push
inc
and
loop
inc
or
add
cmp
daa
lret
jnp
jne
gs
jns
push
mov
add
adc
stc
stc
mov
outsl
xchg
arpl
xchg
test
xor
icebp
bound
or
mov
pop
lea
mov
mov
xor
xchg
xor
or
call
sub
cwtl
pop
adc
rcl
cs
dec
enter
mov
dec
fists
popa
push
pop
in
and
xor
cmp
jne
insl
mov
jns
mov
gs
mov
jne
lret
scas
fidivrs
and
adc
ret
jg
movsb
jl
adc
push
scas
pop
inc
dec
add
movsl
fs
aas
jp
nop
add
mov
mov
pop
sbb
pop
mov
test
insl
fcoms
mov
cltd
movsb
ror
mov
cld
cwtl
cmp
fisubrl
sub
cmp
outsb
gs
xor
dec
lock
sbbl
lods
xorb
cltd
jnp
inc
jmp
nop
dec
pop
lahf
fucomp
mov
addb
in
add
cmp
subb
xor
push
in
xchg
xchg
std
movsl
imul
addr16
pop
mov
or
mov
shlb
dec
dec
sbb
jno
inc
cmp
jl
pushf
stos
mov
ds
je
in
or
jno
arpl
outsb
shrl
mov
fidivrs
testl
pop
lea
push
icebp
sbb
xor
cltd
xchg
mov
fistpll
add
test
movsl
pop
rcrl
inc
mov
sub
aaa
addr16
test
mov
lcall
sti
or
insb
sub
rcrl
pop
xor
fwait
adc
pop
jl
lcall
jge
mov
shrb
cld
cmc
dec
pop
xor
sub
mov
adc
jnp
sbb
popa
cs
mov
mov
in
push
jecxz
xchg
fnstenv
jbe
jecxz
insl
or
aad
enter
pop
cmp
cld
addb
std
mov
cmp
cltd
test
insl
inc
imulb
enter
lcall
mov
cmp
out
sub
aaa
sub
int3
js
scas
inc
xor
sarl
sbb
pop
loope
loop
iret
xchg
nop
mov
int
movsb
mov
sub
xor
push
sbb
mov
push
es
lds
fnstcw
xchg
jnp
setae
pop
ljmp
push
mov
das
std
jae
fdiv
sbb
and
cld
xchg
inc
lcall
fadd
cs
add
xlat
loopne
icebp
in
pmullw
jnp
loope
test
mov
int3
mov
fsubrp
std
push
or
loope
mov
sub
std
bound
ret
xor
test
loopne
cmp
enter
out
cmp
mov
adc
ret
xchg
out
jne
into
dec
pop
pusha
or
std
dec
fs
sub
data16
insb
stos
or
dec
jae
fisttpl
addr16
jp
adc
mov
test
inc
jno
jge
sahf
push
mov
mov
cmp
shlb
paddb
scas
add
dec
pop
repz
xchg
fwait
sbb
je
push
addr16
mov
imul
adcb
jle
mov
push
mov
dec
fucomi
mov
scas
xchg
sub
xchg
mov
mov
cmpsl
adc
xchg
add
sbb
mov
icebp
jge
jp
jae
repnz
loopne
into
cs
sbb
xor
push
sub
pop
scas
adcb
push
nop
aaa
xchg
cmpsl
aaa
loopne
sti
mov
rorb
xchg
sarb
cmp
aam
push
test
mov
faddl
push
cmp
hlt
lods
pop
fstpt
dec
adc
cwtl
mov
out
inc
pop
or
dec
mov
xor
push
jnp
dec
add
lea
shrl
in
aas
sbb
orl
inc
pop
es
cmp
push
sbb
sub
nop
ljmp
icebp
imul
test
daa
mov
cmp
mov
cmc
cltd
loopne
sub
int
not
in
out
mov
movsl
stos
xchg
pop
mov
jb
les
leave
fnstcw
iret
pop
out
pop
fcoms
push
fbstp
cmp
je
aaa
stos
lcall
push
jmp
outsb
sbb
stc
jl
clc
xor
sti
in
fs
cs
xchg
les
add
outsb
sbb
or
xchg
jno
repnz
test
sbb
jbe
lds
push
leave
mov
mov
negb
jecxz
pop
rorb
fstpl
jnp
cmpsl
cltd
hlt
pop
jl
mov
or
in
push
incl
adc
lods
and
jns
stos
mov
mov
or
mov
aam
sub
inc
or
fistps
jno
fs
rcll
jp
pop
cmp
aad
icebp
dec
or
sub
arpl
jnp
pop
push
test
cmpsb
rolb
imul
xchg
adc
outsb
inc
push
scas
cld
fcomps
mov
inc
dec
mov
pop
or
dec
movsl
dec
pop
movsb
outsl
imul
jl
xor
adc
cmc
adc
iret
sbb
cwtl
or
jb
jg
pusha
mov
add
imul
jge
pop
insb
fxch
ljmp
ds
dec
not
test
dec
leave
inc
test
add
cmp
xor
jp
adc
and
mov
dec
sbb
push
lea
faddp
push
fmuls
int
mov
pop
aaa
or
push
ret
cmp
mov
dec
add
pop
jb
pop
mov
scas
or
push
push
push
cmp
xlat
stos
movb
xchg
shlb
xor
fdivp
sbb
fsubr
cmp
in
movsl
jb
push
push
es
jnp
cmp
scas
dec
and
xchg
icebp
ret
adc
push
popa
adc
cli
jge
jle
add
sbb
cltd
mov
xchg
pabsw
jns
adc
dec
xor
mov
pop
ja
pop
test
cwtl
push
int
mov
gs
sub
push
and
scas
jmp
jns
jnp
insl
cmpsb
movsb
into
xor
mov
pop
stos
cmp
pop
mov
aaa
mov
mov
fisubs
xor
pop
ja
test
ljmp
cld
push
rorb
xor
aam
cmpsb
outsl
rcl
imul
pusha
andb
ja
dec
dec
js
sbb
xor
daa
cmpsb
inc
mov
scas
mov
ja
mov
cmp
hlt
xchg
jecxz
pushf
sub
icebp
cmp
add
clc
repz
mov
repz
push
cmpsl
repnz
ljmp
adc
cmpsb
sbb
push
inc
mov
xlat
and
xor
cmp
cltd
js
sbb
loopne
hlt
xchg
int
dec
pop
dec
ljmp
jno
pop
gs
fmulp
out
inc
int
inc
int
out
out
dec
jae
dec
pop
adc
dec
in
call
cli
fs
sbb
mov
dec
dec
repz
mov
stos
push
mov
inc
rorb
mov
rorl
adc
xlat
int
mov
hlt
lret
scas
push
ss
sub
mov
dec
iret
ror
adc
mov
mov
enter
aaa
sub
repz
jg
lock
xchg
pop
into
cli
cli
jns
cmpsb
pop
adc
out
lea
and
movsb
or
add
imul
lahf
mov
sbb
jbe
fists
in
int3
push
int
sbb
adc
xchg
out
inc
xor
and
movsb
imul
mov
cs
jle
or
jae
jg
dec
xchg
xor
movsl
je
mov
lods
jbe
cmp
push
das
mov
sbb
outsb
cmpb
stos
xor
inc
loopne
popf
pushf
es
maskmovq
or
sbb
xchg
dec
xchg
out
add
dec
cmc
ret
sub
sub
icebp
jmp
subl
or
pop
mov
fcomip
mov
aam
xlat
sahf
in
sub
fwait
add
test
fstpl
jnp
adc
leave
arpl
cmc
sbb
xor
adc
jns
cltd
das
sbb
or
fdivl
mov
mov
rcr
pop
outsb
cmpsb
rorb
stos
xor
stos
ficompl
sub
ja
dec
in
sti
push
dec
jecxz
fdivrs
push
sbb
cld
push
popf
jae
or
fcompl
fdivrs
sub
imul
leave
cmp
sbb
shll
push
add
xchg
fwait
sub
and
jno
mov
jp
movsl
les
mov
in
jp
sbb
pop
push
jno
push
xchg
inc
test
leave
sbb
aaa
out
dec
lods
xor
push
mov
add
popf
movsb
xchg
in
jge
pop
loope
pop
and
mov
dec
xchg
repnz
jmp
xchg
in
sbb
jae
xor
in
and
ret
jg
add
stos
add
jno
mov
or
add
jne
pop
hlt
ss
or
add
inc
jp
mov
and
lods
mov
push
lock
leave
scas
inc
js
push
sub
sub
jle
int3
or
lahf
mov
mov
push
outsl
in
jne
addr16
shlb
push
in
inc
jns
aas
ret
loope
cmp
out
xor
pop
cli
stos
sbb
inc
dec
fnstcw
and
das
jg
pop
mov
mov
repz
pop
ret
into
dec
fsubp
lret
xchg
loope
cmpsb
cmp
sahf
inc
ja
pop
sub
or
mov
into
das
dec
dec
sahf
or
sub
popf
addr16
ja
xor
jo
mov
xchg
fisttpll
mov
mov
xchg
fildl
negb
jg
cmpsl
fimull
test
jno
add
fcomi
mov
aas
or
lock
out
or
dec
mov
ss
in
pop
out
mov
fwait
xor
rol
fsubrl
int3
insl
fsub
not
outsb
xchg
xchg
add
insb
cmp
jbe
ss
shll
les
mov
cmp
cmp
lahf
hlt
jl
nop
rorl
movsl
sub
push
sub
add
mov
adc
sub
scas
pop
xchg
xchg
push
cmp
pop
shll
mov
insb
cltd
loop
push
dec
out
test
pop
dec
push
cld
dec
pop
xchg
test
lahf
or
jge
jecxz
insb
in
dec
ret
repz
movsl
mov
push
sbb
ljmp
push
ret
decb
mov
sbb
cltd
push
rcrb
adc
cmpsb
addr16
loope
inc
std
jp
cli
jmp
adc
rcr
mov
cmp
in
mov
ss
dec
insl
xlat
xchg
addr16
mov
xor
and
int
add
in
std
mov
in
push
or
mov
sbb
cmp
cmc
add
pop
sahf
addr16
jnp
sarl
out
in
lods
xchg
push
jno
or
xor
inc
mov
pop
jmp
mov
into
div
pop
daa
mov
adc
je
mov
inc
sbb
add
add
imul
daa
xor
mov
lds
jno
jnp
shll
and
mov
in
std
or
push
ds
dec
inc
xor
cltd
xor
hlt
imul
cmp
sub
repnz
sbb
ret
cmp
int3
sti
cmpsb
adc
mov
cmpsb
adc
mov
sub
cmp
ds
dec
sbb
or
sub
xchg
outsb
ss
ficompl
sub
in
sbb
or
jecxz
mov
stos
pop
test
xchg
jno
incl
adc
push
mov
xchg
mov
pop
xorb
movsl
test
mov
xchg
sub
shl
xchg
xor
loope
loop
lcall
add
fnstenv
lret
or
add
repz
shll
lods
lea
sti
stos
mov
std
lahf
outsb
or
xlat
jmp
inc
and
lret
decb
dec
lods
insb
in
fsubrs
lret
add
dec
jle
ror
cmc
popf
pop
or
test
mov
mov
into
ljmp
push
shrl
rcll
mov
or
mov
mov
xchg
scas
sub
mov
lcall
or
aam
loopne
jae
mov
add
dec
mov
jg
mov
pop
inc
adc
mov
stos
jno
xchg
xchg
pop
mov
mov
jl
push
xchg
jl
lods
in
bound
mov
insl
sbbl
cmp
adc
hlt
dec
popf
aas
pusha
movsl
or
pushf
insl
mov
push
push
movsb
insl
inc
and
add
stc
stc
roll
andl
fdivs
lods
les
pop
mov
pushf
xor
inc
insl
subb
incl
inc
aad
pop
lcall
enter
insb
cwtl
and
insl
popa
dec
movsb
cs
scas
cmpsb
jo
insl
pop
bound
mov
ret
pop
pop
fiadds
leave
push
mov
cmp
or
fwait
sbb
cs
xchg
sub
rorb
ror
sarl
ss
pop
dec
pop
std
cs
xlat
or
mov
test
sbb
jo
jb
mov
cmp
mov
out
cmp
popf
loopne
imul
mov
outsl
ljmp
lcall
mov
fdiv
inc
xor
pop
inc
ss
sbb
es
jmp
clc
movsl
add
pushf
xchg
or
jp
jp
sbb
aas
addr16
gs
int
jmp
add
insl
mov
subl
pop
mov
adc
mov
rolb
xchg
icebp
subl
les
jo
or
int3
cmc
test
dec
mov
or
test
sub
mov
loopne
ja
gs
cmp
inc
push
out
xor
loopne
xchg
test
cmc
pop
lret
into
xchg
adc
sti
sbb
cmpsb
sub
enter
pop
sbb
adc
fnstenv
cltd
and
push
xchg
lods
lds
cmpsl
sbb
das
lahf
sub
jo
icebp
hlt
add
jecxz
fcomip
pop
push
inc
out
sub
mov
mov
ss
shlb
mov
hlt
ds
or
mov
fisubrl
pop
sbb
fnstcw
mov
cmc
aam
push
mov
nop
xor
jle
lods
pushf
cli
mov
filds
pusha
dec
stos
js
das
aad
cmpsb
add
int3
push
xchg
or
lea
dec
push
or
xchg
xchg
jo
add
push
bound
test
pop
mov
pop
inc
faddp
jbe
jg
fwait
out
xor
in
flds
mov
xor
push
or
dec
fs
das
xchg
into
or
scas
repnz
aas
fneni(8087
mov
mov
push
jg
je
sub
cli
std
pop
addr16
enter
pop
outsb
in
imul
sbb
xor
add
shrb
jnp
sbb
addr16
push
jmp
xchg
add
inc
inc
fisubs
icebp
or
xchg
jne
icebp
notb
mov
test
insb
call
shlb
and
iret
lcall
and
out
rorl
xchg
push
sbb
out
adc
pushf
fnstsw
inc
xorb
jno
mov
int
int3
sub
je
lahf
cwtl
daa
mov
pop
lcall
mov
aaa
inc
les
xor
lock
inc
loopne
pop
mov
jne
in
nop
test
xorb
mov
imul
or
out
or
mov
bound
push
addr16
push
pop
jecxz
int
icebp
std
xor
and
lock
or
xchg
mov
fwait
scas
subb
pop
inc
nop
popa
mov
fstl
add
outsl
pop
xor
popf
xchg
in
popf
pop
jecxz
data16
jne
or
push
subl
dec
mov
inc
cld
push
or
mov
scas
les
das
lods
mov
cmc
addr16
xchg
jb
dec
sbb
xchg
sub
lock
dec
mov
fwait
mov
jle
xchg
xchg
inc
int3
out
ljmp
sbb
and
movsb
jns
mov
lret
lret
cmp
xchg
xor
jecxz
xchg
cld
bound
push
data16
sub
fbld
daa
xchg
mov
lret
inc
adc
in
addr16
mov
xchg
movsb
adc
nop
push
ljmp
sbbl
lock
cld
mov
fwait
out
or
mov
ljmp
inc
push
shll
sbb
xchg
mov
inc
lahf
in
cmp
out
shll
imul
or
pop
mov
mov
rcll
shlb
scas
push
jb
push
fiaddl
inc
cwtl
sbb
int
inc
sbb
je
clc
jl
mov
sub
rorl
cld
sti
out
and
or
inc
xor
mov
and
test
pop
push
push
push
aad
sub
popf
push
inc
int
fcoms
xor
sbbb
mov
xchg
push
lods
dec
nop
jle
in
sahf
inc
jg
inc
mov
cli
jo
sbb
adc
inc
mov
mov
cltd
gs
sarl
movsb
pop
push
dec
test
inc
pop
call
mov
fistl
xchg
orb
repz
mov
sti
pop
in
mov
mov
add
nop
iret
dec
push
jg
jbe
dec
xlat
push
mov
sbb
add
insb
and
adc
jecxz
rolb
add
jnp
stc
push
mov
fdivrl
jg
mov
jno
mov
je
ret
adcb
adc
lret
sub
loop
les
jo
xor
lods
or
push
inc
xchg
adc
mov
mov
mov
push
mov
out
jg
push
lret
xor
ljmp
add
mov
mul
jne
lahf
pop
in
cmpps
cwtl
addl
sbb
sti
xor
cld
mov
pop
mov
clc
test
in
leave
cltd
inc
xor
pop
pushl
mov
dec
add
inc
int
inc
push
andl
pop
jnp
dec
mov
inc
xchg
and
subb
mov
lods
adc
lcall
rcl
jge
into
jo
jle
loopne
mov
add
jl
js
sub
testl
loopne
pop
adc
lods
pop
cli
je
mov
mov
mov
aaa
push
aam
mov
jo
push
xchg
dec
in
shll
rcrb
or
adc
insb
push
mov
sbbb
frstor
sub
cli
in
inc
add
lods
sbb
loop
scas
imull
inc
sahf
mov
mov
and
js
out
ret
or
inc
clc
mov
and
mov
cmp
push
mov
lods
bound
loope
fcmovb
mov
add
pop
cmp
xchg
rcrb
sbb
and
xchg
sub
inc
xchg
das
bound
out
xor
mov
stos
stos
fisttps
fucomi
add
push
bound
sub
and
into
jo
mov
aaa
and
and
pushf
enter
xchg
lea
xor
fmull
xchg
adc
mov
xor
pushf
movl
xor
dec
sub
or
push
add
rorb
or
sbb
mov
xchg
adc
jb
popa
test
mov
xor
pushf
lcall
in
push
sbb
mov
sub
aad
push
pushf
loopne
push
or
add
or
push
mov
xchg
mov
subb
movl
ret
inc
add
int
xchg
sub
add
push
pusha
inc
push
cmp
rcrl
out
ds
dec
es
adc
dec
les
cmp
ret
pushf
or
pop
in
ss
cmp
hlt
loope
lods
test
mov
and
and
add
xor
inc
mov
or
popl
jle
sub
lcall
pop
sbb
mov
sub
and
loopne
lret
cmpsl
mov
cmp
aas
mov
cmp
pop
xchg
or
cli
jl
mov
mov
fnstcw
xor
aam
jmp
adc
mov
inc
sub
ror
and
lods
inc
cld
pop
scas
jne
icebp
pop
shrl
mov
jl
jg
dec
aas
or
int
faddp
mov
pop
pop
and
fsubrs
cmp
rcll
sbb
ret
lret
pushf
imulb
popa
cwtl
cmp
pop
stos
sbb
inc
int
dec
out
inc
mov
in
imul
adc
xor
mov
xchg
mov
mov
jge
dec
out
addr16
xchg
mov
pushf
shll
sub
mov
andl
scas
dec
in
or
push
je
rolb
push
out
repz
cmpsl
dec
jo
js
addr16
jbe
mov
les
and
mov
pop
ret
andl
in
mull
lods
lock
jl
push
xor
ret
add
test
lcall
dec
std
ret
decb
sub
inc
cs
mov
push
and
mov
cmp
jns
in
xchg
and
inc
rep
cmpsl
mulb
sarl
push
fcmovnb
jecxz
call
jl
sub
mov
cli
mul
xchg
dec
lods
out
pop
push
rcll
jne
cmp
jnp
cmpsb
jl
push
lcall
hlt
lret
movsb
arpl
filds
imul
pop
cmp
sbb
and
xor
addb
mov
rcr
sbb
mov
cmp
out
fsubp
repnz
push
in
rcl
out
mov
daa
inc
pop
push
rclb
sub
repz
ljmp
mov
push
es
push
daa
xchg
repnz
pop
clc
or
push
pop
cwtl
cmp
insl
sub
pop
jne
sub
sbb
or
cmp
jle
mov
push
out
cli
mov
cmp
inc
push
ret
and
push
dec
jp
fadds
xchg
jecxz
or
and
sar
xor
test
push
xor
xlat
cmp
xchg
cmp
sbb
das
push
cmpsb
nop
push
inc
insl
cmpsl
or
xchg
ret
shlb
xchg
push
clc
push
xor
or
dec
cmpb
lods
mov
shrd
stc
nop
sub
adc
cld
incb
inc
adc
sub
fwait
jl
outsl
push
nop
fsubp
cltd
cs
movzbl
pop
jmp
aas
sarb
push
sub
or
mov
dec
or
test
and
xchg
mov
add
and
shrl
pcmpgtd
add
ret
arpl
lds
pusha
adc
mov
xor
jl
sbb
sub
jo
inc
ret
dec
cltd
ficoms
pop
in
fstl
lret
inc
dec
adc
jl
pushf
sbbl
sub
push
movsl
cs
imul
nop
dec
je
sbb
sarl
in
leave
push
sub
xchg
int
xchg
lea
fsin
push
movsw
jae
iret
stc
pop
and
dec
pop
lahf
inc
cmpsb
jno
pop
push
ljmp
orb
aas
inc
cli
aam
mov
mov
push
icebp
jg
pop
mov
pop
cmp
mov
les
or
ja
jmp
pop
cld
push
bound
sbb
cmc
pop
and
lea
jo
and
sub
cmc
fcmovnb
or
cltd
xchg
das
fs
jne
rcrb
sbb
scas
mov
fistpl
fnsave
fbstp
scas
mov
sbb
sub
push
cmp
imul
xchg
rcl
test
cmp
pop
jno
mov
dec
mov
push
push
rcrl
inc
or
jae
pop
shrl
mov
imul
ret
add
sbb
mov
pop
ds
cmp
call
flds
ret
push
hlt
into
mov
add
ret
or
add
ds
cmpsb
or
mov
les
pop
outsb
sbb
mov
push
pop
lret
fnstcw
out
push
pop
mov
out
cltd
xor
and
and
movsb
sub
lods
xor
xchg
pop
dec
icebp
xchg
push
pop
push
into
insl
mov
xchg
pop
clc
adc
adc
xchg
test
cmp
int3
or
add
sahf
aad
cld
pusha
mov
mov
ljmp
dec
jb
stos
out
loop
cmp
and
fidivrl
sbb
rcl
stos
call
adc
lcall
xor
jl
xchg
orl
outsl
push
shlb
into
mov
test
jne
sbb
mov
orb
sti
imull
or
push
insl
nop
lret
sbb
jge
xchg
jge
add
adc
fmull
arpl
lds
daa
js
test
mov
loopne
sbb
int
roll
pop
shl
lcall
and
in
fcmovu
or
leave
add
cmc
movsl
push
xorb
jg
add
inc
jno
sbbl
mov
cmp
and
mov
mov
dec
cmp
scas
or
mov
inc
cs
subl
gs
je
mov
pop
mov
dec
mov
mov
jno
xor
std
push
sti
cli
add
xchg
sbb
daa
pushf
mov
scas
imul
add
jbe
sub
mov
je
cld
jge
add
dec
jnp
and
js
out
ret
cs
xor
jl
jo
mov
outsb
or
mov
dec
mov
js
lods
lds
and
inc
fs
xor
cltd
js
mov
jl
divl
add
repz
sbb
adc
fdivrs
mov
cli
pushf
cmpl
xor
push
pop
sti
adc
cwtl
pshufw
pusha
adc
in
lds
mov
lods
xor
mov
out
xchg
cmc
or
xchg
cmp
mov
xor
xor
pop
jns
scas
loope
inc
jns
jg
mov
mov
jmp
roll
pop
dec
fiaddl
in
ds
push
mov
xor
sar
int3
negl
pop
push
imul
push
rcl
xchg
mov
jl
jg
mov
stos
xchg
incl
xchg
push
imul
xchg
pop
xor
decb
mov
mov
mov
adc
jle
sub
nop
iret
popa
sahf
shll
into
aad
ds
aad
add
insb
xor
inc
inc
jnp
leave
loopne
out
cmp
mov
xchg
adc
int3
cmp
aas
scas
mov
add
mov
push
mov
pop
jns
jae
outsl
fsubs
xlat
lods
or
out
addr16
aaa
pop
mov
xchg
popa
arpl
xchg
ror
in
lcall
and
clc
repz
cltd
mov
jae
sub
push
daa
pusha
enter
leave
cltd
clc
adc
or
lea
test
call
cmpl
push
sub
or
push
xlat
lret
sbb
xchg
mov
jbe
inc
pop
je
adc
fsqrt
cmpsb
sbb
mov
arpl
inc
std
jns
jne
pop
stc
flds
inc
pusha
or
out
sub
mov
mov
lock
out
ret
mov
in
lods
xchg
leave
inc
xlat
xchg
mov
int
pop
push
aad
fistl
fidivs
test
cwtl
lcall
xor
hlt
xchg
xchg
mov
popa
cmpsl
sbbb
cmc
icebp
out
mov
sbb
fsubl
jmp
and
orb
inc
xor
jo
cmp
inc
and
inc
mov
data16
sub
pop
cltd
sbb
sarl
sbb
mov
rclb
inc
cmpsb
xlat
lahf
std
addr16
or
cs
lahf
adc
mov
xor
sbb
add
mov
jge
jb
imul
pop
fcompl
cli
pop
mov
pop
or
add
xor
ss
cmp
dec
push
sbb
adc
adc
adc
xchg
xor
jmp
stos
out
fcomi
mov
jae
lods
pop
testl
dec
pop
inc
mov
rcl
sbb
xor
fcoms
cmp
xchg
mov
and
imul
push
loop
test
push
in
mov
test
push
mov
dec
popa
mov
bound
mov
jno
lret
dec
rcrl
xchg
jmp
dec
dec
shll
mov
add
int
movsl
shll
in
xor
xor
fs
xor
movsb
lods
out
int
mov
aaa
add
sub
sahf
adc
mov
stc
dec
repnz
popa
es
lea
sub
test
shlb
mov
jns
bound
data16
lcall
sbb
xchg
and
mov
jecxz
out
lcall
or
xor
fcompl
movsl
pop
sub
pop
roll
pushf
fsubrp
lea
add
dec
sbb
sbb
out
add
cld
insl
int
mov
clc
mov
sbb
es
and
xchg
stc
shrb
dec
ja
or
sbbl
imul
dec
mov
les
cltd
orb
sbb
test
add
outsb
mov
leave
pop
in
outsb
xchg
fcoms
test
xor
mov
icebp
hlt
mov
sub
adc
push
cmpsl
subl
addr16
cmp
sbb
sub
pop
and
das
push
mov
xchg
into
hlt
xchg
jmp
js
inc
and
testb
bound
idivl
shrl
ret
lea
sub
jecxz
imul
lcall
shrl
cld
icebp
and
mov
fucom
sbb
cld
rcrl
inc
jmp
scas
inc
pushf
and
mov
into
andl
sti
out
xchg
cmp
loopne
sbb
popf
lcall
mov
jne
jnp
inc
pop
sub
loope
dec
daa
rorl
hlt
cmp
repz
cmp
fnsave
jg
rcrb
nop
sub
jo
pop
enter
inc
insb
pop
xor
fisttpll
mov
xorl
aam
jge
cmp
jecxz
ss
sub
cwtl
fstpt
and
push
insl
fsts
jp
sbb
pop
testb
scas
jl
fiaddl
idiv
inc
push
inc
push
inc
dec
mov
and
into
loope
popf
push
inc
xchg
movsl
imul
pop
pop
sbbb
xchg
int
aam
cmc
inc
out
enter
daa
push
pusha
out
mov
popa
mov
int
push
jge
sub
or
sbb
or
sbb
mov
lea
test
je
push
cmp
sbb
mov
xorb
lcall
stos
fsts
jns
add
cmp
mov
movsl
iret
add
ret
add
mov
xchg
sbb
fistpll
mov
xchg
cmpsl
into
scas
fwait
jge
add
jne
xchg
cmp
es
jl
inc
lods
lar
xor
loop
sbb
or
adc
std
mov
stc
fsubrl
mov
xchg
sbb
andb
jb
inc
dec
mov
cltd
cli
sbbl
jge
add
mov
fdivl
lea
mov
out
stos
loope
sbb
popf
jae
adc
pop
andl
mov
jns
shlb
add
lock
es
pushf
xchg
adc
pop
mov
mov
insb
cmpsl
xchg
jne
stc
in
mov
repz
xchg
mov
popl
imul
jl
push
sub
xor
inc
xor
mov
sub
mov
mov
pop
pusha
sti
mov
outsb
sub
shrl
jns
jbe
jo
int3
shll
roll
sbbl
cmc
dec
movsl
addr16
int3
push
iret
cs
inc
inc
lahf
or
imul
add
lds
push
push
cmp
enter
out
ret
fisubl
sbb
pop
subl
push
or
add
rcr
and
ret
lods
in
or
clc
lock
loope,pt
scas
jp
pop
ljmp
dec
enter
inc
mov
movsb
shll
mov
xor
inc
iret
add
xchg
mov
push
addr16
pop
icebp
cwtl
cmp
push
jbe
je
insl
inc
mov
mov
sahf
in
sbb
add
sahf
rclb
fs
ficoms
fldpi
add
repnz
jne
scas
out
cmpsl
stos
jmp
push
pop
sbb
jo
imul
movsl
lret
ljmp
iret
adc
push
jns
dec
jno
and
ret
xor
vmread
jo
sbb
pushl
cmp
ror
adc
ss
mov
or
mov
les
push
dec
gs
dec
mov
jp
xchg
scas
add
loop
jb
mov
lods
shll
out
movsb
mov
pop
dec
xchg
fcmovnu
adc
cwtl
pop
in
test
inc
addr16
orl
xchg
leavew
pop
xchg
pushf
pop
repnz
std
push
jle
movsb
sub
adcl
repz
jnp
add
mov
scas
and
inc
cmc
cmp
sub
shlb
dec
xor
mov
loope
jae
mov
jnp
adc
outsb
lcall
adc
jg
lock
adc
pop
sbb
xchg
sub
cli
daa
addb
test
inc
and
and
mov
inc
aas
jbe
mov
stos
loop
lods
test
arpl
movsl
loope
sbb
dec
int
lods
lods
mov
sbb
xchg
dec
cli
fisubs
jmp
dec
movsl
sbb
mov
mov
sub
fiaddl
pop
mov
pusha
fcoms
sbb
ret
xor
cmp
push
insb
inc
outsb
push
enter
push
jmp
or
sbb
cs
mov
out
mov
icebp
stos
dec
sbb
enter
mov
sahf
pop
adc
jmp
lcall
andl
in
pop
jno
jo
inc
fcomip
jo
sub
andb
icebp
add
in
mov
inc
imul
int3
inc
out
mov
test
adc
clc
or
add
dec
or
addl
dec
push
cs
push
adc
push
push
cmp
jne
pop
cmpsl
adc
jae
imul
pushf
inc
xlat
sbbb
cmpsb
mov
pop
sub
xor
popa
inc
mov
xorb
mov
mov
loopne
pop
cmp
sbb
add
mov
call
inc
cmpsb
mov
push
or
xor
sub
lret
in
mov
xor
daa
rcr
dec
mov
mov
push
lret
shl
mov
mov
lods
sbb
inc
fwait
mov
in
test
div
imul
dec
pop
mov
inc
xchg
loope
int3
test
push
cmc
pop
out
lret
pop
dec
cmp
mov
ja
jge
pusha
aas
sub
mov
mov
pop
imul
xchg
cld
scas
inc
sub
pusha
flds
out
ja
jmp
pop
in
add
jmp
aas
adc
sbb
mov
push
pop
shll
iret
sbb
orl
pop
xchg
and
cmp
cltd
sbb
sub
jne
xor
cmp
sub
lret
dec
dec
xor
sub
pop
mov
inc
and
cwtl
in
and
ss
push
cld
add
ffreep
xor
nop
push
fcmovne
dec
ror
data16
rorb
ss
jle
pop
and
jle
mul
push
pushf
data16
movsb
pop
mov
or
insl
xlat
jecxz
sub
jmp
cli
jecxz
and
sub
add
mov
mov
stos
ficomps
jns
cmp
cli
dec
stc
fisubs
leave
adc
call
sub
mov
mov
shll
ds
lahf
lods
jae
ja
icebp
jg
imul
std
repnz
and
mov
mov
dec
pusha
mov
sub
dec
mov
push
stos
sub
gs
xchg
mov
cwtl
imul
test
cmpsl
mov
rcr
mov
or
cli
stos
mov
adc
xchg
inc
add
clc
aam
sub
mov
dec
enter
mov
outsl
dec
push
mov
push
andb
or
sub
xchg
jbe
add
je
xorb
jns
cwtl
ret
imul
pop
sub
pop
aad
lret
mov
push
xchg
jmp
lods
sub
xor
js
andb
ljmp
insb
shr
insb
xor
lret
pop
sbb
aam
adc
and
pop
adc
mov
aas
push
mov
mov
bound
jl
ret
scas
xchg
call
adc
in
scas
push
test
movsb
adc
lock
aaa
movups
mov
das
pop
jg
outsl
data16
lret
popf
xor
jns
mov
movsb
cmp
imul
cmp
sbb
iret
imul
cmpsl
aam
in
out
xchg
jmp
push
or
imul
xchg
push
jnp
add
lret
test
leave
stos
inc
dec
pusha
and
movsl
into
xor
sub
clc
sub
hlt
or
sub
sub
inc
or
cmp
aad
test
push
jae
ficoms
out
mov
xor
in
pop
xlat
aas
fldl
dec
xor
sti
cmpsb
scas
mov
pop
jae
repz
jne
or
jecxz
cs
movsl
or
stc
movsl
lock
les
jae
inc
inc
test
cmp
cmpsl
mov
fs
xchg
shr
lcall
mov
sbb
jge
mov
imul
or
test
cmp
mov
pop
xor
cmp
call
lret
sbb
pop
cmp
xchg
enter
pop
fwait
aam
inc
or
mov
mov
addr16
xchg
stos
sub
incl
xchg
movsl
out
addr16
cmpsl
sbbb
xor
ss
xchg
stos
mov
jbe
or
sbb
out
movl
pop
inc
in
mov
cmp
lock
push
push
gs
je
and
cmp
nop
xor
test
jns
iret
mull
inc
sbb
jo
ret
cmp
ret
push
aaa
ret
in
add
adc
aad
outsl
mov
pop
adc
or
test
insb
mov
iret
arpl
xchg
push
les
xor
jg
mov
iret
xor
shrb
pusha
outsl
jnp
movsl
pop
icebp
test
adc
mov
add
cmpsb
mov
rorl
jp
push
fwait
hlt
insl
fwait
xor
inc
fsts
nop
mov
enter
outsl
xchg
jno
imul
cltd
add
mov
call
jbe
ret
test
pop
test
sub
add
sbb
mul
mov
mov
cmp
adc
xor
subl
mov
or
xchg
je
pushf
in
das
ds
jb
sub
push
xchg
mov
xchg
scas
cmp
mov
cmp
leave
push
push
shlb
jle
adc
lock
mov
xor
push
cmc
std
fadds
lret
jle
pop
cmp
mov
sub
inc
sahf
rorb
sarb
test
push
jle
jg
add
data16
in
or
shrd
fcomps
push
mov
out
jmp
aaa
inc
lea
xchg
data16
addr16
pop
pop
bound
mov
and
lock
mov
xchg
dec
in
jmp
int3
sti
pop
lock
xor
fdivrl
imul
movsl
push
inc
adc
jae
push
out
cld
xchg
dec
sub
cmp
out
jge
mov
or
jae
stos
sbb
rol
sti
frstor
mov
outsb
push
add
in
daa
cmc
mov
cwtl
iret
add
ja
fists
xor
icebp
aas
fsubrl
xchg
lock
mov
and
push
pusha
sbb
daa
fists
push
push
xor
or
test
mov
xchg
xor
cwtl
into
and
xor
insl
xchg
pop
push
sti
lds
imul
ror
into
das
dec
sbb
adc
sbb
push
or
add
mov
data16
lock
stc
lds
daa
in
inc
mov
pop
mov
dec
je
lods
mov
addl
ret
or
xchg
add
mov
cltd
add
movsl
sub
cwtl
aad
icebp
adc
bound
and
mov
pop
pop
xchg
ds
loope
cmc
push
xchg
pop
ds
stc
rcr
or
das
mov
aas
push
icebp
push
cmp
mov
ja
mov
std
adc
cwtl
mov
cmc
rclb
jb
rcll
mov
int3
ds
mov
jl
mov
cmpsb
loope
andb
aad
bound
jp
cmp
mov
sub
mov
in
xchg
dec
mov
cmpsb
je
push
or
mov
xor
rcrl
aaa
add
pop
test
fisubs
mov
push
je
pop
pop
mov
sti
cwtl
call
ret
dec
enter
push
and
into
pop
sahf
ret
pop
insl
pop
nop
push
stos
cltd
leave
pop
enter
push
mov
scas
xchg
rorl
scas
es
inc
lret
icebp
or
es
mov
push
ret
push
jno
imul
inc
sub
mov
mov
add
sub
mov
insb
mov
test
loope
arpl
cmp
in
adc
ja
rolb
pop
imul
sbb
xchg
fisttpll
rcrb
ret
pop
test
aaa
adc
mov
add
mov
fdivs
repnz
mov
jae
sti
jle
xor
lock
adc
cmp
in
jg
push
ficoms
jecxz
sti
push
mov
cli
cmp
outsl
divb
ret
sub
outsb
jg
mov
push
sub
mov
fstl
xor
xlat
ds
nop
lds
imul
inc
pop
icebp
push
andb
and
aaa
xor
and
lods
sub
mov
pop
jo
sbb
call
cmp
mov
mov
popa
mov
lret
mov
dec
jecxz
test
xchg
movsb
clc
or
icebp
int
mov
cmpsb
mov
sarl
push
dec
inc
stc
repz
sarb
andl
push
std
jmp
cmc
fildll
scas
nop
inc
fsubl
and
push
and
inc
adc
dec
lahf
sti
test
sbb
mov
insb
das
jmp
jbe
stc
rcrb
ljmp
push
aaa
cltd
mov
hlt
pop
xor
int
push
mov
fisubrl
sbb
out
cld
in
or
cmpsl
jne
mov
faddl
mov
and
xor
xor
push
test
addb
xchg
pop
or
mov
push
ljmp
insl
in
dec
xchg
jle
inc
cmp
leave
sbb
xchg
in
mov
xorl
sub
mov
repnz
mov
xor
xchg
stos
inc
add
mov
gs
mov
roll
dec
repz
jbe
divb
inc
insb
inc
outsl
and
jmp
mov
loope
arpl
mov
popa
and
lods
sbb
or
dec
and
jmp
adc
push
ret
inc
sbb
orb
push
rorb
test
cmc
out
mov
mov
ss
xor
jmp
ljmp
sbb
negl
stos
out
xor
test
jmp
cmpsb
push
adc
jl
mov
push
push
mov
fistpll
ss
pop
rclb
lods
mov
fsubrs
sbb
xchg
mov
imul
push
mov
and
jmp
cmp
jmp
cmp
clc
mov
inc
sbb
cwtl
sbb
nop
lret
mov
mov
icebp
mov
mov
inc
mov
mov
ds
pop
ret
mov
testb
push
adc
mov
mov
movsb
das
adc
adc
in
cmp
aam
push
and
out
sub
sbb
call
xor
inc
enter
push
ja
push
mov
xchg
movsl
sbb
cmc
stos
jecxz
mov
popf
scas
cltd
sti
ret
or
push
inc
loopne
arpl
ror
shl
repnz
cltd
xchg
es
push
add
push
mov
scas
mov
js
push
pop
mov
push
xchg
lock
cltd
xor
and
xchg
fstps
push
and
aad
movsl
sub
cltd
push
xor
and
sbb
in
push
adcb
pushl
or
xchg
push
sarb
rcrl
pop
sub
mov
mov
mov
subl
cltd
decl
xchg
sbb
test
lock
fmuls
xor
lret
jle
ret
and
inc
push
mov
pop
sub
push
ret
sub
mov
test
cmpsl
loope
shrb
cltd
cmp
dec
xchg
inc
xchg
jle
testl
adc
movsb
mov
mov
xchg
adc
adc
scas
imul
je
sbb
fmul
or
and
out
rol
fadd
and
sub
cmp
add
jmp
gs
cmp
test
rorb
cmp
cmp
jle
sti
hlt
or
aaa
cmp
das
xlat
shrb
jge
stc
pop
jmp
ss
int3
cmc
jo
jp
lea
pop
sub
sub
jl
out
test
dec
sub
mov
outsb
cmp
pop
ds
jge
aas
mov
jno
pop
out
ficomps
fmul
ss
jne
lea
inc
leave
stc
mov
imul
xor
adc
jl
hlt
sub
or
mov
adc
notl
mov
and
aam
adc
sti
out
xchg
outsl
in
scas
pop
sbb
int
mov
out
sub
in
lock
jmp
js
inc
cmp
aad
js
divl
fnstsw
cmpsl
mov
fnstenv
fmul
add
test
add
inc
adc
mov
push
mov
pop
push
je
stc
adcb
sahf
xchg
or
fs
xchg
fsubl
xor
dec
jne
dec
dec
das
adc
jo
jno
dec
jmp
out
sbb
iret
mov
pop
fistpl
jnp
imul
mov
sub
push
push
jno
cs
popa
or
add
mov
mov
xchg
add
mov
mov
iret
lret
or
popf
mov
mov
fwait
imul
out
jne
sahf
outsb
shll
jo
push
addb
push
and
dec
pusha
or
loop
xchg
loop
push
sub
and
mov
movsl
pop
shlb
cltd
sub
sbb
rcl
cmp
aam
fnstenv
sub
in
enter
mov
mov
outsl
xor
adc
into
es
jg
stos
lcall
fcomi
jo
loope
push
push
sahf
xchg
insl
lcall
mov
stc
mulb
pop
dec
stos
ja
mov
rcrl
lock
out
inc
xor
je
insl
add
ja
lods
incl
fstpl
and
pop
push
mov
repnz
dec
lret
ja
movsl
xchg
lds
mov
mov
xlat
cltd
dec
imul
stos
movsb
repz
lcall
sub
push
fisubrs
mov
out
out
imul
jge
scas
popa
imul
rep
and
jmp
and
outsb
jo
lds
push
or
add
jge
rcrb
fwait
rcrb
stos
lahf
jg
rcl
sub
into
ljmp
in
sbb
cmp
dec
mov
xor
jno
lods
lods
and
inc
pop
xchg
push
stos
insl
or
inc
cmc
cwtl
out
mov
mov
xchg
movsl
xchg
and
scas
jg
push
sub
push
push
cli
cmpsl
lock
insb
mov
dec
cmp
jnp
mov
in
or
fisttps
xor
or
test
imul
lock
mov
or
arpl
scas
out
and
and
aam
gs
fnstcw
sbb
ljmp
aas
sub
icebp
outsl
mov
adc
pop
nop
mov
cmp
dec
cmc
leave
bound
pusha
jp
add
ficoml
inc
lret
insl
shr
sbb
stos
cmc
sbb
inc
mov
jecxz
mov
mov
xchg
fcmovbe
mov
sti
push
jb
xchg
enter
push
jno
xchg
mov
shrb
jae
call
mov
pop
ljmp
or
inc
call
add
fisttpl
imul
and
adc
mov
adc
xchg
adc
pop
lods
push
fidivrl
adc
push
imulb
or
int3
dec
sarb
leave
dec
add
cmpsl
aad
pop
call
lods
jo
adc
mov
inc
gs
push
lahf
pop
cmp
jmp
scas
push
ret
mov
pop
divl
pop
pop
das
clc
xchg
pusha
pop
pop
fcomp
sbb
dec
lods
inc
mov
add
ss
or
fucomi
adc
inc
jp
sbb
dec
mov
jae
adc
loope
cmp
ss
adc
jge
mov
fstpt
ja
sbbl
or
mov
mov
in
pop
mov
jbe
addr16
lods
push
xor
adc
adc
and
mov
xlat
adc
mov
mov
jae
mov
fbstp
fwait
dec
cli
jle
xchg
mov
jnp
movsl
mov
je
pushf
stos
cmp
xor
sub
hlt
jae
loop
inc
scas
sub
fldcw
cmpsl
xlat
add
jl
xor
stc
mov
fsubrl
out
fsts
addl
push
lret
cltd
lcall
stc
jae
movsb
push
mov
sub
call
in
in
cmp
xchg
fnstcw
adc
push
ret
sbb
scas
pop
push
push
pushf
mov
out
inc
aaa
aam
andl
cwtl
lock
inc
sub
js
lret
es
xor
not
jecxz
jbe
add
fbstp
inc
push
sub
push
mov
mov
adc
dec
icebp
fwait
pop
ljmp
push
call
bound
jmp
push
jle
subl
adc
shll
mov
jbe
or
mov
das
mov
sub
mov
dec
jle
mov
xor
xchg
out
inc
faddl
xchg
in
popf
jo
shlb
xchg
jb
push
jecxz
push
insl
push
pop
rcrl
out
lock
push
repz
add
lret
fidivs
mov
enter
aaa
sub
cwtl
setge
cli
adc
lods
dec
sahf
sub
and
mov
test
call
pop
mov
cs
sub
mov
inc
pop
sub
xor
sbb
repnz
inc
enter
out
fisubrs
pop
sub
pop
pop
shrl
aad
sbb
fidivrl
aad
sar
leave
mov
dec
outsb
fisttps
test
addl
inc
repz
add
pop
andl
mov
mov
cmp
aad
sbb
cmpsl
fisubrl
in
mov
or
push
push
and
shll
jne
sbb
xchg
add
cli
imul
pop
shll
dec
xor
popa
pop
and
mov
fbld
popa
mov
std
shrb
mov
pop
test
cwtl
xlat
pop
sahf
push
sti
icebp
or
stos
dec
adc
jmp
inc
add
pusha
loope
lea
cmp
in
inc
and
pop
in
pop
jl
icebp
mov
push
inc
loop
mov
sbb
xchg
call
scas
sbb
in
test
lret
stos
int
das
pop
in
jb
dec
int3
xlat
mov
and
outsb
jmp
cmp
andb
inc
pusha
sbb
sbb
andb
lret
test
adc
mov
in
ret
add
daa
outsb
loop
scas
and
or
dec
gs
jmp
in
mov
push
nop
cmpsl
push
ss
lcall
jbe
out
roll
mov
xorl
dec
xor
repnz
mov
cs
inc
cltd
sbb
ret
fs
leave
push
shll
sbb
cmp
out
pop
ljmp
sub
cmp
outsl
jp
xchg
sahf
scas
or
rcl
mov
mov
xlat
imul
mov
stos
imull
lea
nop
push
bound
pop
in
loope
or
in
in
jbe
sub
iret
and
push
xlat
neg
int3
sub
int3
push
popf
lret
aaa
hlt
add
mov
mov
mov
repz
sti
xlat
inc
fnclex
xor
jmp
jnp
lcall
cmc
mov
popf
push
xchg
nop
out
imul
aaa
jae
int3
sub
sub
mov
push
dec
arpl
adc
xchg
push
jg
cld
mov
cmpsl
mov
push
mov
sub
pushf
repz
movsb
pop
shlb
scas
rol
pop
xlat
scas
fcmovnb
xchg
and
testl
mov
inc
mov
cmp
out
out
inc
xchg
lods
lret
dec
sbb
mov
gs
gs
cmp
mov
repz
push
push
fisttpll
add
add
dec
fwait
lds
out
fstpl
mov
adc
adc
pop
push
fdivl
adc
jb
fisttps
in
int3
aas
cmp
in
inc
jmp
xor
lods
xor
dec
jnp
fs
inc
ja
pusha
int3
xchg
ss
mov
enter
stos
sbb
mov
mov
ja
push
add
mov
push
adc
test
jp
adc
xchg
sarb
pcmpeqd
loop
mov
clc
testl
jae
or
testl
mov
insl
push
cmpsb
push
ds
adc
jno
clc
jno
add
jno
aaa
and
adc
lea
push
dec
pusha
inc
cld
and
xor
or
adc
cmp
pop
xlat
aaa
pop
cli
repnz
sarl
mov
pusha
adcb
xchg
mov
sbb
add
jle
mov
lret
or
dec
adc
in
mov
xor
cmp
cmp
push
js
jecxz
jne
mov
or
aaa
sti
movsl
in
push
inc
mov
packssdw
outsb
notb
push
nop
cmp
ret
in
mov
pushf
div
cmp
mov
int3
lret
adc
or
mov
mov
xor
setns
dec
dec
ljmp
xor
ffree
mov
cmpsl
jp
jmp
aam
repz
add
mov
sub
cmc
aas
cmp
loope
fs
lahf
sbb
adcb
fisubl
in
cld
pop
push
push
subl
xchg
and
pop
je
roll
clc
ja
sub
decl
lret
mov
icebp
ret
enter
push
lret
lods
add
push
rorb
cmpsl
imul
inc
cmp
clc
outsl
lcall
adc
inc
in
clc
xchg
cmp
ficompl
sub
sub
cmc
insl
push
cli
jge
sbb
mov
test
ds
pusha
outsb
jne
test
ret
mov
js
xor
mov
fxrstor
xor
out
mov
jne
xchg
add
daa
fsubs
push
mov
imul
bound
inc
jp
xchg
sub
mov
add
push
pusha
jmp
or
pop
dec
movsl
jg
adc
and
ret
inc
add
dec
js
push
sti
jno
repnz
add
mov
add
mov
sbb
fs
lods
mov
cmp
lods
aas
lcall
sbb
pop
push
outsb
or
xor
bound
sahf
lds
adcb
xor
je
jmp
adc
jne
mov
xor
jle
lahf
movsb
mov
mov
stc
pushf
popf
imul
jbe
jmp
mov
pop
sbb
into
sub
mov
aad
sub
ret
std
mov
push
inc
dec
test
pop
cmp
or
div
mov
xor
test
fs
lea
mov
aaa
mov
add
push
dec
pop
push
lds
sahf
mov
xchg
xchg
imul
pop
push
mov
and
jge
int
inc
movsl
pusha
insb
lods
mov
pop
jno
call
lret
lock
xlat
in
xor
nop
inc
pop
lock
sbb
add
mulb
mov
xor
cmp
cmp
int3
es
cli
push
iret
pop
or
aas
adc
stos
mov
add
inc
jae
sbbl
xor
pop
cs
stos
inc
loop,pn
jb
xor
dec
jmp
jno
jnp
icebp
out
loopne
jo
dec
xchg
lcall
stc
mov
fstp
sub
mov
push
cmp
or
enter
shl
add
stc
sbb
pop
in
push
icebp
sahf
enter
fidivs
jns
pushaw
mov
mov
pop
pop
pushf
js
loop
pop
scas
aas
jp
in
push
std
xchg
mov
push
sbb
mov
fsts
push
enter
mov
daa
stos
jp
in
or
pusha
call
sahf
aad
cmp
daa
xor
aas
dec
loope
mov
imul
sbb
mov
js
test
mov
decb
jle
xor
sbb
mov
mov
call
scas
or
xchg
mov
lea
xor
xchg
inc
mov
dec
or
xchg
inc
cli
orb
mov
mov
ljmp
cwtl
lods
add
repnz
into
inc
daa
jmp
pusha
fistps
mov
rcrl
adc
addr16
out
clc
xchg
xlat
clc
jae
in
adc
pop
jne
sbb
xchg
inc
adc
pop
imul
pop
mov
int3
sub
mul
insb
mov
jmp
inc
xor
inc
in
fbstp
add
outsb
movsb
cmp
inc
push
stc
inc
pop
or
jnp
loope
aad
inc
sbb
inc
or
andl
push
outsb
xor
dec
xchg
mov
lods
sbb
jg
aam
cmp
push
cli
stos
push
clc
aas
das
or
pop
mov
sbb
mov
movsl
fiaddl
or
and
and
mov
push
lds
push
cltd
dec
pop
test
jecxz
fcoms
or
adcb
xor
arpl
and
inc
or
inc
sbb
xor
add
lea
cs
enter
imul
mov
mov
imul
sbb
aad
dec
cmpsb
pop
push
mov
pop
loope
xlat
outsl
out
cmp
adc
xchg
mov
outsb
sub
outsb
aam
fiaddl
adc
xchg
sub
pop
lret
aad
shlb
repnz
mov
adc
gs
xor
xor
sub
or
inc
lret
adc
aam
pop
cmp
repz
jge
sub
mov
out
mov
nop
mov
pop
jmp
inc
loope
add
add
xchg
fldt
xor
push
outsb
daa
and
lock
or
jo
fsubrs
scas
fisubs
pop
cltd
add
out
lds
fucomi
pop
push
sbb
jl
push
pop
xorb
dec
divb
or
rcrb
adcl
sub
cmc
xchg
jae
xchg
pop
add
pop
pop
shl
jo
inc
jno
mov
xor
adc
pop
push
rclb
xchg
pop
sub
cmp
add
insb
jne
xor
stos
daa
lret
call
cwtl
push
pop
mov
testl
shlb
pushf
or
mov
pop
fucomi
repz
nop
add
les
fildl
xchg
mov
pusha
cli
xor
setns
cmp
cmpsl
aam
or
ret
mov
test
inc
insl
mov
mov
out
mov
loope
outsl
mov
push
mov
and
movsl
sub
negl
push
test
inc
outsb
pop
push
je
repnz
movsl
stos
stos
cmp
jecxz
fadds
xor
push
cmp
ja
ret
sub
das
imulb
hlt
popa
push
cmpsb
out
enter
mov
or
daa
mov
sub
pop
lcall
push
and
les
and
sub
push
test
or
mov
dec
repnz
pop
mov
pop
mov
xchg
mov
push
cmp
pop
iret
xorb
popf
insb
pop
push
ja
mov
cmp
push
movsl
dec
sahf
out
mov
lcall
or
inc
je
xchg
aam
mov
pop
in
fcom
cmp
or
dec
push
xor
pop
xchg
adc
push
cmp
push
push
mov
inc
addr16
jp
cwtl
bound
in
mov
sub
jbe
cwtl
jmp
dec
mov
gs
shll
cltd
sbb
in
lods
nop
jmp
cmp
push
cmpsl
negl
test
cld
mov
mov
rcrb
mov
pusha
je
cmp
mov
sbb
adc
xchg
lock
mov
inc
add
jmp
stos
jnp
pop
mov
jge
add
incb
fsubrl
push
xchg
dec
jne
push
adc
out
aad
and
shll
inc
pop
mov
adc
rorb
and
mov
sub
push
mov
pop
in
mov
scas
xchg
shr
fidivrl
adc
mov
jmp
in
mov
adc
xlat
test
out
loop
inc
sbb
cmp
xchg
adc
lret
scas
scas
xchg
inc
mov
fucompp
mov
jne
sbb
xchg
jp
pop
rorb
ss
lock
dec
jne
mov
sti
repz
out
stos
or
aam
lahf
outsl
sub
fdivrl
pop
inc
cmc
jae
pop
jg
call
jne
mov
imul
mov
loope
xchg
mov
es
out
rolb
jae
pop
negb
popa
xor
rclb
fidivrs
pop
scas
daa
xor
mov
push
or
sbb
xchg
lret
psubusb
xchg
fisubrl
ljmp
jp
lods
push
mov
jecxz
jnp
inc
hlt
into
push
add
out
jge
push
scas
push
xchg
mov
movsl
sbb
sahf
fidivs
pop
hlt
push
test
jbe
inc
inc
xor
lret
xor
or
cmpsl
popa
jne
inc
test
popf
repz
aas
fcmove
movsl
mov
data16
and
mov
fdiv
pop
jmp
rcll
sbb
and
adc
sar
repz
popf
mov
xchg
mov
cmpsl
js
hlt
in
aas
jp
mov
sub
cmp
sub
mov
mov
dec
adc
adc
out
push
div
pop
pop
push
in
inc
dec
ret
popa
xchg
inc
cld
sbb
stos
mov
mov
xchg
push
pop
stc
pusha
out
xchg
imul
sahf
fisttpll
lock
push
insb
mov
mov
or
movsl
add
hlt
mov
mov
cwtl
jno
outsb
gs
or
call
lahf
dec
les
aad
in
lods
test
cmp
inc
mov
lock
dec
xchg
sti
mov
jle
stc
or
push
inc
pop
ljmp
push
mov
cmp
dec
arpl
mov
dec
fildll
int
repz
notl
mov
dec
movsb
rcll
or
jp
mov
push
jne
scas
andb
sahf
add
in
sbb
xchg
mov
pop
pop
test
out
pop
iret
std
shll
popa
sahf
pop
clc
pusha
pop
out
test
mov
mov
ljmp
pop
sub
add
ljmp
and
or
jae
scas
and
push
push
ljmp
addr16
dec
pop
xchg
int3
dec
insb
jne
mov
mov
sub
cmp
cmpsl
leave
mov
sbb
sbb
xlat
jnp
cmpsl
pop
insl
in
mov
mov
mov
iret
sbb
in
mov
mov
into
js
xchg
ss
lahf
push
mov
push
pop
sbb
push
adc
imulb
jae
out
out
pop
sub
inc
outsl
in
jne
out
leave
mov
dec
fisubrl
mov
jmp
jge
adcb
fbstp
mov
loope
sub
pop
push
xchg
jno
mov
test
mov
adc
xchg
leave
mov
jl
lahf
repz
xor
xchg
jp
add
cmc
outsb
push
mull
lods
data16
outsl
stos
push
mov
jbe
loopne
in
xlat
lods
and
cs
int3
sub
mov
push
loop
aaa
subl
sbb
aam
push
jp
push
add
mov
fwait
cmpsl
adc
pop
and
clc
inc
lds
push
or
leave
jecxz
or
jns
shll
inc
sub
iret
scas
iret
add
mov
outsb
and
nop
bound
pop
pop
testb
mov
rcll
cmpsb
call
mov
sub
lea
movsl
jl
jl
je
jge
mov
mov
dec
hlt
fcomps
add
cmp
ss
test
adc
fnstenv
cmp
cmpsb
lcall
loope
pop
fld
dec
shl
popa
and
adc
lahf
inc
mov
cvttps2pi
roll
loop
inc
loopne
stos
add
sbb
pop
sahf
jp
es
xchg
jb
pop
ror
adc
subl
mov
sarb
cli
dec
fdivp
std
mov
or
cmpsl
or
push
subl
lahf
iret
rcll
push
loop
push
shr
push
and
cmpsl
adc
into
sbb
and
lods
fidivrl
inc
mov
ds
aaa
cwtl
test
in
arpl
out
sub
lret
pop
jmp
subb
aad
inc
stc
cmpsl
dec
sti
mov
jl
hlt
inc
insb
dec
scas
mov
dec
and
sbb
loopne
fisubrl
cmpsb
push
mov
jne
fildl
sub
call
mov
pop
sub
enter
cmp
leave
jns
sub
movsb
in
or
into
jns
cld
cmpsl
pop
in
test
hlt
mov
push
cmpsl
add
test
and
sbb
lret
pop
jg
mov
test
scas
sbb
adc
push
mov
sbb
add
pop
xor
rol
dec
dec
icebp
andb
mov
leave
jl
call
add
jle
ds
sbb
xor
xlat
cmp
fistps
rorl
gs
bound
sub
mov
fwait
fs
iret
jle
lods
inc
mov
stos
insb
in
lret
std
mov
add
repnz
pop
mov
into
out
mov
jno
out
test
or
in
fdivl
in
fnsave
in
cmpsl
cli
xchg
pop
cmp
inc
test
je
stos
mov
cmp
loope
dec
jnp
rcrb
dec
mov
fidivrs
inc
sbb
shl
sbb
or
pop
mov
movsl
pop
xchg
rolb
add
xchg
pop
inc
pusha
inc
mov
test
jno
arpl
dec
pop
fidivrl
and
fs
or
fwait
inc
sbb
or
pop
xlat
mov
repz
push
cmpsb
sahf
insl
xchg
lea
jle
push
sub
fcmovb
jae
testl
in
aas
das
or
pop
adc
sbb
pop
xor
mov
xchg
mov
imul
mov
mov
lods
push
imul
cld
pop
js
enter
cmp
je
lret
ljmp
icebp
pslld
inc
loopne
add
lret
mov
bound
push
jmp
out
sti
fmull
gs
mov
mov
and
notl
cld
outsb
sti
pop
movsb
xchg
mov
lahf
mov
pop
arpl
in
and
mov
out
jb
lods
sbb
dec
mov
int3
jb
mov
repz
rcrl
in
mov
cmpsb
out
dec
fs
add
add
jnp
dec
add
fdivp
mov
aas
or
test
jne
adc
cmp
push
and
test
imul
stos
xchg
out
insb
dec
sub
push
add
mov
popa
stos
shll
sub
adc
mov
in
fwait
or
jo
push
js
dec
stc
inc
ja
or
enter
mov
fcomps
fcoms
aas
or
dec
cmc
jle
jns
mov
inc
cmc
mov
xchg
jnp
xlat
aad
pextrw
addr16
xchg
loope
cld
add
aas
out
leave
ja
mov
jo
dec
xchg
inc
in
inc
fisttpl
push
out
fisttpll
mov
js
fninit
add
lret
xor
insl
enter
sbb
jmp
mov
xchg
repnz
mov
mov
xlat
jbe
mov
cli
inc
mov
and
inc
or
mov
mov
inc
adc
xchg
cmc
in
add
fmuls
inc
add
subl
scas
out
mov
ret
int3
push
fwait
adc
test
fwait
jge
loop
jecxz
lds
mov
cmp
xchg
add
insb
dec
repnz
push
inc
addb
sub
arpl
cmp
gs
and
cmpsl
or
inc
lods
cmc
shlb
pop
adc
pop
inc
leave
cld
imul
sub
cli
push
push
push
shld
cld
gs
push
lea
out
jae
nop
fidivs
push
lea
push
sbb
cmp
or
lock
in
out
jmp
outsb
divb
lret
jnp
les
or
nop
lcall
scas
negl
mov
cmp
fwait
inc
dec
aad
xor
jbe
test
push
scas
iret
into
fistl
repz
mov
bound
dec
sbb
jo
pop
cld
jo
sti
lock
inc
scas
xchg
jle
jl
xor
fstpt
and
cltd
enter
push
adc
xchg
andb
out
pop
bound
xor
push
insl
push
sti
or
xchg
dec
mov
fisttpll
nop
sbb
push
mov
data16
add
mov
fcoms
je
cltd
test
adc
fimuls
lods
and
push
sarb
mov
or
mov
je
repnz
jge
movsb
jno
pop
pop
dec
aaa
and
les
call
mov
mov
notb
xor
fcomi
mov
insl
je
ret
adc
js
push
lock
pushf
addr16
pop
mov
cmp
xchg
cmp
insb
into
adc
inc
aaa
sbb
stos
push
inc
cld
jge
cmp
fldenv
xor
mov
cmpsb
mov
jnp
imul
stos
int
loopne
xchg
test
push
data16
test
inc
mov
lods
shll
push
xor
adc
loop
xor
or
adc
cmpsl
pop
cmp
push
in
lahf
mov
mov
push
push
cwtl
jg
stc
fbstp
aad
dec
mov
or
mov
or
mov
in
stos
das
imul
dec
adc
mov
inc
pop
stos
add
cmp
cmp
push
outsb
add
aad
mov
or
jp
push
out
aas
shlb
out
jp
mov
orl
cmpsl
mov
sbb
fistpl
out
and
sbb
popf
mov
inc
mov
mov
dec
out
rolb
addr16
fs
jecxz
jno
subb
mov
aad
dec
xchg
xlat
mov
mov
mov
or
mov
call
fbld
les
jle
dec
lret
pop
mov
push
push
xchg
shll
stos
loop
pop
bound
pop
cli
jnp
call
sub
fwait
sbb
mov
ja
mov
test
dec
mov
dec
mov
push
pop
mov
mov
out
push
pusha
push
mov
ret
mov
dec
jecxz
test
sub
pop
push
dec
xchg
mov
and
lcall
fisttps
mov
cmovno
or
int3
jb
pop
pop
xchg
mov
mov
test
fildl
mov
popa
push
mulb
cmp
mov
rcll
fistpll
cltd
xor
adc
scas
mov
lds
jo
xorb
mov
insl
jbe
cwtl
xchg
xchg
sti
nop
push
mov
out
pop
push
lcall
pop
push
fldl
inc
shlb
cmp
call
cmp
mov
xor
mov
ret
into
adc
cltd
jle
push
add
pushf
rcrl
pop
xchg
pop
cmpb
mov
xor
mov
jo
gs
mov
in
sub
cwtl
cmp
add
outsl
cmp
mov
insb
and
stos
inc
add
iret
mov
and
negb
in
sarb
add
pop
jmp
fwait
in
sbb
jmp
nop
or
in
jg
add
jnp
movsb
mov
jg
dec
or
orps
sbb
mov
adc
cwtl
negb
pop
or
mov
mov
cmc
scas
push
repz
mov
inc
inc
sbb
test
or
nop
imul
add
xchg
les
or
cld
and
dec
pop
mov
adc
nop
dec
jb
insb
xor
or
or
popa
xchg
fmul
adc
enter
dec
mov
mov
clc
dec
lahf
aad
sub
fidivl
adc
push
dec
das
sub
xor
push
mov
out
fs
stos
fwait
mov
xor
stos
mov
out
call
cmpsb
imulb
or
and
insl
popl
or
enter
fidivrs
mov
aam
ret
daa
outsb
or
rcll
mov
add
jne
mov
cmp
dec
cmp
sbb
lea
push
add
mul
hlt
mov
or
cltd
test
mov
jns,pn
sarb
icebp
mov
das
mov
jmp
or
popf
mov
pop
ja
out
test
mov
mov
pop
dec
scas
dec
sub
or
jecxz
sbb
es
aam
mov
lret
xchg
enter
cmp
adc
mov
mov
mov
into
mov
jns
xchg
ljmp
mov
fisttpl
push
andb
push
sub
mov
loop
icebp
sub
pop
orl
ja
fbstp
das
add
mov
jp
cld
pop
push
ljmp
sbb
jns
or
adc
pop
mov
aaa
xor
sub
jg
sub
in
pop
pop
xor
lret
pop
xchg
dec
gs
lret
adc
loop
mov
inc
movsl
in
mov
and
xor
lea
insb
cmp
in
test
lds
pop
sbb
jo
lock
je
dec
fwait
je
cli
xchg
add
inc
xlat
cltd
out
push
stos
fs
iret
lea
loop
mov
test
js
mov
out
scas
nop
rcr
fidivs
lods
sub
not
push
mov
gs
pop
sbb
fnstcw
neg
loopne
adcl
jg
xchg
loop
xchg
pop
hlt
push
xor
pop
leave
je
inc
jge
dec
mov
cmp
ss
loopne
dec
les
sub
add
mov
lcall
jmp
in
pushf
pushf
xchg
xchg
into
daa
jns
in
pop
divl
int3
dec
jne
and
fnstcw
and
adc
mov
inc
mov
jbe
cs
mov
adc
jnp
adc
mov
jle
imul
mov
scas
imul
std
adc
ljmp
shll
sbb
shrl
xor
out
pop
mov
iret
push
andl
adc
or
add
sbb
jge
enter
popf
scas
imul
cmc
lods
or
jne
negl
shr
jmp
divl
mul
ret
adcb
fidivrs
xor
add
ljmp
daa
mov
bound
outsl
mov
mov
or
and
test
cld
mov
jle
add
adcl
jmp
mov
ficoms
sub
je
sub
dec
repnz
mov
and
ret
xchg
fwait
test
icebp
xchg
push
dec
mov
outsl
xor
mov
mov
stos
inc
addr16
add
ret
add
subl
rcl
jecxz
insb
jno
xorb
sbb
or
insl
push
cmp
adc
mov
pop
pop
lods
imul
out
cmp
push
es
shlb
inc
xor
and
add
push
js
adc
imul
adc
jno
mov
cmpb
add
mov
push
pushf
adc
shr
pop
stos
mov
stc
cmp
enter
and
push
mov
fs
and
pop
add
dec
fcmovne
test
mov
lahf
xlat
rclb
add
sub
addr16
into
push
push
outsb
rolb
in
pop
cmp
cld
push
push
push
push
aad
out
aam
xchg
mov
std
pushl
push
scas
mov
push
and
xorl
insb
repz
and
cltd
xor
or
cmp
jl
test
xchg
fdivl
fcmovu
int3
test
inc
lds
or
leave
dec
mov
mov
sahf
or
sbb
pop
fmuls
fimuls
insl
leave
sub
cs
cs
xchg
in
pop
xchg
ficoml
cmc
mov
rolb
insb
pop
movsb
xchg
add
mov
pop
lret
inc
cmp
mov
push
mov
inc
mov
inc
data16
or
pusha
aaa
test
pop
sahf
xchg
lods
cld
add
mov
into
out
shrl
mov
arpl
add
loop
mov
jmp
dec
fisttpll
mulb
mov
or
shll
rolb
cmp
xchg
shufps
lcall
xor
ljmp
and
mov
lods
out
call
nop
push
jg
cmpsl
mov
jbe
in
jmp
pop
lcall
pop
mov
sbb
bound
pop
push
xlat
and
nop
int
aad
dec
jl
stos
cmp
mov
rcl
pushl
xchg
stos
icebp
jb
pop
sub
jne
cwtl
or
push
insb
fnstcw
jmp
xchg
sbbb
mov
jbe
pop
inc
mov
add
popf
cmp
and
pop
shll
lea
stos
stc
push
aas
xchg
inc
cltd
pop
jmp
push
lods
dec
stos
icebp
sbb
xchg
inc
pop
dec
movsl
in
repz
sarl
mov
jns
push
psrlq
sahf
mov
adc
mov
je
ljmp
sbb
popf
xchg
cmp
loope
lahf
js
dec
nop
mov
inc
cmp
les
in
mul
fiaddl
jl
call
lcall
xchg
stos
sarb
mov
iret
dec
jno
lds
cwtl
dec
mov
xor
adc
dec
mov
xor
fs
aam
jp
test
cmpsb
icebp
mov
add
mov
push
cmp
fwait
popa
jb
ds
icebp
sub
lret
jns
ror
je
sahf
xor
mov
jae
mov
leave
mov
jae
punpckhdq
and
xchg
jmp
fcmovnbe
leave
movsb
ret
lret
mov
push
out
ret
jge
adc
mulb
mov
cld
call
sbb
es
sbb
add
and
shr
jb
in
nop
and
sbb
dec
jbe
or
xor
mov
lock
jne
xchg
push
cwtl
cs
clc
loop
cltd
xchg
rolb
hlt
push
xchg
pop
in
jecxz
hlt
mov
sahf
inc
setbe
popa
xchg
pop
xchg
adc
adc
popf
and
sub
cmp
xlat
in
iret
sub
cli
call
dec
mov
push
jge
mov
jb
pop
inc
ffree
cmp
icebp
sti
sub
inc
lret
dec
lods
xor
and
dec
dec
mov
test
jl
mov
sti
cld
insb
pop
xor
icebp
add
dec
push
xchg
notb
and
push
xor
inc
js
push
sbb
fcoms
test
or
add
xchg
mov
pop
pusha
xlat
jl
cltd
out
lret
mov
sbb
sbb
test
ret
dec
popa
sbb
sbb
dec
in
iret
inc
xor
cmpsl
adc
pop
xor
int
pop
mov
push
cwtl
leave
jecxz
into
pusha
or
cmp
xor
mov
jl
dec
lcall
xor
lods
jnp
mov
and
insl
dec
idiv
inc
js
dec
add
push
adc
dec
sbb
sbb
or
adc
inc
cltd
and
xor
inc
fwait
out
pop
insb
jg
std
pop
jno
sbbb
jmp
xchg
dec
dec
sub
outsl
pop
pop
clc
imul
ljmp
stos
inc
lods
inc
loope
jmp
insl
or
inc
movsl
fnstcw
xchg
mov
fdivl
loope
ja
dec
push
xor
push
repz
mov
outsb
cmp
and
test
movsb
mov
jne
and
pusha
jae
mov
lahf
or
lret
sbb
sub
push
mov
add
jg
in
into
jle
and
jmp
ret
stos
jmp
icebp
dec
sub
xchg
inc
js
ret
sbb
test
dec
popf
cmpsb
shlb
mov
lea
push
mov
sti
mov
leave
inc
inc
in
xor
cmc
push
lret
divl
xchg
mov
fsubrl
inc
rcrl
cltd
aas
iret
push
inc
inc
mov
adc
shr
or
push
pusha
mov
ds
stos
js
das
outsl
sub
xchg
add
dec
inc
loopne
in
cwtl
repz
adc
or
fcoms
lret
jnp
add
pop
orl
loop
test
gs
cmpsl
mov
and
mov
ret
cmp
pop
mov
add
xlat
adc
dec
dec
or
movsl
lods
out
loop
jb
pop
pop
mov
in
xchg
jnp
mov
pop
aaa
in
scas
adc
mov
cmpsl
out
bnd
dec
push
mov
leave
cmc
jne
sub
jb
in
iret
and
adc
dec
mov
and
jecxz
out
int3
push
sub
pop
idivl
test
push
mov
loopne
and
and
popa
fadd
inc
adc
dec
cmp
sub
cmp
mov
and
xchg
or
push
pop
mov
xor
xor
or
jmp
adc
pop
es
push
call
push
dec
pop
adc
lahf
mov
or
mov
popa
cld
testb
shr
sbb
mov
cmc
mov
lock
or
aad
sub
das
jbe
mov
cmp
mov
push
lods
icebp
jno
mov
xchg
enter
xor
cld
mov
mov
test
and
fs
xchg
and
mov
cmpsb
inc
sub
push
push
lcall
mov
je
lods
xchg
test
das
dec
rolb
in
scas
pop
sub
sub
mov
pop
cmpsl
pop
fdiv
add
aaa
cwtl
mov
je
jl
testb
outsl
loope
hlt
xor
cmc
adc
xchg
das
push
dec
jb
dec
in
cmp
sub
sub
and
sub
fdivs
ds
nop
and
cmp
jl
push
gs
test
adc
imul
rcrb
adc
pushl
ja
lds
test
mov
push
inc
pop
dec
push
cmp
inc
insb
loope
adc
mov
xchg
xadd
inc
cmp
cmp
xchg
push
arpl
fnstcw
xor
dec
insb
fcomi
ds
mov
push
add
dec
cli
bound
push
mov
aam
fldcw
jge
orl
push
xchg
aad
ja
add
mov
lret
inc
pop
push
add
push
movsl
inc
push
xor
enter
add
add
daa
mov
mov
out
pop
cmc
in
mov
xchg
and
out
enter
mov
mov
ljmp
jp
add
das
xor
mov
xor
insl
jno
test
inc
stos
xchg
pop
stos
iret
imul
jge
loopne
arpl
negl
pushf
repz
test
xlat
xor
mov
rorl
sub
test
movsl
jo
mov
mov
pop
sbbl
sbbl
repz
cli
cmpsb
cmp
inc
push
popf
jg
stos
loopne
icebp
cmp
jmp
cmp
xchg
jg
imul
sbb
mov
inc
and
fisubrs
outsl
jne
ss
jmp
stos
and
movsb
cmpsb
in
test
push
test
daa
mov
cltd
nop
sbb
addb
outsb
inc
stc
stc
mov
ror
mov
or
add
ljmp
aas
pushf
sub
int3
rcrb
mov
movsb
push
mov
mov
or
lahf
lret
jp
mov
repz
push
movsl
outsl
inc
nop
cmp
clc
adc
frstpm(287
or
mov
mov
pusha
pop
repz
loop
mov
test
xchg
sub
xchg
adc
ds
shl
ret
cmp
and
cltd
std
push
test
ss
int3
cmp
notl
clc
sarl
dec
cmp
mov
dec
mov
ficoml
and
fs
lcall
movsl
add
mov
xchg
sub
or
in
adc
cli
fcompl
cmpsb
loope
shlb
xchg
nop
js
sahf
inc
xchg
push
xchg
push
mov
aad
jmp
fidivrs
insl
sub
push
inc
cmp
test
add
mov
jno
xchg
shrb
xchg
dec
insb
jne
pop
gs
jmp
lods
lods
jo
dec
sbb
inc
and
mov
in
stos
adc
sahf
iret
je
xor
js
mov
mov
mov
sub
sahf
mov
mov
and
and
or
inc
loope
cmc
dec
sub
lock
inc
shl
xor
loope
push
xor
pop
adc
push
or
mov
call
pop
int3
dec
in
mov
xchg
incb
or
ljmp
test
xchg
jecxz
mov
xor
movsl
into
scas
and
je
add
sbb
sbbl
push
std
daa
xor
mov
adc
cld
imulb
push
leave
jae
shrb
push
mov
lahf
roll
jne
and
addr16
lahf
addr16
pop
or
pop
imul
mov
faddl
jno
adc
mov
lea
adc
or
inc
inc
adc
aam
addb
insb
lds
lret
mov
mov
adc
sub
arpl
xchg
jns
or
xchg
insl
cmpsl
xchg
in
test
fidivs
enter
xor
jo
lods
mov
cmp
in
enter
lods
nop
lcall
sarl
mov
or
mov
pop
mov
or
pop
sarl
mov
mov
add
ds
mov
push
or
xchg
inc
aas
cmp
insb
adc
xor
push
clc
inc
rorl
xor
mov
out
mov
jecxz
das
jg
mov
out
sub
cmp
scas
pushf
insl
movsb
fisubrs
ljmp
sbb
out
ljmp
fiadds
stos
addr16
insl
imul
mov
insb
and
call
loope
fistpll
jns
mov
cmp
cmp
incl
lcall
addr16
pop
and
dec
gs
iret
adc
xchg
lea
fcomi
sub
nop
popa
sbb
hlt
pop
loopne
imul
mov
in
pushf
sbb
mov
sub
sbb
outsl
aam
sahf
leave
or
sub
popa
and
inc
loopne
xlat
cmpsb
stc
jno
push
enter
push
mov
repz
js
mov
xchg
sbb
cmc
or
into
std
cmpsl
jp
jbe
stos
icebp
push
out
mov
cwtl
dec
loopne
cmp
sbb
mov
mov
pop
outsb
cmpsl
cmc
pop
nop
push
cmp
decl
sbb
push
jns
leave
sub
adc
pop
jle
repz
popa
xchg
outsl
int3
movsl
ljmp
jp
fdivl
lcall
fcoms
cmp
lods
nop
add
lret
sub
stc
xchg
jle
xor
std
data16
fnstsw
inc
popa
cltd
jno
lahf
leave
mov
sahf
pop
mov
pop
cmp
lahf
sub
das
daa
ss
dec
pop
shll
lahf
pop
lods
xor
stos
test
cmp
dec
lahf
and
pop
subl
push
je
stc
das
mov
jmp
in
mov
mov
in
or
push
cld
add
call
xchg
or
rcrl
cmp
je
movsl
inc
pop
adc
mov
pop
and
daa
xchg
in
jbe
jno
int
lea
and
pop
push
cs
in
nop
fcoms
cmp
out
leave
push
push
call
mov
mov
xchg
mov
imul
push
outsb
sar
test
sbb
pop
or
pop
rorl
add
add
aad
xchg
mov
outsl
stos
fiadds
add
scas
add
in
mov
daa
sub
enter
sbb
sbb
lods
mov
orl
imul
daa
push
js
outsb
cmpsb
jne
lods
mov
sbb
adcb
mov
or
or
fwait
dec
xchg
mov
cmp
cmpsb
sbb
dec
scas
jo
cld
push
dec
mov
insl
clc
icebp
lods
jnp
test
loopne
mov
lcall
jns
xor
fnstsw
pcmpgtb
cwtl
cld
sbb
or
ljmp
xchg
sti
sbb
lds
psubusb
jo
adc
mov
shrl
andl
push
push
mov
mov
inc
pop
xchg
mov
mov
and
sbb
jae
add
xchg
rcll
icebp
and
es
adc
xchg
outsb
jl
cmp
mov
mov
mov
xchg
out
subb
mov
push
mov
fsubrs
cmp
mov
ret
lds
inc
cmp
or
aad
sbb
mov
sbb
adc
stc
cld
xor
int
lahf
lods
insb
mov
push
mov
ljmp
lret
push
aaa
out
fldt
std
or
add
inc
cwtl
roll
cli
cmp
das
jns
pop
outsl
cmpsl
push
inc
addr16
movzbl
xchg
fmuls
pop
out
push
dec
sub
inc
in
dec
inc
inc
mov
add
pop
push
pop
cmc
inc
push
bnd
jmp
xchg
inc
lret
push
out
dec
pusha
dec
xchg
pop
mov
mov
sarl
dec
mov
push
inc
dec
inc
pcmpeqw
fdivl
push
lcall
adc
mov
cmp
mov
mov
xabort
leave
xchg
fucomi
xor
xchg
pop
dec
mov
add
dec
pop
or
push
or
xor
ja
sbb
add
jbe
jo
mov
adc
push
cld
inc
lret
fsubl
mov
cwtl
in
addr16
mov
movsb
fcmovnbe
dec
push
mov
popa
ljmp
add
dec
xor
inc
mov
sub
ret
xor
fsubs
xchg
pop
add
mov
jae
adc
cs
jnp
stos
arpl
mov
lods
jle
arpl
jno
mov
out
mov
pop
sahf
jecxz
mov
out
sub
dec
lods
cmpl
outsb
popf
mov
inc
imul
jb
rolb
lret
movsb
inc
xchg
xchg
fidivrl
push
xchg
sbb
push
std
pop
fdivr
jno
jae
dec
roll
cmp
leave
repnz
pop
insb
inc
cmc
orb
stc
insl
sbb
insb
inc
stos
inc
inc
addr16
pushf
xchg
sub
bound
mov
in
pop
imul
movsb
lret
mov
inc
out
loop
ror
sub
rolb
mov
cwtl
sub
or
pop
std
shrb
out
dec
mov
mov
push
and
and
lock
jl
test
xor
sub
cli
stc
mov
ret
imul
add
ret
cmp
lock
inc
cmp
call
sub
jb
dec
add
mov
push
cltd
mov
pusha
cmp
sti
sbb
scas
pop
addr16
cs
pop
roll
cmp
stc
lcall
test
movsb
aaa
aaa
xor
inc
xchg
pop
frstor
sub
adc
repz
mov
stos
and
and
mov
adc
fsub
rcll
out
lods
neg
sbb
fisttps
aad
or
outsb
dec
popf
push
dec
cli
cltd
daa
or
test
mov
test
sahf
xchg
repz
dec
arpl
repz
jb
dec
daa
push
insb
add
xor
jl
cmp
fdivs
cmpsb
push
mov
mov
flds
adc
cmp
dec
cmpl
and
mov
adc
push
ss
inc
gs
sbb
pop
rclb
and
jbe
add
add
imul
es
cmp
jecxz
xchg
pop
aam
popa
dec
or
inc
stos
jmp
in
mov
sti
cmpsb
repnz
dec
mov
mov
pop
and
inc
fcompl
sub
sub
movsl
jno
lahf
test
lods
gs
icebp
jb
out
and
ret
bound
sbbl
sbb
repz
les
les
xlat
aaa
inc
lret
mov
movsl
aaa
mov
sbb
pop
les
pusha
adc
mov
int
mov
adc
sti
pop
cwtl
xlat
mov
int
cmc
insl
mov
jnp
negl
movsb
adc
add
pop
ss
in
mov
ss
pushf
jb
and
rorb
xchg
pop
sub
shlb
mov
mov
and
jb
push
lea
dec
aas
in
mov
cmpsb
mov
jecxz
adc
inc
pop
stos
mov
inc
inc
pop
mov
dec
push
or
lcall
sub
lods
sbb
fcomps
jo
gs
mov
std
mov
addr16
jge
jo
mov
push
pop
jp
lret
add
jns
ja
fs
sub
ds
sub
mov
pop
mov
into
aam
in
jecxz
or
cmp
sub
popa
cmc
pop
ret
pop
mov
inc
out
jmp
or
popa
stc
push
aad
add
mov
xor
fildl
cmp
dec
push
adc
sub
mov
ret
mov
sub
cmp
subl
mov
lcall
enter
leave
sub
push
mov
pop
bound
jae
pushf
cwtd
int
out
jno
addr16
aas
or
dec
mov
jae
rorl
dec
add
dec
int
shlb
xchg
repz
adc
fwait
mov
icebp
in
js
fcomps
sbb
and
or
xlat
in
cmp
jae
jbe
mull
imul
stos
cmp
mov
subb
mov
jbe
fbstp
in
sbb
js
push
outsl
add
push
imul
push
shrl
shlb
cmp
gs
pop
fstpt
adc
cmpsb
cwtl
mov
sahf
imul
jnp
ret
hlt
sarb
popf
scas
mov
jmp
mov
lock
and
in
fs
imul
lcall
inc
in
jnp
xor
mov
pop
cwtl
out
int3
lret
movsb
add
hlt
mov
lds
pop
mov
push
add
movsb
cmp
push
mov
mov
es
pop
and
xchg
lret
or
fildl
fstpl
jne
jle
aaa
cmpsb
rcr
cmp
add
fildll
fsubr
std
cmp
xchg
inc
insl
into
icebp
mov
js
mov
cmpsl
inc
lock
fcomp
mov
lahf
pop
pop
mov
mov
das
dec
add
test
xor
in
jb
push
jmp
adc
fldl
or
lcall
add
nop
stos
add
mov
dec
repz
push
jl
push
cmp
imul
repnz
jo
mov
fistpll
add
xchg
and
mov
fidivs
sti
pop
sbb
or
sub
dec
mov
aam
leave
in
fstp
add
enter
jno
and
or
cltd
repz
jge
fimuls
ljmp
push
or
pop
pop
scas
sti
pop
mov
pop
sbb
mov
pop
icebp
mov
fnstsw
nop
movsb
and
pop
jle
stc
leave
cmp
mov
inc
pop
int
pop
mov
push
sub
rcll
mov
xchg
mov
int3
push
adc
lock
mov
das
ss
inc
xchg
gs
rcll
mov
cmp
dec
imul
and
hlt
xlat
icebp
mov
mov
push
xchg
add
mov
pop
cmc
dec
dec
adc
mov
mov
jecxz
movsl
fdivs
push
adc
shlb
mov
pop
pop
in
hlt
lods
lret
stos
leave
in
and
push
sub
out
shl
push
psadbw
jge
lods
hlt
das
mov
nop
push
dec
in
lods
les
xchg
jnp
je
xchg
pop
shr
divb
xchg
xor
ds
inc
jb
mov
out
lea
or
js
xchg
xchg
pop
test
ja
std
add
cmp
popa
xchg
neg
push
inc
mov
xchg
rcll
jnp
sbb
cmp
pop
adc
lahf
les
or
mov
hlt
lret
push
out
fwait
outsl
dec
aad
loope
mov
jns
pop
sbb
sti
or
pop
loope
push
cmpsb
clc
addb
inc
sub
insb
loope
movsl
adc
or
pop
xchg
push
scas
sub
aad
std
or
pop
push
inc
int3
mov
push
push
mov
push
push
pushw
movsb
jmp
jb
nop
pushf
xchg
xchg
dec
stos
jge
and
bound
jns
arpl
mov
inc
jne
push
or
fs
in
arpl
jp
jb
push
test
jmp
and
icebp
mov
mov
adc
mov
imul
addr16
hlt
bound
decl
jecxz
loop
push
cmp
jge
push
ljmp
mov
lcall
popf
sub
pop
fwait
cmc
stos
xor
xchg
mov
ja
rolb
pusha
icebp
mov
and
xchg
outsl
sub
adc
jp
cmp
cmp
pop
sub
inc
int
and
scas
push
mov
push
pop
inc
out
outsl
test
decl
and
sti
and
mov
lret
push
das
add
jp
push
pop
stc
lock
push
sahf
mov
mov
test
mov
fwait
xorb
inc
stc
dec
xchg
mov
in
lret
pop
cmp
xlat
jge
aad
jns
movsb
push
and
cli
mov
jp
jo
mov
add
push
or
cli
push
mov
pop
iret
mov
iret
add
fidivs
arpl
pop
push
mov
push
clc
das
mov
sbb
sbb
inc
pop
mov
rol
sbb
cmpsb
or
popa
push
mov
out
add
inc
jno
movsl
mov
fsub
xchg
sbb
cmp
xchg
outsb
out
lods
cmpsb
or
fmull
dec
fs
and
ss
scas
dec
mov
push
les
jecxz
mov
pushf
ficomps
es
sti
jmp
test
sti
inc
rorl
loopne
lock
dec
xchg
mov
mov
lret
repz
jp
sbb
mov
cs
lods
ror
ds
lock
sub
mov
xor
sub
jns
sbb
jne
jg
add
push
mov
adcl
xor
cmp
dec
repnz
ja
adc
nop
cwtl
mov
mov
add
cmp
imul
mov
lock
in
adc
xor
add
jge
enter
xchg
shrl
ljmp
push
or
jle
jmp
jp
cmp
cmp
ja
loope
lock
fwait
ljmp
int3
stos
push
ret
adc
sub
dec
and
rol
ret
xchg
mov
repnz
or
sbb
mov
add
cmp
lods
addl
mov
lods
sbb
adc
add
mov
jp
insb
scas
mov
ret
pushf
xchg
cmp
cltd
sub
int
pop
or
pop
test
pop
mov
gs
cmp
lcall
xchg
out
popf
push
pop
mov
sbb
movl
out
lcall
into
add
mov
in
fidivrs
mov
mov
popf
das
add
xor
pop
and
gs
mov
dec
decl
aam
stos
inc
xchg
xchg
dec
pop
pushf
and
jl,pt
dec
push
xor
imul
adc
arpl
out
jp
rcrl
scas
sbb
iret
adc
lods
in
pop
fsubrs
jb
jbe
xor
sub
in
mov
pusha
xchg
dec
xor
aad
adc
push
adc
cli
int3
popf
pop
and
gs
or
outsb
mov
xlat
lods
pop
cmp
fwait
imul
pop
lock
popa
imul
push
mov
stos
shll
mov
flds
push
or
fs
fcompl
stos
and
xchg
stos
test
push
inc
pop
cwtl
dec
js
sahf
rolb
jle
test
jl
les
sbb
dec
xor
cmp
fldt
lea
dec
push
mov
mov
icebp
and
dec
dec
jp
inc
aaa
jg
jge
inc
sarb
add
push
and
cmp
fidivs
rorb
pop
stc
lret
loop
push
out
stos
adc
aam
popa
xchg
adc
and
je
and
lret
dec
cld
in
xor
sbb
and
fwait
push
xor
sarb
in
iret
jae
mov
fistpl
xor
or
out
jb
cld
bound
sbb
test
push
jno
sub
in
out
pop
test
mov
add
sbb
hlt
dec
cmp
pop
mov
sub
push
pop
dec
xchg
lock
adcl
mov
cmc
adc
or
xorb
mov
xor
sub
sub
repnz
pop
xchg
and
push
scas
dec
xchg
and
mov
iret
daa
scas
dec
movsb
jae
mov
loope
es
int3
lock
push
es
mov
leave
mov
in
mov
pop
fadd
adc
cmp
cmp
ret
and
or
incl
sbb
dec
mov
mov
xor
fisttpl
pop
jle
xchg
mov
cmp
jae
inc
int3
cmpsb
jns
xchg
dec
mov
lahf
mov
mov
xchg
dec
cmp
jo
cmpsb
or
in
cmp
sbb
mull
leave
repnz
cwtl
adc
mov
sub
into
sbb
inc
xchg
add
shl
je
xchg
push
jne
daa
in
ljmp
push
cmp
dec
ret
fistpl
fists
pusha
mov
jmp
mov
xor
sub
stos
adc
nop
push
add
push
sub
outsl
popa
mov
jns
lret
bound
sbb
push
sbb
cwtl
test
mov
and
jbe
xchg
cmp
adc
arpl
into
push
mov
xchg
lods
cmp
pop
ret
sbbl
or
fidivs
xchg
stc
or
js
push
push
xor
xchg
repz
lods
push
ds
stos
stos
and
xchg
loop
aad
inc
mov
mov
ss
push
or
cmpsl
xchg
js
mov
adc
stc
mov
imul
xchg
cmp
in
mov
xlat
cs
dec
aas
ljmp
rorl
addr16
xchg
vpmullw
imul
mov
mov
pop
or
scas
mov
ss
xorb
pop
imul
jnp
jmp
adc
pushf
jg
pushf
clc
and
shrb
fwait
mov
pop
mov
adc
shlb
cmp
cli
sbb
loop
nop
push
pop
ret
dec
dec
and
adc
jbe
cli
insl
xcrypt-cfb
cmpsl
mov
shll
mov
aaa
jne
and
add
iret
mov
ljmp
xorb
ss
in
pushf
dec
mov
popa
rcrl
dec
aaa
push
les
aad
fmull
mov
dec
pop
dec
cmpsl
sbb
xor
mov
mov
pusha
or
stos
loope
sti
mov
faddl
jg
int3
fwait
pop
dec
lods
aaa
ljmp
pushf
out
ret
cli
xchg
aaa
pop
test
xlat
xor
out
clc
pop
jb
or
neg
cwtl
dec
sbb
and
sub
add
mov
repz
mov
hlt
mov
out
or
into
ficoml
or
cltd
in
leave
sub
cmp
int
les
sub
pop
sbb
xchg
call
lods
jp
mov
out
ret
and
lret
sub
sbb
lcall
fcoml
cmp
push
cmp
cltd
cltd
iret
pop
in
dec
xchg
inc
jp
mov
arpl
popf
or
jp
movsb
lret
jnp
out
mov
add
jmp
mov
or
rol
xchg
push
cltd
xlat
or
push
icebp
jp
mov
orl
dec
cltd
pop
pop
and
icebp
mov
cmc
ss
xchg
outsb
xor
cli
ret
fisttpl
bt
add
cltd
adc
mov
push
dec
pop
fmulp
outsb
fcomps
clc
jnp
ss
aaa
inc
cmc
stc
stos
loope
dec
mov
add
sub
push
fwait
jge
pop
in
mulps
ljmp
dec
fs
or
mov
mov
jo
in
jge
cli
mov
pop
ds
jl
lret
jmp
lea
dec
out
aas
mov
addr16
fnsave
ror
roll
mov
and
shr
pushf
mov
xor
arpl
leave
inc
xor
pop
cmpsb
sub
rcl
repnz
dec
cmp
and
fisubs
enter
adc
dec
cli
adc
lods
fists
mov
int
sub
sbbb
rorl
adc
into
sar
mov
mov
xchg
add
divb
lret
inc
jb
xor
aaa
shrb
mull
movsl
add
daa
dec
mov
int3
shlb
out
xchg
ss
daa
mov
add
sub
mov
jmp
xchg
mov
test
fldcw
pop
add
pop
mov
sub
xlat
stc
dec
sub
popf
adc
fsub
mov
test
notb
inc
stc
cs
cmp
fnsave
pop
ja
mov
sahf
fidivrs
push
cmp
jge
data16
sub
xchg
xchg
push
fistpll
mov
jl
cmp
scas
pop
sbb
ljmp
add
mov
cmpl
mov
daa
xchg
pop
push
test
pushf
dec
jbe,pn
sub
add
andl
mov
fdivs
inc
inc
lods
push
pusha
sub
push
xchg
ljmp
and
daa
test
in
int
das
and
push
outsb
xchg
fstp
decl
pushw
sbb
xor
ja
add
js
add
iret
iret
clc
push
inc
cmpsb
ficompl
mov
fs
dec
jg
out
leave
aaa
orb
inc
stos
sbb
lock
stos
ja
stc
pop
jp,pt
in
shll
in
in
leave
popf
pop
popa
mov
imul
repnz
cmp
dec
cmpsl
fcompl
xor
int
pushf
cmp
cmpsb
jecxz
fucom
mulb
jo
int3
mov
fucomp
bound
sarl
and
pop
int3
out
jne
ja
fildll
fisttpll
mov
daa
xor
jno
cmpsl
add
ficoms
jecxz
push
sbb
out
loopne
push
mov
mov
jmp
mov
fdivrp
stos
mov
and
and
flds
lods
and
xchg
push
sarl
dec
into
out
daa
sbb
xor
stos
mov
dec
inc
cld
test
dec
mov
mov
hlt
ret
sub
mov
xchg
lods
cld
scas
jmp
mov
inc
push
or
sbb
addr16
or
arpl
rol
loop
sub
xrelease
cmp
mov
add
in
sub
push
cs
inc
cmp
sub
add
repnz
pop
fwait
push
test
mov
gs
or
lods
test
mov
dec
xor
test
push
jl
adc
add
mov
sti
iret
inc
hlt
dec
scas
setl
inc
add
add
es
mov
addr16
in
cmpsb
out
xor
sub
xchg
and
inc
mov
test
jge
dec
bound
mov
jb
in
sti
lret
scas
into
mov
andl
cmp
shll
test
sbb
push
addb
mov
jmp
add
mov
mov
add
fsubrl
inc
imull
pop
xchg
in
rol
jle
out
dec
add
add
jge
xor
mov
or
sahf
lret
add
or
jmp
cmpsb
xchg
add
xchg
sbb
lods
add
in
clc
or
and
das
mov
jb
xchg
cwtl
negl
cmp
xor
inc
std
mov
inc
in
xor
jge
jl
sub
jge
in
or
jecxz
add
jnp
insl
pop
cmp
push
les
mov
dec
fwait
scas
jno
mov
es
xchg
cli
pop
pop
and
arpl
xchg
jbe
push
xor
cmpsb
popf
lret
mov
pop
jl
cld
xor
mov
cmp
test
fldt
jb
lcall
dec
add
or
mov
or
cmp
add
inc
sub
dec
stos
out
or
jle
aad
fldt
popa
int
cwtl
jne
es
fldenv
mov
inc
cmpsb
jne
in
in
into
adc
stc
cwtl
fidivl
test
jno
pop
call
lret
lods
out
xchg
sub
sti
or
out
ret
push
mov
or
mov
mov
pop
mov
dec
push
iret
scas
std
mov
inc
arpl
add
push
mov
jns
out
lock
jp
cmp
ss
popa
xchg
dec
call
mov
lret
stos
fistpl
jns
xor
sub
sbb
sub
lds
inc
lods
call
xlat
clc
in
lcall
movb
push
cmp
fisttps
out
add
push
or
test
imul
scas
test
pop
pop
inc
inc
clts
pop
mov
pop
pop
xchg
jmp
pop
add
cmpb
xchg
ds
shll
idivb
or
outsl
dec
cmpsl
cmp
insb
adc
push
jne
les
leave
jno
pop
pop
mov
mov
iret
out
or
xor
xchg
pushf
mov
jmp
hlt
loop
outsl
test
aad
dec
ret
sbb
test
pshufw
test
inc
jb
sbb
xchg
xor
sahf
mov
fistpll
fidivs
pusha
inc
dec
nop
pop
adc
sub
xor
push
sbb
add
mov
push
hlt
jbe
pop
daa
adc
push
clc
or
repz
mov
scas
das
jle
mov
pop
push
add
push
fistps
stos
call
and
mov
arpl
clc
shl
or
movsl
fs
mov
xchg
aaa
int3
jmp
insb
sub
push
push
imul
dec
je
ret
insl
mov
scas
in
push
mov
push
sbb
mov
add
and
xor
mov
fsubl
test
stc
unpckhps
imul
xchg
add
xchg
shl
dec
mov
notb
push
cmc
fldt
push
pop
lea
pop
and
icebp
xor
xor
into
movsl
in
imul
mov
test
inc
dec
jg
push
jecxz
loopne
pop
mov
cmc
pop
loop
lds
adc
or
ljmp
mov
push
int3
mov
loopne
push
rolb
fnstsw
or
sub
mov
stos
jle
lcall
mov
lret
jno
hlt
jecxz
aad
lahf
jb
inc
adc
jne
mov
cmp
aam
and
subb
xor
sub
add
cmp
push
fstpl
xor
mov
inc
ljmp
inc
mov
pushf
dec
sbbb
int3
sbb
and
push
lock
cwtl
cmovnp
adc
test
lahf
popf
fnstcw
enter
lret
sub
xlat
repz
add
mov
gs
pop
mov
sub
test
sub
js
mov
repnz
cli
mov
out
sbb
adc
outsl
lods
lock
inc
jbe
js
call
mov
bound
push
ss
push
in
icebp
cmp
faddl
xchg
adcb
push
mov
jp
inc
loop
fisubs
sarl
or
outsb
popf
and
cmp
test
and
mov
dec
jmp
fsubs
mov
mov
pop
ljmp
jbe
in
mov
and
and
pop
xor
xchg
add
fcoms
push
xchg
or
shlb
fldl
xchg
out
mov
sub
cmp
mov
mov
inc
call
jg
push
out
adc
adc
add
mov
insl
fcoms
ss
sbbl
rcr
les
lret
mov
xchg
loop
push
aas
mov
dec
outsb
jg
in
jl
pop
ds
inc
xchg
cld
shrl
js
lret
and
outsl
dec
lds
mov
add
jp
cmc
sbb
loope
ficoml
jne
addr16
inc
adc
jg
mov
dec
mov
iret
ljmp
xchg
mov
inc
push
jbe
seto
dec
fwait
les
dec
push
xor
lret
cmpl
pop
inc
mov
lds
outsb
mov
pop
pusha
mov
test
sbb
mov
repz
mov
xchg
mov
repz
and
push
je
mov
rcll
loop
loop
iret
fsubp
pop
sub
inc
dec
sbb
aam
dec
mov
jge
lret
lahf
loopne
jnp
outsl
mov
lret
aaa
pushf
insl
dec
out
pop
ljmp
cwtl
stc
dec
inc
lods
jge
incl
pop
inc
xor
fstp
mov
dec
dec
cmp
insb
imul
mov
mov
hlt
addr16
or
pop
add
repnz
dec
pop
add
retw
mov
mov
pop
cli
add
jns
inc
dec
in
adc
je
je
movsb
inc
push
rol
cld
ficomps
out
mov
fisubs
mov
lods
pop
leave
out
sbb
fidivrs
jbe
psadbw
mov
add
dec
xchg
jb
movsb
jle
mov
fstl
mov
or
pusha
add
lret
es
aam
cwtl
scas
out
inc
enter
push
lds
subl
shl
jge
mov
xor
je
push
adc
arpl
int3
jno
mov
dec
gs
xor
aas
mov
sbb
mov
into
pop
icebp
stos
addl
test
mov
cmc
in
lods
mov
lods
out
xor
sub
mov
jle
std
push
push
inc
jl
pop
push
and
popf
in
push
inc
xlat
and
dec
adc
insl
pop
and
xrelease
mov
ss
push
js
sub
sbb
in
or
mov
mov
repz
cmp
xor
fs
push
stos
or
xor
leave
and
pusha
jno
add
xchg
lcall
daa
mov
arpl
fwait
xchg
mov
adc
adc
jl
scas
cli
repnz
insl
das
pop
addr16
daa
pop
push
xchg
scas
in
js
or
or
cmp
sbb
filds
mov
cltd
or
or
adc
cwtl
cmp
lods
movsb
sub
inc
pop
jb
jle
test
push
xor
mov
rolb
fimull
jg
int3
pop
sbb
cld
rolb
lods
aas
jo
xor
xchg
cld
cmp
jbe
dec
cmp
ljmp
cmp
scas
ds
and
std
lret
xor
mov
xor
xchg
out
cmp
pop
sub
out
lock
fnstenv
int3
dec
push
add
daa
sarb
test
call
lods
lcall
in
push
icebp
jmp
aas
test
in
nop
insl
jns
cmp
movsl
or
cwtl
sbb
add
icebp
jl
sub
cmp
push
aam
iret
pop
cltd
inc
cmp
jmp
pop
movsb
and
pop
inc
dec
imul
les
dec
test
fstpt
mov
mov
mov
fcoms
xchg
rcll
gs
xchg
mov
sub
mov
and
int
in
sbb
fimull
adc
int
lret
gs
in
mov
push
sbb
inc
or
bound
mov
pop
movsl
scas
out
inc
out
outsb
mov
sub
jge
adc
dec
jno
jg
test
aas
leave
int
or
cmc
rorl
mov
add
in
pop
fsubl
mov
adc
mov
addr16
push
pop
sar
scas
aad
inc
or
fcmovne
lcall
xchg
mov
pop
shlb
push
fs
in
lcall
xchg
xorb
ja
or
dec
add
mov
pop
or
insb
adc
and
imul
iret
aad
pop
inc
adc
addb
imul
lods
int
inc
cmc
sbb
lock
dec
out
aad
add
push
cmp
ja
cmc
sbb
stc
jae
jle
jno
ds
addr16
dec
sub
adc
push
sahf
loopne
jge
xchg
lret
inc
fcompl
js
aam
dec
cs
adc
inc
or
sbbb
inc
repnz
popa
pop
sub
pop
ss
in
xchg
enter
iret
addr16
xchg
fcoml
lcall
fildl
mov
mov
out
adc
jmp
xor
rolb
push
ja
mov
inc
shlb
mov
mov
mov
pushl
loop
mov
lods
xor
in
mov
and
repz
sub
push
sub
and
xorl
int
sbb
and
pusha
mov
mov
dec
in
cmp
xchg
adc
or
and
push
dec
aas
add
cmp
jb
adc
cmp
pop
push
sbb
xorb
sub
pop
les
in
push
nop
lcall
je
mov
add
scas
jmp
insl
dec
test
outsb
adc
gs
shlb
and
mov
mov
fdivs
jl
lods
cmp
shll
push
sbb
xor
pop
dec
or
pop
jo
xor
or
dec
mov
or
es
xchg
lds
xchg
mov
mov
and
xor
out
xchg
sbb
or
inc
test
repnz
notl
mov
or
popa
aas
repnz
push
adc
or
insb
sub
nop
fsts
or
inc
inc
lds
les
bound
adc
mov
iret
mov
rcll
rcl
ret
sub
pop
dec
mov
jb
and
imul
jecxz
or
iret
push
fwait
in
push
or
shlb
jle
xchg
std
call
inc
add
jle
cmpsl
imul
add
sub
jbe
rorl
jle
mov
cmp
adc
adc
cmp
cmp
or
popf
scas
std
aad
scas
mov
jg
pusha
mov
loop
iret
pop
xchg
xor
cltd
ljmp
shl
xchg
leave
jge
inc
mov
fcomp
lea
xchg
iret
push
ljmp
or
dec
stc
sub
xchg
test
scas
add
cmc
out
out
cmp
mov
sbb
pextrw
dec
adc
xlat
clc
int3
leave
imul
cli
lcall
fs
dec
push
pop
fdivrl
xorl
and
fbld
jae
imul
sbb
cmp
out
push
iret
dec
mov
loopne
mov
popf
mov
pop
sub
push
sbb
push
pushl
xlat
jle
and
sub
mov
xchg
mov
and
hlt
or
lret
enter
fadds
jge
jno
enter
int3
and
and
imul
mov
mov
fucomip
inc
rcrb
fstpl
mov
cld
insl
or
jb
into
pusha
jne
mov
xor
repnz
jnp
ficompl
cmp
mov
pop
mov
push
cs
mov
jge
mov
pop
mov
pop
add
pushf
mov
push
lcall
mov
jecxz
enter
pop
sub
adc
pop
fistpl
and
pop
mov
mov
mov
inc
stos
sbb
jae
movsl
js
imul
adc
push
repnz
cmp
cld
adc
repz
arpl
sbb
subb
adc
or
pop
leave
or
sbb
jmp
cmpsl
cltd
mov
popa
mov
stc
fcomp
xchg
addb
push
movsl
pop
shlb
sub
xchg
fdivs
sbb
inc
loopne
xor
push
inc
inc
stos
mov
adc
xor
ror
sbb
in
mov
or
sahf
sub
lock
or
cltd
fdivrl
ret
dec
cltd
cmp
sbb
sbb
jb
imul
mov
push
das
cmp
les
cld
adc
negb
movsl
add
lahf
lea
add
bound
test
mov
sub
fimull
in
dec
jae
aad
mov
sbb
ret
xor
pop
and
movsl
xchg
fsubrp
test
pop
and
xchg
mov
xchg
in
adc
adc
xor
mov
cmp
mov
aam
push
imul
and
iret
mov
add
scas
xor
sbb
jns
data16
rcl
idivb
daa
bound
sbb
ja
xchg
push
sub
mov
fs
js
loop
or
mov
cwtl
mov
repz
out
out
in
cld
lret
xor
add
sbb
pop
ret
sub
jo
shrl
sbb
mov
fwait
lret
mov
mov
sub
clc
notl
sarl
pushf
mov
xchg
jge
push
rcl
fldenv
xchg
incb
add
xorl
rorb
js
cmpsb
cmp
imul
and
sbb
aam
cli
mov
fldenvs
pop
jno
mov
inc
sbb
cmp
sub
push
or
jecxz
sub
lods
in
clc
jl
ror
adc
mov
bound
pop
fbstp
scas
push
sbbb
fidivl
sahf
out
cmp
and
add
in
in
xlat
adc
dec
insl
add
cmp
inc
shl
cld
rorl
xor
or
jl
sub
and
cmp
and
mov
arpl
mov
pushf
insb
cmp
cmpsb
sub
in
addr16
aam
jne
xchg
lret
test
mov
cmp
mov
jmp
imul
mov
jns
jecxz
mov
lds
lret
jbe
mov
faddl
push
pop
test
js
push
insl
or
push
shl
dec
test
mov
mov
out
or
lret
mov
or
mov
pop
aam
jae
push
push
pop
mov
adc
mov
push
gs
and
addb
jne
shrb
jmp
xor
addb
jb
fldz
in
movsl
les
add
pop
adc
inc
test
or
dec
jl
mov
push
stos
inc
sbb
clc
ljmp
mov
push
adc
mov
and
push
inc
insl
mov
test
fs
jae
faddl
aaa
int3
and
adc
imul
cli
xchg
shr
pop
inc
fistpl
and
sbb
push
inc
inc
aaa
cmp
add
and
cltd
or
shlb
enter
dec
push
inc
pop
jb
movsl
sbb
and
or
iret
int
inc
sbb
pop
mov
mov
in
mov
add
xchg
call
mov
lods
add
jb
mov
mov
orb
cli
mov
hlt
ss
aaa
jle
push
xlat
add
ror
arpl
xchg
jecxz
adc
push
adc
cmp
push
inc
imul
and
adc
xchg
jo
push
pop
cmp
pusha
out
fcos
in
pop
in
lock
testb
out
mov
pop
sub
lcall
lea
nop
stc
xchg
jb
inc
sbb
mov
jnp
iret
sbb
cmp
sbb
mov
dec
mov
sub
jnp
roll
insb
shll
jg
les
cmp
sub
xchg
jp
cmpsb
cmp
mov
cmp
push
add
push
or
pop
and
out
sub
jg
pop
sarl
inc
sahf
adc
mov
and
mov
das
jno
cltd
and
int
testl
push
sub
call
mov
lds
and
and
or
jmp
ljmp
jmp
xchg
enter
inc
pop
mov
leave
mov
addr16
mov
mov
rcll
in
cmp
mov
pop
jnp
xor
cmp
mov
out
dec
pop
xchg
cmp
mov
inc
mov
mov
xchg
fmull
andb
xor
in
aad
jl
and
std
push
rorl
lret
insl
int3
notl
mov
repnz
cmp
xor
add
sub
jg
inc
and
repnz
sub
insl
adc
enter
pop
inc
inc
inc
call
mov
pop
mov
push
nop
xchg
cmp
push
xor
scas
movsb
pop
das
xchg
leave
js
mov
fwait
jl
pop
cmpsl
xor
lret
cmp
ret
lahf
imul
pop
mov
cwtl
xchg
mov
cs
cmp
mov
mov
sub
jg
mov
mov
mov
dec
push
rorb
lods
pop
aad
lret
aam
outsl
xchg
dec
xor
dec
xchg
les
adc
push
or
out
cmp
cmp
push
pop
in
mov
outsb
cmp
dec
pop
mov
in
call
cmp
dec
gs
fdivl
fwait
mov
mov
sahf
jmp
repnz
nop
dec
out
out
bound
mov
sbbb
mov
xchg
rcll
in
xchg
iret
sub
push
out
inc
int3
pop
mov
mov
sbb
mov
or
mov
push
in
cs
fadds
test
scas
sarb
sub
jge
mov
pop
mov
push
outsl
and
xchg
imul
frstor
subb
sbb
fldt
inc
pop
outsb
imul
hlt
mov
xor
mov
jecxz
and
inc
scas
movsl
mov
addr16
pushf
push
push
adc
es
scas
stos
mov
cwtl
dec
movsb
es
fists
mov
imul
push
add
fs
aam
xor
lds
dec
loop
test
xor
cmpsb
lods
xor
fdivp
rorb
lods
mov
das
aaa
cltd
lock
pop
test
push
dec
jmp
and
repnz
cwtl
adc
sbbb
or
loope
cmc
mov
add
cld
or
outsl
adc
dec
cwtl
in
jge
aas
fwait
jb
aad
sahf
adc
movb
loop
in
test
xor
ds
lret
pushf
sub
pop
dec
lods
sub
mov
sub
jne
xchg
repnz
sbb
push
or
mov
adc
xchg
in
cmpb
sbb
sahf
clc
xlat
repnz
nop
popf
aaa
or
mov
adc
mov
ja
jecxz
sub
clc
sub
mov
sbb
sbb
add
jl
sub
xchg
clc
mov
sahf
icebp
pop
fstp
stos
jb
cwtl
sarl
mov
or
repz
xchg
mov
xor
in
add
js
push
inc
aaa
movsb
aas
cmp
in
orb
adc
mov
pop
scas
push
cld
push
stos
and
stos
enter
pushl
leave
mov
xor
add
repz
and
loop
data16
jmp
out
not
fldl
jecxz
outsl
std
stos
mov
aaa
test
repz
pop
in
sahf
subl
sub
fidivs
ja
xor
repz
jle
div
cmp
inc
or
adc
sub
inc
mov
lret
aad
es
shrb
or
lods
aaa
andb
push
and
sub
sbb
pop
sub
pop
and
mov
sub
mov
mov
adc
fsts
aaa
jmp
shl
inc
shlb
inc
repnz
add
lcall
fsubr
mov
stc
pop
in
pop
bound
outsb
lahf
sub
dec
jl
rcrb
pop
addl
sub
push
sub
push
movsl
jbe
pop
cwtl
aaa
mov
xchg
inc
push
mov
fistpll
inc
outsb
add
xor
mov
xchg
pop
test
mov
dec
xchg
out
jg
das
arpl
add
jae
xchg
int3
lret
pop
and
xor
pop
dec
push
and
pop
or
or
adc
imul
cmpsb
jecxz
cld
xchg
and
scas
jne
xlat
cmp
dec
push
lea
cmpsl
push
das
mov
xchg
sub
xor
scas
dec
add
shl
in
jg
test
hlt
pop
cmpsb
je
cli
mov
enter
rorl
mov
dec
mov
lret
push
dec
inc
enter
imul
popa
sahf
test
jg
repz
pop
xor
xor
xchg
ds
mov
adcl
mov
xchg
aas
out
sbb
cmovne
jae
outsb
loop
imul
xor
ss
sbb
inc
rcrl
adc
mov
sarb
xlat
pushf
or
xchg
push
in
mov
xor
into
xor
je
jb
scas
inc
jge
xor
push
sbb
xlat
outsl
mov
pop
pop
ljmp
pushf
mov
cld
mov
popa
xor
es
xchg
fadds
test
movb
es
inc
mov
and
and
jns
fistl
stos
leave
jp
arpl
inc
test
and
xchg
sbb
mov
outsb
arpl
pop
js
arpl
mov
xor
inc
add
nop
pop
add
hlt
xor
aas
imul
jle
fwait
negl
push
xchg
cmp
push
insb
inc
mov
cs
jl
shrb
mov
cmpsl
insl
aam
lock
jb
fadds
pusha
push
rcrl
sub
push
loopne
lds
cli
pop
movsb
cwtl
bound
or
sti
pop
ret
xchg
cld
pand
lds
fists
imul
xor
out
jmp
jecxz
int
add
mov
lods
pushw
inc
and
shrb
push
cltd
sub
lret
rclb
push
pop
out
in
mov
shlb
push
fabs
test
mov
mov
cmp
jge
cmp
sbb
adc
push
enter
lea
addb
shrl
xchg
sbb
dec
jno
cs
repnz
push
jnp
push
xor
pop
push
jns
pop
int3
enter
xchg
adc
movsb
mov
sbb
imul
es
dec
test
imul
mov
enter
das
out
dec
dec
das
dec
inc
xor
jl
or
clc
mov
jbe
ss
xor
repnz
jle
push
insl
cmp
xchg
pop
rcrb
mov
movsb
push
add
jnp
adc
ficomps
loopne
xor
mov
popf
and
sahf
jecxz
pusha
imul
push
in
cmp
cmp
call
xlat
adc
push
in
repz
aaa
out
mov
push
repz
outsl
jmp
stos
shr
sbb
cltd
mov
pop
inc
jo
jmp
mov
mov
pop
imul
gs
aaa
mov
jecxz
sbb
pop
and
pop
adc
aam
pushf
xchg
add
sahf
sti
cli
sarl
xchg
fsubr
dec
mov
scas
cwtl
fld
gs
in
inc
adc
in
mov
sbb
mov
xchg
mov
movsb
mov
sub
arpl
mov
iret
ret
stc
lcall
mov
ds
out
jge
and
test
jge
cmpsl
cmpsb
mov
jl
mov
into
ret
adc
fadds
fs
mov
js
hlt
push
xchg
jg
pop
dec
sbb
pop
pushf
outsb
and
out
jmp
out
sub
repnz
fisubl
jno
rorb
in
jne
sbb
cwtl
repz
sbbb
push
adc
mov
jno
sahf
add
aad
xorl
int3
fisttps
mov
pause
or
mov
cmc
dec
imul
adc
popa
cltd
sbbb
mov
adc
push
jmp
insb
xorl
pop
repz
sarl
sbb
std
jae
push
out
pop
sbb
leave
push
aaa
cwtl
cld
popa
test
mov
jl
shl
xor
cmp
std
add
dec
movsl
cwtl
mov
lds
pop
push
sub
das
cli
push
fildll
jne
insl
les
xor
test
jno
pop
fisubrl
mov
cltd
xor
adc
xor
or
xchg
aam
dec
xchg
stos
clc
inc
or
or
aas
pushf
notb
add
loopne
mov
test
sti
int3
rcrb
addl
loop
add
int
in
dec
cwtl
xchg
mov
rolb
sub
or
addr16
adc
stos
mov
hlt
jno
cs
push
jb
outsb
js
in
mov
mov
das
dec
sub
adc
sti
nop
int
fstpl
call
dec
inc
das
mov
jbe
sub
mov
call
cmp
cmp
push
adc
push
sahf
inc
inc
sbb
pusha
mov
sbb
or
das
sbb
ja
or
rcll
mov
sahf
decl
adc
add
pop
xchg
je
dec
inc
repz
sub
mov
cs
mov
mov
mov
insb
dec
dec
add
add
pushf
add
dec
ja
dec
xor
out
cli
xor
push
mov
jne
cld
cmp
iret
data16
out
dec
imul
xor
lcall
xchg
sbb
fdivl
out
lock
pop
pop
mov
fcompl
inc
lds
inc
lock
jo
sub
and
jg
repz
pop
sbb
inc
mov
inc
cmp
aam
fidivrs
cwtl
pop
arpl
mov
jne
pop
cmp
js
xchg
fwait
cwtl
add
xorl
andl
push
and
sub
or
cmp
sbb
shl
cmpsb
repnz
iret
aas
mov
outsl
mov
pop
jb
sub
inc
insl
in
aam
sub
test
je
loop
loopne
or
jbe
hlt
fldt
ror
ds
std
xchg
pop
lock
cmp
jp
mov
inc
mov
stos
lcall
aam
mov
or
fwait
gs
pop
cmpl
pop
add
jbe
push
in
lcall
sahf
aad
inc
dec
or
adc
daa
fldenv
gs
popf
or
sbb
mov
repz
jmp
sbb
lods
mov
adc
and
jl
imul
push
mov
sub
sbb
lcall
mov
cmpl
mov
and
xor
cld
std
sub
sub
push
sub
cmpb
stos
aaa
ret
jg
aad
push
jp
push
dec
mov
xor
nop
lock
fdivrl
add
arpl
int3
mov
cmp
mov
jns
stos
test
pop
lret
shrb
out
push
ficompl
jbe
ja
scas
push
adc
mov
dec
int
mov
in
out
jns
mov
jbe
push
stos
repnz
mov
dec
ret
sub
subb
outsb
sarb
les
sub
in
sbb
frstor
orl
cmp
ret
adc
mov
lahf
lahf
fidivs
sbb
ja
or
testb
out
ret
movsb
mov
sbb
push
jns
adc
cltd
nop
cmp
mov
in
mov
push
ljmp
mov
push
cmp
xchg
insb
sub
in
je
pushf
pop
mov
in
jb
push
xlat
mov
fstps
mov
scas
fsubr
xchg
cwtl
push
lods
xchg
mov
inc
or
and
rorb
push
sub
stos
fisttpl
mov
lret
pop
and
insl
or
outsb
inc
pop
dec
add
aad
popf
push
imul
lahf
nop
xchg
adc
insb
or
aaa
cmc
les
xor
jbe
jg
jb
push
sbb
jnp
test
mov
add
ret
enter
popa
cli
xchg
cs
sub
or
inc
inc
add
je
xor
mov
pop
into
xchg
add
cltd
sub
test
mov
pop
and
sub
push
and
js
clc
mov
addr16
lret
inc
pop
push
idivb
mov
xchg
xor
adc
push
xor
mov
xor
fstl
jae
jmp
fs
lods
mov
jp
inc
inc
lahf
movsl
sub
push
xor
ds
out
cmp
sub
or
lcall
jb
sbb
sub
pop
dec
cmp
lock
pop
add
cmp
jp
sbb
mov
mov
mull
sbb
push
testb
fisttpll
test
push
out
mov
cmpsb
xchg
shrl
ss
xor
inc
mov
lcall
push
push
lods
jmp
pop
cmc
xchg
out
lods
shrl
out
xor
pop
ds
lds
jb
dec
xchg
lret
or
jmp
es
and
or
lret
lea
out
andl
daa
lds
psubsb
incb
lods
mov
scas
push
sahf
lret
mov
sbb
and
jbe
push
mov
fdivl
das
aaa
mov
mov
test
dec
lcall
addr16
repz
fwait
into
xor
shll
sbb
fidivrl
jp
mov
pop
or
xor
stc
xlat
dec
cltd
out
add
dec
dec
sbb
pop
xlat
sub
pop
cmp
sub
mov
andl
push
sbb
aaa
or
out
pop
sahf
fbstp
add
xor
jno
inc
imul
jl
dec
pop
pusha
or
shrb
pop
imul
mov
ffree
cmp
push
mov
shl
mov
mov
int
icebp
lods
mov
leave
and
lock
jecxz
sbbl
insb
out
test
push
fs
sub
jle
and
leave
shl
xchg
inc
and
and
pusha
inc
sub
lret
pop
adc
jo
movsl
mov
pushf
fmull
mov
mov
into
lods
sbb
cmp
sub
lahf
xlat
push
fnstenv
pop
push
inc
cli
stc
inc
xor
ret
addl
jg
hlt
add
sub
scas
jns
and
shll
dec
in
mov
jns
or
jns
punpckhdq
call
fwait
mov
xorl
inc
sub
push
xchg
and
outsl
adc
bound
fsts
cmpb
ficoms
call
dec
je
in
gs
scas
jnp
in
into
shl
sub
sbb
add
ret
add
and
inc
mov
mov
cwtl
stos
inc
test
and
leave
int
xor
adc
test
adc
addr16
test
pop
call
adc
daa
repz
inc
outsl
scas
xchg
mov
iret
fdivrl
out
icebp
stos
mov
xchg
mov
dec
adc
xor
test
dec
sub
in
add
push
mov
arpl
and
xlat
push
sbb
stos
cmp
imul
icebp
mov
push
jg
or
dec
pop
ret
and
sub
sbb
or
add
sbb
cmp
shll
outsl
inc
and
sbb
fcomps
int3
out
ljmp
js
scas
mov
mov
xor
push
cmpsl
je
mov
dec
mov
testb
pop
cli
pop
lcall
mov
or
mull
jmp
push
movsl
daa
lock
stc
xor
xlat
test
cmpl
pop
dec
movsb
lock
push
sti
ds
and
aas
push
sub
xchg
push
outsl
jl
out
aas
dec
outsb
jo
call
repnz
dec
les
in
out
shll
sbb
mov
sti
add
scas
sbb
mov
dec
insb
jl
xchg
das
bnd
mov
decb
mov
mov
jno
fwait
adc
xchg
out
mov
repz
push
icebp
mov
or
fidivl
in
aas
mov
cmp
jo
dec
out
hlt
xlat
in
jmp
out
xchg
cmpsb
jo
cmp
hlt
mov
lds
std
jae
movsl
stos
add
xor
xor
lods
std
xchg
xchg
jae
ds
insl
sahf
seta
or
push
cmc
pop
cmpsl
cmp
or
push
std
jp
add
pop
adc
mov
mov
insb
pop
leave
ret
movsl
add
scas
lds
out
push
add
loopne
call
imul
cwtl
test
adc
pop
scas
call
and
and
addr16
jb
fistps
mov
ds
mov
call
mov
xchg
jmp
sbb
jns
and
adc
repz
loop
sub
imul
jne
dec
sbb
ficompl
mov
insl
out
push
aas
pop
inc
dec
xor
add
fsubl
or
jnp
or
mov
jle
fisubs
in
mov
cmpsb
je
mov
cmp
shlb
scas
movsl
fwait
adc
je
nopl
lods
sub
aad
and
cmp
out
das
mov
add
inc
jecxz
sub
and
push
xchg
ljmp
push
ret
push
cmp
add
repz
insl
sub
or
movsl
rcl
imulb
iret
fldl
repz
fwait
mov
or
xchg
mov
out
pop
lea
adc
mov
fwait
rcrl
mov
sti
mov
cwtl
pop
mov
xor
pop
es
stc
scas
mov
dec
push
cli
xchg
push
or
out
lea
jns
test
shrb
dec
int
jno
xchg
mov
xor
mov
stos
push
popf
into
mov
push
movsb
aaa
int
and
fldt
push
mov
lods
lret
sbb
das
rorb
mov
lahf
rol
into
xor
ss
lds
or
add
mov
xor
xor
sub
cmp
mov
inc
popa
lret
clc
shll
xchg
adc
xor
leave
xchg
and
pop
lcall
mov
je
jg
repnz
les
or
decb
inc
mov
cmp
pop
imul
xchg
mov
roll
lcall
adc
xor
xchg
or
and
out
fildll
aas
call
sbb
or
jne
sub
pop
repz
imul
push
ja
jo
or
fwait
pop
es
sbb
jo
je
mov
imul
in
icebp
movsb
sbb
xor
sbb
out
je
incl
daa
jnp
std
cmp
push
inc
sbb
sub
idivl
in
mov
mov
enter
or
aas
pop
out
dec
shlb
mov
adc
jg
lods
scas
cmp
add
enter
insl
jge
mov
xor
xorl
ds
sbbb
xor
xlat
ds
out
mov
xor
cmp
andb
dec
pop
lcall
cmp
pop
or
xchg
mov
mov
addr16
mov
pop
adc
lcall
test
dec
xor
ja
sub
pop
leave
aas
add
inc
xor
dec
jp
xchg
or
ret
mov
push
sti
adcb
and
shrl
rclb
sub
pop
sbb
dec
fnsave
xchg
fidivs
ret
aam
xchg
gs
push
sub
push
pop
and
pop
mov
jbe
mov
and
test
or
mov
or
aaa
xor
adc
shrl
popa
test
out
add
fwait
xor
mov
je
mov
stc
loop
daa
jg
aas
mov
mov
add
dec
push
xchg
lret
add
movsl
fimull
test
xchg
call
cmp
clc
popa
pusha
or
cld
mov
sbb
or
vmovss
push
je
std
jo
sbb
pop
mov
mov
icebp
add
fcmovne
push
push
pop
js
out
pop
xor
push
xor
inc
mov
out
add
aaa
dec
jmp
ret
and
movsl
test
xor
push
popa
mov
int3
arpl
vcvtdq2ps
cltd
mov
sbb
pop
mov
fs
inc
jge
cs
add
jbe
les
cmp
fwait
jnp
and
dec
push
dec
sub
addr16
add
sbb
test
sbb
notb
stos
or
push
sub
movl
repz
mov
std
sti
leave
sub
ja
adc
cld
daa
sbb
out
pop
dec
cmp
icebp
inc
xchg
aaa
out
sub
inc
add
xor
outsl
cmc
aas
inc
fs
lds
push
mov
xor
inc
and
add
imul
in
imul
and
add
fbstp
inc
sarb
dec
cmp
dec
pop
mov
mov
add
rcll
into
jl
aaa
adc
inc
mov
or
test
or
mov
fcmove
mov
mov
out
enter
rcl
aam
les
int3
mov
ljmp
adc
test
sub
out
mov
sbb
dec
mov
cld
xor
mov
and
testl
xchg
ds
addr16
and
aad
mov
adc
in
mov
cmp
add
xchg
lret
fmull
clc
lods
test
xchg
mov
cmp
and
mov
imul
hlt
mov
dec
out
jg
cwtl
arpl
sbb
ss
cmpsl
mov
push
xor
jnp
in
mov
mov
jns
test
push
push
insb
test
mov
or
mov
pop
outsl
sbb
insb
jae
cmp
xchg
outsl
out
mov
inc
mov
fcmovbe
cmpsb
negl
mov
mov
mov
in
jmp
cmpsl
ja
loope
xchg
hlt
xchg
popa
cmp
out
pop
add
xlat
cmp
loope
hlt
adc
add
adc
int
inc
pop
push
imul
inc
fs
arpl
popf
jmp
lahf
loope,pt
sahf
test
inc
fs
sub
into
mov
scas
divb
jl
lock
hlt
adc
sahf
cmp
daa
pop
stos
inc
inc
fists
xor
mov
arpl
dec
daa
imul
daa
ljmp
data16
in
leave
inc
into
xchg
jmp
pop
in
push
cli
mov
ja
out
pop
clc
mov
lahf
adc
sub
add
into
call
stos
nop
cmpsb
rcrb
add
adc
pushf
mov
arpl
pop
outsb
outsl
xor
mov
imull
imul
cld
in
adcb
push
pop
ljmp
or
pop
jbe
inc
sbb
mov
mov
std
fildl
scas
ja
inc
mov
in
icebp
icebp
and
repnz
or
push
jp
imul
iret
add
sbb
mov
cs
sbb
add
xchg
cmp
imull
jmp
hlt
int
cmp
int
push
and
adc
jno
cmp
lahf
pusha
or
dec
insb
xchg
dec
sbb
int3
jno
and
mov
xor
adc
or
mov
jnp
push
insl
cltd
sbb
aaa
or
push
ss
orb
sbb
cmp
sbb
jo
jbe
and
aas
adc
mov
das
cmp
outsb
imulb
fwait
xchg
pop
mov
pop
cmp
out
lds
sub
and
test
sbb
xor
ret
mov
jle
pop
push
xlat
pop
add
popf
dec
mov
adc
aam
cmp
dec
insl
fs
andb
lock
mov
cmp
adc
jns
stc
and
push
call
sub
sub
fwait
mov
push
insb
subl
and
jmp
and
mov
jbe
dec
in
cmp
inc
push
shll
gs
es
js
in
sub
shrl
jge
mov
inc
pusha
dec
and
push
adc
daa
adc
push
push
add
and
std
test
mov
inc
inc
leave
in
xchg
mov
cli
ds
jnp
cmpsl
sub
ret
aam
imul
cmp
xchg
and
popf
jne
xlat
add
imul
push
xchg
push
rcr
inc
stos
xchg
and
inc
daa
lcall
movsl
and
xacquire
jne
lods
fisubl
sub
mov
cmp
inc
xor
in
inc
pop
mov
and
push
movsl
inc
jb
or
and
sbb
bt
mov
pop
fsubrs
les
or
mov
inc
out
mov
repnz
jb
scas
sub
cmp
sbb
or
cmp
xchg
push
and
inc
xchg
aad
popa
out
inc
xchg
fld
sub
xor
inc
dec
sub
jle
pop
mov
outsl
movsl
or
adc
out
pop
je
jnp
mov
shrl
fidivrl
push
xor
xchg
inc
jl
inc
and
pop
adc
insl
pop
insb
push
push
push
insb
adc
sub
stc
mov
jp
jns
lods
push
xchg
popf
sbb
shlb
adc
mov
shlb
sbb
xor
xchg
sub
cmp
xor
insb
pop
mov
mov
fdivrl
scas
jg
outsb
dec
or
cmp
sub
push
adc
int3
mov
inc
jecxz
ja
shlb
adc
pop
inc
movsl
xchg
aam
jo
sub
mov
pop
sub
inc
mov
push
shrl
jl
jg
pusha
je
push
push
xchg
iret
stos
mov
add
fldcw
and
dec
imul
or
outsb
neg
or
inc
fwait
cmpsl
xor
pop
test
stc
mov
insl
ret
insb
dec
jp
mov
out
rcl
inc
mov
jle
sbb
jno
xor
in
xchg
aas
ret
aam
imul
mov
test
mov
sub
mov
lods
ret
push
mov
mov
push
push
xchg
xorb
ljmp
fmull
frstor
xchg
mov
in
mov
out
add
cmp
or
mov
in
sub
mov
ljmp
cwtl
jae
pmuludq
je
and
mov
xchg
xor
mulb
dec
ja
cmp
int
mov
sub
cmp
sbb
cs
mov
ret
rcr
sub
filds
jge
in
jl
mov
pop
out
xchg
clc
enter
fwait
cmc
jle
xor
clc
sarb
hlt
push
dec
xchg
add
push
fdivs
jmp
pop
jl
je
mov
fidivl
jo
mov
aaa
cltd
sub
push
xchg
shlb
pop
cmc
and
xchg
shll
inc
dec
fwait
xchg
test
cmpsb
or
lods
ja
test
cmp
mov
xchg
and
sarb
repnz
sti
inc
mov
mov
hlt
pop
cwtl
cli
out
jns
mov
cmp
lods
pop
pop
shrl
ja
std
jge
or
orb
cmp
mov
out
or
gs
jb
out
xchg
js
pop
std
subl
int3
inc
inc
sub
mov
jg
push
iret
xchg
lods
mov
jnp
cmp
cwtl
ljmp
dec
mov
sub
or
cmpsl
mov
jg
mov
imul
push
xlat
bound
in
int
cmpb
adc
imul
cltd
test
adc
add
fcmovnbe
in
and
clc
pushf
fcoms
sti
pushf
push
push
or
aaa
push
adc
dec
push
dec
cmpl
push
ret
or
gs
xor
fistpl
sbb
pop
pop
lds
push
mov
cmp
mov
ja
jle
pop
dec
mov
push
add
sar
cli
mov
jmp
clc
push
or
jae
dec
fwait
or
pop
fs
xor
inc
leave
lcall
repz
push
cmp
loope
aad
jl
jmp
aas
cmp
and
in
mov
push
xchg
mov
add
adc
enter
fisttpll
scas
mov
pop
mov
sub
dec
push
cltd
popa
or
and
inc
aam
dec
mov
fstp
mov
loopne
pop
push
in
mov
ja
jb
lods
and
dec
rclb
cld
add
pop
shrb
icebp
add
imul
out
bound
dec
shll
mov
pusha
xchg
aaa
idivb
mov
inc
sbb
daa
hlt
push
mov
fnsave
jno
negl
cmp
sub
lahf
jp
idivl
dec
sub
sbb
dec
xchg
sti
cmpsb
bound
lds
xchg
mov
mov
cmp
js
and
mov
mov
movl
mov
mov
lds
nop
nop
mov
stos
setno
fsts
jo
xchg
inc
mov
mov
dec
inc
inc
mov
out
mov
aas
popf
sbb
inc
dec
xlat
and
or
or
push
push
mov
xor
and
xchg
xchg
mov
lds
xor
add
fcmovu
ljmp
int
pop
inc
repnz
dec
pop
inc
insb
fiaddl
test
pop
xor
pop
cli
and
aad
lahf
ror
test
add
loop
ja
lock
mov
jp
imul
push
decl
jo
sub
push
popf
sbb
insl
xor
dec
sub
sbb
cmc
jns
gs
scas
ljmp
iret
dec
cmp
push
xchg
pop
in
pushf
or
lahf
movsl
dec
cmp
xor
jnp
sbb
mov
adc
loopne
mov
mov
inc
or
sub
dec
mov
cmpsl
ret
xchg
jnp
push
push
push
and
sub
pop
data16
es
sbb
cmp
out
fsubrl
jbe
shlb
ret
int
dec
mov
movsl
into
mov
mov
dec
test
imul
jg
push
nop
and
xchg
sahf
imull
xor
sbb
inc
lods
mov
gs
push
inc
cmp
inc
js
aaa
mov
fldl
xchg
cmpsb
and
into
jmp
loopew
ds
mov
dec
sub
pop
dec
dec
outsl
pop
push
scas
inc
add
pop
and
jmp
scas
mov
push
clc
xchg
and
add
push
filds
inc
or
inc
push
mov
pop
push
insb
in
movsb
popf
mov
out
add
pop
xchg
shrb
test
add
jp
jecxz
daa
inc
cmpsl
push
mov
dec
pop
rcrl
dec
sub
cmp
dec
pop
arpl
mov
aam
inc
mov
loope
jge
jl
scas
roll
or
scas
push
mov
in
imul
iret
lea
and
adc
pop
std
pushf
xchg
and
push
mov
fwait
jnp
dec
adc
clc
fwait
mov
jp
stc
pushf
push
jno
out
lret
call
mov
shr
push
push
jno
adc
or
insb
stos
out
jecxz
add
or
cmp
add
jp
shrl
insl
jmp
fnstenv
scas
add
adc
adc
dec
pop
sbb
js
mov
or
fwait
mov
sub
fisubrs
psubd
mov
adc
call
cmp
rcr
les
pop
imul
mov
xor
sub
jns
es
mov
fs
cmp
pop
loopne,pt
ss
jb
mov
or
inc
fcompl
add
popf
loopne
dec
xchg
rol
xchg
pop
sub
mov
pop
sbb
movsl
test
and
dec
sub
addr16
jl
cli
and
push
jmp
cmp
test
jo
dec
arpl
mov
pop
cld
sti
dec
pop
jg
jb
sahf
sub
xor
mov
mov
lret
lcall
and
ss
pop
sti
ja
jmp
lret
sub
lret
sub
mov
jno
or
inc
and
or
xchg
mov
lock
pop
fmull
test
lret
addr16
and
and
pop
jp
lcall
cmp
xchg
push
iret
aam
inc
ljmp
add
dec
pop
or
sub
data16
repnz
xor
inc
mov
and
adc
inc
loop
lret
leave
in
sub
mov
push
jne
push
cmc
popa
sub
insb
pop
mov
jl
jge
mov
cmp
dec
sti
add
pop
push
lcall
and
dec
push
push
shrl
cmpsl
mov
mov
or
jle
mov
aaa
pop
jne
test
add
dec
jg
test
mov
imul
cld
mov
dec
or
xor
and
cli
loop
jae
data16
sub
mov
adc
adc
mov
xchg
roll
or
out
add
pop
xor
add
or
sub
decl
cmp
cmp
not
cmp
cmpsb
pusha
ljmp
fxch
test
pop
mov
add
dec
orl
fstpt
es
mov
icebp
movsl
pop
out
cmp
pop
mov
xchg
jle
fcmove
mov
xor
xchg
xchg
jae
dec
xchg
lock
ds
enter
out
divb
std
xchg
sbb
fildll
repnz
enter
mov
in
cmpsb
mov
addl
push
add
outsb
loope
mov
cmp
add
xchg
lods
cli
and
pop
decb
sahf
sbb
pop
das
and
lods
les
xor
insb
mov
mov
test
add
push
xor
out
lret
and
iret
jb
shl
iret
mov
addr16
jle
cwtl
pop
aas
xchg
loope
cmp
xor
mov
test
add
and
add
sub
sahf
sbb
das
insl
lods
mov
fidivrl
adc
inc
outsb
pusha
pop
ds
dec
xchg
sub
add
pop
fcomp
adc
mov
bnd
ljmp
cmp
sub
int3
mov
or
sbb
push
nop
cmc
cmp
popf
and
dec
push
and
mov
fistpll
dec
xor
add
add
xor
mov
xlat
inc
inc
mov
mov
cmp
cmp
inc
lret
icebp
push
lret
iret
mov
push
pop
push
jg
loop
outsb
xor
cli
fcoml
and
sti
fcomp
jo
popa
sub
outsb
mov
jg
scas
popf
dec
mov
sub
push
mov
lcall
lds
jnp
cld
cld
cmpb
fldt
imul
jb
shlb
adc
push
mov
jb
in
xchg
pop
les
fnstsw
fidivrl
sbb
add
in
ret
mov
jo
xchg
adc
ds
and
mov
or
xchg
sbb
or
xor
stos
jg
les
dec
in
lods
mov
mov
fdivs
out
add
repnz
sub
or
movsb
mov
in
pop
enter
or
sub
adc
pop
cli
push
adcb
lret
insb
mov
insl
fucom
loop
push
sbb
inc
cmp
outsb
and
push
xor
mov
cmove
xchg
jl
mov
stos
cmp
mov
in
cmp
sahf
dec
out
mov
stos
dec
mov
or
adc
daa
insb
and
inc
daa
sub
pmaxub
inc
add
xchg
arpl
test
cltd
mov
out
fnstsw
mov
add
les
adc
out
cmp
insb
data16
sahf
mov
jb
sbbl
clc
ss
push
or
pop
inc
push
add
mov
addb
mov
outsb
lret
add
rorb
mov
dec
inc
mov
xchg
adc
test
lret
mov
in
loopne
in
push
xchg
xor
jge
lods
lcall
pop
out
inc
out
cli
and
jnp
mov
fimull
repnz
cmp
add
icebp
jecxz
dec
sbb
xchg
test
pop
fstps
pop
leave
mov
lcall
mov
fmuls
sub
out
cltd
loop
dec
lock
imul
and
into
sbb
xchg
pushf
push
out
loope
int
dec
dec
movsl
les
cld
mov
inc
test
xor
shlb
outsl
and
or
repnz
out
movsb
inc
dec
jl
and
cmp
dec
icebp
lea
fmul
xor
add
inc
fsubl
popa
adc
das
popf
insl
sub
pop
mulb
rol
int
les
cmpsl
movl
lret
or
mov
adc
pop
pop
add
jnp
cmpsb
loope
pop
xor
test
sbb
das
lret
sbb
in
jp
xor
cmp
decb
int3
mov
push
jae
lahf
or
cmove
mov
push
or
jae
jo
sbb
dec
andl
inc
xor
bound
lods
xor
repz
div
jg
jns
shll
ds
stc
rcl
mov
push
xor
les
faddp
cmpsl
mov
incl
sub
mov
jecxz
jecxz
cmp
dec
clc
insl
jmp
stc
int3
mov
xor
xor
je
mov
dec
les
mov
jmp
test
insb
aad
lea
adc
cmpsb
mov
mov
xor
mov
pop
and
push
shrl
out
xor
enter
sub
jnp
les
xchg
sub
dec
push
call
sub
mov
lahf
jb
push
mov
test
sub
jmp
inc
and
aad
stc
iret
fs
xchg
push
mov
mov
fwait
sahf
sbb
pop
inc
jg
ss
rol
inc
mov
in
pop
mov
loop
lret
aam
inc
mov
mov
cmp
pop
dec
add
push
mov
inc
sub
sar
daa
mov
scas
shr
sub
jnp
imul
sub
aaa
call
pop
stos
xlat
outsb
test
movb
or
ss
fisttpl
mov
sbb
loope
xor
loope
pop
or
popf
cs
dec
sbb
imul
sub
scas
xchg
divb
xchg
lea
jl
scas
mov
std
orb
xorl
popf
incl
dec
add
mov
les
and
cmp
jl
shr
insl
sub
jae
jecxz
inc
jb
inc
or
flds
int
ljmp
push
push
pop
cmp
xchg
sub
dec
subl
cld
xchg
sbb
mov
cmp
shrb
pop
fidivrl
imul
imul
xor
dec
pop
sbb
call
sbb
stc
sub
sbbl
push
sbb
sub
cwtl
pop
or
push
cs
sub
or
lret
pop
in
aaa
lds
xchg
shlb
adc
or
je
push
adc
add
mov
mov
push
sbb
enter
push
lods
jge
loopne
test
pop
dec
fs
inc
daa
xor
ret
cwtl
add
outsb
fs
xchg
pushf
pop
outsb
jae
out
inc
out
xchg
push
sbb
insb
cmpsl
mov
or
mov
cmpl
ds
data16
fadds
and
sub
mov
fisttps
call
or
shlb
push
inc
cmp
xchg
sarl
lods
mov
test
dec
pop
push
hlt
fwait
push
ret
fists
repz
xchg
xor
mov
out
movsb
push
pop
sub
cmpsb
lock
and
popa
scas
pop
fstps
fcomp
push
xor
jbe
ret
dec
add
push
push
inc
push
adc
mov
cmc
mov
mov
xchg
roll
daa
jne
pushf
dec
lcall
std
add
push
ds
xor
jl
leave
and
dec
push
xor
enter
dec
push
lods
cmc
insb
stc
mov
dec
mov
xchg
test
push
or
mov
sbbl
mov
push
fists
inc
cwtl
pop
mov
clc
mov
sub
outsb
pop
push
or
and
test
lahf
test
xchg
mov
repnz
fcoml
sub
outsb
loope
jp
cmpsb
ret
rcrl
or
nop
cmpl
jl
jne
inc
pushf
adc
mov
mov
push
sub
inc
jne
cwtl
mov
fiaddl
fidivl
lds
mov
push
lret
addb
arpl
into
fs
xchg
out
stos
mov
adc
repz
dec
cltd
sbb
rcrb
inc
mov
movsb
adc
daa
or
fists
push
mov
xchg
je
mov
sub
xor
and
jecxz
ret
or
sbb
cmp
adc
cmp
out
insl
jno
mov
roll
sub
push
xchg
jge
sub
push
add
mov
fsubl
xor
push
jo
rcrl
js
outsb
xor
jl
ss
daa
dec
es
rcrb
ds
jecxz
sbb
xor
and
jb
and
cmpsl
ds
popf
out
pop
sub
xchg
adc
dec
jle
push
dec
inc
cli
cvttps2pi
mov
xor
inc
ds
xor
xor
adc
fwait
outsl
or
pop
sub
ljmp
fdivrl
testb
pusha
stos
mov
std
lret
orl
and
add
sti
pop
sbb
pop
sub
mov
repnz
xor
mov
cmp
mov
iret
int3
ss
pop
movsl
lds
lds
cmc
add
inc
fcmovnb
mov
mov
push
mov
scas
cmp
bound
mov
cmp
mov
mov
mov
psubusb
mov
ss
es
into
out
cmc
sbb
imul
or
mov
adc
mov
cli
sbb
xor
cmp
repnz
inc
cmc
fcom
dec
xorb
arpl
cld
xchg
fnstsw
fcomp
pop
lods
xchg
mov
push
mov
push
arpl
fdivrs
dec
add
sbb
or
out
pop
cmp
and
stos
ret
outsb
jnp
xchg
in
mov
xlat
sbb
push
push
xor
ljmp
xlat
cmp
lods
mov
loope
idivb
cmp
iret
in
sbb
mov
xor
xor
pop
icebp
pop
ret
imul
sahf
shrl
jbe
xor
cld
cli
pop
inc
cmpsb
hlt
rclb
sahf
mov
push
push
dec
mov
and
mov
lret
sar
lret
dec
and
fmuls
xchg
cmp
fiaddl
inc
daa
mov
or
mov
push
ss
out
loopne
lock
sub
mov
xchg
out
repnz
nop
xchg
cmp
push
sub
push
inc
mov
loop
jae
pop
icebp
nop
cs
lcall
cmp
std
js
mov
inc
popf
jge
mov
daa
pushf
mov
jae
or
mov
mov
lcall
outsl
jmp
jmp
iret
and
stc
mov
pushf
in
into
fcompl
push
dec
sub
test
inc
push
cmp
jnp
call
mov
jae
outsl
lds
sub
push
movsl
push
outsb
mov
test
pop
xor
xchg
inc
dec
int
mov
push
rcrb
push
rcll
sub
cmpsb
scas
rcl
pop
ss
test
lcall
loop
out
lret
adc
or
sti
push
fldpi
filds
xor
stos
andb
cmp
dec
in
loope
popf
and
outsb
fistpll
lods
or
fistl
rorl
pop
sub
jns
inc
pop
mov
test
cmpsb
cmpsl
stos
lcall
xor
pop
popa
aam
pop
pop
pop
push
jecxz
or
add
pop
sbb
push
fsub
cmp
and
pop
xchg
or
daa
scas
inc
lea
jmp
jne
leave
stos
push
fdivl
pop
mov
out
cltd
insl
adc
mov
inc
add
dec
and
cwtl
cld
xor
out
adc
lock
or
leave
jp
pop
stos
or
ficompl
xchg
mov
movsl
int3
ljmp
imul
ljmp
paddsb
les
fisubs
shrb
xor
sub
bound
daa
pop
and
xchg
xor
lret
dec
mov
aaa
cmp
loopne
imul
insl
mov
incb
das
jno
mov
loopne
es
scas
dec
mov
mov
in
inc
scas
dec
pop
inc
pop
mov
mov
int3
es
xchg
mov
aas
pop
jo
mov
mov
lahf
inc
lds
mov
mov
xor
jp
lret
add
test
mov
cmp
jb
pop
add
jno
push
sub
in
scas
sub
push
jecxz
aam
outsb
add
add
mov
inc
sbb
sbb
sub
sbb
fwait
ret
cmp
mov
mov
sbb
fs
jno
in
enter
or
or
test
fisubl
cmpb
push
jmp
push
scas
lods
insl
push
fcmovb
jnp
int
add
dec
ret
add
out
or
ja
adc
leave
mov
scas
pusha
jb
push
sbb
out
lds
imul
cwtl
rorl
jne
mov
fstps
movsl
mov
xchg
push
orb
dec
fdivs
arpl
fwait
sub
aaa
mov
cmp
mov
xchg
mov
ret
in
adcl
scas
pop
jbe
insl
aam
inc
filds
xchg
pop
cld
jne
iret
sub
repz
dec
mov
lret
mov
iret
xor
or
idivl
hlt
lods
data16
cmp
fs
das
movaps
es
pop
pop
jp
loope
or
xchg
pop
jle
das
xchg
nop
xlat
rolb
iret
idivl
pop
push
dec
adc
pop
sub
mov
shrb
lcall
ljmp
jl
jecxz
inc
add
mov
lret
arpl
pusha
in
mov
movaps
arpl
into
ret
nop
jg
xchg
dec
pop
dec
cmp
mov
dec
lock
sbb
adc
int
cmpsl
iret
xchg
jns
and
add
js
dec
test
in
movsl
jg
scas
mov
cli
lcall
inc
add
test
out
sub
int3
rol
mov
sub
mov
test
or
adcl
push
inc
std
push
pusha
mov
xchg
cmp
insl
inc
sbb
push
inc
push
sbb
xor
and
out
fildll
rcrl
xchg
mov
jns
cmp
clc
movsb
jle
cmpsb
add
xchg
outsl
int
inc
ret
cmpl
iret
aad
out
or
stos
mov
jmp
sbb
push
push
loopne
jb
movl
aas
dec
add
jnp
imul
test
mov
mov
adc
sub
cmp
mov
sbb
divl
cmpsl
shlb
mov
push
adc
idiv
repnz
xor
xorb
cmp
nop
or
xchg
cld
pop
jns
xchg
lea
insl
clc
xchg
jp
lods
dec
nop
xchg
inc
sbb
xchg
cli
stos
inc
in
push
inc
lock
lods
xchg
inc
mov
sahf
inc
pop
jne
mov
lret
js
push
outsb
pushf
dec
add
and
push
sub
inc
inc
jle
xchg
out
xor
sbb
xchg
push
add
xchg
jge
jbe
mov
out
nop
lods
ss
dec
pop
inc
in
add
cmp
insl
mov
adc
dec
mov
ret
outsb
sar
cld
pushf
sub
das
sahf
push
mov
nop
data16
lea
loop
loopne
loope
int3
fcoms
ret
mov
aam
aas
dec
dec
incl
mov
jl
mov
sarl
pop
xchg
stos
cwtl
cld
xor
push
notl
insl
cmp
sub
repz
mov
pop
lods
cmpsl
mov
sar
stos
loop
xchg
icebp
popf
pop
repnz
and
test
bound
mov
jg
loope
cmc
pop
mov
out
inc
imul
cmp
lds
sbb
fldcw
addr16
push
pop
js
xchg
add
jo
scas
fs
mov
movsb
out
pop
rolb
repz
mov
mov
pop
in
and
dec
pop
push
jge
mov
and
fiaddl
inc
test
mov
adc
sbb
push
inc
sub
xchg
xchg
push
push
sub
xchg
or
lcall
sub
xlat
and
adc
call
jno
add
jp
jge
lahf
enter
jne
sbb
aam
adc
fyl2xp1
or
cmp
sub
cmpsb
subl
pop
test
je
or
scas
mov
rorl
mov
pushl
push
imul
hlt
push
repnz
adc
sbb
mov
pop
sub
imul
dec
push
mov
xchg
sbb
adc
aaa
jmp
push
orb
mov
lea
jmp
push
cmpsl
add
add
ja
shrl
pusha
or
in
jo
jbe
cmp
dec
sub
ret
stos
mov
stos
xacquire
push
xchg
fldcw
push
cmp
mov
std
pop
pop
pusha
loop
das
sub
mov
pop
and
and
or
int
push
xor
mulw
or
jp
mov
popl
imul
ljmp
push
dec
sub
adc
mov
cmpl
or
add
enter
xchg
jne
mov
jns
leave
inc
adc
adc
inc
fwait
and
inc
push
mov
sub
ret
cmp
popa
cld
mov
ffreep
mov
add
xchg
insl
jge
ds
test
cmc
je
mov
addr16
lcall
iret
fisubl
pushf
jo
repnz
inc
mov
repz
inc
incl
xchg
sti
stos
jb
sub
jnp
push
mov
mov
xchg
stos
leave
movsl
sub
inc
and
xchg
scas
cmp
inc
subl
roll
add
xor
ljmp
dec
cmp
pop
push
rcll
sbbl
dec
add
xadd
push
mov
in
icebp
in
int
sahf
clc
gs
dec
xor
adc
inc
sbb
je
push
orb
sub
pop
jl
enter
pop
or
nop
and
or
out
cmp
insl
jg
dec
dec
ss
sub
xchg
mov
push
jne
call
cmp
rcll
sbb
lcall
pop
cltd
sti
push
lods
mov
popf
int
hlt
jb
leave
les
push
pop
inc
ror
mov
in
in
cli
loop
pusha
sbb
inc
mov
push
mov
and
scas
daa
pop
mov
push
sbb
dec
jo
addb
scas
into
ficoml
notb
jle
andl
idivb
cmp
xor
mov
sbb
fwait
lret
adc
fstpl
movsb
mov
int
movsb
jmp
fisttps
and
ja
jl
xor
add
adc
test
in
leave
into
aad
mov
mov
xchg
inc
inc
pop
mov
push
rclb
stos
insb
sub
scas
mov
inc
test
shll
dec
xchg
sbb
out
int3
cli
outsb
or
lock
mov
and
in
xor
push
pushf
xorl
push
mov
or
ficompl
xchg
mov
mov
ds
roll
cmc
out
and
cmp
sbb
sbb
and
sbb
in
fimull
push
fadds
int3
mov
mov
mov
lods
xchg
inc
imul
mov
fadds
inc
fs
sub
cwtl
jp
gs
mov
adc
outsb
ds
shrl
dec
movsl
sub
xor
jp
jno
cmp
jo
adc
mov
lcall
sub
push
int3
test
and
inc
or
loope
aam
popa
jae
inc
inc
adc
enter
leave
inc
inc
sbb
sahf
jl
ret
test
add
xor
pop
ret
dec
xor
ja
xorb
xor
idiv
add
push
sar
pop
rcr
add
xor
test
mov
aad
pop
in
jle
pop
xor
lret
pop
ds
je
rol
mov
ss
fs
shll
cwtl
mov
xchg
mov
cwtl
imul
mov
mov
push
mov
jne
mov
cmpsb
push
and
xchg
sti
xchg
and
aas
fidivrs
add
xor
lods
cld
dec
and
je
out
sub
test
jae
xchg
rcl
jae
sub
inc
shlb
inc
adc
mov
lea
add
push
push
fstpl
xlat
or
pop
inc
mov
add
cmp
pushf
jno
dec
jle
insb
bound
sahf
or
aam
pop
push
imul
mov
pop
out
cli
sub
ret
arpl
movsl
or
shlb
sbbb
popf
mov
outsb
cmp
outsl
test
aad
repnz
pop
jmp
sub
mov
mov
sub
add
test
inc
pop
dec
jge
es
cs
or
jb
cmpsb
enter
mov
mov
fsubs
repz
int
in
lret
sub
stos
sub
aam
adc
movsb
roll
fdivl
jo
push
push
bound
hlt
fs
and
fiadds
jne
lcall
ss
sbb
xchg
pop
push
push
sarb
fcmovbe
and
push
push
rol
pop
inc
movsl
xchg
sbb
pusha
lods
and
inc
add
loope
cmp
enter
mov
lret
hlt
js
cmp
nop
fmuls
and
movsl
testl
cwtl
int3
iret
out
jle
xchg
cwtl
fisttpll
mov
dec
lea
cmp
sub
xor
test
xchg
push
dec
arpl
mov
sti
mov
mov
lock
gs
int3
mov
leave
pop
fisubrl
addr16
les
mov
popf
xchg
sub
and
push
jl
aam
xchg
cmp
cmp
cmp
ret
test
cld
inc
dec
mov
repz
push
int
inc
push
mov
enter
mov
or
mov
dec
stos
cmp
push
in
out
pop
out
add
ds
nop
lods
push
nop
xor
xchg
les
sbb
enter
push
cmp
lret
int
test
loope
mov
pop
fs
lock
icebp
aad
mov
lret
cmp
sub
pop
push
add
ficompl
dec
jmp
jmp
fs
push
cld
jmp
jb
shrb
xchg
fistpll
jbe
daa
enter
add
iret
push
mov
adcb
and
pop
popl
es
mov
lahf
popf
in
or
sahf
repz
rorl
rorl
xchg
jp
dec
adcl
mov
std
push
mov
test
jl
pop
mov
hlt
sahf
ret
mov
popf
sar
sbb
sbb
sbb
inc
pop
psubusw
jmp
xlat
imul
add
cmp
cwtl
add
pop
jne
mov
addr16
call
in
ds
adc
inc
ja
insb
outsl
sub
push
aas
outsb
pop
dec
scas
rcrb
mov
push
sti
das
iret
adc
sbb
mov
nop
mov
std
pop
sahf
dec
mov
es
push
sub
sub
daa
cmp
mov
call
in
cli
cmp
ret
aad
dec
lret
aad
adc
ds
stos
jg
fisubs
and
add
mov
in
and
loop
inc
adc
and
sbbl
data16
push
fs
int3
adcb
jg
lcall
in
mov
insl
push
pop
subl
lahf
clc
enter
mov
rolb
loopne
pop
push
icebp
aam
adc
ljmp
jno
pop
mov
inc
pop
fdivl
or
jb
xorb
mov
and
jb
xor
or
imul
rdtsc
int3
inc
push
ljmp
jno
mov
cmc
std
mov
popf
cmp
xor
push
sub
call
jle
add
mov
lahf
xchg
sti
mov
mov
mov
cld
and
insl
mov
dec
jo
pop
mov
loopne
dec
idiv
push
sbb
sub
sbb
sbb
lods
lods
add
in
in
inc
push
push
pop
xchg
dec
loope
in
inc
adc
es
loopne
stos
lret
sbb
cmp
inc
push
mov
repz
or
fcmovnb
lods
or
js
pop
dec
ficoms
jo
aam
shlb
add
or
add
stos
test
icebp
add
xlat
and
in
mov
or
mov
mov
or
mov
xchg
mov
rcll
inc
cwtl
call
outsb
andb
jp
mul
aaa
push
xadd
ja
repnz
dec
popf
pop
arpl
std
out
mov
clc
and
imul
in
jl
cli
or
xchg
fadd
push
shlb
arpl
imul
lahf
fldcw
mov
mov
cld
sbb
in
pop
scas
push
jle
push
sub
xchg
imul
xchg
mov
xchg
sub
and
sbb
mov
pop
movsb
pop
inc
les
jmp
or
fidivrs
ss
push
jg
jnp
mov
leave
test
imul
xor
cld
je
adc
mov
mov
rcll
pop
lret
add
mov
adc
xor
sbb
mov
stos
nop
pop
dec
in
push
and
test
add
popa
xchg
decl
sbb
push
clc
pop
mov
jnp
or
sbb
add
pop
hlt
adc
mov
aad
in
das
clc
scas
rol
incb
mov
xchg
popa
pop
call
mov
sbb
addr16
xlat
add
pop
jp
bound
inc
dec
mov
mov
add
ss
and
jle
jbe
fcomps
pop
mov
mov
mov
adc
add
sub
pop
rcl
mov
popf
add
ret
pop
jae
push
leave
cli
decl
aaa
cmp
inc
js
mov
popa
dec
jno
dec
mov
mov
bound
mov
cld
mov
negl
adc
jo
xor
sbb
cld
ljmp
xchg
sahf
xor
dec
pop
mov
leave
out
roll
lret
or
imul
xor
mov
and
sti
movsl
adc
dec
sbb
stos
ljmp
dec
pusha
sbb
xchg
lret
fcoml
rorl
sbb
ja
push
lret
icebp
stos
in
xor
jmp
add
lret
xchg
fcompl
pop
mov
fnstcw
sbb
pop
inc
mov
movsl
or
sbb
or
pop
inc
shll
dec
mov
mov
pop
jp
andb
outsl
pushf
and
sub
push
xchg
push
fisubl
psubq
pop
loopne
jno
test
adc
mov
cmp
adc
add
aam
test
add
ret
sbb
adc
popa
popf
in
fcomps
xor
popf
fsubrl
movq
ret
mov
mov
sbb
sub
or
adc
fdivrs
sub
nop
leave
and
fdivrs
out
mov
in
out
shlb
test
mov
roll
fldl
repz
jae
out
iret
adc
xchg
loopne,pt
int
scas
outsl
sub
pop
pusha
leave
in
hlt
add
xchg
mov
pand
stos
jbe
dec
jmp
gs
loopne
push
sbbb
in
mov
sbb
lahf
call
fbld
leave
stos
cmp
daa
jmp
cld
daa
add
cmp
push
das
in
push
daa
pop
add
outsl
dec
sbb
lcall
into
mov
mov
xchg
sahf
and
pop
dec
adc
pop
inc
xchg
shlb
lret
pop
pop
ds
mov
sbb
dec
mov
mov
push
inc
adc
fstpl
fiadds
stos
sarl
push
fadd
cli
pushf
lds
in
pop
in
ljmp
lds
pop
cmp
push
outsl
lret
pop
shl
movl
xchg
rorl
pop
sbb
sbb
pushl
repnz
pop
cmc
sarb
mov
bound
xchg
jmp
sub
sbb
aaa
fisubl
adc
out
xor
jb
cmpsl
pop
sub
addr16
xchg
ret
and
pusha
inc
pop
pop
sub
imul
xchg
stos
mov
pop
sub
ret
jl
xor
lods
sbb
dec
push
test
dec
or
xor
xor
out
pop
outsl
inc
out
mov
mov
dec
push
xchg
sub
push
cwtl
loope
mov
and
js
std
add
cld
loopne
xchg
sarl
and
sbb
pop
pop
ja
clc
sub
lret
sbb
adc
les
loop
sbbb
mov
fisubs
jp
cmp
cltd
cmp
add
dec
in
and
fsubrs
in
andb
shll
cmp
sub
fadds
outsb
loope
mov
stos
lock
jmp
or
xor
fnsave
mov
adc
hlt
mov
ja
mov
and
mov
xchg
mov
es
mov
insl
push
mov
movsl
aaa
test
lcall
aas
in
roll
sbb
dec
dec
mov
cmp
sub
cld
pop
or
ja
cmp
pusha
inc
std
add
xchg
pusha
pushf
add
scas
ja
cmp
xchg
sbbl
repnz
fptan
lods
in
fs
sub
cmp
das
into
call
andb
lds
lcall
pop
push
popl
jecxz
dec
mov
out
roll
mov
adc
adc
addr16
sbb
fpatan
loopne
sub
push
adc
or
roll
push
inc
or
ss
ja
xchg
inc
pop
mov
repz
xchg
push
pop
jne
inc
mov
roll
rol
movsb
mov
decl
hlt
sbbl
inc
es
inc
cmp
mov
subl
mov
loope
gs
cmpsl
sbb
outsb
sbb
jbe
gs
je
jno
andb
test
stos
dec
out
mov
sub
xchg
ret
in
fsubrl
or
adc
dec
cmp
sbb
jmp
lods
loop
rcrb
sbb
inc
stos
iret
dec
pop
mov
outsb
pop
stc
cwtl
jmp
xor
repnz
sub
mov
call
dec
push
xchg
adc
data16
or
sub
push
ja
in
ljmp
cmp
sub
leave
sub
cli
cld
ss
bound
push
daa
xchg
or
jl
daa
mov
mov
mov
push
xchg
mov
mov
repz
sbb
push
inc
cmpsb
negb
push
inc
outsl
adc
mov
pop
push
jge
adc
inc
movsl
jmp
add
mov
aad
mov
and
hlt
mov
and
addr16
adc
jbe
push
inc
mov
pop
adc
mov
pop
xchg
test
call
out
inc
mov
insl
mov
stos
xor
lods
mov
sub
lods
push
fpatan
rorl
sbb
dec
dec
add
sahf
cmc
or
stos
orl
mov
mov
xchg
stc
stos
or
int3
das
lock
test
cmp
je
scas
addl
mov
ds
sbb
lahf
adc
fs
leave
dec
xor
ja
dec
jg
popa
popa
andl
shl
data16
and
adc
outsl
ss
insb
in
int3
pushf
xor
stos
and
loope
inc
in
ficoml
adc
rclb
pop
xor
jl
test
mov
push
mov
add
dec
cmpsb
or
xor
dec
outsl
neg
rolb
cmp
and
ficompl
lods
imul
inc
leave
adc
addr16
arpl
cmpb
mov
in
pop
xchg
loop
inc
dec
inc
bound
dec
test
adc
jno,pt
stos
pop
inc
cmpsl
cmp
jg
ficompl
jbe
lock
xor
pop
icebp
pop
movsl
je
cs
mov
repz
push
cmp
dec
lret
sbbl
ljmp
adc
pop
xchg
xor
iret
dec
dec
loop
mov
popa
dec
lahf
lret
mov
jno
or
or
xorl
stos
mov
shl
orl
inc
outsb
out
push
imul
test
shrb
adc
shr
jle
pushw
test
pop
mov
ljmp
lret
jae
shll
lret
mov
add
mov
pop
mov
in
mov
test
push
movsb
test
daa
jbe
dec
or
push
std
sbb
cmp
sub
cwtl
xchg
sub
jnp
xlat
mov
into
out
je
or
jns
lods
xchg
push
push
scas
lods
lods
inc
lret
insl
outsb
aas
scas
push
and
jge
stc
push
lds
ret
push
lret
fisubs
push
mov
cmp
lods
fimuls
add
cmc
mov
jmp
and
push
pop
jne
or
xchg
cwtl
int3
jno
std
add
sar
mov
into
xchg
lock
fs
or
inc
jmp
int
out
ljmp
cmp
cmp
sahf
sub
repnz
xchg
xchg
fnsave
mov
xchg
aas
ss
and
lahf
mov
mov
bound
call
pop
sti
sti
ffree
mov
cmp
scas
mov
les
lea
ret
inc
fidivl
scas
pop
sbb
in
mov
mov
mov
lock
mov
cmpb
sub
mov
aam
add
jnp
push
pop
or
jmp
imul
hlt
pusha
mov
pop
mov
cs
inc
push
mov
push
mov
push
mov
jne
pop
fisubs
les
add
xlat
and
mov
lds
push
aad
inc
shlb
movsl
inc
dec
arpl
pop
insl
and
fisubrl
xor
dec
pop
mov
xchg
enter
inc
jbe
xlat
mov
push
add
cltd
jl
outsb
pop
mov
popa
pop
or
call
and
xchg
or
scas
sbb
test
jns
lock
bound
xchg
aaa
or
popf
fadds
adc
cmpsl
pop
add
rcrl
adc
fldl
and
aad
ljmp
jle
push
cmp
xlat
arpl
fistpll
push
movsl
dec
ret
xor
inc
ss
int3
ss
fstpt
jne
vpslld
inc
sbb
add
clc
dec
inc
or
adc
and
and
mov
inc
cmp
fists
xorps
mov
adc
pop
sbb
or
jmp
inc
adc
mov
inc
adc
lahf
sarb
push
xor
lcall
sahf
hlt
lret
in
stc
das
or
stos
aam
mov
sbb
mov
jmp
fimuls
xchg
shlb
or
mov
fcompl
pop
mov
lcall
dec
inc
jg
sub
xlat
dec
hlt
xchg
sbb
js
addr16
out
and
ja
adc
xor
stos
pop
xchg
xor
loopne
stc
pop
xchg
cmpsb
xchg
enter
pop
mov
lea
xchg
mov
adc
jmp
inc
cltd
ljmp
cmpsb
or
pop
cmp
nop
icebp
dec
adc
jecxz
mov
add
dec
inc
push
adc
adc
aas
and
in
aas
cmc
fmull
xchg
xchg
repz
fucomip
mov
adcb
dec
gs
fstpl
nop
aad
cmpsl
test
imul
out
pop
popf
xor
repz
aad
jle
je,pn
lea
or
sub
mov
fadds
mov
xor
push
gs
fstpt
pop
jno
test
out
pop
std
mov
orl
pop
jbe
add
dec
rcl
loop
add
jo
sub
or
fdivrl
mov
cmp
adc
mov
add
mov
mov
inc
bound
mov
test
hlt
loop
lds
iret
cmp
not
push
in
adc
subb
aas
inc
sbb
and
repz
sub
ss
add
adc
push
test
cmp
mov
adc
inc
das
mov
jle
fcmovne
jl
in
loope
call
mov
jmp
int
inc
inc
ficoms
or
inc
jmp
ret
bound
lahf
mov
fisttpl
popf
adc
fwait
lcall
jg
iret
lods
and
inc
xchg
mov
out
cmp
rcll
insl
out
shr
push
xchg
jp
lods
xchg
mov
xchg
mov
aaa
cmp
bound
push
pop
sbb
xor
mov
cmp
pop
insb
sbb
aaa
dec
ret
push
pop
call
stos
dec
jo
out
push
popf
es
sub
xor
cmpsb
xchg
mov
fstps
inc
adc
test
add
das
fistl
xchg
xor
push
fdiv
popa
mov
fisubrs
xchg
mov
or
aam
push
push
push
adc
push
pop
imul
xor
add
cwtl
sarb
sahf
mov
pop
jp
adc
jnp
cmpl
jcxz
and
push
pop
in
lret
call
sub
xchg
loope
arpl
cmp
push
loopne
mov
sbb
mulb
mov
jae
dec
mov
lds
add
sbb
enter
fadds
addr16
or
lods
push
push
inc
lret
in
add
lret
mov
xchg
add
or
notl
repz
rcr
mov
push
xor
call
nop
imul
imul
jmp
mov
sbb
lock
leave
or
notl
push
rol
movsb
xchg
push
dec
sub
and
rcrb
mov
adc
push
es
pushf
mov
and
cwtl
shlb
jnp
xchg
aaa
icebp
xor
imulb
pusha
scas
daa
aam
rorb
arpl
sbb
mov
xor
int
cmp
or
nop
mov
xchg
ret
jb
inc
bnd
aaa
sub
jle
out
cmp
rcrb
inc
stos
clc
inc
mov
mov
popf
bound
pop
mov
pop
push
inc
into
adc
clc
jg
dec
hlt
inc
repnz
js
mov
mov
pop
arpl
push
sub
lret
cmpsl
scas
cmp
xor
adc
cmpsl
inc
ds
sub
test
inc
jae
sbb
cmp
dec
cmp
test
out
push
fldcw
jnp
sarb
mov
das
jg
push
push
mov
mov
lds
es
lods
pushf
or
cmp
sbb
pop
repnz
ret
fwait
rcrb
addr16
jno
stos
fs
jae
xor
dec
daa
pop
int
enter
subl
xor
or
dec
imul
sub
jnp
aaa
and
fld
xchg
inc
hlt
pop
sub
ret
std
sbb
sbb
add
imul
int3
dec
outsb
adc
shrl
xor
mov
pop
addr16
xchg
cmp
fbstp
ja
jge
mov
push
popa
mov
sbb
cwtl
push
cmp
clc
push
sbbl
lret
mov
push
push
fildll
adc
adc
call
jnp
outsl
and
xchg
mov
mov
mov
pop
push
clc
mov
cmp
mov
std
inc
cmp
jnp
ficomps
mov
push
icebp
andl
ret
cmp
cmp
mov
loope
push
jb
xor
lods
dec
test
xlat
lahf
sub
imul
lods
add
pop
add
xchg
enter
or
adc
pop
cwtl
lea
pop
mov
dec
xor
adc
scas
out
jmp
gs
ljmp
dec
xlat
pop
mov
sbb
mov
fcomi
pop
add
xchg
dec
stos
imul
sub
jo
daa
stos
test
jge
cs
mov
push
push
test
mov
mov
mov
mov
icebp
or
shrl
in
aas
rol
xchg
xchg
sbb
cmp
inc
dec
lds
ret
push
pop
lds
mov
xchg
push
jno
clts
cmp
enter
or
mov
and
adc
cmp
jmp
fsts
leave
add
into
inc
sarb
push
adc
pop
add
outsb
push
movsl
test
aas
xor
out
insl
sti
cmp
aad
aam
push
clc
data16
enter
std
incl
mov
daa
xlat
cmpsl
fiadds
int
xchg
aad
inc
scas
filds
cmp
inc
adc
jp
mov
cmp
jno
lds
popa
shrb
add
sbb
pop
pop
aas
aad
pop
adc
imul
pop
dec
inc
or
popa
shll
enter
mull
jecxz
push
pop
aas
xchg
fistl
xor
inc
inc
imul
lahf
stos
sbb
push
pop
pop
add
push
cmp
imul
ja
les
adc
fnstenv
sbb
xor
jae
mov
jecxz
jmp
xor
dec
cld
cld
out
int
loope
pop
and
bound
dec
add
cmpsb
pop
nop
mov
fs
jp
fldcw
fbld
adc
es
lahf
out
mov
stos
cmpsl
push
loope
lcall
shll
sbb
not
lea
jle
sti
shrl
add
xor
das
inc
inc
cld
addb
push
stos
aas
mov
clc
push
mov
xor
pop
loop
outsb
jl
sbb
sub
pop
arpl
ljmp
cmp
shlb
insl
mov
enter
xor
scas
fdivrs
repz
dec
ss
cs
add
popf
stos
cld
ljmp
adc
iret
inc
push
enter
and
imul
inc
nop
repz
ds
sbb
inc
push
inc
mov
pop
sub
xor
iret
jg
pop
sbb
ss
scas
push
shll
or
push
pop
adc
sub
fistl
jo
adc
adcl
jne
mov
mov
movsl
and
pop
pop
mov
stos
cwtl
xor
inc
jae
pop
lahf
outsl
and
push
ljmp
inc
jno
aam
add
inc
mov
xchg
xor
jg
fstpt
sahf
dec
sbb
aad
jne
fs
sbb
push
mov
es
aas
ret
dec
inc
loop
rcr
lock
js
mov
cmp
add
jecxz
mov
dec
xchg
mov
inc
xchg
hlt
arpl
and
outsl
aas
mov
aam
mov
mov
mov
mov
dec
mov
aaa
movsl
inc
loop
mov
lahf
icebp
push
pusha
sub
inc
cli
out
mov
inc
sbb
nop
push
lods
cmp
push
aad
adc
cmp
aas
mov
lods
cmp
cmp
mov
in
xchg
add
rorl
cmc
jnp
gs
push
pop
aaa
pop
bound
fwait
xchg
mov
xor
push
inc
gs
jmp
mov
bound
push
test
es
jg
ljmp
pop
clc
xor
and
inc
imul
cwtl
sbb
push
stos
add
ds
inc
or
mov
jl
loope
imul
rol
js
or
lcall
xchg
loope
arpl
sub
push
adc
sbb
push
or
pop
sbbb
lcall
call
pop
insb
jo
in
shll
cwtl
pop
xlat
xor
repz
fcoml
outsb
movsb
addr16
jns
fists
loopne
in
out
xchg
je
inc
push
sub
cmp
jno
jmp
rcrl
xor
mov
jnp
popl
bound
push
shl
sbb
js
pop
shlb
mov
inc
incb
xchg
popa
shlb
popa
daa
sbb
je
js
sub
push
aad
jno
std
fdiv
mov
jne
call
insl
push
out
loopne
dec
ss
mov
mov
xlat
pop
rclb
push
lods
push
mov
pop
cmp
sbb
jno
nop
adc
xor
popf
mov
xchg
outsl
fsts
testb
test
aam
xchg
cmp
mov
jmp
nop
fwait
mov
in
in
inc
insb
rsqrtps
mov
lods
iret
cmp
pop
push
mov
or
loope
aad
fxam
sbb
movsb
mov
packuswb
jo
pushf
cmc
inc
xor
or
jp
pop
push
stc
xchg
test
shll
mov
add
lds
bound
xor
adc
repnz
or
mov
mov
je
int3
adc
cltd
movsl
xchg
and
mov
pop
daa
pop
outsl
dec
fsubrs
gs
jne
loop
cli
xchg
je
fiaddl
or
icebp
jmp
arpl
dec
repnz
mov
test
xchg
mov
mov
out
pop
nop
rcrb
jne
add
fs
loope
push
and
cmp
pop
orl
jns
cwtl
fsubl
outsl
or
repz
push
dec
jmp
js
sbb
ds
shll
or
cmp
xor
or
inc
jecxz
fists
or
dec
js
insl
sbb
enter
rorl
aam
ficompl
fmul
leave
push
jmp
insl
mov
idivb
fs
mov
imul
lock
cmc
jp
mov
dec
pop
dec
sbb
pop
movaps
loop
xor
add
rclb
inc
or
push
dec
shrl
xchg
sbbl
inc
mov
cmc
cs
xchg
pop
jne
sub
sbb
pop
lods
lock
jp
xor
enter
andl
cmp
jne
mov
mov
mov
popa
cli
imul
xlat
mov
push
adc
movsb
js
or
call
cltd
stc
pop
xor
dec
enter
repz
pop
cmp
jo
xchg
sub
mov
sbb
in
inc
pop
inc
xchg
leave
lock
lea
mov
aad
jl
mov
fisubl
cmp
aaa
ds
adc
ss
jno
pop
mov
rorl
adc
insl
jecxz
les
arpl
pop
stos
repz
push
les
in
inc
pop
mov
mov
test
sbb
fs
or
cs
add
sbbb
in
and
add
dec
sarb
push
pop
out
sub
push
or
fwait
outsb
pop
mov
je
push
lods
sti
xlat
sub
pop
mov
aaa
sysret
out
or
imul
leave
out
in
mov
dec
testb
sub
outsl
lcall
test
fs
sub
jo
cmp
loope
in
rcrb
mov
out
push
jnp
jg
hlt
dec
or
mov
sub
push
and
lods
mov
jecxz
sub
xchg
leave
outsb
cmp
push
lock
mov
cmpsb
outsl
mov
mov
fwait
cmpsb
lea
aas
leave
jae
nop
sarb
jae
insb
mov
xor
jp
shlb
ret
mov
dec
mov
xchg
icebp
xor
push
or
mov
cmp
xchg
test
stos
bound
addr16
xchg
test
and
stos
or
sub
shrl
mov
or
out
rolb
xchg
push
pop
data16
scas
jg
dec
ds
lods
jnp
pop
sub
clc
in
lds
dec
xchg
stos
sub
sub
pop
fdivrp
cs
mov
sbb
pop
lahf
mov
sbb
mov
test
lods
push
xorl
jp
imul
mov
sub
add
mov
adc
push
inc
jns
fwait
xchg
jns
hlt
enter
mov
pop
inc
fisubrl
adc
and
and
jp
xchg
hlt
xor
pop
popa
lods
jle
or
fnsave
adc
mov
inc
popf
or
stos
add
sbb
cs
xlat
mov
fistpll
std
cmp
lods
popa
imul
shrl
adc
adc
lret
and
push
pop
loop
jmp
ss
test
shl
aam
jg
or
out
pop
mov
sbb
xor
sbb
fdivrl
jecxz
ret
popa
xchg
mov
bound
pop
jecxz
ret
push
in
dec
in
push
test
pushf
dec
rclb
stos
sahf
push
push
fld
inc
push
inc
push
add
lret
outsb
lock
dec
inc
scas
mov
pop
pop
pop
push
xor
loopne
mov
out
into
and
iret
xchg
mov
in
stos
xchg
inc
xchg
out
push
adc
sbb
icebp
aad
loopne
das
cmp
popf
scas
loope
pushf
adc
cmpl
lock
and
bound
cmpsl
lahf
jle
adc
popa
cs
mov
pusha
pop
sub
xlat
ja
lret
fnsave
fdivp
loopne
or
mov
jno
xchg
or
fcoms
mov
aas
cmpsl
or
xchg
adc
imul
shrb
add
roll
mov
pop
sub
int
sub
shrl
dec
fisubrs
lock
adc
dec
leave
cwtl
ds
pop
xchg
xchg
push
sub
aad
dec
mov
popf
inc
add
jae
mov
aam
scas
mov
cmpsl
adc
roll
test
xor
in
add
int3
mov
fwait
pushf
lock
pop
adc
int3
mov
nop
adc
fcoms
and
je
xchg
insb
sub
aad
sbb
mov
sbb
pusha
or
pushl
aad
repnz
js
sub
aaa
push
and
lock
orb
dec
cwtl
mov
push
aad
mov
jg
xlat
or
jge
imul
mov
js
adc
stos
or
mov
mov
mov
push
adc
fiadds
aad
sub
jp
cmp
inc
mov
sbb
lods
movsb
sbb
sub
lahf
addr16
push
push
arpl
sub
shl
lcall
in
lods
cmc
inc
or
lock
js
mov
xchg
inc
sub
out
jbe
or
hlt
mov
pop
push
dec
mov
ror
lret
inc
hlt
push
fildll
push
push
fsubrl
repz
mov
daa
scas
cmp
test
nop
add
mov
cmp
cmp
mov
inc
push
cmp
into
stc
rcrl
lea
cmp
imul
cmp
and
ljmp
imul
sahf
ss
rcr
pop
sbb
lods
adc
xor
repnz
cmpsl
sbb
or
add
jecxz
cld
push
push
pusha
lea
or
lods
sub
fwait
cmpsl
insl
adc
inc
sbb
dec
outsb
mov
icebp
xlat
lcall
cli
data16
daa
imul
mov
nop
test
ljmp
push
rcl
adc
pusha
xor
rcl
ss
dec
int3
out
xchg
rol
add
xchg
pop
push
xchg
xchg
inc
jb
test
clc
mov
push
outsb
ror
clc
mov
es
fists
orl
decb
or
dec
push
mov
push
lcall
jno
out
inc
rcrb
leave
pop
sub
bound
inc
fimuls
aaa
mov
mov
cli
mov
imul
push
dec
not
jo
push
and
dec
aas
jbe
mov
xchg
aaa
jbe
sbb
out
into
imul
xchg
push
mov
add
bound
sub
neg
mov
inc
or
fs
xchg
jo
test
push
lar
jno
mov
leave
dec
add
jp
and
xchg
negl
test
xlat
lret
enter
and
cmpsl
mov
and
push
rol
adc
xor
into
mov
lret
cli
mov
mov
cmpb
cmp
mov
mov
aam
xchg
sbb
xor
fcoms
pusha
mov
sub
sub
shrl
js
aam
mov
bound
stos
adc
xchg
push
sub
cmp
jo
arpl
scas
lods
or
jnp
push
ds
decb
push
lds
xlat
pusha
add
sbbb
and
popa
lahf
inc
add
mov
inc
pop
or
xor
xchg
xchg
jmp
cli
lods
xchg
hlt
inc
adc
and
xchg
cmpsb
push
cwtl
repnz
pusha
inc
jle
outsb
dec
push
lock
jno
daa
mov
test
mov
lds
dec
or
lods
out
xor
cmp
mov
js
dec
xchg
loop
or
push
and
sub
out
imul
mov
mov
das
and
jecxz
leave
sbb
rcrl
pop
test
rolb
shrl
cmp
in
gs
lock
sub
push
lds
pusha
sbb
xlat
mov
jg
mov
dec
rcl
or
push
mov
stos
lds
add
sbb
mov
xchg
sahf
sub
in
mov
das
push
inc
jns
xor
out
jo
sbb
pop
mov
bound
vpsubq
mov
dec
leave
movsl
shll
dec
and
cli
sub
ss
mov
jg
loop
and
mov
cmp
out
test
xchg
rorl
mov
jl
mov
das
es
call
sub
call
xlat
push
mov
in
cmpsb
xlat
cld
sbb
jnp
call
imul
jle
lds
push
sbb
std
pop
jae
ja
in
outsb
push
cmc
outsb
jb
ljmp
xor
dec
test
sar
mov
pop
aas
insl
shlb
imul
movsb
outsl
adc
and
dec
adc
loop
pop
mov
adc
jae
notb
mov
jg
fdivrl
adc
dec
ss
cltd
andb
shll
repnz
gs
or
adc
mov
dec
hlt
mov
gs
cwtl
jge
or
shl
or
out
pop
clc
add
fdivs
loope
rorb
daa
jnp
add
cmp
and
xchg
fsubs
andl
adc
iret
push
pusha
cmp
movsb
mov
xchg
repnz
inc
xor
sub
std
jb
and
dec
lods
stc
xchg
mov
jl
je
jp
rorl
sti
loopne
daa
adc
int
push
inc
adc
shll
fistl
lret
pop
fdivs
cmp
cmp
cmc
cli
icebp
mov
add
sub
imul
sub
lock
mov
xchg
jl
lods
inc
push
fdivl
test
cmp
pop
addr16
mov
or
faddl
mov
int3
call
xlat
xchg
jmp
or
mov
or
popa
popa
jle
fcoms
sub
jno
mov
mov
push
and
fwait
mov
or
pop
stos
imul
test
add
dec
insl
mov
inc
pop
subb
push
aas
xor
cmpsl
jo
jne
mov
decl
mov
fdivrs
dec
xchg
addr16
aas
leave
test
xchg
dec
packsswb
iret
cmpsl
cmpsl
addl
mov
test
bound
movb
or
pushf
xor
xchg
hlt
mov
jmp
add
push
rcll
lods
enter
push
mov
jno
mov
mov
ret
sub
loope
lock
cmp
test
outsb
aas
test
push
popa
or
lret
and
and
push
pushf
or
mov
test
adc
scas
or
pop
xorl
sbb
fimull
sahf
and
jge
popa
mov
push
andb
int3
jo
add
gs
out
mov
fnstenv
adc
addb
sbb
push
inc
mov
xchg
loope
insb
and
out
push
jno
fs
out
dec
push
and
ficoms
sti
pop
ja
push
bound
mov
loopew
add
push
das
dec
decl
add
adc
mov
xchg
cmp
ret
popf
or
inc
cmp
cltd
pop
in
cmp
fimull
test
aas
inc
mov
mov
jge
leave
xchg
pop
adcl
test
dec
imul
fldenv
jne
mov
adc
mov
xchg
mov
pop
orl
mov
or
dec
mov
loopne
repnz
and
shll
imul
jl
subl
shlb
pop
sbb
lret
leave
dec
cmpsb
sbb
xor
imull
cltd
lret
lods
push
push
adc
push
scas
hlt
ret
jmp
add
addr16
mov
push
stos
jp
jle
adc
inc
jecxz
fxch
loop
scas
mov
out
jmp
or
inc
and
cmp
add
movsl
and
push
add
and
xor
sbb
test
inc
ror
inc
and
imul
pop
and
sti
out
in
imul
cmpsl
xchg
pop
sbb
add
arpl
outsl
or
fistpl
xchg
cli
lods
pop
pop
sti
cmp
inc
sbb
fnsave
xchg
test
mov
sbb
mov
ret
lcall
cmp
mov
or
adc
cmp
push
xorl
push
push
dec
mov
repz
ja
and
push
ljmp
rcll
aam
mov
and
push
rep
dec
insl
ret
rcll
push
or
int3
loopne
xchg
mov
push
xor
sub
lods
mov
ljmp
and
xchg
divb
insb
jmp
sbb
xchg
jnp
mov
nop
dec
fmulp
dec
int
push
jae
add
int3
out
mov
and
lods
out
cmp
fucompp
push
add
pop
xchg
cmpsb
rol
mov
add
push
rcl
sub
jae
ss
xchg
mov
mov
cmp
push
fnstcw
pop
nop
shr
es
mov
iret
mov
xchg
jecxz
shrl
sub
mov
cld
mov
inc
out
adc
dec
jns
testl
or
sbb
xor
jns
repz
mov
sub
ret
and
mov
mov
lods
xorl
pop
lret
pop
jecxz
sub
fs
jge
cli
jl
adc
xor
pop
adc
nop
add
stc
int
pusha
je
test
add
add
adc
mov
daa
push
stc
pop
fcoml
fcmovnbe
orb
movsl
sbb
mov
inc
cltd
bound
insl
jp
cli
cmp
jp
jecxz
outsb
pop
xchg
adc
ds
test
dec
add
loop
sub
cmp
lret
leave
or
cmp
and
jo
mov
mov
into
xchg
push
cmp
cmp
repz
repnz
jnp
push
movsb
out
inc
shll
fwait
stos
jo
fsub
roll
adc
xor
jl
mov
xorl
gs
cwtl
in
test
out
cmp
mov
lcall
and
sbb
sub
shlb
loopne
cmpb
cmp
cmp
pop
aad
sub
or
xor
lods
dec
push
mov
mov
jae
out
pop
mov
cwtl
mov
int
dec
ss
arpl
roll
add
into
stc
jl
dec
lods
pop
sub
and
fdivrs
ds
out
add
pop
mov
or
daa
or
push
add
mov
adc
xor
add
dec
ds
jbe
add
es
or
in
sahf
mov
mov
sbb
push
std
sub
push
lret
stc
dec
cmp
push
add
cmp
mov
repnz
inc
pop
inc
cltd
fdivrs
jecxz
inc
adc
ljmp
or
and
fst
cmp
cmp
cmp
or
sbb
cs
mov
push
negl
xor
loope
jecxz
jo
push
lret
inc
xchg
inc
scas
dec
movsl
mov
mov
sub
lods
mov
out
bswap
fidivrl
xchg
xchg
in
ss
cmpsb
and
xor
adc
mov
jle
clc
add
sub
ss
xchg
and
mov
xchg
dec
lock
adc
lds
xchg
xchg
mov
inc
lock
and
in
stos
int
xor
xor
cmc
push
iret
mov
mov
fcmovnu
mov
cmp
mov
xchg
push
mov
push
jmp
pop
test
clc
cmp
or
fistpll
sbb
aam
dec
push
es
cmp
and
pop
xchg
test
movsb
and
add
xor
sub
and
out
sub
mov
mov
shll
xor
les
std
xchg
jecxz
hlt
push
mov
ja
aaa
ret
pop
pop
sbb
dec
xchg
sub
lahf
push
push
mov
xor
xchg
mov
pop
lcall
mov
mov
jle
test
jo
in
xchg
mov
adc
dec
aam
dec
mov
cmp
popa
test
sub
lcall
test
and
dec
mov
aaa
mov
dec
sub
add
add
cmc
les
mov
test
cmp
mov
jecxz
jmp
xor
inc
arpl
iret
and
pusha
nop
sbb
mov
int3
enter
push
jecxz
push
pusha
icebp
cmpsb
mov
jbe
std
jae
xlat
mov
ret
mov
call
push
add
xchg
loop
bound
inc
sub
out
stos
xor
pop
lea
mov
sub
pop
cwtl
xchg
aad
aad
sub
outsb
in
call
ret
jp
fdivs
pop
stos
inc
jl
pop
and
jnp
pop
das
dec
imul
lock
icebp
dec
aaa
ss
pop
mov
loopne
dec
aad
fwait
push
out
loope
push
pop
clc
rorl
xchg
lahf
pop
outsb
add
mov
int
lahf
push
sbb
sbb
mov
xchg
ss
sub
ret
mov
fbld
inc
and
xor
push
insb
cmp
aaa
clc
or
xchg
mov
adc
jns
dec
sub
xor
mov
sub
imul
xchg
out
and
pop
sbb
cmp
push
popf
mov
dec
mov
push
dec
in
nop
lods
arpl
inc
lods
arpl
inc
and
xor
pop
lahf
sahf
xor
or
pop
xlat
inc
mov
inc
inc
or
sti
aas
fs
test
push
imul
in
lods
add
mov
inc
adc
xchg
push
mov
jmp
arpl
pop
mov
push
movsl
daa
dec
out
decb
addr16
scas
mov
jg
mov
or
stos
imull
stc
push
pop
adc
arpl
lea
mov
pop
subb
mov
xor
cmpsl
dec
scas
in
in
scas
insl
imul
outsb
cmpsb
push
cmp
test
jb
mov
insl
jge
movsl
or
lods
out
mov
cld
aaa
call
out
jae
pop
and
clc
adc
lahf
xchg
mov
in
or
sbb
lods
lret
add
cmp
lcall
out
mov
ret
cmp
inc
scas
push
sbb
sub
jmp
cli
test
push
xor
or
cmpsb
dec
mov
subb
xchg
sahf
imul
outsl
pop
fwait
test
in
jbe
fldl
fldenv
ja
fisttpll
fs
jp
js
lahf
shrb
test
js
cmc
sbb
and
je
enter
in
shrl
int
mov
pop
movsl
int
js
lret
out
xor
andl
popf
ss
add
ljmp
pop
addr16
mov
xor
and
pop
in
aad
cmpsb
nop
cwtl
jp
inc
cmp
cmp
das
loope
xor
loopne
scas
aaa
push
push
jno
jmp
aam
adc
mov
xor
sar
push
scas
notb
push
std
in
iret
in
repnz
ficomps
test
dec
mov
test
repz
outsb
xor
cmp
call
mov
mov
or
adc
or
loope
mov
sub
stos
xchg
sahf
bound
mov
xlat
add
adc
aad
xor
outsl
add
lods
xchg
cmpsb
stos
aad
mov
or
aam
mov
lods
out
dec
repz
xchg
cmc
and
pop
mov
insl
test
cmpsb
add
mov
jecxz
ror
or
inc
outsb
cmp
pop
push
out
into
xor
aaa
push
mov
out
sar
in
lock
subb
push
jbe
test
push
mov
sub
pusha
insb
xor
dec
xor
mov
pop
filds
filds
loope
leave
and
cmp
movl
jecxz
sysexit
jns
lods
sarl
mov
out
jle
ds
out
xchg
push
leave
inc
incb
daa
xchg
mov
popa
ds
cs
enter
stc
leave
sbb
lret
enter
cmp
inc
push
pop
clc
fisttps
and
cmp
mov
call
jbe
pushf
pop
call
add
mov
cli
xchg
sbb
call
dec
fs
pop
xchg
fistpll
dec
stos
pop
movb
test
test
ficoml
jmp
sub
lea
jne
cmp
pop
or
cmp
test
jnp
mov
inc
pop
inc
inc
or
divl
cmp
jns
mov
fwait
cwtl
sub
push
cli
mov
jnp
insl
cmpsl
pop
mov
add
mov
jmp
addb
mov
fdivl
and
inc
hlt
cli
adc
in
push
clc
clc
sub
cmc
cmp
into
dec
sbb
popf
sti
jns
into
mov
mov
cmpsl
mov
xor
push
add
sub
into
cmpsb
das
daa
dec
cmp
adc
lahf
dec
ja
mov
in
shll
jle
pop
cmpb
call
pop
aas
daa
jecxz
rorl
lret
mov
jne
nop
cmp
cmpsb
cmpsb
out
ret
repz
mov
push
and
bnd
lcall
lods
adc
mov
push
imul
inc
aaa
call
add
std
push
jns,pt
inc
clc
xchg
mov
xchg
shrl
mov
lds
push
mov
dec
jnp
out
je
cltd
pop
inc
test
daa
inc
insb
imul
sti
cs
aam
inc
shll
mulb
decb
mov
sub
xlat
and
out
lret
dec
cmp
in
int3
inc
popa
or
sub
jmp
lock
fstpt
popa
pusha
lds
mov
mov
dec
xor
lcall
push
inc
fnstsw
cmp
push
std
lods
jne
inc
shlb
push
rcll
cmp
cmp
in
out
xor
iret
test
push
and
ret
sar
lea
xor
adc
lods
enter
add
aaa
inc
cmc
pop
in
and
dec
dec
insl
test
or
mov
insl
pusha
inc
cmp
push
mov
add
js
jnp
pop
jno
rcrl
in
lea
cmp
cli
xchg
shll
jno
in
inc
test
push
push
std
shlb
orl
and
mov
dec
in
call
lock
or
cmp
sahf
shr
push
stos
incb
rorl
push
xchg
jl
iret
sbb
mov
icebp
xchg
jno
adc
or
jge
adc
adc
pop
sbb
rcrb
jne
sub
sti
adc
add
pop
jmp
mov
pop
lret
popa
xor
test
jne
je
cli
sub
dec
mov
in
cmp
idiv
pop
mov
xchg
mov
dec
xchg
icebp
fidivrl
add
xchg
pop
aam
or
int3
jle
nop
lock
stos
sti
push
pop
das
notl
enter
stc
sbb
mov
fstp
test
and
mov
cmpsb
lahf
icebp
mov
inc
in
sbb
push
push
movsb
adc
inc
push
adc
xchg
push
mov
xchg
cmp
adc
inc
xchg
cmp
mov
mov
test
aam
pop
or
lock
dec
addr16
mov
shlb
dec
and
leave
sub
js
mov
and
xor
push
data16
cmp
adc
mov
testl
pop
in
stos
loop
jg
pop
mov
pushf
xchg
and
mov
mov
mov
cltd
pop
rol
mov
stos
repz
jne
hlt
ja
inc
fldenv
outsb
pop
sub
mov
or
mov
int3
sbb
test
xchg
test
mov
outsb
xor
insl
repz
add
add
pop
sti
lea
subl
stos
add
or
sbb
sub
sbb
push
ds
cmp
and
in
stc
sub
push
in
repz
adc
cmp
xor
fdivrs
push
aaa
fisubrl
inc
shrb
cmpsb
mov
push
outsl
push
sub
pop
lcall
add
aad
jae
jns
gs
iret
ljmp
dec
inc
adc
outsb
push
into
inc
roll
sbb
test
je
cmpsb
push
or
mov
pop
insl
shlb
test
adc
fimuls
push
adc
cltd
mov
imull
stos
mov
rcrb
in
add
dec
hlt
js
jp
imul
in
push
sub
mov
loop
cmp
je
push
nop
ficoms
pop
push
add
xor
repz
enter
inc
and
jae
popf
mov
mov
cs
sbb
rolb
lods
imul
mov
xlat
cwtl
lahf
pop
xchg
adc
lds
jnp
rorb
test
dec
jo
add
xor
and
pop
xchg
in
inc
mov
roll
lods
insb
sahf
sarb
adc
dec
xchg
mov
push
insb
mov
js
daa
es
aaa
sti
stos
out
push
xchg
je
or
xor
pop
push
daa
fbstp
stos
out
leave
or
ret
pop
cli
jb
xchg
adc
add
jmp
jns
repz
dec
push
lret
xchg
fnstcw
int3
mov
stos
ftst
pop
or
adc
out
pop
cli
and
or
int3
ds
inc
repz
mov
and
cmpl
xor
adc
ret
xor
jg
popf
cltd
fwait
ret
inc
rclb
mov
out
enter
mov
aas
add
pop
dec
cmpsb
mov
push
loope
cmp
fldl
lock
xor
xchg
pop
inc
jns
shrb
sarb
lock
pop
sbb
rcll
xchg
enter
dec
mov
mov
xchg
icebp
or
jle
jecxz
aas
add
aad
ficoms
imul
shrl
repnz
push
adc
adc
cmpl
pushf
fwait
and
jp
jg
test
sbb
jle
aaa
iret
cwtl
dec
xlat
flds
addr16
or
add
lret
enter
xchg
aam
enter
sub
out
inc
sahf
test
jmp
mov
jp
pop
rcrb
mov
sbb
js,pn
vmovd
leave
sub
and
clc
lock
lahf
jle
ljmp
push
mov
ss
fcmovnbe
leave
sbb
cltd
loope
cltd
mov
pop
ja
sub
fadds
cmp
dec
pop
cltd
inc
push
pop
xchg
in
shrb
xlat
aam
jbe
sbb
or
int3
mov
adc
in
lret
call
mov
mov
cmp
xchg
push
mov
jnp
mov
cmp
es
and
pop
imul
or
jmp
pop
inc
pop
lock
mov
add
pop
or
cltd
jmp
push
inc
pop
pop
gs
pop
mov
jg
push
test
pusha
sub
leave
or
out
addr16
xor
insb
lock
fbstp
testb
push
mov
and
mov
fstpl
sar
lcall
scas
cmp
in
loopne
repnz
in
jno
clc
fwait
cmp
fwait
dec
mov
jnp
out
stos
fsubrp
and
iret
sbb
mov
daa
push
stos
xchg
or
xor
adc
sbb
stc
test
ffreep
pop
adc
aad
testl
test
fwait
sbb
xor
movsl
rcrl
xorl
mov
outsb
popa
or
push
lcall
xchg
push
xor
scas
sub
rcrb
stc
adc
outsb
mov
xor
xorb
cmp
pop
or
mov
push
push
jp
nop
pop
xchg
outsb
rorl
pushf
pop
inc
stc
stos
pop
and
xchg
pop
pop
jns
inc
ljmp
jle
loop
xchg
cmpsl
and
insb
daa
lods
ljmp
out
jge
scas
adcb
shr
ljmp
push
and
xor
sub
push
xor
notb
sub
das
jo
sub
pop
fs
jl
pop
sar
mov
pushf
push
ret
popf
int
jo
push
das
sahf
cmpl
mov
outsl
inc
repnz
add
in
adc
mov
sbb
push
movmskps
pop
xor
fincstp
jbe
xor
maxps
dec
filds
lods
enter
sbb
test
jmp
js
inc
dec
jg
call
loope
mov
jne
sti
push
shl
cmc
lds
mov
mov
push
in
mov
sbb
adc
fmul
adc
and
in
xchg
arpl
xorb
and
cmp
mov
push
xchg
jb
sub
xchg
loopne
or
xor
push
push
out
lahf
ficomps
jnp
jne
cmp
jb
daa
xchg
sets
mov
add
pop
jb
stos
lea
aas
pushf
inc
rcr
lret
xchg
shrl
insl
inc
imul
arpl
push
push
aas
cmp
pop
fwait
lret
lcall
test
xchg
pop
sbb
lcall
cmpsl
ret
lds
stos
into
jg
dec
sub
inc
mov
ret
in
cmc
or
mov
outsl
mov
or
xchg
sarb
xor
rcr
bound
mov
push
sub
repnz
mov
adc
aas
adc
rorb
xchg
test
leave
dec
add
in
inc
repnz
lahf
in
add
cmpl
movhps
into
xor
pop
stos
push
and
lea
stos
scas
pop
jo
icebp
imul
outsl
or
push
shlb
adc
mov
imul
cmpsb
push
push
mov
test
in
dec
push
pop
rcrl
and
fwait
dec
movsl
aad
nop
push
xor
hlt
push
xchg
mov
pop
adc
ror
xchg
add
adc
sub
sbb
push
mov
movsl
call
ficoms
xlat
ret
insb
or
dec
es
mov
ja
sbb
cmp
repnz
ret
fcoms
xor
xchg
sbb
imul
lods
xchg
mov
rolb
lret
push
pop
fdivl
lds
fidivrl
or
or
repz
and
xor
lock
push
mov
jl
adc
pop
jo
mov
decb
addr16
dec
mov
pop
ret
xchg
mov
cmp
push
pusha
inc
out
js
and
insb
adc
pop
pop
ja
cmp
aaa
shr
outsl
cmpsb
cwtl
adc
aas
mulb
outsl
into
outsb
test
hlt
rol
jne
fdivrp
rol
es
mov
repz
imul
iret
test
mov
insl
aam
arpl
pushf
scas
mov
xchg
adc
shrl
shl
popf
cmpsl
subl
pusha
pop
sbb
sbb
and
lods
mov
push
or
push
lcall
rorl
add
mov
in
or
cmpsl
in
fnstsw
roll
das
inc
fnsetpm(287
mov
xlat
inc
int
out
les
dec
sub
lods
lret
pop
fldenv
xor
mov
dec
fwait
cli
or
cmp
cmpsl
push
jle
or
sub
push
in
push
iret
addl
insb
xor
jns
lahf
mov
mov
mov
outsb
cmp
fiadds
dec
xor
stos
inc
pop
scas
ja
sbbb
pop
lods
outsl
inc
cmc
adc
cmp
xchg
sub
enter
js
nop
sub
pop
das
sub
or
ror
inc
ret
fiaddl
movl
ds
xor
inc
dec
push
shrb
bound
icebp
stos
shrl
lods
test
mov
add
lret
icebp
pop
iret
fsub
push
aas
sahf
jge
shll
and
call
or
adc
adc
sub
outsl
jp
loopne
aam
adc
test
add
mov
sbb
sahf
and
jae
sahf
and
call
adc
int
xlat
add
ds
jp
lret
addb
imul
push
test
ljmp
or
xchg
leave
sbb
dec
mov
mov
xchg
decl
pop
rcrb
out
dec
inc
int
add
dec
mov
mov
stos
sub
imul
dec
xor
pop
mov
mov
mov
push
xchg
push
repnz
imul
test
inc
call
lahf
fisubrl
stos
lods
push
inc
imul
and
shlb
mov
ffreep
cmpxchg
inc
lcall
or
xchg
les
xor
shll
outsl
mov
js
ret
stc
add
push
mov
mov
pop
mov
gs
cli
jg
xor
cmp
mov
and
std
push
xchg
orl
jecxz
mov
pop
mov
scas
out
in
stc
add
fnstcw
sbb
pop
push
push
xchg
adc
sti
pop
in
and
sub
mov
push
negl
xor
lods
xchg
add
xor
in
stos
out
insb
inc
pusha
jl
mov
inc
lods
or
cmp
sbb
mov
in
mov
mov
popf
mov
adc
das
jmp
push
cmp
lret
es
mov
xchg
pop
hlt
add
pop
sbb
sti
sub
les
ret
pushf
shr
dec
or
int3
push
xchg
cmpsl
dec
xor
out
aam
sub
ret
or
xchg
sbb
pop
cs
pop
add
jp
cwtl
mov
cmc
cwtl
push
ljmp
jle
jmp
test
dec
cmp
dec
sub
repz
add
test
add
insb
jo
mov
cmp
jle
push
mov
addr16
outsl
sahf
sub
xor
xchg
ljmp
xchg
cmpsb
xor
lret
push
jne
and
cltd
mov
clc
fcmovnu
add
fdivrs
inc
sbb
pop
mov
and
aas
push
outsl
pop
inc
stc
aaa
leave
dec
jmp
adc
dec
xchg
ror
lret
outsb
fsubs
icebp
iret
add
ss
out
lret
clc
rcl
lret
jge
push
fsubrl
das
sbb
sub
test
sub
sbb
mov
sub
mov
pop
clc
adc
in
mov
sub
mov
mov
push
insb
mov
push
or
pop
rclb
repz
dec
mov
jns
fs
aam
les
shlb
fstpl
pop
push
imul
or
mov
mov
push
add
mov
inc
xchg
sub
push
inc
cld
hlt
jle
icebp
xor
in
jo
fistpl
dec
lahf
push
jne
loop
xor
testl
pop
cmpsl
cli
cld
je,pn
in
fisttpll
test
adc
iret
icebp
sbbl
rclb
fs
cld
push
pop
dec
fidivs
mov
loopne
adc
inc
jmp
pop
mov
test
cmpsl
int
or
xor
stos
loopne
test
mov
repnz
lock
jecxz
pusha
lods
adc
aad
adc
cmp
test
pop
gs
int3
or
xor
push
add
dec
leave
add
out
ud1
out
jmp
test
jns
adc
mov
sbb
adc
adc
add
push
popa
call
lods
push
sbb
andb
xchg
aas
pop
fs
scas
aas
scas
xchg
pushf
movsl
mov
and
jecxz
lea
dec
in
scas
pop
add
add
xor
pop
jno
jbe
cmpsl
ja
and
sub
pusha
pop
xchg
das
loope
cmc
push
or
and
cli
out
cmp
repnz
jl
dec
out
xchg
jo
inc
dec
jge
xor
cmp
fmuls
fwait
idivl
out
and
cld
notl
mov
je
punpckldq
sub
clc
pop
or
fnstcw
and
das
add
or
rcll
aaa
jae
scas
pop
inc
jle
scas
pop
mov
mov
in
cltd
mov
dec
push
int3
lds
mov
mov
xchg
jnp
mov
add
lods
jb
and
xchg
in
jne
xchg
xor
pusha
pop
push
mov
sti
loopne
test
int3
fstl
rol
push
lock
mov
mov
inc
dec
cmp
cmp
test
jns
insl
mov
xor
sbb
add
es
and
push
mov
fiadds
and
js
inc
dec
and
andb
xchg
lcall
shr
push
stos
mov
aad
shll
jmp
inc
xor
add
out
scas
push
pop
in
sub
inc
ror
jo
or
inc
enter
cmpb
popa
cmp
mov
arpl
das
daa
fs
jge
add
or
sbb
and
jle
xchg
out
pop
mov
inc
test
mov
bound
leave
xchg
ret
or
jge
push
xchg
stos
xchg
push
int
clc
inc
and
es
and
sub
fimull
mov
xor
loop
mov
mov
or
pop
jg
pop
pop
push
or
mov
lcall
or
inc
dec
push
fwait
repz
pushf
nop
popl
sbb
mov
test
inc
xchg
std
je
cs
outsb
sbb
cmp
jmp
out
dec
gs
fs
or
inc
mov
shlb
js
out
bound
jnp
push
sub
mov
cmp
ret
fcomp
jmp
ja
orb
cmp
aaa
sub
rcll
rorl
push
cmp
cmp
andb
fnstcw
mov
dec
jb
decl
mov
popf
mov
mov
xlat
movsb
push
pop
je
push
cmp
pop
popf
ljmp
inc
out
jb
cmp
mov
xchg
pop
repnz
cltd
popf
jne
out
bound
nop
test
fwait
stos
sbb
into
lods
mov
cld
rcll
push
mov
dec
mov
or
fidivs
hlt
test
fdivl
fwait
jmp
cltd
fcompl
hlt
shl
inc
ret
xor
xchg
loop
jo
les
pop
mov
dec
icebp
mov
es
pop
xchg
cmpsl
shrb
je
sarl
in
ds
fwait
sub
pop
mov
dec
push
inc
dec
fs
outsb
fisubl
jb
add
pop
mov
cmp
add
test
movsl
outsb
pop
fucom
xor
std
inc
std
and
add
lds
cmp
ret
mov
addr16
inc
ret
mov
add
mov
mov
xor
dec
pop
sub
mov
push
ret
test
ret
mov
push
xchg
mov
inc
push
pop
movsb
repnz
dec
cli
jo
movsl
cmp
ds
fildll
lret
or
aam
xchg
jmp
mov
outsb
mov
jnp
pop
arpl
dec
aaa
dec
xor
mov
pop
fmuls
inc
dec
int
fs
xchg
pop
paddusb
lock
int3
and
mov
jnp
cs
xchg
mov
pop
xchg
cmpsl
mov
push
mov
sub
ror
xchg
jbe
push
jne
dec
pop
adcl
dec
xor
pop
sub
outsb
cmp
and
mov
insl
push
mov
or
pop
arpl
popa
orl
pop
sbb
inc
pop
mov
push
test
int3
jmp
test
xor
mov
sub
movsl
add
cmp
testb
hlt
jno
lret
mov
xchg
in
add
inc
cli
outsl
dec
in
pop
fs
pop
adcl
lock
mov
mov
iret
sbb
sti
sbb
out
mov
pushf
mov
or
div
mov
inc
roll
xchg
jns
mov
mov
shl
negl
mov
inc
ret
sbb
add
in
cld
or
inc
test
cmp
decb
jmp
rolb
fisubl
pop
insb
sbb
imul
mov
ret
jl
loop
pop
data16
out
pop
rcrl
stos
incl
gs
mov
into
loop
adc
jmp
pop
in
fcomps
aaa
lahf
or
lret
repz
jmp
sbb
adc
cli
fidivrs
xchg
sub
cmp
popa
pop
jle
mov
mov
ljmp
fisubrs
out
aam
dec
mov
xchg
jb
xor
mov
stc
out
repnz
popa
jnp,pn
add
jns
sbb
cwtl
rorl
vpunpckhdq
dec
push
cmpsl
dec
icebp
push
mov
into
lret
psllq
test
push
dec
imul
sbb
popa
ss
cmp
sahf
cmpsl
lea
inc
push
add
mov
test
xchg
fucomip
pop
fs
xchg
scas
movsb
insb
sub
sbb
sarb
or
push
jns
jns
test
add
cmp
hlt
in
sub
std
and
mov
push
fidivs
ficompl
jne
push
rcll
lods
mov
mov
pop
pop
xchg
dec
aad
xchg
push
mov
mov
mov
fnstcw
inc
mov
pop
adc
sti
jns
insl
mov
mov
ljmp
adc
pop
mov
add
pushf
cli
jecxz
mov
add
incl
setge
out
out
fnstcw
pop
pusha
mov
outsb
jne
rorl
dec
mov
xchg
jle
loop
jno
sbb
and
inc
loopne
fimuls
js
rol
or
or
inc
xchg
push
mov
dec
adc
cli
push
mov
fninit
xchg
cmp
cmp
into
mov
pusha
jecxz
ja
cmpsb
jge
sbbb
sbb
std
dec
push
fsubs
mov
testl
mov
in
incl
daa
daa
imul
mov
int
and
std
call
fnsave
rorb
fcoml
jge
scas
lock
lea
jne
and
and
mov
ficomps
andl
decb
push
lods
ret
in
pop
repnz
out
lret
leave
outsl
xchg
or
or
mov
push
aaa
cmpsb
jmp
cs
sub
push
fwait
incl
outsl
sub
pop
in
mov
dec
cmp
popa
ds
xchg
les
aad
sbbl
cmpsb
shl
fs
inc
rcrb
adc
or
test
xchg
lahf
push
pop
sbb
imul
sub
roll
divb
sub
fisubrl
aam
inc
je
outsl
popf
test
lods
mov
movsb
aad
xor
mov
mov
push
mov
in
cmp
mov
push
push
aam
push
or
mov
rolb
or
jo
ljmp
add
inc
push
mov
mov
inc
dec
add
lods
ja
std
sub
jae
enter
pop
jb
stos
mov
mov
out
mov
mov
imulb
setb
shlb
pop
and
add
xchg
sbb
pop
fstp
into
jg
dec
xchg
lret
icebp
test
jl
jo
push
pop
adc
insl
cmpsb
das
int
and
test
mov
xor
xor
add
mov
clc
sub
xchg
inc
ja
flds
int3
jmp
in
imul
mov
negl
jge
and
mov
cs
out
sub
jne,pt
fbld
mov
add
jp
xor
popa
loope
add
call
fstps
daa
cmc
push
in
mov
ret
mov
aam
aam
dec
mov
pop
dec
sahf
mov
lods
or
jbe
add
pop
mov
pop
mov
jns
enter
sbb
fs
leave
mov
mov
dec
mov
push
fstpt
les
test
pushl
pushf
inc
fwait
ss
in
movsl
push
sahf
pop
or
sti
xor
fstpt
jmp
mov
mov
hlt
xchg
fwait
call
cld
mov
andb
jae
or
fiadds
pop
call
cltd
fadds
loopne
push
inc
lods
pop
test
and
les
insl
mov
push
add
stos
mov
rcrl
enter
cmc
jo
mov
das
push
rclb
pop
cmpsb
push
popa
push
out
inc
bound
int
inc
pop
and
sti
xor
data16
xchg
jp
sbbl
sub
mov
lret
mov
and
push
sbb
shr
mov
push
sbb
pop
fistpll
into
enter
std
sub
mov
sub
sbb
in
pop
mov
into
subl
push
stos
imul
psrad
mov
shlb
cmp
mov
les
sti
push
adc
dec
decl
push
xchg
nop
int3
jnp
movsb
sbb
loopnew
mov
or
push
imul
icebp
sar
into
testl
jae
das
sahf
mov
in
inc
ljmp
data16
into
int
lock
fisubrl
std
jb
js
push
pop
jmp
push
ret
into
and
mov
mov
add
adc
push
insb
and
cmp
jl
jne
mov
rcrb
test
bound
pop
popf
mov
loop
pop
outsl
out
adc
lock
std
jge
shlb
pop
mov
scas
jle
sbb
mov
jb
push
xor
xor
dec
mulb
std
pop
xor
int3
and
xchg
mov
or
clc
mov
adc
fwait
sub
lods
mov
stos
inc
fsubl
mov
mov
sahf
jg
and
push
mov
sub
cmp
in
fmull
mov
les
inc
std
mov
mov
test
pop
icebp
cmpb
cwtl
aam
filds
data16
rcr
fucomp
arpl
mov
inc
mov
sbbl
adc
out
loopne
adc
mov
add
pop
mov
sub
cmp
insl
mov
mov
mov
iret
dec
push
sahf
out
push
lock
mov
cmp
cmpsl
scas
repnz
in
mov
sahf
push
push
and
mov
pop
scas
les
lea
xchg
xlat
fmulp
cmp
clc
pop
rorl
sti
sub
popf
xchg
adc
jns
std
mov
dec
pop
lcall
jno
sub
in
or
sbb
fsubrs
dec
push
fwait
imul
push
add
lret
mov
imul
fwait
leave
scas
mov
into
sbb
xor
ret
push
lea
or
pop
mov
fwait
addr16
pushf
inc
popf
push
sub
mov
ret
repz
mov
push
jge
xchg
clc
xor
mov
mov
lret
add
mov
rcll
fwait
icebp
xor
subb
xor
pop
daa
mov
mov
sub
sbb
addr16
push
push
orl
xchg
ret
aad
fsubl
mov
mov
pop
adc
mov
divb
mov
xchg
test
push
and
mov
jmp
aam
cmp
push
ret
and
sahf
loope
mov
xor
dec
neg
cmpsl
pop
jecxz
lods
pop
stos
inc
or
dec
jp
sbbb
ror
sbb
cmp
lret
int
and
ja
xchg
lret
in
jmp
adc
xchg
push
adc
mov
inc
cmpsl
adc
push
mov
xchg
aas
rorb
incb
pop
or
mov
js
out
lahf
imul
ss
add
or
adc
jo
mov
mov
out
rcr
adc
incb
cwtl
into
xor
ret
nop
sub
cmp
clc
sbb
fldt
insb
inc
inc
shrb
scas
loope
dec
iret
adc
lret
adc
inc
cmpsb
test
scas
loope
xchg
shlb
sub
mov
setnp
cmp
test
dec
inc
xchg
in
imul
sub
dec
insl
out
adc
test
pop
jns
xchg
sub
aad
mov
mov
lea
je
cmp
sbb
push
cltd
out
popa
sbb
jno
stos
mov
push
dec
lea
ret
outsb
mov
push
arpl
and
movsb
mov
fisubl
nop
and
or
cld
push
js
test
lcall
sub
mov
cmp
test
subb
pop
adc
scas
mov
mov
pop
push
es
cmpsb
sti
xchg
insl
cmp
shr
adc
dec
shrb
outsl
sub
xchg
xor
sahf
popf
mov
add
rol
sub
dec
jmp
cld
in
bswap
icebp
shl
stos
insl
addr16
stc
lds
mov
xor
dec
pop
mov
sub
pop
loopne
mov
int
std
inc
sub
nop
sub
xchg
int
inc
lea
cmp
and
jnp
data16
rolb
fwait
fwait
mov
xor
mov
shll
call
dec
mov
sub
flds
ss
jb
popf
xor
pusha
mov
mov
out
mov
je
arpl
sbb
push
cmp
hlt
popa
popa
out
dec
mov
jo
pop
mov
stos
shll
xchg
add
popf
xchg
mov
dec
pushf
mov
imul
push
je
xchg
jecxz
xor
xchg
aam
ret
xchg
mov
fisubl
stc
push
loopne
addr16
inc
je
leave
lret
push
repnz
data16
pop
ret
sbbb
adc
add
cmp
ret
jl
in
xlat
loopne
jbe
test
cmp
nop
addr16
jnp
in
jecxz
decb
add
stos
insl
dec
fstps
stos
ds
lret
addr16
jno
das
and
xchg
mov
pop
cli
outsl
in
push
stos
test
xchg
xor
lock
imul
adc
sbb
and
mov
je
push
pop
adc
dec
xchg
or
lock
fmull
pop
push
test
cmpsl
pusha
cltd
aad
push
xchg
clc
xchg
mov
mov
out
in
movsb
push
xor
bound
inc
or
orl
lret
adc
xchg
and
stos
cmp
repnz
xchg
and
push
mov
test
lock
dec
pop
in
lds
inc
loopne
lahf
push
std
imul
pop
ljmp
push
imul
jb
leave
cmp
pop
divb
or
add
pop
sahf
loope
sbb
xor
xchg
cmpsl
pop
mov
rcl
stos
call
lret
imul
fidivrs
repz
or
sbb
mov
xor
in
adc
dec
dec
rorl
mulb
mov
push
addr16
repnz
imul
jmp
add
jnp
arpl
xchg
inc
cli
andl
rsqrtps
rol
pop
mov
rorb
fldenv
sbb
das
cmpsl
pop
stos
in
mov
lock
sbb
loop
inc
dec
aas
call
cmp
push
cmpsb
mov
cld
push
and
cmc
lret
orb
mov
xor
dec
js
call
jae
test
cmp
cmp
pop
into
mov
jbe
pushf
mov
loope
arpl
decb
insl
sbb
ret
inc
sub
ja
loope
adc
cmp
pop
imul
pop
in
test
mov
nop
push
sbb
jbe
pop
mov
and
mov
xor
out
cli
jno
adc
cmp
daa
das
jbe
ljmp
xor
bound
test
leave
popa
loopne
sti
sti
jmp
or
shrb
insb
addr16
cmpsb
aad
inc
mov
sub
fwait
mov
aas
mov
xor
pop
mov
push
and
aas
fcmove
pop
loope
fcmovnbe
or
test
mov
inc
hlt
pop
jle
out
rep
stos
gs
sbb
and
mov
aad
popf
ficompl
out
inc
incl
lret
push
sbbb
jl
fnstcw
xchg
ljmp
movsl
outsb
xchg
inc
xchg
fmuls
sar
cmc
enter
sub
mov
inc
cmpsb
lcall
outsl
aam
shll
addb
testl
popf
xchg
imul
loope
jl
imul
aas
das
adc
push
cs
loop
lret
pop
roll
pop
mov
sbb
stos
shrb
test
inc
lea
jb
jns
mov
and
addl
cli
aas
imulb
insl
fs
cltd
popf
jno
inc
dec
stos
dec
je
push
sahf
popa
cmpsl
icebp
jl
packsswb
lds
jne
out
fwait
js
vmwrite
in
push
leave
cmpb
jo
rorl
lds
or
mov
pop
stos
and
sub
sbb
jecxz
mov
sbb
mov
push
or
jne
imul
sub
aas
cmp
jle
test
pop
pop
sbb
dec
sub
mov
pop
das
jne
add
clc
pusha
mov
dec
xor
dec
in
rorb
pushf
movsb
dec
xor
push
dec
test
adc
repz
inc
das
push
xor
fmull
scas
xchg
filds
sbb
mov
stc
leave
mov
stc
stos
cmp
push
adc
es
imul
out
arpl
jmp
mov
mov
pop
jg
xchg
sbb
in
push
sti
and
test
dec
repz
cwtl
mov
pop
mov
mov
adc
sahf
scas
push
pop
mov
lcall
dec
test
gs
jae
cwtl
pop
push
test
mov
repz
lock
cwtl
shlb
stos
test
cmp
incb
outsb
lret
inc
adc
outsl
andb
sub
mov
dec
adcl
adc
jmp
add
inc
xchg
ror
xorl
ljmp
mov
orb
loop
outsb
adc
dec
test
jns
aam
adc
ret
pop
push
pop
in
cwtl
adc
fildl
les
insb
lea
fiadds
add
or
cmc
ljmp
dec
adc
sub
jmp
sahf
mov
imul
mov
pop
adc
mov
int
push
sub
sbb
cmp
adc
jne
xchg
scas
call
pop
sub
vpshaw
out
clc
lret
out
xchg
mov
lods
push
pushf
adc
cli
aam
xchg
sahf
lods
mov
add
adc
dec
sub
dec
sti
orl
cltd
xchg
cmp
pop
cmc
out
jbe
mov
or
jo
lahf
xor
mov
and
add
pop
clc
jge
and
mov
mov
jae
xchg
xchg
push
mov
fdivl
insb
stos
ss
icebp
sbb
fnstsw
mov
mov
aas
mov
test
lods
sub
jmp
mov
pop
fprem1
adc
adc
loope
out
faddl
mov
stc
xchg
dec
fwait
adc
push
jnp
rcr
lret
ret
fstps
gs
push
lcall
icebp
outsb
xlat
fldz
adc
push
dec
cmp
sbb
repz
dec
dec
fstpt
jns
loopne
mov
adc
cmpsb
lods
rolb
cltd
sbb
dec
ret
mov
cs
cmp
gs
pop
fildll
adc
adc
pop
add
mov
jno
jno
addr16
mov
jmp
aad
mov
gs
ljmp
daa
in
xchg
hlt
push
loop
lea
push
ja
inc
xor
cmc
lock
orl
and
pop
jecxz
outsb
dec
test
into
sbb
fcomps
popf
mov
sub
lret
lds
cmp
es
cmp
data16
mov
xor
xchg
dec
movsb
pop
jg
lods
sti
loope
jb
cmp
xlat
pop
ja
jnp
xor
add
lock
add
fs
mov
dec
add
cmp
data16
jae
mov
in
mov
cmp
fcoml
lock
ja
lods
cmc
out
or
sbb
or
pop
inc
pop
stos
movsb
outsl
stc
mov
loop
insb
sarl
inc
xchg
shrb
xor
lods
jge
int
sub
aad
xorb
sub
sub
outsl
cli
loop
inc
sub
sbb
xchg
incb
push
imul
sbb
enter
fldenv
bound
rcll
out
sub
das
push
aas
jg
js
jno
inc
pop
cmp
lret
lret
loopne
pop
lods
cltd
ret
pop
ja
fwait
pop
mov
xchg
jbe
aam
mov
adc
es
movsl
test
jb
lcall
sbb
out
es
sarb
fcompl
popf
inc
into
cmp
mov
and
std
repnz
std
lret
dec
cmp
fisttpll
mov
and
xchg
in
sbb
test
aam
std
pop
mov
aam
mov
mov
jae
xor
jno
aaa
enter
cmp
jnp
pop
aaa
adc
push
stc
xor
call
xor
icebp
lret
fimull
int3
stos
cli
dec
nop
adc
js
xchg
fimull
cwtl
and
es
insl
mov
jmp
test
mov
mov
out
jle
testl
orb
mov
cmp
lods
mov
loop
call
or
lahf
bound
jge
es
movsl
dec
xor
idivl
fsubrl
in
outsl
jae
imul
ds
dec
popf
int3
stc
sub
pop
add
lret
adc
sub
dec
insb
lea
out
imul
aad
and
add
xor
wrmsr
and
daa
fs
bound
das
pop
sbb
jo
les
and
and
jne
xor
adc
pop
pop
dec
in
jo
outsl
dec
inc
mov
mov
cwtl
cmpsb
rolb
push
test
es
push
mov
ret
imul
mov
fstpl
jne
int3
mov
das
ret
clc
inc
popl
iret
stos
mov
or
repnz
ja
loopne
mov
aad
jmp
mov
inc
in
xchg
add
loope
xor
outsb
pop
or
sar
cmp
test
jbe
push
test
stos
jne
roll
std
in
jge
lds
popa
cmp
loope
insl
outsb
pop
push
xor
stos
js
jg
cmp
mov
test
adc
inc
aas
int3
enter
jl
mov
fldl
decl
aam
fld
xchg
loop
clc
and
pop
mov
add
fdivl
mov
shll
and
sbb
fildll
cs
mov
inc
out
inc
jae
pop
fsubrs
pop
pop
stos
fldcw
mov
mov
iret
jmp
popf
jecxz
daa
outsb
mov
repz
jmp
mov
push
and
lods
and
or
push
loopne
fstp
inc
mov
xchg
jmp
fadds
imul
mov
aad
cwtl
sahf
mov
dec
out
xchg
mov
xchg
scas
test
addr16
insb
repz
add
mov
and
xadd
out
mov
std
jno
pop
sbb
call
cli
and
push
adc
xor
cmpsb
push
fidivl
adc
js
rolb
daa
sbb
loopne
push
inc
inc
lock
push
xchg
cwtl
lcall
sub
adc
shlb
push
int3
inc
fstpl
in
test
lods
fldl
jo
notb
mov
mov
add
addr16
sub
aas
insb
fists
add
sub
xchg
mov
and
loope
dec
pop
sbbb
pop
push
cmp
mov
fcompl
sub
repz
out
pop
inc
and
and
pop
fdivrl
cmp
test
and
inc
push
adc
lret
jae
ret
inc
and
push
dec
inc
sbb
dec
xor
mov
pop
jge
xlat
sbb
push
or
pop
pop
jbe
jb
mov
jg
dec
dec
bt
cmp
lods
je
lcall
lret
and
ja
push
sub
inc
sub
cmp
inc
and
dec
repz
mov
pop
mov
cmp
sbb
cmp
fnsave
loop
or
subb
loope
xchg
mov
inc
testb
scas
add
inc
xchg
cmc
lret
rorl
sbb
mov
in
xchg
mov
out
neg
jb
scas
sub
ret
out
mov
xchg
and
adc
mov
xlat
jbe
das
and
movsl
push
movsb
xchg
and
or
imul
mov
addb
sub
inc
ss
pop
mov
pop
mov
cld
push
enter
dec
in
mov
push
in
mov
imul
in
rclb
les
adc
sub
dec
or
je
or
daa
push
movsl
daa
mov
cvtps2pi
jo
negl
inc
fld
xor
xchg
lret
push
sbb
outsb
mov
daa
push
call
add
rcrl
add
rorl
lahf
test
ret
add
pop
push
dec
push
pop
and
sub
pop
int
push
scas
mov
xchg
or
cmpsl
cmc
mov
mov
inc
sub
mov
aaa
mov
outsb
add
pop
mov
add
fs
int3
inc
popf
add
cltd
jmp
or
cmp
inc
pop
add
dec
and
lea
dec
shrl
push
sbb
rclb
hlt
movsb
xor
xchg
jbe
movsb
aam
rcll
sub
rclb
lods
xchg
popf
cmp
push
iret
dec
lea
push
mov
nop
js
or
repz
jmp
sub
cli
aam
ret
and
data16
ret
mov
cwtl
decl
push
or
jo
fcmovnu
mov
sub
dec
and
cmpsb
mov
or
imul
inc
push
and
in
inc
xchg
cmpsb
daa
xlat
jno
cmp
movsl
inc
lds
or
ficomps
sub
mov
test
xor
sub
add
dec
jo
cmp
push
addb
ss
pop
ret
dec
arpl
sbb
cmpl
sbb
out
jg
dec
shll
call
sub
sub
mov
adc
decl
idivl
xor
and
cmpsl
xor
iret
mov
xchg
bound
sub
xor
loope
pop
and
cmp
cmp
inc
or
pop
mov
adc
mov
dec
sub
pop
movsb
and
cmc
fdivl
aam
mov
add
dec
xor
loope
mov
mov
jns
cmp
xor
ret
mov
mov
test
es
int3
push
iret
xor
out
adc
add
xor
jp
aaa
or
push
push
jne
mov
lcall
xor
jl
push
ljmp
xchg
shr
pop
dec
dec
lcall
ds
pop
cmp
inc
jb
dec
pop
inc
stos
inc
gs
add
mov
fstps
mov
daa
ja
or
shll
out
popf
mov
sub
ret
lcall
pop
das
pop
push
imul
insb
pushf
mov
inc
repnz
in
sub
shlb
add
inc
cmp
cmp
test
push
sbb
test
jb
insb
sbb
in
aam
movsb
pushw
iret
xchg
xor
mov
xor
pop
xor
cmp
add
cmpb
jl
sub
dec
fstpt
in
mov
sub
scas
add
fs
cmp
into
cmp
dec
das
cmp
frstor
push
xor
jnp
push
int
std
nop
out
or
dec
xchg
inc
addb
icebp
daa
ds
nop
fstpt
sahf
subb
add
js
adc
xlat
push
mov
rcll
ret
pop
fistpll
in
call
dec
xor
sahf
mov
mov
jge
loope
call
lea
push
mov
jnp
fisubrl
sbb
fisubs
mov
cmp
and
ret
ret
insl
in
sub
jbe
jge
ja
jo
filds
in
js
shl
xchg
push
cli
enter
xchg
lcall
loopne
mov
add
or
jne
jnp
cmpsb
jge
in
pop
aad
sarb
in
in
xchg
aam
fstpt
and
or
test
rcr
insl
fistl
sbb
and
xor
idivb
jno
bound
xchg
and
cmp
xor
sbb
mov
pop
in
loop
add
xchg
test
mov
packssdw
es
push
cmp
adc
cmp
in
xchg
in
or
filds
push
and
inc
iret
lods
outsb
scas
out
mov
pop
fnstcw
dec
fnstenv
dec
ljmp
inc
mov
clc
jge
xor
sbb
inc
inc
jbe,pt
mov
pop
cltd
inc
aam
xchg
leave
pop
mov
lret
sub
cs
sarl
fwait
push
loope
shll
out
mov
jl
lcall
xchg
mov
lcall
pusha
add
mov
scas
nop
ds
fadd
fidivrs
addr16
orb
outsl
xor
lret
jge
and
xchg
adcl
rcll
stc
mov
cwtl
sbb
push
cmp
aam
xor
mov
xchg
pop
ds
adcb
cli
push
push
inc
notb
adc
lods
jl
mov
fidivrl
dec
fidivrs
scas
jb
mov
testl
test
je
xchg
jecxz
dec
out
in
fisubrs
lahf
xor
test
test
xor
cltd
cmc
push
rcpps
mov
out
loope
or
rorb
in
lahf
or
test
inc
hlt
adc
je
hlt
mov
xchg
mov
mov
popl
xorl
xchg
dec
out
and
pop
fs
int
xchg
les
std
mov
mov
je
inc
adc
lret
jp
push
bndstx
mov
lea
jecxz
sub
push
or
arpl
mov
adc
test
mov
rol
cmp
sbb
mov
fwait
add
aam
lret
sub
lahf
mov
or
nop
jmp
das
in
mov
push
js
xchg
int
mov
adc
mov
sar
jno
xchg
enter
dec
add
jp
and
jmp
mov
adc
push
outsb
xor
xchg
hlt
xor
cld
xchg
stos
dec
jnp
in
jle
mov
popf
outsl
push
scas
shrl
cmpsl
or
sub
push
aas
mov
dec
mov
cld
jb
popa
sbb
cmp
and
push
loop
mov
stos
mov
pop
in
xor
mov
add
fldl
idiv
add
mov
jns
sub
int
mov
mov
shrb
lds
movsb
rol
sbb
add
and
test
notb
loope
dec
xor
fidivrl
pop
daa
sbb
movsb
pop
add
loop
and
push
or
mov
cmp
outsl
stos
pop
pop
in
cmp
sbb
dec
je
fucomp
or
test
mov
xor
cmp
in
movsl
inc
lods
pop
mov
iret
sbb
aad
icebp
dec
imul
gs
daa
xlat
jbe
pop
sbb
cmp
loope
aam
outsb
popa
mov
lds
gs
and
fsubr
repnz
out
sbb
or
sub
xor
and
mov
jle
cmpsb
lahf
stc
stc
pop
mov
mov
pop
loope
cmp
or
iret
repnz
loope
sbb
fistpl
daa
cmp
mov
mov
cli
leave
sbbb
pop
push
and
push
imul
jae
mov
mov
mov
mov
cmp
adc
or
fnclex
icebp
in
mov
int3
dec
into
int
xchg
mov
sbb
mov
dec
and
fsts
fwait
js
inc
pop
std
mov
fisttpll
sbb
sub
inc
or
addr16
jno
and
or
jg
mov
push
dec
xchg
insl
sbb
pop
scas
mov
pop
xchg
cli
pop
sbb
ret
sti
pop
dec
or
jno
mov
jl
mov
mov
imul
inc
shlb
sbb
jle
repz
fimull
adc
lcall
notl
jg
mov
mov
mov
pusha
insb
or
fcoml
test
data16
aas
pmulhw
xor
es
addr16
mov
jns
adc
cmc
dec
cmp
and
pop
movsb
insb
pushf
mov
stos
inc
sbb
in
or
jo
pop
std
add
bound
and
pop
add
mov
mov
mov
js
cwtl
lahf
pushf
pop
popa
mov
insb
bound
aas
inc
data16
int
mov
inc
lds
pop
mov
nop
mov
jmp
fmull
loop
call
lret
jmp
and
or
sbb
test
jbe
inc
inc
pop
jecxz
imul
lret
loopne
dec
fiadds
sbb
std
ds
in
lea
std
jmp
jae
lods
movsb
mov
sub
fidivrl
cs
dec
push
cmp
lds
adc
inc
adc
fbstp
push
xor
mov
jp
out
aaa
cmp
aaa
push
mov
inc
xchg
cmp
sub
insl
daa
xlat
sub
xchg
sbb
jo
jmp
push
add
jg
adc
jge
inc
jle
pop
loop
stc
nop
aad
mov
and
sub
xor
jp
clc
jmp
fs
dec
das
xor
mov
daa
mov
pop
add
stc
and
and
icebp
jnp
hlt
adc
shlb
mov
xor
xchg
and
call
cs
fisubrs
cmpsb
push
jmp
mov
sbb
pop
dec
pop
mov
mov
test
xor
jne
insl
insb
nop
xchg
lret
or
dec
inc
adc
jp
js
sarb
into
xchg
push
lret
xchg
outsl
add
lea
jnp
subl
cwtl
fnsave
push
in
sub
notl
xchg
loop
add
mov
or
repz
xchg
in
fcmovb
jecxz
scas
mov
mov
pop
ljmp
jne
call
pop
and
xchg
inc
mov
hlt
test
mov
fst
les
sbb
stos
into
cmp
mov
sub
jl
lods
adc
das
sbb
dec
mov
loope
in
sarb
push
aaa
xchg
dec
lret
mov
fnstsw
bound
out
xchg
jge
test
dec
xchg
pop
lret
cld
cmp
inc
pop
mov
mov
movsl
rol
push
pop
shr
mov
subl
lret
out
push
iret
lret
push
sarb
sti
push
cwtl
push
seto
jbe
pushf
mov
cmc
dec
inc
andb
jno
stc
cmp
test
mov
mov
push
lods
cmp
adc
stc
push
popa
test
aaa
hlt
push
ja
and
jg
fwait
pop
xchg
or
mov
sub
das
rcrl
dec
jp
sub
fistps
aam
jnp
xor
sbb
adc
inc
adc
aad
sti
fbstp
xor
or
dec
imul
cmp
adc
push
pushf
add
sub
out
test
mov
fs
fisttpll
jg
scas
sbb
lcall
ret
repnz
xor
cmp
in
sbb
aam
loopne
mov
sbb
sbb
bound
jmp
stos
cmp
outsb
fdivs
cmc
fdiv
dec
xchg
dec
call
hlt
jno
aam
push
inc
stc
aad
sbb
in
sahf
push
sbb
lods
test
iret
cmp
icebp
jp
adc
sub
divl
sub
cmovb
jmp
mov
inc
cmp
push
xor
sub
sbb
dec
dec
push
shlb
aam
sub
push
or
cmc
leave
movl
shll
mov
push
mov
add
pop
sbbl
scas
data16
pop
dec
and
repz
test
adc
add
movsl
sbb
add
inc
and
pop
dec
jbe
in
test
out
lret
das
addr16
dec
and
cmc
repnz
divb
imul
sbb
ret
repz
repz
jmp
insl
push
mov
dec
xchg
fstpl
mov
repz
jp
pop
pop
inc
out
mov
aam
xor
mov
fcmovu
mov
push
les
push
mov
cmpsl
mov
xchg
in
sbb
lds
add
push
jle
imul
sub
ljmp
and
pop
mov
inc
pop
jns
cmc
lret
andl
mov
adcl
lds
or
dec
push
inc
lods
xchg
inc
cvtps2pi
mov
aam
enter
or
mov
aad
fdivrs
clc
test
jb
imul
cmpl
mov
pop
loop
outsb
sbbb
outsb
inc
push
ja
or
cmp
call
jnp
fisubl
es
repnz
sbb
popf
arpl
or
push
xor
cli
mov
mov
sub
push
push
push
cmp
test
xchg
mov
jae
notl
movsl
in
jae
dec
or
push
mov
imul
pop
into
push
mov
cmp
paddsw
mov
sub
mov
mov
add
xchg
fs
mov
push
stos
into
sbb
push
popa
jne
or
and
repz
into
rorl
mov
ss
outsl
inc
mov
inc
mov
cmpsl
jmp
fiaddl
xor
add
push
test
jle
ds
gs
add
cmp
sub
pusha
push
sbb
and
and
cltd
add
mov
mov
or
and
mov
rol
aaa
lock
scas
mov
sbb
xorb
mov
frstor
dec
insl
lret
imul
and
pop
sbb
xchg
mov
ss
and
addr16
out
jg
push
cmp
movl
and
inc
cmp
out
add
in
movsb
imul
xchg
add
mov
lods
xchg
jne
cmp
and
lds
add
fadd
or
mov
clc
jecxz
and
inc
cmpsl
pop
sub
sbb
xchg
xchg
xchg
add
inc
push
call
jg
pusha
push
jp
mov
icebp
adc
repz
sbb
testb
inc
cmp
cmp
pop
insb
adc
fcoml
push
shrl
add
push
das
jno
lahf
jmp
mov
inc
sti
in
cmp
inc
pop
imul
add
mov
and
inc
data16
fs
mov
jecxz
dec
inc
cmp
frstor
outsb
or
mov
pop
ds
dec
cmpsb
jbe
out
stos
hlt
push
push
in
mov
inc
jl
inc
mov
cwtl
out
arpl
or
mov
arpl
mov
shl
scas
sbb
aas
fwait
xchg
pusha
cs
pop
sarb
cmp
adc
lret
ds
dec
jns
test
xchg
cs
shll
push
imul
or
std
pop
push
iret
pop
sub
gs
imul
fwait
adc
add
nop
pop
es
or
pushf
mov
in
cmp
pop
je
imull
dec
xchg
hlt
adc
xchg
stos
or
aam
jle
or
inc
ja
popl
jge
jecxz
sar
mov
push
mov
aas
add
sbb
push
popf
cwtl
sbb
aam
or
dec
jg
adc
cmp
loopne
xor
xor
xchg
pop
setne
adc
mov
ds
mov
incb
adc
dec
inc
cmp
xchg
in
cmp
out
fildl
fiaddl
inc
sub
mov
or
fsts
lret
daa
rolb
test
push
fadd
pop
cmc
ss
les
jp
cwtl
lcall
pop
test
ja
in
jne
cmc
push
outsl
insb
dec
outsb
push
data16
scas
popa
cmpsb
jno
loop
lahf
and
mov
cmp
xchg
xor
add
or
lds
cmpsb
xor
scas
in
outsl
hlt
test
loop
ja
cwtl
cmp
loop
incb
xchg
inc
xchg
sbb
sub
faddl
pop
int
ud0
mov
pop
jbe
cmp
xchg
adc
push
clc
mov
push
and
inc
pop
int3
lds
adc
lret
lock
push
fmull
fwait
sbb
adc
sti
mov
outsb
cmpsl
movsb
sbb
imul
push
loopne
in
add
dec
aam
scas
cld
mov
repnz
out
imul
xchg
lods
pop
push
pop
scas
or
scas
data16
push
mov
test
push
mov
mov
push
mov
cmc
pop
subl
pop
rorl
loope
sahf
sbb
lret
ljmp
out
and
jg
jmp
and
loopne
adc
fs
mov
lahf
hlt
and
insl
cli
add
inc
cs
lret
roll
lods
into
outsl
sti
imul
pop
ds
call
ret
loop
xor
jns
xor
out
adc
mov
jmp
rolb
cld
mov
icebp
push
clc
data16
in
stc
popf
lds
mov
out
jnp
mov
bound
dec
hlt
xchg
stc
pop
lock
dec
iret
dec
mov
and
insl
or
mov
bound
sbb
mov
inc
and
inc
fnstsw
dec
jo
lret
inc
les
scas
and
sbb
dec
dec
lahf
dec
jo
jbe
fcmove
addr16
cld
dec
loopne
repnz
gs
mov
scas
addr16
test
ficoml
rolb
sahf
inc
and
and
arpl
lahf
mov
pusha
mov
insl
xor
inc
movsb
inc
mov
mov
fs
ds
andl
sub
adc
jmp
fstl
lds
adc
mov
adc
fs
andb
test
cwtl
jo
test
outsb
push
adc
push
inc
inc
and
testl
push
imul
pop
clc
inc
add
or
mov
and
ljmp
xor
sub
xchg
mov
lcall
addr16
cli
jge
or
insl
lret
faddl
push
cmp
shrb
inc
cltd
push
fadd
or
inc
push
mov
divb
add
dec
clc
mov
insl
nop
or
jbe
lret
sbb
mov
cmp
es
and
sbb
cmc
loopne
push
bound
daa
sbb
repz
dec
mov
push
gs
push
jo
push
jae
and
mov
or
pop
call
cmp
or
adc
iret
aas
dec
push
sahf
push
dec
shlb
mov
bound
movsb
dec
inc
addb
insb
or
cmc
and
push
loope
inc
mov
lea
fistpl
mov
test
cmp
add
in
mov
or
movsb
icebp
pushf
sbb
adc
add
popf
movsl
inc
push
sub
sub
jno
xchg
xor
mov
ljmp
add
ret
sub
inc
jo
loopne
cs
pop
mov
or
scas
sub
push
mov
imul
movsb
add
xor
pusha
test
jns
push
fdivs
or
pop
mov
rclb
out
cmpb
cmp
jle
jecxz
outsb
mov
jmp
int3
pusha
mov
cmpsb
orl
das
fs
js
push
xchg
cmpsb
faddp
nop
es
sub
fwait
std
adc
adc
cmpsl
fmull
adc
push
adc
loope
add
lods
jle
adc
dec
pop
add
xchg
ss
inc
movsb
mov
aad
loope
sub
pop
lret
push
mov
cli
inc
pop
js
int3
mov
dec
xchg
ret
mov
mov
mov
push
int3
lcall
push
inc
cmpsl
ror
ds
in
xchg
test
sti
aam
lcall
inc
mov
inc
adc
hlt
mov
xchg
lcall
test
mov
xchg
iret
xor
inc
rcr
mov
fwait
imul
pop
test
rep
dec
addl
inc
pop
xor
inc
adc
testl
jo
ret
push
inc
push
push
clc
jp
sbbl
mov
pushf
out
popa
inc
mov
jae
adc
inc
sub
pop
outsb
sbb
mov
insl
jmp
addr16
fidivs
xchg
loop
jbe
clc
sarb
add
pop
shlb
jmp
cmp
xor
std
xchg
out
into
jo
insl
mov
sti
or
stos
xor
lcall
lret
mov
adc
sub
jns
mov
push
in
aaa
cld
in
push
xorb
fmulp
rol
add
or
xchg
or
push
jo
mov
push
inc
mov
cltd
addl
xlat
jno
adc
popa
xchg
mov
cmc
inc
sbb
pusha
xlat
jae
rol
es
imul
stos
movsb
pop
pop
pop
mov
lea
mov
dec
mov
and
out
jg
pop
mov
ret
xchg
int
pslld
and
xchg
shll
add
loopne
sub
test
mov
push
or
jle
xchg
jl
jno
add
sarb
mov
lea
lahf
and
popf
jbe
jnp
daa
inc
mov
lret
xchg
repnz
jg
inc
movsb
leave
sub
pop
mov
jne
xor
inc
push
and
and
outsb
popa
ja
lods
and
mov
gs
jae
jmp
fistl
mov
ja
jbe
adc
test
xlat
sub
jge
int
add
jbe
adc
sti
xchg
lret
cltd
lods
sahf
jmp
push
hlt
or
lret
repz
test
push
fildl
inc
scas
mov
ds
sbb
bound
sbb
jecxz
cli
lods
jg
pop
pop
cli
lret
push
clc
lods
fdivrs
xor
jle
test
jne
push
add
mov
loopne
adc
xchg
add
inc
sub
jecxz
rcrb
sub
jo
jbe
insb
lahf
mov
fmuls
in
test
stos
outsl
test
jl
push
int
movsb
int
pop
cld
sub
push
push
dec
loop
jle
mov
push
cmc
popa
or
inc
out
test
push
xor
test
pop
lock
test
lock
pop
xchg
xchg
xchg
ficoms
xchg
cmp
jp
cmpsl
ja
ret
mov
add
push
or
imul
fldt
add
pop
cwtl
and
mov
inc
mov
jnp
sbb
jns
mov
jns
js
mov
dec
cwtl
mull
sub
mov
leave
lahf
mov
jb
hlt
inc
je
pop
out
dec
ds
mov
pushf
pop
loop
inc
enter
jae
mov
dec
cmpsl
stos
xorl
cmp
call
ja
dec
and
push
mov
out
out
mov
ds
cmp
call
rcr
xchg
dec
pushf
jge
mov
mov
sub
stc
into
aas
leave
xor
dec
xor
movsl
outsb
dec
rcrl
lret
pushf
pop
or
or
pop
adc
xchg
dec
xlat
jno
inc
stos
xor
fstpt
inc
scas
mov
pop
sub
mov
lea
inc
stc
inc
call
inc
nop
ret
xchg
cwtl
fsubp
xchg
jmp
xchg
ret
pop
mov
or
aad
or
out
sub
outsl
inc
scas
mov
mov
jb
leave
push
mov
sub
dec
out
or
cmpsb
fstl
out
out
xchg
outsl
xor
pop
test
adc
fucomip
add
inc
lods
lahf
neg
or
ror
jmp
or
out
jbe
and
fmulp
pusha
fisubl
cmc
nop
inc
xor
jnp
hlt
cmpb
mov
add
lret
nop
sbb
subl
rcrb
inc
xchg
dec
jl
jg
adc
fdivrl
jno
inc
push
sub
jbe
jo
mov
test
inc
aad
inc
addr16
pop
rorb
ljmp
sar
lock
sbb
mov
pushf
pop
mov
rcl
xchg
ds
imul
fstpl
icebp
dec
xchg
xchg
leave
and
and
adc
leave
jp
mov
movsl
jl
xor
fbstp
arpl
cmp
mov
fdivp
fcomp
adcl
testl
arpl
pop
clc
popf
and
dec
rorl
fisubs
leave
das
adc
dec
add
mov
xchg
mov
mov
xor
jo
lahf
and
inc
xor
xor
icebp
mov
xchg
xor
mov
sbb
sub
jo
daa
mov
cmpsl
lock
fwait
testl
and
and
insl
mov
or
sub
dec
mov
push
xor
xlat
pushaw
jle
sbb
leave
jne
scas
out
out
sub
out
or
jae
sub
mov
outsb
mov
or
push
shll
pop
xor
xor
mov
inc
subb
lahf
in
dec
sub
dec
adc
jle
les
pop
jb
push
mov
xor
or
fisttps
dec
stos
push
xor
mov
xchg
mov
xchg
dec
jmp
sub
les
sti
mov
or
jne
push
bound
neg
inc
ljmp
pop
aas
push
icebp
pusha
lea
cwtl
lods
mov
lahf
rorb
inc
push
dec
sbb
sbb
data16
daa
pop
pushf
fdivrl
into
pop
rcrl
mov
cmp
dec
lods
test
cld
jae
inc
push
clc
dec
add
adc
pop
arpl
xor
popa
push
inc
adc
pop
stc
pop
and
out
pop
ret
cmpsl
or
dec
inc
cmp
cmp
sub
dec
xchg
cmp
in
insl
inc
or
cli
inc
jno
sub
xor
es
xchg
mov
mov
and
ficoml
int
dec
call
aad
or
es
gs
dec
cmp
leave
rolb
iret
xor
cmp
xor
repnz
mov
mov
mov
xlat
and
pop
adc
out
inc
lods
rep
int3
mov
fcomip
sub
insl
cmp
arpl
cmpsl
or
insb
xor
and
mov
in
xor
outsb
daa
mov
fnstcw
pop
mov
les
mov
mov
mov
inc
adc
push
pop
xchg
cmp
sbb
ss
loope
pop
icebp
ljmp
int3
inc
add
and
push
cmp
insl
cmp
fnstenv
or
sahf
cmpsb
mov
arpl
fucomi
sub
js
mov
fs
jge
pop
cltd
xchg
mov
gs
jbe
fcompl
std
ret
ljmp
aad
lods
or
mov
int
stc
mov
stc
ret
cmp
andl
xor
adc
cmp
inc
mov
mov
fsubl
fs
jae
lret
test
cmp
dec
push
test
idivl
push
out
xor
test
aas
and
insl
adc
mov
sub
sub
roll
jns
jns
bound
or
js
cli
lods
mov
icebp
inc
lret
dec
ss
cmc
es
fcoml
jae
inc
push
push
aaa
dec
or
xor
mov
or
icebp
jl
cs
mov
add
cld
and
push
inc
jo
popf
cmp
adc
shr
mov
mov
push
cmpsl
pop
mov
loop
lret
movsl
ds
sahf
xor
push
testl
cwtd
lcall
scas
ret
negb
inc
in
mov
or
sbb
xchg
jl
aaa
dec
mov
and
jo
gs
sub
mov
aas
adc
clc
xor
je
mov
ret
scas
rclb
scas
out
fisubrs
je
push
cmp
inc
pop
pop
in
cmp
unpcklps
mov
es
in
cmc
mov
cmp
push
test
test
xchg
lods
ret
fisubl
mov
fs
outsb
and
out
dec
aas
add
pop
push
jo
jl
and
push
adcl
popf
xorb
jbe
jmp
dec
cli
fcomp
mov
add
and
stos
nop
inc
mov
push
les
xor
dec
mov
pusha
bound
pop
hlt
xchg
cmp
mov
lods
cmp
lret
out
pop
mov
pop
sub
shrl
or
jmp
lock
cmc
mov
lret
in
cs
or
cmpsb
int
cmpsl
out
jp
push
and
xlat
pop
fwait
adc
mov
scas
movsl
jae
dec
aas
jl
and
jbe
mov
or
pop
or
popa
xlat
dec
shl
bound
movsb
or
cmp
pop
lds
ret
xchg
mov
sub
mov
mov
cmp
jns
dec
sub
mov
sbb
xor
ss
or
orb
add
enter
cmp
fidivl
lahf
scas
std
je
pushf
inc
mov
in
mov
and
nop
add
sub
mov
cli
jb
pop
sbb
scas
les
and
sub
lods
xchg
addr16
or
popa
xor
pop
sub
outsl
xor
adc
roll
or
lahf
xor
xor
push
imul
pop
mov
fwait
lcall
hlt
inc
push
lds
jp
movsb
sub
cmp
das
mov
jns
repnz
push
scas
call
inc
std
std
sbb
sbb
mov
call
mov
mov
jecxz
and
arpl
xchg
fidivrs
xor
ljmp
dec
adc
or
cli
inc
mov
sub
popa
adc
xchg
insb
scas
dec
cmp
inc
sti
aas
cwtl
ret
pop
xor
xchg
xor
sub
add
pop
mov
xor
pop
pop
sub
inc
add
pop
inc
movsb
fucom
xor
mov
ljmp
loopne
xchg
inc
movsb
fwait
movsb
cs
icebp
adc
pusha
cld
roll
clc
into
sahf
jno
addb
push
mov
mov
xor
sti
dec
jne
sub
js
mov
sbb
imul
mov
sbbl
inc
sub
jecxz
sub
hlt
cmpsl
mov
xor
std
mov
add
decb
inc
mov
mov
in
mov
or
sbb
jnp
cs
mov
inc
dec
adc
leave
jae
cmp
das
adc
push
loope
push
jp
jbe
xlat
addb
loopne
ljmp
xchg
xchg
lahf
push
test
je
insl
add
aad
jmp
ret
xchg
push
jae
or
xor
pop
pop
and
imul
jle
dec
and
out
inc
cs
mov
dec
jle
fs
pop
xchg
xor
adcl
mov
xor
cmp
call
inc
lock
int
js
mov
cmp
add
jo
cmpsb
mov
pop
mov
std
push
hlt
test
shll
incb
pushf
popa
cmp
inc
push
xchg
shll
adc
test
jg
outsl
and
out
cwtl
fwait
mov
xchg
pop
inc
std
push
dec
mov
shr
sbb
xchg
add
sub
sbb
std
int3
xchg
inc
xor
mov
mov
ja
fcomp
sahf
mov
xor
or
in
test
test
xor
push
es
inc
push
inc
push
into
loope
cmp
push
fs
pop
and
test
mov
addr16
daa
orb
jp
cld
jbe
ret
cmpsl
dec
pop
out
sbb
leave
xchg
cmp
cmp
fmuls
mov
rcrl
stos
loope
push
dec
mov
and
sub
lea
popf
ds
mov
fstpt
jmp
xor
iret
pop
inc
test
movsl
pushf
cmp
mov
shlb
iret
sbb
cmp
push
popf
xchg
les
push
jnp
cmp
jge
cmp
dec
aad
and
cltd
sbb
ss
push
dec
insb
pop
mov
dec
cmp
adc
icebp
cmpsb
pop
ss
cltd
mov
mov
add
fmull
je
xchg
and
aas
xor
andb
mov
in
push
sub
sbb
dec
movb
sub
loope
and
mov
in
test
subl
pop
loope
data16
clc
and
cld
xchg
mov
sbb
jp
popf
adc
mov
loop
repnz
mov
and
ja
mov
jge
cmp
rcr
std
leave
ret
rorb
push
clc
daa
cwtl
cmpsl
push
cmp
test
test
es
dec
out
mov
lea
or
popf
or
xor
push
or
insl
repz
push
lock
enter
cmpsb
cmp
sti
pop
and
mov
divl
ret
roll
pop
loop
roll
jo
and
or
outsb
add
jmp
jecxz
jbe
enter
lods
test
adc
pop
addr16
or
loop
fiaddl
adc
jg
push
je
mov
push
hlt
je
movsb
inc
ljmp
sub
ljmp
jl
lods
cs
out
or
adc
mov
mov
mov
inc
fcmovbe
sbb
dec
stos
mov
lods
mov
cmp
jge
mov
insl
scas
pop
push
out
lods
mov
dec
lcall
mov
dec
ficompl
out
outsl
jge
imul
mov
pop
daa
test
add
out
mov
mov
cmpsb
mov
xor
xor
aad
stc
repnz
push
ljmp
xor
fucom
dec
push
mov
xor
pop
sub
imul
cmpsl
sub
lret
arpl
les
subb
pop
rcr
arpl
ds
aad
stc
scas
lds
ljmp
xchg
mov
pop
inc
inc
sti
and
sub
loopne
in
pop
nop
pop
dec
pop
jg
test
cmp
xlat
adc
in
xor
fmull
aaa
jmp
mov
sub
insb
inc
ja
dec
sub
and
imul
or
test
adc
mov
cmp
add
push
popf
and
pop
sti
inc
loope
sbb
stc
jp,pn
clc
enter
jno
lret
test
jp
inc
push
pop
sub
push
rorl
jbe
xchg
xchg
and
lods
daa
repnz
mov
aam
call
sbb
shr
push
pop
inc
outsb
jo
adc
sub
shll
xlat
aas
in
jge
enter
dec
pop
mov
inc
or
inc
ds
loope
cmp
dec
add
jge
leave
mov
or
push
jecxz
jg
jnp
mov
add
mov
xchg
arpl
icebp
add
ss
testl
stos
ret
dec
pop
xchg
mov
pop
mov
push
enter
dec
and
cld
out
pop
clc
xchg
xlat
lcall
das
sub
insb
push
lret
movsl
pop
lock
cmp
gs
and
decb
enter
in
xchg
inc
pop
or
sbb
ret
dec
fists
bound
int3
je
push
mov
dec
dec
mov
out
dec
into
jnp
mov
faddl
loop
test
sbb
mov
repnz
ret
sub
inc
or
movzwl
stc
jge
hlt
sbb
addr16
cmp
pusha
lahf
fsubrs
mov
test
and
ja
sbb
pop
push
sbb
movsl
je
pop
shrb
iret
inc
loop
mov
js
or
push
xlat
shl
push
inc
pop
add
cwtl
inc
enter
sbb
inc
outsb
gs
lea
lret
pop
push
cmpsb
adc
in
inc
fstl
push
gs
pop
addl
sbb
ret
call
ja
xlat
ror
mov
add
xchg
popa
cmp
and
cmc
cmp
jl
lcall
daa
mov
cmpb
in
cltd
add
pop
adc
clc
mov
test
int
sbb
mov
repz
push
xor
adc
pop
jmp
cltd
mov
mov
mov
add
xor
pop
fneni(8087
inc
mov
or
push
or
insl
fcmovbe
dec
sbb
xor
repnz
movl
insl
fstps
and
mov
sahf
stos
jbe
xchg
mov
bound
inc
push
decl
jno
mov
nop
or
scas
xchg
add
inc
sbbb
ds
mov
pop
data16
adc
pop
enter
lods
fcomps
jno
dec
sarl
sub
sub
test
adc
push
cmp
pop
out
or
in
ja
stos
mov
das
xchg
shl
sub
mov
xor
jnp
cmc
andb
sub
fcompl
mov
rolb
imul
push
mov
xlat
push
ss
jmp
xchg
out
call
cltd
ljmp
cmc
cmp
jns
scas
fwait
xchg
fisttps
mov
loop
push
dec
fsubrs
xchg
fdivrs
andl
jae
pop
pushf
and
js
iret
test
xchg
xchg
pop
push
jg
cmpsb
sbb
daa
repz
jne
xor
out
js
push
mov
cmp
lret
rol
add
mov
push
mov
fwait
jae
sahf
jl
fbld
addr16
cmc
sbb
test
push
add
sub
xor
xchg
ret
or
ret
mov
mov
lods
jae
pop
sbb
sahf
inc
imul
mov
jg
out
and
sub
pop
sbb
aaa
mov
push
in
jecxz
add
jmp
mov
call
mov
mov
lcall
pusha
data16
mov
push
lods
imul
fs
xor
adc
push
inc
mov
pop
call
lcall
loop
cmp
js
xchg
scas
sti
mov
sbb
ffree
repnz
jecxz
mov
mov
popa
cmc
sub
dec
add
jno
std
ret
mov
stos
popf
das
sahf
sub
dec
cwtl
dec
add
xchg
popa
jnp
adc
mov
mov
xchg
lcall
jmp
aas
adc
jecxz
ja
rep
xor
pop
lock
mov
mov
xchg
pop
and
jns
push
inc
mov
popa
psrlw
loop
lahf
fmul
stos
mov
mov
or
xchg
daa
xchg
outsl
sub
adc
xor
mov
das
xchg
mov
aas
dec
add
fcompl
stos
inc
rcrb
lret
out
xchg
sub
lret
mov
fidivrs
cmp
and
pusha
shlb
int
rolb
test
or
jmp
mov
pop
fcomps
inc
scas
nop
fstp
dec
xor
stos
jbe
ds
xor
cmp
cmp
das
lea
icebp
data16
js
mov
mov
cld
int3
add
fmull
xchg
xor
push
sbb
push
or
cmp
xchg
mov
bound
pop
ret
sub
mov
mov
inc
push
push
inc
les
nopl
push
adc
add
in
test
mov
sbb
xchg
lea
lret
test
mov
fsubl
ss
pushl
leave
test
sti
jno
loopne
sub
arpl
shrb
lods
loop
mov
sbb
inc
cmpsl
jae
sub
jns
aaa
mov
jb
xchg
mov
sbb
inc
mov
int3
inc
xchg
sub
dec
out
cmp
stc
rcl
mov
cmp
imul
stc
xchg
pop
dec
movsl
cmp
push
mov
push
pop
aaa
lds
aaa
pop
into
das
cmp
pop
adc
cwtl
inc
bound
mov
pop
xchg
push
mov
ror
mov
sub
popa
xor
aaa
sub
nop
sti
inc
jg
stos
popw
jo
add
fsubrs
inc
pop
in
pop
in
xor
dec
add
inc
movlps
leave
je
adc
icebp
dec
hlt
mov
push
in
stos
xchg
xchg
into
std
pusha
icebp
xor
sarl
and
xchg
cmp
push
mov
cmp
enter
movsl
inc
adc
xchg
pop
or
xor
loopne
dec
inc
fistl
test
mov
test
in
stos
mov
inc
pop
fisubl
cli
int3
stc
and
and
leave
jecxz
fmuls
inc
aad
or
arpl
xor
std
mov
sub
ljmp
ror
icebp
pop
mov
pop
aas
xchg
or
cltd
sbb
ss
push
sbb
int
lods
pop
adc
rcrl
ds
ljmp
and
mov
mov
mov
pop
test
nop
fldenv
jmp
pop
sbb
mov
xlat
lds
aam
pop
imul
fdivl
mov
jp
mov
push
mov
pushf
jg
dec
mov
and
addr16
lahf
mov
push
mov
push
in
jl
adc
adc
dec
pop
xor
int
arpl
jns
inc
dec
divl
or
insl
jnp
xchg
out
stc
out
aad
fldcw
adc
pop
inc
adc
push
insl
rol
pop
nop
pop
pushl
jne
lods
pop
jns
jge
or
push
xlat
hlt
add
jbe
adc
rol
in
mov
ret
and
scas
mov
inc
push
and
pop
add
cmc
fidivrl
rcrl
repnz
dec
es
sbb
sbbl
sbb
out
mov
add
pop
mov
push
push
and
shrb
mov
div
mov
push
loope
cmp
push
jo
ds
xor
pop
faddp
mov
lret
les
sahf
mov
inc
inc
rcrl
jbe
movsb
jne
cmp
add
repnz
jecxz
jl
mov
push
jg
and
frstor
leave
loope
add
jp
adc
pop
pop
or
daa
aaa
jne
and
pop
xor
add
mov
or
xchg
pop
fadds
and
push
mov
pop
mov
pop
and
pop
clc
add
mov
jo
clc
aas
inc
js
and
out
pop
les
into
jbe
cmp
push
out
in
dec
idivl
mov
ret
pop
pop
sub
into
inc
xor
or
push
mov
repnz
repnz
ss
adc
arpl
stos
outsb
cmp
ss
fistps
std
fstps
insb
test
rorb
imull
mov
push
insb
push
dec
mov
in
cmp
and
or
dec
jno
mov
inc
push
xchg
je
scas
inc
push
insb
dec
inc
xchg
cmp
inc
fidivs
in
xor
dec
sub
xchg
inc
movsb
fisttpll
jns
fwait
fists
ljmp
xorl
pop
dec
les
lods
jle
jns
addr16
repz
loopne
mov
xor
fisttpll
mov
jnp
sub
outsb
inc
dec
cld
in
or
xlat
inc
in
sub
test
movsl
sbb
aaa
data16
jno
test
push
mov
push
jp
inc
mov
pop
std
mov
jp
inc
or
push
sub
and
pop
push
add
sub
scas
xlat
sub
sbb
sub
mov
lret
jbe
xchg
das
cmp
insl
aam
lret
in
pop
iret
jno
add
and
popf
or
adc
jle
aas
xlat
jp
outsb
loope
pop
pop
mov
pop
jl
daa
mov
arpl
es
mov
and
test
lcall
xchg
cmc
je
bound
test
out
mov
orb
inc
into
inc
clc
js
xchg
aad
cwtl
in
in
adc
ret
or
push
xor
cltd
and
mov
sub
andb
xchg
and
and
dec
mov
cmp
pop
pop
jmp
bound
xchg
cli
mov
cwtl
jno
divl
xor
outsl
loope
mov
imul
inc
push
jecxz
jnp
fs
push
insl
xchg
les
mov
call
push
mov
add
and
int3
xchg
sub
mov
mov
push
outsb
shlb
xchg
data16
std
mov
pushf
insb
sar
mov
xchg
xchg
sub
mov
lcall
cmc
lcall
sbb
idivb
lahf
jecxz
or
cmp
into
jnp
inc
outsl
mov
mov
mov
dec
sbb
fcoms
add
insb
jne
divl
lret
xchg
sbb
nop
testl
sahf
sub
add
mov
lock
dec
stos
sub
je
pop
out
or
sub
sub
or
test
or
xchg
and
ret
out
lret
popa
adcl
cmp
push
ret
scas
rcr
sti
push
xor
movsl
push
hlt
dec
clc
mov
dec
add
cmp
mov
cmp
and
push
adc
pop
cmc
je
mov
and
ss
mov
cli
mov
popf
jae
or
sub
and
arpl
mov
sbb
out
lret
in
pusha
mov
cltd
mov
push
in
push
push
jp
mov
mov
lods
cmp
and
xchg
jecxz
mov
pop
out
xchg
test
mov
in
stos
or
and
xor
ss
cmp
scas
inc
shll
call
xor
xchg
lcall
sub
xor
jne
imul
dec
xchg
lods
aam
popf
pop
xlat
dec
push
testb
push
adc
imul
dec
sub
out
out
stos
cmp
mov
jle
or
vaddsubps
sub
outsl
push
or
std
push
mov
pop
fnstenv
sbb
push
push
scas
in
mov
enter
xchg
inc
addr16
dec
mov
arpl
sub
out
je
call
mov
adc
xor
leave
dec
lock
push
pop
icebp
fcomps
and
lds
test
jl
cmpsb
inc
mov
pusha
test
aad
xchg
adc
dec
push
lea
jae
stos
pop
mov
pop
mov
jns
sbb
sbb
add
cmp
jb
add
cmpsb
push
mov
sub
mov
jno
mov
add
xchg
dec
xor
jecxz
adc
mov
push
decl
sbb
dec
xchg
add
xor
cmp
ds
mov
cmp
pop
jle
jbe
outsl
cmp
pusha
popf
mov
adc
stc
jmp
sbb
sub
outsl
xor
sarl
dec
pop
adc
mov
push
push
cmpsl
fcmovb
or
dec
sbb
cmp
aaa
lcall
adc
or
mov
pusha
int
lock
adc
dec
jecxz
sbb
xchg
rorb
or
inc
subb
mov
fsts
pop
lcall
stc
xor
pop
pop
push
outsl
jl
add
dec
gs
sti
ret
dec
loop
mov
sti
xor
sbbb
push
xchg
xor
sbb
sbb
addr16
cmp
fistl
pusha
fs
add
test
not
or
sub
ror
mov
test
or
pop
inc
xorl
sub
lret
enter
jl
cmp
sbb
out
jp
dec
sbb
add
or
pop
dec
mov
mov
add
cmp
loop
ret
les
xor
mov
and
arpl
pushf
adc
or
aam
add
adc
stc
test
shll
cld
and
push
sub
leave
ret
mulb
loop
pop
xchg
nop
add
and
and
lock
inc
inc
in
fsubrs
outsb
pushf
aas
stos
mov
int3
outsb
add
cmp
int3
insl
dec
mov
fs
movsb
cmpsb
pop
into
inc
xchg
xchg
cld
lods
cmp
inc
loop
imul
xchg
popa
xchg
inc
test
xor
cmpsl
dec
push
in
or
lods
movsb
mov
jl
xor
cld
mov
pop
out
xchg
xchg
or
xchg
jp
mov
out
cmpsb
in
leave
jmp
cmp
loopne
push
cli
fcmovu
mov
jmp
cs
lahf
gs
sbbb
stc
adc
shrb
mov
mov
ret
movsl
sub
dec
std
push
mov
fsubrl
sub
in
outsb
inc
nop
cmp
cmc
inc
push
in
sti
lret
cmc
xchg
xor
xor
mov
mull
test
test
or
test
jg
bound
ret
push
dec
in
cmp
xchg
xchg
adc
sti
outsl
add
insl
xor
mov
push
or
and
outsl
push
fs
call
cmp
imul
pop
insb
dec
test
test
or
pop
xor
xchg
dec
or
or
cli
xor
stos
test
and
sub
mov
fildll
inc
xlat
aad
loope
int
ljmp
sbb
fimuls
sub
pop
cli
push
rorb
in
pop
jb
cmp
add
ds
add
aaa
inc
dec
add
pop
stos
lock
ret
mov
ja
mov
adc
arpl
outsb
xor
mov
sbb
or
dec
stos
test
loop
out
adc
xchg
in
xor
push
pop
aam
push
mov
sub
inc
xchg
push
sbb
pop
jmp
aas
fwait
xor
aas
jns
xchg
andl
scas
jmp
mov
daa
stos
inc
add
mov
dec
and
mov
les
mov
or
adc
mov
icebp
jl
icebp
clc
cmpsb
cmp
mov
xchg
hlt
jbe
jg
sarb
sub
andb
test
cmp
or
jecxz
and
inc
aad
mov
mov
dec
xchg
or
sbb
pop
lds
inc
sbb
insb
test
leave
mov
inc
push
and
nop
push
aad
cltd
mov
int
test
adc
enter
cwtl
push
jo
mov
or
jbe
mov
jne
fnstsw
fwait
or
cmpsl
xchg
sbb
fs
aas
lods
gs
mov
cmpb
jl
rorl
adc
cmp
push
scas
cmc
dec
push
jg
cmp
pop
sub
and
iret
inc
rcrl
cmovp
mov
jb
or
lods
rcrb
jnp
punpckhdq
cmp
arpl
inc
and
jno
jo
das
adc
ds
cs
subb
mov
mov
enter
add
adc
xorl
jo
xor
outsb
leave
cwtl
push
out
inc
test
sbb
or
jnp
mov
notb
lods
jle
or
and
mov
int3
stc
mov
inc
xor
inc
fisubs
dec
rep
adc
jecxz
push
add
outsb
clc
orl
or
pop
xlat
mov
jmp
jmp
test
fsubs
shl
mov
aad
mov
jle
mov
sub
mov
pop
sarb
or
mull
push
push
xchg
ret
fcomps
push
enter
add
cwtl
fistps
js
mov
add
mov
js
push
in
aad
cwtl
xadd
mov
repnz
pop
insb
xor
mov
inc
out
mov
cli
push
sahf
sub
clc
les
psrad
xchg
push
push
push
inc
sarb
inc
pop
gs
into
mov
and
xor
cmp
cmc
pushf
test
lods
pop
addr16
popl
push
cs
adc
ds
push
mov
daa
outsl
lock
fnstcw
inc
jo
pop
adc
pop
jo
call
adc
fldl
or
insl
and
xchg
mov
xchg
outsl
jne
sub
xchg
pop
xor
mov
cmp
mov
xchg
sbb
pop
dec
insb
mov
ret
nop
popa
mov
rclb
das
push
and
les
lods
xor
ret
enter
mov
mov
and
ror
inc
in
movsb
jge
jge
dec
imul
push
adc
pop
inc
mov
pop
jecxz
jecxz
push
jmp
iret
xor
cmp
fdivs
divb
nop
addr16
xchg
dec
loopne
bnd
inc
arpl
dec
cltd
movsl
xchg
dec
sarl
addr16
push
sub
cmpsb
pop
add
add
popf
insl
add
negb
xlat
dec
and
mov
cld
adc
adc
imul
movsb
in
push
inc
imul
jo
inc
popa
pop
psraw
adc
pop
pop
ss
jp
jmp
push
out
dec
lret
or
xor
pop
jge
mov
inc
sub
scas
or
int3
mov
xchg
out
pushf
insl
pop
adc
loope
leave
insb
adc
and
adc
sbb
or
sarb
dec
push
jae
pop
push
insl
clc
or
fstp
mov
and
push
aam
jg
sub
enter
cmpsl
imul
jecxz
jmp
test
mov
mov
jb
loopne
mov
mov
adc
pusha
je
negl
dec
dec
inc
and
js
push
sahf
aaa
jno
push
mov
popf
xor
mov
mov
mov
mov
enter
std
mov
push
adc
aas
sahf
lahf
xor
mov
clc
pop
inc
push
dec
xor
xor
xlat
push
mov
push
mov
fldcw
push
rcrl
ret
cmp
cmovp
xchg
mov
inc
or
into
call
sub
cmp
out
xchg
lret
fnstcw
cmp
push
rorl
jp
mov
push
repz
jp
push
dec
jp
js
add
add
pushf
adc
dec
sti
add
mov
mov
cmpsl
sub
imul
jecxz
push
in
pop
ss
test
or
or
dec
cmp
xchg
nop
subb
cmc
or
lret
sub
aam
loope
jae
sub
shrb
in
rol
mov
in
push
mov
movb
jmp
movsl
sti
push
mov
mov
sub
and
outsb
std
sub
jne
mov
cltd
xchg
sub
mov
das
xchg
jae
addb
mov
mov
pop
or
sub
sbb
push
pop
fs
sahf
les
in
rclb
mov
xchg
lods
cmp
add
inc
inc
xor
dec
adc
sub
jg
fcmovnb
add
push
fmull
jmp
inc
inc
jns
cmpl
fucomi
mov
into
cmpsb
mov
cmp
dec
outsl
sub
push
mov
stos
cld
add
pop
jp
mov
pop
mov
jno
push
sarl
and
push
dec
or
mov
lds
cld
andl
cmpsl
mov
push
mov
adc
cmc
adc
movb
jecxz
xor
testb
push
xchg
xor
mov
repz
sbb
scas
js
mov
xchg
inc
jo
xor
sbbb
lds
pop
insl
mov
pusha
xchg
outsb
jmp
or
mov
or
stos
iret
pop
jnp
sub
xchg
xchg
inc
mov
sbb
jo
xlat
lea
lds
adc
add
pusha
popa
fidivrs
outsl
jo
fisttpll
pop
xlat
aaa
cld
in
popa
jmp
mov
jno
fs
insb
push
sti
outsl
cmpsb
inc
jle
add
adc
pop
into
fdivrl
mov
fdivs
sbb
sbb
das
dec
mov
xchg
add
mov
mov
mov
inc
xlat
test
inc
cmpsl
adc
lret
into
fucomi
mov
imul
pop
mov
fildll
mov
fnstsw
lahf
or
dec
sub
xor
jmp
jl
push
lahf
push
add
lods
cmp
xchg
adc
orb
je
setnp
add
ljmp
sbb
mov
sub
test
mov
and
cmpb
push
adc
xor
cs
pop
jae
into
adc
xchg
les
and
mov
nop
xchg
shlb
jle
inc
movsl
bound
mov
and
add
mov
rcrb
cli
std
out
dec
adcb
stos
cmp
add
sbb
enter
pop
fmuls
xchg
xchg
add
aaa
addr16
pop
adcb
adc
cmpsl
or
sub
out
push
loope
dec
enter
out
pop
repz
nop
mov
scas
sbb
ret
dec
js
nop
gs
jns
xchg
lods
addr16
xchg
pop
popf
xchg
cmpsb
add
js
popf
dec
mov
lods
test
xchg
and
dec
hlt
loop
mull
shlb
inc
push
adc
insb
scas
movsl
fldt
ret
jecxz
arpl
ds
and
iret
mov
mov
mov
xlat
fistpl
push
push
or
push
cmp
scas
shr
jb
leave
mov
jl
jle
cmpsb
cmp
fs
xor
ja
aas
lea
sarb
addr16
xchg
or
sbb
les
inc
mov
add
fwait
jmp
inc
pop
negl
sti
jne
add
jg
scas
sub
jae
aad
imul
sub
insb
xor
or
inc
int3
lret
cltd
mov
test
pop
fwait
dec
imull
jo
notb
fcmovb
cmpb
lcall
inc
nop
scas
pop
pop
fdivp
insb
addr16
in
xchg
mov
inc
push
insb
cmp
dec
mov
push
into
xor
mov
and
xchg
addl
xor
or
jg
mov
icebp
mov
sub
in
jp
fistpll
stos
out
xor
pushf
xor
mov
pusha
rorl
mov
sbb
lods
jb
add
clc
outsl
xchg
pop
mov
sub
lret
mov
shrb
das
ret
ret
push
cmp
lret
or
in
shll
dec
mov
test
imul
jle
test
dec
or
sahf
jne
pop
lcall
test
jns
das
scas
sbb
daa
jecxz
inc
push
insl
test
pop
sbb
arpl
push
mov
xchg
hlt
leave
add
dec
cli
stos
popa
lret
imul
int
loope
in
or
ja
mov
sub
daa
mov
lods
in
fidivrs
lds
xor
les
jle
loopne
in
cld
hlt
aad
test
sahf
insb
jle
cltd
ja
xchg
mov
xchg
sub
repz
ret
addr16
test
idiv
cmp
fnstenv
inc
sbb
cmp
mov
mov
dec
sub
xchg
out
lock
rcl
lret
orl
vmaxss
repz
cli
insl
sbb
add
outsb
ret
jbe
enter
jecxz
pop
jge
in
dec
sub
sarb
xchg
loop
rclb
cmpl
insl
cld
mov
iret
fsubl
mov
shlb
rcl
hlt
repz
mov
mov
lret
mov
xchg
or
insb
arpl
sub
or
repz
sbb
test
in
add
inc
cmp
xor
cmp
lea
aad
jb
insb
mov
dec
or
dec
push
ret
push
mov
mov
jae
xchg
jmp
cltd
xchg
out
ja
xor
sbb
loopne
aad
cmp
imul
inc
mov
sub
repz
fdivs
daa
lret
divl
sbb
mov
jo
dec
sbb
outsl
push
int3
dec
add
push
cmpsb
addb
adc
scas
test
filds
push
pop
pop
fstpl
decb
jmp
pop
or
addr16
xchg
mov
add
adc
jl
dec
jnp
push
jp
fdivl
loopne
xor
int
jbe
ja
mov
aas
ret
mov
rcl
das
pop
sti
idivl
mov
cmc
dec
fsubrl
shl
inc
lds
cmp
je
adc
aas
xor
faddl
push
pop
adc
add
push
je
jb
push
inc
mov
mov
inc
dec
sbb
bound
cmp
push
cmp
es
xlat
pop
inc
pop
imul
and
xchg
sti
lret
add
pusha
stos
pop
fisttpl
lcall
xchg
test
mov
cmc
sbb
mov
mov
aaa
mov
pop
insb
pop
arpl
pusha
repz
xchg
divl
sub
icebp
push
inc
cmp
or
sub
sbb
bound
popa
adc
and
in
and
test
imul
sbb
clc
orl
mov
cld
out
cmp
or
iret
mov
cmc
cmp
adc
mov
inc
std
fiaddl
and
add
fcoml
loop
xor
mov
push
aam
xchg
mov
ret
lods
sub
pop
push
add
int
rorl
mov
int
jmp
xchg
lcall
call
push
xorb
mov
sbb
iret
add
incb
add
fcom
and
loope
fucomi
sub
xor
push
pop
stc
test
insb
stos
insl
xor
xchg
jne
cmp
fmuls
lods
inc
jb
cmc
es
or
aam
movsl
dec
xor
icebp
rorl
dec
fcomp
cmp
dec
pusha
and
pop
repz
inc
mov
mov
sub
cwtl
xchg
fildll
rorb
cmp
nop
and
jecxz
sub
test
mov
adc
stc
mov
gs
movsl
mov
into
cmpsl
les
leave
js
sub
push
fdivp
jg
fwait
les
mov
fdivr
lods
mov
xchg
and
je
scas
adc
or
cmp
aad
mov
push
mov
and
cmp
add
dec
jg
jo
pushf
ja
sbb
inc
fwait
jb
aaa
enter
cmp
xchg
fidivs
js
lret
stc
enter
es
loopne
lock
loopne
add
lret
xchg
mov
push
push
inc
jae
mov
xchg
fisttpl
fdivrp
out
repz
and
jg
jmp
add
push
loop
clc
xor
dec
loopne
and
mov
dec
mov
xchg
scas
outsb
mov
inc
rcll
mov
js
loope
cmp
rcl
pop
mov
lock
inc
out
sbb
dec
pop
xchg
push
push
test
jg
xchg
sti
xchg
sbb
push
fwait
out
xor
rcll
adc
test
xchg
jmp
push
push
jne
es
jne
int
imulb
push
fistps
loop
cmp
mov
xlat
and
lcall
pop
stos
fs
or
imul
mov
mov
fcoms
mov
cwtl
testb
jmp
std
nop
cmpb
mov
mov
jae
xchg
int3
inc
cmp
out
mov
xchg
mov
push
aam
sub
pop
or
insl
pusha
scas
cmp
aam
mov
xchg
in
imul
loope
outsl
push
mov
lods
insl
mov
js
xchg
push
decb
sbb
mov
or
jbe
jl
inc
ret
jecxz
xlat
fs
mov
and
ret
mov
cmp
cmp
push
stos
das
loop
sub
aaa
lds
lret
xor
jge
fimuls
or
pop
mov
aad
xor
adc
scas
and
in
insl
outsb
sub
stos
ljmp
cmp
iret
div
push
ja
sbb
xorl
adc
enter
mov
ss
loope
repz
sbb
xor
jnp
std
imul
andl
dec
cli
js
gs
jns
sbb
adc
mov
test
cmpsb
loope
sbb
jmp
loope
jecxz
loope
and
int3
cwtl
out
data16
repnz
aaa
fisubs
inc
dec
mov
in
mov
mov
jne
mov
imul
add
cli
cmp
mov
cld
nop
fsubr
cmp
in
cli
mov
cmp
fistps
out
jge
movsl
leave
and
xorb
stos
mov
mov
enter
mov
and
add
lods
fsubrs
sub
stos
mov
jnp
jb
inc
sbb
dec
clc
pop
test
rsm
cmp
mov
jne
sbb
cmpb
xchg
test
sbb
jmp
push
and
or
mov
lock
and
jecxz
cltd
inc
push
pop
stc
and
lods
pushf
in
repz
pop
xchg
les
movsb
sbb
out
jnp
xor
mov
imul
cwtl
insb
shll
imul
outsb
in
and
jl
adc
jge
inc
and
jne
jno
push
ja
xchg
mov
adc
cmp
sbbb
std
or
jae
sub
sbb
jl
add
test
sub
mov
push
fidivl
arpl
sbb
popf
jp
mov
or
cmp
or
xchg
popa
popf
and
mov
mov
or
mov
mov
fnstenv
cmpsb
xchg
inc
pop
fisubl
mov
insb
push
mov
pop
adc
mov
or
push
popa
xor
iret
push
add
outsb
jecxz
lods
mov
nop
stos
mov
test
addb
sbb
sbb
enter
imul
cmp
xor
jmp
jl
out
push
sbb
faddp
aaa
dec
add
je
adcb
inc
lock
add
in
adc
leave
lret
xor
test
sbb
sti
and
std
mov
or
push
mov
pusha
pushf
cmpsl
outsb
dec
popl
fucomip
fcomps
test
mov
jmp
sarl
cmp
mov
add
pop
mov
fdivrs
movsb
mov
aaa
ret
mov
inc
push
data16
mov
or
xchg
push
sbb
dec
shrb
aam
mov
lods
or
dec
mov
jns
dec
arpl
cmp
int
xchg
mov
xchg
cs
sub
sahf
dec
sub
or
dec
ss
sahf
gs
mov
and
bound
sub
sbb
stc
mov
push
jo
insl
cmp
fcoms
cmpsl
inc
insb
lea
jae
add
or
daa
pop
cmp
fstp
add
clc
ret
mov
bound
or
mov
push
dec
push
push
mov
in
gs
stos
push
notb
add
pop
jge
mov
xchg
push
or
inc
pushf
inc
mov
jnp
daa
xchg
std
mov
cmpsb
dec
js
push
adc
iret
repz
out
cmp
movsl
out
add
arpl
aaa
jnp
test
lahf
sbb
dec
mov
xchg
inc
cmpsb
sbb
jno
add
sti
and
sti
lock
mov
jmp
fs
je
jae
mov
push
cli
jle
cs
addb
sub
nop
dec
push
sub
mov
test
hlt
mov
pop
lret
std
dec
inc
cltd
xchg
out
push
in
inc
pop
dec
adc
in
and
xchg
cmpb
lea
shlb
sbbl
or
xor
and
xchg
imul
jecxz
inc
arpl
push
xor
push
std
mov
xchg
je
cmpsb
cmpsl
les
bound
jle
push
pop
and
aad
mov
popa
inc
popf
cmc
mov
add
xor
outsb
outsb
fidivrs
inc
mov
fs
cmp
push
test
or
sbb
ret
inc
ret
out
ja
rolb
jl
fmuls
cmp
scas
lock
or
cwtl
int3
shl
outsl
mov
les
in
repz
and
mov
mov
pusha
ret
sub
sub
imul
sub
xchg
sub
jl
insb
andb
cmp
adc
ret
mov
lret
lods
sbb
mov
les
mov
daa
mov
jmp
sub
les
push
in
ret
hlt
in
ret
jb
jnp
movsb
jg
scas
xor
jmp
push
inc
lods
pop
std
ret
aam
mov
data16
adc
jno
xor
cld
fnsave
jg
jecxz
scas
inc
push
mov
cs
sbb
jnp
pop
jnp
ficomps
add
pop
cltd
enter
fcompl
mov
arpl
inc
cld
call
loope
sub
pop
subb
sub
push
pusha
sub
aaa
inc
xchg
push
iret
aam
push
lret
jle
or
inc
adc
fsts
into
lock
insb
sbb
mov
lcall
popf
scas
add
sub
pop
mov
push
xchg
nop
dec
or
out
je
cltd
xchg
xchg
pop
push
in
pusha
pop
repnz
mov
inc
leave
xor
out
dec
shr
lea
cltd
mov
test
ret
sbb
dec
out
ss
mov
jne
sbb
sahf
imul
into
pop
cmpsl
je
mull
into
mov
push
fiadds
xor
inc
in
pushf
pop
in
lret
mov
jmp
roll
outsl
mov
or
fsub
xorb
fs
xchg
pushf
add
pushf
and
stc
push
inc
xchg
jecxz
jg
push
cmpl
sbb
mov
movsl
fistl
xor
xchg
jnp
jns
sub
mov
in
pop
imul
aas
ja
push
test
sub
mov
je,pn
xor
arpl
pop
daa
mov
rolb
jae
cmpsb
adc
xor
push
xor
int3
push
faddp
sub
icebp
or
sbb
cli
sahf
pop
sub
mov
cmp
push
add
hlt
lret
loope
adc
out
sub
jno
loop
push
fcompl
add
out
xor
lret
xchg
enter
rcl
fcmovnu
xchg
rcll
cmovbe
test
push
pop
sub
adcl
xor
je
insb
or
in
into
xor
cltd
pop
test
dec
lcall
imull
inc
push
fimuls
cltd
cmp
ret
xor
xchg
mov
inc
pop
std
cmc
xchg
pop
and
cs
xchg
pop
pop
xchg
push
add
dec
jns
scas
adc
xchg
jb
daa
addr16
fwait
sarb
add
out
hlt
and
push
jns
rol
mov
add
mov
lds
out
iret
stos
mov
xchg
cmp
and
rclb
mov
out
sti
mov
mov
movsb
pop
les
mov
inc
imul
dec
ja
lcall
mov
bound
jno
pop
add
pushf
cltd
inc
and
pop
shlb
adc
push
shrb
inc
push
mov
adc
shll
pop
std
add
loop
lds
dec
addr16
and
cmp
mov
insb
mov
dec
fisttpl
and
xor
rorl
sti
sar
stos
daa
adc
orb
ja
and
or
sbb
out
arpl
lock
mov
mov
cli
js
xchg
and
sbb
sub
mov
cmp
or
fcompl
stc
enter
imul
test
popa
inc
iret
jne
jl
push
dec
test
add
mov
xchg
lods
ror
movsb
cmp
in
adc
arpl
xor
in
sub
xlat
out
push
and
and
mov
lcall
push
ljmp
js
pop
pop
cmpsl
mov
addb
add
ss
iret
les
pop
inc
push
xchg
out
sbb
nop
xor
mov
pop
fisubrs
lahf
jae
mov
andl
mov
mov
fidivrs
mov
int
adc
dec
data16
mov
adc
rorb
mov
pop
jl
pop
xchg
inc
shrb
test
mov
imul
add
sub
add
lock
adc
addr16
loopne
adc
jecxz
enter
pop
test
xchg
inc
xchg
pop
cvtdq2ps
aad
fwait
xor
pop
add
sub
call
js
jo
push
and
test
stc
das
out
add
cmc
pop
movsl
push
cld
dec
mov
icebp
and
xchg
sub
loopne
jg
mov
jg
fcmovb
dec
adc
xlat
dec
sbbb
cmp
or
pop
shll
lcall
rorl
xchg
mov
jp
pusha
ja
jmp
push
or
divl
aas
test
dec
xor
xor
dec
cmp
addr16
jns
cmp
pushfw
sbb
out
je
repnz
xchg
aad
ljmp
testb
negl
cwtl
mov
pop
sbb
pop
mov
and
clc
ret
popa
fisubs
insb
hlt
adc
jg
cwtl
cmc
jecxz
ja
push
loope
es
or
push
and
jnp
sahf
cltd
in
pop
push
jecxz
xlat
mov
sub
xor
inc
mov
cmpsl
xchg
dec
mov
pop
test
fcomps
out
dec
push
xor
add
adc
pop
mov
ss
movsl
mul
mov
stos
daa
cld
jl
xchg
js
in
aad
movsl
xchg
inc
xchg
shl
and
inc
stos
jae
cmp
jl
xchg
adc
mov
sti
adc
cmpsb
xchg
push
fstpl
cmpb
push
stc
stos
xchg
add
jp
xchg
data16
add
and
shlb
lea
pop
xchg
push
mov
push
or
cmp
add
stos
mov
enter
cmp
dec
sub
sub
test
mov
outsb
fimull
mov
add
sub
cltd
adc
and
popf
out
ljmp
movsl
subb
push
push
shll
fcompp
cmc
sbb
cmp
jle
mov
in
cmc
insl
repz
call
pop
lret
push
inc
cmpsl
std
xlat
or
xlat
popf
jmp
lock
xor
add
popl
cmpsb
fidivl
mov
sub
adc
bnd
mov
push
inc
bound
sbb
add
mov
sbb
mov
pop
rcr
inc
arpl
dec
add
in
cmpsl
lret
dec
repz
int
mov
mov
mov
out
stos
loop
es
and
ficoml
push
cmp
cmp
dec
jae
popa
mov
cmpsl
arpl
push
pop
aam
push
adc
cmp
test
jl
jno
daa
imul
out
ret
lea
inc
call
add
or
out
pop
mov
jb
stc
xor
mov
addr16
sub
lahf
push
inc
xlat
push
pop
and
das
mov
cmpsb
mov
cmp
cli
fsubr
arpl
cld
imul
push
inc
mov
psrad
test
mov
mov
movsl
scas
int
into
mov
je
push
add
cmp
cmp
mov
jnp
imul
xchg
cmp
orb
jbe
mov
ret
fptan
pop
iret
stos
sbb
mov
in
push
jo
mov
daa
aaa
lret
dec
inc
cmp
fcompl
fwait
inc
xor
leave
daa
rorb
int
aas
or
mov
pop
jne
fistps
shll
dec
imul
cmp
lahf
js
test
inc
mov
ds
stos
pusha
and
cmp
sub
and
call
mov
rorb
lahf
sub
inc
lcall
xor
in
sar
in
mov
lea
pop
sbb
xchg
inc
test
je
loopne
jno
mov
mov
or
mov
push
cmpsl
ljmp
xlat
cmpsl
call
sbb
aam
sub
mov
out
out
cmpsb
test
xchg
sbb
mov
movsb
cwtl
xchg
repnz
inc
push
mov
data16
popa
add
mov
xchg
in
notl
test
push
mov
xor
mov
popf
push
inc
inc
and
pop
or
adc
test
enter
xor
mov
adc
insl
fwait
mov
push
stos
ret
arpl
jns
lret
mov
and
test
outsb
xor
mov
scas
xchg
mov
jge
jns
adc
cmp
add
mov
ret
mov
out
dec
scas
test
dec
outsb
out
sub
aam
ja
pop
and
or
or
add
adc
std
adc
push
je
dec
lods
jecxz
mov
scas
scas
xor
mov
jp
pop
cmp
push
xor
pop
loope
aaa
dec
dec
mov
xor
push
test
shlb
int3
icebp
jecxz
or
xchg
pop
leave
xlat
mov
outsb
cmpsb
call
out
movsb
loopne
jmp
mov
cmp
aad
jnp
je
lret
pop
sub
ret
add
arpl
out
push
inc
fmuls
loop
cmp
jg
mov
arpl
sar
movsb
adc
repnz
pop
sub
jg
addr16
imul
js
and
adc
aam
test
mov
ficomps
outsl
ret
in
jle
out
rolb
in
sbb
mov
test
repz
add
mov
cmpsb
aam
cmpsl
out
dec
sti
repz
and
jae
repz
movsb
sub
xchg
es
sub
inc
test
mov
mov
xor
inc
xchg
mov
std
jns
sti
pop
shlb
test
cmpsb
sbb
mov
jl
jne
inc
add
sbb
mov
adc
imul
fwait
dec
sti
faddl
sbb
pop
movsb
pop
rcl
dec
xchg
sub
or
mov
pop
mov
mov
cmc
lds
jecxz
inc
pop
mov
aas
in
jge
leave
test
aad
pop
mov
mov
jg
in
cmp
repz
ja
mov
mov
xchg
push
push
cmp
push
ja
jnp
test
xchg
movl
push
cmp
jmp
loopne
adc
sub
mov
and
mov
push
xor
and
or
mov
mov
mov
scas
jge
insb
je
loopne
mov
gs
mov
aas
mov
mov
in
outsl
cmpsl
shlb
sub
test
cmp
adc
push
inc
mov
ret
add
jge
mov
adc
lock
mov
iret
push
pinsrw
stos
and
jo
mov
mov
ror
sahf
ljmp
or
mov
es
insb
fs
add
xor
dec
and
jg
lahf
test
lods
pop
shrl
push
mov
les
add
jg
int
or
and
dec
mov
inc
jno
cmp
sub
aam
sbb
ret
push
sbb
popf
jp
sbb
pop
das
repz
stos
xchg
cmpsb
popa
mulb
adc
stc
arpl
nop
or
mov
aas
pop
lret
shr
xchg
mov
jle
out
sub
cmovnp
fadd
add
inc
cli
adc
cpuid
int
lcall
cmc
aaa
cmc
mov
cmp
test
rolb
out
dec
scas
push
jl
push
icebp
movsl
push
aam
lcall
outsl
mov
repnz
jl
insb
mov
xchg
xchg
jnp
fisttps
xor
imul
jg
or
cmp
popf
pop
stos
pop
xchg
mov
int
mov
adc
add
pop
inc
push
mov
dec
repz
inc
adc
fisubl
pop
es
mov
in
lods
pop
sub
or
push
dec
mov
xlat
mov
dec
out
push
xchg
std
add
sti
in
rcrl
or
rcrb
jbe
cs
mov
ljmp
aaa
push
jle
adc
je
cmpl
mov
in
cmp
aam
shrl
std
movsb
sub
cmp
ret
dec
repnz
mov
daa
mov
rorl
jb
jge
cmp
ljmp
das
cli
insl
ret
shl
ficoms
test
jmp
inc
and
xor
fcmovnu
pop
adc
cmp
pushf
lret
arpl
sbb
in
repz
dec
inc
imulb
dec
outsl
adc
xlat
int3
aad
adc
adc
jecxz
push
jp
mov
popa
das
mov
in
adc
cmc
stos
addb
cltd
pop
jmp
cs
fnstsw
mov
ja,pn
mov
popf
mov
loopne
lahf
cld
popf
int3
push
cmpsl
xlat
mov
push
xor
aad
sbb
push
out
xchg
pop
aas
xor
call
mov
xorb
add
lods
jmp
popf
or
jo
push
loopne
or
idiv
repnz
push
sub
sub
inc
jnp
lret
jo
pop
scas
scas
test
xor
jmp
mov
mov
mov
xor
pop
or
xor
xchg
pop
test
cmpsb
dec
cmp
xchg
pushf
call
stos
ret
pop
cmpb
cltd
push
gs
xchg
jmp
fistl
cmc
gs
sbb
adcb
inc
jecxz
xlat
cs
shrl
jp
bound
ret
mov
aaa
push
sti
or
push
push
jmp
mov
dec
cwtl
push
dec
xchg
cmpxchg
popf
popa
out
jbe
jns
sub
mov
and
dec
jns
jns
mov
mov
daa
mov
rolb
xlat
lods
mov
lock
adc
popa
jmp
shl
pop
stos
clc
rolb
and
mov
cmp
inc
call
mov
pushf
rolb
dec
inc
insb
pop
mov
sbb
arpl
adc
stos
fdivrl
mov
inc
xlat
or
or
push
cmpsb
jecxz
out
subl
out
inc
cltd
into
insb
ljmp
pop
xor
sub
ret
cmp
inc
adc
loopne
cmpsl
push
fstp
xchg
or
das
shlb
outsb
stos
add
or
or
loop
push
add
lahf
outsl
adc
ja
mov
xor
mov
cmc
js
js
mov
jo
dec
add
sbb
idivl
dec
ja
xor
sahf
fnstenv
cmpsl
xchg
lret
outsl
imul
out
add
mov
or
add
ljmp
addl
push
push
fidivl
push
jo
loope
or
adc
adc
fstl
or
in
aam
mov
pop
add
in
shll
add
adc
pop
or
les
mov
ljmp
jae
gs
dec
lds
outsb
mov
cmc
inc
add
pop
je
pop
cli
sahf
mov
inc
sbb
scas
icebp
ficoms
mov
fadds
iret
mov
mov
sub
popf
clc
out
xchg
loopne
je
repnz
mov
lcall
xchg
mov
add
inc
or
enter
nop
in
adc
out
push
dec
out
mov
dec
pusha
shl
add
out
xor
xor
sahf
outsl
iret
ret
fistps
xor
dec
int3
insb
rorl
push
js
xlat
or
sub
xchg
fidivl
sbb
ljmp
cwtl
fcoms
shrl
jl
cmpsb
rorl
or
lret
inc
dec
mov
fcoms
aad
clc
dec
data16
mov
mov
addl
push
jnp
adc
shll
mov
jne
daa
mov
aaa
ja
gs
daa
pop
sbb
mov
lds
test
cmpb
xchg
cmp
adc
jg
ret
jnp
sub
pushf
fisubrs
sub
frstor
lds
in
add
xchg
dec
into
out
in
inc
cmp
and
and
lea
cmp
adc
aas
fsubr
pusha
adc
mov
adc
or
outsb
mov
pop
ret
into
sub
or
jno
repz
xorl
mov
xor
addr16
and
and
and
pop
sbb
inc
add
loop
add
mov
mov
andl
lds
sub
cmp
pop
inc
mov
or
add
sbb
lods
lcall
xor
xor
test
push
dec
ret
imul
ja
fcomp
movsl
scas
imul
mov
push
ljmp
lods
lock
mov
pop
out
sub
adc
sbb
pusha
sarl
xchg
pop
sub
dec
xor
mov
dec
sbb
inc
mov
sbb
mull
xor
dec
dec
icebp
rclb
xor
mov
push
dec
inc
inc
adc
lret
ret
adc
test
pop
push
repz
dec
inc
nop
inc
push
dec
adc
push
outsl
mov
repz
xor
and
out
push
iret
inc
mov
sbb
cmp
dec
lea
xor
lret
cwtl
push
sbb
push
jb
test
jns
and
aad
adc
add
test
ja
and
jecxz
jbe
dec
lods
leave
std
out
loop
pop
adc
out
cmpsb
lds
int
cld
cmpsb
mov
das
mov
popa
mov
sub
test
sub
dec
gs
sub
push
add
mov
aas
push
jle
adc
movsl
add
mov
pop
lea
psubq
andl
dec
xchg
cs
adc
sbb
cmpsb
cmp
push
loopne
in
int
pop
cmpsb
fsubrs
fnsave
insl
or
or
and
add
enter
ss
aad
pop
bound
rorb
dec
pop
popa
addr16
jbe
mov
xor
insl
mov
iret
xchg
mov
sbb
or
mov
sarb
pop
mov
jb
nop
pop
pop
jnp
stos
jns
cltd
pop
adc
scas
fsub
cmp
call
fs
sbb
out
mov
iret
sahf
mov
aaa
lds
and
dec
ret
sbb
push
mov
out
ja
repnz
xchg
lock
mov
inc
or
inc
in
fcomps
mov
lods
push
cmp
adc
cmp
imul
xchg
pusha
je
mov
dec
lds
add
insb
push
mov
mov
rcl
mov
xchg
in
cs
pop
mov
mov
mov
enter
xor
hlt
testb
pop
in
dec
jecxz
dec
mov
and
push
movsl
data16
dec
out
ret
or
scas
xor
fmull
addr16
aad
push
add
gs
daa
cld
lds
xchg
push
orb
push
inc
push
sbb
outsl
gs
dec
ljmp
sub
adc
lcall
mov
in
pop
outsl
dec
scas
ret
dec
inc
inc
lock
sub
sub
jne
out
cli
xchg
lds
mov
out
ja
jns
iret
jp
xchg
daa
mov
lret
int3
js
popa
aas
sub
xchg
fiadds
enter
movsl
leave
stc
sub
ja
sbb
add
cltd
pop
cmpsb
pop
mov
loope
ljmp
mov
pop
dec
ret
mov
mov
aaa
shll
outsl
push
jns
push
sti
cmp
mov
std
jmp
mov
lahf
lds
test
shll
inc
pop
popa
cmp
dec
std
ljmp
icebp
rcl
mov
jno
imul
dec
xor
cmp
pusha
mov
pop
mov
push
push
adc
movb
mov
scas
fnstenv
push
mov
xor
lret
adc
pushf
jb
jo
outsb
dec
lret
loop
imul
out
xor
movsl
lea
sahf
js
pop
lods
in
xor
pop
je
adc
inc
sbb
jmp
adc
sahf
insb
mov
push
mov
jbe
into
mov
fcoml
adc
push
dec
or
js
add
jg
outsb
xor
in
neg
sbb
inc
incl
scas
std
mov
out
dec
or
or
and
mov
stc
rcrb
xchg
mov
pop
hlt
pop
cmpsl
pop
clc
mov
cli
rcrb
test
jp
leave
out
loopne
pop
adc
stc
push
push
pop
adc
mov
ficomps
aas
inc
jge
inc
lahf
xchg
add
jno
repnz
fisttpl
add
dec
mov
push
daa
mov
dec
push
nop
mov
pop
adc
stos
pop
jne
movsl
rcrl
mov
xchg
in
fistpl
stc
push
test
test
inc
sti
aaa
push
xchg
lret
sbb
pop
dec
mov
adc
xor
push
sbb
mov
cmp
mov
movl
push
pushf
sbb
les
xlat
mov
cs
and
push
jg,pt
push
lret
or
sbb
sti
loopne
dec
xchg
js
arpl
daa
pop
sbbb
fucomp
and
aad
pop
inc
push
adc
repnz
mov
sbb
cwtl
stos
jne
push
cltd
sbb
adc
mov
in
and
sub
popa
jg
stos
pop
push
mov
jp
int
and
out
jmp
jl
mov
xchg
xchg
test
fadd
ja
jge
jo
incb
fimuls
or
mov
lea
scas
push
out
lods
sub
orb
push
les
dec
lods
lea
mov
xlat
xchg
lahf
ds
inc
inc
aaa
inc
hlt
mov
mov
jge
mov
ret
out
popf
pop
jp
pop
push
push
sbb
cmp
je
and
idivb
xorb
std
movsl
xor
mov
ret
enter
shll
das
adc
dec
fmull
outsl
popf
addl
cwtl
fdivr
pop
add
insl
stos
lret
std
fneni(8087
xlat
push
push
jp
int
mov
mov
inc
dec
fs
cmp
push
sahf
shlb
idivb
addb
es
mov
and
rcl
inc
imul
dec
testb
push
mov
pushf
pop
mov
mov
dec
ja
push
mov
fidivrs
pop
xchg
shrb
sbb
dec
mov
rorb
add
and
iret
jnp
and
lea
pop
lock
dec
cmc
cmp
mov
mov
xor
test
stos
stos
dec
mov
push
sar
adc
mov
inc
repz
jg
rorl
scas
jno
adc
mov
jecxz
jbe
pop
fsubrs
sub
pop
or
dec
sbb
xor
lahf
in
imul
mov
movsl
loop
inc
lods
xchg
cmp
or
cmp
jne
lea
xchg
cmc
test
cmp
dec
mov
inc
xchg
adc
xchg
xor
xchg
lds
shrb
inc
pop
lds
testl
notb
imul
cli
mov
xor
mov
addl
sub
pop
aam
inc
xchg
add
lret
xchg
or
mov
scas
enter
insl
dec
push
add
dec
and
bound
popf
cmp
or
cmp
mov
jl
roll
xchg
mov
arpl
hlt
stos
push
cmp
and
mov
cld
lods
repz
add
out
popf
rorb
xor
cmpsl
imul
jo
push
out
pcmpgtb
out
xor
cs
cmpsl
mov
test
add
mov
and
mov
cmp
dec
sbb
in
push
adc
jbe
adc
sbb
or
and
outsl
push
icebp
sbb
test
xor
pop
xor
cmp
sub
mov
xor
adc
sub
xchg
or
pop
cmp
and
cmp
jo
sbb
movsl
push
or
cwtl
xchg
nop
adcl
iret
xchg
pusha
cmp
mov
movsl
jge
lret
div
lods
jle
imul
cli
mov
xlat
adc
xor
dec
sub
shll
int3
fwait
scas
mov
gs
mov
loopne
add
and
xchg
dec
push
test
scas
sbb
cwtl
scas
sbb
dec
mov
cltd
lock
xlat
daa
fildll
and
jge
and
jg
or
ss
add
and
test
xchg
add
dec
clc
mov
les
push
xor
movsb
pop
xchg
mov
dec
jmp
add
xlat
aaa
int3
mov
fs
cmp
data16
or
xchg
pop
xchg
mov
ret
data16
mov
rolb
cmp
push
dec
dec
add
mov
cmp
inc
add
orb
test
lods
xchg
add
icebp
dec
and
xchg
or
pop
adc
aam
cmpsl
add
cmpsb
rcrb
ja
in
jns
pop
pop
pop
or
lcall
test
xor
dec
dec
jge
lcall
ja
or
jle
fimuls
pop
inc
push
xor
lahf
in
ret
dec
ljmp
and
adc
lea
dec
adc
popa
cmc
outsb
xchg
ss
xchg
stos
sbb
and
and
mov
mov
shll
mov
mov
mov
sbb
push
popa
inc
adc
test
pushf
inc
xchg
sti
and
and
ret
lahf
rcll
cmp
mov
cmc
cmp
mov
imul
jae
adc
stos
movsl
mov
mov
andnps
pop
leave
lahf
jb
sbb
movsl
pop
lock
xchg
jl
pop
mov
xchg
lahf
fcomps
mov
cmpsb
or
and
movsl
jge
aas
hlt
and
jmp
loopne
cli
and
mov
out
pusha
inc
dec
sbb
xor
out
test
ljmp
mov
pop
dec
mov
call
dec
loopne
icebp
xor
fistps
ret
out
ljmp
leave
xlat
insb
dec
push
xor
repz
je
sbb
insb
inc
mov
sbb
cmp
dec
das
cmp
adc
pop
ds
iret
pextrw
push
mov
fstpt
ljmp
mov
or
vpsubusw
out
pop
mov
into
subb
sbb
pop
popf
mov
jge
imul
sbb
adc
daa
int
push
or
jb
mov
mov
addr16
jg
idivb
lahf
mov
pop
in
bound
test
rcl
repnz
push
lds
jne
mov
cltd
cltd
rcrl
pop
mov
call
inc
push
mov
inc
push
xchg
and
cmpsl
sti
or
sbb
push
ds
cli
inc
sub
clc
ret
lds
imul
sbb
or
mov
or
orb
cmp
cmp
xor
lea
int
sbb
orl
es
cmp
cmp
aas
in
es
cmpsb
pushf
jno
mov
lock
or
iret
adc
cmp
pop
mov
and
adc
adc
fwait
stos
push
add
ljmp
orl
and
daa
pushf
roll
xor
pop
call
std
jns
inc
mov
dec
movsb
mov
pop
jnp
sub
gs
sub
adc
shl
int
inc
aad
push
xchg
and
inc
jecxz
jo
push
fnstsw
pop
and
lds
mov
pop
mov
add
jnp
addr16
or
idivb
mov
xchg
jae
faddp
dec
or
xchg
repnz
mov
repz
inc
aam
push
cltd
cmpsl
mov
mov
rcrl
cmp
jp
std
in
pop
out
arpl
gs
stc
add
aas
jl
nop
repz
push
repnz
adc
arpl
fcoml
push
sbb
out
test
push
dec
ja
movsl
cmp
cmp
pop
jns
add
loop
scas
test
cmpsb
cmc
jno
inc
out
aam
sub
mov
and
or
pop
test
pushf
inc
fiaddl
fdivs
mov
mov
es
and
test
and
lret
cmpsb
mov
inc
fcmovnbe
imul
xchg
cmc
cmp
das
iret
outsl
adc
pop
std
sub
fisttpl
adc
xchg
or
sbb
pop
cmp
xor
je
push
pop
pop
cmp
pop
push
xchg
repnz
je
and
push
in
int
das
scas
das
das
or
jle
mov
mov
or
jl
fimuls
and
jl
pop
jmp
jnp
pop
xchg
loope
inc
sbb
adc
add
mov
push
xor
mov
inc
pop
xor
test
dec
and
sbb
sbb
outsb
adc
or
mov
and
aas
jl
mov
and
bound
fldt
and
jl
add
in
fists
pushf
movsb
insb
push
test
sbb
nop
mov
jl
jne
sbb
mov
sbb
aam
loope
mov
jecxz
loop
insl
movsb
out
loopne
out
mov
daa
mov
sahf
xchg
sbb
cltd
xchg
mov
out
cmp
mov
dec
je
movb
jno
mov
xchg
out
xchg
fsub
dec
ffreep
and
or
cmpsl
push
pop
mov
and
jne
xchg
cmp
fnstenv
push
subl
sub
insl
pop
pop
icebp
std
add
loopne
pop
push
xor
fwait
sub
mov
jb
daa
cmp
loopne
aam
mov
lcall
push
sub
xorb
ljmp
dec
dec
add
mov
popa
ret
or
xchg
xor
loop
lret
mov
push
inc
mov
mov
mov
dec
in
fmull
sub
xchg
push
jo
jp
js
jg
inc
and
clc
sub
insb
dec
scas
arpl
data16
test
and
repz
cmpsl
pop
mov
inc
fisubrl
push
shr
les
add
mov
adc
testb
scas
jp
mov
data16
std
add
inc
movl
xchg
cli
cmp
inc
push
mov
or
fs
addr16
jae
fidivrl
add
stc
adc
rclb
pop
cmp
pop
stos
test
dec
loopne
gs
es
fldenv
movsl
push
and
push
xor
xchg
test
and
fbstp
push
jbe
and
xchg
js
insb
fwait
dec
ret
mov
out
mov
xchg
cmpsb
mov
jmp
cmp
dec
xchg
lret
imul
jns
xor
add
push
out
fsts
xchg
and
mov
les
or
ds
inc
pop
iret
jns
xlat
push
jne
fnstsw
fisttps
out
jnp
fstps
jl
xchg
aaa
push
or
scas
cwtl
mov
int
nop
mov
cmpsl
lret
jg
in
fmull
xchg
jo
sbb
divb
ds
push
cwtl
test
xor
scas
aam
bound
or
inc
or
nop
fiaddl
cmp
out
rcrb
testb
xor
imul
gs
daa
inc
pop
bound
cmp
pop
stos
arpl
ficompl
push
jmp
sbb
mov
pusha
push
nop
js
jo
lods
inc
mov
dec
add
nop
pop
mov
jo
andl
enter
xchg
test
fneni(8087
cmp
jns
adc
xchg
outsb
mov
clc
call
imul
mov
mov
xchg
xor
lods
decb
push
scas
push
dec
incb
push
xchg
rclb
jb
out
inc
sbbl
std
inc
aas
fcomps
mov
or
cmp
dec
or
push
subl
pop
movsb
cmp
outsb
inc
test
loopne
sbbl
cmp
push
leave
adc
outsl
mov
xchg
mov
sarl
ja
in
je
rorl
xlat
inc
sub
cmp
int3
addr16
roll
sbb
jmp
je
mov
adcl
xchg
inc
jae
cmp
push
inc
lcall
jg
into
xor
test
ret
xor
ljmp
std
cmp
fs
add
pop
fwait
add
test
nop
push
xor
lret
cmp
lock
movsb
xchg
test
aaa
aad
outsl
loopne
rcrl
pop
adc
inc
or
and
adc
out
in
jae
cwtl
mov
sbb
cmpsb
imul
cmp
movsl
and
cwtl
jp
push
mov
daa
jno
loop
xor
push
pop
xor
mov
cs
gs
mov
mov
inc
subb
cmc
ds
mov
call
push
add
xlat
shrb
out
xlat
fcmovnu
out
sbb
xchg
aaa
inc
mov
jle
popa
fmuls
out
push
roll
sbb
or
ja
shlb
test
jno
lret
aam
insl
xor
and
jle
add
xchg
cmc
push
jb
xchg
in
mov
mov
xchg
out
ret
lcall
mov
bnd
sub
pop
xchg
jae
xchg
jp
jo
cld
sbb
add
les
push
adc
fisttpll
add
stos
out
or
inc
flds
xor
sbb
das
sub
cld
jmp
mov
mov
notb
lret
cs
fdiv
dec
unpcklps
mov
dec
mov
pop
push
mov
mov
adc
jbe
xor
aam
lcall
cmp
and
nop
xchg
popa
jp
cld
mov
adc
pusha
pop
push
stos
enter
sbb
ljmp
mov
xchg
js
scas
and
jae
push
pop
inc
lods
dec
sbb
in
xor
ja
stos
mov
sarl
stos
add
mov
into
sub
test
sub
lods
sub
inc
sub
pop
je
shll
pop
data16
addr16
lea
cmp
orl
test
ss
xchg
pop
or
ljmp
rcrb
dec
jbe
mov
jno
mov
out
pop
out
add
aad
dec
js
xor
mov
cmpsl
push
pop
inc
gs
and
add
mov
leave
filds
pop
ror
pop
sbbb
lods
cmp
outsb
xchg
leave
jp
in
mov
popf
pop
mov
sti
out
mov
sti
mov
in
in
pop
mov
pop
mov
sbb
and
out
test
mov
cmp
jecxz
dec
mov
add
pop
cli
push
loop
clc
and
xchg
inc
xor
push
xchg
or
aas
and
movl
xchg
arpl
call
cwtl
cli
mov
mov
fcmove
lret
push
xchg
arpl
sub
mov
jnp
repnz
lea
push
mov
sub
pop
cmp
aam
imul
je
fldenv
cld
pop
std
lods
pop
fwait
mov
mov
lret
sbb
sub
mov
lret
popa
test
testl
sbb
xor
addr16
dec
or
xrelease
int3
xchg
fidivl
lahf
sub
xlat
cli
stos
imul
push
xor
mov
pusha
pop
dec
addr16
mov
pushl
jge
mov
add
xor
not
or
les
popf
cwtl
xchg
sbb
and
sbb
gs
xchg
mov
outsl
push
mov
insb
pop
jmp
and
fldt
stos
or
movsb
pusha
push
ds
out
bound
ds
mov
mov
lret
inc
fdisi(8087
mov
sub
jae
pop
adcb
lahf
cmp
lea
insb
les
fnstenv
sub
dec
cmp
add
daa
jae
pop
mov
fldt
dec
int3
imul
push
inc
jge
ljmp
in
insb
pop
loop
add
out
pusha
outsb
push
fidivl
pop
pushf
jp
ja
les
and
push
and
fisubs
mov
mov
imul
cmp
stos
cmc
push
push
enter
jb
xchg
add
dec
addr16
sub
mov
jl
lret
sbb
cwtl
and
inc
xor
cwtl
xchg
ror
xor
mov
and
test
adc
adc
repnz
cmc
sub
cmp
mov
mov
xchg
lret
inc
or
bound
or
dec
cmpsl
or
ljmp
rcll
jbe
enter
xchg
pop
dec
mov
dec
rcr
sbb
outsl
xchg
mov
xor
jle
stc
out
mov
xlat
adc
ret
sbb
shll
xchg
mov
mov
sbbb
ja
fimuls
cld
sahf
mov
adc
xor
les
push
jmp
lock
push
out
xchg
cmp
ret
mov
xchg
fstpt
mov
rep
add
fwait
dec
adc
pop
mov
jl
and
mov
jge
push
cmp
leave
mov
stos
mov
js
push
pop
fwait
cmpl
and
mov
lods
cmp
push
sbb
xor
pop
cwtl
inc
outsl
inc
nop
xor
fcoms
mov
sbb
inc
arpl
push
mov
mov
or
out
rolb
add
mov
popf
in
pusha
xchg
xor
fwait
add
aad
or
into
out
std
add
inc
out
loope
roll
push
sub
pop
in
sahf
daa
add
jno
jg
jmp
push
and
pop
xchg
mov
mov
xor
xchg
inc
jne
jg
push
test
je
in
imul
sub
pop
lret
popa
xchg
inc
jns
dec
push
dec
xchg
andb
jbe
cs
loopne
mov
adc
mov
mov
add
pop
sbb
cmp
inc
dec
nop
cmp
sti
jne
push
inc
push
in
ret
jle
adc
int3
jl
adc
cmp
inc
mov
imul
mov
es
or
push
jo
mov
mov
or
std
mov
and
fimuls
ljmp
and
mov
jb
xchg
mov
sbbb
cmp
mov
movsb
scas
xchg
popa
aas
dec
bound
stc
xchg
fucomi
repnz
push
rorl
adcl
mov
sub
movsl
lea
jo
dec
inc
cld
inc
dec
daa
loop
popa
xchg
mov
mov
nop
push
push
inc
mov
adc
adc
mov
dec
adc
xchg
aaa
add
or
or
jp
push
loop
dec
outsb
filds
and
fnstenv
fstpt
ud0
mov
mov
icebp
fcomps
add
sub
mov
lds
fwait
push
inc
add
pop
cmp
cmpb
xchg
sti
cs
pushf
das
out
lret
sti
cmpl
loopne
out
ja
mov
leave
mov
shl
lret
jle
dec
addb
add
clc
mov
and
aad
leave
mov
xchg
or
cli
ljmp
mov
sbb
les
test
enter
ret
jge
jg
lods
xorb
das
inc
insl
sbb
cs
cli
push
add
jae
pop
jp
xor
ljmp
fstpl
inc
jecxz
mov
xchg
out
push
xchg
lea
in
xorb
xchg
xor
movsl
stos
icebp
or
fiadds
xchg
andb
sbb
sbb
mov
test
mov
aas
or
lods
gs
cltd
insl
bound
mov
pop
leave
xlat
pop
xchg
xchg
cs
pop
mov
add
lahf
pop
cmp
jl
fwait
stc
xchg
mov
lahf
push
add
cmp
inc
jmp
pop
sbb
cmp
jo
dec
pushf
dec
test
sub
ljmp
sti
sbb
and
mov
ljmp
push
fcoms
mov
mov
or
popf
xor
or
jne
and
pushf
shrb
and
loop
jmp
dec
test
push
mov
lods
inc
xlat
outsl
adc
mov
inc
js
cmc
cmc
xor
push
push
ljmp
xor
mov
out
cli
jle
inc
outsb
jbe
ret
data16
ljmp
outsb
jl
mov
fldenv
dec
imul
push
sahf
in
pop
mov
or
and
and
dec
ret
out
pusha
in
pop
mov
xor
lock
pop
xchg
jg
inc
mov
and
pop
insb
dec
mov
xor
lret
aaa
cmpsb
sti
pop
cmp
cmp
jb
ret
std
push
faddl
dec
dec
push
aas
imul
shll
nop
int3
cld
dec
popa
cwtl
pop
dec
or
cmc
jbe
xchg
mov
mov
test
outsl
loopne
cmpsl
cld
pop
fwait
rcll
xor
xchg
or
push
sbb
scas
popl
pop
lcall
xchg
cmpsb
pop
aas
xchg
andb
hlt
and
pop
cwtl
or
inc
add
mov
jne
hlt
lahf
loope
xchg
or
add
ds
xchg
cs
add
sbb
xor
ret
repz
packssdw
aaa
sbb
push
xor
xchg
inc
rolb
sbb
mov
shr
mov
and
out
rcrl
sub
ss
or
mov
pop
scas
adc
and
jecxz,pt
mov
addr16
sub
jmp
cmp
in
add
push
cs
xchg
mov
inc
bound
dec
mov
push
mov
dec
mov
sub
repz
jbe
movsl
test
sbb
push
popa
aam
add
outsb
jne
adc
inc
mov
insl
rolb
test
testb
out
inc
xchg
add
shrb
es
xor
jle
sub
adc
inc
xchg
ficoms
mov
or
jae
sarb
sub
jle
aad
add
fisubrl
add
jmp
dec
cmp
stos
loop
jp
aaa
stos
jp
dec
adc
in
fsubs
or
insb
addr16
cld
fsts
adc
stos
sarb
fisubl
inc
mov
inc
ror
out
mov
imul
clc
test
leave
add
dec
push
pop
fiaddl
lret
loope
sahf
stc
mov
mov
jg
lret
fs
jnp
insl
stc
mov
mov
jl
sbb
mov
outsl
pusha
inc
jmp
jg
xor
cmp
mov
out
into
test
sahf
cmp
lock
jp
or
loope
out
dec
das
or
cmp
push
pop
imul
jnp
call
and
loopne
jae
inc
mov
pop
pop
pop
push
aas
cmp
in
xchg
ret
cmpsb
inc
cld
cmp
or
add
scas
aam
icebp
jae
test
add
lret
adc
repnz
mov
add
and
mov
sub
adc
mov
adc
jge
ss
loopne
push
cmpsl
mov
push
gs
arpl
js
sub
sub
jmp
scas
sbb
ret
xor
lods
dec
jge
cld
xchg
jg
or
imul
mov
es
mov
imul
dec
sbb
fistl
sbb
jg
cmc
push
push
rcrb
push
bound
dec
jp
pop
ficoml
outsb
jp
aam
mov
out
loopne
or
xor
cmpsl
loope
xchg
out
cld
daa
pushf
mov
mov
pop
sbb
push
dec
lret
adc
jns
sub
and
fistl
push
sbb
movb
repnz
leave
lahf
mov
xchg
mov
add
push
adc
xchg
movl
andl
add
adcl
mov
cltd
mov
mov
jg
sub
int3
dec
jp
bts
or
mov
xorb
pop
aam
mov
in
cltd
xor
inc
leave
mov
pop
xor
rdtsc
shr
mov
shrl
hlt
mov
sub
cld
mov
insb
push
outsb
xor
jo
dec
insb
lods
repz
aam
loop
mov
ja
jg
xchg
adc
ret
pop
mov
clc
inc
insb
push
mov
dec
test
mov
and
sbb
clc
roll
inc
not
aas
cltd
stos
shll
ret
ja
shl
fsubr
sbb
in
rorl
imul
loopne
fisttpl
ret
fadds
in
sbb
mov
fprem1
dec
mov
add
xlat
inc
xchg
int3
dec
test
mov
or
test
pop
jp
sbb
hlt
jo
push
fbld
dec
pushf
adc
scas
pop
test
popl
xor
mov
pop
xor
jne
inc
arpl
aas
dec
add
mov
or
jp
cmpl
jns
push
fcmovnb
push
sti
movsl
xor
inc
leave
pushf
sub
pop
inc
int
push
cli
sub
inc
lods
cmp
pop
mov
in
dec
xchg
or
sbb
jg
rolb
pushf
pop
or
dec
adc
lods
mov
mov
filds
loope
push
and
cld
sub
lock
jge
jo
mov
add
repz
sbb
cmpsl
inc
sbb
iret
ficoml
xchg
add
outsb
das
repz
lods
les
inc
sbb
aas
push
jg
test
in
xchg
fldcw
stos
out
mov
int
mov
mov
sub
push
mov
lret
push
sti
pop
inc
lahf
test
sbb
sbb
mov
cmpsb
lock
xchg
push
push
xchg
xchg
cmp
xchg
imul
in
enter
xchg
jo
mov
xor
sbb
in
or
xor
jl
addr16
cmpsb
push
ss
lcall
shlb
sub
jb
daa
out
cmp
sub
arpl
insl
fbstp
pop
dec
add
pop
ret
adc
js
in
mov
cmp
mov
clc
movl
repz
push
hlt
fsubs
mov
ss
or
xor
xchg
add
cs
inc
mov
out
xorl
shlb
mov
cltd
xor
std
xor
scas
inc
pop
clc
dec
add
mov
mov
loopne
xchg
mov
jle
xor
cmp
mov
or
data16
int
and
pop
movsl
aad
inc
out
shl
lcall
and
jp
pop
cld
fs
adcb
iret
push
dec
push
orb
mov
inc
int
into
pop
rcr
scas
outsl
jl
dec
pop
mov
aas
ret
insl
das
out
mov
sbb
xchg
in
push
pop
adc
popa
test
xchg
add
repz
mov
jo
es
and
flds
jecxz
xchg
test
repz
lods
xchg
cmc
push
lahf
icebp
push
arpl
aam
fcoml
aam
push
or
add
outsl
xchg
jg
jg
jl
loope
jle
jmp
dec
or
in
mov
xorl
cwtl
mov
sbb
les
cmp
jg
stos
jp,pn
retw
daa
lret
lret
jno
mov
imul
pusha
lret
aam
sbb
mov
push
mov
lcall
mov
adc
xchg
pop
lods
popf
mov
adc
mov
or
push
mov
int3
cmp
lods
add
js
push
mov
or
xor
add
mov
js
nop
mov
fisttpll
adc
mov
xchg
xor
fnstsw
pop
daa
pop
ja
stos
dec
shrl
ret
rolb
daa
dec
mov
xchg
xor
jmp
ds
push
divb
pop
repnz
nop
scas
lahf
and
add
popa
pop
mov
cmp
mov
xchg
or
fldcw
and
xchg
lret
aam
in
adc
mov
loop
fimuls
fnsave
loope
cld
mov
sbb
cs
pop
mov
xlat
aam
into
ret
les
stc
ret
xchg
repnz
js
lcall
inc
pop
fwait
mov
stos
cmp
jne
mov
mov
xchg
sbb
inc
and
test
sub
sub
das
mov
pmovmskb
lods
sub
xor
jo
stos
je
dec
xchg
movsb
xlat
divb
aas
pop
inc
mov
mov
push
inc
adc
jecxz
iret
xchg
jb
in
add
mov
test
scas
ds
pop
xor
and
sub
mov
push
stc
in
lahf
xorb
xchg
or
ds
mov
push
push
loope
cmp
aaa
dec
xor
or
fwait
xchg
lahf
adc
add
or
incl
fwait
inc
inc
jns
mov
push
adc
inc
enter
cltd
aas
jo
lods
je
xor
adc
int3
sbb
repnz
sub
sbb
jmp
pop
mov
mov
inc
push
out
push
popf
cmp
jle
mov
nop
imul
mov
ljmp
movsb
mov
in
xor
fistl
lret
mov
pop
jmp
sbb
jl
test
push
pop
xchg
paddusb
adc
sub
rcll
mov
stos
cltd
inc
jo
stos
inc
inc
lcall
std
sahf
push
fadds
cmc
mov
nop
push
jae
outsl
push
scas
dec
clc
and
jno
and
mov
inc
adc
adc
xor
mov
test
loope
test
rol
dec
bound
loopne
fcompl
lahf
movsl
mov
scas
loope
popa
gs
roll
jne
jb
rcrb
fdivrl
mov
std
les
aam
fchs
sub
lahf
sub
adc
dec
dec
orl
mov
adc
sti
sub
nop
xor
mov
mov
outsl
scas
xor
and
xor
fwait
add
or
popa
sbb
cmpsl
mov
imul
ficoml
mov
push
sub
addr16
pop
cli
cmp
add
sub
sahf
inc
test
mov
jp
mov
repz
movsb
add
popf
decl
xchg
mov
or
loopne
arpl
push
xchg
xchg
nop
sub
pop
aas
lahf
sub
xchg
pop
mov
pop
test
ret
push
loopne
jns
out
lock
pusha
dec
js
repz
sbb
fcompp
iret
fwait
js
fwait
pop
sbbb
xlat
das
in
out
imul
mov
loope
xchg
or
xor
and
testl
sbb
sbb
push
sbb
push
pop
or
sbb
jno
pop
cmc
jecxz
loop
loope
lcall
xchg
mov
ficompl
mov
mov
jbe
test
out
push
cli
or
sub
jbe
addr16
pop
ret
in
addr16
inc
mov
movsl
fcmove
cmpsb
cmpb
adc
sub
fs
push
aad
adc
push
and
mov
push
inc
ja
push
dec
test
das
add
pop
dec
push
movsb
popf
dec
scas
cmpsl
add
or
rclb
and
jge
and
xchg
data16
push
jno
adc
sti
or
lock
rcll
scas
inc
fdivrl
push
push
in
sbb
adc
imul
addr16
jge,pt
jmp
cli
outsl
cli
adc
dec
ss
push
jecxz
shll
sbbb
xchg
enter
mov
cmp
sbb
jae
fldcw
stos
repnz
xchg
in
test
and
mov
adc
or
aam
sbb
pushf
data16
inc
xchg
ret
mov
cmp
cs
xchg
or
pusha
jg
fisttpll
addr16
insl
test
xchg
jne
pop
xchg
aas
test
insb
aad
xchg
ficoms
push
add
sbb
xchg
cmp
jg
in
sahf
pushw
and
or
outsb
cmp
pusha
xor
in
inc
add
negb
cmc
aas
push
mov
adc
int
int3
xor
jp
outsl
das
addl
cmp
mov
call
hlt
hlt
jnp
push
inc
push
je
pop
pop
jno
push
jns
mov
xor
sahf
cmp
mov
addl
loop
imul
sbb
orb
scas
add
repnz
sbb
sbb
subb
cmpsb
fstpl
pop
mov
add
repz
pop
insl
jge
icebp
fdiv
xchg
push
mov
andb
aam
sub
in
xor
in
dec
and
mov
and
addr16
jno
dec
pop
arpl
repnz
pop
jnp
movsb
xor
scas
mov
xor
fstl
adc
ret
into
mov
shlb
nop
aam
stc
mulb
jbe
std
mov
cmp
dec
negl
int3
rcr
inc
bound
cmpb
lret
hlt
nop
lret
ljmp
mov
push
jb
mov
jb
mov
sbb
test
iret
std
mov
lds
gs
shl
adc
cmc
mov
or
jle
data16
add
cmc
aad
sbb
pop
xchg
je
das
je
aaa
ljmp
pop
and
sbb
ret
idivb
xchg
test
into
out
cltd
add
scas
in
jp
stos
xchg
out
insl
decl
cmp
data16
into
inc
jo
movsl
fadds
lahf
test
jnp
lds
push
bnd
aaa
cmp
fdivs
hlt
mov
or
sub
out
mov
dec
pop
fs
adc
mov
push
dec
dec
jl
insb
stc
sti
inc
lcall
push
cmp
jmp
inc
bound
scas
dec
inc
cmc
in
push
cld
outsl
adc
cmp
cmpsb
sarb
popf
xchg
cld
sub
pop
lcall
ficoml
int3
or
cli
dec
out
sahf
xchg
mov
repnz
xor
mov
push
stc
push
test
push
push
mov
sbb
enter
es
cmp
inc
cwtl
inc
xchg
je
insb
out
hlt
imul
pop
pop
jae
mov
lock
jecxz
mov
or
cli
outsl
movsb
jne
roll
pop
cmp
cs
jecxz
imul
jne
flds
in
push
add
testb
hlt
int3
dec
add
aad
lock
cli
iret
std
dec
mov
cmp
sbb
dec
incl
jle
pop
lods
mov
xchg
mov
mov
cwtl
push
mov
xchg
cmpb
sti
pop
inc
mov
mov
mov
xchg
sbb
sarb
mov
jp
nop
pop
push
lock
pushf
outsb
or
ret
mov
mov
mov
rcrl
sub
push
rcl
xor
jg
or
fstpl
pop
adc
push
mov
sub
mov
scas
cld
adc
push
jg
out
push
push
push
push
cmpsl
dec
movsb
jb
aad
xchg
stos
cmp
movsb
aas
cmovae
in
sahf
cmc
jp
mov
jnp
es
rcll
call
adc
rorl
jecxz
aad
mov
sub
jmp
cmp
jno
scas
icebp
dec
mov
rol
mov
lret
add
mov
mov
testb
add
xlat
mov
lahf
jle
pop
dec
and
lds
inc
inc
mov
inc
scas
cmp
cmpsl
inc
sub
xchg
aas
ds
xor
icebp
or
js
test
fs
int3
dec
jbe
sbb
stc
aam
pop
arpl
mov
fstpt
pop
repnz
sub
cltd
mov
lahf
jg
inc
cmp
arpl
pop
mov
jg
ja
pop
sbb
enter
inc
inc
js
movsb
sarb
lcall
xor
mov
lock
out
jbe
pop
stos
sbb
imul
sbbb
notb
fistpl
sub
inc
bound
dec
sahf
or
push
sbb
jl
in
aam
adc
push
add
dec
aas
rcrl
xor
sbb
inc
es
dec
dec
mov
fisttpl
out
cmc
pop
adc
int3
outsb
sbb
xor
cmp
inc
clc
fisttpl
sub
cmp
dec
dec
out
sbb
outsl
and
sub
les
push
out
icebp
push
int
cmpsb
inc
out
mov
mov
cld
fsubrp
in
insl
push
fdivrs
push
pushf
mov
and
or
dec
mov
movl
leave
jp
or
pop
int
and
cltd
pop
scas
adc
mov
inc
xor
sbb
repz
sbb
sub
shll
imul
subl
dec
jle
rcll
inc
and
ret
xor
ret
pushf
cmc
insl
dec
pusha
dec
outsl
xchg
inc
sub
arpl
outsl
jl
divl
in
xchg
sbb
test
mov
cmpsb
push
pusha
or
mov
outsb
mov
or
cmpb
lock
outsl
xor
pop
sub
js
int3
mov
xchg
sti
loope
stos
aam
les
pop
xchg
clc
mov
dec
jge
outsl
xchg
dec
pop
add
push
scas
sbb
cmc
mov
fs
into
cmpsb
fsubrs
add
sub
stos
sbb
adc
dec
cmpb
cmc
nop
fdivl
push
jle
inc
shl
sub
push
jecxz
mov
dec
out
jbe
push
clc
push
leave
cwtl
insl
int
adc
sarl
mov
adc
loope
pop
add
mov
setb
ret
out
test
nop
outsw
cmpsb
sahf
and
insb
and
or
enter
fsts
loop
push
es
in
lcall
andl
jnp
roll
push
inc
xchg
xchg
jno
fiadds
jg
jb
decl
mov
jae
and
inc
inc
pop
roll
dec
loopne
cmp
cmc
push
and
lret
outsl
jbe
imul
ljmp
stos
sub
stc
push
daa
or
in
mov
xchg
mov
lret
das
fsubrl
inc
mov
cmp
dec
fcoms
int3
fisubrl
xlat
sub
es
insl
pop
or
dec
ja
sbb
adc
xchg
adc
adc
mov
mov
hlt
ret
lret
fwait
in
jg
dec
cmp
cmp
cmp
pop
addr16
inc
xchg
jp
and
add
pop
rorb
lcall
push
jl
xchg
addr16
adc
mov
fcoms
cltd
int
cld
cmp
cmp
or
and
jge
adc
dec
mov
push
js
sub
cli
fucomip
push
into
xchg
lock
xor
movsb
mov
or
test
scas
cld
scas
sahf
mov
inc
xor
jecxz
push
sbbb
mov
xchg
inc
sbb
jecxz
les
sti
cmpb
cmpsl
fcomps
xor
or
loopne
xchg
fwait
or
bound
int3
push
pop
cmp
inc
fimull
js
cmp
xchg
pop
mov
jo
rorb
xchg
cltd
mov
mov
sub
mov
jne
test
inc
dec
scas
loopne
mov
push
jbe
dec
pop
fs
or
pop
push
rorb
inc
push
aad
aaa
lret
mov
mov
pop
add
ret
mov
xor
cmp
inc
sub
je
movl
in
dec
or
push
mov
pop
sbbl
cmp
or
push
mov
test
rcr
pop
addr16
sbb
mov
lret
fchs
hlt
cmp
pop
mov
fmulp
out
mov
push
inc
dec
mov
out
insb
aam
cmp
cmp
loop
call
sbb
dec
in
shll
inc
fwait
inc
popf
fdivrs
test
shrl
jbe
out
fs
pusha
push
inc
push
das
mov
cmp
push
cmpl
fnstenv
sbb
lcall
xchg
mov
fstp
out
imul
cmp
fs
not
out
stos
jecxz
daa
xchg
fstpt
dec
frstor
adc
or
sub
test
jl
lods
gs
test
inc
repz
shl
cmpsb
mov
and
aas
push
sbb
and
or
pop
or
fs
pop
sbb
inc
rcll
xchg
jo
aaa
pusha
xchg
push
rorb
xchg
push
rcll
idivb
dec
dec
adc
test
repnz
ljmp
jp
les
int
pusha
sbb
mov
popa
out
sbb
rcrl
mov
mov
mov
xchg
mov
out
aad
lret
lret
jo
push
shrl
add
mov
mov
aad
jmp
sbb
icebp
sub
sub
xchg
xchg
lret
cli
pop
mov
xchg
enter
jle
add
cmpsb
lcall
loope
sub
sub
xchg
imul
out
adc
mov
mov
or
pop
xlat
mov
sbb
jle
push
push
out
lahf
dec
lods
sbb
shl
dec
xchg
cmp
and
cmp
adc
popl
pop
xchg
or
push
aad
repnz
inc
lods
repz
imul
add
or
mov
pop
inc
adc
adc
add
pop
inc
clc
mov
mov
lea
sub
fs
bound
pop
jns
push
shrl
mov
jmp
and
mov
xor
jnp
aad
cmp
out
dec
lret
xchg
fldl
repz
dec
jae
jmp
lret
adc
idivl
mov
add
add
scas
or
add
scas
notl
shr
leave
mov
bound
test
push
jo
add
xchg
push
push
xor
cmp
pop
dec
mov
ss
mov
enter
cmp
xor
sahf
inc
push
xacquire
add
sahf
fists
repz
cmp
pop
jno
stc
push
xor
pop
mov
imul
push
test
jne
xlat
sti
dec
and
jecxz
lret
pushf
into
mov
stc
stc
adc
nop
imull
inc
insb
adc
mov
cmpsb
mov
repnz
mov
inc
arpl
mov
rclb
or
cltd
loop
stc
stos
aas
inc
and
test
inc
out
pop
and
and
xlat
rcrb
and
push
ficompl
movsl
popa
xchg
pop
cmc
or
fmull
movsb
jne
sbb
add
jge
xchg
fnstsw
mov
pop
inc
fs
push
popa
mov
call
mov
xchg
pop
pushf
in
add
ret
fldl
imul
sbb
xchg
and
shl
rolb
int3
in
xor
adc
psrad
cmc
mov
dec
push
dec
mov
mov
rol
lds
dec
jne
ret
cmp
out
test
inc
leave
imul
out
mov
cli
ficompl
sbb
scas
cld
jne
imul
and
ja
lar
mov
mov
cmp
mov
fs
add
xor
sbb
mov
mov
fwait
mov
fs
out
adc
or
insb
mov
jns
mov
and
or
sbb
filds
out
xor
je
mov
and
stos
cli
adc
or
dec
mov
sahf
xor
lea
addr16
imul
adc
dec
adc
mov
mov
jns
ss
xchg
aas
mov
push
mov
call
repnz
xorb
stos
mov
fmuls
cmp
fwait
pop
rcrl
sbb
test
les
imul
sbb
inc
mov
repz
cmpsl
lods
cld
daa
movsb
dec
enter
jae
pop
es
sbb
inc
mov
jmp
data16
hlt
jno
aaa
mov
pop
mov
outsl
adc
jecxz
ret
push
pop
mov
add
push
jecxz
adc
lock
sbb
test
xchg
jecxz
dec
das
and
leave
dec
enter
dec
test
dec
mov
inc
xchg
cli
mov
mov
add
mov
das
lods
fistpl
int
nop
jbe
xchg
xor
iret
and
aad
ficoml
enter
cwtl
push
adc
lods
imul
test
mov
push
pop
faddp
ds
out
jge
dec
adc
dec
aad
and
inc
mov
push
gs
dec
int
outsl
mov
popa
push
cmp
add
push
sub
in
xchg
ja
loope
lcall
or
xor
inc
xor
jns
sub
cmpsl
lret
mov
xchg
dec
pushf
pop
hlt
dec
inc
out
push
outsb
movsb
mov
push
inc
push
mov
pop
mov
in
imul
arpl
xchg
aas
jne
scas
xor
call
fsubl
stc
cmp
leave
push
mov
adc
je
adc
adc
in
sub
ja
test
pop
iret
mov
cltd
shlb
pop
lods
sub
popa
cmp
and
push
sub
jae
cmpsl
add
sbb
cld
enter
push
negl
test
sbb
push
and
lret
dec
jb
fdiv
sbb
dec
dec
insl
cmp
ljmp
push
je
jecxz
jne
adc
and
stc
push
ja
rcl
stc
lret
shll
pop
hlt
push
int3
push
rorb
cmp
cmp
cmp
or
ja
pop
mov
mov
fs
mov
adc
mov
push
pusha
test
adc
xorb
fsubl
int
push
xor
dec
push
sub
orb
mov
popw
jp
mov
xchg
mov
add
sub
push
sub
les
sbb
xchg
les
repnz
ret
pop
push
jo
fidivl
inc
push
loopne
ljmp
push
inc
es
test
add
sub
pop
adc
xchg
es
xor
aam
ss
sti
sbb
popl
out
pushf
pop
icebp
cmpsb
push
popa
pop
dec
ds
add
adc
in
mov
sbb
popf
rcrb
int3
add
cli
stos
xor
xlat
mov
jnp
adc
dec
xchg
mov
enter
jae
inc
js
andl
lahf
jb
movsb
jg
push
mov
xlat
hlt
fists
int3
lahf
cmpsb
sub
jns
leave
or
hlt
push
cmp
mov
dec
mov
inc
inc
mov
sbb
rcrb
stos
repz
push
sahf
and
cmp
inc
cmp
jg
push
aad
pop
loopne
sbb
es
notb
in
fidivrl
jecxz
movsb
push
ljmp
xchg
mov
int
sub
mov
ds
dec
out
pop
nop
xchg
sbb
pusha
jo
in
out
push
xor
ret
dec
dec
popa
push
mov
jmp
dec
mov
adc
pop
jle,pn
pushf
pop
mov
ljmp
mov
icebp
fimuls
xchg
loope
scas
cs
cmp
cwtl
scas
cmp
sub
clc
or
ret
stos
test
sbb
dec
pushf
jns
das
test
cmp
aam
mov
jp
jnp
fistps
hlt
outsl
cltd
jmp
movsb
mov
nop
xor
cs
mov
mov
test
xor
dec
shll
scas
repnz
mov
or
scas
xor
sbb
mov
js
aad
cmp
adc
out
std
fbld
sbb
imul
sbb
mov
mov
jae
int
std
imul
lret
in
aaa
cmpsb
pop
mov
sbb
mov
mov
mov
loop
outsb
xchg
movsl
jp
sub
int
add
mov
sbb
mov
inc
push
lods
lock
cmp
or
lods
cli
out
jl
jecxz
push
pop
sbb
into
shl
and
sub
outsb
mov
mov
les
cmp
dec
mov
jno
jmp
xor
mov
jb
js
jecxz
xchg
pop
dec
ret
bound
cmp
out
dec
test
call
popa
mov
push
adc
cmp
mov
scas
adc
and
rorl
ljmp
nop
sbb
sbb
mov
stc
in
ja
insb
pop
mov
loop
cwtl
fisubrs
xchg
data16
in
inc
outsb
ss
lahf
cs
sub
xor
sbb
ret
inc
cmpsb
push
jns
xchg
pop
shrl
ds
loopne
sbb
rcrb
and
popf
lods
dec
mov
sub
mov
xchg
insb
xor
push
or
xor
pop
notb
push
leave
xchg
fwait
out
leave
xor
or
js
mov
pmullw
dec
xor
mov
shrb
sbb
mov
je
cwtl
test
adc
aaa
mov
inc
bound
dec
inc
mov
mov
sub
sub
movsl
mov
ja
adc
bnd
dec
add
xlat
push
jge
loop
arpl
jecxz
ret
jmp
gs
lea
outsb
add
testl
nop
pop
push
xchg
sbb
fsubrp
outsb
jnp
push
shrb
shll
gs
out
mov
xor
pop
mov
inc
int
lods
dec
hlt
pop
mov
mov
xchg
daa
dec
inc
adc
lds
pop
sub
cmpsl
pop
loop
inc
pop
lods
ret
scas
popa
add
pop
data16
push
sahf
cwtl
and
sbb
push
xor
jnp
call
inc
push
call
cmp
mov
inc
xlat
inc
dec
jb
mov
jg
mov
mov
jmp
pushf
adc
out
mov
lret
sti
sbb
enter
cmp
test
gs
arpl
sbb
data16
je
js
mov
cmpsl
dec
test
jo
test
lcall
repnz
xchg
sbb
cltd
fdivs
xchg
inc
imul
fcmovb
mov
or
or
inc
xlat
int
push
not
gs
jnp
lahf
jnp
pop
call
es
adc
add
push
int
xor
jno
pop
xor
cwtl
rcrl
pop
sub
aas
lds
popl
cltd
in
xchg
inc
dec
jg
push
icebp
in
insl
pop
mov
movsb
push
ret
jecxz
jae
imul
cmp
in
lret
shll
sub
fdivrs
mov
mov
mov
daa
nop
add
push
ds
insl
push
or
fwait
xor
xchg
mov
repz
lea
cltd
popf
or
mov
add
or
sub
sbb
outsl
ljmp
sahf
mov
and
inc
movsl
into
sarl
enter
popf
gs
arpl
loope
scas
dec
mov
std
pop
pop
adcb
fildl
mov
mov
jmp
sbbl
xchg
pop
push
cli
mov
insl
dec
mov
lea
add
cmp
sbb
adc
in
popl
mov
and
mov
xchg
adc
xor
or
inc
ds
mov
inc
repz
add
fcmovne
or
call
push
ffree
repnz
cs
xlat
lds
nop
js
dec
inc
add
shrl
pop
subl
addr16
mov
adc
dec
dec
jl
adc
rol
pop
lahf
pushf
jnp
std
xchg
lods
in
test
push
and
adc
xchg
outsb
pop
pop
pop
mov
loope
movsb
inc
pushf
adc
xor
mov
fldt
or
lods
jmp
mov
xorl
mov
repz
stos
adc
jle
mov
out
ja
mov
add
mov
lds
xchg
cwtl
ret
sbb
aaa
mov
sub
ret
stos
mov
aas
inc
rclb
lahf
sub
dec
push
or
clc
out
mov
adc
pusha
testb
shl
sbb
pop
lahf
je
es
insb
adc
rclb
xor
push
add
or
pop
subl
clc
out
sub
das
push
jp
xchg
or
incl
jl
movsb
sbb
out
xlat
dec
shrl
test
je
mov
fidivl
push
pop
jno
or
inc
addr16
mov
test
stc
aam
lea
iret
cmp
pop
mov
sbb
outsl
sarl
mov
mov
and
mov
mov
sbb
add
loop
enter
ljmp
jae
mov
xchg
cwtl
push
mov
stos
scas
and
adc
rcll
hlt
and
out
jns
stc
push
mov
out
stc
inc
mov
and
mov
or
push
or
mov
mov
inc
dec
mov
fwait
mov
iret
nop
ja
loope
aaa
xor
rcrl
xchg
ss
test
inc
test
pop
dec
fmuls
stc
jno
sbb
dec
rclb
xor
test
sahf
xor
mov
jle,pt
pusha
cmpsl
jne
push
lods
test
mov
mov
aam
movsl
or
pop
jns
xchg
mov
cld
cmc
and
cmp
jo
mov
xchg
adc
add
mov
xor
mov
ss
and
adc
lods
push
or
addb
and
cmpsl
xor
inc
in
mov
jmp
cmp
gs
mov
adc
push
das
jns
ljmp
jge
gs
outsl
fidivs
xchg
loope
fsubrl
mov
mov
psllw
lcall
mov
js
arpl
test
rol
mov
xor
mov
or
jnp
ljmp
aad
pop
imul
roll
in
jmp
js
in
push
add
push
jo
cs
jl
gs
cmpsb
ficomps
movsb
test
mov
imull
icebp
jne
and
xchg
mov
push
lahf
jecxz
mov
xchg
and
mov
cmp
dec
add
xor
ret
pop
adcl
mov
or
add
leave
sub
lea
jns
cld
ficompl
xor
push
jle
sahf
and
fdivl
arpl
push
xchg
adc
sub
push
ret
hlt
test
mov
fisubl
sti
and
lret
ljmp
add
dec
dec
xor
mov
jnp
lret
xchg
repz
pusha
out
mov
mov
pushf
outsl
fisttps
mov
jg
fidivrs
xchg
andb
lock
cmp
push
mov
shl
dec
andl
sti
jl
cs
fst
push
sbbl
add
pop
lret
lret
dec
jl
loope
or
popf
stos
ja
mov
cltd
std
out
mov
sub
pop
inc
xchg
shl
leave
and
pop
sti
ret
xor
dec
xor
sub
divl
pop
inc
sbb
inc
je
test
xor
mov
sbb
cmp
jp
mov
sub
test
push
dec
lret
clc
popa
xchg
insl
rol
push
cmp
jo
stos
mov
mov
or
data16
fcompl
nop
sub
int
xor
mov
icebp
push
inc
lret
out
mov
xchg
fs
and
add
dec
test
in
cmpsl
mov
lcall
ret
out
rorl
js
pop
inc
pop
jmp
imul
jecxz
lret
sbb
aas
popf
es
call
je
jbe
jnp
mov
sbb
sub
mov
push
cmpsb
enter
ret
loop
mov
push
push
addl
lahf
dec
xchg
push
lcall
lret
push
jmp
loope
mov
ds
sahf
scas
mov
ljmp
push
or
lods
js
inc
imul
xchg
sbb
icebp
mov
xor
cli
scas
out
popa
shll
fmul
je
loopne
mov
mov
jle
fdivs
jo
push
lcall
insl
mov
loope
dec
and
decb
adc
xchg
pop
add
cmp
dec
add
sti
mov
cli
fwait
xchg
mov
mov
pop
mov
mov
add
in
pop
clc
call
adc
stos
dec
or
add
movsb
cwtl
js
mov
enter
push
pusha
mov
inc
test
pop
outsb
rcl
xchg
dec
and
cmp
cmp
inc
inc
out
inc
xchg
xchg
xchg
inc
gs
inc
xor
loopne
mov
pop
test
push
les
popf
cli
mov
imul
push
sbb
cli
not
sarl
mov
aaa
mov
mov
mov
xchg
lock
and
lcall
jbe
sbb
push
mov
push
jno
inc
clc
xor
loop
inc
and
xchg
or
or
das
lret
xchg
mov
ss
pop
add
outsl
fadd
mov
pop
or
aas
out
rolb
or
rclb
xchg
add
mov
sbb
jmp
aaa
add
cmp
push
or
push
pushf
lea
mov
sub
push
test
cmp
lods
sbb
divps
mov
cs
or
and
divl
pop
out
inc
inc
movsb
mov
sbb
push
idivb
inc
scas
inc
out
adc
test
dec
push
jbe
xor
cli
add
iret
into
adc
cltd
xchg
in
xchg
or
out
scas
sbb
jb
je
test
pop
scas
xchg
es
xor
loopne
lahf
data16
mov
xchg
test
imul
dec
cmp
je
pop
js
mov
sub
sbb
loopne
lahf
lcall
add
test
sub
iret
mov
data16
pop
jle
pop
cmp
cltd
lods
dec
je
js
cmp
daa
jp
cld
mov
out
nop
push
fmuls
rcll
jmp
iret
sub
adc
lods
out
idivl
adc
lcall
push
mov
cmpsl
cld
jns
mov
add
sti
push
cltd
adc
shr
aaa
mov
sub
mov
fistl
cmpsb
and
aas
adc
ret
inc
mov
push
out
dec
imul
mov
inc
add
jge
pop
dec
hlt
sbb
mov
xchg
daa
in
inc
adcl
and
inc
cli
dec
and
clc
xchg
push
pop
pop
jnp
movsb
sti
sub
enter
pop
pop
mov
cmp
in
insl
push
test
clc
pushf
loop
lret
dec
adc
jne
pushf
sti
aam
dec
dec
aaa
cld
inc
das
cli
movsb
dec
loopne
or
lcall
and
ror
push
adc
push
sar
test
outsb
fistpll
dec
iret
sbb
fld
stos
add
in
push
les
ret
aad
stos
clc
lcall
ja
xor
scas
inc
jle
add
jne
xor
jge
dec
adc
or
fucom
fwait
pop
ss
in
outsl
lcall
sub
xchg
out
mov
out
les
shll
in
and
add
push
sub
mov
cmp
mov
sub
inc
xchg
xchg
lcall
sub
mov
sub
xchg
lret
mov
outsb
mov
fnstcw
mov
outsb
cmp
subb
adc
jno
mov
adc
cmp
out
fsubr
and
mov
add
repz
pop
push
dec
add
add
cmpsl
lock
fstpl
pusha
popf
sbb
notb
or
mov
and
inc
std
je
xchg
cmpsl
adcl
cmpsl
test
push
pop
jecxz
sbb
and
bound
fldenv
push
mov
movsl
sbb
adc
mov
mov
dec
ret
add
inc
sbb
pop
push
loope
or
jle
sarb
daa
mov
lods
js
jp
repnz
cmp
into
imul
insl
xchg
pusha
insl
bound
std
fld
or
loop
cmp
and
add
mov
test
inc
dec
mov
gs
mov
jae
push
fstps
iret
je
lea
mov
mov
fwait
daa
mov
jb
int
repz
ret
pop
push
and
mov
rolb
dec
inc
adc
in
jb
stc
or
mov
loop
mov
pop
es
add
xor
push
mov
cs
fisttps
jp
adc
jne,pn
in
loop
sbb
jle
jno
or
je
mov
pop
jp
mov
push
scas
jno
fidivs
rorb
fistps
fcmovbe
xchg
es
jnp
aas
popl
dec
ss
je
insb
out
mov
cmp
ja
ljmp
cltd
jle
das
add
lock
or
test
lret
jge,pt
std
stc
pmaxsw
call
ret
sarb
fs
out
test
jmp
dec
cmp
xlat
loope
or
lret
fs
pop
xchg
rorb
adc
mov
mov
mov
test
xor
pop
cmp
adc
sbb
mov
movsl
pop
pop
and
or
orl
repz
jl
jge
mov
and
leave
out
pop
lcall
and
cwtl
sub
or
cmpsl
xchg
inc
xor
mov
imul
jmp
popa
add
cmpsb
jno
rolb
jge
pop
cmp
sub
ret
sub
js
push
pop
or
movsb
cmp
shlb
xor
dec
pop
sbb
adc
push
mov
dec
lods
mov
shll
test
xor
mov
hlt
pop
sub
out
cs
adc
push
pop
cwtl
jle
loopne
xchg
jb
std
mov
sub
pop
adc
dec
pop
fstps
push
hlt
add
jo
jns
stos
cld
fldcw
ret
push
ret
xor
pop
xchg
mov
and
push
push
jle
movsb
xchg
push
mov
hlt
push
pop
cld
cli
jecxz
mov
xor
sbb
and
out
xor
loop
call
iret
adc
sbb
xor
mov
or
je
cmp
mov
out
sub
shrw
stos
lock
iret
cwtl
jle
and
mov
loope
pop
xchg
shll
mov
out
adc
popa
add
popa
and
movsb
popf
dec
push
xchg
cli
mov
cmp
dec
enter
sub
push
arpl
lret
jne
jno
and
xor
xor
xor
je
fistpll
es
ds
popf
push
fldl
insl
jnp
jl
das
cmpsl
mov
mov
jle
mov
ja
mov
adc
mov
arpl
testb
jnp
cmpb
imul
ret
inc
lods
cmp
cmp
mov
xchg
mov
clc
or
pop
out
xchg
mov
sub
inc
testb
and
pop
mov
xchg
mov
mov
mov
das
and
pop
ds
scas
loopne
ja
test
push
mov
mov
jno
cs
push
cmp
jl
scas
test
lds
jg
jbe
inc
and
stos
xlat
stos
push
fcoms
fstl
lahf
xchg
fxch
or
sbb
loopne
mov
stc
rolb
jo
jne
movsl
jo
addl
stos
into
push
mov
cmpsb
push
sbbb
mov
xor
mov
fists
mov
sub
cltd
cld
or
fnstsw
sbb
sub
test
pop
jne
arpl
push
adc
push
pop
xor
sub
sahf
iret
jg
icebp
sbb
das
add
cmpl
adc
sbb
inc
push
push
pop
insl
mov
std
cmp
fsubrl
pop
sti
pop
inc
xchg
sbb
out
pop
idivb
dec
mov
icebp
cmp
mov
movsb
clc
jnp
cwtl
js
push
repnz
lods
cmp
pop
loope
ret
sub
xlat
fisubrl
sbbl
and
lret
mov
call
iret
mov
push
dec
gs
test
push
mov
and
aad
xchg
cmc
push
inc
cmpsb
jmp
ljmp
cmpsb
sbb
push
inc
ja
pop
idiv
xchg
in
int3
inc
mov
mov
mov
popa
xor
cmp
push
cmc
jno
addr16
fxtract
adc
aam
add
jnp
adc
scas
xchg
sahf
mov
cmpsl
fwait
rcrb
xchg
push
ja
shlb
icebp
fcoml
xchg
add
xlat
int3
jp
sti
mov
jnp
xor
xor
je
xor
jecxz
repnz
into
mov
sti
push
roll
daa
dec
mov
mov
inc
adc
mov
fmull
scas
das
cs
test
push
decl
and
lds
xchg
sar
das
xor
imul
jmp
mull
and
fdivrs
sarb
rdtsc
sub
test
sub
inc
clc
sbb
inc
jcxz
add
xor
pop
int3
xchg
popf
inc
sub
insb
inc
inc
js
lea
pop
or
call
call
inc
sbb
and
fiadds
data16
out
mov
mov
and
add
mull
clc
mov
dec
insb
imul
sub
xor
xorl
mov
sub
or
mov
arpl
repz
mov
jle
int3
cmp
rol
shll
aad
and
cmp
repnz
mov
out
lret
fwait
shlb
mov
mov
mov
mov
arpl
dec
rcll
mov
ficompl
negb
shr
push
aas
jae
pop
std
addr16
inc
add
mov
inc
or
xchg
xchg
test
push
call
pusha
dec
xchg
mov
sbb
adc
push
mull
inc
loop
mov
popf
xchg
sub
sbb
push
jne
xchg
xchg
inc
rcrl
cli
popf
cmp
add
ret
cmpsb
das
sbb
push
add
or
xchg
jnp
dec
sub
push
jbe
repnz
lods
push
dec
sub
adc
cld
and
inc
jbe
sub
iret
mov
leave
xor
push
dec
std
or
fadds
lahf
cmp
dec
dec
leave
pop
in
repz
int3
mov
mulb
data16
mov
mov
mov
xlat
dec
mov
test
cli
into
xchg
leave
and
rcl
int3
in
push
dec
imul
in
in
mov
jmp
js
lahf
xchg
push
mov
xchg
sub
cmpsb
cwtl
cmp
dec
dec
push
out
inc
or
inc
mov
gs
sbb
std
clc
hlt
push
cmp
pop
push
popf
stos
daa
jbe
fidivl
pop
dec
mov
xchg
movsl
jo
dec
rcrl
and
imulb
mov
cmp
mov
mov
jg
mov
movsl
out
push
in
inc
sub
js
dec
or
or
jle
push
es
or
xchg
jns
lds
push
jae
push
cltd
xor
add
outsb
scas
cmp
sbb
mov
je
add
and
movsb
xchg
sti
cmc
mov
mov
and
fs
mov
xchg
lods
or
dec
ret
jge
mov
loope
xchg
movsl
lret
mov
pop
adc
or
nop
stos
mov
sahf
xchg
in
ret
xor
mov
out
cmpsl
lock
push
mov
lock
sbb
or
ret
test
xchg
out
sbb
xchg
in
inc
shl
repnz
adc
add
dec
add
ljmp
sti
dec
sub
add
ret
jbe
ja
mov
inc
jno
lods
mov
mov
jge
test
cmp
test
rorb
push
test
aam
lock
jne
sub
sahf
cmp
ret
int3
push
adc
negb
inc
inc
sbb
in
cli
add
imul
mov
lock
and
mov
ljmp
mov
in
inc
std
inc
fsts
dec
icebp
popf
movzbl
inc
xor
stos
sbb
fsubrs
leave
or
push
popa
inc
fs
xchg
inc
in
and
xor
adc
data16
call
out
insb
addr16
and
inc
enter
mul
imul
stc
mov
ret
inc
sti
inc
daa
scas
ds
or
xor
lods
push
scas
push
cwtl
stos
mov
push
addr16
mov
pop
pop
xchg
pop
lods
addr16
and
rcrl
sub
cltd
cmp
cmpsl
mov
aam
jo
inc
push
dec
jb
or
pop
inc
iret
out
push
loope
cltd
fcoml
pop
adc
ret
mov
mov
loope
xchg
mov
je
mov
jbe
fstps
and
mov
dec
fs
nop
xchg
pusha
pop
cmp
or
loop
xchg
aas
push
ret
ljmp
mov
std
pop
mov
fxch
in
fldl
std
pop
in
cwtl
bswap
xor
jnp
aas
inc
das
dec
in
jbe
jp
into
icebp
outsb
stos
bound
sub
xchg
pop
mov
sbb
leave
in
popl
outsb
fdivs
shll
mov
mov
jge
in
jle
jecxz
sub
pusha
loope
call
in
cmp
mov
push
mov
xor
cwtl
int3
nop
cmp
testb
stos
pop
lret
test
jmp
clc
push
fsubs
aas
dec
sub
xor
dec
push
test
enter
or
imul
mov
mov
inc
adc
mov
in
cltd
bound
les
jb
push
pop
flds
lods
jle
or
xchg
shll
cld
pop
pop
and
xchg
lret
dec
add
sub
sbb
pushf
rcll
test
sub
mov
sahf
mov
lds
sub
fwait
outsl
clc
es
popa
loop
or
sahf
andl
imul
mov
sub
push
and
push
or
cmp
lods
push
push
xor
sbb
je
mov
ficomps
and
stc
pop
sub
xchg
mov
inc
out
pop
mov
jecxz
aad
aam
movb
rolb
xchg
ljmp
push
movsl
push
push
inc
decb
adcl
push
ljmp
inc
xchg
inc
rcrb
call
pop
icebp
outsl
fistpl
adcb
jo
repz
lods
nop
or
or
pop
test
shl
jmp
inc
or
inc
or
adc
pop
test
cs
nop
notl
jg
adc
cmp
leave
and
push
movsl
mov
and
test
bound
push
adc
mov
dec
fisubrl
mov
cli
mov
aaa
jns
mov
and
jg
cmpsl
js
cltd
test
mov
and
test
outsl
mov
lret
scas
cmp
add
mov
adc
lahf
cmp
mov
andl
fidivs
push
popa
addb
mov
jg
inc
add
pop
les
nop
adc
test
mov
out
jne
push
push
push
add
mov
fcomps
out
add
push
gs
sub
sbb
jnp
inc
mov
sub
out
gs
dec
shl
dec
cmc
push
sahf
or
shlb
jae
inc
pushf
rorb
into
subb
adc
xchg
mov
out
jp
movsb
rcl
add
ja
cmpb
cmp
mov
fwait
adc
push
jp
pop
lds
mov
or
nop
or
lock
fcompl
or
mov
mov
push
sbb
sahf
inc
sbb
pop
xchg
fs
out
xchg
clc
mov
scas
jl
push
in
pop
jno
ret
mov
xchg
inc
push
or
pop
dec
jle
lret
rolb
pop
xor
xor
jne
in
js
pusha
aam
sub
icebp
rcll
jmp
out
sbb
pop
out
jno
jecxz
cmp
or
je
jmp
test
or
cmc
sahf
inc
mov
xchg
xchg
inc
addb
std
and
stos
adc
daa
lea
std
call
mov
sub
into
dec
sar
fldt
cmp
pop
xor
lcall
unpcklps
imul
stos
fldl
cmp
movsb
xchg
lcall
sti
dec
gs
or
loopne
mov
add
cld
jge
loopne
in
cmp
loop
xchg
sub
aam
adc
pop
and
sti
adc
pop
sub
xlat
push
cltd
mov
das
fiadds
ja
cld
gs
push
xchg
mov
cmp
and
inc
xchg
cmp
adc
sub
jg
mov
dec
add
mov
xor
sbb
adc
jp
xor
mov
mov
call
mov
xchg
xorl
dec
sbb
jmp
pushf
cmpsl
pop
xchg
mov
mov
js
rcll
xchg
inc
cmpl
imul
imul
push
adc
fs
ljmp
mov
outsl
cmpsb
lock
jle
push
test
cltd
shlb
xlat
stos
fs
push
sbb
adc
add
push
jno
jno
mov
fs
and
pop
jg
ss
enter
out
sti
cmp
pop
mov
out
jae
push
test
stos
cs
out
lods
aam
push
testl
jp
repnz
push
filds
cmpsl
out
fsubp
inc
loopne
sub
inc
push
enter
inc
inc
adc
ljmp
or
in
jl
lods
ja
in
or
jp
adc
mov
mov
inc
pop
iret
popa
jecxz
jle
out
mov
js
sbb
sbb
push
lret
jmp
bound
adc
jb
js
xor
cli
mov
mov
sbb
add
imul
adc
call
jmp
mov
xlat
mov
pop
ret
cwtl
adc
std
je
notb
lea
push
xchg
and
ret
out
lret
pop
das
mov
sub
mov
xchg
adcb
inc
mov
jne
sarl
aam
loope
stc
mov
jns
idivl
out
out
negl
fcomps
pop
sub
xchg
in
jb
out
out
and
mov
adc
outsl
xor
xchg
pusha
inc
in
mov
loopne
fdivr
pusha
jecxz
adc
mov
in
inc
fnstsw
push
sub
xchg
mov
fldl
icebp
mov
cmpsl
in
stos
nop
fimull
mov
cs
lds
pop
stc
pop
fcompl
dec
xor
jp
in
cmpsb
fidivrl
dec
js
pop
add
bound
push
jmp
in
fisttpll
xor
mov
sbb
arpl
sub
sub
jae
lds
out
jns
popa
dec
lods
leave
insl
aaa
pop
inc
mov
rcr
pop
adc
add
push
inc
js
jecxz
mov
mov
pop
pop
in
shlb
xlat
lds
rorl
inc
hlt
or
dec
dec
cmpsb
jecxz
add
mov
flds
cli
pop
mov
mov
sbb
loope
arpl
add
add
loope
push
outsb
xor
pop
mov
jo
in
cmpsb
test
fs
fsubl
mov
xchg
adc
fsubrp
outsl
adc
out
dec
inc
sbb
into
loopne
xchg
mov
sahf
popa
add
cmpsb
push
mov
cmp
es
out
jbe
inc
pop
outsb
add
inc
aam
ljmp
and
mov
cmp
cmp
or
push
shrb
sub
loop
lahf
idivb
rcrl
lock
xor
dec
ja
filds
push
daa
popa
cmp
jo
in
add
add
push
pop
rol
in
push
push
push
add
in
add
dec
andl
cltd
sub
pop
ftst
or
leave
andb
or
hlt
loopne
and
sub
sbb
push
in
xor
push
addr16
cmp
int3
arpl
mov
jl
aad
add
cmpsb
push
out
and
mov
pop
jl
push
daa
xchg
pop
jmp
push
aad
cs
sub
loop
les
sbb
adc
dec
inc
test
in
fwait
sbb
cmpsb
aad
xchg
jbe
xchg
or
repnz
pop
pop
xor
sub
loopne
xchg
xor
test
hlt
dec
push
sbb
out
add
rclb
mov
imul
and
mov
mov
pop
lcall
out
rcrb
outsl
insl
aad
mov
aas
stc
inc
dec
cmp
jbe
sbb
sarb
adc
xchg
fidivl
shrd
neg
cwtl
lock
in
fs
jne
cwtl
jbe
sbb
cs
popa
and
pop
les
stc
ds
outsb
cmpsb
lods
pop
cmpsl
movsb
mov
adc
xor
scas
push
mov
ja
jmp
push
sub
cmpsb
push
in
in
mov
mov
mov
clc
gs
xorb
mov
scas
pop
mov
rcrb
cmpsl
xchg
dec
lock
push
cmc
aad
out
mov
inc
je
stos
movsb
and
lret
jns
out
jbe
cs
mov
xor
loope
lds
mov
fcompl
lret
adc
test
adc
leave
ret
aam
adc
jne
dec
xchg
and
mov
lods
cmp
jae
test
cltd
push
out
jb
sarl
outsl
pop
mov
mov
mov
dec
pop
cwtl
xchg
push
cmp
push
adc
dec
adc
jno
cwtl
jl
arpl
loope
into
shlb
jbe
or
jl
mov
inc
imul
adc
test
inc
push
add
add
mov
popf
inc
lret
arpl
fdivr
or
mov
and
xchg
daa
scas
repnz
push
lods
add
test
sub
stos
movsl
mov
push
dec
dec
hlt
iret
inc
sbb
adc
fldcw
cmpsb
jmp
out
mov
mov
pop
fnstcw
jno
push
iret
mov
cmp
int
pop
adc
cmp
mov
inc
sbb
loop
sbb
push
leave
mov
fninit
mov
jp
dec
add
mov
xchg
cli
mov
sti
adc
cli
push
aas
dec
dec
mulb
es
dec
testl
icebp
leave
icebp
lret
dec
pop
into
add
adc
lds
sbb
pop
mov
mov
lods
lcall
cmp
rclb
cmpsl
sahf
pop
aam
in
dec
mov
sbb
adc
add
sarl
nop
dec
mov
cmp
jb
cmpsb
push
mov
or
decl
imul
mov
testb
jnp
rorb
cwtl
pop
inc
inc
jb
repz
sbb
out
sub
into
mov
push
add
mov
dec
rcrb
pop
inc
cmp
and
sahf
pop
mov
nop
dec
lock
out
xchg
mov
jne
aam
adc
fadds
push
inc
test
xchg
ja
cmp
sub
mov
cli
or
jb
fs
jecxz
mov
das
cmp
ret
pop
xor
cmpsb
xor
mov
aas
pusha
jne
lcall
inc
mov
shll
sub
outsb
xor
lret
jge
in
xor
xchg
dec
dec
adc
dec
aas
stc
subl
mov
push
stos
dec
cmp
in
dec
repnz
cltd
dec
jbe
loope
inc
jl
push
xchg
mov
pop
lret
fdivr
cld
adc
call
es
push
cmc
inc
test
ja
pop
mov
add
lods
push
daa
sub
push
mov
stc
jo
fcmovnu
nop
roll
daa
jae
lods
mov
push
jmp
cs
mov
jo
mov
pop
or
enter
loop
add
push
mov
add
loope
jno
leave
jnp
push
test
gs
push
xchg
pop
ja
divl
andl
bound
jmp
jbe
dec
pop
xchg
js
or
sub
insb
icebp
stc
push
fdivl
mov
cmpsb
in
cmpsb
dec
ss
mov
pop
inc
lret
xor
stos
sbb
add
shlb
mov
inc
js
dec
enter
jmp
mov
xchg
and
lods
and
rcl
sbb
movsl
lcall
sbb
aad
mov
mov
mov
and
or
mov
mov
aas
sbb
mov
out
push
lahf
mov
pusha
movsb
aad
adc
cmpsb
pop
and
mov
sti
sbb
inc
sub
jae
add
pop
mov
cmp
out
outsl
jmp
sti
jns
cmc
out
lret
jbe
pop
repnz
into
cmp
fistps
adc
fcomps
dec
test
inc
test
inc
cwtl
pop
inc
xor
fsubs
stos
pop
es
jnp
sub
cmp
fsubr
push
jp
and
es
mov
and
push
sub
xchg
in
sbb
mov
test
cmpsb
neg
out
cmp
lahf
mov
mov
push
add
lahf
xchg
imul
lcall
xchg
jo
and
rol
fdivrs
int3
fsubrs
xor
ja
pop
pop
or
pop
inc
movsl
mov
push
pop
mov
outsb
dec
lods
jne
movaps
out
dec
je
pop
sub
jmp
je
push
pop
sub
pop
rol
jp
dec
sahf
inc
enter
xor
pop
aaa
adc
ds
test
add
das
sub
push
lahf
repnz
mov
or
lods
mov
cs
imul
pop
cmp
stos
cmpsl
jne
push
xchg
fsubs
pushf
ffreep
xchg
mov
sahf
or
sbb
sbb
jne
sub
xchg
push
xor
pop
xor
cmp
vpcmpgtw
sub
cmp
mov
push
xchg
lahf
inc
push
testl
sub
popf
xchg
xchg
leave
repz
adc
testl
dec
xchg
push
pop
push
lea
clc
inc
aaa
test
repnz
and
and
push
test
mov
mov
push
adc
and
mov
xlat
stos
bnd
fwait
ret
rcll
mov
fnstenv
sbb
dec
imulb
mov
mov
cmp
jp
scas
mov
mov
subb
mov
fcomps
dec
push
sub
popf
aaa
cmc
bound
repz
dec
xchg
arpl
inc
sub
mov
xor
push
cli
push
in
sarb
ja
fildl
and
mov
pop
pop
xchg
cmp
adc
hlt
fiadds
data16
xchg
dec
es
js
mov
cmp
fadds
inc
out
sbb
rcll
push
cwtl
add
adc
movsb
adc
cmp
addr16
in
sub
push
xor
sahf
dec
jge
stos
in
icebp
or
lock
insl
int3
adc
in
or
jbe
jns
gs
stos
push
rolb
mov
sub
es
in
stc
xchg
and
mov
adc
hlt
push
xor
dec
hlt
jecxz
das
xor
sbb
sub
xor
das
loopne
aaa
jle
add
adc
rcll
bound
adc
jge
mov
jl
mov
jmp
outsb
mov
nop
or
mov
les
loop
dec
fcomi
xor
arpl
cmp
xor
or
cmpb
fs
scas
push
push
push
out
gs
jns
cs
je
mov
imul
addr16
repnz
shrl
out
aam
pop
mov
loopne
cli
sbb
or
adc
popf
rcrl
in
xchg
cmpsl
push
fildl
mov
push
jae
sahf
or
inc
push
push
mov
sub
push
lods
fcmovnu
and
push
or
cs
jge
pop
sbb
jl
add
sub
mov
js
pop
xchg
push
mov
inc
daa
pop
pop
mov
sbb
rcrb
ret
out
adc
xor
repnz
outsb
bound
mov
dec
ja
int3
lahf
dec
bound
pusha
adc
inc
lock
std
dec
pop
ljmp
pop
fcoml
cli
cmp
mov
adc
out
or
jg
sub
xor
fdivp
inc
mov
in
shlb
js
xchg
and
adc
mov
insl
ljmp
lods
decl
lods
movsl
mov
imulb
mov
mov
mov
stc
mov
arpl
leave
cmp
clc
in
fwait
insb
scas
ljmp
aas
data16
mov
dec
in
add
and
and
and
sahf
outsb
jp
add
loope
enter
or
lods
jne
or
arpl
add
out
aam
jg
lret
test
es
ss
push
lods
xor
scas
and
pop
test
lods
jo
das
test
fstpl
or
push
outsl
add
pop
pop
out
sub
xchg
fwait
xor
and
add
insl
dec
mov
cmp
test
fidivs
rcrl
sub
mov
push
lds
jns
mov
mov
cmp
fwait
sarl
loop
pusha
push
inc
xor
sahf
data16
mov
and
or
fnsave
mov
sbb
sbb
lret
dec
pop
icebp
outsb
ss
jle
push
ja
jne
loopne
cmp
pop
addb
movsb
lret
sub
jg
cmpsb
ss
aaa
stos
push
dec
xchg
sub
icebp
insl
add
mov
and
out
xchg
pop
mov
fcoms
mov
call
inc
inc
adc
mov
xchg
push
mov
pop
push
fistl
ret
mov
test
pop
mov
out
mov
mov
pop
lock
leave
push
pop
xchg
and
dec
dec
aad
jl
add
call
out
flds
ds
insb
lcall
mov
cmpsb
dec
fistl
push
aad
out
push
out
test
pop
pop
mov
push
ja
les
nop
pusha
mov
sub
pop
sti
adc
cmp
sbb
mov
xchg
lods
mov
dec
mov
addb
push
add
mov
fwait
mov
and
push
std
push
cltd
int
sbb
aaa
mov
push
and
jp
dec
adc
test
mov
push
xchg
mov
out
clc
add
jmp
jge
out
ss
add
out
pop
cld
mov
movsb
gs
push
into
js
lea
mov
xor
bound
lods
mov
mov
dec
push
clc
test
xor
insb
xor
fisubrl
xchg
jge
cmp
cmp
ret
ret
pop
dec
cmp
int3
test
mov
sahf
xchg
and
mov
es
ja
outsl
cmpsl
jo
cli
faddp
mov
adc
xchg
adc
xor
in
cmc
insl
mov
pop
fcoms
in
xor
inc
adc
ret
inc
xchg
and
fadd
inc
cmpb
mov
popl
mov
pop
repz
mov
sbb
pushf
dec
gs
cs
mov
and
das
add
xchg
cld
iret
cld
mov
mov
cmc
imul
or
out
jg
test
loop
iret
dec
pop
xchg
inc
pop
cmpsb
cmp
shll
stos
pop
fstpl
out
cwtl
jmp
mov
push
mov
jp
test
mov
cltd
mov
fwait
cmc
pop
movsl
lea
call
rolb
pop
out
cmc
cmp
icebp
or
dec
and
shlb
cmp
mov
push
jle
mov
repnz
lahf
sti
adc
or
insl
xor
mov
dec
adc
or
add
jae
pop
adc
dec
inc
fdivl
fmulp
fidivl
jae
loope
or
add
addr16
push
xchg
vrsqrtss
xchg
pushl
insb
pop
xchg
adc
xor
daa
or
repz
inc
daa
adc
pop
int3
add
in
push
movsl
xor
push
or
mov
sub
and
out
mov
loopne
push
xor
mov
negl
mov
das
jg
imul
fidivrs
xchg
test
or
rcrl
fidivrs
jle
or
sub
pop
xchg
xchg
xor
insb
jp
inc
gs
lcall
fiaddl
sbb
call
mov
gs
leave
int3
das
xchg
out
ss
cmp
in
clc
or
jl
pop
dec
xchg
mov
sub
or
push
jae
add
divb
mov
xor
xchg
dec
sbb
xor
fisttpll
mov
cld
lret
rolb
cmc
push
in
out
pop
arpl
xlat
xchg
shlb
push
dec
or
pop
aas
and
cmp
xor
es
mov
xor
negb
xchg
test
inc
aaa
jle
cmp
cmpsb
push
cwtl
test
mov
iret
pushf
cli
insl
cwtl
ficoms
push
test
loope
or
sbbb
xchg
pop
fs
mov
stos
fsubs
xor
xor
mov
fstl
out
divb
and
jns
pop
inc
xor
ja
call
xor
test
jecxz
das
test
jmp
mov
clc
iret
mov
inc
xor
and
sahf
rcrl
add
popa
lds
enter
or
aam
xchg
jb
jnp
jl
dec
mov
inc
add
aam
dec
repnz
sti
das
jmp
sahf
cs
lea
nop
stos
out
mov
xor
cmp
fmuls
adc
fld
inc
clc
or
cmp
xor
mov
int3
mov
mov
jl
in
mov
lahf
sbb
push
in
sub
mov
push
into
sbb
xor
ficoms
mov
rsqrtps
pop
inc
fucom
or
dec
add
adc
call
lret
pop
enter
mov
sahf
shr
sub
dec
push
or
and
mov
repz
mov
ret
shlb
and
cmp
pop
inc
or
adc
enter
adc
pop
pop
in
add
and
lahf
dec
push
sub
jo
and
and
lahf
icebp
or
sbb
mov
leave
add
ffreep
lcall
into
es
sub
adc
das
ror
clc
push
cltd
push
xchg
mulb
sub
popa
sub
mov
fisttpl
xchg
xchg
pop
lcall
pop
daa
mov
xorl
or
negl
jb
push
faddp
inc
pop
jmp
dec
cmp
add
mov
orl
inc
jp
lahf
bound
xor
adc
pop
iret
int
cwtl
es
loope
jno
jle
das
fldcw
pop
dec
lds
pop
or
lods
add
or
mov
aam
sbb
xor
ljmp
sub
scas
cmp
cli
cmc
add
sbb
in
xor
cmpsb
frstor
inc
mov
dec
dec
mov
push
shrl
outsl
inc
lock
daa
dec
outsb
sub
xchg
mov
pop
add
test
push
lahf
in
cmp
sar
out
mov
mov
pop
out
jns
nop
test
jl
pop
jns
out
sbb
out
xchg
and
push
xorl
fisubrs
jbe
nop
mov
sbb
mov
sbb
jns
lods
stos
fsqrt
dec
xor
loope
fcmovb
ljmp
adc
addr16
push
xlat
lods
lcall
repnz
inc
and
loopne
xchg
das
xor
test
shlb
inc
add
xor
sbb
sqrtps
icebp
add
sbb
add
mov
ljmp
fs
cmc
test
lahf
lret
jecxz
dec
les
daa
sbb
roll
pop
lock
push
mov
das
lea
sbb
mov
ret
push
adc
push
add
test
jmp
dec
push
aad
inc
cmc
and
sti
in
xchg
addr16
cmpsl
mov
mov
mov
insl
xrelease
mov
pop
xor
inc
adc
ret
sbb
call
rolb
clc
outsl
pop
fs
push
ljmp
add
push
fcompl
and
jnp
xor
mov
rclb
jns
mov
adc
rolb
cmpsb
rorb
adc
inc
xchg
call
cli
sti
dec
sbb
ret
mov
fcompp
repnz
cmp
bound
adc
ret
push
lods
scas
lahf
pop
cmp
sbb
push
scas
into
jne
xor
sbb
push
dec
aad
mov
or
out
test
dec
mov
aad
sbb
jmp
sti
mov
push
insb
hlt
inc
pop
jl
sbb
sub
xor
clc
bound
lret
mov
sti
mov
add
imul
jle
nop
in
adc
aas
jnp
mov
mov
jmp
inc
aam
push
push
pop
xchg
cmp
xor
inc
or
lods
jne
roll
push
pop
andl
xchg
xlat
mov
mov
dec
ret
ja
mov
fistpl
imul
mov
lahf
sbb
mov
or
test
cmp
loope
orl
aad
mov
add
mov
scas
adc
add
mov
dec
pushf
rcll
loop
xor
data16
roll
fdivl
push
sbb
push
in
test
movb
sti
xor
xor
test
cmp
xlat
int3
jnp
popf
mov
inc
mov
push
cmc
or
push
dec
sti
xchg
adc
inc
mov
pop
xor
aad
or
cmp
sub
pushf
pop
popa
scas
shrl
cld
ret
xchg
mov
push
jl
out
inc
out
imul
push
or
or
or
adc
xor
adc
push
dec
mov
and
jge
pop
xchg
jno
push
leave
mov
or
inc
jle
lea
test
aaa
jge
pop
sub
mov
jmp
aad
sbb
repnz
arpl
std
out
bound
jge
jbe
jp
push
jae
scas
jb
cmc
ljmp
push
dec
je
imul
jle
outsb
popf
mov
std
dec
add
int
lret
push
push
adc
insb
dec
sub
pmaxsw
loop
jge
mov
stos
push
jae
mov
jae
js,pn
push
outsl
test
or
aam
sub
scas
mov
mov
mov
sub
and
fisubrs
xchg
in
fldenv
push
outsb
daa
mov
addr16
xor
mov
loop
mov
jp
xchg
dec
lods
fcoml
jnp
fists
cwtl
add
mov
gs
out
and
mov
xor
pop
lret
pop
jmp
clc
daa
mov
lods
test
xchg
cmp
jo
jbe
aaa
xorl
divb
insl
sarl
jmp
les
aad
enter
cmp
ret
insl
add
add
icebp
mov
dec
sub
sbb
mov
xchg
jno
hlt
jno
jae
iret
and
and
mov
inc
sub
jmp
push
sbb
sub
aas
fdivrs
insb
sahf
add
rol
leave
mov
mov
xchg
and
test
ret
test
xor
cwtl
repnz
idivl
in
stos
cmp
add
fcmovbe
sbb
leave
stc
mov
pusha
add
gs
fstl
mov
repz
aas
jae
stc
push
mov
psubb
adc
inc
xor
subl
pop
xor
pop
jae
and
jge
fistpl
lcall
cmp
ret
in
sbb
pushf
lods
push
add
sub
sbb
rorb
enter
add
adc
lock
out
outsl
std
fildll
or
xorb
push
movsl
pusha
inc
sbb
or
call
adc
inc
mov
es
divl
movsl
fwait
jo
add
push
out
mov
es
add
mov
adc
lret
jbe
pop
inc
aam
mov
dec
adc
add
fsubrs
pop
mov
mov
test
ljmp
mov
fidivrs
out
fcompl
stos
xor
lods
sahf
mov
rcll
and
push
test
pop
mov
cwtl
jg
cmpsl
and
adc
lea
inc
push
sub
and
gs
sub
pop
mov
sub
outsl
stos
jns
adc
xchg
xor
dec
inc
mov
jmp
or
dec
mov
call
push
and
sbb
push
in
dec
repnz
pop
mov
jno
shl
mov
enter
and
fcomps
mov
pop
cltd
mov
inc
enter
add
fisubl
pop
add
lea
jle
movsb
xorb
pop
push
iret
jecxz
into
fcomi
fists
jo
sahf
dec
test
push
mov
clc
or
xor
je
jge
loope
adc
xor
pop
je,pn
jp
add
icebp
aas
and
fisubrs
fcomi
or
xchg
xor
jmp
stc
out
sbb
mov
mov
push
inc
xor
ds
ja
pop
insl
out
lds
enter
and
popf
inc
inc
sub
test
mov
repz
xor
xchg
cmp
cmc
push
xchg
and
xor
pop
sub
pushf
mov
cld
xchg
lret
xchg
add
jmp
test
sub
outsl
mov
fisubrs
insl
lea
mov
inc
push
dec
dec
mov
mov
pop
std
xchg
xchg
adc
cwtl
rcrb
addr16
cmc
inc
es
hlt
mov
fldt
jnp
fs
scas
xlat
cmp
icebp
sub
jecxz
mov
or
push
jle
cwtl
dec
or
pop
xor
jo
lret
mov
aam
mov
sub
aad
pop
mov
jae
add
inc
cmp
cmp
rcrb
jle
fidivl
lock
shrb
pop
sbb
adc
mov
rcrl
aad
mov
out
popf
or
leave
lahf
ds
adc
jge
das
mov
imul
push
and
fwait
xor
pushf
imul
xchg
daa
and
lods
cwtl
adc
in
add
fdivl
out
mov
mov
call
int
addr16
xor
mov
add
inc
push
pop
sub
out
xor
adc
notb
xor
lret
sahf
lock
dec
jge
stos
inc
sti
add
push
mov
mov
jge
inc
fdivrs
into
fmul
pop
add
xchg
adc
mov
iret
mov
jne
sub
lahf
rcrl
lcall
xchg
inc
sbb
cmp
sbb
imul
loopne
lock
mov
and
scas
add
mov
mov
pop
repnz
dec
pop
and
fnsave
pop
stc
mov
mov
and
es
js
xchg
insl
sub
into
loope
mov
or
push
and
mov
call
dec
movsb
xchg
rclb
pushf
loopne
inc
push
push
mov
imul
cmpsb
mov
push
jmp
std
jmp
leave
xchg
stos
sub
pop
lods
rorb
in
lods
outsb
pop
into
mov
ds
fwait
pop
sbb
cmpsb
cmpsb
sbb
sarb
jb
mov
test
cmpsb
sbb
test
adc
rolb
xor
and
loopne
fbstp
add
fsubrs
outsb
pop
les
in
arpl
loope
jno
mov
rorb
dec
inc
test
jb,pt
mov
fdivr
mov
mov
jge
xlat
pop
in
movsl
leave
adc
xor
and
mov
jno
imul
jno
arpl
scas
inc
test
sub
add
cmpsb
push
cmp
pusha
mov
sbb
pop
imul
inc
add
loopne
mov
lcall
fsubs
jne
test
jb
inc
fbstp
popf
xchg
inc
mov
shll
adc
cmpb
jno
aad
fstpt
pop
pushf
jno
mov
xchg
add
xor
aad
jb
sub
cmp
inc
in
insb
add
inc
jne
lods
sbb
sub
inc
test
pop
std
aad
in
xor
sarl
xor
aaa
mov
adc
cmp
mov
addr16
fnop
rolb
movsb
pop
popa
pusha
pop
cmpsl
push
mov
sub
xor
popa
cmp
rcrb
push
jnp
lods
or
scas
jecxz
repz
mov
cmp
rolb
leave
add
pop
mov
jg
jbe
sbb
jecxz
fildl
mov
mov
loop
aad
sub
or
sub
mov
movsl
add
adc
inc
mov
repz
out
cmp
or
popf
stc
mov
mov
push
pusha
push
or
movsb
jnp
cmp
jae
cmp
lahf
std
mov
ja
inc
mov
add
jl
push
push
mov
mov
xchg
movsb
mov
cld
push
je
sub
xchg
sarl
xchg
inc
cmpsb
cld
sub
scas
mov
shll
movsl
lret
cmp
jg
lcall
test
sub
test
jle
xor
movsl
iret
sub
mov
mov
cmpsl
and
mov
and
xor
test
mov
rol
inc
add
ja
insb
sub
cmp
xor
gs
fs
cmp
dec
cmpsw
jb
mov
mov
int3
jnp
daa
leave
dec
data16
movsl
test
rolb
xor
pop
pshufw
mov
jl
js
dec
es
sbb
ds
fdivl
inc
xorb
add
xchg
movsl
jbe
mov
in
xchg
cltd
push
nop
mov
sbb
rorl
jne
xchg
test
cmc
jnp
fldl
mov
mov
adc
xor
fsubs
add
lock
and
xlat
or
dec
push
lods
dec
pop
or
push
push
xchg
inc
in
or
loopne
sub
les
adc
mov
add
xchg
cs
je
jno
stos
loop
shll
xchg
add
rclb
shr
sbb
outsb
add
ds
stos
pushf
mov
lods
xorb
in
inc
imul
sbb
lahf
test
sub
inc
test
fcmovne
inc
pop
cmp
mov
out
mov
and
mov
lcall
cmp
mov
stc
rorb
fsubrs
xor
pop
xchg
mov
xor
dec
cmp
push
test
sub
fidivrs
cmp
mov
ja
sub
mov
je
jns
mov
jns
pop
out
adc
pop
and
mov
dec
jbe
mov
sbb
insl
xchg
jp
xchg
jg
adc
mulb
push
and
aas
aad
adc
adc
xchg
cs
push
dec
and
aas
xchg
lea
adc
push
sub
ljmp
sbb
repnz
lods
in
cltd
rcr
mov
and
xchg
sub
jae
repz
inc
xchg
sahf
add
inc
jmp
inc
ja
insb
addr16
lcall
jmp
dec
fnstenv
xchg
lahf
sub
fucomi
inc
vmovupd
and
popa
jmp
nop
gs
inc
cmp
fisttps
cwtl
rcll
dec
inc
into
jnp
cmc
fsubrs
imul
hlt
in
dec
and
and
js
mov
dec
in
pop
cmp
jns
ja
mov
or
gs
lahf
aam
jecxz
lret
pop
xlat
add
pop
outsb
popa
out
jbe
shr
loop
out
popf
fwait
sbb
addb
inc
or
fnstenv
xchg
inc
outsb
idivl
xor
stos
data16
cwtl
jp
pop
mov
mov
in
inc
sbb
mov
push
mov
pop
test
mov
xchg
ljmp
mov
sti
sbb
xchg
in
push
cwtl
movsl
adc
in
loope
jl
push
les
les
pop
fmul
lds
fbld
add
jmp
push
bound
jne
jo
cmpsl
cltd
dec
js
cwtl
push
loopne
push
mov
iret
aaa
inc
push
cld
adc
mov
xor
jge
push
cmp
mov
cmpsb
jle
sbb
push
sub
test
dec
fdivr
fisubl
push
test
cmp
sahf
jg
fdivl
xchg
dec
jge
ljmp
add
scas
cwtl
out
mov
pop
mov
int
dec
and
pop
call
rcrl
xchg
lods
jno
inc
mov
fwait
dec
stc
js
daa
stc
std
lods
xor
or
push
add
adc
add
imul
xchg
pop
shl
dec
stos
fcmove
sub
push
repz
repnz
fwait
out
push
cmpsb
shlb
inc
sub
and
ds
xchg
pop
push
xchg
add
mov
adc
fwait
test
ja
or
aaa
add
jg
push
mov
outsl
add
mov
cmpsb
mov
sti
loop
cmp
jb
fnsave
aas
xor
lret
leave
scas
gs
pusha
ss
mov
xchg
out
inc
add
test
push
aam
mov
xor
jecxz
aas
inc
imul
dec
sub
movsl
out
push
arpl
adc
test
push
pop
jo
fwait
das
inc
jnp
sub
xchg
test
xchg
cmp
ljmp
add
test
pushf
fldcw
cvttps2pi
lods
mov
aam
push
push
lods
das
xor
pop
aad
std
fmuls
adc
ds
and
fcomps
mov
repz
call
xor
xchg
pop
iret
sub
adc
cmp
test
add
inc
inc
arpl
push
cmpsb
aas
xchg
lds
pop
push
jg
ljmp
popf
add
bound
sbbb
pusha
adc
rsm
repnz
jmp
sub
fnstenv
rolb
daa
jb
out
fadd
int
test
mov
pop
sbb
jl
ljmp
jg
sub
adc
sub
and
ret
movsl
in
dec
sub
sbb
push
fldt
inc
mov
adc
mov
jb
push
int
cmp
jns
cld
call
fwait
scas
mov
cltd
int
test
xor
inc
pop
mov
shrl
mov
inc
clc
pop
sbb
ds
sbb
mov
out
mov
mov
hlt
lock
and
int3
xchg
out
lret
lret
nop
sbb
mov
fadds
repnz
clc
sub
popa
dec
out
xlat
mov
sub
lea
ljmp
outsb
fiadds
mov
add
paddsb
das
stc
mov
ds
int
lea
lahf
inc
jns
dec
and
adc
inc
inc
test
in
dec
add
pop
dec
imul
stos
cld
inc
call
jbe
dec
push
add
push
cmp
inc
pop
cmp
arpl
add
loopne
int3
xor
cmpsl
fmuls
cmpl
and
inc
xchg
mov
aam
movsl
xchg
lahf
sub
pop
add
fsubp
pop
jg
push
mov
mov
aaa
shll
xchg
jne
sub
aam
mov
xor
lods
sti
out
mov
cmp
sub
es
les
mov
mov
adc
mov
mov
testl
mov
cmp
adc
xchg
jge
or
mov
sahf
pop
fmull
imul
orl
sarb
daa
pop
mov
fisttpll
cmpsl
in
dec
test
xchg
scas
cltd
xor
ljmp
inc
sub
cmp
insb
pop
sbb
adc
dec
cmpsl
add
cmp
dec
cld
ret
aad
cmp
mov
and
and
adc
in
lods
mov
or
ss
insl
popf
and
mov
cwtl
pop
xchg
cmp
mov
mov
mov
in
jo
inc
fistps
sbb
rorb
push
mov
mov
movsb
adc
jbe
push
jp
test
cmpsb
adc
pop
mov
xchg
test
lret
lcall
aas
cld
inc
cwtl
jnp
sub
mov
adc
hlt
cmpsl
mov
cmp
mov
stos
cmc
and
push
mov
and
sub
inc
jae
and
enter
enter
mov
and
push
inc
lods
add
ja
xchg
jge
push
jg
add
push
scas
fucomi
inc
lea
dec
pop
pop
inc
pop
in
into
out
movsl
test
xchg
cmp
mov
add
dec
out
enter
pushf
fs
jno
mov
adc
pop
stos
push
cwtl
aaa
lods
cmp
stos
and
add
push
outsl
jne
adc
loop
fs
rclb
lock
mov
jecxz
ja
in
xor
add
imul
test
xchg
addr16
add
sbb
pop
mov
sub
sbb
mov
lsl
pop
icebp
jne
clc
outsb
rorl
rorl
mull
or
push
es
fldt
jmp
insb
das
ficomps
xor
cwtl
sbb
orb
sub
scas
push
jns
inc
pop
jp
add
cmpsl
aaa
xchg
cld
sarl
xor
push
aaa
xchg
rorl
and
mov
loope,pn
sbb
repz
repnz
outsb
out
xor
mov
xchg
int
or
andl
xor
xchg
gs
pop
or
pop
pop
push
mov
jg
jbe
rorb
mov
xchg
pop
insb
cmc
adc
dec
mov
hlt
notl
cmp
dec
xchg
push
push
or
mov
pop
mov
sub
lret
fwait
pop
xor
dec
push
daa
cs
jns,pt
lret
jp
xchg
pop
ja
add
insl
adc
push
push
cmp
adc
bound
mov
das
and
hlt
pop
outsb
sbb
push
bound
sbb
or
test
aad
ret
inc
divl
dec
cmp
in
cmp
fwait
cmp
mov
or
clc
sbb
xchg
test
mov
rcrb
push
xor
into
jb
daa
stc
cmp
fs
cmp
sbb
xchg
cmp
pop
nop
in
scas
movswl
or
aas
bound
sbb
mov
inc
xlat
sub
movsl
repz
xor
sarl
mulb
daa
lods
test
bound
mov
or
adc
jle
adc
scas
xor
push
inc
mov
push
das
dec
dec
push
shr
aad
inc
dec
adc
or
inc
push
pop
ss
add
scas
adc
sub
ret
mov
adc
inc
nop
popa
out
adc
adc
xor
sbb
fstl
mov
xchg
mov
cmp
xor
aaa
leave
push
adc
sahf
sub
arpl
inc
add
or
std
push
std
aaa
mov
ret
sbb
andl
out
jge
mov
ss
xor
dec
and
nop
dec
pushf
fiaddl
and
pop
insb
in
mov
je
popf
dec
les
fwait
or
les
lds
push
and
leave
jns
pop
leave
push
jecxz
mov
imul
and
fildll
call
or
fsts
imul
movsl
dec
mov
or
add
mov
outsl
insb
push
das
inc
frstor
mov
decb
inc
xlat
shlb
adc
movsb
xor
mov
xor
lods
xchg
mov
sbb
unpckhps
add
mov
in
sahf
cmpsb
repz
nop
mov
repz
fldt
sub
pusha
ds
and
jne
lds
loop
stos
dec
push
mov
movsb
sub
pop
cmp
mov
insl
mov
les
cmpsl
inc
inc
inc
mov
mov
das
adc
outsl
inc
sbb
fstpt
xor
lahf
add
inc
jnp
xchg
add
testl
sub
and
adc
test
or
jae
ja
and
pushf
in
mov
adc
inc
dec
fsubrs
jne
in
xchg
mov
je
mov
dec
mov
pop
jle
mov
pop
leave
stos
xor
dec
ljmp
mov
mov
sub
fs
ja
sbb
lods
clc
fs
incb
adc
push
fcoms
sbb
mov
fucomp
fidivrs
iret
lcall
in
in
add
pop
outsl
in
mov
fstps
xchg
decb
sub
shr
out
cmp
push
lahf
jg
pop
cli
push
dec
test
clc
mov
and
push
xchg
jmp
aas
cmpsl
inc
aam
adc
lret
xchg
mov
push
xchg
or
and
and
or
adcb
pop
push
mov
lret
jb
pop
xchg
adc
sub
xchg
cli
cmp
sub
orb
inc
fwait
and
mov
pop
xor
mov
dec
rclb
xlat
pop
add
mov
mov
stos
push
mov
test
cmp
cmc
xor
xchg
repz
xor
repnz
pop
ja
ret
inc
es
jno
rolb
cmpsl
es
lods
dec
inc
push
outsl
cmp
mov
mov
inc
push
sbb
out
icebp
test
pop
mov
dec
lcall
sub
lahf
xchg
cmc
ds
jb
or
xor
jns
lods
movsl
mov
sub
aas
shll
addr16
out
roll
sub
adc
out
addb
out
aam
or
dec
jo
or
pop
cmp
xchg
lret
jmp
add
pop
mov
aad
xor
dec
daa
test
outsl
mov
ret
mov
out
xor
jne
test
leave
imulb
xor
xlat
jbe
fnsave
mov
jg
es
stc
fimuls
roll
es
mov
cmpsl
xchg
cltd
fstpl
xchg
imul
cmp
mov
and
lahf
sbb
pop
imul
mov
push
cmp
inc
jp
sbb
xor
cltd
mov
jp
lahf
pusha
push
lods
dec
push
mov
cwtl
aaa
jle
fldz
aas
pusha
dec
ja
mov
jns
adc
dec
or
cmp
xchg
repnz
mov
mov
xor
sub
sti
stos
test
cmc
test
imul
in
sbb
jns
pop
pop
scas
sbb
adc
test
int
sub
dec
outsb
jmp
adc
out
sbb
push
and
psraw
mov
out
cmp
cmp
add
sarl
push
pop
popf
in
subb
mov
fdivp
lret
mov
jmp
aam
push
mov
sarb
mov
cmpsb
mov
jecxz
cli
lds
xor
dec
jge
sbb
jo
jecxz
mov
clc
xchg
mov
sub
loopne
or
scas
push
notb
jne
and
mov
pop
fstl
cmp
and
loopne
in
or
jns
fcomps
sub
adc
add
or
sub
fwait
adc
mov
ds
sbb
inc
rclb
pop
push
mov
fmull
push
rorb
mov
arpl
lahf
lret
adc
and
mov
dec
sbb
fmull
loope
xchg
dec
pop
pop
sbb
lock
out
cltd
stos
stos
inc
sub
shlb
cwtl
leave
add
push
repz
pop
push
fs
aad
push
dec
sub
mov
adcl
add
addb
loopne
add
ret
add
add
sbb
push
fcomps
cltd
cwtl
stos
add
xchg
out
das
out
enter
mov
iret
ja
adcl
js
lahf
int3
cld
sbb
ret
pop
pushf
outsl
mov
add
sbb
hlt
shlb
xchg
adc
add
lret
test
scas
adc
aas
lahf
mov
sbb
ror
jbe
sbb
or
hlt
in
fcmovu
repz
xchg
loope
mov
int3
jl
je
xchg
xchg
xchg
inc
sahf
lahf
mov
fcompl
fs
outsl
cmc
inc
pushf
test
adc
sub
enter
pop
loopne
inc
loopne
lcall
sti
dec
mov
cli
mov
and
lahf
push
push
loope
pop
mov
jne
insb
xchg
test
jp
lea
lahf
mov
mov
dec
and
outsl
push
jecxz
sub
jb
in
adc
cmovne
popf
dec
sub
sub
stc
mov
cmp
cltd
pop
xor
cmp
cmp
mov
repnz
sarb
aad
mov
jp
xor
add
addb
push
test
filds
lahf
adc
lcall
adc
sub
mov
out
add
out
jne
loope
or
sahf
push
bsf
cmp
out
lods
push
add
adc
jmp
pop
fstpt
pusha
xchg
shll
int3
mov
jne
repz
ds
push
adc
or
daa
jge
cld
daa
je
adc
push
in
repz
testl
pop
cs
inc
and
sbb
cmpsb
mov
aam
push
mov
xor
fsubs
mov
mov
xor
mov
xchg
imul
jno
xchg
lods
push
cmpsb
pusha
out
jge,pn
nop
daa
int3
enter
clc
gs
out
arpl
out
jo
pop
sbb
loopne
dec
pusha
or
rcrl
lock
pop
lahf
int3
and
jg
mov
test
ljmp
push
and
mov
aaa
adc
or
xor
idivb
mov
fs
jmp
ljmp
xchg
pop
and
sub
jp
loop
cld
add
xchg
enter
adc
xchg
xchg
pop
adc
and
mov
mov
movsb
adc
push
pop
loopne
fimuls
or
mov
push
sub
push
test
xchg
adc
nop
or
push
in
mov
test
cmp
mov
and
rolb
movsb
cmp
mov
pop
jnp
mov
adc
pop
in
mov
mov
xchg
adc
cmc
inc
inc
out
sub
xchg
jle
pop
mov
out
push
sar
popf
rorb
shrl
xor
pop
mov
lret
mov
and
cmp
cli
int3
int3
pop
jg
adc
stos
jecxz
sub
inc
mov
divb
mov
jmp
dec
jge
pop
gs
movsl
or
stos
aas
stos
out
das
dec
stos
inc
jne
jmp
inc
mov
adc
stos
pop
fs
inc
insb
mov
fistps
rcll
mov
adc
inc
and
daa
inc
add
cmp
mov
cmp
sbb
sbb
outsl
sub
insb
outsb
xchg
cwtl
sub
pop
push
xor
loope
mov
cli
sub
repz
movsb
stos
mov
push
jne
add
es
jmp
adc
jle
xor
mov
ljmp
mov
int
pop
pop
movsl
stos
or
lods
push
mov
lds
daa
mov
data16
lds
mov
loopne
test
and
and
cwtl
xchg
dec
pop
lea
outsl
push
push
repz
lret
add
jae
adc
push
sbb
lahf
add
cli
adc
xor
insb
adc
jno
cmpb
aam
jbe
and
cld
push
lock
inc
push
dec
out
ret
in
cs
lods
imul
rcll
adc
lods
mov
add
mov
sub
inc
sub
in
xor
loop
fsubrs
jmp
lods
rol
mov
xchg
pop
je
xchg
adc
cltd
hlt
pop
js
jae
pop
loop
lock
jp
dec
stos
xor
xlat
aad
jno
and
aam
stc
mov
mov
mov
cmpsb
js
lret
pop
push
lods
add
mov
test
jo
push
or
test
cmp
mov
xchg
in
xor
and
xchg
sbb
mov
cmp
jno
out
dec
push
and
jno
cmp
mov
and
dec
out
add
inc
addr16
xchg
or
xchg
xor
and
test
xchg
in
or
mov
clc
in
push
or
fistl
arpl
mov
jecxz
xchg
mov
mov
push
pop
jge
ds
push
cmpsb
hlt
out
mov
or
xchg
mov
fldenv
dec
push
mov
mov
jae
enter
cmp
mov
xchg
mov
insb
int3
adc
pusha
fists
out
out
cwtl
and
js
add
lret
pop
out
and
sub
aam
fldenv
mov
icebp
and
push
lret
xchg
mov
jp
mov
je,pn
lods
loop
or
push
pop
fldenv
aam
jge
pushf
insb
mov
lret
jno
cli
dec
scas
shlb
lret
jbe
out
int
dec
sbb
out
lods
jg
pusha
xor
xor
in
imul
adc
daa
idivl
imul
push
andb
sbb
mov
mov
mov
jle
aad
pop
fcomps
sub
or
mov
fistpll
dec
push
xor
out
jae
out
mov
lods
callw
movsb
subl
jb
inc
out
push
clc
cmp
pop
mov
add
popa
push
xchg
daa
mov
sar
sbb
jl
inc
fs
out
shll
xor
jbe
loop
nop
jl
mov
cltd
insl
jmp
jne
add
sub
sbb
ss
or
in
lcall
mov
insl
mov
jno
mov
fdivs
inc
cmpsl
shl
xor
jbe
rolb
lods
xor
ret
subl
lods
mov
sbb
loope
pop
mov
int3
pop
pop
sbb
push
jecxz
sub
in
shrb
pop
in
sub
roll
popf
out
out
daa
jmp
mov
out
mov
out
aaa
dec
inc
add
fisttpl
push
in
imul
aas
and
or
mov
mov
add
lock
lcall
testb
mov
pmaxsw
adc
sub
cmp
shll
or
adc
pop
xor
lahf
es
adc
push
out
cmp
mov
push
sbb
icebp
cmp
dec
push
pop
sub
jecxz
adc
ficomps
mov
dec
add
sbb
and
fistpll
xchg
jne
xor
ret
data16
es
jns
mov
std
int3
fisubrs
mov
inc
sub
xchg
sbb
xor
fmull
clc
cli
sub
enter
ljmp
add
push
scas
sub
jbe
cmp
jns
xchg
mov
js
stc
mov
push
bound
cltd
jg
push
jne
pop
dec
jae
push
sbb
sub
aad
rorl
imul
and
jbe
out
test
add
nop
xchg
push
iret
xor
test
mov
fsubrs
ret
cli
leave
pop
imul
stos
and
xor
push
adc
ret
push
xor
out
int3
mov
jp
dec
dec
cs
jno
idivl
mov
dec
dec
jle
add
loop
shrl
adc
pop
or
aaa
cmp
leave
add
sub
jmp
cmp
pushf
addr16
loope
in
out
out
mov
push
inc
mov
mov
lret
repz
dec
jb
mov
ljmp
and
xor
jne
mov
sbb
jno
push
push
mov
xchg
mov
mov
push
js
add
mov
fisubrl
push
sbb
cmc
emms
into
lods
pushf
ja
push
repnz
jo
pusha
sahf
leave
in
add
stos
push
inc
sub
repnz
mov
stos
lods
pop
mov
out
stc
ficompl
in
and
and
cmp
push
nopl
arpl
pushf
sbbb
sub
push
ret
and
mov
mov
into
jg
lahf
xor
adc
adc
loopne
std
movsl
push
pop
inc
ret
nop
sub
xchg
repnz
iret
sub
in
cli
or
sub
inc
pop
inc
mov
lcall
ss
pop
inc
pop
insl
xchg
lea
sub
es
outsb
mov
push
jecxz
insb
push
rcl
jno
inc
sbb
int
cmpsl
dec
or
pop
loopne
pop
push
js
arpl
sub
xchg
mov
idiv
xor
inc
outsl
movsb
jecxz
pop
or
out
jmp
lods
cmp
mov
and
lcall
imul
pop
sub
cld
push
adc
movsb
xor
pop
lahf
adc
daa
jnp
sub
adc
inc
mov
lds
addr16
seto
fwait
xchg
jnp
inc
and
insl
adc
push
mov
sub
sahf
add
sub
loope
repnz
fiadds
lcall
mov
mov
push
shll
dec
sub
pushf
push
or
outsb
scas
and
mov
pop
pusha
fcmovne
and
rcl
in
enter
push
xlat
push
dec
and
sub
movsl
and
jecxz
ror
mov
sbb
les
cmpsl
push
add
scas
adc
jbe
mov
cltd
jae
flds
mov
cmpsb
leave
pop
mov
fcompl
push
sahf
ret
les
and
lea
movsl
sub
in
shrl
stos
shr
out
ljmp
mov
mov
lds
or
fimull
jp
ja
mov
bound
cmp
jno
add
in
loopne
ffree
ret
repz
jmp
addr16
cltd
sbb
sub
test
int3
cwtl
lods
iret
daa
incl
out
and
cld
push
shl
cmc
sbb
cmp
cmp
rcll
in
test
test
jns
push
es
sbbl
call
shrb
inc
and
push
lret
call
insb
xor
add
mov
or
or
adcl
movsl
popa
inc
into
out
inc
nop
mov
add
leave
sti
add
mov
cmp
shlb
out
fcompl
dec
push
jb
mov
cmp
jp
xchg
push
xchg
out
xchg
insl
ja
xor
scas
movsl
mov
or
js
jl
or
lcall
and
cmp
push
ds
push
push
movsb
outsl
lds
mov
cmp
mov
int3
add
repnz
in
mov
push
pusha
decb
sub
loope
push
mov
xchg
sti
xchg
push
xlat
lods
lea
in
xor
repnz
inc
xchg
fadds
loope
stos
in
add
dec
ja
push
push
adc
fiaddl
nop
aam
jbe
mov
inc
lock
xor
mov
add
sbb
mov
push
es
and
push
andb
mov
sahf
and
pop
add
push
enter
inc
addr16
popf
in
insb
test
into
dec
mov
adc
mov
cwtl
lods
hlt
xor
xchg
popa
pop
jae,pn
xchg
int3
rorb
lea
cmpl
in
call
xchg
ret
mov
mov
fimuls
shufps
xchg
std
add
mov
test
sbb
pop
and
ret
xchg
xchg
sahf
dec
icebp
test
sbb
add
rcrb
dec
scas
arpl
pop
jge
xor
mov
stos
lock
aad
jl
xchg
xchg
rcrl
arpl
add
dec
in
and
ret
cmp
fisttps
stc
in
and
xchg
out
mov
ljmp
adc
push
sbb
mov
scas
test
xor
bound
xchg
stos
cld
cmpsl
add
lahf
cmp
sbb
in
push
aam
addr16
in
shll
dec
sub
push
or
sub
lahf
into
punpckhwd
cmpsb
aaa
subl
aas
jge
push
mov
cli
mov
into
push
dec
or
popf
jns
inc
xchg
std
test
mov
ret
mov
jae
fildl
mov
cmpsb
pop
or
xor
dec
arpl
stc
jbe
jp
mov
jl
dec
push
cmp
stc
enter
inc
sbb
and
daa
insb
ds
outsb
stos
adc
xor
call
push
adc
dec
or
mov
cmp
sti
jg
push
add
sub
jnp
or
or
adc
adc
popf
mov
and
adc
pushf
imul
repz
cmp
lcall
dec
sbb
daa
push
dec
dec
pop
sbb
out
stos
int
pop
dec
pop
addr16
mov
pop
lods
xchg
jo
mov
or
add
mov
jae
imul
jg
das
hlt
mov
addl
xchg
adc
mov
mov
inc
scas
dec
mov
jg
repnz
mov
ds
push
imul
jns
pop
cmp
in
sub
out
imul
and
or
daa
add
jmp
testl
rcrb
pop
jo
pop
cld
mov
popf
bound
pop
sub
xor
movsl
or
and
pop
mov
icebp
add
jnp
scas
push
dec
lods
mov
popf
adc
test
in
jge
loopne
cwtl
rcrl
pop
sbb
into
add
adc
push
jne
jbe
pushf
add
pop
out
mov
inc
lcall
idivl
in
dec
orl
shrb
shll
test
stos
xor
cmp
inc
mov
jae
in
leave
mov
cmp
stos
sub
inc
nop
int
movsl
sarl
and
sub
inc
jg
sbb
stos
es
fistpl
mov
test
mov
xchg
add
pop
insl
scas
xor
jmp
mov
addl
mov
jmp
daa
es
cmp
mov
mov
mov
test
pop
mov
pop
pop
lock
push
mov
cmp
cmp
cltd
outsb
inc
test
dec
dec
dec
and
xchg
addr16
mov
bnd
sahf
cwtl
jbe
or
decb
movsl
out
aam
jp
and
fidivrl
addr16
lret
and
adc
outsb
stos
mov
dec
bound
sbb
test
out
add
repz
sti
in
pop
aad
daa
pop
cli
jmp
pop
mov
imul
mov
int
sbb
and
in
inc
inc
in
sbb
add
sbb
push
mov
scas
mov
xchg
dec
push
and
mov
pop
repz
cmc
aas
or
pusha
orb
hlt
cs
sahf
jle
jecxz
push
push
push
push
pop
iret
pop
xor
into
inc
cli
inc
add
mov
fcmove
push
mov
dec
pop
sub
or
aam
testl
sbb
jno
nop
iret
mov
jbe
sbb
pop
mov
inc
aas
adc
xor
sbb
xchg
pop
into
push
ja
sub
out
test
outsb
shll
or
push
clc
sub
loopne
push
push
sti
push
test
push
or
movsl
xchg
arpl
push
mov
stc
es
mov
outsl
negl
out
arpl
sub
inc
mov
insb
imul
call
loop
stos
xlat
inc
hlt
lret
insl
imul
inc
push
lret
sub
and
pop
cmpsb
jne
xor
adcb
mov
or
mov
dec
fistpl
sbbl
je
sbb
fwait
or
fdivrs
mov
mov
sub
cmp
out
dec
mov
sub
ljmp
out
ljmp
inc
rcr
xor
jl
inc
rcr
stos
enter
cs
dec
or
fisubrl
push
jo
pop
sahf
pop
or
and
iret
mov
das
inc
bound
mov
mov
and
jne
jb
add
lret
mov
adc
dec
rcll
add
outsl
push
mov
cli
sub
mov
mov
add
jecxz
sar
test
test
out
addr16
push
loope
jg
add
cwtl
xor
rcr
out
lret
ss
xor
pop
loope
jmp
scas
jge
sub
xor
jne
stc
sbb
les
and
and
stos
imulb
stos
pusha
leave
das
loop
insl
popf
mov
sub
leave
shll
int
sub
rep
lods
pop
mov
stc
rorl
adc
scas
adc
mov
xor
pusha
sbb
fidivrs
sub
out
into
inc
dec
pop
sbb
icebp
leave
push
push
xchg
xchg
icebp
xchg
shrl
pop
mov
loop
and
inc
psraw
add
lret
int3
lods
dec
sbb
push
or
jne
adc
mov
into
adc
dec
dec
xor
mov
push
es
dec
adc
jmp
inc
insb
xor
inc
loopne
mov
pop
dec
and
mull
fnstcw
mov
das
sarl
xchg
push
pusha
xlat
lods
std
ror
and
push
mov
xchg
xchg
mov
int3
jae
xor
xor
inc
fwait
push
setp
pop
popf
pop
inc
fcmovnb
add
jns
push
icebp
insb
loope
jmp
and
fidivrs
loope
mov
sbb
mov
or
inc
imul
sub
xchg
dec
cmpsb
mov
sbb
push
cmp
jns
sbb
adc
sbb
mov
lds
dec
repz
mov
push
xchg
sarl
push
sub
jle
xor
mov
jg
add
out
xchg
cltd
insl
and
sub
push
pushf
into
jmp
out
sbb
imul
sbb
lcall
jae
popf
and
inc
stos
imulb
mov
xorb
lcall
xchg
and
xchg
xchg
mov
mov
cmpsl
pop
pop
dec
ljmp
out
inc
and
xchg
loop
cwtl
test
aad
xor
pop
je
inc
cmp
inc
xor
fstpl
stos
lock
ret
stos
add
into
int3
cmp
mov
mov
dec
adc
xchg
and
ljmp
inc
add
add
xor
lea
clc
ja
aam
cmc
and
pop
jno
mov
movsb
inc
mov
mov
lds
out
ret
data16
movsl
pop
push
cmp
lds
in
shll
data16
mov
jnp
mov
subl
std
insb
pop
xchg
add
sub
pop
stc
in
dec
inc
or
les
frstor
mov
mov
loop
sbb
jg
sub
fdivs
sahf
lods
cmp
or
jbe
test
push
out
jno
sbb
sub
sbb
sbb
arpl
out
xchg
repnz
jns
add
xor
mov
orl
in
push
pop
sbb
sbb
cmc
push
int
adc
pushl
jno
arpl
push
mov
rcl
pop
loopne
icebp
cmp
lret
jecxz
notl
dec
mov
aaa
dec
sub
push
movsb
adc
and
popf
pop
arpl
iret
mov
mov
push
inc
testb
fadds
inc
dec
mov
mov
jmp
pop
cmp
add
into
clc
into
push
fcmovb
mov
roll
outsl
addr16
mov
xor
hlt
adcl
shr
jmp
xchg
clc
mov
lds
jbe
mov
jge
jecxz
push
mov
push
aam
insl
xchg
xchg
xor
outsb
orl
xchg
sbb
cmp
push
subl
aaa
jmp
jmp
xor
das
rorb
mov
xchg
pop
iret
push
push
hlt
ss
mov
in
and
xor
bound
jp
jecxz
cli
ja
xchg
lods
aam
and
out
shlb
pop
dec
sub
aas
push
ret
sub
je
jg
cli
add
cld
pop
xor
dec
add
push
sub
dec
jne
pushf
mov
ds
jne
loopne
lock
jne
imul
add
mov
vcomisd
jo
inc
inc
jg
jmp
push
and
aas
jb
insl
rcrb
movsb
mov
and
lret
and
insb
outsl
nop
jns
lock
or
adc
loope
sar
scas
fstpt
adc
mov
xchg
lea
sub
daa
mov
and
mov
push
int3
aam
mov
mov
negb
or
and
outsl
pop
add
loope
gs
or
mov
popf
dec
mull
stc
pushf
push
into
cltd
or
out
shll
dec
sarb
mov
xchg
call
lods
xchg
fdiv
or
fiaddl
xor
xor
ret
push
insl
js
iret
inc
sbb
hlt
ljmp
jg,pn
inc
sbbl
iret
arpl
or
mov
jnp
cmp
lds
mov
es
mov
inc
pop
sub
out
mov
adc
mov
adc
lea
bnd
pop
jns
and
mov
dec
sub
cmp
xchg
or
pop
ret
sbb
jge
lahf
jmp
subps
stos
xor
push
out
push
jmp
inc
mov
js
xchg
stc
xor
jmp
ficompl
lea
cmp
xlat
or
test
dec
out
and
data16
rorl
xchg
fwait
out
xor
or
mov
lea
test
ds
dec
fdiv
out
mov
or
pop
jmp
movsb
or
dec
ljmp
pop
xchg
fs
in
test
push
in
cmp
leave
jmp
inc
add
fwait
leave
mov
aas
fbld
adc
mov
je
jmp
pop
sti
jo
daa
mov
cmc
or
xchg
dec
sub
out
outsl
sub
sbb
fmul
insb
mov
cmpsb
mov
jae
pop
xchg
jge
cld
sbb
in
gs
mov
pusha
fdivrs
and
cli
cmp
cmp
aaa
test
fsubrs
rolb
test
ret
sahf
mov
sub
cmp
xchg
sub
xor
sbb
lock
sub
cmpsb
loopne
cli
out
sub
loope
call
xchg
dec
cmpsl
das
pushf
jns
pop
push
sbb
pop
outsl
jmp
ret
pop
imul
imul
mov
xchg
jg
repnz
jae
dec
cs
shl
imul
lcall
repz
loope
cmp
and
jl
mov
pop
leave
std
or
pop
imulb
cmp
lea
gs
in
adc
sbb
mov
pop
and
jmp
jo
daa
jae
stos
add
mov
out
movsl
in
mov
test
sbb
cwtl
ret
insb
adc
inc
sbb
mov
mov
sub
popa
ret
xor
sbb
fs
jge
dec
sub
xchg
xor
roll
fwait
ss
pop
dec
cs
cmp
inc
test
notl
aas
out
jb
dec
add
fimull
std
dec
sub
pop
insl
lock
mov
jbe
out
std
in
lret
sarl
and
and
lahf
in
inc
mov
es
and
es
dec
pop
aad
push
dec
jg
adc
nop
inc
cmc
in
aaa
jns
jae
rorb
xor
iret
lods
lods
pusha
scas
scas
daa
cmp
dec
out
vmptrst
pushf
xchg
pop
jno
rorb
push
jno
cmp
dec
dec
addr16
scas
out
insb
pop
shlb
or
inc
fcom
stc
loopne
mov
in
sub
arpl
jl
adc
and
mov
testl
mov
sbb
lcall
fmul
or
adc
dec
or
into
add
movsl
shll
xchg
cltd
popf
cmp
pop
jo
lock
pop
leave
cmp
int3
stos
fs
insb
xchg
fimuls
push
sub
fistpll
dec
out
adc
shll
lahf
pusha
lock
lea
sub
mov
or
shrb
lret
ss
mov
mov
nop
fistpl
push
cmpsl
sahf
aam
push
fidivs
inc
and
int3
fldenv
fiadds
imulb
fiaddl
and
pop
pop
outsl
mov
sbb
divb
and
and
pop
mov
sbb
pop
jbe
dec
repnz
add
push
or
jns
jno
adc
mov
xchg
or
dec
pop
insl
cmp
adc
adc
int3
fisttpll
shlb
mov
sbb
xchg
add
and
pop
and
adc
icebp
jg
sub
dec
push
aad
mov
in
loopne
inc
fwait
mov
ds
jo
jge
outsl
or
cwtl
xchg
ljmp
jle
test
stos
je
push
sub
inc
jle
push
xlat
sarl
aaa
mov
sbb
dec
shr
cltd
xchg
pop
mov
sahf
subb
xor
add
jmp
ret
and
and
pop
lock
xor
add
imul
pop
dec
mov
fimull
adc
and
inc
push
ds
int
or
cmc
xchg
jecxz
out
aas
insl
dec
imul
outsl
scas
aaa
in
stc
adc
push
scas
lcall
repz
mov
out
pop
std
dec
test
popf
popf
push
mov
lds
and
cli
dec
in
aam
jae
repnz
push
push
dec
testb
push
sbb
ljmp
add
pop
insl
leave
sub
jle
je
out
and
dec
sub
xlat
push
popa
add
test
fsubrl
jns
mov
push
mov
pop
test
in
pop
gs
out
je
rorl
push
scas
inc
jb
sub
aad
pop
adc
mov
test
adc
and
adc
outsb
xchg
pop
adc
movsl
daa
in
test
fbstp
clc
inc
sbb
sbb
pop
cmc
rorl
insb
sahf
jmp
and
adc
scas
cmpsb
fcmovbe
shr
cs
shlb
sub
test
cld
movsl
mov
add
mov
jp
lea
xor
std
jge
aaa
lods
jne
cld
push
js
ja
adc
aam
leave
nop
call
jb
jb
fcmovne
or
xor
pop
push
pushf
sbb
in
xor
addl
sbbb
outsb
xor
in
loope
mov
fcomps
lods
xchg
pop
aam
xor
outsl
or
xor
lahf
dec
frstor
jns
mov
mov
bound
add
in
mov
ss
mov
cld
mov
aaa
idivb
das
xchg
lock
pop
xor
addr16
cld
jno
in
cmp
cmp
or
add
jnp
fs
pusha
sub
sarb
or
jmp
xchg
jle
scas
clc
imul
inc
and
sub
jns
dec
shrb
cs
mov
jo
int
bound
imul
insb
lret
outsl
xchg
iret
iret
orb
stos
pop
push
dec
mov
push
adc
adc
icebp
xrelease
jecxz
imul
stos
push
insb
cmpsb
mov
ljmp
clc
imulb
pop
and
dec
push
sbb
mov
or
sub
test
stc
loopne
xor
jno
or
in
cmp
mov
dec
icebp
scas
out
dec
push
push
cwtl
ja
arpl
and
fdivr
rcrb
rorb
dec
add
push
je
out
fdivrs
xchg
inc
push
jae
mov
loope
jnp
cmp
test
cmpsl
dec
scas
xchg
std
mov
adc
xor
psllq
sbb
xor
mov
popa
push
mov
add
test
ret
pop
ja
xchg
out
push
push
pop
and
cmp
pop
lret
xchg
push
loope
fisttpll
mov
fisttpll
push
aas
mov
xchg
loop
inc
jno
pop
jg
push
aam
addl
and
xor
inc
repz
add
add
mov
test
and
cld
or
push
mov
inc
out
unpckhps
hlt
push
repnz
icebp
enter
xchg
test
aas
pop
and
and
pushl
jne
stos
gs
mov
push
adc
xor
pop
insl
or
pop
xor
testl
xor
insl
xlat
sub
mov
outsb
stos
pop
mov
adc
test
out
dec
mov
cmp
xchg
lahf
rclb
xchg
dec
xor
in
jbe
fcomps
fistpl
fstl
je
cmp
es
loopne
js
jle
jg
push
xchg
ds
cmc
pop
and
cmp
inc
and
scas
in
add
jg
out
sahf
addl
mov
pop
push
gs
xchg
pop
lds
jmp
mov
ret
push
jno
ds
rcrl
ret
testb
pop
imul
movsb
and
mov
jo
repnz
mul
shlb
dec
jno
lods
push
dec
dec
movsb
mov
call
rcrl
mov
icebp
ret
inc
pop
mov
cmp
sti
repz
cli
cld
in
pop
cmc
repnz
xlat
out
cwtl
notl
add
cmp
or
aas
dec
loop
pop
incb
rcll
mov
out
lret
fwait
inc
push
add
adc
cmpsl
mov
popl
into
lods
fistpl
or
iret
push
pop
insb
arpl
insb
xor
popl
inc
pushf
adc
push
sub
test
aas
push
xor
add
mov
adc
mov
xor
insb
ljmp
out
fwait
sbb
ds
lock
clc
in
stos
outsb
pop
aaa
fdivl
xor
loope
push
mov
jbe
jecxz
and
int3
clc
cmc
jno
std
mov
in
push
cwtl
adc
xchg
xchg
inc
nop
rolb
movsb
shl
frstor
jns
rep
xor
mov
xchg
cwtl
data16
insl
call
ret
mov
mov
and
sbb
incl
mov
lock
or
inc
ljmp
out
leave
push
xchg
pusha
xlat
jp
bound
das
ret
mov
xchg
dec
mov
sbb
jne
dec
imul
push
adc
insb
data16
cmp
and
jae
inc
cli
inc
push
outsl
aas
js
popa
fsubrl
nop
cli
daa
outsb
fsts
idivb
js
je
in
loope
mov
ret
movsb
insb
jnp
sbb
sbbl
stos
jns
adc
enter
push
jge
movsl
andb
addb
lea
mov
test
bound
add
fildl
mov
andb
xchg
push
push
lcall
lcall
in
int3
imul
loop
test
pop
test
aaa
and
sub
jo
dec
dec
stos
call
imul
lds
aas
push
fs
scas
pushf
in
ss
scas
mov
add
mov
enter
sub
std
popa
filds
push
test
mov
fdivrl
sbb
mov
add
lahf
nop
ret
inc
data16
popl
jle
cmpsb
xchg
mov
mov
out
cld
mov
aam
mov
inc
add
or
repz
add
mov
cmpsb
pop
mov
dec
inc
shr
call
andl
ret
movsl
jno
mov
pusha
mov
xchg
mov
and
call
xchg
fcomip
push
pop
add
inc
mov
fnstenv
inc
jne
outsb
push
inc
mov
cmpsb
out
in
rclb
dec
sti
sbb
push
les
add
jo
xchg
enterw
adc
mov
gs
jno
in
lret
or
or
scas
int
push
xchg
push
push
mov
xchg
into
repnz
or
outsb
or
decl
dec
push
js
dec
scas
sub
xor
push
or
bound
xchg
push
fldenv
cmc
lods
xchg
pushf
cmpl
fildl
inc
dec
lcall
mov
jge
cmp
addr16
mov
xchg
andb
xchg
pop
orb
push
and
adcl
mov
pop
stos
loope
mov
xor
ljmp
pop
gs
add
scas
insl
inc
daa
xor
and
movsl
aad
jle
mov
pop
xchg
cmp
pop
in
jne
dec
inc
mov
add
rol
add
gs
xchg
fldenv
mov
pushf
jb
test
sub
adc
xor
test
or
jne
fadds
and
decb
xor
ja
pop
add
cmp
repz
fsubl
iret
mov
adc
insl
leave
mov
inc
push
cwtl
insl
cmp
lret
ficoms
xchg
push
call
jmp
push
les
in
jno
dec
mov
pop
daa
and
out
loop
out
rorb
jle
mov
outsb
adc
hlt
mov
pop
mov
or
rorl
lret
jp
sub
add
lock
mov
or
push
std
aas
xor
int3
pushf
int3
sbb
insl
pop
ljmp
shll
lret
call
fidivrl
ffreep
popa
xchg
in
jmp
mov
mov
pop
add
pop
das
dec
leave
mov
sub
sub
push
adc
pop
lahf
aam
mov
jge
notl
fidivs
or
push
call
mov
stos
mov
ja
xor
int3
sbb
shlb
add
fwait
and
mov
or
lods
sub
in
cmc
jle
les
call
lret
mov
dec
mov
aaa
mov
dec
mov
stos
mov
fisttpl
mov
xchg
sti
jmp
xchg
sub
push
ror
arpl
cmp
xor
and
test
rolb
jo
aad
movsb
jne
push
add
leave
jl
adc
cltd
or
mov
lcall
pop
dec
xor
aaa
repz
ret
aaa
mov
popf
and
cmp
or
pusha
faddl
cmp
cld
cltd
pop
rcrb
push
pop
xchg
xchg
int
add
mov
or
mov
adc
dec
ds
fidivrs
in
mov
sub
ret
sub
mov
mov
push
popf
dec
dec
mov
repz
pop
imul
dec
mov
fcompl
or
sub
lods
loopne
pushw
or
outsl
and
jmp
mov
jae
cld
xchg
push
add
ret
mov
jp
and
repz
xchg
and
cmp
and
jle
mov
jg
mov
out
dec
out
lds
add
adc
sti
push
pushw
loopne
pop
inc
xor
add
sub
mov
adc
jno
push
add
push
js
sbb
lret
movsb
xor
jmp
push
aaa
cmp
or
add
mov
popl
icebp
fnsave
mov
xor
push
js
retw
repnz
andl
in
and
jge
sti
mov
scas
jmp
mov
mov
cmp
jne
std
or
loope
lret
or
aas
jno
xchg
mov
and
jle
sahf
xchg
add
ss
aas
or
xchg
fldcw
mov
pop
push
out
cmpsl
lahf
mov
in
imul
out
daa
inc
cmpsb
mov
jb
cmc
jecxz
adc
insl
fisttps
cmp
push
icebp
nop
lea
and
sbb
xchg
lods
dec
cmp
xor
loopne
outsl
or
lods
jle
ret
iret
dec
scas
jmp
outsb
jg
lahf
subl
cmpsl
jg
leave
out
sarb
inc
andb
add
mov
outsb
jae
arpl
cwtl
lret
fwait
cmp
lods
cmp
jbe
les
xor
stos
adc
cmp
aaa
pop
mov
pop
insb
stos
dec
pop
push
cld
mov
js
mov
divl
imul
inc
and
pop
cmp
testb
scas
insb
sbb
xchg
adc
pop
push
push
iret
scas
sahf
rcl
cmp
adc
les
out
cmpsl
test
fsts
and
mov
scas
mov
dec
inc
fbstp
addr16
std
mov
push
push
inc
ja
insl
insl
pushf
push
les
jbe
adc
add
mov
fistpll
shlb
push
shr
mov
shll
push
scas
xor
ss
inc
and
xchg
or
aad
dec
adc
xlat
out
adc
outsb
out
hlt
jl
in
fimull
test
neg
pop
jno
into
add
movl
je
or
enter
adc
add
dec
push
push
enter
push
pop
jbe
xchg
movsb
imul
and
iret
xor
sub
sbb
movsl
adc
iret
scas
mov
inc
jp
or
sbb
mov
adc
dec
pop
mov
mov
in
lea
pop
in
rcrb
es
aad
fwait
out
outsl
imul
addr16
inc
gs
out
lahf
adc
leave
popf
clc
dec
mov
loop
insb
or
jo
dec
sahf
and
cvtps2pd
invd
andl
adc
xor
jecxz
scas
push
adc
inc
mov
mov
cmp
inc
or
adc
mov
rclb
cld
sub
cli
and
inc
cmp
repnz
and
gs
mov
sub
jmp
inc
dec
clc
sub
jo
stc
inc
dec
and
repnz
pusha
mov
sbb
inc
stos
daa
xor
jp
in
jne
test
bound
jbe
xchg
bound
inc
jecxz
movsl
adc
lahf
lods
add
bound
les
dec
scas
icebp
dec
jb
je
jle
out
aam
cmc
adc
lret
shll
sbb
test
push
inc
adc
mov
je
cmp
inc
push
loop
pop
clc
mov
rol
mov
mov
mov
jg
mov
lods
shr
leave
mov
xchg
xchg
je
aas
xchg
mov
test
lods
test
sbb
xchg
inc
xor
aad
shlb
mov
push
adcb
popf
inc
int
mov
cmp
addr16
mov
sti
mov
repz
inc
mov
xchg
aas
jmp
rolb
ja
jmp
mov
xchg
lcall
adc
xchg
adc
js
repnz
mov
ljmp
fildl
push
mov
jns
push
sbb
sbb
add
mov
fcoml
pop
fidivrl
out
cmp
adc
or
xor
negl
popf
cltd
bts
sub
or
mov
lods
xchg
aad
xchg
jbe
call
adc
jmp
fistpll
jnp
dec
les
mov
sbb
scas
movsb
push
push
xchg
scas
jns
sbb
mov
inc
lods
jle
cld
mov
cmc
in
inc
stc
pop
fmulp
pop
fmuls
dec
scas
fstpl
pop
xor
or
mov
lcall
cmc
dec
loope
sbb
jmp
sub
pop
iret
cwtl
cmp
sub
enter
cmp
testl
mov
cmp
and
xchg
jno
inc
xor
pusha
aam
pop
mov
das
sbb
movsl
lods
ror
mov
xor
fcomp
in
dec
je
adc
icebp
xchg
fcomp
pop
pop
cmp
inc
mov
add
cmp
lret
push
mov
cmp
mov
out
out
push
xchg
enter
cmp
add
lods
div
mov
mov
ljmp
fwait
pop
dec
bound
jmp
popf
inc
jg
xor
mov
cmpsl
ss
sub
or
jne
clc
les
mov
in
cmp
dec
repnz
mov
lock
or
dec
mov
pushf
xchg
test
out
cmp
inc
fs
push
fsubrl
in
and
add
cmpsl
mov
rcll
fwait
leave
fnstenv
repz
enter
leave
fstpl
daa
xor
xchg
aam
sbb
jp
xchg
stos
aaa
pop
adc
push
jl
push
sub
pop
dec
xor
push
shrb
stc
mov
fstpl
insl
pop
shrb
dec
push
xlat
pop
stc
ficompl
stos
adc
sbb
out
daa
popa
pop
aam
and
push
outsb
mov
cli
jnp
inc
aad
pop
imul
jns
cmpsb
mov
cmpsb
test
out
xchg
sbbl
nop
inc
mov
mov
jmp
dec
ljmp
xchg
fsts
pop
test
popa
and
add
pop
mov
ss
and
ret
call
inc
insl
xor
inc
test
cmpsl
xor
je
xchg
xchg
in
clc
test
insl
jno
dec
jge
jno
pop
fnstsw
xchg
or
popa
lea
xchg
add
and
xchg
dec
and
jp
fildl
jp
insl
adc
in
add
gs
xchg
sahf
pusha
stos
and
mov
repnz
fsts
scas
cmp
sub
arpl
or
or
cmc
rorl
sub
popf
in
inc
mov
data16
nop
add
pop
mov
jmp
in
into
fcmovnbe
sarl
and
mov
icebp
or
xchg
in
int
std
fiadds
mov
jno
and
dec
ret
stos
out
push
adc
jge
pop
std
adc
and
scas
call
mov
aam
clc
stc
jg
or
adc
add
negb
cmp
in
sub
iret
and
add
das
sahf
xor
sarb
fisubrl
mov
jmp
pop
test
leave
jle
or
cmpb
sub
into
aad
ds
addr16
sub
xor
cld
ja
imul
or
cmc
xchg
dec
mov
and
aam
xorl
pop
mov
ror
aas
adc
mov
test
imul
inc
sub
jbe
loopne
out
int3
rclb
inc
push
ds
push
jl
fiaddl
pop
jns
lcall
and
stos
jle
hlt
cld
cmp
mov
shrb
pusha
pop
fstp
popa
cltd
mov
leave
pop
lret
in
outsl
push
pop
pop
mov
pusha
mov
leave
jb
jge
adc
ds
push
sub
push
xchg
jo
fisubrl
xchg
sahf
and
scas
inc
sbb
sbb
jb
pop
mov
inc
js
and
rcrb
into
mov
icebp
push
out
aas
int
das
mov
xor
jecxz
scas
and
pop
jp
inc
mov
ljmp
std
jecxz
leave
negl
add
js
push
inc
or
das
and
fcmovnu
nop
cmc
sbb
inc
and
std
mov
stos
xchg
and
ljmp
jecxz
inc
test
lahf
xchg
ret
ja
jbe
stc
jnp
cmp
in
push
and
stos
dec
add
out
insl
mov
aaa
xlat
dec
and
in
sbb
xor
movsl
outsl
mov
aaa
mov
pusha
pop
fstpl
iret
pop
data16
in
lds
jne
inc
ljmp
fcmovnb
sbb
push
int
cltd
add
add
sub
lcall
cmp
dec
ficomps
push
mov
dec
dec
gs
cmp
sahf
dec
loop
inc
frstor
add
stos
decl
and
gs
mov
add
addl
mov
enter
pushf
rorl
xchg
fadds
repnz
push
cli
pop
in
hlt
mov
ret
pop
dec
sub
popa
cltd
xor
sub
and
pop
or
dec
cltd
out
mov
mov
mov
mov
insb
add
xor
jb
ret
xor
cmp
mov
pop
sub
cwtl
cmpsl
iret
lds
out
bound
movsb
pop
stos
mov
icebp
call
lock
test
sub
xor
mov
loopne
fistl
lret
jmp
pop
in
outsl
popf
fdiv
cld
sub
jo
xor
mov
sub
mov
cmp
xor
xor
mov
pushf
mov
xchg
mov
jbe
cmp
jb
js
clc
adc
pop
popf
ret
arpl
in
mov
mov
loop
or
lods
sbb
pop
jecxz
in
outsb
mov
mov
test
jb
xor
addb
lcall
mov
push
movsb
std
mov
fildll
pusha
push
shl
mov
jmp
scas
loop
jno
ss
mov
iret
das
cmc
jne
imul
mov
sub
out
dec
call
leavew
push
iret
nop
cmc
mov
mov
pop
sti
leave
xorl
ja
mov
out
pop
js
loope
sub
push
cmp
es
and
divl
pop
stc
adc
and
adc
cmpsl
jp
push
in
jl
ss
pop
movsb
cmpb
outsb
sbb
xor
es
in
xchg
outsb
sbb
in
clc
adc
fwait
cltd
add
loopne
adcb
ljmp
out
jle
jle
jp
jo
push
imul
push
iret
fldcw
les
or
push
ss
mov
cmp
mov
mov
call
adc
and
imul
rcll
std
jge
jnp
std
dec
in
adc
jge
mov
mov
clc
push
ljmp
mov
jl
cltd
xor
xchg
addr16
xlat
jl
shr
cmp
push
mov
sbbl
dec
out
leave
sahf
push
pop
enter
data16
popa
in
arpl
roll
imul
mov
mov
negl
dec
xor
insl
and
lret
pop
push
fs
mov
ja
les
push
jl
adc
and
sub
jp
fwait
jae
cwtl
popa
inc
cmp
sub
pop
loope
push
js
xor
cmpsb
dec
lds
stos
push
inc
push
and
mov
popf
stos
mov
add
jge
imul
pop
imul
shlb
and
push
sub
gs
jmp
pop
inc
push
and
gs
lea
jecxz
je
loop
adc
push
arpl
sti
adc
xchg
es
pop
mov
adc
and
clc
push
lods
push
cmovo
hlt
jl
mov
inc
mov
lea
jl
mov
insb
xor
xchg
jmp
mov
lds
inc
pop
shr
pop
ss
jno
and
ret
or
pop
cmp
out
dec
lret
cwtl
pop
add
jno
jg
rcr
xor
aas
ss
movsb
test
push
or
rorb
repnz
inc
push
or
add
std
mov
add
out
add
and
mov
rolb
pop
subl
mov
inc
popf
sbb
sub
ljmp
or
sub
mov
pop
ss
popf
pop
and
insb
scas
arpl
jno
mov
dec
mov
call
stos
incl
mov
inc
mov
cs
sub
lahf
fidivrl
push
andl
adc
jge
addl
sub
dec
in
adc
dec
sub
jg
pop
xor
or
iret
inc
sbb
push
and
lods
sub
push
ljmp
dec
dec
aas
pop
dec
fdivl
sbb
sar
mov
fs
and
xor
push
pop
cmpb
mov
lea
or
xchg
push
clc
mov
jmp
push
outsl
mov
dec
mov
int
xchg
jae
ret
adc
push
adc
cs
adc
push
aaa
pop
loop
lcall
inc
xchg
xchg
xchg
test
push
mov
pop
notb
jl
dec
push
pushf
inc
push
testl
in
and
pop
ds
subl
repz
hlt
pop
outsl
jecxz
lret
inc
pop
xchg
std
iret
sbb
mov
jnp
dec
xor
jo
push
mulb
call
sub
int3
fdivrs
int3
xchg
cmp
inc
inc
mov
or
xlat
sbb
add
pop
repz
out
aaa
test
mov
jne
das
sub
stos
jbe
sbb
mov
enter
mov
add
inc
fmull
mov
cmp
fmulp
push
push
out
btc
loop
push
mov
and
leave
movsl
push
push
loopne
add
push
jns
mov
jmp
pop
lds
dec
cmp
mov
pop
xchg
call
lds
or
pop
xor
xchg
aas
push
lret
push
jge
loopne
fsubs
push
cwtl
lahf
rcr
cmc
inc
cmp
iret
dec
mov
data16
es
ds
add
add
jns
mov
insl
lods
cmp
test
and
sbb
testb
sbb
inc
int
dec
sub
mov
lcall
fstps
push
loop
ljmp
outsl
aad
lods
jmp
sub
push
outsb
aam
cli
mov
pop
jbe
sbb
std
aas
mov
jne
sarb
aam
mov
sar
out
cmp
rcrl
sbb
jne
sub
or
mov
in
or
mov
cmp
imul
xor
movsb
cmpsb
aam
mov
dec
sbb
test
add
sbb
mov
inc
pushf
por
lahf
cltd
ret
ret
call
cltd
test
mov
aam
andl
cmpsl
mov
push
mov
adc
frstor
cmp
js
imul
mov
pop
into
and
jmp
and
fdivl
push
aaa
les
outsl
xor
xor
int
xchg
push
mov
shrl
test
cmpsl
inc
mov
push
xor
add
and
fnsave
out
sub
jecxz
xchg
popf
fmuls
in
mov
adc
xor
mov
mov
xor
test
cmpsb
pop
and
lds
or
ret
js
sub
adc
pop
cwtl
rclb
lret
pop
popf
pmulhw
dec
sbb
bound
loopne
lock
add
inc
in
lods
fstpl
jnp
clc
and
dec
cmp
mov
xchg
xor
enter
js
addl
icebp
std
call
aam
jle
int
leave
mov
mov
inc
push
push
mov
push
dec
in
xchg
fwait
loop
xchg
arpl
inc
inc
mov
jne
cmp
cltd
cmp
add
repnz
or
push
xchg
inc
sub
fmull
cmp
lds
inc
mull
mov
sarl
adc
sub
inc
das
pop
pop
jp
sub
push
in
loopne
cmp
or
addr16
inc
scas
mull
mov
pop
mov
mov
xchg
cmp
test
cli
in
fsts
pop
addr16
add
stc
add
loopne
adc
and
clc
out
subb
outsl
push
push
aam
out
or
or
ret
mov
fs
insb
add
stos
cmpsb
lds
jbe
ja
jb
inc
pop
imul
mov
jp
fs
jl
stos
pusha
negb
dec
push
cmp
dec
xchg
shll
stc
lahf
push
mov
push
in
cmp
outsb
test
jo
mulb
cltd
xor
aas
or
jp
movsb
mov
mov
loop
mov
dec
jmp
pop
mov
lock
xor
and
idivl
mov
lock
in
sbb
ljmp
leave
push
outsl
ja
sbb
mov
add
icebp
insl
shrl
pop
mov
cmpsl
out
pop
mov
mov
add
lds
push
mov
adc
jle
or
aaa
cmp
dec
cli
addr16
bound
sbb
roll
cmpsl
ret
push
mov
fs
add
push
sub
pop
int
ss
inc
sbb
loopne
fwait
decl
jne
mov
mov
xor
shld
in
mov
push
inc
inc
shll
mov
mov
push
scas
jg
xor
mov
push
enter
lods
push
adc
pop
push
add
loopne
pop
and
adc
and
out
sahf
push
add
fwait
mov
sub
sbb
inc
mov
out
das
jb
cld
call
int
sbb
leave
in
xor
cmc
inc
cmp
test
ds
rol
mov
mov
ret
lods
addl
or
pop
leave
and
lahf
adc
add
sbb
bound
inc
in
adc
or
rclb
mov
test
nop
andb
xor
je
fs
or
add
icebp
xlat
leave
xchg
mov
mov
or
addr16
jp
and
daa
mov
pusha
mov
outsl
push
inc
cmpl
lds
je
movsl
and
add
xor
sahf
ret
or
xor
nop
es
pop
sbb
mov
loopne
out
and
aad
or
and
and
xor
subb
in
fstpl
roll
cmc
data16
mov
aaa
cmc
mov
mov
or
pop
pop
sbb
jge
dec
push
adc
mov
daa
sub
jo
ret
mov
scas
test
arpl
mov
mov
lods
cmpsb
lods
fists
lods
ficoml
lds
push
loop
ljmp
xchg
cmp
rorl
lea
and
js
shlb
ret
jbe
insl
xor
rcrl
in
nop
mov
mov
lret
cmpsb
movsb
xor
xor
test
pop
fidivrl
loope
nop
push
sbb
xor
add
scas
call
xor
mov
call
cmp
mov
inc
add
out
cltd
dec
into
sub
aaa
jbe
inc
sub
push
push
lods
sahf
loop
test
cmc
mov
scas
or
pop
mov
dec
mov
sub
das
jne
data16
push
adc
call
inc
adc
sahf
mov
jmp
cmp
mov
sbb
mov
inc
mov
fwait
and
push
outsb
nop
sub
loopne
sbb
mov
je
pop
xor
sub
inc
xor
xor
mov
pop
xlat
ljmp
sub
dec
xchg
inc
mov
shrl
pop
in
mov
test
lods
enter
push
call
mov
xor
push
jp
popa
sbb
rcr
lods
movaps
push
pusha
hlt
pop
inc
xor
outsb
stos
push
add
sub
cltd
js
popf
aam
push
sbb
out
add
ss
mov
sbb
fwait
cs
jl
sub
mov
mov
imul
aas
imulb
stos
fisubrs
mov
test
call
xor
stc
sbbl
jnp
mov
sbb
sbb
and
add
ret
scas
adc
inc
popa
sub
insb
xchg
mov
cmp
sub
push
lcall
sbb
jl
xlat
jl
mov
jp
and
inc
and
shll
sub
stc
test
test
daa
and
js
icebp
fstpt
cmpsb
jle
cli
sub
sbb
adc
sti
inc
movsb
cmp
jo
out
sbb
in
test
lods
dec
sub
sub
jmp
add
pop
les
in
scas
xor
fmuls
pop
mov
shlb
int
dec
push
adc
ret
mov
ss
adc
int3
mov
int3
in
sti
addr16
adc
add
fisttpl
mov
adc
repnz
push
test
call
sbb
mov
xor
std
filds
jp
movsb
mov
or
das
ljmp
mov
xor
push
fldl
cmp
lods
push
adcb
loop
and
mov
orb
aaa
test
movsl
sbb
sub
mov
dec
adc
dec
leave
mov
aad
xor
pop
mov
add
hlt
lds
xlat
out
push
dec
jns
mov
push
popa
ljmp
mov
push
mov
into
inc
lret
push
dec
jo
cmovs
xchg
jne
mov
ret
mov
cmp
mov
aas
mov
repz
pop
mov
shlb
test
ror
insl
pop
mov
mov
adc
insl
into
mov
fwait
mov
xchg
jecxz
pop
mov
sub
inc
mov
sub
push
fs
push
in
mov
and
cmp
data16
cmpsl
cmp
dec
ficompl
cmp
ds
and
and
mov
lds
stos
mov
inc
rolb
test
loope
lods
pushf
lds
or
cmp
mov
xchg
pusha
xor
mov
aad
sti
push
inc
xchg
subb
mov
push
lret
sbb
push
aas
pop
push
sar
adc
or
out
in
aas
xor
and
les
push
or
cmp
aam
or
inc
xor
ds
test
or
lcall
jg
adc
push
jnp
incb
jg
outsb
mov
enter
out
mov
jle
push
dec
nop
push
and
xchg
sbb
out
loopne
jbe
pop
shll
inc
shlb
xchg
adcl
mov
xchg
stos
cmpsl
pop
adc
add
cld
and
loopne
andb
daa
fxch
icebp
popa
lret
popf
fs
sbb
push
fbld
xchg
out
out
repz
add
shl
mov
andb
hlt
pop
cmc
cmp
xchg
test
jp
or
and
xor
sti
push
fwait
xchg
jmp
xlat
ja
fisubrl
test
mov
aam
add
xchg
inc
xchg
mov
leave
jno
cld
xor
fcomi
fimull
sub
dec
fisubs
leave
or
xor
pop
push
in
dec
push
mov
xchg
orb
decl
stos
push
test
lods
adc
jns
das
adc
shr
cld
loope
fwait
aaa
jmp
push
jne
inc
or
ljmp
js
push
testb
cli
inc
xchg
adc
pop
vhaddps
frstor
xchg
decl
dec
push
mov
outsb
call
xor
subb
xchg
arpl
loopne
mov
imulb
add
dec
gs
ds
rcr
pop
push
jnp
inc
movsl
sbb
sub
ffreep
adc
jl
adcb
addb
pop
inc
mov
inc
aam
dec
fwait
test
test
orb
addb
jp
into
xor
cld
ds
iret
or
fs
cmp
stc
cmp
clc
stc
mov
push
and
xor
test
sbb
xor
fs
enter
gs
jmp
lret
jle
pop
pop
and
repnz
loop
sbb
jp
incl
pop
mov
jno
mov
lret
mov
std
mov
jge
and
mov
pop
sarl
pop
leave
sub
and
call
inc
jg
sub
xor
inc
dec
fyl2xp1
and
adcl
dec
xchg
jmp
aad
pop
and
loopne
mov
mov
nop
out
out
xor
shll
add
daa
movb
jno
jl
or
xorl
xor
orl
and
cmp
hlt
pop
lds
pushf
mov
sub
cmpsl
arpl
int3
jp
sbb
jnp
imul
push
loop
std
mov
dec
inc
repz
nop
xor
inc
ljmp
popa
test
mov
pop
and
cmpsb
insl
and
xor
xchg
pop
jg
ret
xchg
or
adcl
sahf
cld
lahf
ret
ljmp
mov
inc
fimuls
imul
dec
fldl
je
mov
pop
in
jns
daa
xchg
jecxz
shld
and
cltd
imul
mov
add
pop
or
xchg
mov
push
ljmp
data16
mov
jne
xor
pop
xor
mov
outsl
insb
sbb
in
and
jns
mov
jge
fidivrl
je
adc
sub
leave
jo
fcmovnu
arpl
jnp
fndisi(8087
sub
imul
and
add
or
in
imul
in
or
dec
lock
push
fwait
imul
xchg
lret
push
dec
das
xor
in
inc
int
mov
pop
imul
jl
sub
jmp
cmpsl
and
xor
push
or
mov
mov
adc
hlt
sub
sbb
shrb
pop
out
adc
clc
jp
push
popa
insb
dec
mov
sbb
and
ret
mov
pop
cwtl
jnp
outsl
push
pop
adcb
mov
cmp
repz
xchg
jbe
int3
mov
pop
sub
mov
pop
ret
xchg
mov
popa
dec
fdiv
stos
jecxz
dec
sarb
pop
scas
push
bound
xchg
pop
aaa
scas
lds
enter
outsb
lods
aam
mov
dec
movsl
sub
jns
orb
leave
dec
cmc
cmpsb
adc
mov
mov
adc
or
insb
hlt
pop
mov
or
or
lock
or
push
push
js
loop
in
testb
cmp
jbe
test
pushf
in
loope
or
fwait
movsl
popa
mov
out
mov
bound
jne
aad
xor
sbb
fimuls
pop
jno
jbe
push
dec
addb
ds
xor
push
mov
movsl
jnp
or
mov
push
xchg
mov
mov
outsl
imull
rorl
lds
pop
in
shrl
pop
stos
sbb
nop
xlat
mov
adc
mov
out
xor
daa
mov
mov
inc
jmp
pop
inc
add
aam
inc
insb
jp
sbb
mov
lcall
shl
xchg
movsl
mov
in
fimull
adc
xor
mov
dec
pop
out
stc
xor
adc
aaa
repz
inc
cmp
data16
dec
rcrl
pop
xchg
jecxz
mov
jb
add
xchg
sbb
cwtl
in
fldl
imul
cltd
mov
sub
sub
adc
cmpsl
rcrl
mov
imul
pop
xor
imul
mov
cmp
fs
dec
and
in
push
xchg
ljmp
add
int
add
or
jmp
loop
jle
and
out
dec
call
scas
jle
icebp
pop
addr16
jns
jmp
dec
dec
add
fimull
jle
push
and
cmp
cmp
pop
insl
adc
push
jo
test
repz
adc
stc
mov
push
iret
dec
shl
sbbl
mov
out
adc
xchg
jge
rorl
pop
cmp
nop
mov
add
int
fdivrs
mov
faddl
gs
popa
xlat
jb
push
sub
xchg
mov
or
xchg
dec
insb
cs
pop
or
mov
jo
pop
cld
stos
mov
insl
lock
and
add
push
mov
xchg
cs
push
mov
push
mov
xchg
mov
mov
cmp
mov
mov
and
mov
add
push
sbb
icebp
xlat
inc
cld
jne
shll
jle
inc
gs
hlt
movsb
xchg
mov
xor
jg
sbb
lret
dec
testl
into
ret
jp
aad
push
xor
es
loopne
lahf
jno
test
ficoml
or
push
add
adc
sahf
in
rcrb
cmpb
addr16
or
pop
or
add
and
in
daa
inc
call
xor
jno
jbe
out
pop
mov
inc
and
xchg
test
add
xchg
lock
shrl
hlt
outsb
adcb
jne
ds
repnz
push
ret
and
adc
push
repz
movsb
idivl
lds
pop
inc
and
je
adc
xor
adc
cld
add
xchg
inc
call
xchg
arpl
push
jmp
enter
into
xchg
lock
inc
pushf
iret
sub
mov
and
subb
jp
xor
lret
into
xor
or
lcall
jle
add
adc
mov
xchg
jne
mov
test
mov
fwait
loop
insl
bound
add
jge
outsb
les
cld
jno
xchg
in
clc
lahf
movsb
sti
es
dec
or
push
jbe
sub
fdivl
jp
add
repnz
adc
shlb
mov
mov
jo
pop
or
push
bound
sub
aam
dec
lcall
jmp
pop
jnp
ds
out
movsb
mov
sub
push
fdivl
jae
lock
fs
and
add
rcr
inc
xchg
add
rcrb
inc
mov
mov
in
shl
mov
push
ret
bound
push
insl
push
lcall
pop
jae
lret
pop
cmp
sbbb
push
inc
lret
ret
pop
iret
mov
lods
pop
inc
testl
push
addb
or
test
movsb
adc
dec
sub
inc
mov
jl
aam
je
pop
mov
adc
pop
fnstenv
shrl
or
sbb
push
jg
sahf
gs
xor
mov
js
pop
dec
pop
push
in
pop
mov
mov
jno
push
push
lock
mov
test
cmp
shr
icebp
mov
std
movsl
sub
ds
mov
sbb
pusha
les
pop
xor
sahf
repnz
cmp
xor
or
or
imul
sbb
adc
movsl
sbb
jbe
shrl
dec
push
fdivl
fisubl
jp
cltd
pop
mov
mov
outsb
addr16
mov
insb
and
leave
or
rclb
push
insb
and
jle
icebp
xor
mov
xlat
pop
mov
enter
push
mov
jp
xchg
and
dec
les
pop
sub
jb
lret
xor
add
push
add
outsb
cmp
rcl
rcrl
xchg
out
add
or
aad
ret
popa
movsl
lret
vphadddq
adc
push
or
cmp
or
out
cmp
rorb
test
sar
gs
pop
pop
sbb
adc
pop
push
xor
cmpsl
mov
into
lret
xor
add
or
add
sbb
add
sbb
sub
movsl
cmp
call
mov
cld
stc
int
adc
sarb
ja
and
or
add
in
movsb
into
lock
out
lock
sub
imul
call
push
sub
xlat
aas
mov
xchg
mov
xchg
das
jecxz
nop
xchg
repz
imul
lea
jle
jno
testl
pop
sbb
push
in
jl
movsl
push
repnz
jp
insb
xchg
pop
cmpsl
icebp
icebp
xchg
ljmp
jecxz
test
sbb
sub
jmp
imul
jmp
pushf
and
rcll
shl
fdiv
push
mov
rolb
pusha
mov
out
les
xchg
out
and
cmpsb
adc
and
push
and
adc
inc
test
leave
pushf
push
sub
fisubl
aam
sbb
data16
sub
mov
iret
loopne
fnstcw
jl
push
mov
or
test
ret
jp
jb
mov
outsb
sarl
movsl
xor
subl
jmp
hlt
pop
pushf
sub
and
mov
shlb
clc
xchg
and
xor
cld
adc
and
or
adc
push
jecxz
mov
mov
inc
enter
inc
adc
adc
ja
outsl
xor
push
sbb
sbb
inc
mov
inc
push
dec
and
in
pop
pop
cmpsl
mov
je
lds
push
ror
fsubrl
mov
call
jo
std
jge
adc
imul
adc
stos
aas
enter
mov
cmp
test
loopne
fsubp
test
xor
aam
inc
mov
add
outsl
and
lock
gs
inc
mov
movsl
or
or
orb
jbe
repz
and
in
add
test
jae
add
inc
push
ror
test
cs
lds
cmp
sub
push
sbb
xor
rolb
test
iret
lcall
jo
orl
xchg
jo
xchg
mov
imul
jnp
enter
dec
movsl
sub
std
mov
mov
aas
pop
mov
icebp
add
js
shll
into
les
les
xor
jo
xchg
cwtl
test
int
jo
fcompl
jbe
arpl
imul
push
lods
in
fwait
push
xor
testl
dec
cli
jl
jmp
cmp
add
fstl
jg
scas
aad
dec
lcall
push
insb
std
cmp
sahf
dec
rol
addr16
mov
es
push
adc
xor
sbb
or
xchg
popf
sbb
jns
fildll
adc
dec
or
xor
test
xchg
adc
imul
sub
cmpsl
mov
sbb
fwait
and
insb
sub
sahf
push
and
jbe
int
adc
jae
sub
test
pop
jp
dec
inc
or
add
frstor
push
pop
pop
cmp
es
loope
adc
add
pop
stos
push
aad
sub
dec
es
xor
rolb
insb
jg
out
std
ror
enter
loop
xchg
test
addr16
jl
push
addr16
and
aaa
sub
incl
shrl
pusha
push
outsb
add
das
pop
dec
mov
loopne
or
xor
xor
add
insb
xchg
std
pushf
sbb
inc
mov
jb
outsl
sbb
mov
xchg
test
ja
in
mov
stc
xchg
fcmovnbe
clc
dec
invd
push
frstor
addr16
cmp
sub
push
arpl
inc
dec
pop
mov
fsts
mov
cwtl
mov
gs
dec
jmp
out
add
sti
sti
aas
int
or
or
pop
fs
cmpb
je
sar
ds
add
roll
lret
fcmovbe
hlt
fmull
cmp
loopne
sbb
pushf
cmp
cmp
sub
jae
adc
fmull
in
loop
call
les
inc
sbb
cmp
xchg
mov
adc
and
cmp
mov
dec
sti
cli
mov
fs
mov
std
dec
loope
jb
sub
xchg
ljmp
inc
push
sub
pop
mov
movsl
lea
rorb
dec
lahf
rcr
mov
mov
into
aaa
stc
lds
xchg
jbe
fs
mov
fisttpl
xchg
lods
mov
adcl
push
les
loop
aad
bound
cs
gs
outsb
jmp
pop
push
and
outsl
out
add
dec
popa
cwtl
movsb
xchg
punpckhdq
aam
into
loop
ja
ret
adc
push
push
dec
inc
or
movsl
sti
add
ret
outsl
dec
imul
fwait
xor
jp
mov
lock
mov
pop
cld
pop
rcrl
mov
incb
leave
call
adc
pop
mov
mov
add
dec
out
xchg
aam
jbe
daa
je
jnp
aaa
xchg
out
push
mov
mov
xor
aam
or
jecxz
ds
xor
stos
jns
sbb
leave
shl
cmp
hlt
repz
adc
sub
outsb
adc
sub
addr16
inc
and
jae
adc
inc
jne
cmp
xchg
mov
je
mov
inc
bound
ljmp
in
dec
icebp
pop
add
add
pop
popa
sahf
xchg
mov
shll
dec
mov
mov
xchg
scas
movsl
xor
aas
inc
in
ss
xor
jno
das
xor
ljmp
fs
mov
cmp
cwtl
addl
pop
cmpsb
sub
sbb
adc
and
icebp
xor
insb
jl
hlt
dec
inc
sbb
sarl
jp
or
add
das
sbb
dec
outsb
sbb
xchg
pop
mov
ficompl
aaa
cmpsb
jmp
jb
pop
add
pop
xor
aaa
fucomi
mov
xor
cld
cwtl
add
mov
adc
dec
call
push
int
mov
lahf
hlt
xchg
mov
jecxz
xlat
cltd
ds
xor
aam
imul
ja
add
fnstenv
mov
lods
ret
mov
nop
leave
lods
or
cwtl
in
lcall
sub
rcll
shll
ljmp
dec
mov
imul
jecxz
and
scas
or
cmpsb
leave
mov
insl
outsb
dec
pop
test
jle
mov
mov
pop
jae
dec
jl
push
sbb
fidivs
sub
mov
fisubrl
mov
pop
in
call
mov
add
in
and
inc
xor
ret
pop
sti
adc
mov
mov
js
sbb
sbb
test
push
mov
negl
dec
movsb
jo
inc
cs
roll
mov
xor
jb
pop
jge
jb
popa
jl
mov
sbb
rcrl
in
mov
test
push
push
sub
mov
or
and
icebp
rcrb
jno
stos
fldenv
cli
push
pop
and
push
out
fcomp
sbb
fsubrs
andl
jbe
int
sti
inc
bound
jae
arpl
movsb
rcrb
sub
stos
mov
ljmp
sbb
or
push
jno
shll
cmp
cmp
cmp
jnp
lret
and
push
xchg
test
lock
dec
jmp
cltd
rorl
mov
pusha
out
sti
mov
sbb
jb
xlat
cwtl
push
mov
lock
xchg
mov
xor
cmp
push
imull
sub
in
imul
xor
aas
jl
in
add
push
insb
stos
mov
mov
xlat
rol
not
adc
xor
out
addr16
sbb
push
jo
scas
cmp
xchg
out
nop
sbb
jg
jge
inc
mov
mov
jns
push
mov
dec
shrl
mov
mov
add
aam
add
popa
cmp
jae
lret
outsl
outsb
xrstor
sub
push
orl
nop
fdivr
dec
int3
xchg
data16
por
in
popf
mov
sahf
popf
sbb
fsubs
clc
inc
imul
mov
cmp
push
sbb
int
hlt
cld
stos
mov
inc
cmpsl
push
inc
inc
sbb
es
jge
insb
mov
js
sahf
loop
mov
repnz
push
arpl
sbb
shll
mov
std
fistpll
cmc
movsb
ficomps
push
popa
cmp
fidivrl
lods
push
dec
les
adc
add
out
stos
ret
mov
jl
fstps
xchg
push
jmp
mov
negl
lcall
in
inc
inc
mov
pop
mov
pusha
xlat
lret
fs
sbb
in
mov
scas
cwtl
scas
outsl
or
cmp
xchg
mov
push
and
inc
pop
lcall
or
scas
pop
fsub
lock
mov
jp
movsb
xor
add
sub
fwait
xor
xchg
ffree
inc
mov
mov
and
test
push
pop
push
lods
xchg
jle
ret
mov
fld
repnz
push
mov
mov
test
mov
push
add
data16
push
adc
mov
mov
leave
test
movsb
cwtl
xor
scas
fstpl
lret
mov
inc
enter
enter
mov
cmp
inc
icebp
pop
adc
inc
inc
pop
rcrb
imul
xor
adc
bound
mov
outsl
push
push
inc
movsl
movsb
insl
in
out
push
mov
clc
lods
fsubs
aas
pusha
xchg
aam
and
or
and
imul
in
int
or
arpl
mov
sub
aad
addl
cs
pop
cmp
test
dec
loop
lcall
outsb
pushf
jp
test
fldz
add
lods
inc
sbb
push
dec
xchg
out
dec
jbe
js
cld
pop
shl
and
leave
jne
clc
fcmovb
outsb
mov
push
mov
popa
jbe
jne
adc
jb
or
out
out
out
test
push
ja
inc
stc
jno
cmpsb
dec
pslld
mov
cmc
shrl
sub
out
sbb
pop
fwait
stos
pusha
outsb
testl
bound
sbb
ss
add
jge
sbb
stos
inc
cmp
psrad
sbb
cli
jge
movsb
push
ret
adc
retw
push
faddl
hlt
loopne
xlat
or
or
cmpsb
push
leave
or
lcall
dec
push
test
outsb
es
cli
cmpsl
xchg
xchg
divl
add
add
lahf
aam
and
sub
cli
outsb
jmp
adc
aas
repnz
movsl
cmp
dec
xor
dec
sbb
pop
loopne
daa
xchg
or
sbb
js
imul
sub
lods
sbb
dec
rcrb
pop
aad
hlt
pop
mov
clc
push
out
xor
jb
arpl
out
je
and
adc
sub
inc
mov
ret
pop
dec
and
xlat
inc
and
or
shll
push
cs
rolb
aad
das
imul
je
mov
adc
inc
out
pop
cli
fs
scas
sub
add
scas
add
loop
test
xchg
or
into
imul
sub
sub
sbb
nop
dec
mov
insb
pop
cmpsl
push
mov
mov
lods
lahf
push
or
icebp
aaa
clc
lods
gs
jge
neg
sahf
stos
mov
insl
sti
xor
pusha
and
or
jb
xor
es
pop
jns
cmpsb
out
aas
sbb
in
aam
loop
jmp
sub
and
testb
fcmovnbe
xchg
pop
popa
fs
incb
fiaddl
jmp
inc
insb
xchg
notl
jl
fistps
ja
pop
mov
subb
xchg
mov
fdivrl
mov
sub
sub
flds
pop
pop
fistl
test
mulb
out
imul
mov
and
imul
mov
lret
popa
jp
cmpsb
cwtl
ss
cmpsb
mov
add
loopne
push
jg
loope
push
mov
fcoms
loope
mov
shl
mov
in
pop
aas
dec
cli
sbb
pop
fidivs
jecxz
bnd
fwait
add
cld
ss
push
scas
xor
in
out
push
xor
inc
fcoml
pop
sahf
pop
lds
cli
push
pop
xor
mov
mov
dec
xchg
test
sub
push
into
repnz
cmpsl
rep
and
push
stc
add
xchg
pop
inc
xchg
jmp
adcl
inc
iret
ret
inc
sub
adc
flds
fdivr
mov
dec
adc
lret
push
fsubs
outsb
les
cmpsb
jl
jns
ja
and
dec
lahf
or
cmp
pop
mov
addr16
sub
sub
dec
movsl
or
xchg
rclb
jbe
repz
pusha
in
and
ss
push
push
aas
cmp
mov
cmp
lret
or
cli
mov
adc
xchg
mov
ds
mov
sahf
lret
test
push
insl
mov
xchg
subl
push
mov
push
mov
pop
and
jle
or
mov
jge
dec
fstl
out
cmp
xchg
push
inc
lods
xchg
sub
data16
mov
mov
loopne
fistps
adc
mov
pop
sub
js
hlt
leave
sub
test
or
add
jo
mov
add
and
pop
push
ret
sahf
pop
lcall
lret
jecxz
lods
testb
orl
add
xchg
push
pop
out
dec
jae
xchg
js
cmp
testb
and
adc
lods
rcrl
sbb
fnstsw
ficoml
jae
pop
addr16
adc
lock
or
dec
cmpb
sti
xchg
lahf
mov
push
cmc
fwait
push
ljmp
repz
add
mov
jb
ja
push
insl
loop
mov
push
loopew
jg
mov
jmp
sub
jns
jge
js
jne
push
pushf
repz
in
mov
lret
and
cmp
out
nop
bound
push
cli
in
mov
frstor
pop
icebp
daa
xlat
sub
pop
and
les
or
pop
stos
loop
pushf
xchg
mov
mov
mov
push
call
dec
rcrb
inc
xor
inc
jnp
xchg
dec
sub
dec
cmp
addl
add
mov
cmc
icebp
add
and
xchg
out
dec
ja
lcall
repnz
dec
es
int
push
loop
mov
push
cmp
cmp
repz
sub
mov
lods
dec
adc
add
mov
xor
sbb
or
dec
insb
inc
mov
or
push
jbe
shll
pusha
scas
aaa
popl
shrb
enter
mov
xor
dec
sti
es
aad
inc
jmp
movsb
leave
sub
lahf
sub
arpl
pop
outsl
stos
fstps
mov
xchg
lods
and
std
test
int
push
mov
cmp
movsl
outsl
mov
xchg
cmp
pop
mov
adcb
dec
stc
test
sbb
xchg
cmpb
std
daa
xchg
mov
xchg
jmp
add
xchg
or
in
in
cmpsb
lods
lods
punpckhdq
nop
jecxz
cmp
out
in
cmp
cmpsl
pop
or
ja
je
mov
cli
add
aas
bound
jecxz
loop
cwtl
ret
dec
and
aaa
xchg
adc
mov
mov
lds
pop
jae
pushf
pop
clc
dec
or
and
xchg
mov
sub
pop
push
insb
add
or
ljmp
movsl
sub
push
jle
aas
sbbl
sub
push
push
push
std
in
call
jecxz
ficoml
push
add
dec
hlt
xor
xchg
and
jl
int
xchg
scas
jge
jne
or
jo
icebp
sbb
or
gs
xchg
flds
inc
jbe
sbb
cmp
sub
es
repz
dec
jae
push
pop
adc
lret
jne
mov
cmp
push
es
out
xorl
scas
andb
mov
int
add
popf
mov
sbb
outsl
lret
pop
sbb
iret
sti
mov
or
imul
or
adc
xchg
xor
dec
mull
jno
leave
int3
mov
lock
aam
mov
mov
sar
jo
shlb
ds
icebp
pop
daa
je
dec
in
mov
nop
into
sbb
dec
cli
into
outsl
mov
outsl
lret
adc
jle
fiaddl
adc
xchg
push
gs
adc
and
das
scas
std
add
or
je
notb
loopne
movsl
aad
jmp
cmp
sbb
mov
cltd
das
icebp
into
test
movupd
jl
xchg
inc
mov
sbb
mov
inc
loopne,pt
lea
jg
sub
xor
jo
stos
mov
aas
sbb
les
mov
jecxz
inc
out
mov
pop
add
xchg
enter
xor
cld
push
add
clc
in
push
aaa
push
cmp
jmp
jae
gs
ret
dec
lea
idivl
std
pop
call
sarb
popw
mov
xchg
xchg
pop
add
inc
inc
pop
fists
mov
data16
xchg
pop
add
out
push
mov
rclb
mov
add
stos
gs
or
push
jbe
dec
jmp
loop
pushf
inc
int
clc
faddl
sub
rcll
call
out
dec
and
out
dec
gs
cmpsb
adc
xchg
mov
cmp
call
push
int
fdivs
mov
mov
iret
scas
into
pop
cs
outsb
gs
nop
icebp
ret
ja
pushf
pushf
pop
and
mov
mov
mov
xor
push
mov
movsl
int
test
nop
push
adc
jge
pop
js
fwait
jb
dec
mov
fisubrs
sub
adc
cmp
aad
fldl
sbb
lahf
cmpsb
cmp
loope
and
mov
mov
or
cmpsl
adc
test
xor
fists
dec
decl
mov
repz
negb
sbb
pop
aam
fwait
mov
and
cmpsl
inc
js
jb
ds
pushf
fisubrs
push
mov
loop
inc
mov
sbbb
xchg
das
push
hlt
mov
popf
xchg
addr16
flds
push
xlat
addr16
xlat
dec
sub
loopne
imul
mov
mov
jmp
push
mov
mov
push
jnp
pop
pop
mov
mov
mov
jge
cmpsb
xchg
xor
bound
jb
cmpsb
mov
cmc
cmpsb
hlt
cwtd
add
dec
adc
int
push
daa
sti
mov
adc
xchg
push
mov
and
mov
in
les
lods
movsb
sbb
or
mov
in
pushl
lcall
cmp
aaa
ja
inc
icebp
sub
or
xchg
sbb
push
pushf
xchg
sub
jb
xlat
clc
xor
das
dec
or
sar
jae
dec
lods
add
fcoml
push
cs
xor
insl
out
mov
fcoms
push
insb
push
sbb
mov
sub
cmc
adc
sbbb
adc
or
mov
lods
xor
ret
sub
jmp
cmp
inc
mov
andl
fwait
insb
int
imul
and
push
add
jo
loopne
inc
icebp
inc
and
mov
pop
and
cmp
js
shlb
add
cmp
xor
cmpsl
mov
sbb
jbe
cmc
inc
shr
aam
negb
add
jno
inc
mov
xor
enter
out
repnz
addr16
mov
push
cli
and
cld
inc
psubusb
cmp
mov
icebp
sbb
and
sub
stc
out
aas
test
mov
add
je
ret
in
mov
jmp
aaa
cmp
dec
inc
repnz
jmp
sub
push
adc
stc
mov
mov
push
mov
inc
adc
or
in
mov
arpl
inc
rorb
mov
shlb
pop
aas
cltd
pop
cld
shlb
pushf
jae
cmp
rcrl
pushf
jmp
mov
or
sahf
pusha
loop
pushf
lahf
or
cmp
sub
push
mov
lcall
sbb
mov
inc
xchg
and
out
xchg
add
cmpsl
jnp
fadd
popa
xchg
lea
out
packsswb
sub
jbe
dec
hlt
pop
inc
mov
movsb
jno
dec
shll
push
push
ficoms
iret
xor
add
adc
fs
inc
inc
sub
cld
notb
adc
mov
pop
je
int3
inc
pop
gs
dec
xorb
test
shl
cmpsl
ja
or
mov
inc
adc
dec
dec
out
jnp
mov
movsl
imul
xchg
pop
aaa
mov
add
loopne
cmc
rclb
lea
adc
sti
movsl
shlb
push
xchg
ficoms
aaa
insb
imul
push
fstl
adc
fiaddl
addr16
std
sub
fidivl
inc
adc
stc
mov
push
mov
hlt
loop
out
enter
dec
mov
pop
iret
push
out
ss
subl
js
mov
mov
push
lea
inc
mov
mov
jmp
pop
pop
cmp
loope
cmp
mov
and
adc
adc
sti
xor
aam
js
xchg
mov
aas
mov
xor
sub
cmpsl
sbb
mov
dec
jge
rorb
push
adc
mov
cmc
mov
outsl
mov
scas
aas
ss
cwtl
rcrl
rorl
test
faddl
inc
add
push
js
mov
mov
cli
das
stos
cwtl
aas
ljmp
jnp
cmp
lds
cmc
je
je,pn
lds
and
mov
dec
sbb
aad
fs
hlt
insb
imul
nop
test
into
mov
nop
pop
or
mov
cltd
out
mov
mov
push
in
js
jp
dec
fists
imul
test
add
aas
enter
fwait
sbb
sub
sbb
push
cmpl
xchg
les
jg
lock
std
jle
cwtl
pop
mov
mov
pop
pop
fstps
sbb
iret
jp
xor
adcb
sbb
fisttps
sub
outsb
and
push
les
inc
fs
fnstsw
adc
adc
ja
jns
sahf
inc
push
sbb
xorl
bound
sbb
push
push
pop
fdiv
and
cmpsb
push
negb
mov
insl
sub
push
repnz
lret
fisubs
iret
dec
out
xchg
or
inc
in
cmp
mov
je
mov
sub
mov
add
xchg
dec
add
push
sub
add
orl
jnp
insb
cmp
pop
insb
adc
insl
push
add
ficompl
push
push
sub
add
pop
mov
ret
mov
outsb
xchg
mov
test
fs
mov
mov
stc
ja
adc
fstl
mov
jbe
sub
jmp
sub
ss
sbb
push
xchg
lahf
adc
test
mov
adc
jl
jmp
int3
sbb
mov
test
sarl
les
cmp
out
gs
ret
sti
inc
and
fbstp
movsl
fcos
mov
or
mull
push
jl
xchg
lcall
mov
mov
dec
mov
mov
popa
fldenv
mov
jnp
sbb
pusha
imul
adc
pop
insl
push
aad
sub
inc
ljmp
in
fwait
das
lea
mov
push
mov
jecxz
out
mov
imul
push
fs
lcall
jecxz
into
and
sub
mov
rcll
xchg
jae
mov
pop
test
jge
inc
xor
dec
mov
pusha
test
jg
lock
nop
sarl
aam
xchg
xchg
loop
lods
out
push
inc
bound
add
mov
mov
ret
roll
add
rorb
shlb
dec
aaa
insl
sbb
mov
lcall
cwtl
dec
lods
and
loop
daa
mov
xchg
clc
lock
lock
pop
adc
adc
xor
sbb
xchg
push
cwtl
and
xchg
daa
aad
push
xor
sbb
mov
and
add
jb
mov
out
leave
xchg
lock
packuswb
jns
imul
mov
ljmp
ret
pop
inc
adc
out
adc
or
loopne
xchg
inc
mov
mov
inc
lds
addb
add
push
and
jge
arpl
or
pop
mov
call
mov
fadds
icebp
lock
dec
jns
shrb
out
bound
sub
cmpsb
in
data16
das
push
mov
cs
orb
movsl
cmp
aas
or
inc
popa
in
add
xchg
sarl
jmp
mov
out
mov
lds
sbb
pop
movsb
xor
lcall
or
dec
fwait
add
sbb
cs
dec
btr
push
push
ljmp
adc
xor
lods
or
and
cmpsw
push
fidivrl
pop
lahf
push
jecxz
jle
dec
mov
enter
xchg
outsl
mul
mov
sub
enter
sbb
mov
aas
lahf
push
mov
mov
out
sub
sahf
or
in
cltd
mov
inc
cmp
inc
pop
outsb
stc
dec
xor
loope
cld
enter
mov
imul
cmpsl
stos
daa
cmc
push
adc
ret
jmp
pushl
sub
push
in
push
mov
je
and
inc
stos
mov
sbb
outsb
dec
popf
test
es
or
push
pop
add
aaa
ljmp
lea
pop
mul
js
out
in
stos
bswap
dec
nop
pushf
jnp
dec
sbbl
push
idiv
and
pop
or
ret
iret
ja
push
inc
and
fwait
aaa
es
lock
sub
int3
loope
xchg
cmc
mov
jl
mov
and
int3
std
sub
fsubrl
mov
lods
gs
pop
sub
jo
addr16
xchg
ljmp
adcl
mov
mov
sub
pop
bnd
dec
int3
adc
sbb
lock
cwtl
push
sbb
mov
js
dec
push
push
mov
xchg
test
int3
cmpsl
push
out
shlb
inc
aas
mov
xor
mov
mov
or
xchg
and
in
cmp
in
mov
jb
xchg
into
out
xchg
cmp
jae
xchg
dec
arpl
sub
sub
dec
push
mov
lods
fistl
out
negb
insb
loope
std
aad
pop
data16
jne
out
pop
mov
push
push
aaa
mov
mov
pop
rcll
or
mov
push
loop
sbb
std
xchg
xor
lahf
ret
sbb
arpl
bound
inc
fs
incb
inc
loopne
bound
pop
and
ret
scas
mov
and
jnp
mov
xor
mov
pop
jne
ljmp
pop
repnz
jae
add
adc
nop
cmpsl
or
shll
fld
fwait
arpl
or
sbb
rorb
shll
fisubl
ret
inc
icebp
adc
mov
sbb
movsb
lock
aaa
push
lods
push
mov
pop
jb
add
outsl
mov
test
popf
in
fdivrs
sub
mov
fnstenv
push
xchg
cli
xchg
sub
or
and
or
outsb
inc
jecxz
das
add
sub
inc
out
icebp
jge
jge
cmpb
xchg
push
and
push
pushl
ja
stos
pop
fisttpll
fidivl
push
xchg
sub
xchg
fmull
sti
arpl
out
mov
mov
mov
loope
xchg
pop
xchg
jle
sbb
push
fbld
xor
and
mov
test
jo
cmp
push
ds
mov
fimuls
testb
fadds
movsb
mov
insb
in
jle
xchg
pop
mov
cmp
fs
add
ficoml
movsb
jnp
and
mov
cmc
mov
mov
dec
sub
test
xor
ret
xor
add
inc
lods
loop
jbe
divl
lea
sub
das
mov
sub
cld
pop
and
mov
push
lret
jecxz
dec
lret
ljmp
cwtl
jecxz
mov
lcall
pop
jno
or
or
leave
lcall
or
das
sbb
shr
xchg
cmp
loope
inc
pop
mov
pusha
inc
pop
xchg
adc
jno
call
les
scas
lock
sbb
pop
and
imul
inc
adc
or
fisubs
xor
in
push
repz
xor
daa
mov
dec
push
es
fwait
cltd
arpl
lea
insb
sbb
aad
jnp
jne
lret
mov
cmp
pop
sbb
lret
mov
pop
adc
imul
out
clc
cmc
mov
fistpl
xor
push
addr16
or
jb
push
imul
and
fdivs
repz
cmc
test
pop
fwait
mov
add
bound
mov
das
sti
outsl
mov
pop
dec
mov
arpl
lods
add
inc
jo
mov
inc
jecxz
jne
fsubrl
or
popf
out
outsb
gs
cld
adc
mov
int3
or
fcoml
ret
push
insb
shlb
xlat
push
cmp
cwtl
pop
hlt
inc
cmp
cmp
pop
out
popa
mov
aaa
jno
dec
sbb
add
xor
out
cmc
sub
stos
mov
jmp
jnp
add
gs
add
xchg
mov
jl
xchg
rclb
stos
arpl
or
sarl
jns
loope
jg
pop
loopne
ret
inc
cltd
mov
into
rcrl
jp
push
aaa
sbb
jmp
and
sbb
les
mov
jno
loopne
into
arpl
push
mov
clc
push
int3
subl
jge
xor
push
pop
dec
dec
insl
jmp
or
orl
cmpsb
in
mov
imul
mov
test
xor
cmc
inc
cli
mov
add
aaa
scas
mov
adc
pop
jge
std
and
test
and
lret
sbb
inc
push
shll
sahf
xor
add
lds
testl
cltd
mov
outsw
lcall
sbb
rcll
popa
stos
push
adc
ficoms
scas
popa
mov
pop
stos
add
cwtl
or
shlb
mov
repz
adc
stc
and
or
outsb
vpmacsdd
cmpsl
jecxz
push
imul
fwait
test
fdivl
fsts
lret
psubb
scas
mov
push
test
pushf
scas
cmpsl
leave
mov
ret
out
jge
sbb
test
xchg
ljmp
mov
or
mov
mov
jo
inc
pop
jno
in
popa
pop
xchg
xor
shll
outsb
out
push
lods
enter
stos
sahf
mov
add
fidivrs
pop
jmp
and
scas
jbe
push
push
iret
push
adc
mov
popf
out
insl
sar
nop
fsubrl
push
ret
inc
ds
int3
adc
xchg
inc
lret
mov
test
pushf
sbb
fnstcw
pop
outsl
sbb
and
xchg
mov
jnp
mov
jbe
enter
js
cld
pop
xchg
inc
cmp
in
pushf
jns
shlb
stc
mov
ficoml
clc
stos
andl
mov
call
push
push
pop
popf
and
dec
orb
addr16
mov
adc
adc
mov
cmp
call
sub
mov
pop
mov
push
sub
xchg
push
sub
sbb
cltd
out
inc
testb
hlt
popl
and
jo
enter
pop
jbe
add
jbe
jecxz
sub
inc
imul
inc
cmp
mov
sub
cmpsb
cwtl
jbe
push
add
cli
mov
or
mulb
int3
sub
sub
and
adc
jns
ret
int
pop
pop
mov
inc
jecxz
aam
mov
loope,pt
cmp
mov
pop
mov
test
inc
les
hlt
jne
negl
dec
mov
js,pt
lahf
sub
or
lds
jp
and
jnp
je
dec
ret
hlt
mov
mov
or
mov
jp
fisubrl
lahf
adc
pusha
daa
ret
push
pop
aad
pop
loope
stos
mov
ficoml
push
xor
dec
js
ljmp
push
imull
inc
pusha
js
push
adc
jno
add
push
fisubs
sub
add
out
sub
stos
sub
and
faddp
pushf
mov
out
jbe
xor
movsb
clc
imul
xchg
mov
dec
jmp
sub
add
push
push
dec
mov
or
cmp
lret
lock
fnstenv
add
movsl
cwtl
jo
mov
ss
mov
movsb
push
push
push
cmpsl
xchg
insb
sub
jge
test
fadds
in
and
cmp
dec
pop
mov
ret
sbbl
stos
ds
mov
cli
pop
into
movsb
fdivrs
in
fistpl
or
mov
fs
or
int
sbb
xchg
jns
cli
shrb
movhps
sbb
popf
jle,pt
ss
add
rcrl
lds
mov
bound
test
mov
pushf
bound
pop
iret
insl
sbb
addr16
lea
gs
aad
or
inc
xchg
lock
in
mov
test
hlt
arpl
scas
ja
pushl
push
dec
xor
mov
loop
push
push
push
mov
imul
xor
popf
mov
mov
not
stos
test
sbb
cwtl
jecxz
lahf
int
push
xchg
sbb
mov
mov
ljmp
add
loope
incb
add
or
sbb
sbb
push
inc
jl
hlt
out
sub
xchg
and
pop
test
neg
mov
mov
cli
nop
outsl
xchg
xchg
sbb
fisttpl
fcom
rcrb
dec
mov
add
in
xchg
in
mov
loop
mov
loopne
outsb
sbb
addr16
ds
xor
jae
xor
cmpl
dec
add
and
int3
sub
push
mov
test
inc
pop
pusha
int3
adc
fmull
or
and
xlat
sub
test
std
pop
testl
loope
push
jp
add
dec
iret
and
cmc
inc
inc
data16
push
sbb
ljmp
or
jmp
dec
ror
stos
jne
test
jmp
jge
cmpsb
or
inc
inc
sub
mov
cmpsl
test
push
rolb
mov
pop
loop
sbb
xchg
das
icebp
cmpsb
nop
sarb
pusha
jbe
ret
mov
insb
int3
jp
and
cmp
and
xchg
mov
jo
test
sub
leave
out
push
scas
and
or
insb
sbb
cmp
inc
in
in
pop
sarl
nop
sub
js
dec
or
sub
or
out
xchg
push
sub
in
mov
push
xchg
cli
out
push
iret
sub
ljmp
mov
xchg
push
mov
stc
mov
stos
adc
sbb
aaa
js
adc
es
dec
les
or
jb
xor
test
dec
cld
push
pop
mov
xor
fadds
xchg
sbb
mov
pop
pop
pop
push
dec
sti
out
movl
mov
fimull
push
xor
in
pop
dec
add
cli
jnp
cmp
repnz
gs
adc
jge
sbb
mov
fwait
ret
out
dec
add
xor
sub
ss
push
cmp
xchg
fistpll
fildll
cmp
cmc
insb
jge
jle
mov
in
jnp
psubq
dec
add
lahf
lods
rol
rcrl
dec
pop
rcrb
mov
mov
and
inc
fstpt
cmp
sahf
mov
in
xor
jmp
insl
or
out
arpl
stos
pop
dec
aas
arpl
xor
sahf
popf
or
in
jo
insl
inc
or
push
sbb
pop
mov
and
mov
arpl
inc
out
hlt
push
ret
adc
cli
or
ljmp
fisttpl
aad
fisttpll
loope
add
lods
loopne
xlat
out
mov
sub
jae
enter
movsl
cmp
mov
sub
int
jmp
or
inc
xchg
es
pop
imul
push
sbb
and
in
in
and
xchg
add
xlat
loopne
repnz
jo
call
pop
fldt
sbb
mov
add
or
ljmp
jbe
push
or
sub
mov
and
pop
enter
lcall
lcall
or
cltd
pop
mov
stos
xchg
cmp
movsb
xchg
mov
loope
sub
inc
mov
dec
xor
sub
mov
jae
and
loop
mov
roll
jae
jecxz
rcrb
lods
pop
insb
dec
les
inc
lods
jns
jbe
in
jne
mov
stc
add
mov
rcrl
int3
cmpsl
movsb
fmuls
aad
pop
aas
pop
push
mov
mov
enter
sti
xorb
push
mov
int
loopne
stc
xchg
call
mov
sub
daa
int3
cmp
jo
lret
xchg
jecxz
stos
jo
push
test
xchg
mov
mov
and
movsl
fst
in
icebp
xchg
ja
lcall
and
movsl
dec
leave
adc
es
or
inc
loope
inc
jae
test
jne
add
sbb
fiadds
test
jg
push
inc
lahf
mov
jmp
jnp
sub
jns
cmp
loope
dec
lahf
lods
add
sbb
lock
mov
test
pop
cmpsb
cmp
das
rorl
cmpsb
call
cmp
movsb
bound
sahf
push
fdivrl
mov
test
pop
push
test
aad
cmp
adc
outsb
xchg
fs
mov
pop
orl
and
ss
mov
mov
pop
sbb
rclb
add
mov
imul
push
stos
adc
adcb
dec
sahf
jle
adc
cmc
push
fsubl
das
sbbl
xchg
dec
or
mov
test
icebp
jbe
sbb
addb
cmp
jg
jae
and
loop
xchg
pop
mov
repnz
sub
fisttps
cmc
adc
icebp
and
or
int3
icebp
and
pop
dec
or
lods
push
in
adc
inc
into
sbbb
and
jl
cmp
mov
ljmp
mov
mov
xchg
ret
add
test
inc
sub
pushw
notl
stos
push
mov
outsl
xchg
hlt
cmp
pop
xor
jmp
jbe
adc
test
bound
jl
leave
in
sbb
jg
movsb
aad
xchg
enter
sbb
mov
pop
jp
push
into
test
gs
sbb
rorb
mov
cs
out
mov
mov
fs
aas
cs
lods
jg
stos
xchg
xlat
push
xchg
push
mov
cs
jns
and
jp
add
movsl
push
es
lock
sbb
mov
outsb
sbb
stos
cmp
mov
sbb
jecxz
sarb
pop
fisttpl
mov
add
jp
push
loope
dec
inc
dec
rep
mov
xor
xchg
clc
xchg
mov
push
jg
fcomp
bound
stc
push
out
push
into
iret
testl
xchg
push
test
jl
pop
mov
out
cmp
jecxz
jne
inc
stos
sbb
cwtl
pop
sti
add
test
ret
cmp
es
cmp
inc
jle
or
dec
aaa
stos
mov
sarl
push
pop
cmc
fmul
imul
ss
imull
xorl
pop
cld
adc
pop
mov
out
cmp
cld
test
mov
fistpl
lds
and
or
sub
xchg
xchg
xchg
fxam
cli
mov
pop
push
push
sti
sahf
out
call
je
daa
inc
loopne
outsb
in
adcl
arpl
f2xm1
inc
mov
sar
bound
jbe
and
test
adcl
into
inc
jecxz
hlt
shlb
inc
fstl
cmpsb
in
stos
jne
arpl
add
mov
xchg
cmp
jbe
pop
mov
addr16
cwtl
jo
loopne
push
shlb
popw
jle
rcl
es
jb
pop
cmp
sti
lret
sarb
pusha
mov
jne
les
mov
inc
hlt
push
xor
pop
imul
and
dec
cmp
cltd
ret
js
sbb
imul
in
jge
and
lcall
iret
add
jns
imul
lock
sub
adc
sbb
daa
push
adc
pop
push
out
cltd
adc
call
add
add
mov
ret
popa
das
mov
push
fimuls
push
addl
scas
push
pop
rclb
stc
aaa
pop
lds
push
xchg
push
es
lret
lret
inc
sti
je
and
in
aaa
mov
sub
mov
adcb
sub
pop
fldlg2
inc
jecxz
inc
fsubp
adcb
imul
fisttpll
and
ret
popa
movsb
repnz
mov
pop
pop
les
mov
inc
iret
lods
mov
or
imul
pop
cmovno
fnstcw
shlb
cmp
pop
outsb
add
jg
sbb
mov
lret
push
push
dec
mov
test
dec
jge
sti
mov
test
xchg
mov
into
push
icebp
add
dec
or
lock
xchg
sub
pop
stos
xchg
out
scas
adc
ss
sub
pop
jp
xchg
test
xchg
ss
xchg
mov
push
lods
ds
dec
jae
lock
xchg
dec
sub
imul
xor
pop
ds
mov
inc
dec
aaa
jbe
inc
cmpsb
inc
xor
adc
pop
js
mov
jmp
daa
xchg
pop
jmp
nop
push
arpl
push
out
sub
inc
icebp
xchg
mov
jb
test
xchg
fildl
sarl
xchg
das
incl
sbb
popa
mov
inc
cld
rclb
inc
loopne
pop
fs
iret
and
dec
in
mov
int3
ss
and
decl
or
xor
leave
rclb
shrl
xor
cwtl
lret
or
push
lods
in
xchg
dec
push
or
in
dec
ljmp
jle
popf
pop
xchg
xchg
mov
jmp
adc
inc
je
jo
dec
jno
leave
xchg
jp
mov
mov
sub
stos
popl
sbb
pop
lea
cltd
call
cmp
cmp
pop
test
in
out
xorl
dec
jle
sub
sub
data16
dec
xorb
stos
outsb
add
xchg
inc
into
mov
lret
jmp
xlat
cmp
out
fcmove
push
aam
or
clc
repnz
adc
lods
stc
xchg
jmp
mov
mov
cmp
in
outsb
cld
mov
and
fs
push
loop
scas
lock
cmpsb
pop
lahf
adc
in
adc
stos
sbb
adc
mov
std
sahf
dec
mov
jecxz
in
adc
dec
mov
cmp
divl
mov
cwtl
cmp
add
xor
stc
das
jl
aas
adc
and
or
jbe
fstp
sbb
fcoms
fcom
mov
fldcw
pop
jecxz
scas
fs
lret
cwtl
and
clc
sbb
in
adc
jmp
shrb
cs
inc
cmc
mov
cmp
rcrb
outsb
jg
mov
fwait
pop
add
inc
iret
jbe
test
and
leave
or
pop
adc
imul
mov
adc
push
push
add
daa
inc
aad
sahf
sub
cld
xor
jns
test
and
sahf
jle
and
jbe
stos
adc
xor
ljmp
mov
test
mov
fs
clc
add
mov
jp
mov
loop
sub
xchg
nop
and
or
push
into
inc
leave
jnp
cli
sahf
bound
adc
scas
cmc
jge
rol
inc
sub
lcall
lahf
lcall
push
addl
xchg
cmp
scas
or
stos
jne
pop
pop
jnp
mov
lods
push
ret
pushf
mov
mov
shll
mov
mov
mov
xor
outsl
jl
mov
or
ljmp
mov
mov
inc
adc
call
xor
jmp
inc
test
xor
cmp
call
inc
sahf
scas
imul
or
loop
dec
stc
rcrl
push
fwait
loopne
pop
mov
xor
sub
cmpsb
add
pusha
mov
jnp
pop
nop
jbe
jns
pusha
dec
mov
inc
into
sbb
inc
push
mov
lret
xor
dec
jo
jns
outsb
notl
sbb
push
sub
inc
iret
jb
testb
cmp
inc
adc
xor
jle
imul
dec
jnp
mov
dec
icebp
lock
xchg
mov
inc
cmp
notb
inc
popf
das
nop
dec
mov
orb
mov
jo
loopne
dec
cli
out
les
sbb
jl
mov
sbb
or
mov
lea
loopne
rorl
push
dec
notl
ficomps
adc
mov
push
mov
stc
mov
pop
fwait
jp
test
lods
add
negb
jmp
dec
lea
mov
loop
cmp
push
push
decl
or
xchg
sub
mov
in
imull
pop
xlat
jg
xor
enter
fsts
jl
pop
sub
fists
icebp
outsb
push
or
hlt
call
and
test
adc
add
add
aas
jb
int3
adc
dec
sub
ret
out
ficompl
xlat
fadds
repnz
inc
xchg
cmpsl
xor
dec
pop
jns
add
test
push
into
repz
or
pop
je
mov
lods
divl
lret
push
je
lret
and
movsl
add
inc
es
imul
jbe
clc
out
fisubs
fsts
daa
mov
or
cmp
xchg
rcrb
ljmp
and
out
shr
add
mov
push
adc
cwtl
xchg
bound
jmp
add
mull
mov
loopne
jmp
cmp
add
mov
fwait
xlat
and
mov
popf
arpl
jl
or
or
call
xor
in
sbb
out
in
cmp
movsb
lods
aam
fs
adc
cmp
jb
xor
lcall
stos
iret
mov
cmp
cwtl
xor
test
inc
mov
das
pop
ret
dec
push
push
inc
sti
outsl
add
pop
jmp
mov
enter
outsb
mov
cmp
jne
cmp
xor
add
fbld
jnp
mov
xchg
jl
inc
pop
ret
xor
fisubs
outsl
xlat
add
std
inc
jmp
pop
sub
sub
push
add
push
fldcw
imul
bound
add
pop
jno
in
addl
cmc
push
adc
pop
icebp
adc
out
cmp
dec
sbb
mov
jns
mov
cmp
jne
fwait
dec
stos
sahf
ret
mov
fsts
mov
jmp
popf
and
mov
daa
std
cmp
push
std
push
sbb
outsb
mov
cmp
push
mov
scas
xchg
xchg
lcall
adc
sub
dec
pop
mov
cmpsl
jns
cmp
mov
roll
fwait
and
mov
repz
sahf
inc
mov
repz
rcrb
mov
pop
mov
push
xchg
push
iret
mov
dec
add
pop
jg
cmpsb
js
test
add
shl
mov
inc
sub
std
or
test
inc
sub
mov
pop
inc
mov
dec
inc
addr16
sbb
sarb
adc
mov
mov
stc
fadds
push
ja
nop
pop
sahf
lcall
insl
jnp
pop
mov
add
mov
rcrb
xchg
and
cld
mov
insl
mov
xor
mov
cli
test
add
ret
mov
ret
push
mov
push
jns
cmp
push
and
into
mov
jns
xchg
sbb
ficoml
cmpsl
imul
pop
fidivl
mov
cli
cmp
dec
mov
insb
into
cli
dec
xchg
cli
or
lods
in
aam
sub
mov
outsl
lods
fcomi
fs
cli
cmp
imul
cltd
jmp
dec
in
mov
xchg
mov
in
test
test
ds
sbb
sbbl
add
test
xchg
mov
push
rclb
pusha
cltd
mov
mov
mov
das
fdivp
adc
test
jg
mov
jg
mov
xchg
add
fisubrl
dec
xchg
pop
hlt
dec
ret
enter
es
mov
cmpsb
pop
jle
cmp
stos
and
sar
lret
mov
cmp
xchg
lret
xor
test
and
sbb
cld
lea
or
sub
xchg
mov
pusha
jmp
mov
xchg
test
aad
jle
lret
ja
mov
stc
fdivr
mull
pop
sti
dec
cmp
dec
push
jp
fistpl
jge
fs
ljmp
cmp
cwtl
or
popa
cmpsl
dec
push
mov
add
mov
sbb
stos
test
imul
or
or
push
mov
cmp
hlt
jnp
mov
mov
jge
data16
sbb
lret
sub
xor
loope
lea
cmp
xor
jg
push
push
fmulp
into
jp
xor
shrl
xchg
fldl
jp
adc
cmpsb
adc
mov
leave
icebp
xchg
jb
xchg
push
dec
and
add
xlat
sbb
ljmp
lret
jnp
stos
repnz
in
dec
lods
lds
cmp
aam
xchg
insl
mov
push
jb
arpl
in
scas
xchg
inc
inc
mov
jb
ret
bound
xchg
movsl
lcall
inc
ss
shll
adc
test
dec
xor
movsl
stc
push
hlt
xor
sbb
xchg
xchg
dec
das
push
sbb
sbb
les
cmp
sub
in
lcall
lods
xor
mov
or
rcrl
loopne
imul
push
rol
sub
iret
inc
pop
aaa
cmp
mov
sahf
mov
pop
mov
cs
and
push
add
mov
xchg
and
jecxz
aaa
fcmovbe
aaa
ds
lret
in
sub
add
loop
test
pop
pop
pop
test
inc
outsb
fs
sbb
mov
int3
mov
fcoms
and
jmp
clc
daa
jns
cmp
mov
mov
leave
mov
push
in
popf
gs
jae
mov
xlat
add
adc
sbb
clc
movsb
cld
lods
and
cmp
imul
mov
sbbb
imul
loop
outsb
jl
xchg
push
js,pt
clc
rcr
dec
std
sbb
icebp
iret
arpl
aad
orb
jg
addr16
push
or
push
cltd
adc
xor
mov
movsb
insl
mov
sti
test
and
pop
inc
pusha
mov
xchg
xchg
or
bound
lcall
fsubs
ss
and
aaa
xchg
ret
add
stc
sub
aad
nop
pushf
cwtl
pop
and
jmp
sti
clc
js
sub
loop
mov
ret
jnp
test
lret
in
add
lahf
and
mul
cmp
fs
jb,pt
ja
and
mov
repnz
jp
ja
ret
test
stc
popf
add
int3
inc
mov
jo
mov
mov
mov
ror
dec
into
mov
aam
sbb
or
jbe
xchg
cmp
outsb
mov
loope
inc
lods
aad
jp
fwait
stos
xchg
popf
dec
or
ss
mov
xor
or
fdivrp
or
js
sar
in
je
mov
sbbl
mov
xor
pop
sub
and
iret
pop
test
ret
pop
lcall
insl
adcl
fcomps
cmp
punpckldq
fstpl
je
je
push
push
scas
sahf
pop
incb
cmpsl
lret
sub
push
or
popf
rcrl
call
inc
xchg
adc
fildl
xchg
jno
repnz
sbb
jno
dec
inc
lds
call
adc
lahf
int3
pop
pop
test
imul
fcmovnbe
dec
inc
dec
or
lds
push
fwait
mov
rolb
test
adc
cmp
inc
sub
xchg
repnz
and
and
pushf
imul
cmp
enter
push
loopne
arpl
int
out
mov
mov
fisubs
mov
dec
icebp
call
push
imul
imul
mov
lcall
fdivl
xor
leave
push
loope
arpl
and
inc
dec
mov
dec
adc
movsl
push
xchg
sbbb
pop
dec
cmp
xchg
jp
jbe
add
xor
pop
aad
aam
sbbb
std
lock
lds
notb
push
cli
jecxz
sub
jns
mov
sbb
lret
test
xchg
mov
sub
lcall
lods
stc
sub
xor
aam
imul
adc
add
into
or
mov
ficompl
lds
push
cmp
sbb
push
stc
jp
icebp
loop
cmpsb
mov
lret
cmp
aam
out
or
scas
adc
xor
pop
pop
pop
lods
jg
bound
loope
fistps
cli
bswap
inc
adc
insb
jge
add
add
push
mov
test
lahf
pop
dec
outsb
lret
test
sbb
push
push
lods
fimuls
add
inc
popa
movsl
nop
add
jnp
dec
add
xor
insb
lret
fs
ret
scas
cmp
add
xor
mov
mov
pop
dec
jne
jle
cld
ficoml
push
pusha
fs
mov
xchg
dec
divb
cmc
adc
sbb
out
test
dec
sub
push
cmp
pop
or
xchg
adc
xor
stos
rcrl
push
cmp
lret
cmp
cld
jne
test
movsl
gs
mov
test
sub
daa
paddsw
pop
mov
in
fdivrl
fildl
mov
mov
lock
sbb
cld
or
insb
jb
subb
aam
aam
push
fisttpll
rcrb
or
cwtl
add
xor
fbstp
push
xor
push
in
loop
jmp
sbb
sbb
adc
sbb
xchg
jp
mov
push
cmp
inc
outsb
out
jns
icebp
or
push
xchg
jmp
lods
xor
xchg
ja
les
add
jl
aad
leave
sub
and
mov
xchg
mov
js
inc
decb
jge
dec
push
mov
mov
push
xor
fcomp
repnz
xor
add
ss
std
aaa
addl
xor
repnz
mov
adc
dec
movsl
pushf
mov
bound
in
adc
mov
das
jbe
mov
fistpll
fs
mov
insb
lea
pop
dec
test
lods
es
gs
add
leave
js
clc
scas
je
dec
mov
les
lds
movsl
adc
stos
fwait
push
pop
or
xor
xor
sbb
adc
sbb
movsb
pop
test
icebp
sbb
daa
mov
inc
mov
dec
push
aas
out
test
push
cmpsl
adc
pop
add
out
xor
test
lcall
mov
sbb
xlat
mov
dec
aam
push
cmpsl
jnp
jns
arpl
repz
jecxz
xchg
aam
mov
cld
mov
mov
lret
movsb
aas
cld
push
leave
movsb
sub
cmp
push
sarb
imul
sbb
rcrl
mov
mov
es
inc
jmp
rcll
pushf
out
fidivrs
sub
add
test
popa
dec
outsl
std
dec
aam
mov
xchg
into
jp
inc
shrb
sti
pop
and
push
cli
jb
movsl
push
push
out
xchg
enter
dec
sub
jne
jae
fidivrs
push
pop
inc
fimull
pushf
xchg
or
push
popf
mov
sarl
and
jmp
mov
push
cmpsl
cltd
dec
test
mov
outsl
call
pop
mov
adc
jmp
cmc
and
and
inc
enter
xor
ds
loopne
orl
xchg
in
pop
ror
aam
pop
imul
mov
lods
enter
fstpt
push
cmpl
mov
loopne
ds
sbb
jne
movb
sub
adc
stc
adc
cmpb
icebp
lcall
jne
and
mov
dec
bound
test
adc
mov
cwtl
adc
das
and
or
or
push
insb
fldcw
lea
mov
lahf
clc
out
fsubrl
repz
adc
sub
xor
mov
or
jns
mov
jl
ss
pushl
stc
mov
adc
mov
js
fsubp
or
int3
xor
lea
push
xchg
mov
xor
cmp
loope
fiaddl
out
bound
aad
add
rcrl
cltd
inc
imul
loope
repz
xchg
ja
sbb
cltd
sub
and
out
jg
addl
repz
push
std
mov
jge
bound
or
lock
mov
mov
push
jl
or
pop
cmp
fcmovbe
icebp
or
test
cld
mov
in
mov
inc
push
sub
xor
test
jp
stos
push
hlt
loope
int3
ficompl
call
in
push
push
adc
leave
jp
xchg
test
decl
cmp
mov
sub
fiadds
mov
in
shlb
cmp
add
lcall
cmp
dec
testl
in
sbbl
xor
fdivs
jl
fs
out
movntq
mov
push
out
fwait
mov
addr16
jnp
subl
cmp
push
sbb
movsl
movsb
xchg
mov
fs
mov
add
add
xor
mov
imul
push
xor
ret
push
jbe
scas
shlb
fcmovb
push
fists
adc
movsb
sub
lea
add
mov
popa
divl
cmp
addr16
rorl
sub
xchg
fs
in
jae
rorl
out
xchg
clc
mov
clc
movsb
lods
mov
jg
cmp
scas
lret
adc
xchg
insl
pop
push
out
add
xchg
inc
mov
mov
mull
mov
inc
fisttps
jno
leave
cltd
fwait
ret
sbb
or
pop
xchg
and
cld
inc
and
rolb
bound
dec
lcall
mov
arpl
cmpl
out
dec
cmp
dec
shlb
stos
gs
rep
xor
shll
xor
js
sbb
test
jnp
test
xor
cmp
jbe
xchg
inc
rcrb
test
cmpsl
and
sub
out
popf
mov
sbb
xchg
push
push
shl
dec
popa
push
cmp
ficoms
notl
out
scas
adc
cmc
das
movsb
in
fsubs
dec
mov
jl
ljmp
mov
cmp
dec
loopne
dec
cmp
jae
cld
sub
aam
xchg
jp
daa
mov
lods
mov
movsl
xchg
addps
pop
jmp
outsl
js
cltd
test
pop
xchg
int3
and
aad
fcomi
and
loop
inc
xor
clc
arpl
xchg
and
es
mov
xchg
mov
cs
je
lcall
and
push
xchg
push
inc
mov
sbb
jno
dec
in
scas
aam
aaa
sub
popf
je
dec
jbe
cmp
dec
sti
xchg
dec
lret
xchg
mov
loope
xchg
fcomps
fcoml
push
nop
jnp
shll
or
rolb
or
ljmp
aam
out
sbbb
mov
fst
hlt
jns
mov
pusha
mov
jmp
repnz
and
xchg
and
popl
call
pop
shrl
sub
fwait
dec
add
or
push
es
or
data16
inc
sbb
les
pop
inc
cmc
adc
mov
jbe
gs
in
mov
jb
mov
lea
pop
subb
sbb
push
or
dec
xchg
mov
mov
and
out
add
in
sbb
pop
sub
mov
sbb
out
loopne
push
sbb
jns
lock
divl
add
imul
xor
fmuls
mov
xchg
fcmovne
movsb
dec
mov
scas
inc
insb
loope
decl
mov
adcb
imul
in
jns,pt
fimull
div
dec
and
pop
inc
lret
call
xchg
push
arpl
stos
cmp
jb
pushf
xor
cmp
andb
pop
iret
mov
push
sub
xor
loop
xchg
imul
nop
pop
inc
push
mov
or
sbb
push
add
loopne
stc
cltd
cltd
aad
sub
and
std
enter
roll
outsl
mov
mov
mov
sub
xor
lock
pcmpgtw
inc
lea
sub
mov
and
in
fldt
dec
add
popf
add
aaa
dec
out
jns
sub
fnstenv
xchg
lret
push
sbb
ljmp
fdivrp
jmp
ds
negl
js
mov
dec
orb
jbe
hlt
xchg
dec
jb
adc
and
mov
test
insb
les
mov
push
pop
mov
ficompl
xchg
cwtl
into
inc
jno
mull
stos
xor
test
xchg
mov
lcall
inc
call
xchg
insl
pop
sbb
mov
bound
inc
bound
push
out
bound
test
dec
mov
call
shlb
icebp
mov
fnstenv
std
mov
fidivrs
iret
sahf
subl
cmp
in
sub
or
push
inc
jmp
pop
mov
sub
pop
movsb
push
mov
aas
or
add
add
add
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
jmp
mov
add
cmp
jb
cmp
ja
cmpb
je
sub
cmp
ja
cmpb
jne
mov
shr
rol
xchg
sub
add
mov
add
sub
mov
add
loop
sub
jg
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
add
push
add
add
add
sbbb
add
lock
addb
add
add
add
add
add
add
add
pop
add
add
add
js
add
mov
add
add
add
addb
add
add
add
add
add
add
add
or
add
push
mov
add
add
add
add
add
add
add
or
add
nop
add
add
or
nop
push
add
in
add
add
add
add
add
or
add
mov
mov
add
in
add
add
add
add
add
or
add
loopne
add
rol
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
or
insb
add
add
add
add
add
add
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
je
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
insb
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
and
and
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
fs
outsb
fs
arpl
or
and
gs
outsb
fs
je
jae
gs
bound
or
and
and
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
addr16
addr16
jo
outsl
arpl
jae
jb
jb
push
je
jb
cmp
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
ds
popa
jae
gs
bound
fs
je
je
ds
and
fs
outsb
fs
je
jae
gs
bound
or
das
fs
outsb
fs
arpl
or
jae
gs
bound
mov
or
xchg
and
or
mov
and
add
scas
and
or
mov
and
add
and
or
into
and
or
fsubs
or
in
or
dec
and
add
out
and
or
sti
and
or
push
or
pusha
and
add
adc
or
push
add
add
or
jo
or
sub
or
js
or
xor
or
andb
add
or
dec
or
pop
or
outsb
or
jl
or
mov
or
add
add
cwtl
or
add
add
mov
add
add
add
add
or
add
add
int3
or
add
add
loopne
or
add
add
or
add
out
or
add
add
or
add
add
or
or
add
add
adc
or
add
add
and
or
add
add
xor
or
add
add
inc
daa
or
add
add
adc
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
insb
add
dec
inc
push
dec
xor
cs
insb
add
dec
inc
dec
inc
xor
cs
insb
add
dec
xor
cs
insb
add
push
cs
insb
add
xor
cs
insb
add
inc
inc
push
push
xor
cs
insb
add
inc
push
dec
cs
dec
dec
add
inc
dec
dec
xor
cs
insb
add
inc
push
xor
cs
insb
add
inc
push
inc
dec
push
cs
insb
add
push
push
dec
dec
dec
cs
insb
add
dec
dec
dec
inc
push
cs
insb
add
dec
dec
dec
cs
insb
add
dec
inc
dec
xor
cs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
gs
arpl
add
popa
addr16
imul
outsl
jbe
add
inc
gs
popa
jbe
inc
imul
add
dec
imul
push
dec
gs
gs
outsl
outsb
outsb
arpl
outsb
push
add
inc
outsl
dec
outsb
imul
add
inc
outsb
jne
push
jb
arpl
jae
jae
add
inc
jb
addr16
imul
inc
gs
inc
add
add
fs
jae
jb
jb
imul
push
gs
jne
jb
push
popa
insb
jne
push
add
inc
je
dec
jo
outsb
inc
imul
insl
gs
gs
imul
add
insb
dec
test
xchg
dec
jge
push
xor
inc
inc
xor
lock
out
addr16
scas
mov
adc
lret
lods
add
out
and
stc
jge
in
fnsave
mov
sub
adc
in
adc
jo
mov
add
insb
iret
pusha
mov
push
daa
push
xchg
sbb
fdivrl
mov
add
add
movb
mov
pop
add
cmpsb
mov
add
and
outsl
fcmovne
add
xchg
insl
sti
cli
add
je
mov
sar
mov
sahf
push
aas
push
cmc
stos
mov
and
or
mov
mov
push
xchg
lods
sbb
xchg
ja
jo
test
cmp
cli
inc
xchg
popa
mov
push
jno
mov
inc
fbld
out
jl
es
push
addr16
mov
xor
mov
pop
sub
mov
jle
and
cmp
daa
cmp
subb
dec
lret
cld
or
lock
push
adc
adc
mov
pop
js
aad
pushf
mov
inc
pop
lret
nop
push
or
iret
mov
mov
es
out
mov
mov
gs
jne
lret
movsb
sub
clc
sbb
xchg
sbb
xlat
mov
mov
mov
pushf
mov
lret
mov
mov
jmp
insl
in
lsl
mov
pop
test
cmp
or
repz
sub
out
clc
cmp
cmp
push
jo
sbb
mov
cmpb
int
dec
xorb
push
jmp
or
mov
xor
adc
mov
fmuls
in
pop
jbe
push
dec
xchg
xlat
or
shll
shrl
cs
in
xchg
sub
negb
cmp
inc
lods
pop
leave
lods
in
imul
mov
jo
sbb
leave
sub
ret
rorl
das
ja
in
dec
xor
lock
mov
sub
mov
faddp
nop
in
ljmp
xlat
mov
mov
cld
addr16
loop
xchg
sahf
js
inc
jge
and
dec
jbe
popa
xchg
jmp
arpl
push
lds
adc
lods
inc
adc
int3
lods
stos
ret
pop
inc
inc
ljmp
push
mov
mov
dec
adc
pop
push
jmp
out
and
in
loopne
xchg
cmpsb
jns
pusha
scas
cltd
in
insl
movsl
and
sub
sbb
pop
outsb
mov
aam
int3
inc
push
or
test
xchg
fwait
xchg
test
and
lahf
lcall
push
ds
add
std
fidivs
lret
adc
test
aam
inc
fwait
mov
dec
loopne
sub
mov
sbb
fsubrl
jo
mov
test
ret
xor
inc
sub
push
nop
mov
ret
jp
sti
cmp
aad
outsb
je
roll
mov
inc
push
mov
les
in
mov
mov
fs
stos
into
clc
es
mov
xchg
dec
loop
sbb
sub
insl
xor
gs
shrl
mov
xchg
push
dec
into
fwait
pop
pushf
mov
cmp
stos
push
les
pmulhw
xor
rcll
mov
pop
rcll
scas
cmp
push
test
mov
dec
push
mov
adc
xor
out
cmp
cmp
jne
hlt
pushf
xchg
lods
icebp
inc
lock
mov
rorb
call
or
sahf
inc
mov
lods
inc
xor
roll
ud0
loope
add
adc
inc
fiadds
pop
pop
cmc
in
pop
jp
xlat
push
jb
add
mov
pop
push
fwait
cltd
xlat
outsb
in
mov
pop
sti
iret
push
mov
in
dec
mov
jle
cwtl
in
pop
fdivrp
jb
lock
sbb
movsb
push
and
pushf
dec
js
fwait
mov
lahf
and
inc
ds
xchg
mov
push
jo
test
push
lret
inc
xlat
adc
test
int3
jo
out
je
aad
lock
jmp
lcall
les
inc
push
jp
ficomps
inc
xor
dec
add
inc
insl
sahf
adc
loopne
iret
mov
mov
cmp
jg
lds
mov
shrb
pushf
outsb
testl
cld
popa
addr16
pop
sbb
hlt
aad
sub
js
xchg
mov
repnz
nop
cmpsb
out
cmp
lock
int3
sbb
add
sbb
ljmp
je
fcom
pop
std
aad
mov
loopne
or
mov
out
mov
cmp
jne
leave
pop
loope
outsl
cmp
lea
call
int3
shll
movsl
jl
rcrl
jecxz
nop
fidivrs
stos
lret
rcll
imul
pop
and
enter
shlb
adc
sub
mov
pop
testb
in
iret
dec
jbe
sub
fnstenv
jmp
xorb
into
pushf
lods
and
mov
hlt
out
sub
adcb
pop
adc
in
dec
inc
movsb
and
fistl
push
shlb
xchg
in
jmp
pop
sti
sub
mov
xchg
outsl
jmp
fiaddl
cmpl
cmp
sbb
push
push
mov
in
or
or
fs
loopne
imul
jae
mov
dec
or
or
push
add
push
dec
iret
xor
push
imul
popf
sbb
dec
shlb
in
test
dec
and
shlb
lahf
or
loop
mov
mov
pop
cmpsb
jns
inc
scas
xor
out
dec
jp
fst
bound
sub
cltd
call
mov
sub
or
xchg
mov
adc
lock
aam
jae
imul
mov
cltd
mov
adc
mov
daa
in
loopne
stc
popa
dec
loop
daa
inc
jle
add
pop
movsl
test
mov
pop
aas
push
xor
testb
mov
xchg
push
notb
or
testl
pop
xor
mov
cmp
xchg
cli
std
pop
jno
mov
and
mov
cltd
leave
movsb
mov
cmp
jp
rcrb
xchg
mov
pop
leave
mov
mov
arpl
sahf
gs
stos
lcall
xor
arpl
push
push
cmp
dec
jbe
pop
outsb
xchg
outsl
shll
repz
add
cmp
mov
xchg
je
pusha
rol
add
aaa
ret
dec
addr16
cld
movsl
fsts
test
sbb
jle
jmp
mov
leave
shlb
jp
jle
into
fidivrl
mov
pop
aad
rcll
int3
add
les
xlat
mov
sbb
lcall
sahf
sar
outsb
rcrb
into
shrb
sub
fwait
scas
dec
dec
xchg
sub
incb
out
int3
in
sub
or
jp
paddq
mov
jmp
dec
adc
jp
xor
mov
xor
cmp
mov
adc
jns
push
and
and
mov
jbe
leave
test
inc
dec
stc
ss
aad
and
add
and
add
xchg
add
daa
mov
xchg
pusha
lret
test
dec
out
je
clc
sbb
mov
jo
mov
pop
xor
fwait
imul
jecxz
cmp
adc
push
fadds
loope
and
lahf
push
push
mov
mov
fbld
sbb
dec
sub
bound
push
push
repnz
xor
imulb
pop
inc
fldt
mov
lcall
cmp
adc
outsb
loope
sub
add
push
insl
mov
fwait
cli
repz
adc
adcl
popa
mov
or
incl
mov
ljmp
jno
pop
and
cmp
xor
add
xchg
xchg
xor
push
das
push
sbb
push
loopne
repnz
shlb
les
sbbl
sbb
mov
bound
sub
sbb
mov
inc
jbe
and
adcl
stc
and
daa
mov
mov
lret
or
sbb
das
rcr
lods
fsubs
sahf
outsl
xchg
loopne
add
adc
xor
and
and
sub
jle
arpl
in
fcomps
cmp
sbb
lret
out
stos
or
out
shrb
push
xchg
pop
mov
in
cs
popf
fnstsw
xchg
cmp
add
fbld
ja
addl
sbb
andl
adc
jle
test
and
cmc
pop
fimuls
pop
ljmp
int
sub
aam
ficoms
and
pusha
mov
frstor
enter
je
or
xchg
ret
into
mov
shrb
or
inc
sub
mov
lahf
pushf
fisubl
lea
pop
fmuls
push
les
pop
ret
imul
out
push
pop
mov
cmp
bound
aaa
jl
pop
or
fildll
loope
jle
dec
js
cmp
add
pop
movsb
inc
jne
aam
sub
in
mov
test
imul
popf
mov
loope
rep
rolb
inc
cmp
rclb
daa
jmp
sbb
add
popa
mov
mov
push
outsb
lea
or
fsub
stos
fdivr
jno
mov
mov
repz
imul
xor
mov
mov
adc
stos
int
andl
stos
push
shll
mov
cltd
dec
mov
je
xor
fnop
cmp
mov
and
jae
and
inc
xchg
mov
fucomp
dec
push
adc
cmp
mov
and
sub
int3
ret
add
jns
pop
jbe
mov
cmp
mov
push
or
dec
push
sbb
adcl
clc
push
inc
push
or
and
xlat
xchg
inc
mov
test
add
sti
xlat
push
mov
pop
xor
cmc
dec
fwait
sub
lock
mov
int
lds
out
arpl
loop
or
aas
arpl
inc
push
lret
lock
jno
xchg
fbld
cmp
aam
pop
adc
mov
cmp
jmp
push
ud2
shrb
mov
and
pop
xchg
imul
mov
cmp
adc
jae
cmp
cmp
cmp
clc
and
and
push
into
mov
jmp
mov
push
in
mov
iret
aas
in
vmovaps
mov
into
je
mov
dec
ds
lret
and
mov
and
mov
stc
movsl
pop
dec
in
dec
ret
adc
rorb
ljmp
push
jmp
pop
sti
hlt
xor
mov
pop
repnz
shll
adc
mov
hlt
sub
imul
pop
mov
das
pushf
fldln2
addr16
cmp
xchg
es
inc
fwait
jb
pop
fwait
sti
add
jmp
bound
aad
ljmp
scas
repnz
cld
mov
pop
dec
jo
push
les
push
xchg
xchg
stc
or
aad
dec
ss
sbb
cmp
dec
inc
xor
push
dec
int3
jmp
sub
stos
and
imul
xchg
into
mov
cmp
stos
mov
cmp
mov
adc
pop
mov
sbb
js
cmp
fs
andb
loopne
jp
sbb
data16
xor
inc
xor
jge
in
iret
ror
fildl
lahf
or
xor
xor
inc
js
mov
addr16
in
adc
mov
icebp
mov
cmpl
loope
out
or
add
outsl
loop
mov
push
lahf
jnp
aas
mov
test
jae
cmp
bound
insl
popa
in
arpl
lret
dec
cli
test
pop
je
pushf
mov
push
jge
idiv
mov
idivb
pushf
jbe
sub
test
into
adcl
popa
sbb
es
xchg
pop
aad
push
sub
iret
mov
add
in
push
xorl
ficoms
pop
iret
jg
popa
pop
sub
mov
lret
add
rcrb
daa
inc
inc
cmp
imul
sbb
jmp
and
mov
loop
js
test
mov
pop
ret
aad
rclb
dec
jo
xlat
outsl
orb
xor
fldl
faddp
sub
in
fcomps
iret
fld
iret
jp
pop
mov
mov
jne
ret
dec
cld
popf
loopne
adc
js
int3
push
bound
add
sub
mov
stos
ljmp
mov
adc
xchg
dec
insb
cld
xor
cmpsl
pop
mov
and
test
jbe
js
xchg
push
xor
nop
pop
in
jmp
loop
cmp
int
sub
push
loope
decb
cmp
int3
sbb
xchg
jo
dec
pop
inc
cli
or
pop
mov
pushf
jo,pn
xchg
out
lds
sbb
and
lret
pop
or
divb
outsb
jp
sub
bound
enter
mov
shrb
jg
rcr
cmp
hlt
loop
iret
rcrb
and
rcll
jbe
movsl
sub
mov
cmp
cmp
mov
adc
popa
gs
push
push
and
cmp
inc
sti
jp
mov
dec
sahf
sbb
out
testl
mov
xchg
xor
bound
fldt
dec
je
sbb
cmpsb
call
aam
out
adc
pop
fistpll
mov
ret
mov
or
icebp
dec
push
lret
roll
aam
cli
addr16
nop
hlt
jne
mov
xor
aad
lds
mov
push
push
push
sti
in
sbbl
pop
cwtl
js
pop
push
dec
adc
or
inc
fdivs
cmp
cld
stc
xor
lcall
cmp
scas
sub
dec
shlb
pop
cmpsl
lret
jne
addb
pop
adc
sub
mov
mov
pop
xchg
push
std
out
mov
xor
push
mov
flds
push
sub
in
imul
movsl
inc
pop
xor
mov
lea
int3
and
xchg
inc
sub
inc
loopne
mov
pop
in
scas
push
dec
mov
pop
push
or
pop
enter
mov
es
addr16
jnp
mov
push
mov
xor
cmp
pop
push
movsb
sti
test
mov
push
rolb
int
add
loop
sbb
or
xor
movl
in
test
outsl
and
mov
popf
hlt
insl
loop
hlt
jp
cmp
lcall
pusha
jg
cwtl
sub
sbb
sub
jo
push
dec
pop
cmp
xchg
es
sbb
mov
or
aas
xchg
stc
test
out
or
adc
insl
mov
sbb
cmpsl
nop
jo
mov
cmpsb
mov
jnp
insb
mov
jbe
leave
and
aam
test
ret
arpl
mov
daa
je
mov
mov
mov
loopne
or
and
das
jg
sbb
inc
in
pop
mov
mov
fwait
jo
inc
sub
cs
ror
mov
pop
mov
jge
adc
xchg
shrl
in
call
and
jmp
add
or
lahf
jnp
fst
dec
cmpsl
lret
pop
pop
cmp
outsl
pusha
test
mov
sub
xchg
inc
imul
adc
add
test
mov
dec
test
xchg
lock
icebp
push
filds
loop
push
arpl
cmpsb
or
jge
lock
mov
mov
jno
lret
mov
pusha
xlat
int
pop
pop
fwait
cld
adcb
xor
mov
out
or
or
xlat
xchg
xchg
orb
sub
sbb
sar
popa
mov
add
jns
popa
shrl
pop
hlt
aas
xlat
pop
mov
push
push
adc
cmc
xchg
add
cmp
jmp
popf
imul
sti
mov
inc
cltd
mov
movsl
in
mov
loopne
out
add
cmp
test
js
ds
gs
or
out
add
loope
or
mov
mov
xchg
roll
cmp
lods
xlat
mov
outsb
in
xchg
fcom
inc
pop
mov
lds
shl
pushf
lcall
mov
mov
cmp
or
mov
call
stos
fbstp
xor
aad
or
xlat
adc
stc
fcoms
dec
leave
pop
insl
dec
mov
jmp
xchg
and
clc
lcall
jg
pushf
test
xor
xor
out
adc
shll
dec
lcall
and
sbb
xlat
push
xor
ja
mov
inc
setnp
fxtract
repnz
test
xchg
hlt
in
push
andl
out
cmp
jno
cwtl
popa
sub
jae
cmc
fldl
mov
adc
dec
stos
daa
ds
xchg
cmp
adc
loope
fsub
xor
jo
cmp
inc
loop
or
sub
ljmp
ficompl
pusha
push
add
add
cmp
ljmp
hlt
call
mov
scas
mov
xchg
fiaddl
mov
mov
scas
jne
push
movsb
dec
cmpsb
ss
mov
icebp
mov
jbe
dec
dec
pushf
mov
push
jns
and
outsl
repz
outsl
ja
mov
adc
mov
mov
and
jae
loopne
jb
outsl
into
andb
mov
cmpsl
or
call
imul
and
lea
mov
ret
cmc
ss
loope
pop
les
mov
inc
or
inc
arpl
inc
dec
push
imul
push
adc
xorl
adc
lcall
fcmovnu
clc
mov
pop
sub
or
sbb
fcomps
mov
ss
push
jns
repz
test
pop
incl
add
repz
fs
call
and
icebp
sbb
pop
js
lea
stos
in
addr16
sub
adc
xchg
lahf
push
or
or
cld
jge
iret
sub
js
aas
sbb
cltd
scas
mov
loope
push
push
inc
push
rclb
sbb
aas
clc
test
jbe
fwait
jno
in
test
cmp
pusha
popa
cmp
loopne
add
test
aad
loopne
hlt
shl
clc
mov
int3
out
inc
cld
nop
mov
mov
clc
and
rcl
or
jl
mov
clc
mov
xchg
or
jle
adc
loope
paddusb
adc
xchg
jne
jg
mov
pop
cmp
and
fwait
daa
mov
movsl
loopne
lret
repz
cld
dec
jnp
push
rcrb
push
inc
and
repnz
mov
lcall
pop
jno
or
nop
jmp
mov
into
mul
cld
hlt
test
lea
xchg
mov
insb
push
incb
cltd
and
xlat
aas
pop
testl
or
push
pop
addr16
jne
jge
inc
mov
xchg
ja
and
jle
cs
popa
sub
lds
xor
push
mov
scas
shll
nop
leave
or
and
or
inc
into
nop
sbb
pop
jo
inc
xor
shll
imul
cmp
sub
mov
jle
jb
ss
and
push
fs
hlt
jp
out
shlb
or
and
adc
jnp
push
sub
lcall
stos
stos
xlat
mov
mov
out
mov
sarb
mov
sbb
xorb
cmp
fsubl
pop
mov
push
std
aaa
sbb
out
or
dec
pusha
and
push
das
sub
fsubs
lods
sbb
mov
cli
mov
js
enter
mov
sbb
mov
lcall
xor
sub
addr16
jnp
pop
pushf
xor
mov
jmp
or
cmpsl
out
mov
add
out
in
dec
xchg
fsts
inc
push
pop
mov
push
sub
cmp
dec
cld
cmpsl
and
jo
adc
sbb
lret
test
cmp
adc
call
pop
loop
loope
xor
add
xchg
loop
adc
loopne
or
lea
outsb
cli
lock
aas
inc
pop
out
addr16
bound
mov
or
fstps
nop
subl
mov
xor
adc
fsubr
sbb
sub
test
dec
arpl
add
mov
scas
adcb
imul
sub
fisubrl
aad
pop
je
adc
cmpl
jno
push
lret
jo
jno
dec
mov
jns
mov
ljmp
or
mov
xor
stc
sahf
fs
out
inc
push
xchg
clc
mov
jmp
sub
mov
ret
mov
adc
mov
shl
sbb
pop
into
lcall
mov
and
jg
arpl
cmp
fxch
roll
out
je
iret
push
arpl
dec
cli
dec
mov
jecxz
xchg
jle
and
dec
negb
sbb
stos
push
mov
ljmp
popa
lahf
cltd
rclb
lret
jp
mov
inc
aad
dec
push
push
fdivs
data16
fstpt
pop
icebp
idivl
jge
vpslld
xchg
mov
outsl
pop
xor
jp
cmp
cmp
subb
lret
jne
out
lahf
hlt
rorb
movsb
insl
repz
xchg
and
lods
inc
pop
in
pusha
les
pop
out
rorb
pop
mov
lea
or
jns
or
lcall
cmp
lea
xor
pop
mov
sbb
leave
sbbb
inc
inc
add
adc
or
push
jg
lret
shl
mov
or
aad
loopne
movsl
shll
sti
jnp
jns
add
pop
enter
jp
or
pop
xor
pop
or
gs
add
jo
mov
or
pop
sar
scas
add
repnz
jmp
aad
scas
sub
test
dec
sbb
adc
mov
shll
cmp
adc
mov
fsubrs
mov
fs
sbb
cmp
notb
cmp
add
sti
daa
add
adc
or
sub
popf
mov
rcll
cmp
sub
shlb
adc
pop
jne
or
add
pop
and
inc
mov
dec
std
adc
andb
cmp
inc
xor
sarb
arpl
ds
sbb
inc
push
mov
add
insb
lahf
xlat
mov
push
in
push
sub
cs
test
and
xor
pushf
stos
sahf
in
inc
lret
pop
leave
leave
imul
sub
push
add
ljmp
jge,pt
shrb
and
pop
repnz
shll
jp
mov
fwait
mov
jae
lods
ret
sarb
pop
pop
arpl
pop
lret
xor
cltd
mov
inc
pop
mov
cmp
rcr
fs
jle
ficoml
xchg
xor
fcoml
push
xchg
mov
jbe
aas
mov
movsl
sbb
xor
inc
dec
clc
add
sbbb
or
mov
lock
lods
add
mov
jg
and
ss
repz
cltd
and
loopne
jns
aam
mov
call
mov
cs
mov
imul
dec
or
lds
cmp
js
aas
bound
jl
inc
aas
cltd
shlb
push
fxch
inc
add
pusha
sti
cld
mov
inc
or
xchg
push
mov
mov
jne
or
out
shrl
test
mov
cmp
add
and
mov
inc
addr16
arpl
or
cmpsl
pop
push
cmc
insl
mov
pop
lods
call
and
ljmp
xchg
dec
outsb
lret
daa
ret
pop
push
sahf
pop
fstp
subb
sbb
pop
add
ljmp
outsl
mov
add
dec
addb
xchg
loopne
mov
cmp
ret
out
rcrl
jae
push
add
dec
jnp
pop
mov
aas
cmp
pop
insl
mov
or
sti
xchg
jo
mov
sarb
jmp
aaa
pusha
ss
repnz
popa
fidivrl
fwait
je
inc
lds
push
adc
dec
cmc
insb
jno
fs
in
cwtl
cwtl
mov
xchg
push
loopne
push
pop
or
test
add
pop
stos
xchg
jge
mov
mov
push
call
jl
jmp
pop
arpl
sub
ja
sahf
fists
std
fs
lahf
xchg
popa
cs
xlat
lds
std
inc
mov
hlt
inc
aaa
test
mov
cli
rcrb
aaa
sub
push
mov
cmpsl
push
scas
xor
sbb
idivb
shll
adc
sub
mov
and
negl
jbe
cmp
fnstenv
add
and
fdiv
addr16
xchg
idivb
aad
popa
mov
rorb
stos
or
xor
aam
das
in
push
leave
push
js
sbb
xor
roll
add
enter
roll
sahf
pavgb
cmpsl
loop
imull
xor
jbe
dec
ja
test
popf
xchg
mov
adc
inc
leave
pop
push
sbb
addr16
add
jp
pop
push
mov
adc
xchg
xor
enter
push
call
mov
stos
cmp
cltd
dec
fidivrl
mov
rolb
add
inc
cli
in
jp
adc
mov
adc
test
out
push
fdecstp
mov
inc
repz
gs
mov
pcmpeqw
xorb
dec
jg
sub
aaa
lds
movntq
pop
clc
pop
dec
iret
into
mov
jns
mov
cmp
test
lods
cmp
jmp
les
mov
sar
lret
dec
xchg
inc
mov
out
movsl
pop
mov
jo
inc
lods
lcall
push
push
ljmp
cmp
in
add
inc
xchg
fdivrl
jecxz
pusha
sub
mov
std
cs
push
popf
stc
pop
fwait
loopne
inc
dec
sbb
hlt
rorb
bound
mul
mov
jo
adc
orl
pop
cmc
das
filds
xchg
pop
pop
test
mov
lahf
fsubl
pop
inc
mov
aad
ljmp
jg
js
insb
adc
and
dec
hlt
push
popa
xchg
xor
cmp
test
jo
pop
xchg
sbb
sbb
sub
mov
fst
xchg
div
insb
sbb
les
imul
pop
sub
ret
xchg
rcr
imul
hlt
cmpsb
or
cmp
mov
imul
ja
and
xchg
pop
psubd
pop
das
insl
inc
imul
imul
aaa
jle
stos
or
sbb
inc
icebp
xchg
mov
testl
pop
mov
int3
mov
jmp
push
shrb
ds
leave
xchg
fstenv
stc
hlt
dec
stc
add
bound
push
cmp
cmc
sub
mov
add
enter
int3
mov
lods
jo
dec
mov
xchg
mov
mov
push
adc
in
pusha
or
jo
pop
stos
clc
push
and
repz
add
dec
ret
and
mov
fwait
leave
mov
or
mov
ja
rorb
stos
ffreep
or
rorb
add
push
popf
add
lcall
decl
xchg
insb
mov
push
mov
lods
push
lods
pop
filds
fmull
push
insb
popa
es
imull
jo
push
xchg
and
mov
popa
ret
daa
icebp
cmpsb
jbe
aas
jae
js
in
ret
mov
out
inc
jns
repnz
xchg
pop
xchg
in
cltd
jns
pop
in
lcall
insl
mov
or
push
cmpsb
je
push
pop
push
aaa
lds
in
jmp
cmp
dec
popa
sbb
pushf
mov
in
inc
aas
add
sbb
push
push
dec
or
push
xchg
jne
in
dec
jns
inc
fiadds
das
inc
movsb
and
out
popf
mov
sub
stos
stos
mov
push
add
mov
sub
and
xchg
in
mov
adc
inc
xchg
cltd
and
ret
inc
cld
mov
jmp
test
out
xchg
add
daa
das
pop
mov
imul
into
and
xchg
ljmp
mov
mov
sti
add
iret
jbe
out
sbb
orb
out
mov
lea
cli
sahf
mov
xchg
ret
jmp
iret
imul
fwait
xorl
stos
ficomps
out
inc
add
jmp
jg
inc
jno
mov
jno
enter
add
push
cmp
stos
inc
push
call
test
clc
test
mov
cs
mov
sar
xchg
inc
jp
mov
stos
dec
sub
movsb
lods
xchg
lret
bound
scas
add
scas
loopne
cmp
fistps
pop
mov
out
aam
inc
mov
test
mov
mov
mov
fcmovbe
sub
sbb
sti
mov
mov
cmp
add
outsb
add
imul
cmpsl
xchg
inc
shll
inc
enter
aaa
shrl
mov
dec
xor
int3
std
test
pop
loope
add
push
jp
jnp
inc
dec
cmpsb
repnz
test
into
xor
inc
or
les
adc
sbb
mov
test
adc
cmpsl
fstps
sbb
lock
mov
movsb
int
icebp
and
push
cld
dec
dec
cmc
pop
sbb
dec
mov
insl
repnz
cs
push
test
lcall
and
or
outsl
xchg
daa
xor
test
push
outsl
roll
lds
sbb
lahf
cmc
sub
cmp
push
mov
xor
pusha
mov
add
sarb
jle
lret
movsb
das
adcb
adc
mov
jne
add
imul
out
add
push
aam
into
add
jne
cmp
cmpsl
aam
sahf
xchg
xchg
test
and
pop
push
adc
xor
jnp
mov
cli
sbb
ret
adc
pop
xor
leave
add
les
xchg
pushf
sbb
sbb
aaa
jb
xchg
dec
hlt
jecxz
jo
dec
or
aad
out
cmp
xchg
mov
adc
lds
cmpsl
out
add
imul
fstl
sub
ret
cmpsb
add
ss
lds
test
test
adc
jo
fisubl
xchg
dec
jmp
fcmovnu
sbb
aaa
sub
aam
cmpb
ljmp
sti
lods
add
fbstp
mov
jmp
ret
fs
pop
mov
mull
clc
lcall
mov
sub
nop
incl
mov
xchg
sbb
jmp
xchg
cltd
orb
sub
jno
add
mov
jl
lods
add
dec
add
jge
fwait
sbb
shlb
fsub
jge
ret
mov
mov
ds
cs
mov
jbe
stos
out
and
faddp
mov
pop
dec
jne
push
out
iret
cmp
leave
push
xchg
je
dec
and
loop
repnz
jecxz
sbb
nop
mov
cmpsl
scas
out
adc
inc
push
outsl
aaa
cmpsb
mov
jo
add
addr16
sbb
test
iret
pop
jecxz
xchg
xor
cmp
jg
dec
lods
cmp
push
movsl
sbb
xorl
inc
push
stc
mov
rorl
and
jno
mov
push
pop
insl
mov
shlb
or
cmpsl
dec
popa
add
push
jnp
adc
dec
dec
int
aaa
adc
adc
sub
dec
loope
mov
rorb
call
stos
addb
jmp
imul
repz
lret
fisttpll
stc
test
xor
jg
bound
sub
movsb
dec
fwait
mov
adc
popf
daa
stc
icebp
aam
dec
pop
sbb
pop
and
sbb
clc
das
mov
out
add
adc
sbbl
lret
jl
cmp
push
icebp
dec
aas
nop
repnz
push
mov
push
jne
js
mov
fndisi(8087
sbbl
mov
adc
push
movsb
mov
cmp
in
rolb
stc
or
leave
rorl
mov
pop
std
jle
and
mov
movl
out
mov
mov
setge
add
xchg
or
add
ret
adc
xor
xchg
fildll
sti
sub
iret
fwait
insb
mov
dec
cs
sub
aaa
inc
add
add
jne
sahf
test
xor
addr16
into
add
aam
jb
sub
pop
ja
mov
cmp
jp
enter
pop
pop
jl
mov
pushf
shrl
rclb
jp
add
mov
stc
sti
dec
mov
repnz
jge
and
cwtl
xor
mov
rorl
mov
aaa
imul
div
xor
pop
insl
add
rcr
mov
outsl
in
mov
test
pop
aam
jo
sbb
icebp
pop
aas
int3
adc
leave
jb
in
jle
inc
cld
pop
mov
adc
fcoms
mov
inc
sbb
mov
lcall
dec
and
es
shrb
outsb
movsl
mov
pusha
inc
adc
add
mov
sbb
jo
push
mov
jns
popa
xchg
clc
push
in
jbe
aad
out
inc
push
scas
inc
add
pop
in
cmpsb
mov
cmp
shll
rol
jmp
iret
out
mov
add
xor
xchg
stos
xor
es
ljmp
loop
pushl
test
ss
jp
jnp
dec
clc
sbb
pop
in
test
inc
dec
adc
dec
mov
movsb
popa
mov
jp
pop
in
ret
call
fisubrs
ss
xchg
mov
or
fs
sarl
pop
call
inc
cld
jle
lods
stc
scas
add
fucom
xchg
adc
sbb
mov
xor
and
jmp
subl
jb
je
icebp
add
icebp
stos
dec
and
xchg
lods
jbe
addr16
out
stc
cmc
xor
push
dec
insb
dec
jecxz
cmp
lods
mov
and
pushl
push
faddl
and
push
testb
test
cmpsl
ljmp
mov
icebp
dec
iret
xor
les
sbb
shlb
sti
ja
pusha
push
in
or
pop
adc
push
mov
mov
mov
out
lcall
sub
movsb
mov
aaa
or
inc
cmp
sub
mov
fnsave
cmp
lahf
xor
test
pop
mov
xchg
sbb
dec
jmp
ss
mov
nop
and
stos
fnstenv
jp
bound
dec
dec
mov
mov
aas
je
jbe
cmp
sbb
pop
mov
sub
fistpll
inc
mov
std
ficomps
sti
imul
xchg
je
push
setb
mov
add
dec
divb
sub
pop
add
movzwl
ja
lret
sub
das
mov
xor
shll
add
fisubs
insb
cmp
pop
loop
dec
movsb
sub
roll
add
xchg
loopne
in
cmpsb
sbb
ret
xchg
jmp
adc
sbb
adc
mov
in
adc
stos
jno
pop
out
scas
mov
inc
pop
jmp
mov
in
pop
fcomps
mov
push
clc
js
push
andl
sbb
jle
stos
mov
fidivl
fsubrs
jne
into
in
pop
leave
stc
xor
mov
push
int3
xchg
dec
xor
or
pop
xor
jle
sub
bound
lods
sbb
or
cmpsl
lods
xor
add
pop
cmp
movsl
sbb
imul
lcall
jnp
mov
cmp
in
sub
dec
cmp
mull
mov
ss
add
pop
movsl
ds
out
jg
or
sbb
push
out
sti
shrb
push
dec
js
testb
ret
add
bound
movsb
lds
or
cwtl
and
or
pop
in
jno
aaa
hlt
ja
bswap
ja
lcall
adc
inc
fwait
int
jne
push
jns
cmp
ja
fldenv
ds
sub
and
mull
jnp
lock
mov
add
call
insb
adcl
int3
mov
dec
cmp
or
cwtl
fdivl
dec
inc
inc
mov
fcmovu
mov
rorb
scas
daa
mov
xchg
xchg
or
shl
push
dec
dec
inc
lea
cmp
adc
imul
testl
and
je
xchg
mov
xchg
dec
enter
dec
addb
pushf
movsb
pop
mov
push
ja
cwtl
or
jle
les
test
lret
sub
rcll
mov
imul
lret
pop
idiv
lods
pop
or
push
mov
aam
pushf
js
fistpl
fisttpl
jp
dec
imul
out
test
subl
and
loope
adc
and
mov
xor
dec
mov
ror
scas
jle
xor
or
mov
push
cli
lea
adc
pop
dec
inc
sbb
jb
addl
add
or
insl
cs
push
jecxz
ficomps
mov
shlb
int3
nop
cmc
flds
mov
sahf
sbb
sahf
mov
gs
fucomp
out
les
jnp
int
fsubrl
pushf
inc
mov
adc
fistps
clc
cltd
mov
inc
dec
xor
cmpb
dec
sub
jmp
dec
addr16
jle
stos
and
popa
imul
repnz
hlt
stos
adc
push
lahf
jbe
pop
imul
push
scas
cmpsl
pop
sbb
xor
xchg
mov
movsb
int
mov
jmp
andb
push
loopne
jo
jecxz
scas
dec
scas
ljmp
xchg
sbb
jle
push
inc
jb
iret
ret
mov
test
inc
rcll
arpl
push
inc
movsl
je
in
add
fwait
or
inc
mov
popf
imul
pop
daa
in
push
adc
mov
cli
sub
fisubl
inc
ds
sar
mov
cmc
in
dec
mov
inc
popf
or
cmp
aas
int3
add
sti
sbb
sahf
je
pop
addr16
mov
fistl
std
dec
divb
scas
jl
sbb
fucomp
loopne
insb
shrb
jb
add
lea
cltd
repz
mov
clc
and
mov
insb
insb
push
or
cld
dec
mov
push
cmp
lock
je
ds
mov
push
push
leave
stc
jle
pop
sbb
repnz
iret
ljmp
push
outsl
inc
daa
fdivrp
mov
mov
pop
mov
shlb
or
repz
sub
pop
repz
xor
dec
lcall
jae
sub
jg
lock
aas
inc
fidivl
jecxz
xchg
inc
and
lods
dec
push
subl
mov
mov
mov
push
out
lahf
into
cmp
push
shl
xor
test
rcll
add
popf
cld
mov
mov
js
xlat
push
jge
or
out
bound
dec
add
adc
jge
insl
jb
ljmp
or
xchg
and
je
xlat
mov
movsl
cmpb
shl
and
jl
or
mov
repz
or
test
rclb
xor
les
cltd
cmpsb
bound
xchg
sub
aam
jae
jmp
iret
push
fdiv
daa
das
stc
mov
nop
xor
cwtl
pop
in
insb
push
mov
movb
repz
mov
repnz
push
mov
mov
and
jle
mov
iret
lcall
hlt
xor
arpl
and
fwait
dec
xchg
mov
ljmp
lock
fwait
adc
xchg
sahf
jge
mov
push
mov
or
test
test
ret
stos
arpl
xor
test
inc
adc
mov
sbb
or
das
shlb
xor
or
inc
insb
mov
out
mov
mov
mov
enter
insl
xor
pop
cmp
push
popa
ret
in
sub
fsubl
push
arpl
jge
loope
jae
scas
ret
jno
arpl
fnsave
test
push
mov
push
fildll
inc
daa
and
lret
lret
add
jmp
adc
lcall
call
and
loopne
jle
ficoms
or
mov
std
negb
mov
xor
add
js
in
pop
sbb
dec
mov
dec
jb
push
xchg
stc
xor
sbb
lret
adc
mov
add
ljmp
out
mov
shlb
ret
push
jmp
lds
daa
inc
jnp
sarb
and
jp
imul
dec
in
xchg
ja
repnz
pop
push
jo
jae
or
or
push
xchg
insb
and
call
mov
stos
mov
aam
mov
sbb
adc
aaa
inc
adc
sarl
jge
and
dec
jp
add
xchg
dec
out
xchg
push
mov
cmp
xchg
dec
out
push
push
cmp
push
pop
pop
arpl
mov
call
pop
push
mov
adc
ficomps
shll
shl
ret
xor
inc
sbb
lahf
xchg
mov
mov
xor
addl
ret
loopne
jg
imulb
testl
adc
in
test
lods
lret
xor
sub
cmp
arpl
fs
sub
imull
jb
js
arpl
mov
loop
jle
leave
and
cmp
inc
std
movsl
jno
mov
ret
xor
lods
icebp
sbb
push
pop
jbe
push
call
loop
adc
mov
dec
sbbl
push
ljmp
bound
fst
into
jl
dec
push
outsb
jbe
hlt
sub
cltd
xchg
loop
clc
xchg
jl
ljmp
xchg
jle
mov
jnp
xchg
test
xor
fcomps
scas
sbbb
pushf
dec
test
mov
movsb
inc
dec
push
inc
xor
ljmp
mov
adc
xchg
scas
or
dec
fwait
pop
fwait
and
inc
pop
and
pushf
hlt
mov
aaa
cs
jnp
loope
or
sub
out
out
push
push
mov
pop
enter
push
jo
sub
pop
mov
add
xchg
sbb
and
sub
jp
mov
xchg
xchg
outsl
pop
sbb
in
sbb
mov
leave
and
bound
cs
xor
fwait
mov
imul
bound
jbe
push
pop
jge
fwait
sub
movsl
push
outsb
mov
bound
xlat
nop
cmc
xchg
cmc
sub
gs
cmc
mov
push
jno
std
rolb
sbb
fsubs
aad
pushf
adcb
sub
cmpl
sbb
stc
bound
mov
sahf
mov
mov
mov
xor
fcoml
ljmp
mov
ret
mov
pop
or
popa
push
sub
mov
in
std
jb
pop
jbe
ljmp
js
inc
push
mov
cmp
cs
test
sub
sahf
test
lea
sbbl
fnstenv
or
push
ja
call
mov
push
imull
xor
jo
enter
enter
addr16
iret
adc
jecxz
push
ret
jmp
pop
sarb
or
sbb
lret
mov
and
push
ja
add
and
mov
cltd
xlat
sbb
test
dec
lods
lods
sub
pushf
loopne
adc
adc
pop
movsl
ret
xor
add
mov
push
cs
in
gs
gs
cld
clc
mov
or
sub
push
out
mov
scas
push
cld
mov
jb
sti
mov
mov
je
sub
mov
movsb
push
ret
jb
mov
pop
stos
pusha
mov
jnp
jecxz
divl
sbb
sti
mov
jl
pop
fists
xchg
fs
es
cmp
in
sub
enter
jp
loope
imul
mov
mov
xchg
in
icebp
dec
sahf
inc
imul
mov
movsl
jp
cld
jns
insb
mov
aad
fnstsw
call
cltd
jbe
repz
ret
in
pushf
shll
pop
dec
sbb
add
mov
cltd
leave
lock
cmp
jmp
orl
mov
adc
mov
push
negl
sahf
xchg
jno
xor
movsl
or
lcall
addr16
pop
loope
jne
int
dec
jmp
pop
dec
insb
sbb
shll
int3
ret
add
mov
pop
imul
inc
leave
ret
xchg
pop
inc
jns
testb
adc
adc
and
shlb
fbld
xor
cmp
push
fwait
xchg
or
outsl
jp
cli
shlb
in
xchg
dec
mov
push
cmc
pushf
rclb
je
in
loope
jnp
inc
leave
pop
xchg
or
sbb
das
push
leave
inc
or
ror
jl
add
call
sti
mov
push
pop
lock
test
cmp
cs
into
cli
add
fs
ds
pop
outsl
in
lods
in
pop
enter
ljmp
push
adc
mov
dec
adc
push
xchg
mov
mov
stos
les
mov
jno
rolb
jle
mov
pop
inc
shr
arpl
xchg
dec
les
or
jae
test
nop
jno
inc
xchg
addr16
in
pop
xchg
push
inc
popa
mov
addr16
bound
inc
popa
sarl
xchg
je
mov
cld
cs
test
fcmovu
lods
scas
lock
mov
stos
xor
nop
retw
call
add
cli
or
mov
inc
dec
cmc
mov
mov
inc
mulb
out
test
cs
shlb
pop
loopne
push
jo
aas
mov
hlt
sub
into
lahf
push
inc
js
sub
xchg
jbe
rol
les
xchg
test
fcomps
sbb
inc
mov
sbb
dec
and
out
pop
shrl
inc
xchg
jecxz
cmpsb
adc
test
test
adc
push
faddp
js
lds
jns
lea
xor
xlat
adc
bound
in
dec
pop
cwtl
gs
or
cmp
add
mov
jo
stos
incb
scas
pop
and
push
jmp
inc
push
aam
lahf
pop
cld
les
movsl
add
mov
repnz
xchg
or
cmp
js
das
dec
fcomip
xchg
pop
in
cmovne
cmc
pop
adcb
or
outsl
out
adc
outsb
sbb
jge
fs
inc
or
ja
or
push
cmc
mov
push
mov
cld
adc
add
push
pushf
cmpsl
cmpsb
inc
or
mov
xchg
jl
or
add
mov
push
shrb
cmp
pop
movl
adc
adc
in
scas
outsb
daa
cmpsl
push
lret
jnp
jbe
call
fisttpll
jne
adc
jmp
cmpsl
dec
imul
aad
sub
cli
dec
xor
jne
sahf
dec
lret
shll
add
and
testl
les
dec
jl
jmp
sub
jno
std
cmp
aas
sbb
ret
les
in
xchg
cwtl
adc
mov
cmp
test
stos
scas
push
xor
aam
mov
jl
or
scas
aad
gs
loop
lret
fistpl
lods
jmp
jno
xlat
lea
xchg
xor
xchg
sub
mov
sbb
es
std
or
inc
push
jg
je
xchg
inc
and
mov
pop
inc
mov
cwtl
mov
rol
jno
inc
jns
mov
or
mov
andnps
pop
je
mov
mov
lds
push
xor
ficomps
popa
push
mov
dec
add
jno
sti
xchg
fwait
mov
aaa
les
xchg
iret
push
in
cmp
jae
dec
dec
sahf
jg
sub
push
jb
cmpsl
jl
pop
ds
fidivrl
int3
movsl
shlb
pop
cli
ja
mov
push
fcompl
push
adc
mov
dec
into
pop
push
out
pop
imul
sub
dec
jg
pop
fmulp
loop
rorl
outsb
add
xchg
mov
jge
js
adc
sti
pop
sbb
scas
push
or
stos
ja
fcomp
cmpsl
lret
xchg
out
adc
dec
in
mov
cmc
xchg
arpl
adc
cmp
movsl
pop
mov
pushf
fsubs
fidivs
push
jnp
push
pop
jp
pop
add
iret
xor
dec
mov
fs
into
sbb
test
cmp
sbb
pop
xlat
push
icebp
mov
dec
fdivs
jmp
faddp
call
jbe
fimuls
cmp
sub
js
ficompl
pop
cmp
inc
fldpi
pop
and
push
out
mov
push
mov
cmp
mov
inc
loop
inc
cs
push
clc
lock
rcrb
xor
mov
loopne
mov
outsl
pusha
cmpsl
sub
mov
lret
lock
rcll
in
int
jp
jbe
fcmovnu
dec
sbb
cwtl
and
xor
sub
mov
sub
lds
sub
jmp
movsb
mov
lahf
lcall
mov
push
or
sbb
cmp
adc
cmp
xchg
and
mov
xchg
xchg
lods
or
stos
pushf
repnz
cmpsb
inc
sub
sbb
cmpsl
push
mov
jo
jg
sti
les
and
inc
in
repz
and
loope
or
jbe
cwtl
and
sub
and
pop
into
inc
lret
inc
lds
dec
xchg
pop
mov
jno
lds
mov
ljmp
and
into
xor
adc
dec
scas
and
mov
std
popa
mov
mov
movsb
movsb
arpl
in
in
das
mov
in
outsb
aam
xchg
dec
mov
sub
pop
sbb
inc
scas
jo
stos
cld
ljmp
popf
cmp
insb
jo
ret
iret
add
push
inc
mov
cld
stc
push
stos
push
leave
mov
xorl
das
cmp
outsl
lahf
inc
sbb
jb
cmpb
inc
andb
push
pop
xchg
pop
jmp
jmp
adc
mov
jl
dec
ret
stos
into
cltd
fcomps
dec
inc
mov
add
pop
sbb
jnp
jno
lock
rolb
pop
imul
mov
pop
jp
stos
jnp
cmp
ljmp
push
or
mov
insl
jp
cmp
stos
push
add
inc
lock
sub
pop
hlt
xor
and
xor
ret
fisubs
cmovle
jmp
xchg
scas
dec
xor
loopne
aaa
insl
xchg
movsb
sti
imul
fdivs
adcb
add
push
call
mov
mov
cmp
rcrb
jb
imul
loop
pop
mov
mov
clc
push
xor
mov
cwtl
adc
or
xchg
loop
arpl
rorl
lock
and
icebp
xor
add
and
bound
insl
and
push
pop
inc
shlb
dec
jae
pop
mov
add
add
cmpsb
xchg
jnp
decl
mov
cmc
jp
sub
cmp
in
enter
push
xchg
sub
outsb
ds
repnz
push
mov
xchg
or
mov
fisttpll
ret
popf
xchg
lret
push
lea
fcoml
in
sub
inc
test
in
ret
or
xchg
xor
push
popa
div
es
in
jmp
or
xor
push
mov
shr
or
push
loop
pop
fbstp
icebp
pop
and
xchg
les
es
cltd
push
and
test
arpl
pop
xor
sub
cmp
inc
andl
ficomps
jp
sti
lcall
adc
roll
fwait
in
aam
jle
or
aas
dec
inc
xor
in
sub
frstor
aam
mulb
push
jnp
sahf
jb
fisubrs
repz
push
jns
cli
adc
xchg
mov
adc
sbb
arpl
stc
imul
orb
or
es
mov
adc
add
pop
enter
cmpb
mov
jno
dec
and
cs
mov
adc
outsl
mov
mov
sti
mull
dec
push
dec
or
cmp
jnp
mov
or
inc
push
cmp
testl
add
popa
add
xchg
pop
les
inc
xor
or
enter
gs
adc
data16
ret
imul
gs
xchg
mov
and
xorb
lahf
xchg
dec
aad
fmul
mov
call
add
aam
cld
clc
add
dec
test
push
push
pop
mov
stc
adcb
xlat
repnz
pusha
dec
inc
je
sbb
movsb
out
inc
testb
sub
and
xchg
js
sbb
jecxz
dec
inc
sub
dec
ss
and
jmp
inc
mull
dec
add
repnz
mov
cwtl
pop
xor
test
add
nop
in
sbbl
pop
mov
jmp
xchg
idiv
xor
adc
jae
dec
bound
mov
jno
pop
add
les
add
dec
inc
xchg
sbb
pop
push
rcll
push
adc
pushw
xacquire
imul
dec
jb
iret
sub
cmp
xor
sar
pop
mov
adc
in
or
fildll
repnz
or
fnstcw
aas
into
jo
xor
stos
push
sub
sbb
mov
mov
sub
into
jo
data16
mov
clc
dec
test
sbb
in
jns
aaa
dec
xor
push
dec
iret
cld
mov
mov
mov
iret
out
adc
jle
or
mov
xor
test
lea
and
fsubrs
or
push
pop
aad
cmp
fs
out
pop
cltd
xor
pop
jbe
pusha
add
dec
jmp
and
push
pop
out
inc
repnz
jg
xchg
loope
outsl
xor
aaa
or
pushf
sub
sbb
shlb
ljmp
xchg
jg
mov
ljmp
sahf
dec
arpl
pushf
and
jns
jle
mov
cmpsb
stos
lahf
pushf
fs
cld
aam
xor
push
repz
push
fxam
pop
icebp
or
sbb
outsl
aam
in
xor
inc
test
arpl
insb
add
inc
repnz
jl
insb
movsl
call
mov
popa
xchg
cmp
cmc
sbb
insb
enter
jns
insl
xchg
shll
sbbb
cld
push
jns
jo
out
idivl
pop
mov
insb
jp
fwait
push
add
dec
ret
outsl
inc
mov
inc
ret
mov
jg
lcall
pop
into
add
outsb
test
add
lcall
jnp
jle
mov
pop
or
cmp
bound
mov
enter
sbb
in
packuswb
in
or
sbb
fs
ret
clc
sub
sbb
mov
push
mov
cmp
fs
pop
pop
xchg
adc
clc
pop
shlb
pop
add
add
dec
mov
repnz
into
movntps
push
xchg
jns
jb
cltd
sti
xchg
push
mov
cltd
cmp
inc
adc
xchg
je
cmp
and
enter
jecxz
push
or
inc
sub
sarb
xor
aas
pusha
inc
sbb
lahf
adc
iret
roll
mov
xor
mov
fists
sub
ljmp
lret
push
cld
cmc
mull
or
cltd
pop
inc
push
hlt
push
add
ss
ror
add
fidivrl
and
ljmp
ret
inc
jno
jg
sbb
cmp
lea
lret
or
xor
push
popa
pop
arpl
js
dec
push
lret
pop
push
psubq
subl
push
popf
jmp
dec
out
xor
push
push
and
and
add
sbb
pop
push
arpl
ret
xor
lcall
or
jbe
daa
bound
push
ds
and
add
inc
hlt
mov
xchg
cli
jg
ja
addr16
sub
insb
mov
push
rolb
push
mov
shl
shr
cld
addr16
lods
dec
and
test
pop
lods
clc
dec
rcrl
push
jle
lods
aam
lea
mov
jbe
xchg
dec
cmp
sbb
xlat
jo
push
cltd
out
sbb
jo
daa
std
pusha
sbb
adc
push
clc
int
xor
mov
sar
inc
fisubrs
jb
sub
or
es
inc
or
fidivrl
xchg
arpl
cmpsb
out
stos
movsb
dec
mov
pop
subb
roll
dec
mov
sbb
iret
popw
into
popa
mov
cmpb
xchg
xlat
lcall
push
jnp
cwtl
jecxz
push
aaa
adc
imul
cmc
sbb
stc
fldt
push
xchg
jge
dec
sub
jae
bswap
mov
push
enter
insb
sti
cld
dec
inc
push
push
add
mov
test
or
jo
lods
repnz
mov
lods
or
test
adc
sub
lods
jmp
push
and
cld
xor
outsl
sub
loope
out
test
push
in
or
out
pop
inc
out
call
lcall
sub
sub
push
push
cmp
jg
sbb
mov
jno
loopne
ficompl
inc
xlat
loop
mov
jo
imul
cmp
xor
into
loop
out
movsl
and
sbb
out
out
jb
in
jb
mov
cld
sbb
mov
add
fwait
iret
movl
lods
cmp
mov
and
dec
mov
pop
cmp
inc
rcrb
fdivr
cmp
xchg
fildl
pop
test
xor
js
fldl
shll
into
and
out
cmp
hlt
jg
ss
and
dec
dec
xchg
repnz
ffreep
add
in
push
leave
push
xorb
mov
mov
push
ljmp
ret
test
test
stc
and
lds
xor
hlt
ds
push
cmpsl
inc
mov
and
mov
insl
pop
mov
in
sub
ret
cmpsl
in
jo
jbe
fists
adc
cmc
push
sbb
test
adc
das
dec
sub
es
add
mov
out
push
cmc
aaa
gs
mov
hlt
mov
fsubl
xchg
jmp
or
sub
sbbl
dec
dec
add
mov
std
aas
inc
cltd
into
jg
mov
ljmp
mov
mov
lea
cmp
push
cltd
and
sub
ss
pop
dec
imul
mov
inc
in
ja
mov
push
cs
dec
dec
lea
mov
mov
cld
jae
sbb
mov
in
sub
or
call
inc
jp
push
push
jecxz
sahf
pop
xchg
repnz
enter
movsl
mov
push
dec
add
lcall
dec
std
jb
popf
roll
pop
or
sub
btc
cmpsb
fldz
sub
mov
sub
inc
shll
sbb
jge
outsb
push
cmp
xchg
shl
mul
or
push
pushf
shrb
xchg
rcll
repnz
addr16
fdivs
fdivrs
mov
adc
mov
out
loope
scas
cmp
mov
popa
imul
and
js
jno
in
loope
mov
ret
mov
dec
insb
inc
decb
out
mov
and
cltd
popa
xchg
popf
xor
in
cmpsb
mov
dec
aaa
movsl
sub
push
mov
jmp
dec
dec
push
xor
inc
leave
add
adc
aad
jmp
shll
xchg
mov
in
cmp
mov
jns
mov
xor
mov
cmp
cmpsl
and
inc
jbe
fwait
cmp
jge
sarl
shlb
fnstcw
testl
cld
mov
sbb
lea
incl
jmp
adc
jno
mov
mov
ret
cmp
lds
icebp
sbb
leave
testl
mov
jmp
pop
cli
imul
call
cmpsb
mov
pop
add
xchg
pop
cmp
aad
sbb
je
mov
adcb
dec
je
sarl
imul
dec
stos
mov
sbb
std
push
dec
cs
xchg
leave
dec
les
xor
in
pop
test
loop
in
bound
stos
add
sbb
sbb
and
imul
xorl
jmp
add
jmp
inc
mov
push
clc
mov
test
in
lret
cmpsl
push
ret
sbb
ret
xchg
sub
xor
jno
mov
hlt
into
and
pmaxsw
scas
int3
data16
data16
sbb
mov
repnz
int3
rcll
mov
mov
push
sahf
test
scas
jg
xchg
cmovp
mov
adc
pop
loop
mov
push
in
fcomps
aam
test
imul
push
adc
dec
push
sti
in
imul
sarl
jg
dec
add
leave
into
dec
inc
lret
gs
mov
outsl
pop
inc
out
jmp
mov
repnz
sub
rcll
test
dec
mov
mov
mov
xchg
fwait
mov
cs
stos
repnz
daa
lret
cld
repnz
insb
push
adc
dec
dec
mov
lahf
outsb
leave
cmp
lods
ret
sbb
xchg
push
sti
fs
xor
je
cmc
lds
adc
mov
repnz
dec
ljmp
sub
daa
sub
push
xchg
and
roll
mov
repz
loopne
out
jmp
pop
and
movsb
pop
mov
in
outsb
xchg
cmp
ljmp
ret
mov
test
lods
lcall
add
out
or
aad
jo
imul
outsb
cmp
paddsw
xorb
mov
movsb
fs
adc
and
jl
shr
icebp
rorb
shlb
jbe
mov
or
rclb
dec
lock
pop
mov
std
cld
push
adc
pop
lea
aaa
sti
int
fs
push
lret
and
sbbl
add
dec
xchg
lock
sub
pop
gs
cmp
fwait
jae
and
imul
jp
adc
aas
clc
mov
lret
jecxz
add
mov
cmp
jae
in
cld
sub
adc
sbb
cld
jo
out
pop
jecxz
movsl
jnp
or
rcrb
adc
scas
enter
inc
dec
add
jne
imull
repz
stos
pop
sbb
cwtl
push
push
and
mov
je
dec
lods
jle
or
into
jo
in
fldcw
rcrl
ljmp
in
arpl
insb
pop
xorl
mov
adc
roll
repnz
xchg
movsl
loop
jno
addb
mov
fsubr
mov
hlt
sbb
sub
mov
int3
sbb
sub
xchg
mov
bound
xor
jnp
cmpsb
pop
mov
mov
push
lcall
cmp
test
pop
pop
jg
lods
inc
stos
cmpsl
shlb
and
shlb
or
mov
push
test
gs
ja
pop
imul
in
jle
mov
mov
lcall
dec
xchg
jo
inc
cld
or
leave
sub
sbb
cmc
mov
dec
imul
pop
aaa
and
es
xor
rorl
cmc
xlat
jge
mov
sub
testl
dec
xor
cmp
in
aam
nop
pop
jmp
pop
jnp
pop
jbe
test
and
jb
jp
test
dec
sub
lahf
sbb
rcrl
lock
dec
les
xchg
mov
jo
add
add
jb
push
test
daa
add
jl
divb
mov
lcall
sbb
test
jmp
or
insl
sti
cmp
repz
add
lds
pop
sbb
cmc
lret
jp
int
imul
mov
arpl
mov
sub
fwait
mov
pop
push
les
cmp
jnp
sub
fs
dec
xor
dec
cmp
push
movsb
std
insb
jne
pop
adc
mov
xchg
loope
inc
jle
imul
repnz
xor
sbb
sahf
and
or
clc
nop
sub
fsubp
dec
and
imul
add
push
adc
ja
call
pop
addr16
jl
xor
pop
dec
loop
scas
mov
xchg
aam
lret
sub
mov
and
or
mov
hlt
cmp
notl
arpl
int
pop
add
mov
pop
inc
dec
fstpt
pop
mov
cwtl
shl
xchg
lcall
mov
enter
sub
mov
data16
cmp
xor
jne
mov
loopne
xchg
loop
shlb
mov
or
dec
jo
xchg
ret
dec
push
jne
cltd
js
xchg
jnp
pop
call
mov
or
imul
stos
adc
and
cmp
fcmovnb
fwait
push
and
jecxz
xor
aad
js
pop
int3
negb
cmp
pop
xchg
movsb
lea
push
xorl
cmc
hlt
in
fsubrl
add
into
add
cmp
stos
cmp
jle
adc
xor
cmpsb
push
add
pushl
test
das
mov
add
inc
mov
and
test
into
mov
add
mov
pandn
loopne
sub
out
mov
mov
in
xchg
inc
pop
ret
fst
adc
adc
mov
les
xchg
pushf
das
stos
sub
aam
push
adc
das
mov
jge
out
and
popf
ss
nop
movsl
in
mov
insl
into
xchg
xchg
or
lret
or
sub
dec
mov
jmp
jae
mov
cmp
sub
pop
sbb
jecxz
ss
out
mov
push
je
dec
xrelease
mov
push
bound
std
push
test
cmpsb
stos
push
sub
out
add
les
xchg
lods
or
cwtl
jb
insl
cmp
ss
sbb
decb
je
orl
repz
test
sbb
enter
jg
push
pop
and
sar
dec
repz
icebp
mov
je
ljmp
icebp
cld
outsb
daa
xchg
or
data16
fldt
push
xor
mov
mov
lret
sbb
mov
adcl
je
int
xor
mov
inc
rolb
mov
sub
sbb
pop
movsb
xor
jo
mov
xchg
cltd
push
jle
sti
out
mov
into
loope
mov
or
lcall
xorb
scas
mov
xchg
adc
fimull
pop
jo
stos
fldt
je
mov
js
fiaddl
cmpl
mov
popa
aas
jl
iret
ds
jne
xor
pop
push
shlb
mov
mov
add
pop
jne
test
adc
jb
hlt
push
shlb
cwtl
in
xor
or
xchg
push
pushf
fcompl
sbb
mov
andb
push
scas
push
fisubl
or
lock
pop
xor
push
pop
pop
clc
sahf
push
test
jmp
dec
dec
outsl
cmc
inc
or
in
rorl
repnz
inc
push
dec
rcr
je
push
fnstsw
cmp
mov
cwtl
testl
mov
pop
pop
movsl
push
jnp
mov
fnstcw
and
dec
mov
cmp
stos
mov
mov
shll
bound
push
movsl
mov
add
xchg
std
inc
jnp
pushf
sbb
cmp
nop
ljmp
lahf
pop
clc
cwtl
dec
mov
sub
cmp
lcall
sbb
in
mov
imul
dec
and
shl
jnp
andl
xor
mov
inc
mov
scas
xchg
mov
addl
rclb
mov
fs
push
movsl
fwait
sub
icebp
pop
stos
iret
pop
mov
mov
in
popa
mov
push
fisubl
cmp
test
lods
sub
sbb
adc
add
int3
aaa
sarb
js
xor
sbb
xor
loopne
mov
mov
push
inc
negl
pop
mov
sub
les
jl
fucomip
mov
mov
lahf
add
adcl
fsubr
ljmp
js
cmc
dec
pop
shll
mov
insb
cmp
mov
sbb
mov
pusha
and
aad
adc
imul
popf
insb
rolb
adc
and
xchg
sbbl
cwtl
jl
push
sbb
je
pop
insb
jle
mov
or
cmpsl
jo
inc
std
and
sbb
push
lods
jns
pavgw
mov
inc
push
aad
push
divb
sub
dec
inc
pop
lock
iret
leave
es
jp
fldcw
out
aam
pop
xor
add
add
sbb
ja
into
sub
mov
xchg
mov
lods
decl
cltd
mulb
testl
sbb
imul
jno
in
negl
pop
movsl
dec
mov
cmpsl
xchg
pusha
lods
adc
addl
push
sub
jmp
jae
or
test
push
push
sub
mov
adc
aad
add
and
jo
jae
cltd
rorl
mov
mov
stc
pop
sub
or
daa
repz
mov
add
xchg
mov
les
mov
xor
xor
dec
les
xor
and
or
arpl
inc
stc
inc
pop
arpl
xor
xchg
js
adc
jb
loope
push
loope
repz
dec
lock
jnp
sub
int
mov
adc
push
mov
int
in
jl
loopne
fildl
movsb
xchg
pop
jmp
int
and
inc
aas
shrb
mov
stos
cmp
inc
fs
push
mov
push
imul
sahf
enter
stos
lds
leave
outsb
rorl
or
pop
pop
xlat
jecxz
and
inc
cmp
out
push
dec
lcall
adc
cltd
cmp
mov
jae
popf
sti
nop
bnd
inc
pop
cmp
adc
fwait
xor
movsb
sub
inc
or
addl
into
cmc
into
adc
mov
test
jns
aam
sub
dec
ja
adcl
fcoms
fistpll
fdivp
std
mov
mov
popa
sbb
and
xchg
sbb
and
arpl
mov
cmp
js
xor
xor
movsb
dec
mov
fwait
punpckhbw
test
aaa
jbe
pmaxsw
cmpsb
das
adc
div
jg
xor
fdivl
inc
and
mov
incl
jmp
xchg
test
jno
inc
cmp
xchg
shrb
mov
ficompl
jno
push
jb
ret
sbb
cmp
inc
inc
test
fsubr
ficompl
fldcw
in
test
sahf
pop
mov
aad
add
mov
loopne
imul
std
mov
sbb
dec
jge
adc
mov
mov
and
mov
push
xchg
out
xor
fdivl
out
push
lods
es
fnsave
and
rolb
inc
int3
sub
cltd
repz
add
or
push
add
or
and
cmp
sub
dec
js
popf
movsb
imul
aad
into
repnz
ja
mov
or
cltd
xchg
div
cmp
push
dec
aaa
mov
pop
aam
dec
ss
pop
adc
repnz
fwait
into
sub
adc
fidivl
mov
ds
into
mov
mov
daa
xor
mov
pop
pop
push
bound
xchg
lods
sarb
je,pn
mov
lret
loopne
xchg
je
inc
pusha
sbb
scas
shlb
dec
js
inc
mov
push
std
dec
cmp
addb
push
inc
nop
pop
repz
in
fldl
roll
lods
shlb
jg
cmp
add
bound
loope
fistl
push
pushl
or
movsl
cwtl
test
sbb
mov
jmp
mov
jge
push
lret
xor
enter
test
std
imul
adc
dec
int3
popf
cmp
pop
aas
sub
xchg
test
jge
push
lds
rolb
add
add
mov
cmp
pop
jecxz
cltd
xor
stc
xchg
lahf
and
aaa
movsl
cltd
inc
cmp
and
pop
outsl
enter
insb
ret
sti
movsb
ficomps
jge
dec
cmp
mov
mov
mov
sub
and
test
and
dec
adc
imul
mov
inc
leave
aad
inc
add
ficoml
and
inc
mov
jo
cmpsl
fidivs
sub
in
xor
or
rcr
iret
adc
popf
sbb
pop
cmp
push
fldenv
shl
jbe
lret
mov
repz
es
jp
mov
lea
or
inc
mov
call
xlat
das
lret
mov
jecxz
and
cmp
ljmp
imul
nop
clc
js
cmp
lods
into
adc
jno
add
popf
jmp
dec
andb
gs
bound
lock
lods
adc
mov
jmp
cmpsl
or
addr16
sbb
stos
inc
insl
dec
dec
ja
loop
pop
push
aas
jne
pop
push
jmp
xchg
popf
icebp
jecxz
xchg
push
pop
inc
js
cmp
js
sub
cmp
test
jns
repnz
test
adc
inc
push
pop
dec
movsb
xor
lcall
insb
inc
test
xchg
jl
popf
push
daa
rolb
and
aas
call
jo
out
push
fimuls
clc
cld
sbb
ret
sahf
sub
ds
cs
fldt
mov
adc
sarb
xor
sub
dec
stos
or
pop
rorl
shlb
add
popf
and
movsl
xor
mov
inc
mov
push
mov
in
mov
xor
jmp
hlt
std
sbb
and
arpl
xor
jae
dec
mov
fwait
test
adc
dec
pop
lods
inc
xchg
hlt
pop
sbb
iret
inc
inc
adc
lds
xchg
inc
cmp
push
xchg
out
shlb
mov
lock
sub
adc
or
and
mov
xchg
arpl
sbb
cmpsb
sub
test
jno
mov
jmp
sub
dec
add
aad
sbb
pop
push
add
cmc
incl
lock
fcomps
scas
jp
cs
movsl
mov
cltd
dec
in
inc
pop
lret
jnp
into
adc
gs
flds
shll
andl
and
mov
mov
sub
leave
out
add
int3
cmp
outsb
lods
cmp
jl
je
jle
pop
xlat
cs
out
loopne
cmp
inc
movsl
mov
insl
js
clc
daa
xor
lods
imul
inc
insl
loopne
jbe
dec
or
aam
stc
sub
ret
pop
push
not
repnz
xchg
add
test
adc
test
cmp
fwait
daa
mov
dec
and
mov
sahf
lahf
push
xchg
pop
jle
test
cmp
xchg
add
dec
jl
data16
les
cld
mov
out
test
lret
or
popf
pop
mov
xchg
fiaddl
pop
outsl
jb
mov
fistpl
outsl
in
pop
add
push
pop
ljmp
push
xchg
lret
test
aad
shl
pop
leave
inc
pop
mov
lret
lods
mov
iret
insb
loope
pushf
xchg
jg
pop
dec
imul
out
out
jne
mov
and
inc
test
pop
cmp
dec
xor
imul
notb
ficoml
inc
lock
and
mov
fnsave
iret
mov
pop
pop
mov
and
mov
adc
cmp
mov
outsb
mov
mov
cmpsl
push
fisttpll
push
rcll
or
ss
mov
jmp
pop
ss
jmp
xor
setge
lret
sysexit
call
jmp
add
jnp
pop
aaa
adc
gs
mov
pop
mov
pop
and
iret
push
aad
rorl
inc
xor
and
in
lds
test
inc
test
push
mov
mov
adcb
shll
dec
inc
and
ror
and
lock
mov
xor
fidivl
inc
fisttpll
out
lds
xor
pop
bound
movl
cmpsb
add
js
movsb
pop
jne
cli
and
stos
in
adc
mov
icebp
addr16
inc
adc
mov
jnp
xor
lds
and
mov
int3
mov
scas
mov
bnd
push
loope
inc
nop
sbb
pop
dec
lds
aaa
cltd
or
lahf
jle
inc
out
jb
sarl
iret
pop
ret
imul
mov
push
adc
mov
push
aam
ljmp
lods
adc
pop
test
dec
lcall
mov
push
add
jecxz
rcll
xchg
xchg
loopne
loopne
std
inc
add
mov
dec
cmp
sti
add
dec
inc
pop
mov
xchg
ret
pop
xor
or
movsl
les
lcall
inc
popa
rolb
inc
sub
int
xchg
test
in
out
inc
mov
mov
fwait
inc
add
push
push
loopne
xchg
xor
mov
je
sbb
pop
push
andl
je
and
pop
sti
xchg
mov
xchg
sbb
ljmp
adc
mov
inc
loop,pt
xchg
dec
jbe
and
xchg
jge
xor
repnz
in
and
mov
adc
add
mov
bound
xor
test
out
cmpsl
push
add
mov
cmp
add
sub
adc
js
push
and
sahf
fwait
je
push
xchg
or
std
xor
jmp
adc
mov
mov
cmp
xor
ja
lahf
cmpsl
adc
into
cwtl
arpl
sti
adc
inc
shrb
or
jno,pn
mov
jl
dec
stc
xchg
dec
aaa
gs
js
push
lea
out
cltd
aas
es
cs
pop
popa
roll
aaa
iret
adc
mov
ja
push
xchg
cmp
call
jle
add
cmp
not
and
xchg
cmp
sub
lret
int3
mov
pusha
cmp
and
js
movl
add
ror
mov
pop
add
cmpb
xor
jne
popa
inc
jge
cmpsb
cld
xor
pop
and
push
lea
scas
push
add
ffree
sub
mov
jae
pop
in
cmp
lea
jne
gs
jnp
mov
loopne
out
cmp
jge
or
and
scas
jg
mov
mov
mov
dec
sti
sbb
push
inc
fmull
sub
shll
int3
xorl
push
mov
or
add
out
fiadds
jnp
lods
ficomps
popf
sub
mov
or
scas
mov
push
add
xchg
mov
sub
popf
or
cmp
icebp
add
in
jnp
inc
sar
testl
repnz
andl
popa
mov
mov
xchg
out
mov
cmp
jecxz
fs
cmpl
into
jmp
jl
cmp
aaa
inc
cmp
sbb
cltd
fcomps
add
mov
pop
lcall
mov
call
and
sbb
mov
fcompl
aas
add
stos
pop
ja
dec
lahf
repnz
fsubrs
mov
sbb
in
outsb
rclb
dec
cmp
shl
or
lcall
dec
mov
pop
pop
imul
loope
push
in
push
outsb
add
sahf
xchg
nop
into
pop
push
fcomps
sbb
or
dec
aam
pop
cmpsb
dec
cltd
mov
inc
fidivrl
push
mov
push
mov
add
sub
fsubrs
push
add
sub
fisttpll
test
push
sti
cli
bound
inc
lods
hlt
int
mov
rcl
mov
into
out
jo
cwtl
insb
ss
dec
iret
push
jecxz
repz
pushf
jmp
lds
inc
rcrb
pop
push
fcompl
out
lods
mov
xlat
cs
pop
out
in
pop
sbb
jae
pop
add
mov
push
js
jg
or
cld
jnp
xchg
sbb
addr16
push
inc
mov
push
pop
ss
lcall
lret
je
push
scas
in
push
repz
cmp
sub
xchg
data16
stos
xchg
sbb
test
or
in
jne
pop
loopne
sti
sub
xlat
cmc
fidivrs
push
dec
xor
adc
scas
fiadds
fldz
pop
scas
jne
mov
mov
jb
cmp
hlt
jne
incl
roll
xchg
fdivrl
inc
sbb
inc
jp
mov
mov
push
mov
sub
pop
test
pop
sub
pop
out
pop
outsl
lcall
bound
shr
cmp
je
lret
cmpsb
in
adcl
sahf
int
xor
out
jmp
xchg
jo
sbb
push
leave
in
in
data16
pop
jnp
push
pop
lret
lahf
shll
ja
dec
mov
aad
bound
mov
ss
test
or
cld
cli
xor
and
add
mov
call
add
mov
adc
flds
icebp
or
test
repnz
jae
and
and
aam
jno
fcmovnbe
dec
loop
add
scas
lret
inc
rclb
xor
mov
movsl
sbb
mov
inc
clc
xchg
sbb
xchg
or
cs
pop
xor
jo
ficompl
pop
sbbb
dec
jne
sbb
daa
in
adc
adc
repz
xchg
and
or
pop
in
jbe
inc
lock
dec
or
call
call
cwtl
lock
sbb
loop
jbe
cmp
loopne
fucomip
and
xchg
dec
add
jno
xor
push
sub
orl
test
clc
and
jo
jmp
lret
and
rol
pop
lock
aaa
aad
xchg
lock
dec
repnz
add
pop
repnz
jg
imul
jle
aas
es
xchg
mov
jno
push
imul
and
loop
add
sub
leave
into
stos
pop
and
mov
lds
push
dec
mov
pop
into
ss
sub
mov
or
mov
inc
es
ret
pop
xchg
mov
push
popf
aam
repnz
xchg
inc
adc
out
inc
xor
test
mov
xor
sub
jecxz
xor
out
adc
lods
or
or
xor
aaa
cmpsl
out
and
clc
pop
mov
sub
inc
jne
mov
pop
scas
lahf
int
mov
sub
xchg
sub
fbld
mov
inc
mov
mov
mov
out
and
movsl
jecxz
or
push
cmp
mov
cmp
add
jge
lret
ret
cmp
xchg
out
adc
rcll
ja
or
out
ljmp
sub
in
mov
stc
inc
sub
pop
lods
test
jp
mov
mov
enter
xor
lret
push
or
pop
xor
mov
repz
sub
shl
mov
xor
cmc
jb
lcall
fadd
sub
and
out
cmp
ret
dec
mov
xchg
aam
push
mov
xchg
pop
daa
cltd
subb
sbb
push
pushf
add
sbb
jo
mov
jecxz
out
mov
aam
jnp
addr16
outsb
cmp
scas
pop
fiaddl
pop
cwtl
xchg
ret
jmp
sbb
sbb
and
jge
dec
je
cmp
orb
xor
jle
mov
xchg
jns
cltd
jb
mov
test
pop
jl
stos
aas
push
dec
pop
and
pushf
stos
ficompl
outsl
sub
imul
sbb
ljmp
jo
test
cmc
fs
clc
or
stc
and
push
sub
xor
xchg
mov
daa
mov
pop
cmpl
pop
std
and
sbb
sub
inc
sub
cmc
push
push
fs
sub
enter
cmp
stos
xor
inc
les
and
roll
mov
loop
push
xor
mov
sahf
stos
cmp
cmpb
icebp
lret
into
roll
fldt
scas
leave
insb
mov
inc
xor
xchg
sbb
mov
jge,pt
incl
outsb
push
sahf
mov
movsl
xor
and
mov
jne
cmp
paddsb
push
mov
sbb
jae
mov
mov
sbb
je
mov
rorl
cs
pop
imul
mov
push
insl
push
jl
iret
lods
lahf
ret
and
xchg
arpl
and
inc
stc
in
xorb
jno
mov
cmp
outsb
xchg
cmp
push
jecxz
incb
mov
jb
xlat
mov
mov
js
pop
mov
pop
dec
xchg
pop
sti
mov
sbb
ret
cmp
and
shrl
add
pop
cmpb
fsubp
shrb
imul
mov
xor
dec
add
inc
xor
dec
mov
sub
push
pop
jns
int3
mov
outsb
rorb
dec
dec
imul
sar
lahf
call
xchg
cs
std
lcall
jne
pop
push
mov
loope
divl
ss
inc
adc
sti
aaa
dec
mov
dec
push
mov
sub
stc
mov
fwait
mov
in
mov
sbb
mov
or
lods
mov
xchg
sub
cmp
aam
mov
mov
std
mov
and
or
jge
les
fidivrs
in
addl
scas
aas
outsb
inc
fidivl
scas
cmp
rclb
mov
ret
mov
push
repz
popf
lods
test
daa
dec
ljmp
test
cmpsb
add
scas
or
mov
inc
idiv
sbb
jbe
int
gs
roll
dec
mov
adc
xlat
or
js
adc
aas
sbb
iret
mov
push
or
cmp
and
bound
lods
sbb
loopne
push
jne
or
lret
arpl
loop
inc
es
and
ja
inc
dec
and
mov
scas
push
dec
mov
fmul
insl
lcall
pop
test
jmp
xor
or
in
push
xor
pop
adc
lret
push
out
xchg
out
dec
fisttpll
clc
jns
and
ss
push
pop
pop
sbb
pushf
lret
arpl
aaa
pop
lcall
mov
fdivrl
cmc
aad
daa
out
dec
mov
insl
add
fistl
xchg
jp
sub
cli
inc
fwait
rclb
dec
imul
xchg
insb
insb
add
bswap
addr16
movsb
loopne
into
inc
mov
and
cmp
stc
add
push
lods
xchg
mov
push
stos
movsl
lods
insl
into
icebp
push
roll
out
sti
sub
dec
add
mov
pop
es
xchg
lock
mov
or
cmpsb
movsb
je
xchg
repnz
mov
sbbl
cmp
pop
into
adc
mov
cmp
sbb
ret
push
scas
lea
dec
mov
jns
roll
ss
jp
cmp
and
mov
push
call
out
ret
nop
push
inc
fldcw
xlat
pop
push
jge
sub
popl
xchg
jle
add
imul
loopne
xor
repz
push
mov
jmp
fwait
push
xor
add
pop
jl
test
mov
sbb
ss
mov
fisubs
dec
jp
lret
xchg
mov
or
mov
flds
stos
fdivs
bnd
dec
mov
or
mov
sub
test
loop
movsb
xchg
sbb
jecxz
lret
int
mov
or
call
dec
lock
or
pusha
insb
je
pop
into
scas
fstp
or
sti
mov
cmp
stos
cmp
pop
mov
or
lahf
sti
fdivr
xor
sbb
and
add
sub
sub
sbbl
lcall
xor
sub
jecxz
jne
or
cwtl
popa
fwait
or
xchg
mov
push
cmpsb
sub
test
jmp
dec
xor
add
mov
int3
repnz
sub
fldcw
dec
fwait
ja
dec
xchg
or
mov
std
mov
sbb
push
sub
insl
xor
mov
cmpsb
pop
adc
ds
shll
into
sbb
adc
stos
cli
inc
ljmp
aaa
cmpsb
jl
xchg
cmp
jp
or
fs
pop
or
sub
mov
add
inc
int
es
std
imulb
arpl
movsl
jbe
insb
add
bound
or
add
cld
adc
jbe
mov
or
popf
jb
cmp
mul
mov
jge
sub
insb
pop
fisttpl
and
and
jge
cmp
jg
add
mov
jnp
xorb
and
pusha
not
into
inc
mov
mov
jo
fadd
popa
mov
loopne
iret
push
or
inc
jnp
mov
ficoml
stos
in
mov
push
xchg
and
ds
rcr
mov
sub
and
adc
jb
or
sub
jmp
out
out
push
std
lea
xchg
dec
mov
fistpll
dec
push
sub
sbbb
xor
mov
mov
or
pop
mov
lret
out
lock
cmp
insb
mov
pushf
imul
dec
cltd
pop
and
out
push
mov
inc
mov
cli
xchg
mov
xchg
sub
push
clc
ljmp
shll
xorb
arpl
cs
sbb
xchg
dec
enter
lea
pop
rclb
xor
idivb
mov
and
jmp
cmp
dec
ret
dec
mov
mov
lret
pop
lcall
frstor
add
jle,pn
mov
mov
and
inc
mov
outsl
xchg
std
cmp
or
or
in
xlat
xlat
or
pop
add
scas
shl
mov
push
inc
lret
scas
inc
outsl
pop
xchg
mov
shlb
jo
mov
test
test
std
ret
mov
ds
jb
in
mov
push
mov
or
xor
jns
lret
enter
mov
test
cmp
cmp
dec
stos
arpl
inc
nop
fwait
adc
or
aas
lret
mov
sti
xchg
push
mov
cwtl
movsb
cmpsl
stc
mov
sub
cmpsb
inc
xchg
dec
and
add
test
insl
pop
mov
ss
adc
std
mov
xor
insb
xchg
xlat
inc
lea
and
mov
icebp
test
mov
sbb
push
stos
xchg
test
aaa
stc
aam
clc
push
outsb
jle
loop
pop
jl
lock
ss
lcall
iret
cmp
cmc
in
insl
out
shrl
add
ret
nop
add
fstpt
pop
out
mov
into
push
repz
lock
ffree
mov
add
xor
mov
jae
ror
jne
fwait
dec
xchg
pop
or
or
jno
js
faddl
popf
rcrb
xchg
or
jns
xchg
adc
pop
fsubs
push
mov
adc
dec
gs
mov
jle
cmp
lret
outsb
ljmp
xor
xchg
nop
shll
jbe
jo
imul
pusha
inc
cmpsb
aam
pop
std
insl
mov
inc
sbb
cmpsb
gs
outsb
cltd
add
sub
xchg
inc
cmpsl
mov
lcall
fstpl
ret
inc
inc
shrl
aas
ficompl
xor
data16
xchg
mov
fimuls
loope
pop
jbe
pop
and
push
adc
daa
or
mov
out
cmp
fisttps
ja
rorl
out
mov
cli
adc
adc
push
adc
or
fdiv
sub
add
push
add
daa
je
jp
fs
cltd
stos
cwtl
pop
cltd
jbe
loop
push
cmp
int3
je
mov
repz
jecxz
ja
mov
dec
fistpll
dec
mov
xchg
cmp
test
push
xor
nop
push
test
movsb
cli
sbb
mov
sbb
out
popf
imul
adc
jno
insb
cltd
inc
dec
xchg
stos
lcall
cmp
pop
fwait
sbb
cmp
rcrb
lret
cwtl
jle
mov
push
clc
or
xchg
xchg
lret
loop
sub
and
or
cmp
inc
cltd
or
rorl
je
push
or
out
jae
je
vcvtsd2si
in
out
out
outsb
pop
jg
clc
mov
inc
icebp
addr16
clc
das
or
mov
es
pop
repnz
jl
push
sbb
movsl
aam
jb
sub
in
adcb
rcl
adc
movsl
mov
sub
and
sub
jne
fcompl
mov
jo
cmc
inc
mov
loop
divb
sarb
movsb
xchg
xor
and
popa
out
lret
fwait
xchg
and
fsts
push
or
arpl
lea
fsubs
insl
mov
and
stos
jmp
lahf
inc
fdivr
dec
push
orb
mov
sub
loope
filds
jg
cli
lea
and
and
inc
scas
pop
dec
jg
lcall
stos
gs
and
call
add
push
pushl
int
lahf
scas
rorl
subb
inc
inc
arpl
xor
mov
add
rcll
aad
cmp
sbbb
xor
ret
movl
shrl
jecxz
inc
jbe
loope
mov
cmp
jae
pop
fsubp
cli
sbb
push
push
jmp
out
adc
mov
mov
inc
popa
lcall
xchg
xor
sbbb
int
lahf
popa
inc
in
sbb
and
inc
adc
fwait
sahf
clc
dec
mov
fiaddl
mov
lods
repnz
ds
xor
cltd
inc
rolb
int3
inc
sbb
inc
inc
stc
jo
into
cli
xchg
loop
adc
bound
or
push
mov
data16
adc
js
sub
js
sbbl
xchg
lods
xchg
out
mov
pcmpeqd
xor
fmuls
and
and
inc
or
loopne
sub
das
cwtl
adc
xchg
sub
cwtl
dec
shrb
aas
mov
scas
fs
push
or
aad
dec
sub
lret
mov
dec
sti
test
mov
stc
mov
mov
mov
adc
rorb
xchg
dec
loope
mov
loop
rorl
daa
mov
dec
int3
sarb
and
add
addb
lea
xchg
addr16
or
lret
ss
dec
pop
xor
fdiv
dec
ss
arpl
fs
scas
fisttps
push
mov
jb
aad
inc
aad
adc
cmp
push
add
add
inc
add
pop
jno
pop
sbb
sbb
jp
dec
les
jl
fmul
and
or
sub
icebp
addr16
mov
dec
pop
jnp
insb
adcl
adc
xchg
mov
pop
and
mov
insb
fimuls
ja
adc
mov
xchg
xchg
sub
add
loopne
and
push
dec
dec
sbb
mov
and
out
inc
mov
mov
out
jb
mov
dec
add
cwtl
mov
stc
mov
sub
sub
push
fs
mov
lock
clc
mov
andb
loop
loop
sub
outsl
test
push
stos
cmp
cmc
insb
pop
mov
in
stos
mov
lea
jnp
cltd
mov
push
adc
sub
cmc
sar
add
cltd
add
into
int3
mov
push
es
nop
mov
add
jb
or
out
hlt
in
nop
mov
iret
mov
jb
das
add
stc
mov
fcom
hlt
lret
stos
xor
es
ficomps
rcrb
push
rcl
lods
inc
jp
aas
push
popa
jno
lods
addr16
cmpsb
and
clc
int3
les
xchg
add
sbb
lret
out
inc
pop
fcomps
aad
mov
push
stos
lods
pop
shlb
mov
jl
int3
je
fistps
out
je
ljmp
jl
adc
out
enter
js
sbb
in
out
add
subl
ss
outsb
dec
divb
aaa
cli
jne
ss
lods
in
xor
and
mov
int
jbe
mov
stc
pop
clc
fadd
aad
les
idivb
mov
or
sub
rcl
nop
mov
or
mov
in
sbb
repz
pop
cwtl
pop
mov
fs
inc
xor
and
stc
cmpsb
scas
mov
sbb
jge
lret
add
mov
insb
es
jmp
aam
push
rcrl
mov
fs
cltd
repnz
repz
push
icebp
push
add
ret
mov
add
jg
sub
pop
push
repz
push
lea
and
pop
in
jns
adc
or
loop
scas
ret
jle
mov
cli
aaa
mov
sbb
cli
push
cld
mov
lret
ret
das
sbb
jae
in
mov
sbb
cs
ret
sub
or
mulb
mov
dec
sub
pop
jl
in
mov
adc
and
adc
cmp
arpl
push
icebp
mov
xlat
sub
rcrb
ficoml
hlt
repz
sub
cmp
decl
ret
imull
inc
shr
xchg
neg
movsb
ljmp
fsubl
push
pushf
xchg
sbb
test
dec
mov
stos
cmp
jbe
inc
or
dec
adc
adcl
cltd
pop
popf
fdiv
mov
aaa
add
push
ds
ljmp
jb
jns
push
pusha
shll
mov
data16
and
roll
jle
lods
test
pop
xchg
popa
pop
stc
hlt
cmc
in
cmp
inc
and
mov
aad
mov
outsb
sbb
movsl
ret
ja
and
dec
mov
adc
push
lcall
movsl
jmp
push
fs
icebp
mov
das
ret
adc
out
xlat
sub
bound
mov
push
adc
mov
das
stos
mov
push
mov
pop
mov
fwait
ja
inc
js
imul
push
pop
dec
test
addr16
rclb
adcb
mov
push
lret
jp
push
je
adc
ss
and
das
imul
in
mov
cmp
fildll
dec
pop
sub
cmc
pop
dec
mov
je
shlb
xchg
mov
jp
jmp
pop
int3
and
sti
les
inc
add
xorb
jo
out
loopne
stos
xor
hlt
rol
cmp
enter
bound
lcall
push
pop
pop
mov
clc
cld
lea
popa
out
jl
stc
jb
ss
fcom
jns
movsb
jae
es
repnz
shrl
icebp
out
inc
outsb
rclb
cmpsl
mov
int3
lods
or
jge
sub
push
mov
loop
pop
daa
push
pop
fbstp
out
jp
lods
int
lret
jg
gs
fdivp
enter
frstor
repz
ss
fs
arpl
lods
xchg
push
xchg
clc
mov
cmp
inc
mov
faddl
out
cmp
dec
mov
sub
mov
adc
repnz
insb
aad
jmp
scas
cltd
fs
jg
clc
in
jbe
scas
pop
xor
xchg
fwait
mov
xor
or
dec
xchg
stos
pushf
ss
add
cld
inc
hlt
out
sub
pushf
xchg
xchg
jl
inc
or
add
subl
mov
lcall
ficompl
xchg
push
pop
ja
int
inc
lret
push
jl
mov
cmp
add
ds
jb
test
dec
xor
es
pop
cmp
push
stos
std
and
mov
popa
and
iret
push
inc
pop
out
out
mov
dec
daa
xor
jbe
sti
mov
scas
rclb
push
lret
leave
push
in
xchg
imul
mov
mov
inc
stos
sbb
mov
jmp
sbb
les
pusha
and
sub
add
mov
jne
push
movsb
dec
out
dec
cs
mov
inc
ret
fldenv
xor
cmp
jmp
mov
push
inc
mov
fsubs
push
xlat
adc
mov
jne
int
and
shrb
testl
movsb
pop
dec
mov
adc
pop
out
inc
cmp
sub
sti
and
lahf
aas
mov
icebp
cmpb
push
aad
sbb
jmp
add
sub
fnstcw
mov
push
sub
ret
std
xor
push
aaa
inc
pop
lret
movsl
jmp
pop
xchg
inc
jg
or
mov
pop
mov
adc
and
lret
inc
gs
inc
dec
data16
mov
clc
jnp
out
cmpsb
fs
xor
cltd
push
scas
orps
and
sub
jno
out
inc
inc
xlat
xor
inc
fdivp
mov
dec
out
fnsave
sbb
jns
mov
mov
push
clc
push
mov
shlb
das
test
jae
arpl
sub
sbb
sti
push
pop
popa
inc
mov
daa
addr16
xchg
xor
rorl
lret
xchg
or
jle
or
adc
pop
aam
insb
adcl
arpl
lods
fidivrl
bound
lods
outsb
push
pusha
iret
lret
cmc
aad
xchg
push
pushl
les
xchg
fcmovnb
sub
repz
jb
xor
fwait
enter
into
fsubr
cli
aam
shll
lea
mov
mov
push
or
jbe
fwait
pop
jnp
outsb
repnz
and
out
movsb
adc
sbb
sub
inc
mov
or
cmp
pop
sub
xchg
inc
and
jp
movsl
out
nop
cmp
add
fiadds
add
outsb
mov
pop
scas
add
insb
adc
sub
popf
inc
movsb
mov
push
mov
and
out
pushf
sti
es
popa
inc
jnp
rcll
xlat
or
icebp
movl
dec
mov
push
dec
pusha
sarl
rorl
fimuls
inc
cmp
or
mov
xchg
mov
cmp
inc
icebp
orb
stos
iret
popf
sub
mov
mov
call
hlt
or
push
xor
push
push
cmp
xchg
gs
push
xchg
ljmp
add
imul
test
adc
fsubrl
outsl
sahf
js
xchg
scas
jmp
xchg
mov
adc
arpl
pop
pop
xor
or
pop
in
fstpt
iret
cmp
pop
mov
mov
pop
ret
add
xchg
je
inc
add
mov
pop
or
faddl
sarl
sbb
push
add
lret
dec
mov
jg
cld
jae
pop
fucomi
fnstcw
push
adc
push
sbbl
cmp
xor
push
sbbl
int
pop
mov
adc
jmp
lea
jmp
cmp
mov
cs
xor
mov
xchg
lea
xchg
push
mov
xchg
sbb
shlb
mov
or
dec
lods
sbb
sahf
out
es
adc
pop
loopne
dec
xor
sbb
cmp
dec
pop
mov
inc
cmpsb
mov
inc
ret
loope
scas
jmp
mov
bndldx
push
ret
dec
aam
jp
or
je
in
lods
xchg
push
jb
iret
mov
outsb
test
mov
icebp
push
jbe
or
cmp
mov
lock
cwtl
ret
sub
sbb
dec
jno
out
out
mov
fisubrs
cmc
aad
inc
and
icebp
lahf
mov
add
loop
add
data16
add
mov
pushf
ss
and
mov
dec
mov
lods
lahf
test
pop
in
cmp
out
mov
dec
mov
push
lods
inc
mov
and
and
stos
push
loopne
dec
loope
sbb
push
js
in
adc
in
xor
mov
filds
ja
push
inc
cmp
add
sbb
push
jae
xor
sub
mov
repz
fwait
xor
jbe
mov
mov
imul
outsb
iret
pop
addl
wbinvd
imul
jp
cmc
push
dec
push
pushf
pop
push
loopne
leave
sub
arpl
stos
sbbb
and
or
or
rcr
add
lods
lahf
dec
inc
and
sbb
adc
inc
and
xchg
mov
pop
cmp
je
adc
jle
and
and
mov
ss
pop
xor
das
xor
imul
cwtl
test
sub
test
pop
fs
fcomp
cmc
cli
jns
and
in
jno
dec
insl
cld
cmpsl
les
pop
daa
sub
mov
jg
lret
cwtl
pop
push
cmp
add
cmp
mov
xor
cli
movsb
xor
cmp
mov
icebp
iret
cwtl
sbb
pop
lret
rorb
and
negb
int3
jnp
mov
lods
or
jle
dec
add
pop
dec
inc
or
mov
and
pop
and
aas
push
pop
inc
clc
fcoml
scas
xor
nop
mov
adc
cmp
push
subl
fisubrs
cltd
in
pop
incl
mov
in
pop
ret
mov
mov
cmpsb
cs
pop
nop
jl
xchg
mov
jp
inc
adc
push
hlt
mov
xchg
cmp
cmpsl
and
in
inc
mov
add
dec
dec
jmp
cmp
sahf
mov
xor
pusha
out
sub
push
loope
push
popf
jnp
lds
flds
pop
xchg
in
inc
dec
dec
mov
sarb
and
addr16
stos
fcompl
mov
mov
xor
enter
je
fs
cmp
shr
fcmovnb
sbb
dec
xchg
mov
pop
divl
xchg
mov
mov
icebp
jp
pop
or
inc
add
js
jo
xor
iret
les
nop
sub
test
sbb
ljmp
mov
aam
ret
and
dec
or
fs
mov
mov
adc
cwtl
nop
inc
dec
mov
loopne
jns
sbb
mov
xchg
jo
out
push
in
lea
ss
jp
add
dec
or
pop
mov
xchg
jmp
out
lahf
std
mov
jno
fdivrs
addr16
cld
in
test
adc
mov
sub
push
insl
rcrl
push
sub
ret
push
push
ds
fs
int3
pop
pop
push
mov
push
std
divl
jl
xchg
iret
cvtdq2ps
mov
rorl
inc
inc
push
ret
dec
sub
jo
addl
inc
mov
sbb
mov
push
mov
xor
in
sub
xchg
filds
push
inc
ficompl
aad
pushf
jecxz
pop
jl
test
push
pop
inc
stos
cs
loopne
mov
call
stos
dec
inc
xchg
sti
jns
es
jecxz
fsubs
xchg
add
cmp
lcall
daa
or
jns
shlb
stos
enter
les
fisubs
rcr
call
pop
divb
test
jecxz
bound
sbb
and
dec
test
ss
imull
shll
jmp
fimuls
lcall
lea
loop
dec
in
mov
lcall
mov
aam
js
mov
loop
jnp
dec
push
neg
rcrb
jbe
les
into
pop
imul
or
ret
ja
xchg
and
pop
rclb
or
in
xchg
xlat
push
ret
dec
aaa
mull
adc
mov
in
add
xor
or
cmpsb
es
out
push
int
ret
mov
sub
addr16
ja
inc
sub
cmc
xchg
ret
inc
inc
divb
jo
movsl
outsb
cmc
add
aam
pop
or
xor
pop
mov
adc
add
mov
in
jo
mov
fcomip
lcall
js
push
aaa
jb
pop
rolb
popf
movsl
fisubrl
pop
mov
cmp
dec
sbbl
ja
shrl
and
int3
push
push
stc
shlb
sub
imul
add
dec
fistps
shr
mov
mov
mov
xchg
loope
jmp
jae
xchg
aad
pop
cwtl
hlt
gs
add
mov
iret
js
pop
shlb
rolb
fldcw
push
xchg
mov
shl
cmpsl
sti
sbb
sbb
fcmovnu
rolb
and
lret
adc
mull
mov
pop
dec
mov
pop
dec
pop
ja
cmp
popa
pop
xchg
out
test
aas
loope
lret
xchg
test
adc
xchg
int
ljmp
in
mov
mov
es
pop
lock
xor
add
arpl
loop
jnp
les
push
push
xor
or
mov
mov
lcall
and
or
jbe
icebp
mov
push
xchg
out
sub
xchg
loope
nop
xor
in
pop
fsubrs
cmp
mov
insl
int
xor
add
clc
pop
adc
mov
fldenv
adc
fbld
jge
add
pop
xchg
and
adc
inc
dec
insl
rcrl
out
divl
xor
dec
xor
mov
push
jns
push
jle
inc
fdivp
cwtl
mov
inc
jge
dec
call
jno
fwait
aad
dec
inc
fnstenv
out
jge
fildll
loope
cmovbe
cmp
xchg
pop
shrb
adc
pop
ret
sub
mov
pushf
sub
je
jecxz
xchg
fistl
pop
push
add
and
xchg
sub
pop
push
fisubs
sub
movsb
mul
sbb
out
stos
jle
sub
outsl
mov
clc
iret
dec
mov
and
fsub
cmp
lret
and
mov
lret
or
mov
lods
rorb
and
ror
cltd
jle
sarb
sahf
clc
fwait
jno
ljmp
out
mov
lock
ret
je
pop
sub
mov
mov
add
loopne
xchg
out
in
pusha
or
rorl
rorl
add
and
adc
shl
pop
subb
xor
nop
adc
insb
inc
hlt
cmp
sbb
push
adc
sbb
hlt
jmp
aaa
in
sbb
sub
inc
xchg
pop
mov
fmulp
hlt
pop
dec
or
jp
mov
jb
stos
or
inc
shll
xor
sbb
add
ljmp
or
pop
and
dec
push
gs
sbb
adcl
fsts
dec
sbb
sbb
hlt
ja
adc
test
mov
popf
cs
sub
and
sub
stc
pop
aaa
ficoms
ljmp
adc
mov
or
data16
cmp
addr16
jp
adc
fcmovu
pop
add
pop
dec
lock
mov
xchg
sarl
cltd
cmp
pop
mov
imul
sub
mov
jno
sbb
shrl
fmuls
scas
sub
sub
and
sbb
mov
or
out
mov
sti
and
pop
out
inc
ds
lahf
inc
sbb
xchg
mov
push
jae
jae
jge
outsl
push
loop
lahf
cmp
sbb
mov
mov
rol
jg
mov
inc
or
inc
or
push
in
xor
mov
ret
cmp
cs
inc
ficomps
cs
mov
stos
jge
lret
inc
sahf
mov
or
fmulp
out
lret
cmp
cmp
xor
dec
inc
ljmp
pop
inc
lods
fsts
lock
outsb
lods
add
add
pop
int
adc
pushfw
and
cmp
add
cmpsl
mov
into
adc
pop
in
jmp
cld
fcomps
jle
push
fnsave
shrb
popa
dec
adc
sub
fsub
movsl
mov
call
push
fisubl
sub
sbb
lods
loopne
jle
dec
adc
popa
mov
lret
filds
xchg
xor
mov
mov
out
int
adc
ficoms
call
repz
inc
aad
movsl
push
jge
stos
movsl
cmp
jno
in
push
xchg
popf
mov
add
cs
push
pop
xchg
ror
mov
sahf
mov
movsl
dec
out
loop
imul
rcr
sub
loopne
div
aam
das
lret
pop
lret
jno
add
fcoms
sub
testb
add
xor
sbb
iret
icebp
ret
mov
and
pop
adc
cmpsl
jno
loope
movsb
aaa
mov
push
pop
pop
cli
or
jg
add
addr16
aas
xchg
mov
and
dec
dec
ffreep
pop
mov
mov
imul
out
push
sub
popa
and
sbbb
mov
nop
mov
repz
in
ss
add
outsl
movsl
and
scas
push
mov
sub
clc
lcall
mov
rorb
addb
and
cmp
pop
inc
test
sub
mov
fwait
jmp
push
dec
dec
xor
notl
cli
nop
rorb
loop
movsb
adc
fisubs
stos
ret
pop
mov
inc
push
mov
js
arpl
bound
mov
cmp
scas
mov
das
sahf
ret
lods
dec
lahf
xor
and
lret
aaa
fucomip
jo
outsl
paddw
jg
sbb
arpl
in
popa
bound
cmpsb
pop
sub
scas
and
push
xor
loopne
xchg
loope
jge
daa
inc
mov
aas
inc
xorb
pop
cmp
sbb
cmpsl
in
cld
or
imul
call
dec
jbe
gs
movsl
lock
mov
fwait
negb
xor
addr16
cli
push
push
in
and
aad
mov
hlt
pop
and
mov
in
mov
addr16
aam
int
in
sbb
lods
dec
jecxz
mov
es
rclb
rolb
stos
push
pop
xchg
push
aad
inc
add
nop
xor
xor
test
stc
add
andb
fisubrl
and
adc
jne
insb
mov
cmp
mov
fstpt
cld
nop
pop
sub
push
arpl
arpl
loope
imul
push
jp
pop
jle
push
sbb
sbb
out
and
test
ljmp
jecxz
adc
iret
lea
andl
pushf
fsubl
shrl
test
popf
mov
jae
mov
jle
sbb
push
or
dec
xchg
xchg
addl
xlat
test
add
push
sub
fildl
aas
and
inc
insl
xor
popf
fdivr
divb
leave
decl
pop
and
inc
push
in
mov
xor
movsl
adc
js
mov
xchg
sub
xor
cmp
pop
clc
inc
xchg
inc
ret
popf
lcall
dec
sbb
out
shlb
pop
push
test
jne
dec
cmpsl
and
mov
mov
das
sti
aam
popa
pop
dec
je
lret
mov
fistpll
pop
cld
adc
xor
jno
aad
mov
aas
xchg
icebp
imul
js
xchg
mov
add
loopne
pop
add
inc
mov
nop
roll
push
pop
sbbb
jecxz
test
xor
cmpsb
rol
subb
cmp
add
fmuls
cli
xchg
jecxz
fwait
sbb
and
add
cli
sub
add
mov
incb
pop
jg
jge
and
push
leave
pop
scas
rorb
fildl
pop
insb
adc
xchg
mov
push
pop
int3
and
mov
gs
sub
rcr
xlat
xchg
jne
xor
inc
adcb
hlt
das
clc
or
jp
jg
ja
cltd
mov
scas
inc
lds
lods
xchg
mov
jg
andb
jmp
ret
sbb
ss
sbb
mov
ret
ljmp
outsl
mov
pop
sub
dec
or
jge
test
lods
cmpsb
out
dec
mov
in
dec
pusha
les
and
fcmove
mov
push
dec
mov
test
or
ret
outsl
loope
mov
in
inc
dec
sub
loope
mov
iret
push
cmpsl
cmp
pop
jns
cmp
movsl
push
xchg
dec
mov
inc
fcoms
push
adcb
dec
cwtl
arpl
push
loopne
icebp
jo
adc
mov
sbb
movsl
mov
cmc
push
jp
jne
mov
jno
cmp
mov
es
pop
fistl
cmp
fiaddl
xchg
add
aaa
dec
in
add
pushf
or
and
int3
mov
push
jle
xlat
loopne
test
test
outsl
mov
ds
mov
in
and
ret
mov
xor
mov
adc
lret
dec
sbb
sbb
fsave
pop
sbb
icebp
push
adc
loopne
sub
les
inc
push
cltd
imul
xchg
push
or
mov
data16
push
enter
xchg
push
imul
outsl
jmp
jno
push
cmp
rorb
add
clc
sbb
mov
or
leave
jl
outsl
ret
sar
scas
inc
dec
dec
ja
dec
inc
aaa
hlt
cwtl
jae
or
push
lret
je
or
inc
inc
push
mov
xor
enter
subl
or
aam
imul
adc
and
cmc
loope
test
or
cmc
adc
xchg
xor
out
xor
iret
inc
or
jae
test
aam
mov
cli
dec
aas
test
jbe
cmp
jae
ss
fxch
cmp
aas
imull
dec
ret
mov
dec
into
dec
out
rolb
xor
lret
ss
arpl
push
out
mov
or
adc
js
sbb
ret
xor
mov
push
dec
or
add
mov
enter
icebp
inc
mov
lcall
cld
insb
out
mov
jle
push
inc
lds
or
sti
ds
lret
std
pop
aad
in
mov
add
sub
repz
loope
andl
into
sbb
inc
arpl
and
jmp
jmp
xor
fadds
sub
dec
repnz
imul
jb
sti
fwait
jb
scas
push
push
jmp
sbb
addl
sub
sbb
mov
dec
mov
adc
icebp
imul
xor
scas
sbb
jbe
out
jo
rcrl
rorb
and
jle
mov
enter
pop
adc
movsb
out
int3
add
loope
lret
es
fiaddl
cwtl
jmp
hlt
aam
clc
out
pop
leave
int
jl
enter
in
mov
cmc
and
mov
mov
mov
lods
lea
jbe
adc
pop
pop
out
pop
pop
mov
adc
into
stos
cmpsl
push
pushf
pop
or
mov
jno
test
cmp
dec
xchg
push
mov
xor
sub
jmp
idiv
sbb
scas
and
cltd
in
rclb
arpl
dec
pushf
mov
outsb
movsl
pop
lcall
or
xchg
push
mov
push
mov
test
enter
mov
jno,pn
out
lcall
les
add
movsl
or
xor
popa
sbb
push
jmp
mov
dec
sbb
repz
sbb
push
mov
imul
inc
cmp
sub
mov
loopne
cld
add
lea
pop
dec
dec
jb
scas
fnsave
sbb
addl
insl
aaa
xor
xchg
rol
cmpsb
js
iret
add
cltd
push
lret
mov
pop
mov
add
movsl
adc
in
dec
jno
out
mov
and
testl
cmp
inc
xor
fwait
mov
repz
inc
lock
call
stos
test
sbb
jl
push
mov
pop
jne
mov
adc
aad
mov
scas
lea
cmc
push
rolb
decl
gs
pop
xchg
mov
aad
jmp
sub
adc
int3
nop
out
xor
sub
call
xchg
scas
into
fidivl
xor
ret
xchg
fs
sbb
adc
ffree
out
cmp
in
or
or
imul
jmp
sub
jne
push
cld
mov
inc
lret
jns
add
adcb
dec
and
jmp
dec
push
and
and
stos
loop
mov
loopne
cmpsl
mov
mov
nop
jns
js
push
mov
mov
sub
call
lds
dec
mov
fcompl
add
jns
ret
jno
fcoml
or
mov
jmp
pop
push
andb
or
lret
mov
pop
je
push
test
arpl
and
popl
and
xor
sbb
in
jnp
jle
lret
jns
in
add
cs
inc
sub
dec
sub
adc
mov
loope
dec
fcompl
test
cwtl
pop
cmp
dec
xor
pop
inc
xor
shll
out
push
addl
push
imul
jecxz
and
push
loopne
pop
ret
pushf
pushf
imul
dec
movsl
push
out
repnz
aam
sahf
lods
dec
adc
and
mov
outsb
lods
mov
push
cmp
jne
lret
cmp
mov
xor
xchg
xchg
leave
repz
mov
lea
adcl
test
jno
pop
pop
mov
jbe
idivl
mov
ss
aaa
xchg
dec
push
ds
movsb
ss
fcmovb
add
rcll
lcall
push
pop
cmp
sbb
insl
lcall
jge
pop
mov
stos
jb
ss
mov
out
push
scas
mov
in
jb
sbb
adc
sub
or
idivb
imul
fs
adc
addb
ljmp
jle
ljmp
mov
imul
addl
test
and
adc
pop
fmulp
xchg
adc
inc
pop
es
push
aas
notl
inc
into
divl
push
sbb
xor
jae
mov
in
popa
dec
mov
ret
mov
or
jbe
sbb
jmp
in
xor
test
jns
ljmp
push
cmp
test
outsb
xor
ret
orb
cltd
in
stos
add
rcrl
dec
les
sub
sbb
test
lahf
sub
mov
cltd
cmpsl
in
das
push
in
or
inc
dec
fwait
aas
testb
out
imulb
inc
pop
iret
mov
ret
jmp
sbb
mov
pop
repz
call
sub
int3
mov
inc
sbb
sarb
mov
cmp
lret
xchg
jge
inc
data16
leave
adc
pop
gs
mov
mov
cmp
jp
add
and
mov
or
jns
xchg
loop
sbb
jge
daa
jnp
mov
filds
clc
sti
inc
xor
inc
xchg
pop
sbb
xor
xor
dec
cmovg
popa
adc
pusha
add
jbe
shl
jno
xchg
inc
nop
imul
rcrb
in
ljmp
xchg
sbbl
aam
repnz
loope
xor
inc
sub
jmp
xorl
adc
lods
jmp
pop
mov
inc
in
bound
outsb
stos
or
call
push
fidivrl
or
fnstenv
xchg
ret
repz
adc
divl
dec
mov
xlat
xor
mov
lock
sbb
lods
std
dec
arpl
mov
xchg
mov
sar
popf
or
mov
ljmp
or
lcall
call
push
xchg
push
popa
sbb
cmp
shrb
add
cmp
push
pop
mov
aam
and
inc
push
pop
mov
lods
andl
aas
outsb
inc
mov
push
sbb
mov
and
subl
fidivrl
mov
add
enter
jne
push
cmp
lea
in
cmp
cmc
add
ss
adc
push
pushf
mov
iret
outsb
pop
test
lods
lods
push
cmp
in
test
push
xchg
sbb
xor
lahf
mov
cmpsl
cmp
or
cmpl
lcall
movsl
inc
add
daa
jmp
ficoms
bnd
sub
add
mov
stc
pop
push
jmp
xor
xor
jb
jnp
daa
out
loope
sbb
leave
push
mov
mov
xchg
pusha
push
sbb
xor
or
dec
push
scas
xchg
gs
or
pushf
lahf
dec
fldl2e
comiss
roll
xchg
or
rcl
inc
dec
push
aad
dec
mov
mov
xchg
dec
push
adc
ret
xlat
adc
adc
test
inc
jnp
inc
test
mov
ds
inc
in
popa
jmp
in
or
movsb
xchg
jns
das
sbb
push
sbb
pop
repnz
xchg
push
mov
pop
xor
cwtl
shll
mov
in
push
shll
rcrb
mov
push
mov
inc
dec
jmp
outsl
lods
int
jecxz
adcl
pop
popf
sti
sub
mov
sbbb
sub
sbbb
cmpsl
mov
xor
pop
adc
xor
inc
scas
bound
repnz
mov
sbb
gs
xor
mov
out
adc
int3
rorl
bswap
out
dec
cmp
addl
loope
or
fisubl
daa
xor
cmp
sahf
xlat
xor
jecxz
fwait
push
pop
inc
sub
sbb
ljmp
ss
adc
stos
inc
out
push
fcmovne
aad
imul
idivb
test
lods
pusha
out
ds
lods
dec
pop
stc
xchg
pop
dec
fs
xchg
sub
aaa
test
dec
bound
test
pop
aam
push
ror
outsl
test
add
and
pop
movsb
push
andb
xor
xchg
jmp
push
test
jns
je
push
and
lds
inc
jl
sbb
cmp
push
and
cmp
in
repnz
hlt
push
sbb
nop
lds
icebp
mov
sbbl
sbb
mov
clc
fstps
pushf
mov
push
adc
xchg
add
sahf
sbb
xlat
es
cmp
jo
dec
push
leave
and
inc
add
pop
lret
adc
xor
pop
dec
out
sbb
popa
xor
fidivrl
in
fwait
xor
movsb
sahf
and
xchg
mov
jnp
xor
add
and
pop
lods
pushf
and
mov
cmp
mov
or
lods
add
jp
add
jmp
imul
xchg
stos
rcrl
jb
lds
cld
mov
mov
popa
inc
jo
repz
sbb
les
xchg
mov
inc
imul
sbb
and
in
mov
mov
cmc
or
jge
mov
push
loopne
and
push
imul
push
adc
mov
pop
or
cmp
sbb
movsb
lret
in
xchg
xor
dec
leave
shlb
int
inc
ljmp
xor
test
sti
xchg
dec
lahf
stos
mov
xor
sbb
push
movsl
lret
xor
sti
and
into
xchg
xchg
push
les
add
mov
subb
push
sub
bound
jne
fcmovu
call
lret
cmp
jg
sbb
add
xor
scas
pop
inc
jae
int
xor
dec
mov
mov
or
insb
xlat
in
sar
fnsave
sbb
cmp
stos
jns
ffree
lds
jo
ror
in
add
xor
jbe
aad
mov
xchg
sub
jge
or
jb
pop
cli
adc
ret
jae
dec
xchg
add
sti
mov
mov
jae
xor
and
imul
sub
out
pop
or
jae
cmpsb
repnz
mov
inc
push
aas
dec
outsb
xor
gs
sbbl
xor
out
jnp
xchg
iret
xchg
out
mov
sarl
xchg
les
xor
hlt
pop
mov
xorb
sbb
test
jo
mov
mov
or
inc
push
xor
mov
popf
adc
cltd
lods
and
mov
sbb
cs
js
sarl
push
lea
push
mov
stos
aas
dec
jb
rorb
sbb
xor
call
mov
cld
pop
pop
insl
jmp
add
cltd
jg
lahf
rolb
test
in
xor
pop
jg
push
in
pop
adc
xchg
aaa
sbb
cmpsl
idiv
notb
push
xchg
cmp
mov
clc
shll
xor
pop
cmp
add
mov
shlb
gs
imul
lea
jp
maskmovq
imull
xchg
mov
push
adc
pop
jge
cmpsl
in
mov
sarl
xlat
inc
cmpsl
xlat
std
sub
repz
inc
jle
and
add
xchg
xchg
call
pop
gs
fsub
dec
and
mov
pusha
cs
mov
xor
jg
push
mov
sub
inc
pop
mov
stos
js
shlb
cmp
push
adc
xor
pop
jl
mov
jnp
into
mov
test
fcoms
and
aaa
push
inc
mov
push
xchg
cmp
incl
imul
movsl
in
push
mov
jnp
cmpsb
out
cli
xlat
jne
adc
sbb
dec
jae
cltd
test
dec
sahf
call
std
sbb
pop
sbb
enter
and
clc
jne
push
push
lahf
xchg
sarb
pop
dec
shlb
push
fcmovu
sub
and
into
inc
jae
push
jecxz
gs
jae
or
mov
ss
and
jno
loopne
add
shll
pop
jp
stc
arpl
jecxz
int3
das
add
sub
push
loopne
stos
push
sbb
and
out
lcall
pop
inc
cmp
stos
add
jp
ja
mov
jb
dec
or
in
lock
cmpsb
cmpsl
add
sbb
mov
inc
lret
inc
inc
lret
and
out
imul
push
pop
mov
data16
pusha
or
test
nop
addl
dec
add
loop
lods
test
jg
and
mov
int
xchg
repnz
in
pop
pop
stos
pop
fcmove
orb
jmp
sbb
or
inc
aam
repz
sub
mov
scas
adc
mov
push
and
dec
out
mov
add
pushf
sti
adc
mov
push
divb
inc
adc
cli
insb
mov
jbe
nop
push
mov
add
out
xor
mov
or
cli
enter
mov
mov
movsb
and
or
push
sbb
out
adc
mov
adc
test
stos
or
jle
in
jp
repz
into
add
outsl
cld
ret
out
sub
fwait
jecxz
in
sti
jnp
jbe
jge
mov
leave
xlat
arpl
xchg
repnz
mov
xchg
and
lock
test
in
cs
jle
mov
jl
fcomps
cmp
outsl
fldcw
push
enter
sub
das
jne
in
or
sbb
mov
xor
je
ss
pusha
cwtl
movsl
addl
fnsave
test
stos
loope
adc
xchg
mov
ret
jecxz
push
or
adc
pop
test
mov
and
jle
or
xor
push
xor
aaa
adcl
pop
mov
in
mov
sti
in
cmpsb
cwtl
leave
int3
mov
cmp
push
popa
aam
mov
push
push
test
pusha
mov
es
outsb
dec
or
jae
imul
cmpsl
stos
adc
mov
mov
into
loope
in
jns
daa
sub
out
bound
dec
aam
js
push
shlb
mov
rcll
repnz
imull
push
loop
or
dec
mov
cmp
xorl
sbb
push
movsb
xor
xchg
rorb
cmc
xchg
jns
and
adc
mov
cmp
rclb
lea
mov
je
add
outsl
dec
lret
lcall
add
fisttps
lahf
sbb
jle
outsb
es
js
das
xor
adc
sbb
xor
enter
or
adc
lock
inc
mull
mov
adc
test
ljmp
sbbl
call
jae
ljmp
addr16
or
pop
mov
stc
arpl
xor
sub
jmp
iret
add
mov
popl
cmp
xchg
mov
push
mov
scas
jp
pushf
jbe
push
loope
ja
popa
add
xchg
shll
cltd
pop
or
out
aaa
adc
adc
push
cmp
sbb
pop
xor
call
xor
xchg
in
jl
xchg
xor
mov
ret
in
pop
lahf
ja
mov
xchg
inc
in
push
or
and
sub
call
push
nop
lahf
mov
mov
mov
fs
fs
jl
and
dec
pusha
xchg
dec
jmp
lahf
ja
ljmp
inc
pushf
outsl
dec
mov
sub
mov
pop
aaa
mov
cwtl
push
xchg
push
in
aas
sbb
dec
mov
push
or
add
mov
push
mov
sub
mulb
cmp
fwait
bound
repnz
adc
lret
jns
push
mov
imul
jecxz
stc
out
cmp
cmp
cmp
jl
xor
dec
daa
loope
insl
aam
scas
add
jmp
adc
mov
in
shll
mov
test
testl
inc
xor
daa
sub
dec
pop
xchg
stc
in
or
push
xor
cmp
sti
outsb
mov
inc
inc
subb
fsubs
dec
and
push
pop
cmc
add
stos
cmp
inc
adc
push
pop
fcoml
pop
leave
add
stos
jno
setnp
jnp
dec
fistpl
push
cmp
xor
mov
jle
push
sub
mov
ret
or
aad
push
ficoml
or
mov
repnz
clc
loop
mov
jmp
sub
jno
les
dec
shr
fiadds
rorb
out
stos
cltd
dec
mov
out
xor
faddp
orb
fsts
mov
mov
mov
dec
mov
and
jo
gs
push
mov
add
push
jno
adc
lock
ret
jnp
jb
inc
lcall
mov
push
mov
adc
xchg
pop
sbb
sbb
and
xor
ja
mov
push
add
mov
adc
test
addl
subl
fdiv
mov
add
pop
jl
shrb
push
pop
jo
out
mov
pop
xor
jb
push
test
and
cmp
test
add
sbb
cmp
insl
and
ja
rcrl
negb
cltd
pop
jno
inc
pusha
cmp
push
inc
inc
fnstcw
xor
and
xchg
stc
enterw
lea
inc
jo
rorl
jns
mov
mov
pop
sahf
jns
outsb
in
repz
cmp
push
add
jg
frstor
jo
sti
mov
dec
flds
dec
insl
mov
scas
mov
shll
sub
es
pop
jbe
pusha
scas
xor
xor
xchg
orb
inc
ftst
outsb
jae
xor
ds
lock
mov
push
lret
ja
mov
mov
stos
fdivs
xorb
test
pop
lahf
push
mov
outsl
cmpl
out
mov
testl
inc
imul
adc
imul
fcoms
sti
add
mov
mov
inc
jg
pusha
fdivrl
push
sub
jp
andl
ret
fwait
dec
add
inc
push
in
sbb
mov
mov
jle
jge
sbb
lods
dec
pushw
imul
sub
fidivrl
dec
cmp
pop
ficoms
jecxz
hlt
adc
mov
mov
mov
pusha
pop
cmp
add
cli
repnz
loopne
dec
and
test
jno
sub
push
popf
mov
push
push
cmp
lret
scas
mov
xor
fcomp
xchg
lds
imul
icebp
ljmp
in
test
in
xchg
stos
out
inc
xor
sub
pushf
add
insl
mov
fistpl
in
push
rorb
push
mov
dec
xchg
scas
push
xor
popa
pop
mov
fdivrl
test
inc
enter
rcrl
cmp
push
lret
out
mov
aaa
adc
scas
js
mov
stc
popa
or
leave
jg
push
rol
jb
xchg
bound
mov
fst
pop
test
add
ret
cltd
test
mov
es
jle
xor
adc
loop
bound
mov
mov
popf
push
rorb
test
aaa
add
mov
sarb
sbb
loope
nopl
pop
jno
xor
test
cmpsb
lcall
inc
push
out
xchg
mov
imul
test
scas
out
mov
je
or
push
inc
mov
mov
fdivs
ret
jmp
std
push
dec
jb
sbbl
fnstcw
sar
sahf
divl
mov
jo
xchg
cmp
das
pop
and
cmp
dec
inc
into
mov
int3
sub
push
xor
leave
rclb
adc
lods
stos
fwait
cmpsl
dec
sub
mov
insb
sbb
insb
xchg
xchg
pushf
mov
leave
loope
push
iret
mov
mov
shl
fsubl
int3
cmpb
xchg
scas
rolb
and
jno
pop
and
inc
dec
push
out
cwtl
jne
fwait
inc
jle
inc
cmp
cmp
push
xlat
rcr
add
repz
rclb
mov
roll
ljmp
jnp
adc
cmp
sahf
sub
in
cltd
push
sti
adc
ret
or
pop
adc
adc
sbb
std
fistps
test
cmp
call
div
shrl
aad
cld
xor
pop
pop
jno
insb
pop
enter
lret
sub
adc
pop
xchg
push
mov
das
scas
add
je
xchg
imul
adc
push
loop
add
inc
xchg
push
imul
jns
xchg
pop
cmp
aas
xchg
push
jbe
sub
xor
fs
mov
icebp
inc
dec
nop
sub
int
add
mov
mov
mov
push
nop
gs
ljmp
pop
and
pop
and
outsl
and
stc
add
add
in
jecxz
out
push
or
xchg
jmp
outsb
sub
cmp
mov
push
ret
hlt
pop
insl
test
lock
lea
fists
outsb
cmp
ss
push
push
mov
stos
cmp
std
add
fmull
mov
sti
cmp
sbb
jb
orb
mov
sbb
inc
stos
mov
jns
and
push
test
cmp
stos
jecxz
rcll
aas
cwtl
ja
lds
mov
push
nop
fldenv
dec
out
inc
mov
mov
jns,pn
mov
push
filds
xor
test
pop
jle
cmp
mov
lea
je
xor
sbb
mov
int3
inc
or
mov
fdivrs
fistpll
or
jecxz
out
adc
imul
pop
jo
adc
push
jns
xchg
cmp
or
xor
jecxz
cmp
rolb
or
sahf
xor
inc
xor
test
ds
jle
jecxz
push
mov
adc
bound
popa
push
ret
in
orl
xchg
pop
addr16
jmp
test
lret
mov
add
cs
sbb
out
xchg
into
ljmp
loop
test
adc
pop
rcrl
ds
xor
out
inc
xchg
addl
daa
dec
mov
add
add
les
fnsave
imul
dec
es
ljmp
cs
pop
das
jns
add
repz
pop
shrb
rolb
pop
mov
add
pop
in
mov
lods
lds
mull
pop
and
out
hlt
call
pop
push
dec
xor
into
or
mov
sub
or
in
ss
push
cld
pop
aad
mov
inc
mov
test
mov
mov
xor
jl
push
insb
pop
loope
or
icebp
push
testb
lret
es
popa
std
test
subb
pop
ds
das
pop
shlb
or
cmp
enter
mov
sahf
cmpsb
add
rcrl
adc
filds
pusha
mov
xor
daa
pop
sub
inc
jo
xor
push
sbb
inc
mov
pop
xchg
pop
dec
ret
cmp
iret
dec
cmp
adc
and
dec
add
or
popa
hlt
mov
inc
mov
jp
dec
int3
mov
gs
pusha
or
inc
dec
imul
pop
sub
mov
bound
enter
mov
lea
les
jl
mov
aaa
mov
mov
add
cmp
xchg
mov
sbb
in
movsl
xchg
out
adc
mov
cmp
repz
and
sub
sarl
orl
dec
dec
adc
jecxz
cmpsl
lea
push
imul
aad
pop
jns
fidivrl
cltd
adc
mov
pop
mov
sub
out
cs
mov
push
ror
xchg
push
jle
and
push
push
es
dec
aaa
xchg
negb
cld
inc
mov
ficoml
gs
clc
enter
test
mov
shrl
cld
lock
add
and
mov
sub
rolb
cmpb
xor
repnz
sub
lcall
fsub
insl
xchg
mov
in
adc
aam
nop
aam
xor
js
cltd
adc
dec
add
sub
or
jne
jo
push
bound
aaa
xorl
fmuls
jmp
jns
test
sbb
in
lret
stos
int
push
mov
dec
test
daa
pop
insb
sub
ret
push
ljmp
aaa
ret
insl
nop
xor
mov
cmp
mov
hlt
pop
outsl
adc
add
pop
std
test
bound
add
push
dec
xchg
or
pop
or
hlt
insl
push
out
fdivrl
or
push
mov
cmpsb
in
mov
adcl
mov
pop
scas
xor
dec
js
push
insl
xor
sub
pop
push
inc
in
sub
xchg
test
mov
sbb
xchg
push
xchg
dec
call
ljmp
lods
jle
je
sub
fwait
cmp
sti
jecxz
xor
sbb
jge
std
xor
mov
lods
xor
inc
out
or
sbb
pop
std
or
mov
pushf
scas
stos
lds
sbb
add
enter
lds
icebp
fwait
insl
xor
mov
clc
sbb
repz
sbb
or
fwait
sahf
ret
inc
xchg
lods
mov
lock
xor
fistpl
subl
mov
mov
outsb
filds
sahf
adc
xor
adc
push
bound
js
mov
and
push
jl
imul
push
ret
or
mov
xor
lea
clc
iret
push
pavgb
push
dec
and
loope
in
imul
rcrb
enter
ds
add
sahf
mov
xor
scas
lea
sbb
cmp
test
mov
lods
pop
in
adc
mov
mov
mov
jo
rolb
sbb
sub
data16
jno
or
test
or
pop
leave
aaa
or
subb
js
xchg
sbb
fnstsw
iret
cld
and
aaa
and
add
int
xor
pop
movups
push
sbb
inc
ds
xchg
jbe
orl
divl
lods
jbe
popa
mov
insl
jb
xchg
test
lahf
int
push
loope
ss
mov
xchg
leave
ret
cs
mov
popf
fucomip
xchg
sub
jne
sahf
dec
add
dec
jecxz
mov
outsb
lcall
dec
inc
outsb
inc
out
test
sti
fwait
divl
jbe
stos
movsl
xor
cmp
mov
stos
into
shll
cmp
inc
adc
stos
xor
sub
adc
mov
mov
push
mov
pop
dec
mov
je
mov
cmp
adc
inc
lock
out
das
lods
xchg
sbb
test
bound
mov
sub
outsb
xchg
add
cmpsb
jmp
dec
in
mov
jnp
jb
pusha
or
pop
add
sti
nop
cli
fsubl
sub
sub
hlt
adc
or
pop
cmpsl
testl
in
dec
fcoml
mov
xchg
pusha
test
push
jle
or
mov
mov
mov
scas
jnp
test
daa
imul
popf
add
in
xchg
xchg
push
cmc
jnp
xor
mov
call
in
mov
adc
pop
mov
outsl
into
stos
or
subb
jno
cmpsl
xor
popa
inc
push
mov
mov
sbb
cwtl
das
inc
bound
dec
call
jae
setne
xchg
dec
out
pop
or
jo
push
aas
sub
xor
mov
pop
mov
sub
mov
cmp
adc
jne
add
rcl
mov
rcrl
inc
fldl
jns
sbb
mov
dec
hlt
enter
dec
or
scas
frstor
jmp
rclb
int
daa
push
cmpsl
or
shrb
ror
aam
lds
xor
lock
stos
dec
lods
int
std
mov
in
mov
jg
scas
fs
outsl
pop
mov
inc
lahf
sbb
sub
sub
vpcmpgtd
mov
jb
out
pushf
cwtl
pop
rcr
jg
lods
out
ss
jp
add
add
es
fsts
pop
int
add
adc
push
dec
mov
or
repnz
into
lods
pop
ss
pusha
mov
imul
pop
add
ret
jb
and
aaa
mov
jg
sbb
dec
loop
jo
add
jecxz
push
xor
xor
mov
adc
dec
jb
loopne
pop
inc
cwtl
test
or
int3
fxch
fiaddl
mov
or
sub
cmp
and
bound
insl
push
decl
xor
add
mov
mov
arpl
test
or
xchg
in
into
and
lods
aas
jmp
cli
and
or
rclb
jmp
jns
movsl
stos
mov
lock
dec
jp
rolb
inc
imul
xor
cs
test
sbbl
into
and
mov
pop
pop
and
dec
inc
cld
xor
int
mov
pop
adc
cmpsl
pop
repnz
shrl
addr16
mov
pop
cmp
test
jle
cmpsb
adc
int
dec
inc
negb
pop
imul
push
int3
and
mov
sahf
hlt
popa
adc
mov
test
stos
sbb
sbb
mov
jns
cmp
stc
mov
mov
jne
fstp
jne
outsb
mov
xchg
les
push
lods
inc
jmp
lret
outsl
enter
xchg
sub
mov
add
sbb
adc
shll
inc
into
sti
cmp
lcall
in
aad
mov
jp
xchg
add
mov
je
or
jne
cmp
out
jge
or
xchg
test
rcrl
xchg
stos
sbb
mov
negl
fdivs
ret
loop
test
sahf
sub
xor
or
sub
mov
in
fldl
and
pusha
pusha
mov
cmp
test
cld
adc
pop
xor
xchg
imul
fisttps
in
mov
fcoml
iret
push
in
dec
push
test
push
xchg
inc
jp
gs
sub
iret
in
mov
cmp
or
int
ret
mov
jno
adc
xchg
sub
or
in
ret
mov
mov
push
adc
xor
cwtl
xchg
das
in
push
shll
mov
in
fidivs
lahf
mov
inc
rcrb
sub
sbb
enter
outsl
mov
test
xchg
push
adc
aaa
andl
xsaveopt
mov
push
add
xchg
and
sahf
mov
insb
add
pop
fwait
icebp
int3
adc
adc
adc
cmp
insl
bound
shll
xchg
insb
or
lock
add
mov
pop
push
push
add
lds
cmp
dec
inc
shlb
ret
sbb
push
mov
jnp
jb
pop
dec
outsb
out
pop
mov
or
xchg
jb
jl
and
dec
inc
sbb
inc
pop
jg
push
loop
lods
add
or
std
jg
lret
xchg
xchg
mov
sbb
aad
sarl
in
jns
ljmp
sbb
pop
jge
cmp
add
cmp
notl
adc
xchg
xor
cmc
inc
pop
enter
outsl
cld
pop
dec
pop
sub
inc
les
in
and
cld
push
sahf
call
out
jecxz
in
outsl
jnp
and
cmpsl
loope
mov
and
xor
int
std
insl
sbb
jbe
sti
aas
mov
xchg
dec
stos
mov
roll
adc
daa
lret
sbb
inc
xchg
test
inc
mov
sbb
mov
ds
popw
xchg
lods
fbstp
and
sub
xchg
stos
mov
xchg
mov
mov
cli
shlb
addr16
mov
jae
out
scas
pop
ss
xchg
mov
into
pusha
dec
inc
sub
jno
std
enter
sub
push
mov
vpmaxub
push
inc
adc
push
dec
jno
sub
push
les
add
xchg
fldcw
sbb
es
add
inc
and
jp
mov
cwtl
adc
pop
dec
mov
jnp
hlt
stc
sahf
aam
cwtl
icebp
shlb
jno
imul
lret
mov
enter
xchg
mov
fidivrs
push
sbb
mov
call
dec
fistpl
stc
call
sub
and
mov
imul
aam
xor
sub
mov
pop
icebp
cmp
fstpt
subl
and
test
mov
mov
mov
lea
pop
mov
rcl
ret
cmp
lret
test
mov
pushf
rcll
scas
das
xchg
scas
dec
stos
pop
fsubrl
adc
daa
ror
imul
arpl
fdivl
dec
push
and
or
push
pop
xorl
jmp
pop
sub
mov
mov
and
rolb
add
mov
sub
inc
mov
mov
test
mov
inc
mov
leave
arpl
pop
jbe
push
sahf
add
lahf
mov
lcall
push
cmp
ror
cmp
ret
mov
push
xor
inc
mov
insl
mov
cmc
and
jle
lods
cmp
icebp
adc
fwait
test
lret
fildll
sbb
pop
scas
shrb
pop
add
mov
insb
push
sti
mov
adc
adc
outsb
call
and
ljmp
ficoms
ja
mov
or
out
push
inc
jmp
test
dec
mov
fistpll
push
call
pop
das
xor
sub
jmp
push
mov
mov
pop
push
ffree
add
fwait
push
cltd
and
sub
adc
jns
das
lods
les
push
pop
adc
dec
fimull
lea
pop
mov
jo
in
popa
aad
sbb
xor
sub
pop
xchg
seto
repnz
cmpsl
sti
jno
inc
push
or
xor
rorl
xor
mov
into
repz
in
jmp
pop
pusha
scas
clc
out
push
jmp
dec
aas
add
adc
test
fcoml
jmp
push
xlat
jnp
sbb
out
adc
jnp
dec
ss
fwait
sbb
cmc
inc
leave
cmp
sub
pop
repz
mov
out
cmp
ja
mov
push
data16
or
mov
cmp
push
mov
xor
sbb
daa
add
cs
rorl
push
mov
icebp
dec
notl
addr16
int3
xchg
adc
or
adc
xchg
jge
mov
hlt
mov
jae
jp
mov
xchg
cwtl
add
push
sbb
jbe
movsb
mov
cmp
inc
insl
jo
mov
cmp
jae
or
icebp
cmp
out
clc
dec
cli
aaa
aam
or
loop
xor
pop
popf
gs
je
out
addb
lds
out
aas
mov
mov
repnz
pop
lock
icebp
jb
lds
cmpsl
icebp
out
ret
fwait
lock
iret
jg
xchg
lods
push
ret
and
daa
jb
lds
int3
gs
push
adc
dec
inc
or
and
mov
test
nop
sbb
xor
and
inc
cld
inc
inc
dec
sar
jge
and
sub
inc
negb
in
xor
jae
xchg
mov
jb
arpl
xchg
movsl
mov
in
xchg
dec
mov
loope
and
mov
popf
xchg
pop
in
pusha
stos
push
enter
mov
dec
bound
push
mov
es
jo
xchg
jne
xchg
repnz
pop
aam
mov
outsb
int
jge
add
dec
and
pusha
sbb
xor
es
in
in
iret
cltd
dec
aas
pop
decl
push
mov
and
lret
push
mul
cmp
popf
test
mov
iret
xor
or
subl
jge
int
inc
je
mov
jae
mov
shl
cmp
jo
into
insb
push
push
adcl
rcrb
mov
dec
mov
sbb
xor
loope
ds
jmp
add
or
or
pop
ja
dec
mov
ds
repz
dec
jecxz
jb
rcll
repnz
dec
out
rolb
xchg
or
dec
pop
mov
clc
cltd
mov
sub
repz
fistpl
pop
inc
movsl
mov
pop
xchg
ret
pop
or
lea
sub
add
lods
pop
mov
negl
mov
jbe
shrl
adc
mov
add
push
inc
mov
outsl
jb
push
pop
jns
scas
es
test
mov
std
loope
push
pop
loop
pop
cmp
jb
loop
out
imul
cltd
push
lahf
add
enter
cli
lret
movb
and
push
es
mov
call
push
push
inc
iret
sub
loop
es
or
mov
in
sub
fistpll
jl
add
jmp
pop
insb
mov
lret
aas
sub
push
mov
not
nopl
push
push
pop
xor
in
orl
lea
and
cmp
sbb
ja
pop
jno
ja
int
fldenv
mov
popl
in
jmp
xor
cwtl
push
fwait
int3
dec
push
cltd
sub
aam
enter
mov
lcall
imul
sub
xchg
cmp
test
xor
mov
movsb
out
sti
inc
push
xchg
xchg
ret
pop
shlb
and
mov
xor
fcoml
call
mov
sbbb
insb
mull
test
cltd
jge
or
cmp
mov
out
pop
add
sbb
jg
rcll
in
subl
pop
call
mov
cld
inc
jp
add
hlt
xchg
js
rcll
add
nop
xlat
sub
mov
ds
jge
scas
jno
daa
mov
fildll
pop
mov
sahf
cli
int
les
inc
stc
inc
insl
pop
cltd
pop
in
fdivrs
sahf
jae
in
mov
stc
cltd
mov
cmpsl
or
fildl
sbb
leave
cmpsb
outsb
xor
fnsave
rcrb
or
mov
leave
sbb
cmp
sti
in
test
adc
sar
subl
fsubl
or
sbb
mov
dec
data16
mov
mov
cmp
pop
mov
sbb
jp
stos
mov
adc
adc
add
dec
jno
scas
xor
and
jecxz
fimull
test
mov
push
push
clc
into
and
insl
cld
or
mov
stc
jb
or
stc
cmpsb
jae
jecxz
ja
pushl
test
insb
shlb
das
push
int3
call
test
xchg
lods
aas
mov
test
adc
into
das
shll
push
je
insb
push
dec
xchg
repnz
xchg
jns
icebp
js
jp
push
jmp
fldenv
nop
inc
mov
dec
fildl
lods
insl
mov
mov
sbb
dec
movsb
pop
int3
push
enter
pushl
adcl
lods
mov
insl
in
jae
pop
jb
mov
sbb
add
or
gs
in
mov
jbe
mov
ror
les
idivb
jb
lea
imul
out
cmc
aad
xchg
push
and
aas
or
js
xorl
enter
in
roll
in
shr
xor
jnp
pop
jne
mov
push
cld
in
add
adc
add
out
test
push
out
push
adc
and
jne
mov
pop
jo
add
stos
out
push
inc
adc
inc
lahf
lahf
mov
xchg
out
add
test
push
lahf
pushf
pusha
sbb
loope
ficoml
outsl
fs
in
push
dec
fstpl
dec
mov
inc
lret
dec
mov
pop
mov
push
scas
jge
sub
jp
aad
jnp
add
int3
push
dec
lods
aas
and
sub
mov
lea
cmp
xchg
pusha
add
adc
mov
je
test
fcmovb
lock
adc
addb
mov
dec
fwait
js
add
shr
pop
add
mov
ja
inc
pop
mov
push
jl
sbb
pop
mov
jbe
aad
mov
adc
outsl
leave
sub
jb
xchg
xchg
adc
lcall
mov
repz
pop
lcall
sub
cmp
lret
jns
dec
dec
xchg
jne
imull
gs
sub
scas
aas
cltd
enter
jmp
cli
cli
test
add
shrb
jne
push
and
pop
test
inc
test
adc
inc
sbb
sbb
test
push
and
jno
imulb
fucompp
pusha
shll
pop
icebp
cs
ficoms
lock
sti
in
shlb
mov
rcrl
fs
js
mov
or
inc
sub
daa
lcall
push
adc
pop
fst
jge
decl
nop
and
xor
dec
and
jg
inc
fnstcw
ret
cmc
and
out
aas
xchg
iret
mov
mov
call
push
jl
aas
adc
pop
xchg
mov
dec
pusha
push
imul
clc
pusha
sbb
popf
xlat
stos
mov
xor
pop
mov
sbb
fwait
test
fs
xchg
insb
popf
sbb
mov
mov
add
nop
push
dec
xor
in
dec
adc
test
or
inc
sbb
push
sahf
imul
ret
cmpsl
clc
dec
nop
enter
jns
test
loopne
pop
and
sti
fistpl
mov
out
add
pop
mov
test
into
xorb
xor
popa
xchg
xchg
dec
push
fistps
daa
or
fbstp
sub
dec
xchg
jns
jo
mov
fldenv
rcll
jne,pt
aaa
cli
ja
cmpsb
into
cmp
les
insl
sahf
add
lahf
cmp
mov
nop
mov
xchg
dec
push
das
push
jne
aas
jp
cltd
int
lods
xchg
ret
jno
adc
pop
cmpsl
filds
cmp
or
cmpsl
leave
lock
lock
pop
xchg
arpl
adc
or
dec
push
in
sahf
shrb
and
cmp
mov
mov
jp
fcoml
cmp
xchg
cmc
xchg
enter
fs
lahf
or
aam
cli
daa
and
cmp
push
add
jg
dec
je
mov
push
pusha
jl
push
pushf
mov
roll
sbb
mov
ljmp
daa
movsl
mov
push
mov
mov
mov
std
sbb
pusha
and
mov
dec
xchg
jecxz
hlt
xchg
call
pop
push
fiaddl
or
repnz
and
pop
and
cli
dec
xchg
stc
xchg
add
pop
cmp
jbe
push
ret
insl
fisubs
mov
pop
ret
aas
xchg
cmp
nop
sbb
add
aas
push
ret
xchg
jg
cmp
outsl
outsb
xchg
push
mov
xchg
dec
iret
jo
outsl
nop
inc
fbld
mov
adc
test
nop
loope
sbb
jecxz
movsl
xchg
ret
jbe
inc
roll
in
mov
ret
xchg
sbb
imul
inc
fdiv
loope
xchg
push
or
adc
or
cmpsb
xchg
xor
cmc
test
lret
xor
mov
inc
dec
insb
ljmp
jle
or
jg
sub
adc
dec
repnz
das
dec
cltd
mov
jno
testb
movsl
push
push
ret
andb
dec
stos
lock
jl
orl
mov
repnz
dec
mov
js
fwait
leave
xor
jl
clc
mov
cmpsl
or
fldcw
jbe
xor
push
fldenv
repz
cmp
dec
aas
imul
mov
mov
pop
into
cs
inc
in
mov
je
insb
dec
push
arpl
dec
and
xchg
or
and
aas
and
mov
adc
ud2
out
and
mov
fdivs
bnd
sub
aam
jp
fmul
and
mov
inc
push
dec
pop
clc
jp
inc
inc
orb
dec
add
push
mov
cmp
pop
lahf
jecxz
jb,pt
cmc
sbb
mov
icebp
test
pop
lea
jp
push
xor
fnstenv
cld
cmp
daa
mov
ret
iret
ds
cwtl
sahf
dec
lock
sbb
xor
out
lods
repz
hlt
xchg
push
xor
adc
rcl
and
or
mov
lret
jno
dec
adc
inc
sbb
add
cwtl
mov
and
repz
xchg
add
cmp
fwait
aaa
jmp
or
mul
lock
test
pop
jmp
insl
aaa
and
mov
push
in
mov
dec
movsl
js
rcrb
icebp
jle
cmpsl
fcoms
mov
push
cmc
mov
mov
jns
lret
fists
and
loope
add
in
mov
mull
fsubl
enter
call
lock
xor
mov
mov
mov
mov
loop
loopne
sub
mov
jl
insb
das
aad
pop
out
push
dec
push
es
push
mov
pop
xor
or
aaa
mov
sub
stos
pop
xor
push
aam
shll
mov
cmp
mov
xor
hlt
jg
cmpsl
jge
jecxz
fs
xchg
fdivrl
mov
add
rcrl
pop
shl
mov
stos
inc
incl
dec
xchg
push
pushf
fcomps
mov
inc
shll
mov
xor
push
imul
push
sbb
push
push
adc
pop
xor
iret
data16
imul
xlat
orl
adc
inc
lds
sahf
stos
cmpb
adc
pop
outsl
sbb
daa
lcall
rcl
inc
flds
cmp
inc
sbbl
dec
ja
mov
jno
push
jo
push
xchg
dec
push
mov
loope
insb
enter
sbb
mov
lret
dec
mov
jmp
iret
xor
test
inc
rcll
mov
cs
push
cmp
lcall
call
and
xchg
push
aas
add
jo
cli
mov
mov
sti
inc
pop
je
sbb
fimuls
push
mov
xor
js
test
jg
dec
mov
and
lds
sbb
shrb
lcall
cli
jbe
jae
adc
ret
and
mov
popa
push
cmpsl
out
pop
sahf
adc
jg
jp
ljmp
mul
jmp
movsb
xchg
push
out
fwait
pusha
and
push
xchg
gs
test
pop
xor
pop
ljmp
pop
subb
mov
fistpl
fadd
jmp
cmp
xchg
fdiv
mov
bound
jmp
push
inc
adc
jle
addr16
xchg
lock
orb
xor
pop
mov
shrl
push
sahf
scas
xchg
scas
jbe
std
jecxz
ds
into
data16
or
scas
orb
and
jae
push
mov
mov
movsl
lock
faddl
xlat
dec
ss
pop
aam
sbb
xchg
dec
pusha
repz
clc
in
adc
push
clc
popf
fsubs
rorl
xor
cmp
cs
lahf
lods
dec
roll
mov
jg
insb
jl
adc
push
jo
cmp
dec
cmpsb
dec
lret
mov
outsl
xor
outsl
jmp
pop
inc
xor
add
leave
jle
xor
pop
jae
mov
fdivl
push
lods
lea
or
adc
imul
sbb
je
xchg
or
das
inc
sahf
sub
pusha
ljmp
repnz
or
imul
dec
je
xor
enter
icebp
adcl
fists
fiaddl
pop
dec
and
icebp
sbb
dec
js
push
adcl
push
mov
movsl
and
fisubs
gs
lret
lock
jge
jp
push
cmp
aam
inc
dec
xchg
arpl
flds
rorb
or
or
and
and
and
pop
in
outsl
xchg
es
add
loope
adc
fldl
mov
lar
incb
test
mov
repz
nop
push
jge
ja
inc
mov
push
mov
fnstcw
testl
pop
loopne
shll
cltd
rolb
imul
jne
push
adc
out
pusha
jl
sti
add
mov
faddl
test
cld
fistpl
gs
jge
jns
push
stos
xchg
push
mov
ds
adc
pop
sarl
xchg
hlt
mov
js
add
pop
dec
stc
stos
mov
push
xor
mov
xor
jmp
lret
test
mov
in
pop
popf
decb
rcl
es
xchg
and
mov
add
sub
adc
lods
shlb
xchg
enter
cmpsb
in
fimuls
rcr
in
sbb
filds
add
sub
out
sub
xor
xor
jge
data16
xchg
out
out
lea
and
pop
divb
nop
movsl
cli
and
lods
aas
pop
sub
fnstsw
xchg
lcall
mov
rclb
stos
shll
lods
out
popa
mov
adc
jbe
inc
mov
or
dec
cmp
aam
repnz
orl
cmp
mov
add
lret
sbb
dec
sbb
mov
lods
aad
fmull
jns
inc
xchg
push
push
dec
lret
cmp
into
adc
pop
mov
dec
sbb
cmp
lret
stos
scas
cmpsb
xor
cmpsb
mov
lock
mov
dec
cmp
xchg
mov
out
cmp
stos
cld
sub
bnd
out
clc
loope
jp
popf
xchg
xchg
push
cwtl
dec
iret
fnsave
adc
jb
aam
jo
lahf
jle
sbb
cs
mov
nop
push
push
aad
sbb
jg
and
mov
xor
and
adc
hlt
and
pop
fs
push
daa
in
leave
add
cmp
jb
out
in
fwait
pushf
mov
xor
adcl
add
mov
or
das
push
loopne
xchg
loope
cmp
sbb
into
jbe
daa
or
in
lods
iret
xchg
dec
or
mov
lods
adc
pop
scas
shll
fldcw
sahf
xor
mov
lods
xor
subb
pop
adc
dec
dec
inc
ja
push
fldcw
shll
adc
fscale
jbe
aaa
or
loop
mov
popa
ret
cmpl
cmc
push
pop
xchg
popa
fisubrs
xchg
lods
shl
sub
pop
outsl
sbb
or
aad
btc
jno
in
xchg
sbb
inc
adc
inc
hlt
into
call
pop
or
addl
cld
push
mov
push
cmp
dec
pop
xchg
sbb
in
mov
adc
jb
jecxz
fs
cmp
push
xchg
icebp
push
cld
lahf
pop
jl
nop
cli
lret
arpl
xchg
stos
pop
lret
sarb
push
das
into
sbb
pop
pop
cmpb
pop
mov
adc
es
dec
fadds
push
cmp
sub
lea
je
inc
and
enter
pop
in
jle
repz
ret
cmp
lods
movsb
inc
push
mov
fdivr
vpaddusb
shl
xchg
sbb
imul
mov
and
and
insl
jne
jb
pop
fs
xchg
jo
mov
out
sbb
cs
hlt
sbb
cli
dec
xchg
or
jae
imul
lds
sbb
repz
xchg
icebp
fisubrl
lret
pop
mov
jmp
xlat
je
in
lcall
call
adc
out
add
xor
or
jecxz
push
cld
push
sbb
aad
and
xchg
fcmovnbe
fildl
clc
leave
pop
mov
mov
push
sub
mov
roll
nop
xchg
jb
fdivrp
lea
inc
out
sub
push
nop
in
push
or
repnz
pushf
sahf
iret
sbb
push
in
lds
inc
sub
ljmp
mov
cmp
cmpsb
and
negl
xchg
cmp
out
fisubrl
pop
mov
xchg
push
loop
dec
inc
outsb
dec
mov
xor
jl
fs
add
and
imul
test
sbb
mov
icebp
lahf
fs
cli
lods
mov
jne
push
mov
mov
cmp
out
movsl
jnp
ljmp
jo
jmp
out
orl
lahf
dec
jb
fsts
add
pop
mov
mov
filds
dec
in
mov
pop
add
adc
adc
mov
fs
loop
cmp
xor
bound
dec
inc
nop
hlt
imul
jl
inc
aad
and
pop
add
mov
popf
pop
pop
rolb
loopne
fstpl
push
addr16
aaa
lret
fwait
and
repz
mov
cmp
cmp
push
outsb
add
jge
cmpsb
cwtl
and
add
subb
xchg
and
aas
scas
cmp
fs
dec
dec
jns
sbb
cmp
stc
cmp
lods
jl
push
lret
pop
lods
das
jmp
popf
cmp
adc
lock
or
cmp
mov
mov
loop
repz
inc
lcall
sbb
outsl
mov
xchg
ss
mov
xchg
pop
cmc
sbb
cmp
jnp
pop
jl
inc
mov
lcall
xor
dec
ljmp
ljmp
jmp
xchg
sub
test
daa
fldenv
sbb
inc
and
push
es
jnp
in
cld
jne
mov
insb
mov
pushf
enter
mov
in
clc
mov
pop
int
mov
xchg
xlat
lds
inc
fcoml
enter
push
add
cmp
xor
pop
popw
inc
and
data16
cmpsb
mov
mov
dec
xor
mov
fistpll
faddl
inc
hlt
inc
jp
flds
push
stos
mov
jb
adc
inc
xchg
mov
pop
xchg
sbb
and
or
dec
movsl
mov
fcomi
mov
push
sub
jb
mov
pushf
loop
movsb
mov
xchg
push
lock
push
lods
xor
ror
movsb
pop
ljmp
push
mov
jge
jge
fxam
push
dec
sbb
lds
cs
mov
int3
sbb
rorl
loop
xchg
mov
cwtl
and
mov
dec
clc
push
mov
mov
adc
outsb
cli
push
mov
inc
mov
mov
and
mov
int
cld
dec
mov
int
jg
dec
and
mov
aaa
arpl
stos
adc
insl
ds
mov
ret
fwait
in
icebp
xor
jne
test
loopne
xor
ficompl
out
mov
arpl
fists
mov
sbb
scas
pop
and
test
jo
adc
push
js
fldenv
inc
push
cli
sbbl
mov
push
sbb
mov
jge
add
test
js
out
pop
ret
sti
jmp
scas
xor
in
icebp
stos
mov
and
dec
rolb
je
bound
stos
arpl
mov
addr16
mov
inc
mov
jge
mov
push
pop
sub
sub
mov
mov
shr
daa
in
outsb
mov
inc
mov
dec
jp
aad
and
lahf
xor
sbb
mov
xor
pop
int
push
push
mov
xlat
int3
mov
orl
cmpsl
aas
mov
stos
xor
pminub
mov
pop
ret
or
test
daa
cmpb
fwait
pop
xchg
jmp
lock
add
or
adcl
jle
inc
fcomp
insl
cmp
pop
mov
jle
gs
push
repz
sbb
sub
push
pop
adc
push
push
addr16
imul
mov
mov
mov
pop
jmp
lods
xor
mov
and
aad
movsb
bound
cmp
adc
xor
imul
xlat
dec
insl
js
test
repnz
cli
call
js
nop
lock
cmp
mov
fistl
pop
xchg
jle
adc
test
xor
mov
les
iret
fidivl
xor
inc
or
rclb
pop
pop
inc
aas
xchg
dec
cmp
inc
jecxz
push
fs
sub
mov
jno
adc
xchg
xor
sub
sbb
negl
call
gs
sbb
cmp
mov
scas
aaa
xchg
jg
pop
cmpsl
mov
dec
jno
and
repz
push
pop
popa
pop
pop
pop
dec
add
sti
sbb
fsub
sub
xchg
mov
push
sbb
pop
insb
ljmp
out
mov
addl
cli
sbb
lret
outsl
and
jmp
bnd
stos
into
fs
insl
xchg
xor
jnp
mov
xchg
outsb
in
int
lret
cmpsl
mov
in
push
ja
inc
mov
jmp
iret
in
sub
subl
fcompl
rorl
adc
push
dec
enter
in
pop
mov
mov
js
iret
fisubrs
sbb
sbb
daa
int
inc
cli
scas
sbb
jge
sbb
sbb
repz
repnz
lods
notl
xchg
add
cmc
or
adc
mov
in
push
pop
xchg
test
add
ljmp
adc
push
sub
mov
stos
movsl
test
pusha
xchg
adc
and
aam
mov
mov
sbbb
shrl
arpl
shll
ret
outsb
inc
cmpsl
mov
lcall
add
fcmovbe
jbe
mov
mov
subb
jae
push
pop
or
pop
xlat
mov
push
sahf
push
sbb
addr16
rcll
xchg
fcompp
fdivl
out
rcrl
mov
popf
xchg
out
push
sbb
call
leave
lds
xor
and
ds
into
xchg
outsb
fs
or
xor
aam
sti
ficompl
mov
mov
xor
mov
popf
into
mov
sbb
and
and
xchg
sub
jp
mov
pop
dec
jg
sbb
sti
aad
xor
mov
jmp
push
pusha
xor
repnz
arpl
out
in
leave
mov
lods
pop
or
mov
jl
cs
and
mov
mov
pop
inc
add
mov
lods
push
mov
inc
xchg
add
sbb
jbe
cmp
lret
jns
mov
std
gs
int
push
push
test
xchg
jb
xor
sub
sbb
enter
or
imul
test
aas
inc
and
insl
in
mov
test
mov
ds
mov
cmp
cmc
sbb
cltd
in
add
popa
lret
cs
outsb
insl
scas
scas
push
and
bound
lods
xor
in
mulb
jg
sub
cli
sub
out
ds
fwait
aas
lods
or
or
adc
popa
mov
mov
scas
es
enter
dec
lret
mov
xor
mov
and
adc
push
jp
inc
test
fistpl
movsb
aam
adc
orb
add
shlb
jge
lret
cmc
ret
xor
jmp
pusha
pop
and
jnp
adc
jge
aam
or
sbb
push
inc
test
mov
js
jae
mov
aad
pop
add
xchg
and
mov
insl
rol
addb
xor
ret
jp
lahf
or
lods
inc
lds
insb
add
int3
pop
mov
and
pop
sbbl
mov
cmp
xchg
push
push
cwtl
aad
mov
clc
repz
pop
mov
sbb
lahf
cmp
add
mov
aas
leave
and
push
sub
mov
sbb
hlt
jecxz
push
adc
fcoml
data16
or
aad
push
stos
ret
enter
and
das
or
and
mov
adc
add
inc
dec
mov
dec
inc
mov
push
in
aad
xchg
std
sbb
jge
jno
and
adc
inc
jb
nop
and
mov
dec
ss
mov
push
sub
mov
cmpsb
jb
sub
mov
int
ds
cmpl
cmp
add
rcrb
fldcw
pop
mov
and
jbe
ds
sbb
mov
xlat
fnstenv
and
imul
arpl
hlt
inc
or
jle
mov
lahf
xchg
ret
sub
dec
jns
dec
test
mov
idiv
out
int
inc
sub
xorl
ljmp
inc
scas
out
aam
sbb
mov
mov
int3
addr16
xchg
xchg
loop
jo
imull
adc
sbb
cmp
xchg
pop
sahf
adc
jmp
mov
dec
inc
leave
pop
xchg
jno
push
movsb
pop
mov
lcall
mov
jno
mov
pop
sbb
ds
orl
sub
adc
lcall
shl
jns
push
call
push
inc
or
addr16
dec
jecxz
and
adc
dec
sbb
jns
mov
dec
xchg
mov
movsb
push
arpl
sti
inc
jnp
cmp
or
lahf
xor
pushf
daa
out
cli
mov
jns
push
and
fisttps
jnp
dec
mov
dec
pop
rcl
scas
add
ljmp
pop
and
inc
sub
dec
jmp
jb
hlt
or
rcrb
fisttpl
mov
sbb
lret
outsl
inc
push
add
std
xor
into
lds
mov
mov
sub
mov
adc
imul
xor
inc
pushf
jno
add
ret
mov
push
in
xchg
popa
xchg
jae
insl
mov
out
into
enter
add
cmpsb
lods
popa
adc
loopne
sbb
xlat
filds
jo
push
adc
xchg
xchg
fs
or
adc
sub
rcll
dec
push
jo
rcll
xcrypt-ecb
cmpsl
dec
xchg
andl
stos
add
sub
sub
dec
pop
lock
call
test
xor
lods
xchg
mov
vmovss
clc
inc
dec
xchg
dec
insl
cmp
jp
mov
pop
mov
std
jmp
std
and
pop
pop
hlt
neg
lock
mov
hlt
adc
cld
insb
lds
cld
cltd
sub
lods
rcll
mov
stos
mov
push
xor
jne
outsb
insl
movsb
aas
addr16
jbe
je
mov
rcrl
xor
fsts
xlat
mov
mov
je
mov
aas
je
repnz
cmp
adc
mov
cmp
pushf
or
ss
and
in
mov
outsl
mov
xor
sahf
lcall
lds
push
xor
lret
add
ds
mov
dec
enter
das
sbb
or
lret
pop
sbb
sub
xor
hlt
lret
fs
mov
and
pusha
xor
in
daa
pop
xor
sbb
mov
mov
pop
shr
sbb
xchg
or
push
in
cld
insb
or
lea
jge,pn
cmp
push
data16
pop
inc
int3
xchg
or
xchg
push
add
pop
pop
in
dec
test
push
std
das
jbe
add
loop
push
lret
jbe
loopne
mov
mov
xor
fwait
pop
pop
repnz
or
lds
cmp
jecxz
lock
mov
jb
imul
cmp
inc
shrl
push
gs
cmp
xchg
lods
mov
fsts
add
cwtl
stc
in
dec
lods
inc
sbbl
inc
push
cwtl
xor
popf
es
sub
adc
cmp
loop
mov
mov
push
sbb
lods
lods
cmp
adc
daa
or
shlb
jbe
or
jbe
push
sbb
adc
int
loope
sarb
add
push
cmpsb
xor
sbb
jg
jmp
sub
mov
sbb
and
sub
fwait
lds
in
push
sti
cmp
out
push
adc
lret
xor
mov
test
sahf
stos
sub
add
or
imul
gs
and
stos
loop
jecxz
push
cmp
out
pop
inc
stos
jle
pop
scas
mov
fisubrl
outsb
xchg
addr16
lcall
lret
adc
mulb
and
adc
aaa
push
cmp
mov
push
cwtl
stc
rcrb
jbe
add
test
nop
call
push
mov
add
add
sbb
and
sbb
mov
lcall
fsubrs
jo
movsl
adc
mov
inc
or
pop
ljmp
jg
push
mov
adc
hlt
js
jp
enter
jb
addr16
jmp
dec
and
aaa
clc
rorb
in
xchg
xchg
scas
imul
ljmp
xor
push
pop
rcrb
lds
addr16
or
ret
lds
xor
ss
sub
call
push
xchg
or
aaa
ficoms
xchg
mov
pop
push
jbe
sub
jne
lea
scas
mov
in
aad
ret
popf
mov
add
pop
mov
xor
rcrb
mov
jo
fwait
cmp
jnp
icebp
lcall
sub
stc
jnp
pushf
jae
scas
jl
cmc
fdivs
ret
clc
push
cs
pushf
cmp
xor
addr16
fwait
jmp
test
int
mov
ja
rcrl
sahf
addb
hlt
int3
sahf
lods
rclb
lds
test
fcmovnu
outsl
mov
mov
and
mov
push
lock
aad
and
cmp
mov
aaa
cltd
pop
or
ja
mov
out
movswl
dec
jge
test
xchg
es
xchg
lock
sub
hlt
dec
push
mov
mov
push
mov
pushf
sbb
sbb
scas
popa
or
mov
add
mov
sbbl
test
test
iret
add
xchg
iret
lret
nop
stc
mov
rolb
faddp
setl
sbb
insl
jne
adc
es
pop
leave
nop
add
out
ficomps
pop
out
and
test
iret
and
mov
mov
xchg
ret
out
xor
add
in
xor
icebp
jg
adc
push
notl
mov
jle
lea
test
das
fadd
in
ljmp
or
push
loopne
jns
inc
arpl
inc
int
dec
aas
mov
icebp
rcrl
loop
insl
or
sbb
xorb
mov
mov
mov
and
loop
jb
repnz
pop
jmp
hlt
movsl
mov
sub
aas
mov
mov
inc
shrl
sarb
js
int3
out
sti
pushf
push
int3
scas
add
lds
sub
mov
movsb
rcll
mov
stos
shrb
jno
xchg
nop
filds
inc
push
repz
inc
lds
arpl
loopne
ds
int
jle
and
fadds
or
jle
addb
lahf
stos
in
ja
mov
arpl
mov
sub
test
or
lcall
daa
cmp
out
inc
in
int3
pop
lret
ret
mov
inc
mov
fs
jbe
loop
sbb
inc
test
or
inc
adc
jp
cltd
roll
xchg
jmp
add
cmp
cltd
outsb
or
pop
pop
test
lock
or
cli
mov
nop
mov
cltd
add
and
pop
sbb
xor
jbe
and
mov
and
fisubrl
out
ret
mov
add
data16
xchg
cmp
push
mov
hlt
je
daa
imul
mov
jb
add
ret
adc
movsb
loope
xchg
jl
or
or
adc
inc
movsb
movsl
jae
push
push
inc
ror
outsl
push
mov
int
mov
pusha
jge
divb
fldcw
pop
push
push
mov
dec
pop
leave
arpl
iret
arpl
repnz
repz
jg
insl
divl
shr
push
cmpsl
or
cwtl
mov
ljmp
cwtl
and
sub
imul
aad
push
imul
jb
mov
in
sbb
or
test
ss
jle
mov
jo
setl
leave
pop
lret
inc
adc
or
lea
push
xchg
push
sbb
and
bound
sti
mov
lret
dec
sbb
cmp
dec
mov
inc
xchg
jb
incb
xchg
inc
jg
push
cmp
repz
enter
scas
in
imul
clc
mov
idiv
inc
pop
out
mov
cld
xor
in
jge
repz
sbb
mov
sbb
push
mov
xor
mov
mov
in
outsb
cmp
pop
dec
add
insl
mov
imul
xlat
lock
mov
test
push
cld
xchg
cmp
call
and
inc
xchg
push
inc
lahf
jb
loop
repnz
jmp
repz
sbb
fs
insb
add
sub
clc
push
mov
mov
mov
test
stc
fidivrl
aas
push
add
mov
mov
push
les
hlt
pop
cmp
and
popa
jno
stos
ret
sbb
rorl
add
push
push
loop
add
adc
pop
cmp
push
mov
popf
out
shrl
pop
popf
add
scas
ffreep
add
jle
jmp
insl
pop
cltd
lahf
mov
mov
lret
jg
pop
push
shrl
roll
mov
sub
mov
cmpsb
nop
ljmp
notb
jo
xor
mov
xchg
lds
or
mov
or
jle
arpl
pushf
vmread
sahf
aam
in
mov
cmpsb
push
mov
add
add
mov
pop
in
or
aad
cmp
xchg
mov
js
dec
negb
jle
xor
fdivr
sbb
jge
add
lods
imul
xchg
cltd
cmp
rcll
xor
into
sbb
xor
push
mov
cmp
stc
push
jecxz
xchg
std
out
cltd
xchg
add
push
push
mov
mov
mov
push
lahf
iret
sahf
lcall
mov
ljmp
lret
test
lret
dec
xchg
mov
fsubrs
aaa
dec
imul
xchg
and
cwtl
xor
stos
insl
inc
cmp
xor
sbb
pop
xor
sub
mov
lea
add
jp
rorl
lods
jg
mov
fnstenv
mov
mov
jbe
xchg
nop
imul
pop
mov
mov
xor
cmc
test
fnstcw
shll
pop
jnp
flds
push
push
mov
dec
adc
inc
adc
add
pop
adc
dec
mov
lret
mov
adc
loope
jp
out
ljmp
xor
or
pop
shrb
cltd
pop
cmp
dec
and
lock
fs
pop
push
mov
std
js
iret
fwait
xor
mov
mov
orl
add
addr16
xor
sbb
arpl
cld
pop
dec
fistl
pop
movsl
pop
cltd
inc
test
or
jo
mov
testb
pop
lret
lds
cwtl
testb
lahf
sub
lock
lea
mov
in
cltd
sbb
imul
out
inc
fildl
nop
adc
push
cmp
or
popa
push
imul
test
adcb
fbld
xchg
add
push
ret
ja
sbb
sub
fs
and
das
cld
outsl
or
adc
jmp
outsl
call
adc
mov
cmc
mov
mov
popa
push
ljmp
xchg
sub
jne
jmp
mov
pop
lods
idivb
adc
cld
pop
pop
in
pop
hlt
bound
pop
mov
daa
xchg
in
mov
xor
sub
push
testl
cli
dec
imul
add
pop
jge
nop
sbbl
into
mov
mov
int
divl
cs
int
xor
mov
ficomps
sub
out
dec
add
stos
addr16
andb
loope
rclb
jbe
jo
shl
nop
sub
psrad
xlat
sub
cmpsl
adc
stos
lods
test
sub
loopne
js
cmc
rol
mov
and
sub
movsb
xchg
nop
mov
mov
and
dec
cli
cmc
inc
out
fisubl
cld
cmp
push
xlat
fmuls
mov
lcall
es
out
sbb
clc
bound
jbe
mov
cmp
pop
push
into
and
mov
out
repnz
mov
jl
adc
gs
lcall
repz
mov
jge
xchg
fimuls
pop
out
clc
dec
or
idivb
sbb
fistps
mov
and
pop
testb
pop
push
clc
aad
adc
arpl
pop
jne
mov
and
sub
cmp
je
imul
shrl
iret
mov
jecxz
pop
mov
xchg
repz
xchg
dec
and
dec
es
subl
int
daa
dec
es
addr16
psrlw
dec
bound
add
jmp
mov
jg
fcoms
iret
mov
mov
dec
inc
adc
push
sub
adc
insb
ss
clc
iret
mov
cmp
rclb
adc
daa
out
xchg
iret
dec
sub
lods
xchg
dec
scas
push
jp
fcompl
push
jg
in
outsl
cwtl
jo
in
lds
push
je
mov
push
sbb
adc
pop
and
movsb
xchg
loop
push
push
xor
bound
data16
push
pop
pushf
stos
pop
and
mov
ret
int
insb
mov
daa
jge
xrelease
pop
mov
jle
lahf
pop
dec
xor
nop
lds
cmp
sti
and
outsl
pop
cmp
ss
cmc
and
and
daa
xor
nop
test
mov
cltd
or
adc
jge,pn
in
daa
adc
xchg
sbb
pop
in
mov
mov
loopne
lahf
or
pop
cmc
dec
rol
push
mov
in
sbb
and
dec
dec
dec
ja
jno
cmc
add
add
sbb
push
jnp
je
push
jne
mov
mov
movsl
xor
mov
idivb
xor
mov
xor
cmp
adc
sbb
or
or
adc
add
bound
pop
jb
dec
push
pop
jg
sti
movsb
dec
and
ljmp
cmp
popa
push
jns
adc
fnstsw
fstpl
inc
out
jmp
mov
jl
and
xchg
push
or
sub
push
enter
fisttpl
or
mov
add
repnz
sahf
dec
sub
jo
and
xchg
data16
sahf
jp
loope
je
pop
dec
sbb
pop
dec
adc
cltd
nop
mov
test
jmp
mov
int3
shrl
lods
jmp
cld
in
js
adc
orl
or
addb
les
lahf
jb
mov
push
rcll
mov
mov
xchg
aam
jno
cmp
sbb
push
faddl
push
scas
and
lret
out
out
cmp
inc
push
push
cmpsb
loop
icebp
add
daa
sbb
push
mov
movsb
inc
xlat
pusha
cmpsb
jb
push
cli
jb
stos
pop
push
adc
cld
mov
and
jmp
dec
insb
hlt
test
push
adc
push
add
xchg
repnz
dec
pop
je
ret
lcall
xor
mov
jmp
pop
pushf
pusha
pushf
mov
mov
inc
inc
xorb
enter
movsl
ucomiss
loopne
cwtl
sarb
jo
cmp
sbb
pop
xor
jp
aad
movsb
dec
fnstsw
int3
push
shr
sub
dec
sar
lcall
sub
cmp
mov
mov
mov
pop
in
dec
divl
cmp
in
cwtl
into
adc
mov
pop
aaa
adc
add
sbb
add
mov
mov
sbb
fwait
jmp
ja
pop
into
lods
xchg
or
mov
xor
xchg
jae
test
inc
into
into
dec
inc
adc
inc
push
xorl
cmp
faddl
pop
pop
mov
ss
and
mov
popa
es
or
inc
out
jbe
push
mov
mov
orb
lret
jne
jl
lahf
imul
fwait
pop
push
fsubl
ljmp
insb
in
scas
add
mov
cmpsl
call
dec
add
bound
mov
loop
dec
repnz
push
addr16
xchg
sbb
and
fwait
adc
cmpsl
mov
scas
add
inc
sbb
sbb
jmp
loop
lods
and
call
fnstcw
cmp
out
mov
mov
cmp
stc
pop
icebp
int3
dec
adcl
mov
in
fwait
pop
aaa
frstor
shrb
out
cmp
mov
iret
xchg
push
mov
mov
clc
out
jmp
fs
fnsave
in
sub
sub
leave
test
dec
sar
or
jmp
ljmp
mov
cwtl
insl
mov
les
sbb
sub
nop
les
rcl
push
sbb
inc
aad
hlt
push
push
mov
popa
mov
xor
gs
dec
lds
stc
popa
jle
jns
push
inc
rcll
push
xchg
rcll
hlt
sahf
fisubl
adc
inc
ds
aad
std
iret
into
scas
mov
lods
inc
inc
pop
inc
jp
jl
inc
and
jno
jne
push
repz
add
daa
mov
cmp
hlt
cmp
dec
mov
outsb
mov
sti
lahf
ffreep
ja
xor
subb
insl
fwait
xchg
or
mov
fnstcw
aas
aad
xlat
movl
call
cmp
add
repnz
out
push
out
sti
pop
adc
aaa
pop
rorl
sub
adc
out
lock
cmc
pop
sarb
or
fcoms
add
loop
mov
mov
or
sub
add
scas
movsb
jg
xlat
dec
push
xchg
mov
push
mov
fwait
push
fisttpll
cltd
sbb
arpl
xchg
repz
sbb
mov
xchg
push
mov
aam
or
jne
test
sbb
pop
lret
lret
lods
test
out
scas
je
ret
in
add
sbb
rcll
dec
pop
mov
call
lods
mov
lahf
and
imulb
jle
mov
js,pt
cli
bound
or
fldenv
pop
mov
inc
dec
mov
dec
les
addl
push
shlb
into
sarb
bound
lret
adc
fs
and
fcom
dec
dec
adc
loope
mov
sarb
xor
daa
stc
pop
testl
sub
bound
aad
scas
enter
and
xchg
xchg
sbb
cltd
mov
sbb
adc
test
testl
sub
or
mov
sub
cld
sbb
bnd
dec
outsb
xor
or
sbb
lcall
mov
jmp
es
jmp
aad
std
or
xor
outsl
cld
sbb
std
leave
push
das
or
out
xor
push
mov
test
and
push
js
xlat
and
mov
push
dec
dec
pop
sbb
mov
insb
sbbb
or
dec
lock
movsb
pop
in
fisttps
test
imull
ret
subl
shr
push
imul
jmp
dec
sbb
lea
shl
das
dec
decb
pop
das
mov
sbb
xor
dec
iretw
cwtl
aas
mov
lods
stos
orb
jg
fs
mov
push
rorl
ds
imul
push
mov
adc
adc
xor
loope
sub
divb
les
adc
adc
aam
bnd
nop
fs
jp
dec
jbe
mov
sbb
cltd
adc
daa
pop
xor
mov
sti
cmc
std
repnz
xor
pop
or
int3
pop
outsl
test
xlat
and
pushf
lods
fcomip
adc
inc
scas
mov
fsubs
out
inc
cmp
mov
xchg
adc
ja
push
push
out
lods
mov
clc
mov
mov
mov
pop
push
inc
xchg
scas
movsb
sahf
test
xchg
and
sbb
and
sbb
loope
sahf
iret
push
sub
mov
and
xchg
sbb
test
push
and
fstpt
mov
and
adc
call
ret
std
push
push
inc
adc
jbe
jp
addr16
cmc
test
mov
arpl
push
cmp
mov
imul
pop
or
lods
mov
in
stc
cmpl
dec
and
push
mov
jne
fsubl
pushf
jbe
inc
cmp
push
inc
addr16
xor
sbb
hlt
arpl
out
mov
test
rclb
bound
cwtl
jbe
mov
jns
mov
lods
xchg
xchg
nop
fwait
push
les
lds
bound
cld
mov
lods
inc
jno
daa
pop
dec
enter
icebp
das
sti
lea
pop
xchg
add
xchg
insl
stos
dec
sbb
cmp
int3
loopne
scas
ljmp
and
add
repz
popf
cld
movsb
ret
mov
mov
add
hlt
lods
nop
pop
aaa
daa
dec
pop
arpl
inc
mov
or
xchg
mov
fcoms
popf
ljmp
jge
cmp
jle
sbb
add
ja
cmc
test
repz
or
jg
mov
lahf
stos
push
jp
sti
inc
pop
add
sti
and
mov
popa
add
clc
and
fs
sub
sub
mov
mov
cmp
sub
movsb
insb
loopne
lret
sbb
jmp
push
xchg
jb
inc
adc
mov
in
dec
dec
ljmp
cmpb
sub
andb
lret
xor
mov
pusha
jne
cs
cli
loop
popa
iret
push
sbb
inc
insb
mov
fisubs
sbb
shl
out
xor
mov
add
add
xchg
leave
xor
lret
or
jno
outsb
popf
std
das
jecxz
loopne
or
nop
pop
pop
or
add
sbb
iret
lret
mov
pop
mov
movb
push
add
je
call
mov
pop
mov
jbe
cmp
xchg
jmp
xchg
addr16
icebp
les
cmpsb
cmp
xchg
cltd
mov
mov
les
inc
mov
imul
sbb
and
adc
mov
bound
sub
addb
sbb
sbb
and
mov
mov
cld
mov
arpl
insl
xor
push
cld
cmpsl
xchg
push
into
notl
mov
cmp
xor
repnz
jmp
mov
push
jne
inc
xor
mov
js
xchg
sbb
xchg
push
xchg
out
or
mov
aas
sbb
jmp
in
push
and
mov
addr16
mov
or
mov
or
shrb
int
inc
mov
lods
xor
outsb
xchg
xor
pop
stos
xchg
test
dec
ret
mov
inc
xor
inc
jnp
inc
xor
outsl
test
sti
icebp
out
push
lret
jns
imul
subb
sub
data16
daa
and
es
mov
push
je
stos
mov
mov
jae
shr
fnstenv
sub
adcl
test
daa
into
cmc
mov
mov
push
pop
xchg
lret
push
call
rclb
sahf
sbb
outsb
xchg
shrb
jo
push
inc
mov
out
sub
xchg
roll
cmp
enter
jno
in
insl
sub
std
adc
fwait
pcmpgtw
pop
int
cld
mov
lret
test
je
adc
int3
pop
xlat
fisubl
stos
jmp
xchg
adc
push
loopne
test
pop
cmpsb
notl
int3
dec
mov
jnp
repz
xlat
xor
or
xchg
and
pusha
add
pop
aaa
push
in
pop
ljmp
fsubs
adc
dec
repnz
adc
xchg
or
lock
push
push
sbb
push
mov
and
nop
inc
mov
or
into
call
xchg
xchg
cmpsl
or
and
mov
fabs
shll
dec
or
movsl
mov
xchg
lcall
imul
enter
test
lods
lock
jle
fnsave
dec
or
cmpsl
ljmp
mov
push
jmp
mov
xlat
arpl
xchg
cltd
out
outsl
lret
loop
lods
sub
popf
mov
icebp
pop
push
lods
das
sub
sub
aaa
gs
cld
xchg
sub
xlat
shrl
sahf
push
mov
mov
jecxz
loope
cmp
hlt
push
data16
xor
adc
imul
xor
add
ja
out
cmp
push
sub
int3
outsb
test
pop
mov
out
lds
xor
punpckhbw
push
mov
stos
mov
pop
jns
aam
cmp
sub
mov
sub
cld
adc
lret
cmp
fdivrs
add
adc
daa
cs
iret
call
sub
cld
aam
pop
lods
lcall
mov
mov
fidivrs
xor
adc
inc
dec
mov
mov
popl
add
mov
divl
mov
jae
repnz
je
pop
les
idivb
add
cld
adc
sub
scas
dec
inc
outsb
cmp
ret
add
dec
fsubl
cmpsb
jne
push
stos
imul
adc
ja
mov
xchg
daa
push
adc
lret
mov
out
mov
sbb
xchg
mov
aaa
mov
arpl
dec
fisubs
jl
cmp
lahf
adc
clc
jge
repz
mov
or
sbb
es
sahf
mov
adc
std
cmpsl
sti
push
mov
imul
cwtl
popf
pop
lret
and
aaa
mov
fistpl
js
rcrl
testl
xchg
push
inc
repnz
push
fdivrl
sarl
stos
shll
outsb
mov
mov
push
ds
loope
jp
cmp
and
jmp
sbb
lahf
jp
add
sti
sbb
xor
fs
addr16
stos
lahf
jp
mov
test
lock
test
adc
sub
sbbb
jmp
push
sub
fsts
aam
data16
mov
sti
jmp
pop
xchg
ljmp
jl
jmp
sub
mov
jp
sahf
daa
fnstcw
shrb
lcall
test
dec
orb
mov
cld
in
popf
call
pusha
mov
movsb
jns
shrl
cmp
push
mov
sbb
mov
mov
in
subl
xchg
pop
mov
cmpsl
outsb
loope
shl
stos
lea
mov
jno
cli
rolb
cmp
push
les
cmp
cwtl
arpl
xchg
dec
cmp
jmp
dec
mov
mov
mov
call
xor
push
cmpsb
inc
loope
in
lock
fists
cwtl
call
and
sbb
xchg
xchg
mull
test
xor
xor
jle
mov
cmp
loop
push
dec
push
in
push
sub
cmp
movsl
jns
dec
cmp
das
decb
push
loope
pop
pop
in
lahf
xchg
inc
mov
mov
loope
lahf
mov
dec
dec
clc
gs
fiadds
push
mov
or
push
and
jno
xchg
jbe
cmp
push
xchg
jmp
mov
je
jecxz
lock
jno
jo
arpl
cmp
xchg
lret
subb
shlb
imul
adc
push
inc
aam
jb
xlat
addr16
mov
movsb
rcrb
roll
push
mov
inc
cmp
push
shlb
stos
xchg
jb
in
mov
dec
imul
and
arpl
scas
lcall
popa
fistpl
xchg
cmp
push
bound
lret
sbb
or
mov
cmp
jp
mov
ficomps
cmpsl
je
es
xchg
adc
push
inc
xchg
icebp
shrl
pusha
aad
mov
out
icebp
sbb
inc
test
test
call
out
test
nop
dec
stc
mov
fdivrp
fs
ljmp
xor
jle
inc
xlat
test
fiaddl
or
cmp
es
iret
popa
dec
sbb
mov
cmp
jo
cmp
sbb
pop
pop
in
insb
sbbl
push
iret
movl
loop
add
jb
div
test
cmp
sub
mov
pop
ret
out
inc
xchg
and
movsb
out
cmp
xor
inc
sub
nop
inc
movsb
or
cmp
or
popf
js
mov
mov
mov
xchg
gs
mov
cmp
stos
add
and
shlb
fwait
nop
xchg
jle
mov
imul
decb
lods
idiv
inc
mov
hlt
les
jnp
filds
lret
aaa
out
stc
stc
xor
test
int
stos
shlb
adc
inc
andl
push
and
fidivs
xchg
mov
jno
outsl
ss
imul
mov
iret
or
in
stos
sub
and
lock
cwtl
adc
into
jne
mov
mov
vpcmpgtd
stos
sbb
mov
jmp
shl
fsub
xchg
pop
push
mov
pop
roll
and
jnp
cld
adc
shlb
shlb
jmp
or
in
arpl
inc
jae
icebp
cmp
inc
lods
mov
cmp
add
outsl
sbb
out
jbe
nop
stc
lods
lods
movsl
outsl
clc
push
pop
xchg
mov
ja
loope
jo
rcll
arpl
xchg
push
fwait
pop
rcr
sbb
leave
outsb
js
mov
push
rol
inc
sbb
sub
jbe
fsts
pop
xorl
cmp
and
push
push
iret
mov
cmp
fstps
or
xor
shlb
loopne
std
jp
xchg
inc
jl
les
xchg
adc
rcrb
lahf
cmpsl
scas
ret
jp
xor
pop
cltd
mov
lock
dec
push
inc
dec
mov
outsl
mov
or
cwtl
mov
pop
sub
fstl
dec
in
dec
sti
xchg
mov
js
cmp
ficoml
inc
std
in
arpl
int3
mov
lcall
cld
into
mov
sti
ss
push
lahf
push
cld
fisubrl
adc
push
push
stc
push
or
or
fisttps
fwait
xchg
cmp
xchg
shll
fstpt
cmp
xchg
mov
call
pop
fildll
sahf
sbb
lods
jl
call
clc
or
dec
mov
pop
ljmp
push
movsb
loop
lret
sub
cld
movsb
sub
add
inc
add
jg
ret
jne
pop
xchg
mov
mov
xchg
xor
test
les
addr16
aas
or
mov
and
push
cmpb
xrelease
rolb
sub
jae
inc
aam
add
push
xor
aad
loopne
dec
or
dec
rol
mov
cmpb
pop
adc
ss
mov
mov
xor
and
pushf
adc
xchg
xchg
cmp
sarl
pop
mov
xor
sub
daa
mov
adcl
clc
and
orl
fistpl
adc
jne
je
jbe
jne
pop
mov
dec
jno
pop
cmp
aas
shlb
sahf
xor
jle
lahf
jb
mov
mov
in
adcb
pop
fwait
mov
pop
xchg
jp
adc
xchg
enter
push
mov
lcall
mov
inc
insb
insl
mov
pop
fdivp
lea
mov
push
mov
jmp
push
cmp
jbe
jecxz
push
call
loopne
popf
pop
lahf
mov
xchg
lahf
jae
mov
rcll
xor
test
neg
mov
repz
sub
outsb
cmpsl
les
lcall
bound
or
mov
add
jno
out
pop
cmp
mov
inc
ret
scas
mov
xchg
inc
imul
mov
test
jg
ficoms
es
xchg
dec
pop
lock
cmp
ficompl
or
int
mov
pop
cmc
adc
jns
and
inc
pop
repnz
shrl
adc
mov
addr16
add
dec
jae
call
sbb
mov
incb
mov
or
jg
push
mov
xchg
std
aas
add
jno
mov
inc
xor
gs
xor
mov
xchg
flds
les
add
push
loop
xchg
fwait
jnp
add
inc
push
addr16
xor
ret
dec
pop
dec
dec
mov
out
sbb
jecxz
and
cmpsb
in
das
outsl
xor
inc
cmp
mov
pop
push
sub
jnp
fdivl
inc
or
fidivl
out
mov
xchg
movl
xchg
dec
push
lcall
rcll
rol
jl
adc
ds
cmp
jp
mov
imul
fistpl
cmp
outsb
ret
fwait
in
out
pop
stos
cmp
inc
rorb
mov
push
and
pop
or
lcall
or
add
nop
addr16
insl
lds
test
sbb
in
add
pop
mov
cmp
sub
ja
mov
push
mov
test
movsl
or
xor
or
aas
in
into
into
sti
je
or
jbe
aam
inc
dec
sbb
or
push
push
popf
sbb
es
imul
mov
std
adc
push
sub
cmp
scas
pop
and
sub
xchg
adc
dec
xchg
and
rcl
cmp
out
xor
out
adc
mov
andb
or
cmp
les
sub
cli
add
stos
hlt
xchg
test
mov
xor
into
adc
dec
icebp
bound
pop
inc
pop
mov
jmp
mov
lret
add
xchg
out
mov
xchg
and
push
push
movsb
cmp
sarb
scas
sbb
ja
rcrb
sbbb
and
fcompl
daa
cli
mov
cmc
jo
testb
jle
jbe
mov
pop
push
jle
iret
or
sahf
lret
pop
loope
jp
mov
and
sub
xchg
es
or
loop
out
ficomps
adc
sub
loope
mov
pushf
es
fistpl
push
insb
pop
and
inc
maxps
ljmp
mov
adc
mov
pop
cmp
stos
jb
mov
pop
inc
test
add
adc
rcrl
sarb
jne
mov
jp
or
jge
mov
push
cmc
sbb
addr16
aas
fisubrl
xchg
xor
add
cmp
push
jge
sti
mov
adc
mov
push
nop
in
fnstcw
jecxz
fisubs
mov
addl
std
lea
shlb
shll
insl
xchg
push
shr
mov
xchg
imul
push
jo
sbb
push
mov
sbb
sub
and
inc
rorl
inc
cld
dec
add
popf
fimull
lock
int
inc
iret
add
addb
insb
ss
data16
cmp
in
movsb
ja
cmp
lea
xchg
mov
sub
out
inc
or
and
test
aas
add
call
je
adc
movsb
cmpsb
sbb
test
dec
cld
mov
arpl
pop
add
popa
insl
cmp
insb
test
xorl
aaa
pop
ljmp
adc
mov
mov
dec
sub
dec
nop
push
shlb
cmpsl
mov
xchg
sub
testb
imulb
add
mov
cmp
das
mov
inc
mov
sbb
into
xchg
lock
push
mov
add
cmc
and
dec
pop
stos
loop
xchg
ret
cmp
aaa
adc
call
xor
cmp
xchg
sub
jne
lahf
mov
mov
inc
loope
pop
roll
xchg
inc
sub
test
inc
pop
inc
pop
mov
xchg
sbb
xor
rcr
cmp
push
pushf
movb
jmp
jns
add
inc
pop
rcll
out
lea
jg
push
xchg
dec
test
enter
pop
loope
cmpsl
idivb
sub
mov
mov
adc
nop
scas
imul
xor
fists
xor
bound
shl
dec
pop
mov
pop
fwait
jg
daa
mov
insl
pop
xor
mov
xorl
or
mov
andb
or
push
orl
cwtl
adc
mov
repnz
mov
stc
mov
jge
inc
shr
pop
jecxz
stos
inc
and
xlat
jno
mov
enter
push
jne
mov
test
mov
ficoml
fnstsw
out
lods
push
movsl
arpl
nop
lods
cmpsl
and
subl
aam
adc
icebp
sub
roll
mov
inc
cwtl
jmp
inc
pop
icebp
out
cmpsl
pop
loop
fimull
push
int
arpl
pop
dec
daa
mov
popf
sbb
cmp
sbb
cmpb
mull
in
mov
and
dec
cmpsl
jl
and
pusha
fsubs
cwtl
or
in
push
mov
bound
vmovntps
je
test
pop
push
movsl
dec
sub
xor
push
mov
pop
mov
cmc
out
cmpsl
mov
loope
cmc
sbb
addb
fidivrl
dec
sbb
push
inc
mov
or
cmp
repz
data16
repnz
fidivs
sbb
pop
lds
mov
mov
and
out
lock
aas
or
jmp
aam
and
hlt
int
xchg
sub
dec
xchg
scas
hlt
inc
adc
inc
cmp
mov
imul
mov
xchg
inc
rcl
lahf
rorb
inc
cli
sub
jbe
imul
mov
ljmp
sub
xor
lds
lea
and
in
sub
aaa
sub
test
stos
cmpsl
push
ret
mov
inc
xor
inc
push
lea
pop
sub
add
cmp
sbb
jns
cmp
mov
mov
movsl
or
inc
or
shrb
mov
xchg
or
out
rol
mov
shll
out
sub
inc
out
xchg
rorl
fimull
jne
sbb
rcrl
jp
jae
cmp
lret
xchg
xor
dec
sub
sbb
xor
adc
xor
or
push
dec
ja
popf
nop
add
and
cld
jge
in
dec
sti
lret
lods
xor
or
mov
imulb
fists
cmp
dec
popw
push
repz
lods
xor
bound
test
sbb
fwait
push
outsb
and
roll
fidivl
insl
std
mov
rcll
jb
call
xchg
sbb
test
fistpll
xchg
pop
icebp
cwtl
inc
pop
divl
sub
subl
scas
and
insb
sub
lods
mov
sub
fnstsw
sar
insb
insb
push
xor
iret
xchg
in
fidivl
add
sbb
cmpsb
aad
mov
jno
pusha
sbb
ret
mov
push
pop
inc
pushf
mov
pop
testb
jge
and
dec
mov
shl
mov
xor
in
push
inc
sbb
aad
push
aam
rolw
outsb
sub
jno
mov
iret
cltd
cmpl
test
adc
clc
pusha
mov
aam
dec
stos
fs
sub
sar
data16
in
adc
pop
push
mov
js
dec
mov
sbb
andb
jns
into
lret
xchg
pop
fs
enter
popa
mov
lahf
je
mov
jg
pop
lock
mov
mov
subb
mov
dec
inc
mov
mov
inc
dec
add
xchg
mov
push
arpl
adc
stos
mov
sub
mov
dec
in
add
mov
xor
sti
call
bnd
clc
push
mov
jmp
inc
mov
push
add
cmp
addr16
and
ds
sub
or
add
push
lds
sahf
pop
out
cmp
dec
out
pop
dec
ljmp
jno
cmp
in
mov
lea
pop
inc
inc
pcmpgtd
pop
cmp
jbe
pop
xchg
mov
aaa
sub
xor
sub
aaa
and
mov
pop
sbb
out
cmpsb
mov
js
sub
mov
sbb
dec
or
fcompl
mov
into
fcoml
push
dec
loopne
sub
push
andl
mov
push
push
data16
out
rcl
daa
loope
push
cli
mov
dec
sysexit
outsb
addr16
cmp
stc
leave
sbb
popl
jmp
in
or
mov
loopne
popf
sahf
gs
add
mov
sub
popf
mov
loopne
in
mov
data16
mov
pushf
sbb
shrb
test
mov
and
push
mov
test
rcr
lods
push
pushl
mov
xor
pop
jp
mov
mov
decb
stos
in
mull
iret
lods
mov
shlb
sub
adc
cs
aam
outsl
orl
jmp
lret
ret
les
lds
sahf
mov
dec
cwtl
xchg
lret
jae
and
sub
jle
insl
or
cli
mov
mov
or
cmc
dec
lret
stos
push
and
and
push
mov
jns
cld
pop
sbb
imul
notl
fisubrs
cmp
addr16
rolb
xor
in
mov
mov
jmp
pop
popa
fistl
mov
push
cld
divl
sub
repnz
aas
shll
clc
daa
jbe
xor
jmp
dec
js
inc
push
imulb
movsb
mov
int
pushf
cmp
jmp
xor
sub
xor
cmp
stos
sbb
jp
fisttpl
popa
notb
cmp
insb
add
mov
sub
mov
dec
mov
cmp
pop
incl
or
gs
addr16
and
mov
cli
mov
data16
stos
add
cwtl
push
shr
and
xorb
mov
in
mov
movsb
movsb
sub
sbb
addr16
sbb
lret
adc
repnz
shl
addr16
rdtsc
stos
decb
xchg
push
push
rorb
mov
ss
xchg
adc
mov
ja
imul
lea
or
frstor
xchg
lea
mov
and
cltd
es
add
jp
rorb
inc
loop
or
std
cmpsb
xor
test
pop
mov
mov
popf
push
ss
fstp
hlt
or
ds
imul
xchg
pop
mov
sbb
jns
test
cmc
jg
inc
out
fs
fwait
sub
add
pop
xchg
loopne
xor
lret
lcall
pmulhuw
push
lcall
pop
aas
xor
aaa
lahf
movsb
pop
iret
lcall
push
mov
jbe
rcrb
shl
inc
pop
inc
mov
or
jecxz
subl
lcall
mov
add
popa
sub
notb
push
outsl
lock
xchg
push
jmp
xor
jg
cmp
ret
mov
pop
stos
js
dec
lcall
jnp
sbb
pop
test
push
adc
sub
mov
lret
mov
xlat
sub
adc
mov
or
cmc
mov
cmp
inc
cmp
push
pusha
jb
lea
subb
call
ja
push
jnp
sbb
data16
dec
lret
test
loope
mov
dec
andb
hlt
adc
imul
jno
jecxz
loopne
pop
mov
stc
xchg
xchg
pop
jne
std
inc
jo
push
dec
xor
arpl
push
add
repz
subb
inc
leave
sub
mov
cltd
lret
nop
gs
cmpsl
dec
imul
or
aas
xchg
push
mov
scas
dec
xchg
sub
out
mov
cmp
mov
jae
push
subb
test
sub
out
out
mov
fistps
fildll
jae
xor
out
push
out
xchg
dec
mov
pushf
dec
fs
outsl
or
fsubr
xchg
in
lret
mov
pop
les
sbb
inc
mov
inc
jbe
or
notl
push
mov
xor
enter
xchg
outsb
inc
xchg
mov
pushf
in
scas
iret
or
adc
jl
mov
mov
in
pop
inc
mov
jnp
or
xor
jo
xchg
int
sbb
out
imul
add
or
or
hlt
jb
notl
xor
sub
call
out
adc
adc
pop
arpl
es
mov
int
andb
push
push
repnz
adc
inc
aam
lds
mov
mov
xor
fisubrs
xor
cwtl
shrl
popl
das
mov
cli
testb
lods
int
push
mov
or
aad
js
sti
and
movsl
xor
xchg
rclb
or
into
pusha
inc
xor
and
call
into
sarb
aaa
mov
fisttpll
mov
pop
pushf
into
xor
or
iret
sbb
nop
js
mov
add
pop
vcvtdq2ps
cli
jl
push
mov
add
mov
and
inc
cs
pop
insl
push
divl
jne
xchg
leave
je
jmp
test
mov
test
sbb
mov
cmp
ds
cli
mov
cmp
mov
jg
pushf
scas
mov
out
jo
adc
dec
jmp
orl
mov
aas
push
or
scas
sbb
pop
inc
clc
jns
xchg
xchg
lcall
int
icebp
mov
std
sbb
or
jp
mov
fsts
mov
pop
cmpl
pop
adc
push
lcall
js
dec
pop
ret
sbb
push
js
shl
xor
ret
push
mov
xchg
pop
jns
mov
outsl
dec
jns
mov
fsubl
jae
add
pop
lret
jge
mov
inc
mov
pop
or
or
cmp
inc
push
cld
jae
pop
cmp
pushl
xchg
lret
sti
sahf
lods
jb
int
xchg
ss
loop
std
iret
mov
push
inc
repz
xchg
inc
mov
xlat
imul
sub
and
push
or
fmull
bound
jo
sahf
cmp
je
psllw
mov
push
popf
or
std
jbe
out
roll
mov
insb
popa
lds
jne
mov
aas
and
sbb
negb
mov
repz
aaa
dec
filds
test
lahf
jnp,pn
pushf
cmpsl
inc
js
mov
pushf
push
mov
test
std
push
ljmp
adc
inc
add
insb
pop
pop
inc
jmp
and
fdivrl
mov
out
pop
lods
incb
push
inc
adc
das
xor
sub
int
bnd
or
xchg
imul
int3
test
sub
sub
cmp
add
jp
jge
cmpl
mov
mov
repnz
rolb
xchg
lahf
xchg
arpl
jns
sub
test
mov
in
jp
call
jecxz
jmp
imul
push
aad
ret
cmc
je
lock
add
cmp
adcl
sti
mov
std
popa
in
mov
out
jp
mov
xchg
and
sbb
dec
pop
cmp
aad
adc
ret
lcall
inc
dec
orb
jbe
mov
dec
data16
cwtl
xchg
dec
fstl
imul
sub
push
test
ficoml
xor
cmp
dec
mov
aam
into
push
imul
jno
cmp
insl
push
push
xor
or
out
or
xor
cld
cs
stc
mov
mov
loop
lods
fistpll
cmp
es
andnps
jmp
xchg
je
push
dec
push
xchg
shl
pop
pop
pushf
dec
pusha
cmp
jnp
pop
mov
push
imul
in
xchg
pop
push
insl
sbb
push
cmp
icebp
rclb
add
or
jecxz
mov
add
xchg
repz
enter
pop
add
add
mov
sub
fs
lea
add
mov
fadd
in
xlat
add
fstl
sbb
bound
inc
mov
xchg
sbb
int
std
jbe
adc
adc
inc
test
xchg
mov
jnp
jne
stc
mov
rclb
movaps
push
xor
data16
fsubl
into
add
iret
enter
insb
adc
jg
cltd
sub
rcrb
in
clc
pop
cmp
cld
jnp
dec
negb
aas
cmp
pop
lock
fldl
repnz
jno
nop
push
fimull
push
lahf
idivl
cli
add
push
inc
xchg
sub
mov
outsl
movsl
out
push
mov
pop
scas
lods
rcrb
lds
and
push
sbb
or
mov
jecxz
inc
mov
ja
pushf
sbb
shll
jb
xchg
xor
test
cwtl
aas
jbe
inc
and
xchg
xchg
leave
jno
sub
int3
sti
mov
jge
mov
loope
mov
jae
ret
or
loop
or
movsl
imull
shlb
ss
outsb
rcrl
dec
push
jo
nop
add
stc
arpl
in
iret
and
lods
adc
dec
jno
mov
andb
push
addl
cmp
push
in
pop
jne
dec
cmp
inc
or
in
shrb
int3
push
jecxz
mov
or
test
pop
fldt
pop
sbbb
cmp
push
fidivrl
cs
mov
adc
push
cmp
pop
pop
fnsave
mov
inc
cmpsb
or
add
sarl
mov
fidivl
out
jp
push
mov
aad
test
cmc
loop
clc
dec
fidivs
mov
fs
push
movsb
pop
pop
add
mov
mov
jne
jle
push
jl
jp
or
hlt
pop
in
stc
outsl
cmp
movsb
movsl
push
lods
xor
sbb
inc
cmp
shll
jmp
add
icebp
pop
movsb
fisubs
popa
mov
add
xchg
hlt
iret
mov
cld
sub
adc
divl
fwait
xor
jae
xor
xorb
add
mov
jne
mov
stos
mov
lock
sti
mov
fs
int
sbb
inc
out
add
ljmp
repnz
fidivs
not
lret
jb
int
outsl
mov
std
mov
xor
imul
sub
clc
sahf
mov
idivb
fidivrl
jnp
inc
and
mov
int
es
sub
sub
pop
aam
push
mov
fnstcw
ljmp
pusha
push
dec
sub
xor
subb
fs
mov
push
clc
scas
add
arpl
out
out
mov
mov
and
jbe
adc
and
cmc
lock
jbe
dec
add
nop
add
cmp
cmpsb
leave
stos
pop
std
dec
adc
mov
mov
xor
add
jae
es
mov
cmpb
insl
inc
inc
and
lret
jne
jno
pusha
sub
dec
mov
shll
sub
fwait
pop
test
and
jmp
or
mov
mov
pop
mov
mov
xor
mov
test
inc
xor
stos
fcoms
test
push
in
cmp
jns
pop
or
aam
ds
stos
inc
lahf
dec
pop
test
cmp
mov
daa
iret
sbb
in
xlat
xor
jno
ds
pop
std
push
dec
loope
in
inc
jo
adc
mov
xlat
inc
adc
aad
add
push
popf
push
lret
xor
dec
into
inc
pop
pushl
cwtl
push
mov
sti
fucomp
mov
mov
dec
iret
int
test
dec
pop
inc
sbbl
push
dec
mov
add
push
push
sub
int
push
cmp
or
cli
xchg
insb
jb
mov
push
movsb
fldpi
cld
bnd
adc
jmp
push
cmp
push
xor
sbb
mov
jl
fucom
fidivl
and
fimuls
and
jp
mov
scas
push
pusha
in
addr16
xor
test
dec
dec
ret
mulb
add
jecxz
add
aaa
xchg
mov
mov
std
lea
aaa
inc
add
lret
sbb
mov
pop
push
rol
inc
std
mov
stc
and
lods
pop
jo
dec
jecxz
popf
mov
xchg
pop
dec
enter
movsb
out
sbb
xchg
adc
cmc
test
lahf
fildl
sub
pop
das
add
fildll
subl
stos
jne
popf
addb
dec
out
fnstcw
pushf
dec
sub
jmp
mov
sti
jl
popf
fbstp
adc
in
push
jecxz
fidivrs
dec
xlat
out
mov
push
add
sti
xchg
arpl
mov
rcrb
mov
mov
mov
sub
adc
lds
push
dec
mov
jl
xchg
cwtl
ja
loop
xchg
pop
xchg
xor
and
loop
jb
mov
sbb
and
pop
pop
rolb
jno
dec
mov
loop
adc
enter
jmp
push
mov
shl
or
je
xor
jle
sbb
xor
pop
pop
int3
mov
ret
es
pusha
jle
sub
or
or
arpl
xchg
cmp
push
lret
mov
addl
lret
sbb
or
dec
xor
mov
jg
mov
popf
aad
jg
das
out
xor
adc
pop
enter
mov
cmp
xchg
enter
cmp
xchg
mov
adc
mov
inc
mov
aaa
xchg
fisubs
cltd
scas
add
enter
jo
sbb
mov
mov
and
and
inc
or
fldt
lahf
pop
push
mov
mov
cld
scas
repz
lea
roll
cmp
sbbb
sub
je
imul
push
dec
jmp
inc
lcall
push
xchg
add
or
rcll
and
xchg
mov
and
pop
in
lret
loopne
sub
jp
rorb
add
mov
pop
scas
shll
cltd
mov
inc
mov
lods
fs
scas
out
mov
jmp
fsubrs
out
pop
ss
aaa
mov
or
adc
jne
cmpsl
jecxz
xor
push
mov
pushf
inc
fcom
cmp
bound
dec
pop
jmp
test
xor
cmp
rcrl
scas
je
scas
neg
es
lahf
mov
mov
addl
pop
push
mov
sub
inc
inc
fs
cmp
cmpsl
xchg
dec
mov
xor
stc
and
jecxz
mov
cmc
sbb
jge
xchg
in
sub
dec
out
adcb
push
gs
aam
add
mov
pop
pop
sub
pushf
adc
stos
pop
jb
push
pop
fwait
jp
loopne
cmpl
cmpsb
rolb
loopne
push
movsb
jbe
mov
scas
add
xchg
push
sbb
sbb
movsb
mov
mov
sahf
out
pusha
mov
jmp
mov
sti
adcl
test
inc
out
lcall
push
outsb
jge
fwait
ljmp
incl
push
hlt
adc
lcall
cmp
xchg
out
push
dec
jne
aad
sbb
xchg
jae
cmpsb
sbb
jbe
out
dec
pop
pop
push
int
fsubl
mov
lods
imul
push
inc
ret
dec
iret
icebp
push
pusha
sub
or
jge
repnz
lock
jns
or
ret
mov
addb
inc
dec
jecxz
sti
sub
cli
insb
clc
pop
sarb
add
repnz
inc
cwtl
les
je
cmp
jecxz
xchg
test
xchg
mov
pushf
testl
sub
test
xor
pusha
roll
insl
imul
cwtl
cmpsb
es
xchg
shrd
jp
lcall
repz
lods
cs
repnz
data16
inc
iret
jmp
imul
dec
mov
xchg
mov
es
daa
lods
mov
xchg
mov
cltd
xchg
mov
jmp
popa
les
or
stc
xchg
lret
shll
stos
jge
mov
sub
sub
add
ds
imulb
push
xor
jle
and
sarl
or
add
das
movsl
dec
mov
cmpsb
int3
adc
mov
pop
cmc
dec
mov
fsubr
xchg
lret
mov
adc
into
cmp
lcall
xor
sar
mov
xchg
pusha
push
ljmp
adcb
jbe
xchg
lods
xor
fists
sbb
orl
cmp
cmp
push
mov
dec
negl
cmp
mov
lahf
mov
and
sbb
push
loop
add
repz
xchg
mov
fs
sbb
sahf
pop
lea
outsl
push
push
scas
pop
xchg
aas
xlat
mov
adc
fiaddl
adc
cmp
hlt
sub
negl
iret
cmpsl
mov
add
pop
jne
int3
pop
in
xchg
add
aam
jbe
mov
inc
xlat
xor
pop
dec
sub
fs
add
lcall
jp
pop
push
cmp
std
jae
in
mov
in
cmp
ds
jg
dec
sub
sar
imul
arpl
mov
mov
pop
sub
jno
call
ljmp
cmp
test
aas
inc
lcall
pop
push
inc
mov
fdivl
dec
inc
xchg
pop
imul
nop
pop
addr16
data16
xchg
jmp
sub
outsb
pop
out
hlt
arpl
ds
mov
mov
inc
adc
inc
rolb
imul
pop
add
jns
lds
xchg
pushf
mov
push
xor
mov
xor
rcr
movsb
and
adc
ret
movsb
ss
inc
xchg
xor
test
addr16
sbb
mov
mov
mov
lcall
xchg
movb
and
fimuls
adc
sti
cmp
mov
fsubrl
mov
xor
in
rcrb
les
cltd
mov
inc
xchg
data16
lahf
es
sub
mov
cmpb
inc
daa
xchg
adc
cli
sbb
push
cmpsl
movsb
mov
movsb
aas
js
xchg
sbb
fstp
or
movsl
xor
xchg
loope
daa
adc
sub
sti
push
sub
fs
inc
fxch
push
push
mov
fists
lahf
bound
aaa
loop
ret
cmp
jns
sbb
adc
and
lret
jo
ljmp
testb
mov
test
xor
ret
jns
out
in
and
pop
bound
or
call
cmp
in
jg
or
push
les
xor
lock
scas
rorl
pop
sbb
or
sbb
movsb
cmp
add
xchg
mov
mov
fstps
int3
inc
push
sub
hlt
mov
mov
xor
push
xchg
pop
dec
jg
cmp
cmpsb
sbbl
ret
ret
std
sbb
sub
cmpsl
sarb
lret
movsb
mov
lret
adc
cld
adc
jb
sub
mov
cmp
jl
jns
out
mov
adc
xchg
push
inc
call
lahf
jbe
out
jp
outsb
movsl
mov
outsl
rolb
mov
fwait
dec
pop
sahf
mov
mov
movsl
pop
mov
sub
mov
sbb
fnclex
in
out
mov
mov
jle
movsb
lods
mov
movnti
dec
rorb
cwtl
psrlq
sbb
jnp
cmp
sar
lock
orb
lahf
sub
js
stc
rcll
sub
mov
dec
pushf
jae
push
or
pop
push
pop
jo
out
loope
mov
pusha
jo
xlat
mov
gs
or
sbb
lret
push
ss
inc
lret
mov
xor
cwtl
and
xor
cld
add
sub
aad
jp
incl
mov
jae
cltd
add
jae
push
jnp
cmp
xchg
and
pop
adc
mov
aad
push
movsb
aam
xchg
mov
in
inc
mov
sub
inc
mov
inc
cld
cmp
addr16
jl
test
or
pop
xor
xor
jno
mov
gs
in
call
sti
mov
sti
push
push
and
mov
xchg
call
decb
push
and
movsb
lret
jbe
rclb
lods
sub
jb
outsb
jnp
mov
fsub
dec
ret
movsb
in
mov
adc
push
pushl
aam
cwtl
loop
lods
sub
ficompl
push
shrl
push
cld
outsl
mov
lods
mov
pop
inc
lret
ret
mov
xlat
or
insb
dec
jmp
test
jge
scas
jae
inc
cmc
pop
repz
mov
test
lods
popa
sub
outsb
add
dec
imul
ljmp
in
fimuls
jl
sti
aaa
int
sub
es
scas
jp
in
mov
cmpsb
sbbl
gs
pcmpeqw
pop
and
add
dec
dec
outsb
scas
xor
mov
xor
xchg
cmp
lods
cmpsl
dec
cs
repz
repz
xor
outsb
jns
fs
mov
jl
adc
mov
repz
aad
aas
into
sub
or
test
ficompl
icebp
pop
sub
adc
aam
inc
dec
loope
push
pop
repnz
or
faddl
xchg
cmp
push
xor
fnstcw
je
daa
shlb
sub
jecxz
or
loope
ja
or
inc
iret
mov
dec
hlt
cmp
jb
push
cmpsl
and
js
insb
adc
mov
and
lcall
sub
or
dec
or
loop
dec
sbb
mov
push
ret
int
xchg
ja
and
jge
ljmp
out
jae
mov
pop
push
into
lds
inc
push
mov
call
xchg
sbb
dec
pop
into
dec
sub
psubusb
sbb
movaps
push
xor
add
and
scas
adc
inc
movsb
or
fisubrl
outsl
add
pushf
cmpsl
popa
ret
adc
jbe
push
lods
mov
jno
jp
ficoms
sahf
jl
icebp
push
mov
je
mov
adc
jp
sbb
cmp
xchg
pop
stc
add
mov
inc
outsb
sub
enter
pusha
cmp
sti
push
jmp
aad
mov
test
pop
push
dec
pop
mov
push
cmpl
fcomp
es
mov
sbb
ficoms
insl
sub
push
sbb
inc
xor
hlt
push
xor
cs
sub
pop
imulb
pop
out
adc
stc
lds
mov
adc
xchg
test
ss
mov
push
sbb
push
in
jp
insl
cmp
cmp
xchg
or
pusha
scas
jbe
pushf
push
scas
xchg
jg
mov
push
leave
push
int
cmp
xchg
repz
add
mov
pop
dec
xchg
and
mov
shrb
xor
pop
aaa
jns
push
jg
mov
xchg
sub
out
push
adc
sub
gs
in
add
out
dec
jae
and
push
lahf
jns
push
push
je
lods
clc
and
add
dec
and
icebp
or
jecxz
icebp
popa
iret
mov
lods
fdivr
inc
ds
loop
sbb
mov
std
mov
and
mov
xor
xorb
aam
int
cmp
push
stc
sub
shl
sti
xor
inc
xchg
out
lods
rcr
xor
add
rclb
mov
jb
sbb
cmp
sub
lret
pusha
xchg
push
xor
push
add
jnp
cmp
and
ja
dec
sub
insl
inc
xor
mov
cli
mov
bound
test
add
popa
or
data16
lods
adc
mov
jecxz
inc
xchg
mov
pop
cmc
pop
xor
cwtl
sahf
add
dec
int3
or
js
aad
push
and
mov
jge
je
idiv
cmp
jl
xchg
cmpsl
rolb
test
imul
insl
cmp
lock
xchg
sti
cmp
and
xlat
jo
pop
in
mov
loopne
xchg
repnz
das
sbb
push
sub
sbb
cli
orb
pop
lock
mov
sbb
inc
aas
add
das
ret
mov
out
xor
shlb
or
mov
repnz
push
xor
inc
add
adc
inc
mov
lahf
dec
out
xor
xchg
adc
scas
dec
sti
cmp
imul
lcall
xor
lock
je
shlb
inc
jl
pop
lea
ret
mov
jle
inc
xchg
dec
sbb
sbb
int3
cmc
cwtl
out
ss
es
push
and
addb
pop
xchg
add
adc
outsl
add
dec
adc
pop
push
inc
shrl
push
aaa
mov
pop
arpl
and
pop
mov
pop
ljmp
xchg
out
clc
xor
mov
in
jp
xchg
in
sarb
sbb
fs
jb
xchg
xchg
je
sub
sbb
je
enter
scas
adc
adc
sar
shr
and
push
jne
test
iret
inc
xchg
xor
mov
sub
fldl
xchg
out
fstpt
ret
mov
push
or
push
nop
push
leave
loop
daa
adc
stos
pop
mov
xlat
adc
jle
pop
inc
lds
stos
ds
andb
sub
inc
mov
int
adc
lock
mov
ds
or
cmpsl
jns
out
dec
test
lock
pop
add
mov
popa
push
pop
mov
lret
cli
push
jecxz
lods
mov
and
gs
test
push
movsb
xor
scas
ficomps
addb
movsl
orl
sahf
xchg
mov
inc
mov
and
loopne
ljmp
sti
mov
pusha
dec
fs
in
pop
dec
out
push
ds
arpl
add
loopne
xor
mov
repz
jl
test
and
ljmp
or
mov
addb
iret
add
push
jge
fisubrs
jb
lods
shlb
int3
and
cmpsb
or
aam
shll
mov
sbb
push
jne
sub
cs
and
sbb
jo
aam
mov
mov
cmp
mov
push
gs
pop
jne
jmp
movsl
xchg
fwait
jno
lods
sbb
xlat
jns
les
repnz
shrl
push
xor
and
mov
sub
mov
ja
pushl
popl
jae
xor
popa
aas
cmp
jne
adc
xchg
add
lea
mov
push
push
sub
and
mov
xchg
cmp
sahf
int3
imul
mov
outsl
and
mov
pop
pop
cltd
dec
in
xchg
ljmp
jp
sbb
daa
cmp
loopne
jbe
aam
scas
fiaddl
lock
inc
addr16
push
mov
cld
inc
xchg
xchg
aaa
pop
sub
aad
sub
ret
sub
cltd
push
mov
sbb
mov
test
mov
mov
outsl
inc
cmpsl
je
js
jne
push
xchg
mov
inc
jg
mov
popf
pop
in
dec
inc
ror
fidivl
scas
dec
or
xchg
gs
xor
mov
and
xchg
inc
jae
aaa
sbb
pop
cmc
aaa
push
pop
mov
data16
jno
popf
pop
shrb
movsl
push
ja
das
loopne
mov
push
lret
and
in
into
jne
adcl
mov
mov
cmp
add
in
loope
in
out
idiv
cmp
inc
movsb
cli
insl
jl
and
stc
push
in
shll
push
sub
mov
out
icebp
insb
mov
pop
cmpsb
sub
inc
push
lret
lods
pop
adc
adc
les
sub
jno
lcall
inc
jnp
jne
and
mov
dec
mov
or
outsl
cmp
jl
dec
js
inc
punpckhbw
mov
pushf
std
lea
outsl
leave
lods
inc
add
pop
jb
xchg
add
loopne
in
mov
cli
andb
faddl
lret
pop
ja
add
arpl
out
in
push
inc
push
das
cld
je
ljmp
out
dec
and
pop
sub
std
repnz
cmpsl
stos
ss
test
cmpsb
clc
mov
scas
and
sahf
into
push
cmpsl
fbld
pushf
cwtl
clc
push
mov
stc
sbb
ds
xlat
xlat
mov
cmp
ret
xor
sbb
push
imul
xchg
inc
lods
data16
sbb
sub
lock
jecxz
enter
ja
mov
lcall
mov
clc
notb
xor
insb
sbb
rorl
xchg
add
xor
outsb
sarl
cli
pushf
jns
inc
jl
jl
insl
or
enter
rcll
push
xor
push
jne
xchg
lds
fisttps
pop
es
push
sub
dec
xchg
pop
push
xor
hlt
mov
add
aas
lcall
daa
push
mov
test
inc
das
stos
insb
in
ret
popf
mov
xchg
jae
jecxz
popa
adc
sub
xchg
lcall
cmp
movsl
jmp
in
or
js
in
push
or
mov
dec
rorb
inc
mov
fwait
cli
inc
aad
add
in
mov
test
pop
mov
mov
inc
adc
pop
mov
aas
xchg
xor
shrl
add
jnp
and
xchg
and
adc
jmp
clc
popf
xor
add
fidivrl
jecxz
pop
jmp
mov
or
pop
mov
into
test
std
fisubl
shl
xor
cmpsl
pop
push
jns
ret
mov
into
sub
std
fs
sbb
sbb
add
out
scas
inc
jo
popa
subb
imul
xor
jl
in
lods
shll
pop
fstpt
stos
xchg
es
jo
into
out
into
enter
pop
ljmp
cmp
fwait
cmp
inc
mov
in
sub
lock
test
push
inc
and
data16
and
add
es
out
insb
jb
jl
addr16
fisttps
ret
ja
adc
sbb
dec
shlb
mov
popa
push
repnz
icebp
pop
sub
sbb
es
mov
jno
sti
clc
sub
cmp
out
jg
int
mov
add
sbb
mov
add
cmp
stos
cmpsl
les
ljmp
ja
or
lcall
jb
dec
std
cmp
push
dec
ja
fildl
push
in
ja
cltd
sub
mov
popf
push
push
inc
das
mov
cmp
stos
mov
add
in
iret
jb
and
and
rolb
jg
repz
ret
xchg
inc
sub
adc
dec
jl
in
push
lcall
out
in
rcrb
pop
fsub
outsl
call
mov
xor
nop
pop
mov
aas
stos
jle
mov
mov
cli
push
lcall
pusha
arpl
jmp
clc
dec
enter
or
hlt
cmp
adcl
ror
pop
inc
dec
pop
add
mov
in
fstpt
das
fwait
or
adc
outsb
jae
sbb
dec
pusha
inc
imul
int3
push
ss
cltd
sahf
mov
iret
pop
jb
dec
lcall
test
lret
stos
xchg
pop
cmp
imul
push
sahf
push
and
adc
xor
and
mov
aaa
loopne
add
enter
inc
jo
pop
test
fldcw
lods
fwait
int3
add
adc
mov
mov
sbb
and
dec
hlt
dec
ljmp
sbb
jecxz
loopne
lods
or
lcall
aam
mov
lret
adc
mov
mov
addb
xchg
add
mov
mov
jle
xchg
or
mov
fwait
jae
mov
fcmovnbe
mov
xchg
pop
sub
mov
mov
mov
mov
fcoml
and
pop
cmc
std
pop
aad
lods
ljmp
fldcw
out
push
cltd
mov
bound
mov
or
sbb
push
addr16
cmc
cmp
mov
push
shrb
popa
fwait
sbb
xor
les
cld
leave
add
mov
xor
insl
outsl
mov
fstl
xchg
pop
js
mov
sub
rcrl
ds
push
cmp
fisubrl
inc
into
pop
test
pop
cli
adc
sub
adc
sub
stos
inc
cld
jecxz
push
scas
xor
inc
cmp
sub
xor
cmp
jns
pop
int
dec
adc
in
dec
les
push
mov
jne
xchg
xor
repnz
jo
iret
pop
pop
dec
movsl
xchg
jp
push
sahf
iret
and
popa
adc
sahf
cltd
push
stc
insl
outsl
scas
clc
bound
mov
stos
imul
push
adc
hlt
jbe
bound
fcomps
mov
repnz
jns
and
dec
adc
xchg
ljmp
or
xor
add
push
and
fidivrs
mov
ret
inc
jmp
xchg
nop
dec
inc
cwtl
adc
adc
pop
pop
mov
or
je
lock
cwtl
xchg
sarl
je
sbb
jae
push
je
mov
idivb
hlt
cmc
fisubl
xchg
xor
insb
in
pop
dec
pop
push
mov
cmp
ss
mov
lods
sar
pushf
mov
inc
adc
pop
jp
push
sbb
xchg
jle
mov
mov
dec
jle
pop
cmp
insb
test
scas
cltd
popl
outsl
pop
cmpsl
iret
movl
je
mov
enter
fcmovne
cwtl
xlat
dec
leave
int3
mov
insb
mov
or
stos
mov
and
mov
inc
pop
sbb
cwtl
inc
outsl
jb
mov
outsb
je
jecxz
mov
sbb
push
or
ret
shll
ss
dec
and
fsubrp
adc
jne
pop
je
cmp
jns
andl
test
and
testl
stc
push
push
ss
push
sub
xor
icebp
lods
daa
jne
stc
inc
mov
fistpll
mov
sub
adc
pushf
test
push
aam
int3
cmpl
sbb
xchg
jp
sar
popa
dec
pusha
in
dec
das
lds
xchg
xor
icebp
dec
cmp
iret
fwait
xor
popf
and
decl
cmp
mov
push
repnz
negb
inc
test
jbe
pusha
std
shl
inc
ds
inc
test
or
aam
inc
clc
inc
push
xor
lods
dec
pop
fld
int3
mov
je
xorl
mov
add
xor
sarb
in
es
cltd
nop
push
jg
xchg
push
push
mov
cmp
dec
inc
arpl
in
inc
xchg
or
mov
add
mov
inc
push
bound
nop
jp
push
xor
xlat
divb
fcmovb
and
cmp
jb
es
dec
or
dec
sbb
fnstenv
idivb
int3
mov
jle
int3
pop
aad
xor
mov
sub
out
xor
push
lcall
cmp
lahf
popa
enter
ffreep
call
test
nop
lods
ret
pop
lods
jns
inc
mov
sbb
lods
push
sub
push
xchg
outsl
jge
vmread
cltd
jbe
pop
mov
sbb
lods
lds
repz
imul
or
push
in
dec
aaa
push
push
lahf
pop
pop
hlt
pop
pop
testb
add
push
outsb
loop
rcrl
outsl
fcomp
imul
cld
xchg
xorl
mov
cwtl
jbe
ficompl
loop
sahf
aad
aaa
cmp
sbb
mov
lret
fisubs
shrb
sbb
int
cmp
jle
mov
mov
pop
stos
stc
sub
mov
lret
in
rclb
dec
imul
mov
xor
int
sbb
and
jns
xor
mov
jmp
xor
jbe
sub
test
xchg
enter
ret
cmp
or
mov
rclb
sub
orl
mov
push
xchg
adcb
std
test
mulb
xchg
jp
push
jbe
cmp
cwtl
std
cli
cmp
sbb
fdivl
inc
mov
cmp
push
test
sub
xor
mov
ss
inc
inc
cli
leave
mov
or
ja
shll
and
and
popf
dec
push
cmp
imul
xor
sar
push
mov
push
das
sbb
in
mov
mov
push
addr16
fimull
xchg
in
fs
and
scas
lret
mov
jg
dec
mov
mov
cmp
cmpsb
jae
mov
mov
push
dec
insb
icebp
pop
sub
aam
mov
push
shrb
cmp
pop
inc
cmpsw
inc
lcall
cmp
addr16
jg
cmp
jnp
shrb
mov
xchg
inc
xchg
leave
outsb
or
sarb
and
es
sarb
fiaddl
outsb
lods
pop
imulb
pushf
test
int3
or
sub
or
das
cmp
movsb
out
mov
jns
iret
sahf
jge
out
mov
int
jl
pop
mov
or
jo
or
jle,pn
jecxz
jle
call
cmpsl
adc
sub
pop
mov
sub
movb
mov
sub
test
xchg
jbe
jp
test
or
pop
xchg
fstpt
adc
mov
fisubrl
loopne
enter
cmp
cld
and
pop
nopl
shrb
sub
add
popa
int3
movsb
push
dec
icebp
adc
fimuls
dec
daa
xchg
mov
mov
sub
pop
lcall
sub
es
inc
jne
fisttpll
mov
orl
popf
push
insl
mov
jne
gs
mov
rclb
cmpb
mov
mov
in
scas
mov
jns
sub
mov
scas
sub
xor
jbe
ja
in
std
js
inc
js
mov
sub
inc
lock
or
ja
dec
dec
inc
inc
lea
xlat
mov
nop
xor
out
mov
gs
dec
dec
jne
jae
inc
or
rcrl
or
sahf
push
xchg
rorl
aas
add
lcall
xor
push
xchg
jo
jae
ror
xchg
outsl
sti
and
js
inc
pop
cltd
popf
mov
pop
not
cmp
mov
xor
and
jb
in
or
or
test
ss
pop
cmp
arpl
cld
jno
insl
clc
mov
dec
xchg
lcall
in
sub
push
pop
mov
and
push
adc
inc
add
add
jg
data16
mov
mov
sbb
adc
ja
push
fldenv
mov
cwtl
clc
xor
int
mov
mov
jnp
and
pushf
push
jno
idiv
push
jge
cmp
mov
push
or
sbb
adc
repnz
icebp
mov
ja
or
into
push
rol
pop
scas
dec
es
adc
in
out
js
jmp
jns
pop
cli
push
outsb
push
fsubl
int3
adc
push
shl
test
inc
cmc
aad
stc
test
xchg
in
adc
mov
inc
inc
inc
mov
mov
sub
hlt
adc
mov
es
sti
out
ja
jo
negb
call
lret
sub
add
inc
pushf
jecxz
stc
fcom
cmp
scas
cmp
inc
dec
cwtl
ljmp
divl
gs
push
add
gs
push
fldln2
jno
xor
mov
adc
in
ret
adc
arpl
pop
cmpsl
dec
stos
fwait
pop
popf
dec
xor
arpl
inc
inc
push
out
jg
out
lret
and
lret
push
cli
jo
sti
xorb
dec
mov
adc
clc
push
xor
lods
and
in
push
and
pusha
lahf
in
in
lods
stos
mov
mov
pop
sub
dec
add
mov
adc
out
mov
icebp
add
rolb
push
bound
jmp
jno
popa
rcll
mov
mov
insl
jp
add
leave
sbb
xchg
dec
daa
ja
mov
add
xchg
les
xor
fbstp
sub
test
int
xchg
dec
add
add
mov
sti
movsl
iret
sahf
bound
repz
pop
jge
mov
cmp
sbb
mov
xchg
inc
xorl
imul
push
lds
fucomip
mov
out
push
xchg
adc
mov
cmpsb
fdivp
test
nop/reserved
and
imulb
mov
popf
jl
outsb
mov
imul
mov
mov
ficoms
pop
sub
mov
dec
scas
add
and
aas
or
ret
nop
imul
shr
lds
and
pusha
and
out
pop
out
pop
lods
adc
xchg
out
cli
add
popa
pop
adc
shlb
lea
add
cli
jae
and
leave
std
fistl
jmp
shrl
mov
jecxz
mov
scas
jle
aam
pop
jne
pop
and
inc
in
mov
mov
push
inc
fldt
push
jmp
andl
pop
outsl
pop
fcoms
cmp
popf
cmc
pop
gs
lock
dec
dec
jle
mov
xchg
and
cltd
cmp
xchg
mov
sbb
das
xlat
mov
push
cmp
in
pop
movsb
adc
inc
mov
mov
pop
inc
mov
jno
dec
jno
or
sbb
cltd
andl
cli
mov
es
leave
or
rcr
ficompl
ljmp
or
push
addr16
sub
xor
pop
shrl
xor
inc
mov
mov
add
aam
scas
popa
into
sbb
imul
inc
xchg
enter
or
test
mov
fsubl
lahf
call
push
inc
mov
icebp
pop
pusha
push
and
cld
int3
filds
adc
and
jecxz
mov
mov
aad
adc
lcall
cmp
lret
or
les
push
xor
cmp
fs
fsubrp
cs
adc
arpl
je
dec
pop
fwait
movsl
lahf
sbb
pop
jno
or
rclb
push
pop
jle
pushf
cli
test
or
pop
xchg
pop
push
in
int
mov
dec
addr16
lret
clc
mov
xchg
pop
inc
test
and
sarl
or
add
jo
notb
mov
or
xchg
adcl
ljmp
mov
lahf
lods
inc
sub
mov
adc
or
subb
cmp
bound
and
push
popa
je
sbb
fstpl
les
popa
es
sbb
les
sbb
lock
and
mov
sub
loopne
push
adc
jnp
sbb
adc
jnp
lret
jns
push
frstor
pop
sub
jl
faddp
cmp
push
push
sbb
fisttpll
out
or
jmp
jbe
arpl
lret
je
leave
cmp
xor
loopne
xchg
push
lods
jmp
int
mov
adc
inc
dec
inc
sbb
inc
out
inc
dec
movsb
inc
mov
push
es
jmp
jb
cmpsl
movb
mov
push
push
mov
mov
mov
sbb
adcb
add
mov
lods
push
jno
ret
fwait
push
dec
cmp
bound
sub
movsb
fimull
cmp
dec
push
xor
mov
mov
jnp
mov
mov
shll
push
movsl
int3
dec
mov
jg
hlt
and
test
in
imul
mov
int3
pushf
add
xchg
mov
rol
sub
xor
repz
int
test
jp
mov
inc
ja
and
cmp
cmpsb
pop
sarb
stc
es
fwait
ja
negl
loop
jmp
in
es
ss
xchg
shll
xor
out
adc
jbe
daa
clc
mov
xor
dec
rcl
adc
jb
inc
mov
test
cmp
imul
dec
push
adc
fistl
jg
scas
and
push
cmpb
mov
rcrb
adc
icebp
lods
rcrl
xor
xchg
pop
add
sub
adc
and
sti
jge
pop
in
mov
lock
xor
mov
xchg
roll
mov
jg
mov
out
dec
cmpsl
outsb
lret
arpl
sbb
jb
lahf
sbb
pop
mov
repnz
out
lcall
jbe
mov
dec
out
out
ret
jne
cmc
jp
addr16
add
xor
push
stos
sti
and
rcrb
int3
push
push
xor
mov
aad
jg
repz
inc
test
faddl
clc
jle
mov
xchg
aas
mov
pop
lock
outsb
mov
xor
mov
movsb
xchg
mov
sahf
dec
push
repz
mov
pop
xor
inc
push
pushf
mov
lea
adc
pusha
arpl
pop
inc
mov
sti
and
lcall
repnz
stos
pop
sub
stos
jp
lret
and
sbb
push
std
push
popa
cmc
ljmp
fstl
mov
in
out
andl
cld
test
lret
lret
xor
dec
xchg
in
popf
fcmove
stos
inc
xchg
ss
xlat
ret
sbb
insl
sbb
pop
sbbb
xor
add
push
pop
sti
fists
shll
popl
aas
fnstenv
mov
shlb
nop
and
jb
push
int3
inc
add
addr16
sbb
mov
outsb
fwait
mov
insb
das
stos
rol
pushaw
test
pop
imulb
mov
dec
dec
mov
into
jo
pop
aam
ret
in
dec
cmp
cmp
xlat
movsb
push
aas
cmp
pop
mov
leave
fidivrs
xorl
add
stc
mov
or
xchg
push
in
xchg
mov
push
jp
pop
jp
mov
xchg
hlt
mov
cmc
mov
dec
lcall
add
cmp
sti
inc
pop
add
roll
aad
ret
bound
faddl
dec
lods
cwtl
mov
in
xor
imul
jmp
lcall
mov
loope
js
adc
push
fstl
and
popa
sub
jb
cld
push
push
flds
mov
add
adc
xor
getsec
bound
cltd
loope
fsts
out
xchg
into
inc
sahf
jnp
cmp
add
or
pop
sub
sbb
scas
in
and
jge
jl
ss
adcl
xor
shlb
xchg
out
ret
cmp
popf
pop
pop
mov
ss
pop
sub
cmp
xchg
or
cmp
popf
xchg
fwait
pop
mov
js
sub
xchg
jno
inc
xchg
sbb
inc
shrl
mov
mov
movsl
icebp
adc
push
push
cs
sub
push
stos
dec
idivl
scas
xor
dec
pop
in
mov
dec
movsl
aam
mov
sbb
xchg
or
cmp
fwait
mov
in
xchg
test
adc
inc
mov
test
fs
movsl
jmp
jbe
leave
adc
popa
mov
add
stos
popf
cmp
mov
mov
enter
sub
out
loopne
enter
out
push
hlt
add
dec
pop
or
sub
bound
test
scas
mov
xor
fldl
into
out
pop
push
jg
cmp
fdivp
jmp
dec
mov
jne
inc
roll
mov
push
mov
mov
loopne
aas
hlt
pop
adc
jl
mov
in
push
mov
dec
inc
cwtl
inc
imul
cld
or
fs
adc
sbb
xchg
xor
sub
cwtl
jle
shr
sbb
stos
push
sub
sub
push
jnp
mov
ja
stc
stos
push
rorb
mov
xchg
in
pop
add
pop
imul
cmp
out
hlt
add
adc
xchg
out
test
cmp
push
les
mov
int3
and
xor
lock
push
aad
in
push
in
pop
mov
sbb
and
stos
mov
into
xor
and
mov
gs
jp
dec
xor
outsl
es
fdivr
push
sub
pop
adc
sub
pop
fisubrs
xor
lods
dec
jns
mov
cmc
mov
fwait
mov
pop
inc
js
fnstenv
mov
lds
adc
push
push
in
sub
lds
stos
sub
or
popa
push
jge
aas
clc
mov
clc
fldcw
popl
popa
scas
xchg
xor
loopne
cmp
mov
xchg
xlat
push
or
fsubr
imul
ret
cmc
in
xchg
pop
dec
adc
loope
fwait
jo
mov
inc
mov
into
dec
test
or
mov
ja
mov
pop
xorb
pusha
add
sti
jg
cmc
mov
push
iret
out
lcall
cmp
adcl
xlat
movsl
xchg
mov
call
push
dec
pop
je
cmp
dec
push
inc
mov
loop
outsl
loope
imul
mov
loope
cld
fs
and
push
dec
and
mov
cli
int
popf
outsl
insl
out
sbb
test
mov
popaw
mov
adc
pusha
sbb
fdivrl
push
cmc
mov
iret
push
movsb
aas
int3
cmpsl
mov
or
in
out
inc
push
orb
scas
aam
loope
jbe
out
xchg
and
inc
add
cwtl
jmp
scas
mov
jmp
je
mov
idivb
or
pusha
and
mov
xor
push
fnstsw
jne
and
jg
roll
shl
clc
cli
jp
push
pushf
fidivrs
and
fstl
ud1
cmp
mov
ss
jle
imul
push
sarb
push
fstps
xchg
dec
mov
mov
mov
mov
hlt
push
pop
mov
xlat
call
or
add
movq
xchg
or
out
xchg
jne
push
jnp
xchg
xor
push
inc
lcall
pop
cmpsb
adcb
iret
adc
subb
and
leave
or
fdivr
lods
stos
and
dec
mov
or
or
lret
sub
sub
jns
and
xorl
lcall
adc
dec
push
sbb
sub
dec
outsl
jmp
xchg
loope
lock
cmpsl
leave
popa
imul
inc
stc
pop
mov
jae
fnstcw
or
adc
adc
fsubr
push
pop
mov
mov
mov
add
cwtl
mov
push
dec
inc
jecxz
mov
rcll
mov
pop
lock
das
mov
pop
xor
call
in
add
push
jg
add
mov
add
push
fcmovbe
into
mov
jnp
pop
imul
xchg
or
dec
pop
fisttpl
xor
jmp
inc
mov
rclb
mov
and
fiaddl
xor
lcall
call
jns
fstpt
xor
mov
xchg
addb
jle
adc
call
push
jecxz
pop
xchg
push
clc
pop
dec
push
mov
or
mov
dec
mov
pop
push
movsl
pop
sbb
in
shl
jo
lock
rorb
mov
pop
lret
pop
mov
test
adc
sub
jns
or
jge
cmpsb
cmp
stc
pop
push
aas
push
pop
ja
mov
ds
push
insb
mov
sub
adc
mov
push
les
rcll
mov
je
xchg
nop
xor
insl
cmpsl
cmp
into
ljmp
cli
in
loope
xchg
xchg
cmpb
mov
dec
mov
and
lock
mov
int
js
dec
fcoms
or
test
add
call
jns
cli
jb
lods
lock
jb
push
out
or
adc
pop
nop
clc
mov
or
fldt
pop
xchg
ds
stos
mov
and
fwait
insb
dec
sbb
lock
fisttpll
and
popa
out
adc
mov
fildl
or
idiv
mov
movsb
test
cmpsl
jle
and
adc
cmp
adc
adc
mov
jne
addb
movsl
addr16
iret
dec
and
test
lcall
stos
fcmovnu
mov
dec
mov
mov
andb
pushf
add
int3
iret
inc
add
mov
xor
test
fists
rcrb
stos
imul
ja
jl,pt
sbb
popf
mov
pop
out
in
clc
ror
adcl
inc
out
sarl
aad
xchg
fwait
pop
fdivs
adc
fwait
pop
push
aam
xchg
aad
cwtl
sbbl
or
inc
sub
jbe
xchg
and
xlat
mov
sub
and
subl
enter
gs
mov
mov
dec
fidivrs
jne
xchg
push
repz
jmp
outsl
movsl
mov
je
pusha
pop
daa
push
push
sti
mov
lods
and
jmp
xor
cltd
fcomi
loope
js
or
mov
inc
sarb
fdivrl
add
xchg
repnz
pop
fwait
insb
dec
adc
xchg
int
lahf
cwtl
sub
dec
rorl
mov
scas
imul
cmp
jae
in
mov
cmp
add
inc
pop
insl
mov
std
add
pop
movsb
clc
inc
gs
inc
ds
mov
ret
lea
cld
std
mov
stc
lock
xor
int3
push
xor
mov
xchg
aam
xchg
decl
cmp
int3
mov
xchg
mov
leave
dec
outsb
test
jbe
repz
jl
pop
lret
mov
sub
push
mov
lock
push
sbb
in
in
cwtl
dec
xor
dec
mov
mov
and
mov
or
std
hlt
push
or
push
dec
out
dec
shrb
cmpsl
aam
mov
and
aad
mov
sub
inc
out
js
fsts
ret
test
push
push
pop
mov
sub
sbb
std
loopne
aaa
inc
adc
mov
mov
lret
rcrl
repnz
push
cs
mov
std
push
or
add
test
ljmp
fnstcw
scas
ret
jbe
fiaddl
xchg
mov
push
fdivrp
movsb
pop
mov
rcrb
int3
push
sbb
sbb
mov
cmc
xchg
pop
mov
jae
add
mov
or
out
and
ljmp
test
jmp
outsl
in
jl
std
sub
in
icebp
aad
loope
mov
push
test
push
mov
rcll
addr16
repz
mov
pop
scas
nop
loop
out
sahf
inc
xor
mov
xor
into
mov
sub
sub
dec
loope
xchg
jo
aam
pop
loop
fstps
dec
mov
cmp
sbb
adc
stc
sbb
pop
adc
scas
push
fldpi
inc
xchg
cli
dec
fmull
subl
shlb
or
pxor
clc
push
out
gs
or
enter
jge
jno
push
inc
add
push
cmp
lret
or
daa
jno
ja
push
subl
mov
mov
rcll
mov
outsb
lahf
pop
xor
lock
nopl
orb
xrelease
repnz
out
mov
mov
xor
imul
sbb
stos
push
sti
jmp
cmp
add
shrb
shl
push
dec
das
fidivs
and
lahf
test
jle
mov
or
push
outsl
std
or
das
into
call
outsl
clc
stos
fdivs
imul
pop
xor
dec
inc
push
fistpl
inc
call
out
js,pn
add
xlat
fdivrl
stc
ljmp
mov
pop
sub
mov
and
in
or
mov
fsts
add
xchg
adc
or
push
test
jae
mov
or
pop
ret
pop
fiaddl
mov
or
in
das
into
pop
inc
aaa
jb
jecxz
lods
xchg
icebp
loop
ror
xor
or
scas
jbe
adcb
outsb
jle
add
arpl
popa
mov
popa
call
sahf
adc
xchg
cs
jp
cmpb
cmpsb
xorl
fs
aaa
ret
test
add
sub
or
mov
inc
sbbl
push
jecxz
popa
adc
xchg
jmp
pop
dec
sub
xlat
mov
xchg
insl
add
or
movsl
jle
pop
sbb
loopne
mov
pop
fisubrl
rolb
stos
xchg
int3
sti
mov
xchg
pop
dec
test
mov
imul
pop
sbb
xchg
fs
dec
out
adc
mov
dec
pop
fnstsw
jno
fwait
jo
push
ret
add
inc
pop
mov
xchg
aaa
pop
xor
mov
inc
cs
cs
jo
lahf
mov
xchg
push
idivl
scas
fimuls
jg
inc
je
sub
enter
cmp
mov
lea
or
cltd
shr
jge
les
mov
ljmp
jmp
inc
aaa
mov
xor
xor
push
imul
divl
sti
aas
mov
dec
notb
int
xlat
pop
xchg
mov
sahf
mov
in
add
jns
cmpsl
jmp
sbb
pop
mov
ret
xlat
mov
mov
sti
jmp
cli
mov
push
ljmp
data16
nop
mov
push
mov
mov
jns
jge
push
fisubrs
lret
lods
add
std
add
push
lods
outsl
js
push
lock
sbb
pushf
fldl
lret
scas
cmp
arpl
fiadds
lret
inc
addr16
push
shrb
cmp
xchg
or
popa
ds
adc
cwtl
and
imul
cmpsb
mov
jo
loopne
dec
push
rorb
jbe
mov
std
add
sub
pop
add
sbb
int
xor
mov
jo
leave
ret
cli
add
jnp
ljmp
push
call
sub
cmpsb
data16
sbb
mov
cmp
add
cmpl
and
stos
cmp
aam
aaa
jo
xor
imul
sahf
int3
cmp
push
xor
cmp
lea
adc
aam
ljmp
add
push
imulb
ror
sbbb
std
je
sbb
ds
jb
ja
add
stos
ret
ret
sbb
jmp
mov
jo
jo
add
cmp
inc
dec
negl
movsl
push
cmp
inc
sub
fistpl
pop
test
das
pop
mov
or
jecxz
dec
pop
cmpsb
xor
insl
mov
push
aaa
cmp
or
add
jmp
sbb
movsb
push
pop
ljmp
movd
xor
pushf
cmp
jno
pushf
iret
arpl
js
test
xchg
fmuls
mov
and
push
push
xor
add
dec
bound
clc
sbb
scas
push
jge
and
dec
jbe
mov
dec
cmp
cli
jae
xchg
jmp
mov
es
out
jnp
andb
xorl
lcall
sub
jp
mov
sbbl
not
adc
add
pop
xchg
cmpsb
jns
in
push
sub
mov
mov
cs
sub
sub
rolb
movsb
das
add
xorb
cmp
jno
inc
inc
fists
adc
mov
mov
sbb
rorb
push
das
mov
pop
je
pop
insl
data16
push
popa
push
pop
add
je
dec
cmc
mov
xchg
repz
fwait
xor
faddl
mov
cli
jno
imul
and
and
push
out
dec
fbld
je
jmp
scas
hlt
imul
or
pop
out
call
lret
pop
dec
jne
sub
xchg
insb
addr16
push
sub
mov
dec
sbb
jae
push
or
sbb
cmp
xchg
mov
mov
aas
xchg
lahf
pop
lret
pop
pushf
hlt
cwtl
add
push
sub
push
lea
fstl
or
add
mov
dec
mov
out
out
in
fsubl
push
xlat
movsl
ja
icebp
pop
addb
mov
out
cli
push
movsb
adc
imul
movsb
outsl
mov
shrl
les
sbb
scas
mov
or
out
push
notl
scas
mov
sbb
inc
cmp
add
mov
xlat
aaa
enter
jb
xor
arpl
mov
adc
sarb
inc
ds
inc
popa
push
and
xor
mov
and
and
mov
jno
mov
out
insb
jg
pop
js
test
jae
sub
aas
arpl
out
test
das
push
stos
inc
xchg
sbb
test
mov
int
mov
std
xor
cwtl
cs
xchg
repnz
pop
insl
add
inc
in
inc
cmpsb
cmp
jno
stc
push
fwait
mov
les
jb
and
test
shlb
insl
fidivs
hlt
add
or
addb
std
icebp
aas
loopne
and
stc
stos
add
push
stc
test
jp
or
inc
mov
in
push
popf
push
addr16
ja
in
stos
push
lcall
loopne
xchg
arpl
mov
jnp
add
xchg
mov
mov
bound
mov
insb
or
daa
mov
push
add
xchg
add
mov
gs
jl
sub
xchg
mov
les
sti
pop
outsl
mov
stos
xchg
insb
xor
nop
cli
sub
fs
loope
sub
sbb
sub
cli
add
dec
add
aam
ficoml
xor
xorl
mov
aas
aaa
xchg
cwtl
decl
jg
movsb
ljmp
aaa
sti
inc
xor
push
add
mov
mov
mov
lock
int3
dec
push
sub
push
push
leave
mov
lea
ret
xor
xchg
je
hlt
repz
jnp
mov
ror
cwtl
into
divl
pushf
mov
mov
pushf
inc
inc
pop
mov
int3
call
int3
dec
loopne
sbb
enter
int3
adc
std
int
or
sub
pop
dec
mov
jns
lret
int3
fimuls
sbb
pop
xlat
lret
sub
lcall
dec
scas
inc
cli
xor
inc
or
rclb
or
std
arpl
jmp
mov
mov
add
ret
lcall
xchg
addr16
or
mov
jmp
enter
cmp
je
fistpll
popf
jne
loope
jns
sub
aad
test
mov
or
pushf
in
xchg
cmc
test
adc
loopne
or
icebp
insb
ret
outsb
aas
mov
das
or
ret
jmp
cwtl
aam
ljmp
add
sub
push
mov
in
mov
xor
cmp
cmpsl
in
les
mov
or
push
sub
das
rol
fdivl
or
test
in
cmp
sbb
mov
sbb
jo
rolb
fidivrs
jns
int3
sub
mov
mov
in
lods
shlb
sarb
jg
inc
jae
fmull
push
sbb
and
pop
mov
lds
ficompl
xchg
hlt
ret
sub
push
sub
mov
xchg
lock
mov
call
cwtl
push
xor
add
pop
push
xor
es
pop
dec
repnz
out
xor
repnz
cmpsl
jbe
aam
and
xor
add
mov
xchg
xchg
cs
aad
xchg
or
pop
sub
jno
rcr
xor
xor
xchg
lret
sub
push
sub
sbb
ret
sarb
mov
das
aas
xor
loopne
mov
jae
fistpll
sub
fists
addr16
mov
jbe
jecxz
push
movsl
pop
leave
shlb
lods
adc
sti
push
fstl
imul
call
inc
xchg
mov
push
xor
mov
je
sbb
loope
mov
sub
lods
mov
es
xlat
add
jae
loop
mov
sub
sbb
out
pop
xor
adc
loopne
add
and
xor
pushf
push
loop
sub
push
into
lahf
repnz
stos
adcb
dec
push
dec
sbb
lahf
sarl
dec
push
rolb
popa
adc
xor
adc
lods
xchg
sub
push
xchg
mov
scas
xchg
outsl
lods
dec
jnp
nop
inc
test
cmpsb
sbbl
push
stos
arpl
ss
in
jecxz
test
stc
xor
jno
rcll
mov
push
jae
inc
imul
inc
daa
fcmovu
jp
lret
sahf
sar
xchg
and
mov
imul
fs
arpl
pop
pop
cwtl
or
xchg
in
push
push
dec
fmuls
jp
fwait
aam
js
inc
sti
mov
ljmp
imul
into
ret
push
loopne
pop
sbb
jo
out
popa
test
sbb
xchg
lods
icebp
xor
fcompl
lods
es
xlat
or
jmp
cmpsb
pushf
mov
in
jle
clc
or
push
mov
or
sub
outsl
js
add
xor
test
dec
addr16
mov
add
mov
adc
xchg
or
jl
loop
pop
out
or
adc
jl
test
int
adc
push
mov
into
xor
mov
ljmp
daa
inc
pop
popa
and
pop
mov
mov
sbb
icebp
aad
jecxz
lds
cmp
outsl
popf
notl
movsb
add
and
xlat
test
stos
mov
xchg
xchg
sbb
jnp
sbb
push
push
mov
sbb
movsl
push
push
xchg
aad
mov
aaa
clc
mov
add
xor
mov
cltd
dec
addr16
sbb
lds
imul
mov
mov
add
dec
cmp
and
push
and
cmpsb
loopne
sti
or
cmc
imul
pop
sbb
fiadds
or
dec
xor
popf
jg
xchg
jne
jo
or
sahf
ret
jne
mov
shl
idivl
loop
xchg
jle
jns
clc
test
cmp
test
in
or
sbb
adc
pushl
fcomps
jecxz
popf
cmc
xor
in
jp
xchg
or
hlt
push
push
sub
fildl
xchg
mov
ficoml
sbb
jns
dec
ljmp
adc
xor
stos
mov
push
pop
imul
mov
arpl
shl
xor
dec
pop
test
adc
loopne
into
mov
inc
mov
movsb
lret
icebp
lds
dec
vmaxps
adc
rcr
xor
and
jecxz
mov
enter
ss
adc
fcom
xchg
shl
ja
cmp
dec
inc
shll
test
scas
jae
adc
inc
lret
pop
mov
mov
mov
cld
lret
push
push
sbb
xor
lods
cmp
mov
in
stos
add
push
pop
lret
sbb
pushf
sbbl
sar
cmp
and
ss
lcall
mov
push
ljmp
sub
sbbl
sbb
in
ds
movsl
movsl
aam
mov
mov
inc
repz
cmp
stc
push
adc
adc
in
jp
loope
push
push
stos
inc
or
dec
cmp
mov
cmp
jbe
addr16
inc
mov
push
lods
mulb
int
leave
xchg
xchg
mov
pop
insl
int3
or
jg
sub
xchg
and
jg
in
popa
jecxz
ret
cmpsl
nop
mov
lock
das
dec
adc
mov
daa
add
shll
xchg
pop
sub
sub
in
xor
add
cmp
ficoml
test
into
shll
hlt
loope
lret
fisttpll
adc
repz
cli
mov
popa
fisttpll
mov
hlt
xor
jmp
sub
hlt
or
push
xchg
andl
cmc
out
mov
mov
test
imul
in
stos
stos
mov
xchg
and
ss
sbb
dec
clc
mov
mov
repnz
loopne
fcomps
shlb
clc
int3
xchg
push
and
in
lods
adc
mov
sub
add
dec
mov
mov
sbb
push
mov
push
pop
mov
repz
jno
inc
out
fstpl
jl
xchg
fidivs
jae
std
movsl
xlat
cmpl
sub
negl
or
add
lahf
fbld
stos
or
jae
mov
jae
push
fcoms
sbb
push
sbb
dec
mov
mov
push
rorl
fnsave
lea
sub
mov
ss
xor
cltd
rclb
ds
xchg
inc
sbb
testb
pushf
out
mov
sbb
in
xchg
sahf
addb
arpl
clc
lds
pop
inc
out
out
mov
jg
loopne
mov
loope
pop
cmp
xchg
in
sub
lret
jae
repnz
ljmp
mov
mov
stc
add
push
pop
shll
jns
add
xchg
jbe
lods
mov
les
out
xbegin
xchg
cmpsl
imul
sbb
in
jp
mov
testl
adc
bound
sarb
cmp
ja
jnp
pop
sub
test
lea
pop
dec
sahf
jl
xchg
scas
mov
incb
les
les
lds
or
xchg
and
popf
insb
inc
out
lcall
pop
pop
aam
es
jns
inc
cmp
push
lds
aad
lcall
ss
fsubs
cwtl
loopne
cmp
aad
es
and
mov
cmp
fcmovu
cmc
mov
mov
or
sub
mov
imul
test
lods
les
mov
sub
xlat
add
cli
enter
fldenv
leave
mov
mov
js
cmc
sbb
cs
mov
cmp
mov
mov
adc
iret
mov
pop
inc
and
scas
jo
stc
test
mov
pop
cmp
pusha
sub
pop
or
push
rclb
fildll
mov
mov
push
push
rcrl
pop
aad
lock
rclb
cmp
clc
mov
pop
pop
adc
stos
test
push
shll
add
dec
jo
push
call
and
enter
mov
dec
repz
push
leave
les
outsb
mov
stc
xchg
fidivrs
cmp
sub
xchg
sub
pop
inc
loopne
dec
lret
ret
xor
mov
sub
in
dec
xchg
mov
pop
mov
mov
or
stos
xchg
or
adc
adc
inc
ret
adc
cli
and
mov
add
pop
nop
push
dec
pop
mov
cmp
xchg
fsubl
jbe
dec
xor
pop
push
jnp
dec
dec
lods
sub
fsubrs
dec
xchg
xchg
inc
mov
jbe
and
movsb
aam
int3
xchg
popa
adc
adc
sbb
shlb
dec
jnp
lods
mov
jo
lcall
sahf
jno
in
sbb
and
je
xchg
mov
lcall
or
jno
xor
std
mov
je
mov
cmp
ret
fadds
inc
jge
rcll
in
inc
or
adc
cmp
pop
xor
or
aas
call
pop
lret
mov
add
jb
xorl
push
dec
stc
jg
mov
fiadds
add
cld
mov
scas
sbb
push
add
in
and
cmc
loopne
test
and
cs
cmp
out
sbb
leave
into
ficoms
repnz
dec
mov
add
lods
mov
dec
or
sbb
jb
pop
mov
pushf
aaa
dec
xor
in
dec
out
shlb
repz
jnp
clc
add
hlt
dec
out
xor
cmpsl
imul
jnp
cmp
fwait
push
pop
push
mov
subl
clc
jecxz
or
cmp
pushf
xchg
adc
cmp
insl
insl
dec
dec
imul
decb
cmp
xor
and
lcall
add
xchg
push
mov
adc
mov
test
xor
cmp
adc
jnp
push
push
jle
and
addb
mov
or
pop
icebp
fistpl
sbb
mov
insl
mov
cmp
xchg
ret
xchg
sahf
cs
xor
leave
nop
cmp
gs
jbe
cmp
mov
push
pop
and
leave
in
lds
das
andl
add
cmp
leave
mov
xor
out
mov
pushf
add
inc
lock
add
mov
sar
mov
sti
andl
cmp
xor
mov
test
js
jmp
pop
in
fmull
cmpsl
mov
inc
mov
add
cmpsb
outsb
loopne
and
cmp
push
data16
jns
mov
inc
lock
inc
ret
cwtl
xchg
pop
mov
pop
inc
mov
mov
sbb
mov
pop
imul
loope
leave
aaa
pop
or
fsub
pop
ds
pop
push
sahf
jmp
or
lods
cld
push
js
mov
outsb
inc
scas
lock
cmpsb
cld
dec
out
jno
daa
cmpsb
mov
jg
jnp
mov
dec
lahf
dec
lds
mov
or
xchg
jmp
adc
cmc
js
data16
int
mov
sarb
hlt
daa
pop
lcall
std
lods
fpatan
adc
cld
pop
lock
xchg
push
test
dec
mov
popf
cwtl
sahf
inc
xchg
xchg
cmp
int3
xlat
in
xchg
cwtl
sbb
stos
cmpsl
xchg
ret
je
and
mov
int
sub
mov
or
in
arpl
hlt
pop
mov
aas
les
inc
enter
cmp
jle
mov
push
push
pushf
push
push
fcomps
mov
jbe
sub
ja
sub
or
sub
jmp
sbb
enter
xchg
into
adc
inc
out
push
inc
cli
push
out
js
mov
lea
mov
cmp
movsl
mov
lcallw
int3
xchg
and
stos
rcll
lods
mov
xchg
cmc
fsubs
in
xor
adc
cmpsl
stos
arpl
mov
cmp
ret
loopne
sub
jae
sbb
fisubrs
iret
pushf
push
mov
xchg
loopne
ja
testl
out
add
fwait
jl
lea
aam
push
jecxz
push
xchg
inc
mov
cmp
mov
dec
push
mov
cli
or
lahf
mov
ljmp
pop
xor
and
dec
xchg
sbb
jns
mov
mov
pop
fldcw
jo
cmp
sbb
test
adc
popf
stos
inc
pop
dec
or
or
bound
ret
push
lea
xor
lret
movl
push
sti
xchg
jl
lahf
mov
into
sbb
cmp
mov
popf
je
push
sub
mov
xchg
js
cmpsl
adc
push
cvtdq2ps
fs
dec
loop
mov
inc
xchg
pop
aas
push
or
clc
enter
dec
mov
sbbb
mov
push
mov
jo
clc
insb
icebp
pop
and
repnz
out
test
fwait
cmpsl
out
vmovntps
js
jne
dec
add
and
or
and
cmp
dec
shll
push
mov
mov
lock
daa
lods
mov
scas
cmp
in
lcall
scas
jle
xchg
xchg
adc
xchg
mov
push
and
test
mov
and
push
stos
pushw
hlt
push
xchg
loop
lcall
xchg
stos
outsl
jge
sub
mov
cmc
xchg
cmp
loop
loop
mov
xor
clc
andl
mov
jno
or
mov
add
add
and
mov
inc
loop
nop
and
mov
pop
ficompl
xor
ret
lret
loope
int
loopne
push
rcrl
popf
es
adcb
test
repnz
stos
jle
cmp
cli
imul
out
sub
mov
test
ss
imul
pop
stc
ss
lahf
push
sbb
out
ret
ficoml
sbb
lahf
cmp
xor
das
mov
imul
jle
push
dec
cmp
rep
lods
sbb
jnp
xchg
jnp
adc
and
repnz
test
or
pop
dec
or
int3
xchg
dec
clc
shlb
sub
lds
stos
mov
push
push
cmpsl
mov
jmp
std
aad
push
cli
lods
repz
jge
pusha
cmp
nop
mov
xor
fsts
testl
pop
cmp
cmp
dec
ffree
dec
push
lock
movsl
cs
clc
xchg
jge
out
push
xor
subb
xchg
testl
sbb
xchg
cmp
mov
shll
ljmp
test
xchg
lods
mov
hlt
and
mov
xchg
and
push
sahf
es
jns
subl
in
aas
sbb
popa
in
xchg
fdivp
cltd
call
arpl
xor
jp
or
iret
mov
js
xor
stc
push
mov
inc
cmpsl
xlat
cld
adc
bound
lret
pusha
dec
outsb
jae
fiadds
aad
lret
test
push
mov
push
imul
add
rolb
mov
lods
aad
pushf
cmpb
outsl
leave
mov
movsb
xchg
jg
or
ljmp
gs
dec
dec
mov
and
dec
add
aad
divl
hlt
dec
mov
or
fsts
xchg
shrl
data16
pop
fidivrs
iret
mov
dec
mov
ja
es
cld
xchg
push
sbb
push
adc
lods
shlb
cmp
lret
mov
mov
int3
cmp
nop
inc
mov
cmpsb
popa
pusha
sub
xor
xchg
sub
jns
adc
arpl
xor
imul
stc
fidivrs
lret
mov
lock
jp
jle
and
xor
mov
rorl
imul
cmp
ds
fldcw
and
mov
cs
dec
test
push
repnz
push
pop
dec
imul
bound
push
jge
outsl
fists
cltd
add
mov
or
inc
insb
enter
divb
pop
sbb
sub
in
mov
sbb
add
loopne
push
adc
cwtl
jne
inc
cltd
jns
loop
out
adc
cli
push
pop
adc
mov
ret
call
mov
sub
sub
fildll
pushl
je
sbb
std
int
sub
dec
movsl
cld
add
popa
push
fisttps
je
cwtl
data16
cmp
js
push
mov
cmc
push
and
gs
xchg
aaa
es
jmp
in
aad
sub
inc
or
popa
add
cmp
jo
jae
cmpsb
repnz
sbb
mov
pop
sub
test
xchg
or
adc
sbb
push
loope
cltd
mov
leave
ss
mov
add
out
pusha
mov
enter
icebp
iret
out
lret
imull
mov
pop
mov
les
dec
ret
mov
xchg
push
imul
push
push
push
imul
movsl
jl
ss
push
dec
cmp
pushf
or
jae
fists
jecxz
stos
mov
xor
push
decl
pop
sub
xlat
and
adc
add
xor
mov
and
inc
inc
aaa
arpl
mov
je
aas
inc
cli
mov
fisubs
test
mov
jl
mov
mov
pop
dec
std
sub
cmp
push
dec
fcomip
fisttpll
fldcw
mov
mov
mov
or
lcall
pop
xchg
aas
dec
sub
ret
cmpsl
fxch
cmp
dec
mov
adc
cmp
insl
jno
sub
push
les
sbb
xchg
movsb
pop
cld
jmp
push
lcall
in
aas
pusha
jp
clc
roll
sub
inc
inc
jl
addr16
push
xor
mull
ficoms
into
pop
filds
cmp
fnstcw
xchg
cmp
mov
sub
rcrl
and
adcl
cmc
pop
test
jns
xchg
cmc
adc
mov
imul
cmc
push
jg
jne
adc
and
xor
loopne
addr16
cmp
add
inc
sub
cmp
out
clc
jg
outsl
jg
sub
nop
xchg
jle
cmc
pop
cmp
das
jae
les
movlps
scas
std
mov
insl
jp
push
push
rolb
pop
int3
clc
cmp
test
xchg
insl
in
sub
push
out
push
mov
in
xchg
xchg
xor
adc
sbb
jmp
mov
xchg
stc
testl
jb
xchg
sub
mov
aam
dec
ret
outsl
les
and
jmp
or
push
mov
fsubp
das
or
xor
pop
icebp
subl
sub
sarb
or
cli
jecxz
sbb
push
xor
mov
subb
mov
jp
pop
filds
lcall
ficoms
out
das
ja
sub
mov
adc
dec
pcmpgtw
xchg
fdivrs
inc
sahf
and
js
pop
repnz
sbb
or
cmp
shrb
inc
js
jmp
nop
divl
rcr
xor
inc
gs
sbb
cmp
mov
pop
xorl
out
out
loop
stc
in
cli
sbb
xor
or
addr16
mov
push
lea
cld
mov
ds
mov
inc
sarl
xchg
in
adcl
jmp
jnp
in
cmp
dec
enter
mul
adc
roll
int
in
xchg
in
pop
movsl
inc
sbb
jo
pop
jbe
fcoms
add
pop
jl
out
pushf
or
adc
bnd
and
add
mov
sub
imul
in
stos
xchg
inc
inc
push
jge
xor
push
into
inc
mov
xorl
daa
addb
push
or
leave
cmc
loopne
cwtl
cmpl
addr16
aas
out
mov
clc
leave
sti
dec
or
into
ja
dec
dec
inc
and
enter
call
push
xlat
jno
jecxz
fst
ja
sub
push
jl
push
jge
xor
mov
push
sahf
out
dec
mov
sbb
xor
sbb
xchg
dec
movsb
aaa
pop
and
or
int3
ja
ret
pop
push
cmc
je
mov
xlat
pop
push
sub
shlb
loopne
xchg
pop
pop
mov
push
movsb
in
test
cltd
cmpsl
orb
lret
pop
mov
add
leave
xor
orb
bound
dec
inc
aaa
jl
push
orb
repnz
icebp
lods
imull
cmp
lods
mov
mov
jmp
cmp
mov
data16
lock
loop
cwtl
call
push
mov
cmpsb
fcomp
dec
shlb
fs
fistps
lods
xchg
fs
pusha
insl
call
frstor
xchg
loopne
jle
cs
ret
sbb
ret
sub
adc
xor
rorb
jmp
pop
call
cmp
add
sub
sbb
out
cltd
into
pop
mov
arpl
in
fadds
xor
or
int3
pop
mov
iret
std
cmp
push
outsb
mov
lret
loop
insb
popa
pop
ret
sub
scas
jecxz
mov
dec
cmpsb
faddl
and
xlat
mov
push
add
mov
add
push
gs
mov
sub
push
or
pop
lock
dec
add
test
out
ds
cmp
imul
rcrl
mov
rcll
xor
clc
bound
das
or
cmpsb
xchg
les
adc
or
adc
stc
sub
scas
aam
imul
or
ljmp
out
xlat
mov
mov
cmp
imul
dec
outsl
and
adcb
sbb
fcompl
mov
out
imul
push
lret
push
cwtl
dec
jbe
pop
xchg
xorb
sti
inc
std
imul
lea
push
cli
mov
loope
cmp
lretw
xor
xchg
mov
aam
jecxz
pop
hlt
outsl
movsl
js
int3
in
sub
fidivl
mov
out
and
fwait
push
xchg
icebp
pop
jp
sub
enter
ljmp
or
test
mov
pop
cmp
fisttps
sbb
inc
inc
clc
movsb
ror
data16
push
ja
cld
fwait
mov
aad
inc
cmp
inc
adc
adc
repz
jle
test
mov
push
shl
repz
call
jb
test
adc
mov
gs
adc
push
imul
pop
fidivrs
mov
mov
sub
fs
addr16
shrl
sub
loopne
lcall
mov
inc
testl
mov
mov
scas
out
aam
jo
sub
insb
les
sbb
lret
pop
rcll
loop
xchg
add
mov
mov
fidivrl
cmc
dec
add
push
mov
das
lds
ds
sbb
iret
or
inc
inc
and
fisttpll
clc
in
ss
pop
mov
and
inc
pop
mov
xchg
mov
mov
push
push
mov
adc
icebp
outsl
sub
push
mov
push
pop
ret
cmp
or
stc
lret
mov
push
faddl
xor
stos
cltd
inc
subb
jb
gs
pop
iret
sub
sbb
lret
or
adcl
gs
inc
fs
jb
pop
sub
into
mov
jmp
xor
aas
cltd
stc
lret
aad
subb
adc
addr16
push
mov
lret
loop
push
xor
mov
mov
cli
and
insb
inc
and
rcrw
stos
sub
loop
mov
mov
fcmovnu
cltd
ret
push
fst
fcoml
lret
push
in
outsb
push
shll
sub
test
jecxz
or
cmp
in
movsl
lods
mov
add
fucomip
movsb
inc
cs
loop
push
subb
outsl
adc
xchg
mov
pop
arpl
inc
sub
cmc
push
sub
addr16
call
les
push
adc
rolb
dec
cmp
pop
pop
sbb
pop
or
xchg
movsl
repnz
and
cmp
pop
xchg
mov
ret
jge
push
jo
jns
imull
jne
mov
jno
lea
imull
jp
jp
imul
loope
sbb
cwtl
add
sbb
inc
sbb
inc
je
scas
movsl
loop
jmp
call
dec
rcrl
test
push
sbb
bound
ljmp
inc
xor
dec
out
ja
adc
sbb
movl
mull
stos
addb
stc
mov
aas
inc
lock
xchg
adc
push
jl
arpl
mov
sbb
mov
jno
pop
jns
xchg
inc
or
out
fiadds
mov
push
mov
cmp
add
jno
loop
push
repnz
das
cs
dec
sbb
rcl
xor
test
and
lret
add
popf
add
test
nop
pop
push
dec
cli
xchg
jge
faddl
mov
cld
and
mov
loop
outsb
xchg
cld
outsl
sbb
hlt
adc
in
sub
mov
int3
aad
pop
jg
in
stos
cwtl
pop
adc
iret
imul
mov
and
mov
mov
sub
rcll
int3
or
aad
add
mov
shl
out
lock
and
mov
adc
dec
jae
imul
lcall
lock
xor
jb
push
mov
add
and
push
lret
mov
or
fstpt
lret
fistpl
mov
xchg
or
ljmp
idivb
into
jnp
sub
and
push
jno
aaa
add
xor
adc
std
imul
sbb
push
daa
sub
xlat
out
lret
leave
loopne
inc
lahf
mov
dec
push
sti
mov
cwtl
add
mov
mov
icebp
inc
add
push
mov
outsl
dec
jl
hlt
or
sbbb
in
jge
or
fisttpl
sbb
adc
js
leave
hlt
push
cmpsb
pop
xor
push
pop
jae
or
push
cmp
adc
jne
and
sbb
cmpsl
xchg
cwtl
jne
je
push
add
loopne
mov
and
dec
ret
sub
mov
test
inc
xchg
pop
loopne
out
xlat
loopne
int3
fimull
sub
imul
inc
and
pop
inc
cs
icebp
pop
scas
sarl
fnstcw
insb
sub
subb
lock
ljmp
sbb
add
stc
sub
fwait
movsl
cmc
out
pop
hlt
fildl
jle
icebp
js
ljmp
das
mov
mov
fcmovne
out
sbb
sub
push
push
jbe
or
aad
pop
jmp
test
test
sbbb
lsl
add
push
cmp
push
sub
mov
rorl
fwait
loope
push
pop
rcrl
pop
lret
stos
dec
push
loop
mov
jecxz
insb
sub
jae
cwtl
je
lods
xchg
push
dec
xchg
jae
xorb
mov
repnz
stos
mov
lcall
ficompl
pop
ja
push
inc
fst
mov
push
mov
aas
lahf
sub
adc
scas
fisubl
mov
loopne
mov
and
inc
mulb
sub
pushf
push
push
lahf
shll
or
insb
pop
in
in
iret
jo
out
out
orb
popa
cmp
out
mov
lods
cmp
sub
mov
inc
mov
or
lret
pushf
dec
out
stos
sti
ret
jne
cmp
insl
adc
pusha
loop
nop
dec
mov
lahf
xchg
rcrb
mov
imul
jno
lcall
mov
stc
push
outsb
pop
push
add
insb
aad
sti
scas
pushl
jmp
aas
xchg
ljmp
stos
mov
leave
cmpb
aaa
out
loopne
cmp
jge
xlat
lods
icebp
mov
sbb
imul
inc
add
loop
xchg
push
lds
outsl
stos
adc
push
fs
lds
outsl
repnz
stc
imul
jae
ret
mov
out
or
sbb
repz
je
pop
shrb
sub
cmpsl
xchg
es
and
outsl
fs
cmp
jb
cvtpi2ps
mov
loop
and
dec
out
add
mov
ljmp
cmp
xchg
mov
ljmp
push
rcrl
pusha
fnstcw
lret
cmp
cmp
push
ret
push
popf
fwait
ss
scas
mov
sbb
jge
inc
scas
push
inc
les
push
lods
jl
mov
sbb
movsl
fwait
sti
rcl
mov
loopne
addr16
xchg
jge
inc
jae
mov
push
sbb
fsubl
idivl
gs
insb
inc
out
pusha
jl
ficomps
sub
mov
push
lods
push
shll
aas
call
in
mov
movsl
out
or
mov
mov
cmp
and
inc
loope
ja
testl
push
push
xchg
mov
aas
or
loope
lock
lds
adc
enter
push
xchg
jnp
and
adc
in
pop
inc
pop
push
insb
dec
in
ficomps
cli
clc
pop
mov
mov
enter
sbb
testb
mov
pop
daa
std
adc
mov
loop
sbb
push
ljmp
les
mov
or
mov
xchg
inc
inc
xchg
lcall
dec
fistpl
addr16
jbe
cmp
dec
cmp
pop
aas
enter
lea
cltd
xchg
jae
or
xchg
aaa
xlat
or
adc
fsubr
dec
adc
popa
push
mull
int3
shlb
dec
cwtl
movsl
xor
jnp
fidivl
xchg
xchg
cmovg
mov
pop
xor
insl
xlat
mov
jle
mov
insb
or
imul
divl
frstor
sbb
xor
sub
fs
mov
push
out
cmpl
repnz
dec
aaa
dec
lods
pop
nop
testb
test
in
mov
dec
push
and
daa
cmpl
add
icebp
sti
inc
inc
mov
xor
insb
add
inc
xchg
inc
mov
pop
xor
xchg
cmp
pop
pop
pushf
jmp
in
and
cld
loope
lods
jl
fldenv
xacquire
je
dec
or
into
fnstsw
movsl
xchg
cli
icebp
dec
cmpsb
mov
aam
scas
pushf
jmp
rorb
rclb
or
inc
shrb
insb
mov
push
setae
imul
mov
paddq
mov
iret
scas
in
sbb
sub
xor
mov
mov
nop
fsub
or
outsb
xor
add
out
and
cmpsl
jbe
aad
jo
fldenv
xchg
and
je
xlat
jl
ja
cmp
lcall
test
mov
add
push
sbb
mov
mov
js
dec
orl
les
xchg
cltd
sbb
mov
dec
xchg
out
in
mov
mov
adc
add
dec
jnp
clc
outsl
pusha
lahf
sahf
lds
out
ffreep
lock
mov
outsb
clc
lods
adc
ret
adc
insb
mov
cmp
in
inc
dec
std
out
outsl
xchg
cmc
lret
pop
leave
out
daa
jge
das
dec
inc
jp
movsl
inc
mov
jno
mov
xchg
and
test
insl
lds
stos
fdivrs
ret
cmp
push
js
fbld
fistps
mov
or
outsb
in
aas
loopne
pop
sahf
test
xor
pop
push
sbb
sbbl
aam
xchg
shll
cmpsl
jmp
sbb
push
rclb
or
xchg
adc
cs
and
scas
iret
je
rorl
xchg
lods
divb
pop
neg
push
aad
inc
cmp
loopne
arpl
mov
rorl
fisttpl
mov
jecxz
ljmp
insb
iret
fs
sub
out
pop
sti
test
arpl
repnz
js
or
fiaddl
iret
std
shrl
xchg
dec
lret
jge
pushf
sub
push
mov
std
add
xchg
ljmp
mov
movups
mov
fdivrs
mov
mov
dec
push
mov
cmpsb
je
lds
jno
pop
xchg
inc
dec
fwait
cwtl
negb
mov
add
leave
aas
out
stc
xor
jecxz
add
rolb
mov
repnz
lcall
movsb
jmp
out
dec
or
andl
fisttps
push
loope
sarb
cltd
pop
aad
fisubrl
push
dec
push
test
sbb
jno
ljmp
xchg
adc
in
xchg
mov
push
push
add
fldcw
jae
lods
shll
dec
xchg
jbe
pop
adc
bnd
bound
movsl
sbbb
cmp
subl
adc
jb
insl
xor
hlt
inc
add
ds
and
push
rorl
addr16
inc
out
jnp
jb
mov
fincstp
cwtl
out
xchg
divl
jno
jge
ljmp
xchg
popa
adc
adc
cli
stos
les
push
or
xchg
jo
int
adc
jmp
xchg
popf
subb
xor
pop
imul
fs
dec
xor
lock
push
mov
jne
out
movsl
das
scas
and
hlt
rolb
es
sti
jp
cs
sahf
push
out
push
inc
mov
lds
inc
bnd
fisubrl
adc
xchg
mov
jnp
and
adc
mov
loop
sub
lock
out
mov
or
test
pop
cmp
ret
cmc
and
enter
notl
mov
inc
movsb
xchg
push
push
jecxz
imul
jmp
dec
fwait
adc
cmp
out
pop
bound
in
movsb
or
inc
rol
lahf
jl
aam
stc
lds
push
int3
jmp
push
and
repz
in
arpl
mov
sbbb
xlat
jmp
fsub
clts
xor
lock
ret
leave
out
scas
call
mov
mov
loopne
push
push
pop
or
push
arpl
mov
xchg
into
fisubrs
jg
push
loopne
sarl
data16
dec
je
aam
jmp
ja
dec
push
repz
adc
lock
cmpsl
or
or
cmpl
xlat
and
lcall
adc
fsubrl
dec
fldcw
lods
jne
pop
idivl
inc
mov
and
sarl
mov
das
xor
pop
iret
das
aas
xor
je
in
or
sub
dec
int
in
loopne
dec
mov
loop
in
sbb
push
add
stos
mov
push
fistpll
mov
mov
push
je
xor
push
cld
mov
shrb
enter
ficomps
sbb
cmpsb
lahf
test
sahf
ret
and
xor
mov
andl
dec
es
ret
and
xor
dec
addr16
jnp
stos
aas
inc
xchg
repnz
inc
xchg
push
test
sbb
dec
addl
pop
ljmp
xchg
push
icebp
sub
out
int3
pop
cmp
pop
add
ror
daa
cmpsb
jg
cltd
mov
mov
xlat
jne
pop
cmp
dec
pop
jb
in
mov
mov
lea
scas
mov
jns
sub
xchg
cli
ret
loop
stos
mov
mov
arpl
addr16
jl
or
loop
outsb
inc
rcll
fistps
inc
lcall
push
mov
add
int
ja
repz
or
in
cmp
rcl
jb
aaa
or
out
mov
loop
cmp
or
cli
mov
sbb
test
aaa
ja
orl
arpl
dec
addr16
add
sti
pusha
in
lods
pop
int3
mov
jmp
roll
shrl
sbb
fstpt
mov
sbb
add
jne
insb
adc
mov
dec
mov
mov
xchg
enter
cmp
or
loope
cmp
lods
xor
or
xor
or
mov
call
sub
mov
jecxz
repz
inc
hlt
call
dec
movsb
scas
enter
jmp
lock
sub
lcall
sbb
addr16
xor
inc
adc
aad
jp
add
mov
jecxz
stos
aas
pop
xor
sbb
test
aaa
mov
fcoms
mov
mov
cmp
gs
cmp
fdivrl
out
mov
pop
pop
xchg
add
mov
and
xchg
jecxz
cmp
jle
jecxz
inc
push
std
adc
mov
or
push
ss
sti
fidivrl
out
dec
push
mov
adc
scas
fcmove
out
add
in
mov
outsb
arpl
int3
sbb
push
push
sbb
mov
xchg
ss
pop
sub
pop
fisttps
enter
add
pop
dec
les
stos
scas
mov
stos
stc
sbb
outsl
xor
mov
sub
repnz
mov
push
test
jp
ja
popf
jecxz
je
lret
aam
jae
dec
pop
mov
inc
ds
stos
sub
xchg
aad
sbb
push
mov
and
nop
lds
scas
pshufw
pop
mov
or
mov
adc
rolb
int
mov
dec
lret
jno
or
add
or
loop
pop
inc
mov
lods
pop
xor
lods
jns
sub
jb
rorl
fdivs
int3
and
jle
sub
sbb
lock
ds
pop
fsubrl
stos
rcrl
rorb
lea
sbb
jmp
xor
outsl
jno
lods
adc
mov
cli
push
pop
loop
dec
or
sbb
push
push
mov
int3
test
gs
rorl
lret
stc
push
mov
xor
inc
enter
pop
iret
lret
adc
xor
je
adc
mov
lods
cmp
mov
pop
je
mov
add
sub
jle
mov
mov
pop
fldl
pushl
add
add
nop
inc
jae
aad
jle
out
je
and
jecxz
cld
cmp
sub
daa
jge
add
pop
add
fwait
insb
int3
imulb
push
sbbl
add
lock
out
pop
xchg
pop
xchg
pop
mov
push
mov
dec
pusha
pop
inc
testb
pop
mov
xlat
jg
add
aad
sahf
mov
data16
adc
xchg
jle
loope
clc
pop
popl
rcrb
sbb
fadd
add
push
jp
add
sbb
push
sti
sub
pop
enter
rorl
cs
jno
bound
leave
sub
test
fdiv
js
cmp
jp
sub
in
xor
sub
pop
sub
add
call
push
jnp
mov
sub
scas
shrb
mov
nop
iret
fidivrs
adc
pop
pop
mov
ljmp
les
xor
mov
imul
cmp
sahf
lcall
push
add
lods
dec
enter
smsw
add
lahf
jns
push
rolb
sti
cmpl
repnz
mov
std
xor
aaa
dec
adc
std
jg
xor
scas
inc
xchg
test
xchg
jbe
fnsave
sub
loop
push
out
sahf
cmp
xor
sbb
dec
cmp
inc
je
mov
stc
mov
subl
xor
lods
test
or
add
adc
add
xchg
xor
mov
test
xchg
mov
jnp
ficomps
cmp
inc
adc
and
stos
shll
and
dec
dec
sub
lea
lret
cld
or
cltd
in
push
mov
arpl
enter
lea
inc
repz
mov
imul
pop
ss
into
jb
sub
jnp
cmpb
sub
or
and
sub
daa
gs
aas
cli
and
in
inc
fnstcw
mov
test
inc
out
lcall
mov
icebp
cld
repz
data16
add
ficoms
mov
outsb
out
adc
lcall
lea
xor
and
mov
sarb
mov
dec
add
sbb
or
add
jmp
adc
sub
cmp
and
pusha
push
clc
loop
xor
shlb
fbstp
inc
add
bswap
pop
jbe
popa
mov
jbe
data16
sbb
jb
addr16
cmpsl
jbe
inc
pop
popa
lods
gs
adc
push
mov
add
jo
push
dec
adc
dec
jnp
lock
or
add
inc
jno
jns
inc
insl
pop
lret
xchg
xor
pusha
xchg
push
mov
fmul
hlt
cs
testb
popf
cli
xchg
cwtl
das
fldcw
bound
pop
mov
addr16
test
rol
jp
jo
jo
cmpsl
adc
lcall
fwait
pop
jmp
test
sbb
ljmp
sub
daa
mov
mov
mov
iret
inc
dec
push
das
xor
add
fstp
je
and
insl
imul
fwait
mov
outsl
fwait
sbb
inc
xchg
fst
je
notl
jno
sahf
test
jae
cwtl
insl
add
addb
aaa
mov
xchg
lods
icebp
mov
jnp
or
imul
and
fmuls
jno
dec
addl
inc
pusha
in
popa
push
ss
add
lods
mov
jns
mov
mov
addl
data16
lret
lods
outsl
xchg
adc
lods
or
jle
fsubrs
pop
xchg
incb
xchg
fsubp
repnz
ficomps
sub
xchg
or
scas
mov
cmp
jg
mov
cld
lock
sbb
in
sub
adc
or
je
pop
leave
sbb
mov
ror
into
mov
test
or
popf
inc
inc
or
mov
pop
cmp
add
dec
and
jle
jbe
adc
pop
add
movsb
push
mov
sbb
test
insl
push
daa
add
gs
ja
pop
push
popw
dec
pop
js
pop
popf
stc
xchg
and
xor
adc
in
dec
mov
ss
orl
inc
in
mov
iret
clc
loope
lds
test
add
addr16
add
fisubrl
mov
repz
test
cmp
jmp
movb
jge
scas
stos
xor
dec
lret
hlt
inc
loop
ja
mov
iret
lds
js
loope
sti
mov
scas
mov
scas
mov
loope
fcmovu
rorl
stc
mov
mov
cmp
js
adc
mov
int3
insb
push
or
js
mov
pop
cli
xchg
push
push
xchg
and
adc
int3
ret
mov
sbb
cmc
gs
repnz
inc
mov
imul
jne
dec
cmp
std
sbb
dec
mov
sub
lods
jmp
js
mov
xor
sbb
mov
or
mov
and
sub
cmpsb
fmull
out
adc
xchg
xchg
xor
cli
mov
add
cs
repz
jle
stos
je
lock
sarb
loop
mov
loope
pop
insl
mov
xchg
xlat
lock
stos
loopne
call
repz
xor
in
or
fisubl
push
adc
mov
inc
lahf
jecxz
xchg
push
icebp
imul
je,pt
inc
in
in
pop
xchg
cmpsl
jge
inc
sbb
test
adc
inc
pushf
pop
inc
dec
add
cmp
ret
push
pop
fiadds
neg
lods
fsubl
inc
xchg
sub
mov
xlat
sub
popfw
push
or
and
dec
add
fwait
imul
inc
mov
inc
mov
mov
movsb
lret
adc
loopne
test
inc
test
dec
test
sbb
out
pop
push
fwait
imul
adc
xor
sub
rolb
cli
pop
jnp
pop
push
jg
pop
mov
push
jl
cltd
cmpsb
lret
ja
in
movsb
push
xor
cltd
lret
or
pop
addr16
das
push
pop
sub
ljmp
or
or
lahf
fdivr
sub
not
scas
jns
fs
inc
sbb
push
insl
add
imul
cs
push
xor
add
mov
dec
mov
mulb
call
lahf
jns
ss
dec
shll
push
mov
add
push
fiaddl
add
cmp
jbe
sub
jp
sar
ljmp
lret
sub
nop
and
push
sub
xchg
sbb
cmp
jnp
jb
inc
fwait
xchg
rorb
push
xchg
shll
add
xchg
inc
push
js
cmp
add
fs
add
mov
out
sbb
cmpsb
sbb
daa
xor
mov
popa
insl
in
mov
mov
insl
cmpsl
das
imul
test
lds
into
ja
mov
xchg
lret
bound
pop
std
fldt
sub
aaa
sbb
aaa
test
repnz
mov
cmpsl
stos
jmp
dec
mov
adc
lcall
inc
fistpl
cld
sbb
push
or
push
jmp
test
jb
lea
jnp
ret
xor
ficompl
mov
push
lea
add
mov
out
outsb
push
int
sarl
mov
daa
jae
or
mov
lods
and
push
outsb
cmp
xor
aad
icebp
lea
outsl
jl
pop
sub
jg
push
jmp
add
pop
cmp
sbb
out
fiaddl
outsl
arpl
jnp
mov
jecxz
mov
int
mov
jnp
sti
push
adc
ret
popf
std
bound
fwait
in
add
scas
cmpsl
xor
inc
lods
push
jne
and
hlt
jmp
dec
adc
cmp
rolb
pop
dec
loope
xchg
mov
push
scas
ljmp
sub
into
push
mov
pop
mov
shr
out
dec
fwait
cs
jb
call
clc
sub
pop
mov
jge
inc
pop
xchg
faddl
pop
in
sar
cmc
sahf
inc
fstps
data16
jecxz
xor
insb
sarl
in
dec
xor
lods
imul
movsb
pushf
out
adc
ljmp
lcall
add
inc
jae
into
push
push
jb
clc
jae
xchg
mov
subl
sti
jge
adc
xor
jns
push
mov
xlat
push
sub
mov
pop
test
mov
mov
enter
aam
lock
mov
loope
dec
addr16
std
fwait
mov
mov
addr16
sbb
sbb
out
test
aad
mov
call
andb
or
les
sub
sub
mov
pop
lds
nop
sti
xlat
hlt
out
es
pop
sbb
andl
fnstenv
ret
js
pushf
sbb
jno
jbe
or
adc
mov
pop
clc
mov
decl
aaa
pop
lahf
mov
xchg
xchg
rcrl
addr16
sahf
mov
sub
adc
pusha
mov
mov
adc
jb
sub
or
jmp
aaa
bound
pusha
or
leave
lea
jmp
iret
sbb
stos
pop
je
and
cmp
and
and
pop
sub
adc
pop
mov
jmp
xchg
mov
add
iret
sbb
imul
jb
sbb
push
repnz
fcoms
jmp
push
fidivs
pop
fistpll
cmpsl
pusha
mov
or
xor
push
pop
mov
jb
shrb
push
ror
fidivs
stos
mov
push
or
scas
jg
rolb
mov
andnps
sub
icebp
jg
bsf
xchg
stc
push
js
push
fs
fwait
xchg
bound
or
mov
imul
push
xchg
adc
push
ljmp
push
adc
mov
mov
repnz
leave
push
shlb
xchg
rol
and
roll
push
pop
mov
jae
nop
cmc
adc
in
or
repnz
stos
mov
add
mov
out
add
stc
xchg
inc
mov
out
push
testl
movsl
stc
sub
push
sbb
jle
ror
addr16
or
icebp
and
fnstcw
aas
lahf
add
mov
add
adc
aam
sub
jmp
mov
jbe
sbb
or
xchg
push
or
or
rclb
testb
int
mov
lea
xor
adc
fwait
lds
mov
sub
push
pusha
popa
out
adc
out
jne
mov
push
scas
inc
rep
inc
xor
roll
shll
mov
aam
das
popa
shlb
jl
daa
popl
lret
cmp
jg
dec
fisubs
pop
addr16
push
fidivl
fldenv
mov
or
fs
mov
pop
dec
pop
dec
or
add
repz
bnd
cmp
jno
add
mov
cwtl
ret
dec
in
jg
adc
lods
pop
stos
jne
imull
test
cmp
xchg
je
or
pop
cs
ret
jg
sbb
add
insb
sbb
fiaddl
icebp
je
xchg
fldenv
dec
sub
fistl
mov
jmp
jns
testb
push
popa
fdivl
rorb
cmp
in
pop
add
scas
pop
aam
mov
cmp
pop
mov
push
lret
test
sub
dec
dec
scas
mov
stos
int3
in
js
stos
adc
mov
inc
mov
xchg
pusha
mov
dec
jno
lock
out
out
and
lock
xor
and
add
inc
mov
fldt
iret
negb
shl
or
and
repnz
mov
push
dec
loopne
cmp
test
insb
cmp
mov
adc
lods
and
sbb
cwtl
jmp
pop
scas
fs
jecxz
subl
cmpsl
scas
sbb
popa
fs
sbb
sbb
pop
lods
test
outsl
ret
ja
mov
xchg
mov
add
popa
fwait
add
pop
mov
movsl
xchg
loope
pop
daa
xchg
pop
mov
shlw
or
movsl
enter
cli
mov
cmp
dec
les
xor
ja
scas
add
push
js
ja
add
mov
cs
std
ds
out
aaa
adc
inc
lds
arpl
sbb
push
ret
jecxz
or
fimuls
cmp
adc
jnp
xor
push
pop
xchg
loop
sbb
test
stos
pop
fmull
shl
lret
mov
sub
pop
scas
pshufw
dec
test
out
faddl
ret
roll
mov
in
in
stos
jmp
inc
call
and
cli
mov
insl
mov
pop
aad
mov
adc
rcrb
push
fs
cltd
adc
push
jb
inc
or
andb
push
icebp
jne
add
ror
mov
dec
shr
push
inc
inc
loop
jo
mov
nop
mov
int
mov
int3
lea
ret
cmp
loopne
pop
mov
cmc
mov
lahf
dec
xchg
jns
shll
pop
push
shll
int
ds
mov
sub
cmp
test
xlat
mov
cli
fidivs
lds
sahf
test
and
sahf
scas
sub
clc
xor
ret
mov
movsb
fldenv
ret
dec
sbb
andl
or
les
pushf
mov
sbb
inc
push
std
mov
adc
mov
add
in
add
mov
cmc
push
sub
inc
cmp
push
add
add
scas
push
lods
dec
push
popf
aaa
lock
pop
in
popa
cmp
out
inc
ljmp
sahf
call
jmp
and
or
orl
cmp
push
cwtl
subl
or
sbbb
mov
gs
in
jbe
or
cmc
sbb
jg
add
sub
jo
pop
pop
nop
push
leave
popa
out
jle
insb
cwtl
stos
shrb
test
xchg
mov
sub
xchg
popa
bound
test
jne
mov
repz
xchg
cwtl
xchg
adc
arpl
sahf
ret
shlb
inc
or
jl
pop
stc
cltd
incl
popf
or
xchg
push
jge
cmp
cmp
fdivrs
movsl
sbb
cmp
jle
out
inc
xchg
leave
aam
popf
xchg
into
aad
jg
jo
scas
lods
xchg
lret
ret
adc
jmp
test
mov
xchg
or
aam
inc
gs
jo
dec
push
push
sti
push
scas
adc
shrl
mov
push
xor
push
push
test
cmp
adc
dec
aad
cmp
xor
add
inc
mov
sahf
pusha
or
xor
test
int
or
cmp
jo
ret
xchg
sub
hlt
or
jle
sbbb
lea
scas
inc
jge
rorl
outsb
inc
fstpt
imul
adc
cwtl
clc
mov
pop
jbe
stos
mov
mov
inc
sub
fwait
push
jg
add
cltd
in
sub
add
hlt
xlat
mov
fs
jle
lret
jp
mov
scas
dec
cmp
push
call
stc
shr
and
jecxz
sbb
aas
lods
pop
scas
fimuls
mov
xchg
cltd
sub
or
repz
cmp
mov
sahf
hlt
sub
adc
xor
insb
add
dec
movsb
outsl
shrl
sahf
adc
cmc
mov
add
push
xor
repnz
jecxz
out
xchg
cmpsb
push
xchg
and
jecxz
daa
aaa
sub
cmp
push
out
ret
mov
sbb
loop
jge
mov
lahf
push
jge
shlb
push
cmpsb
adc
inc
dec
xchg
dec
xchg
bound
sbb
push
lret
cld
fstl
pop
xor
arpl
add
icebp
push
xor
into
push
jne
lsl
jge
sub
inc
mov
cmpsl
push
jae
imul
out
sub
dec
inc
inc
test
pop
sbb
popa
jl
push
ret
mov
dec
lods
sti
cmp
xchg
add
xorb
sbb
add
sahf
aam
xor
and
mov
add
fs
xor
addb
aas
sub
aaa
adc
in
mov
popf
mov
or
and
imul
push
xchg
arpl
loopne
xchg
jbe
dec
adc
sti
popa
sbb
into
outsl
call
push
sbb
sbb
sub
mov
push
or
push
sbb
addb
int3
pushf
outsl
pop
xor
xor
jp
orb
ds
sahf
leave
or
negb
cmp
daa
outsb
push
or
das
add
test
mov
cmc
rorb
stos
fwait
ret
jno
xchg
mov
faddl
cmp
cmp
and
test
adc
and
cmpl
movl
cmp
fistpll
pop
sbb
mov
stc
fcmovnbe
pushf
les
repz
mov
cwtl
repnz
mov
pop
data16
mov
pop
jne
fstp
and
ret
adc
or
mov
jnp
add
adc
pop
ja
mov
cwtl
bound
movsl
fsubrl
arpl
pop
in
push
adc
out
mov
fsubs
fwait
sahf
cmp
mov
shlb
mov
mov
mov
push
cmp
mov
dec
fisttpl
push
dec
cmp
push
aas
push
jno
push
sbb
sbbl
repnz
dec
pop
rcll
addb
insb
push
test
pop
sbb
mov
lret
xchg
or
sbb
out
jp
into
cmpsl
xor
daa
jmp
xchg
xor
dec
jbe
xor
call
mov
push
sub
cs
pop
mov
and
cmc
and
push
and
sbb
cmp
dec
jbe
push
sbb
jg
sbb
js
test
push
adc
jo
test
pop
cmp
xchg
adc
xor
cltd
scas
xlat
push
in
jmp
xchg
imul
xrelease
sub
popf
adc
add
pop
pop
lahf
sbb
push
xor
xlat
pop
adc
xchg
popa
rcrb
js
dec
dec
dec
loop
out
jne
inc
out
xchg
mov
xchg
jae
sub
ss
popa
stc
int3
sbb
nop
dec
lcall
and
jb
inc
imul
jo
mov
movsl
fistpl
adc
inc
and
push
in
jne
repnz
adc
ret
lds
inc
mov
pop
cmc
enter
adc
adc
xchg
jle
mov
and
dec
jmp
jl
mov
jns
rcrl
jmp
dec
daa
cmp
sub
or
cmp
into
or
fists
adc
sbb
jnp
dec
lret
dec
repz
pop
lods
pop
jno
pushf
test
sub
push
stc
mov
cmc
fnsave
mov
pop
iret
cmp
sarl
add
in
and
sub
or
jp
cmp
adc
add
mov
jnp
cs
lds
lods
inc
mulb
jae
mov
mov
enter
mov
sbb
mov
mov
stos
in
add
pop
mov
lods
es
sbb
jne
repnz
add
jne
sub
fists
arpl
sti
mov
into
outsb
mov
adcl
movsl
cmp
mov
scas
pop
cmp
sub
cmp
inc
jbe
je
rcrl
mov
mov
insl
pop
nop
jb
call
adc
push
dec
jecxz
xor
icebp
xchg
pop
and
lock
int
push
xchg
xor
loop
pop
lods
mov
inc
and
out
ss
aas
xor
es
and
push
add
xchg
xchg
cmc
and
or
sub
sub
cmpsb
push
ja
jle
lcall
mov
or
imul
mov
push
adc
jg
mov
jle
addr16
popa
xchg
adc
pop
inc
sbb
and
loopne
adc
and
cmp
xorl
shlb
int3
subb
fisttps
pusha
push
mov
es
mov
cmpsl
cld
push
repnz
bound
or
add
dec
or
sbb
sbb
add
push
out
mov
scas
cwtl
fwait
stos
sti
and
lret
outsb
sbb
insb
dec
loop
test
dec
mov
mov
mov
loop
add
decb
jl
aaa
pop
scas
mov
cmc
dec
push
xchg
lods
pop
ds
pop
sbb
imul
loope
xchg
into
testl
cld
lret
mov
test
mov
pop
std
imul
dec
out
xchg
push
ja
pop
ds
enter
adc
pop
or
iret
pop
mov
cltd
mov
jmp
fwait
mov
pop
jnp
shlb
jp
xor
arpl
cld
enter
gs
or
loop
mov
ljmp
lahf
jmp
std
call
sahf
cmpsl
call
pop
xchg
mov
pop
cmpsb
cmpsb
mov
call
xlat
bound
sub
inc
xchg
mov
shll
or
dec
lret
jno
xchg
mov
xchg
sbb
mov
mov
mov
lcall
cmp
dec
jecxz
aam
pop
jle
clc
jae
mov
ss
test
aas
mov
fwait
sub
imul
daa
xchg
xor
and
sub
adc
outsb
mov
jo
ret
jge
std
jmp
xor
and
ret
mov
idivb
pop
xor
enter
lods
aam
mov
stos
push
mov
dec
test
cmp
adc
jmp
jmp
movsb
mov
xor
push
cli
insl
loope
arpl
and
adc
push
mov
nop
jg
jp
adc
dec
lods
mov
pop
push
jne
inc
stos
push
testl
clc
push
arpl
sub
xlat
jns
stos
stos
inc
cli
dec
xchg
cs
mov
movsl
stc
jns
fadds
lds
insl
sub
jae
push
fdivl
jge
mov
dec
les
xor
and
xchg
mov
jmp
movsl
inc
test
fwait
je
sub
dec
sub
clc
xor
cmc
push
add
push
gs
fstl
hlt
cmp
dec
cmc
dec
xchg
cmp
mov
sahf
xchg
xor
in
jae
fmulp
mov
stc
or
sub
fistps
push
in
lods
sbb
sbb
push
xor
or
inc
xor
inc
add
mov
mov
adc
mov
sbb
adc
clc
push
mov
sbb
mov
and
jbe
xor
pushl
mov
push
into
pop
mov
cwtl
dec
repnz
cmp
std
stc
mov
pop
mov
mov
push
sahf
stc
aaa
into
ss
mov
cmpsl
repz
dec
mov
loop
xor
scas
push
jnp
jmp
in
icebp
xchg
call
jbe
or
xchg
inc
adc
inc
or
or
pop
addr16
fs
shlb
push
xchg
pop
mov
mov
lret
xorl
add
lcall
sub
pop
push
sar
xlat
push
jns
test
in
xchg
add
sub
in
sar
lock
das
in
xor
or
pop
push
inc
adc
adc
add
dec
push
shrl
es
push
fimull
jecxz
dec
divb
lret
pop
aaa
movsl
scas
push
out
dec
ja
dec
insb
inc
mov
mov
movsb
jge,pn
mov
mov
xchg
ss
fdivrl
lods
adc
rol
jbe
jne
loope
cmp
mov
mov
loope
dec
fwait
shlb
xor
and
les
mov
xchg
loope
adc
inc
cs
dec
repnz
dec
jl
or
imul
fimuls
shrl
dec
jne
or
inc
lods
and
rcrb
sbb
cmp
push
pop
lret
out
sbb
test
xlat
cmp
xchg
pop
sbb
mov
lock
insb
adc
and
cmp
xor
sbb
jge
dec
mov
rcl
mov
jo
cwtl
lcall
roll
int
pusha
ret
jmp
lahf
push
push
mov
push
inc
push
cmp
xor
jg
add
mov
ja
sbb
cmp
dec
mov
lret
cmpsb
xor
adc
not
push
cld
cmp
add
int
lods
xor
pop
mov
dec
adc
sub
and
outsb
cmc
jecxz
mov
sar
mov
lock
mov
pushw
pushf
bound
add
outsb
leave
add
lret
stos
mov
jecxz
lahf
fiadds
in
daa
scas
imul
mov
mov
rcll
cmp
lret
repnz
adc
iret
lret
stos
push
xchg
js
loop
mov
es
or
dec
je
daa
lods
outsb
repz
sub
sbb
adc
mov
xchg
xor
in
repz
shll
out
testb
and
pop
and
cmpsl
jo
push
lock
sub
inc
xchg
xor
pop
jo
inc
sahf
jecxz
in
cmp
lea
mov
jge
or
or
or
js
mov
push
fcmovbe
test
add
in
test
push
inc
out
rorl
mov
sbb
popa
mov
scas
xchg
imul
push
out
lret
aas
and
jo
imulb
jno
out
loope
rolb
push
mov
adcl
add
lods
dec
mov
lods
imul
and
imul
scas
jnp
jg
jmp
pop
into
fdivrl
les
ljmp
in
push
and
pop
imul
movsl
fiaddl
repnz
mov
inc
lret
arpl
lahf
cmpsl
imul
sub
or
pop
sub
sqrtps
imul
dec
mov
fstl
xchg
mov
decl
psubusb
dec
dec
sbb
push
cld
iret
ds
pop
or
push
clc
mov
sbb
xchg
sbb
sbb
es
push
sub
test
sub
shll
aas
inc
aad
mov
repnz
in
sbb
popa
sub
dec
enter
ficoml
jmp
cmp
xchg
mov
test
xor
inc
out
ficoml
xchg
dec
pop
jmp
add
inc
sub
lcall
sub
and
xor
xor
mov
lret
or
adc
imul
xor
aaa
dec
jnp
in
aaa
xor
int
aaa
or
sub
sti
or
lods
dec
pusha
mov
incl
bnd
in
addr16
push
cmp
jno
lret
dec
xchg
addl
inc
xchg
xor
xchg
sub
sub
push
scas
cmc
dec
xor
popf
test
lahf
stos
int3
push
sti
dec
lds
pop
mov
jbe
popa
or
cmp
jne
mov
addr16
out
dec
in
or
jnp
inc
jmp
xchg
mov
jnp
pop
mov
fdivrl
push
inc
popf
mov
sub
call
cltd
js
jne
add
test
inc
iret
jno
es
lea
gs
ja
das
ret
pusha
repz
ss
in
cmp
adc
jae
iret
and
mov
add
aaa
or
xchg
repnz
ret
dec
mov
cmp
lock
cwtl
xor
mov
scas
jmp
stos
pop
pop
mov
dec
lods
sbb
roll
mov
lea
mov
and
fstl
hlt
inc
pop
mov
push
xor
and
sbb
loop
les
ljmp
xor
mov
insl
adc
ds
jae
sbb
rorl
outsb
cmpsl
leave
fs
push
enter
notw
or
push
push
es
xor
adc
xchg
jp
add
ret
cmp
sahf
xchg
fisubl
lcall
jo
jmp
test
lret
xchg
cmc
stc
pop
jb
or
jae
into
or
adc
pop
sub
stos
stc
push
repz
pop
pop
pop
fsubrs
mov
pop
imul
lds
xchg
aaa
imull
and
adc
outsl
push
mov
push
js
xchg
mov
sti
sub
bound
sarb
repz
pop
jmp
push
mov
out
clc
and
lods
pop
popf
pop
test
movsl
fwait
xchg
cmp
ds
mov
pusha
jmp
jno
insl
icebp
cli
js
xchg
pop
sbb
test
cmp
nop
rorl
arpl
stos
movsb
fs
push
ret
call
pop
in
inc
mov
icebp
sub
shl
fisubs
xor
jns
out
iret
cmp
lret
stos
enter
pop
scas
mov
lods
inc
arpl
dec
xor
xor
jo
xor
inc
or
and
outsl
cmp
pop
and
andb
inc
loopne
pop
sub
mov
mov
icebp
mov
and
rorb
push
cmp
pop
in
out
add
imul
mov
mov
fimuls
fdivrl
loope
sbb
adc
jle,pn
inc
xchg
bound
push
imul
mov
rclb
rorb
ds
push
test
cwtl
sbb
jae
pop
pop
aas
dec
mov
scas
cmp
xchg
sarb
xchg
sub
push
xchg
in
clc
jnp
push
cltd
jno
aas
and
xor
je
jne
test
xor
pop
sbb
adc
lahf
mov
mov
xchg
jecxz
addb
ror
mov
cmpsl
xlat
jle
aad
sbb
inc
or
sub
pushf
sub
sub
pop
jle
das
loop
ja
rcll
add
or
sub
pop
sahf
pushf
cmpsl
test
ja
mov
pop
push
roll
inc
lcall
add
mov
push
cmp
xor
adc
adcb
into
jo
lods
gs
pop
ret
lret
and
push
in
scas
inc
adc
jl
xchg
cs
fsubrl
mov
cmp
out
dec
jne
jp
sub
movsb
in
sbb
mov
mov
hlt
ret
cmp
mul
pop
push
callw
iret
mov
jne
clc
push
pop
int3
fdivs
mov
lcall
mov
or
jmp
or
cmp
inc
adc
int3
xor
mov
int3
add
and
jle
arpl
lods
mov
inc
fdivs
pop
jecxz
inc
mov
xchg
push
shlb
cmp
mov
push
add
jle
add
ljmp
xor
sahf
push
out
and
insb
dec
add
pop
fimuls
sbb
push
inc
cmp
mov
dec
clc
xor
bound
cld
mov
andl
mov
pop
push
ror
sub
mov
jns
dec
std
push
dec
cli
shlb
mov
and
push
and
pop
lods
sbb
sub
add
ret
iret
sbbl
fwait
in
testl
repnz
inc
xchg
mov
add
cmp
gs
cmp
push
xchg
and
xlat
add
push
dec
push
inc
aaa
pop
lea
sti
fadds
fsubp
outsl
daa
and
mov
faddl
loop
gs
pop
cmp
jmp
mov
ret
push
imul
push
xor
mov
mov
mov
inc
mov
std
pop
jecxz
fidivs
outsl
xchg
pop
dec
jno
jnp
fldz
cli
xchg
mov
mov
inc
cltd
lods
int3
push
mov
loope
out
testl
mov
sbb
dec
add
rcl
mov
aam
scas
int3
in
sbb
insl
movl
inc
repnz
out
in
dec
sbb
jg
rorb
stc
mov
adc
jecxz
cltd
fcompl
fldcw
adc
js
or
ljmp
sbb
mov
xchg
lds
xor
sub
pop
add
and
push
cmp
cmc
cltd
pop
push
xor
jl
and
adc
and
aaa
xor
lcall
fcoml
aam
mov
jecxz
add
idivb
repnz
or
pop
ficoms
lcall
jl
or
pop
mov
pop
fs
pop
sub
pop
xchg
mov
mov
dec
sarl
fs
adc
or
leave
call
push
repnz
push
out
push
cmp
mov
lret
daa
scas
or
mov
sub
mov
rcll
jle
sub
and
mov
push
push
scas
cmpsb
mov
les
cmp
je
pop
sub
jae
or
in
lods
jmp
inc
icebp
cmp
push
jns
out
iret
and
test
jae
mov
out
pop
dec
call
addr16
sub
inc
jl
fidivrl
xchg
jp
inc
and
stos
mov
pushf
xor
mov
jne
nop
push
data16
cli
jp
jae
js
cs
adc
push
dec
xchg
hlt
dec
rcrl
mov
in
pushf
aam
pop
inc
clc
jge
rclb
xor
sub
xchg
add
inc
pop
and
leave
lea
mov
jecxz
dec
pop
jb
aam
gs
pop
inc
xchg
fldenv
out
mov
jp
cmp
pop
aaa
fstpl
mov
fdivrs
jecxz
mov
int
in
pop
adc
adc
dec
testl
inc
push
mov
pop
xchg
pop
or
or
adc
test
pop
jp
jmp
andl
cli
cmp
push
mov
popa
pop
xor
cwtl
std
inc
xorl
mulb
cmpsb
ds
jle
or
addl
jnp
jecxz
outsl
sub
xchg
je
add
repnz
setne
std
xorl
add
call
fbstp
mov
sub
fwait
data16
jle
cmpsl
sub
mov
push
mov
xor
imul
cmpsb
inc
push
ss
jg
rorb
shrb
sub
rcrb
fiadds
jo
in
or
or
xchg
xor
pop
push
fstpl
pusha
fildll
jns
mov
xchg
push
clc
adc
into
cmp
or
pushf
fldt
mov
sti
inc
push
mov
xlat
xchg
add
invd
lds
mov
inc
outsl
aam
sub
nop
fs
push
and
fnstcw
cs
jp,pt
out
insl
inc
mov
pop
fdivl
sbb
xchg
mov
xchg
jecxz
sti
or
dec
jbe
stos
lea
dec
add
and
repnz
inc
arpl
xor
cmpsl
test
outsb
xor
lret
ror
dec
sbb
ds
cmp
mov
mov
mov
xchg
cmp
lods
dec
mov
loope
jne
out
dec
jl
push
sahf
insl
or
scas
jnp
dec
xchg
jle
jae
cmp
mov
jne
fs
mov
xchg
mov
xor
mov
pop
ja,pn
stos
int3
cwtl
mov
cmp
test
cmp
pop
test
push
scas
mov
xlat
fbld
inc
addr16
push
inc
cmp
sub
adc
dec
stos
lods
xor
es
xchg
jmp
inc
shll
push
dec
into
dec
lds
pushf
sbb
and
xor
xchg
fisttpl
inc
data16
push
push
jle
xchg
push
sub
push
enter
enter
adc
mov
or
adc
adc
xchg
mov
inc
sub
cli
lret
sub
daa
pop
add
shlb
mov
test
mov
imul
jl
testb
xchg
int3
jne
loop
aad
adcl
cmp
clc
fbstp
mov
lea
ret
inc
add
add
dec
push
loopne
inc
sbb
les
sub
xchg
cmpsl
lahf
js
loopne
lods
cmc
sti
clc
test
xchg
and
fistl
cld
mov
sarl
shll
fidivl
push
cltd
and
shll
lods
aam
clc
mov
cmp
clc
pop
dec
xchg
lods
dec
leave
stc
or
mov
inc
pop
jge
popa
lock
jne
nop
mov
insb
call
jo
out
mov
in
dec
or
rcrb
or
aaa
sub
fwait
arpl
sarb
shlb
arpl
fcmovu
push
jle
movsl
lret
mov
cmp
movq
scas
scas
popf
dec
inc
or
sbb
outsl
out
sbb
jb
fldenv
mov
or
push
fisttpll
lea
in
cmp
ss
mov
add
fisubrs
jns
push
iret
xchg
push
out
fdivs
mov
mov
pop
subb
sbb
or
je
test
in
push
jae
out
mov
fldt
popf
test
dec
mov
sub
add
nop
jae
stc
lock
xor
jge
xor
dec
mov
inc
icebp
xchg
push
push
xor
jecxz
test
ret
jne
pop
cmc
inc
enter
cmpsl
and
jecxz
iret
daa
mov
inc
cmp
add
lods
jnp
into
mov
sti
dec
jo
push
add
dec
sahf
pop
addr16
movsl
iret
lahf
push
mov
push
in
jecxz
jae
rcrb
rcrl
xchg
push
es
sbb
hlt
or
jne
adc
jge
mov
pop
mov
scas
test
subl
push
lret
pop
push
sub
xchg
jecxz
popf
adc
fcmovb
out
push
sahf
bound
fcoml
push
out
mov
lahf
lea
rcll
leave
and
imul
out
test
pop
mov
dec
jo
test
cs
add
pop
andl
scas
push
mov
add
test
negl
dec
push
ss
sti
movsb
pop
aad
pop
jnp
push
sbb
or
sub
into
and
das
sub
dec
leave
xor
cmc
or
xor
shll
or
subl
dec
or
loop
lock
xchg
sub
lahf
jbe
sbb
scas
stos
xor
ja
repnz
daa
pop
or
fs
mov
jge
popf
mov
pop
or
popf
fwait
pop
pop
shlb
sub
rclb
js
mov
cmp
fmuls
add
or
mov
mov
scas
aam
jnp
out
mov
inc
lahf
loop
adc
add
test
out
mov
ds
sbb
jge
lods
cmpsl
mov
push
inc
cmp
and
or
lret
decl
stos
fs
and
mov
push
pop
mov
mov
std
frstor
jbe
mov
cmp
je
int
sbb
imul
inc
lret
sub
add
enter
pop
inc
dec
mov
and
mov
aas
mov
ret
adc
cmpsb
cmp
pusha
sub
push
imul
test
xchg
popf
mov
fimuls
das
mov
jg
mov
push
jnp
sub
xor
or
fcompl
mov
dec
dec
mov
xchg
aas
dec
inc
pushf
cli
cwtl
sub
cmp
jecxz
jo
mov
icebp
fcoms
mov
jnp
nop
into
and
add
dec
mov
fs
fwait
xchg
lret
popf
rcr
scas
nop
push
es
push
nop
or
inc
bnd
iret
sahf
jnp
popf
scas
out
inc
rolb
cltd
mov
shr
sub
or
sbb
mov
cwtl
rep
sbb
xchg
inc
pop
xchg
add
push
mov
inc
sbb
popf
and
or
outsl
clc
jp
enter
xor
pop
push
enter
sub
or
addr16
or
cmc
xor
ss
in
incb
jno
sahf
fisubl
pop
mulb
lret
dec
or
hlt
fimull
aam
repz
xor
mov
imul
ljmp
mov
push
add
pop
push
lcall
icebp
adc
int
cli
bswap
outsl
adc
leave
jno
fdiv
nop
adcl
cmp
sub
xor
pop
jae
mov
aad
mov
outsb
cmp
xor
fsubrs
les
pop
mov
xchg
xchg
ficomps
lods
test
jge
adc
mov
rorl
iret
mov
in
leave
fdivr
fbld
addr16
aas
fadds
xchg
enter
enter
pop
cmc
cmpsb
mov
jg
jne
scas
sahf
mov
test
or
sbb
daa
adc
xor
add
aam
imul
repz
and
xchg
cmpsb
sub
loopne
push
call
push
jno
into
pop
pusha
jns
add
mov
xor
filds
sbb
addr16
cmp
cmpsb
pop
cmc
and
sub
fisttpl
mov
test
loopne
pop
jns
inc
cmp
in
nop
inc
pop
inc
add
popa
outsb
gs
mov
shl
sub
push
xchg
push
inc
sahf
mov
sbbb
outsb
push
pop
ljmp
cmp
ss
lret
gs
lea
jp
sti
pop
jle
sbb
mov
push
cmpsb
aam
cmpb
stos
mov
lods
jbe
sarb
xor
cmp
push
ret
dec
sub
out
sub
mov
lahf
mov
bound
out
daa
ljmp
js
push
jnp
in
or
cmpsl
ret
sbb
mov
push
jmp
mov
cld
cmp
iret
push
dec
mov
je
clc
bnd
push
mov
pop
fwait
push
mov
jp
jns
ljmp
sbb
xchg
push
mov
jns
fidivs
orb
and
scas
hlt
inc
movsl
stc
mov
lret
mulb
dec
cmp
jb
fwait
cs
push
lock
cmpsl
mov
adc
lock
pop
jl
fdivrl
hlt
xor
test
std
mov
stos
cmp
outsl
insl
arpl
mov
push
xor
push
push
idivb
stos
addr16
sub
and
jne
in
jle
xchg
int
stc
pop
sub
jp
mov
ret
xor
sbb
mov
fisttpl
hlt
mov
jae
cmp
cs
jmp
add
adc
and
es
lret
pop
push
fadds
sub
sbb
xorb
scas
sbb
xor
jle
jl
push
cmp
sub
xchg
mov
xchg
xchg
aaa
adc
iret
insb
cmp
jne
daa
xor
adc
push
aas
and
xchg
and
pusha
dec
movsl
push
outsb
and
inc
mov
xchg
pop
movsb
in
adc
jl
lret
push
lcall
orl
jl
call
fisubrs
arpl
jno
xchg
pushf
add
adc
xchg
lcall
mov
fsubrl
xor
popf
xor
xchg
addr16
xor
out
stc
out
mov
dec
and
bound
jg
push
mov
jle
kaddq
lods
scas
rcl
xor
jae
hlt
push
ficomps
mov
mov
pop
inc
nop
mov
enter
fsubs
fnstsw
push
push
repz
out
mov
sbb
sub
out
enter
lret
lsl
mov
cmp
cmp
jnp
in
jle
mov
xor
xor
ret
aas
inc
flds
std
ss
xchg
sub
add
fildll
dec
test
popf
adc
mov
test
aas
cli
stc
inc
es
add
push
or
pop
lret
cmp
aad
mov
adc
fidivs
out
iret
and
out
sbb
cmp
aam
sub
movsl
aas
insl
ret
fnstenv
sbb
sub
fsubrp
aaa
pslld
mov
push
jnp
loope
or
sbb
in
push
ret
sub
insb
mov
mov
imul
dec
dec
adc
pop
xor
shl
aas
movsb
inc
sarl
cltd
xchg
fwait
push
jl
shl
jp
stos
add
jge
popa
inc
mov
int
data16
dec
and
stc
xor
push
inc
cltd
dec
outsl
xchg
es
es
cmp
jecxz
icebp
insb
add
pop
call
fldl
lret
push
movsl
dec
mov
movl
std
scas
jge
test
cli
dec
shlb
add
gs
ljmp
mov
xchg
dec
pop
sti
fwait
mov
leave
sbb
lds
lock
out
dec
sub
data16
and
decl
and
in
outsl
mov
xor
lock
outsl
dec
add
cmp
pusha
and
mov
in
fs
inc
fstpl
mov
mov
ds
bound
imul
jle
nop
and
adc
mov
mov
ds
mov
sbbl
aam
push
aaa
mov
mov
pop
into
cmpsb
imul
fstpl
xchg
shrl
sbb
fstpl
sub
mov
pop
mov
std
icebp
lock
xor
jle
ja
insb
iret
jecxz
push
mov
mov
sbbb
fstl
lea
xor
fcmovbe
pop
push
mov
sub
dec
jo
bound
mov
adc
movsl
add
cmp
inc
mov
bound
mov
sbb
mov
je
loope
lds
clc
pop
and
xchg
rcll
fsts
xor
fucom
mov
xchg
ljmp
out
push
leavew
dec
cmp
test
sbb
ja
jnp
sub
pushf
lods
adc
inc
leave
pop
in
fisubl
jb
mov
imul
popa
sbb
imul
aaa
lock
dec
xchg
xchg
jo
sub
jnp
push
sub
cmpb
and
inc
popa
pop
loopne
jnp
jecxz
loopne
pop
and
lods
in
dec
xlat
cmp
aam
adc
mov
pop
sub
lcall
or
repz
das
sbb
insl
aaa
inc
cmp
sbb
lahf
popf
or
mov
out
js
jbe
push
inc
jge
push
cli
hlt
popf
xchg
cmp
stos
iret
mov
jle
sub
cmp
jbe
inc
das
inc
imul
fdivl
sbb
xor
dec
mov
add
and
stos
mov
aam
cmpsl
cmc
test
jl
sbb
push
out
loop
fbld
push
jmp
sub
popf
inc
jbe
bound
xchg
ds
outsb
jg
ja
cli
in
out
sbb
xchg
xor
push
pop
mov
dec
jb
jno
mov
mov
ficoml
repnz
ret
shl
lock
stc
adc
insb
lds
xlat
loope
jbe
arpl
jmp
fsub
mov
cmp
lock
and
adc
sub
push
add
clc
inc
jns
dec
shlb
neg
mov
mov
sbb
ljmp
adc
add
ja
or
je
inc
mov
sbb
cmc
out
and
fwait
mov
test
cmp
aas
dec
test
cltd
into
pop
sahf
rorb
push
sbb
movhps
int
mov
jge
push
inc
scas
cmpsb
push
inc
xor
test
push
sub
fcompl
xchg
xchg
loopne
dec
ss
test
cwtl
push
ds
ljmp
pop
dec
sub
xor
and
jmp
pusha
leave
gs
fwait
push
dec
punpckhdq
fistl
loope
mov
pop
aas
into
in
enter
xor
maskmovq
sbb
iret
xor
out
dec
dec
test
or
loope
mov
mov
test
mov
repz
sub
or
pop
sub
xorb
scas
xchg
lcall
lds
ja
mov
xchg
mov
dec
ret
add
adc
cmp
mov
divb
ss
punpckldq
leave
xor
flds
out
lods
out
and
stos
or
fstpt
push
aaa
mov
sub
sub
push
cli
jl
enter
cld
mov
mov
mov
fdivrs
inc
cmpsl
pusha
or
sbb
mov
and
or
mov
movsb
push
in
or
pop
aas
stos
pusha
xor
pop
sti
add
sbb
inc
mov
jno
loop
add
sub
mov
mov
ret
push
popa
stc
stos
jmp
xchg
push
shll
das
sbbl
xor
push
or
push
jne
push
cmc
loopne
sbb
cmpsb
push
test
jb
jne
xchg
loopne
pop
dec
inc
adc
sbb
mov
sbb
dec
ficompl
fwait
push
pushf
in
enter
pop
cmp
movsb
sarb
repnz
pop
sub
das
lret
mov
add
sub
mov
inc
mov
adc
sbb
enter
hlt
pop
outsl
xchg
xchg
push
out
xchg
sub
dec
ljmp
inc
dec
sbb
hlt
rcr
testb
jnp
ror
daa
pop
fcmovu
out
mov
cmpsb
jne
xor
or
and
jecxz
out
fcoml
cmp
imulb
mov
xor
cltd
outsl
mov
mov
cld
sar
loop
ret
or
sub
out
inc
and
dec
sahf
inc
mov
and
pop
dec
xlat
mov
mov
xchg
adc
adcl
cli
mov
fcomps
cmp
xor
push
lret
inc
jno
pop
lds
add
aas
in
mov
fnstenv
aam
in
mov
jae
and
fisttpll
and
mov
sbb
aas
subb
mov
cltd
fldcw
repnz
loop
cld
mov
rcrb
fsubrl
fwait
repnz
jo
push
aaa
out
and
cmp
rolb
mov
repnz
mov
and
jno
adc
jl
pop
mov
lods
xor
push
jo
mov
fmulp
or
btc
bound
outsb
jge
xchg
lahf
subb
ret
xchg
xchg
xchg
in
push
sub
dec
movsb
call
inc
or
sub
pusha
add
cmc
cmpsb
shl
addb
cmpsl
jae
and
outsb
pop
xchg
bound
fsubrl
rorb
je
mov
sti
cmp
and
push
stc
sub
iret
ffreep
in
inc
lret
je
icebp
lods
sub
pop
mov
fs
mov
int3
movsb
idivl
fcmovu
add
subb
clc
aaa
repz
mov
push
rolb
push
and
and
pop
repz
leave
and
shlb
inc
rol
inc
imul
pushl
sbb
scas
enter
movsb
pop
andl
sbb
push
lods
push
ja
popa
sbb
or
stos
int
mov
fsincos
push
lcall
sbb
jne
aas
movsb
cmp
scas
xor
scas
inc
dec
push
dec
dec
jno
jns
mov
shl
xor
cmpsb
lret
sub
ret
imul
or
fstpt
push
loop
inc
outsb
jmp
es
cld
dec
daa
jae
outsb
dec
andl
mov
addr16
add
ja
fisubs
add
jge
xchg
loopne
add
mov
jo
int
and
divb
pop
pop
cmp
sbb
fs
shl
inc
xchg
jecxz
test
popf
sub
jecxz
insl
adc
jl
and
test
push
je
ret
mov
cmp
loopne
fadds
or
call
and
mov
mov
jecxz
into
sbb
pop
sti
or
cltd
pop
out
push
sti
mov
lock
dec
xor
sub
and
adc
mov
ffree
test
loope
cmp
push
ret
sub
fistps
and
pop
test
cli
cmpsb
and
push
xchg
adc
gs
clc
mov
cmpsb
push
mov
xor
test
xlat
push
pop
inc
push
cwtl
cmp
int
inc
lcall
mov
xchg
inc
or
popf
mov
push
add
mov
cmp
int
mov
mov
cld
test
ret
daa
jle
jne
sbb
xchg
sbb
xor
mov
imul
cltd
add
or
mov
push
xor
jle
pusha
icebp
mov
add
xor
adc
lahf
hlt
pop
add
sbb
lret
shll
pushf
es
jl
xchg
imul
xor
or
mov
xor
cmp
cs
fbstp
lds
movsl
popa
mov
lds
xchg
inc
jl
sbb
lods
cmp
mov
inc
mov
xorl
rcl
or
sbb
pop
jecxz
xchg
clc
jae
into
pop
xchg
sub
test
ds
in
dec
pop
pop
dec
adcb
dec
push
dec
hlt
sbb
mov
iret
jnp
xchg
mov
imul
pop
push
mov
loopne
adc
scas
mov
mov
cld
stos
outsl
insb
imul
push
ret
test
mov
mov
dec
lcall
sub
pop
lds
pop
xor
mov
pop
aaa
ds
sub
repnz
push
inc
dec
fisubs
movsb
inc
sub
data16
aam
rep
mov
mov
leave
gs
push
xlat
push
cmp
jle
push
jb
jno
ror
sbb
push
fs
mov
or
ss
mov
mov
scas
and
mov
lret
add
pushf
pop
pop
jnp
lahf
push
popa
addb
cli
inc
inc
inc
mov
faddl
repnz
xchg
dec
fldt
das
cwtl
test
cld
xchg
sub
xor
xchg
adc
sub
cmp
rorl
xchg
cmp
bound
add
out
mov
sbb
cs
imul
shll
xchg
fisttpl
add
mov
gs
pop
and
les
inc
arpl
fidivl
scas
mov
das
adc
into
outsb
jnp
cmc
ret
adc
imul
daa
fiaddl
inc
add
fst
pushf
dec
add
fnstsw
inc
outsb
adc
scas
addr16
add
lods
xlat
xchg
xchg
cmp
inc
add
cmp
jp
sahf
aam
ja
mull
inc
mov
jns
sub
lods
sar
insl
cwtl
ror
pop
je
lock
pop
push
outsl
xorl
xchg
lret
pushf
cmp
icebp
sub
leave
call
xchg
xchg
dec
mov
mov
dec
addl
mov
mov
and
mov
push
nop
cmp
or
and
pop
pusha
inc
repnz
push
dec
imulb
pop
divb
dec
pop
mov
sub
push
xor
mov
loopne
jns
add
cli
out
pop
push
out
clc
sti
test
cmp
jge
movsl
fists
aam
ds
stc
cmp
fldt
fnstcw
sub
adc
inc
inc
pop
mov
mov
lcall
loop
ja
pusha
dec
testl
dec
pop
push
outsb
fidivrs
pop
in
mov
sub
jb
sbb
loope
cmc
adc
push
sub
repnz
idiv
jns
shrb
in
ds
dec
rclb
shrl
fnstcw
int
pop
dec
xlat
out
stc
lock
bsf
loop
mov
lock
mov
push
test
std
sbb
sahf
add
in
xlat
pop
rclb
lds
pop
mov
jl
arpl
mov
mov
adc
mov
adc
pop
mov
es
lahf
addr16
aaa
cmc
stos
es
mov
cmp
mov
fwait
add
sbb
xchg
mov
ret
mov
pop
popf
shlb
sub
pop
xchg
out
sbb
cmp
fsts
lods
jle
dec
cli
jl
pop
movsb
push
xchg
jmp
mov
out
push
jbe
inc
test
and
sub
add
js
xchg
fsubrp
cmp
outsl
out
out
jl
inc
push
mov
sti
aad
in
dec
or
lds
push
xor
gs
sbb
mov
mov
cltd
int3
pop
test
jns
ja
insb
ret
or
mov
repz
cmp
xchg
lret
cmp
jge,pt
fcompl
sbb
scas
jmp
adcb
pop
xor
mov
pop
sub
inc
iret
jmp
jbe
jnp
add
setb
pop
push
das
lock
pop
dec
jbe
repz
lret
movsl
out
jg
push
outsb
ds
and
jecxz
scas
mov
fidivl
mov
mov
movsl
scas
pop
and
push
into
inc
sti
loop
push
test
jecxz
out
fdivrp
ficoms
sbb
sub
loopne
xor
lds
jl
or
sub
arpl
xchg
mov
cmp
sub
pop
sbb
and
cmp
into
mov
push
leave
xrelease
mov
inc
xor
adc
cltd
sti
scas
shrb
push
sbb
fistpll
ss
xchg
sbb
iret
js
addr16
dec
inc
scas
std
loope
rcll
bound
pop
dec
lcall
out
xor
imul
fs
imul
dec
pusha
sub
fbld
imul
lret
lock
test
ja
lods
jmp
lcall
sub
jp
lret
enter
and
nop
ljmp
imul
ficomps
xor
loopne
jg
sbb
push
aam
adc
push
and
adc
into
mov
and
push
out
fsubr
clc
pop
sbb
lods
inc
xchg
loopne
xor
ljmp
imul
lahf
adc
fbld
xchg
sub
cmc
popl
sub
addr16
mov
add
fsubs
mov
sbb
mov
lret
xchg
cmp
es
stos
sub
cmp
cmpsb
je
jno
fcompl
call
sub
enter
jecxz
add
loop
jne
data16
leave
cld
xchg
sbb
push
sub
add
aaa
and
adc
aam
and
fdivl
sbb
or
por
or
adc
xor
int3
ss
dec
inc
and
xchg
clc
push
clc
sbb
std
rorl
and
dec
sub
fadds
mov
into
nop
push
and
pop
cmp
imul
xchg
ret
sar
inc
push
fistl
bound
inc
mov
add
addr16
mov
push
cwtl
lahf
xchg
outsb
into
jg
rol
inc
pop
xchg
test
mov
imull
sub
inc
movsb
mov
in
js
inc
push
popf
inc
xchg
inc
jno
pmaxub
cmp
push
mov
daa
imul
cmp
fdivs
push
xchg
sbb
cli
pusha
cmp
mov
scas
push
cld
pop
in
sub
inc
cmpl
push
adc
imul
testl
enter
sub
jg
cli
mov
or
xchg
lcall
std
cld
push
rolb
xlat
cmp
les
inc
lock
mov
gs
in
inc
je
or
popa
add
arpl
add
inc
xorl
add
sub
fmull
jmp
mov
ja
ret
sub
push
push
push
xchg
fwait
mov
leave
jb
inc
push
call
lret
imul
into
or
push
clc
aas
test
sti
xor
xchg
mov
out
lret
movsb
aaa
pop
insb
xchg
andl
in
or
xchg
pop
shl
mov
lods
sbb
fstl
je
mov
dec
enter
xor
inc
pop
cwtl
pusha
jmp
lea
fcompl
insl
mov
jns
scas
clc
dec
xor
popf
xchg
imul
adc
mov
rcrb
data16
clc
fndisi(8087
std
enter
pop
out
push
int3
fs
mov
subb
divl
sub
cmpsb
xchg
mov
cmp
pop
jle
adc
dec
cmp
insl
cmp
fimull
mov
ss
stc
sahf
inc
xor
mov
bound
mov
faddl
js
jge
addb
es
aad
lcall
xchg
cld
jae
int3
aad
std
jle
and
int
dec
inc
mov
es
xchg
outsl
jns
mov
inc
rorb
clc
sbb
xchg
pop
dec
sbb
movsb
push
sbb
outsl
dec
cmp
or
mov
stc
jg
and
and
sub
imul
fwait
clc
sbb
mov
jp
mov
push
xor
dec
fwait
xchg
fcmovne
les
fwait
lods
and
push
pop
xor
xchg
negl
nop
loope
aad
jb
mov
jle
fstpt
dec
lea
inc
mov
shlb
stc
cmp
fidivrs
mov
pop
fistps
jg
repz
ret
push
das
stos
sub
add
push
mov
sub
in
sbb
jne
xor
sub
mov
idivl
add
imul
sub
fwait
push
sarl
xchg
ds
iret
jns
jno
and
filds
mov
or
push
mov
push
and
push
test
sbbl
xor
rolb
int
outsl
aaa
lret
jns
inc
dec
mov
leave
dec
ds
adc
stos
outsb
inc
mov
cmc
adc
imul
fdivs
xchg
push
insl
jg
cmp
mov
push
jnp
push
mov
enter
rclb
into
int
dec
pop
cmpsl
inc
hlt
and
jne
and
xor
daa
or
call
mov
adc
cltd
xchg
stos
mov
xchg
xor
inc
jae
icebp
mov
add
ds
es
out
call
xor
mov
mov
test
pop
lahf
test
rcrb
cmp
ret
jbe
xchg
fnstcw
lret
les
ret
lea
sbb
and
push
out
pop
cmp
movsl
cmp
lea
mov
loope
test
mov
ljmp
insl
push
lret
jne
sar
xchg
cld
pushf
pop
push
adc
sub
imul
shll
or
and
mov
cld
cmp
out
pop
scas
inc
aas
int3
mov
mov
push
fs
dec
hlt
xchg
lahf
xor
ss
adc
outsb
adc
or
jb
xor
jb
push
sub
adc
mov
cmp
lret
adc
mov
xchg
jmp
adc
aam
xor
repz
enter
fs
pop
lcall
or
mov
pop
mov
mov
push
push
icebp
test
and
lea
jge
mov
imul
popf
pop
pop
cmc
sbb
push
fistps
pop
dec
pop
push
insl
inc
cwtl
out
div
mov
lods
inc
cmc
out
test
cltd
xchg
leave
cmpsb
lods
dec
sub
jns
sbb
inc
outsb
aas
pushl
pop
adc
shlb
pop
dec
in
popa
mov
cmp
mov
cltd
sbb
ja
xor
lds
sarb
jmp
popf
test
arpl
cwtl
aaa
loopne
adc
mov
xchg
mov
sbb
mov
repnz
idivb
in
jno
mov
test
dec
mov
sbb
cmp
push
lret
inc
subps
cwtl
popa
or
xor
pop
push
add
rorb
roll
jns
adc
xchg
mov
ja
loope
test
jae
sbb
rcr
mov
rclb
std
cmc
dec
mov
jge
mov
sbb
pushf
cmp
or
push
cmp
iret
jge
int
ret
jno
dec
mov
enter
push
ss
pop
jnp
nop
mov
adc
cltd
cmp
fcmovbe
leave
mov
aaa
pop
sub
cld
movsl
imul
and
iret
dec
fistpll
inc
lods
sub
sbb
ret
idivb
push
dec
lret
test
rolb
mov
test
xchg
mov
push
pop
cmpsb
pushf
xchg
push
inc
push
dec
inc
push
pop
fimull
mov
rorb
into
popf
cmp
dec
fdivr
cmp
aaa
or
pop
or
push
cmp
sahf
shlb
and
sbb
add
clc
enter
sub
in
lea
mov
ds
mov
std
xchg
or
push
popa
loope
push
jnp
call
mov
imul
je
xchg
mov
mov
out
pop
mov
jno
movsl
sub
mov
push
jle
gs
push
cmp
pop
inc
repz
lds
lret
imul
pushf
repz
addr16
jno
popa
hlt
inc
cli
movsl
mov
jne
adc
inc
cmp
lahf
sub
add
test
lock
xchg
push
fmuls
mov
fcompl
adc
and
sahf
mov
pop
ficoml
or
outsl
outsl
leave
push
sbb
cli
cmpsb
mov
shll
aad
jge
xor
mov
call
les
mov
aas
xchg
iret
inc
popa
mov
imul
je
fcomps
insl
ljmp
xchg
add
xchg
ja
push
js
and
shll
mov
rclb
inc
arpl
xchg
sub
xchg
jecxz
push
arpl
inc
sbb
leave
imul
push
icebp
aam
sbb
add
insb
movsb
addb
gs
int3
cmp
xchg
sub
ljmp
adc
mov
shlb
xorl
dec
lret
xchg
pop
jp
add
push
hlt
cli
ror
jge
cmpsb
mov
fwait
cmpsl
mov
test
and
out
addr16
in
mulb
push
jmp
cmp
ss
and
mov
hlt
out
fsubrl
mov
inc
adc
mov
jecxz
inc
sub
sub
xor
bound
add
add
cmpsl
mov
in
inc
fnstcw
cmpsb
sbb
loope
xchg
sbb
push
push
or
rcrb
sbb
cltd
inc
pusha
enter
test
mov
sub
jnp
js
dec
mov
mov
sbb
jnp
mov
or
pop
add
scas
jmp
outsl
cmp
jle
or
mov
pop
jb
in
loop
xor
nop
mov
cmc
popa
lods
xchg
and
cmp
pop
pushf
sbbb
cmp
adc
cwtl
mov
mov
icebp
sub
lea
or
loope
jle
scas
add
popf
sub
inc
lahf
and
dec
es
pop
adc
sbb
cli
dec
xchg
js
xchg
fisttps
sub
int3
push
in
inc
xor
scas
sti
mov
iret
jo
jmp
fisttpll
push
sarl
xor
and
or
cmc
mov
xor
idivb
ret
mov
insb
push
fidivrl
out
insl
push
push
add
je,pn
in
clc
lds
push
mov
es
jns
or
mov
xlat
inc
lret
rcrb
adc
arpl
mov
jb
inc
popa
push
xor
lock
or
xor
repz
lds
sub
xor
in
test
adc
test
sub
jl
imul
int3
gs
jo
aaa
sub
sbb
loopne
xchg
mov
push
mov
repz
sub
jp
inc
pop
lods
adc
pop
ss
jo
inc
sti
push
faddl
gs
fidivrs
push
movsl
push
xor
loop
aaa
pop
js
lods
adc
dec
dec
lret
aas
insb
ljmp
mov
shr
aaa
sbb
imul
mov
sub
out
cmpsb
popa
sub
jae
loop
nop
nop
dec
cwtl
std
and
adc
cmpsl
arpl
push
idivb
insb
push
pop
popf
push
fldt
outsl
lods
cmp
fisubs
ljmp
hlt
push
jmp
xchg
cmp
int3
or
inc
fldenv
push
jecxz
xlat
iret
int3
mov
adc
jno
push
add
pop
mov
arpl
xor
test
sbb
shlb
ljmp
cmp
insb
insb
das
test
cmp
outsl
push
jmp
pop
mov
lds
cmp
push
push
xor
cmp
sub
sbbl
jbe
sub
xlat
cmpsb
les
cltd
movb
data16
popf
mov
add
sub
cmp
jno
loope
lret
jg
out
fimuls
data16
jne
pop
movsb
cs
push
mov
rcr
xor
push
shrb
cltd
aas
mov
cmp
sarl
outsb
jne
sub
loop
fadds
cmp
aaa
cli
icebp
sbb
mov
cmp
pop
or
bound
cli
or
inc
dec
adc
call
fucomip
cmp
add
inc
add
enter
in
ret
sub
or
push
sbb
bound
push
lds
cld
test
stos
aam
loope
dec
jbe
pushf
cld
out
xor
dec
pushf
scas
inc
cmp
sub
cmp
xchg
jno
pop
pushf
sub
iret
jge
jb
or
dec
dec
testb
pop
mov
mov
mov
test
push
mov
aad
in
push
insl
std
filds
sbb
cs
int
fsubrp
jbe
adc
fwait
push
dec
enter
push
mov
or
sub
and
lods
cs
xor
inc
adc
sti
lea
jno
mov
jo
inc
jb
push
inc
adc
mov
fsubrl
cmp
adc
inc
mov
aas
cld
test
cmp
ja
aas
dec
mov
and
stc
daa
inc
cmpsl
and
dec
subb
push
ret
mov
pop
mov
mov
sarl
pop
lret
nop
sub
push
or
push
icebp
gs
in
lds
jmp
push
jge
sub
cltd
sub
movsl
lahf
push
dec
sbb
jmp
mov
push
in
out
testb
mov
cmp
loop
jnp
or
fsts
cs
fists
repnz
sbb
mov
xchg
leave
mov
data16
or
sahf
cmp
and
cmp
dec
push
shr
mov
sub
hlt
fdiv
mov
fdivl
mov
sub
xor
mov
xchg
int
inc
xchg
ret
cmc
sbb
inc
or
pop
mov
jns
cld
lock
jg
ljmp
xor
nop
nop
shrb
outsl
adc
lret
or
cmpsl
aaa
xchg
pop
jbe
push
mov
mov
sahf
cs
int
dec
je
inc
xchg
aas
adc
shll
push
mov
int
mov
jbe
lds
mov
or
ret
stos
mov
popf
ja
inc
xlat
test
in
or
push
mov
in
xchg
ja
nop
aas
cmp
pop
jo
iret
sti
xchg
cli
push
adc
dec
xchg
ret
adcb
enter
imul
cmp
cmp
sti
or
cld
add
imul
jno
arpl
fwait
setg
in
inc
jb
testb
mov
lock
cltd
fists
dec
int3
stc
mov
sub
jo
pop
adc
jge
enter
fldenv
mov
in
and
push
xorl
inc
sbb
mov
cs
xor
mov
inc
jmp
cld
pop
pushf
outsb
fstl
adc
int
pushf
imul
xor
or
mov
pop
rol
push
push
inc
sbb
sub
cltd
mov
mov
cmp
repz
lcall
mov
add
add
pop
lret
mull
imul
or
sbbb
hlt
pop
and
mov
pop
mov
mov
cmp
push
sti
cmp
sahf
xor
adc
jge
xchg
in
mov
xchg
cmp
js
xchg
push
insb
cmpsl
iret
inc
es
cmp
xchg
inc
pop
jae
xchg
jae,pt
aas
stc
or
add
pusha
or
inc
mov
sub
loopne
sbb
outsb
mov
je
jl
dec
movsl
mulb
push
loop
adc
push
js
aam
sub
push
hlt
sbb
mov
and
push
pop
pop
add
dec
cli
xchg
sbb
rcrl
adc
xchg
int3
rcll
sbb
mov
jle
inc
and
xor
sbb
push
pusha
push
hlt
pop
cmp
jnp
mov
stos
lret
dec
push
sbb
adc
mov
pop
mov
inc
adc
mov
cmpsl
dec
js
cmp
out
inc
jle
cltd
stos
mov
inc
mov
int3
jg
rorb
mov
xor
int
negl
ds
mov
pop
cmp
lea
outsb
xchg
lods
divl
mov
mov
stos
test
push
cmc
cwtl
sub
out
fcompl
lahf
repz
mov
or
rcll
lcall
out
jge
iret
ret
jae
sbb
scas
incl
adc
lret
jmp
pop
sbb
cmp
mov
mov
in
inc
stos
xor
pop
repnz
cmpsl
fisttpl
sub
jmp
push
mov
imul
xlat
mov
insb
insl
lea
popa
mov
mov
es
int
repnz
cmpsl
in
lahf
fs
xchg
add
jne
xor
addr16
jae
xchg
xorb
aad
pop
in
push
or
lahf
push
add
movsl
sar
mov
loopne
loop
sbb
ret
pusha
out
inc
mov
je
dec
pop
sbb
ds
movsl
test
jp
inc
aam
push
dec
jl
sub
mov
xor
jle
push
push
xchg
adc
sbb
iret
movsl
jmp
fbstp
dec
jae
lret
and
inc
jecxz
scas
xlat
gs
sbb
jecxz
xor
lock
dec
cli
repz
mov
or
push
das
inc
aad
call
movsb
inc
jp
out
sub
push
leave
pop
sbb
fldcw
repz
leave
dec
add
sbb
or
decb
fnstcw
leave
sbb
mov
xor
pusha
hlt
insb
dec
pop
hlt
cmpsl
dec
dec
inc
insl
cmp
gs
push
lds
insb
sti
addr16
xlat
mov
push
sbb
pop
or
pop
fwait
adc
stc
pop
ret
bound
mov
outsl
shr
pop
sub
rcl
cli
sub
ljmp
fnstcw
cmc
push
adc
cmp
pop
dec
scas
dec
sub
add
inc
outsb
rcll
jecxz
jecxz
aad
std
jg
jecxz
stos
loope
dec
in
adc
fsubr
mov
arpl
lret
gs
cmp
lods
sbb
mov
or
sub
sub
scas
ss
popa
xchg
int3
jb
arpl
imul
sbb
cltd
pop
das
ljmp
movsb
pop
rorb
mov
mov
push
xlat
inc
inc
je
push
sub
add
jae
adc
inc
sbb
mov
cs
ljmp
fisttps
pop
dec
je
xchg
out
xor
ljmp
ret
je
ja
in
scas
inc
sbb
out
test
jl
hlt
xchg
sbb
pop
xchg
mov
and
fsts
fcmovu
push
sti
push
sub
clc
sbb
cmp
inc
outsl
rcr
cwtl
xor
shl
imul
mov
or
lea
and
pop
jge
cmp
xchg
mov
add
jb
push
xor
jno
add
insl
loopne
ja
test
bound
adc
mov
fadd
jno
int
xor
mov
insl
lods
jecxz
ds
push
insl
push
jle
cmp
push
and
jno
pop
sti
jp
hlt
fld
popf
sbb
sub
mov
mov
adc
mov
pusha
add
mov
cmp
sbb
dec
inc
inc
dec
push
or
sbb
gs
inc
ja
dec
clc
popa
jg
enter
and
call
xchg
ljmp
inc
cmp
jge
nop
scas
mov
scas
add
and
xchg
jge
das
add
mov
xchg
dec
jbe
or
push
lods
sarl
jmp
cmpsl
ds
loope
xlat
xor
fnstsw
or
aam
je
rorl
rorb
aad
xor
inc
jp
mov
lea
dec
ja
add
stos
push
mov
dec
nop
aas
push
pop
fists
dec
mov
push
mov
add
outsb
inc
inc
xor
jnp
sub
ljmp
repz
icebp
jns
sub
adc
dec
lea
lods
dec
inc
add
xor
test
mov
insl
sbb
dec
mov
fists
pop
ficoms
xchg
nop
mov
mov
cmp
dec
pusha
mov
ret
inc
mov
dec
jb
push
ja
sub
pop
repz
jae
arpl
jbe
js
shll
sub
out
inc
mov
adc
cmp
andb
jne
into
and
enter
pop
adc
into
push
insb
popf
and
dec
add
and
in
sbb
loopne
or
movsb
lock
cld
fisubrs
jl
sbb
jle
sub
sub
push
jmp
mov
mull
push
jne
mov
xchg
inc
dec
ss
insl
data16
inc
enter
inc
rcrl
push
add
shrl
dec
insl
cmp
push
jecxz
jge
xchg
rep
js
push
int
leave
add
mov
or
jnp
dec
fstpl
add
sub
sub
fcoml
inc
inc
inc
and
push
jecxz
es
and
add
in
lds
pop
dec
sbb
sbb
adc
jnp
bound
sub
adcb
js
cltd
lcallw
or
add
ss
and
je
xchg
inc
es
mov
div
fbstp
fists
jnp
mov
in
int3
movb
mov
jb
scas
mov
out
cld
icebp
jecxz
add
stos
rorl
sbb
cmpsl
xchg
addl
sub
jno
call
test
jbe
icebp
subl
sbb
mov
or
in
cmc
movsb
mov
sahf
mov
int3
test
mov
or
jo
div
ret
fcomps
mov
lods
jle
mov
test
int
or
or
add
dec
xor
mov
adc
lock
mov
cmp
push
pop
mov
jg
cmpsl
cwtl
test
jo
es
rol
sbb
and
cld
mov
nop
pop
data16
push
cmp
xor
jnp
xor
add
stos
or
lret
cmp
push
and
or
xchg
sbb
jae
inc
sbb
sysenter
pop
mov
andb
xor
lds
scas
sbb
adc
xor
mov
in
cmp
shrl
cmp
iret
mov
push
lds
add
pushf
iret
hlt
mov
mov
mov
pop
fimull
scas
sbb
das
aas
xor
adc
test
outsl
mov
test
push
dec
mov
nop
andl
adc
push
jge
or
sahf
call
sub
push
iret
ror
cmp
push
scas
jo
inc
sub
adc
sbb
sub
icebp
xchg
mov
rcr
inc
pop
pop
pop
dec
xchg
jmp
jne
std
dec
aaa
pop
and
inc
mov
inc
pop
xchg
call
cmpsl
inc
dec
push
fs
mov
push
sahf
push
stos
xchg
repz
outsl
sbb
and
push
xlat
mov
add
bound
cmp
inc
mov
arpl
jo
sbb
stos
jae
das
xchg
jb
leave
mov
xchg
fldt
push
xchg
fcmovnb
aaa
jbe
jg
sti
add
or
shlb
sbb
scas
out
out
mov
outsb
aaa
ret
int
ds
push
push
mov
xor
sarl
mov
inc
pop
clc
sahf
dec
shll
xchg
jg
mov
cmpb
cli
pop
nop
xchg
je
ds
mov
pop
das
movsl
and
and
fwait
push
adc
push
mov
adc
xchg
ljmp
sahf
fs
mov
sti
xor
cmp
xor
pusha
arpl
lock
sahf
rcrl
bt
out
pop
mov
mov
dec
aaa
xchg
add
push
dec
dec
mov
inc
je
xchg
add
mov
jecxz
pop
mov
pop
pop
cli
push
decb
add
es
dec
adc
scas
fucomi
out
outsl
xor
insl
les
cmc
rolb
imul
mov
dec
lock
cltd
jae
mov
and
shll
fwait
mov
rclb
push
push
insb
push
add
xchg
fwait
icebp
addr16
test
lock
cmp
xchg
pop
sarl
jecxz
sbb
ja
pop
mov
jno
jbe
mov
pop
jmp
mov
xor
cmp
scas
loopne
loop
mov
lock
inc
or
cmc
rol
orl
xchg
pusha
fcomps
xor
ljmp
adc
dec
scas
cltd
mov
push
or
sahf
push
adc
lcall
loope
adc
fldt
js
test
in
loopne
inc
sub
movsb
shrb
jl
jno
inc
push
xor
inc
sahf
jmp
scas
lods
aaa
int3
and
jp
dec
jne
dec
xchg
mov
xchg
ds
idiv
push
insl
inc
test
scas
xchg
push
mov
dec
mull
dec
orl
pop
inc
inc
rolb
mov
pop
sahf
cmpsb
mov
imul
lea
xchg
adc
add
pop
push
rcl
xchg
sti
test
insl
clc
sub
mov
sbb
sbb
imul
mov
sbb
push
ljmp
icebp
call
push
inc
cli
daa
or
xor
addr16
dec
mov
xorb
movsl
jne
fdivs
negb
out
fstl
into
jo
sbb
test
sbb
imul
mov
icebp
pop
bound
jnp
mov
mulb
sub
mov
insb
jp
mov
xor
push
sbb
xchg
sahf
mov
lods
notl
mov
ljmp
mov
and
sub
push
icebp
sbb
xchg
aam
push
mov
fsubrp
xor
daa
loopne
ljmp
stc
js
lret
inc
lret
jge
outsb
cmpsb
mov
sbb
xchg
xchg
repz
rorb
add
int3
dec
scas
pop
jecxz,pt
push
or
mov
dec
and
mov
mov
pop
lret
dec
xor
cltd
or
fistpll
repz
add
or
bound
fisttps
enter
pusha
divb
cmp
mov
arpl
in
jg
and
adc
dec
mov
pop
jae
es
adc
jmp
and
shrl
rcll
mov
jne
sbb
jo
sarb
stos
imul
jge
in
xchg
xchg
sub
pop
cld
jmp
out
sti
in
dec
mov
dec
gs
add
dec
outsl
adc
js
mov
pop
dec
jo
push
push
jae
aas
cmp
dec
fwait
iret
dec
or
mov
scas
sbb
pop
or
dec
add
mov
or
add
fwait
mov
jp
in
cmpsb
mov
xchg
inc
flds
addr16
js
mov
adc
scas
pop
jno
xor
nop
xchg
int3
inc
pop
or
dec
sub
mov
in
push
shrl
mov
mov
fstps
dec
sub
imul
jnp,pn
push
pop
mov
rorb
ss
lds
fstl
lret
sahf
jnp
popa
lahf
clc
int
push
shlb
mov
inc
loopne
push
cld
lds
and
rcl
aaa
xchg
scas
add
inc
sub
xor
rorl
xchg
xorl
fistps
mov
jle
jmp
ret
push
cmp
mov
fmull
fistl
rcll
add
xor
in
in
or
aam
sbb
xchg
push
lods
xlat
cmpsl
in
fsubrp
cld
mov
and
arpl
ss
or
pop
int
sbb
lock
jb
and
in
gs
sub
mov
add
mov
pop
pop
or
or
inc
jge
mov
sti
push
cli
push
push
addr16
jl
leave
dec
test
xor
mov
call
mov
mov
xchg
jecxz
fldl
adc
pslld
or
xor
in
push
rorl
sub
push
add
xlat
jb
mov
adc
sbb
xchg
insb
mov
and
data16
ret
push
and
popf
sbb
bound
or
add
ljmp
adcb
outsl
leave
pop
mov
mov
push
inc
xchg
pop
testl
jb
loop
gs
sub
mov
int3
js
insb
sbbl
mov
jns
aaa
add
popa
mov
mov
add
mov
dec
mov
pop
jle
push
outsl
xlat
or
sub
sbb
inc
ljmp
jnp
sbb
cmc
or
jb
add
lock
clc
daa
push
jnp
jae
push
imul
cltd
dec
out
call
enter
mov
fwait
sbb
mov
jl
rcll
adc
daa
mov
or
mov
lds
xor
fcomip
dec
jmp
push
in
xlat
stos
xchg
repnz
stos
mov
cmpsb
into
shlb
or
sub
fucomi
ds
lret
insl
mov
fwait
int3
xchg
push
and
scas
lret
imul
imul
mov
test
adc
lods
hlt
roll
pop
xrelease
jmp
inc
adc
dec
cmpb
call
je
leave
insl
push
call
sub
sbb
repnz
clc
imul
cmp
pop
jecxz
std
mov
pop
out
adc
lea
pop
mov
imul
imul
mov
das
inc
jl
pop
fs
or
pop
mov
mov
push
insb
lods
add
ds
mov
push
fildl
add
push
daa
test
test
sbb
cmp
sbb
adc
scas
loop
and
mov
std
mov
jbe,pn
inc
inc
mov
jp
pop
js
pop
mov
push
xchg
sub
sub
pop
mov
lea
dec
pop
faddl
test
xlat
sbb
data16
cs
pop
cli
mov
xor
in
inc
mov
arpl
cmpsl
sbb
pop
xchg
loope
add
push
fsubrl
fdivs
dec
mulb
ror
xchg
fdivrl
sub
std
jp
add
out
rorl
out
movsl
and
fiaddl
mov
cmp
or
lock
fs
push
inc
int3
out
dec
into
pushf
les
cmp
jns
adc
insb
sub
mov
shl
push
push
sub
test
xchg
sbb
shlb
ja
jne
cwtl
add
or
in
iret
sbb
xor
sbb
mov
pusha
out
les
mov
xor
inc
loope
xchg
aas
mov
pop
imul
pop
ljmp
inc
push
pop
sti
sub
les
addr16
pop
lds
push
and
scas
inc
cmpsl
aam
dec
and
xor
adc
xor
push
xchg
iret
ljmp
js
roll
mov
mov
and
movsb
pop
arpl
fstl
inc
mov
cmpb
out
add
dec
mov
sub
pop
mov
cmpsl
imulb
jmp
mov
cmpsb
cmp
or
ret
or
sbb
lret
pop
fildl
aad
inc
mov
and
out
pmulhuw
mov
shl
ds
call
xor
dec
test
push
and
push
mov
test
xor
jmp
mov
mov
hlt
push
sub
add
fcompl
xor
mov
mov
enter
inc
xlat
popf
mov
daa
fwait
out
or
xchg
push
jl
lahf
push
movsb
insl
lods
push
mov
addr16
loope
adc
sti
out
jns
stos
rcrb
and
cli
or
es
push
shl
or
xor
fucomi
inc
cmp
loopne
pop
popa
or
push
cwtl
nop
pushf
lea
test
sub
fsubs
lds
arpl
jbe
ficompl
int
pusha
movsl
scas
insb
cmp
xchg
sahf
pop
neg
and
and
or
mov
mov
lods
add
push
gs
shrb
scas
cmp
sub
mov
jno
aaa
fsub
jp
insl
das
mov
aas
mov
test
ds
jmp
and
add
std
ljmp
ljmp
and
je
aaa
nop
pop
mov
cmpsl
mov
or
decl
or
add
outsb
add
adc
dec
xor
shll
addb
push
cld
fwait
rcrb
mov
push
pushf
xchg
scas
mov
cmp
or
fcoms
imul
mov
add
popa
adc
sub
jp
or
cmpsb
arpl
fwait
sbb
or
scas
xchg
cmp
sbb
inc
pop
and
rcrl
lods
pop
jge
inc
repz
or
jbe
and
mov
and
push
inc
insl
dec
arpl
imul
mov
ret
pop
push
xor
sahf
mov
inc
sub
daa
or
cwtl
jl
pop
aam
popa
es
daa
sbb
pop
leave
xchg
mov
loopne
hlt
loope
shlb
stc
gs
sbb
or
int3
stos
adc
rorl
sub
int3
addr16
paddsw
insb
push
loopne
adc
mov
add
adc
xchg
jecxz
mov
pop
imul
clc
push
ljmp
pop
fwait
mov
xchg
nop
repz
xor
cmpsb
inc
daa
mov
outsb
dec
push
jge
mov
addb
out
and
or
fadd
jmp
sub
cmpsb
mov
insb
sbb
mov
adc
sub
mov
cmp
outsb
inc
incb
ret
lds
out
js
cwtl
rcr
mov
sub
add
xor
or
jo
ret
jecxz
xor
push
and
repz
sti
dec
ret
jg
ret
sub
cmp
ljmp
jne
gs
scas
mov
int3
pushf
jmp
test
aam
mov
mov
enter
insl
loope
stos
mov
add
push
test
in
xchg
cmp
mov
test
lods
in
pop
out
imul
jle
xlat
das
movsb
cmp
jge
xorb
xchg
movsb
mov
shl
push
dec
out
cmp
and
add
dec
pop
aaa
cmp
adc
daa
adc
xchg
pop
adc
or
xchg
jne
ficoml
or
push
sbb
pop
insl
xchg
xor
ljmp
fldlg2
call
xchg
ljmp
dec
fsubl
lret
lods
cmp
pushf
int3
cmp
push
cmc
pop
inc
adc
movsl
lods
stos
xor
je
and
adc
fimull
popf
gs
insl
xchg
pop
cli
ret
adc
sbb
rolb
add
jne
out
add
cld
hlt
inc
ret
add
and
jnp
js
imul
jmp
pop
out
add
cmpsl
or
adc
cli
insl
lds
out
adcl
jb
jae
loop
mov
mov
jge
jmp
inc
xchg
xor
pop
sub
lret
mov
mov
lcall
cltd
ja
movsb
mov
test
data16
inc
aad
dec
mov
mov
aam
mov
bnd
mov
push
jmp
loop
push
sbb
mov
lea
push
cmpsb
cmpsb
and
and
jne
mul
daa
dec
cwtl
packssdw
xor
jo
iret
es
cli
inc
adc
adc
xchg
scas
ja
xlat
test
into
repnz
andl
addr16
adc
pusha
out
sub
jl
push
sbb
bound
decb
mov
xchg
mov
adcb
add
mov
sub
scas
outsb
movsl
sub
sub
pop
push
mulb
cltd
jl
js
sti
outsl
scas
fbstp
mov
inc
pop
dec
aas
or
jge
pusha
jnp
pusha
test
inc
shll
push
cld
fs
adc
in
jae
inc
add
int
sub
insl
icebp
push
sbb
cmpsl
test
mov
int3
jmp
movsb
and
mov
lds
fildl
in
xor
fnstenv
in
ds
cmpsl
mov
cld
push
enter
lods
adc
in
call
fldcw
pop
clc
adc
mov
jns
fldenv
mov
xchg
push
stos
lods
sbb
mov
outsl
pushf
dec
int3
cld
mov
mov
shll
adc
repnz
arpl
cmp
jecxz
scas
add
cli
repnz
cmp
lahf
cmp
xchg
push
ja
pop
xchg
jge
dec
lods
jns
jge
pop
mov
xchg
out
fucomp
cmp
jge
ret
mov
aam
mov
mov
mov
cmp
dec
xchg
or
popa
mov
cs
xchg
jo
test
lahf
sbb
push
mov
jge
add
cmc
cmp
pushl
xor
jno
sti
push
inc
out
fidivrs
sbb
jp
rcll
cmpsb
fsubrs
into
jo
mov
iret
out
clc
jle
pop
adc
mov
add
adc
jg
sbb
mov
xchg
push
adc
les
aas
scas
iret
lret
cmpsl
push
lret
cmp
popa
mov
sbb
arpl
leave
xchg
shr
movsb
test
subb
movsb
push
addl
sub
jge
sbb
xor
das
lds
hlt
push
push
mov
ljmp
ret
jecxz
inc
jmp
ja
mov
push
sbb
adc
xlat
pop
jmp
shl
mov
adc
roll
mov
mov
addr16
repnz
cmpsb
mov
movsb
in
xchg
sub
call
fdivrp
jns
dec
mov
jbe
scas
add
pop
out
inc
pop
push
arpl
or
cld
hlt
testl
push
loope
loope
mov
or
in
mov
in
jns
lods
jns
outsb
mov
adc
dec
jo
stos
and
xchg
jae
jns
mov
and
cli
enter
jle
mov
js
lods
xchg
nop
push
xchg
enter
es
insl
xchg
out
data16
mov
cmp
sbb
notl
shll
mov
xor
cli
cmpsb
pop
jnp
dec
mov
cmp
xor
fsubl
adc
xchg
and
shl
xor
jecxz
mov
and
xor
and
fmull
and
mov
out
imul
in
xchg
pusha
outsb
jg
push
jne
or
stos
lahf
cld
pop
xchg
out
mov
xchg
pop
add
pop
addb
jnp
mov
mov
mov
push
out
add
test
xchg
movsb
sbb
imul
fstps
aaa
and
vmovshdup
in
or
jb
mov
outsb
and
sti
in
xlat
lahf
mov
xchg
sbb
adcl
mov
inc
inc
lock
arpl
and
jb
outsb
and
out
and
ror
xchg
stos
mov
es
out
add
add
leave
stos
repnz
adc
xchg
xor
adc
xchg
in
adc
outsb
in
loopne
adc
cmp
pop
addr16
outsb
aam
pop
xchg
and
mov
cmp
pop
test
dec
mov
dec
testb
sub
sbb
sbb
fmull
cmp
dec
jne
pop
arpl
cld
loopne
cmp
int3
push
push
pop
dec
fldl
and
orb
movsb
mov
cmpsl
and
mov
adc
fcomps
push
iret
dec
rolb
and
insb
pop
or
jg
pop
add
imul
push
icebp
xor
insb
push
bound
neg
inc
stos
testl
sub
insl
lret
mov
inc
add
xor
cmp
and
xor
insb
mov
push
mov
inc
inc
sub
fists
push
mov
bnd
sahf
cmp
or
mov
inc
xchg
mov
xor
jle
lods
push
cmpsl
jle
sahf
xor
fldt
jns
sahf
sub
rcll
imul
aaa
adc
movsl
xchg
sti
loop
sub
xor
loope
adc
jp
lea
or
test
outsb
lret
jecxz
ficompl
loopne
xor
outsb
push
scas
mov
aad
jp
xor
cmpsl
jecxz
adcl
jg
inc
jne
cmp
xchg
sub
addr16
sbb
adc
mov
into
fstpl
xchg
outsb
dec
test
xchg
into
push
pop
adc
jmp
sub
jmp
xor
je
mov
inc
sub
push
jmp
and
andb
inc
cmp
cld
out
adc
cli
pop
sub
jne
xchg
adc
dec
dec
add
or
xchg
popf
data16
outsb
jle
stc
clc
or
lods
dec
icebp
adc
ret
out
pop
bound
sub
cmp
test
or
pusha
test
cmpsl
push
adc
add
sar
xchg
js
xor
cld
push
in
mov
push
pop
sbb
shll
loopne
mov
ss
fdivl
movsb
fistl
test
mov
popa
imul
or
test
sub
decb
je
xor
mov
mov
lret
icebp
sbb
xor
or
cmc
mov
mov
sub
je
fs
mov
jo
xlat
mulb
fiadds
bnd
mov
test
mov
pop
or
xchg
jns
adc
mov
sub
and
insb
pop
adc
dec
dec
out
push
pusha
cmp
pop
fidivrs
or
mov
xchg
imul
xor
in
pop
push
ljmp
mov
sub
out
sbb
andb
pop
loopne
pop
sbb
ss
loopne
adc
sbb
lods
push
cwtl
lods
dec
nop
and
xor
das
rorl
loopne
test
ljmp
sarl
sahf
loopne
cs
add
stc
xor
jae
testl
adc
fs
in
pop
xchg
fldenv
xorb
adc
shlb
add
mov
dec
adcb
fsubr
dec
inc
cmp
aaa
stos
dec
mov
push
movsb
sbb
jmp
aaa
fnsave
fnstenv
mov
mov
cmpsb
push
dec
and
cmpsb
jle
xchg
leave
cltd
enter
data16
inc
pushf
icebp
icebp
xchg
xchg
out
int
inc
add
fsubrp
in
cmp
push
rcl
lret
jmp
imul
sub
dec
mov
out
sarl
shll
je
jnp
mov
sbb
movsb
xadd
mov
adc
sbb
pop
hlt
mov
sub
or
mov
daa
adc
imul
jns
fstps
mov
adc
adc
fs
mov
or
push
lds
dec
test
movsb
inc
stos
cmpl
or
push
jge
sbb
jnp
xchg
gs
mov
push
pop
sbb
xchg
es
lock
pusha
pop
sbb
jb
ds
inc
stos
push
jp
adc
leave
roll
and
jbe
fstpt
xchg
pop
pop
jmp
mov
xor
jb
sbb
into
push
jl
test
push
movsb
test
lret
push
dec
adc
shlb
out
jno
push
and
inc
mov
ret
add
nop
adc
mov
mov
pusha
fdivs
sub
push
punpcklbw
mov
loope
or
jl
stc
cltd
call
and
sahf
fisttpll
fwait
and
cltd
repnz
push
jge
iret
xchg
sarl
xor
outsl
sbb
pop
sub
pop
shrl
dec
mov
push
outsb
adc
xor
xchg
sar
movsb
outsl
dec
int3
add
sbb
push
inc
insl
xchg
addr16
fsubrs
push
inc
dec
aam
fwait
std
mov
mov
fwait
sub
data16
push
xchg
clc
push
lcall
icebp
and
dec
push
or
pusha
jb
ret
lds
push
adc
ds
xchg
das
repnz
fsts
push
lods
outsb
aaa
pushf
lret
cwtl
outsl
adc
mov
pop
fcmovb
stos
pop
push
mov
js
jnp
xchg
mov
pop
sbb
cmp
lock
pop
mov
adc
jo
fsubs
xor
adc
mov
adc
sub
jl
iret
adc
mov
mov
xor
mov
popf
fstpt
xchg
mov
fsubrs
inc
bound
scas
push
mov
add
in
cmp
mov
push
jns
pop
mov
jmp
jle,pn
repnz
out
jnp
cmp
pop
add
shll
lret
jecxz
lret
adc
mov
insb
and
ljmp
aad
lcall
cmpsl
repnz
cmpsl
jle
icebp
inc
mov
loop
or
mov
add
or
mov
and
mov
adc
push
sub
aad
mov
push
jmp
xchg
insl
outsb
add
lea
int
leave
lahf
inc
rcrl
push
mov
loopne
push
mov
ljmp
or
push
mov
xchg
and
cmp
ret
in
push
cmp
pop
jno
and
mov
je
and
dec
push
mov
popa
stos
out
scas
cmc
imulb
jne
lods
add
mov
emms
and
nop
inc
int3
test
mov
daa
and
xchg
mov
mov
xchg
dec
imul
lea
pop
shlb
add
aad
xor
scas
inc
xchg
jle
adc
jnp
and
out
mov
adc
aas
jno
leave
pop
add
les
lahf
adc
mov
insb
sbbl
cld
roll
and
mov
bound
jo
rolb
hlt
inc
sub
lret
dec
xor
or
sub
sub
fwait
fwait
mov
stos
loop
inc
mov
cmpl
mov
cltd
dec
fwait
mov
pusha
mov
mov
xchg
add
sbb
jbe
lock
std
jns
or
xchg
repnz
and
sub
push
cmp
inc
adc
or
mov
sahf
pop
lods
cmp
pop
xchg
insb
adc
or
xor
or
repz
sbb
inc
sub
dec
adc
jle
fcoml
dec
add
sub
xchg
movsl
dec
add
xor
enter
sbb
jl
mov
shl
icebp
imul
sbb
shll
xor
sub
inc
popa
inc
test
jne
nop
out
dec
pop
aad
xchg
lret
sbbb
xchg
or
or
stos
adcb
cwtl
outsb
push
dec
pop
arpl
daa
and
popf
jecxz
xlat
mov
sub
lcall
xchg
sub
rorl
mov
testb
clc
sub
ficoml
out
into
push
sub
lock
cld
lahf
in
sub
stos
sub
ljmp
dec
dec
sub
jbe
sahf
inc
popa
inc
inc
xchg
out
inc
add
into
stos
gs
addr16
lods
shll
mov
adc
push
lods
fldl
inc
or
fidivrs
mov
jg
les
xchg
add
lret
test
ljmp
pop
pop
mov
mov
push
dec
pop
pop
adc
xlat
out
mov
inc
out
fiaddl
xor
imul
adc
cmpsl
sub
cltd
cli
dec
and
fdivrl
add
inc
cld
lcall
fiadds
shrb
stos
cld
cltd
xchg
movsl
divl
dec
push
aam
fs
and
outsb
cmc
hlt
inc
push
les
loopne
les
inc
pop
jmp
lahf
arpl
ret
clc
out
lret
pop
lock
mov
dec
icebp
xlat
aam
pop
fnsave
nop
bt
fs
icebp
pop
ret
insb
out
addr16
xchg
mov
push
insl
xchg
in
sahf
mov
push
into
adc
adc
or
jnp
pop
mov
lods
push
mov
pop
aam
push
fbld
ret
clc
inc
fsubs
sbb
arpl
adc
xchg
jle
inc
jp
and
scas
pop
jecxz
jecxz
inc
mov
arpl
fldenv
xor
jmp
mov
fwait
outsb
sub
inc
adc
xchg
xchg
cmpsb
mov
sub
dec
loopne
das
adc
jnp
push
mov
cld
imul
push
bound
or
pop
xchg
or
jae
fwait
or
orl
xor
inc
test
lcall
xchg
inc
scas
ljmp
test
movsb
mov
mov
cli
jl
scas
sbb
arpl
mov
imulb
bound
push
ss
xor
dec
es
push
xor
sbb
sbb
adc
fdivrs
cmp
mov
test
and
and
mov
fs
lods
icebp
pushf
shrb
mov
adc
cmp
xchg
fcom
inc
dec
jl
mov
repz
fbld
lock
shl
push
pop
mov
cmp
insl
cmp
add
call
enterw
mov
xchg
jb
push
cli
in
add
lock
and
mov
out
xchg
add
xchg
lahf
mov
cwtl
hlt
pop
cli
insl
inc
aad
cmp
jbe
and
push
xchg
push
lods
jl
xor
pop
ds
adc
cmp
add
cmpsl
out
jo
push
jbe
call
cld
dec
inc
xchg
into
shll
nop
jns
int3
shl
xor
mov
icebp
push
inc
and
mov
dec
cli
dec
mov
and
enterw
lods
cld
cmp
push
bound
dec
rcrl
fwait
xor
cmp
popf
scas
pop
mov
xchg
sub
out
xor
pop
mov
in
enter
fisubrl
leave
xchg
jns
pop
jl
and
sbb
int3
cmp
xchg
test
fcomi
push
inc
push
xor
sbb
dec
imul
dec
in
mov
inc
sub
pushl
lods
mov
xor
jecxz
lds
frstor
xchg
ret
mov
dec
and
mov
or
mov
mov
lret
push
cltd
sti
cld
cmp
test
jg
push
or
lret
push
dec
push
xor
bound
jecxz
mov
mov
sub
popf
and
push
fwait
mov
clc
lret
dec
lcall
adcl
sbbl
jmp
ja
je
mov
lahf
xchg
in
rorb
push
and
mov
lods
scas
fwait
leave
pop
sub
scas
out
mov
push
pushf
leave
addb
pop
mov
sub
icebp
xchg
rcl
push
push
out
aam
jmp
or
pop
mov
std
hlt
lahf
fldl
jp
addr16
cmp
lds
jb
adc
pop
push
std
leave
test
aas
ror
icebp
mov
addl
ja
sub
push
lcall
or
rclb
mov
mov
cli
inc
movsl
fsts
ja
sahf
inc
cmpsb
pop
cmp
repz
mov
mov
or
movsl
test
fwait
and
cmpsb
out
stc
inc
add
fwait
repz
ja
scas
lret
das
std
dec
in
cmp
into
aaa
and
cmp
dec
pusha
inc
fidivs
mov
mov
fwait
stos
test
sbb
int3
push
icebp
cmc
pusha
out
mov
pop
sub
or
push
inc
cli
pop
cmp
ja
lahf
ja
es
popf
add
xchg
cmp
add
mov
aam
and
cmp
mov
mov
ds
outsb
fcom
ss
mov
adc
cmp
jns
dec
pop
cmpsb
inc
and
ss
fildl
jge
rcll
setne
jge
mov
jl
mov
pusha
cmp
mov
xchg
stos
jge
roll
fs
pushf
iret
inc
sub
cs
stc
pop
pop
movsl
add
push
sahf
mov
call
into
dec
sti
int3
test
aam
xchg
xchg
cwtl
lea
call
nop
stos
jae
push
int3
cwtl
shr
leave
adc
xchg
outsb
fsts
shl
pop
cmp
and
lcall
mov
inc
je
movsb
arpl
jb
mov
adc
mov
push
mull
add
jns
mov
dec
mov
push
xchg
out
aas
xlat
outsl
pop
shll
xchg
out
jns
add
xor
dec
adc
lcall
xchg
cld
insl
call
mov
and
xor
ficoml
aam
mov
int
push
fldcw
or
hlt
push
adc
cltd
push
jnp
int3
movsl
test
jle
pushf
mov
test
pop
out
inc
fwait
int
addr16
pop
pop
cmp
fldl
xchg
and
adc
shll
or
pop
xchg
pop
pop
stos
icebp
ret
arpl
imul
std
add
xchg
sbb
add
sbb
sub
lea
dec
mov
pop
add
cld
or
add
xchg
shrb
arpl
hlt
mov
rcll
arpl
xor
lods
adc
mov
jne
and
jns
icebp
sbb
add
fidivrs
dec
mov
add
xchg
mov
pop
inc
gs
cltd
lcall
pop
jo
test
push
hlt
jp
and
or
test
into
or
or
loope
or
jb
sbb
xchg
push
mov
pusha
addr16
dec
movl
test
push
aad
mov
inc
jp
sarb
dec
mov
js
xor
push
mov
gs
stos
cmp
xchg
inc
popf
fwait
pop
les
cltd
mov
js
inc
dec
sbb
out
push
ljmp
lahf
cmpsl
unpckhps
jne
insb
scas
jns
jb
in
dec
outsb
jecxz
shr
pop
adc
dec
aam
mov
jg
mov
pushf
push
or
es
mov
idivb
sbb
sbbl
in
inc
cmpsl
shlb
sub
jp
and
repz
xchg
js
iret
pushf
loope
aaa
into
addr16
int3
mov
adc
cmp
insb
ficompl
dec
lret
leave
adc
dec
mov
or
inc
inc
movsb
aaa
scas
js
es
sahf
lods
push
dec
in
rcrb
fs
jl
xor
jecxz
call
xchg
enter
pop
sti
in
out
cwtl
adc
das
cli
add
mov
mov
adc
and
pop
testb
and
ret
in
dec
rcrl
or
loopne
and
cltd
sarb
sbb
stos
sbb
fistpll
sub
or
add
imul
sbb
ja
cmp
pop
dec
dec
cmp
cmp
xchg
ret
out
cmp
push
add
mov
sub
mov
xor
mov
xor
mov
imul
mov
add
test
lods
mov
push
js
jmp
idiv
mov
nop
cmc
push
dec
loope
and
std
lret
lret
mov
in
jge
or
ret
adcl
mov
cmp
repz
pop
mov
dec
arpl
jnp
das
mov
pop
jne
push
jecxz
lock
pushf
clc
xchg
call
lahf
test
cltd
je
dec
int
jg
std
movsb
outsl
int
dec
in
dec
fnstenv
out
outsb
stos
pusha
jl
or
xchg
test
outsb
cld
push
inc
mov
adc
movsl
sbb
mov
les
and
test
pushf
inc
out
popa
out
notl
not
aad
roll
cld
arpl
cwtl
mov
mull
imul
mov
ror
xchg
push
jae
mov
pushf
hlt
dec
enter
add
push
stos
insl
outsb
addr16
ret
aaa
add
jo
leave
jae
in
push
popa
rcr
stos
xchg
push
push
ss
adc
std
out
push
sub
scas
aam
push
and
jnp
lods
xor
fisubrl
clc
sub
or
daa
xor
or
mov
xor
data16
data16
xchg
mov
int3
xor
inc
rol
pop
jns
jbe
icebp
push
dec
and
das
cmp
pop
sbb
and
pop
ret
ljmp
push
rorb
iret
adc
push
inc
xor
cmpsl
jge
std
cmp
sbb
pop
cmp
push
inc
popf
dec
icebp
mov
push
out
mov
cmp
add
hlt
dec
fs
lds
or
insl
or
jb
add
mov
mov
and
xor
mov
inc
mov
xor
pop
cmp
hlt
pop
hlt
mov
mov
adc
mov
cld
inc
or
pop
dec
sbb
dec
cli
out
into
dec
in
mov
pop
pop
push
ljmp
fs
push
jmp
lea
pop
loopne
push
cmc
mov
bound
repz
or
sbb
xlat
add
mov
adc
rorb
cli
inc
sub
lahf
sub
sub
sub
mov
push
cmp
dec
iret
int
jne
push
pushf
cltd
cmp
mov
adc
jns
lds
pushf
sub
cmc
lcall
shl
pop
dec
dec
jg
lahf
les
icebp
cmpsb
mov
sub
ja
sbb
cmp
ret
rolb
rolb
test
das
mov
mov
xchg
mov
push
push
mov
jp
fnstenv
movsb
aad
je
data16
and
clc
dec
adcb
ss
jno
pop
fnsave
adc
add
mov
dec
test
jl
xchg
or
mov
testb
dec
repz
mov
sbb
ret
insl
sbb
mov
das
pop
fists
cltd
insl
test
clc
leave
pop
xchg
add
mov
xchg
rcrl
sarb
inc
mov
push
insl
push
and
and
cmp
cmp
push
testl
inc
jo
xchg
push
jmp
xor
add
mov
sub
push
or
push
push
and
add
pop
xchg
in
add
arpl
in
adc
mov
xchg
mov
scas
push
lods
xchg
lahf
mov
push
push
jl
xor
inc
lret
int
popf
outsb
xchg
stc
inc
pop
negb
xlat
jge
add
dec
mov
std
mov
scas
xchg
bound
std
adc
add
test
ja
mov
and
jns
popf
jae
dec
sub
sub
jb
fwait
ret
shll
inc
leave
sub
ja
mov
add
dec
mov
xor
nop
gs
sub
out
movsb
imul
ja
fisttpl
cmp
cmp
repz
dec
stos
xchg
sarl
test
mov
flds
pushf
inc
push
dec
movsb
in
and
push
out
mov
sub
gs
jmp
jp
std
shll
outsb
loopne
and
in
decb
mov
pop
mov
sahf
and
add
jg
inc
je
mov
cmp
aad
scas
data16
xchg
jle
dec
rclb
std
test
and
stos
push
lods
test
cwtl
test
cltd
jl
rcl
mov
sbb
addl
sahf
icebp
and
push
jb
and
add
outsb
js
and
mov
roll
nop
or
sbb
in
shlb
or
jmp
pop
xchg
mov
int
inc
cmpsl
notl
negb
cli
cmp
xchg
push
aad
dec
mov
lods
xchg
decl
cmp
and
inc
dec
or
aam
sahf
jne
aaa
sbb
mov
test
adc
dec
push
lret
mov
outsb
push
ja
test
xorl
inc
adc
das
mov
gs
jecxz
outsl
std
adc
scas
fcoms
and
cmp
ljmp
or
aad
lods
xor
dec
push
fcmovnbe
cmp
je
sub
repnz
inc
sub
mov
sub
lcall
out
inc
in
mov
or
movsb
pop
std
mov
pusha
shll
ss
mov
enter
movsb
pop
pop
dec
push
add
jbe
and
sbb
mov
not
adcb
mov
pop
pop
incb
repz
gs
fucomp
mov
pop
mov
mulb
add
or
xchg
push
pusha
loop
pop
in
add
icebp
outsl
pushf
mov
sbb
or
int
loopne
adc
stos
or
xor
int
push
daa
out
sbb
jne
add
or
xchg
bound
sub
xchg
push
fisubl
cmp
xchg
mov
out
je
pop
call
push
mov
int
pop
cld
shrl
pop
mov
jnp
push
test
ficompl
stc
outsb
imulb
lea
jle
mov
sub
inc
jmp
lods
inc
mov
fmull
pop
dec
add
or
inc
imul
sar
je,pt
add
ret
xchg
dec
dec
xlat
movsb
iret
push
imul
out
mov
loopne
aam
cmpsb
pop
mov
jmp
or
pusha
dec
sub
push
push
sub
jne
sti
sbb
cmp
adc
mov
mov
sbb
and
stos
movb
ds
test
fwait
or
sub
xchg
ljmp
push
sti
pop
imul
lods
sbb
daa
test
mov
xchg
test
push
sbb
cmp
pop
sbb
xor
cwtl
xchg
icebp
call
xchg
in
adc
add
xor
and
add
xor
inc
jp
stos
lret
in
and
dec
xorb
adc
mov
push
pop
mov
or
cltd
fidivl
xor
sahf
mov
cmp
out
mov
and
test
push
mov
fs
and
movsb
add
adc
sub
cmpl
add
push
stos
inc
mov
xchg
pushf
pusha
subl
sbb
mov
movsl
addl
jmp
fldl
test
xchg
rcrl
stc
data16
gs
push
in
js
and
push
hlt
mov
inc
mov
mov
call
nop
pop
fwait
pop
cmp
xchg
rcrb
pusha
xchg
out
gs
inc
and
mov
int3
sub
push
xchg
jmp
xor
or
js
rcrb
fildll
pop
sub
movsl
imul
popa
xchg
fadds
shl
dec
xchg
ljmp
cmp
lock
les
lods
data16
dec
in
inc
call
pushf
cmp
xchg
mov
push
push
lret
es
nop
xchg
gs
xchg
and
imul
ret
gs
mov
xchg
mov
loop
jnp
inc
cmpsb
ret
cmp
push
es
jge
fwait
cmp
scas
or
outsb
out
push
outsb
mov
es
ss
jmp
mov
fwait
incb
into
andb
fildl
sub
mov
jp
nop
ljmp
dec
pop
rolb
fistpl
jmp
pop
jae
cmpsb
jne
pop
test
mov
subl
adc
aam
movsl
pop
in
fidivrl
fimuls
insl
dec
mov
dec
das
lea
add
out
or
imul
lahf
ret
xor
lahf
pop
jge
or
sbb
add
adc
push
arpl
addr16
int3
jns
or
test
iret
sbb
cmp
add
add
mov
cmc
inc
fucomp
mov
insb
mov
sahf
pop
cltd
mov
je
push
ljmp
insb
and
iret
aam
lds
ds
jns
shll
cmp
xor
loop
sub
mov
push
int
or
lock
pop
sub
push
mov
sahf
or
sbb
and
push
je
jmp
mov
pop
clc
repnz
test
xchg
hlt
std
sbb
rcr
data16
les
cmpsl
stos
aad
and
pop
insb
lret
jns
fistpll
mov
rcrb
inc
adc
xchg
or
ljmp
xor
loope
adc
mov
lock
repz
repz
jmp
lds
push
pop
sbb
cmp
mov
aam
jmp
cmp
sub
push
bound
cmpb
xor
test
lods
xor
es
fists
inc
ret
js
cwtl
cmpsl
faddp
xor
adc
push
popa
xchg
add
adc
jl
repz
pop
mov
jne
push
movsl
cmp
mov
das
xor
dec
add
add
movsb
pop
mov
or
sahf
iret
mov
movl
sbb
movsb
sub
or
pop
gs
xor
cmc
adc
xor
sbb
fwait
sti
push
pushf
add
inc
stos
sub
mov
mov
fsubl
test
and
add
leave
pop
mov
or
add
lahf
cli
mov
sahf
cmp
add
mov
sbbb
ror
xchg
mul
aaa
pop
mov
ficompl
mov
xchg
push
cs
out
in
repnz
dec
bound
xchg
sub
hlt
ret
jne
pop
sbb
pop
lds
imul
xor
xchg
notl
ljmp
cmp
mov
inc
mov
jle
popf
pop
rcr
adc
sarb
divl
inc
add
out
push
adc
loope
shrl
xor
xchg
fsts
popf
je
aad
test
leave
hlt
push
mov
lock
popf
mov
dec
adc
test
pop
rol
push
roll
gs
orb
fmuls
std
add
push
stc
sti
pop
cld
add
sbb
add
sub
pop
test
adc
inc
aad
fcomps
cmpsb
pop
pop
lahf
data16
cmc
mov
or
cmpsb
push
sbb
push
fcompl
popa
xor
mov
into
ret
lret
and
popf
cmp
ret
outsl
repz
lods
sub
push
imul
cmp
pop
mov
jge
xor
push
dec
or
push
mov
jb
ja
fmuls
mov
movsb
in
mov
push
in
fists
jae
push
orl
dec
icebp
and
adc
push
mov
mov
cmp
xor
sbb
test
call
cmp
xor
sbb
call
fstpl
fimull
add
adc
lea
jle
out
ret
push
jbe
je
neg
dec
ss
packsswb
je
mov
jns
jns
lods
or
cwtl
int
dec
xor
xlat
pop
and
push
push
or
test
roll
fwait
mov
outsb
sub
or
sbb
dec
jne
sub
jmp
stc
fsubr
xchg
mov
popl
cli
nop
jns
fs
or
push
push
cltd
inc
pop
mov
push
pop
test
sbb
mov
ret
jl
push
pop
frstor
popa
sbb
push
adc
cmp
jg
dec
cmpsl
ljmp
imul
rcr
lahf
inc
mov
jl
mov
dec
mov
test
xchg
mov
daa
mov
pop
mov
sub
test
xor
mov
xchg
cmp
bound
aam
push
and
arpl
xchg
loop
adc
das
mov
dec
iret
mov
hlt
iret
mov
dec
lret
mov
xchg
adcl
mov
leave
and
push
xchg
outsb
pop
jp
jbe
jge
cmp
clc
ja
lret
scas
rcll
test
icebp
bnd
mov
xchg
fnstenv
jp
adc
fldt
jo
jns
icebp
orl
cmp
cltd
add
ret
or
testb
daa
mov
je
shll
fnstsw
xchg
jno
ds
xchg
stos
int3
or
mov
mov
adc
push
pop
push
test
fildll
mov
lods
lcall
cmp
mov
cs
sbb
stos
cltd
xchg
fistps
mov
sbb
std
shrb
lea
push
ss
push
test
popa
cli
icebp
push
lock
mov
out
sbb
cmp
jmp
add
mov
mov
and
mov
xor
jo
scas
aad
outsb
jnp
fisubs
roll
jg
xor
iret
ds
imul
lret
and
ficomps
pop
push
andl
sbb
and
in
pop
adc
or
outsb
fst
in
mov
mov
adc
out
popa
mov
sub
arpl
insb
xor
out
sub
push
mov
or
jno
mov
mov
cmpsl
and
in
dec
dec
adc
or
std
mov
loopne
fimuls
pop
inc
fwait
or
repnz
jo
jmp
sbb
repz
mov
add
jmp
pop
pop
dec
inc
push
out
mov
gs
outsl
dec
imul
cmp
loope
push
neg
lods
inc
pop
les
sub
std
int3
pop
adc
scas
cmp
pop
mov
or
jb
cmp
fdivl
pop
pushf
aaa
lods
stos
ds
test
jb
loope
mov
xlat
push
in
ljmp
fisttps
pop
into
les
scas
lret
pop
pop
in
xor
fnstenv
daa
add
sbb
subb
or
in
sub
add
xchg
jecxz
scas
push
and
sbb
jle
cmp
adc
mov
mov
lods
push
fldl
mov
mov
ja
icebp
or
sub
fistpll
iret
lret
in
inc
addb
das
mov
rol
sub
into
mov
cmp
or
stc
fcoms
scas
sahf
pop
xchg
add
mov
imul
inc
push
adc
test
test
movsb
addr16
mov
sbbb
dec
lock
push
insl
in
or
out
bound
jns
mov
sbb
out
mov
and
in
xor
sbb
lea
sti
jmp
data16
sti
in
daa
outsl
in
sti
inc
adc
push
test
fisubrs
mov
int
mov
scas
push
sbb
xor
sub
es
inc
mov
fwait
sub
test
adc
xchg
adc
jg
bound
cmp
inc
je
out
push
mov
add
mov
cmp
leave
loopne
mov
lahf
xor
loope
push
add
mov
filds
cli
mov
xor
fistl
je
stos
pop
in
in
jmp
mov
and
push
ljmp
push
ljmp
mov
test
mov
mov
mov
mov
push
lods
add
and
fnstsw
mov
and
in
sub
lock
mov
sub
stos
lods
xchg
popa
inc
inc
divl
and
sti
dec
or
mov
adc
ds
jge
jmp
jbe
jbe
and
mov
and
outsb
aam
into
stos
xchg
lods
add
adcl
pop
bound
inc
mov
cmpsl
mov
ds
mov
pop
pushf
aas
jae
nop
sbb
jb
dec
or
out
xchg
ss
test
icebp
mov
push
adc
pop
shlb
int3
movsb
inc
xchg
clc
dec
xacquire
ja
in
icebp
insb
push
test
loope
loope
adc
jmp
jns
imul
add
stos
add
nop
idivl
imul
loop
mov
imul
sub
jl
dec
xchg
fsubrs
ret
pop
fstps
lods
lcall
iret
push
mov
xor
rcl
jmp
test
loopne
adc
cmp
xchg
push
loop
adc
int3
movsl
mov
cmpsb
jmp
ret
or
push
inc
icebp
sbb
fldt
loop
cmp
cltd
lods
push
outsb
cmp
adc
adc
jge
xor
add
clc
cmc
mov
add
push
cltd
add
clc
call
xchg
clc
pushf
in
cwtl
std
clc
daa
andb
idiv
inc
and
and
pop
pop
sti
test
pop
iret
mov
xor
dec
inc
fincstp
xchg
out
jns
dec
scas
fbld
jle
lcall
cmp
mov
test
test
icebp
push
cli
stos
xchg
xor
mov
rcrb
jle
and
mov
fidivs
jmp
repz
or
inc
sbb
mov
mov
cli
lods
imull
add
xor
jbe
and
enter
popf
dec
mov
in
cs
mov
hlt
aaa
std
addr16
jle
out
jge
arpl
mov
sarl
imul
faddp
jle
lret
cmpl
cltd
jb
or
pop
mov
xchg
jecxz
pop
and
cld
mov
jb
mov
push
sbb
es
pop
push
cmp
cmp
pop
movb
sub
shll
sahf
out
stos
andb
mov
and
bound
lea
lock
jge
insb
fdivrl
orb
jns
or
mov
icebp
cmpsl
pop
pop
out
ljmp
mull
scas
insb
bound
int
mov
cmp
and
ret
push
pop
xchg
add
repnz
add
lock
inc
arpl
out
jl
xorb
pushf
mov
test
push
out
sbb
xor
popa
aam
fcoml
mov
mov
shl
sbb
imul
mov
int
fistl
lret
in
cmpsb
stos
push
imul
test
pop
out
cwtl
bound
cld
inc
cmp
mov
sub
cld
sbb
mov
js
sbb
mov
and
add
lret
mov
jne
inc
fdiv
jb
mov
or
xchg
or
lret
fisttpll
clc
xor
inc
mov
mov
js
test
push
push
es
or
mov
popf
test
xorb
inc
mov
rcll
shll
sub
jge
pushf
mov
and
rcrb
cmp
inc
mov
jge
out
push
cld
test
mov
outsl
inc
mov
out
inc
push
cmpsl
or
pop
mov
lods
lret
or
inc
adc
cmc
pop
inc
mov
jns
xlat
js
xor
rcpps
dec
or
pusha
das
xor
inc
fdivl
xor
repnz
xor
insl
and
or
notl
sub
dec
push
test
lock
ret
cltd
or
icebp
fucomip
sub
stc
stos
repnz
inc
out
test
cmc
or
fistpll
test
jb
xor
lret
insl
cmpsb
lods
pop
jg
mov
mov
adc
cmpsl
fisttpll
xlat
pop
sti
jle
addr16
adc
repnz
xchg
jmp
shlb
notl
sub
cltd
or
sub
push
imul
lock
lods
xchg
stos
jns
inc
xor
push
js
divb
jge
js
rclb
loopne
clc
xor
out
dec
enter
in
mov
mov
insl
adc
mov
push
jl
imul
sti
adc
or
nop
fwait
mov
xlat
add
jle
enter
sbb
pushf
cmp
xor
sahf
push
stos
jl
and
mov
pop
dec
arpl
push
sarb
sub
loopne
push
stos
dec
and
stos
fisubs
addr16
dec
xor
xchg
pop
lret
repnz
popw
leave
lret
sub
movsl
pop
adc
adc
sub
adc
cs
js
out
sbb
pop
sub
mov
and
lods
sbb
push
xchg
adc
fstpl
push
mov
mov
lret
insl
mov
and
fs
cmp
inc
jnp
mov
out
dec
jbe
mov
fstpl
cwtl
mov
mov
into
clc
pop
xor
call
bnd
mov
and
cmp
adc
push
mov
aad
xchg
scas
push
dec
push
fildl
out
mov
movsb
pop
fwait
loopne
cli
movsb
pop
inc
stos
cmp
outsb
inc
pop
roll
into
cmp
cmp
in
jle
adc
cmpsl
jae
lods
jno
cmp
push
fcompl
das
add
sarb
mov
imul
mov
inc
pop
dec
pop
daa
pop
imul
lcall
and
int3
push
lret
xchg
aas
in
arpl
sbb
sub
and
dec
repnz
jno
popl
and
mov
jns
ljmp
sahf
xor
add
xchg
push
lock
xor
in
repnz
mov
xor
lahf
push
add
pop
insl
repz
in
stc
xor
call
pop
xor
and
cmp
out
mov
mov
sub
or
mov
cltd
cmp
push
scas
xor
lods
sbb
xlat
rclb
pop
adc
pop
cmp
sbb
ja
jg
push
bound
fbld
ret
jno
mov
or
test
inc
test
mov
jmp
je
pop
push
inc
sbb
mov
and
pop
scas
sahf
lock
dec
bound
add
lret
sub
push
jno
enter
test
add
enter
xchg
jg
pop
push
jle
or
mov
rorl
jg
cs
mov
inc
xchg
mulb
jp
cmp
sub
sbb
xchg
das
xchg
clc
sbb
pop
inc
add
xor
nop
adc
mov
out
xor
call
repz
inc
jb
fcomi
roll
je
jo
aad
add
push
pop
dec
pop
lret
fildll
test
cmp
add
testl
xor
pusha
add
stc
add
sub
out
fildl
ja
sub
ja
data16
adc
test
xchg
lea
xchg
mov
mov
pop
xchg
into
inc
dec
sub
push
and
imul
or
pop
xchg
stos
sub
out
out
lret
pop
ja
jp
in
sbb
push
jp
sbb
out
push
or
sub
mov
cld
push
jmp
or
pop
lods
ret
or
xlat
xchg
jne
fisubrs
add
inc
jno
ljmp
cs
popf
jb
sbb
push
out
aam
in
mov
push
inc
mov
dec
cltd
popa
dec
pop
popf
jne
fisubl
mov
mov
push
std
dec
popf
xchg
xchg
mov
jbe
ret
pusha
mov
in
adc
xchg
jmp
in
cmpsb
xor
adc
outsb
leave
push
imul
sub
dec
jae
daa
popa
mov
mov
jl
jle
push
test
sub
pop
mov
jecxz
stos
fnstsw
stos
jmp
mov
cltd
jo
imul
mov
inc
adc
mov
xchg
roll
sub
mov
xchg
into
jmp
gs
sub
sub
sbb
sarb
fsts
movsl
ror
cmpsb
inc
or
sti
mov
imull
mov
add
cmpsl
das
in
pop
dec
jmp
outsl
or
adc
dec
jbe
js
cmpsl
out
jae
data16
call
and
inc
arpl
lods
out
sbb
orb
mov
or
or
fdivs
hlt
push
divb
jg
xor
push
push
enter
sti
leave
mov
aas
or
mov
movsb
adc
lods
cmp
incb
push
bound
nop
mov
xor
adc
jg
pop
push
adc
mov
sbb
outsb
mul
cmp
test
mov
hlt
cmp
dec
add
sub
sbb
loopne
xlat
daa
xor
test
pop
mov
dec
or
mov
push
sub
pop
std
mov
iret
testb
cmp
jbe
stc
ret
mov
mov
add
add
mov
mov
cli
pop
dec
cmp
into
xor
mov
jecxz
int3
and
pop
call
mov
xchg
cmp
nop
pop
shlb
ret
hlt
or
inc
pop
jnp
pop
xor
dec
inc
aaa
sub
mov
push
aas
jo
cmc
pop
fwait
sbb
nop
inc
cld
dec
push
outsl
cs
add
or
sbb
cmp
in
mov
jae
fisttps
xor
loope
aas
cmp
xchg
adc
in
cmp
inc
or
orb
nop
fsubp
ret
fdivl
cmpsl
sbbb
or
mov
inc
clc
cmp
mov
mov
mov
add
hlt
shll
xchg
popf
push
das
xor
push
sub
flds
scas
test
fs
nop
rcrb
movsb
int
incb
int3
cli
mov
sbb
pop
cmpsb
jecxz
aad
pop
mov
fnstsw
enter
insl
ljmp
div
mov
xchg
cmp
jbe
out
sarb
lods
jp
in
cmpsl
mov
inc
sub
int3
out
inc
jl
or
lods
enter
imulb
adc
fs
xor
adc
jne
pop
dec
rol
mov
mov
cmpsb
fimuls
and
xor
push
mov
push
into
jg
pushf
lahf
arpl
jmp
js
outsb
outsl
push
lods
clc
jnp
lods
inc
xchg
pop
pop
insb
jbe
and
cmp
adc
or
adc
outsl
mov
aad
mov
mov
cmp
fstp
call
addr16
int3
sbb
sbb
adc
and
lods
lods
or
jmp
lret
cs
jecxz
leave
int3
adcb
jg
ljmp
stos
push
mov
sub
jmp
in
pop
es
lods
ss
mov
fs
cmpsl
pop
insb
jl
test
xlat
inc
pop
or
add
dec
imul
imul
aaa
pop
push
fscale
fadds
pop
cld
in
cmpsl
mov
inc
popa
mov
jno
jg
and
lldt
inc
aad
into
dec
mov
es
daa
xchg
sub
jnp
mov
data16
movsb
in
xchg
or
test
mov
and
hlt
rorl
jecxz
inc
in
ret
add
aad
and
or
jmp
leave
pop
fdivrl
jns
xor
std
add
movsl
or
stos
movsl
movsl
lds
lods
pop
insb
dec
lret
dec
jle
jno
and
add
add
or
in
pop
ds
jge
stos
pushf
mov
jbe
data16
lret
cmpsb
xchg
push
xor
xor
jno
ret
xchg
push
push
ret
js
fildl
pop
sub
pop
sbbl
sbb
mov
xchg
lret
push
mov
aaa
sub
mov
loope
mov
jno
mov
xchg
add
insl
mov
mov
sti
movl
mov
sub
jnp
mov
stos
mov
cltd
push
ficomps
inc
dec
and
or
stos
push
fldcw
or
jno
mul
cmpsl
jns
mov
mov
fucom
push
jl
and
in
jl
adc
lea
cmc
addr16
arpl
out
enter
jecxz
dec
sbb
push
ja
push
dec
mov
cmp
xor
loope
or
sub
push
imul
js
mov
inc
mov
mov
loopne
outsl
into
sub
sub
stos
jmp
iret
adc
mov
sbb
push
xchg
adc
push
mov
sbb
rolb
xchg
mov
xchg
xchg
jecxz
pop
cltd
jae
call
push
test
ret
mov
mov
iret
jbe
push
rcll
fbstp
roll
call
pop
int
fs
jge
mov
cltd
inc
iret
outsl
xchg
loope
inc
or
negl
jecxz
mov
cmp
adc
sub
cltd
or
xor
outsb
sbb
rcrl
and
adc
cmp
lret
push
les
js
mov
movsb
mov
jmp
cwtl
cmp
pop
loop
movsl
out
pushf
in
fmull
push
aaa
jecxz
push
xor
xor
fnstenv
jbe
dec
clc
and
mov
push
shl
repnz
icebp
rcrb
cli
sub
mov
popf
cld
push
add
or
pop
aas
cli
inc
dec
push
pop
into
or
shr
xchg
or
inc
xor
jno
cli
push
daa
xchg
xchg
cli
adc
adc
mov
lods
adc
mov
and
sub
rcll
mov
aaa
cmpxchg
cmc
lds
enter
adc
mov
sbb
push
sti
aaa
daa
aad
movsl
adc
ja
xor
mulb
push
push
add
sbb
jbe
sub
subl
outsl
mov
xchg
cli
and
push
fidivrl
je
sbb
dec
xchg
sbb
sbb
aam
mov
fdivrl
call
mov
mov
jae
mov
rclb
xchg
xorb
jg
sub
push
xchg
xchg
fistps
inc
pop
fdivrl
cmp
push
adc
mov
lods
xor
and
je
cs
lock
xchg
aam
add
fs
in
insb
iret
and
jbe
in
mov
shrl
jnp
aad
adc
into
adc
sahf
inc
popa
or
push
pop
mov
mov
scas
jb
cmp
mov
or
mov
clc
pavgw
nop
lods
and
ret
xchg
and
out
jmp
xorl
inc
insb
fsubrl
decb
rclb
imul
inc
dec
pop
push
or
fsubl
in
in
je
mov
cmpsl
sub
outsl
iret
stc
pop
jl
addl
fstps
inc
dec
add
arpl
mov
lods
dec
loop
int3
outsl
fisubrl
shll
int3
clc
ljmp
fs
xchg
push
das
pop
mov
inc
lods
loope
pop
mov
addr16
loopne
test
ljmp
popf
or
stos
xor
repz
jbe
xchg
outsb
das
jae
mov
fcomp
mov
lret
jp
push
pop
xchg
cltd
scas
test
nop
dec
test
jl
inc
outsb
adc
inc
push
and
dec
add
int3
popf
xchg
cmp
pop
xchg
fs
jo
jge
and
mov
push
imul
stc
or
cmp
mov
mov
xchg
push
clc
add
adc
mov
ror
aad
cmp
fs
sbb
mov
push
icebp
xor
mov
add
hlt
xchg
cs
mov
sub
inc
mov
rcll
add
shrl
cwtl
inc
out
mov
mov
out
scas
push
xor
das
xchg
dec
and
outsb
inc
enter
es
xchg
sbb
ret
lods
jae
xchg
jns
xor
mov
aad
dec
into
idivb
push
and
xchg
in
shrb
jno
pop
insb
pop
push
mov
in
aam
movsb
popaw
loop
push
add
adcl
sub
shlb
mov
sub
inc
mov
sub
jmp
sti
sub
jb
or
stos
mov
in
inc
test
inc
stos
je
imul
and
jg
add
mov
loop
jno
hlt
call
lds
and
std
imul
pop
sbb
ja
dec
or
lods
pop
mov
pop
cwtl
xchg
adc
fidivrl
sbb
inc
inc
scas
and
add
loopne
arpl
add
xchg
adc
movsb
repz
lock
mov
adcl
mov
xchg
dec
dec
inc
jno
pop
test
sub
cld
ds
fisubs
mov
int
jecxz
jp
jl
fidivs
xchg
cld
push
mov
xlat
rcrb
ret
lods
pop
add
add
addr16
test
add
out
mov
pop
xchg
jle
pop
test
push
sbb
scas
aas
popa
and
jnp
inc
dec
out
pop
rcrl
lods
hlt
add
dec
aam
bsf
call
jae
sbb
lret
andl
cmp
pop
je
je
inc
in
lea
dec
std
out
int
jg
mov
jl
pop
mov
push
xlat
xor
xor
jg
sbb
jae
xchg
popa
icebp
mov
pop
je
dec
push
loope
inc
cmpsb
sbb
out
out
jge
inc
push
add
cmc
addr16
arpl
push
push
xchg
push
push
xchg
shl
cld
movsl
and
shll
popa
lahf
fsubrl
movsb
sub
or
es
ja
cltd
xor
cmp
mov
inc
add
stos
aas
add
push
paddq
gs
dec
and
mov
arpl
mov
cwtl
adc
pop
outsb
hlt
sbb
or
mov
xchg
xchg
test
sub
xlat
icebp
lret
xor
jae
hlt
and
cmp
xor
shll
dec
mov
daa
push
sahf
pop
shll
jbe
cli
mov
jb
outsl
repnz
xlat
inc
fdivl
mov
rcrl
push
incl
mov
xorb
adc
mov
aaa
pop
ja
int
rorb
and
and
and
xchg
loop
xor
rorl
lds
in
cmp
repz
divps
mov
std
sbbl
mov
subl
loopne
fisubl
mov
xchg
or
push
leave
outsb
dec
cmp
dec
stos
dec
hlt
add
bound
mov
adc
pop
int
and
sub
jbe
pop
rol
push
cs
xor
pop
mov
sub
shll
cmpb
push
jl
test
es
lods
mov
out
sub
repz
in
dec
push
cmpb
dec
nop
jmp
mov
sub
and
icebp
pop
pusha
add
mov
mov
cmc
and
insb
adc
mov
mov
daa
arpl
sbb
adc
add
jecxz
rclb
cmpsl
xchg
jo
pop
mov
int3
popf
cmc
sbb
cs
mov
mov
and
inc
jg
ret
or
pop
insb
jno
shll
arpl
not
or
insb
inc
rol
iret
ss
mov
fcompl
push
mov
cmp
fucomp
push
sbb
push
push
mov
loopne
pop
push
xchg
and
push
or
hlt
mov
pop
lods
jne
test
popf
mov
mov
pop
hlt
jae
push
and
push
mov
mov
xor
testb
in
sub
and
jge
cmpsb
jmp
in
mov
mov
push
es
ja
mov
jp
mov
xor
push
dec
xor
and
loop
loope
pop
mov
shl
sbb
push
test
dec
and
cmp
rclb
rcr
or
fadd
jge
fsts
pop
xchg
xor
fadd
mov
stos
sbb
mov
enter
sub
and
xchg
vpsrad
and
jnp
push
sbb
stos
and
in
cmc
sbb
or
sbbb
pushf
add
add
cmp
call
cmp
pop
ljmp
dec
js
jbe
add
pop
inc
subb
lods
xor
call
and
aas
dec
xchg
mov
jb
jg
sub
or
xchg
pushf
call
xchg
rcll
cld
loope
dec
jns
add
dec
rorb
pushf
fstps
xchg
inc
pop
add
imul
cmpsb
mov
mov
xchg
int3
jnp
mov
lcall
inc
hlt
inc
stc
lahf
mov
dec
lret
pop
bnd
ret
ficoml
sbb
push
repz
negb
cltd
or
mov
in
rcrb
sbb
dec
adc
pop
xor
add
fcmove
add
and
or
subb
jp
xor
sahf
xchg
mov
pop
in
sbb
add
mov
js
movsl
loopne
cmc
fstps
push
or
push
in
xor
xor
ficoml
sbb
enter
cmpsb
sub
pop
cmp
dec
fiaddl
inc
xchg
dec
pop
lock
dec
and
and
dec
lahf
movsl
cmp
xchg
push
jle
sti
sarl
fdivrl
int3
inc
jns
adc
jecxz
in
lock
adcb
jb
aam
ljmp
scas
or
movsl
push
ret
icebp
adcb
jle
mov
jbe
mulb
mov
fildl
xchg
enter
cmc
outsb
lods
mov
sub
leave
in
fsts
or
xchg
adc
sub
add
lcall
pop
mov
add
std
out
xor
shll
push
sahf
dec
dec
cltd
mov
sub
jne
xchg
rclb
xchg
and
in
adc
xor
mov
xlat
stos
sub
paddsw
jmp
aam
pop
dec
mov
xchg
test
inc
fstpt
flds
pop
shll
lods
repnz
outsl
out
sbb
jnp
imul
cmpsl
jno
aad
loopne
or
inc
push
push
mov
sbb
das
ret
mov
ficoms
xchg
jecxz
cltd
xchg
iret
movsb
leave
adc
and
insl
cli
mov
lods
xor
jmp
jle
cwtl
imul
aam
jp
loopne
xchg
loop
adc
xchg
mov
inc
push
and
jns
xor
mov
pop
inc
fwait
cmp
int3
mov
pop
insb
push
xchg
push
xor
pushf
inc
fwait
in
push
xor
add
dec
dec
add
add
popa
mov
cmp
js
xchg
dec
out
pop
dec
sbb
and
jb
xchg
gs
mov
pushf
jo
push
cmpsl
ja
iret
aam
notb
sbb
test
or
rorl
xchg
jmp
xor
mov
js
lcall
inc
mov
pop
aas
ret
pop
mov
das
pop
inc
mov
aaa
out
das
popa
imul
push
pop
fmuls
out
leave
push
inc
and
repz
or
and
pop
ja
push
push
push
insb
ret
rorb
mov
pop
xor
xor
pusha
inc
and
dec
push
xor
sub
xchg
mov
repz
mov
xor
daa
jae
xchg
pop
mov
shl
fdivrl
dec
gs
insb
push
in
imul
mov
or
pop
cmc
push
and
nop
icebp
xchg
xlat
sub
movsb
out
cltd
popa
or
popf
in
jo
aaa
les
call
add
push
add
xchg
fwait
mov
xchg
out
dec
hlt
lods
sbb
jle
mov
insb
cs
mov
es
or
addl
mov
into
es
mov
and
fistps
pop
arpl
test
pushf
aam
mov
mov
push
sbb
insl
add
mov
pop
dec
cwtl
pop
insl
mov
mov
cmpsb
add
inc
or
pop
jno
sub
pop
stc
jmp
ret
add
and
cwtl
gs
mov
xor
xadd
imul
jb
mov
fsubl
sarb
and
push
add
jns
dec
sub
sbb
push
leave
ret
push
mov
sbb
xchg
popf
js
rcrl
add
jns
xor
adc
outsl
and
inc
jg
ljmp
bound
inc
inc
adc
in
dec
dec
rorl
mov
xchg
js
adc
push
repz
loop
je
inc
fidivrl
xchg
shll
mov
cli
stos
bound
enter
les
xchg
ja
jb
movsl
rolb
cltd
inc
push
cli
adc
cmp
mov
and
in
mov
mov
add
sbb
pop
lods
push
mov
mov
add
jae
data16
inc
fsubrs
inc
xchg
outsl
mov
and
jl
flds
gs
jg
xchg
dec
or
push
jnp
inc
das
xchg
inc
outsl
push
nop
add
stos
mov
jb
cmp
ret
xor
cmp
cltd
push
push
xchg
and
push
xchg
arpl
push
loop
jnp
adc
xor
incl
dec
add
jne
mov
adc
jp
loope
inc
inc
add
pop
jne
mov
rcrl
mov
jl
add
or
sbb
sbb
ja
and
in
cmp
mov
sarl
sarl
pop
movsb
ret
bound
push
lahf
mov
cmp
mulb
add
ljmp
sbb
scas
call
test
stos
mov
jb
daa
fadds
cli
shll
mov
xor
mov
and
mov
lock
sar
and
dec
stos
movlhps
daa
or
cld
mov
pusha
shlb
pusha
pop
and
adc
enter
xor
cmp
mov
inc
pop
mov
imul
rcrb
inc
out
jmp
test
inc
jge
xor
and
xor
test
mov
pop
test
adc
add
aad
inc
aam
cmpsl
es
pop
xorb
std
imulb
push
ret
cltd
pop
je
add
loope
in
int
xchg
push
pop
mov
jge
push
pop
int3
inc
or
mov
cmp
hlt
push
lods
push
jmp
iret
xchg
or
sbb
dec
popa
mov
insl
or
xor
xor
dec
sbb
insl
inc
cmp
jecxz
and
mov
mov
or
cwtl
jnp
and
cmp
push
div
mov
jbe
adc
or
mov
ret
and
arpl
mov
shrl
movsb
push
jns
and
lcall
push
stos
push
dec
stos
mov
jnp
sbb
sarb
or
shrl
jp
cmp
adc
mov
arpl
iret
sbb
pusha
xchg
aaa
jecxz
addr16
sub
sub
in
or
fisubs
scas
push
sbbl
jno
stos
xchg
xchg
sbb
into
jbe
aas
sbb
mov
xlat
xor
xchg
dec
xchg
fcmovbe
xchg
imul
sarl
fs
adcb
add
pushf
cmpsb
jg
xor
loope
dec
mov
xor
outsb
push
daa
test
pop
into
popf
cmp
sub
mov
pop
aas
ljmp
test
mov
fs
add
dec
push
mov
ss
inc
icebp
jp
fstp
jns
jle
popf
rcrb
lret
xchg
inc
lods
pop
sub
xchg
jl
fnsave
xchg
pop
inc
and
or
mov
inc
mov
jo
jno
mov
mov
jmp
jge
enter
sti
das
cmp
sbb
testl
ja
mov
repz
imul
inc
mov
shl
mov
and
xor
pop
shr
jo
cltd
or
ds
pop
out
mov
xor
shrb
out
movsb
ficomps
cmp
inc
pop
movsl
add
sub
sub
scas
cmp
lds
cmc
or
adcl
es
dec
rcrb
addl
aas
xchg
sub
push
leave
in
gs
stos
sbb
mov
push
aaa
movb
sbb
divl
fwait
jge
lahf
cmp
movsb
sbb
mov
cmp
addl
cli
cmc
or
pop
xchg
addr16
loope
std
into
sub
xor
inc
daa
int
insb
pop
cmpsl
mov
out
push
adc
and
adc
inc
lea
mov
mov
xlat
xor
mov
pop
lods
loop
ja
out
orl
frstor
or
test
push
jmp
or
in
inc
cmp
nop
pop
push
popf
pop
add
mov
mov
push
jb
jle
and
xchg
insb
daa
fnstenv
dec
pop
popa
inc
fiadds
sbbb
sar
fs
pop
jge
out
arpl
inc
push
sbb
fists
and
and
addr16
inc
pop
mov
lods
icebp
mov
mov
inc
mov
cmpsl
outsl
inc
inc
sbb
add
nop
cld
imul
jbe
repz
repz
cmc
sub
ret
cmp
or
scas
adc
push
data16
stos
pop
sbb
xchg
mov
pushf
sub
and
dec
loop
ja
xor
mov
push
bound
stos
dec
andb
popf
negb
push
xor
and
jno
add
in
cmc
test
imul
in
aam
sbb
mov
rcr
dec
les
and
xorl
cmpsl
cmpl
adc
popf
sbb
jb
jne
push
jecxz
jo
mov
or
inc
mov
sahf
xchg
imul
lret
dec
or
rcl
mov
fs
mov
pusha
mov
xchg
imul
lret
xchg
leave
shll
popa
out
cmp
lods
mov
jns
cmp
mov
ret
inc
lea
add
mov
sti
jp
mov
mov
cmpsl
out
adc
or
jbe
fmul
enter
es
sbb
data16
popa
push
daa
cwtl
adc
xchg
lcall
lahf
mov
add
dec
xchg
cld
outsb
mov
loop
into
call
loopne
push
xor
in
pop
jp
add
sub
sbb
mov
sbb
faddl
dec
je
add
fsubrl
mov
inc
icebp
sub
std
fcmovu
mov
jg
or
inc
rcr
sbb
push
adc
xchg
mov
pop
pushf
fwait
pop
pop
add
hlt
jecxz
cmp
mov
push
rep
cld
push
jp
shr
add
cs
je
jae
jnp
xchg
ja
xor
shrb
inc
scas
lahf
mov
neg
nop
mov
and
popf
test
sub
lods
pop
ja
mov
int
xchg
fwait
aas
jle
inc
and
push
pop
call
inc
rolb
pop
inc
mov
outsb
sub
cwtl
rolb
mov
fisubl
cmp
cmp
cmp
or
stos
stos
dec
out
xor
stos
test
xor
pop
jne
sub
pop
and
sbb
pop
mov
inc
push
negb
in
fidivrl
bound
std
sub
jbe
xlat
rolb
adc
dec
dec
xor
push
push
int3
xor
mov
stos
cmc
xor
jg
icebp
popa
outsb
mov
xchg
inc
inc
push
xor
stc
adc
adc
pop
cmp
call
out
cltd
mov
mov
adc
cmp
pop
sub
sbb
adc
or
arpl
loope
test
lea
fldl
call
ret
sub
mov
lock
adc
test
repz
cmc
fs
jp
add
stos
dec
inc
clc
mov
out
jns
sbb
xlat
scas
movsb
push
adc
cmpl
cmp
loop
or
je
andl
jns
push
sahf
adc
test
popf
bound
pushl
mov
clc
xor
int3
cmc
mov
xor
popf
adc
mul
std
push
jb
pop
cmp
jmp
test
arpl
jecxz
rcl
test
mov
in
outsb
mov
and
lret
jge
jg
push
out
in
adc
add
aad
jmp
dec
xchg
dec
jbe
jge
je
ds
stos
mov
lock
loopne
jae
adc
or
fimuls
inc
sub
insl
ret
add
xor
dec
clc
and
dec
lods
xlat
push
jle
and
out
outsb
in
jo
ret
scas
cmc
stos
cmp
pop
or
push
xchg
flds
adc
jmp
xor
fldt
out
stos
fsubl
lods
xor
subb
out
mov
test
mov
xchg
fdivr
fisubs
and
adc
insb
es
into
data16
lods
mov
shl
push
push
and
xchg
loop
insb
push
jnp
in
shr
mov
mov
ss
lods
mov
mov
xor
add
and
out
pop
lods
cmc
cmpsb
movsl
xor
les
or
cmc
outsb
loope
cmp
dec
jg
fistl
cmp
cmc
mov
fwait
adc
jecxz
push
sub
xchg
mov
insb
lahf
cs
ret
add
jp
sar
jecxz
and
ds
jne
xchg
add
scas
iret
mov
call
outsb
out
in
mov
mov
out
xchg
cmpsb
outsb
xchg
out
inc
aam
jmp
sbb
adc
aas
cwtl
mov
imul
lahf
sub
imul
mov
into
mov
and
cvtpi2ps
push
pop
inc
cli
dec
push
stos
jp
movsb
and
sbb
mov
inc
and
xor
fdivrp
arpl
jg
push
dec
shrb
dec
bound
addr16
fnstenv
mov
sbb
jnp
sub
mov
xchg
and
ds
pop
inc
leave
push
outsb
out
ja
imul
adcl
cmp
mov
scas
pop
dec
or
mov
icebp
jae
pop
xchg
inc
es
jge
fildl
mov
mov
xchg
inc
mov
outsl
push
int3
or
dec
or
repz
in
pop
das
pushf
mov
lcall
or
cmpsb
jg
pop
and
or
sub
leave
pop
mov
daa
cwtl
ljmp
cmp
scas
mov
pop
shrw
add
xor
push
inc
ljmp
inc
sbb
jb
pop
insb
pop
cmpsl
or
das
xor
dec
xchg
nop
mov
sub
lea
push
orl
addl
bound
pop
cmpb
cmpsb
iret
lea
dec
mov
pop
jne
cmc
aaa
xchg
dec
addr16
add
adc
lods
loopne
push
dec
imul
notl
or
mov
sbb
cmp
or
mov
int3
adcl
int
mov
daa
push
inc
xchg
pop
mov
and
pushf
push
cli
xchg
pop
and
test
rcrb
xchg
mov
and
out
push
pop
add
icebp
fcmovu
push
lahf
pop
jmp
das
mov
leave
les
pop
nop
jnp
pop
adc
inc
push
mov
loopne
les
adc
push
call
ret
ficoms
sbb
aaa
aas
push
mov
mov
mov
enter
jmp
inc
jp
inc
and
pop
mov
adc
pusha
push
push
imul
add
mov
ror
inc
out
and
cmpsl
mov
lret
sbb
fiadds
test
mov
jp
sti
movb
jg
aad
adc
cmp
push
adc
fcomi
inc
jecxz
sar
sbb
pop
lret
test
pop
cmp
adcl
xchg
xor
adc
jle
fmuls
mov
or
add
mov
or
sbb
js
into
test
sbb
xorl
int3
loopne
int3
jno
aaa
sbb
inc
bound
push
icebp
lahf
test
pusha
adc
push
push
outsb
in
jge
mov
mov
inc
cmp
repz
dec
repnz
sub
push
or
add
sti
insl
dec
je
sub
and
ja
push
mov
ja
cmpsb
fisubrs
jmp
pop
cmpsb
into
in
or
out
mov
repz
xlat
cmp
mov
jle
sub
es
mov
clc
leave
aas
mov
sbb
xchg
xchg
cmp
es
insl
repnz
popa
push
adc
cs
cwtl
ds
negl
pushf
sarb
mov
stos
sbb
out
iret
iret
fisubl
push
sub
mov
mov
ljmp
fnstcw
lods
and
push
hlt
xchg
fsts
pop
ljmp
subb
mov
cmp
shlb
popa
imul
movsb
or
addb
test
jge
jmp
into
push
adc
hlt
cwtl
icebp
fisttps
jno
js
pushf
ss
and
outsb
ret
rcrl
cli
jo
hlt
jae
cmp
mov
shrl
fs
loop
mov
adc
jbe
mov
and
out
mov
or
xorl
sub
pop
xor
scas
in
je,pt
sahf
jno
imul
nop
shl
loopne
insl
jnp
repnz
fmull
shlb
sbb
cmp
lock
imul
aad
lock
les
lret
xor
add
and
cmp
popf
pusha
test
xor
push
inc
sub
jbe
jnp
mov
jmp
call
or
sti
sub
sbb
fisttps
rcrl
enter
sbb
sbb
popf
inc
or
lods
xor
inc
cwtl
inc
mov
cmpsb
pusha
dec
push
es
jns
or
adc
xor
mov
sub
lock
cmp
ss
das
inc
push
adc
loope
pop
and
scas
testl
jge
cmp
scas
pop
cmpsl
mov
mov
xor
add
xchg
pop
xchg
ret
into
loope
inc
iret
aad
add
push
and
or
adc
outsl
jp
andb
testl
sbb
add
inc
push
xor
shrb
add
enter
push
call
leave
jge
or
testb
push
sub
xchg
push
rol
jnp
jge
cmp
pop
lods
pusha
adc
xchg
pop
out
stos
movsb
cmp
aaa
outsl
inc
and
sarl
and
jno
jo
xor
push
loop
push
cmp
mov
sbb
pushf
shrb
dec
fs
jo
dec
xchg
jae
into
xor
mov
out
add
iret
fstl
test
insl
ja
pop
push
inc
sbb
les
dec
sbb
test
pop
mov
ja
mov
and
sub
inc
sub
lret
mov
prefetch
or
and
and
imull
cmp
pop
lea
lret
cli
mov
inc
inc
push
and
mov
mov
jle
mov
cmp
in
xor
cmpsb
lret
xor
dec
je
stos
push
jnp
ja
mov
lods
pop
dec
in
jae
sbb
decb
adc
fs
test
mov
inc
add
fdiv
cwtl
and
push
or
mov
jno
sbb
in
pop
popf
push
ljmp
das
add
gs
stc
lods
ja
les
addr16
cs
push
ret
cmp
add
sbb
xchg
cmp
xchg
pusha
pop
mov
adc
jnp
addb
dec
mov
jns
mov
pop
add
sbb
ja
fdivs
pop
mov
xor
call
int3
addr16
jle
sbb
aam
outsl
jge
rclb
add
out
pop
cmc
jnp
or
sub
add
lods
adc
cvtdq2ps
pop
adc
jns
mov
pushf
xchg
xor
sub
push
or
sbb
mov
loopne
mov
lods
sbb
push
jge
xchg
push
fstl
call
subl
dec
and
pop
cmp
xor
mov
mov
sub
cli
pop
dec
inc
ficoml
jo
jl
mov
mov
xchg
xor
rcr
inc
int
popf
out
insl
mov
cltd
pop
sub
ljmp
outsl
adc
lahf
push
into
inc
dec
cld
aad
sub
movsl
fcompl
mov
sub
cmc
rcrl
outsl
ljmp
repz
cmp
sbb
dec
mov
stc
mov
adc
lahf
mov
add
and
xor
shlb
test
push
dec
shr
mov
lock
orb
jg
lret
fisttpl
int3
out
leave
popa
jmp
cltd
shrb
xchg
fisubrs
jae
mov
iret
jmp
rolb
rorl
or
jmp
cltd
or
push
adc
out
or
mov
push
fstps
test
inc
lods
rol
mov
or
xchg
mov
inc
decb
aam
das
mov
ss
movsl
xchg
jb
imul
clc
std
hlt
sahf
insb
sub
leave
ds
subb
pop
sub
xor
out
out
pop
sub
rorb
jecxz
sbb
sbb
stos
mov
addr16
loopne
flds
add
int
add
add
sarb
push
sub
data16
ds
cli
lods
imull
pop
fwait
adc
push
jae
pop
mov
push
sub
pop
loopne
mov
push
sbb
push
pop
rcrb
int3
bound
je
adc
out
mov
xchg
xchg
test
popf
jno
mov
rorb
and
je
adc
mov
shl
lcallw
mov
mov
jp
enter
inc
in
test
orl
test
add
lds
dec
mov
dec
insl
and
jns
dec
xor
lret
xchg
push
xor
lret
ljmp
pop
adc
inc
jle
pop
mov
lret
mov
jecxz
cwtl
aad
pop
insl
push
add
xchg
shlb
bound
jne
mov
dec
fcoml
cmp
push
and
pop
negb
ljmp
cmpsb
mov
mov
ret
sub
sarb
cmpsl
daa
jmp
icebp
xchg
leave
mov
int3
jne
xchg
inc
rclb
dec
mov
jne
lahf
mov
mov
ljmp
lret
push
or
mov
jmp
dec
xchg
mov
mov
mov
lock
mov
add
adc
inc
fsubp
jo
xchg
adc
in
push
das
daa
arpl
inc
int
sahf
fwait
inc
lret
rcrb
int
xchg
mov
or
in
xlat
xor
bnd
sbb
leave
jo
test
mov
push
orl
adc
iret
add
sbb
sub
mov
into
int
cs
mov
mov
enter
js
dec
xor
xchg
loope
push
jne
movsb
add
mov
adc
mov
addr16
adc
push
cmpsb
cmp
inc
add
psubw
mov
testl
mov
pop
vphsubdq
jge
adc
add
add
mov
xchg
mov
nopl
cmpsl
fcom
adc
lret
sahf
mov
fcmove
clc
dec
xchg
xor
mov
jns
fprem
stos
add
call
mov
add
mov
daa
add
mov
mov
mov
jmp
mov
fistl
push
movsb
icebp
fisubrl
int3
and
inc
cmp
push
loopne
adc
dec
xchg
cmp
sahf
dec
aam
jno
mov
insl
lea
stc
aaa
adc
cmp
pop
mov
mov
scas
add
nop
shlb
lea
shll
sbb
fwait
sbb
mov
lcall
inc
sub
int3
stc
mov
adcl
std
inc
sbb
mov
xor
leave
dec
lcall
mov
jge
lds
sbb
movsb
inc
or
scas
dec
mov
loopne
popa
add
cmp
inc
pop
test
or
lcall
stos
and
daa
mov
pop
mov
rcrl
inc
jns
add
push
pop
adc
insl
jbe
lods
sub
mov
jo
mov
sar
xchg
mov
unpcklps
xor
sar
call
or
dec
xor
jo
sub
fldpi
mov
dec
fidivrl
sbb
xchg
cwtl
sub
or
cmp
imul
call
xchg
shlb
push
insl
xor
jo
fcomi
mov
out
xchg
mov
xor
push
push
rcrl
cmp
dec
aam
cmp
jb
push
insb
pop
push
std
lret
push
ja
loop
adc
mov
ljmp
gs
sub
dec
adc
xchg
ljmp
pop
mov
mov
stos
scas
pop
cmp
repnz
dec
sbbl
dec
cmpl
fldenv
ljmp
inc
test
add
fbstp
adc
leave
add
push
mov
lret
fidivrs
mov
cmp
cli
fidivrs
jl
pop
cld
pop
in
das
mov
jo
cmp
dec
dec
iret
dec
push
outsb
mov
xlat
testb
adc
out
xor
nop
repz
xor
mov
leave
popf
push
or
or
lea
test
xchg
fwait
je
insl
js
xchg
cwtl
push
cs
test
jge
lods
pop
xor
in
sbb
mov
popa
icebp
jb
or
insl
fisttpl
cmp
std
mov
and
imul
test
xor
jb
sub
je
lret
inc
mov
fcmovb
jns
mov
lock
dec
fdivrl
mov
push
ss
sbb
sbb
jg
fistpll
push
adc
cmp
push
and
fisttpll
aaa
shlb
pop
imul
ja
test
rorb
and
rorl
dec
jecxz
iret
pop
iret
fs
jle
mov
mov
arpl
iret
jnp
push
mov
push
xor
pop
int
les
ja
mov
out
ficoml
stos
sarb
xor
dec
mov
jne
in
lret
and
xchg
call
inc
sub
andb
loopne
sbb
xlat
loope
mov
ja
pop
push
xchg
mov
and
lret
movsl
jnp
add
inc
and
jecxz
mov
dec
or
imul
sbb
cmp
arpl
mov
clc
stos
adcb
test
push
in
test
mov
mov
outsl
add
lcall
jmp
movsb
pop
sarb
icebp
dec
push
pop
repnz
call
mov
dec
add
jmp
fisubrl
push
xor
mov
outsb
add
cmp
mov
mov
or
sub
repnz
sbb
push
cmc
int3
xchg
lods
jge
adc
jno
and
sbb
inc
add
movsl
loopne
pop
sti
or
ja
fs
lahf
and
or
mov
pop
dec
test
shll
or
and
xchg
in
dec
data16
inc
test
xor
jle
push
loop
pop
and
lods
out
cmp
rcrb
stos
movsl
ss
adc
fistps
lahf
mov
xchg
dec
cld
dec
sbb
fnstcw
movsl
or
sti
in
fwait
jnp
mov
lock
lret
sub
in
jnp
sub
aad
mov
mov
add
mov
pop
insl
loope
pop
lret
sbb
outsl
sub
mov
in
call
cmpsb
arpl
les
xlat
or
neg
in
je
xchg
jb
sahf
add
imul
mov
add
cmc
jns,pn
aas
jmp
sbb
movsb
repnz
push
jg
inc
pop
inc
fs
sub
repz
mov
jne
pusha
lock
int
ds
fmull
adc
lds
repz
push
stos
sets
push
imul
xchg
cli
mov
push
push
pusha
cld
movsb
cmc
adc
pop
dec
mov
mov
out
push
into
stc
xor
lods
push
jecxz
out
or
into
mov
or
fdivrl
jo
mov
sar
or
andb
cmp
repnz
sub
pop
shrl
xchg
mov
mov
push
xor
push
fwait
gs
inc
add
sub
dec
not
ljmp
fistps
cmp
ret
mov
mov
mov
aas
enter
pop
sbb
inc
push
sbb
inc
ret
pop
lea
cmc
out
lcall
sub
andb
xor
push
inc
or
leave
or
jne
jl
ljmp
loope
fildll
ds
push
sbb
inc
aaa
stos
aaa
popa
mov
xchg
gs
xchg
out
int3
aas
push
and
movl
xchg
cmp
sar
popa
stos
jl
notb
push
cmc
leave
or
push
je
mov
mov
pop
stos
adc
mov
mov
mov
rcrb
cmp
repz
insb
int
sub
dec
mov
jb
les
xlat
and
dec
outsl
adc
sub
sbb
insb
out
xor
dec
inc
mov
nop
xor
pop
cld
inc
push
xor
adc
das
mov
pop
pop
jno
shrl
adc
mov
pop
push
ja
loope
cmc
ljmp
je
push
adc
stos
mov
cmp
daa
sub
fisttpl
lds
push
xchg
and
jns
rcrb
or
fs
and
add
mov
pop
fucom
cmpsb
in
mov
fucomi
or
add
sub
jge
ss
mov
dec
add
jg
in
push
dec
fwait
mov
out
imul
pop
sarb
pop
mov
pop
push
hlt
pop
cwtl
push
sbb
pushf
push
mov
jecxz
and
mov
adc
sub
push
mov
pop
push
mov
fisubrl
pop
push
adc
mov
inc
cmpsb
add
inc
push
ljmp
add
pushf
sub
rcl
pop
cmp
loop
sbbl
sbbl
hlt
les
hlt
jl
xor
and
inc
test
dec
test
stc
test
sbb
iret
jge
jnp
fsts
xadd
popf
jge
imul
xchg
push
jp
cmp
fsubs
aam
sbb
mov
sti
fdivr
je
jno
pop
enter
or
jmp
je
filds
and
fldpi
imul
xor
pop
into
lret
rclb
sti
xchg
mov
mov
scas
stos
and
jle
outsl
lret
mov
addr16
sub
xchg
movsb
ret
or
xchg
adc
movsb
into
setns
jo
add
fmull
xchg
and
cmpb
or
cmp
xor
je
in
cmp
cmp
nop
and
jg
test
in
cld
dec
cmp
leave
inc
cmp
lds
int3
addr16
add
out
divb
loopne
cmpsl
pop
imul
shll
call
mov
leave
int
mov
cmpsb
sbb
cltd
inc
sub
jecxz
in
xchg
shll
jae
fisubrl
imul
loope
shlb
imul
xor
cmpsb
cmp
or
loop
xor
jb
fdivrs
stos
cmp
lcall
fmull
and
mov
push
addl
mov
mov
or
pop
mov
xor
iret
xor
xlat
push
push
scas
je
and
and
adc
ds
insl
gs
and
repnz
cmpsl
add
fwait
jmp
adc
jnp
idivb
cld
cltd
jb
shrb
push
jno
cmp
jo
into
sub
bound
push
not
adc
pop
and
lock
jne
xchg
loop
pop
int
push
push
in
lods
ja
mov
sbbl
and
xor
fistpl
scas
lods
add
popa
xor
inc
mov
sahf
mov
xor
sub
sbb
aas
jae
sbb
jp
sbb
pop
fstpl
fdivs
xchg
cmp
dec
idivl
jl
jge
pushf
cmp
ja
xchg
mov
push
jecxz
loopne
ja
inc
mov
repz
add
fadds
adc
outsb
int3
lcall
dec
leave
xor
test
jo
in
adc
dec
nop
out
ss
sbb
sti
dec
nop
rorl
xchg
cmc
ja
pushf
xchg
in
shrl
xor
mov
rcrl
xchg
js
jns
sub
push
jo
add
mov
psllw
xchg
repnz
iret
iret
in
imul
mov
sbb
fldenv
sbb
ljmp
cmp
lods
ret
jge
roll
xor
jo
add
cmp
movsl
in
xor
sahf
ret
pushf
and
aaa
lods
stc
shrb
push
leave
arpl
xchg
pusha
add
xor
test
arpl
faddl
or
pop
inc
das
adc
jp
mov
jge
dec
lcall
lret
push
aam
daa
filds
xchg
insb
test
mov
in
std
int
push
roll
cmp
outsl
jae
das
sahf
xor
loope
lds
nop
or
cltd
stc
je
imul
xchg
movsl
out
push
imul
test
lea
pop
cmpsb
cmpsl
mov
mov
lret
ret
push
cld
xor
pop
jmp
add
insl
cmp
inc
sub
loope
cmpl
sbb
in
jb
dec
dec
stos
int3
sub
cmp
outsb
cltd
push
lahf
xor
mov
lret
pop
or
icebp
xchg
ret
lret
mov
in
fbld
cmp
xchg
dec
xlat
xchg
mov
inc
js
add
nop
stc
in
mov
mov
add
or
fcomps
mov
icebp
clc
iret
mov
rorb
sub
dec
and
mov
inc
orb
jb
sub
xor
negl
xchg
sub
fcoms
pop
or
inc
push
xor
aam
data16
roll
mov
pop
out
jae
outsb
mov
wbinvd
xchg
add
xchg
out
cmp
into
cmp
in
dec
in
int
mov
std
xor
roll
push
out
cmp
push
inc
das
ret
enter
notl
enter
add
stc
insb
clc
rol
ss
cmp
pushf
neg
jno
jno
or
shrl
imul
sub
outsl
mov
das
in
enter
cmp
aas
jp
nop
add
xchg
pop
or
pop
int3
pop
or
nop
cmc
stos
mov
adc
mov
and
mov
sub
xchg
dec
jmp
pusha
pusha
pop
cmp
jle
mov
int
aaa
or
cmp
dec
sbb
enter
cmp
cmp
push
lret
fistps
cmp
mov
jns
mov
jle
sarl
mov
xchg
pop
mov
aad
or
stos
fnstcw
mov
insb
push
lret
in
int
cmpsl
sbbl
adcl
in
sar
rclb
lahf
popa
cmp
add
xchg
and
push
push
data16
popf
sbb
jne
xchg
xlat
iret
push
mov
or
shll
in
das
lods
cwtl
xchg
sbb
adc
jo
lds
in
pop
popa
push
arpl
mov
mov
and
shl
insb
sbb
push
dec
popf
xchg
cmp
xchg
mov
cmp
inc
xchg
scas
inc
push
mov
xor
mov
daa
or
xchg
jp
test
sbb
ja
add
frstor
in
test
xor
mov
xor
pop
mov
cmp
fsubr
je
xor
jg
std
dec
loop
clc
ret
dec
repz
pop
xchg
lock
cmpsb
cwtl
ja
xchg
dec
push
mov
sbb
inc
fisubl
push
stos
es
scas
fcmovnb
out
inc
and
mov
pmaddwd
push
shlb
mov
lds
xchg
jmp
pop
sbb
fisttps
enter
cmp
or
loope
mov
int
xor
leave
xor
mov
push
in
jo
mov
jl
test
push
add
mov
xchg
or
or
mov
mov
or
or
jle
lock
sub
adc
sbb
inc
daa
pop
xchg
mov
sti
cmpsl
mov
das
popa
xchg
xchg
mov
and
xor
sbb
adc
add
mov
fisttps
or
movsb
popa
xor
fldt
cmc
jg
sarb
pop
test
stos
dec
mov
aaa
lret
aad
sbb
lret
fisubrl
iret
mov
out
loope
mov
fnop
nop
bound
shlb
sbb
cwtl
rcrl
ds
xor
fadds
pop
rcll
outsb
fnop
fs
adc
pop
rol
into
hlt
and
in
jnp
cmp
loope
xorb
call
lret
dec
dec
inc
or
mov
bt
sahf
mov
scas
loop
ds
jo
sahf
sub
nop
xor
popf
sub
std
fisubrs
stos
pushl
jle
mov
xor
and
repz
movsb
pop
lret
xor
fwait
ljmp
mov
les
mov
sbb
fstpl
decb
fists
lea
dec
cmp
dec
and
dec
sub
mov
jmp
pusha
and
sbb
cmp
iret
imul
shll
xchg
xor
fnstenv
insl
ljmp
std
add
movsl
jle
decl
or
out
shlb
pop
xchg
push
lcall
out
jle
push
popf
sub
inc
mov
add
outsl
scas
mov
aaa
sub
pop
sbb
or
pop
popf
or
xor
pop
lahf
ret
pop
or
mov
jnp
cmp
std
fisubrl
cmp
movb
inc
insb
mov
roll
and
add
or
mov
mov
imul
ret
gs
imul
out
stc
dec
jae
gs
dec
sub
mov
popa
out
adc
ret
shll
daa
jnp
push
mov
lods
outsb
scas
fadds
mov
mov
test
loopne
mov
sub
xlat
mov
adc
bound
aad
pop
outsb
les
xchg
xchg
mov
inc
pop
enter
fdivs
sub
scas
pop
inc
outsl
and
repz
push
cmpsl
cmp
sub
dec
sbb
mov
iret
mov
les
jecxz
faddl
ret
push
jmp
fs
cmp
inc
insl
mov
dec
mov
mov
mov
dec
mov
insb
aam
enter
dec
mov
dec
pop
pop
clc
daa
mov
in
fisubs
push
dec
mov
sub
subb
movsl
fstpt
clc
out
nop
clc
push
fsts
jg
lods
fiaddl
dec
jl
add
insb
push
cmp
in
jmp
sbb
aas
cmp
xor
jbe
out
push
mov
cltd
cltd
adc
repz
cmpsl
jne
pusha
cmpsb
pop
pusha
gs
popf
insb
jecxz
imul
in
das
rcr
xchg
popf
lcall
push
loop
push
push
jg
call
mov
out
mov
insl
or
xchg
fstpt
sub
mov
mov
lret
push
stos
push
fwait
rcrb
mov
cmpl
dec
js
leave
adc
dec
add
idivl
push
sarl
inc
pop
pop
push
aas
cli
jmp
and
add
cs
leave
loope
jno
lret
lea
dec
push
neg
aam
adc
xchg
add
mov
addl
rcl
sub
lods
cmp
or
fistpl
sub
jge
addb
mov
inc
cli
lret
movsb
loop
es
mov
mov
cmp
cwtl
fldcw
and
inc
jecxz
sbb
insl
xchg
add
push
test
mov
es
sbb
les
pushf
mov
sbb
test
lods
jge
adc
or
and
iret
add
mov
arpl
pop
mov
ds
and
push
jle,pt
pop
xor
adc
jmp
movsl
ljmp
mov
jnp
mov
out
fstpt
dec
insl
rolb
lds
push
and
movsl
hlt
mov
loop
mov
test
aas
aam
decl
dec
enter
test
mov
decb
cmpsl
jns
add
adc
and
sbb
xchg
subl
out
mov
push
fwait
cmpsb
in
loope
xchg
ds
scas
mov
pusha
aaa
rolb
jmp
fwait
dec
pop
and
add
pop
mov
jnp
cs
sub
jbe
push
xchg
adc
lds
jecxz
mov
in
sarl
cmpsl
imul
popa
jae
and
aaa
loop
movsb
add
shll
xchg
outsb
fimuls
ficoml
inc
push
dec
and
popaw
push
lds
loopne
and
es
loope
sbb
test
sub
idivb
inc
jg,pn
or
and
pusha
mov
and
notb
call
pop
jne
fwait
nop
test
lahf
xor
push
add
and
fisttpll
ja
repnz
ljmp
pop
mov
sbb
and
jo
mov
ret
lock
mov
lcall
mov
jecxz
out
adc
inc
ljmp
and
out
mov
mov
sbb
cmpl
lea
mov
or
cli
pop
push
sbb
fcmovne
nop
inc
mov
jle
mov
inc
inc
hlt
push
ljmp
push
push
rcrb
jle
xor
jge
xor
add
pop
mov
les
pop
xor
test
dec
cli
inc
cmpsl
xchg
aas
inc
and
and
aad
xchg
mov
stos
andb
lahf
or
or
pop
pop
cmp
inc
out
sahf
mov
rclb
dec
push
jnp
inc
sbb
mov
sub
mov
mov
icebp
ja
inc
sub
fucomi
or
aam
jne
dec
adcb
xchg
push
shrl
mov
mov
ret
inc
scas
notb
mov
mov
xchg
push
daa
fnsave
insb
dec
and
adc
mov
andb
scas
mov
fiadds
and
sbb
sbb
outsl
sub
xchg
or
or
cli
xchg
les
add
inc
std
cmpsl
mov
dec
inc
add
push
adc
xor
sub
mov
push
imul
and
aas
cmpsb
cmp
mov
shrl
mov
int
pop
xchg
fdivs
mov
lods
mov
push
xchg
sbb
fs
inc
rcr
jns
pop
lods
cmp
loop
dec
jle
repnz
shrl
and
in
daa
stos
scas
and
push
inc
fdiv
repnz
jmp
leave
js
dec
pop
movb
scas
dec
jo
mov
popa
test
pop
movsl
mov
insl
out
testl
aas
sub
push
sub
xor
sbb
jnp
pushf
out
adc
leave
pop
jg
mov
test
fnstsw
xchg
movsl
fs
stos
int
movups
mov
sub
loop
cltd
test
and
mov
jge
cmp
xlat
mov
or
xor
xchg
xor
cld
mov
negl
lret
mov
rclb
pop
bound
out
jae
fdivr
adc
ja
pop
push
push
int3
addr16
and
shl
sbb
jg
in
mov
xchg
pminub
cmp
inc
int
cmp
sbb
push
add
fisubl
pop
and
adc
jle
fistpl
xlat
pop
cmp
test
adc
sbb
adc
shll
rolb
ja
cld
xchg
pushf
jae
xor
hlt
daa
pop
mov
pop
xchg
sbb
sub
cmpl
xchg
lcall
mov
insl
xor
loope
or
outsl
mov
mov
xor
jae
ds
gs
daa
xchg
sti
out
mov
dec
loopne
add
dec
fadd
scas
pop
inc
pop
imul
shlb
ret
in
mov
jmp
pop
xchg
clc
push
adc
lcall
jno
test
dec
adc
mov
jns
in
aas
int3
mov
xor
test
pop
mov
jmp
cmp
clc
lcall
sbb
shlb
test
scas
roll
dec
ja
sub
enter
stos
in
pusha
dec
mov
pop
sarb
dec
js
or
jne
pop
sbb
mov
lea
repnz
pop
and
fwait
xchg
loop
sbb
idivl
jne
adc
lcall
and
jmp
xchg
pop
int
out
aad
and
cmpsb
shrl
test
and
negb
shlb
xchg
outsb
cs
loopne
je
mov
add
mov
lret
pop
sub
dec
add
or
arpl
sub
popa
xchg
fstpt
ss
sbb
xlat
cmp
insl
and
leave
lret
push
pop
fisubrs
push
ficoml
jns
sub
mov
cmpsb
cmp
loope
pop
in
xchg
pop
xchg
inc
sub
mov
add
pushf
mov
cmp
pop
cmp
test
std
inc
mov
mov
dec
pop
popa
hlt
adc
stos
dec
adc
cmc
in
jge
stc
xlat
add
mov
add
sarl
inc
jo
cwtl
inc
lods
dec
aaa
sbb
movsl
mov
adcl
push
and
mov
xchg
xchg
push
lret
pop
dec
lods
adc
cmp
lahf
rcrb
shlb
mov
push
xor
roll
inc
lods
repz
push
movsb
and
cmp
mov
mov
popa
es
jp
leave
jno
mov
test
bound
pop
pop
mov
add
add
mov
sub
mov
inc
js
adc
lods
push
inc
jae
out
out
scas
fsubrp
xor
and
jge
mov
push
in
push
push
sbb
or
sbb
jo
xchg
lds
dec
repz
aad
mov
scas
mov
sahf
mov
adc
push
je
inc
mov
das
ret
mov
push
lahf
lret
jbe
mov
cltd
inc
inc
push
sahf
outsl
mov
je
mov
aaa
mov
and
mov
adc
xchg
mov
into
dec
sub
rorb
ja
std
mov
in
dec
xor
mov
xchg
jb
insb
fs
cmp
cmp
test
movsb
pop
sbb
lds
and
push
push
adc
sbb
bound
mov
adc
js
mov
lret
mov
sbb
insb
cmp
enter
stc
push
adc
jns
sarl
xchg
jmp
add
scas
xor
lods
ja
push
clc
push
sbb
push
int
repz
and
mov
fiadds
in
jno
and
sbb
pusha
jp
in
std
in
in
push
mov
lret
fs
out
push
jbe,pn
mov
ss
lea
xchg
loopne
xor
sbb
shrb
gs
cli
sbb
aad
lods
fstl
pushf
fmulp
negb
mov
mov
jns
and
and
push
jge
fst
stc
icebp
call
imul
outsb
cmp
xchg
mov
test
and
js
fstpl
sub
xor
movsb
push
sub
xor
dec
push
popf
iret
cmpsb
dec
sarl
jl
les
cmp
push
cli
outsb
stos
loope
sub
mov
mov
mov
push
ljmp
jp
pop
inc
int3
dec
arpl
and
push
cwtl
call
sarb
adc
call
outsb
jg
fldl
xor
jbe
xchg
xor
filds
add
mov
bound
fwait
xor
ljmp
push
std
mov
rcr
out
jge
stc
loope
icebp
rcrl
je
dec
ret
shr
movsl
cmp
jbe
ljmp
push
ja
push
stos
sbb
leave
lret
push
dec
inc
cmp
iret
jns
xor
mov
cs
insl
ret
test
and
push
aaa
add
imul
mov
xchg
in
jns
push
sti
mov
lret
fbld
jb
pushf
jle
in
dec
pop
pushf
xor
sub
sar
adc
lods
xchg
lock
out
stos
psadbw
dec
jbe
cmc
sar
pop
aaa
dec
jb
adc
xchg
jecxz
xor
jo
dec
cmp
fwait
aaa
dec
push
pop
push
fstps
cmc
sub
sbb
cmp
add
inc
mov
pop
fwait
jns
or
movhps
push
fucomp
push
jbe
mov
mov
xor
cmc
subl
mov
sbb
icebp
fistpll
mov
mov
leave
daa
add
add
cmp
fcoms
gs
stos
dec
sub
push
das
insl
push
stos
push
repz
jns
scas
lds
xchg
jl
stos
sahf
out
inc
dec
cld
hlt
push
test
add
loope
fisttpl
xchg
adcb
dec
leave
lcall
fmuls
out
sub
insb
adc
rolb
sub
fdivs
bound
sbbl
dec
popa
jns
mov
jnp
in
pushf
pusha
and
outsl
je
or
push
in
push
test
inc
nop
mov
xor
pop
xchg
xchg
mov
cmp
or
pop
push
sub
movsl
push
mov
in
lods
bound
mov
or
je
filds
popa
and
push
sub
mov
jnp
cmpb
ljmp
je
outsb
xor
addr16
in
sub
pop
adcb
jnp
pusha
mov
es
pop
rcrb
mov
push
inc
mov
xchg
mov
mov
dec
mov
jae
jae
lock
push
adc
dec
jge
ret
lret
cwtl
loopne,pt
push
xor
adc
mov
adc
dec
aad
inc
sub
shlb
popf
xlat
shll
mov
dec
lods
jmp
cmp
add
fimull
cmp
dec
mov
xchg
ss
mov
push
jg
jmp
enter
pop
sbb
xchg
mov
jne
aad
fwait
or
sbb
imul
test
cmp
shlb
mov
lods
ret
pop
mov
mov
pop
push
lahf
out
icebp
adc
sbb
push
rep
sbb
mov
rolb
xchg
repnz
inc
repnz
mov
icebp
mov
add
xchg
aam
pop
cli
xor
in
adc
lahf
stos
lret
insb
xlat
scas
stos
dec
daa
xchg
dec
xlat
push
movsb
iret
mov
cli
adc
call
jecxz
mov
fstpl
adc
fwait
ss
sarb
dec
sbb
aaa
dec
and
out
aaa
mov
mov
dec
mov
mov
and
cmpsl
push
popf
pop
scas
cli
pop
fiadds
mov
push
sbb
pop
pop
xchg
arpl
into
test
and
mov
dec
pop
sub
or
and
pop
in
pop
sub
lret
rorl
sahf
dec
aad
test
xchg
and
pop
dec
sub
push
bound
jbe
adc
in
ret
jge
adc
stos
subl
data16
adc
mov
pop
lock
in
xchg
pop
pop
popf
decb
sub
and
cmpb
sub
ja
outsb
sbb
mov
lock
or
je
scas
dec
push
inc
push
inc
mov
orl
leave
cmp
cvtdq2ps
xchg
mov
jp
in
sub
jp
test
leave
jg
sahf
xchg
out
xchg
pop
dec
add
push
aas
pop
iret
lds
dec
mov
ret
std
pop
sbb
sub
sbb
test
rolb
mov
aad
punpcklbw
mov
mov
jb
idiv
mov
fs
mul
pop
xchg
popa
mov
jmp
cmp
in
mov
enter
ret
xor
mov
lret
lock
inc
into
into
loopne
mov
lods
jl
pop
fwait
mov
pop
clc
dec
test
rcll
cmp
add
xchg
pusha
out
inc
pop
dec
rcll
xchg
cld
push
lahf
lods
jmp
adc
rorl
mov
notl
bnd
aad
mov
test
mov
add
dec
pop
dec
in
ljmp
and
scas
mov
test
or
cltd
push
adc
xchg
and
out
push
jmp
mov
repz
testb
xlat
pop
sub
xor
push
mov
dec
or
adc
mov
push
jmp
adc
iret
inc
xchg
adc
or
sahf
cmp
jne
scas
mov
js
mov
mov
sbb
ja
int3
das
stc
testl
call
mov
rclb
fistpl
data16
mov
movsb
mov
mov
sbb
lods
and
lcall
divb
inc
jno
and
mov
lcall
mov
lahf
js
jle
test
cld
lret
add
mov
fdivs
push
jo
pop
dec
mov
aam
test
inc
daa
xor
adc
sub
cmpsb
and
inc
add
inc
enter
data16
repz
xlat
xchg
stos
xorb
in
mov
in
jmp
sub
cmp
mov
xchg
cmpsb
lods
pop
xchg
orb
push
xor
imul
adc
push
add
xor
shll
push
lret
ss
clc
push
cwtl
dec
or
roll
push
xor
dec
push
cmp
lcall
jle
sub
bound
dec
dec
jnp
mov
fists
mov
subb
in
cmc
int
jle
xor
cmovbe
loop
adc
cli
mov
jne
jecxz
popa
sbb
in
stos
shll
outsl
cmp
scas
in
rcrb
icebp
cli
adc
mov
mov
fnstsw
adc
cmp
cld
xchg
aam
shlb
test
mov
push
fwait
cld
jg
es
mov
clc
xor
inc
cmp
in
sbb
adc
test
jbe
sub
sub
or
and
jo
jecxz
push
add
cmp
push
fadds
lods
push
mov
xchg
push
lods
pop
mov
jnp
stos
out
sbb
push
lahf
lcall
or
aad
mov
jp
dec
dec
les
xor
xor
faddl
loop
dec
sub
data16
sti
bound
dec
repz
ljmp
or
sub
imul
inc
sbb
push
ljmp
icebp
add
adc
shufpd
xor
std
test
repz
in
or
in
xchg
idiv
stos
fucomp
lea
push
xlat
repnz
ret
jmp
adc
and
shrl
jecxz
fwait
xchg
cmp
add
imul
or
and
popf
xor
xor
push
jp
stc
adc
arpl
xor
es
jl
sub
loopne
outsl
dec
sbb
popf
adc
sbb
jb
shrl
sahf
stc
cmp
dec
adc
pushf
popa
jbe
jae
mov
sbb
jns
fstpt
shrl
push
xchg
mov
mov
in
sbb
subl
lods
sub
xor
ss
js
mov
stos
negb
pop
cmp
int3
lahf
ljmp
scas
test
mov
retw
or
into
and
jl
xchg
xchg
pop
lods
arpl
data16
pusha
clc
xor
loope
shlb
in
scas
fstl
popf
sbb
test
ljmp
inc
push
xchg
loopne
fs
inc
push
cmp
cmp
jne
cmp
sub
jbe
jo
pop
and
or
sub
icebp
dec
out
sbb
sub
push
mov
pop
inc
dec
or
xor
iret
mov
insb
jl
xchg
lock
test
fnstsw
add
mov
bnd
mov
mov
dec
jle
or
push
es
repnz
bound
cltd
jecxz
lea
push
xchg
out
adc
jmp
jo
pop
insl
or
add
stos
fsts
mov
sbb
dec
shll
dec
mov
pusha
dec
cmp
mov
push
ds
icebp
xchg
popa
mov
jns
or
addr16
pop
xchg
or
cmpsl
xchg
jle
or
lods
pop
in
cltd
loopne
push
and
pop
push
sbb
mov
lods
sub
cmp
shlb
popa
iret
inc
cmp
cltd
sub
xchg
sahf
pushf
inc
push
xchg
mov
sbb
pusha
loope
movsb
inc
fiaddl
jle
push
push
iret
es
gs
enter
push
out
push
sbb
imul
gs
out
ljmp
push
repz
xchg
into
adc
leave
frstor
js
popa
xchg
xlat
jne
push
add
shr
pop
cwtl
cli
push
mov
mov
push
out
imul
xchg
shll
cli
mov
mov
push
push
insl
out
pusha
clc
mull
jns
call
mov
inc
dec
cmp
ljmp
pop
xor
lds
inc
scas
insl
pop
movsb
js
cmpsl
xor
nop
sbb
lret
sarb
mov
dec
xchg
dec
xor
cmp
bound
pop
testl
movsb
jae
rcrl
iret
pop
jecxz
push
sub
bound
cltd
sub
mov
cmp
pusha
sbb
adc
mov
push
pop
mov
shlb
xor
add
or
lods
mov
xor
insb
jns
xchg
popf
mov
push
sbb
adc
add
push
test
adc
fptan
push
test
mov
lods
idivb
push
lods
xor
test
mov
addb
dec
push
mov
push
out
ret
sub
roll
adc
lea
dec
jp
or
rcrl
lahf
and
sub
jns
mov
jmp
xor
int3
lea
stc
fsubl
jecxz
push
out
negb
pop
daa
sbb
aad
inc
add
mov
xor
ffreep
jae
rcl
inc
fcom
lret
add
lret
push
pop
xchg
push
sbb
jp
mov
lcall
sbb
jne
in
insl
repz
aaa
dec
icebp
imul
push
dec
adcl
mov
in
ret
jmp
sbb
ss
enter
xchg
addb
fstp
dec
jne
xor
mov
out
std
divl
fistpll
sbb
jns
sar
test
mov
inc
add
aad
leave
lcall
add
sbb
loopne
jns
pusha
or
xor
cmpsb
cld
idivb
aad
not
mov
fcomp
das
ret
cmc
or
dec
mov
xor
and
cli
inc
das
iret
pusha
pop
rclb
dec
mov
aas
sbb
popa
loop
fwait
jb
loopne
inc
sub
adc
sbb
xchg
push
inc
jl
ja
and
insb
mov
mov
dec
xchg
mov
pop
out
dec
sub
inc
and
jb
jo
mov
or
push
dec
pop
ds
mov
dec
sub
inc
lock
mov
fdivrl
sbb
mov
and
sbb
pop
cwtl
repz
dec
push
mov
adc
int3
mov
adc
ds
dec
mov
jns
es
sbb
pop
addl
jne
mull
outsl
mov
jae
mov
ret
pop
lret
dec
adc
lds
or
cltd
repz
xor
popa
fildl
mov
dec
lock
js
lret
test
ds
scas
faddp
js
xchg
mov
dec
mov
sub
dec
shrl
sub
scas
cmp
inc
insb
ret
adc
mov
scas
addr16
repnz
out
adc
sub
fisttpl
insl
stos
lret
cmp
cs
stos
xchg
test
scas
aad
pop
ret
or
test
pop
mov
lock
les
xor
test
add
out
sbb
jne
int
add
jle
ja
jnp
push
xor
xchg
outsb
bound
data16
sbb
fcomp
jnp
mov
mov
test
das
xchg
rorl
mov
sbb
pop
push
ljmp
and
push
xor
jbe
aaa
push
xchg
icebp
pop
mov
scas
jmp
mul
sbb
clc
sub
xchg
cmpb
out
fwait
hlt
push
cmpl
subl
leave
imul
divb
fimull
inc
in
add
addb
das
test
jnp
xchg
popf
out
mov
pop
jmp
pop
pop
ret
and
inc
dec
mov
mov
jl
add
je
jno
add
sub
loop
shl
icebp
call
add
lahf
std
push
and
gs
mov
jp
mov
stc
repnz
xchg
pop
aas
repnz
scas
lods
inc
jnp
js
sbbl
je
jbe
lods
pop
adc
enter
jbe
xchg
mov
je
adc
jl
mov
xchg
mov
adc
outsb
in
add
call
pop
insl
or
setl
scas
into
mov
lcall
or
sub
scas
rorl
cmp
imul
add
mov
movsl
fstpt
push
sbb
lock
mov
fwait
lods
mov
add
pop
push
push
cmp
mov
add
ja
mov
jno
push
pop
popa
dec
into
sahf
xlat
cld
xchg
jg
aam
jbe
stc
in
adc
push
pop
cmp
in
adc
arpl
mov
and
ds
xor
mov
jmp
dec
decb
mov
cwtl
cmpsb
xchg
sbb
xlat
mov
in
inc
fnstsw
push
sub
adc
dec
jno
mov
daa
inc
push
pop
xchg
push
jl
jge
push
jl
clc
inc
mov
hlt
mov
xchg
dec
jo
or
and
je
jno
mov
adc
and
std
jle
ja
sub
jmp
adc
cmp
movsb
call
leave
sbb
fwait
mov
cmpsl
jg
and
std
jmp
lods
xchg
leave
clc
sub
shll
sub
fdivp
mov
jmp
notb
gs
aaa
inc
and
decl
mov
enter
push
dec
mov
test
daa
mov
fwait
ret
push
push
xor
adc
inc
or
mov
mov
xchg
cmp
ljmp
fnstsw
xor
loopne
fiadds
add
xchg
add
push
loop
mov
sbb
lods
lcall
divb
xchg
mov
and
add
pop
aam
rcll
mov
jmp
in
lret
outsl
xor
mov
sarl
mul
cmc
mov
pop
sahf
andb
das
shr
inc
outsl
pop
stos
mov
jecxz
test
mov
pop
lock
daa
inc
mov
push
or
mov
pop
mov
icebp
cmp
call
out
or
mov
rcrb
fucom
loop
jns
jae
pop
mov
xor
sub
xchg
lret
pop
mov
mov
jle
adc
inc
popf
jmp
cli
fdivs
sbb
xor
adc
shrl
shl
inc
and
insb
lret
popf
das
out
pop
jmp
push
icebp
les
add
mov
sub
add
mov
sbb
adc
into
scas
cmpsl
sbb
push
fimull
pop
movsl
xchg
insl
lret
test
into
inc
daa
pop
fwait
cmpsb
mov
add
mov
cmpsb
ret
nop
dec
in
inc
mov
repnz
stos
cltd
push
jb
push
push
inc
out
repnz
arpl
enter
xlat
xchg
xchg
mov
icebp
sub
mov
xor
xor
adc
xchg
cmp
ljmp
cmpsb
imul
pop
lods
int
sbb
je
popf
imul
arpl
mov
pushf
and
pusha
cmpsl
inc
ret
or
cmp
fildl
xchg
jae
jecxz
cwtl
sub
push
xchg
mov
dec
bndstx
pop
out
push
mov
sbb
mov
inc
sub
fwait
sbb
repnz
in
add
cli
inc
jnp
dec
in
repz
movsl
xchg
mov
jbe
sbb
mov
jle
iret
sub
je
filds
loope
mov
test
mov
adc
jne
cmc
outsb
cmp
mov
jl
cmp
dec
enter
jecxz
or
xor
cld
pop
cli
subb
add
push
stos
insb
aad
sbb
sbbl
bound
or
xchg
mov
or
cmpsb
inc
jae
test
xorb
mov
xchg
scas
rcll
sub
xor
fistpl
into
xlat
xchg
sbbb
daa
es
inc
dec
push
hlt
jl
inc
and
mov
adc
mov
pop
je
inc
pushf
and
push
jmp
lods
fstps
cmc
pushf
rolb
imul
imul
out
shl
xor
push
push
inc
ficoms
add
shll
jmp
or
std
xchg
mov
stos
cmp
ret
in
jmp
sub
loope
jb
int3
mov
and
push
xchg
inc
inc
cs
add
ja,pn
mov
push
ret
push
dec
mov
mov
mov
leave
sub
sarb
add
pop
mov
sarl
mov
ret
jmp
jns
xchg
xchg
mov
mov
cmp
fldenv
jp
mov
sub
fisubrl
mov
xor
dec
sub
dec
stc
xchg
outsl
rorb
xor
and
add
push
lock
xchg
and
fadd
es
out
mov
lahf
int3
dec
lahf
mov
dec
in
inc
movsl
lds
lcall
push
mov
movsl
data16
jo
icebp
iret
pop
popa
ret
ret
push
ja
mov
or
repnz
pop
pop
popa
mov
daa
cmpsb
push
mov
je
jg
sbbl
xor
imul
lcall
int
add
add
mov
pop
lea
pop
pop
stc
adc
addr16
pop
fistl
subb
fstpt
popf
fwait
addl
adc
add
jns
clc
cmpsb
data16
jne
ret
cli
sub
xchg
pushf
mov
jno
aaa
arpl
dec
mov
nop
movsb
rcrb
xchg
into
mov
mov
adc
lret
mov
nop
insb
loopne
or
scas
lahf
or
into
jp
dec
jmp
and
ja
shrl
lret
js
idivl
call
mov
xor
cmp
pusha
push
cmpsl
inc
xor
mov
enter
sbb
sar
sbb
pop
cmpsb
sti
cmp
inc
movsb
clc
lret
aad
cmp
xor
add
xchg
xchg
hlt
pop
adc
push
test
in
jne
jp
fsts
loop
scas
pop
mov
and
repnz
push
xchg
daa
lock
sbb
mov
xchg
cltd
or
push
push
jle
js
sti
sbbb
lcall
in
xor
pop
sub
jno
or
add
dec
enter
xchg
sub
fwait
imul
dec
add
cmp
cli
cmc
mov
mov
jbe
add
cmp
xchg
add
mov
shlb
lods
jmp
sub
pushf
sub
push
adc
outsl
inc
mov
ss
shrl
das
cmc
in
pop
aad
fcoms
push
adc
and
mov
dec
add
push
mov
in
rcll
std
ja
jg
ffree
dec
js
and
pop
jne
or
clc
sbb
cmp
stos
xchg
subb
mov
addl
add
stos
mov
in
in
jg
or
push
cld
push
pusha
ja
gs
push
mov
inc
dec
orl
mov
jge
ljmp
stos
dec
mov
icebp
notl
fstl
test
cmp
sbb
add
fsubrl
sub
popf
adc
lret
add
mov
or
out
mov
push
inc
into
push
push
sbb
lcall
imul
mov
call
sub
lahf
in
adc
and
std
mov
xchg
sbb
mov
and
mov
jle
addl
mov
add
mov
jg
scas
out
or
popf
sub
sub
fisubs
nop
fstpt
insl
cmpsb
repnz
rol
ret
mov
gs
aaa
mov
adc
sahf
nop
clc
jbe
mov
je
jnp
adc
pop
lcall
nop
es
xlat
aam
pop
lcall
or
pop
ja
ss
sbb
dec
lret
daa
xlat
lea
inc
mov
test
call
cli
sbb
jg
jno
lcall
or
outsl
inc
ja
and
mov
rorb
jnp
jo
into
data16
jle
cmp
xchg
push
call
pop
add
sahf
stos
nop
sbb
push
clc
push
jne
scas
inc
rorb
test
push
insl
test
cltd
or
aas
or
in
into
mov
push
sbb
add
sub
or
sub
pop
xor
mov
imul
stos
mov
xor
pop
cmpsb
aas
aaa
pop
fcoms
or
cmpsl
inc
mov
outsb
add
dec
sbb
test
ficompl
test
cmc
mov
push
adc
jnp
out
adc
das
lods
je
mov
sub
mov
ja
pop
jno
add
dec
call
ret
out
mov
push
jl
inc
mov
in
ds
mov
push
pusha
cmp
loope
pop
cmp
sub
mov
loopne
fstpl
and
mov
or
cmp
push
mov
pop
xchg
pop
repz
jnp
xchg
out
cwtl
or
out
int3
insb
mov
jl
inc
test
out
mov
fs
sarb
gs
fcompl
push
test
loop
mov
dec
dec
and
inc
nop
xchg
in
add
or
sarb
data16
jno
mov
iret
les
jl
push
in
xchg
pop
outsl
sbb
addr16
xchg
sub
das
lret
pop
dec
jnp
mov
xor
and
out
es
fs
outsb
addr16
adc
pop
stos
dec
mov
lcall
xchg
jmp
dec
mov
in
ret
push
pop
lahf
push
mov
sbb
iret
cmp
sub
push
fdivrl
push
cmp
int
jb
ret
jmp
push
sbb
mov
cmpsb
lods
lds
sub
mov
imul
lcall
push
adcb
in
popf
mov
sbb
lock
sbb
rorb
daa
inc
out
fucom
addl
or
das
repz
xchg
rcl
loop
sub
push
movsb
mov
test
ja
cli
insb
les
lods
or
cld
jb
aad
inc
mov
mov
or
popf
add
mov
mov
xchg
ja
stos
mov
out
jae
push
pop
stc
xchg
cmp
pop
cmp
add
mov
hlt
into
pop
push
fiadds
bound
inc
push
mov
es
pop
wbinvd
shlb
in
dec
stc
add
fnstsw
or
pushf
jl,pt
jno
jmp
xchg
loop
jne
fadds
sbb
sti
fs
push
shrl
testb
or
or
pop
fstpl
push
sahf
out
ljmp
cwtl
jle
cmpsl
js
es
lods
pop
in
jp
stc
in
xor
addr16
mov
pop
push
test
or
out
je
call
pusha
jl
push
out
dec
mov
stos
loop
adc
rcrl
add
in
sub
xor
push
adc
icebp
int
push
push
sbb
imulb
aaa
push
cmpsb
mov
sti
jge
movsb
mov
loopne
loope
scas
cmp
xorl
xchg
adc
scas
mov
push
insl
cmp
in
out
lret
xchg
pop
push
fmull
dec
imul
rcrl
movsb
jb
int3
jb
jge
sarl
jbe
and
mov
imul
mov
adc
cld
fmull
adc
xor
mov
add
jae
sub
shll
out
addr16
or
xlat
cmp
lods
dec
jmp
mov
adc
filds
push
fbstp
xchg
arpl
cltd
cli
push
mov
cmpsl
les
shll
adcb
inc
and
adc
icebp
or
test
repnz
cmp
call
idiv
clc
jnp
mov
inc
inc
pusha
xor
xor
add
pavgw
dec
movsl
cltd
jmp
cmp
mov
push
xchg
push
jns
sub
push
jo
add
sub
repz
in
cmpsb
cmp
and
and
clc
es
in
mov
xchg
iret
out
cmpsb
dec
fnstcw
or
xor
fistps
sahf
enter
mov
shrb
ljmp
cli
into
insb
pop
push
ss
lcall
cltd
or
cmp
or
leave
mov
add
repnz
jnp
adc
cmp
push
and
popf
push
iret
add
sbbb
mov
inc
daa
dec
neg
inc
mov
das
inc
push
fnstcw
lahf
jnp
cmp
aam
push
ret
inc
aaa
xchg
in
imul
pushf
imul
pop
sbb
adc
xchg
mov
push
mov
push
mov
lock
sbb
arpl
js
push
xchg
es
jmp
mov
mov
incl
jns
push
inc
fstl
mov
stos
or
inc
fs
xchg
fstpt
xor
out
push
pop
push
cld
shrb
mov
pushf
fistl
testl
lcall
push
adc
mov
jg
cmp
rolb
xor
jns
inc
sub
mov
out
fcmovb
push
js
lahf
xor
popf
cmp
cmc
cmp
imul
in
stc
jl
cwtl
or
cmp
adc
push
cmp
mov
dec
call
aaa
jae
js
jno
mov
lods
sub
or
icebp
ret
sarb
inc
cmp
sub
xor
pop
pop
cmpsb
pop
add
icebp
add
mov
xor
mov
xor
push
lret
cld
std
mov
push
xchg
mov
out
mov
xchg
mov
pop
and
jo
xchg
insb
mov
dec
jmp
jle
xchg
iret
sti
aaa
mov
mov
cmp
and
push
pop
dec
mov
xor
mov
or
jne
mov
jp
dec
pop
decl
sti
aad
sbb
mov
and
xchg
mov
cmp
fisubl
insb
outsl
arpl
test
insb
mov
mov
adc
xorl
aad
fdivrs
fnstcw
cmp
aad
imul
ja
inc
jo
mov
jo
insb
add
in
fs
xorb
mov
or
lods
push
add
in
call
pop
popa
stc
mov
outsl
xor
pop
sbb
inc
push
push
xchg
or
lods
dec
push
ror
loop
loopne
mul
mov
pop
loope
jg
and
faddp
orl
aad
xchg
pop
iret
bound
jle
orl
out
ret
fnstenv
movsb
mov
mov
jb
mov
mov
imul
mov
mov
ds
inc
mov
orl
push
mov
pop
fildll
in
std
popa
mov
push
and
mov
xor
push
and
inc
and
sbbl
pop
adc
dec
int3
jo
push
xchg
xchg
xchg
jns
cs
repz
mov
nop
sahf
sub
and
dec
cmp
xor
sti
leave
test
adc
push
dec
or
inc
jnp
inc
adc
lret
clc
popf
fisubrs
cltd
pop
bound
xlat
and
push
xchg
sub
insl
insl
loope
jno
pushf
dec
movsb
popf
int3
fsts
mov
movsl
pop
adc
push
das
mov
in
rcll
aas
cwtl
ljmp
sarl
pop
sub
das
sbb
mov
rorb
js
stos
push
psrld
popa
mov
in
dec
or
adc
lock
xor
jbe
jo
and
outsl
add
ljmp
push
add
aas
push
dec
enter
incl
dec
mov
cmp
jo
popa
and
mov
adc
fwait
aas
popf
mov
mov
js
xchg
cmp
push
or
enter
add
push
daa
jp
pushf
and
sbb
xchg
inc
test
shrl
xchg
sahf
sbb
add
cmp
and
iret
lahf
push
fistl
jge
aam
mov
fmull
sbb
inc
add
out
xor
pop
lods
add
push
retw
and
int
push
movl
cltd
and
add
int3
adc
dec
mov
inc
fldt
in
lds
and
out
push
pop
mov
adc
dec
sub
popf
ret
or
stos
out
fcoml
nop
and
jl
jae
cmp
lods
das
mov
neg
and
lahf
cmp
adc
repz
aam
adc
testl
dec
push
jnp
cmp
sub
pop
xchg
cld
and
lret
add
in
lock
pop
ficomps
pop
sbb
cmp
in
ljmp
adc
addr16
dec
inc
das
lods
ret
sbb
scas
push
stos
fmul
lods
dec
lahf
out
adc
add
xlat
jo
in
and
hlt
jno
adc
cmc
aad
jae
xchg
mov
outsb
pop
xchg
lret
popa
shlb
std
xchg
sahf
bound
inc
jp
arpl
lock
jg
movsb
scas
popf
int
add
ljmp
arpl
in
or
xchg
inc
dec
mov
mov
ret
je
inc
mov
sub
call
jp
mov
std
adc
sub
in
push
pop
mov
mov
pop
adc
subl
sub
test
das
aam
add
add
imul
cwtl
rcrb
lods
add
icebp
ret
das
push
mov
repz
xchg
or
movsb
or
out
in
mov
sahf
lret
or
add
movsl
pop
out
lss
rorb
sahf
fimuls
pusha
xchg
xorl
sbb
jo
rol
mov
sbb
push
inc
insl
xchg
scas
scas
mov
dec
pop
dec
sbb
loop
rorb
adc
aam
stos
dec
gs
mov
inc
jle
sbb
ljmp
and
iret
out
xchg
jge,pt
cltd
les
cli
sub
bound
insb
add
pushf
je
sub
mov
into
ret
in
or
xchg
mov
jle
add
cmc
call
movaps
mov
jns
or
push
je
fisubrs
adc
jae
sahf
cmp
inc
and
mov
sub
add
inc
arpl
mov
add
test
sub
add
scas
xor
and
imul
gs
cltd
pop
into
lcall
jmp
into
dec
add
sti
cmpsl
or
lea
jecxz
mov
add
xchg
or
fisubrs
dec
sbb
mov
fs
repnz
pop
xchg
iret
add
inc
pop
ja
jns
or
movsb
aas
pushf
push
cli
stos
aad
sbb
pushf
add
das
cltd
inc
push
dec
hlt
xor
loopne
out
cltd
mov
cld
movl
pop
dec
xchg
in
stos
jo
xchg
rcrw
dec
sahf
inc
dec
testb
popa
inc
stos
cltd
cwtl
test
fsub
fidivrs
cmpsb
std
mov
outsb
addr16
cmp
sti
dec
mov
nop
insb
cmp
cmc
das
imul
pop
insb
std
cmpsb
mov
add
add
pushf
cmpsl
incb
stos
mov
cltd
dec
lods
test
sub
rorb
fistpll
dec
pop
out
lods
scas
mov
cmp
dec
pop
int
ret
push
lahf
shrl
shlb
fwait
xor
lds
mov
adc
fs
outsl
mov
popa
mov
cmp
inc
popf
push
adc
jb
lock
sti
push
shrb
lret
adc
test
icebp
mull
sbbb
test
mov
std
mov
mov
push
test
arpl
xor
repnz
inc
scas
push
pop
stc
xchg
aas
jmp
imul
dec
mov
push
movsb
mov
jmpw
sub
adc
mov
mov
shll
int3
xchg
mov
jb
adc
mov
mov
xlat
je
ja
rolb
gs
xor
sub
and
pop
xchg
xchg
sub
cmp
mov
sbb
mov
xor
cmp
clc
test
std
xchg
jecxz
dec
cmpsb
aas
inc
push
or
hlt
test
pop
push
sub
and
ja
mov
xchg
push
jp
stos
jnp
pop
dec
fildl
xor
test
sub
cs
push
outsl
xor
test
mov
cmp
call
push
push
push
cmpsl
sub
adc
or
shrb
mov
movsl
cmpsb
pusha
mov
cmpsl
inc
or
and
cwtl
aad
jb
ret
add
xchg
jg
loop
inc
sub
call
icebp
aas
fisubl
fldenv
push
dec
cli
ds
add
xchg
insb
dec
ret
insl
jge
sbb
mov
push
and
imul
pop
inc
cmc
sbb
popf
lods
or
out
push
dec
test
in
mov
inc
cwtl
popf
in
inc
sti
adc
inc
cli
notl
jo
jno
pop
icebp
and
mov
in
data16
xchg
not
add
mov
repnz
out
xchg
daa
or
jne
and
stos
adc
dec
inc
aad
dec
loopne
jnp
and
iret
inc
sbb
pop
sti
out
or
inc
or
mov
mov
fcomip
mov
adc
jp
add
inc
jecxz
scas
push
adc
data16
js
jecxz
push
fiadds
insb
mov
inc
test
mov
ja
jecxz
js
xchg
test
or
or
mov
int3
repnz
mov
inc
das
dec
dec
dec
mov
xchg
gs
loope
movsb
mov
and
push
mov
jl
inc
sbb
js
pop
out
xor
jmp
cwtl
sub
lods
adc
lcall
xor
out
test
testb
dec
mov
mov
fscale
xor
xor
sarl
subl
and
stos
pop
dec
push
pop
jle
inc
push
xchg
pop
imul
push
or
es
out
pop
inc
mov
in
sub
test
imulb
add
repz
or
mov
in
inc
cmp
mov
ret
stos
jb
cmp
jge
in
inc
shll
pusha
addr16
fiadds
test
or
xor
mov
cld
cmp
fldl
mov
push
test
adc
sbb
or
and
mov
xchg
dec
mov
es
pusha
jae
js
jb
xchg
jecxz
test
push
cmp
insb
mov
aad
imull
sub
js
jmp
xlat
pop
and
fwait
in
mov
mov
test
mov
push
inc
insl
push
push
xchg
leave
imul
pop
pop
mov
jbe
out
pop
inc
push
jg,pt
call
sub
cwtl
inc
repnz
roll
sbbb
shlb
mov
inc
push
cs
clc
inc
pop
test
cmp
fsubs
dec
ret
and
orb
cmp
enter
xchg
les
nop
push
fdivs
inc
loopne
xchg
stc
cld
std
lcall
adc
inc
mov
idivl
shll
xlat
mov
push
pop
test
pop
sarb
popf
dec
sub
pop
mov
sub
mov
or
movsb
jae
cmp
stos
outsb
push
mov
mov
push
cmp
mov
cmc
out
jae
mov
loope
mov
fsts
or
je
decl
mov
clc
xchg
push
sub
test
sub
idivl
in
pushl
lods
push
call
fcmovbe
dec
push
and
sarl
inc
ret
cmp
dec
inc
fsubrp
sbb
sub
sub
aad
adc
imul
add
test
adc
test
insb
test
pop
adc
jb
test
push
xchg
inc
or
in
xorb
and
cs
lret
xchg
cwtl
popa
dec
and
fwait
jae
push
fld
mov
sub
mov
imul
xchg
mov
loopne
pop
xchg
arpl
mov
idivb
in
lods
dec
xor
into
scas
cmc
stos
inc
sbb
add
jge
fcoms
mov
ret
imul
push
mov
addl
js
shlb
icebp
popf
xchg
push
test
fimull
push
out
xchg
xchg
iret
out
aaa
mov
mov
dec
jno
inc
cmp
rcrb
lock
cmp
add
lret
iret
mulb
xchg
jl
jge
mov
out
push
ficoms
sbb
cmp
inc
sub
mov
mov
in
jle
out
fbld
ret
add
and
mov
fwait
jecxz
int
push
mov
mov
iret
xchg
in
mov
cmpsl
lock
xchg
adc
mov
frstor
add
fcmovnb
pop
out
adc
sahf
sbb
dec
adc
dec
out
lret
sarl
les
js
sub
mov
insb
fdivrl
ret
ds
cld
fadds
jmp
lods
pop
pop
out
rcr
cmp
cltd
push
push
test
inc
xchg
nop
sbb
xchg
lea
mov
fidivs
and
loope
jle
frstor
adc
xchg
or
mov
insb
mov
pusha
jo
pop
push
mov
loope
push
sub
mov
mov
out
sbb
test
loopw
jmp
shr
sbb
loope
test
sub
mov
inc
jno
push
in
inc
push
push
int
jmp
push
xchg
or
pop
nop
into
aas
clc
cs
aam
xchg
pop
or
xchg
cmp
pop
lock
sbb
adc
cwtl
call
add
movsl
icebp
jbe
mov
pop
cwtl
jmp
add
mov
mull
adc
test
sbb
pop
insb
cmp
fimuls
in
stos
add
in
push
lahf
sbb
dec
jnp
jge
and
dec
adcb
adc
inc
dec
insl
imul
push
xchg
cmp
jle
test
add
and
mov
lret
mov
imul
inc
out
lret
leave
mov
cs
jg
add
add
call
lods
in
idivb
xchg
sbb
add
push
add
mov
in
jb
data16
fldl
push
push
lahf
shrl
dec
xor
std
scas
jno
stos
lock
sbb
mov
test
mov
stos
sbb
push
mov
cmp
repnz
test
and
push
add
xchg
mov
fwait
or
pop
stc
xor
lock
ljmp
rolb
pop
insb
test
stos
push
jns
sbb
mov
into
pop
lahf
cmpsb
pop
daa
pop
stos
mov
into
adcl
in
cmp
push
jp
test
add
rcll
xchg
jmp
ja
das
call
mov
mov
pop
sbb
xor
mov
xchg
pop
and
push
data16
push
inc
in
cs
cwtl
addb
loopne
jbe
cmp
mov
sahf
cmpsb
push
jno
adc
xor
lret
ss
je
xor
mov
mov
xchg
pop
dec
ds
movsb
push
stc
adc
and
cmp
clc
rclb
cmp
mov
xchg
inc
push
sub
dec
cmc
dec
xchg
outsb
cmp
xchg
fwait
std
ds
mov
mov
inc
jl
shrb
lock
js
fstp
push
pop
sub
popf
sub
scas
xlat
sub
dec
insl
nop
addl
cmpsl
or
outsl
sbb
data16
or
dec
inc
mov
aam
and
outsb
mov
and
lret
movsl
sarl
mov
push
ret
mov
xchg
rclb
jo
xchg
out
out
movsb
dec
mov
add
push
aas
mov
ds
push
jmp
mov
cmp
jp
add
into
int
fdivrs
jno
jnp
sahf
sbb
xor
outsb
fimuls
icebp
mov
add
dec
shll
fnstcw
inc
mov
out
sub
push
xchg
ret
fcoml
lahf
daa
jb
xor
cli
stos
fcomps
add
sbb
cmpsb
cmpsb
popa
rcr
xlat
mov
cmp
push
mov
call
sahf
popa
mov
lock
xorb
int3
fwait
xchg
mov
outsb
in
xchg
cmp
stc
lods
adc
imulb
ljmp
push
inc
push
arpl
jne
fstpl
arpl
dec
inc
imul
pop
adc
or
dec
addr16
mov
sti
inc
cmp
sbb
ds
pop
dec
int3
lods
addb
iret
addl
cmp
sbb
es
sub
iret
lret
push
pusha
mov
in
rol
nop
push
xchg
jge
add
out
add
and
popf
dec
shll
dec
adc
sarb
es
dec
dec
in
dec
sub
and
dec
lcall
dec
icebp
stos
outsl
mov
mov
jnp
dec
push
cwtl
xor
adcb
xchg
mov
jecxz
xchg
nop
fmull
xchg
jno
adc
cmc
arpl
cmp
cltd
add
xor
mov
insb
mov
add
dec
or
flds
ret
sub
jnp
cld
jnp
jmp
aam
push
jo
xor
pop
lahf
ret
dec
push
movsl
xchg
xorl
and
jmp
rcrb
sar
mov
out
cli
out
sti
ds
fadd
mov
sub
xorb
in
stos
cmp
xor
fbld
mov
lret
jmp
ret
test
mov
mov
xor
mov
aam
pop
inc
icebp
fdivl
inc
push
inc
jecxz
cli
cmp
jecxz
outsl
popa
movsb
inc
loopne
fs
dec
es
movsb
lods
hlt
mov
cltd
fnstsw
out
aam
testb
mov
adc
fsub
add
or
or
mov
loop
shrl
js
push
push
and
sbb
add
fwait
mov
call
sub
inc
push
ret
mov
pop
inc
loop
mov
sub
xor
shr
or
es
push
dec
cs
add
sbb
dec
xchg
inc
lahf
imul
add
fidivs
loopne
mov
enter
xchg
jne
fcmovb
pop
pushf
mov
adc
sarl
jecxz
add
jge
loope
add
mov
test
mov
mov
packssdw
and
push
fdivs
mov
jmp
lock
test
mov
sub
lods
xchg
clc
dec
leave
in
mov
aas
push
sbb
pop
xchg
mov
lea
ja
mov
orl
cmp
aam
mov
sub
and
lret
dec
inc
push
adc
mov
and
cmp
pushf
adc
dec
adc
mov
or
imul
or
push
cmp
cmc
sub
ret
mov
push
fwait
adc
rolb
lret
imul
fldl
mov
les
push
insl
in
and
xor
add
inc
lds
loopne
jp
imul
adc
xor
jns
call
gs
insl
xchg
dec
scas
cli
in
ret
leave
call
cmp
xchg
mov
push
dec
in
push
add
and
jecxz
mov
jns
inc
mov
and
pop
iret
fisubs
pop
popf
out
aad
push
mov
push
je
xchg
out
push
cmpsl
pop
mov
push
sub
xchg
fisubl
sub
pop
jmp
inc
or
gs
fidivl
in
sub
sahf
jle
jnp
push
lahf
adc
es
mov
pop
adc
sbb
cmpl
mov
jae
stc
xor
xlat
mov
sti
movsl
mov
xlat
int3
lock
in
adc
sti
xor
in
jmp
rolb
dec
pop
sbb
roll
pop
movsl
mov
rcrl
out
aas
aaa
lret
mov
xchg
pop
mov
sub
insb
rorb
outsl
xlat
ror
pop
into
pop
leave
mov
pop
mov
test
add
sbb
scas
sbb
shrb
xchg
aaa
out
pushf
clc
adc
jns
ss
lea
popa
mov
adc
pop
fsts
mov
jmp
adc
cmp
mov
stc
xchg
mov
mov
cmp
xchg
stos
cli
and
sub
mov
add
xchg
das
loope
lea
push
fcoms
dec
add
push
inc
push
lret
adcl
xlat
cmp
xor
andb
xchg
int
mov
lcall
sbb
lods
fisubrs
inc
pop
jp
fs
push
jge
adc
arpl
test
push
push
stc
xchg
mov
lret
roll
add
pop
and
js,pn
lods
loope
dec
rorl
es
push
call
xchg
lret
pop
mov
push
lds
loopne
test
mov
push
sbb
jle
out
xchg
movsl
xor
out
and
nop
add
push
mov
dec
gs
mov
pop
pop
cli
cmc
mull
xor
dec
sti
into
mov
rclb
jp
movsb
xorl
and
jmp
outsl
test
mov
fimull
repnz
leave
hlt
outsb
add
jp
outsl
enter
inc
push
je
jns
cwtl
adc
out
pop
or
insb
stos
sahf
cmpsl
cmpsb
jne
cmpb
mov
and
mov
ds
sub
jb
imul
jae
leave
lock
adc
dec
dec
sbb
inc
mov
mov
mov
addb
lods
push
jge
in
jns
loopne
cli
push
fldl
lds
test
and
push
and
cmp
dec
loope
xchg
jmp
stos
ljmp
ds
lea
adc
ret
cmp
lcall
and
and
adcl
lds
and
inc
and
jbe
repz
xor
jo
sub
cmp
and
outsl
jo
sbb
repnz
loopne
int
fwait
stc
leave
mov
imul
adcb
sbb
aam
push
cs
ret
jge
fadds
mov
mov
bound
xor
xor
pop
mov
lods
mov
or
int3
inc
stc
mov
imul
repz
push
pop
test
mov
jbe
aam
pushf
xchg
aam
in
popa
mov
mov
add
push
lret
ret
loopne
xor
lds
fisttpl
inc
in
js
jmp
mull
imul
xchg
fidivrl
xor
cld
inc
add
std
or
aad
xor
imul
push
int3
pop
orb
push
pop
pop
inc
lret
mov
aad
mov
sbb
mov
stos
push
in
push
mov
jmp
mov
xor
popa
mov
lea
stc
adc
sbb
in
adc
cmp
pop
loopne
std
inc
movsl
int
stos
xor
pop
icebp
mov
mov
packuswb
ds
sub
pop
jmp
into
enter
mov
dec
jo
fisubrl
arpl
mov
sahf
xchg
popa
aaa
sub
pop
int3
lret
lret
test
aad
dec
cltd
xor
repz
add
sbbb
repnz
and
lods
pusha
or
enter
xor
ljmp
mov
inc
cmc
add
addr16
push
andl
scas
jnp
mov
imul
pop
dec
iret
mov
fwait
and
jne
pop
sahf
aaa
cltd
dec
sub
mov
cmp
sub
ret
jb
pop
jle
adc
rcll
fmulp
int
fldt
xchg
push
adc
rcl
in
or
fimull
xchg
xchg
mov
jge
dec
icebp
ljmp
add
cmp
jmp
or
rol
push
sbb
xor
out
ljmp
xor
ret
inc
fisttps
gs
mov
adc
inc
fimuls
imul
push
out
xor
pop
fnstsw
jno
mov
popa
out
push
std
push
push
ret
xor
stc
mov
gs
fstps
sbb
push
pop
rorb
inc
rol
pop
fwait
mulb
or
push
mov
call
or
inc
popa
sub
lret
fsts
mov
out
xchg
xchg
pop
xchg
out
int3
mov
pop
into
in
adc
xor
stos
rorl
icebp
pop
shlb
pop
cmpsb
cmp
xchg
data16
sahf
rcrb
fs
adc
xchg
jne
out
fdivrl
mov
jmp
into
bound
repnz
shl
push
sbb
mov
gs
jbe
je
adc
sbb
pop
jo
lds
push
call
xor
xchg
inc
add
call
fsubrl
pop
out
jmp
push
and
jle
rcrl
and
sub
punpckldq
popf
stos
scas
sub
rol
jo
ss
out
dec
scas
cmp
or
add
mov
arpl
push
out
loop
push
addr16
or
lahf
or
lock
aam
shlb
cmp
pop
sub
dec
or
shlb
xor
loope
mov
pop
into
ds
test
shlb
dec
lahf
cli
test
hlt
arpl
mov
ja
shlb
out
adc
neg
xor
das
pusha
ret
hlt
and
pushw
fidivrl
sbb
stos
cwtl
fs
dec
pop
cmp
push
sahf
lods
dec
jo
sbb
xor
insb
js
idivb
cmpsl
cmp
leave
cmp
scas
testl
lahf
dec
cli
sti
inc
popl
mov
xchg
jnp
push
fidivrs
pop
xchg
mov
sti
inc
push
es
or
cmp
cmp
jnp
lods
xchg
enter
adc
notb
adc
push
loop
jns
jae
mov
sbb
sbb
sbb
pop
out
or
lret
xchg
nop
sahf
push
lret
mov
sub
inc
test
sbb
and
out
stc
or
sbb
popf
loop
fdiv
xor
into
push
jmp
xchg
stos
scas
push
mov
roll
mov
push
repnz
xorl
in
or
xor
dec
add
inc
or
mov
movzwl
dec
inc
cs
ret
lret
pop
data16
mov
addl
dec
out
push
mov
push
test
xchg
dec
loop
mov
stos
pop
push
cmp
cmp
add
sbb
mov
adc
out
int
and
stos
mov
mov
inc
mov
in
sub
mov
test
int3
push
loopne
inc
std
lods
mov
cmpl
jmp
cmp
es
aam
jp
ret
mov
dec
outsb
loope
pushf
movsb
sub
xchg
and
cs
xor
sub
sahf
jp
mov
cltd
fisubs
ja
test
push
adc
ret
in
dec
xor
add
add
add
push
fs
out
daa
mov
push
lret
fidivrs
daa
push
aas
imulb
fnsave
stc
leave
test
fmuls
dec
push
inc
mov
mov
les
cmc
inc
pop
sbb
or
sub
mov
pop
xor
imul
push
fdivr
jne
xor
push
xchg
dec
mov
mov
jbe
sbb
mov
rcl
jp
arpl
inc
cmpsl
add
clc
sbb
ss
cmp
sarl
cmpsb
fsubs
stos
inc
lods
or
xchg
stos
cmpsb
outsl
lds
out
imul
pop
clc
push
scas
pop
inc
test
mov
out
mov
call
push
fs
lods
fcoms
test
mov
push
shlw
xor
in
stos
pusha
shl
jge
decb
rcll
call
push
xchg
out
or
dec
inc
jne
sbb
sub
ja
and
and
dec
jecxz
test
xlat
dec
test
jb
cmp
repz
ss
sahf
fstps
add
cmp
push
insb
movsl
cmc
sub
mov
jb
lods
inc
jge
xor
push
and
mov
push
fildl
ret
imull
jecxz
pop
cmp
aam
inc
stos
mov
pop
pop
inc
sub
pop
mov
adc
stos
jge
add
sarb
stc
sahf
dec
xchg
push
sbb
popl
sub
mov
aam
notb
mov
cmp
push
mov
stos
cld
xchg
mov
nop
sbb
lea
fnsave
scas
and
sbb
xor
mov
dec
aas
and
push
addr16
ds
loopne
ljmp
cmpl
cmp
mov
adc
add
pushf
ljmp
cmp
xor
or
ljmp
add
cwtl
dec
loopne
in
in
ljmp
mov
push
pop
sub
sarl
nop
js
movsl
out
inc
inc
in
fmuls
mov
enter
add
pop
push
lock
sub
out
fistps
test
dec
stc
mov
loop
paddsb
aad
das
lahf
repz
sub
das
xor
and
popf
adcb
movl
out
addr16
jne
lcall
ljmp
insl
jmp
mov
js
xlat
dec
aad
mov
ficompl
adc
aad
pusha
push
push
mov
and
sub
add
mov
sti
andb
decb
cmpsl
pop
sbb
push
xchg
jl
add
faddl
jo
inc
pop
mov
sbb
xchg
inc
mov
addr16
fisubs
mov
jmp
loop
pop
dec
loop
fcompl
loope
dec
aaa
jge
repz
jge
daa
jmp
lfs
adc
shr
sbb
xchg
movsb
movsl
mov
xchg
jge
leave
subl
data16
pop
mov
mov
or
sbb
dec
scas
js
mov
adc
jnp
inc
add
enter
xchg
mov
xor
push
xlat
fwait
out
sti
test
test
stos
jnp
sbb
adc
adc
shrb
ss
xlat
icebp
cmp
inc
in
cwtl
mov
push
in
insl
repnz
cld
mov
fnsave
mov
cmpsb
nop
hlt
je
dec
sbb
ficoml
jle
dec
pop
adc
dec
or
jno
stos
stos
jb
nop
clc
fisubs
mov
adc
lds
lret
xor
mov
test
sahf
imul
mov
fs
xchg
or
dec
jp
inc
ja
adc
int
sub
test
arpl
out
or
mov
mov
cltd
aaa
loopne
rcl
push
scas
gs
fnstenv
mov
pop
lea
fsubl
or
dec
add
jns
mov
pop
mov
mov
pop
cmp
aaa
inc
and
jnp
into
mov
inc
mov
sub
repnz
mov
repz
fwait
cltd
cmc
or
dec
das
jne
cmp
jne
xchg
xor
outsb
test
adc
dec
dec
xchg
ss
xchg
jo
hlt
ljmp
mov
dec
xchg
push
insl
sarl
xor
lock
shrb
sub
xchg
and
sbb
cmp
enter
cld
mov
iret
bound
push
and
aam
loope
xor
adc
lods
movsl
sbb
clc
lahf
jp
mov
cmp
inc
jno
hlt
xchg
cmpsb
test
push
dec
ja
les
iret
lods
push
daa
js
scas
cltd
xchg
cwtl
cmpsb
pop
loop
jle
test
imul
addr16
or
test
out
stos
jmp
dec
sub
pop
cltd
iret
scas
pop
jne
test
cltd
das
outsb
aaa
aad
loop
mulb
scas
or
and
xchg
shufps
jb
gs
pushf
or
push
pop
mov
add
cmp
jae
xor
and
mov
clc
sbb
lods
xchg
pop
outsb
cltd
lea
pop
cld
hlt
mov
mov
mov
sub
les
lds
into
or
adc
add
push
aam
dec
fsubl
mov
call
jbe
cli
mov
jl
or
jge,pn
into
cmp
add
bound
push
cmp
pusha
dec
cltd
mov
mov
movsl
adcb
es
lret
out
xor
mov
lahf
aad
std
out
fwait
call
pop
int
jns
mov
dec
pop
push
and
imul
adc
sub
clc
inc
mov
test
mov
xchg
test
sbb
push
sub
push
jp
pop
add
subb
xchg
out
in
icebp
incl
jp
arpl
xor
test
cmp
inc
cmpsb
loope
mov
push
pop
push
sbb
inc
and
test
push
sahf
xor
out
ret
dec
lahf
pop
jns
bound
popa
js
mov
cmp
dec
inc
push
push
lretw
lcall
mov
push
mov
xchg
add
dec
rclb
aas
sbb
mov
arpl
or
jns
pop
adc
insb
pop
push
cld
adc
mov
fstps
pop
cmpsb
inc
aam
mov
jg
pop
fnsave
nop
in
xchg
dec
fcoms
int
jl
inc
lret
sub
sub
lret
adc
mov
mov
call
fstps
inc
out
shlb
sbb
and
pop
and
mov
repz
push
xor
xor
adcl
insl
ja
leave
dec
outsb
fdivs
bound
jg
cmp
push
rclb
mov
and
jbe
sbb
mov
adc
add
cmp
xor
mov
cmp
popf
add
or
jo
sub
ds
push
add
aas
mov
pop
out
dec
les
out
xchg
jle
fs
popf
mov
cmp
add
daa
push
jo
mov
cmpb
sub
mov
test
js
xor
cld
andl
shll
xor
dec
mov
push
xlat
movsl
cmpb
es
andl
or
inc
std
lods
pop
mov
test
test
mov
dec
sbb
jb
shrb
ret
lods
mov
xchg
jbe
cmp
add
imul
pushf
and
jns
cmp
leave
std
inc
es
in
dec
nop
divl
mov
das
cli
xchg
lods
lahf
inc
xor
in
cmp
pop
push
test
mov
js
inc
jno
adc
loop
insl
push
pop
mov
cs
jb
or
into
or
add
dec
push
shll
je
js
pusha
pusha
mov
push
fsubl
subl
outsl
ljmp
adc
icebp
js
movsb
jno
add
jp
and
inc
mov
pop
in
pusha
adc
push
cmp
enter
xchg
xor
iret
iret
leave
mov
aam
pop
push
in
dec
scas
stos
and
push
mov
hlt
rorb
ret
insb
ret
leave
mov
fistl
cmp
sub
xor
pop
add
add
dec
daa
cld
movsb
fs
lea
pop
arpl
movsb
loop
repnz
pop
mov
pop
sbb
fcom
pop
sub
push
je
xchg
add
xchg
insb
dec
outsl
lea
insl
mov
ret
inc
jmp
dec
cld
jmp
movsl
pop
push
rol
inc
int3
repnz
outsl
xchg
fistl
pop
cmp
xchg
es
xor
and
imul
lret
inc
imul
inc
clc
mov
adc
cmpsl
mov
dec
outsb
xor
sub
dec
push
cmc
mov
push
cmpsl
leave
cmpsb
adc
jne
add
dec
int3
xlat
mov
push
mov
les
fsubr
sub
movsb
jne
push
cwtl
das
push
es
pop
adc
ss
shrl
dec
push
jp
sbb
mov
aam
sub
mov
aad
fnstsw
test
into
mov
add
cs
aad
inc
mov
sub
shrb
mov
xchg
cltd
jno
pop
xchg
lock
and
jge
out
enter
xchg
mov
fidivs
cmc
ret
loop
mov
into
pushf
pushf
dec
cmp
add
push
clc
xchg
repz
lds
jae
push
xor
stos
pop
lcall
or
dec
xor
ss
jle
jo
inc
shl
shlb
idivl
in
daa
cmp
jmp
add
sub
clc
cs
lcall
loop
inc
test
mov
aas
jmp
cli
nop
les
sub
push
mov
outsb
ljmp
cmp
pop
mov
add
loopne
push
push
aas
loop
and
aas
xchg
nop
lods
pop
add
mov
ds
fidivrs
jb
add
jge
lds
loop
lods
mov
repnz
in
jge
ret
test
cli
ljmp
mov
pop
pop
stos
sub
cmp
ret
hlt
xchg
pop
ljmp
iret
lods
push
push
sub
jb
scas
mov
cmp
cs
dec
das
or
mov
mov
dec
cli
sbb
rolb
rclb
sbb
cmpsl
out
sub
xchg
pop
aad
into
sbb
lcall
mov
mov
adc
nop
mov
xchg
lret
xor
mov
cmp
dec
cmp
inc
shl
lds
sbb
outsb
inc
out
mov
aaa
mov
fisubl
inc
shlb
mov
repnz
jne
pop
jecxz
push
xchg
mov
cmp
roll
sbb
orl
inc
icebp
fdivrp
xor
adc
xlat
pushf
lahf
fs
stos
sub
dec
sub
pop
or
inc
xchg
lea
xchg
xchg
dec
push
stc
repnz
iret
movsl
sub
add
out
dec
enter
mov
cmp
push
outsb
sbb
mov
ja
and
xor
gs
dec
or
icebp
mov
mov
aaa
mov
dec
movsb
mov
sub
loopne
cmp
leave
push
xchg
lock
pop
test
pop
adc
and
xor
jns
dec
sti
adc
jle
xor
stos
xchg
dec
mov
add
dec
lock
mov
xchg
add
and
outsl
lods
es
cmp
sbb
jns
ja
sbb
repz
pop
test
fsts
loope
addr16
lea
mov
shl
jnp
out
xchg
lahf
mov
or
stos
mov
sarl
mov
inc
xlat
mov
dec
add
push
or
decl
in
sub
std
ret
lods
inc
imul
in
mov
pop
push
das
mov
push
and
sarl
xchg
test
push
push
shlw
mov
sbb
sbbb
in
mov
inc
je
push
or
loopne
scas
mov
mov
mov
xchg
das
rorl
js
adc
and
iret
adc
jmp
add
stos
sbb
cmc
out
mov
push
lods
mov
push
and
arpl
xchg
nop
stos
cmp
iret
pop
movb
add
mov
fisttps
arpl
xor
adc
push
jnp
les
push
ror
add
lcall
jno
out
xor
imul
pop
sbb
or
pop
pop
cltd
cmp
push
jne
cmp
mov
xchg
xor
aas
cli
mov
mov
lcall
sub
and
push
rcr
xchg
mov
ss
lahf
inc
movsl
popa
mov
dec
cmpsl
dec
pop
int3
lahf
or
fsubrs
das
adc
dec
add
int3
jo
mov
jbe
or
loopne
lahf
imul
into
mov
push
xor
aaa
sbb
sahf
jmp
sti
push
ss
add
cltd
push
xor
jmp
lret
cmp
mov
adc
sub
xchg
lcall
sbb
mov
push
mov
or
sti
mov
outsb
xchg
sti
dec
jns
cmp
pop
out
mov
orb
xor
dec
ja
jnp
movsl
sub
push
sbb
pop
pop
push
mov
scas
scas
insb
stos
stos
or
mov
adc
mov
outsl
icebp
pop
gs
xor
pop
mov
outsl
and
dec
sbb
outsl
ficomps
cmpsl
into
fidivrs
fimuls
aam
pop
xor
push
inc
ret
andb
sahf
mov
mov
pop
sub
lods
psubb
out
repnz
sbbl
jns
inc
jb
iret
sarb
and
mov
push
fcompl
sub
out
dec
add
fidivrl
aas
dec
cld
mov
test
subb
mov
les
fsubrp
adc
mov
mov
lods
lods
sub
andb
jne
pop
aaa
add
jp
push
les
or
call
xor
pushf
and
ja
xor
dec
mov
movsl
int3
in
repz
pop
les
imul
lods
mov
dec
push
mov
or
outsl
scas
ret
cld
push
inc
xchg
pop
pop
dec
std
or
cmp
fs
int
xlat
jg
scas
jne
jge
cmp
lahf
inc
pop
sbb
decl
mov
jb
fldcw
ret
jb
sahf
jno
sti
mov
adc
repz
lds
cld
nop
add
and
push
adc
fsubr
add
out
mov
sub
insl
jmp
cmp
cmp
cmp
pusha
in
cmp
stc
push
clc
xchg
add
sub
lods
push
dec
add
inc
mov
fists
sbb
neg
sub
xor
sbb
ret
push
push
in
mov
bound
mov
adc
dec
icebp
pop
xor
push
lea
mov
pusha
inc
das
dec
out
add
adc
push
sbb
pop
int3
pushl
and
leave
push
sbb
jecxz
add
dec
and
xchg
or
inc
inc
bound
dec
inc
or
nop
pusha
daa
lcall
and
sti
je
pop
pop
loopne
dec
popa
scas
add
cmp
cltd
mov
mov
jo
int3
mov
daa
mov
addr16
add
sbb
adc
rcrb
push
pop
and
in
or
mov
mov
xchg
js
push
leave
jg
cli
adcl
out
pop
movsb
sbb
pop
dec
stc
jb
cmp
repz
loope
xchg
hlt
loopne
rcr
cmpsl
call
add
roll
mov
rcrb
pusha
lock
mov
push
enter
pop
mov
pop
inc
and
arpl
xlat
nop
jmp
adc
ds
jb
les
mov
mov
test
push
ss
sub
scas
push
repnz
fucomip
shl
cmp
in
stos
mov
cmpsl
test
test
loopne
pop
jae
dec
xchg
int
jo
jb
jg
sub
and
jmp
xor
cmpsl
lds
fisttps
xchg
sar
pop
xor
pop
loope
sbb
inc
orb
cltd
mov
add
rorl
in
aad
sub
push
aas
arpl
scas
daa
sbb
mov
into
sub
adc
pop
inc
dec
fstpt
imul
pop
pop
in
out
cmp
xor
popf
je
comiss
and
jge
or
popf
or
push
fnsave
in
add
mov
dec
test
push
sbb
jb
ret
in
shrb
pop
add
or
xchg
pusha
data16
xchg
dec
jge
inc
inc
movsb
setbe
adc
or
and
enter
imul
ja
jne
push
idivl
repz
add
jmp
xor
test
je
inc
mov
stos
out
pop
rorb
jmp
xchg
scas
sarb
addr16
es
arpl
cmpsb
imul
scas
fistps
ficoms
rclb
adcb
jl
out
idivb
dec
je
sbb
mov
sti
push
js
push
xor
gs
outsl
push
mov
jae
xchg
xchg
push
popl
lret
pop
in
adc
or
and
and
mov
jnp
adc
in
mov
xor
stos
cmc
dec
les
fdivrl
ret
sbb
dec
jle
dec
daa
sub
mov
fnstcw
and
repnz
in
jl
dec
popf
push
sbb
jnp
rcl
xorb
mov
fsubrs
cmp
stos
pop
aaa
dec
fiadds
push
lds
push
jp
fcompl
sub
sahf
sbb
mov
incb
andb
pop
out
test
push
xor
jnp
inc
ds
fildll
dec
pop
push
sub
jmp
fwait
xor
or
cmpsl
repnz
lock
clc
dec
clc
push
mov
sub
and
test
decb
enter
ret
cmp
lods
fsubl
mov
loope
pop
dec
std
pop
dec
xor
pop
pop
int3
repz
test
in
sub
into
movsb
test
inc
mov
in
inc
in
cmp
pop
push
sbb
ret
popa
and
sub
std
dec
lret
add
hlt
jmp
jge
jo
xchg
pop
jmp
les
shlb
bound
jle
xchg
popa
xchg
out
iret
fwait
dec
push
in
xchg
aaa
sti
cmp
push
push
dec
fistpl
push
xor
push
je
fidivl
mov
test
sbb
cmp
hlt
testb
jp
push
ret
lret
fdivrl
int3
and
jns
test
popa
ds
addl
adc
or
mov
or
xor
mov
movsb
cmp
cmpsb
gs
scas
push
cwtl
jae
cmc
fmull
test
aad
jecxz
inc
mov
mov
sbb
pushf
lock
jae
dec
cmovl
adc
cwtl
adc
xor
mov
jle
stos
stos
add
rorb
scas
gs
movsb
aad
push
shrl
loopne
xchg
fisttpll
xlat
scas
and
push
addr16
dec
cli
mov
mov
out
or
ret
xor
mov
xchg
jae
std
jmp
shrb
jmp
cmp
rep
jne
sub
ret
pop
cmp
inc
mov
sub
aas
out
jl
aas
xlat
sub
fdivrs
in
lock
loop
pushf
enter
mov
sti
rsqrtps
adc
sbb
mov
jbe
inc
adc
or
xor
jmp
out
addr16
xchg
jne
sbb
mov
inc
repz
mov
or
repnz
dec
int3
push
sub
js
into
jb
jge
adc
fistps
aad
xlat
stc
jnp
xlat
jo
xor
repnz
dec
sub
movsl
gs
cmp
lock
pop
data16
stos
loop
pop
loope
xchg
dec
sbb
dec
push
xor
push
je
or
fucomp
mov
int
inc
rcrb
sbb
sbb
cmc
mov
cld
inc
lret
imul
mov
fildl
negl
and
and
push
lods
shll
jnp
mov
xor
ret
cmp
jns
lds
mov
ljmp
into
inc
jge
mov
mov
and
mov
cmp
cmp
sub
push
ss
lods
stos
jle
divl
mov
mov
data16
mov
movsb
inc
sbb
insb
xchg
and
mov
cmp
inc
leave
mov
lea
loop
xchg
insl
std
jg
xchg
lods
call
out
pop
or
add
mov
mov
rcll
or
lods
mov
jmp
add
add
fists
lahf
in
lcall
mov
cmp
les
sub
mov
add
adc
stc
xor
xor
mov
mov
adc
cmpsb
pop
sbb
rolb
pushf
popa
jmp
sbbl
fdivl
imul
not
inc
sbb
arpl
stc
mov
int
cmpsl
mov
lahf
push
es
xor
xchg
mov
mov
jb
jge
jecxz
sbb
and
cli
dec
add
pop
mov
sti
mov
xchg
fs
stos
adc
hlt
adc
adc
dec
pushf
popa
lods
mov
cmp
mov
dec
cmpb
and
loope
hlt
cmpsl
pop
flds
jns
lods
jge
mov
sub
jmp
js
repz
imul
xchg
push
xor
or
xor
jo
pop
pop
dec
push
iret
sub
sbb
push
push
mov
out
push
add
sbb
pop
adc
icebp
dec
sub
outsb
int3
xchg
int3
int3
mov
inc
fsubl
lcall
stc
test
aam
test
js
inc
xchg
imul
xchg
mov
and
sbb
test
and
dec
enter
mov
sub
pop
jno
inc
int
cwtl
rcll
lods
and
repz
jmp
xor
push
js
and
data16
ljmp
dec
inc
sbb
adc
mov
push
cwtl
cmpsb
sub
push
mov
fidivrs
imul
incb
dec
daa
test
clc
in
jmp
push
sub
cmpl
arpl
add
lods
push
loope
add
add
inc
sbb
stos
mov
std
icebp
cmp
fwait
push
outsb
test
mov
add
lcall
dec
mov
inc
into
push
aas
xor
cmc
movsl
adc
in
inc
inc
sub
aam
mull
cli
fistps
mov
xor
popf
add
ja
push
clc
cmpsl
in
sub
adc
popa
movsl
inc
out
push
fs
addr16
out
sbb
ss
std
or
push
lret
nop
popa
test
cmp
pop
xchg
es
dec
mov
lahf
push
add
aaa
aam
sbb
add
push
outsl
sbb
inc
jae
loopne
cmp
div
scas
addb
pop
xchg
out
das
dec
dec
and
push
test
sahf
mov
faddl
loop
test
jns
add
xor
jb
aas
aam
push
xlat
jnp
push
jb
xchg
mov
lret
cmp
out
addr16
add
sub
testb
and
pop
or
lret
mov
or
jle
ja
sub
lods
xchg
mov
push
ret
cmp
fs
mov
pop
lret
sahf
pop
mov
jnp
insb
xor
xchg
sarl
fidivs
scas
shl
rorl
dec
jno
pop
jl
sub
scas
loop
push
popf
bound
cmp
dec
out
lret
xlat
imul
jg
jecxz
lea
data16
jmp
out
add
xchg
idivb
adc
ret
inc
mov
adc
pop
jge
inc
and
fstpl
push
cmpsl
cmp
cli
ljmp
mov
imul
mov
dec
in
cld
pop
mov
in
cmp
mov
sub
and
or
lock
int3
cmc
pop
sbb
repnz
sub
add
pop
shl
aad
fnstcw
add
jbe
or
mov
mov
pop
mov
ss
insl
push
mov
movsl
cmp
cmp
cmp
loop
add
mov
add
pop
xchg
xchg
inc
pushf
push
repz
ss
aam
sub
aaa
mov
into
dec
daa
mov
loop
lods
loope
shlb
out
ds
loop
dec
sbb
fisttpl
pop
enter
dec
addl
iret
out
or
sbb
je
cmpsl
push
inc
inc
jne
scas
cld
lahf
push
stos
adc
mull
sbb
sub
test
pusha
lods
aad
mov
adc
dec
jns
int
daa
jmp
xlat
mov
ret
mov
cli
push
xor
jne
jg
gs
jge
add
or
mov
lock
xor
mov
or
xor
outsl
adc
jge
dec
sbb
jge
xor
fs
rorl
pusha
pop
out
mov
xlat
das
sahf
popf
inc
push
out
and
jb
jo
xchg
mov
mov
adc
test
push
mov
mov
mov
aam
and
rcll
mov
rcrl
movsl
add
in
adc
lret
lea
pop
mov
pop
dec
add
xor
aas
les
or
mov
and
sbbb
ja
sahf
mov
int3
push
xchg
out
aas
mov
pop
popf
clc
pop
in
sbb
pop
xchg
into
das
xchg
es
negl
xor
fists
push
test
sbb
cmp
outsb
cmp
test
mov
nop
adc
sti
ljmp
scas
jo
fisubrl
mov
cmp
inc
nop
xlat
lret
lcall
pop
push
insl
lock
inc
xchg
jbe
ljmp
jmp
in
pop
daa
jp
sbb
jnp
mov
push
in
ret
sbb
test
jg
push
and
add
add
jns
cltd
sub
mov
std
call
xchg
loop
call
sbbb
adc
lock
adc
jl
pop
mov
jno
sti
rcr
jmp
insb
sti
and
in
out
mov
movsb
jge
pop
inc
push
pop
ja
xchg
imulb
sbb
and
movsb
lock
dec
adc
adc
and
jns
push
mov
pop
jg,pn
xor
in
sbb
push
dec
fldt
or
or
mov
mov
shl
fidivs
or
insl
ret
out
and
and
mov
std
test
fs
sbb
and
sub
lods
cmp
or
add
pop
mov
push
mov
rcrb
cli
bound
mov
xchg
ss
jne
add
fsts
xor
daa
sahf
adc
xor
mov
movsb
sub
inc
inc
cmc
je
jno
divb
mov
test
mov
daa
xor
popa
inc
mov
xlat
inc
dec
aaa
or
mov
mov
icebp
pushf
jp
mov
dec
or
movsl
repz
adcl
mov
in
push
xor
jg
pop
and
sub
pop
pop
sbb
mov
mov
testb
pop
in
cmpsl
xor
jmp
add
and
fdivl
xchg
add
stos
pop
adc
call
xchg
xchg
lods
jns
jmp
in
sbb
and
mov
cmpsl
jle
rolb
cld
loope
push
test
scas
test
out
jno
leave
pop
fldenv
aas
mov
rcrl
inc
push
push
out
jbe
gs
fdiv
cmpsb
mov
fwait
and
xchg
or
ret
aas
popa
out
pop
ljmp
imul
stos
loop
jge
mov
and
pop
inc
mov
subb
imul
pop
xchg
cmp
xchg
jmp
int
xor
out
js
decb
imul
add
repnz
dec
and
in
popf
mov
ss
add
pop
mov
mov
out
roll
mov
in
jg
xor
pop
addl
sarl
test
fwait
popf
in
loop
cmp
in
push
pop
pop
mov
xor
or
hlt
insb
or
sbb
popf
jo
in
imul
and
pop
int
dec
rclb
jge
xor
lahf
jne
fdivrs
imul
mov
ljmp
jl
int
inc
pushf
test
sahf
mov
fwait
mov
call
mov
loop
cmp
aas
mov
sahf
call
and
sbb
sub
pushf
imul
inc
je
adc
movsb
fdivrl
lock
pusha
mov
lods
adc
mov
or
push
jge
repnz
imul
cmc
xchg
and
mov
lcall
mov
js
sarl
adc
and
mov
cmp
sbb
jne
mov
std
dec
mov
inc
loop
out
fidivrs
jl
and
mov
repnz
cld
sti
sbb
or
jle
icebp
and
in
push
jle
cs
dec
mov
fistpl
arpl
cmpsb
mov
pop
and
inc
nop
mov
pop
cmc
mov
in
lods
fwait
and
mov
or
cs
xor
xchg
addr16
sub
test
xor
hlt
sahf
and
and
inc
es
inc
pop
pop
sbb
fwait
and
dec
push
mov
mov
sub
adc
pusha
mov
push
xorb
mov
jb
push
loopne
pop
es
popa
ljmp
sub
mov
mov
test
inc
cmp
jmp
mov
cmp
pop
ffreep
cmp
jg
mov
push
sbb
fdivl
jb
adc
sbb
fldl
fwait
repz
jno
xor
cli
cmpsl
mov
test
add
cld
fbld
sti
leave
jge
mov
pop
or
sbb
and
or
mov
out
out
test
in
std
dec
in
insb
jno
push
test
rol
scas
aas
and
jns
mov
push
roll
or
and
push
loopne
jo
ror
stos
inc
pop
add
pop
and
mov
jns
mov
out
lret
cmp
daa
and
cmpsb
xor
cs
mov
lahf
pop
clc
imul
and
xor
cli
or
ret
jmp
sub
test
dec
xchg
dec
xchg
out
lods
inc
cmp
xor
ljmp
inc
dec
out
inc
imul
nop
loop
xorb
mov
sub
xchg
push
push
rcr
leave
dec
insl
stc
loope
cmp
jmp
mov
adc
aam
pusha
inc
cmp
pusha
scas
push
xchg
xchg
adcb
adc
pop
shll
leave
std
cmp
or
sbb
arpl
mov
jmp
in
inc
add
pop
xorl
stos
out
push
pop
sbb
sarb
or
mov
insb
jecxz
sbb
xor
stos
andl
gs
aas
mov
jns
and
jge
negb
adc
jmp
cmp
aaa
cmp
in
addr16
jge
cltd
aas
sub
stos
dec
mov
adc
jno
xchg
loopne
push
push
dec
lret
pusha
lea
or
cmp
hlt
fdivs
hlt
cmp
addr16
and
shl
jmp
add
bound
dec
insl
lahf
into
and
lock
popa
sbb
dec
fisttpll
fsub
int
inc
pop
or
mov
inc
roll
mov
or
lret
adc
cmpb
xchg
fisttps
push
scas
test
ss
lcall
lds
push
orl
jae
int
jo
in
in
push
or
iret
imul
lahf
and
repnz
ljmp
movsl
popf
mov
xchg
into
push
pusha
fwait
push
fcoms
sub
lcall
jno
imul
push
adc
cmpsl
sbb
or
lea
adc
dec
fisubrs
out
clc
out
or
les
push
ret
jg
add
sbb
xor
add
or
cmp
sbb
fucomip
xor
mov
xchg
lret
loop
jp
sbb
shrb
add
pop
and
in
xchg
xchg
pop
aam
aam
or
xor
cmp
and
and
sub
jns
mov
dec
enter
jg
jp
pop
sub
jb
ss
in
fninit
pop
xlat
pop
mov
inc
es
sub
out
xchg
into
dec
bound
jmp
xchg
push
push
adc
loop
mov
jle
call
or
jae
sub
scas
cs
mov
cmp
jno
fistps
push
cwtl
xchg
cmp
movsl
sub
inc
push
or
call
pop
push
lcall
nop
pusha
push
push
xlat
lods
add
ja
adc
pop
or
mov
add
adc
xchg
imul
movl
cmp
ret
adc
sub
inc
ret
cmp
pop
xchg
loopne
sbb
pop
pop
or
cmc
push
xchg
lret
movsb
add
addr16
mov
ret
divl
mov
lcall
pop
stc
popa
jge
sbb
test
mov
adc
cmpsb
and
jle
inc
fsts
mov
push
les
popf
mov
out
mov
pop
or
dec
cli
push
add
or
jo
test
pop
out
push
loope
pop
mov
inc
enter
mov
dec
sub
imul
push
inc
xor
iret
pop
fstpt
inc
stos
scas
ficomps
insl
xchg
pop
add
lret
rcrl
fldenv
sbb
mov
jne
mov
out
mov
test
jg
cs
jp
imul
jne
nop
arpl
imul
es
dec
roll
mov
fcomps
xor
pop
inc
jb
mov
mov
or
stos
addl
adc
xchg
jl
or
bound
arpl
xchg
xor
pop
iret
nop
rcrl
or
out
xchg
out
orb
outsl
enter
dec
pop
push
pop
ss
mov
aas
fstpt
popa
dec
push
insl
push
outsl
jecxz
iret
inc
jle
ss
xor
decb
imul
rcrb
adc
and
roll
inc
lcall
pop
push
popf
xor
or
dec
out
push
bound
inc
xor
mov
xor
cmpsl
cli
push
jmp
lock
dec
xchg
adc
emms
and
mov
lea
roll
and
mov
stos
inc
inc
insl
cmp
mov
sbb
lds
aas
ficompl
xchg
mov
sub
andb
mov
jne
cmp
cmp
outsb
fsub
mov
cmp
cmpsb
mov
popf
orl
xchg
dec
test
loop
orl
xchg
mov
jg
dec
pop
add
push
inc
aas
lret
mov
bound
pushf
out
xor
sarb
sbb
adc
mov
stos
xchg
out
ds
mov
sub
sbb
adc
outsb
xchg
sarl
mov
test
cmpsl
lods
fbld
enter
aaa
jbe
xchg
into
pop
ja
mov
sbb
push
ja
push
pop
ds
out
shlb
push
lea
out
cmp
aas
xchg
mov
loopne
dec
cs
inc
xchg
and
push
add
mov
dec
aas
jl
jno
jl
jae
int3
mov
sbb
movsl
test
sub
jnp
dec
or
imul
sbb
ja
xchg
or
aam
inc
or
jl
lea
xchg
xor
popf
jo
dec
pop
xchg
fs
lds
mov
cmp
inc
xchg
sub
pop
ret
inc
push
sub
pop
stos
mov
inc
mov
xchg
out
or
testb
sub
sbb
cmp
rol
out
lds
push
mov
stc
dec
das
sub
pushf
dec
push
lcall
sub
outsb
push
mov
fs
daa
orb
fcmovbe
cmp
ljmp
cmp
in
jb
jbe
adc
xchg
test
xor
adc
mov
stc
out
movsb
loop
lcall
dec
or
dec
and
sbb
xorl
sbb
data16
and
jl
rcl
add
and
push
or
push
jl
lea
inc
xchg
mov
adcl
andl
out
inc
pop
mov
iret
pop
outsl
sub
or
ror
pop
fstpl
pop
std
sub
gs
mov
cld
movsb
aam
out
out
push
pushf
sbb
push
ret
out
rorl
cmp
cmpsb
ret
jo
loop
pop
push
lods
xchg
fwait
jmp
les
dec
int3
push
gs
enter
fwait
int
loopne
sti
push
int3
rcrb
inc
jge
or
jl
fs
jecxz
xorb
inc
mov
jmp
mov
cmpsb
fcomp
repz
cmp
inc
cwtl
fdivrs
test
xchg
test
dec
les
in
xchg
lret
inc
jecxz
sarl
cmp
pop
rorb
imul
cwtl
xchg
sahf
cmp
sbb
addl
popf
in
cmp
xchg
inc
xchg
outsl
data16
das
and
jl
in
jmp
fsubrl
loopne
jmp
sbb
daa
xor
movsb
xchg
inc
cltd
pushf
movsl
add
inc
lahf
jmp
jge
jno
lahf
cmp
out
pop
jno
inc
add
mov
dec
pop
lea
mov
pop
stc
inc
idiv
sub
pusha
mov
cs
jno
imulb
cld
mov
mov
fucom
jp
movsb
daa
inc
sub
cs
lock
aam
push
push
lods
addr16
daa
mov
int3
cmp
fs
sub
adc
gs
aam
test
sub
outsl
in
lea
shrl
cli
mov
mov
sub
dec
xchg
popf
xchg
pop
clc
rorb
std
or
push
sarb
fucomip
sbb
dec
or
testl
sbb
bound
imul
lcall
call
add
test
imul
adc
outsl
sub
mov
stc
orb
out
jne
xchg
and
cld
jl
inc
out
fdivr
mov
pop
xchg
fs
ss
cwtl
popf
adc
xor
aas
rclb
lods
push
xor
in
jo
jg
jge
inc
inc
insl
aam
repz
or
push
and
inc
int
imul
push
hlt
cmpsb
aad
aam
and
loop
cmc
mov
mov
arpl
sub
idivb
cmp
jmp
jmp
jmp
in
mov
mov
sub
stc
mov
ljmp
cli
outsl
pop
dec
mov
xchg
push
scas
subl
push
das
faddp
xchg
pop
aad
lods
jmp
test
jge
xchg
hlt
sti
inc
jp
mov
cli
outsb
frstor
fsubrl
movsl
into
repnz
aam
sbb
jnp
mov
adc
out
mov
jbe
aas
je
ret
mov
fdivrl
pop
xchg
cmc
imul
mov
inc
lcall
js
push
cmp
push
mov
rorl
mov
iret
jge
inc
xor
jne
icebp
jmp
push
mov
cli
xchg
jge
out
mov
push
ret
fsubs
adc
dec
je
mov
aas
cmpsl
mov
dec
add
sarb
xchg
xchg
jg
xchg
push
daa
es
lret
sbb
xchg
bound
mov
ret
sti
rorl
mov
imul
sbb
push
adc
dec
jno
push
jo
ror
inc
je
je
sbb
movsl
inc
insl
mov
shl
push
sub
repz
xchg
adc
std
cmpsb
or
nop
sub
les
xchg
jge
les
lcall
jno
bound
cmc
lahf
mov
in
imulb
out
or
inc
dec
mov
nop
pop
jge
mov
fstps
pop
sbb
sbb
or
push
aaa
fwait
outsl
lahf
or
jae
sub
or
xor
push
inc
lock
mov
and
in
xchg
fistps
jno
sti
sti
inc
mov
sbb
inc
mov
scas
jecxz
aaa
jae
cmp
add
js
popf
lret
sbb
aam
mov
sahf
test
and
daa
dec
add
mov
add
mov
fldenv
xlat
cmp
mov
pop
fists
pop
ret
out
mov
inc
mov
das
sbb
mov
push
dec
clc
sub
mov
das
in
mov
xchg
lock
sbb
mov
test
xchg
aaa
or
pop
jns
fildl
add
push
dec
imul
and
nop
out
lds
fisubl
test
cmp
xchg
adc
ss
mov
enter
decb
jb
movsb
inc
sahf
loope
decl
ss
pop
notb
pushf
lcall
jecxz
scas
xor
sub
les
inc
jb
push
sbb
mov
push
cmp
das
inc
stc
mov
out
xor
das
sbb
repz
jno
pop
aad
dec
inc
scas
rclb
inc
dec
jb
xor
push
lret
inc
ret
adc
mov
push
dec
add
divb
mov
xchg
xchg
sub
bound
int
mov
and
clc
mov
out
sahf
test
fiadds
jno
push
rol
lret
and
xor
push
cmp
stos
es
cmp
adc
flds
sbb
test
sub
jp
and
jns
out
sbb
jbe
and
xchg
testb
adc
jae
rcrl
mov
or
mov
test
out
and
pop
sub
scas
pop
or
add
cwtl
fisttps
iret
imul
out
pop
mov
frstor
outsl
mov
scas
push
and
add
fnstsw
test
fists
lods
mov
cmp
and
adc
jge
fld
or
fwait
xchg
push
mov
ja
lds
sub
aad
push
loopne
jae
jmp
push
sbb
bound
sub
fbstp
push
loop
and
adc
inc
je
pushf
loope
pop
cld
cmp
jno
and
inc
add
or
jmp
or
repz
jnp
adc
in
fwait
cli
mov
jb
mov
fs
popa
ret
pop
pop
jmp
push
data16
mulb
andb
daa
shrl
rcl
daa
push
call
mov
push
or
fucom
gs
testl
gs
pusha
popa
imul
iret
or
movsl
out
jg
fldcw
stos
fisubl
cmp
mov
daa
lea
jl
fstp
sbbl
insb
jae
lods
or
mov
xlat
and
push
out
mov
mov
cld
xor
jg
inc
fldcw
pop
and
out
jo
hlt
dec
int
addr16
adc
cmp
jmp
gs
in
stos
xchg
dec
jnp
xchg
mov
xchg
mov
ret
add
inc
xchg
pop
sub
xchg
mov
fs
xor
mov
je
add
xor
sbb
cld
adc
mov
push
mov
xor
push
adc
outsl
scas
jge
mov
inc
xchg
cmp
jle
mov
loopne
ljmp
inc
and
xchg
mov
ss
enter
pop
cltd
out
shrl
idivb
push
add
mov
movsl
mul
or
popa
jmp
jb
rorl
lock
push
shrl
daa
insl
pop
and
mov
xchg
movsl
ds
jecxz
mov
pop
mov
dec
shl
out
dec
sbb
pop
mov
cmpsb
inc
jl
or
imul
push
bound
mov
inc
mov
push
out
lods
sbb
sbb
scas
mov
sbb
sub
pop
jmp
cwtl
mov
pop
xchg
push
mov
cli
and
mov
push
mov
icebp
xchg
ss
xchg
xor
pop
mov
add
mov
cmpl
pop
sub
fistps
aad
jmp
or
cmp
push
std
inc
loopne
cwtl
jle
or
je
xchg
or
repnz
enter
xchg
sub
sbb
fsub
out
jp
push
dec
push
pop
mov
add
add
or
mov
cmp
pushf
ret
xorl
mov
int
loopne
imul
jno,pn
push
or
mov
pop
or
int3
and
pushf
test
jle
pop
cmp
mov
es
inc
jle
orb
inc
jae
inc
xlat
adc
cwtl
clc
stos
and
push
cmpl
sahf
jno
add
fucomi
jg
push
mov
mov
aad
les
scas
jecxz
insl
insb
lods
test
faddl
sbb
adc
popa
aad
lock
mov
lods
arpl
and
iret
shlb
push
gs
cmc
cltd
xor
jb
test
stc
sub
incb
loopne
mov
cli
cmp
inc
test
fistpl
daa
and
pop
aam
xlat
or
shlb
gs
sahf
cltd
xor
jb
imul
call
lahf
push
shll
outsl
xor
cmp
movsl
mov
pop
lods
gs
or
jo
mov
inc
jns
sbb
pop
or
jae
shrb
push
insl
adc
sti
pop
inc
xor
aaa
sub
cli
mov
lea
and
jmp
xor
inc
dec
sti
ret
jne
pop
lret
sub
lret
push
rcrb
mov
adc
scas
mov
pushf
lahf
shrl
stc
push
loop
jno
inc
mov
in
or
clc
imul
fwait
adc
mov
pop
pushf
cmpsl
xchg
sub
rorb
pop
jnp
adc
sbb
movsl
out
pop
into
mul
lret
into
sub
pop
ret
test
xchg
subb
jg
cmp
push
pop
stos
mov
mov
xor
mov
or
jle
adc
out
loope
mov
jb
call
xlat
xor
sbb
jg
cmc
or
push
xchg
or
aam
fsubl
divl
rol
stc
xchg
inc
fwait
cmp
daa
dec
pushf
mov
sbb
mov
rol
push
test
inc
push
cmpb
cmp
lahf
shl
xchg
mov
inc
dec
sub
repz
dec
loop
mov
push
sti
testl
mov
test
imulb
es
jbe
data16
mov
lahf
stc
int
enter
dec
es
test
pop
roll
xchg
lods
aas
dec
cmpsl
push
sbbb
aaa
daa
mov
dec
inc
sarl
mov
xchg
aam
jg
push
mov
pushf
in
in
cmpb
mov
jbe
xor
xor
push
pop
mov
int
pushf
xor
cmpsb
xchg
fdivl
sti
popf
mov
dec
push
fwait
sbb
xor
call
js
subl
incb
xor
js
inc
rorb
test
jbe
sbb
lods
int
sub
ljmp
push
scas
int
jnp
sarb
rcrb
stos
xchg
and
insb
xor
jle
lcall
inc
mov
add
icebp
fs
jmp
insb
add
fnstenv
pop
cmpl
adcl
dec
rorb
push
xchg
dec
test
mov
sti
std
dec
lock
jle
inc
push
inc
mov
out
jmp
inc
inc
es
sbb
pop
or
call
mov
mov
cmpb
test
add
roll
adc
inc
cmp
and
icebp
push
jg
hlt
xchg
inc
ret
inc
into
mov
insl
ja
mov
sub
cltd
push
add
sbb
ds
shll
icebp
into
in
out
adc
fisubrs
fsubrl
xor
mov
mulb
out
mov
orb
cli
push
xchg
xor
test
and
in
iret
clc
and
int3
push
mov
pop
xor
xor
lock
mov
mov
cmpl
and
lods
cmc
and
mov
addr16
sti
jbe
inc
mov
fldcw
shr
xor
fwait
lods
mov
push
call
and
lods
insb
aaa
dec
add
add
pop
rcl
mov
pop
jnp
lcall
or
je
ret
aam
mov
and
insb
idivl
sbb
sub
fs
ljmp
mov
test
jecxz
cmpsb
adc
dec
sahf
mov
sbb
bound
cld
aam
std
xor
push
adc
into
sahf
iret
inc
js
lds
ret
ljmp
popa
dec
mov
and
iret
mov
xchg
pavgw
aam
in
bound
sbb
stc
std
inc
jecxz
lcall
sub
mov
sahf
dec
push
mov
jle
jns
inc
lcall
mov
push
mov
idivb
jmp
dec
pop
fwait
jne
sbb
outsb
rdtsc
sarb
xorb
cmp
or
int
stos
test
sbb
mov
add
ret
imul
mov
and
imul
aam
xor
out
in
in
daa
push
popa
dec
aam
clc
inc
loopne
push
insb
sbb
pop
xor
hlt
pop
jnp
pop
lret
xor
nop
jp
pop
mov
inc
iret
cmp
jmp
inc
nop
shr
xchg
outsl
insl
sbb
push
or
in
cmpsb
sbb
or
mov
mov
test
xchg
dec
mov
iret
lahf
jo
scas
or
cmc
ret
cld
int
mov
fisttps
jp
pop
push
outsl
std
xchg
cmp
pop
or
dec
mov
mov
cmp
call
leave
popf
jns
inc
popl
out
pop
test
mov
inc
or
jl
push
adc
std
xor
pop
xor
dec
sbb
adc
lods
push
cmp
jne
sub
lret
test
pop
mov
mov
icebp
inc
mov
call
cld
xchg
sub
jmp
xor
pop
mov
mov
add
adc
mov
fcompl
cmp
sub
rcrl
test
mov
negb
int3
mov
mov
gs
adc
push
dec
out
pushf
aad
cmp
mov
das
shl
rorb
cmp
mov
or
repnz
pop
stc
jne
sti
movsb
or
inc
dec
jmp
jecxz
mov
test
sahf
mov
ret
mov
or
test
fcoms
push
roll
sbb
xor
outsl
popa
movsl
sti
mov
xlat
and
in
push
mov
testl
and
inc
pop
fwait
loope
out
cmp
sbb
scas
mov
and
cltd
es
push
sub
sahf
mov
adc
sbb
mov
inc
pop
les
adc
push
add
sub
sub
inc
and
pop
scas
mov
rcl
out
push
stc
cmpsb
lea
push
sub
jl
xchg
sbb
andb
pop
xchg
out
aaa
test
jle
addl
imul
cs
popa
loop
aaa
mov
insb
enter
aad
mov
insl
sbb
pop
mov
dec
lods
out
lds
sbb
pusha
mov
jno
and
mov
data16
or
imulb
push
mov
push
mov
dec
daa
dec
imull
or
movsb
rclb
cmpsb
aaa
bound
xor
or
xor
lods
adc
pop
loope
imul
je
jnp
aam
jae
test
push
ss
xor
sbb
dec
mov
cmp
push
bound
adcb
out
cltd
outsl
ja
scas
jge
jb
addr16
mov
cmpsl
sti
cli
scas
es
pop
arpl
lahf
and
testb
push
mov
mov
mov
inc
push
fdivrl
scas
lds
sbb
aam
repnz
push
pop
lods
cmc
jne
cltd
xor
rcrw
dec
add
bnd
aam
stc
mov
jbe
cmp
xor
aaa
lock
push
jg
je
and
or
inc
pushf
or
and
sahf
and
arpl
mov
setp
fimuls
adc
loopne
mov
test
jg
movsl
cmp
push
lret
popa
pop
xchg
add
ljmp
push
out
cltd
xchg
push
push
das
aam
call
bndstx
mov
leave
stc
sbb
mov
jb
rcrb
pusha
push
pop
nop
sarl
and
enter
aas
cwtl
or
fbstp
mov
jle
loope
rclb
xchg
fstl
scas
in
adc
jbe
jp
test
data16
cmpsl
lock
add
stc
mov
lret
in
cmpsl
push
xor
les
jl
fs
mov
mov
xchg
adc
or
mov
mov
adc
xor
inc
sub
and
mov
test
mov
call
sti
mov
test
pop
adc
pop
cmc
jmp
push
dec
push
adcb
sub
movsb
jns
xchg
mov
xor
jecxz
or
clc
sti
or
sti
mov
add
xchg
push
or
xlat
hlt
ss
sbb
sbb
mov
and
cs
xchg
adc
shlb
mov
dec
mov
and
aam
inc
fcompl
xlat
mov
cmpsb
ficomps
mov
mov
loop
inc
div
repz
loopne
repz
cwtl
mov
insl
popf
inc
xor
loopne
popf
arpl
imul
popf
and
jecxz
hlt
dec
scas
dec
test
dec
fcmovu
addr16
jnp
fwait
add
add
sub
aad
push
push
adc
dec
xor
fistl
imul
jle
xor
adc
mov
scas
cld
ret
push
pop
and
and
push
scas
stc
mov
stc
cmpsb
mov
adc
inc
or
cltd
icebp
das
je
xor
jae
pop
dec
adc
xchg
mov
inc
xchg
mov
ja
jo
add
outsb
out
bound
repz
imul
add
incl
js
sub
mov
and
push
adc
out
ljmp
sbb
push
loop
adc
cmpsl
push
sbbb
xlat
sbb
mov
jbe
outsb
out
sub
mov
rol
ret
xor
fmull
pushf
insb
and
outsb
leave
and
test
bound
scas
mov
aaa
pushf
push
sbb
or
ds
inc
inc
pop
push
movsb
fstl
adc
into
aas
and
and
xchg
push
push
xor
push
insl
in
xchg
push
xlat
pop
jmp
icebp
sbb
in
mov
mov
push
cltd
dec
add
xchg
call
fisttps
cli
mov
add
add
and
push
dec
cmp
arpl
push
pop
cli
fbld
sub
dec
test
push
pop
sbb
pop
mov
sahf
mov
iret
sbb
mov
popf
addb
das
inc
lcall
enter
add
jmp
push
popa
je
decl
push
xchg
sub
leave
cmp
arpl
push
lock
sti
inc
cmpsb
xchg
xchg
movsb
xchg
enter
dec
xlat
dec
dec
adc
and
jne
push
jmp
pop
push
je
and
test
movl
jle
pop
mov
ljmp
jno
sbb
and
sub
cmp
push
mov
jecxz
or
inc
subb
push
dec
stos
mov
mov
mov
mov
sarl
cmp
ja
aam
jne
or
popf
mov
rclb
js
fldt
nop
pop
adc
xchg
lcall
int
xchg
inc
loop
adc
or
or
in
sub
es
sbb
out
jne
xor
ret
in
adc
in
test
inc
iret
mov
mov
les
mov
jmp
mov
lock
sub
inc
cmpl
push
ds
lods
add
xchg
insl
pusha
dec
mov
sub
dec
fnsave
rclb
mov
popf
clc
push
sbb
push
mov
pop
mov
movb
loopne
jp,pt
pop
add
dec
outsb
insb
std
xchg
in
into
daa
out
lcall
ficomps
cmpsb
cli
push
push
cwtl
jecxz
fisttps
div
nop
mov
jg
adc
lock
add
cwtl
adc
adc
jmp
int
xor
imul
cmp
rep
pop
not
in
imul
xlat
sub
mov
xchg
ror
aaa
push
cs
inc
loopne
dec
push
dec
ds
in
cli
stc
adc
xchg
mov
loopne
jbe
jno
add
cmp
xor
mull
mov
or
cmpsb
pop
mov
imul
or
add
sub
xchg
mov
xchg
fistpl
push
cmp
dec
lea
cltd
xchg
mov
test
cmpb
jp
or
xor
mov
lret
pop
int3
fstpt
xor
push
daa
cltd
aas
push
in
movsl
inc
ret
jmp
sahf
xchg
insb
fucomip
and
jmp
xlat
jmp
mov
hlt
mov
cld
fprem1
lcall
mov
mov
and
enter
pushf
xchg
pop
test
negb
cwtl
mov
push
sbb
in
push
call
test
lret
jno
testl
push
in
cmpsl
fsubp
push
mov
clc
xor
adc
jle
loopne
sub
pop
stc
add
notl
inc
xchg
loopne
mov
jno
adc
xlat
lcall
insb
pop
add
lock
inc
imul
add
and
dec
dec
cld
icebp
adc
pop
movsb
pop
mov
aaa
mov
decb
cmp
push
js
scas
call
adc
adc
jb
xchg
xchg
inc
xor
dec
add
loopne
filds
cwtl
cmpl
jle
in
mov
sub
jns
adc
sbb
xchg
fistl
in
mov
add
jecxz
xor
mov
cmp
xor
xchg
sub
pusha
sub
jg
js
xchg
jmp
int
xchg
xor
das
inc
cs
xor
mov
js
jg
ret
mov
int3
fs
sub
fs
or
aam
js
shrb
and
mov
aad
xchg
mov
orl
mov
mov
lods
aam
jecxz
inc
jo
sub
popa
sti
gs
jecxz
jp
leave
pushf
push
mov
jge
fildll
roll
xchg
pop
pextrw
push
sub
data16
in
mov
dec
out
adc
shufps
jp
xchg
divb
out
dec
repnz
stos
mov
dec
or
dec
int3
jb
cmp
into
inc
call
or
xchg
sete
xchg
call
xchg
and
mov
mov
add
sbb
sub
cmpsb
mov
xchg
cmp
pushf
clc
pop
sbb
cmp
mov
pushf
hlt
xor
inc
out
cs
outsl
aas
jno
push
aaa
cs
jb
mov
cs
sbb
sbb
pop
je
lcall
and
ret
les
in
outsl
push
and
test
mov
lods
out
shlb
pushf
stos
dec
imul
fsts
jb
div
mov
stc
adc
push
aaa
clc
mov
mov
ret
loop
int3
stos
jmp
adc
mov
xchg
dec
inc
push
and
or
lret
int3
out
push
lahf
and
inc
pop
xor
roll
or
int3
cmpl
test
pop
jb
mov
pusha
pause
inc
jmp
sub
mov
cli
pop
stos
push
rcr
arpl
loop
or
pop
jp
in
or
bswap
push
loop
mov
push
adc
fisubrl
sbb
adc
push
push
jle
jne
push
nop
push
dec
repz
into
sbb
adc
cmp
sti
mov
mov
push
shll
lock
mov
sub
in
gs
push
mov
daa
add
stc
sub
loopne
push
mov
cld
pop
loop
in
sub
inc
call
fdivrs
frstor
call
inc
in
push
out
and
xor
inc
dec
xchg
and
jle
cmp
outsb
jbe
xchg
in
pop
decl
or
imul
addl
fwait
mov
lahf
and
lods
int
sbb
iret
andb
imul
push
cs
pop
mov
push
cmp
mov
xor
xor
popf
lret
inc
xchg
daa
int3
jecxz
jae
or
or
xchg
pop
jp
ljmp
test
mov
rcr
jno
outsb
push
jne
adc
push
sbb
lds
cmp
cmc
xchg
shll
aad
and
push
in
es
lret
inc
dec
push
cltd
xchg
fldenv
push
negl
adc
cmp
mov
xchg
cwtl
push
test
addr16
cmpsb
in
mov
cmp
pop
roll
inc
cmpl
jp
mov
jle
pop
pop
jg
popf
lods
cmc
jge
sahf
pop
and
pushf
lods
pop
push
mov
or
dec
push
inc
cmp
pop
push
pop
or
flds
mov
mov
push
and
cmp
hlt
fidivrs
push
xor
out
push
lock
out
popl
in
add
in
and
pop
iret
scas
into
jmp
sbb
mov
adc
or
jo
das
leave
inc
mov
in
lods
xchg
mov
cmc
js
and
mov
push
shrb
xchg
ficomps
movsl
dec
cmc
sahf
cmp
xor
in
sub
mov
outsl
xchg
dec
imul
lcall
das
scas
add
xchg
std
cmp
push
xlat
pusha
repz
insb
dec
dec
pop
loopne
sbb
jns
mov
jecxz
mov
aaa
fimuls
cmpl
shl
mov
adc
cmp
hlt
push
sbb
std
mov
bound
jge
sub
lret
push
add
test
pusha
insl
push
adc
push
push
xor
icebp
adc
and
cmp
push
sbb
sub
jecxz
imul
sarb
mov
sbb
xorl
and
xchg
andb
jo
ret
fdivrl
inc
mov
cmpsb
mov
and
popf
mov
mov
imul
push
push
shll
cmp
test
or
mov
fidivs
jecxz
pop
pusha
push
in
test
imul
push
fbld
mov
in
add
adc
iret
dec
add
push
sahf
addl
jne
mov
fdivs
cmp
sahf
jle
xchg
aad
test
push
dec
pop
mov
sbb
push
jo
loop
push
fiaddl
sbb
fdiv
fistpl
fs
iret
push
sbb
xor
lahf
es
mov
sub
push
cmp
pop
sahf
test
cmpsb
push
jecxz
fwait
jns
push
aaa
icebp
add
inc
inc
pop
add
and
xchg
aam
out
and
jge
jo
ljmp
shlb
or
jnp
mov
jmp
pop
or
popf
cmp
push
aam
mov
push
inc
icebp
cmp
mov
jnp
and
or
sar
mov
lods
aad
fbld
std
out
lret
mov
test
add
sub
aas
leave
xor
cwtl
frstor
test
clc
addr16
sub
adc
fisubl
push
pop
cmp
lock
imul
shlb
call
fisubs
inc
cmpsl
test
loopne
lods
daa
inc
cmp
mov
mov
out
mov
jne
mov
xor
jb
cmc
or
add
inc
cmp
lahf
rol
int3
test
je
test
lret
inc
push
push
rcrl
adc
push
aam
cmpl
inc
mov
jb
in
es
sub
lret
mov
jmp
in
sahf
loopne
out
add
xchg
xlat
rol
jo
popf
lcall
mov
call
cmc
xor
insb
dec
cmp
xorl
shl
sub
mov
int3
imul
xor
icebp
xor
jo
andb
je
int3
pop
mov
in
pop
cmp
push
insl
push
push
pop
mov
data16
adc
inc
repz
push
bound
fstpt
mov
xor
mov
sub
or
shll
test
daa
mov
shl
push
js
ret
mov
dec
adc
jmp
xor
insl
or
mov
sub
das
or
fcmovbe
mov
paddd
int3
lcall
das
adc
xchg
inc
add
jae
jb
je
cmp
mov
adc
xorl
imul
sbbb
arpl
sub
xorb
mov
or
andb
mov
movl
push
pushf
test
add
testl
cs
ja
xchg
js
adc
test
pop
int3
xchg
jmp
shrb
or
andb
aam
jg
lea
push
daa
mov
repz
inc
jg
jbe
mov
jecxz
inc
sub
mov
jle
cmpsb
in
cltd
push
daa
pop
xor
cmp
jp
cmp
sub
xor
cmpb
frstor
leave
pop
popf
sbbl
cmp
mov
or
jge
inc
notl
es
lods
jp
jecxz
adc
add
fwait
xchg
pop
clc
jne
inc
imul
cmpsl
popf
mov
mov
jge
push
lret
sarb
lcall
sbb
add
jge
pop
es
xor
dec
out
inc
xchg
cmp
call
clc
pusha
cmp
lds
test
inc
mov
rol
inc
sub
orb
fbstp
mov
and
mov
mov
jns
insl
push
push
push
dec
mov
shlb
in
mov
in
shl
jp
xorb
sbb
test
push
mov
push
rcrb
push
cld
pop
fsin
dec
xor
lahf
sbb
inc
mov
dec
fists
xor
movsb
lcall
xchg
mov
ljmp
mov
dec
or
pop
cmp
int
ret
xor
int3
stc
lahf
shrl
sbb
and
cmp
ljmp
mov
pop
scas
cmc
inc
or
pushf
pop
jle
rcrl
lcall
rclb
shll
in
les
dec
insb
cld
push
mov
dec
or
add
sbb
rcll
or
mov
jne
in
mov
stos
mov
cs
cmp
fs
orb
cmp
lods
xor
aaa
or
fstpt
xor
xchg
push
mov
fsubs
cmp
pop
stos
icebp
push
pop
mov
inc
fimuls
xor
pop
or
stos
std
aam
xchg
lock
cmc
sub
cmp
fistpl
insl
sahf
xor
mov
fsts
shll
in
xor
xor
and
jo
push
sbb
xchg
xchg
inc
addl
dec
xchg
dec
sub
in
jg
jmp
mov
lods
push
pop
push
xor
jb
aas
push
push
subl
imul
fcmovu
pop
pop
loopne
sub
mov
mov
xor
or
ret
pop
add
dec
out
add
pop
xlat
loop
inc
and
push
inc
dec
out
das
je
push
pop
stos
sbb
insl
je
sub
loop
imul
xor
sbb
jbe
leave
sbb
lahf
out
mov
or
or
adc
sti
mov
into
push
scas
ja
xchg
addr16
imul
xor
imul
out
lods
push
pop
mov
insl
addb
adc
dec
dec
int
cltd
add
cmpsb
pop
xor
movb
mov
mov
adc
loopne
pop
xor
adc
pop
and
shll
in
insb
pop
xchg
cmpsl
dec
xlat
mov
jge
rcrl
cmp
lods
outsl
dec
sarl
rcll
sub
push
sahf
stos
scas
outsl
movsb
out
adc
inc
xchg
lods
jmp
icebp
test
mov
sbb
stos
pop
pusha
int
ljmp
adc
repz
push
stos
cli
xorl
subl
sub
jp
and
ret
test
pop
xchg
fsubrl
xor
cmp
call
cmp
jge
movsl
inc
fwait
out
sti
xchg
rcll
push
pop
int
insl
lret
adc
xor
sub
xchg
cmp
jmp
mov
fs
cmc
lret
or
cmp
jl
insb
mov
sar
stc
jb
in
hlt
mov
insb
fnsave
xchg
faddl
adc
daa
lds
sub
pusha
shrb
insb
push
jecxz
testl
pop
jae
mov
test
fisubs
clc
mov
fists
xor
enter
xor
test
sub
imul
loope
mov
add
push
fwait
xor
mov
outsl
clc
cmp
in
inc
aas
mov
stos
fcom
mov
test
adc
cmp
dec
jbe
pusha
jp
push
jae
cmp
scas
arpl
test
imul
adc
mov
stos
fsub
inc
inc
push
ja
push
sahf
xchg
mov
in
cwtl
ds
out
and
pop
enter
and
lret
scas
xchg
leave
jbe
cld
add
push
lea
jmp
shlb
loope
call
das
idivb
jae
jp
xchg
xorb
inc
or
mov
popfw
sbbb
cmp
shrl
in
mov
add
cmp
movb
test
pop
lock
pop
inc
jle
stc
or
mov
dec
mov
add
jl
stos
pop
dec
insb
pop
jo
cltd
gs
xchg
enter
in
shll
xor
jmp
xor
cmp
jge,pt
dec
movsb
lret
mov
inc
sbb
ljmp
ja
rcll
ja
test
mov
or
testl
negb
imul
paddb
lods
pop
and
out
cmp
sub
pop
cmpsl
adc
imul
xchg
sbb
and
lds
and
jle
cmc
add
and
cmp
jnp
shlb
jnp
adc
inc
sub
add
shlb
or
out
sbbb
xchg
loopne
fcompl
mov
sbb
popf
inc
daa
les
cmp
hlt
into
add
fisubrs
sbb
inc
repnz
int
mov
jns
imul
pop
insl
xchg
mov
sbbb
cmpsl
add
inc
lock
lret
in
idivb
cmp
movsb
lods
imul
inc
and
and
call
cmp
shlb
sbb
sbb
fstl
xchg
jne
pop
popa
sbb
lea
jp
jno
sub
stc
cmp
cmp
sub
xor
or
loope
push
in
and
push
int
or
cmp
xchg
xchg
lea
shrb
mov
adc
mov
subb
sti
push
sbb
lcall
cmpl
mov
sbb
test
xor
popf
mov
xor
lods
inc
adc
insl
jo
jo
dec
lods
cmp
insl
movsl
pop
testl
ljmp
shl
lods
sub
ficoml
push
jns
rorl
add
test
int
mov
es
ret
jno
jnp
enter
imul
inc
xchg
mov
mov
mov
xor
and
or
popa
xor
jbe
loopne
sub
shll
nop
out
movsb
test
push
mov
mov
mov
fcompl
lahf
les
hlt
inc
add
pop
js
pop
xor
ljmp
loope
data16
xchg
sub
pop
ja
dec
xchg
loope
test
int
lcall
push
push
fsubl
mov
jmp
mov
cmp
mov
mov
popa
inc
jnp
cmp
imull
mov
mov
mov
inc
jle
pushf
std
std
cld
xchg
ss
push
cli
and
pop
loop
cmp
and
leave
adc
cltd
or
pop
jg
adc
fs
ret
mov
in
incl
xor
dec
mov
std
out
test
mov
inc
xchg
sbb
xor
sahf
jae
mov
dec
js
dec
dec
cli
push
jl
add
cmp
mov
jnp
mov
add
sbb
sbbl
mov
push
lahf
out
iret
xchg
jmp
pop
dec
jecxz
insl
mov
mov
pop
inc
add
cmc
jb
test
cmp
cwtl
movsb
sub
cld
fistpl
mov
fwait
les
xor
fnsave
xchg
in
or
std
lret
sub
and
push
add
scas
cmp
out
out
add
ret
call
xchg
lea
mov
lcall
adc
jecxz
rorl
scas
testb
sti
mov
sar
in
inc
or
out
jp
or
into
xchg
dec
sbb
xor
scas
sbb
xor
mov
inc
leave
inc
ficomps
into
and
add
scas
inc
jmp
jns
jle
call
or
clc
js
xor
jns
mov
outsb
pushf
test
sub
add
pop
lods
pushf
js
leave
inc
imul
in
mov
mov
mov
in
mov
sbb
test
out
lods
scas
and
addr16
sub
popl
sub
mov
mov
and
add
fisubs
adc
in
pop
int
xor
ds
outsb
out
or
jl
lahf
pop
insb
pop
dec
clc
into
xorl
ret
into
add
in
push
inc
shlb
enter
xchg
push
cli
stos
dec
scas
xchg
test
test
sub
and
loope
stos
adc
stc
mov
lret
mov
lea
jb
movsb
sub
in
dec
int3
es
cwtl
inc
push
negb
sub
lret
pop
shrl
loopne
mov
aam
cmp
mov
or
lret
sub
jne
mov
xchg
cld
gs
push
cmp
imul
and
repz
test
pop
mov
leave
jle
out
add
mov
push
push
fstpt
lock
in
sub
sub
insl
push
clc
fcmovne
or
and
xor
negl
mov
inc
dec
mov
sub
lret
std
ss
mov
testl
pop
add
dec
scas
push
mov
int3
ljmp
sbb
dec
jae
jle
xchg
xchg
fdivl
repz
pop
jne
pusha
adc
lods
add
packssdw
test
mov
xor
mov
mov
mov
pusha
pop
in
ja
loop
cmpsl
sbb
in
xor
mov
xchg
pop
dec
icebp
pop
out
cmc
cmp
and
les
cmp
mov
xchg
movsb
lcall
mov
js
sbb
ja
sub
pop
mov
cmp
loope
jnp
ljmp
pop
rcll
fidivs
push
pop
cli
mov
jnp
fdivrl
push
xchg
imul
cmp
ss
mov
and
les
setle
sahf
and
gs
or
idiv
adc
dec
cli
inc
jb
xor
push
adc
je
stos
pop
sbb
lods
inc
dec
xchg
lds
cld
push
mov
arpl
pop
dec
mov
mov
ljmp
and
and
push
jne
mov
mov
xchg
pop
mov
idivb
mov
mov
inc
divb
pop
out
xchg
adc
xchg
call
xchg
fwait
inc
test
mov
testb
push
cmpsb
insb
cld
cmp
jb
nop
cltd
push
lods
pop
and
mov
dec
pushl
outsb
iret
or
insb
mov
push
ds
xor
jl
sti
hlt
int
dec
dec
dec
mov
lds
push
sbb
pop
add
mov
sti
rcrb
sbb
fisubl
leave
xor
scas
ja
xchg
jl
outsb
add
xchg
addr16
lcall
imul
xchg
xor
loopne
mov
adc
iret
cmp
inc
pop
scas
xlat
insb
sbb
stc
inc
jo
arpl
mov
pop
sahf
hlt
nop
xor
sub
xor
pop
pop
out
xor
cmp
in
enter
shr
je
les
jnp
xor
jp
and
pop
xor
or
decb
sbb
dec
cmp
adc
adc
in
ret
divb
sqrtps
movsb
mov
dec
enter
sub
clc
int3
mov
or
adc
jno
fnsave
vpshufd
loopne
inc
daa
outsb
aas
sub
or
out
movsl
mov
mov
es
das
and
xchg
and
cltd
arpl
or
xchg
js
cld
jecxz
fstp
or
aaa
xor
or
pushf
jno
sub
jmp
xor
into
lret
mov
roll
dec
movsb
cltd
cltd
pop
arpl
in
imul
pop
cmpsl
clc
mov
push
push
scas
ror
push
fildll
scas
sbbb
lods
mov
sahf
je
ds
xor
adc
xchg
or
aad
inc
lods
ret
scas
out
jg
je
cmp
jecxz
lahf
and
rcll
cwtl
or
pop
lret
in
aam
mov
lret
pop
jl
loopne
or
hlt
or
jno
jne
fsts
mov
mov
leave
adcb
jmp
mov
xlat
popa
sbb
sub
pop
rolb
and
jb
fs
filds
jmp
outsb
cmp
xchg
mov
push
sbb
pop
pop
inc
bound
and
adc
mov
cld
xchg
mov
cltd
mov
rcr
shll
adc
pop
xor
xchg
add
cmpsb
pop
faddl
sub
fcoms
dec
in
adc
push
cs
pop
inc
dec
push
add
and
ds
pop
mov
add
ja
pop
push
jbe
inc
mov
stos
bound
fisubs
sbb
mov
adc
push
sbb
push
enter
cmpsl
pusha
cmp
mov
call
xchg
pop
ret
xrelease
dec
push
pop
lea
sub
lret
inc
cmpsb
jecxz
pusha
insl
sbb
popf
inc
popa
cmpsl
mov
jae
mov
mov
mov
cmpb
pop
cmp
lods
aam
pop
mov
mov
mov
xchg
sub
jno
rorb
js
icebp
outsl
mov
mov
ljmp
in
int3
ret
and
mov
push
push
add
cld
cltd
movsb
push
xchg
ljmp
dec
push
nop
fidivrl
addr16
mov
inc
testb
jl
jge
scas
cld
lret
adc
rcrb
cmc
sbb
mov
fildll
stc
movsb
pop
ud2
push
mov
out
or
out
pop
sub
mov
sub
mov
sbb
mov
or
jns
fnstenv
pop
dec
mov
lret
aam
pop
lret
stos
mov
cmpl
inc
test
or
sbb
jae
pop
inc
jne
negb
jle
je
pop
call
pop
jns
movsb
push
or
je
pop
sbb
outsb
push
popa
aad
inc
icebp
mov
or
jb
lcall
int3
mov
outsl
lea
jle
outsl
incb
jnp
orb
push
cmp
xchg
std
test
in
aad
out
mov
js
imul
jb
test
aam
xlat
mov
xor
cmpsb
add
rcll
push
pop
push
lahf
imul
push
cmp
ss
cmp
icebp
add
outsl
dec
popa
inc
cmp
inc
int
adc
pop
push
ret
xchg
popa
incl
cmp
xchg
xor
sti
int3
and
jmp
jmp
loope
dec
add
andb
xorb
mov
add
out
leave
leave
adc
iret
jo
in
popa
test
cmpsl
pop
stos
dec
popf
aas
dec
xchg
sbb
adc
dec
fwait
cld
mov
lcall
lret
dec
lret
ficoml
xor
pusha
lea
dec
and
mov
not
xor
loope
iret
xlat
dec
push
push
push
cmpsl
jns
xchg
sbb
jle
inc
sub
movsb
mov
mov
dec
jne
mov
jbe
lret
xchg
out
daa
push
aam
into
pushf
shrl
dec
pop
mov
mov
sarb
cli
xchg
lods
fwait
rolb
movsb
mov
mov
insl
pop
lahf
neg
sub
out
out
mov
or
pop
jmp
lock
fsubl
push
adc
sub
sbb
inc
inc
jmp
arpl
andl
aad
pusha
cmp
mov
and
inc
lods
dec
push
mov
jp
ljmp
adcl
lcall
fstpt
push
xchg
lcall
ljmp
int
insl
inc
sub
clc
sub
add
or
outsl
inc
add
rcrb
push
inc
pop
int3
sub
int3
mov
in
xor
xchg
pop
std
jg
add
xchg
repz
add
mov
xor
pop
add
and
addr16
adc
jge
xchg
and
xor
out
orb
in
pop
insb
sbb
or
test
mov
rcrb
inc
and
pop
pop
ret
add
and
and
mov
mov
test
pop
and
out
pop
xchg
scas
push
pusha
xlat
scas
and
mov
sbb
sbb
pop
xor
ret
pop
ret
movsb
arpl
stos
push
xor
ret
add
lock
mov
xchg
add
test
leave
std
out
cli
push
push
aad
adc
fisttpl
and
pop
inc
cmp
in
out
cmc
cwtl
out
jno
pop
add
int3
xor
in
mov
adc
xchg
and
out
in
xchg
cmp
push
jl
jmp
or
mov
ret
add
cmp
or
add
jo
icebp
or
push
ja
mov
jge
mov
xlat
pop
out
fs
inc
sub
push
dec
shrb
movsl
rcl
xor
cmpb
bnd
mov
movsb
xchg
mov
mov
dec
into
ds
jle,pn
mov
leave
push
mov
pop
or
and
mov
mov
iret
sbb
mov
lds
btc
or
and
push
aas
insb
cwtl
pop
dec
xor
xor
insb
into
mov
push
jbe
and
mov
test
popa
ror
data16
mov
mov
mov
mov
mov
inc
in
xchg
aaa
cmp
lods
xor
or
lods
sbb
out
sbb
pop
outsb
addr16
aas
mov
xor
push
clc
mov
push
pop
sbb
dec
leave
mov
dec
aad
hlt
adc
fs
dec
gs
xorb
sub
out
add
or
cmp
pop
adc
rorb
mov
push
fmuls
sti
dec
sub
adc
je
pop
loopne
jae
dec
js
push
fldl
int3
icebp
sbb
cmpsl
adc
push
cmpl
clc
or
xor
add
loopne
shlb
xor
pop
adc
aas
xchg
gs
add
fstl
out
dec
in
sbb
pushf
adc
subl
or
data16
adc
cli
lcall
rol
addr16
ret
test
loop
pop
stos
int
mov
sbb
dec
andl
add
inc
daa
jb
pop
xor
mov
sbb
mov
pop
push
cmp
pop
dec
movsb
mov
js
jge
mov
sbb
mov
mov
test
sbb
dec
int3
daa
pop
addb
gs
ja
jnp
or
dec
jl
jge
or
add
int
inc
dec
leave
pop
rorb
and
xchg
add
jg
and
aad
outsl
dec
in
cwtl
push
or
xchg
mov
xchg
inc
jns
leave
sub
add
pop
hlt
loop
cmp
mov
ret
sub
lea
pusha
andb
loopne
lahf
rclb
cmpsb
xchg
jecxz
scas
in
sbb
push
xchg
inc
jne
xchg
cwtl
cli
xor
outsb
aaa
mov
in
sar
repz
lods
cmp
jo
and
je
int3
mov
sub
out
mov
rclb
mull
mov
xchg
daa
popf
cld
dec
push
sub
loop
call
scas
insl
mov
xchg
shll
fsubrl
popf
nop
xchg
iret
loop
in
icebp
fnstsw
xor
xchg
mov
sti
gs
push
add
prefetcht0
add
call
jg
xor
push
push
xor
cmp
test
dec
out
push
jno
push
pushf
dec
js
sub
mov
out
fdivrl
popa
je
stos
mov
mov
dec
sub
adc
fbstp
int
jg
xorb
adc
mov
xor
push
cmp
pop
fwait
mov
mov
icebp
stc
xor
repnz
lods
daa
mov
mov
or
int
cmp
mov
add
mov
insl
dec
push
pop
pop
push
mov
xor
push
loope
test
lret
jl
or
add
insl
sub
push
mov
pusha
dec
jb
jmp
lret
cmpsl
jne
arpl
data16
stos
dec
dec
adc
dec
add
leave
push
adc
ja,pt
inc
inc
mov
loopne
and
std
adc
out
std
and
jp
adc
insl
scas
iret
data16
adc
xor
leave
pushw
sub
xchg
jmp
pop
xchg
pop
rcrl
ja
lahf
adc
mov
jns
jnp
jmp
jmp
cmp
sahf
push
sbb
jnp
sub
cmp
divl
cltd
xorl
in
ret
sahf
cmp
xchg
sub
ja
addl
cmp
pop
icebp
push
inc
into
xchg
stc
cmp
push
es
les
fcmovne
cmpsl
push
repnz
jmp
stos
jo
nop
adc
mulb
iret
cli
aad
xchg
mov
and
fcompl
sbb
outsl
and
xchg
mov
inc
xor
stos
push
xchg
xor
cld
and
insl
pop
inc
nop
aam
dec
icebp
mov
push
pop
je
lcall
fmul
out
mov
sbb
lcall
pmaddwd
int
sbb
mov
aas
and
xchg
mov
fisubs
mov
icebp
ds
cmp
les
adc
int
lods
add
pop
mov
xchg
test
pop
jg
sbb
sbb
push
outsb
popf
sahf
dec
mov
imul
or
ds
out
sub
stos
fsubl
mov
fwait
pop
mov
lcall
sub
pop
pop
data16
into
push
sub
jno
icebp
int
add
in
imul
int3
cltd
jnp
shlb
inc
insl
cs
cltd
loope
loopne
sbb
jo
xchg
imul
mov
sub
dec
push
lods
pop
inc
xchg
jmp
je
cwtl
aaa
xor
leave
jecxz
jae
jnp
jns
insl
push
inc
movsb
leave
xchg
mov
leave
cmpsl
mov
aaa
jno
lahf
adc
sarl
movsl
sub
cmc
push
gs
sbb
sub
fstpl
aaa
inc
push
lret
mov
sti
movsl
cs
sbb
ljmp
repnz
rorb
aas
scas
pop
mov
cmp
cs
inc
int3
ffreep
test
xchg
xor
shrb
nop
xchg
ss
popf
fwait
iret
arpl
jnp
ja
cmpsb
mov
ljmp
jno
movsb
xchg
adc
and
fs
dec
or
movsb
in
lret
dec
loope
stos
enter
sub
pop
out
imul
out
adc
aas
inc
daa
std
pop
repnz
lock
rcl
or
fs
out
ds
xor
lds
jae
xchg
pushf
stos
xchg
std
or
fwait
mov
jmp
daa
nop
add
cmpsb
xor
mov
stos
cmpsl
mov
andps
pushf
inc
xor
pop
mov
xorl
loop
pop
sbb
les
das
xor
aad
mov
inc
testb
clc
sbb
jmp
sub
cmp
int
dec
sub
sub
xor
lods
cli
les
mov
addr16
aas
negl
jb
jl
pushl
leave
stc
push
mov
daa
ffreep
mov
loopne
cwtl
push
lret
arpl
in
insb
xchg
rolb
sub
mov
and
mov
inc
or
popa
popa
loopne
pop
jns
xchg
aaa
sti
clc
call
bound
shlb
jle
jl
and
scas
fwait
nop
xor
leave
cmp
ss
and
pop
orl
insb
jp
add
lcall
rcll
dec
sub
dec
lret
cmp
clc
clc
cmp
push
and
xchg
loope
imulb
pop
hlt
enter
dec
movsb
loop
ficompl
fnstenvs
jno
aad
xchg
in
sub
push
imul
mov
cmp
pop
xchg
jno
xor
xchg
inc
dec
sub
out
push
out
pop
loope
stos
adc
push
adc
pop
dec
test
rep
rcrb
popfw
shlb
ja
data16
pop
or
sub
inc
imul
sub
mov
sbb
hlt
lods
aaa
or
add
popl
sbb
sub
jecxz
jl
and
movsb
mov
lcall
cmp
aas
out
xor
inc
xchg
inc
xchg
xlat
fidivrl
adc
jns
bound
sbb
adc
cmpsl
sub
dec
stc
add
lea
cli
fldcw
add
sbb
xchg
push
mov
mov
test
mov
cmp
add
pop
jl
test
scas
cmp
adc
jge
mull
inc
jnp
adc
hlt
mov
aas
inc
inc
out
cmp
lds
iret
leave
cmpl
jo
clc
push
sbb
enter
inc
xchg
outsl
jns
sub
test
pusha
fs
aad
dec
bound
pop
jg
xor
in
js
pop
outsl
xchg
test
test
push
outsl
in
in
sti
cwtl
push
xchg
fmuls
fnstcw
cwtl
jae
pop
dec
std
xor
div
or
inc
jp
stos
je
sub
std
leave
pop
lcall
sbb
movsl
insl
cs
rep
imul
mov
mov
repnz
shrl
mov
aam
xchg
insb
push
testl
fistl
loop
int3
repnz
jge
pop
data16
dec
jo
cld
shr
pop
out
lahf
pop
inc
popa
mov
sbb
outsl
add
filds
jl
leave
jmp
push
cmp
push
or
xchg
add
mov
lea
nop
insl
popa
lods
ljmp
test
subb
push
push
aas
jae
outsb
adc
aas
pop
inc
js
cmp
pop
inc
aam
aam
int
cmp
ret
pusha
lods
mov
mov
lret
daa
les
mov
pop
rorb
int3
ja
dec
shrl
aas
push
adc
and
mov
or
stc
aad
adc
cld
or
sub
arpl
push
cmc
insl
pop
pop
rol
mov
pop
pslld
cld
push
jno
test
lret
adc
fcom
movd
movsb
or
lea
add
push
or
xor
jne
xchg
dec
cltd
xchg
mov
dec
pcmpeqw
pop
stos
pop
ret
call
or
stos
int
fiaddl
pop
test
rcll
mov
repnz
fsubr
lcall
dec
psrad
cli
lret
jae
lock
or
adc
push
mov
shrb
mov
mov
in
sti
mov
out
iret
cmpsb
and
test
gs
mov
xchg
scas
dec
mov
inc
ja
jo
jno
cmp
dec
dec
inc
jge
lcall
test
dec
sub
mov
jle
inc
cmp
xor
cmp
out
lcall
mull
mov
add
mov
movsb
add
jg
testl
mov
pop
mov
scas
cmpsl
mov
jp
jecxz
dec
xchg
rorl
mov
pusha
jnp
ret
add
jg
stc
add
flds
push
dec
dec
hlt
fdiv
lods
shlb
adc
stos
inc
test
fldl
das
in
sbb
leave
xor
inc
jecxz
loop
add
test
xchg
repz
pop
adcl
mov
mov
push
orb
call
ljmp
add
mov
bound
push
xlat
popa
xor
inc
pop
ror
fsubl
or
pop
fs
scas
int
pop
clc
and
jbe
addr16
inc
sbb
pmaxub
mov
mov
testl
cmp
push
clc
mov
pop
mov
bound
sub
mov
cmp
int3
lahf
into
pop
lahf
sbb
adcb
add
xor
jecxz
sbb
call
sahf
sub
mov
test
decl
int3
cmp
mov
jne
jno
imul
mov
push
cmp
filds
fwait
adc
orl
lahf
mov
fwait
adc
ret
std
inc
mov
push
jmp
loopne
out
out
sbb
int3
fsts
test
fldt
inc
aam
loope
and
push
and
iret
lcall
imul
mov
pop
std
lret
or
xchg
pop
inc
scas
mov
or
lock
push
push
sti
fcoms
in
xor
xor
mov
and
sub
ret
mov
aad
pop
subb
repz
rolb
dec
inc
pop
flds
or
popf
push
xor
push
push
adc
push
std
inc
push
sub
fistpll
outsl
jmp
jns
xchg
call
dec
arpl
push
dec
mov
ds
sahf
inc
dec
sbb
pop
cmc
mov
jae
popf
pop
adc
mov
sbb
lods
pop
xchg
push
xchg
and
mov
sub
inc
cmpsl
adc
pop
test
in
test
pop
jno
imul
popa
add
push
adcl
popa
scas
in
inc
pop
outsl
jbe
mov
lea
ret
pusha
or
mov
dec
nop
mov
pop
lds
dec
stos
imul
xchg
jg
lods
and
cmp
mov
xchg
mov
push
filds
repz
mov
mov
scas
leave
xlat
daa
lods
pop
inc
mov
cwtl
xchg
sub
fstpl
xchg
mov
das
inc
pop
imul
xor
mov
mov
sub
add
int3
leave
mov
xchg
leave
js
push
ja
sub
push
adc
jae
push
adc
sub
cld
adc
push
sarl
push
gs
sub
sahf
shlb
inc
filds
leave
push
fucom
imul
loop
mov
xor
xchg
push
mov
push
call
adc
stos
ja
jb
push
mov
dec
hlt
xor
out
xchg
adc
jno
testl
imul
xchg
jl
je
xlat
in
mov
xchg
iret
cld
aad
adc
xorl
xlat
fstpl
sub
stos
add
clc
mov
sub
pushf
cmpl
mov
jbe
mov
mov
sbb
out
sbbb
pop
jge
or
bound
jge
xchg
ret
push
mov
xor
arpl
insb
aas
add
ja
frstor
mov
out
dec
xchg
mov
sub
in
dec
pop
cltd
sbb
add
mov
jmp
ret
ficompl
xlat
jne
push
bound
mov
jl
jmp
scas
out
dec
ror
rcr
arpl
or
sub
push
insl
daa
fadd
push
outsl
lret
repnz
leave
jb
mov
fwait
leave
lods
adc
out
lahf
mov
cmp
gs
dec
test
out
out
inc
shlb
or
xchg
and
lea
ljmp
cmp
in
push
in
cmp
mov
out
or
mov
jp
flds
inc
les
in
stc
loop
pop
mov
shll
or
arpl
lock
dec
aad
popw
pop
mov
cmp
imul
push
jecxz
sub
jmp
insl
jl
jb
mov
repz
enter
fisubrl
pusha
add
jle
and
mov
sbb
std
lret
iret
sub
dec
cs
jmp
xor
arpl
pop
jo
js
add
and
inc
inc
loope
inc
xlat
cmp
lods
mov
cmp
cmpsb
stos
mov
mov
pusha
jle
cmpl
cs
cmp
fidivrl
mov
movsl
jle
pop
xchg
adc
mov
push
repnz
cwtl
push
popa
mov
imul
push
test
jp
shr
shrb
fstpl
fs
faddp
push
push
mov
mov
lock
lods
fbstp
pop
xchg
inc
xchg
lret
cmc
fbld
pop
addr16
xor
push
or
addl
ljmp
pop
shlb
push
add
xchg
push
aad
xor
adc
cmp
mov
jne
cmp
movsl
pop
movsb
sub
jmp
mov
add
xlat
push
sub
xor
jne
sbb
neg
pop
mov
repnz
cmpsl
inc
outsb
mov
jae
es
inc
mov
or
popa
push
and
or
xchg
xor
xchg
sbb
jbe
dec
cmp
mov
jae
sahf
jg
popa
nop
repnz
enter
cmpsl
mov
ja
mov
jb
xchg
in
jg
sbb
das
iret
lahf
mov
lret
dec
or
sbb
shrb
cmp
xor
mov
and
mov
jno
mov
lea
stc
xor
out
mov
out
push
lock
fcom
decb
mov
rorb
psrad
mov
xchg
pop
aaa
mov
push
inc
cmpsb
imul
xor
mov
mov
xchg
cmp
in
out
adc
imul
incb
in
xchg
xchg
jle
stos
push
add
jno
xchg
pop
into
mov
stos
stc
movl
jns
pop
lcall
cld
xchg
jle
adc
loopne
push
pushf
and
in
dec
pop
jg
outsl
addl
mov
mov
mov
in
jo
push
cmpsl
adc
data16
cmp
ljmp
jmp
jecxz
hlt
pop
mov
and
or
push
add
xchg
js
mov
cmp
or
lret
into
fstpl
sti
inc
and
rorb
shlb
lret
or
pop
ja
popf
mov
fadds
and
std
or
cltd
sbb
xchg
leave
mov
repz
jmp
adc
xchg
lcall
loope
in
test
push
pop
push
and
pop
or
fldt
stc
ljmp
shll
loopne
lods
lods
mov
mov
jg
jecxz
fsubrp
sbb
push
add
push
clc
lock
dec
loopne
pop
movsb
mov
mov
jae
pop
cli
aad
fcoms
mov
dec
dec
cmp
jae
xor
xchg
adc
xchg
pop
loope
loopne
dec
sahf
dec
cli
push
rclb
mov
jecxz
jb
mov
fnsave
insb
lds
out
lcall
sarl
sbb
mov
adc
ljmp
or
movsb
fcompp
jnp
or
mov
out
addl
add
cmp
and
outsb
cs
cmpsl
jb
imull
push
loope
inc
jecxz
or
es
dec
jbe
pop
out
stos
into
dec
lds
test
or
iret
mov
add
xor
pop
cmp
push
jp
add
dec
jle
js
pop
jns
fs
push
scas
push
sbb
dec
jne
addb
sbb
fsubl
les
and
aas
sub
test
xor
dec
push
lock
dec
sub
ror
jecxz
or
imul
lret
sbb
mov
pop
or
das
xchg
inc
loopne
push
mov
out
dec
mov
mov
int3
lcall
out
insb
xchg
stos
push
out
aam
jnp
mov
cmp
les
add
movsb
mov
and
movsb
stos
add
jne
or
mov
and
cmp
mov
inc
push
adc
adc
in
mov
mov
cmp
cmp
cmp
movsl
cmpsl
sahf
adc
pop
sti
arpl
mov
sbb
pop
jbe
sub
mov
and
jae
sbb
adc
push
mov
fucomi
cmp
xlat
scas
fldt
inc
imul
dec
lods
aad
popa
pusha
push
dec
pop
jne
mov
ret
adc
xchg
daa
jb
clc
mov
xor
sub
xchg
pop
jge
inc
jne
inc
out
cmp
sti
jnp
xor
movsl
push
leave
cmp
jne
dec
dec
mov
adc
sbb
push
pop
push
dec
mov
inc
call
push
mov
sbb
mov
test
in
mov
pop
dec
test
mov
xchg
test
mov
arpl
pop
std
in
jmp
loop
hlt
repz
aad
xchg
filds
mov
fisubl
int3
mov
jecxz
mov
les
push
sti
jl
inc
inc
adc
jnp
and
imul
daa
inc
movsb
add
push
aam
mov
movsb
hlt
test
pushf
xchg
sar
aas
inc
sbb
js
fsub
xor
dec
sti
roll
test
xchg
out
adc
xor
clc
pop
mov
push
scas
mov
movsl
sbb
xchg
mov
pop
cmp
cmpsl
mov
sbb
dec
ss
jmp
dec
cmp
lea
xchg
fmuls
adc
jg
lcall
dec
sahf
or
jo
xchg
mov
mov
inc
pop
xor
in
push
icebp
jns
mov
cmp
addr16
dec
cmpsl
out
xchg
es
enter
into
jecxz
mov
cmp
add
jo
decl
push
xor
daa
daa
adc
nop
ja
into
addr16
cmp
std
push
mov
cmp
dec
or
or
repz
push
arpl
movsb
roll
fucom
fwait
insb
cmp
lea
push
push
mov
cmp
or
adc
in
cli
jge
daa
xor
pop
lret
xchg
in
inc
ds
ja
jns
enter
in
out
into
lods
sub
cld
add
or
fidivrl
dec
cmp
addl
icebp
jp
addr16
or
mov
jl
lock
andb
jecxz
dec
stos
jle
push
ds
mov
push
sbb
aaa
in
or
das
repnz
jge
cmp
into
std
sahf
faddl
movsb
fdivs
shr
push
outsl
insb
sarl
adc
ljmp
add
sub
jns
and
aas
sbb
std
pop
mov
push
sbb
in
mov
or
push
mov
ja
sahf
xchg
addb
and
inc
cli
sbb
add
push
fisttps
cmp
xor
dec
inc
mov
xchg
jle
sbb
sbb
inc
mov
adc
add
wbinvd
push
sub
scas
dec
and
rclb
push
fs
js
outsl
jae
mov
cmc
xor
shrb
sbb
hlt
xor
lret
mov
mov
add
xor
inc
push
jae
call
push
aas
sub
adc
dec
lea
loopne
mov
or
sbb
inc
add
pop
iret
nop
shr
cli
dec
xchg
data16
inc
rorb
push
sti
mov
pop
lea
pop
xchg
pop
mov
push
adc
test
dec
or
cli
pusha
daa
iret
scas
push
inc
cltd
pop
imul
fiaddl
cmpb
mov
push
or
mov
lahf
mov
add
dec
mov
jno
pop
jle
cmc
js
cwtl
shll
divl
and
cltd
jmp
out
cmpb
lds
cli
jae
or
ficompl
xor
sahf
cli
xor
negl
cmp
or
repz
out
ja
mov
ljmp
mov
test
test
mov
gs
jo
es
fs
lods
popf
repz
daa
and
jl
mov
push
dec
xchg
repnz
push
fists
testb
add
mov
or
mov
rolb
insb
xchg
push
arpl
pop
rcrb
inc
shrl
ljmp
cmp
dec
fcmovne
scas
int
or
dec
mov
dec
push
cld
inc
jns
xchg
es
rolb
mov
push
sub
int3
icebp
xchg
and
imul
add
inc
fwait
andl
xor
push
jle
imul
or
in
int
fldcw
test
xchg
movsb
push
das
inc
pop
inc
xor
call
lret
out
in
into
pop
mov
mov
xor
push
in
sahf
sub
scas
fimull
fiadds
and
xlat
mov
fwait
cmp
add
lret
xchg
jg
in
bound
or
loop
lock
sub
mov
cld
cmpsl
xor
inc
xor
mov
xor
push
jnp
fs
scas
mov
ljmp
repnz
in
cwtl
push
inc
xlat
das
push
insl
movsl
in
daa
fiaddl
pop
mov
data16
ss
imul
test
icebp
and
mov
movsb
cmp
mov
jg
xchg
sbb
jp
xor
inc
popf
and
movl
sub
cwtl
cmpl
lahf
push
xchg
cmp
shlb
xchg
cli
xchg
xchg
aad
push
mov
insl
mov
xlat
je
mov
inc
addr16
mov
es
scas
imul
xchg
xchg
and
iret
fcomp
fildll
adc
into
push
inc
lret
sub
pop
sub
mov
inc
loopne
xor
sahf
cli
insl
dec
shrl
adc
xchg
jmp
and
lret
inc
mov
jle
xchg
pop
lcall
mov
mov
clc
sbb
cmp
adc
xchg
sbb
arpl
pop
dec
and
sti
ss
nop
jecxz
xchg
xor
ficoml
push
pusha
pop
inc
or
cmp
cmc
dec
lcall
mov
push
cltd
mov
dec
and
inc
mov
scas
les
fists
add
insb
jp
and
call
out
bnd
jge
inc
aas
jle
jne
dec
pop
scas
loop
adc
xchg
js
sti
insl
xlat
mov
push
and
xchg
fwait
lret
push
adc
adc
dec
sti
mov
dec
mov
in
dec
into
aam
rorb
mov
in
pusha
shlb
adcl
sub
xchg
cld
repz
notl
cltd
mov
fmuls
jb
aas
in
data16
nop
xor
mov
adc
jmp
stos
sbb
out
cmp
dec
adc
aaa
aaa
fdivp
stc
cmp
or
sub
inc
xchg
and
pop
jo
loop
add
sub
outsb
cmp
push
movb
mov
jbe
les
ja
arpl
cwtl
sbb
sbb
jp
add
jge
mov
mov
dec
and
in
push
add
lahf
inc
das
pop
jno
inc
push
mov
add
add
push
mov
bound
ficoml
lds
inc
out
pop
stc
ss
and
sub
rorl
jns
ja
dec
xchg
dec
dec
decl
into
and
xor
fcomi
bound
jbe
and
popa
call
jnp
and
push
mov
daa
data16
pop
xchg
es
and
pop
pop
data16
hlt
mov
pop
mov
aas
aad
aaa
popa
stos
pop
mov
mov
add
mov
push
mov
xchg
aam
aaa
test
xchg
out
dec
lret
pop
inc
lret
push
push
insl
rorb
outsl
jns
stc
xchg
out
cmp
mov
inc
scas
sbb
sbb
jg
sbb
cmpsb
pushf
jle
jecxz
stos
mov
inc
jno
icebp
ds
mov
mov
adc
mov
xor
push
mov
test
je
flds
jo
or
pop
push
repz
dec
dec
dec
scas
aas
sub
xchg
cmp
insb
inc
mov
insl
mov
clc
xchg
popa
scas
and
arpl
mov
sahf
loope
push
pushl
add
es
addl
int3
xor
inc
sbb
pop
ret
movsl
pop
inc
cmp
jnp
and
inc
ss
mov
lea
loopne
aaa
bound
cmpsb
es
jns
adc
cmpsl
js
or
pusha
dec
sbb
outsl
mov
lds
push
insb
pop
shr
inc
aas
out
or
icebp
es
out
jne
out
cmp
daa
lds
or
test
xchg
push
mov
dec
popf
lahf
outsb
jno
cmp
add
out
fcompl
add
dec
xchg
cmp
cltd
std
push
ffree
cmp
mov
push
scas
gs
stos
hlt
icebp
mov
movsl
xchg
xor
jb
mov
dec
mov
and
dec
out
and
dec
out
fcompl
mov
adc
out
inc
fmulp
popf
loopne
pop
out
mov
dec
inc
adc
inc
mov
sub
icebp
pop
mov
jb
or
dec
dec
or
mov
pop
mov
push
or
cmp
aam
add
mov
test
mov
push
or
dec
push
pop
mov
pop
cld
fistpl
sub
ds
aaa
mov
loopne
mov
jge
ret
out
inc
sub
mov
sub
pop
xchg
mov
dec
and
xchg
mov
and
and
cwtl
push
orb
ret
push
jns
mov
inc
or
mov
hlt
les
arpl
inc
rol
sarb
sub
in
mov
aaa
mov
fadds
push
mov
jb
fildll
jle
loop
xchg
or
jb
subl
cmc
sbb
inc
push
push
outsb
and
nop
sbb
lods
and
pushf
adc
sub
sub
xlat
mov
push
jle
push
pop
mov
cmp
cltd
ja
int
pop
int3
dec
test
cs
sub
shrl
push
mov
ss
ret
xchg
inc
jns
insb
pushf
or
xchg
jbe
cmp
test
mov
sbb
sarl
mov
enter
mov
dec
mov
xor
std
and
mov
repnz
mov
movsl
repz
push
mov
adc
stos
lods
mov
insb
add
mov
mov
test
and
adc
push
out
mov
adc
jl
outsb
dec
xchg
sti
or
sub
xchg
repnz
sub
and
cmp
movsb
lahf
mov
insb
jae
vmread
stos
loop
nop
xchg
jb
sub
jecxz
pushf
and
lret
pop
lock
lds
lods
mov
mov
xlat
xchg
or
or
pop
mov
repnz
cmc
imul
jo
pop
mov
lret
nop
inc
mov
inc
js
or
lods
lcall
ljmp
cmovs
das
xlat
js
repnz
sbb
mov
lahf
mov
dec
xor
jecxz
mov
mov
mov
mov
and
fisttpl
inc
push
lds
mov
loope
sahf
add
mov
dec
into
xchg
cwtl
fimull
lea
mov
out
pop
cli
daa
andl
pop
and
or
lcall
mov
sub
add
outsl
rorb
xchg
pop
push
fldl2e
and
dec
movsl
cmp
loope
xchg
push
mov
add
adc
add
or
cmc
pop
push
jns
adc
dec
lcall
pop
leave
mov
sub
scas
pop
imul
and
push
mov
js
xor
pop
in
mov
cmpsl
xchg
cld
dec
dec
inc
jno
fcmovnb
sbb
mov
xor
lret
es
and
insb
push
cmpsl
fists
push
mov
and
cltd
or
inc
push
mov
mov
mov
fmull
call
out
fildll
mov
push
rorb
jg
aaa
xor
xchg
mov
mov
sti
mov
arpl
daa
mov
pop
sub
imul
jnp
cmp
mov
sub
popf
mov
cltd
push
lock
sbb
clc
repnz
sub
popa
in
test
test
test
out
movsb
xchg
jg
inc
outsb
pop
cli
xor
mov
jae
lods
test
repz
jg
aaa
pushf
andl
mov
stos
pop
mov
dec
das
das
popf
adc
inc
sahf
pushf
loope
dec
xchg
cmc
mov
inc
cmp
enter
sar
adc
and
cmp
fcompl
ja
fs
cmp
lods
mov
int3
pop
mov
imul
adc
jnp
push
cmp
or
lahf
std
push
jne
imul
mov
pushf
insb
fsubs
xor
mov
push
dec
add
aam
pop
ror
arpl
roll
push
rcrl
movsl
addr16
mov
mul
mov
cmp
nop
inc
scas
sub
pop
lds
ret
cmp
pushf
rolb
jnp
sub
jne
mov
or
xchg
test
hlt
dec
pusha
mov
daa
pop
inc
mov
or
ret
mov
mov
rcr
orl
dec
rcl
adc
push
push
lock
lea
into
push
das
push
xchg
movsl
outsl
lcall
mov
ret
test
push
inc
jne
testb
mov
xchg
les
sub
or
stc
leave
cmpsl
daa
stos
jo
iret
lds
cmp
rcrl
jne
es
movsl
inc
sub
or
xchg
inc
mov
sarl
out
outsb
mov
mov
cld
int3
dec
sti
push
mov
jp
pop
jnp
rol
add
add
or
adc
mov
jle
sbb
or
jl
cmp
test
lds
rolb
hlt
in
sbb
cld
imul
ret
xchg
test
clc
adc
daa
and
inc
mov
xor
cmpsb
dec
cmp
dec
loope
test
js
enter
mov
mov
sbb
mov
repnz
add
add
mov
ja
mov
mov
xor
mov
ja
inc
aas
ds
sbb
cmp
repnz
or
sub
sub
xor
mov
mov
cmp
fmul
sbb
jl
dec
sub
mov
inc
mov
sbb
xchg
mov
lret
mov
popa
jmp
mov
xchg
push
pusha
jp
mov
jmp
test
dec
lret
adc
adc
mov
pop
pop
movsl
mov
popf
not
nop
cmc
pop
inc
inc
aaa
sbbb
pop
and
dec
ja
jge
fcoml
dec
repz
or
dec
out
inc
ret
sub
mov
xchg
fucom
xor
mov
push
cmp
or
dec
cmc
pop
sarl
rcll
test
dec
push
pop
addr16
arpl
movsb
push
or
pop
lods
pop
xchg
and
jae
loop
cmp
and
mov
xlat
les
mov
bound
mov
push
aam
mov
cmc
dec
jl
xor
inc
push
push
push
outsl
mov
adc
mov
cmp
fwait
das
sbb
sub
cmp
xchg
imul
add
addb
shl
dec
fcmovb
subb
repz
inc
mov
mov
push
ss
jle
lahf
outsl
loopne
lret
lea
popf
inc
sbb
sub
repnz
movsl
cmpsb
push
pop
enter
scas
out
mov
adc
sub
mov
cmpsb
stos
scas
adc
and
xchg
jne
and
sub
mov
icebp
scas
int
push
mov
jmp
dec
jno
mov
cs
pop
dec
or
mov
jl,pt
repnz
sti
cmpsl
imul
popf
inc
push
sbb
adc
pop
or
insb
mov
lds
cmp
loope
cmp
cmp
pop
mov
jns
mov
scas
pop
lock
fcmovu
hlt
enter
movsb
inc
jecxz
mov
repz
ret
jae
ds
pop
inc
mov
test
sbb
add
loop
dec
add
mov
jns
cmpb
int3
sbb
stos
xchg
sbb
rcl
fldl
and
pop
jg,pn
add
lahf
jecxz
enter
mov
xchg
jbe
outsb
fsubr
lock
push
inc
loope
or
movsb
fs
adc
inc
sub
add
pop
xchg
cmp
dec
aam
cmp
sub
cmp
cpuid
pop
sti
aas
pop
lret
adc
mov
and
std
je
mov
xchg
es
cld
scas
pop
nop
xor
sbb
ret
clc
adc
push
sbb
mov
stos
adc
fstpt
enter
repnz
push
divl
xchg
mov
fdivp
cmp
lock
shrb
aaa
xor
stos
loop
lahf
das
loopne
fcomps
push
sbb
lret
push
aam
test
jg
xchg
in
push
call
js
ljmp
xchg
cmp
mov
loope
mov
mov
push
js
mov
inc
inc
icebp
xchg
push
mov
inc
xor
mov
addr16
sbbl
int3
test
loop
mov
cwtl
cmp
add
mov
inc
in
int
ret
loope
iret
outsl
jle
cmp
inc
test
xor
movsl
out
or
stos
mov
jg
int
in
jno
in
sbb
addr16
sbb
xor
cli
shll
bound
push
pop
call
mov
or
ds
repnz
push
fmuls
mov
daa
pop
adc
push
les
fs
mov
mov
push
mov
in
aad
mov
repz
mov
dec
stos
rcll
adc
mov
sub
push
dec
cmp
pop
cmp
icebp
sahf
std
sbb
push
sub
push
jecxz
adc
aad
push
add
iret
push
mov
sub
pop
jg
pop
and
lods
or
fwait
mov
push
ljmp
mov
xchg
out
mov
gs
mov
stc
and
xorl
sbb
stos
inc
arpl
orb
push
xchg
inc
dec
mov
dec
test
hlt
jno
dec
fdivrs
test
pop
sbb
aaa
or
inc
adc
mov
loopne
out
mov
mov
enter
insl
mov
jl
cs
shr
xor
outsb
lahf
pop
icebp
repz
cmp
sub
cmpsb
orb
push
cmp
hlt
push
jae
push
sbb
push
clc
jge
int
insl
lret
adc
adc
adc
test
xor
rcrb
or
or
leave
add
pusha
test
jae
xor
out
call
mov
mov
ja
lcall
out
int
xchg
sub
stc
subb
xchg
adc
sub
push
add
stos
fdivl
aas
and
xchg
sub
pushf
mov
mov
pusha
add
insb
sub
popa
ret
lods
out
out
shrb
leave
inc
subl
dec
xor
jns
push
fidivrs
imul
out
andb
mov
and
fmuls
fmuls
sbb
push
sbbl
mov
jnp
lret
ja
or
shl
sti
pop
or
fsubrl
sbb
call
dec
push
imul
mov
mov
xor
push
in
stos
sub
push
js
add
jle
xchg
scas
aad
pushf
out
jp
jns
add
ret
in
mov
inc
out
jbe
scas
outsl
mov
mov
leave
pusha
jno
movsb
jl
mov
out
fs
sbb
out
fwait
push
out
notb
inc
add
ljmp
cmp
loope
shlb
or
dec
cmp
mov
dec
inc
or
iret
add
lret
fsubrl
ljmp
sub
add
inc
lret
int
dec
jae
pop
sub
dec
jmp
dec
stc
add
mov
pop
mov
cmp
movsl
jle
jl
mov
pop
cmc
test
int
sbb
filds
xor
in
mov
jge
lret
js
or
subb
cli
sub
leave
mov
pop
cmp
dec
popa
xchg
pop
mov
jle
lods
pusha
scas
dec
int3
nop
cmp
cmpsl
in
or
dec
aas
push
cmpl
sbb
movsb
dec
xchg
out
jg
in
test
je
xchg
pop
cmp
jge
stos
clc
cwtl
ret
mov
insl
fwait
dec
stos
mov
adc
stos
ror
push
inc
dec
xchg
das
mov
call
or
shl
mov
adc
loope
out
fisttps
cmp
pop
jmp
add
cmp
sbb
daa
xor
clc
add
flds
bound
mov
sub
stos
aas
fst
dec
lahf
js
push
sbb
jo
xlat
test
gs
mov
mov
mov
test
int3
mov
jmp
mov
int
loopne
inc
jle
insl
inc
mov
inc
jb
or
lahf
nop
iret
push
aad
mov
sbb
cmp
or
loop
inc
icebp
scas
aam
lahf
int
movsb
adc
lahf
mov
jp
testl
inc
rolb
sub
sbb
pop
push
cwtl
data16
add
rcl
jbe
repnz
scas
cmp
faddl
in
sub
je
sbb
out
push
jecxz
dec
pop
push
jl
sahf
cmpsl
xchg
in
and
xchg
push
mov
and
xchg
sub
dec
jne
int3
jp
mov
mov
jno
xor
inc
lret
int3
xor
mov
push
pop
sbb
inc
int3
fldt
js
push
mov
test
fldl
push
cmpsb
dec
mov
out
into
repnz
push
sub
repz
fnstsw
pop
js
pusha
pop
mov
das
arpl
jge
and
movsl
push
sbb
push
and
sbb
in
js
notl
sahf
pop
lea
enter
pop
loope
jmp
sub
addr16
test
out
mov
aam
std
jno
ja
lret
in
adc
mov
pop
mov
movsb
outsb
repz
inc
lahf
xchg
push
ja
cltd
in
push
ss
rcr
dec
insl
and
adc
mov
and
mov
xor
mov
imul
mov
mov
bound
inc
push
sahf
and
pop
dec
imul
push
cmp
lods
add
pop
cmpsl
xor
into
loopne
nopl
lahf
fldt
dec
int3
inc
xlat
mov
dec
std
jmp
test
aam
pop
stc
xor
cli
loopne
pop
jno
xchg
xchg
adc
stc
inc
xor
push
xlat
int3
pop
sub
pop
inc
sbb
and
pop
xor
dec
jecxz
inc
cmpsl
lret
subl
inc
idivb
sbb
add
stos
add
lds
aas
sub
adc
fmuls
cmovne
nop
cmp
shlb
push
adcl
mov
or
lds
lret
dec
test
sub
in
xlat
imul
cwtl
sub
push
int3
sbbb
mov
mov
aam
dec
fsts
mov
add
inc
dec
or
pop
enter
out
fwait
js
pop
mov
mov
mov
pop
cmp
icebp
and
mov
daa
push
xor
push
mov
mov
dec
dec
cmp
sub
xchg
mov
jl
inc
xchg
xchg
stos
jb
mov
pop
jo
jb
cld
inc
ja
repz
cmpsl
jge
cmp
jno
stos
scas
das
jl
dec
shrl
push
shlb
pop
mov
outsb
and
mov
scas
leave
repnz
and
aad
jno
sbb
push
mov
sbb
call
pop
pop
out
aaa
inc
mov
aam
push
loope
popf
imul
pop
mov
push
insl
dec
outsl
adc
or
loopne
inc
pop
loopne
pop
cmp
pop
xchg
lods
out
adcb
and
test
fdivs
and
cs
je
mov
xor
cmpsb
sbb
clc
jne
gs
ds
jecxz
rol
jbe
cbtw
mov
or
aad
mov
adc
insb
cli
hlt
mov
push
insl
jl
inc
pop
mov
mov
mov
mov
ret
inc
repz
call
test
lahf
je
adc
scas
cmp
and
or
cli
mov
fucomip
add
mov
pop
xor
inc
mov
pop
aam
cmp
iret
in
sbb
sbb
out
add
int
and
pop
pop
xlat
shlb
movsl
adc
mov
ficoml
dec
neg
push
jns
stos
xchg
push
inc
push
repz
pop
ss
cmp
hlt
cli
shlb
lret
xor
mov
mov
fnstsw
dec
cmp
std
cwtl
or
lahf
sub
pop
mov
jo
rorl
mov
push
mov
dec
sti
xor
test
mov
sahf
sti
stc
shrb
fwait
dec
daa
inc
push
subb
inc
shrb
mov
insl
outsl
pop
scas
arpl
insl
movb
fwait
mov
cld
or
movsb
sbb
mov
mov
rorl
jno
dec
inc
jle
data16
subl
cmp
gs
jl
repnz
sub
adcl
jle
pop
enter
inc
int3
jl
ss
out
sub
fwait
pop
test
shll
inc
arpl
or
dec
inc
push
mov
mov
popf
xchg
mov
repz
jl
inc
test
pop
addb
push
push
xchg
lahf
lret
or
jecxz
jbe
cwtl
sub
mov
scas
jo
outsb
out
dec
shrb
repz
imul
repnz
mov
pop
jnp
dec
sub
inc
sub
xchg
and
in
ret
adc
pop
fcoml
scas
out
repnz
out
push
inc
and
inc
arpl
subb
daa
test
mov
mov
lahf
jns
fwait
ja
rcrl
pop
cltd
subl
lret
inc
daa
insl
mov
aaa
or
mov
andl
cld
xchg
popa
std
mov
pop
add
mov
mov
mov
cmpsb
gs
nop
repz
incl
notl
cmp
sbb
push
adc
xor
and
inc
bound
sbb
imul
aas
hlt
mov
and
gs
cmp
imulb
pusha
push
and
jae
and
addl
push
insl
negb
xlat
or
lret
mov
sahf
outsb
icebp
jo
mov
fistl
mov
in
clc
cmp
mov
pop
or
out
jbe
ret
mov
cld
and
pop
jnp
incb
lcall
sar
mov
dec
inc
xchg
test
loope
fwait
mov
or
movsl
and
xchg
out
movsl
push
jp
jp
sub
mov
data16
shll
cmpsb
sub
aad
mov
scas
add
lahf
andl
push
xor
lret
sbbl
das
add
clc
xchg
or
xor
sbb
mov
nop
sbb
scas
jnp
xorl
cmp
inc
adc
jecxz
jg
in
shr
out
test
jnp
mov
aas
push
cmp
pushf
mov
push
sbb
stos
pushf
jecxz
arpl
loop
mov
push
adc
cmp
in
inc
test
movsb
mov
clc
sub
stc
mov
stc
repz
dec
xor
fcmovnb
sbb
lcall
push
popa
mov
dec
jp
scas
call
std
cmp
push
sbb
loopne
insl
mov
and
rcr
loopne
sub
bound
xchg
mov
loop
sbb
cmp
push
inc
xchg
pop
pop
dec
mov
in
pop
repnz
orb
int
cmp
leave
shr
sbb
nop
popl
fdivrl
mov
data16
cli
mov
cmp
sbb
inc
adc
cli
inc
icebp
mov
pop
jns
pop
add
sub
sarb
aad
fsts
aad
test
mov
lahf
jae
scas
es
lds
adc
dec
je
nop
xor
sahf
xor
scas
jne
mov
fiadds
popa
test
inc
adc
pop
or
mov
pop
lods
subps
addr16
dec
out
add
imulb
adc
ror
add
subl
aad
test
sub
jbe
daa
mov
sub
aaa
xor
sub
cli
jl
cltd
push
aaa
dec
mov
mov
fnstcw
mov
das
icebp
inc
jecxz
out
jecxz
cwtl
in
jp
jo
mov
or
xchg
dec
lret
sti
adcl
jp
adc
dec
pop
scas
into
lods
mov
jno
stc
les
repnz
sub
mov
xchg
and
sub
or
sub
je
imul
xlat
push
and
loop
int3
xor
fwait
out
je
sbb
or
add
adc
push
push
xor
idiv
cmc
jl
xchg
adc
add
push
sbb
fidivrs
mov
xor
sahf
or
jb
cmpsl
dec
aad
das
cmp
adcl
cld
in
lcall
xchg
bound
gs
jecxz
xlat
cltd
loop
int
cmp
pop
repnz
arpl
mov
push
sbb
inc
mov
mov
fwait
movsb
mov
stos
aad
int3
in
sti
xchg
hlt
pushf
ljmp
jo
ljmp
xchg
xchg
outsb
push
pop
add
jge
jo
lods
cmp
or
stc
dec
push
cltd
pop
inc
or
sbb
insb
out
in
insb
fldcw
xchg
and
xchg
mov
out
movsl
call
in
inc
shll
aas
push
sbb
cwtl
fprem1
push
or
mov
xchg
push
mov
or
jp
xor
xchg
adc
jg
cmpsl
jl
xchg
leave
hlt
and
or
add
scas
pop
xchg
dec
pop
mov
and
xchg
push
pop
pop
stc
lcall
and
mov
loopne
ret
jno
or
mov
adc
or
add
pop
fisubl
jmp
cld
add
push
int
lock
xchg
dec
mov
nop
loope
bound
filds
out
movsl
adc
jbe
bound
mov
cmpsl
and
mov
sbbb
mov
xchg
addl
mov
jg
inc
mov
push
nop
aas
dec
add
cmp
rolb
and
icebp
das
cwtl
and
pop
test
clc
add
sbb
dec
mov
out
push
popf
xlat
mov
lods
insl
icebp
jle
cmpl
or
cmp
fwait
jne
daa
or
sbb
xor
jae
mov
icebp
mov
pop
std
cmp
pop
pop
mov
clc
insb
es
shll
daa
shlb
bnd
ja
das
pop
test
jno
push
jge
and
fisttpl
lock
in
or
and
mov
or
test
sbb
adc
fistps
mov
or
movsl
sar
testl
dec
or
out
out
sbb
mov
das
sub
int
inc
mov
dec
inc
and
dec
pop
int
data16
mov
hlt
pop
adc
sub
adc
leave
call
inc
pop
shll
outsl
xchg
insl
ljmp
xchg
lods
dec
addr16
jae
mov
adc
xchg
notb
mov
sub
icebp
or
insb
or
pop
ret
data16
mov
mov
adc
dec
roll
push
dec
ljmp
sub
sahf
inc
negb
xchg
int
mov
pushf
mov
leave
dec
cmp
sub
pop
cmp
adc
sti
dec
cmp
xor
hlt
lock
lahf
jae
testl
pop
mov
repnz
lahf
mov
shr
outsb
loop
sarl
mov
lds
mov
lds
ljmp
in
in
and
test
sub
dec
mov
lea
in
or
xor
xor
fs
adc
shrb
pop
test
shrb
out
loope
testl
jecxz
and
jns
lds
sbb
ss
pop
xor
mov
nop
dec
jge
int
add
sti
cmp
dec
movsl
push
jmp
xchg
cmp
mov
pop
xor
mov
loopne
es
dec
sub
fistps
jecxz
filds
dec
andl
aam
xchg
xchg
sti
jecxz
rorb
int3
sar
and
inc
insl
nop
je
push
dec
inc
daa
mov
cmp
stos
sub
mov
xor
sbb
cli
jno
mov
push
dec
shlb
sub
call
pop
lahf
loope
pop
mov
lea
sbb
repnz
xor
call
out
mov
sahf
scas
mov
cmp
cmc
xchg
inc
pop
in
mov
cwtl
add
and
cmpsb
mov
leave
ror
test
inc
inc
nop
adc
mov
mov
cmp
mov
jbe
sub
sub
stos
cmpsb
sahf
inc
fistps
pop
fs
in
push
push
xchg
shll
cmc
mov
inc
int3
and
and
sarb
jbe
inc
loope
jnp
add
adc
adc
in
divl
cmp
repz
sbb
dec
cli
jbe
je
pusha
xchg
push
pop
xor
mov
fisttpl
mov
cmova
movb
jecxz
mov
dec
das
inc
in
adc
pop
loope
sub
mov
cmp
jl
cmp
and
push
dec
or
pop
sub
and
mov
adc
mov
data16
dec
push
pop
lret
fwait
divl
lods
lcall
jnp
or
fnstcw
and
nop
xchg
dec
cmp
testl
jne
sbb
and
mov
pushf
fstpt
xor
out
fsts
mov
notl
movsb
pop
adc
out
mov
mov
sarb
cltd
dec
outsl
sahf
iret
jmp
int
mov
int
outsl
lods
sub
xor
mov
or
test
lret
call
add
sbb
sbb
sub
pop
mov
cmp
sbb
xchg
push
movsl
dec
and
daa
ljmp
sub
stos
out
out
aas
jp
movsb
outsb
inc
adc
xacquire
xchg
arpl
mov
shll
mov
xor
cs
sbb
jbe
es
or
out
mov
mov
sub
fstp
mov
jmp
mov
mov
shlb
push
push
mov
outsb
mov
aas
movsb
movb
jg
adc
mov
pop
xchg
dec
jbe
negb
call
cli
ret
add
push
push
jo
shlb
inc
loop
mov
daa
fdivrs
sbb
jne
dec
cs
jl
push
lret
jp
push
xchg
fcomps
clc
adc
sub
mov
inc
sub
mov
sbb
xlat
mov
sub
subb
imul
xchg
mov
ds
aas
ds
adc
pop
icebp
and
mov
int3
sub
out
lahf
sti
test
jne
xor
lea
enter
out
das
dec
xor
ljmp
aaa
lock
loope
add
rcrl
ja
insl
ljmp
push
adc
cmp
or
or
loop
adc
in
dec
cmc
fistl
push
in
pop
adc
popa
jp
js
bound
xchg
adc
xor
mov
loopne
jae
mov
in
pop
mov
scas
jmp
aam
mov
repnz
test
nop
popf
mov
mull
fisubl
push
loopne
clts
in
xchg
xor
cwtl
in
std
xchg
std
cmp
std
adc
jnp
ficomps
add
pop
clc
mov
shrb
call
sub
cmc
sub
cwtl
pop
arpl
add
sub
andl
loope
mov
imul
cltd
pop
jecxz
fsubl
adc
sbb
pushf
push
sub
pop
xchg
shll
jb
and
push
sub
jno
dec
adc
mov
or
test
cmpsb
jecxz
shll
dec
ret
dec
xchg
imul
add
testl
in
das
push
out
add
pop
mov
or
dec
int
cmc
fwait
mov
cld
xchg
and
dec
test
jg
outsl
add
jl
pushw
jecxz
add
cltd
stos
mov
jge
jns
sub
pop
lret
ud1
sub
lods
xor
mov
sub
push
daa
dec
mov
cmp
cs
xchg
in
jle
xor
jecxz
pmaddwd
inc
jmp
enter
lock
shlb
out
sbb
or
xor
divl
loopne
mov
movl
stos
int3
imul
push
fimuls
jns
mov
sbb
out
xor
jbe
inc
cmp
fstpt
add
insb
and
inc
jg
lds
fxch
jno
mov
sub
push
mov
lds
jge
in
ficoml
pop
and
and
jg
push
mov
cmc
js
adc
fcomi
outsb
xchg
insl
xlat
outsb
mov
hlt
lahf
cmp
inc
mov
lods
mov
lret
push
hlt
mov
popa
pop
sbb
pop
mov
cmc
xor
repz
dec
inc
movb
in
lds
stos
xor
sub
lock
into
sahf
je
cli
cmpsl
andb
rorb
mov
dec
in
jns
inc
push
rcrl
fsts
sub
inc
sub
lret
pop
insl
ret
es
mov
xchg
out
rcpps
ja
cmp
and
push
mov
sub
mul
mov
loop
inc
rcrl
mov
std
mov
push
outsb
leave
push
fistl
mov
xor
xchg
pop
mul
pop
mov
jle
and
dec
imul
mov
dec
xor
pop
push
insb
mov
in
dec
sub
or
sbb
int
mov
fcmovnb
push
sbb
ljmp
jle
cli
jbe
addr16
xchg
cwtl
sub
out
and
fiadds
sbb
fwait
push
gs
pop
push
mov
inc
out
inc
out
jl
fisubrl
ja
pop
pop
test
cmpsb
xor
fistpll
adc
mov
pop
jl
xor
loopne
push
jge
mov
mov
lods
fldenv
out
out
mov
daa
or
or
mov
add
or
push
orl
inc
pop
lods
shl
push
rorb
push
sbb
scas
jecxz
pop
movsl
mov
stos
inc
inc
pushf
or
sub
jae
pop
lret
dec
jb
js
aad
in
cmp
xchg
ds
pushf
pop
sbb
pop
ffreep
xor
outsl
call
loope
call
repz
xor
adc
sbb
or
dec
pop
cli
pushf
daa
inc
int3
nop
or
add
and
xor
mov
sbb
data16
repz
cwtl
push
fildll
jmp
sub
dec
xchg
mov
ficoml
adc
orl
dec
mov
jne
add
enter
lock
mov
jle
cmpsb
add
daa
sub
and
pop
mov
fdivl
sbb
loop
outsl
jno
dec
sbb
or
hlt
lds
lret
negb
mov
shll
push
sbb
jno
cwtl
mov
dec
cs
pop
clc
inc
inc
mov
mov
cmpb
push
lods
call
shrb
cltd
dec
cmp
mov
mov
xor
pop
and
icebp
dec
js
jae
mov
test
aam
into
dec
hlt
lret
fwait
js
lcall
inc
sbb
inc
jno
cmp
jae
push
add
movsl
dec
or
mov
sbb
mov
fstps
gs
push
fdiv
adc
filds
call
and
mov
ja
fptan
imul
jecxz
rcrl
mov
and
cmp
add
repz
outsl
in
adc
and
insb
shll
pop
dec
fidivl
notl
mov
cmpb
jno
lret
dec
push
mov
mov
push
mov
test
inc
pushf
nop
xor
test
inc
cmpb
std
pop
in
nop
outsb
repz
lret
xor
fcmovnu
xchg
xchg
ljmp
andb
jle
and
lock
ljmp
hlt
xor
inc
pop
sahf
mov
pop
dec
jnp
shr
xor
fstl
jmp
insb
or
addr16
fst
das
cmpsl
cld
mov
push
std
push
test
jb
stc
xor
xchg
fadd
adc
loopne
mov
repz
jno
fidivl
test
aas
mov
rcll
cmp
mov
push
cmpsl
mov
inc
or
test
mov
bound
mov
popf
pop
push
jle
pop
or
sbb
xor
sub
push
push
outsl
movsb
inc
sbb
jmp
jae
add
js
and
loope
aam
lods
nop
jp
mov
mov
push
pop
enter
outsl
insb
cmp
pop
shrl
sarb
in
adc
lods
lea
sub
ror
ljmp
xlat
adc
call
leave
cmp
adc
clc
jb
adc
rcrb
daa
in
cmp
and
gs
xchg
and
mov
int3
mov
je
ljmp
mov
xor
or
in
cld
and
aaa
mov
or
and
idivl
jmp
inc
pop
sahf
scas
rcll
push
push
movsb
xchg
repz
int3
xor
lahf
sbb
cmpsl
daa
and
xchg
pop
int3
cs
mov
adc
inc
or
xor
es
mov
pop
les
jmp
pop
pop
adc
push
inc
sbb
insb
and
xchg
adc
subb
sub
jg
repz
dec
and
pop
pop
clc
movsl
ret
cwtl
adc
mov
sub
or
inc
push
insb
add
loopne
rcll
popf
int3
aam
popf
das
lret
add
xor
cmp
inc
bound
das
pushf
cmp
stos
hlt
xor
push
pop
sub
ret
sbb
loop
negl
pop
inc
aad
push
pushf
and
mov
inc
add
cmc
sahf
int
and
mov
inc
cmc
pushf
pop
decb
sbb
mov
pop
jecxz
inc
test
test
lock
pop
push
and
sbb
pushf
es
push
out
out
pop
roll
xchg
mov
xor
adc
into
sbb
sub
adc
mov
call
dec
jbe
or
jae
pop
imul
sbb
mov
mov
pushf
cmp
fldt
dec
fidivs
aaa
dec
mov
sub
push
sbb
push
inc
xor
xchg
sub
test
int3
jge
sahf
mov
dec
lret
pop
movsb
push
vmwrite
std
lahf
in
std
and
dec
test
or
es
add
sub
aad
jb
mov
xor
dec
test
sbbl
cmp
leave
xlat
fcompl
add
mov
jno
pop
insb
push
ljmp
pushl
adc
loopne
sbb
xor
jecxz
mov
nop
in
mov
and
fisttpl
mov
push
pop
lahf
xchg
push
fistps
mov
pushf
aad
iret
mov
pop
pusha
ds
enter
pusha
cli
mov
inc
cs
fsubs
jnp
xchg
add
mov
inc
es
int3
sti
xchg
add
arpl
test
push
mov
dec
pop
mov
ret
mov
mov
hlt
pop
das
pop
lret
cltd
or
sub
inc
fimuls
inc
cmp
cltd
sbb
mov
call
xchg
pop
aaa
xor
jae
mov
fcoml
lods
mov
in
cli
xor
cmp
movsb
notb
pop
gs
lret
dec
out
add
add
rclb
std
and
inc
cs
pop
adc
popa
sub
insb
daa
in
test
mov
lret
xchg
xor
jp
and
shrb
cmp
add
jmp
xchg
repnz
roll
dec
pop
mov
fldl
sbb
fwait
sub
into
cmpsl
aam
fmull
mov
or
stos
mov
icebp
inc
cltd
sub
mov
loop
mov
aam
divl
and
sahf
out
aaa
xchg
xchg
add
adc
addr16
ds
sub
dec
push
popa
xor
or
mov
or
mov
addl
aam
loopne
sub
cmp
sar
sar
loop
outsb
sarl
xchg
loop
pop
in
insb
imul
pop
cmpsl
push
add
in
push
mov
xchg
xor
or
lcall
sub
stc
lcall
enter
jp
pop
lcall
pop
mov
pop
enter
out
push
mov
mov
jl
mov
push
andb
dec
filds
inc
mov
pop
shlb
xor
mov
dec
cmp
fdivr
imul
adc
mov
cmp
test
xlat
xchg
pop
test
movl
mov
sar
repnz
ficomps
fimull
popa
into
and
shrb
pop
daa
push
push
dec
jae
jae
inc
inc
push
sbb
int3
lods
arpl
cld
filds
lods
scas
loop
bound
jb
out
mov
jle
pop
jno
mov
mov
push
pop
xchg
dec
or
xor
std
cli
scas
imul
mov
mov
ljmp
add
push
lods
jo
cmpl
fidivs
jo
xchg
sub
aam
xchg
pop
loop
dec
pop
andl
mov
lods
negb
idivl
cmc
pusha
push
push
aad
cmpsl
arpl
or
fwait
sbb
mov
adc
outsb
inc
std
pop
mov
or
pushf
add
jns
ret
insb
testb
lret
lret
mov
xchg
ret
fisttpll
pop
fdivrl
lds
sub
mulb
loope
dec
outsb
pop
outsl
add
sahf
sbb
mov
mov
mov
fcmovnu
cli
push
cmp
jmp
out
dec
pop
push
dec
iret
jb
insl
cmpsl
mov
inc
or
ret
fnsave
inc
sub
jae
pop
jbe
in
jle
daa
rorl
jbe
lcall
sarb
add
push
sbb
mov
xor
pop
or
mov
leave
mov
out
int
xor
imul
shrb
daa
push
fcmovbe
inc
dec
bound
jnp
or
aam
jecxz
inc
push
sti
jg
cltd
test
je
xchg
dec
stos
jg
stc
into
push
inc
in
sub
and
into
es
push
dec
dec
inc
push
jae
dec
inc
dec
lcall
push
mov
add
insb
sbb
popf
push
sub
ja
in
inc
and
and
mov
dec
hlt
rcr
in
dec
loop
mov
cmpsb
sti
mov
lods
jmp
cmpsb
mov
cmp
inc
inc
shll
ret
aam
jae
sub
jo
lcall
xor
mov
pop
xorl
cmp
adc
fucom
iret
mov
rclb
aad
xlat
cmp
jbe
jmp
jbe
dec
lods
popf
xlat
std
sub
lcall
ss
pop
or
shlb
mov
pop
outsb
mov
out
lret
jb
cmp
fisttps
ret
ja
inc
sbb
pop
push
out
push
js
insb
adc
mov
incl
dec
int3
pusha
testl
idivl
mov
int
lret
int3
or
enter
in
dec
dec
mov
push
dec
mov
test
out
jmp
push
dec
ja
and
cltd
movsl
bound
repnz
stos
jne
popa
mov
xchg
mov
insb
mov
loopne
mov
fucom
inc
sahf
jne
popa
int
xor
movsl
or
mov
mov
mov
je
scas
dec
orl
inc
repnz
test
sub
jge
mov
aad
pop
push
loope
sbbl
inc
push
mov
mov
ret
push
or
in
idivb
add
mov
mov
jecxz
das
push
popf
add
lahf
mov
mov
call
hlt
pop
cmp
rorl
sbb
out
mov
jmp
inc
dec
in
clc
push
sbb
push
ja
ds
dec
jle
xchg
mov
or
test
rorl
and
jmp
pop
or
std
dec
gs
aad
pop
sbb
test
xchg
xor
insl
mov
pushf
inc
mov
test
jb
pop
fnstsw
in
push
sub
dec
addb
int3
pop
outsl
mov
test
mull
jge
inc
repnz
cmp
aaa
jmp
cli
mov
xchg
adc
les
bound
cmpsb
insb
sbb
lcall
pcmpeqw
inc
or
adc
subb
leave
loope
fcoms
out
adc
mov
testl
or
adc
xor
clc
push
xchg
test
lea
cli
test
add
negb
lret
mov
sahf
pop
cs
pop
fs
cli
sbb
adc
mov
test
hlt
dec
inc
inc
leave
sub
fs
outsl
sub
ja
mov
xor
lret
divb
test
dec
pop
mov
mov
push
adc
pusha
lds
push
imulb
aaa
mov
cltd
jmp
inc
scas
mov
or
cmp
sub
dec
cld
movsb
and
cmp
pop
xchg
je
mov
mov
sbb
mov
les
ret
push
fldl
or
xlat
mov
push
xacquire
out
jbe
inc
lcall
xchg
fimull
push
push
movsl
rdmsr
scas
sub
push
mov
adc
shrb
jne
jo
jmp
and
add
xlat
rcrb
sub
xchg
xchg
orb
or
xor
sub
mov
adc
shlb
dec
mov
push
xchg
sbb
int3
lcall
mov
shll
push
fwait
xlat
cmp
pop
or
add
dec
call
pop
div
xchg
dec
xchg
or
sub
jne
lock
sbb
sbbl
mov
xchg
daa
mov
lret
fcompl
jae
fcomps
cmp
xchg
pop
mov
fstps
aam
jns
xchg
push
mov
mov
pop
mov
xor
push
out
cmp
mov
jp
test
test
in
jno
mov
inc
femms
pop
stc
mov
inc
mov
orl
sub
xchg
and
aam
aam
cmpsb
jns
cld
arpl
pop
or
push
inc
leave
lods
mov
xlat
ja
adc
ss
lea
sbb
jp
xchg
cs
mov
mov
mov
iret
jae
mov
js
sbb
mov
sub
out
rcrl
ljmp
sbb
mov
mov
sub
int
mov
arpl
xchg
mov
jp
mov
xchg
pop
mov
mov
outsl
cmpsl
pop
rcl
jl
sub
dec
mov
rcrl
jp
sub
popa
sahf
push
cmp
mov
xor
lds
dec
jb
call
adc
mov
lock
js
push
aad
in
or
mov
mov
push
jecxz
test
aad
cmp
lods
roll
les
mov
pop
jmp
fstps
lds
aas
leave
cmp
movsl
xlat
inc
enter
sub
fiadds
mov
call
out
stc
cld
sbb
push
sbb
loope
shr
fs
push
add
add
xchg
data16
jp
into
lock
clc
repz
pop
out
push
push
cwtl
cmpsb
cmpl
push
mov
push
bound
push
lock
sbb
cwtl
cmovb
stos
in
dec
or
push
sbb
xchg
mov
sbb
lcall
add
adc
loop
pop
idivb
sbb
xor
push
sar
adc
sahf
push
inc
add
inc
inc
mov
inc
mov
mov
lcall
nop
pop
mov
push
sbb
mov
test
mov
cmp
push
outsb
push
and
ficomps
mov
notb
je
filds
gs
rorl
dec
popf
mov
test
cmp
jno
cmp
cmp
xchg
scas
mov
cmp
jbe
sbb
push
out
push
popf
xchg
xor
pop
mov
leave
ficoml
mov
xchg
stos
enter
ljmp
imul
into
test
or
xor
adc
loopne
mov
loopne
stos
icebp
jae
cld
xor
mov
push
je
dec
dec
iret
popa
xchg
fdivrp
fwait
xchg
and
lock
add
shr
xchg
push
mov
in
inc
xor
in
cld
sahf
mov
pop
pop
ficoms
pop
dec
jg
push
jle
movsl
xor
sti
incb
inc
inc
out
shll
dec
negb
data16
repnz
cmpsb
mov
push
test
enter
test
js
cmp
insl
mov
push
fistps
test
mov
test
insb
add
test
cs
and
mov
dec
dec
jbe
addr16
imul
fnstsw
xor
ljmp
cli
fisubl
ret
push
sahf
movsl
lahf
lret
adc
xor
sbb
sub
subb
rcrl
in
imul
sbb
jecxz
xor
sbb
scas
xlat
pop
push
push
push
mov
cmp
fiadds
arpl
and
mov
push
mov
test
mov
cld
push
cld
add
cld
jmp
int3
mov
ds
shl
clc
add
xor
fnstsw
mov
fwait
sbb
orb
lret
xor
xchg
pop
loop,pt
push
fsubl
mov
out
push
add
jl
jmp
in
mov
or
data16
dec
xchg
mov
out
cmc
loop
inc
lret
loopne
push
push
cmp
sub
add
mov
adc
adc
or
mov
jne
and
mov
ss
add
adc
mov
sbb
mov
pusha
stos
sahf
mov
int3
jg
cmp
insl
mov
cwtl
addb
jo
sbb
xor
fs
ret
ficoms
insl
fldcw
cwtl
dec
in
sub
fldl
fdiv
orl
push
pop
fcom
push
and
test
pop
call
xchg
cmpsl
clc
out
fistpl
mov
add
fstl
push
jbe
out
mov
lea
mov
mov
call
fcompl
mov
subb
icebp
setp
mov
fisubrl
xorb
lahf
or
mov
or
mov
in
push
mov
xor
xchg
dec
inc
cld
cmp
nop
js
push
inc
pop
mov
lods
popa
daa
xor
pop
xchg
icebp
or
imul
pusha
xchg
push
mov
aad
adc
out
test
test
xor
lock
xor
dec
cmpsb
popa
xor
adc
cs
stc
pop
rcll
inc
jno
pop
or
popf
lock
push
scas
inc
cmc
dec
sub
dec
dec
dec
sti
xor
xchg
lock
pop
sub
or
out
xchg
xlat
fcmovb
pop
push
imul
aas
pop
sbb
ljmp
mov
bound
pusha
xchg
lcall
sbb
mov
fwait
mov
push
inc
cmc
mov
sbb
filds
test
jns
sbbb
inc
pushf
pop
scas
lods
outsb
mov
arpl
jno
movsb
push
lahf
in
dec
push
lret
mov
pop
lahf
movsb
xchg
adc
mov
inc
out
lods
outsl
lsl
adc
push
cwtl
test
cmpsb
cmpsl
mov
pop
out
ret
push
je
xchg
cmpsl
divl
int3
nop
notb
fmul
cwtl
adc
sub
push
outsb
mov
cmp
scas
mov
fdivrl
xorl
jecxz
fdivrs
jne
into
cmp
flds
arpl
ficompl
and
pop
mov
outsb
lds
and
lret
repnz
and
out
jle
or
pop
scas
xor
inc
sbb
xor
jbe
push
lock
push
inc
push
fsubrp
sub
fs
adc
pop
sub
repnz
push
xchg
lock
sub
ss
out
arpl
ror
fsub
sbb
rorl
lods
push
insb
jp
xor
cmpsl
ret
xchg
es
mov
ret
xchg
inc
mov
shl
pop
xor
push
xor
push
lds
xchg
cli
adc
inc
lret
inc
push
dec
cwtl
imulb
xor
inc
loopne
sbb
popa
pop
lock
dec
and
add
sbb
jns
out
jo
cs
mov
jecxz
add
pop
push
out
cld
pop
repnz
jmp
ja
aam
adc
push
cmp
enter
dec
jecxz
ficoms
mov
or
cmp
jg
hlt
xchg
jno
and
push
sub
mov
xchg
push
xchg
insb
out
jbe
and
mov
cwtl
xchg
mov
cmp
fisubl
push
inc
scas
loope
bound
adc
fs
xor
jae
jno
sub
jae
int
negl
sub
xor
add
mov
lea
add
push
mov
inc
xor
sub
xor
mov
jecxz
lahf
push
add
test
pop
or
aas
push
or
or
sub
imul
in
push
and
push
ret
cmp
fwait
or
gs
dec
in
aaa
enter
in
add
cmp
cmpsb
out
js
test
dec
roll
fidivs
push
push
pop
dec
mov
mov
rcrl
pusha
push
sub
subl
cmpsl
arpl
dec
push
cli
ret
das
and
inc
sub
dec
pusha
xor
data16
mov
cwtl
adc
mov
push
call
loop
mov
movb
mov
dec
sbb
les
das
fucomi
aaa
mov
xor
mov
imul
add
push
gs
aas
or
xor
pop
sti
jae
push
inc
ret
and
xchg
pop
ljmp
dec
jp
clc
lret
jae
push
jno,pt
fwait
roll
cltd
jp
addr16
je
jl
int
adc
sub
xchg
pop
pop
lcall
or
pop
push
subl
fdivl
aas
cmc
mov
push
pusha
sub
lcall
decl
inc
call
out
shrb
aaa
jge
data16
test
loop
dec
sub
add
adc
sub
jns
dec
mov
mov
adc
stos
rclb
mov
rcll
jecxz
xchg
inc
push
inc
mov
movl
cmp
jp
iret
sub
push
ret
icebp
data16
stc
lods
push
mov
test
std
push
mov
jb
les
dec
and
adc
jg
maxps
call
cmc
test
fwait
aad
cltd
sub
xchg
movsl
pop
add
dec
adc
push
sti
movsb
scas
push
jne
push
loopne
faddl
cmp
dec
pop
adcb
aaa
test
and
jmp
jnp
shlb
sub
dec
dec
or
cmpps
ret
inc
sbb
andl
les
pushf
dec
popa
rcll
fucomp
pop
fisubrl
pusha
lret
xor
lret
insl
stos
stc
mov
sbb
lods
lcall
fstl
cmp
ss
jmp
shl
mov
xchg
ficomps
add
shll
mov
xchg
pop
mov
stos
add
stos
mov
cmpsb
aaa
inc
test
lahf
bound
aaa
sbb
sbb
in
xchg
adc
xchg
dec
sub
pop
rcrl
inc
clc
xor
and
int3
mov
push
pop
shlb
stos
mov
cmpb
jae
push
lea
xchg
rcrl
xor
ret
out
ret
add
mov
adc
fwait
sbb
inc
push
rclb
icebp
mov
xor
sahf
cmp
icebp
inc
xorb
dec
ja
cmp
testb
ss
jecxz
repz
sbb
leave
push
in
iret
jmp
out
sub
cmpsb
adc
in
movsl
cs
pop
inc
mov
xchg
xchg
add
push
into
sbb
nop
inc
pop
aad
ror
lea
adc
or
dec
add
repz
xlat
push
mov
mov
inc
mov
xchg
test
add
cmpsl
add
jbe
in
movsl
xor
ret
or
inc
mov
dec
mov
ret
dec
das
dec
mov
dec
pop
and
sti
and
aaa
cltd
jne
xchg
in
sub
bnd
sub
jmp
push
and
outsl
or
inc
cmc
dec
mov
scas
jmp
or
int
adc
mov
clc
and
jl
inc
push
or
out
push
iret
pushf
mov
mov
inc
fimull
lds
mov
rcll
mov
xchg
xchg
ret
cmp
ret
inc
or
xor
hlt
fstl
data16
stos
fcomi
jne
outsl
outsl
sbb
ja
push
pushf
aam
bound
repnz
pop
add
or
mov
test
cmp
mov
xor
cwtl
inc
hlt
in
movsl
gs
dec
xor
cmp
cmp
mov
add
add
push
ss
xchg
sub
addr16
rcrb
scas
jge
adc
pop
mov
into
arpl
addb
cltd
jns
mov
aam
int3
sub
cld
adc
stc
xchg
or
cli
js
test
xor
mov
xchg
pop
push
mov
fistpll
ss
mov
cmp
es
pop
adcb
xchg
das
adc
and
ja
adc
sbb
or
or
xor
xchg
in
pop
rcrl
xor
push
xor
insl
pop
or
mov
lock
inc
scas
arpl
sbb
arpl
test
inc
ret
mov
movsl
lods
push
pop
lret
cmpsl
mov
lret
xchg
in
test
nop
cmp
repz
mov
jp
fistpl
xchg
inc
aam
stc
dec
icebp
nop
mov
frstor
mov
mov
jmp
shl
xchg
pop
aam
pop
push
insl
daa
lock
mov
pop
cld
fs
dec
mov
les
mov
fisubrl
inc
xchg
xor
subl
sub
lahf
fldcw
and
cmpsw
push
inc
pop
sbb
dec
push
push
sub
ja
aad
std
add
sub
pop
outsl
and
adc
inc
lret
insb
fldt
lahf
inc
mov
stos
ret
sbb
push
sub
pop
jb
and
sbb
or
pop
cld
ret
shll
cs
stos
cmc
push
xor
dec
addr16
mov
or
into
dec
or
inc
lods
scas
adc
adc
sub
jbe
sar
daa
divps
or
stc
movsb
shll
mov
ja
pop
add
and
out
push
roll
mov
into
lea
dec
test
daa
dec
ss
jo
xchg
push
pop
data16
addr16
add
sbb
in
movsl
dec
add
push
mov
cmpsl
dec
loopne
hlt
arpl
add
push
lds
cmp
mov
lea
xor
testl
add
dec
xlat
div
mov
out
loopne
test
enter
push
xor
mov
pop
hlt
test
cltd
inc
push
adc
xchg
scas
pop
mov
sbb
pop
dec
xor
mov
mov
fidivrl
and
rclb
insb
jge
fildll
jmp
mov
add
in
sub
mov
cld
notb
sti
jb
cs
icebp
jb
aad
xorb
lock
addr16
inc
jnp
jge
sub
insl
sub
dec
pop
push
repnz
lret
mov
lret
stc
lret
xlat
lret
out
ret
jp
insl
mov
inc
mov
mov
pop
cmpsl
test
sub
xlat
jmp
je
push
mov
push
filds
outsb
cmp
repnz
pop
cmpsl
sbb
cmp
and
sub
mov
lahf
mov
in
into
ljmp
std
lahf
mov
pop
popf
mov
cmp
xorb
cmp
cs
jae
lcall
lods
les
mov
xorl
cli
int
jb
mov
adc
dec
inc
jno
xor
xchg
push
cmp
das
filds
mov
addr16
shll
je
lahf
xchg
rol
sbb
sub
add
jg
ss
cmovns
cltd
outsl
add
enter
call
dec
bound
or
daa
add
add
inc
dec
xchg
pushf
xchg
repnz
mov
xchg
dec
mov
xor
bound
mov
fwait
push
inc
dec
loopne
or
test
xchg
jb
cmp
pop
pop
or
scas
outsl
sarb
and
pop
in
push
ljmp
fisubrs
push
jns
movsl
cltd
jo
std
inc
or
xchg
lret
cmp
adc
cmp
xchg
divl
test
xor
adc
adc
add
into
repnz
hlt
inc
mov
adc
dec
inc
jb
int
dec
mov
sbb
mov
leave
aam
mov
and
jmp
insl
pop
rclb
addl
push
fnstsw
loopne
sub
inc
movsb
xchg
xchg
out
xchg
jne
ss
fimuls
aam
fidivrs
and
or
or
sbb
add
imul
test
jp
dec
mov
addr16
push
es
shll
dec
add
inc
test
add
cmp
sub
adc
les
shrb
pop
cmc
fidivrs
loope
iret
mov
jns
test
aas
fildl
notb
push
mov
test
insl
jo
cmp
pop
or
dec
sbb
ffree
nop
ljmp
lds
push
outsb
dec
stos
fistpl
push
mov
mov
inc
mov
inc
stos
inc
loopne
stos
test
push
and
cmp
pop
mov
mov
mov
andb
scas
repnz
call
cli
sbb
stc
pusha
stos
test
mov
push
cmc
xchg
or
xor
cmp
testb
pop
inc
insw
loopne
mov
xlat
mov
xchg
dec
nop
xchg
fnstsw
cltd
mov
in
mov
fmull
pop
lods
inc
call
sub
xchg
jns
xchg
dec
in
push
add
nop
mov
arpl
out
and
std
out
cbtw
add
out
enter
xor
psubd
icebp
xor
push
call
lds
test
adc
xchg
in
jle
test
inc
movsb
jae
xchg
stos
das
jge
push
pop
add
or
pusha
jle
dec
dec
nop
lods
in
mov
xchg
adc
insl
shlb
mov
jnp
daa
cli
stos
std
fcomip
adc
je
pop
mov
fimull
push
ljmp
out
sbb
lds
push
ja
out
jbe
andl
or
jnp
pop
insb
fmull
in
shlb
jecxz
cltd
cld
lods
outsb
push
sub
fstpl
mov
xlat
cmp
and
mov
test
jae
mov
mov
mov
push
jb
mov
sbb
fstl
mov
cli
clc
ret
fistl
mov
cld
jne
or
xchg
movsb
test
fcoms
mov
ret
sub
sbb
sub
and
addr16
pop
or
cld
sbb
jl
mov
cmc
xchg
add
dec
movsl
cmp
push
inc
cmpb
mov
push
aaa
lock
mov
pop
cltd
cmp
or
inc
jno
aad
insl
insl
pop
or
stc
cmp
or
movsb
ds
arpl
fwait
dec
add
nop
push
push
adc
xchg
stc
dec
in
pop
fldcw
mov
dec
mov
and
jns
js
dec
das
loope
mov
push
cmc
or
or
adc
cld
sbb
jnp
mull
popf
shlb
std
shll
pop
inc
sahf
inc
add
pop
mov
loopne
insl
push
out
leave
nop
scas
dec
aad
outsb
out
enter
cwtl
sub
cmc
xchg
jno
push
aas
ret
mov
mov
push
insl
test
test
inc
gs
lods
adc
fiaddl
cmp
jp
mov
mov
inc
rol
fistl
mov
rcr
cmc
notl
ret
jl
jns
pop
les
add
xor
pop
test
shl
nop
ror
mov
mov
xchg
dec
lea
push
lods
pusha
mov
cmp
xchg
test
subb
mov
das
cltd
inc
mov
pop
into
and
or
adc
adc
iret
xor
inc
and
dec
into
mov
inc
cmpsb
mov
test
mov
rclb
xorl
ret
mov
lods
jo
dec
lods
aad
fdivs
and
popa
cmp
and
xor
popa
or
fildl
imulb
push
mov
ja
pop
sbb
nop
je
pop
push
aad
sub
jmp
xchg
pop
inc
jecxz
ffree
lock
push
arpl
adc
mov
mov
mov
pop
xchg
enter
or
daa
push
outsb
js
ja
or
outsl
test
push
lcall
popa
enter
xor
imul
in
sub
jmp
or
sbb
cmc
into
push
ffreep
lds
cld
icebp
xchg
daa
in
lds
fdivp
mov
and
in
loope
cmp
iret
pop
scas
pop
loopne
fsubl
jl
jmp
dec
xor
fadds
mov
pavgw
or
pop
or
leave
lcall
and
sub
fstl
mov
clc
push
xchg
or
pushf
jmp
addr16
adc
addr16
mov
out
out
aas
lcall
jg
push
ljmp
or
aas
xchg
std
cmpsb
mov
mov
cwtl
roll
sbb
rolb
cltd
ds
test
inc
test
call
rorl
imulb
loop
inc
rcr
pushf
lock
pop
mov
enter
and
movsb
mov
xor
mov
xchg
and
lcall
pop
or
jge
jmp
add
imul
cmpsb
fs
test
sub
out
add
jl
movsb
or
out
fwait
mov
das
add
scas
filds
dec
arpl
cmp
jae
fsub
xor
stos
ret
pusha
dec
imul
clc
cmpsb
dec
xor
sub
testl
pusha
lahf
addr16
mov
inc
insl
push
lcall
pop
or
out
jge
mov
add
fs
stos
push
xchg
xchg
test
push
ret
push
jp
mov
test
clc
gs
xor
xor
add
mov
notb
lret
mov
repnz
fistps
mov
subl
pop
ss
cmp
jae
push
pop
repz
pop
and
xor
out
fcomip
scas
jo
cmp
push
push
sahf
loopne
ljmp
ja
and
sbb
and
out
push
pop
jne
pop
mov
and
add
jle
and
pop
push
notb
adc
xor
push
push
and
mov
pop
test
xchg
js
jne
xor
sub
jle
loope
insb
pop
out
aam
add
lods
jle
ja
mov
into
jp
sbb
mov
mov
iret
std
outsl
cwtl
fadds
push
repz
insl
call
fcmovnbe
xchg
sub
lcall
push
xor
jnp
add
mov
shr
test
mov
out
stc
jp
push
cmpsl
daa
sub
inc
gs
cmpsb
xor
cmp
fistpll
out
inc
test
xchg
dec
cli
xchg
cmpsb
ljmp
inc
addr16
movsb
push
js
mov
shlb
xor
jno
es
hlt
push
faddl
mov
or
add
sub
push
das
inc
roll
lock
sahf
jmp
test
shlb
mov
inc
rolb
sub
scas
jp
cmpsb
pmulhuw
inc
imul
std
repz
es
lods
xchg
pop
in
fmull
jle
or
aas
cmc
cltd
xlat
icebp
xlat
call
inc
push
xchg
pusha
gs
push
jae
add
mov
fisubl
cmp
fisubl
ljmp
stc
jl
mov
jg
imul
mov
dec
test
adc
test
push
and
cmp
lds
or
add
rcr
mov
orl
fisubrs
rcrb
and
add
xor
movhps
mov
jno
jmp
mov
mov
fmull
popl
lock
sti
push
pusha
enter
push
imul
sub
xor
xor
stos
xor
mov
xchg
xchg
aas
adc
sahf
pop
push
mov
and
int
pop
pop
inc
stos
lds
mov
xor
jne
push
aas
not
and
or
push
sbb
rcr
lods
fmulp
add
add
adc
inc
adc
xor
pop
adc
ret
xchg
jge
xchg
cmp
mov
call
ror
pop
push
aad
iret
jno
aad
jae
cmpl
fldenv
adcb
insl
cmp
mov
cmc
clc
out
inc
cmp
mov
sbb
notb
and
int3
push
mov
inc
xchg
aam
iret
pop
jle
push
jmp
push
fwait
push
lahf
call
movsb
js
jl
sbb
data16
dec
or
or
push
mov
popa
add
insb
mov
into
mov
dec
lea
cmpsb
pop
mov
stc
popa
inc
inc
lret
int
call
repnz
inc
adc
adc
pop
das
fs
add
fnstenv
adc
aad
loop
inc
std
mov
icebp
xchg
jns
jge
ftst
xchg
imul
imul
cmp
cwtl
pushf
jae
cltd
xchg
les
adc
cmpsb
jle
lret
test
pop
jbe
adc
mov
dec
arpl
lret
imul
dec
xor
jb
mov
sbb
int
dec
rcrb
mov
xchg
adc
xchg
in
shll
loope
fdivrp
dec
jecxz
mov
int
nop
cld
test
jl
or
fmul
pushf
sahf
mov
cwtl
pop
arpl
mov
jp
jae
xor
lock
mov
in
ljmp
fwait
push
loopne
push
fstpl
mov
pop
inc
stos
add
inc
pusha
scas
dec
add
xor
pop
mov
scas
jmp
movb
ret
shlb
xlat
xchg
push
jnp
xchg
sub
rolb
xchg
test
repnz
out
xchg
pop
dec
mov
enter
push
aaa
mov
aaa
mov
bound
mov
lds
ljmp
lret
pop
and
mov
xchg
stc
inc
or
test
mov
insb
je
mov
or
negl
fcmove
adc
mov
push
jne
lds
xor
js
loope
jmp
fidivs
mov
mov
cmpsl
cmp
add
rcl
cli
mov
sbb
das
popa
and
dec
push
outsb
jecxz
inc
imul
stos
cmpsb
data16
leave
nop
adc
fs
jecxz
jno
mov
repz
lock
leave
push
arpl
pop
push
sar
fistps
fildl
adc
xor
std
int3
hlt
dec
inc
aad
sti
fsubrs
push
subl
xor
sbb
jo
xchg
cmp
mov
mov
cld
movsl
lods
adc
push
lods
bound
cwtl
adc
xchg
cmp
cmp
out
imul
shrb
cmp
mov
xlat
sub
dec
mov
mov
bound
or
jg
xchg
bound
fstpt
mov
sbb
stos
sbb
cmc
loope
aad
sbb
shl
push
adc
lahf
ret
repz
mov
inc
push
stc
dec
dec
dec
sbb
addr16
jno
test
test
fucomi
pop
cs
jmp
xchg
xchg
ret
sub
push
jg
int
sbb
test
cltd
scas
popf
lahf
or
sbb
mov
xor
dec
mov
mov
sahf
inc
gs
dec
out
push
dec
and
jge
js
fmul
jno
dec
mov
fdiv
ds
or
and
enter
loopne
adc
adc
js
inc
mov
fstps
push
xchg
sahf
jl
pop
mov
bnd
fimuls
mov
sahf
inc
lea
inc
icebp
xor
repz
mov
mov
enter
sbb
add
setb
das
mov
xchg
shl
mov
ret
in
dec
xchg
sub
mov
xchg
cmp
stc
sub
dec
cmp
xlat
ret
mov
js
jb
cmp
cmp
add
or
cmp
int
xchg
or
mov
fiaddl
mov
bound
pop
jge
aas
call
cltd
mov
mov
nop
pop
or
cmp
test
pop
rolb
inc
and
cli
sbb
pop
adc
sbb
and
mov
mov
sub
xor
lods
xchg
fs
shl
popa
je
inc
lret
scas
leave
jns
arpl
les
mov
leave
aad
sub
sbb
mov
and
xchg
mov
cmp
scas
imul
cltd
icebp
ret
and
jmp
and
shll
insb
and
inc
jg
ret
jae
cmpsb
adc
scas
out
push
or
outsb
pcmpgtd
xor
test
and
dec
cmp
cli
mov
mov
mov
xor
or
add
mov
mov
cmp
xlat
sub
test
mov
shrb
pop
daa
mov
adc
pop
cmpsl
pop
mov
sbb
mov
adc
aas
dec
mov
popa
sbb
cmp
pop
out
cmpl
and
jl
dec
roll
outsl
fs
inc
pop
jae
xorb
lret
sub
inc
or
pop
cmp
xchg
test
cmp
cmpl
cmc
sbb
mov
lret
sbb
adc
inc
pushf
scas
xor
dec
aam
cwtl
pop
jg
mov
repnz
sahf
sbb
and
mov
xchg
dec
xor
insl
js
inc
or
stc
pop
jl
sub
in
cmp
nop
xor
sub
out
shll
scas
inc
cmpsl
dec
mov
mov
cmp
push
test
lret
sbb
xor
xor
out
jmp
dec
fstpl
mov
pop
lock
addb
jo
sub
icebp
jp
jecxz
xor
out
mov
and
inc
fwait
lcall
mov
ss
imul
sub
add
pop
popf
out
push
inc
xor
aam
jns
stos
inc
push
loop
out
mov
adc
sub
xorb
les
cmpsl
mov
or
jle
add
xchg
dec
inc
stc
jp
ds
mov
inc
test
rolb
mov
push
xlat
out
inc
dec
ficoml
mov
inc
int
mov
and
out
and
mov
ret
mov
negl
or
push
sub
mov
cmp
filds
pusha
movsl
dec
into
or
aaa
jne
xor
aad
cmp
test
jo
jg
mov
cmpsl
inc
movsb
adc
xor
or
sub
dec
cwtl
bound
mov
ljmp
ficomps
adc
out
scas
mov
sti
push
jmp
sahf
and
adc
mov
scas
push
scas
add
mov
int
ror
adc
mov
dec
testl
notl
mov
int3
xchg
cs
loop
cld
or
and
out
gs
int
dec
or
fmuls
out
lods
movsl
push
mov
repz
cltd
fs
aam
stc
or
mov
inc
xor
push
adcl
push
hlt
in
je
sbb
sti
aam
mov
dec
mov
sbb
push
adc
xchg
push
mov
pop
pop
stos
cwtl
js
repz
lea
dec
jl
mov
sti
fsubr
lcall
push
add
xor
pop
mov
pop
cmp
cmp
xchg
adc
std
imul
fs
sub
pandn
and
pop
es
inc
push
pop
aad
mov
lods
shl
pop
sti
mov
xlat
pop
fstl
pop
or
xchg
outsb
cmp
lcall
push
mov
sarb
inc
addr16
push
push
lods
lcall
mov
mov
leave
sbb
jmp
lahf
into
jne
mov
fbstp
adc
adc
or
jno
fdivs
hlt
adc
clc
pushf
shrl
lret
and
cmc
and
cli
xor
aas
fistps
popa
lds
or
lret
mov
mov
cld
dec
and
add
xor
xchg
loope
pop
pop
xor
cmp
mov
mov
dec
mov
lods
sbb
jne
pop
arpl
int3
add
pop
xchg
cmc
leave
gs
jecxz
jns
pop
mov
outsb
mov
notl
pop
and
pop
into
loop
arpl
adc
outsb
jge
jp
imul
or
nop
pop
mov
jbe
test
jbe
push
insb
popf
push
jnp,pn
jecxz
cmp
inc
fsincos
inc
xor
mov
xchg
xor
mov
and
mov
push
movsb
fisttpl
xor
push
xor
push
cmpsb
and
js
mov
adc
and
stos
out
push
out
cli
aad
add
sub
out
lods
adc
push
call
push
cltd
insb
out
fcomps
dec
jle
jnp
pop
in
loope
insb
inc
enter
lahf
sar
or
pop
icebp
es
mov
les
incb
fnsetpm(287
dec
mov
cmp
aam
xchg
mov
adc
or
lds
lds
shrb
lret
xchg
sbb
mov
inc
cli
jmp
jb
xor
sbb
sbb
aad
lcall
ds
cwtl
repz
mov
pop
fsts
and
pop
hlt
xor
xchg
cmc
hlt
out
and
sub
add
cmpl
cmc
movsl
fwait
push
push
sarb
sub
cltd
inc
sbb
jecxz
jb
and
mov
popa
sbb
add
lahf
sub
fcomip
js
adc
in
jne
hlt
outsl
cmp
sub
aam
loop
mov
imul
rcrl
cmp
xchg
fidivrl
rcrb
lcall
jno
xor
ljmp
sti
mov
pop
dec
icebp
dec
movb
aam
stos
add
rol
in
outsl
cwtl
jno
aaa
outsl
pop
mov
mov
pop
sar
sub
dec
mov
add
sbb
outsb
and
pop
jp
inc
ss
jmp
mov
xchg
cmpsl
lods
rol
sbb
lret
cs
sub
test
inc
or
jne
push
negb
aad
inc
or
mov
cmpsl
ror
push
xchg
push
mov
xchg
mov
les
lock
mov
into
test
imul
scas
xor
loop
arpl
sbb
pop
pushf
idiv
rcrb
outsb
shrl
aam
jae
scas
daa
push
push
mov
cli
sub
mov
adc
das
ffree
es
pop
dec
sbb
adc
add
negl
push
mov
sub
jge
mov
dec
fdivrs
aad
das
repnz
xchg
outsb
stos
inc
inc
lcall
inc
add
dec
jg
aam
sub
repnz
aam
fs
cld
call
hlt
jmp
mull
sbb
mov
mov
scas
loop
movsl
subb
xor
lds
add
lock
fisubs
aam
ds
push
mov
test
jae
loop
outsl
and
cmp
popf
faddp
mov
je
push
inc
lods
xchg
adc
leave
cmc
jle
cwtl
or
mov
addr16
je
and
lcall
sbbl
pop
inc
mov
push
sbb
repz
pushf
daa
xchg
sahf
sti
dec
adc
cmp
in
adc
xchg
pop
lds
fdivl
rsm
mov
pop
push
push
inc
pop
je
sbb
mov
push
xor
pushf
les
orb
sub
loopne
or
xor
mov
mov
clc
outsl
jmp
gs
xor
push
movb
cmpsb
cmp
cmp
mov
jo
or
rolb
mov
mov
test
adc
stos
adc
nop
sarl
push
mov
dec
sbb
rol
pop
icebp
jnp
test
fsts
addr16
insb
mov
imul
inc
jmp
fstpl
lret
lods
and
mov
pop
adcb
pop
pop
aad
imul
inc
popf
pop
in
mov
mov
cld
mov
test
out
in
pop
adc
xchg
add
push
pusha
sub
mov
data16
xchg
sub
sbb
inc
cwtl
jp
sbb
lahf
inc
add
ret
or
pop
in
sar
jo
jnp
nop
add
mov
loop
fcmovnu
shlb
push
call
sbbb
xchg
ss
fst
mov
push
test
gs
inc
cmp
into
fdivl
xchg
sbb
mov
and
inc
mov
push
aas
loop
and
dec
fwait
dec
fistpll
inc
push
inc
iret
mov
dec
fwait
fwait
jnp
mov
pop
data16
jl
int
mov
inc
inc
and
imul
ja
adc
jmp
out
fldcw
int
icebp
test
test
fbstp
das
or
pop
push
into
push
enter
jp
push
adc
stc
pop
cld
mov
fstpt
jne
mov
dec
xor
push
scas
jae
js
jmp
dec
xlat
gs
mov
and
js
mov
test
fucomi
push
imul
in
lods
aaa
or
sbb
ss
sarl
pop
popf
mov
repz
fwait
cmp
sub
sbb
mov
mov
mov
mov
sahf
add
ret
adc
xor
push
cmp
divl
adc
pop
scas
push
dec
test
mov
cmp
outsl
pop
pop
rcl
lret
hlt
ja
test
je
icebp
cmp
mov
outsl
adc
or
fsubp
mov
xchg
ljmp
test
jmp
jno
xor
rcr
add
mov
xchg
mov
outsb
int3
outsl
add
push
test
loope
dec
push
icebp
sub
adcb
insl
fsubrs
out
or
popa
mull
sub
jbe
das
dec
pop
fcomps
rcrl
ja
bound
jge
addb
pop
jge
or
cmp
int
and
cmp
insb
jne
mov
jmp
cmp
fwait
or
fcoms
pusha
sub
xchg
addl
cmp
mov
dec
cld
inc
je
pushf
cmpb
ret
xor
fsubr
lahf
repz
cmp
xchg
add
jnp
jbe
pop
and
push
in
out
int3
xor
or
hlt
dec
cwtl
fstpl
out
test
pushf
pop
inc
sarl
ds
and
add
dec
bound
and
mov
gs
push
aaa
push
loopne
les
dec
adc
inc
mov
push
sbb
test
lods
pop
test
jae
movsl
pop
aaa
jg
mov
sahf
cmp
dec
pop
push
mov
stc
xchg
fs
cmp
lods
mov
cli
bnd
scas
inc
lods
bound
add
imul
daa
jle
inc
sub
jo
pop
lods
xchg
xor
lcall
fs
stc
mov
sbb
cli
push
dec
aaa
fbld
xchg
adc
push
test
or
out
xchg
and
dec
dec
.byte
.byte
sbb
add
mov
es
mov
lock
mov
cmpsl
iret
sbb
rorl
in
int3
xlat
jmp
pop
or
in
lret
iret
cmp
scas
sub
fisubs
lret
cmpsb
int3
aam
push
jnp
xchg
arpl
call
dec
and
sbb
dec
jl
sti
or
jb
sti
outsb
push
pusha
xor
xchg
gs
call
inc
in
enter
adc
ficoml
adc
xchg
cwtl
add
aas
xlat
jecxz
or
aaa
fstpl
nop
mov
outsb
jp
add
icebp
cmc
pop
mov
cmpsb
aas
cltd
mov
jl
ficoml
push
mov
xchg
ljmp
inc
mov
mov
ret
pop
push
es
lret
push
leave
jnp
pop
inc
sbb
filds
mov
jg
xchg
nop
scas
js
jbe
xor
xor
cmpsl
xchg
cmp
mov
cmp
mov
imul
fs
adc
sub
addr16
mov
mov
les
and
push
sbb
testl
dec
and
movsb
mov
mov
xchg
or
rcll
out
pop
cmp
mul
push
xor
into
jae
xor
push
scas
pop
scas
dec
ror
cs
jne
pop
jnp
xor
inc
test
addl
push
pushf
jno
push
adc
addb
sti
jl
pop
fwait
imul
fiaddl
mov
fimuls
cmp
mov
lcall
nop
mov
jl
jb
or
test
push
adc
sahf
mov
pusha
sti
sub
rcl
and
jle
sub
push
daa
int
aam
mov
std
inc
nop
shll
sbb
shl
mov
inc
ret
jmp
push
bound
in
stos
notl
jg
pusha
xchg
iret
outsl
jb
fsubr
loopne
insb
movsb
out
int
icebp
lock
cltd
icebp
mov
in
hlt
enter
in
addr16
mov
sarb
cmp
ret
sub
mov
aaa
add
push
and
sub
mov
js
dec
outsb
and
cwtl
or
inc
lret
std
cmp
jns
jmp
fmuls
mov
int
ret
and
loop
out
or
leave
pop
test
fmull
jo
pop
adc
mov
push
ffreep
push
mov
mov
inc
fstpl
and
sub
jge
adc
xor
sub
and
xchg
and
inc
dec
ret
or
jmp
loop
pop
sub
mov
inc
jmp
and
outsb
dec
push
dec
add
int
xor
sbb
jge
loop
cmpsl
sub
inc
cmpsb
fldcw
aaa
pop
testl
mov
das
pop
sbb
stos
aam
popa
jb
mov
subl
inc
pop
repnz
popf
jle
leave
mov
sbb
loop
sti
mov
nop
sub
cmp
rcrl
movsl
push
jge
pop
int3
aad
mov
or
mov
mov
push
pop
cwtl
imull
lds
sbbl
jne
jge
pop
movsl
sbb
adc
mov
in
stos
jno
mov
cld
jge
sbb
ljmp
cmpsb
ffreep
js
cmp
mov
sahf
addr16
pop
push
xchg
aam
mov
mov
cmp
cltd
lcall
sub
push
add
mov
rcr
xor
dec
cli
mov
mov
filds
pop
xor
cmp
gs
jo
jnp
mov
aaa
addr16
mov
adc
add
sub
ret
pop
aam
fsubrl
subl
mov
out
cmp
neg
sub
adc
mov
mov
sub
xlat
adc
or
not
jp
lock
repnz
jl
adc
outsb
addr16
imul
popa
fldt
cwtl
outsb
fadd
sub
imul
icebp
dec
pop
jle
fs
xchg
cmp
mov
imul
lods
lods
mov
test
xchg
aas
sub
pop
jnp
mov
icebp
cmc
dec
mov
pop
lods
sti
int3
dec
sbb
out
sbb
sti
mov
mov
call
dec
sbb
xor
imul
or
gs
inc
pop
in
lret
out
pop
xor
data16
sbb
les
dec
mov
inc
mov
test
mov
leave
es
or
mov
pop
add
fists
xchg
mov
cmp
cs
insb
push
int
push
stos
dec
lahf
orb
inc
daa
adc
pop
ds
pusha
int3
and
xchg
in
das
add
sbb
iret
inc
insb
cltd
inc
dec
mov
stc
dec
call
fisubrs
pop
lods
mov
xchg
dec
lea
sbb
sti
rcl
sahf
enter
sbb
fisubrs
pop
and
jp
jbe
push
and
int3
popa
mov
jg
push
pushf
cmp
mov
inc
pop
ficomps
inc
pop
xor
repz
popf
mov
inc
fisubrs
push
dec
jp
inc
dec
out
add
push
and
stos
xchg
pop
xchg
jne
imul
pop
jl
pop
ljmp
in
vandps
jge
mov
sbb
ficompl
imul
in
add
jge
fadd
lcall
push
fildll
mov
adc
lcall
jmp
sbb
adc
inc
lahf
pop
shlb
pop
push
xchg
pop
and
jne
divl
and
push
mov
popf
xchg
int
adc
sub
hlt
mov
hlt
aam
xor
pop
pop
xchg
sbb
iret
mov
pop
xor
out
aaa
mov
jg
pop
push
mov
daa
push
mov
cs
dec
push
or
sbb
loop
inc
ret
enter
mov
dec
or
mov
jne
cmp
add
lcall
push
cmp
ret
xchg
add
jp,pn
enter
pop
mov
xchg
mov
cltd
dec
mov
pop
cmp
out
xlat
sub
jmp
cmp
xchg
jl
xor
hlt
cmpsb
fcmovnu
sti
xchg
pop
fs
jae
xchg
andl
ret
adc
fistps
jg
cmp
movsb
mov
cmpsl
and
adc
fs
sub
in
push
rclb
scas
dec
out
inc
cmp
out
mov
xchg
cli
call
cmpsl
cwtl
push
leave
push
scas
xor
mov
mov
pop
les
es
outsb
mov
sbbb
mov
stc
and
dec
xor
lods
in
mov
xchg
xchg
xor
push
pop
jo
ja
mov
and
mov
pusha
pop
add
jl
cmp
sbb
loopne
das
jo
pop
sub
cmp
jmp
scas
add
dec
xchg
int
xorb
hlt
sbb
jns
push
std
add
dec
fcomps
cwtl
and
icebp
and
sub
mov
dec
sarl
adc
insl
ret
dec
push
jne
pop
ffreep
add
xor
ljmp
push
pop
mov
and
pushf
lret
add
aam
xor
inc
repnz
movsb
faddl
inc
lcall
movq
jb
fisubrs
sti
xchg
popa
scas
mov
loopne
pop
ja
push
push
movsb
dec
sahf
xor
xor
cmp
push
mov
sahf
pop
out
sbb
jae
mov
mov
fstl
push
aam
xor
pop
pop
les
and
cmp
test
and
mov
dec
test
fsts
shll
sbb
faddl
mov
hlt
stos
aam
ficoms
ret
jg
mov
xchg
sub
fxtract
lcall
insb
pop
cwtl
ror
repz
cmp
lods
or
lret
push
outsl
jecxz
add
xchg
callw
and
push
lret
lahf
or
pop
loop
dec
xchg
cld
push
les
mov
adcb
shlb
lea
cltd
push
jp
lock
mov
and
fcmovu
push
loopne
push
in
jae
sub
sarb
sub
pushf
pop
loope
repz
or
movhps
mov
cmp
aas
add
cs
mov
divl
mov
inc
cmpsl
mov
lcall
mov
mov
rcl
outsb
mov
jo
ffree
or
imul
xchg
dec
mov
gs
jecxz
pop
push
cmp
jle
xor
test
dec
cltd
add
dec
test
mov
and
test
dec
mov
arpl
push
adc
outsb
pop
jmp
repz
aaa
sub
add
mov
jae
lret
aas
pop
hlt
lahf
mov
out
and
aas
cs
mov
sub
mov
enter
lcall
sbb
adc
pop
movsb
mov
mov
mov
outsb
jge
sbb
data16
push
sub
push
or
iret
inc
ds
mov
jg
xchg
pop
and
dec
and
into
xor
xchg
call
das
inc
daa
pop
or
ljmp
pop
xor
inc
mov
push
inc
sarb
pop
jp
orb
adc
vmaxss
fdivrl
cmpl
stos
js
cld
pop
loope
cltd
sbb
pop
mov
mov
les
lret
in
xchg
or
mov
jne
mov
test
mov
push
sarb
jnp
fwait
mov
aad
add
pop
sub
sub
and
call
popf
add
rorb
stos
aad
pusha
out
fcoms
movsb
shr
dec
shll
pushf
dec
or
cmp
mov
sbb
mov
and
subb
push
loopne
jb
xor
sub
mov
adc
shl
repnz
xchg
pusha
pop
adc
mov
xorb
xor
dec
push
pop
les
pop
inc
lret
jo
adc
xchg
add
scas
mov
mov
int3
xchg
dec
mov
mov
pop
insb
sub
push
clc
mov
xchg
cltd
pop
fstps
out
pop
sbb
or
xchg
and
or
push
rcll
cmp
add
mov
insb
ss
in
loop
ss
pop
mov
shl
lahf
shrb
xor
jo
mov
cmp
clc
mov
mov
dec
dec
arpl
mov
mov
jb,pt
out
cmp
loopne
jmp
cld
ret
jno
mov
mov
jle
div
mov
int
jne
sbb
inc
loopne
pop
add
outsb
popf
push
mov
insb
mov
sub
pushl
cmp
mov
ss
aam
xor
lahf
dec
dec
jle
fidivl
push
jmp
xchg
adc
sbb
sub
out
outsb
ja
lcall
enter
dec
es
dec
pusha
push
xchg
pusha
sahf
push
stos
dec
push
adc
xchg
xchg
lret
mov
jno
movsb
call
xchg
dec
jno
inc
lcall
mov
xor
sbb
xchg
mov
int3
jge
ret
outsl
ss
mov
movsb
mov
outsb
sahf
mov
jmp
xchg
adc
jmp
push
jno
xchg
ret
push
rcrl
adc
cmp
mov
cmp
leave
in
adc
and
add
and
add
jecxz
cmc
push
add
push
mov
xor
cmp
mov
add
or
cs
lods
ror
sti
rolb
pop
adc
xor
pop
push
mov
or
loope
push
jns
sti
sti
out
inc
das
cmp
nop
insl
jl
bound
cmc
cmp
push
dec
insb
sbb
pop
mov
movsb
pop
repnz
add
fisttpll
xchg
or
push
mov
sbb
jg
ljmp
jmp
scas
call
mov
dec
xchg
mov
jmp
enter
paddusw
repnz
jle
imul
xor
mov
push
jae
xlat
mov
mov
push
push
insb
mov
xor
fwait
inc
xor
mov
nop
inc
aas
js
sbb
mov
jo
jb
xor
ljmp
lds
enter
fnstenv
sub
scas
adc
adc
stc
push
xchg
js
out
pop
push
xor
imul
out
sub
jno
jbe
ret
test
fcomps
xor
cmp
sarb
sbb
xor
mov
push
jo
lds
xchg
dec
and
leave
scas
push
and
gs
js
insl
mov
xchg
pop
ret
add
fs
stos
fiaddl
mov
jl
loop
pop
jnp
mov
lcall
mov
inc
stos
inc
fmull
nop
fadds
sub
cs
mov
jns
jle
stc
jne
in
dec
scas
clc
cs
loop
jnp
pop
xchg
stc
out
js
push
bound
dec
test
inc
js
mov
push
xchg
clc
ret
inc
bound
stos
sbb
int3
xchg
or
and
sub
xchg
sub
xor
dec
outsl
jmp
rorb
mov
push
push
push
xchg
xlat
dec
mov
fstps
xor
jl
ret
cli
popa
lods
sbb
mov
neg
push
aam
inc
xchg
add
test
lahf
or
cmpsl
cmp
pushf
lcall
inc
xor
sub
add
jecxz
lods
add
xchg
arpl
sub
sub
mov
ljmp
jae
aam
jb
fs
mov
adc
mov
xor
push
fcomi
sub
hlt
and
sub
test
mov
repnz
enter
push
and
lods
mov
inc
push
arpl
mov
sbb
cmp
fnstcw
out
jecxz
cmpsb
out
sub
test
iret
pop
mov
adc
mov
sti
push
cmp
cmp
mov
xchg
jp
dec
mov
lret
sbb
js
cli
sbb
push
int3
mov
cmp
stos
mov
xor
and
stc
or
jno
push
pushf
mov
jbe
dec
xlat
jg
mov
mov
les
popa
jae
mov
decl
mov
rcrl
pop
pop
mov
inc
push
jns
inc
push
jo
icebp
outsb
mov
mov
mov
fcomi
repz
sarw
add
xor
xchg
hlt
in
ror
inc
jns
test
inc
daa
mov
push
mov
into
bound
enter
lea
sbb
outsb
push
fs
js
sbb
adc
xchg
ret
jae
gs
leave
mov
lret
jbe
fidivrs
testl
incb
jg
je
push
push
cmpsl
push
in
inc
xor
sub
adc
ljmp
js
lcall
mov
jecxz
mov
in
outsl
inc
push
out
xchg
and
shl
jb
mov
mov
and
call
pop
lea
push
movsl
mov
in
cmpsb
push
and
adc
xor
fwait
out
mov
xchg
sub
clc
dec
push
leave
insb
mov
mov
pop
stc
sti
push
and
outsb
popa
cli
push
push
in
fs
sub
xlat
mov
cmpsb
push
call
pusha
addr16
push
sub
add
std
jecxz
mov
jne
xchg
mov
shrb
int3
ret
dec
push
or
xor
push
push
add
aad
xor
imul
jae
cmp
sbb
jo
loope
out
hlt
sub
mov
sub
sub
ret
popf
jg
pop
jns
clc
mov
aam
iret
hlt
sarb
mov
push
aaa
movsb
dec
adc
leave
lds
mov
jp
jecxz
jmp
jbe
xchg
clc
sub
mov
cmp
outsl
xchg
sarl
cmp
sahf
cmc
ret
mov
daa
and
mov
mov
mov
in
mov
pop
fdiv
sbb
push
andl
popf
bnd
jmp
in
int
movsb
outsb
push
pop
es
mov
cmp
or
mov
push
negb
test
in
test
aam
and
xor
sub
ds
pop
jo
dec
ljmp
je
shrb
test
es
addr16
out
rcll
fisttpl
xor
in
cwtl
ljmp
jne
inc
mov
mov
push
sti
std
stos
push
inc
imul
jo
dec
push
inc
add
repnz
pop
imul
push
mov
lret
or
lret
xchg
mov
lock
bound
outsl
sbb
pushf
sbbw
mov
inc
sbb
cmc
std
adc
scas
add
int
adc
xchg
mov
push
jbe
add
in
sar
add
addr16
mov
sub
push
pop
mov
bound
sub
rcll
cmpsl
fists
fldcw
shlb
mov
add
or
hlt
inc
inc
mov
and
clc
ds
push
js
xchg
xchg
stc
cmp
test
mov
test
movsb
and
out
mov
pop
cmp
push
or
xor
repz
push
adcb
or
push
enter
addl
loop
pop
or
test
mov
aas
xchg
sbb
pushf
xchg
push
cmpsl
jle
mov
outsb
lock
enter
dec
repz
dec
test
mov
lds
popf
cmp
stos
daa
fdivrp
les
sti
fildl
rcrb
cmp
loopne
xor
loopne
inc
sub
jae
mov
pop
mov
jae
xchg
cwtl
jg
add
lret
jg
lret
shlb
ljmp
insb
cltd
movb
in
imul
lods
nop
clc
xchg
lea
or
jbe
or
sbb
inc
test
jo
pushf
xor
popa
xchg
pop
outsb
xor
xor
aas
enter
inc
jae
add
jmp
adc
jecxz
and
xchg
xchg
loop
test
aam
push
insl
push
loop
and
popf
or
dec
cmp
push
sbb
ret
scas
mov
or
js
push
sti
or
pop
sub
jae
jb
mov
xor
and
lock
fld
rcrl
and
out
pusha
xchg
hlt
and
cmc
mov
test
sub
loopne
push
rcll
rolb
dec
jae
pop
mov
mov
push
fistpl
jge
mov
icebp
dec
aas
and
lcall
jge
lret
dec
lea
movntps
outsl
iret
scas
adc
sub
cltd
jmp
mov
movsb
xchg
jg
cmp
nop
outsl
aam
cmpsb
lcall
test
rol
cmp
ret
mov
jmp
stos
lret
pop
xchg
mov
mov
xor
jne
jp
rclb
int3
jl
fstpt
andl
cmp
inc
sbb
out
ss
push
mov
movsl
cli
push
sbb
ret
std
dec
lods
jae
push
test
ja
fcoms
mov
or
insl
jno
mov
add
sub
sub
loope
jns
in
ret
xor
mov
push
xchg
jbe
or
pop
xchg
lret
outsl
dec
lock
sbb
pop
xor
ret
inc
adc
jns
in
and
sti
jb
bound
sub
cmc
mov
add
pop
imul
push
adc
push
push
sbb
je
adc
or
push
push
js
andb
fs
outsl
imul
sarl
inc
jecxz
jmp
add
fcoms
and
jle
xchg
dec
iret
pusha
imul
fiadds
push
aam
mov
dec
dec
mov
movsl
call
hlt
pop
sub
mov
cmp
cmpsl
out
xor
mov
or
fidivrl
add
cltd
push
or
cmpsl
test
cmp
push
adc
push
jg
fisttps
add
pop
dec
xchg
jge
xor
lret
dec
mov
enter
jbe
das
add
cld
dec
flds
jg
out
mov
and
aam
and
jl
ja
mov
cmpsl
sbb
out
push
push
sbb
mov
xchg
add
cli
sub
shlb
pop
js
scas
or
adc
mov
lds
out
push
ret
cmpsl
push
negl
fdivrl
lds
xchg
push
out
imul
cld
xor
call
dec
mov
xchg
les
or
mov
adcl
shll
cmp
xor
mov
cmp
mov
ja
mov
loope
std
pushf
in
mov
sbbb
inc
movsb
xor
aam
bnd
insb
mov
mov
aas
sub
and
push
mov
clc
sarl
call
mov
sti
mov
in
loop
pop
ret
add
adc
inc
mov
dec
adcb
cmp
pop
mov
pop
pushf
sahf
mov
push
adc
popf
xchg
dec
cmp
loop
test
sub
xchg
xchg
shrl
js
cmp
popa
sub
pop
shr
mov
roll
pop
adc
and
mov
int
push
enter
bound
sub
sarl
dec
mov
fstpt
or
arpl
fisttpll
gs
aam
push
jns
mov
loope
add
xchg
pop
outsl
pop
mov
adc
sub
sub
sbb
inc
hlt
adc
shrl
mov
in
shll
cwtl
das
ljmp
or
mov
int
jecxz
jnp
orl
dec
imul
xchg
rsm
dec
rorb
repz
dec
pop
and
xchg
mov
fdivr
xchg
xchg
in
dec
jg
xor
rcll
pop
push
xchg
or
jo
pop
sbb
sub
mov
out
lret
insb
sub
daa
push
xor
lret
adc
and
lahf
push
sub
fimull
negb
xchg
adc
pop
sbb
movsb
xchg
mov
imul
fidivrs
adc
adc
pushf
jno
test
inc
pushf
jb
mov
jno
mov
je
push
inc
inc
jbe
imul
fwait
push
loope
xor
icebp
inc
test
decb
pop
xor
imul
inc
mov
and
mov
iret
push
out
fs
jne
repz
rol
ret
lods
cmpsb
into
cmp
xlat
out
pop
dec
ret
jb
add
pusha
fstl
shll
aas
and
inc
fstl
jge
cmpsl
into
sub
pop
popa
cmp
or
dec
mov
inc
jmp
imul
mov
or
outsl
pop
cmpsl
cmp
je
icebp
mov
mov
mov
mov
js
or
and
dec
inc
or
xor
dec
cli
decb
iret
sbb
les
mov
scas
rclb
and
mov
cmp
or
pop
gs
sahf
xchg
adc
dec
imul
fucomp
jecxz
adc
scas
dec
shl
data16
repnz
int
or
mov
push
jnp
fwait
sti
out
in
les
aam
stos
test
add
adc
fnstenv
cltd
cmpsl
xchg
bound
pop
lcall
dec
sub
jmp
add
dec
into
mov
jmp
jmp
daa
shrl
sbb
bnd
ljmp
mov
cmc
sub
mov
jb
pop
push
loope
mov
mov
inc
pop
aam
sahf
movsb
pop
mov
or
mov
jae
or
inc
imul
cmp
jbe
rcrl
cli
cmp
xchg
into
repz
jae
inc
ljmp
inc
mov
jns
cld
dec
fdivrs
in
daa
or
outsb
jb
jne
dec
shrb
xchg
imul
std
stc
stc
adc
mov
je
aaa
jge
decb
imul
pop
push
insl
inc
shll
dec
insb
sbb
pop
push
cmp
or
sahf
test
or
fsubl
mov
jecxz
mov
out
jbe
dec
add
pop
dec
jns
inc
clc
xor
push
push
jp
mov
add
lret
popa
nop
outsl
lret
mov
jmp
idivl
lahf
sti
push
filds
dec
stc
push
loope
xchg
mov
pop
in
int3
dec
mov
or
idivb
jo
mov
xor
add
pusha
cltd
xchg
dec
das
notl
dec
es
pop
std
dec
push
lods
push
jl
adc
xchg
dec
pop
andb
lret
fimull
mov
les
adcl
mov
jae
lods
imul
cmc
sub
dec
jb
inc
cmp
fwait
aas
xchg
and
push
cwtl
arpl
outsb
shlb
pusha
mov
popf
lds
push
inc
mov
xor
mov
dec
add
sbb
mov
sbb
movsl
xchg
aas
push
andl
cmp
pop
scas
jecxz
inc
and
jns
dec
lea
fcompl
mov
cmpsb
test
lahf
sub
xchg
enter
out
push
adc
pop
cmp
mov
in
mov
push
pop
movsl
xchg
mov
push
iret
ljmp
sub
subb
xchg
aam
test
fnsetpm(287
cmc
lcall
fldz
test
adc
cmp
adc
fcmove
or
add
testb
mov
aam
jno
add
jo
mov
imul
sub
mov
in
aas
mov
sub
scas
jl
int3
mov
push
sarb
inc
pxor
inc
mulb
out
jne
ret
call
push
ss
push
insl
ds
push
lcall
xchg
jmp
xor
dec
mov
stos
lret
fwait
shrb
repnz
xor
cmp
lods
and
dec
add
mov
loope
push
ret
mov
sbb
rcrl
or
js
and
cld
out
push
adc
push
sahf
scas
sub
adc
jo
cmp
sti
fnstcw
pop
or
fsubrs
mov
cmpsl
sbb
mov
std
cli
inc
scas
ljmp
inc
push
inc
cmc
cmp
fs
and
dec
inc
push
sub
lcall
sti
and
xor
push
out
adc
fs
ret
aas
xor
test
xchg
and
sub
rcrl
das
mov
inc
inc
adc
sub
or
xorl
or
xchg
sbb
pop
dec
and
jle
jns
sti
mov
xchg
cmp
add
icebp
out
popa
or
jp
dec
push
out
cli
add
add
mov
pop
shrl
jge
cs
jmp
xlat
icebp
cmp
mov
jns
pop
jnp
std
fstpl
sbb
lock
popf
lahf
mov
pop
lods
ja
push
lahf
sub
es
cltd
and
sub
or
mov
sbb
or
xor
jge
mov
pop
pop
push
cwtl
leave
sarl
xor
test
jns
cmp
std
les
sub
sub
fidivs
ret
imul
popa
and
aam
xchg
pop
in
xor
in
je
das
int3
sub
mov
jns
insl
mov
rcr
mov
loopne
add
test
sbb
outsb
stos
in
mov
push
cli
mov
fistpl
pushf
ret
mov
inc
jno
rorb
iret
fists
mov
or
sub
pop
add
sub
icebp
sub
sub
add
inc
mov
xor
es
repz
adc
addl
loop
and
insb
sbb
sbb
pop
les
and
add
xorb
jnp
aad
leave
dec
mov
sti
adc
std
jne
mov
dec
jmp
mov
mov
inc
or
pop
loopne
mov
inc
mov
cmp
shl
ss
mov
sahf
int3
jecxz
mov
inc
jmp
jb
ror
and
xor
add
ficoml
dec
push
sti
aaa
insl
mov
mov
or
test
dec
push
cmp
push
imul
cmpsl
test
cld
hlt
jnp
inc
jno
dec
js
imul
xchg
loope
jp
push
mov
xchg
and
insb
mov
mov
test
xchg
jns
mov
push
ljmp
lcall
sbb
jo
cs
aad
cmp
sub
or
mov
insl
rol
push
jno
mov
or
loope
lahf
stos
popf
inc
loope
jns
push
bound
sub
into
and
test
scas
dec
pop
into
push
test
dec
and
sub
or
dec
mov
gs
andb
pop
push
movl
cmp
call
jno
inc
test
ja
repz
xchg
xchg
gs
gs
or
push
xchg
pop
popf
jo
add
iret
ljmp
sbb
std
mov
loopne
pop
lahf
adc
mov
pop
xchg
enter
jle
aas
xor
pop
inc
xor
xchg
pop
mov
adc
aad
mov
aad
dec
cmp
outsb
dec
adc
data16
push
or
out
push
icebp
call
and
dec
imul
pop
xchg
outsb
repz
inc
cmp
addb
xor
in
mov
mov
jae
scas
call
in
jb
iret
sub
aam
shrb
out
dec
cmp
shl
incl
cmp
cmp
fistpll
ret
sbb
or
xor
ficomps
jl
cmp
adc
iret
imul
adc
inc
icebp
daa
pusha
cltd
addr16
sub
xor
dec
gs
js
rolb
push
jp
sti
mov
sahf
pop
adcb
inc
fldt
dec
lock
inc
cmpsl
bound
stc
cmpl
mov
adc
sbb
and
fsts
out
fdivl
aaa
dec
loope
fsubrs
sbb
jne
xor
rcrb
mov
xor
cmp
test
in
mov
push
mov
sub
add
aam
dec
lret
mov
dec
pop
cs
pop
jp
sahf
adc
jnp
fwait
cmp
sub
pop
ficomps
pop
jae
scas
cmc
mov
movsl
pop
sbb
xchg
stos
jge
lcall
in
cmp
jmp
xchg
in
cli
lret
aas
std
les
cs
mov
lcall
cmp
mov
pop
xchg
rcrl
popf
imul
inc
and
lods
mov
jl
xor
scas
mov
sbbl
inc
sbb
push
scas
mov
jp
sub
sub
ljmpw
mov
mov
cmp
sub
in
pusha
pushf
ret
jecxz
sbb
fildl
outsb
pop
pop
dec
inc
aam
testl
cmp
ror
cld
out
cli
lods
dec
clc
xchg
fwait
outsb
mov
mov
and
jb
mov
xchg
fimuls
cmp
call
hlt
negl
mov
mov
in
aad
in
cli
push
ljmp
sub
in
sub
sub
add
mul
mov
shrl
clc
pop
sahf
inc
pop
cmp
push
dec
test
data16
or
lods
pop
and
iret
ljmp
xchg
sub
push
pop
mov
gs
inc
sbb
inc
ja
jg
iret
add
add
add
pop
and
dec
push
shlb
inc
push
sub
or
fwait
mov
push
cmpsb
inc
fucom
dec
push
adc
or
cld
jg
aam
xorb
test
frstor
fcmovbe
sub
ljmp
out
mov
pop
popf
mov
hlt
cs
xchg
pop
or
inc
std
inc
or
xor
fists
jp
pop
movsl
rcl
and
dec
mov
mov
mov
pusha
push
fwait
imul
and
mov
leave
out
adc
lock
sbb
push
hlt
sub
mov
nop
popa
jge
loop
fbld
test
divb
lods
fistps
ds
loopne
mov
js
out
or
nop
scas
xchg
mov
mov
je
lret
je
push
dec
ss
jp
mov
cmc
add
call
xor
movsb
popa
and
and
cwtl
in
and
dec
popf
hlt
sub
jmp
jns
mov
clc
pop
loopne,pt
ret
cld
fcomps
cmp
vunpckhpd
mov
out
mov
mov
stos
out
test
das
jnp
sar
repnz
fdiv
data16
push
out
data16
xchg
mov
pusha
in
in
cmp
mov
rcr
add
addr16
jne
int
pop
lods
dec
xchg
xor
sbb
mov
rep
push
in
xor
jp
lret
lret
add
out
aad
bound
mov
jmp
push
pop
adc
int3
mov
test
orb
stc
sti
loope
fwait
scas
xor
jg
bswap
adc
hlt
leave
add
je
push
push
ret
xchg
cwtl
popf
add
pop
push
test
das
sub
dec
shl
repz
fwait
jecxz
lret
xor
cmp
mov
dec
inc
popa
int3
jle
inc
push
adc
pop
pop
mov
out
jae
lods
pop
in
in
add
clc
arpl
xor
ss
dec
mov
add
in
inc
cmp
push
into
repnz
aad
adcb
cmp
sbb
aad
in
push
aaa
jp
or
test
xor
sarl
xchg
cmp
push
daa
mov
std
add
push
xor
and
mov
add
jp
cmp
or
adc
sahf
and
rol
stos
aad
stos
call
pop
jne
sub
pop
jle
mov
insl
clc
outsl
imul
daa
test
lahf
sarb
lock
insb
test
push
jns
mov
rorb
add
jge
mov
in
mov
rcrl
cmp
cli
out
mov
sbb
adc
pop
xchg
mov
cmpsl
push
lret
xchg
lcall
mov
leave
cli
nop
xchg
or
and
dec
gs
cltd
int3
jl
push
xchg
cmpsl
mul
fwait
cmpsl
push
push
pop
int3
sbb
cmc
cmp
inc
rcl
es
cmp
fdivrs
push
mov
adc
cmp
or
out
cmp
and
cmp
nop
cwtl
inc
inc
mov
in
sbb
mov
cmp
les
cld
add
inc
cmp
cmp
sbbb
mov
inc
ja
pop
cli
push
mov
mov
fisubrl
imul
jnp
jl
aaa
or
jp
adc
pop
adc
psrlq
push
in
lods
loopne
ljmp
adcb
les
test
cmp
mov
inc
lret
int
inc
movsl
gs
adc
lret
js
cmp
cs
lods
xchg
mov
jno
push
sub
pop
shlb
outsb
push
cld
mov
xor
testb
shrb
mov
ljmp
adc
xlat
dec
pop
sbb
xor
jne
sub
mov
cld
mov
das
mov
xor
adc
mov
xorl
loop
fimull
not
cmp
mov
movsl
xor
sub
insl
mov
xchg
std
lahf
dec
push
in
or
cmp
adc
addr16
xor
sbb
mov
imul
sti
cltd
mov
out
push
int
mov
cltd
push
dec
xor
mov
xor
popl
fcmovnb
sub
push
scas
ret
sbbb
cmpsb
dec
movsl
push
pop
aam
jns
mov
cmp
rclb
mov
dec
repnz
cltd
and
add
ja
es
mov
shrl
stc
rorl
inc
fimuls
cmpsb
or
pop
stos
mov
test
stc
dec
dec
gs
add
sbb
dec
stos
rep
shr
nop
or
fbld
adc
mov
adc
das
dec
jge
mov
scas
test
in
out
mov
and
hlt
stos
jg
or
in
lods
out
mov
outsb
loop
pusha
push
jl
dec
pop
int
decb
and
jo
cmp
fdivp
xor
outsb
inc
sbb
jb
cmp
hlt
pop
mov
mov
add
jo
lcall
and
imulb
cli
inc
clc
inc
pop
mov
fs
lahf
pop
out
imul
jae
adc
cmp
jnp
adc
jle
mov
lahf
in
pusha
pop
push
pop
les
fcmovnb
fists
decl
pop
ja
adcb
aam
jp
mov
imul
and
ficompl
mov
adc
clc
pop
mov
and
pop
mov
movsb
stos
out
and
adc
lds
mov
imul
sub
xor
dec
xor
aam
mov
lahf
dec
mov
adc
mov
pushf
pop
int3
fisubrl
dec
or
outsl
mov
adc
jae
fwait
decl
pop
pushf
popf
imul
or
mov
dec
cmp
jmp
sbb
call
ds
inc
int3
dec
add
inc
fwait
mov
jns
pop
sbb
ja
cld
stc
xchg
je
pop
pop
inc
sti
jmp
lea
js
pusha
cmp
push
scas
mov
fcoms
mov
iret
pop
ljmp
dec
jbe
mov
sbb
push
mov
mov
je
dec
push
mov
inc
push
add
inc
lock
add
cmp
mov
sbb
out
pop
jmp
daa
push
mov
dec
add
pusha
cmp
pushaw
pop
pushf
hlt
sub
fucom
xchg
inc
jae,pt
sub
sti
orb
int3
cli
mov
sbb
aad
pop
jmp
repnz
jne
aad
sbb
out
outsl
stc
jbe
or
add
xchg
clc
push
push
jecxz
das
int3
push
and
rorb
daa
mov
pop
push
add
mov
sub
pushf
mov
mov
or
xor
lods
sbb
in
cmp
push
ljmp
mov
jnp
sub
inc
lcall
xor
add
gs
jne
cwtl
mov
iret
out
jne
jl
imul
mov
dec
aas
loope
scas
dec
jg
data16
pop
dec
mov
add
fsubs
push
xchg
and
repnz
das
ja
adc
in
loope
jl
push
push
mov
mov
push
add
sti
aad
mov
inc
mov
popa
cltd
mov
dec
pop
cmc
out
pusha
push
mov
and
in
insl
shl
sbb
hlt
mov
shlb
push
mov
jg
dec
aas
scas
dec
scas
pop
or
pushf
repz
xor
std
imul
aad
js
sbb
filds
dec
in
and
mov
es
in
lahf
xor
jno
cmp
pop
adc
mov
imul
movd
push
addl
pop
cmp
fcompl
pop
aam
adc
jle
stos
inc
pop
adc
push
das
popa
aas
mov
int
scas
mov
pop
push
add
addr16
or
incb
mov
test
sub
mov
inc
jl
cmp
cmp
jl
jg
leave
mov
or
jo
movl
fwait
dec
cmc
sti
xchg
clc
inc
shr
mov
jle
pop
xorb
push
or
push
inc
fwait
cwtl
in
shr
inc
jp
adcb
mov
imul
push
ret
fcomps
call
and
add
push
aas
in
pushf
mov
in
jge
and
test
add
in
ljmp
cmp
or
add
jp
xchg
dec
enter
outsl
and
call
repnz
and
inc
sbb
and
add
inc
cmp
adc
or
fldt
add
and
mov
pop
ds
adc
aam
push
adc
ljmp
out
repz
mov
mov
lds
cmp
lods
andl
inc
clc
inc
lcall
dec
mov
jmpw
roll
push
inc
push
arpl
mov
adc
cmp
fdivs
jle
jno
push
cmpsl
cmp
lret
mov
lret
and
cltd
mov
out
mov
test
roll
js
lret
dec
loopne
test
call
daa
aad
lret
cmp
cmp
pop
lret
mov
hlt
dec
add
push
cmp
or
cltd
and
fs
dec
sbb
imul
fcmovne
push
and
adc
and
cmp
stos
pop
mov
pop
xor
adc
mov
push
cmp
add
jno
add
mov
sbb
xorl
add
rorl
movsb
inc
fildll
loopne
mov
sbb
add
orb
jg
jns
sarb
les
xor
mov
sahf
subb
mov
push
sub
gs
idivl
pushf
rclb
jle
cmp
mov
shrl
xchg
arpl
lcall
adc
pop
xchg
mov
lds
pop
lods
add
inc
jge
fcomps
in
adc
fimull
add
pop
in
imul
jno
and
push
and
pushf
mov
jb
push
push
cmp
out
lahf
incb
mov
sbb
pop
loope
inc
cmp
sbb
lret
mov
mov
cltd
lcall
ss
je
rorb
and
adc
xchg
cmp
add
sti
into
push
pop
pushf
lods
aaa
loopne
inc
cmp
outsl
outsl
jns
hlt
jmp
popf
pop
jmp
addr16
jb
and
mov
xor
movsb
lahf
out
out
fwait
xor
push
shr
cmp
and
stc
cmpsl
xchg
xor
loope
lock
cmc
mov
cmp
rcll
enter
add
push
stos
je
xor
subl
call
mov
adc
adcb
pop
aas
pop
and
pop
pop
pushf
lret
out
cltd
insb
cld
enter
pop
adc
sub
les
sbb
mov
outsl
add
xchg
mov
mov
ljmp
fcoms
pop
jbe
jne
idivb
jl
jg
pop
add
lret
ss
or
ret
inc
and
or
add
add
or
inc
cmp
push
xchg
hlt
hlt
add
adc
adc
inc
mov
mov
addb
lods
mov
arpl
mov
xor
popf
ljmp
pushf
jne
cli
test
movsl
mov
testb
dec
insb
jbe
gs
enter
bound
or
ret
add
xchg
dec
subb
push
test
push
notl
jge
push
jae
mov
imul
jecxz
pop
bound
lods
mov
push
shll
mov
and
mov
mov
das
test
mov
xor
push
outsb
test
or
cmc
clc
dec
cmpl
cs
aam
jp
enter
inc
jg
sub
fsubr
sub
cmp
shlb
or
in
push
push
fwait
loopne
js
dec
bound
pop
push
sub
xchg
repnz
jb
add
push
shl
mov
or
scas
pop
add
jge
dec
out
push
mov
add
push
inc
cmpsb
jnp
das
cmp
test
pop
xchg
inc
fnsave
in
stos
and
adc
cmpsl
scas
and
stos
sub
mov
xlat
hlt
iret
mov
push
add
imulb
leave
fwait
push
clc
xor
mov
in
ja
scas
jecxz
sarl
mov
cld
and
jnp
pop
inc
mov
iret
sub
into
mov
pop
sub
scas
push
movsl
je
lds
ss
sub
pop
testl
pop
in
cltd
out
movsb
pop
xchg
sub
clc
arpl
and
jl
int3
lock
es
pop
js
lds
lods
sbb
dec
adc
dec
icebp
scas
add
loopne
or
stos
fldcw
jnp
imul
add
imul
fs
sub
lahf
out
sbb
xchg
mov
sarl
xchg
mov
jnp
adc
mov
pop
repnz
pop
cmp
or
dec
inc
lret
cs
and
ret
mov
clc
push
aam
push
cmp
sub
lret
pop
inc
scas
adc
mov
test
into
push
pop
lds
push
mov
dec
or
mov
iret
push
mov
pusha
cmp
cmpsb
xchg
add
adc
add
jp
jp
pop
ret
movsb
lock
xlat
jb
mov
test
cmp
aam
xor
int
mov
sbbl
outsl
in
add
fcompl
adc
adc
jl
pop
xor
test
and
push
push
mov
mov
stos
es
mov
mov
pop
or
sahf
xchg
push
lret
mov
jae
ds
mov
sub
ljmp
push
cmc
or
ret
push
push
in
inc
sbb
fnstenv
push
shlb
xlat
gs
imul
scas
mov
out
dec
jno
push
pop
scas
xchg
into
add
mov
adc
out
data16
push
imul
add
icebp
mov
cmp
out
leave
hlt
mov
mov
ret
scas
inc
jns
leave
dec
inc
ret
cmp
jecxz
or
imul
adc
ret
and
loopne
or
pop
cltd
or
add
fstpt
pop
sbb
loop
mov
add
aas
inc
stos
sub
inc
stc
outsb
cmp
jb
js
push
fdivs
pop
leave
xchg
mov
xchg
mov
movsl
mov
inc
ret
popa
add
fisubrl
inc
int
mov
scas
in
mov
or
jno
les
lea
divl
and
sub
xchg
add
sub
pop
mov
insb
cltd
sbb
lret
push
pop
xor
adc
imul
pop
rcl
and
es
push
adc
insl
in
jecxz
daa
subl
jecxz
test
repnz
aas
popf
push
ds
les
lret
dec
leave
sub
sahf
push
test
or
cmp
into
push
push
das
pop
out
push
add
in
rcll
inc
jmp
gs
push
scas
mov
cmpsb
mov
mov
jne
dec
add
loopne
pop
pop
in
stos
adc
out
jb
or
cwtl
je
ss
jge
dec
popa
push
xor
xor
scas
add
xchg
cmp
outsl
mov
inc
jge
or
mov
xchg
stos
push
leave
hlt
lret
sbb
adc
test
or
pusha
mov
loop
lea
lods
cmp
mov
jmp
adc
adc
sbbl
inc
shll
in
fidivrl
je
sbb
cld
jecxz
adc
pop
and
lods
pop
es
sub
mov
xor
cwtl
pop
cs
aam
pop
jbe
lcall
xchg
add
shll
js
and
test
jecxz
push
gs
mov
ja
pop
fs
ret
dec
nop
movsb
call
pop
pop
mov
icebp
fsub
cmp
pop
ror
adcb
insl
sbb
fs
test
fldcw
and
jg
lret
negb
movsb
imul
and
loope
cli
jae
aam
push
xchg
shlb
stos
xor
mov
ds
xor
mov
sbb
add
mov
xchg
shrl
cwtl
and
jmp
in
imull
add
popa
sub
popa
mov
insl
mov
add
push
xchg
ret
out
imul
mov
cmp
ror
cmp
xlat
jo
xor
shrb
adc
dec
sarb
out
pop
push
lret
daa
cmp
sbb
rclb
ret
sarl
iret
pop
cmp
pop
aad
test
mov
or
mov
cmp
push
fxch
dec
in
jg
mov
dec
fstps
hlt
loopne
les
dec
cs
cltd
dec
mov
or
jle,pn
int
lea
in
dec
pop
mov
rcrl
sahf
aas
xchg
push
mov
mov
lods
dec
in
inc
bound
and
inc
mov
loopne
out
out
fucomp
dec
decl
mov
push
outsb
movsl
mov
sahf
xor
and
test
or
sub
xlat
pop
imull
test
jmp
or
jl
lock
cs
pop
cli
push
jecxz
movsl
cmpl
jae
fs
fwait
sbb
pushf
nop
imul
mov
std
je
push
ss
push
and
test
ds
push
cmp
subb
mov
mov
mov
mov
or
xor
rcll
stos
push
rcrb
int
fnstcw
xor
xor
adc
jb
and
mov
sbb
popf
loope
ljmp
inc
ret
xchg
mov
mov
adc
cld
addl
cmp
or
mov
cmp
dec
stc
in
add
inc
sbb
aam
cltd
roll
xor
xlat
mov
pop
jle
adc
scas
cmp
test
mov
repz
lods
xchg
rolb
and
add
inc
ss
cli
not
mov
lods
das
popa
enter
rol
outsb
lret
cmp
mov
push
cld
pop
add
inc
lahf
push
dec
lcall
lea
aas
lea
jne
cmp
std
adc
loopne
outsl
mov
jno
pop
mov
mov
push
addr16
sahf
adc
cmpsl
inc
jnp
js
sbb
aad
inc
div
pop
dec
in
adc
rorl
jno
xor
mov
push
or
jmp
jg
arpl
mov
inc
in
jno
push
cltd
sahf
jecxz
and
xor
out
pop
das
xor
dec
xchg
jbe
add
jb
scas
fistpll
call
or
push
cltd
ret
jmp
mov
adc
sbb
jo
aas
mov
rclb
jnp
cmp
pop
aad
cmp
jecxz
ror
pop
pop
add
cs
cmpsl
outsl
jb
xchg
inc
add
aaa
add
stos
mov
inc
repnz
jo
push
push
mov
dec
jg
inc
xor
out
sub
adc
and
outsb
mov
jmp
inc
gs
fldcw
and
mov
cs
pop
stc
test
mov
and
mov
jecxz
mov
ret
jp
movsl
fwait
sub
mov
cld
add
aaa
cmp
iret
pop
mov
sub
lret
pop
mov
mov
sbb
movsb
std
inc
fisubrs
jb
shrb
pop
leave
out
pop
mov
movsb
push
cwtl
stos
pushf
mov
xor
mov
stos
add
jecxz
pop
jnp
xchg
push
pop
iret
sbb
out
mov
adc
in
sti
or
and
shlb
cmp
push
and
lea
and
or
fwait
cmpsb
inc
rolb
inc
ds
push
add
popf
jno
fincstp
repz
dec
outsb
call
movsb
add
mov
pop
jne
insb
add
and
outsb
iret
cmp
jle
fstpt
dec
ljmp
cmp
sub
mov
fwait
add
dec
je
jo
lcall
popf
jmp
jae
push
cli
and
jnp
out
fwait
inc
les
pop
sub
call
pop
je
outsb
push
xchg
xchg
sarb
into
cmp
cmp
dec
xor
push
inc
xchg
pop
jno
xor
inc
lds
std
xor
fs
jle
sbb
fs
cmp
push
mov
aad
popa
pop
push
add
and
mov
cwtl
lock
outsl
cmp
call
lahf
cmp
xor
pusha
cmp
sub
jge
dec
ret
xchg
bound
loop
pop
aaa
lock
jb
xor
cltd
add
nop
scas
mov
test
das
or
jmp
sbb
mov
repnz
jmp
out
push
fldl
and
cmp
fwait
mov
or
jae
imul
xchg
dec
cmc
test
push
fstpl
pop
popf
mov
xlat
stos
je
lods
sub
mov
jecxz
and
sti
mov
cltd
or
shlb
inc
cmp
fs
or
add
mov
jl
sbb
add
dec
cwtl
movl
or
lea
xchg
mov
insb
xor
mov
call
or
test
pop
movsb
mov
mov
mov
roll
mov
jg
push
divb
or
or
pop
and
fisttps
push
in
stos
jnp
push
imul
sbb
fsubp
lods
outsb
testb
and
inc
cltd
in
mov
pop
xor
in
xchg
mov
or
adc
in
cmp
in
xlat
outsl
sub
mov
orb
xchg
mov
pmaxsw
mov
push
mov
repz
bound
dec
mov
mov
lock
sbb
xor
imul
inc
shrb
mov
or
and
mov
jae
xchg
fsub
mov
mov
xor
mov
push
stc
adc
gs
mov
push
es
jl
or
mov
sub
cld
mov
sub
test
cmp
lcall
jne
mov
pop
add
push
inc
out
push
fstpl
dec
jnp
dec
daa
dec
insl
or
mov
adc
xchg
cmp
cmp
iret
sub
stc
in
ret
mov
xor
stos
ret
sub
inc
in
std
test
mov
pop
add
es
push
jl
dec
sub
and
loop
out
mov
mov
fdiv
daa
nop
mov
pop
cmp
cwtl
mov
cmp
addl
sbb
lahf
fucomip
cwtl
xchg
stos
push
cltd
add
sbb
dec
cmc
rcr
inc
je
repnz
stos
xchg
xchg
call
ficomps
jns
ret
dec
stos
add
push
adc
dec
jbe
pop
into
or
into
mov
cmpsl
pop
loope
pusha
or
dec
inc
incl
xchg
xchg
int3
les
dec
aas
push
cmc
icebp
and
loopne
push
dec
scas
aaa
jl
lea
shll
add
pop
xchg
or
ds
sub
fs
leave
pop
jb
fidivrl
lea
xchg
dec
mov
mov
hlt
mov
mov
scas
cmc
mov
add
das
xchg
cmc
lock
cmp
or
icebp
movsl
fs
into
bnd
push
mov
pop
sub
pop
out
inc
leave
xlat
pop
xor
push
enter
cmp
jg
adc
inc
mov
xchg
dec
xchg
dec
leave
ja
sbb
xor
mov
rclb
mov
push
dec
adcb
and
rcrb
cmpsb
dec
enter
push
mov
fistps
xor
lds
xor
loopne,pt
dec
loop,pt
addl
and
shlb
mov
stos
xchg
inc
call
xor
cmp
lock
sti
outsl
outsb
out
sbb
xchg
adc
mov
fsubl
es
inc
mov
mov
jg
dec
dec
ljmp
inc
adc
dec
sbb
shl
cli
xchg
out
mov
push
cmp
lods
sub
push
outsb
js
add
jg
out
jae
imul
push
repnz
hlt
push
push
in
rolb
dec
hlt
adc
out
add
pop
lods
int3
movsl
ror
gs
cltd
or
mov
lret
mov
mov
sub
push
js
sub
hlt
dec
ret
push
nop
adc
repz
int
cmc
shll
aaa
outsb
out
mov
fcompl
jge
mov
push
test
lds
dec
nop
ret
clc
faddp
push
cli
leave
movsb
sub
push
and
outsl
out
fmuls
je
xchg
aam
xchg
ljmp
add
into
push
mov
mov
cwtl
divb
mov
push
mov
jl
rol
jae
rcrl
test
cmc
aam
cmpsb
ret
daa
outsl
pop
inc
add
fdivl
mov
sub
mov
lods
and
push
pop
les
mov
and
cld
push
popa
cmpsb
je
inc
enter
bound
xchg
inc
sbb
outsl
mov
jns
addl
es
rcl
pop
pop
inc
inc
insl
mov
pop
adc
sub
xchg
dec
adc
test
test
pop
sbb
mov
push
push
cld
pop
lods
dec
and
mov
scas
das
andb
lret
loope
and
daa
aam
xlat
insb
mov
xchg
lcall
jle
mov
or
rclb
in
bound
das
inc
dec
mov
mov
dec
arpl
repz
mov
adc
jl
xchg
into
pop
out
cmpsl
sub
in
adc
push
ja
push
sub
sbbl
fisubs
mov
add
sub
pop
test
das
and
sbb
add
pusha
aam
sbb
cli
seta
lret
mov
inc
pop
fisubs
cmp
mov
jno
fcmove
movsl
fsubs
mov
sbb
aam
lea
fstps
or
and
jo
or
sahf
and
test
dec
mov
sub
fadds
sub
push
mov
pushf
or
shrb
jne
cmpsb
sbb
jne
in
cli
lods
xor
pusha
sbb
clc
pushf
outsl
mov
ljmp
jne
jp
fcoms
push
pop
insl
int
push
call
pop
lahf
cmpsl
in
leave
push
jg
mov
xchg
arpl
ja
inc
mov
and
pop
in
fldl
repnz
jg
lods
out
jns
xor
mov
shlb
and
das
inc
inc
iret
mov
fwait
mov
sti
js
movsl
imul
cld
push
push
jl
lock
stos
int
xchg
jmp
xor
sahf
dec
push
pop
mov
es
push
mov
xchg
rcrl
xchg
push
adc
lods
shll
dec
mov
push
out
inc
fucomp
push
and
sbbl
std
add
or
and
lods
ss
mov
xor
sub
int3
sbb
mov
popf
test
sbb
jge
mov
cmp
mov
stc
mov
xchg
fcomip
clc
enter
mov
cmp
add
inc
sub
mov
xchg
lahf
mov
push
and
pop
in
adc
jb
cmpsl
stos
fldenv
arpl
cmc
ljmp
xchg
int3
ljmp
mov
out
bound
mov
cs
pcmpeqd
sti
push
lahf
jae
insl
ds
hlt
adc
adc
sbb
addr16
and
ljmp
out
aaa
rcll
or
lods
sub
jecxz
aam
mov
adc
sub
test
ljmp
fmuls
call
push
cwtl
std
and
mov
aas
jecxz
push
or
xlat
cwtl
je
fistpll
push
jecxz
push
jnp
inc
pop
and
and
and
adc
pop
cs
iret
xchg
adc
scas
or
ja
fistpl
dec
sub
and
sub
insb
rcrl
popf
fmuls
mov
jl
testb
sahf
ret
jo
cwtl
or
iret
lret
jmp
mov
sub
mov
cmpsb
popf
test
pop
jmp
pusha
mov
jae
les
test
adc
stc
cwtl
jns
lds
outsl
jns
cli
je
inc
bound
inc
imul
mov
cli
idivb
popa
in
jb
ss
cli
push
in
sar
lods
and
cli
pop
mov
dec
sbb
sti
mov
mov
jp
dec
cmpsb
mov
dec
insb
dec
dec
push
js
mov
or
add
and
mov
negl
dec
pushf
inc
xchg
flds
xadd
inc
mov
ss
jbe,pn
and
inc
xchg
push
pop
lcall
add
fistl
jno
jbe
dec
fldl
jbe
stos
inc
cmpsl
adc
pop
sub
jmp
mov
fbstp
inc
xor
adc
mov
jb
addr16
into
lock
jl
pop
dec
mov
adc
test
int3
inc
cmpsl
pop
sbb
dec
push
sbb
int3
les
pop
xor
movsb
xor
fs
jp
mov
movsl
dec
sti
movsl
mov
mov
gs
mov
push
pop
mov
sti
xchg
das
sbb
jg
inc
mov
arpl
rcrl
cmpsb
shll
les
cwtl
xor
push
mov
jge
lret
mov
ret
icebp
push
stos
sti
mov
in
lahf
pop
out
xor
xor
lea
xor
push
lahf
or
imul
mov
je
outsb
out
mov
adcb
mov
nop
jmp
aas
xlat
xorb
and
cld
mov
fnstenv
sbb
ficoms
push
enter
scas
je
movsb
cmpsl
xor
mov
and
push
inc
push
lds
test
ja
xchg
in
fistpl
scas
inc
pop
les
rcll
push
sbb
push
mov
mov
push
scas
in
mov
loope
or
fistps
jg
jmp
imul
and
pop
ja
je
stos
call
add
pop
into
stc
inc
add
mov
in
leave
and
outsb
mov
in
ss
sbb
add
out
sub
insb
hlt
push
es
and
xor
inc
fs
push
adc
aam
add
xor
add
iret
and
test
repnz
sub
xchg
or
dec
fsubl
mov
jae
js
fmul
stos
xchg
in
xchg
mov
adc
sub
push
insb
xor
sub
mov
in
sub
push
pop
lret
add
cmpsb
divb
mov
jo
jo
in
mov
dec
scas
inc
xor
pop
fnstsw
cwtl
stos
aaa
push
mov
and
mov
mov
insb
call
pop
aad
push
sub
leave
int3
adc
int
std
cs
inc
aad
fisttpll
call
and
push
psrad
jl
xchg
mov
sbb
loopne
jg
shrl
xor
jmp
out
in
cld
call
das
sahf
push
int
pop
std
xchg
sbb
mov
xchg
andl
hlt
nop
es
xor
dec
cmp
pop
pusha
inc
hlt
inc
imul
outsb
lcall
or
sahf
mov
jmp
mov
mov
fisttpll
push
insb
pop
shrl
sbb
mov
js
std
imul
movsl
popa
adc
popa
ljmp
dec
rcr
out
fs
enter
stc
out
xor
pop
ljmp
test
popf
aas
cmp
inc
mov
out
inc
mov
repnz
mov
dec
or
inc
and
fcmovnb
and
xchg
dec
int
cmp
ja
outsb
jle
call
and
sarl
lahf
pop
mov
ss
jecxz
scas
test
push
push
mov
push
jge
mov
loop
xchg
outsb
or
and
nop
mov
fdivrp
adc
pop
das
iret
mov
fs
movsb
cmpsb
push
stc
arpl
or
loope
fwait
dec
push
outsl
mov
sub
loope
jo
data16
push
add
icebp
pop
push
leave
outsl
lahf
xchg
cmp
add
in
xchg
das
popf
stc
movsl
scas
pop
adc
mov
cmp
das
jge
js
fcoml
ror
js
lods
dec
cld
pop
and
mov
and
cmp
mov
aam
and
pop
dec
rcll
popf
xor
xchg
and
out
leave
lret
gs
push
fsubl
push
loop
adc
mov
dec
or
lcall
mov
dec
fwait
cltd
outsl
dec
pop
push
or
mov
arpl
dec
or
xor
call
movsl
es
cld
push
mov
sub
mov
add
push
mov
inc
stos
jl
pop
inc
jb
push
cld
rcl
sbb
mov
xchg
enter
or
arpl
iret
sbb
mov
outsb
and
mov
js
loope
cmp
mov
mov
jl
es
adc
ja
sub
push
mov
ficoml
sarb
dec
mov
test
add
lcall
pop
lods
pop
lahf
or
inc
jo,pt
cwtl
call
arpl
clc
popf
or
scas
jne
lods
pop
loopne
loopne
cwtl
and
fsubrl
rorl
fisubs
or
sub
iret
dec
test
mov
and
popf
addb
gs
iret
xor
push
in
clc
or
adc
dec
xchg
std
lret
pop
sub
bound
or
std
cmp
and
mov
push
cmp
cld
rcrb
in
stos
dec
jg
sbb
lods
or
pop
mov
adc
mov
repnz
push
call
cli
adc
es
jecxz
adc
jecxz
arpl
lret
insb
loop
add
insl
stos
mov
call
data16
add
les
scas
push
push
fwait
movsb
and
sub
dec
jns
add
or
pop
push
sbb
mov
jbe
scas
les
pop
scas
inc
loop
movsb
push
push
mov
mov
loop
mov
push
sbb
int
test
push
ljmp
cmp
xchg
orl
jle
jmp
scas
xchg
mov
sbb
pop
jmp
push
dec
sbb
iret
lods
sarb
dec
das
sub
das
cmp
sbb
jnp
ja
stos
add
and
sarl
mov
scas
push
pushf
mov
in
hlt
les
in
aaa
mov
jmp
int
push
repnz
mov
movsl
aas
add
sub
addl
mulb
fsubrs
hlt
mov
addl
xor
and
insb
sub
jl
divl
aad
fcoml
loope
test
dec
popa
in
sbb
push
push
mov
xorb
mov
std
dec
pushf
sbb
jmp
or
fildll
enter
adc
xchg
out
je
dec
mov
ja
add
pop
mov
pop
sbb
push
outsb
inc
push
adc
fsubs
stos
daa
mov
xchg
cmpsb
js
add
xchg
imul
ljmp
or
mov
icebp
mov
pop
arpl
jns
pop
dec
mov
adc
iret
and
add
add
mov
nop
mov
movsb
push
sbb
sub
mov
dec
imul
iret
xor
out
orl
jge
or
mov
enter
movsl
inc
shll
leave
pop
and
xchg
xchg
jp
frstor
jno
cmpsl
mov
out
xchg
ret
sbb
movsl
xchg
mulb
or
jg
pop
mov
cld
scas
out
popa
arpl
mov
cmpsb
push
xor
push
cmp
lock
dec
add
out
out
sahf
and
and
xchg
lods
sbbb
cmp
or
out
hlt
pop
decb
jbe
cmc
lods
jge
lret
jns
cmp
push
xchg
cwtl
daa
scas
jns
and
sbb
cmpl
cmpsl
jp
pusha
adc
sub
and
aam
adc
add
mov
addr16
out
inc
fsts
aam
adc
adc
das
cmp
jp
dec
inc
daa
add
push
mov
jp
jp
call
cmp
cli
das
mov
ds
out
shll
push
and
and
xchg
ja
out
aaa
lret
aad
inc
icebp
mov
lret
or
lds
or
test
inc
les
jns
fdivr
xlat
jl
xor
sti
aas
pop
inc
outsl
ja
push
add
rcrb
int
pop
push
stos
fimull
aad
and
mov
inc
xchg
fwait
out
js
push
stc
arpl
mov
iret
xlat
imul
rcrb
pusha
mov
mov
xor
test
test
test
or
addr16
subl
stc
in
inc
add
sub
inc
ljmp
jb
lcall
xchg
mov
dec
mov
push
push
out
push
lahf
dec
aam
sub
mov
lret
clc
es
dec
outsl
iret
or
mov
cltd
push
fcompl
mov
divl
xor
add
mov
idivb
mov
out
dec
cmpl
repnz
aaa
mov
out
pusha
mov
fdivr
cli
addr16
popa
cwtl
popf
scas
and
je
sbb
add
adc
sti
mov
jb
adc
imul
sub
sub
clc
dec
sbb
mov
cvttps2pi
es
lahf
pop
mov
hlt
adc
pop
push
add
inc
pop
sbb
lret
mov
mov
mov
mov
pop
mov
aaa
int3
pop
adc
mov
repz
ja
shlb
push
ds
out
cmpsl
and
fiadds
sub
mov
insl
es
jnp,pn
lahf
ficoml
adcb
es
jne
push
repnz
xchg
mov
mov
xchg
iret
into
mov
pusha
popf
inc
pushf
arpl
pop
push
imul
enter
jns
repnz
and
push
std
mov
or
ljmp
and
xchg
data16
and
cmpsb
xchg
push
xchg
mov
xchg
jne
jae
sbb
mov
sub
out
xlat
fcomps
cmpsl
lret
and
shlb
lods
sar
sti
pushf
adc
imul
push
inc
pop
or
dec
ds
push
add
xchg
ror
dec
jg
sbb
mov
fadd
lods
mov
push
push
loope
mov
push
cmp
sbb
ds
adc
dec
push
sbb
daa
stos
mov
add
out
loopne
adc
cltd
cwtl
sub
mov
pop
push
jnp
bound
cmp
pop
inc
xchg
fs
mov
repnz
test
cltd
cmp
jmp
in
mov
pop
push
adc
cs
daa
pshufw
mov
or
jmp
ja
push
or
cmc
xchg
sbb
dec
add
xor
decb
mull
scas
jae
shrl
mov
add
pop
shll
sub
add
mov
mov
adc
jle
insb
fwait
xchg
and
mov
aad
inc
js
cmp
inc
aaa
xchg
test
cs
mov
ljmp
outsl
test
std
mov
cmc
fcoml
inc
add
sbb
or
jo
xor
dec
mov
cs
in
les
pop
mov
jno
sbb
das
sarl
jp
jge
xor
daa
inc
jecxz
xlat
mov
cmpl
jbe
test
mov
pop
mov
ret
js
cmc
mov
pop
scas
pop
fdivr
push
test
sub
fisubrl
mov
push
xchg
in
cwtl
sbb
jle
inc
pop
ror
jae
sub
lcall
cmp
outsb
xchg
mov
lods
loopne
shl
inc
popa
ja
rol
popa
pop
test
push
lds
dec
ret
dec
int
sar
cmpsb
mov
insl
sub
ret
movsb
shrl
in
sub
imul
popf
movsb
add
mov
adc
ds
adc
fadd
jg
fs
add
mov
jno
sbb
sarb
repz
dec
sbb
sbb
cmpb
test
mov
push
mov
and
stc
int3
push
adc
mov
ret
les
pop
in
lods
pop
lret
ret
cld
push
inc
inc
mov
js
lds
push
dec
addb
les
xchg
xor
xor
sarb
sub
loopne
fildll
sbb
pop
and
loop
aaa
cmp
push
dec
mov
or
dec
add
stos
cli
test
ret
mov
test
stos
xorl
push
push
mov
jno
jno
jae
xchg
mov
and
mov
mov
jmp
out
jp
mov
gs
int
mov
aam
adc
dec
push
out
inc
dec
test
push
push
hlt
in
cmpb
clc
cmc
lcall
in
dec
mov
insl
sbb
xchg
mov
int
add
aam
adc
inc
jmp
popf
pushf
jbe
hlt
fdivp
add
pop
lahf
mov
cmp
jecxz
and
stos
pop
jb
ret
mov
cmp
xchg
fcomps
mov
jmp
in
cli
cwtl
jo
repz
jg
xchg
push
sbb
cmp
and
jbe
xchg
les
test
pop
ret
push
pop
sub
pop
test
int
aas
xor
addr16
mov
pop
iretw
dec
setg
lret
mov
fs
orb
mov
inc
cmp
push
push
daa
pop
int
dec
xor
cmp
jbe
inc
adc
loopne
sub
sub
inc
fld
push
xlat
outsb
notl
xor
mov
ret
ja
or
outsl
push
mov
dec
inc
scas
jb
rol
nop
leave
dec
daa
rcr
out
fldl
xchg
sub
xchg
shll
inc
enter
dec
enter
and
dec
or
push
push
pop
inc
xchg
push
ljmp
sbb
jne
negb
add
cmp
cmpsb
inc
xchg
cmp
pop
add
cmpsl
xor
xor
mov
push
sbb
test
xor
mov
subb
lods
jecxz
mov
jp
or
jbe
mov
mov
xorb
leave
sbb
ljmp
scas
sub
fsubrl
lods
dec
scas
cmp
movsb
mov
push
test
cwtl
scas
or
cs
xor
icebp
in
add
aaa
mov
xor
adc
xchg
jbe
mov
xchg
mov
dec
mov
aaa
jo
xor
adc
cs
imul
inc
lcall
leave
repnz
and
push
and
mulb
adc
adc
push
jmp
jmp
mov
or
sti
dec
adc
dec
mov
adc
nop
xor
movsl
loopne
aam
mov
fstpl
cmp
sbb
rorl
addr16
cmp
mov
mov
fbld
shrb
xor
push
mov
push
enter
xlat
and
mov
adc
push
cmpsb
fmulp
and
fnstenv
insb
movb
sub
mov
dec
xchg
add
mov
sbb
ss
test
dec
fdivrs
xchg
jo
inc
jne
jle
daa
sbb
dec
jmp
sub
pop
xor
clc
ret
push
and
pop
jns
dec
stos
imul
mov
or
cmp
shll
mov
sub
in
rcll
es
pusha
ret
fwait
pushf
push
call
or
dec
sub
mov
jns
outsl
adc
int
mov
push
add
mov
xor
clc
cmpsb
imul
jbe
mov
jne
sbb
sub
jle
shrb
mov
mov
and
jge
mov
mov
xchg
mov
push
clc
fs
or
fiaddl
call
rol
mov
jo
bound
xlat
sub
xor
mov
mov
xor
out
sbb
popa
imul
jg
sbbb
lret
dec
pop
leave
nop
insl
jecxz
mov
mov
movsl
movsl
sub
rcr
in
les
outsl
out
les
enter
sbb
and
dec
sbb
xchg
push
add
pop
mov
xor
jo
mov
fwait
mov
jecxz
fucomi
push
push
negb
loop
adc
popa
jmp
pop
jns
movsl
sbbb
xchg
int
xchg
adcl
adc
stos
bound
jp
cli
scas
pop
fisubrs
rorl
mov
pushl
pusha
mov
push
sub
mov
repz
mov
cmp
hlt
enter
roll
lods
jnp
jno
push
imul
add
or
mov
outsl
ret
push
or
lret
cs
lea
push
bound
cmp
push
ljmp
add
test
mov
jbe
mov
sub
mov
ret
jno
lods
movl
lahf
test
or
push
jg
xorb
dec
outsl
je
jbe
mov
add
subl
dec
push
daa
mov
sti
int
mov
fsubl
sahf
aad
outsb
push
pop
and
or
call
lock
dec
sti
sbb
add
push
pop
nop
mov
arpl
and
add
inc
stc
inc
push
jo
lea
sbbb
stos
sub
sbb
and
popa
cltd
das
jo
sahf
xchg
mov
inc
dec
repnz
sti
mov
shlb
xor
push
jl
movsl
dec
es
or
or
push
push
push
push
ds
movsl
filds
pop
push
push
fs
fucomp
push
test
mov
cld
dec
dec
push
xor
sbb
cmpsl
and
outsb
shrl
mov
stc
and
aam
pop
insl
out
rclb
xchg
popf
icebp
mov
js
xchg
fidivrl
je
jae
out
sbb
jge
adc
hlt
divl
ficoml
or
lods
dec
cmc
add
in
adc
sbb
out
mov
mov
in
inc
jg
outsb
dec
push
mov
adc
mov
jnp
push
cltd
sti
cmpsl
insl
imul
popf
aad
mov
lret
adc
mov
in
stc
in
jmp
add
adc
das
jb
mov
clc
adc
mov
stos
aad
pop
les
test
mov
and
inc
bound
lahf
add
push
jns
xor
pop
fldt
shll
out
jp
mov
outsb
inc
test
push
sti
sbb
mov
int3
out
ret
movsl
in
faddl
bound
pop
sti
sub
add
int3
fcomi
xchg
add
adc
inc
pop
scas
pop
mov
adc
xchg
cmp
enter
stos
mov
outsl
mov
test
push
mov
pop
adc
lods
lret
mov
out
inc
vpcmpeqd
es
int3
icebp
mov
mov
int
mov
dec
adc
lea
and
or
les
jecxz
push
mov
insl
add
in
movsb
fistpl
loop
in
int3
dec
std
fcoms
mov
push
sbb
scas
add
lds
outsb
xchg
pop
adc
jle
push
clc
cmp
jl
pushf
out
push
pop
out
push
ja
pop
loope
xlat
sub
stos
out
mov
aas
cmp
or
jb
mov
dec
sbb
loop
adc
in
push
jo
sub
lods
mov
insb
scas
adc
imul
jne
imul
xlat
iret
sbb
inc
and
jne
or
cwtl
lret
mov
imul
add
faddl
and
mov
jg
movsb
jbe
jbe
push
fistpll
xchg
daa
jge
lea
jle
mov
sub
les
in
out
pushf
and
pop
fdivrs
into
repnz
push
push
adc
test
cmp
in
or
adc
and
cmpsb
mov
jge
xor
mov
xchg
mov
jmp
jmp
inc
sub
enter
inc
rcl
and
fcmovnb
repnz
inc
pop
scas
out
cmp
xor
mov
sbb
pop
and
fcom
cmp
add
enter
pop
jbe
pop
cs
jb
test
push
testl
mov
or
dec
xlat
and
xchg
pushf
fs
pop
adc
cmp
pop
bound
aaa
inc
shll
es
jmp
xchg
iret
cmp
into
inc
testl
loop
lock
lret
into
push
cmp
cmp
xchg
jnp
and
xor
into
clc
mov
mov
ret
inc
rolb
sub
xchg
in
mov
repz
sbb
call
add
mov
repnz
add
cs
adc
arpl
stos
pop
adc
out
imul
pop
test
push
rorb
jo
sbb
lcall
sbb
jp
push
xor
rclb
dec
shlb
inc
jns
es
xor
jmp
arpl
movsl
test
push
sarb
hlt
std
mov
sbb
jo
mov
icebp
imul
and
ret
mov
outsb
outsl
ja
sub
into
cmp
and
xor
stos
mov
cmp
mov
loop
mov
aad
sbb
push
jo
mov
sub
into
and
cs
mov
pop
idivl
cmp
cltd
pop
mov
lahf
fdivr
mov
test
repz
nop
sub
or
sbb
test
lock
and
jge
sub
cmp
sub
insl
dec
mov
fsubrl
pushf
sub
or
mov
mov
mov
mov
push
inc
push
cmp
js
lods
jle
push
mov
dec
xchg
sub
push
and
jle
xor
pop
movsl
xchg
fadds
pop
rcl
mov
pop
pusha
adc
mov
add
sbb
mov
jecxz
add
sub
jno
pushf
cs
pop
nop
jno
das
pop
rorl
push
jl
loope
icebp
jle
aam
ficoml
rcl
out
cmp
imul
ljmp
jb
cmp
in
js
mov
cltd
test
stos
cmc
movb
aad
sub
pop
push
inc
mov
sbb
push
insl
xchg
dec
int
mov
out
mov
iret
sub
leave
shl
cli
mov
inc
mov
jne
mov
mov
jmp
fs
iret
jecxz
and
sub
enter
cld
ja
sub
lahf
xchg
inc
xorb
or
sbb
insl
call
das
sub
fsubp
in
jle
cltd
fbstp
mov
lods
xchg
xchg
inc
lret
lea
cmpb
in
xor
mov
shlb
cs
aad
mov
stos
mov
cmp
ja
lea
jb
dec
fs
xor
jbe
sbb
and
pop
push
and
sbb
cmpsb
insb
pushf
jno
sbb
daa
fs
cmpsl
push
jae
push
pusha
cli
mov
and
pop
sbb
push
jno
cmp
in
stos
cmp
jae
inc
xchg
loopne
lea
ja
jge
mov
outsl
lret
je
shll
sarb
test
xchg
leave
add
movsl
dec
lcall
cmp
popf
inc
pop
push
and
cwtl
xchg
bound
or
xchg
fsubrs
mov
out
js
rcrl
andl
pop
pop
outsb
push
cmc
js
shll
inc
push
push
test
or
jl
aas
jp
and
add
xor
scas
inc
mov
xchg
je
andl
push
jbe
xor
lea
and
xchg
test
mov
sub
and
js
rorb
push
out
or
cmp
jnp
xchg
pop
sub
adc
dec
cld
aad
movsb
pop
or
pop
lods
popa
ss
es
sbb
fadd
inc
addb
xchg
rol
push
fcompl
insl
and
pop
nop
mov
out
or
mov
sbb
sar
xchg
cmp
bound
push
test
push
xor
add
cmp
cmp
sbb
ds
andl
mov
dec
xchg
and
push
xchg
mov
sbb
lahf
rcll
lods
sti
sti
orb
movsl
push
dec
adc
aad
push
and
cltd
push
idivl
cmp
mov
es
movsl
sahf
rcrb
xchg
lret
inc
mov
scas
add
cmp
rorl
add
daa
testb
jp
push
rorl
addr16
dec
dec
mov
dec
jl
fsubrs
push
inc
cmc
adc
out
cmp
cmp
pop
push
loop
fstpl
push
testl
dec
aas
and
inc
ja
movsl
xor
loopne
dec
jge
fnstsw
cld
pop
pop
jecxz
dec
sti
mov
mov
add
cmp
mov
adc
testb
lock
dec
sbb
push
inc
scas
mov
test
cmp
call
incb
pop
cld
inc
loope
add
jo
test
sbb
add
lods
ficomps
aas
insb
or
out
jmp
leave
mov
dec
jmp
dec
pop
add
push
push
loop
xor
push
dec
cmp
addr16
aam
inc
push
fimuls
jmp
addr16
scas
stc
pop
scas
aam
mov
xchg
scas
shlb
loope
cwtl
enter
lahf
sub
maxps
xchg
aad
push
xchg
sar
cmc
int
pusha
movsl
mov
loopne
lods
pop
orl
pop
cmp
mov
daa
rcrl
enter
add
lods
sub
jne
scas
adc
dec
inc
enter
cmp
addl
inc
sbb
or
loope
mov
and
into
cltd
lret
push
aad
les
dec
sub
daa
jmp
jns
fcoml
jae
pushf
add
mov
pop
lret
inc
sti
loop
fstps
vdivsd
mov
push
fsts
mov
test
out
andb
iret
xor
mov
sarb
and
inc
and
sbb
adc
mov
shlb
mov
pop
add
mov
dec
or
cmc
adcb
pop
jno
pop
mov
lret
sub
fisubl
sub
push
jmp
xor
jge
cmpsb
outsl
pop
jns
xchg
icebp
outsb
cmp
push
adc
jns
xchg
xchg
ja
cld
pop
push
repnz
xchg
xor
pop
adc
imul
adc
push
cli
shlb
pop
xchg
outsb
in
movsb
imul
jg
dec
lods
repz
mov
ljmp
mov
std
nop
out
in
push
insl
mov
ljmp
call
cmp
push
pop
sub
and
pop
stos
pop
iret
mov
xchg
lret
adc
add
mov
xchg
mov
fnsave
pushf
clc
inc
shrl
inc
push
test
nop
jae
push
mov
sti
sub
jmp
inc
push
push
cmpsl
sub
jnp
cltd
cwtl
jl
aas
hlt
mov
add
dec
xor
ret
fidivrs
ret
dec
stos
or
mov
fwait
mov
jno
sahf
xchg
pusha
xlat
outsl
pop
divb
hlt
incb
inc
stos
repz
das
cld
addr16
movsb
loopne
adc
fcompl
mov
adc
sub
fdivl
lret
iret
xchg
xor
nop
sub
dec
je
xor
arpl
in
mov
mulb
in
jbe
mov
push
pop
stos
or
fistl
fsubrs
inc
imul
push
jbe
xor
out
fcomps
jbe
sbb
movsb
jl
xchg
cs
xchg
cltd
sub
fstps
in
add
pusha
rorb
subl
sub
fistps
lods
test
or
pop
scas
jmp
adc
call
inc
jbe
mov
mov
xorl
sub
jno
addl
jns
sahf
clc
mov
sub
jg
in
testb
xlat
and
fiaddl
cmp
mov
push
int3
int3
cmp
dec
xchg
inc
movl
sbb
pop
pusha
shrl
inc
lret
js
stos
xor
leave
and
mov
into
lret
in
gs
mov
sub
add
sbb
adc
mov
dec
pop
xor
jecxz
pop
dec
fbstp
cmp
pop
cmpsb
lret
repnz
add
sbb
sub
popa
inc
lcall
in
dec
fstpt
mov
mov
scas
aas
jnp
stos
clc
adc
pushf
sarb
addl
mov
cmp
add
call
xorb
push
fs
insl
dec
lds
add
xchg
jbe
xchg
das
lods
dec
pop
icebp
push
test
mov
xchg
pop
sub
je
push
pop
mov
inc
pop
mov
mov
syscall
in
gs
js
lds
fisubrs
mov
adc
lahf
scas
loop
pop
out
or
loop
ret
pushf
and
movsl
ds
jo
jno
js
out
jns
add
mov
mov
mov
data16
popa
leave
in
jle
loop
stos
mov
xor
das
mov
pop
movsl
test
in
shl
shrl
push
ss
jmp
xlat
mov
int
in
pop
lahf
inc
shlb
push
out
inc
sbb
jbe
insl
dec
rcll
xchg
sub
xor
pop
sub
sbb
stc
add
out
addl
stos
dec
mov
in
inc
cmpsb
ja
mov
addr16
fistl
call
xchg
aas
js
sub
scas
pop
std
or
sbb
jno
rol
stc
addr16
cmp
add
lds
mov
or
pop
xor
ljmp
loope
lds
int
sub
aad
cmp
inc
mov
sahf
jge
sti
cmp
jae
push
jmp
pop
xor
bound
nop
add
in
jg
pop
movsl
flds
pop
loopne
out
jmp
mov
push
inc
rorb
cli
int3
dec
shrb
mov
cs
enter
insb
xor
rcrl
jle
lock
xor
mov
enter
push
lods
repnz
sbb
lock
and
push
jno
imul
xor
stos
mov
adc
fmul
test
lods
int3
mov
arpl
push
xor
je
or
cmpsb
icebp
mov
or
and
or
test
pop
mov
sub
pop
aad
out
movsb
imulb
adcl
push
loope
jnp
mov
sti
in
in
sbb
add
xchg
loopne
cmpl
cmp
inc
in
push
dec
add
mov
inc
push
fisubs
nop
sti
loop
inc
in
into
dec
jmp
out
jle
mov
shl
pusha
aam
fs
outsl
sub
popf
sbb
rolb
cmpsl
mov
mov
xchg
push
push
ds
imul
subb
and
pop
jmp
cmp
jge
cld
xchg
sub
add
pop
mov
xchg
fsubrs
push
scas
add
fwait
mov
pop
mov
cmc
call
jns
aas
and
mov
mov
and
mov
push
pushf
in
js
or
push
cltd
sbbb
ds
or
push
sub
imul
movsb
jg
shlb
sbb
sub
jp
mov
fcmovnb
jg
testb
inc
or
aas
xchg
push
rcr
mov
and
rcll
push
movsl
outsl
pop
or
pop
xchg
cmp
daa
xchg
shrl
out
or
sbb
push
adcl
mov
mov
dec
and
and
add
dec
jmp
dec
pop
dec
mov
push
xor
sahf
sbb
inc
mov
jno
sub
loop
push
sub
mov
rorl
outsb
push
inc
sbb
insb
adcl
adc
and
ljmp
enter
nop
sub
push
in
mov
jne
pop
mov
roll
cmp
test
ret
lock
xchg
icebp
andl
popa
pop
test
fldt
sahf
add
add
lock
add
in
or
cwtl
jbe
test
sbb
sahf
adc
push
and
sub
enter
fs
fwait
sub
dec
incb
sbb
stos
mov
cmp
mov
inc
rcrl
mov
pusha
loopne
and
xchg
inc
push
ret
leave
out
push
cli
das
clc
mov
jbe
or
jae
sub
jecxz
adc
xchg
mov
lods
mov
mov
or
xor
ret
jmp
stc
sarl
pop
cmc
xchg
fs
shll
pop
inc
or
hlt
mov
cmc
lahf
stc
inc
jp
ss
and
push
cmp
aad
out
je
lods
pop
mov
pop
mov
nop
dec
movsl
mov
mov
pusha
mov
lret
mov
das
inc
mov
add
jp
out
movsb
mov
mov
sub
loope
test
hlt
jmp
push
imul
mov
dec
lea
rcrl
cmp
ss
std
mov
mov
pop
test
negb
sub
sub
fdivrl
push
pop
push
sahf
mov
push
mov
repz
loope
iret
jl
sti
std
cwtl
insl
test
insb
data16
cwtl
xchg
mov
and
push
and
jle
adc
push
addr16
cmpl
sahf
push
icebp
scas
lods
lock
pop
repnz
dec
mov
cltd
push
sbb
je
pop
or
add
lret
mov
pusha
cltd
outsb
pop
xlat
dec
jg
xchg
imul
pusha
sub
and
inc
loopne
cmpsl
cmp
jl
jp
imul
sub
in
test
mov
lcall
cli
sti
sbb
aas
inc
mov
add
and
ds
jne
mov
dec
pop
jne
jne
or
gs
pop
test
mov
mov
leave
js
scas
mov
sbb
cmp
data16
bswap
xor
clc
mov
sti
adc
lods
fadd
mov
mov
push
mov
push
xlat
lods
xchg
fucompp
loop
test
nop
icebp
mulb
mov
mov
sub
sub
out
aas
jnp
imul
add
xchg
inc
adc
lahf
movb
mov
sbbb
jge
rcrl
pop
jg
ljmp
cmp
mov
cltd
pushf
xchg
xor
stos
mov
jno
stc
sti
add
pop
shlb
clc
adc
pop
cmp
es
cmp
in
jb
sub
push
shrb
jmp
sub
enter
ds
orl
cmp
repnz
mov
cld
mov
out
cwtl
mov
sub
je
push
in
insb
pop
ss
cwtl
xor
fbld
add
int3
xlat
mov
repz
test
jno
stos
xlat
pop
or
push
jl
add
xlat
push
out
negl
fidivrs
cwtl
or
adc
push
push
sti
push
scas
xor
lock
cmc
repz
scas
jne
int3
sub
mov
clc
mov
push
or
fdivrl
push
adc
cmp
mov
mov
adc
sub
lods
adc
insb
popa
push
pop
das
lret
aam
sarb
inc
or
adc
fcoml
ret
dec
dec
xchg
into
adc
int
insb
daa
das
cmp
icebp
mov
adc
mov
or
testb
push
ljmp
shlb
movsb
xor
mov
int3
lods
fmull
mov
or
and
inc
or
mov
or
push
pushf
inc
sbbl
cmpsb
mov
or
sbb
inc
gs
movl
orb
jae
and
ret
outsb
test
loopne
aam
ret
jmp
jg
and
ljmp
xchg
mov
xchg
cmpl
popa
loope
or
inc
stos
jl
sub
xlat
je
push
mov
pop
shrb
mov
push
inc
mov
jno
pop
mov
adc
push
pusha
xor
mov
pop
mov
mov
lcall
adc
mov
ja
mov
arpl
dec
pop
mov
mov
fiadds
mov
in
aas
push
jecxz
jl
and
aad
lock
xor
jmp
push
jecxz
shlb
pop
sbb
jmp
inc
pop
or
xor
imul
or
push
jnp
aam
xchg
sbb
popa
call
fwait
out
in
push
sbbb
jbe
fsubrs
mov
ja
adc
jg
outsl
pop
shrl
sbb
rcrl
cmp
fisttps
pusha
xchg
test
xor
sub
ss
push
inc
mov
into
in
push
push
sbb
test
cmc
arpl
cs
xchg
cwtl
xchg
xor
fisubrs
sahf
inc
mov
push
fchs
inc
lods
sahf
push
adc
fmulp
jb
scas
add
xor
xchg
enter
jmp
arpl
pop
int
stos
mov
sbb
loopne
jae
iret
xlat
mov
or
pop
inc
fidivrl
xor
mov
dec
adc
pusha
or
mov
mov
and
mov
aaa
mov
fs
rol
pop
in
bound
sbb
adc
mov
adc
mov
jne
cmp
lock
shl
pop
jl
rcrl
addl
das
jl
fstps
xchg
mov
pop
sbb
call
div
popa
int
aad
sbb
outsl
mov
pop
incb
fdivl
pop
loope
dec
sub
lret
mov
outsl
jo
pop
mov
or
or
cmpsl
shrb
popf
aaa
sub
in
jne
ljmp
inc
jmp
mov
or
mov
rcr
inc
out
cli
and
cmc
scas
push
xchg
ds
out
push
pushf
je
nop
je
movsl
outsb
sarl
push
cmpl
sub
addr16
insl
cmp
mov
and
int
in
push
gs
inc
xlat
fcomi
adc
aam
push
addb
add
fbstp
dec
ds
mov
or
movsb
mov
inc
pushf
cwtl
aam
push
frstor
jns
or
push
cmp
mov
lcall
cmp
cmpsl
bnd
xchg
sahf
pop
pop
inc
cld
shrl
rcrl
repnz
dec
lock
leave
rcll
cli
loop
sub
std
and
mov
lcall
push
pop
rclb
cmp
jmp
fcmovb
sbb
iret
stos
cmp
clc
jne
cmp
and
repnz
shrl
je
xor
jg
cmpsl
aaa
int
lock
cmp
jmp
shll
mov
sbb
jae
mov
daa
mov
sub
in
cld
es
das
clc
push
jg
jecxz
cmp
pop
jo
pop
lock
xor
pop
sbb
lahf
jnp
lcall
repnz
popf
pop
adc
mov
pop
or
xchg
repz
xor
or
sub
adc
inc
lods
clc
jns
push
lods
sub
jl
pop
repnz
and
or
js
adcb
jae
xchg
pop
faddl
jmp
add
push
inc
subb
out
push
sbb
xor
ss
inc
push
cmp
repnz
xor
imul
or
xchg
add
inc
xchg
test
or
rolb
pop
in
nop
xor
mov
cmp
push
push
dec
jb
cmp
jmp
mov
pop
jl
adc
popl
mov
stos
xor
movb
pop
rcrl
clc
mov
push
lret
jno
mov
int
jns
mov
mov
dec
xchg
pushf
aaa
fisubs
int
add
cli
aas
fadds
rcrb
jmp
hlt
jo
std
aas
repnz
xor
enter
or
out
orl
mov
and
fidivrs
mov
or
pop
add
movsl
sbb
adc
shll
add
add
daa
or
neg
xchg
test
stos
inc
mov
sub
shl
sub
pushf
jge
addr16
jo
loope
adc
sub
xor
sub
mov
lock
je
arpl
jl
das
movsb
fadds
cmpb
scas
int3
pop
mov
xor
pop
mov
aad
xchg
lock
cltd
orb
mov
insb
xor
xor
sbb
out
inc
in
incb
push
push
movsb
stc
and
jg
out
or
shll
and
arpl
fldenv
test
pcmpeqb
ret
cmp
out
or
or
dec
hlt
push
addl
fstps
push
sbb
add
insl
mov
std
jge
pop
sahf
imul
sub
push
ljmp
mov
scas
movsl
outsl
pcmpeqw
js
lret
mov
popf
and
xchg
cltd
jg
xor
fcomps
sub
dec
adc
inc
pushf
lock
xor
subl
popa
sub
pop
pop
jle
lret
scas
aas
or
xor
int
stos
repz
dec
fcoml
pop
addr16
push
pop
pop
ja
jb
ss
push
xor
enter
add
out
xchg
push
cld
sub
pop
xchg
mov
mov
cmp
shrb
stos
lcall
pop
sti
shlb
shrl
cmpsl
cltd
mov
mov
mov
aam
gs
add
xor
loope
sub
cli
das
insb
dec
popf
mov
or
shrl
lret
mov
clc
iret
jbe
or
insl
inc
rcrb
pop
cmp
int3
mov
incl
subb
jo
arpl
push
pushf
cmp
por
sti
dec
push
std
lahf
into
scas
aam
mov
inc
xchg
enter
and
mov
xor
sub
inc
mov
leave
aaa
mov
jns
je
jge
or
outsl
or
mov
pop
mov
pop
xor
inc
dec
mov
sub
inc
xchg
and
or
pop
pop
dec
push
loope
es
mov
out
mov
sub
mov
and
ret
lahf
push
arpl
jl
sahf
mov
daa
adc
aas
push
popa
out
in
mov
fistl
dec
xchg
pop
fwait
andl
sub
or
int
mov
les
inc
and
dec
inc
mov
rolb
add
cmc
int
push
xchg
sti
add
adc
pushl
and
sahf
cmp
repnz
and
mov
cli
mov
in
je
addr16
imul
fisttpl
mov
icebp
gs
jno
fsubrp
pushf
sub
fidivrl
jb
std
mov
or
adc
mov
pop
std
mov
and
mov
outsl
jb
jbe
scas
popf
sti
cmp
dec
jle
dec
test
lcall
test
mov
popa
cwtl
cmp
shlb
dec
out
pop
and
jae
loopne
add
in
jbe
xchg
xchg
push
inc
cmp
adc
and
jae
ja
aaa
mov
lcall
jp
jbe
xchg
sti
mov
lahf
lret
pop
xchg
mov
adc
dec
popa
inc
loop
pop
inc
call
int3
jo
jb
test
add
fisubrs
iret
cmp
movsb
ss
mov
int3
mov
sub
mov
out
dec
std
rol
movsb
cwtl
sahf
dec
fcomp
adc
sti
pop
inc
xorl
fwait
and
stos
aas
dec
jecxz
scas
xor
ss
sbb
gs
ret
mov
cli
outsb
dec
pop
dec
shr
mov
aas
cmpsl
rcrl
mov
aad
mov
adc
repnz
hlt
pop
stc
popa
adc
mov
ror
test
stos
mov
aad
in
and
cmpsb
jb
or
xchg
push
sbb
int3
sub
out
test
pop
mov
popa
pop
rolb
pop
dec
fdivs
cmp
add
push
mov
loopne
and
or
xor
push
andl
inc
pushf
clc
je
pop
pop
addr16
fwait
test
mov
jae
cli
sbb
shrl
mov
fld
bound
cwtl
fstpt
adc
popf
dec
aam
add
outsl
mov
push
xor
insl
lock
push
cli
mov
and
das
xor
lret
jmp
jl
pop
andb
aad
sub
lret
cltd
pop
sbb
subb
mov
andl
std
cli
nop
push
mov
pop
dec
fldenv
mov
add
xchg
mov
pop
jnp
fisttpll
mov
mov
mov
imul
mov
lcall
pop
shlb
dec
into
data16
sbb
push
lret
cmc
sbb
das
pop
mov
scas
mov
push
jg
push
in
jae
add
in
ret
xor
inc
insl
mov
xchg
fiadds
inc
mov
cmp
dec
int3
and
popa
arpl
mov
pop
sub
fimuls
sub
sub
add
pop
mov
xchg
push
arpl
int3
stos
gs
not
push
movsb
clc
stos
stos
mov
cli
cmp
add
lret
push
mov
orl
adc
push
push
jae
jge
test
push
ja
sbb
cmp
lods
aam
cmpb
shlb
or
mov
adc
cmp
aaa
jg
pop
and
fnsave
movsb
fimull
mov
xor
movsb
push
rorb
xchg
inc
int3
inc
and
xchg
pop
push
jmp
in
fldt
xor
scas
mov
inc
cmc
testb
out
imul
in
or
mov
ret
and
jnp
repnz
inc
or
scas
cmp
add
out
test
ljmp
js
dec
sti
loop
lret
out
dec
es
js
je
int3
xlat
call
fidivl
jmp
push
mov
and
add
push
and
pop
nop
sub
xlat
ja
popf
mov
enter
and
xorl
out
dec
movsl
push
in
je
rolb
jmp
lcall
cmpsl
mov
inc
jb
cmp
mov
xor
and
lea
mov
mov
into
popf
out
fiaddl
int
icebp
dec
cmp
xchg
lods
pop
pop
cltd
dec
fcompl
enter
push
aas
sbb
shrl
nop
sbb
pusha
insb
addb
inc
xchg
and
je
int
aad
mov
pop
xchg
cmp
xchg
dec
add
fnstsw
sahf
xorb
xlat
out
dec
cmp
ja
or
out
pop
cmp
lods
incb
inc
adc
and
or
addr16
and
cmp
iret
add
add
cmp
mov
jmp
mov
push
popf
xor
or
adc
cld
mov
push
out
pop
mov
idiv
fwait
jge
mov
jae
sahf
je
lock
dec
push
arpl
ret
xchg
xchg
data16
je
popa
sub
xchg
sub
repz
shll
add
test
aad
sbb
xorl
incl
out
rcrl
or
insb
leave
sub
stc
adc
xchg
rcl
andb
inc
or
push
inc
imul
pop
notb
sub
mov
icebp
cltd
mov
stos
vphaddwd
in
push
mov
xchg
testb
sub
repz
data16
sbb
mov
xchg
cli
inc
xor
sbb
pusha
inc
jl
fmull
xchg
inc
inc
pop
mov
orl
pop
repz
mov
mov
fcmovb
das
repz
sti
xor
adc
scas
sbb
into
xorb
dec
shl
ss
lock
xchg
jo
lds
sarl
push
inc
or
or
rol
add
inc
sahf
sub
jl
and
lcall
sbb
hlt
dec
mov
test
inc
aaa
push
mov
push
cltd
jbe
pushf
call
mov
mov
roll
imul
mov
push
jo
dec
push
cmp
test
scas
fnstcw
xor
mov
mull
out
lods
lds
or
pushf
out
jnp
sbb
cmp
mov
pop
mov
pop
mov
out
fimull
sub
cmpsl
dec
incb
add
cwtl
mov
mov
pop
jg
lret
mov
jmp
pushl
mov
xchg
lds
lods
test
cld
push
iret
das
imul
stos
mov
pop
pop
pop
fwait
cmp
cmpsb
lods
imulb
mov
pushf
xlat
push
lahf
lahf
or
lds
fsubl
aas
cmp
in
fstpl
popa
es
insl
mov
push
pop
dec
dec
push
idiv
das
adc
add
xorb
pop
stc
jmp
add
enter
ret
leave
mov
sub
sub
repnz
xchg
in
pop
push
add
test
inc
mov
adc
adc
and
inc
sub
and
mull
shll
pop
sbb
movsl
dec
xchg
inc
pop
pop
pop
out
call
xchg
jmp
decb
fists
lock
int
out
push
pushf
lods
stos
jmp
jbe
or
cmp
mov
xor
insb
xchg
out
shrb
push
mov
inc
mov
imul
clc
ds
movsl
sar
clc
pusha
imulb
and
mov
mov
jp
adc
arpl
sti
pushf
fsubr
dec
shr
mov
dec
sbb
sbb
jne
jnp
lret
xor
into
ret
out
lock
sarl
les
and
push
inc
pop
push
sub
stos
inc
lods
out
insb
mov
adc
or
adc
push
jge
or
cmp
adc
daa
insl
outsb
int
nop
push
cwtl
push
or
lret
stos
and
mov
xchg
push
xchg
push
or
push
daa
mov
jne
nop
cmp
js
testb
cmp
daa
ret
xchg
mov
rclb
bnd
mov
add
mov
dec
dec
lahf
dec
test
das
cmp
jne
pushl
jbe
xchg
sub
push
fcompl
into
pop
cld
xchg
sahf
push
les
mov
fsubrs
xor
test
adcl
mov
push
push
xchg
outsl
mov
cwtl
sub
and
fisttpl
jmp
pop
pop
mov
cld
push
in
idivb
mov
mov
xor
adc
jp
pop
ficoms
es
inc
shrb
mov
jge
enter
andb
mov
jae
ret
mov
mov
int3
inc
add
addr16
push
pop
dec
loope
loopne
in
sub
push
daa
mov
mov
mov
ror
cmp
push
movsl
adc
push
jnp
mov
jno
ffree
xchg
loope
mov
mov
pop
out
cmp
pop
xor
pop
lds
les
push
ds
inc
xchg
mov
jno
cmp
rcrl
jecxz
jge
mov
mov
rol
sub
mov
imul
mov
push
std
mov
bound
bound
cmpsl
sti
mov
or
push
in
in
cmpsl
daa
rorl
rclb
sbb
add
subl
sub
jmp
cmc
mov
dec
shld
jmp
negl
lods
xor
loope
xchg
enter
sub
adc
ret
inc
sahf
and
pop
jo
divb
adc
ja
xchg
daa
push
fisttps
or
out
cmp
leave
cs
dec
ljmp
lret
xchg
xor
sub
or
bound
pushl
cwtl
imull
inc
and
push
mov
pusha
movsl
call
pusha
lds
push
push
mov
into
push
imul
rcrb
sub
fbld
or
pop
mov
scas
sub
rol
mov
leave
lods
xchg
mov
xor
push
add
jmp
aas
adc
dec
dec
loop
loop
scas
or
lret
pop
inc
jno
cmpb
mov
sub
mulb
daa
sub
cmp
cmp
dec
adc
mov
inc
sbb
inc
and
inc
add
mov
shrb
daa
cmpsl
movsb
ror
std
pusha
cmp
lds
add
nop
sub
or
cmp
xchg
push
fs
int
dec
inc
shll
xchg
movsl
jle
stc
pop
outsb
out
push
adc
enter
hlt
cli
pusha
xchg
lahf
mov
xchg
add
into
ret
mov
outsb
pusha
scas
xor
cmc
mov
inc
cld
sahf
xchg
cmp
jae
xor
jle
mov
sbb
or
rorl
hlt
scas
test
add
lods
adc
je
xor
and
lahf
subl
cwtl
cmp
push
jae
and
adc
cmp
inc
push
iret
mov
xlat
jno
ss
mov
es
mov
rep
jae
pushf
movsl
add
les
mov
ljmp
adc
out
aaa
and
test
and
fcmovb
out
pop
jb
mov
mov
cmp
jge
cmp
xor
mov
mov
leave
imul
mov
pop
clc
xor
push
mov
or
mov
add
pop
imul
repz
mov
lcall
lods
pop
sbb
add
ss
movsb
jmp
out
add
sub
sbb
outsb
or
adc
das
pop
dec
pop
loop
mov
xor
sub
cmp
ret
and
jne
adc
insl
or
dec
aam
jecxz
sub
sbb
imul
sbb
or
ljmp
sbb
or
push
mov
hlt
outsl
adc
mov
and
add
xor
fs
dec
lahf
lret
sahf
adc
pop
ficoms
lds
ret
sub
sbb
or
andl
adc
cmc
sahf
repz
cmp
repz
aas
mov
xchg
cmp
dec
loopne
mov
iret
gs
inc
and
or
lcall
mov
lret
jae
add
pop
jle
add
outsl
inc
xor
jp
or
push
mov
dec
aad
test
rclb
ret
add
int
adc
test
inc
ja
mov
ss
addl
pop
inc
pop
fadds
mov
pop
jge
inc
sbb
lcall
inc
dec
jl
leave
add
sbb
arpl
ret
add
fidivl
pop
mov
mov
mov
mov
or
push
js
mov
popf
xor
push
clc
sub
cltd
je
lea
mov
xor
ficoms
cmp
sbb
fnstcw
cli
xlat
mov
adc
mov
add
cld
inc
mov
cli
sub
xchg
add
aaa
out
insl
dec
xor
jge
inc
inc
push
js
mov
shlb
xchg
int
pushf
and
fsts
inc
loopne
test
divb
jnp
lea
addps
jae
lods
sub
das
lea
ja
sbb
jo
or
cld
ret
push
mov
mov
in
scas
mov
xchg
fidivs
shr
cltd
test
enter
adc
dec
mov
adc
imul
mov
fmul
outsb
dec
aas
aam
pop
mov
call
jle
mov
push
in
xor
jnp
int
out
inc
lods
or
mov
xchg
push
xor
and
or
pop
jp
pop
ret
inc
rcrb
push
fsubrs
pop
jge
paddw
xchg
ja
pop
and
inc
dec
push
out
xor
mov
inc
cli
cmp
imul
hlt
fsubrl
sub
in
fs
andb
bound
xor
call
icebp
inc
dec
xorl
xchg
stos
scas
adc
lods
loopne
enter
sarb
mov
and
add
pop
inc
ja
xchg
jns
dec
adcl
in
and
pop
into
inc
pop
add
push
xor
popa
xor
adc
ljmp
test
cmp
aas
imul
adc
lock
sub
mov
into
push
cmpsl
fisubrl
in
push
fiaddl
dec
pop
ds
imul
sarb
outsb
pop
add
mov
insb
and
lcall
pop
addr16
inc
iret
lds
xorb
test
jb
aaa
sub
add
out
imul
dec
or
negl
cmpsb
cmpl
decl
pop
inc
and
das
mov
add
jo
pop
sarl
mov
ljmp
adc
mov
sbb
push
dec
add
inc
or
aas
arpl
icebp
add
jae
xor
dec
xor
jmp
out
jnp
or
sbb
jne
or
in
jns
repnz
inc
popf
imul
sahf
pop
jae
mov
cmp
jle
bound
repz
mov
out
loop
es
loope
cmpsb
mov
insb
dec
sub
xor
add
dec
mov
out
pop
mov
sbb
xchg
iret
sub
sub
mov
js
ret
stos
cmpsl
mov
ljmp
imul
adc
ret
adc
mov
popf
je
adc
ja
test
cmp
pop
js
cmp
push
adcl
cmpsl
arpl
xchg
jns
push
fdivs
movl
xor
data16
xchg
cli
xchg
xor
test
iret
pop
pop
addb
psllq
imul
imul
out
pop
mov
dec
stc
push
lahf
jnp
inc
pop
lret
fwait
sbb
repnz
idivl
bound
push
cmpsl
into
subb
outsl
in
sbb
push
mov
aad
pop
out
mov
dec
push
sub
push
jb
dec
iret
xchg
xchg
cwtl
dec
rcr
mov
jo
dec
push
and
arpl
ss
out
cs
sbb
bound
aas
loop
shll
outsb
ja
sub
or
mov
icebp
sub
push
push
mul
fidivl
lretw
lods
sub
inc
pop
pop
xchg
dec
ss
and
mov
mov
dec
push
dec
in
push
mov
push
sub
xchg
pop
les
andb
mov
pop
cmp
outsb
fmull
testb
dec
push
mov
xchg
shl
clc
ret
pop
jmp
ja
dec
adc
shll
sub
push
sub
jbe
xor
orl
mov
lea
fnstenv
enter
lods
jo
test
sbb
xchg
call
sbb
sbb
dec
out
cmovne
cltd
lahf
dec
jp
xor
pop
jae
mov
test
fdivl
sahf
push
jo
inc
fnsave
mov
mov
pop
cmp
cmp
mov
addr16
lahf
pop
xchg
add
push
fsubrl
pop
sub
xor
xor
and
jp
data16
lret
mov
xor
inc
popa
arpl
ss
cwtl
mov
dec
or
xor
mov
sbb
xor
mov
subb
sub
imul
mov
popa
insb
iret
pop
bound
ljmp
aaa
mov
jno
out
or
lods
sub
insl
and
xchg
mov
jb
movsb
cltd
jbe
xchg
addr16
cs
sub
imul
add
popa
xorb
sub
or
movsb
jb
jle
cmpsl
mov
inc
mov
not
add
xor
fnstsw
test
sbbb
dec
fcompl
lds
and
xchg
mov
mov
scas
or
addb
pop
dec
aam
mov
jae
mov
pop
jbe
insl
cmp
aaa
ja
lock
xor
das
xchg
add
adc
inc
das
or
push
cltd
loope
dec
mov
aas
shlb
fs
aas
cmp
imulb
or
imul
and
push
sbb
sub
jl
mov
mov
xchg
inc
cli
pop
dec
aam
or
repz
loope
sbb
jge
insb
repz
insb
mov
imul
jbe
add
pop
mov
jae
lods
in
cmpl
jbe
mov
jb
xor
aad
leave
or
test
imul
pop
lock
add
cmp
sub
hlt
adc
jns
jmp
scas
test
jg
pop
fabs
arpl
adc
test
repnz
popa
cmp
test
xchg
jb
data16
mov
rorl
jno
xchg
out
lock
pusha
js
sbb
cmp
rolb
pusha
ja
in
int
xor
push
jbe
rclb
cmp
lods
stos
je
shlb
sti
push
add
test
ljmp
mov
mov
cltd
jns
icebp
push
or
cmp
mov
push
mov
aad
outsb
mov
je
inc
push
push
lahf
test
jge
dec
js
aad
out
ret
call
sub
fldenv
scas
lcall
idivl
lcall
sbb
push
mov
outsl
lds
cld
dec
decl
adc
repnz
pop
ds
sub
sub
lahf
push
popf
sahf
shr
out
fs
and
sub
mov
int
in
sbb
sbb
insb
gs
xchg
lret
dec
push
icebp
add
inc
loope
aaa
mov
loope
mov
cmpsb
into
dec
push
pushl
cmc
cs
call
ret
es
jecxz
mov
cmpsb
jne
outsb
cwtl
mov
xchg
lods
fisubs
push
ja
icebp
xchg
pop
or
jmp
push
jne
xor
int3
ds
mov
or
push
cmpsb
add
or
sar
xchg
add
setae
push
jg
mov
mov
pop
xor
aaa
test
cld
or
je
hlt
inc
lahf
loop
addl
jge
daa
sbb
pusha
mov
fisubrs
xchg
data16
arpl
xor
mov
xor
cmp
lret
pop
push
add
clc
aaa
jmp
movsb
frstor
jge
dec
pop
add
pusha
cmp
popa
xchg
mov
sub
stos
xchg
mov
push
or
cs
jno
imul
xchg
inc
mov
jae
cmp
fdivrl
outsb
mov
das
ja
std
mov
les
fwait
cwtl
pusha
xchg
mov
and
hlt
in
nop
pop
push
lea
mov
jns
sbb
inc
dec
lods
addr16
incl
cmpsl
in
xor
mov
xorb
fsubrl
ror
cmpsl
int3
adc
inc
data16
inc
push
add
movsb
dec
int
mov
loop
or
mov
mov
pop
jnp
jnp
daa
pop
jnp
or
lods
sbb
adc
inc
or
jbe
xchg
xor
pushf
dec
sub
cmp
jne
dec
or
sub
lods
xor
repz
dec
and
push
sbb
inc
and
loope
pop
xchg
leave
or
inc
shll
mov
pusha
cltd
roll
jl
push
pop
push
inc
pop
jmp
mov
cmp
sbb
sub
cld
jp
jno
vhsubpd
add
pop
add
xadd
arpl
insb
xchg
xlat
and
into
stos
lcall
and
inc
xchg
mov
xor
loopne
push
mov
mov
sbb
inc
xchg
rorb
insl
jl
cmp
out
test
lds
in
fs
mov
outsl
push
mov
stos
xchg
into
adc
mov
mov
xorb
mov
xor
movsl
or
inc
cwtl
push
xor
popa
iret
mov
push
arpl
aad
pop
xchg
cwtl
ficomps
xchg
adc
sub
in
dec
addl
test
xchg
xchg
sahf
or
movsb
call
push
mov
mov
orl
lcall
in
pop
xchg
adc
or
fidivs
xor
inc
loope
sbb
dec
push
pop
mov
je
in
jle
repnz
fisubl
dec
dec
test
and
xchg
lcall
cmp
std
fs
call
mov
pop
cli
pop
push
stos
adc
mov
xchg
cli
sbb
and
and
test
add
lcall
hlt
je
jo
jb
pusha
jnp
lea
pop
sub
fwait
aad
dec
xchg
out
stos
ds
jns
cmp
inc
ret
je
add
fistpl
push
in
mov
sub
mov
arpl
cli
jae
cmp
or
sti
lds
mov
clc
cmpsb
icebp
pop
ficoms
pop
xor
adc
xchg
divb
fs
sub
pop
in
and
add
cmc
mov
in
jl
cs
vmwrite
or
and
xchg
pop
jno
or
xchg
idivl
fstps
mov
sbb
in
sub
lds
add
mov
outsb
mov
pushf
cmpsb
push
jne
mov
gs
pop
cmp
pop
jge
sbb
inc
jne
arpl
iret
add
dec
adc
adc
add
aad
fwait
iret
mov
pop
cmpsb
mov
sbb
push
test
sbbl
sub
scas
outsb
jp
mov
and
or
sub
dec
daa
scas
dec
imul
inc
dec
sub
cmpl
movsl
cmpsl
insl
add
mov
mov
cmp
les
jne
mov
pop
dec
outsb
aam
mov
test
lea
mov
jne
imul
inc
sahf
add
fisttpll
jle
lods
add
cltd
insl
mov
and
dec
push
pop
lods
adc
jns
mov
or
push
xor
ljmp
in
push
aaa
popa
xor
jmp
and
ret
pop
mov
push
out
sbb
pop
out
icebp
pop
sub
fidivl
test
mov
loopne
stos
pusha
rclb
mov
sahf
jecxz
ljmp
sti
jp
rcll
dec
fdivr
or
and
mov
dec
jno
dec
ret
clc
mov
cld
mov
scas
test
xchg
dec
jmp
push
nop
jo
or
mov
lods
push
test
mov
add
loope
push
popa
cmpsl
psraw
xchg
scas
mov
ficompl
insb
mov
mov
adc
or
add
mov
movsl
ds
inc
out
xor
loopne
xchg
inc
ss
inc
popa
jp
icebp
dec
out
cmpb
fadd
out
mov
mov
cltd
nop
test
repz
jne
cld
or
ja
xchg
insb
ljmp
outsl
in
outsb
pop
inc
movsb
aad
aam
jbe
pop
lret
jge
cmp
jl
aam
xor
mov
add
or
xchg
dec
dec
pop
xor
mov
dec
cli
sbb
mov
or
jecxz
xchg
lret
outsl
popf
lea
in
pop
mov
cltd
xchg
mov
ret
cmc
mov
inc
or
rol
jb
jl
and
cwtl
jo
shl
xchg
jb
fidivs
fwait
push
cmc
xchg
xchg
cmp
repnz
mov
ds
out
rol
inc
push
jp
sar
arpl
and
sar
mov
pop
leave
pusha
aad
out
sub
inc
jno
add
addl
movsl
cld
js
pop
rol
ss
inc
mov
scas
fnstsw
scas
jmp
dec
sbb
pop
lea
dec
addr16
std
out
mov
gs
mov
and
sahf
insl
or
pop
ds
in
aaa
loop
cmp
xchg
dec
sub
mov
sbb
and
loopne
stos
outsl
loopne
inc
shlb
pop
rcr
adc
mov
lock
cmpl
movsb
inc
insb
fists
andl
mov
aad
popf
addr16
cmp
or
mov
ret
insb
and
mov
std
adc
xchg
sub
sub
mov
or
jno
sbb
mov
inc
xchg
fmul
fidivl
scas
mov
cli
in
lahf
push
jmp
push
popa
mov
cmp
xor
mov
mov
mov
popa
repnz
ljmp
hlt
cmpsb
movsl
out
pop
or
jg
inc
leave
mov
inc
adc
ret
pop
cmp
push
rol
xchg
push
mov
jge
xor
or
xchg
ljmp
ret
add
leave
mov
and
mov
fs
mov
and
sahf
or
daa
je
mov
les
mov
jle
enter
or
into
scas
xor
sub
mov
inc
es
lock
sbb
andl
outsl
fisubrs
cmp
sahf
sbb
out
xlat
popa
shll
mov
inc
mov
or
mov
lret
hlt
nop
out
js
icebp
das
cs
jo
sub
je
mov
stc
sbb
jmp
lea
mov
test
lret
inc
cmpsl
repz
js
enter
or
ljmp
mov
incb
or
dec
mov
xchg
arpl
add
faddp
mov
shr
adc
dec
in
movsl
mov
andl
dec
xchg
push
pop
xchg
jns
ja
xchg
push
sub
mov
cmp
pop
push
pop
nop
in
inc
and
push
ja
fstps
or
pop
xchg
or
scas
out
sahf
pop
dec
fldenv
jl
out
add
xchg
aaa
push
sbb
add
lret
xlat
pop
les
enter
mov
test
fcoml
dec
dec
iret
cmp
push
repnz
mov
cli
leave
rcll
fs
repz
and
test
andl
hlt
mov
movq
decl
call
adc
shll
lock
shlb
loopne,pn
jno
cmpsb
sbb
jne
inc
outsb
push
ret
or
mov
into
movsb
mov
stos
scas
xor
xor
fisttps
call
cmp
aas
mov
test
sub
hlt
jle
push
insl
imul
pusha
inc
pop
test
fxch
pop
insb
push
or
and
pusha
push
add
add
movb
push
dec
out
dec
push
push
imul
or
in
lods
adc
mov
or
mov
inc
popa
rol
jno
xor
test
adc
pop
sub
jbe
xchg
pushf
mov
lods
je,pt
adc
add
out
cmpsb
inc
rclb
ret
pop
imul
fisubrl
add
and
ja
call
mov
mov
nop
xor
inc
xchg
cmp
sub
cmp
add
lahf
add
fdiv
sbb
mov
mov
aam
rcrb
push
test
pop
cld
pop
leave
jle
mov
xlat
mov
movsl
js
lock
push
push
fadd
stc
fdiv
xchg
cmp
xchg
movsl
sar
fucomi
clc
mov
inc
popa
loopne
ja
push
mov
dec
jns
sub
int
xlat
sub
cmp
sbb
cwtl
pop
dec
clc
dec
mov
jne
call
fsubs
into
mov
in
or
lret
lcall
xchg
leave
cmpsl
fsubrs
mov
leave
push
mov
in
pop
add
mov
stos
jg
mov
xchg
mov
mov
lock
xchg
and
fcomps
and
aaa
ret
mov
nop
or
mov
sbb
push
inc
ljmp
push
jmp
andb
mov
cwtl
dec
in
mov
fdivrp
out
dec
mov
sub
fcmovnb
push
xchg
and
ret
sbb
xchg
cld
dec
adc
addr16
adc
iret
cli
out
sub
stos
inc
in
ffree
mov
jnp
pop
fldt
lds
jle
out
cmpsl
mov
xor
cld
jl
stos
inc
push
dec
and
inc
stos
adc
xlat
les
pop
ljmp
arpl
dec
shl
movsb
fistps
or
js
cmp
mov
cmp
into
mov
aas
fsub
das
jmp
stos
mov
inc
insb
jae
aas
fdiv
mov
cmp
xorl
rcll
popf
aad
or
inc
gs
or
and
mov
push
sbb
adc
je
js
das
cli
fdivrp
dec
jmp
sub
lods
lcall
adcb
into
ret
vpsllw
aad
out
sub
xor
scas
insb
push
int
inc
arpl
sti
push
cmp
mov
inc
xchg
lods
dec
sbb
push
lea
in
jo
mov
push
ss
dec
repnz
js
sub
les
pop
mov
or
push
scas
divl
loop,pt
les
icebp
int3
je
je
je
push
push
shlb
xchg
test
ds
rorl
pop
mov
repz
dec
pusha
lds
xchg
push
dec
icebp
xlat
push
lods
sub
push
test
shrl
not
sub
fwait
push
out
loopne
call
cmp
repz
jge
pop
jge
std
dec
arpl
pop
pop
int
add
das
cmp
push
sarl
xor
xchg
sahf
xor
out
daa
mov
jl
xchg
lock
movsl
push
adc
jae,pt
je
pop
inc
and
aam
and
and
xchg
lahf
add
stos
dec
lds
jno
cmp
push
mov
dec
mov
nop
inc
sbb
es
cmp
lods
aad
add
jbe
mov
test
movsl
and
sub
rcl
add
xchg
mov
xor
xor
and
fcomps
fcomps
sub
sub
in
das
xor
pop
imul
fidivs
inc
sti
in
push
lock
icebp
ds
scas
mov
mov
lret
and
or
nop
pop
jns
fwait
inc
fbld
sbb
mov
xor
mov
xchg
cmp
aaa
call
or
jle
bound
int3
subb
inc
jmp
stc
insl
gs
push
push
push
imul
jl
cmp
fcmovnb
fsts
mov
push
leave
sbb
roll
and
mov
mov
outsb
divl
out
push
insb
push
pop
out
in
pop
jl
mov
sub
adc
lds
xor
clc
sbb
mov
or
mov
or
aas
leave
cwtl
call
sub
cmp
es
aas
cmc
inc
add
cmp
or
int3
ficomps
lcall
dec
sub
add
jne
or
pop
jae
stc
add
dec
mov
xchg
adc
sbb
xchg
ficomps
jle
loopne
stos
dec
popf
jp
push
inc
dec
xchg
leave
or
fistpl
push
sahf
je
xor
test
mov
cmpsl
stos
scas
fimull
sub
or
ljmp
stos
fdivrl
es
loope
out
adc
test
sarb
cs
std
scas
jns
int3
add
les
call
or
ja
lcall
in
push
mov
cmp
or
dec
sahf
lret
cmp
inc
cmc
fsubr
sub
sbb
cmpsb
ljmp
into
pop
outsb
sbb
jge
outsl
fidivrl
inc
adc
sub
scas
popa
sbbl
jle
sahf
sti
pop
idivl
or
inc
cmp
dec
lret
mov
xor
push
popa
cmp
jns
mov
outsl
sbb
mov
mov
jno
mov
xor
out
into
popa
jmp
sbb
icebp
jb
idivb
in
sub
insl
pop
mov
jae
pop
cmpsl
or
aaa
mov
jmp
sub
ret
sahf
sbb
mov
pmovmskb
fs
inc
mov
jnp
cmp
sbb
je
lahf
pop
dec
dec
push
pop
aaa
shlb
fsubr
or
fcompl
stos
mov
add
sti
mov
push
add
lods
stc
test
scas
xchg
sbb
dec
js
fisubrs
out
lds
je
pop
pop
pop
sub
roll
xor
imul
stos
fdivr
dec
mov
iret
fwait
je
sbb
and
in
js
dec
iret
inc
sbb
test
pusha
insl
mov
dec
push
pop
cmp
sbb
mov
inc
adc
jg
sti
mov
sub
mov
cmp
sahf
dec
pop
pop
std
mov
mov
inc
and
fildll
insb
jl
pop
cmc
clc
into
jle
ljmp
loopne
push
sub
jge
out
ret
idiv
loop
jnp
cmp
sub
dec
dec
sub
cmp
push
clc
out
testl
mov
or
jecxz
xor
out
fcmovu
mov
xor
jno
test
push
repz
fmuls
adc
into
jns
sbb
fidivs
les
shll
push
sbb
xor
mov
mov
imul
mov
sbb
imul
repz
xchg
adc
test
mov
mov
push
cmp
inc
rcl
frstor
push
enter
jl,pn
jb
add
lods
movsl
out
lret
xor
xlat
fidivrs
pop
negb
rcrl
inc
cltd
adc
das
lods
loop
stos
jmp
mov
xor
sbb
sub
daa
rol
test
divps
inc
add
fs
xchg
arpl
push
dec
cmpsb
xchg
add
subb
imul
xor
inc
xchg
pop
dec
in
jge
pop
push
popl
shl
jl
cmp
fcmovnbe
and
push
fiaddl
cmp
and
loop
in
add
incl
in
add
or
fmulp
cmp
xchg
or
jb
and
pop
sub
mov
xor
arpl
stos
push
imul
mov
icebp
icebp
bnd
bound
cli
pushf
sbb
mov
loope
push
jnp
in
fcmovb
add
mov
inc
repnz
xchg
xor
testb
lret
movsb
cmpsb
mov
and
add
sbb
les
mov
jnp
jne
cli
xor
cmp
xor
and
or
call
cmpsl
mov
pop
inc
or
add
mov
mov
mov
aas
cmp
mov
mov
shrl
sti
and
mov
push
shll
inc
inc
push
xchg
imul
push
mov
mov
into
cmp
inc
hlt
inc
js
mov
movsb
jg
jae
dec
inc
ss
cmp
cwtl
fs
cmpl
sahf
sahf
ss
div
or
or
adc
jns
mov
in
mov
and
arpl
xchg
sbbl
cld
loop
inc
ficoml
testb
ljmp
pusha
dec
mov
mov
inc
frstor
lcall
int
push
adc
dec
scas
or
adc
xchg
negl
call
loop
cld
adc
or
mull
push
adc
fs
inc
out
push
int
cli
mov
data16
mov
sub
jp
aaa
push
fadds
ret
out
adc
lret
int
ljmp
loop
sbb
int3
insb
cld
in
popa
sti
loopne
jne
bound
fistpl
pop
xlat
sbb
mov
cmp
icebp
xchg
or
push
inc
pop
sti
pushf
lret
sbb
cmp
daa
dec
fstpt
leave
insb
daa
jb
mov
out
xor
ja
sub
mov
pop
inc
dec
adc
sahf
cs
mov
add
mov
push
adc
and
out
aad
jle
std
loop
push
xchg
lds
std
xchg
fnstenv
mov
and
rorb
outsl
insb
sbbb
xchg
xchg
pop
jnp
data16
lods
popa
test
cmpl
mov
dec
sbb
repz
mov
ficoms
xor
push
fildll
mov
flds
lea
or
cmp
sbb
mov
or
inc
ficoms
test
mov
pop
sbb
inc
out
insl
add
jecxz
insb
test
inc
cmpl
mov
sbb
pop
jle
cmpsb
sub
sub
in
push
pop
sub
mov
mov
inc
mov
sbb
mov
lods
pop
lods
cld
in
mov
jno
in
cmp
shlb
pop
sbb
sbb
xor
test
jmp
adc
jns
mov
and
daa
stos
add
sarl
sub
push
test
dec
push
clc
cmovns
dec
sub
dec
lea
xchg
push
test
push
xchg
in
xlat
mov
cli
test
outsl
pop
fs
dec
scas
pop
xor
xor
add
pop
mov
push
clc
icebp
cmc
lock
xor
lret
std
shlb
in
jae
outsl
jo
in
mov
ret
jne
ss
lahf
mov
cmpl
scas
int3
repz
rcrl
sbb
sti
sub
adc
rcr
loope
clc
pop
dec
bnd
jmp
jae
lcall
mov
sbb
std
mov
mov
rorb
push
fcompl
inc
xchg
fldenv
sbb
loopne
push
add
adc
mov
pusha
or
cmp
add
popa
sub
pop
inc
inc
pushf
ss
pushl
cli
pop
or
shrb
stos
sahf
decb
xor
pop
ds
mov
pop
arpl
dec
sti
sub
iret
loop
dec
aam
ds
mov
or
cmp
fwait
mov
sbb
movsb
out
mov
cmp
scas
mov
sbb
push
shll
repz
xor
or
sbb
movsb
out
mov
pushf
ffree
or
mov
sbb
popf
jge
data16
jp
jmp
inc
fldz
subb
mov
leave
arpl
ljmp
or
arpl
inc
mov
jns
loopne
bound
lcall
loopne
fs
sbb
or
imul
inc
and
enter
xchg
pop
pop
pushf
push
sub
cmpsl
out
xchg
add
push
lods
inc
xchg
aad
js
icebp
fucomp
pop
mov
adcb
aaa
mov
fiaddl
data16
rolb
push
loope
fwait
daa
cld
mov
testl
repnz
roll
imul
pop
cmp
dec
pop
dec
imulb
call
mov
int
push
daa
adc
movsb
stos
das
push
idiv
fstpl
outsb
test
cli
pop
xchg
cmpsl
or
sub
fistpll
push
stc
rcll
mov
jmp
push
cmp
or
sub
test
pusha
popf
dec
cmp
and
inc
pop
cld
stos
cmp
xor
repnz
inc
mov
js
js
test
sbb
fisubl
mov
pop
aas
xchg
pop
jnp
xchg
mov
lcall
insb
popa
scas
mov
std
dec
pusha
sbb
ret
adc
nop
das
nop
sbb
stos
dec
loopne
aas
mov
xor
xor
ret
frstor
fcoms
ss
push
repnz
sarl
notl
in
push
es
int
mov
mov
sahf
movsl
sbb
test
sub
inc
loope
xor
pop
pop
in
xchg
aas
mov
dec
clc
ret
jmp
insl
mov
lods
adc
mov
add
jae
inc
inc
xchg
adc
jb
frstor
addr16
popf
div
mov
test
jecxz
aas
add
push
xchg
popa
test
pop
icebp
inc
sbb
cli
addr16
xchg
scas
outsl
push
scas
pop
sub
add
in
mov
adc
repnz
push
mov
cmp
insl
hlt
rcrb
xor
sub
jns
inc
mov
and
sti
add
mov
mov
push
cli
push
into
cmc
jnp
rcl
xchg
insb
adc
pop
repnz
ret
dec
cmp
lahf
arpl
outsl
vmovupd
icebp
cs
dec
outsb
inc
jg
mov
jmp
pop
or
xchg
xchg
sub
mov
shlb
pop
pop
loope
cli
icebp
pop
cltd
cmc
and
pop
sub
ficompl
pop
dec
sub
lods
lahf
out
mov
lock
dec
es
fcomps
or
outsl
mov
push
out
push
jecxz
xor
mov
dec
scas
xor
push
and
mov
addb
jno
push
out
dec
inc
cld
dec
adc
add
mov
pop
pop
or
punpckldq
add
and
mov
iret
out
inc
and
das
das
mov
inc
loop
sbb
xchg
inc
mov
dec
inc
aas
dec
xchg
lock
cmp
imul
xchg
mov
push
sahf
in
add
and
mov
or
xchg
loope
mov
inc
cmp
incl
xchg
jne
out
divb
shll
xchg
jmp
sti
adc
repz
sub
dec
leave
xor
jns
jge
cwtl
scas
out
aad
pop
mov
std
ffreep
pop
pusha
arpl
xchg
out
push
cmp
lret
or
shl
jbe
popl
xchg
xor
fwait
mov
dec
clc
and
roll
and
ss
push
out
inc
xlat
mov
pusha
jmp
dec
sbb
mov
or
mov
jecxz
inc
aaa
mov
jbe
aas
iret
stos
xor
dec
imulb
loopne
mov
adc
add
mov
ret
in
andl
dec
jmp
jg
repz
sbbl
dec
popa
movsb
fisubrs
ret
inc
das
pusha
repz
dec
ss
mov
or
push
fcompl
shll
xor
in
ds
xor
push
push
inc
insl
cld
jb
adc
sbb
lds
sub
push
popa
aas
test
sbb
mov
xchg
shll
out
sbb
push
inc
jge
imulb
inc
subl
sub
lret
xchg
lcall
sahf
sub
mov
cmp
mov
popl
push
cltd
repz
mov
in
jbe
adc
inc
out
mov
cmpsl
sarb
cmp
das
or
xchg
and
mov
inc
lcall
push
cltd
push
cmpsb
clc
std
sahf
fadd
subl
call
inc
arpl
shrb
pop
jle
sbb
mov
mov
into
add
ja
mov
ret
outsl
imul
cmp
mov
mov
mov
push
divl
icebp
and
sub
xchg
int3
sbb
les
mov
or
rclb
in
repz
jmp
insb
or
test
inc
clc
hlt
sub
aas
or
addl
data16
pop
xor
jl
loope
mov
or
push
psubsb
push
out
nop
add
and
popa
jmp
push
fcompl
daa
lret
mov
mov
fwait
in
pop
jge
mov
mov
rcl
insb
roll
fstpl
cmp
xchg
ds
fs
add
adc
jb
repnz
pop
adc
add
dec
add
xchg
icebp
and
nop
or
insb
fbstp
out
pop
fcoml
je
push
and
cmp
mov
aaa
mov
sub
add
and
sub
mov
pop
push
push
lret
mov
mov
xorb
jmp
inc
xor
and
push
dec
push
out
sbb
mov
jecxz
outsl
mov
jne
jns
and
daa
cwtl
gs
mov
xchg
lret
movsb
xor
loop
xchg
cmpsl
mov
add
cmp
mov
jecxz
push
adc
aam
loope
jg
jl
notl
adcl
mov
mov
add
dec
ja
out
mov
loope
pop
xchg
es
lods
pusha
loopne
div
push
add
mov
imul
rcl
push
adc
jg
fcmovnu
push
and
dec
pop
call
jecxz
imul
dec
and
daa
test
jp
sub
mov
std
xor
xor
ds
or
mov
xchg
lcall
mov
mov
dec
push
sub
rolb
add
lahf
and
or
inc
loope
cmp
push
movsb
dec
pop
sub
mov
movsb
and
xchg
icebp
xor
insl
addr16
daa
out
stc
adc
cs
aaa
inc
pop
rclb
cmp
pop
ret
enter
out
dec
cmp
adc
mov
mov
dec
xor
push
jp
inc
lods
xor
jo
add
jg
lahf
out
cmp
mov
dec
xchg
mov
cmpl
xchg
je
imul
xchg
loope
bound
insl
push
roll
rolb
shrl
call
in
out
rcr
mov
xchg
cli
lods
mov
out
cmp
cmp
jl
dec
xor
popa
lods
or
imul
mov
cmpsl
or
add
lea
lret
dec
cmpsb
or
add
mov
fwait
jle
pop
dec
mov
jp
lahf
idivl
pop
cmpb
jmp
lret
int
scas
push
sub
jb
pop
movsb
sar
insl
cs
add
and
cmp
jae
xor
mov
mov
mov
loop,pn
arpl
push
insb
aam
fldcw
sub
aas
xorl
shll
adc
out
loope
xchg
jl
out
and
jbe
nop
enter
or
loope
ret
sbb
xchg
and
mov
fisubl
xchg
push
int
mov
jp
dec
push
or
fisubrl
enter
int3
xchg
fsts
add
push
enter
ljmp
mov
xor
add
fisttpll
pop
or
int
in
cmp
fdivl
ss
xor
pop
mov
mov
and
imul
push
xlat
or
add
xchg
adc
inc
adc
pop
aam
jo
add
xchg
loope
fbstp
push
sbb
into
in
test
js
add
mov
or
mov
imul
movsl
lret
hlt
mov
or
into
in
push
ds
fistpl
pop
mov
jge
sbb
dec
xchg
jo
jns
xchg
stos
es
mov
push
sar
insb
xor
movsb
int
clc
xchg
mov
add
inc
sbb
dec
scas
xchg
sub
and
sbb
outsb
jo
xchg
call
dec
cmp
cmc
je
jns
je
iret
lds
mov
push
stos
out
shrb
cmp
push
lret
inc
repnz
adc
cmp
add
faddl
inc
add
out
jecxz
pop
sarl
scas
dec
scas
pop
mov
cmp
or
gs
inc
repz
das
pop
test
push
repz
fstps
mov
pop
cmc
mov
repz
aas
push
ret
lock
jnp
das
shlb
gs
pop
mov
cmpsb
sub
adc
shll
roll
pusha
lea
pop
test
insl
sbb
cmp
jp
xchg
jle
sbb
and
cmp
add
stc
xchg
mov
inc
sub
sub
ja
adc
data16
jge
xor
mov
push
jl
inc
cs
icebp
fstpl
sub
push
aaa
imul
xchg
ss
sahf
lret
or
int3
xor
insb
push
frstor
sahf
sarl
into
xchg
movsb
mov
fld
add
cmpsl
stos
pop
addr16
push
ret
js
sbb
bound
adc
in
or
icebp
sub
sbb
in
aas
ret
mov
mov
mov
mov
sub
adc
push
push
and
inc
cmp
inc
jp
lahf
jns
pop
imul
mov
stc
inc
cmp
inc
add
xchg
mov
xor
shll
int
add
in
gs
cltd
cmp
jbe
lods
push
test
pop
xchg
add
cltd
pop
inc
shll
mov
inc
clc
mov
ret
push
xchg
popf
nop
push
xor
rcr
mov
int
and
xlat
add
ds
loop
js
shrl
lahf
dec
sbb
rorb
push
lcall
loop
sbb
sub
insb
popf
cli
sbb
fs
cmpsb
gs
adc
mov
push
test
adc
mov
mov
enter
repnz
inc
or
loope
push
aad
mov
inc
inc
push
mov
cmpsb
shl
clc
jnp
dec
outsb
jmp
outsl
mulps
outsl
outsl
mov
sub
pop
mov
out
shlb
fwait
mov
lds
mov
mov
add
pop
imul
call
nop
adc
xchg
cwtl
scas
stos
dec
adc
cwtl
aam
lods
mov
jns
mov
cmpsl
and
pop
fdivrl
and
inc
imul
cs
lahf
aas
pop
sbb
push
add
xor
jo
stc
adc
test
test
mov
pushf
test
or
xor
inc
insl
out
clc
nop
xchg
das
sub
or
cmp
int3
out
or
mov
push
push
lods
stos
sbb
das
arpl
aas
and
mov
outsl
sbb
sub
insl
xchg
jmp
jno
push
fistpl
mov
arpl
lods
test
psubd
or
mov
and
ret
pop
insl
xchg
cmp
js
not
inc
ss
popa
mov
sbb
mov
std
pop
subl
add
inc
insb
stc
mov
xlat
sarb
sub
add
mov
mov
inc
pop
ret
cmp
xor
cmp
dec
int
mov
inc
or
aad
mov
mov
pop
mov
iret
mov
add
cmove
iret
mov
mov
pop
clc
xchg
or
shl
shr
in
popl
jbe
sbb
sahf
addr16
cmp
inc
cmp
dec
inc
or
ja
jle
int3
insl
jecxz
rolb
push
in
xchg
in
mov
js
lods
pop
sub
ja
mov
out
xor
mov
cli
sbb
sbb
fisttpll
fsts
rcll
mov
into
stos
push
sbb
imul
cmp
mov
ss
test
mov
popa
xchg
daa
cmp
xchg
sbb
dec
and
nop
adc
mov
leave
icebp
out
pop
mov
xor
data16
repnz
js
dec
jbe
sarl
mov
subb
bound
push
fistpl
pop
ss
pushf
lret
xchg
push
jle
orl
xchg
jbe
mov
and
outsl
aam
aas
mov
ss
test
jecxz
and
hlt
addl
adc
mov
fidivrs
adcb
mov
mov
jo
repz
sar
call
xchg
xor
arpl
test
sbb
lret
or
sti
adc
hlt
cmp
push
mov
dec
leave
sbb
lods
test
push
xor
in
mov
mov
mov
out
mov
mov
or
jae
jmp
jo
lods
sub
jns
lds
lds
cmp
xor
pop
fcom
adc
xor
movsb
cmp
cld
fmuls
mov
rol
ror
jl
test
and
push
sub
and
mov
push
cmp
data16
lods
movsl
cmp
adcb
lock
inc
jecxz
mov
xlat
xor
loope
fnstsw
out
mov
mov
enter
cltd
pop
in
lods
xorb
mov
movsb
jg
push
ds
push
inc
pop
inc
sbb
ljmp
push
xchg
push
lds
or
incb
scas
incb
out
sbb
and
popa
ss
adc
and
in
pop
sub
jmp
ret
dec
adc
jne
xchg
cmp
mov
inc
aas
aam
or
adc
stos
pusha
mov
aaa
xchg
add
sub
push
ret
or
mov
push
fsts
cld
ror
hlt
push
mov
icebp
adcb
fadds
push
xor
add
test
enter
aad
bound
mov
mov
and
lds
dec
pusha
pop
xchg
insl
cmpb
pop
cwtl
std
fistps
sarb
push
shlb
rorb
adc
push
inc
mov
stc
xor
icebp
shl
subl
mov
cs
and
adc
jnp
xchg
lea
xchg
dec
add
jmp
cld
xchg
test
lods
or
pop
nop
cwtl
aaa
sub
std
sub
pop
bound
and
mov
xchg
inc
pop
xor
sbbb
enter
out
out
rcrl
and
adc
addr16
mov
or
and
test
ret
jge
insl
add
sub
call
fiaddl
xchg
sbb
inc
xchg
fwait
push
mov
or
insb
sbb
and
add
xchg
fcmovb
cmpsb
hlt
scas
cli
sbb
push
in
adc
add
int
xchg
and
mov
ss
fiaddl
stc
iret
scas
ret
mov
das
jae
push
insb
push
lock
repnz
ljmp
push
repz
popa
insl
mov
fsubl
or
test
add
popf
loope
jecxz
fwait
push
repnz
int3
rsm
addb
dec
inc
dec
inc
pusha
daa
leave
sbbl
test
adc
lret
push
pop
lods
sbb
dec
add
insl
mov
stos
faddp
xchg
fldt
cmp
cli
push
lret
and
rdmsr
cli
loopne
outsl
movsl
mov
lea
fbld
mov
pop
or
xchg
mov
cmpsl
xchg
iret
jns
in
dec
flds
ret
cltd
out
xor
je
arpl
cld
push
mov
sbb
inc
sub
push
arpl
add
pop
outsb
mov
mov
add
ret
mov
cwtl
lock
sarb
push
and
and
push
lret
lcall
ret
orb
repnz
ss
dec
push
orl
adc
aad
lahf
test
add
jnp
xor
test
lret
mov
cmp
jno
jo
dec
push
in
jg
inc
xor
lret
adc
and
add
mov
les
fists
jmp
js
mov
mov
cmp
fidivrl
or
in
xchg
push
in
mov
add
ficoms
cwtl
popl
mov
jo
mov
dec
std
lods
cmp
cmp
xchg
adc
repz
mov
lret
dec
xchg
inc
push
cmp
or
outsl
xchg
xor
in
ficoml
mov
aam
inc
pop
repnz
out
in
add
sub
xor
and
pop
inc
test
test
jg
mov
push
int3
add
clc
in
pop
ljmp
mov
cmpsb
dec
cmp
adc
mov
sbb
dec
loope
cmp
movzwl
repnz
inc
lea
test
cmp
stc
jge
jp
push
fsubs
ja
test
cld
rcrl
and
aad
lods
cmpsl
mov
test
fs
jl
push
xchg
mov
sub
pusha
or
addr16
les
or
and
add
in
jl
mov
mov
jmp
das
fisttpl
fcompl
pop
bound
mov
lds
enter
lret
jns
mov
ror
inc
call
push
sbb
xchg
mov
fbstp
cmpsb
shrb
mov
ret
popf
shrb
and
fldt
loop
leave
clc
sub
and
cmp
pop
mov
rclb
lahf
lods
imul
jno
push
repz
push
out
jae
fwait
orps
insb
xor
jne
loop
push
in
js
enter
loop
std
push
cmovl
jecxz
cmp
int3
push
leave
lahf
xor
xchg
pop
pop
popf
pop
aad
sub
pop
loop
push
fstpt
pop
out
in
xchg
shlb
dec
lods
dec
mov
jmp
push
addl
mov
mov
mov
insb
mov
aad
xlat
lea
inc
scas
pop
repz
aas
sub
adc
jg
lds
push
dec
es
rol
ja
movsl
pop
cs
sbb
icebp
adc
and
dec
mov
pusha
mov
je
stos
iret
bound
fistps
dec
pop
push
dec
mov
push
pop
insb
shll
xchg
popf
ljmp
mov
pop
inc
jg
cmp
mov
pop
dec
icebp
repz
ds
cmp
in
mov
repz
fwait
sub
mov
int
imul
dec
and
inc
pop
xor
mov
scas
mov
popf
aad
and
call
mov
inc
xchg
sub
adc
lods
dec
std
and
mov
popf
push
jg
lret
fistpll
stos
mov
icebp
les
pop
lock
jp
inc
fs
enter
mov
jmp
fwait
mov
sbb
jns
incb
orl
lret
and
jo
xor
sti
pushf
cwtl
divl
mov
dec
repz
fldt
push
dec
add
loope
push
fmuls
pop
arpl
sbb
mov
pop
push
push
inc
pop
lods
xor
filds
pushf
mov
inc
xor
gs
and
inc
repnz
in
data16
mov
int
push
iret
sti
divl
sbb
cmpsb
jno
aam
jbe
and
sahf
fstpt
dec
loop
adc
std
shlb
push
rorb
pushf
and
mov
add
jae
mov
or
mov
inc
mov
aad
pop
cli
cmpsl
call
cli
andb
fadds
push
test
xchg
cmpsl
xchg
pop
and
gs
aaa
into
push
sbb
xchg
mov
outsl
gs
std
xchg
into
sbb
push
push
xchg
icebp
js
and
dec
ljmp
mov
or
cltd
xor
les
push
mov
jge
ret
mov
dec
scas
xlat
push
mov
push
mov
ret
sbb
call
dec
jg
pop
and
inc
and
fildll
imul
daa
gs
pushf
fcompl
add
add
mov
idiv
inc
lock
out
ja
and
std
dec
sub
push
icebp
lret
inc
jmp
adc
add
push
xchg
sbb
aad
daa
addl
out
ds
mov
popa
ret
cmp
pop
xor
fs
addr16
cmp
and
push
inc
mov
js
adc
or
orl
cli
frstor
or
mov
dec
pop
imul
cmpsb
stos
sbb
sbb
iret
mov
lfence
inc
inc
mov
pop
pusha
or
cmc
mov
cmp
inc
xchg
inc
pushl
iret
call
dec
popf
sub
xorb
cmp
mov
ficoml
js
cltd
xor
imul
xlat
lahf
shll
fnsave
sahf
dec
mov
cmp
out
and
adc
push
sub
movsl
inc
into
enter
jle
and
sbb
cmp
cmpsb
and
and
fcompl
sbb
push
and
aas
and
mov
in
mov
and
cs
jmp
int3
xchg
fs
aad
pushf
push
xchg
int3
loope
repnz
push
enter
imul
pop
es
insl
and
xchg
imul
sub
push
mov
xchg
dec
ds
and
stos
lahf
fisubrl
cmp
clc
add
cmpsl
mov
sbb
idivl
adc
pop
rorb
cmc
cmp
sahf
clc
les
xchg
cmp
mov
cmp
pusha
dec
out
dec
and
xchg
xchg
cmp
addl
dec
scas
jo
cltd
xchg
or
mov
orl
push
imul
inc
mov
xor
jp
andb
xchg
scas
faddl
aam
dec
xor
sbb
jne
pushf
ret
mov
jb
in
cmpsl
test
dec
pop
mov
lods
lret
lret
xchg
mov
push
inc
push
sub
jmp
mov
push
cmpsb
or
ficomps
push
loope
outsl
xorl
push
dec
push
repz
cmpb
xchg
bound
xchg
cmp
push
not
jnp
ja
loopne
sub
xor
repz
sub
stos
idiv
push
arpl
mov
ja
dec
insb
pop
lcall
and
lahf
cmp
mov
fs
leave
cmp
jle,pt
outsb
lahf
dec
jne
add
pushf
je
xor
sbb
popf
mov
movsb
jmp
ds
sti
out
push
bound
cwtl
cwtl
fs
call
lcall
fiaddl
andb
push
push
into
scas
lahf
or
fstps
and
inc
mov
outsl
mov
push
insb
pop
psllq
cmpsb
aad
mov
aaa
fldt
sbb
and
loopne
in
rcll
push
and
in
inc
and
inc
push
xor
addr16
in
fcompl
inc
mov
shl
mov
inc
cli
xor
fisttps
push
xlat
jle
in
fbstp
dec
divb
sahf
add
cwtl
int
into
cwtl
lret
pop
or
sti
cmp
xchg
ret
push
test
insb
std
sub
mov
cs
out
xorb
fcomi
in
mov
call
int
lods
or
into
mov
push
mov
arpl
jno
sbb
xor
addl
cvtps2pi
fsincos
fcoml
mov
dec
pop
pop
push
dec
aad
push
pop
scas
xchg
push
sbb
addl
mov
clc
int
pop
lret
adc
cwtl
or
inc
cmpsb
enter
call
push
xchg
insl
cmp
cld
mov
xor
aas
cmp
and
or
jbe
or
mov
mov
mov
adc
inc
pop
into
sub
mov
adc
xchg
push
pop
cld
popf
pusha
loop
mov
dec
adcl
cli
js
mov
xor
in
jle
jmp
mov
dec
lds
jle
sbb
sahf
js
movsb
je
les
cmp
insl
sbb
or
adc
mov
pop
push
test
in
call
nop
or
pop
mov
outsb
jnp
leave
adc
lods
iret
sbbl
jnp
and
jno,pt
and
xchg
cmpsl
add
cmp
inc
mov
sbb
xchg
push
mov
cmp
push
mov
add
mov
cltd
inc
repz
iret
sub
mov
movsl
mov
mov
push
pop
xchg
sub
xchg
push
popa
subl
rcrb
xor
std
mov
out
or
test
popa
or
iret
add
faddl
mov
pop
mov
sarb
enter
lds
mov
or
sbb
shl
pop
dec
test
imul
repnz
loopne
cli
mov
fistps
call
data16
push
xor
mov
push
insb
inc
xlat
orb
loope
stos
rolb
jne
lods
out
push
cld
sahf
leave
adc
inc
mov
mov
out
pop
rcrl
ja
mov
aad
hlt
test
push
insb
int
xchg
lods
cwtl
xchg
mov
jbe
mov
shll
repnz
mov
testb
leave
xchg
aaa
movsl
imul
into
add
jecxz
or
sub
cld
dec
jle
sbb
lahf
xchg
loop
dec
mov
xor
dec
testl
jl
loop
in
cwtl
adc
lock
mov
in
insb
mov
add
aaa
and
pop
movsb
loop
loopne
aaa
js
lods
rolb
mov
movsb
fs
mull
jecxz
jns
push
scas
xor
cmp
int3
mov
sarl
fcomip
out
jae
aas
aas
xchg
xor
jnp
push
xor
xchg
stos
mov
mov
add
cmp
aam
sti
mov
push
fucom
movsb
push
cltd
in
mov
add
iret
jne
outsb
sbb
rcrb
or
clc
inc
xchg
push
hlt
jo
mov
dec
stc
pop
enter
rclb
mov
or
and
jnp
lea
cli
xchg
xor
lds
sub
adc
and
lods
inc
arpl
clc
cmp
cli
sbb
mov
xor
jmp
jbe
mov
mov
xor
sbb
mov
mov
jns
lahf
test
test
push
leave
inc
adc
sub
jbe
out
mov
int3
scas
push
lret
mov
add
ss
fldcw
inc
push
iret
js
sub
xor
les
dec
ss
test
xchg
nop
int3
cltd
fildll
jno
and
stos
cltd
mov
sub
sub
test
mov
data16
inc
scas
repz
xchg
adc
fcomps
mov
aad
jne
adcb
hlt
leave
and
mov
cmp
in
cli
inc
rorb
jnp
mov
out
out
aam
push
popa
stc
jb
pop
out
mov
pop
sub
into
scas
stos
inc
je
fsubs
out
lods
into
hlt
clc
shll
mov
popa
jl
sbb
adc
enter
or
xchg
out
dec
rcr
adc
sub
pop
xchg
popl
pop
stos
jg
testb
add
add
jb
cmp
pop
filds
sub
dec
pop
inc
and
push
cmp
ja
loopne
xchg
psubb
and
in
pop
pop
mov
cmc
int
scas
call
lods
adc
insb
jle
fcoms
mov
js
or
mov
movsb
bnd
lds
movsb
int3
ds
fcoml
ja
push
jp
xchg
cwtl
pop
jge
xchg
scas
sub
call
lret
push
lods
xor
std
in
fstpl
sub
jae
cli
stos
int
push
popa
lds
pusha
and
dec
sahf
push
pop
ror
inc
adc
mov
dec
or
test
out
in
cs
pop
les
pop
pop
fucomp
inc
lds
sbb
and
je
sbb
mov
cmp
pop
into
scas
mov
leave
scas
imul
ljmp
pop
or
lret
loopne
cs
bound
add
addl
adc
inc
orl
cmp
or
mov
scas
jp
shll
dec
out
int3
push
mov
cmp
mov
add
daa
sub
imul
xchg
mov
dec
lcall
aaa
sub
mov
mov
xchg
fwait
cltd
pop
mov
std
add
lds
nop
add
cmp
ret
jbe
sbb
add
push
fistpll
aas
fsubrl
mov
adc
out
scas
jbe
push
pop
dec
add
in
insl
shlb
das
inc
xchg
lahf
add
nop
addr16
jns
sub
and
jmp
pop
fs
mov
or
lcall
cld
push
or
cld
mov
jle
sahf
inc
loope
xor
jns
xchg
lods
inc
lds
bound
lcall
insl
mov
xchg
mov
cli
shrb
cmp
loopne
ffreep
repz
push
pop
adc
jp
test
popa
cli
cmp
movsl
mov
dec
js
xor
jne
aaa
movsl
mov
lret
fwait
loopne
pop
xchg
std
mov
popa
sub
int
sub
mov
push
dec
pop
daa
sti
lret
les
int
mov
stc
xlat
xchg
scas
inc
fiadds
jae
popa
inc
push
repz
fldenv
jmp
mov
loop
mov
into
fildl
add
cli
scas
aaa
cmc
icebp
or
rcll
es
jo
aad
clc
aad
mov
add
mov
mov
fwait
lods
cwtl
mov
adc
xor
outsl
pop
faddl
xchg
js
dec
jge
movsl
xor
adc
xchg
stc
mov
aad
sub
sub
jge
and
mov
cmp
xchg
adc
mov
mov
iret
mov
adc
lret
ljmp
pop
and
loop
frstor
cmp
int
cmp
xchg
mov
stos
arpl
adc
sub
push
sbb
scas
or
sub
adc
jns
lods
mov
popf
outsl
sarl
push
sub
into
pop
mov
stos
outsl
int3
rclb
and
push
sbb
xor
fistps
mov
popa
pop
inc
sbbb
push
add
cmpl
cmp
jb
add
jg
sbb
sub
mov
cmpsb
adc
repz
inc
sbb
rcrb
imul
sbb
jmp
mov
dec
lahf
es
lret
punpckhdq
out
das
dec
add
movsb
mov
mov
xchg
pop
xchg
lods
repz
rcrl
xchg
push
sub
sbb
xor
xchg
mov
testb
ljmp
int3
push
xchg
jnp
push
idivl
imul
push
pop
fadds
das
jge
mov
and
xlat
shr
stos
add
adc
sbb
test
mov
ds
rorl
test
and
mov
aad
and
outsl
sub
movb
add
sti
pop
mov
ret
inc
xchg
mov
pop
subl
lods
aad
subl
test
lods
xor
xchg
call
addb
je
pushf
sbb
lods
fs
out
and
push
ja
stc
mov
repz
adc
scas
das
je
sbb
cli
sub
std
pop
cmp
add
loope
aaa
mov
mov
mov
mov
aam
or
mov
sub
mov
jmp
xchg
and
hlt
cltd
fwait
lret
in
cmp
mov
sub
std
jmp
jb
aad
jns
mov
out
add
stos
test
add
ja
mov
out
xchg
sbb
mov
ret
mov
aam
xchg
xchg
xchg
in
imul
mov
inc
add
cmpsl
repz
mov
leave
mov
jnp
dec
outsl
adc
push
mov
stc
mov
imul
mov
or
lock
adcl
pop
jl
add
push
sbb
push
mov
out
add
mov
adc
mov
xchg
mov
push
add
mov
arpl
cmp
sbb
cmpsl
fdiv
sub
pushf
pop
ret
dec
pop
jns
rclb
mov
mov
or
dec
dec
imul
sub
pop
jecxz
test
add
pop
pushf
loop
and
pop
mov
rorb
in
jmp
dec
cmp
inc
push
jle
rorl
mov
mov
and
jnp
jmp
adc
pop
out
pop
je
inc
ds
enter
or
jb
lret
ror
mov
gs
push
mov
sbb
push
enter
adc
rcrb
jb
xadd
xchg
jl
cmpsl
shlb
sub
jle
bound
mov
and
mov
clc
aas
data16
pop
add
jge
xlat
mov
rol
push
cmc
jp
and
out
mov
adc
enter
sub
or
popf
cmp
push
adc
mov
shr
adc
movsl
or
lock
stc
jno
mov
add
dec
pop
popa
mov
test
jns
out
leave
aaa
rcr
jae
out
hlt
inc
in
in
lcall
add
xchg
stc
add
cli
addr16
stos
sbb
inc
mov
xchg
ret
jns
les
dec
std
rcll
adc
lods
pop
xchg
es
or
jae
mov
xchg
aas
push
dec
jae
into
jno
insb
aad
ss
push
call
push
int
loopne
fcomip
and
or
hlt
gs
out
sbb
sub
movsl
dec
decb
cmp
jmp
push
in
jp
add
jnp
push
dec
test
ljmp
xchg
gs
jno
mov
outsl
nop
mov
ja
bound
ja
int3
leave
dec
push
mov
jecxz
cmp
int
jns
jae
push
int3
or
test
lods
adc
ss
inc
cmpsb
sub
xchg
imul
and
aad
dec
aad
and
fadds
add
jge
ljmp
pusha
add
notb
pop
mov
icebp
sbb
das
mov
movsl
pusha
pop
pop
mov
jno
loop
cmpsb
cmp
stos
dec
xchg
scas
pop
or
cwtl
cmpsb
ja
pop
and
xor
jnp
dec
push
dec
mov
push
shlb
loopne
call
out
rol
insb
ror
and
add
pop
jg
js
jg
cltd
lea
or
pop
push
pop
lret
cld
sbb
mov
push
pop
add
test
in
dec
icebp
or
pusha
call
sub
test
push
dec
das
mov
mov
add
mov
mov
and
xchg
loop
mov
cmpsb
into
xchg
xchg
ja
idivb
mov
pop
lea
mov
outsb
roll
and
scas
xchg
subl
mov
mov
cmpsb
or
or
lahf
or
insb
out
dec
out
sbb
mov
in
adc
pop
or
lds
cmp
dec
mov
lcall
mov
mov
rorl
daa
xchg
sbb
and
mov
rclb
icebp
adc
adc
pop
and
aad
adc
add
lret
in
imul
push
mov
pusha
pushf
sub
jae
popa
sub
mov
inc
mov
xor
std
ret
jo
in
jge
inc
data16
sub
daa
sbb
cmp
call
setnp
sub
loop
mov
mov
or
fcoms
sbb
or
fwait
stc
pop
scas
cmpsl
xor
or
shll
add
test
push
mov
sbb
jge
ds
xchg
xorl
sub
arpl
mov
ds
rcrb
dec
ret
lock
cmp
dec
mov
popf
adc
icebp
les
inc
inc
mov
jg
and
inc
push
lods
idivb
jle
mov
dec
adc
xor
pop
sbb
push
test
mov
or
inc
sub
dec
xchg
pop
std
rcr
addr16
ja
mov
out
inc
stos
pusha
out
mov
mov
and
ss
aam
daa
adc
pop
push
cwtl
sbb
pop
pop
test
xorl
inc
jbe
lea
xchg
cmc
dec
fistps
add
inc
adc
jnp
rcl
cmpsb
mov
andl
test
xor
sub
push
pop
testl
clc
js
fildl
enter
arpl
mov
mov
inc
sub
xor
test
test
cltd
jmp
or
push
orps
repnz
imul
out
cwtl
test
pop
test
or
pushl
fwait
push
adc
xchg
and
sub
hlt
mov
insb
jbe,pt
in
test
in
pushf
inc
mov
mov
pop
in
cmp
fwait
mov
mov
push
or
cmp
dec
jb
cmp
lcall
fiaddl
rclb
cltd
popa
xor
dec
test
fsubrs
cld
hlt
sbb
push
lods
lods
aaa
mov
testb
sub
das
insb
shr
mov
in
adc
inc
sbb
mov
jecxz
push
mov
mov
test
jmp
addb
negb
sbb
sbb
jnp
mov
pop
bound
xchg
push
aas
cmp
cmp
hlt
pop
dec
xchg
subb
fwait
in
push
or
or
sbb
xor
into
jge
test
push
cmp
lahf
add
inc
sbb
shlb
lahf
leave
adc
inc
xlat
scas
cltd
dec
test
inc
mov
mov
outsl
cltd
cli
stos
mov
dec
or
ja
push
lahf
add
test
jle
add
jmp
popf
mov
pushf
adc
sbb
loop
dec
push
ret
pushf
sbb
inc
push
push
ja
xchg
out
sbb
mov
inc
stc
cmp
xchg
cli
lahf
hlt
adc
add
xor
xor
xchg
push
cmp
cmp
ret
add
lea
dec
sbb
lea
sub
cs
shll
lcall
es
dec
test
xchg
loopne
push
push
addl
pop
cli
or
cmp
push
out
sbb
push
pushf
cmp
stc
cmpsb
adc
dec
lds
das
xor
xor
lods
xchg
mov
daa
repnz
adc
ja
jp
insl
in
xchg
rol
jns
mov
bnd
inc
je
clc
xor
adc
cmp
push
orl
push
jno
jle
lcall
adcb
sbb
jp
xor
jnp
sub
test
sbb
cmp
lret
xchg
inc
xchg
dec
cmpsb
imul
mov
cmp
jmp
xor
aad
xor
enter
push
movsb
or
push
aam
shl
and
xchg
mov
in
lret
ja
lods
jecxz
or
add
rol
sbb
mov
stos
aam
notb
fsubr
ss
ret
pop
call
mov
jne
xorb
pop
xchg
fwait
imul
lock
mov
sub
es
lcall
jne
sbbl
mov
xchg
or
cld
add
lcall
pop
lret
push
pop
lods
das
out
xchg
push
jmp
xchg
push
repnz
repz
les
ljmp
fdiv
lods
mov
lret
push
dec
push
data16
mov
and
adc
out
pop
ljmp
lea
pop
jo
jp
cmp
adc
addr16
jnp
mov
movq
mov
adc
push
pusha
or
pop
jno
ss
push
jb
cltd
fs
mov
xchg
ret
mov
sti
or
daa
inc
push
xchg
xor
ret
xchg
adc
xbegin
gs
adc
pop
test
cli
lret
push
pop
lea
add
jnp
mov
shl
mov
sbb
cmp
jl
push
or
jae
dec
fcomip
ds
adc
stc
ja
xchg
inc
pop
cmpb
jg
aam
and
jns
mov
fisubrs
int3
leave
fwait
daa
xchg
and
fistps
sbb
outsl
cmc
pop
dec
lock
lret
insb
add
test
or
pop
xor
jns
cmpsl
jecxz
and
cmc
popa
scas
shll
ret
lahf
add
inc
mov
xor
adcl
andl
push
fcmovnu
add
movsl
jnp
int
mov
mov
es
adc
iret
mov
test
arpl
cmpsb
and
mov
lods
cli
arpl
int
pop
popa
scas
adc
sbb
sbb
in
mov
adc
push
mov
push
adc
arpl
cld
or
mov
test
push
pop
in
sbb
cmp
pop
scas
sub
sarb
aad
mov
sahf
cmp
mov
push
idivl
shl
pop
lcall
add
test
arpl
mov
jg
inc
outsl
nop
dec
mov
dec
sub
hlt
enter
stos
fsubrl
jno
scas
dec
adc
dec
ja
sarb
pop
inc
rclb
inc
pusha
jge
adc
mov
lcall
mov
mov
shll
ds
pop
lcall
xor
and
jb
mov
stos
in
xor
jecxz
push
popa
mov
lcall
or
cli
and
dec
mov
or
and
jo
or
roll
pop
das
xchg
insl
sbb
inc
push
lahf
jbe
movsl
loope
xchg
aad
jnp
xchg
addb
pop
stc
push
pop
dec
icebp
add
fs
xor
addr16
sbb
jge
test
stos
orl
jnp
in
lret
test
xchg
or
in
mov
inc
xor
in
rorl
fidivl
cwtd
cwtl
stos
dec
int3
sbb
jle
cmpsb
jge
rclb
inc
push
int
push
data16
or
popf
lds
pop
push
or
xor
mov
dec
cmp
ja
cmp
jbe
addl
jbe
movsl
packsswb
loope
xlat
mov
enter
sbb
shr
mov
mov
xor
in
sub
sbb
or
mov
fs
inc
in
inc
lret
rcll
mov
dec
jns
add
imul
push
push
leave
addl
rcr
xchg
mov
sar
out
jo
jnp
fmuls
test
inc
jae
sbb
aas
push
shl
dec
icebp
pusha
add
test
les
push
pop
jmp
push
sahf
ss
stos
movsb
sbb
push
mov
jg
xor
fsubl
movsb
xchg
cltd
ds
movsl
push
sub
mov
xor
inc
inc
mov
dec
movsb
add
addr16
lods
pusha
cld
mov
xchg
mov
hlt
popa
mov
ret
xchg
nop
cltd
das
cmp
in
xlat
out
xor
outsb
and
xchg
fwait
xor
out
pop
dec
add
add
shl
and
ret
mov
inc
or
je
ja
pushl
pop
sub
scas
and
add
cltd
lret
or
cmc
or
shr
es
xor
psrld
pop
rorl
pop
stos
add
shrl
jns
jle
dec
pop
pop
sti
jecxz
mov
xor
mov
and
xchg
or
xchg
xchg
and
xor
hlt
mov
cs
daa
inc
stc
and
subl
out
xchg
xor
cwtl
dec
xchg
add
rclb
dec
cmp
dec
push
dec
push
adc
sahf
mov
movsb
mov
sbb
cmpsl
and
pop
add
dec
or
pop
cltd
pop
mov
and
stos
xor
xchg
mov
dec
dec
pop
mov
push
xor
and
rclb
nop
mov
cmc
mov
scas
or
sarl
xchg
scas
jne
loope
dec
cmp
cmp
jge
mov
cltd
push
jge
addr16
mov
inc
fistl
mov
aaa
mov
adc
inc
xor
mov
pop
fnstcw
lea
fcoml
popa
mulb
mov
xchg
or
pop
xor
inc
push
imul
bound
jae
cmpsl
mov
jge
mov
test
pop
sbb
pop
push
mov
dec
ss
lods
or
adc
adc
out
fwait
fs
push
fwait
mov
sbbl
dec
mov
mov
cmpsl
stos
jns
lock
xchg
push
dec
pop
xchg
or
sahf
sbb
insb
sub
xchg
loopne
fmull
add
cmp
pop
mov
and
out
add
xor
add
add
popf
push
mov
sbb
cmp
jge
iret
int3
sti
jns
imul
cmp
sub
mov
out
xor
fldcw
jmp
adc
sub
cmp
sahf
or
push
add
insb
icebp
or
popf
stos
mov
cmp
shrb
xor
mov
mov
clc
and
mov
jg
jbe
push
outsb
dec
mov
mov
adc
arpl
fwait
cld
dec
fnsave
loop
mov
lret
pop
xchg
test
lods
jl
cs
je
pop
loope
push
movsl
ret
popa
rorl
lock
add
xchg
es
pop
inc
sbb
push
add
and
les
cmpsb
lcall
xor
sahf
jo
jg
add
cmp
jmp
jmp
loop
mov
flds
popf
sbb
in
or
adc
stos
jmp
lret
and
int3
adc
cli
cmp
mov
lds
lea
push
or
sti
test
push
push
scas
cmp
pop
into
loopne
nop
mov
xor
test
iret
mov
ja
xchg
pop
and
pop
icebp
int3
jl
lds
xor
xor
popf
inc
les
popl
lds
imul
fadd
pop
icebp
pop
mov
push
cmp
sub
jo
aad
add
movzwl
stc
mov
mov
dec
data16
jle
ss
adc
in
loope
pushf
or
out
mov
cmp
mov
add
bound
test
adcl
pop
mov
aas
out
jecxz
fsub
push
xchg
add
cpuid
lret
scas
xlat
sbb
mov
lock
push
adc
sub
adc
xchg
xchg
add
dec
jns
lret
insb
jp
jp
mov
push
cmpsb
inc
pop
mov
ds
pop
mov
or
imul
hlt
cmp
pop
sbb
push
add
int3
es
xchg
cli
mov
fstp
scas
lods
loope
shl
and
xor
dec
push
inc
lds
call
jnp
push
dec
jne
outsb
xor
in
sbb
jl
dec
lret
pushf
popf
andb
icebp
cmpsb
push
xchg
ja
les
pop
daa
pusha
stos
xchg
xor
inc
adcl
mov
jge
add
push
push
iret
lods
rorb
out
lods
pop
adc
jmp
xor
enter
cmpsl
dec
inc
sbb
sbb
and
dec
and
lahf
arpl
nop
je
arpl
mov
mov
jge
xor
dec
ret
or
cld
push
addr16
push
out
xchg
pop
repnz
xchg
test
dec
addr16
sarb
xlat
fildl
dec
sbb
jbe
mov
clc
push
adc
adc
push
push
rorb
mov
jnp
dec
xchg
mov
lcall
or
mov
lds
adc
repz
mov
add
shlb
negb
or
xchg
jmp
cs
mov
sbb
shrb
mov
adc
mov
mov
mov
sub
mov
test
out
push
pusha
mov
js
mov
dec
pusha
int3
and
repz
xchg
js
push
daa
aaa
push
mov
icebp
jns
xor
add
aam
sti
aam
leave
jmp
sbb
pop
xor
xchg
ds
mov
add
addl
xchg
scas
aam
lcall
sub
push
fisubrs
comiss
jns
or
aam
mov
mov
jmp
dec
dec
hlt
push
ja
jno
cli
and
cmp
inc
push
or
push
fsubrs
and
roll
dec
fs
imul
xlat
jns
orl
xchg
fidivl
mov
and
ja
or
lret
mov
xor
sbb
xor
outsl
push
test
pop
push
bound
outsb
sarb
les
adc
add
xor
jp
je
or
inc
dec
pop
sbb
leave
xchg
jae
stc
mov
cmp
adc
mov
xchg
xorl
stos
xor
dec
cmp
push
mov
popa
and
loop
or
and
lret
ret
sub
push
adcl
adc
ds
jg
xchg
or
mov
jl
add
mov
popl
pusha
repz
fld
sbb
pop
inc
pop
xor
lcall
das
sub
mov
imull
lock
das
add
jecxz
jl
dec
xor
test
mov
addr16
push
and
xchg
pop
inc
sub
test
push
rcrl
pop
out
or
xor
jmp
xor
or
jmp
and
movsl
mov
aas
jmp
cld
stc
jnp
std
sub
or
push
loop
jb
xchg
adc
jo
jnp
pop
push
icebp
mov
out
stos
dec
repnz
jmp
mov
jle
lods
fwait
pop
sbb
out
aam
sub
rcr
je
and
cli
pop
jp
xor
push
jl
pop
rolb
cs
jmp
rcll
jo
push
jle
mov
or
imul
lods
pop
in
mov
test
shl
xchg
insl
inc
cmp
mov
out
shl
xchg
mov
leave
sub
and
pop
addr16
mov
outsb
mov
lods
sti
xchg
mov
jno
dec
push
fdiv
xchg
repz
roll
paddw
adc
mov
push
add
adc
pop
push
add
lods
iret
cmp
xchg
enter
add
dec
js
je
les
cmpsl
scas
mov
cwtl
int3
push
insb
rcr
aad
pop
nop
sahf
jg
flds
cmp
jle
adc
call
in
js
subl
jns
in
cltd
mov
leave
xchg
mov
and
es
mov
jae
out
pop
into
std
ror
rcl
jl
add
pop
lret
repz
mov
adc
inc
popf
pop
pushfw
xor
push
loope
cmpsl
lock
outsl
or
gs
mov
jp
push
rclb
shll
prefetchnta
lea
insb
imul
jns
rol
out
xor
adc
pop
scas
incb
iret
mov
jb
out
mov
cmpsb
mov
stos
cmp
imul
shll
pop
pop
mov
mov
sub
sub
mov
xchg
out
fmul
xchg
shrl
adc
lret
cld
dec
dec
add
xlat
add
sbb
scas
ja
mov
xchg
icebp
arpl
mov
inc
std
inc
mov
mov
push
cmc
xchg
dec
int
dec
mov
add
enter
pop
stc
mov
jp
aas
ja
and
call
lods
xlat
dec
mov
lret
into
push
popf
mov
add
mov
fucomp
mov
gs
sbbl
push
mov
sub
lahf
xor
in
adc
jl
mov
push
lcall
xchg
cmc
adc
or
inc
and
aam
xchg
stc
sbb
or
in
pusha
loopne
xchg
mov
dec
inc
inc
mov
fdivr
adc
or
insb
bound
jg
lock
and
sbb
lods
dec
fwait
xor
stos
sbb
loope
and
shrb
push
pop
shl
jno
push
push
jp
int3
fisttps
add
xor
daa
aam
mov
jecxz
fldenv
and
lcall
sub
fs
jbe
call
es
mov
out
stos
pop
mov
xchg
sahf
rcll
push
stc
or
xor
push
sub
mov
jp
push
lret
dec
xchg
inc
lret
fidivs
jg
insl
imul
mov
rorb
div
mov
dec
push
jb
lds
and
xchg
adc
sub
mov
push
push
pop
mov
js
out
decl
mov
das
mov
push
in
lcall
and
or
frstor
mov
jo
xchg
mov
push
neg
outsb
inc
push
adc
xchg
in
js
shl
jbe
dec
mov
stos
fistps
jo
sahf
pop
jno
push
cmp
cwtl
adc
scas
fiadds
xorb
pushf
cmp
mov
sub
jge
cmp
fdivs
lods
push
out
and
jo
xchg
dec
add
and
xchg
enter
repz
in
insl
xor
jo
jo
xchg
insl
cmp
push
insl
jl
ret
jmp
push
jbe
mov
push
ja
fsubl
xlat
pop
inc
fisttpl
orb
sbb
lods
jmp
mov
xor
xchg
les
jmp
outsl
ja
mov
adc
xor
orb
stos
push
testb
int
aas
add
daa
outsl
pop
inc
lahf
pop
sbb
sbb
xchg
jmp
aas
mov
jno
in
in
pop
jno
enter
adc
sti
cmc
scas
mov
sti
loope
into
out
dec
jg
in
mov
aas
scas
ljmp
cmpsl
xchg
stos
adc
call
dec
cltd
cmp
ret
lods
inc
in
sbb
mov
cwtl
lret
or
jno
imul
out
pop
cld
incb
xchg
push
aas
mov
push
adc
xorl
notb
dec
xchg
sbb
jns
and
jmp
into
sbbl
cmp
sbb
lds
loopne
pop
xchg
insl
cmp
cltd
xchg
insl
into
shrl
negb
dec
dec
lret
sbb
insb
outsb
outsb
test
cmc
push
dec
add
in
jl
sti
or
outsb
sbb
pushf
jl
adc
ljmp
push
jne
jmp
mov
roll
jmp
dec
pushf
rcrl
das
pop
movsl
xor
loop
pusha
mov
pop
push
mov
mov
mov
out
dec
cmp
dec
cs
hlt
repz
dec
gs
add
push
cmp
fcomi
cld
aad
xchg
jo
xchg
xchg
outsl
sub
lret
inc
push
xchg
fcoms
sbb
stos
cli
mov
xchg
add
push
xor
les
cs
insb
pop
insb
in
mov
inc
fsubs
mov
loopne
cmp
pop
mov
lcall
in
insl
pop
insl
test
int3
fsubr
and
push
out
arpl
push
arpl
in
fwait
xchg
mov
inc
xchg
mov
int3
jg
adc
xchg
push
fbstp
int
aad
mov
ljmp
cmpsl
sub
xchg
pusha
aad
jns
jmp
test
fistpll
push
test
das
mov
xchg
adcl
out
ljmp
std
cmp
cltd
ja
sub
xchg
sbb
out
movsl
lret
push
das
jb
neg
mov
mov
dec
inc
dec
or
adc
scas
rol
fisttps
xadd
das
out
into
push
push
push
fcompl
pop
je
jp
xchg
dec
lods
stc
imul
jecxz
jbe
mov
mov
scas
xor
sarl
mov
push
and
std
inc
stos
cmp
add
adc
and
mov
shrb
jg
sti
sub
dec
imul
gs
mov
mov
inc
adc
sub
xchg
je
gs
pop
mov
dec
iret
scas
inc
xchg
jns
xchg
mov
lret
push
daa
xor
mov
pop
in
jb
mov
loope
roll
adc
push
lock
push
mov
jp
imul
pushf
dec
adc
loop
push
fimull
pop
or
ret
jle
jae
stc
adc
sbb
mov
hlt
mov
ds
add
xchg
rolb
add
cmpsl
lcall
lock
gs
hlt
orl
add
pop
mov
mov
xchg
cmpl
mov
jge
gs
fadds
push
mov
xchg
pop
pop
into
cmp
push
rcrb
mov
incb
mov
out
in
xor
jmp
cmpsb
and
mov
mov
cmp
inc
fs
mov
and
aad
sarl
jbe
in
push
push
push
add
insl
xor
rorl
inc
pop
sbb
cmp
test
xchg
cld
rorb
test
adc
mov
iret
dec
fmuls
addr16
js
mov
inc
mov
outsl
cltd
movsl
pop
mov
and
outsb
xor
pop
inc
fistpl
sbb
jae
test
stos
mov
scas
push
or
clc
test
pop
cltd
fildll
dec
lret
daa
xchg
xor
mov
inc
xor
mov
push
sub
test
mov
push
in
jmp
in
adcl
push
mov
push
mov
les
sbb
sbb
add
xor
inc
dec
mov
sbbl
cmp
imulb
push
jle
lods
mov
adcb
or
movsl
dec
and
cmpsl
xor
cmp
lret
dec
nop
jecxz
stos
clc
das
jno
inc
cmpsl
add
cmp
in
pop
gs
mov
jns
adc
push
in
inc
or
lods
fildll
lods
jnp
xchg
dec
add
or
iret
sub
sbb
movsb
lock
repz
lds
mull
fwait
inc
xchg
or
sub
mov
dec
loop
and
and
dec
dec
in
mov
jecxz
loope
sti
push
fistps
cwtl
cmp
pop
jmp
push
ja
jnp
adc
into
inc
lcall
xchg
jge
cld
fisubrs
aaa
lcall
icebp
fldt
or
int
sbb
stos
icebp
push
mov
cmpsl
repnz
stos
iret
dec
push
mov
popf
xchg
inc
data16
jmp
and
mov
inc
sub
fidivs
sbb
daa
icebp
insb
dec
imul
xor
push
mov
int3
dec
inc
add
cmp
mov
fldenv
push
adc
dec
cs
or
xchg
dec
mov
xchg
push
xchg
arpl
pop
into
xchg
lea
arpl
xchg
ret
xchg
dec
xchg
popa
inc
mov
jbe
mov
fsubl
subb
mov
mov
pop
lods
into
adcl
enter
fwait
je
movsl
xor
daa
sub
fwait
push
and
stc
mov
mov
sarl
cmp
ret
fnstenv
mov
fadd
fwait
sahf
cmp
pushf
movsb
inc
push
jmp
in
aas
imull
fwait
repnz
mov
aaa
pop
push
inc
mov
aad
mov
or
mov
jae
xor
or
mov
scas
sub
ret
dec
loopne
push
mov
popa
inc
jbe
test
xchg
xchg
push
add
pushl
cmp
add
notl
dec
pop
outsl
bound
lret
xlat
push
and
mov
rcrl
insl
push
xchg
dec
popf
aad
insb
pop
jns
mov
mov
adc
aas
xor
xchg
xor
pop
dec
notl
out
aad
rcll
rcrb
hlt
cmpsl
add
rorl
pop
into
sbb
xchg
cs
inc
pop
sahf
sbb
push
cmp
jns
iret
mov
xor
and
xor
cwtl
sub
jb
fldcw
pop
push
fcompl
sahf
push
cs
imul
sbb
adc
cltd
pop
or
addr16
outsl
rcrb
dec
inc
and
xor
adc
subb
adc
push
jns
mov
or
inc
sti
cmp
adc
and
fmul
je
cmpsb
lods
xchg
inc
sbb
ret
cmp
inc
jle
jne
inc
ljmp
xor
push
shrb
sub
in
call
pop
imul
mov
mov
loopne
orl
test
jp
inc
mov
inc
test
xchg
or
sub
xchg
push
or
xor
pop
scas
enter
jl
jnp
fstl
sbb
addb
icebp
pushf
nop
bound
clc
cmpsl
scas
sahf
addr16
test
fmull
sub
or
jnp
sub
mov
xor
xchg
andl
sarl
insb
test
cmpsl
xor
xor
jb
mov
jno
mov
sti
jle
or
lds
inc
cmp
or
jge
scas
sti
adc
push
pop
adc
cmpsl
or
mov
cmp
mov
stos
int
xor
mov
mov
scas
in
xlat
jecxz
daa
sub
pop
sub
pop
in
push
xor
inc
adc
sbb
jp
cmpsb
adc
scas
call
pop
jge
mov
sbb
pop
cli
shrl
jmp
lret
xchg
dec
imul
sub
mov
jl
cmp
ds
cmp
imul
loop
pop
mov
jns
pusha
mov
aad
push
in
mov
jne
popa
lahf
xchg
ljmp
cmp
sbb
jnp
int
mov
scas
dec
dec
and
xor
xor
pop
xchg
lds
sub
xor
or
or
mov
shlb
jns
pop
jl
push
repz
pop
mov
lcall
dec
sub
inc
inc
mov
xchg
sub
jno
pop
mull
lock
pusha
mov
jg
push
fistpl
cmp
mov
into
out
push
jns
mov
xor
xor
inc
clc
nop
inc
ret
nop
lret
insl
xor
jmp
mov
adc
pusha
adc
hlt
inc
push
out
mov
adc
call
sahf
movsl
inc
aam
mov
lcall
pop
nop
mov
or
ss
orl
ss
dec
sbb
jno
jnp
and
xchg
aaa
mov
inc
mov
das
arpl
cmp
inc
addl
mov
test
lds
inc
sbb
jns
lahf
rcll
mov
pushf
pop
jmp
or
fmuls
pmulhw
inc
ret
sub
fcompl
mov
or
pop
adc
sbb
mov
mov
xor
cs
ret
adc
ret
std
dec
cs
mov
cmp
and
inc
outsb
inc
mov
xor
addr16
shrl
rcl
sbb
fcompl
ja
cmp
adc
adc
push
les
cmp
aam
fldt
xchg
enter
mov
push
stos
jle
ds
jns
int
push
pop
pop
lret
fcoms
sub
in
jbe
jl
mov
mov
cmp
jns
repz
in
out
mov
testl
push
test
stos
xchg
dec
or
sbb
jle
ljmp
mov
ficompl
ds
outsl
out
sub
pop
adcb
fidivs
and
jge
jne
out
mov
bound
xchg
imul
outsb
ja
pop
xchg
push
push
test
sub
mov
cmp
daa
and
add
push
into
rcrl
push
pusha
add
fisubl
lcall
or
arpl
sub
hlt
xor
add
pop
pushf
ret
into
out
mov
int3
and
mov
test
fnstenv
push
and
andb
leave
sbb
call
dec
loop
popf
faddl
mov
lcall
mov
ss
sar
lahf
jb
movsb
and
in
les
fisttps
xchg
and
inc
jge
test
xorl
sub
aam
sbb
xchg
dec
mov
push
cmpb
inc
push
add
dec
js
insb
xchg
jno
mov
xor
aad
add
mov
xchg
mov
inc
push
scas
push
hlt
mov
sub
mov
pop
or
inc
xor
dec
test
mov
mov
mov
push
xchg
testl
sbb
jbe
adc
adc
pop
je
scas
cmp
mov
xchg
xor
sarb
push
aas
adc
pop
into
scas
and
xor
xchg
das
pop
ret
jmp
pop
jns
int3
and
sahf
test
js
jb
sbbl
sub
repnz
fisubrs
xchg
fwait
sti
xchg
cmp
sbb
in
xchg
cmpsb
push
add
movsb
xchg
mov
xchg
sbb
cmpsl
into
daa
out
faddl
xchg
mov
ss
jo
out
push
jge
jg
rep
sbb
mov
xchg
dec
insl
or
cli
push
std
imul
popa
cwtl
roll
xor
sbb
inc
sub
or
decb
add
add
cmpb
add
faddl
xlat
xor
iret
punpckhbw
loop
dec
inc
push
leave
mov
lret
and
lahf
lret
out
out
push
pop
dec
push
jb
and
call
push
lock
aam
or
add
inc
mov
mov
and
daa
rolb
sub
clc
rcr
dec
insl
push
jns
xlat
xlat
shlb
incb
inc
jnp
xchg
aad
or
mov
jge,pn
lods
movd
xchg
pushf
xchg
hlt
pop
push
insb
stos
sub
loopne
cmp
insb
pushf
or
sbb
or
outsl
jno
add
inc
inc
xor
xchg
cmp
mov
mov
xchg
lret
mov
data16
add
clc
in
je
icebp
inc
add
jl
mov
int
testb
cmp
mov
fld
daa
pop
adc
push
xchg
cmc
arpl
jb
ret
sbb
adc
fwait
in
mov
mov
aas
nop
fistl
xor
loopne
aad
mov
insb
cltd
push
xchg
xor
inc
xchg
outsl
enter
mov
lahf
cmpsl
jle
inc
lea
cmpsl
mov
mov
xchg
test
mov
in
and
sbb
mov
push
sarb
inc
cltd
in
jb
pushl
popa
nop
out
xor
mov
test
mov
mov
scas
movb
xor
pop
int
outsb
stc
popa
data16
aaa
scas
in
mov
pop
into
jno
cld
or
jl
mov
mov
aas
cli
lret
loope
mov
sbb
pusha
ljmp
enter
add
pop
cmp
stos
xchg
addl
adc
mov
xchg
mov
daa
xlat
cmp
inc
mov
mov
cmp
push
cmp
xchg
or
jge
repnz
dec
outsb
fwait
sub
adc
call
stos
out
fdivr
out
xor
aas
mov
lds
clc
mov
xchg
xchg
mov
cmp
push
add
rcr
sbb
xchg
xchg
mov
aas
arpl
mov
push
dec
lea
cmp
fsubrs
test
fbld
push
jno
sub
pop
xchg
adc
cltd
fidivrs
stc
cmp
fidivrl
sub
ljmp
xchg
stos
int
lock
iret
dec
call
or
out
cmpsl
or
adc
rcrl
push
jno
jne
shr
mov
ja
fsave
cltd
cltd
addr16
aam
sbb
sbb
out
je
mov
movsl
fiaddl
adc
sub
add
sub
pmaxsw
jbe
cmpsb
push
mov
fwait
add
mov
mov
sub
jo
push
insb
ja
xlat
dec
jecxz
in
inc
scas
lods
xor
push
pop
daa
cwtl
mov
sbb
mov
aam
mov
sbb
mov
xor
nop
dec
leave
mov
mov
stc
pop
cmp
xchg
lret
adc
sahf
lds
call
test
into
fs
lods
shrl
insb
mov
adc
rcll
xor
ret
mov
xor
aam
imul
add
in
in
cltd
adc
jnp
loopne
xchg
mov
int
inc
push
fnstsw
jecxz
jo
pop
jb
add
jo
repnz
lret
dec
loop
jno
jo
inc
mov
add
dec
dec
repz
mov
xlat
jns
cld
inc
pop
jle
pop
popf
add
sub
fldl
lea
inc
hlt
adc
dec
loope
rorb
daa
or
jl
xchg
in
xchg
outsl
sbb
xor
stos
test
sti
clc
add
inc
mov
pop
aad
fistpll
jp
adc
xchg
xor
pop
jg
fchs
mov
imul
cmc
dec
cltd
loope
mov
add
jb
sbb
xchg
rcrl
arpl
jb
es
scas
xchg
adc
adcl
aaa
cmp
cmp
jne
xchg
popa
xchg
fstpl
adc
into
mov
in
rcrl
mov
lds
dec
cmc
push
leave
enter
pop
dec
xchg
mov
mov
mov
fisttpll
insl
dec
jnp
push
mov
loope
and
aam
fwait
lret
push
and
sub
test
mov
or
sub
pop
daa
mov
cmp
call
lret
fbld
and
mov
mov
test
cmp
dec
or
jge
mov
ss
xor
orl
xchg
pop
loopne
fcmovnb
repnz
lods
mov
mov
xor
icebp
push
xor
or
sub
jge
sbbl
push
dec
lods
jns
decl
fistpl
cmpsl
in
mov
or
cmp
jecxz
dec
es
xor
jl
push
xchg
push
js
mov
xchg
pop
cltd
xchg
fs
mov
sbb
or
or
mov
arpl
fbld
pop
cwtl
add
push
xor
cwtl
push
adc
mov
inc
hlt
sbb
leave
adc
inc
and
enter
enter
xchg
and
les
cmp
push
adc
mov
jle
adc
mov
jnp
imul
xor
ljmp
push
data16
jge
jo
sub
and
jb
mov
xor
insb
add
pop
xor
loope
sti
jge
jg
push
jge
ljmp
mov
popf
push
push
and
xor
insl
test
push
dec
les
pop
leave
aam
jae
pop
inc
inc
pop
data16
lcall
xor
add
andb
ds
mov
xor
sbb
mul
jp
push
je
sbb
or
lahf
imul
push
iret
push
sti
daa
rol
xor
mov
mov
pop
scas
add
push
std
mov
aad
rorb
out
lahf
pop
loopne
js
cmpsb
cmpb
bound
stc
outsl
popf
and
fsubrs
push
cltd
ljmp
sti
negl
enter
add
jb
jl
test
out
xor
out
mov
mov
sti
aam
cmp
fsubs
outsb
mov
std
jbe
dec
mov
sbb
xchg
sub
ror
inc
xchg
pop
pop
xchg
push
outsb
xor
out
fsts
cli
jmp
mov
jge
cmpsl
aas
dec
adc
jp
ret
out
push
mov
jmp
xchg
inc
mov
jmp
xchg
xor
adc
cmp
mov
mov
jne
imul
in
sub
push
into
sub
cmp
add
jo
adc
int
cmp
xchg
or
fcompl
jae
mov
and
adc
push
hlt
mov
ss
dec
sbb
jb
inc
push
adc
jge
mov
xchg
jge
inc
call
cmpsl
adc
dec
insl
cmp
lea
or
jmp
sarb
ja
inc
adc
mov
mov
or
cmp
adc
push
dec
mov
test
push
sbb
inc
and
scas
movsb
mov
and
in
xchg
lret
call
pop
mov
test
adc
les
sbb
cwtl
sbb
adc
lods
or
or
push
mov
push
mov
and
jnp
pop
push
aas
ss
jl
dec
mov
mov
movsl
jbe
ficoms
inc
push
divb
dec
jge
sti
lret
cmp
cmp
stos
sub
sbb
xor
movsl
lds
in
fmuls
inc
cmp
shrl
test
push
into
int
out
cmc
sbb
cmp
and
aaa
sbb
mov
imul
jnp
push
jle
out
cmp
cmc
and
mov
pop
outsl
mov
ds
insb
scas
jns
sub
insb
fcompl
jecxz
pop
adc
cmp
cli
jbe
loopne
test
daa
mov
or
inc
xchg
popa
sbb
mov
push
sbb
iret
inc
shrl
add
sub
adc
popf
add
and
pop
mov
dec
ret
int
aad
ljmp
inc
rorb
jb
stos
enter
adc
mov
adc
sbb
imull
leave
iret
or
das
pusha
cli
movsl
sub
mov
test
cmp
pop
push
sbb
pop
aam
shlb
rcll
mov
ret
arpl
xorb
xchg
inc
je
cmpl
lods
pop
and
dec
dec
xchg
push
push
push
mov
notl
stc
aas
dec
outsl
push
shrb
stc
icebp
cld
add
imul
rclb
push
adc
mov
xor
cmovp
movsb
roll
and
cmpsl
xor
jecxz
fsubs
mov
aaa
and
xor
test
test
pop
sub
mov
leave
imul
repnz
jl
sub
loop
mov
sbb
push
das
je
xchg
and
aas
stos
or
add
jbe
mov
pop
lods
rorb
out
fwait
mov
ds
mov
fs
ret
stc
ficomps
pushf
das
mov
cmpsl
jae
imul
mov
into
or
jae
and
mov
daa
sub
popa
aas
lret
repz
pop
mov
imul
dec
stos
dec
add
mov
shr
scas
mov
xchg
lods
xor
xchg
jbe
mov
stc
jg
adc
ljmp
jmp
push
shr
pop
andl
rolb
mov
pop
jo
imul
or
movb
decb
sub
jo
mov
mov
arpl
push
cmp
hlt
jg
shrb
push
add
pop
loop
xchg
lret
xchg
mov
ret
sti
xchg
xchg
sbb
add
add
mov
loopne
loop
into
data16
in
sbbb
adc
icebp
mov
xor
adc
pop
incl
or
mov
dec
cmp
les
dec
femms
push
mov
mov
sbb
sbb
test
and
popa
jl
cld
es
push
js
stos
dec
insl
mov
jbe
mov
lret
and
xor
loope
iret
lods
and
outsb
and
stos
mov
adc
inc
dec
mull
jp
in
xor
movsb
test
adc
arpl
sarl
and
jecxz
xor
jns
add
outsl
inc
dec
inc
mov
jne
pushf
call
cmp
adc
fistpll
ds
mov
insb
lcall
sub
aam
mov
mov
ljmp
cltd
xchg
enter
in
jb
out
bound
fmul
push
sbb
rcll
lret
pop
dec
push
push
int
push
insb
mov
cmpsl
adc
js
xchg
pop
adcb
pop
and
cmp
xor
add
fwait
lret
js
adc
mov
sbb
xor
std
dec
lods
outsl
and
jp
and
mov
jge
xlat
loope
test
or
ret
push
pop
jne
test
adc
and
test
sbb
loope
cld
aam
lcall
mov
lahf
xlat
pop
outsb
push
xchg
js
test
jnp
or
movsb
insl
cld
popf
dec
ljmp
sub
movsl
xor
movsw
lret
mov
rorl
add
pop
push
sarl
xor
fcomps
mov
sbb
repz
xchg
es
rcr
mov
ljmp
jge
add
insb
push
xor
lock
jno
sub
out
in
mov
jg
scas
mov
jle
mov
clc
mov
aam
xor
adc
daa
adc
test
mov
nop
mov
dec
stos
notl
mov
in
andb
add
icebp
jg
fwait
xor
fisubrl
out
aaa
test
xchg
xlat
or
bound
jmp
stos
mov
rcll
jae
lahf
jae
jnp
inc
shll
mov
test
gs
sub
and
mov
bound
sbb
xchg
shl
fsubrs
outsb
xor
fdivs
ja
addr16
idivl
xor
lret
int3
enter
inc
lea
and
icebp
ljmp
or
das
fwait
xchg
xor
pusha
loop
popf
int
or
imul
je
sbb
fidivl
stos
xor
and
inc
pop
or
lahf
dec
xor
mov
xor
pop
sbb
cbtw
sbb
jb
lret
xor
and
bound
loopnew
jne
fcoms
cmpsb
in
iret
pop
jp
fpatan
loope
sub
jnp
xchg
ret
sarb
test
sub
pop
mov
jp
inc
push
dec
xchg
push
repz
les
push
enter
jmp
push
sahf
sub
leave
cmpsb
out
push
or
cmc
mov
mov
cmp
cmc
or
jo
scas
adc
inc
push
lock
int3
test
xchg
adc
fnstsw
cwtl
pushf
test
idivb
sbb
pop
scas
sbb
xchg
test
ss
sahf
int3
ret
pop
test
push
pop
jmp
in
je
or
insl
cmp
mov
xor
mov
add
cltd
pusha
fwait
nop
icebp
lods
mov
int
inc
shlb
inc
mov
and
inc
arpl
mov
sub
jbe
int
insb
cmp
mov
xchg
mov
ds
cmp
aas
jmp
fcomp
mov
pop
cmp
jg
ror
xchg
fdivs
dec
sub
dec
push
bound
lea
jo
mov
fwait
rolb
inc
sub
cmp
popf
xchg
popf
pushl
aaa
or
jae
imul
xchg
push
lret
sbbl
dec
and
popa
outsb
inc
mov
test
or
push
std
jno
popa
push
adc
sbb
pop
pop
xchg
adc
pop
sbb
jne
mov
in
inc
ret
outsb
repnz
jl
push
mov
pop
icebp
ret
outsb
fistpll
sub
pop
stos
test
test
fdivp
sbb
in
xchg
inc
mov
ljmp
push
jae
jl
ror
pop
mov
out
pop
dec
int3
adc
in
lods
mov
inc
hlt
pop
xor
lret
das
insb
xchg
rcr
adc
cmpsl
jbe
inc
sub
sbbb
xor
nop
lcall
pop
adc
loope
out
adc
arpl
inc
rcrb
cmpsl
bound
sbb
fucomip
mov
pusha
mov
call
mov
stc
loopne
shlb
mov
ret
sub
fidivl
pop
pop
aaa
je
lods
or
push
mov
xchg
jmp
aam
xchg
in
add
inc
mov
call
das
sbb
sahf
sbb
fs
push
ud2
aaa
push
dec
pushf
cwtl
inc
cmp
pop
shl
add
push
rcll
cwtl
cltd
repz
es
xor
xchg
clc
inc
and
push
cmp
xor
lea
xchg
or
fbld
mov
pop
add
fst
and
ror
int
mov
sub
lcall
rcll
imul
out
dec
repz
cli
cmc
mov
inc
push
dec
pop
fsubrl
mov
adc
fstl
jmp
mov
cmp
mov
roll
jg
sti
mov
ja
jo
push
inc
mov
addr16
sti
or
add
xchg
leave
es
test
pop
dec
es
jp
les
rol
push
cwtl
pop
add
fstl
pop
test
repnz
clc
int3
rcll
jno
adc
mov
clc
out
sub
pop
mov
push
adc
gs
cltd
pop
adc
clc
and
enter
cmp
ss
dec
push
pop
stc
xchg
push
leave
mov
jmp
pop
push
mov
shrb
pop
or
fildll
into
bound
lods
mov
adc
dec
jb
daa
popa
jb
pop
jo
cld
dec
mov
fwait
xchg
mov
sub
cmpsl
scas
jge
mov
mov
cmpsb
pushf
mov
adc
mov
or
iret
sub
stc
fcoms
xor
fndisi(8087
cmp
or
imul
adc
test
iret
mov
aam
outsl
rcll
cmp
add
bound
in
pop
adc
cmp
pop
ja
mov
sti
lret
jnp
out
jo
or
or
lock
shll
inc
dec
js
dec
pop
rcrb
ljmp
out
sbbb
add
imul
or
pop
or
js
sub
xor
adc
cmpsb
nop
push
inc
dec
fmul
ljmp
ds
sub
movsb
roll
mov
mov
fisttpl
pop
sbb
imul
xchg
xor
sub
dec
xchg
pop
add
clc
or
cltd
sub
inc
outsb
lcall
pushf
mov
in
jmp
sti
popf
loopne
mov
jg
lret
dec
mov
seto
xchg
je
daa
movsb
in
mov
push
push
ret
adc
xchg
and
jns
insb
or
fs
push
out
cli
xchg
ret
aad
cmpsl
jge
mov
push
shlb
mov
loop
jno
or
into
pop
mov
loopne
mov
mov
or
jnp
dec
inc
loopne
shlb
addb
xchg
jp
arpl
lret
dec
sti
stos
dec
fisubs
add
dec
test
adc
insl
fxch
imul
sub
push
mov
add
aad
lcall
add
and
fnsave
pop
pop
fsubs
imul
adc
mov
adc
sti
mov
idivb
fsts
sub
les
mov
aas
pop
adc
pop
dec
xorl
xlat
mov
push
ret
enter
mov
jno
insb
sahf
and
cmp
in
adc
mov
insl
mov
stos
jno
xor
fstpt
mov
sbb
jl
cld
push
add
push
and
xor
xchg
fidivrs
or
jne
lds
xor
es
cmp
mov
lahf
subl
or
ss
out
pop
cmp
out
data16
out
repz
lcall
gs
out
pop
lret
cmp
fcomi
pop
test
push
cmpsb
popf
pop
loopne
or
cmp
mov
popa
sbb
pop
outsb
cmp
xor
adc
fcomps
ljmp
xlat
xlat
cltd
push
mov
sub
push
inc
and
xchg
and
or
nop
mov
loopne
ret
ss
sbb
icebp
inc
fnsave
std
cmc
incl
mov
xor
dec
notb
int3
push
fs
dec
add
in
lds
insb
push
les
mov
push
pop
iret
out
mov
lret
lea
push
xor
addr16
sub
adc
push
testb
push
mov
adc
pop
andb
ljmp
testl
jno
and
shlb
xlat
cli
mov
xchg
adc
lods
jecxz
ret
xor
notl
adc
ja
jnp
sbb
sub
inc
sub
je
repnz
out
jne
jle
out
ljmp
fcomps
scas
mov
sub
sbb
sbb
setg
repz
repz
lock
mov
pop
rorl
dec
and
aad
cmp
adc
and
sub
dec
aaa
bound
sub
rcr
out
repnz
repz
push
cwtl
sti
iret
dec
mov
sbb
add
pushf
cmp
inc
xor
mov
mov
into
jne
xor
cmp
and
push
and
aam
mov
pop
mov
push
push
xor
xchg
or
xchg
sbb
cmp
sbb
enter
inc
call
push
push
lods
add
mov
xchg
lcall
imul
scas
xchg
aad
mov
mov
pop
adcl
rep
scas
add
jle
in
adc
add
or
cmp
jbe
daa
adc
add
jp
jb
or
gs
pinsrw
shl
movsb
shll
mov
adc
add
hlt
loop
rclb
inc
imul
jge
cwtl
jp
push
and
jle
test
mov
sub
or
push
scas
lahf
movsl
loope
or
push
inc
and
loop
inc
or
add
cmp
daa
lret
jnp
jne
gs
jns
push
mov
add
adc
stc
stc
mov
outsl
xchg
arpl
xchg
test
xor
icebp
bound
or
mov
pop
lea
mov
mov
xor
xchg
xor
or
call
sub
cwtl
pop
adc
rcl
cs
dec
enter
mov
dec
fists
popa
push
pop
in
and
xor
cmp
jne
insl
mov
jns
mov
gs
mov
jne
lret
scas
fidivrs
and
adc
ret
jg
movsb
jl
adc
push
scas
pop
inc
dec
add
movsl
fs
aas
jp
nop
add
mov
mov
pop
sbb
pop
mov
test
insl
fcoms
mov
cltd
movsb
ror
mov
cld
cwtl
cmp
fisubrl
sub
cmp
outsb
gs
xor
dec
lock
sbbl
lods
xorb
cltd
jnp
inc
jmp
nop
dec
pop
lahf
fucomp
mov
addb
in
add
cmp
subb
xor
push
in
xchg
xchg
std
movsl
imul
addr16
pop
mov
or
mov
shlb
dec
dec
sbb
jno
inc
cmp
jl
pushf
stos
mov
ds
je
in
or
jno
arpl
outsb
shrl
mov
fidivrs
testl
pop
lea
push
icebp
sbb
xor
cltd
xchg
mov
fistpll
add
test
movsl
pop
rcrl
inc
mov
sub
aaa
addr16
test
mov
lcall
sti
or
insb
sub
rcrl
pop
xor
fwait
adc
pop
jl
lcall
jge
mov
shrb
cld
cmc
dec
pop
xor
sub
mov
adc
jnp
sbb
popa
cs
mov
mov
in
push
jecxz
xchg
fnstenv
jbe
jecxz
insl
or
aad
enter
pop
cmp
cld
addb
std
mov
cmp
cltd
test
insl
inc
imulb
enter
lcall
mov
cmp
out
sub
aaa
sub
int3
js
scas
inc
xor
sarl
sbb
pop
loope
loop
iret
xchg
nop
mov
int
movsb
mov
sub
xor
push
sbb
mov
push
es
lds
fnstcw
xchg
jnp
setae
pop
ljmp
push
mov
das
std
jae
fdiv
sbb
and
cld
xchg
inc
lcall
fadd
cs
add
xlat
loopne
icebp
in
pmullw
jnp
loope
test
mov
int3
mov
fsubrp
std
push
or
loope
mov
sub
std
bound
ret
xor
test
loopne
cmp
enter
out
cmp
mov
adc
ret
xchg
out
jne
into
dec
pop
pusha
or
std
dec
fs
sub
data16
insb
stos
or
dec
jae
fisttpl
addr16
jp
adc
mov
test
inc
jno
jge
sahf
push
mov
mov
cmp
shlb
paddb
scas
add
dec
pop
repz
xchg
fwait
sbb
je
push
addr16
mov
imul
adcb
jle
mov
push
mov
dec
fucomi
mov
scas
xchg
sub
xchg
mov
mov
cmpsl
adc
xchg
add
sbb
mov
icebp
jge
jp
jae
repnz
loopne
into
cs
sbb
xor
push
sub
pop
scas
adcb
push
nop
aaa
xchg
cmpsl
aaa
loopne
sti
mov
rorb
xchg
sarb
cmp
aam
push
test
mov
faddl
push
cmp
hlt
lods
pop
fstpt
dec
adc
cwtl
mov
out
inc
pop
or
dec
mov
xor
push
jnp
dec
add
lea
shrl
in
aas
sbb
orl
inc
pop
es
cmp
push
sbb
sub
nop
ljmp
icebp
imul
test
daa
mov
cmp
mov
cmc
cltd
loopne
sub
int
not
in
out
mov
movsl
stos
xchg
pop
mov
jb
les
leave
fnstcw
iret
pop
out
pop
fcoms
push
fbstp
cmp
je
aaa
stos
lcall
push
jmp
outsb
sbb
stc
jl
clc
xor
sti
in
fs
cs
xchg
les
add
outsb
sbb
or
xchg
jno
repnz
test
sbb
jbe
lds
push
leave
mov
mov
negb
jecxz
pop
rorb
fstpl
jnp
cmpsl
cltd
hlt
pop
jl
mov
or
in
push
incl
adc
lods
and
jns
stos
mov
mov
or
mov
aam
sub
inc
or
fistps
jno
fs
rcll
jp
pop
cmp
aad
icebp
dec
or
sub
arpl
jnp
pop
push
test
cmpsb
rolb
imul
xchg
adc
outsb
inc
push
scas
cld
fcomps
mov
inc
dec
mov
pop
or
dec
movsl
dec
pop
movsb
outsl
imul
jl
xor
adc
cmc
adc
iret
sbb
cwtl
or
jb
jg
pusha
mov
add
imul
jge
pop
insb
fxch
ljmp
ds
dec
not
test
dec
leave
inc
test
add
cmp
xor
jp
adc
and
mov
dec
sbb
push
lea
faddp
push
fmuls
int
mov
pop
aaa
or
push
ret
cmp
mov
dec
add
pop
jb
pop
mov
scas
or
push
push
push
cmp
xlat
stos
movb
xchg
shlb
xor
fdivp
sbb
fsubr
cmp
in
movsl
jb
push
push
es
jnp
cmp
scas
dec
and
xchg
icebp
ret
adc
push
popa
adc
cli
jge
jle
add
sbb
cltd
mov
xchg
pabsw
jns
adc
dec
xor
mov
pop
ja
pop
test
cwtl
push
int
mov
gs
sub
push
and
scas
jmp
jns
jnp
insl
cmpsb
movsb
into
xor
mov
pop
stos
cmp
pop
mov
aaa
mov
mov
fisubs
xor
pop
ja
test
ljmp
cld
push
rorb
xor
aam
cmpsb
outsl
rcl
imul
pusha
andb
ja
dec
dec
js
sbb
xor
daa
cmpsb
inc
mov
scas
mov
ja
mov
cmp
hlt
xchg
jecxz
pushf
sub
icebp
cmp
add
clc
repz
mov
repz
push
cmpsl
repnz
ljmp
adc
cmpsb
sbb
push
inc
mov
xlat
and
xor
cmp
cltd
js
sbb
loopne
hlt
xchg
int
dec
pop
dec
ljmp
jno
pop
gs
fmulp
out
inc
int
inc
int
out
out
dec
jae
dec
pop
adc
dec
in
call
cli
fs
sbb
mov
dec
dec
repz
mov
stos
push
mov
inc
rorb
mov
rorl
adc
xlat
int
mov
hlt
lret
scas
push
ss
sub
mov
dec
iret
ror
adc
mov
mov
enter
aaa
sub
repz
jg
lock
xchg
pop
into
cli
cli
jns
cmpsb
pop
adc
out
lea
and
movsb
or
add
imul
lahf
mov
sbb
jbe
fists
in
int3
push
int
sbb
adc
xchg
out
inc
xor
and
movsb
imul
mov
cs
jle
or
jae
jg
dec
xchg
xor
movsl
je
mov
lods
jbe
cmp
push
das
mov
sbb
outsb
cmpb
stos
xor
inc
loopne
popf
pushf
es
maskmovq
or
sbb
xchg
dec
xchg
out
add
dec
cmc
ret
sub
sub
icebp
jmp
subl
or
pop
mov
fcomip
mov
aam
xlat
sahf
in
sub
fwait
add
test
fstpl
jnp
adc
leave
arpl
cmc
sbb
xor
adc
jns
cltd
das
sbb
or
fdivl
mov
mov
rcr
pop
outsb
cmpsb
rorb
stos
xor
stos
ficompl
sub
ja
dec
in
sti
push
dec
jecxz
fdivrs
push
sbb
cld
push
popf
jae
or
fcompl
fdivrs
sub
imul
leave
cmp
sbb
shll
push
add
xchg
fwait
sub
and
jno
mov
jp
movsl
les
mov
in
jp
sbb
pop
push
jno
push
xchg
inc
test
leave
sbb
aaa
out
dec
lods
xor
push
mov
add
popf
movsb
xchg
in
jge
pop
loope
pop
and
mov
dec
xchg
repnz
jmp
xchg
in
sbb
jae
xor
in
and
ret
jg
add
stos
add
jno
mov
or
add
jne
pop
hlt
ss
or
add
inc
jp
mov
and
lods
mov
push
lock
leave
scas
inc
js
push
sub
sub
jle
int3
or
lahf
mov
mov
push
outsl
in
jne
addr16
shlb
push
in
inc
jns
aas
ret
loope
cmp
out
xor
pop
cli
stos
sbb
inc
dec
fnstcw
and
das
jg
pop
mov
mov
repz
pop
ret
into
dec
fsubp
lret
xchg
loope
cmpsb
cmp
sahf
inc
ja
pop
sub
or
mov
into
das
dec
dec
sahf
or
sub
popf
addr16
ja
xor
jo
mov
xchg
fisttpll
mov
mov
xchg
fildl
negb
jg
cmpsl
fimull
test
jno
add
fcomi
mov
aas
or
lock
out
or
dec
mov
ss
in
pop
out
mov
fwait
xor
rol
fsubrl
int3
insl
fsub
not
outsb
xchg
xchg
add
insb
cmp
jbe
ss
shll
les
mov
cmp
cmp
lahf
hlt
jl
nop
rorl
movsl
sub
push
sub
add
mov
adc
sub
scas
pop
xchg
xchg
push
cmp
pop
shll
mov
insb
cltd
loop
push
dec
out
test
pop
dec
push
cld
dec
pop
xchg
test
lahf
or
jge
jecxz
insb
in
dec
ret
repz
movsl
mov
push
sbb
ljmp
push
ret
decb
mov
sbb
cltd
push
rcrb
adc
cmpsb
addr16
loope
inc
std
jp
cli
jmp
adc
rcr
mov
cmp
in
mov
ss
dec
insl
xlat
xchg
addr16
mov
xor
and
int
add
in
std
mov
in
push
or
mov
sbb
cmp
cmc
add
pop
sahf
addr16
jnp
sarl
out
in
lods
xchg
push
jno
or
xor
inc
mov
pop
jmp
mov
into
div
pop
daa
mov
adc
je
mov
inc
sbb
add
add
imul
daa
xor
mov
lds
jno
jnp
shll
and
mov
in
std
or
push
ds
dec
inc
xor
cltd
xor
hlt
imul
cmp
sub
repnz
sbb
ret
cmp
int3
sti
cmpsb
adc
mov
cmpsb
adc
mov
sub
cmp
ds
dec
sbb
or
sub
xchg
outsb
ss
ficompl
sub
in
sbb
or
jecxz
mov
stos
pop
test
xchg
jno
incl
adc
push
mov
xchg
mov
pop
xorb
movsl
test
mov
xchg
sub
shl
xchg
xor
loope
loop
lcall
add
fnstenv
lret
or
add
repz
shll
lods
lea
sti
stos
mov
std
lahf
outsb
or
xlat
jmp
inc
and
lret
decb
dec
lods
insb
in
fsubrs
lret
add
dec
jle
ror
cmc
popf
pop
or
test
mov
mov
into
ljmp
push
shrl
rcll
mov
or
mov
mov
xchg
scas
sub
mov
lcall
or
aam
loopne
jae
mov
add
dec
mov
jg
mov
pop
inc
adc
mov
stos
jno
xchg
xchg
pop
mov
mov
jl
push
xchg
jl
lods
in
bound
mov
insl
sbbl
cmp
adc
hlt
dec
popf
aas
pusha
movsl
or
pushf
insl
mov
push
push
movsb
insl
inc
and
add
stc
stc
roll
andl
fdivs
lods
les
pop
mov
pushf
xor
inc
insl
subb
incl
inc
aad
pop
lcall
enter
insb
cwtl
and
insl
popa
dec
movsb
cs
scas
cmpsb
jo
insl
pop
bound
mov
ret
pop
pop
fiadds
leave
push
mov
cmp
or
fwait
sbb
cs
xchg
sub
rorb
ror
sarl
ss
pop
dec
pop
std
cs
xlat
or
mov
test
sbb
jo
jb
mov
cmp
mov
out
cmp
popf
loopne
imul
mov
outsl
ljmp
lcall
mov
fdiv
inc
xor
pop
inc
ss
sbb
es
jmp
clc
movsl
add
pushf
xchg
or
jp
jp
sbb
aas
addr16
gs
int
jmp
add
insl
mov
subl
pop
mov
adc
mov
rolb
xchg
icebp
subl
les
jo
or
int3
cmc
test
dec
mov
or
test
sub
mov
loopne
ja
gs
cmp
inc
push
out
xor
loopne
xchg
test
cmc
pop
lret
into
xchg
adc
sti
sbb
cmpsb
sub
enter
pop
sbb
adc
fnstenv
cltd
and
push
xchg
lods
lds
cmpsl
sbb
das
lahf
sub
jo
icebp
hlt
add
jecxz
fcomip
pop
push
inc
out
sub
mov
mov
ss
shlb
mov
hlt
ds
or
mov
fisubrl
pop
sbb
fnstcw
mov
cmc
aam
push
mov
nop
xor
jle
lods
pushf
cli
mov
filds
pusha
dec
stos
js
das
aad
cmpsb
add
int3
push
xchg
or
lea
dec
push
or
xchg
xchg
jo
add
push
bound
test
pop
mov
pop
inc
faddp
jbe
jg
fwait
out
xor
in
flds
mov
xor
push
or
dec
fs
das
xchg
into
or
scas
repnz
aas
fneni(8087
mov
mov
push
jg
je
sub
cli
std
pop
addr16
enter
pop
outsb
in
imul
sbb
xor
add
shrb
jnp
sbb
addr16
push
jmp
xchg
add
inc
inc
fisubs
icebp
or
xchg
jne
icebp
notb
mov
test
insb
call
shlb
and
iret
lcall
and
out
rorl
xchg
push
sbb
out
adc
pushf
fnstsw
inc
xorb
jno
mov
int
int3
sub
je
lahf
cwtl
daa
mov
pop
lcall
mov
aaa
inc
les
xor
lock
inc
loopne
pop
mov
jne
in
nop
test
xorb
mov
imul
or
out
or
mov
bound
push
addr16
push
pop
jecxz
int
icebp
std
xor
and
lock
or
xchg
mov
fwait
scas
subb
pop
inc
nop
popa
mov
fstl
add
outsl
pop
xor
popf
xchg
in
popf
pop
jecxz
data16
jne
or
push
subl
dec
mov
inc
cld
push
or
mov
scas
les
das
lods
mov
cmc
addr16
xchg
jb
dec
sbb
xchg
sub
lock
dec
mov
fwait
mov
jle
xchg
xchg
inc
int3
out
ljmp
sbb
and
movsb
jns
mov
lret
lret
cmp
xchg
xor
jecxz
xchg
cld
bound
push
data16
sub
fbld
daa
xchg
mov
lret
inc
adc
in
addr16
mov
xchg
movsb
adc
nop
push
ljmp
sbbl
lock
cld
mov
fwait
out
or
mov
ljmp
inc
push
shll
sbb
xchg
mov
inc
lahf
in
cmp
out
shll
imul
or
pop
mov
mov
rcll
shlb
scas
push
jb
push
fiaddl
inc
cwtl
sbb
int
inc
sbb
je
clc
jl
mov
sub
rorl
cld
sti
out
and
or
inc
xor
mov
and
test
pop
push
push
push
aad
sub
popf
push
inc
int
fcoms
xor
sbbb
mov
xchg
push
lods
dec
nop
jle
in
sahf
inc
jg
inc
mov
cli
jo
sbb
adc
inc
mov
mov
cltd
gs
sarl
movsb
pop
push
dec
test
inc
pop
call
mov
fistl
xchg
orb
repz
mov
sti
pop
in
mov
mov
add
nop
iret
dec
push
jg
jbe
dec
xlat
push
mov
sbb
add
insb
and
adc
jecxz
rolb
add
jnp
stc
push
mov
fdivrl
jg
mov
jno
mov
je
ret
adcb
adc
lret
sub
loop
les
jo
xor
lods
or
push
inc
xchg
adc
mov
mov
mov
push
mov
out
jg
push
lret
xor
ljmp
add
mov
mul
jne
lahf
pop
in
cmpps
cwtl
addl
sbb
sti
xor
cld
mov
pop
mov
clc
test
in
leave
cltd
inc
xor
pop
pushl
mov
dec
add
inc
int
inc
push
andl
pop
jnp
dec
mov
inc
xchg
and
subb
mov
lods
adc
lcall
rcl
jge
into
jo
jle
loopne
mov
add
jl
js
sub
testl
loopne
pop
adc
lods
pop
cli
je
mov
mov
mov
aaa
push
aam
mov
jo
push
xchg
dec
in
shll
rcrb
or
adc
insb
push
mov
sbbb
frstor
sub
cli
in
inc
add
lods
sbb
loop
scas
imull
inc
sahf
mov
mov
and
js
out
ret
or
inc
clc
mov
and
mov
cmp
push
mov
lods
bound
loope
fcmovb
mov
add
pop
cmp
xchg
rcrb
sbb
and
xchg
sub
inc
xchg
das
bound
out
xor
mov
stos
stos
fisttps
fucomi
add
push
bound
sub
and
into
jo
mov
aaa
and
and
pushf
enter
xchg
lea
xor
fmull
xchg
adc
mov
xor
pushf
movl
xor
dec
sub
or
push
add
rorb
or
sbb
mov
xchg
adc
jb
popa
test
mov
xor
pushf
lcall
in
push
sbb
mov
sub
aad
push
pushf
loopne
push
or
add
or
push
mov
xchg
mov
subb
movl
ret
inc
add
int
xchg
sub
add
push
pusha
inc
push
cmp
rcrl
out
ds
dec
es
adc
dec
les
cmp
ret
pushf
or
pop
in
ss
cmp
hlt
loope
lods
test
mov
and
and
add
xor
inc
mov
or
popl
jle
sub
lcall
pop
sbb
mov
sub
and
loopne
lret
cmpsl
mov
cmp
aas
mov
cmp
pop
xchg
or
cli
jl
mov
mov
fnstcw
xor
aam
jmp
adc
mov
inc
sub
ror
and
lods
inc
cld
pop
scas
jne
icebp
pop
shrl
mov
jl
jg
dec
aas
or
int
faddp
mov
pop
pop
and
fsubrs
cmp
rcll
sbb
ret
lret
pushf
imulb
popa
cwtl
cmp
pop
stos
sbb
inc
int
dec
out
inc
mov
in
imul
adc
xor
mov
xchg
mov
mov
jge
dec
out
addr16
xchg
mov
pushf
shll
sub
mov
andl
scas
dec
in
or
push
je
rolb
push
out
repz
cmpsl
dec
jo
js
addr16
jbe
mov
les
and
mov
pop
ret
andl
in
mull
lods
lock
jl
push
xor
ret
add
test
lcall
dec
std
ret
decb
sub
inc
cs
mov
push
and
mov
cmp
jns
in
xchg
and
inc
rep
cmpsl
mulb
sarl
push
fcmovnb
jecxz
call
jl
sub
mov
cli
mul
xchg
dec
lods
out
pop
push
rcll
jne
cmp
jnp
cmpsb
jl
push
lcall
hlt
lret
movsb
arpl
filds
imul
pop
cmp
sbb
and
xor
addb
mov
rcr
sbb
mov
cmp
out
fsubp
repnz
push
in
rcl
out
mov
daa
inc
pop
push
rclb
sub
repz
ljmp
mov
push
es
push
daa
xchg
repnz
pop
clc
or
push
pop
cwtl
cmp
insl
sub
pop
jne
sub
sbb
or
cmp
jle
mov
push
out
cli
mov
cmp
inc
push
ret
and
push
dec
jp
fadds
xchg
jecxz
or
and
sar
xor
test
push
xor
xlat
cmp
xchg
cmp
sbb
das
push
cmpsb
nop
push
inc
insl
cmpsl
or
xchg
ret
shlb
xchg
push
clc
push
xor
or
dec
cmpb
lods
mov
shrd
stc
nop
sub
adc
cld
incb
inc
adc
sub
fwait
jl
outsl
push
nop
fsubp
cltd
cs
movzbl
pop
jmp
aas
sarb
push
sub
or
mov
dec
or
test
and
xchg
mov
add
and
shrl
pcmpgtd
add
ret
arpl
lds
pusha
adc
mov
xor
jl
sbb
sub
jo
inc
ret
dec
cltd
ficoms
pop
in
fstl
lret
inc
dec
adc
jl
pushf
sbbl
sub
push
movsl
cs
imul
nop
dec
je
sbb
sarl
in
leave
push
sub
xchg
int
xchg
lea
fsin
push
movsw
jae
iret
stc
pop
and
dec
pop
lahf
inc
cmpsb
jno
pop
push
ljmp
orb
aas
inc
cli
aam
mov
mov
push
icebp
jg
pop
mov
pop
cmp
mov
les
or
ja
jmp
pop
cld
push
bound
sbb
cmc
pop
and
lea
jo
and
sub
cmc
fcmovnb
or
cltd
xchg
das
fs
jne
rcrb
sbb
scas
mov
fistpl
fnsave
fbstp
scas
mov
sbb
sub
push
cmp
imul
xchg
rcl
test
cmp
pop
jno
mov
dec
mov
push
push
rcrl
inc
or
jae
pop
shrl
mov
imul
ret
add
sbb
mov
pop
ds
cmp
call
flds
ret
push
hlt
into
mov
add
ret
or
add
ds
cmpsb
or
mov
les
pop
outsb
sbb
mov
push
pop
lret
fnstcw
out
push
pop
mov
out
cltd
xor
and
and
movsb
sub
lods
xor
xchg
pop
dec
icebp
xchg
push
pop
push
into
insl
mov
xchg
pop
clc
adc
adc
xchg
test
cmp
int3
or
add
sahf
aad
cld
pusha
mov
mov
ljmp
dec
jb
stos
out
loop
cmp
and
fidivrl
sbb
rcl
stos
call
adc
lcall
xor
jl
xchg
orl
outsl
push
shlb
into
mov
test
jne
sbb
mov
orb
sti
imull
or
push
insl
nop
lret
sbb
jge
xchg
jge
add
adc
fmull
arpl
lds
daa
js
test
mov
loopne
sbb
int
roll
pop
shl
lcall
and
in
fcmovu
or
leave
add
cmc
movsl
push
xorb
jg
add
inc
jno
sbbl
mov
cmp
and
mov
mov
dec
cmp
scas
or
mov
inc
cs
subl
gs
je
mov
pop
mov
dec
mov
mov
jno
xor
std
push
sti
cli
add
xchg
sbb
daa
pushf
mov
scas
imul
add
jbe
sub
mov
je
cld
jge
add
dec
jnp
and
js
out
ret
cs
xor
jl
jo
mov
outsb
or
mov
dec
mov
js
lods
lds
and
inc
fs
xor
cltd
js
mov
jl
divl
add
repz
sbb
adc
fdivrs
mov
cli
pushf
cmpl
xor
push
pop
sti
adc
cwtl
pshufw
pusha
adc
in
lds
mov
lods
xor
mov
out
xchg
cmc
or
xchg
cmp
mov
xor
xor
pop
jns
scas
loope
inc
jns
jg
mov
mov
jmp
roll
pop
dec
fiaddl
in
ds
push
mov
xor
sar
int3
negl
pop
push
imul
push
rcl
xchg
mov
jl
jg
mov
stos
xchg
incl
xchg
push
imul
xchg
pop
xor
decb
mov
mov
mov
adc
jle
sub
nop
iret
popa
sahf
shll
into
aad
ds
aad
add
insb
xor
inc
inc
jnp
leave
loopne
out
cmp
mov
xchg
adc
int3
cmp
aas
scas
mov
add
mov
push
mov
pop
jns
jae
outsl
fsubs
xlat
lods
or
out
addr16
aaa
pop
mov
xchg
popa
arpl
xchg
ror
in
lcall
and
clc
repz
cltd
mov
jae
sub
push
daa
pusha
enter
leave
cltd
clc
adc
or
lea
test
call
cmpl
push
sub
or
push
xlat
lret
sbb
xchg
mov
jbe
inc
pop
je
adc
fsqrt
cmpsb
sbb
mov
arpl
inc
std
jns
jne
pop
stc
flds
inc
pusha
or
out
sub
mov
mov
lock
out
ret
mov
in
lods
xchg
leave
inc
xlat
xchg
mov
int
pop
push
aad
fistl
fidivs
test
cwtl
lcall
xor
hlt
xchg
xchg
mov
popa
cmpsl
sbbb
cmc
icebp
out
mov
sbb
fsubl
jmp
and
orb
inc
xor
jo
cmp
inc
and
inc
mov
data16
sub
pop
cltd
sbb
sarl
sbb
mov
rclb
inc
cmpsb
xlat
lahf
std
addr16
or
cs
lahf
adc
mov
xor
sbb
add
mov
jge
jb
imul
pop
fcompl
cli
pop
mov
pop
or
add
xor
ss
cmp
dec
push
sbb
adc
adc
adc
xchg
xor
jmp
stos
out
fcomi
mov
jae
lods
pop
testl
dec
pop
inc
mov
rcl
sbb
xor
fcoms
cmp
xchg
mov
and
imul
push
loop
test
push
in
mov
test
push
mov
dec
popa
mov
bound
mov
jno
lret
dec
rcrl
xchg
jmp
dec
dec
shll
mov
add
int
movsl
shll
in
xor
xor
fs
xor
movsb
lods
out
int
mov
aaa
add
sub
sahf
adc
mov
stc
dec
repnz
popa
es
lea
sub
test
shlb
mov
jns
bound
data16
lcall
sbb
xchg
and
mov
jecxz
out
lcall
or
xor
fcompl
movsl
pop
sub
pop
roll
pushf
fsubrp
lea
add
dec
sbb
sbb
out
add
cld
insl
int
mov
clc
mov
sbb
es
and
xchg
stc
shrb
dec
ja
or
sbbl
imul
dec
mov
les
cltd
orb
sbb
test
add
outsb
mov
leave
pop
in
outsb
xchg
fcoms
test
xor
mov
icebp
hlt
mov
sub
adc
push
cmpsl
subl
addr16
cmp
sbb
sub
pop
and
das
push
mov
xchg
into
hlt
xchg
jmp
js
inc
and
testb
bound
idivl
shrl
ret
lea
sub
jecxz
imul
lcall
shrl
cld
icebp
and
mov
fucom
sbb
cld
rcrl
inc
jmp
scas
inc
pushf
and
mov
into
andl
sti
out
xchg
cmp
loopne
sbb
popf
lcall
mov
jne
jnp
inc
pop
sub
loope
dec
daa
rorl
hlt
cmp
repz
cmp
fnsave
jg
rcrb
nop
sub
jo
pop
enter
inc
insb
pop
xor
fisttpll
mov
xorl
aam
jge
cmp
jecxz
ss
sub
cwtl
fstpt
and
push
insl
fsts
jp
sbb
pop
testb
scas
jl
fiaddl
idiv
inc
push
inc
push
inc
dec
mov
and
into
loope
popf
push
inc
xchg
movsl
imul
pop
pop
sbbb
xchg
int
aam
cmc
inc
out
enter
daa
push
pusha
out
mov
popa
mov
int
push
jge
sub
or
sbb
or
sbb
mov
lea
test
je
push
cmp
sbb
mov
xorb
lcall
stos
fsts
jns
add
cmp
mov
movsl
iret
add
ret
add
mov
xchg
sbb
fistpll
mov
xchg
cmpsl
into
scas
fwait
jge
add
jne
xchg
cmp
es
jl
inc
lods
lar
xor
loop
sbb
or
adc
std
mov
stc
fsubrl
mov
xchg
sbb
andb
jb
inc
dec
mov
cltd
cli
sbbl
jge
add
mov
fdivl
lea
mov
out
stos
loope
sbb
popf
jae
adc
pop
andl
mov
jns
shlb
add
lock
es
pushf
xchg
adc
pop
mov
mov
insb
cmpsl
xchg
jne
stc
in
mov
repz
xchg
mov
popl
imul
jl
push
sub
xor
inc
xor
mov
sub
mov
mov
pop
pusha
sti
mov
outsb
sub
shrl
jns
jbe
jo
int3
shll
roll
sbbl
cmc
dec
movsl
addr16
int3
push
iret
cs
inc
inc
lahf
or
imul
add
lds
push
push
cmp
enter
out
ret
fisubl
sbb
pop
subl
push
or
add
rcr
and
ret
lods
in
or
clc
lock
loope,pt
scas
jp
pop
ljmp
dec
enter
inc
mov
movsb
shll
mov
xor
inc
iret
add
xchg
mov
push
addr16
pop
icebp
cwtl
cmp
push
jbe
je
insl
inc
mov
mov
sahf
in
sbb
add
sahf
rclb
fs
ficoms
fldpi
add
repnz
jne
scas
out
cmpsl
stos
jmp
push
pop
sbb
jo
imul
movsl
lret
ljmp
iret
adc
push
jns
dec
jno
and
ret
xor
vmread
jo
sbb
pushl
cmp
ror
adc
ss
mov
or
mov
les
push
dec
gs
dec
mov
jp
xchg
scas
add
loop
jb
mov
lods
shll
out
movsb
mov
pop
dec
xchg
fcmovnu
adc
cwtl
pop
in
test
inc
addr16
orl
xchg
leavew
pop
xchg
pushf
pop
repnz
std
push
jle
movsb
sub
adcl
repz
jnp
add
mov
scas
and
inc
cmc
cmp
sub
shlb
dec
xor
mov
loope
jae
mov
jnp
adc
outsb
lcall
adc
jg
lock
adc
pop
sbb
xchg
sub
cli
daa
addb
test
inc
and
and
mov
inc
aas
jbe
mov
stos
loop
lods
test
arpl
movsl
loope
sbb
dec
int
lods
lods
mov
sbb
xchg
dec
cli
fisubs
jmp
dec
movsl
sbb
mov
mov
sub
fiaddl
pop
mov
pusha
fcoms
sbb
ret
xor
cmp
push
insb
inc
outsb
push
enter
push
jmp
or
sbb
cs
mov
out
mov
icebp
stos
dec
sbb
enter
mov
sahf
pop
adc
jmp
lcall
andl
in
pop
jno
jo
inc
fcomip
jo
sub
andb
icebp
add
in
mov
inc
imul
int3
inc
out
mov
test
adc
clc
or
add
dec
or
addl
dec
push
cs
push
adc
push
push
cmp
jne
pop
cmpsl
adc
jae
imul
pushf
inc
xlat
sbbb
cmpsb
mov
pop
sub
xor
popa
inc
mov
xorb
mov
mov
loopne
pop
cmp
sbb
add
mov
call
inc
cmpsb
mov
push
or
xor
sub
lret
in
mov
xor
daa
rcr
dec
mov
mov
push
lret
shl
mov
mov
lods
sbb
inc
fwait
mov
in
test
div
imul
dec
pop
mov
inc
xchg
loope
int3
test
push
cmc
pop
out
lret
pop
dec
cmp
mov
ja
jge
pusha
aas
sub
mov
mov
pop
imul
xchg
cld
scas
inc
sub
pusha
flds
out
ja
jmp
pop
in
add
jmp
aas
adc
sbb
mov
push
pop
shll
iret
sbb
orl
pop
xchg
and
cmp
cltd
sbb
sub
jne
xor
cmp
sub
lret
dec
dec
xor
sub
pop
mov
inc
and
cwtl
in
and
ss
push
cld
add
ffreep
xor
nop
push
fcmovne
dec
ror
data16
rorb
ss
jle
pop
and
jle
mul
push
pushf
data16
movsb
pop
mov
or
insl
xlat
jecxz
sub
jmp
cli
jecxz
and
sub
add
mov
mov
stos
ficomps
jns
cmp
cli
dec
stc
fisubs
leave
adc
call
sub
mov
mov
shll
ds
lahf
lods
jae
ja
icebp
jg
imul
std
repnz
and
mov
mov
dec
pusha
mov
sub
dec
mov
push
stos
sub
gs
xchg
mov
cwtl
imul
test
cmpsl
mov
rcr
mov
or
cli
stos
mov
adc
xchg
inc
add
clc
aam
sub
mov
dec
enter
mov
outsl
dec
push
mov
push
andb
or
sub
xchg
jbe
add
je
xorb
jns
cwtl
ret
imul
pop
sub
pop
aad
lret
mov
push
xchg
jmp
lods
sub
xor
js
andb
ljmp
insb
shr
insb
xor
lret
pop
sbb
aam
adc
and
pop
adc
mov
aas
push
mov
mov
bound
jl
ret
scas
xchg
call
adc
in
scas
push
test
movsb
adc
lock
aaa
movups
mov
das
pop
jg
outsl
data16
lret
popf
xor
jns
mov
movsb
cmp
imul
cmp
sbb
iret
imul
cmpsl
aam
in
out
xchg
jmp
push
or
imul
xchg
push
jnp
add
lret
test
leave
stos
inc
dec
pusha
and
movsl
into
xor
sub
clc
sub
hlt
or
sub
sub
inc
or
cmp
aad
test
push
jae
ficoms
out
mov
xor
in
pop
xlat
aas
fldl
dec
xor
sti
cmpsb
scas
mov
pop
jae
repz
jne
or
jecxz
cs
movsl
or
stc
movsl
lock
les
jae
inc
inc
test
cmp
cmpsl
mov
fs
xchg
shr
lcall
mov
sbb
jge
mov
imul
or
test
cmp
mov
pop
xor
cmp
call
lret
sbb
pop
cmp
xchg
enter
pop
fwait
aam
inc
or
mov
mov
addr16
xchg
stos
sub
incl
xchg
movsl
out
addr16
cmpsl
sbbb
xor
ss
xchg
stos
mov
jbe
or
sbb
out
movl
pop
inc
in
mov
cmp
lock
push
push
gs
je
and
cmp
nop
xor
test
jns
iret
mull
inc
sbb
jo
ret
cmp
ret
push
aaa
ret
in
add
adc
aad
outsl
mov
pop
adc
or
test
insb
mov
iret
arpl
xchg
push
les
xor
jg
mov
iret
xor
shrb
pusha
outsl
jnp
movsl
pop
icebp
test
adc
mov
add
cmpsb
mov
rorl
jp
push
fwait
hlt
insl
fwait
xor
inc
fsts
nop
mov
enter
outsl
xchg
jno
imul
cltd
add
mov
call
jbe
ret
test
pop
test
sub
add
sbb
mul
mov
mov
cmp
adc
xor
subl
mov
or
xchg
je
pushf
in
das
ds
jb
sub
push
xchg
mov
xchg
scas
cmp
mov
cmp
leave
push
push
shlb
jle
adc
lock
mov
xor
push
cmc
std
fadds
lret
jle
pop
cmp
mov
sub
inc
sahf
rorb
sarb
test
push
jle
jg
add
data16
in
or
shrd
fcomps
push
mov
out
jmp
aaa
inc
lea
xchg
data16
addr16
pop
pop
bound
mov
and
lock
mov
xchg
dec
in
jmp
int3
sti
pop
lock
xor
fdivrl
imul
movsl
push
inc
adc
jae
push
out
cld
xchg
dec
sub
cmp
out
jge
mov
or
jae
stos
sbb
rol
sti
frstor
mov
outsb
push
add
in
daa
cmc
mov
cwtl
iret
add
ja
fists
xor
icebp
aas
fsubrl
xchg
lock
mov
and
push
pusha
sbb
daa
fists
push
push
xor
or
test
mov
xchg
xor
cwtl
into
and
xor
insl
xchg
pop
push
sti
lds
imul
ror
into
das
dec
sbb
adc
sbb
push
or
add
mov
data16
lock
stc
lds
daa
in
inc
mov
pop
mov
dec
je
lods
mov
addl
ret
or
xchg
add
mov
cltd
add
movsl
sub
cwtl
aad
icebp
adc
bound
and
mov
pop
pop
xchg
ds
loope
cmc
push
xchg
pop
ds
stc
rcr
or
das
mov
aas
push
icebp
push
cmp
mov
ja
mov
std
adc
cwtl
mov
cmc
rclb
jb
rcll
mov
int3
ds
mov
jl
mov
cmpsb
loope
andb
aad
bound
jp
cmp
mov
sub
mov
in
xchg
dec
mov
cmpsb
je
push
or
mov
xor
rcrl
aaa
add
pop
test
fisubs
mov
push
je
pop
pop
mov
sti
cwtl
call
ret
dec
enter
push
and
into
pop
sahf
ret
pop
insl
pop
nop
push
stos
cltd
leave
pop
enter
push
mov
scas
xchg
rorl
scas
es
inc
lret
icebp
or
es
mov
push
ret
push
jno
imul
inc
sub
mov
mov
add
sub
mov
insb
mov
test
loope
arpl
cmp
in
adc
ja
rolb
pop
imul
sbb
xchg
fisttpll
rcrb
ret
pop
test
aaa
adc
mov
add
mov
fdivs
repnz
mov
jae
sti
jle
xor
lock
adc
cmp
in
jg
push
ficoms
jecxz
sti
push
mov
cli
cmp
outsl
divb
ret
sub
outsb
jg
mov
push
sub
mov
fstl
xor
xlat
ds
nop
lds
imul
inc
pop
icebp
push
andb
and
aaa
xor
and
lods
sub
mov
pop
jo
sbb
call
cmp
mov
mov
popa
mov
lret
mov
dec
jecxz
test
xchg
movsb
clc
or
icebp
int
mov
cmpsb
mov
sarl
push
dec
inc
stc
repz
sarb
andl
push
std
jmp
cmc
fildll
scas
nop
inc
fsubl
and
push
and
inc
adc
dec
lahf
sti
test
sbb
mov
insb
das
jmp
jbe
stc
rcrb
ljmp
push
aaa
cltd
mov
hlt
pop
xor
int
push
mov
fisubrl
sbb
out
cld
in
or
cmpsl
jne
mov
faddl
mov
and
xor
xor
push
test
addb
xchg
pop
or
mov
push
ljmp
insl
in
dec
xchg
jle
inc
cmp
leave
sbb
xchg
in
mov
xorl
sub
mov
repnz
mov
xor
xchg
stos
inc
add
mov
gs
mov
roll
dec
repz
jbe
divb
inc
insb
inc
outsl
and
jmp
mov
loope
arpl
mov
popa
and
lods
sbb
or
dec
and
jmp
adc
push
ret
inc
sbb
orb
push
rorb
test
cmc
out
mov
mov
ss
xor
jmp
ljmp
sbb
negl
stos
out
xor
test
jmp
cmpsb
push
adc
jl
mov
push
push
mov
fistpll
ss
pop
rclb
lods
mov
fsubrs
sbb
xchg
mov
imul
push
mov
and
jmp
cmp
jmp
cmp
clc
mov
inc
sbb
cwtl
sbb
nop
lret
mov
mov
icebp
mov
mov
inc
mov
mov
ds
pop
ret
mov
testb
push
adc
mov
mov
movsb
das
adc
adc
in
cmp
aam
push
and
out
sub
sbb
call
xor
inc
enter
push
ja
push
mov
xchg
movsl
sbb
cmc
stos
jecxz
mov
popf
scas
cltd
sti
ret
or
push
inc
loopne
arpl
ror
shl
repnz
cltd
xchg
es
push
add
push
mov
scas
mov
js
push
pop
mov
push
xchg
lock
cltd
xor
and
xchg
fstps
push
and
aad
movsl
sub
cltd
push
xor
and
sbb
in
push
adcb
pushl
or
xchg
push
sarb
rcrl
pop
sub
mov
mov
mov
subl
cltd
decl
xchg
sbb
test
lock
fmuls
xor
lret
jle
ret
and
inc
push
mov
pop
sub
push
ret
sub
mov
test
cmpsl
loope
shrb
cltd
cmp
dec
xchg
inc
xchg
jle
testl
adc
movsb
mov
mov
xchg
adc
adc
scas
imul
je
sbb
fmul
or
and
out
rol
fadd
and
sub
cmp
add
jmp
gs
cmp
test
rorb
cmp
cmp
jle
sti
hlt
or
aaa
cmp
das
xlat
shrb
jge
stc
pop
jmp
ss
int3
cmc
jo
jp
lea
pop
sub
sub
jl
out
test
dec
sub
mov
outsb
cmp
pop
ds
jge
aas
mov
jno
pop
out
ficomps
fmul
ss
jne
lea
inc
leave
stc
mov
imul
xor
adc
jl
hlt
sub
or
mov
adc
notl
mov
and
aam
adc
sti
out
xchg
outsl
in
scas
pop
sbb
int
mov
out
sub
in
lock
jmp
js
inc
cmp
aad
js
divl
fnstsw
cmpsl
mov
fnstenv
fmul
add
test
add
inc
adc
mov
push
mov
pop
push
je
stc
adcb
sahf
xchg
or
fs
xchg
fsubl
xor
dec
jne
dec
dec
das
adc
jo
jno
dec
jmp
out
sbb
iret
mov
pop
fistpl
jnp
imul
mov
sub
push
push
jno
cs
popa
or
add
mov
mov
xchg
add
mov
mov
iret
lret
or
popf
mov
mov
fwait
imul
out
jne
sahf
outsb
shll
jo
push
addb
push
and
dec
pusha
or
loop
xchg
loop
push
sub
and
mov
movsl
pop
shlb
cltd
sub
sbb
rcl
cmp
aam
fnstenv
sub
in
enter
mov
mov
outsl
xor
adc
into
es
jg
stos
lcall
fcomi
jo
loope
push
push
sahf
xchg
insl
lcall
mov
stc
mulb
pop
dec
stos
ja
mov
rcrl
lock
out
inc
xor
je
insl
add
ja
lods
incl
fstpl
and
pop
push
mov
repnz
dec
lret
ja
movsl
xchg
lds
mov
mov
xlat
cltd
dec
imul
stos
movsb
repz
lcall
sub
push
fisubrs
mov
out
out
imul
jge
scas
popa
imul
rep
and
jmp
and
outsb
jo
lds
push
or
add
jge
rcrb
fwait
rcrb
stos
lahf
jg
rcl
sub
into
ljmp
in
sbb
cmp
dec
mov
xor
jno
lods
lods
and
inc
pop
xchg
push
stos
insl
or
inc
cmc
cwtl
out
mov
mov
xchg
movsl
xchg
and
scas
jg
push
sub
push
push
cli
cmpsl
lock
insb
mov
dec
cmp
jnp
mov
in
or
fisttps
xor
or
test
imul
lock
mov
or
arpl
scas
out
and
and
aam
gs
fnstcw
sbb
ljmp
aas
sub
icebp
outsl
mov
adc
pop
nop
mov
cmp
dec
cmc
leave
bound
pusha
jp
add
ficoml
inc
lret
insl
shr
sbb
stos
cmc
sbb
inc
mov
jecxz
mov
mov
xchg
fcmovbe
mov
sti
push
jb
xchg
enter
push
jno
xchg
mov
shrb
jae
call
mov
pop
ljmp
or
inc
call
add
fisttpl
imul
and
adc
mov
adc
xchg
adc
pop
lods
push
fidivrl
adc
push
imulb
or
int3
dec
sarb
leave
dec
add
cmpsl
aad
pop
call
lods
jo
adc
mov
inc
gs
push
lahf
pop
cmp
jmp
scas
push
ret
mov
pop
divl
pop
pop
das
clc
xchg
pusha
pop
pop
fcomp
sbb
dec
lods
inc
mov
add
ss
or
fucomi
adc
inc
jp
sbb
dec
mov
jae
adc
loope
cmp
ss
adc
jge
mov
fstpt
ja
sbbl
or
mov
mov
in
pop
mov
jbe
addr16
lods
push
xor
adc
adc
and
mov
xlat
adc
mov
mov
jae
mov
fbstp
fwait
dec
cli
jle
xchg
mov
jnp
movsl
mov
je
pushf
stos
cmp
xor
sub
hlt
jae
loop
inc
scas
sub
fldcw
cmpsl
xlat
add
jl
xor
stc
mov
fsubrl
out
fsts
addl
push
lret
cltd
lcall
stc
jae
movsb
push
mov
sub
call
in
in
cmp
xchg
fnstcw
adc
push
ret
sbb
scas
pop
push
push
pushf
mov
out
inc
aaa
aam
andl
cwtl
lock
inc
sub
js
lret
es
xor
not
jecxz
jbe
add
fbstp
inc
push
sub
push
mov
mov
adc
dec
icebp
fwait
pop
ljmp
push
call
bound
jmp
push
jle
subl
adc
shll
mov
jbe
or
mov
das
mov
sub
mov
dec
jle
mov
xor
xchg
out
inc
faddl
xchg
in
popf
jo
shlb
xchg
jb
push
jecxz
push
insl
push
pop
rcrl
out
lock
push
repz
add
lret
fidivs
mov
enter
aaa
sub
cwtl
setge
cli
adc
lods
dec
sahf
sub
and
mov
test
call
pop
mov
cs
sub
mov
inc
pop
sub
xor
sbb
repnz
inc
enter
out
fisubrs
pop
sub
pop
pop
shrl
aad
sbb
fidivrl
aad
sar
leave
mov
dec
outsb
fisttps
test
addl
inc
repz
add
pop
andl
mov
mov
cmp
aad
sbb
cmpsl
fisubrl
in
mov
or
push
push
and
shll
jne
sbb
xchg
add
cli
imul
pop
shll
dec
xor
popa
pop
and
mov
fbld
popa
mov
std
shrb
mov
pop
test
cwtl
xlat
pop
sahf
push
sti
icebp
or
stos
dec
adc
jmp
inc
add
pusha
loope
lea
cmp
in
inc
and
pop
in
pop
jl
icebp
mov
push
inc
loop
mov
sbb
xchg
call
scas
sbb
in
test
lret
stos
int
das
pop
in
jb
dec
int3
xlat
mov
and
outsb
jmp
cmp
andb
inc
pusha
sbb
sbb
andb
lret
test
adc
mov
in
ret
add
daa
outsb
loop
scas
and
or
dec
gs
jmp
in
mov
push
nop
cmpsl
push
ss
lcall
jbe
out
roll
mov
xorl
dec
xor
repnz
mov
cs
inc
cltd
sbb
ret
fs
leave
push
shll
sbb
cmp
out
pop
ljmp
sub
cmp
outsl
jp
xchg
sahf
scas
or
rcl
mov
mov
xlat
imul
mov
stos
imull
lea
nop
push
bound
pop
in
loope
or
in
in
jbe
sub
iret
and
push
xlat
neg
int3
sub
int3
push
popf
lret
aaa
hlt
add
mov
mov
mov
repz
sti
xlat
inc
fnclex
xor
jmp
jnp
lcall
cmc
mov
popf
push
xchg
nop
out
imul
aaa
jae
int3
sub
sub
mov
push
dec
arpl
adc
xchg
push
jg
cld
mov
cmpsl
mov
push
mov
sub
pushf
repz
movsb
pop
shlb
scas
rol
pop
xlat
scas
fcmovnb
xchg
and
testl
mov
inc
mov
cmp
out
out
inc
xchg
lods
lret
dec
sbb
mov
gs
gs
cmp
mov
repz
push
push
fisttpll
add
add
dec
fwait
lds
out
fstpl
mov
adc
adc
pop
push
fdivl
adc
jb
fisttps
in
int3
aas
cmp
in
inc
jmp
xor
lods
xor
dec
jnp
fs
inc
ja
pusha
int3
xchg
ss
mov
enter
stos
sbb
mov
mov
ja
push
add
mov
push
adc
test
jp
adc
xchg
sarb
pcmpeqd
loop
mov
clc
testl
jae
or
testl
mov
insl
push
cmpsb
push
ds
adc
jno
clc
jno
add
jno
aaa
and
adc
lea
push
dec
pusha
inc
cld
and
xor
or
adc
cmp
pop
xlat
aaa
pop
cli
repnz
sarl
mov
pusha
adcb
xchg
mov
sbb
add
jle
mov
lret
or
dec
adc
in
mov
xor
cmp
cmp
push
js
jecxz
jne
mov
or
aaa
sti
movsl
in
push
inc
mov
packssdw
outsb
notb
push
nop
cmp
ret
in
mov
pushf
div
cmp
mov
int3
lret
adc
or
mov
mov
xor
setns
dec
dec
ljmp
xor
ffree
mov
cmpsl
jp
jmp
aam
repz
add
mov
sub
cmc
aas
cmp
loope
fs
lahf
sbb
adcb
fisubl
in
cld
pop
push
push
subl
xchg
and
pop
je
roll
clc
ja
sub
decl
lret
mov
icebp
ret
enter
push
lret
lods
add
push
rorb
cmpsl
imul
inc
cmp
clc
outsl
lcall
adc
inc
in
clc
xchg
cmp
ficompl
sub
sub
cmc
insl
push
cli
jge
sbb
mov
test
ds
pusha
outsb
jne
test
ret
mov
js
xor
mov
fxrstor
xor
out
mov
jne
xchg
add
daa
fsubs
push
mov
imul
bound
inc
jp
xchg
sub
mov
add
push
pusha
jmp
or
pop
dec
movsl
jg
adc
and
ret
inc
add
dec
js
push
sti
jno
repnz
add
mov
add
mov
sbb
fs
lods
mov
cmp
lods
aas
lcall
sbb
pop
push
outsb
or
xor
bound
sahf
lds
adcb
xor
je
jmp
adc
jne
mov
xor
jle
lahf
movsb
mov
mov
stc
pushf
popf
imul
jbe
jmp
mov
pop
sbb
into
sub
mov
aad
sub
ret
std
mov
push
inc
dec
test
pop
cmp
or
div
mov
xor
test
fs
lea
mov
aaa
mov
add
push
dec
pop
push
lds
sahf
mov
xchg
xchg
imul
pop
push
mov
and
jge
int
inc
movsl
pusha
insb
lods
mov
pop
jno
call
lret
lock
xlat
in
xor
nop
inc
pop
lock
sbb
add
mulb
mov
xor
cmp
cmp
int3
es
cli
push
iret
pop
or
aas
adc
stos
mov
add
inc
jae
sbbl
xor
pop
cs
stos
inc
loop,pn
jb
xor
dec
jmp
jno
jnp
icebp
out
loopne
jo
dec
xchg
lcall
stc
mov
fstp
sub
mov
push
cmp
or
enter
shl
add
stc
sbb
pop
in
push
icebp
sahf
enter
fidivs
jns
pushaw
mov
mov
pop
pop
pushf
js
loop
pop
scas
aas
jp
in
push
std
xchg
mov
push
sbb
mov
fsts
push
enter
mov
daa
stos
jp
in
or
pusha
call
sahf
aad
cmp
daa
xor
aas
dec
loope
mov
imul
sbb
mov
js
test
mov
decb
jle
xor
sbb
mov
mov
call
scas
or
xchg
mov
lea
xor
xchg
inc
mov
dec
or
xchg
inc
cli
orb
mov
mov
ljmp
cwtl
lods
add
repnz
into
inc
daa
jmp
pusha
fistps
mov
rcrl
adc
addr16
out
clc
xchg
xlat
clc
jae
in
adc
pop
jne
sbb
xchg
inc
adc
pop
imul
pop
mov
int3
sub
mul
insb
mov
jmp
inc
xor
inc
in
fbstp
add
outsb
movsb
cmp
inc
push
stc
inc
pop
or
jnp
loope
aad
inc
sbb
inc
or
andl
push
outsb
xor
dec
xchg
mov
lods
sbb
jg
aam
cmp
push
cli
stos
push
clc
aas
das
or
pop
mov
sbb
mov
movsl
fiaddl
or
and
and
mov
push
lds
push
cltd
dec
pop
test
jecxz
fcoms
or
adcb
xor
arpl
and
inc
or
inc
sbb
xor
add
lea
cs
enter
imul
mov
mov
imul
sbb
aad
dec
cmpsb
pop
push
mov
pop
loope
xlat
outsl
out
cmp
adc
xchg
mov
outsb
sub
outsb
aam
fiaddl
adc
xchg
sub
pop
lret
aad
shlb
repnz
mov
adc
gs
xor
xor
sub
or
inc
lret
adc
aam
pop
cmp
repz
jge
sub
mov
out
mov
nop
mov
pop
jmp
inc
loope
add
add
xchg
fldt
xor
push
outsb
daa
and
lock
or
jo
fsubrs
scas
fisubs
pop
cltd
add
out
lds
fucomi
pop
push
sbb
jl
push
pop
xorb
dec
divb
or
rcrb
adcl
sub
cmc
xchg
jae
xchg
pop
add
pop
pop
shl
jo
inc
jno
mov
xor
adc
pop
push
rclb
xchg
pop
sub
cmp
add
insb
jne
xor
stos
daa
lret
call
cwtl
push
pop
mov
testl
shlb
pushf
or
mov
pop
fucomi
repz
nop
add
les
fildl
xchg
mov
pusha
cli
xor
setns
cmp
cmpsl
aam
or
ret
mov
test
inc
insl
mov
mov
out
mov
loope
outsl
mov
push
mov
and
movsl
sub
negl
push
test
inc
outsb
pop
push
je
repnz
movsl
stos
stos
cmp
jecxz
fadds
xor
push
cmp
ja
ret
sub
das
imulb
hlt
popa
push
cmpsb
out
enter
mov
or
daa
mov
sub
pop
lcall
push
and
les
and
sub
push
test
or
mov
dec
repnz
pop
mov
pop
mov
xchg
mov
push
cmp
pop
iret
xorb
popf
insb
pop
push
ja
mov
cmp
push
movsl
dec
sahf
out
mov
lcall
or
inc
je
xchg
aam
mov
pop
in
fcom
cmp
or
dec
push
xor
pop
xchg
adc
push
cmp
push
push
mov
inc
addr16
jp
cwtl
bound
in
mov
sub
jbe
cwtl
jmp
dec
mov
gs
shll
cltd
sbb
in
lods
nop
jmp
cmp
push
cmpsl
negl
test
cld
mov
mov
rcrb
mov
pusha
je
cmp
mov
sbb
adc
xchg
lock
mov
inc
add
jmp
stos
jnp
pop
mov
jge
add
incb
fsubrl
push
xchg
dec
jne
push
adc
out
aad
and
shll
inc
pop
mov
adc
rorb
and
mov
sub
push
mov
pop
in
mov
scas
xchg
shr
fidivrl
adc
mov
jmp
in
mov
adc
xlat
test
out
loop
inc
sbb
cmp
xchg
adc
lret
scas
scas
xchg
inc
mov
fucompp
mov
jne
sbb
xchg
jp
pop
rorb
ss
lock
dec
jne
mov
sti
repz
out
stos
or
aam
lahf
outsl
sub
fdivrl
pop
inc
cmc
jae
pop
jg
call
jne
mov
imul
mov
loope
xchg
mov
es
out
rolb
jae
pop
negb
popa
xor
rclb
fidivrs
pop
scas
daa
xor
mov
push
or
sbb
xchg
lret
psubusb
xchg
fisubrl
ljmp
jp
lods
push
mov
jecxz
jnp
inc
hlt
into
push
add
out
jge
push
scas
push
xchg
mov
movsl
sbb
sahf
fidivs
pop
hlt
push
test
jbe
inc
inc
xor
lret
xor
or
cmpsl
popa
jne
inc
test
popf
repz
aas
fcmove
movsl
mov
data16
and
mov
fdiv
pop
jmp
rcll
sbb
and
adc
sar
repz
popf
mov
xchg
mov
cmpsl
js
hlt
in
aas
jp
mov
sub
cmp
sub
mov
mov
dec
adc
adc
out
push
div
pop
pop
push
in
inc
dec
ret
popa
xchg
inc
cld
sbb
stos
mov
mov
xchg
push
pop
stc
pusha
out
xchg
imul
sahf
fisttpll
lock
push
insb
mov
mov
or
movsl
add
hlt
mov
mov
cwtl
jno
outsb
gs
or
call
lahf
dec
les
aad
in
lods
test
cmp
inc
mov
lock
dec
xchg
sti
mov
jle
stc
or
push
inc
pop
ljmp
push
mov
cmp
dec
arpl
mov
dec
fildll
int
repz
notl
mov
dec
movsb
rcll
or
jp
mov
push
jne
scas
andb
sahf
add
in
sbb
xchg
mov
pop
pop
test
out
pop
iret
std
shll
popa
sahf
pop
clc
pusha
pop
out
test
mov
mov
ljmp
pop
sub
add
ljmp
and
or
jae
scas
and
push
push
ljmp
addr16
dec
pop
xchg
int3
dec
insb
jne
mov
mov
sub
cmp
cmpsl
leave
mov
sbb
sbb
xlat
jnp
cmpsl
pop
insl
in
mov
mov
mov
iret
sbb
in
mov
mov
into
js
xchg
ss
lahf
push
mov
push
pop
sbb
push
adc
imulb
jae
out
out
pop
sub
inc
outsl
in
jne
out
leave
mov
dec
fisubrl
mov
jmp
jge
adcb
fbstp
mov
loope
sub
pop
push
xchg
jno
mov
test
mov
adc
xchg
leave
mov
jl
lahf
repz
xor
xchg
jp
add
cmc
outsb
push
mull
lods
data16
outsl
stos
push
mov
jbe
loopne
in
xlat
lods
and
cs
int3
sub
mov
push
loop
aaa
subl
sbb
aam
push
jp
push
add
mov
fwait
cmpsl
adc
pop
and
clc
inc
lds
push
or
leave
jecxz
or
jns
shll
inc
sub
iret
scas
iret
add
mov
outsb
and
nop
bound
pop
pop
testb
mov
rcll
cmpsb
call
mov
sub
lea
movsl
jl
jl
je
jge
mov
mov
dec
hlt
fcomps
add
cmp
ss
test
adc
fnstenv
cmp
cmpsb
lcall
loope
pop
fld
dec
shl
popa
and
adc
lahf
inc
mov
cvttps2pi
roll
loop
inc
loopne
stos
add
sbb
pop
sahf
jp
es
xchg
jb
pop
ror
adc
subl
mov
sarb
cli
dec
fdivp
std
mov
or
cmpsl
or
push
subl
lahf
iret
rcll
push
loop
push
shr
push
and
cmpsl
adc
into
sbb
and
lods
fidivrl
inc
mov
ds
aaa
cwtl
test
in
arpl
out
sub
lret
pop
jmp
subb
aad
inc
stc
cmpsl
dec
sti
mov
jl
hlt
inc
insb
dec
scas
mov
dec
and
sbb
loopne
fisubrl
cmpsb
push
mov
jne
fildl
sub
call
mov
pop
sub
enter
cmp
leave
jns
sub
movsb
in
or
into
jns
cld
cmpsl
pop
in
test
hlt
mov
push
cmpsl
add
test
and
sbb
lret
pop
jg
mov
test
scas
sbb
adc
push
mov
sbb
add
pop
xor
rol
dec
dec
icebp
andb
mov
leave
jl
call
add
jle
ds
sbb
xor
xlat
cmp
fistps
rorl
gs
bound
sub
mov
fwait
fs
iret
jle
lods
inc
mov
stos
insb
in
lret
std
mov
add
repnz
pop
mov
into
out
mov
jno
out
test
or
in
fdivl
in
fnsave
in
cmpsl
cli
xchg
pop
cmp
inc
test
je
stos
mov
cmp
loope
dec
jnp
rcrb
dec
mov
fidivrs
inc
sbb
shl
sbb
or
pop
mov
movsl
pop
xchg
rolb
add
xchg
pop
inc
pusha
inc
mov
test
jno
arpl
dec
pop
fidivrl
and
fs
or
fwait
inc
sbb
or
pop
xlat
mov
repz
push
cmpsb
sahf
insl
xchg
lea
jle
push
sub
fcmovb
jae
testl
in
aas
das
or
pop
adc
sbb
pop
xor
mov
xchg
mov
imul
mov
mov
lods
push
imul
cld
pop
js
enter
cmp
je
lret
ljmp
icebp
pslld
inc
loopne
add
lret
mov
bound
push
jmp
out
sti
fmull
gs
mov
mov
and
notl
cld
outsb
sti
pop
movsb
xchg
mov
lahf
mov
pop
arpl
in
and
mov
out
jb
lods
sbb
dec
mov
int3
jb
mov
repz
rcrl
in
mov
cmpsb
out
dec
fs
add
add
jnp
dec
add
fdivp
mov
aas
or
test
jne
adc
cmp
push
and
test
imul
stos
xchg
out
insb
dec
sub
push
add
mov
popa
stos
shll
sub
adc
mov
in
fwait
or
jo
push
js
dec
stc
inc
ja
or
enter
mov
fcomps
fcoms
aas
or
dec
cmc
jle
jns
mov
inc
cmc
mov
xchg
jnp
xlat
aad
pextrw
addr16
xchg
loope
cld
add
aas
out
leave
ja
mov
jo
dec
xchg
inc
in
inc
fisttpl
push
out
fisttpll
mov
js
fninit
add
lret
xor
insl
enter
sbb
jmp
mov
xchg
repnz
mov
mov
xlat
jbe
mov
cli
inc
mov
and
inc
or
mov
mov
inc
adc
xchg
cmc
in
add
fmuls
inc
add
subl
scas
out
mov
ret
int3
push
fwait
adc
test
fwait
jge
loop
jecxz
lds
mov
cmp
xchg
add
insb
dec
repnz
push
inc
addb
sub
arpl
cmp
gs
and
cmpsl
or
inc
lods
cmc
shlb
pop
adc
pop
inc
leave
cld
imul
sub
cli
push
push
push
shld
cld
gs
push
lea
out
jae
nop
fidivs
push
lea
push
sbb
cmp
or
lock
in
out
jmp
outsb
divb
lret
jnp
les
or
nop
lcall
scas
negl
mov
cmp
fwait
inc
dec
aad
xor
jbe
test
push
scas
iret
into
fistl
repz
mov
bound
dec
sbb
jo
pop
cld
jo
sti
lock
inc
scas
xchg
jle
jl
xor
fstpt
and
cltd
enter
push
adc
xchg
andb
out
pop
bound
xor
push
insl
push
sti
or
xchg
dec
mov
fisttpll
nop
sbb
push
mov
data16
add
mov
fcoms
je
cltd
test
adc
fimuls
lods
and
push
sarb
mov
or
mov
je
repnz
jge
movsb
jno
pop
pop
dec
aaa
and
les
call
mov
mov
notb
xor
fcomi
mov
insl
je
ret
adc
js
push
lock
pushf
addr16
pop
mov
cmp
xchg
cmp
insb
into
adc
inc
aaa
sbb
stos
push
inc
cld
jge
cmp
fldenv
xor
mov
cmpsb
mov
jnp
imul
stos
int
loopne
xchg
test
push
data16
test
inc
mov
lods
shll
push
xor
adc
loop
xor
or
adc
cmpsl
pop
cmp
push
in
lahf
mov
mov
push
push
cwtl
jg
stc
fbstp
aad
dec
mov
or
mov
or
mov
in
stos
das
imul
dec
adc
mov
inc
pop
stos
add
cmp
cmp
push
outsb
add
aad
mov
or
jp
push
out
aas
shlb
out
jp
mov
orl
cmpsl
mov
sbb
fistpl
out
and
sbb
popf
mov
inc
mov
mov
dec
out
rolb
addr16
fs
jecxz
jno
subb
mov
aad
dec
xchg
xlat
mov
mov
mov
or
mov
call
fbld
les
jle
dec
lret
pop
mov
push
push
xchg
shll
stos
loop
pop
bound
pop
cli
jnp
call
sub
fwait
sbb
mov
ja
mov
test
dec
mov
dec
mov
push
pop
mov
mov
out
push
pusha
push
mov
ret
mov
dec
jecxz
test
sub
pop
push
dec
xchg
mov
and
lcall
fisttps
mov
cmovno
or
int3
jb
pop
pop
xchg
mov
mov
test
fildl
mov
popa
push
mulb
cmp
mov
rcll
fistpll
cltd
xor
adc
scas
mov
lds
jo
xorb
mov
insl
jbe
cwtl
xchg
xchg
sti
nop
push
mov
out
pop
push
lcall
pop
push
fldl
inc
shlb
cmp
call
cmp
mov
xor
mov
ret
into
adc
cltd
jle
push
add
pushf
rcrl
pop
xchg
pop
cmpb
mov
xor
mov
jo
gs
mov
in
sub
cwtl
cmp
add
outsl
cmp
mov
insb
and
stos
inc
add
iret
mov
and
negb
in
sarb
add
pop
jmp
fwait
in
sbb
jmp
nop
or
in
jg
add
jnp
movsb
mov
jg
dec
or
orps
sbb
mov
adc
cwtl
negb
pop
or
mov
mov
cmc
scas
push
repz
mov
inc
inc
sbb
test
or
nop
imul
add
xchg
les
or
cld
and
dec
pop
mov
adc
nop
dec
jb
insb
xor
or
or
popa
xchg
fmul
adc
enter
dec
mov
mov
clc
dec
lahf
aad
sub
fidivl
adc
push
dec
das
sub
xor
push
mov
out
fs
stos
fwait
mov
xor
stos
mov
out
call
cmpsb
imulb
or
and
insl
popl
or
enter
fidivrs
mov
aam
ret
daa
outsb
or
rcll
mov
add
jne
mov
cmp
dec
cmp
sbb
lea
push
add
mul
hlt
mov
or
cltd
test
mov
jns,pn
sarb
icebp
mov
das
mov
jmp
or
popf
mov
pop
ja
out
test
mov
mov
pop
dec
scas
dec
sub
or
jecxz
sbb
es
aam
mov
lret
xchg
enter
cmp
adc
mov
mov
mov
into
mov
jns
xchg
ljmp
mov
fisttpl
push
andb
push
sub
mov
loop
icebp
sub
pop
orl
ja
fbstp
das
add
mov
jp
cld
pop
push
ljmp
sbb
jns
or
adc
pop
mov
aaa
xor
sub
jg
sub
in
pop
pop
xor
lret
pop
xchg
dec
gs
lret
adc
loop
mov
inc
movsl
in
mov
and
xor
lea
insb
cmp
in
test
lds
pop
sbb
jo
lock
je
dec
fwait
je
cli
xchg
add
inc
xlat
cltd
out
push
stos
fs
iret
lea
loop
mov
test
js
mov
out
scas
nop
rcr
fidivs
lods
sub
not
push
mov
gs
pop
sbb
fnstcw
neg
loopne
adcl
jg
xchg
loop
xchg
pop
hlt
push
xor
pop
leave
je
inc
jge
dec
mov
cmp
ss
loopne
dec
les
sub
add
mov
lcall
jmp
in
pushf
pushf
xchg
xchg
into
daa
jns
in
pop
divl
int3
dec
jne
and
fnstcw
and
adc
mov
inc
mov
jbe
cs
mov
adc
jnp
adc
mov
jle
imul
mov
scas
imul
std
adc
ljmp
shll
sbb
shrl
xor
out
pop
mov
iret
push
andl
adc
or
add
sbb
jge
enter
popf
scas
imul
cmc
lods
or
jne
negl
shr
jmp
divl
mul
ret
adcb
fidivrs
xor
add
ljmp
daa
mov
bound
outsl
mov
mov
or
and
test
cld
mov
jle
add
adcl
jmp
mov
ficoms
sub
je
sub
dec
repnz
mov
and
ret
xchg
fwait
test
icebp
xchg
push
dec
mov
outsl
xor
mov
mov
stos
inc
addr16
add
ret
add
subl
rcl
jecxz
insb
jno
xorb
sbb
or
insl
push
cmp
adc
mov
pop
pop
lods
imul
out
cmp
push
es
shlb
inc
xor
and
add
push
js
adc
imul
adc
jno
mov
cmpb
add
mov
push
pushf
adc
shr
pop
stos
mov
stc
cmp
enter
and
push
mov
fs
and
pop
add
dec
fcmovne
test
mov
lahf
xlat
rclb
add
sub
addr16
into
push
push
outsb
rolb
in
pop
cmp
cld
push
push
push
push
aad
out
aam
xchg
mov
std
pushl
push
scas
mov
push
and
xorl
insb
repz
and
cltd
xor
or
cmp
jl
test
xchg
fdivl
fcmovu
int3
test
inc
lds
or
leave
dec
mov
mov
sahf
or
sbb
pop
fmuls
fimuls
insl
leave
sub
cs
cs
xchg
in
pop
xchg
ficoml
cmc
mov
rolb
insb
pop
movsb
xchg
add
mov
pop
lret
inc
cmp
mov
push
mov
inc
mov
inc
data16
or
pusha
aaa
test
pop
sahf
xchg
lods
cld
add
mov
into
out
shrl
mov
arpl
add
loop
mov
jmp
dec
fisttpll
mulb
mov
or
shll
rolb
cmp
xchg
shufps
lcall
xor
ljmp
and
mov
lods
out
call
nop
push
jg
cmpsl
mov
jbe
in
jmp
pop
lcall
pop
mov
sbb
bound
pop
push
xlat
and
nop
int
aad
dec
jl
stos
cmp
mov
rcl
pushl
xchg
stos
icebp
jb
pop
sub
jne
cwtl
or
push
insb
fnstcw
jmp
xchg
sbbb
mov
jbe
pop
inc
mov
add
popf
cmp
and
pop
shll
lea
stos
stc
push
aas
xchg
inc
cltd
pop
jmp
push
lods
dec
stos
icebp
sbb
xchg
inc
pop
dec
movsl
in
repz
sarl
mov
jns
push
psrlq
sahf
mov
adc
mov
je
ljmp
sbb
popf
xchg
cmp
loope
lahf
js
dec
nop
mov
inc
cmp
les
in
mul
fiaddl
jl
call
lcall
xchg
stos
sarb
mov
iret
dec
jno
lds
cwtl
dec
mov
xor
adc
dec
mov
xor
fs
aam
jp
test
cmpsb
icebp
mov
add
mov
push
cmp
fwait
popa
jb
ds
icebp
sub
lret
jns
ror
je
sahf
xor
mov
jae
mov
leave
mov
jae
punpckhdq
and
xchg
jmp
fcmovnbe
leave
movsb
ret
lret
mov
push
out
ret
jge
adc
mulb
mov
cld
call
sbb
es
sbb
add
and
shr
jb
in
nop
and
sbb
dec
jbe
or
xor
mov
lock
jne
xchg
push
cwtl
cs
clc
loop
cltd
xchg
rolb
hlt
push
xchg
pop
in
jecxz
hlt
mov
sahf
inc
setbe
popa
xchg
pop
xchg
adc
adc
popf
and
sub
cmp
xlat
in
iret
sub
cli
call
dec
mov
push
jge
mov
jb
pop
inc
ffree
cmp
icebp
sti
sub
inc
lret
dec
lods
xor
and
dec
dec
mov
test
jl
mov
sti
cld
insb
pop
xor
icebp
add
dec
push
xchg
notb
and
push
xor
inc
js
push
sbb
fcoms
test
or
add
xchg
mov
pop
pusha
xlat
jl
cltd
out
lret
mov
sbb
sbb
test
ret
dec
popa
sbb
sbb
dec
in
iret
inc
xor
cmpsl
adc
pop
xor
int
pop
mov
push
cwtl
leave
jecxz
into
pusha
or
cmp
xor
mov
jl
dec
lcall
xor
lods
jnp
mov
and
insl
dec
idiv
inc
js
dec
add
push
adc
dec
sbb
sbb
or
adc
inc
cltd
and
xor
inc
fwait
out
pop
insb
jg
std
pop
jno
sbbb
jmp
xchg
dec
dec
sub
outsl
pop
pop
clc
imul
ljmp
stos
inc
lods
inc
loope
jmp
insl
or
inc
movsl
fnstcw
xchg
mov
fdivl
loope
ja
dec
push
xor
push
repz
mov
outsb
cmp
and
test
movsb
mov
jne
and
pusha
jae
mov
lahf
or
lret
sbb
sub
push
mov
add
jg
in
into
jle
and
jmp
ret
stos
jmp
icebp
dec
sub
xchg
inc
js
ret
sbb
test
dec
popf
cmpsb
shlb
mov
lea
push
mov
sti
mov
leave
inc
inc
in
xor
cmc
push
lret
divl
xchg
mov
fsubrl
inc
rcrl
cltd
aas
iret
push
inc
inc
mov
adc
shr
or
push
pusha
mov
ds
stos
js
das
outsl
sub
xchg
add
dec
inc
loopne
in
cwtl
repz
adc
or
fcoms
lret
jnp
add
pop
orl
loop
test
gs
cmpsl
mov
and
mov
ret
cmp
pop
mov
add
xlat
adc
dec
dec
or
movsl
lods
out
loop
jb
pop
pop
mov
in
xchg
jnp
mov
pop
aaa
in
scas
adc
mov
cmpsl
out
bnd
dec
push
mov
leave
cmc
jne
sub
jb
in
iret
and
adc
dec
mov
and
jecxz
out
int3
push
sub
pop
idivl
test
push
mov
loopne
and
and
popa
fadd
inc
adc
dec
cmp
sub
cmp
mov
and
xchg
or
push
pop
mov
xor
xor
or
jmp
adc
pop
es
push
call
push
dec
pop
adc
lahf
mov
or
mov
popa
cld
testb
shr
sbb
mov
cmc
mov
lock
or
aad
sub
das
jbe
mov
cmp
mov
push
lods
icebp
jno
mov
xchg
enter
xor
cld
mov
mov
test
and
fs
xchg
and
mov
cmpsb
inc
sub
push
push
lcall
mov
je
lods
xchg
test
das
dec
rolb
in
scas
pop
sub
sub
mov
pop
cmpsl
pop
fdiv
add
aaa
cwtl
mov
je
jl
testb
outsl
loope
hlt
xor
cmc
adc
xchg
das
push
dec
jb
dec
in
cmp
sub
sub
and
sub
fdivs
ds
nop
and
cmp
jl
push
gs
test
adc
imul
rcrb
adc
pushl
ja
lds
test
mov
push
inc
pop
dec
push
cmp
inc
insb
loope
adc
mov
xchg
xadd
inc
cmp
cmp
xchg
push
arpl
fnstcw
xor
dec
insb
fcomi
ds
mov
push
add
dec
cli
bound
push
mov
aam
fldcw
jge
orl
push
xchg
aad
ja
add
mov
lret
inc
pop
push
add
push
movsl
inc
push
xor
enter
add
add
daa
mov
mov
out
pop
cmc
in
mov
xchg
and
out
enter
mov
mov
ljmp
jp
add
das
xor
mov
xor
insl
jno
test
inc
stos
xchg
pop
stos
iret
imul
jge
loopne
arpl
negl
pushf
repz
test
xlat
xor
mov
rorl
sub
test
movsl
jo
mov
mov
pop
sbbl
sbbl
repz
cli
cmpsb
cmp
inc
push
popf
jg
stos
loopne
icebp
cmp
jmp
cmp
xchg
jg
imul
sbb
mov
inc
and
fisubrs
outsl
jne
ss
jmp
stos
and
movsb
cmpsb
in
test
push
test
daa
mov
cltd
nop
sbb
addb
outsb
inc
stc
stc
mov
ror
mov
or
add
ljmp
aas
pushf
sub
int3
rcrb
mov
movsb
push
mov
mov
or
lahf
lret
jp
mov
repz
push
movsl
outsl
inc
nop
cmp
clc
adc
frstpm(287
or
mov
mov
pusha
pop
repz
loop
mov
test
xchg
sub
xchg
adc
ds
shl
ret
cmp
and
cltd
std
push
test
ss
int3
cmp
notl
clc
sarl
dec
cmp
mov
dec
mov
ficoml
and
fs
lcall
movsl
add
mov
xchg
sub
or
in
adc
cli
fcompl
cmpsb
loope
shlb
xchg
nop
js
sahf
inc
xchg
push
xchg
push
mov
aad
jmp
fidivrs
insl
sub
push
inc
cmp
test
add
mov
jno
xchg
shrb
xchg
dec
insb
jne
pop
gs
jmp
lods
lods
jo
dec
sbb
inc
and
mov
in
stos
adc
sahf
iret
je
xor
js
mov
mov
mov
sub
sahf
mov
mov
and
and
or
inc
loope
cmc
dec
sub
lock
inc
shl
xor
loope
push
xor
pop
adc
push
or
mov
call
pop
int3
dec
in
mov
xchg
incb
or
ljmp
test
xchg
jecxz
mov
xor
movsl
into
scas
and
je
add
sbb
sbbl
push
std
daa
xor
mov
adc
cld
imulb
push
leave
jae
shrb
push
mov
lahf
roll
jne
and
addr16
lahf
addr16
pop
or
pop
imul
mov
faddl
jno
adc
mov
lea
adc
or
inc
inc
adc
aam
addb
insb
lds
lret
mov
mov
adc
sub
arpl
xchg
jns
or
xchg
insl
cmpsl
xchg
in
test
fidivs
enter
xor
jo
lods
mov
cmp
in
enter
lods
nop
lcall
sarl
mov
or
mov
pop
mov
or
pop
sarl
mov
mov
add
ds
mov
push
or
xchg
inc
aas
cmp
insb
adc
xor
push
clc
inc
rorl
xor
mov
out
mov
jecxz
das
jg
mov
out
sub
cmp
scas
pushf
insl
movsb
fisubrs
ljmp
sbb
out
ljmp
fiadds
stos
addr16
insl
imul
mov
insb
and
call
loope
fistpll
jns
mov
cmp
cmp
incl
lcall
addr16
pop
and
dec
gs
iret
adc
xchg
lea
fcomi
sub
nop
popa
sbb
hlt
pop
loopne
imul
mov
in
pushf
sbb
mov
sub
sbb
outsl
aam
sahf
leave
or
sub
popa
and
inc
loopne
xlat
cmpsb
stc
jno
push
enter
push
mov
repz
js
mov
xchg
sbb
cmc
or
into
std
cmpsl
jp
jbe
stos
icebp
push
out
mov
cwtl
dec
loopne
cmp
sbb
mov
mov
pop
outsb
cmpsl
cmc
pop
nop
push
cmp
decl
sbb
push
jns
leave
sub
adc
pop
jle
repz
popa
xchg
outsl
int3
movsl
ljmp
jp
fdivl
lcall
fcoms
cmp
lods
nop
add
lret
sub
stc
xchg
jle
xor
std
data16
fnstsw
inc
popa
cltd
jno
lahf
leave
mov
sahf
pop
mov
pop
cmp
lahf
sub
das
daa
ss
dec
pop
shll
lahf
pop
lods
xor
stos
test
cmp
dec
lahf
and
pop
subl
push
je
stc
das
mov
jmp
in
mov
mov
in
or
push
cld
add
call
xchg
or
rcrl
cmp
je
movsl
inc
pop
adc
mov
pop
and
daa
xchg
in
jbe
jno
int
lea
and
pop
push
cs
in
nop
fcoms
cmp
out
leave
push
push
call
mov
mov
xchg
mov
imul
push
outsb
sar
test
sbb
pop
or
pop
rorl
add
add
aad
xchg
mov
outsl
stos
fiadds
add
scas
add
in
mov
daa
sub
enter
sbb
sbb
lods
mov
orl
imul
daa
push
js
outsb
cmpsb
jne
lods
mov
sbb
adcb
mov
or
or
fwait
dec
xchg
mov
cmp
cmpsb
sbb
dec
scas
jo
cld
push
dec
mov
insl
clc
icebp
lods
jnp
test
loopne
mov
lcall
jns
xor
fnstsw
pcmpgtb
cwtl
cld
sbb
or
ljmp
xchg
sti
sbb
lds
psubusb
jo
adc
mov
shrl
andl
push
push
mov
mov
inc
pop
xchg
mov
mov
and
sbb
jae
add
xchg
rcll
icebp
and
es
adc
xchg
outsb
jl
cmp
mov
mov
mov
xchg
out
subb
mov
push
mov
fsubrs
cmp
mov
ret
lds
inc
cmp
or
aad
sbb
mov
sbb
adc
stc
cld
xor
int
lahf
lods
insb
mov
push
mov
ljmp
lret
push
aaa
out
fldt
std
or
add
inc
cwtl
roll
cli
cmp
das
jns
pop
outsl
cmpsl
push
inc
addr16
movzbl
xchg
fmuls
pop
out
push
dec
sub
inc
in
dec
inc
inc
mov
add
pop
push
pop
cmc
inc
push
bnd
jmp
xchg
inc
lret
push
out
dec
pusha
dec
xchg
pop
mov
mov
sarl
dec
mov
push
inc
dec
inc
pcmpeqw
fdivl
push
lcall
adc
mov
cmp
mov
mov
xabort
leave
xchg
fucomi
xor
xchg
pop
dec
mov
add
dec
pop
or
push
or
xor
ja
sbb
add
jbe
jo
mov
adc
push
cld
inc
lret
fsubl
mov
cwtl
in
addr16
mov
movsb
fcmovnbe
dec
push
mov
popa
ljmp
add
dec
xor
inc
mov
sub
ret
xor
fsubs
xchg
pop
add
mov
jae
adc
cs
jnp
stos
arpl
mov
lods
jle
arpl
jno
mov
out
mov
pop
sahf
jecxz
mov
out
sub
dec
lods
cmpl
outsb
popf
mov
inc
imul
jb
rolb
lret
movsb
inc
xchg
xchg
fidivrl
push
xchg
sbb
push
std
pop
fdivr
jno
jae
dec
roll
cmp
leave
repnz
pop
insb
inc
cmc
orb
stc
insl
sbb
insb
inc
stos
inc
inc
addr16
pushf
xchg
sub
bound
mov
in
pop
imul
movsb
lret
mov
inc
out
loop
ror
sub
rolb
mov
cwtl
sub
or
pop
std
shrb
out
dec
mov
mov
push
and
and
lock
jl
test
xor
sub
cli
stc
mov
ret
imul
add
ret
cmp
lock
inc
cmp
call
sub
jb
dec
add
mov
push
cltd
mov
pusha
cmp
sti
sbb
scas
pop
addr16
cs
pop
roll
cmp
stc
lcall
test
movsb
aaa
aaa
xor
inc
xchg
pop
frstor
sub
adc
repz
mov
stos
and
and
mov
adc
fsub
rcll
out
lods
neg
sbb
fisttps
aad
or
outsb
dec
popf
push
dec
cli
cltd
daa
or
test
mov
test
sahf
xchg
repz
dec
arpl
repz
jb
dec
daa
push
insb
add
xor
jl
cmp
fdivs
cmpsb
push
mov
mov
flds
adc
cmp
dec
cmpl
and
mov
adc
push
ss
inc
gs
sbb
pop
rclb
and
jbe
add
add
imul
es
cmp
jecxz
xchg
pop
aam
popa
dec
or
inc
stos
jmp
in
mov
sti
cmpsb
repnz
dec
mov
mov
pop
and
inc
fcompl
sub
sub
movsl
jno
lahf
test
lods
gs
icebp
jb
out
and
ret
bound
sbbl
sbb
repz
les
les
xlat
aaa
inc
lret
mov
movsl
aaa
mov
sbb
pop
les
pusha
adc
mov
int
mov
adc
sti
pop
cwtl
xlat
mov
int
cmc
insl
mov
jnp
negl
movsb
adc
add
pop
ss
in
mov
ss
pushf
jb
and
rorb
xchg
pop
sub
shlb
mov
mov
and
jb
push
lea
dec
aas
in
mov
cmpsb
mov
jecxz
adc
inc
pop
stos
mov
inc
inc
pop
mov
dec
push
or
lcall
sub
lods
sbb
fcomps
jo
gs
mov
std
mov
addr16
jge
jo
mov
push
pop
jp
lret
add
jns
ja
fs
sub
ds
sub
mov
pop
mov
into
aam
in
jecxz
or
cmp
sub
popa
cmc
pop
ret
pop
mov
inc
out
jmp
or
popa
stc
push
aad
add
mov
xor
fildl
cmp
dec
push
adc
sub
mov
ret
mov
sub
cmp
subl
mov
lcall
enter
leave
sub
push
mov
pop
bound
jae
pushf
cwtd
int
out
jno
addr16
aas
or
dec
mov
jae
rorl
dec
add
dec
int
shlb
xchg
repz
adc
fwait
mov
icebp
in
js
fcomps
sbb
and
or
xlat
in
cmp
jae
jbe
mull
imul
stos
cmp
mov
subb
mov
jbe
fbstp
in
sbb
js
push
outsl
add
push
imul
push
shrl
shlb
cmp
gs
pop
fstpt
adc
cmpsb
cwtl
mov
sahf
imul
jnp
ret
hlt
sarb
popf
scas
mov
jmp
mov
lock
and
in
fs
imul
lcall
inc
in
jnp
xor
mov
pop
cwtl
out
int3
lret
movsb
add
hlt
mov
lds
pop
mov
push
add
movsb
cmp
push
mov
mov
es
pop
and
xchg
lret
or
fildl
fstpl
jne
jle
aaa
cmpsb
rcr
cmp
add
fildll
fsubr
std
cmp
xchg
inc
insl
into
icebp
mov
js
mov
cmpsl
inc
lock
fcomp
mov
lahf
pop
pop
mov
mov
das
dec
add
test
xor
in
jb
push
jmp
adc
fldl
or
lcall
add
nop
stos
add
mov
dec
repz
push
jl
push
cmp
imul
repnz
jo
mov
fistpll
add
xchg
and
mov
fidivs
sti
pop
sbb
or
sub
dec
mov
aam
leave
in
fstp
add
enter
jno
and
or
cltd
repz
jge
fimuls
ljmp
push
or
pop
pop
scas
sti
pop
mov
pop
sbb
mov
pop
icebp
mov
fnstsw
nop
movsb
and
pop
jle
stc
leave
cmp
mov
inc
pop
int
pop
mov
push
sub
rcll
mov
xchg
mov
int3
push
adc
lock
mov
das
ss
inc
xchg
gs
rcll
mov
cmp
dec
imul
and
hlt
xlat
icebp
mov
mov
push
xchg
add
mov
pop
cmc
dec
dec
adc
mov
mov
jecxz
movsl
fdivs
push
adc
shlb
mov
pop
pop
in
hlt
lods
lret
stos
leave
in
and
push
sub
out
shl
push
psadbw
jge
lods
hlt
das
mov
nop
push
dec
in
lods
les
xchg
jnp
je
xchg
pop
shr
divb
xchg
xor
ds
inc
jb
mov
out
lea
or
js
xchg
xchg
pop
test
ja
std
add
cmp
popa
xchg
neg
push
inc
mov
xchg
rcll
jnp
sbb
cmp
pop
adc
lahf
les
or
mov
hlt
lret
push
out
fwait
outsl
dec
aad
loope
mov
jns
pop
sbb
sti
or
pop
loope
push
cmpsb
clc
addb
inc
sub
insb
loope
movsl
adc
or
pop
xchg
push
scas
sub
aad
std
or
pop
push
inc
int3
mov
push
push
mov
push
push
pushw
movsb
jmp
jb
nop
pushf
xchg
xchg
dec
stos
jge
and
bound
jns
arpl
mov
inc
jne
push
or
fs
in
arpl
jp
jb
push
test
jmp
and
icebp
mov
mov
adc
mov
imul
addr16
hlt
bound
decl
jecxz
loop
push
cmp
jge
push
ljmp
mov
lcall
popf
sub
pop
fwait
cmc
stos
xor
xchg
mov
ja
rolb
pusha
icebp
mov
and
xchg
outsl
sub
adc
jp
cmp
cmp
pop
sub
inc
int
and
scas
push
mov
push
pop
inc
out
outsl
test
decl
and
sti
and
mov
lret
push
das
add
jp
push
pop
stc
lock
push
sahf
mov
mov
test
mov
fwait
xorb
inc
stc
dec
xchg
mov
in
lret
pop
cmp
xlat
jge
aad
jns
movsb
push
and
cli
mov
jp
jo
mov
add
push
or
cli
push
mov
pop
iret
mov
iret
add
fidivs
arpl
pop
push
mov
push
clc
das
mov
sbb
sbb
inc
pop
mov
rol
sbb
cmpsb
or
popa
push
mov
out
add
inc
jno
movsl
mov
fsub
xchg
sbb
cmp
xchg
outsb
out
lods
cmpsb
or
fmull
dec
fs
and
ss
scas
dec
mov
push
les
jecxz
mov
pushf
ficomps
es
sti
jmp
test
sti
inc
rorl
loopne
lock
dec
xchg
mov
mov
lret
repz
jp
sbb
mov
cs
lods
ror
ds
lock
sub
mov
xor
sub
jns
sbb
jne
jg
add
push
mov
adcl
xor
cmp
dec
repnz
ja
adc
nop
cwtl
mov
mov
add
cmp
imul
mov
lock
in
adc
xor
add
jge
enter
xchg
shrl
ljmp
push
or
jle
jmp
jp
cmp
cmp
ja
loope
lock
fwait
ljmp
int3
stos
push
ret
adc
sub
dec
and
rol
ret
xchg
mov
repnz
or
sbb
mov
add
cmp
lods
addl
mov
lods
sbb
adc
add
mov
jp
insb
scas
mov
ret
pushf
xchg
cmp
cltd
sub
int
pop
or
pop
test
pop
mov
gs
cmp
lcall
xchg
out
popf
push
pop
mov
sbb
movl
out
lcall
into
add
mov
in
fidivrs
mov
mov
popf
das
add
xor
pop
and
gs
mov
dec
decl
aam
stos
inc
xchg
xchg
dec
pop
pushf
and
jl,pt
dec
push
xor
imul
adc
arpl
out
jp
rcrl
scas
sbb
iret
adc
lods
in
pop
fsubrs
jb
jbe
xor
sub
in
mov
pusha
xchg
dec
xor
aad
adc
push
adc
cli
int3
popf
pop
and
gs
or
outsb
mov
xlat
lods
pop
cmp
fwait
imul
pop
lock
popa
imul
push
mov
stos
shll
mov
flds
push
or
fs
fcompl
stos
and
xchg
stos
test
push
inc
pop
cwtl
dec
js
sahf
rolb
jle
test
jl
les
sbb
dec
xor
cmp
fldt
lea
dec
push
mov
mov
icebp
and
dec
dec
jp
inc
aaa
jg
jge
inc
sarb
add
push
and
cmp
fidivs
rorb
pop
stc
lret
loop
push
out
stos
adc
aam
popa
xchg
adc
and
je
and
lret
dec
cld
in
xor
sbb
and
fwait
push
xor
sarb
in
iret
jae
mov
fistpl
xor
or
out
jb
cld
bound
sbb
test
push
jno
sub
in
out
pop
test
mov
add
sbb
hlt
dec
cmp
pop
mov
sub
push
pop
dec
xchg
lock
adcl
mov
cmc
adc
or
xorb
mov
xor
sub
sub
repnz
pop
xchg
and
push
scas
dec
xchg
and
mov
iret
daa
scas
dec
movsb
jae
mov
loope
es
int3
lock
push
es
mov
leave
mov
in
mov
pop
fadd
adc
cmp
cmp
ret
and
or
incl
sbb
dec
mov
mov
xor
fisttpl
pop
jle
xchg
mov
cmp
jae
inc
int3
cmpsb
jns
xchg
dec
mov
lahf
mov
mov
xchg
dec
cmp
jo
cmpsb
or
in
cmp
sbb
mull
leave
repnz
cwtl
adc
mov
sub
into
sbb
inc
xchg
add
shl
je
xchg
push
jne
daa
in
ljmp
push
cmp
dec
ret
fistpl
fists
pusha
mov
jmp
mov
xor
sub
stos
adc
nop
push
add
push
sub
outsl
popa
mov
jns
lret
bound
sbb
push
sbb
cwtl
test
mov
and
jbe
xchg
cmp
adc
arpl
into
push
mov
xchg
lods
cmp
pop
ret
sbbl
or
fidivs
xchg
stc
or
js
push
push
xor
xchg
repz
lods
push
ds
stos
stos
and
xchg
loop
aad
inc
mov
mov
ss
push
or
cmpsl
xchg
js
mov
adc
stc
mov
imul
xchg
cmp
in
mov
xlat
cs
dec
aas
ljmp
rorl
addr16
xchg
vpmullw
imul
mov
mov
pop
or
scas
mov
ss
xorb
pop
imul
jnp
jmp
adc
pushf
jg
pushf
clc
and
shrb
fwait
mov
pop
mov
adc
shlb
cmp
cli
sbb
loop
nop
push
pop
ret
dec
dec
and
adc
jbe
cli
insl
xcrypt-cfb
cmpsl
mov
shll
mov
aaa
jne
and
add
iret
mov
ljmp
xorb
ss
in
pushf
dec
mov
popa
rcrl
dec
aaa
push
les
aad
fmull
mov
dec
pop
dec
cmpsl
sbb
xor
mov
mov
pusha
or
stos
loope
sti
mov
faddl
jg
int3
fwait
pop
dec
lods
aaa
ljmp
pushf
out
ret
cli
xchg
aaa
pop
test
xlat
xor
out
clc
pop
jb
or
neg
cwtl
dec
sbb
and
sub
add
mov
repz
mov
hlt
mov
out
or
into
ficoml
or
cltd
in
leave
sub
cmp
int
les
sub
pop
sbb
xchg
call
lods
jp
mov
out
ret
and
lret
sub
sbb
lcall
fcoml
cmp
push
cmp
cltd
cltd
iret
pop
in
dec
xchg
inc
jp
mov
arpl
popf
or
jp
movsb
lret
jnp
out
mov
add
jmp
mov
or
rol
xchg
push
cltd
xlat
or
push
icebp
jp
mov
orl
dec
cltd
pop
pop
and
icebp
mov
cmc
ss
xchg
outsb
xor
cli
ret
fisttpl
bt
add
cltd
adc
mov
push
dec
pop
fmulp
outsb
fcomps
clc
jnp
ss
aaa
inc
cmc
stc
stos
loope
dec
mov
add
sub
push
fwait
jge
pop
in
mulps
ljmp
dec
fs
or
mov
mov
jo
in
jge
cli
mov
pop
ds
jl
lret
jmp
lea
dec
out
aas
mov
addr16
fnsave
ror
roll
mov
and
shr
pushf
mov
xor
arpl
leave
inc
xor
pop
cmpsb
sub
rcl
repnz
dec
cmp
and
fisubs
enter
adc
dec
cli
adc
lods
fists
mov
int
sub
sbbb
rorl
adc
into
sar
mov
mov
xchg
add
divb
lret
inc
jb
xor
aaa
shrb
mull
movsl
add
daa
dec
mov
int3
shlb
out
xchg
ss
daa
mov
add
sub
mov
jmp
xchg
mov
test
fldcw
pop
add
pop
mov
sub
xlat
stc
dec
sub
popf
adc
fsub
mov
test
notb
inc
stc
cs
cmp
fnsave
pop
ja
mov
sahf
fidivrs
push
cmp
jge
data16
sub
xchg
xchg
push
fistpll
mov
jl
cmp
scas
pop
sbb
ljmp
add
mov
cmpl
mov
daa
xchg
pop
push
test
pushf
dec
jbe,pn
sub
add
andl
mov
fdivs
inc
inc
lods
push
pusha
sub
push
xchg
ljmp
and
daa
test
in
int
das
and
push
outsb
xchg
fstp
decl
pushw
sbb
xor
ja
add
js
add
iret
iret
clc
push
inc
cmpsb
ficompl
mov
fs
dec
jg
out
leave
aaa
orb
inc
stos
sbb
lock
stos
ja
stc
pop
jp,pt
in
shll
in
in
leave
popf
pop
popa
mov
imul
repnz
cmp
dec
cmpsl
fcompl
xor
int
pushf
cmp
cmpsb
jecxz
fucom
mulb
jo
int3
mov
fucomp
bound
sarl
and
pop
int3
out
jne
ja
fildll
fisttpll
mov
daa
xor
jno
cmpsl
add
ficoms
jecxz
push
sbb
out
loopne
push
mov
mov
jmp
mov
fdivrp
stos
mov
and
and
flds
lods
and
xchg
push
sarl
dec
into
out
daa
sbb
xor
stos
mov
dec
inc
cld
test
dec
mov
mov
hlt
ret
sub
mov
xchg
lods
cld
scas
jmp
mov
inc
push
or
sbb
addr16
or
arpl
rol
loop
sub
xrelease
cmp
mov
add
in
sub
push
cs
inc
cmp
sub
add
repnz
pop
fwait
push
test
mov
gs
or
lods
test
mov
dec
xor
test
push
jl
adc
add
mov
sti
iret
inc
hlt
dec
scas
setl
inc
add
add
es
mov
addr16
in
cmpsb
out
xor
sub
xchg
and
inc
mov
test
jge
dec
bound
mov
jb
in
sti
lret
scas
into
mov
andl
cmp
shll
test
sbb
push
addb
mov
jmp
add
mov
mov
add
fsubrl
inc
imull
pop
xchg
in
rol
jle
out
dec
add
add
jge
xor
mov
or
sahf
lret
add
or
jmp
cmpsb
xchg
add
xchg
sbb
lods
add
in
clc
or
and
das
mov
jb
xchg
cwtl
negl
cmp
xor
inc
std
mov
inc
in
xor
jge
jl
sub
jge
in
or
jecxz
add
jnp
insl
pop
cmp
push
les
mov
dec
fwait
scas
jno
mov
es
xchg
cli
pop
pop
and
arpl
xchg
jbe
push
xor
cmpsb
popf
lret
mov
pop
jl
cld
xor
mov
cmp
test
fldt
jb
lcall
dec
add
or
mov
or
cmp
add
inc
sub
dec
stos
out
or
jle
aad
fldt
popa
int
cwtl
jne
es
fldenv
mov
inc
cmpsb
jne
in
in
into
adc
stc
cwtl
fidivl
test
jno
pop
call
lret
lods
out
xchg
sub
sti
or
out
ret
push
mov
or
mov
mov
pop
mov
dec
push
iret
scas
std
mov
inc
arpl
add
push
mov
jns
out
lock
jp
cmp
ss
popa
xchg
dec
call
mov
lret
stos
fistpl
jns
xor
sub
sbb
sub
lds
inc
lods
call
xlat
clc
in
lcall
movb
push
cmp
fisttps
out
add
push
or
test
imul
scas
test
pop
pop
inc
inc
clts
pop
mov
pop
pop
xchg
jmp
pop
add
cmpb
xchg
ds
shll
idivb
or
outsl
dec
cmpsl
cmp
insb
adc
push
jne
les
leave
jno
pop
pop
mov
mov
iret
out
or
xor
xchg
pushf
mov
jmp
hlt
loop
outsl
test
aad
dec
ret
sbb
test
pshufw
test
inc
jb
sbb
xchg
xor
sahf
mov
fistpll
fidivs
pusha
inc
dec
nop
pop
adc
sub
xor
push
sbb
add
mov
push
hlt
jbe
pop
daa
adc
push
clc
or
repz
mov
scas
das
jle
mov
pop
push
add
push
fistps
stos
call
and
mov
arpl
clc
shl
or
movsl
fs
mov
xchg
aaa
int3
jmp
insb
sub
push
push
imul
dec
je
ret
insl
mov
scas
in
push
mov
push
sbb
mov
add
and
xor
mov
fsubl
test
stc
unpckhps
imul
xchg
add
xchg
shl
dec
mov
notb
push
cmc
fldt
push
pop
lea
pop
and
icebp
xor
xor
into
movsl
in
imul
mov
test
inc
dec
jg
push
jecxz
loopne
pop
mov
cmc
pop
loop
lds
adc
or
ljmp
mov
push
int3
mov
loopne
push
rolb
fnstsw
or
sub
mov
stos
jle
lcall
mov
lret
jno
hlt
jecxz
aad
lahf
jb
inc
adc
jne
mov
cmp
aam
and
subb
xor
sub
add
cmp
push
fstpl
xor
mov
inc
ljmp
inc
mov
pushf
dec
sbbb
int3
sbb
and
push
lock
cwtl
cmovnp
adc
test
lahf
popf
fnstcw
enter
lret
sub
xlat
repz
add
mov
gs
pop
mov
sub
test
sub
js
mov
repnz
cli
mov
out
sbb
adc
outsl
lods
lock
inc
jbe
js
call
mov
bound
push
ss
push
in
icebp
cmp
faddl
xchg
adcb
push
mov
jp
inc
loop
fisubs
sarl
or
outsb
popf
and
cmp
test
and
mov
dec
jmp
fsubs
mov
mov
pop
ljmp
jbe
in
mov
and
and
pop
xor
xchg
add
fcoms
push
xchg
or
shlb
fldl
xchg
out
mov
sub
cmp
mov
mov
inc
call
jg
push
out
adc
adc
add
mov
insl
fcoms
ss
sbbl
rcr
les
lret
mov
xchg
loop
push
aas
mov
dec
outsb
jg
in
jl
pop
ds
inc
xchg
cld
shrl
js
lret
and
outsl
dec
lds
mov
add
jp
cmc
sbb
loope
ficoml
jne
addr16
inc
adc
jg
mov
dec
mov
iret
ljmp
xchg
mov
inc
push
jbe
seto
dec
fwait
les
dec
push
xor
lret
cmpl
pop
inc
mov
lds
outsb
mov
pop
pusha
mov
test
sbb
mov
repz
mov
xchg
mov
repz
and
push
je
mov
rcll
loop
loop
iret
fsubp
pop
sub
inc
dec
sbb
aam
dec
mov
jge
lret
lahf
loopne
jnp
outsl
mov
lret
aaa
pushf
insl
dec
out
pop
ljmp
cwtl
stc
dec
inc
lods
jge
incl
pop
inc
xor
fstp
mov
dec
dec
cmp
insb
imul
mov
mov
hlt
addr16
or
pop
add
repnz
dec
pop
add
retw
mov
mov
pop
cli
add
jns
inc
dec
in
adc
je
je
movsb
inc
push
rol
cld
ficomps
out
mov
fisubs
mov
lods
pop
leave
out
sbb
fidivrs
jbe
psadbw
mov
add
dec
xchg
jb
movsb
jle
mov
fstl
mov
or
pusha
add
lret
es
aam
cwtl
scas
out
inc
enter
push
lds
subl
shl
jge
mov
xor
je
push
adc
arpl
int3
jno
mov
dec
gs
xor
aas
mov
sbb
mov
into
pop
icebp
stos
addl
test
mov
cmc
in
lods
mov
lods
out
xor
sub
mov
jle
std
push
push
inc
jl
pop
push
and
popf
in
push
inc
xlat
and
dec
adc
insl
pop
and
xrelease
mov
ss
push
js
sub
sbb
in
or
mov
mov
repz
cmp
xor
fs
push
stos
or
xor
leave
and
pusha
jno
add
xchg
lcall
daa
mov
arpl
fwait
xchg
mov
adc
adc
jl
scas
cli
repnz
insl
das
pop
addr16
daa
pop
push
xchg
scas
in
js
or
or
cmp
sbb
filds
mov
cltd
or
or
adc
cwtl
cmp
lods
movsb
sub
inc
pop
jb
jle
test
push
xor
mov
rolb
fimull
jg
int3
pop
sbb
cld
rolb
lods
aas
jo
xor
xchg
cld
cmp
jbe
dec
cmp
ljmp
cmp
scas
ds
and
std
lret
xor
mov
xor
xchg
out
cmp
pop
sub
out
lock
fnstenv
int3
dec
push
add
daa
sarb
test
call
lods
lcall
in
push
icebp
jmp
aas
test
in
nop
insl
jns
cmp
movsl
or
cwtl
sbb
add
icebp
jl
sub
cmp
push
aam
iret
pop
cltd
inc
cmp
jmp
pop
movsb
and
pop
inc
dec
imul
les
dec
test
fstpt
mov
mov
mov
fcoms
xchg
rcll
gs
xchg
mov
sub
mov
and
int
in
sbb
fimull
adc
int
lret
gs
in
mov
push
sbb
inc
or
bound
mov
pop
movsl
scas
out
inc
out
outsb
mov
sub
jge
adc
dec
jno
jg
test
aas
leave
int
or
cmc
rorl
mov
add
in
pop
fsubl
mov
adc
mov
addr16
push
pop
sar
scas
aad
inc
or
fcmovne
lcall
xchg
mov
pop
shlb
push
fs
in
lcall
xchg
xorb
ja
or
dec
add
mov
pop
or
insb
adc
and
imul
iret
aad
pop
inc
adc
addb
imul
lods
int
inc
cmc
sbb
lock
dec
out
aad
add
push
cmp
ja
cmc
sbb
stc
jae
jle
jno
ds
addr16
dec
sub
adc
push
sahf
loopne
jge
xchg
lret
inc
fcompl
js
aam
dec
cs
adc
inc
or
sbbb
inc
repnz
popa
pop
sub
pop
ss
in
xchg
enter
iret
addr16
xchg
fcoml
lcall
fildl
mov
mov
out
adc
jmp
xor
rolb
push
ja
mov
inc
shlb
mov
mov
mov
pushl
loop
mov
lods
xor
in
mov
and
repz
sub
push
sub
and
xorl
int
sbb
and
pusha
mov
mov
dec
in
cmp
xchg
adc
or
and
push
dec
aas
add
cmp
jb
adc
cmp
pop
push
sbb
xorb
sub
pop
les
in
push
nop
lcall
je
mov
add
scas
jmp
insl
dec
test
outsb
adc
gs
shlb
and
mov
mov
fdivs
jl
lods
cmp
shll
push
sbb
xor
pop
dec
or
pop
jo
xor
or
dec
mov
or
es
xchg
lds
xchg
mov
mov
and
xor
out
xchg
sbb
or
inc
test
repnz
notl
mov
or
popa
aas
repnz
push
adc
or
insb
sub
nop
fsts
or
inc
inc
lds
les
bound
adc
mov
iret
mov
rcll
rcl
ret
sub
pop
dec
mov
jb
and
imul
jecxz
or
iret
push
fwait
in
push
or
shlb
jle
xchg
std
call
inc
add
jle
cmpsl
imul
add
sub
jbe
rorl
jle
mov
cmp
adc
adc
cmp
cmp
or
popf
scas
std
aad
scas
mov
jg
pusha
mov
loop
iret
pop
xchg
xor
cltd
ljmp
shl
xchg
leave
jge
inc
mov
fcomp
lea
xchg
iret
push
ljmp
or
dec
stc
sub
xchg
test
scas
add
cmc
out
out
cmp
mov
sbb
pextrw
dec
adc
xlat
clc
int3
leave
imul
cli
lcall
fs
dec
push
pop
fdivrl
xorl
and
fbld
jae
imul
sbb
cmp
out
push
iret
dec
mov
loopne
mov
popf
mov
pop
sub
push
sbb
push
pushl
xlat
jle
and
sub
mov
xchg
mov
and
hlt
or
lret
enter
fadds
jge
jno
enter
int3
and
and
imul
mov
mov
fucomip
inc
rcrb
fstpl
mov
cld
insl
or
jb
into
pusha
jne
mov
xor
repnz
jnp
ficompl
cmp
mov
pop
mov
push
cs
mov
jge
mov
pop
mov
pop
add
pushf
mov
push
lcall
mov
jecxz
enter
pop
sub
adc
pop
fistpl
and
pop
mov
mov
mov
inc
stos
sbb
jae
movsl
js
imul
adc
push
repnz
cmp
cld
adc
repz
arpl
sbb
subb
adc
or
pop
leave
or
sbb
jmp
cmpsl
cltd
mov
popa
mov
stc
fcomp
xchg
addb
push
movsl
pop
shlb
sub
xchg
fdivs
sbb
inc
loopne
xor
push
inc
inc
stos
mov
adc
xor
ror
sbb
in
mov
or
sahf
sub
lock
or
cltd
fdivrl
ret
dec
cltd
cmp
sbb
sbb
jb
imul
mov
push
das
cmp
les
cld
adc
negb
movsl
add
lahf
lea
add
bound
test
mov
sub
fimull
in
dec
jae
aad
mov
sbb
ret
xor
pop
and
movsl
xchg
fsubrp
test
pop
and
xchg
mov
xchg
in
adc
adc
xor
mov
cmp
mov
aam
push
imul
and
iret
mov
add
scas
xor
sbb
jns
data16
rcl
idivb
daa
bound
sbb
ja
xchg
push
sub
mov
fs
js
loop
or
mov
cwtl
mov
repz
out
out
in
cld
lret
xor
add
sbb
pop
ret
sub
jo
shrl
sbb
mov
fwait
lret
mov
mov
sub
clc
notl
sarl
pushf
mov
xchg
jge
push
rcl
fldenv
xchg
incb
add
xorl
rorb
js
cmpsb
cmp
imul
and
sbb
aam
cli
mov
fldenvs
pop
jno
mov
inc
sbb
cmp
sub
push
or
jecxz
sub
lods
in
clc
jl
ror
adc
mov
bound
pop
fbstp
scas
push
sbbb
fidivl
sahf
out
cmp
and
add
in
in
xlat
adc
dec
insl
add
cmp
inc
shl
cld
rorl
xor
or
jl
sub
and
cmp
and
mov
arpl
mov
pushf
insb
cmp
cmpsb
sub
in
addr16
aam
jne
xchg
lret
test
mov
cmp
mov
jmp
imul
mov
jns
jecxz
mov
lds
lret
jbe
mov
faddl
push
pop
test
js
push
insl
or
push
shl
dec
test
mov
mov
out
or
lret
mov
or
mov
pop
aam
jae
push
push
pop
mov
adc
mov
push
gs
and
addb
jne
shrb
jmp
xor
addb
jb
fldz
in
movsl
les
add
pop
adc
inc
test
or
dec
jl
mov
push
stos
inc
sbb
clc
ljmp
mov
push
adc
mov
and
push
inc
insl
mov
test
fs
jae
faddl
aaa
int3
and
adc
imul
cli
xchg
shr
pop
inc
fistpl
and
sbb
push
inc
inc
aaa
cmp
add
and
cltd
or
shlb
enter
dec
push
inc
pop
jb
movsl
sbb
and
or
iret
int
inc
sbb
pop
mov
mov
in
mov
add
xchg
call
mov
lods
add
jb
mov
mov
orb
cli
mov
hlt
ss
aaa
jle
push
xlat
add
ror
arpl
xchg
jecxz
adc
push
adc
cmp
push
inc
imul
and
adc
xchg
jo
push
pop
cmp
pusha
out
fcos
in
pop
in
lock
testb
out
mov
pop
sub
lcall
lea
nop
stc
xchg
jb
inc
sbb
mov
jnp
iret
sbb
cmp
sbb
mov
dec
mov
sub
jnp
roll
insb
shll
jg
les
cmp
sub
xchg
jp
cmpsb
cmp
mov
cmp
push
add
push
or
pop
and
out
sub
jg
pop
sarl
inc
sahf
adc
mov
and
mov
das
jno
cltd
and
int
testl
push
sub
call
mov
lds
and
and
or
jmp
ljmp
jmp
xchg
enter
inc
pop
mov
leave
mov
addr16
mov
mov
rcll
in
cmp
mov
pop
jnp
xor
cmp
mov
out
dec
pop
xchg
cmp
mov
inc
mov
mov
xchg
fmull
andb
xor
in
aad
jl
and
std
push
rorl
lret
insl
int3
notl
mov
repnz
cmp
xor
add
sub
jg
inc
and
repnz
sub
insl
adc
enter
pop
inc
inc
inc
call
mov
pop
mov
push
nop
xchg
cmp
push
xor
scas
movsb
pop
das
xchg
leave
js
mov
fwait
jl
pop
cmpsl
xor
lret
cmp
ret
lahf
imul
pop
mov
cwtl
xchg
mov
cs
cmp
mov
mov
sub
jg
mov
mov
mov
dec
push
rorb
lods
pop
aad
lret
aam
outsl
xchg
dec
xor
dec
xchg
les
adc
push
or
out
cmp
cmp
push
pop
in
mov
outsb
cmp
dec
pop
mov
in
call
cmp
dec
gs
fdivl
fwait
mov
mov
sahf
jmp
repnz
nop
dec
out
out
bound
mov
sbbb
mov
xchg
rcll
in
xchg
iret
sub
push
out
inc
int3
pop
mov
mov
sbb
mov
or
mov
push
in
cs
fadds
test
scas
sarb
sub
jge
mov
pop
mov
push
outsl
and
xchg
imul
frstor
subb
sbb
fldt
inc
pop
outsb
imul
hlt
mov
xor
mov
jecxz
and
inc
scas
movsl
mov
addr16
pushf
push
push
adc
es
scas
stos
mov
cwtl
dec
movsb
es
fists
mov
imul
push
add
fs
aam
xor
lds
dec
loop
test
xor
cmpsb
lods
xor
fdivp
rorb
lods
mov
das
aaa
cltd
lock
pop
test
push
dec
jmp
and
repnz
cwtl
adc
sbbb
or
loope
cmc
mov
add
cld
or
outsl
adc
dec
cwtl
in
jge
aas
fwait
jb
aad
sahf
adc
movb
loop
in
test
xor
ds
lret
pushf
sub
pop
dec
lods
sub
mov
sub
jne
xchg
repnz
sbb
push
or
mov
adc
xchg
in
cmpb
sbb
sahf
clc
xlat
repnz
nop
popf
aaa
or
mov
adc
mov
ja
jecxz
sub
clc
sub
mov
sbb
sbb
add
jl
sub
xchg
clc
mov
sahf
icebp
pop
fstp
stos
jb
cwtl
sarl
mov
or
repz
xchg
mov
xor
in
add
js
push
inc
aaa
movsb
aas
cmp
in
orb
adc
mov
pop
scas
push
cld
push
stos
and
stos
enter
pushl
leave
mov
xor
add
repz
and
loop
data16
jmp
out
not
fldl
jecxz
outsl
std
stos
mov
aaa
test
repz
pop
in
sahf
subl
sub
fidivs
ja
xor
repz
jle
div
cmp
inc
or
adc
sub
inc
mov
lret
aad
es
shrb
or
lods
aaa
andb
push
and
sub
sbb
pop
sub
pop
and
mov
sub
mov
mov
adc
fsts
aaa
jmp
shl
inc
shlb
inc
repnz
add
lcall
fsubr
mov
stc
pop
in
pop
bound
outsb
lahf
sub
dec
jl
rcrb
pop
addl
sub
push
sub
push
movsl
jbe
pop
cwtl
aaa
mov
xchg
inc
push
mov
fistpll
inc
outsb
add
xor
mov
xchg
pop
test
mov
dec
xchg
out
jg
das
arpl
add
jae
xchg
int3
lret
pop
and
xor
pop
dec
push
and
pop
or
or
adc
imul
cmpsb
jecxz
cld
xchg
and
scas
jne
xlat
cmp
dec
push
lea
cmpsl
push
das
mov
xchg
sub
xor
scas
dec
add
shl
in
jg
test
hlt
pop
cmpsb
je
cli
mov
enter
rorl
mov
dec
mov
lret
push
dec
inc
enter
imul
popa
sahf
test
jg
repz
pop
xor
xor
xchg
ds
mov
adcl
mov
xchg
aas
out
sbb
cmovne
jae
outsb
loop
imul
xor
ss
sbb
inc
rcrl
adc
mov
sarb
xlat
pushf
or
xchg
push
in
mov
xor
into
xor
je
jb
scas
inc
jge
xor
push
sbb
xlat
outsl
mov
pop
pop
ljmp
pushf
mov
cld
mov
popa
xor
es
xchg
fadds
test
movb
es
inc
mov
and
and
jns
fistl
stos
leave
jp
arpl
inc
test
and
xchg
sbb
mov
outsb
arpl
pop
js
arpl
mov
xor
inc
add
nop
pop
add
hlt
xor
aas
imul
jle
fwait
negl
push
xchg
cmp
push
insb
inc
mov
cs
jl
shrb
mov
cmpsl
insl
aam
lock
jb
fadds
pusha
push
rcrl
sub
push
loopne
lds
cli
pop
movsb
cwtl
bound
or
sti
pop
ret
xchg
cld
pand
lds
fists
imul
xor
out
jmp
jecxz
int
add
mov
lods
pushw
inc
and
shrb
push
cltd
sub
lret
rclb
push
pop
out
in
mov
shlb
push
fabs
test
mov
mov
cmp
jge
cmp
sbb
adc
push
enter
lea
addb
shrl
xchg
sbb
dec
jno
cs
repnz
push
jnp
push
xor
pop
push
jns
pop
int3
enter
xchg
adc
movsb
mov
sbb
imul
es
dec
test
imul
mov
enter
das
out
dec
dec
das
dec
inc
xor
jl
or
clc
mov
jbe
ss
xor
repnz
jle
push
insl
cmp
xchg
pop
rcrb
mov
movsb
push
add
jnp
adc
ficomps
loopne
xor
mov
popf
and
sahf
jecxz
pusha
imul
push
in
cmp
cmp
call
xlat
adc
push
in
repz
aaa
out
mov
push
repz
outsl
jmp
stos
shr
sbb
cltd
mov
pop
inc
jo
jmp
mov
mov
pop
imul
gs
aaa
mov
jecxz
sbb
pop
and
pop
adc
aam
pushf
xchg
add
sahf
sti
cli
sarl
xchg
fsubr
dec
mov
scas
cwtl
fld
gs
in
inc
adc
in
mov
sbb
mov
xchg
mov
movsb
mov
sub
arpl
mov
iret
ret
stc
lcall
mov
ds
out
jge
and
test
jge
cmpsl
cmpsb
mov
jl
mov
into
ret
adc
fadds
fs
mov
js
hlt
push
xchg
jg
pop
dec
sbb
pop
pushf
outsb
and
out
jmp
out
sub
repnz
fisubl
jno
rorb
in
jne
sbb
cwtl
repz
sbbb
push
adc
mov
jno
sahf
add
aad
xorl
int3
fisttps
mov
pause
or
mov
cmc
dec
imul
adc
popa
cltd
sbbb
mov
adc
push
jmp
insb
xorl
pop
repz
sarl
sbb
std
jae
push
out
pop
sbb
leave
push
aaa
cwtl
cld
popa
test
mov
jl
shl
xor
cmp
std
add
dec
movsl
cwtl
mov
lds
pop
push
sub
das
cli
push
fildll
jne
insl
les
xor
test
jno
pop
fisubrl
mov
cltd
xor
adc
xor
or
xchg
aam
dec
xchg
stos
clc
inc
or
or
aas
pushf
notb
add
loopne
mov
test
sti
int3
rcrb
addl
loop
add
int
in
dec
cwtl
xchg
mov
rolb
sub
or
addr16
adc
stos
mov
hlt
jno
cs
push
jb
outsb
js
in
mov
mov
das
dec
sub
adc
sti
nop
int
fstpl
call
dec
inc
das
mov
jbe
sub
mov
call
cmp
cmp
push
adc
push
sahf
inc
inc
sbb
pusha
mov
sbb
or
das
sbb
ja
or
rcll
mov
sahf
decl
adc
add
pop
xchg
je
dec
inc
repz
sub
mov
cs
mov
mov
mov
insb
dec
dec
add
add
pushf
add
dec
ja
dec
xor
out
cli
xor
push
mov
jne
cld
cmp
iret
data16
out
dec
imul
xor
lcall
xchg
sbb
fdivl
out
lock
pop
pop
mov
fcompl
inc
lds
inc
lock
jo
sub
and
jg
repz
pop
sbb
inc
mov
inc
cmp
aam
fidivrs
cwtl
pop
arpl
mov
jne
pop
cmp
js
xchg
fwait
cwtl
add
xorl
andl
push
and
sub
or
cmp
sbb
shl
cmpsb
repnz
iret
aas
mov
outsl
mov
pop
jb
sub
inc
insl
in
aam
sub
test
je
loop
loopne
or
jbe
hlt
fldt
ror
ds
std
xchg
pop
lock
cmp
jp
mov
inc
mov
stos
lcall
aam
mov
or
fwait
gs
pop
cmpl
pop
add
jbe
push
in
lcall
sahf
aad
inc
dec
or
adc
daa
fldenv
gs
popf
or
sbb
mov
repz
jmp
sbb
lods
mov
adc
and
jl
imul
push
mov
sub
sbb
lcall
mov
cmpl
mov
and
xor
cld
std
sub
sub
push
sub
cmpb
stos
aaa
ret
jg
aad
push
jp
push
dec
mov
xor
nop
lock
fdivrl
add
arpl
int3
mov
cmp
mov
jns
stos
test
pop
lret
shrb
out
push
ficompl
jbe
ja
scas
push
adc
mov
dec
int
mov
in
out
jns
mov
jbe
push
stos
repnz
mov
dec
ret
sub
subb
outsb
sarb
les
sub
in
sbb
frstor
orl
cmp
ret
adc
mov
lahf
lahf
fidivs
sbb
ja
or
testb
out
ret
movsb
mov
sbb
push
jns
adc
cltd
nop
cmp
mov
in
mov
push
ljmp
mov
push
cmp
xchg
insb
sub
in
je
pushf
pop
mov
in
jb
push
xlat
mov
fstps
mov
scas
fsubr
xchg
cwtl
push
lods
xchg
mov
inc
or
and
rorb
push
sub
stos
fisttpl
mov
lret
pop
and
insl
or
outsb
inc
pop
dec
add
aad
popf
push
imul
lahf
nop
xchg
adc
insb
or
aaa
cmc
les
xor
jbe
jg
jb
push
sbb
jnp
test
mov
add
ret
enter
popa
cli
xchg
cs
sub
or
inc
inc
add
je
xor
mov
pop
into
xchg
add
cltd
sub
test
mov
pop
and
sub
push
and
js
clc
mov
addr16
lret
inc
pop
push
idivb
mov
xchg
xor
adc
push
xor
mov
xor
fstl
jae
jmp
fs
lods
mov
jp
inc
inc
lahf
movsl
sub
push
xor
ds
out
cmp
sub
or
lcall
jb
sbb
sub
pop
dec
cmp
lock
pop
add
cmp
jp
sbb
mov
mov
mull
sbb
push
testb
fisttpll
test
push
out
mov
cmpsb
xchg
shrl
ss
xor
inc
mov
lcall
push
push
lods
jmp
pop
cmc
xchg
out
lods
shrl
out
xor
pop
ds
lds
jb
dec
xchg
lret
or
jmp
es
and
or
lret
lea
out
andl
daa
lds
psubsb
incb
lods
mov
scas
push
sahf
lret
mov
sbb
and
jbe
push
mov
fdivl
das
aaa
mov
mov
test
dec
lcall
addr16
repz
fwait
into
xor
shll
sbb
fidivrl
jp
mov
pop
or
xor
stc
xlat
dec
cltd
out
add
dec
dec
sbb
pop
xlat
sub
pop
cmp
sub
mov
andl
push
sbb
aaa
or
out
pop
sahf
fbstp
add
xor
jno
inc
imul
jl
dec
pop
pusha
or
shrb
pop
imul
mov
ffree
cmp
push
mov
shl
mov
mov
int
icebp
lods
mov
leave
and
lock
jecxz
sbbl
insb
out
test
push
fs
sub
jle
and
leave
shl
xchg
inc
and
and
pusha
inc
sub
lret
pop
adc
jo
movsl
mov
pushf
fmull
mov
mov
into
lods
sbb
cmp
sub
lahf
xlat
push
fnstenv
pop
push
inc
cli
stc
inc
xor
ret
addl
jg
hlt
add
sub
scas
jns
and
shll
dec
in
mov
jns
or
jns
punpckhdq
call
fwait
mov
xorl
inc
sub
push
xchg
and
outsl
adc
bound
fsts
cmpb
ficoms
call
dec
je
in
gs
scas
jnp
in
into
shl
sub
sbb
add
ret
add
and
inc
mov
mov
cwtl
stos
inc
test
and
leave
int
xor
adc
test
adc
addr16
test
pop
call
adc
daa
repz
inc
outsl
scas
xchg
mov
iret
fdivrl
out
icebp
stos
mov
xchg
mov
dec
adc
xor
test
dec
sub
in
add
push
mov
arpl
and
xlat
push
sbb
stos
cmp
imul
icebp
mov
push
jg
or
dec
pop
ret
and
sub
sbb
or
add
sbb
cmp
shll
outsl
inc
and
sbb
fcomps
int3
out
ljmp
js
scas
mov
mov
xor
push
cmpsl
je
mov
dec
mov
testb
pop
cli
pop
lcall
mov
or
mull
jmp
push
movsl
daa
lock
stc
xor
xlat
test
cmpl
pop
dec
movsb
lock
push
sti
ds
and
aas
push
sub
xchg
push
outsl
jl
out
aas
dec
outsb
jo
call
repnz
dec
les
in
out
shll
sbb
mov
sti
add
scas
sbb
mov
dec
insb
jl
xchg
das
bnd
mov
decb
mov
mov
jno
fwait
adc
xchg
out
mov
repz
push
icebp
mov
or
fidivl
in
aas
mov
cmp
jo
dec
out
hlt
xlat
in
jmp
out
xchg
cmpsb
jo
cmp
hlt
mov
lds
std
jae
movsl
stos
add
xor
xor
lods
std
xchg
xchg
jae
ds
insl
sahf
seta
or
push
cmc
pop
cmpsl
cmp
or
push
std
jp
add
pop
adc
mov
mov
insb
pop
leave
ret
movsl
add
scas
lds
out
push
add
loopne
call
imul
cwtl
test
adc
pop
scas
call
and
and
addr16
jb
fistps
mov
ds
mov
call
mov
xchg
jmp
sbb
jns
and
adc
repz
loop
sub
imul
jne
dec
sbb
ficompl
mov
insl
out
push
aas
pop
inc
dec
xor
add
fsubl
or
jnp
or
mov
jle
fisubs
in
mov
cmpsb
je
mov
cmp
shlb
scas
movsl
fwait
adc
je
nopl
lods
sub
aad
and
cmp
out
das
mov
add
inc
jecxz
sub
and
push
xchg
ljmp
push
ret
push
cmp
add
repz
insl
sub
or
movsl
rcl
imulb
iret
fldl
repz
fwait
mov
or
xchg
mov
out
pop
lea
adc
mov
fwait
rcrl
mov
sti
mov
cwtl
pop
mov
xor
pop
es
stc
scas
mov
dec
push
cli
xchg
push
or
out
lea
jns
test
shrb
dec
int
jno
xchg
mov
xor
mov
stos
push
popf
into
mov
push
movsb
aaa
int
and
fldt
push
mov
lods
lret
sbb
das
rorb
mov
lahf
rol
into
xor
ss
lds
or
add
mov
xor
xor
sub
cmp
mov
inc
popa
lret
clc
shll
xchg
adc
xor
leave
xchg
and
pop
lcall
mov
je
jg
repnz
les
or
decb
inc
mov
cmp
pop
imul
xchg
mov
roll
lcall
adc
xor
xchg
or
and
out
fildll
aas
call
sbb
or
jne
sub
pop
repz
imul
push
ja
jo
or
fwait
pop
es
sbb
jo
je
mov
imul
in
icebp
movsb
sbb
xor
sbb
out
je
incl
daa
jnp
std
cmp
push
inc
sbb
sub
idivl
in
mov
mov
enter
or
aas
pop
out
dec
shlb
mov
adc
jg
lods
scas
cmp
add
enter
insl
jge
mov
xor
xorl
ds
sbbb
xor
xlat
ds
out
mov
xor
cmp
andb
dec
pop
lcall
cmp
pop
or
xchg
mov
mov
addr16
mov
pop
adc
lcall
test
dec
xor
ja
sub
pop
leave
aas
add
inc
xor
dec
jp
xchg
or
ret
mov
push
sti
adcb
and
shrl
rclb
sub
pop
sbb
dec
fnsave
xchg
fidivs
ret
aam
xchg
gs
push
sub
push
pop
and
pop
mov
jbe
mov
and
test
or
mov
or
aaa
xor
adc
shrl
popa
test
out
add
fwait
xor
mov
je
mov
stc
loop
daa
jg
aas
mov
mov
add
dec
push
xchg
lret
add
movsl
fimull
test
xchg
call
cmp
clc
popa
pusha
or
cld
mov
sbb
or
vmovss
push
je
std
jo
sbb
pop
mov
mov
icebp
add
fcmovne
push
push
pop
js
out
pop
xor
push
xor
inc
mov
out
add
aaa
dec
jmp
ret
and
movsl
test
xor
push
popa
mov
int3
arpl
vcvtdq2ps
cltd
mov
sbb
pop
mov
fs
inc
jge
cs
add
jbe
les
cmp
fwait
jnp
and
dec
push
dec
sub
addr16
add
sbb
test
sbb
notb
stos
or
push
sub
movl
repz
mov
std
sti
leave
sub
ja
adc
cld
daa
sbb
out
pop
dec
cmp
icebp
inc
xchg
aaa
out
sub
inc
add
xor
outsl
cmc
aas
inc
fs
lds
push
mov
xor
inc
and
add
imul
in
imul
and
add
fbstp
inc
sarb
dec
cmp
dec
pop
mov
mov
add
rcll
into
jl
aaa
adc
inc
mov
or
test
or
mov
fcmove
mov
mov
out
enter
rcl
aam
les
int3
mov
ljmp
adc
test
sub
out
mov
sbb
dec
mov
cld
xor
mov
and
testl
xchg
ds
addr16
and
aad
mov
adc
in
mov
cmp
add
xchg
lret
fmull
clc
lods
test
xchg
mov
cmp
and
mov
imul
hlt
mov
dec
out
jg
cwtl
arpl
sbb
ss
cmpsl
mov
push
xor
jnp
in
mov
mov
jns
test
push
push
insb
test
mov
or
mov
pop
outsl
sbb
insb
jae
cmp
xchg
outsl
out
mov
inc
mov
fcmovbe
cmpsb
negl
mov
mov
mov
in
jmp
cmpsl
ja
loope
xchg
hlt
xchg
popa
cmp
out
pop
add
xlat
cmp
loope
hlt
adc
add
adc
int
inc
pop
push
imul
inc
fs
arpl
popf
jmp
lahf
loope,pt
sahf
test
inc
fs
sub
into
mov
scas
divb
jl
lock
hlt
adc
sahf
cmp
daa
pop
stos
inc
inc
fists
xor
mov
arpl
dec
daa
imul
daa
ljmp
data16
in
leave
inc
into
xchg
jmp
pop
in
push
cli
mov
ja
out
pop
clc
mov
lahf
adc
sub
add
into
call
stos
nop
cmpsb
rcrb
add
adc
pushf
mov
arpl
pop
outsb
outsl
xor
mov
imull
imul
cld
in
adcb
push
pop
ljmp
or
pop
jbe
inc
sbb
mov
mov
std
fildl
scas
ja
inc
mov
in
icebp
icebp
and
repnz
or
push
jp
imul
iret
add
sbb
mov
cs
sbb
add
xchg
cmp
imull
jmp
hlt
int
cmp
int
push
and
adc
jno
cmp
lahf
pusha
or
dec
insb
xchg
dec
sbb
int3
jno
and
mov
xor
adc
or
mov
jnp
push
insl
cltd
sbb
aaa
or
push
ss
orb
sbb
cmp
sbb
jo
jbe
and
aas
adc
mov
das
cmp
outsb
imulb
fwait
xchg
pop
mov
pop
cmp
out
lds
sub
and
test
sbb
xor
ret
mov
jle
pop
push
xlat
pop
add
popf
dec
mov
adc
aam
cmp
dec
insl
fs
andb
lock
mov
cmp
adc
jns
stc
and
push
call
sub
sub
fwait
mov
push
insb
subl
and
jmp
and
mov
jbe
dec
in
cmp
inc
push
shll
gs
es
js
in
sub
shrl
jge
mov
inc
pusha
dec
and
push
adc
daa
adc
push
push
add
and
std
test
mov
inc
inc
leave
in
xchg
mov
cli
ds
jnp
cmpsl
sub
ret
aam
imul
cmp
xchg
and
popf
jne
xlat
add
imul
push
xchg
push
rcr
inc
stos
xchg
and
inc
daa
lcall
movsl
and
xacquire
jne
lods
fisubl
sub
mov
cmp
inc
xor
in
inc
pop
mov
and
push
movsl
inc
jb
or
and
sbb
bt
mov
pop
fsubrs
les
or
mov
inc
out
mov
repnz
jb
scas
sub
cmp
sbb
or
cmp
xchg
push
and
inc
xchg
aad
popa
out
inc
xchg
fld
sub
xor
inc
dec
sub
jle
pop
mov
outsl
movsl
or
adc
out
pop
je
jnp
mov
shrl
fidivrl
push
xor
xchg
inc
jl
inc
and
pop
adc
insl
pop
insb
push
push
push
insb
adc
sub
stc
mov
jp
jns
lods
push
xchg
popf
sbb
shlb
adc
mov
shlb
sbb
xor
xchg
sub
cmp
xor
insb
pop
mov
mov
fdivrl
scas
jg
outsb
dec
or
cmp
sub
push
adc
int3
mov
inc
jecxz
ja
shlb
adc
pop
inc
movsl
xchg
aam
jo
sub
mov
pop
sub
inc
mov
push
shrl
jl
jg
pusha
je
push
push
xchg
iret
stos
mov
add
fldcw
and
dec
imul
or
outsb
neg
or
inc
fwait
cmpsl
xor
pop
test
stc
mov
insl
ret
insb
dec
jp
mov
out
rcl
inc
mov
jle
sbb
jno
xor
in
xchg
aas
ret
aam
imul
mov
test
mov
sub
mov
lods
ret
push
mov
mov
push
push
xchg
xorb
ljmp
fmull
frstor
xchg
mov
in
mov
out
add
cmp
or
mov
in
sub
mov
ljmp
cwtl
jae
pmuludq
je
and
mov
xchg
xor
mulb
dec
ja
cmp
int
mov
sub
cmp
sbb
cs
mov
ret
rcr
sub
filds
jge
in
jl
mov
pop
out
xchg
clc
enter
fwait
cmc
jle
xor
clc
sarb
hlt
push
dec
xchg
add
push
fdivs
jmp
pop
jl
je
mov
fidivl
jo
mov
aaa
cltd
sub
push
xchg
shlb
pop
cmc
and
xchg
shll
inc
dec
fwait
xchg
test
cmpsb
or
lods
ja
test
cmp
mov
xchg
and
sarb
repnz
sti
inc
mov
mov
hlt
pop
cwtl
cli
out
jns
mov
cmp
lods
pop
pop
shrl
ja
std
jge
or
orb
cmp
mov
out
or
gs
jb
out
xchg
js
pop
std
subl
int3
inc
inc
sub
mov
jg
push
iret
xchg
lods
mov
jnp
cmp
cwtl
ljmp
dec
mov
sub
or
cmpsl
mov
jg
mov
imul
push
xlat
bound
in
int
cmpb
adc
imul
cltd
test
adc
add
fcmovnbe
in
and
clc
pushf
fcoms
sti
pushf
push
push
or
aaa
push
adc
dec
push
dec
cmpl
push
ret
or
gs
xor
fistpl
sbb
pop
pop
lds
push
mov
cmp
mov
ja
jle
pop
dec
mov
push
add
sar
cli
mov
jmp
clc
push
or
jae
dec
fwait
or
pop
fs
xor
inc
leave
lcall
repz
push
cmp
loope
aad
jl
jmp
aas
cmp
and
in
mov
push
xchg
mov
add
adc
enter
fisttpll
scas
mov
pop
mov
sub
dec
push
cltd
popa
or
and
inc
aam
dec
mov
fstp
mov
loopne
pop
push
in
mov
ja
jb
lods
and
dec
rclb
cld
add
pop
shrb
icebp
add
imul
out
bound
dec
shll
mov
pusha
xchg
aaa
idivb
mov
inc
sbb
daa
hlt
push
mov
fnsave
jno
negl
cmp
sub
lahf
jp
idivl
dec
sub
sbb
dec
xchg
sti
cmpsb
bound
lds
xchg
mov
mov
cmp
js
and
mov
mov
movl
mov
mov
lds
nop
nop
mov
stos
setno
fsts
jo
xchg
inc
mov
mov
dec
inc
inc
mov
out
mov
aas
popf
sbb
inc
dec
xlat
and
or
or
push
push
mov
xor
and
xchg
xchg
mov
lds
xor
add
fcmovu
ljmp
int
pop
inc
repnz
dec
pop
inc
insb
fiaddl
test
pop
xor
pop
cli
and
aad
lahf
ror
test
add
loop
ja
lock
mov
jp
imul
push
decl
jo
sub
push
popf
sbb
insl
xor
dec
sub
sbb
cmc
jns
gs
scas
ljmp
iret
dec
cmp
push
xchg
pop
in
pushf
or
lahf
movsl
dec
cmp
xor
jnp
sbb
mov
adc
loopne
mov
mov
inc
or
sub
dec
mov
cmpsl
ret
xchg
jnp
push
push
push
and
sub
pop
data16
es
sbb
cmp
out
fsubrl
jbe
shlb
ret
int
dec
mov
movsl
into
mov
mov
dec
test
imul
jg
push
nop
and
xchg
sahf
imull
xor
sbb
inc
lods
mov
gs
push
inc
cmp
inc
js
aaa
mov
fldl
xchg
cmpsb
and
into
jmp
loopew
ds
mov
dec
sub
pop
dec
dec
outsl
pop
push
scas
inc
add
pop
and
jmp
scas
mov
push
clc
xchg
and
add
push
filds
inc
or
inc
push
mov
pop
push
insb
in
movsb
popf
mov
out
add
pop
xchg
shrb
test
add
jp
jecxz
daa
inc
cmpsl
push
mov
dec
pop
rcrl
dec
sub
cmp
dec
pop
arpl
mov
aam
inc
mov
loope
jge
jl
scas
roll
or
scas
push
mov
in
imul
iret
lea
and
adc
pop
std
pushf
xchg
and
push
mov
fwait
jnp
dec
adc
clc
fwait
mov
jp
stc
pushf
push
jno
out
lret
call
mov
shr
push
push
jno
adc
or
insb
stos
out
jecxz
add
or
cmp
add
jp
shrl
insl
jmp
fnstenv
scas
add
adc
adc
dec
pop
sbb
js
mov
or
fwait
mov
sub
fisubrs
psubd
mov
adc
call
cmp
rcr
les
pop
imul
mov
xor
sub
jns
es
mov
fs
cmp
pop
loopne,pt
ss
jb
mov
or
inc
fcompl
add
popf
loopne
dec
xchg
rol
xchg
pop
sub
mov
pop
sbb
movsl
test
and
dec
sub
addr16
jl
cli
and
push
jmp
cmp
test
jo
dec
arpl
mov
pop
cld
sti
dec
pop
jg
jb
sahf
sub
xor
mov
mov
lret
lcall
and
ss
pop
sti
ja
jmp
lret
sub
lret
sub
mov
jno
or
inc
and
or
xchg
mov
lock
pop
fmull
test
lret
addr16
and
and
pop
jp
lcall
cmp
xchg
push
iret
aam
inc
ljmp
add
dec
pop
or
sub
data16
repnz
xor
inc
mov
and
adc
inc
loop
lret
leave
in
sub
mov
push
jne
push
cmc
popa
sub
insb
pop
mov
jl
jge
mov
cmp
dec
sti
add
pop
push
lcall
and
dec
push
push
shrl
cmpsl
mov
mov
or
jle
mov
aaa
pop
jne
test
add
dec
jg
test
mov
imul
cld
mov
dec
or
xor
and
cli
loop
jae
data16
sub
mov
adc
adc
mov
xchg
roll
or
out
add
pop
xor
add
or
sub
decl
cmp
cmp
not
cmp
cmpsb
pusha
ljmp
fxch
test
pop
mov
add
dec
orl
fstpt
es
mov
icebp
movsl
pop
out
cmp
pop
mov
xchg
jle
fcmove
mov
xor
xchg
xchg
jae
dec
xchg
lock
ds
enter
out
divb
std
xchg
sbb
fildll
repnz
enter
mov
in
cmpsb
mov
addl
push
add
outsb
loope
mov
cmp
add
xchg
lods
cli
and
pop
decb
sahf
sbb
pop
das
and
lods
les
xor
insb
mov
mov
test
add
push
xor
out
lret
and
iret
jb
shl
iret
mov
addr16
jle
cwtl
pop
aas
xchg
loope
cmp
xor
mov
test
add
and
add
sub
sahf
sbb
das
insl
lods
mov
fidivrl
adc
inc
outsb
pusha
pop
ds
dec
xchg
sub
add
pop
fcomp
adc
mov
bnd
ljmp
cmp
sub
int3
mov
or
sbb
push
nop
cmc
cmp
popf
and
dec
push
and
mov
fistpll
dec
xor
add
add
xor
mov
xlat
inc
inc
mov
mov
cmp
cmp
inc
lret
icebp
push
lret
iret
mov
push
pop
push
jg
loop
outsb
xor
cli
fcoml
and
sti
fcomp
jo
popa
sub
outsb
mov
jg
scas
popf
dec
mov
sub
push
mov
lcall
lds
jnp
cld
cld
cmpb
fldt
imul
jb
shlb
adc
push
mov
jb
in
xchg
pop
les
fnstsw
fidivrl
sbb
add
in
ret
mov
jo
xchg
adc
ds
and
mov
or
xchg
sbb
or
xor
stos
jg
les
dec
in
lods
mov
mov
fdivs
out
add
repnz
sub
or
movsb
mov
in
pop
enter
or
sub
adc
pop
cli
push
adcb
lret
insb
mov
insl
fucom
loop
push
sbb
inc
cmp
outsb
and
push
xor
mov
cmove
xchg
jl
mov
stos
cmp
mov
in
cmp
sahf
dec
out
mov
stos
dec
mov
or
adc
daa
insb
and
inc
daa
sub
pmaxub
inc
add
xchg
arpl
test
cltd
mov
out
fnstsw
mov
add
les
adc
out
cmp
insb
data16
sahf
mov
jb
sbbl
clc
ss
push
or
pop
inc
push
add
mov
addb
mov
outsb
lret
add
rorb
mov
dec
inc
mov
xchg
adc
test
lret
mov
in
loopne
in
push
xchg
xor
jge
lods
lcall
pop
out
inc
out
cli
and
jnp
mov
fimull
repnz
cmp
add
icebp
jecxz
dec
sbb
xchg
test
pop
fstps
pop
leave
mov
lcall
mov
fmuls
sub
out
cltd
loop
dec
lock
imul
and
into
sbb
xchg
pushf
push
out
loope
int
dec
dec
movsl
les
cld
mov
inc
test
xor
shlb
outsl
and
or
repnz
out
movsb
inc
dec
jl
and
cmp
dec
icebp
lea
fmul
xor
add
inc
fsubl
popa
adc
das
popf
insl
sub
pop
mulb
rol
int
les
cmpsl
movl
lret
or
mov
adc
pop
pop
add
jnp
cmpsb
loope
pop
xor
test
sbb
das
lret
sbb
in
jp
xor
cmp
decb
int3
mov
push
jae
lahf
or
cmove
mov
push
or
jae
jo
sbb
dec
andl
inc
xor
bound
lods
xor
repz
div
jg
jns
shll
ds
stc
rcl
mov
push
xor
les
faddp
cmpsl
mov
incl
sub
mov
jecxz
jecxz
cmp
dec
clc
insl
jmp
stc
int3
mov
xor
xor
je
mov
dec
les
mov
jmp
test
insb
aad
lea
adc
cmpsb
mov
mov
xor
mov
pop
and
push
shrl
out
xor
enter
sub
jnp
les
xchg
sub
dec
push
call
sub
mov
lahf
jb
push
mov
test
sub
jmp
inc
and
aad
stc
iret
fs
xchg
push
mov
mov
fwait
sahf
sbb
pop
inc
jg
ss
rol
inc
mov
in
pop
mov
loop
lret
aam
inc
mov
mov
cmp
pop
dec
add
push
mov
inc
sub
sar
daa
mov
scas
shr
sub
jnp
imul
sub
aaa
call
pop
stos
xlat
outsb
test
movb
or
ss
fisttpl
mov
sbb
loope
xor
loope
pop
or
popf
cs
dec
sbb
imul
sub
scas
xchg
divb
xchg
lea
jl
scas
mov
std
orb
xorl
popf
incl
dec
add
mov
les
and
cmp
jl
shr
insl
sub
jae
jecxz
inc
jb
inc
or
flds
int
ljmp
push
push
pop
cmp
xchg
sub
dec
subl
cld
xchg
sbb
mov
cmp
shrb
pop
fidivrl
imul
imul
xor
dec
pop
sbb
call
sbb
stc
sub
sbbl
push
sbb
sub
cwtl
pop
or
push
cs
sub
or
lret
pop
in
aaa
lds
xchg
shlb
adc
or
je
push
adc
add
mov
mov
push
sbb
enter
push
lods
jge
loopne
test
pop
dec
fs
inc
daa
xor
ret
cwtl
add
outsb
fs
xchg
pushf
pop
outsb
jae
out
inc
out
xchg
push
sbb
insb
cmpsl
mov
or
mov
cmpl
ds
data16
fadds
and
sub
mov
fisttps
call
or
shlb
push
inc
cmp
xchg
sarl
lods
mov
test
dec
pop
push
hlt
fwait
push
ret
fists
repz
xchg
xor
mov
out
movsb
push
pop
sub
cmpsb
lock
and
popa
scas
pop
fstps
fcomp
push
xor
jbe
ret
dec
add
push
push
inc
push
adc
mov
cmc
mov
mov
xchg
roll
daa
jne
pushf
dec
lcall
std
add
push
ds
xor
jl
leave
and
dec
push
xor
enter
dec
push
lods
cmc
insb
stc
mov
dec
mov
xchg
test
push
or
mov
sbbl
mov
push
fists
inc
cwtl
pop
mov
clc
mov
sub
outsb
pop
push
or
and
test
lahf
test
xchg
mov
repnz
fcoml
sub
outsb
loope
jp
cmpsb
ret
rcrl
or
nop
cmpl
jl
jne
inc
pushf
adc
mov
mov
push
sub
inc
jne
cwtl
mov
fiaddl
fidivl
lds
mov
push
lret
addb
arpl
into
fs
xchg
out
stos
mov
adc
repz
dec
cltd
sbb
rcrb
inc
mov
movsb
adc
daa
or
fists
push
mov
xchg
je
mov
sub
xor
and
jecxz
ret
or
sbb
cmp
adc
cmp
out
insl
jno
mov
roll
sub
push
xchg
jge
sub
push
add
mov
fsubl
xor
push
jo
rcrl
js
outsb
xor
jl
ss
daa
dec
es
rcrb
ds
jecxz
sbb
xor
and
jb
and
cmpsl
ds
popf
out
pop
sub
xchg
adc
dec
jle
push
dec
inc
cli
cvttps2pi
mov
xor
inc
ds
xor
xor
adc
fwait
outsl
or
pop
sub
ljmp
fdivrl
testb
pusha
stos
mov
std
lret
orl
and
add
sti
pop
sbb
pop
sub
mov
repnz
xor
mov
cmp
mov
iret
int3
ss
pop
movsl
lds
lds
cmc
add
inc
fcmovnb
mov
mov
push
mov
scas
cmp
bound
mov
cmp
mov
mov
mov
psubusb
mov
ss
es
into
out
cmc
sbb
imul
or
mov
adc
mov
cli
sbb
xor
cmp
repnz
inc
cmc
fcom
dec
xorb
arpl
cld
xchg
fnstsw
fcomp
pop
lods
xchg
mov
push
mov
push
arpl
fdivrs
dec
add
sbb
or
out
pop
cmp
and
stos
ret
outsb
jnp
xchg
in
mov
xlat
sbb
push
push
xor
ljmp
xlat
cmp
lods
mov
loope
idivb
cmp
iret
in
sbb
mov
xor
xor
pop
icebp
pop
ret
imul
sahf
shrl
jbe
xor
cld
cli
pop
inc
cmpsb
hlt
rclb
sahf
mov
push
push
dec
mov
and
mov
lret
sar
lret
dec
and
fmuls
xchg
cmp
fiaddl
inc
daa
mov
or
mov
push
ss
out
loopne
lock
sub
mov
xchg
out
repnz
nop
xchg
cmp
push
sub
push
inc
mov
loop
jae
pop
icebp
nop
cs
lcall
cmp
std
js
mov
inc
popf
jge
mov
daa
pushf
mov
jae
or
mov
mov
lcall
outsl
jmp
jmp
iret
and
stc
mov
pushf
in
into
fcompl
push
dec
sub
test
inc
push
cmp
jnp
call
mov
jae
outsl
lds
sub
push
movsl
push
outsb
mov
test
pop
xor
xchg
inc
dec
int
mov
push
rcrb
push
rcll
sub
cmpsb
scas
rcl
pop
ss
test
lcall
loop
out
lret
adc
or
sti
push
fldpi
filds
xor
stos
andb
cmp
dec
in
loope
popf
and
outsb
fistpll
lods
or
fistl
rorl
pop
sub
jns
inc
pop
mov
test
cmpsb
cmpsl
stos
lcall
xor
pop
popa
aam
pop
pop
pop
push
jecxz
or
add
pop
sbb
push
fsub
cmp
and
pop
xchg
or
daa
scas
inc
lea
jmp
jne
leave
stos
push
fdivl
pop
mov
out
cltd
insl
adc
mov
inc
add
dec
and
cwtl
cld
xor
out
adc
lock
or
leave
jp
pop
stos
or
ficompl
xchg
mov
movsl
int3
ljmp
imul
ljmp
paddsb
les
fisubs
shrb
xor
sub
bound
daa
pop
and
xchg
xor
lret
dec
mov
aaa
cmp
loopne
imul
insl
mov
incb
das
jno
mov
loopne
es
scas
dec
mov
mov
in
inc
scas
dec
pop
inc
pop
mov
mov
int3
es
xchg
mov
aas
pop
jo
mov
mov
lahf
inc
lds
mov
mov
xor
jp
lret
add
test
mov
cmp
jb
pop
add
jno
push
sub
in
scas
sub
push
jecxz
aam
outsb
add
add
mov
inc
sbb
sbb
sub
sbb
fwait
ret
cmp
mov
mov
sbb
fs
jno
in
enter
or
or
test
fisubl
cmpb
push
jmp
push
scas
lods
insl
push
fcmovb
jnp
int
add
dec
ret
add
out
or
ja
adc
leave
mov
scas
pusha
jb
push
sbb
out
lds
imul
cwtl
rorl
jne
mov
fstps
movsl
mov
xchg
push
orb
dec
fdivs
arpl
fwait
sub
aaa
mov
cmp
mov
xchg
mov
ret
in
adcl
scas
pop
jbe
insl
aam
inc
filds
xchg
pop
cld
jne
iret
sub
repz
dec
mov
lret
mov
iret
xor
or
idivl
hlt
lods
data16
cmp
fs
das
movaps
es
pop
pop
jp
loope
or
xchg
pop
jle
das
xchg
nop
xlat
rolb
iret
idivl
pop
push
dec
adc
pop
sub
mov
shrb
lcall
ljmp
jl
jecxz
inc
add
mov
lret
arpl
pusha
in
mov
movaps
arpl
into
ret
nop
jg
xchg
dec
pop
dec
cmp
mov
dec
lock
sbb
adc
int
cmpsl
iret
xchg
jns
and
add
js
dec
test
in
movsl
jg
scas
mov
cli
lcall
inc
add
test
out
sub
int3
rol
mov
sub
mov
test
or
adcl
push
inc
std
push
pusha
mov
xchg
cmp
insl
inc
sbb
push
inc
push
sbb
xor
and
out
fildll
rcrl
xchg
mov
jns
cmp
clc
movsb
jle
cmpsb
add
xchg
outsl
int
inc
ret
cmpl
iret
aad
out
or
stos
mov
jmp
sbb
push
push
loopne
jb
movl
aas
dec
add
jnp
imul
test
mov
mov
adc
sub
cmp
mov
sbb
divl
cmpsl
shlb
mov
push
adc
idiv
repnz
xor
xorb
cmp
nop
or
xchg
cld
pop
jns
xchg
lea
insl
clc
xchg
jp
lods
dec
nop
xchg
inc
sbb
xchg
cli
stos
inc
in
push
inc
lock
lods
xchg
inc
mov
sahf
inc
pop
jne
mov
lret
js
push
outsb
pushf
dec
add
and
push
sub
inc
inc
jle
xchg
out
xor
sbb
xchg
push
add
xchg
jge
jbe
mov
out
nop
lods
ss
dec
pop
inc
in
add
cmp
insl
mov
adc
dec
mov
ret
outsb
sar
cld
pushf
sub
das
sahf
push
mov
nop
data16
lea
loop
loopne
loope
int3
fcoms
ret
mov
aam
aas
dec
dec
incl
mov
jl
mov
sarl
pop
xchg
stos
cwtl
cld
xor
push
notl
insl
cmp
sub
repz
mov
pop
lods
cmpsl
mov
sar
stos
loop
xchg
icebp
popf
pop
repnz
and
test
bound
mov
jg
loope
cmc
pop
mov
out
inc
imul
cmp
lds
sbb
fldcw
addr16
push
pop
js
xchg
add
jo
scas
fs
mov
movsb
out
pop
rolb
repz
mov
mov
pop
in
and
dec
pop
push
jge
mov
and
fiaddl
inc
test
mov
adc
sbb
push
inc
sub
xchg
xchg
push
push
sub
xchg
or
lcall
sub
xlat
and
adc
call
jno
add
jp
jge
lahf
enter
jne
sbb
aam
adc
fyl2xp1
or
cmp
sub
cmpsb
subl
pop
test
je
or
scas
mov
rorl
mov
pushl
push
imul
hlt
push
repnz
adc
sbb
mov
pop
sub
imul
dec
push
mov
xchg
sbb
adc
aaa
jmp
push
orb
mov
lea
jmp
push
cmpsl
add
add
ja
shrl
pusha
or
in
jo
jbe
cmp
dec
sub
ret
stos
mov
stos
xacquire
push
xchg
fldcw
push
cmp
mov
std
pop
pop
pusha
loop
das
sub
mov
pop
and
and
or
int
push
xor
mulw
or
jp
mov
popl
imul
ljmp
push
dec
sub
adc
mov
cmpl
or
add
enter
xchg
jne
mov
jns
leave
inc
adc
adc
inc
fwait
and
inc
push
mov
sub
ret
cmp
popa
cld
mov
ffreep
mov
add
xchg
insl
jge
ds
test
cmc
je
mov
addr16
lcall
iret
fisubl
pushf
jo
repnz
inc
mov
repz
inc
incl
xchg
sti
stos
jb
sub
jnp
push
mov
mov
xchg
stos
leave
movsl
sub
inc
and
xchg
scas
cmp
inc
subl
roll
add
xor
ljmp
dec
cmp
pop
push
rcll
sbbl
dec
add
xadd
push
mov
in
icebp
in
int
sahf
clc
gs
dec
xor
adc
inc
sbb
je
push
orb
sub
pop
jl
enter
pop
or
nop
and
or
out
cmp
insl
jg
dec
dec
ss
sub
xchg
mov
push
jne
call
cmp
rcll
sbb
lcall
pop
cltd
sti
push
lods
mov
popf
int
hlt
jb
leave
les
push
pop
inc
ror
mov
in
in
cli
loop
pusha
sbb
inc
mov
push
mov
and
scas
daa
pop
mov
push
sbb
dec
jo
addb
scas
into
ficoml
notb
jle
andl
idivb
cmp
xor
mov
sbb
fwait
lret
adc
fstpl
movsb
mov
int
movsb
jmp
fisttps
and
ja
jl
xor
add
adc
test
in
leave
into
aad
mov
mov
xchg
inc
inc
pop
mov
push
rclb
stos
insb
sub
scas
mov
inc
test
shll
dec
xchg
sbb
out
int3
cli
outsb
or
lock
mov
and
in
xor
push
pushf
xorl
push
mov
or
ficompl
xchg
mov
mov
ds
roll
cmc
out
and
cmp
sbb
sbb
and
sbb
in
fimull
push
fadds
int3
mov
mov
mov
lods
xchg
inc
imul
mov
fadds
inc
fs
sub
cwtl
jp
gs
mov
adc
outsb
ds
shrl
dec
movsl
sub
xor
jp
jno
cmp
jo
adc
mov
lcall
sub
push
int3
test
and
inc
or
loope
aam
popa
jae
inc
inc
adc
enter
leave
inc
inc
sbb
sahf
jl
ret
test
add
xor
pop
ret
dec
xor
ja
xorb
xor
idiv
add
push
sar
pop
rcr
add
xor
test
mov
aad
pop
in
jle
pop
xor
lret
pop
ds
je
rol
mov
ss
fs
shll
cwtl
mov
xchg
mov
cwtl
imul
mov
mov
push
mov
jne
mov
cmpsb
push
and
xchg
sti
xchg
and
aas
fidivrs
add
xor
lods
cld
dec
and
je
out
sub
test
jae
xchg
rcl
jae
sub
inc
shlb
inc
adc
mov
lea
add
push
push
fstpl
xlat
or
pop
inc
mov
add
cmp
pushf
jno
dec
jle
insb
bound
sahf
or
aam
pop
push
imul
mov
pop
out
cli
sub
ret
arpl
movsl
or
shlb
sbbb
popf
mov
outsb
cmp
outsl
test
aad
repnz
pop
jmp
sub
mov
mov
sub
add
test
inc
pop
dec
jge
es
cs
or
jb
cmpsb
enter
mov
mov
fsubs
repz
int
in
lret
sub
stos
sub
aam
adc
movsb
roll
fdivl
jo
push
push
bound
hlt
fs
and
fiadds
jne
lcall
ss
sbb
xchg
pop
push
push
sarb
fcmovbe
and
push
push
rol
pop
inc
movsl
xchg
sbb
pusha
lods
and
inc
add
loope
cmp
enter
mov
lret
hlt
js
cmp
nop
fmuls
and
movsl
testl
cwtl
int3
iret
out
jle
xchg
cwtl
fisttpll
mov
dec
lea
cmp
sub
xor
test
xchg
push
dec
arpl
mov
sti
mov
mov
lock
gs
int3
mov
leave
pop
fisubrl
addr16
les
mov
popf
xchg
sub
and
push
jl
aam
xchg
cmp
cmp
cmp
ret
test
cld
inc
dec
mov
repz
push
int
inc
push
mov
enter
mov
or
mov
dec
stos
cmp
push
in
out
pop
out
add
ds
nop
lods
push
nop
xor
xchg
les
sbb
enter
push
cmp
lret
int
test
loope
mov
pop
fs
lock
icebp
aad
mov
lret
cmp
sub
pop
push
add
ficompl
dec
jmp
jmp
fs
push
cld
jmp
jb
shrb
xchg
fistpll
jbe
daa
enter
add
iret
push
mov
adcb
and
pop
popl
es
mov
lahf
popf
in
or
sahf
repz
rorl
rorl
xchg
jp
dec
adcl
mov
std
push
mov
test
jl
pop
mov
hlt
sahf
ret
mov
popf
sar
sbb
sbb
sbb
inc
pop
psubusw
jmp
xlat
imul
add
cmp
cwtl
add
pop
jne
mov
addr16
call
in
ds
adc
inc
ja
insb
outsl
sub
push
aas
outsb
pop
dec
scas
rcrb
mov
push
sti
das
iret
adc
sbb
mov
nop
mov
std
pop
sahf
dec
mov
es
push
sub
sub
daa
cmp
mov
call
in
cli
cmp
ret
aad
dec
lret
aad
adc
ds
stos
jg
fisubs
and
add
mov
in
and
loop
inc
adc
and
sbbl
data16
push
fs
int3
adcb
jg
lcall
in
mov
insl
push
pop
subl
lahf
clc
enter
mov
rolb
loopne
pop
push
icebp
aam
adc
ljmp
jno
pop
mov
inc
pop
fdivl
or
jb
xorb
mov
and
jb
xor
or
imul
rdtsc
int3
inc
push
ljmp
jno
mov
cmc
std
mov
popf
cmp
xor
push
sub
call
jle
add
mov
lahf
xchg
sti
mov
mov
mov
cld
and
insl
mov
dec
jo
pop
mov
loopne
dec
idiv
push
sbb
sub
sbb
sbb
lods
lods
add
in
in
inc
push
push
pop
xchg
dec
loope
in
inc
adc
es
loopne
stos
lret
sbb
cmp
inc
push
mov
repz
or
fcmovnb
lods
or
js
pop
dec
ficoms
jo
aam
shlb
add
or
add
stos
test
icebp
add
xlat
and
in
mov
or
mov
mov
or
mov
xchg
mov
rcll
inc
cwtl
call
outsb
andb
jp
mul
aaa
push
xadd
ja
repnz
dec
popf
pop
arpl
std
out
mov
clc
and
imul
in
jl
cli
or
xchg
fadd
push
shlb
arpl
imul
lahf
fldcw
mov
mov
cld
sbb
in
pop
scas
push
jle
push
sub
xchg
imul
xchg
mov
xchg
sub
and
sbb
mov
pop
movsb
pop
inc
les
jmp
or
fidivrs
ss
push
jg
jnp
mov
leave
test
imul
xor
cld
je
adc
mov
mov
rcll
pop
lret
add
mov
adc
xor
sbb
mov
stos
nop
pop
dec
in
push
and
test
add
popa
xchg
decl
sbb
push
clc
pop
mov
jnp
or
sbb
add
pop
hlt
adc
mov
aad
in
das
clc
scas
rol
incb
mov
xchg
popa
pop
call
mov
sbb
addr16
xlat
add
pop
jp
bound
inc
dec
mov
mov
add
ss
and
jle
jbe
fcomps
pop
mov
mov
mov
adc
add
sub
pop
rcl
mov
popf
add
ret
pop
jae
push
leave
cli
decl
aaa
cmp
inc
js
mov
popa
dec
jno
dec
mov
mov
bound
mov
cld
mov
negl
adc
jo
xor
sbb
cld
ljmp
xchg
sahf
xor
dec
pop
mov
leave
out
roll
lret
or
imul
xor
mov
and
sti
movsl
adc
dec
sbb
stos
ljmp
dec
pusha
sbb
xchg
lret
fcoml
rorl
sbb
ja
push
lret
icebp
stos
in
xor
jmp
add
lret
xchg
fcompl
pop
mov
fnstcw
sbb
pop
inc
mov
movsl
or
sbb
or
pop
inc
shll
dec
mov
mov
pop
jp
andb
outsl
pushf
and
sub
push
xchg
push
fisubl
psubq
pop
loopne
jno
test
adc
mov
cmp
adc
add
aam
test
add
ret
sbb
adc
popa
popf
in
fcomps
xor
popf
fsubrl
movq
ret
mov
mov
sbb
sub
or
adc
fdivrs
sub
nop
leave
and
fdivrs
out
mov
in
out
shlb
test
mov
roll
fldl
repz
jae
out
iret
adc
xchg
loopne,pt
int
scas
outsl
sub
pop
pusha
leave
in
hlt
add
xchg
mov
pand
stos
jbe
dec
jmp
gs
loopne
push
sbbb
in
mov
sbb
lahf
call
fbld
leave
stos
cmp
daa
jmp
cld
daa
add
cmp
push
das
in
push
daa
pop
add
outsl
dec
sbb
lcall
into
mov
mov
xchg
sahf
and
pop
dec
adc
pop
inc
xchg
shlb
lret
pop
pop
ds
mov
sbb
dec
mov
mov
push
inc
adc
fstpl
fiadds
stos
sarl
push
fadd
cli
pushf
lds
in
pop
in
ljmp
lds
pop
cmp
push
outsl
lret
pop
shl
movl
xchg
rorl
pop
sbb
sbb
pushl
repnz
pop
cmc
sarb
mov
bound
xchg
jmp
sub
sbb
aaa
fisubl
adc
out
xor
jb
cmpsl
pop
sub
addr16
xchg
ret
and
pusha
inc
pop
pop
sub
imul
xchg
stos
mov
pop
sub
ret
jl
xor
lods
sbb
dec
push
test
dec
or
xor
xor
out
pop
outsl
inc
out
mov
mov
dec
push
xchg
sub
push
cwtl
loope
mov
and
js
std
add
cld
loopne
xchg
sarl
and
sbb
pop
pop
ja
clc
sub
lret
sbb
adc
les
loop
sbbb
mov
fisubs
jp
cmp
cltd
cmp
add
dec
in
and
fsubrs
in
andb
shll
cmp
sub
fadds
outsb
loope
mov
stos
lock
jmp
or
xor
fnsave
mov
adc
hlt
mov
ja
mov
and
mov
xchg
mov
es
mov
insl
push
mov
movsl
aaa
test
lcall
aas
in
roll
sbb
dec
dec
mov
cmp
sub
cld
pop
or
ja
cmp
pusha
inc
std
add
xchg
pusha
pushf
add
scas
ja
cmp
xchg
sbbl
repnz
fptan
lods
in
fs
sub
cmp
das
into
call
andb
lds
lcall
pop
push
popl
jecxz
dec
mov
out
roll
mov
adc
adc
addr16
sbb
fpatan
loopne
sub
push
adc
or
roll
push
inc
or
ss
ja
xchg
inc
pop
mov
repz
xchg
push
pop
jne
inc
mov
roll
rol
movsb
mov
decl
hlt
sbbl
inc
es
inc
cmp
mov
subl
mov
loope
gs
cmpsl
sbb
outsb
sbb
jbe
gs
je
jno
andb
test
stos
dec
out
mov
sub
xchg
ret
in
fsubrl
or
adc
dec
cmp
sbb
jmp
lods
loop
rcrb
sbb
inc
stos
iret
dec
pop
mov
outsb
pop
stc
cwtl
jmp
xor
repnz
sub
mov
call
dec
push
xchg
adc
data16
or
sub
push
ja
in
ljmp
cmp
sub
leave
sub
cli
cld
ss
bound
push
daa
xchg
or
jl
daa
mov
mov
mov
push
xchg
mov
mov
repz
sbb
push
inc
cmpsb
negb
push
inc
outsl
adc
mov
pop
push
jge
adc
inc
movsl
jmp
add
mov
aad
mov
and
hlt
mov
and
addr16
adc
jbe
push
inc
mov
pop
adc
mov
pop
xchg
test
call
out
inc
mov
insl
mov
stos
xor
lods
mov
sub
lods
push
fpatan
rorl
sbb
dec
dec
add
sahf
cmc
or
stos
orl
mov
mov
xchg
stc
stos
or
int3
das
lock
test
cmp
je
scas
addl
mov
ds
sbb
lahf
adc
fs
leave
dec
xor
ja
dec
jg
popa
popa
andl
shl
data16
and
adc
outsl
ss
insb
in
int3
pushf
xor
stos
and
loope
inc
in
ficoml
adc
rclb
pop
xor
jl
test
mov
push
mov
add
dec
cmpsb
or
xor
dec
outsl
neg
rolb
cmp
and
ficompl
lods
imul
inc
leave
adc
addr16
arpl
cmpb
mov
in
pop
xchg
loop
inc
dec
inc
bound
dec
test
adc
jno,pt
stos
pop
inc
cmpsl
cmp
jg
ficompl
jbe
lock
xor
pop
icebp
pop
movsl
je
cs
mov
repz
push
cmp
dec
lret
sbbl
ljmp
adc
pop
xchg
xor
iret
dec
dec
loop
mov
popa
dec
lahf
lret
mov
jno
or
or
xorl
stos
mov
shl
orl
inc
outsb
out
push
imul
test
shrb
adc
shr
jle
pushw
test
pop
mov
ljmp
lret
jae
shll
lret
mov
add
mov
pop
mov
in
mov
test
push
movsb
test
daa
jbe
dec
or
push
std
sbb
cmp
sub
cwtl
xchg
sub
jnp
xlat
mov
into
out
je
or
jns
lods
xchg
push
push
scas
lods
lods
inc
lret
insl
outsb
aas
scas
push
and
jge
stc
push
lds
ret
push
lret
fisubs
push
mov
cmp
lods
fimuls
add
cmc
mov
jmp
and
push
pop
jne
or
xchg
cwtl
int3
jno
std
add
sar
mov
into
xchg
lock
fs
or
inc
jmp
int
out
ljmp
cmp
cmp
sahf
sub
repnz
xchg
xchg
fnsave
mov
xchg
aas
ss
and
lahf
mov
mov
bound
call
pop
sti
sti
ffree
mov
cmp
scas
mov
les
lea
ret
inc
fidivl
scas
pop
sbb
in
mov
mov
mov
lock
mov
cmpb
sub
mov
aam
add
jnp
push
pop
or
jmp
imul
hlt
pusha
mov
pop
mov
cs
inc
push
mov
push
mov
push
mov
jne
pop
fisubs
les
add
xlat
and
mov
lds
push
aad
inc
shlb
movsl
inc
dec
arpl
pop
insl
and
fisubrl
xor
dec
pop
mov
xchg
enter
inc
jbe
xlat
mov
push
add
cltd
jl
outsb
pop
mov
popa
pop
or
call
and
xchg
or
scas
sbb
test
jns
lock
bound
xchg
aaa
or
popf
fadds
adc
cmpsl
pop
add
rcrl
adc
fldl
and
aad
ljmp
jle
push
cmp
xlat
arpl
fistpll
push
movsl
dec
ret
xor
inc
ss
int3
ss
fstpt
jne
vpslld
inc
sbb
add
clc
dec
inc
or
adc
and
and
mov
inc
cmp
fists
xorps
mov
adc
pop
sbb
or
jmp
inc
adc
mov
inc
adc
lahf
sarb
push
xor
lcall
sahf
hlt
lret
in
stc
das
or
stos
aam
mov
sbb
mov
jmp
fimuls
xchg
shlb
or
mov
fcompl
pop
mov
lcall
dec
inc
jg
sub
xlat
dec
hlt
xchg
sbb
js
addr16
out
and
ja
adc
xor
stos
pop
xchg
xor
loopne
stc
pop
xchg
cmpsb
xchg
enter
pop
mov
lea
xchg
mov
adc
jmp
inc
cltd
ljmp
cmpsb
or
pop
cmp
nop
icebp
dec
adc
jecxz
mov
add
dec
inc
push
adc
adc
aas
and
in
aas
cmc
fmull
xchg
xchg
repz
fucomip
mov
adcb
dec
gs
fstpl
nop
aad
cmpsl
test
imul
out
pop
popf
xor
repz
aad
jle
je,pn
lea
or
sub
mov
fadds
mov
xor
push
gs
fstpt
pop
jno
test
out
pop
std
mov
orl
pop
jbe
add
dec
rcl
loop
add
jo
sub
or
fdivrl
mov
cmp
adc
mov
add
mov
mov
inc
bound
mov
test
hlt
loop
lds
iret
cmp
not
push
in
adc
subb
aas
inc
sbb
and
repz
sub
ss
add
adc
push
test
cmp
mov
adc
inc
das
mov
jle
fcmovne
jl
in
loope
call
mov
jmp
int
inc
inc
ficoms
or
inc
jmp
ret
bound
lahf
mov
fisttpl
popf
adc
fwait
lcall
jg
iret
lods
and
inc
xchg
mov
out
cmp
rcll
insl
out
shr
push
xchg
jp
lods
xchg
mov
xchg
mov
aaa
cmp
bound
push
pop
sbb
xor
mov
cmp
pop
insb
sbb
aaa
dec
ret
push
pop
call
stos
dec
jo
out
push
popf
es
sub
xor
cmpsb
xchg
mov
fstps
inc
adc
test
add
das
fistl
xchg
xor
push
fdiv
popa
mov
fisubrs
xchg
mov
or
aam
push
push
push
adc
push
pop
imul
xor
add
cwtl
sarb
sahf
mov
pop
jp
adc
jnp
cmpl
jcxz
and
push
pop
in
lret
call
sub
xchg
loope
arpl
cmp
push
loopne
mov
sbb
mulb
mov
jae
dec
mov
lds
add
sbb
enter
fadds
addr16
or
lods
push
push
inc
lret
in
add
lret
mov
xchg
add
or
notl
repz
rcr
mov
push
xor
call
nop
imul
imul
jmp
mov
sbb
lock
leave
or
notl
push
rol
movsb
xchg
push
dec
sub
and
rcrb
mov
adc
push
es
pushf
mov
and
cwtl
shlb
jnp
xchg
aaa
icebp
xor
imulb
pusha
scas
daa
aam
rorb
arpl
sbb
mov
xor
int
cmp
or
nop
mov
xchg
ret
jb
inc
bnd
aaa
sub
jle
out
cmp
rcrb
inc
stos
clc
inc
mov
mov
popf
bound
pop
mov
pop
push
inc
into
adc
clc
jg
dec
hlt
inc
repnz
js
mov
mov
pop
arpl
push
sub
lret
cmpsl
scas
cmp
xor
adc
cmpsl
inc
ds
sub
test
inc
jae
sbb
cmp
dec
cmp
test
out
push
fldcw
jnp
sarb
mov
das
jg
push
push
mov
mov
lds
es
lods
pushf
or
cmp
sbb
pop
repnz
ret
fwait
rcrb
addr16
jno
stos
fs
jae
xor
dec
daa
pop
int
enter
subl
xor
or
dec
imul
sub
jnp
aaa
and
fld
xchg
inc
hlt
pop
sub
ret
std
sbb
sbb
add
imul
int3
dec
outsb
adc
shrl
xor
mov
pop
addr16
xchg
cmp
fbstp
ja
jge
mov
push
popa
mov
sbb
cwtl
push
cmp
clc
push
sbbl
lret
mov
push
push
fildll
adc
adc
call
jnp
outsl
and
xchg
mov
mov
mov
pop
push
clc
mov
cmp
mov
std
inc
cmp
jnp
ficomps
mov
push
icebp
andl
ret
cmp
cmp
mov
loope
push
jb
xor
lods
dec
test
xlat
lahf
sub
imul
lods
add
pop
add
xchg
enter
or
adc
pop
cwtl
lea
pop
mov
dec
xor
adc
scas
out
jmp
gs
ljmp
dec
xlat
pop
mov
sbb
mov
fcomi
pop
add
xchg
dec
stos
imul
sub
jo
daa
stos
test
jge
cs
mov
push
push
test
mov
mov
mov
mov
icebp
or
shrl
in
aas
rol
xchg
xchg
sbb
cmp
inc
dec
lds
ret
push
pop
lds
mov
xchg
push
jno
clts
cmp
enter
or
mov
and
adc
cmp
jmp
fsts
leave
add
into
inc
sarb
push
adc
pop
add
outsb
push
movsl
test
aas
xor
out
insl
sti
cmp
aad
aam
push
clc
data16
enter
std
incl
mov
daa
xlat
cmpsl
fiadds
int
xchg
aad
inc
scas
filds
cmp
inc
adc
jp
mov
cmp
jno
lds
popa
shrb
add
sbb
pop
pop
aas
aad
pop
adc
imul
pop
dec
inc
or
popa
shll
enter
mull
jecxz
push
pop
aas
xchg
fistl
xor
inc
inc
imul
lahf
stos
sbb
push
pop
pop
add
push
cmp
imul
ja
les
adc
fnstenv
sbb
xor
jae
mov
jecxz
jmp
xor
dec
cld
cld
out
int
loope
pop
and
bound
dec
add
cmpsb
pop
nop
mov
fs
jp
fldcw
fbld
adc
es
lahf
out
mov
stos
cmpsl
push
loope
lcall
shll
sbb
not
lea
jle
sti
shrl
add
xor
das
inc
inc
cld
addb
push
stos
aas
mov
clc
push
mov
xor
pop
loop
outsb
jl
sbb
sub
pop
arpl
ljmp
cmp
shlb
insl
mov
enter
xor
scas
fdivrs
repz
dec
ss
cs
add
popf
stos
cld
ljmp
adc
iret
inc
push
enter
and
imul
inc
nop
repz
ds
sbb
inc
push
inc
mov
pop
sub
xor
iret
jg
pop
sbb
ss
scas
push
shll
or
push
pop
adc
sub
fistl
jo
adc
adcl
jne
mov
mov
movsl
and
pop
pop
mov
stos
cwtl
xor
inc
jae
pop
lahf
outsl
and
push
ljmp
inc
jno
aam
add
inc
mov
xchg
xor
jg
fstpt
sahf
dec
sbb
aad
jne
fs
sbb
push
mov
es
aas
ret
dec
inc
loop
rcr
lock
js
mov
cmp
add
jecxz
mov
dec
xchg
mov
inc
xchg
hlt
arpl
and
outsl
aas
mov
aam
mov
mov
mov
mov
dec
mov
aaa
movsl
inc
loop
mov
lahf
icebp
push
pusha
sub
inc
cli
out
mov
inc
sbb
nop
push
lods
cmp
push
aad
adc
cmp
aas
mov
lods
cmp
cmp
mov
in
xchg
add
rorl
cmc
jnp
gs
push
pop
aaa
pop
bound
fwait
xchg
mov
xor
push
inc
gs
jmp
mov
bound
push
test
es
jg
ljmp
pop
clc
xor
and
inc
imul
cwtl
sbb
push
stos
add
ds
inc
or
mov
jl
loope
imul
rol
js
or
lcall
xchg
loope
arpl
sub
push
adc
sbb
push
or
pop
sbbb
lcall
call
pop
insb
jo
in
shll
cwtl
pop
xlat
xor
repz
fcoml
outsb
movsb
addr16
jns
fists
loopne
in
out
xchg
je
inc
push
sub
cmp
jno
jmp
rcrl
xor
mov
jnp
popl
bound
push
shl
sbb
js
pop
shlb
mov
inc
incb
xchg
popa
shlb
popa
daa
sbb
je
js
sub
push
aad
jno
std
fdiv
mov
jne
call
insl
push
out
loopne
dec
ss
mov
mov
xlat
pop
rclb
push
lods
push
mov
pop
cmp
sbb
jno
nop
adc
xor
popf
mov
xchg
outsl
fsts
testb
test
aam
xchg
cmp
mov
jmp
nop
fwait
mov
in
in
inc
insb
rsqrtps
mov
lods
iret
cmp
pop
push
mov
or
loope
aad
fxam
sbb
movsb
mov
packuswb
jo
pushf
cmc
inc
xor
or
jp
pop
push
stc
xchg
test
shll
mov
add
lds
bound
xor
adc
repnz
or
mov
mov
je
int3
adc
cltd
movsl
xchg
and
mov
pop
daa
pop
outsl
dec
fsubrs
gs
jne
loop
cli
xchg
je
fiaddl
or
icebp
jmp
arpl
dec
repnz
mov
test
xchg
mov
mov
out
pop
nop
rcrb
jne
add
fs
loope
push
and
cmp
pop
orl
jns
cwtl
fsubl
outsl
or
repz
push
dec
jmp
js
sbb
ds
shll
or
cmp
xor
or
inc
jecxz
fists
or
dec
js
insl
sbb
enter
rorl
aam
ficompl
fmul
leave
push
jmp
insl
mov
idivb
fs
mov
imul
lock
cmc
jp
mov
dec
pop
dec
sbb
pop
movaps
loop
xor
add
rclb
inc
or
push
dec
shrl
xchg
sbbl
inc
mov
cmc
cs
xchg
pop
jne
sub
sbb
pop
lods
lock
jp
xor
enter
andl
cmp
jne
mov
mov
mov
popa
cli
imul
xlat
mov
push
adc
movsb
js
or
call
cltd
stc
pop
xor
dec
enter
repz
pop
cmp
jo
xchg
sub
mov
sbb
in
inc
pop
inc
xchg
leave
lock
lea
mov
aad
jl
mov
fisubl
cmp
aaa
ds
adc
ss
jno
pop
mov
rorl
adc
insl
jecxz
les
arpl
pop
stos
repz
push
les
in
inc
pop
mov
mov
test
sbb
fs
or
cs
add
sbbb
in
and
add
dec
sarb
push
pop
out
sub
push
or
fwait
outsb
pop
mov
je
push
lods
sti
xlat
sub
pop
mov
aaa
sysret
out
or
imul
leave
out
in
mov
dec
testb
sub
outsl
lcall
test
fs
sub
jo
cmp
loope
in
rcrb
mov
out
push
jnp
jg
hlt
dec
or
mov
sub
push
and
lods
mov
jecxz
sub
xchg
leave
outsb
cmp
push
lock
mov
cmpsb
outsl
mov
mov
fwait
cmpsb
lea
aas
leave
jae
nop
sarb
jae
insb
mov
xor
jp
shlb
ret
mov
dec
mov
xchg
icebp
xor
push
or
mov
cmp
xchg
test
stos
bound
addr16
xchg
test
and
stos
or
sub
shrl
mov
or
out
rolb
xchg
push
pop
data16
scas
jg
dec
ds
lods
jnp
pop
sub
clc
in
lds
dec
xchg
stos
sub
sub
pop
fdivrp
cs
mov
sbb
pop
lahf
mov
sbb
mov
test
lods
push
xorl
jp
imul
mov
sub
add
mov
adc
push
inc
jns
fwait
xchg
jns
hlt
enter
mov
pop
inc
fisubrl
adc
and
and
jp
xchg
hlt
xor
pop
popa
lods
jle
or
fnsave
adc
mov
inc
popf
or
stos
add
sbb
cs
xlat
mov
fistpll
std
cmp
lods
popa
imul
shrl
adc
adc
lret
and
push
pop
loop
jmp
ss
test
shl
aam
jg
or
out
pop
mov
sbb
xor
sbb
fdivrl
jecxz
ret
popa
xchg
mov
bound
pop
jecxz
ret
push
in
dec
in
push
test
pushf
dec
rclb
stos
sahf
push
push
fld
inc
push
inc
push
add
lret
outsb
lock
dec
inc
scas
mov
pop
pop
pop
push
xor
loopne
mov
out
into
and
iret
xchg
mov
in
stos
xchg
inc
xchg
out
push
adc
sbb
icebp
aad
loopne
das
cmp
popf
scas
loope
pushf
adc
cmpl
lock
and
bound
cmpsl
lahf
jle
adc
popa
cs
mov
pusha
pop
sub
xlat
ja
lret
fnsave
fdivp
loopne
or
mov
jno
xchg
or
fcoms
mov
aas
cmpsl
or
xchg
adc
imul
shrb
add
roll
mov
pop
sub
int
sub
shrl
dec
fisubrs
lock
adc
dec
leave
cwtl
ds
pop
xchg
xchg
push
sub
aad
dec
mov
popf
inc
add
jae
mov
aam
scas
mov
cmpsl
adc
roll
test
xor
in
add
int3
mov
fwait
pushf
lock
pop
adc
int3
mov
nop
adc
fcoms
and
je
xchg
insb
sub
aad
sbb
mov
sbb
pusha
or
pushl
aad
repnz
js
sub
aaa
push
and
lock
orb
dec
cwtl
mov
push
aad
mov
jg
xlat
or
jge
imul
mov
js
adc
stos
or
mov
mov
mov
push
adc
fiadds
aad
sub
jp
cmp
inc
mov
sbb
lods
movsb
sbb
sub
lahf
addr16
push
push
arpl
sub
shl
lcall
in
lods
cmc
inc
or
lock
js
mov
xchg
inc
sub
out
jbe
or
hlt
mov
pop
push
dec
mov
ror
lret
inc
hlt
push
fildll
push
push
fsubrl
repz
mov
daa
scas
cmp
test
nop
add
mov
cmp
cmp
mov
inc
push
cmp
into
stc
rcrl
lea
cmp
imul
cmp
and
ljmp
imul
sahf
ss
rcr
pop
sbb
lods
adc
xor
repnz
cmpsl
sbb
or
add
jecxz
cld
push
push
pusha
lea
or
lods
sub
fwait
cmpsl
insl
adc
inc
sbb
dec
outsb
mov
icebp
xlat
lcall
cli
data16
daa
imul
mov
nop
test
ljmp
push
rcl
adc
pusha
xor
rcl
ss
dec
int3
out
xchg
rol
add
xchg
pop
push
xchg
xchg
inc
jb
test
clc
mov
push
outsb
ror
clc
mov
es
fists
orl
decb
or
dec
push
mov
push
lcall
jno
out
inc
rcrb
leave
pop
sub
bound
inc
fimuls
aaa
mov
mov
cli
mov
imul
push
dec
not
jo
push
and
dec
aas
jbe
mov
xchg
aaa
jbe
sbb
out
into
imul
xchg
push
mov
add
bound
sub
neg
mov
inc
or
fs
xchg
jo
test
push
lar
jno
mov
leave
dec
add
jp
and
xchg
negl
test
xlat
lret
enter
and
cmpsl
mov
and
push
rol
adc
xor
into
mov
lret
cli
mov
mov
cmpb
cmp
mov
mov
aam
xchg
sbb
xor
fcoms
pusha
mov
sub
sub
shrl
js
aam
mov
bound
stos
adc
xchg
push
sub
cmp
jo
arpl
scas
lods
or
jnp
push
ds
decb
push
lds
xlat
pusha
add
sbbb
and
popa
lahf
inc
add
mov
inc
pop
or
xor
xchg
xchg
jmp
cli
lods
xchg
hlt
inc
adc
and
xchg
cmpsb
push
cwtl
repnz
pusha
inc
jle
outsb
dec
push
lock
jno
daa
mov
test
mov
lds
dec
or
lods
out
xor
cmp
mov
js
dec
xchg
loop
or
push
and
sub
out
imul
mov
mov
das
and
jecxz
leave
sbb
rcrl
pop
test
rolb
shrl
cmp
in
gs
lock
sub
push
lds
pusha
sbb
xlat
mov
jg
mov
dec
rcl
or
push
mov
stos
lds
add
sbb
mov
xchg
sahf
sub
in
mov
das
push
inc
jns
xor
out
jo
sbb
pop
mov
bound
vpsubq
mov
dec
leave
movsl
shll
dec
and
cli
sub
ss
mov
jg
loop
and
mov
cmp
out
test
xchg
rorl
mov
jl
mov
das
es
call
sub
call
xlat
push
mov
in
cmpsb
xlat
cld
sbb
jnp
call
imul
jle
lds
push
sbb
std
pop
jae
ja
in
outsb
push
cmc
outsb
jb
ljmp
xor
dec
test
sar
mov
pop
aas
insl
shlb
imul
movsb
outsl
adc
and
dec
adc
loop
pop
mov
adc
jae
notb
mov
jg
fdivrl
adc
dec
ss
cltd
andb
shll
repnz
gs
or
adc
mov
dec
hlt
mov
gs
cwtl
jge
or
shl
or
out
pop
clc
add
fdivs
loope
rorb
daa
jnp
add
cmp
and
xchg
fsubs
andl
adc
iret
push
pusha
cmp
movsb
mov
xchg
repnz
inc
xor
sub
std
jb
and
dec
lods
stc
xchg
mov
jl
je
jp
rorl
sti
loopne
daa
adc
int
push
inc
adc
shll
fistl
lret
pop
fdivs
cmp
cmp
cmc
cli
icebp
mov
add
sub
imul
sub
lock
mov
xchg
jl
lods
inc
push
fdivl
test
cmp
pop
addr16
mov
or
faddl
mov
int3
call
xlat
xchg
jmp
or
mov
or
popa
popa
jle
fcoms
sub
jno
mov
mov
push
and
fwait
mov
or
pop
stos
imul
test
add
dec
insl
mov
inc
pop
subb
push
aas
xor
cmpsl
jo
jne
mov
decl
mov
fdivrs
dec
xchg
addr16
aas
leave
test
xchg
dec
packsswb
iret
cmpsl
cmpsl
addl
mov
test
bound
movb
or
pushf
xor
xchg
hlt
mov
jmp
add
push
rcll
lods
enter
push
mov
jno
mov
mov
ret
sub
loope
lock
cmp
test
outsb
aas
test
push
popa
or
lret
and
and
push
pushf
or
mov
test
adc
scas
or
pop
xorl
sbb
fimull
sahf
and
jge
popa
mov
push
andb
int3
jo
add
gs
out
mov
fnstenv
adc
addb
sbb
push
inc
mov
xchg
loope
insb
and
out
push
jno
fs
out
dec
push
and
ficoms
sti
pop
ja
push
bound
mov
loopew
add
push
das
dec
decl
add
adc
mov
xchg
cmp
ret
popf
or
inc
cmp
cltd
pop
in
cmp
fimull
test
aas
inc
mov
mov
jge
leave
xchg
pop
adcl
test
dec
imul
fldenv
jne
mov
adc
mov
xchg
mov
pop
orl
mov
or
dec
mov
loopne
repnz
and
shll
imul
jl
subl
shlb
pop
sbb
lret
leave
dec
cmpsb
sbb
xor
imull
cltd
lret
lods
push
push
adc
push
scas
hlt
ret
jmp
add
addr16
mov
push
stos
jp
jle
adc
inc
jecxz
fxch
loop
scas
mov
out
jmp
or
inc
and
cmp
add
movsl
and
push
add
and
xor
sbb
test
inc
ror
inc
and
imul
pop
and
sti
out
in
imul
cmpsl
xchg
pop
sbb
add
arpl
outsl
or
fistpl
xchg
cli
lods
pop
pop
sti
cmp
inc
sbb
fnsave
xchg
test
mov
sbb
mov
ret
lcall
cmp
mov
or
adc
cmp
push
xorl
push
push
dec
mov
repz
ja
and
push
ljmp
rcll
aam
mov
and
push
rep
dec
insl
ret
rcll
push
or
int3
loopne
xchg
mov
push
xor
sub
lods
mov
ljmp
and
xchg
divb
insb
jmp
sbb
xchg
jnp
mov
nop
dec
fmulp
dec
int
push
jae
add
int3
out
mov
and
lods
out
cmp
fucompp
push
add
pop
xchg
cmpsb
rol
mov
add
push
rcl
sub
jae
ss
xchg
mov
mov
cmp
push
fnstcw
pop
nop
shr
es
mov
iret
mov
xchg
jecxz
shrl
sub
mov
cld
mov
inc
out
adc
dec
jns
testl
or
sbb
xor
jns
repz
mov
sub
ret
and
mov
mov
lods
xorl
pop
lret
pop
jecxz
sub
fs
jge
cli
jl
adc
xor
pop
adc
nop
add
stc
int
pusha
je
test
add
add
adc
mov
daa
push
stc
pop
fcoml
fcmovnbe
orb
movsl
sbb
mov
inc
cltd
bound
insl
jp
cli
cmp
jp
jecxz
outsb
pop
xchg
adc
ds
test
dec
add
loop
sub
cmp
lret
leave
or
cmp
and
jo
mov
mov
into
xchg
push
cmp
cmp
repz
repnz
jnp
push
movsb
out
inc
shll
fwait
stos
jo
fsub
roll
adc
xor
jl
mov
xorl
gs
cwtl
in
test
out
cmp
mov
lcall
and
sbb
sub
shlb
loopne
cmpb
cmp
cmp
pop
aad
sub
or
xor
lods
dec
push
mov
mov
jae
out
pop
mov
cwtl
mov
int
dec
ss
arpl
roll
add
into
stc
jl
dec
lods
pop
sub
and
fdivrs
ds
out
add
pop
mov
or
daa
or
push
add
mov
adc
xor
add
dec
ds
jbe
add
es
or
in
sahf
mov
mov
sbb
push
std
sub
push
lret
stc
dec
cmp
push
add
cmp
mov
repnz
inc
pop
inc
cltd
fdivrs
jecxz
inc
adc
ljmp
or
and
fst
cmp
cmp
cmp
or
sbb
cs
mov
push
negl
xor
loope
jecxz
jo
push
lret
inc
xchg
inc
scas
dec
movsl
mov
mov
sub
lods
mov
out
bswap
fidivrl
xchg
xchg
in
ss
cmpsb
and
xor
adc
mov
jle
clc
add
sub
ss
xchg
and
mov
xchg
dec
lock
adc
lds
xchg
xchg
mov
inc
lock
and
in
stos
int
xor
xor
cmc
push
iret
mov
mov
fcmovnu
mov
cmp
mov
xchg
push
mov
push
jmp
pop
test
clc
cmp
or
fistpll
sbb
aam
dec
push
es
cmp
and
pop
xchg
test
movsb
and
add
xor
sub
and
out
sub
mov
mov
shll
xor
les
std
xchg
jecxz
hlt
push
mov
ja
aaa
ret
pop
pop
sbb
dec
xchg
sub
lahf
push
push
mov
xor
xchg
mov
pop
lcall
mov
mov
jle
test
jo
in
xchg
mov
adc
dec
aam
dec
mov
cmp
popa
test
sub
lcall
test
and
dec
mov
aaa
mov
dec
sub
add
add
cmc
les
mov
test
cmp
mov
jecxz
jmp
xor
inc
arpl
iret
and
pusha
nop
sbb
mov
int3
enter
push
jecxz
push
pusha
icebp
cmpsb
mov
jbe
std
jae
xlat
mov
ret
mov
call
push
add
xchg
loop
bound
inc
sub
out
stos
xor
pop
lea
mov
sub
pop
cwtl
xchg
aad
aad
sub
outsb
in
call
ret
jp
fdivs
pop
stos
inc
jl
pop
and
jnp
pop
das
dec
imul
lock
icebp
dec
aaa
ss
pop
mov
loopne
dec
aad
fwait
push
out
loope
push
pop
clc
rorl
xchg
lahf
pop
outsb
add
mov
int
lahf
push
sbb
sbb
mov
xchg
ss
sub
ret
mov
fbld
inc
and
xor
push
insb
cmp
aaa
clc
or
xchg
mov
adc
jns
dec
sub
xor
mov
sub
imul
xchg
out
and
pop
sbb
cmp
push
popf
mov
dec
mov
push
dec
in
nop
lods
arpl
inc
lods
arpl
inc
and
xor
pop
lahf
sahf
xor
or
pop
xlat
inc
mov
inc
inc
or
sti
aas
fs
test
push
imul
in
lods
add
mov
inc
adc
xchg
push
mov
jmp
arpl
pop
mov
push
movsl
daa
dec
out
decb
addr16
scas
mov
jg
mov
or
stos
imull
stc
push
pop
adc
arpl
lea
mov
pop
subb
mov
xor
cmpsl
dec
scas
in
in
scas
insl
imul
outsb
cmpsb
push
cmp
test
jb
mov
insl
jge
movsl
or
lods
out
mov
cld
aaa
call
out
jae
pop
and
clc
adc
lahf
xchg
mov
in
or
sbb
lods
lret
add
cmp
lcall
out
mov
ret
cmp
inc
scas
push
sbb
sub
jmp
cli
test
push
xor
or
cmpsb
dec
mov
subb
xchg
sahf
imul
outsl
pop
fwait
test
in
jbe
fldl
fldenv
ja
fisttpll
fs
jp
js
lahf
shrb
test
js
cmc
sbb
and
je
enter
in
shrl
int
mov
pop
movsl
int
js
lret
out
xor
andl
popf
ss
add
ljmp
pop
addr16
mov
xor
and
pop
in
aad
cmpsb
nop
cwtl
jp
inc
cmp
cmp
das
loope
xor
loopne
scas
aaa
push
push
jno
jmp
aam
adc
mov
xor
sar
push
scas
notb
push
std
in
iret
in
repnz
ficomps
test
dec
mov
test
repz
outsb
xor
cmp
call
mov
mov
or
adc
or
loope
mov
sub
stos
xchg
sahf
bound
mov
xlat
add
adc
aad
xor
outsl
add
lods
xchg
cmpsb
stos
aad
mov
or
aam
mov
lods
out
dec
repz
xchg
cmc
and
pop
mov
insl
test
cmpsb
add
mov
jecxz
ror
or
inc
outsb
cmp
pop
push
out
into
xor
aaa
push
mov
out
sar
in
lock
subb
push
jbe
test
push
mov
sub
pusha
insb
xor
dec
xor
mov
pop
filds
filds
loope
leave
and
cmp
movl
jecxz
sysexit
jns
lods
sarl
mov
out
jle
ds
out
xchg
push
leave
inc
incb
daa
xchg
mov
popa
ds
cs
enter
stc
leave
sbb
lret
enter
cmp
inc
push
pop
clc
fisttps
and
cmp
mov
call
jbe
pushf
pop
call
add
mov
cli
xchg
sbb
call
dec
fs
pop
xchg
fistpll
dec
stos
pop
movb
test
test
ficoml
jmp
sub
lea
jne
cmp
pop
or
cmp
test
jnp
mov
inc
pop
inc
inc
or
divl
cmp
jns
mov
fwait
cwtl
sub
push
cli
mov
jnp
insl
cmpsl
pop
mov
add
mov
jmp
addb
mov
fdivl
and
inc
hlt
cli
adc
in
push
clc
clc
sub
cmc
cmp
into
dec
sbb
popf
sti
jns
into
mov
mov
cmpsl
mov
xor
push
add
sub
into
cmpsb
das
daa
dec
cmp
adc
lahf
dec
ja
mov
in
shll
jle
pop
cmpb
call
pop
aas
daa
jecxz
rorl
lret
mov
jne
nop
cmp
cmpsb
cmpsb
out
ret
repz
mov
push
and
bnd
lcall
lods
adc
mov
push
imul
inc
aaa
call
add
std
push
jns,pt
inc
clc
xchg
mov
xchg
shrl
mov
lds
push
mov
dec
jnp
out
je
cltd
pop
inc
test
daa
inc
insb
imul
sti
cs
aam
inc
shll
mulb
decb
mov
sub
xlat
and
out
lret
dec
cmp
in
int3
inc
popa
or
sub
jmp
lock
fstpt
popa
pusha
lds
mov
mov
dec
xor
lcall
push
inc
fnstsw
cmp
push
std
lods
jne
inc
shlb
push
rcll
cmp
cmp
in
out
xor
iret
test
push
and
ret
sar
lea
xor
adc
lods
enter
add
aaa
inc
cmc
pop
in
and
dec
dec
insl
test
or
mov
insl
pusha
inc
cmp
push
mov
add
js
jnp
pop
jno
rcrl
in
lea
cmp
cli
xchg
shll
jno
in
inc
test
push
push
std
shlb
orl
and
mov
dec
in
call
lock
or
cmp
sahf
shr
push
stos
incb
rorl
push
xchg
jl
iret
sbb
mov
icebp
xchg
jno
adc
or
jge
adc
adc
pop
sbb
rcrb
jne
sub
sti
adc
add
pop
jmp
mov
pop
lret
popa
xor
test
jne
je
cli
sub
dec
mov
in
cmp
idiv
pop
mov
xchg
mov
dec
xchg
icebp
fidivrl
add
xchg
pop
aam
or
int3
jle
nop
lock
stos
sti
push
pop
das
notl
enter
stc
sbb
mov
fstp
test
and
mov
cmpsb
lahf
icebp
mov
inc
in
sbb
push
push
movsb
adc
inc
push
adc
xchg
push
mov
xchg
cmp
adc
inc
xchg
cmp
mov
mov
test
aam
pop
or
lock
dec
addr16
mov
shlb
dec
and
leave
sub
js
mov
and
xor
push
data16
cmp
adc
mov
testl
pop
in
stos
loop
jg
pop
mov
pushf
xchg
and
mov
mov
mov
cltd
pop
rol
mov
stos
repz
jne
hlt
ja
inc
fldenv
outsb
pop
sub
mov
or
mov
int3
sbb
test
xchg
test
mov
outsb
xor
insl
repz
add
add
pop
sti
lea
subl
stos
add
or
sbb
sub
sbb
push
ds
cmp
and
in
stc
sub
push
in
repz
adc
cmp
xor
fdivrs
push
aaa
fisubrl
inc
shrb
cmpsb
mov
push
outsl
push
sub
pop
lcall
add
aad
jae
jns
gs
iret
ljmp
dec
inc
adc
outsb
push
into
inc
roll
sbb
test
je
cmpsb
push
or
mov
pop
insl
shlb
test
adc
fimuls
push
adc
cltd
mov
imull
stos
mov
rcrb
in
add
dec
hlt
js
jp
imul
in
push
sub
mov
loop
cmp
je
push
nop
ficoms
pop
push
add
xor
repz
enter
inc
and
jae
popf
mov
mov
cs
sbb
rolb
lods
imul
mov
xlat
cwtl
lahf
pop
xchg
adc
lds
jnp
rorb
test
dec
jo
add
xor
and
pop
xchg
in
inc
mov
roll
lods
insb
sahf
sarb
adc
dec
xchg
mov
push
insb
mov
js
daa
es
aaa
sti
stos
out
push
xchg
je
or
xor
pop
push
daa
fbstp
stos
out
leave
or
ret
pop
cli
jb
xchg
adc
add
jmp
jns
repz
dec
push
lret
xchg
fnstcw
int3
mov
stos
ftst
pop
or
adc
out
pop
cli
and
or
int3
ds
inc
repz
mov
and
cmpl
xor
adc
ret
xor
jg
popf
cltd
fwait
ret
inc
rclb
mov
out
enter
mov
aas
add
pop
dec
cmpsb
mov
push
loope
cmp
fldl
lock
xor
xchg
pop
inc
jns
shrb
sarb
lock
pop
sbb
rcll
xchg
enter
dec
mov
mov
xchg
icebp
or
jle
jecxz
aas
add
aad
ficoms
imul
shrl
repnz
push
adc
adc
cmpl
pushf
fwait
and
jp
jg
test
sbb
jle
aaa
iret
cwtl
dec
xlat
flds
addr16
or
add
lret
enter
xchg
aam
enter
sub
out
inc
sahf
test
jmp
mov
jp
pop
rcrb
mov
sbb
js,pn
vmovd
leave
sub
and
clc
lock
lahf
jle
ljmp
push
mov
ss
fcmovnbe
leave
sbb
cltd
loope
cltd
mov
pop
ja
sub
fadds
cmp
dec
pop
cltd
inc
push
pop
xchg
in
shrb
xlat
aam
jbe
sbb
or
int3
mov
adc
in
lret
call
mov
mov
cmp
xchg
push
mov
jnp
mov
cmp
es
and
pop
imul
or
jmp
pop
inc
pop
lock
mov
add
pop
or
cltd
jmp
push
inc
pop
pop
gs
pop
mov
jg
push
test
pusha
sub
leave
or
out
addr16
xor
insb
lock
fbstp
testb
push
mov
and
mov
fstpl
sar
lcall
scas
cmp
in
loopne
repnz
in
jno
clc
fwait
cmp
fwait
dec
mov
jnp
out
stos
fsubrp
and
iret
sbb
mov
daa
push
stos
xchg
or
xor
adc
sbb
stc
test
ffreep
pop
adc
aad
testl
test
fwait
sbb
xor
movsl
rcrl
xorl
mov
outsb
popa
or
push
lcall
xchg
push
xor
scas
sub
rcrb
stc
adc
outsb
mov
xor
xorb
cmp
pop
or
mov
push
push
jp
nop
pop
xchg
outsb
rorl
pushf
pop
inc
stc
stos
pop
and
xchg
pop
pop
jns
inc
ljmp
jle
loop
xchg
cmpsl
and
insb
daa
lods
ljmp
out
jge
scas
adcb
shr
ljmp
push
and
xor
sub
push
xor
notb
sub
das
jo
sub
pop
fs
jl
pop
sar
mov
pushf
push
ret
popf
int
jo
push
das
sahf
cmpl
mov
outsl
inc
repnz
add
in
adc
mov
sbb
push
movmskps
pop
xor
fincstp
jbe
xor
maxps
dec
filds
lods
enter
sbb
test
jmp
js
inc
dec
jg
call
loope
mov
jne
sti
push
shl
cmc
lds
mov
mov
push
in
mov
sbb
adc
fmul
adc
and
in
xchg
arpl
xorb
and
cmp
mov
push
xchg
jb
sub
xchg
loopne
or
xor
push
push
out
lahf
ficomps
jnp
jne
cmp
jb
daa
xchg
sets
mov
add
pop
jb
stos
lea
aas
pushf
inc
rcr
lret
xchg
shrl
insl
inc
imul
arpl
push
push
aas
cmp
pop
fwait
lret
lcall
test
xchg
pop
sbb
lcall
cmpsl
ret
lds
stos
into
jg
dec
sub
inc
mov
ret
in
cmc
or
mov
outsl
mov
or
xchg
sarb
xor
rcr
bound
mov
push
sub
repnz
mov
adc
aas
adc
rorb
xchg
test
leave
dec
add
in
inc
repnz
lahf
in
add
cmpl
movhps
into
xor
pop
stos
push
and
lea
stos
scas
pop
jo
icebp
imul
outsl
or
push
shlb
adc
mov
imul
cmpsb
push
push
mov
test
in
dec
push
pop
rcrl
and
fwait
dec
movsl
aad
nop
push
xor
hlt
push
xchg
mov
pop
adc
ror
xchg
add
adc
sub
sbb
push
mov
movsl
call
ficoms
xlat
ret
insb
or
dec
es
mov
ja
sbb
cmp
repnz
ret
fcoms
xor
xchg
sbb
imul
lods
xchg
mov
rolb
lret
push
pop
fdivl
lds
fidivrl
or
or
repz
and
xor
lock
push
mov
jl
adc
pop
jo
mov
decb
addr16
dec
mov
pop
ret
xchg
mov
cmp
push
pusha
inc
out
js
and
insb
adc
pop
pop
ja
cmp
aaa
shr
outsl
cmpsb
cwtl
adc
aas
mulb
outsl
into
outsb
test
hlt
rol
jne
fdivrp
rol
es
mov
repz
imul
iret
test
mov
insl
aam
arpl
pushf
scas
mov
xchg
adc
shrl
shl
popf
cmpsl
subl
pusha
pop
sbb
sbb
and
lods
mov
push
or
push
lcall
rorl
add
mov
in
or
cmpsl
in
fnstsw
roll
das
inc
fnsetpm(287
mov
xlat
inc
int
out
les
dec
sub
lods
lret
pop
fldenv
xor
mov
dec
fwait
cli
or
cmp
cmpsl
push
jle
or
sub
push
in
push
iret
addl
insb
xor
jns
lahf
mov
mov
mov
outsb
cmp
fiadds
dec
xor
stos
inc
pop
scas
ja
sbbb
pop
lods
outsl
inc
cmc
adc
cmp
xchg
sub
enter
js
nop
sub
pop
das
sub
or
ror
inc
ret
fiaddl
movl
ds
xor
inc
dec
push
shrb
bound
icebp
stos
shrl
lods
test
mov
add
lret
icebp
pop
iret
fsub
push
aas
sahf
jge
shll
and
call
or
adc
adc
sub
outsl
jp
loopne
aam
adc
test
add
mov
sbb
sahf
and
jae
sahf
and
call
adc
int
xlat
add
ds
jp
lret
addb
imul
push
test
ljmp
or
xchg
leave
sbb
dec
mov
mov
xchg
decl
pop
rcrb
out
dec
inc
int
add
dec
mov
mov
stos
sub
imul
dec
xor
pop
mov
mov
mov
push
xchg
push
repnz
imul
test
inc
call
lahf
fisubrl
stos
lods
push
inc
imul
and
shlb
mov
ffreep
cmpxchg
inc
lcall
or
xchg
les
xor
shll
outsl
mov
js
ret
stc
add
push
mov
mov
pop
mov
gs
cli
jg
xor
cmp
mov
and
std
push
xchg
orl
jecxz
mov
pop
mov
scas
out
in
stc
add
fnstcw
sbb
pop
push
push
xchg
adc
sti
pop
in
and
sub
mov
push
negl
xor
lods
xchg
add
xor
in
stos
out
insb
inc
pusha
jl
mov
inc
lods
or
cmp
sbb
mov
in
mov
mov
popf
mov
adc
das
jmp
push
cmp
lret
es
mov
xchg
pop
hlt
add
pop
sbb
sti
sub
les
ret
pushf
shr
dec
or
int3
push
xchg
cmpsl
dec
xor
out
aam
sub
ret
or
xchg
sbb
pop
cs
pop
add
jp
cwtl
mov
cmc
cwtl
push
ljmp
jle
jmp
test
dec
cmp
dec
sub
repz
add
test
add
insb
jo
mov
cmp
jle
push
mov
addr16
outsl
sahf
sub
xor
xchg
ljmp
xchg
cmpsb
xor
lret
push
jne
and
cltd
mov
clc
fcmovnu
add
fdivrs
inc
sbb
pop
mov
and
aas
push
outsl
pop
inc
stc
aaa
leave
dec
jmp
adc
dec
xchg
ror
lret
outsb
fsubs
icebp
iret
add
ss
out
lret
clc
rcl
lret
jge
push
fsubrl
das
sbb
sub
test
sub
sbb
mov
sub
mov
pop
clc
adc
in
mov
sub
mov
mov
push
insb
mov
push
or
pop
rclb
repz
dec
mov
jns
fs
aam
les
shlb
fstpl
pop
push
imul
or
mov
mov
push
add
mov
inc
xchg
sub
push
inc
cld
hlt
jle
icebp
xor
in
jo
fistpl
dec
lahf
push
jne
loop
xor
testl
pop
cmpsl
cli
cld
je,pn
in
fisttpll
test
adc
iret
icebp
sbbl
rclb
fs
cld
push
pop
dec
fidivs
mov
loopne
adc
inc
jmp
pop
mov
test
cmpsl
int
or
xor
stos
loopne
test
mov
repnz
lock
jecxz
pusha
lods
adc
aad
adc
cmp
test
pop
gs
int3
or
xor
push
add
dec
leave
add
out
ud1
out
jmp
test
jns
adc
mov
sbb
adc
adc
add
push
popa
call
lods
push
sbb
andb
xchg
aas
pop
fs
scas
aas
scas
xchg
pushf
movsl
mov
and
jecxz
lea
dec
in
scas
pop
add
add
xor
pop
jno
jbe
cmpsl
ja
and
sub
pusha
pop
xchg
das
loope
cmc
push
or
and
cli
out
cmp
repnz
jl
dec
out
xchg
jo
inc
dec
jge
xor
cmp
fmuls
fwait
idivl
out
and
cld
notl
mov
je
punpckldq
sub
clc
pop
or
fnstcw
and
das
add
or
rcll
aaa
jae
scas
pop
inc
jle
scas
pop
mov
mov
in
cltd
mov
dec
push
int3
lds
mov
mov
xchg
jnp
mov
add
lods
jb
and
xchg
in
jne
xchg
xor
pusha
pop
push
mov
sti
loopne
test
int3
fstl
rol
push
lock
mov
mov
inc
dec
cmp
cmp
test
jns
insl
mov
xor
sbb
add
es
and
push
mov
fiadds
and
js
inc
dec
and
andb
xchg
lcall
shr
push
stos
mov
aad
shll
jmp
inc
xor
add
out
scas
push
pop
in
sub
inc
ror
jo
or
inc
enter
cmpb
popa
cmp
mov
arpl
das
daa
fs
jge
add
or
sbb
and
jle
xchg
out
pop
mov
inc
test
mov
bound
leave
xchg
ret
or
jge
push
xchg
stos
xchg
push
int
clc
inc
and
es
and
sub
fimull
mov
xor
loop
mov
mov
or
pop
jg
pop
pop
push
or
mov
lcall
or
inc
dec
push
fwait
repz
pushf
nop
popl
sbb
mov
test
inc
xchg
std
je
cs
outsb
sbb
cmp
jmp
out
dec
gs
fs
or
inc
mov
shlb
js
out
bound
jnp
push
sub
mov
cmp
ret
fcomp
jmp
ja
orb
cmp
aaa
sub
rcll
rorl
push
cmp
cmp
andb
fnstcw
mov
dec
jb
decl
mov
popf
mov
mov
xlat
movsb
push
pop
je
push
cmp
pop
popf
ljmp
inc
out
jb
cmp
mov
xchg
pop
repnz
cltd
popf
jne
out
bound
nop
test
fwait
stos
sbb
into
lods
mov
cld
rcll
push
mov
dec
mov
or
fidivs
hlt
test
fdivl
fwait
jmp
cltd
fcompl
hlt
shl
inc
ret
xor
xchg
loop
jo
les
pop
mov
dec
icebp
mov
es
pop
xchg
cmpsl
shrb
je
sarl
in
ds
fwait
sub
pop
mov
dec
push
inc
dec
fs
outsb
fisubl
jb
add
pop
mov
cmp
add
test
movsl
outsb
pop
fucom
xor
std
inc
std
and
add
lds
cmp
ret
mov
addr16
inc
ret
mov
add
mov
mov
xor
dec
pop
sub
mov
push
ret
test
ret
mov
push
xchg
mov
inc
push
pop
movsb
repnz
dec
cli
jo
movsl
cmp
ds
fildll
lret
or
aam
xchg
jmp
mov
outsb
mov
jnp
pop
arpl
dec
aaa
dec
xor
mov
pop
fmuls
inc
dec
int
fs
xchg
pop
paddusb
lock
int3
and
mov
jnp
cs
xchg
mov
pop
xchg
cmpsl
mov
push
mov
sub
ror
xchg
jbe
push
jne
dec
pop
adcl
dec
xor
pop
sub
outsb
cmp
and
mov
insl
push
mov
or
pop
arpl
popa
orl
pop
sbb
inc
pop
mov
push
test
int3
jmp
test
xor
mov
sub
movsl
add
cmp
testb
hlt
jno
lret
mov
xchg
in
add
inc
cli
outsl
dec
in
pop
fs
pop
adcl
lock
mov
mov
iret
sbb
sti
sbb
out
mov
pushf
mov
or
div
mov
inc
roll
xchg
jns
mov
mov
shl
negl
mov
inc
ret
sbb
add
in
cld
or
inc
test
cmp
decb
jmp
rolb
fisubl
pop
insb
sbb
imul
mov
ret
jl
loop
pop
data16
out
pop
rcrl
stos
incl
gs
mov
into
loop
adc
jmp
pop
in
fcomps
aaa
lahf
or
lret
repz
jmp
sbb
adc
cli
fidivrs
xchg
sub
cmp
popa
pop
jle
mov
mov
ljmp
fisubrs
out
aam
dec
mov
xchg
jb
xor
mov
stc
out
repnz
popa
jnp,pn
add
jns
sbb
cwtl
rorl
vpunpckhdq
dec
push
cmpsl
dec
icebp
push
mov
into
lret
psllq
test
push
dec
imul
sbb
popa
ss
cmp
sahf
cmpsl
lea
inc
push
add
mov
test
xchg
fucomip
pop
fs
xchg
scas
movsb
insb
sub
sbb
sarb
or
push
jns
jns
test
add
cmp
hlt
in
sub
std
and
mov
push
fidivs
ficompl
jne
push
rcll
lods
mov
mov
pop
pop
xchg
dec
aad
xchg
push
mov
mov
mov
fnstcw
inc
mov
pop
adc
sti
jns
insl
mov
mov
ljmp
adc
pop
mov
add
pushf
cli
jecxz
mov
add
incl
setge
out
out
fnstcw
pop
pusha
mov
outsb
jne
rorl
dec
mov
xchg
jle
loop
jno
sbb
and
inc
loopne
fimuls
js
rol
or
or
inc
xchg
push
mov
dec
adc
cli
push
mov
fninit
xchg
cmp
cmp
into
mov
pusha
jecxz
ja
cmpsb
jge
sbbb
sbb
std
dec
push
fsubs
mov
testl
mov
in
incl
daa
daa
imul
mov
int
and
std
call
fnsave
rorb
fcoml
jge
scas
lock
lea
jne
and
and
mov
ficomps
andl
decb
push
lods
ret
in
pop
repnz
out
lret
leave
outsl
xchg
or
or
mov
push
aaa
cmpsb
jmp
cs
sub
push
fwait
incl
outsl
sub
pop
in
mov
dec
cmp
popa
ds
xchg
les
aad
sbbl
cmpsb
shl
fs
inc
rcrb
adc
or
test
xchg
lahf
push
pop
sbb
imul
sub
roll
divb
sub
fisubrl
aam
inc
je
outsl
popf
test
lods
mov
movsb
aad
xor
mov
mov
push
mov
in
cmp
mov
push
push
aam
push
or
mov
rolb
or
jo
ljmp
add
inc
push
mov
mov
inc
dec
add
lods
ja
std
sub
jae
enter
pop
jb
stos
mov
mov
out
mov
mov
imulb
setb
shlb
pop
and
add
xchg
sbb
pop
fstp
into
jg
dec
xchg
lret
icebp
test
jl
jo
push
pop
adc
insl
cmpsb
das
int
and
test
mov
xor
xor
add
mov
clc
sub
xchg
inc
ja
flds
int3
jmp
in
imul
mov
negl
jge
and
mov
cs
out
sub
jne,pt
fbld
mov
add
jp
xor
popa
loope
add
call
fstps
daa
cmc
push
in
mov
ret
mov
aam
aam
dec
mov
pop
dec
sahf
mov
lods
or
jbe
add
pop
mov
pop
mov
jns
enter
sbb
fs
leave
mov
mov
dec
mov
push
fstpt
les
test
pushl
pushf
inc
fwait
ss
in
movsl
push
sahf
pop
or
sti
xor
fstpt
jmp
mov
mov
hlt
xchg
fwait
call
cld
mov
andb
jae
or
fiadds
pop
call
cltd
fadds
loopne
push
inc
lods
pop
test
and
les
insl
mov
push
add
stos
mov
rcrl
enter
cmc
jo
mov
das
push
rclb
pop
cmpsb
push
popa
push
out
inc
bound
int
inc
pop
and
sti
xor
data16
xchg
jp
sbbl
sub
mov
lret
mov
and
push
sbb
shr
mov
push
sbb
pop
fistpll
into
enter
std
sub
mov
sub
sbb
in
pop
mov
into
subl
push
stos
imul
psrad
mov
shlb
cmp
mov
les
sti
push
adc
dec
decl
push
xchg
nop
int3
jnp
movsb
sbb
loopnew
mov
or
push
imul
icebp
sar
into
testl
jae
das
sahf
mov
in
inc
ljmp
data16
into
int
lock
fisubrl
std
jb
js
push
pop
jmp
push
ret
into
and
mov
mov
add
adc
push
insb
and
cmp
jl
jne
mov
rcrb
test
bound
pop
popf
mov
loop
pop
outsl
out
adc
lock
std
jge
shlb
pop
mov
scas
jle
sbb
mov
jb
push
xor
xor
dec
mulb
std
pop
xor
int3
and
xchg
mov
or
clc
mov
adc
fwait
sub
lods
mov
stos
inc
fsubl
mov
mov
sahf
jg
and
push
mov
sub
cmp
in
fmull
mov
les
inc
std
mov
mov
test
pop
icebp
cmpb
cwtl
aam
filds
data16
rcr
fucomp
arpl
mov
inc
mov
sbbl
adc
out
loopne
adc
mov
add
pop
mov
sub
cmp
insl
mov
mov
mov
iret
dec
push
sahf
out
push
lock
mov
cmp
cmpsl
scas
repnz
in
mov
sahf
push
push
and
mov
pop
scas
les
lea
xchg
xlat
fmulp
cmp
clc
pop
rorl
sti
sub
popf
xchg
adc
jns
std
mov
dec
pop
lcall
jno
sub
in
or
sbb
fsubrs
dec
push
fwait
imul
push
add
lret
mov
imul
fwait
leave
scas
mov
into
sbb
xor
ret
push
lea
or
pop
mov
fwait
addr16
pushf
inc
popf
push
sub
mov
ret
repz
mov
push
jge
xchg
clc
xor
mov
mov
lret
add
mov
rcll
fwait
icebp
xor
subb
xor
pop
daa
mov
mov
sub
sbb
addr16
push
push
orl
xchg
ret
aad
fsubl
mov
mov
pop
adc
mov
divb
mov
xchg
test
push
and
mov
jmp
aam
cmp
push
ret
and
sahf
loope
mov
xor
dec
neg
cmpsl
pop
jecxz
lods
pop
stos
inc
or
dec
jp
sbbb
ror
sbb
cmp
lret
int
and
ja
xchg
lret
in
jmp
adc
xchg
push
adc
mov
inc
cmpsl
adc
push
mov
xchg
aas
rorb
incb
pop
or
mov
js
out
lahf
imul
ss
add
or
adc
jo
mov
mov
out
rcr
adc
incb
cwtl
into
xor
ret
nop
sub
cmp
clc
sbb
fldt
insb
inc
inc
shrb
scas
loope
dec
iret
adc
lret
adc
inc
cmpsb
test
scas
loope
xchg
shlb
sub
mov
setnp
cmp
test
dec
inc
xchg
in
imul
sub
dec
insl
out
adc
test
pop
jns
xchg
sub
aad
mov
mov
lea
je
cmp
sbb
push
cltd
out
popa
sbb
jno
stos
mov
push
dec
lea
ret
outsb
mov
push
arpl
and
movsb
mov
fisubl
nop
and
or
cld
push
js
test
lcall
sub
mov
cmp
test
subb
pop
adc
scas
mov
mov
pop
push
es
cmpsb
sti
xchg
insl
cmp
shr
adc
dec
shrb
outsl
sub
xchg
xor
sahf
popf
mov
add
rol
sub
dec
jmp
cld
in
bswap
icebp
shl
stos
insl
addr16
stc
lds
mov
xor
dec
pop
mov
sub
pop
loopne
mov
int
std
inc
sub
nop
sub
xchg
int
inc
lea
cmp
and
jnp
data16
rolb
fwait
fwait
mov
xor
mov
shll
call
dec
mov
sub
flds
ss
jb
popf
xor
pusha
mov
mov
out
mov
je
arpl
sbb
push
cmp
hlt
popa
popa
out
dec
mov
jo
pop
mov
stos
shll
xchg
add
popf
xchg
mov
dec
pushf
mov
imul
push
je
xchg
jecxz
xor
xchg
aam
ret
xchg
mov
fisubl
stc
push
loopne
addr16
inc
je
leave
lret
push
repnz
data16
pop
ret
sbbb
adc
add
cmp
ret
jl
in
xlat
loopne
jbe
test
cmp
nop
addr16
jnp
in
jecxz
decb
add
stos
insl
dec
fstps
stos
ds
lret
addr16
jno
das
and
xchg
mov
pop
cli
outsl
in
push
stos
test
xchg
xor
lock
imul
adc
sbb
and
mov
je
push
pop
adc
dec
xchg
or
lock
fmull
pop
push
test
cmpsl
pusha
cltd
aad
push
xchg
clc
xchg
mov
mov
out
in
movsb
push
xor
bound
inc
or
orl
lret
adc
xchg
and
stos
cmp
repnz
xchg
and
push
mov
test
lock
dec
pop
in
lds
inc
loopne
lahf
push
std
imul
pop
ljmp
push
imul
jb
leave
cmp
pop
divb
or
add
pop
sahf
loope
sbb
xor
xchg
cmpsl
pop
mov
rcl
stos
call
lret
imul
fidivrs
repz
or
sbb
mov
xor
in
adc
dec
dec
rorl
mulb
mov
push
addr16
repnz
imul
jmp
add
jnp
arpl
xchg
inc
cli
andl
rsqrtps
rol
pop
mov
rorb
fldenv
sbb
das
cmpsl
pop
stos
in
mov
lock
sbb
loop
inc
dec
aas
call
cmp
push
cmpsb
mov
cld
push
and
cmc
lret
orb
mov
xor
dec
js
call
jae
test
cmp
cmp
pop
into
mov
jbe
pushf
mov
loope
arpl
decb
insl
sbb
ret
inc
sub
ja
loope
adc
cmp
pop
imul
pop
in
test
mov
nop
push
sbb
jbe
pop
mov
and
mov
xor
out
cli
jno
adc
cmp
daa
das
jbe
ljmp
xor
bound
test
leave
popa
loopne
sti
sti
jmp
or
shrb
insb
addr16
cmpsb
aad
inc
mov
sub
fwait
mov
aas
mov
xor
pop
mov
push
and
aas
fcmove
pop
loope
fcmovnbe
or
test
mov
inc
hlt
pop
jle
out
rep
stos
gs
sbb
and
mov
aad
popf
ficompl
out
inc
incl
lret
push
sbbb
jl
fnstcw
xchg
ljmp
movsl
outsb
xchg
inc
xchg
fmuls
sar
cmc
enter
sub
mov
inc
cmpsb
lcall
outsl
aam
shll
addb
testl
popf
xchg
imul
loope
jl
imul
aas
das
adc
push
cs
loop
lret
pop
roll
pop
mov
sbb
stos
shrb
test
inc
lea
jb
jns
mov
and
addl
cli
aas
imulb
insl
fs
cltd
popf
jno
inc
dec
stos
dec
je
push
sahf
popa
cmpsl
icebp
jl
packsswb
lds
jne
out
fwait
js
vmwrite
in
push
leave
cmpb
jo
rorl
lds
or
mov
pop
stos
and
sub
sbb
jecxz
mov
sbb
mov
push
or
jne
imul
sub
aas
cmp
jle
test
pop
pop
sbb
dec
sub
mov
pop
das
jne
add
clc
pusha
mov
dec
xor
dec
in
rorb
pushf
movsb
dec
xor
push
dec
test
adc
repz
inc
das
push
xor
fmull
scas
xchg
filds
sbb
mov
stc
leave
mov
stc
stos
cmp
push
adc
es
imul
out
arpl
jmp
mov
mov
pop
jg
xchg
sbb
in
push
sti
and
test
dec
repz
cwtl
mov
pop
mov
mov
adc
sahf
scas
push
pop
mov
lcall
dec
test
gs
jae
cwtl
pop
push
test
mov
repz
lock
cwtl
shlb
stos
test
cmp
incb
outsb
lret
inc
adc
outsl
andb
sub
mov
dec
adcl
adc
jmp
add
inc
xchg
ror
xorl
ljmp
mov
orb
loop
outsb
adc
dec
test
jns
aam
adc
ret
pop
push
pop
in
cwtl
adc
fildl
les
insb
lea
fiadds
add
or
cmc
ljmp
dec
adc
sub
jmp
sahf
mov
imul
mov
pop
adc
mov
int
push
sub
sbb
cmp
adc
jne
xchg
scas
call
pop
sub
vpshaw
out
clc
lret
out
xchg
mov
lods
push
pushf
adc
cli
aam
xchg
sahf
lods
mov
add
adc
dec
sub
dec
sti
orl
cltd
xchg
cmp
pop
cmc
out
jbe
mov
or
jo
lahf
xor
mov
and
add
pop
clc
jge
and
mov
mov
jae
xchg
xchg
push
mov
fdivl
insb
stos
ss
icebp
sbb
fnstsw
mov
mov
aas
mov
test
lods
sub
jmp
mov
pop
fprem1
adc
adc
loope
out
faddl
mov
stc
xchg
dec
fwait
adc
push
jnp
rcr
lret
ret
fstps
gs
push
lcall
icebp
outsb
xlat
fldz
adc
push
dec
cmp
sbb
repz
dec
dec
fstpt
jns
loopne
mov
adc
cmpsb
lods
rolb
cltd
sbb
dec
ret
mov
cs
cmp
gs
pop
fildll
adc
adc
pop
add
mov
jno
jno
addr16
mov
jmp
aad
mov
gs
ljmp
daa
in
xchg
hlt
push
loop
lea
push
ja
inc
xor
cmc
lock
orl
and
pop
jecxz
outsb
dec
test
into
sbb
fcomps
popf
mov
sub
lret
lds
cmp
es
cmp
data16
mov
xor
xchg
dec
movsb
pop
jg
lods
sti
loope
jb
cmp
xlat
pop
ja
jnp
xor
add
lock
add
fs
mov
dec
add
cmp
data16
jae
mov
in
mov
cmp
fcoml
lock
ja
lods
cmc
out
or
sbb
or
pop
inc
pop
stos
movsb
outsl
stc
mov
loop
insb
sarl
inc
xchg
shrb
xor
lods
jge
int
sub
aad
xorb
sub
sub
outsl
cli
loop
inc
sub
sbb
xchg
incb
push
imul
sbb
enter
fldenv
bound
rcll
out
sub
das
push
aas
jg
js
jno
inc
pop
cmp
lret
lret
loopne
pop
lods
cltd
ret
pop
ja
fwait
pop
mov
xchg
jbe
aam
mov
adc
es
movsl
test
jb
lcall
sbb
out
es
sarb
fcompl
popf
inc
into
cmp
mov
and
std
repnz
std
lret
dec
cmp
fisttpll
mov
and
xchg
in
sbb
test
aam
std
pop
mov
aam
mov
mov
jae
xor
jno
aaa
enter
cmp
jnp
pop
aaa
adc
push
stc
xor
call
xor
icebp
lret
fimull
int3
stos
cli
dec
nop
adc
js
xchg
fimull
cwtl
and
es
insl
mov
jmp
test
mov
mov
out
jle
testl
orb
mov
cmp
lods
mov
loop
call
or
lahf
bound
jge
es
movsl
dec
xor
idivl
fsubrl
in
outsl
jae
imul
ds
dec
popf
int3
stc
sub
pop
add
lret
adc
sub
dec
insb
lea
out
imul
aad
and
add
xor
wrmsr
and
daa
fs
bound
das
pop
sbb
jo
les
and
and
jne
xor
adc
pop
pop
dec
in
jo
outsl
dec
inc
mov
mov
cwtl
cmpsb
rolb
push
test
es
push
mov
ret
imul
mov
fstpl
jne
int3
mov
das
ret
clc
inc
popl
iret
stos
mov
or
repnz
ja
loopne
mov
aad
jmp
mov
inc
in
xchg
add
loope
xor
outsb
pop
or
sar
cmp
test
jbe
push
test
stos
jne
roll
std
in
jge
lds
popa
cmp
loope
insl
outsb
pop
push
xor
stos
js
jg
cmp
mov
test
adc
inc
aas
int3
enter
jl
mov
fldl
decl
aam
fld
xchg
loop
clc
and
pop
mov
add
fdivl
mov
shll
and
sbb
fildll
cs
mov
inc
out
inc
jae
pop
fsubrs
pop
pop
stos
fldcw
mov
mov
iret
jmp
popf
jecxz
daa
outsb
mov
repz
jmp
mov
push
and
lods
and
or
push
loopne
fstp
inc
mov
xchg
jmp
fadds
imul
mov
aad
cwtl
sahf
mov
dec
out
xchg
mov
xchg
scas
test
addr16
insb
repz
add
mov
and
xadd
out
mov
std
jno
pop
sbb
call
cli
and
push
adc
xor
cmpsb
push
fidivl
adc
js
rolb
daa
sbb
loopne
push
inc
inc
lock
push
xchg
cwtl
lcall
sub
adc
shlb
push
int3
inc
fstpl
in
test
lods
fldl
jo
notb
mov
mov
add
addr16
sub
aas
insb
fists
add
sub
xchg
mov
and
loope
dec
pop
sbbb
pop
push
cmp
mov
fcompl
sub
repz
out
pop
inc
and
and
pop
fdivrl
cmp
test
and
inc
push
adc
lret
jae
ret
inc
and
push
dec
inc
sbb
dec
xor
mov
pop
jge
xlat
sbb
push
or
pop
pop
jbe
jb
mov
jg
dec
dec
bt
cmp
lods
je
lcall
lret
and
ja
push
sub
inc
sub
cmp
inc
and
dec
repz
mov
pop
mov
cmp
sbb
cmp
fnsave
loop
or
subb
loope
xchg
mov
inc
testb
scas
add
inc
xchg
cmc
lret
rorl
sbb
mov
in
xchg
mov
out
neg
jb
scas
sub
ret
out
mov
xchg
and
adc
mov
xlat
jbe
das
and
movsl
push
movsb
xchg
and
or
imul
mov
addb
sub
inc
ss
pop
mov
pop
mov
cld
push
enter
dec
in
mov
push
in
mov
imul
in
rclb
les
adc
sub
dec
or
je
or
daa
push
movsl
daa
mov
cvtps2pi
jo
negl
inc
fld
xor
xchg
lret
push
sbb
outsb
mov
daa
push
call
add
rcrl
add
rorl
lahf
test
ret
add
pop
push
dec
push
pop
and
sub
pop
int
push
scas
mov
xchg
or
cmpsl
cmc
mov
mov
inc
sub
mov
aaa
mov
outsb
add
pop
mov
add
fs
int3
inc
popf
add
cltd
jmp
or
cmp
inc
pop
add
dec
and
lea
dec
shrl
push
sbb
rclb
hlt
movsb
xor
xchg
jbe
movsb
aam
rcll
sub
rclb
lods
xchg
popf
cmp
push
iret
dec
lea
push
mov
nop
js
or
repz
jmp
sub
cli
aam
ret
and
data16
ret
mov
cwtl
decl
push
or
jo
fcmovnu
mov
sub
dec
and
cmpsb
mov
or
imul
inc
push
and
in
inc
xchg
cmpsb
daa
xlat
jno
cmp
movsl
inc
lds
or
ficomps
sub
mov
test
xor
sub
add
dec
jo
cmp
push
addb
ss
pop
ret
dec
arpl
sbb
cmpl
sbb
out
jg
dec
shll
call
sub
sub
mov
adc
decl
idivl
xor
and
cmpsl
xor
iret
mov
xchg
bound
sub
xor
loope
pop
and
cmp
cmp
inc
or
pop
mov
adc
mov
dec
sub
pop
movsb
and
cmc
fdivl
aam
mov
add
dec
xor
loope
mov
mov
jns
cmp
xor
ret
mov
mov
test
es
int3
push
iret
xor
out
adc
add
xor
jp
aaa
or
push
push
jne
mov
lcall
xor
jl
push
ljmp
xchg
shr
pop
dec
dec
lcall
ds
pop
cmp
inc
jb
dec
pop
inc
stos
inc
gs
add
mov
fstps
mov
daa
ja
or
shll
out
popf
mov
sub
ret
lcall
pop
das
pop
push
imul
insb
pushf
mov
inc
repnz
in
sub
shlb
add
inc
cmp
cmp
test
push
sbb
test
jb
insb
sbb
in
aam
movsb
pushw
iret
xchg
xor
mov
xor
pop
xor
cmp
add
cmpb
jl
sub
dec
fstpt
in
mov
sub
scas
add
fs
cmp
into
cmp
dec
das
cmp
frstor
push
xor
jnp
push
int
std
nop
out
or
dec
xchg
inc
addb
icebp
daa
ds
nop
fstpt
sahf
subb
add
js
adc
xlat
push
mov
rcll
ret
pop
fistpll
in
call
dec
xor
sahf
mov
mov
jge
loope
call
lea
push
mov
jnp
fisubrl
sbb
fisubs
mov
cmp
and
ret
ret
insl
in
sub
jbe
jge
ja
jo
filds
in
js
shl
xchg
push
cli
enter
xchg
lcall
loopne
mov
add
or
jne
jnp
cmpsb
jge
in
pop
aad
sarb
in
in
xchg
aam
fstpt
and
or
test
rcr
insl
fistl
sbb
and
xor
idivb
jno
bound
xchg
and
cmp
xor
sbb
mov
pop
in
loop
add
xchg
test
mov
packssdw
es
push
cmp
adc
cmp
in
xchg
in
or
filds
push
and
inc
iret
lods
outsb
scas
out
mov
pop
fnstcw
dec
fnstenv
dec
ljmp
inc
mov
clc
jge
xor
sbb
inc
inc
jbe,pt
mov
pop
cltd
inc
aam
xchg
leave
pop
mov
lret
sub
cs
sarl
fwait
push
loope
shll
out
mov
jl
lcall
xchg
mov
lcall
pusha
add
mov
scas
nop
ds
fadd
fidivrs
addr16
orb
outsl
xor
lret
jge
and
xchg
adcl
rcll
stc
mov
cwtl
sbb
push
cmp
aam
xor
mov
xchg
pop
ds
adcb
cli
push
push
inc
notb
adc
lods
jl
mov
fidivrl
dec
fidivrs
scas
jb
mov
testl
test
je
xchg
jecxz
dec
out
in
fisubrs
lahf
xor
test
test
xor
cltd
cmc
push
rcpps
mov
out
loope
or
rorb
in
lahf
or
test
inc
hlt
adc
je
hlt
mov
xchg
mov
mov
popl
xorl
xchg
dec
out
and
pop
fs
int
xchg
les
std
mov
mov
je
inc
adc
lret
jp
push
bndstx
mov
lea
jecxz
sub
push
or
arpl
mov
adc
test
mov
rol
cmp
sbb
mov
fwait
add
aam
lret
sub
lahf
mov
or
nop
jmp
das
in
mov
push
js
xchg
int
mov
adc
mov
sar
jno
xchg
enter
dec
add
jp
and
jmp
mov
adc
push
outsb
xor
xchg
hlt
xor
cld
xchg
stos
dec
jnp
in
jle
mov
popf
outsl
push
scas
shrl
cmpsl
or
sub
push
aas
mov
dec
mov
cld
jb
popa
sbb
cmp
and
push
loop
mov
stos
mov
pop
in
xor
mov
add
fldl
idiv
add
mov
jns
sub
int
mov
mov
shrb
lds
movsb
rol
sbb
add
and
test
notb
loope
dec
xor
fidivrl
pop
daa
sbb
movsb
pop
add
loop
and
push
or
mov
cmp
outsl
stos
pop
pop
in
cmp
sbb
dec
je
fucomp
or
test
mov
xor
cmp
in
movsl
inc
lods
pop
mov
iret
sbb
aad
icebp
dec
imul
gs
daa
xlat
jbe
pop
sbb
cmp
loope
aam
outsb
popa
mov
lds
gs
and
fsubr
repnz
out
sbb
or
sub
xor
and
mov
jle
cmpsb
lahf
stc
stc
pop
mov
mov
pop
loope
cmp
or
iret
repnz
loope
sbb
fistpl
daa
cmp
mov
mov
cli
leave
sbbb
pop
push
and
push
imul
jae
mov
mov
mov
mov
cmp
adc
or
fnclex
icebp
in
mov
int3
dec
into
int
xchg
mov
sbb
mov
dec
and
fsts
fwait
js
inc
pop
std
mov
fisttpll
sbb
sub
inc
or
addr16
jno
and
or
jg
mov
push
dec
xchg
insl
sbb
pop
scas
mov
pop
xchg
cli
pop
sbb
ret
sti
pop
dec
or
jno
mov
jl
mov
mov
imul
inc
shlb
sbb
jle
repz
fimull
adc
lcall
notl
jg
mov
mov
mov
pusha
insb
or
fcoml
test
data16
aas
pmulhw
xor
es
addr16
mov
jns
adc
cmc
dec
cmp
and
pop
movsb
insb
pushf
mov
stos
inc
sbb
in
or
jo
pop
std
add
bound
and
pop
add
mov
mov
mov
js
cwtl
lahf
pushf
pop
popa
mov
insb
bound
aas
inc
data16
int
mov
inc
lds
pop
mov
nop
mov
jmp
fmull
loop
call
lret
jmp
and
or
sbb
test
jbe
inc
inc
pop
jecxz
imul
lret
loopne
dec
fiadds
sbb
std
ds
in
lea
std
jmp
jae
lods
movsb
mov
sub
fidivrl
cs
dec
push
cmp
lds
adc
inc
adc
fbstp
push
xor
mov
jp
out
aaa
cmp
aaa
push
mov
inc
xchg
cmp
sub
insl
daa
xlat
sub
xchg
sbb
jo
jmp
push
add
jg
adc
jge
inc
jle
pop
loop
stc
nop
aad
mov
and
sub
xor
jp
clc
jmp
fs
dec
das
xor
mov
daa
mov
pop
add
stc
and
and
icebp
jnp
hlt
adc
shlb
mov
xor
xchg
and
call
cs
fisubrs
cmpsb
push
jmp
mov
sbb
pop
dec
pop
mov
mov
test
xor
jne
insl
insb
nop
xchg
lret
or
dec
inc
adc
jp
js
sarb
into
xchg
push
lret
xchg
outsl
add
lea
jnp
subl
cwtl
fnsave
push
in
sub
notl
xchg
loop
add
mov
or
repz
xchg
in
fcmovb
jecxz
scas
mov
mov
pop
ljmp
jne
call
pop
and
xchg
inc
mov
hlt
test
mov
fst
les
sbb
stos
into
cmp
mov
sub
jl
lods
adc
das
sbb
dec
mov
loope
in
sarb
push
aaa
xchg
dec
lret
mov
fnstsw
bound
out
xchg
jge
test
dec
xchg
pop
lret
cld
cmp
inc
pop
mov
mov
movsl
rol
push
pop
shr
mov
subl
lret
out
push
iret
lret
push
sarb
sti
push
cwtl
push
seto
jbe
pushf
mov
cmc
dec
inc
andb
jno
stc
cmp
test
mov
mov
push
lods
cmp
adc
stc
push
popa
test
aaa
hlt
push
ja
and
jg
fwait
pop
xchg
or
mov
sub
das
rcrl
dec
jp
sub
fistps
aam
jnp
xor
sbb
adc
inc
adc
aad
sti
fbstp
xor
or
dec
imul
cmp
adc
push
pushf
add
sub
out
test
mov
fs
fisttpll
jg
scas
sbb
lcall
ret
repnz
xor
cmp
in
sbb
aam
loopne
mov
sbb
sbb
bound
jmp
stos
cmp
outsb
fdivs
cmc
fdiv
dec
xchg
dec
call
hlt
jno
aam
push
inc
stc
aad
sbb
in
sahf
push
sbb
lods
test
iret
cmp
icebp
jp
adc
sub
divl
sub
cmovb
jmp
mov
inc
cmp
push
xor
sub
sbb
dec
dec
push
shlb
aam
sub
push
or
cmc
leave
movl
shll
mov
push
mov
add
pop
sbbl
scas
data16
pop
dec
and
repz
test
adc
add
movsl
sbb
add
inc
and
pop
dec
jbe
in
test
out
lret
das
addr16
dec
and
cmc
repnz
divb
imul
sbb
ret
repz
repz
jmp
insl
push
mov
dec
xchg
fstpl
mov
repz
jp
pop
pop
inc
out
mov
aam
xor
mov
fcmovu
mov
push
les
push
mov
cmpsl
mov
xchg
in
sbb
lds
add
push
jle
imul
sub
ljmp
and
pop
mov
inc
pop
jns
cmc
lret
andl
mov
adcl
lds
or
dec
push
inc
lods
xchg
inc
cvtps2pi
mov
aam
enter
or
mov
aad
fdivrs
clc
test
jb
imul
cmpl
mov
pop
loop
outsb
sbbb
outsb
inc
push
ja
or
cmp
call
jnp
fisubl
es
repnz
sbb
popf
arpl
or
push
xor
cli
mov
mov
sub
push
push
push
cmp
test
xchg
mov
jae
notl
movsl
in
jae
dec
or
push
mov
imul
pop
into
push
mov
cmp
paddsw
mov
sub
mov
mov
add
xchg
fs
mov
push
stos
into
sbb
push
popa
jne
or
and
repz
into
rorl
mov
ss
outsl
inc
mov
inc
mov
cmpsl
jmp
fiaddl
xor
add
push
test
jle
ds
gs
add
cmp
sub
pusha
push
sbb
and
and
cltd
add
mov
mov
or
and
mov
rol
aaa
lock
scas
mov
sbb
xorb
mov
frstor
dec
insl
lret
imul
and
pop
sbb
xchg
mov
ss
and
addr16
out
jg
push
cmp
movl
and
inc
cmp
out
add
in
movsb
imul
xchg
add
mov
lods
xchg
jne
cmp
and
lds
add
fadd
or
mov
clc
jecxz
and
inc
cmpsl
pop
sub
sbb
xchg
xchg
xchg
add
inc
push
call
jg
pusha
push
jp
mov
icebp
adc
repz
sbb
testb
inc
cmp
cmp
pop
insb
adc
fcoml
push
shrl
add
push
das
jno
lahf
jmp
mov
inc
sti
in
cmp
inc
pop
imul
add
mov
and
inc
data16
fs
mov
jecxz
dec
inc
cmp
frstor
outsb
or
mov
pop
ds
dec
cmpsb
jbe
out
stos
hlt
push
push
in
mov
inc
jl
inc
mov
cwtl
out
arpl
or
mov
arpl
mov
shl
scas
sbb
aas
fwait
xchg
pusha
cs
pop
sarb
cmp
adc
lret
ds
dec
jns
test
xchg
cs
shll
push
imul
or
std
pop
push
iret
pop
sub
gs
imul
fwait
adc
add
nop
pop
es
or
pushf
mov
in
cmp
pop
je
imull
dec
xchg
hlt
adc
xchg
stos
or
aam
jle
or
inc
ja
popl
jge
jecxz
sar
mov
push
mov
aas
add
sbb
push
popf
cwtl
sbb
aam
or
dec
jg
adc
cmp
loopne
xor
xor
xchg
pop
setne
adc
mov
ds
mov
incb
adc
dec
inc
cmp
xchg
in
cmp
out
fildl
fiaddl
inc
sub
mov
or
fsts
lret
daa
rolb
test
push
fadd
pop
cmc
ss
les
jp
cwtl
lcall
pop
test
ja
in
jne
cmc
push
outsl
insb
dec
outsb
push
data16
scas
popa
cmpsb
jno
loop
lahf
and
mov
cmp
xchg
xor
add
or
lds
cmpsb
xor
scas
in
outsl
hlt
test
loop
ja
cwtl
cmp
loop
incb
xchg
inc
xchg
sbb
sub
faddl
pop
int
ud0
mov
pop
jbe
cmp
xchg
adc
push
clc
mov
push
and
inc
pop
int3
lds
adc
lret
lock
push
fmull
fwait
sbb
adc
sti
mov
outsb
cmpsl
movsb
sbb
imul
push
loopne
in
add
dec
aam
scas
cld
mov
repnz
out
imul
xchg
lods
pop
push
pop
scas
or
scas
data16
push
mov
test
push
mov
mov
push
mov
cmc
pop
subl
pop
rorl
loope
sahf
sbb
lret
ljmp
out
and
jg
jmp
and
loopne
adc
fs
mov
lahf
hlt
and
insl
cli
add
inc
cs
lret
roll
lods
into
outsl
sti
imul
pop
ds
call
ret
loop
xor
jns
xor
out
adc
mov
jmp
rolb
cld
mov
icebp
push
clc
data16
in
stc
popf
lds
mov
out
jnp
mov
bound
dec
hlt
xchg
stc
pop
lock
dec
iret
dec
mov
and
insl
or
mov
bound
sbb
mov
inc
and
inc
fnstsw
dec
jo
lret
inc
les
scas
and
sbb
dec
dec
lahf
dec
jo
jbe
fcmove
addr16
cld
dec
loopne
repnz
gs
mov
scas
addr16
test
ficoml
rolb
sahf
inc
and
and
arpl
lahf
mov
pusha
mov
insl
xor
inc
movsb
inc
mov
mov
fs
ds
andl
sub
adc
jmp
fstl
lds
adc
mov
adc
fs
andb
test
cwtl
jo
test
outsb
push
adc
push
inc
inc
and
testl
push
imul
pop
clc
inc
add
or
mov
and
ljmp
xor
sub
xchg
mov
lcall
addr16
cli
jge
or
insl
lret
faddl
push
cmp
shrb
inc
cltd
push
fadd
or
inc
push
mov
divb
add
dec
clc
mov
insl
nop
or
jbe
lret
sbb
mov
cmp
es
and
sbb
cmc
loopne
push
bound
daa
sbb
repz
dec
mov
push
gs
push
jo
push
jae
and
mov
or
pop
call
cmp
or
adc
iret
aas
dec
push
sahf
push
dec
shlb
mov
bound
movsb
dec
inc
addb
insb
or
cmc
and
push
loope
inc
mov
lea
fistpl
mov
test
cmp
add
in
mov
or
movsb
icebp
pushf
sbb
adc
add
popf
movsl
inc
push
sub
sub
jno
xchg
xor
mov
ljmp
add
ret
sub
inc
jo
loopne
cs
pop
mov
or
scas
sub
push
mov
imul
movsb
add
xor
pusha
test
jns
push
fdivs
or
pop
mov
rclb
out
cmpb
cmp
jle
jecxz
outsb
mov
jmp
int3
pusha
mov
cmpsb
orl
das
fs
js
push
xchg
cmpsb
faddp
nop
es
sub
fwait
std
adc
adc
cmpsl
fmull
adc
push
adc
loope
add
lods
jle
adc
dec
pop
add
xchg
ss
inc
movsb
mov
aad
loope
sub
pop
lret
push
mov
cli
inc
pop
js
int3
mov
dec
xchg
ret
mov
mov
mov
push
int3
lcall
push
inc
cmpsl
ror
ds
in
xchg
test
sti
aam
lcall
inc
mov
inc
adc
hlt
mov
xchg
lcall
test
mov
xchg
iret
xor
inc
rcr
mov
fwait
imul
pop
test
rep
dec
addl
inc
pop
xor
inc
adc
testl
jo
ret
push
inc
push
push
clc
jp
sbbl
mov
pushf
out
popa
inc
mov
jae
adc
inc
sub
pop
outsb
sbb
mov
insl
jmp
addr16
fidivs
xchg
loop
jbe
clc
sarb
add
pop
shlb
jmp
cmp
xor
std
xchg
out
into
jo
insl
mov
sti
or
stos
xor
lcall
lret
mov
adc
sub
jns
mov
push
in
aaa
cld
in
push
xorb
fmulp
rol
add
or
xchg
or
push
jo
mov
push
inc
mov
cltd
addl
xlat
jno
adc
popa
xchg
mov
cmc
inc
sbb
pusha
xlat
jae
rol
es
imul
stos
movsb
pop
pop
pop
mov
lea
mov
dec
mov
and
out
jg
pop
mov
ret
xchg
int
pslld
and
xchg
shll
add
loopne
sub
test
mov
push
or
jle
xchg
jl
jno
add
sarb
mov
lea
lahf
and
popf
jbe
jnp
daa
inc
mov
lret
xchg
repnz
jg
inc
movsb
leave
sub
pop
mov
jne
xor
inc
push
and
and
outsb
popa
ja
lods
and
mov
gs
jae
jmp
fistl
mov
ja
jbe
adc
test
xlat
sub
jge
int
add
jbe
adc
sti
xchg
lret
cltd
lods
sahf
jmp
push
hlt
or
lret
repz
test
push
fildl
inc
scas
mov
ds
sbb
bound
sbb
jecxz
cli
lods
jg
pop
pop
cli
lret
push
clc
lods
fdivrs
xor
jle
test
jne
push
add
mov
loopne
adc
xchg
add
inc
sub
jecxz
rcrb
sub
jo
jbe
insb
lahf
mov
fmuls
in
test
stos
outsl
test
jl
push
int
movsb
int
pop
cld
sub
push
push
dec
loop
jle
mov
push
cmc
popa
or
inc
out
test
push
xor
test
pop
lock
test
lock
pop
xchg
xchg
xchg
ficoms
xchg
cmp
jp
cmpsl
ja
ret
mov
add
push
or
imul
fldt
add
pop
cwtl
and
mov
inc
mov
jnp
sbb
jns
mov
jns
js
mov
dec
cwtl
mull
sub
mov
leave
lahf
mov
jb
hlt
inc
je
pop
out
dec
ds
mov
pushf
pop
loop
inc
enter
jae
mov
dec
cmpsl
stos
xorl
cmp
call
ja
dec
and
push
mov
out
out
mov
ds
cmp
call
rcr
xchg
dec
pushf
jge
mov
mov
sub
stc
into
aas
leave
xor
dec
xor
movsl
outsb
dec
rcrl
lret
pushf
pop
or
or
pop
adc
xchg
dec
xlat
jno
inc
stos
xor
fstpt
inc
scas
mov
pop
sub
mov
lea
inc
stc
inc
call
inc
nop
ret
xchg
cwtl
fsubp
xchg
jmp
xchg
ret
pop
mov
or
aad
or
out
sub
outsl
inc
scas
mov
mov
jb
leave
push
mov
sub
dec
out
or
cmpsb
fstl
out
out
xchg
outsl
xor
pop
test
adc
fucomip
add
inc
lods
lahf
neg
or
ror
jmp
or
out
jbe
and
fmulp
pusha
fisubl
cmc
nop
inc
xor
jnp
hlt
cmpb
mov
add
lret
nop
sbb
subl
rcrb
inc
xchg
dec
jl
jg
adc
fdivrl
jno
inc
push
sub
jbe
jo
mov
test
inc
aad
inc
addr16
pop
rorb
ljmp
sar
lock
sbb
mov
pushf
pop
mov
rcl
xchg
ds
imul
fstpl
icebp
dec
xchg
xchg
leave
and
and
adc
leave
jp
mov
movsl
jl
xor
fbstp
arpl
cmp
mov
fdivp
fcomp
adcl
testl
arpl
pop
clc
popf
and
dec
rorl
fisubs
leave
das
adc
dec
add
mov
xchg
mov
mov
xor
jo
lahf
and
inc
xor
xor
icebp
mov
xchg
xor
mov
sbb
sub
jo
daa
mov
cmpsl
lock
fwait
testl
and
and
insl
mov
or
sub
dec
mov
push
xor
xlat
pushaw
jle
sbb
leave
jne
scas
out
out
sub
out
or
jae
sub
mov
outsb
mov
or
push
shll
pop
xor
xor
mov
inc
subb
lahf
in
dec
sub
dec
adc
jle
les
pop
jb
push
mov
xor
or
fisttps
dec
stos
push
xor
mov
xchg
mov
xchg
dec
jmp
sub
les
sti
mov
or
jne
push
bound
neg
inc
ljmp
pop
aas
push
icebp
pusha
lea
cwtl
lods
mov
lahf
rorb
inc
push
dec
sbb
sbb
data16
daa
pop
pushf
fdivrl
into
pop
rcrl
mov
cmp
dec
lods
test
cld
jae
inc
push
clc
dec
add
adc
pop
arpl
xor
popa
push
inc
adc
pop
stc
pop
and
out
pop
ret
cmpsl
or
dec
inc
cmp
cmp
sub
dec
xchg
cmp
in
insl
inc
or
cli
inc
jno
sub
xor
es
xchg
mov
mov
and
ficoml
int
dec
call
aad
or
es
gs
dec
cmp
leave
rolb
iret
xor
cmp
xor
repnz
mov
mov
mov
xlat
and
pop
adc
out
inc
lods
rep
int3
mov
fcomip
sub
insl
cmp
arpl
cmpsl
or
insb
xor
and
mov
in
xor
outsb
daa
mov
fnstcw
pop
mov
les
mov
mov
mov
inc
adc
push
pop
xchg
cmp
sbb
ss
loope
pop
icebp
ljmp
int3
inc
add
and
push
cmp
insl
cmp
fnstenv
or
sahf
cmpsb
mov
arpl
fucomi
sub
js
mov
fs
jge
pop
cltd
xchg
mov
gs
jbe
fcompl
std
ret
ljmp
aad
lods
or
mov
int
stc
mov
stc
ret
cmp
andl
xor
adc
cmp
inc
mov
mov
fsubl
fs
jae
lret
test
cmp
dec
push
test
idivl
push
out
xor
test
aas
and
insl
adc
mov
sub
sub
roll
jns
jns
bound
or
js
cli
lods
mov
icebp
inc
lret
dec
ss
cmc
es
fcoml
jae
inc
push
push
aaa
dec
or
xor
mov
or
icebp
jl
cs
mov
add
cld
and
push
inc
jo
popf
cmp
adc
shr
mov
mov
push
cmpsl
pop
mov
loop
lret
movsl
ds
sahf
xor
push
testl
cwtd
lcall
scas
ret
negb
inc
in
mov
or
sbb
xchg
jl
aaa
dec
mov
and
jo
gs
sub
mov
aas
adc
clc
xor
je
mov
ret
scas
rclb
scas
out
fisubrs
je
push
cmp
inc
pop
pop
in
cmp
unpcklps
mov
es
in
cmc
mov
cmp
push
test
test
xchg
lods
ret
fisubl
mov
fs
outsb
and
out
dec
aas
add
pop
push
jo
jl
and
push
adcl
popf
xorb
jbe
jmp
dec
cli
fcomp
mov
add
and
stos
nop
inc
mov
push
les
xor
dec
mov
pusha
bound
pop
hlt
xchg
cmp
mov
lods
cmp
lret
out
pop
mov
pop
sub
shrl
or
jmp
lock
cmc
mov
lret
in
cs
or
cmpsb
int
cmpsl
out
jp
push
and
xlat
pop
fwait
adc
mov
scas
movsl
jae
dec
aas
jl
and
jbe
mov
or
pop
or
popa
xlat
dec
shl
bound
movsb
or
cmp
pop
lds
ret
xchg
mov
sub
mov
mov
cmp
jns
dec
sub
mov
sbb
xor
ss
or
orb
add
enter
cmp
fidivl
lahf
scas
std
je
pushf
inc
mov
in
mov
and
nop
add
sub
mov
cli
jb
pop
sbb
scas
les
and
sub
lods
xchg
addr16
or
popa
xor
pop
sub
outsl
xor
adc
roll
or
lahf
xor
xor
push
imul
pop
mov
fwait
lcall
hlt
inc
push
lds
jp
movsb
sub
cmp
das
mov
jns
repnz
push
scas
call
inc
std
std
sbb
sbb
mov
call
mov
mov
jecxz
and
arpl
xchg
fidivrs
xor
ljmp
dec
adc
or
cli
inc
mov
sub
popa
adc
xchg
insb
scas
dec
cmp
inc
sti
aas
cwtl
ret
pop
xor
xchg
xor
sub
add
pop
mov
xor
pop
pop
sub
inc
add
pop
inc
movsb
fucom
xor
mov
ljmp
loopne
xchg
inc
movsb
fwait
movsb
cs
icebp
adc
pusha
cld
roll
clc
into
sahf
jno
addb
push
mov
mov
xor
sti
dec
jne
sub
js
mov
sbb
imul
mov
sbbl
inc
sub
jecxz
sub
hlt
cmpsl
mov
xor
std
mov
add
decb
inc
mov
mov
in
mov
or
sbb
jnp
cs
mov
inc
dec
adc
leave
jae
cmp
das
adc
push
loope
push
jp
jbe
xlat
addb
loopne
ljmp
xchg
xchg
lahf
push
test
je
insl
add
aad
jmp
ret
xchg
push
jae
or
xor
pop
pop
and
imul
jle
dec
and
out
inc
cs
mov
dec
jle
fs
pop
xchg
xor
adcl
mov
xor
cmp
call
inc
lock
int
js
mov
cmp
add
jo
cmpsb
mov
pop
mov
std
push
hlt
test
shll
incb
pushf
popa
cmp
inc
push
xchg
shll
adc
test
jg
outsl
and
out
cwtl
fwait
mov
xchg
pop
inc
std
push
dec
mov
shr
sbb
xchg
add
sub
sbb
std
int3
xchg
inc
xor
mov
mov
ja
fcomp
sahf
mov
xor
or
in
test
test
xor
push
es
inc
push
inc
push
into
loope
cmp
push
fs
pop
and
test
mov
addr16
daa
orb
jp
cld
jbe
ret
cmpsl
dec
pop
out
sbb
leave
xchg
cmp
cmp
fmuls
mov
rcrl
stos
loope
push
dec
mov
and
sub
lea
popf
ds
mov
fstpt
jmp
xor
iret
pop
inc
test
movsl
pushf
cmp
mov
shlb
iret
sbb
cmp
push
popf
xchg
les
push
jnp
cmp
jge
cmp
dec
aad
and
cltd
sbb
ss
push
dec
insb
pop
mov
dec
cmp
adc
icebp
cmpsb
pop
ss
cltd
mov
mov
add
fmull
je
xchg
and
aas
xor
andb
mov
in
push
sub
sbb
dec
movb
sub
loope
and
mov
in
test
subl
pop
loope
data16
clc
and
cld
xchg
mov
sbb
jp
popf
adc
mov
loop
repnz
mov
and
ja
mov
jge
cmp
rcr
std
leave
ret
rorb
push
clc
daa
cwtl
cmpsl
push
cmp
test
test
es
dec
out
mov
lea
or
popf
or
xor
push
or
insl
repz
push
lock
enter
cmpsb
cmp
sti
pop
and
mov
divl
ret
roll
pop
loop
roll
jo
and
or
outsb
add
jmp
jecxz
jbe
enter
lods
test
adc
pop
addr16
or
loop
fiaddl
adc
jg
push
je
mov
push
hlt
je
movsb
inc
ljmp
sub
ljmp
jl
lods
cs
out
or
adc
mov
mov
mov
inc
fcmovbe
sbb
dec
stos
mov
lods
mov
cmp
jge
mov
insl
scas
pop
push
out
lods
mov
dec
lcall
mov
dec
ficompl
out
outsl
jge
imul
mov
pop
daa
test
add
out
mov
mov
cmpsb
mov
xor
xor
aad
stc
repnz
push
ljmp
xor
fucom
dec
push
mov
xor
pop
sub
imul
cmpsl
sub
lret
arpl
les
subb
pop
rcr
arpl
ds
aad
stc
scas
lds
ljmp
xchg
mov
pop
inc
inc
sti
and
sub
loopne
in
pop
nop
pop
dec
pop
jg
test
cmp
xlat
adc
in
xor
fmull
aaa
jmp
mov
sub
insb
inc
ja
dec
sub
and
imul
or
test
adc
mov
cmp
add
push
popf
and
pop
sti
inc
loope
sbb
stc
jp,pn
clc
enter
jno
lret
test
jp
inc
push
pop
sub
push
rorl
jbe
xchg
xchg
and
lods
daa
repnz
mov
aam
call
sbb
shr
push
pop
inc
outsb
jo
adc
sub
shll
xlat
aas
in
jge
enter
dec
pop
mov
inc
or
inc
ds
loope
cmp
dec
add
jge
leave
mov
or
push
jecxz
jg
jnp
mov
add
mov
xchg
arpl
icebp
add
ss
testl
stos
ret
dec
pop
xchg
mov
pop
mov
push
enter
dec
and
cld
out
pop
clc
xchg
xlat
lcall
das
sub
insb
push
lret
movsl
pop
lock
cmp
gs
and
decb
enter
in
xchg
inc
pop
or
sbb
ret
dec
fists
bound
int3
je
push
mov
dec
dec
mov
out
dec
into
jnp
mov
faddl
loop
test
sbb
mov
repnz
ret
sub
inc
or
movzwl
stc
jge
hlt
sbb
addr16
cmp
pusha
lahf
fsubrs
mov
test
and
ja
sbb
pop
push
sbb
movsl
je
pop
shrb
iret
inc
loop
mov
js
or
push
xlat
shl
push
inc
pop
add
cwtl
inc
enter
sbb
inc
outsb
gs
lea
lret
pop
push
cmpsb
adc
in
inc
fstl
push
gs
pop
addl
sbb
ret
call
ja
xlat
ror
mov
add
xchg
popa
cmp
and
cmc
cmp
jl
lcall
daa
mov
cmpb
in
cltd
add
pop
adc
clc
mov
test
int
sbb
mov
repz
push
xor
adc
pop
jmp
cltd
mov
mov
mov
add
xor
pop
fneni(8087
inc
mov
or
push
or
insl
fcmovbe
dec
sbb
xor
repnz
movl
insl
fstps
and
mov
sahf
stos
jbe
xchg
mov
bound
inc
push
decl
jno
mov
nop
or
scas
xchg
add
inc
sbbb
ds
mov
pop
data16
adc
pop
enter
lods
fcomps
jno
dec
sarl
sub
sub
test
adc
push
cmp
pop
out
or
in
ja
stos
mov
das
xchg
shl
sub
mov
xor
jnp
cmc
andb
sub
fcompl
mov
rolb
imul
push
mov
xlat
push
ss
jmp
xchg
out
call
cltd
ljmp
cmc
cmp
jns
scas
fwait
xchg
fisttps
mov
loop
push
dec
fsubrs
xchg
fdivrs
andl
jae
pop
pushf
and
js
iret
test
xchg
xchg
pop
push
jg
cmpsb
sbb
daa
repz
jne
xor
out
js
push
mov
cmp
lret
rol
add
mov
push
mov
fwait
jae
sahf
jl
fbld
addr16
cmc
sbb
test
push
add
sub
xor
xchg
ret
or
ret
mov
mov
lods
jae
pop
sbb
sahf
inc
imul
mov
jg
out
and
sub
pop
sbb
aaa
mov
push
in
jecxz
add
jmp
mov
call
mov
mov
lcall
pusha
data16
mov
push
lods
imul
fs
xor
adc
push
inc
mov
pop
call
lcall
loop
cmp
js
xchg
scas
sti
mov
sbb
ffree
repnz
jecxz
mov
mov
popa
cmc
sub
dec
add
jno
std
ret
mov
stos
popf
das
sahf
sub
dec
cwtl
dec
add
xchg
popa
jnp
adc
mov
mov
xchg
lcall
jmp
aas
adc
jecxz
ja
rep
xor
pop
lock
mov
mov
xchg
pop
and
jns
push
inc
mov
popa
psrlw
loop
lahf
fmul
stos
mov
mov
or
xchg
daa
xchg
outsl
sub
adc
xor
mov
das
xchg
mov
aas
dec
add
fcompl
stos
inc
rcrb
lret
out
xchg
sub
lret
mov
fidivrs
cmp
and
pusha
shlb
int
rolb
test
or
jmp
mov
pop
fcomps
inc
scas
nop
fstp
dec
xor
stos
jbe
ds
xor
cmp
cmp
das
lea
icebp
data16
js
mov
mov
cld
int3
add
fmull
xchg
xor
push
sbb
push
or
cmp
xchg
mov
bound
pop
ret
sub
mov
mov
inc
push
push
inc
les
nopl
push
adc
add
in
test
mov
sbb
xchg
lea
lret
test
mov
fsubl
ss
pushl
leave
test
sti
jno
loopne
sub
arpl
shrb
lods
loop
mov
sbb
inc
cmpsl
jae
sub
jns
aaa
mov
jb
xchg
mov
sbb
inc
mov
int3
inc
xchg
sub
dec
out
cmp
stc
rcl
mov
cmp
imul
stc
xchg
pop
dec
movsl
cmp
push
mov
push
pop
aaa
lds
aaa
pop
into
das
cmp
pop
adc
cwtl
inc
bound
mov
pop
xchg
push
mov
ror
mov
sub
popa
xor
aaa
sub
nop
sti
inc
jg
stos
popw
jo
add
fsubrs
inc
pop
in
pop
in
xor
dec
add
inc
movlps
leave
je
adc
icebp
dec
hlt
mov
push
in
stos
xchg
xchg
into
std
pusha
icebp
xor
sarl
and
xchg
cmp
push
mov
cmp
enter
movsl
inc
adc
xchg
pop
or
xor
loopne
dec
inc
fistl
test
mov
test
in
stos
mov
inc
pop
fisubl
cli
int3
stc
and
and
leave
jecxz
fmuls
inc
aad
or
arpl
xor
std
mov
sub
ljmp
ror
icebp
pop
mov
pop
aas
xchg
or
cltd
sbb
ss
push
sbb
int
lods
pop
adc
rcrl
ds
ljmp
and
mov
mov
mov
pop
test
nop
fldenv
jmp
pop
sbb
mov
xlat
lds
aam
pop
imul
fdivl
mov
jp
mov
push
mov
pushf
jg
dec
mov
and
addr16
lahf
mov
push
mov
push
in
jl
adc
adc
dec
pop
xor
int
arpl
jns
inc
dec
divl
or
insl
jnp
xchg
out
stc
out
aad
fldcw
adc
pop
inc
adc
push
insl
rol
pop
nop
pop
pushl
jne
lods
pop
jns
jge
or
push
xlat
hlt
add
jbe
adc
rol
in
mov
ret
and
scas
mov
inc
push
and
pop
add
cmc
fidivrl
rcrl
repnz
dec
es
sbb
sbbl
sbb
out
mov
add
pop
mov
push
push
and
shrb
mov
div
mov
push
loope
cmp
push
jo
ds
xor
pop
faddp
mov
lret
les
sahf
mov
inc
inc
rcrl
jbe
movsb
jne
cmp
add
repnz
jecxz
jl
mov
push
jg
and
frstor
leave
loope
add
jp
adc
pop
pop
or
daa
aaa
jne
and
pop
xor
add
mov
or
xchg
pop
fadds
and
push
mov
pop
mov
pop
and
pop
clc
add
mov
jo
clc
aas
inc
js
and
out
pop
les
into
jbe
cmp
push
out
in
dec
idivl
mov
ret
pop
pop
sub
into
inc
xor
or
push
mov
repnz
repnz
ss
adc
arpl
stos
outsb
cmp
ss
fistps
std
fstps
insb
test
rorb
imull
mov
push
insb
push
dec
mov
in
cmp
and
or
dec
jno
mov
inc
push
xchg
je
scas
inc
push
insb
dec
inc
xchg
cmp
inc
fidivs
in
xor
dec
sub
xchg
inc
movsb
fisttpll
jns
fwait
fists
ljmp
xorl
pop
dec
les
lods
jle
jns
addr16
repz
loopne
mov
xor
fisttpll
mov
jnp
sub
outsb
inc
dec
cld
in
or
xlat
inc
in
sub
test
movsl
sbb
aaa
data16
jno
test
push
mov
push
jp
inc
mov
pop
std
mov
jp
inc
or
push
sub
and
pop
push
add
sub
scas
xlat
sub
sbb
sub
mov
lret
jbe
xchg
das
cmp
insl
aam
lret
in
pop
iret
jno
add
and
popf
or
adc
jle
aas
xlat
jp
outsb
loope
pop
pop
mov
pop
jl
daa
mov
arpl
es
mov
and
test
lcall
xchg
cmc
je
bound
test
out
mov
orb
inc
into
inc
clc
js
xchg
aad
cwtl
in
in
adc
ret
or
push
xor
cltd
and
mov
sub
andb
xchg
and
and
dec
mov
cmp
pop
pop
jmp
bound
xchg
cli
mov
cwtl
jno
divl
xor
outsl
loope
mov
imul
inc
push
jecxz
jnp
fs
push
insl
xchg
les
mov
call
push
mov
add
and
int3
xchg
sub
mov
mov
push
outsb
shlb
xchg
data16
std
mov
pushf
insb
sar
mov
xchg
xchg
sub
mov
lcall
cmc
lcall
sbb
idivb
lahf
jecxz
or
cmp
into
jnp
inc
outsl
mov
mov
mov
dec
sbb
fcoms
add
insb
jne
divl
lret
xchg
sbb
nop
testl
sahf
sub
add
mov
lock
dec
stos
sub
je
pop
out
or
sub
sub
or
test
or
xchg
and
ret
out
lret
popa
adcl
cmp
push
ret
scas
rcr
sti
push
xor
movsl
push
hlt
dec
clc
mov
dec
add
cmp
mov
cmp
and
push
adc
pop
cmc
je
mov
and
ss
mov
cli
mov
popf
jae
or
sub
and
arpl
mov
sbb
out
lret
in
pusha
mov
cltd
mov
push
in
push
push
jp
mov
mov
lods
cmp
and
xchg
jecxz
mov
pop
out
xchg
test
mov
in
stos
or
and
xor
ss
cmp
scas
inc
shll
call
xor
xchg
lcall
sub
xor
jne
imul
dec
xchg
lods
aam
popf
pop
xlat
dec
push
testb
push
adc
imul
dec
sub
out
out
stos
cmp
mov
jle
or
vaddsubps
sub
outsl
push
or
std
push
mov
pop
fnstenv
sbb
push
push
scas
in
mov
enter
xchg
inc
addr16
dec
mov
arpl
sub
out
je
call
mov
adc
xor
leave
dec
lock
push
pop
icebp
fcomps
and
lds
test
jl
cmpsb
inc
mov
pusha
test
aad
xchg
adc
dec
push
lea
jae
stos
pop
mov
pop
mov
jns
sbb
sbb
add
cmp
jb
add
cmpsb
push
mov
sub
mov
jno
mov
add
xchg
dec
xor
jecxz
adc
mov
push
decl
sbb
dec
xchg
add
xor
cmp
ds
mov
cmp
pop
jle
jbe
outsl
cmp
pusha
popf
mov
adc
stc
jmp
sbb
sub
outsl
xor
sarl
dec
pop
adc
mov
push
push
cmpsl
fcmovb
or
dec
sbb
cmp
aaa
lcall
adc
or
mov
pusha
int
lock
adc
dec
jecxz
sbb
xchg
rorb
or
inc
subb
mov
fsts
pop
lcall
stc
xor
pop
pop
push
outsl
jl
add
dec
gs
sti
ret
dec
loop
mov
sti
xor
sbbb
push
xchg
xor
sbb
sbb
addr16
cmp
fistl
pusha
fs
add
test
not
or
sub
ror
mov
test
or
pop
inc
xorl
sub
lret
enter
jl
cmp
sbb
out
jp
dec
sbb
add
or
pop
dec
mov
mov
add
cmp
loop
ret
les
xor
mov
and
arpl
pushf
adc
or
aam
add
adc
stc
test
shll
cld
and
push
sub
leave
ret
mulb
loop
pop
xchg
nop
add
and
and
lock
inc
inc
in
fsubrs
outsb
pushf
aas
stos
mov
int3
outsb
add
cmp
int3
insl
dec
mov
fs
movsb
cmpsb
pop
into
inc
xchg
xchg
cld
lods
cmp
inc
loop
imul
xchg
popa
xchg
inc
test
xor
cmpsl
dec
push
in
or
lods
movsb
mov
jl
xor
cld
mov
pop
out
xchg
xchg
or
xchg
jp
mov
out
cmpsb
in
leave
jmp
cmp
loopne
push
cli
fcmovu
mov
jmp
cs
lahf
gs
sbbb
stc
adc
shrb
mov
mov
ret
movsl
sub
dec
std
push
mov
fsubrl
sub
in
outsb
inc
nop
cmp
cmc
inc
push
in
sti
lret
cmc
xchg
xor
xor
mov
mull
test
test
or
test
jg
bound
ret
push
dec
in
cmp
xchg
xchg
adc
sti
outsl
add
insl
xor
mov
push
or
and
outsl
push
fs
call
cmp
imul
pop
insb
dec
test
test
or
pop
xor
xchg
dec
or
or
cli
xor
stos
test
and
sub
mov
fildll
inc
xlat
aad
loope
int
ljmp
sbb
fimuls
sub
pop
cli
push
rorb
in
pop
jb
cmp
add
ds
add
aaa
inc
dec
add
pop
stos
lock
ret
mov
ja
mov
adc
arpl
outsb
xor
mov
sbb
or
dec
stos
test
loop
out
adc
xchg
in
xor
push
pop
aam
push
mov
sub
inc
xchg
push
sbb
pop
jmp
aas
fwait
xor
aas
jns
xchg
andl
scas
jmp
mov
daa
stos
inc
add
mov
dec
and
mov
les
mov
or
adc
mov
icebp
jl
icebp
clc
cmpsb
cmp
mov
xchg
hlt
jbe
jg
sarb
sub
andb
test
cmp
or
jecxz
and
inc
aad
mov
mov
dec
xchg
or
sbb
pop
lds
inc
sbb
insb
test
leave
mov
inc
push
and
nop
push
aad
cltd
mov
int
test
adc
enter
cwtl
push
jo
mov
or
jbe
mov
jne
fnstsw
fwait
or
cmpsl
xchg
sbb
fs
aas
lods
gs
mov
cmpb
jl
rorl
adc
cmp
push
scas
cmc
dec
push
jg
cmp
pop
sub
and
iret
inc
rcrl
cmovp
mov
jb
or
lods
rcrb
jnp
punpckhdq
cmp
arpl
inc
and
jno
jo
das
adc
ds
cs
subb
mov
mov
enter
add
adc
xorl
jo
xor
outsb
leave
cwtl
push
out
inc
test
sbb
or
jnp
mov
notb
lods
jle
or
and
mov
int3
stc
mov
inc
xor
inc
fisubs
dec
rep
adc
jecxz
push
add
outsb
clc
orl
or
pop
xlat
mov
jmp
jmp
test
fsubs
shl
mov
aad
mov
jle
mov
sub
mov
pop
sarb
or
mull
push
push
xchg
ret
fcomps
push
enter
add
cwtl
fistps
js
mov
add
mov
js
push
in
aad
cwtl
xadd
mov
repnz
pop
insb
xor
mov
inc
out
mov
cli
push
sahf
sub
clc
les
psrad
xchg
push
push
push
inc
sarb
inc
pop
gs
into
mov
and
xor
cmp
cmc
pushf
test
lods
pop
addr16
popl
push
cs
adc
ds
push
mov
daa
outsl
lock
fnstcw
inc
jo
pop
adc
pop
jo
call
adc
fldl
or
insl
and
xchg
mov
xchg
outsl
jne
sub
xchg
pop
xor
mov
cmp
mov
xchg
sbb
pop
dec
insb
mov
ret
nop
popa
mov
rclb
das
push
and
les
lods
xor
ret
enter
mov
mov
and
ror
inc
in
movsb
jge
jge
dec
imul
push
adc
pop
inc
mov
pop
jecxz
jecxz
push
jmp
iret
xor
cmp
fdivs
divb
nop
addr16
xchg
dec
loopne
bnd
inc
arpl
dec
cltd
movsl
xchg
dec
sarl
addr16
push
sub
cmpsb
pop
add
add
popf
insl
add
negb
xlat
dec
and
mov
cld
adc
adc
imul
movsb
in
push
inc
imul
jo
inc
popa
pop
psraw
adc
pop
pop
ss
jp
jmp
push
out
dec
lret
or
xor
pop
jge
mov
inc
sub
scas
or
int3
mov
xchg
out
pushf
insl
pop
adc
loope
leave
insb
adc
and
adc
sbb
or
sarb
dec
push
jae
pop
push
insl
clc
or
fstp
mov
and
push
aam
jg
sub
enter
cmpsl
imul
jecxz
jmp
test
mov
mov
jb
loopne
mov
mov
adc
pusha
je
negl
dec
dec
inc
and
js
push
sahf
aaa
jno
push
mov
popf
xor
mov
mov
mov
mov
enter
std
mov
push
adc
aas
sahf
lahf
xor
mov
clc
pop
inc
push
dec
xor
xor
xlat
push
mov
push
mov
fldcw
push
rcrl
ret
cmp
cmovp
xchg
mov
inc
or
into
call
sub
cmp
out
xchg
lret
fnstcw
cmp
push
rorl
jp
mov
push
repz
jp
push
dec
jp
js
add
add
pushf
adc
dec
sti
add
mov
mov
cmpsl
sub
imul
jecxz
push
in
pop
ss
test
or
or
dec
cmp
xchg
nop
subb
cmc
or
lret
sub
aam
loope
jae
sub
shrb
in
rol
mov
in
push
mov
movb
jmp
movsl
sti
push
mov
mov
sub
and
outsb
std
sub
jne
mov
cltd
xchg
sub
mov
das
xchg
jae
addb
mov
mov
pop
or
sub
sbb
push
pop
fs
sahf
les
in
rclb
mov
xchg
lods
cmp
add
inc
inc
xor
dec
adc
sub
jg
fcmovnb
add
push
fmull
jmp
inc
inc
jns
cmpl
fucomi
mov
into
cmpsb
mov
cmp
dec
outsl
sub
push
mov
stos
cld
add
pop
jp
mov
pop
mov
jno
push
sarl
and
push
dec
or
mov
lds
cld
andl
cmpsl
mov
push
mov
adc
cmc
adc
movb
jecxz
xor
testb
push
xchg
xor
mov
repz
sbb
scas
js
mov
xchg
inc
jo
xor
sbbb
lds
pop
insl
mov
pusha
xchg
outsb
jmp
or
mov
or
stos
iret
pop
jnp
sub
xchg
xchg
inc
mov
sbb
jo
xlat
lea
lds
adc
add
pusha
popa
fidivrs
outsl
jo
fisttpll
pop
xlat
aaa
cld
in
popa
jmp
mov
jno
fs
insb
push
sti
outsl
cmpsb
inc
jle
add
adc
pop
into
fdivrl
mov
fdivs
sbb
sbb
das
dec
mov
xchg
add
mov
mov
mov
inc
xlat
test
inc
cmpsl
adc
lret
into
fucomi
mov
imul
pop
mov
fildll
mov
fnstsw
lahf
or
dec
sub
xor
jmp
jl
push
lahf
push
add
lods
cmp
xchg
adc
orb
je
setnp
add
ljmp
sbb
mov
sub
test
mov
and
cmpb
push
adc
xor
cs
pop
jae
into
adc
xchg
les
and
mov
nop
xchg
shlb
jle
inc
movsl
bound
mov
and
add
mov
rcrb
cli
std
out
dec
adcb
stos
cmp
add
sbb
enter
pop
fmuls
xchg
xchg
add
aaa
addr16
pop
adcb
adc
cmpsl
or
sub
out
push
loope
dec
enter
out
pop
repz
nop
mov
scas
sbb
ret
dec
js
nop
gs
jns
xchg
lods
addr16
xchg
pop
popf
xchg
cmpsb
add
js
popf
dec
mov
lods
test
xchg
and
dec
hlt
loop
mull
shlb
inc
push
adc
insb
scas
movsl
fldt
ret
jecxz
arpl
ds
and
iret
mov
mov
mov
xlat
fistpl
push
push
or
push
cmp
scas
shr
jb
leave
mov
jl
jle
cmpsb
cmp
fs
xor
ja
aas
lea
sarb
addr16
xchg
or
sbb
les
inc
mov
add
fwait
jmp
inc
pop
negl
sti
jne
add
jg
scas
sub
jae
aad
imul
sub
insb
xor
or
inc
int3
lret
cltd
mov
test
pop
fwait
dec
imull
jo
notb
fcmovb
cmpb
lcall
inc
nop
scas
pop
pop
fdivp
insb
addr16
in
xchg
mov
inc
push
insb
cmp
dec
mov
push
into
xor
mov
and
xchg
addl
xor
or
jg
mov
icebp
mov
sub
in
jp
fistpll
stos
out
xor
pushf
xor
mov
pusha
rorl
mov
sbb
lods
jb
add
clc
outsl
xchg
pop
mov
sub
lret
mov
shrb
das
ret
ret
push
cmp
lret
or
in
shll
dec
mov
test
imul
jle
test
dec
or
sahf
jne
pop
lcall
test
jns
das
scas
sbb
daa
jecxz
inc
push
insl
test
pop
sbb
arpl
push
mov
xchg
hlt
leave
add
dec
cli
stos
popa
lret
imul
int
loope
in
or
ja
mov
sub
daa
mov
lods
in
fidivrs
lds
xor
les
jle
loopne
in
cld
hlt
aad
test
sahf
insb
jle
cltd
ja
xchg
mov
xchg
sub
repz
ret
addr16
test
idiv
cmp
fnstenv
inc
sbb
cmp
mov
mov
dec
sub
xchg
out
lock
rcl
lret
orl
vmaxss
repz
cli
insl
sbb
add
outsb
ret
jbe
enter
jecxz
pop
jge
in
dec
sub
sarb
xchg
loop
rclb
cmpl
insl
cld
mov
iret
fsubl
mov
shlb
rcl
hlt
repz
mov
mov
lret
mov
xchg
or
insb
arpl
sub
or
repz
sbb
test
in
add
inc
cmp
xor
cmp
lea
aad
jb
insb
mov
dec
or
dec
push
ret
push
mov
mov
jae
xchg
jmp
cltd
xchg
out
ja
xor
sbb
loopne
aad
cmp
imul
inc
mov
sub
repz
fdivs
daa
lret
divl
sbb
mov
jo
dec
sbb
outsl
push
int3
dec
add
push
cmpsb
addb
adc
scas
test
filds
push
pop
pop
fstpl
decb
jmp
pop
or
addr16
xchg
mov
add
adc
jl
dec
jnp
push
jp
fdivl
loopne
xor
int
jbe
ja
mov
aas
ret
mov
rcl
das
pop
sti
idivl
mov
cmc
dec
fsubrl
shl
inc
lds
cmp
je
adc
aas
xor
faddl
push
pop
adc
add
push
je
jb
push
inc
mov
mov
inc
dec
sbb
bound
cmp
push
cmp
es
xlat
pop
inc
pop
imul
and
xchg
sti
lret
add
pusha
stos
pop
fisttpl
lcall
xchg
test
mov
cmc
sbb
mov
mov
aaa
mov
pop
insb
pop
arpl
pusha
repz
xchg
divl
sub
icebp
push
inc
cmp
or
sub
sbb
bound
popa
adc
and
in
and
test
imul
sbb
clc
orl
mov
cld
out
cmp
or
iret
mov
cmc
cmp
adc
mov
inc
std
fiaddl
and
add
fcoml
loop
xor
mov
push
aam
xchg
mov
ret
lods
sub
pop
push
add
int
rorl
mov
int
jmp
xchg
lcall
call
push
xorb
mov
sbb
iret
add
incb
add
fcom
and
loope
fucomi
sub
xor
push
pop
stc
test
insb
stos
insl
xor
xchg
jne
cmp
fmuls
lods
inc
jb
cmc
es
or
aam
movsl
dec
xor
icebp
rorl
dec
fcomp
cmp
dec
pusha
and
pop
repz
inc
mov
mov
sub
cwtl
xchg
fildll
rorb
cmp
nop
and
jecxz
sub
test
mov
adc
stc
mov
gs
movsl
mov
into
cmpsl
les
leave
js
sub
push
fdivp
jg
fwait
les
mov
fdivr
lods
mov
xchg
and
je
scas
adc
or
cmp
aad
mov
push
mov
and
cmp
add
dec
jg
jo
pushf
ja
sbb
inc
fwait
jb
aaa
enter
cmp
xchg
fidivs
js
lret
stc
enter
es
loopne
lock
loopne
add
lret
xchg
mov
push
push
inc
jae
mov
xchg
fisttpl
fdivrp
out
repz
and
jg
jmp
add
push
loop
clc
xor
dec
loopne
and
mov
dec
mov
xchg
scas
outsb
mov
inc
rcll
mov
js
loope
cmp
rcl
pop
mov
lock
inc
out
sbb
dec
pop
xchg
push
push
test
jg
xchg
sti
xchg
sbb
push
fwait
out
xor
rcll
adc
test
xchg
jmp
push
push
jne
es
jne
int
imulb
push
fistps
loop
cmp
mov
xlat
and
lcall
pop
stos
fs
or
imul
mov
mov
fcoms
mov
cwtl
testb
jmp
std
nop
cmpb
mov
mov
jae
xchg
int3
inc
cmp
out
mov
xchg
mov
push
aam
sub
pop
or
insl
pusha
scas
cmp
aam
mov
xchg
in
imul
loope
outsl
push
mov
lods
insl
mov
js
xchg
push
decb
sbb
mov
or
jbe
jl
inc
ret
jecxz
xlat
fs
mov
and
ret
mov
cmp
cmp
push
stos
das
loop
sub
aaa
lds
lret
xor
jge
fimuls
or
pop
mov
aad
xor
adc
scas
and
in
insl
outsb
sub
stos
ljmp
cmp
iret
div
push
ja
sbb
xorl
adc
enter
mov
ss
loope
repz
sbb
xor
jnp
std
imul
andl
dec
cli
js
gs
jns
sbb
adc
mov
test
cmpsb
loope
sbb
jmp
loope
jecxz
loope
and
int3
cwtl
out
data16
repnz
aaa
fisubs
inc
dec
mov
in
mov
mov
jne
mov
imul
add
cli
cmp
mov
cld
nop
fsubr
cmp
in
cli
mov
cmp
fistps
out
jge
movsl
leave
and
xorb
stos
mov
mov
enter
mov
and
add
lods
fsubrs
sub
stos
mov
jnp
jb
inc
sbb
dec
clc
pop
test
rsm
cmp
mov
jne
sbb
cmpb
xchg
test
sbb
jmp
push
and
or
mov
lock
and
jecxz
cltd
inc
push
pop
stc
and
lods
pushf
in
repz
pop
xchg
les
movsb
sbb
out
jnp
xor
mov
imul
cwtl
insb
shll
imul
outsb
in
and
jl
adc
jge
inc
and
jne
jno
push
ja
xchg
mov
adc
cmp
sbbb
std
or
jae
sub
sbb
jl
add
test
sub
mov
push
fidivl
arpl
sbb
popf
jp
mov
or
cmp
or
xchg
popa
popf
and
mov
mov
or
mov
mov
fnstenv
cmpsb
xchg
inc
pop
fisubl
mov
insb
push
mov
pop
adc
mov
or
push
popa
xor
iret
push
add
outsb
jecxz
lods
mov
nop
stos
mov
test
addb
sbb
sbb
enter
imul
cmp
xor
jmp
jl
out
push
sbb
faddp
aaa
dec
add
je
adcb
inc
lock
add
in
adc
leave
lret
xor
test
sbb
sti
and
std
mov
or
push
mov
pusha
pushf
cmpsl
outsb
dec
popl
fucomip
fcomps
test
mov
jmp
sarl
cmp
mov
add
pop
mov
fdivrs
movsb
mov
aaa
ret
mov
inc
push
data16
mov
or
xchg
push
sbb
dec
shrb
aam
mov
lods
or
dec
mov
jns
dec
arpl
cmp
int
xchg
mov
xchg
cs
sub
sahf
dec
sub
or
dec
ss
sahf
gs
mov
and
bound
sub
sbb
stc
mov
push
jo
insl
cmp
fcoms
cmpsl
inc
insb
lea
jae
add
or
daa
pop
cmp
fstp
add
clc
ret
mov
bound
or
mov
push
dec
push
push
mov
in
gs
stos
push
notb
add
pop
jge
mov
xchg
push
or
inc
pushf
inc
mov
jnp
daa
xchg
std
mov
cmpsb
dec
js
push
adc
iret
repz
out
cmp
movsl
out
add
arpl
aaa
jnp
test
lahf
sbb
dec
mov
xchg
inc
cmpsb
sbb
jno
add
sti
and
sti
lock
mov
jmp
fs
je
jae
mov
push
cli
jle
cs
addb
sub
nop
dec
push
sub
mov
test
hlt
mov
pop
lret
std
dec
inc
cltd
xchg
out
push
in
inc
pop
dec
adc
in
and
xchg
cmpb
lea
shlb
sbbl
or
xor
and
xchg
imul
jecxz
inc
arpl
push
xor
push
std
mov
xchg
je
cmpsb
cmpsl
les
bound
jle
push
pop
and
aad
mov
popa
inc
popf
cmc
mov
add
xor
outsb
outsb
fidivrs
inc
mov
fs
cmp
push
test
or
sbb
ret
inc
ret
out
ja
rolb
jl
fmuls
cmp
scas
lock
or
cwtl
int3
shl
outsl
mov
les
in
repz
and
mov
mov
pusha
ret
sub
sub
imul
sub
xchg
sub
jl
insb
andb
cmp
adc
ret
mov
lret
lods
sbb
mov
les
mov
daa
mov
jmp
sub
les
push
in
ret
hlt
in
ret
jb
jnp
movsb
jg
scas
xor
jmp
push
inc
lods
pop
std
ret
aam
mov
data16
adc
jno
xor
cld
fnsave
jg
jecxz
scas
inc
push
mov
cs
sbb
jnp
pop
jnp
ficomps
add
pop
cltd
enter
fcompl
mov
arpl
inc
cld
call
loope
sub
pop
subb
sub
push
pusha
sub
aaa
inc
xchg
push
iret
aam
push
lret
jle
or
inc
adc
fsts
into
lock
insb
sbb
mov
lcall
popf
scas
add
sub
pop
mov
push
xchg
nop
dec
or
out
je
cltd
xchg
xchg
pop
push
in
pusha
pop
repnz
mov
inc
leave
xor
out
dec
shr
lea
cltd
mov
test
ret
sbb
dec
out
ss
mov
jne
sbb
sahf
imul
into
pop
cmpsl
je
mull
into
mov
push
fiadds
xor
inc
in
pushf
pop
in
lret
mov
jmp
roll
outsl
mov
or
fsub
xorb
fs
xchg
pushf
add
pushf
and
stc
push
inc
xchg
jecxz
jg
push
cmpl
sbb
mov
movsl
fistl
xor
xchg
jnp
jns
sub
mov
in
pop
imul
aas
ja
push
test
sub
mov
je,pn
xor
arpl
pop
daa
mov
rolb
jae
cmpsb
adc
xor
push
xor
int3
push
faddp
sub
icebp
or
sbb
cli
sahf
pop
sub
mov
cmp
push
add
hlt
lret
loope
adc
out
sub
jno
loop
push
fcompl
add
out
xor
lret
xchg
enter
rcl
fcmovnu
xchg
rcll
cmovbe
test
push
pop
sub
adcl
xor
je
insb
or
in
into
xor
cltd
pop
test
dec
lcall
imull
inc
push
fimuls
cltd
cmp
ret
xor
xchg
mov
inc
pop
std
cmc
xchg
pop
and
cs
xchg
pop
pop
xchg
push
add
dec
jns
scas
adc
xchg
jb
daa
addr16
fwait
sarb
add
out
hlt
and
push
jns
rol
mov
add
mov
lds
out
iret
stos
mov
xchg
cmp
and
rclb
mov
out
sti
mov
mov
movsb
pop
les
mov
inc
imul
dec
ja
lcall
mov
bound
jno
pop
add
pushf
cltd
inc
and
pop
shlb
adc
push
shrb
inc
push
mov
adc
shll
pop
std
add
loop
lds
dec
addr16
and
cmp
mov
insb
mov
dec
fisttpl
and
xor
rorl
sti
sar
stos
daa
adc
orb
ja
and
or
sbb
out
arpl
lock
mov
mov
cli
js
xchg
and
sbb
sub
mov
cmp
or
fcompl
stc
enter
imul
test
popa
inc
iret
jne
jl
push
dec
test
add
mov
xchg
lods
ror
movsb
cmp
in
adc
arpl
xor
in
sub
xlat
out
push
and
and
mov
lcall
push
ljmp
js
pop
pop
cmpsl
mov
addb
add
ss
iret
les
pop
inc
push
xchg
out
sbb
nop
xor
mov
pop
fisubrs
lahf
jae
mov
andl
mov
mov
fidivrs
mov
int
adc
dec
data16
mov
adc
rorb
mov
pop
jl
pop
xchg
inc
shrb
test
mov
imul
add
sub
add
lock
adc
addr16
loopne
adc
jecxz
enter
pop
test
xchg
inc
xchg
pop
cvtdq2ps
aad
fwait
xor
pop
add
sub
call
js
jo
push
and
test
stc
das
out
add
cmc
pop
movsl
push
cld
dec
mov
icebp
and
xchg
sub
loopne
jg
mov
jg
fcmovb
dec
adc
xlat
dec
sbbb
cmp
or
pop
shll
lcall
rorl
xchg
mov
jp
pusha
ja
jmp
push
or
divl
aas
test
dec
xor
xor
dec
cmp
addr16
jns
cmp
pushfw
sbb
out
je
repnz
xchg
aad
ljmp
testb
negl
cwtl
mov
pop
sbb
pop
mov
and
clc
ret
popa
fisubs
insb
hlt
adc
jg
cwtl
cmc
jecxz
ja
push
loope
es
or
push
and
jnp
sahf
cltd
in
pop
push
jecxz
xlat
mov
sub
xor
inc
mov
cmpsl
xchg
dec
mov
pop
test
fcomps
out
dec
push
xor
add
adc
pop
mov
ss
movsl
mul
mov
stos
daa
cld
jl
xchg
js
in
aad
movsl
xchg
inc
xchg
shl
and
inc
stos
jae
cmp
jl
xchg
adc
mov
sti
adc
cmpsb
xchg
push
fstpl
cmpb
push
stc
stos
xchg
add
jp
xchg
data16
add
and
shlb
lea
pop
xchg
push
mov
push
or
cmp
add
stos
mov
enter
cmp
dec
sub
sub
test
mov
outsb
fimull
mov
add
sub
cltd
adc
and
popf
out
ljmp
movsl
subb
push
push
shll
fcompp
cmc
sbb
cmp
jle
mov
in
cmc
insl
repz
call
pop
lret
push
inc
cmpsl
std
xlat
or
xlat
popf
jmp
lock
xor
add
popl
cmpsb
fidivl
mov
sub
adc
bnd
mov
push
inc
bound
sbb
add
mov
sbb
mov
pop
rcr
inc
arpl
dec
add
in
cmpsl
lret
dec
repz
int
mov
mov
mov
out
stos
loop
es
and
ficoml
push
cmp
cmp
dec
jae
popa
mov
cmpsl
arpl
push
pop
aam
push
adc
cmp
test
jl
jno
daa
imul
out
ret
lea
inc
call
add
or
out
pop
mov
jb
stc
xor
mov
addr16
sub
lahf
push
inc
xlat
push
pop
and
das
mov
cmpsb
mov
cmp
cli
fsubr
arpl
cld
imul
push
inc
mov
psrad
test
mov
mov
movsl
scas
int
into
mov
je
push
add
cmp
cmp
mov
jnp
imul
xchg
cmp
orb
jbe
mov
ret
fptan
pop
iret
stos
sbb
mov
in
push
jo
mov
daa
aaa
lret
dec
inc
cmp
fcompl
fwait
inc
xor
leave
daa
rorb
int
aas
or
mov
pop
jne
fistps
shll
dec
imul
cmp
lahf
js
test
inc
mov
ds
stos
pusha
and
cmp
sub
and
call
mov
rorb
lahf
sub
inc
lcall
xor
in
sar
in
mov
lea
pop
sbb
xchg
inc
test
je
loopne
jno
mov
mov
or
mov
push
cmpsl
ljmp
xlat
cmpsl
call
sbb
aam
sub
mov
out
out
cmpsb
test
xchg
sbb
mov
movsb
cwtl
xchg
repnz
inc
push
mov
data16
popa
add
mov
xchg
in
notl
test
push
mov
xor
mov
popf
push
inc
inc
and
pop
or
adc
test
enter
xor
mov
adc
insl
fwait
mov
push
stos
ret
arpl
jns
lret
mov
and
test
outsb
xor
mov
scas
xchg
mov
jge
jns
adc
cmp
add
mov
ret
mov
out
dec
scas
test
dec
outsb
out
sub
aam
ja
pop
and
or
or
add
adc
std
adc
push
je
dec
lods
jecxz
mov
scas
scas
xor
mov
jp
pop
cmp
push
xor
pop
loope
aaa
dec
dec
mov
xor
push
test
shlb
int3
icebp
jecxz
or
xchg
pop
leave
xlat
mov
outsb
cmpsb
call
out
movsb
loopne
jmp
mov
cmp
aad
jnp
je
lret
pop
sub
ret
add
arpl
out
push
inc
fmuls
loop
cmp
jg
mov
arpl
sar
movsb
adc
repnz
pop
sub
jg
addr16
imul
js
and
adc
aam
test
mov
ficomps
outsl
ret
in
jle
out
rolb
in
sbb
mov
test
repz
add
mov
cmpsb
aam
cmpsl
out
dec
sti
repz
and
jae
repz
movsb
sub
xchg
es
sub
inc
test
mov
mov
xor
inc
xchg
mov
std
jns
sti
pop
shlb
test
cmpsb
sbb
mov
jl
jne
inc
add
sbb
mov
adc
imul
fwait
dec
sti
faddl
sbb
pop
movsb
pop
rcl
dec
xchg
sub
or
mov
pop
mov
mov
cmc
lds
jecxz
inc
pop
mov
aas
in
jge
leave
test
aad
pop
mov
mov
jg
in
cmp
repz
ja
mov
mov
xchg
push
push
cmp
push
ja
jnp
test
xchg
movl
push
cmp
jmp
loopne
adc
sub
mov
and
mov
push
xor
and
or
mov
mov
mov
scas
jge
insb
je
loopne
mov
gs
mov
aas
mov
mov
in
outsl
cmpsl
shlb
sub
test
cmp
adc
push
inc
mov
ret
add
jge
mov
adc
lock
mov
iret
push
pinsrw
stos
and
jo
mov
mov
ror
sahf
ljmp
or
mov
es
insb
fs
add
xor
dec
and
jg
lahf
test
lods
pop
shrl
push
mov
les
add
jg
int
or
and
dec
mov
inc
jno
cmp
sub
aam
sbb
ret
push
sbb
popf
jp
sbb
pop
das
repz
stos
xchg
cmpsb
popa
mulb
adc
stc
arpl
nop
or
mov
aas
pop
lret
shr
xchg
mov
jle
out
sub
cmovnp
fadd
add
inc
cli
adc
cpuid
int
lcall
cmc
aaa
cmc
mov
cmp
test
rolb
out
dec
scas
push
jl
push
icebp
movsl
push
aam
lcall
outsl
mov
repnz
jl
insb
mov
xchg
xchg
jnp
fisttps
xor
imul
jg
or
cmp
popf
pop
stos
pop
xchg
mov
int
mov
adc
add
pop
inc
push
mov
dec
repz
inc
adc
fisubl
pop
es
mov
in
lods
pop
sub
or
push
dec
mov
xlat
mov
dec
out
push
xchg
std
add
sti
in
rcrl
or
rcrb
jbe
cs
mov
ljmp
aaa
push
jle
adc
je
cmpl
mov
in
cmp
aam
shrl
std
movsb
sub
cmp
ret
dec
repnz
mov
daa
mov
rorl
jb
jge
cmp
ljmp
das
cli
insl
ret
shl
ficoms
test
jmp
inc
and
xor
fcmovnu
pop
adc
cmp
pushf
lret
arpl
sbb
in
repz
dec
inc
imulb
dec
outsl
adc
xlat
int3
aad
adc
adc
jecxz
push
jp
mov
popa
das
mov
in
adc
cmc
stos
addb
cltd
pop
jmp
cs
fnstsw
mov
ja,pn
mov
popf
mov
loopne
lahf
cld
popf
int3
push
cmpsl
xlat
mov
push
xor
aad
sbb
push
out
xchg
pop
aas
xor
call
mov
xorb
add
lods
jmp
popf
or
jo
push
loopne
or
idiv
repnz
push
sub
sub
inc
jnp
lret
jo
pop
scas
scas
test
xor
jmp
mov
mov
mov
xor
pop
or
xor
xchg
pop
test
cmpsb
dec
cmp
xchg
pushf
call
stos
ret
pop
cmpb
cltd
push
gs
xchg
jmp
fistl
cmc
gs
sbb
adcb
inc
jecxz
xlat
cs
shrl
jp
bound
ret
mov
aaa
push
sti
or
push
push
jmp
mov
dec
cwtl
push
dec
xchg
cmpxchg
popf
popa
out
jbe
jns
sub
mov
and
dec
jns
jns
mov
mov
daa
mov
rolb
xlat
lods
mov
lock
adc
popa
jmp
shl
pop
stos
clc
rolb
and
mov
cmp
inc
call
mov
pushf
rolb
dec
inc
insb
pop
mov
sbb
arpl
adc
stos
fdivrl
mov
inc
xlat
or
or
push
cmpsb
jecxz
out
subl
out
inc
cltd
into
insb
ljmp
pop
xor
sub
ret
cmp
inc
adc
loopne
cmpsl
push
fstp
xchg
or
das
shlb
outsb
stos
add
or
or
loop
push
add
lahf
outsl
adc
ja
mov
xor
mov
cmc
js
js
mov
jo
dec
add
sbb
idivl
dec
ja
xor
sahf
fnstenv
cmpsl
xchg
lret
outsl
imul
out
add
mov
or
add
ljmp
addl
push
push
fidivl
push
jo
loope
or
adc
adc
fstl
or
in
aam
mov
pop
add
in
shll
add
adc
pop
or
les
mov
ljmp
jae
gs
dec
lds
outsb
mov
cmc
inc
add
pop
je
pop
cli
sahf
mov
inc
sbb
scas
icebp
ficoms
mov
fadds
iret
mov
mov
sub
popf
clc
out
xchg
loopne
je
repnz
mov
lcall
xchg
mov
add
inc
or
enter
nop
in
adc
out
push
dec
out
mov
dec
pusha
shl
add
out
xor
xor
sahf
outsl
iret
ret
fistps
xor
dec
int3
insb
rorl
push
js
xlat
or
sub
xchg
fidivl
sbb
ljmp
cwtl
fcoms
shrl
jl
cmpsb
rorl
or
lret
inc
dec
mov
fcoms
aad
clc
dec
data16
mov
mov
addl
push
jnp
adc
shll
mov
jne
daa
mov
aaa
ja
gs
daa
pop
sbb
mov
lds
test
cmpb
xchg
cmp
adc
jg
ret
jnp
sub
pushf
fisubrs
sub
frstor
lds
in
add
xchg
dec
into
out
in
inc
cmp
and
and
lea
cmp
adc
aas
fsubr
pusha
adc
mov
adc
or
outsb
mov
pop
ret
into
sub
or
jno
repz
xorl
mov
xor
addr16
and
and
and
pop
sbb
inc
add
loop
add
mov
mov
andl
lds
sub
cmp
pop
inc
mov
or
add
sbb
lods
lcall
xor
xor
test
push
dec
ret
imul
ja
fcomp
movsl
scas
imul
mov
push
ljmp
lods
lock
mov
pop
out
sub
adc
sbb
pusha
sarl
xchg
pop
sub
dec
xor
mov
dec
sbb
inc
mov
sbb
mull
xor
dec
dec
icebp
rclb
xor
mov
push
dec
inc
inc
adc
lret
ret
adc
test
pop
push
repz
dec
inc
nop
inc
push
dec
adc
push
outsl
mov
repz
xor
and
out
push
iret
inc
mov
sbb
cmp
dec
lea
xor
lret
cwtl
push
sbb
push
jb
test
jns
and
aad
adc
add
test
ja
and
jecxz
jbe
dec
lods
leave
std
out
loop
pop
adc
out
cmpsb
lds
int
cld
cmpsb
mov
das
mov
popa
mov
sub
test
sub
dec
gs
sub
push
add
mov
aas
push
jle
adc
movsl
add
mov
pop
lea
psubq
andl
dec
xchg
cs
adc
sbb
cmpsb
cmp
push
loopne
in
int
pop
cmpsb
fsubrs
fnsave
insl
or
or
and
add
enter
ss
aad
pop
bound
rorb
dec
pop
popa
addr16
jbe
mov
xor
insl
mov
iret
xchg
mov
sbb
or
mov
sarb
pop
mov
jb
nop
pop
pop
jnp
stos
jns
cltd
pop
adc
scas
fsub
cmp
call
fs
sbb
out
mov
iret
sahf
mov
aaa
lds
and
dec
ret
sbb
push
mov
out
ja
repnz
xchg
lock
mov
inc
or
inc
in
fcomps
mov
lods
push
cmp
adc
cmp
imul
xchg
pusha
je
mov
dec
lds
add
insb
push
mov
mov
rcl
mov
xchg
in
cs
pop
mov
mov
mov
enter
xor
hlt
testb
pop
in
dec
jecxz
dec
mov
and
push
movsl
data16
dec
out
ret
or
scas
xor
fmull
addr16
aad
push
add
gs
daa
cld
lds
xchg
push
orb
push
inc
push
sbb
outsl
gs
dec
ljmp
sub
adc
lcall
mov
in
pop
outsl
dec
scas
ret
dec
inc
inc
lock
sub
sub
jne
out
cli
xchg
lds
mov
out
ja
jns
iret
jp
xchg
daa
mov
lret
int3
js
popa
aas
sub
xchg
fiadds
enter
movsl
leave
stc
sub
ja
sbb
add
cltd
pop
cmpsb
pop
mov
loope
ljmp
mov
pop
dec
ret
mov
mov
aaa
shll
outsl
push
jns
push
sti
cmp
mov
std
jmp
mov
lahf
lds
test
shll
inc
pop
popa
cmp
dec
std
ljmp
icebp
rcl
mov
jno
imul
dec
xor
cmp
pusha
mov
pop
mov
push
push
adc
movb
mov
scas
fnstenv
push
mov
xor
lret
adc
pushf
jb
jo
outsb
dec
lret
loop
imul
out
xor
movsl
lea
sahf
js
pop
lods
in
xor
pop
je
adc
inc
sbb
jmp
adc
sahf
insb
mov
push
mov
jbe
into
mov
fcoml
adc
push
dec
or
js
add
jg
outsb
xor
in
neg
sbb
inc
incl
scas
std
mov
out
dec
or
or
and
mov
stc
rcrb
xchg
mov
pop
hlt
pop
cmpsl
pop
clc
mov
cli
rcrb
test
jp
leave
out
loopne
pop
adc
stc
push
push
pop
adc
mov
ficomps
aas
inc
jge
inc
lahf
xchg
add
jno
repnz
fisttpl
add
dec
mov
push
daa
mov
dec
push
nop
mov
pop
adc
stos
pop
jne
movsl
rcrl
mov
xchg
in
fistpl
stc
push
test
test
inc
sti
aaa
push
xchg
lret
sbb
pop
dec
mov
adc
xor
push
sbb
mov
cmp
mov
movl
push
pushf
sbb
les
xlat
mov
cs
and
push
jg,pt
push
lret
or
sbb
sti
loopne
dec
xchg
js
arpl
daa
pop
sbbb
fucomp
and
aad
pop
inc
push
adc
repnz
mov
sbb
cwtl
stos
jne
push
cltd
sbb
adc
mov
in
and
sub
popa
jg
stos
pop
push
mov
jp
int
and
out
jmp
jl
mov
xchg
xchg
test
fadd
ja
jge
jo
incb
fimuls
or
mov
lea
scas
push
out
lods
sub
orb
push
les
dec
lods
lea
mov
xlat
xchg
lahf
ds
inc
inc
aaa
inc
hlt
mov
mov
jge
mov
ret
out
popf
pop
jp
pop
push
push
sbb
cmp
je
and
idivb
xorb
std
movsl
xor
mov
ret
enter
shll
das
adc
dec
fmull
outsl
popf
addl
cwtl
fdivr
pop
add
insl
stos
lret
std
fneni(8087
xlat
push
push
jp
int
mov
mov
inc
dec
fs
cmp
push
sahf
shlb
idivb
addb
es
mov
and
rcl
inc
imul
dec
testb
push
mov
pushf
pop
mov
mov
dec
ja
push
mov
fidivrs
pop
xchg
shrb
sbb
dec
mov
rorb
add
and
iret
jnp
and
lea
pop
lock
dec
cmc
cmp
mov
mov
xor
test
stos
stos
dec
mov
push
sar
adc
mov
inc
repz
jg
rorl
scas
jno
adc
mov
jecxz
jbe
pop
fsubrs
sub
pop
or
dec
sbb
xor
lahf
in
imul
mov
movsl
loop
inc
lods
xchg
cmp
or
cmp
jne
lea
xchg
cmc
test
cmp
dec
mov
inc
xchg
adc
xchg
xor
xchg
lds
shrb
inc
pop
lds
testl
notb
imul
cli
mov
xor
mov
addl
sub
pop
aam
inc
xchg
add
lret
xchg
or
mov
scas
enter
insl
dec
push
add
dec
and
bound
popf
cmp
or
cmp
mov
jl
roll
xchg
mov
arpl
hlt
stos
push
cmp
and
mov
cld
lods
repz
add
out
popf
rorb
xor
cmpsl
imul
jo
push
out
pcmpgtb
out
xor
cs
cmpsl
mov
test
add
mov
and
mov
cmp
dec
sbb
in
push
adc
jbe
adc
sbb
or
and
outsl
push
icebp
sbb
test
xor
pop
xor
cmp
sub
mov
xor
adc
sub
xchg
or
pop
cmp
and
cmp
jo
sbb
movsl
push
or
cwtl
xchg
nop
adcl
iret
xchg
pusha
cmp
mov
movsl
jge
lret
div
lods
jle
imul
cli
mov
xlat
adc
xor
dec
sub
shll
int3
fwait
scas
mov
gs
mov
loopne
add
and
xchg
dec
push
test
scas
sbb
cwtl
scas
sbb
dec
mov
cltd
lock
xlat
daa
fildll
and
jge
and
jg
or
ss
add
and
test
xchg
add
dec
clc
mov
les
push
xor
movsb
pop
xchg
mov
dec
jmp
add
xlat
aaa
int3
mov
fs
cmp
data16
or
xchg
pop
xchg
mov
ret
data16
mov
rolb
cmp
push
dec
dec
add
mov
cmp
inc
add
orb
test
lods
xchg
add
icebp
dec
and
xchg
or
pop
adc
aam
cmpsl
add
cmpsb
rcrb
ja
in
jns
pop
pop
pop
or
lcall
test
xor
dec
dec
jge
lcall
ja
or
jle
fimuls
pop
inc
push
xor
lahf
in
ret
dec
ljmp
and
adc
lea
dec
adc
popa
cmc
outsb
xchg
ss
xchg
stos
sbb
and
and
mov
mov
shll
mov
mov
mov
sbb
push
popa
inc
adc
test
pushf
inc
xchg
sti
and
and
ret
lahf
rcll
cmp
mov
cmc
cmp
mov
imul
jae
adc
stos
movsl
mov
mov
andnps
pop
leave
lahf
jb
sbb
movsl
pop
lock
xchg
jl
pop
mov
xchg
lahf
fcomps
mov
cmpsb
or
and
movsl
jge
aas
hlt
and
jmp
loopne
cli
and
mov
out
pusha
inc
dec
sbb
xor
out
test
ljmp
mov
pop
dec
mov
call
dec
loopne
icebp
xor
fistps
ret
out
ljmp
leave
xlat
insb
dec
push
xor
repz
je
sbb
insb
inc
mov
sbb
cmp
dec
das
cmp
adc
pop
ds
iret
pextrw
push
mov
fstpt
ljmp
mov
or
vpsubusw
out
pop
mov
into
subb
sbb
pop
popf
mov
jge
imul
sbb
adc
daa
int
push
or
jb
mov
mov
addr16
jg
idivb
lahf
mov
pop
in
bound
test
rcl
repnz
push
lds
jne
mov
cltd
cltd
rcrl
pop
mov
call
inc
push
mov
inc
push
xchg
and
cmpsl
sti
or
sbb
push
ds
cli
inc
sub
clc
ret
lds
imul
sbb
or
mov
or
orb
cmp
cmp
xor
lea
int
sbb
orl
es
cmp
cmp
aas
in
es
cmpsb
pushf
jno
mov
lock
or
iret
adc
cmp
pop
mov
and
adc
adc
fwait
stos
push
add
ljmp
orl
and
daa
pushf
roll
xor
pop
call
std
jns
inc
mov
dec
movsb
mov
pop
jnp
sub
gs
sub
adc
shl
int
inc
aad
push
xchg
and
inc
jecxz
jo
push
fnstsw
pop
and
lds
mov
pop
mov
add
jnp
addr16
or
idivb
mov
xchg
jae
faddp
dec
or
xchg
repnz
mov
repz
inc
aam
push
cltd
cmpsl
mov
mov
rcrl
cmp
jp
std
in
pop
out
arpl
gs
stc
add
aas
jl
nop
repz
push
repnz
adc
arpl
fcoml
push
sbb
out
test
push
dec
ja
movsl
cmp
cmp
pop
jns
add
loop
scas
test
cmpsb
cmc
jno
inc
out
aam
sub
mov
and
or
pop
test
pushf
inc
fiaddl
fdivs
mov
mov
es
and
test
and
lret
cmpsb
mov
inc
fcmovnbe
imul
xchg
cmc
cmp
das
iret
outsl
adc
pop
std
sub
fisttpl
adc
xchg
or
sbb
pop
cmp
xor
je
push
pop
pop
cmp
pop
push
xchg
repnz
je
and
push
in
int
das
scas
das
das
or
jle
mov
mov
or
jl
fimuls
and
jl
pop
jmp
jnp
pop
xchg
loope
inc
sbb
adc
add
mov
push
xor
mov
inc
pop
xor
test
dec
and
sbb
sbb
outsb
adc
or
mov
and
aas
jl
mov
and
bound
fldt
and
jl
add
in
fists
pushf
movsb
insb
push
test
sbb
nop
mov
jl
jne
sbb
mov
sbb
aam
loope
mov
jecxz
loop
insl
movsb
out
loopne
out
mov
daa
mov
sahf
xchg
sbb
cltd
xchg
mov
out
cmp
mov
dec
je
movb
jno
mov
xchg
out
xchg
fsub
dec
ffreep
and
or
cmpsl
push
pop
mov
and
jne
xchg
cmp
fnstenv
push
subl
sub
insl
pop
pop
icebp
std
add
loopne
pop
push
xor
fwait
sub
mov
jb
daa
cmp
loopne
aam
mov
lcall
push
sub
xorb
ljmp
dec
dec
add
mov
popa
ret
or
xchg
xor
loop
lret
mov
push
inc
mov
mov
mov
dec
in
fmull
sub
xchg
push
jo
jp
js
jg
inc
and
clc
sub
insb
dec
scas
arpl
data16
test
and
repz
cmpsl
pop
mov
inc
fisubrl
push
shr
les
add
mov
adc
testb
scas
jp
mov
data16
std
add
inc
movl
xchg
cli
cmp
inc
push
mov
or
fs
addr16
jae
fidivrl
add
stc
adc
rclb
pop
cmp
pop
stos
test
dec
loopne
gs
es
fldenv
movsl
push
and
push
xor
xchg
test
and
fbstp
push
jbe
and
xchg
js
insb
fwait
dec
ret
mov
out
mov
xchg
cmpsb
mov
jmp
cmp
dec
xchg
lret
imul
jns
xor
add
push
out
fsts
xchg
and
mov
les
or
ds
inc
pop
iret
jns
xlat
push
jne
fnstsw
fisttps
out
jnp
fstps
jl
xchg
aaa
push
or
scas
cwtl
mov
int
nop
mov
cmpsl
lret
jg
in
fmull
xchg
jo
sbb
divb
ds
push
cwtl
test
xor
scas
aam
bound
or
inc
or
nop
fiaddl
cmp
out
rcrb
testb
xor
imul
gs
daa
inc
pop
bound
cmp
pop
stos
arpl
ficompl
push
jmp
sbb
mov
pusha
push
nop
js
jo
lods
inc
mov
dec
add
nop
pop
mov
jo
andl
enter
xchg
test
fneni(8087
cmp
jns
adc
xchg
outsb
mov
clc
call
imul
mov
mov
xchg
xor
lods
decb
push
scas
push
dec
incb
push
xchg
rclb
jb
out
inc
sbbl
std
inc
aas
fcomps
mov
or
cmp
dec
or
push
subl
pop
movsb
cmp
outsb
inc
test
loopne
sbbl
cmp
push
leave
adc
outsl
mov
xchg
mov
sarl
ja
in
je
rorl
xlat
inc
sub
cmp
int3
addr16
roll
sbb
jmp
je
mov
adcl
xchg
inc
jae
cmp
push
inc
lcall
jg
into
xor
test
ret
xor
ljmp
std
cmp
fs
add
pop
fwait
add
test
nop
push
xor
lret
cmp
lock
movsb
xchg
test
aaa
aad
outsl
loopne
rcrl
pop
adc
inc
or
and
adc
out
in
jae
cwtl
mov
sbb
cmpsb
imul
cmp
movsl
and
cwtl
jp
push
mov
daa
jno
loop
xor
push
pop
xor
mov
cs
gs
mov
mov
inc
subb
cmc
ds
mov
call
push
add
xlat
shrb
out
xlat
fcmovnu
out
sbb
xchg
aaa
inc
mov
jle
popa
fmuls
out
push
roll
sbb
or
ja
shlb
test
jno
lret
aam
insl
xor
and
jle
add
xchg
cmc
push
jb
xchg
in
mov
mov
xchg
out
ret
lcall
mov
bnd
sub
pop
xchg
jae
xchg
jp
jo
cld
sbb
add
les
push
adc
fisttpll
add
stos
out
or
inc
flds
xor
sbb
das
sub
cld
jmp
mov
mov
notb
lret
cs
fdiv
dec
unpcklps
mov
dec
mov
pop
push
mov
mov
adc
jbe
xor
aam
lcall
cmp
and
nop
xchg
popa
jp
cld
mov
adc
pusha
pop
push
stos
enter
sbb
ljmp
mov
xchg
js
scas
and
jae
push
pop
inc
lods
dec
sbb
in
xor
ja
stos
mov
sarl
stos
add
mov
into
sub
test
sub
lods
sub
inc
sub
pop
je
shll
pop
data16
addr16
lea
cmp
orl
test
ss
xchg
pop
or
ljmp
rcrb
dec
jbe
mov
jno
mov
out
pop
out
add
aad
dec
js
xor
mov
cmpsl
push
pop
inc
gs
and
add
mov
leave
filds
pop
ror
pop
sbbb
lods
cmp
outsb
xchg
leave
jp
in
mov
popf
pop
mov
sti
out
mov
sti
mov
in
in
pop
mov
pop
mov
sbb
and
out
test
mov
cmp
jecxz
dec
mov
add
pop
cli
push
loop
clc
and
xchg
inc
xor
push
xchg
or
aas
and
movl
xchg
arpl
call
cwtl
cli
mov
mov
fcmove
lret
push
xchg
arpl
sub
mov
jnp
repnz
lea
push
mov
sub
pop
cmp
aam
imul
je
fldenv
cld
pop
std
lods
pop
fwait
mov
mov
lret
sbb
sub
mov
lret
popa
test
testl
sbb
xor
addr16
dec
or
xrelease
int3
xchg
fidivl
lahf
sub
xlat
cli
stos
imul
push
xor
mov
pusha
pop
dec
addr16
mov
pushl
jge
mov
add
xor
not
or
les
popf
cwtl
xchg
sbb
and
sbb
gs
xchg
mov
outsl
push
mov
insb
pop
jmp
and
fldt
stos
or
movsb
pusha
push
ds
out
bound
ds
mov
mov
lret
inc
fdisi(8087
mov
sub
jae
pop
adcb
lahf
cmp
lea
insb
les
fnstenv
sub
dec
cmp
add
daa
jae
pop
mov
fldt
dec
int3
imul
push
inc
jge
ljmp
in
insb
pop
loop
add
out
pusha
outsb
push
fidivl
pop
pushf
jp
ja
les
and
push
and
fisubs
mov
mov
imul
cmp
stos
cmc
push
push
enter
jb
xchg
add
dec
addr16
sub
mov
jl
lret
sbb
cwtl
and
inc
xor
cwtl
xchg
ror
xor
mov
and
test
adc
adc
repnz
cmc
sub
cmp
mov
mov
xchg
lret
inc
or
bound
or
dec
cmpsl
or
ljmp
rcll
jbe
enter
xchg
pop
dec
mov
dec
rcr
sbb
outsl
xchg
mov
xor
jle
stc
out
mov
xlat
adc
ret
sbb
shll
xchg
mov
mov
sbbb
ja
fimuls
cld
sahf
mov
adc
xor
les
push
jmp
lock
push
out
xchg
cmp
ret
mov
xchg
fstpt
mov
rep
add
fwait
dec
adc
pop
mov
jl
and
mov
jge
push
cmp
leave
mov
stos
mov
js
push
pop
fwait
cmpl
and
mov
lods
cmp
push
sbb
xor
pop
cwtl
inc
outsl
inc
nop
xor
fcoms
mov
sbb
inc
arpl
push
mov
mov
or
out
rolb
add
mov
popf
in
pusha
xchg
xor
fwait
add
aad
or
into
out
std
add
inc
out
loope
roll
push
sub
pop
in
sahf
daa
add
jno
jg
jmp
push
and
pop
xchg
mov
mov
xor
xchg
inc
jne
jg
push
test
je
in
imul
sub
pop
lret
popa
xchg
inc
jns
dec
push
dec
xchg
andb
jbe
cs
loopne
mov
adc
mov
mov
add
pop
sbb
cmp
inc
dec
nop
cmp
sti
jne
push
inc
push
in
ret
jle
adc
int3
jl
adc
cmp
inc
mov
imul
mov
es
or
push
jo
mov
mov
or
std
mov
and
fimuls
ljmp
and
mov
jb
xchg
mov
sbbb
cmp
mov
movsb
scas
xchg
popa
aas
dec
bound
stc
xchg
fucomi
repnz
push
rorl
adcl
mov
sub
movsl
lea
jo
dec
inc
cld
inc
dec
daa
loop
popa
xchg
mov
mov
nop
push
push
inc
mov
adc
adc
mov
dec
adc
xchg
aaa
add
or
or
jp
push
loop
dec
outsb
filds
and
fnstenv
fstpt
ud0
mov
mov
icebp
fcomps
add
sub
mov
lds
fwait
push
inc
add
pop
cmp
cmpb
xchg
sti
cs
pushf
das
out
lret
sti
cmpl
loopne
out
ja
mov
leave
mov
shl
lret
jle
dec
addb
add
clc
mov
and
aad
leave
mov
xchg
or
cli
ljmp
mov
sbb
les
test
enter
ret
jge
jg
lods
xorb
das
inc
insl
sbb
cs
cli
push
add
jae
pop
jp
xor
ljmp
fstpl
inc
jecxz
mov
xchg
out
push
xchg
lea
in
xorb
xchg
xor
movsl
stos
icebp
or
fiadds
xchg
andb
sbb
sbb
mov
test
mov
aas
or
lods
gs
cltd
insl
bound
mov
pop
leave
xlat
pop
xchg
xchg
cs
pop
mov
add
lahf
pop
cmp
jl
fwait
stc
xchg
mov
lahf
push
add
cmp
inc
jmp
pop
sbb
cmp
jo
dec
pushf
dec
test
sub
ljmp
sti
sbb
and
mov
ljmp
push
fcoms
mov
mov
or
popf
xor
or
jne
and
pushf
shrb
and
loop
jmp
dec
test
push
mov
lods
inc
xlat
outsl
adc
mov
inc
js
cmc
cmc
xor
push
push
ljmp
xor
mov
out
cli
jle
inc
outsb
jbe
ret
data16
ljmp
outsb
jl
mov
fldenv
dec
imul
push
sahf
in
pop
mov
or
and
and
dec
ret
out
pusha
in
pop
mov
xor
lock
pop
xchg
jg
inc
mov
and
pop
insb
dec
mov
xor
lret
aaa
cmpsb
sti
pop
cmp
cmp
jb
ret
std
push
faddl
dec
dec
push
aas
imul
shll
nop
int3
cld
dec
popa
cwtl
pop
dec
or
cmc
jbe
xchg
mov
mov
test
outsl
loopne
cmpsl
cld
pop
fwait
rcll
xor
xchg
or
push
sbb
scas
popl
pop
lcall
xchg
cmpsb
pop
aas
xchg
andb
hlt
and
pop
cwtl
or
inc
add
mov
jne
hlt
lahf
loope
xchg
or
add
ds
xchg
cs
add
sbb
xor
ret
repz
packssdw
aaa
sbb
push
xor
xchg
inc
rolb
sbb
mov
shr
mov
and
out
rcrl
sub
ss
or
mov
pop
scas
adc
and
jecxz,pt
mov
addr16
sub
jmp
cmp
in
add
push
cs
xchg
mov
inc
bound
dec
mov
push
mov
dec
mov
sub
repz
jbe
movsl
test
sbb
push
popa
aam
add
outsb
jne
adc
inc
mov
insl
rolb
test
testb
out
inc
xchg
add
shrb
es
xor
jle
sub
adc
inc
xchg
ficoms
mov
or
jae
sarb
sub
jle
aad
add
fisubrl
add
jmp
dec
cmp
stos
loop
jp
aaa
stos
jp
dec
adc
in
fsubs
or
insb
addr16
cld
fsts
adc
stos
sarb
fisubl
inc
mov
inc
ror
out
mov
imul
clc
test
leave
add
dec
push
pop
fiaddl
lret
loope
sahf
stc
mov
mov
jg
lret
fs
jnp
insl
stc
mov
mov
jl
sbb
mov
outsl
pusha
inc
jmp
jg
xor
cmp
mov
out
into
test
sahf
cmp
lock
jp
or
loope
out
dec
das
or
cmp
push
pop
imul
jnp
call
and
loopne
jae
inc
mov
pop
pop
pop
push
aas
cmp
in
xchg
ret
cmpsb
inc
cld
cmp
or
add
scas
aam
icebp
jae
test
add
lret
adc
repnz
mov
add
and
mov
sub
adc
mov
adc
jge
ss
loopne
push
cmpsl
mov
push
gs
arpl
js
sub
sub
jmp
scas
sbb
ret
xor
lods
dec
jge
cld
xchg
jg
or
imul
mov
es
mov
imul
dec
sbb
fistl
sbb
jg
cmc
push
push
rcrb
push
bound
dec
jp
pop
ficoml
outsb
jp
aam
mov
out
loopne
or
xor
cmpsl
loope
xchg
out
cld
daa
pushf
mov
mov
pop
sbb
push
dec
lret
adc
jns
sub
and
fistl
push
sbb
movb
repnz
leave
lahf
mov
xchg
mov
add
push
adc
xchg
movl
andl
add
adcl
mov
cltd
mov
mov
jg
sub
int3
dec
jp
bts
or
mov
xorb
pop
aam
mov
in
cltd
xor
inc
leave
mov
pop
xor
rdtsc
shr
mov
shrl
hlt
mov
sub
cld
mov
insb
push
outsb
xor
jo
dec
insb
lods
repz
aam
loop
mov
ja
jg
xchg
adc
ret
pop
mov
clc
inc
insb
push
mov
dec
test
mov
and
sbb
clc
roll
inc
not
aas
cltd
stos
shll
ret
ja
shl
fsubr
sbb
in
rorl
imul
loopne
fisttpl
ret
fadds
in
sbb
mov
fprem1
dec
mov
add
xlat
inc
xchg
int3
dec
test
mov
or
test
pop
jp
sbb
hlt
jo
push
fbld
dec
pushf
adc
scas
pop
test
popl
xor
mov
pop
xor
jne
inc
arpl
aas
dec
add
mov
or
jp
cmpl
jns
push
fcmovnb
push
sti
movsl
xor
inc
leave
pushf
sub
pop
inc
int
push
cli
sub
inc
lods
cmp
pop
mov
in
dec
xchg
or
sbb
jg
rolb
pushf
pop
or
dec
adc
lods
mov
mov
filds
loope
push
and
cld
sub
lock
jge
jo
mov
add
repz
sbb
cmpsl
inc
sbb
iret
ficoml
xchg
add
outsb
das
repz
lods
les
inc
sbb
aas
push
jg
test
in
xchg
fldcw
stos
out
mov
int
mov
mov
sub
push
mov
lret
push
sti
pop
inc
lahf
test
sbb
sbb
mov
cmpsb
lock
xchg
push
push
xchg
xchg
cmp
xchg
imul
in
enter
xchg
jo
mov
xor
sbb
in
or
xor
jl
addr16
cmpsb
push
ss
lcall
shlb
sub
jb
daa
out
cmp
sub
arpl
insl
fbstp
pop
dec
add
pop
ret
adc
js
in
mov
cmp
mov
clc
movl
repz
push
hlt
fsubs
mov
ss
or
xor
xchg
add
cs
inc
mov
out
xorl
shlb
mov
cltd
xor
std
xor
scas
inc
pop
clc
dec
add
mov
mov
loopne
xchg
mov
jle
xor
cmp
mov
or
data16
int
and
pop
movsl
aad
inc
out
shl
lcall
and
jp
pop
cld
fs
adcb
iret
push
dec
push
orb
mov
inc
int
into
pop
rcr
scas
outsl
jl
dec
pop
mov
aas
ret
insl
das
out
mov
sbb
xchg
in
push
pop
adc
popa
test
xchg
add
repz
mov
jo
es
and
flds
jecxz
xchg
test
repz
lods
xchg
cmc
push
lahf
icebp
push
arpl
aam
fcoml
aam
push
or
add
outsl
xchg
jg
jg
jl
loope
jle
jmp
dec
or
in
mov
xorl
cwtl
mov
sbb
les
cmp
jg
stos
jp,pn
retw
daa
lret
lret
jno
mov
imul
pusha
lret
aam
sbb
mov
push
mov
lcall
mov
adc
xchg
pop
lods
popf
mov
adc
mov
or
push
mov
int3
cmp
lods
add
js
push
mov
or
xor
add
mov
js
nop
mov
fisttpll
adc
mov
xchg
xor
fnstsw
pop
daa
pop
ja
stos
dec
shrl
ret
rolb
daa
dec
mov
xchg
xor
jmp
ds
push
divb
pop
repnz
nop
scas
lahf
and
add
popa
pop
mov
cmp
mov
xchg
or
fldcw
and
xchg
lret
aam
in
adc
mov
loop
fimuls
fnsave
loope
cld
mov
sbb
cs
pop
mov
xlat
aam
into
ret
les
stc
ret
xchg
repnz
js
lcall
inc
pop
fwait
mov
stos
cmp
jne
mov
mov
xchg
sbb
inc
and
test
sub
sub
das
mov
pmovmskb
lods
sub
xor
jo
stos
je
dec
xchg
movsb
xlat
divb
aas
pop
inc
mov
mov
push
inc
adc
jecxz
iret
xchg
jb
in
add
mov
test
scas
ds
pop
xor
and
sub
mov
push
stc
in
lahf
xorb
xchg
or
ds
mov
push
push
loope
cmp
aaa
dec
xor
or
fwait
xchg
lahf
adc
add
or
incl
fwait
inc
inc
jns
mov
push
adc
inc
enter
cltd
aas
jo
lods
je
xor
adc
int3
sbb
repnz
sub
sbb
jmp
pop
mov
mov
inc
push
out
push
popf
cmp
jle
mov
nop
imul
mov
ljmp
movsb
mov
in
xor
fistl
lret
mov
pop
jmp
sbb
jl
test
push
pop
xchg
paddusb
adc
sub
rcll
mov
stos
cltd
inc
jo
stos
inc
inc
lcall
std
sahf
push
fadds
cmc
mov
nop
push
jae
outsl
push
scas
dec
clc
and
jno
and
mov
inc
adc
adc
xor
mov
test
loope
test
rol
dec
bound
loopne
fcompl
lahf
movsl
mov
scas
loope
popa
gs
roll
jne
jb
rcrb
fdivrl
mov
std
les
aam
fchs
sub
lahf
sub
adc
dec
dec
orl
mov
adc
sti
sub
nop
xor
mov
mov
outsl
scas
xor
and
xor
fwait
add
or
popa
sbb
cmpsl
mov
imul
ficoml
mov
push
sub
addr16
pop
cli
cmp
add
sub
sahf
inc
test
mov
jp
mov
repz
movsb
add
popf
decl
xchg
mov
or
loopne
arpl
push
xchg
xchg
nop
sub
pop
aas
lahf
sub
xchg
pop
mov
pop
test
ret
push
loopne
jns
out
lock
pusha
dec
js
repz
sbb
fcompp
iret
fwait
js
fwait
pop
sbbb
xlat
das
in
out
imul
mov
loope
xchg
or
xor
and
testl
sbb
sbb
push
sbb
push
pop
or
sbb
jno
pop
cmc
jecxz
loop
loope
lcall
xchg
mov
ficompl
mov
mov
jbe
test
out
push
cli
or
sub
jbe
addr16
pop
ret
in
addr16
inc
mov
movsl
fcmove
cmpsb
cmpb
adc
sub
fs
push
aad
adc
push
and
mov
push
inc
ja
push
dec
test
das
add
pop
dec
push
movsb
popf
dec
scas
cmpsl
add
or
rclb
and
jge
and
xchg
data16
push
jno
adc
sti
or
lock
rcll
scas
inc
fdivrl
push
push
in
sbb
adc
imul
addr16
jge,pt
jmp
cli
outsl
cli
adc
dec
ss
push
jecxz
shll
sbbb
xchg
enter
mov
cmp
sbb
jae
fldcw
stos
repnz
xchg
in
test
and
mov
adc
or
aam
sbb
pushf
data16
inc
xchg
ret
mov
cmp
cs
xchg
or
pusha
jg
fisttpll
addr16
insl
test
xchg
jne
pop
xchg
aas
test
insb
aad
xchg
ficoms
push
add
sbb
xchg
cmp
jg
in
sahf
pushw
and
or
outsb
cmp
pusha
xor
in
inc
add
negb
cmc
aas
push
mov
adc
int
int3
xor
jp
outsl
das
addl
cmp
mov
call
hlt
hlt
jnp
push
inc
push
je
pop
pop
jno
push
jns
mov
xor
sahf
cmp
mov
addl
loop
imul
sbb
orb
scas
add
repnz
sbb
sbb
subb
cmpsb
fstpl
pop
mov
add
repz
pop
insl
jge
icebp
fdiv
xchg
push
mov
andb
aam
sub
in
xor
in
dec
and
mov
and
addr16
jno
dec
pop
arpl
repnz
pop
jnp
movsb
xor
scas
mov
xor
fstl
adc
ret
into
mov
shlb
nop
aam
stc
mulb
jbe
std
mov
cmp
dec
negl
int3
rcr
inc
bound
cmpb
lret
hlt
nop
lret
ljmp
mov
push
jb
mov
jb
mov
sbb
test
iret
std
mov
lds
gs
shl
adc
cmc
mov
or
jle
data16
add
cmc
aad
sbb
pop
xchg
je
das
je
aaa
ljmp
pop
and
sbb
ret
idivb
xchg
test
into
out
cltd
add
scas
in
jp
stos
xchg
out
insl
decl
cmp
data16
into
inc
jo
movsl
fadds
lahf
test
jnp
lds
push
bnd
aaa
cmp
fdivs
hlt
mov
or
sub
out
mov
dec
pop
fs
adc
mov
push
dec
dec
jl
insb
stc
sti
inc
lcall
push
cmp
jmp
inc
bound
scas
dec
inc
cmc
in
push
cld
outsl
adc
cmp
cmpsb
sarb
popf
xchg
cld
sub
pop
lcall
ficoml
int3
or
cli
dec
out
sahf
xchg
mov
repnz
xor
mov
push
stc
push
test
push
push
mov
sbb
enter
es
cmp
inc
cwtl
inc
xchg
je
insb
out
hlt
imul
pop
pop
jae
mov
lock
jecxz
mov
or
cli
outsl
movsb
jne
roll
pop
cmp
cs
jecxz
imul
jne
flds
in
push
add
testb
hlt
int3
dec
add
aad
lock
cli
iret
std
dec
mov
cmp
sbb
dec
incl
jle
pop
lods
mov
xchg
mov
mov
cwtl
push
mov
xchg
cmpb
sti
pop
inc
mov
mov
mov
xchg
sbb
sarb
mov
jp
nop
pop
push
lock
pushf
outsb
or
ret
mov
mov
mov
rcrl
sub
push
rcl
xor
jg
or
fstpl
pop
adc
push
mov
sub
mov
scas
cld
adc
push
jg
out
push
push
push
push
cmpsl
dec
movsb
jb
aad
xchg
stos
cmp
movsb
aas
cmovae
in
sahf
cmc
jp
mov
jnp
es
rcll
call
adc
rorl
jecxz
aad
mov
sub
jmp
cmp
jno
scas
icebp
dec
mov
rol
mov
lret
add
mov
mov
testb
add
xlat
mov
lahf
jle
pop
dec
and
lds
inc
inc
mov
inc
scas
cmp
cmpsl
inc
sub
xchg
aas
ds
xor
icebp
or
js
test
fs
int3
dec
jbe
sbb
stc
aam
pop
arpl
mov
fstpt
pop
repnz
sub
cltd
mov
lahf
jg
inc
cmp
arpl
pop
mov
jg
ja
pop
sbb
enter
inc
inc
js
movsb
sarb
lcall
xor
mov
lock
out
jbe
pop
stos
sbb
imul
sbbb
notb
fistpl
sub
inc
bound
dec
sahf
or
push
sbb
jl
in
aam
adc
push
add
dec
aas
rcrl
xor
sbb
inc
es
dec
dec
mov
fisttpl
out
cmc
pop
adc
int3
outsb
sbb
xor
cmp
inc
clc
fisttpl
sub
cmp
dec
dec
out
sbb
outsl
and
sub
les
push
out
icebp
push
int
cmpsb
inc
out
mov
mov
cld
fsubrp
in
insl
push
fdivrs
push
pushf
mov
and
or
dec
mov
movl
leave
jp
or
pop
int
and
cltd
pop
scas
adc
mov
inc
xor
sbb
repz
sbb
sub
shll
imul
subl
dec
jle
rcll
inc
and
ret
xor
ret
pushf
cmc
insl
dec
pusha
dec
outsl
xchg
inc
sub
arpl
outsl
jl
divl
in
xchg
sbb
test
mov
cmpsb
push
pusha
or
mov
outsb
mov
or
cmpb
lock
outsl
xor
pop
sub
js
int3
mov
xchg
sti
loope
stos
aam
les
pop
xchg
clc
mov
dec
jge
outsl
xchg
dec
pop
add
push
scas
sbb
cmc
mov
fs
into
cmpsb
fsubrs
add
sub
stos
sbb
adc
dec
cmpb
cmc
nop
fdivl
push
jle
inc
shl
sub
push
jecxz
mov
dec
out
jbe
push
clc
push
leave
cwtl
insl
int
adc
sarl
mov
adc
loope
pop
add
mov
setb
ret
out
test
nop
outsw
cmpsb
sahf
and
insb
and
or
enter
fsts
loop
push
es
in
lcall
andl
jnp
roll
push
inc
xchg
xchg
jno
fiadds
jg
jb
decl
mov
jae
and
inc
inc
pop
roll
dec
loopne
cmp
cmc
push
and
lret
outsl
jbe
imul
ljmp
stos
sub
stc
push
daa
or
in
mov
xchg
mov
lret
das
fsubrl
inc
mov
cmp
dec
fcoms
int3
fisubrl
xlat
sub
es
insl
pop
or
dec
ja
sbb
adc
xchg
adc
adc
mov
mov
hlt
ret
lret
fwait
in
jg
dec
cmp
cmp
cmp
pop
addr16
inc
xchg
jp
and
add
pop
rorb
lcall
push
jl
xchg
addr16
adc
mov
fcoms
cltd
int
cld
cmp
cmp
or
and
jge
adc
dec
mov
push
js
sub
cli
fucomip
push
into
xchg
lock
xor
movsb
mov
or
test
scas
cld
scas
sahf
mov
inc
xor
jecxz
push
sbbb
mov
xchg
inc
sbb
jecxz
les
sti
cmpb
cmpsl
fcomps
xor
or
loopne
xchg
fwait
or
bound
int3
push
pop
cmp
inc
fimull
js
cmp
xchg
pop
mov
jo
rorb
xchg
cltd
mov
mov
sub
mov
jne
test
inc
dec
scas
loopne
mov
push
jbe
dec
pop
fs
or
pop
push
rorb
inc
push
aad
aaa
lret
mov
mov
pop
add
ret
mov
xor
cmp
inc
sub
je
movl
in
dec
or
push
mov
pop
sbbl
cmp
or
push
mov
test
rcr
pop
addr16
sbb
mov
lret
fchs
hlt
cmp
pop
mov
fmulp
out
mov
push
inc
dec
mov
out
insb
aam
cmp
cmp
loop
call
sbb
dec
in
shll
inc
fwait
inc
popf
fdivrs
test
shrl
jbe
out
fs
pusha
push
inc
push
das
mov
cmp
push
cmpl
fnstenv
sbb
lcall
xchg
mov
fstp
out
imul
cmp
fs
not
out
stos
jecxz
daa
xchg
fstpt
dec
frstor
adc
or
sub
test
jl
lods
gs
test
inc
repz
shl
cmpsb
mov
and
aas
push
sbb
and
or
pop
or
fs
pop
sbb
inc
rcll
xchg
jo
aaa
pusha
xchg
push
rorb
xchg
push
rcll
idivb
dec
dec
adc
test
repnz
ljmp
jp
les
int
pusha
sbb
mov
popa
out
sbb
rcrl
mov
mov
mov
xchg
mov
out
aad
lret
lret
jo
push
shrl
add
mov
mov
aad
jmp
sbb
icebp
sub
sub
xchg
xchg
lret
cli
pop
mov
xchg
enter
jle
add
cmpsb
lcall
loope
sub
sub
xchg
imul
out
adc
mov
mov
or
pop
xlat
mov
sbb
jle
push
push
out
lahf
dec
lods
sbb
shl
dec
xchg
cmp
and
cmp
adc
popl
pop
xchg
or
push
aad
repnz
inc
lods
repz
imul
add
or
mov
pop
inc
adc
adc
add
pop
inc
clc
mov
mov
lea
sub
fs
bound
pop
jns
push
shrl
mov
jmp
and
mov
xor
jnp
aad
cmp
out
dec
lret
xchg
fldl
repz
dec
jae
jmp
lret
adc
idivl
mov
add
add
scas
or
add
scas
notl
shr
leave
mov
bound
test
push
jo
add
xchg
push
push
xor
cmp
pop
dec
mov
ss
mov
enter
cmp
xor
sahf
inc
push
xacquire
add
sahf
fists
repz
cmp
pop
jno
stc
push
xor
pop
mov
imul
push
test
jne
xlat
sti
dec
and
jecxz
lret
pushf
into
mov
stc
stc
adc
nop
imull
inc
insb
adc
mov
cmpsb
mov
repnz
mov
inc
arpl
mov
rclb
or
cltd
loop
stc
stos
aas
inc
and
test
inc
out
pop
and
and
xlat
rcrb
and
push
ficompl
movsl
popa
xchg
pop
cmc
or
fmull
movsb
jne
sbb
add
jge
xchg
fnstsw
mov
pop
inc
fs
push
popa
mov
call
mov
xchg
pop
pushf
in
add
ret
fldl
imul
sbb
xchg
and
shl
rolb
int3
in
xor
adc
psrad
cmc
mov
dec
push
dec
mov
mov
rol
lds
dec
jne
ret
cmp
out
test
inc
leave
imul
out
mov
cli
ficompl
sbb
scas
cld
jne
imul
and
ja
lar
mov
mov
cmp
mov
fs
add
xor
sbb
mov
mov
fwait
mov
fs
out
adc
or
insb
mov
jns
mov
and
or
sbb
filds
out
xor
je
mov
and
stos
cli
adc
or
dec
mov
sahf
xor
lea
addr16
imul
adc
dec
adc
mov
mov
jns
ss
xchg
aas
mov
push
mov
call
repnz
xorb
stos
mov
fmuls
cmp
fwait
pop
rcrl
sbb
test
les
imul
sbb
inc
mov
repz
cmpsl
lods
cld
daa
movsb
dec
enter
jae
pop
es
sbb
inc
mov
jmp
data16
hlt
jno
aaa
mov
pop
mov
outsl
adc
jecxz
ret
push
pop
mov
add
push
jecxz
adc
lock
sbb
test
xchg
jecxz
dec
das
and
leave
dec
enter
dec
test
dec
mov
inc
xchg
cli
mov
mov
add
mov
das
lods
fistpl
int
nop
jbe
xchg
xor
iret
and
aad
ficoml
enter
cwtl
push
adc
lods
imul
test
mov
push
pop
faddp
ds
out
jge
dec
adc
dec
aad
and
inc
mov
push
gs
dec
int
outsl
mov
popa
push
cmp
add
push
sub
in
xchg
ja
loope
lcall
or
xor
inc
xor
jns
sub
cmpsl
lret
mov
xchg
dec
pushf
pop
hlt
dec
inc
out
push
outsb
movsb
mov
push
inc
push
mov
pop
mov
in
imul
arpl
xchg
aas
jne
scas
xor
call
fsubl
stc
cmp
leave
push
mov
adc
je
adc
adc
in
sub
ja
test
pop
iret
mov
cltd
shlb
pop
lods
sub
popa
cmp
and
push
sub
jae
cmpsl
add
sbb
cld
enter
push
negl
test
sbb
push
and
lret
dec
jb
fdiv
sbb
dec
dec
insl
cmp
ljmp
push
je
jecxz
jne
adc
and
stc
push
ja
rcl
stc
lret
shll
pop
hlt
push
int3
push
rorb
cmp
cmp
cmp
or
ja
pop
mov
mov
fs
mov
adc
mov
push
pusha
test
adc
xorb
fsubl
int
push
xor
dec
push
sub
orb
mov
popw
jp
mov
xchg
mov
add
sub
push
sub
les
sbb
xchg
les
repnz
ret
pop
push
jo
fidivl
inc
push
loopne
ljmp
push
inc
es
test
add
sub
pop
adc
xchg
es
xor
aam
ss
sti
sbb
popl
out
pushf
pop
icebp
cmpsb
push
popa
pop
dec
ds
add
adc
in
mov
sbb
popf
rcrb
int3
add
cli
stos
xor
xlat
mov
jnp
adc
dec
xchg
mov
enter
jae
inc
js
andl
lahf
jb
movsb
jg
push
mov
xlat
hlt
fists
int3
lahf
cmpsb
sub
jns
leave
or
hlt
push
cmp
mov
dec
mov
inc
inc
mov
sbb
rcrb
stos
repz
push
sahf
and
cmp
inc
cmp
jg
push
aad
pop
loopne
sbb
es
notb
in
fidivrl
jecxz
movsb
push
ljmp
xchg
mov
int
sub
mov
ds
dec
out
pop
nop
xchg
sbb
pusha
jo
in
out
push
xor
ret
dec
dec
popa
push
mov
jmp
dec
mov
adc
pop
jle,pn
pushf
pop
mov
ljmp
mov
icebp
fimuls
xchg
loope
scas
cs
cmp
cwtl
scas
cmp
sub
clc
or
ret
stos
test
sbb
dec
pushf
jns
das
test
cmp
aam
mov
jp
jnp
fistps
hlt
outsl
cltd
jmp
movsb
mov
nop
xor
cs
mov
mov
test
xor
dec
shll
scas
repnz
mov
or
scas
xor
sbb
mov
js
aad
cmp
adc
out
std
fbld
sbb
imul
sbb
mov
mov
jae
int
std
imul
lret
in
aaa
cmpsb
pop
mov
sbb
mov
mov
mov
loop
outsb
xchg
movsl
jp
sub
int
add
mov
sbb
mov
inc
push
lods
lock
cmp
or
lods
cli
out
jl
jecxz
push
pop
sbb
into
shl
and
sub
outsb
mov
mov
les
cmp
dec
mov
jno
jmp
xor
mov
jb
js
jecxz
xchg
pop
dec
ret
bound
cmp
out
dec
test
call
popa
mov
push
adc
cmp
mov
scas
adc
and
rorl
ljmp
nop
sbb
sbb
mov
stc
in
ja
insb
pop
mov
loop
cwtl
fisubrs
xchg
data16
in
inc
outsb
ss
lahf
cs
sub
xor
sbb
ret
inc
cmpsb
push
jns
xchg
pop
shrl
ds
loopne
sbb
rcrb
and
popf
lods
dec
mov
sub
mov
xchg
insb
xor
push
or
xor
pop
notb
push
leave
xchg
fwait
out
leave
xor
or
js
mov
pmullw
dec
xor
mov
shrb
sbb
mov
je
cwtl
test
adc
aaa
mov
inc
bound
dec
inc
mov
mov
sub
sub
movsl
mov
ja
adc
bnd
dec
add
xlat
push
jge
loop
arpl
jecxz
ret
jmp
gs
lea
outsb
add
testl
nop
pop
push
xchg
sbb
fsubrp
outsb
jnp
push
shrb
shll
gs
out
mov
xor
pop
mov
inc
int
lods
dec
hlt
pop
mov
mov
xchg
daa
dec
inc
adc
lds
pop
sub
cmpsl
pop
loop
inc
pop
lods
ret
scas
popa
add
pop
data16
push
sahf
cwtl
and
sbb
push
xor
jnp
call
inc
push
call
cmp
mov
inc
xlat
inc
dec
jb
mov
jg
mov
mov
jmp
pushf
adc
out
mov
lret
sti
sbb
enter
cmp
test
gs
arpl
sbb
data16
je
js
mov
cmpsl
dec
test
jo
test
lcall
repnz
xchg
sbb
cltd
fdivs
xchg
inc
imul
fcmovb
mov
or
or
inc
xlat
int
push
not
gs
jnp
lahf
jnp
pop
call
es
adc
add
push
int
xor
jno
pop
xor
cwtl
rcrl
pop
sub
aas
lds
popl
cltd
in
xchg
inc
dec
jg
push
icebp
in
insl
pop
mov
movsb
push
ret
jecxz
jae
imul
cmp
in
lret
shll
sub
fdivrs
mov
mov
mov
daa
nop
add
push
ds
insl
push
or
fwait
xor
xchg
mov
repz
lea
cltd
popf
or
mov
add
or
sub
sbb
outsl
ljmp
sahf
mov
and
inc
movsl
into
sarl
enter
popf
gs
arpl
loope
scas
dec
mov
std
pop
pop
adcb
fildl
mov
mov
jmp
sbbl
xchg
pop
push
cli
mov
insl
dec
mov
lea
add
cmp
sbb
adc
in
popl
mov
and
mov
xchg
adc
xor
or
inc
ds
mov
inc
repz
add
fcmovne
or
call
push
ffree
repnz
cs
xlat
lds
nop
js
dec
inc
add
shrl
pop
subl
addr16
mov
adc
dec
dec
jl
adc
rol
pop
lahf
pushf
jnp
std
xchg
lods
in
test
push
and
adc
xchg
outsb
pop
pop
pop
mov
loope
movsb
inc
pushf
adc
xor
mov
fldt
or
lods
jmp
mov
xorl
mov
repz
stos
adc
jle
mov
out
ja
mov
add
mov
lds
xchg
cwtl
ret
sbb
aaa
mov
sub
ret
stos
mov
aas
inc
rclb
lahf
sub
dec
push
or
clc
out
mov
adc
pusha
testb
shl
sbb
pop
lahf
je
es
insb
adc
rclb
xor
push
add
or
pop
subl
clc
out
sub
das
push
jp
xchg
or
incl
jl
movsb
sbb
out
xlat
dec
shrl
test
je
mov
fidivl
push
pop
jno
or
inc
addr16
mov
test
stc
aam
lea
iret
cmp
pop
mov
sbb
outsl
sarl
mov
mov
and
mov
mov
sbb
add
loop
enter
ljmp
jae
mov
xchg
cwtl
push
mov
stos
scas
and
adc
rcll
hlt
and
out
jns
stc
push
mov
out
stc
inc
mov
and
mov
or
push
or
mov
mov
inc
dec
mov
fwait
mov
iret
nop
ja
loope
aaa
xor
rcrl
xchg
ss
test
inc
test
pop
dec
fmuls
stc
jno
sbb
dec
rclb
xor
test
sahf
xor
mov
jle,pt
pusha
cmpsl
jne
push
lods
test
mov
mov
aam
movsl
or
pop
jns
xchg
mov
cld
cmc
and
cmp
jo
mov
xchg
adc
add
mov
xor
mov
ss
and
adc
lods
push
or
addb
and
cmpsl
xor
inc
in
mov
jmp
cmp
gs
mov
adc
push
das
jns
ljmp
jge
gs
outsl
fidivs
xchg
loope
fsubrl
mov
mov
psllw
lcall
mov
js
arpl
test
rol
mov
xor
mov
or
jnp
ljmp
aad
pop
imul
roll
in
jmp
js
in
push
add
push
jo
cs
jl
gs
cmpsb
ficomps
movsb
test
mov
imull
icebp
jne
and
xchg
mov
push
lahf
jecxz
mov
xchg
and
mov
cmp
dec
add
xor
ret
pop
adcl
mov
or
add
leave
sub
lea
jns
cld
ficompl
xor
push
jle
sahf
and
fdivl
arpl
push
xchg
adc
sub
push
ret
hlt
test
mov
fisubl
sti
and
lret
ljmp
add
dec
dec
xor
mov
jnp
lret
xchg
repz
pusha
out
mov
mov
pushf
outsl
fisttps
mov
jg
fidivrs
xchg
andb
lock
cmp
push
mov
shl
dec
andl
sti
jl
cs
fst
push
sbbl
add
pop
lret
lret
dec
jl
loope
or
popf
stos
ja
mov
cltd
std
out
mov
sub
pop
inc
xchg
shl
leave
and
pop
sti
ret
xor
dec
xor
sub
divl
pop
inc
sbb
inc
je
test
xor
mov
sbb
cmp
jp
mov
sub
test
push
dec
lret
clc
popa
xchg
insl
rol
push
cmp
jo
stos
mov
mov
or
data16
fcompl
nop
sub
int
xor
mov
icebp
push
inc
lret
out
mov
xchg
fs
and
add
dec
test
in
cmpsl
mov
lcall
ret
out
rorl
js
pop
inc
pop
jmp
imul
jecxz
lret
sbb
aas
popf
es
call
je
jbe
jnp
mov
sbb
sub
mov
push
cmpsb
enter
ret
loop
mov
push
push
addl
lahf
dec
xchg
push
lcall
lret
push
jmp
loope
mov
ds
sahf
scas
mov
ljmp
push
or
lods
js
inc
imul
xchg
sbb
icebp
mov
xor
cli
scas
out
popa
shll
fmul
je
loopne
mov
mov
jle
fdivs
jo
push
lcall
insl
mov
loope
dec
and
decb
adc
xchg
pop
add
cmp
dec
add
sti
mov
cli
fwait
xchg
mov
mov
pop
mov
mov
add
in
pop
clc
call
adc
stos
dec
or
add
movsb
cwtl
js
mov
enter
push
pusha
mov
inc
test
pop
outsb
rcl
xchg
dec
and
cmp
cmp
inc
inc
out
inc
xchg
xchg
xchg
inc
gs
inc
xor
loopne
mov
pop
test
push
les
popf
cli
mov
imul
push
sbb
cli
not
sarl
mov
aaa
mov
mov
mov
xchg
lock
and
lcall
jbe
sbb
push
mov
push
jno
inc
clc
xor
loop
inc
and
xchg
or
or
das
lret
xchg
mov
ss
pop
add
outsl
fadd
mov
pop
or
aas
out
rolb
or
rclb
xchg
add
mov
sbb
jmp
aaa
add
cmp
push
or
push
pushf
lea
mov
sub
push
test
cmp
lods
sbb
divps
mov
cs
or
and
divl
pop
out
inc
inc
movsb
mov
sbb
push
idivb
inc
scas
inc
out
adc
test
dec
push
jbe
xor
cli
add
iret
into
adc
cltd
xchg
in
xchg
or
out
scas
sbb
jb
je
test
pop
scas
xchg
es
xor
loopne
lahf
data16
mov
xchg
test
imul
dec
cmp
je
pop
js
mov
sub
sbb
loopne
lahf
lcall
add
test
sub
iret
mov
data16
pop
jle
pop
cmp
cltd
lods
dec
je
js
cmp
daa
jp
cld
mov
out
nop
push
fmuls
rcll
jmp
iret
sub
adc
lods
out
idivl
adc
lcall
push
mov
cmpsl
cld
jns
mov
add
sti
push
cltd
adc
shr
aaa
mov
sub
mov
fistl
cmpsb
and
aas
adc
ret
inc
mov
push
out
dec
imul
mov
inc
add
jge
pop
dec
hlt
sbb
mov
xchg
daa
in
inc
adcl
and
inc
cli
dec
and
clc
xchg
push
pop
pop
jnp
movsb
sti
sub
enter
pop
pop
mov
cmp
in
insl
push
test
clc
pushf
loop
lret
dec
adc
jne
pushf
sti
aam
dec
dec
aaa
cld
inc
das
cli
movsb
dec
loopne
or
lcall
and
ror
push
adc
push
sar
test
outsb
fistpll
dec
iret
sbb
fld
stos
add
in
push
les
ret
aad
stos
clc
lcall
ja
xor
scas
inc
jle
add
jne
xor
jge
dec
adc
or
fucom
fwait
pop
ss
in
outsl
lcall
sub
xchg
out
mov
out
les
shll
in
and
add
push
sub
mov
cmp
mov
sub
inc
xchg
xchg
lcall
sub
mov
sub
xchg
lret
mov
outsb
mov
fnstcw
mov
outsb
cmp
subb
adc
jno
mov
adc
cmp
out
fsubr
and
mov
add
repz
pop
push
dec
add
add
cmpsl
lock
fstpl
pusha
popf
sbb
notb
or
mov
and
inc
std
je
xchg
cmpsl
adcl
cmpsl
test
push
pop
jecxz
sbb
and
bound
fldenv
push
mov
movsl
sbb
adc
mov
mov
dec
ret
add
inc
sbb
pop
push
loope
or
jle
sarb
daa
mov
lods
js
jp
repnz
cmp
into
imul
insl
xchg
pusha
insl
bound
std
fld
or
loop
cmp
and
add
mov
test
inc
dec
mov
gs
mov
jae
push
fstps
iret
je
lea
mov
mov
fwait
daa
mov
jb
int
repz
ret
pop
push
and
mov
rolb
dec
inc
adc
in
jb
stc
or
mov
loop
mov
pop
es
add
xor
push
mov
cs
fisttps
jp
adc
jne,pn
in
loop
sbb
jle
jno
or
je
mov
pop
jp
mov
push
scas
jno
fidivs
rorb
fistps
fcmovbe
xchg
es
jnp
aas
popl
dec
ss
je
insb
out
mov
cmp
ja
ljmp
cltd
jle
das
add
lock
or
test
lret
jge,pt
std
stc
pmaxsw
call
ret
sarb
fs
out
test
jmp
dec
cmp
xlat
loope
or
lret
fs
pop
xchg
rorb
adc
mov
mov
mov
test
xor
pop
cmp
adc
sbb
mov
movsl
pop
pop
and
or
orl
repz
jl
jge
mov
and
leave
out
pop
lcall
and
cwtl
sub
or
cmpsl
xchg
inc
xor
mov
imul
jmp
popa
add
cmpsb
jno
rolb
jge
pop
cmp
sub
ret
sub
js
push
pop
or
movsb
cmp
shlb
xor
dec
pop
sbb
adc
push
mov
dec
lods
mov
shll
test
xor
mov
hlt
pop
sub
out
cs
adc
push
pop
cwtl
jle
loopne
xchg
jb
std
mov
sub
pop
adc
dec
pop
fstps
push
hlt
add
jo
jns
stos
cld
fldcw
ret
push
ret
xor
pop
xchg
mov
and
push
push
jle
movsb
xchg
push
mov
hlt
push
pop
cld
cli
jecxz
mov
xor
sbb
and
out
xor
loop
call
iret
adc
sbb
xor
mov
or
je
cmp
mov
out
sub
shrw
stos
lock
iret
cwtl
jle
and
mov
loope
pop
xchg
shll
mov
out
adc
popa
add
popa
and
movsb
popf
dec
push
xchg
cli
mov
cmp
dec
enter
sub
push
arpl
lret
jne
jno
and
xor
xor
xor
je
fistpll
es
ds
popf
push
fldl
insl
jnp
jl
das
cmpsl
mov
mov
jle
mov
ja
mov
adc
mov
arpl
testb
jnp
cmpb
imul
ret
inc
lods
cmp
cmp
mov
xchg
mov
clc
or
pop
out
xchg
mov
sub
inc
testb
and
pop
mov
xchg
mov
mov
mov
das
and
pop
ds
scas
loopne
ja
test
push
mov
mov
jno
cs
push
cmp
jl
scas
test
lds
jg
jbe
inc
and
stos
xlat
stos
push
fcoms
fstl
lahf
xchg
fxch
or
sbb
loopne
mov
stc
rolb
jo
jne
movsl
jo
addl
stos
into
push
mov
cmpsb
push
sbbb
mov
xor
mov
fists
mov
sub
cltd
cld
or
fnstsw
sbb
sub
test
pop
jne
arpl
push
adc
push
pop
xor
sub
sahf
iret
jg
icebp
sbb
das
add
cmpl
adc
sbb
inc
push
push
pop
insl
mov
std
cmp
fsubrl
pop
sti
pop
inc
xchg
sbb
out
pop
idivb
dec
mov
icebp
cmp
mov
movsb
clc
jnp
cwtl
js
push
repnz
lods
cmp
pop
loope
ret
sub
xlat
fisubrl
sbbl
and
lret
mov
call
iret
mov
push
dec
gs
test
push
mov
and
aad
xchg
cmc
push
inc
cmpsb
jmp
ljmp
cmpsb
sbb
push
inc
ja
pop
idiv
xchg
in
int3
inc
mov
mov
mov
popa
xor
cmp
push
cmc
jno
addr16
fxtract
adc
aam
add
jnp
adc
scas
xchg
sahf
mov
cmpsl
fwait
rcrb
xchg
push
ja
shlb
icebp
fcoml
xchg
add
xlat
int3
jp
sti
mov
jnp
xor
xor
je
xor
jecxz
repnz
into
mov
sti
push
roll
daa
dec
mov
mov
inc
adc
mov
fmull
scas
das
cs
test
push
decl
and
lds
xchg
sar
das
xor
imul
jmp
mull
and
fdivrs
sarb
rdtsc
sub
test
sub
inc
clc
sbb
inc
jcxz
add
xor
pop
int3
xchg
popf
inc
sub
insb
inc
inc
js
lea
pop
or
call
call
inc
sbb
and
fiadds
data16
out
mov
mov
and
add
mull
clc
mov
dec
insb
imul
sub
xor
xorl
mov
sub
or
mov
arpl
repz
mov
jle
int3
cmp
rol
shll
aad
and
cmp
repnz
mov
out
lret
fwait
shlb
mov
mov
mov
mov
arpl
dec
rcll
mov
ficompl
negb
shr
push
aas
jae
pop
std
addr16
inc
add
mov
inc
or
xchg
xchg
test
push
call
pusha
dec
xchg
mov
sbb
adc
push
mull
inc
loop
mov
popf
xchg
sub
sbb
push
jne
xchg
xchg
inc
rcrl
cli
popf
cmp
add
ret
cmpsb
das
sbb
push
add
or
xchg
jnp
dec
sub
push
jbe
repnz
lods
push
dec
sub
adc
cld
and
inc
jbe
sub
iret
mov
leave
xor
push
dec
std
or
fadds
lahf
cmp
dec
dec
leave
pop
in
repz
int3
mov
mulb
data16
mov
mov
mov
xlat
dec
mov
test
cli
into
xchg
leave
and
rcl
int3
in
push
dec
imul
in
in
mov
jmp
js
lahf
xchg
push
mov
xchg
sub
cmpsb
cwtl
cmp
dec
dec
push
out
inc
or
inc
mov
gs
sbb
std
clc
hlt
push
cmp
pop
push
popf
stos
daa
jbe
fidivl
pop
dec
mov
xchg
movsl
jo
dec
rcrl
and
imulb
mov
cmp
mov
mov
jg
mov
movsl
out
push
in
inc
sub
js
dec
or
or
jle
push
es
or
xchg
jns
lds
push
jae
push
cltd
xor
add
outsb
scas
cmp
sbb
mov
je
add
and
movsb
xchg
sti
cmc
mov
mov
and
fs
mov
xchg
lods
or
dec
ret
jge
mov
loope
xchg
movsl
lret
mov
pop
adc
or
nop
stos
mov
sahf
xchg
in
ret
xor
mov
out
cmpsl
lock
push
mov
lock
sbb
or
ret
test
xchg
out
sbb
xchg
in
inc
shl
repnz
adc
add
dec
add
ljmp
sti
dec
sub
add
ret
jbe
ja
mov
inc
jno
lods
mov
mov
jge
test
cmp
test
rorb
push
test
aam
lock
jne
sub
sahf
cmp
ret
int3
push
adc
negb
inc
inc
sbb
in
cli
add
imul
mov
lock
and
mov
ljmp
mov
in
inc
std
inc
fsts
dec
icebp
popf
movzbl
inc
xor
stos
sbb
fsubrs
leave
or
push
popa
inc
fs
xchg
inc
in
and
xor
adc
data16
call
out
insb
addr16
and
inc
enter
mul
imul
stc
mov
ret
inc
sti
inc
daa
scas
ds
or
xor
lods
push
scas
push
cwtl
stos
mov
push
addr16
mov
pop
pop
xchg
pop
lods
addr16
and
rcrl
sub
cltd
cmp
cmpsl
mov
aam
jo
inc
push
dec
jb
or
pop
inc
iret
out
push
loope
cltd
fcoml
pop
adc
ret
mov
mov
loope
xchg
mov
je
mov
jbe
fstps
and
mov
dec
fs
nop
xchg
pusha
pop
cmp
or
loop
xchg
aas
push
ret
ljmp
mov
std
pop
mov
fxch
in
fldl
std
pop
in
cwtl
bswap
xor
jnp
aas
inc
das
dec
in
jbe
jp
into
icebp
outsb
stos
bound
sub
xchg
pop
mov
sbb
leave
in
popl
outsb
fdivs
shll
mov
mov
jge
in
jle
jecxz
sub
pusha
loope
call
in
cmp
mov
push
mov
xor
cwtl
int3
nop
cmp
testb
stos
pop
lret
test
jmp
clc
push
fsubs
aas
dec
sub
xor
dec
push
test
enter
or
imul
mov
mov
inc
adc
mov
in
cltd
bound
les
jb
push
pop
flds
lods
jle
or
xchg
shll
cld
pop
pop
and
xchg
lret
dec
add
sub
sbb
pushf
rcll
test
sub
mov
sahf
mov
lds
sub
fwait
outsl
clc
es
popa
loop
or
sahf
andl
imul
mov
sub
push
and
push
or
cmp
lods
push
push
xor
sbb
je
mov
ficomps
and
stc
pop
sub
xchg
mov
inc
out
pop
mov
jecxz
aad
aam
movb
rolb
xchg
ljmp
push
movsl
push
push
inc
decb
adcl
push
ljmp
inc
xchg
inc
rcrb
call
pop
icebp
outsl
fistpl
adcb
jo
repz
lods
nop
or
or
pop
test
shl
jmp
inc
or
inc
or
adc
pop
test
cs
nop
notl
jg
adc
cmp
leave
and
push
movsl
mov
and
test
bound
push
adc
mov
dec
fisubrl
mov
cli
mov
aaa
jns
mov
and
jg
cmpsl
js
cltd
test
mov
and
test
outsl
mov
lret
scas
cmp
add
mov
adc
lahf
cmp
mov
andl
fidivs
push
popa
addb
mov
jg
inc
add
pop
les
nop
adc
test
mov
out
jne
push
push
push
add
mov
fcomps
out
add
push
gs
sub
sbb
jnp
inc
mov
sub
out
gs
dec
shl
dec
cmc
push
sahf
or
shlb
jae
inc
pushf
rorb
into
subb
adc
xchg
mov
out
jp
movsb
rcl
add
ja
cmpb
cmp
mov
fwait
adc
push
jp
pop
lds
mov
or
nop
or
lock
fcompl
or
mov
mov
push
sbb
sahf
inc
sbb
pop
xchg
fs
out
xchg
clc
mov
scas
jl
push
in
pop
jno
ret
mov
xchg
inc
push
or
pop
dec
jle
lret
rolb
pop
xor
xor
jne
in
js
pusha
aam
sub
icebp
rcll
jmp
out
sbb
pop
out
jno
jecxz
cmp
or
je
jmp
test
or
cmc
sahf
inc
mov
xchg
xchg
inc
addb
std
and
stos
adc
daa
lea
std
call
mov
sub
into
dec
sar
fldt
cmp
pop
xor
lcall
unpcklps
imul
stos
fldl
cmp
movsb
xchg
lcall
sti
dec
gs
or
loopne
mov
add
cld
jge
loopne
in
cmp
loop
xchg
sub
aam
adc
pop
and
sti
adc
pop
sub
xlat
push
cltd
mov
das
fiadds
ja
cld
gs
push
xchg
mov
cmp
and
inc
xchg
cmp
adc
sub
jg
mov
dec
add
mov
xor
sbb
adc
jp
xor
mov
mov
call
mov
xchg
xorl
dec
sbb
jmp
pushf
cmpsl
pop
xchg
mov
mov
js
rcll
xchg
inc
cmpl
imul
imul
push
adc
fs
ljmp
mov
outsl
cmpsb
lock
jle
push
test
cltd
shlb
xlat
stos
fs
push
sbb
adc
add
push
jno
jno
mov
fs
and
pop
jg
ss
enter
out
sti
cmp
pop
mov
out
jae
push
test
stos
cs
out
lods
aam
push
testl
jp
repnz
push
filds
cmpsl
out
fsubp
inc
loopne
sub
inc
push
enter
inc
inc
adc
ljmp
or
in
jl
lods
ja
in
or
jp
adc
mov
mov
inc
pop
iret
popa
jecxz
jle
out
mov
js
sbb
sbb
push
lret
jmp
bound
adc
jb
js
xor
cli
mov
mov
sbb
add
imul
adc
call
jmp
mov
xlat
mov
pop
ret
cwtl
adc
std
je
notb
lea
push
xchg
and
ret
out
lret
pop
das
mov
sub
mov
xchg
adcb
inc
mov
jne
sarl
aam
loope
stc
mov
jns
idivl
out
out
negl
fcomps
pop
sub
xchg
in
jb
out
out
and
mov
adc
outsl
xor
xchg
pusha
inc
in
mov
loopne
fdivr
pusha
jecxz
adc
mov
in
inc
fnstsw
push
sub
xchg
mov
fldl
icebp
mov
cmpsl
in
stos
nop
fimull
mov
cs
lds
pop
stc
pop
fcompl
dec
xor
jp
in
cmpsb
fidivrl
dec
js
pop
add
bound
push
jmp
in
fisttpll
xor
mov
sbb
arpl
sub
sub
jae
lds
out
jns
popa
dec
lods
leave
insl
aaa
pop
inc
mov
rcr
pop
adc
add
push
inc
js
jecxz
mov
mov
pop
pop
in
shlb
xlat
lds
rorl
inc
hlt
or
dec
dec
cmpsb
jecxz
add
mov
flds
cli
pop
mov
mov
sbb
loope
arpl
add
add
loope
push
outsb
xor
pop
mov
jo
in
cmpsb
test
fs
fsubl
mov
xchg
adc
fsubrp
outsl
adc
out
dec
inc
sbb
into
loopne
xchg
mov
sahf
popa
add
cmpsb
push
mov
cmp
es
out
jbe
inc
pop
outsb
add
inc
aam
ljmp
and
mov
cmp
cmp
or
push
shrb
sub
loop
lahf
idivb
rcrl
lock
xor
dec
ja
filds
push
daa
popa
cmp
jo
in
add
add
push
pop
rol
in
push
push
push
add
in
add
dec
andl
cltd
sub
pop
ftst
or
leave
andb
or
hlt
loopne
and
sub
sbb
push
in
xor
push
addr16
cmp
int3
arpl
mov
jl
aad
add
cmpsb
push
out
and
mov
pop
jl
push
daa
xchg
pop
jmp
push
aad
cs
sub
loop
les
sbb
adc
dec
inc
test
in
fwait
sbb
cmpsb
aad
xchg
jbe
xchg
or
repnz
pop
pop
xor
sub
loopne
xchg
xor
test
hlt
dec
push
sbb
out
add
rclb
mov
imul
and
mov
mov
pop
lcall
out
rcrb
outsl
insl
aad
mov
aas
stc
inc
dec
cmp
jbe
sbb
sarb
adc
xchg
fidivl
shrd
neg
cwtl
lock
in
fs
jne
cwtl
jbe
sbb
cs
popa
and
pop
les
stc
ds
outsb
cmpsb
lods
pop
cmpsl
movsb
mov
adc
xor
scas
push
mov
ja
jmp
push
sub
cmpsb
push
in
in
mov
mov
mov
clc
gs
xorb
mov
scas
pop
mov
rcrb
cmpsl
xchg
dec
lock
push
cmc
aad
out
mov
inc
je
stos
movsb
and
lret
jns
out
jbe
cs
mov
xor
loope
lds
mov
fcompl
lret
adc
test
adc
leave
ret
aam
adc
jne
dec
xchg
and
mov
lods
cmp
jae
test
cltd
push
out
jb
sarl
outsl
pop
mov
mov
mov
dec
pop
cwtl
xchg
push
cmp
push
adc
dec
adc
jno
cwtl
jl
arpl
loope
into
shlb
jbe
or
jl
mov
inc
imul
adc
test
inc
push
add
add
mov
popf
inc
lret
arpl
fdivr
or
mov
and
xchg
daa
scas
repnz
push
lods
add
test
sub
stos
movsl
mov
push
dec
dec
hlt
iret
inc
sbb
adc
fldcw
cmpsb
jmp
out
mov
mov
pop
fnstcw
jno
push
iret
mov
cmp
int
pop
adc
cmp
mov
inc
sbb
loop
sbb
push
leave
mov
fninit
mov
jp
dec
add
mov
xchg
cli
mov
sti
adc
cli
push
aas
dec
dec
mulb
es
dec
testl
icebp
leave
icebp
lret
dec
pop
into
add
adc
lds
sbb
pop
mov
mov
lods
lcall
cmp
rclb
cmpsl
sahf
pop
aam
in
dec
mov
sbb
adc
add
sarl
nop
dec
mov
cmp
jb
cmpsb
push
mov
or
decl
imul
mov
testb
jnp
rorb
cwtl
pop
inc
inc
jb
repz
sbb
out
sub
into
mov
push
add
mov
dec
rcrb
pop
inc
cmp
and
sahf
pop
mov
nop
dec
lock
out
xchg
mov
jne
aam
adc
fadds
push
inc
test
xchg
ja
cmp
sub
mov
cli
or
jb
fs
jecxz
mov
das
cmp
ret
pop
xor
cmpsb
xor
mov
aas
pusha
jne
lcall
inc
mov
shll
sub
outsb
xor
lret
jge
in
xor
xchg
dec
dec
adc
dec
aas
stc
subl
mov
push
stos
dec
cmp
in
dec
repnz
cltd
dec
jbe
loope
inc
jl
push
xchg
mov
pop
lret
fdivr
cld
adc
call
es
push
cmc
inc
test
ja
pop
mov
add
lods
push
daa
sub
push
mov
stc
jo
fcmovnu
nop
roll
daa
jae
lods
mov
push
jmp
cs
mov
jo
mov
pop
or
enter
loop
add
push
mov
add
loope
jno
leave
jnp
push
test
gs
push
xchg
pop
ja
divl
andl
bound
jmp
jbe
dec
pop
xchg
js
or
sub
insb
icebp
stc
push
fdivl
mov
cmpsb
in
cmpsb
dec
ss
mov
pop
inc
lret
xor
stos
sbb
add
shlb
mov
inc
js
dec
enter
jmp
mov
xchg
and
lods
and
rcl
sbb
movsl
lcall
sbb
aad
mov
mov
mov
and
or
mov
mov
aas
sbb
mov
out
push
lahf
mov
pusha
movsb
aad
adc
cmpsb
pop
and
mov
sti
sbb
inc
sub
jae
add
pop
mov
cmp
out
outsl
jmp
sti
jns
cmc
out
lret
jbe
pop
repnz
into
cmp
fistps
adc
fcomps
dec
test
inc
test
inc
cwtl
pop
inc
xor
fsubs
stos
pop
es
jnp
sub
cmp
fsubr
push
jp
and
es
mov
and
push
sub
xchg
in
sbb
mov
test
cmpsb
neg
out
cmp
lahf
mov
mov
push
add
lahf
xchg
imul
lcall
xchg
jo
and
rol
fdivrs
int3
fsubrs
xor
ja
pop
pop
or
pop
inc
movsl
mov
push
pop
mov
outsb
dec
lods
jne
movaps
out
dec
je
pop
sub
jmp
je
push
pop
sub
pop
rol
jp
dec
sahf
inc
enter
xor
pop
aaa
adc
ds
test
add
das
sub
push
lahf
repnz
mov
or
lods
mov
cs
imul
pop
cmp
stos
cmpsl
jne
push
xchg
fsubs
pushf
ffreep
xchg
mov
sahf
or
sbb
sbb
jne
sub
xchg
push
xor
pop
xor
cmp
vpcmpgtw
sub
cmp
mov
push
xchg
lahf
inc
push
testl
sub
popf
xchg
xchg
leave
repz
adc
testl
dec
xchg
push
pop
push
lea
clc
inc
aaa
test
repnz
and
and
push
test
mov
mov
push
adc
and
mov
xlat
stos
bnd
fwait
ret
rcll
mov
fnstenv
sbb
dec
imulb
mov
mov
cmp
jp
scas
mov
mov
subb
mov
fcomps
dec
push
sub
popf
aaa
cmc
bound
repz
dec
xchg
arpl
inc
sub
mov
xor
push
cli
push
in
sarb
ja
fildl
and
mov
pop
pop
xchg
cmp
adc
hlt
fiadds
data16
xchg
dec
es
js
mov
cmp
fadds
inc
out
sbb
rcll
push
cwtl
add
adc
movsb
adc
cmp
addr16
in
sub
push
xor
sahf
dec
jge
stos
in
icebp
or
lock
insl
int3
adc
in
or
jbe
jns
gs
stos
push
rolb
mov
sub
es
in
stc
xchg
and
mov
adc
hlt
push
xor
dec
hlt
jecxz
das
xor
sbb
sub
xor
das
loopne
aaa
jle
add
adc
rcll
bound
adc
jge
mov
jl
mov
jmp
outsb
mov
nop
or
mov
les
loop
dec
fcomi
xor
arpl
cmp
xor
or
cmpb
fs
scas
push
push
push
out
gs
jns
cs
je
mov
imul
addr16
repnz
shrl
out
aam
pop
mov
loopne
cli
sbb
or
adc
popf
rcrl
in
xchg
cmpsl
push
fildl
mov
push
jae
sahf
or
inc
push
push
mov
sub
push
lods
fcmovnu
and
push
or
cs
jge
pop
sbb
jl
add
sub
mov
js
pop
xchg
push
mov
inc
daa
pop
pop
mov
sbb
rcrb
ret
out
adc
xor
repnz
outsb
bound
mov
dec
ja
int3
lahf
dec
bound
pusha
adc
inc
lock
std
dec
pop
ljmp
pop
fcoml
cli
cmp
mov
adc
out
or
jg
sub
xor
fdivp
inc
mov
in
shlb
js
xchg
and
adc
mov
insl
ljmp
lods
decl
lods
movsl
mov
imulb
mov
mov
mov
stc
mov
arpl
leave
cmp
clc
in
fwait
insb
scas
ljmp
aas
data16
mov
dec
in
add
and
and
and
sahf
outsb
jp
add
loope
enter
or
lods
jne
or
arpl
add
out
aam
jg
lret
test
es
ss
push
lods
xor
scas
and
pop
test
lods
jo
das
test
fstpl
or
push
outsl
add
pop
pop
out
sub
xchg
fwait
xor
and
add
insl
dec
mov
cmp
test
fidivs
rcrl
sub
mov
push
lds
jns
mov
mov
cmp
fwait
sarl
loop
pusha
push
inc
xor
sahf
data16
mov
and
or
fnsave
mov
sbb
sbb
lret
dec
pop
icebp
outsb
ss
jle
push
ja
jne
loopne
cmp
pop
addb
movsb
lret
sub
jg
cmpsb
ss
aaa
stos
push
dec
xchg
sub
icebp
insl
add
mov
and
out
xchg
pop
mov
fcoms
mov
call
inc
inc
adc
mov
xchg
push
mov
pop
push
fistl
ret
mov
test
pop
mov
out
mov
mov
pop
lock
leave
push
pop
xchg
and
dec
dec
aad
jl
add
call
out
flds
ds
insb
lcall
mov
cmpsb
dec
fistl
push
aad
out
push
out
test
pop
pop
mov
push
ja
les
nop
pusha
mov
sub
pop
sti
adc
cmp
sbb
mov
xchg
lods
mov
dec
mov
addb
push
add
mov
fwait
mov
and
push
std
push
cltd
int
sbb
aaa
mov
push
and
jp
dec
adc
test
mov
push
xchg
mov
out
clc
add
jmp
jge
out
ss
add
out
pop
cld
mov
movsb
gs
push
into
js
lea
mov
xor
bound
lods
mov
mov
dec
push
clc
test
xor
insb
xor
fisubrl
xchg
jge
cmp
cmp
ret
ret
pop
dec
cmp
int3
test
mov
sahf
xchg
and
mov
es
ja
outsl
cmpsl
jo
cli
faddp
mov
adc
xchg
adc
xor
in
cmc
insl
mov
pop
fcoms
in
xor
inc
adc
ret
inc
xchg
and
fadd
inc
cmpb
mov
popl
mov
pop
repz
mov
sbb
pushf
dec
gs
cs
mov
and
das
add
xchg
cld
iret
cld
mov
mov
cmc
imul
or
out
jg
test
loop
iret
dec
pop
xchg
inc
pop
cmpsb
cmp
shll
stos
pop
fstpl
out
cwtl
jmp
mov
push
mov
jp
test
mov
cltd
mov
fwait
cmc
pop
movsl
lea
call
rolb
pop
out
cmc
cmp
icebp
or
dec
and
shlb
cmp
mov
push
jle
mov
repnz
lahf
sti
adc
or
insl
xor
mov
dec
adc
or
add
jae
pop
adc
dec
inc
fdivl
fmulp
fidivl
jae
loope
or
add
addr16
push
xchg
vrsqrtss
xchg
pushl
insb
pop
xchg
adc
xor
daa
or
repz
inc
daa
adc
pop
int3
add
in
push
movsl
xor
push
or
mov
sub
and
out
mov
loopne
push
xor
mov
negl
mov
das
jg
imul
fidivrs
xchg
test
or
rcrl
fidivrs
jle
or
sub
pop
xchg
xchg
xor
insb
jp
inc
gs
lcall
fiaddl
sbb
call
mov
gs
leave
int3
das
xchg
out
ss
cmp
in
clc
or
jl
pop
dec
xchg
mov
sub
or
push
jae
add
divb
mov
xor
xchg
dec
sbb
xor
fisttpll
mov
cld
lret
rolb
cmc
push
in
out
pop
arpl
xlat
xchg
shlb
push
dec
or
pop
aas
and
cmp
xor
es
mov
xor
negb
xchg
test
inc
aaa
jle
cmp
cmpsb
push
cwtl
test
mov
iret
pushf
cli
insl
cwtl
ficoms
push
test
loope
or
sbbb
xchg
pop
fs
mov
stos
fsubs
xor
xor
mov
fstl
out
divb
and
jns
pop
inc
xor
ja
call
xor
test
jecxz
das
test
jmp
mov
clc
iret
mov
inc
xor
and
sahf
rcrl
add
popa
lds
enter
or
aam
xchg
jb
jnp
jl
dec
mov
inc
add
aam
dec
repnz
sti
das
jmp
sahf
cs
lea
nop
stos
out
mov
xor
cmp
fmuls
adc
fld
inc
clc
or
cmp
xor
mov
int3
mov
mov
jl
in
mov
lahf
sbb
push
in
sub
mov
push
into
sbb
xor
ficoms
mov
rsqrtps
pop
inc
fucom
or
dec
add
adc
call
lret
pop
enter
mov
sahf
shr
sub
dec
push
or
and
mov
repz
mov
ret
shlb
and
cmp
pop
inc
or
adc
enter
adc
pop
pop
in
add
and
lahf
dec
push
sub
jo
and
and
lahf
icebp
or
sbb
mov
leave
add
ffreep
lcall
into
es
sub
adc
das
ror
clc
push
cltd
push
xchg
mulb
sub
popa
sub
mov
fisttpl
xchg
xchg
pop
lcall
pop
daa
mov
xorl
or
negl
jb
push
faddp
inc
pop
jmp
dec
cmp
add
mov
orl
inc
jp
lahf
bound
xor
adc
pop
iret
int
cwtl
es
loope
jno
jle
das
fldcw
pop
dec
lds
pop
or
lods
add
or
mov
aam
sbb
xor
ljmp
sub
scas
cmp
cli
cmc
add
sbb
in
xor
cmpsb
frstor
inc
mov
dec
dec
mov
push
shrl
outsl
inc
lock
daa
dec
outsb
sub
xchg
mov
pop
add
test
push
lahf
in
cmp
sar
out
mov
mov
pop
out
jns
nop
test
jl
pop
jns
out
sbb
out
xchg
and
push
xorl
fisubrs
jbe
nop
mov
sbb
mov
sbb
jns
lods
stos
fsqrt
dec
xor
loope
fcmovb
ljmp
adc
addr16
push
xlat
lods
lcall
repnz
inc
and
loopne
xchg
das
xor
test
shlb
inc
add
xor
sbb
sqrtps
icebp
add
sbb
add
mov
ljmp
fs
cmc
test
lahf
lret
jecxz
dec
les
daa
sbb
roll
pop
lock
push
mov
das
lea
sbb
mov
ret
push
adc
push
add
test
jmp
dec
push
aad
inc
cmc
and
sti
in
xchg
addr16
cmpsl
mov
mov
mov
insl
xrelease
mov
pop
xor
inc
adc
ret
sbb
call
rolb
clc
outsl
pop
fs
push
ljmp
add
push
fcompl
and
jnp
xor
mov
rclb
jns
mov
adc
rolb
cmpsb
rorb
adc
inc
xchg
call
cli
sti
dec
sbb
ret
mov
fcompp
repnz
cmp
bound
adc
ret
push
lods
scas
lahf
pop
cmp
sbb
push
scas
into
jne
xor
sbb
push
dec
aad
mov
or
out
test
dec
mov
aad
sbb
jmp
sti
mov
push
insb
hlt
inc
pop
jl
sbb
sub
xor
clc
bound
lret
mov
sti
mov
add
imul
jle
nop
in
adc
aas
jnp
mov
mov
jmp
inc
aam
push
push
pop
xchg
cmp
xor
inc
or
lods
jne
roll
push
pop
andl
xchg
xlat
mov
mov
dec
ret
ja
mov
fistpl
imul
mov
lahf
sbb
mov
or
test
cmp
loope
orl
aad
mov
add
mov
scas
adc
add
mov
dec
pushf
rcll
loop
xor
data16
roll
fdivl
push
sbb
push
in
test
movb
sti
xor
xor
test
cmp
xlat
int3
jnp
popf
mov
inc
mov
push
cmc
or
push
dec
sti
xchg
adc
inc
mov
pop
xor
aad
or
cmp
sub
pushf
pop
popa
scas
shrl
cld
ret
xchg
mov
push
jl
out
inc
out
imul
push
or
or
or
adc
xor
adc
push
dec
mov
and
jge
pop
xchg
jno
push
leave
mov
or
inc
jle
lea
test
aaa
jge
pop
sub
mov
jmp
aad
sbb
repnz
arpl
std
out
bound
jge
jbe
jp
push
jae
scas
jb
cmc
ljmp
push
dec
je
imul
jle
outsb
popf
mov
std
dec
add
int
lret
push
push
adc
insb
dec
sub
pmaxsw
loop
jge
mov
stos
push
jae
mov
jae
js,pn
push
outsl
test
or
aam
sub
scas
mov
mov
mov
sub
and
fisubrs
xchg
in
fldenv
push
outsb
daa
mov
addr16
xor
mov
loop
mov
jp
xchg
dec
lods
fcoml
jnp
fists
cwtl
add
mov
gs
out
and
mov
xor
pop
lret
pop
jmp
clc
daa
mov
lods
test
xchg
cmp
jo
jbe
aaa
xorl
divb
insl
sarl
jmp
les
aad
enter
cmp
ret
insl
add
add
icebp
mov
dec
sub
sbb
mov
xchg
jno
hlt
jno
jae
iret
and
and
mov
inc
sub
jmp
push
sbb
sub
aas
fdivrs
insb
sahf
add
rol
leave
mov
mov
xchg
and
test
ret
test
xor
cwtl
repnz
idivl
in
stos
cmp
add
fcmovbe
sbb
leave
stc
mov
pusha
add
gs
fstl
mov
repz
aas
jae
stc
push
mov
psubb
adc
inc
xor
subl
pop
xor
pop
jae
and
jge
fistpl
lcall
cmp
ret
in
sbb
pushf
lods
push
add
sub
sbb
rorb
enter
add
adc
lock
out
outsl
std
fildll
or
xorb
push
movsl
pusha
inc
sbb
or
call
adc
inc
mov
es
divl
movsl
fwait
jo
add
push
out
mov
es
add
mov
adc
lret
jbe
pop
inc
aam
mov
dec
adc
add
fsubrs
pop
mov
mov
test
ljmp
mov
fidivrs
out
fcompl
stos
xor
lods
sahf
mov
rcll
and
push
test
pop
mov
cwtl
jg
cmpsl
and
adc
lea
inc
push
sub
and
gs
sub
pop
mov
sub
outsl
stos
jns
adc
xchg
xor
dec
inc
mov
jmp
or
dec
mov
call
push
and
sbb
push
in
dec
repnz
pop
mov
jno
shl
mov
enter
and
fcomps
mov
pop
cltd
mov
inc
enter
add
fisubl
pop
add
lea
jle
movsb
xorb
pop
push
iret
jecxz
into
fcomi
fists
jo
sahf
dec
test
push
mov
clc
or
xor
je
jge
loope
adc
xor
pop
je,pn
jp
add
icebp
aas
and
fisubrs
fcomi
or
xchg
xor
jmp
stc
out
sbb
mov
mov
push
inc
xor
ds
ja
pop
insl
out
lds
enter
and
popf
inc
inc
sub
test
mov
repz
xor
xchg
cmp
cmc
push
xchg
and
xor
pop
sub
pushf
mov
cld
xchg
lret
xchg
add
jmp
test
sub
outsl
mov
fisubrs
insl
lea
mov
inc
push
dec
dec
mov
mov
pop
std
xchg
xchg
adc
cwtl
rcrb
addr16
cmc
inc
es
hlt
mov
fldt
jnp
fs
scas
xlat
cmp
icebp
sub
jecxz
mov
or
push
jle
cwtl
dec
or
pop
xor
jo
lret
mov
aam
mov
sub
aad
pop
mov
jae
add
inc
cmp
cmp
rcrb
jle
fidivl
lock
shrb
pop
sbb
adc
mov
rcrl
aad
mov
out
popf
or
leave
lahf
ds
adc
jge
das
mov
imul
push
and
fwait
xor
pushf
imul
xchg
daa
and
lods
cwtl
adc
in
add
fdivl
out
mov
mov
call
int
addr16
xor
mov
add
inc
push
pop
sub
out
xor
adc
notb
xor
lret
sahf
lock
dec
jge
stos
inc
sti
add
push
mov
mov
jge
inc
fdivrs
into
fmul
pop
add
xchg
adc
mov
iret
mov
jne
sub
lahf
rcrl
lcall
xchg
inc
sbb
cmp
sbb
imul
loopne
lock
mov
and
scas
add
mov
mov
pop
repnz
dec
pop
and
fnsave
pop
stc
mov
mov
and
es
js
xchg
insl
sub
into
loope
mov
or
push
and
mov
call
dec
movsb
xchg
rclb
pushf
loopne
inc
push
push
mov
imul
cmpsb
mov
push
jmp
std
jmp
leave
xchg
stos
sub
pop
lods
rorb
in
lods
outsb
pop
into
mov
ds
fwait
pop
sbb
cmpsb
cmpsb
sbb
sarb
jb
mov
test
cmpsb
sbb
test
adc
rolb
xor
and
loopne
fbstp
add
fsubrs
outsb
pop
les
in
arpl
loope
jno
mov
rorb
dec
inc
test
jb,pt
mov
fdivr
mov
mov
jge
xlat
pop
in
movsl
leave
adc
xor
and
mov
jno
imul
jno
arpl
scas
inc
test
sub
add
cmpsb
push
cmp
pusha
mov
sbb
pop
imul
inc
add
loopne
mov
lcall
fsubs
jne
test
jb
inc
fbstp
popf
xchg
inc
mov
shll
adc
cmpb
jno
aad
fstpt
pop
pushf
jno
mov
xchg
add
xor
aad
jb
sub
cmp
inc
in
insb
add
inc
jne
lods
sbb
sub
inc
test
pop
std
aad
in
xor
sarl
xor
aaa
mov
adc
cmp
mov
addr16
fnop
rolb
movsb
pop
popa
pusha
pop
cmpsl
push
mov
sub
xor
popa
cmp
rcrb
push
jnp
lods
or
scas
jecxz
repz
mov
cmp
rolb
leave
add
pop
mov
jg
jbe
sbb
jecxz
fildl
mov
mov
loop
aad
sub
or
sub
mov
movsl
add
adc
inc
mov
repz
out
cmp
or
popf
stc
mov
mov
push
pusha
push
or
movsb
jnp
cmp
jae
cmp
lahf
std
mov
ja
inc
mov
add
jl
push
push
mov
mov
xchg
movsb
mov
cld
push
je
sub
xchg
sarl
xchg
inc
cmpsb
cld
sub
scas
mov
shll
movsl
lret
cmp
jg
lcall
test
sub
test
jle
xor
movsl
iret
sub
mov
mov
cmpsl
and
mov
and
xor
test
mov
rol
inc
add
ja
insb
sub
cmp
xor
gs
fs
cmp
dec
cmpsw
jb
mov
mov
int3
jnp
daa
leave
dec
data16
movsl
test
rolb
xor
pop
pshufw
mov
jl
js
dec
es
sbb
ds
fdivl
inc
xorb
add
xchg
movsl
jbe
mov
in
xchg
cltd
push
nop
mov
sbb
rorl
jne
xchg
test
cmc
jnp
fldl
mov
mov
adc
xor
fsubs
add
lock
and
xlat
or
dec
push
lods
dec
pop
or
push
push
xchg
inc
in
or
loopne
sub
les
adc
mov
add
xchg
cs
je
jno
stos
loop
shll
xchg
add
rclb
shr
sbb
outsb
add
ds
stos
pushf
mov
lods
xorb
in
inc
imul
sbb
lahf
test
sub
inc
test
fcmovne
inc
pop
cmp
mov
out
mov
and
mov
lcall
cmp
mov
stc
rorb
fsubrs
xor
pop
xchg
mov
xor
dec
cmp
push
test
sub
fidivrs
cmp
mov
ja
sub
mov
je
jns
mov
jns
pop
out
adc
pop
and
mov
dec
jbe
mov
sbb
insl
xchg
jp
xchg
jg
adc
mulb
push
and
aas
aad
adc
adc
xchg
cs
push
dec
and
aas
xchg
lea
adc
push
sub
ljmp
sbb
repnz
lods
in
cltd
rcr
mov
and
xchg
sub
jae
repz
inc
xchg
sahf
add
inc
jmp
inc
ja
insb
addr16
lcall
jmp
dec
fnstenv
xchg
lahf
sub
fucomi
inc
vmovupd
and
popa
jmp
nop
gs
inc
cmp
fisttps
cwtl
rcll
dec
inc
into
jnp
cmc
fsubrs
imul
hlt
in
dec
and
and
js
mov
dec
in
pop
cmp
jns
ja
mov
or
gs
lahf
aam
jecxz
lret
pop
xlat
add
pop
outsb
popa
out
jbe
shr
loop
out
popf
fwait
sbb
addb
inc
or
fnstenv
xchg
inc
outsb
idivl
xor
stos
data16
cwtl
jp
pop
mov
mov
in
inc
sbb
mov
push
mov
pop
test
mov
xchg
ljmp
mov
sti
sbb
xchg
in
push
cwtl
movsl
adc
in
loope
jl
push
les
les
pop
fmul
lds
fbld
add
jmp
push
bound
jne
jo
cmpsl
cltd
dec
js
cwtl
push
loopne
push
mov
iret
aaa
inc
push
cld
adc
mov
xor
jge
push
cmp
mov
cmpsb
jle
sbb
push
sub
test
dec
fdivr
fisubl
push
test
cmp
sahf
jg
fdivl
xchg
dec
jge
ljmp
add
scas
cwtl
out
mov
pop
mov
int
dec
and
pop
call
rcrl
xchg
lods
jno
inc
mov
fwait
dec
stc
js
daa
stc
std
lods
xor
or
push
add
adc
add
imul
xchg
pop
shl
dec
stos
fcmove
sub
push
repz
repnz
fwait
out
push
cmpsb
shlb
inc
sub
and
ds
xchg
pop
push
xchg
add
mov
adc
fwait
test
ja
or
aaa
add
jg
push
mov
outsl
add
mov
cmpsb
mov
sti
loop
cmp
jb
fnsave
aas
xor
lret
leave
scas
gs
pusha
ss
mov
xchg
out
inc
add
test
push
aam
mov
xor
jecxz
aas
inc
imul
dec
sub
movsl
out
push
arpl
adc
test
push
pop
jo
fwait
das
inc
jnp
sub
xchg
test
xchg
cmp
ljmp
add
test
pushf
fldcw
cvttps2pi
lods
mov
aam
push
push
lods
das
xor
pop
aad
std
fmuls
adc
ds
and
fcomps
mov
repz
call
xor
xchg
pop
iret
sub
adc
cmp
test
add
inc
inc
arpl
push
cmpsb
aas
xchg
lds
pop
push
jg
ljmp
popf
add
bound
sbbb
pusha
adc
rsm
repnz
jmp
sub
fnstenv
rolb
daa
jb
out
fadd
int
test
mov
pop
sbb
jl
ljmp
jg
sub
adc
sub
and
ret
movsl
in
dec
sub
sbb
push
fldt
inc
mov
adc
mov
jb
push
int
cmp
jns
cld
call
fwait
scas
mov
cltd
int
test
xor
inc
pop
mov
shrl
mov
inc
clc
pop
sbb
ds
sbb
mov
out
mov
mov
hlt
lock
and
int3
xchg
out
lret
lret
nop
sbb
mov
fadds
repnz
clc
sub
popa
dec
out
xlat
mov
sub
lea
ljmp
outsb
fiadds
mov
add
paddsb
das
stc
mov
ds
int
lea
lahf
inc
jns
dec
and
adc
inc
inc
test
in
dec
add
pop
dec
imul
stos
cld
inc
call
jbe
dec
push
add
push
cmp
inc
pop
cmp
arpl
add
loopne
int3
xor
cmpsl
fmuls
cmpl
and
inc
xchg
mov
aam
movsl
xchg
lahf
sub
pop
add
fsubp
pop
jg
push
mov
mov
aaa
shll
xchg
jne
sub
aam
mov
xor
lods
sti
out
mov
cmp
sub
es
les
mov
mov
adc
mov
mov
testl
mov
cmp
adc
xchg
jge
or
mov
sahf
pop
fmull
imul
orl
sarb
daa
pop
mov
fisttpll
cmpsl
in
dec
test
xchg
scas
cltd
xor
ljmp
inc
sub
cmp
insb
pop
sbb
adc
dec
cmpsl
add
cmp
dec
cld
ret
aad
cmp
mov
and
and
adc
in
lods
mov
or
ss
insl
popf
and
mov
cwtl
pop
xchg
cmp
mov
mov
mov
in
jo
inc
fistps
sbb
rorb
push
mov
mov
movsb
adc
jbe
push
jp
test
cmpsb
adc
pop
mov
xchg
test
lret
lcall
aas
cld
inc
cwtl
jnp
sub
mov
adc
hlt
cmpsl
mov
cmp
mov
stos
cmc
and
push
mov
and
sub
inc
jae
and
enter
enter
mov
and
push
inc
lods
add
ja
xchg
jge
push
jg
add
push
scas
fucomi
inc
lea
dec
pop
pop
inc
pop
in
into
out
movsl
test
xchg
cmp
mov
add
dec
out
enter
pushf
fs
jno
mov
adc
pop
stos
push
cwtl
aaa
lods
cmp
stos
and
add
push
outsl
jne
adc
loop
fs
rclb
lock
mov
jecxz
ja
in
xor
add
imul
test
xchg
addr16
add
sbb
pop
mov
sub
sbb
mov
lsl
pop
icebp
jne
clc
outsb
rorl
rorl
mull
or
push
es
fldt
jmp
insb
das
ficomps
xor
cwtl
sbb
orb
sub
scas
push
jns
inc
pop
jp
add
cmpsl
aaa
xchg
cld
sarl
xor
push
aaa
xchg
rorl
and
mov
loope,pn
sbb
repz
repnz
outsb
out
xor
mov
xchg
int
or
andl
xor
xchg
gs
pop
or
pop
pop
push
mov
jg
jbe
rorb
mov
xchg
pop
insb
cmc
adc
dec
mov
hlt
notl
cmp
dec
xchg
push
push
or
mov
pop
mov
sub
lret
fwait
pop
xor
dec
push
daa
cs
jns,pt
lret
jp
xchg
pop
ja
add
insl
adc
push
push
cmp
adc
bound
mov
das
and
hlt
pop
outsb
sbb
push
bound
sbb
or
test
aad
ret
inc
divl
dec
cmp
in
cmp
fwait
cmp
mov
or
clc
sbb
xchg
test
mov
rcrb
push
xor
into
jb
daa
stc
cmp
fs
cmp
sbb
xchg
cmp
pop
nop
in
scas
movswl
or
aas
bound
sbb
mov
inc
xlat
sub
movsl
repz
xor
sarl
mulb
daa
lods
test
bound
mov
or
adc
jle
adc
scas
xor
push
inc
mov
push
das
dec
dec
push
shr
aad
inc
dec
adc
or
inc
push
pop
ss
add
scas
adc
sub
ret
mov
adc
inc
nop
popa
out
adc
adc
xor
sbb
fstl
mov
xchg
mov
cmp
xor
aaa
leave
push
adc
sahf
sub
arpl
inc
add
or
std
push
std
aaa
mov
ret
sbb
andl
out
jge
mov
ss
xor
dec
and
nop
dec
pushf
fiaddl
and
pop
insb
in
mov
je
popf
dec
les
fwait
or
les
lds
push
and
leave
jns
pop
leave
push
jecxz
mov
imul
and
fildll
call
or
fsts
imul
movsl
dec
mov
or
add
mov
outsl
insb
push
das
inc
frstor
mov
decb
inc
xlat
shlb
adc
movsb
xor
mov
xor
lods
xchg
mov
sbb
unpckhps
add
mov
in
sahf
cmpsb
repz
nop
mov
repz
fldt
sub
pusha
ds
and
jne
lds
loop
stos
dec
push
mov
movsb
sub
pop
cmp
mov
insl
mov
les
cmpsl
inc
inc
inc
mov
mov
das
adc
outsl
inc
sbb
fstpt
xor
lahf
add
inc
jnp
xchg
add
testl
sub
and
adc
test
or
jae
ja
and
pushf
in
mov
adc
inc
dec
fsubrs
jne
in
xchg
mov
je
mov
dec
mov
pop
jle
mov
pop
leave
stos
xor
dec
ljmp
mov
mov
sub
fs
ja
sbb
lods
clc
fs
incb
adc
push
fcoms
sbb
mov
fucomp
fidivrs
iret
lcall
in
in
add
pop
outsl
in
mov
fstps
xchg
decb
sub
shr
out
cmp
push
lahf
jg
pop
cli
push
dec
test
clc
mov
and
push
xchg
jmp
aas
cmpsl
inc
aam
adc
lret
xchg
mov
push
xchg
or
and
and
or
adcb
pop
push
mov
lret
jb
pop
xchg
adc
sub
xchg
cli
cmp
sub
orb
inc
fwait
and
mov
pop
xor
mov
dec
rclb
xlat
pop
add
mov
mov
stos
push
mov
test
cmp
cmc
xor
xchg
repz
xor
repnz
pop
ja
ret
inc
es
jno
rolb
cmpsl
es
lods
dec
inc
push
outsl
cmp
mov
mov
inc
push
sbb
out
icebp
test
pop
mov
dec
lcall
sub
lahf
xchg
cmc
ds
jb
or
xor
jns
lods
movsl
mov
sub
aas
shll
addr16
out
roll
sub
adc
out
addb
out
aam
or
dec
jo
or
pop
cmp
xchg
lret
jmp
add
pop
mov
aad
xor
dec
daa
test
outsl
mov
ret
mov
out
xor
jne
test
leave
imulb
xor
xlat
jbe
fnsave
mov
jg
es
stc
fimuls
roll
es
mov
cmpsl
xchg
cltd
fstpl
xchg
imul
cmp
mov
and
lahf
sbb
pop
imul
mov
push
cmp
inc
jp
sbb
xor
cltd
mov
jp
lahf
pusha
push
lods
dec
push
mov
cwtl
aaa
jle
fldz
aas
pusha
dec
ja
mov
jns
adc
dec
or
cmp
xchg
repnz
mov
mov
xor
sub
sti
stos
test
cmc
test
imul
in
sbb
jns
pop
pop
scas
sbb
adc
test
int
sub
dec
outsb
jmp
adc
out
sbb
push
and
psraw
mov
out
cmp
cmp
add
sarl
push
pop
popf
in
subb
mov
fdivp
lret
mov
jmp
aam
push
mov
sarb
mov
cmpsb
mov
jecxz
cli
lds
xor
dec
jge
sbb
jo
jecxz
mov
clc
xchg
mov
sub
loopne
or
scas
push
notb
jne
and
mov
pop
fstl
cmp
and
loopne
in
or
jns
fcomps
sub
adc
add
or
sub
fwait
adc
mov
ds
sbb
inc
rclb
pop
push
mov
fmull
push
rorb
mov
arpl
lahf
lret
adc
and
mov
dec
sbb
fmull
loope
xchg
dec
pop
pop
sbb
lock
out
cltd
stos
stos
inc
sub
shlb
cwtl
leave
add
push
repz
pop
push
fs
aad
push
dec
sub
mov
adcl
add
addb
loopne
add
ret
add
add
sbb
push
fcomps
cltd
cwtl
stos
add
xchg
out
das
out
enter
mov
iret
ja
adcl
js
lahf
int3
cld
sbb
ret
pop
pushf
outsl
mov
add
sbb
hlt
shlb
xchg
adc
add
lret
test
scas
adc
aas
lahf
mov
sbb
ror
jbe
sbb
or
hlt
in
fcmovu
repz
xchg
loope
mov
int3
jl
je
xchg
xchg
xchg
inc
sahf
lahf
mov
fcompl
fs
outsl
cmc
inc
pushf
test
adc
sub
enter
pop
loopne
inc
loopne
lcall
sti
dec
mov
cli
mov
and
lahf
push
push
loope
pop
mov
jne
insb
xchg
test
jp
lea
lahf
mov
mov
dec
and
outsl
push
jecxz
sub
jb
in
adc
cmovne
popf
dec
sub
sub
stc
mov
cmp
cltd
pop
xor
cmp
cmp
mov
repnz
sarb
aad
mov
jp
xor
add
addb
push
test
filds
lahf
adc
lcall
adc
sub
mov
out
add
out
jne
loope
or
sahf
push
bsf
cmp
out
lods
push
add
adc
jmp
pop
fstpt
pusha
xchg
shll
int3
mov
jne
repz
ds
push
adc
or
daa
jge
cld
daa
je
adc
push
in
repz
testl
pop
cs
inc
and
sbb
cmpsb
mov
aam
push
mov
xor
fsubs
mov
mov
xor
mov
xchg
imul
jno
xchg
lods
push
cmpsb
pusha
out
jge,pn
nop
daa
int3
enter
clc
gs
out
arpl
out
jo
pop
sbb
loopne
dec
pusha
or
rcrl
lock
pop
lahf
int3
and
jg
mov
test
ljmp
push
and
mov
aaa
adc
or
xor
idivb
mov
fs
jmp
ljmp
xchg
pop
and
sub
jp
loop
cld
add
xchg
enter
adc
xchg
xchg
pop
adc
and
mov
mov
movsb
adc
push
pop
loopne
fimuls
or
mov
push
sub
push
test
xchg
adc
nop
or
push
in
mov
test
cmp
mov
and
rolb
movsb
cmp
mov
pop
jnp
mov
adc
pop
in
mov
mov
xchg
adc
cmc
inc
inc
out
sub
xchg
jle
pop
mov
out
push
sar
popf
rorb
shrl
xor
pop
mov
lret
mov
and
cmp
cli
int3
int3
pop
jg
adc
stos
jecxz
sub
inc
mov
divb
mov
jmp
dec
jge
pop
gs
movsl
or
stos
aas
stos
out
das
dec
stos
inc
jne
jmp
inc
mov
adc
stos
pop
fs
inc
insb
mov
fistps
rcll
mov
adc
inc
and
daa
inc
add
cmp
mov
cmp
sbb
sbb
outsl
sub
insb
outsb
xchg
cwtl
sub
pop
push
xor
loope
mov
cli
sub
repz
movsb
stos
mov
push
jne
add
es
jmp
adc
jle
xor
mov
ljmp
mov
int
pop
pop
movsl
stos
or
lods
push
mov
lds
daa
mov
data16
lds
mov
loopne
test
and
and
cwtl
xchg
dec
pop
lea
outsl
push
push
repz
lret
add
jae
adc
push
sbb
lahf
add
cli
adc
xor
insb
adc
jno
cmpb
aam
jbe
and
cld
push
lock
inc
push
dec
out
ret
in
cs
lods
imul
rcll
adc
lods
mov
add
mov
sub
inc
sub
in
xor
loop
fsubrs
jmp
lods
rol
mov
xchg
pop
je
xchg
adc
cltd
hlt
pop
js
jae
pop
loop
lock
jp
dec
stos
xor
xlat
aad
jno
and
aam
stc
mov
mov
mov
cmpsb
js
lret
pop
push
lods
add
mov
test
jo
push
or
test
cmp
mov
xchg
in
xor
and
xchg
sbb
mov
cmp
jno
out
dec
push
and
jno
cmp
mov
and
dec
out
add
inc
addr16
xchg
or
xchg
xor
and
test
xchg
in
or
mov
clc
in
push
or
fistl
arpl
mov
jecxz
xchg
mov
mov
push
pop
jge
ds
push
cmpsb
hlt
out
mov
or
xchg
mov
fldenv
dec
push
mov
mov
jae
enter
cmp
mov
xchg
mov
insb
int3
adc
pusha
fists
out
out
cwtl
and
js
add
lret
pop
out
and
sub
aam
fldenv
mov
icebp
and
push
lret
xchg
mov
jp
mov
je,pn
lods
loop
or
push
pop
fldenv
aam
jge
pushf
insb
mov
lret
jno
cli
dec
scas
shlb
lret
jbe
out
int
dec
sbb
out
lods
jg
pusha
xor
xor
in
imul
adc
daa
idivl
imul
push
andb
sbb
mov
mov
mov
jle
aad
pop
fcomps
sub
or
mov
fistpll
dec
push
xor
out
jae
out
mov
lods
callw
movsb
subl
jb
inc
out
push
clc
cmp
pop
mov
add
popa
push
xchg
daa
mov
sar
sbb
jl
inc
fs
out
shll
xor
jbe
loop
nop
jl
mov
cltd
insl
jmp
jne
add
sub
sbb
ss
or
in
lcall
mov
insl
mov
jno
mov
fdivs
inc
cmpsl
shl
xor
jbe
rolb
lods
xor
ret
subl
lods
mov
sbb
loope
pop
mov
int3
pop
pop
sbb
push
jecxz
sub
in
shrb
pop
in
sub
roll
popf
out
out
daa
jmp
mov
out
mov
out
aaa
dec
inc
add
fisttpl
push
in
imul
aas
and
or
mov
mov
add
lock
lcall
testb
mov
pmaxsw
adc
sub
cmp
shll
or
adc
pop
xor
lahf
es
adc
push
out
cmp
mov
push
sbb
icebp
cmp
dec
push
pop
sub
jecxz
adc
ficomps
mov
dec
add
sbb
and
fistpll
xchg
jne
xor
ret
data16
es
jns
mov
std
int3
fisubrs
mov
inc
sub
xchg
sbb
xor
fmull
clc
cli
sub
enter
ljmp
add
push
scas
sub
jbe
cmp
jns
xchg
mov
js
stc
mov
push
bound
cltd
jg
push
jne
pop
dec
jae
push
sbb
sub
aad
rorl
imul
and
jbe
out
test
add
nop
xchg
push
iret
xor
test
mov
fsubrs
ret
cli
leave
pop
imul
stos
and
xor
push
adc
ret
push
xor
out
int3
mov
jp
dec
dec
cs
jno
idivl
mov
dec
dec
jle
add
loop
shrl
adc
pop
or
aaa
cmp
leave
add
sub
jmp
cmp
pushf
addr16
loope
in
out
out
mov
push
inc
mov
mov
lret
repz
dec
jb
mov
ljmp
and
xor
jne
mov
sbb
jno
push
push
mov
xchg
mov
mov
push
js
add
mov
fisubrl
push
sbb
cmc
emms
into
lods
pushf
ja
push
repnz
jo
pusha
sahf
leave
in
add
stos
push
inc
sub
repnz
mov
stos
lods
pop
mov
out
stc
ficompl
in
and
and
cmp
push
nopl
arpl
pushf
sbbb
sub
push
ret
and
mov
mov
into
jg
lahf
xor
adc
adc
loopne
std
movsl
push
pop
inc
ret
nop
sub
xchg
repnz
iret
sub
in
cli
or
sub
inc
pop
inc
mov
lcall
ss
pop
inc
pop
insl
xchg
lea
sub
es
outsb
mov
push
jecxz
insb
push
rcl
jno
inc
sbb
int
cmpsl
dec
or
pop
loopne
pop
push
js
arpl
sub
xchg
mov
idiv
xor
inc
outsl
movsb
jecxz
pop
or
out
jmp
lods
cmp
mov
and
lcall
imul
pop
sub
cld
push
adc
movsb
xor
pop
lahf
adc
daa
jnp
sub
adc
inc
mov
lds
addr16
seto
fwait
xchg
jnp
inc
and
insl
adc
push
mov
sub
sahf
add
sub
loope
repnz
fiadds
lcall
mov
mov
push
shll
dec
sub
pushf
push
or
outsb
scas
and
mov
pop
pusha
fcmovne
and
rcl
in
enter
push
xlat
push
dec
and
sub
movsl
and
jecxz
ror
mov
sbb
les
cmpsl
push
add
scas
adc
jbe
mov
cltd
jae
flds
mov
cmpsb
leave
pop
mov
fcompl
push
sahf
ret
les
and
lea
movsl
sub
in
shrl
stos
shr
out
ljmp
mov
mov
lds
or
fimull
jp
ja
mov
bound
cmp
jno
add
in
loopne
ffree
ret
repz
jmp
addr16
cltd
sbb
sub
test
int3
cwtl
lods
iret
daa
incl
out
and
cld
push
shl
cmc
sbb
cmp
cmp
rcll
in
test
test
jns
push
es
sbbl
call
shrb
inc
and
push
lret
call
insb
xor
add
mov
or
or
adcl
movsl
popa
inc
into
out
inc
nop
mov
add
leave
sti
add
mov
cmp
shlb
out
fcompl
dec
push
jb
mov
cmp
jp
xchg
push
xchg
out
xchg
insl
ja
xor
scas
movsl
mov
or
js
jl
or
lcall
and
cmp
push
ds
push
push
movsb
outsl
lds
mov
cmp
mov
int3
add
repnz
in
mov
push
pusha
decb
sub
loope
push
mov
xchg
sti
xchg
push
xlat
lods
lea
in
xor
repnz
inc
xchg
fadds
loope
stos
in
add
dec
ja
push
push
adc
fiaddl
nop
aam
jbe
mov
inc
lock
xor
mov
add
sbb
mov
push
es
and
push
andb
mov
sahf
and
pop
add
push
enter
inc
addr16
popf
in
insb
test
into
dec
mov
adc
mov
cwtl
lods
hlt
xor
xchg
popa
pop
jae,pn
xchg
int3
rorb
lea
cmpl
in
call
xchg
ret
mov
mov
fimuls
shufps
xchg
std
add
mov
test
sbb
pop
and
ret
xchg
xchg
sahf
dec
icebp
test
sbb
add
rcrb
dec
scas
arpl
pop
jge
xor
mov
stos
lock
aad
jl
xchg
xchg
rcrl
arpl
add
dec
in
and
ret
cmp
fisttps
stc
in
and
xchg
out
mov
ljmp
adc
push
sbb
mov
scas
test
xor
bound
xchg
stos
cld
cmpsl
add
lahf
cmp
sbb
in
push
aam
addr16
in
shll
dec
sub
push
or
sub
lahf
into
punpckhwd
cmpsb
aaa
subl
aas
jge
push
mov
cli
mov
into
push
dec
or
popf
jns
inc
xchg
std
test
mov
ret
mov
jae
fildl
mov
cmpsb
pop
or
xor
dec
arpl
stc
jbe
jp
mov
jl
dec
push
cmp
stc
enter
inc
sbb
and
daa
insb
ds
outsb
stos
adc
xor
call
push
adc
dec
or
mov
cmp
sti
jg
push
add
sub
jnp
or
or
adc
adc
popf
mov
and
adc
pushf
imul
repz
cmp
lcall
dec
sbb
daa
push
dec
dec
pop
sbb
out
stos
int
pop
dec
pop
addr16
mov
pop
lods
xchg
jo
mov
or
add
mov
jae
imul
jg
das
hlt
mov
addl
xchg
adc
mov
mov
inc
scas
dec
mov
jg
repnz
mov
ds
push
imul
jns
pop
cmp
in
sub
out
imul
and
or
daa
add
jmp
testl
rcrb
pop
jo
pop
cld
mov
popf
bound
pop
sub
xor
movsl
or
and
pop
mov
icebp
add
jnp
scas
push
dec
lods
mov
popf
adc
test
in
jge
loopne
cwtl
rcrl
pop
sbb
into
add
adc
push
jne
jbe
pushf
add
pop
out
mov
inc
lcall
idivl
in
dec
orl
shrb
shll
test
stos
xor
cmp
inc
mov
jae
in
leave
mov
cmp
stos
sub
inc
nop
int
movsl
sarl
and
sub
inc
jg
sbb
stos
es
fistpl
mov
test
mov
xchg
add
pop
insl
scas
xor
jmp
mov
addl
mov
jmp
daa
es
cmp
mov
mov
mov
test
pop
mov
pop
pop
lock
push
mov
cmp
cmp
cltd
outsb
inc
test
dec
dec
dec
and
xchg
addr16
mov
bnd
sahf
cwtl
jbe
or
decb
movsl
out
aam
jp
and
fidivrl
addr16
lret
and
adc
outsb
stos
mov
dec
bound
sbb
test
out
add
repz
sti
in
pop
aad
daa
pop
cli
jmp
pop
mov
imul
mov
int
sbb
and
in
inc
inc
in
sbb
add
sbb
push
mov
scas
mov
xchg
dec
push
and
mov
pop
repz
cmc
aas
or
pusha
orb
hlt
cs
sahf
jle
jecxz
push
push
push
push
pop
iret
pop
xor
into
inc
cli
inc
add
mov
fcmove
push
mov
dec
pop
sub
or
aam
testl
sbb
jno
nop
iret
mov
jbe
sbb
pop
mov
inc
aas
adc
xor
sbb
xchg
pop
into
push
ja
sub
out
test
outsb
shll
or
push
clc
sub
loopne
push
push
sti
push
test
push
or
movsl
xchg
arpl
push
mov
stc
es
mov
outsl
negl
out
arpl
sub
inc
mov
insb
imul
call
loop
stos
xlat
inc
hlt
lret
insl
imul
inc
push
lret
sub
and
pop
cmpsb
jne
xor
adcb
mov
or
mov
dec
fistpl
sbbl
je
sbb
fwait
or
fdivrs
mov
mov
sub
cmp
out
dec
mov
sub
ljmp
out
ljmp
inc
rcr
xor
jl
inc
rcr
stos
enter
cs
dec
or
fisubrl
push
jo
pop
sahf
pop
or
and
iret
mov
das
inc
bound
mov
mov
and
jne
jb
add
lret
mov
adc
dec
rcll
add
outsl
push
mov
cli
sub
mov
mov
add
jecxz
sar
test
test
out
addr16
push
loope
jg
add
cwtl
xor
rcr
out
lret
ss
xor
pop
loope
jmp
scas
jge
sub
xor
jne
stc
sbb
les
and
and
stos
imulb
stos
pusha
leave
das
loop
insl
popf
mov
sub
leave
shll
int
sub
rep
lods
pop
mov
stc
rorl
adc
scas
adc
mov
xor
pusha
sbb
fidivrs
sub
out
into
inc
dec
pop
sbb
icebp
leave
push
push
xchg
xchg
icebp
xchg
shrl
pop
mov
loop
and
inc
psraw
add
lret
int3
lods
dec
sbb
push
or
jne
adc
mov
into
adc
dec
dec
xor
mov
push
es
dec
adc
jmp
inc
insb
xor
inc
loopne
mov
pop
dec
and
mull
fnstcw
mov
das
sarl
xchg
push
pusha
xlat
lods
std
ror
and
push
mov
xchg
xchg
mov
int3
jae
xor
xor
inc
fwait
push
setp
pop
popf
pop
inc
fcmovnb
add
jns
push
icebp
insb
loope
jmp
and
fidivrs
loope
mov
sbb
mov
or
inc
imul
sub
xchg
dec
cmpsb
mov
sbb
push
cmp
jns
sbb
adc
sbb
mov
lds
dec
repz
mov
push
xchg
sarl
push
sub
jle
xor
mov
jg
add
out
xchg
cltd
insl
and
sub
push
pushf
into
jmp
out
sbb
imul
sbb
lcall
jae
popf
and
inc
stos
imulb
mov
xorb
lcall
xchg
and
xchg
xchg
mov
mov
cmpsl
pop
pop
dec
ljmp
out
inc
and
xchg
loop
cwtl
test
aad
xor
pop
je
inc
cmp
inc
xor
fstpl
stos
lock
ret
stos
add
into
int3
cmp
mov
mov
dec
adc
xchg
and
ljmp
inc
add
add
xor
lea
clc
ja
aam
cmc
and
pop
jno
mov
movsb
inc
mov
mov
lds
out
ret
data16
movsl
pop
push
cmp
lds
in
shll
data16
mov
jnp
mov
subl
std
insb
pop
xchg
add
sub
pop
stc
in
dec
inc
or
les
frstor
mov
mov
loop
sbb
jg
sub
fdivs
sahf
lods
cmp
or
jbe
test
push
out
jno
sbb
sub
sbb
sbb
arpl
out
xchg
repnz
jns
add
xor
mov
orl
in
push
pop
sbb
sbb
cmc
push
int
adc
pushl
jno
arpl
push
mov
rcl
pop
loopne
icebp
cmp
lret
jecxz
notl
dec
mov
aaa
dec
sub
push
movsb
adc
and
popf
pop
arpl
iret
mov
mov
push
inc
testb
fadds
inc
dec
mov
mov
jmp
pop
cmp
add
into
clc
into
push
fcmovb
mov
roll
outsl
addr16
mov
xor
hlt
adcl
shr
jmp
xchg
clc
mov
lds
jbe
mov
jge
jecxz
push
mov
push
aam
insl
xchg
xchg
xor
outsb
orl
xchg
sbb
cmp
push
subl
aaa
jmp
jmp
xor
das
rorb
mov
xchg
pop
iret
push
push
hlt
ss
mov
in
and
xor
bound
jp
jecxz
cli
ja
xchg
lods
aam
and
out
shlb
pop
dec
sub
aas
push
ret
sub
je
jg
cli
add
cld
pop
xor
dec
add
push
sub
dec
jne
pushf
mov
ds
jne
loopne
lock
jne
imul
add
mov
vcomisd
jo
inc
inc
jg
jmp
push
and
aas
jb
insl
rcrb
movsb
mov
and
lret
and
insb
outsl
nop
jns
lock
or
adc
loope
sar
scas
fstpt
adc
mov
xchg
lea
sub
daa
mov
and
mov
push
int3
aam
mov
mov
negb
or
and
outsl
pop
add
loope
gs
or
mov
popf
dec
mull
stc
pushf
push
into
cltd
or
out
shll
dec
sarb
mov
xchg
call
lods
xchg
fdiv
or
fiaddl
xor
xor
ret
push
insl
js
iret
inc
sbb
hlt
ljmp
jg,pn
inc
sbbl
iret
arpl
or
mov
jnp
cmp
lds
mov
es
mov
inc
pop
sub
out
mov
adc
mov
adc
lea
bnd
pop
jns
and
mov
dec
sub
cmp
xchg
or
pop
ret
sbb
jge
lahf
jmp
subps
stos
xor
push
out
push
jmp
inc
mov
js
xchg
stc
xor
jmp
ficompl
lea
cmp
xlat
or
test
dec
out
and
data16
rorl
xchg
fwait
out
xor
or
mov
lea
test
ds
dec
fdiv
out
mov
or
pop
jmp
movsb
or
dec
ljmp
pop
xchg
fs
in
test
push
in
cmp
leave
jmp
inc
add
fwait
leave
mov
aas
fbld
adc
mov
je
jmp
pop
sti
jo
daa
mov
cmc
or
xchg
dec
sub
out
outsl
sub
sbb
fmul
insb
mov
cmpsb
mov
jae
pop
xchg
jge
cld
sbb
in
gs
mov
pusha
fdivrs
and
cli
cmp
cmp
aaa
test
fsubrs
rolb
test
ret
sahf
mov
sub
cmp
xchg
sub
xor
sbb
lock
sub
cmpsb
loopne
cli
out
sub
loope
call
xchg
dec
cmpsl
das
pushf
jns
pop
push
sbb
pop
outsl
jmp
ret
pop
imul
imul
mov
xchg
jg
repnz
jae
dec
cs
shl
imul
lcall
repz
loope
cmp
and
jl
mov
pop
leave
std
or
pop
imulb
cmp
lea
gs
in
adc
sbb
mov
pop
and
jmp
jo
daa
jae
stos
add
mov
out
movsl
in
mov
test
sbb
cwtl
ret
insb
adc
inc
sbb
mov
mov
sub
popa
ret
xor
sbb
fs
jge
dec
sub
xchg
xor
roll
fwait
ss
pop
dec
cs
cmp
inc
test
notl
aas
out
jb
dec
add
fimull
std
dec
sub
pop
insl
lock
mov
jbe
out
std
in
lret
sarl
and
and
lahf
in
inc
mov
es
and
es
dec
pop
aad
push
dec
jg
adc
nop
inc
cmc
in
aaa
jns
jae
rorb
xor
iret
lods
lods
pusha
scas
scas
daa
cmp
dec
out
vmptrst
pushf
xchg
pop
jno
rorb
push
jno
cmp
dec
dec
addr16
scas
out
insb
pop
shlb
or
inc
fcom
stc
loopne
mov
in
sub
arpl
jl
adc
and
mov
testl
mov
sbb
lcall
fmul
or
adc
dec
or
into
add
movsl
shll
xchg
cltd
popf
cmp
pop
jo
lock
pop
leave
cmp
int3
stos
fs
insb
xchg
fimuls
push
sub
fistpll
dec
out
adc
shll
lahf
pusha
lock
lea
sub
mov
or
shrb
lret
ss
mov
mov
nop
fistpl
push
cmpsl
sahf
aam
push
fidivs
inc
and
int3
fldenv
fiadds
imulb
fiaddl
and
pop
pop
outsl
mov
sbb
divb
and
and
pop
mov
sbb
pop
jbe
dec
repnz
add
push
or
jns
jno
adc
mov
xchg
or
dec
pop
insl
cmp
adc
adc
int3
fisttpll
shlb
mov
sbb
xchg
add
and
pop
and
adc
icebp
jg
sub
dec
push
aad
mov
in
loopne
inc
fwait
mov
ds
jo
jge
outsl
or
cwtl
xchg
ljmp
jle
test
stos
je
push
sub
inc
jle
push
xlat
sarl
aaa
mov
sbb
dec
shr
cltd
xchg
pop
mov
sahf
subb
xor
add
jmp
ret
and
and
pop
lock
xor
add
imul
pop
dec
mov
fimull
adc
and
inc
push
ds
int
or
cmc
xchg
jecxz
out
aas
insl
dec
imul
outsl
scas
aaa
in
stc
adc
push
scas
lcall
repz
mov
out
pop
std
dec
test
popf
popf
push
mov
lds
and
cli
dec
in
aam
jae
repnz
push
push
dec
testb
push
sbb
ljmp
add
pop
insl
leave
sub
jle
je
out
and
dec
sub
xlat
push
popa
add
test
fsubrl
jns
mov
push
mov
pop
test
in
pop
gs
out
je
rorl
push
scas
inc
jb
sub
aad
pop
adc
mov
test
adc
and
adc
outsb
xchg
pop
adc
movsl
daa
in
test
fbstp
clc
inc
sbb
sbb
pop
cmc
rorl
insb
sahf
jmp
and
adc
scas
cmpsb
fcmovbe
shr
cs
shlb
sub
test
cld
movsl
mov
add
mov
jp
lea
xor
std
jge
aaa
lods
jne
cld
push
js
ja
adc
aam
leave
nop
call
jb
jb
fcmovne
or
xor
pop
push
pushf
sbb
in
xor
addl
sbbb
outsb
xor
in
loope
mov
fcomps
lods
xchg
pop
aam
xor
outsl
or
xor
lahf
dec
frstor
jns
mov
mov
bound
add
in
mov
ss
mov
cld
mov
aaa
idivb
das
xchg
lock
pop
xor
addr16
cld
jno
in
cmp
cmp
or
add
jnp
fs
pusha
sub
sarb
or
jmp
xchg
jle
scas
clc
imul
inc
and
sub
jns
dec
shrb
cs
mov
jo
int
bound
imul
insb
lret
outsl
xchg
iret
iret
orb
stos
pop
push
dec
mov
push
adc
adc
icebp
xrelease
jecxz
imul
stos
push
insb
cmpsb
mov
ljmp
clc
imulb
pop
and
dec
push
sbb
mov
or
sub
test
stc
loopne
xor
jno
or
in
cmp
mov
dec
icebp
scas
out
dec
push
push
cwtl
ja
arpl
and
fdivr
rcrb
rorb
dec
add
push
je
out
fdivrs
xchg
inc
push
jae
mov
loope
jnp
cmp
test
cmpsl
dec
scas
xchg
std
mov
adc
xor
psllq
sbb
xor
mov
popa
push
mov
add
test
ret
pop
ja
xchg
out
push
push
pop
and
cmp
pop
lret
xchg
push
loope
fisttpll
mov
fisttpll
push
aas
mov
xchg
loop
inc
jno
pop
jg
push
aam
addl
and
xor
inc
repz
add
add
mov
test
and
cld
or
push
mov
inc
out
unpckhps
hlt
push
repnz
icebp
enter
xchg
test
aas
pop
and
and
pushl
jne
stos
gs
mov
push
adc
xor
pop
insl
or
pop
xor
testl
xor
insl
xlat
sub
mov
outsb
stos
pop
mov
adc
test
out
dec
mov
cmp
xchg
lahf
rclb
xchg
dec
xor
in
jbe
fcomps
fistpl
fstl
je
cmp
es
loopne
js
jle
jg
push
xchg
ds
cmc
pop
and
cmp
inc
and
scas
in
add
jg
out
sahf
addl
mov
pop
push
gs
xchg
pop
lds
jmp
mov
ret
push
jno
ds
rcrl
ret
testb
pop
imul
movsb
and
mov
jo
repnz
mul
shlb
dec
jno
lods
push
dec
dec
movsb
mov
call
rcrl
mov
icebp
ret
inc
pop
mov
cmp
sti
repz
cli
cld
in
pop
cmc
repnz
xlat
out
cwtl
notl
add
cmp
or
aas
dec
loop
pop
incb
rcll
mov
out
lret
fwait
inc
push
add
adc
cmpsl
mov
popl
into
lods
fistpl
or
iret
push
pop
insb
arpl
insb
xor
popl
inc
pushf
adc
push
sub
test
aas
push
xor
add
mov
adc
mov
xor
insb
ljmp
out
fwait
sbb
ds
lock
clc
in
stos
outsb
pop
aaa
fdivl
xor
loope
push
mov
jbe
jecxz
and
int3
clc
cmc
jno
std
mov
in
push
cwtl
adc
xchg
xchg
inc
nop
rolb
movsb
shl
frstor
jns
rep
xor
mov
xchg
cwtl
data16
insl
call
ret
mov
mov
and
sbb
incl
mov
lock
or
inc
ljmp
out
leave
push
xchg
pusha
xlat
jp
bound
das
ret
mov
xchg
dec
mov
sbb
jne
dec
imul
push
adc
insb
data16
cmp
and
jae
inc
cli
inc
push
outsl
aas
js
popa
fsubrl
nop
cli
daa
outsb
fsts
idivb
js
je
in
loope
mov
ret
movsb
insb
jnp
sbb
sbbl
stos
jns
adc
enter
push
jge
movsl
andb
addb
lea
mov
test
bound
add
fildl
mov
andb
xchg
push
push
lcall
lcall
in
int3
imul
loop
test
pop
test
aaa
and
sub
jo
dec
dec
stos
call
imul
lds
aas
push
fs
scas
pushf
in
ss
scas
mov
add
mov
enter
sub
std
popa
filds
push
test
mov
fdivrl
sbb
mov
add
lahf
nop
ret
inc
data16
popl
jle
cmpsb
xchg
mov
mov
out
cld
mov
aam
mov
inc
add
or
repz
add
mov
cmpsb
pop
mov
dec
inc
shr
call
andl
ret
movsl
jno
mov
pusha
mov
xchg
mov
and
call
xchg
fcomip
push
pop
add
inc
mov
fnstenv
inc
jne
outsb
push
inc
mov
cmpsb
out
in
rclb
dec
sti
sbb
push
les
add
jo
xchg
enterw
adc
mov
gs
jno
in
lret
or
or
scas
int
push
xchg
push
push
mov
xchg
into
repnz
or
outsb
or
decl
dec
push
js
dec
scas
sub
xor
push
or
bound
xchg
push
fldenv
cmc
lods
xchg
pushf
cmpl
fildl
inc
dec
lcall
mov
jge
cmp
addr16
mov
xchg
andb
xchg
pop
orb
push
and
adcl
mov
pop
stos
loope
mov
xor
ljmp
pop
gs
add
scas
insl
inc
daa
xor
and
movsl
aad
jle
mov
pop
xchg
cmp
pop
in
jne
dec
inc
mov
add
rol
add
gs
xchg
fldenv
mov
pushf
jb
test
sub
adc
xor
test
or
jne
fadds
and
decb
xor
ja
pop
add
cmp
repz
fsubl
iret
mov
adc
insl
leave
mov
inc
push
cwtl
insl
cmp
lret
ficoms
xchg
push
call
jmp
push
les
in
jno
dec
mov
pop
daa
and
out
loop
out
rorb
jle
mov
outsb
adc
hlt
mov
pop
mov
or
rorl
lret
jp
sub
add
lock
mov
or
push
std
aas
xor
int3
pushf
int3
sbb
insl
pop
ljmp
shll
lret
call
fidivrl
ffreep
popa
xchg
in
jmp
mov
mov
pop
add
pop
das
dec
leave
mov
sub
sub
push
adc
pop
lahf
aam
mov
jge
notl
fidivs
or
push
call
mov
stos
mov
ja
xor
int3
sbb
shlb
add
fwait
and
mov
or
lods
sub
in
cmc
jle
les
call
lret
mov
dec
mov
aaa
mov
dec
mov
stos
mov
fisttpl
mov
xchg
sti
jmp
xchg
sub
push
ror
arpl
cmp
xor
and
test
rolb
jo
aad
movsb
jne
push
add
leave
jl
adc
cltd
or
mov
lcall
pop
dec
xor
aaa
repz
ret
aaa
mov
popf
and
cmp
or
pusha
faddl
cmp
cld
cltd
pop
rcrb
push
pop
xchg
xchg
int
add
mov
or
mov
adc
dec
ds
fidivrs
in
mov
sub
ret
sub
mov
mov
push
popf
dec
dec
mov
repz
pop
imul
dec
mov
fcompl
or
sub
lods
loopne
pushw
or
outsl
and
jmp
mov
jae
cld
xchg
push
add
ret
mov
jp
and
repz
xchg
and
cmp
and
jle
mov
jg
mov
out
dec
out
lds
add
adc
sti
push
pushw
loopne
pop
inc
xor
add
sub
mov
adc
jno
push
add
push
js
sbb
lret
movsb
xor
jmp
push
aaa
cmp
or
add
mov
popl
icebp
fnsave
mov
xor
push
js
retw
repnz
andl
in
and
jge
sti
mov
scas
jmp
mov
mov
cmp
jne
std
or
loope
lret
or
aas
jno
xchg
mov
and
jle
sahf
xchg
add
ss
aas
or
xchg
fldcw
mov
pop
push
out
cmpsl
lahf
mov
in
imul
out
daa
inc
cmpsb
mov
jb
cmc
jecxz
adc
insl
fisttps
cmp
push
icebp
nop
lea
and
sbb
xchg
lods
dec
cmp
xor
loopne
outsl
or
lods
jle
ret
iret
dec
scas
jmp
outsb
jg
lahf
subl
cmpsl
jg
leave
out
sarb
inc
andb
add
mov
outsb
jae
arpl
cwtl
lret
fwait
cmp
lods
cmp
jbe
les
xor
stos
adc
cmp
aaa
pop
mov
pop
insb
stos
dec
pop
push
cld
mov
js
mov
divl
imul
inc
and
pop
cmp
testb
scas
insb
sbb
xchg
adc
pop
push
push
iret
scas
sahf
rcl
cmp
adc
les
out
cmpsl
test
fsts
and
mov
scas
mov
dec
inc
fbstp
addr16
std
mov
push
push
inc
ja
insl
insl
pushf
push
les
jbe
adc
add
mov
fistpll
shlb
push
shr
mov
shll
push
scas
xor
ss
inc
and
xchg
or
aad
dec
adc
xlat
out
adc
outsb
out
hlt
jl
in
fimull
test
neg
pop
jno
into
add
movl
je
or
enter
adc
add
dec
push
push
enter
push
pop
jbe
xchg
movsb
imul
and
iret
xor
sub
sbb
movsl
adc
iret
scas
mov
inc
jp
or
sbb
mov
adc
dec
pop
mov
mov
in
lea
pop
in
rcrb
es
aad
fwait
out
outsl
imul
addr16
inc
gs
out
lahf
adc
leave
popf
clc
dec
mov
loop
insb
or
jo
dec
sahf
and
cvtps2pd
invd
andl
adc
xor
jecxz
scas
push
adc
inc
mov
mov
cmp
inc
or
adc
mov
rclb
cld
sub
cli
and
inc
cmp
repnz
and
gs
mov
sub
jmp
inc
dec
clc
sub
jo
stc
inc
dec
and
repnz
pusha
mov
sbb
inc
stos
daa
xor
jp
in
jne
test
bound
jbe
xchg
bound
inc
jecxz
movsl
adc
lahf
lods
add
bound
les
dec
scas
icebp
dec
jb
je
jle
out
aam
cmc
adc
lret
shll
sbb
test
push
inc
adc
mov
je
cmp
inc
push
loop
pop
clc
mov
rol
mov
mov
mov
jg
mov
lods
shr
leave
mov
xchg
xchg
je
aas
xchg
mov
test
lods
test
sbb
xchg
inc
xor
aad
shlb
mov
push
adcb
popf
inc
int
mov
cmp
addr16
mov
sti
mov
repz
inc
mov
xchg
aas
jmp
rolb
ja
jmp
mov
xchg
lcall
adc
xchg
adc
js
repnz
mov
ljmp
fildl
push
mov
jns
push
sbb
sbb
add
mov
fcoml
pop
fidivrl
out
cmp
adc
or
xor
negl
popf
cltd
bts
sub
or
mov
lods
xchg
aad
xchg
jbe
call
adc
jmp
fistpll
jnp
dec
les
mov
sbb
scas
movsb
push
push
xchg
scas
jns
sbb
mov
inc
lods
jle
cld
mov
cmc
in
inc
stc
pop
fmulp
pop
fmuls
dec
scas
fstpl
pop
xor
or
mov
lcall
cmc
dec
loope
sbb
jmp
sub
pop
iret
cwtl
cmp
sub
enter
cmp
testl
mov
cmp
and
xchg
jno
inc
xor
pusha
aam
pop
mov
das
sbb
movsl
lods
ror
mov
xor
fcomp
in
dec
je
adc
icebp
xchg
fcomp
pop
pop
cmp
inc
mov
add
cmp
lret
push
mov
cmp
mov
out
out
push
xchg
enter
cmp
add
lods
div
mov
mov
ljmp
fwait
pop
dec
bound
jmp
popf
inc
jg
xor
mov
cmpsl
ss
sub
or
jne
clc
les
mov
in
cmp
dec
repnz
mov
lock
or
dec
mov
pushf
xchg
test
out
cmp
inc
fs
push
fsubrl
in
and
add
cmpsl
mov
rcll
fwait
leave
fnstenv
repz
enter
leave
fstpl
daa
xor
xchg
aam
sbb
jp
xchg
stos
aaa
pop
adc
push
jl
push
sub
pop
dec
xor
push
shrb
stc
mov
fstpl
insl
pop
shrb
dec
push
xlat
pop
stc
ficompl
stos
adc
sbb
out
daa
popa
pop
aam
and
push
outsb
mov
cli
jnp
inc
aad
pop
imul
jns
cmpsb
mov
cmpsb
test
out
xchg
sbbl
nop
inc
mov
mov
jmp
dec
ljmp
xchg
fsts
pop
test
popa
and
add
pop
mov
ss
and
ret
call
inc
insl
xor
inc
test
cmpsl
xor
je
xchg
xchg
in
clc
test
insl
jno
dec
jge
jno
pop
fnstsw
xchg
or
popa
lea
xchg
add
and
xchg
dec
and
jp
fildl
jp
insl
adc
in
add
gs
xchg
sahf
pusha
stos
and
mov
repnz
fsts
scas
cmp
sub
arpl
or
or
cmc
rorl
sub
popf
in
inc
mov
data16
nop
add
pop
mov
jmp
in
into
fcmovnbe
sarl
and
mov
icebp
or
xchg
in
int
std
fiadds
mov
jno
and
dec
ret
stos
out
push
adc
jge
pop
std
adc
and
scas
call
mov
aam
clc
stc
jg
or
adc
add
negb
cmp
in
sub
iret
and
add
das
sahf
xor
sarb
fisubrl
mov
jmp
pop
test
leave
jle
or
cmpb
sub
into
aad
ds
addr16
sub
xor
cld
ja
imul
or
cmc
xchg
dec
mov
and
aam
xorl
pop
mov
ror
aas
adc
mov
test
imul
inc
sub
jbe
loopne
out
int3
rclb
inc
push
ds
push
jl
fiaddl
pop
jns
lcall
and
stos
jle
hlt
cld
cmp
mov
shrb
pusha
pop
fstp
popa
cltd
mov
leave
pop
lret
in
outsl
push
pop
pop
mov
pusha
mov
leave
jb
jge
adc
ds
push
sub
push
xchg
jo
fisubrl
xchg
sahf
and
scas
inc
sbb
sbb
jb
pop
mov
inc
js
and
rcrb
into
mov
icebp
push
out
aas
int
das
mov
xor
jecxz
scas
and
pop
jp
inc
mov
ljmp
std
jecxz
leave
negl
add
js
push
inc
or
das
and
fcmovnu
nop
cmc
sbb
inc
and
std
mov
stos
xchg
and
ljmp
jecxz
inc
test
lahf
xchg
ret
ja
jbe
stc
jnp
cmp
in
push
and
stos
dec
add
out
insl
mov
aaa
xlat
dec
and
in
sbb
xor
movsl
outsl
mov
aaa
mov
pusha
pop
fstpl
iret
pop
data16
in
lds
jne
inc
ljmp
fcmovnb
sbb
push
int
cltd
add
add
sub
lcall
cmp
dec
ficomps
push
mov
dec
dec
gs
cmp
sahf
dec
loop
inc
frstor
add
stos
decl
and
gs
mov
add
addl
mov
enter
pushf
rorl
xchg
fadds
repnz
push
cli
pop
in
hlt
mov
ret
pop
dec
sub
popa
cltd
xor
sub
and
pop
or
dec
cltd
out
mov
mov
mov
mov
insb
add
xor
jb
ret
xor
cmp
mov
pop
sub
cwtl
cmpsl
iret
lds
out
bound
movsb
pop
stos
mov
icebp
call
lock
test
sub
xor
mov
loopne
fistl
lret
jmp
pop
in
outsl
popf
fdiv
cld
sub
jo
xor
mov
sub
mov
cmp
xor
xor
mov
pushf
mov
xchg
mov
jbe
cmp
jb
js
clc
adc
pop
popf
ret
arpl
in
mov
mov
loop
or
lods
sbb
pop
jecxz
in
outsb
mov
mov
test
jb
xor
addb
lcall
mov
push
movsb
std
mov
fildll
pusha
push
shl
mov
jmp
scas
loop
jno
ss
mov
iret
das
cmc
jne
imul
mov
sub
out
dec
call
leavew
push
iret
nop
cmc
mov
mov
pop
sti
leave
xorl
ja
mov
out
pop
js
loope
sub
push
cmp
es
and
divl
pop
stc
adc
and
adc
cmpsl
jp
push
in
jl
ss
pop
movsb
cmpb
outsb
sbb
xor
es
in
xchg
outsb
sbb
in
clc
adc
fwait
cltd
add
loopne
adcb
ljmp
out
jle
jle
jp
jo
push
imul
push
iret
fldcw
les
or
push
ss
mov
cmp
mov
mov
call
adc
and
imul
rcll
std
jge
jnp
std
dec
in
adc
jge
mov
mov
clc
push
ljmp
mov
jl
cltd
xor
xchg
addr16
xlat
jl
shr
cmp
push
mov
sbbl
dec
out
leave
sahf
push
pop
enter
data16
popa
in
arpl
roll
imul
mov
mov
negl
dec
xor
insl
and
lret
pop
push
fs
mov
ja
les
push
jl
adc
and
sub
jp
fwait
jae
cwtl
popa
inc
cmp
sub
pop
loope
push
js
xor
cmpsb
dec
lds
stos
push
inc
push
and
mov
popf
stos
mov
add
jge
imul
pop
imul
shlb
and
push
sub
gs
jmp
pop
inc
push
and
gs
lea
jecxz
je
loop
adc
push
arpl
sti
adc
xchg
es
pop
mov
adc
and
clc
push
lods
push
cmovo
hlt
jl
mov
inc
mov
lea
jl
mov
insb
xor
xchg
jmp
mov
lds
inc
pop
shr
pop
ss
jno
and
ret
or
pop
cmp
out
dec
lret
cwtl
pop
add
jno
jg
rcr
xor
aas
ss
movsb
test
push
or
rorb
repnz
inc
push
or
add
std
mov
add
out
add
and
mov
rolb
pop
subl
mov
inc
popf
sbb
sub
ljmp
or
sub
mov
pop
ss
popf
pop
and
insb
scas
arpl
jno
mov
dec
mov
call
stos
incl
mov
inc
mov
cs
sub
lahf
fidivrl
push
andl
adc
jge
addl
sub
dec
in
adc
dec
sub
jg
pop
xor
or
iret
inc
sbb
push
and
lods
sub
push
ljmp
dec
dec
aas
pop
dec
fdivl
sbb
sar
mov
fs
and
xor
push
pop
cmpb
mov
lea
or
xchg
push
clc
mov
jmp
push
outsl
mov
dec
mov
int
xchg
jae
ret
adc
push
adc
cs
adc
push
aaa
pop
loop
lcall
inc
xchg
xchg
xchg
test
push
mov
pop
notb
jl
dec
push
pushf
inc
push
testl
in
and
pop
ds
subl
repz
hlt
pop
outsl
jecxz
lret
inc
pop
xchg
std
iret
sbb
mov
jnp
dec
xor
jo
push
mulb
call
sub
int3
fdivrs
int3
xchg
cmp
inc
inc
mov
or
xlat
sbb
add
pop
repz
out
aaa
test
mov
jne
das
sub
stos
jbe
sbb
mov
enter
mov
add
inc
fmull
mov
cmp
fmulp
push
push
out
btc
loop
push
mov
and
leave
movsl
push
push
loopne
add
push
jns
mov
jmp
pop
lds
dec
cmp
mov
pop
xchg
call
lds
or
pop
xor
xchg
aas
push
lret
push
jge
loopne
fsubs
push
cwtl
lahf
rcr
cmc
inc
cmp
iret
dec
mov
data16
es
ds
add
add
jns
mov
insl
lods
cmp
test
and
sbb
testb
sbb
inc
int
dec
sub
mov
lcall
fstps
push
loop
ljmp
outsl
aad
lods
jmp
sub
push
outsb
aam
cli
mov
pop
jbe
sbb
std
aas
mov
jne
sarb
aam
mov
sar
out
cmp
rcrl
sbb
jne
sub
or
mov
in
or
mov
cmp
imul
xor
movsb
cmpsb
aam
mov
dec
sbb
test
add
sbb
mov
inc
pushf
por
lahf
cltd
ret
ret
call
cltd
test
mov
aam
andl
cmpsl
mov
push
mov
adc
frstor
cmp
js
imul
mov
pop
into
and
jmp
and
fdivl
push
aaa
les
outsl
xor
xor
int
xchg
push
mov
shrl
test
cmpsl
inc
mov
push
xor
add
and
fnsave
out
sub
jecxz
xchg
popf
fmuls
in
mov
adc
xor
mov
mov
xor
test
cmpsb
pop
and
lds
or
ret
js
sub
adc
pop
cwtl
rclb
lret
pop
popf
pmulhw
dec
sbb
bound
loopne
lock
add
inc
in
lods
fstpl
jnp
clc
and
dec
cmp
mov
xchg
xor
enter
js
addl
icebp
std
call
aam
jle
int
leave
mov
mov
inc
push
push
mov
push
dec
in
xchg
fwait
loop
xchg
arpl
inc
inc
mov
jne
cmp
cltd
cmp
add
repnz
or
push
xchg
inc
sub
fmull
cmp
lds
inc
mull
mov
sarl
adc
sub
inc
das
pop
pop
jp
sub
push
in
loopne
cmp
or
addr16
inc
scas
mull
mov
pop
mov
mov
xchg
cmp
test
cli
in
fsts
pop
addr16
add
stc
add
loopne
adc
and
clc
out
subb
outsl
push
push
aam
out
or
or
ret
mov
fs
insb
add
stos
cmpsb
lds
jbe
ja
jb
inc
pop
imul
mov
jp
fs
jl
stos
pusha
negb
dec
push
cmp
dec
xchg
shll
stc
lahf
push
mov
push
in
cmp
outsb
test
jo
mulb
cltd
xor
aas
or
jp
movsb
mov
mov
loop
mov
dec
jmp
pop
mov
lock
xor
and
idivl
mov
lock
in
sbb
ljmp
leave
push
outsl
ja
sbb
mov
add
icebp
insl
shrl
pop
mov
cmpsl
out
pop
mov
mov
add
lds
push
mov
adc
jle
or
aaa
cmp
dec
cli
addr16
bound
sbb
roll
cmpsl
ret
push
mov
fs
add
push
sub
pop
int
ss
inc
sbb
loopne
fwait
decl
jne
mov
mov
xor
shld
in
mov
push
inc
inc
shll
mov
mov
push
scas
jg
xor
mov
push
enter
lods
push
adc
pop
push
add
loopne
pop
and
adc
and
out
sahf
push
add
fwait
mov
sub
sbb
inc
mov
out
das
jb
cld
call
int
sbb
leave
in
xor
cmc
inc
cmp
test
ds
rol
mov
mov
ret
lods
addl
or
pop
leave
and
lahf
adc
add
sbb
bound
inc
in
adc
or
rclb
mov
test
nop
andb
xor
je
fs
or
add
icebp
xlat
leave
xchg
mov
mov
or
addr16
jp
and
daa
mov
pusha
mov
outsl
push
inc
cmpl
lds
je
movsl
and
add
xor
sahf
ret
or
xor
nop
es
pop
sbb
mov
loopne
out
and
aad
or
and
and
xor
subb
in
fstpl
roll
cmc
data16
mov
aaa
cmc
mov
mov
or
pop
pop
sbb
jge
dec
push
adc
mov
daa
sub
jo
ret
mov
scas
test
arpl
mov
mov
lods
cmpsb
lods
fists
lods
ficoml
lds
push
loop
ljmp
xchg
cmp
rorl
lea
and
js
shlb
ret
jbe
insl
xor
rcrl
in
nop
mov
mov
lret
cmpsb
movsb
xor
xor
test
pop
fidivrl
loope
nop
push
sbb
xor
add
scas
call
xor
mov
call
cmp
mov
inc
add
out
cltd
dec
into
sub
aaa
jbe
inc
sub
push
push
lods
sahf
loop
test
cmc
mov
scas
or
pop
mov
dec
mov
sub
das
jne
data16
push
adc
call
inc
adc
sahf
mov
jmp
cmp
mov
sbb
mov
inc
mov
fwait
and
push
outsb
nop
sub
loopne
sbb
mov
je
pop
xor
sub
inc
xor
xor
mov
pop
xlat
ljmp
sub
dec
xchg
inc
mov
shrl
pop
in
mov
test
lods
enter
push
call
mov
xor
push
jp
popa
sbb
rcr
lods
movaps
push
pusha
hlt
pop
inc
xor
outsb
stos
push
add
sub
cltd
js
popf
aam
push
sbb
out
add
ss
mov
sbb
fwait
cs
jl
sub
mov
mov
imul
aas
imulb
stos
fisubrs
mov
test
call
xor
stc
sbbl
jnp
mov
sbb
sbb
and
add
ret
scas
adc
inc
popa
sub
insb
xchg
mov
cmp
sub
push
lcall
sbb
jl
xlat
jl
mov
jp
and
inc
and
shll
sub
stc
test
test
daa
and
js
icebp
fstpt
cmpsb
jle
cli
sub
sbb
adc
sti
inc
movsb
cmp
jo
out
sbb
in
test
lods
dec
sub
sub
jmp
add
pop
les
in
scas
xor
fmuls
pop
mov
shlb
int
dec
push
adc
ret
mov
ss
adc
int3
mov
int3
in
sti
addr16
adc
add
fisttpl
mov
adc
repnz
push
test
call
sbb
mov
xor
std
filds
jp
movsb
mov
or
das
ljmp
mov
xor
push
fldl
cmp
lods
push
adcb
loop
and
mov
orb
aaa
test
movsl
sbb
sub
mov
dec
adc
dec
leave
mov
aad
xor
pop
mov
add
hlt
lds
xlat
out
push
dec
jns
mov
push
popa
ljmp
mov
push
mov
into
inc
lret
push
dec
jo
cmovs
xchg
jne
mov
ret
mov
cmp
mov
aas
mov
repz
pop
mov
shlb
test
ror
insl
pop
mov
mov
adc
insl
into
mov
fwait
mov
xchg
jecxz
pop
mov
sub
inc
mov
sub
push
fs
push
in
mov
and
cmp
data16
cmpsl
cmp
dec
ficompl
cmp
ds
and
and
mov
lds
stos
mov
inc
rolb
test
loope
lods
pushf
lds
or
cmp
mov
xchg
pusha
xor
mov
aad
sti
push
inc
xchg
subb
mov
push
lret
sbb
push
aas
pop
push
sar
adc
or
out
in
aas
xor
and
les
push
or
cmp
aam
or
inc
xor
ds
test
or
lcall
jg
adc
push
jnp
incb
jg
outsb
mov
enter
out
mov
jle
push
dec
nop
push
and
xchg
sbb
out
loopne
jbe
pop
shll
inc
shlb
xchg
adcl
mov
xchg
stos
cmpsl
pop
adc
add
cld
and
loopne
andb
daa
fxch
icebp
popa
lret
popf
fs
sbb
push
fbld
xchg
out
out
repz
add
shl
mov
andb
hlt
pop
cmc
cmp
xchg
test
jp
or
and
xor
sti
push
fwait
xchg
jmp
xlat
ja
fisubrl
test
mov
aam
add
xchg
inc
xchg
mov
leave
jno
cld
xor
fcomi
fimull
sub
dec
fisubs
leave
or
xor
pop
push
in
dec
push
mov
xchg
orb
decl
stos
push
test
lods
adc
jns
das
adc
shr
cld
loope
fwait
aaa
jmp
push
jne
inc
or
ljmp
js
push
testb
cli
inc
xchg
adc
pop
vhaddps
frstor
xchg
decl
dec
push
mov
outsb
call
xor
subb
xchg
arpl
loopne
mov
imulb
add
dec
gs
ds
rcr
pop
push
jnp
inc
movsl
sbb
sub
ffreep
adc
jl
adcb
addb
pop
inc
mov
inc
aam
dec
fwait
test
test
orb
addb
jp
into
xor
cld
ds
iret
or
fs
cmp
stc
cmp
clc
stc
mov
push
and
xor
test
sbb
xor
fs
enter
gs
jmp
lret
jle
pop
pop
and
repnz
loop
sbb
jp
incl
pop
mov
jno
mov
lret
mov
std
mov
jge
and
mov
pop
sarl
pop
leave
sub
and
call
inc
jg
sub
xor
inc
dec
fyl2xp1
and
adcl
dec
xchg
jmp
aad
pop
and
loopne
mov
mov
nop
out
out
xor
shll
add
daa
movb
jno
jl
or
xorl
xor
orl
and
cmp
hlt
pop
lds
pushf
mov
sub
cmpsl
arpl
int3
jp
sbb
jnp
imul
push
loop
std
mov
dec
inc
repz
nop
xor
inc
ljmp
popa
test
mov
pop
and
cmpsb
insl
and
xor
xchg
pop
jg
ret
xchg
or
adcl
sahf
cld
lahf
ret
ljmp
mov
inc
fimuls
imul
dec
fldl
je
mov
pop
in
jns
daa
xchg
jecxz
shld
and
cltd
imul
mov
add
pop
or
xchg
mov
push
ljmp
data16
mov
jne
xor
pop
xor
mov
outsl
insb
sbb
in
and
jns
mov
jge
fidivrl
je
adc
sub
leave
jo
fcmovnu
arpl
jnp
fndisi(8087
sub
imul
and
add
or
in
imul
in
or
dec
lock
push
fwait
imul
xchg
lret
push
dec
das
xor
in
inc
int
mov
pop
imul
jl
sub
jmp
cmpsl
and
xor
push
or
mov
mov
adc
hlt
sub
sbb
shrb
pop
out
adc
clc
jp
push
popa
insb
dec
mov
sbb
and
ret
mov
pop
cwtl
jnp
outsl
push
pop
adcb
mov
cmp
repz
xchg
jbe
int3
mov
pop
sub
mov
pop
ret
xchg
mov
popa
dec
fdiv
stos
jecxz
dec
sarb
pop
scas
push
bound
xchg
pop
aaa
scas
lds
enter
outsb
lods
aam
mov
dec
movsl
sub
jns
orb
leave
dec
cmc
cmpsb
adc
mov
mov
adc
or
insb
hlt
pop
mov
or
or
lock
or
push
push
js
loop
in
testb
cmp
jbe
test
pushf
in
loope
or
fwait
movsl
popa
mov
out
mov
bound
jne
aad
xor
sbb
fimuls
pop
jno
jbe
push
dec
addb
ds
xor
push
mov
movsl
jnp
or
mov
push
xchg
mov
mov
outsl
imull
rorl
lds
pop
in
shrl
pop
stos
sbb
nop
xlat
mov
adc
mov
out
xor
daa
mov
mov
inc
jmp
pop
inc
add
aam
inc
insb
jp
sbb
mov
lcall
shl
xchg
movsl
mov
in
fimull
adc
xor
mov
dec
pop
out
stc
xor
adc
aaa
repz
inc
cmp
data16
dec
rcrl
pop
xchg
jecxz
mov
jb
add
xchg
sbb
cwtl
in
fldl
imul
cltd
mov
sub
sub
adc
cmpsl
rcrl
mov
imul
pop
xor
imul
mov
cmp
fs
dec
and
in
push
xchg
ljmp
add
int
add
or
jmp
loop
jle
and
out
dec
call
scas
jle
icebp
pop
addr16
jns
jmp
dec
dec
add
fimull
jle
push
and
cmp
cmp
pop
insl
adc
push
jo
test
repz
adc
stc
mov
push
iret
dec
shl
sbbl
mov
out
adc
xchg
jge
rorl
pop
cmp
nop
mov
add
int
fdivrs
mov
faddl
gs
popa
xlat
jb
push
sub
xchg
mov
or
xchg
dec
insb
cs
pop
or
mov
jo
pop
cld
stos
mov
insl
lock
and
add
push
mov
xchg
cs
push
mov
push
mov
xchg
mov
mov
cmp
mov
mov
and
mov
add
push
sbb
icebp
xlat
inc
cld
jne
shll
jle
inc
gs
hlt
movsb
xchg
mov
xor
jg
sbb
lret
dec
testl
into
ret
jp
aad
push
xor
es
loopne
lahf
jno
test
ficoml
or
push
add
adc
sahf
in
rcrb
cmpb
addr16
or
pop
or
add
and
in
daa
inc
call
xor
jno
jbe
out
pop
mov
inc
and
xchg
test
add
xchg
lock
shrl
hlt
outsb
adcb
jne
ds
repnz
push
ret
and
adc
push
repz
movsb
idivl
lds
pop
inc
and
je
adc
xor
adc
cld
add
xchg
inc
call
xchg
arpl
push
jmp
enter
into
xchg
lock
inc
pushf
iret
sub
mov
and
subb
jp
xor
lret
into
xor
or
lcall
jle
add
adc
mov
xchg
jne
mov
test
mov
fwait
loop
insl
bound
add
jge
outsb
les
cld
jno
xchg
in
clc
lahf
movsb
sti
es
dec
or
push
jbe
sub
fdivl
jp
add
repnz
adc
shlb
mov
mov
jo
pop
or
push
bound
sub
aam
dec
lcall
jmp
pop
jnp
ds
out
movsb
mov
sub
push
fdivl
jae
lock
fs
and
add
rcr
inc
xchg
add
rcrb
inc
mov
mov
in
shl
mov
push
ret
bound
push
insl
push
lcall
pop
jae
lret
pop
cmp
sbbb
push
inc
lret
ret
pop
iret
mov
lods
pop
inc
testl
push
addb
or
test
movsb
adc
dec
sub
inc
mov
jl
aam
je
pop
mov
adc
pop
fnstenv
shrl
or
sbb
push
jg
sahf
gs
xor
mov
js
pop
dec
pop
push
in
pop
mov
mov
jno
push
push
lock
mov
test
cmp
shr
icebp
mov
std
movsl
sub
ds
mov
sbb
pusha
les
pop
xor
sahf
repnz
cmp
xor
or
or
imul
sbb
adc
movsl
sbb
jbe
shrl
dec
push
fdivl
fisubl
jp
cltd
pop
mov
mov
outsb
addr16
mov
insb
and
leave
or
rclb
push
insb
and
jle
icebp
xor
mov
xlat
pop
mov
enter
push
mov
jp
xchg
and
dec
les
pop
sub
jb
lret
xor
add
push
add
outsb
cmp
rcl
rcrl
xchg
out
add
or
aad
ret
popa
movsl
lret
vphadddq
adc
push
or
cmp
or
out
cmp
rorb
test
sar
gs
pop
pop
sbb
adc
pop
push
xor
cmpsl
mov
into
lret
xor
add
or
add
sbb
add
sbb
sub
movsl
cmp
call
mov
cld
stc
int
adc
sarb
ja
and
or
add
in
movsb
into
lock
out
lock
sub
imul
call
push
sub
xlat
aas
mov
xchg
mov
xchg
das
jecxz
nop
xchg
repz
imul
lea
jle
jno
testl
pop
sbb
push
in
jl
movsl
push
repnz
jp
insb
xchg
pop
cmpsl
icebp
icebp
xchg
ljmp
jecxz
test
sbb
sub
jmp
imul
jmp
pushf
and
rcll
shl
fdiv
push
mov
rolb
pusha
mov
out
les
xchg
out
and
cmpsb
adc
and
push
and
adc
inc
test
leave
pushf
push
sub
fisubl
aam
sbb
data16
sub
mov
iret
loopne
fnstcw
jl
push
mov
or
test
ret
jp
jb
mov
outsb
sarl
movsl
xor
subl
jmp
hlt
pop
pushf
sub
and
mov
shlb
clc
xchg
and
xor
cld
adc
and
or
adc
push
jecxz
mov
mov
inc
enter
inc
adc
adc
ja
outsl
xor
push
sbb
sbb
inc
mov
inc
push
dec
and
in
pop
pop
cmpsl
mov
je
lds
push
ror
fsubrl
mov
call
jo
std
jge
adc
imul
adc
stos
aas
enter
mov
cmp
test
loopne
fsubp
test
xor
aam
inc
mov
add
outsl
and
lock
gs
inc
mov
movsl
or
or
orb
jbe
repz
and
in
add
test
jae
add
inc
push
ror
test
cs
lds
cmp
sub
push
sbb
xor
rolb
test
iret
lcall
jo
orl
xchg
jo
xchg
mov
imul
jnp
enter
dec
movsl
sub
std
mov
mov
aas
pop
mov
icebp
add
js
shll
into
les
les
xor
jo
xchg
cwtl
test
int
jo
fcompl
jbe
arpl
imul
push
lods
in
fwait
push
xor
testl
dec
cli
jl
jmp
cmp
add
fstl
jg
scas
aad
dec
lcall
push
insb
std
cmp
sahf
dec
rol
addr16
mov
es
push
adc
xor
sbb
or
xchg
popf
sbb
jns
fildll
adc
dec
or
xor
test
xchg
adc
imul
sub
cmpsl
mov
sbb
fwait
and
insb
sub
sahf
push
and
jbe
int
adc
jae
sub
test
pop
jp
dec
inc
or
add
frstor
push
pop
pop
cmp
es
loope
adc
add
pop
stos
push
aad
sub
dec
es
xor
rolb
insb
jg
out
std
ror
enter
loop
xchg
test
addr16
jl
push
addr16
and
aaa
sub
incl
shrl
pusha
push
outsb
add
das
pop
dec
mov
loopne
or
xor
xor
add
insb
xchg
std
pushf
sbb
inc
mov
jb
outsl
sbb
mov
xchg
test
ja
in
mov
stc
xchg
fcmovnbe
clc
dec
invd
push
frstor
addr16
cmp
sub
push
arpl
inc
dec
pop
mov
fsts
mov
cwtl
mov
gs
dec
jmp
out
add
sti
sti
aas
int
or
or
pop
fs
cmpb
je
sar
ds
add
roll
lret
fcmovbe
hlt
fmull
cmp
loopne
sbb
pushf
cmp
cmp
sub
jae
adc
fmull
in
loop
call
les
inc
sbb
cmp
xchg
mov
adc
and
cmp
mov
dec
sti
cli
mov
fs
mov
std
dec
loope
jb
sub
xchg
ljmp
inc
push
sub
pop
mov
movsl
lea
rorb
dec
lahf
rcr
mov
mov
into
aaa
stc
lds
xchg
jbe
fs
mov
fisttpl
xchg
lods
mov
adcl
push
les
loop
aad
bound
cs
gs
outsb
jmp
pop
push
and
outsl
out
add
dec
popa
cwtl
movsb
xchg
punpckhdq
aam
into
loop
ja
ret
adc
push
push
dec
inc
or
movsl
sti
add
ret
outsl
dec
imul
fwait
xor
jp
mov
lock
mov
pop
cld
pop
rcrl
mov
incb
leave
call
adc
pop
mov
mov
add
dec
out
xchg
aam
jbe
daa
je
jnp
aaa
xchg
out
push
mov
mov
xor
aam
or
jecxz
ds
xor
stos
jns
sbb
leave
shl
cmp
hlt
repz
adc
sub
outsb
adc
sub
addr16
inc
and
jae
adc
inc
jne
cmp
xchg
mov
je
mov
inc
bound
ljmp
in
dec
icebp
pop
add
add
pop
popa
sahf
xchg
mov
shll
dec
mov
mov
xchg
scas
movsl
xor
aas
inc
in
ss
xor
jno
das
xor
ljmp
fs
mov
cmp
cwtl
addl
pop
cmpsb
sub
sbb
adc
and
icebp
xor
insb
jl
hlt
dec
inc
sbb
sarl
jp
or
add
das
sbb
dec
outsb
sbb
xchg
pop
mov
ficompl
aaa
cmpsb
jmp
jb
pop
add
pop
xor
aaa
fucomi
mov
xor
cld
cwtl
add
mov
adc
dec
call
push
int
mov
lahf
hlt
xchg
mov
jecxz
xlat
cltd
ds
xor
aam
imul
ja
add
fnstenv
mov
lods
ret
mov
nop
leave
lods
or
cwtl
in
lcall
sub
rcll
shll
ljmp
dec
mov
imul
jecxz
and
scas
or
cmpsb
leave
mov
insl
outsb
dec
pop
test
jle
mov
mov
pop
jae
dec
jl
push
sbb
fidivs
sub
mov
fisubrl
mov
pop
in
call
mov
add
in
and
inc
xor
ret
pop
sti
adc
mov
mov
js
sbb
sbb
test
push
mov
negl
dec
movsb
jo
inc
cs
roll
mov
xor
jb
pop
jge
jb
popa
jl
mov
sbb
rcrl
in
mov
test
push
push
sub
mov
or
and
icebp
rcrb
jno
stos
fldenv
cli
push
pop
and
push
out
fcomp
sbb
fsubrs
andl
jbe
int
sti
inc
bound
jae
arpl
movsb
rcrb
sub
stos
mov
ljmp
sbb
or
push
jno
shll
cmp
cmp
cmp
jnp
lret
and
push
xchg
test
lock
dec
jmp
cltd
rorl
mov
pusha
out
sti
mov
sbb
jb
xlat
cwtl
push
mov
lock
xchg
mov
xor
cmp
push
imull
sub
in
imul
xor
aas
jl
in
add
push
insb
stos
mov
mov
xlat
rol
not
adc
xor
out
addr16
sbb
push
jo
scas
cmp
xchg
out
nop
sbb
jg
jge
inc
mov
mov
jns
push
mov
dec
shrl
mov
mov
add
aam
add
popa
cmp
jae
lret
outsl
outsb
xrstor
sub
push
orl
nop
fdivr
dec
int3
xchg
data16
por
in
popf
mov
sahf
popf
sbb
fsubs
clc
inc
imul
mov
cmp
push
sbb
int
hlt
cld
stos
mov
inc
cmpsl
push
inc
inc
sbb
es
jge
insb
mov
js
sahf
loop
mov
repnz
push
arpl
sbb
shll
mov
std
fistpll
cmc
movsb
ficomps
push
popa
cmp
fidivrl
lods
push
dec
les
adc
add
out
stos
ret
mov
jl
fstps
xchg
push
jmp
mov
negl
lcall
in
inc
inc
mov
pop
mov
pusha
xlat
lret
fs
sbb
in
mov
scas
cwtl
scas
outsl
or
cmp
xchg
mov
push
and
inc
pop
lcall
or
scas
pop
fsub
lock
mov
jp
movsb
xor
add
sub
fwait
xor
xchg
ffree
inc
mov
mov
and
test
push
pop
push
lods
xchg
jle
ret
mov
fld
repnz
push
mov
mov
test
mov
push
add
data16
push
adc
mov
mov
leave
test
movsb
cwtl
xor
scas
fstpl
lret
mov
inc
enter
enter
mov
cmp
inc
icebp
pop
adc
inc
inc
pop
rcrb
imul
xor
adc
bound
mov
outsl
push
push
inc
movsl
movsb
insl
in
out
push
mov
clc
lods
fsubs
aas
pusha
xchg
aam
and
or
and
imul
in
int
or
arpl
mov
sub
aad
addl
cs
pop
cmp
test
dec
loop
lcall
outsb
pushf
jp
test
fldz
add
lods
inc
sbb
push
dec
xchg
out
dec
jbe
js
cld
pop
shl
and
leave
jne
clc
fcmovb
outsb
mov
push
mov
popa
jbe
jne
adc
jb
or
out
out
out
test
push
ja
inc
stc
jno
cmpsb
dec
pslld
mov
cmc
shrl
sub
out
sbb
pop
fwait
stos
pusha
outsb
testl
bound
sbb
ss
add
jge
sbb
stos
inc
cmp
psrad
sbb
cli
jge
movsb
push
ret
adc
retw
push
faddl
hlt
loopne
xlat
or
or
cmpsb
push
leave
or
lcall
dec
push
test
outsb
es
cli
cmpsl
xchg
xchg
divl
add
add
lahf
aam
and
sub
cli
outsb
jmp
adc
aas
repnz
movsl
cmp
dec
xor
dec
sbb
pop
loopne
daa
xchg
or
sbb
js
imul
sub
lods
sbb
dec
rcrb
pop
aad
hlt
pop
mov
clc
push
out
xor
jb
arpl
out
je
and
adc
sub
inc
mov
ret
pop
dec
and
xlat
inc
and
or
shll
push
cs
rolb
aad
das
imul
je
mov
adc
inc
out
pop
cli
fs
scas
sub
add
scas
add
loop
test
xchg
or
into
imul
sub
sub
sbb
nop
dec
mov
insb
pop
cmpsl
push
mov
mov
lods
lahf
push
or
icebp
aaa
clc
lods
gs
jge
neg
sahf
stos
mov
insl
sti
xor
pusha
and
or
jb
xor
es
pop
jns
cmpsb
out
aas
sbb
in
aam
loop
jmp
sub
and
testb
fcmovnbe
xchg
pop
popa
fs
incb
fiaddl
jmp
inc
insb
xchg
notl
jl
fistps
ja
pop
mov
subb
xchg
mov
fdivrl
mov
sub
sub
flds
pop
pop
fistl
test
mulb
out
imul
mov
and
imul
mov
lret
popa
jp
cmpsb
cwtl
ss
cmpsb
mov
add
loopne
push
jg
loope
push
mov
fcoms
loope
mov
shl
mov
in
pop
aas
dec
cli
sbb
pop
fidivs
jecxz
bnd
fwait
add
cld
ss
push
scas
xor
in
out
push
xor
inc
fcoml
pop
sahf
pop
lds
cli
push
pop
xor
mov
mov
dec
xchg
test
sub
push
into
repnz
cmpsl
rep
and
push
stc
add
xchg
pop
inc
xchg
jmp
adcl
inc
iret
ret
inc
sub
adc
flds
fdivr
mov
dec
adc
lret
push
fsubs
outsb
les
cmpsb
jl
jns
ja
and
dec
lahf
or
cmp
pop
mov
addr16
sub
sub
dec
movsl
or
xchg
rclb
jbe
repz
pusha
in
and
ss
push
push
aas
cmp
mov
cmp
lret
or
cli
mov
adc
xchg
mov
ds
mov
sahf
lret
test
push
insl
mov
xchg
subl
push
mov
push
mov
pop
and
jle
or
mov
jge
dec
fstl
out
cmp
xchg
push
inc
lods
xchg
sub
data16
mov
mov
loopne
fistps
adc
mov
pop
sub
js
hlt
leave
sub
test
or
add
jo
mov
add
and
pop
push
ret
sahf
pop
lcall
lret
jecxz
lods
testb
orl
add
xchg
push
pop
out
dec
jae
xchg
js
cmp
testb
and
adc
lods
rcrl
sbb
fnstsw
ficoml
jae
pop
addr16
adc
lock
or
dec
cmpb
sti
xchg
lahf
mov
push
cmc
fwait
push
ljmp
repz
add
mov
jb
ja
push
insl
loop
mov
push
loopew
jg
mov
jmp
sub
jns
jge
js
jne
push
pushf
repz
in
mov
lret
and
cmp
out
nop
bound
push
cli
in
mov
frstor
pop
icebp
daa
xlat
sub
pop
and
les
or
pop
stos
loop
pushf
xchg
mov
mov
mov
push
call
dec
rcrb
inc
xor
inc
jnp
xchg
dec
sub
dec
cmp
addl
add
mov
cmc
icebp
add
and
xchg
out
dec
ja
lcall
repnz
dec
es
int
push
loop
mov
push
cmp
cmp
repz
sub
mov
lods
dec
adc
add
mov
xor
sbb
or
dec
insb
inc
mov
or
push
jbe
shll
pusha
scas
aaa
popl
shrb
enter
mov
xor
dec
sti
es
aad
inc
jmp
movsb
leave
sub
lahf
sub
arpl
pop
outsl
stos
fstps
mov
xchg
lods
and
std
test
int
push
mov
cmp
movsl
outsl
mov
xchg
cmp
pop
mov
adcb
dec
stc
test
sbb
xchg
cmpb
std
daa
xchg
mov
xchg
jmp
add
xchg
or
in
in
cmpsb
lods
lods
punpckhdq
nop
jecxz
cmp
out
in
cmp
cmpsl
pop
or
ja
je
mov
cli
add
aas
bound
jecxz
loop
cwtl
ret
dec
and
aaa
xchg
adc
mov
mov
lds
pop
jae
pushf
pop
clc
dec
or
and
xchg
mov
sub
pop
push
insb
add
or
ljmp
movsl
sub
push
jle
aas
sbbl
sub
push
push
push
std
in
call
jecxz
ficoml
push
add
dec
hlt
xor
xchg
and
jl
int
xchg
scas
jge
jne
or
jo
icebp
sbb
or
gs
xchg
flds
inc
jbe
sbb
cmp
sub
es
repz
dec
jae
push
pop
adc
lret
jne
mov
cmp
push
es
out
xorl
scas
andb
mov
int
add
popf
mov
sbb
outsl
lret
pop
sbb
iret
sti
mov
or
imul
or
adc
xchg
xor
dec
mull
jno
leave
int3
mov
lock
aam
mov
mov
sar
jo
shlb
ds
icebp
pop
daa
je
dec
in
mov
nop
into
sbb
dec
cli
into
outsl
mov
outsl
lret
adc
jle
fiaddl
adc
xchg
push
gs
adc
and
das
scas
std
add
or
je
notb
loopne
movsl
aad
jmp
cmp
sbb
mov
cltd
das
icebp
into
test
movupd
jl
xchg
inc
mov
sbb
mov
inc
loopne,pt
lea
jg
sub
xor
jo
stos
mov
aas
sbb
les
mov
jecxz
inc
out
mov
pop
add
xchg
enter
xor
cld
push
add
clc
in
push
aaa
push
cmp
jmp
jae
gs
ret
dec
lea
idivl
std
pop
call
sarb
popw
mov
xchg
xchg
pop
add
inc
inc
pop
fists
mov
data16
xchg
pop
add
out
push
mov
rclb
mov
add
stos
gs
or
push
jbe
dec
jmp
loop
pushf
inc
int
clc
faddl
sub
rcll
call
out
dec
and
out
dec
gs
cmpsb
adc
xchg
mov
cmp
call
push
int
fdivs
mov
mov
iret
scas
into
pop
cs
outsb
gs
nop
icebp
ret
ja
pushf
pushf
pop
and
mov
mov
mov
xor
push
mov
movsl
int
test
nop
push
adc
jge
pop
js
fwait
jb
dec
mov
fisubrs
sub
adc
cmp
aad
fldl
sbb
lahf
cmpsb
cmp
loope
and
mov
mov
or
cmpsl
adc
test
xor
fists
dec
decl
mov
repz
negb
sbb
pop
aam
fwait
mov
and
cmpsl
inc
js
jb
ds
pushf
fisubrs
push
mov
loop
inc
mov
sbbb
xchg
das
push
hlt
mov
popf
xchg
addr16
flds
push
xlat
addr16
xlat
dec
sub
loopne
imul
mov
mov
jmp
push
mov
mov
push
jnp
pop
pop
mov
mov
mov
jge
cmpsb
xchg
xor
bound
jb
cmpsb
mov
cmc
cmpsb
hlt
cwtd
add
dec
adc
int
push
daa
sti
mov
adc
xchg
push
mov
and
mov
in
les
lods
movsb
sbb
or
mov
in
pushl
lcall
cmp
aaa
ja
inc
icebp
sub
or
xchg
sbb
push
pushf
xchg
sub
jb
xlat
clc
xor
das
dec
or
sar
jae
dec
lods
add
fcoml
push
cs
xor
insl
out
mov
fcoms
push
insb
push
sbb
mov
sub
cmc
adc
sbbb
adc
or
mov
lods
xor
ret
sub
jmp
cmp
inc
mov
andl
fwait
insb
int
imul
and
push
add
jo
loopne
inc
icebp
inc
and
mov
pop
and
cmp
js
shlb
add
cmp
xor
cmpsl
mov
sbb
jbe
cmc
inc
shr
aam
negb
add
jno
inc
mov
xor
enter
out
repnz
addr16
mov
push
cli
and
cld
inc
psubusb
cmp
mov
icebp
sbb
and
sub
stc
out
aas
test
mov
add
je
ret
in
mov
jmp
aaa
cmp
dec
inc
repnz
jmp
sub
push
adc
stc
mov
mov
push
mov
inc
adc
or
in
mov
arpl
inc
rorb
mov
shlb
pop
aas
cltd
pop
cld
shlb
pushf
jae
cmp
rcrl
pushf
jmp
mov
or
sahf
pusha
loop
pushf
lahf
or
cmp
sub
push
mov
lcall
sbb
mov
inc
xchg
and
out
xchg
add
cmpsl
jnp
fadd
popa
xchg
lea
out
packsswb
sub
jbe
dec
hlt
pop
inc
mov
movsb
jno
dec
shll
push
push
ficoms
iret
xor
add
adc
fs
inc
inc
sub
cld
notb
adc
mov
pop
je
int3
inc
pop
gs
dec
xorb
test
shl
cmpsl
ja
or
mov
inc
adc
dec
dec
out
jnp
mov
movsl
imul
xchg
pop
aaa
mov
add
loopne
cmc
rclb
lea
adc
sti
movsl
shlb
push
xchg
ficoms
aaa
insb
imul
push
fstl
adc
fiaddl
addr16
std
sub
fidivl
inc
adc
stc
mov
push
mov
hlt
loop
out
enter
dec
mov
pop
iret
push
out
ss
subl
js
mov
mov
push
lea
inc
mov
mov
jmp
pop
pop
cmp
loope
cmp
mov
and
adc
adc
sti
xor
aam
js
xchg
mov
aas
mov
xor
sub
cmpsl
sbb
mov
dec
jge
rorb
push
adc
mov
cmc
mov
outsl
mov
scas
aas
ss
cwtl
rcrl
rorl
test
faddl
inc
add
push
js
mov
mov
cli
das
stos
cwtl
aas
ljmp
jnp
cmp
lds
cmc
je
je,pn
lds
and
mov
dec
sbb
aad
fs
hlt
insb
imul
nop
test
into
mov
nop
pop
or
mov
cltd
out
mov
mov
push
in
js
jp
dec
fists
imul
test
add
aas
enter
fwait
sbb
sub
sbb
push
cmpl
xchg
les
jg
lock
std
jle
cwtl
pop
mov
mov
pop
pop
fstps
sbb
iret
jp
xor
adcb
sbb
fisttps
sub
outsb
and
push
les
inc
fs
fnstsw
adc
adc
ja
jns
sahf
inc
push
sbb
xorl
bound
sbb
push
push
pop
fdiv
and
cmpsb
push
negb
mov
insl
sub
push
repnz
lret
fisubs
iret
dec
out
xchg
or
inc
in
cmp
mov
je
mov
sub
mov
add
xchg
dec
add
push
sub
add
orl
jnp
insb
cmp
pop
insb
adc
insl
push
add
ficompl
push
push
sub
add
pop
mov
ret
mov
outsb
xchg
mov
test
fs
mov
mov
stc
ja
adc
fstl
mov
jbe
sub
jmp
sub
ss
sbb
push
xchg
lahf
adc
test
mov
adc
jl
jmp
int3
sbb
mov
test
sarl
les
cmp
out
gs
ret
sti
inc
and
fbstp
movsl
fcos
mov
or
mull
push
jl
xchg
lcall
mov
mov
dec
mov
mov
popa
fldenv
mov
jnp
sbb
pusha
imul
adc
pop
insl
push
aad
sub
inc
ljmp
in
fwait
das
lea
mov
push
mov
jecxz
out
mov
imul
push
fs
lcall
jecxz
into
and
sub
mov
rcll
xchg
jae
mov
pop
test
jge
inc
xor
dec
mov
pusha
test
jg
lock
nop
sarl
aam
xchg
xchg
loop
lods
out
push
inc
bound
add
mov
mov
ret
roll
add
rorb
shlb
dec
aaa
insl
sbb
mov
lcall
cwtl
dec
lods
and
loop
daa
mov
xchg
clc
lock
lock
pop
adc
adc
xor
sbb
xchg
push
cwtl
and
xchg
daa
aad
push
xor
sbb
mov
and
add
jb
mov
out
leave
xchg
lock
packuswb
jns
imul
mov
ljmp
ret
pop
inc
adc
out
adc
or
loopne
xchg
inc
mov
mov
inc
lds
addb
add
push
and
jge
arpl
or
pop
mov
call
mov
fadds
icebp
lock
dec
jns
shrb
out
bound
sub
cmpsb
in
data16
das
push
mov
cs
orb
movsl
cmp
aas
or
inc
popa
in
add
xchg
sarl
jmp
mov
out
mov
lds
sbb
pop
movsb
xor
lcall
or
dec
fwait
add
sbb
cs
dec
btr
push
push
ljmp
adc
xor
lods
or
and
cmpsw
push
fidivrl
pop
lahf
push
jecxz
jle
dec
mov
enter
xchg
outsl
mul
mov
sub
enter
sbb
mov
aas
lahf
push
mov
mov
out
sub
sahf
or
in
cltd
mov
inc
cmp
inc
pop
outsb
stc
dec
xor
loope
cld
enter
mov
imul
cmpsl
stos
daa
cmc
push
adc
ret
jmp
pushl
sub
push
in
push
mov
je
and
inc
stos
mov
sbb
outsb
dec
popf
test
es
or
push
pop
add
aaa
ljmp
lea
pop
mul
js
out
in
stos
bswap
dec
nop
pushf
jnp
dec
sbbl
push
idiv
and
pop
or
ret
iret
ja
push
inc
and
fwait
aaa
es
lock
sub
int3
loope
xchg
cmc
mov
jl
mov
and
int3
std
sub
fsubrl
mov
lods
gs
pop
sub
jo
addr16
xchg
ljmp
adcl
mov
mov
sub
pop
bnd
dec
int3
adc
sbb
lock
cwtl
push
sbb
mov
js
dec
push
push
mov
xchg
test
int3
cmpsl
push
out
shlb
inc
aas
mov
xor
mov
mov
or
xchg
and
in
cmp
in
mov
jb
xchg
into
out
xchg
cmp
jae
xchg
dec
arpl
sub
sub
dec
push
mov
lods
fistl
out
negb
insb
loope
std
aad
pop
data16
jne
out
pop
mov
push
push
aaa
mov
mov
pop
rcll
or
mov
push
loop
sbb
std
xchg
xor
lahf
ret
sbb
arpl
bound
inc
fs
incb
inc
loopne
bound
pop
and
ret
scas
mov
and
jnp
mov
xor
mov
pop
jne
ljmp
pop
repnz
jae
add
adc
nop
cmpsl
or
shll
fld
fwait
arpl
or
sbb
rorb
shll
fisubl
ret
inc
icebp
adc
mov
sbb
movsb
lock
aaa
push
lods
push
mov
pop
jb
add
outsl
mov
test
popf
in
fdivrs
sub
mov
fnstenv
push
xchg
cli
xchg
sub
or
and
or
outsb
inc
jecxz
das
add
sub
inc
out
icebp
jge
jge
cmpb
xchg
push
and
push
pushl
ja
stos
pop
fisttpll
fidivl
push
xchg
sub
xchg
fmull
sti
arpl
out
mov
mov
mov
loope
xchg
pop
xchg
jle
sbb
push
fbld
xor
and
mov
test
jo
cmp
push
ds
mov
fimuls
testb
fadds
movsb
mov
insb
in
jle
xchg
pop
mov
cmp
fs
add
ficoml
movsb
jnp
and
mov
cmc
mov
mov
dec
sub
test
xor
ret
xor
add
inc
lods
loop
jbe
divl
lea
sub
das
mov
sub
cld
pop
and
mov
push
lret
jecxz
dec
lret
ljmp
cwtl
jecxz
mov
lcall
pop
jno
or
or
leave
lcall
or
das
sbb
shr
xchg
cmp
loope
inc
pop
mov
pusha
inc
pop
xchg
adc
jno
call
les
scas
lock
sbb
pop
and
imul
inc
adc
or
fisubs
xor
in
push
repz
xor
daa
mov
dec
push
es
fwait
cltd
arpl
lea
insb
sbb
aad
jnp
jne
lret
mov
cmp
pop
sbb
lret
mov
pop
adc
imul
out
clc
cmc
mov
fistpl
xor
push
addr16
or
jb
push
imul
and
fdivs
repz
cmc
test
pop
fwait
mov
add
bound
mov
das
sti
outsl
mov
pop
dec
mov
arpl
lods
add
inc
jo
mov
inc
jecxz
jne
fsubrl
or
popf
out
outsb
gs
cld
adc
mov
int3
or
fcoml
ret
push
insb
shlb
xlat
push
cmp
cwtl
pop
hlt
inc
cmp
cmp
pop
out
popa
mov
aaa
jno
dec
sbb
add
xor
out
cmc
sub
stos
mov
jmp
jnp
add
gs
add
xchg
mov
jl
xchg
rclb
stos
arpl
or
sarl
jns
loope
jg
pop
loopne
ret
inc
cltd
mov
into
rcrl
jp
push
aaa
sbb
jmp
and
sbb
les
mov
jno
loopne
into
arpl
push
mov
clc
push
int3
subl
jge
xor
push
pop
dec
dec
insl
jmp
or
orl
cmpsb
in
mov
imul
mov
test
xor
cmc
inc
cli
mov
add
aaa
scas
mov
adc
pop
jge
std
and
test
and
lret
sbb
inc
push
shll
sahf
xor
add
lds
testl
cltd
mov
outsw
lcall
sbb
rcll
popa
stos
push
adc
ficoms
scas
popa
mov
pop
stos
add
cwtl
or
shlb
mov
repz
adc
stc
and
or
outsb
vpmacsdd
cmpsl
jecxz
push
imul
fwait
test
fdivl
fsts
lret
psubb
scas
mov
push
test
pushf
scas
cmpsl
leave
mov
ret
out
jge
sbb
test
xchg
ljmp
mov
or
mov
mov
jo
inc
pop
jno
in
popa
pop
xchg
xor
shll
outsb
out
push
lods
enter
stos
sahf
mov
add
fidivrs
pop
jmp
and
scas
jbe
push
push
iret
push
adc
mov
popf
out
insl
sar
nop
fsubrl
push
ret
inc
ds
int3
adc
xchg
inc
lret
mov
test
pushf
sbb
fnstcw
pop
outsl
sbb
and
xchg
mov
jnp
mov
jbe
enter
js
cld
pop
xchg
inc
cmp
in
pushf
jns
shlb
stc
mov
ficoml
clc
stos
andl
mov
call
push
push
pop
popf
and
dec
orb
addr16
mov
adc
adc
mov
cmp
call
sub
mov
pop
mov
push
sub
xchg
push
sub
sbb
cltd
out
inc
testb
hlt
popl
and
jo
enter
pop
jbe
add
jbe
jecxz
sub
inc
imul
inc
cmp
mov
sub
cmpsb
cwtl
jbe
push
add
cli
mov
or
mulb
int3
sub
sub
and
adc
jns
ret
int
pop
pop
mov
inc
jecxz
aam
mov
loope,pt
cmp
mov
pop
mov
test
inc
les
hlt
jne
negl
dec
mov
js,pt
lahf
sub
or
lds
jp
and
jnp
je
dec
ret
hlt
mov
mov
or
mov
jp
fisubrl
lahf
adc
pusha
daa
ret
push
pop
aad
pop
loope
stos
mov
ficoml
push
xor
dec
js
ljmp
push
imull
inc
pusha
js
push
adc
jno
add
push
fisubs
sub
add
out
sub
stos
sub
and
faddp
pushf
mov
out
jbe
xor
movsb
clc
imul
xchg
mov
dec
jmp
sub
add
push
push
dec
mov
or
cmp
lret
lock
fnstenv
add
movsl
cwtl
jo
mov
ss
mov
movsb
push
push
push
cmpsl
xchg
insb
sub
jge
test
fadds
in
and
cmp
dec
pop
mov
ret
sbbl
stos
ds
mov
cli
pop
into
movsb
fdivrs
in
fistpl
or
mov
fs
or
int
sbb
xchg
jns
cli
shrb
movhps
sbb
popf
jle,pt
ss
add
rcrl
lds
mov
bound
test
mov
pushf
bound
pop
iret
insl
sbb
addr16
lea
gs
aad
or
inc
xchg
lock
in
mov
test
hlt
arpl
scas
ja
pushl
push
dec
xor
mov
loop
push
push
push
mov
imul
xor
popf
mov
mov
not
stos
test
sbb
cwtl
jecxz
lahf
int
push
xchg
sbb
mov
mov
ljmp
add
loope
incb
add
or
sbb
sbb
push
inc
jl
hlt
out
sub
xchg
and
pop
test
neg
mov
mov
cli
nop
outsl
xchg
xchg
sbb
fisttpl
fcom
rcrb
dec
mov
add
in
xchg
in
mov
loop
mov
loopne
outsb
sbb
addr16
ds
xor
jae
xor
cmpl
dec
add
and
int3
sub
push
mov
test
inc
pop
pusha
int3
adc
fmull
or
and
xlat
sub
test
std
pop
testl
loope
push
jp
add
dec
iret
and
cmc
inc
inc
data16
push
sbb
ljmp
or
jmp
dec
ror
stos
jne
test
jmp
jge
cmpsb
or
inc
inc
sub
mov
cmpsl
test
push
rolb
mov
pop
loop
sbb
xchg
das
icebp
cmpsb
nop
sarb
pusha
jbe
ret
mov
insb
int3
jp
and
cmp
and
xchg
mov
jo
test
sub
leave
out
push
scas
and
or
insb
sbb
cmp
inc
in
in
pop
sarl
nop
sub
js
dec
or
sub
or
out
xchg
push
sub
in
mov
push
xchg
cli
out
push
iret
sub
ljmp
mov
xchg
push
mov
stc
mov
stos
adc
sbb
aaa
js
adc
es
dec
les
or
jb
xor
test
dec
cld
push
pop
mov
xor
fadds
xchg
sbb
mov
pop
pop
pop
push
dec
sti
out
movl
mov
fimull
push
xor
in
pop
dec
add
cli
jnp
cmp
repnz
gs
adc
jge
sbb
mov
fwait
ret
out
dec
add
xor
sub
ss
push
cmp
xchg
fistpll
fildll
cmp
cmc
insb
jge
jle
mov
in
jnp
psubq
dec
add
lahf
lods
rol
rcrl
dec
pop
rcrb
mov
mov
and
inc
fstpt
cmp
sahf
mov
in
xor
jmp
insl
or
out
arpl
stos
pop
dec
aas
arpl
xor
sahf
popf
or
in
jo
insl
inc
or
push
sbb
pop
mov
and
mov
arpl
inc
out
hlt
push
ret
adc
cli
or
ljmp
fisttpl
aad
fisttpll
loope
add
lods
loopne
xlat
out
mov
sub
jae
enter
movsl
cmp
mov
sub
int
jmp
or
inc
xchg
es
pop
imul
push
sbb
and
in
in
and
xchg
add
xlat
loopne
repnz
jo
call
pop
fldt
sbb
mov
add
or
ljmp
jbe
push
or
sub
mov
and
pop
enter
lcall
lcall
or
cltd
pop
mov
stos
xchg
cmp
movsb
xchg
mov
loope
sub
inc
mov
dec
xor
sub
mov
jae
and
loop
mov
roll
jae
jecxz
rcrb
lods
pop
insb
dec
les
inc
lods
jns
jbe
in
jne
mov
stc
add
mov
rcrl
int3
cmpsl
movsb
fmuls
aad
pop
aas
pop
push
mov
mov
enter
sti
xorb
push
mov
int
loopne
stc
xchg
call
mov
sub
daa
int3
cmp
jo
lret
xchg
jecxz
stos
jo
push
test
xchg
mov
mov
and
movsl
fst
in
icebp
xchg
ja
lcall
and
movsl
dec
leave
adc
es
or
inc
loope
inc
jae
test
jne
add
sbb
fiadds
test
jg
push
inc
lahf
mov
jmp
jnp
sub
jns
cmp
loope
dec
lahf
lods
add
sbb
lock
mov
test
pop
cmpsb
cmp
das
rorl
cmpsb
call
cmp
movsb
bound
sahf
push
fdivrl
mov
test
pop
push
test
aad
cmp
adc
outsb
xchg
fs
mov
pop
orl
and
ss
mov
mov
pop
sbb
rclb
add
mov
imul
push
stos
adc
adcb
dec
sahf
jle
adc
cmc
push
fsubl
das
sbbl
xchg
dec
or
mov
test
icebp
jbe
sbb
addb
cmp
jg
jae
and
loop
xchg
pop
mov
repnz
sub
fisttps
cmc
adc
icebp
and
or
int3
icebp
and
pop
dec
or
lods
push
in
adc
inc
into
sbbb
and
jl
cmp
mov
ljmp
mov
mov
xchg
ret
add
test
inc
sub
pushw
notl
stos
push
mov
outsl
xchg
hlt
cmp
pop
xor
jmp
jbe
adc
test
bound
jl
leave
in
sbb
jg
movsb
aad
xchg
enter
sbb
mov
pop
jp
push
into
test
gs
sbb
rorb
mov
cs
out
mov
mov
fs
aas
cs
lods
jg
stos
xchg
xlat
push
xchg
push
mov
cs
jns
and
jp
add
movsl
push
es
lock
sbb
mov
outsb
sbb
stos
cmp
mov
sbb
jecxz
sarb
pop
fisttpl
mov
add
jp
push
loope
dec
inc
dec
rep
mov
xor
xchg
clc
xchg
mov
push
jg
fcomp
bound
stc
push
out
push
into
iret
testl
xchg
push
test
jl
pop
mov
out
cmp
jecxz
jne
inc
stos
sbb
cwtl
pop
sti
add
test
ret
cmp
es
cmp
inc
jle
or
dec
aaa
stos
mov
sarl
push
pop
cmc
fmul
imul
ss
imull
xorl
pop
cld
adc
pop
mov
out
cmp
cld
test
mov
fistpl
lds
and
or
sub
xchg
xchg
xchg
fxam
cli
mov
pop
push
push
sti
sahf
out
call
je
daa
inc
loopne
outsb
in
adcl
arpl
f2xm1
inc
mov
sar
bound
jbe
and
test
adcl
into
inc
jecxz
hlt
shlb
inc
fstl
cmpsb
in
stos
jne
arpl
add
mov
xchg
cmp
jbe
pop
mov
addr16
cwtl
jo
loopne
push
shlb
popw
jle
rcl
es
jb
pop
cmp
sti
lret
sarb
pusha
mov
jne
les
mov
inc
hlt
push
xor
pop
imul
and
dec
cmp
cltd
ret
js
sbb
imul
in
jge
and
lcall
iret
add
jns
imul
lock
sub
adc
sbb
daa
push
adc
pop
push
out
cltd
adc
call
add
add
mov
ret
popa
das
mov
push
fimuls
push
addl
scas
push
pop
rclb
stc
aaa
pop
lds
push
xchg
push
es
lret
lret
inc
sti
je
and
in
aaa
mov
sub
mov
adcb
sub
pop
fldlg2
inc
jecxz
inc
fsubp
adcb
imul
fisttpll
and
ret
popa
movsb
repnz
mov
pop
pop
les
mov
inc
iret
lods
mov
or
imul
pop
cmovno
fnstcw
shlb
cmp
pop
outsb
add
jg
sbb
mov
lret
push
push
dec
mov
test
dec
jge
sti
mov
test
xchg
mov
into
push
icebp
add
dec
or
lock
xchg
sub
pop
stos
xchg
out
scas
adc
ss
sub
pop
jp
xchg
test
xchg
ss
xchg
mov
push
lods
ds
dec
jae
lock
xchg
dec
sub
imul
xor
pop
ds
mov
inc
dec
aaa
jbe
inc
cmpsb
inc
xor
adc
pop
js
mov
jmp
daa
xchg
pop
jmp
nop
push
arpl
push
out
sub
inc
icebp
xchg
mov
jb
test
xchg
fildl
sarl
xchg
das
incl
sbb
popa
mov
inc
cld
rclb
inc
loopne
pop
fs
iret
and
dec
in
mov
int3
ss
and
decl
or
xor
leave
rclb
shrl
xor
cwtl
lret
or
push
lods
in
xchg
dec
push
or
in
dec
ljmp
jle
popf
pop
xchg
xchg
mov
jmp
adc
inc
je
jo
dec
jno
leave
xchg
jp
mov
mov
sub
stos
popl
sbb
pop
lea
cltd
call
cmp
cmp
pop
test
in
out
xorl
dec
jle
sub
sub
data16
dec
xorb
stos
outsb
add
xchg
inc
into
mov
lret
jmp
xlat
cmp
out
fcmove
push
aam
or
clc
repnz
adc
lods
stc
xchg
jmp
mov
mov
cmp
in
outsb
cld
mov
and
fs
push
loop
scas
lock
cmpsb
pop
lahf
adc
in
adc
stos
sbb
adc
mov
std
sahf
dec
mov
jecxz
in
adc
dec
mov
cmp
divl
mov
cwtl
cmp
add
xor
stc
das
jl
aas
adc
and
or
jbe
fstp
sbb
fcoms
fcom
mov
fldcw
pop
jecxz
scas
fs
lret
cwtl
and
clc
sbb
in
adc
jmp
shrb
cs
inc
cmc
mov
cmp
rcrb
outsb
jg
mov
fwait
pop
add
inc
iret
jbe
test
and
leave
or
pop
adc
imul
mov
adc
push
push
add
daa
inc
aad
sahf
sub
cld
xor
jns
test
and
sahf
jle
and
jbe
stos
adc
xor
ljmp
mov
test
mov
fs
clc
add
mov
jp
mov
loop
sub
xchg
nop
and
or
push
into
inc
leave
jnp
cli
sahf
bound
adc
scas
cmc
jge
rol
inc
sub
lcall
lahf
lcall
push
addl
xchg
cmp
scas
or
stos
jne
pop
pop
jnp
mov
lods
push
ret
pushf
mov
mov
shll
mov
mov
mov
xor
outsl
jl
mov
or
ljmp
mov
mov
inc
adc
call
xor
jmp
inc
test
xor
cmp
call
inc
sahf
scas
imul
or
loop
dec
stc
rcrl
push
fwait
loopne
pop
mov
xor
sub
cmpsb
add
pusha
mov
jnp
pop
nop
jbe
jns
pusha
dec
mov
inc
into
sbb
inc
push
mov
lret
xor
dec
jo
jns
outsb
notl
sbb
push
sub
inc
iret
jb
testb
cmp
inc
adc
xor
jle
imul
dec
jnp
mov
dec
icebp
lock
xchg
mov
inc
cmp
notb
inc
popf
das
nop
dec
mov
orb
mov
jo
loopne
dec
cli
out
les
sbb
jl
mov
sbb
or
mov
lea
loopne
rorl
push
dec
notl
ficomps
adc
mov
push
mov
stc
mov
pop
fwait
jp
test
lods
add
negb
jmp
dec
lea
mov
loop
cmp
push
push
decl
or
xchg
sub
mov
in
imull
pop
xlat
jg
xor
enter
fsts
jl
pop
sub
fists
icebp
outsb
push
or
hlt
call
and
test
adc
add
add
aas
jb
int3
adc
dec
sub
ret
out
ficompl
xlat
fadds
repnz
inc
xchg
cmpsl
xor
dec
pop
jns
add
test
push
into
repz
or
pop
je
mov
lods
divl
lret
push
je
lret
and
movsl
add
inc
es
imul
jbe
clc
out
fisubs
fsts
daa
mov
or
cmp
xchg
rcrb
ljmp
and
out
shr
add
mov
push
adc
cwtl
xchg
bound
jmp
add
mull
mov
loopne
jmp
cmp
add
mov
fwait
xlat
and
mov
popf
arpl
jl
or
or
call
xor
in
sbb
out
in
cmp
movsb
lods
aam
fs
adc
cmp
jb
xor
lcall
stos
iret
mov
cmp
cwtl
xor
test
inc
mov
das
pop
ret
dec
push
push
inc
sti
outsl
add
pop
jmp
mov
enter
outsb
mov
cmp
jne
cmp
xor
add
fbld
jnp
mov
xchg
jl
inc
pop
ret
xor
fisubs
outsl
xlat
add
std
inc
jmp
pop
sub
sub
push
add
push
fldcw
imul
bound
add
pop
jno
in
addl
cmc
push
adc
pop
icebp
adc
out
cmp
dec
sbb
mov
jns
mov
cmp
jne
fwait
dec
stos
sahf
ret
mov
fsts
mov
jmp
popf
and
mov
daa
std
cmp
push
std
push
sbb
outsb
mov
cmp
push
mov
scas
xchg
xchg
lcall
adc
sub
dec
pop
mov
cmpsl
jns
cmp
mov
roll
fwait
and
mov
repz
sahf
inc
mov
repz
rcrb
mov
pop
mov
push
xchg
push
iret
mov
dec
add
pop
jg
cmpsb
js
test
add
shl
mov
inc
sub
std
or
test
inc
sub
mov
pop
inc
mov
dec
inc
addr16
sbb
sarb
adc
mov
mov
stc
fadds
push
ja
nop
pop
sahf
lcall
insl
jnp
pop
mov
add
mov
rcrb
xchg
and
cld
mov
insl
mov
xor
mov
cli
test
add
ret
mov
ret
push
mov
push
jns
cmp
push
and
into
mov
jns
xchg
sbb
ficoml
cmpsl
imul
pop
fidivl
mov
cli
cmp
dec
mov
insb
into
cli
dec
xchg
cli
or
lods
in
aam
sub
mov
outsl
lods
fcomi
fs
cli
cmp
imul
cltd
jmp
dec
in
mov
xchg
mov
in
test
test
ds
sbb
sbbl
add
test
xchg
mov
push
rclb
pusha
cltd
mov
mov
mov
das
fdivp
adc
test
jg
mov
jg
mov
xchg
add
fisubrl
dec
xchg
pop
hlt
dec
ret
enter
es
mov
cmpsb
pop
jle
cmp
stos
and
sar
lret
mov
cmp
xchg
lret
xor
test
and
sbb
cld
lea
or
sub
xchg
mov
pusha
jmp
mov
xchg
test
aad
jle
lret
ja
mov
stc
fdivr
mull
pop
sti
dec
cmp
dec
push
jp
fistpl
jge
fs
ljmp
cmp
cwtl
or
popa
cmpsl
dec
push
mov
add
mov
sbb
stos
test
imul
or
or
push
mov
cmp
hlt
jnp
mov
mov
jge
data16
sbb
lret
sub
xor
loope
lea
cmp
xor
jg
push
push
fmulp
into
jp
xor
shrl
xchg
fldl
jp
adc
cmpsb
adc
mov
leave
icebp
xchg
jb
xchg
push
dec
and
add
xlat
sbb
ljmp
lret
jnp
stos
repnz
in
dec
lods
lds
cmp
aam
xchg
insl
mov
push
jb
arpl
in
scas
xchg
inc
inc
mov
jb
ret
bound
xchg
movsl
lcall
inc
ss
shll
adc
test
dec
xor
movsl
stc
push
hlt
xor
sbb
xchg
xchg
dec
das
push
sbb
sbb
les
cmp
sub
in
lcall
lods
xor
mov
or
rcrl
loopne
imul
push
rol
sub
iret
inc
pop
aaa
cmp
mov
sahf
mov
pop
mov
cs
and
push
add
mov
xchg
and
jecxz
aaa
fcmovbe
aaa
ds
lret
in
sub
add
loop
test
pop
pop
pop
test
inc
outsb
fs
sbb
mov
int3
mov
fcoms
and
jmp
clc
daa
jns
cmp
mov
mov
leave
mov
push
in
popf
gs
jae
mov
xlat
add
adc
sbb
clc
movsb
cld
lods
and
cmp
imul
mov
sbbb
imul
loop
outsb
jl
xchg
push
js,pt
clc
rcr
dec
std
sbb
icebp
iret
arpl
aad
orb
jg
addr16
push
or
push
cltd
adc
xor
mov
movsb
insl
mov
sti
test
and
pop
inc
pusha
mov
xchg
xchg
or
bound
lcall
fsubs
ss
and
aaa
xchg
ret
add
stc
sub
aad
nop
pushf
cwtl
pop
and
jmp
sti
clc
js
sub
loop
mov
ret
jnp
test
lret
in
add
lahf
and
mul
cmp
fs
jb,pt
ja
and
mov
repnz
jp
ja
ret
test
stc
popf
add
int3
inc
mov
jo
mov
mov
mov
ror
dec
into
mov
aam
sbb
or
jbe
xchg
cmp
outsb
mov
loope
inc
lods
aad
jp
fwait
stos
xchg
popf
dec
or
ss
mov
xor
or
fdivrp
or
js
sar
in
je
mov
sbbl
mov
xor
pop
sub
and
iret
pop
test
ret
pop
lcall
insl
adcl
fcomps
cmp
punpckldq
fstpl
je
je
push
push
scas
sahf
pop
incb
cmpsl
lret
sub
push
or
popf
rcrl
call
inc
xchg
adc
fildl
xchg
jno
repnz
sbb
jno
dec
inc
lds
call
adc
lahf
int3
pop
pop
test
imul
fcmovnbe
dec
inc
dec
or
lds
push
fwait
mov
rolb
test
adc
cmp
inc
sub
xchg
repnz
and
and
pushf
imul
cmp
enter
push
loopne
arpl
int
out
mov
mov
fisubs
mov
dec
icebp
call
push
imul
imul
mov
lcall
fdivl
xor
leave
push
loope
arpl
and
inc
dec
mov
dec
adc
movsl
push
xchg
sbbb
pop
dec
cmp
xchg
jp
jbe
add
xor
pop
aad
aam
sbbb
std
lock
lds
notb
push
cli
jecxz
sub
jns
mov
sbb
lret
test
xchg
mov
sub
lcall
lods
stc
sub
xor
aam
imul
adc
add
into
or
mov
ficompl
lds
push
cmp
sbb
push
stc
jp
icebp
loop
cmpsb
mov
lret
cmp
aam
out
or
scas
adc
xor
pop
pop
pop
lods
jg
bound
loope
fistps
cli
bswap
inc
adc
insb
jge
add
add
push
mov
test
lahf
pop
dec
outsb
lret
test
sbb
push
push
lods
fimuls
add
inc
popa
movsl
nop
add
jnp
dec
add
xor
insb
lret
fs
ret
scas
cmp
add
xor
mov
mov
pop
dec
jne
jle
cld
ficoml
push
pusha
fs
mov
xchg
dec
divb
cmc
adc
sbb
out
test
dec
sub
push
cmp
pop
or
xchg
adc
xor
stos
rcrl
push
cmp
lret
cmp
cld
jne
test
movsl
gs
mov
test
sub
daa
paddsw
pop
mov
in
fdivrl
fildl
mov
mov
lock
sbb
cld
or
insb
jb
subb
aam
aam
push
fisttpll
rcrb
or
cwtl
add
xor
fbstp
push
xor
push
in
loop
jmp
sbb
sbb
adc
sbb
xchg
jp
mov
push
cmp
inc
outsb
out
jns
icebp
or
push
xchg
jmp
lods
xor
xchg
ja
les
add
jl
aad
leave
sub
and
mov
xchg
mov
js
inc
decb
jge
dec
push
mov
mov
push
xor
fcomp
repnz
xor
add
ss
std
aaa
addl
xor
repnz
mov
adc
dec
movsl
pushf
mov
bound
in
adc
mov
das
jbe
mov
fistpll
fs
mov
insb
lea
pop
dec
test
lods
es
gs
add
leave
js
clc
scas
je
dec
mov
les
lds
movsl
adc
stos
fwait
push
pop
or
xor
xor
sbb
adc
sbb
movsb
pop
test
icebp
sbb
daa
mov
inc
mov
dec
push
aas
out
test
push
cmpsl
adc
pop
add
out
xor
test
lcall
mov
sbb
xlat
mov
dec
aam
push
cmpsl
jnp
jns
arpl
repz
jecxz
xchg
aam
mov
cld
mov
mov
lret
movsb
aas
cld
push
leave
movsb
sub
cmp
push
sarb
imul
sbb
rcrl
mov
mov
es
inc
jmp
rcll
pushf
out
fidivrs
sub
add
test
popa
dec
outsl
std
dec
aam
mov
xchg
into
jp
inc
shrb
sti
pop
and
push
cli
jb
movsl
push
push
out
xchg
enter
dec
sub
jne
jae
fidivrs
push
pop
inc
fimull
pushf
xchg
or
push
popf
mov
sarl
and
jmp
mov
push
cmpsl
cltd
dec
test
mov
outsl
call
pop
mov
adc
jmp
cmc
and
and
inc
enter
xor
ds
loopne
orl
xchg
in
pop
ror
aam
pop
imul
mov
lods
enter
fstpt
push
cmpl
mov
loopne
ds
sbb
jne
movb
sub
adc
stc
adc
cmpb
icebp
lcall
jne
and
mov
dec
bound
test
adc
mov
cwtl
adc
das
and
or
or
push
insb
fldcw
lea
mov
lahf
clc
out
fsubrl
repz
adc
sub
xor
mov
or
jns
mov
jl
ss
pushl
stc
mov
adc
mov
js
fsubp
or
int3
xor
lea
push
xchg
mov
xor
cmp
loope
fiaddl
out
bound
aad
add
rcrl
cltd
inc
imul
loope
repz
xchg
ja
sbb
cltd
sub
and
out
jg
addl
repz
push
std
mov
jge
bound
or
lock
mov
mov
push
jl
or
pop
cmp
fcmovbe
icebp
or
test
cld
mov
in
mov
inc
push
sub
xor
test
jp
stos
push
hlt
loope
int3
ficompl
call
in
push
push
adc
leave
jp
xchg
test
decl
cmp
mov
sub
fiadds
mov
in
shlb
cmp
add
lcall
cmp
dec
testl
in
sbbl
xor
fdivs
jl
fs
out
movntq
mov
push
out
fwait
mov
addr16
jnp
subl
cmp
push
sbb
movsl
movsb
xchg
mov
fs
mov
add
add
xor
mov
imul
push
xor
ret
push
jbe
scas
shlb
fcmovb
push
fists
adc
movsb
sub
lea
add
mov
popa
divl
cmp
addr16
rorl
sub
xchg
fs
in
jae
rorl
out
xchg
clc
mov
clc
movsb
lods
mov
jg
cmp
scas
lret
adc
xchg
insl
pop
push
out
add
xchg
inc
mov
mov
mull
mov
inc
fisttps
jno
leave
cltd
fwait
ret
sbb
or
pop
xchg
and
cld
inc
and
rolb
bound
dec
lcall
mov
arpl
cmpl
out
dec
cmp
dec
shlb
stos
gs
rep
xor
shll
xor
js
sbb
test
jnp
test
xor
cmp
jbe
xchg
inc
rcrb
test
cmpsl
and
sub
out
popf
mov
sbb
xchg
push
push
shl
dec
popa
push
cmp
ficoms
notl
out
scas
adc
cmc
das
movsb
in
fsubs
dec
mov
jl
ljmp
mov
cmp
dec
loopne
dec
cmp
jae
cld
sub
aam
xchg
jp
daa
mov
lods
mov
movsl
xchg
addps
pop
jmp
outsl
js
cltd
test
pop
xchg
int3
and
aad
fcomi
and
loop
inc
xor
clc
arpl
xchg
and
es
mov
xchg
mov
cs
je
lcall
and
push
xchg
push
inc
mov
sbb
jno
dec
in
scas
aam
aaa
sub
popf
je
dec
jbe
cmp
dec
sti
xchg
dec
lret
xchg
mov
loope
xchg
fcomps
fcoml
push
nop
jnp
shll
or
rolb
or
ljmp
aam
out
sbbb
mov
fst
hlt
jns
mov
pusha
mov
jmp
repnz
and
xchg
and
popl
call
pop
shrl
sub
fwait
dec
add
or
push
es
or
data16
inc
sbb
les
pop
inc
cmc
adc
mov
jbe
gs
in
mov
jb
mov
lea
pop
subb
sbb
push
or
dec
xchg
mov
mov
and
out
add
in
sbb
pop
sub
mov
sbb
out
loopne
push
sbb
jns
lock
divl
add
imul
xor
fmuls
mov
xchg
fcmovne
movsb
dec
mov
scas
inc
insb
loope
decl
mov
adcb
imul
in
jns,pt
fimull
div
dec
and
pop
inc
lret
call
xchg
push
arpl
stos
cmp
jb
pushf
xor
cmp
andb
pop
iret
mov
push
sub
xor
loop
xchg
imul
nop
pop
inc
push
mov
or
sbb
push
add
loopne
stc
cltd
cltd
aad
sub
and
std
enter
roll
outsl
mov
mov
mov
sub
xor
lock
pcmpgtw
inc
lea
sub
mov
and
in
fldt
dec
add
popf
add
aaa
dec
out
jns
sub
fnstenv
xchg
lret
push
sbb
ljmp
fdivrp
jmp
ds
negl
js
mov
dec
orb
jbe
hlt
xchg
dec
jb
adc
and
mov
test
insb
les
mov
push
pop
mov
ficompl
xchg
cwtl
into
inc
jno
mull
stos
xor
test
xchg
mov
lcall
inc
call
xchg
insl
pop
sbb
mov
bound
inc
bound
push
out
bound
test
dec
mov
call
shlb
icebp
mov
fnstenv
std
mov
fidivrs
iret
sahf
subl
cmp
in
sub
or
push
inc
jmp
pop
mov
sub
pop
movsb
push
mov
aas
or
add
add
add
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
jmp
mov
add
cmp
jb
cmp
ja
cmpb
je
sub
cmp
ja
cmpb
jne
mov
shr
rol
xchg
sub
add
mov
add
sub
mov
add
loop
sub
jg
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
push
add
add
add
sbbb
add
lock
addb
add
add
add
add
add
add
add
pop
add
add
add
js
add
mov
add
add
add
addb
add
add
add
add
add
add
add
or
add
push
mov
add
add
add
add
add
add
add
or
add
nop
add
add
or
nop
push
add
in
add
add
add
add
add
or
add
mov
mov
add
in
add
add
add
add
add
or
add
loopne
add
rol
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
or
insb
add
add
add
add
add
add
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
je
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
insb
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
and
and
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
fs
outsb
fs
arpl
or
and
gs
outsb
fs
je
jae
gs
bound
or
and
and
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
addr16
addr16
jo
outsl
arpl
jae
jb
jb
push
je
jb
cmp
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
ds
popa
jae
gs
bound
fs
je
je
ds
and
fs
outsb
fs
je
jae
gs
bound
or
das
fs
outsb
fs
arpl
or
jae
gs
bound
mov
or
xchg
and
or
mov
and
add
scas
and
or
mov
and
add
and
or
into
and
or
fsubs
or
in
or
dec
and
add
out
and
or
sti
and
or
push
or
pusha
and
add
adc
or
push
add
add
or
jo
or
sub
or
js
or
xor
or
andb
add
or
dec
or
pop
or
outsb
or
jl
or
mov
or
add
add
cwtl
or
add
add
mov
add
add
add
add
or
add
add
int3
or
add
add
loopne
or
add
add
or
add
out
or
add
add
or
add
add
or
or
add
add
adc
or
add
add
and
or
add
add
xor
or
add
add
inc
daa
or
add
add
adc
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
insb
add
dec
inc
push
dec
xor
cs
insb
add
dec
inc
dec
inc
xor
cs
insb
add
dec
xor
cs
insb
add
push
cs
insb
add
xor
cs
insb
add
inc
inc
push
push
xor
cs
insb
add
inc
push
dec
cs
dec
dec
add
inc
dec
dec
xor
cs
insb
add
inc
push
xor
cs
insb
add
inc
push
inc
dec
push
cs
insb
add
push
push
dec
dec
dec
cs
insb
add
dec
dec
dec
inc
push
cs
insb
add
dec
dec
dec
cs
insb
add
dec
inc
dec
xor
cs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
gs
arpl
add
popa
addr16
imul
outsl
jbe
add
inc
gs
popa
jbe
inc
imul
add
dec
imul
push
dec
gs
gs
outsl
outsb
outsb
arpl
outsb
push
add
inc
outsl
dec
outsb
imul
add
inc
outsb
jne
push
jb
arpl
jae
jae
add
inc
jb
addr16
imul
inc
gs
inc
add
add
fs
jae
jb
jb
imul
push
gs
jne
jb
push
popa
insb
jne
push
add
inc
je
dec
jo
outsb
inc
imul
insl
gs
gs
imul
