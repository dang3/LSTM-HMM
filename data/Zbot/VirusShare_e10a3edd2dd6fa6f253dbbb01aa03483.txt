pushl
xor
test
adc
call
shlb
sarb
pop
cmp
loop
rorb
dec
cmp
sahf
andb
in
popf
cmpsb
sbb
inc
dec
sub
lcall
adc
xor
push
aam
movsl
test
fcom
ljmp
xlat
icebp
xchg
shll
decl
pop
loope
lods
mov
add
adc
add
les
aas
clc
mov
iret
stos
orl
lcall
adc
cld
or
or
xlat
test
sub
push
xchg
rcl
outsb
pop
add
dec
shlb
and
add
push
out
and
add
sbbl
cmpsl
lds
fmull
push
sbb
lahf
mov
int
sub
xor
and
sbb
pop
sbbb
xchg
jmp
ss
mov
jp
call
cli
divb
cwtl
cli
jno
dec
cwtl
movsl
ds
loopne
adc
ja
lcall
mov
push
stc
repz
lret
jno
or
xor
pushf
push
sub
hlt
popl
sub
inc
out
push
inc
iret
pop
fs
pop
jno
mov
adc
loopne
xchg
lcall
sbbb
outsl
sbb
shrb
fwait
inc
das
sti
pop
add
mov
inc
shll
xor
mov
xchg
ljmp
pop
sbb
addr16
sub
mov
fildl
push
clc
or
jmp
fs
std
mov
lock
testb
and
cmp
addb
ljmp
and
jae
and
fsubrl
stos
sbb
mov
aaa
in
xchg
incl
sbb
adc
sub
mov
or
xor
pop
movsl
or
cmpsl
test
push
rolb
ja
mov
inc
sbb
rcl
cwtl
inc
sbb
ljmp
lock
adc
loop
movsl
mov
ret
das
test
adc
lods
mov
mov
sub
fwait
icebp
cmp
push
ret
les
lcall
insl
scas
inc
test
in
gs
fs
sub
roll
les
cmp
scas
sub
shlb
int3
cmpsb
push
bnd
call
stos
mov
jg
xor
incl
cmp
ljmp
stc
push
xor
push
push
clc
cmove
lods
cmp
ljmp
loop
or
cmp
pushf
fbld
inc
push
mov
insb
mov
arpl
and
loope
incl
or
data16
or
and
test
cmpsl
sbb
decl
push
mov
outsb
lahf
inc
pop
dec
or
mov
jmp
dec
and
cmp
dec
outsl
loop
sarl
and
inc
sbb
dec
xor
adc
in
jl
lcall
jl
mov
jne
fs
jle
jmp
add
leave
in
cltd
inc
je
jl
add
loope
jmp
inc
aad
int
sbb
push
test
movsb
push
scas
ljmp
mov
and
add
xor
into
inc
iret
sbb
push
inc
sub
jge
cld
clc
jmp
jb
inc
mov
in
mov
sub
out
lret
and
out
xchg
cltd
dec
lcall
pop
push
lcall
cmp
cmp
les
fxch
jecxz
jo
jg
adc
mov
aaa
dec
push
cli
sete
mov
fldcw
rcl
decl
mov
inc
cwtl
mov
push
test
pop
int
mov
sbb
jns
call
ds
ficoms
sub
sbb
outsb
mov
lcall
mov
mov
cmp
and
xchg
cmpb
bound
js
ja
sub
call
cwtl
fwait
das
push
rolb
adc
sbb
xor
js
cmc
xor
leave
clc
pushl
mov
in
loope
add
and
jle
fadds
unpcklps
cltd
nop
add
decl
mov
and
popf
addl
int3
fstl
sbb
clc
lcall
mov
pop
sub
inc
gs
pop
xor
jp
cld
daa
icebp
call
sti
push
jnp
or
and
push
mov
add
movb
mov
enter
call
ljmp
or
sub
push
xor
rcll
pushl
nop
out
dec
fisubrl
and
inc
push
sbb
insb
fistpl
insb
out
xor
mov
in
mov
mov
pop
out
mov
aaa
xchg
push
je
pushl
lods
cmpsb
fisttpll
cmp
lods
push
inc
test
dec
enter
jg
and
adc
testl
sub
cli
sub
bound
dec
inc
xchg
dec
adc
insb
popf
addr16
push
decl
mov
pushf
out
daa
cmp
into
cmpsb
or
and
mov
jl
mov
aaa
imul
div
lds
adc
inc
jmp
or
sub
mov
fdiv
js
fistps
sub
mov
jbe
add
push
aam
pop
cmp
mov
incl
pop
push
jno
push
xchg
insb
sbb
insl
and
loopne
sub
stc
ja
cmp
push
or
push
cld
jo
jp
nop
pop
clc
ja
dec
lcall
data16
push
add
jge
jecxz
bound
ljmp
push
dec
addl
jp
mov
add
cmp
adc
pop
ljmp
dec
into
and
adc
call
xchg
jle
mov
sbb
je
fwait
call
ljmp
std
sub
in
sti
sub
test
int3
dec
cmpsb
aad
insl
decl
shrl
mov
es
mov
pop
inc
jbe
sbb
push
cmp
push
push
cmp
dec
fmulp
jge
jle
dec
cmc
out
in
imul
int
cmp
leave
lock
idivl
jecxz
decl
inc
dec
stc
cmp
pop
mov
xchg
pop
pop
test
push
cmp
lret
es
mov
incl
imul
pop
into
xor
xchg
das
daa
mov
fadds
push
cs
sub
inc
pushl
stc
ljmp
leave
push
imulb
insb
inc
or
outsb
cli
cmc
sub
sub
mov
lods
sahf
test
sub
sbb
jmp
rcrb
jae
mov
mov
test
mov
mov
movsl
loope
dec
xchg
notl
mov
cli
mov
leave
jmp
repnz
call
incl
imul
sbb
push
imul
xchg
push
xchg
mov
inc
pushf
mov
mov
insb
add
mov
shrb
jns
stos
lods
dec
mov
cmpsb
leave
orl
cs
add
negb
orl
rcrb
mov
lock
pop
je
fcmovne
out
mov
lret
fs
mov
cltd
mov
dec
push
ja
in
xchg
jle
repz
push
or
push
pop
jmp
insl
jg
cs
add
rorl
test
clc
loopne
pop
into
lods
popa
dec
push
ja
push
addb
in
out
adc
bound
das
mov
pop
push
shrl
inc
xchg
imul
ret
mov
jp
xchg
out
mov
cld
sbb
mov
outsw
fcomip
lcall
mov
je
mov
aam
mov
in
or
adc
test
cld
decl
or
sub
and
icebp
mov
movsb
lahf
test
sbb
sub
pushl
nop
outsb
push
jbe
and
dec
ja
push
mov
xchg
and
in
pop
incl
jle
mov
icebp
outsb
pop
push
subl
jb
add
ljmp
mov
add
mov
jg
in
jno
insb
mov
sar
cmpsb
jl
mov
sbb
push
shl
cmp
js
das
std
fists
stc
and
inc
stc
je
stc
pop
sbb
movsb
xchg
push
cmp
xchg
xchg
das
std
cmp
test
aam
in
and
hlt
lahf
into
dec
das
jns
pop
cwtl
cmc
idivb
lcall
mov
call
into
stos
mov
lcall
andnps
leave
loope
add
push
push
gs
jp
jp
pushl
jne
or
arpl
loope
mov
sbb
xchg
int3
adc
cli
mov
popf
daa
pusha
sub
insl
in
dec
mov
xor
fldl
lea
mov
and
xlat
shlb
xchg
sahf
rcll
fisubrl
or
sbbb
loop
fwait
in
sbb
repz
popf
jge
sbb
dec
out
push
xor
idiv
call
mov
loope
imul
outsb
sub
cmp
pop
je
mov
outsb
push
jmp
or
clc
mov
pop
mov
inc
mov
jo
nop
pop
sbb
std
js
ljmp
bound
mov
push
mov
pop
cmp
jp
push
cmpb
movsb
lret
icebp
popa
leave
xor
fstpl
adc
lcall
rolb
inc
mov
inc
dec
ljmp
pop
jno
aaa
ds
inc
lret
test
stc
leave
and
stos
sarb
push
adc
adc
push
jecxz
pop
popa
scas
mov
mov
add
sarl
scas
mov
mull
push
or
sbbb
xchg
dec
ret
and
cmp
jns
push
xchg
adc
clc
inc
push
aas
pushl
jne
push
outsb
xchg
cmpsl
and
pop
iret
popf
arpl
fists
dec
cmp
xchg
push
mov
stc
les
ds
cmp
pop
mov
std
cmp
jbe
pusha
shl
in
lcall
jg
jl
adc
push
xorl
jmp
sub
jecxz
sbb
call
ljmp
cmp
ret
idivl
inc
sub
push
adc
loop
idiv
incl
loop
jne
jnp
fcomps
add
adc
aam
push
cmp
incl
xor
cmpsl
addr16
jg
dec
mull
sahf
ds
and
mov
pop
insl
xor
outsb
fsubl
push
jl
stc
mov
rcrl
les
loop
pop
out
mov
fs
jge
lcall
sarl
in
aas
pop
jb
in
hlt
pop
mov
pop
sahf
iret
mov
outsb
je
cmc
shll
mov
ret
fldcw
call
mov
sub
clc
add
dec
push
sbb
mov
incl
js
mov
cmp
push
iret
and
add
jecxz
fisubrl
bound
mov
pop
pushf
incl
mov
sub
aad
sbb
mov
push
xchg
jo
sub
jno
jmp
icebp
mov
xchg
mov
lds
std
dec
fdiv
pushf
out
test
ret
xor
fnstenv
flds
push
adc
cwtl
or
aaa
imul
xchg
jmp
inc
sub
fwait
test
je
aaa
mov
or
adc
clc
sbb
das
cld
pushl
out
jbe
dec
call
bound
ds
mov
jnp
fwait
test
pop
sbbl
sbb
loop
lods
jge
sbb
enter
incl
popa
mov
ljmp
pop
and
jne
or
mov
das
push
jle
inc
aaa
incl
cmp
mov
stc
mov
shrd
data16
xchg
imul
leave
or
jb
int3
sbb
aaa
xchg
cmp
pusha
and
adcl
ror
sahf
rcl
mov
dec
fimull
addr16
pop
mov
addr16
clc
xchg
jae
inc
mov
pop
fadds
es
faddl
lcall
das
lcall
dec
push
sbb
jno
sub
mov
fstl
dec
or
aad
or
jmp
xor
cmpsl
idivb
gs
in
dec
xchg
data16
mov
inc
add
fldt
ret
mov
out
fstp
mov
scas
add
dec
mov
sub
add
and
ret
imul
aam
jmp
outsb
pop
rorb
cltd
shlb
and
mov
pop
mov
dec
mov
insl
mov
sub
add
mov
inc
iret
enter
imul
or
xor
inc
sbb
mov
push
mov
pop
sub
iret
mov
sbb
mov
xor
sti
mov
je
jge
lds
push
out
iret
push
sbb
inc
imull
pop
xor
fistps
fwait
and
fldenv
sub
add
pusha
and
pop
jnp
mov
pop
gs
cmp
incl
mov
cmovle
ret
push
push
lahf
mov
mov
xchg
pop
add
fdivp
das
mov
adc
jns
push
pop
sub
jmp
popa
xor
or
cmpl
add
push
mov
jp
dec
ret
dec
insb
mov
std
mov
rol
and
sbb
mov
xor
subb
sbb
add
mov
icebp
xor
sbb
sti
pop
adc
std
jae
or
cwtl
cmp
leave
cli
jne
jnp
lds
adc
loopne
push
add
adc
adc
ret
and
gs
loope
addl
adc
mov
add
mov
pusha
or
iret
insb
pop
bound
pop
test
decl
test
mov
mov
in
xchg
shlb
sub
and
inc
jbe
add
pop
rolb
add
xchg
inc
hlt
adc
xchg
cli
popf
jmp
stos
add
aam
into
pop
rorb
jecxz
call
lahf
call
fadds
jmp
or
shl
fsubrs
push
fwait
xorb
test
call
lret
fdivrp
inc
cmp
inc
lds
jae
add
push
in
notb
ljmp
jg
out
adc
stos
mov
xor
adc
mov
andl
ljmp
push
mov
adc
faddl
dec
sbb
pop
jl
pop
outsl
or
out
adc
repz
test
pusha
mov
aas
lock
hlt
mov
mov
sbb
add
mov
jecxz
adc
loop
sbb
push
xchg
fisttps
call
push
cmpsl
adc
lcall
mov
adc
rolb
push
stos
xorb
lcall
sbb
arpl
int
mov
shrl
jne
cmp
xchg
aas
test
incl
mov
outsl
out
or
push
cmp
movsl
mov
enter
jne
call
xchg
cmpsl
mov
sbb
andl
dec
loopne
push
pusha
aas
rclb
lods
lcall
mov
mov
ret
insl
int3
pusha
pop
das
xchg
lock
adc
pop
fsubs
test
decl
jge
mov
lock
sbb
xlat
pop
fimull
dec
sahf
ret
mov
or
adc
pushl
ljmp
or
adc
sbb
cmpsb
and
and
or
jnp
cs
push
ljmp
jl
dec
add
sar
mov
xchg
loopne
popf
andl
call
popa
adc
fwait
imul
add
movsb
sbb
pusha
dec
clc
push
mov
dec
jmp
cld
add
xor
pop
in
iret
or
pop
jmp
ret
mov
lcall
lret
pop
mov
test
test
cmp
inc
lods
jmp
test
incl
cmp
add
add
xchg
cmp
cmc
loope
push
stc
xchg
fistps
jmp
jl
test
jmp
push
or
mov
inc
sbb
mov
and
lahf
mov
ljmp
fs
push
push
pop
and
imul
mov
icebp
test
punpckhwd
jl
incl
cmpsb
stc
enter
and
jecxz
arpl
xchg
outsb
jmp
daa
xchg
adc
sahf
call
jl
test
call
mov
or
aaa
cmpsb
sbb
aam
outsb
and
dec
pop
mov
sbb
adc
jo
sub
cld
jecxz
pushf
fnsave
xchg
aaa
dec
pop
jl
leave
mov
jmp
fbstp
xor
mov
sbb
pop
addr16
loop
icebp
das
lret
in
inc
loope
mov
test
fcmovnbe
ja
xor
sub
lock
sub
or
sahf
dec
cmp
inc
sbb
jns
sub
hlt
push
loop
jge
mov
movsb
xor
push
cmp
lea
aaa
incl
or
cmp
arpl
pop
icebp
int
std
dec
stos
push
and
sub
mov
out
push
xchg
inc
push
fs
es
movsb
aad
into
and
pop
mov
lcall
xor
jl
fsubp
aaa
fdivrs
std
or
scas
add
repz
lcall
or
and
sti
ljmp
jbe
lret
mov
push
mov
push
aam
sub
leave
xchg
clc
hlt
and
gs
into
hlt
adcb
and
dec
jg
jge
hlt
out
gs
pop
aad
sub
decl
cld
pusha
jle
cwtl
filds
sub
out
add
scas
mov
fs
jmp
push
jmp
loop
mov
xor
in
movsb
cld
imul
nop
fs
scas
push
mov
incl
mov
sbb
xor
sti
and
std
lcall
xchg
xor
dec
mov
sub
cmpsl
jle
iret
push
inc
mov
sub
cld
xchg
nop
cmp
inc
nop
sbb
pushl
mov
aad
fdivrs
stc
imul
rcrl
call
jge
in
xor
test
pop
xchg
lea
cmpsl
push
jbe
jmp
movsl
add
outsb
cmpsl
stc
pusha
mov
mov
adc
xor
daa
negb
std
incl
inc
inc
sub
aaa
push
xor
cmp
mov
pop
js
testl
mov
xor
mov
lcall
xchg
iret
ljmp
or
jg
ljmp
dec
into
iret
push
sbb
sub
js
in
and
scas
xchg
lock
call
outsl
mov
mov
adcl
jmp
sti
mov
cmp
imul
xchg
sbb
call
dec
ret
jnp
dec
push
outsl
imul
xchg
cmp
icebp
cwtl
je
setns
imul
in
pop
push
jno
add
es
xchg
lods
out
mov
addr16
call
fwait
negl
mov
pop
std
in
mov
inc
sahf
adc
mov
dec
stos
xchg
add
decl
inc
out
popf
lret
cmp
aaa
or
mov
scas
icebp
mov
ljmp
cvttps2pi
out
mov
add
jmp
jae
and
ljmp
push
fnstsw
xor
mov
push
stc
shlb
adc
xchg
pushf
test
sub
loop
lahf
fiaddl
or
push
add
mov
add
fs
adc
or
leave
leave
add
mov
nop
inc
add
add
inc
mov
and
push
adc
incl
out
adc
cmpsl
add
dec
addb
cwtl
stos
dec
push
add
pop
xchg
or
or
dec
push
and
dec
add
push
inc
adc
push
adc
mov
add
and
add
mov
cmp
fwait
cltd
cmpsb
imul
sbb
stos
je
dec
repnz
insb
rolb
sti
pushf
jmp
decl
paddusb
and
sub
loope
xchg
cmpl
xchg
out
mov
js
cmp
and
add
out
and
cmpsl
mov
inc
test
jmp
test
mov
jp
ficoml
sbb
in
insb
cs
jmp
pop
push
ljmp
decl
mov
hlt
xchg
dec
jo
xor
adc
push
aam
pop
xchg
sbb
daa
stos
int
sub
mov
mov
les
xchg
lock
in
mov
dec
pop
and
enter
in
cmp
ljmp
dec
inc
out
xchg
loope
popw
fwait
pushf
mov
int
repz
sbbb
iret
and
pushl
sbb
push
mov
jns
jns
mov
adc
dec
repz
add
pusha
test
xchg
incl
dec
xchg
sbb
lea
mov
sbb
movb
cmpsl
xor
shl
mov
lcall
xchg
inc
mov
push
sbb
lahf
add
jne
dec
sub
fnsetpm(287
subl
incl
push
adc
jp
pop
xchg
or
sbb
or
cld
jmp
in
pop
mov
sbb
mov
xchg
push
sub
and
decl
mov
sub
lahf
mov
jne
sub
jb
push
xor
xchg
lock
je
idiv
decl
icebp
jae
cltd
jecxz
mov
cmp
xor
xor
mov
es
inc
in
ss
incl
test
cmpsb
or
js
add
dec
push
push
cmpsb
out
sub
ds
enter
decl
dec
or
and
dec
imulb
pop
fwait
xchg
mov
out
ja
jb
scas
mov
lcall
push
dec
insl
mov
push
mov
cld
ror
jge
movsb
inc
fnstenv
test
loope
call
mov
sbb
and
xchg
nop
inc
lock
push
ret
push
jne
adc
dec
push
adc
mov
outsl
mov
mov
adc
sarl
push
push
mov
ljmp
dec
in
js
sarl
inc
sahf
pop
xor
popf
repnz
pop
sbb
sbbl
int
js
xchg
sub
outsb
addb
push
scas
sbb
scas
pop
mov
sbb
inc
pop
mov
or
incl
xchg
adc
icebp
test
push
inc
bound
inc
and
add
addb
add
add
addb
add
daa
push
adc
or
add
inc
mov
and
fmuls
jmp
out
loope
pop
xor
movsl
xor
lcall
pop
mov
dec
and
rcll
mov
sti
out
sub
and
jns
push
adc
sarb
push
push
pushl
xchg
xchg
lret
mov
loopne
push
or
cmc
jle
movsb
pop
scas
sub
in
or
sti
pushl
iret
jae
cmpsb
mov
stc
sarl
scas
xchg
jns
inc
pop
jns
push
decl
jg
mov
mov
sahf
mov
pop
testb
fs
cld
lcall
sbb
adcb
test
sahf
mov
cmp
lcall
jne
lea
test
inc
and
xchg
arpl
xor
fistl
out
xchg
call
xchg
pop
imul
dec
mov
jle
cmpsb
mov
xor
outsl
mov
call
xchg
in
out
adc
outsb
or
mov
sub
idiv
ret
inc
addr16
vpshad
and
lret
cmpsb
sti
pop
mov
xchg
add
cmpb
mov
in
mov
lcall
and
cmp
repz
scas
lea
lahf
icebp
sahf
lea
int
loop
dec
ljmp
sti
inc
mov
fs
mov
sub
mov
sub
divb
jp
xlat
xor
cmp
daa
in
jb
mov
je
mov
mov
stos
mov
movsb
cmp
pop
jbe
mov
push
inc
aas
pop
mov
xor
push
adc
idivb
cwtl
mov
call
fildl
jnp
scas
gs
decl
jb
movsb
mov
jae
shlb
in
dec
bound
jae
xchg
js
xchg
mov
dec
push
cltd
and
jo
fldt
push
jno
xchg
je
cmpsl
jb
movsl
mov
test
xor
cltd
lcall
scas
sbb
js
push
jl
int
pop
bound
dec
xchg
call
adc
outsl
imul
mov
cwtl
ja
outsl
push
mov
or
jae
aas
gs
pop
clc
fucomi
scas
movsb
inc
rcr
cmp
cli
leave
pop
jns
out
jle
mov
pop
xchg
mov
call
xchg
pusha
shl
and
adc
decl
leave
pop
push
repz
in
add
inc
jmp
ds
and
lcall
and
xor
cmp
sub
adc
xor
sub
or
outsb
in
pusha
cld
mov
mov
mov
pop
add
fsubl
xorb
pop
popa
cmp
sahf
jno
jle
shrd
push
lcall
push
fldl
push
xchg
jge
call
fadds
sub
in
incl
jl
call
call
insb
mov
sub
test
scas
out
jle
std
iret
leave
mov
xor
adc
inc
daa
scas
lret
cmovae
decl
inc
mov
sbb
add
rorl
inc
movsb
pop
dec
lcall
ret
sahf
push
inc
es
dec
cmp
pop
addl
dec
insl
mov
inc
pushl
jnp
mov
adc
cmc
out
mov
jo
mov
cmp
mov
std
inc
aas
mov
pop
cmp
loopne
inc
aaa
pop
ficoml
push
pop
mov
mov
fsts
adc
cmc
push
or
adc
in
ljmp
mov
inc
test
lods
push
adc
inc
and
dec
lds
push
scas
pusha
push
pop
loop
sahf
pop
mov
pop
and
cld
lcall
jno
iret
or
sarl
push
mov
mov
pop
popa
inc
mov
xchg
pushf
push
mov
leave
fucomi
jmp
sub
sub
xor
fst
fiaddl
mov
stc
fcmovnu
aad
ds
xor
lcall
dec
or
std
pushf
or
test
daa
cmc
int
stos
add
fistpll
jnp
mov
mov
ja
xor
mov
icebp
ret
shl
ret
add
push
enterw
or
out
aas
pop
mov
jg
mov
jno
sar
test
pushf
jle
xor
and
insl
ljmp
arpl
call
outsb
enter
fwait
aas
sub
test
sti
addr16
movsb
shll
xlat
pusha
and
mov
inc
in
popa
and
mov
xchg
lcall
or
in
movsl
pushf
gs
fmull
pop
rorb
ficomps
loop
popa
in
pop
xchg
push
or
test
and
int3
mov
fstpt
cmp
push
mov
dec
repnz
scas
cmp
rcrb
aas
jge
inc
fs
aaa
icebp
mov
ss
ss
add
sti
fldt
push
imulb
out
pop
inc
push
mov
mov
les
adc
cmp
imul
fistpll
mov
test
enter
xchg
or
lcall
sti
fs
int3
setl
movsb
jecxz
test
aad
divb
xchg
repz
subl
ficoms
in
mov
in
rcr
jmp
gs
and
sbb
test
mov
add
xlat
in
fabs
mov
push
lahf
orb
dec
inc
inc
dec
imul
xor
js
push
dec
arpl
inc
push
arpl
dec
xlat
fdivrp
call
imul
jne
push
jne
pop
dec
les
dec
enter
jg
push
inc
push
dec
jae
pop
inc
jns
dec
xor
jno
outsb
insl
push
inc
cmp
insl
dec
imul
push
xor
jo
es
xor
je
popa
push
insl
arpl
decl
xor
dec
inc
push
inc
jne
bound
js
pop
aaa
pop
push
imul
dec
inc
addr16
call
imul
addr16
jne
cmp
insb
push
xor
dec
pop
dec
popa
ja
mov
outsl
push
dec
push
xor
jp
dec
push
xor
push
mov
push
incl
jb
jbe
jne
fs
imul
adc
push
jbe
dec
aaa
xor
std
lcall
jne
arpl
push
push
dec
or
fs
imul
fistpll
aaa
push
loopne
xor
push
dec
xor
push
inc
push
inc
dec
iret
imul
insl
jo
jne
push
jno
jne
dec
dec
inc
inc
js
dec
dec
jmp
inc
dec
outsl
inc
inc
jns
bound
mov
data16
fs
pop
imul
inc
jbe
inc
push
imul
das
lock
js
jne
xor
pop
jbe
push
popa
jae
dec
lock
xor
inc
inc
cmp
dec
bound
or
outsl
xor
ja
xor
xor
outsl
push
mov
dec
fdivs
add
mov
jl
add
jge
add
add
test
push
movsb
cmp
add
add
addl
cmpsl
pop
cmp
lds
add
leave
jb
adc
out
push
out
lcall
sbb
add
jb
xchg
pop
sub
adc
jmp
fmull
leave
lock
in
dec
inc
jecxz
jb
mov
js
insb
rorb
pushf
add
inc
jbe
insl
cmp
and
ja
inc
sub
outsb
sbb
jbe
add
pop
mov
adc
pop
xlat
sub
adc
adc
sub
or
das
mov
pop
sbb
sbb
jbe
dec
lahf
xor
outsb
add
adc
sub
mov
push
aas
cwtl
xor
loop
pop
xorl
loopne
and
clc
daa
mov
outsb
xchg
int
rorl
mov
sbbl
add
push
dec
adc
lcall
jmp
jnp
jmp
jbe
dec
mov
popf
inc
test
pop
jnp,pt
js
rolb
mov
fisttpl
adc
xchg
xor
ss
pop
sub
ss
xchg
rcrl
pop
mov
adc
cmpsl
dec
jo
jge
inc
inc
jmp
ret
mov
xchg
jbe
setno
jecxz
inc
outsb
test
daa
aas
inc
enter
arpl
sbb
daa
in
mov
pushf
pop
xor
jbe
dec
outsb
pop
cmp
adc
and
mov
jb
sub
testb
pop
xor
cmp
sub
leave
fildll
mov
cs
add
push
or
xchg
cs
in
dec
out
icebp
rcrl
add
mov
pop
loopne
mov
pcmpgtw
jne
jns
test
xor
or
sti
fiaddl
das
jge
bnd
insb
les
out
jmp
push
iret
lea
fwait
pop
dec
jl
daa
add
arpl
out
pop
mov
ds
and
lds
in
fmul
retw
imul
jb
gs
xor
insb
cmove
fucomp
aaa
sub
daa
popa
insb
push
arpl
outsl
outsb
pop
dec
mov
add
gs
jbe
add
sub
jae
dec
outsb
adc
imul
push
imul
gs
outsb
jg
arpl
dec
push
sbb
mov
inc
cltd
push
dec
imul
je
lods
inc
sti
sqrtps
pop
add
jb
popa
outsb
arpl
fistpl
push
or
rol
decb
sbb
cltd
popa
push
pushf
fwait
sub
pop
add
outsb
fcomi
arpl
insl
pop
pop
or
cmpsl
je
push
imul
jno
popa
jb
outsl
dec
jne
fstps
mov
popa
sub
adc
mov
je
inc
inc
or
jns
mov
lea
jb
jns
js
stos
jmp
sbb
push
je
jnp
mov
inc
adc
push
inc
fs
inc
mov
outsl
fs
pop
outsl
daa
lods
mov
inc
adc
add
insl
es
fs
pop
push
fcoms
outsl
insl
in
adc
or
cltd
outsb
xor
movsl
pop
add
push
mov
lock
inc
xor
imul
cwtl
push
sti
jg
push
neg
fcmovu
outsb
push
jo
sbb
pop
jecxz
scas
add
dec
push
outsl
dec
jge
inc
sub
push
je
daa
xor
inc
ja
or
pop
popa
imul
push
add
or
leave
aaa
pop
inc
push
mov
push
jns
inc
imul
or
mov
inc
ja
dec
gs
add
mov
fisubrs
cmp
jg
mov
popa
repnz
hlt
dec
gs
fcoms
jbe
jo
inc
mov
aas
push
addb
adc
aaa
jae
dec
push
outsb
pop
adc
mov
lret
fidivs
add
popa
jne
aas
push
jns
mov
mov
js
cs
or
lods
popf
adc
adc
inc
jecxz
in
test
mov
es
mov
pop
rorl
and
sahf
leave
cmc
out
xchg
cmovg
xor
push
pop
and
push
jo
shl
dec
lods
add
mov
sub
imul
lcall
mov
jns
inc
imul
outsl
jbe
rol
sbb
jp
or
jecxz
ret
lahf
dec
or
dec
pop
or
adc
loope
jge
inc
add
ret
insb
push
mov
or
imul
rcrl
jo
mov
roll
add
push
adc
adc
or
fmul
fimull
loope
roll
repz
mov
sub
ror
pop
bound
lods
pusha
js
insl
inc
mov
mov
bound
shlb
arpl
sub
and
sbb
or
mov
clc
jp
mov
add
fcoms
fwait
inc
gs
mov
sbb
daa
pop
andl
or
dec
jne
sti
and
dec
push
xor
inc
imul
outsb
rolb
sub
out
imul
or
pop
sbb
xor
add
insl
inc
pop
sbb
adc
dec
popa
sbb
mov
cmp
jae
or
inc
pop
clc
dec
jno
dec
js
insb
aaa
cmove
fstps
mov
xor
or
adc
sub
ja
je
insb
adcl
push
nop
jns
push
js
repz
jbe
popa
xor
jae
or
dec
arpl
add
xor
sbb
and
lds
xchg
shll
inc
xor
and
test
lea
inc
popa
lahf
je
mov
or
dec
adc
pop
push
mov
xchg
or
inc
add
or
adc
nop
push
add
add
adc
adc
add
and
add
nop
inc
add
add
addl
andl
or
adc
nop
push
add
add
addl
push
and
mov
push
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
cmp
push
adc
mov
add
add
adcl
adc
add
mov
adc
call
mov
add
add
adc
or
jmp
andl
test
inc
and
dec
orb
nop
push
add
inc
inc
add
add
addl
push
inc
add
and
inc
adc
nop
push
add
add
xchg
test
and
and
adc
sub
sub
add
fs
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
inc
or
inc
test
cmp
rclb
pusha
dec
cmp
cwtl
add
lcall
add
imul
outsb
mov
jle
andl
fwait
cmpsb
imul
sbb
xor
shll
inc
push
pusha
dec
shll
mov
xor
in
add
mov
jmp
dec
push
cmpsb
imul
imul
mov
add
push
and
inc
shll
orb
cmpsb
mov
loop
insb
int
hlt
mov
or
dec
shll
pop
insb
xor
shll
mov
dec
sarl
dec
shll
add
add
cmp
xor
shll
je
xchg
movsb
shll
loopne
dec
sarl
iret
add
cmp
shll
push
mov
mov
call
shll
add
sub
xor
shll
pusha
jb
nop
shll
rcr
dec
out
dec
ljmp
cmp
push
dec
rcll
shll
or
lcall
inc
push
imul
imul
sub
cli
or
push
xor
xor
shll
js
nop
mov
mov
int3
fsubr
cmpsb
imul
cmpsb
imul
cmpsb
imul
clc
or
or
sub
cmpsb
imul
cmpsb
imul
call
add
lcall
js
pushf
imul
xor
cmpsb
testb
adc
cmp
xor
dec
pop
push
dec
shll
mov
into
fisubrl
dec
shl
repnz
push
and
inc
push
pop
jo
cmpsb
imul
cmpsb
imul
and
xor
shll
inc
push
pusha
insb
dec
shll
rcrb
lock
push
sbb
cmpsb
imul
cmpsb
imul
imul
into
xor
movups
xor
imul
imul
sub
out
add
or
sub
dec
shll
pop
insb
js
shll
dec
addr16
inc
adc
sbb
dec
shll
inc
push
data16
xor
roll
fnstenv
adc
cmpsb
imul
cmpsb
imul
imul
xor
or
and
cmp
dec
shll
push
mov
cmpsb
mov
sarl
lret
add
inc
xor
shll
pusha
insb
js
shll
shl
cmpsb
imul
cmpsb
imul
cmpsb
imul
clc
add
adc
dec
shll
jo
xor
shll
mov
xor
loop
les
or
dec
shll
and
inc
push
shll
nop
mov
mov
shl
testb
cmpsb
imul
cmpsb
imul
imul
imul
dec
shll
cmp
push
xor
shll
lcall
lret
out
sbb
sbb
and
cmp
shll
test
mov
lock
and
imul
imul
insb
lcall
xor
dec
shll
push
fs
shll
mov
dec
call
lcall
dec
pusha
insb
imul
imul
lcall
inc
push
push
jp
xchg
sahf
stos
cmpsb
imul
sub
adc
sbb
cmp
shll
push
mov
lods
mov
imul
cmpsb
imul
cmpsb
imul
fdivp
cld
push
and
dec
shll
bound
dec
shll
mov
cmpsb
fcmovne
and
and
and
dec
shll
pop
fs
shll
jl
lcall
rcr
out
cli
cmpsb
imul
cmpsb
imul
cmpsb
imul
ljmp
shll
je
xor
shll
sahf
mov
into
decb
rorl
xor
add
cmp
fs
shll
adcb
call
imul
imul
cmpsb
imul
sub
xor
dec
lcall
xchg
imul
add
push
sub
dec
shll
mov
lods
mov
lcall
and
cmpsb
imul
imul
cmpsb
imul
sbb
xor
shll
cmp
push
je
xchg
movsb
mov
ss
shll
loopne
adc
lcall
cmpsb
imul
imul
dec
shll
xor
pusha
shll
pushf
test
shll
lock
lcall
shll
xchg
movsb
dec
shll
out
lcall
sub
inc
imul
imul
insl
lcall
add
imul
imul
imul
lcall
push
pop
cmpsb
imul
imul
mov
adc
and
inc
push
shll
mov
lods
mov
lcall
and
inc
imul
imul
sub
lock
and
inc
xor
shll
bound
xchg
shll
aam
cmpsb
imul
cmpsb
imul
cmpsb
imul
mov
or
sub
cmpsb
imul
cmpsb
imul
imul
dec
shll
inc
push
pop
outsb
shll
stos
mov
shll
or
lcall
inc
push
imul
imul
lcall
dec
pop
insb
imul
imul
shll
pop
push
je
xchg
movsb
mov
xor
rol
aam
repnz
shll
sub
dec
shll
jbe
xor
shll
cmpsb
mov
dec
rcr
call
cmpsb
imul
imul
cmpsb
imul
cmp
adc
cmp
shll
stos
mov
dec
shll
aam
repnz
imul
imul
imul
mov
cli
or
movl
lcall
lcall
fsub
imul
movl
lcall
lcall
movsb
mov
insb
lcall
add
shll
inc
push
dec
shll
cmpsb
mov
dec
shll
loop
inc
sub
sbb
cmp
xor
rorl
jb
nop
dec
shll
shl
lcall
push
and
lcall
je
imul
je
aam
inc
lret
inc
inc
add
imul
imul
imul
dec
shll
ss
pop
shlw
mov
dec
rcl
lock
movl
sbb
cmp
xor
shrl
adcb
mov
aam
in
inc
lret
xor
addr16
shll
orb
cmpsb
mov
loop
cmpsb
cli
inc
iret
dec
add
xor
shll
inc
push
pusha
insb
dec
shll
scas
shlb
shll
fsubrp
testb
imul
imul
imul
mov
adc
add
inc
cmpsb
imul
imul
mov
out
add
sbb
shll
insb
js
shll
mov
xor
in
iret
dec
dec
shll
cmp
shll
movsb
mov
dec
shll
clc
add
push
cmpsb
pop
push
and
cmp
out
add
push
jp
mov
cmpsb
fdivr
and
mov
dec
lcall
mov
imul
inc
shll
mov
lods
mov
xor
sarl
jb
test
mov
push
push
mov
sub
aam
dec
dec
je
lods
sbb
je
lret
add
clc
or
xor
shll
cmp
shlw
scas
mov
ret
lock
xor
shll
cmp
outsb
shll
loopne
push
xor
das
push
add
inc
inc
mov
push
mov
add
nop
push
add
mov
call
mov
adc
loope
insl
or
and
and
icebp
jl
push
incl
mov
xchg
pop
shrb
sub
cmp
cmp
js
scas
in
add
pop
xor
and
mov
aad
les
inc
sbb
sahf
sbb
pushf
insb
sbb
les
and
jge
in
jnp
repnz
movsb
arpl
xchg
aam
les
jecxz
fnstcw
cmp
scas
ret
cltd
fadd
and
pusha
xchg
adc
scas
call
lcall
stc
jecxz
js
fildl
fldl
faddl
push
add
pop
ljmp
mov
jns
roll
clc
adc
test
inc
shlb
add
pushl
lds
inc
xor
lock
int
xor
int
jl
subl
hlt
fcmovnbe
rcrl
call
data16
mov
push
jmp
push
and
outsb
aad
mov
aam
fstl
call
lods
and
insb
cmpsl
mov
sbb
xchg
inc
lock
lods
dec
dec
gs
stos
decl
fmull
mov
pop
xor
ficomps
mov
pushf
jmp
mov
mov
loop
dec
decl
pop
mov
pop
adc
push
clc
lods
lahf
pop
insb
ja
jge
cmp
aam
icebp
pop
add
mov
decl
xchg
mov
les
push
aam
rdpmc
sub
jg
jecxz
dec
mov
mov
pop
push
jg
decl
mov
fcoms
nop
ja
inc
jmp
sar
or
jo
decl
leave
loop
jno
fwait
or
dec
sub
mov
mov
loope
sub
sub
lret
adc
ds
sub
or
ja
roll
js
xchg
int
xchg
stos
aaa
jmp
pushl
sub
adc
mov
int3
xchg
out
sub
out
push
fmull
add
stos
decl
ret
pop
mov
rolb
subl
fidivl
addr16
inc
cs
std
xchg
pusha
ja
sarb
lret
xor
int
gs
popa
push
ficoms
sbb
push
ret
insb
pop
mov
inc
mov
or
insb
in
inc
jg
call
mov
jno
mov
adc
inc
sbb
push
pop
mov
dec
jmp
out
cmp
sarb
sub
push
cmp
cltd
mov
sarb
aad
push
rcll
inc
sbb
dec
fwait
xchg
loopne
leave
out
xchg
lahf
push
sub
outsl
add
inc
inc
lret
jge
cmp
insb
daa
pop
dec
xor
movsb
movsb
out
pop
cmpsl
les
mov
adc
incl
sub
adc
mov
mov
cwtl
cltd
or
in
ret
sbb
push
xchg
xchg
in
incl
in
or
pop
test
jb
rolb
andb
cmp
pop
jmp
lock
lahf
pop
xor
mov
mov
imul
and
adc
xchg
call
pop
jbe
adc
xor
fstpl
test
imul
pop
push
or
jge
into
enter
pushl
xorb
push
sbb
cmp
and
fs
sbb
mov
in
push
mov
ljmp
dec
sub
lcall
push
imul
xchg
and
scas
jns
cld
cld
icebp
lret
dec
adc
mov
and
push
push
loopne
mov
and
call
imull
incl
cmp
jmp
mov
loope
iret
mov
mov
mov
push
insl
jmp
aad
lds
scas
fcom
inc
xchg
std
dec
std
ret
mov
add
push
mov
ljmp
in
cmp
jle
or
dec
cmp
jp
xchg
sbb
ja
dec
cmp
stc
frstor
jae
pop
cmpsb
sbb
mulps
dec
sbb
lcall
mov
mov
rcr
faddl
cmp
xor
mov
pop
dec
dec
pop
and
pop
xor
std
dec
loopne
mov
dec
out
push
int3
decl
pop
in
scas
and
fstl
push
sbb
sbb
push
mov
and
fmuls
insb
aad
inc
pop
push
int3
lcall
xor
dec
mov
dec
mov
jp
or
std
ljmp
dec
loope
mulb
mov
shlb
shlb
cltd
loope
mov
call
xchg
mov
push
pop
dec
clc
out
mov
divb
test
xchg
mov
lods
inc
cmc
and
xchg
outsl
jb
in
sub
repz
js
mov
pushf
add
decl
mov
aam
cmp
sub
insl
test
cmp
mov
mov
mov
ljmp
lods
shll
sbb
xchg
out
testb
xlat
cmp
inc
leave
xchg
cli
jg
leave
add
rolb
xchg
jp
cwtl
insb
cmp
inc
fbstp
aam
cs
xchg
test
imul
idiv
in
adc
subb
pop
in
xchg
mov
std
jmp
pop
lock
decl
mov
mov
mov
inc
push
jbe
int
cmp
jg
xor
mov
mov
es
dec
push
mov
lcall
js
sbb
dec
into
push
cld
push
lret
rclb
sbb
dec
imul
aad
xchg
lods
sub
push
add
xor
push
or
iret
adc
inc
sbb
in
lcall
pop
daa
adc
out
push
loopne
and
adc
icebp
jge
xchg
dec
mov
out
pop
std
pop
sub
push
shrl
subb
cmp
loop
sbb
mov
push
out
or
mov
sar
cmp
mov
in
mov
call
movsl
leave
clc
data16
jo
mov
loopne
jg
xchg
xlat
mov
rorb
rclb
adc
fstps
adc
pushl
aas
cs
into
inc
cmp
addr16
or
fsubr
les
inc
dec
sbb
sbb
lcall
push
jnp
add
sti
dec
loopnew
mov
and
movsb
popf
jge
fildl
stos
fldenv
push
lcall
pop
xchg
bound
lcall
mov
stc
inc
cwtl
add
test
outsl
decl
andl
dec
jge
mov
add
pushl
sti
cld
cli
mov
push
mov
lcall
fisubrs
mov
lea
xchg
xor
or
add
mov
lcall
push
imul
lahf
and
push
in
jp
mov
repnz
xorb
pop
jns
pushf
shll
int3
cmc
sub
mov
loope
adc
insb
imul
iret
out
movsl
mov
push
das
sub
call
outsb
sub
testl
fnstsw
mov
jle
out
loope
pop
cs
int3
and
insl
mov
inc
fcos
clc
rcrl
sbbl
insb
and
in
lret
or
cli
add
lcall
xchg
jecxz
mov
inc
sbb
inc
lret
jo
movsb
push
enter
inc
incl
pop
inc
or
xchg
cmpsb
mov
das
mov
cmp
xor
fcos
ljmp
mov
sub
xchg
and
jmp
push
dec
lock
and
in
mov
push
inc
out
sbb
ficoml
pushf
adc
pop
dec
rolb
incl
ljmp
arpl
push
lret
mov
cmp
cld
pop
fwait
cs
mov
push
add
and
data16
out
int
push
adc
das
push
add
decl
pop
pop
lret
out
das
ror
aaa
std
daa
mov
ficoms
add
das
or
scas
shlb
pop
mov
pushl
pop
shl
mov
sub
mov
stos
mov
and
popf
insb
jge
lds
jmp
push
dec
out
mov
daa
ret
push
repnz
repnz
icebp
loope
lcall
ds
mov
or
mov
adc
xchg
xchg
or
jmp
pop
cmp
pop
add
outsb
pop
fs
enter
jg
lods
std
incl
call
cmpsl
jb
mov
dec
sub
push
outsl
lods
xchg
mov
push
and
cmp
sbb
sub
je
jbe
in
or
mov
inc
hlt
je
scas
pop
loop
lcall
ss
and
mov
jle
fcmove
push
movsl
push
pop
out
popa
pop
ljmp
stos
bound
mov
rcll
call
inc
add
lcall
call
dec
sub
imul
push
xchg
mov
jmp
adc
pushl
repnz
mov
int
imul
dec
pop
popf
fdivr
and
xor
add
incl
cmpsl
pop
mov
test
inc
mov
sbb
pusha
jmp
jmp
xor
mov
mov
mov
cs
scas
loope
sar
or
ljmp
insb
sub
push
mov
nop
movsl
ret
gs
loop
inc
call
sbb
dec
loope
mov
out
inc
jg
sahf
and
cmc
in
scas
cmp
push
call
or
jae
add
mov
leave
movsl
mov
arpl
mov
pushf
cmp
test
xor
hlt
mov
or
xchg
lea
or
jmp
push
mov
outsb
clc
push
jae
inc
out
lret
fiaddl
ja
aas
push
call
push
test
mov
add
orb
or
out
movsl
ret
bound
imul
decl
into
ret
cmp
ss
cli
ret
xor
sub
fildl
lcall
xor
jecxz
test
xor
push
pop
scas
sbb
std
xchg
fwait
aas
mov
cmp
popa
adc
call
lret
jecxz
jp
movsb
lods
jae
jle
mov
xor
sub
and
mov
adc
data16
dec
jg
out
fnstenv
daa
sbb
test
sarl
popa
or
or
xor
push
or
mov
xchg
cmp
lcall
inc
dec
cmpsb
xchg
shr
pop
fcmovu
sub
jno
or
leave
xor
jg
aas
or
mov
add
push
jmp
add
mov
inc
xlat
mov
jmp
cmpsl
xchg
mov
adc
add
pop
mov
adc
test
jo
loope
pop
arpl
stos
std
lcall
das
stc
inc
fs
fbstp
cmpsl
sub
mov
or
insb
aas
cmp
mov
pop
xor
xlat
pop
mov
imul
imull
mov
test
pop
cltd
les
add
pop
in
mov
xchg
js
incl
in
arpl
xor
test
mov
in
mov
push
push
sbb
mov
adc
mov
sbb
lahf
aas
jp
push
mov
fcomps
jg
jmp
push
insb
sbb
enter
xor
repz
inc
addr16
xchg
add
jnp
in
lea
inc
sbb
dec
mov
jg
mov
imul
push
adc
stc
loopne
imul
decl
test
fistl
jo
or
inc
lods
sbb
into
std
ss
mov
cmpsl
sbbl
push
add
xor
outsb
jae
aas
mov
stc
das
std
clc
mov
cmp
insl
pop
sbb
cmc
mov
and
in
stc
subb
arpl
cmpsl
jnp
ljmp
cmc
inc
cmp
push
push
pmullw
out
and
add
test
ret
incl
or
clc
sbb
jo
mov
or
xchg
mov
inc
xchg
lds
mov
dec
cmp
movsl
es
stos
push
into
ja
ret
adc
sub
call
leave
mov
cld
adc
inc
xchg
adc
aam
lds
xlat
inc
push
fildll
jo
lds
mov
xchg
test
cmp
mov
jecxz
call
ljmp
leave
dec
adc
push
dec
jp
in
mov
push
adc
cwtl
scas
mov
call
div
ljmp
push
jg
xchg
sahf
test
xchg
shrb
pushl
mov
rcr
sbb
cmp
inc
jg
dec
add
sahf
mov
jmp
or
pop
and
lods
cmp
sub
in
ss
push
mov
jo
call
sbb
cltd
fstps
adc
lds
movsb
movsb
cmp
pop
in
shll
or
mov
cli
dec
jnp
xor
mov
jns
xchg
push
dec
or
jmp
out
xor
out
pop
lahf
adc
shl
imul
xchg
rcll
shl
imull
mov
aam
mov
lods
sarl
sbb
sub
mov
lcall
lcall
in
addl
out
ss
jnp
push
ljmp
js
stc
xchg
xorl
aad
out
pop
fldcw
mov
jbe
cwtl
push
jg
aad
mov
out
fbstp
cmp
xchg
pushl
mov
pusha
inc
mov
xchg
out
stos
sub
push
xchg
mov
aaa
mov
add
popf
lret
cmc
xchg
aam
and
pop
dec
addr16
cld
decl
fcmovu
dec
xchg
jnp
push
stos
xchg
int
dec
sbb
lds
push
insl
decl
fcoml
mov
cmp
shrl
push
dec
xor
xchg
inc
jns
loopne
lcall
rclb
das
xor
aaa
pop
rolb
bound
mov
add
dec
jno
sub
les
sbb
lcall
clc
lret
mov
and
js
sbb
mov
mov
scas
stos
jnp
out
jno
xor
xchg
mov
mov
std
inc
inc
dec
push
sahf
pop
mov
sahf
xchg
mov
sub
cmpsl
pop
adc
rcl
mov
pop
repz
xchg
test
shrl
mov
pushl
dec
mov
mov
lods
pop
test
and
mov
fnsave
scas
addr16
test
mov
or
mov
mov
xor
mov
call
cli
dec
pop
adc
pop
adc
add
xchg
imul
xor
sub
es
idivb
sbb
mov
aaa
dec
pop
idivl
mov
lock
movsl
repz
testb
jp
pop
push
mov
arpl
and
fsubr
jmp
mov
incl
pop
mov
sbb
pop
mov
test
repnz
add
jmp
sbb
sbb
pop
movsb
mov
fsubl
movsl
jae
jl
mov
les
jmp
inc
js
inc
outsb
movsl
lock
les
fldcw
inc
add
pushl
mov
test
push
adc
repz
sub
lcall
inc
push
cmpsl
mov
pop
adc
inc
xlat
sbb
xor
cli
mov
data16
decl
cmp
sti
xor
icebp
filds
movsl
dec
add
clc
mov
jmp
divl
sub
sti
arpl
dec
repz
jne
ljmp
lcall
mov
mov
adc
mov
scas
add
xor
pop
mov
mov
add
emms
add
sbb
lcall
out
aad
inc
jmp
decl
mov
ljmp
enter
inc
jge
push
mov
fists
xchg
lcall
sahf
lret
pushf
pusha
pop
in
in
adc
cmc
sub
adc
sar
pushl
push
gs
push
adc
push
mov
rcl
mov
push
imul
aas
repz
decl
adc
hlt
mov
cmp
insb
mov
out
jbe
mov
loope
xchg
push
leave
add
incl
push
dec
das
in
xchg
xchg
in
clc
push
adc
aam
mov
outsl
insb
sub
mov
push
sbb
mull
iret
mov
sbb
or
or
test
fsts
inc
pusha
cmp
jl
jmp
lds
stc
or
imul
in
sbb
loop
lcall
cmp
lods
jae
pop
das
push
fmuls
test
es
ljmp
mov
sub
outsl
xchg
mov
pop
mov
add
mov
pop
clc
pushl
test
sar
push
fistpll
imul
lcall
xchg
inc
jbe
jnp
bound
dec
fisttps
daa
ficompl
mov
xchg
sar
jmp
sbb
mov
fwait
push
pop
icebp
in
gs
inc
sbb
mov
test
std
stc
pop
cmpsl
cmp
mov
mov
xor
pop
mov
mov
or
mov
mov
mov
xlat
les
mov
jecxz
out
fs
mov
lcall
pop
pushf
rcll
pop
call
lret
xorl
inc
ds
lods
pop
xchg
jg
sarl
das
std
call
nop
outsl
pop
aaa
pop
mov
clc
stos
mov
adcl
sbb
push
add
mov
cs
in
sbb
dec
push
cmpsl
jmp
sti
lea
sbb
test
xchg
push
dec
pop
xor
nop
dec
lret
cltd
nop
jge
sbb
fistps
cli
jg
ja
and
cmp
aaa
std
test
mov
sub
jno
push
call
lock
pop
cmpsb
jbe
or
add
xchg
or
into
and
adc
xchg
push
sub
pushl
loop
xor
imul
add
aad
push
or
adc
jmp
xlat
insb
lds
iret
jecxz
jo
inc
clc
mulb
hlt
pushf
bound
cmc
lret
and
incl
idivb
sub
imul
dec
push
dec
xchg
xchg
rcrb
adc
jb
das
cmc
incl
push
add
xchg
xchg
mov
add
out
dec
out
dec
mov
fdivr
call
inc
popa
fwait
xor
cmpl
test
fisubrs
jnp
cmp
push
decl
jp
cltd
incb
pusha
mov
push
push
imull
pushl
sbb
or
adc
push
sahf
popf
int
jmp
cmp
test
and
xor
out
mov
fcmovnu
leave
pop
dec
mov
and
repz
pop
jmp
jno
and
lret
inc
rorb
mov
push
sahf
or
sbb
call
stc
jnp
mov
rcrl
and
dec
lcall
inc
sbb
pop
add
xor
inc
push
ja
mov
faddl
adc
ret
loop
jae
cmpsb
je
xchg
add
cwtl
dec
cwtl
pushl
mov
sarl
inc
push
daa
mov
cmpsb
xchg
xor
icebp
inc
fstpl
inc
lcall
lcall
or
push
adc
pop
inc
lock
mov
pop
cld
fcoml
add
mov
xchg
cmp
call
inc
dec
inc
imul
stc
lret
mov
aam
je
repz
ds
scas
nop
inc
dec
cld
outsl
hlt
inc
insb
adc
mov
and
cmovs
adc
pop
and
scas
aaa
hlt
cmp
mov
scas
and
jns
ror
push
mov
mov
call
inc
maskmovq
divl
outsb
xchg
decl
insb
jle
mov
aad
jmp
incl
adc
jne
inc
in
xchg
shrl
imulb
or
mov
dec
cmpl
clc
sub
mov
mov
pop
clc
call
ds
out
das
xchg
mov
add
push
insb
mov
jl
add
mov
cmpsl
loopne
adc
imul
adc
incl
ret
push
or
xchg
sbb
inc
sti
pushl
fdiv
adc
fsts
les
jg
inc
faddl
mov
lds
imul
mov
sti
out
fdivrs
mov
fisubrs
jae
inc
dec
cmp
xor
call
add
mov
sbb
icebp
pop
lock
jne
lods
jmp
push
pusha
mov
loopne
sbb
jb
incb
and
or
sub
sahf
push
popf
in
xchg
clc
call
ss
or
mov
inc
cmp
in
xchg
daa
addr16
push
cmpsb
ud2
cld
call
jg
mov
xlat
test
sub
xchg
xchg
cli
inc
jecxz
inc
pop
int3
std
xchg
jae
mov
mov
dec
sbb
jmp
sbb
arpl
stc
fadds
inc
xor
mov
ljmp
icebp
jb
lock
mov
add
outsb
fwait
inc
push
je
call
xchg
rep
pop
call
lahf
arpl
in
leave
fs
sbbb
pop
adc
maskmovq
mull
das
std
pop
push
nop
push
test
cmp
rorl
decb
pop
loopne
icebp
sbb
cmp
iret
in
jo
imul
pop
push
mov
push
cmpsb
cs
jg
ljmp
lcall
loop
xor
xchg
jmp
mov
mov
sbb
das
cmc
icebp
sub
mov
int
cmpsb
icebp
mov
jnp
push
ss
sti
push
sub
lret
mov
sub
inc
inc
std
sar
outsb
lock
mov
fwait
jnp
outsl
cli
ds
ret
or
lcall
jns
mov
mov
ret
cld
test
mov
decl
add
movsl
icebp
dec
cwtl
popf
cmpsl
jno
push
sub
addr16
test
sarb
outsl
std
outsl
hlt
xor
dec
adc
xor
shl
pop
cmp
jp
mov
hlt
jmp
push
mov
xor
and
stos
mov
test
or
clc
fnstsw
push
in
cmp
aam
add
fcomi
adc
lret
cmp
add
lds
pushf
push
cmp
nop
pop
mov
jg
inc
inc
pop
jno
insb
repnz
bound
test
rorl
jo
pop
addr16
movsl
int
push
in
sbb
mov
xchg
adc
jp
popf
aas
pop
icebp
call
jb
dec
scas
pop
inc
pop
mov
loop
xchg
es
repz
sub
pop
push
add
ljmp
in
ret
int3
loopne
add
sti
movsl
add
in
clc
dec
push
in
popf
mov
mov
pop
and
adc
or
test
mov
jnp
int3
xchg
test
sub
mov
mov
loopne
mov
mov
ds
add
sahf
xlat
loopne
aam
decl
aad
mov
sbb
jg
lgs
popf
mov
idivb
incl
ljmp
mov
push
dec
dec
add
mov
aad
sub
addr16
jl
out
insb
stc
cmp
dec
jae
jo
jl
lock
lock
pop
decl
xchg
cmp
ds
imul
xor
jae
out
cmp
imul
sub
lret
and
hlt
aaa
arpl
js
mov
xor
arpl
addl
mov
mov
and
in
sub
pop
cmp
sub
gs
push
loope
lcall
loop
add
dec
dec
cltd
jno
mov
xchg
mov
push
adc
adc
in
adc
mov
sbbb
ljmp
pop
dec
mov
cli
imul
cmpsl
mov
or
sbb
loope
push
inc
movsb
cld
or
out
push
stos
incl
jo
cmovo
jg
ds
sti
dec
sub
insl
push
adc
cmp
jne
push
sub
inc
dec
xchg
fidivrl
dec
aad
orl
jge
incl
fnstenv
sahf
pop
inc
xor
call
sbb
pop
or
test
jmp
rcrl
jo
xchg
test
push
pop
test
pop
push
out
test
insb
cmpsl
adc
repnz
xchg
jg
je
jmp
mov
adc
or
test
das
test
jecxz
aas
lods
pop
push
sub
mov
cmpsl
scas
shrb
add
int3
fists
lock
cmp
xor
xchg
incl
inc
enter
movsl
xchg
mov
sti
mov
xor
stc
inc
inc
cli
xchg
pop
inc
xor
cmp
loopne
xor
sbb
or
loop
pop
ljmp
loope
ljmp
aaa
dec
mov
dec
ljmp
and
inc
repnz
jl
loopne
imul
jg
xchg
repnz
stos
sbb
add
xchg
jl
testl
sbb
pop
mov
dec
cs
insl
xchg
jmp
jb
fbstp
jmp
loope
dec
mov
pop
mov
mov
push
pop
mov
or
decl
cmpsb
mov
adc
jnp
lds
sub
mulb
test
iret
je
and
pushf
fisubrs
pop
jmp
inc
cmpsb
or
insb
xchg
jp
sbb
sub
icebp
push
call
lcall
mov
ljmp
bound
fsts
adc
dec
neg
decl
mulb
and
popf
xor
mov
jmp
xlat
inc
xchg
adc
pop
jne
rolb
mov
cwtl
mov
scas
into
cmp
out
mov
pushf
imul
sahf
movsb
test
fldcw
mov
push
xlat
adc
jno
jno
jae
icebp
mov
xchg
push
loop
mov
jne
jmp
adc
add
fwait
out
pop
add
jnp
xchg
adc
cmp
call
fnsave
add
sti
sub
xor
movsl
fbld
fbstp
add
push
les
pop
ljmp
and
lea
inc
sbb
push
loope
add
test
cld
jle
aad
sub
sbb
push
jmp
shll
jmp
lcall
sbb
addr16
pop
mov
push
cmp
pop
pop
int
xchg
imul
mov
xchg
lret
xor
stc
or
loope
clc
andl
and
mov
lock
ljmp
arpl
sbbb
push
nop
cmc
or
lods
ret
lcall
std
dec
and
inc
mov
ficoml
decl
decl
icebp
sahf
sbb
dec
sbb
test
pop
clc
aad
mov
shll
pop
movsb
out
adc
fstpl
mov
fdivrs
xchg
cld
fistpll
mov
xchg
xchg
lds
dec
and
mov
jle
int3
adc
decl
mov
dec
call
sub
lret
or
inc
push
aad
jmp
pushf
push
xchg
out
inc
stc
jne
mov
lahf
inc
add
cld
mov
repz
popf
dec
imul
filds
or
push
mov
xor
fldl
pop
jbe
push
cs
out
subl
rep
das
pop
adc
sub
inc
lods
push
pop
sub
mov
push
dec
inc
insb
inc
xchg
popa
inc
xchg
clc
cmp
sub
lret
cmpsl
cli
and
stos
fmull
cli
cmc
adc
stc
cmp
push
out
cmp
imul
in
js
mov
fninit
jmp
dec
jp
push
lahf
xor
jp
mov
mov
sbb
out
int3
lcall
add
adc
aam
out
push
mov
pop
pop
mov
add
pop
std
or
cltd
mov
in
and
decl
or
outsb
and
sub
push
dec
ja
notb
pop
sti
cmp
inc
add
je
dec
push
in
arpl
jecxz
leave
add
cli
repnz
out
jno
int3
and
adc
xchg
repz
cmp
add
add
xchg
icebp
fstps
test
icebp
jmp
push
mov
pop
pop
pusha
xchg
sbb
fidivrs
adc
jnp
sbb
dec
cld
mov
add
sbb
jmp
pop
add
xor
jbe
out
sub
sub
in
jno
xchg
hlt
add
call
push
idiv
fbld
ffree
inc
fstl
insb
outsb
hlt
jmp
jl
jo
arpl
lods
dec
xor
mov
jo
adc
lock
clc
cmp
inc
in
lods
adc
out
pop
ljmp
out
cld
pop
in
dec
mov
sbb
jns
dec
filds
add
sbb
cmpsb
clc
sbb
pop
cmp
inc
pop
das
hlt
incl
sbb
lcall
decl
stc
orb
mov
add
pushf
lret
out
idiv
jmp
adc
pop
icebp
push
pushl
mov
std
insl
cmp
and
imul
ja
and
mov
loop
sbb
pop
rcll
or
pop
out
inc
out
xchg
adc
dec
sbb
jg
call
test
cwtl
add
mov
pop
or
cmp
inc
mov
cmp
adc
vprotq
pop
in
aas
test
aad
js
loop
cmc
loop
mov
aaa
jg
lea
cli
mov
pushl
xchg
cli
in
lock
dec
jmp
out
sahf
mov
clc
sahf
mov
popl
mov
cltd
cwtl
out
cmp
sahf
je
or
or
mov
decl
sbb
xchg
and
idiv
lcall
xchg
stc
mov
mov
add
loope
add
and
and
loope
push
fisubl
pop
out
out
sub
pop
jns
adc
inc
mov
jl
adc
mov
mov
test
or
pushl
fadds
adc
add
in
and
std
xchg
int
fimuls
incl
data16
push
sbb
dec
ficoms
push
add
ds
pop
ljmp
sbb
sbb
add
xor
jmp
imul
frstor
add
mov
loope
movsb
pop
pop
cld
dec
decl
inc
clc
hlt
jp
add
jmp
or
mov
ljmp
dec
hlt
nop
jns
stc
aaa
mov
out
sbb
inc
or
in
inc
daa
add
ljmp
fdivrl
adc
and
mov
mov
cli
ja
dec
in
call
decl
adc
jbe
sbb
in
pop
inc
adc
mov
dec
out
pop
setl
aas
and
repz
cmc
push
outsl
or
adc
xchg
mov
loope
fxam
stos
jns
fstl
mov
cmp
loope
hlt
adc
or
adc
pop
adc
dec
cld
lds
stc
shr
ljmp
mov
mov
out
xor
lret
aam
adc
xor
hlt
add
outsb
or
daa
fistps
xchg
mov
jbe
or
mov
out
out
clc
lea
cs
jno
in
push
std
pop
sar
sub
cltd
push
push
iret
or
js
adc
jg
aad
dec
jl
addr16
insl
cmp
xlat
into
sub
mov
xor
scas
dec
int3
jecxz
jp
mull
jne
ljmp
andl
adc
mov
stc
or
mov
popf
jmp
sbb
add
and
dec
sbb
xchg
mov
xchg
fs
fiaddl
cmpsl
mov
movsl
jle
mov
jl
push
mov
jmp
sub
ret
pop
fcomp
push
pusha
mov
inc
and
into
add
es
adcl
call
xchg
adc
dec
mov
neg
xor
sub
or
adc
mov
fbld
int
push
add
fs
hlt
push
test
cmp
jmp
add
cwtl
into
lds
mov
in
jns
call
jg
pop
cli
fsts
shrb
mov
add
addb
out
ds
jl
pop
xchg
sub
sbbl
lods
and
out
test
mov
notl
mov
movsb
inc
nop
test
dec
pop
clc
ljmp
inc
and
inc
in
fsubrl
jno
jb
cltd
inc
and
sub
pop
mov
cld
jno
jmp
int3
je
rcr
aam
pop
clc
jmp
jge
jns
add
lret
pop
adc
add
inc
inc
incl
repnz
add
xor
in
cmpsb
sub
cmp
jg
int
leave
cmc
inc
mov
jo
test
dec
dec
fsub
inc
pop
aas
ljmp
cmpsl
sub
lock
pop
adc
mov
addb
or
xchg
or
jne
ja
ret
cmp
mov
stos
decb
jp
dec
std
fnstcw
movsb
arpl
lret
sahf
add
xchg
mov
or
inc
push
rolb
hlt
and
pop
jb
imul
pop
inc
add
cli
mov
inc
jmp
outsb
fdiv
xor
sbb
inc
je
std
dec
cmp
push
and
dec
ss
dec
pop
fldcw
outsb
mov
mov
std
sub
aad
std
dec
mov
call
lcall
push
or
jge,pn
pop
pop
push
mov
lea
jne
push
fcmovb
cmc
jecxz
ljmp
cmp
add
mov
int3
dec
out
lods
sahf
jg
jle
push
add
jo
popa
pop
jbe
ljmp
dec
jg
dec
enter
and
flds
nop
jnp
xchg
sbb
jp
adc
lret
cli
fidivs
xchg
sarb
inc
xchg
iret
sarl
dec
popa
ds
lods
adc
aam
mov
pop
jno
mov
ljmp
cmp
xchg
int3
mov
fimuls
movsl
pop
fsub
enter
aaa
clc
jmp
inc
mov
pop
out
nop
push
orl
cmpb
cli
out
jg
add
push
jg
outsb
pop
jmp
push
mov
pop
ljmp
test
dec
movb
je
mov
jbe
iret
xor
scas
pop
push
nop
push
mov
leave
outsl
cld
sub
leave
decb
jae
jp
and
jg
cs
addr16
mov
pop
lcall
sub
mov
dec
mov
jb
inc
std
clc
loopne
iret
rcrl
add
cmp
outsl
hlt
call
testl
je
xor
jmp
pop
cmp
incl
ret
mov
adc
test
int3
xor
mov
jmp
or
fbstp
jg
insb
jle
add
mov
aaa
int3
mov
xor
and
andl
jecxz
mov
mov
test
sbb
mov
push
hlt
jo
push
pop
push
jecxz
cmp
and
jmp
cmp
push
into
sub
mov
in
xchg
cmp
rcrb
jnp
movsl
cmp
mov
fs
std
jg
incl
scas
movsb
jae
insb
push
sub
add
inc
lock
cmpsl
sbb
mov
lcall
ja
mov
stos
push
jno
nop
insl
pop
fdivs
fs
dec
xchg
dec
dec
lcall
jno
inc
ret
add
pop
xorb
stos
jg
jmp
pop
push
jl
mov
adc
pop
stc
orl
jg
cli
sete
or
cmp
jne
and
jmp
lahf
jno
idivl
cltd
je
push
xchg
mov
outsb
push
test
jmp
pop
sbb
fcomps
stos
nop
mov
xchg
add
or
pop
xchg
in
call
call
or
xchg
shlb
push
aaa
in
inc
mov
scas
pop
or
ja
test
incl
shlb
movsb
jl
dec
mov
mov
dec
orb
jg
lea
in
cld
or
xor
mov
jg
xchg
call
inc
and
mov
mov
test
push
hlt
sti
mov
inc
test
into
dec
mov
sub
lock
popa
or
sbb
in
adc
mov
dec
fsubrp
ja
mov
lcall
mov
andl
ss
mov
or
or
xchg
pop
stos
cmc
jno
cld
call
pop
pop
stos
push
and
pushf
arpl
sar
pop
xor
push
repz
jl
mov
sbb
add
decl
std
dec
repnz
stc
int3
cs
out
sub
fdivr
dec
mov
add
cmp
ds
ljmp
hlt
and
sub
xchg
mov
ss
addr16
pop
push
incl
inc
ljmp
or
daa
das
sub
mov
push
jg
xor
aas
je
lds
in
jae
iret
ljmp
mov
pop
ret
adcb
lods
sub
push
mov
es
pop
lock
fiadds
mov
aas
sub
mov
jp
push
xchg
jno
adc
jbe
cmp
cs
incl
outsl
cmp
lods
mov
insl
movsl
xorl
jo
mov
xchg
jmp
scas
xchg
sub
daa
jg
sub
jno
loopne
imul
jbe
test
int3
mov
aad
xorb
testl
xchg
sti
popa
push
bound
jg
add
sar
jb
dec
out
shll
stc
xlat
lds
stos
test
xlat
cld
scas
scas
sarl
hlt
sbb
adc
adc
or
lret
inc
mov
shl
cmpsl
and
inc
cmpsb
mov
jp
andb
lea
nop
mov
int
mov
outsb
mov
es
loop
pushl
adc
lds
xchg
jnp
pop
dec
cmp
daa
sub
inc
ljmp
std
pop
pop
cmp
pop
and
jl
mov
pop
xchg
clc
cltd
push
jp
cwtl
jg
mov
jnp
dec
test
inc
es
stos
sub
jp
or
fs
jg
dec
and
jg
fisubrl
cmp
inc
inc
sub
lock
sub
push
add
cmp
out
and
fs
lcall
fists
push
inc
push
mov
dec
mov
mov
outsl
push
dec
gs
call
dec
pop
imul
dec
sub
mov
mov
mov
jl
das
icebp
add
dec
mov
adc
bound
cltd
inc
xchg
js
ljmp
ja
pop
sub
jecxz
notb
aad
lods
inc
push
pop
add
mov
xor
pop
fnsave
mov
mov
scas
adc
loope
pop
xlat
bound
hlt
pop
incb
xlat
aad
cmpsb
xchg
insb
outsb
push
xchg
inc
insb
xchg
ljmp
mov
pop
cmp
mov
mov
cmp
jne
adc
icebp
mov
add
jne
lea
inc
je
lods
push
in
insb
cmp
jl
adc
es
inc
rcll
stc
mov
ljmp
push
ret
loop
dec
in
mov
jecxz
mov
and
dec
mov
pop
xchg
cmp
js
dec
xchg
add
int3
call
dec
sbb
enter
incl
inc
jnp
call
dec
xor
xor
lret
mov
pop
repz
shl
mov
fnstsw
mov
pop
sahf
mov
xor
imul
mov
imull
push
pushl
mov
ds
dec
fisubl
sub
jo
or
ljmp
mov
add
loopne
inc
out
and
pop
ret
jnp
push
mov
add
cmp
mov
or
mov
dec
pop
bound
out
push
test
outsb
fisttpll
pop
xorb
add
mov
incl
or
ss
mov
adc
xor
icebp
mov
jge
fldenv
jg
cmc
pop
or
push
dec
pushf
lea
add
ss
incl
lret
pop
call
dec
inc
xor
dec
icebp
and
fldpi
lds
jl
stos
inc
mov
cmp
inc
sub
push
icebp
sbb
es
push
cmp
imul
mov
cmpsb
jno
jg
add
out
rcr
repz
daa
mov
ljmp
pop
mov
fnstenv
mov
sahf
pop
insb
out
pop
jnp
movl
mov
dec
mov
mov
pusha
movsb
lret
pop
cwtl
pushf
add
inc
scas
loopne
cmpsl
ret
dec
test
sub
enter
int3
clc
sti
fisubrl
fsubs
ljmp
lret
mov
dec
call
call
insl
mov
pop
int
mov
cmp
out
xor
jmp
int3
sbb
lcall
sbb
ja
inc
je
fldl
pop
mov
pushl
ds
jecxz
xor
inc
sbb
sbb
loop
pushl
inc
xorl
in
sbb
inc
fistpll
xor
mov
inc
gs
scas
inc
stc
cmp
push
mov
add
icebp
out
call
push
push
mov
push
add
cltd
pusha
pusha
push
movsb
fists
sbb
xchg
test
cmp
cli
add
pop
daa
loope
mov
cmpsl
out
cli
and
fidivrs
add
jg
cmpb
outsb
xor
movsb
sbb
add
fcomip
fidivrl
mov
shl
test
xlat
fldcw
shl
lods
cwtl
imul
inc
stos
and
mov
mov
mov
cmp
lods
rorb
mov
jg
mov
cmp
insl
mov
ds
inc
mov
or
decb
std
pop
dec
pop
mov
ss
dec
mov
in
aas
pusha
push
icebp
mov
push
xchg
jb
incl
dec
cmp
in
cmp
or
imul
inc
cld
pop
xor
xchg
popa
ljmp
mov
shr
lods
mov
cmp
xchg
jmp
adcb
pop
loope
ljmp
mov
dec
enter
lahf
xchg
sbb
hlt
push
jns
adc
pushl
test
out
xor
sahf
xchg
cmc
push
addr16
ss
hlt
outsl
jmp
in
mov
out
ljmp
addr16
mov
int
test
movsb
clc
pop
xor
test
subb
push
mov
sbb
icebp
call
ret
dec
adc
adc
mov
and
or
pushl
lcall
aaa
push
mov
add
mov
lcall
xchg
mov
cmc
bound
add
add
into
out
incl
push
jbe
cmp
imul
fsubl
iret
push
imul
inc
outsb
cld
fstps
cmp
outsl
mov
incl
mov
retw
in
fmull
std
xor
jg
push
clc
push
aad
inc
xchg
lds
xor
ljmp
std
inc
rcrl
jle
cltd
loopne
jo
add
jnp
ljmp
inc
fcompl
icebp
stc
call
add
sbb
add
mov
das
cmp
dec
pop
fisubs
jne
orb
aam
sbbb
add
pop
call
fldenv
test
adc
and
inc
or
lods
scas
jl
push
loope
sub
lret
pop
out
cmp
mov
in
hlt
call
cmpsb
out
mov
and
addr16
out
adc
cld
std
mov
push
sbb
xor
xchg
clc
pop
mov
add
pop
sub
jb
add
in
pushf
xor
jp
aaa
jecxz
test
test
xchg
xchg
sbb
repnz
xchg
and
push
adc
call
int
sbb
sbb
in
fucomip
in
fucomip
mov
adc
out
aam
sub
fsubr
ror
or
pop
mov
cmp
mov
test
push
jno
int
pop
inc
out
or
mov
pushl
push
mov
dec
mov
mov
pop
jnp
push
cli
test
addr16
outsb
dec
add
filds
aad
mov
push
repnz
cmpsb
fwait
mov
dec
gs
fimull
jg
test
sub
mov
cmp
sar
pusha
loopne
and
and
cmp
ja
das
es
cwtl
jmp
pop
lds
push
aam
xchg
push
lret
cmp
test
leave
out
dec
and
push
inc
push
jne
ret
dec
xlat
push
mov
fs
aam
decl
xchg
push
test
jecxz
pop
pop
rolb
test
cmp
mov
pop
push
pushl
add
pop
loopne
xchg
andb
pop
or
dec
lods
mov
sub
icebp
aaa
sub
pushl
pop
cmp
and
in
inc
adc
or
ret
stc
lcall
or
cwtl
fsubl
lock
dec
mov
xor
inc
ljmp
cmp
add
and
clc
sbb
outsl
add
aaa
sub
xchg
push
cmc
lahf
mov
test
aas
sbb
xchg
pop
lea
std
sar
incl
xchg
xchg
push
stos
and
icebp
pop
xchg
xchg
in
mov
push
mov
push
mov
cmpl
lahf
les
mov
mov
rcrb
imul
mov
jecxz
sub
xor
jae
fsubrs
decl
adc
pop
fistps
jp
mov
bound
fisubrs
movsl
call
jle
daa
cwtl
mov
push
push
mov
mov
adc
dec
push
lcall
push
sarl
and
test
mov
add
ds
pushl
popa
jno
inc
jo
sub
int3
cli
cmpsl
push
cld
cwtl
sahf
add
ljmp
xlat
stos
call
jl
loope
popf
sub
pop
cmp
push
dec
or
push
xrelease
xchg
push
xchg
mov
xor
iret
popf
pop
lret
imul
jnp
pop
push
jl
cmp
mov
push
mov
call
mov
push
inc
cmc
xchg
cli
in
lret
imul
call
adc
clc
mov
ret
xchg
inc
test
jmp
push
aam
mov
push
xchg
out
call
adcl
jb
inc
int3
shll
fs
sahf
xchg
sub
push
and
push
insl
test
mov
movsb
cwtl
les
adc
fildll
loop
movsb
jge
lds
mov
call
outsl
jg
or
fwait
loope
sbb
inc
icebp
adc
clc
call
xor
sub
jmp
rcll
adc
adc
mov
mov
movsl
cs
out
jo
je
dec
test
adc
lods
sbb
lock
cmc
ljmp
xor
cld
shlb
inc
mov
mov
rclb
push
jno
out
push
ror
cld
ljmp
int3
inc
adc
insl
movb
pushf
mov
push
pushl
aam
mov
out
mov
xchg
or
lcall
shll
sub
ljmp
cmp
icebp
rcrb
jns
push
ljmp
cmc
mov
dec
lcall
sub
mov
aaa
scas
jmp
or
leave
pop
inc
dec
in
jle
fdivrp
hlt
ja
rcl
jmp
or
jl
inc
or
xchg
jb
fstl
out
jecxz
dec
enter
xorb
test
and
adc
xchg
push
xchg
stos
or
mov
pushl
into
adc
cli
lock
push
add
sahf
push
dec
dec
mov
shr
incl
sbb
cmp
popf
int3
push
adc
sbb
incl
jno
gs
and
rcr
lcall
cmpb
mov
xor
cmp
das
fidivrs
sbbl
stos
or
or
mov
mov
cs
xchg
and
push
xchg
add
xor
xchg
ja
cmp
ljmp
sub
cmpb
cwtl
xor
inc
aad
js
mov
mov
pop
mov
adc
adc
and
push
fucomip
mov
inc
aad
cld
dec
fistpll
pop
cli
add
dec
je
arpl
jo
fdivrl
push
cmp
stos
jecxz
xchg
outsb
mov
push
fcompp
call
fistpll
sub
andb
push
and
jg
fidivl
jb
or
jg
hlt
pop
das
test
push
fwait
sbb
add
cwtl
mov
aad
and
cs
nop
loopne
inc
mov
add
mov
mov
cmp
lret
adc
stos
sub
pop
pop
stos
adc
mov
in
and
ficoms
jbe
dec
lods
daa
or
push
jmp
enter
sti
cmp
mov
and
and
jl
adc
and
add
sbb
jne
xchg
insb
shll
push
jp
mov
mov
lods
in
sbb
jmp
and
scas
pushf
mov
mov
ss
pushl
and
adc
sub
sbb
dec
xor
insb
test
ljmp
scas
xorl
andl
jnp
insb
loop
cli
les
push
ss
js
idivb
inc
fucomip
jecxz
adc
mov
incl
lock
mov
push
jbe
xchg
imul
lds
mov
jns
pop
pop
dec
arpl
decl
dec
push
fldl
dec
pop
pop
cmpsl
dec
leave
mov
imul
adc
and
xor
dec
leave
cmpsb
cld
call
mov
pop
fs
and
int
mov
mov
jns
mov
inc
adc
jge
mov
filds
popf
idiv
das
paddb
jg
cs
pop
and
sbb
inc
clc
sbb
add
xchg
mov
push
pushl
add
daa
scas
xor
js
lahf
inc
mov
imul
jne
mov
jp
mov
icebp
test
int
outsl
incl
push
pop
test
sar
mov
sub
lea
movsl
pop
jg
fiaddl
or
lcall
lcall
rorl
sbb
das
jmp
dec
sbb
aaa
cli
stc
outsb
lret
adc
or
pop
movsb
add
daa
sub
lods
popa
push
mov
sbb
pop
cmp
ret
cld
decb
idiv
incl
ljmp
aam
mov
in
mov
cli
xchg
mov
pushl
movsl
push
lret
jns
inc
arpl
enter
add
in
dec
xchg
sub
mov
inc
adc
jl
aad
mov
pop
psadbw
jnp
test
push
jge
jg
ds
in
jnp
inc
mov
jmp
add
push
mov
xchg
mov
adc
sbb
lcall
xor
pusha
bound
pop
out
push
cmpb
fdivl
mov
inc
adc
cli
adc
push
js
mov
clc
cli
ljmp
leave
dec
bound
stos
sub
pop
repz
inc
aam
dec
cld
ffreep
jae
jnp
int3
loop
je
cmp
push
mov
push
pop
or
mov
shrl
sub
and
loope
pop
stos
adcb
outsl
cld
jae
cwtl
enter
or
jb
dec
lods
clc
into
call
pop
es
sub
xchg
test
xor
jg
jmp
xchg
js
call
push
arpl
repz
loopne
lcall
mov
movsb
and
inc
pushl
rcrb
scas
jg
es
mov
or
mov
cmp
ret
pusha
lock
les
mov
movsl
jbe
arpl
mov
in
pop
js
pop
jp
jbe
cmpsb
jmp
nop
ljmp
jb
iret
pop
jbe
and
rcll
push
jg
jg
scas
push
mov
mov
push
sub
lods
lea
push
icebp
fwait
js
jbe
mov
iret
and
jecxz
jnp
addr16
and
cmpsl
add
cmp
decl
dec
shrl
adc
loopne
mov
pop
mov
sti
lods
xchg
xchg
jg
call
mov
mov
pop
dec
dec
out
outsb
lahf
stc
push
rep
jp
dec
and
rcl
lret
or
dec
test
movsl
cmp
fs
std
outsb
test
sub
mov
xchg
cmp
or
mov
sbbl
ret
fsts
and
in
lcall
sbb
cmp
ljmp
lret
xchg
mov
adc
imul
fildll
jg
popa
mov
std
mov
mov
lds
mov
pmullw
cmp
addr16
pop
loopne
hlt
aad
mov
in
sub
add
decl
xchg
adc
int3
out
icebp
and
push
dec
jne
jg
mov
lret
mov
pop
cmpsb
mov
jmp
out
dec
lcall
shrb
jnp
and
inc
das
jns
dec
jge
sbb
lcall
shl
add
lcall
rclb
sbb
mov
mov
popf
lock
pop
and
mov
cmpsb
pop
loop
ja
cmp
pushl
loopne
sahf
lock
mov
or
icebp
adc
cmp
bound
dec
mov
cli
sbbl
shlb
sub
cmc
and
fdivrp
insl
cmp
sub
mov
cmp
mov
sbb
nop
pop
mov
and
stc
push
stc
test
dec
lret
push
daa
orb
dec
sbb
test
inc
aas
pop
xchg
les
incl
loope
outsb
xchg
stos
push
mov
pop
hlt
fs
push
dec
sbb
inc
enter
pushl
inc
int
and
je
cmp
mov
loop
mov
aaa
daa
xchg
push
js
stos
test
es
mov
add
fsubs
out
add
cltd
mov
and
and
ss
push
nop
lock
fwait
inc
fbld
loope
mov
mull
sbb
shlb
outsl
icebp
lcall
ficomps
xchg
scas
push
aam
add
js
push
clc
ljmp
mov
ret
fildl
pushf
add
cmpsl
outsb
insl
insb
call
fildll
cmp
bnd
addr16
repz
pushf
add
pop
ficomps
and
lcall
shrb
loope
push
dec
mov
aas
xchg
or
adc
sbb
xor
or
jg
lret
lahf
xchg
lret
insb
xchg
sub
lcall
xlat
insl
and
cs
jns
out
mov
mov
push
cmp
sbb
test
xchg
xchg
mov
nop
arpl
sbb
mov
lods
lcall
mov
in
inc
jae
bound
jo
lret
out
add
lcall
add
push
xor
mov
cli
sbb
mov
jl
pop
mov
incl
adc
xchg
mov
sub
pop
dec
lea
clc
rcrb
fisubs
mov
lock
fistps
or
rclb
sbb
incl
fwait
incl
lods
xor
dec
repnz
mov
ja
mov
adc
testb
incl
mov
inc
inc
icebp
mov
adc
lds
push
dec
lea
and
js
nop
xchg
icebp
mov
clc
pop
add
pop
add
xchg
rol
dec
ret
daa
lea
dec
mov
aaa
push
pop
cs
xor
mov
push
cmp
ljmp
popf
mov
hlt
inc
andb
cmp
jge
jbe
aam
mov
dec
add
popf
insl
and
ficoml
cwtl
repnz
js
icebp
pop
clc
lcall
and
push
mov
dec
cld
lcall
dec
adc
test
and
outsb
ja
xor
xchg
mov
ror
jle
xchg
rcll
test
clc
stos
insl
mov
ja
icebp
mov
cmp
push
fcoms
lods
fmulp
nop
lret
popa
mull
jmp
mov
scas
add
dec
push
inc
dec
mov
popf
push
xor
jns
loope
loope
vmread
mov
mov
xchg
cmc
test
popa
xor
mov
push
mov
jl
fstl
sar
aaa
inc
pop
movsb
mov
mov
xor
mov
lret
hlt
or
xor
sub
cwtl
push
jnp
and
incl
icebp
cmp
orb
leave
add
fsubrl
shr
gs
sub
mov
pushl
aaa
popa
or
or
jl
mov
sub
incl
dec
sbb
daa
or
inc
hlt
adc
pop
ficoms
xchg
test
ds
ljmp
scas
ds
imul
add
jmp
dec
fnstsw
out
insb
pop
in
pushl
lds
jae
or
sbb
dec
scas
mov
pop
and
movsb
aam
insb
adc
jmp
in
loopne
imul
adc
dec
int3
adc
xchg
sbbl
incl
pop
subl
pop
push
jns
sub
pop
jae
dec
sahf
adc
mov
aaa
in
out
sub
or
ss
and
xchg
test
inc
shl
ljmp
in
adc
pop
test
pop
mov
pop
call
test
add
cmp
pop
jno
or
adc
out
sbb
pushl
xchg
push
in
jmp
or
cli
push
je
jae
push
fs
sti
in
ret
mov
decl
dec
cmp
lret
cltd
sahf
cmp
mov
addr16
lea
pop
mov
aad
cmp
dec
std
incl
xchg
faddl
fcmovne
lret
adc
les
cmp
pushf
mov
mov
and
ret
sahf
fidivl
jno
mov
jg
cmp
add
jl
test
mov
mov
mov
ljmp
cld
cmp
xchg
repnz
or
sub
out
mov
cli
lcall
xor
fs
jno
cmpsb
mov
push
push
adc
pop
mov
out
pop
sub
shl
xchg
sub
push
out
sbb
sahf
mov
add
sub
addl
inc
mov
jno
ljmp
pop
loopne
sbb
inc
aaa
push
scas
outsl
js
outsb
mov
arpl
push
sbb
add
adc
or
jmp
popa
int3
or
hlt
mov
add
loopne
push
arpl
aad
shll
mov
rolb
inc
aaa
cmc
ljmp
pop
cltd
jo
fcoms
shll
push
inc
pop
add
loope
lock
inc
cmp
ljmp
decb
push
add
arpl
js
fdivl
clts
inc
jmp
enter
js
jmp
cli
pop
in
rcrl
lret
cmp
and
jle
popf
dec
sbb
ret
dec
and
mov
push
cmp
pop
xchg
out
rol
dec
sar
jle
sub
xorb
mov
mov
rcrl
clc
js
mov
movsl
jge
std
nop
mov
sub
arpl
mov
std
mov
add
inc
cs
jg
outsl
insb
int
decl
mov
call
test
mov
add
inc
dec
xor
ret
jno
cli
sti
lret
or
cmc
call
pusha
int3
and
sbbb
push
fmul
mov
jecxz
test
lret
xchg
test
xor
and
push
lods
sbb
stos
in
dec
ret
ret
xchg
out
sbb
stos
xchg
push
sbb
lock
sub
dec
out
pop
pop
icebp
mov
adc
pop
xor
jbe
push
mov
dec
in
add
lea
fucomip
lcall
cmpsl
cmpsb
sar
int3
push
sub
sbb
addr16
cmp
or
xchg
ret
pop
sbb
rol
nop
xor
outsl
mov
adc
lcall
cmp
xchg
mov
jl
fcomps
sbb
adc
jg
imul
imul
xchg
js
mov
lock
pop
inc
dec
cmp
lret
mov
out
orl
movsb
int3
add
mov
es
xor
xorb
cmp
rcrl
jmp
stos
sarb
rcll
mov
ret
push
rolb
mov
aad
je
mov
xor
xchg
int3
inc
xchg
cmp
ljmp
or
lret
je
call
lret
lret
sub
xlat
in
add
pop
cmpsl
jbe
and
or
arpl
call
lcall
add
xchg
cli
inc
inc
pop
jne
sbb
push
test
fsts
sbb
sbb
jmp
push
out
push
lcall
xor
fcomi
xchg
jbe
xchg
cmpsb
out
test
cmp
pop
call
jg
pushf
std
shl
dec
mov
cmp
add
cmp
lcall
gs
mov
pop
subb
lock
imul
or
decl
rolb
and
xor
or
mov
iret
ja
push
sub
decl
ret
lret
call
cmp
and
ljmp
hlt
cmp
xor
mov
call
mov
ljmp
xchg
mov
jmp
data16
push
lret
fildl
cmp
adc
sti
movsl
out
jnp
lret
pop
or
jmp
sub
fisubrs
cmp
mov
ret
mov
in
lcall
cld
incl
inc
dec
jnp
dec
add
adc
pop
push
xchg
call
mov
lahf
cmp
adc
mov
cmpl
and
sbb
inc
inc
out
mov
out
mov
imul
and
push
sar
xor
sub
incl
aaa
into
clc
pushf
xorb
clc
in
movsb
xor
out
decl
aas
bound
lret
insl
adc
dec
loope
lcall
pop
repz
decl
adc
ficoml
fcmovnu
xorl
xchg
test
pop
sar
aaa
cli
lcall
cmp
mov
xchg
mov
mov
ljmp
xor
jne
and
outsl
mov
mov
jnp
jbe
mov
pop
add
mov
push
xor
adc
inc
aad
lcall
jmp
sbb
adcb
mov
out
inc
mov
mov
dec
ja
filds
xor
pop
ljmp
push
fdivl
lods
andb
fistl
xchg
xor
mov
outsb
and
hlt
call
jbe
jo
daa
push
std
cli
loopne
xchg
je
imul
call
arpl
mov
insb
mov
mov
icebp
imul
cmp
and
sub
cmpsl
out
inc
jnp
das
aam
call
test
lea
jns
or
ljmp
cwtl
add
xor
cmp
lcall
cmpb
out
and
dec
stc
and
movsl
jne
outsb
out
mov
xchg
das
je
ljmp
call
fs
nop
rclb
sbb
push
jbe
lcallw
sub
push
pop
fs
push
movsl
loope
dec
lods
aam
inc
insl
push
lahf
sbb
ljmp
mov
aas
push
out
jg
repnz
mov
pop
enter
call
jns
lock
mov
push
push
repz
test
std
jae
mov
mov
adc
jl
pop
imul
jecxz
xorb
cmovge
sub
lret
incl
cltd
movsl
mov
inc
jbe
dec
rolb
lods
sub
dec
jmp
leave
xchg
mov
orl
sbb
mov
hlt
hlt
cld
decl
enter
lea
insl
adc
sahf
test
mov
push
pop
decb
stc
cmp
stos
xchg
jmp
lods
in
fnstsw
adc
inc
fs
jb
mov
adc
lea
outsb
and
lcall
jnp
aas
jecxz
jae
cmp
aaa
test
lcall
jg
xchg
and
mov
mov
cmp
add
push
sbb
jo
test
jg
dec
push
pop
and
pop
sbb
outsb
fsubl
lods
jb
cmc
mov
test
mov
in
pop
push
test
nop
loopne
shl
mov
jnp
or
incl
ror
lcall
push
cld
in
out
insb
mov
xchg
jo
call
outsl
add
dec
sub
and
push
fistps
lock
movsl
call
loope
clc
popa
fs
pop
cmp
dec
xchg
push
add
inc
adc
cld
jmp
jbe
inc
out
std
push
or
add
incl
into
push
cmp
fistpll
jno
jg
scas
fldt
sbb
movsl
mov
jmp
jle
mov
mov
lods
adc
pop
sahf
fnstsw
mov
clc
push
mov
adcb
bound
ret
outsb
fstpt
mov
mov
dec
insl
sbb
mov
mov
push
leave
mov
out
inc
pop
stos
mov
jg
inc
mov
lcall
imul
repnz
aad
dec
test
push
test
jmp
sarb
nop
sub
imulb
lret
fdivl
lcall
nop
mov
push
cmc
add
dec
sbb
std
dec
std
dec
push
inc
ja
int3
pop
dec
push
es
sub
and
sbb
jmp
push
sub
dec
adc
or
sub
xor
popf
cmp
xor
cmp
mov
call
cmp
jl
lods
sbb
or
iret
lods
sbb
inc
fstpl
fcmove
push
xchg
mov
lcall
shlb
xchg
mov
sbb
and
fiaddl
or
call
xor
insb
sub
rcl
xor
sub
and
hlt
mov
xor
jl
or
push
inc
gs
ss
sar
lcall
sub
mov
es
movsl
dec
lcall
push
push
mov
jg
ret
popa
lahf
fcompl
push
cs
sub
jg
inc
mov
aaa
jl
inc
repnz
in
adc
lods
xor
mov
mov
jae
inc
pop
sarb
adc
loopne
hlt
mov
out
arpl
jmp
in
mov
fidivrs
cmp
call
movsl
notl
cmpb
cli
outsl
cmc
ljmp
pop
and
xor
repz
push
dec
jmp
in
and
jle
call
push
cmp
inc
sub
aaa
push
cmp
pop
into
inc
or
adc
decl
loopne
mov
icebp
mov
mov
xor
lret
sarl
and
mov
icebp
call
mov
push
jnp
cld
ud0
push
aad
int
mov
fldcw
push
fsubrl
inc
ficoml
lods
jb
mov
mov
xlat
xor
xor
inc
push
cltd
mov
popf
jbe
cmc
mov
call
sub
js
in
nop
pop
cmpsb
add
aas
push
pop
pop
add
call
cwtl
bound
cmp
xchg
xor
add
add
pop
push
pop
fs
call
jmp
jae
mov
jbe
or
mov
adc
push
push
push
or
sahf
jmp
add
aaa
pusha
cmp
sub
fwait
movsb
dec
push
gs
push
ja
aam
fnstsw
call
fdivr
mov
mov
push
add
outsl
call
or
outsl
dec
adc
pop
sbb
push
cmp
xor
jnp
xor
repz
cmp
inc
js
sub
sahf
jge
inc
jb
aas
movb
movl
call
js
cs
xchg
mov
imulb
push
lock
jnp
xchg
movsl
pop
ljmp
pop
or
xchg
movl
loope
lea
mov
xchg
mov
mov
popa
fwait
mov
mov
ljmp
stos
xor
icebp
mov
out
add
jo
idiv
rcr
xlat
xchg
sub
add
xchg
cmp
cmp
ret
insl
decl
test
push
ret
jb
pop
jne
xchg
sub
push
in
push
lret
aas
fistpll
jge
test
mov
cmp
lods
ja
inc
mov
ljmp
movsb
push
pusha
mov
test
fdiv
test
push
lods
sbb
mov
test
fcompl
mov
fwait
ret
dec
test
int3
enter
add
ljmp
cmp
cmc
cld
lahf
cwtl
rolb
mov
daa
inc
cs
pushl
iret
lods
out
or
icebp
inc
or
imul
jno
pop
lret
pop
jo
aam
std
popa
xchg
loop
shlb
nop
clc
decl
decl
sbb
shr
add
gs
cltd
fnstcw
andb
adc
in
or
push
mov
adc
jg
pushl
inc
daa
cltd
dec
cld
push
ja,pt
push
mov
mov
insl
or
jecxz
lock
clc
test
adc
push
sbb
inc
sub
fcmovnbe
loopne
mov
pop
loope
mov
dec
xor
add
testl
clc
aaa
cli
outsl
lcall
inc
xor
insl
cmp
pop
loop
in
mov
bound
pop
sub
clc
pop
in
inc
sub
dec
sbb
push
jmp
push
pop
clc
pop
mov
leave
fdecstp
sar
inc
mov
mov
cmp
inc
xor
lret
xchg
mov
fucomip
outsl
fwait
xor
out
aas
mov
test
aad
sbb
mov
aad
pop
fucomip
loopne,pt
and
jecxz
das
mov
push
mov
mov
pop
cld
pop
sarl
xorl
mov
sub
js
jo
cmc
add
dec
daa
sbb
dec
in
mov
push
es
sbb
jb
test
cld
cmp
decl
mov
movsb
lret
testl
aas
mov
jo
clc
nop
incl
incl
fidivrl
dec
ret
in
in
mov
ss
jecxz
outsb
sub
pushf
es
xor
out
sbbb
dec
jmp
xor
divb
bound
mov
adc
les
jmp
adc
ret
mov
push
out
mov
xor
in
mov
push
pop
add
dec
jo
fcoms
mov
lret
fldl
xchg
cli
test
xchg
or
ret
lock
arpl
sbb
jae
clc
ret
inc
mov
xchg
cmpsl
mov
leave
sahf
inc
add
pop
shr
incl
ds
mov
sarl
or
pop
scas
ret
das
std
push
fcmovne
pop
sbb
sub
xchg
pop
jmp
jb
clc
pop
push
cli
incl
inc
and
jno
bound
into
enter
dec
int
clc
jle
stos
stc
jg
lcall
testb
mov
jecxz
mov
mov
cli
pushf
and
call
adc
cmpsb
sub
cli
sub
mov
mov
nop
mov
dec
xchg
mov
cmp
pushf
pusha
mov
in
das
mov
adc
decl
dec
cltd
loope
adc
mov
out
aaa
jns
sub
sbb
mov
push
and
incl
mov
sub
icebp
ret
fisubrl
xor
jno
or
jg
lret
adc
in
pusha
cmpsl
nop
in
fwait
call
dec
lahf
and
iret
jo
scas
dec
enter
jg
push
fistpll
test
test
mov
mov
cld
jbe
mov
stc
scas
inc
cmc
fdivl
cltd
out
aam
call
dec
jmp
lahf
nop
and
sbb
dec
add
dec
pop
mov
lret
iret
loop
fildll
jl
fwait
xor
jg
mov
or
decl
sbb
xchg
ja
lock
xorb
stc
jns
jb
sbbl
cmpl
punpcklwd
push
jecxz
mov
xchg
mov
mov
popf
data16
call
mov
ja
or
adc
fidivrl
adc
cmpl
inc
in
lock
scas
addr16
adc
add
pop
dec
fdiv
rorb
pop
in
pushl
nop
push
push
xlat
out
frstor
adc
and
pop
jns
enter
decl
xorb
xlat
mov
push
xchg
iret
cmpsb
fwait
adc
test
cmp
incl
inc
aas
mov
xchg
mov
mov
mov
pop
mov
scas
ja
cmpsb
xor
test
or
dec
or
shll
shl
jmp
movsl
enter
push
mov
jecxz
push
les
mov
nop
out
mov
inc
out
cmp
lahf
rcrl
jo
sub
jg
shrl
mov
aas
aad
cmp
mov
incl
xorb
repz
xchg
je
aas
daa
pop
int
sbb
dec
adc
addr16
pushl
sub
loope
jnp
mov
sbb
test
push
push
shll
cwtl
addr16
pusha
xchg
fwait
addr16
dec
pop
mov
js
je
lock
stc
mov
xorb
push
shrl
xchg
push
loop
sbb
std
pushl
lods
rol
pop
mov
ret
sbb
and
jmp
jmp
daa
xor
jecxz
movlps
sar
jg
and
sbb
shlb
rcll
or
fldcw
mov
lock
dec
addr16
ljmp
and
xor
or
in
das
lcall
cmp
in
inc
mov
fbld
mov
push
lahf
mov
aaa
pop
sbb
sbbl
movsl
idiv
jl
aaa
jb
dec
popf
notb
add
mov
push
inc
shrb
inc
or
mov
pop
xor
sub
fsubl
mov
push
and
cmp
pop
out
in
pop
adc
inc
lds
cld
leave
clc
push
pushl
lret
xchg
cmp
lahf
iret
and
nop
push
loop
inc
cmc
pop
loop
mov
jae
out
test
mov
cltd
mulb
pop
adc
ljmp
aas
push
out
test
out
xchg
in
mov
inc
out
and
outsl
push
sub
in
in
mov
fmuls
es
jp
xor
lahf
xor
lea
gs
out
repz
incl
jmp
js
and
push
adc
imul
aam
jmp
aam
jg
push
lcall
fdivrl
dec
add
xor
pop
push
add
shlb
lret
lods
mov
push
jmp
and
pop
mov
mov
and
cmp
cmp
mov
jg
ljmp
lock
xchg
mov
test
jo
pop
xor
std
ret
mov
xlat
js
add
jl
or
pop
mov
inc
sub
mov
idivl
ja
add
or
inc
push
fs
in
push
jmp
jecxz
jmp
mov
mov
into
arpl
leave
hlt
movsl
lcall
mov
jb
dec
enter
popl
int3
lahf
ret
pusha
dec
inc
or
jmp
stos
cmp
inc
outsb
push
je
loop
push
incl
lahf
pop
inc
pop
divl
or
leave
icebp
test
rol
decl
mov
mul
int
mov
mov
xchg
cltd
ss
subb
jmp
cmp
sbb
ds
or
jne
lcall
imul
cmp
jnp
xlat
loope
into
in
pop
or
stos
pop
popf
ret
push
loopne
rcrl
loopne
mov
cmp
call
pop
cmp
rolb
xchg
and
sahf
sub
pop
clc
dec
cld
divb
lds
into
jl
dec
aam
jmp
dec
lea
scas
ss
pop
mov
lods
or
ljmp
cmp
fdivs
rclb
mov
int
sbb
xchg
shll
mov
stc
cmpsb
cmp
es
dec
subl
jno
test
lcall
xchg
inc
mov
das
or
mov
scas
xchg
xchg
movsb
jl
push
sbb
mov
fwait
std
jne
int3
sbb
popa
mov
mov
lock
leave
push
mov
mov
jp
inc
test
in
je
sti
fcoms
pop
adc
xor
push
dec
cld
pop
cmpsb
mov
inc
rcrb
pop
mov
push
cmp
cmp
ljmp
mov
mov
in
int3
cmpsb
inc
fisubs
jbe
jbe
shll
aad
dec
mov
sub
lcall
call
cld
inc
stos
jae
popf
test
sub
or
popf
rcr
mov
mov
pop
shrl
jmp
int3
dec
cmc
xchg
adc
inc
jp
add
and
pop
fcoms
aam
popf
lahf
sub
in
loop
jns
dec
std
jg
sbb
jb
mov
mov
sbb
xor
push
mov
jmp
std
gs
ds
mov
fbld
shl
fsin
fnstsw
call
pop
cwtl
push
push
mov
dec
incb
lds
xchg
movl
pop
out
xchg
pushf
and
or
push
sti
mov
je
in
call
xchg
arpl
sub
jb
sbb
cld
out
outsl
lcall
jp
sub
jnp
lcall
xchg
push
sub
cmp
jmp
insl
out
packuswb
push
sub
lret
jp
scas
jns
jb
pushl
xchg
movsl
push
adc
into
sub
sub
cmc
js
fbld
mov
push
scas
cmp
fstpt
push
jbe
out
ret
pushf
fwait
test
ljmp
insb
adc
and
mov
jnp
adc
repz
jecxz
dec
pop
add
mov
pop
push
loop
shlb
jmp
sub
mov
jecxz
add
cmp
adc
push
or
adcb
inc
sbb
lcall
jae
divb
out
sub
enter
clc
incl
pop
testl
pop
pop
orl
fucomip
push
mov
fstpt
int
rol
push
or
in
xchg
pop
jg
incl
cmpsl
sbb
xor
in
ljmp
jb
jmp
bound
inc
scas
cltd
and
or
push
xor
cld
pushl
or
out
inc
jl
dec
test
add
xor
jmp
dec
sub
ljmp
popl
push
ss
out
in
sti
xchg
inc
test
mov
lds
pushl
clc
int
xchg
frstor
cmpsb
outsb
xor
fwait
incl
hlt
cmc
xchg
adc
adc
mov
rol
jmp
inc
lcall
adc
aad
and
sbb
pop
loop
repnz
dec
cwtl
cmc
lcall
add
ret
cmp
jge
adc
incl
pop
loopne
dec
cmp
insl
mov
in
jg
mov
mov
add
cmp
in
cmc
fbstp
int
cmp
call
and
add
and
inc
sbb
mov
jmp
outsl
icebp
inc
rclb
decl
or
daa
shl
loopne
aas
cmp
mov
jmp
adc
adc
ja
sbb
push
sti
push
mov
outsb
sub
push
mov
pusha
inc
shl
xchg
sub
daa
lret
outsb
scas
scas
cmp
lcall
sbb
std
fstps
mov
mov
test
es
in
fsubrs
mov
ret
add
ja
aam
jmp
jno
inc
or
rorl
scas
jmp
fcmovne
cs
outsb
cmc
mov
sbb
arpl
test
adc
add
das
std
lcall
fnsave
xor
lret
aad
push
push
test
jno
popa
stos
nop
mov
sti
outsb
cmp
or
xchg
cld
mov
xlat
jae
mov
and
push
jg
pop
loop
fisttps
lock
dec
out
add
aad
aaa
or
shrl
jecxz
mov
incl
xchg
or
push
push
rolb
xchg
in
cli
xlat
pop
pop
mov
and
xor
jmp
bound
add
sub
arpl
lods
adcb
test
pop
fldcw
lahf
pop
xor
jns
cltd
mov
sbb
in
sub
test
inc
jnp
std
js
dec
push
cmp
int3
jns,pn
invd
sub
inc
incl
sbb
and
ljmp
jp
test
push
into
push
cmp
in
jg
call
loopne
rcrb
cmc
jmp
or
outsl
incl
inc
dec
inc
iret
sbb
sub
shrb
inc
or
notl
sub
cmp
fidivs
loope
jmp
loop
incl
pop
or
cmc
mov
sbb
das
dec
ja
add
pop
fxch
inc
push
cmp
lods
xchg
lcall
scas
add
mov
cmc
inc
ss
pop
xchg
adc
inc
adc
push
mov
sti
pushf
loop
sbb
mov
insb
pushf
sbb
jnp
aad
mov
mov
hlt
ja
mov
add
push
adc
dec
rolb
jmp
decl
jo
jno
mov
cmp
in
inc
mov
repnz
or
pop
loop
push
adc
pop
fnstenv
sbb
xchg
div
xchg
sbb
dec
jbe
pop
and
lcall
data16
aad
sub
mov
jmp
push
push
sub
dec
jge
cmp
sar
mov
cmpsl
inc
or
mov
int
leave
sbb
cmpsb
loopne
dec
sbb
mov
test
jecxz
stos
clc
jb
nop
push
lret
xchg
inc
pop
or
mov
add
in
inc
xchg
jmp
decl
outsb
mov
stos
push
mov
mov
inc
mov
ficompl
ljmp
repnz
push
mov
out
jns
or
add
inc
sti
or
mov
pop
ljmp
jmp
jae
popf
movsb
mov
lods
fisubl
gs
mov
movsb
xor
jnp
orl
sbb
push
add
ljmp
sub
cld
ds
jp
loop
lock
dec
dec
mov
sub
xchg
jns
ja
outsl
add
push
pop
clc
pop
loopne
mov
pop
cmp
mov
call
push
enter
dec
inc
adc
mov
cmpsl
and
call
insl
or
push
add
inc
pop
pop
shlb
and
mov
and
push
shll
mov
jecxz
in
aam
cmp
scas
pop
call
popf
or
push
jecxz
and
push
jmp
dec
bt
lcall
test
fmul
icebp
andb
aas
fstps
out
adcb
lds
call
mov
std
ss
hlt
aas
jle
pushl
xor
xor
sahf
gs
sti
negl
push
and
popa
and
cmp
inc
repnz
decl
cld
mov
fwait
xchg
int3
shll
cmp
sbb
xchg
stos
lret
or
pop
mov
inc
das
sbbl
inc
sub
add
jnp
loop
ljmp
scas
mov
fsts
daa
jnp
jp
les
xchg
dec
loope
incl
shlb
fbstp
pop
aaa
xor
add
das
push
fnstcw
sbb
int
insb
out
movsb
mov
dec
mov
aaa
outsb
ss
and
jmp
mul
call
out
mov
cli
addr16
shlb
mov
ljmp
jo
lret
xchg
nop
xor
dec
cs
stc
sbb
repz
das
push
call
push
inc
sbb
addl
lcall
pop
mov
daa
xor
psllq
lahf
adc
decl
cmp
dec
xchg
jmp
rcr
lret
lods
mov
pop
idivl
leave
adc
imul
cmp
push
aad
pop
incl
ret
jecxz
stos
mul
mov
xchg
cld
push
push
pushf
push
movsb
push
testl
fcomps
sar
imul
jmp
hlt
push
sub
dec
sbb
adc
bnd
lods
mov
mov
les
jns
gs
jnp
shrl
push
add
loopne
inc
mov
shll
out
xor
ret
clc
outsl
icebp
call
pop
adc
sbb
xchg
dec
not
push
pushl
jp
cld
jmp
jns
and
mov
mov
jno
decl
popf
lds
adc
lea
pop
lea
decl
xor
jnp
orb
bound
enter
cmp
divps
adc
push
lcall
adc
repnz
aam
push
nop
lds
dec
in
lcall
decl
fs
mov
adc
lcall
sahf
sbb
adc
mov
xchg
pusha
insl
cmp
add
cwtl
in
nop
fxtract
dec
in
bound
call
lahf
imul
add
mov
add
cli
push
mov
mov
enter
leave
ja
and
push
cmp
mov
inc
pop
es
adc
push
mov
lahf
icebp
mov
cmpsl
adc
mov
push
hlt
pop
add
aas
jae
sbb
test
incl
inc
xor
ret
ja
cmp
mov
or
call
or
xchg
and
outsl
iret
cli
loop
pop
push
jp
xor
enter
je
das
jo
push
test
jo
in
xchg
pop
lds
ljmp
fisubrl
push
lods
xor
scas
ja
iret
das
call
es
inc
test
dec
das
and
xorl
loopne
rol
pop
push
cmp
mov
mov
test
std
jge
add
pop
jge
adc
push
es
cli
pop
pushl
adc
jno
adc
outsb
xor
jo
ja
ffreep
bound
ret
imul
int3
jns
aad
arpl
sbb
sub
xor
sti
inc
wrmsr
rcrl
dec
or
or
testl
push
cmpb
mov
inc
sbb
testb
pusha
fwait
mov
ljmp
pop
jecxz
dec
js
in
sub
mov
lock
pop
pushf
sbb
ud0
std
or
imul
shll
pop
call
or
dec
jno
insb
xor
in
xchg
outsl
enter
jg
call
stc
cmp
inc
sbbb
inc
lcall
rorl
jmp
sbb
or
adc
test
add
call
dec
mov
adc
sub
xor
push
mov
mov
decl
mov
fstps
cmp
outsl
test
loopne
decl
iret
and
push
scas
hlt
xchg
add
std
inc
lcall
inc
xor
sbb
ffreep
mov
ret
dec
push
jo
pop
sub
fbld
pop
cmova
lcall
sbb
jecxz
mov
pop
mov
xor
pushf
movq
call
xor
aaa
push
xchg
xor
dec
bnd
sub
push
loope
jle
inc
leave
into
addr16
sub
inc
pop
test
lods
xor
adc
stc
mov
je
sarb
jns
mov
pop
nop
sbb
mov
popf
add
clc
jmp
adc
leave
pushl
aad
cltd
sti
mov
sbb
popf
mov
fcomi
mov
adc
out
jle
or
mov
jno
adc
out
stc
or
dec
lods
jl
push
out
jg
mov
js
aaa
clc
lcall
enter
nop
jnp
add
push
aas
lock
cld
pop
mov
push
xchg
jo
lcall
scas
test
push
jle
popf
outsl
bndstx
inc
jle
out
push
adc
jne
shlb
inc
fucomip
ljmp
data16
or
loopne
repnz
pop
cmc
stos
inc
pop
jmp
cmc
call
push
cmpsb
sub
add
xlat
jle
into
pop
inc
aas
lods
repz
sub
inc
cli
call
jns
push
fldt
jg
int3
inc
inc
es
stos
lgs
movsl
lret
xchg
sub
mov
mov
pusha
jae
int3
add
pop
mov
pop
push
sub
add
out
mov
arpl
inc
push
cwtl
orb
hlt
xchg
cli
loopne
rol
dec
dec
jg
int
fisubl
or
clc
decl
cmp
xchg
jbe
push
add
repnz
ljmp
ss
frstor
cmp
adc
in
fucomi
fbstp
dec
xchg
mov
xchg
movsl
mov
lds
pop
push
jnp
jmp
in
das
mov
lahf
enter
cld
aas
push
fs
ljmp
mov
or
rol
and
pop
xor
and
or
cld
pushl
inc
imull
lcall
and
push
data16
jb
cs
lret
movsl
sub
cmp
jne
nop
jbe
sahf
outsb
out
clc
lds
int
jg
std
loope
jge
stos
xchg
inc
int3
rcrb
add
adc
fldl2e
sub
outsl
hlt
lods
push
mov
lods
add
popa
add
outsl
fadds
lods
int
fsubr
mov
shrl
jmp
aaa
cmc
mov
clc
data16
adc
test
outsl
popf
jecxz
imul
add
mov
jno
cs
ljmp
test
dec
inc
adc
aas
or
sbbl
push
jmp
int3
data16
pop
adc
cld
push
mov
aad
cmp
in
xor
call
fisubrl
mov
inc
aas
xor
fsubl
push
shll
dec
test
decl
loop
sbb
je
shrl
lcall
pop
pusha
loope
outsb
sub
incl
lds
and
mov
shlb
clc
pop
hlt
insl
subl
and
mov
lret
insl
or
or
sti
mov
xchg
dec
mov
cwtl
adc
aas
mov
sbb
fdiv
orb
cmp
sti
lods
add
outsb
or
test
int3
sbb
loop
iret
push
jmp
dec
push
imul
sub
imul
adcl
unpcklps
nop
pop
push
xchg
push
mov
jp
cmp
decl
sbb
xchg
jbe
leave
pop
loop
cs
jl
sbb
pop
push
jl
aas
pop
jmp
inc
call
adc
lcall
sbb
ret
in
xor
iret
imul
mov
out
shrb
mov
push
xor
addr16
mov
dec
cmc
sbb
lods
inc
and
cmc
mov
roll
out
lret
lcall
lods
scas
pop
push
xchg
mov
jp
xchg
es
jge
decl
adc
cmpsl
sub
nop
bound
inc
das
push
popf
xor
add
ljmp
imul
sbb
out
jl
std
out
fnstenv
cmc
add
cmp
ljmp
and
das
mov
ror
cmp
test
repnz
lcall
fwait
inc
push
sbb
stos
test
adc
out
in
mov
cmp
fdiv
ljmp
pushf
jle
dec
xchg
push
sbb
xlat
or
mov
enter
pop
icebp
cmp
aaa
pop
roll
test
and
jle
ljmp
test
das
je
daa
pop
in
inc
out
or
lcall
xchg
cmp
push
outsl
in
aas
jb
mov
ret
subl
out
jns
dec
push
mov
outsl
cld
jmp
mov
andl
sbb
dec
xor
jnp
scas
test
jg
ljmp
sbb
fdivrs
out
adc
cltd
popa
sub
add
xlat
pop
push
push
out
stos
pushl
ss
lcall
inc
addb
jnp
cmp
pop
movsl
mov
mov
mov
fdivs
ss
inc
mov
ss
out
lcall
and
insb
out
ja
jns
dec
in
ljmp
dec
adc
xor
xlat
pop
lahf
int3
scas
ret
sub
sub
call
aaa
test
movl
cli
data16
loop
sarl
pop
adc
mov
icebp
sti
dec
out
outsb
cmp
lcall
pop
push
cmpsl
lea
cwtl
push
test
mov
adc
shrl
mov
mov
ljmp
sub
cmp
and
dec
ret
lods
jge
sti
or
and
ret
mov
inc
inc
xor
xlat
fwait
mov
aam
push
pop
outsb
pop
mov
in
enter
mov
cli
inc
jecxz
pusha
mov
imul
fimuls
pop
aas
xchg
test
lea
push
rol
test
inc
lret
jmp
push
popf
andb
stos
mov
leave
mov
mov
push
and
cmp
gs
sub
push
xchg
pop
and
inc
nop
nop
es
jg
test
adc
aaa
sbb
lcall
jnp
push
repnz
ficoml
loop
jns
pop
loopne
mov
stos
mov
xor
lret
lods
jnp
mov
decl
mov
mov
bound
jecxz
add
mov
dec
push
push
lahf
in
sub
shl
add
push
cmc
mov
mov
ret
push
ret
in
sbb
call
das
std
xchg
scas
or
pop
out
insb
enter
fmull
decl
pop
cwtl
pop
dec
mov
pop
jecxz
cmp
mov
ljmp
xchg
ja
int
sbb
inc
aam
push
pop
jo
xor
sbb
cld
jmp
cwtl
jmp
roll
pop
xor
scas
push
xor
hlt
ljmp
cmc
outsl
or
mov
stos
mov
or
sbb
sbb
adc
mov
into
imul
iret
and
addr16
pushl
fwait
sub
ja
es
cmc
mov
loopne
push
jne
int
mov
dec
mov
xor
cwtl
or
sbb
and
inc
mov
jno
inc
test
sub
mov
push
int3
std
mov
sub
mov
daa
xorl
pop
mov
xor
test
std
push
mov
pop
rorl
or
insl
fistps
xor
outsl
mov
movsl
iret
mov
adc
xor
repnz
sub
push
lahf
movsl
pop
push
daa
add
push
jno
cmpsb
rcrl
sub
incl
dec
inc
aam
mov
out
pop
hlt
xchg
aas
sbb
pop
rol
mov
ljmp
lea
mov
cmpsl
sub
fxam
cmp
cli
jmp
pop
xor
clc
int3
loop
pop
push
inc
lret
iret
sub
lods
cmpsl
xlat
push
cmp
mov
fimull
dec
sbb
sbb
nop
inc
xchg
pop
sahf
ljmp
jg
repz
icebp
inc
or
adc
mov
cmp
mov
pop
inc
cs
or
pushl
mov
pop
scas
ljmp
mov
xchg
decl
cwtl
iret
je
jmp
sbb
xor
aas
ja
add
inc
test
fbld
push
sub
hlt
sbb
std
jmp
out
pop
stos
ljmp
jne
xor
lods
mov
shlb
insb
jg
fistpll
jb
loopne
test
scas
stc
push
adc
pop
ret
inc
pushl
push
cmp
cmp
xchg
cmpsb
push
inc
fwait
xchg
enter
sub
pushl
inc
jp
mov
leave
jns
dec
insb
jmp
mov
sub
mov
repnz
mov
cmp
add
sahf
in
add
or
sbb
test
xlat
jge
mov
ds
xchg
roll
add
outsl
pop
in
mov
dec
and
xor
dec
and
pushl
movsb
pushf
jae
or
cs
sbb
jg
subl
mov
xor
js
iret
sub
daa
leave
cmp
aam
call
mov
imul
add
lds
cmp
dec
xchg
out
call
dec
xchg
and
outsb
ss
out
cmp
mov
lods
std
jne
filds
dec
mov
mov
hlt
lods
and
es
or
or
incl
iret
pop
pop
movaps
dec
call
mov
cmc
mov
push
test
mov
test
aam
popf
lock
xchg
popa
fnstsw
lcall
mov
imul
ror
out
mov
push
wrmsr
or
ljmp
sbb
mov
in
outsb
ret
loope
cmp
insb
or
pop
scas
imul
dec
jl
mov
lcall
rcr
stc
and
pop
pop
mov
test
fsubl
dec
cmp
adc
xchg
jmp
or
fistpl
push
inc
xor
jne
aas
in
adc
jmp
fisttps
inc
rorl
inc
addr16
mov
xchg
fucomi
xor
mov
fdivr
lcall
popa
ljmp
movsb
sub
mov
push
add
xchg
pop
jo
bound
sbb
icebp
jmp
scas
das
movsb
test
jg
inc
mov
inc
xor
add
je
push
mov
mov
scas
stos
xor
into
nop
xor
add
push
mov
int
adc
and
fnstsw
inc
arpl
jmp
or
adc
cmp
stos
pop
stos
fistps
cld
insl
jmp
jbe
fwait
xchg
movsl
sar
in
jno
call
inc
iret
outsb
push
pop
jp
inc
lods
fnstsw
add
dec
sbb
xor
sahf
mov
ljmp
loop
sbb
adc
mov
fwait
push
mov
jns
dec
insb
xchg
and
jmp
jl
xor
pop
pop
dec
mov
cmp
pop
xchg
lret
and
jp
mov
mov
lods
jmp
push
fnsave
out
push
and
push
and
mov
aam
cmp
sbb
mov
mov
sbb
cmc
jmp
jae
mov
loope
ljmp
lcall
outsl
pop
inc
sbb
cmp
outsl
and
jg
into
sub
push
mov
pop
jbe
ds
loope
ds
fsubs
lods
xor
sbb
dec
clc
andl
sub
cmp
cmc
dec
sbb
mov
cltd
inc
adc
xchg
fcom
test
lock
jmp
cmp
aaa
xchg
mov
pop
sub
adc
mov
sbb
adc
in
xor
cmp
pop
sbb
rorb
pop
aas
std
xchg
js
jge
adc
jg
xlat
loope
aam
jbe
dec
into
lahf
orl
lcall
xorl
pop
and
or
lcall
mov
push
mov
repnz
ror
and
sub
jl
pop
jg
out
insb
sub
cmc
loopne
add
mov
scas
lea
pop
in
sbb
push
pusha
dec
and
stos
cs
add
and
insl
in
xchg
and
xorb
dec
pusha
in
dec
ret
out
cmp
mov
mov
sub
popa
sbb
fidivs
mov
decl
sub
movsb
pusha
push
not
jp
dec
or
std
adc
outsl
hlt
sub
ror
lods
iret
dec
enter
scas
push
push
lds
cld
addr16
lcall
xchg
add
inc
data16
cmpsb
cmp
sub
jmp
mov
jb
lcall
xor
movsl
movsb
pop
gs
mov
stos
testb
iret
vpsubq
icebp
decl
pop
lods
cli
jne
je
mov
arpl
pusha
hlt
testb
cltd
mov
mov
loop
mov
jae
mov
mov
mov
xchg
sar
lcall
fdivl
sahf
repz
and
and
pop
sbb
mov
inc
mov
or
or
popa
in
rorb
fidivs
lds
fidivl
pushl
fldcw
mov
or
xor
dec
decl
shll
jb
fmul
mov
sbb
repnz
mov
lret
loop
dec
jmp
decl
jo
sub
mov
push
adcb
mov
loope
add
mov
pushf
icebp
fbld
sub
sbb
ljmp
or
std
pop
in
psubb
ljmp
pop
rcrb
into
mov
push
jno
xlat
inc
iret
aad
mov
lcall
incl
aad
ljmp
call
popf
mov
outsb
or
fwait
jb
pushl
xor
inc
js
fs
pop
inc
push
bound
xor
jb
call
mov
jl
and
mov
sbb
test
dec
ljmp
pushl
out
sbb
lret
jg
jl
sub
mov
adc
jmp
add
xlat
mov
mov
mov
xchg
icebp
test
pop
out
gs
inc
sub
pushf
push
push
leave
pop
xor
loope
call
and
test
cli
and
xor
xchg
xchg
mov
cli
mov
lahf
movsl
loop
mov
fidivrs
adc
cmp
jg
ljmp
push
adc
xchg
jecxz
mov
call
pushl
or
jb
mov
push
test
cmpb
jg
sbb
jo
pop
popf
xchg
pop
add
dec
or
cmpsl
aam
sahf
and
clc
iret
cld
aad
nop
aaa
clc
mov
pop
inc
lea
sbb
sarl
call
and
imul
dec
cmp
ss
jmp
cmp
pop
pop
dec
cmpsl
mov
insl
cmc
pop
sbb
out
sub
inc
aaa
inc
pop
push
ss
enter
repz
push
lea
pop
movsl
dec
mov
xchg
aad
mov
mov
sahf
jl
push
ss
push
fdiv
in
mov
rcll
int3
rorb
imul
add
adc
pop
fadd
lods
lcall
xchg
mov
mov
fisttpll
js
lcall
pushl
pop
in
mov
mov
and
lcall
cmp
inc
pop
xor
cmp
lret
test
adc
push
add
lcall
ljmp
adc
call
loopne
sub
jp
add
in
lcall
mov
xchg
sbb
adc
out
xor
add
or
in
xchg
cli
push
mov
xchg
lods
sub
decb
fbld
jae
mov
sbb
pop
scas
out
mov
orl
lods
aam
dec
lods
decl
fsubs
dec
jne
or
scas
scas
push
aaa
adc
pop
cli
push
pusha
jge
pop
push
cwtl
mov
cs
adcl
xchg
or
sti
dec
in
daa
inc
jo
fadds
repz
decl
lret
aas
mov
je
pop
xchg
sbb
mov
mov
inc
adc
push
adc
pushl
cmpsl
push
stos
test
xchg
push
rorb
imul
das
outsl
rcrb
or
ljmp
cmc
pushf
xchg
cmc
xor
jae
fwait
emms
jg
incl
add
mov
outsl
push
fxch
xor
adc
ja
sbb
lods
jmp
bound
xchg
jb
xor
pusha
iret
lods
mulb
call
ret
mov
ret
mov
inc
jmp
xchg
push
mov
cld
je
sub
mov
pop
stos
movsb
in
sbb
insl
sub
push
lods
pop
xchg
stc
in
mov
jmp
lahf
add
fiaddl
adc
js
shrl
pop
outsl
std
and
std
por
hlt
outsl
cmc
mov
movsb
outsl
leave
ja
nop
add
push
inc
incl
jp
sbb
fdivrs
cltd
lock
mov
pop
dec
push
xorl
adc
sub
daa
fucomip
lds
push
mov
loope
lcall
pop
clc
ljmp
fwait
mov
dec
adc
mov
jge
xorb
cli
in
mov
icebp
mov
or
ret
fwait
inc
in
js
cmpsl
outsb
and
call
fildll
xchg
adc
pop
mov
cmpsb
xchg
cmp
add
pop
xchg
mov
add
pop
push
jbe
rorb
xchg
ljmp
push
pusha
mov
ret
xor
jno
out
ss
aaa
cli
fadds
jmp
insl
fsubrp
jmp
xor
adc
xor
or
gs
cmp
lahf
xchg
sbb
lds
xchg
popl
mov
cli
xchg
mov
and
stc
shlb
jmp
es
fucomip
fists
sub
scas
sbb
mov
test
call
arpl
sub
fists
cmc
fsubrl
or
popa
xchg
push
cmp
cmp
push
outsb
in
jmp
popf
mov
test
mov
incl
pop
stos
adc
sbb
mov
sub
shll
ret
lcall
std
push
or
rclb
sub
xor
ret
xchg
inc
and
fnstenv
fsubrs
stos
fdivp
lcall
pop
pop
inc
pop
iret
mov
rorb
mov
mov
adc
cltd
rcrl
adc
mov
dec
adc
lods
mov
lcall
dec
xlat
sbb
ror
insl
or
out
clc
jecxz
xor
icebp
jmp
push
insb
subl
dec
jmp
jns
loope
leave
sar
icebp
jg
sub
or
dec
pop
in
test
in
aad
push
adc
outsb
stos
sub
jmp
adcl
mov
cmpsb
pop
jns
std
xor
push
aam
fisttps
cli
pop
pushl
cmp
lock
loopne
mov
insl
mov
or
sbb
arpl
pushf
lahf
pusha
push
cld
jg
in
dec
insb
jge
lods
mov
fdivp
inc
push
out
jbe
xchg
lcall
lret
and
rolb
cmpl
jmp
orl
jmp
jmp
aam
jb
rcll
dec
test
mov
pop
lcall
or
mov
jg
ljmp
mov
xlat
stos
pop
xor
pop
jp
mov
mov
rcr
cmpsb
mov
dec
jmp
sbb
lock
cltd
fmuls
rolb
sbb
mov
ljmp
lea
movsl
mov
fidivrl
inc
adc
dec
stos
and
jmp
movsl
dec
jmp
push
outsb
push
xor
pop
push
cli
js
ret
cwtl
cwtl
sub
add
adc
pop
clc
push
lock
adc
stc
mov
jp
jg
loop
cld
pop
fs
pminsw
sbb
mov
test
push
push
sub
addl
insb
sbb
mov
cmpsb
sub
inc
mov
roll
test
mov
sarl
test
mov
ljmp
call
push
pop
pop
fsubr
adc
test
movsb
mulb
bound
fstps
imul
ljmp
loop
pop
cmpl
dec
and
lret
or
push
call
jne
iret
cmp
jl
pop
cmc
scas
je
decl
movsl
dec
loopne
push
adc
pusha
and
in
rcr
inc
andb
call
loope
iret
or
lods
jge
or
add
sbb
insl
mov
decl
mov
adc
cli
insb
aas
int
into
cmp
cli
xchg
sbb
call
shll
push
flds
pop
mov
out
scas
mov
adc
inc
or
into
addr16
mov
pop
push
popl
push
icebp
ja
lcall
or
push
lret
cld
mov
je
in
in
cld
outsb
fs
negl
mov
insb
mov
xor
pop
stos
sbb
inc
fstps
ljmp
and
insl
rcrb
add
jmp
add
cmpb
test
fs
incl
mov
leave
mov
pop
loopne
mov
nop
imul
int3
xor
push
pop
and
jge
test
pop
xor
in
ljmp
shl
jg
push
insl
xor
lahf
lock
imull
mov
out
in
mov
cmp
aam
dec
int
mov
jecxz
js
push
dec
cmp
mov
xor
sahf
incl
insb
mov
faddl
jl
adc
sbb
pushl
out
stos
push
cli
cs
xor
and
pop
sbb
sub
xchg
ljmp
cld
add
inc
lret
push
or
add
push
jns
pop
rcll
imul
mov
xchg
adc
lcall
mov
push
fisubl
cltd
retw
jle
ljmp
xchg
mov
pop
imul
pop
xor
stos
cmpsb
push
cmp
mov
cs
pushl
lock
sub
and
mov
data16
push
sbb
add
cmpsb
adc
adc
jg
cmp
or
xor
aas
outsl
mov
pushf
fsub
pop
pushl
push
scas
andl
call
andb
jg
jg
mov
or
push
jo
inc
cltd
hlt
or
sbb
mov
sbb
rclb
loope
or
dec
sar
mov
xchg
mov
popa
pop
outsl
cmp
mov
push
call
jg
in
enter
add
push
push
je
sbbb
jae
or
inc
decl
outsb
test
mov
test
dec
push
push
lret
fdivl
jmp
add
shlb
or
ljmp
xchg
pop
mov
push
lcall
rol
jnp
sub
divb
dec
movsb
test
daa
test
cli
ljmp
cmp
jle
push
imul
pop
mov
aas
decl
incb
sbb
xchg
sarb
mov
das
or
arpl
mov
and
adcb
adc
or
push
enter
lcall
fdivrs
mov
es
out
fdivr
jo
xor
std
scas
mov
decl
push
sbb
mov
cmp
mov
lret
mov
insl
cmp
ljmp
mov
sub
in
out
dec
xor
mov
aam
incl
fildll
mov
stos
cmc
jo
mov
ljmp
jge
xor
stos
int
mov
scas
and
and
in
mov
outsb
adc
incl
inc
and
orb
lods
mov
push
sbb
jmp
adc
mov
push
in
pop
jns
inc
movsb
sbbl
fs
jg
imul
rcrl
scas
hlt
or
mov
sbb
outsb
cmpsl
jo
push
fnstsw
pushl
test
xorl
in
xor
mov
js
xor
jl
mov
pushl
or
mov
fstpt
adc
mov
and
push
jo
pop
fisubl
mov
jno
push
dec
xlat
stos
pusha
cmp
call
mov
icebp
cmc
stc
mov
movsl
in
add
test
lds
incl
icebp
cmp
inc
testl
mov
out
inc
nop
repz
lcall
push
out
in
add
add
gs
xor
jmp
ja
cmp
cmc
inc
sti
cltd
idivl
movsb
jns
and
aaa
cmpsl
lcall
lahf
cli
push
cmp
loop
push
pushl
test
add
jno
dec
outsb
xor
fsubrl
ret
xor
call
repz
cld
popa
inc
les
xor
addb
fwait
or
mov
les
cld
jg
imul
pusha
adc
ret
addl
int
into
shrl
into
mov
sbb
call
mov
mov
cmpsb
or
lret
cmp
decl
cmp
and
cmpsb
popa
cmp
decl
sub
mov
call
incl
je
neg
push
jecxz
cltd
movsl
pop
mov
xor
jae
or
lret
test
lcall
pushl
mov
jbe
frstor
push
pusha
dec
out
jge
shlb
outsb
lcall
mov
into
fs
insl
dec
and
sbb
sub
inc
push
mov
stc
popl
mov
or
call
scas
lret
xor
scas
xchg
fsts
clc
sbb
shlb
xchg
sub
mov
lock
cmc
das
push
pusha
mov
jno
test
movsl
dec
jnp
sbb
inc
lcall
daa
arpl
addr16
lds
movsl
rolb
xchg
imul
jg
push
push
cmp
lcall
loopne
imul
lcall
fstps
adc
icebp
xor
or
add
push
cld
jmp
pop
and
add
xor
and
daa
xor
lcall
scas
add
mov
imul
fistpl
aad
adc
pop
dec
sbb
sbb
inc
rolb
je
xacquire
push
mov
bound
xchg
adc
fbld
ret
jmp
fsubrl
clc
pop
popa
xchg
inc
cli
lcall
pushl
mov
xchg
loopne
sbb
fldl
cmp
dec
xchg
mov
clc
call
push
inc
rclb
aad
add
ljmp
cmc
gs
int
mov
hlt
cs
pop
xchg
mov
mov
es
mov
popa
in
push
es
subl
aas
pop
cmp
inc
scas
jo
and
push
testb
notb
mov
or
add
cwtl
mov
sbb
cmp
testl
pop
cld
push
stc
enter
in
dec
jmp
jg
pop
loop
pusha
dec
lret
int3
or
je
and
sbb
push
out
mov
or
sbb
notb
jb
cmpsl
ljmp
cmp
jmp
sbb
call
pop
or
out
jne
cmc
mov
cmc
push
sub
sub
push
lods
or
mov
sbb
jmp
mov
int3
cmp
jo
pop
dec
mov
dec
leave
sub
and
loopne
dec
mov
jl
aam
jge
mov
xchg
adc
sbb
into
sahf
mov
inc
inc
decl
stos
push
sub
inc
nop
xchg
push
mov
xchg
jg
imul
jmp
add
jle
or
je
mov
adc
lock
mov
push
std
xchg
mov
fisubs
shlb
jge
push
cmpsl
mov
movsl
pop
mov
jp
ljmp
jg
push
loopne
adc
and
pop
nop
mov
psllw
incl
add
adc
hlt
mov
mov
or
sti
pop
shrl
jo
out
xchg
xchg
dec
bound
in
sbb
sbb
stos
daa
ret
push
sahf
adc
mov
je
ds
ret
pop
ss
mov
outsb
push
loope
push
rcr
fcmovbe
fucomi
inc
jg
decl
jno
add
add
movb
fwait
adc
cld
mov
cwtl
inc
inc
push
or
stc
jecxz
mov
sbb
mov
mov
adc
jmp
cld
pop
jl
dec
mov
adc
pushf
dec
shlb
call
pop
dec
pop
adc
call
jge
sbb
daa
sbb
push
xor
lock
hlt
incl
jl
xchg
dec
mov
fisttpl
shlb
je
jg
mov
mov
sbb
push
mov
shll
inc
sahf
ljmp
std
pushf
inc
sti
insb
mov
jae
xchg
sahf
inc
xor
mov
adc
stos
pop
incl
lea
sar
rcrl
cwtl
adc
lret
ss
cld
outsl
push
mov
pushl
inc
mull
repz
xor
pusha
lods
pop
xchg
xchg
cmp
ds
push
shl
pop
pop
incl
push
adc
fucomp
mov
fwait
roll
or
ror
out
push
aas
ljmp
xchg
pop
jmp
jge
mov
das
aas
cld
mov
mov
mov
inc
fwait
pop
mov
enter
sub
js
movzwl
pushl
push
mov
cmp
xchg
inc
cld
xchg
pop
cmp
outsl
rcrb
dec
add
test
js
dec
jge
sub
lcall
std
lcall
mov
pop
insb
push
and
sbb
icebp
fs
mov
cmp
daa
jmp
jne
lock
sahf
mov
cwtl
pop
xor
cmp
lret
fwait
gs
mov
mov
ja
ss
aam
pop
xchg
cwtl
pop
jle
incl
jmp
mov
pop
pop
sbb
cs
pop
test
enter
nop
xchg
insb
jle
add
aaa
cli
rclb
mov
xchg
ljmp
adc
push
hlt
xchg
and
inc
mov
es
pop
xor
lods
into
push
push
les
call
mov
mov
mov
imul
add
sbb
mov
decl
sbb
sub
mov
xor
fiadds
push
dec
int
push
cmpsb
adc
lcall
cmp
jl
sahf
ja
fstpl
pop
sub
cmp
ret
out
cli
incl
dec
popa
pop
mov
xor
xlat
xchg
sti
jge
pop
jb
ret
fdivr
movsl
decl
jnp
fisubs
movsl
inc
cld
mov
jecxz
test
and
rclb
add
daa
ljmp
sub
incl
icebp
inc
jmp
push
ss
pop
fs
sub
cltd
xor
lock
call
pop
ret
aam
icebp
sahf
cmpsb
dec
push
stos
xlat
jg
jno
jle
xor
xchg
cli
jmp
mov
and
xchg
jae
stos
xchg
outsb
hlt
or
cmpsb
mov
jne
mov
push
add
jl
xchg
or
jp
ja
cltd
mov
addr16
cwtl
decl
shr
inc
dec
ds
add
icebp
imul
mov
push
push
test
mov
jnp
aaa
cli
ljmp
cltd
aam
dec
push
adc
mov
inc
cmp
call
inc
cmpsl
ret
stos
sbb
ja
xchg
out
xchg
lahf
jmp
je
pop
shrl
loope
incl
sub
in
repz
data16
popf
or
inc
fcmovbe
loopne
and
in
sub
or
test
repnz
xchg
lea
add
dec
andb
or
add
jg
jmp
insl
lock
mov
mov
mov
push
cmp
or
sub
sahf
cmc
add
fwait
dec
cmpsl
adc
pushl
or
ret
dec
add
div
xlat
incl
inc
sbb
mov
push
andl
lcall
mov
outsb
mov
outsl
std
cld
mov
repz
mov
sbb
xchg
sti
sbbl
sbb
arpl
out
imul
cltd
les
in
dec
xchg
lcall
jl
movsb
dec
xchg
sub
sbb
and
cli
scas
xchg
decb
lods
movsb
inc
mov
jno
mov
mov
js
sub
and
out
sub
lea
push
sarl
and
es
test
test
int3
mov
push
adc
cmp
inc
fwait
adc
mov
incl
rolb
sub
xchg
mov
addr16
adc
movb
jnp
movsb
xor
xchg
pushf
cmp
pop
inc
es
push
inc
incl
ja
dec
add
add
fimull
xor
and
jmp
sbb
cmp
ret
mov
int3
bound
test
popl
pushl
push
stc
ja
inc
and
clc
mull
popf
outsb
mov
in
js
xor
test
lcall
decl
dec
sbb
xchg
cmp
ret
ljmp
adc
dec
pop
jg
pushl
or
sub
pusha
xchg
jmp
cmp
mov
ljmp
nop
idivb
ret
sub
xor
adcb
fsubp
ds
in
fs
imul
clc
call
call
testb
adc
inc
push
pop
pop
push
or
int
mov
inc
and
and
jmp
xor
inc
pop
das
divb
xor
mov
xchg
cmp
in
adc
sbb
push
icebp
inc
xchg
jmp
or
andl
push
js
jmp
call
pop
clc
jp
mov
lods
add
add
dec
cltd
loopne
bound
mov
pop
mov
cwtl
sbb
hlt
mov
imul
call
ljmp
aam
cmc
sub
popa
or
sbbb
mov
in
in
stc
rcrl
pushl
push
xor
arpl
or
adc
push
xchg
mov
stos
jp
lret
movsb
mov
xor
mov
mov
push
in
call
sahf
or
cld
mov
sbb
pop
test
scas
pop
inc
jmp
mov
sahf
mov
incl
sti
and
mov
bound
fldt
inc
xchg
aam
inc
cld
sbb
cmc
int3
pop
call
call
jbe,pn
addl
jne
sub
cmpsl
cmp
loope
pop
int3
or
hlt
call
and
lock
pop
test
mov
aaa
jmp
adc
cmpsb
xchg
sbb
dec
addb
pop
inc
adc
push
add
js
das
cld
mov
ds
cmc
mov
scas
mov
mov
loope
stc
pushf
daa
push
das
dec
rcrl
pushl
fs
mov
mulb
adc
mov
push
sti
imul
jmp
jmp
repz
test
movsl
loope
jp
fsts
dec
lret
aad
out
mov
in
vmovaps
pop
cli
outsl
hlt
jmp
jnp
lret
sub
daa
mov
dec
int3
sbb
mov
ret
push
jmp
mov
loope
and
outsb
push
enter
jg
jo
push
fcmovnbe
dec
mov
add
or
cltd
mov
pop
xchg
das
fdiv
push
mov
cmp
lea
arpl
pop
mov
loop
cmp
or
lcall
ja
mov
push
inc
in
jge
jl
push
fidivrs
rorl
pushl
loopne
xchg
test
sub
push
sbb
ret
repnz
or
decl
scas
popa
clc
aas
mov
cmpb
les
sub
dec
xor
incl
dec
shll
fldcw
cs
push
cmp
ljmp
sub
out
rcrl
add
stos
enter
mov
daa
lds
xor
fnstsw
inc
outsl
cmpb
test
push
xchg
lds
rorb
imul
movsl
cli
cmp
cltd
xor
lods
xor
and
cld
jg
mov
jp
sbbb
sti
inc
or
ret
push
rorb
or
xchg
pop
loop
ljmp
pop
mov
push
repz
out
es
hlt
inc
pop
cmpsl
inc
call
cmpsl
jl
in
ljmp
cmp
imul
outsl
cmc
mov
xor
repnz
and
add
lcall
jg
pop
xchg
dec
inc
int
daa
idiv
daa
ds
pushf
rcrl
lcall
jns
lret
sbb
pop
pop
cmc
icebp
mov
jmp
add
cmp
stc
int3
daa
jmp
das
pop
loopne
mov
aam
fidivs
adc
scas
push
push
icebp
ljmp
push
decl
and
ja
popf
fcoms
dec
inc
jmp
push
insb
add
dec
or
mov
shr
cmp
lret
dec
add
dec
push
push
incl
mov
mov
loopne
cs
jns
and
jg
sbb
clc
rorb
xorl
add
inc
int3
nop
sbb
xchg
decb
xchg
push
lcall
cmp
scas
sbb
ja
push
inc
fsubrl
test
lcall
cli
jp
sarb
movsb
sbb
mov
mov
incl
fs
les
jl
inc
ficoml
xor
rorb
or
mov
ret
mov
and
xor
xor
enter
out
or
push
bound
cld
pushl
mov
mov
jmp
xchg
out
mov
mov
cmp
pop
cli
push
jne
xor
inc
rclb
iret
inc
cli
dec
lods
hlt
xor
push
push
sbb
jmp
mov
call
push
sbbl
mov
jnp
ret
xlat
pop
jp
mov
dec
ljmp
leave
adc
xchg
xchg
aaa
lahf
xchg
shlb
hlt
div
cmp
stos
lea
mov
ljmp
hlt
les
mov
stos
lret
pop
sti
popf
and
jecxz
call
cmpb
mov
jl
sub
sub
cwtl
enter
aaa
mov
mull
in
and
repz
and
lret
adc
pusha
adc
push
jmp
mov
add
sti
mov
or
ud0
jmp
loopne
pop
out
fisubrl
jo
lods
adc
iret
push
lret
int3
mov
test
jmp
fwait
pop
adc
lods
repnz
xchg
pop
cmp
movsl
lret
sub
inc
ljmp
push
insb
cmp
mov
sub
xor
iret
das
jo
out
movsl
and
lcall
jle
push
xchg
push
in
outsb
fmull
xchg
inc
daa
and
pop
clc
or
push
aaa
pop
clc
jg
out
not
mov
add
int
sbb
pop
pushf
pop
rclb
mov
inc
xor
enter
push
cld
inc
je
movsl
rcll
enter
pop
push
ljmp
or
inc
jae
repz
xchg
gs
mov
andl
ljmp
xchg
je
push
test
dec
aaa
push
popa
adc
mov
mov
lock
pop
ret
jg
nop
mov
cltd
xchg
and
cld
lcall
and
test
js
mov
pusha
xchg
mov
jns
ret
aaa
decb
jp
pushf
xchg
cld
lea
push
pop
loop
jmp
adc
je
and
sbb
pop
pushl
pusha
sub
jno
cmp
jo
pop
popf
mov
fistpll
jl
enter
icebp
inc
loope
test
aam
call
jb
jae
cmpsl
cmp
call
out
mov
mov
dec
aaa
dec
std
push
jnp
cs
fcmovu
mov
pop
push
pop
pop
loop
ljmp
pushf
imul
jl
push
leave
outsl
mov
lcall
push
push
jmp
and
subb
faddl
inc
mov
movsl
inc
aaa
adc
fsincos
test
pushf
jno
in
add
test
aad
add
out
adc
fsub
jb
popf
test
or
cld
das
lods
push
push
movsb
stos
sbb
jo
xor
sbb
sbb
cmc
jmp
dec
jge
rcr
lds
add
adc
idivl
cmc
sub
mov
mov
fstps
push
pop
nop
lcall
push
mov
mov
mov
cmp
xor
and
pop
push
jp
jne
call
pop
cmpsl
push
jne
mov
outsb
gs
hlt
repnz
mov
add
adc
arpl
sub
incl
sbb
pusha
pop
mov
and
inc
xchg
xchg
call
mov
imul
fdivl
and
jg
inc
push
clc
lods
jae
cmp
int3
hlt
lods
decl
mov
xchg
aam
mov
jnp
and
in
pop
jns
arpl
cmpb
mov
repnz
mov
mov
or
mov
rcrb
aad
fbstp
ljmp
sub
jp
in
dec
andb
repnz
jecxz
xchg
mov
pop
in
pop
sbb
mov
test
std
decl
or
fsubrl
mov
sti
sbb
jne
fs
outsl
ret
lcall
ljmp
data16
aam
test
lcall
sbb
xor
sti
mov
xchg
enter
xor
lds
imul
stos
cmp
cmc
dec
cld
call
out
sbb
xor
data16
cmc
out
cli
cmp
dec
pop
decl
dec
lret
cmp
ljmp
enter
xchg
out
mov
in
fmul
ljmp
mov
pop
lcall
pop
inc
sar
dec
mov
cld
adc
lret
adc
movsl
clc
mov
xor
cmp
cs
iret
mov
cs
outsl
pop
incb
jnp
addr16
outsb
or
cld
insl
dec
add
ljmp
fbld
insb
lock
xlat
cmpsb
fs
pusha
movsl
pop
xchg
fnstsw
adc
lods
mov
xchg
inc
ror
pop
sarl
jno
test
js
and
loop
add
jg
gs
dec
or
mov
mov
ret
xor
xor
push
mov
mov
fwait
add
xor
mov
cmpl
movsb
push
pop
test
xchg
fmuls
cltd
pop
out
and
mov
ja
and
mov
sbb
and
sbb
das
sbb
jle
hlt
movsl
push
pop
inc
nop
daa
insb
pop
movsb
push
mov
lds
adc
dec
popf
fisubrl
pushl
push
dec
add
ljmp
push
in
push
jb
rol
push
repz
xor
ljmp
cmpsl
fbld
adc
stos
push
or
jbe
pop
pop
out
ret
pop
in
incl
testb
aaa
gs
and
xor
bswap
call
pop
adc
mov
scas
fwait
or
lret
cmp
jg
add
push
mov
popf
jnp
sahf
mov
in
adcb
xor
or
addb
mov
mov
scas
inc
icebp
jp
pop
push
mov
pop
mov
push
clc
jg
pop
les
adc
popf
sbbb
jle
mov
out
into
adcb
inc
dec
jp
inc
shlb
arpl
adc
inc
mov
lret
mov
pop
rcll
sbb
mov
sbbb
mov
mov
xchg
mul
push
incl
mov
xchg
mov
insb
enter
fsubrs
repnz
and
pop
pushl
fscale
dec
inc
in
fwait
xchg
pop
loopne
and
push
push
jmp
sbb
jmp
pop
push
roll
mov
data16
mov
arpl
adc
mov
std
decl
inc
sbb
aad
cmp
inc
sbb
ret
fbstp
push
xor
imul
jmp
or
mov
mov
mov
or
sbb
xlat
call
push
data16
mov
scas
pushf
dec
adc
push
call
test
movsl
jmp
stos
mov
mov
add
out
add
mov
lods
dec
jmp
pusha
add
dec
dec
ljmp
pop
or
mov
add
xchg
int
inc
inc
ljmp
jp
and
pusha
je
cmp
ret
cmp
pop
add
stos
or
add
aaa
dec
call
imulb
adcl
out
mov
in
jmp
jnp
and
imul
dec
inc
sbb
mov
call
decl
xor
cmp
mov
cs
insb
xor
movsb
lahf
cld
call
popa
dec
rcr
addr16
and
dec
and
out
rcll
push
push
push
jns
pop
xchg
clc
ret
loop
dec
pop
pop
std
pop
mov
push
adc
mov
mov
sbb
pop
and
mov
mov
jbe
arpl
mov
aaa
push
push
jp
cwtl
loope
xor
hlt
test
outsb
cmc
call
out
jo
pop
enter
test
mov
nop
insb
sub
aam
dec
pop
or
add
inc
sbb
aaa
pop
repz
in
dec
push
movl
sbb
mov
xor
inc
push
jmp
cmp
orb
cmp
lcall
jnp
or
call
decl
jae
aam
push
add
pop
imul
call
fnsave
loopne
iret
sti
fisttpl
jmp
bound
xchg
cld
es
sub
rolb
sbbl
gs
jo
std
jle
ret
sub
jp
mov
cs
jne
cmc
adc
xor
fstps
sbb
pop
gs
pop
movsb
mov
lahf
sahf
adcb
adc
rorl
inc
ljmp
mov
mov
add
and
adc
enter
out
mov
shrb
pop
lret
pushf
jg
cwtl
or
mov
push
in
sbb
lcall
gs
sub
or
cs
vcvtpd2dqy
pop
loop
dec
jne
jmp
mov
mov
je
lock
sub
cld
pop
mov
dec
pop
mov
outsl
adc
insl
push
and
addr16
push
mov
sbb
cmpsl
shll
adc
mov
pop
enter
mov
in
push
push
pop
and
imul
loop
lods
and
push
pusha
inc
cmp
adc
outsb
jmp
mov
fstpl
outsl
out
push
xchg
lds
jmp
and
xor
popf
ljmp
xor
aad
adc
aam
xor
ret
adc
add
adc
push
orw
push
jge
cmp
stos
mov
faddp
mov
ret
stos
or
add
sbb
into
jae
in
insb
divb
stc
rcll
mov
mov
xlat
xchg
xor
cmpsb
push
decl
decl
xor
cld
jo
push
mov
cs
mov
mov
mov
repnz
fidivl
jg
or
push
xlat
lret
mov
dec
add
cmpsb
popa
mov
jne
fmuls
incl
nop
pop
push
sar
lea
add
jecxz
stos
decl
fwait
loop
cltd
xor
push
jg
call
out
fidivrs
inc
aaa
pop
out
dec
clc
cmp
mov
pop
jp
jns
in
neg
pushf
out
pop
sahf
rorw
iret
mov
icebp
adc
push
jb
bound
pushf
push
lock
adc
add
pushf
jp
mov
pop
mov
inc
gs
int
push
mov
repz
ljmp
inc
sub
push
lret
call
out
sbb
push
mov
ret
pop
ret
mov
or
push
jg
dec
mov
sbb
in
sbb
jns
mov
cli
faddl
jno
dec
jae
pushl
cli
pop
jno
jp
push
pop
add
je
and
insl
mov
shll
push
incl
cltd
das
es
cmp
ret
call
mov
test
stc
lock
mov
and
jne
or
sub
enter
mov
mov
cmp
mov
dec
mov
jb
push
xchg
imul
jg
pusha
ret
mov
ficoms
push
mov
mov
cld
sub
sub
std
mov
sub
lods
mov
add
aam
xlat
daa
adc
sbb
mov
cli
sbb
mov
test
push
adc
or
fstpt
rcrb
hlt
lretw
xor
jbe
push
orb
sub
adcl
les
or
stos
pop
ret
push
test
call
loopne
movsb
add
in
outsb
lea
adc
ljmp
popa
inc
std
jae
cmpsl
xchg
in
cmc
cmp
sti
mov
mov
xor
push
cmp
cmp
pop
loopne
dec
pop
sub
int3
out
cwtl
lock
fcompl
and
xchg
mov
lods
daa
sbb
cs
ljmp
fwait
cmpb
inc
mov
aaa
andl
sub
fisubrs
in
test
sub
jmp
sub
data16
mov
jg
sub
mov
pop
xchg
xor
sub
nop
add
cwtl
stos
mov
adc
fildl
je
pushf
addb
lcall
dec
adc
mov
jns
dec
and
es
loope
js
inc
cwtl
mov
push
int3
inc
dec
pop
xchg
es
mov
pushl
push
mov
mov
lds
cmp
push
outsl
jl
cs
lcall
jge
pop
or
add
jbe
cs
call
dec
push
leave
mull
cwtl
subl
pop
fcomps
push
loope
xor
pusha
lret
sti
out
aaa
outsb
incl
mov
test
icebp
loopne
call
sbb
call
inc
push
sti
cmp
gs
repz
sbb
jmp
ljmp
push
ret
mov
pop
inc
mov
jno
pop
xchg
rorl
aas
sub
jge
shrl
out
xchg
decl
dec
call
mov
clc
popa
outsb
cmp
jb
ror
lret
sahf
jns
inc
mov
jb
xchg
ljmp
sbb
or
sbb
ret
mov
pop
and
dec
data16
adc
ljmp
inc
ret
loope
jmp
jle
jg
in
scas
push
cmc
lods
inc
std
aaa
push
mov
cmpsb
int3
mov
fadd
and
divb
in
data16
test
inc
cwtl
add
decl
push
aad
or
lea
jl
sbb
test
mov
inc
pop
loop
pop
imul
fldt
cmpsb
sub
pop
or
lcall
ret
dec
xor
push
inc
out
mov
imul
and
sbb
pop
lcall
movb
lret
cli
xor
js
data16
call
sbb
in
adcl
pop
repnz
xchg
inc
xchg
jmp
xlat
pushf
fidivrl
or
dec
clc
pop
jecxz
lcall
clc
movsl
rorl
mov
dec
mov
rclb
lahf
lods
stos
ljmp
addr16
lret
stos
push
xor
aam
cmpsb
lcall
cmp
test
shrb
stc
fstps
mov
adc
adc
mov
fwait
out
cmpsl
pushf
xchg
xchg
idiv
mov
bound
ja
mov
xor
mov
push
jnp
fwait
shl
cmp
into
stc
dec
push
mov
push
mov
xor
in
sahf
jge,pn
lds
idiv
cmp
dec
in
adc
xchg
xchg
or
es
sub
shll
mov
repz
pusha
jb
aas
icebp
jne
jnp
push
sub
jg
decl
int3
xor
jecxz
fs
cmp
int
outsb
les
incl
loop
imul
pop
repnz
jle
adc
insl
hlt
mov
inc
arpl
cmp
aaa
mov
mov
cmp
sti
call
aam
push
adc
or
imul
cltd
aaa
lahf
sti
jne
jg
xor
and
lods
call
xchg
add
jo
mov
mov
cmp
decl
cli
jae
lods
loop
adc
ljmp
adc
push
pop
cli
pop
pop
mov
ljmp
dec
pop
mov
out
mov
test
cld
mov
xlat
cmp
fbld
sar
ljmp
ret
ror
or
xor
mov
fnstsw
mov
xchg
dec
int3
cli
jge
mov
scas
dec
imulb
out
mov
sbb
push
sahf
push
jno
scas
movsl
pop
sbb
ds
lea
push
push
fwait
xlat
aas
xor
cmp
in
inc
pop
arpl
les
shlb
sbb
fdivrp
std
aam
loope
lcall
mov
xchg
xor
scas
pop
sub
add
movsl
mov
jno
xor
xchg
stos
jl
mov
pop
mov
mov
pop
out
adc
stos
js
jl
add
add
mov
incl
xor
cwtl
mov
mov
mov
mov
decl
xor
icebp
mov
popf
jne
fistps
icebp
jle
int3
mov
clc
jecxz
adc
inc
add
push
dec
pop
stc
addr16
mov
out
test
inc
fucomip
in
cmp
daa
xor
inc
cwtl
icebp
inc
mov
fs
mov
cmp
mov
ficoml
or
dec
cmp
pop
call
and
add
fsubrp
ja
fcoml
cmp
outsl
mov
out
arpl
push
cmpb
in
repz
and
sarb
lods
decb
or
xchg
adc
inc
mov
mov
push
lods
cwtl
sbb
add
adc
sub
fisubl
push
push
mov
pushf
and
call
push
leave
cmpsb
gs
jecxz
cmp
lahf
mov
cli
pop
adc
movsl
stos
arpl
lret
js
call
pushl
cmpsb
jg
mulb
dec
mov
out
mov
imul
cld
jp
dec
xor
call
xchg
mov
iret
enter
aad
sti
fsub
loope
dec
aas
shll
data16
inc
push
hlt
fcmovnbe
call
xor
adc
mov
lock
ja
ljmp
out
cmp
cmc
popf
xchg
mov
popf
xor
clc
pusha
sub
ret
decl
mov
mov
jo
call
pop
pop
cmp
pop
movsl
cmp
je
sbb
xor
ja
jb
xor
jp
cmp
xor
sarl
or
lcall
fdivs
nop
loope
mov
jno
std
jg
popa
mov
cmp
sub
jo
mov
andl
add
pop
call
fcoml
jno
insl
fs
mov
mov
cmpsb
cmp
add
lock
pop
shrl
mov
gs
pop
mov
mov
push
pop
cmpsl
cmp
mov
sub
jbe
sti
ret
sub
jbe
decl
push
movsl
xor
std
pop
dec
fnstenv
es
cltd
xchg
pushl
aam
mov
lock
pushl
xchg
popa
enter
mov
cli
daa
fcmovnu
pushf
dec
daa
int
mov
pop
push
and
test
adc
adc
test
test
push
test
decl
sti
pop
call
out
int3
or
pushf
and
test
cmp
cmp
fucomip
mov
adc
scas
or
lahf
pop
sub
dec
loop
and
and
mov
sti
repz
adc
xor
call
call
xor
mov
negl
mov
mov
jg
adc
push
and
jg
and
sahf
jp
int3
jmp
xor
lock
loop
push
cld
jne
mov
lods
dec
adc
and
rclb
inc
adc
sbb
call
arpl
frstor
sti
lods
cmpsb
push
mov
jae
pushf
lcall
xchg
push
scas
inc
incl
data16
cmp
ds
lcall
std
push
add
xchg
mov
sub
inc
mov
xchg
mov
sub
fdivr
pmaxub
iret
mov
fninit
xor
fstpt
xchg
outsb
cli
test
insl
insl
gs
cli
push
xchg
mov
outsl
jle
and
sub
int3
gs
mov
cmc
push
add
mov
sti
jg
pushl
lret
outsb
cmp
push
fxch
adc
xchg
push
mov
fdivrl
out
xor
jnp
pop
addl
out
ds
arpl
xchg
cltd
ljmp
shll
loopne
jg
ljmp
stos
out
xor
dec
jo
push
in
int3
icebp
adc
call
incl
aad
sub
xor
test
adc
jae
loope
push
xchg
mov
test
jmp
inc
fbstp
lret
add
sbb
jp
loop
fdiv
scas
add
call
out
push
adc
or
and
push
xchg
mov
cmp
fucomip
jge
mov
xchg
pop
inc
mov
aas
pop
aam
inc
adc
jle
cmc
out
lcall
std
inc
test
loopne
and
fdivrp
add
and
mov
adc
mov
pop
push
adc
or
or
iret
lds
hlt
xchg
jl
fnstsw
in
fistps
adcl
push
mov
lret
cld
sub
sbb
inc
sub
push
fdivrp
jmp
filds
cld
jmp
in
rol
xor
cmp
push
fimuls
xchg
dec
lahf
loopne
ljmp
rcll
inc
shlb
adc
fwait
dec
pop
push
incl
xchg
adc
cmp
inc
test
xor
in
sub
push
sarb
pop
pushl
loopne
pop
and
clc
mov
fisubl
dec
mov
mov
les
xor
mov
push
or
sahf
outsb
das
xor
movsb
loop
push
dec
xor
sub
or
push
and
mov
lret
jmp
push
into
mov
jp
shrb
fwait
incl
dec
mov
mov
add
shld
inc
loopne
mov
loopne
lods
and
push
faddl
popa
sbb
movsb
lcall
push
push
pusha
sbb
pop
push
ret
xchg
mov
loop
push
pop
or
data16
lcall
test
mov
mov
jb
push
dec
leave
sub
push
imul
push
lcall
loopne
dec
inc
jae
jae
in
adc
jb
mul
adc
ljmp
pop
popf
add
test
insl
pop
addr16
icebp
or
push
dec
dec
hlt
jmp
andl
sub
mov
in
rcrl
psubsb
ljmp
mov
sbb
dec
mov
jmp
test
jecxz
pop
jp
inc
dec
jge
add
sub
cmp
flds
mov
jg
scas
jecxz
and
decl
inc
sahf
loop
ja
jns
xlat
xlat
mov
or
gs
adc
outsb
insl
out
inc
out
popf
dec
push
jg
movsb
mov
test
cmpsl
rorl
ds
inc
cld
int3
enter
jle
fs
loop
mov
push
mov
pushf
or
sub
jg
je
repz
cmp
popa
push
or
ss
out
js
aas
clc
fucomip
mov
fidivs
je
int3
push
push
shrb
mov
decl
push
sbb
cltd
cwtl
sub
pusha
xchg
repz
test
mov
lcall
out
adc
jne
or
inc
or
mov
in
push
jmp
in
sub
pop
movsl
mov
sbb
aaa
dec
int
jb
pop
cmpsl
loopne
jg
ljmp
pop
xlat
add
insb
xchg
mov
dec
not
xchg
xor
mov
repz
xor
aam
pop
decb
mov
fbld
dec
iret
repz
add
pushl
inc
push
inc
into
movsb
bound
push
notb
pop
rcrl
inc
test
push
xlat
popf
dec
inc
jns
mov
ds
movsb
xchg
rcr
loopne
jns
ljmp
hlt
adc
xchg
ret
add
cmp
jae
and
add
clc
and
mov
cmpsb
in
push
push
pop
cli
decl
fadds
mov
call
les
imul
cld
jg
jp
js
or
pop
das
mov
mov
loope
rolb
cli
rep
lcall
dec
add
and
xor
xchg
mov
mov
xor
ror
mov
jmp
mov
leave
call
xor
lea
call
push
ljmp
sub
into
stos
sub
xor
push
enter
adc
or
cmp
les
call
jb
push
push
lcall
dec
add
adc
in
call
ja
or
sub
incl
sub
pop
in
mov
addr16
sub
sub
xchg
jp
lods
cmpsb
xor
push
mov
mov
xor
mov
mov
jmp
lods
in
cmpsl
mov
test
fcmove
lds
repnz
lcall
call
sbb
adcb
xchg
and
inc
es
test
jg
jmp
adc
dec
jae
imul
shll
in
int
stos
cltd
and
fs
stc
rorb
xchg
inc
popa
in
mov
xchg
dec
pushl
and
iret
dec
js
aas
scas
mov
xchg
movsb
add
std
mov
incl
xchg
loope
sub
movsb
mov
lret
int
pop
jg
pop
pop
ret
jo
xchg
pop
sarl
cmpsl
inc
and
dec
xorl
mov
rcrb
jae
scas
dec
dec
or
xor
imul
cmp
outsl
cld
push
cmp
pop
in
sub
sbb
or
std
pop
int3
ljmp
mov
add
cmpsl
mov
cmp
test
repz
imul
loop
popf
hlt
in
gs
imul
das
jg
mov
imul
sbbl
rolb
lcall
lock
lea
push
sub
mov
cmp
jns
lret
fcmovnu
loop
ljmp
push
xchg
sbb
pop
sbb
aad
xchg
testb
dec
lret
push
cmc
cmc
pushl
cli
je
andl
cli
jns
pop
xor
ja
xchg
xor
enter
mov
out
mov
je
sbb
sub
fucomip
ljmp
enter
sub
cwtl
aam
xor
adc
je
push
xchg
adc
jo
jle
movsl
std
movsl
stos
and
push
mov
push
daa
movsl
add
mov
add
cmc
shll
xor
call
or
mov
push
push
pop
ja
xchg
sbb
std
lcall
data16
dec
xor
inc
insl
and
xchg
or
fdivrl
decl
jbe
mov
outsb
mov
icebp
xchg
pushf
outsl
or
rorb
cld
pop
movsl
stc
mov
ljmp
add
jl
mov
stos
jne
xchg
add
es
lcall
jmp
scas
ss
jge
and
jmp
add
push
xchg
pop
call
or
mov
das
out
je
test
sbb
aaa
cli
jg
xchg
pushf
and
aaa
mov
dec
jmp
test
incl
inc
jmp
mov
dec
ret
pop
mov
ljmp
outsb
dec
test
lret
sub
push
pushl
dec
and
mov
mov
inc
jo
mov
xchg
mov
adc
inc
xchg
call
fisttpll
add
dec
xlat
or
fiaddl
ret
ss
add
jno
loopne
inc
js
mov
mov
mov
pop
cmpl
icebp
mov
jl
sub
jl
or
loop
call
dec
outsl
mov
jmp
ret
test
insl
mov
mov
int
jecxz
dec
cmp
cmp
fcomps
dec
icebp
cmp
mov
imul
dec
mov
push
mov
ja
pop
call
or
out
inc
lahf
cmp
sbb
sub
incl
lcall
lahf
adc
xor
ds
cmp
inc
call
jmp
cmpsb
mov
cmp
pushf
xchg
jae
jo
js
cmc
xchg
jg
lds
xor
pushl
dec
add
fistpll
rcll
repz
dec
push
jb
call
cli
mov
jge
push
insb
fisubl
enter
inc
mov
decl
cld
dec
insb
and
cmp
jnp
lods
inc
aam
jo
mov
lahf
mov
lret
rorb
test
mov
movl
sar
cmp
aas
sbb
ja
cmp
fildll
mov
fwait
jge
insb
and
jp
adc
mov
mov
mov
ljmp
adc
jle
push
dec
das
sbb
rcll
lock
and
dec
sahf
dec
int
mov
ljmp
aas
lcall
add
fptan
adc
aam
adc
fists
lret
lock
lcall
sbb
lods
add
jmp
dec
cmp
mov
pushl
int
sub
loopne
bound
test
push
shll
dec
mov
sub
filds
aad
cmp
orl
adc
mov
decl
push
mov
fs
add
mov
cmp
outsl
ret
xchg
and
test
mov
jle
hlt
sahf
pushl
addb
pop
mov
jp
out
and
push
lret
jmp
sbb
mov
adc
cmc
cmp
hlt
jbe
lcall
add
push
ljmp
or
jmp
jne
add
jecxz
call
imul
jp
fcompl
fstpt
popa
cmc
loope
hlt
and
fadds
mov
cli
decb
lahf
in
pop
sub
ljmp
xchg
add
lahf
mov
pop
fiadds
call
clc
inc
mov
pop
fdivrs
push
rcrb
in
cmp
sbb
fcos
xor
into
mov
test
decl
jle
xchg
xor
insl
push
testl
mov
and
das
cmp
jbe
and
xchg
push
ja
mov
jmp
daa
movsb
mov
dec
je
mov
pop
push
dec
loope
repnz
pop
insb
pushl
jmp
pop
cmc
dec
test
jae
lock
cmp
adcb
cli
decl
fisubs
xor
dec
stos
add
insb
add
jo
aaa
add
adc
jg
xlat
add
int3
and
mov
cltd
outsb
lock
incl
imul
jnp
xchg
push
mov
push
ret
out
ret
std
out
jns
or
add
call
mov
push
pop
repz
mov
jo
test
fidivs
push
or
mov
outsl
repz
data16
mov
mov
adc
lret
jg
call
cli
or
andl
lret
fbstp
dec
aaa
sub
mov
outsl
jge
fildl
in
adc
push
test
das
loopne
fidivs
adc
and
mov
or
add
push
js
xlat
xor
sbb
ret
testl
inc
mov
pop
mov
xchg
popa
lock
pushl
push
xchg
adc
and
aad
mov
cmp
pop
les
cmpsl
sub
jno
ljmp
test
popa
mov
xor
cwtl
test
lea
push
xor
clc
mov
jge
repnz
inc
dec
movsl
jge
push
cmpsl
pop
inc
dec
aam
push
sub
das
hlt
mov
jg
jb
xchg
mov
pop
sarl
xchg
fsts
aad
decl
je
mov
mov
mov
dec
xchg
stos
jg
lret
es
pop
inc
imul
mov
addr16
push
inc
fucomi
or
fwait
mov
sub
lret
dec
and
pop
cmp
fdivrs
push
call
iret
push
incb
lock
daa
or
imul
jne
lret
addl
pushl
push
or
sub
sbb
xchg
sub
loop
imul
inc
push
clc
mov
mov
js
mov
ljmp
cwtl
jmp
pop
mov
lret
fs
dec
addl
cmp
inc
fs
sbbl
pop
mov
sub
sub
scas
push
push
lret
das
pushl
test
cmp
cmp
jae
cmp
sbb
sub
outsl
sti
cmpb
fmulp
jmp
sub
mov
scas
cmp
lcall
incl
cmp
adc
shlb
fnclex
mov
pop
je
imul
ficoml
jns
push
xchg
cmp
rsqrtps
mov
inc
adc
sarl
mov
add
mov
lods
push
mov
pop
adc
fadds
fmull
adc
jno
push
imul
push
jno
scas
cltd
out
push
cld
pop
push
scas
ja
ret
mov
adc
call
cli
decl
adc
xchg
and
rcr
enter
push
fmull
sub
cmp
mov
or
inc
out
pop
icebp
iret
mov
out
pop
mov
add
inc
jnp
addr16
or
cld
outsb
push
cmp
icebp
rorb
xchg
aad
loop
fnstsw
or
mov
jle
cwtl
jnp
cs
call
xor
fmuls
outsl
cld
ljmp
xor
in
and
repz
or
shl
jg
dec
test
jnp
mov
add
xor
sbb
out
sti
jno
cmc
push
xor
roll
add
inc
lret
push
mov
or
mov
xchg
push
push
pop
nop
pop
and
ds
repz
outsb
stc
adc
mov
push
xor
jg
jmp
and
repz
xor
gs
js
iret
test
ljmp
fdivrs
test
in
ljmp
sub
das
fstpl
pop
mov
ljmp
jl
pop
ficompl
or
ret
cmpsl
adc
mov
clc
ret
rcrb
sub
xor
adc
mov
fisubrl
movsl
add
pop
std
jmp
sbb
and
ret
fdivs
sbb
jmp
imul
fs
popa
rcrb
jbe
jl
movq
mov
or
add
pop
popf
or
mov
dec
or
and
jmp
loop
cmp
in
jb
inc
ljmp
inc
pop
in
jg
xor
pushf
mov
aas
jg
test
mov
test
jmp
jg
push
call
inc
mov
and
stc
mov
test
inc
cmp
rorl
rolb
test
pop
cmp
das
mov
cltd
fs
mov
xchg
decl
cmpsb
fiaddl
sub
adc
out
mov
and
lds
lcall
jl
push
push
out
leave
inc
daa
ja
fldcw
lret
adcb
outsl
cld
call
adc
ljmp
rorl
mov
mov
adc
pop
out
lcall
mov
inc
cmc
fwait
push
in
xorl
or
bound
xchg
fdivs
mov
push
icebp
xchg
call
ficomps
jnp
sub
pop
sbb
sbbb
ljmp
and
push
lret
dec
or
xchg
push
aam
pop
jge,pt
sub
mov
aaa
cli
fisttps
xchg
push
mov
test
jecxz
ret
ret
or
cmp
fucomi
xchg
pop
setl
call
jecxz
dec
mov
xor
stc
xor
mov
sub
push
pop
andb
mov
popa
into
dec
xchg
jl
pop
xor
push
pop
push
cmp
pop
push
shr
clc
xchg
mov
aam
adc
jecxz
inc
mov
xchg
add
jge
imul
adc
mov
call
adcl
mov
mov
outsl
mov
dec
arpl
mov
inc
or
test
cmp
dec
add
pop
into
inc
test
sub
mov
or
sub
inc
and
jl
push
subl
incl
loop
je
lods
push
js
inc
popa
jbe
loope
inc
jbe
js
add
jmp
fmul
cmpsl
mov
jecxz
mov
dec
arpl
pop
sbb
ljmp
xor
stos
sub
cmp
push
add
sti
mov
xor
jg
pushl
mov
pop
mov
pop
fists
int
shl
or
mov
fs
mov
mov
inc
repnz
dec
mov
int3
ret
mov
ja
mov
ret
out
mov
ud2
push
sbb
pushl
out
dec
pop
test
fsubrs
xor
mov
xchg
incl
shlb
test
out
out
mov
lret
xor
and
add
push
loope
pop
repz
mov
addr16
xchg
ja
decl
rorl
in
mov
add
in
or
sub
jmp
adc
test
or
incl
inc
filds
pop
setbe
stc
stc
cs
xchg
pop
cld
and
lcall
jge
jmp
push
popa
and
mov
mov
and
adc
cmc
pop
lcall
cmc
or
fs
cmp
cmc
xchg
fimull
push
call
das
mov
push
mul
push
xchg
xchg
pop
mov
out
xchg
push
jns
ds
ds
jae
mov
add
pop
lret
xchg
lock
and
adc
movsb
mov
in
shll
adc
call
inc
into
jb
in
xchg
sbb
or
call
cmc
mov
call
pop
pop
hlt
mov
nop
out
pop
lds
jmp
mov
fwait
push
sub
outsb
js
pushf
adc
adc
add
out
out
clc
scas
mov
dec
leave
push
lock
mov
and
sub
add
out
ljmp
sahf
adc
insl
inc
cmp
mov
mov
xchg
inc
jg
ret
jae
out
cmp
mov
xchg
ret
leave
jg
inc
dec
les
push
insb
mov
pop
testb
popl
jbe
ljmp
cltd
rcr
testl
gs
mov
sbb
dec
mov
std
jmp
add
cs
aad
and
mov
jbe
jecxz
mov
mov
add
out
dec
lods
or
ljmp
jmp
lods
pushf
mov
negl
lahf
push
mov
insl
inc
icebp
aaa
push
mov
jmp
adc
dec
xor
stc
daa
xchg
idiv
pushl
xor
pop
adc
push
fadd
subl
outsb
arpl
in
xor
xchg
adc
idiv
popf
mov
jp
iret
jne
and
movb
int
cmc
xchg
decb
lahf
mov
push
test
push
ljmp
fs
in
pop
xor
mov
sub
addl
xor
cmp
nop
imul
fcmovnu
xchg
xchg
mov
pop
sub
jne
xor
mov
jmp
pop
mov
mov
mov
cmp
xchg
decl
or
loopne
cmpsl
sub
movsl
add
inc
pop
aaa
int3
push
mov
xchg
jg
ds
ds
pop
sbb
xchg
mov
into
cmpsb
rcrb
pop
mov
push
incl
pop
bound
cs
xlat
addr16
mov
in
push
dec
into
cmc
lcall
gs
stos
sbb
pop
xor
jle
sti
mov
loope
and
jg
adc
movsb
gs
sbb
test
jo
mov
outsl
lock
pop
inc
fsubs
test
jns
hlt
mov
xchg
cmpsl
mov
inc
pushf
das
testb
dec
jb
loope
stos
and
fistpll
lcall
dec
cs
mov
ss
leave
cmc
fcmovnbe
loop
lret
mov
insb
shll
into
cmp
std
rcll
pop
sub
sar
decl
and
pop
cld
lds
xchg
xor
push
imul
dec
mov
lods
imul
jle
pop
call
icebp
orb
popa
ss
aad
pop
loopne
call
push
and
loopne
jns
or
cli
push
test
jle
fcmovbe
divl
xor
imul
ret
push
fcoms
in
popa
std
popf
in
cwtl
cmp
icebp
and
mov
lcall
cmpsb
mov
jo
push
call
pop
xor
test
ja
push
xchg
mov
cmc
call
and
je
pop
popa
adcb
test
mul
fildl
lock
fldl
or
adc
inc
cltd
push
outsl
test
pushl
pop
sub
cwtl
test
stc
mov
add
fs
lods
xchg
or
outsl
add
push
sbb
inc
imulb
mov
pop
std
jmp
ss
push
sub
sti
addb
cld
mov
mov
popf
push
mov
loope
pop
dec
in
sub
pushl
mov
push
in
testb
xor
out
sar
dec
mov
sub
filds
imul
xor
push
push
inc
inc
loope
adc
xchg
sbb
jne
icebp
push
adc
mov
test
sub
sbb
lea
inc
and
ljmp
dec
rolb
mov
adc
leave
sbb
add
jmp
lcall
jge
push
push
daa
xchg
icebp
stc
jnp
repz
xchg
imull
adc
daa
adc
jge
loope
nop
dec
dec
cld
call
es
in
addr16
or
push
and
inc
stos
ficoms
sbb
sahf
xor
xchg
sti
lret
push
fildll
int
pop
mov
iret
sbbb
jmp
cltd
insl
pop
push
jecxz
lea
test
mov
fwait
and
pop
mov
cmp
add
sub
mov
sti
nop
inc
aam
and
mov
xchg
fldcw
pusha
mov
out
or
cmpsl
push
xchg
inc
daa
pop
mul
pop
lret
loop
mov
dec
xchg
jl
pushl
in
cmp
and
sub
icebp
lcall
inc
je
jb
jp
lret
mov
repz
imul
sub
ljmp
stos
pop
sahf
fisttpll
cwtl
xchg
outsb
cs
or
nop
add
sbb
ss
call
clc
dec
test
pop
decb
imul
sub
adc
sub
mov
fiaddl
inc
incl
push
movsl
repz
das
pop
mov
sbb
xorl
cs
inc
cmc
cmp
fwait
out
or
outsl
lock
js
and
dec
xchg
mov
shlb
mov
mov
lods
clc
in
push
in
movsb
rcll
cltd
or
fwait
out
rorb
pushl
inc
insb
sbb
int
mov
or
test
jne
cltd
movsb
push
mov
inc
pop
dec
inc
pop
aad
sahf
mov
jmp
pushl
jge
mov
in
jp
filds
stos
cmp
sbb
mov
dec
imul
nop
jmp
add
mov
std
ds
idivl
lcall
lea
jg
repz
cli
adc
ret
ss
rorl
jmp
jne
push
dec
and
xchg
sbbl
out
sbb
decl
cld
pushl
push
fidivl
push
mov
mov
lret
out
imul
mov
movsl
lods
inc
ret
icebp
and
rorl
decl
mov
jge
xor
add
repnz
inc
and
sbb
jnp
cmp
fxch
dec
mov
jp,pn
ss
loope
dec
incl
sbbb
mov
cmp
or
cmp
mov
mov
sbb
mov
nop
aam
ljmp
lret
mov
pop
push
mov
imul
mov
into
xor
dec
std
incl
int
xchg
adc
repz
and
cmp
and
rcrl
in
dec
mov
insb
xor
repnz
test
adc
pop
mov
mov
mov
sbb
bnd
std
imull
pop
jl
ficomps
std
jmp
stc
sbb
mov
add
xor
push
stc
xchg
in
mov
jmp
ljmp
cmp
scas
pop
add
xchg
pushl
pop
or
popl
jb
movsb
adc
jne
mov
mov
or
imul
pushf
repz
cmpsb
inc
test
push
jg
in
fwait
jae
std
mov
mov
scas
or
int3
out
das
cmc
pop
pusha
sub
aad
mov
fwait
pop
loope
jmp
les
xchg
fsts
jbe
loope
scas
xorb
js
fbstp
ret
sub
ljmp
adc
mov
addr16
jnp
add
or
testl
stc
out
mov
cs
cmc
xor
lcall
fdivs
fucomip
push
mov
push
mov
fstps
outsl
ret
loop
outsb
fsubrs
adc
push
jecxz
jmp
insb
aam
mov
sub
ret
ret
lret
jge
push
lahf
cmp
or
ret
sub
or
inc
push
fcom
pop
aaa
testb
xchg
fcom
scas
dec
outsl
inc
pop
mov
mov
sarl
dec
addr16
push
pop
push
insb
xor
fwait
and
dec
sbb
lcall
pop
add
popf
sbb
and
push
xchg
dec
incl
cld
testl
inc
leave
xor
push
mov
lock
imul
repnz
dec
lods
ljmp
push
rcrl
out
mov
je
cmpsb
imul
lahf
insl
aas
ja
pushl
fsubrs
int3
outsb
sti
jmp
daa
xchg
xchg
nop
jecxz
out
int3
jge
dec
push
sub
jnp
jmp
pop
popa
fcmovbe
lods
imul
frstor
push
mov
dec
std
out
jne
lcall
fstpl
cmp
pusha
inc
cmp
lcall
add
and
call
fcoml
cli
fwait
xor
clc
add
xchg
cmp
pop
jnp
push
neg
sarb
jns
call
mov
pop
jg
lcall
fstpt
enter
xchg
cmp
mov
dec
adc
test
add
xor
jns
lods
sub
psrld
movsl
in
cwtl
out
incl
xchg
push
push
out
xor
dec
mov
movsb
mov
das
std
decl
pop
jmp
es
fmuls
dec
dec
enter
lds
call
andl
loope
jo
scas
add
fucomip
mov
cli
cmpsl
je
jge
jecxz
enter
adcb
es
inc
call
cmp
clc
aas
repz
inc
in
mov
jmp
mov
ljmp
jbe
cmp
pushl
cmp
int3
and
push
test
dec
pop
cltd
pushw
decl
xchg
sti
mov
test
sbb
es
loop
jp
pop
test
pushl
or
push
mov
loop
scas
mov
push
sbb
dec
inc
mov
insl
mov
sbb
adc
pop
arpl
mov
ljmp
hlt
popa
sub
fsubl
leave
mov
aaa
cmpsl
mov
pop
jecxz
adc
sub
push
cmp
cmc
jp
xor
cli
jge
ja
fadds
mov
mov
lcall
adc
dec
int
bound
jecxz
pushf
pushf
inc
addr16
divb
sahf
mov
pusha
inc
xor
fistpl
mov
inc
pusha
sti
sahf
sbb
cltd
mov
xchg
inc
jl
shll
fbld
out
ret
cltd
out
cmpsl
add
add
inc
loopne
xchg
in
popf
cwtl
xchg
hlt
incl
out
adc
in
jl
inc
dec
pop
xchg
shrl
pop
ljmp
sbb
leave
push
repz
pop
mov
push
push
mov
and
mov
outsl
cmc
lcall
or
sbb
in
cmpl
jae
mov
and
sbb
push
call
xor
js
pop
inc
add
shrl
adc
push
jl
push
call
add
mov
inc
nop
testl
jbe
decl
stc
jp
xor
sbb
push
mov
push
rorl
or
das
stos
cwtl
inc
movlhps
xchg
jae
cmc
sbb
test
jp
inc
subb
jg
mov
mov
fdivl
sub
notb
ret
aaa
fistpl
shlb
dec
mov
mov
imul
jns
jg
and
les
testb
mov
pushl
pop
cmp
jecxz
dec
jp
jmp
pop
adc
jg
mov
push
adc
ss
cmc
xchg
fnstenv
and
cmc
mov
mov
jecxz
dec
sbb
sbb
pop
cmpsl
data16
imul
sarl
jecxz
lock
jmp
mov
push
mov
add
inc
sbb
xchg
pop
test
insl
xor
mov
mov
inc
dec
mov
or
or
ljmp
inc
pop
loopne
cmpsl
lret
fmul
xchg
and
stos
inc
out
mov
loope
das
inc
out
scas
aad
incl
lds
aaa
adc
sub
dec
cmpsl
imul
out
sti
cmp
add
dec
push
dec
adc
and
out
ret
js
stos
dec
daa
stos
pushf
ljmp
cmp
or
call
ret
xchg
lock
sbb
jmp
std
decl
xchg
pop
inc
add
ret
sar
sub
lret
std
push
jo
adc
mov
das
insl
inc
cmpsl
or
inc
cmp
stc
movsl
into
and
pop
cld
test
nop
mov
movsl
jae
pop
call
cmpsb
mov
ja
pop
jle
mov
insl
rclb
mov
lahf
movsl
jns
idiv
repnz
inc
dec
les
repz
rep
cld
mov
icebp
mov
jge
mov
xor
add
sar
outsl
sti
int
sahf
mov
jnp
sub
mov
sbb
add
cmp
sbb
pushl
clc
pop
in
sub
mov
in
cmp
outsl
xchg
mov
or
mov
pop
cs
xor
imul
pop
xor
call
sub
shrl
gs
push
mov
pop
cmp
call
push
push
jmp
jecxz
dec
dec
leave
xchg
pop
lods
dec
ret
mov
lcall
pop
test
in
add
cmp
add
mov
jae
xor
ljmp
prefetcht2
call
ss
or
mov
int3
daa
lock
in
dec
addb
jmp
add
jge
ljmp
sub
fsubs
mov
cmp
pop
insl
enter
outsl
push
outsb
fcmovne
sub
or
lcall
jp
xlat
out
mov
pop
push
add
dec
cmc
or
jns
xchg
jb
daa
incl
popf
push
in
inc
mov
movsl
aas
dec
jge
mov
jg
mov
mov
lret
inc
dec
fdivr
movsl
ljmp
inc
andb
xor
cmp
pop
push
mov
or
dec
aaa
fcomi
push
cmp
xor
sbb
push
leave
cmpl
js
mov
popa
or
xchg
inc
push
out
add
ja,pn
or
aam
jmp
mov
ds
jne
inc
outsl
cmovno
xchg
dec
mov
pop
ljmp
pop
cs
push
cli
hlt
jnp
cld
xor
cmp
inc
cmpl
aas
nop
jp
jmp
test
push
add
ret
dec
xor
lcall
mov
incb
or
mov
push
mov
je
mov
sbb
mov
ret
mov
xchg
in
mov
es
lds
push
add
ss
lcall
insl
js
pop
into
out
pop
frstor
inc
bound
scas
push
ret
fdivr
ret
jg
sbb
jmp
fs
lods
mov
or
test
dec
jg
jp
inc
push
adcb
xchg
shl
and
rclb
mov
call
repz
mov
jmp
js
xchg
cmp
pop
jb
insb
das
or
cli
inc
lcall
sub
xchg
int
loop
cltd
mov
xchg
in
mov
add
fcoms
arpl
xor
jae
das
hlt
decl
lret
jg
add
int3
cmp
shlb
ds
xor
mov
call
in
jmp
pop
mov
cmp
inc
jno
fwait
mov
aaa
fldl
aaa
cli
fistl
pop
clc
adc
test
js
push
jp
cmc
push
dec
xchg
jle
push
loopne
dec
pop
hlt
push
xor
inc
call
into
dec
dec
jmp
arpl
aam
pop
ds
or
jl
pslld
pop
outsl
pop
clc
decl
lret
fldt
rolb
push
jbe
mov
repz
jmp
jnp
pmaxsw
or
dec
stos
add
xchg
and
adc
imul
jo
jp
push
pushl
xor
test
push
sahf
mov
dec
hlt
mov
js
sar
fistps
cmp
inc
pop
push
push
nop
cmp
mov
stos
pop
in
nop
mov
mov
cmp
cmp
mov
out
iret
push
mov
lea
adc
add
adc
push
shll
push
jmp
andl
call
cmp
sub
sub
sbb
add
dec
add
add
pop
fdivrp
jle
xchg
rcll
push
lcall
pop
ret
or
pop
cmp
decl
xchg
sbb
decl
push
jo
mov
sub
sub
add
outsb
test
adc
push
lcall
jbe
in
out
jl
sbb
in
add
ds
lahf
aam
lods
clc
mov
pop
shrb
hlt
or
pop
clc
sbb
xchg
xchg
sahf
in
mov
xchg
cli
and
int
inc
mov
lods
cli
dec
sub
pop
cli
mov
sub
mov
fidivrs
cmp
cli
das
pusha
neg
sub
jp
out
pop
cmpsb
insl
mov
je
jge
call
fbstp
xorl
mov
add
aam
fnstsw
jno
insb
out
or
pop
call
pop
clc
mov
stos
xor
adc
lods
pop
sub
jmp
lcall
push
jno
sbb
jb
outsb
mov
test
lcall
cmp
jmp
mov
lcall
clc
pop
cmp
and
ds
mov
incl
int3
in
push
xchg
push
out
jbe
lahf
cltd
mov
inc
xchg
daa
jmp
pushl
inc
inc
data16
adc
push
xchg
push
repnz
jbe
or
insl
shrb
outsl
insl
jge
lcall
mov
roll
dec
mov
shlb
je
mov
arpl
jl
mov
filds
sub
push
jmp
scas
insl
test
out
mov
and
bound
cmc
jg
sti
pusha
mov
lret
ljmp
aas
xchg
add
mov
dec
mov
lcall
insb
outsb
mov
inc
popa
cs
repnz
sti
mov
pop
and
outsl
xchg
cmpsl
std
vmovlps
xor
mov
fstps
testl
daa
adc
mov
jb
repnz
lds
ljmp
or
out
loope
or
gs
and
arpl
test
cs
jnp
cmp
clc
inc
loop
mov
add
cmp
pushl
mov
leave
std
and
and
enter
pushl
or
pop
jmp
adc
notb
push
out
or
aaa
rcr
mov
xchg
in
mov
ret
push
inc
rcrb
sub
arpl
inc
mov
mov
pushf
je
jl
mov
fadds
ljmp
lcallw
and
repz
ret
stos
add
arpl
hlt
pop
jp
xchg
add
sarb
call
dec
rcrb
divb
or
mov
mov
sbb
xchg
dec
add
jp
fcomi
push
jmp
pop
pop
push
pop
push
loope
fisttps
lret
jns
loopne
adc
fisubrs
mov
sbb
insl
push
std
xchg
lahf
in
add
cmp
push
sti
inc
jl
or
in
inc
mov
mov
pop
mov
bnd
test
adc
test
ret
inc
test
hlt
ljmp
inc
outsl
repnz
test
push
jecxz
pop
nop
jne
icebp
push
push
dec
jns
out
imul
ficompl
fsubrs
outsb
ljmp
rol
xchg
int
or
push
ss
leave
pop
xor
cmp
lea
jg
decl
jae
sub
pop
add
sbb
es
lds
movb
pushl
scas
inc
loope
jl
je
pop
sbb
sub
xlat
pop
push
fs
stc
xchg
popl
call
mov
pop
test
mov
iret
scas
in
xor
js
mov
aas
subl
pop
pusha
call
mov
aad
lods
and
es
loop
inc
aaa
clc
out
pushf
out
aas
gs
enter
pop
movsl
pop
std
incl
mov
insb
fbld
ljmp
decl
test
in
orb
ret
push
aad
and
ljmp
ljmp
and
sbb
pop
push
mov
je
int3
fcomip
jns
inc
ret
cmp
push
incl
pop
stc
and
cmpl
ljmp
sub
pop
int3
push
mov
jp
incl
adc
dec
mov
mov
call
xor
sbb
fisubl
cmpsb
ret
xchg
fiaddl
jmp
sti
call
addl
add
test
dec
jae
sub
add
idiv
aad
jo
xchg
aad
std
scas
fisttps
stos
aam
jmp
mov
testb
jmp
xor
movsl
lret
imul
add
test
test
in
es
movsl
xor
jae
jmp
lcall
cmc
les
jg
insb
lods
inc
fs
xchg
cmc
pushf
cmp
cmp
lcall
dec
add
repz
ror
test
fiaddl
inc
das
sbb
aaa
ds
sbb
call
jo
nop
dec
adc
fcomp
jno
test
addr16
js
leave
cmpsb
aas
xchg
inc
scas
ljmp
in
and
pop
inc
add
cmpsl
sbb
mov
incl
cmp
fildll
mov
lods
jne
mov
test
sub
sub
xchg
scas
fwait
xor
cmp
cmpsb
inc
inc
xlat
dec
test
sbb
int
lea
cwtl
jcxz
rcrl
std
jmp
jle
std
mov
xor
xchg
in
xchg
fnstsw
mov
mov
rcrl
pop
push
adc
cltd
fimull
push
pop
insl
sbb
push
fidivrl
mov
enter
inc
dec
sbbl
cwtl
push
jg
inc
and
inc
pop
mov
xchg
dec
dec
lcall
test
enter
aad
pop
mov
shll
jno
jno
jbe
pop
clc
pushl
dec
xor
cmp
scas
addl
sbbl
fildll
fisubrl
test
xchg
pop
out
xchg
inc
int
in
push
jecxz
loop
cli
movsl
inc
lods
or
or
jg
pop
xchg
pop
scas
subb
adc
or
xor
pop
sti
repnz
aas
xor
int3
cmpsb
repz
ljmp
mov
inc
or
or
inc
mov
and
xchg
out
push
sbb
sbb
call
inc
sub
fcmovnb
sbb
repz
or
sarl
pusha
push
movsl
xchg
std
hlt
dec
mov
ljmp
decl
push
cmp
out
aas
test
xor
adc
lods
lahf
add
add
push
mov
inc
lahf
mov
mov
cmp
popa
inc
xchg
shlb
in
pop
fbstp
xchg
cmpsl
into
icebp
mov
popf
mov
mov
outsl
jbe
std
lods
sti
push
push
aaa
or
xor
call
test
lret
cld
pop
cld
fs
es
mov
push
mov
movsl
testb
mov
jl
cmpsl
ljmp
pop
cli
xchg
cmp
xor
add
ja
cs
mov
mov
push
call
xor
xchg
std
popf
xchg
cltd
les
dec
leave
loop
pop
mov
inc
call
aam
jl
fxam
pop
sbb
stos
jge
lcall
and
pop
cld
decl
xor
add
sbb
pop
lods
xchg
pop
adc
out
mov
jmp
or
cli
lods
mov
insb
xor
jge
stos
andb
fisubs
aad
stc
test
push
mov
loopne
in
jg
sub
cli
js
das
and
negb
cmpsb
popa
cmpl
mov
lods
jg
mov
icebp
mov
or
and
jg
cltd
mov
ja
jp
cmpsb
aaa
push
inc
stos
sahf
wbinvd
dec
es
fwait
jbe
fcos
lcall
sbb
or
and
out
mov
sahf
xorb
push
insb
ret
jmp
cmc
or
cmpsb
and
jp
inc
dec
xchg
adc
add
push
cmp
or
movsl
sbb
mov
outsl
out
sbb
daa
and
push
std
xor
jns
mov
sub
movsb
jb
je
add
or
fstpl
push
mov
daa
inc
nop
das
sar
ljmp
pop
jae
outsb
inc
cli
addr16
lods
mov
data16
xchg
sti
dec
pop
mov
loopne
test
mov
cmpsl
add
sbb
adc
dec
sub
sbb
call
movsl
pop
mov
cli
aaa
or
pop
cwtl
cld
push
pop
pop
xchg
insb
sbb
ljmp
or
ret
mov
sub
push
call
mov
stos
lea
movsl
sar
outsl
icebp
lcall
add
mov
adcl
in
sbb
add
adc
ljmp
mov
cmp
stos
and
and
sar
jl
sub
xchg
xchg
sub
inc
in
je
ud0
ljmp
fildll
mov
int3
jp
mov
cmpsb
lcall
cli
incl
loopne
cmp
test
cs
lcall
and
mov
repz
in
insl
xor
push
es
pushf
popf
sti
popf
ret
jmp
pop
jb
cltd
dec
into
pop
incb
decl
fistl
jl
dec
ds
mov
pop
xchg
notb
push
icebp
call
jmp
inc
cltd
and
mov
mov
out
or
clc
push
pop
push
mov
aad
xor
inc
call
dec
scas
fs
pop
mov
shll
das
icebp
cld
adc
das
sub
cld
jecxz
pop
adc
mov
cmp
incl
push
adc
cmp
mov
and
mov
je
cmpsb
dec
push
jp
adc
dec
cld
test
mov
pop
xor
dec
dec
xlat
sbb
mov
addr16
mov
vpackuswb
in
movsb
inc
imul
call
jge
call
add
ljmp
pushfw
cs
mov
jb
sub
bound
sbb
cmc
movsl
test
cmpsl
jae
xchg
pop
stc
ds
pop
mov
cmp
mov
fdivs
jg
cmpsl
jl
rclb
cmpl
out
mov
jl
xor
lcall
ljmp
cmp
xor
push
push
xchg
ljmp
or
sbb
jl
add
in
jp
daa
pop
jne
sahf
incl
fucomip
int3
ljmp
in
pop
out
push
fwait
dec
into
mov
cwtl
stos
xchg
jecxz
or
add
aam
pop
jp
aas
pushl
movsl
sub
xchg
inc
or
sbb
lcall
or
cmp
sub
dec
cmp
cmp
aas
sti
test
out
loope
push
add
in
add
and
push
insb
incl
rcl
call
loope
add
ret
scas
subb
cld
lcall
cld
dec
insb
fwait
and
sub
xchg
incl
push
out
aad
aaa
lock
push
xchg
lds
stc
fwait
loope
lea
push
call
jmp
mov
lods
mov
pusha
jp
pushf
popa
test
inc
leave
jg
dec
push
sub
imul
dec
sbb
jle
pop
fdivr
jp
xor
mov
jg
xlat
pop
fisubrs
bound
xchg
sbb
imul
lret
clc
and
or
iret
ret
mov
mov
cmpsl
cwtl
jecxz
incl
aas
loop
pushf
sbb
mov
sbb
cs
out
test
sbb
sbb
fistpll
and
test
shll
xchg
jle
sub
aam
mov
xor
mov
ror
call
lcall
mov
cli
push
adc
and
pop
gs
fsubl
or
push
sub
clc
jecxz
and
mull
das
bound
mov
lcall
enter
insb
call
inc
cmp
xchg
jo
pop
std
jg
lea
in
shrl
mov
ljmp
std
cmpb
mov
scas
mov
push
inc
stc
pushf
xchg
sar
lcall
xchg
das
cs
push
subl
int3
pop
add
hlt
inc
pusha
stos
pop
lea
cmp
sbb
call
sub
sbb
pop
xchg
jbe
cmp
aad
xor
sbb
mov
pop
cld
mov
dec
xchg
rolb
pop
dec
and
ds
sub
jmp
mov
mov
loope
inc
orb
mov
stos
addb
inc
pop
lods
ljmp
ljmp
test
jbe
in
fidivl
test
or
inc
pop
fnstenv
loop
mov
lret
cmp
call
or
inc
mov
mov
aam
leave
mov
sub
sub
loop
testl
sbbb
or
pop
in
pop
and
movsl
daa
lea
int3
loopne
call
push
call
mov
rcl
push
sbb
aam
and
aaa
cli
decl
or
pop
xchg
sbb
xchg
adc
addr16
push
inc
lods
test
pop
call
subb
scas
es
incl
insb
and
push
jmp
add
hlt
mov
or
dec
mov
out
outsl
icebp
cwtl
inc
push
cli
xchg
mov
repnz
cld
arpl
ja
inc
and
pushl
stos
sub
roll
testl
decl
pusha
jmp
mov
ret
dec
or
push
int3
das
addr16
cmpsl
sbb
scas
incl
rcrb
lret
xor
into
dec
std
cmp
and
add
mov
incl
je
jge
sub
inc
push
jnp
pop
lahf
fucomi
inc
dec
mov
imul
add
dec
mov
rol
and
jge
stos
mov
incl
cltd
inc
in
and
mov
push
outsb
sub
jg
mov
insb
or
mov
ja
aaa
fsubrl
out
inc
lods
je
clc
ja
call
xor
popa
movl
scas
mov
rorb
fimuls
ss
shlb
in
outsb
sbb
sub
pop
insb
add
je
pushl
mov
fwait
add
sub
mov
pushf
and
mul
pop
dec
jmp
int
fwait
adc
daa
cmpb
push
add
sub
push
popf
outsl
fimuls
hlt
and
mov
sub
push
and
fimuls
call
cmp
scas
lret
and
mov
jge
push
xchg
xchg
pop
xor
mov
pop
pop
shrl
push
mov
jg
jg
sbb
aas
arpl
stos
nop
push
xor
movsl
dec
dec
stc
pop
leave
inc
idiv
call
jg
mov
loop
and
aas
in
xchg
outsl
fidivl
lods
and
decl
mov
std
adc
adc
add
lock
fstps
and
jge
adcl
jp
lret
in
dec
aam
adc
mov
xor
push
dec
shlb
sbb
je
icebp
pushl
sub
cmp
mov
mov
add
mov
lods
sub
mov
mov
je
pop
iret
mov
rcrb
test
mov
cmp
and
push
es
sbb
pop
popf
jne
fwait
push
pop
xchg
mov
mov
pop
sbb
jl
lock
ret
xchg
mov
aas
std
pop
clc
test
cmpb
sbb
mov
pop
mov
jnp
adc
mov
jmp
and
add
mov
lods
xchg
gs
jns
call
mov
pop
inc
test
xorl
stc
lods
mov
add
adc
mov
sarl
hlt
jg
xor
out
push
sbbl
inc
decl
aam
insl
push
mov
push
std
pop
push
outsb
or
sti
cli
incl
push
lret
mov
pop
lahf
pop
movsl
lods
mov
outsb
out
adc
pop
leave
fcmovbe
mov
out
jmp
std
outsl
std
mov
xchg
cmc
int
sub
rcr
ss
add
jo
fs
jnp
ljmp
pop
dec
mov
testl
clc
xor
popf
cs
mov
mov
outsb
push
adc
aam
test
subb
push
adc
js
push
mov
add
xchg
xlat
data16
jbe
add
sti
les
push
xchg
jle
fistl
out
jmp
fwait
dec
in
cltd
xor
jns
jns
jle
fucomi
sbb
fiadds
dec
push
ret
enter
incl
jmp
push
lock
popf
push
outsl
xlat
insb
fmull
leave
es
push
clc
pop
bound
stc
inc
push
mov
cmp
scas
add
arpl
sub
das
push
pusha
ret
sbb
add
jge
jne
or
mov
rcrb
mov
icebp
mov
jge
adc
xchg
call
ret
fs
jmp
add
mov
stos
idivb
sub
xchg
scas
out
es
pop
lcall
push
nop
stc
dec
xchg
outsl
and
cmp
dec
addr16
sbb
lret
lods
lock
ja
decl
jo
mov
mulb
movsb
out
mov
jns
mov
outsl
hlt
xchg
clc
pop
cmp
pop
mov
repnz
jge
add
jmp
nop
xchg
jecxz
jecxz
mov
jns
push
cwtl
pop
xchg
arpl
push
mov
lcall
gs
jbe
sub
jle
mov
sbb
and
xchg
push
and
aad
les
pop
leave
arpl
adc
scas
stos
cmp
and
mov
adc
push
cmpsb
sahf
or
ljmp
mov
xor
add
push
jo
pop
stos
ljmp
sub
adc
movsb
inc
data16
jo
in
pop
adc
xchg
adc
mov
jg
and
xor
inc
dec
stos
pop
call
xchg
pop
inc
add
adc
addl
adc
mov
or
test
lcall
insl
clc
outsb
xchg
pusha
out
fsts
pop
cltd
imul
leave
ror
aas
in
mov
jno
aad
jne
sbb
out
dec
or
enter
les
jg
xchg
out
add
sti
sub
jmp
lds
iret
arpl
data16
loopne
loope
inc
and
cmp
fcom
inc
mov
incl
rorb
cmpsl
clc
aas
pop
stos
jo
lahf
rclb
add
mov
jmp
mov
or
push
rorb
in
out
arpl
cmpsl
int3
mov
add
lret
mov
xchg
test
hlt
rcl
lods
loopne
push
je
gs
xor
xchg
decl
stos
mov
mov
xchg
pop
pop
pop
mov
call
and
lds
xchg
push
pop
ja
jecxz
xlat
push
cmp
inc
cs
test
inc
das
add
xchg
shll
stos
mov
jg
xor
flds
std
sub
pop
add
xchg
sub
sbb
aam
cmp
xlat
or
cmp
cmpsb
ds
mov
out
dec
jge
push
push
cld
mov
cs
out
je
js
and
jg
pop
cmp
sbb
sti
loope
jae
in
xchg
adc
mov
lahf
sbb
and
jbe
or
mov
popa
inc
decl
cld
mov
mov
ss
sbb
sub
xchg
test
xchg
xchg
pop
xchg
xchg
mov
mov
mov
out
pop
adc
sbb
lret
mov
push
pop
dec
aad
push
aaa
loop
imul
aaa
test
dec
xchg
ret
cmc
inc
push
dec
sub
into
or
jae
jmp
into
sbb
decl
rolb
adc
loop
out
xchg
xchg
mov
das
icebp
jge
dec
mov
das
dec
test
push
out
mov
fdivrp
ljmp
cmc
ja
or
jb
jne
hlt
mov
add
ljmp
fldt
inc
fidivrl
jmp
adc
mov
gs
in
ret
mov
pop
cld
ljmp
hlt
sbb
cltd
mov
push
int
push
mov
lcall
cld
xor
test
sahf
es
jl
lock
or
cmp
push
xchg
aaa
jmp
mov
sub
in
mov
adc
jl
xchg
scas
lcall
mov
test
mov
adc
cld
decl
js
cld
mov
lods
mov
jp
push
mov
out
pop
lods
je
sub
mov
mov
test
mov
cltd
or
loopne
fbstp
lret
jne
and
mov
mov
repnz
cli
pop
pop
sbb
sti
bound
scas
cli
inc
cmp
or
dec
mov
ljmp
push
data16
test
insb
xchg
rcrl
adc
xor
inc
test
loope
bound
mov
jg
add
mov
push
lea
or
and
clc
mov
ret
repnz
jbe
pusha
dec
test
push
cld
or
fcmovne
jmp
pop
sbb
dec
int3
dec
int
fsubrl
es
mov
js
lcall
fsts
pop
rcrb
ret
stos
push
and
icebp
cld
cmc
rcrb
sub
lcall
out
andb
add
mov
sub
push
sbb
leave
aam
pushl
mov
icebp
addr16
aad
mov
mov
pop
test
mov
jmp
aad
sbb
mov
adc
mov
add
fs
push
ljmp
sub
cmpsl
push
icebp
fmuls
ret
pop
cmp
push
push
jae
fwait
dec
inc
mov
pushl
cmpsb
dec
cmp
mov
nop
clc
push
lods
nop
sti
lahf
jnp
pushl
cli
mov
out
es
fcmovnb
inc
dec
sbb
gs
cmp
pushl
mov
ja
in
and
lahf
push
xor
bound
jmp
lcall
inc
add
push
xor
ds
es
rclb
pop
nop
loop
test
or
mov
in
js
cld
mov
xchg
js
incb
xor
pop
push
movsb
mov
jne
pop
popa
sbb
lcall
scas
adc
scas
sbb
pop
insb
jns
mov
add
ljmp
and
enter
movsb
addr16
pop
xor
xor
sbb
aam
push
push
mov
decl
xchg
xchg
push
jbe
jl
fs
push
cli
lahf
mov
inc
data16
mov
cli
jns
push
notl
sahf
pop
dec
inc
push
cmp
pop
cmpsb
jae
jmp
lret
mov
mov
cld
out
push
popa
mov
in
daa
call
push
jl
pop
pop
in
sbb
sbb
loopne
test
addl
incl
outsl
cmp
jl
adc
cmp
repnz
movsl
pop
shlb
dec
in
testb
stos
repz
shlb
std
mov
sbb
js
nop
sti
jg
ljmp
movsl
fabs
pop
xchg
cli
fstl
mov
pop
xor
inc
aam
xlat
imul
mov
aam
mov
xchg
lahf
xor
fidivs
xor
add
lock
sub
xchg
faddl
call
xlat
inc
mov
cs
test
imul
fnstsw
decl
pop
scas
cmp
lods
xchg
pushf
in
and
fnstcw
jl
into
cmpsb
fs
call
repnz
jg
xchg
leave
je
pop
cmp
shrb
and
jg
lcall
cli
add
shlb
jb
or
xchg
dec
and
push
jg
mov
mov
xchg
lahf
rcll
shll
arpl
das
hlt
dec
fdivp
add
mov
ds
outsl
jno
shl
sbb
or
outsl
lock
loopne
sbb
sub
andb
rcll
std
jmp
fldcw
add
and
mov
inc
test
jae
sub
lret
call
lods
push
je
mov
arpl
out
lds
ss
in
pop
ljmp
ljmp
fnclex
mov
inc
mov
pop
xchg
loopne
jmp
dec
mov
in
hlt
ljmp
inc
decl
in
cmpsl
or
ss
dec
mov
jbe
mov
pushf
daa
or
mov
aaa
xchg
inc
mov
and
insb
pop
lock
scas
ss
enter
sbb
mov
mov
lods
stos
sub
movsb
sahf
in
cmp
decl
mov
xor
mov
hlt
rcrb
xchg
inc
pop
push
andb
adc
call
lahf
mov
int
iret
jmp
mov
adc
xchg
jno
sub
pop
ret
pop
sub
inc
repnz
arpl
ljmp
jb
and
fwait
push
push
xchg
fisttpl
dec
dec
and
outsb
ret
daa
imul
fldl
sbb
rolb
stc
pop
test
loopne
mov
es
jo
mov
or
js
adc
and
ss
in
add
mov
pushl
mov
inc
addr16
cmpsl
mov
scas
add
jecxz
pushf
jns
je
lods
sahf
mov
dec
sti
out
insl
inc
jle
jg
es
call
ljmp
ljmp
cmc
test
sbb
arpl
dec
jg
jmp
jg
loopne
sbbb
cmpsb
call
mov
cmc
jg
mov
cmp
xchg
les
inc
shll
fs
mov
shlb
shlb
jae
orb
mov
jmp
pop
pop
sbb
inc
popf
and
and
mov
pushf
add
inc
pop
out
pop
add
orl
rcrb
push
out
cld
xor
idivb
andl
adc
cltd
arpl
dec
fnstsw
iret
and
mov
jp
ja
fdiv
les
pushf
fbstp
call
inc
jne
popa
pushl
xchg
lds
flds
adc
clc
ljmp
in
push
push
hlt
pop
lea
bound
sbb
ret
and
sub
cltd
dec
incl
mov
pop
jno
inc
mov
inc
add
gs
push
mov
adc
cmc
arpl
aam
mov
fdivl
dec
and
aam
movsb
leave
mov
add
outsl
std
adc
xchg
pop
and
loopne
pushl
mov
cmp
aas
push
push
inc
inc
xchg
cmp
test
or
dec
movsb
xorl
xor
or
xor
ljmp
adc
shll
sbb
decb
mov
xchg
movsb
fs
bound
lea
inc
aaa
cli
outsl
outsl
sahf
lods
jmp
sub
andl
out
pushf
fiadds
dec
imul
push
daa
cmp
aad
inc
add
ljmp
rorl
inc
and
popa
mov
sub
out
ljmp
or
push
sti
push
mov
scas
and
nop
nop
sbb
incl
scas
pushf
pop
jo
repz
push
insb
call
dec
rcrb
inc
xor
ja
out
or
ljmp
out
fdecstp
or
popa
xchg
push
imul
aas
dec
aad
lcall
adc
inc
or
pop
sbb
xchg
lret
lahf
das
cld
ljmp
add
jae
mulb
adc
rcll
ret
inc
adc
push
call
and
cmpsb
movl
insl
cltd
into
mov
push
push
sar
jmp
mov
fsts
jbe
xchg
mov
push
and
shll
or
gs
adc
mov
pushf
insl
cmp
ret
int
add
fsub
add
and
xor
inc
call
les
mov
xchg
or
push
rcr
push
es
pushl
clc
cltd
repz
hlt
fmul
repz
pop
pop
scas
std
mov
inc
mov
sub
pop
hlt
jg
add
xchg
dec
mov
iret
hlt
ljmp
sbb
dec
data16
push
xor
mov
bound
fmul
rcr
sub
cld
incl
outsl
je
fs
mov
mov
test
mov
add
cmpb
loopne
gs
ljmp
or
mov
out
push
out
add
aaa
cmp
shl
pop
bound
insl
out
mov
lcall
std
fucomip
jecxz
xor
repnz
es
rorb
sti
add
push
enter
test
add
cmp
dec
leave
scas
pop
cmc
nop
inc
outsb
mov
cs
stos
add
int
mov
insb
inc
sbbb
jae
js
rorl
jp
scas
push
push
lcall
sub
pop
out
into
out
jecxz
mov
std
in
fnsave
or
call
lea
mov
sbbl
cld
mov
aad
jg
fidivs
test
fimuls
add
xchg
pop
scas
push
cmp
call
cld
call
jg
xor
cli
mov
loopne
ja
xchg
dec
mov
mov
aad
and
inc
movsb
push
mov
jo
in
fwait
lods
add
cmp
lods
outsl
xorb
pop
call
lock
vmovshdup
mov
andl
and
xorb
je
cmc
dec
xor
sar
das
fs
jle
mov
fcmovnb
lods
stos
mov
adc
pop
sar
call
mov
popf
sbb
mov
jmp
lcall
rorb
mov
mov
adc
xor
fs
push
popa
mov
pop
xor
pushl
add
or
stc
scas
mov
mov
sub
jne
lea
out
rolb
cmp
repnz
pushf
push
xchg
lahf
faddl
stos
inc
pop
and
inc
out
or
stc
jno
leave
outsl
icebp
jg
mov
add
lds
orl
or
adc
aas
loopne
mov
test
lods
sbb
xchg
pop
test
or
push
movsl
imul
std
incl
lock
outsl
mov
push
nop
std
jmp
add
sbb
call
jl
jecxz
popf
shlb
stos
outsl
push
or
jge
pop
and
out
cmc
mov
adcl
das
and
mov
xchg
jg
sbb
icebp
lcall
mov
lods
pop
pop
out
cwtl
cmp
xor
std
call
ljmp
xor
xlat
xchg
lods
mov
in
or
jo
xchg
add
sbb
pop
decl
xchg
add
pop
sbb
lret
loopne
loopne
fucomip
mov
jg
movw
je
cmp
scas
jge
xorl
decl
imul
or
fs
pop
fidivrl
insl
cmp
push
and
sti
cmp
inc
pop
xor
ja
stc
sahf
adc
mov
call
jg
arpl
in
mov
sahf
inc
dec
or
cli
xchg
sbb
xlat
xor
mov
std
push
mov
cli
imul
jg
sub
xor
data16
mov
push
or
inc
pop
movsl
les
inc
jnp
cld
jle
sub
dec
jbe
push
leave
push
jae
js
das
lock
jg
inc
cmpsb
jecxz
fcmovu
fisttpll
lea
pushf
mov
push
lock
and
mov
pusha
test
sbb
mov
iret
add
ficomps
push
bound
dec
daa
repz
shr
dec
pop
fwait
inc
mov
pop
or
jge
hlt
push
inc
shlb
decl
pop
mov
mov
hlt
inc
fwait
imul
mov
jecxz
xchg
jle
push
je
mov
adc
cmp
push
jge
mov
mov
xorb
xor
ror
outsb
les
ds
mov
mov
xchg
pop
adc
nop
fs
loope
mov
ljmp
or
test
cmc
popf
ret
stc
inc
call
push
aaa
ljmp
pop
inc
inc
dec
ficomps
movsb
push
mov
decl
outsl
sub
rolb
pop
aaa
xor
mov
inc
shlb
sar
inc
sahf
inc
fcmovu
mov
mov
push
fmulp
xchg
push
inc
imul
adc
and
das
hlt
stc
xchg
fsubs
or
loope
cmp
mov
ljmp
jo
and
sbb
adc
or
push
insb
or
or
mov
incl
ljmp
stos
or
sub
sbb
repz
lods
adc
cld
mov
loop
xor
push
mov
andl
and
pop
call
daa
lds
mul
add
push
xchg
inc
add
int
cmc
push
out
xchg
and
cmp
ret
dec
mov
mov
pop
mov
sbb
xor
jmp
inc
loop
insb
incl
jg
hlt
xor
mov
ds
jno
scas
stos
jbe
pop
and
pop
std
lcall
aas
addr16
call
leave
lahf
pop
mov
insl
jecxz
inc
mov
or
movsb
stos
cltd
mov
jl
lcall
incl
out
sahf
lds
test
mov
out
jb
enter
test
ljmp
adc
mov
mov
ss
repnz
outsb
inc
arpl
dec
idivl
sbb
or
pop
orb
xor
jbe
fisubs
sub
mov
popa
stos
or
iret
nop
adcb
xchg
inc
std
pop
lcall
call
fsubrl
daa
pop
stc
cmp
xchg
imul
mov
lcall
cmpsb
ss
pusha
loop
call
mov
or
les
fsubp
dec
addb
idivl
push
pop
dec
jg
out
arpl
xchg
and
mov
inc
insl
push
add
sub
or
repz
aaa
adc
cmpl
inc
repnz
ja
movsb
cmp
ds
push
jg
xor
fsubr
cld
jge
add
sar
xchg
pusha
imul
movsb
jl
decl
cmp
ljmp
pop
jge
adc
xchg
mov
ljmp
les
adc
jb
xchg
mov
das
inc
lcall
sbb
mov
xchg
ljmp
in
mov
xor
out
dec
add
xchg
popf
pusha
pushf
scas
lahf
xchg
xchg
lods
js
pop
call
stos
les
xchg
rcrb
jg
add
or
jnp
mov
mov
pop
cld
dec
test
mov
cmpb
in
adc
push
imul
xor
jnp
aad
les
xchg
jg
rcrb
cld
lret
mov
and
dec
and
mov
and
sar
outsl
pop
mov
push
lret
ret
cmp
dec
bnd
call
rorl
mov
call
test
dec
sti
jne
mov
xchg
scas
jns
mov
cmp
fisttps
inc
int3
inc
or
enter
push
pop
push
jg
arpl
xor
or
jle
in
xor
or
inc
mov
add
dec
lret
xor
pusha
xchg
pushf
repz
mov
pushl
push
stos
scas
jae
xor
jge
aaa
adc
push
enter
out
adc
jg
push
add
ret
fwait
pop
or
inc
and
add
push
lcall
xchg
inc
dec
mov
pop
fwait
ret
repz
sbb
jmp
jmp
xchg
loopne
fimull
mov
cmp
lcall
stos
gs
test
adc
pop
test
pop
leave
push
cmc
mov
decl
pop
jnp
and
fisubrs
fistpl
pusha
sbb
sbb
in
mov
mov
das
xor
lock
lret
inc
xor
cmpsb
mov
or
xor
insb
cld
lcall
jge
xorb
add
jl
jecxz
popa
in
xor
and
add
mov
js
pop
clc
lcall
cmpsb
ret
fcompl
in
mov
add
push
aaa
inc
mov
loope
std
lcall
push
mov
push
inc
aad
jl
adc
loop
push
lea
push
aaa
clc
lcall
fsubrs
fisttpll
jnp
jnp
push
out
sti
and
pop
call
bound
dec
jns
xchg
and
ret
xor
ja
inc
inc
jmp
stos
ret
fistpl
and
std
popf
mull
imul
das
rolb
sbb
mov
jbe
xchg
mov
insl
insl
loope
div
outsl
cmc
lcall
cld
xchg
shrl
ljmp
jg
scas
push
push
ljmp
jne
dec
jae
aaa
sub
ja
jnp
jno
pop
hlt
push
lcall
jmp
lahf
dec
cmpsb
or
outsl
nop
pop
or
cld
les
add
ja
cmp
decl
mov
dec
icebp
enter
pushf
addb
lea
and
scas
call
and
adc
or
lods
addr16
sbb
add
notl
or
call
mov
js
mov
mov
int
push
mov
pop
mov
jo
pop
mov
shrb
mov
fidivl
mov
stos
push
lcall
push
cmp
rcr
decl
mov
jg
ljmp
push
popa
mov
call
clc
mov
ret
shlb
pop
sbb
and
pushl
cli
fnstenv
xor
jne
fwait
cmp
mov
cmp
insl
pushl
cli
aad
dec
push
pop
xor
lds
andb
mov
faddp
lcall
call
push
rol
jg
or
lock
movsb
jmp
test
push
and
pushl
and
and
fs
dec
mov
or
lcall
incb
inc
jmp
sub
arpl
mov
pop
inc
push
js
stos
adc
dec
push
in
dec
jl
push
xchg
jle
loop
leave
mov
jecxz
mov
pop
cmp
cmpsb
loopne
dec
lods
lods
mov
cmpsl
or
push
jns
jmp
adc
xchg
jecxz
cmp
mov
jnp
cwtl
outsl
push
call
shl
aam
xchg
xor
dec
sub
dec
cld
pop
mov
lahf
jae
or
mov
vunpckhpd
test
dec
nop
test
aaa
cli
incl
sub
stos
ret
jecxz
shlb
jbe
dec
adc
pop
and
mov
push
setge
jg
lods
pop
addr16
in
int3
pop
push
push
xchg
inc
lea
out
aaa
loope
pushf
lcall
fwait
int
out
push
mov
mov
or
mov
stos
lock
jmp
push
rcrl
or
jno
inc
xchg
cmp
jno
lds
lods
inc
ret
fistps
sbb
lret
sbb
out
xrelease
fs
scas
ret
incl
lea
dec
jb
inc
add
cvtdq2ps
mov
in
je
call
and
pushl
sub
movsb
cmp
pop
stc
or
dec
and
xchg
cmpsb
mov
cmp
bound
mov
in
jne
xor
mov
inc
xchg
add
call
pop
ret
jne
or
sub
insb
jmp
sahf
cmp
inc
inc
addb
xchg
jb
jg
cmpsl
or
xor
nop
add
das
fwait
test
dec
loop
fisubl
push
fadd
jae
rolb
aaa
sbb
and
call
test
push
dec
aad
outsl
jmp
dec
or
shrl
cmp
mov
rclb
sbb
lcall
insl
push
inc
mov
aas
fiaddl
xor
nop
fdivr
lods
lret
push
incl
test
popa
push
mov
adc
jecxz
dec
mov
lods
or
decl
mov
xchg
adc
std
cmpsb
test
sub
std
mov
out
pop
adc
mov
mov
mov
dec
and
js
jmp
or
fstl
mov
in
in
xchg
cwtl
and
das
lock
or
push
adc
adc
push
xor
test
lds
mov
fists
sbb
inc
cmpl
cmp
and
lcall
scas
mov
adc
adc
push
dec
shlb
xchg
gs
rolb
push
jnp
lcall
mov
sbb
and
fnstsw
mov
push
xchg
test
lcall
adc
push
sub
nop
popa
inc
rcrb
xchg
adc
mov
aaa
sbb
movsb
or
push
pop
in
aad
mov
xchg
jbe
cmp
add
arpl
inc
mov
shl
movsl
dec
incl
sbb
fcmovnu
outsb
daa
dec
mov
push
into
imul
decl
adc
popl
mov
cld
or
lea
mov
and
stc
pop
inc
jle
ljmp
icebp
dec
stos
mov
adc
push
stos
inc
xorl
xlat
insb
rorl
pusha
fldl
ljmp
cmp
adcb
dec
scas
movsl
call
jmp
out
and
mov
test
sbb
adc
pop
andb
ret
in
repnz
pop
mov
hlt
mov
int3
inc
mov
rorl
imul
imul
cmpsl
pusha
mov
lahf
insb
push
jb
adc
mov
or
cld
pop
inc
pushl
and
cmp
xor
push
call
sahf
jl
mov
pushf
ss
and
loopne
pushl
clc
lcall
inc
pop
adc
dec
cmp
rorl
test
inc
in
push
in
ret
cmp
cs
clts
jb
dec
add
mov
sbb
push
pop
cli
cmp
cltd
mov
popf
iret
inc
setle
stos
into
insb
je
subl
sbbb
data16
mov
rcll
xchg
fxam
mov
mov
dec
mov
bound
pushf
dec
push
sbb
call
and
sbb
cmpsb
jmp
pop
cld
ror
sub
cs
aaa
dec
or
fnstsw
decl
test
pop
pop
push
arpl
daa
xchg
cmp
push
out
call
pop
push
int
daa
cmp
lea
and
add
lahf
add
rcr
adc
adc
dec
pop
jg
hlt
scas
inc
adc
sub
push
pop
das
imul
insl
and
repz
incl
repnz
sub
push
or
stos
or
pop
jae
ja
mov
fbstp
mov
cltd
jo
aaa
call
mov
lea
test
pusha
nop
push
cmpsl
imull
loopne
sub
add
pop
cli
test
adc
xor
lock
frstor
movsl
mov
xchg
in
adc
jmp
push
mov
cpuid
repz
sti
out
rclb
fiadds
xlat
bnd
lcall
mov
jge
jae
out
loope
pop
xchg
ret
xchg
xchg
fdivrs
decl
mov
mov
scas
mov
sub
roll
aas
out
out
mov
lcall
add
lock
jo
pushf
fsubs
stos
push
arpl
mov
dec
jg
jmp
mov
gs
pushw
xchg
and
test
jg
inc
aas
sbb
int
mov
xchg
inc
lods
mov
sar
call
jmp
cmp
repnz
pop
xor
and
adc
mov
fwait
cwtl
xchg
fistps
fidivrs
aad
pop
sti
pusha
rclb
dec
dec
mov
popf
movsl
cmpsb
mov
incl
movsl
fisubs
jae
pop
lods
mov
dec
fstpt
xorb
out
lcall
xchg
mov
jmp
xchg
pushl
push
jnp
lret
sbbl
inc
push
ljmp
or
jge
and
sbb
out
out
and
movaps
or
imul
add
mov
scas
rolb
ss
lahf
enter
and
divb
aaa
out
and
fs
rorb
push
lods
cmc
sbb
mov
shl
iret
push
ret
adc
ljmp
dec
jae
andb
adc
repnz
xchg
call
call
cli
xor
subl
pop
stc
and
mov
adc
mov
push
mov
inc
aaa
mov
or
pop
out
inc
jp
in
and
js
loop
aad
int
cmp
lret
sarl
call
sub
mov
mov
sub
cmp
lcall
add
inc
xchg
pop
loope
mov
pop
aaa
fwait
nop
insl
mov
dec
fwait
jnp
sub
mov
fcmovb
and
shrl
hlt
incl
dec
pop
sub
xchg
pop
sub
shl
test
or
lcall
test
cmp
xchg
hlt
jne
je
sahf
enter
xor
mov
insl
lea
cmpsl
inc
insb
popa
push
jbe
push
outsl
ljmp
in
jmp
sbbl
mov
lods
dec
jb
cmc
lds
xchg
sbb
les
shlb
cmc
jns
jne
mov
dec
test
pop
cli
jl
leave
arpl
icebp
inc
adc
lock
xor
call
lcall
fstpl
pop
add
test
call
out
jle
loope
das
jns
loope
loope
imul
stc
lods
mov
xchg
jno
inc
stos
in
fldcw
lds
ljmp
pop
lret
cli
stos
xor
out
mov
xchg
cmc
jg
jmp
test
cltd
lods
outsb
cwtl
and
mov
decl
cld
adc
adc
pop
fsubrs
in
sub
lods
loope
jmp
call
jge
jge
shll
scas
lret
outsl
xor
jmp
stos
sub
mov
push
stos
shll
icebp
xchg
pop
pushf
xlat
dec
in
mov
incl
pop
insl
pop
lcall
les
xor
mov
insl
arpl
cmpsl
inc
adc
or
xchg
mov
xchg
cmc
pop
stos
dec
fisubs
mov
jo
sub
mov
mov
or
cmpsb
fs
lods
inc
sub
sbb
fwait
cltd
push
call
incl
inc
lcall
movsb
or
orb
xor
pushl
push
in
jl
loop
test
mov
adc
adc
incl
out
popl
cmp
mov
stc
enter
lcall
pop
push
jp
sub
loop
push
add
gs
dec
sarb
sub
les
decl
push
sbb
adc
push
addr16
pop
aam
jmp
and
fstps
ljmp
pop
mov
je
adc
xchg
cmp
fwait
jne
adc
incl
cmp
adc
das
sub
xchg
int3
adc
aas
pushf
movq
jnp
inc
cmpb
adc
arpl
pop
in
sahf
out
lcall
mov
sbbb
out
jmp
imul
mov
jmp
pusha
mov
into
lret
xchg
push
push
lcall
shlb
outsl
in
dec
xchg
fiaddl
dec
movsb
dec
aaa
sub
lcall
add
mov
stos
aam
std
scas
stos
add
call
pop
and
mov
lock
pop
sbb
mov
dec
pop
mov
in
call
adc
xchg
push
repz
dec
sub
movl
fldcw
icebp
xchg
xchg
push
cmc
sub
dec
mov
adc
jg
jg
mov
adc
mov
mov
push
sub
push
jmp
lahf
ret
fmull
outsb
in
cmc
dec
daa
pusha
and
cld
jg
mov
cld
insb
xchg
stos
mov
imul
inc
ret
pop
jmp
xorl
sbb
imul
sbb
imul
mov
test
ljmp
cld
pusha
jae
or
sbb
mov
mov
push
pop
xchg
aaa
shll
sbb
repnz
mov
mov
inc
adc
push
sti
fcoml
test
pop
sub
and
jg
test
xchg
lcall
loopne
stc
sti
cmc
lret
sub
mov
push
dec
sbb
fcomip
ljmp
push
mov
and
xlat
repz
loope
fs
sub
xor
test
repz
pop
lods
mov
je
out
pop
adc
adc
jno
in
aam
cmp
xor
mov
ljmp
es
or
sbb
push
shlb
into
xor
outsb
bound
clc
pushl
js
ror
jmp
out
inc
jmp
mov
aam
mov
push
mov
decl
xchg
ss
ja
aas
sub
clc
pusha
scas
adc
cli
jle
or
ret
popf
clc
sbb
repz
dec
jg
lcall
push
aam
mov
adcb
mov
aam
lods
outsl
incl
lahf
add
xchg
inc
lock
and
and
icebp
mov
fs
out
int3
sarb
mov
xchg
fwait
xor
xchg
pop
cmp
mov
push
jg
ljmp
ret
jl
xor
fsubrs
xchg
iret
add
pushl
xor
jp
jae
movsl
out
stc
jp
ja
add
sbb
ds
lods
gs
call
insb
inc
inc
repnz
lret
mov
subl
into
leave
xor
push
rclb
mov
in
jns
jmp
pop
subl
shrl
arpl
popa
or
xlat
ljmp
iret
subb
cli
fstpl
filds
aad
subb
lea
inc
and
or
mov
in
dec
pop
sbb
mov
insb
jb
iret
pop
lods
call
lods
jbe
imulb
scas
lea
cli
in
mov
ret
mov
xor
xchg
aad
cmp
adc
xchg
inc
sti
loop
pop
and
ljmp
leave
sbb
add
movsl
dec
addr16
mov
dec
xor
shlb
inc
xlat
jmp
jg
rcrb
mov
gs
jno
adc
push
xchg
mov
sar
decl
or
fwait
add
pop
sbb
lds
cmpl
icebp
lret
push
or
fdivrp
in
clc
lret
test
xor
jle
inc
dec
add
push
in
adc
pushf
or
int3
setae
or
push
dec
cmpb
cmp
push
pop
adc
fidivl
mov
push
jae
movsb
ds
call
hlt
mov
add
aas
les
out
lcall
add
adc
incl
bound
cmc
in
scas
sti
ss
xor
adc
cmp
push
aaa
std
out
ss
aam
ror
xchg
push
cmp
dec
addb
ljmp
in
jns
sub
sbb
int3
sbb
mov
and
std
rep
lcall
decl
daa
add
cmp
jle
pop
repnz
adc
das
lock
bound
mov
inc
mov
jg
sub
adc
ljmp
inc
fimull
pusha
aaa
mov
push
push
iret
sbb
mov
pusha
push
jmp
jno
fildl
xchg
xlat
dec
push
cmpsl
dec
imulb
mov
mov
mov
cld
ficoms
fistps
lret
mov
cli
sub
and
mov
cmc
add
sbb
pop
xchg
and
hlt
mov
lods
fistl
jno
pushf
mov
int3
aas
pop
jle
jl
je,pn
incl
pusha
je
pop
jne
cld
sub
in
inc
pop
and
into
cmp
pop
sub
sbb
push
inc
in
hlt
imul
or
daa
int3
adc
ljmp
idivb
outsl
andl
test
leave
jmp
mov
in
loope
test
dec
or
sub
xor
mov
lcall
stos
lea
or
rcrl
xor
pop
and
xchg
jmp
icebp
pop
or
pop
cld
test
stos
mov
iret
jnp
call
iret
test
pop
clc
decl
or
mov
push
adc
sbb
and
jmp
movsl
negb
add
jno
cli
adcl
pop
mov
int3
ret
jl
ret
std
call
in
mov
imul
push
dec
add
inc
mov
mov
push
jmp
ljmp
add
shrl
cmp
mov
mov
lret
addr16
sbb
incl
test
dec
xchg
lret
jp
lea
mov
pusha
test
dec
and
cmp
mov
call
lock
shrb
cmp
xlat
mov
notrack
fcomip
ficoml
mov
fnstenv
lods
or
or
call
pop
incb
xchg
cmpsb
dec
mov
sbb
js
leave
jle
ljmp
sbb
stos
cmp
or
in
sbb
cmp
rcrb
mov
fs
decl
push
outsb
test
mov
pushf
add
insb
out
cmc
and
pop
clc
add
mov
pop
mov
in
push
jae
xor
inc
push
call
stos
lds
push
inc
pop
cmp
cwtl
lock
mov
jg
icebp
mov
push
cmpsb
fildll
add
jnp
daa
or
jmp
hlt
std
mov
cli
cmp
cmc
xchg
mov
xor
test
stos
dec
rcrb
push
decl
fcmovbe
stos
push
shr
or
into
push
dec
std
test
add
pop
lcall
sub
mov
pop
mov
inc
pop
adc
mov
enter
push
ret
loopne
ljmp
pushl
mov
push
clc
pop
or
fnstsw
sub
sbb
and
icebp
jns
mov
mov
test
outsl
add
jmp
or
xor
mov
out
aam
adc
lods
jbe
cmp
aam
push
rcll
xchg
add
shrb
rcrb
lcall
movsb
sub
incl
mov
fwait
adc
fs
jg
inc
jecxz
adc
sbb
lds
leave
loope,pn
call
lcall
in
inc
sbb
fnsave
popf
popa
gs
div
fisttpll
cmc
out
cmp
repz
mov
call
das
xchg
mov
cmpsl
je
sbb
adc
sub
aas
scas
enter
les
mov
pop
ret
in
jg
inc
mov
ror
add
out
int
fptan
mov
mov
ja
fwait
jae
into
mov
adc
sub
mov
ljmp
or
pop
lahf
mov
lock
gs
cld
inc
insl
add
push
mov
mov
mov
andl
pop
push
dec
outsl
inc
decl
sub
jne
outsb
mov
xchg
outsl
popf
lahf
xor
fldt
dec
dec
mov
cmp
pushl
mov
movsb
movsl
cmp
cmpl
repnz
sbb
js
mov
lds
mov
ljmp
xchg
out
dec
pusha
pushl
clc
mov
mov
mov
jb
jmp
popa
mov
mov
push
lea
call
and
icebp
icebp
mov
mov
or
mov
inc
lret
gs
repz
adc
hlt
pop
daa
mov
lods
cmp
jo
and
xchg
out
jp
add
xor
clc
pop
leave
and
mov
push
hlt
es
rcll
sahf
sahf
aam
inc
pop
jns
mov
push
jne
in
repnz
add
mov
and
sbb
xchg
nop
sub
daa
mov
mov
out
xchg
push
and
cmp
adc
adc
jle
iret
sub
movsl
lret
sub
shll
int
push
xchg
push
int3
xchg
sub
mov
lods
incl
mov
push
sar
aaa
insl
pusha
jne
enter
rorb
cmp
ret
lds
jae
pop
push
xor
stc
add
hlt
fstps
daa
outsb
xchg
push
decb
cmc
lcall
jo
mov
push
push
xchg
in
xorb
not
xorb
or
jmp
rol
mov
and
mov
cmpb
loopne
push
clc
inc
or
jg
mov
xchg
lcall
dec
mov
mov
aam
mov
jp
jb
mov
cmpsb
xchg
jge
adc
inc
pop
fwait
test
pop
mov
or
js
mov
bound
incl
fs
sbb
popf
stos
push
sbb
stc
imul
ss
cmc
lods
mov
xlat
in
orb
je
push
mov
inc
shll
mov
lcall
cmp
and
cs
sub
lret
das
out
xor
into
jg
add
out
test
es
ljmp
outsb
out
aaa
js
je
inc
mov
loop
mov
outsb
xchg
jge
fs
cmp
mov
aaa
cmp
repnz
lahf
mov
bound
clc
daa
cmp
nop
ljmp
mov
ficoms
cltd
mov
rcrl
out
mov
bswap
mov
imul
in
fimull
nop
clc
cmp
pop
icebp
addr16
call
pop
pop
stos
cld
cmp
testl
mov
cmp
pop
push
push
push
jno
pop
jns
popa
js
out
test
fadds
adc
pop
push
mov
mov
jecxz
pop
fsubl
cld
mov
out
mov
mov
xor
jno
decl
out
cmp
mov
shl
fmull
mov
arpl
and
cmp
jns
mov
cmp
push
in
lods
cmp
je
cwtl
sbb
mov
jmp
inc
repnz
pusha
fwait
xlat
test
mov
cmp
push
mov
jl
sbbb
loope
cltd
mov
or
sbb
psubw
shrl
pop
and
mov
cli
jmp
and
mov
faddl
mov
enter
sub
xchg
jg
call
xor
push
js
mov
movsl
fdiv
sbb
rol
lcall
jmp
mov
jns
test
cmp
andl
scas
mov
incl
loop
add
and
es
and
aad
fsubl
xchg
ljmp
cwtl
cwtl
cld
cmp
push
js
mov
ret
inc
jg
loopne
arpl
mov
cmp
mov
cmp
mov
lret
xor
sbb
js
jns
mov
sar
jmp
xor
sub
dec
push
leave
jge
pop
dec
icebp
arpl
push
add
xchg
aaa
cli
call
imul
shll
orl
lcall
scas
cmp
leave
sub
popa
mov
pop
mov
enter
cwtl
jbe
xchg
pop
repz
ljmp
pop
mov
lahf
xor
gs
repz
sbb
or
incl
push
dec
xorl
js
stos
lret
out
lea
mov
lcall
clc
inc
mov
rcrl
jno
lods
es
add
movsb
cs
cmp
ljmp
ret
mov
dec
jns
sbbb
jno
scas
mov
xor
jae
in
jno
pop
push
push
xchg
add
xchg
xchg
sub
mov
movsb
aam
mov
xchg
sti
mov
adc
inc
insb
xchg
das
and
cli
decl
xchg
pop
inc
test
jge
dec
aam
jb
inc
lea
in
xchg
mov
mov
movsb
sbb
stos
shr
fistpl
xor
mov
xor
jg
out
cmp
adc
bound
jg
aas
pop
xchg
dec
out
inc
dec
fidivs
outsl
mov
ljmp
push
addr16
adc
push
loopne
lods
inc
or
jecxz
fidivs
and
jno
pushl
lcall
mov
mov
sarl
and
ret
mulb
pop
jns
out
bound
add
ljmp
paddsb
dec
xor
push
jl
cmp
adc
pop
leave
inc
jae
call
imul
adc
movsl
or
xor
add
xlat
sarl
stos
or
leave
jbe
sbb
repz
data16
fcomi
in
pop
comiss
mov
dec
ret
inc
subb
mov
mov
pushl
clc
dec
sub
push
scas
sub
outsl
sub
dec
or
data16
lcall
dec
adc
out
dec
adc
hlt
pop
mov
imull
daa
sbb
dec
xchg
call
fldcw
cmp
es
jns
mov
mov
add
or
std
out
es
jmp
jecxz
cli
and
pushf
push
xchg
push
jne
pop
js
pop
mov
sbb
dec
jge
jg
push
aaa
sub
in
pushf
mov
add
or
movsl
data16
call
push
push
icebp
cmp
jae
imul
clc
cltd
push
mov
pusha
pop
mov
jmp
dec
fld
xlat
adcb
jnp
test
sti
mov
imul
inc
jg
jno
pop
push
aad
aam
js
fbstp
mov
out
lds
and
and
adc
pushl
adc
adc
jne
jne
and
push
lahf
out
stc
xor
decl
std
mov
push
xchg
pop
movsl
xchg
sbb
mov
push
aaa
clc
fisttps
arpl
push
adc
das
jb
add
pop
and
js
mov
data16
jae
lods
mov
ss
push
pop
xchg
cwtl
push
fistpl
jmp
data16
filds
xchg
jle
and
dec
lods
imull
mov
mov
stos
lcall
repnz
decl
add
adc
mov
adc
inc
or
pushl
loopne
add
ljmp
aaa
xor
cmp
ljmp
mov
jp
bound
cmp
xchg
cmp
test
jg
mov
call
xchg
adc
mov
mov
mov
aas
or
inc
add
clc
test
imul
jmp
xchg
sbb
dec
inc
pusha
lahf
mov
pop
dec
push
clc
mov
out
jle
incl
les
frstor
movsl
out
adc
jno
ljmp
sub
sti
add
mov
dec
loope
or
inc
fcoms
push
mov
xchg
pop
mov
ret
xor
xor
sub
add
dec
inc
lods
mov
push
movsb
fwait
popa
sbb
cwtl
xchg
shlb
pushl
sub
inc
xchg
cmp
and
ljmp
daa
and
adc
pushl
jo
mov
nop
fildll
js
jg
jmp
push
dec
js
loopne
sahf
daa
pop
sub
or
mov
and
fstpl
push
push
jp
imul
popa
xor
int
push
sbb
les
ss
pop
sub
sti
ljmp
fdivl
iret
ljmp
and
adc
sub
adc
iret
sub
adcb
mov
test
outsl
xor
lods
and
jne
push
inc
pop
leave
dec
mov
mov
mov
lods
neg
pop
push
sbb
or
jae
jb
in
xlat
repz
ror
push
dec
add
inc
outsl
mov
jmp
stos
inc
mov
mov
sbb
cli
mov
push
dec
lods
add
pop
add
push
stos
loopne
add
mov
cwtl
xor
push
xchg
call
pop
jecxz
or
jo
push
cmp
sbb
insb
jns
or
int
or
lds
call
pop
movsb
ljmp
mov
mov
and
fistps
mov
push
in
and
pusha
cli
mov
sbb
adc
ror
daa
sub
popf
sbb
lret
sbb
or
movsb
mov
ljmp
int
js
bound
sbb
decl
outsl
insb
add
cmp
int
jnp
lcall
xchg
mov
bound
loopne
std
loopne
jmp
out
mov
lahf
inc
push
push
icebp
pop
out
jle
fldcw
mov
push
adc
add
mov
push
sarb
or
je
xchg
out
mov
or
or
add
outsl
femms
mov
outsb
pop
incl
push
adc
std
and
adc
mov
ljmp
mov
cltd
sbb
call
out
mov
jmp
test
mov
or
mov
pushf
push
sbb
xor
adc
dec
in
mov
sub
clc
pushf
insl
sub
ljmp
loopne
clc
push
pop
ss
sbb
fisttps
pusha
fcmovb
nop
repnz
imul
cmp
outsb
fwait
fs
xchg
sub
mov
mov
call
jmp
sub
mov
mov
call
ljmp
or
adcl
pop
inc
call
les
gs
adc
ljmp
jg
sar
mov
cmp
jo
mov
mov
dec
lcall
inc
jp
outsl
pop
bound
mov
int3
or
xor
push
into
jg
xchg
cmpsl
push
cmp
adc
xor
or
push
decl
lret
or
sub
or
int3
mov
loop
mov
push
jg
jnp
dec
xor
popf
ljmp
mov
call
mov
pop
mov
sbb
dec
rorl
push
arpl
jg
fndisi(8087
pop
mov
aad
jecxz
mov
test
dec
mov
or
dec
mov
lcall
sbb
ret
cmpsl
cmp
scas
cmp
inc
scas
rolb
outsb
in
ljmp
adc
dec
or
jmp
inc
movsb
add
popa
daa
in
adc
test
sub
add
dec
shrb
jo
or
push
xor
dec
insb
std
int3
addr16
pop
ljmp
int3
xchg
push
push
jmp
insb
mov
pop
mov
jnp
adc
mov
sar
arpl
aam
mov
arpl
data16
repz
sbb
lcall
pusha
xlat
xlat
or
and
add
call
gs
pop
repnz
push
daa
mov
mov
test
in
loopne
pop
scas
in
outsl
cmc
pop
jl
pop
enter
sbb
fmull
jg
mov
mov
sub
jmp
or
iret
or
jg
pushl
pop
adc
sahf
movsb
lahf
into
and
xorb
and
xorb
sarl
jno
cli
call
fmull
jmp
sbb
and
jnp
push
push
fildll
push
enter
xorb
mov
lock
sarb
int
nop
out
out
add
xor
call
push
mov
mov
mov
in
xor
iret
insl
inc
sar
mov
bnd
dec
push
mov
aas
or
mov
push
xorb
lcall
mov
sub
mov
cmpsb
sub
and
ljmp
push
outsl
fstpl
dec
outsl
xchg
sbb
push
fxch
clc
into
adc
mov
jp
mov
roll
sub
out
stos
mov
in
in
push
repnz
and
pop
jg
ljmp
pushl
xchg
imul
xor
aaa
call
jecxz
jno
std
call
dec
mov
jns
sub
cmc
mov
push
mov
pop
adc
jl
add
arpl
sub
add
mov
xor
add
sub
jg
sbb
repnz
or
mov
insb
pop
stc
hlt
incl
jmp
cli
fisubs
add
clc
movsb
insb
cli
xor
outsl
cli
sub
in
xchg
jp
jne
xchg
in
mov
push
imul
pushl
sub
pop
popa
and
mov
jb
movsl
shr
xchg
pushf
add
sub
mov
clc
jmp
stos
push
jnp
aad
mov
sbb
inc
rcrl
dec
jg
pop
rcl
sub
jns
pop
and
lahf
cmp
push
push
and
loopne
and
jmp
mov
mov
gs
fs
sub
sbb
mov
sbb
incl
pop
lock
push
pop
sbb
dec
insl
add
shr
decl
sub
je
sbb
ljmp
out
idiv
ljmp
jo
pop
dec
push
pop
cmp
stos
or
mov
adc
call
mov
sbb
insl
cltd
and
shrb
cld
mulb
jg
pushl
push
xchg
leave
bnd
mov
and
and
dec
and
js
xchg
decl
std
adcb
jp
sbb
dec
subb
js
pop
inc
or
lret
ss
loopne
pop
out
dec
dec
lods
cmp
lods
jp
ret
fidivl
sub
push
mov
addr16
fcomip
sub
lock
fsubrs
pop
cmc
outsl
dec
mov
lods
call
ret
js
add
sahf
bound
and
icebp
outsl
insb
call
or
decl
sub
xor
sti
gs
loopne
ljmp
scas
insl
pusha
cwtl
add
lret
or
mov
lods
jecxz
sub
das
or
je
push
or
fistpll
jmp
jnp
outsl
mov
sahf
mov
pop
stc
icebp
dec
scas
jp
push
js
call
add
icebp
ds
in
jge
pushl
mov
int
loope
mov
icebp
xor
xor
outsb
xchg
mov
popf
xchg
mov
cmpsl
xchg
lcall
mov
jp
icebp
das
xchg
push
pop
aaa
jg
jecxz
inc
dec
ja
mov
push
sub
in
jle
cmp
mov
adc
out
jb
push
decl
dec
xchg
cmp
out
jmp
or
pop
pop
xor
mov
das
icebp
mov
mov
xchg
lods
xor
jns
jae
pop
lock
or
add
aad
lcall
xchg
cli
pop
clc
jecxz
into
pop
aam
sti
daa
jno
pop
dec
xor
decl
push
test
ficompl
ret
cmp
xchg
jge
test
mov
loope
push
pushf
shlb
insb
sub
jg
mov
ljmp
mov
dec
dec
mov
test
popf
addr16
ss
sub
mov
scas
jle
popl
cmc
jecxz
cli
scas
xchg
in
cli
pop
add
jg
aad
xchg
push
adc
adc
mov
mov
pop
mov
mov
incl
jl
pop
ret
sbb
pushl
mov
sub
ljmp
add
sub
sub
dec
rcrl
pop
xor
pop
jle
sbb
mov
clc
incl
lret
or
inc
ror
leave
dec
and
loope
mov
add
sub
push
arpl
pop
and
sbb
int3
pop
ljmp
cmc
xor
add
ss
adc
mov
mov
notl
pop
insl
rclb
jmp
mov
stos
roll
xchg
lock
mov
lds
push
hlt
mov
sbb
pop
clc
pop
call
jecxz
inc
mov
test
and
or
leave
icebp
mov
sbb
xchg
jecxz
xor
lcall
adc
in
fstpl
cli
outsl
addr16
in
test
pop
fwait
mov
decl
jno
lds
mov
cmpsb
daa
insl
negl
adc
push
icebp
call
aad
push
inc
adc
leave
xor
jmp
jns
xchg
ds
sahf
cmc
orl
clc
scas
jae
lcall
popa
jecxz
push
outsb
mov
or
mov
and
clc
test
fninit
lcall
cli
and
pop
jp
mov
cmp
and
ljmp
mov
dec
leave
in
call
jle
adc
dec
adc
test
jecxz
fdivp
xchg
mov
lret
incl
or
sbb
fstl
clc
repnz
das
fs
push
jge
inc
jge
lahf
cmc
jmp
mov
cmpsb
sahf
movsl
inc
ficoms
lcall
in
jb
std
add
das
bound
insl
push
push
and
lods
cmovns
mov
repz
cmp
push
xor
jae
iret
ljmp
pusha
pop
xchg
and
mov
sahf
and
push
mov
aaa
cli
lcall
mov
inc
mov
rcl
add
dec
add
ret
push
ljmp
xor
lahf
outsb
lods
inc
ja
adc
mov
or
push
jg
pushl
stos
adc
shll
jbe
js
inc
xor
roll
add
decl
xor
fldt
pop
add
leave
pop
fidivrs
js
fildll
mov
cltd
ljmp
jle
jg
incl
loope
hlt
daa
mov
mov
xor
inc
jne
push
fimuls
lret
and
adc
inc
addr16
scas
jg,pt
push
push
inc
in
fcoml
jmp
fldt
stos
xor
push
mov
sbb
pop
mov
xchg
pop
inc
add
mov
mov
or
or
icebp
add
loop
ljmp
hlt
jns
test
lahf
or
push
movsb
fisubl
aad
push
clc
std
call
mov
adc
fchs
lcall
pop
jp
leave
adc
cmc
pop
lcall
jecxz
or
sub
std
decb
push
insb
hlt
aaa
in
sub
call
aaa
shll
pop
loopne
out
ljmp
or
out
adc
ret
xchg
ret
xchg
lods
popf
mov
cmc
call
sbb
call
jg
test
out
aam
mov
mov
sbb
sub
dec
mov
push
mov
cmp
das
data16
lock
lock
and
sub
and
xchg
push
je
jmp
mov
jb
inc
mov
decl
std
icebp
cmc
adc
sub
adcl
or
out
jmp
outsl
push
stos
hlt
in
popf
dec
stos
fincstp
xchg
cmpsl
adc
mov
bnd
pop
lcall
repz
push
jns
mov
lock
adc
js
shl
jmp
mov
sar
lea
cmp
aad
inc
jge
sbb
sbb
ljmp
sar
pop
stc
push
xchg
cld
or
inc
loope
mov
incl
inc
or
sbb
or
lods
xor
xor
les
cmpb
decl
xchg
push
lods
das
fwait
std
rcll
popf
mov
mov
testl
popf
sbb
call
sub
sbb
cmp
ljmp
or
push
in
imul
mov
mov
adc
jle
jg
adc
cmpsb
cld
cmp
add
aas
mov
sub
pushf
imul
mov
inc
adc
rol
xchg
icebp
stc
cli
aad
sti
bsr
and
sarl
push
movsl
push
pop
push
push
cmpsb
sub
add
incl
jg
mov
cmp
icebp
push
cmpsb
lahf
jg
jnp
cmc
call
sbb
pushf
cmp
test
cmp
inc
lods
call
pop
ja
lret
mov
jo
das
andb
and
mov
pushf
cmp
lods
push
jle
sub
dec
nop
test
arpl
stos
pushf
pop
imul
mov
jno
aad
xchg
add
pop
loopne
test
dec
clc
test
cltd
jne
in
outsb
mov
add
xchg
incl
lock
adc
das
inc
cmpsl
incl
test
leave
mov
mov
jmp
mov
sbb
ljmp
stos
cmp
in
les
dec
inc
adc
dec
sub
cmc
mov
inc
pop
mov
nop
scas
iret
push
clc
in
loopne
mov
test
xor
ret
daa
cmpsb
insb
subb
in
dec
inc
test
pop
mov
xchg
pop
inc
mov
xor
loope
call
cli
pop
mov
jne
sbb
idiv
mov
pop
inc
adc
sbb
cld
jmp
mov
lret
mov
cltd
xchg
jns
jne
sub
inc
ljmp
hlt
lods
add
aaa
aam
lock
dec
cs
ficoml
xchg
pushf
mov
xchg
push
pop
pop
lods
out
addb
loop
jne
sub
adc
in
push
mov
hlt
shrd
call
mov
push
andb
lods
jg
dec
mov
das
or
addr16
ljmp
arpl
fcoml
dec
mov
mov
call
mov
mov
decb
or
sti
and
in
andl
push
adc
jns
and
push
je
dec
jb
pushf
ret
ljmp
cwtl
imul
xor
add
in
rcrl
hlt
lods
in
sub
mov
add
loop
fstps
dec
cmp
xchg
and
pushf
pop
int3
incl
insb
push
dec
adc
dec
xchg
sbb
aas
and
icebp
xorl
imul
repnz
into
mov
jmp
sbb
into
loope
sti
test
fdivrl
ret
iret
mov
mov
outsl
cld
jmp
pop
push
pop
in
das
cmp
out
ficoms
call
dec
and
mov
movsl
dec
mov
fldt
and
adc
mov
pop
cli
dec
fprem1
add
push
cmp
jns
push
sarl
inc
adc
jle
and
mov
sub
hlt
jg
pop
and
idiv
ret
mov
and
push
push
lds
fucomip
xlat
popf
syscall
adc
jecxz
aaa
adc
jge
leave
aaa
out
jp
lcall
inc
sbb
stc
hlt
push
sbb
jo
xor
xchg
xor
or
jle
pop
negl
sbb
dec
dec
adc
movsb
jge
sub
xchg
data16
mov
cmpsb
fs
jp
ret
pop
call
cmp
aad
sbb
and
and
incl
into
xor
stc
aam
pop
adc
decl
xchg
psubusw
mov
mov
repz
ror
lcall
pushl
lahf
inc
push
jl
jmp
fwait
je
iret
popf
jp
sahf
mov
bound
pop
xlat
in
sub
negl
ljmp
ror
jbe
fildl
cmp
mov
push
mov
jne
lea
lock
arpl
aaa
aad
sbbl
adc
ljmp
xor
mov
fistpll
daa
in
push
ljmp
pushl
nop
xor
mov
mov
pop
cld
cs
pop
xchg
lock
push
sarb
das
mov
es
stos
repnz
add
or
jecxz
fdivr
lcall
jbe
repz
pop
xor
stos
push
rolb
fcomps
xor
inc
stc
jmp
inc
cmp
or
rcrl
cli
cmc
insl
test
xchg
add
mov
dec
xlat
outsl
inc
sub
stos
or
sbb
push
dec
divl
test
loope
cld
pushl
clc
or
push
xchg
adc
ss
mov
into
cmp
sub
xchg
shrb
decl
adc
insl
cmp
shl
sbbl
cwtl
sti
push
arpl
sub
jg
test
xorb
sub
mov
mov
jg
jne
jg
incl
daa
incb
or
jmp
mov
decl
das
jne
std
mov
sbb
jge
inc
mov
ds
ficomps
jbe
jnp
cmpsl
jb
xchg
ljmp
pushl
cmp
mov
lds
es
lahf
fisubl
mov
pop
orl
sti
push
in
mov
pop
movsl
sub
pop
out
adc
jg
adc
and
or
add
bound
add
jmp
pop
jle
in
ret
push
test
dec
mov
adc
sbb
cmpsl
jg
jg
pop
lret
inc
out
lret
push
mov
roll
outsb
or
inc
jg
inc
aad
or
jo
jbe
scas
movsl
es
call
outsb
sub
sbb
cmpsb
call
std
inc
xor
and
test
in
adc
or
loopne
int
leave
jge
jp
push
mov
das
mov
adc
fst
inc
vpsubw
adc
push
or
leave
in
and
movsl
ljmp
jo
cmp
xorl
push
inc
lods
push
arpl
xchg
loop
icebp
ljmp
cli
movsl
push
fs
pop
outsl
pop
xchg
scas
fidivs
mov
inc
pop
clc
jmp
dec
cmp
stos
and
or
gs
push
sub
xor
int3
test
pop
mov
lret
out
jno
mov
ljmp
call
push
push
push
push
pushf
cmp
and
enter
jno
call
call
and
imul
mov
pusha
shrl
sar
jp
aaa
stos
sub
scas
sub
sti
daa
jg
cld
pop
pusha
xlat
pop
in
cmp
sti
or
test
jbe
rcr
and
iret
sbb
fcomp
xchg
mov
sub
mov
push
sahf
in
push
push
sbb
fiadds
inc
sar
jmp
sbb
cmp
cmpsb
mov
pop
std
ljmp
lods
test
mov
js
inc
mov
jg
or
loop
mov
insl
ret
cli
or
mov
add
or
push
or
xor
push
fucomip
jmp
pop
push
stc
xchg
cmp
mov
outsb
jne
enter
pop
incl
pop
cltd
sbb
or
daa
cmp
or
inc
sbb
call
mov
fmulp
mov
push
ss
repnz
into
insl
cmp
mov
push
stc
subl
mov
icebp
mov
lds
call
fnstenv
ror
mov
imull
lahf
inc
aaa
incl
push
lea
cmp
jno
cli
jno
loope
fistps
daa
push
push
js
cmpsl
cmpb
xchg
enter
sahf
xchg
loop
push
sbb
hlt
ds
inc
or
jmp
addb
fstpt
decb
dec
jl
scas
ljmp
pushf
mov
mov
daa
dec
fwait
cmp
jb
arpl
out
je
push
add
mov
and
jnp
ljmp
clc
mov
jae
push
mov
cmc
call
jmp
scas
out
mov
add
stos
add
dec
movsl
sbb
pop
out
lcall
cld
std
hlt
sbb
inc
push
iret
dec
test
call
std
loope
fists
fstpt
idiv
pushl
fimuls
or
and
pop
add
pusha
les
cmp
pop
xchg
out
pop
clc
call
sti
jno
mov
scas
jb
dec
push
jg
les
mov
mov
stc
jo
or
xchg
push
les
insl
add
pop
and
sbb
xchg
lds
ljmp
pop
xchg
data16
inc
push
cld
fldt
or
movsl
inc
out
outsl
std
or
clc
sub
inc
aaa
das
loope
pusha
and
lock
stos
push
pop
mov
sets
lcall
dec
sub
outsb
xchg
xchg
sbb
add
xchg
or
nop
std
cltd
call
std
and
es
xorl
lcall
sbb
jg
and
and
shrb
push
rorb
push
addr16
call
gs
enter
cli
dec
mov
shrb
dec
mov
cmp
in
pop
out
in
pop
ror
xchg
jl
mov
scas
int
ficomps
push
xchg
push
in
xchg
mov
call
repz
int
jae
mov
aas
mov
in
pop
mov
fs
cmp
cli
pop
ljmp
dec
addr16
data16
xchg
adc
dec
pop
xchg
ljmp
or
push
fistl
rcrb
jno
arpl
lcall
or
mov
push
xor
js
ss
mov
jae
lock
lea
out
subb
in
gs
cli
sbb
xlat
and
dec
into
sub
int3
sbb
dec
pop
sub
add
pop
push
dec
cwtl
mov
pop
std
repz
sbb
lret
popa
loopne
pop
ljmp
adc
xchg
ja
insb
adc
lea
cmc
out
stos
loope
or
sub
je
push
out
or
lcall
pop
dec
xor
out
rcll
dec
out
stos
sub
cld
cmp
ljmp
pusha
inc
scas
notl
roll
jmp
repnz
gs
lods
add
call
mov
adc
repnz
int3
test
xor
inc
into
dec
jne
clc
push
iret
sbb
or
pop
call
fmuls
pop
repnz
xor
inc
rcl
negl
dec
lahf
or
mov
clc
dec
insl
sub
lret
push
stos
jno
call
ljmp
sub
not
jbe
xchg
aas
dec
clc
push
sarb
pop
clc
dec
es
pop
aad
jae
lds
xchg
dec
cwtl
incl
std
xor
push
push
les
jnp
lea
pop
loop
dec
je
scas
mov
scas
jge
cmp
insl
cmp
mov
out
std
pushl
pop
arpl
dec
lcall
test
and
sbb
mov
pop
mov
cld
outsl
mov
add
cli
push
shl
mov
mov
lds
xchg
and
fistpl
xchg
mov
push
rcrb
jb
sub
mov
pop
fnstsw
xor
xor
cld
ficoms
xor
lcall
orl
repz
lock
sub
aad
add
pop
lcall
std
std
mov
sub
cmpsl
pop
xor
loopne
jmp
pop
lea
fucomip
ljmp
add
and
mov
pop
pop
push
push
decl
jmp
adc
push
inc
jo
cli
into
mov
les
lcall
jg
dec
fcmovnu
test
xchg
and
in
push
and
jmp
in
call
repz
in
ljmp
xchg
sbb
cmpsb
add
cld
mov
dec
xor
inc
pop
inc
jg
jmp
and
repnz
jecxz
sbb
push
cwtl
xor
xchg
dec
rcll
mov
lods
or
pop
roll
pop
dec
loopne
mov
cmpsl
lcall
and
inc
lcall
jb
imul
arpl
cmpsb
stos
lret
add
decl
clc
mov
pop
inc
or
les
loopne
loop
mov
mov
incl
adc
xchg
or
adc
mov
ss
fistps
sub
inc
and
xor
pusha
add
testb
adc
adc
pushl
mov
and
push
ss
push
xchg
cmpsl
shll
in
test
bound
adc
push
cmp
xchg
pop
inc
push
adc
shrl
sbb
lea
sub
adc
arpl
clc
aaa
jno
push
mov
mov
add
add
call
aaa
call
sbb
es
fs
xchg
add
scas
aad
mov
push
xchg
or
js
cmpsl
or
int3
das
ds
adc
call
inc
xchg
adc
hlt
fbld
mov
subb
dec
insb
mov
fs
gs
jp
jecxz
out
and
mov
incl
push
jo
mov
loope
popf
sbb
sbb
dec
sbb
sbb
incl
xor
jne
aaa
mov
insl
scas
in
mov
xor
push
fucomip
sub
lret
mov
dec
inc
sbb
movsb
cmp
mov
pop
decb
xchg
mov
sub
mov
shlb
lret
and
push
add
push
imul
cld
ja
gs
jmp
mov
pop
sbb
mov
pop
repz
jle
add
clc
addr16
mov
popf
fstpl
dec
cmpb
shlb
outsb
push
js
mov
xchg
xorl
fiaddl
fucomip
dec
leave
sub
icebp
lea
jl
xchg
jmp
jae
jmp
mov
sti
leave
mov
bnd
pop
fldcw
movsl
mov
sbb
hlt
call
cs
addb
cmpsl
lcall
lcall
adc
mov
jmp
arpl
in
xlat
es
das
std
filds
push
pop
test
iret
lods
push
mov
xor
pop
aad
clc
jg
adc
mov
push
call
mov
loopne
xchg
jmp
inc
mov
lcall
inc
add
test
mov
push
jge
xor
and
aaa
dec
inc
jg
popf
das
xchg
mov
inc
sub
pop
cld
decl
dec
inc
or
dec
xchg
in
adc
mov
insl
push
add
and
ljmp
ss
jg
aas
cld
xor
xlat
fwait
push
addr16
mov
popa
xor
adc
jbe
ljmp
outsb
adc
cmp
pushf
pop
dec
fnstcw
add
mov
mov
pop
std
and
cmp
mov
mov
adc
mov
iret
pushf
clc
mov
into
pop
loop
incl
mov
push
fstl
xchg
ss
xor
insb
loop
xlat
add
cld
xchg
mov
jg
pop
movsb
lea
push
lcall
shl
pop
leave
int3
mov
push
push
idivb
gs
xchg
fcoms
jle
mov
pop
mov
adc
mov
pop
popf
mov
decl
pushf
pop
icebp
push
push
out
mov
push
pop
iret
mov
mov
sti
outsl
enter
add
and
xchg
add
lea
ret
jb
lret
mov
mov
std
push
lock
outsl
arpl
mov
sub
inc
out
lret
and
jo
incl
pop
inc
shll
jg
repnz
inc
sbbb
pop
push
test
push
repnz
stos
ljmp
out
rcrb
movsl
sub
xor
dec
scas
inc
in
inc
sti
pop
loope
add
scas
xor
xlat
pop
ljmp
dec
mov
cmp
iret
mov
pop
mov
into
popa
jne
into
aam
ficomps
in
cmp
int3
loopne
add
mov
stos
imul
sbb
mov
xchg
andb
ljmp
sub
in
mov
sub
aad
and
add
in
icebp
sub
stos
aad
lcall
cmp
and
mov
lods
push
cmc
stc
fdivrs
stc
jnp
pop
inc
jecxz
or
call
lock
inc
jmp
mov
es
adc
enter
xchg
cli
lcall
mov
mov
es
out
jp
mov
sub
loop
lods
push
mov
pop
orb
lds
jg
push
xor
push
loope
aas
dec
out
add
jne
sti
jmp
lds
sbb
std
in
fiaddl
lea
mov
push
cmp
jae
mov
hlt
rcrb
mov
aad
xor
or
adc
mov
add
pushl
push
testb
inc
pusha
mov
push
jle
stos
outsl
sub
call
adc
es
sbb
xchg
nop
or
push
mov
jl
pushl
sbb
mov
sub
dec
jno
pop
jg
dec
fistps
jmp
lea
and
imul
dec
jno
jl
lcall
sub
sbb
push
mov
pop
cmp
sub
mov
nopl
aad
inc
lcall
out
movsb
mov
and
sti
add
lock
lock
cltd
imul
clc
jnp
sbb
or
imul
sbb
xlat
xchg
aaa
cltd
mov
dec
data16
mov
testb
jmp
ljmp
push
pushl
jb
mov
mov
dec
aam
and
and
xchg
mov
sti
enter
addr16
sbb
inc
ljmp
sbb
into
imul
push
test
xchg
cmp
adc
mov
roll
mov
sub
or
fs
pop
movsb
mov
xor
ljmp
jns
pusha
cmp
push
out
cmpsb
adcl
sbbl
jg
pop
pop
push
ja
inc
xor
lea
movl
and
push
mov
ljmp
inc
out
cmp
dec
sub
fildl
mov
mov
sub
divb
sub
or
out
mov
shrl
xor
inc
cmp
js
push
lcall
mov
and
adc
fnsave
out
test
jne
outsl
push
incl
pushf
adc
mov
or
add
cmp
into
fs
xor
outsl
push
rol
mov
mov
xchg
jmp
aaa
pop
and
push
icebp
bound
add
push
icebp
mov
das
jnp
imul
call
mov
inc
pop
iret
pop
mov
in
jae
or
fisubrs
xchg
dec
xor
add
decl
push
mov
inc
pop
pop
add
popa
shl
in
and
sub
test
out
add
fdivs
call
sub
cwtl
lahf
pop
or
jg
jg
pusha
mov
jg
inc
mov
push
xlat
push
push
clc
das
hlt
incl
sub
ficoms
xchg
and
pushl
aad
orb
push
popf
xorl
and
jg
call
insl
mov
push
and
lcall
pop
and
xor
call
int3
cwtl
test
fbld
cld
pop
xor
push
xchg
pop
dec
mov
sbbl
cs
mov
or
hlt
add
push
hlt
mov
sub
loop
xlat
clc
mov
or
fistps
outsl
cmc
xchg
jle
fwait
sub
dec
mov
mov
loopne
incl
les
xor
popf
int3
adc
je
outsb
mov
ljmp
xchg
sbb
add
ss
lea
call
sub
icebp
inc
dec
mov
into
popl
arpl
ss
sbb
pop
jb
cmp
sub
jmp
jg
incl
pop
cmp
es
sub
push
xchg
sub
loopne
cmpsl
jbe
xchg
sub
out
xchg
insl
cmpsb
test
fwait
pop
jmp
adc
or
or
aas
jb
cmp
testb
pusha
mov
cmpsb
jge
or
call
pop
xor
mov
inc
or
jmp
or
popa
add
push
xor
bound
jmp
bound
mov
leave
imul
movsl
into
outsb
mov
xlat
pop
dec
int
jg
push
out
xchg
and
or
data16
rorb
jl
lcall
decl
fmul
insb
inc
loopne
xchg
in
pop
mov
insb
imul
ljmp
out
cmp
mov
pop
mov
fwait
negl
add
xchg
mov
jle
push
push
xchg
inc
pop
xor
xchg
aam
cmpsl
mov
lock
dec
test
push
icebp
outsl
icebp
inc
dec
sub
imul
clc
fisttpl
cmp
jg
mov
push
pop
fiaddl
adc
shlb
outsl
loopne
fstpt
xchg
pop
mov
pusha
mov
aaa
and
movsl
jae
lcall
nop
cld
push
push
mov
sbb
mov
repnz
roll
mov
jns
insl
ljmp
or
adc
fidivs
fs
ljmp
lcall
xchg
subb
stc
imul
xchg
repz
lock
xchg
stc
into
out
xor
test
jmp
pop
mov
mov
gs
popf
mov
pop
call
lock
pushl
sahf
adc
xlat
sahf
pop
push
insb
adc
hlt
subb
adc
jmp
lock
movsl
adc
repnz
adc
loope
mov
decl
repz
cmp
jg
dec
pop
leave
pop
fidivl
inc
insl
fwait
mov
fnstcw
outsl
std
incl
jge
mov
fcomi
and
xchg
test
mov
push
mov
dec
adc
jp
out
sbb
dec
mov
push
insb
rclb
icebp
mov
adc
mov
mov
fildll
or
inc
sub
popa
push
outsl
mov
aaa
pop
adc
xchg
xor
lock
mov
rcrb
test
add
je
pop
aas
ss
sub
xor
ljmp
rcrb
cmp
push
mov
add
movsl
stos
jge
xchg
mov
fwait
dec
or
jnp
xchg
sbb
rcr
cmp
fistps
inc
call
data16
cld
mov
es
mov
out
xchg
movsl
clc
lret
mov
xadd
mov
nop
int3
sub
sub
push
lret
mov
xchg
sub
lret
pop
xor
cld
add
xchg
mov
xchg
mov
loopne
clc
aam
cwtl
push
inc
mov
jb
ljmp
test
and
fnsave
mov
jp
incl
dec
out
sub
jns
mov
add
push
xchg
or
fisubl
sub
nop
les
fadd
jo
push
adc
lcall
cld
jo
sub
mov
push
and
adc
lahf
andb
lcall
pop
sbb
ja
imul
xchg
mov
clc
jp
xor
dec
and
decl
and
xor
enter
cmp
ds
cli
pop
clc
pop
std
jl
jae
js
pop
and
cltd
jmp
fwait
bound
test
pop
idivb
push
in
int3
call
mov
push
pop
push
sub
pop
mov
insl
call
aaa
pushl
mov
dec
mov
scas
xchg
sbb
add
push
movb
test
xchg
push
adc
fucomip
push
pop
ret
inc
test
mov
leave
sahf
stos
push
movsl
push
jp
fisttpll
push
or
or
mov
insl
adc
hlt
pop
pop
aam
arpl
adc
add
lock
push
cwtl
pop
mov
or
adc
push
mov
inc
iret
lods
jmp
sahf
cld
adc
lret
lret
mov
dec
mov
adcb
ljmp
sbb
in
xchg
jle
pop
pop
lea
lock
cmpsl
inc
sti
inc
ret
jg
inc
jmp
cmp
out
pop
stos
or
and
lahf
adc
inc
fs
incl
cmc
in
sbb
scas
ret
cmp
mov
xor
cmpb
mull
push
sbb
fucom
repz
cmpsl
lds
or
clc
ret
sub
ret
test
xlat
inc
das
loopne
int
or
scas
jecxz
es
adc
pushf
or
pop
cmp
sti
mov
push
cltd
jae
aas
xor
jo
dec
mov
and
outsl
lock
jae
add
les
inc
push
out
icebp
movsl
loopne
jmp
outsl
lahf
das
mov
push
xor
mov
idiv
test
cmpsl
mov
dec
jns
lods
cmpsb
jmp
ljmp
imul
mov
and
das
pushl
sbb
dec
ficompl
call
outsl
pop
push
jmp
clc
xlat
mov
mov
std
pushl
int
lea
jae
jg
add
ret
pusha
arpl
sbb
negl
sub
cltd
dec
ja
jnp
mov
push
push
incl
subb
fcoms
jle
push
das
cmc
shll
and
jne
popl
pop
jmp
mov
pop
repnz
into
cmp
ljmp
adc
sti
xor
sarl
jp
xchg
add
push
xor
pushl
decb
je
jns
fcompl
jle
push
cltd
jmp
aam
loope
fs
imul
pushl
icebp
icebp
mov
dec
pop
pop
xor
mov
aaa
cmp
repz
jmp
jne
cmp
and
or
sbb
push
push
push
cmpsb
cmp
cwtl
push
push
decl
jbe
mov
push
loopne
nop
xchg
movsb
xchg
lcall
aam
xchg
jl
hlt
push
pop
nop
bound
push
jnp
xor
mov
incl
sbb
xchg
inc
int3
jno
mov
push
js
in
xchg
cltd
xlat
scas
pop
cli
push
mov
fmulp
xor
in
fstl
mov
and
push
hlt
xor
inc
jmp
xor
in
dec
lock
mov
sbb
mov
dec
push
notb
aam
sbb
mov
xor
stos
cs
xchg
mov
lret
pop
outsb
push
inc
jg
incl
xor
lret
add
push
xlat
push
lods
sbb
mov
lcall
lret
dec
jns
xchg
call
icebp
outsl
nop
jmp
or
xor
stc
jno
mov
pop
add
mov
sub
call
adc
mov
jb
or
das
lcall
incb
mov
dec
adc
loope
sti
sbb
imul
fnstsw
pop
loop
and
fidivrl
mov
xchg
iret
call
incl
sub
in
ljmp
mov
xor
dec
test
incl
sbb
cmp
int3
mov
jae
inc
mov
mov
cld
mov
out
or
cwtl
addl
pop
jne
add
pop
mov
aas
cmp
cld
fbld
incl
outsl
or
push
push
inc
mov
mov
and
fcoml
call
jne
pop
adc
shlb
shl
ds
add
ljmp
inc
add
xchg
test
pusha
adc
decl
sub
sub
sahf
add
pop
pop
sbb
sub
lods
pop
testb
popf
pop
test
outsb
ds
add
pushl
ds
mov
xor
jg
pop
cmpsl
lods
lret
cmpsb
cld
jg
dec
cwtl
cmpsb
push
lock
jp
jl
mov
std
icebp
xor
push
cwtl
pop
sbb
test
mov
xchg
push
pop
mov
jbe
sti
loop
sub
aas
add
pop
mov
xor
insl
insb
jg
xor
rcrb
sbb
insl
mov
mov
incl
fiaddl
popf
xor
into
push
mov
adc
push
mov
sbb
mov
in
sbb
in
push
xchg
std
jle
das
icebp
call
mov
lcall
adc
or
push
inc
pop
adc
incl
call
push
push
dec
arpl
push
ljmp
mov
sbb
cmp
jp
inc
out
or
ja
test
jg
call
shlb
test
nop
dec
ljmp
in
lcall
es
ljmp
aad
push
inc
pusha
in
jecxz
xchg
andl
mov
movsb
mov
fsubrs
jecxz
insl
inc
popf
and
stc
fidivrs
rcrb
pop
call
pop
and
push
jmp
inc
xor
add
jmp
mov
std
lcall
mov
mov
adc
mov
aaa
fstp
dec
push
ds
pushf
fmul
sub
shrl
jbe
inc
dec
and
jmp
and
cs
mov
scas
in
orl
and
or
sub
add
add
inc
dec
fwait
test
inc
pop
sub
adcb
add
loop
decl
xor
xchg
movsb
mov
dec
sub
sar
repnz
mov
pop
or
pop
movsl
push
test
stos
jo
mov
ret
rorb
push
lret
stos
or
or
mov
movsl
mov
dec
add
pop
std
sub
shr
and
pusha
push
shll
call
xor
aad
sbb
pop
cld
sbb
push
test
mov
repz
ljmp
pop
and
ficoml
call
push
dec
push
std
jbe
mov
push
into
addr16
orl
jb
push
ja
sub
sub
push
mov
in
orl
jge
inc
rol
dec
xchg
cmp
out
pop
and
es
incl
hlt
das
inc
lea
mov
push
and
sbb
sbb
call
sub
fcompl
mov
push
push
lds
enter
mov
cmp
xchg
mov
pushl
push
call
fdiv
add
mov
or
jns
decl
cli
dec
inc
insb
xlat
xchg
xchg
data16
pop
fisttpll
mov
jg
incl
pop
call
sbb
sub
inc
insl
mov
cli
lcall
jbe
add
lahf
mov
dec
test
or
fbld
orb
fiadds
idiv
ficompl
movsl
call
imul
loope
repnz
push
xor
lret
les
jle
jge
roll
xchg
dec
mov
andb
push
cmpsb
push
jb
xor
inc
leave
or
push
mov
sbb
jb
clc
sahf
enter
mov
xchg
call
mov
aad
call
cmp
mov
pusha
jle
pop
push
push
cltd
or
and
jp
push
sub
and
inc
cli
push
shlb
jae
jae
mov
call
in
jg
test
jge
outsl
outsl
push
and
mov
mov
ljmp
mov
scas
sub
cwtl
pop
mov
dec
outsb
imul
and
jl
mov
mov
inc
fs
push
jg
mov
push
loop
loopne
mov
aas
aaa
push
pop
mov
xchg
xor
ljmp
and
pop
cmpsb
sbb
popf
pop
pushf
jns
sub
mov
pop
inc
mov
das
add
ret
mov
aad
push
sti
add
inc
adc
loopne
rcr
std
sarb
jp
js
mov
mov
es
push
lret
sbb
inc
testl
xchg
xor
bound
mov
sub
pop
add
xchg
sub
lcall
imul
ds
ss
push
jl
adc
test
lods
ficompl
or
xor
paddusw
lahf
out
pusha
inc
stc
out
xchg
cld
mov
jbe
or
cli
test
imul
jp
stos
das
stos
cmpl
inc
inc
lahf
jnp
outsb
ja
mov
jg
insb
out
sbb
push
mov
stos
fucomip
fcmovbe
ret
in
push
outsl
shrb
push
es
or
call
enter
out
adc
daa
xchg
ds
outsl
push
cmc
push
sbb
sub
lods
xchg
push
adc
lcall
mov
ljmp
mov
mov
add
cmp
loope
das
push
call
push
aas
loop
dec
das
jo
mov
lcall
mov
jnp
xchg
inc
xor
jecxz
sub
push
jne
test
inc
cli
mov
mov
push
or
int3
pop
into
mov
jge
icebp
scas
adc
mov
iret
aas
in
decl
fiaddl
in
cld
mov
xchg
imul
lcall
mov
pop
xlat
inc
mov
sbb
pop
and
loope
incl
inc
push
sub
mov
mov
mov
jg
cmp
push
xchg
xchg
out
frstor
push
or
test
outsl
movsl
fwait
cmp
shlb
xchg
xorb
adc
mov
xor
jl
jae
adc
adc
inc
popa
push
xor
jmp
jb
mov
imul
adc
call
add
cmp
lods
pushl
xor
test
mov
inc
xchg
test
mov
adc
test
cmp
scas
data16
cld
call
cmp
inc
mov
stos
adc
imul
test
pop
mov
incl
xchg
fstl
test
ret
rcr
and
daa
pop
xchg
add
mov
fadds
sbb
fsubs
lods
sub
and
jno
ret
mov
inc
arpl
pop
pop
push
sbbl
stos
and
pushl
adc
add
idivl
adc
test
jmp
jae
xchg
clc
out
xchg
pop
outsb
movsb
stos
out
sti
jns
push
and
push
sub
cmp
roll
inc
jno
mov
decl
imul
aad
add
sarb
inc
int
push
subb
fldl
adc
rcrl
or
or
xor
add
test
sbb
js
mov
iret
sti
push
pop
outsb
fs
inc
push
call
dec
sbb
test
inc
adc
iret
repz
call
jl
leave
adc
mov
or
jmp
cmc
dec
jg
jmp
fwait
cld
bound
mov
lock
addr16
jne
or
xchg
aaa
push
and
mov
fiaddl
pop
push
jg
data16
call
lcall
pop
bndldx
das
mov
adc
inc
mov
xlat
pushf
xor
ljmp
cmp
and
cs
xchg
mov
xor
xor
adc
mov
imul
shlb
daa
pop
mov
cmc
outsb
add
xchg
sarb
orl
sbb
call
xchg
xor
add
or
sub
adc
pop
mov
adc
dec
stos
jl
jbe
mov
out
cmp
mov
int3
mov
test
fdivr
xchg
adc
fwait
mov
sbb
ret
adc
sarl
sbb
lods
lret
cmp
lock
add
ja
mov
ret
dec
sbb
inc
lock
aam
repz
fisttps
push
aam
add
ficompl
pop
jmp
adcb
lea
inc
mov
or
aam
inc
ja
dec
sbb
cmp
dec
into
in
mov
das
push
cld
in
pop
push
inc
push
jae
bound
mov
mov
pop
mov
mov
mov
je
inc
ljmp
pop
xchg
mov
adc
xchg
jg
or
pop
les
lock
fnstsw
dec
bound
inc
dec
cli
imul
mov
pushl
jne
inc
push
push
mov
xchg
xchg
mov
push
cmp
lret
push
jae
mov
or
mov
fchs
je
fucomip
incl
mov
mov
cmc
lcall
and
sti
push
inc
inc
lret
dec
cmpl
popa
pop
or
xchg
adc
sbb
adc
sub
jecxz
data16
call
xchg
rclb
out
fldt
pusha
and
mov
cmp
cltd
push
xor
adcl
lcall
jmp
jnp
jnp
out
push
mov
lock
pop
pusha
mov
aam
ljmp
data16
push
loopne
decl
cmp
das
lock
andl
adc
cmp
das
add
dec
movsl
or
out
lcall
mov
or
inc
push
fistpl
and
mov
pop
mov
insl
sbb
lea
hlt
repz
jg
aaa
loop
incl
mov
push
dec
mov
std
mov
xchg
sti
inc
mov
adc
adc
push
insl
inc
sub
lock
jmp
push
stos
lcall
mov
loopne
in
pop
clc
jge
test
leave
sbb
jg
add
jns
mov
nop
outsl
and
dec
or
call
push
or
inc
add
cmp
clc
adc
fs
mov
dec
fsubr
call
xor
rorb
mov
test
mov
fists
mov
add
jecxz
mov
outsb
cld
ret
ret
mov
inc
xchg
js
mov
push
and
mov
das
hlt
cld
sbb
rcr
aas
fnsave
xchg
es
jge
in
ficompl
jg
xchg
aad
dec
pop
ss
movsb
xor
icebp
mov
fildll
jecxz
sbb
clc
je
sub
pop
inc
xchg
cli
aaa
js
std
jo
and
xchg
stos
adc
aas
pop
inc
pop
pop
push
repz
dec
inc
aas
dec
sti
inc
inc
pushl
sub
mov
fnstcw
mov
fs
inc
negl
faddl
adc
testb
dec
lret
ss
scas
test
ljmp
add
pop
mov
sub
sub
adc
cmp
mov
push
jo
sub
setl
pop
push
mov
dec
cltd
jecxz
jp
mov
xchg
lcall
sbb
iret
sbb
pusha
adc
lods
jb
hlt
jmp
fiaddl
sbb
filds
sahf
fs
and
push
mov
lock
in
data16
and
pop
mov
push
imulb
and
loope
mov
out
ss
fdivr
test
stos
or
jne
push
movsb
push
xor
and
cli
xchg
es
mov
sub
aad
mov
jecxz
dec
repz
push
decl
stc
testl
mov
cmpsl
insl
cltd
mov
push
mov
mov
or
fdivs
and
in
push
mov
jl
cltd
mov
add
call
in
ret
sub
or
pop
enter
push
lods
in
stos
sub
mov
mov
pop
mov
ret
shll
sbb
les
mov
sbb
cmp
out
fnstsw
inc
outsl
sbb
mov
adc
xor
inc
mov
add
xchg
iret
push
adc
pushl
hlt
jo
lods
xchg
pop
mov
push
mov
ja
add
dec
push
imul
test
sub
mov
bound
or
fs
mov
call
mov
jne
mov
addl
dec
pop
xchg
lcall
xor
fwait
add
xchg
push
jg
outsl
push
lods
mov
jmp
jo
fadds
subl
sub
pop
fcmovb
cltd
pop
stos
xchg
stos
inc
jge
mov
out
xor
and
aad
lock
or
xorl
push
sahf
lods
roll
inc
fcmovnu
daa
movsl
out
sub
jle
adc
lret
jnp
jb
jno
cmp
pushl
dec
cld
push
dec
outsb
cmp
cmpsl
mov
mov
in
mov
incl
daa
cmc
mov
mov
push
lds
orl
in
jmp
outsl
or
idiv
scas
pop
ret
xor
and
pop
lcall
ljmp
xchg
imul
pushf
sub
xchg
in
lea
insb
mov
jle
popa
outsl
inc
pushl
fsubrp
clc
add
jp
and
je
ljmp
cmc
call
pop
insl
push
out
push
add
inc
sub
aam
jmp
rcrl
adc
andb
pop
aam
xchg
out
xchg
ljmp
lret
cmc
call
jae
ljmp
nop
fnstenv
ret
cmp
mov
outsl
sbb
pop
outsl
dec
sub
dec
and
stos
hlt
icebp
mov
aam
lcall
mov
pop
mov
call
lock
sbbl
subl
clc
out
fstpt
sbb
mov
xchg
lcall
sub
sub
pusha
pop
mov
lods
mov
incl
cmc
xor
enter
cmp
push
fnstenv
adc
add
inc
mov
cld
cwtl
out
std
pop
fmuls
pop
lret
cmp
mov
scas
fsubr
std
imul
decl
stos
add
push
push
loop
adc
ret
lahf
pop
stos
imul
jo
and
and
idiv
icebp
adc
or
popa
outsl
lcall
clc
mov
pop
pop
test
adc
xchg
xor
push
xchg
inc
push
add
pop
mov
incl
fcomi
sub
in
xchg
sbb
cmp
adc
jle
add
or
hlt
std
das
add
mov
xchg
scas
sbb
xor
jmp
test
pop
pop
test
insb
mov
xor
ljmp
cmp
cs
mov
inc
inc
xchg
outsb
xchg
fmull
pop
roll
xchg
es
xor
cltd
pop
je
int3
xchg
aam
push
jmp
xor
mov
pop
pop
faddl
js
test
decl
std
dec
and
xchg
loop
das
dec
cld
push
aas
or
into
rcr
jg
cmp
incl
icebp
inc
cmpsb
cmp
push
xor
out
jmp
add
push
movsl
jecxz
lods
dec
and
cmp
push
fidivs
jle
jecxz
insl
mov
dec
or
xorl
lcall
test
in
mov
jl
lods
repnz
lds
push
in
push
in
push
jecxz
inc
addr16
jae
in
mov
jbe,pt
dec
std
or
and
mov
mov
dec
sbb
adc
decl
roll
xchg
loopne
fwait
inc
loopne
jmp
js
or
addr16
js
sar
lcall
dec
ja
in
push
xchg
cli
dec
or
jne
cmp
and
mov
cmc
cmp
mov
jmp
jnp
xor
inc
out
cld
std
incl
xchg
loope
adc
xor
sbb
xchg
sub
adc
loop
or
xchg
ret
inc
daa
cld
sub
aaa
jle
das
add
jb
sub
loop
cld
outsl
hlt
in
ss
gs
mov
aad
and
movsb
in
xor
ret
ljmp
pop
clc
decl
or
stos
cmc
inc
dec
aam
sbbb
sbb
add
int
xchg
fmull
cmpsb
mov
fsubrs
jnp
sbb
ljmp
mov
cwtl
add
jge
xchg
jp
lods
int3
iret
lcall
pop
mov
inc
int
fistl
fcmovnbe
xlat
gs
movsb
jmp
mov
in
and
and
pop
cmp
fnclex
insb
ret
movsb
outsl
jge
pop
insb
pop
ljmp
shll
mov
jecxz
or
loop
push
inc
jg
and
aam
fidivs
loopne
idivb
jmp
add
popf
out
adc
cli
in
add
and
mov
jmp
addr16
sub
aas
lretw
scas
cli
pop
cmp
mov
jno
ficomps
or
aam
or
mov
bound
dec
jmp
mov
mov
push
lret
xor
aas
push
xchg
fidivl
or
dec
add
call
mov
lcall
mov
xchg
je
mov
mov
xor
lods
dec
js
stc
fistpll
pushl
sahf
cld
inc
cmpsl
mov
jbe
loopne
aaa
cli
inc
int3
jo
sub
es
jnp
sti
pop
pop
mov
mov
icebp
push
fs
scas
cltd
rorb
gs
cmp
outsl
popf
inc
mov
dec
pop
or
ds
add
and
pop
mov
and
lcall
pop
lds
dec
or
std
mov
adc
mov
ret
dec
dec
inc
cmpsl
ljmp
sbb
insl
sti
lea
push
xor
cmpsl
add
inc
push
fucomip
sbb
aas
and
ljmp
xchg
jecxz
dec
pop
rcll
add
inc
pop
or
fldenv
xchg
jnp
inc
inc
jmp
insb
mov
je
xor
adc
jl
dec
cltd
jnp
repnz
jmp
iret
lahf
jmp
cltd
mov
add
mov
pop
or
jg
stos
lea
jecxz
pop
mov
mov
sbb
mov
fistpl
pop
in
dec
sarl
cmp
cli
inc
loop
decb
aaa
add
xor
scas
xchg
shll
jnp
hlt
test
jg
inc
fbld
std
push
jnp
dec
mov
ss
or
adc
aam
rclb
rorl
sub
lcall
xor
popa
subl
fcmovnb
mov
xor
lock
cmp
call
dec
fcompl
into
mov
fdivrp
cmc
gs
outsl
lret
xchg
in
cmp
push
jne
mov
movsl
cld
cld
jg
out
jbe
dec
cmp
dec
push
jge
add
push
push
movsl
push
fistps
cmpsl
xor
push
cli
fucomi
dec
int3
mov
cmpsb
lret
lahf
push
fldl
ja
lcall
js
xchg
lock
stos
lock
jecxz
mov
push
repnz
hlt
jg
ljmp
cmp
and
mov
ljmp
daa
add
loopne
sbb
sbb
mov
inc
out
cmp
jne
xor
jmp
insl
xchg
ljmp
ret
mov
jo
sbb
ja
xchg
mov
cli
mov
int3
cmp
add
in
dec
mov
ret
push
jge
push
or
adc
ss
dec
ljmp
aaa
lock
or
push
imul
mov
xchg
outsl
lock
mov
adc
or
or
add
stc
cwtl
lcall
sbb
and
fcmovb
mov
out
add
xchg
sbb
mov
decl
cld
pop
or
mov
fwait
jl
je
std
and
dec
fisttpl
dec
lcall
mov
adc
cmc
adc
aaa
pop
mov
sub
sbb
ret
fidivl
jmp
call
loopne
mov
ret
push
lahf
dec
or
jns
mov
loop
decl
ret
lea
cmpsl
lods
js
mov
pop
xchg
mov
idivl
add
je
adc
je
mov
iret
jp
clc
add
xchg
test
push
out
sbb
sbb
sub
arpl
loopne
mov
pushl
dec
mov
ss
outsl
pop
loop
push
push
pop
jb
aas
push
sub
adc
roll
dec
sbb
sbb
sub
sub
enter
loope
dec
call
xchg
or
ret
stos
rclb
jne
sbb
adc
decl
xchg
pop
cwtl
jmp
adc
adcb
lret
ret
inc
jmp
or
push
cmp
lret
bound
xchg
lcall
mov
fnstenv
pop
mov
xor
prefetch
in
push
mov
mov
jg
dec
push
aad
test
sub
sbb
pop
and
mov
xchg
lcall
mov
inc
in
pop
mov
lock
stc
mov
push
outsl
int
jbe
scas
ja
js
inc
mov
filds
adc
mov
push
mov
fsubrp
cld
pushf
cmc
xchg
add
lods
or
mov
xchg
sub
std
jg
sbb
or
test
mov
filds
roll
jo
mov
fucom
sarb
mov
cmp
add
out
adc
negb
inc
clc
imul
jp
sub
adc
int3
lea
ret
fildl
cli
lea
ss
push
shrl
fldcw
cs
stos
loopne
mov
movsl
out
stc
mov
sbb
sub
push
jmp
icebp
scas
push
mov
out
jle
jg
das
aad
and
jno
aas
outsl
adc
pushl
lea
xchg
lret
jno
nop
mov
sbb
pop
xchg
lds
sub
jmp
sbb
sbb
xchg
popa
cmc
mov
rorb
add
sbb
mov
dec
ljmp
loope
mov
les
jg
push
jbe
mov
pushf
inc
jno
and
jp
mov
fsubr
or
mov
push
or
cmp
decl
ret
mov
pop
jno
sub
popf
adc
sub
mov
pop
xchg
das
shlb
cmp
call
faddp
and
int
mov
cmp
mov
shlb
fcmovne
dec
mov
inc
pop
inc
imul
or
sub
inc
jo
cs
fwait
sub
repz
mov
mov
fcompl
incl
push
push
cmovle
mov
dec
loopne
lcall
xor
jb
dec
add
lods
into
push
cmp
pop
dec
int3
lock
push
std
and
les
js
mov
inc
jnp
xor
mov
pop
mov
pop
rcll
insl
outsb
decl
mov
hlt
inc
sub
cmp
out
adcl
adc
adc
fsubs
push
mov
and
dec
xor
sahf
push
out
jne
pop
xchg
mov
fwait
mov
mov
lcall
std
mov
loopne
movsl
and
pop
xor
or
in
inc
mov
call
mov
lret
arpl
jge
inc
int
mov
add
mov
push
das
push
std
ljmp
pop
push
fsub
jb
mov
sti
mov
xchg
stc
mov
inc
neg
sub
repz
cltd
dec
mov
xor
ljmp
xchg
mov
pop
jg
sub
loopne
dec
adc
lods
xor
cli
jl
sarl
pop
dec
stos
mov
repnz
mov
mov
mov
out
adc
cmp
jo
lods
imul
shll
mov
xor
insl
xor
jecxz
adc
dec
ljmp
pop
lcall
jl
lock
aad
cmp
mov
shll
movsl
inc
ljmp
rclb
xchg
leave
mov
cmc
outsl
push
mov
xchg
das
stc
enter
push
enter
cld
mov
aam
push
lock
cmp
int
jge
and
fs
push
mov
notb
mov
lahf
pop
sbb
decl
std
ds
cs
mov
sub
dec
ss
fldl
in
xor
inc
mov
jmp
call
test
push
push
inc
mov
aaa
jp
xchg
mov
mov
jg
lret
xor
sbb
addl
lcall
enter
ljmp
insb
jg
sbb
push
push
call
fildll
or
data16
fbstp
adc
js
in
icebp
adcl
cmpl
imul
jg
adc
xor
sub
loope
call
lret
fidivl
mov
inc
or
or
data16
shll
js
adc
mov
or
mov
cmp
rcrb
sub
jg
and
aaa
pop
les
shlb
jns
aas
dec
cltd
outsl
icebp
out
mov
test
test
inc
movsb
es
pop
push
popf
in
call
push
inc
push
insb
xor
jb,pn
lcall
mov
dec
out
jg
rorb
addr16
insb
jp
insl
out
mov
stos
mov
push
add
push
or
loope
xchg
inc
das
inc
push
idiv
lahf
push
adc
loop
shlb
outsl
jmp
mov
rcrb
mov
cmp
add
adc
mov
incl
loope
cmp
in
cmp
sbb
and
mov
jmp
adc
loope
sub
mov
jle
and
xor
jg
addr16
pop
ljmp
cmc
cwtl
and
adc
mov
lcall
inc
data16
cli
icebp
adc
or
fadd
inc
inc
movsl
outsl
cld
hlt
lock
rorb
ficompl
cmpsb
popf
dec
cmpb
aas
xor
das
imul
shll
fistpll
jg
inc
fstl
vmovupd
jno
andl
or
mov
pop
xchg
jg
fs
mov
movsb
push
sub
aam
xchg
jp
lods
add
sti
test
call
xchg
and
lea
sub
push
jl
mov
dec
lret
testb
ljmp
jne
inc
and
push
push
push
pop
fsubrp
fsub
loope
pop
aam
add
mov
pavgb
jmp
mov
lea
dec
ds
decl
fcomps
xlat
cld
cmp
pop
inc
lret
add
lea
cmc
adc
jb
roll
ljmp
cld
ljmp
ds
and
cwtl
push
add
iret
lock
dec
out
int3
fdivr
xchg
push
adc
pop
and
mov
cld
sub
jl
mov
push
and
cmpsb
pop
lods
icebp
sub
inc
fs
adc
mov
out
pop
addr16
inc
lods
cmp
pop
xor
or
lret
jns
enter
lahf
jmp
add
dec
jl
decl
call
lea
leave
out
mov
dec
dec
mov
mov
adc
xchg
aaa
and
cmp
jmp
pop
into
mov
stos
stc
jmp
jb
inc
aaa
and
mov
cltd
xchg
xchg
addr16
rorb
push
loopne
lret
push
mov
popf
je
add
dec
mov
dec
stc
mov
mov
xor
andb
push
fsubr
ret
insb
mov
and
ficomps
fucomp
ljmp
sbb
imul
js
jne
push
sbb
inc
decl
idivb
mov
or
or
loopne
ljmp
scas
xor
inc
movsb
and
pop
je
movsl
push
mov
loopne
pushl
pop
jge
and
pop
loop
mov
cli
sub
or
add
and
pop
mov
leave
inc
cli
js
add
lods
mov
and
lods
arpl
pop
stos
sub
divl
pushf
cmpl
pusha
jg
mov
jg
decl
das
push
or
out
ret
sbb
dec
movsl
movsl
adc
lock
mov
enter
mov
lods
popf
sub
push
jge
pop
in
add
and
fistpll
pushl
scas
push
push
inc
jl
jo
jnp
jmp
sti
xor
outsl
sub
movsb
mov
push
and
pop
leave
and
lods
and
pop
cmp
ljmp
rol
call
ja
mov
std
dec
sbb
or
fimuls
ljmp
aam
es
jle
mov
mov
cltd
popf
in
sbb
xor
jo
inc
aaa
jae
pop
subb
xor
fwait
mov
mov
ljmp
out
out
ljmp
xchg
xchg
loope
mov
xchg
xchg
aaa
push
popf
js
sub
aad
test
fcoms
cltd
insb
aam
adc
je
das
jo
inc
dec
mov
inc
xlat
pop
je
roll
sahf
pop
cli
decl
scas
pop
in
loopne
add
push
jne
add
mov
jno,pt
popf
call
pushl
jae
mov
cmp
mov
or
aaa
std
ljmp
lods
mul
add
shlb
cs
adc
jg
out
mov
inc
cli
jmp
test
push
jbe
insb
sub
out
lcall
mov
idivb
jg
stc
js
push
lds
out
jo
mov
jmp
fisttpl
fwait
cmpb
cmp
mov
add
jecxz
loope
xor
jg
das
or
out
insl
mov
or
sbb
ljmp
or
dec
jae
test
mov
pop
jb
adc
ljmp
sub
loopne
add
jmp
movsl
or
iret
shl
pushl
mov
xchg
adc
insl
std
fwait
mov
or
mov
pop
dec
in
or
add
cli
push
inc
adc
mov
adc
sbb
pop
outsl
lock
leave
in
inc
xor
pop
sbb
inc
dec
fadds
push
add
push
inc
cmp
scas
scas
insb
pop
inc
out
xor
lcall
cmc
push
test
dec
stos
scas
repz
roll
arpl
or
es
int3
stos
into
xchg
lcall
mov
and
rorb
and
and
or
fisttpl
fsts
adc
cltd
pop
mov
mov
adc
sub
mov
sbb
mov
sub
cmc
ljmp
clc
ljmp
inc
or
xor
dec
cmp
mov
pushl
cld
in
sub
jne
jecxz
xor
shlb
jb
sbb
sub
lock
lcall
aad
aas
xchg
mov
cmp
mov
insl
loope
jno
das
enter
cmp
push
cmp
mov
jb
jns
push
mov
pusha
mov
cmp
and
pushl
call
xchg
repz
fs
stos
add
xchg
popa
mov
sub
add
xchg
mov
mov
iret
add
dec
push
fisubrs
stos
mov
cli
call
loope
sub
cmp
addr16
mov
bound
dec
adc
cmp
clc
imul
out
out
xlat
cmp
jg
pop
inc
push
push
lds
orl
xor
adc
lret
xchg
rcr
stc
dec
adc
cli
and
mov
add
mov
dec
fwait
sub
in
jnp
movsl
call
call
repz
jae
push
scas
adc
and
push
cld
in
mov
lahf
inc
sub
fidivrs
test
jge
push
addr16
ljmp
inc
ret
cwtl
out
mov
pop
inc
push
xchg
add
fnstcw
dec
decl
clc
popa
ds
test
xchg
cmp
enter
out
or
push
icebp
arpl
adc
xchg
adc
jb
mov
movsb
enter
out
sar
ud0
jg
test
jb
ficoml
pop
pop
stos
xor
aam
jp
fstpt
hlt
sbb
ljmp
add
cwtl
scas
addr16
sbb
pop
mov
lcall
lds
inc
adc
std
pop
inc
and
cmpl
pop
fld
fsubrl
movsl
dec
ss
lcall
xchg
scas
push
int3
roll
pop
push
mov
push
xchg
sbb
inc
popf
jge
inc
adc
lcall
cmp
push
jno
scas
jne
mov
push
mov
mov
stc
or
sbb
mov
add
sbb
xchg
push
adc
test
jno
pushl
cmp
pusha
out
enter
sbb
mov
cmp
in
loope
bound
and
ja
je
int
push
mov
push
pop
repnz
dec
aad
mov
push
xlat
cs
arpl
dec
scas
push
xchg
xchg
decl
push
dec
aam
inc
adc
pop
hlt
addb
rcll
loope
decl
outsl
xor
xor
js
mov
sbb
sbb
cwtl
dec
ret
or
outsl
xchg
and
cmc
mov
decl
aam
ret
xor
mov
rorb
dec
pop
mov
sahf
fs
jg
outsl
and
das
add
call
sti
pusha
int
jbe
xchg
mov
aaa
call
xor
sahf
xor
shlb
pop
test
cld
and
dec
add
loopne
inc
push
xor
adc
push
adc
pushf
or
sbb
inc
add
mov
nop
lret
and
movsl
call
mov
inc
dec
shrl
dec
cmp
pop
loop
push
adc
decl
std
jg
and
add
push
push
xchg
dec
les
mov
mov
sub
scas
std
jp
or
fadd
mov
inc
call
xor
mov
test
popf
jb
test
cli
inc
adc
pop
jmp
mov
mov
movsl
pop
and
xchg
repnz
or
sub
cmp
scas
mov
pop
sub
lock
mov
sbb
inc
lret
fmull
jae
cmp
sub
jmp
push
and
je
fwait
into
outsl
sbb
push
imul
lret
decl
loope
sbbl
cmovae
arpl
pop
int3
loopne
or
cltd
lret
pushl
shl
mov
adc
mov
xor
sbb
xor
inc
ss
lret
ret
ret
ss
lds
fs
lea
pop
lock
mov
das
adc
call
jb
lock
add
push
pushl
lock
jmp
dec
sub
andb
mov
jle
mov
ds
out
dec
mov
jae
add
sbb
bound
adc
cli
dec
test
stc
xor
push
mov
fbld
imul
movsb
fdivr
call
call
jp
call
pop
or
aam
push
mov
pop
es
add
daa
push
lcall
mov
pop
ret
jo
cmp
ds
xchg
subl
cmpsb
add
mov
out
pusha
push
in
aam
pop
repnz
add
insb
mov
or
test
sub
mov
jecxz
jmp
mov
scas
or
lret
outsb
or
int3
std
push
pop
jns
clc
jg
mov
jne
mov
sbb
push
aad
fldcw
test
mov
sahf
or
pop
dec
mov
dec
enter
adcl
incl
std
test
or
shl
std
lret
cmpsb
push
rcll
in
ljmp
jns
js
jecxz
sbb
cmp
shll
xchg
imul
loop
ja
adc
xor
stos
ja
cmpsl
nop
push
pushl
mov
scas
adc
inc
loope
int
xchg
push
lods
clc
lcall
sbb
dec
cmc
aas
xor
mov
ret
loop
ja
call
mov
mov
jle
push
push
ret
out
js
dec
push
mov
js
mov
mov
dec
mov
call
pop
lods
mov
pop
stos
add
pusha
adc
mov
aam
lock
sahf
fstp
in
adc
aas
cwtl
cwtl
cs
mov
sarb
das
cmc
lcall
pop
int
sti
flds
jg
inc
push
xchg
sub
loop
sarl
push
and
jl
add
stc
aad
fildll
shlb
cmp
sbb
not
and
and
mov
add
bound
punpckhdq
inc
mov
cld
jg
mov
push
loopne
mov
hlt
sub
pop
ret
push
fnstsw
andl
mov
push
cmp
arpl
xchg
ret
cmp
mov
cmc
call
lahf
iret
xchg
lods
mov
xor
aas
fwait
hlt
pushl
dec
fidivl
leave
shrb
add
dec
cmpsl
dec
mov
push
mov
js
ret
bnd
gs
adc
add
sub
add
xor
incl
pop
lret
mov
mov
int
mov
into
push
in
inc
lock
sahf
out
stos
or
clc
rcr
aad
push
push
cli
orl
sarb
pop
jg
sahf
push
cmp
sar
mov
mov
movsb
mov
and
pop
adc
dec
pusha
or
inc
mov
loopne
mov
xchg
mov
call
pop
push
sbb
fisttpll
bound
sar
fbstp
fstpt
scas
push
push
inc
mov
sbb
andl
fdivrl
fstpl
sahf
outsb
jl
cltd
xlat
cmpsb
sub
mov
divb
add
andb
jge
dec
loop
push
daa
jae
inc
int
sub
test
icebp
cmpsb
add
lds
mov
pop
jg
outsb
lcall
mulb
test
push
mov
divb
stc
push
addr16
and
ss
adc
cmp
nop
je
incl
push
mov
std
inc
pop
sti
into
cmp
sahf
add
xchg
or
pushl
aas
jp
popa
leave
push
push
add
cmpsb
sbb
ss
outsl
dec
fdivr
inc
incl
test
xor
out
or
stos
outsb
mov
pop
std
or
es
mov
and
cmp
loop
inc
or
cmp
incl
hlt
pushl
inc
in
jae
sarl
pop
add
ds
mov
adc
cltd
out
xchg
mov
sarl
mov
or
and
ret
aaa
imul
inc
pop
aas
ljmp
loope
sarl
loopne
mov
dec
xchg
subps
shll
mov
add
xchg
aad
cmp
xor
mov
pushl
add
ljmp
icebp
sarl
sbb
push
clc
mov
clc
pushl
fildll
or
mov
add
jnp
lahf
mov
lea
push
push
xlat
filds
pusha
arpl
cli
xchg
cli
scas
mov
push
dec
cltd
ficompl
enter
push
int
leave
mov
cmpsl
dec
mov
les
sti
mov
mov
xor
test
test
subb
sub
je
pop
ljmp
fldlg2
clc
dec
and
cmp
fwait
adc
mov
jo
loopne
incb
dec
dec
and
rclb
in
inc
je
sbb
adc
lcall
or
or
pop
sti
xchg
fsub
lods
insb
ficomps
cmpsb
pop
mov
add
outsb
lea
or
pop
cld
cmpsl
in
lods
pop
cs
lcall
jmp
mov
imul
cmp
xor
or
and
mov
mov
sub
popa
mov
push
push
cmpsl
fdivrs
shll
mov
lock
arpl
xor
fs
jg
xor
and
jmp
jle
push
pop
fmull
mov
cmpsl
pop
jae
sahf
ret
cmp
clc
adc
sub
mov
xor
ss
icebp
push
arpl
inc
mov
sbb
xchg
insl
cmc
push
inc
icebp
mov
mov
out
xchg
pop
sub
mov
and
aam
leave
aam
adc
mov
jg
in
xor
test
add
ljmp
sbbb
pop
add
cmp
scas
stos
mov
push
call
dec
dec
scas
scas
mov
xlat
adc
popf
jp
push
dec
mov
dec
js
mov
into
lea
push
notb
into
jns
or
jg
lock
add
imul
insl
push
cli
mov
push
rolb
jg
dec
test
cwtl
insb
ret
push
lcall
jge
or
hlt
jle
aad
lea
shll
cmp
rclb
incl
mov
jge
lods
pop
lds
cmp
ficoms
xchg
movsl
push
pop
jne
cld
ljmp
sbb
gs
xchg
sbb
xchg
in
in
mov
lock
cmp
cld
mov
jbe
lret
sub
xchg
lret
push
jg
test
test
or
jo
xchg
xor
xchg
decl
clc
push
adc
mov
call
decl
jge
stos
mov
fstps
ja
mov
xchg
mov
jnp
jnp
sub
lock
pop
push
aam
scas
out
and
dec
mov
lds
adc
hlt
inc
ds
mov
nop
or
lahf
ljmp
hlt
jmp
gs
mov
mov
imul
aas
mov
out
sbb
call
or
andb
insb
push
jl
inc
adc
out
dec
lods
xchg
or
jb
fstps
jp
das
std
aaa
inc
fmull
inc
push
lds
iret
mov
xor
add
imul
lea
xor
or
das
push
sahf
push
xor
stos
add
adc
repnz
xchg
jne
movsb
movsl
lahf
subl
xor
hlt
dec
adc
lcall
addb
das
cmp
test
and
loop
mov
or
jb
mov
mov
xlat
sti
inc
mov
push
mov
lcall
std
push
cmpsb
fisttpll
cld
adc
int3
sub
ja
mov
pushf
rorb
out
pop
cld
ljmp
cs
pop
shr
mov
mov
mov
fwait
aaa
push
mov
decl
xchg
fwait
shlb
je
fdivrl
lret
hlt
fisubs
call
out
xlat
dec
xchg
decl
ljmp
cmpsb
pop
mov
subb
mov
pushf
jo
jecxz
mov
out
mov
aaa
inc
mov
mov
icebp
cmpsl
lea
jne
add
rclb
into
adc
loopne
jns
mov
lock
jle
mov
mov
fs
mov
shrl
inc
in
add
loopne
call
fidivrl
add
ds
and
lds
inc
sti
lods
jo
dec
mov
fs
jne
add
push
pop
mov
push
fidivs
push
addr16
mov
mov
cmp
sbb
jns
push
or
mov
loopne
out
jmp
aam
add
mov
cs
cs
mov
mov
pop
ret
pop
jg
pop
in
arpl
scas
mov
pop
dec
daa
inc
dec
jp
pop
push
or
std
add
aaa
cmp
sar
cwtl
and
inc
and
cwtl
test
into
xchg
test
decl
orl
jecxz
imul
in
xchg
xor
jmp
rol
das
add
sub
call
fisubs
cwtl
cmpl
es
icebp
rclb
mov
or
dec
fcoms
fisttps
add
xchg
sub
mov
ds
loopne
jp
jg
sarl
mov
inc
mov
dec
movsl
fbld
ds
setae
pop
cld
outsl
lock
movsl
ror
adc
lret
fisttps
stos
push
lcall
std
imul
ret
adc
incl
dec
and
out
xchg
cltd
add
sub
rcl
call
sarb
imul
jnp
mov
das
bound
dec
bound
sub
in
push
dec
sbb
call
pop
sbb
outsb
add
jmp
xchg
xchg
sub
sar
lcall
mov
cmp
cmp
aam
das
sbbb
dec
bound
inc
lods
jmp
ret
sub
cmp
shl
mov
in
push
push
clc
jg
dec
cmp
xor
in
mov
test
jmp
stos
outsl
add
js
loope
add
sar
jp
xchg
adc
ds
ficoms
mov
and
dec
popf
mov
cli
inc
lods
pop
mov
movb
fistpll
fistpll
out
sbb
into
jo
or
dec
xchg
jmp
jp
xorb
movsl
mov
inc
stc
cmp
pop
mov
jo
pushl
outsl
sub
in
aaa
adc
cmp
adc
test
outsb
dec
ljmp
cmc
or
mov
je
les
mov
pop
insb
xchg
sub
jno
pop
rcrb
pop
into
mov
inc
fisttps
pop
insl
mov
lcall
mov
inc
cmp
and
jo
push
ficoms
xchg
sub
aaa
mov
sbb
sbb
cmp
lods
xor
pushf
std
jecxz
out
cmpb
push
xor
mov
sub
or
scas
ret
and
xchg
sbb
inc
cmp
dec
and
mov
xor
pop
add
xchg
scas
idivb
jnp
mov
call
or
pop
jns
outsl
imul
sub
int3
outsb
fs
imul
sbb
or
fwait
inc
add
decl
sbbb
push
test
dec
stos
fwait
in
push
out
stos
std
dec
fisttpl
mov
push
addl
addr16
std
pushl
pop
sub
sub
rcl
arpl
cmc
out
sahf
iret
mov
xor
push
mov
push
in
iret
jns
js
mov
mov
lcall
gs
inc
sbb
lahf
mov
roll
cltd
in
xchg
call
scas
es
cld
push
mov
sbbb
ljmp
jae
push
movsl
pop
test
sbb
arpl
lds
xor
dec
mov
pop
add
pop
stc
push
jp
ret
mov
jno
or
or
fadds
fsts
cmp
xchg
gs
decl
mov
push
cmp
pop
push
push
mov
jno,pn
push
mov
incl
mov
inc
outsl
push
push
mov
push
jbe
or
repnz
push
ljmp
das
mov
sbb
adc
jnp
mov
jmp
lcall
xor
ficompl
clc
aas
inc
xchg
cwtl
aad
ljmp
out
xor
jbe
in
imul
lock
mov
inc
pop
enter
push
ds
jne
orl
adc
lcall
xor
into
pusha
xor
cmpsb
decl
pop
std
pop
jl
pop
loope
add
mov
clc
add
popa
arpl
xchg
xchg
cmc
mov
cli
scas
dec
pop
cmp
dec
mov
icebp
mov
sbb
hlt
cld
adc
push
movsl
push
add
es
icebp
mov
sbb
add
sub
ficoml
hlt
test
dec
jmp
movsb
pop
mov
xor
sti
test
into
popf
sbb
ljmp
fsubs
jge
das
mov
pop
xchg
ss
jns
loope
nop
mov
lcall
pushl
std
dec
sub
jmp
in
movsl
mov
scas
jne
andl
test
fcmovnb
call
push
or
jmp
jns
ljmp
jo
adc
outsl
shrb
jp
stos
cwtl
cli
call
call
fisttpl
push
xchg
cwtl
mov
aas
xchg
loope
call
int
faddl
neg
das
jecxz
jl
jmp
mov
jbe
dec
xchg
jg
jg
xchg
inc
loope
sub
ss
ljmp
inc
sbb
mov
add
mov
jnp
sub
aad
sub
decl
stc
pop
mov
adc
pop
loopne
out
or
jmp
lret
fadd
test
arpl
pushf
decl
dec
cmpsl
rcl
xchg
leave
das
daa
pop
outsb
sahf
movsb
setae
mov
je
cmc
call
popf
mov
and
push
sahf
push
out
mov
inc
xchg
stc
hlt
sbb
mov
mov
in
jno
sbb
arpl
pop
sahf
fdiv
pop
enter
sbb
lds
aam
in
into
ret
cmpsl
hlt
in
add
jae
lret
xchg
dec
sti
lea
adc
push
mov
push
jo
addl
mov
sub
out
xlat
push
std
lcall
sbb
cmc
jne
xchg
in
mov
mov
adc
mov
dec
fwait
sub
cld
inc
ja
lcall
and
mov
mov
lcall
mov
pop
pop
or
inc
add
jl
inc
imul
stos
ljmp
std
cmp
mov
push
jno
mov
or
imul
jg
xor
scas
mov
js
fldl
pop
or
js,pn
out
lock
decl
mov
cmpsb
cmp
or
ss
push
lahf
fists
push
popf
inc
in
negl
incl
das
inc
sub
xchg
scas
dec
es
lods
fstps
dec
push
or
imul
push
std
mov
and
mov
sbb
sbb
lea
push
lock
jg
aaa
clc
pop
mov
repnz
jl
adc
push
and
dec
or
clc
mov
xchg
lock
mov
clc
outsb
xor
call
enter
clc
mov
mov
xchg
push
inc
jns,pt
bound
jg
incl
mov
jg
in
movsb
aam
push
pop
mov
jmp
outsb
lahf
adc
sbb
loopne
imul
mov
out
test
push
add
sahf
xchg
outsb
nop
jbe
addb
cmp
cmp
cltd
pop
test
mov
push
inc
or
xor
xchg
sbbl
insb
sub
dec
push
pop
adc
pop
clc
jmp
add
divl
cld
mov
xchg
into
lcall
cmp
push
repnz
pop
adc
insb
mov
sbb
jmp
cli
jg
push
xor
sbb
shll
lret
int3
inc
inc
xchg
and
not
popa
stos
in
loopne
pushl
sbb
and
out
inc
mov
and
int
sbb
mov
stos
fisttpll
sbb
hlt
les
icebp
push
js
mov
pop
mov
std
jo
lea
lret
pop
bnd
hlt
loope
movsl
in
mov
in
add
test
pop
aas
xor
push
mov
jnp
cld
decl
mov
jecxz
mov
icebp
push
ja
ds
and
jge
mov
decl
adc
fisubrs
insl
test
adc
ret
ret
xlat
mov
aam
or
dec
popf
push
and
dec
sub
js
mov
sbb
into
jne
lret
ljmp
pop
cld
out
and
push
add
xchg
icebp
aaa
aaa
test
hlt
pushl
jl
pop
mov
pop
push
mov
jmp
fldenv
xchg
testb
sar
js
sbb
mov
ljmp
xchg
pop
dec
mov
mov
add
popf
push
andb
lret
jl
cmp
xchg
jg
test
jecxz
jns
add
into
loop
inc
test
dec
pushl
cld
jp
add
lds
or
aaa
mov
aaa
dec
jge
or
sbb
pop
rorb
lock
fdivrs
jmp
out
int3
push
sarl
ja
fs
ds
push
add
mov
pop
in
cmp
ljmp
and
test
xchg
pop
xor
jno
mov
adc
mov
pop
repz
sub
andl
jne
stc
adc
add
fldenv
xchg
or
adc
je
and
cmp
ljmp
dec
inc
movhps
jmp
loopne
cmp
push
sub
cmp
adc
mov
push
lods
xor
mov
loope
push
jae
push
adc
or
fcoml
pop
lods
mov
subl
pop
cli
and
add
pop
and
adc
cmpsl
sarb
hlt
decl
in
mov
jp
in
je
dec
dec
inc
imul
inc
mov
shrb
das
or
out
cmc
and
popa
ja
and
jmp
into
xor
xchg
lods
or
pop
cwtl
mov
push
fs
fwait
in
lcall
xor
test
pushf
lcall
jge
sub
ljmp
outsl
nop
leave
mov
push
sahf
xor
fwait
je
and
inc
push
aas
pop
std
lods
jle
add
inc
popf
loopne
pop
sub
icebp
repz
iret
ljmp
push
push
movl
ja
push
dec
xchg
sub
imul
jmp
rclb
rcll
imul
clc
mov
cltd
jg
jg
dec
inc
lock
or
or
or
call
and
and
lret
xchg
jne
hlt
mov
or
inc
call
cwtl
in
fsubl
mov
cmc
repnz
call
jge
xchg
push
mov
loope
or
lds
decl
pop
cltd
repnz
pop
push
popf
sub
adc
adc
idiv
push
cmpsb
xchg
jp
out
mov
test
mov
mov
shrl
fwait
hlt
inc
pop
aaa
inc
dec
cmp
js
dec
call
jmp
jge
neg
je
cmpb
xor
cmpsl
scas
mov
ficomps
adc
std
out
adc
mov
sub
mov
adcl
mov
mov
xchg
sarb
out
mov
add
nop
dec
jp
push
ret
sarl
clc
cmp
jbe
mov
push
push
inc
xchg
inc
shll
leave
in
sti
call
xchg
add
rcrb
or
and
jge
push
sarb
fucom
push
pop
outsl
jg
jb
cmp
adc
mov
sub
sahf
or
orl
jg
mov
pusha
sbb
or
cmp
lock
in
push
decl
xchg
xchg
arpl
insl
test
lahf
push
mov
add
cmp
and
clc
movsl
xor
incl
cmp
mov
dec
data16
stos
fcompl
mov
jne
pop
aad
pop
xor
fs
imul
js
cmc
pushl
jg
jg
enter
pop
jo
ds
scas
into
add
mov
test
aaa
clc
xchg
lods
movsb
cmp
mov
adc
mov
movsl
icebp
repz
inc
cld
dec
ja
lret
sbb
or
incl
lret
outsl
adc
test
lods
inc
ret
ljmp
jmp
test
push
cmp
or
mov
mov
mov
pop
fcmovnu
lea
jmp
movsb
xor
test
push
push
cmc
call
cli
dec
xchg
cmc
adc
movsl
gs
or
daa
pop
pusha
sub
std
incl
or
sub
sbb
push
mov
das
xchg
add
cmp
adc
push
and
pop
adc
sbb
aam
in
push
outsb
popa
sbb
out
sub
test
pop
cmp
push
push
push
mov
inc
xchg
add
outsl
cld
cli
call
mov
push
roll
sbb
sub
call
pop
mov
or
cli
in
mov
stos
int3
xchg
mov
fimuls
inc
xchg
cld
dec
ljmp
adc
or
add
mov
add
lcall
out
jecxz
pushl
xchg
cmp
add
sbb
or
mov
jb
filds
loop
call
pushl
dec
out
dec
push
outsl
into
inc
aad
xor
mov
ljmp
push
jge
int3
ret
jle
push
es
lds
dec
xchg
mov
jle
xchg
pop
push
inc
shrb
cld
pushl
ds
lret
call
notl
imul
pushl
js
shrb
mov
test
aas
stos
cmp
ljmp
sti
adc
sarb
mov
sub
mov
sbb
out
jle
cmpsb
dec
testl
shl
out
jnp
pop
xchg
mov
iret
mov
cmp
jmp
jp
icebp
bound
inc
jbe
ret
cmpsb
cmc
or
loopne
xlat
in
push
push
pop
test
pop
and
mov
int
lock
ljmp
inc
adc
jmp
cltd
xchg
ja
test
cmp
loope
into
xor
xlat
mov
outsl
jnp
repz
xor
sbb
jmp
pop
lret
into
cld
idiv
incl
mov
cwtl
inc
cmp
mov
sub
mov
and
push
cmp
lods
cli
inc
pop
dec
xchg
cwtl
sub
cld
add
xchg
mov
jmp
out
insl
inc
push
mov
xchg
adc
cmp
add
mov
call
mov
test
lidtl
ret
mov
rclb
jae
jl
lods
xchg
fistl
adc
inc
cli
jnp
roll
aas
and
pop
push
scas
sarb
ja
in
sti
in
repnz
pop
and
cmp
es
mov
int3
inc
jmp
fisubs
add
mov
aam
dec
xchg
push
ljmp
adc
xchg
aas
cmp
xchg
bound
sbb
jl
push
or
ret
mov
jmp
fucom
push
je
mov
xor
mov
push
cmp
cmpsl
add
popa
fwait
pop
insb
jecxz
or
dec
push
lahf
xlat
sub
pop
addr16
adc
jnp
js
sbb
jne
popf
test
jne
in
out
xchg
movsl
pop
mov
cmp
fldenv
xchg
push
sub
mov
fcmovu
cltd
insl
sbb
sbb
jp
pushl
leave
fsqrt
adc
aas
ljmp
imul
out
and
pusha
movsb
repz
or
cmp
xor
out
cmpsl
stos
dec
mov
dec
clc
push
jnp
js
fldz
mov
repnz
sahf
shrb
mov
lds
sub
cs
pop
or
lock
sbb
pop
mov
mov
dec
lcall
cmpsb
in
pop
jne
movsl
mov
int3
jne
mov
aam
dec
xor
jecxz
aaa
cli
stc
pop
sbb
ss
xchg
cmc
loope
arpl
mov
cmp
sub
xchg
sti
and
mov
sahf
fadds
cmc
enter
or
loopne
stos
call
push
xorb
pop
sarb
jp
lahf
lcall
mov
push
jl
notb
mov
insl
iret
adc
inc
xchg
adc
cmp
pop
fld1
lcall
pushl
outsb
mov
xor
fidivs
call
and
dec
mov
dec
das
lret
pusha
fisubl
incl
jle
adc
cld
sbbl
xchg
into
and
out
arpl
pop
cld
sub
test
ds
int
mov
into
das
xor
test
rorb
in
pop
movsb
mov
adc
scas
mov
add
and
es
mov
xor
push
fcmovnb
test
ret
or
mov
cmpl
data16
sar
jmp
in
and
or
repz
pop
sti
sub
out
sbb
or
lret
dec
pop
clc
ljmp
mov
add
lcall
pop
jle
pushf
mov
add
dec
push
mov
push
rcr
add
mov
xchg
loopne
mov
lahf
test
pop
push
jno
test
es
add
pop
aam
jg
cmp
inc
push
mov
lahf
in
aaa
pop
sbb
outsl
or
adc
loopne
jne
jl
lahf
dec
sbb
dec
pop
ljmp
incl
push
sbb
mov
insl
or
dec
mov
dec
dec
cld
jl
repnz
jbe
lds
fsts
mov
in
clc
jg
lcall
ret
lea
mov
dec
hlt
pop
aaa
pop
aad
popf
and
lahf
lea
pop
ljmp
pop
mov
xchg
hlt
sti
or
cs
pushl
cli
dec
inc
cltd
jmp
dec
sub
aad
push
imul
sbb
jne
aam
aaa
lea
dec
std
rcl
jae
rorb
test
mov
or
pushl
fldcw
popf
data16
aad
sbb
pop
jp
or
sub
mov
mov
inc
jg
imul
lea
stc
inc
imul
sub
out
icebp
add
ljmp
sub
pop
xchg
and
dec
mov
jg
gs
jl
std
mov
out
mov
fdivl
cmp
in
mov
mov
lock
dec
jne
imul
cmpsb
mov
cmp
jo
rcll
mov
push
add
ja
xchg
loop
sbb
and
or
mov
or
cmp
popf
rorl
push
lret
cmp
int
mov
int3
loopne
jnp
mov
stos
ficoms
inc
fcoms
cld
out
dec
jae
mov
incl
add
dec
sbb
ret
add
adc
lret
clc
imull
sbb
cld
adc
jg
add
mov
xchg
ljmp
fsubs
out
fildll
stc
cmp
sub
sbb
jns
dec
inc
and
jmp
push
je
test
ficoms
scas
jl
loopne
mov
mov
ljmp
icebp
sbb
sbbb
jecxz
scas
mov
pop
arpl
shrl
ljmp
aam
pop
sbb
jnp
je
mov
lret
leave
loop
xchg
pop
subb
pushl
and
jg
lahf
in
xchg
cmp
add
decl
jge
cmp
loop
mov
mov
ljmp
jge
loop
mov
incl
xchg
push
mov
lds
insb
sub
or
jg
incl
fcom
scas
test
decb
test
add
pop
insb
cmp
in
adcl
pop
mov
jae
inc
mov
mov
in
push
ljmp
and
push
xor
jmp
push
jo
jmp
mov
dec
je
jecxz
push
push
cltd
push
test
ja
ja
mov
decl
sbb
xorl
leave
mov
and
decl
mov
sub
fucomi
jnp
jl
and
cmp
push
pop
lods
mov
mov
incb
fwait
rcr
mov
pushf
mov
sub
fsubrl
hlt
jmp
fimull
cld
rclb
or
push
mov
sbb
call
mov
lahf
addr16
loop
pop
jmp
jl
jns
mov
dec
int3
sbb
lea
andb
sbb
cmc
lret
push
daa
std
lahf
sub
xchg
sub
or
jmp
stos
lods
jo
call
mov
mov
rcrb
push
out
dec
fwait
pop
lods
push
repnz
mov
frstpm(287
mov
pop
andl
sub
les
daa
push
sub
fcmovne
mov
lcall
jo
jp
jmp
xchg
xor
test
jecxz
dec
mov
push
and
decl
arpl
addr16
nop
xchg
mov
orb
ret
sub
adc
push
hlt
cmp
jnp
test
pop
push
xor
push
cmp
js
stos
pushl
push
int
js
jle
out
sar
add
fisubrs
test
insb
mov
dec
mov
pop
out
mov
ljmp
mov
test
mov
xor
pop
bound
adc
xor
jle
and
stc
sbb
or
mov
inc
mov
sbb
jno
inc
out
rcrl
mov
call
clc
lahf
jae
fmul
mov
mov
cmc
inc
xlat
mov
cmp
and
aaa
push
cmp
xchg
cmp
sub
je
jg
hlt
mov
mov
pop
je
cmp
push
lods
lock
cmp
xchg
sbb
in
push
gs
ljmp
outsl
push
jbe
dec
clc
fcomi
pop
lretw
mov
pop
cli
ljmp
icebp
push
sub
pop
mov
pop
xor
addb
or
icebp
mov
xchg
imul
hlt
mov
aas
movsl
and
aad
fisubrl
lcall
outsb
xchg
shlb
dec
sbb
cmp
or
mov
cmp
je
inc
jmp
sbb
insb
outsb
in
inc
and
js
push
bound
push
int
outsb
sti
sbbb
cld
xor
std
outsl
addr16
addr16
sbbb
xor
fiaddl
dec
lcall
cld
jmp
xchg
mov
out
cmp
pushf
aad
xchg
push
mov
mov
xchg
or
test
xchg
pop
inc
jo
lret
scas
xchg
sbb
mov
xor
lock
cmpsl
call
insl
dec
pop
push
adc
push
jg
fcmovnb
xchg
loopne
and
mov
lock
faddl
idiv
jmp
in
ficompl
in
lds
ret
inc
shlb
enter
enter
fildll
fbstp
cmp
mov
jbe
mov
or
and
lret
or
jb
pushl
fisttpll
add
std
les
outsl
push
mov
or
fucomip
pushl
add
adc
ret
les
clc
outsl
lock
push
sub
or
sahf
push
lods
sti
daa
jns
cmp
jle
sub
cmc
xor
mov
mov
lcall
pushl
repz
call
mov
in
push
into
push
pop
xor
xchg
sbbl
jnp
sti
out
sysenter
xchg
cwtl
sbb
or
scas
loope
jbe
ljmp
mov
pushf
push
data16
xchg
sub
idivl
popf
adc
mov
xor
jmp
adc
xor
push
inc
pusha
jecxz
jo
add
cmp
xor
idiv
movsl
decl
mull
aaa
xchg
sarl
adc
aaa
push
and
cli
pushf
push
decl
nop
jg
pusha
mov
popf
inc
outsl
mov
movsl
cmpsl
or
or
mov
mov
lock
push
add
daa
lret
xor
pushf
cmpl
jle
divb
test
or
je
scas
pop
mov
mov
pop
mov
adc
int
loopne
add
test
mov
call
add
in
add
fisubrl
int
in
sbb
or
pushl
push
cwtl
jmp
arpl
cmpsl
sti
scas
push
xor
addr16
shlb
incl
incl
sahf
lds
mov
jb
sbb
inc
xchg
add
pop
loop
sub
xchg
pop
adc
in
push
out
xchg
push
jg
pop
or
adc
cmp
sub
arpl
nop
stc
cmp
xor
inc
sar
jg
jmp
pop
add
addr16
or
mov
movsl
push
mov
lds
push
push
adc
call
push
aad
lcall
das
out
mov
fdivr
inc
lods
mov
imul
adc
lock
std
mov
jbe
fldl
inc
ljmp
cmc
lret
jge
sub
mov
inc
pop
jge
call
mov
jecxz
les
sub
out
mov
pop
or
cmp
shrb
dec
sar
dec
inc
aad
push
shlb
mov
mov
jecxz
int3
lcall
dec
push
cmp
addr16
aas
fimuls
ds
test
cmp
push
push
shrl
lcall
out
cmp
or
sbb
cli
xbegin
push
fldl
fcomi
aam
insb
std
call
lret
mov
push
jecxz
fst
inc
je
or
outsl
add
in
sub
decl
out
pop
pop
jnp
lcall
mov
loope
push
xchg
clc
call
sub
xchg
and
jg
dec
lock
jg
jecxz
cmp
mov
or
push
jg
adc
imul
and
enter
push
jnp
and
inc
ljmp
inc
loop
aaa
jl
jb,pn
cli
js
jecxz
jle
adc
cmc
jmp
adc
push
decl
and
push
jecxz
mov
pop
inc
push
stos
xor
pop
push
mov
xor
dec
in
jg
dec
jecxz
aad
mov
add
fwait
cwtl
stos
testb
cmp
or
decl
pop
out
inc
dec
loop
mov
pushl
leave
cmp
dec
dec
or
mov
outsl
add
fiaddl
push
daa
mov
call
cli
lock
mov
fsubrs
fidivs
dec
loopne
incl
mov
xor
fwait
cmpsb
ret
jbe
dec
xchg
fisubs
pop
in
mov
and
jb
stos
js
call
xor
dec
xchg
add
adc
pop
arpl
pop
loop
mov
mov
jle
jae
repz
pushl
cmp
divl
cwtl
lock
pop
sub
fucomip
lods
dec
xor
pop
push
pop
fisubl
andnps
mov
sbb
mov
out
cld
shll
push
imul
ds
aad
repz
jg
repz
mov
lcall
jl
xor
xlat
and
push
loope
sub
push
in
popf
call
jg
aam
insb
and
and
or
mov
push
sub
mov
pushf
add
xchg
xor
mov
xlat
push
jg
ljmp
mov
ljmp
inc
jmp
jnp
xor
ljmp
icebp
imul
loop
or
mov
push
and
pop
mov
stos
das
mov
call
or
ja
xor
jno
pop
insb
push
lea
leave
das
std
faddl
icebp
jnp
inc
pushf
repz
icebp
mov
sub
rolb
xchg
and
mov
mov
sub
arpl
gs
push
jg
decl
push
push
mov
aaa
mov
sbbb
loop
or
mov
insl
lock
jmp
idivl
mov
xor
fucomi
jp
hlt
inc
aas
out
and
pop
sub
decl
mov
faddl
dec
stos
xchg
lods
dec
add
inc
mov
inc
fwait
addr16
xor
pop
cwtl
or
mov
movsl
ljmp
adc
mov
lcall
inc
xchg
in
rorb
in
decl
inc
mov
and
jno
push
and
leave
xor
jp
cld
pop
clc
dec
mov
in
jmp
test
jae
mov
data16
mov
mov
mov
les
lock
and
out
out
add
mov
iret
and
add
mov
iret
jbe
loop
std
dec
icebp
into
mov
xchg
jl
ljmp
push
popa
pop
mov
pop
jns
cmp
and
loopne
pushl
mov
ja
les
push
lcall
xlat
xchg
ss
out
cmc
insl
inc
push
imul
mov
cs
pushl
xchg
das
fisubrs
and
movsb
fwait
mov
sbb
pushl
cmp
mov
int3
add
test
mov
push
sub
sbb
jmp
mov
add
push
mov
push
and
shrl
dec
aas
pop
fwait
out
jne
fdivrs
decl
scas
or
push
and
shl
fs
cmp
std
jge
jg
jmp
bound
dec
mov
mov
jae
decl
lock
pop
sar
adc
xchg
pop
jbe
int
mov
push
outsl
clc
out
xor
aam
add
dec
cmp
xor
mov
bound
cmp
fchs
fs
lea
pop
jae
fistpll
add
or
ret
mov
shll
pop
pop
insl
cmpl
mov
mov
int
call
or
mov
nop
scas
sub
mov
incl
mov
into
push
fstpt
sub
fsubrp
test
popf
sbb
add
subb
lea
ficomps
push
ljmp
mov
xor
push
icebp
push
lcall
ret
popa
mov
inc
cmp
outsl
and
iret
mov
repz
outsl
test
or
mov
jl
inc
popf
fsubs
inc
ret
sbb
jb
jge
pushf
add
cld
fs
pop
jle
int3
call
inc
mov
xchg
movsl
popf
fstpt
icebp
cmc
punpcklbw
data16
mov
ret
fcomi
or
sbb
fstps
adc
clc
ljmp
pop
cld
rorl
stc
les
sar
pushl
inc
push
test
fsts
adc
jecxz
sbb
dec
and
mov
jg
add
fucomip
pop
fadds
fnstenv
insl
aas
repz
js
or
xor
movl
cld
or
fsubrl
cmpsb
aam
sbb
pop
mov
loope
inc
mov
decl
mov
or
inc
mov
je
flds
lret
or
ljmp
mov
jecxz
inc
pop
sar
aas
add
stos
pop
ljmp
call
jecxz
call
into
or
add
aaa
dec
ja
push
test
outsl
mov
lock
add
ret
mov
ret
cli
jmp
sub
mov
bound
sbb
fdivrl
lahf
mov
mov
xchg
test
cmp
push
lcall
out
cmp
mov
mov
xchg
sub
imul
jmp
and
adc
fwait
enter
insl
ficoml
loopne
xchg
dec
flds
add
cmp
decl
ss
inc
inc
rsm
inc
outsl
cmpl
and
sbb
decb
stos
or
je
jle
sub
idivb
jmp
pop
lods
shll
shrb
ljmp
and
xchg
cmp
subb
jmp
fidivrl
and
pop
and
aad
pop
aaa
dec
mov
dec
mov
inc
inc
mov
pop
mov
inc
lcall
mov
mov
pushl
mov
mov
mov
push
dec
add
popa
sub
stos
and
lcall
cld
pushl
dec
push
jge
add
or
int
jmp
aad
ss
push
lcall
jno
add
cld
or
jno
in
outsb
sahf
adc
xchg
loope
clc
lret
cmp
pop
dec
into
imul
adc
jmp
cwtl
loopne
jg
pushf
incl
jae
jns
cs
fsubrp
or
stos
ljmp
mov
jae
insb
pop
aaa
clc
jg
dec
jo
popa
add
xchg
outsb
and
in
mov
mov
cli
push
add
cwtl
mov
out
imul
cmp
adc
sub
push
pop
pushf
mov
fmul
and
mov
jg
pushl
pop
jne
jge
shrb
loope
push
and
pop
and
mov
jecxz
decl
insb
add
and
mov
shrb
femms
repnz
ljmp
test
push
or
movsl
xacquire
pop
loopne
mov
sub
outsl
mov
sar
jmp
scas
add
xor
pop
test
pusha
sub
faddp
inc
mov
jmp
je
inc
xchg
sahf
push
dec
jg
mov
shll
out
insl
icebp
sub
pop
cli
pushl
popa
pop
addl
pushf
cmp
xor
js
inc
sub
jg
fcomps
idiv
mov
rcrl
push
pop
jp
xlat
fucomp
sub
xchg
and
pop
lock
jmp
decb
push
icebp
xor
cmp
rorl
or
inc
orl
icebp
mov
outsl
jp
pop
xor
xchg
xor
jbe
push
dec
and
clc
sub
jmp
inc
mov
inc
pop
out
sub
scas
lcall
jge
sub
jg
sar
decl
sub
js
outsl
sbb
loope
xchg
dec
xchg
mov
add
popa
aam
mov
push
movsl
sub
fidivrl
shlb
loopne
cs
and
movsl
div
incl
aad
enter
mov
pop
pop
pop
sub
dec
dec
cld
ljmp
push
lds
into
sub
in
mov
xor
add
adcb
popl
je
loope
shlb
fwait
dec
jl
bts
jo
and
mull
lcall
push
cs
lret
jns
mov
je
jnp
faddp
imul
dec
stos
adc
push
fwait
loope
xor
mov
std
dec
std
pop
jle
daa
xchg
sahf
ffreep
add
mov
and
call
imul
icebp
push
dec
test
mov
int
inc
fildll
pushl
sub
and
or
ljmp
lea
pop
mov
xchg
xor
xchg
and
pop
bound
mov
sbb
ss
not
cmpsb
ljmp
jg
out
cmpsl
pop
cmp
or
mov
fstp
jl
and
and
mov
rcr
dec
jns
pushl
icebp
xchg
pop
insl
test
adc
nop
adc
loop
roll
mov
cmp
push
mov
mov
xor
cmc
or
mov
lds
or
pop
sti
jns
aad
lea
xor
das
repz
lods
mov
nop
jge
adc
pop
sub
enter
incl
in
subb
push
and
andl
pusha
fs
fisttpll
inc
pushl
lcall
dec
cld
in
push
fwait
mov
pop
xchg
mov
and
ljmp
cmc
ljmp
mov
add
cmc
sbb
cs
dec
arpl
add
das
std
inc
mov
xor
or
call
xchg
int
lcall
jp
adc
lock
repz
sbb
nop
xchg
iret
pusha
in
jbe
js
outsl
scas
out
and
mov
jecxz
jmp
dec
mov
fwait
adc
aad
jmp
xchg
ds
or
incl
out
popa
leave
hlt
aam
stc
pushf
xlat
loopne
add
xchg
or
jg
mov
movsb
jbe
sar
decl
inc
aam
subl
cmpsb
lock
xchg
add
mov
pop
icebp
out
jg
aam
sub
adc
inc
fldenv
les
dec
hlt
fidivl
xchg
shlb
jg
mov
mov
in
pop
cmp
push
lods
cmp
test
or
mov
fsubrl
mov
push
daa
push
pusha
std
cld
mov
fstpl
call
xor
xor
cwtl
sbb
jmp
cmp
outsl
std
cmpsl
testl
jecxz
adc
sub
sbb
mov
imul
dec
mov
push
decl
imul
inc
xchg
sbb
mov
movsl
lock
inc
ret
mov
test
adc
in
rorl
mov
jg
mov
mov
add
das
xor
decl
aas
mov
mov
bound
incl
push
int
or
test
jb
sub
call
jmp
or
jg
adc
bound
insb
push
lahf
sbb
push
lcall
adc
lods
and
inc
ja
shrl
mov
jle
bound
test
xchg
jg
sbbb
lcall
lcall
xchg
mov
frstor
notl
or
sub
test
push
inc
out
aad
incl
xchg
lods
fdivrs
loope
xchg
out
in
popf
jno
lods
stc
jbe
sti
mov
hlt
das
mov
fwait
mov
xchg
repnz
jb
stos
loopne
call
xor
pushl
xor
add
mov
es
inc
insb
ficoms
jecxz
fcomps
out
out
mov
iret
test
ret
jne
inc
loope
inc
fs
xchg
xchg
insl
mov
call
jae
mov
movsl
les
mov
and
inc
sub
push
and
add
jg
xor
cmc
or
bound
int3
mov
jb
adc
std
ret
pop
xchg
repz
loopne
das
mov
das
test
in
pop
xchg
mov
nop
pop
mov
fdivrs
lea
cmpsl
inc
jg
ss
sbb
push
sbb
pop
and
pop
mov
ljmp
out
test
lret
or
adc
loope
cmc
mov
cli
jg
pop
dec
xchg
mov
push
lods
leave
pop
mov
popl
dec
cmc
in
outsl
push
sub
pushf
push
popf
pop
lea
test
mov
sub
jno,pt
adc
xchg
cmp
imul
repz
jg
imul
out
scas
cmc
test
mov
sbb
lds
or
cli
push
dec
incl
add
les
adc
jns
sbb
adcb
xchg
mov
push
flds
adc
add
fadds
ljmp
std
push
cmp
fisubs
cli
neg
or
push
mov
pop
arpl
mulb
push
dec
mov
int
ds
or
scas
lahf
inc
jge
push
pushf
ja
cmc
pop
xor
incl
je
enter
xor
jae
mov
sar
out
lds
int3
test
push
push
popf
lock
filds
stos
ljmp
sar
das
sbb
pop
out
xchg
xchg
and
adc
movsb
mov
inc
jmp
pop
xlat
push
stos
in
jmp
xchg
fmull
ljmp
mov
inc
mov
add
mov
xor
cmc
lcall
fmul
adc
orb
pop
bnd
lcall
loopne,pn
aad
fidivl
stc
bnd
jle
mov
loop
mov
xor
int3
mov
pop
fidivrl
mov
scas
sub
sub
mov
shll
inc
lahf
mov
or
push
xchg
popa
cmp
mov
loopne
fs
js
mov
xor
mov
lret
mov
rcrb
jg
das
sub
jg
mov
movsb
out
jl
popf
std
mov
pusha
ror
xchg
mov
loop
inc
roll
inc
or
mov
cld
call
add
push
imul
adc
scas
and
decl
ja
cli
pop
dec
sub
add
or
aaa
jle
sub
xor
and
lods
lret
jp
add
adc
inc
sub
xchg
loop
arpl
push
dec
std
push
mov
movb
cmp
loopne
add
shrl
out
lret
rcrl
movsb
mov
cmp
sahf
dec
or
or
push
mov
pop
jae
js
decl
fsub
mull
cmpsl
iret
mov
pop
enter
ret
ud0
fistl
pop
and
pop
mov
aas
popa
andb
mov
ja
pop
shl
jb
lock
jmp
push
sub
jecxz
mov
inc
mov
jl
cli
jns
lret
das
mov
jg
outsl
mov
jp
dec
andb
scas
ja
nop
in
pop
loop
jg
jmp
jle
outsl
jmp
fistps
bound
xlat
test
test
pop
mov
mov
mov
mov
add
or
xchg
and
or
jmp
inc
jo
fisubl
cli
xor
jg
jne
repnz
incl
dec
shlb
into
pop
rcl
dec
popf
rcl
ret
pop
inc
xchg
jecxz
fs
push
jg
sub
jl
jbe
into
mov
inc
lcall
dec
lods
inc
call
popf
lahf
jae
push
mov
popa
pop
pop
cwtl
pcmpgtd
call
jno
sbb
cltd
push
push
ret
es
out
out
in
clc
outsl
aad
inc
ljmp
fdivs
adc
mov
pop
inc
jp
cmp
jg
jmp
or
call
enter
push
pop
or
mov
incl
xchg
dec
iret
adc
and
aaa
test
cmc
mov
dec
roll
mov
neg
sub
mov
stos
outsl
rorl
out
xor
ljmp
je
daa
movsl
sbb
or
test
adc
lea
adc
jg
in
les
in
and
dec
sub
dec
imul
je
ret
repnz
inc
ss
movsl
sub
xchg
xchg
int3
and
sti
cwtl
ljmp
push
ljmp
test
dec
pushf
fsubrp
rol
in
ljmp
cmp
daa
push
insb
dec
sub
adc
mov
cmp
xchg
inc
inc
popa
jo
and
cmp
push
repnz
shll
rclb
cli
imul
arpl
jg
aam
fnsave
adc
fiadds
xor
pushl
mov
jbe
xchg
add
into
inc
or
mov
fildll
cmp
pop
aam
cmp
pop
rcll
es
ljmp
in
dec
gs
leave
adc
jl
adc
mov
jae
xor
outsb
or
jnp
pop
or
aaa
rcr
and
in
js
jmp
call
cmp
jnp
fcmovbe
mov
xor
cmpsl
out
outsb
mov
jae
or
jl
rolb
cld
xchg
mov
xchg
lret
sbb
das
jp
inc
nop
and
xor
loopne
shrb
ja
imul
shl
int
or
pop
clc
out
cmp
xlat
push
insb
scas
mulb
ljmp
push
lcall
mov
xchg
clc
test
loope
mov
push
loopne
stos
dec
nop
mov
mov
decl
mul
xchg
imul
lret
xchg
pushf
jp
xchg
ss
into
shrl
mov
ja
inc
rclb
pop
scas
mov
lcall
mov
rorb
pop
dec
push
xor
or
cmpsb
frstpm(287
xchg
or
jno
sbb
nop
jb
pop
mov
jmp
cld
incl
xchg
cld
aam
sbb
xor
into
jmp
xchg
jo
or
data16
inc
test
cmpb
lock
cmp
add
cld
mov
add
pop
std
jg
xchg
mov
lods
lahf
out
mov
imul
jg
insl
push
addr16
daa
in
stos
xchg
cmp
test
ss
das
cli
and
push
pop
xor
lock
addb
cmpsb
mov
mov
mov
add
dec
xchg
cmp
stc
test
sbb
test
sbb
push
inc
push
cmc
jbe
mov
mov
cwtl
xchg
in
inc
or
enter
call
cmp
mov
jbe
jae
stos
mov
call
lods
ret
or
sarb
or
call
ret
and
ljmp
scas
inc
pop
cmc
cmp
mov
and
pop
insl
add
mov
mov
cmp
xchg
pop
call
shrl
push
icebp
in
pop
mov
cmp
mov
cld
push
decl
cld
add
jmp
sbb
out
xor
push
mov
jne
jae
jge
xchg
arpl
xchg
scas
addr16
inc
clc
or
jne
cmp
arpl
inc
clc
and
pushl
jae
mov
jns
movsl
and
pminsw
lahf
dec
push
cmp
rclb
test
lahf
shrl
xchg
sub
push
repz
mov
mov
aad
subl
jno
jno
mov
fisubrs
cmpsl
mov
fcoml
fbld
cmp
mov
pop
movsb
push
cwtl
bound
ljmp
add
jle
inc
fsub
cmp
push
stc
cli
es
fcomip
scas
icebp
fwait
inc
lahf
jecxz
decl
mov
xor
mov
and
sub
pushl
int3
dec
cmp
scas
orb
inc
sbb
fistl
mov
movsb
fs
ljmp
clc
xchg
xor
sub
add
loopne
addr16
out
mov
mov
ljmp
gs
push
pushf
imul
divb
fwait
sub
sbbl
jle
jns
mov
sarl
test
cltd
insb
jns
icebp
jl
dec
push
mov
lret
xchg
mov
dec
in
out
pushf
inc
mov
movsl
out
movsb
jae
ljmp
xor
loop
incl
cmp
mov
in
pop
pop
call
and
or
cmc
sbb
dec
pop
xchg
mov
xlat
mov
into
xchg
aaa
ljmp
or
sbb
shlb
pop
mov
mov
jnp
mov
inc
fs
mov
mov
jge
aam
enter
fwait
push
jns
mov
cmp
push
mov
rorl
cltd
xchg
adc
sub
loop
cmp
mov
imul
xchg
es
xchg
push
xlat
lods
mov
in
pushf
jge
or
iret
cltd
cld
test
push
pop
test
popa
push
fmull
sub
push
inc
rclb
push
sbb
lea
sbb
mov
fisubrl
add
jne
scas
adc
add
sbb
ljmp
pushl
mov
mov
pushf
popa
xchg
push
push
xchg
inc
cmp
addr16
xlat
call
jnp
cltd
test
fcmovbe
fwait
in
pop
inc
xorb
mov
cmp
outsl
call
jmp
sahf
rol
push
lods
aad
jo
push
mov
jnp
out
lcall
sbbl
push
scas
cmp
movb
push
call
fcmovnu
call
mov
push
int
sbb
std
call
dec
jge
pop
xchg
andb
out
addb
mov
call
pop
aad
push
sbb
or
and
jae
dec
stc
or
mov
pop
jae
test
pop
jg
shlb
mov
aas
sti
dec
dec
mov
jno
cmpsb
leave
into
lahf
outsb
xorb
add
ljmp
fildll
adc
xchg
xchg
cmp
jbe
or
xchg
sub
out
push
push
lods
je
popf
fwait
mov
sarl
fildl
dec
pop
insb
je
sub
inc
push
and
add
jmp
mov
mov
mov
adc
add
jnp
clc
jmp
sbb
mov
call
lods
in
cld
fisttps
ljmp
ret
add
xor
mov
xchg
dec
je
ss
call
incl
clc
jp
imul
jbe
stos
inc
pop
sbb
aaa
cli
and
orb
incb
cmp
jle
incl
jno
movsl
repnz
test
lcall
ret
adc
or
pop
ss
pop
inc
cmpsl
rcll
or
mov
icebp
idivl
sbb
push
loopne
pop
or
mov
cli
cmp
xchg
imul
jg
call
inc
icebp
aad
cld
jno
addr16
xchg
loop
outsb
aad
sub
mov
adc
lea
inc
decl
cltd
adc
fcom
push
testb
mov
inc
stos
and
inc
mov
jmp
xchg
in
jge
popf
pop
push
add
cmp
mov
dec
leave
ja
loopne
das
pop
mov
fstps
adc
ret
or
lcall
call
movsb
ja
push
scas
mov
mov
add
cmp
test
call
pop
xchg
jns
filds
sbb
mov
push
mov
mov
mov
xchg
pop
xorb
mov
mov
call
mov
pop
ret
xor
stos
xchg
addr16
pop
jp
xchg
jp
xchg
add
sbb
sbb
sbb
adc
clc
cmp
aad
and
fdivs
paddq
mov
call
or
int3
inc
inc
aad
bound
pop
call
xor
pop
jg
pop
shll
aaa
inc
data16
outsb
negb
xchg
xchg
push
jg
dec
sbb
lcall
cmp
lods
jmp
pop
jecxz
sar
mov
pop
ret
mov
insl
out
lods
lret
jns
in
sub
ljmp
icebp
out
cmc
xlat
jmp
inc
cmp
mov
inc
outsb
call
adc
xlat
movsl
loopne
shll
sbb
add
fcomi
mov
loope
mov
inc
mov
int
dec
fadd
iret
or
or
dec
ja
push
xor
or
fidivl
addr16
lahf
xchg
ja
sbb
mov
xor
pushf
lcall
jg
pop
sbb
incl
or
and
add
dec
jge
jmp
imul
int
push
xor
mov
xchg
movsl
and
and
dec
push
push
mov
mov
rorb
adc
cltd
sub
lods
shrb
sar
jp
lock
les
pop
xchg
fstps
fdivrl
cli
pushf
and
call
clc
mov
hlt
loopne
push
push
jns
hlt
gs
frstor
cld
call
shrl
sahf
xor
jno
pop
add
pop
flds
jo
es
mov
dec
jbe
cmp
fnstcw
inc
push
inc
loopne
push
psubusb
xchg
iret
xorl
jmp
cli
lret
test
dec
daa
adc
fdivl
lods
lret
add
xchg
mov
push
inc
loope
sub
lds
clc
sub
cs
inc
xchg
mov
push
fldl
ss
mov
imulb
sbb
lods
push
stc
pop
stc
pop
cmovb
in
ljmp
lret
xchg
jp
mov
mov
xchg
scas
loop
popl
stos
mov
fnsave
jbe
cmc
jecxz
dec
adc
aaa
adcl
sti
jns
ljmp
cld
pop
push
sub
xor
add
mov
push
mov
int3
cld
add
jmp
cmp
dec
xor
xchg
popf
adc
daa
dec
fisubrl
jg
lcall
add
mov
imul
mov
inc
push
add
or
xchg
call
decl
psubsw
mov
jge
xchg
adc
ud0
ljmp
adc
bound
daa
xchg
movsb
adc
out
insb
add
into
sub
xchg
sbb
sbb
and
add
mov
ds
inc
sahf
push
clc
xchg
sub
pop
sub
xchg
and
ljmp
fidivrl
mov
out
in
in
cli
push
mov
pop
out
xor
test
idiv
outsl
jno
xchg
orb
mov
in
out
ss
pop
clc
inc
stc
shl
sahf
lret
or
mov
jb
jge
push
shrl
pop
call
fwait
lock
idivl
pop
sub
mov
ss
ljmp
lahf
mov
adcb
out
dec
mov
lds
int
pushf
jns
and
mov
fbld
jmp
dec
aas
and
adc
repz
aaa
add
xor
movsb
pop
cli
inc
jg
mov
lcall
lods
sahf
sub
pushl
dec
and
sbb
inc
div
pop
xchg
jb
xor
sahf
loop
add
mov
ficoml
mov
jle
lods
pop
stos
inc
das
sub
imulb
call
mov
outsl
jns
mov
fwait
mov
pop
mov
jg
divl
insl
ljmp
in
enter
scas
sbb
ret
in
lds
sub
mov
incl
jb
sbb
mov
outsl
inc
mov
fimull
push
xor
les
mov
decl
pushl
repz
sub
and
mov
dec
dec
lds
lods
incl
stc
lock
shll
or
test
inc
mov
or
jle
icebp
fucomip
pop
es
ret
lock
sub
ja
mov
ljmp
mov
test
cmc
mov
rcr
ja
xor
and
clc
pushl
repnz
cwtl
in
xchg
dec
xor
mov
add
mov
cli
fbld
dec
inc
rclb
pop
leave
int3
loope
xchg
loop
push
sarb
movaps
sbb
call
push
int3
shll
clc
and
mov
imul
inc
jl
cli
mov
movsl
fbld
sbb
inc
call
fistl
lret
and
mov
xchg
es
in
into
jmp
hlt
and
mov
inc
mov
scas
mov
bound
mov
mov
clc
sbb
xchg
mov
ljmp
aam
fcomps
or
xchg
movsb
jnp
lods
pop
dec
mov
and
jno
jo
mov
mov
inc
sti
adc
jge
jg
add
addr16
mov
push
orl
cmc
lret
in
sahf
pushf
in
pop
in
add
sbb
decl
lods
pop
and
pop
aaa
stos
je
sahf
in
scas
cmc
jae
cli
pop
jg
cmc
and
in
cwtl
or
push
add
jmp
gs
mov
lods
sub
and
mov
xor
sub
mov
arpl
not
inc
xchg
mov
lcall
std
call
out
jbe
cmp
xchg
push
test
out
inc
sbb
mov
insb
insb
call
sbb
stc
pop
push
jbe
ljmp
push
push
out
bound
icebp
jmp
xchg
xchg
imul
ret
ret
mov
mov
out
sbb
loopne
jnp
std
filds
ljmp
xor
incl
cmp
loope
xchg
sahf
jne
pop
cmpsl
sub
stos
push
mov
mulb
sbb
and
pop
roll
int
cltd
and
loope
js
rolb
mulb
pop
rorb
push
aas
and
jg
and
addl
fxch
xchg
mov
stos
paddd
icebp
insl
xchg
ljmp
std
pop
shl
xchg
int3
xchg
inc
pop
in
lcall
xlat
cmc
xor
inc
pop
sbb
call
call
dec
sbb
xor
cmp
outsb
leave
sub
iret
xlat
mov
pop
push
cs
dec
sbb
inc
fiaddl
cmp
push
adc
shl
cld
sbb
inc
pusha
rcl
arpl
cs
lods
lods
cmp
fucomip
dec
pop
cmpsb
scas
hlt
mov
or
dec
sub
aad
test
incl
movsb
xchg
sub
sub
ret
das
push
cmp
shll
jo
and
lret
mov
decl
mov
and
test
or
into
dec
sti
pop
fiaddl
add
gs
test
test
pop
xor
aaa
cli
pushl
mov
xor
mov
jbe
or
bound
jmp
es
xchg
xchg
xorb
lret
mov
loop
jmp
int3
sahf
mov
sbb
inc
and
pop
dec
mov
outsl
and
filds
stos
sbbb
cmpsl
adc
ret
sbb
sub
cmc
add
cmp
cmp
call
push
cmp
adc
into
jge
mov
mov
xchg
jae
rorb
push
sti
push
adc
incl
xchg
push
dec
adc
jnp
testb
sub
call
dec
add
les
or
stc
push
xchg
lock
call
adc
shrb
fnsave
idivb
cld
cmp
mov
daa
cmc
cld
std
inc
pushl
or
nop
cmc
xchg
sub
popf
push
and
dec
test
negb
mov
bound
mov
push
bound
lcall
adc
cmp
int3
push
es
pop
jle
jge
das
addr16
sub
movsl
fiadds
pop
mov
inc
jl
decl
fcomps
adc
repnz
push
movsl
cwtl
and
mov
mov
sub
jo
fwait
mulb
rcll
inc
into
jmp
or
cmp
cmp
cmpb
mov
sbb
sarb
add
push
call
add
mov
cltd
push
loop
dec
jg
mov
int
call
jg
incl
xchg
xchg
out
mov
or
jne
lahf
push
and
cmp
jg
pushl
es
and
shll
jbe
sarb
jle
xor
jmp
in
ret
fcoms
sub
mov
jo
out
out
adc
movb
jmp
test
lock
xchg
lea
shll
mov
sbb
loopne
ljmp
mov
add
add
mov
sbb
imul
loopne
jmp
sbb
out
cmp
sbb
lods
jge
ljmp
rorl
mov
jle
out
fsts
mov
es
outsl
cld
inc
dec
xlat
nop
lahf
jns
ret
in
mov
jnp
pop
mov
jmp
test
jns
jbe
aaa
test
popf
sahf
xchg
popa
or
inc
imul
call
mov
lret
xchg
in
jge
outsl
arpl
in
jae
ficoms
or
hlt
cmp
fucomip
incl
jae
xlat
lds
mov
mov
dec
dec
and
jg
repz
stos
popw
nop
push
or
and
mov
pop
adc
mov
fucom
dec
xchg
sarl
dec
jmp
or
lcall
or
push
loop
out
dec
sbb
add
jne
add
cmp
call
adcl
adc
and
xchg
sbb
pop
in
js
jecxz
fcom
loope
lcall
out
rol
xchg
aam
mov
pop
mov
jmp
mov
push
push
inc
and
mov
or
cld
incl
adc
jne
in
rolb
jno
sti
push
inc
mov
sub
push
lcall
dec
jo
dec
outsb
pop
or
add
add
cmp
ljmp
fists
or
inc
cmpb
xlat
scas
pushf
sub
jle
dec
or
sub
movsl
sahf
idiv
push
sti
sbb
sub
test
sbb
lods
ss
mov
sbb
or
inc
jg
or
sbb
cmpsb
incl
mov
xchg
adc
flds
lahf
adc
dec
adc
add
push
xchg
test
sar
jmp
ja
into
std
stos
cmpsb
fdiv
jg
fbld
cmp
or
jae
ljmp
cmp
sarl
daa
jmp
add
adc
dec
sbb
mov
movsl
sub
fstpt
roll
bound
sub
aam
outsl
push
cli
pushl
sub
pop
in
pop
imul
ret
pop
ljmp
lret
cmp
notl
leave
cmp
rorb
inc
pop
cli
das
lock
or
xor
cltd
or
inc
add
lcall
mov
or
pop
cmp
cmpb
pop
pushf
cmp
mov
std
adc
cltd
dec
or
lahf
lcall
lds
add
push
push
cltd
into
adc
jge
push
popf
pcmpgtb
repz
decl
mov
cmp
xor
notl
xchg
ret
cmc
cmc
nop
push
movsb
lds
adc
jg
ljmp
jmp
fwait
pop
cs
arpl
cld
cmp
push
adc
dec
push
pushf
scas
ljmp
push
push
mov
cli
pusha
cmp
ljmp
xor
push
test
jno
cmp
decb
jb
flds
sbb
add
movb
out
out
pushl
add
or
out
insl
dec
push
dec
in
and
test
pop
push
aam
movsl
and
jo
mov
push
mov
sbb
jg
in
bound
aaa
daa
out
test
add
insl
nop
sbb
addl
fs
adc
add
pop
xchg
cmp
out
dec
std
mov
push
push
sub
cmpl
fistps
mov
sarb
stos
pop
inc
shlb
mov
fistpll
mov
imul
ret
test
xor
mov
lret
or
test
mov
mov
shrb
insl
push
and
sahf
xor
sbb
dec
filds
lcall
nop
cmc
xchg
and
and
cmp
call
mov
fstl
ud0
addl
inc
fldl
push
loopne
jmp
fldt
or
out
gs
xlat
xchg
dec
popa
and
fwait
cmc
jg
pop
sbb
pop
loop
cltd
in
xlat
mov
xor
fiaddl
lods
fbld
sbb
sbb
das
add
je
adc
inc
xchg
stc
sar
popf
push
xor
or
mov
sarl
xor
call
stos
and
pop
push
and
ret
pop
mov
push
dec
inc
push
in
pushf
jle
ljmp
xlat
xchg
jno
mov
cmpsb
sbb
add
cltd
imul
xlat
aas
flds
test
gs
repz
test
mov
pushl
cwtl
add
mov
stos
mov
xor
hlt
clc
fildl
lahf
mov
out
outsb
jnp
stos
adc
divl
push
inc
sub
mov
mov
aam
mov
mov
negl
shrl
pop
cli
fisubl
pop
loopne
dec
hlt
push
bnd
or
pop
stos
mov
fdivrp
pushf
sbb
cmp
in
pop
push
test
mov
adc
sub
decb
call
mov
add
test
sub
push
sbb
cld
je
lahf
pop
cld
incl
jge
push
xchg
cmc
dec
ret
lea
decl
in
loope
xchg
xor
and
fsubr
fildll
outsb
inc
adc
pop
mov
sub
ds
mov
movsl
sbb
mov
pushf
int3
cli
clc
mov
lods
sub
or
ljmp
sbb
adc
and
jmp
cmp
pop
bound
ja
xchg
clc
jmp
and
cmp
mov
jo
or
aas
push
inc
jb
in
push
inc
jle
inc
lcall
aad
imul
ljmp
sub
stos
mov
sub
mov
mov
jno
testb
stos
fistpll
nop
fdivr
jne
lahf
out
xchg
lea
lods
mov
ljmp
mov
mov
xor
test
in
jb
inc
faddl
mov
dec
movsb
jo
out
rolb
stos
imul
fucomp
rolb
idiv
decl
adc
pop
pusha
mov
cwtl
mov
sbb
push
and
cmpsl
ja
ds
or
sub
outsb
push
pushf
jmp
aam
jg
sbbl
push
adc
or
pop
dec
cld
mov
add
test
fs
jecxz
or
jnp
xor
aas
mov
push
lcall
sub
in
dec
movb
and
pop
imul
movb
decl
leave
sbb
xchg
rol
movsl
cld
fcomps
mov
faddp
and
ret
call
cs
subps
add
fsubrs
rclb
dec
jns
fiaddl
sub
outsl
add
loop
andl
push
dec
popa
inc
adc
out
aas
or
or
scas
or
xor
arpl
sub
mov
mov
ljmp
push
mov
int
sub
mov
movsb
mov
in
xor
push
pop
mov
jecxz
or
pushl
cli
movsl
adc
xor
inc
ret
inc
mov
shlb
dec
xor
insl
adc
pop
stc
pop
add
mov
xchg
pushl
aad
aaa
repnz
movsl
dec
dec
sbb
adc
pop
jo
cli
sti
ret
mov
ljmp
shr
xchg
jecxz
movsl
sbb
mov
xor
iret
jns
popf
xchg
add
ljmp
icebp
ljmp
xchg
mov
mov
clc
lret
gs
test
test
xchg
lea
std
mov
subb
std
push
dec
mov
daa
adcl
fisubl
cltd
std
mov
add
data16
and
xor
clc
dec
test
cld
in
mov
jns
add
ret
mov
das
pop
push
adc
loopne
fimuls
push
mov
xor
fwait
pop
mov
jp
cli
repnz
sarl
adc
inc
shrl
shl
fadds
or
aam
ret
fs
inc
in
mov
push
aas
inc
ljmp
jg
xchg
fisttps
add
dec
jge
cmpsb
mov
mov
pushl
iret
imul
or
bndldx
xchg
push
inc
mov
pop
add
test
mov
mov
ljmp
cmp
fmull
std
fs
sub
sbb
jecxz
stc
xlat
lea
lcall
jmp
and
bound
sarb
mov
and
mov
adc
pop
das
icebp
mov
xchg
jb
imul
jecxz
jbe
sti
mov
mov
sbb
or
xchg
push
je
pop
mov
pushf
push
out
stos
mov
outsl
push
ljmp
pop
lods
mov
cmpsl
inc
lret
int
stc
call
cmp
xchg
cli
jmp
add
lds
pop
xlat
iret
rol
lcall
mov
flds
pop
lods
push
sbb
dec
jne
xrelease
mov
mov
dec
std
cld
pop
push
fsub
pop
in
sbb
and
xchg
push
sarl
mov
xchg
pop
fisubrl
push
sbb
add
arpl
in
add
fbstp
jle
lods
pusha
dec
xchg
in
xor
xchg
sub
xor
sahf
xor
push
aas
in
lahf
iret
inc
in
ja
jle
dec
repz
adc
lret
incl
call
pop
mov
jecxz
repz
daa
xchg
shl
movsl
repnz
lcall
std
pop
les
inc
ja
and
jno
daa
mov
repz
fnsave
dec
ljmp
or
xchg
adc
lea
sbb
test
repnz
push
call
sbb
out
jp
cwtl
sub
arpl
jmp
inc
cmpsb
mov
jl
jmp
icebp
inc
push
cmp
xlat
in
insb
fistl
js
xor
cmpsl
push
xor
xor
in
out
addr16
scas
xchg
and
xchg
repnz
push
call
test
xchg
dec
push
lahf
movsl
inc
insb
hlt
es
adc
std
test
test
mov
mov
mov
add
dec
cmp
dec
sub
xor
fistpl
mov
cmpsb
push
cmp
outsb
ljmp
add
jmp
out
sub
xchg
aaa
pop
jecxz
push
pop
mov
mov
jecxz
or
push
jp
cmp
mov
loop
loop
or
xchg
push
dec
push
adc
fcomip
xchg
jle
pushf
int
clc
outsb
mov
cmpsb
mov
inc
ret
stos
daa
add
pushl
cli
push
out
shll
push
mov
sbb
push
bound
and
jge
xchg
scas
and
stos
push
rcrl
shrd
dec
sti
mov
sbb
ja
fmuls
xchg
push
test
sbb
incl
jbe
jl
movsbl
data16
jp
lods
gs
idiv
xchg
aaa
ss
imul
int3
popa
loopne
scas
jecxz
ss
jmp
cmpl
fsubrs
add
jb
and
and
add
lcall
jl
jbe
pop
cmpsb
jp
aas
lret
pop
adc
xchg
outsb
mov
cli
decl
iret
and
dec
xchg
pop
outsb
or
addl
pop
mov
inc
add
push
shl
test
mov
stos
insb
xchg
mulb
inc
push
jno
dec
int3
mov
clc
mov
jmp
add
sub
iret
loop
es
pop
mov
loopne
loop
test
pop
jno
sbb
ds
mov
flds
inc
jecxz
notb
cltd
fisubrl
and
das
sub
inc
daa
mov
push
sbb
jg
imul
mov
sbb
cmpsl
pop
xchg
mov
ret
pop
enter
sar
mov
add
test
push
aas
mov
out
jmp
mov
daa
jns
sub
mov
popa
sub
pop
js
pushl
into
insl
pop
fsubrl
das
test
add
call
pop
adc
sbb
sbb
dec
fwait
outsl
mov
push
xchg
ljmp
and
jne
add
es
aam
es
rcrb
lods
mov
lcall
sbb
inc
fwait
leave
adc
mov
stos
xchg
dec
leave
jns
lret
push
fcompl
ret
stos
pop
pop
int
aam
clc
jg
mov
into
or
mov
or
push
jb
and
xor
lock
mov
xchg
pop
or
xor
clc
pushl
arpl
sbbl
cmpsb
and
add
adc
lcall
stos
lret
add
hlt
jge
xor
aad
inc
push
js
loopne
sub
jmp
loope
je
ret
inc
cmp
pop
jg
mov
in
sbb
stc
sbb
movsl
decl
imul
dec
mov
test
xchg
push
test
push
adc
decl
push
adc
fsub
decl
mov
scas
sub
push
lcall
inc
mov
mov
sahf
jb
pop
out
cltd
mov
test
cmp
pushf
clc
mov
test
mov
imul
mov
dec
std
call
inc
insl
rcl
dec
sarl
sbb
in
jg
jmp
cmp
sub
out
mov
xchg
mov
add
xlat
push
push
cs
mov
pop
dec
testb
into
inc
xor
hlt
decl
mov
bound
push
fildl
push
loope
pusha
popf
dec
and
call
fsubrs
push
and
punpckhdq
addr16
test
mov
mov
and
fsts
jl
jle
call
call
jl
popf
out
mov
jp
xchg
das
fcmovnbe
and
mov
xchg
adc
pop
incl
jp
insl
xor
xor
cmpsb
sbb
inc
add
dec
popa
xchg
fsubrs
rcr
push
repz
push
loop
in
sbb
js
pop
add
add
ja
inc
je
adc
ljmp
bound
imul
sub
dec
lcall
mov
xchg
dec
mov
mov
out
add
push
jb
sbb
jmp
jg
mov
dec
ret
jl
or
or
mov
repz
jp
push
out
lcall
shrb
test
jae
jo
shll
cwtl
int3
or
pushf
sbb
lea
lods
lods
pop
jns
or
xchg
les
ret
call
out
and
mov
repnz
xor
pop
mov
push
xchg
mov
lret
stos
imul
cmp
cld
shl
dec
jae
mov
jo
out
sti
cmp
mov
fwait
std
ficomps
jns
pop
push
jmp
outsl
imul
imul
dec
das
rclb
das
adc
lods
in
lcall
js
xchg
jmp
or
out
jno
decl
push
ja
out
int
cmp
imul
cmp
jmp
out
pop
lea
jg
pop
scas
out
adc
test
psrad
push
jmp
pop
test
setp
ja
sub
in
stc
lock
lcall
outsl
add
push
adcl
insl
sbb
lock
pop
jmp
and
rorl
inc
mov
mov
rcl
repz
into
dec
or
sbb
decl
fnstsw
sub
fidivrs
push
xchg
and
mov
nop
cli
adc
push
or
sar
sbb
cld
call
fadds
push
mov
test
mov
mov
sub
cmp
jge
sub
sbb
dec
inc
xorb
popa
jmp
and
lods
mov
push
mov
and
or
in
xchg
pop
mov
das
adc
cs
cmp
push
push
mov
add
fidivl
imul
cmc
pop
mov
sti
fstl
lcall
dec
jbe
cmc
cmp
in
or
mov
test
imul
loop
call
idivl
cmp
notb
ret
pop
ljmp
std
and
sbb
cltd
pop
dec
xor
adc
and
call
hlt
ds
stc
cld
movswl
and
fcmovu
out
lds
loope
decl
add
ret
jge
pop
xor
fsubr
clc
cmp
lret
ret
decb
sub
or
cmpsb
out
mov
sbb
out
mov
or
pushl
push
push
loope
in
and
fs
addl
jmp
mov
mov
xchg
rcrb
mov
and
in
sub
stc
scas
je
stc
fisttps
cmp
jg
sbb
pop
cld
into
and
fcomip
xchg
sub
js
jae
into
out
cmpsl
jmp
adc
and
sub
dec
or
lcall
nop
imul
lret
cmp
add
cmp
xchg
in
sub
repnz
and
jnp
test
incl
push
repz
jbe
sbb
stos
push
cmp
xor
lcall
leave
outsl
ret
into
mov
les
fwait
adc
jmp
adc
sub
das
adc
mov
fcompl
inc
push
je
sti
lcall
push
fwait
in
aad
jecxz
mov
std
insb
sbb
pushl
sub
idivl
sub
dec
imul
push
mov
lock
ds
push
loop
and
cmp
mov
xchg
hlt
fiadds
decl
std
adcl
push
loop
jnp
es
dec
ljmp
popf
push
loopne
loop
jbe
mov
insb
pop
inc
push
sub
out
sti
or
das
sub
ljmp
movsb
loop
mov
test
sub
sub
in
xor
ljmp
xor
mov
xor
add
pop
popf
shr
jbe
jle
sub
iret
sub
xor
das
icebp
adc
push
xor
ja
pop
dec
mov
jg
or
adc
dec
jp
ja
ficoml
add
call
pop
in
jbe
mov
or
pop
add
js
mov
fdivp
lahf
pop
xchg
dec
add
push
pop
imul
stc
dec
addl
stos
aam
test
inc
fs
xor
clc
decl
jmp
xchg
daa
push
pop
mov
xor
lret
pop
inc
movsb
add
test
call
mov
sahf
mov
xchg
orb
mov
aam
pushl
movsl
call
sbb
jns
fimuls
or
pop
cmp
xlat
mov
in
push
insb
push
popa
loope
inc
stc
pop
movsl
add
push
scas
push
dec
fnstsw
mov
mov
push
daa
cmpsl
rcrl
mov
cld
sti
stos
in
mov
clc
xor
and
into
ror
rolb
sub
adc
psubd
jg
rcrl
xlat
fwait
adc
repz
out
shll
lret
mov
das
adc
sbb
lea
iret
std
dec
push
add
xor
push
data16
ljmp
push
inc
sbb
jp
mov
dec
pusha
imul
pop
ljmp
mov
into
adc
and
jmp
fnstenv
xchg
inc
sbb
jmp
cld
push
ss
lea
xchg
in
ret
push
mov
dec
cld
cmp
push
in
jg
nop
xor
xlat
out
icebp
aas
push
xor
test
lcall
push
ja
sub
xchg
pop
outsb
pop
pop
out
mov
jnp
sub
sbb
mov
jg
adc
cmp
or
push
jg
xlat
lret
xlat
xor
lar
mov
gs
mov
push
xchg
clc
incl
dec
adc
pop
xchg
jb
mov
jne
adc
pop
sbb
cmp
lret
xchg
jne
cmp
not
sub
test
jmp
inc
pop
stc
rorb
cmp
xchg
ror
mov
sbb
cli
xchg
popf
jmp
imul
cli
fcmovnu
xchg
push
in
inc
pop
imul
mov
add
push
movsb
adc
repz
xor
push
test
xchg
cmp
cmp
out
mov
outsb
pop
cmp
mov
jne
and
pushl
or
popf
xchg
add
mov
frstor
ljmp
movsl
inc
decl
jno
jbe
push
cli
mull
xchg
mov
loope
mov
out
mov
int
mov
pop
adcb
loope
inc
cmpsb
into
ja
test
stos
cld
lcall
clc
jo
loope
inc
jp
xchg
pop
mov
xor
lret
cmp
lcall
out
iret
js
popf
xchg
fs
jmp
mov
mov
xor
decl
out
js
inc
or
or
mov
jnp
or
dec
sub
fmull
dec
sub
jp
test
leave
in
std
sbb
nop
rolb
mov
cmc
pop
mov
addl
inc
mov
xchg
cvttps2pi
jmp
out
xor
or
or
addb
fbld
mov
outsb
inc
fisubs
jp
sarl
div
shl
cmpb
cmp
cltd
clc
cmp
cmp
mov
jo
mov
jb
jbe,pt
call
xchg
fcmovne
in
vmovhps
fnstcw
neg
jmp
stos
loopne
in
or
lcall
clc
or
stos
gs
loopne
out
leave
cmp
addl
hlt
push
dec
ljmp
jne
mov
js
xor
add
jnp
push
mov
jle
jmp
mov
fisttpl
and
ja
sbb
add
loope
les
jg
je
and
insl
dec
xchg
adc
gs
out
jle
rorb
sbb
sahf
sub
fdivrl
aas
dec
jo
js
dec
pop
mov
data16
movntps
lds
push
aaa
clc
or
adc
aad
jo
mov
daa
mov
cmc
lods
xchg
in
ja
dec
test
sub
decl
xor
adc
popa
je
add
inc
cld
pop
cli
das
hlt
call
stos
mov
adc
clc
lret
jp
lods
and
sbb
push
sub
sti
pop
and
cmp
leave
lret
scas
loop
pop
xchg
out
test
pop
cmp
adc
mov
xchg
movsb
cmp
jb
xchg
int3
sti
icebp
jp
sti
mov
push
gs
sub
sbb
in
xchg
loope
je
mov
pop
xchg
popa
cmp
loopne
test
in
ljmp
lods
dec
mov
fldt
mov
push
stos
les
jmp
inc
dec
cld
arpl
or
and
lret
jnp
lods
inc
push
into
and
mov
dec
stos
jp
call
adc
clc
and
inc
fstpl
incl
push
into
cmp
je
repnz
dec
jl
lret
push
adc
or
inc
sub
cwtl
pop
xchg
jns
movsl
mov
fdiv
sbb
and
add
into
icebp
lcall
mov
scas
outsb
sbbb
in
jno
sbb
jno
jbe
jle
cmpb
mov
jmp
fisubs
mov
mov
andl
rolb
add
loopne
icebp
add
mov
nop
in
movsb
out
xchg
mov
ret
test
ljmp
ficoms
cli
jg
jae
jmp
mov
adc
jbe
jmp
jmp
sub
mov
call
out
push
mov
in
jo
ljmp
popa
mov
push
cs
js
mov
clc
popa
pop
xor
pop
cld
daa
xchg
mov
nopl
jbe
xlat
cmpsl
cmp
lods
outsl
lock
jo
lea
fwait
pop
ds
jne
cli
mov
mov
mov
aaa
fimull
sub
mov
mov
in
jg
push
lods
cwtl
scas
push
popa
inc
loop
rorb
jp
in
pop
sub
nop
sub
and
cmpsl
and
lock
mov
pop
pop
std
repz
outsb
jmp
cltd
xchg
mov
decl
into
sub
push
clc
loope
cmp
cmpsl
push
mov
xchg
adc
pop
jns
aam
jo
pushf
roll
mov
or
idiv
ljmp
push
pop
jle
insb
add
xchg
sbb
leave
pop
inc
add
dec
add
icebp
outsl
ds
and
gs
hlt
pop
pop
pop
cld
hlt
xor
add
dec
mov
jno
mov
pop
or
nop
dec
pop
cli
outsl
nop
sbb
push
cmp
or
dec
movsl
lcall
outsl
cmp
jg
scas
and
jae
fidivs
addr16
rclb
sbb
sbb
dec
fcomps
fnclex
int
int
jg
outsl
cmc
cmpl
mov
cld
std
jg
dec
dec
ds
sti
push
push
movsb
jnp
shll
iret
dec
test
xchg
jb
cwtl
jg
ljmp
or
xor
adc
mov
out
stc
mull
sbb
call
bound
xchg
imul
jle
adc
lcall
stos
test
imul
mov
mov
jg
pop
dec
stos
call
mov
adc
jl
pushf
ret
add
enter
lret
sarl
ljmp
hlt
call
shlb
add
fisttps
cmp
cltd
sbb
ficompl
or
loopne
xchg
adc
pop
fucomp
lcall
aam
fsub
xor
sti
nop
mov
add
ljmp
aad
in
lcall
dec
mov
pushf
scas
mov
adc
mov
ljmp
inc
into
jb
ds
mov
mov
lahf
mov
mov
sbb
idivl
fisttpl
out
ljmp
add
aaa
loope
push
lea
into
mov
xchg
jmp
fmul
test
xor
stc
push
leave
xchg
xor
jnp
push
popa
imul
pop
cmp
push
data16
ljmp
mov
mov
cmp
mov
fldcw
popf
imul
mov
shrb
jno
sbb
xchg
push
mov
in
mov
sub
ss
lcall
iret
shl
aam
or
mov
and
outsb
xor
add
or
daa
int
jnp
add
stos
and
mov
xchg
and
and
adc
jecxz
mov
push
mov
dec
dec
mov
ja
sub
push
lock
mov
or
int
adc
mov
cmpsl
jbe
pop
loope
xchg
sti
popf
mov
repz
jg
std
lea
pop
mov
fidivs
jecxz
aad
xchg
and
add
fwait
mov
push
aad
and
repnz
icebp
lcall
add
pop
sub
aas
xchg
xchg
sub
lcall
std
mov
aam
adcb
mov
xchg
jg
ljmp
lcall
xchg
push
and
sbb
push
shr
mov
repz
stc
mov
test
or
addr16
imul
call
cmpsb
add
xchg
sar
xchg
rcr
push
les
sub
pop
lahf
sbb
lcall
xor
pusha
in
mov
mov
sbb
push
ja
add
mov
fcom
xor
ljmp
dec
aad
rorb
clc
jno
rcll
mov
push
and
int
inc
aaa
push
add
addr16
call
cmp
icebp
push
andl
and
jg
lea
lds
aam
ljmp
mov
pushf
repnz
jg
lds
btr
pop
mov
mov
incl
popf
aam
cmc
dec
nop
ret
das
pop
xlat
inc
push
pusha
xor
jg
stc
enter
sub
push
or
mov
inc
adc
mov
mov
mov
xlat
dec
dec
scas
mov
popl
push
je
pop
scas
jecxz
jmp
xchg
push
and
jle
fisubl
ljmp
cltd
int3
mov
iret
cld
leave
add
jmp
dec
inc
xor
out
lock
dec
xchg
fistpll
aad
xor
int
xlat
inc
aaa
ret
inc
hlt
mov
call
sbb
inc
mov
xor
mov
mov
call
incl
jge
jo
cmpsl
adc
enter
jae
push
pop
hlt
les
and
decl
xor
pusha
add
js
test
mov
lahf
xchg
call
lret
arpl
adc
xorb
jae
push
stos
add
mov
and
cmp
mov
jmp
xorl
aas
dec
mov
xor
jg
or
icebp
dec
aaa
push
xchg
fs
in
fdivr
inc
mov
pop
cltd
movsw
sbb
push
sbb
sbb
sahf
xlat
mov
ss
aaa
stos
push
and
push
xchg
ljmp
jmp
mov
xor
daa
mov
loop
push
out
test
pop
lock
shll
jge
idiv
decl
xchg
mov
push
or
ret
loopne
sbb
aas
hlt
mov
decl
test
iret
pop
sahf
lods
outsl
or
inc
adc
and
call
jbe
std
arpl
ss
push
sarb
cmp
xor
xor
mov
dec
mov
jg
incl
sub
out
sbb
std
push
imul
pop
scas
dec
fisttps
loop
roll
lcall
inc
std
dec
cmp
sbb
bound
dec
pop
enter
mov
fs
add
or
inc
push
adc
jmp
xor
andl
addr16
xchg
mov
addr16
jno
aas
arpl
ljmp
push
cld
pushl
mov
test
sbb
sbb
add
pop
sbb
mov
mov
adc
mov
cld
ds
adc
out
aam
mov
and
jmp
dec
adc
das
outsl
pop
cmp
sahf
call
mov
call
ret
out
push
cmp
jg
mov
pushl
loopne
lods
repnz
std
add
pop
or
push
lods
push
dec
xor
les
push
fsubrp
dec
orl
inc
movsl
fcoml
jbe
xchg
push
jg
jno
lock
sbb
jmp
test
dec
inc
pushl
subl
adc
xor
adc
mov
stc
andb
icebp
das
mov
jp
mov
add
imul
ljmp
clc
sahf
gs
gs
imul
sub
jmp
xchg
jmp
stos
push
cmp
mul
lahf
test
mov
mov
mov
adc
fwait
loop
push
out
pop
cld
dec
push
das
push
sar
les
sbbl
sbb
js
fildll
adc
outsl
push
mov
adc
int3
testb
idiv
dec
ljmp
jg
mov
and
fs
das
sub
lcall
std
push
mov
xchg
clc
pop
das
addr16
mov
int3
popf
fdivrs
mov
movsl
movsl
mov
pmulhw
sub
decl
pop
mov
scas
mov
lods
mov
jge
das
stc
lea
or
mov
adcb
sbb
clc
fstl
js
in
pop
xchg
mov
inc
gs
jmp
cs
lcall
in
mov
repz
or
or
jg
pop
scas
ffreep
cmp
push
lret
push
cmp
xchg
cmp
call
pushf
rclb
imul
jb
sbb
int
mov
fs
dec
push
ljmp
mov
xor
sbb
inc
out
mov
add
cmpb
push
ljmp
xlat
movsb
jl
ftst
mov
aam
idiv
lods
stc
pop
mov
pop
cs
push
incl
loopne
push
push
inc
add
js
pusha
icebp
ljmp
inc
mov
fildl
fsubrs
sub
enter
ljmp
fwait
movsb
pop
xor
outsl
outsl
inc
or
repnz
and
clc
scas
out
cmp
je
rcrb
pusha
call
lcall
lods
xchg
ret
shl
mov
xchg
sbb
loopne
cmpl
fisttps
mov
xchg
mov
loopne
and
cld
ljmp
jp
sub
into
sbb
cmc
jo
fs
mov
insl
call
ljmp
sbb
cmp
xchg
das
mov
pop
aas
ss
cmp
mov
xor
pop
imul
xor
out
mov
jae
push
ljmp
add
xor
out
cmp
jmp
mov
adc
or
stos
xchg
icebp
mov
insl
pushf
frstor
lods
out
xchg
outsl
das
xor
jbe
daa
inc
jno
add
int
mov
adc
push
cli
jmp
and
pop
and
push
fs
fdivl
cld
jle
jp
outsl
mov
sahf
xchg
mov
sbb
ret
and
incl
fisubl
sti
mov
adc
loopne
lock
in
fmull
jge
jg
sub
inc
jo
popa
mov
xor
add
into
fisttpll
ja
push
mov
shrb
call
in
mov
push
fwait
sbb
popa
repz
into
repz
mov
lcall
ror
test
in
in
push
or
sbb
rcrb
xchg
mov
jle
decl
ficompl
jno
jg
sbb
js
jecxz
sub
push
push
sti
mov
imul
xor
push
lods
cmp
xchg
jle
and
inc
or
cwtl
jle
sub
call
insb
lcall
rcrl
push
jmp
pop
repz
dec
and
rol
lret
push
leave
jns
jg
mov
sbb
std
cmp
and
xor
sarl
jae
stos
loope
jns
cmp
mov
xor
imul
mov
test
mov
dec
sbb
dec
scas
dec
ret
ss
and
cmpsb
les
inc
jg
mov
lret
subb
cmpsl
es
aam
lds
iret
fsubrs
push
or
sbb
cmp
iret
test
cmp
inc
lcall
inc
mov
ret
ljmp
push
xor
xor
out
xchg
add
sbb
cs
adc
inc
and
add
insb
jl
call
dec
hlt
fwait
inc
add
sbb
add
fcmovnu
je
jmp
fsubr
out
test
call
insb
in
sbb
jnp
jge
daa
jle
push
outsl
push
cmc
fdivrs
stos
push
and
insb
into
out
jb
xchg
inc
mov
adc
shll
leave
and
bound
stos
in
test
shlb
mov
push
push
fdivl
jl
xchg
stos
cld
popf
in
cwtl
lcall
push
jo
xor
int3
sub
les
movsb
repz
and
pushl
aaa
lods
jb
cli
add
cmp
dec
cli
cmp
addr16
adc
sbb
call
mov
push
sub
add
mov
es
incl
mov
mov
pop
fsubs
out
lcall
mov
jo,pt
stos
cmp
clc
add
bound
mov
ljmp
mov
xchg
decl
adc
loop
movsb
add
mov
out
loop
mov
xchg
add
xor
iret
movl
xor
jnp
mov
ljmp
adc
icebp
int
sti
push
inc
shrb
and
push
pop
in
rclb
out
and
loop
pop
cld
shll
xchg
sti
je
mov
inc
sub
rcrb
push
nop
les
push
or
mov
mov
roll
clc
jo
or
dec
push
mov
jmp
loopne
lcall
lcall
rol
xor
stos
adc
enter
ljmp
dec
sub
out
insb
jg
das
add
fists
cmp
bound
push
and
sbb
xor
ja
push
pop
jl
out
mov
and
mov
in
xor
data16
push
lock
ljmp
jg
dec
cli
push
jge
jno
mov
push
pop
sbbb
push
call
lret
dec
lds
or
inc
add
pop
mov
cmp
jg
lds
pop
sub
cli
and
repz
inc
dec
loope
incl
inc
iret
mov
ds
push
or
lret
lcall
jo
sbb
outsb
mov
dec
mov
dec
mov
je
insb
cltd
popf
jg
xor
mov
sub
loope
xchg
mov
sub
add
jmp
cmp
orb
and
jecxz
xchg
movsl
adc
mov
in
add
ror
iret
mov
outsb
cwtl
sub
movaps
or
cmp
ficomps
xchg
adc
jb
push
xchg
cltd
dec
dec
inc
mov
dec
dec
int3
push
fcomps
inc
in
cmc
xchg
clc
jmp
out
in
in
ljmp
and
jae,pt
xorl
push
popa
cwtl
jecxz
nop
add
xchg
or
lret
shlb
fucomip
jmp
mov
xor
sub
and
gs
xchg
mov
clc
lds
ficoms
adc
psubq
imul
dec
add
repnz
shl
dec
movsl
xorb
push
lds
dec
and
mov
sub
inc
sub
and
lahf
mov
test
ljmp
adc
ja
je
cmpsl
adc
cmp
in
es
mov
pop
lret
pushl
cmp
or
inc
mov
insb
xor
hlt
xlat
test
call
mov
loop
cmc
and
sbb
loopne
jnp
add
pop
into
shl
pushl
daa
push
notl
in
jg
sub
dec
pop
inc
lock
cmp
inc
subb
ljmp
movsl
cmpsl
inc
mov
sarl
xchg
ret
dec
idiv
decl
in
subb
or
aaa
xchg
es
jmp
inc
stos
mov
movsl
imulb
or
or
ljmp
xchg
out
xor
add
out
cli
ljmp
mov
push
lock
jne
ljmp
insb
adc
call
js
xchg
mov
lcall
jbe
lret
arpl
das
insb
mov
pop
lds
pop
rcrb
cmp
jle
sbb
ljmp
cld
pusha
je
lods
mov
subb
cmp
sbb
test
gs
mov
inc
jo
imul
cmc
mov
std
mov
jg
into
add
sbb
fisubl
xor
push
cmp
cld
pop
call
out
in
mov
pop
outsl
shll
and
lds
lcall
movsl
dec
fcmovbe
sti
cmc
out
icebp
outsl
mov
add
add
ficomps
jg
in
pop
pop
pop
xchg
add
pop
inc
sub
jmp
or
dec
arpl
in
jg
ljmp
or
loopne
insb
pushf
add
pushl
test
lcall
jl
rcll
adc
imul
or
xchg
scas
jmp
data16
pushf
icebp
mov
inc
test
neg
mov
loop
fists
jo
or
insl
jge
icebp
ret
dec
mov
inc
inc
push
push
jmp
xchg
stos
call
fcmovnu
mov
mov
push
push
push
pop
sub
xor
decl
rclb
rcrb
and
mov
xchg
jge
dec
ja
xor
call
mov
mov
jmp
xchg
test
mov
pop
test
ljmp
cld
fmull
negb
pushf
jnp
xchg
repnz
sarb
cmp
insb
fdivrs
loopne
sbb
stos
xor
aad
xlat
in
in
filds
mov
adc
xor
xorb
pusha
sbb
or
test
push
outsb
xchg
push
jno
and
mov
divb
lock
jae
mov
stos
adcb
mov
jp
ret
push
fcos
call
mov
lods
outsb
dec
mov
cld
and
insl
cld
sbb
sub
mov
call
xor
arpl
or
pop
cmpsb
loopne
daa
sarl
sub
decl
or
add
insl
or
dec
mov
gs
cld
pop
incl
das
sub
cwtl
xchg
push
adc
inc
pop
cmp
cmp
and
adc
jecxz
and
jno
fstp
cmpsb
in
das
or
outsl
hlt
push
mov
mov
push
call
cli
xor
xchg
cwtl
lds
xchg
sub
sub
sub
lcall
jge
jecxz
sti
push
push
xor
adc
mov
mov
mov
jns
into
andb
mov
inc
adc
mov
mov
ficoml
sbb
dec
mov
aam
mov
or
xor
ljmp
sti
xchg
pop
inc
sbb
jb
and
and
adc
cwtl
cmp
loope
stc
imul
inc
mov
outsl
std
fistpll
sub
in
jmp
push
loope
cmp
push
add
push
add
bound
std
in
adc
lret
xor
hlt
mov
mov
cmp
insb
je
leave
movsl
or
pop
adc
mov
lock
fiaddl
add
scas
lret
je
cld
imul
lcall
int
pop
int
adc
pop
xchg
stc
cmp
cmp
fisubrs
jnp
mov
push
mov
stc
push
xchg
ret
into
outsl
cld
pop
loop
addl
loopne
in
push
xor
sahf
inc
mov
mov
xchg
daa
test
dec
inc
iret
xor
jp
cmp
fistpll
lcall
xor
sahf
clc
or
daa
push
leave
cmpsl
adc
incb
xchg
cwtl
dec
fisttps
dec
adc
jne
pop
ja
call
sub
add
ss
xchg
stc
add
incl
lock
out
movsb
sub
gs
sub
xlat
in
dec
aam
cmp
mov
or
adc
cmp
out
add
sub
pop
fimuls
ror
jl
adc
ss
call
xchg
xchg
mov
fstl
movb
lcall
in
out
xor
sbb
push
add
and
mov
stc
incl
test
jnp
mov
xor
pushl
push
adc
inc
mov
cmpsl
or
mov
test
sti
iret
cmp
inc
movsl
jnp
push
cmpsb
ret
jp
jns
cs
mov
addr16
pushl
xor
mov
push
js
ss
xchg
cmpb
mov
gs
call
imul
xor
adc
pop
xchg
jp
or
xorb
lock
fwait
mov
xchg
mov
lock
clc
call
add
fbstp
mov
mov
inc
push
push
add
add
sti
push
jnp
xchg
rclb
inc
sbb
lcall
push
mov
lods
add
out
sub
test
decl
sub
dec
rcrb
in
xchg
or
idiv
mov
rorb
lcall
lret
cli
add
or
xor
shlb
stc
aad
or
or
shrb
sbb
test
loop
pusha
inc
mov
mov
mov
mov
lods
decl
outsb
mov
rcll
decl
enter
jne
pop
mov
or
gs
cmpsb
aaa
xor
cmp
ja
pop
pushl
into
adc
mov
gs
test
cld
les
out
rorl
sahf
pop
decl
jbe
jno
sub
mov
call
mov
mov
adc
mov
dec
daa
xor
and
jbe
and
aas
sbb
incl
lea
mov
fdivl
pushf
popa
sbb
sbb
jmp
jg
addr16
aam
dec
mov
mov
je
xor
in
incl
xor
xchg
jmp
pop
adc
mov
out
adc
mul
mov
xchg
mov
fmuls
sarb
jl
test
sbb
pop
sbb
ljmp
sahf
jge
inc
mov
bnd
loopne
aaa
fs
or
jg
push
popa
pop
call
inc
dec
shlb
arpl
das
jno
idivb
fcompl
das
cmc
lea
icebp
adc
adc
movsb
fisubrs
inc
mov
stos
outsb
aad
test
mov
fldenv
inc
mov
cmp
xchg
stc
xor
clc
incl
icebp
sti
dec
xor
aaa
leave
sbb
adc
dec
mov
jmp
imul
jnp
ror
inc
push
incl
mov
xor
inc
or
daa
outsl
or
sub
mov
cmp
aam
leave
cmp
cmpsb
jg
sub
xchg
cmc
xor
jmp
jne
or
pop
xor
arpl
fwait
xor
adc
adc
mov
movsl
jg
sub
push
enter
inc
outsb
mov
cld
cltd
lds
mov
lock
or
fwait
pop
lea
testl
adc
push
jl
xchg
mov
stos
inc
data16
and
ret
jo
inc
mov
fwait
lods
pushl
mov
in
add
mov
rcrb
ds
mov
sarl
pushl
adc
mov
mov
push
imul
mov
aad
jg
incl
rcll
mov
repnz
pop
mov
or
es
call
jmp
stos
es
stos
xor
pop
in
and
jno
pop
dec
negl
enter
push
or
addl
shrb
jp
fcoms
shl
ds
pop
call
mov
addr16
xor
or
fdivrp
lcall
ficompl
addb
and
cs
fsubl
notl
dec
pop
lea
xchg
loop
shll
mov
outsb
ret
lds
cli
pop
add
leave
test
sarb
sbb
adc
pop
aaa
mov
pop
and
aad
push
dec
es
inc
inc
jne
data16
jns
fsubrp
dec
xor
cmpsb
cmp
pop
lret
mov
dec
pop
shl
push
add
pop
mov
lcall
insb
adc
in
pop
xor
lock
push
push
iret
cltd
dec
sbb
cmp
fucomip
dec
jmp
cmp
jno
ja
push
fstpt
addr16
xchg
cmp
dec
ljmp
sysret
sti
jne
adc
std
loopne
repz
mov
inc
sbb
push
mov
pop
sub
jge
test
mov
aad
test
jle
inc
ljmp
jnp
jge
push
mov
bnd
out
and
mov
jg
or
sbb
cli
adc
push
incl
adc
cmpsl
mov
or
fidivl
aam
cmp
addl
and
call
js
jl
lds
fcmovne
loop
or
in
mov
popf
bound
rsqrtps
out
hlt
jg
mov
adc
in
das
xor
pop
adc
lods
push
data16
leave
mov
and
test
mov
lcall
int
push
pop
cmp
ja
call
adc
dec
je
add
testl
out
shrl
test
es
xor
js
cmp
and
pop
loop
mov
arpl
pop
imul
out
sub
pushf
ljmp
and
stos
gs
outsl
mov
dec
aad
mov
dec
sbb
pop
repz
loopne
fnstsw
pushl
scas
in
decl
test
add
aam
xlat
fs
int
call
incl
pop
prefetcht0
mov
push
mov
cmp
adc
mov
sar
xchg
fucom
ret
scas
sbb
je
mov
in
fimuls
daa
mov
imul
rcl
sub
adc
jmp
dec
mov
or
mov
mov
sbb
outsl
push
aas
dec
jle
push
jg
ljmp
add
sbb
jecxz
pop
jmp
lahf
mov
decl
xor
inc
fidivs
mov
testl
test
imul
incl
and
loop
inc
xor
shlb
inc
fldl
jbe
xchg
xchg
cmp
and
incl
jmp
xlat
or
into
aaa
push
dec
push
push
out
push
and
mov
or
test
or
outsl
mov
sbb
push
dec
jmp
inc
mov
mov
push
mov
out
cmp
into
or
push
rdpmc
xchg
in
ljmp
hlt
xor
and
lock
mov
mov
xor
mov
cmp
jg
mov
test
imul
nop
mov
pop
fsincos
ret
arpl
add
add
je
test
xlat
inc
xchg
jmp
cs
cmp
ljmp
lahf
ret
sti
fs
push
or
fs
jo
inc
mov
inc
inc
pop
std
incl
pop
pop
int3
inc
mov
icebp
jbe
shlb
inc
aas
out
jne
mov
das
mov
inc
lahf
pop
cmpsl
cltd
push
outsb
das
xchg
outsl
and
jg
sbb
lock
add
shll
dec
into
fisttpl
mov
ljmp
out
jmp
daa
dec
cmp
scas
xor
hlt
cmp
mov
adc
mov
sbb
or
jae
aas
push
scas
xorb
lods
int3
lahf
inc
enter
adc
pop
and
xchg
jne
sub
mov
lcall
inc
cmpsb
enter
adc
xor
fcomps
jmp
ds
jb
negl
pop
push
shll
dec
cmp
decl
or
xchg
xchg
dec
xchg
fcompl
int
out
out
push
sub
call
add
cli
adc
mov
lcall
in
jo
int3
or
mov
mov
push
inc
jb,pn
pusha
cmpb
xlat
adc
cmpsl
das
jg
jmp
std
ja
adc
fs
xchg
int3
push
pop
and
inc
call
sub
jmp
inc
scas
cmp
sti
mov
jmp
hlt
jmp
adc
bswap
sbb
pop
or
xchg
mov
int3
mov
outsl
das
jle
mov
jp
fisubs
lahf
jns
andl
outsl
mov
adc
fadds
mov
pusha
push
nop
cmc
xchg
jno
fldt
add
test
jns
mov
fistl
sbb
cwtl
data16
xor
cs
icebp
testl
push
mov
sub
mov
adc
decl
icebp
jg
mov
imulb
push
pop
or
insl
sbb
movl
popf
ljmp
std
ljmp
mov
je
push
subb
push
fwait
sub
cli
jns
pop
aam
fistl
repz
orl
and
push
inc
stc
int
inc
pop
mov
sub
rclb
test
in
or
pushl
aas
lahf
mov
cmp
in
add
jbe
pop
jo
xchg
enter
call
mov
rcll
mov
cmp
cwtl
popf
movsl
aas
fmulp
bound
ss
imul
mov
fwait
mov
pop
insb
mov
loopne
push
add
in
movsb
mov
jecxz
jg
decl
inc
out
jns,pt
scas
pop
cmp
test
xchg
mov
bound
in
add
aas
sub
jmp
jnp
bound
xor
sti
mov
add
cld
mov
loope
xchg
adc
aam
int3
ja
lods
cmc
cmp
inc
pop
push
repz
jp
mov
clc
in
fbstp
lods
in
cli
outsb
and
ljmp
cli
hlt
push
add
inc
outsl
sub
add
pop
bound
cmpsb
jge
xor
push
lcall
push
iret
call
ljmp
and
lock
ljmp
cld
shll
push
mov
out
out
out
mov
xor
test
test
sbb
fwait
ror
gs
fisttpl
and
cltd
insl
call
pushl
rcpps
fmuls
test
mov
add
sub
fdiv
or
mov
pop
mov
mov
repz
sbb
cmc
xchg
pop
test
push
mov
in
xor
rclb
mov
call
dec
dec
js
fld
arpl
out
into
mov
icebp
and
jg
jg
lods
cmpsl
lock
out
xchg
mov
or
call
jmp
cmp
mov
das
xor
outsl
pop
mov
lock
lds
out
sbb
sti
jg
mov
mov
jae
and
lods
cmpb
mov
add
mov
mov
push
movsb
push
ljmp
popa
mov
xor
inc
addr16
jge
pop
data16
fimuls
in
lds
filds
loop
sbb
push
daa
nop
jmp
xchg
clc
addb
test
mov
inc
dec
xchg
in
pushf
dec
or
and
aam
dec
jbe,pt
push
out
pop
adc
push
lcall
ret
in
mov
dec
jns
sti
xchg
add
sar
inc
xchg
add
adc
cmp
cmc
cmp
jmp
and
rorb
cli
stos
outsl
lock
decl
push
stos
sbb
test
cmp
bnd
ss
mov
fstpl
xchg
nop
sub
in
add
lea
call
xor
outsb
push
cmp
lcall
in
sbbl
in
movsb
pop
push
ret
push
pop
xor
bound
cmp
ss
lcall
push
cld
cld
rcrl
or
orb
push
outsb
aas
aas
pushl
push
out
mov
fisttpl
aas
inc
bound
xchg
imul
je
push
sbb
fucomi
mov
pushl
add
ror
fdivp
test
dec
nop
jae
add
mov
outsl
cld
jg
outsl
fisubl
push
push
xchg
mov
test
xor
scas
stc
sbb
jg
inc
pop
sbb
cltd
fists
jo
mov
les
mov
or
xchg
inc
or
jmp
dec
cli
incl
jp
sub
jns
sbb
dec
mov
adcb
aad
int
stos
loopne
mov
pushl
or
mov
negb
cmpb
in
insl
jb
dec
ljmp
lock
scas
cmp
fidivrs
adc
add
test
out
test
xor
lret
fiaddl
lods
push
cmp
pop
ret
mov
adc
idiv
mov
stos
fistps
sbb
pop
fwait
test
mov
out
cmp
pop
ljmp
rol
hlt
add
stos
add
adc
inc
arpl
aam
jmp
clc
into
inc
stos
xchg
push
movsb
pusha
mov
mov
incl
outsl
inc
push
push
adc
ret
adc
and
lcall
xlat
mov
xchg
cld
popf
push
scas
jp
stos
mov
adc
pop
xchg
sub
cltd
lock
test
call
pop
movsl
jmp
ljmp
lock
scas
jmp
or
int3
mov
mov
test
incl
mov
lds
mov
ffreep
adc
mov
and
sti
and
cmp
and
ljmp
jp
enter
push
xchg
push
mov
ficomps
or
aad
lock
cmp
jno
inc
insl
outsl
mov
cmp
subb
aaa
push
fdivrp
cmp
orb
das
cmc
lcall
xchg
mov
inc
xor
add
mov
cmp
cli
jmp
jb
fwait
jb
xor
loope
or
mov
push
sub
xchg
pop
push
ljmp
sub
jmp
call
loope
int3
outsb
adc
imul
mov
lcall
enter
jne
movsl
dec
mov
sub
xchg
in
ljmp
mov
dec
inc
and
adc
cmp
pushf
jns
cmp
lcall
push
cltd
push
jno
fildll
mov
addb
push
lods
mov
add
cmpsl
stos
ret
dec
cmc
lods
movsl
xchg
movsl
lds
fsubrs
add
push
sbb
lcall
sub
mov
cmc
sub
and
shll
lods
xchg
test
daa
cmpsl
sbb
rcr
clc
ljmp
ljmp
jmp
adc
clc
sub
cli
lcall
pop
and
mov
loope
sbb
inc
push
lods
xchg
daa
pushf
add
incl
out
notl
pop
icebp
jg
mov
repz
insl
pop
inc
test
or
aad
mov
insl
shrd
adc
shrl
aad
mov
fstp
inc
jecxz
jg
call
push
pop
pop
ret
pop
push
pop
jae
jecxz
rorl
xor
call
inc
push
iret
dec
and
jge
cmp
lea
int3
mov
jno
pop
pop
call
call
xchg
popa
pop
add
sub
or
movsl
jmp
pop
sub
pop
lahf
pop
sbb
lret
cld
mov
push
push
pop
jg
pushl
lcall
adc
jns
cltd
scas
aad
das
lods
xchg
cmp
and
mov
push
mov
inc
setg
xchg
addl
ljmp
enter
popa
ljmp
mov
xor
inc
notb
outsl
lcall
xchg
push
cmpsl
shl
ret
pop
add
mov
xorl
gs
and
incl
cld
pop
aad
or
mull
jecxz
decl
jge
les
cmp
xor
icebp
xor
jns
jmp
push
adc
or
jecxz
sub
out
shl
mov
dec
imul
pop
push
call
mov
push
mov
push
jnp
test
sub
das
popf
fisttps
pop
sub
dec
adc
je
add
in
mov
dec
into
ljmp
loop
add
call
add
sbbl
push
ds
adc
mov
scas
mov
outsb
xchg
cli
not
icebp
xchg
fnstenv
scas
jl
jge
incl
movsl
inc
mov
cli
lods
sub
cwtl
cmp
sbb
inc
movsl
outsl
pop
test
xchg
lods
mov
inc
or
das
insl
hlt
decl
gs
or
add
mov
sbb
cld
pushl
shlb
push
aad
push
mov
add
enter
lcall
mov
xchg
xchg
sbb
pushf
mov
sahf
add
and
outsl
sub
fcomp
sbb
repz
pop
sti
mov
nop
mov
jge
sbb
push
das
add
jg
jno
cwtl
sbb
push
js
mov
add
cmp
xchg
nop
and
or
les
test
and
mov
add
adc
test
incl
negl
push
xor
shll
mov
inc
fsubr
aam
lcall
loope
xchg
push
insl
cmp
aam
out
cmpsb
mov
arpl
leave
pop
cmpsb
inc
enter
mov
decl
jo
add
addr16
pop
insb
or
call
lret
sub
jns
aas
out
push
pushf
int3
in
xchg
ljmp
loop
call
enter
lret
xchg
out
idivl
jl
test
jg
bound
inc
mov
orl
mov
hlt
push
dec
scas
cmpsb
cwtl
daa
dec
jp
in
decl
fs
cmpsl
ja
inc
sub
add
repz
std
cmp
lea
jge
lds
pop
loopne
ret
inc
lcall
sti
ret
cli
iret
xchg
call
push
pop
cmp
daa
in
mov
cmpsl
adc
popa
push
push
fcmovnbe
or
loop
js
je
into
cmp
cmc
mov
or
xchg
xchg
or
data16
cmpl
sub
cmp
xchg
inc
loope
xlat
or
outsb
int
insb
hlt
dec
mov
repz
jge
ficompl
fs
lcall
inc
std
ljmp
sub
mov
xor
stos
cs
pop
mov
xor
fstl
lcall
sahf
rol
or
and
add
xor
out
push
push
shrl
pop
lods
shll
call
cmp
cmpsb
inc
jle
add
cmp
jae
jne
mov
stos
dec
xor
out
xchg
adc
decl
add
aam
xor
pop
add
cli
les
inc
stos
mov
mov
clc
cmp
int
adc
xor
and
mov
or
adc
ror
adc
call
filds
pushf
inc
mov
sub
inc
cmp
or
pop
xchg
lock
int3
pop
dec
xchg
xchg
inc
adc
pop
outsb
inc
fmul
cmc
clc
fucomip
jmp
mov
dec
icebp
and
jnp
aad
sbb
mov
pop
adc
add
pop
pop
xlat
les
shl
add
dec
decl
pop
jmp
das
xor
subl
mov
adc
mov
addr16
sub
xor
ljmp
lock
xchg
xchg
mov
pop
cmp
orl
shrl
mov
mov
in
cmovb
ja
call
cmp
pop
in
ror
cmpsl
sahf
hlt
mov
cwtl
neg
loopne
ljmp
jp
or
xor
mov
call
dec
mov
test
cmp
cld
mov
jno
sub
cmp
push
xchg
dec
pop
ljmp
stos
adc
adc
pusha
xor
lahf
pop
push
fs
and
cld
addb
frstor
pop
sbbb
xchg
ljmp
push
loop
fildl
add
lret
push
sahf
in
insw
sub
jecxz
jle
popf
mov
stos
pop
cwtl
xchg
lcall
inc
xchg
xchg
add
loop
pushf
mov
popl
aaa
and
out
mov
fstp
xchg
rolb
xchg
add
sbb
in
and
add
inc
mov
fstps
loop
decl
push
mov
push
stc
loope
daa
pop
sahf
aaa
mov
lcall
or
fsubl
into
jbe
inc
mov
daa
mov
pop
pop
sub
mov
mov
xchg
lcall
cmp
push
xlat
add
jmp
loope
dec
xchg
xchg
mov
fdivl
jle
and
cmp
test
clc
sub
decl
iret
imul
sub
dec
outsl
jmp
dec
imul
cli
stos
fsubr
dec
push
push
aas
jmp
jbe
outsl
hlt
cmp
mov
adc
movups
push
clc
xchg
mov
mov
inc
out
mov
sbb
bound
lds
popf
out
cmp
insb
arpl
call
movsb
cld
cmpl
inc
pop
xor
in
cmpps
arpl
popf
insl
inc
call
call
hlt
jne
push
adc
xor
adc
add
insl
insl
mov
xchg
fnsave
xor
jl
or
jnp
imul
test
xchg
movsl
addr16
imul
ljmp
add
or
ljmp
xlat
cmp
jmp
cwtl
int3
mov
cmpsb
xchg
and
or
ror
xchg
pop
scas
jecxz
jecxz
fs
jp
push
movsl
inc
push
nop
sub
jle
mov
pop
push
inc
lret
inc
imul
das
ret
jb
out
and
subl
push
ljmp
lock
mov
mov
jae
stc
jmp
sarb
fdivrs
incl
push
fwait
mov
fs
icebp
jmp
shlb
xchg
jg
sub
cmp
jmp
pop
add
cmpsl
fwait
xor
test
sub
call
pop
add
rorl
or
test
aas
sub
test
ljmp
mov
nop
lods
mov
icebp
das
lret
lcall
dec
aaa
das
pop
vmovddup
iret
pop
cmp
out
dec
je
loope
or
mov
ljmp
and
push
outsb
frstor
push
mov
xchg
test
and
lret
scas
das
inc
icebp
incl
mov
mov
push
enter
lcall
or
dec
add
and
jp
xchg
std
and
ljmp
scas
and
pushl
mov
popa
push
test
mov
out
inc
add
sub
stc
inc
sbb
ljmp
stos
xor
inc
xchg
fidivs
fcmovnbe
cli
aad
dec
mov
adc
cmpsb
sbbl
daa
push
jg
insb
mov
or
jne
mov
and
xchg
int3
inc
daa
and
call
sti
jns
movsb
mov
idiv
pushl
cld
and
xchg
ljmp
popa
in
es
jb
push
push
inc
lea
mov
mov
inc
outsl
inc
sar
ret
add
jle
pop
lods
add
out
insb
sti
cs
out
mov
rcr
xchg
dec
jo
call
test
and
jecxz
mov
in
sbb
out
dec
sar
jne
jge
bound
or
mov
push
mov
and
jae
mulb
rcrl
inc
cli
cmpsl
jl
inc
fs
jl
incl
enter
in
enter
int
loop
movsl
incb
pushl
pop
sarb
ss
push
int
ret
loopne
or
sbb
ret
add
sbb
jb
lods
popa
sub
icebp
and
aad
xchg
aam
xchg
xlat
into
mov
stos
test
cmc
sbb
fisttpl
stos
adc
adc
lock
call
xor
fsubs
daa
testb
sub
adc
add
push
fstp
xchg
incl
lods
lahf
ljmp
cmp
testb
pop
push
mov
push
push
nop
sub
push
dec
push
nop
enter
cs
sahf
mov
std
push
dec
push
ja
test
daa
in
cld
enter
mov
xor
adc
bound
xor
sbb
sti
sbb
popf
sbb
lock
jmp
popa
lcall
inc
sbb
cmp
andl
stc
and
jge
dec
jecxz
mov
stc
xchg
push
push
out
mov
sbb
sbb
mov
jbe
pop
and
adc
xor
sbb
addr16
add
je
movsb
inc
mov
loopne
bound
pop
decl
sub
cmc
push
mov
lods
std
and
or
push
dec
fwait
repnz
ljmp
jb
mov
lret
lds
cmpsb
sbb
sub
push
dec
add
mov
dec
push
ret
dec
hlt
jb
mov
dec
mov
jp
int3
mulps
jmp
add
and
out
lods
mov
outsb
cmp
xor
in
cld
mov
nop
scas
call
incl
icebp
popf
mov
jb
lods
sub
insb
pop
loop
xchg
and
in
das
sub
push
mov
mov
xlat
lods
push
dec
xor
sbb
lahf
xchg
push
and
outsl
test
dec
addl
std
fldl
lcall
or
lret
call
sub
dec
fcoms
jae
test
lcall
and
jbe
test
mov
mov
mov
dec
incb
xchg
mov
lcall
popa
sbb
popf
and
and
pop
jmp
cltd
frndint
mov
sar
inc
cltd
ljmp
cld
cmp
loop
aaa
sub
and
imul
incl
rcr
ss
inc
rcrb
popa
or
mov
inc
cwtl
push
idivb
in
pushl
in
push
sti
jmp
stc
outsb
add
jg
ljmp
icebp
mov
fsts
ss
or
clc
mov
pop
and
pop
xor
incl
js
iret
jp
les
xchg
push
dec
iret
jae
and
into
call
jl
xchg
arpl
xor
arpl
andb
or
mov
jl
aad
lea
pop
cli
incl
orl
dec
jnp
sub
insb
jne
sbb
test
jmp
neg
ret
and
aad
pop
sbbl
insl
adc
sarl
out
xor
je
jg
inc
hlt
xchg
cli
incl
add
outsl
aam
xor
movsl
test
mov
div
pop
inc
jl
adc
mov
push
lea
in
cmp
or
lea
adc
cli
test
incl
rcrl
lods
lods
lcall
dec
sbb
push
cltd
cmp
mov
inc
cwtl
jl
ja
imul
inc
jg
inc
push
insb
movsl
cmpl
lcall
inc
out
or
out
mov
rcrb
sbb
loope
lret
clc
test
mov
imul
sbb
dec
or
sub
add
push
xor
dec
fiadds
sbb
cli
mov
dec
mov
xchg
ljmp
sub
cmp
sub
mov
fists
inc
es
icebp
lcall
fisttpll
mov
mov
xchg
sub
test
loopne
shrb
or
cmpsl
push
inc
xor
decl
lcall
movsb
push
dec
imul
nop
xor
dec
push
and
add
repnz
jne
aad
icebp
mov
filds
aaa
ds
or
jo
sbb
sbb
ret
adc
inc
stos
mov
loopne
loop
arpl
adc
xchg
lret
mov
stc
imul
aaa
jae
or
test
aas
ss
add
cmp
decb
rorb
or
pavgb
add
pushl
push
shll
in
outsb
push
cmp
insb
imul
fistpl
sti
js
mov
and
mov
jg
pushl
and
cmp
and
mov
and
aad
jno
lcall
sahf
and
addr16
jl
or
jno
aas
leave
push
jge
pop
and
xor
ljmp
dec
sub
add
outsl
sbb
mov
lds
mov
pushl
push
and
scas
cmp
notb
jbe
mov
xlat
lds
rcrb
lcall
pop
xchg
cli
cmp
add
mov
insb
dec
inc
addr16
aam
insl
or
pop
mov
jb
imul
inc
push
mov
js
push
fstl
add
push
jo
addr16
std
test
inc
call
mov
dec
mov
ds
cmpsl
xchg
push
jmp
cmp
xchg
push
xor
inc
iret
fisttps
mov
mov
lcall
aaa
and
and
mov
mov
in
jbe
enter
sti
pushl
dec
mov
mov
or
clc
mov
xlat
lcall
in
prefetcht0
or
jl
fbstp
adc
fstpt
pushf
xchg
adc
fucomip
mov
lds
xor
inc
std
cmpsl
imul
cmp
jmp
jl
xchg
hlt
inc
nop
out
mov
sbb
inc
lret
data16
ljmp
jns
xchg
lock
das
fnstsw
cmp
push
cmp
xchg
and
pop
cmpsl
sahf
movsl
ljmp
hlt
push
pop
lret
enter
movsl
mov
out
sub
sub
jmp
loopne
mov
cld
mov
test
pushl
xlat
in
out
ljmp
xchg
and
mov
push
jmp
sbb
cmpxchg
lods
mov
sti
sub
lret
jno
jp
xchg
insb
cmp
data16
dec
push
xor
xchg
call
stos
test
jl
mov
fs
popa
imul
jbe
lcall
decl
inc
mov
ljmp
jl
jecxz
and
pop
cmpsb
mov
inc
mov
jmp
outsl
std
jb
int
pop
xor
cltd
lcall
movsl
incl
mov
add
cmp
mov
divb
orl
xchg
fstpt
add
mov
xor
lods
popa
adc
sar
or
cmp
out
nop
int
fwait
mov
stc
movsl
shll
movsb
sti
xchg
mov
aas
sahf
call
in
repz
add
gs
push
inc
sarl
lret
pushl
fmull
leave
push
sbb
insl
mov
out
cmc
andb
xlat
xchg
test
pop
dec
lds
inc
and
rclb
jmp
test
cmp
idiv
push
mov
fdivr
mov
mov
jmp
push
std
ljmp
or
incb
nop
les
xor
aas
jg
call
add
or
icebp
jb
cld
js
pop
adc
pop
pop
dec
pop
and
incl
jae
sub
mov
movsb
testb
xlat
inc
cmp
shlb
adc
jg
pushl
sbb
popl
inc
adc
add
loopne
data16
push
jo
and
pop
dec
jecxz
sub
add
push
ffreep
xorl
lods
adc
xchg
jbe
lcall
mov
jbe
outsl
push
jecxz
mov
pushf
hlt
xlat
mov
dec
fiaddl
mov
inc
repz
jbe
jns
fiaddl
rolb
inc
cli
jg
ja
shl
rcll
mov
test
movsl
cmp
pop
sub
aaa
and
orb
adc
jmp
imul
xlat
xor
push
jge
ds
mov
cmp
lret
sub
imul
pushl
clc
jmp
mov
es
mov
fcoms
ja
dec
or
or
adc
inc
cli
pop
scas
mov
stos
les
decl
and
sbb
jle
dec
lock
scas
call
lds
cmp
mov
xchg
andl
cs
push
sbb
call
lods
rol
xor
xchg
imul
mov
cmp
or
imul
mov
pushl
adc
aas
pop
loopne
mov
imul
xor
mov
sub
hlt
call
or
xchg
jge
jne
xchg
pop
xorl
fildl
mov
pop
clc
pushl
lahf
mov
ror
or
not
push
shlb
dec
repz
add
inc
jnp
jb
fnstsw
mov
xor
incl
xor
push
mov
sbb
jmp
test
xchg
in
loopne
cmp
sti
mov
cmp
sbb
in
loop
test
lods
sarb
incl
jg
into
dec
sub
sub
inc
mov
push
mov
bound
dec
push
dec
jae
inc
mov
imul
jg
ljmp
cmp
inc
rol
aad
xor
sbb
stos
mov
xor
or
das
cld
call
jge
pop
fs
push
bound
mov
and
mov
mov
loop
pop
cwtl
enter
iret
nop
ret
movsl
pop
aad
xchg
pop
dec
push
mov
mov
push
dec
pop
cmp
mov
add
rorb
fiadds
shlb
xor
add
ror
cmp
test
sarb
mov
iret
inc
cmp
clc
ss
sbb
movb
ljmp
or
incl
mov
fs
pop
cmp
mov
adc
jg
mov
cmc
ljmp
ret
and
cmp
add
xchg
pop
jg
mov
enter
jno
jg
sbb
out
mov
jae
and
xchg
cmp
jmp
mov
lds
push
mov
pop
xchg
push
mov
addr16
mov
in
outsl
and
or
push
jb
fwait
lods
jmp
inc
cltd
dec
iret
jmp
dec
dec
cmpsb
jae
rcl
mov
adc
push
sub
loopne
fistl
jle,pt
pop
jnp
mov
push
gs
mov
mov
aas
aam
jmp
insl
daa
mov
stos
scas
mov
sub
call
jg
bound
or
call
mov
jg
dec
jns
sbb
fmul
push
outsb
incl
push
xchg
stos
jno
insb
add
clc
adc
out
call
pushl
xchg
inc
popa
in
push
ret
imulb
jno
cmp
std
pop
pop
mov
mov
jmp
mov
pop
hlt
ds
push
push
mov
ret
aaa
negb
ljmp
cmc
daa
clc
inc
lods
xchg
xor
or
pop
and
mov
stos
decl
mov
movsl
cli
shll
ficoml
push
push
xor
mov
sbb
aas
js
lods
dec
fisubrs
test
cld
dec
cld
call
mov
mov
dec
movsb
mov
std
mov
sub
lcall
icebp
xchg
adc
scas
repz
lods
push
daa
pop
push
mov
jns
pop
mov
dec
std
decl
dec
add
push
pusha
add
cmp
xchg
aaa
mov
test
cmp
dec
inc
cli
jno
xlat
cmc
add
xchg
jmp
mov
jae
mov
sbb
ljmp
je
test
aaa
jo
jmp
rorl
imul
or
lds
je
sbbl
fnstsw
aas
imul
mov
sub
cmp
jg
cmc
mov
js
pop
push
and
add
xchg
sti
jbe
inc
pop
ret
xor
insb
push
add
dec
add
call
and
out
outsl
aas
adc
lret
push
xchg
ds
inc
xor
inc
fsubs
inc
loop
hlt
sub
add
jmp
in
xor
test
xchg
stos
xor
jae
sub
mov
jo
popa
xor
mov
adc
cmc
dec
mov
pop
loop
cmc
andb
jmp
xlat
int
xchg
mov
cli
and
shrb
mov
stc
xor
test
sbb
dec
jo
jb
aad
push
xchg
je
std
mov
pushl
enter
mull
inc
lds
fs
int
jnp
pop
lock
xchg
mov
call
push
or
pushf
dec
inc
lds
movsl
adc
mov
addr16
pushf
inc
scas
arpl
scas
aas
mov
ljmp
sbb
aam
test
lret
arpl
inc
pop
or
mov
nop
push
mov
lods
cmp
push
cs
test
mov
rcll
aam
nop
sti
xchg
andb
mov
or
lcall
les
setg
je
cmpsb
pop
sbbl
insl
bound
or
call
incl
aad
mov
push
stc
test
fcomps
out
lea
outsl
mov
imul
cmpsb
jno
xor
nop
loopne
mov
cmpsl
jne
lcall
sub
push
dec
adc
dec
ljmp
mov
negb
testb
xor
xor
ljmp
mov
sbb
cld
dec
pop
stos
mov
add
addr16
pop
and
lcall
test
lock
or
xchg
pop
and
shll
ljmp
xor
adc
jae
aaa
rcll
stc
pop
sbb
push
ljmp
cld
scas
add
ljmp
and
inc
dec
ss
int3
out
and
sahf
add
pop
imul
lret
add
lcall
jno
stos
pushf
pop
add
and
lods
loope
mov
mulb
sbb
pop
call
push
icebp
mov
scas
jns
jp
inc
pop
mov
mov
insb
imul
fucomip
ds
or
xchg
xchg
inc
jg
fmull
pop
inc
xor
cltd
lock
lcall
push
push
or
imul
jns
into
cs
rclb
xor
xchg
test
xchg
mov
pop
ja
xchg
adc
ret
push
jg
out
insb
ss
mov
ljmp
insl
dec
hlt
shrb
jl
stos
movsl
cmp
xchg
ss
incl
adc
mov
pop
jge
pop
dec
xor
xchg
dec
jmp
negb
fmull
jno
pop
pushl
pop
nop
aad
pop
mov
cmp
jbe
adc
fucomi
sub
call
pop
adc
outsb
adc
vfmsubadd132ps
jg
mov
enter
loopne
daa
cld
push
pop
mov
lock
sub
sar
sbb
lcall
gs
jbe
mov
fsubs
lret
aam
push
add
cmp
pop
shlb
in
movsb
push
out
jb
adc
fnstsw
pop
ss
and
xchg
mov
cmc
pushf
in
std
cltd
fdiv
jg
aaa
je
sub
add
lock
ja
out
mov
push
int3
sub
sarb
mov
and
pop
clc
pop
testb
aam
mov
jecxz
push
inc
leave
xchg
arpl
pop
mov
pop
xor
and
and
cmp
lcall
sti
loop
pop
fucomp
xchg
in
imul
gs
scas
dec
pusha
xchg
mov
fnstenv
decl
adc
and
stc
jno
jo
lret
mov
lods
es
or
popf
mov
cmpsb
xor
xor
and
sub
xchg
std
pop
clc
cmp
and
hlt
sub
movsl
lds
fidivrl
mov
xor
loopne
ljmp
testl
enter
mov
gs
sbb
cmpl
ljmp
jne
ret
aad
negl
pop
mov
clc
sub
pop
jp
ljmp
scas
ds
mov
jg
push
lcall
and
mov
lret
cli
xchg
incl
stos
lret
rcrl
or
int3
cmpps
dec
jno
lahf
fiadds
adc
pushl
mov
lret
loopne
scas
cltd
mov
xchg
loop
push
leave
jg
ljmp
std
xor
add
push
xchg
or
test
jl
fildll
adc
lods
mov
and
xchg
pushl
enter
les
out
jb
cmpsb
and
out
jnp
dec
dec
sub
ljmp
lahf
cmp
lea
push
je
xor
call
jmp
push
sbb
add
fcompl
and
and
call
pop
sti
adc
jg
jae
repnz
and
hlt
and
lcall
add
es
cld
repz
icebp
test
sti
adc
sub
push
push
mov
decl
std
mov
cmp
and
mov
jb
std
loopne
shl
adc
dec
sbb
aas
xor
rol
aaa
and
cmp
jmp
push
pop
add
xor
and
inc
dec
jg
inc
lods
lods
push
fists
jns
dec
fcompl
xchg
pop
xor
ffreep
lcall
repz
loopne
and
pusha
fwait
aam
mov
aas
sti
cmpsl
add
icebp
push
enter
dec
ret
std
push
mov
ja
push
imul
xchg
and
sahf
or
aaa
inc
xor
std
scas
cmp
sub
idivl
push
andl
addb
push
or
incl
push
adc
xor
das
shrl
bnd
sbb
jg
inc
dec
sbb
mov
popf
mov
push
or
sub
je
pop
and
adc
leave
jae
es
jle
call
mov
rolb
or
arpl
sub
fadd
testl
or
mov
dec
add
inc
mov
cs
cwtl
lret
or
in
mov
out
loop
pushl
pop
test
adc
cmp
pop
or
push
jo
mov
call
filds
aaa
cmpsb
jo
gs
jl
shll
repnz
jecxz
mov
aaa
or
mov
das
icebp
aaa
jo
imul
xor
pop
xchg
lahf
movsl
mov
jo
xlat
jmp
lcall
pop
fstpl
xchg
sbb
imul
jl
roll
cwtl
sahf
mov
jg
popf
pop
jge
inc
aad
sahf
testl
mov
fdivrl
cmp
and
stc
stos
repnz
jns
push
fwait
lret
add
pop
clc
inc
mov
xor
inc
iret
call
popf
arpl
pop
pop
inc
ljmp
cli
adc
decl
push
nop
shll
outsb
bound
mov
call
into
lahf
fldl
out
add
roll
push
push
lods
in
sti
sar
mov
cmc
inc
and
pop
and
sub
jmp
ljmp
jge
or
pushl
jae
xchg
out
aam
dec
jae
jp
add
jg
test
dec
icebp
iret
xor
lods
pop
dec
sbb
add
xor
mov
lcall
mov
jne
cmp
das
sbb
push
dec
sbb
inc
jmp
cli
or
aaa
clc
mov
das
fcom
insb
in
inc
cltd
pop
leave
sbb
call
das
imul
gs
jmp
adc
fidivl
inc
add
fisubrs
pop
mov
je
mov
std
add
aaa
inc
pop
or
vandps
mov
movsl
pushl
mov
ficoml
jecxz
sbb
test
lcall
dec
dec
xchg
or
je
pop
negl
and
jns
jecxz
cmp
xchg
fistps
mov
in
cmp
and
stc
mov
mov
loope
add
mov
adc
xor
ljmp
xor
hlt
or
sti
jno
mov
loop
inc
pop
adc
jl
pop
nop
cmpsb
scas
fldt
push
mov
pop
xor
push
mov
hlt
mov
sbb
dec
mov
test
inc
cmp
loopne
lcall
add
call
pop
push
ds
mov
jmp
int
sbb
add
rclb
test
mov
mov
push
or
fnstsw
cmpsb
add
cmp
incl
cld
dec
roll
dec
add
hlt
and
push
neg
fwait
xor
push
jmp
jp
sbb
pop
push
mov
repz
mov
imul
jg
push
and
jp
xor
mov
nop
outsb
cmpsb
inc
out
mov
testl
add
ljmp
pushf
sub
and
jnp
dec
dec
pop
pop
jg
shlb
ret
adc
mov
cmp
ss
dec
ret
mov
jl
decl
xor
sahf
and
insb
pop
push
push
mov
movsb
xor
mov
pop
dec
push
jmp
notb
adc
push
adc
ja
lcall
in
imul
sbb
xchg
xor
jp
mov
aaa
pop
das
decl
ret
jmp
std
xor
scas
fnstsw
xchg
xor
lcall
sub
insb
push
data16
mov
inc
inc
test
xchg
fldenv
js
das
cld
incl
test
xor
and
pushf
loope
adc
push
and
mov
lahf
loop
inc
inc
cmp
cmp
mov
xor
mov
lea
dec
mov
or
jge
scas
mov
adc
push
push
stos
lods
test
or
movsb
andl
push
nop
int3
data16
out
sbb
shlb
jge
test
call
loopne
mov
xchg
imul
xorb
cmp
inc
pop
in
mov
rclb
cmpsl
ljmp
fucomp
sbb
jg
cld
andb
mov
inc
cmp
jmp
test
pushf
inc
mov
dec
hlt
jg
mov
pushl
repz
or
sub
inc
jns
lahf
jl
xor
lea
int3
mov
mov
imul
decl
in
xchg
pop
or
outsl
mov
test
cmp
jecxz
aad
sbb
inc
in
mov
mov
in
and
les
sbbl
xor
pushl
push
adc
out
add
push
mov
pop
insb
cmp
and
cmp
dec
and
ljmp
pushl
cltd
mov
aam
mov
adc
ret
call
cwtl
mov
popa
adc
push
or
sub
sub
jns
shrl
inc
cmpsl
mov
lock
decl
pop
ljmp
out
xor
ret
and
jmp
pusha
push
mov
fimuls
mov
jp
push
aad
add
shrl
test
push
mov
outsb
jne
inc
and
jmp
jge
popa
les
jg
fisttpl
inc
andb
push
xor
cltd
mov
ljmp
scas
push
mov
rcrw
nop
dec
cmp
jns
incl
inc
lods
xchg
and
push
cs
pushl
movsl
aas
and
push
das
jae
gs
push
in
add
jecxz
jecxz
loopne
incl
mov
sbb
fisttpl
out
pop
add
add
inc
xor
lcall
into
jmp
pop
mov
imul
push
and
cmp
push
mov
lahf
in
cmp
inc
std
pop
sub
inc
test
decl
pushl
les
pop
jl
xchg
aam
mov
jg
stos
jg
outsb
jb
sbb
test
mov
stos
cli
bswap
adc
decl
std
jmp
repz
hlt
pop
pop
cmp
add
cmc
jg
fsts
xchg
jae
outsb
and
sbb
sub
mov
adc
push
mov
add
imul
inc
pop
add
mov
std
sar
jmp
mov
ja
fistpll
jge
sub
mov
dec
add
jl
and
out
data16
pop
sbb
mov
and
dec
mov
dec
fdecstp
pushf
mov
push
fadds
negl
insl
push
add
jge
loope
push
push
scas
shr
pop
mov
pushl
in
outsb
xor
xchg
std
sar
ljmp
and
sub
inc
jnp
jo
bound
into
dec
divb
cld
pusha
jae
cmp
push
jl
sbb
add
es
mov
gs
in
std
push
std
xchg
push
push
pop
xchg
xchg
in
rcrl
pop
add
jmp
pushl
adc
in
cmc
inc
je
push
pushl
dec
pop
push
xor
popf
lret
rol
xor
xor
call
cmp
mov
sbb
jno
xchg
es
test
fdiv
mov
push
sub
call
cmp
es
mov
enter
mov
insb
or
jg
movsl
jmp
xchg
dec
scas
shrl
in
pop
push
mov
inc
lea
jb
in
imulb
sahf
and
leave
inc
jns
pushf
cmp
std
incl
sbb
movsb
pop
pushf
into
jbe
jae
aaa
fstpt
cmpsl
repz
fistpl
stos
aaa
mov
jmp
lods
enter
nop
xor
push
repnz
stos
cli
fnstsw
push
cmpsl
data16
out
imul
push
js
inc
lods
outsl
scas
inc
test
icebp
das
fisttpll
subb
pop
xor
adc
mov
loop
movsl
lcall
sbb
push
pop
andb
rcll
jge
adc
test
jg
call
cmp
push
sbb
mov
or
jns
mov
test
call
das
addl
mov
pop
hlt
aas
rcrb
dec
pop
es
outsb
add
jmp
clc
sub
and
and
cli
push
pop
jne
mov
sbb
mov
jle
add
es
incl
xchg
xchg
dec
xor
mov
aas
pop
xor
cmp
out
jp
rorb
xchg
mov
mov
push
dec
pop
cld
cmc
push
dec
xchg
insl
push
sub
popa
sub
sub
sbb
arpl
cmp
inc
call
mov
cmp
pop
dec
pop
call
mov
lods
and
sbb
add
dec
dec
mov
jne
test
sti
movsl
lcall
push
mov
dec
pusha
push
lods
rol
scas
stos
fcom
test
mov
stc
or
lods
incl
and
jg
mov
mov
movsl
jp
pop
add
gs
pop
jecxz
jp
dec
xor
test
or
imul
and
push
adc
jb
fistpl
incl
sbb
mov
sub
bound
aas
sbb
lcall
les
dec
adc
in
jle,pt
inc
mov
cmc
fisubl
decl
jbe
xchg
inc
popf
inc
adc
sub
adc
cltd
jae
xchg
jecxz
inc
incl
pop
cld
mov
jb
add
push
lods
call
sahf
js
fbstp
or
xchg
jb
call
inc
inc
imul
int
fisubs
sub
and
mov
mov
stos
sub
imul
adcl
pop
fldenv
fnclex
lcall
inc
and
pop
mov
jnp
and
lahf
test
icebp
les
in
dec
mov
mov
ljmp
into
mov
xor
call
adc
sbb
sbb
inc
mov
jg
stos
sbb
xchg
call
mov
cmc
iret
rol
push
imul
pusha
ljmp
in
rcl
in
cmp
es
jns
inc
popf
mov
or
icebp
decl
pop
pop
xchg
or
jge
jns
cmp
icebp
imul
repz
lcall
std
jmp
and
xchg
daa
popa
addr16
pop
fwait
mov
jo
nop
xchg
in
data16
incl
push
push
outsb
pop
dec
int
xchg
sar
lea
pop
rol
sbb
in
and
pop
jp
das
cld
in
fsubrp
clc
pop
inc
aaa
xchg
cmp
jl
cs
lret
imul
add
pusha
jg
push
test
xlat
mov
pop
js,pn
call
cmc
repz
xchg
adc
mov
ds
pusha
sbb
in
ljmp
jnp
mov
in
mov
imul
cmp
inc
fcmovb
and
and
push
into
push
jl
stc
fisubrl
fwait
jo
cmpsb
mov
pop
sub
dec
mov
int3
push
addb
inc
or
fldt
mov
sbb
jne
data16
dec
xchg
inc
lds
mov
test
jmp
gs
das
sbbl
decl
mov
lcall
stos
pushf
cmpsb
js
adc
decl
movb
push
cmp
push
scas
sti
outsl
or
pop
mov
jp
lcall
sbb
bound
dec
stos
imul
outsl
xchg
sub
fiadds
xchg
mov
xor
or
iret
popf
mov
mov
mov
daa
pushf
bound
outsl
sti
lret
int
loopne
push
mov
shlb
nop
or
repz
mov
mov
and
mov
sub
scas
clc
sbbb
adc
push
jle
xor
cmp
or
mov
add
out
adc
test
orb
es
iret
mov
jle
jecxz
add
in
push
inc
in
pop
xor
jb
call
mov
loop
pop
push
dec
pop
es
mov
insb
insl
push
push
mov
out
out
leave
adc
js
cbtw
scas
jecxz
dec
pop
call
push
leave
enter
push
push
stc
sub
pop
loopne
add
adc
add
nop
sbb
rorb
push
pusha
gs
int
arpl
cmp
jae
stos
decl
movsl
push
int3
inc
mov
lcall
mulb
sub
les
mov
jg
jecxz
and
push
mov
adc
cmp
mov
lock
mov
fcompl
xchg
ljmp
push
cwtl
cmpsl
xor
les
frstor
call
push
push
mov
mov
aas
push
ficompl
daa
xchg
jg
ja
mov
jmp
int
mov
lret
aam
lret
xchg
repz
loopne
adc
mov
scas
or
sbb
shl
jge
fnstsw
mov
push
pop
lock
cmpsl
xchg
jnp
cmc
popa
cmpsb
loope
outsl
push
test
mov
cltd
mov
out
mov
das
cmc
jg
mov
out
repnz
les
into
out
cmc
lcall
std
in
dec
ret
cmc
adc
rcl
loop
clc
pop
sub
jno
aad
das
jl
xchg
dec
mov
fs
push
pop
push
fldenv
adc
mov
jp
decl
out
out
xor
shll
sti
push
jno
into
shrb
pop
cli
lcall
sbb
stos
or
outsl
dec
xor
fldt
in
sub
jl
xchg
sbb
mov
jo
icebp
aad
add
into
movsb
mov
dec
in
and
lock
incl
cmpsl
imul
mov
push
lahf
fstl
popf
sbb
int3
cmp
lods
pop
out
testl
lret
outsl
hlt
xchg
xchg
jmp
sub
pop
shrl
stos
movsb
insb
xor
add
call
mov
xor
inc
shlb
mov
dec
sar
mov
adc
mov
test
cmp
nop
mov
xchg
inc
xchg
adc
aas
pop
pop
xchg
cld
mov
decl
mov
ret
inc
pop
and
add
fdivs
mov
incl
pop
mov
inc
jp
mov
pop
or
js
ljmp
add
mov
loop
pop
cmp
push
jecxz
cmpb
fdivl
mov
cmp
decl
cmc
push
adc
xchg
add
sbbl
subl
sar
jmp
jnp
enter
outsl
std
sbb
leave
insl
mov
mov
xor
jmp
pop
mov
iret
dec
sub
lds
sbb
cs
dec
pushf
xor
jl
pop
lods
imul
js
or
mov
xchg
inc
jmp
dec
jne
fcmove
cli
lods
push
xor
mov
jmp
mov
ds
xchg
inc
adc
lods
fwait
adc
cmp
fnsave
mov
jae
cld
outsl
adc
in
dec
dec
cltd
sbb
lahf
aaa
arpl
daa
mov
shrl
ja
repz
add
idiv
lcall
decl
jb
insb
fnstsw
jne
cld
add
stos
jg
xchg
jo
xor
mov
dec
sti
dec
xchg
inc
imul
int3
rclb
leave
xchg
aad
sti
hlt
inc
test
jmp
test
pop
addr16
sahf
adc
nop
mov
dec
push
pop
jg
and
fdiv
popf
xchg
mov
decl
inc
mov
popf
ret
enter
mov
jecxz
lcall
push
jg
mov
outsl
sub
inc
je
outsb
jecxz,pn
mov
pushl
mov
out
into
outsb
test
call
popa
scas
mov
inc
cli
mov
jg
mov
mov
or
adc
xchg
sbb
lea
xchg
or
jg
incl
out
rclb
jmp
call
daa
imul
jg
andl
mov
dec
leave
popa
xchg
fisubl
movsl
xchg
shlb
popf
mov
push
lcall
stc
or
aam
push
push
jecxz
inc
and
movsl
fmuls
mov
addb
inc
pop
mov
imull
ds
aad
mov
sti
push
aam
ljmp
repnz
add
sbb
dec
mov
mov
repnz
adc
fistpll
sti
outsl
inc
mov
sub
lret
mov
and
push
sub
mov
cli
cmp
pop
lock
mov
scas
fidivs
jno
jbe
es
imul
push
inc
std
call
jae
imul
test
jmp
adc
push
add
ret
stc
div
ljmp
mov
mov
pop
aad
cli
inc
mov
jno
and
sbb
or
repnz
movsl
ljmp
lret
in
jo
push
push
fnstsw
and
dec
and
pop
std
ljmp
mov
push
sar
jae
push
arpl
cli
lret
imull
shrb
cld
push
fdivl
arpl
addr16
cmp
lods
cmp
lcall
mov
dec
cmpsb
push
gs
inc
pusha
dec
mov
mov
ljmp
adc
and
jns
jo
mov
shlb
sub
cmp
mov
add
sar
outsl
icebp
call
int3
dec
mov
inc
arpl
and
sbb
push
sahf
push
mov
outsl
adc
mov
xchg
xor
push
out
or
outsl
pop
inc
pop
stos
loop
and
bound
dec
jge
insb
cmpb
sub
cwtl
fdivl
pop
jle
xor
jle
lcall
inc
repz
xchg
mov
inc
mov
push
std
ror
cmp
decl
popf
dec
int
ret
jno
lcall
xlat
call
inc
ljmp
aas
leave
notb
jb
subb
shrb
mov
jp
stos
lahf
sbb
sub
mov
pop
adc
mov
sub
addl
inc
enter
scas
mov
incl
dec
sub
mov
mov
fisttps
scas
jo
aaa
inc
pop
sub
xchg
ja
pop
mov
xor
add
loopne
clc
insl
dec
push
mov
incl
mov
fwait
jae
jl
pop
adc
xchg
push
pop
pop
fninit
scas
push
sub
movsl
test
or
aas
and
dec
push
pop
hlt
mov
mov
cmp
ds
dec
and
loopne
jecxz
sbb
lcall
arpl
in
stos
mov
stos
dec
cltd
sbb
mov
std
mov
or
push
xchg
add
mov
lret
inc
sub
ja
inc
rolb
push
inc
movsl
in
xor
aaa
ljmp
lea
mov
jns
dec
into
lods
adc
ljmp
pushf
setp
cltd
and
hlt
or
test
adcl
inc
xor
jge
pop
adc
out
scas
mov
mov
test
lods
mov
sub
ja
pushf
push
or
pop
or
sti
repnz
sbb
pushf
out
test
mov
dec
push
inc
or
dec
aaa
iret
pop
es
fnstsw
ljmp
push
push
dec
push
fidivl
sahf
jo
sbb
jmp
and
out
aad
pop
mov
cli
imul
xor
pop
mov
and
call
cmp
loope
adc
clc
test
outsl
test
enter
cmp
movsl
xchg
pop
jl
sub
in
xlat
xchg
aad
imul
add
cmp
bound
mov
mov
scas
jg
and
fldcw
push
jb
add
lods
das
fimuls
ror
insl
out
or
std
clc
mul
orl
push
mov
jp
mov
sbbb
movsb
shll
lcall
jle
fstpl
inc
xchg
mov
out
ja
clc
pop
jge
loop
pop
leave
fistps
pop
mov
or
fldt
ret
mov
aam
mov
adc
jl
mov
ret
decb
ljmp
mov
idiv
jmp
mov
call
push
jmp
sub
call
fnstcw
xorb
ljmp
pushl
lahf
and
and
daa
cmp
sub
jae
inc
sbb
jmp
xchg
push
cmp
loop
sbb
lods
ret
push
xlat
mov
jne
jg
xchg
mov
add
imul
mov
loope
mov
xor
call
cmp
jg
test
mov
and
adc
jbe
fstl
test
test
ljmp
xor
setns
fstpl
push
inc
push
mov
jne
sub
lcall
inc
mov
add
xchg
push
lock
decl
add
rol
pop
mov
mov
jecxz
and
jmp
movsb
js
fstpt
cmpsl
cmc
add
into
cwtl
push
cmp
fistps
ret
sbb
fcomps
pop
mov
and
sar
leave
lock
test
cmp
pop
push
mov
shrl
push
cmp
cmp
mov
add
rorl
loopne
sub
and
cli
ret
xchg
xor
push
dec
das
clc
xor
pop
add
out
pop
loop
mov
sub
pop
hlt
jnp
popa
adc
mov
cwtl
lock
decl
inc
rcll
sbb
jb
mov
xchg
push
stos
data16
cs
pusha
dec
dec
xchg
ds
lea
lods
xchg
cmc
imul
pop
ret
push
arpl
inc
outsb
lds
js
sahf
ljmp
out
adc
push
adc
in
jo
push
je
xor
or
mov
mov
mov
push
out
fstpl
lret
xlat
mov
mov
movsl
add
sub
jnp
cmc
aaa
in
inc
jo
xor
xchg
adc
pop
pop
sub
or
cli
das
cld
jmp
test
push
test
xor
movb
inc
dec
pushl
es
out
pusha
xor
insb
sbbl
pop
add
scas
cs
xor
sbb
test
decl
incl
sub
pop
xor
cs
imul
lods
sbb
xchg
push
pushl
cs
addr16
pop
cli
add
enter
stos
mov
sarb
popf
cwtl
xchg
call
inc
test
movsl
sub
cmp
out
ss
mov
je
scas
sbb
pop
push
jge
ljmp
xchg
ss
xor
into
cmp
fwait
test
lcall
call
xor
je
stc
mov
into
stos
push
sahf
ret
pop
mov
cmpl
push
jecxz
pop
enter
iret
dec
push
jnp
sub
fisttpl
andb
loopne
lret
push
insl
lcall
dec
jmp
sbb
fisttpll
outsl
std
sub
das
aaa
jae
int3
fstpt
xor
pushl
out
sub
scas
lret
in
stos
and
xchg
addr16
cmpsl
dec
fildl
pusha
lock
add
imul
outsl
cmc
sahf
cmp
dec
mov
dec
aam
xchg
dec
in
cmp
or
testl
mov
xor
test
jae
jmp
pop
mov
adc
jl
test
bound
test
repnz
mov
arpl
outsb
pushf
mov
vmread
sbb
mov
nop
repz
jg
or
fistl
data16
cltd
scas
rcrl
or
pop
shrb
mov
cld
idiv
aad
insb
jmp
lock
jne
movsl
shrb
jecxz
and
xchg
xlat
mov
pop
mov
es
fs
sub
incl
cld
cmp
icebp
lock
lret
mov
and
pushl
pushl
out
inc
and
gs
fsub
or
fbld
int
sbb
mov
xor
xchg
fucomip
mov
xor
and
pop
test
cmc
pop
or
mov
ret
stos
cmpsl
add
xchg
divb
xor
in
or
aas
inc
jbe
xchg
xor
movsb
jge
insb
jecxz
cmpsl
pop
fcmove
out
popf
pop
imul
xchg
jg
sbb
loop
dec
pinsrw
inc
icebp
inc
adc
es
pop
pop
call
cmp
or
push
xor
mov
jo
sub
call
or
das
shrl
adc
and
lahf
mov
jbe
lods
or
scas
pushl
imulb
sbb
sub
xor
daa
jae
and
out
bnd
ds
pop
std
lcall
adcl
les
add
dec
pop
sbb
and
mov
mov
decl
sub
popf
pop
adc
insb
stc
adc
icebp
pop
fs
ljmp
lods
jg
jg
test
dec
pushf
lahf
sarl
out
push
add
mov
xchg
ds
fimuls
clc
lcall
dec
es
add
mov
inc
iret
ljmp
cmp
jg
inc
sbbb
push
mov
test
inc
add
imul
loop
mov
outsb
in
push
jg
outsb
fldl
jae
fbld
roll
and
inc
ret
daa
pushl
pop
mov
dec
cwtl
fldcw
daa
inc
dec
adc
lret
fdivp
ljmp
decl
xor
inc
push
sub
dec
loope
inc
push
test
mov
mov
dec
std
decl
imul
mov
sbb
sub
cmp
outsl
mov
aam
ljmp
xor
mov
lret
xor
pop
mov
das
mov
insb
push
mov
adc
pop
fsubrl
out
sbb
push
frstor
jecxz
dec
inc
push
inc
jnp
mov
ljmp
out
imul
dec
repnz
jge
mov
xchg
pop
stc
js,pt
sahf
and
jmp
inc
out
ljmp
and
negb
mov
repnz
lahf
clc
jne,pt
outsb
dec
push
loop
incl
sbbb
inc
repz
jp
sbb
test
fildll
sbb
mov
or
mulb
das
push
ljmp
or
cmc
mov
add
pushl
or
pop
lret
int
fucom
hlt
rorl
mov
pop
subb
cwtl
sti
mov
scas
fnstcw
xchg
pop
xor
daa
out
or
mov
into
jmp
cmp
popa
fisubl
mov
lret
mov
in
ljmp
int3
sub
in
xor
mov
data16
jno
das
xbegin
repnz
or
or
lods
dec
fwait
and
push
pushf
cmpsl
sbb
xor
mov
jmp
xchg
fnstsw
and
pop
outsb
xchg
xchg
in
add
loopne
push
cld
jmp
movsb
xor
in
fcompl
jl
lcall
std
push
and
push
and
call
adc
xor
enter
xchg
xchg
dec
into
pop
and
mov
movsl
stc
xor
push
lods
xchg
aaa
sarl
cmp
sbb
mov
movsb
sub
pushl
clc
jg
jae
push
pushf
add
mov
mov
test
jmp
add
push
xchg
jecxz
cmp
push
fildl
push
xchg
jge
xorb
test
pop
ficomps
sbb
rcrb
lock
mov
lcall
lock
xchg
test
mov
xor
je
in
mov
xchg
mov
jmp
xchg
adc
scas
or
cmp
xor
pop
jg
sub
pcmpeqd
sbb
cltd
ja
xchg
dec
xchg
pop
loope
push
pop
jbe
push
push
lds
mov
int
cmp
pop
out
stos
ret
jo
and
push
push
or
mov
ljmp
test
add
in
addr16
fwait
idivb
mov
push
testb
jg
mov
dec
lcall
loopne
movsl
pushl
add
or
out
mov
loope
sub
push
and
pushf
or
inc
sar
push
addr16
or
sbb
ljmp
cmc
incl
lahf
push
nop
sbb
cmp
xlat
outsb
mov
adc
lret
iret
sub
dec
xchg
mov
mov
int3
inc
in
aad
popa
popa
mov
mov
xor
jge
clc
dec
lret
das
movsl
lea
mov
pop
in
inc
mov
jmp
xadd
movsl
std
ret
mov
incl
sti
out
mov
popf
pop
gs
sub
aaa
cmc
sarl
sub
out
shll
add
mov
decl
pop
cwtl
xlat
clc
jl
push
pop
mov
push
sbb
adc
js
clc
decl
pusha
paddsw
jge
cmp
pop
addr16
mov
call
mov
inc
arpl
sbb
decl
std
aaa
sbb
daa
or
popa
loope
xchg
rcr
and
out
call
fs
jl
sub
sub
insb
or
xor
out
mov
fadds
outsb
pop
imul
out
dec
or
lods
xchg
pop
or
test
aad
pop
movsl
pop
lcall
mov
clc
or
in
or
ret
or
imul
cli
push
sub
and
ljmp
pushl
adc
push
sbbl
sub
jnp
loope
std
push
jle
pushf
mov
pop
loopne
xor
sbb
jg
jg
mov
popa
aad
sbb
ficomps
aaa
movsl
mov
dec
pushl
cli
subb
xor
jne
lods
imulb
or
mov
inc
push
lahf
ds
mov
cmp
jmp
mov
ljmp
testb
mull
out
dec
insb
mov
std
pop
bound
testb
sarl
shlb
pop
movsl
adc
bound
imul
adc
cli
bound
testb
sbb
mov
xchg
xchg
mov
pop
pop
int
aad
shrb
inc
adc
mov
xchg
add
jo
push
shlb
daa
jns
dec
mov
jmp
fdivrl
addl
mov
dec
mov
lods
adc
lock
loopne
pushl
outsb
out
js
pop
inc
aaa
movsb
mov
xchg
pop
mov
push
push
fucomip
sbb
cli
lods
mov
xchg
ret
in
adc
dec
daa
inc
repnz
cmc
mov
jmp
cld
jg
adc
in
cmpsb
shrb
in
pop
stos
adc
loopne
rclb
enter
decl
and
push
dec
dec
jno
and
test
xchg
sti
ret
test
jl
call
jmp
mov
jo
sbb
popf
pusha
imul
andl
dec
xor
pusha
test
hlt
outsb
je
mov
push
stos
std
cmp
popa
scas
nop
ljmp
rdpmc
cmp
and
xchg
dec
cltd
mov
ja
mov
mov
mov
loop
sbbl
movsl
or
push
nop
dec
xor
mov
push
mov
xchg
mov
pop
stos
dec
ficomps
and
mov
sbb
sbb
mov
push
adc
push
sahf
xchg
pop
stos
add
mov
jns
jno
mov
add
or
call
pusha
sbb
iret
inc
mov
pop
rolb
xchg
add
mov
mov
dec
inc
mov
stc
loopne
int3
insl
adc
imul
or
mov
jecxz
xlat
sbb
dec
mov
inc
mov
inc
add
in
sbb
enter
mov
call
fdivrs
daa
push
arpl
jle
push
ret
lcall
mov
cmp
mov
xchg
inc
lods
movsl
nop
mov
push
cmp
outsl
jno
jp
scas
sbb
lahf
roll
sahf
jnp
adc
decl
subb
inc
in
cmp
jo
and
ljmp
fcomi
mov
sti
sub
incl
push
xchg
cli
pop
jns
popa
jbe
das
mov
adc
cld
dec
jecxz
test
cmp
or
dec
add
lcall
rcll
lahf
adc
cmp
push
mov
das
bound
dec
es
push
call
sub
int3
or
mov
jge
addr16
jno
xor
mov
mov
cmp
out
push
cmp
dec
lret
push
and
loope
ret
xchg
mov
pop
mov
ss
imulb
js
adcb
test
push
xor
andb
jnp
jmp
in
push
pushl
popa
std
fnstsw
iret
leave
cli
in
jle
and
sbb
decl
mov
popf
pop
lods
sahf
adcb
popf
xchg
dec
testl
push
push
mov
jp
mov
jno
out
lods
pushf
jbe
add
mov
out
enter
mov
loope
call
decl
inc
test
jmp
dec
mov
push
lds
fldl
jl
sbb
jg
ljmp
mov
mov
jb
fisubrs
loopne
scas
adc
pushl
xchg
push
sbb
xor
popf
rol
cmp
clc
cwtl
lods
test
xchg
test
incl
stos
iret
add
adc
xchg
fs
xor
inc
lcall
shr
sbb
fwait
or
rcrl
call
repnz
push
push
cltd
and
stos
movsb
mov
std
iret
pop
incb
insb
in
sub
mov
lcall
pushl
cltd
add
mov
adc
in
jnp
sarl
push
jmp
jmp
lods
or
pop
xor
call
push
mov
std
ja
cmp
ss
stos
sub
leave
pop
out
ss
insb
adc
jmp
test
test
mov
pop
sub
push
dec
push
pushf
ret
leave
cs
pop
push
jecxz
call
inc
fsubs
xor
in
popa
dec
mov
and
shl
xor
mov
sub
outsb
sbb
das
jno
aas
adc
jns
idivl
sub
cwtl
mov
jae
je
incl
push
lock
je
std
in
pusha
ljmp
testb
or
xor
loop
loopne
stos
mov
ss
mov
fbstp
sbb
pop
fcmove
sarb
cltd
push
out
lock
adc
fcompl
cli
outsl
std
out
fists
pop
cli
lret
push
sbb
mov
insb
pusha
test
pushl
add
imull
mov
test
mov
jp
inc
hlt
pop
add
lret
ret
call
inc
pop
mov
fidivrs
pushf
ja
mov
ret
sbb
xchg
outsb
jo
punpcklwd
aam
inc
pop
imul
aaa
insb
push
aam
adc
add
test
mov
rcl
pop
aaa
cs
call
lea
mov
in
stc
push
pop
mov
jbe
xchg
cwtl
hlt
in
adc
pop
int
lret
jbe
aaa
sub
in
out
loopne
sbb
sbb
mov
mov
ljmp
mov
arpl
ret
xchg
dec
mov
shll
cmp
mov
jmp
or
sub
pop
arpl
xchg
sbb
sub
inc
mov
ljmp
xor
stos
mov
xor
mov
mov
pushl
dec
lock
lds
mov
je
push
cmp
jb
daa
xchg
clc
mov
inc
lahf
popw
lret
imul
movsl
dec
adc
popf
fnsave
mov
fwait
lcall
fistpl
mov
fisttpll
jbe
or
test
sbb
mov
pop
movq
add
push
imul
incl
jge
bound
jbe
mov
xchg
add
aaa
push
adc
outsl
hlt
pop
push
jne
add
or
push
and
jp
insl
ds
call
lcall
pop
pop
js
inc
out
enter
movsl
rclb
and
enter
in
ljmp
gs
dec
jns
mov
mov
call
mov
cmp
and
pop
es
rcrl
adc
add
decl
cmp
shr
push
or
mov
out
mov
add
xor
and
mov
shll
mov
pop
repz
in
xchg
cmp
jmp
adc
xor
sbb
cmpsl
dec
jbe
loope
outsl
inc
fucomp
push
filds
add
jecxz
add
inc
popf
fwait
cltd
subl
scas
mov
call
jb
jo
int
mov
int3
inc
cs
lock
sub
lods
xlat
mov
inc
movsl
jmp
adc
cld
out
arpl
int3
sbb
imul
adcb
mov
jg
cmp
push
add
int
lods
dec
inc
bound
add
push
xor
pop
mov
daa
push
cmp
xchg
into
add
repz
mov
outsl
cmc
call
jmp
jp
xor
in
xor
cmp
and
mov
inc
mov
lods
push
xlat
and
ds
mov
pop
and
cmpsl
and
add
repnz
mov
mov
push
inc
adc
push
in
and
jl
mov
push
nop
out
cmc
ja
mov
insl
call
jno
fisttpll
addb
inc
xchg
jae
mov
popa
jne
fucomip
jmp
xor
test
in
iret
pop
aaa
cwtl
or
mov
lcall
sbb
add
ret
ja
and
dec
lret
xchg
call
mov
mov
mov
mov
inc
out
ror
push
std
call
mov
cwtl
lock
lock
adc
mov
repz
cli
lds
loopne
jmp
test
push
lahf
dec
add
loope
xchg
pushf
mov
outsl
lock
mov
scas
push
clc
cwtl
rolb
jl
ljmp
out
push
sbb
shll
mov
xchg
cwtl
push
clc
call
loop
push
xor
lret
or
jg
lret
push
or
mov
jo
les
mov
imul
int
pop
or
inc
cmpsb
mov
sbb
ljmp
hlt
ja
mov
jbe
lods
ja
int
movb
xchg
jmp
xor
test
xlat
push
adcl
and
sub
cltd
daa
inc
lret
sub
jno
sub
mov
pop
inc
popl
sub
leave
aam
rolb
js
repnz
xor
fucomip
andb
je
sub
push
or
cmp
and
mov
lods
incl
mov
push
xorl
jno
stos
shrl
hlt
push
xor
jno
adc
jmp
cli
dec
jg
sar
cmpsl
push
outsb
movsl
or
mov
mov
fwait
std
outsl
inc
ffreep
adc
stos
adc
cmpsb
nop
das
and
cmp
cmp
scas
sub
dec
mov
fdiv
xor
in
cmp
pop
jecxz
xor
ja
shlb
inc
aaa
push
test
xor
test
jg
push
cmp
mov
jge
dec
out
fwait
pusha
add
insb
jmp
out
adc
inc
xchg
in
repnz
lcall
call
push
fdivrl
out
pop
imul
adc
jmp
cwtl
push
icebp
outsb
movsl
jecxz
sub
pop
gs
stos
lret
mov
xchg
mov
shrl
adc
std
jle
mov
roll
cmp
mov
das
aam
adc
push
mov
cvtdq2ps
xor
mov
xor
mov
mov
lods
pop
test
sti
mov
and
jge
xlat
mov
outsl
loope
popa
pop
fsubrl
loopne
mov
xor
call
push
loope
sbb
lods
loopne
por
iret
mov
jg
scas
mov
xor
adcl
cmp
repz
insl
mov
incl
mov
xchg
jmp
pop
xchg
mov
ror
pushl
or
inc
imul
fisubl
hlt
pop
fisttpll
add
xchg
dec
call
ja
cltd
fdivl
cmpsl
aaa
mov
call
push
inc
pop
enter
cmp
push
cmp
mov
push
dec
addr16
jbe
lds
xchg
flds
lret
je
cltd
cmp
sbbb
and
fisubl
cmp
jmp
mov
jb
mov
iret
mov
push
cmpsl
dec
xchg
sbb
pop
add
sbb
repnz
rorb
call
pop
popf
stos
mov
and
aaa
enter
call
dec
std
mov
mov
jno
das
mov
adc
call
cmp
cs
dec
or
enter
sarb
int
xchg
jle
add
incl
scas
push
ret
movsb
outsb
inc
xchg
mov
lds
stos
pop
clc
test
out
rclb
jg
cmc
outsl
std
ljmp
xlat
jb
popa
sbbl
movsl
test
sbb
mov
lock
sbb
mov
ljmp
mov
js
out
jmp
inc
insb
out
test
mov
int3
xchg
and
sub
in
ds
push
cld
test
decl
ljmp
aaa
cli
pop
and
dec
pushf
sub
xchg
pop
mov
scas
cwtl
jl
cld
adc
imul
in
xchg
call
aas
lea
xor
cmp
xchg
xchg
lret
jbe
xor
xor
cmp
das
cmc
decl
into
ja
stc
mov
test
adc
hlt
or
cld
test
dec
rolb
xchg
mov
sub
pop
pushf
inc
fdivr
call
lret
push
mov
xchg
fwait
pop
cli
lcall
dec
clc
sbb
dec
out
adc
in
mov
and
push
xchg
cld
pop
push
lock
dec
or
lods
mov
je
fldcw
mov
clc
call
outsb
leave
test
repz
sub
mov
test
stos
jno
and
mov
mov
sbbl
mov
dec
testl
popf
push
clc
jg
fucomip
push
mov
fsts
imul
mov
lea
arpl
mov
add
ljmp
add
shr
sub
lcall
pop
insb
les
stc
xor
clc
or
fcomip
jae
pusha
xchg
inc
xchg
pop
out
in
pop
incl
push
out
std
jecxz
aaa
xchg
mov
call
mov
sub
daa
or
fmul
out
pop
jle
int3
scas
jnp
and
call
clc
adcl
and
add
dec
mov
aaa
clc
incl
jae
xchg
sub
test
aas
and
mov
stc
das
std
ret
jmp
pusha
int
mov
and
add
inc
jmp
fdivl
xchg
xchg
inc
mov
and
push
je
cwtl
jnp
mov
clc
mov
int3
cmc
pusha
aad
and
js
pushf
enter
scas
mov
sub
mov
incl
sbb
ret
cmp
ja
inc
xor
mov
cmpsl
pop
ret
movsl
adc
ljmp
mov
aam
or
iret
push
jo
insl
mov
jmp
decl
mov
ficoms
cld
and
sbb
data16
je
mov
jne
cmp
decl
jbe
loopne
pop
out
out
mov
pushf
mov
pop
mov
ret
mov
mov
cmovg
rorb
in
fldenv
add
outsl
rcr
adc
mov
into
adc
hlt
lea
xor
jg
imul
faddl
test
shrl
add
lret
mov
sub
xchg
ja
pushl
sub
fldln2
mov
pop
popa
xchg
push
ret
fisubrl
push
mov
addr16
ljmp
mov
test
pop
sub
push
outsl
pop
inc
mov
lcall
insl
xchg
inc
push
std
imul
mov
pop
loope
sbb
insl
leave
cmp
ljmp
scas
inc
aas
mov
mov
dec
nop
mov
mov
call
jbe
jg
incl
sub
fistpll
mov
loop
popa
addl
add
adc
fistpll
clc
push
sub
rorb
push
and
or
mov
cli
call
push
leave
fstl
sub
cmp
in
fsubs
aam
and
xchg
xchg
pop
xchg
inc
cltd
lcall
cmp
or
and
loope
pop
mov
rcll
fldcw
shlb
pop
outsb
fbld
mov
in
add
sbb
icebp
aaa
mov
jbe
loopne
add
out
mov
push
aas
mov
repnz
sbb
in
es
lret
ljmp
mov
incl
push
fstpl
rcr
jl
movsl
inc
jnp
push
ljmp
rcl
filds
lods
mov
sbb
sbb
mov
jecxz
sbb
and
push
inc
push
and
cli
inc
es
pop
jp
push
pop
adc
ss
icebp
push
xchg
mov
xchg
pop
decl
jmp
out
pop
xchg
sbb
popa
push
jo,pn
in
push
add
sbb
jo
rcll
push
jg
idiv
push
sbb
xor
mov
arpl
mov
in
adc
sbb
dec
lcall
ljmp
pop
stc
lods
mov
push
add
movsb
testb
mov
lock
xor
scas
dec
or
jnp
jg
das
sbb
xchg
cwtl
xchg
push
cmpb
out
xlat
pop
rcrl
cmp
daa
mov
sbb
dec
pop
sahf
mov
cmpsl
mov
push
push
rorl
cmp
clc
or
loope
fwait
or
decl
divb
jmp
repnz
cwtl
mov
jg
dec
cli
roll
sub
incl
mov
mov
dec
fsubl
mov
mov
sbb
shl
jnp
addr16
push
lcall
out
test
or
or
jle
sub
popf
cwtl
lds
nop
idiv
mov
and
mov
cmc
in
test
test
call
or
jl
push
adc
mov
in
dec
decl
mov
jmp
cwtl
mov
enter
cmp
lds
dec
addl
add
outsb
pusha
sbb
test
std
sarb
xor
inc
lcall
push
hlt
and
pop
test
xor
je
lock
ljmp
dec
cmp
sub
dec
pushl
cli
mov
leave
jae
jb
ljmp
xchg
lods
into
outsb
xchg
jge
pushl
mov
imul
sbb
int
std
add
out
sbb
lret
inc
insb
jmp
std
fdivrl
outsb
dec
out
jno
xchg
das
mov
out
lahf
clc
jg
js
sbb
mov
lods
jb
ljmp
and
out
dec
dec
sbb
jmp
aad
sbb
jg
test
push
mov
aas
add
lcall
dec
decb
adc
cmp
add
fnsave
fstpl
test
sbbl
pop
les
adc
xchg
repz
lcall
mov
or
into
push
mov
jp
int3
mov
inc
jp
int3
sbb
push
cmpsb
cli
sarb
mov
jbe
test
sbb
inc
pop
sarl
rcrl
shll
pop
lds
mov
inc
pop
jns
in
jno
sub
es
fbstp
pop
xchg
insb
leave
add
stos
lds
aaa
cli
jmp
lret
sarl
sub
cmp
mov
mov
nop
cltd
mov
inc
outsb
fmull
push
or
adc
ret
je
pop
movsl
jle
leave
mov
aad
and
mov
adc
inc
out
add
or
add
mov
adc
outsb
mov
cld
mov
xor
outsl
test
ss
push
adc
movsl
in
incl
pop
push
and
mov
incl
pop
xchg
cmpsl
data16
das
stos
jp
jmp
loopne
ljmp
xchg
addr16
mov
push
xlat
testb
lods
es
fwait
sbb
pop
insl
cwtl
adc
mov
cmc
jns
into
pop
je
cwtl
jae
lods
adc
dec
loop
mov
pop
scas
sbb
ret
pop
push
repz
sbb
adc
jge
adc
xor
dec
mov
xor
out
les
pop
lret
iret
rcll
and
lcall
outsl
hlt
iret
test
sbb
mov
leave
cwtl
inc
loop
xor
stos
incl
js
add
mov
aad
dec
xchg
xchg
dec
mov
adc
outsb
xor
jge
pop
xchg
inc
inc
lds
jo
sub
mov
arpl
mov
popf
loopne
cmp
mov
repnz
data16
ljmp
inc
pop
shrl
push
sub
fidivl
or
sub
mov
jecxz
pushl
lods
out
inc
rorl
sub
cmpsw
pop
inc
sbb
mov
mov
pop
push
fsts
sarl
xor
sarl
decl
ljmp
xor
adc
scas
xchg
mov
mulb
int
mov
sub
orl
and
ret
xor
xchg
or
repnz
gs
or
mov
xlat
adc
jg
icebp
in
adc
jle
push
fbld
mov
mov
icebp
inc
lock
loope
jne
cld
jmp
mov
das
push
inc
dec
loopne
rorl
inc
testl
sbb
adc
dec
lcall
mov
mov
push
mov
std
cmp
fcoml
lds
push
call
cmpsb
inc
imul
imul
jb
jge
jne
mov
xor
test
dec
aam
mov
sbb
mov
ljmp
cli
mov
or
imul
aad
jnp
pop
stos
push
incl
out
sub
gs
or
decl
mov
xchg
fsubp
scas
std
xchg
in
push
sbb
fidivrs
popa
cmp
sub
mov
orb
jb
in
inc
fadds
mov
jg
push
push
push
inc
jg
mov
push
ljmp
and
xchg
pop
loopne
je
inc
pop
or
fnstsw
jmp
push
push
push
scas
jno
ror
inc
pop
test
js
mov
cli
push
call
aam
or
and
and
cmp
jle
mov
test
or
pop
fisubs
sub
dec
and
mov
adc
jns
mov
and
or
push
jg
mov
add
mov
sbb
push
decl
cld
jns
cwtl
andb
xlat
sbb
cmp
lcall
mov
arpl
cld
mov
mov
mov
sahf
fsubrp
sbb
out
je
xchg
outsb
std
sbb
xor
cld
es
test
pop
pushl
add
fildl
mov
gs
das
lock
decl
jmp
daa
xor
jge
and
loope
cmpsb
test
incl
mov
les
mov
shll
push
push
repz
xor
pop
pop
pushl
fwait
out
stos
cmp
test
mov
inc
call
js
sahf
imul
mov
hlt
scas
jl
std
popa
movsb
sub
mov
push
pop
inc
pmaddwd
out
popa
int3
es
or
cmc
xor
out
ret
fs
lret
in
and
and
pop
std
pop
mov
push
js
add
sti
dec
int3
add
pushl
xlat
inc
pop
lret
pusha
lock
mov
xor
jbe
mov
rcl
jno
sub
pushf
loope
sbb
js
shl
stc
mov
mov
sbbl
pop
rolb
nop
test
sbb
mov
mov
sbb
jg
push
mov
gs
mov
call
idiv
inc
fcmove
xor
fiaddl
jg
push
fidivrs
incl
inc
jp
outsb
push
insb
aam
dec
aam
cmc
ja
incl
out
jbe
xorl
pop
sub
and
jl
loope
sahf
pop
std
ret
push
ret
xchg
pop
lods
aaa
jb
icebp
lcall
ret
sbb
adc
cmp
and
rolb
push
cs
es
mov
xor
addr16
jmp
test
xor
rolb
cmp
in
decl
inc
mov
cwtl
fsubrl
xlat
aam
sbb
repz
arpl
cli
rolb
mov
ss
loop
xor
jg
xchg
test
bound
jecxz
ljmp
aas
mov
loop
repnz
or
xchg
iret
mov
jae
test
js
cmp
jg
lcall
cmp
inc
jp
into
ja
inc
lret
sub
incl
jg
repz
ss
adc
xchg
loop
lahf
xchg
lcall
sub
ss
inc
adc
inc
mov
jmp
aaa
jo
in
xor
inc
fldcw
cmp
cmp
jmp
mov
mov
dec
and
mov
xor
sbb
adc
push
incl
call
in
sahf
mov
cmp
cwtl
push
jg
decl
push
jae
cwtl
js
insb
inc
mov
sbb
or
push
or
xor
imul
roll
sub
mov
mov
jge
push
cmp
fnstcw
xchg
mov
mov
jmp
inc
dec
orb
shrl
sbb
cmp
call
jns
xor
xor
lcall
mov
dec
das
mov
aad
call
pop
mov
ja
mov
loopne
xchg
mov
popf
jo
and
repz
insb
pop
adc
cmpb
add
inc
push
add
jecxz
call
mov
les
add
push
roll
inc
rcrb
sar
notb
mov
inc
xchg
jmp
fsubrs
inc
mov
jae
mov
or
sbb
idiv
sbb
pushl
jb
fsubp
iret
xchg
call
lret
cld
xchg
popa
pop
enter
dec
mov
lcall
inc
lock
jns
push
out
dec
dec
pusha
std
in
adc
leave
pop
or
call
and
shl
mov
jg
call
mov
fisubrl
cmp
std
push
jg
xchg
loopne
xchg
pop
nop
out
pop
aaa
pop
orl
sub
cmc
imul
imul
nop
andb
pop
lods
cld
ficoml
fcomps
es
adc
mov
or
insl
repz
mov
pop
int
fadds
call
repnz
push
hlt
jle
fnstenv
shrl
dec
dec
mov
call
clc
test
fcmovnb
jge
mov
pop
imul
stc
adc
jne
or
xchg
jbe
push
test
or
mov
pushl
xchg
adc
cmp
test
out
push
xor
ljmp
scas
in
in
xchg
lcall
std
lret
cmpsb
dec
sbb
mov
outsl
cmp
jo
out
dec
jno
mov
mov
jmp
pop
jmp
fdivs
cmpsb
shl
mov
call
shrb
movsl
in
lock
adc
clc
cmpsl
std
and
das
ljmp
pop
ljmp
jge
push
or
jmp
mov
pusha
sahf
ss
ucomiss
decl
test
xchg
test
jns
ror
mov
inc
lods
mov
adc
stos
outsl
mov
pop
test
mov
cmp
mov
scas
ret
or
cmpsb
daa
arpl
mov
fnstcw
dec
lds
jp
lfs
movsl
xor
test
push
out
mov
mov
adc
xor
in
sbb
adc
lcall
push
ljmp
push
xchg
mov
xchg
inc
mov
addr16
iret
idivl
fucomip
repz
fnstsw
dec
sahf
pop
lods
loop
jg
push
hlt
mov
shl
aam
lahf
push
jns
fidivl
jnp
outsb
jecxz
movsb
lcall
aaa
push
jb
loop
add
mov
leave
rcr
sbb
ret
xchg
jmp
les
jmp
leave
lret
in
mov
popf
xchg
adc
mov
inc
lretw
mov
jmp
outsl
lods
dec
cmc
cmp
pop
aam
jmp
push
cld
incl
add
faddp
test
popf
inc
pop
xchg
mov
cltd
sbb
lods
stos
sbb
push
mov
add
test
dec
add
mov
jg
shlb
das
clc
push
sub
movsl
sbb
pushl
jle
aam
and
pop
pop
mov
jmp
adc
mov
xchg
pushl
push
xchg
dec
stos
add
inc
outsb
cltd
add
add
les
in
movsb
mov
inc
jo
fidivrl
pop
sub
mov
pop
mov
mov
mov
mov
sbb
clc
out
fs
es
add
loop
rorl
inc
add
int
stc
inc
xchg
mov
mov
sub
sar
clc
arpl
and
and
mov
in
andl
sub
fwait
cltd
xlat
repz
aad
icebp
fimuls
cmc
call
inc
push
mov
pop
pop
repz
pusha
jne
and
push
popa
repnz
aaa
pushl
sub
mov
sbb
cmpsb
repz
or
lods
neg
incl
mov
sbb
inc
pop
mov
lea
incl
jge
adc
nop
jp
and
pop
jno
pop
add
push
or
push
push
mov
pop
push
jge
incl
or
add
sbb
jp
nop
repz
mov
xchg
inc
or
lcall
popa
jg
sbb
jp
clc
fcomps
js
push
test
push
and
call
xor
mov
push
jo
mov
jb
adc
decl
lds
test
mov
mov
inc
push
dec
subl
and
add
push
mov
and
xchg
mov
mov
pop
mov
xchg
mov
add
stc
gs
xchg
mov
mov
movsl
jle
pop
bound
adc
jne
outsb
push
je
adc
stos
mov
lcall
jne
jbe
mov
mov
fsub
bound
xchg
push
adc
mov
loop
fsubl
loope
inc
sarl
pop
leave
lods
popa
mov
mov
popl
cld
call
mov
aad
lods
add
ljmp
mov
cltd
dec
pushf
int
cmp
in
lcall
movsb
adc
test
clc
xlat
daa
movsl
add
rcr
out
decl
decl
in
aaa
inc
add
dec
popf
add
loopne
pop
sub
pop
mov
mov
ds
clc
push
stc
xor
push
cmpsb
mov
pop
pop
and
add
or
rorb
push
adc
mov
pop
add
clc
mov
popa
mov
in
out
rcrb
xor
and
outsl
icebp
mov
lods
fs
insl
jle
xlat
ds
lock
pushl
mov
mov
orl
incl
inc
ds
jmp
dec
mov
pop
call
lea
in
jg
fmull
es
mov
in
and
xor
pusha
aaa
jmp
pop
mov
addr16
xchg
mov
mov
jb
xchg
popf
mov
sar
imul
cmc
jmp
adc
jns
cld
inc
and
and
push
daa
pop
int3
rorl
dec
xor
nop
arpl
cmp
jne
and
orb
dec
pop
in
inc
clc
lods
mov
xor
jg
dec
lcall
jb
movsw
xchg
adc
mov
push
push
movsb
push
pop
fsubrp
dec
ds
aad
sahf
ds
sarl
mov
pop
mov
inc
sar
mov
orl
xor
pop
pop
ljmp
ds
inc
cld
cmpsl
inc
addr16
mov
decb
cltd
stos
inc
jecxz
das
out
or
popf
lock
data16
fldl
cld
ja
xor
cmc
xor
jmp
insl
mov
lods
pop
test
lret
sbb
loop
outsl
std
mov
sub
sbb
xchg
mov
push
das
push
cli
dec
int
cmp
es
cltd
std
xor
mov
sti
insb
sub
gs
mov
movsb
xchg
ret
cmpsb
lock
xlat
and
lock
and
ja
aad
out
mov
mov
scas
int3
pop
lods
lds
nop
inc
jmp
imul
lds
cmpsb
ja
cmpsl
or
addr16
xchg
pop
sbb
mov
add
ret
ss
sub
pop
jl
pop
sbb
sbbl
ds
push
pop
call
pop
outsl
movsl
fildll
aam
in
dec
cltd
test
adc
cmp
cmp
aad
and
pop
cmc
ljmp
mov
int
push
rorb
mov
outsb
inc
jno
sarb
ret
fwait
imul
pop
adc
fisubrl
mov
push
xchg
mov
je
decl
insb
icebp
lcall
dec
push
xchg
xor
call
test
cmpsb
icebp
fcoml
fidivl
aas
shlb
mov
lods
fldpi
push
jo
jo
int3
in
xlat
aad
xchg
call
mov
andb
jbe
xor
lcall
insl
add
or
mov
mov
and
movsl
das
icebp
ja
rol
enter
mov
dec
and
sbb
test
adc
loopne
and
mov
test
lea
mov
pop
stc
mov
test
cmpb
add
cmp
inc
xor
call
cmp
adc
mov
fisttps
test
das
lcall
hlt
cmc
push
decl
mov
sbb
lods
dec
jp
push
adc
scas
cld
cmp
jns
call
lahf
jnp,pn
cld
mov
inc
jbe
adc
sahf
xchg
cmp
or
shlb
adc
pop
ljmp
imul
std
and
push
cmp
jmp
adc
adc
pop
insb
das
jns
inc
mov
adc
daa
pop
mov
xor
cld
hlt
mov
out
add
lds
mov
lahf
nop
jns
clc
mov
dec
jmp
mov
and
bound
xchg
or
mov
clc
in
jecxz
fdivs
dec
lret
test
repnz
inc
pop
cmp
mov
mov
fwait
pop
mov
das
icebp
repz
sub
sbbl
cmp
xor
test
xor
fistps
xchg
pop
stos
sub
push
fwait
or
cli
jo
cmp
jp
pushf
xchg
das
add
pop
ret
mov
out
int3
jne
loop
lock
insb
inc
nopl
jnp,pt
push
lcall
dec
cld
repz
fldenv
dec
push
ljmp
xchg
cmpl
mov
jg
call
adc
rorl
and
push
pushl
cli
lcall
loope
push
sub
lahf
pop
sarl
lods
jecxz
push
or
xlat
inc
cmp
decl
sbb
and
mov
cmp
jb
into
imul
fisttpll
adc
cmp
and
into
mov
icebp
cmp
xchg
cli
pop
cmp
sub
add
test
cld
sbb
or
xchg
push
push
cmpsb
sbb
push
dec
pop
cmpsb
insb
inc
push
jle
call
incl
popa
mov
lret
jno
inc
arpl
xchg
lcall
pushf
aad
ljmp
std
add
fwait
insl
daa
into
pushf
sbb
pop
loopne
in
pushl
cmpsb
arpl
mov
std
adc
insl
imul
jmp
cmp
ja
ret
lods
or
jb
insl
call
sub
ds
rorb
inc
jns
lock
mov
mov
idivb
int
ja
int3
xor
pop
mov
xchg
or
incl
fldcw
insb
sub
lcall
in
loop
sub
xor
jg
pushl
sub
sbb
xchg
js
push
mov
and
aaa
mov
pushl
cmp
add
leave
mov
inc
shlb
sub
jnp
lahf
dec
scas
shl
sbb
lods
incl
push
enter
dec
in
test
jmp
decl
or
les
adc
mov
and
cs
loopne
lcall
ret
cld
xor
loop
mov
push
out
xchg
outsl
paddsw
jne
stos
stos
pop
add
sbb
out
mov
hlt
mov
mov
sahf
sub
rclb
cmp
incl
cmp
lret
pinsrw
pushl
lds
jp
iret
mov
mov
or
enter
mov
pop
adc
sub
sbb
jb
jae
lret
push
jp
xor
hlt
cltd
cmpsl
dec
fs
mov
enter
jno
in
stos
test
in
jns
and
loope
jge
clc
popf
ljmp
pop
inc
std
pop
neg
jecxz
sbb
ficoms
jg
lcall
and
push
mov
and
mov
mov
mov
call
jmp
mov
decl
das
inc
mov
clc
imul
push
incl
jo
ja
mov
pop
or
call
jmp
test
jnp
rcll
mov
inc
in
push
test
ljmp
lret
inc
push
out
addr16
mov
test
loopne
xor
lods
sbb
stos
sbb
js
lods
sub
imul
ljmp
and
repnz
mov
and
pushl
clc
loop
nop
cld
fs
insl
stos
bound
arpl
adc
adc
mov
lcall
xor
lea
and
jae
pusha
dec
aam
sbb
jle
popf
sbb
cmp
clc
jne
stos
cltd
cwtl
leave
xchg
int
cs
shrl
icebp
dec
jmp
jne
or
icebp
xchg
test
popf
je
call
data16
fs
sub
add
mov
jmp
mov
lods
aam
pushl
rol
aaa
inc
mov
ficompl
in
mov
repnz
test
lcall
jnp
adc
jecxz
out
xorl
es
sbb
fiaddl
xor
jmp
rcrl
pop
mov
pop
in
adc
cltd
aas
inc
std
movb
incl
inc
les
imul
mov
push
xlat
lret
call
int3
dec
sar
jg
mov
aam
jmp
mov
aas
cmp
fs
cmpsb
inc
push
mov
sbb
mulb
icebp
push
mov
stos
push
cmp
std
leave
add
in
adc
jmp
sbb
mov
mov
cmp
andl
mov
and
cmp
and
sbb
adc
mov
and
add
mov
ja
and
mov
daa
dec
mov
xchg
mov
push
ret
mov
test
mov
pusha
mov
dec
push
push
nop
in
pusha
inc
das
and
xchg
dec
mov
sbb
cmp
loopne
cmp
ljmp
adc
ja
push
push
cmp
add
xlat
movq
add
jp
into
pop
cmp
std
jns
sub
sbb
lds
pop
sbb
xchg
dec
ret
mov
sar
mov
sub
andb
xchg
cmp
call
mov
pop
jae
insl
dec
mov
mov
mov
fisubrs
adc
sub
leave
sub
rolb
xchg
out
pushf
int3
imul
dec
sbb
test
sbb
or
inc
dec
imul
or
push
shll
dec
clc
xor
orl
fistpl
xor
jg
mov
aas
xor
in
insl
adc
andb
cmp
mov
out
push
imul
sub
in
clc
lcall
mov
mov
sub
sbb
ljmp
mov
jne
pusha
jge
push
jns
pop
test
ret
inc
fiaddl
insl
clc
mov
push
lods
mov
jo
call
outsl
data16
and
mov
lcall
movsl
out
xorl
adcl
mov
and
pop
loop
mov
pop
cmp
out
or
push
leave
fstpt
sbb
andb
adc
cmp
xchg
dec
test
cmp
shrl
xor
pushl
aas
pushf
jne
ja
and
out
in
mov
outsl
cmp
cmp
hlt
mov
out
jg
cwtl
decl
sbb
sub
mov
or
lock
sar
ret
insb
lea
mov
cmp
add
cmpsb
stos
pushl
rcll
rcrl
inc
js
aad
rcrb
dec
sbb
cmp
les
in
jg
inc
sbb
ljmp
scas
adcl
clc
pushl
cmp
shrl
icebp
and
loope
clc
cmp
ss
lds
cli
mov
sub
adc
cmp
js
dec
icebp
into
sbb
jg
jecxz
or
mov
popf
daa
push
jg
sbb
mov
outsl
lock
cmp
inc
pusha
add
movsb
xchg
or
int3
gs
out
jmp
out
ret
andb
in
jb
and
cmpsl
xor
ljmp
out
pop
addb
clc
mov
or
jns
cmp
mov
xchg
std
incl
sahf
test
test
xchg
in
scas
insl
mov
sub
mov
pop
clc
sarl
ret
invd
adc
loop
xor
cltd
sar
pop
inc
xchg
scas
leave
add
mov
aaa
pusha
mov
mov
insb
cld
pop
fidivs
enter
xor
pop
mov
out
inc
jg
test
lods
or
xchg
andl
jns
fidivrs
insb
jno
test
addr16
inc
sti
and
jp
shll
mov
incl
jb
cmp
repnz
sahf
std
sub
js
sbb
xchg
outsl
ret
jge
pop
jb
ss
push
and
push
outsl
ljmp
fidivl
sub
fs
jns
dec
or
call
psubusb
mov
ljmp
cmp
pop
mov
cli
cltd
enter
fldenv
hlt
xor
icebp
or
pop
mov
push
push
lock
call
jmp
add
mov
stos
and
pop
xchg
jb
sbb
sahf
dec
jg
mov
incl
insl
in
hlt
or
and
mov
or
add
xor
outsl
std
jg
pop
xchg
bound
sahf
js
daa
arpl
fists
jg
testl
jb
xor
clc
pop
add
cs
mov
xchg
mov
adc
mov
ss
dec
adc
fcomps
rcll
clc
lcall
stc
xor
adc
movsb
pop
orl
mov
mov
push
cmp
testl
jmp
and
cli
call
and
ret
push
push
icebp
sub
mov
leave
cld
incl
xchg
xchg
inc
ljmp
flds
jnp
push
mov
cmp
inc
dec
push
pop
fnsave
mov
fnstenv
inc
mov
push
xchg
inc
mov
lock
call
popa
cmp
add
cwtl
cmp
pop
ss
test
sahf
insl
push
xchg
xchg
or
pop
cli
jg
into
mov
pop
add
mov
xor
stos
pop
mov
std
adc
xchg
jle
int3
push
rorl
les
test
je
dec
xor
mov
lahf
imul
pop
lcall
icebp
or
shrl
mov
jle
call
stos
sub
jb
leave
fxch
addr16
icebp
push
push
jmp
test
hlt
aaa
xor
push
lcall
std
call
pushl
js
lds
push
arpl
lock
inc
inc
mov
fldcw
mov
fstl
mov
fidivrs
push
mov
mov
sbb
test
test
fidivs
and
mov
lahf
mov
fs
xchg
in
shl
xor
push
adc
cmp
popl
push
int
cs
incl
push
add
popa
dec
scas
cmp
dec
cld
add
test
not
mov
inc
in
push
xchg
or
cmpsb
push
xchg
int
mov
incb
cmc
jmp
sahf
dec
js
or
or
ljmp
ljmp
ret
arpl
mov
lods
out
mov
sub
adc
push
sahf
cmp
decl
pop
js
dec
nop
xor
add
pop
dec
xor
fists
push
and
jbe
cmp
in
adc
mov
decl
jns
push
mov
dec
inc
jmp
cli
add
mov
inc
testb
mov
lods
cmpsb
lret
pop
mov
lea
sarl
stc
jo
mov
lds
sub
aam
mov
pop
mov
add
sub
xchg
sbbl
loope
leave
jne
in
call
aas
shl
and
aad
dec
mov
ja
xchg
jo
lds
mov
mov
push
lret
hlt
push
jmp
push
xchg
inc
jg
cmpl
enter
call
pushl
or
test
cmc
mov
mov
xlat
and
or
add
arpl
rolb
ljmp
mov
arpl
pop
into
popl
lret
incl
jno
jg
mov
scas
decl
incl
sub
pop
stos
out
pushf
lcall
unpcklps
sub
rclb
incl
xchg
mov
out
mov
fmull
add
or
or
hlt
fldl
push
sbb
sub
movl
add
imull
jmp
popa
dec
mov
dec
add
cld
push
pop
and
aam
leave
mov
jg
out
mov
push
cli
or
adc
pop
or
mov
push
dec
leave
fistps
add
sbbl
jo
push
jecxz
dec
insl
mov
subb
repz
fiadds
push
mov
repnz
ljmp
add
mov
mov
out
dec
mov
fists
mov
les
in
mov
arpl
pop
sahf
sahf
inc
test
mov
frstor
popa
sub
mov
mov
xor
xchg
fdiv
cmp
xor
or
inc
int3
stc
popf
pushf
test
inc
lock
bound
inc
std
ljmp
lods
fidivrs
in
sbb
add
mulb
pop
shlb
xor
ljmp
mov
jne
xor
mov
roll
mov
adc
call
pop
and
cmc
cs
pushl
aad
sbb
gs
mov
pushl
out
cld
jae
repz
into
inc
push
lds
and
iret
shll
ljmp
dec
test
ljmp
outsb
fucomip
cmp
pop
adc
lock
push
push
xchg
dec
push
das
std
incl
mov
sub
xchg
mov
incl
dec
hlt
jne
arpl
lods
add
aaa
fs
incl
fucomip
roll
push
xchg
mov
sub
scas
call
fcomp
in
fstpt
loopne
xchg
xchg
push
and
aam
mov
incl
mov
mov
sbb
push
rorl
fimull
sbb
ljmp
sbb
xor
loop
cmp
ret
mov
addr16
stos
jns
movsl
mov
xor
popa
jl
xchg
or
sbb
lret
xchg
adc
mov
out
addr16
pop
cld
pop
cli
sarb
dec
sbb
cld
push
scas
add
or
mov
sbb
sarb
mov
out
cltd
mov
jb
xor
adc
clc
dec
std
in
jmp
jp
lea
ret
jae
add
jne
cmc
lcall
push
int3
rcr
cmpsl
dec
lret
or
std
ss
pop
jl
incl
les
dec
mov
ret
das
and
add
mov
lcall
lcall
cmp
jae
jnp
addb
push
sbb
pushl
rcl
pop
dec
xor
mov
cmp
pop
cli
jge
add
pop
xchg
imul
mov
std
jmp
and
mov
incl
test
adc
out
test
out
pusha
bnd
call
sub
sbb
fdiv
jbe
mov
push
pop
add
stos
jle
cld
and
js
sbb
or
out
cli
jmp
pushf
in
fs
push
iret
out
in
adc
ljmp
hlt
outsl
sbb
cmpsb
cmp
push
mov
xchg
push
inc
jno
les
fistpl
test
mov
cs
or
sub
or
scas
cmp
leave
cltd
sbb
jmp
ret
movsb
out
or
pop
dec
in
ljmp
in
cwtl
enter
mov
stc
mov
in
imul
cmc
cli
dec
shl
les
std
mov
test
out
jle
repnz
cmpsl
mov
mov
repz
jg
jmp
push
xor
sbb
dec
mov
call
mov
inc
sub
xchg
pop
inc
test
ret
dec
cwtl
cld
lcall
nop
cmp
dec
fildll
push
xorl
nop
or
fs
inc
cmp
cmp
mov
sub
frstor
loopne
call
rorb
jb
push
aam
xchg
scas
and
out
mov
loope
xchg
pop
loop
push
sahf
std
or
lret
push
dec
jno
into
mov
mov
std
add
adc
ja
pop
xor
aam
xchg
jg
stos
cli
imul
xor
push
cmp
xchg
mov
cmpsl
mov
jecxz
or
fstpl
dec
sbb
decl
or
addb
shll
sub
test
repz
pop
mov
jae
jl
sti
nop
fwait
mov
sbb
jmp
mov
rcrb
inc
leave
lea
insl
cmp
jecxz
aad
sub
xchg
incl
jb
jge
lahf
into
dec
push
and
fucomp
lods
ljmp
ljmp
sub
std
xchg
pop
xlat
js
jo
xor
mov
decl
push
arpl
mov
movsl
jno
es
adc
outsb
clc
dec
int3
in
lcall
xor
lcall
push
xor
fs
test
push
aad
mov
sahf
push
sti
jnp
fiadds
sub
test
cld
mov
pop
dec
jb
xor
les
stos
add
lss
subb
clc
jg
mov
sbb
stos
add
shrb
jno
je
movsb
push
repnz
adc
and
push
js
sub
push
enter
or
fs
lcall
mov
xchg
ret
fs
int
add
call
lret
push
test
sbb
adc
adc
add
mov
adc
and
mov
insl
mov
mov
inc
lret
lcall
sbb
add
arpl
lcall
negb
add
jge
hlt
xor
push
enter
nop
imul
pop
xor
dec
mov
scas
fsubl
pop
mov
dec
sbb
cmp
adc
cmpsb
es
test
xor
inc
xchg
mov
push
loope
daa
sbb
xor
sbb
mov
push
int3
xchg
pushl
mov
cld
pop
adc
push
inc
mov
subl
frstor
xchg
inc
pop
test
mov
xor
sub
push
pop
xchg
add
pop
clc
or
sub
pushl
pop
add
or
mov
adc
push
xlat
jb
sbb
cmp
sbb
push
and
popf
jbe
dec
xor
xlat
ret
pop
pushl
push
push
jnp
outsl
cltd
bnd
mov
adcb
cli
je
call
das
push
repnz
je
arpl
sti
and
push
and
sub
call
cmovae
int
bound
mov
and
std
mov
pop
xchg
es
sti
push
loope
js
loopne
xchg
pop
std
cld
sub
out
data16
hlt
ljmp
stos
fstpt
mov
push
cltd
sarl
std
out
decl
into
cmpsl
lods
testl
pop
xor
jg
incl
insb
mov
lock
lock
mov
fiadds
dec
and
xor
cmpsb
push
popfw
or
push
push
stos
adcb
iret
push
or
inc
sbb
inc
push
mov
je
call
es
mov
pop
xchg
aas
pop
pushf
arpl
in
xor
clc
call
mov
clc
cmp
lds
push
mov
push
add
or
fbld
insl
cmpsl
mov
push
arpl
scas
mov
addr16
cli
and
out
dec
stc
pop
inc
inc
adc
mov
lret
pop
pushl
mov
shlb
cld
jo
scas
xchg
ret
roll
cmp
ja
jmp
fs
test
add
scas
pop
cmpl
mov
in
js
loope
inc
pop
pushl
and
xor
mov
scas
add
or
loop
push
pop
imul
lcall
push
add
ret
jns
std
push
test
ret
xchg
test
adc
mov
cs
sbb
mov
dec
inc
jb
mov
cmp
call
mov
aam
lcall
imul
icebp
or
mov
add
mov
jg
decl
or
aas
sub
sbb
sbb
movsl
sahf
dec
or
and
jmp
jns
daa
aam
and
push
lock
cli
add
adc
cwtl
aam
add
inc
mov
sbb
mov
sub
dec
icebp
lock
arpl
pop
push
mov
xchg
cli
cmp
in
add
rcrl
stos
mov
xchg
pop
or
xlat
xlat
xchg
push
inc
and
push
push
cli
std
clc
repz
cmp
sbb
pop
jle
jmp
sbb
push
test
inc
insl
js
rdmsr
mov
lcall
sub
aaa
inc
mov
das
into
arpl
mov
jg
je
mov
std
inc
adc
pop
dec
sahf
cmp
icebp
cmp
lds
jl
pop
add
mov
dec
xchg
and
cwtl
xchg
andb
lock
pop
cli
mov
push
lret
dec
outsl
cmp
lret
xlat
es
adc
dec
sub
ja
and
jnp
popf
stos
pusha
aas
divb
orl
ljmp
test
hlt
cld
rcll
das
fwait
pop
or
dec
ja
movsb
fistps
leave
sub
cmp
lahf
outsl
mov
pop
inc
addr16
adc
stos
lea
lock
mov
jg
dec
js
pop
mov
jbe
dec
ret
pop
push
fmuls
daa
addr16
lcall
pop
les
pop
ds
ffreep
repnz
clc
adc
fcom
call
out
mov
cmp
jno
lods
inc
stos
mov
mov
cwtl
inc
stos
fisubl
stos
stc
ja
and
sbb
out
xchg
loop
ret
cmc
inc
cmp
fcmovu
fs
jo
js
fidivs
dec
pop
into
inc
xor
mov
push
std
iret
xor
fbstp
popa
ret
xchg
cltd
das
std
incl
push
lods
iret
push
daa
push
inc
lods
rcrl
test
cmp
ljmp
xchg
xchg
or
sarl
dec
xchg
xchg
loop
mov
neg
ljmp
and
add
nop
mov
pop
add
inc
fstl
lock
call
mov
jl
pop
imul
out
fcomps
adc
cmp
inc
fsts
jg
mov
hlt
xor
data16
add
and
pop
jp
add
add
and
push
mov
sbb
pushl
adc
adc
pushf
and
lretw
fcmovnbe
das
call
lret
inc
push
jmp
pop
mov
stc
pop
xor
push
inc
adc
sub
inc
mov
cwtl
cmp
cld
loop
outsb
xchg
xor
fdivs
inc
fcomps
das
bound
dec
cmp
push
je
inc
int3
mov
jo
adc
and
dec
mov
mov
xchg
mov
and
subl
popf
jne
cld
mov
cli
std
adc
ja
dec
xchg
fildll
nop
dec
pop
dec
xchg
jne
enter
xor
xor
mov
pop
clc
mov
add
jge
inc
hlt
dec
push
fiaddl
jno
mov
sub
leave
lds
aaa
notl
cwtl
xor
cmp
pop
jge
push
cld
sub
repz
push
outsb
insb
jg
cmp
pushl
pop
shlb
popf
sbb
sarb
out
test
out
enter
in
jmp
in
push
test
sub
lea
cmp
lcall
cmp
loop
jnp
lcall
dec
push
jp
push
jmp
xchg
fadd
ljmp
test
push
ljmp
hlt
rcl
add
clc
adc
pop
lcall
ficoml
lcall
mov
inc
outsb
loope
leave
inc
js
out
pusha
in
out
aam
sub
adc
arpl
sub
push
add
aam
xor
pop
pop
sti
hlt
cmc
loopne
ljmp
call
add
push
movsb
jmp
lret
xchg
or
loope
out
or
inc
addr16
and
lea
push
xchg
mov
lods
cltd
inc
add
clc
fbld
cltd
jg
icebp
xchg
aas
and
mov
push
std
xchg
outsl
call
or
repnz
insb
cmp
mov
pop
or
shr
sahf
roll
push
mov
push
and
stos
std
and
inc
add
push
fdiv
cmova
outsl
std
call
leave
mov
cld
adc
cwtl
sbb
jp
or
xchg
js
jp
call
cli
push
sub
jmp
psubb
imull
pop
mov
repz
hlt
insl
xchg
add
out
pop
add
jge
movsl
je
xchg
outsb
jge
push
dec
push
repnz
sub
int3
xchg
decb
mov
sbb
jne
xorl
loop
mov
or
imul
xchg
mov
jg
mov
xorb
cmp
fstpl
sub
popf
mulb
push
add
mov
xchg
cmc
je
sbb
jmp
xchg
sarl
call
or
arpl
push
loop
and
out
cmp
push
or
sub
clc
fistl
mov
in
les
pushf
pop
js
push
lock
imul
xchg
daa
mov
sub
das
hlt
cmp
arpl
scas
and
lea
sbb
hlt
outsl
lock
and
repz
js
sub
clc
dec
pop
imul
mov
lods
adc
mov
sub
in
sub
pop
mov
add
xor
pushf
imul
outsl
add
loope
repnz
stos
test
sub
or
pushl
pusha
add
dec
cltd
xor
lock
mov
cwtl
or
outsl
cld
mov
dec
loope
push
xor
orb
mov
adcl
and
pop
pop
jmp
mov
push
adc
imul
incb
scas
mov
jo
ss
dec
lcall
mov
sbb
mov
inc
adc
xchg
es
cmpsb
sbb
fdivrs
dec
mov
cwtl
pop
pop
aaa
addb
movsb
push
daa
jae
add
in
dec
outsb
mov
and
shrb
cmc
sub
fiaddl
shl
data16
call
iret
push
pop
mull
cmp
dec
nop
test
push
xor
mov
sub
bound
or
dec
push
pop
sub
and
dec
dec
xchg
loope
loope
cli
ljmp
pxor
mov
push
gs
fildl
fs
dec
int3
in
mov
or
jle
in
cmp
decl
add
mov
jge
cmc
incl
ss
popf
cld
jl
sahf
mov
loope
mov
adc
icebp
jg
push
insl
sahf
xchg
jbe
sbb
mov
loop
push
je
and
cltd
cli
push
or
xchg
sti
dec
fwait
ljmp
push
push
outsb
sub
cmp
leave
adc
mov
mov
push
imul
out
pop
sti
push
aam
mov
adc
mov
loope
or
lock
pusha
stos
insl
sahf
pop
cmp
ffreep
popa
aam
ficomps
aam
cwtl
cmp
fistps
outsl
mov
sbb
inc
inc
pop
cwtl
lods
cld
mov
clc
ds
bound
loope
outsb
imul
jmp
cmpsb
aam
mov
fistps
aas
in
pop
mov
loope
cmp
stos
jge
cmc
bound
cli
dec
push
and
add
popf
das
insl
lock
inc
sub
lods
mov
add
fstl
sahf
nop
pop
inc
js
dec
mov
jg
shll
into
inc
lea
fcmovne
inc
loope
sub
decl
inc
mov
and
jb
sbb
icebp
jg
xor
and
dec
sub
clc
jmp
fdivrp
adc
jmp
fnstcw
jg
enter
icebp
call
outsl
pop
aam
div
mov
repnz
incl
mov
ret
push
aas
test
or
jno
or
lods
pushf
push
lahf
sbb
call
incl
outsl
fimull
xchg
add
lcall
pop
push
mov
mov
sbb
mov
idivl
add
or
or
addb
sbb
in
dec
pushf
das
lock
jns
xchg
xor
lods
mov
fnstenv
int3
flds
sub
lcall
cli
incl
rclb
mov
jmp
jb
fwait
cmp
xchg
cmp
push
fcomp
sub
pop
shlb
aas
or
pop
mov
test
xchg
inc
xor
dec
mov
lahf
sub
insl
repnz
les
rep
inc
jmp
test
sub
jg
cmp
add
mov
arpl
and
push
jne
or
outsb
in
adc
dec
mov
jb
lcall
push
xor
loop
push
or
sub
bound
cwtl
jae
cmp
sbb
dec
arpl
mov
push
decb
add
mov
jg
jno
lcall
popf
aam
mov
xchg
outsl
xchg
outsb
mov
ficomps
pop
outsl
mov
loope
sbb
es
lds
cld
sbb
jmp
js
ret
or
dec
xor
repnz
mov
or
mov
or
mov
leave
dec
call
subl
hlt
sbb
mov
int
xchg
push
or
cmc
cld
decl
movsb
mov
dec
nop
dec
aaa
adc
rorl
ljmp
xchg
dec
jmp
cmc
jne
jnp
fs
mov
or
leave
insl
and
ss
int
aaa
xor
leave
repz
pusha
adc
xor
jbe
add
out
popa
fwait
mov
popf
bound
ljmp
and
add
push
inc
jbe
lods
fnsave
sub
pop
pop
and
jbe
xchg
dec
inc
aam
clc
pushf
xchg
testb
mul
cwtl
cmc
call
outsl
or
aam
js
or
inc
ror
push
or
fst
xchg
fs
sub
popa
fstpt
push
call
ficoms
pusha
inc
fstl
fisttps
int3
inc
cli
shrl
add
cmp
push
add
arpl
sub
cltd
xlat
mov
rolb
dec
sub
xchg
jno
rclb
loop,pn
call
mov
pop
sbb
xchg
and
jns
aam
outsl
ja
mov
std
ljmp
insb
sbb
and
sbb
ljmp
jmp
mov
fidivrl
mov
mov
inc
cwtl
push
insl
xor
cmp
mov
cs
sahf
mov
pop
push
xchg
outsl
inc
sub
aad
mov
xchg
or
xor
mov
or
sub
push
cld
lods
mov
xlat
sbb
hlt
lcall
pop
test
pop
test
into
insl
jmp
cli
pop
test
das
pop
adc
xorl
jp
and
out
jge
add
lds
call
call
or
mov
push
fidivrl
in
addr16
pop
sbb
lcall
std
test
jp
mov
xor
mov
ret
mov
jg
decl
mov
faddl
dec
das
jnp
adc
add
in
std
cmp
fimull
add
mov
test
push
ror
lahf
lods
decl
std
fistps
js
push
test
popa
inc
mov
aaa
dec
cld
push
or
jl
lds
lret
dec
daa
push
stos
lds
add
push
negl
jg
flds
sub
jbe
mov
dec
repz
mov
xor
ljmp
std
shll
xchg
lock
dec
lods
jbe
cmp
arpl
pushl
or
cli
cmp
push
fistpll
loope
inc
xchg
mov
nop
sbb
ljmp
ret
push
roll
cmp
rolb
lret
and
jg
repnz
sub
es
mov
pop
cld
push
push
test
xlat
cmp
sbb
out
and
test
mov
or
addr16
out
push
fstpl
cli
bound
push
ljmpw
loopne
cmp
aaa
inc
xor
push
stc
test
dec
enter
lret
das
cmc
mov
fistpl
std
push
lods
and
sub
roll
std
aaa
clc
shl
xor
or
addr16
stos
adc
jae
lcall
inc
mov
jbe
dec
jbe
mov
inc
cltd
scas
push
xchg
dec
notl
pop
cli
jge
pop
imul
es
call
iret
loopne
incl
cli
mov
or
les
leave
repnz
ja
cli
decl
data16
xor
cmp
je
jmp
xor
sbb
dec
call
jg
stc
adc
in
jecxz
sahf
scas
ror
ror
sbb
sub
push
popf
lcall
std
cmp
fwait
rcrl
jp
ljmp
adc
bound
iret
sahf
sub
sub
popa
stos
xor
cmp
adc
lcall
in
ss
in
and
ljmp
jl
sarl
mov
std
fidivl
in
cli
orps
mov
cld
mov
cld
jg
test
xchg
dec
negl
mov
mov
imul
das
mov
adc
in
addr16
push
sub
orb
jg
cmp
mov
mov
mov
mov
sub
dec
sbb
out
mov
mov
call
jp
adc
cmp
ss
push
or
imul
rorl
call
and
cmovg
aas
jne
fsubl
js
jmp
in
les
mov
sar
push
pushl
rcr
js
mov
fwait
adc
shlb
mov
in
call
push
push
cmp
pushf
out
daa
adc
inc
rolb
fs
leave
inc
cmc
pop
cli
add
shlb
notl
aaa
outsl
push
mov
mov
fistpll
jp
add
push
insl
enter
jg
outsl
imul
pop
call
es
mov
fdivrl
es
repnz
push
inc
xor
sub
jge
xor
sbb
xor
adc
jl
cmc
lret
lcall
xchg
pop
sub
jmp
aam
cld
xor
jnp
stos
mov
inc
jmp
xlat
incb
jbe
jg
movsl
or
ret
push
xor
ljmp
cld
pop
sbb
xor
adc
cltd
cmp
in
or
jmp
arpl
jg
incl
sbb
xchg
inc
in
sub
pop
rorb
ljmp
dec
sarb
xchg
add
mov
dec
sub
jbe
movsl
xchg
iret
test
ljmp
icebp
dec
sbb
push
cld
test
lcall
mov
popf
fmuls
roll
mov
adcb
xchg
cltd
jbe
jns
imul
xorl
loop
jecxz
std
cmp
pop
faddl
jg
loop
mov
shl
inc
sub
scas
imul
idiv
fildll
jle
mov
add
push
pusha
in
add
mov
ljmp
add
add
ja
push
sbb
outsb
data16
push
jb
or
roll
push
or
outsb
popf
std
jmp
mov
dec
mov
jno
stc
jp
sbbb
in
stos
cs
lcall
push
dec
cmpsl
add
sbb
jae
push
inc
adc
pushl
sub
mov
xor
inc
lods
xor
mov
jno
xchg
sbb
out
out
fldenv
or
das
shrb
inc
outsl
dec
mov
xor
or
movsl
cltd
cld
sub
dec
fmull
pop
cld
insl
incl
push
sbb
mov
xor
std
jle
std
adc
vorps
xor
xor
fnstsw
sub
mov
in
mov
sub
push
adc
xor
adc
inc
enter
pusha
pushl
ljmp
mov
jecxz
test
test
mov
roll
mov
faddl
mov
xor
arpl
jb
cmpsl
xchg
xchg
inc
sub
or
cmp
push
xlat
or
es
adc
mov
xor
cmc
jmp
movsl
cmp
jns
je
and
push
lcall
dec
add
pushf
push
jns
dec
aaa
mov
xchg
cmp
push
pop
ljmp
ret
cmp
lcall
sahf
jmp
or
jo
xor
mov
icebp
out
xchg
inc
cli
cmp
sub
mov
test
icebp
fildll
shll
test
add
mov
lock
pop
clc
je
fbld
movsl
mov
jne
mov
jg
jecxz
stos
push
add
push
cmp
xchg
push
in
cmpsb
lret
movsb
adc
std
inc
inc
cld
fmull
clc
ret
in
or
stos
sub
sbb
xor
jmp
jg
cmp
js
cmp
icebp
mov
jmp
lahf
outsb
arpl
decl
test
fidivrl
mov
mov
cwtl
add
jge
xchg
cmp
incl
lcall
sub
test
pushf
push
and
dec
pop
ss
push
fsubs
pop
call
mov
jb
or
aam
xchg
pop
subl
shrl
pushl
mov
mov
pop
and
xchg
or
xorl
insb
movsl
cmpsb
mov
fcomps
mov
incl
push
je
sbb
mov
mov
and
inc
dec
pop
popa
mov
add
popf
lds
pop
icebp
test
mov
mov
or
divb
jmp
xchg
ljmp
push
lock
andb
xchg
shrb
dec
inc
mov
daa
xor
or
jmp
sbb
dec
lods
lret
pop
pusha
ret
push
fcmovnu
in
out
xor
dec
imul
or
jmp
jo
xor
xor
and
add
mov
out
mul
add
adc
daa
mov
outsb
pop
loop
incl
dec
lahf
das
mov
mov
mov
repnz
fistpl
cmc
cs
xor
aas
test
jns
jne
cmp
jbe
jmp
inc
push
roll
call
fbld
sbb
mov
add
ficoml
dec
sbb
push
subb
pop
xor
add
add
in
xchg
std
or
cmpsb
cwtl
clc
mov
push
popa
imul
adc
cwtl
inc
ds
jae
push
cmc
sub
fnstcw
hlt
sub
jo
xchg
sbb
mov
or
mov
push
cli
mov
xchg
jmp
aam
adc
sub
push
das
inc
ljmp
outsb
cmp
movsl
lret
and
pop
les
movsl
dec
mov
shlb
or
lcall
stc
and
jns
outsb
cmp
push
jge
fcompl
in
outsb
rolb
dec
das
je
lea
addb
lcall
lahf
in
jl
inc
scas
xchg
inc
data16
push
cmpsl
xchg
stc
mov
das
mov
imul
insl
addr16
call
stos
punpcklwd
push
cmpsb
and
lea
mov
lret
aam
hlt
lcall
call
xchg
test
jmp
push
pop
dec
mov
in
iret
cmpsl
add
notb
inc
adc
jg
adc
mov
aaa
add
sub
loopne
call
lods
bswap
movsb
sbb
shrb
cmp
xor
jns
ret
inc
and
call
mov
xchg
jg
add
in
mov
xchg
fs
std
xor
pop
jae
cld
jmp
add
fcmovnu
shl
movsb
lahf
aas
sub
pop
sahf
cltd
fisubs
push
cmp
push
xchg
outsb
adc
lcall
jge
dec
sbb
push
je
jno
imul
imul
lea
loope
nop
add
int3
cs
mov
test
push
mov
inc
cmp
adcl
icebp
decl
dec
adc
and
pop
mov
or
xchg
int3
lcall
pushl
mov
sbb
or
dec
div
addr16
push
push
add
mov
add
loope
adc
mov
filds
mov
and
dec
mov
jg
lea
mov
gs
push
push
pop
xchg
test
test
xchg
mov
incl
cli
push
mov
sub
lds
ljmp
cmp
cmc
push
or
hlt
cli
in
hlt
lcall
xor
roll
xor
iret
nop
sti
aas
adc
loop
inc
push
mov
lahf
pop
jl
mov
pop
sarl
add
in
sub
push
das
adc
jg
in
shrb
jo
ljmp
ret
clc
cli
mov
xchg
outsl
pop
cmp
mov
std
lret
and
cmp
stos
pop
loopne
incl
or
mov
push
dec
mov
das
jae
daa
int
mov
cmp
leave
nop
cli
lcall
jle
xchg
dec
pop
movsl
mov
dec
inc
mov
inc
fcmovnb
jae
inc
cmp
icebp
test
mov
lods
and
insb
push
iret
sbb
mov
mov
call
orb
decl
rcrl
adc
neg
std
mov
xchg
xchg
std
mov
inc
das
hlt
adc
pushl
add
or
lret
sbb
xor
movsl
call
push
fisubs
push
inc
dec
sti
mov
movsb
scas
sbb
mov
inc
rcll
mov
jns
push
mov
jge
es
cs
inc
xlat
cli
std
incl
lcall
leave
incl
int3
clc
mov
or
ficomps
dec
jmp
push
movsb
pop
cmp
in
mov
cltd
pop
add
decl
cmp
repz
cmp
or
jno
lea
push
stos
jnp
inc
mov
xchg
nop
or
test
xchg
out
mov
fisttpll
push
cmp
lret
insb
mov
repnz
sub
xchg
mov
mov
cmp
test
clc
in
push
into
inc
push
sub
popf
cltd
sub
xchg
add
decl
and
mov
sbb
mov
movsb
jae
push
xchg
push
fninit
loop
and
or
lcall
xlat
xor
pop
aad
clc
pushl
rol
pop
or
pop
in
jne
xor
jno
aaa
inc
call
sub
pop
ficoms
jle
out
stos
movsl
in
mov
xchg
js
xchg
sbb
pop
fisttps
movsl
ret
jmp
mov
insl
xor
dec
mov
pop
popf
cmpl
adc
jg
and
jg
decl
mov
jo
mov
in
call
push
sbbl
xor
mov
fisubl
es
mov
mov
mov
pop
sbb
popf
clc
ljmp
cld
adc
inc
xorb
jp
dec
imul
push
add
xchg
scas
jg
mov
outsl
push
adc
sbb
ss
out
mov
or
and
inc
lcall
call
dec
in
imul
stc
insb
xor
movsl
lods
inc
cmp
ljmp
adc
adc
jbe
dec
cmpsb
or
and
fsubr
out
mov
xchg
add
test
add
sub
clc
adc
sub
jge
push
imul
pop
inc
std
lcall
bound
lret
mov
push
ror
xor
testb
popa
inc
andl
push
fisubs
jae
pop
dec
cmpb
repz
xor
imul
outsl
mov
dec
cltd
fstl
mov
mov
in
dec
cs
insl
or
lods
int
pop
sub
pushl
pop
add
sar
inc
xor
scas
pop
cmp
jmp
lds
push
dec
xchg
push
mov
fstpl
pop
nop
cmp
xchg
push
push
dec
mov
int
test
sub
clc
popl
sbb
add
jmp
xor
and
fcomps
sub
mov
lret
clc
or
jb
loope
add
fistps
jle
ljmp
pop
and
lret
leave
scas
loope
outsl
cld
pushl
test
inc
pop
pop
fbstp
add
lods
ja
les
jp
test
loope
ss
add
xchg
add
mov
jg
fdivrs
pop
lahf
push
imul
fnstsw
inc
dec
iret
inc
shlb
mov
or
fldt
std
mul
enter
dec
in
jae
rcl
mov
cmpsb
and
ss
lcall
and
leave
mov
sbb
gs
push
iret
cs
mov
mov
or
stos
jl
and
nop
popa
out
cmc
in
add
sar
or
mov
lahf
and
insb
xor
pop
jg
loop
jb
push
arpl
sbb
test
test
mov
lcall
mov
jmp
xchg
je
hlt
inc
mov
inc
aad
cmpb
push
xlat
mov
jmp
pop
pop
or
nop
insb
rcrl
jg
cmc
lcall
sarb
push
imul
xchg
jae
icebp
mov
enter
pushl
int3
std
jecxz
mov
imull
stc
rorl
cmp
test
inc
adc
test
push
insl
test
imul
cmc
decl
mov
or
pop
flds
insb
adc
xlat
insb
xlat
push
xor
mov
jns
dec
push
sahf
sbb
pop
fistpll
push
lret
xchg
leave
fs
call
imul
push
test
fistps
sub
dec
sub
cld
imul
pop
cli
jmp
data16
jbe
sub
dec
jecxz
out
xorb
mov
inc
xor
mov
sar
fidivs
push
cmp
mov
inc
push
sti
push
jae
fs
hlt
pop
sbb
jmp
inc
jns
jle
cld
rol
mov
push
es
fisttpll
into
mov
mov
mov
xor
pop
shrl
mov
loopne
icebp
add
out
fmul
cmpsb
xor
xchg
aad
cmp
popa
pushl
lds
mov
insl
nop
sub
stos
loopne
jno
mov
outsl
jmp
add
adc
mov
add
adc
arpl
jns
dec
notb
or
xor
loope
lea
and
adc
pushl
aas
push
sub
loop
rorl
ljmp
dec
inc
ljmp
std
mov
mov
and
and
ret
call
es
cmp
lds
and
jo
jo
lcall
inc
cmpsb
daa
mov
xor
cld
aad
scas
ret
clc
sahf
mulb
rol
jg
lea
imul
loop
rclb
stc
cmpsl
mov
movsb
lcall
std
std
jbe
rdpmc
jno
loopne
aam
mov
outsl
jo
cmp
push
push
mov
push
aas
cwtl
mov
cmp
mov
pop
sahf
cmpl
xchg
sub
jl
or
sbb
call
xchg
addr16
fnstsw
and
fildll
bound
lock
sub
js
mov
movsb
lret
add
push
inc
jae
jl
mov
jmp
js
outsl
ja
pop
repz
or
or
test
fbld
movsl
jae
ret
mov
pop
ljmp
fisubrl
imul
movsb
xlat
outsb
lods
cld
ljmp
jg
push
fidivl
inc
sbb
andb
jl
fs
xchg
in
xor
adc
decl
cmp
add
cmp
or
bound
add
lret
in
jg
inc
movsl
xchg
xchg
dec
mov
scas
adc
inc
dec
jge
jl
pushf
jb
cwtl
mov
sbb
mov
sbb
fnstsw
push
dec
mov
sub
out
repnz
int
imulb
call
push
xadd
ljmp
popa
add
test
int
cli
xor
pop
add
icebp
call
xor
adc
rclb
adc
xlat
adc
call
lods
data16
inc
dec
cli
xlat
cmp
or
imul
and
lea
mov
pop
mov
jno
add
movsb
push
sbb
cmovge
sbb
ret
aaa
clc
inc
xor
xchg
xlat
sbb
popf
jae
ds
cli
jns
mov
add
addr16
out
fsubrp
decl
lea
movb
sahf
xor
insl
mov
arpl
inc
add
sbb
mov
xchg
aaa
sub
mov
mov
ja
scas
dec
add
out
mov
je,pn
and
stos
push
xchg
push
sub
xor
cmpl
mov
jp
xchg
xor
iret
into
mov
sub
cmp
mov
mov
sub
xlat
lcall
lret
mov
clc
insl
dec
iret
lcall
and
cmpsl
dec
and
fcoms
dec
adc
push
adc
movsl
and
and
int
pop
add
test
outsl
jno
and
mov
shlb
int
xchg
push
xor
mov
add
jg
push
mov
mov
in
mov
mov
nop
cmp
dec
cld
jmp
mov
mov
or
and
fwait
in
and
lcall
movsl
imul
mov
clc
movsl
and
lret
mov
mov
dec
and
cmp
cmpsl
adcl
mov
mov
jge
jo
xchg
outsl
or
incl
push
ja
insb
cs
mov
addb
adc
push
mov
addb
push
push
call
lock
into
aad
cld
arpl
dec
jb
movsb
or
pushf
idivb
mov
jbe
adc
push
in
jbe
push
ficompl
sahf
add
into
add
dec
icebp
cmp
icebp
sbb
push
jne
aaa
xchg
les
aam
arpl
decl
je
push
cltd
dec
pop
mov
or
pusha
push
push
dec
or
add
ljmp
pusha
pop
mov
mov
dec
int3
xchg
xchg
add
call
arpl
fs
loopne
popf
hlt
mov
sbb
xchg
bound
data16
out
lcall
jle
dec
inc
popa
fs
xor
in
dec
jo
push
shlb
mov
cmp
mov
shlb
stos
data16
pushl
ds
out
adc
xchg
add
popf
mov
flds
lret
push
out
push
jmp
xchg
lcall
mov
pop
ja
dec
aas
adc
mull
fstps
hlt
js
xor
pop
lahf
lret
in
lods
gs
jmp
popf
xchg
jp,pn
push
ljmp
add
movsl
dec
push
sbb
js
xchg
push
jae
ss
jmp
out
fmuls
and
push
fs
mov
or
mov
or
jno
cmp
call
inc
lods
mov
push
cmp
mov
lock
cmc
imul
mov
xchg
xor
ljmp
mov
push
sarb
xchg
sbb
cmpsb
pop
xchg
cmc
test
ljmp
jge
push
or
adc
inc
xlat
not
stos
inc
dec
xchg
xchg
clc
lcall
fdivrs
xchg
stos
jns
pop
cmp
or
inc
jno
inc
push
stc
les
cmc
pushl
xchg
mov
pop
mov
pop
jg
fsubrs
lcall
hlt
push
daa
mov
cmp
fxch
inc
outsl
icebp
sub
xchg
outsl
hlt
call
ja
jbe
popa
jnp
mov
repz
ror
popa
faddl
movsl
sbb
add
push
data16
fimuls
xlat
hlt
sbb
jg
ret
sbb
rcl
mov
mov
mov
pop
mov
arpl
lcall
dec
sarl
xor
outsl
mov
lds
push
cs
call
rcl
adcb
test
sub
sbb
out
sbb
enter
enter
call
lcall
inc
mov
xchg
jno
or
inc
dec
leave
push
and
int
pop
mov
push
pusha
test
je
add
in
pop
in
mov
push
mov
mov
jno
pushf
adc
push
hlt
pop
int3
and
or
xchg
stos
imul
add
mov
pushl
pushf
xchg
adc
or
xor
lret
shll
sbb
add
dec
pushf
dec
sbb
inc
xor
push
xchg
mov
or
mov
imul
fucomip
scas
int3
sbb
mov
popf
xchg
clc
xor
flds
push
call
mov
add
and
sbb
add
fwait
add
call
mov
ds
cmp
hlt
sbb
sbb
inc
out
mov
aaa
cli
jg
mov
ds
in
jp
sub
scas
popa
sti
sub
xchg
cwtl
add
into
lret
test
push
cmc
mov
dec
and
mov
inc
cmpsb
mov
hlt
pop
popl
push
dec
add
call
mov
cbtw
or
sahf
popa
mov
pusha
stc
sarl
addl
imul
sub
and
xchg
mov
outsb
cmpsl
sub
pushl
cltd
xor
out
jae
mov
mov
test
sub
lcall
push
jns
rcrb
movsb
sub
xor
and
fldenv
das
lock
push
cs
inc
sbb
cld
cwtl
push
outsb
jmp
ljmp
cld
aaa
je
push
repz
stc
xchg
or
jmp
incl
pop
lds
pop
cltd
fists
xchg
fldenv
cmp
add
mov
jmp
in
std
mov
mov
sti
outsl
mov
jg
mov
fldcw
adc
decl
notb
jns
in
lret
jb
mov
scas
xchg
popf
dec
pushf
jl
or
sub
push
adc
out
inc
sub
lods
ret
push
dec
and
mov
decl
pop
sbb
push
push
sahf
mov
xchg
or
or
loop
in
lcall
ds
jmp
sub
scas
cmp
mov
cmpl
lret
sub
mov
add
lahf
icebp
mov
in
pop
inc
add
or
cltd
mov
inc
inc
fnsave
out
xchg
push
xchg
xchg
out
xchg
inc
lods
iret
cmpsl
ljmp
sbbl
and
lret
xor
loop
imul
cmp
xchg
in
push
movsl
mov
add
xchg
ljmp
mov
outsb
decl
ret
jp
ja
lds
loope
mov
pop
out
insb
nop
dec
cmpsl
sbb
movsb
xchg
mov
push
pop
xlat
jne
out
jb
ljmp
push
shll
notl
sbb
mov
aas
popa
mov
loopne
and
mov
adc
ret
mov
repnz
cmp
lea
xor
dec
sti
cmpsb
sbb
cltd
lret
cli
dec
or
mov
or
inc
pushl
cmc
bnd
imul
cmp
popf
dec
insb
in
push
push
mov
or
cs
push
dec
xor
sahf
cmc
xchg
pop
jecxz
incl
call
dec
or
xchg
sahf
stos
sbb
dec
in
xchg
push
stc
mov
mov
and
testb
andb
jmp
xchg
orb
out
sbb
out
ret
xor
ss
in
repz
and
lahf
daa
jge
sbb
push
mov
aas
out
cmp
inc
pop
fldcw
push
call
jo
pop
dec
cmp
aad
xlat
sbb
roll
cli
mov
lcall
dec
sbb
sarl
fdivrs
cmp
je
test
xchg
dec
js
leave
es
int
jae
jns
jg
xor
jo
xchg
out
pop
sbb
les
jmp
out
xchg
push
dec
mov
add
inc
lods
mov
enter
jg
loopne
sub
mov
or
addr16
iret
jmp
gs
push
sahf
test
mul
out
pop
inc
add
rol
lds
pop
jecxz
mov
ret
pop
call
pop
lock
pop
inc
pop
call
clc
xchg
aas
sub
imull
dec
into
sub
mov
add
sbb
sahf
push
sbb
leave
push
out
stos
loop
mov
popf
dec
pop
nop
mov
xchg
in
push
xor
lret
shrb
icebp
lea
adc
js
mov
push
xchg
mov
mov
or
popf
xor
jge
push
int
je
std
call
arpl
xor
mov
lods
xchg
mov
test
cmpsb
in
mov
call
mov
outsl
jge
inc
repnz
andl
mov
mov
mov
repz
test
mov
mov
mov
mov
and
cmp
imul
pushl
std
inc
xchg
sub
dec
test
mov
jge
mov
dec
push
sbb
jg
dec
je
pop
ljmp
pop
repz
sub
push
or
xchg
mov
push
xchg
mov
stos
notb
fcmovbe
xchg
adc
decl
inc
jnp
cmpsb
pop
orl
cltd
das
push
test
loope
mov
je
push
cmp
shll
mov
mov
pop
cwtl
aaa
ss
out
mov
sbb
lock
dec
loop
mov
lock
pop
clc
dec
adc
xlat
cmp
mov
mov
insl
hlt
lcall
sbbb
cmc
stc
lret
aad
fistpll
mov
je
out
fwait
cmp
outsl
lock
incl
sarb
aam
ficoml
mov
jmp
repnz
adc
add
inc
ljmp
pop
mov
outsl
xchg
sbb
adc
stc
or
push
add
stc
cli
or
lcall
outsb
xor
pop
add
fnstcw
in
fs
mulb
xchg
cli
push
daa
push
std
shll
pop
push
out
test
sbb
ds
mov
add
xor
sub
stos
cli
push
inc
mov
sbb
incl
mov
pop
pop
xchg
gs
ljmp
jno
mov
enter
jmp
addr16
push
dec
test
sbb
out
in
sub
jb
roll
fucomip
mulb
mov
push
mov
cmp
sahf
mov
outsl
std
sub
adc
sub
call
aaa
stos
pushf
mov
xor
mov
sbb
pushf
dec
lods
xchg
shrb
jnp
out
cwtl
pop
pushf
jg
lds
mov
fisubs
sbb
xchg
adc
dec
jb
fistps
jbe
rcll
ror
cmp
aaa
cld
lcall
mov
insb
adc
cwtl
repnz
dec
scas
icebp
adc
xlat
or
jecxz
call
pop
xor
and
lret
gs
in
outsl
cmc
pushl
mov
pop
inc
push
inc
outsl
adc
shl
jle
mov
cli
sbb
mov
pop
xor
add
loopne
test
cmc
mov
popf
cmpsb
mov
pop
cmp
pushf
clc
push
mov
xchg
mov
xor
test
xchg
lcall
scas
imul
lea
sahf
and
fisubl
pushl
dec
cmc
push
enter
mov
outsl
stos
cs
repz
and
inc
out
loope
cmp
inc
fcmovnu
stc
jnp
test
call
pop
in
lods
adc
mov
cltd
jmp
push
dec
scas
sub
addl
in
cmp
mov
jmp
sub
inc
mov
js
in
shll
or
push
push
pop
xor
mov
orl
ljmp
js
xchg
outsl
outsl
mov
in
leave
insb
pusha
xchg
aad
in
int3
xchg
leave
pop
fcom
popa
and
and
push
bound
sbb
adc
push
icebp
pop
or
stos
mov
clc
xchg
inc
jmp
movsl
push
hlt
das
into
lods
fwait
or
negl
dec
nop
xchg
jno
xor
adc
sbb
ret
or
add
push
xchg
mov
out
in
inc
xor
clc
sub
mov
rcl
arpl
fstpl
aas
or
decl
gs
loope
lods
jbe
jl
cli
call
pushl
mov
cmpsb
mov
sbbb
int
gs
cmp
lcall
mov
nop
pushf
in
jnp
imul
mov
lods
test
push
jg
cld
pop
sar
loop
adc
cmp
sub
iret
lret
xchg
mov
insl
cltd
lret
call
mov
xchg
ja
cmc
adc
inc
fidivl
fdivrp
das
icebp
dec
mov
fcmovnbe
dec
push
jns
xchg
add
mov
les
loope
cmc
loope
jg
shl
jmp
inc
idivl
mov
fidivs
movsb
push
es
mov
movsl
in
stc
adc
idivl
sti
or
mov
pop
add
or
fdivrl
clc
push
jl
adc
in
mov
sti
add
je
into
call
inc
dec
xor
fbstp
push
add
add
lret
pop
jg
mov
mov
cmp
dec
lock
inc
mov
add
outsl
cld
mov
cmpsl
mov
jae
sti
pop
push
adc
cltd
mov
sub
cmp
fistpl
decl
push
and
ja
jnp
xchg
pop
test
fdivrs
inc
jle
inc
mov
lcall
insb
popa
jmp
pop
inc
pusha
add
xchg
mov
gs
sub
insb
jno
stos
lods
out
xchg
cs
cwtl
gs
xchg
into
and
sub
push
pop
clc
scas
leave
rolb
inc
sahf
or
push
lret
ffreep
clc
pop
int
xchg
lahf
sbb
and
add
adc
leave
lods
decl
mov
and
jp
aad
adc
idiv
jg
mov
nop
mov
mov
sbb
jp
adc
jae
pushl
push
sbbb
lods
xchg
movsb
sub
cmc
add
stos
in
sub
movsb
insl
xor
cmp
not
inc
fwait
repnz
popa
or
push
jg
jae
jb
stos
xor
loopne
xchg
ds
aas
xor
adcl
or
add
push
lcall
jae
imul
mov
cmpsb
shrl
lret
call
mov
xchg
in
inc
sahf
lods
mov
sti
adc
aaa
popl
clc
pop
clc
ljmp
cli
or
gs
add
outsl
sub
je
or
testb
incl
mov
call
and
sbbl
push
loopne
jg
sti
jns
adc
and
jo
pushf
subl
fdivs
rcrb
inc
aas
sarl
add
fs
ljmp
dec
ja
test
dec
jbe
jecxz
cld
add
fdivrs
jle
and
lahf
mov
pop
jecxz
std
shrb
mov
fcomps
mov
push
cs
daa
pushf
sarb
lods
jle
adc
pop
xor
push
ret
xchg
adc
test
xlat
adc
lods
adc
mov
cmp
mov
xlat
cs
sbb
call
fcmovnbe
jge
lcall
mov
mov
adc
mov
cmp
test
or
ljmp
xchg
lods
inc
adc
ljmp
or
aad
cli
dec
or
or
fisubl
daa
lret
es
jnp
loopne
jecxz
aad
out
xorl
mov
dec
add
jg
push
fstps
faddl
sti
push
imul
cmpsb
push
push
mov
pushl
push
adc
ficompl
ljmp
loopne
cmpl
jle
scas
xchg
inc
std
xrstor
sarb
iret
stc
mov
mov
idivl
push
lea
or
mov
ljmp
xor
or
mov
pop
add
cvtpi2ps
xchg
jbe
mov
stos
or
decl
fdivl
cld
and
push
fldt
sub
out
xchg
xor
addr16
jg
stc
jae
andb
cmp
mov
xlat
pop
lock
nop
fstpt
xlat
sub
lock
lcall
sahf
xchg
push
shll
cld
aad
mov
or
mov
mov
movsb
cmp
mov
pop
mov
sti
cmp
add
add
cmc
xor
incl
xor
js
fwait
enter
sbb
mov
push
out
into
dec
jb
outsb
outsb
add
test
mov
icebp
pop
shlb
cltd
cmp
lds
or
aaa
fucomp
ljmp
cmc
es
mov
sbb
cmc
xor
mov
jnp
adc
sar
fistps
in
repnz
cmpsl
dec
lret
cmpl
adc
cltd
xchg
mov
and
adcb
sub
pushl
and
ret
shl
adc
cmp
push
xor
ret
hlt
fistl
mov
mov
jo
xor
call
aam
or
push
xor
jnp
mov
add
mov
sub
inc
jecxz,pt
mov
pop
incb
add
into
sbb
loope
and
pushl
clc
xchg
fsub
add
movsl
inc
mov
push
jns
icebp
lret
dec
movsl
in
mov
outsb
cmp
cmp
decl
push
inc
xchg
cmpsl
stc
scas
gs
repz
shrb
cmp
fwait
sbb
cli
add
fistpll
fidivrs
scas
cltd
mov
dec
out
inc
test
sub
nop
out
int
stc
xor
imul
cli
pop
ljmp
dec
xor
dec
jne
jle
sbb
push
or
rorb
pop
cld
jmp
push
ljmp
push
push
inc
adc
pop
fwait
sbb
pop
mov
iret
jbe
cmp
mov
mov
sbb
imul
sar
dec
loop
pushl
lods
and
xor
inc
mov
mov
pop
mov
cs
in
loopne
fdivs
out
incl
xchg
out
sbb
setle
mov
and
jbe
pop
dec
lock
mov
and
mov
stc
or
pop
sub
cmc
jp
adc
jae
stc
or
call
in
add
pop
icebp
int
and
icebp
leave
sbb
cmpsl
fcomi
test
mov
mov
mov
xor
pushf
adc
add
loop
push
in
imul
inc
xchg
das
jecxz
jbe
incl
jg
push
repz
mov
mov
je
sbb
fwait
decl
mov
jg
xchg
arpl
std
sub
shlb
decl
decl
out
push
insl
out
jb
add
pop
addr16
and
sti
mov
push
sti
adcl
addr16
test
lock
xor
jae
fdivrl
xchg
pop
mov
cld
pushf
push
data16
mov
test
push
xchg
int
mov
lcall
jg
lods
int3
mov
jle
mov
fistps
xlat
sarl
mov
stos
inc
xchg
mov
jecxz
cmpl
call
push
cwtl
out
bound
jge
incl
in
mov
inc
adc
incl
decl
pushf
push
in
lds
bound
js
nop
ret
imul
dec
xchg
xor
shll
dec
jno
lcall
add
xchg
push
push
or
fs
xchg
jg
insl
sub
ljmp
hlt
push
mov
xchg
inc
sti
scas
mov
pop
xchg
and
imul
cmp
pop
hlt
ljmp
and
mov
xor
pusha
maxps
xchg
mov
mov
mov
lahf
cmp
enter
loopne
std
stos
xor
push
inc
sbb
cmpsb
fisttpl
push
fimull
xchg
sbb
in
cmp
cld
ljmp
jle
jne
mov
fdivl
mov
in
jo
push
ljmp
outsl
jl
and
mov
pop
jl
sub
dec
pop
pushl
adc
push
adc
and
push
gs
pop
mov
roll
or
in
mov
scas
inc
fisttpl
call
loop
push
xor
mov
sub
pop
or
js
pop
call
in
pop
fcmovu
xchg
push
cmp
mov
out
jmp
xor
aam
call
call
sahf
jle
adc
or
jle
inc
call
lea
and
dec
sub
sar
call
insb
ds
lea
repz
push
sub
insl
std
sahf
xchg
int
rol
gs
jmp
andl
das
adc
rcll
test
call
xchg
xor
shlb
jb
fcoml
mov
insb
sbbl
pop
push
decl
sbb
out
loopne
movsb
and
rcll
cmpsl
mov
hlt
call
divl
push
xlat
sbb
jnp
sahf
push
add
jmp
inc
loope
jg
sbb
rolb
sar
lcall
test
fwait
cld
imul
cmc
inc
es
sub
sub
mov
pop
dec
sub
dec
add
jmp
lock
das
aas
lret
add
cmp
dec
in
out
ds
lcall
mov
pop
mov
mov
les
jg
incl
push
pop
and
xor
ret
sbb
in
jb
prefetch
or
sbb
lods
jnp
into
ljmp
gs
lcall
xchg
push
fucomip
push
xchg
in
pop
mov
jl
outsl
rorb
in
jg
inc
sub
xchg
inc
pop
and
ljmp
movsl
loope
ret
mov
ret
mov
sbb
mov
push
leave
scas
push
inc
dec
icebp
mov
decl
cmp
jnp
push
dec
pop
sbb
mov
xchg
lea
jmp
call
sbb
and
or
push
aad
lds
pop
xor
fistps
inc
jp
jge
aaa
adc
mulb
or
sub
cmp
rol
lock
call
jbe
icebp
dec
add
in
mov
xchg
test
mov
dec
into
out
call
xchg
rclb
mov
divb
push
pusha
daa
or
fdivr
fstps
mov
ljmp
mov
cwtd
and
jnp,pn
jbe
mov
aad
imul
cmpsl
out
mov
hlt
push
in
cmc
inc
mov
arpl
pop
xchg
push
push
or
cmp
fiaddl
or
adc
and
rol
mov
scas
ljmp
sub
ret
mov
cmp
pop
sbb
jl
jno
enter
jl
cltd
push
inc
jb
dec
hlt
or
out
aad
push
sbb
es
std
pushl
call
std
in
scas
in
pop
mov
mov
lret
dec
lcall
push
das
push
fwait
pop
daa
popf
std
scas
sub
loopne
cli
inc
loop
fcmovnb
popf
lret
std
fwait
outsb
test
lods
je
hlt
shll
ljmp
cld
iret
xlat
adc
mov
rcr
or
outsb
sbb
xor
ret
test
out
or
or
stos
mov
lahf
jno
aad
scas
incl
jg
pop
push
xchg
cli
les
sahf
cs
xor
adc
jg
das
out
dec
stos
mov
sub
mov
sarb
icebp
xchg
cli
lcall
push
inc
sub
ret
cmp
in
mov
es
jmp
jb
add
mov
in
or
pop
iret
pusha
test
mov
in
call
inc
pop
ljmp
dec
mov
cltd
icebp
xchg
daa
lods
clc
int
lret
fucomip
out
jnp
repnz
mov
and
pop
and
das
rorb
mov
mov
push
add
pushl
mov
movsb
jl
sub
sub
cmp
test
or
cmc
cltd
das
aam
adc
xchg
cmp
sbb
dec
jns
les
dec
lcall
mov
and
inc
test
xor
loopne
mov
or
js
and
jmp
scas
imul
mov
roll
lods
scas
sbb
insl
push
xchg
jmp
shrb
loop
sub
cmp
adc
ficompl
xchg
inc
adc
in
subb
lcall
and
cmp
out
pushf
mov
pop
lea
lret
mov
test
es
lea
sbb
pushl
mov
call
shll
mov
cmp
cli
inc
ret
mov
outsl
adc
ret
add
popl
push
cmp
inc
jnp
pop
fmull
mov
xchg
inc
mov
cwtl
push
dec
dec
imul
cmp
je
xor
mov
adc
add
insb
mov
ljmp
pop
or
xchg
or
add
add
les
stc
test
mov
and
sub
cli
imul
xchg
sahf
xor
shll
and
xchg
gs
cld
into
mulb
sbb
xchg
mov
pop
in
call
enter
decl
jb
lret
dec
pop
hlt
inc
arpl
arpl
movsl
adc
jg
sbbl
popa
adc
or
rclb
leave
stos
push
cld
jmp
pop
mov
adc
dec
sti
sub
lock
and
mov
sar
aaa
mov
ljmp
adc
and
addl
or
sbb
mov
sub
call
imul
jecxz
cmp
rcll
adc
int3
iret
outsb
lahf
jb
rcrb
add
pop
adc
int3
loopne
push
jno
xor
out
scas
cmp
insb
adcb
je
jmp
sbb
sarl
jg
adc
jne
add
call
mov
in
aad
pop
test
pop
push
or
jmp
fimuls
pop
cmp
add
push
push
int3
jmp
fmuls
pushf
pop
dec
imul
sbb
fwait
pop
cli
decl
aaa
ud1
jnp
js
inc
fnstcw
out
mov
mov
sbb
das
shll
lret
jbe
xor
int3
sbb
mov
loop
ret
jmp
in
sbb
arpl
imul
mov
cmc
shll
aas
mov
das
insb
lock
sub
into
jl
fwait
mov
dec
loop
mov
cld
incl
mov
mov
cmpsb
dec
ljmp
test
decl
jmp
cs
cmp
out
inc
incl
mov
scas
loopne
add
orl
ficoms
mov
movsb
je
shll
jecxz
shlb
imul
adc
or
rcrl
sbb
add
mov
ljmp
and
jb
mov
ja
arpl
in
sub
xchg
inc
sub
lret
pushl
lock
pop
pop
pop
push
jns
mov
cwtl
xor
aas
inc
cmp
mov
int
xchg
cmp
movsl
dec
hlt
cmp
aas
and
jne
fs
lret
fisttps
fwait
mov
mov
dec
mov
fs
sub
pop
mov
scas
shrl
fildll
adc
jge
popa
out
arpl
fwait
in
test
sub
cmp
gs
and
sar
decl
loope
fsub
mov
mov
pop
rol
rcr
push
xor
lock
cld
sub
pop
fidivs
inc
cld
mov
aaa
arpl
cmp
call
sub
scas
cmpsb
inc
neg
pop
mov
es
sub
outsl
jge
inc
aaa
and
ret
pop
jge
xlat
call
mov
or
push
inc
xchg
es
mov
sbb
shrl
fwait
and
push
icebp
lcall
popf
inc
popw
ror
test
xor
sbb
nop
cmc
cmp
sub
jg
ret
jnp
shrl
js
cld
mov
mov
xor
xchg
push
sbb
in
cwtl
dec
jg
mov
aaa
mov
shrl
xor
mov
stos
mov
jg
sub
jnp
jno
notl
in
mov
fsubr
cwtl
aas
or
and
lret
rcll
test
cwtl
imul
mov
call
sub
xor
hlt
dec
mov
inc
pop
cmp
mov
les
jg
insb
out
ja
fbstp
vmptrst
push
push
arpl
ljmp
cld
jg
sub
movsl
es
mov
jge
xor
sar
jg
decb
or
sbb
ret
mov
fisubrl
dec
out
movsl
xchg
mov
inc
xchg
outsb
lds
push
pop
mov
mov
popf
cmp
cli
sahf
push
xchg
xlat
je
xlat
jg
xchg
bound
in
sbb
ds
push
and
ficoml
fs
xor
dec
mov
out
addr16
nop
dec
inc
add
cmpsb
subl
cli
dec
enter
mov
in
jmp
and
btc
std
fucomip
insl
lods
fsubrl
xor
jp
cmc
and
push
pusha
xor
xchg
outsl
imul
es
xchg
ljmp
push
cmc
fwait
sahf
xor
mov
orl
call
sbb
std
push
cwtl
adc
lcall
cmp
call
stc
xchg
in
std
sti
daa
cltd
sti
lods
xchg
jae
shll
out
dec
ss
call
in
add
outsl
dec
fidivrs
xchg
insb
mov
pushl
fildll
call
dec
dec
lock
out
dec
sbb
bts
jge
push
or
es
and
test
das
mov
fbld
sahf
push
jmp
pop
lret
in
mov
sub
mov
roll
lea
cld
dec
std
inc
leave
adc
stos
cs
ss
aaa
aas
inc
out
inc
cmp
loop
repnz
jge
sbb
enter
mov
xchg
xor
inc
push
ljmp
iret
dec
cmp
mov
pop
mov
cmpsb
xor
lcall
adc
mov
scas
outsl
and
push
mov
jge
movsl
call
xlat
xchg
mov
inc
scas
sbb
out
fwait
cwtl
inc
xor
cmp
outsb
or
cmp
add
cmpsl
lods
stc
shlb
or
fwait
lret
in
leave
inc
repnz
out
push
lods
xabort
test
movsb
dec
and
faddl
pop
cmovno
arpl
cmp
stos
mov
decl
addr16
je
in
movd
iret
adc
loope
testb
sti
fwait
mov
inc
pushw
incl
xor
sbb
mov
cmp
into
ss
fadds
xchg
aaa
mov
cs
loopne
das
scas
lcall
fdivl
imul
sbbb
jo
push
les
push
push
aas
jo
mov
stc
mov
out
loop
inc
scas
fiaddl
clc
sahf
sbb
outsl
sbb
pop
pusha
in
into
sub
scas
jecxz
add
repz
je
add
jg
pushl
popa
daa
inc
jnp
or
jb
arpl
and
cli
aam
xchg
pushl
cmp
or
mov
fistpll
aam
cmpsb
mov
inc
mov
pop
pop
das
inc
lret
js
incl
shll
loopne
out
push
sti
inc
lea
hlt
mov
sbb
mov
call
xchg
mov
mov
js
aad
ja
jnp
inc
push
adc
incl
mov
hlt
fnstcw
aad
mov
std
fs
mov
cld
int
and
or
mov
jg
add
insl
and
fbstp
ljmp
lock
xorl
pushl
mov
xor
pop
je
inc
and
pushf
filds
add
inc
push
testl
dec
mov
lods
inc
lock
push
xchg
movsl
xchg
aam
and
sub
mov
shrb
int3
adcb
inc
xchg
cmc
stos
dec
psubq
loopne
call
shlb
fsubrl
mov
int3
and
imul
lds
incb
ja
jecxz
sub
test
and
mov
cmc
sub
ds
mov
int3
jle
ret
sub
dec
jae
mov
add
mov
mov
call
push
in
pusha
fidivrl
out
cmp
mov
xchg
lret
fbld
icebp
incl
cmp
mov
out
sub
mov
xchg
dec
add
xchg
dec
dec
enter
ljmp
pop
int3
pop
xchg
je
loope
inc
xchg
test
mov
sbb
bound
xor
mov
jmp
imul
mov
jg
shll
sti
and
and
and
iret
cmpsl
cmp
aam
jne
inc
pusha
ljmp
std
lret
add
mov
mov
push
loope
xor
rolb
cli
decl
frstpm(287
mov
leave
mov
or
decl
lret
and
and
imul
and
mov
lret
mov
in
data16
imul
add
or
and
es
sub
xor
jle
xchg
cmp
push
xchg
lea
jg
andb
sub
xor
int3
loop
out
cmc
incl
es
hlt
cwtl
lcall
mov
xchg
sbb
mov
push
test
lds
cmp
push
push
lods
test
mov
inc
jge
jbe
sbb
mov
pushf
cmp
jmp
stos
jne
ja
jp
test
outsl
arpl
out
or
andl
inc
fdivr
pop
cli
into
outsb
shrb
cmp
add
pop
jecxz
pop
or
and
add
dec
js
mov
inc
mov
add
adc
push
divb
inc
xchg
sar
das
push
lds
jp
dec
cmpsl
add
cmc
jmp
lods
pop
jns
mov
inc
sbb
mov
ficoml
dec
incl
push
mov
push
jns
loope
repz
inc
sub
jp
sub
xchg
ffreep
jne
into
js
add
fdivrp
sti
aad
dec
pushf
lret
dec
inc
leave
push
xchg
js
ret
jmp
and
mov
lret
mov
mov
imul
jg
scas
jb
inc
cmpsl
push
xor
sar
bnd
cmp
pushf
js
push
add
jecxz
dec
mov
imul
insl
sbb
and
dec
sbb
inc
lods
jae
ja
decl
call
adc
in
and
div
mov
adc
or
ds
mov
lods
call
lods
icebp
push
mov
in
leave
mov
and
call
or
adc
ret
cld
fildll
les
in
movsb
or
push
int3
mov
call
cmp
aas
repnz
xchg
and
add
fisubrs
cld
fildll
ret
dec
int3
dec
imul
ds
clc
pusha
insb
aam
mov
gs
std
js
imul
div
aad
dec
daa
in
icebp
inc
call
test
cmp
rcrb
cmp
outsl
js
icebp
or
or
leave
dec
mov
in
mov
mov
push
aas
jl
jnp
dec
aaa
andl
in
sbb
xlat
in
clc
decl
sarl
lcall
push
dec
push
sbb
ljmp
pop
dec
fwait
pcmpeqw
jb
lret
imul
clc
cs
call
xchg
push
cmp
adc
les
in
bound
lahf
fwait
inc
inc
push
mov
sub
xchg
fdivrs
mov
push
test
movsb
mov
pop
xchg
in
push
dec
mov
jg
das
daa
mov
cmp
mov
adc
sbb
xchg
and
int3
jp
dec
in
lock
pop
adc
push
jg
ret
pushf
push
data16
ret
fdivr
pushl
pop
push
mov
dec
push
imul
cmovp
leave
orl
fs
pop
call
lcall
cltd
pop
test
mov
push
jecxz
mov
dec
lret
cmc
mov
xchg
out
or
in
jg
lods
mov
mov
mov
int
mov
xchg
mov
mov
decl
cmc
jg
mov
jbe
out
xchg
ret
mov
jmp
jge
xor
push
cld
mul
mov
xor
lea
mov
in
cwtl
sub
insb
lods
dec
xchg
cs
sbb
into
sub
cmp
incl
decl
dec
sub
or
sbbl
fistps
xchg
loopne
es
xchg
imul
dec
inc
aam
stos
test
mov
imul
push
sub
mov
leave
jl
jg
or
jb
or
sbb
outsl
dec
or
or
cld
mov
pop
push
ss
add
adc
pop
dec
jecxz
fcoml
inc
arpl
push
test
cmpsl
enter
dec
insb
js
scas
movsl
xchg
ljmp
pop
mov
add
xlat
mov
js
mov
mov
into
int
imul
xor
gs
aaa
outsb
imul
push
sub
aad
jecxz
pop
xchg
add
push
leave
push
fbstp
sbb
loopne
into
stc
test
cmp
push
mov
jmp
lea
pushf
fiaddl
mov
pop
push
sub
shll
jbe
sbb
push
adc
loope
adc
movsb
xor
in
fwait
cmp
jl
xchg
dec
jp
test
fists
repz
insb
cmp
fwait
ljmp
lcall
push
testb
lods
mov
mov
jns
jecxz
ss
clc
sti
incl
imul
or
fwait
push
xor
jge
enter
add
enter
cmp
inc
inc
stos
push
aas
movsb
or
adc
mov
dec
or
jge
xor
inc
mov
lret
pop
fs
adc
and
push
jnp
adc
loopne
mov
mov
push
pushf
push
fwait
cmp
incl
sbb
dec
mov
out
mov
push
test
decl
test
xor
cmp
mov
push
movsl
sti
or
in
cli
movsl
in
mov
fildll
mov
sbb
cmpsb
push
sbb
std
ret
lods
out
inc
pop
cmpsb
scas
jl
addr16
insl
sub
jns
sbb
xchg
cwtl
fs
dec
inc
sbb
sub
cld
je
xor
cmc
cmp
jg
add
mov
lods
scas
stos
mov
hlt
xor
dec
roll
adc
add
jp
lock
sarb
adc
cmp
pushl
jmp
enter
push
xchg
out
outsl
mov
lret
shlb
pushf
pop
icebp
idiv
xchg
dec
xchg
inc
mov
mov
cmp
push
mov
popf
loop
pop
jbe
out
insl
jl
add
mov
cld
dec
jl
push
inc
adc
fnstsw
or
pop
inc
dec
je
enter
ljmp
xchg
je
in
jo
cmp
pop
cmp
popa
cmpsb
jbe
pop
in
movl
mov
sub
popa
push
xchg
mov
jmp
sbb
loopne
incl
xor
arpl
add
xchg
pop
iret
filds
pop
notrack
lcall
pushf
sub
or
out
push
mov
xlat
mov
call
sbb
cmp
insl
mov
out
jle
mov
test
je
xchg
nop
fs
jp
jg
data16
lods
test
dec
mov
xor
aas
push
repz
xchg
and
or
mov
mov
cmpsb
in
fdivr
mov
cmp
adc
xor
enter
add
cmp
mov
sbb
xor
xchg
mov
cwtl
and
jmp
sarl
add
and
call
push
cli
call
scas
scas
cmp
cltd
cmpb
jno
pop
sbb
mov
call
aaa
js
aad
lock
mov
jne,pt
aad
sub
push
xchg
inc
jmp
movsl
cwtl
das
push
mov
aaa
jnp
cld
aaa
decb
push
push
arpl
and
sub
sub
incl
pop
lock
clc
ljmp
popa
test
call
dec
in
mov
cmc
ljmp
mov
movswl
int3
mov
pop
lock
icebp
xor
lcall
add
lret
sbb
and
mov
call
call
out
push
mov
mov
and
js
jmp
jb
xlat
dec
sub
scas
pop
icebp
sbb
mov
cs
sub
fsubp
cmp
jnp
push
push
add
cmp
movsb
push
cmpsb
xor
out
popf
scas
inc
repz
cmp
and
test
lock
mov
or
jg
das
adc
ja
and
jecxz
out
sbb
call
and
dec
testl
cmpsb
stos
stos
bound
xchg
adc
mov
pop
xor
inc
cmp
mov
repnz
adc
xchg
lcall
dec
sub
pop
mov
push
lret
xchg
ret
mov
pop
aam
mov
daa
loopne
jmp
jo
fldlg2
mov
ret
mov
into
adc
out
mov
popf
lcall
pop
dec
xor
fisubl
cmp
clc
add
sub
lcall
clc
fnstsw
sub
sbb
hlt
push
stc
ja
mov
xor
lcall
loop
sub
addr16
arpl
addr16
jp
inc
outsl
cmc
mov
or
inc
add
adc
pop
daa
into
xor
mov
icebp
ljmp
adc
dec
stos
sub
popf
mov
fldt
mov
dec
mov
aad
shlb
outsl
add
daa
inc
add
pushl
push
orb
push
and
rcr
repz
and
sub
fdivs
pop
ljmp
add
sub
outsb
push
add
or
xchg
adc
outsl
ds
add
imul
jns
mov
ds
pushf
dec
add
mov
cmp
imul
push
and
pop
popa
mov
mov
cli
sub
dec
sub
or
sbb
out
in
orl
add
cwtl
call
adc
sbb
lcall
arpl
test
sub
xor
dec
mov
imul
pop
dec
cmp
jmp
arpl
xchg
push
cltd
mov
mov
pusha
mov
mov
pushl
push
js
movsb
and
call
loope
sti
lods
ja
into
xor
out
bound
sbbb
icebp
lcall
shl
jmp
mov
shr
sbb
icebp
mov
xor
mov
push
inc
dec
idivl
pop
std
jecxz
cmp
adc
aad
je
dec
and
sbb
jmp
loop
hlt
mov
das
das
add
sbb
aad
sbb
xchg
insl
dec
cwtl
js
decl
cld
or
add
shrl
or
and
out
mov
mov
pusha
pop
adc
xlat
mov
mov
dec
sbb
outsl
jecxz
jle
cld
xchg
lods
push
cmp
lods
mov
rol
inc
jns
mov
call
sbb
sbb
fucomip
add
movsl
xchg
mov
push
xor
jb
adc
xor
cwtl
dec
pushf
adc
bound
push
ret
data16
xchg
std
mov
sbb
repnz
mov
pop
inc
mov
add
mov
pop
test
aad
dec
fnstsw
pop
std
ror
aad
jg
insl
cli
lret
cmpsb
fldenv
ljmp
mov
shlb
sbb
inc
je
inc
inc
fcmovnu
daa
push
pop
out
fdivr
movsb
mov
stc
mov
lret
add
roll
decb
incl
ljmp
sub
stc
inc
call
dec
stos
cmp
inc
outsl
dec
cmp
xchg
jg
movswl
in
decl
push
push
in
cmpsb
cmp
fstps
pop
xchg
mov
sbb
incl
pop
popa
and
mov
pop
mov
ret
mov
mov
mov
fnstsw
movsl
es
int
mov
inc
test
nopl
leave
mov
cld
mov
es
testl
imul
call
iret
inc
pop
lret
fdivp
cmpsl
xchg
xor
inc
enter
das
push
iret
int3
inc
sahf
jmp
jne
enter
imul
out
fwait
mov
addr16
fucomip
sub
xchg
and
fisttps
jg
pop
jge
fwait
leave
inc
xor
hlt
mov
push
push
test
mov
xor
mov
pop
stos
incl
stc
pop
test
popl
xchg
in
fcoms
orl
xor
inc
jmp
fucomip
push
xchg
sub
mov
enter
cld
xor
ja
out
mov
jg
adc
dec
cmpsl
inc
clc
into
mov
inc
sbb
xchg
popf
push
dec
sbb
mov
jmp
mov
push
stos
pushf
test
mov
xchg
push
cmp
add
mov
ret
cmpsb
pop
mov
pop
pop
ret
mov
push
push
push
insl
jmp
arpl
pop
jnp
inc
gs
mov
pushl
stos
scas
xor
fidivl
adc
dec
mov
jg
call
or
out
call
js
leave
fs
push
roll
dec
mov
and
sbb
pop
int
sub
fs
mov
push
mov
push
loope
in
lea
mov
mov
or
clc
adc
mov
jecxz
inc
push
in
sti
xchg
pop
xlat
mov
dec
dec
ljmp
fwait
sub
jg
mov
outsl
cmp
mov
mov
ficoml
cmp
aam
cli
adc
sub
stos
icebp
sbb
loopne
decl
in
or
jecxz
lret
xchg
mov
and
cmpsb
lcall
jle
vmwrite
into
dec
daa
cmp
in
sbb
inc
cmpsl
dec
cmpb
lcall
inc
xor
mov
cmp
mov
xchg
jp
test
sub
cs
sahf
in
mov
mov
sbbb
icebp
inc
inc
filds
insb
lods
mov
or
cmp
and
add
jg
in
add
or
loopne
sti
cmp
enterw
jl
ljmp
cmpsl
jne
cmp
cld
cmp
sub
int
ds
mulb
mov
cmp
mov
inc
sarl
inc
in
xchg
rorb
jl
repz
fcompl
push
jo
lods
scas
push
addr16
shrl
ds
jb
or
cmpl
ljmp
mov
xchg
insl
dec
loope
test
daa
and
fwait
sbbb
movsl
in
adc
or
popl
push
pop
dec
and
lahf
clc
popa
nop
xor
int3
pushf
fnstsw
incl
dec
mov
xor
jae
mov
xchg
inc
pushl
lds
popa
call
lret
addr16
decl
clc
call
push
int
sarb
lcall
lds
mov
lcall
cmp
sub
xor
and
sti
pop
clc
shlb
cmpsl
sti
pop
jge
push
xchg
xchg
xor
pop
ljmp
jg
dec
push
and
dec
test
mov
shl
mov
pop
mov
and
cmc
pop
jmp
xchg
mov
jb
fwait
dec
pop
ljmp
pop
outsb
out
mov
ljmp
mov
pop
cmp
add
push
xor
lods
mov
xor
pop
call
mov
sub
xchg
push
arpl
xchg
or
sbb
std
jne
mov
mov
insb
add
rclb
adc
js
testl
lcall
xchg
fistps
fmull
les
mov
cmp
fdivrl
loope
push
push
add
push
pop
outsl
lock
lcall
jp
cmp
movsl
pop
fucomip
sarl
call
std
movsb
xchg
push
in
enter
push
test
jg
jmp
pop
mov
xor
xor
and
icebp
mov
movsb
mov
cld
push
push
xor
call
fucomip
sti
subl
lods
pusha
ss
add
mov
mov
push
test
lods
and
gs
cmpsb
pop
stos
jg
sbb
icebp
mov
test
sub
out
pop
jno
cmp
clc
loope
xor
dec
ds
push
dec
push
sub
sbb
pop
cmp
jl
call
adc
daa
fnsave
lea
pop
jp
cmp
das
mov
jg
sbb
imul
pop
decl
sub
push
xchg
add
shrl
dec
push
jne
mov
aas
mov
les
mov
jl
lahf
mov
xor
cmpsl
test
jmp
dec
fwait
push
dec
adc
xor
mov
mov
mov
orb
adc
dec
test
aas
cwtl
jle
cli
push
push
test
cmpsl
out
pop
lea
xchg
add
adc
call
sub
and
out
pop
popf
xchg
mov
jnp
mov
data16
scas
add
les
outsl
add
jle
xor
sub
pop
pushl
push
xor
inc
test
outsl
cs
shr
push
ss
mov
pop
mov
push
aam
fwait
pusha
jbe
jmp
lods
arpl
sub
nop
add
outsl
pop
xchg
ljmp
test
jno
cmp
cld
lcall
cltd
mov
or
outsl
fsubr
loope
loop
sarb
sub
ret
cmc
decl
mov
repnz
fstps
mov
sar
ljmp
jp
andl
ds
mov
jp
mov
popa
in
xchg
sti
fidivl
test
in
mov
test
es
jne
stos
loopne
jb
ljmp
push
in
mov
cltd
loop
imul
inc
mov
jge
dec
decl
arpl
test
js
icebp
jg
dec
mov
pusha
popf
xchg
xchg
mulb
fdivr
mov
sbb
mov
cmpsb
je
pop
inc
mov
sbb
mov
fsubs
push
fidivs
fwait
pop
jmp
shrl
pop
test
loope
nop
in
jnp
das
jg
je
push
adc
fcompl
jg
push
mov
lds
and
mov
ljmp
scas
idiv
pop
inc
out
jae
in
push
add
lock
push
push
fs
rol
mov
sar
fbstp
es
jg
jg
jns
sti
xor
adc
aaa
lahf
and
pushl
push
aas
das
lods
jne
inc
xor
cmp
add
mov
jecxz
decl
aad
rclb
inc
movsl
in
pop
jns
push
mov
cmpsl
mov
clts
pusha
divl
cli
mov
sbb
dec
or
cmp
out
divl
mov
push
push
out
loop
xchg
movsb
shlb
xor
or
jge
pop
gs
sub
xlat
shll
idivl
repz
es
ret
sub
pop
add
mov
rorl
cmp
or
inc
std
lods
incl
ljmp
add
std
mov
and
xor
push
dec
xchg
int
paddb
roll
add
call
cmc
out
insl
push
sti
ljmp
sbb
push
jp
fisubrs
das
hlt
fs
dec
inc
pop
arpl
dec
lds
pusha
fldcw
orb
data16
data16
mov
jle
fildll
cs
push
push
pop
add
aaa
std
jo
mov
add
iret
xchg
aaa
cs
jg
push
ljmp
jbe
mov
xchg
hlt
daa
sti
push
pop
cmp
and
ljmp
cmpsb
pushf
aad
jnp
inc
push
sbb
fucom
popa
xchg
fists
aad
pushl
adc
pop
fcmovnbe
lods
sbb
mov
popf
cld
push
jne
lods
inc
mov
sarb
lods
pop
test
in
push
test
add
imulb
out
push
jg
jne
jge
adc
adc
call
mov
lahf
ret
jle
add
icebp
cmpsl
dec
add
push
pop
loopne
iret
test
dec
ss
cmc
sub
add
sti
push
sub
lret
popf
sar
ljmp
dec
cmp
popf
jg
mov
add
mov
stc
into
pop
ja
and
sbb
andb
and
or
ljmp
fs
pop
dec
push
fucomip
add
mov
mov
xlat
cltd
adc
xchg
mov
mov
cmpsl
cmc
rcrl
mov
or
jmp
push
mov
jno
jmp
add
cltd
ljmp
push
mov
mov
mov
in
arpl
cmpl
and
loopne
popf
adc
iret
in
mov
mov
sbb
xchg
push
rclb
or
das
jecxz
insb
xchg
and
enter
xchg
imul
mov
cmp
stos
inc
add
lcall
adc
pushf
and
dec
xchg
rol
cmp
jecxz
jmp
cmpsl
jmp
xor
xchg
loopne
cmpl
testl
ljmp
jnp
aam
scas
and
lahf
pop
repnz
mov
adc
mov
pop
sbb
dec
std
lcall
test
enter
adc
xlat
and
loopne
push
adc
inc
js
xor
cmp
imul
jb
push
push
xchg
push
cs
je
movsl
lcall
movsl
mov
pop
rcl
fst
and
cmc
adc
vextracti32x4
decl
push
xchg
dec
lods
sub
mov
adc
sbb
leave
scas
inc
mov
sbb
rcrl
adcb
adc
inc
into
clc
pop
gs
fdivrs
jmp
test
mov
ds
call
fs
jmp
je
mov
push
roll
add
scas
pop
out
ljmp
fistl
mov
push
pop
adc
push
xchg
inc
repnz
mov
jp
pop
ljmpw
hlt
sub
or
test
gs
insb
sbb
mov
add
ret
hlt
dec
adcb
dec
jnp
or
jbe
mov
clc
mov
aaa
jecxz
ja
jns
push
and
imull
scas
pop
cltd
mov
in
jle
mov
mov
pop
mov
incb
inc
movb
aam
mov
mov
dec
jmp
insb
enter
sub
pop
push
push
xchg
rol
or
stos
ret
in
xor
jmp
and
or
aas
sti
mov
shrl
test
fnstcw
fdivrl
dec
ret
stos
imulb
mov
jno
scas
out
ds
adcb
fsubp
or
push
mov
pop
cmp
sbb
mov
xlat
mov
decl
fistpll
outsb
ret
add
cmc
das
inc
or
sbb
dec
js
mov
std
lcall
sub
call
mov
pop
add
push
cmp
sarb
fs
mov
movsl
xor
mov
repz
mov
dec
std
mov
aad
pushf
dec
pop
insb
and
jo
sbb
pushf
les
jg
testb
cmpsb
xchg
imul
add
pop
ljmp
and
out
push
std
ljmp
xor
cmc
lds
sub
popa
loop
imul
cmp
decl
je
mov
orl
jle,pn
add
mov
cmp
and
mov
and
push
insl
aad
leave
imull
sbb
je
xor
call
mov
shll
inc
cmp
les
jge
mov
adc
clc
push
sar
pop
stc
xor
js
push
shrb
inc
xchg
lret
inc
das
xor
fists
test
incl
jo
or
add
lock
jb
bound
inc
sub
mov
das
std
adc
jle
js
and
sub
add
test
push
sbb
fbstp
mov
xor
sbb
fimuls
push
mov
sub
mov
clc
out
jp
pop
xor
daa
lret
inc
pop
inc
ror
aad
incl
daa
int
xor
cmp
cmp
out
stos
mov
adc
cmp
aam
fisubs
rcrl
in
fildll
cld
jno
xchg
test
cltd
ficompl
stos
test
mov
and
aad
push
out
mov
ljmp
xor
dec
pop
rcll
flds
mov
push
cmpsl
pop
or
pop
loopne
mov
out
mov
popf
out
outsb
sbb
call
mov
jo
int
loope
shll
xlat
test
cmp
pushl
nop
mov
xor
daa
pop
sub
in
ret
dec
call
test
mov
rcll
and
mull
sbb
stos
lods
dec
lods
ljmp
call
cli
pop
popf
lds
leave
inc
cmc
sbb
jecxz
pop
add
fcmovnu
cmp
call
icebp
pop
lods
in
pop
sbb
xlat
inc
jg
and
ljmp
hlt
call
call
pop
leave
imul
inc
adc
and
xor
shrb
sub
dec
lcall
out
or
in
mov
jae
aam
iret
aam
mov
adc
stos
call
decl
push
dec
xlat
clc
nop
inc
jo
inc
dec
cmp
out
dec
and
inc
mov
lret
outsl
cmc
and
mov
in
aam
push
imul
jne
test
fucomip
push
mov
cmp
mov
xorb
ljmp
jo
sti
data16
xor
push
in
pop
fsubrs
test
inc
sbb
xor
imul
daa
sbb
incl
xchg
je
pop
mov
pop
sbb
pop
mov
addb
scas
dec
cld
ljmp
pusha
movsl
and
arpl
test
dec
jp
hlt
lcall
adc
ljmp
in
icebp
popf
xor
mov
shlb
fisubs
repnz
mov
testl
dec
mov
std
pop
insl
mov
insb
jb
jg
sub
mov
add
xlat
pushl
push
mov
roll
in
aaa
dec
inc
adc
cmp
ja
add
cmp
mov
push
sti
cmpsb
rolb
ljmp
or
mul
fwait
xchg
test
mov
hlt
sbb
imul
xor
push
outsl
fcoms
jae
pusha
cmpsl
cmp
lods
sbb
decl
or
pop
dec
cmp
decl
je
pop
std
inc
push
ja
inc
push
sub
int3
push
lock
sbb
pop
cld
rcl
mov
inc
cltd
sbb
rcrb
jo
xchg
pop
sarb
std
add
test
aad
jp
xlat
jg
sub
jae
gs
shrl
fwait
mov
stc
jl
insl
cmpsb
mov
sub
ljmp
add
daa
pop
lret
stos
sub
fiaddl
dec
lock
decl
and
mov
sarb
dec
iret
lret
fdivp
fldl
xchg
loopne
sar
jp
and
push
jle
lret
and
dec
or
or
dec
icebp
push
popa
sti
push
aam
rcrb
call
cmp
insb
arpl
xchg
inc
mov
sbb
cmc
adc
jmp
push
imul
mov
das
mov
call
movsb
cmpb
dec
daa
out
sub
inc
or
es
inc
cld
cmpsb
adc
jb
sbbb
inc
sbb
into
xor
push
cmp
movsb
sub
mov
cmc
push
or
je
push
arpl
mov
or
sbb
and
xchg
mov
sub
jns
imul
jne
cmp
pusha
outsb
mov
jmp
and
mov
cmp
aam
add
cld
sbb
adc
xchg
sar
pop
mov
sar
ljmp
cwtl
sub
int
scas
sahf
mov
pop
push
adc
mov
push
inc
insb
stc
incl
cmp
jecxz
sbb
into
ret
loop
or
mov
fists
les
mov
add
mov
or
out
jns
fsubrl
xor
lret
push
cmc
mov
ret
fstp
dec
jg
dec
ljmp
les
or
ss
mov
addr16
insb
jnp
rolb
add
pusha
sbb
cmc
jg
and
outsb
jns
jl
dec
lods
add
adc
dec
xor
movsb
inc
decl
int
and
or
jecxz
mov
adc
sub
mov
adc
lret
mov
mov
sub
stos
cli
into
int3
push
xor
bound
stos
pop
mov
add
decl
sbb
sbb
aad
test
addb
or
data16
popf
or
cld
in
mov
fildll
gs
jecxz
dec
push
mov
pusha
cld
bound
inc
iret
lock
push
dec
pop
lret
nop
aad
mov
andb
movsb
cmpsb
xchg
cmp
shrb
repz
add
mov
fdivrl
adc
shrl
mov
xchg
stos
xchg
fwait
or
lcall
nopl
inc
push
and
aam
jl
push
aam
ret
jne
pushl
clc
add
imul
decl
xchg
or
push
mov
stc
std
and
rcrb
dec
popa
clc
ds
adc
mov
pushf
mov
aas
inc
lds
mov
xlat
mov
mov
xor
sub
pop
mov
and
ret
sub
mov
jg
inc
sar
cld
popa
cmpsl
scas
scas
mov
push
addr16
fsubp
push
pop
std
out
mov
jmp
adc
adc
cltd
lret
ds
lods
outsl
push
addr16
and
and
decl
sbb
mov
adc
fsubs
mov
xlat
pop
cld
dec
pop
out
jecxz
push
cld
lea
inc
mov
scas
mov
gs
jl
hlt
js
jbe
pop
in
fwait
pusha
sti
dec
xor
cld
mov
xchg
repz
and
add
inc
jbe
divb
test
lcall
out
cmp
xor
mov
sub
sub
xor
lret
lret
add
jae
push
cmp
pushl
lods
in
pop
out
cli
mov
stos
jmp
cmpsb
and
jl
xchg
xor
and
xor
push
ljmp
orl
arpl
fpatan
sub
adc
cltd
inc
aas
push
mov
inc
fucomi
test
mov
mov
in
test
xor
or
decl
decl
jne
test
inc
xchg
test
shll
jl
cmp
ret
pop
push
xor
scas
mov
lds
pop
mov
jle
add
pop
push
das
push
push
imul
pop
dec
inc
scas
jmp
mov
mov
fisubrl
cmp
out
mov
adc
sbb
sahf
lds
insl
sbb
in
jno
cmp
mov
mov
stos
ljmp
cld
push
push
add
lcall
popa
and
cmp
js
call
pop
lcall
sub
inc
xor
sub
test
ljmp
call
mov
fisubl
lahf
adc
push
in
mov
shrl
icebp
fcmovne
sub
push
jg
outsb
xor
mov
lock
cmpsl
rcl
sbb
cltd
ljmp
lcall
stos
fisttpll
sub
psadbw
mov
adc
jmp
xchg
in
xchg
sbb
cmp
arpl
icebp
push
lcall
call
lret
das
es
je
inc
mov
jg
push
fistl
xor
ret
nop
push
or
or
jbe
xor
push
sub
add
jg
lods
and
ficoms
test
and
loope
cmp
xchg
mov
lahf
sub
mov
or
mov
sbb
shrl
xchg
scas
lds
cmc
ret
pop
nop
inc
push
popf
fldt
shl
pop
outsl
loop
ss
aam
jg
mov
pop
adc
ret
pop
jecxz
ds
cmp
insb
movsb
dec
cmpsb
sub
jg
ja
mov
xchg
sahf
addl
insl
and
push
lret
inc
std
xorl
xor
das
jp
scas
pop
or
lcall
jle
sub
int
mov
imul
pop
into
mov
je
shrb
decl
add
ljmp
pop
mull
pushl
clc
into
mov
jae
xchg
push
and
lret
dec
cmp
sub
push
cwtl
fwait
and
push
cmc
mov
xchg
add
inc
sbb
adc
mov
sub
das
data16
inc
pop
cmp
push
pop
popa
lds
and
lcall
in
add
dec
cld
and
sbb
mov
lods
jmp
add
adc
aas
cmp
cmp
push
dec
pop
jmp
loope
std
ja
sbbl
jb
cmpsl
aaa
ja
mov
aam
mov
lods
call
fnsave
ljmp
call
dec
add
add
push
adc
ret
or
aaa
shll
xor
sub
clc
xchg
xchg
stc
rcl
aad
cld
adc
add
xchg
push
aad
jg
call
or
ss
dec
stc
push
pop
mov
or
out
xor
pop
gs
add
push
inc
cs
lret
push
dec
sub
sbb
mov
inc
fldt
in
dec
out
mov
sahf
and
out
iret
fdivs
movsl
dec
mov
xor
popa
add
repz
movsb
and
movsl
mov
loop
in
and
xchg
xchg
cmp
inc
leave
out
cmp
ror
in
or
push
jo
push
add
arpl
imul
cmp
pop
mov
pop
mov
mov
jmp
jo
or
pop
gs
aas
add
test
aad
mov
push
add
out
jle
lcall
fnsave
push
rcrb
mov
push
cmp
incl
mov
fidivl
or
enter
and
jecxz
jge
inc
loopne
push
iret
gs
or
mov
mov
mov
push
sub
jge
push
cmp
dec
fstl
pushl
add
pop
mov
add
std
sub
pop
pop
loope
repz
ljmp
adc
outsl
bound
jmp
rorb
xlat
sbb
jmp
inc
nop
imul
adcb
add
cmp
pop
sbb
icebp
cld
fs
xor
stos
dec
adc
in
lcall
jmp
lcall
pusha
adc
lahf
push
xor
add
ljmp
mov
lods
sub
jb
lret
jmp
mov
test
inc
sarl
push
xchg
out
aas
inc
lods
in
and
test
mov
movsb
sub
int
clc
jns
imul
xchg
xor
push
pop
arpl
mov
call
lret
dec
ss
push
pop
lcall
cmpsb
es
cmp
call
and
and
in
test
ljmp
mov
les
mov
mov
dec
jo
decl
test
and
cmp
inc
mov
nop
mov
mov
call
aaa
loop
test
frstor
bound
or
stos
rolb
call
pushl
test
xchg
dec
or
test
lcall
ljmp
jmp
inc
out
rorl
inc
xchg
in
je
xchg
fnop
xor
mov
sbbl
decl
mov
adc
xchg
jg
aas
es
ss
pop
dec
and
lret
ljmp
add
and
int
push
add
cs
cs
repnz
lds
adc
jmp
jo
dec
decl
jg
mov
decl
imul
and
paddusb
xchg
and
mov
adc
lcall
push
jge
test
out
xchg
add
cmp
lcall
dec
xor
pop
cwtl
xor
cmpsb
sub
mov
pushf
cmp
cs
into
call
add
notl
cwtl
fcomps
mov
pop
outsb
movsl
in
xchg
sub
cmc
into
and
decl
lret
mov
bnd
fwait
lods
push
dec
mov
scas
scas
xor
ds
or
lods
incl
fs
into
inc
jae
lcall
jo
push
mov
clc
and
push
adc
inc
shr
push
rorb
mov
cmp
pop
arpl
or
call
cmp
or
ret
das
cmpsl
ds
jmp
mov
mov
jmp
stos
test
sar
cld
push
push
adc
xor
xor
cmpxchg
aas
incb
out
or
push
mov
movsb
mov
mov
movsb
adc
jmp
test
xchg
in
test
inc
pop
xor
aaa
lock
inc
popf
pop
jnp
mov
sahf
jb
in
rcrb
mov
lcall
dec
adc
sahf
xchg
adc
ds
adc
pop
xor
call
xchg
stos
pop
inc
mov
cmc
sub
pop
js
jg
pop
hlt
pushf
mov
push
jl
inc
out
std
ljmp
fisubl
scas
fisttps
cmp
inc
sbb
fcoml
push
aaa
ds
daa
push
jnp
lods
ljmp
dec
cmp
lds
out
arpl
sarl
fcompl
add
idiv
fdivrs
sbb
sub
gs
ja
lcall
adc
xchg
inc
dec
push
jl
sbb
mov
movsl
push
neg
push
or
daa
push
call
scas
jecxz
rcll
sbb
mov
imul
inc
mov
add
jge
pop
or
mov
movsl
and
cmpsb
sar
pop
and
call
je
fs
data16
mov
xchg
push
or
cmp
insl
cmc
fists
pop
inc
dec
fidivl
or
xchg
adc
or
dec
pop
ljmp
cwtl
sti
lds
cmp
xlat
out
add
pop
mov
mov
popa
or
and
push
loopne
mov
aad
call
inc
pop
mov
jle
jns
lcall
fbld
stos
cld
xlat
movsl
repnz
xchg
mov
xlat
xor
shrb
mov
outsb
jne
test
inc
nop
subb
mov
sub
mov
sbb
ret
jne
xlat
inc
mov
adc
xchg
fistps
or
mov
jmp
inc
mov
mov
fnstsw
lods
pushf
xlat
jge
sbb
sub
xchg
lcall
inc
jmp
push
xchg
push
add
int
sarb
mov
push
or
sbb
out
outsl
std
test
jno
push
int3
aad
or
dec
jecxz
cmpsb
fucomip
cmp
lods
pop
clc
jmp
mov
cmc
inc
jecxz
mov
into
fdivrl
out
dec
aas
inc
xchg
jb
add
sub
and
stos
mov
mov
cltd
cmpsb
ds
cltd
xchg
jg
loope
rcl
mov
dec
fucomi
stc
jns
mov
dec
gs
mov
mov
test
add
fldcw
shrb
push
inc
mov
pop
test
dec
jne
test
jmp
bound
cli
jo
pushf
mov
and
test
push
and
lret
jb
mov
pushl
sub
mov
jns
fmuls
shll
pop
test
lahf
loop
mov
fbstp
mov
adc
fs
mov
sub
sub
jecxz
jg
bndstx
mov
push
mov
or
cmc
int
sub
test
imul
out
inc
and
aas
pop
mov
int
xlat
notl
add
and
jl
xor
dec
pop
add
je
jecxz
cli
cli
pusha
jns
push
and
jns
inc
addr16
stc
inc
je
inc
jg
jae
test
int
mov
xchg
movsb
cmp
adc
dec
lods
jle
incl
out
add
loopne
xor
imul
adc
jecxz
jmp
shll
mov
mov
lock
repnz
push
adc
push
call
jne
fiadds
pop
sub
sub
sub
ljmp
mov
mov
xchg
cmp
pop
pop
mov
por
cmp
ljmp
hlt
jmp
push
mov
insb
mov
pop
jns
addr16
repz
jo
cmp
push
jnp
stos
push
jge
push
sbb
xor
add
test
cmpsl
push
add
outsb
test
stos
loopne
call
testl
jle
adc
int
out
pushl
inc
push
les
jmp
icebp
cmc
test
fildll
call
int3
rorb
dec
cmpsb
fldenv
mov
jmp
aam
adc
fisubrl
inc
decl
lcall
pop
out
sub
sbb
xor
subb
repnz
inc
jb
lret
das
cld
pop
loopne
jmp
xor
adc
ud1
js
sahf
pushf
call
ljmp
call
lret
mov
cltd
aas
mov
movb
icebp
adc
jnp
xor
in
cld
mov
cli
push
mov
into
mov
lahf
jl
sbb
lcall
and
sub
add
xchg
scas
loopne
mov
decl
adc
imul
sbb
into
popa
outsl
ljmp
jae
push
mov
cmc
push
cmp
pusha
xor
adcb
hlt
data16
adc
ss
decl
jnp
pop
jns
je
outsl
sbb
out
xchg
lea
mov
aad
incl
rcll
adc
rcrl
adc
incl
filds
xor
add
inc
rol
rolb
mov
loop
pop
inc
ror
xchg
mov
dec
arpl
jnp
push
inc
movsb
sbb
decl
mov
push
sti
int
inc
dec
mov
pop
xchg
rcll
int
sbb
mov
mov
aaa
clc
jmp
ret
inc
ljmp
pop
pop
mov
mov
fsubrs
es
add
in
and
jp
enter
mov
out
lcall
jae
pop
add
mov
scas
sbb
pop
std
call
movsl
sarb
lret
call
adc
add
lret
sar
mov
jp
push
cmpsl
gs
aas
push
pop
andb
adc
std
mov
cmp
cld
movsl
jmp
repnz
jmp
test
cmpsl
leave
dec
fbld
or
mov
dec
mov
lcall
and
cs
hlt
sti
dec
sub
aaa
mov
jmp
orl
mov
test
incl
mov
mov
push
mov
xchg
outsb
adc
mov
rorb
je
sub
inc
fwait
ss
mov
xchg
pushl
cli
cmp
movsl
nop
sbb
rorl
fldcw
dec
or
add
lcall
addr16
clc
or
lods
jno
pop
scas
jae
repz
sub
mov
sbb
pop
mov
lock
testl
pop
testl
insb
adc
mov
mov
mov
jp
xchg
fistps
cld
outsl
mov
mov
mov
jo
clc
aam
incl
aam
xor
dec
inc
cltd
mov
jmp
mov
adc
inc
bound
mov
jns
out
jb
sub
sub
aad
dec
inc
cmp
popa
frstor
mov
push
shll
fnstcw
insl
pop
sub
in
in
loopne
dec
adc
movsl
sti
dec
loop
mov
rclb
or
lcall
lahf
std
test
les
mov
decl
and
shlb
inc
mov
in
scas
decl
insb
add
mov
mov
adc
cwtl
sbb
popf
mov
mov
inc
pop
pop
and
imul
cltd
lock
mov
mov
sbb
out
and
cwtl
jmp
out
or
or
stos
insl
cs
ret
xchg
xchg
and
incl
lcall
or
es
xchg
imul
jg
mov
jmp
pop
xchg
mov
mov
test
sahf
incl
popl
loopne
pop
repnz
mov
dec
pop
or
je
jp
push
repnz
or
pop
loopne
out
push
pop
shll
sub
fcmovb
inc
mov
push
inc
pop
movsb
lods
adc
or
pop
clc
scas
ret
adc
repz
sbb
jae
loop
pushf
in
call
cmpsb
cmc
pop
subl
cwtl
sbb
push
dec
push
or
cmp
imul
das
mov
pop
fcmovnu
imul
lds
jecxz
cmp
jp
jg
loop
adc
movsl
or
movsl
iret
push
mov
scas
lock
sub
out
nop
leave
adc
pushf
push
cmp
inc
aad
inc
pop
mov
lods
outsl
scas
mov
adc
mov
and
addl
jmp
lcall
mov
mov
iret
xor
pop
jmp
imul
in
pop
or
repz
dec
cltd
out
mov
int3
pop
mov
outsl
aam
out
mov
and
add
es
xor
lcall
dec
mov
push
sub
rclb
inc
cli
das
lock
clc
jb
imul
lods
int3
jnp
icebp
out
es
mov
test
xor
xor
repnz
lahf
aad
jmp
sti
add
xchg
insl
mov
outsl
std
push
fadd
insl
push
out
sbb
rcll
mov
pop
lahf
lcall
add
cmpl
popf
or
mov
lds
jns
sbb
xchg
mov
add
or
call
mov
and
fmuls
notb
rcl
mov
call
cmp
pop
pushf
mov
fnsave
call
pop
sti
lods
outsl
imul
jns,pt
xor
neg
jg
and
jmp
adc
mov
cmp
out
das
sahf
dec
dec
popf
and
arpl
ljmp
fnsave
mov
add
adc
inc
fwait
add
xchg
push
into
and
lcall
xor
test
loope
inc
lret
leave
lods
out
xor
xor
fldcw
xor
jge
into
test
test
push
and
mov
notb
push
lcall
aas
xchg
sbb
jne
pop
std
call
mulb
mov
out
jnp
pop
and
call
mov
cmp
adc
push
xchg
leave
scas
adcl
jecxz
xchg
sti
jmp
pop
fdivp
add
repz
inc
std
call
push
pop
push
or
cmpsl
push
and
xchg
testl
ret
pop
sbb
mov
inc
lock
push
and
add
sbb
adcb
ficoml
adc
into
mov
call
dec
cld
ljmp
cli
push
insb
jbe
sbb
pop
xor
or
cmp
ljmp
incl
inc
mov
sahf
sub
lods
sahf
jb
imul
lcall
jmp
nop
mov
mov
out
and
mov
fstl
push
jg
cli
mov
cmpsl
divl
jle
cmp
sbb
incl
adc
repz
xor
lcall
jl
pop
rcll
int3
movsb
fcomp
lds
mov
cli
lcall
rcll
pop
decl
jo
lret
push
fiadds
call
cli
jmp
adc
jecxz
xor
sub
or
ljmp
jmp
lock
jmp
icebp
jp
fs
test
fcoms
pop
push
stos
dec
push
and
std
jnp
mov
rolb
shrl
inc
fdivs
fidivs
call
push
clc
inc
dec
cmp
fwait
shlb
jmp
outsb
jbe
dec
ud0
pushl
jge
loope
sbb
imul
push
or
cmp
jb
inc
jge
xor
outsl
std
dec
sbb
fldt
push
sub
xchg
mov
dec
add
ljmp
dec
cli
adc
out
mov
jmp
cltd
or
push
bound
cli
sbb
fiaddl
pop
sar
incl
clc
cmp
push
dec
lret
inc
xor
loopne
inc
push
jl
mov
and
hlt
mov
sub
pop
roll
fistpl
je
test
dec
pusha
jnp
xor
push
js
fsubs
test
test
sub
cmc
lock
xchg
pop
enter
and
mov
pop
add
loop
mov
jg
imul
add
aam
mov
cwtl
in
mov
add
pop
push
inc
or
mov
pop
push
jl
fbld
mov
adc
push
addl
int3
movsl
mov
or
mov
and
in
mov
inc
push
ja
icebp
andl
loope
testl
cvtpi2ps
int3
jge
push
loop
cs
ljmp
lock
cmc
pushl
fldcw
adc
ss
stos
push
pop
aam
lds
stos
nop
out
cmp
insb
push
testb
xchg
cld
dec
mov
incl
mov
incl
cmp
dec
aad
mov
mov
ljmp
xchg
das
mov
lock
xchg
movsl
mov
jecxz
imul
jb
jne
rcrb
incl
add
push
xchg
mov
mov
int3
fiaddl
mov
mov
mov
push
xor
or
mov
aam
xor
and
outsb
jg
mov
test
pop
pop
and
push
test
mov
incl
mov
pop
sub
or
rcrl
and
mov
add
sub
sub
nop
ss
incl
push
adc
xchg
pop
int
push
pop
dec
arpl
fsubr
jle
nop
or
cmovb
xor
cmp
jg
cli
and
push
push
out
push
daa
xchg
mov
or
fbld
add
jg
jecxz
xchg
sub
and
lcall
push
mov
jg
mov
test
push
outsl
xchg
pop
add
sub
sbb
jo
lods
mov
sbb
xor
pop
cld
filds
cmpsb
clc
and
dec
lock
out
test
jns
or
lock
fstp
flds
and
cltd
push
dec
testb
pop
jbe
pop
fwait
outsl
add
stos
cmp
ffreep
pushf
das
hlt
dec
push
jno
ror
sbb
sub
xchg
ljmp
loopne
incl
ss
fadds
insb
nop
lea
xchg
scas
pop
arpl
sub
pop
push
cmc
pushl
outsb
sub
arpl
fldl
ljmp
popa
dec
mov
rolb
dec
mov
imul
push
sti
cmc
icebp
dec
xchg
pop
add
dec
cmpsb
ror
jnp
inc
cmp
cvtps2pi
insb
fld
xchg
pop
pop
movsl
push
adc
test
sub
push
jp
fwait
mov
call
clc
lock
sub
std
push
dec
sbb
cmp
es
fwait
decl
cli
add
cmpsl
mov
mov
xchg
cwtl
rol
jmp
pusha
push
pop
sbb
lahf
jecxz
sub
js
cmp
cmp
shrl
cmp
out
mov
aam
ljmp
aas
fisubs
xchg
inc
test
mov
pop
shl
sbb
bnd
jb
sub
mov
mov
dec
cmp
dec
jae
scas
sub
iret
test
cs
sbb
aad
cmp
and
shll
cmpl
lret
and
pop
mov
pop
test
mov
iret
dec
call
in
jp
outsl
dec
int
inc
in
cli
and
fwait
mov
pushl
mov
pop
shrb
ds
cli
jmp
inc
sbb
jne
les
out
inc
pop
insb
cmc
dec
cmpsl
pop
xchg
popf
mov
xor
fmuls
fcomip
mov
std
scas
movsb
add
stos
testb
outsb
orb
or
lcall
mov
stos
sbb
aam
cmpsb
inc
jp
in
int
in
xchg
and
mov
inc
in
pusha
enter
lret
std
xchg
or
or
sbb
xchg
call
cmp
stos
insb
adc
pop
sub
in
inc
push
or
mov
mov
loope
jecxz
stos
stos
psadbw
dec
pop
call
add
repnz
imul
test
jae
ljmp
jno
dec
or
adc
dec
leave
idivb
clc
decl
idiv
fbld
out
ja
mov
mov
repnz
push
scas
jg
jne
call
and
lcall
fstpl
sub
out
pushf
sbb
sbb
fcoml
test
dec
lods
or
lods
out
in
fidivrl
cmp
jg
add
push
sti
popf
inc
popf
push
mov
push
std
pushl
jb
mov
in
ret
popa
mov
mov
out
cmp
cltd
mov
jg
push
sbb
imul
push
data16
push
dec
sbb
dec
push
pop
fwait
push
inc
lods
and
cli
nop
mov
jbe
push
mov
dec
sub
sub
cli
jo
adc
inc
push
mov
ret
jge
js
and
arpl
fs
mov
inc
das
fmull
addl
push
and
or
jns
sarb
cmp
outsl
jo
mov
dec
cld
leave
or
mov
test
arpl
dec
shl
popf
fiadds
push
lret
lahf
enter
adc
gs
data16
incl
pop
fldenv
mov
shl
add
mov
or
call
xor
lds
xor
push
pop
call
stc
mov
imul
dec
adc
cld
in
xchg
inc
jae
icebp
pushaw
pop
mov
mov
mov
dec
sub
loope
xchg
int3
mov
mov
icebp
sysenter
loopne
sub
jmp
pop
jmp
lcall
pop
pop
daa
loope
push
addl
insb
jne
push
adc
pop
pushf
iret
mov
lock
sbb
jns
bound
jmp
sub
dec
add
sar
pushl
and
insl
add
mov
pop
push
clc
outsl
ret
or
xchg
insb
push
add
jno
aam
sti
in
push
xchg
pop
ljmp
mov
ds
imul
ljmp
stc
notl
out
cmp
je
mov
push
cld
and
jno
lret
scas
xor
adc
repnz
push
mov
mov
lds
call
mov
mov
mov
imul
sbb
inc
jle
dec
xorl
mov
daa
mov
imul
push
scas
mov
adc
cwtl
xor
sbb
popf
jg
loope
call
das
add
pop
mov
xor
ss
or
ljmp
or
insl
push
mov
pop
std
xor
lar
pushl
ficoml
repz
mov
das
int3
adc
andl
insl
arpl
stos
dec
fchs
lds
scas
sbb
cli
call
xor
pop
daa
sti
xchg
jns
ret
push
add
jg
and
inc
fisubrs
cwtl
dec
cli
decl
cld
popf
daa
lcall
mov
mov
in
pop
addr16
testb
inc
out
in
push
in
xchg
sub
mov
jg
incl
loope
xorl
in
xor
repz
adc
dec
imul
jle
jmp
pop
sub
sub
cld
lahf
lahf
into
xchg
and
cmp
or
adc
jge
call
clc
push
or
mov
push
rcrl
sbbb
nop
sub
les
inc
dec
popa
jl
cmpsl
ret
lcall
push
mov
sbb
loope
xchg
lcall
mov
iret
or
jle
inc
outsb
push
add
das
inc
mov
ret
and
ljmp
jecxz
pop
dec
std
rcrl
pushf
rsqrtps
std
pop
clc
decl
pop
push
out
leave
shlb
jmp
push
jmp
or
dec
lcall
pop
cmp
repnz
ret
test
enter
test
pushl
clc
xor
stos
nop
int
mov
andl
call
in
cmp
sub
dec
inc
mov
int3
dec
in
ret
mov
dec
mov
jbe
out
data16
mov
sub
jnp
cli
aas
cs
notl
outsl
mov
call
leave
mov
mov
lcall
xchg
inc
cmp
pop
add
ljmp
icebp
cltd
lret
add
xor
jl
xchg
jmp
fsubr
mov
sarl
ret
mov
lock
aas
cmp
mov
jp
adc
jbe
push
nop
dec
ror
sbb
inc
hlt
lea
cmpsb
ret
jnp
mov
daa
lds
addb
mov
dec
cmp
mov
and
lret
sbb
aad
call
and
cmpsb
roll
je
push
pop
fldt
not
xchg
and
out
mov
fisubs
push
lock
push
scas
pop
call
das
cmp
xor
cwtl
cmp
xor
and
sbb
decl
out
fwait
cs
pop
adc
imul
pop
shrb
incl
shlb
js
out
adc
jne
mov
jecxz
notb
fdivr
test
push
and
pop
out
xor
test
outsl
shrl
push
pop
insl
add
in
sub
xchg
and
cmp
out
fcomps
pop
add
lods
out
loopne
ljmp
int3
out
lock
mov
or
test
jo
jl
daa
push
roll
movsl
lret
stos
sbb
mov
jg
xor
adc
leave
xorl
xchg
jo
test
add
or
cmp
sahf
inc
xchg
lock
in
or
shll
mov
jne
mov
daa
cmp
into
inc
pop
js
stos
add
jae
mov
mov
lret
scas
popf
mov
dec
cmc
or
inc
lret
xchg
decb
and
xchg
mov
push
enter
pushf
jae
pop
pusha
in
add
mov
jg
jo
xor
mov
fsubl
test
pop
add
sbb
in
cmp
mov
clc
test
aaa
popf
ljmp
in
xchg
ljmp
dec
xor
mov
lods
cmp
movsl
iret
cmpl
push
sar
jmp
test
mov
add
jp
and
push
imul
sbb
mov
push
clc
js
cltd
mov
xchg
pop
sub
or
in
iret
addl
test
cmp
ficompl
cmc
jg
call
movb
add
or
add
test
dec
jne
sbb
cmp
frstor
in
jnp
lcall
call
pop
mov
adc
mov
cmp
fiadds
ret
xlat
cld
xchg
sbb
into
bound
and
mov
das
push
mov
test
outsb
add
pop
sarb
addr16
sub
adc
lods
add
mov
insl
es
jb
mov
arpl
jo
cmc
dec
jae
push
ret
aam
fistl
jg
jnp
imul
je
add
inc
lods
lret
je
iret
movsb
daa
ret
xchg
dec
jmp
push
jae
lods
cli
jae
aad
lods
jl
lods
popl
inc
je
enter
push
adc
and
call
stos
mov
nop
fcomip
fcom
inc
add
pushl
cli
mov
mov
enter
add
dec
mov
cmc
fistl
gs
cltd
push
xchg
xchg
jecxz
jg
ljmp
enter
mov
lods
movb
adc
in
inc
movsb
icebp
push
jmp
das
repnz
dec
jo
xchg
in
jecxz
xor
stos
mov
das
xor
jnp
pusha
ret
inc
shll
dec
ja
push
popa
adc
mov
push
lret
std
jae
call
fildll
rorb
addl
adc
faddl
incl
call
mov
cwtl
fsubs
nop
ljmp
cld
jl
int3
jb
lret
mov
mov
lods
or
dec
xor
push
add
incl
idivl
sarb
add
sub
add
xchg
cmp
and
clc
push
push
push
test
pop
push
test
sbbb
mov
shl
mov
int3
enter
adc
dec
into
ret
insb
ljmp
shrl
and
inc
adc
pop
cld
pop
icebp
popa
push
lods
push
mov
int3
mov
and
stos
cwtl
adc
add
lcall
jle
insl
aam
inc
inc
mov
push
test
orl
jp
subl
sub
loop
ds
and
mov
adc
cmp
in
decl
xchg
and
aas
in
mov
push
mov
sbbb
decl
adc
mov
call
je
xor
lds
add
dec
xchg
sub
dec
out
incl
scas
call
or
fs
test
arpl
lds
pop
or
pop
jg
ljmp
movsb
mov
cld
popf
sti
adc
jg
aad
sbb
mov
or
or
cld
arpl
ljmp
imul
gs
mov
push
sub
cli
push
lods
mov
push
leave
icebp
call
dec
decl
rcrb
mov
in
xor
add
js
das
sub
call
in
push
fcom
daa
cltd
ret
jge
cld
sbb
call
xchg
add
mov
or
xchg
mov
xchg
and
loop
loope
es
stos
daa
xchg
and
ljmp
dec
outsl
es
pop
dec
or
stc
lret
mov
aam
std
mov
dec
outsb
pop
rcrl
sbb
je
and
dec
sbb
lcall
clc
imulb
xor
inc
jb
cwtl
inc
jns
int
jmp
incl
popw
lahf
sub
test
test
push
mov
dec
xchg
dec
call
mov
imul
pushl
pop
adc
xlat
or
cmp
cmp
xor
sar
ljmp
lds
nop
jle
jne
mov
testl
daa
mov
adc
push
aad
xchg
insl
stos
cmpsb
xchg
jmp
jg
adc
ficoms
and
sub
inc
scas
into
add
movlps
push
mov
sub
mov
sbb
sub
dec
notb
add
fcomps
sub
mov
jg
mov
shrl
stos
xchg
push
xor
jae
ja
mov
add
add
dec
cld
add
or
fwait
jp
ljmp
or
inc
test
inc
adc
xchg
popa
add
mov
mov
ljmp
fs
rorb
mov
push
std
push
cmpsb
cmc
mov
sbb
jp
imul
es
push
sti
das
push
jp
add
repnz
ljmp
lahf
in
out
hlt
mov
cltd
pushf
mov
mov
pushf
and
pushl
inc
les
arpl
popa
pushf
movsl
xor
and
mov
pop
test
gs
sete
ljmp
orb
mov
in
orb
mov
idivl
dec
addl
jb
clc
ret
sbb
loopne
add
cmp
aas
xor
mov
mov
jp
lcall
je
cli
adc
jnp
push
pop
xchg
test
ljmp
sbb
or
aad
jo
arpl
out
cmc
incl
aad
scas
es
mov
push
pushl
or
cltd
xor
sbb
ds
lods
mov
loop
ja
and
adcb
xlat
sub
jno
std
call
mov
inc
add
xor
andl
incl
jne
test
dec
push
jle
pop
ficomps
pop
leave
and
lcall
xlat
sbb
jno
cli
mov
pop
imul
adc
out
xor
inc
hlt
cmp
test
cli
jp
nop
mov
mov
outsb
pop
xchg
mov
mov
add
xchg
mov
lret
pop
and
pop
inc
or
rclb
divl
fdivrp
movsl
push
ljmp
scas
imul
ret
notl
ret
mov
sbb
fists
cltd
out
js
fs
sub
sub
pop
loop
jae
and
out
mov
lcall
popf
fstl
cwtl
inc
adc
mov
or
jg
cmp
pop
mov
mov
dec
inc
pop
pushl
jno
xor
sti
js
scas
lea
push
jecxz
or
jg
jg
scas
xchg
add
test
aaa
popa
jmp
insb
cli
gs
mov
xchg
shlb
push
movsb
mov
in
pusha
out
inc
inc
loop
mov
inc
jns
mov
mov
adcl
or
cli
mov
insl
fucomip
jg
icebp
mov
sbb
fs
ljmp
xor
inc
push
js
cld
dec
pop
loop
sbb
test
pushf
int
mov
aad
mov
sbb
mov
dec
pushl
sbb
ficoms
outsb
and
push
scas
shrl
mov
ljmp
testb
push
add
pop
mov
movsl
insb
insb
adc
dec
pusha
sbbl
ljmp
xor
test
fdivrl
mov
add
cs
cli
fsubs
mov
push
popf
push
out
dec
dec
loop
gs
add
clc
adc
dec
call
mov
push
push
aas
mov
js
decb
inc
or
adc
data16
dec
xchg
clc
cmp
mov
std
je
push
cs
ret
rcl
cmp
imul
dec
jae
in
pop
pop
rol
and
sbb
cld
xchg
roll
push
inc
in
lock
stos
mov
sbb
int
sub
cs
mov
cmp
incl
mov
jl
and
mov
mov
cmp
inc
sbb
dec
adc
xchg
and
fstpl
das
adc
mov
push
ret
loope
mov
aas
mov
loop
inc
adc
int3
test
fdivrp
mov
mov
jecxz
pop
xchg
cwtl
inc
cld
cmp
jp
call
stos
push
sbb
xor
inc
or
fldcw
sbb
jg
xlat
loope
in
incl
rclb
and
dec
call
jns
mov
out
pop
aas
dec
ret
fadd
xchg
fisttpl
push
dec
icebp
ljmp
push
mov
jg
pop
and
mov
push
jg
es
jae
jne
mov
aas
out
mov
xchg
stos
rcl
push
push
mov
mov
idiv
cmp
adc
jg
sti
mov
inc
repz
lods
inc
in
jb
ss
add
cmp
dec
addr16
jg
mov
inc
adc
inc
insb
dec
mov
clc
xchg
push
push
ret
incl
mov
je
in
or
sbb
adc
ss
inc
jg
or
mov
fsubrs
jo
adc
jbe
pop
and
icebp
and
push
call
mov
mov
xor
xchg
dec
add
push
mov
fnstsw
fiadds
notl
test
jl
cwtl
mov
dec
adc
stc
push
mov
and
and
adc
addr16
adc
decl
outsb
mov
insb
jl
rcl
rcr
inc
fisubl
mov
les
dec
cmp
mov
mov
sub
loopne
int
pusha
xchg
mov
cmc
cmc
fwait
data16
add
mov
dec
filds
call
aam
sub
pop
into
sub
mov
aaa
mov
mov
ret
cli
sub
aad
bound
mov
fucomip
decl
or
xchg
ljmp
or
je
lret
push
push
stc
sbb
mov
imul
and
shrl
lcall
mov
sti
mov
cmpb
or
inc
cmp
mov
mov
jo
sahf
add
and
test
in
sbb
lock
lret
sarb
int3
mov
lcall
mov
fisubl
pop
loope
lods
dec
push
cmp
int
into
mov
lret
fidivrl
call
out
data16
jmp
xor
mov
jl
out
incb
call
adc
pop
add
icebp
mov
dec
stos
sbb
call
mov
cli
outsl
sbb
jnp
cltd
xor
test
jle
leave
cmpsb
lret
fwait
daa
sbb
push
mov
jg
xor
pop
inc
dec
hlt
inc
dec
xlat
sarl
insb
cli
or
inc
sti
loope
in
leave
or
std
mov
jne
xchg
ficoms
dec
xchg
push
jo
fucomip
incl
das
push
jns
and
mov
or
cli
call
iret
cmc
ret
sub
scas
popf
or
fnstcw
aas
movsl
pop
push
xor
mov
cmc
inc
outsl
cld
fisttps
xlat
dec
xor
xchg
inc
mov
cmp
mov
icebp
ljmp
clc
jae
sbb
shll
arpl
call
sahf
movsl
cld
jecxz
sub
cld
push
icebp
es
lahf
icebp
ss
into
out
out
cli
test
lods
mov
lret
push
cwtl
push
fcomp
ljmp
pushf
ret
mov
out
aas
incl
imul
aaa
xor
cld
pop
out
jbe
xor
incl
push
cmp
jb
dec
in
mov
and
mov
lods
or
decl
das
inc
mov
out
subl
or
mov
mov
call
popf
xchg
cmp
insb
insl
leave
pop
lret
pop
je
test
mov
adc
ljmp
decl
mov
mov
pop
enter
sbbb
mov
and
xchg
das
push
shrl
or
pop
stos
sub
add
ror
adc
cltd
mov
shl
cmp
scas
inc
jmp
lcall
out
xchg
rcrb
inc
int3
sub
mov
inc
rcl
xchg
jns
stos
pop
dec
mov
mov
xchg
mov
aad
adc
and
mov
mov
repnz
stos
push
ja
cmp
or
lahf
mov
pop
mov
pop
iret
loope
and
mov
test
mov
lret
enter
add
jge
inc
jl
dec
aaa
mov
pushl
cli
add
out
scas
sbb
sbb
test
subl
mov
or
bound
fstl
sbb
fs
stc
mov
pushl
cmp
pop
popa
push
jne
icebp
cltd
stos
lcall
outsl
out
test
decl
out
sbb
test
lcall
add
ss
sbb
sub
and
mov
test
push
jge
sub
jae
jmp
lock
push
lea
xchg
incb
pushl
jno
dec
sub
sub
lcall
or
mov
jnp
mov
outsl
and
xor
lock
and
adc
fidivrs
xchg
dec
dec
jo
loop
inc
std
test
cmp
cli
mov
mov
mov
call
scas
mov
pop
int
push
call
pop
mov
push
ds
sbb
cmp
lods
push
mov
sub
mov
pop
cs
lahf
out
rclb
inc
mov
fldcw
mov
xchg
xchg
inc
cli
sub
push
mov
xor
cmpsl
incl
mov
add
jp
pop
push
fcoml
gs
incl
loope
pop
or
lock
shll
repnz
gs
xchg
pop
dec
hlt
es
lcall
pop
xchg
mov
dec
test
sub
mov
ljmp
int3
add
inc
dec
inc
pop
sub
test
xchg
mov
mov
orl
dec
ret
pop
adc
idivb
dec
lcall
movsl
pop
leave
mov
jne
mov
fimull
orl
out
outsl
cld
mov
xchg
jle
and
stos
loope
lds
mov
sbb
push
sbb
daa
mov
adc
int
sar
inc
jg
dec
and
push
cltd
inc
dec
out
jecxz
sbbb
xchg
pop
mov
sbb
jl
sbb
ljmp
std
jmp
stos
out
popl
aas
jmp
in
daa
xor
int3
mov
roll
jmp
call
ffreep
mov
inc
mov
and
jg
rcrl
icebp
sbb
xchg
orb
insl
mov
lea
stos
dec
es
push
xchg
dec
push
push
cmp
cmp
fcom
jge
push
in
lret
subb
shrb
lock
inc
das
cmc
test
inc
xchg
jnp
pop
mov
sar
lea
add
nop
mov
xor
js
cmp
gs
aam
and
push
cmpsl
popf
mov
adc
pop
stos
inc
dec
test
mov
in
cmpsl
xor
inc
adc
shlb
decl
outsl
js
rcr
xchg
fidivrs
mov
sub
adc
aas
pop
lock
inc
movsb
add
cmpsl
shll
push
lret
xor
sub
mov
push
inc
dec
loop
ljmp
dec
mov
push
jo
push
or
jl
lock
ljmp
cld
cld
clc
xchg
lcall
xor
int3
mov
pop
lods
jle
xor
out
mov
neg
std
ljmp
or
sub
fisttpl
inc
mov
outsb
cmpsb
pop
ret
or
out
adc
fwait
pop
arpl
orl
mov
insb
or
dec
jp
mov
jg
sbb
jno
and
xor
mov
lods
dec
pop
sbb
ljmp
pop
outsl
cmp
stos
dec
lods
arpl
xchg
sub
mov
decl
cli
xor
cmp
cmp
out
movsb
test
add
test
inc
and
scas
and
pop
fcompp
testb
mov
data16
jecxz
sbb
adc
loope
outsb
or
push
bound
pop
cli
adc
outsl
cmc
call
push
loop
xchg
fs
icebp
enter
stos
stos
cmpsl
sbb
ljmp
pop
ss
repz
xchg
ds
push
fisubl
pop
out
pop
out
mov
add
push
aaa
or
int
push
cltd
sbb
ljmp
std
inc
lahf
fsubr
data16
scas
out
mov
pop
es
dec
xor
lds
mov
cmp
leave
sub
mov
mov
jmp
scas
sbb
imul
mov
ret
aam
jg
ljmp
mov
push
and
mov
pop
fs
das
test
ljmp
insb
push
aad
sbb
push
test
lods
xorb
out
and
or
lds
aam
jmp
dec
inc
dec
sarl
mov
movsb
outsl
adc
out
icebp
inc
xlat
and
fldenv
mov
out
cmpsl
pushf
shl
cmp
xor
inc
fildll
and
les
lods
cltd
out
fcoml
int
bound
loope
sub
fdivrl
cmc
mov
inc
mov
fucomi
jns
cmc
insl
aad
ljmp
shr
sahf
ljmp
xchg
mov
dec
mov
fildl
cltd
inc
mov
sbb
jle
inc
sub
rcrb
add
loop
aam
mov
fsubr
std
aaa
ffreep
mov
cmp
xchg
mov
inc
dec
mov
pop
xor
xor
dec
int3
mov
repnz
pusha
dec
dec
sub
out
js
lcall
xchg
mov
or
xchg
outsb
mov
lods
push
sbb
out
out
incl
push
xchg
mov
adc
mov
leave
pushf
movsl
adc
test
pushl
leave
jmp
ljmp
push
stc
scas
call
push
repz
sbb
test
jmp
pop
push
sbb
cltd
pop
nop
xchg
mov
adc
add
mov
call
cmpsb
popa
xchg
repz
es
pop
mov
test
pop
pop
xor
mov
lods
mov
jg
stos
xchg
dec
aas
and
aad
dec
push
movl
xchg
pusha
cmp
imul
stc
jns
dec
mov
in
decl
inc
outsl
ss
xor
out
insl
xchg
mov
push
mov
decl
fwait
pop
pop
cmp
inc
or
daa
andb
jl
mov
push
push
xor
dec
mov
call
decl
repz
test
cs
pusha
xor
inc
test
bound
xlat
pushl
cmpb
mov
test
jb
aaa
cltd
fsts
inc
cltd
or
ljmp
dec
xchg
loopne
or
shl
inc
shl
mov
or
push
pushl
test
shlb
pushf
jne
sbbb
sahf
inc
cs
das
or
mov
and
cs
jle
cld
mov
loop
push
mov
cmp
mov
mov
inc
sar
adc
xor
mov
xchg
ds
sub
popa
test
cmp
xlat
scas
jns,pt
loop
das
mov
xchg
in
xchg
clc
add
aad
mov
shlb
out
and
mov
push
pop
pop
js
and
fidivrl
dec
add
jmp
pop
mov
pusha
jg
hlt
rorb
add
arpl
ljmp
int3
xchg
adcb
mov
mov
fnstsw
mov
fstpt
mov
sub
sub
test
rcrl
movsl
out
pusha
add
daa
mov
xchg
add
mov
jmp
mov
arpl
cs
jns
or
lcall
das
or
jo
pop
jge
out
sbb
call
icebp
pop
clc
mov
or
out
sub
xor
pop
fwait
mov
jno
pop
or
cmp
jg
mov
das
daa
xchg
push
data16
or
pop
bound
mov
popl
mov
jg
outsl
cmc
movsb
add
and
jle
test
or
push
incl
leave
push
out
or
mov
mov
std
xchg
xor
inc
in
mov
inc
mov
in
popf
fs
sahf
fdivs
sbb
inc
xorl
sbb
pushf
ret
fldenv
daa
and
lcall
pavgb
fldt
scas
mov
push
jmp
pop
mov
xor
subb
jg
xor
dec
adc
repz
lods
pop
sbb
pop
push
xchg
iret
inc
sbb
decl
test
repz
pop
testb
ss
ret
or
cmp
xor
xchg
pop
inc
cmp
ljmp
sub
dec
cltd
rcl
nop
and
push
jg
lcall
push
inc
mov
insl
scas
nop
sbb
out
fldl
mov
popf
sub
add
mov
ror
add
add
test
add
fisttps
or
cmpsl
daa
scas
jmp
add
sub
jno
jge
sbb
stc
mov
dec
xchg
aad
mov
cli
fcoml
mov
jnp
incl
call
mov
scas
testl
inc
push
sar
push
mov
test
push
lds
pop
jg
jmp
mul
and
mov
popf
fistps
push
shlb
mov
lcall
rol
shrb
jne
dec
dec
mov
std
scas
lret
outsb
es
ds
ficoms
das
icebp
aaa
inc
pop
mov
inc
hlt
sub
and
sti
mov
lcall
insl
jb
mov
pop
jmp
push
cs
lcall
pushf
inc
jmp
push
aaa
sbb
mov
cwtl
sub
popf
stc
enter
nop
or
movsl
mov
jns
std
outsl
test
push
mov
xchg
inc
sbb
outsl
cld
jmp
decl
pop
ds
divb
cmp
push
lds
pop
jp
incl
xchg
xchg
jge
inc
idivl
sbb
adc
ret
mov
mov
jg
decl
jp
pop
or
sub
inc
or
fs
pop
adc
inc
gs
push
dec
sbb
sbb
test
fidivl
jae
push
push
lret
push
arpl
dec
mov
andl
sub
jnp
test
repz
mov
movsl
xlat
test
fldt
addb
and
fnstenv
mov
nop
insb
sarl
sbb
lcall
push
iret
in
and
out
lea
push
ret
push
shlb
test
add
rolb
inc
dec
in
dec
icebp
lcall
lods
push
stc
push
adc
pop
call
xlat
ss
dec
cmp
xchg
lock
imul
adc
sar
lcall
mov
int3
inc
xchg
sbb
cmc
test
lds
adc
push
gs
ss
adc
add
insb
fcompl
sbb
and
fmul
pop
call
clc
dec
or
xorl
jns
fisubs
xlat
add
sub
mov
sub
xor
jmp
ja
mov
mov
or
mov
lret
jmp
ds
out
xor
ljmp
xor
adc
pop
icebp
arpl
add
fcomip
mov
xor
cmp
xlat
mov
out
out
pop
mov
fsts
rcl
js
pushl
clc
imul
popf
ljmp
dec
popa
add
int
xor
sbbb
sbb
pop
push
hlt
pop
test
sub
loope
das
orb
jae
mov
sub
shr
lock
jmp
daa
fs
aam
pop
jmp
pushf
dec
sbb
imul
ljmp
out
mov
int
sub
mov
lcall
rcrl
jg
ljmp
nop
fdivrl
sahf
xchg
cmp
cwtl
mov
aas
jge
inc
mov
imul
cmp
daa
lock
xchg
pop
jbe
fnstsw
ljmp
std
iret
pusha
mov
xor
popl
xor
adc
lea
xor
jmp
mov
push
orl
icebp
and
push
pop
adc
inc
cmove
dec
shrl
xor
jg
dec
stc
mov
sbb
insl
hlt
xchg
push
mov
xor
call
fildl
gs
jo
test
xor
cmp
mov
aad
incl
insb
pop
xor
mov
adc
movsb
add
xor
pop
mov
mov
mov
jno
sar
lods
xor
mov
jg
mov
pushf
adc
repnz
icebp
inc
mov
call
fldenv
ljmp
dec
inc
cld
push
cld
pop
test
cs
jae
mov
incl
hlt
or
shr
pop
repz
addr16
inc
sarl
xor
sub
in
jno
push
add
data16
mov
repz
notl
ds
mov
or
popa
icebp
jg
jnp
idiv
jb
clc
mov
jmp
sbb
push
jg
icebp
xchg
lods
shl
ljmp
clc
ljmp
int
xor
sbb
xor
sub
rolb
xchg
stos
push
jnp
pushf
mov
call
sub
je
sahf
es
ss
sub
cli
dec
cmp
inc
xchg
xlat
adc
or
jle
int
in
lds
popf
scas
into
int
jbe
decl
cld
outsl
repz
and
fistps
mov
jo
scas
push
test
xchg
bound
jg
incl
inc
cmp
movsl
add
add
ljmp
bndstx
incl
pop
sub
or
je
rorl
js
mov
jg
push
add
xor
and
sub
clc
fcmovne
call
adc
dec
inc
dec
jns
add
popa
xchg
lahf
jne
jmp
pushl
mov
imul
es
lcall
ret
mov
mov
ljmp
push
inc
add
sbb
pop
sbb
push
xchg
mov
sbbb
aas
outsb
xchg
sub
push
cld
xchg
mov
loopne
shrb
ret
iret
in
lret
popf
mov
mov
roll
fisttpl
jecxz
lcall
cs
cmp
andl
and
inc
sbb
xlat
dec
mov
mov
xchg
mov
dec
sar
jmp
xor
push
lea
rcl
aad
add
mov
pop
cli
push
mov
jge
dec
jg
jecxz
dec
decl
add
rcrl
adc
rcrl
inc
lods
or
or
push
dec
test
testb
xchg
addl
int3
scas
mov
movsb
jnp
jmp
call
add
popa
sbb
in
sbb
call
lods
mulb
cmp
in
push
test
std
mov
stos
cs
fnsave
xchg
or
cmp
pop
or
push
jb
mov
push
sbb
xor
mov
cmp
int3
inc
aam
adcb
and
mov
ret
mov
cmpsl
xor
popa
sbb
dec
stos
xchg
fs
std
call
nop
sub
xor
test
lds
sub
loope
andl
add
dec
mov
jne
pop
and
sbb
jg
cmpl
xchg
add
mov
and
in
jmp
out
mov
xchg
cmpsl
xor
in
stos
jg
xchg
fildl
cmp
mov
push
insl
stos
stos
imul
xchg
jns
pop
outsl
mov
pop
cwtl
adc
push
add
int
inc
add
call
cli
jo
movsb
jno
pop
xchg
mov
push
cmp
cmpsb
lods
lahf
and
andl
fstpt
in
add
subb
and
je
mov
aam
decl
mov
gs
testb
adc
data16
gs
ljmp
ret
add
lock
ja
pop
bound
push
jecxz
filds
xchg
push
je
int3
lret
fnstsw
lcall
out
inc
loope
pop
fistps
add
out
mov
or
call
jmp
push
xchg
mov
pop
pusha
pop
mov
stc
das
jle
aam
jne
pusha
clc
pop
add
inc
bound
inc
int3
dec
cmp
mov
pop
lret
jb
imul
mov
or
fadd
add
imul
decl
adc
sub
sbb
sti
cmp
pop
jnp
lds
incl
adc
xchg
rcrb
inc
lcall
add
push
fmull
arpl
lcall
test
or
test
in
es
pop
out
xchg
movsb
inc
xorb
lcall
rolb
push
mov
js
and
clc
mov
cld
incl
cs
lcall
cld
adc
mov
loop
cli
jg
dec
pop
fistpll
jp
xor
test
sub
and
mov
lahf
sbb
pop
stos
xor
push
decl
out
leave
test
cltd
xchg
mov
lea
repz
inc
incl
and
jo
add
or
xlat
mov
test
cmp
clc
dec
daa
dec
pop
mov
mov
nop
mov
mov
jg
jecxz
movsl
shll
cmpsb
testl
ljmp
xchg
cmp
mov
cmpsb
cmp
hlt
in
lahf
cli
cld
scas
test
jl
popa
lock
jecxz
ljmp
xchg
pop
sub
mov
fstps
addl
and
lcall
jb
in
andl
mov
pop
sbb
dec
xor
xor
mov
sub
lcall
jno
push
ljmp
mov
adc
insl
icebp
mov
clc
popf
inc
xor
dec
xor
mov
gs
shll
adc
pushf
insl
lret
cli
sarl
pop
mov
mov
cmc
mov
sub
pushl
adc
popf
xlat
ret
cmp
lahf
push
outsb
or
sbb
sbb
call
scas
lret
aad
xor
stc
jge
xor
testb
loop
lcall
jno
sub
adc
mov
loop
jl
js
jne
test
xchg
movsl
pushl
das
pop
outsl
mov
jl
mov
rolb
negl
adc
lcall
or
add
pusha
icebp
cwtl
pop
sti
dec
dec
push
xchg
add
arpl
sbb
stc
mov
jns
cmp
sbb
sahf
jl
adc
fstl
and
rclb
jg
lock
decl
rcrb
loope
es
or
push
xchg
adc
xor
jbe
cltd
incl
or
pop
data16
pop
clc
jns
shl
loope
cs
dec
push
and
call
xchg
mov
jnp
push
and
lds
xchg
xchg
ljmp
out
clc
ljmp
fisttpl
mov
push
jl
pop
div
xchg
inc
adc
test
jmp
nop
adc
xor
inc
bound
xchg
push
scas
pop
pop
pop
repz
idiv
ljmp
add
or
or
jbe
jmp
push
jmp
sbb
xchg
add
push
decl
inc
push
lret
xlat
mov
iret
pop
idivl
in
mov
lret
mov
lock
mov
and
shrb
dec
xchg
add
or
cmc
xchg
shl
sahf
repnz
mov
out
inc
lea
and
clc
inc
pop
clc
out
dec
inc
loope
hlt
faddl
sbb
movsb
add
sbbb
cmp
aam
adc
enter
insb
mov
decl
mov
out
mov
inc
call
fs
test
pop
loopne
adc
outsb
cmpsl
sbb
mov
xchg
incl
aad
adc
mov
mov
pop
xchg
mov
inc
leave
cld
fbstp
add
cmp
fucomp
or
bound
xor
add
xor
ret
icebp
pop
adc
dec
call
outsl
leave
xchg
dec
es
xor
push
pop
adc
pop
and
sub
mov
cmp
clc
call
fmul
mov
test
push
push
nop
adc
out
into
shl
lret
sbb
lcall
mov
or
mov
mov
pop
dec
lea
and
mov
test
xchg
lods
mov
xor
jne
in
cld
jmp
dec
ret
testl
add
cmp
lock
das
movsb
stos
nop
test
aas
icebp
outsl
jg
outsb
lock
nop
mov
xor
pop
fmull
cmpsb
xor
inc
mov
incl
push
mov
and
xorb
and
xor
incl
jnp
mov
sub
adc
frstor
in
repz
xor
call
cli
cmc
inc
loopne
dec
mov
js,pt
test
sti
in
dec
xor
mov
insl
add
test
add
shrl
xchg
pop
push
dec
jbe
rorb
call
push
or
jl
push
cmpb
push
ret
push
and
lret
mov
push
ljmp
mov
push
jg
pop
mov
push
pop
outsl
fistpll
stos
sbb
push
iret
mov
or
mov
out
xor
std
xchg
ljmp
add
js
adc
je
je
lret
push
sbbb
fistps
cmp
gs
sar
jg
mov
jl
negl
or
and
incl
daa
shrl
aas
into
addr16
adc
pushl
clc
jae
sbb
sbb
xor
nop
inc
les
loope
mov
push
mov
dec
mov
mov
xor
jg
mov
out
scas
xor
repnz
int
mov
mov
sub
and
jno
sub
popa
andb
loope
nop
xchg
mov
cmp
inc
std
push
insl
mov
test
xchg
lds
dec
adc
mov
and
xchg
xor
pop
cmpsl
push
aas
jmp
mov
fistps
push
test
cli
fsubr
dec
pop
rcl
shrl
ljmp
sbb
loope
cwtl
clc
loopne
mov
jbe
mov
push
cwtl
mov
xor
cmpsl
das
adc
pop
call
filds
mov
and
leave
push
jnp
xor
inc
pop
fld
pop
xchg
aaa
clc
mov
pushf
pop
loope
add
or
cmc
mov
call
mov
mov
lock
addr16
sub
loop
addl
inc
cwtl
inc
aaa
int
inc
mov
sbb
leave
fistpl
cltd
clc
add
mov
mov
lret
cmp
cltd
ds
inc
out
ljmp
lcall
pop
mov
mov
xchg
ds
sub
and
cmp
rol
inc
mov
cli
pop
cli
xor
sub
shl
xlat
mov
mov
call
pushf
jnp
cltd
mov
mov
movsl
sbb
mov
cmc
inc
jp
inc
fisubrl
and
fdivs
leave
pushf
dec
mov
bound
ret
push
std
xor
cmp
add
jp
pop
and
push
andb
js
jns
and
sbb
test
sbb
lahf
xor
hlt
pop
ret
movsb
pop
inc
pusha
dec
mov
call
fstl
sub
insb
mov
pop
jecxz
pushf
nop
das
pop
loop
lahf
aad
popf
or
jg
xchg
jg
dec
fcmovnb
js
mov
hlt
nop
pop
repz
shl
cmpsl
xor
std
mov
pop
dec
sarb
imull
push
inc
cmp
fst
incl
ljmp
jl
cltd
and
pop
push
out
inc
mov
mov
shlb
adc
jp
mov
mov
stc
dec
out
dec
mov
lock
add
cld
call
dec
dec
sub
ljmp
jb
dec
test
ret
mov
jmp
mov
lcall
push
sub
cmc
sbb
je
test
xor
repnz
loop
mov
lods
les
add
insb
cmpsb
in
or
outsl
push
cli
rolb
adc
movsb
mov
bts
decl
sbb
push
dec
in
rcrb
adc
cs
repz
mov
mov
ljmp
lock
cltd
push
xchg
je
sub
mov
fsubrs
jecxz
inc
decl
bound
mov
cmpsl
in
fldl2e
mov
sbb
xchg
outsb
sbb
and
mov
loope
mov
inc
sarb
adc
push
test
je
in
cld
int
fucomip
pushl
iret
les
sub
sarl
jge
mov
stos
aaa
mov
loopne
cli
sbb
xor
sub
aad
mov
loop
mov
cltd
js
imul
fadds
lret
xor
in
pop
mov
inc
decl
repz
mov
cmp
mov
push
decl
std
clc
hlt
xor
fcmovbe
xchg
loope
push
jmp
out
inc
jl
jg
cmpsl
sbb
inc
lods
cmp
mov
movsl
xchg
adc
clc
lcall
test
arpl
pop
sub
outsb
test
das
jb
rcrl
sub
xchg
push
stos
bound
sar
pop
pop
cmp
mov
sti
cmp
les
lock
mov
push
or
stc
adc
cli
dec
ja
call
jl
lods
add
fistpll
sub
xchg
rorl
insb
fistpll
sar
mov
test
sbb
lcall
cli
mov
mov
mov
push
push
stos
xchg
sub
sub
mov
inc
mov
jp
jp
repnz
add
stos
sub
mov
movsl
xor
jl
add
movsl
inc
push
enter
jg
mov
xchg
fcoml
pop
xor
divb
mov
and
decl
pop
mov
stc
xchg
sbb
or
in
or
add
pushl
les
fprem1
cmp
lea
adc
mov
out
pushw
and
mov
mov
jg
loop
decl
jecxz,pt
adc
adc
js
xchg
das
call
call
add
or
ret
mov
nop
mov
outsb
jne
inc
pushf
in
lea
icebp
inc
stc
cmp
cmp
inc
enter
es
loop
lcall
mov
mov
fsubr
rclb
cwtl
mov
jge
push
out
lea
mov
sarl
addb
and
incl
std
inc
pop
std
xchg
sbb
and
jl
dec
and
or
mov
test
and
andl
jle
call
loope
loop
js
mov
xor
out
call
add
cmp
rcrl
mov
mov
inc
sub
out
fidivrs
mov
push
or
addb
call
sarb
xorb
xor
mov
std
stos
push
inc
fistps
push
insl
test
add
sbb
imulb
int3
jg
test
pop
aad
xor
aaa
lea
xor
mov
or
sbb
jg
daa
xor
subb
cmp
mov
sub
test
test
mov
scas
mov
mov
rcl
mov
and
in
daa
fstl
outsl
adcl
ljmp
lock
xor
cmc
xchg
jle
les
mov
adc
loop
lods
dec
and
sarl
dec
add
sub
fucomip
jnp
inc
loope
imul
in
enter
push
inc
xchg
dec
jmp
sahf
dec
ljmp
icebp
aad
and
lea
cmp
outsb
ljmp
add
sahf
adc
xchg
sbb
xchg
xor
xchg
pop
loop
ficomps
mov
negl
or
mov
cli
outsb
sbb
sub
imul
sti
popf
jg
cli
jmp
sub
in
std
and
pop
xor
sub
jecxz
mov
add
pushf
cs
hlt
lods
clc
adc
repz
out
jl,pt
clc
test
lgs
outsb
pop
push
ret
pop
pop
dec
adc
jp
lds
std
mov
lods
movsl
mov
rcl
xor
adc
cli
ljmp
dec
pop
lret
push
and
aam
test
in
mov
jae
jmp
sbb
sbb
roll
int
lret
jmp
cld
call
cmp
ljmp
and
mov
add
mov
dec
sbb
incl
pushf
pop
addl
shrl
dec
xchg
xchg
jl
jl
mov
fsubrl
hlt
lcall
gs
ds
dec
imul
loopne
mov
es
jge
shl
ss
call
xchg
insl
push
enter
dec
ret
loope
mov
xchg
push
sub
inc
jg
incl
icebp
mov
mov
negl
xchg
ljmp
data16
mov
aaa
sbb
mov
scas
xorl
cmp
lock
jg
mov
pusha
shrl
xor
mov
scas
mov
bound
push
mov
loop
mov
jmp
ja
ljmp
in
jmp
sub
jmp
aam
mov
adc
aad
movsl
sub
xchg
mulb
or
ja
sbb
std
add
jb
in
dec
pushl
popf
add
jno
and
cmp
jnp
pop
fwait
cmc
js
adc
jae
js
loopne
jg
outsb
jmp
scas
orb
push
pop
jecxz
sub
pop
das
mov
cld
roll
add
btc
out
or
jmp
cmp
and
sub
pop
mov
ret
jg
lcall
in
pop
addb
inc
popf
not
jmp
jg
sti
pushl
and
push
push
jecxz
outsb
out
add
pushf
sub
push
fldenv
sub
sbb
push
cli
loop
cld
fucomp
pusha
xchg
xor
sbb
ljmp
push
insb
decl
xchg
mov
call
sbb
push
ss
mov
fbld
cli
jo
and
ljmp
orl
pop
sub
ret
pop
add
adc
pop
adc
push
das
test
aad
pushl
rcl
mov
fwait
cmpb
fstpl
jecxz
loop
sub
cmpsl
ret
cmp
shrl
cld
call
adc
stc
mov
aam
icebp
hlt
sbb
cmp
xorl
incl
push
cli
stos
test
sub
mov
addl
mov
jl
pop
sbb
jne
stc
xchg
aam
fimuls
mov
das
cmc
in
jbe
jl
cmpsb
enter
jl
std
jle
call
scas
aad
cld
and
push
outsb
fistl
jne
xor
decl
sub
cld
inc
lods
shll
dec
stos
xchg
sbb
mov
add
mov
popl
push
jg
xchg
cli
incl
and
test
stc
xchg
xchg
mov
lock
sbb
sub
incl
jg
xchg
mov
sub
int3
out
ss
xor
jbe
out
cmp
ljmp
js
popf
shlb
imul
imul
xor
je
cltd
out
pop
test
call
loop
cld
call
ja
pop
inc
outsl
or
cld
stc
shll
decl
pop
or
mull
inc
cs
push
cmp
test
push
mov
test
rorb
std
pop
jno
addr16
mov
out
mov
rol
test
inc
lea
or
mov
ja
pusha
clc
sarb
lcall
mov
in
push
pop
stos
mov
fs
adc
testb
ljmp
xchg
push
jo
hlt
sti
orb
clc
call
out
and
and
mov
sar
inc
sbb
sbb
jmp
rcrb
inc
test
dec
mov
push
pushl
jp
xchg
mov
sti
ds
jno
test
addl
call
mov
jle
pushl
outsl
das
or
enter
xchg
inc
out
popa
inc
wrmsr
lcall
cld
ljmp
cmc
mov
sahf
pop
lds
sub
inc
ret
repz
pop
outsb
std
sti
push
mov
mov
mov
jne
sub
jl
rorb
out
push
pop
mov
sub
pop
pop
mov
loop
cmp
jg
decl
adc
movb
sbb
push
xor
ljmp
insb
cmpl
je
xor
das
add
mov
test
xor
clc
ss
inc
dec
xchg
ret
arpl
hlt
push
push
pop
data16
out
sub
in
in
idiv
jg
push
in
sub
outsl
in
rol
lods
int3
cltd
add
fstpl
stc
inc
movsb
or
stos
xchg
int3
push
aam
cltd
cmp
arpl
loop
jmp
mov
mov
xorb
and
pop
mov
mov
setb
jg
mov
test
pushf
mov
mov
dec
xchg
testb
imul
ret
xchg
mov
mull
mov
adc
call
inc
stos
out
mov
or
add
in
fnsave
push
lcall
mov
mov
scas
iret
sarb
mov
mov
lock
mov
mov
and
xor
sbb
xchg
clc
push
inc
dec
pop
xchg
jp
cmpsl
ds
sbb
ljmp
add
or
shlb
outsb
pop
in
les
adc
xchg
jge
xchg
mov
xchg
loopne
xor
popf
lret
std
incl
imul
ds
ja
mov
in
frstor
add
xor
jae
pushf
cmpb
decl
std
mov
xchg
push
pop
mov
je
out
mov
pushl
or
dec
pop
jmp
inc
cld
jne
lds
xor
pop
mov
xor
out
popl
push
push
sub
fmulp
sbb
jnp
into
push
cmp
ljmp
icebp
lea
jno
call
ja
inc
aad
adc
rcrl
in
aam
pop
call
test
shl
xor
or
jnp
loop
aaa
mov
inc
push
adc
mov
inc
ss
outsl
push
pop
pop
add
adc
pushf
mov
cltd
push
inc
mov
or
jp
pop
jae
fstp
shll
sub
xor
cmp
adc
stc
cld
and
divl
decl
add
cmp
ja
ret
sarb
or
aaa
dec
and
ljmp
movsl
lds
div
push
mov
fnstcw
cwtl
insl
dec
cmp
push
mov
das
mov
lods
inc
testl
gs
xchg
das
pop
loop
and
push
mov
pop
pop
in
aaa
jbe
loop
mov
lcall
incb
fiaddl
jg
fsubp
push
pusha
arpl
cltd
leave
jbe
cmp
mov
adc
data16
test
push
xlat
mov
ljmp
cld
xor
mov
lcall
jge
jo
addr16
xor
jmp
jp
mov
xor
sub
lock
push
loope
mov
sbb
test
xor
pop
cltd
xchg
jmp
pop
into
mov
imul
fidivrl
add
sti
adc
and
popf
mov
xor
push
pushl
dec
dec
cmc
lcall
test
adc
sub
imul
scas
enter
xor
outsl
bound
mov
dec
mov
mov
sub
mov
stos
pop
std
jmp
into
xor
lret
sub
cmp
jg
cmp
cld
subb
dec
xor
inc
imul
lcall
lock
out
and
test
xor
stos
xchg
mov
jp
les
insb
icebp
mov
cmp
repnz
push
fucomip
mov
xchg
out
lock
mov
or
cmpsl
adc
incl
sbb
lahf
cltd
mov
mov
andl
call
xchg
fsubl
in
sub
jno
sti
lds
jnp
icebp
lea
cmp
stos
pop
ljmp
movsb
jg
pop
rep
ja
aaa
jmp
push
aas
jp
repz
shr
shl
adc
bound
call
mov
lock
ljmp
dec
and
addr16
sbb
repz
aas
pop
std
and
arpl
in
push
add
jbe
push
inc
jb
push
mov
jmp
les
enterw
mov
ret
decl
ss
push
inc
movsl
lcall
and
pop
cmc
call
dec
mov
push
sbb
mov
adc
insl
arpl
xchg
clc
inc
out
movsl
cmpsb
lcall
push
into
mov
inc
push
pop
std
jb
sbb
decl
cmc
movntq
enter
bound
out
arpl
fucomip
call
mov
cmp
das
or
ds
inc
mov
jo
pop
mov
xchg
sub
xchg
pop
and
in
pop
hlt
jg
loopne
push
mov
daa
dec
push
and
imul
clc
ljmp
lahf
out
lods
inc
inc
inc
lret
xor
xor
decl
test
mov
mov
inc
pop
in
lea
test
das
std
imul
mov
les
inc
lret
stc
push
es
pushl
call
mov
je
movsl
mov
fcomps
mov
dec
notl
mov
mov
hlt
inc
cltd
js
mov
mov
and
jnp
mov
pushl
jle
hlt
fadds
je
jmp
jno
xchg
xchg
mov
xor
cmp
dec
ss
or
lahf
add
movsl
iret
pop
xchg
add
lods
fists
mov
sbb
sub
xor
arpl
fucomip
test
xlat
loopne
sub
inc
xchg
repz
scas
or
xchg
ud0
decl
sbb
sbb
add
cwtl
dec
fwait
out
jne
ds
loop
xor
cltd
mov
incl
push
outsl
or
ret
test
sub
mov
add
pushl
add
andb
or
or
insl
lcall
xchg
push
popa
and
ret
hlt
test
mov
adc
out
lret
es
or
inc
jno
xor
lods
in
pop
inc
mov
cmp
mov
repz
sti
inc
inc
xlat
imul
ljmp
xchg
mov
adc
dec
mov
mov
lods
mov
ljmp
ja
jl
or
fcompl
pop
das
inc
mov
aad
aad
inc
dec
add
sbb
jle
xorl
roll
jb
ljmp
pop
call
pop
adc
push
adc
mov
cwtl
mov
out
fucomip
mov
or
int3
push
mov
sbb
mov
orb
push
pushl
call
mov
cmpsb
jb
stc
jne
fidivs
loop
loopne
pop
icebp
inc
icebp
sti
jg
aaa
sbb
mov
adc
into
je
xor
popa
and
lods
add
shrb
or
push
jg
stos
popa
lret
fcomip
pop
out
dec
mov
xchg
add
push
inc
mov
jmp
and
outsb
roll
dec
stos
test
movsb
arpl
stc
mov
int
pop
cmp
out
sbbl
push
cmp
push
adc
mov
subb
mov
scas
mov
sbbb
loop
cmp
or
test
or
lcall
repz
decl
cmpsl
pop
shll
movsl
scas
sub
adc
push
mov
ret
clc
inc
enter
sbb
shll
add
das
adc
test
pop
xchg
sbb
lcall
sahf
mov
push
xor
mov
ss
push
fisubrl
pop
push
pusha
subl
jo
packssdw
or
and
shrb
jge
jno
mov
jg
call
cmp
push
jne
shl
inc
fwait
sub
gs
cmpsb
xchg
cmp
hlt
add
lods
test
mov
jnp
imul
cmp
push
arpl
jg
cs
inc
test
cbtw
xchg
sub
mov
ficompl
outsl
xchg
ljmp
jo
testb
fidivrs
add
mov
mov
test
cmc
dec
in
movsb
mov
mov
sti
in
dec
and
sub
xlat
pop
push
popa
clc
pop
add
call
jecxz
mov
adc
sbb
mov
popfw
arpl
lcall
sbb
pop
mov
push
in
sub
hlt
push
ret
das
ljmp
mov
cwtl
loop
xlat
mov
addr16
aad
mov
push
push
pop
pop
stos
adc
aad
push
aam
push
dec
pop
jo
out
inc
lahf
mov
jne
jg
outsl
or
inc
out
cmc
adc
ds
aam
push
ljmp
mov
mov
xor
mov
adc
call
adc
jns
push
shrl
flds
jne
sbb
test
inc
adc
adc
adcb
sub
icebp
or
jbe
mov
retw
lods
or
ljmp
out
aaa
lahf
xchg
repnz
push
mov
mov
jnp
sti
repnz
xchg
int3
xchg
clc
add
pop
mov
arpl
scas
std
xchg
push
sar
jno
push
xchg
lods
mov
hlt
or
dec
sbb
lock
adc
jns
cmp
push
call
fldl
stc
lahf
aad
pop
iret
stos
or
cmp
lods
lods
aam
adc
pop
popf
adc
in
sub
std
jae
mov
pop
mov
int3
iret
adc
jge
pop
sbb
push
test
icebp
jle
call
cmp
xchg
jo
insl
fcmovu
sbb
push
adc
inc
mov
xchg
adc
sar
mov
adc
jg
mov
aad
mov
sarl
cltd
inc
mov
das
xchg
push
ret
sbb
movaps
das
icebp
jle
inc
and
pop
inc
sti
stos
dec
lock
mov
pop
pusha
int
sbb
pop
outsl
bound
sub
jp
lcall
insl
jne
imul
pushf
pop
cmpsl
in
mov
add
addr16
sarl
in
lcall
pop
xor
push
pop
mov
ja
push
sbb
jecxz
test
fwait
mov
add
mov
js
daa
outsl
cmp
test
aas
jb
pop
dec
adc
inc
xchg
push
sti
test
call
mov
dec
adc
loop
cmpsb
or
jmp
lods
inc
add
inc
stc
ret
mov
jle
inc
ja
in
and
stos
je
test
jle
pop
sub
pushf
and
call
mov
cli
cmp
cmc
add
mov
push
aad
ret
ljmp
add
stos
dec
mov
test
outsl
pop
jae
ret
fbstp
and
xchg
stc
xchg
sub
or
pop
cwtl
ret
fistpll
cld
add
lds
jmp
cmc
ljmp
in
cmp
jno
xlat
stos
pop
or
arpl
xchg
push
push
and
ljmp
cmpsl
push
rcl
sti
bound
lret
jae
mov
add
dec
addr16
xchg
pop
mov
in
sbbl
jns
insl
inc
loope
jne
cmp
pusha
mov
and
aad
in
lcall
cld
mov
or
pop
std
popf
insl
nop
mov
dec
jl
je
sub
nop
pop
orl
decl
xchg
pop
ffreep
aas
pop
inc
mov
icebp
inc
fstl
test
movsb
pop
push
movsl
xor
outsb
xlat
or
das
pop
adcl
xchg
fistps
cs
push
sub
call
icebp
dec
mov
lret
and
enter
aad
lods
pop
sbb
add
std
incl
pop
sahf
or
dec
faddl
pop
lods
mov
lods
inc
adc
xchg
or
and
dec
outsb
sub
add
bound
push
aaa
sub
decl
add
jno
rorl
pop
or
fwait
call
sahf
mov
mov
jmp
fcoml
leave
mov
jge
sub
xlat
cs
pop
pop
inc
mov
xor
cmc
rcl
les
cmp
out
decl
cld
cld
nop
sarb
jecxz
lea
pop
stos
popl
fwait
xchg
cld
xchg
cmc
push
fisttpl
movsb
xlat
insb
cmpsb
mov
add
cmpsl
adc
enter
cs
pop
adc
call
xor
or
das
and
sub
out
cmpsl
notl
imul
shll
stos
jg
lret
out
jno
loopne
sar
std
xchg
cmc
es
or
in
sbb
cmpsb
xor
stos
jmp
outsb
mov
adc
ja
es
rclb
cmpsb
sbb
fldl
jg
sbb
aaa
dec
cmp
adc
hlt
test
mov
xor
out
cmp
fists
clc
cltd
ljmp
jl
cmp
push
rorl
or
xlat
popf
ljmp
jmp
adc
jmp
js
ret
out
cmc
faddl
incl
mov
negb
jne
adc
mov
int
xor
test
decl
lcall
cmp
lods
stos
gs
lret
pop
loop
push
push
pop
pop
enter
adcb
mov
mov
cs
pop
loop
stos
nop
mov
ret
aaa
push
mov
daa
sti
ja
dec
scas
adc
xor
dec
popf
mov
incl
movsl
sub
lahf
imul
cmpsb
xchg
cs
jg
out
mov
mov
push
inc
ljmp
outsb
mov
das
or
out
mov
lea
mov
sub
scas
fucomip
in
in
mov
roll
mov
pop
pop
movsb
insl
scas
pop
mov
fstpl
jmp
rclb
jg
lea
cmc
push
sub
xor
or
call
pushf
lea
std
test
lods
aaa
mov
xor
xlat
lods
or
push
cld
out
aas
xorl
sub
inc
or
mov
jge
dec
movsb
jno
and
rcrl
fldt
pop
ror
sbb
mov
mov
cld
inc
add
test
ret
decl
ret
sub
cmc
push
sbb
inc
and
std
adc
push
add
push
inc
stos
out
mov
lret
scas
pushf
inc
ss
mov
mov
repz
pop
lods
addr16
ret
push
jecxz
inc
lret
mov
cmpsb
arpl
mov
std
fisubrs
das
push
sbb
jge
cmpsb
lock
mov
xor
daa
bound
dec
std
cmp
cmp
into
cmp
lods
mov
adc
adc
lcall
loopne
es
bound
js
scas
test
test
adc
sbb
cwtl
xchg
push
fucomip
pushl
inc
fcoml
adc
clc
pop
orl
pop
add
lds
jg
pushl
xchg
hlt
or
pushf
out
inc
stos
xchg
js
pusha
and
ret
cmp
nop
xor
or
mov
mov
cmp
push
pop
mov
push
and
or
adc
mov
sbb
std
jmp
mov
rcl
add
test
int
insb
shlb
xor
ljmp
sub
xlat
adc
loopne
loope
test
addr16
pop
dec
or
jg
rcr
push
push
push
push
aad
minps
mov
mov
jmp
inc
jp
repnz
pop
adc
loopne
jne
cmpsb
mov
ljmp
mov
pop
ljmp
inc
adc
xor
mov
mov
push
inc
xchg
inc
jbe
or
adc
dec
cli
cmp
icebp
xchg
fcmovne
jmp
call
mov
mov
mov
dec
bound
scas
adc
dec
ss
and
je
fsubr
sbb
cmc
loopne
pop
cmpsb
std
jg
in
add
sub
jp
out
arpl
jnp
inc
sahf
mov
out
xchg
movsl
mov
lcall
mov
notb
xchg
xor
xor
jp
out
cltd
mov
cmp
decl
loop
ljmp
adc
inc
fistpll
xor
jge
mov
pop
sbb
mov
dec
movsb
out
and
dec
inc
xor
inc
or
decl
mov
mov
jl
inc
leave
cmp
xor
inc
ret
stos
and
pop
loop
cmp
out
js
jmp
xchg
xchg
ret
mov
mov
dec
decb
xor
and
std
or
cmp
fisubs
ret
aas
inc
repz
pop
cld
lcall
aaa
les
cmp
sub
ret
subl
mov
call
call
sub
ja
push
dec
add
incl
data16
push
cwtl
pop
mov
mov
andb
sub
xor
sub
dec
and
sub
test
jmp
mov
cmp
js
and
fmull
cmp
test
adc
sbbb
add
fs
in
adc
pushl
mov
pop
adc
dec
clc
pop
negl
js
call
inc
mov
into
idivl
ret
ret
stos
sbb
mov
sbb
sysexit
in
push
dec
gs
outsl
inc
lds
ja
addb
mov
clc
cmp
pushl
repnz
movsl
push
dec
sbbb
jo
and
pop
cmpsl
jg
decl
adc
cmpsb
dec
pop
adc
ret
and
pushl
inc
das
sbb
loop
stos
arpl
sub
sar
mov
mov
hlt
xor
sub
dec
mov
mov
test
mov
mov
call
jg
dec
lods
std
xchg
mov
jl
mov
cmp
mov
dec
popf
xor
cld
ljmp
mov
out
insl
lret
xor
sub
stos
add
inc
rcrb
decl
mov
xor
pop
in
add
adc
adc
mov
pushl
inc
or
cmp
lret
les
mov
popf
das
jnp
je
lcall
loopne
and
xor
ret
adc
incl
cmp
push
rclb
cmp
mov
pop
mov
rcl
xor
leave
sbb
movsl
test
pop
test
in
add
push
test
xchg
jb
or
data16
and
enter
ljmp
cmp
xor
in
hlt
inc
sbb
sub
pop
mov
popf
enter
call
data16
fcmove
inc
stc
ljmp
inc
lea
negb
scas
in
pop
sub
jne
push
xchg
leave
pop
push
pop
mov
das
jo
clc
incl
cltd
push
stc
xchg
dec
and
and
or
and
cld
or
loop
jno
push
inc
in
das
shrb
loop
mov
jl
mov
lods
iret
int3
ds
shrb
cmp
push
mov
sbb
in
js
pusha
adc
pop
push
and
pushl
out
add
and
xchg
adc
xchg
dec
push
inc
in
ret
mov
pushl
movsb
sub
or
cs
xchg
xchg
out
xor
mov
cmp
cmp
jg
inc
call
jno
add
xor
arpl
lods
or
cmpsb
add
or
or
push
jg
dec
pop
adc
pop
xchg
mov
lock
xchg
cmp
and
ror
dec
aaa
movb
jg
pop
sbb
push
enter
int3
xchg
xchg
iret
fsubrl
ret
jb
cli
adc
call
inc
out
sbb
cmp
pusha
test
fildl
testb
or
xchg
in
mov
pop
jne
dec
cmpl
cmpsl
sarb
gs
adc
cmp
iret
push
dec
repnz
sub
or
decl
adcl
pop
push
mov
inc
out
push
mov
jge
mov
adc
lea
inc
push
cwtl
add
mov
int
mov
dec
neg
sarl
push
and
testl
push
cmp
lret
or
cmp
lods
nop
dec
mov
in
incl
out
mov
clc
push
push
fmul
scas
sbb
ds
push
fidivs
decl
inc
xor
jbe
cli
bound
pop
addb
jmp
mov
pop
scas
lret
push
sub
mov
cld
sub
sub
lcall
mov
push
les
mov
xchg
add
es
dec
std
xchg
clc
pop
inc
push
pop
cmpl
cmp
jmp
jne
mov
inc
adc
cmc
sarl
sub
push
mov
test
in
sbb
pushf
jg
pop
lods
inc
movsb
push
arpl
or
mov
push
adc
mov
call
incl
stos
clc
cs
inc
dec
mov
jp
adc
scas
xlat
mov
std
div
xchg
xchg
xchg
test
cld
or
push
jb
push
mov
xchg
popa
push
decl
je
xchg
daa
clc
adc
arpl
push
jns
test
push
imul
adcb
jns
repnz
and
push
jmp
sub
jg
stos
cmp
lret
push
dec
or
sti
adc
lret
cmpsl
cmp
push
xor
and
enter
ljmp
xor
insb
push
cmpl
xlat
test
nop
test
pop
in
call
push
cs
pop
and
adc
ret
std
sbb
mov
mov
jmp
ss
push
test
push
jmp
out
mov
daa
lods
insb
test
icebp
les
mov
xchg
sahf
shlb
dec
dec
lcall
ja
aas
or
int3
std
pushl
cmp
jg
je
cmc
jns
sub
hlt
or
out
xorl
and
mov
loop
mov
cmpsl
jg
jmp
add
repnz
mov
ret
fnstenv
ljmp
cld
jmp
int3
out
push
dec
mov
mov
cwtl
cld
cmc
push
adc
jo
push
pushl
sbb
add
xchg
sarl
mov
into
call
push
out
adc
dec
cwtl
dec
aam
repnz
aad
lret
mov
call
insb
popf
xlat
cmpsl
frstor
push
shl
fwait
loope
mov
pushl
pop
jno
jge
adc
dec
pop
and
negl
pop
inc
cmp
jl
mov
mov
adc
dec
inc
cltd
push
iret
mov
scas
out
sbb
rcll
or
mov
sarl
adc
data16
mov
mov
fimull
leave
out
add
aad
push
inc
or
lock
xor
add
pop
das
hlt
jmp
inc
jnp
scas
inc
pop
cld
push
repnz
addr16
aaa
add
inc
ljmp
out
push
out
cmp
loopne
jnp
xor
push
out
je
add
ss
jb
insb
ret
or
xlat
ljmp
je
ret
inc
jg
cmp
insl
adc
hlt
loope
jecxz
pop
loop
cmc
jmp
or
jl
mov
in
or
lds
and
inc
jg
xchg
sbb
aam
daa
stc
sbb
mov
cmpsb
cmp
inc
ljmp
inc
ljmp
pop
dec
lods
jmp
rcll
out
test
sti
and
pop
ss
out
stc
sub
push
mov
pop
dec
cmp
pushl
xchg
call
xor
xorl
scas
call
repz
cmc
arpl
addr16
sub
push
outsl
in
jmp
movsb
decl
dec
pop
shrl
and
insb
xchg
testl
adc
adcl
mov
clc
pushl
add
cwtl
leave
sub
xor
cmc
mov
nop
mov
call
cs
adc
into
call
pop
scas
mov
mov
aaa
fildll
sar
add
test
dec
ljmp
lock
call
js
xor
mov
adc
inc
pop
sub
jo
std
ljmp
jmp
out
and
int3
jecxz
push
cmc
decl
add
xor
xchg
sbb
outsl
sub
outsb
aam
aam
stos
iret
xor
arpl
in
jmp
cli
decl
int3
jmp
scas
pop
fnsave
cmp
loopne
in
aam
xchg
aas
comiss
mov
jne
popf
test
ret
cmp
cmp
lods
ljmp
incl
mov
lcall
imul
stos
data16
ret
xor
shrl
int3
lea
incl
sarl
cmc
pop
add
jg
fldl
mov
push
mov
add
mov
std
outsl
push
xor
mov
sbb
test
adc
pop
mov
xchg
mov
test
push
ror
out
mov
lods
in
jl
sub
xchg
sbbl
mov
jg
lods
leave
push
pusha
ss
jo
repnz
mov
mov
jecxz
pop
clc
call
inc
repnz
outsl
out
mov
dec
fistl
sarl
pop
in
fisttpl
mov
ds
jae
flds
sbb
fsubs
cli
addr16
inc
fwait
pop
call
adc
mov
outsb
push
cmp
add
mulb
add
cld
call
outsl
cwtl
push
ss
push
pop
cmpsl
ret
es
mov
cli
lcall
inc
dec
insb
popa
mov
jp
outsl
and
add
mov
stos
aad
xchg
test
pop
mov
call
jbe
test
aad
inc
xchg
aaa
nop
xchg
jg
shrl
movsb
adc
ror
or
das
lods
rcrb
decl
inc
int
pusha
dec
adc
rcrl
xchg
mov
or
hlt
in
arpl
outsl
mov
or
mov
mov
xlat
and
inc
push
cmp
pop
cli
inc
dec
ficoms
enter
jbe
test
nop
cli
nop
pop
and
xchg
jl
adc
rcl
or
repnz
lcall
cltd
stc
mov
outsl
rorb
test
fcomip
dec
lcall
js
lcall
std
movl
sbb
je
orb
ja
decl
fisttps
cmp
fcmovne
push
push
subb
cltd
pushf
mov
lds
pop
fidivs
ljmp
hlt
push
shlb
mov
sub
add
add
push
movsl
add
decb
sar
adc
lcall
xor
stc
jae
out
or
push
fistps
cmp
pop
call
xlat
mov
xor
popf
sub
inc
or
adc
adc
and
add
push
mov
sub
incl
cmc
es
fimull
popa
xchg
mov
out
xor
mov
stos
cmpl
jge
cltd
ljmp
cmpsl
push
jae
add
and
lcall
jle
mov
int
clc
jmp
test
repz
mov
lods
adc
dec
subb
decl
stos
pop
mov
fcoml
shlb
ljmp
mov
inc
divl
adc
mov
or
jnp
mov
add
mov
ljmp
pop
sbb
test
mov
addr16
sbb
loopne
xchg
push
das
hlt
test
fwait
push
aad
or
fbld
ljmp
ds
pop
nop
jp
mov
and
not
jns
lods
push
int3
mov
or
movsl
in
mov
mov
into
mov
sub
cwtl
mov
decl
ds
pop
push
push
mov
and
out
push
pusha
sub
ss
vmovntps
out
scas
sbb
pop
cld
push
mov
or
jg
push
jns
call
incl
repz
bound
push
mov
call
xchg
pop
incl
mov
adc
push
arpl
les
add
incl
js
add
sbb
push
xor
in
mov
fisubl
mov
cmp
dec
sbb
aad
mov
or
shrl
ds
jg
xchg
or
imul
xchg
jl
loopne
repnz
push
jg
or
mov
imul
jno
flds
imul
lcall
push
pushl
cmp
rcl
movsb
enter
pop
lret
test
jbe
jne
sbb
lcall
popf
fsubr
adc
and
mov
cwtl
arpl
mov
and
and
mov
push
xchg
mov
ret
inc
hlt
fnstcw
inc
dec
std
jae
out
ret
cmp
jbe
or
mov
xor
jmp
icebp
mov
sbb
inc
mov
cmpl
mov
jns
adc
sub
cmp
int
out
outsl
je
mov
mov
jmp
sar
outsl
std
call
loopne
sbb
sbb
ja
pop
mov
add
push
pop
ljmp
mov
adc
mov
xchg
je
ljmp
loope
or
mov
mov
or
dec
shlb
stos
in
insl
arpl
jmp
cmp
pop
loopne
jle
xchg
iret
cmp
fucomip
lahf
jnp
out
lea
loopne
or
or
add
jbe
ds
xchg
mov
int3
je
incb
loopne
cmp
cmp
into
call
adc
xlat
js
lahf
push
stos
dec
or
movsb
dec
inc
add
mov
test
ljmp
sarl
cld
dec
call
cld
mov
sub
push
xor
int
incl
add
out
add
mov
cli
jl
dec
push
mov
and
jp
push
jmp
pop
aam
mov
mov
stos
mov
adc
fcmovnbe
inc
and
outsl
jecxz
mov
xchg
mov
test
pop
pop
mov
xor
test
inc
mov
mov
lcall
ret
testl
mov
adc
sub
in
inc
scas
mov
inc
jg
push
les
mov
scas
mov
call
mov
push
sbbb
hlt
mov
jl
pop
sub
sub
jno
stos
pop
int3
je
movsb
out
fdivrs
jmp
jmp
mov
cli
jmp
mov
or
push
mov
cli
adc
or
stos
pushl
push
sub
cs
and
ret
popf
mov
insl
cltd
ja
ret
push
lret
divps
sarl
gs
or
jecxz
adc
mov
mov
or
in
jae
inc
fwait
push
mov
fxch
sub
mov
mov
inc
mov
jo
loop
cmpsl
jg
cmp
pop
sbb
cmp
push
mov
dec
int3
cltd
cmp
fidivrl
pop
mov
mov
cmpsl
or
fsts
daa
mov
xor
mov
and
sub
scas
inc
pop
sub
adc
add
mov
or
and
fs
dec
pop
out
sbbb
mov
mov
icebp
fs
pop
add
jnp
jp
outsl
cld
jg
jl
in
fsts
out
popa
pop
pop
xor
xchg
mov
aaa
decl
repnz
cmp
push
sahf
addr16
mov
mov
addr16
repz
mov
mov
imul
outsl
xor
fptan
mov
pop
cltd
imul
hlt
cld
aaa
fsubrs
sahf
mov
mov
adc
inc
and
das
cld
das
cmc
jle
cwtl
inc
cmp
in
sub
enter
dec
int3
outsl
icebp
fucomip
and
adc
adc
inc
jecxz
es
cmp
incl
sub
push
add
fsubrp
insb
nop
xlat
add
mov
iret
push
dec
cmp
stos
ret
cmp
int
cltd
ficompl
movsl
dec
add
cmpsb
mov
or
jns
xor
sbb
pop
ret
mov
or
cli
movsl
xor
ljmp
xchg
lods
cmp
jp
sub
loope
mov
pop
push
xchg
xchg
sub
pusha
cwtl
out
pop
imul
ss
jecxz
and
aam
cmpsb
arpl
mov
sbb
ljmp
push
daa
and
ds
jne
sbb
inc
loopne
pop
mov
ljmp
pop
shlb
jp
or
sbb
inc
pop
rdpmc
sbb
dec
pop
xchg
cmp
or
lcall
pop
jbe
inc
mov
sub
xchg
bnd
pop
lcall
cld
jmp
push
xor
jbe
dec
mov
mov
stc
xlat
jmp
pop
mov
ss
in
mov
icebp
mov
lods
out
xor
sti
popa
les
dec
pop
cmpsb
loopne
sysexit
sbb
xchg
sub
dec
dec
cld
inc
push
fsubr
fidivrs
xor
lcall
and
hlt
shlb
out
cld
rcrb
mov
int
push
cmc
xor
inc
dec
icebp
ds
mov
push
adc
sahf
cltd
iret
sbb
cmpsb
sub
lcall
std
decl
std
fdivs
or
ja
loop
ret
fwait
outsl
loop
pop
mov
decb
imul
mov
cmpsl
ss
fnsave
xlat
out
loop
add
mov
je
pop
and
mov
lock
mov
iret
mov
mov
cmp
mov
lret
adc
addr16
xchg
scas
and
sub
sbb
ret
xor
scas
xlat
dec
in
pop
mov
fsubrs
inc
sbb
call
mov
sub
arpl
inc
mov
dec
inc
lahf
repz
daa
dec
inc
lods
xlat
fisttpll
mov
ljmp
insb
mov
ljmp
mov
out
sub
testb
stos
mov
iret
imul
add
lcall
scas
mov
adc
adc
inc
and
add
test
das
iret
lods
in
adc
pop
imul
jle
rorl
imull
cmp
call
es
les
mov
test
sbb
jl
cli
dec
mov
shrb
ljmp
mov
inc
mov
ds
sbb
out
pop
or
jne
sahf
fucom
adc
jmp
mull
cmpsb
jmp
cmc
sub
lock
jecxz
pop
shl
rcrb
mov
ljmp
jl
pushf
adc
test
rcrl
repz
lods
jecxz
sti
call
call
sub
mov
sbb
and
dec
popa
push
mov
dec
call
jg
stc
push
ljmp
out
cmp
jne
mov
push
fiadds
ret
cmpsb
pop
jecxz
mov
and
mov
xchg
decl
mov
xchg
test
aad
cli
sbb
add
jmp
jp
and
std
jmp
ss
fidivl
outsl
fnstsw
fucomip
pop
cli
lods
loope
adc
mov
ffree
sub
jo
ljmp
sub
sub
push
and
call
lea
cmp
adc
fbld
decl
push
mov
pop
mov
and
clc
add
fwait
test
mov
cltd
push
xchg
lret
pushf
incl
stc
cmp
js
scas
clc
or
xor
cmp
jmp
call
incl
data16
je
cltd
mov
sbbl
movsb
loope
cmp
pop
ret
xor
fs
stc
cld
mov
sbb
sub
pusha
sahf
mov
std
call
or
adc
mov
hlt
test
out
add
lcall
sub
xchg
pop
fwait
inc
dec
jne
test
addr16
jnp
movsb
popl
push
loopne
xor
btc
std
cmp
ret
push
inc
jnp
and
inc
imul
std
int3
ja,pn
je
int
insl
hlt
jg
out
fcompl
fadds
sbb
jmp
dec
or
outsb
jmp
fcomps
je
pop
cli
call
dec
sbb
fistpl
aad
mov
or
call
test
repnz
pop
pop
pop
adc
pop
jg
outsl
mov
dec
test
das
inc
xchg
inc
movsl
popa
sarb
mov
out
or
aam
addr16
and
and
das
inc
fnsave
icebp
pop
push
fsubl
jg
jmp
xchg
push
sbbl
xor
repnz
sub
jl
mov
jne
inc
daa
repz
jle
xor
dec
xor
nop
insb
fisttpl
out
jae
mov
andps
call
inc
inc
test
xorl
psrad
daa
jns
sub
into
push
jnp
xchg
xor
inc
lock
or
xchg
stos
adc
stos
cmovge
fsubl
pop
cltd
jae
ljmp
xchg
shrb
addr16
cmp
lods
mov
sbb
mov
out
xchg
lea
incl
pop
sub
adc
and
fiadds
stos
daa
jno
add
out
dec
sbb
cmp
dec
mov
insl
pop
jmp
stc
fisubrs
jne
js
popa
mov
inc
mov
inc
sbb
aad
mov
and
popf
inc
or
iret
jae
jmp
mov
jg
cwtl
and
dec
negl
pop
pop
loopne
in
sbb
pushl
dec
pop
add
sbbb
mov
pop
cmp
pop
call
stos
lds
std
pop
dec
cwtl
insl
aaa
jle
pushl
xor
jo
mov
sbb
call
pop
cld
movsl
imul
mov
scas
cmpsl
imul
mov
adc
dec
push
dec
xlat
stc
add
adc
and
cmp
jb
xlat
add
in
idiv
cmp
lods
dec
ljmp
mov
repz
mov
mov
lcall
jl
inc
nop
test
sbb
xchg
adc
dec
out
stos
pop
incl
cmpsb
repz
or
data16
data16
clc
addr16
call
jno
dec
popa
aas
shl
cmp
adc
mov
jno
push
sub
imul
mov
cmp
mov
leave
cmp
mov
cmp
mov
pop
std
incl
loope
not
jne
or
sub
inc
mov
cmpsb
inc
insb
push
int
pop
mov
ss
and
mov
dec
into
jge
dec
test
mov
jg
jmp
inc
jns
repnz
les
lods
mov
movsl
add
and
mov
lock
decl
and
or
loop
adcl
cwtl
pop
push
and
js
fistpll
add
pushl
incb
push
hlt
jp
les
popf
fwait
or
push
fimull
xchg
fs
out
add
pop
call
repz
out
xor
punpckhbw
dec
int3
adc
add
add
xchg
push
mov
cmp
dec
not
add
push
cld
inc
rcll
scas
xchg
mov
ljmp
jne
inc
sbb
xor
push
cmc
mov
adc
ljmp
loop
leave
add
add
mov
and
jle
into
push
call
orb
pop
push
scas
push
nop
cmc
mov
jmp
lea
or
ljmp
hlt
lods
inc
dec
mov
dec
adc
sub
xchg
xor
pushl
repnz
cmp
mov
rcr
popf
or
test
shll
mov
jmp
decl
ret
dec
or
in
jecxz
pop
adc
mov
dec
xchg
clc
push
cmpsb
decl
inc
outsb
push
push
dec
lds
sub
shll
cmp
mov
or
call
and
ljmp
sub
mov
push
lret
aad
negb
xchg
cli
fucomip
test
xchg
fwait
cs
pop
xchg
adc
xlat
decl
jmp
cmp
movsb
rorl
sti
mov
sbb
into
lcall
adc
scas
aaa
je
out
push
add
jno
inc
sbb
std
movsl
lock
jg
in
clc
or
push
xchg
mov
mov
or
push
and
lods
lock
call
and
movsl
es
pop
xchg
inc
and
test
mov
adc
pop
clc
call
stc
jle
or
test
nop
filds
xor
loop
imul
in
jge
mov
jle
push
jg
jg
rcr
out
test
pop
popa
push
adc
mov
lcall
pop
jb
aad
cmpsb
sarb
mov
gs
xchg
cli
mov
and
add
push
inc
cmp
mov
test
cmpsb
xor
jg
jmp
mov
insb
jb
addr16
das
stc
jg
int3
push
sbb
push
jecxz
in
pop
inc
fimuls
cltd
lea
in
leave
stos
add
mov
cmp
xchg
call
fildll
inc
and
leave
lea
jae
jl
mov
cmpsb
mov
or
lcall
pop
dec
shrl
dec
pop
ja
mov
mov
cmp
mov
ljmp
iret
sti
jecxz
or
jge
mov
enter
outsl
adc
decl
add
adcb
sbb
inc
add
lcall
rcrb
jb
ret
mov
mov
push
outsl
lock
xor
mov
movsb
icebp
scas
icebp
mov
sbb
jecxz
xchg
adc
xchg
add
jl
mov
bound
das
icebp
jg
je
arpl
test
cmc
ficoms
mov
and
pushl
xchg
jge
loope
rol
ret
xor
xlat
orb
dec
fistpl
jg
incl
dec
imul
mov
xor
ret
das
inc
hlt
jmp
push
xchg
mov
mov
push
enter
call
or
cli
movsb
xor
cmp
xchg
xchg
lret
or
out
es
ljmp
outsb
leave
lods
in
jg
fwait
call
mov
jb
fisubl
cmp
sbb
repnz
incl
fs
push
int3
rorb
gs
push
cmpsb
jae
cmpsl
xchg
dec
call
cs
sbbb
ret
out
inc
es
pop
push
scas
std
mov
repnz
and
mov
aas
push
fstp
lcall
pop
cmp
imul
aas
xor
sbb
dec
jge
fiaddl
daa
push
idivl
sbb
bound
mov
lcall
dec
insl
orl
sti
push
dec
push
and
es
cmp
fcmovnbe
shl
stos
or
es
adc
loope
lds
xchg
or
scas
dec
out
or
cld
xchg
call
outsl
jno
add
ror
sti
jg
es
sbb
cli
jg
cwtl
das
mov
subb
test
inc
xchg
and
das
icebp
xchg
dec
in
add
jae
push
inc
pop
popa
fdivr
pop
fsubrp
or
lret
inc
fnstsw
mov
call
xchg
xor
lock
add
icebp
ja
sub
sub
mov
sbbb
int
lods
jbe
and
pop
hlt
pop
xor
pop
fisttpll
call
sahf
xchg
sbb
sbb
gs
inc
sbb
push
xchg
sbb
dec
jmp
aaa
xchg
mov
push
loope
outsb
or
ljmp
sub
sub
sarb
testb
add
andl
mov
mov
outsl
imull
adc
xchg
roll
mov
repnz
pop
mov
jmp
push
mov
add
in
dec
xor
mov
cs
ds
mov
mov
fbstp
jmp
jg
add
mov
push
stos
push
and
call
sbb
ljmp
aas
jno
xor
in
and
sahf
push
cld
push
dec
data16
xchg
mov
jmp
sbbb
mov
add
mov
loop
cmp
sbb
je
pop
or
mov
push
aam
inc
test
fnstenv
clc
das
jne
in
xor
push
pop
jo
mov
jns
sbb
shlb
push
sti
into
lock
add
and
or
mov
lcall
les
xchg
aad
ss
xlat
jle
inc
in
mov
add
lock
and
or
cld
mov
sub
fcmovbe
pop
inc
les
push
test
test
ljmp
sub
cltd
pop
bound
out
pop
xor
lcall
lcall
push
iret
dec
fdivrs
add
push
stos
push
inc
iret
dec
fwait
mov
fdivr
das
adc
push
loope
sbb
movsl
pusha
les
loope
sub
sub
aad
jle
adc
ljmp
mov
mov
pushl
dec
add
mov
cmp
iret
push
jae
adc
mov
push
sbbl
ficompl
xchg
clc
mov
cmpsb
aad
inc
pop
rolb
sub
das
lcall
aad
add
mov
jmp
mov
imul
mov
decl
mov
inc
adc
test
xchg
clc
lcall
scas
jae
in
push
pushf
je
add
ljmp
cmp
rclb
sub
mov
dec
movsb
mov
add
mov
das
decl
pop
loope
pop
pop
cmp
imul
jle
mov
call
enter
ds
mov
jnp
ja
mov
mov
sbb
xchg
cmp
ret
pop
sub
fildll
mov
sub
stos
insb
sahf
shlb
je
aam
lcall
or
and
lods
pop
pusha
mov
fistl
ljmp
test
decb
mov
jne
or
imul
pop
xor
clc
adc
idivl
and
in
mov
pop
incl
push
mov
xchg
adcb
cwtl
inc
or
das
cmc
pop
call
and
mov
sbb
ljmp
xchg
testl
stc
and
inc
aas
jg
out
adc
mov
outsl
sahf
and
incl
outsb
into
xlat
pushf
popf
cmpsl
dec
lock
mov
ljmp
fwait
push
xor
dec
sub
or
sbb
jg
or
wrmsr
lret
or
nop
mov
mov
pop
ds
or
bnd
decl
xor
daa
sub
jp
lods
xchg
cmpsb
lock
push
clc
pop
clc
fwait
out
adc
sti
xchg
sbb
jae
pop
xchg
es
jg
xlat
cltd
decl
pop
xor
sbb
add
addr16
xlat
xchg
xchg
cmp
stos
mov
test
pushl
fildll
or
lods
push
cs
in
mov
push
inc
nop
repnz
pushl
and
ret
jo
and
xchg
jg
xchg
stos
mov
dec
and
lahf
fs
dec
imul
test
clc
lods
push
ljmp
jns
imul
pop
in
mov
ret
std
js
cld
or
pop
je
ror
das
imul
jo
dec
popa
pop
cmp
pop
cmp
fstps
mov
sub
loope
push
outsb
xor
cmp
lods
pop
stos
or
sar
mov
or
mov
aaa
hlt
mov
jmp
or
fsts
arpl
faddl
sbb
adc
pop
imul
ret
test
jl
repnz
mov
call
xchg
movsb
inc
enter
neg
jo
and
mov
leave
bound
test
test
add
pop
inc
adc
adc
fsubrl
fcomi
xor
test
incl
ss
mov
fs
loop
mov
cmpsb
rcll
hlt
adc
icebp
xchg
xchg
cmpsb
or
ljmp
stos
mov
jne
add
bound
dec
aaa
dec
jae
das
les
addl
mov
not
outsb
sbb
das
cmc
sub
ret
sbb
test
test
imul
or
int3
addr16
mov
xchg
popa
pop
clc
mov
pop
ret
inc
sbb
sbb
mov
and
inc
imul
pop
inc
outsl
mov
int3
in
std
negl
sbb
jns
push
push
mov
lcall
es
frstors
cmpsl
loope
cli
out
icebp
push
xor
pop
addr16
pop
mov
or
dec
mov
pop
subl
pop
pop
stc
fildll
sub
xor
popf
mov
in
mov
jg
scas
hlt
adc
outsb
inc
cmp
push
mov
repnz
inc
lret
subb
and
jecxz
out
dec
xchg
xor
jecxz
mov
mov
jns
pusha
mov
pop
ss
mov
mov
cmp
push
inc
dec
mov
jge
mov
inc
adc
divl
std
decl
jnp
test
cld
lcall
addr16
inc
xchg
ljmp
xlat
pop
pop
sbb
mov
movsl
ret
out
sbb
mov
fcmovnu
pop
jg
in
pushf
aam
push
pop
or
decl
dec
add
insl
mov
xor
iret
mov
jg
aaa
faddp
mulb
add
mov
mov
fwait
addr16
ljmp
cld
aas
scas
cmpsb
test
ljmp
sub
sbb
xlat
mov
fwait
pop
decl
or
mov
adc
mov
data16
enter
adc
xlat
inc
sbb
movsb
sti
dec
sbb
add
aaa
out
inc
jg
jo
inc
movsb
movsl
dec
or
xchg
gs
pushl
push
sub
fildll
add
ss
lods
pop
lods
dec
jno
jecxz
loop
or
xor
incl
orb
xchg
lret
or
daa
je
jge
mov
mov
les
out
push
movb
push
jbe
int3
xchg
inc
test
icebp
outsb
stc
jg
pop
clc
in
shlb
sbb
pop
in
jns
popf
dec
fdivr
decl
fsubp
add
mov
and
sahf
mov
pop
mov
sub
sbb
mov
leave
mov
test
dec
lcall
in
imul
jg
insl
mov
sub
loop
jmp
inc
test
lcall
fsubl
pushf
inc
push
pushl
jne
ss
jmp
pop
or
push
sub
jmp
jge
insb
jmp
cli
jl
or
mov
cmpsb
add
pop
sub
cs
xchg
daa
call
ljmp
sbb
cmp
loop
cmp
mov
test
das
xchg
sub
pop
or
pushf
sbb
aad
pop
sbb
decl
daa
in
loopne
pushf
sahf
adcl
pusha
in
mov
mov
mov
lcall
and
xchg
repz
ficoml
rolb
cmp
std
scas
and
mov
mov
sqrtps
push
cmp
pop
mov
cld
mov
cltd
aas
loop
subb
mov
pop
int3
outsb
sub
ljmp
movsl
js
mov
out
repnz
pop
mov
cwtl
dec
cmp
shlb
lock
and
mov
adcl
testl
push
nop
lds
cli
repz
fbld
jle
adc
xor
into
xchg
es
or
lods
mov
fildll
adc
sub
mov
xor
je
xchg
fmuls
pop
repnz
dec
cmpsb
lcall
aad
jg
mov
mov
jecxz
add
mov
xchg
mov
xchg
and
fcomps
daa
insl
mov
test
stc
sbb
repz
push
ljmp
pop
test
test
and
lahf
outsl
ret
fdivrs
in
cmp
xchg
shll
jo
loopne
insl
dec
add
fs
xchg
mov
mov
out
push
nop
mov
cmpsb
repz
adc
mov
mov
pusha
pop
rcrb
xor
xchg
ljmp
fildl
popa
lahf
dec
push
cmc
dec
dec
add
mov
dec
and
cmpsb
cld
inc
call
icebp
data16
xor
add
jg
sub
stos
int3
add
cmc
das
push
fs
push
adc
ret
mov
jge
push
cli
out
aam
cmp
cmp
insb
popa
xlat
fistps
or
mov
pop
inc
jo
rcrb
cli
jns
addr16
xchg
addr16
jnp
mov
jmp
and
clc
movsl
pop
test
aaa
decl
xchg
jae
xchg
ret
dec
rorb
sbb
dec
andb
lret
pop
adc
std
pushl
and
sbb
ficoms
and
push
movsb
mov
popl
xor
test
and
fmull
ljmp
lock
mov
jmp
xchg
in
negl
call
mov
arpl
ljmp
std
not
push
scas
insb
push
mov
inc
pop
dec
jp
xlat
mov
leave
jecxz
inc
nop
std
dec
imul
mov
pusha
int3
repnz
cmpb
add
jl
dec
push
mov
cmc
fisttps
sub
pop
jge
pop
sub
xchg
jb
mov
add
mov
push
xlat
and
xor
add
inc
loop
in
cld
call
adc
sbb
adc
lahf
ljmp
loope
ljmp
push
es
out
jns
inc
jb,pn
jl
dec
popa
test
jle
mov
push
mov
dec
add
add
mov
iret
xchg
jg
mov
jbe
outsb
jb
mov
stc
stos
push
xor
jmp
jp
and
das
loope
std
test
sub
xor
rorl
or
adc
sbb
cld
ljmp
xlat
out
test
add
pop
imul
jg
add
dec
add
adc
out
pop
or
cld
mov
call
or
lret
bound
movsb
outsb
lods
mov
test
pop
into
rcl
nop
test
sub
insb
icebp
add
mov
cmp
add
mov
arpl
xchg
cmp
push
jg
jge
mov
adc
ja
pop
nop
or
mov
hlt
pop
decl
ljmp
or
jno
adc
pop
sbb
inc
loop
lcall
dec
mov
push
sbb
lods
out
add
dec
pop
fmuls
stc
lret
into
jmp
insb
sub
jnp
push
add
iret
sub
cli
pusha
mov
jg
call
shl
pop
loope,pn
mov
push
sub
mov
in
mov
clc
pop
pop
jecxz
aaa
outsb
mov
dec
arpl
adc
cli
inc
cwtl
push
dec
mov
and
clc
or
sub
sub
bnd
test
lret
call
call
push
leave
cmp
cmp
mov
dec
test
das
std
jmp
add
ds
pop
jne
rcll
mov
xchg
push
ss
insl
lods
push
pushl
bound
popa
inc
xor
fwait
xchg
cmp
mov
jge
jb
ds
leave
sbb
jle
mov
inc
jbe
and
push
jns
and
in
sti
or
mov
sbb
jno
lret
xchg
shrl
aad
ljmp
dec
out
cltd
add
pop
lds
sub
sub
lock
ror
xor
pusha
hlt
stos
push
loope
cmp
lea
cmc
shll
and
and
lods
sarb
into
or
mov
push
sbb
fistl
in
and
fwait
or
push
xchg
shlb
cli
decl
imul
mov
das
decb
jge
idiv
decl
cmp
pop
adc
addb
ja
cld
jmp
hlt
inc
jmp
jge
frstor
inc
lret
add
jp
jg
call
fldcw
jge
in
or
sbb
arpl
lcall
jbe
adcl
adc
pusha
popf
inc
pop
int3
xchg
frstor
mov
cmp
jmp
mov
push
mov
rclb
rcr
lods
inc
fucomip
std
cmp
fnstsw
cmp
cli
xor
popa
in
pop
push
xlat
inc
xor
outsl
push
icebp
aaa
cmp
test
movsb
sbb
push
aaa
clc
jmp
gs
loope
test
dec
xor
adc
bound
jnp
push
jbe
push
lret
inc
xor
cmp
mov
xchg
fimuls
cld
scas
jp
div
dec
lahf
stos
lods
sbb
pop
cli
incl
adc
int
jne
sbb
xchg
fisubrl
or
xchg
aad
inc
stc
loop
pop
cld
lcall
mov
mov
arpl
aam
jno,pt
incl
xchg
and
dec
sbb
pop
and
test
mov
inc
push
imul
push
jge
call
movhps
stos
js
and
lret
mov
mov
add
loop
sar
pushf
lret
loope
fstl
jge
test
pop
outsb
mov
dec
jo
nop
out
or
lcall
mov
nop
xchg
inc
jge
sarb
test
fisttpl
lcall
cli
add
pop
xchg
dec
std
shlb
sar
dec
fidivl
cmc
fsubrs
lods
movsb
test
fldenv
test
jbe
lock
test
mov
mov
cmp
xchg
addr16
pop
cmc
faddl
inc
ja
or
idiv
push
cmp
decl
jno
sub
out
sub
ret
in
cmp
fs
add
xchg
mov
loopne
lds
mov
movsl
shll
sub
imull
lds
lcall
fs
push
ret
add
movsb
xchg
cmp
cmp
xor
test
mov
sbb
inc
dec
cltd
xor
into
xchg
pop
mov
pop
sub
sbb
jg
adc
lds
or
add
cs
mov
pushf
jmp
or
cld
ljmp
aas
push
pusha
or
jo
inc
add
inc
fists
lret
imul
outsb
decl
pushf
mov
shlb
cmp
inc
mov
and
ljmp
ret
cmc
stc
jns
jne
pop
stos
ljmp
dec
cmp
shlb
adc
ds
jp
mov
test
push
movsl
pop
sbb
cmp
pop
xor
int
cli
mov
inc
xchg
lods
arpl
mov
in
pop
cmpsl
mov
pop
cltd
sti
add
mov
add
cmp
call
ss
dec
fwait
mov
pop
inc
in
fs
xchg
popa
push
aam
aam
lods
fildll
cmp
cmc
jp
addr16
in
lods
ja
les
stos
call
jb
push
je
fs
mov
sub
decl
subb
cmc
sub
push
shlb
cmp
pop
sub
pop
dec
and
scas
gs
sub
mov
sahf
insl
xor
cli
inc
mov
inc
fsubs
clc
lahf
insb
pop
xor
loopne
dec
jg
std
pop
or
jmp
or
and
jp
jg
in
pushf
repnz
mov
jnp
out
mov
inc
mov
inc
fucomp
addb
lcall
pop
mov
test
xchg
push
call
rcll
mov
pop
and
outsl
sbb
pop
mov
lea
mov
push
stos
inc
sti
cmp
xlat
ret
insl
cld
xor
mov
mov
popa
or
pop
or
mov
ret
adc
cld
mov
mov
int3
and
jmp
fs
inc
cmp
in
mov
les
push
mov
and
add
das
andl
iret
pop
cwtl
sub
mov
and
mov
xlat
aad
or
inc
sarb
or
fimull
mov
ljmp
jg
iret
push
mov
or
mov
inc
daa
push
shrb
pop
pushl
pop
mov
pushl
scas
pop
daa
sahf
push
xchg
loope
fidivs
cmp
cmc
call
pop
insb
dec
ljmp
sbb
cmpsl
mov
mov
mov
push
bound
test
sub
push
hlt
add
sub
ljmp
adc
mov
fprem1
mov
sbb
shll
adc
ljmp
std
lods
loop
es
enter
cmp
sbb
push
jbe
fimuls
mov
sub
movsl
add
mov
mov
dec
aad
and
jmp
call
scas
adc
call
in
mov
jg
stc
or
adc
jbe
sbb
dec
push
fwait
or
cltd
movsl
bound
int
pop
lret
outsl
adc
call
pop
addr16
arpl
xor
das
pop
out
mov
pop
clc
pop
lcall
cmp
xor
movb
cmp
jnp
inc
out
mov
add
cli
or
xchg
adcl
mov
jnp
test
das
les
fdivl
call
pushl
sbb
push
jno
popf
cmc
repnz
inc
mov
lds
lcall
arpl
mov
stos
pop
adc
lock
dec
sub
rclb
adc
push
ds
ret
hlt
xor
cmpsl
cmpsl
lret
push
pop
gs
jmp
xchg
sbb
testb
imul
jns
fdivr
jle
xchg
cli
sbb
add
jl
shrl
adc
pop
jne
cli
jmp
adc
jle
xchg
cmp
xor
jnp
ljmp
incl
add
leave
and
in
icebp
push
hlt
leave
push
ficoml
adc
mov
push
es
popa
bts
or
fs
mov
adc
xor
ljmp
leave
call
cmp
scas
sbb
in
into
bswap
adc
scas
xchg
int3
cmpb
add
mov
cwtl
push
adc
xchg
xorl
ds
inc
xchg
call
jae
inc
push
mov
mov
sub
icebp
shrl
out
movsl
decb
mov
mov
jp
sbb
cli
into
gs
subb
pop
cltd
loopne
mov
push
lcall
bound
clc
hlt
mov
movsb
sarb
sbb
arpl
movsl
inc
jmp
in
stos
popf
shlb
cmc
inc
push
mov
dec
das
lock
add
lods
jge
jno
popa
out
rorb
push
or
popa
mov
test
mov
add
cmp
push
ljmp
stc
xor
adc
add
mov
aam
fsubrp
filds
out
mov
jmp
mov
mov
lcall
jg
into
mov
das
sbb
decl
aaa
push
or
imul
sbb
xchg
aas
xor
mov
add
pop
rorl
jae
xchg
sub
test
sub
mov
dec
mov
jmp
enter
mov
xor
add
mov
lret
pop
pushf
out
repnz
scas
push
out
test
arpl
js
cli
jg
xchg
clc
js
pop
rcll
aad
xchg
add
cld
sbb
lcall
pop
add
ljmp
pop
shr
push
or
das
ljmp
pop
clc
jo
jno
adc
inc
inc
aam
and
jno
push
push
stos
pop
inc
popa
lcall
xor
xchg
add
out
sub
pop
pop
in
pusha
dec
xchg
lods
jbe
xor
dec
push
aaa
cli
xchg
cli
xchg
lcall
or
ret
pushl
cmpsl
jns
lret
stos
mov
ret
mov
fs
push
icebp
orb
add
adc
fildl
lcall
aam
arpl
out
mov
cmp
push
inc
xchg
adc
lds
jge
jmp
test
inc
jmp
push
add
cmp
mov
jnp
incl
je
cli
in
xor
jae
repz
mov
jo
lods
pop
cmp
pushl
incb
mov
and
data16
imul
loop
cld
dec
push
sar
lahf
aam
or
and
jp
out
add
clc
fucomip
jmp
push
cltd
outsb
adc
mov
pop
jp
adc
xchg
gs
call
push
icebp
cmp
adc
sub
clc
cmpsl
mov
sbb
ljmp
push
scas
jmp
stos
push
cmp
jns
movsl
fwait
push
sbb
test
xchg
js
lcall
fldln2
mov
pop
dec
sbb
rep
mov
jmp
std
sbb
jp
pop
scas
xchg
out
cs
jne
movsb
push
mov
mov
insb
nop
inc
call
shlb
mov
and
xlat
cmpsb
js
dec
lock
inc
mov
decl
cmpsb
jns
ljmp
lret
mov
sub
mov
call
inc
push
in
aaa
aas
ret
and
jle
and
outsl
fldenv
lds
sti
mov
aas
rcrb
lret
dec
popf
ja
lcall
ds
lods
mov
roll
cld
pop
cmpb
rol
xchg
dec
jbe
dec
rcrl
push
out
fwait
jmp
dec
int
mov
push
movsb
test
adc
in
and
js
add
adc
inc
fs
mov
mov
data16
outsb
pop
jo
mov
pop
add
or
loopne
test
arpl
lcall
cmp
jecxz
sub
mov
mov
js
dec
subl
mov
and
pop
enter
lcall
loopne
xchg
repnz
xor
xor
add
sarl
cli
sub
sub
les
lcall
jno
pop
movb
into
mov
xchg
push
sub
jbe
add
cmc
add
ret
ljmp
aad
ljmp
imul
mov
mov
call
scas
pop
sub
xchg
outsb
xor
stos
int
xchg
ss
aam
or
push
mov
mov
ljmp
rorb
jl
push
fldcw
xchg
or
repnz
xchg
orb
decl
xchg
xchg
inc
and
inc
shr
mov
pop
xchg
push
out
cltd
repz
inc
push
int
fnstsw
cmp
nop
leave
ljmp
adcb
test
dec
mov
jmp
or
adc
stos
sti
out
sub
out
dec
push
ja
and
arpl
call
or
cld
js
mov
pop
cmpsb
cmp
pop
add
scas
loopne
add
mov
daa
sbb
jno
hlt
add
mov
jmp
test
sete
bound
out
es
in
fbstp
lcall
jg
pushl
rcrl
dec
lods
inc
add
shll
or
das
jno
inc
decb
sar
sub
xor
cs
outsl
stos
mov
sbb
int3
fucomip
xchg
lret
cmc
push
mov
dec
in
outsl
std
dec
ror
mov
dec
mov
xor
sar
xchg
mov
or
cli
jl
pop
dec
out
sbb
jae
jo
movsb
subl
adc
in
cs
call
adc
inc
icebp
out
es
fiadds
mov
in
add
jp
in
mov
or
call
and
mov
pop
mov
leave
jecxz
or
pop
call
mov
popa
ja
mov
pop
mov
pop
ljmp
mov
repz
xor
cmp
mov
adc
cmpb
ljmp
lahf
iret
dec
stos
jecxz
ss
pushw
mov
fisttpll
shl
leave
or
adc
incl
xlat
iret
xor
lods
stos
fsub
pusha
pop
sbb
in
xor
fmul
cli
and
jg
in
fs
fistl
jae
ja
mov
popa
fcoml
bound
and
mov
push
call
pop
out
aas
cli
jbe
add
rol
push
jge
push
ljmp
xchg
mov
bnd
testb
in
les
add
jns
ret
mov
cmc
or
cltd
mov
hlt
cli
pop
test
xor
repz
ljmp
mov
jo
scas
lock
lret
test
imulb
push
sub
notb
pushl
into
fwait
fwait
leave
nop
pop
adcb
xor
sbb
jno
xchg
sub
cmp
sbb
into
notb
call
xchg
mov
mov
fidivs
lahf
cmp
fistpl
add
shll
stos
pop
clc
jmp
sbb
inc
inc
pop
sub
push
lods
ljmp
or
enter
loope
mov
lea
push
cmp
cld
mov
sbb
mov
and
int
incl
cmp
clc
movl
inc
jns
mov
into
inc
das
mov
hlt
mov
pushl
outsb
lock
hlt
adc
or
jp
mov
call
adc
iret
pop
push
out
out
leave
add
jb
outsl
loope
pop
pop
cmp
jne
scas
ljmp
imul
sarb
and
insb
lahf
nop
lcall
jge
rcll
mov
jge
mov
loope
and
push
lcall
movsl
ljmp
or
cld
pushl
int
cmp
negb
mov
sbb
dec
fnstsw
sbb
sub
ljmp
sbbl
cwtl
dec
mov
cmp
outsl
hlt
cld
test
xchg
iret
sbbb
push
pop
in
jmp
mov
jle
test
sub
dec
cmp
ds
xchg
xchg
pop
jle
sbb
decl
sub
sbb
leave
push
sbb
mov
fldpi
ret
lret
add
dec
jnp
loopne
mov
push
out
jge
mov
rcpps
arpl
outsl
jmp
cmp
inc
dec
cmp
or
mulb
cltd
xchg
xchg
adc
call
js
push
push
insb
and
mov
lock
pop
std
add
in
xchg
into
dec
mov
lock
jae
cmp
jp
jb
pop
pop
mov
xor
jl
pop
cmc
lea
xor
push
lcall
repz
das
les
sbb
mov
jle
test
aaa
pop
ljmp
or
pusha
sub
sub
loop
ja
cmp
jnp
inc
mov
call
push
xchg
pop
sbb
adc
out
pop
sub
jg
int3
jo
in
jecxz
mov
subb
xlat
cmp
push
inc
push
andl
inc
push
mov
push
das
jbe
mov
fistl
sub
sub
and
mov
fidivl
cs
mov
movsb
mov
movsl
sti
inc
pop
call
int3
enter
call
adc
test
pop
jg
cmp
int3
lcall
jg
inc
or
push
das
cltd
push
jb
cltd
xorb
bswap
dec
js
jge
mov
push
mov
loopne
and
sub
into
sbb
pushl
clc
decl
mov
out
xor
jp
fwait
sbb
aam
nop
mov
call
rolb
inc
loope
mov
jb
insl
insb
and
xor
or
fcomi
pop
pop
dec
aad
sahf
add
std
cmp
or
bnd
inc
or
push
adc
mov
jb
or
ret
pop
rorb
sbb
incl
aaa
sti
mov
inc
xchg
lret
cmp
push
aad
test
pop
add
xchg
sbb
dec
out
pop
pop
pop
sbb
daa
icebp
ljmp
bound
sbb
sub
or
push
jmp
or
inc
aam
call
ret
int3
pop
sub
xchg
ss
shr
mulb
ljmp
jmp
dec
lret
loopne
addb
movsb
jbe
or
test
cli
adc
mov
xchg
or
mov
inc
test
scas
jbe
adc
xchg
push
push
mov
push
ja
jae,pn
cltd
push
mov
or
add
in
cli
sbb
scas
call
out
fdivrl
xor
cmpsb
mov
adc
movsl
testb
dec
fs
jno
sub
sub
punpckhdq
jle
and
scas
icebp
aad
sbb
cmp
add
jmp
jle
out
jg
sarb
fildll
js
lret
dec
outsb
cmp
movsl
sub
or
jno
dec
out
shlb
incl
cli
push
jnp
rorb
std
and
cmc
test
imul
or
push
imul
imul
lcall
push
cmc
sbb
mov
inc
out
inc
addr16
push
mov
or
mov
pop
dec
xor
setae
or
mov
push
xchg
pushl
dec
mov
andb
fnstenv
aam
test
xor
mov
adc
dec
std
pushl
pop
mov
xchg
incl
lret
cltd
mov
fld
sub
les
sbb
je
pop
hlt
in
lods
cmpb
dec
cld
pop
std
push
ljmp
pushl
fs
int3
scas
lds
test
sarl
xor
dec
sbb
adc
jg
mov
xchg
mov
inc
dec
addb
fwait
inc
adc
ja
push
push
and
mov
mov
add
pushl
les
loope
bound
fildll
into
lods
subl
xor
incl
call
jge
outsl
adc
lcall
test
in
xor
ljmp
or
loop
in
repz
ja
pop
out
pop
pop
mov
ror
in
ljmp
xchg
push
sti
loop
xor
imul
cli
mov
nop
xchg
popa
iret
scas
lcall
jmp
pushf
cmp
jo
pop
inc
enter
jle
std
leave
xlat
sar
fsubs
in
dec
sub
negl
xchg
dec
mov
jns
and
xchg
sbb
inc
mov
xchg
jb
out
jb
fs
sbb
sbb
in
pop
imul
scas
aaa
jns
cltd
sti
es
in
cld
pop
jp
add
aas
fiaddl
jmp
incl
shll
fidivl
mov
push
mov
push
or
xchg
cmpsb
xor
jmp
addr16
or
push
pop
ja
pop
movsl
out
jbe
adc
ret
sti
daa
fwait
push
cmp
call
daa
mov
add
lods
jle
outsb
push
ds
inc
mov
mov
enter
clc
sti
inc
adc
popf
fwait
xchg
cmp
xlat
into
and
jmp
stos
jp
mov
repz
jecxz
adc
rcll
rclb
mov
mov
cld
loope
push
shlb
mov
pushf
dec
or
push
ljmp
mov
mov
js
stc
popf
mov
sbb
xor
loopne
lret
mov
mov
ljmp
push
xor
push
aad
ljmp
add
jecxz
negb
mov
inc
mov
enter
cmp
lcall
or
inc
xchg
int3
sbb
sbbb
stc
add
add
addl
dec
call
sbb
or
pop
call
cmp
xchg
clc
cmp
sub
inc
and
sahf
movsl
sbb
push
pop
jne
sar
mov
inc
mov
mov
addr16
je
and
and
cs
decl
cld
xor
push
jns
lods
or
iret
mov
sbb
push
call
sbb
into
call
jle
fs
and
fnstcw
std
pushl
inc
cs
loop
out
add
mov
push
cmc
daa
jle
add
sbb
mov
pushl
rclb
cmp
jecxz
in
lock
push
adc
mov
imul
sub
mov
jo
addr16
inc
popl
fbld
cli
mov
fidivl
int3
daa
out
aam
jge
mov
pushl
xchg
mov
push
inc
mov
cmp
aam
xor
std
call
mov
pop
pushf
in
mulb
fisubrl
ljmp
dec
in
cld
call
or
xchg
jg
add
iret
xlat
cmp
jp
xchg
adc
pop
mov
enter
mov
pop
hlt
jg
jge
into
hlt
cs
loopne
push
aas
mov
mov
cmp
clc
jne
sub
or
sbb
iret
stos
decl
std
iret
pop
mov
mov
sbb
ljmp
push
lds
les
loop
push
xchg
cwtl
mov
call
test
enter
ss
int3
faddp
inc
xor
sbb
cmpb
pop
mov
push
sarl
jg
call
pop
fcmovne
dec
push
mov
dec
push
xor
cld
call
dec
xchg
jns
xchg
sahf
cs
sub
stos
push
fistpll
lock
xchg
mov
fsubr
addl
pop
clc
mov
or
icebp
sbb
int
rcl
jmp
adc
and
sub
idiv
sbb
inc
pop
jae
and
dec
stos
pop
lahf
add
xor
int
mov
stos
ss
mov
push
adc
adc
push
lods
lcall
mov
sub
mov
ja
shld
sbb
xor
mov
pop
or
add
imul
shlb
filds
shl
jb
or
bound
repz
fimull
icebp
decl
dec
mov
test
jp
mov
inc
cli
sar
sbb
sbb
mov
xchg
jl
outsb
mov
ljmp
mov
std
jle
jne
fnsave
jg
add
xchg
or
jmp
loop
sbb
inc
rorl
pop
rol
inc
adc
or
in
adc
pushl
gs
les
lods
pop
mov
jle
les
add
pop
in
fwait
mov
decl
in
adc
inc
mov
rclb
add
out
lcall
aad
mov
loop
xchg
mov
rcrl
jns
mov
out
aaa
cmp
out
sbb
xchg
push
dec
popa
lcall
test
roll
push
pop
repnz
adc
inc
dec
aam
push
jge
lcall
es
rorl
xorb
inc
sbb
repz
cli
lcall
mov
pop
add
cmp
inc
mov
popa
lcall
cld
lods
out
push
addr16
xchg
inc
sbb
jle
insl
pop
adc
mov
in
mov
push
ficomps
fwait
cld
or
scas
sbb
push
mov
jno
lret
arpl
xor
jns
dec
push
mov
cmc
incl
jp
ljmp
repnz
fucom
pop
pop
cld
mov
nop
cli
xor
sahf
insb
das
push
fcmovnb
or
and
pop
gs
cmpsl
rorb
outsb
rcl
xor
call
lahf
inc
data16
int
clc
mov
pop
divb
cmp
ss
add
xchg
pushl
mov
mov
je
icebp
mov
popf
ret
cmp
mov
lcall
push
outsb
push
jo
ret
dec
gs
lcall
xor
and
mov
sub
iret
nop
gs
inc
jnp
sbb
hlt
addr16
int
xor
gs
inc
mov
sub
pushf
aaa
lods
push
fidivrs
in
sbb
mov
ret
jg
xor
loopne
mov
mov
mov
push
call
jo
movsl
addr16
push
loop
jns
sahf
xor
sub
mov
add
dec
inc
movsl
test
dec
mov
mov
sbb
mov
sub
loopne
lock
enter
adc
inc
lods
enter
xchg
lcall
pop
xor
mov
mov
jae
and
cmp
jecxz
push
popf
inc
jno
or
push
inc
cmp
pop
cmp
push
jmp
inc
mov
les
ret
mov
dec
jecxz
sub
das
icebp
xchg
fabs
fcoml
pusha
mov
adc
cmp
loop
test
lock
add
jnp
pusha
jbe
adc
and
dec
mov
push
sarl
or
mov
mov
push
cmpsl
lret
pop
aaa
push
gs
cld
andl
sarl
push
dec
adc
ljmp
pop
xchg
out
xchg
or
and
push
cmp
dec
xchg
dec
stc
arpl
cmpsb
mul
movsl
lods
and
lcall
into
xchg
incl
mov
bound
xchg
mov
aaa
sub
ljmp
xor
jmp
cpuid
lods
or
fnsave
arpl
push
stc
stos
or
mov
fcmovne
scas
cmpsb
scas
inc
mov
jb
pop
cmpsl
jnp
repz
dec
jne
sub
decl
xor
mov
push
cltd
lea
pop
xchg
idiv
fistpll
out
popf
lret
icebp
inc
push
push
push
xchg
jmp
movsl
es
jg
inc
pop
jmp
mov
movsl
sbb
xchg
aad
push
sbb
jo
in
loopne
pop
push
cld
jg
adc
std
pop
je,pn
xchg
push
es
push
leave
fistps
adc
call
aam
xor
test
xor
into
mov
lock
ljmp
inc
and
int3
in
subl
jecxz
loopne
outsb
lods
stos
aad
hlt
ljmp
fs
jl
inc
clc
push
sbb
push
rcrb
inc
lcall
add
sahf
push
mov
add
js
lods
out
outsb
lds
rcl
out
mov
adc
lea
pusha
into
pushl
add
inc
push
cwtl
cwtl
scas
inc
loop
inc
cli
sbb
frstor
ds
pushl
add
data16
fists
mov
dec
push
mov
inc
ljmp
mov
jmp
repz
mov
mov
idivb
scas
jge
adcl
lret
cmp
mov
xor
shrl
ja
pop
dec
nop
fcoml
add
push
cs
inc
pop
shlb
mov
sbb
dec
xchg
jecxz
or
push
or
mov
lock
decl
inc
dec
inc
ret
outsb
mov
pop
mov
push
loop
das
insl
pop
fscale
out
das
xor
lods
mov
push
and
mov
push
imul
sahf
jp
mov
push
loope
or
mov
call
jae
out
xchg
mov
loope
and
jp
or
call
std
mov
jle
stos
xchg
pop
sarb
ss
ljmp
adc
call
sbb
loopne
pop
pushf
and
jmp
push
into
push
inc
push
dec
testb
pop
clc
test
sub
clc
push
insl
mov
in
xchg
adc
rol
push
loopne
push
xor
xor
fs
ljmp
mov
push
insb
sub
cmp
in
cmp
xchg
sub
xlat
int3
movsb
mov
incl
and
pop
add
mov
dec
loop
push
roll
sub
adc
cld
or
add
mov
mov
inc
insl
inc
jmp
fstpt
shll
push
sbb
cmp
pop
scas
xlat
jge
or
lahf
sar
gs
sub
cltd
fcmove
in
ja
mov
movsb
or
add
outsl
adc
sbb
int
and
fcoms
xorl
jl
xor
mov
xchg
mov
lods
and
fnstsw
adc
push
stc
imul
enter
lods
clc
sti
or
jg
xchg
jmp
mov
lahf
iret
adc
repnz
sub
or
cmp
pop
mov
popw
cmp
pop
jl
jmp
or
in
mov
cmp
lods
bound
pop
or
sub
scas
pop
ljmp
push
push
cwtl
xor
test
popa
ror
add
jg
push
movsl
scas
adc
call
imul
mov
push
fldenv
stc
dec
int3
jnp
pop
push
dec
pop
xchg
ret
call
xchg
loop
cmpsl
mov
popa
out
call
movsb
push
mov
and
jno
clc
jg
push
pop
into
pop
sub
sti
add
lcall
xor
adc
mov
fdivs
ds
jne
inc
fs
daa
clc
lods
out
mov
test
adc
xchg
fs
movsb
lock
test
jg
add
rcrl
add
iret
in
mov
jp
imul
inc
dec
js
notl
inc
aaa
int
push
push
aam
es
jmp
scas
mov
xchg
fwait
sbb
add
sbb
in
or
mov
pop
inc
scas
add
push
add
adc
decl
outsl
imul
mov
inc
shll
xchg
test
lahf
in
pop
adc
shlb
adc
push
mov
jle
mov
inc
pop
and
inc
daa
test
lret
outsb
out
das
cmc
jmp
pop
cwtl
scas
fbstp
in
mov
int
jmp
mov
mov
sbb
shlb
lret
add
enter
dec
mov
xchg
mov
xchg
mov
popf
xor
add
or
mov
shlb
andl
sub
pop
or
movsl
pop
or
call
bound
mov
jecxz
mov
sub
inc
pop
icebp
xchg
aad
cs
loop
or
inc
push
adc
inc
mov
sub
stos
mov
pop
push
adc
pop
in
into
jg
inc
cmpsl
das
fsubrs
in
xor
or
ss
call
fisubl
mov
jbe
cmpsb
sbb
adc
or
lds
rolb
shl
jg
jmp
frstor
stc
std
test
ja
popf
fdivrs
stc
popa
and
pushf
stos
shl
jg
jmp
aaa
mov
mov
push
jo
mov
incl
jns
jb
repz
fsubs
jbe
inc
dec
outsb
mov
pop
ljmp
enter
lret
push
pop
cmp
pop
popf
stc
testl
adc
sar
incl
dec
in
sar
add
js
cltd
outsb
test
ljmp
cld
inc
xchg
mov
pop
and
ja
inc
cld
rorl
mov
cmp
jae
or
fdivr
sbb
push
inc
mov
scas
repz
push
add
jp
adc
jp
decl
outsl
cmc
aas
arpl
mov
gs
mov
mov
pushf
push
add
mov
jle
ljmp
cld
ljmp
jmp
xorl
shll
dec
sub
ljmp
push
pop
mov
jno
mov
xchg
sbb
lods
push
mov
and
xor
out
sbb
stc
inc
adc
inc
pop
jno
hlt
stos
test
mov
or
in
push
pop
call
fnstsw
mov
mov
mov
adc
outsb
arpl
adc
dec
lock
call
data16
lods
adc
xor
inc
xor
orl
das
or
inc
mov
mov
rclb
or
call
insl
cwtl
repz
sub
sub
push
rcll
cli
xchg
hlt
cld
in
pop
imul
stos
out
xchg
jae
mov
push
adc
lcall
jp
mov
lahf
movb
andb
dec
mov
outsb
call
rcrb
xchg
dec
ds
daa
call
cld
fstl
pop
cmpsl
clc
incl
stc
out
or
or
xchg
xchg
pop
mov
incl
test
mov
add
inc
daa
hlt
pusha
mov
mov
inc
arpl
mov
test
test
or
call
ss
xchg
add
adc
xchg
je
cmp
dec
sub
out
push
dec
mov
mov
add
jg
cld
shlb
popf
cli
sbb
pop
push
mov
inc
rolb
arpl
or
nop
int3
jae
mov
dec
scas
lock
icebp
pop
cmp
testl
cli
mov
rol
jmp
stc
dec
test
jae
rorl
cs
pop
adc
mov
jg
jmp
mov
mov
es
aas
or
fcoml
call
jnp
leave
pop
add
or
mov
push
jbe
mov
jg
mov
cld
insl
mov
mul
cmp
or
inc
je
rcrb
jg
mov
in
and
and
xchg
jecxz
rclb
fsubl
push
xchg
push
out
data16
xor
cmp
les
test
adc
ljmp
dec
fdivrl
sbb
and
dec
cmp
and
lock
xchg
in
aaa
sub
sub
subb
jmp
cmpsb
push
loope
clc
lcall
sarb
js
leave
test
xchg
pop
clc
and
sbb
jmp
ficoms
ljmp
or
or
adc
addr16
fs
jmp
sub
ja
adc
cmpsb
sbb
shrl
lock
cwtl
inc
movsl
jecxz
mov
imul
fbstp
lcall
xchg
add
or
fmul
dec
inc
and
jecxz
nop
lahf
out
insb
inc
int
push
jg
sub
add
sbb
sub
or
add
insl
push
push
in
and
or
ljmp
xchg
jp
lret
sarl
cmp
mov
pop
adc
or
push
mov
idiv
idiv
ljmp
add
mov
mov
cmp
push
data16
pop
xlat
es
clc
inc
pop
lods
testb
xor
call
cmp
dec
jg
or
pop
je
testb
xchg
out
sarb
std
mov
sar
jp
cmp
in
bnd
push
stos
mov
mov
fdivrs
mov
mov
adc
lret
les
fstps
pusha
fwait
sbb
mov
sbb
test
loope
hlt
lods
int
mov
clc
push
mov
mov
sti
int3
dec
je
mov
out
sbb
mov
insb
fisubl
sub
dec
out
mov
icebp
xor
add
pop
les
faddp
and
fcoms
and
cmpsl
adc
scas
and
cmp
mov
notb
scas
xchg
mov
jg
dec
pop
fldenv
or
xchg
mov
les
cmc
mov
test
mov
jle
fbstp
ret
push
push
pop
fsubp
addr16
inc
mov
cmpsb
out
lods
adc
pop
sti
jo
les
mov
ljmp
cmpsb
jb
jne
cmpsb
inc
cmp
jp
je
in
addl
and
scas
dec
xchg
mov
fs
xor
insl
mov
enter
sub
inc
les
jg
sbbl
pop
rorb
inc
mov
insl
clc
mov
inc
jg
jno
push
sbb
dec
adc
cs
repz
pop
inc
cli
fucomip
aam
mov
dec
cmpsl
xchg
icebp
cld
push
lods
xor
hlt
fbld
les
cwtl
xor
in
repz
pusha
jecxz
inc
popa
test
xor
lret
pop
push
dec
mov
incl
push
mov
jae
rclb
enter
sub
jns
decl
out
fsubr
cmp
aam
inc
inc
mov
fisubl
ds
jg
cmpsl
cmp
mov
cli
lods
jmp
in
and
loop
cmpsb
lahf
inc
adc
pushl
or
les
mov
push
jmp
push
movsb
lods
fsts
call
sbb
xlat
push
adc
notl
mov
inc
push
jg
jecxz
shlb
cld
mov
ja
or
pop
push
test
sub
mov
jecxz
sbb
sbbb
in
imulb
xchg
sar
shrl
and
int3
cmp
cltd
cltd
fdiv
rcll
fisubrs
dec
dec
xchg
sahf
scas
js
bound
loope
sub
jge
test
lods
adc
xchg
smsw
mov
cmp
pusha
push
adc
into
mov
pop
mov
test
mov
jns
mov
lcall
or
pop
adc
xchg
sub
cli
push
imul
outsl
and
aad
jl
push
add
hlt
mov
decl
inc
out
repz
repz
lods
idivb
fisubs
cmpsb
mov
das
icebp
outsl
fbstp
test
xchg
jmp
loope
movsb
push
incl
enter
int3
std
jno
xor
mov
jns
stos
popf
mov
mov
jmp
pushl
add
out
inc
iret
inc
in
mov
je
mov
inc
sub
mov
repnz
jnp
lods
jb
leave
pop
lret
pushl
movsl
popf
in
ja
xchg
mov
notb
loop
scas
mov
loop
icebp
pop
fcoml
int3
hlt
lcall
je
sub
ficomps
sbb
jl
dec
cmp
mov
outsl
lock
mov
mov
cwtl
xchg
lea
xor
sbb
mov
out
or
and
jmp
aam
push
int
mov
outsl
icebp
jmp
mov
mov
pop
bound
add
mov
cmpsl
inc
ljmp
inc
xorl
inc
movsb
xor
pop
add
mov
mov
call
fnsave
dec
ret
mov
pop
rcll
outsl
push
out
inc
jbe
pop
cli
jmp
js
or
add
mov
sti
cmpsl
mov
movsb
sbbl
ljmp
xor
sub
int3
ds
scas
lahf
icebp
mov
xchg
xchg
pop
sbb
incl
scas
addr16
shlb
push
leave
enter
mov
lret
cltd
adc
push
jg
sub
incl
insl
fmull
xchg
out
out
jno
hlt
call
incl
clc
and
adc
int
xchg
add
mov
mov
gs
out
sbb
and
or
imul
push
data16
mov
pop
bound
pop
pop
cs
daa
lds
jmp
adc
push
faddl
insb
pop
push
notb
idivb
mov
ret
fstl
mov
xchg
mov
fnstsw
mov
shlb
pop
jle
aaa
das
cmc
inc
sbb
cli
jbe
inc
xchg
xchg
ljmp
repz
std
call
xlat
pop
aaa
xor
mov
mov
mov
pop
jmp
pop
cwtl
inc
pop
jae
decl
clc
mov
repnz
test
push
dec
and
xchg
inc
jmp
ds
cmpsb
sub
incl
dec
lods
sbb
sbb
xchg
jb
call
sub
int
ffreep
jae
jmp
addr16
jg
lcall
mov
cli
add
pusha
xchg
jae
lret
add
mov
decl
fwait
cmp
inc
mov
incl
mov
mov
arpl
mov
addr16
lods
xor
inc
adc
jl
cmc
jmp
xchg
push
sbb
jle
cltd
faddp
cs
cmpsl
loope
cwtl
mov
test
scas
shll
jge
mov
pop
inc
pop
adc
movsb
js
fwait
fwait
inc
call
aas
cmp
xchg
pop
and
xor
cmpsb
ljmp
dec
popa
inc
mov
xchg
dec
mov
xor
push
cmpb
fisubs
jno
dec
jmp
pop
bound
dec
sbb
adc
push
sti
ljmp
cmp
adc
decl
pop
inc
pop
mov
jmp
fs
sub
xchg
call
cmp
inc
xlat
call
imul
lcall
and
mov
es
push
lds
sbb
cmp
negb
xchg
aam
sti
mov
test
fdivr
push
push
std
mov
push
cld
xchg
mulb
and
decl
loope
sub
xor
push
mov
lcall
push
inc
andl
sti
and
mov
mov
aam
in
pop
xchg
xchg
fistps
rcll
cmp
jmp
inc
imul
mov
pop
mov
decb
hlt
into
shll
subb
xchg
mov
xchg
test
fildll
sub
cmp
lcall
dec
sbb
and
jno
sbb
cmp
scas
dec
jge
sub
addl
nop
inc
mov
std
cltd
rclb
mov
cltd
inc
pusha
xchg
pop
test
stc
cwtl
xor
cmp
aaa
mov
sub
mov
dec
cld
pop
xchg
and
lcall
faddl
fiaddl
cltd
pop
lcall
mov
and
call
cmp
jecxz
sbb
pushl
xchg
push
xor
sbb
sbbb
mov
jmp
enter
cld
push
fbstp
aad
iret
je
dec
lea
mov
sbb
test
enter
sub
mov
and
jge
daa
icebp
aad
int3
push
jae
inc
insb
mov
push
mov
cld
call
or
add
xor
cli
std
mov
les
sahf
out
ror
cltd
lret
aam
je
jne
jbe
call
mov
iret
mov
jne
es
fs
pop
loop
sti
push
add
xor
mov
adc
xor
cld
jmp
frstor
test
mov
sbb
xlat
or
push
push
and
mov
dec
out
addr16
add
mov
mov
and
pop
pusha
cmpsl
sub
jp
insl
xor
push
jecxz
notb
adc
popl
fcmovne
rorb
xchg
or
xchg
ljmp
fimull
bound
push
insl
outsl
fld
ljmp
sbb
mov
call
push
inc
add
mov
and
xchg
stos
xchg
clc
or
and
and
xchg
je
jg
stos
loop
imul
call
adc
int3
pop
adc
pop
arpl
xlat
mov
or
jmp
dec
pop
cli
jg
jns
mov
test
lds
mov
adc
icebp
repz
dec
jo
icebp
mov
mov
add
repnz
adc
xchg
outsl
test
ds
test
sbb
push
or
stos
repz
gs
cltd
ljmp
mov
mov
and
pop
ja
mov
movsb
mov
sbbb
jno
fnstsw
fbld
sbb
dec
sub
and
sub
pusha
sbb
xchg
clc
pop
fiaddl
jl
test
outsl
pop
pop
inc
sub
adc
lcall
mov
mov
sub
sbb
lcall
loopne
inc
pop
out
adc
mov
les
imull
xor
subl
popf
mov
das
sub
data16
jbe
out
fisubrl
sbb
jmp
mov
xor
stc
mov
inc
jnp
mov
mov
xchg
lret
aaa
cli
inc
jae
push
jle
adc
jns
push
loope
mov
loop
xchg
mov
dec
lcall
decl
cld
sub
and
notl
das
dec
icebp
mov
mov
into
add
inc
mov
fistl
call
push
cmp
scas
imul
loopne
jnp
imul
cmc
js
addr16
in
inc
jle
inc
addr16
out
add
lcall
jno
add
and
shll
lods
cmpb
mov
xor
test
mov
pushl
mov
sbb
and
adc
aam
hlt
cmp
mov
stos
pop
shl
mov
jmp
inc
lods
insl
jl
pop
dec
xchg
or
adc
aaa
jle
or
lds
aaa
icebp
in
mov
loop
lea
sub
test
mov
lods
mov
mov
mov
xchg
adcb
xor
adc
and
xor
pushf
stos
lods
lock
in
leave
xchg
out
sub
call
out
xchg
or
mov
fistl
inc
pop
push
jb
pusha
add
adc
push
call
adc
dec
ja
std
testl
inc
mov
inc
jnp
mov
adc
and
inc
lea
clc
add
and
sub
cmc
jmp
sti
push
mov
insb
dec
pop
bound
outsl
jg
in
mov
adc
mov
cmp
add
outsb
in
ja
sub
jns
mov
pusha
call
push
icebp
scas
add
movsb
lahf
jecxz
sub
shlb
push
jnp
dec
mov
push
pop
mov
incl
xchg
int
addr16
icebp
jmp
xor
sbbl
les
lods
mov
jle
xor
das
std
pushl
xor
clc
out
subb
fst
ja
push
mov
stos
pop
adc
incl
mov
add
gs
pusha
or
xchg
dec
cmp
in
jl
jmp
daa
fistpl
adc
movsl
pop
lods
cld
inc
or
jae
inc
ss
test
push
or
lods
shrl
shrl
mov
int
mov
cmpsb
mov
xlat
cwtl
inc
decl
xchg
xchg
and
out
mov
lock
mov
xor
mov
dec
es
loope
fidivs
fildll
pop
jns
mov
mov
cld
mov
cmc
dec
in
das
xchg
pushf
push
jecxz
adc
and
fs
repnz
add
lcall
push
inc
add
and
push
and
or
jmp
pusha
sbb
sub
call
inc
aam
clc
test
shrb
sub
or
ja
jg
dec
jno
scas
sbb
pop
cmpsl
adc
inc
pop
sub
mov
test
fucomip
mov
ja
hlt
dec
mov
mov
jne
xor
adc
mov
mov
popf
lea
shrl
add
sub
addb
push
mov
pop
repnz
mov
ljmp
xchg
cmc
in
aas
pop
test
setle
pop
cli
call
cmc
data16
lock
ret
stc
addr16
xor
outsl
call
imul
shlb
mov
ss
sbb
lods
movsl
push
pop
xchg
dec
cld
mov
mov
jge
orl
fwait
sbb
adc
popa
insl
cmpb
or
pop
dec
aam
cmp
add
inc
rorb
and
call
sub
ficoml
cmp
mov
mov
or
xchg
mov
inc
lahf
mov
sbb
ljmp
out
into
lods
adc
add
xor
xor
add
mov
pushl
loope
rcr
cwtl
aam
sbb
lahf
fwait
int
pop
pushf
pop
fnstcw
inc
pushl
cli
mov
push
xor
cmpsl
jmp
loop
dec
into
jge
stc
sbb
cmpsb
jo
jg
ljmp
movsb
popf
xor
jbe
bound
cltd
inc
std
adcl
cltd
push
outsb
fstps
xchg
clc
jg
lods
jecxz
and
jnp
jae
rcr
sbb
and
test
xor
into
aam
outsb
rorl
jg
dec
mov
push
rcrb
mov
push
testl
xchg
movsl
pop
arpl
sbb
pop
scas
hlt
jb
xor
int3
adc
jno
scas
jns
loopne
popl
call
insb
mov
lea
or
xor
inc
mov
icebp
ss
pop
and
xor
or
enter
decb
jg
data16
fistps
or
in
sti
sahf
bound
jne
outsl
sub
pusha
in
adc
jno
jg
incl
sbb
sarb
int3
test
leave
xchg
add
out
fisubs
test
jle
sbb
ljmp
add
cmp
jmp
test
sti
jae
scas
mov
ljmp
sbb
les
push
dec
fistpl
cmpsb
inc
lahf
sub
pavgw
xchg
adc
les
cli
mov
in
int
ret
or
lods
jle
dec
test
aad
xchg
and
call
insl
int3
cmc
insb
adc
dec
mov
jnp
popa
jp
xchg
fucomip
mov
bound
cmc
xchg
lahf
sar
repz
incl
or
hlt
fildll
repnz
xor
mov
dec
into
lea
jno
popf
incl
fisttps
inc
sbb
movsl
stos
or
stos
int
pop
mov
pushl
mov
mov
fcoms
xchg
sbb
jmp
fstl
push
mov
loop
push
sbb
jb
pop
pop
pop
ljmp
push
mov
mov
mov
fbld
fistps
sbbl
out
pop
jns
and
pop
mov
push
fs
outsl
dec
adc
push
cmp
ljmp
jp
push
sub
pop
or
jp
xchg
xor
stos
jmp
pushl
ret
shll
jg
repz
out
xchg
std
lahf
das
stos
cmp
incl
jo
out
dec
mov
daa
bound
icebp
mov
ljmp
pop
rcrb
fs
dec
fcompl
pop
pop
xchg
fisubs
pop
loop
lcall
sti
stos
inc
imul
je
mov
lret
leave
push
xlat
push
call
pop
push
pop
cld
subl
mov
leave
xchg
pop
or
hlt
filds
xor
lods
inc
js
repz
mov
ss
jb
stc
or
pop
mov
cmc
lock
and
out
addr16
sbb
movsl
xor
pop
cli
pop
mov
xchg
daa
xchg
loopne
fldl
jnp
mov
lods
decl
std
inc
pop
jg
xorl
adc
stos
pop
in
ret
jb
pushl
clc
imul
xor
add
filds
andb
mov
jmp
push
ret
xor
mov
mov
dec
xor
ljmp
pop
inc
fisttpl
xchg
aad
add
call
subl
mov
add
or
mov
xchg
jno
mov
adc
or
sub
les
ljmp
ret
test
scas
mov
sti
xlat
mov
shl
xor
jno
or
mov
dec
decl
cmp
and
cld
insl
mov
sbb
addb
decl
pop
cmp
clc
xlat
movsl
frstor
jnp
leave
adc
cmp
stos
cli
pop
dec
std
fprem
dec
fildl
xchg
test
call
push
mov
mov
jns
ds
cwtl
lea
ljmp
inc
enter
mov
ja
xchg
repz
jbe
jp
lcall
xor
stc
push
test
jb
test
fistl
mov
fwait
data16
clc
mov
shr
xor
xchg
jp
test
cltd
mov
add
outsl
xor
loop
aaa
adc
test
je
pushf
js
fs
out
sbb
cmp
xchg
popa
outsb
lret
mov
scas
adc
fistps
fists
jo
loop
pushl
fcomps
jmp
xor
sub
push
icebp
mov
and
adc
fwait
jg
incl
out
pop
or
jns
inc
mov
or
repz
clc
decl
lods
mov
adc
icebp
jl
sarl
pushl
add
mov
cmpsl
mov
ja
or
jle
jb
dec
sbbl
pop
pushf
in
jl
rclb
push
lcall
jg
sub
cmpsl
add
xor
cld
xchg
fwait
mov
dec
push
mov
cmpsl
jne
lods
push
lret
mov
cld
pushl
xchg
stc
in
xchg
pop
xchg
xor
pushl
aas
push
cmp
xchg
loope
mov
movsb
negl
xchg
lods
int3
iret
xchg
inc
cld
pushl
xchg
fxch
inc
in
cmp
mov
push
or
mov
call
inc
repz
das
imul
jb
aaa
or
mov
cmc
inc
stos
clc
dec
jg
push
or
lret
shll
pop
daa
sti
adc
add
adc
pop
call
adc
xchg
xchg
push
jl
fnstsw
dec
subb
sbb
jecxz
cmpsl
outsl
movb
mov
adc
sti
pushf
testb
movsl
jl
pop
insl
mov
adc
sub
in
icebp
mov
pop
into
add
inc
or
sbb
sub
imul
jp
mov
out
or
or
cmp
ljmp
lret
in
lahf
mov
scas
xor
jmp
ficoms
jge
mov
aad
push
lods
popa
imul
pop
les
insb
adc
test
fcomp
cmp
sbb
jecxz
cld
xchg
push
fwait
ret
xlat
and
sbb
hlt
cmp
in
enter
insb
mov
push
jg
sbb
jno
xor
shlb
push
xchg
sbb
mov
cmpsb
cltd
mov
gs
std
insl
test
movsl
mov
mov
xchg
aas
mov
cwtl
jp
sbb
mov
call
sbbl
pop
fidivl
dec
add
push
fucomip
or
dec
sahf
lods
mov
pushl
mov
push
or
sub
sub
lahf
xor
lock
lods
xchg
and
and
lcall
in
or
xchg
pushl
lcall
mov
adc
or
call
add
xchg
dec
mov
repnz
add
xor
aaa
clc
jg
dec
vmovd
movsl
iret
push
icebp
daa
mov
or
cmp
popf
dec
cmp
and
dec
rep
lea
add
lds
dec
sahf
mov
nop
divb
xlat
insb
daa
push
sbb
jmp
and
decl
adc
movsb
add
pop
dec
in
popa
aam
leave
lods
sub
shlb
pushaw
cmpsl
lcall
jmp
dec
adc
sub
push
and
xchg
nop
loopne
jmp
bnd
pushl
clc
cmp
adcl
jmp
insb
or
ret
mov
cmp
fnsave
cmp
cmp
stos
aam
mov
andl
out
outsl
pop
test
push
push
or
loope
dec
bound
fistpl
mov
bound
lea
xor
sub
nop
test
dec
inc
incl
sahf
sti
jae
xchg
mov
sbb
iret
sbb
js
movsl
into
cwtl
push
xchg
lcall
jmp
inc
aam
es
mov
and
push
jg
push
lods
lds
stos
call
sbb
jns
aas
jl
inc
fdivr
aas
rcll
add
or
and
mov
sbb
pushl
adc
cltd
je
subb
decl
mov
fs
and
movsb
add
push
pop
xchg
lock
mov
or
popl
sbb
fdivrp
pop
call
xlat
jle
dec
rcrb
scas
lds
jg
add
jl
outsb
cmpsl
test
rol
decl
jnp
mov
cmp
jmp
stos
lret
ljmp
pop
popa
mov
xchg
aas
jge
sbb
lods
out
jbe
sahf
pop
jb
mov
dec
mov
ret
incl
cwtl
push
inc
xor
sbb
cmp
xchg
shlb
mov
xor
je
add
push
jecxz
sbb
push
adc
stos
mov
add
idiv
add
rorb
jnp
mov
push
xchg
mov
icebp
call
mov
jnp
sub
xor
inc
out
outsl
inc
loopne
das
fdivr
ljmp
mulb
sub
iret
leave
les
xchg
dec
push
push
nop
ljmp
cmc
jmp
inc
push
pop
sbb
andb
aad
dec
xchg
clc
mov
inc
incl
push
negb
les
and
cmp
mov
inc
inc
scas
lret
lea
test
pop
call
jge
test
mov
cmpsl
fisubrs
cld
pushl
lcall
xchg
and
mov
pop
xor
sarl
lcall
sbb
adc
pop
sbb
lret
insb
push
inc
cmp
jmp
movsb
jno
in
imul
cs
orl
fimuls
sub
jmp
and
movsl
insl
jb
bnd
dec
daa
int
mov
add
or
fists
jb
jb
hlt
push
mov
xchg
incl
jo
xchg
dec
enter
pop
mov
clc
inc
das
es
call
pop
or
dec
mov
sub
ljmp
sbb
lea
call
aas
adc
push
mov
insb
cltd
lock
push
addl
rol
inc
faddl
cmp
and
les
add
xchg
jmp
sbb
stos
pushl
and
mov
stos
jo
ret
cmp
lea
xchg
shrl
jb
push
orb
ret
ret
iret
mov
jg
scas
add
das
sbb
fwait
imul
mov
hlt
repz
xchg
mov
or
jecxz
loope
pop
loopne
mov
mov
loop
and
dec
or
lods
rorb
out
push
mov
xchg
xchg
addl
mov
mov
sub
in
dec
push
fnstsw
xchg
dec
ret
js
jl
jae
jo
lret
jb
sub
outsl
icebp
xchg
insb
lods
cmc
jbe
adc
insb
sub
stos
gs
inc
mov
decl
pop
mov
addr16
sbb
ljmp
ljmp
mov
sbb
lret
push
sub
mov
push
adc
repz
fbld
cmpsb
stc
lock
jae
test
test
in
mov
decl
add
adc
mov
pushl
cli
push
addr16
rorl
xchg
inc
aas
adc
mov
xchg
cmc
dec
inc
lock
negl
sub
icebp
mov
pop
xchg
pop
loope
jle
insb
push
cs
leave
dec
sbb
or
loop
sbb
dec
mov
xbegin
fcom
push
iret
inc
or
jge
std
dec
scas
inc
pop
ret
outsl
std
into
les
jle
test
outsb
mov
cmc
jg
cmp
cmp
cmp
aam
inc
dec
add
std
call
sub
sbb
imul
lds
test
lcall
mov
jg
ds
mov
icebp
das
sti
cmp
stc
mov
mov
jmp
sub
mov
enter
pop
sbb
sbbl
jle
pop
xchg
xchg
adcl
test
call
jg
push
xchg
mov
rclb
aad
loopne
pop
incl
pop
add
sbb
test
jae
mov
das
cmc
sub
cmpsb
mov
cmpsl
push
sub
ljmp
pop
mov
lods
lahf
adc
or
iret
popf
in
ljmp
dec
in
test
call
push
int
int3
mov
insl
jo
push
sub
loopne
pushl
inc
mov
mov
dec
ja
ss
ljmp
ja
lods
call
adc
inc
ss
stos
mov
shll
add
outsl
fucomp
sbb
int
and
push
push
pop
loopne
push
imul
out
ds
cmp
adc
jg
movsl
xchg
andb
sub
xorl
shlb
lods
mov
test
jge
scas
pop
fnstcw
scas
in
pop
or
mov
pop
imulb
mov
mov
lds
sub
or
dec
iret
push
add
push
mov
push
adc
sar
mov
int3
xor
xorl
cld
pop
out
mov
aas
movsl
xor
repz
cmova
add
jmp
jecxz
mov
les
enter
jp
jno
call
or
jmp
cmpsl
adc
mov
dec
mov
adc
jle
dec
hlt
mov
sti
inc
cmp
sbb
lret
dec
sub
pop
push
loope
mov
daa
mov
jb
xor
push
lods
inc
sbb
and
aad
dec
and
dec
in
pop
leave
movsb
ret
into
dec
mov
ljmp
push
or
mov
sub
mov
adc
lock
sub
jae
mov
ljmp
lcall
jg
pop
pop
or
cmpb
push
movsl
popa
lods
mov
mov
dec
jmp
mov
pusha
or
mov
icebp
out
sbb
sub
lcall
hlt
movsb
fsubs
ret
gs
sub
jg
and
adc
arpl
ret
call
sbb
out
outsb
jecxz
xor
jle
addr16
cmp
enter
sbbl
lds
mov
mov
jg
jg
mov
pusha
movsb
mov
sub
shll
insb
pushf
out
push
sbb
rolb
or
mov
std
lcall
or
inc
cmpsl
or
sahf
out
jg
cwtl
in
fisttpl
call
cmpsb
icebp
jno
pop
cmp
mov
lret
int3
jbe
xchg
clc
lahf
add
inc
cli
and
add
out
mov
movsl
int
mov
daa
jno
sub
ja
dec
cld
cmp
dec
stc
push
adc
sbb
ljmp
incl
loop
push
pop
sub
arpl
leave
pop
mov
cmp
lcall
cmp
incb
cmp
or
rorl
xchg
mov
sbb
cmp
inc
cld
pushl
das
shlb
rorl
test
lcall
add
and
movsb
dec
dec
incl
outsl
popa
or
adc
lret
mov
inc
xchg
in
adc
cli
in
mov
mov
lock
icebp
xchg
lret
inc
sbb
and
cmp
pop
sub
out
lods
aaa
dec
mov
mov
or
pop
pop
data16
mov
in
dec
nop
daa
insl
pop
inc
gs
pop
cmpsl
rcrb
cmp
push
jmp
loope
mov
or
aas
pop
imul
lcall
and
test
movsb
jae
stos
sub
pop
lock
or
int
insb
jg
jmp
repz
into
push
in
mov
movsb
loop
sbb
add
inc
das
jb
loopne
pusha
stos
jg
mov
lret
aaa
test
loopne
ja
inc
cmp
cld
lahf
xor
dec
call
inc
std
cmpsb
fdivl
sub
mov
mov
jns
sahf
adc
mov
imull
jg
mov
sub
pop
mov
fistpl
jbe
ja
call
cltd
invd
cltd
jbe
leave
mov
movsl
clc
ret
cmp
add
rcrl
addb
stos
shll
pushl
jb
insl
cmpsb
jnp
mov
in
cmp
rol
cwtl
sbb
xor
jns
lahf
cmpsb
sbbl
push
ds
mov
adc
jg
mov
ror
mov
sbb
adc
ljmp
mov
sbb
hlt
imul
sub
rorl
rclb
and
cs
fcomi
mov
xor
dec
jnp
lret
dec
pop
popf
sub
jne
mov
addr16
test
aaa
or
push
mov
mov
cmp
imul
dec
cmp
js
add
xchg
cmp
jmp
dec
fwait
sbb
repz
mov
mov
mov
aam
xabort
test
xor
bound
inc
mov
dec
sti
mov
push
insb
std
lcall
mov
pop
inc
lock
add
test
or
jle
sbb
add
jmp
pop
movsl
stos
jmp
dec
and
mov
sbb
rclb
setle
adc
daa
and
iret
stos
mov
aad
movsl
pop
push
dec
and
mov
xlat
jmp
pushf
mov
push
je
mov
mov
inc
add
test
imul
push
sub
sahf
ret
mov
mov
hlt
in
fs
or
ljmp
stc
je
or
repnz
sub
mov
mov
adc
insl
icebp
jmp
imul
les
outsl
cs
call
push
pop
push
lods
add
int3
adc
push
push
sbb
lret
mov
fsubr
pop
aaa
addr16
push
push
cmpsl
fbld
ljmp
sbb
clc
dec
push
punpckhbw
imul
xor
ljmp
pop
ret
aam
push
in
jb
shll
mov
mov
decl
jbe
rcr
cmp
in
add
sbbb
and
call
mov
mov
mov
xchg
dec
adc
rorb
jg
stos
int
inc
add
mov
adcb
incl
mov
xchg
in
pop
stos
mov
mov
xor
mov
dec
add
jmp
incl
inc
fimull
cmp
rolb
push
mov
jns
mov
mov
call
inc
inc
jb
pop
dec
sbb
or
jb
inc
lahf
dec
jno
sub
xor
lcall
jmp
adc
daa
mov
out
mov
in
mov
pop
inc
adc
push
push
push
inc
pop
inc
lcall
sbb
inc
push
inc
ret
enter
xor
in
push
mov
decl
rep
push
fnstenv
or
cmp
lcall
lcall
mov
ret
sbb
jb
sbb
inc
lret
pop
and
out
pop
mov
sub
xorl
incl
xor
push
cltd
lods
adc
aas
mov
sbb
das
xor
pusha
lea
lds
clc
test
fstps
sarb
test
cmc
xchg
jo
insl
mov
hlt
mov
das
add
xchg
repz
jg
testb
popf
jns
pop
sub
fnstsw
jnp
and
jmp
les
sub
jb
cld
loop
stos
and
xchg
pop
mov
pop
mov
adc
insl
xchg
inc
push
add
mov
je
sub
in
jmp
mov
aad
xor
out
mov
fwait
and
es
dec
bound
ljmp
add
in
adc
adc
sbb
xchg
in
mov
inc
lods
add
or
cmp
and
daa
aam
jg
decl
xor
push
sub
mov
xlat
cmp
aad
mov
mov
pop
sub
jmp
inc
ret
pushl
cli
aaa
adc
mov
push
test
out
jp,pt
call
inc
push
mov
daa
xchg
repz
popa
xchg
rolb
xchg
dec
cmc
outsb
scas
pusha
clc
fnstsw
lcall
mov
cltd
flds
outsl
dec
arpl
pop
cmpsl
lcall
call
mov
sti
movsb
jmp
into
cmp
mov
mov
js
or
fstl
data16
repz
repz
cmp
cmp
pop
mov
lea
or
cmc
sub
pop
fdivr
lods
add
pop
loop
cs
sub
shl
in
lret
cmpsb
pop
and
sub
cmc
mov
mov
or
shlb
rorl
or
lea
xchg
sbb
pop
jmp
cmp
mov
aaa
lret
mov
leave
aad
in
xor
inc
fdivs
jbe
mov
jne
shlb
fisubrs
in
pop
cld
pop
fcomip
sbb
loop
hlt
or
xchg
test
lcall
adc
lea
sub
lock
lock
test
mov
lret
add
and
cmp
gs
lods
push
lods
push
scas
jne
mov
cmc
out
faddp
jg
movsl
incl
aad
push
inc
dec
pop
bound
inc
sbb
mov
jmp
fiadds
push
shrl
pop
sbb
mov
sub
lea
inc
sar
mov
pop
mov
out
xchg
lods
inc
decl
insb
outsb
test
inc
jb
rorl
incl
xchg
lret
jecxz
lret
int
movsl
loop
add
test
mov
mov
cmp
int
nop
dec
cmove
sbb
add
sub
jp
add
sub
mov
xchg
xor
aaa
arpl
cmp
ljmp
push
cmp
stc
jmp
jb
vpacksswb
fisubl
cmpb
ljmp
pop
mov
int3
addr16
xchg
cli
aad
sub
dec
shlb
je
inc
scas
aas
sub
cld
incl
hlt
cmp
ljmp
push
icebp
or
push
jns
and
popf
bound
pop
xor
add
mov
scas
add
lea
sub
outsl
adc
sbb
pop
insl
es
aas
data16
inc
mov
adc
out
inc
jno
addr16
sub
and
adc
inc
ljmp
push
aad
cmp
fnsave
cltd
or
ljmp
hlt
fs
and
fucomi
dec
lods
jmp
pushf
mov
fcmove
pop
sbb
pop
cld
lcall
nop
mov
lods
shl
cmp
incl
shrb
incl
sti
adc
push
insb
fs
in
mov
cmc
jmp
xchg
pushf
lahf
sahf
mov
ljmp
fmuls
shll
mov
mov
into
imul
push
shll
push
mov
jp
pop
notb
in
inc
ljmp
andb
add
popa
lds
dec
inc
push
shlb
cmp
in
xchg
pop
test
jle
sbb
jle
and
pop
mov
loop
idivb
jg
mov
lds
loope
jge
xlat
xchg
or
mov
or
incl
xchg
fdiv
cld
lods
jmp
fiaddl
in
mov
sub
loopne
clc
lods
dec
data16
push
mov
lods
ss
das
test
add
or
pop
cli
out
sub
dec
popf
adc
jo
xchg
addl
loop
fistpl
mov
fisttps
inc
inc
push
adc
leave
sbb
jmp
fwait
pop
mov
lods
and
andb
hlt
shl
xchg
enter
pop
xchg
rorb
lcall
sbb
fidivrl
cli
pushf
test
cli
mov
push
cmp
adc
loope
cmc
insl
ss
leave
jb
ds
fistps
mov
sub
sub
pop
out
mov
mov
lahf
xchg
and
jno
xchg
loope
insl
and
fsubrl
bswap
dec
fnstcw
xchg
into
rclb
pop
aaa
mov
sbb
out
cmp
loop
cmc
jmp
push
jg
pop
push
sub
and
call
pop
push
ret
decl
flds
lahf
mov
loopne
cli
ljmp
mov
push
push
pop
mov
mov
xchg
sbb
decl
sahf
pop
mov
mov
jnp
movsb
aaa
mov
lcall
cmp
inc
mov
stc
jb
and
lock
or
pushf
insl
outsl
lea
mov
ds
iret
add
movsl
decl
mov
aam
in
sub
and
or
fmul
rcl
pop
pop
adc
jmp
inc
fwait
cmpsl
call
push
mov
js
xlat
push
jmp
sub
pop
not
lcall
outsb
and
std
pop
ret
pop
mov
fwait
pop
mov
pushl
push
sub
sbb
iret
inc
out
roll
fcoml
orb
popa
orl
jl
mov
cwtl
stos
testb
jae
out
mov
cli
das
icebp
mov
push
inc
jmp
and
mov
add
cmp
mov
cmpsb
inc
push
mov
sub
fistl
push
sbb
shrl
test
dec
push
ficoml
outsl
mov
inc
push
inc
sub
aad
gs
out
imul
outsl
push
xchg
lret
cs
mov
pop
inc
test
add
mov
jmp
pop
dec
icebp
loop
sbb
bound
daa
jmp
mov
aaa
push
aad
std
imul
scas
cmpsl
int3
rcrb
testl
mov
leave
shll
xchg
shl
and
imul
mov
lds
cmpsl
imul
pop
sbb
fildll
xchg
xor
nop
roll
loope
aaa
and
cmp
cs
ja
xchg
jg
lock
push
mov
sub
mov
jge
ljmp
push
sub
ljmp
lret
or
into
mov
push
decl
cli
inc
hlt
adc
inc
lret
jle
popf
mov
jecxz
fiadds
out
mov
or
hlt
stos
cmpsl
push
or
inc
push
jne
cmp
pop
jg
ficoml
jmp
and
fucom
add
iret
cmp
adc
cli
mov
movsl
dec
fistl
mov
sbb
mov
orb
pop
mov
add
cld
in
push
xchg
jmp
incl
repnz
orl
fst
and
mov
push
gs
pushl
mov
rol
cld
xchg
lds
out
jbe
aas
push
cmpb
xchg
ret
add
sbb
ds
aad
mov
and
mov
xchg
aas
mov
dec
inc
sti
roll
add
std
pop
stc
pop
xchg
inc
stos
and
xor
stc
repnz
pop
mov
adc
dec
pop
jle
stc
xor
jge
cmp
xchg
xchg
lds
jmp
cld
cld
push
add
pop
rcl
scas
mov
and
inc
and
push
pop
outsb
pop
shll
cmpsb
mov
pop
cli
jmp
pop
dec
int3
mov
mov
push
pushf
push
push
push
pushf
add
ljmp
jo
hlt
mov
mov
test
pop
inc
stos
lret
sub
mov
aam
adc
pop
mov
fwait
dec
dec
frstor
lods
loopne
subl
jmp
jmp
push
test
cmpsl
testl
outsl
cmc
jmp
lds
inc
jl
stc
pop
mov
pop
inc
out
or
jg
imulb
sub
xor
and
jne
mov
mov
pusha
push
ljmp
mov
sub
pop
ret
xchg
mov
adc
sbb
xchg
sbbl
loop
call
jg
adc
ds
xlat
xor
in
stc
das
icebp
inc
dec
ret
in
leave
mov
jae
xchg
mov
or
mov
sbb
fcmovnbe
sti
popf
nop
or
movsb
mov
inc
mov
in
inc
je
pop
cld
jg
leave
loop
into
out
ret
adc
fcompl
sbb
jne
or
incl
inc
mov
inc
add
inc
cld
xchg
ljmp
aas
push
sub
cmp
xor
fildl
inc
je
jp
cmpsl
sahf
pop
inc
dec
mov
mov
dec
pop
push
xor
pop
adc
dec
fidivs
dec
stos
adc
call
push
dec
mov
lods
mov
push
cltd
pop
mov
shr
cmpsb
sbb
mov
mov
call
mov
insb
inc
jnp
mov
int3
das
push
pop
in
aam
jg
das
lcall
jge
in
ds
inc
lcall
dec
insl
jno
adc
sub
push
and
cmp
mov
ljmp
inc
mov
add
fdivrp
dec
sbb
sub
cmp
sub
lds
mov
push
pop
stc
fcomi
add
xchg
mov
adc
jmp
jp
pop
test
popa
out
push
out
ljmp
call
adc
adc
ds
dec
loope
pop
lods
mov
jmp
push
mov
lods
mov
ror
lock
mov
test
inc
aad
decl
mov
loope
dec
dec
imul
jge
scas
test
call
jecxz
call
mov
repnz
mov
test
nop
stc
out
fiaddl
pop
mov
sub
jnp
insb
pop
movsl
lahf
pop
jns
loop
in
popa
jmp
inc
insl
stos
mov
pop
lds
aas
movsl
leave
adc
pop
or
iret
fistl
lcall
jge
inc
push
cmp
push
repz
jae
ljmp
rep
pushf
pop
or
adc
incl
aaa
mov
inc
outsl
imul
sub
mov
rcr
mov
cmc
ss
test
cmp
xchg
outsl
icebp
jmp
cmpsl
orb
les
int
jbe
pop
fists
icebp
cwtl
ljmp
hlt
jmp
inc
jne
mov
inc
push
push
sbb
pop
inc
and
ljmp
push
mov
aad
dec
nop
adc
inc
push
or
f2xm1
repnz
stos
loop
dec
jp
mov
push
test
imul
mov
sbb
scas
jne
xor
mov
pushl
push
mov
rcrb
xor
and
es
stos
adc
or
in
mov
test
cmpsl
lcall
outsb
or
das
jl
out
xor
call
inc
cmc
push
test
xchg
xlat
cmp
outsb
sub
jmp
cmc
mov
xchg
cwtl
cltd
data16
fcom
and
fidivrs
stos
std
insl
cli
filds
loop
sahf
fimuls
xchg
movsl
repnz
cmpsl
sbb
mov
adc
push
mulb
stc
and
jb
fdivp
incl
inc
ljmp
addr16
mov
pop
or
jmp
clc
das
insb
xchg
sbb
xlat
cmp
sub
jmp
lahf
mov
pop
stos
fbld
xor
pop
push
call
xor
pusha
mov
adc
or
lock
and
push
sub
mov
sbb
fcoml
cmp
aam
mov
jecxz
jg
mov
cmpsb
jne
pusha
and
movsl
decb
loope
movsb
or
into
adc
fdivs
mov
mov
jp
cmp
add
iret
mov
movsl
int
mov
fxch
arpl
je
insl
mov
sbb
lock
fidivs
push
xchg
push
add
das
push
mov
pop
push
imulb
cmpsb
cltd
subb
jge
xchg
das
daa
jns
nop
xchg
pop
inc
nop
adc
cmp
sub
inc
inc
mov
adc
leave
fcompl
lock
test
xchg
pushl
jo
mov
xor
push
incb
sbb
mov
fisubl
ret
std
call
scas
enter
cmp
adc
pop
jg
incl
inc
insb
add
lahf
push
and
out
add
daa
mov
incl
fs
sbb
nop
xchg
jl
hlt
repz
xchg
push
push
loop
mov
aad
ljmp
xchg
cs
ss
and
xchg
test
loop
ljmp
cld
push
popa
sbb
mov
sbb
pop
xchg
movsb
ret
sbb
jge
clc
jmp
lds
test
jg
frstor
and
mov
call
or
jg
sbb
cmp
roll
rorl
iret
jmp
jecxz
adc
mov
xchg
mov
adc
inc
icebp
xchg
ret
jl
xlat
mov
mov
shr
arpl
sub
fdivl
aad
add
mov
add
negb
push
jns
mov
mov
loop
cs
shll
outsl
fucom
dec
and
adc
mov
decl
iret
xchg
nop
dec
mov
cmpsb
dec
fbstp
pop
inc
mov
and
mov
ljmp
mov
int
lods
jb
and
int3
cwtl
jle
daa
vdivps
dec
fmull
sub
push
jmp
icebp
pop
xchg
jo
or
xor
dec
out
or
jp
mov
insb
std
movb
aas
cmpsb
aaa
nop
xchg
inc
pop
or
jg
or
lret
cmpb
mov
in
loop
les
aam
and
xchg
sbb
aad
inc
out
inc
aam
and
sahf
es
cli
lods
mov
dec
mov
xchg
in
incl
sar
rolb
add
int
outsb
dec
sbbl
cmpsb
adc
imull
call
aad
mov
arpl
jge
mov
ret
je
mov
dec
inc
dec
mov
lcall
repz
mov
dec
lcall
ljmp
sbb
verr
enter
mov
daa
fistpll
dec
mov
repz
lcall
aad
addb
mov
frstor
mov
in
cmp
loopne
mov
decl
repnz
dec
jnp
je
flds
pop
fadds
dec
clc
decl
jge
mov
movsb
sub
dec
cmp
cli
mov
push
rorb
cmp
int3
aas
int3
jg
call
nop
clc
cltd
aad
dec
pop
add
pop
test
movsb
scas
push
jb
jle
jg
sbb
in
je
lods
adc
pop
das
inc
ss
xchg
pusha
cs
pop
lcall
test
jmp
adc
dec
xchg
xor
lea
xor
sbb
js
xchg
aaa
js
ljmp
gs
arpl
mov
in
mov
decl
orb
xor
fbstp
push
adc
mov
pop
and
mov
nop
cmpsl
inc
loop
ljmp
adc
decb
ljmp
pushl
mov
out
mov
cltd
inc
jbe
mov
out
inc
int
jmp
and
decl
xor
xor
pushf
int
fisttpl
clc
xor
xor
lcall
inc
test
in
push
mov
sbb
sarl
jl
outsl
std
ljmp
mov
add
add
cmp
test
int
ljmp
aaa
mov
scas
dec
xorl
and
mov
pop
mov
or
out
ja
mov
jmp
mov
outsb
push
push
cmp
or
jg
das
cmpsb
aad
adc
push
movsl
imulb
xchg
pop
xor
mov
pushl
aam
add
inc
in
xor
jns
out
or
incl
clc
movsl
jo
or
enter
cli
ljmp
cli
sbb
mov
pushf
cltd
adc
cmpsl
int
inc
or
test
fcoml
shll
test
jg
lahf
stos
mov
pushf
std
xchg
movl
call
or
dec
sub
jne
xorb
jge
cli
inc
dec
cmp
incb
pop
push
cmp
mov
jmp
xorl
push
pop
mov
adc
or
and
outsb
xor
fimull
frndint
inc
in
pop
cmp
rolb
xchg
push
or
ljmp
icebp
call
popa
inc
jp
sub
das
jle
dec
xchg
testb
aam
pop
push
jo
and
lcall
add
movsb
pop
and
scas
adc
iret
pop
int
adc
sbbl
hlt
xchg
mov
cmp
xchg
incl
incl
insl
jmp
fdivrl
cs
mov
incl
dec
repnz
add
cltd
hlt
pop
jl
push
aam
mov
sub
loop
cmp
push
and
jle
stos
mov
into
shl
in
and
shl
call
pushf
pop
push
push
cmp
enter
jle
lods
or
cs
addr16
loop
sub
mov
mov
pop
cmp
and
lcall
xchg
jnp
and
add
sbb
push
je
jecxz
in
mov
pminub
ja
sbb
sbb
into
mov
inc
mov
push
xchg
dec
stos
lahf
insb
arpl
inc
mov
mov
mov
into
pushf
cwtl
sub
in
imul
pushl
movsl
out
out
push
dec
mov
add
push
add
sbb
lret
xor
cltd
lds
icebp
pushl
fsubl
mov
xchg
mov
stos
xor
push
nop
jg
ljmp
pop
les
push
icebp
cmp
cmp
mov
dec
cli
fs
add
mov
pop
inc
aam
mov
imul
mov
test
mov
imul
idivl
outsl
sbb
or
sarb
out
and
jnp
sar
lcall
lds
jg
push
bound
lea
pop
scas
gs
mov
leave
shr
ljmp
test
ds
dec
jge
loop
rorb
ret
push
das
icebp
mov
bound
mull
call
mov
xchg
ror
es
fldl
xlat
or
test
test
jg
lahf
mov
mov
mov
xlat
mov
sbb
mov
xor
jl
notb
data16
mov
jg
sub
lcall
popa
ja
push
ficompl
sar
mov
adc
lock
and
mov
movsl
arpl
jmp
mov
xchg
mov
mov
rclb
mov
sbb
cmp
and
jp
jp
std
lods
ljmp
pusha
mov
adc
or
repz
xor
dec
shlb
lcall
shl
xor
fistpll
in
hlt
and
dec
movsl
mov
sarl
dec
call
pushl
sahf
add
adc
lret
jae
jg
stos
fcom
jge
dec
add
sub
incl
cltd
mov
add
sub
pushl
in
xor
or
pusha
les
or
inc
ljmp
lea
pop
jno
pop
leave
pop
das
icebp
call
dec
in
mov
push
orl
inc
push
jmp
mov
int3
in
cs
daa
ja
and
ljmp
cli
or
arpl
mov
icebp
testb
add
inc
push
sub
mov
push
mov
pop
das
mov
cwtl
fnclex
and
add
insb
dec
inc
arpl
leave
or
jg
decl
xor
aas
ja
scas
mov
pusha
inc
stc
imul
stos
arpl
jmp
mov
dec
sub
sub
shl
pop
xchg
xor
rorb
ljmp
lock
aaa
xchg
inc
int3
mov
rcrl
sbb
push
outsb
cmpsb
pushf
mov
in
xor
cmp
insb
mov
inc
sbb
jne
sub
loopne
loop
fs
in
mov
incl
jnp
cmpsb
sub
adc
cmpsb
lods
push
cmp
mov
or
lods
adc
fstps
inc
sbb
lret
out
cwtl
in
lahf
and
clc
fmul
jo
gs
push
mov
sar
adc
jle
insl
push
xlat
enter
je
movsl
aas
outsb
loopne
clc
call
aaa
cli
xor
lret
pop
adc
bound
fldenv
cld
sbb
dec
clc
xchg
xor
mov
push
fwait
sub
inc
cmc
mov
add
add
lcall
or
xor
stos
loope
mov
mov
or
imul
hlt
test
inc
pop
push
adc
sbb
sti
adc
incl
sbb
xchg
ffree
decb
test
call
mov
fldl
cmc
xor
std
aas
lods
sahf
ja
add
add
loop
add
mov
into
fwait
xor
adc
jp
push
imul
xchg
and
cmp
icebp
add
test
xchg
idiv
les
jl
shlb
cs
cmpl
mov
pop
jmp
lcall
xor
call
mov
imul
mov
jl
jmp
fwait
lcall
notl
outsl
push
push
enter
jg
sbb
decb
lcall
fldl
or
out
sub
cmp
xchg
lret
insl
cmp
mov
testl
sub
xchg
sbb
lods
xchg
clc
push
scas
cmpsb
push
jmp
ljmp
popf
push
fnstenv
cmpsl
or
scas
repnz
jns
xchg
fidivl
inc
fistl
mov
lcall
test
mov
fwait
mov
and
fiadds
mov
scas
lcall
das
cld
and
mov
push
add
jbe
add
faddl
dec
jmp
std
inc
test
xchg
push
test
and
and
xchg
xor
outsl
aad
xchg
and
mov
mov
fcmovu
mov
mov
lcall
adc
adc
and
xor
ljmp
lock
sub
dec
pop
loop
insl
xor
pop
push
cs
fwait
ret
sub
jg
dec
push
cmp
add
aam
sbb
mov
lock
xchg
nop
and
shl
mov
or
lret
in
outsb
outsb
out
lds
icebp
jge
mov
int
jnp
decl
xchg
sahf
add
or
pop
mov
aam
push
js
pop
mov
imul
shrb
roll
sbb
cltd
jl
pushf
push
shlb
pop
stc
push
cmp
notb
popa
enter
jg
pop
add
aas
jne
push
loopne
jp
mov
mov
pop
jp
fnsave
cld
js
xchg
cmp
mov
dec
push
sbb
and
lcall
pop
out
je
xor
in
sub
jge
addr16
sti
test
push
je
rcrl
pop
aam
pop
ljmp
int3
push
xor
fabs
mov
jg
fimuls
mov
and
and
aas
out
lret
call
adc
xchg
and
stos
stos
js
add
mov
pop
dec
insb
imul
ljmp
jmp
popf
sbb
movsb
lret
sub
pop
bound
sub
push
push
lock
incl
pop
ja
mov
sar
cmp
cmp
pop
aas
and
adc
jbe
shrl
pop
fs
sar
pop
jbe
stc
test
sub
lock
ja
mov
rsqrtps
call
sbb
push
outsl
das
arpl
out
adc
pop
cmp
push
xor
jne
mov
pop
or
ret
push
popa
cmp
in
sbb
inc
xlat
mov
dec
jno
cmp
cmp
ds
xchg
jp
or
pop
mov
out
lds
in
xor
xchg
sub
mov
cmc
jae
adc
lahf
faddp
push
mov
xchg
mov
xor
sbb
add
pop
pushl
sub
and
mov
aas
ljmp
pop
and
push
lods
push
add
mov
insb
test
lret
push
lcall
jg
jmp
cwtl
fsts
test
add
add
pop
ror
negl
jmp
lock
jb
cmp
pop
sbb
aam
es
les
std
jmp
call
jmp
insl
mov
out
inc
xchg
or
lea
add
test
cmp
std
outsb
xor
jl
push
adc
outsl
cmp
negb
sbb
std
jp
cmc
int
hlt
sbb
pop
xchg
mov
es
les
add
mov
das
movsb
cltd
sbb
push
inc
call
mov
sub
cmp
nop
sub
ljmp
cmp
insb
jmp
mov
pop
das
aas
clc
jns
pop
mov
mov
xchg
push
arpl
mov
jp
aam
inc
shrl
add
data16
fsubs
cmovbe
jb
in
movsl
decl
pop
in
call
nop
add
popa
fucomip
popa
push
decl
repz
sub
outsb
jg
add
push
popa
leave
jnp
sub
fisubl
and
add
mov
cltd
pop
int
mov
addr16
dec
jo
repz
push
mov
cwtl
sub
lods
int3
stos
lcall
mov
push
aad
adc
adc
pop
jb
rep
je
jnp
rorl
hlt
jmp
hlt
add
and
sbb
js
loope
sub
leave
jecxz
lcall
push
pop
push
lret
xchg
cmpsb
test
cmp
mov
out
or
daa
sbb
cli
pushl
loopne
cmp
dec
popf
psrld
cmp
mov
sbb
je
jmp
or
mov
mov
jp
mov
and
inc
gs
sbb
pop
push
call
xor
loop
dec
std
decl
cli
pushf
fwait
scas
pop
sbb
or
pop
fisttpl
add
add
jle
sub
mov
roll
sub
movsl
test
jmp
add
dec
sbb
mov
movsl
call
lcall
add
and
jp
xor
mov
std
mov
sbb
or
adc
xor
testl
data16
push
add
sbb
xchg
jle
inc
pushf
call
push
adc
sbb
hlt
in
test
adc
loop
dec
jno
daa
mov
pop
idiv
call
sbb
test
or
stc
xchg
sarl
inc
xorb
inc
sahf
add
cld
lcall
pushl
mov
std
push
mov
dec
ja
inc
mov
dec
int
pop
faddl
push
pusha
popf
and
jmp
jno
nop
cmpsb
xchg
dec
mov
push
dec
ds
popf
or
fcompl
or
mov
shl
add
divb
xlat
mov
std
sub
pop
mov
sbb
lods
iret
inc
cmp
xchg
mov
pushf
call
cmpsl
sbb
cmc
mov
sub
push
add
and
out
jbe
mov
stos
lret
data16
jne
mov
jns
lods
es
sub
sub
and
dec
sub
mov
es
ljmp
lods
ret
mov
sti
push
and
movsb
add
jg
sub
pop
dec
fsubrl
push
lods
mov
call
jmp
cmp
nop
test
movsb
outsl
jg
xchg
xchg
jp
mov
mov
mov
dec
mov
push
pop
dec
cmpsl
inc
xor
mov
movsl
repz
incl
mov
pop
pop
mov
and
xchg
call
or
incl
into
mov
add
push
stc
mov
mov
popf
test
add
into
ficomps
pop
pop
adc
lret
out
xor
jg
int3
inc
out
imul
adc
fcomi
cmpl
ljmp
test
shll
dec
subb
mov
aam
repnz
mov
test
cmp
mov
xchg
mov
loopne
shll
loope
into
repz
inc
hlt
jle
iret
jns
add
lock
int3
inc
icebp
frstor
cld
lcall
out
push
ja
sarl
cmp
cmp
add
decl
pop
push
jecxz
divl
cmpsl
mov
inc
rolb
hlt
iret
cmp
jnp
xor
imul
lcall
pop
cmp
xchg
sbb
inc
jns
xchg
out
jle
jge
lcall
xchg
rcl
push
out
xor
mov
pop
jne
ret
xor
jae
cld
daa
mov
int3
mov
outsl
inc
push
fidivrs
xchg
arpl
pop
add
push
icebp
ss
xchg
cwtl
imul
xchg
in
das
jp
cmp
out
aam
pop
mov
iret
lods
dec
bound
test
out
push
pop
jg
jmp
push
xchg
adc
fiaddl
test
cwtl
insb
sub
lods
ljmp
std
push
movsl
adc
pusha
in
std
xchg
test
mov
decb
mov
sar
add
pusha
sbb
ja
add
rorl
ljmp
daa
push
in
xchg
vpgatherqd
add
sarb
mov
xchg
jl
aas
test
jg
pop
pop
jnp
aad
xchg
sub
out
mov
call
mov
sub
fdivl
xchg
mov
mov
xor
inc
cmp
clc
pop
jg
sbb
xorb
mov
pop
cltd
sbb
cmc
fildll
jns
sub
jnp
jle
fs
ljmp
out
and
mov
scas
stos
les
rolb
mov
fcoms
inc
inc
cld
jmp
jb
out
mov
stos
push
push
add
popf
lcall
imul
inc
in
ljmp
idivl
in
inc
dec
out
push
and
xlat
iret
or
int3
sub
mov
lock
out
ficoms
data16
ret
adc
outsb
pop
jp
sub
mov
repz
jg
pop
ljmp
out
xchg
imul
fsubp
aad
pushl
push
clc
enter
fstl
stos
xchg
sbb
sbb
sub
push
mov
or
fisttps
outsb
mov
stos
scas
dec
out
and
cli
dec
pop
clc
mov
inc
subl
lock
adc
decl
pop
ja
daa
shlb
or
xor
xchg
icebp
inc
movsb
adc
xchg
sub
xor
ss
pop
test
clc
mov
lcall
or
test
in
cmpsb
add
enter
jg
or
sub
out
ss
fstp
xor
add
scas
xor
clc
or
lock
sub
ds
mov
pushl
add
bndldx
push
mov
scas
idivl
or
push
sub
inc
fildll
jmp
mov
mov
adc
ljmp
jl
mov
xchg
inc
inc
jae
inc
pop
dec
sbb
pop
xchg
loopne
adc
stos
mov
mov
jl
scas
push
in
ljmp
dec
test
adc
ret
rcll
out
push
add
pushl
sub
lret
leave
sarb
cmp
loope
ljmp
cld
xlat
cmp
arpl
jecxz
pop
dec
fsubr
aas
out
sbb
xchg
mov
decl
xchg
sbb
or
subb
fsts
addb
xor
es
test
out
sub
sub
jno
ret
jno
dec
adc
mov
mov
subl
or
mov
mov
test
mov
sbb
test
pop
push
sbb
fisubs
lds
clc
cmp
inc
les
mov
jle
ds
lahf
jo
fstl
mov
leave
ss
stc
adc
and
or
jnp
jg
or
lea
inc
sub
xorl
sub
clc
scas
inc
outsl
out
push
clc
out
cs
lcall
cmp
mov
fsubs
cmp
sbb
in
shlb
aas
ljmp
icebp
jo
xor
mov
push
mov
inc
and
das
mov
add
fdivp
and
mov
notl
jno
pushl
movsl
inc
sbb
jae
call
jmp
add
lahf
jecxz
fidivrl
jecxz
lahf
mov
or
pop
ljmp
inc
movb
sub
inc
mov
incl
jl
mov
push
dec
in
mov
aas
movsl
outsb
pop
sbb
push
jns
popa
insb
adc
pop
add
pushl
ret
test
int
call
cld
pusha
add
mov
cmpsl
mov
int
bound
sub
jmp
hlt
enter
cmpsl
cmpl
jmp
dec
ficoms
cmp
dec
and
icebp
ljmp
loop
shll
mov
mov
pop
push
fcomps
leave
decl
sbb
sbb
arpl
mov
aaa
loopne
data16
add
out
sar
sub
call
cwtl
or
loopne
stos
and
into
push
push
add
inc
sub
xor
xor
mov
int
jecxz
cmc
iret
scas
fsubrl
mov
inc
pop
dec
dec
dec
and
sub
or
ljmp
imul
es
hlt
mov
aad
decl
fsubl
mov
out
repnz
int
in
rorl
scas
cli
adc
incl
repnz
add
jmp
es
ljmp
jo
sarl
icebp
push
fs
sbb
stos
inc
sbb
roll
dec
test
icebp
outsl
hlt
pop
push
jns
mov
push
lcall
sub
pop
fimull
imul
and
pop
and
sub
decl
xlat
mov
mov
push
cmp
insb
inc
insl
and
call
les
scas
shl
call
xlat
outsl
cld
pop
cwtl
xor
sub
pusha
inc
out
mov
int3
mov
xor
push
push
fisttps
push
shr
sbb
cmp
lds
inc
mov
inc
jg
es
dec
jno
mov
jmp
fildl
shr
fcomi
clc
or
aad
testl
add
inc
mov
xchg
pop
outsl
push
subl
faddl
pop
mov
jb
bound
ja
mov
sbb
jo
mov
lcall
in
je
xchg
lea
mov
inc
push
xchg
mov
addr16
das
add
movsb
add
and
lret
ss
jmp
cmp
xchg
icebp
mov
mov
mov
sub
mov
std
jmp
xor
jne
cmpl
adc
gs
cmc
lea
mov
fcmovnb
ret
int3
add
lahf
je
mov
inc
test
repnz
push
outsl
icebp
jmp
out
pop
mov
dec
std
and
icebp
sub
loopne
lcall
aas
xchg
sbb
in
cmp
cli
and
xchg
fisubs
xor
dec
push
loopne
decl
dec
std
or
paddd
aas
mov
sbb
addb
loopne
inc
push
mov
int
xchg
inc
fmul
lea
jns
aad
jmp
lcall
push
and
jne
sbb
test
jg
mov
mov
shlb
movsl
jg
push
leave
add
mov
cmp
mov
insb
mov
sti
and
shr
in
ret
adc
jmp
lcall
movsl
js
movsl
cld
inc
push
push
pop
ja
rol
xor
das
scas
mov
add
cli
aam
stc
cmc
inc
arpl
add
pop
mov
push
mov
sar
sub
scas
loop
cltd
push
mov
push
ljmp
popf
mov
mov
mov
cmp
loopne
or
mov
mov
rorb
adc
jg
jmp
mov
cs
sub
xor
ja
adc
jg
ljmp
mov
rep
add
jno
xorb
xchg
test
push
ret
inc
iret
xchg
pop
loop
decl
mov
ljmp
imul
pop
inc
and
add
incl
ljmp
pusha
out
jnp
leave
fcoms
cmp
popa
stos
ljmp
cli
sbb
outsb
cmp
xchg
std
out
incl
pop
fmul
mov
pop
xchg
cmp
cli
imul
and
inc
dec
into
rorb
push
mov
sar
call
ja
mov
pop
or
mov
negb
incl
insl
push
xorb
dec
cmpsb
loop
insl
inc
or
xchg
inc
inc
sbb
jge
adc
inc
lahf
into
or
pop
iret
negb
cmp
push
ljmp
adc
mov
mov
and
aaa
mov
mov
lcall
mov
dec
mov
pop
iret
roll
cmp
cld
dec
pop
xor
pop
mov
mov
stos
out
ja
fistl
aaa
and
mov
cli
std
addr16
lret
or
ficomps
scas
push
ss
jl
out
push
ret
lods
push
decl
rclb
mov
imul
pop
jmp
jg
stc
ds
shlb
insb
aad
repz
movsb
out
adc
mov
jbe
test
dec
lock
ljmp
shl
dec
cmpsb
cmp
jle
out
mov
inc
push
repnz
push
cmp
and
adc
adc
outsb
mov
jb
inc
aaa
mull
shrb
pushl
jp
xchg
int
pop
and
sbb
rcr
out
imul
push
cmp
addr16
cli
pop
ljmp
int3
mov
fwait
ja
dec
repz
and
frstor
sub
cli
mov
int
and
inc
addr16
xlat
add
or
push
sbb
jns
mov
stc
cld
jg
push
mov
cld
push
insb
ljmp
inc
mov
xlat
pop
mov
lret
aad
outsl
fdivs
arpl
jge
stos
out
jmp
loop
pop
jmp
repz
subb
xchg
pop
jb
mov
test
cmpsb
jge
pushf
test
fnstsw
mov
xchg
push
xor
les
and
inc
incl
int
mov
test
decl
sbb
movsb
dec
insl
rcrl
leave
repz
mov
test
lds
push
mull
call
cmp
icebp
out
mov
ss
repnz
addr16
and
rcr
clc
incl
cmp
fisttps
imul
add
xor
sahf
loope
aas
mov
add
xor
rcll
jmp
or
out
pop
jg
mov
push
adc
inc
push
adc
ljmp
mov
jg
lret
adc
sub
cmp
addr16
cld
mov
pop
mov
imul
sbb
cmp
leave
jmp
clc
lods
call
ljmp
and
int3
jo
das
icebp
lcall
pop
mov
dec
push
mov
nop
or
jnp
push
icebp
sub
and
pop
test
or
ljmp
cmpsb
mov
inc
mov
and
pop
or
mov
into
jg
test
add
mov
sbb
outsb
int
outsl
test
mov
sbb
xchg
inc
xlat
adc
and
notl
cmp
fistps
or
push
mov
inc
push
adc
sub
cli
incl
xchg
xchg
add
adcl
add
xlat
test
dec
inc
cli
lcall
stc
sbb
adc
mov
xlat
imul
call
mov
pop
ficomps
lahf
in
inc
or
rorl
lcall
test
xor
sub
mov
push
add
inc
and
mov
shll
lcall
fcoml
in
and
outsl
mov
mov
iret
mov
ja
test
pushl
adc
jge
scas
ficomps
andb
iret
cmpl
fistl
xor
pusha
lock
dec
sub
addr16
outsb
fdivr
ljmp
xchg
pop
cli
xor
xor
mov
sbb
out
jecxz
out
fwait
pop
push
jg
call
mov
adc
dec
pop
sbb
inc
dec
push
lahf
sub
stc
mov
push
dec
std
mov
lret
xchg
xchg
jae
push
ljmp
xchg
push
insl
ja
ljmp
adc
and
and
fistps
dec
icebp
inc
shrl
lret
pop
or
jg
in
movl
or
ds
xor
adc
loopne
das
hlt
incl
in
pop
or
xor
push
out
cld
mov
fistps
mov
mov
mov
adc
mov
lcall
mov
or
mov
xchg
xchg
push
enter
popa
test
cmpsb
mov
into
lea
mov
mov
jle
pop
es
mov
mov
mov
push
push
outsb
stc
popf
aaa
mov
aad
out
out
xor
loope
mov
int
jge
call
idiv
arpl
jbe
arpl
jnp
mov
push
aas
jle
lcall
xchg
jbe
ja
adc
stc
clc
add
test
inc
shrl
lcall
scas
cwtl
push
enter
imul
aam
and
mov
mov
into
xchg
out
cmp
fnsave
mov
pop
stc
sub
fstps
jmp
push
js
pop
je
jbe
popa
mov
movsl
jo
inc
imul
push
jg
outsl
mov
in
jle
fdivs
lcall
mov
sub
dec
call
pop
xor
mov
inc
dec
jecxz
ret
stos
pop
gs
stos
lret
jg
aas
jecxz
cmp
mov
inc
les
pop
test
jmp
cmp
inc
mov
adc
bnd
pop
push
jno
dec
mov
lahf
push
mov
sbb
stc
sbbl
incl
cmc
dec
cmp
mov
movsb
pop
xchg
fildl
popa
movsl
jbe
jg
jmp
or
xchg
sbb
xchg
ficomps
jo
in
sbb
jb
test
fdivrl
test
pop
adc
sahf
mov
icebp
mov
mov
iret
dec
pushl
ds
scas
jg
xchg
cmp
adc
mov
jmp
jae
push
jne
in
pop
cli
not
testl
test
push
loope
mov
push
ljmp
lret
push
pop
mul
outsl
pop
push
out
std
outsb
je
jb
xchg
jne
mov
mov
out
js
or
and
xchg
jmp
inc
icebp
pushl
shlb
jbe
out
or
push
stos
push
push
inc
xchg
je
xor
in
push
fistpll
adc
xor
movsl
add
icebp
mov
lahf
mov
imul
push
gs
xor
push
push
mov
inc
repnz
cmp
sbb
pushl
cmc
imull
xchg
mov
das
leave
cmpsb
sub
std
jmp
xchg
mov
jno
lds
das
pop
sub
fcomps
inc
ljmp
loop
add
stos
jg
jle
cmp
or
lods
fs
mov
loop
mov
fucomip
inc
fbstp
pop
cmp
xchg
push
int
jnp
movsl
fdivrp
inc
outsl
jmp
jne
outsl
adcl
cld
mov
jge
pop
xchg
call
jecxz
fisttps
stos
incl
jb
and
mov
shll
sub
int
mov
movsl
nop
dec
fsubs
out
mov
xchg
sar
incl
repnz
mov
int3
test
fldpi
mov
adc
push
xchg
out
or
cs
push
ss
jg
std
adc
pop
lcall
adc
sub
data16
nop
es
jg
stos
mov
cmpsb
inc
lret
xor
mov
incl
push
jb
lret
stos
inc
sbb
mov
pop
movsb
add
ljmp
inc
or
push
ja
jo
cmp
inc
add
xchg
cmp
mov
fldt
pop
mov
aas
push
adc
cli
imul
in
fisttpl
inc
xor
outsl
cmc
decl
clc
dec
gs
shrl
cmp
aam
pop
cmp
icebp
xchg
add
xchg
and
clc
inc
sbb
int
mov
sub
push
and
sub
jb
call
cli
jmp
and
mov
sbb
mov
test
xchg
popf
test
xor
mov
push
sbb
mov
test
lahf
jae
pop
in
ss
loop
in
push
cwtl
test
int3
and
pop
pop
decl
insb
lock
jbe
pop
ljmp
in
xchg
dec
inc
sub
mov
aad
icebp
cs
pop
test
rorb
and
ljmp
jno
dec
ficompl
mov
movsl
and
std
jl
push
shr
ss
aad
dec
jne
pop
fbstp
addr16
push
dec
inc
enter
mov
mov
dec
cmp
loop
fistpll
aad
ficomps
in
aaa
mov
jp
ljmp
mov
insl
in
adc
roll
stos
mov
std
inc
pop
push
xchg
inc
ljmp
pop
mov
pcmpgtd
push
pop
cmp
ret
inc
push
imul
cmc
decl
push
cmp
cwtl
mov
mov
add
push
push
movsb
dec
jmp
pushl
sbbb
adc
gs
and
cmp
lcall
jmp
into
mov
dec
clc
jle
fwait
add
sbb
mov
shll
cli
ret
scas
cmpsb
int
jne
add
mov
or
decl
test
jl
insl
rolb
outsl
pop
out
ficoml
ljmp
dec
dec
sti
inc
mov
cltd
pop
js
mov
dec
lds
sub
das
mov
cmpl
dec
adc
loope
clc
pop
negl
jo
popf
les
or
pop
outsl
inc
and
pop
std
jg
jg
and
push
pop
xor
inc
les
hlt
mov
fists
in
mov
sbb
lret
push
aad
stc
scas
push
inc
incl
js
daa
in
mov
mov
sub
mov
lock
adc
dec
and
xor
mov
pop
xlat
fistl
mov
mov
jmp
sbb
fs
arpl
adc
aam
sbb
sub
in
enter
xor
lods
out
fsts
pop
cmp
sar
decb
out
push
or
ret
mov
cmp
bswap
fnstcw
cmpsl
repz
cwtl
mov
jmp
jnp
scas
rcrl
xchg
out
and
xchg
sti
repz
adc
cmc
pushl
jle
mov
sub
push
jb
lea
mov
adc
outsl
cli
xchg
sahf
dec
cmp
cmc
arpl
add
or
mov
ljmp
pop
or
hlt
notl
jno
inc
icebp
aaa
mov
jnp
sub
pop
decl
into
xor
aas
lock
or
jne
push
sub
std
mov
pop
xor
hlt
mov
fisttpll
jp
lahf
sub
adc
popa
xchg
cmp
or
xor
leave
xchg
cmpsl
cwtl
jmp
mov
mov
jmp
test
lds
cmp
movsb
xchg
in
mov
cmpsb
adc
call
mov
inc
mov
out
pop
hlt
shl
inc
mov
adc
lcall
mov
int3
ja
inc
lahf
sub
pusha
gs
jge
ljmp
sbb
sub
sub
sbb
dec
imul
inc
and
adc
dec
or
adc
mov
cld
ficompl
fiaddl
adc
sbb
lea
cmpsb
xor
clc
repnz
scas
jmp
out
dec
or
nop
fiaddl
cs
inc
fwait
mov
sbb
cwtl
jge
mov
outsl
lods
aaa
jle
mov
mov
dec
sti
inc
or
test
aas
sbb
test
cld
mov
push
dec
in
xchg
loop
mov
push
add
sub
jns
sub
bound
dec
sbb
pushl
adcb
adc
mov
addl
sub
jg
inc
je
enter
insb
bound
adc
xchg
sbb
sub
or
imulb
and
ds
jnp
cs
pop
pop
pushf
adc
sbbl
sbb
xchg
mov
mov
les
clc
push
add
incb
jecxz
inc
loopne
subl
std
arpl
push
mov
mov
and
mov
mov
aas
mov
call
cld
fcomps
pop
mov
shrb
cmc
xor
mov
and
mov
ficoms
rolb
and
or
shrl
or
inc
loopne
inc
sahf
arpl
lcall
jmp
pop
fistpll
cmp
sub
mov
inc
ret
pushf
mov
pop
cwtl
cmp
ljmp
int
cltd
mov
cld
outsl
icebp
incl
sbb
movsl
shlb
cmp
jbe
push
dec
jbe
mov
sbb
dec
movsb
jg
cld
mov
xor
daa
cmp
adc
push
mov
js
pop
nop
mov
shrl
es
mov
sub
icebp
das
icebp
jmp
mov
and
adc
pop
and
jnp
or
adc
aad
lcall
mov
adc
lds
daa
rolb
mov
sub
std
mov
add
imul
outsl
inc
icebp
jae
mov
pop
mov
adc
mulb
mov
jle
push
hlt
sub
pop
bound
mov
call
call
stos
lcall
push
pop
sub
mov
pop
dec
mov
or
mov
ret
lahf
dec
add
aas
jmp
cmpsl
popa
and
mov
cmp
cmp
sub
call
std
nop
inc
stos
lods
mov
jecxz
adc
vmaxss
aaa
sti
in
push
cmp
ret
sti
mov
jecxz
sub
pushf
pop
jo
cmpsb
or
pop
mov
incl
xor
sbb
mov
jae
cli
ret
fsts
xchg
or
xor
scas
mov
mov
add
xchg
popa
out
lds
lcall
lds
sbb
sti
testb
push
jl
sbb
dec
ret
add
movsl
xor
add
dec
imul
test
xchg
dec
in
mov
lods
pop
pusha
enter
pop
je
jecxz
mov
lcall
mov
shll
es
mov
mov
push
mov
mov
sub
aam
ljmp
xor
int
cmpl
nop
enter
mov
dec
jmp
xchg
dec
inc
scas
mov
and
sub
xor
and
add
std
call
or
and
mov
mov
sub
mov
sarb
mov
lcall
fsubrl
xchg
xorb
cmp
push
test
bound
and
iret
mov
pop
popf
out
jl
jns
outsl
cld
decl
and
inc
add
pop
adc
fcoms
mov
mov
cwtl
adc
aas
dec
divb
fdivrl
xor
xlat
pop
inc
iret
adcb
and
cld
testb
add
lcall
sub
scas
lods
mov
xchg
pop
jo
cmp
xor
mov
add
lret
mov
adc
fidivrl
in
mov
ljmp
icebp
icebp
mov
mov
test
sub
rolb
mov
cmpsl
cmpsl
cmp
xchg
int3
xchg
test
mov
push
aam
arpl
stc
pop
scas
cmp
cs
clc
pop
mov
mov
xlat
fsubp
or
loop
adc
push
icebp
test
push
jmp
test
imul
adc
xchg
inc
cmpsb
and
dec
jmp
xor
mov
lret
jnp
xchg
sarl
sbb
xchg
fdivr
jmp
inc
pop
fsts
in
insb
xchg
cmp
mov
mov
das
js
sahf
scas
or
dec
fidivrs
das
sarb
popf
push
cmp
pop
mov
pop
cmc
pop
out
mov
cmpsl
lcall
je
sahf
jb
dec
add
jmp
shrb
enter
jnp
fstl
std
hlt
rcl
decl
xchg
dec
jo
mov
ljmp
and
dec
mov
xchg
sahf
and
mov
ljmp
fdivp
dec
sbb
loopne
repz
inc
fists
inc
push
aas
mov
adc
js
outsl
je
mov
fnstcw
push
sbb
lahf
adc
or
decl
gs
or
adc
pop
movl
rcl
push
incl
das
mulb
movsl
arpl
in
mov
incl
dec
outsl
jge
rorl
xor
sub
in
mov
sbb
ljmp
ficomps
mov
out
xlat
sbb
loopne
jbe
sti
and
sbb
cwtl
xor
sbb
add
xchg
jp
jmp
test
sub
sub
mov
jg
adc
or
inc
push
scas
xor
jno
ret
popf
decb
aas
sub
mov
pusha
aam
add
stos
cli
fs
mov
call
push
cmpl
incl
mov
mov
repz
ljmp
int3
repnz
adc
xchg
jmp
imul
jmp
push
iret
cmp
data16
adc
pop
jne
sahf
push
loopne
je
jns
incl
loope
ds
das
das
xchg
mov
mov
mov
jge
cmp
cmp
ret
std
call
pop
pop
call
call
neg
stc
mov
repz
and
in
mov
fnsave
mov
incl
aas
imul
adc
arpl
ror
inc
lahf
mov
adc
lahf
jge
add
into
notb
push
pop
jl
mov
shll
mov
and
lcall
pop
jbe
daa
sub
leave
sbb
and
rcrl
mov
stc
xchg
in
cld
xchg
dec
daa
lret
jge
pop
inc
cmpsl
nop
inc
cmp
insl
jl
pop
pop
xchg
jecxz
decl
xchg
mov
jp
pop
bound
std
adc
in
or
mov
in
mov
mov
mov
pushf
ret
xchg
fs
int
shl
rclb
es
mov
mov
sbbl
loope
clc
sub
loop
mov
sub
dec
pop
push
les
mov
xchg
cld
arpl
fnstenv
aam
xchg
arpl
mov
jae
call
faddl
pop
cmpsb
or
inc
cli
imulb
sbb
xchg
stos
out
push
outsl
inc
aam
aaa
imul
fiaddl
stos
push
out
push
or
mov
xor
and
jne
jne
jmp
into
clc
inc
mov
jo
jne
aam
mov
ds
cmp
aam
dec
in
mov
xor
mov
aaa
loop
lcall
or
hlt
mov
into
xchg
into
out
inc
xchg
push
decl
jge
or
mov
mov
das
aaa
mov
pop
ljmp
or
test
inc
xor
mov
lahf
cmp
nop
pop
repz
xor
and
push
mov
mov
jae
push
jae
xor
test
shll
and
sti
call
sarb
mov
push
pop
negb
sub
cli
ljmp
or
stc
lock
push
pop
pop
mov
aas
or
cmp
pushl
xchg
mov
jne
sbb
fld1
pop
fnstenv
pop
in
inc
cmp
lret
addr16
pushl
aaa
and
iret
int3
pushf
mov
push
inc
sub
jnp
jbe
out
test
decl
inc
scas
insb
out
cs
pop
and
cmp
pop
sub
cltd
aaa
cmp
cwtl
mov
aas
out
ret
fnstsw
enter
pop
lcall
mov
jae
xor
cs
test
lods
clc
xor
pushl
mov
dec
lea
imul
ljmp
lret
add
dec
sbb
arpl
inc
inc
lock
xchg
aam
mov
clc
incl
mov
stos
mov
mov
rcl
es
jmp
bound
test
sbb
push
repz
ja
mov
lcall
push
iret
jno
dec
arpl
fwait
mov
lahf
jg
lds
test
pushl
mov
add
pop
or
loope
hlt
cmpb
mov
lock
pushl
and
aas
sub
adc
outsb
jno
scas
mov
lcall
std
xchg
cmpsl
fs
subl
sbb
loop
mov
jle
dec
adc
cmp
xor
aad
loop
pop
pop
xchg
cwtl
pushf
loopne
mov
jg
and
fs
mov
inc
jo
out
jbe
loopne
call
mov
pop
lock
lcall
outsl
std
mov
push
cltd
andb
adc
loope
inc
add
aad
call
or
sub
mov
mov
lock
in
push
icebp
pop
clc
pushl
out
dec
les
insb
xchg
xor
mov
cmp
aaa
decl
lcall
push
pop
cmp
aad
ljmp
int3
subl
mov
cmpsl
sbb
pop
into
jo
add
int3
adc
mov
push
pop
enter
push
mov
seta
sti
rclb
add
decl
or
push
or
mov
int
jg
lcall
imul
dec
test
jle
ja
lea
decl
inc
fsubs
pop
aaa
inc
sbb
std
and
jl
jg
cmpsl
scas
lret
jae
fists
and
in
in
xor
fldl
pop
mov
jle
push
pop
js
ror
fsubrp
sub
dec
sub
test
dec
je
in
andl
data16
push
xchg
push
cli
das
data16
mov
jge
cmc
scas
in
xchg
sub
jecxz
mov
lret
loop
jmp
imulb
mov
or
popa
mov
in
and
out
enter
mov
pop
jae
pop
mov
sub
rcll
int3
int3
jae
sub
ljmp
xchg
inc
into
push
add
xor
jnp
sbb
in
cmp
pop
flds
stos
push
call
cltd
scas
push
add
hlt
xchg
ret
pop
cmp
adcl
outsl
cld
ljmp
bound
es
push
mov
dec
mov
xor
xor
fxch
mov
dec
test
cld
ja
cltd
sub
and
mov
decl
idiv
lahf
or
add
xor
out
ds
cmpsl
add
and
cli
push
data16
fnstenv
xlat
jl
xchg
popl
mov
and
lret
dec
fadd
push
adc
jnp
fwait
and
pop
xor
daa
mov
jg
decl
cwtl
cwtl
xchg
std
insl
test
xchg
dec
ja
cmp
pushl
mov
lods
subb
xor
xor
ljmp
cmp
aas
push
enter
ljmp
shll
xor
xlat
out
inc
jnp
andb
rcr
mov
push
jne
inc
fucomi
shlb
inc
out
jae
lcall
aaa
jp
jo
push
add
mov
mov
xchg
ds
das
adc
ret
leave
mov
add
pop
clc
in
pop
add
aad
out
ljmp
lret
aas
int3
sub
adc
push
push
adc
inc
push
adc
jne
mul
les
popf
ret
je
jmp
pop
or
pushf
mov
adc
in
dec
add
push
sahf
dec
pop
lret
dec
out
adc
jbe
jmp
and
repnz
aam
sbb
imul
inc
cmp
fadds
inc
aas
mov
mov
in
push
jmp
sub
cmpsl
dec
repnz
cwtl
pop
pop
jo
cmp
or
inc
mov
inc
shl
jb
xor
call
or
insb
inc
inc
adc
popw
aam
loop
fldcw
js
jnp
xlat
and
in
inc
jno
pushf
sbb
add
dec
adcb
out
outsb
lock
cmp
mov
adc
cmpsl
mov
cmp
incl
or
push
mov
loopne
or
cli
xor
pop
mov
jle
xchg
jo
out
call
cli
push
mov
data16
push
inc
jne
mov
pusha
adc
xor
std
jg
incl
fadds
cmp
lret
mov
daa
adc
hlt
dec
aas
cltd
push
addr16
adc
inc
sbb
lret
xlat
push
xorl
push
cltd
dec
sub
jmp
fcomps
add
mov
loope
pushf
inc
mov
iret
push
jmp
in
pop
add
incl
les
sbb
jbe
sub
pusha
cmc
xor
xor
std
lods
out
arpl
ds
inc
std
mov
outsl
dec
call
push
adc
add
sbb
and
stos
xorl
push
rcr
into
push
fisttpll
or
lcall
repnz
sar
invd
add
enter
out
out
gs
in
clc
test
outsb
jg
sbb
pop
cmp
sub
inc
mov
cmp
in
cmp
jl
int3
or
hlt
jns
or
sub
jnp
pop
clc
mov
pop
test
ljmp
jl
jmp
sti
xor
cmp
push
jmp
mov
loopne
rorb
ss
shl
jl
mov
decl
mov
and
sbb
data16
loope
fidivrs
ljmp
cmpsb
bound
loop
cmp
add
pop
jl
ret
inc
sub
imulb
dec
dec
xlat
inc
and
xchg
xchg
popf
fsubl
add
fs
pop
data16
cmpb
add
pop
sti
dec
jno
ljmp
and
sub
mov
xchg
fucomi
xchg
test
les
push
out
ret
in
test
in
ret
pop
xchg
push
sbb
or
cmc
jp
decl
dec
sub
xor
cmp
jbe
pop
ret
xor
pusha
adc
das
xor
sar
incl
mov
loope
pop
or
fcoms
daa
lods
stc
push
repz
fmulp
decl
pop
dec
cmp
mov
and
push
in
xor
sub
mov
outsb
lcall
inc
mov
xchg
lods
arpl
movsl
cs
pushl
lret
aaa
popf
outsl
scas
daa
andl
cmp
cmp
pop
insb
filds
cld
fidivrl
std
pop
ret
mov
push
jns
or
mov
cmpsb
pop
rcll
imul
es
push
dec
mov
push
pop
mov
std
mov
movsl
lock
xor
cmpl
clc
in
fistpl
das
adc
dec
scas
mov
mov
ljmp
test
stos
or
aad
and
xlat
xchg
adc
pushl
popf
mov
sub
sbb
jg
fisubs
imull
mov
lods
jmp
gs
fwait
aam
jmp
dec
xchg
add
jl
mov
mov
push
clc
mov
lock
int
xchg
or
mov
cmpsl
sub
xchg
xor
ljmp
adc
push
loope
cmpsl
imul
test
xor
fbstp
add
cwtl
aam
sbbl
les
jg
sti
adc
fistpll
or
sub
jnp
and
jg
imul
sar
sub
mov
jg
pop
outsb
or
adc
xchg
or
fdiv
jg
incl
cmp
out
xchg
jnp
iret
call
dec
dec
ret
sub
inc
sbb
xchg
enter
xor
scas
dec
clc
and
js
add
nop
jecxz
scas
mov
ljmp
sarl
mov
jo
imul
and
push
inc
cmp
mov
xlat
jnp
push
xchg
xlat
jo
mov
aas
jo
and
fs
rorb
outsl
xchg
mov
dec
out
pop
dec
xchg
sahf
pop
imul
aaa
add
cmp
fcmovbe
fimull
adc
aad
sub
dec
rolb
dec
mov
adc
mov
lcall
add
pop
sub
je
lods
adc
leave
jmp
test
leave
cltd
or
sbb
push
stc
rcll
cmp
xchg
addr16
pop
sub
je
incl
dec
out
cwtl
movsb
inc
adc
pop
rolb
mov
mov
lea
pushl
loopne
xor
out
mov
pop
add
imul
aaa
xchg
call
mov
scas
mov
jge
loope
dec
push
lret
data16
stos
andb
xor
pop
lods
mov
aas
fbld
pop
cs
xchg
addb
sub
shr
cmpsl
movsb
outsl
mov
adc
xor
cli
mov
icebp
pop
pop
or
div
jbe
adc
jp
push
push
mov
push
mov
pop
dec
jae
mov
jb
in
popf
sub
pushl
push
cmpsl
mov
das
shr
imul
pop
mov
pop
sti
mov
cvttps2pi
mov
mov
cwtl
pushl
mov
sub
push
out
repz
mov
dec
sub
xchg
test
int3
jb
sbb
mov
clc
incl
inc
out
mov
inc
pushf
mov
push
add
or
xor
cld
fistpll
mov
xlat
lahf
jnp
push
popa
cld
cmpsl
decl
out
dec
out
negb
mov
pop
pop
shrl
stos
jne
xchg
out
xchg
push
or
pop
pop
jp
mov
imul
jmp
sub
mov
sbb
jmp
mov
cmp
dec
cwtl
ljmp
lods
int
iret
popf
mov
cmpsl
xor
iret
adc
ja
sbb
inc
aaa
sbb
addl
pop
cmp
imul
push
lret
decb
test
and
lcall
push
pcmpgtw
mov
xchg
mov
jge
pop
lcall
cmc
inc
jg
std
lods
pop
cli
imul
fsubl
inc
jecxz
push
fucomip
cmp
mov
int3
pop
movb
push
pusha
notb
sub
stos
repz
sub
jg
cmp
xor
adc
ss
ljmp
outsb
mov
inc
mov
mov
daa
insl
shr
mov
mov
jle
imul
in
mov
in
stc
push
aaa
ds
adc
and
inc
sbb
xor
mov
mov
sahf
lcall
hlt
ret
mov
cmp
and
adc
incb
les
popf
shlb
pop
insb
mov
pop
cmp
and
test
jge
xchg
sti
dec
imul
mov
loop
cli
int
or
rcll
cmc
dec
push
mov
ljmp
cmc
pop
loop
popa
mov
xor
jbe
lcall
xchg
jnp
or
xchg
ljmp
ret
mov
mov
or
xchg
pop
lcall
out
mov
pop
shrl
xlat
sbb
jge
addr16
enter
sbb
pushl
cmp
lods
xchg
jge
pushf
push
xlat
dec
rcrl
mov
sbb
add
jmp
loope
pop
out
inc
test
jb
scas
rolb
mov
subl
loopne
mov
add
sub
and
fcmovnu
ja
mov
sub
add
jg
movsl
outsb
imul
and
push
clc
incl
ret
fldt
in
xor
into
bound
adc
xor
fisubrl
decl
lock
ficompl
rorl
xchg
ret
insl
cmpsb
jl
mov
mov
mov
pop
cli
dec
cld
faddl
mov
data16
sub
mov
pushf
lahf
test
push
js
mov
call
out
js
jge
mov
lods
adc
lcall
jge
out
mov
adc
jae
test
ljmp
push
xor
stos
loope
pop
sti
rclb
push
mov
sbb
mov
rol
orl
pop
mov
push
mov
mov
pushf
out
mov
pop
jb
pop
hlt
call
loopne
movsl
and
test
test
sbb
pop
das
pop
shrb
iret
xchg
add
dec
inc
and
xchg
ljmp
cli
adc
in
mov
push
pop
xchg
pop
jno
std
ljmp
iret
inc
ret
sti
dec
movsb
cmc
mov
xchg
ja
aam
call
pushf
movsl
daa
decl
xlat
rorb
mov
mulb
ja
jae
inc
or
loop
call
clc
hlt
stc
xchg
pop
fcoms
or
jecxz
xchg
push
adc
cmpb
and
add
call
es
lea
jb
cli
shlb
mov
aaa
add
sub
push
orb
call
movsb
and
nop
cmpsb
mov
hlt
lods
lcall
jmp
test
lahf
and
call
clc
flds
cmp
mov
std
jbe
lds
nop
jmp
imul
cmpsl
mov
mov
inc
sti
dec
fwait
lea
decl
or
jns
sbb
aam
xchg
add
pop
mov
scas
fs
and
mov
or
je
incl
pushw
popa
xor
in
rolb
jle
into
jae
inc
xchg
xor
and
call
imul
mov
push
pop
movsb
pop
mov
jne
aam
test
push
sub
pop
pop
rorl
adc
lret
add
lods
dec
or
jg
pushl
jp
es
mov
fadds
and
loop
enter
pushl
fwait
xor
jo
or
push
push
sbb
dec
jmp
std
jp
dec
push
pop
int
jg
lcall
push
jle
js
cmp
icebp
bound
iret
xor
sbb
test
test
ret
cmp
outsb
jmp
mov
ljmp
gs
movsl
jge
rep
push
xlat
pop
xchg
lret
test
mov
insl
pop
rep
dec
popf
imul
movsl
pushl
sbb
into
inc
outsl
lret
test
out
lods
cld
cmp
xchg
dec
cmpsb
xchg
sar
out
pushl
outsb
iret
dec
loope
cld
popf
lahf
push
push
aas
pop
ret
or
xchg
into
pop
add
jecxz
rclb
or
sbb
lods
mov
pusha
pop
push
jmp
cmp
mov
decl
jne
out
je
dec
dec
pushl
pop
int
add
pop
mov
xchg
and
jmp
xchg
sub
outsl
ret
jg
outsl
std
cmc
loope
cli
mov
out
pusha
push
stos
adc
das
hlt
xor
out
push
jbe
les
fstpl
cmpl
shr
rcl
sahf
jnp
or
orb
pop
inc
insb
jmp
es
lret
xor
inc
decl
ss
shlb
out
push
inc
mov
dec
aad
movsb
fsubs
iret
pop
aam
add
adc
push
lcall
lea
mov
ds
into
ds
lret
xor
add
or
roll
sbb
fiadds
jg
icebp
test
pop
adc
shlb
add
or
pop
insb
icebp
push
xchg
ja
leave
loop
inc
into
inc
add
mov
cli
cli
incl
mov
xchg
xchg
push
out
movsl
sarl
test
cmp
fcmovne
jns
sub
pop
inc
or
clc
fnstsw
and
mov
es
lret
movsl
jbe
inc
in
pop
int
inc
lds
jnp
pushl
push
dec
mov
bound
sbb
mov
lcall
push
add
int3
xor
insb
lods
add
jecxz
cmp
out
mov
jecxz
cli
leave
jg
loopne
loop
mov
pop
mov
push
sub
sbb
pop
jle
mov
mov
test
sbb
scas
jg
repnz
mov
cwtl
cmpsb
outsb
std
push
jae
loope
jns
dec
sbb
icebp
pushl
repnz
sub
repnz
loope
out
mov
icebp
pop
call
sarb
add
and
and
mov
ja
pop
leave
cld
stos
xchg
out
mov
and
inc
data16
mov
roll
mov
stos
lahf
int3
orb
scas
stos
stc
xor
das
cld
in
sub
sti
icebp
mov
dec
faddl
sub
std
decl
sbb
push
in
jb
fisttps
add
aam
enter
push
mov
fucom
ljmp
jmp
sahf
mov
mov
pushl
fimull
xchg
gs
xchg
pop
xchg
mov
scas
add
lret
add
fldt
cmp
dec
scas
cli
mov
cmpsl
in
sbb
stc
mov
fucomip
call
cmp
adc
adc
data16
lods
bound
lret
incl
pop
nop
dec
push
fsubrl
pop
shll
xor
shrb
and
sbb
pusha
lods
jp
je
fsub
cli
div
dec
fs
shl
lods
cmc
sahf
pop
mov
lea
jnp
stc
xchg
jg
adc
push
dec
or
out
push
xor
cmp
test
mov
mov
incl
cltd
adc
pushf
mov
push
je
call
pusha
scas
rorl
ds
and
xchg
cltd
iret
xchg
mov
mov
sti
test
xchg
stos
pop
gs
incl
ficomps
repz
fdivl
sub
addb
pop
fiadds
or
push
hlt
mov
pop
in
jae
ret
pop
or
scas
sbb
das
hlt
inc
cmpb
mov
jae
mov
pop
pop
loop
ljmp
ds
lea
mov
lock
xchg
or
andb
jg
mov
shll
fadds
cltd
mov
pushl
cs
lret
or
adc
imul
decl
aam
shlb
dec
fimull
xor
mov
rcrl
jnp
adc
jb
lods
cwtl
pop
cmpsl
inc
lds
adc
add
adc
mov
inc
cwtl
test
inc
pushl
add
xlat
xchg
pop
out
mov
jbe
or
xchg
les
hlt
rorb
lds
pop
inc
inc
test
addr16
mov
in
push
mov
mov
mov
jmp
mov
jecxz
jmp
mov
lock
hlt
sbb
decl
cld
jb
push
ss
mov
mov
mov
add
insl
jg
outsb
cld
jle
fs
je
xchg
mov
inc
aam
ret
dec
dec
pop
dec
push
into
xchg
and
jg
dec
dec
js
xchg
out
lods
lods
pusha
and
sub
lcall
adc
fistl
xlat
mov
jecxz
mov
adc
mov
xor
xor
mov
loop
subl
pop
addl
test
sub
insb
dec
jg
mov
inc
lahf
call
jbe
push
js
les
add
inc
xlat
push
stos
adc
pop
scas
mov
jg
pop
xchg
aas
mov
mov
xchg
jmp
jp
ret
arpl
sbb
std
lret
ror
mov
call
push
cmp
mov
ljmp
fwait
in
cwtl
push
sti
pop
stos
hlt
lahf
sbb
cli
add
push
pusha
adc
jmp
xchg
test
pop
mov
sbbb
mov
fwait
lds
call
or
and
push
jns
scas
pop
icebp
pop
mov
hlt
call
push
int
fsubrl
adc
dec
pusha
imul
jl
sarb
test
sbbl
jne
pop
stos
mov
jle
es
or
imul
stos
jb
pop
clc
or
xor
mov
sbb
sbb
sub
xchg
push
mov
clc
mov
adcl
daa
cli
mov
stc
js
scas
sbb
clc
scas
push
lock
and
mov
stos
scas
nop
push
push
incl
ret
xor
sbb
aam
jg
lret
das
and
dec
mov
decl
icebp
dec
cmpsl
xor
pop
leave
jbe
aas
addl
mov
or
jle
pop
xchg
push
push
imull
and
fneni(8087
stos
pusha
sub
stos
fdivrp
call
dec
fdivrs
int3
into
pop
add
leave
pushl
push
clc
ret
fs
daa
sub
stos
cmp
repz
addl
lcall
mov
or
push
dec
xlat
ret
xor
out
dec
or
mov
es
imul
ljmp
je
sub
push
hlt
and
pusha
stos
mov
imul
lcall
inc
mov
lods
mov
out
dec
and
sub
adc
pushf
mov
insb
sarl
je
das
cld
pop
ljmp
push
das
mov
repz
dec
mov
sub
call
popf
xlat
or
add
push
imulb
jnp
inc
sub
ss
arpl
sub
mov
jl
daa
dec
aam
inc
adc
incl
jle
leave
in
mov
and
cltd
jle
incl
test
in
xor
or
out
inc
inc
sub
decb
lahf
dec
lods
fcoms
xor
jg
push
add
repz
clc
dec
mov
sahf
pushl
lret
xor
repnz
mov
cli
mov
pop
rorb
pushf
and
push
int3
xlat
jbe
ljmp
jne
cltd
test
pop
add
fs
cmpsb
ret
inc
sti
int
sbb
sbb
sbb
data16
rorb
ljmp
push
loope
and
add
fsub
pushl
dec
mov
call
call
mov
out
out
stos
call
test
mov
fwait
ret
mov
push
fstps
mov
xchg
clc
dec
jmp
ljmp
ds
shrb
sub
das
cld
decl
push
xor
add
xor
inc
pop
mov
loop
nop
fildl
les
cmpsb
dec
aaa
loopne
jne
xor
clc
dec
sub
mov
das
push
dec
jns
imul
cld
sbb
rorb
push
mov
ljmp
cmpsl
mov
lock
imul
outsl
lcall
std
pushl
adc
sub
dec
sub
pop
sub
movsl
sub
stc
jg
lcall
xchg
cld
rcr
mov
data16
dec
out
inc
cmpb
clc
dec
cs
rcrl
mov
jae
out
xchg
push
jl
dec
cmp
rorb
fistps
cmp
enter
fldl
test
mov
ss
aam
cmc
ljmp
xor
lds
movl
lret
push
mov
or
movsb
or
jae
lcall
adc
mov
scas
mov
ja
inc
pop
inc
jle
decl
insb
adc
pop
ret
addl
and
sub
dec
dec
scas
cmp
clc
jo
aaa
clc
ljmp
cmp
leave
mov
cltd
lods
cli
insl
mov
icebp
adc
pop
test
ljmp
push
cmpb
je
cmp
xchg
shrb
fcom
mov
popf
inc
movsl
xchg
jno
aam
jg
leave
icebp
fwait
int
xchg
mov
rep
lock
fstpt
cld
mov
fs
stos
pop
gs
cltd
mov
das
jo
xchg
mov
jae
sub
pop
lcall
rcrb
lret
sub
call
out
adc
pop
loop
mov
imul
ret
test
pushl
xchg
mov
mov
movsl
dec
sbb
loopne
jle
mov
xor
mov
cld
mov
jnp
xor
dec
je
frstor
ljmp
mov
push
or
sti
dec
dec
js
test
adcb
xchg
clc
ljmp
xor
lahf
pusha
imul
lods
push
lods
mov
xor
pushl
scas
out
jbe
push
cmc
xor
xor
cwtl
cmp
call
mov
daa
test
mov
or
add
jge
or
sub
sbb
xlat
jae
or
lds
mov
dec
pushl
in
repz
jl
js
xchg
jg
outsl
mov
mov
outsl
hlt
decl
idiv
movsb
sbb
mov
add
test
fistpll
dec
inc
push
insl
add
icebp
lcall
filds
mov
sbb
clc
rcl
or
push
ret
test
pop
fsts
cmc
lock
pop
stc
inc
test
pushf
sub
lahf
xor
testl
movsb
inc
mov
adc
sbb
clc
add
sbb
fisubl
dec
push
pop
xchg
pop
mov
test
or
jbe
lock
rolb
and
mov
addr16
pop
mov
inc
xor
add
into
rorl
pop
mov
inc
shl
jg
sbb
lret
insl
and
cmp
into
xor
mov
subb
xor
mov
xchg
aad
sti
or
jge
mov
out
push
push
push
fisubl
adc
arpl
std
cmp
or
sar
ljmp
pop
lcall
mov
push
stos
aaa
jb
xchg
mov
aaa
pop
lcall
aas
dec
inc
fcomps
std
dec
sbb
xor
mov
call
add
mov
in
mov
pop
arpl
mov
lcall
aam
inc
mov
mov
ds
js
popf
icebp
pop
and
sub
out
sub
jnp
or
xor
sub
movsb
test
into
dec
fists
cs
lds
push
lret
dec
and
and
mov
test
cli
decl
pop
fsub
mov
add
jl
mov
insb
negb
sahf
clc
insl
pop
xor
dec
gs
jecxz
iret
jb
sbb
inc
repz
and
std
pop
lods
in
xor
lcall
loop
rorl
gs
push
repnz
aas
sub
adc
push
insb
arpl
sbb
sub
jecxz
push
mov
mov
nop
xor
mov
lds
scas
loop
dec
gs
and
divl
fucomip
jmp
test
mov
sub
leave
dec
neg
xor
jnp
adc
decl
ss
clc
ficoml
cmp
rolb
lods
inc
push
aaa
mov
mov
inc
addr16
rolb
inc
add
jp
xchg
shrl
pushl
mov
cmp
jnp
aas
dec
leave
mov
loop
call
ss
mov
mov
into
data16
pushf
xchg
xchg
sub
call
pop
test
add
popa
shrl
mov
inc
gs
push
cmpsb
incl
dec
out
psubsw
mov
pop
sahf
adc
add
lcall
fldl
imul
lods
mov
pop
adc
lods
and
sbb
add
mov
lds
mov
mov
mov
push
xor
rcll
sahf
icebp
addr16
or
mov
jg
rorl
adc
shrl
insl
popa
cltd
mov
pop
ror
add
incl
js
adc
jo
xchg
ja
pop
roll
and
ljmp
cld
fildll
mov
insb
mov
out
cmpsl
mov
mov
pusha
cli
call
clc
int3
mov
mov
xchg
js
add
cmpsb
mov
adc
or
jno
out
jg
jl
std
ljmp
push
mov
out
imul
sbb
ss
push
push
or
stc
sub
mov
mov
fcmovnu
es
sub
int3
adc
fs
jb
sbb
mov
adc
dec
sarl
popf
adc
mov
out
cli
decl
push
lret
xchg
shlb
and
out
pop
mov
push
cmpsl
lods
dec
sbbl
xor
jns
adc
adc
subl
movsb
hlt
je
fs
xchg
popf
cmp
jecxz
jg
shll
mov
jmp
jg
cmpsb
jecxz
cmovge
loopne
or
sbbb
dec
cs
jle
ret
lret
int
pop
add
push
cmp
call
xchg
ficoml
in
pushf
lds
push
imull
inc
out
lahf
jl
cld
jmp
shl
pushf
jl
pop
cmp
jl
lret
stos
movsl
loopne
jmp
xchg
xchg
jle
mov
or
mull
xor
inc
loopne
xchg
aad
sbb
jno
pop
fdivp
test
popa
aad
jmp
dec
and
sbb
xor
jecxz
push
cld
iret
sbb
pushl
mov
mov
in
mov
lret
pushf
xchg
xchg
dec
xchg
cmp
pushl
xchg
rcll
add
add
out
out
int3
cs
into
aam
dec
mov
je
push
xchg
dec
insl
or
sbb
pushl
clc
outsl
mov
int
pop
mov
mov
adc
jmp
pop
push
lahf
enter
jp
ss
push
adc
pop
dec
mov
fbld
push
push
sub
scas
xor
xchg
jecxz
jmp
xchg
lcall
dec
aam
pop
mov
and
scas
inc
subb
ljmp
xor
sahf
xor
shl
outsb
mov
jnp
test
movsb
jnp
sub
subl
jne
xor
cmp
xor
mov
aam
or
stos
fimuls
add
popf
out
mov
dec
dec
movsb
adc
or
lcall
std
push
jnp
std
inc
lretw
orl
xchg
xor
push
decl
add
sbb
fs
arpl
je
out
cmp
movsl
push
popa
jmp
shr
xor
xor
xchg
jbe
xchg
std
jg
sub
daa
xchg
push
mov
mov
mov
jno
clc
inc
add
inc
stos
dec
pusha
enter
xchg
test
jge
int
gs
sbb
insl
mov
pushl
out
or
xchg
mov
sarl
push
fsubl
subb
mov
and
mov
mov
add
mov
and
xchg
ja
fcos
call
fistpl
mov
repz
out
or
push
or
testl
std
ljmp
imul
push
bound
fistps
inc
cmp
call
hlt
push
sahf
shl
nop
std
loope
adc
push
mov
pop
sar
fmuls
xchg
ljmp
xchg
aaa
imul
sbb
push
mov
mov
decl
inc
push
sub
push
std
aad
test
in
shr
int
je
lds
incl
jp
sub
pop
addr16
mov
incl
shlb
lea
mov
pop
pop
cmp
repnz
jnp
mov
mov
dec
addl
les
push
je
stos
mov
mov
inc
cld
sbb
jmp
push
mov
inc
cmp
adc
ss
repz
inc
pushf
rcr
popf
aas
call
clc
mov
mov
and
sub
fnstcw
mov
aaa
out
das
cmc
mov
insl
sbb
pop
outsb
dec
push
cmp
je
inc
ljmp
add
cvtps2pd
pop
shr
push
inc
adc
das
incl
lcall
cmp
add
push
push
mov
and
cwtl
mov
jmp
sub
cli
jmp
adc
mov
and
xchg
decl
std
das
dec
and
add
or
ret
dec
xor
pushl
mov
das
aad
inc
lock
and
in
jne
mov
xor
sahf
mov
sub
incl
pop
cmc
push
push
xor
aaa
adc
mov
xor
test
iret
xor
jg
aaa
push
mov
lea
cmp
cmpsl
cmp
mov
sbb
xchg
pop
jle
inc
push
sub
dec
outsl
cmp
xchg
cli
push
inc
stc
or
and
lds
movsb
and
js
enter
call
dec
jno
sub
test
ljmp
add
ljmp
sbb
push
or
push
xchg
movsl
jnp
dec
les
clc
loop
mov
decl
dec
faddl
out
or
loope
jge
call
jbe
fadd
dec
jb
movsb
incl
inc
fnstsw
sbb
test
dec
jb
mov
inc
and
push
xor
sbb
sbb
ljmp
mov
cwtl
add
rclb
mov
dec
daa
lret
lahf
cmp
jp
fnclex
push
leave
lods
dec
cmc
mov
cwtl
ficompl
cli
fildll
dec
pop
push
subb
bnd
cmp
dec
lcall
fildl
and
mov
mov
cmp
loope
dec
xor
jae
inc
push
fs
or
js
inc
jmp
jne
scas
loopne
fdivrp
mov
pop
data16
pop
inc
xor
cs
push
adcb
jmp
fiadds
jae
fadds
stos
lea
mov
popf
jb
sub
lds
inc
into
pop
sub
mov
mov
rcr
pushf
sbb
adc
test
xchg
hlt
cmp
inc
es
cwtl
jne
mov
xchg
scas
or
lret
je
lcall
push
jae
inc
mov
arpl
pop
adc
inc
bound
call
mov
dec
push
bound
xchg
daa
iret
push
cmpsb
std
js
or
xadd
repnz
and
nop
inc
stc
std
push
decl
cmc
xchg
mov
aaa
mov
cld
mov
sub
jns
jl
movsb
fsubrs
cwtl
cmp
mov
sar
mov
lcall
push
daa
sub
xchg
out
gs
popf
mov
cbtw
dec
das
insb
cld
icebp
sbb
or
mov
sub
push
mov
cs
pop
sbb
push
xchg
adc
xorb
mov
aaa
clc
ffreep
dec
xor
lods
xchg
insb
cmp
adc
movsl
ljmp
std
pop
mov
inc
cmpsb
aad
aaa
sbb
and
cwtl
popf
int
mov
jg
lcall
or
cli
xchg
orl
sti
adc
dec
repz
popa
mov
inc
pushl
cli
rorb
cli
sub
imul
out
mov
push
cld
aad
clc
pop
ljmp
rcrl
sbb
add
lcall
loope
outsl
iret
test
call
pop
ljmp
lds
jmp
push
clc
in
mov
arpl
mov
xchg
out
ret
mov
adc
outsl
ljmp
mov
ja
or
call
push
inc
rorb
jecxz
fnstsw
in
lret
nop
mov
les
lock
sbb
loop
aaa
shlb
ljmp
push
or
and
pop
sub
notrack
mov
add
mov
sub
mov
ljmp
icebp
jecxz
add
inc
jmp
test
int3
sbb
push
call
fisubs
bound
cltd
cmc
push
jl
mov
cmpsb
fs
ret
mov
push
or
clc
hlt
test
outsb
push
insb
bnd
pop
incl
jno
xor
addr16
divl
xchg
sub
cwtl
call
mov
push
push
inc
fbld
fistps
out
adc
aas
adc
sahf
rcrl
xchg
int3
jl
subb
xchg
popf
in
mov
mov
inc
shll
xor
icebp
pop
ficompl
dec
xchg
dec
jp
lcall
ja
arpl
sub
xchg
xchg
push
mov
push
push
repnz
mov
and
fwait
sub
enter
out
xor
adcl
rolb
ds
add
mov
sub
arpl
iret
push
mov
xchg
cwtl
out
xor
sar
lcall
jmp
sub
imul
mov
dec
sub
mov
sbb
cli
mov
cs
push
mov
jl
mov
repz
call
popa
pusha
into
sti
and
lret
jmp
cmpsb
mov
dec
sbb
xchg
cmpsb
in
fimuls
pop
xor
out
mov
shll
aaa
inc
push
pushl
mov
dec
lahf
sbb
sbb
shrb
sub
sub
bound
out
ljmp
ret
lahf
test
pop
jle
je
sbb
sarl
cld
cmpsb
int
repz
fwait
mov
push
sub
idivb
shll
jb
mov
push
stos
out
out
cmp
and
ljmp
out
ret
sub
mov
add
rcrl
sub
push
fs
xchg
ficomps
pushf
repnz
dec
xlat
xor
mov
sbb
cmp
adc
mov
mov
pop
xchg
adcb
cwtl
pop
sbb
adc
lahf
ret
data16
jg
mov
jo
inc
int
push
ja
cmp
xlat
das
ljmp
decl
repz
push
loope
lahf
xchg
adc
inc
aaa
inc
add
test
cmp
int
data16
mov
clc
pop
and
ljmp
mov
mov
incl
rol
push
pop
scas
outsb
lock
enter
sub
repnz
jg
xchg
rcrl
icebp
int
lds
dec
jno
and
lret
mov
inc
pushl
ss
mov
addr16
mov
mov
jp
popa
in
push
inc
sarl
ret
push
enter
fcompl
sbb
mov
in
push
gs
inc
dec
test
mov
jb
xor
mov
ljmp
or
call
and
pop
clc
test
aaa
call
cs
scas
mov
lcall
jae
into
sub
dec
loopne
inc
sbb
popa
xchg
stc
es
sar
pop
push
ficomps
ret
call
clc
lods
cs
dec
mov
pop
int
push
pop
ret
pop
in
push
push
mov
lods
gs
in
and
in
fdivr
outsl
push
mov
shrl
sbb
push
aas
in
jns
or
pop
mov
xor
dec
js
push
or
mov
sub
scas
dec
mov
in
jge
fidivrs
outsl
out
jg
cmp
adc
mov
mov
mov
inc
pop
test
aaa
add
jcxz
roll
xlat
mov
lcall
ljmp
jl
or
hlt
subl
pop
and
fisttpl
mov
aaa
ljmp
es
jo
cmc
not
jge
shrb
cli
dec
or
and
mov
cmp
aaa
adc
fsub
outsb
lds
adc
call
push
jne
jns
cwtl
stos
xor
inc
arpl
cmp
pop
and
mov
call
and
sub
xchg
xor
sbb
rclb
push
aas
xchg
xchg
adc
sbb
decl
mov
scas
push
les
inc
mov
into
clc
sbb
incl
pushl
xor
movl
daa
data16
into
subb
incl
adc
decb
push
cltd
out
stos
inc
leave
pop
in
aas
in
call
push
movhps
and
pop
loop
fisubrl
pop
lcall
dec
inc
call
aam
push
cmpsl
inc
xchg
imul
jle
and
fisubl
mov
sub
jg
sub
dec
ror
jg
pop
push
jecxz
decl
imul
or
cltd
test
pop
mov
fucomip
call
into
das
xchg
insl
inc
xchg
mov
cmp
out
push
daa
leave
lret
icebp
mov
outsl
hlt
pushl
outsl
fstpl
or
mov
jg
orb
adc
and
pop
dec
or
xchg
ucomiss
push
cmc
roll
movsb
and
outsl
cmc
mov
mov
into
ds
bound
test
clc
pushl
orb
lods
or
jle
pop
pop
incl
mov
mov
mov
cs
and
push
idivl
jmp
push
add
xchg
leave
mov
xchg
add
and
inc
push
dec
aaa
call
push
stos
shll
mov
imul
push
dec
mov
incl
int3
les
push
jmp
pop
jg
jne
bound
inc
andb
cltd
fucomp
sub
cmp
stos
in
cmp
scas
mov
lds
or
push
out
clc
decl
mov
mov
rorl
lds
pop
dec
jbe
call
cltd
jl,pn
iret
scas
mov
mov
sbb
cltd
mov
inc
fcomps
inc
sub
decl
or
arpl
jp
insl
adc
sbb
or
stc
cltd
sti
loop
mov
cld
jg
popf
dec
fisttpl
lods
mov
sbbb
mov
test
shrb
ljmp
pop
aad
xchg
daa
les
mov
mov
inc
adc
in
sar
call
mov
in
int3
push
xchg
sbb
mov
xor
mov
push
inc
xchg
inc
in
jmp
sbb
xor
fistpll
pusha
mov
sub
pop
bound
pop
sti
mov
mov
xor
jns
fisubl
incl
adc
push
lods
movsl
int
je
jnp
mov
call
mov
and
inc
push
lahf
pop
jmp
mov
repz
fidivrl
movsl
loop
scas
fs
and
out
or
dec
jg
mov
jmp
je
pop
sub
jo
in
inc
cmp
shrb
sub
pushl
sbb
and
sti
xchg
sub
fs
push
push
test
sub
stos
sti
inc
cmp
int3
push
sub
loop
sub
push
mov
test
xor
mov
into
lret
add
pusha
call
popf
inc
and
rcrl
or
mov
in
inc
or
xor
cmp
stc
inc
jp
jmp
and
xor
in
std
mov
incb
and
or
testl
push
addr16
pop
sbb
jae
test
xor
add
out
loop
clc
bound
repnz
repz
mov
push
and
rorl
pushl
sbb
push
dec
std
lods
inc
out
cmp
pop
orl
ljmp
mov
ret
lods
icebp
xor
jo
out
jno
outsl
push
pushl
leave
fwait
adc
scas
inc
stc
push
jecxz
loope
cli
jecxz
mov
cmp
scas
popf
scas
mov
movsb
adc
inc
call
pushl
int3
mov
imul
mov
dec
jp
mov
mov
mov
mov
mov
jge
adc
scas
in
push
or
decl
xchg
or
insl
fldl
xlat
dec
mov
bound
push
mov
inc
pop
mov
ljmp
sar
mov
xor
incl
roll
adc
add
or
mov
or
jg
dec
js
ljmp
pop
cmp
or
mov
and
addr16
mov
insb
adc
test
shll
mov
std
pushl
clc
inc
push
mov
movsb
jecxz
inc
mov
lret
mov
inc
sbbb
pushl
dec
fisttpl
xor
lret
repnz
jge
jb
xorb
jno
aaa
pop
ljmp
jbe
mov
fsub
xor
sub
push
scas
adc
aam
push
insb
ljmp
jne
sti
pop
call
cmp
mov
je
call
loop
pushl
dec
es
add
adc
inc
ror
out
fldcw
dec
xchg
popa
fucomip
pop
and
in
cvtpi2ps
xchg
mov
jmp
aaa
negb
mov
ffreep
push
int
dec
sbb
stos
jg
fsubrs
in
sbb
xor
inc
mov
jnp
dec
gs
outsl
loopne
mov
mov
pop
pop
notb
aad
bound
nop
lock
or
daa
addr16
call
adc
sahf
mov
outsw
cmp
stos
jg
lods
jmp
push
inc
xchg
push
test
icebp
int3
mov
push
incl
stc
out
lahf
xor
fadds
sub
insb
sbb
loope
inc
mov
ret
insl
lods
sub
dec
pop
mov
push
push
cmovle
jbe
adc
jg
aam
pop
adc
pop
mov
xchg
mov
inc
mov
fnstcw
call
fidivrs
cli
cld
lcall
cltd
dec
rcrl
xchg
nop
rcll
test
pushl
mov
or
arpl
fidivs
les
repnz
pop
popf
and
cmc
push
cmp
pop
fcmovne
adc
mov
call
out
addl
int3
push
shl
cmp
call
xor
lret
pushf
js
repz
mov
jle
fisttpll
incl
jmp
push
push
test
jecxz
push
nop
ljmp
decl
inc
insl
inc
sub
ret
add
out
mov
test
in
pop
push
mov
cmp
das
lock
les
dec
repnz
adc
enter
sbb
insb
movb
into
scas
sub
sbb
inc
push
in
cmpb
xchg
leave
dec
mov
cld
fimull
or
arpl
fisttps
enter
dec
mov
cmp
movsl
incb
xchg
mov
add
in
sahf
adc
mov
insl
lahf
mov
push
dec
in
hlt
neg
adc
aam
in
rcl
call
cmp
mov
pop
push
lcall
sub
jge
sbb
jge
ljmp
and
mov
jbe
aaa
jecxz
minps
push
jmp
push
mov
pop
repnz
mov
bnd
push
aam
sub
inc
adc
or
xchg
and
out
shrl
sahf
fwait
xchg
xchg
incl
add
or
ss
dec
cld
dec
add
seta
add
and
add
movsl
movsl
jecxz
mov
mov
push
mov
ret
fwait
dec
sub
int
gs
cmp
scas
xor
mov
dec
subb
lea
fcmove
sti
mov
adc
call
imulb
arpl
icebp
dec
push
pop
mulb
inc
scas
aas
ret
add
adc
mov
mov
jns
aas
add
jl
leave
sub
push
jno
mov
dec
push
in
ficompl
mov
inc
push
or
and
rcrl
jns
ss
dec
push
dec
rcl
mov
jle
cmpsb
cmpsl
outsl
jmp
adc
jmp
pop
lea
mov
xchg
cmp
pushl
push
mov
cmp
femms
sbb
ljmp
pushf
sarl
push
scas
repz
fndisi(8087
notl
cltd
lret
andb
sbb
adc
or
incl
mov
jg
mov
push
and
jp
test
fbld
cmp
mov
lods
add
jmp
sub
mov
insl
mov
xchg
pop
call
push
lahf
pusha
cmpsl
or
cmp
or
cwtl
ret
adc
adc
pop
clc
mov
or
out
inc
aas
add
sub
stos
mov
jp
inc
ret
call
in
jae
pop
push
movsl
xor
je
fisubl
add
sub
ret
jns
mov
es
cltd
xor
push
inc
jp
in
cld
test
sahf
arpl
mov
lcall
mov
fdivl
sbb
lea
rcl
or
inc
fucomip
jg
cmp
jg
cmpsb
inc
rcr
dec
xchg
push
adc
push
cmp
xlat
push
push
dec
mov
divl
push
lds
pop
movsl
addr16
pmuludq
ja
adc
mov
inc
jl
mov
out
mov
pop
or
scas
inc
and
decl
add
int
add
pop
aad
jg
xor
aam
sub
sub
lret
fsubrs
pop
je
sub
call
ljmp
out
cmp
lods
xlat
scas
push
ss
and
push
hlt
mov
decl
adc
mov
movsb
stc
xchg
fdivl
outsl
rolb
call
cld
add
jl
cmc
or
add
cltd
push
popa
sub
pop
add
pop
push
adcl
mov
jp
call
push
jmp
mov
sbb
into
cmp
and
ret
push
push
lret
jp
hlt
cli
decl
pushl
outsl
xchg
dec
xchg
pop
inc
xchg
dec
pop
add
push
cmc
xor
mov
sti
push
neg
and
mov
inc
add
hlt
or
das
hlt
adc
in
js
inc
fwait
sub
jle
mov
xor
mov
clc
dec
pop
cli
outsb
xchg
push
mov
sti
or
shll
ljmp
inc
fwait
mov
lret
cltd
dec
cmpsl
mov
arpl
xor
dec
fdivr
pop
ljmp
dec
popa
aaa
inc
test
dec
mov
jp
daa
jmp
xor
fdivl
xor
pop
call
lcall
jl
roll
popl
jns
cmp
jle
push
mov
fcomps
shlb
sub
cld
ljmp
cmp
outsl
lods
or
push
dec
ror
pop
dec
leave
int3
mov
sbb
sbb
call
push
nop
cld
lret
push
inc
stc
repnz
push
add
stos
ret
jl
aas
in
lods
mov
iret
ljmp
stc
mov
adc
sbb
add
push
mov
mov
clc
decl
mov
pop
mov
fcompl
arpl
adc
push
adc
push
cmp
test
mov
addl
leave
mov
lahf
push
sbb
pushl
fs
xor
lock
mov
pushl
xchg
sub
mov
adc
clc
or
cmc
dec
movsl
test
lock
pop
and
cmp
add
jle
push
mov
sub
adc
or
add
lods
std
push
gs
js
outsb
je
jb
outsl
arpl
fs
outsl
adc
jb
push
dec
imul
or
popa
adc
add
orps
je
fdivp
in
mov
arpl
gs
inc
fstp
jle
push
push
inc
jb
je
arpl
arpl
outsl
outsb
mov
mov
push
push
push
adc
pop
inc
jb
outsl
xor
popa
das
inc
or
aaa
mov
mov
sbb
bound
adc
das
dec
inc
jbe
ffreep
mov
push
push
xor
arpl
fs
jae
mov
xchg
and
bound
imul
in
jns
insl
push
imul
aaa
fwait
movsl
cmp
inc
outsb
jae
inc
imul
fstpl
pop
push
adc
gs
xor
popa
fildl
inc
jo
inc
mov
cmp
std
inc
outsl
insl
jo
xor
pusha
sub
pop
andb
or
mov
popa
adc
push
or
sub
sarb
jo
sbb
or
and
or
into
loop
nop
or
daa
dec
inc
leave
and
sub
adcb
or
or
sub
dec
add
xor
inc
nop
push
inc
and
xorb
lods
or
and
or
and
cmp
or
or
inc
and
aam
dec
test
mov
push
pusha
or
xchg
xor
push
shll
fmuls
add
add
lods
adc
and
lock
push
and
dec
lret
out
xor
lret
movsl
ret
mov
inc
add
lods
adc
movsl
cmp
or
bound
dec
and
repnz
xchg
sub
pusha
mov
test
in
sub
push
mov
sbb
push
push
cmp
test
add
mov
sub
mov
dec
addb
adc
mov
or
adc
inc
lcall
xor
and
adc
mov
and
and
sbb
adcl
sub
fsubrl
popf
or
push
je
jne
in
movsl
fadds
pop
xor
aaa
test
movsb
pop
push
sub
or
adc
mov
clc
push
sub
and
xor
loope
dec
nop
adc
inc
or
or
loop
or
add
xchg
inc
pusha
lods
inc
test
js
movsb
ret
out
push
mov
mov
add
roll
andb
or
push
rolb
or
andb
les
sbb
mov
ljmp
push
or
sbb
xchg
and
adcl
or
push
inc
scas
in
dec
test
sbb
add
and
or
lea
or
push
mov
sub
sub
sub
add
mov
mov
movsb
movsl
adc
test
sbb
inc
adc
sub
xorb
adc
mov
daa
sbb
ret
addb
adc
je
xor
add
and
and
adcl
and
sbb
or
inc
adcl
movsb
lods
repnz
mov
bound
fimuls
push
and
shrl
sub
out
push
xorl
pusha
adc
or
or
push
xor
test
inc
mov
push
or
and
shrb
je
add
inc
lock
popa
xchg
jno
dec
mov
imul
push
mov
nop
push
mov
movsb
or
add
cmp
adcb
sub
adc
xchg
add
add
add
jecxz
sub
movsb
and
inc
fistl
or
add
mov
adc
jb
rorb
test
dec
addb
add
adc
nop
sub
add
and
and
stos
push
sbb
dec
inc
push
xor
mov
nop
push
fisttpl
and
stos
in
and
dec
adc
mov
and
dec
or
test
add
adc
adcb
add
and
adcl
xchg
push
in
into
xchg
inc
and
xor
adc
mov
push
cli
nop
push
test
stc
call
rcrb
or
hlt
xchg
add
stos
push
dec
mov
nop
add
add
add
test
popf
push
adc
add
jno
dec
test
mov
xchg
iret
inc
pop
mov
pop
dec
rorb
stos
adc
push
inc
xor
push
xor
pusha
nop
sub
push
and
mov
and
push
sbb
sub
shrb
push
adc
adc
movsl
mov
sbb
xor
test
adc
mov
adc
test
dec
push
shlb
add
in
inc
push
push
xor
pusha
push
add
add
loope
add
add
add
and
or
inc
adcb
mov
scas
rorl
mov
testb
pusha
push
dec
inc
sbb
add
adc
test
mov
and
mov
sub
adcl
sub
or
push
pop
dec
push
push
pusha
inc
mov
orl
out
sbb
ret
jno
add
fwait
add
cmp
in
gs
das
pop
xor
inc
push
imul
adc
in
jae
fs
rcr
sbb
outsb
jae
les
popa
addr16
sub
or
orb
mov
adc
sub
pop
adc
ret
push
arpl
sub
sbb
sub
sti
out
xor
mov
je
inc
and
push
jb
icebp
out
jbe
adc
jns
outsl
outsb
imul
adc
inc
jne
scas
outsb
je
jae
aaa
pop
or
gs
cmp
sub
ret
push
pop
dec
cwtl
add
push
and
popa
fisttpll
and
fsubrs
adc
mov
icebp
mov
and
jo
add
in
fmuls
add
add
add
inc
icebp
jnp
add
add
pop
imull
inc
add
or
adc
rolb
sub
jb
inc
or
add
pop
rcrl
pusha
aas
push
xor
sbb
mov
pop
inc
add
testl
test
test
inc
pop
pusha
cmp
add
mov
pop
rolb
mov
add
cmp
popa
out
daa
rolb
mov
jnp
aad
outsb
mov
fsubs
nop
add
aas
add
push
xor
test
loopne
int
repnz
add
add
inc
xchg
int
daa
orb
pop
or
push
sbb
nop
jae
xchg
daa
inc
gs
pop
or
jnp
add
pop
out
ret
jnp
daa
jae
es
in
movsl
in
sbb
into
cmp
sbb
add
add
es
add
adc
add
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
push
add
add
add
addb
add
add
add
add
add
add
add
add
add
dec
add
addb
add
jo
add
cwtl
add
addb
add
rolb
addb
add
add
add
add
add
add
add
add
add
pusha
add
add
loopne
add
add
add
add
add
add
add
add
add
add
mov
add
add
aas
add
add
add
add
add
add
add
add
add
add
mov
add
sbb
aas
add
add
add
add
add
add
add
add
add
add
fadds
add
xor
aas
add
add
add
add
add
call
aam
jbe
or
fdivrl
push
shl
mov
xchg
es
cmp
push
aas
add
lret
jbe
or
fdivrl
push
shl
mov
xchg
es
cmp
push
aas
add
lret
jbe
or
fdivrl
push
shl
mov
xchg
es
cmp
push
aas
add
mov
ficompl
push
mov
jge
mov
pop
jle
pop
mov
xchg
gs
sub
push
jmp
mov
push
xchg
adc
add
fisubrl
dec
sbb
call
xchg
into
jns
stos
mov
call
clc
fidivrl
out
in
xchg
jmp
inc
in
fisubs
and
or
pushf
pop
xorb
fldenv
cmc
fstl
cmc
xor
mov
loop
cmp
sbb
xchg
or
iret
lock
es
mov
pop
sub
cmp
pop
push
mov
mov
sub
loop
cmp
jbe
nop
jp
and
jo
dec
add
xchg
cmp
push
aam
aad
movsb
fs
lcall
cmp
shlb
or
sbb
cli
cmp
iret
xchg
stos
in
mov
aaa
pop
add
pusha
outsb
mov
adc
xor
arpl
ss
jno
push
repnz
xchg
and
cmpsb
mov
cmpsb
mov
sub
gs
sub
lods
push
pop
insl
adc
fnstcw
jg
cmpsb
mov
sahf
ljmp
dec
notl
mov
ja
psllw
mov
dec
js
xchg
std
dec
xchg
fidivl
fidivrs
jae
ror
scas
dec
add
sbb
das
xchg
shlb
stos
sub
hlt
daa
pop
lcall
ja
jnp
out
loope
icebp
fdivrs
cmp
mov
fcomps
int3
daa
cmp
insl
adc
sub
insb
fwait
movsl
fcom
sub
mov
inc
inc
xchg
out
std
xchg
mov
rclb
outsl
mov
sub
fsubrs
or
push
loopne
inc
push
movsb
lea
jno
mov
pop
mov
cmp
loop
xchg
lea
mov
mov
sub
xor
aam
into
stos
test
stos
nop
cmpsl
mov
lock
mov
adc
pop
aaa
jo
xchg
push
jns
jmp
mov
xlat
jns
pandn
xchg
imul
sub
dec
push
lahf
and
jno
cld
fmul
mov
les
scas
sbb
jno
pop
test
movsb
or
sub
fiadds
addr16
dec
les
jbe
cmp
xchg
repz
jnp
ja
hlt
cmc
nop
cmpsb
push
stos
sub
js
inc
arpl
cmpsl
fstpl
popf
leave
jo
ljmp
dec
stos
imul
xchg
outsl
mov
push
out
add
cltd
outsl
mov
or
dec
jecxz
dec
fdivl
pop
nop
fdivl
mov
inc
roll
aam
mov
dec
fstp
sahf
andl
mov
pushf
hlt
imul
test
xchg
sti
and
adc
imul
adc
fildl
add
movsb
pushf
icebp
punpckldq
sbb
mov
push
mov
sysexit
daa
inc
adc
add
jmp
jmp
dec
cli
dec
test
mov
or
cmp
cmp
movsb
push
es
in
push
mov
mov
leave
shll
fildll
adc
mov
jno
lret
movsl
sbb
add
adc
fs
std
jle
repz
shrb
pop
xchg
cmpsl
mov
inc
cmp
fwait
mov
push
jnp
mov
sbb
mov
and
gs
mov
in
les
shlb
jbe
sbb
loop
add
sub
push
pop
jbe
pop
add
xor
xor
daa
xchg
cmpb
in
cld
dec
push
or
jp
addb
lret
cmp
sahf
shl
pop
jg
fcomps
add
pop
icebp
pushf
or
es
addb
int3
and
adc
sbb
in
fwait
loope
mov
ret
stos
lahf
mov
sub
test
sub
loop
ds
inc
pop
inc
mov
jge
mov
jecxz
jle
imul
sub
dec
sbbl
data16
sbb
mov
test
jmp
xor
std
je
jne
xchg
xor
sub
aad
scas
push
mov
fiaddl
sarl
int3
push
adc
sbb
cmp
jae
or
jb
mov
inc
dec
sti
xchg
xchg
in
push
mov
stos
or
or
popa
mov
aas
sub
shl
aas
add
add
fucom
aas
add
add
add
out
add
out
add
out
add
out
add
out
add
aas
add
aas
add
aas
add
out
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
popa
jo
cs
insb
add
gs
xor
ja
outsb
push
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
outsb
jae
jne
jb
pop
push
add
push
gs
imul
imul
jb
arpl
jb
