idiv
call
in
sub
push
push
lea
push
push
pushl
push
and
mov
add
dec
xor
ret
fiadds
sub
inc
jne
push
lea
push
push
lea
push
jbe
jae
cld
lods
js
push
push
loopne
push
jbe
lock
sbb
int3
add
fcomps
incb
pop
aam
mov
push
push
or
dec
jno
add
sbb
add
aas
jmp
dec
decl
push
push
fidivs
sbb
ss
push
int
sbb
jns
jae
mov
add
add
loopne
adcb
lock
push
or
sbb
push
sbb
call
mov
aam
adc
cmp
jne
push
and
icebp
xchg
enter
loopne
out
or
insb
insl
outsb
push
push
in
es
xor
dec
in
sbb
sarb
mov
mov
and
flds
push
int
inc
mov
add
hlt
push
jp
dec
push
pop
lret
mov
sub
dec
loopne
jmp
lock
into
add
push
pop
loopne
clc
push
lock
add
push
push
jbe
faddl
pop
cmc
jae
lods
push
push
push
aaa
push
outsl
push
dec
dec
jne
sbb
pop
push
out
mov
jo
add
shl
add
addb
incl
negb
inc
push
inc
add
push
lock
dec
jns
xorps
fidivrs
push
not
dec
push
add
jmp
push
or
insb
push
scas
ret
inc
insl
insl
jo
push
repz
mov
ja
cli
add
add
add
popf
push
pusha
mov
movl
mov
lock
clc
or
test
push
cld
push
flds
rcll
inc
sub
add
sub
ret
jmp
mov
adc
add
cmpsb
xchg
int3
mov
inc
add
or
sbb
fs
sbb
dec
movl
adc
inc
sbb
inc
neg
orb
sbb
add
sbb
adc
dec
lcall
add
loopne
ss
and
jmp
pop
jmp
inc
leave
mov
push
mov
roll
pushf
mov
push
xor
inc
sub
test
xor
mov
mov
jbe
add
cmp
cmc
or
cmp
push
push
cmp
in
ljmp
push
dec
push
push
add
jo
lds
mov
ja
cmpsb
popa
mov
lea
dec
loopne
mov
testl
icebp
not
pop
mov
std
jg
sub
inc
add
dec
jne
cs
fsubrl
mov
orl
xor
jl,pn
mov
push
push
inc
add
mov
xor
push
pop
push
push
mov
add
sbb
add
add
and
xorl
arpl
push
lods
dec
xor
dec
pop
pop
pusha
push
add
arpl
add
repz
dec
loope
xchg
mov
inc
fcom
das
cmc
les
loope
xchg
outsb
xor
pop
mov
in
dec
pop
js
push
int3
movsl
fstp
hlt
sub
inc
pushl
mov
mov
jno
outsb
lret
addr16
in
sbb
sbb
add
push
xor
mov
jg
orb
mov
push
xchg
pop
cmp
pop
xchg
fdivrl
movhps
cmp
int
data16
js
xchg
fsubp
dec
push
xor
orb
push
inc
mov
dec
cld
rcr
mov
jmp
movl
push
xor
addr16
add
ja
bound
daa
inc
cwtl
test
stos
out
in
enter
std
hlt
incl
repz
adc
add
sbb
sub
xorb
cmc
pop
adc
sbb
aaa
loopne
insl
inc
add
jae
dec
rol
shrl
test
cmpsl
mov
lods
mov
inc
fcoml
push
push
pop
cld
or
jb
in
pushf
adc
xchg
int
sub
cmc
aam
add
scas
add
dec
clc
adc
imul
jae
push
add
andl
sbb
sub
mov
test
not
sub
movsl
jmp
cli
and
push
popa
sub
jae
push
movsb
cmp
jo
dec
es
test
adc
adcl
adc
push
sbb
rcr
adc
inc
cmp
cmp
push
jb
or
push
loopne
pop
imul
xor
pop
dec
cld
cmp
adc
fadds
sti
mov
sub
pop
dec
sub
dec
ret
aad
loopne
mov
gs
xor
pop
pop
insl
rcl
pop
push
mov
dec
inc
outsb
movsb
push
sub
lgs
xlat
out
and
test
or
call
mov
in
je
inc
lock
lods
lock
push
repz
push
xchg
jl
push
cmpsb
add
mov
test
mov
nop
xchg
push
mov
clc
mov
adc
fwait
cli
sbb
and
sbb
dec
adc
neg
push
jmp
inc
sbb
lret
inc
sub
in
or
hlt
les
push
ret
cmp
dec
add
cmp
dec
loopne
imul
repz
ret
sbb
int3
dec
inc
dec
push
addb
dec
jp
adc
or
add
orl
inc
neg
sub
push
fldcw
lret
not
sbb
inc
add
jg
in
pop
pop
sbb
jmp
add
lock
dec
mov
lcall
rcll
rolb
fiaddl
adc
adc
iret
ds
add
adc
inc
add
inc
sub
sbb
inc
jp
lcall
mov
add
icebp
dec
adc
sub
adc
add
dec
pop
jb
inc
adc
rorl
sub
jns
lods
pop
xlat
ds
fincstp
mov
jbe
jge
fcomps
cli
int
rcll
enter
int
pusha
mov
push
cmp
add
lods
pusha
add
sbb
mov
repnz
fisubrs
add
lcall
xchg
repnz
sbb
sub
cmp
xor
add
mov
enter
sbb
and
sbb
mov
xlat
sbb
pop
lret
outsb
fisttps
jnp
and
aaa
add
mov
in
fisubs
lret
int
push
add
push
fstps
sbbb
add
inc
adc
and
adc
fistl
push
sub
inc
jnp
fcmovu
int
cs
js
add
imull
loop
roll
xor
add
pop
push
mov
lret
add
inc
inc
or
jne
mov
leave
ret
inc
jl
lds
lret
add
jo
shll
sti
jmp
orb
fdivrp
mov
iret
add
adc
addl
inc
push
xor
arpl
inc
pop
pop
test
icebp
into
aas
es
push
jo
cwtl
mov
int3
sbb
xor
mov
add
mov
pop
push
and
cmp
xor
ljmp
insw
dec
push
add
sub
cmc
push
push
add
aas
icebp
push
add
lock
jne
rolb
shlb
in
add
or
in
js
stc
repnz
and
pop
mov
mov
jecxz
push
push
push
movsl
outsl
pop
aaa
mov
imul
inc
outsl
push
dec
push
lds
loope
jmp
pop
ds
push
arpl
xor
les
mov
jns
xor
xor
movsb
test
inc
movsb
jae
or
test
push
cmp
rorb
jo
push
fimuls
jne
incb
repz
adc
mov
dec
jp
jg
cmp
inc
lods
xor
pop
call
push
add
into
les
inc
inc
movsb
xchg
jae
push
test
and
push
xor
add
adc
jg
out
push
xor
push
cmpb
inc
aam
mov
and
dec
in
xorb
inc
push
jbe
mov
xor
jp
push
add
jb
jno
dec
jns
movl
mov
jle
mov
enter
add
pop
insb
jne
sub
ja
inc
dec
xor
xchg
pusha
clc
sub
arpl
mov
pop
jns
stos
in
ret
insb
clc
daa
je
sub
xor
sbb
out
int
jbe
sub
push
addr16
fdivr
aas
fisubrl
repnz
inc
not
popl
dec
adc
dec
inc
sub
mov
sub
inc
neg
dec
inc
roll
cmp
sbb
jmp
cmpsl
sub
sbb
inc
sbb
sub
neg
adc
rcrb
insb
inc
std
jmp
mov
flds
testl
fimuls
iret
inc
arpl
es
push
imul
add
sub
inc
jg
hlt
mov
cli
dec
add
sbb
mov
fiadds
icebp
sti
push
lcall
rorl
adc
sub
sbbb
fildl
daa
gs
cld
pusha
cmp
into
aam
repz
dec
adc
mov
inc
mov
fiaddl
cmp
add
js
lock
scas
stos
push
jb
push
outsl
dec
int
scas
push
and
jo
and
fwait
jmp
inc
mov
push
push
dec
sub
mov
cld
dec
inc
inc
cmp
adc
or
rolb
imul
cmp
add
lods
add
cmp
pop
filds
nop
mov
sbb
adc
sub
push
push
daa
jmp
dec
push
sti
ljmp
aad
jae
pop
push
push
mov
and
inc
push
test
into
jns
add
ljmp
jo
sub
dec
inc
pop
mov
in
in
cwtl
iret
add
dec
data16
rolb
daa
shll
movsb
inc
and
sbb
mov
xor
es
adc
push
mov
ret
inc
dec
mov
inc
lcall
in
pop
movsl
cmp
pusha
or
push
je
rolb
inc
dec
pop
jb
in
pop
adc
sbb
ljmp
and
les
or
mov
neg
mov
cld
xor
dec
pop
sub
cli
loope
adc
xor
cli
dec
not
pop
out
inc
xlat
fstpt
sbb
dec
sbb
fucomip
sbb
jg
loop
stc
inc
push
mov
repz
dec
add
inc
sbb
adc
dec
inc
push
sbb
adc
push
mov
dec
aas
mov
cmp
insl
pop
inc
xchg
pop
cld
add
add
push
inc
stos
push
jne
jmp
push
jae
sub
push
scas
lock
pop
lahf
xor
cmp
notb
jle
bound
and
add
pop
test
add
push
pop
pop
test
hlt
daa
std
aas
inc
or
push
push
cmpsb
stos
push
shrb
add
aas
push
add
shll
in
scas
xchg
lock
jae
into
inc
mov
addb
outsb
add
dec
sbb
clc
add
mov
push
imul
cs
push
test
loopne
insb
xchg
dec
addr16
sub
in
mov
push
xlat
dec
pushf
pop
rclw
mov
inc
dec
imul
loope
dec
notl
push
mov
js
addb
sahf
push
sub
mov
cld
int
add
neg
mov
pop
lock
push
mov
adc
lds
dec
and
lock
inc
xlat
out
arpl
and
pop
outsl
addl
je
xor
outsl
cmp
jns
daa
sub
dec
clc
daa
and
and
sbb
scas
push
outsb
xor
fdiv
sub
add
pop
leave
ret
cld
lahf
test
add
push
movsl
sbb
mov
push
in
enter
cwtl
fs
incl
dec
add
orl
push
jle
push
sbb
push
push
stos
lock
enter
inc
add
adc
addb
incb
sbb
rolb
push
cmp
mov
adc
dec
cmp
sbbb
add
fnstsw
loopne
lret
dec
add
sbb
neg
std
cmc
loope
mov
movl
push
data16
or
adc
or
adc
neg
inc
mov
pop
xchg
push
add
sub
add
fcom
lds
jnp
jecxz
ss
mov
das
add
xchg
push
sub
push
aas
cmp
cmp
popa
jbe
dec
aas
js
add
push
add
testb
aaa
adc
push
dec
sub
adc
lret
or
lret
inc
movsl
mov
mov
xchg
mov
add
push
jo
adc
jp
push
and
add
pop
gs
ljmp
std
adc
decb
add
push
jo
cld
les
mov
mov
popaw
adc
notl
xor
pop
push
jbe
xor
in
in
mov
add
sub
adc
movsl
or
lahf
mov
fsubrs
xor
imul
pop
repz
mov
psubd
pop
cwtl
add
iret
sbb
push
cmpsb
movsb
call
jle
insb
gs
push
nop
insb
add
in
jmp
push
xor
pop
scas
loopne
cltd
test
loopne
sub
or
sub
add
sub
xlat
jp
hlt
neg
add
lock
mov
sbb
add
add
push
repnz
jne
xchg
push
fs
push
insb
sbb
push
pop
arpl
cli
inc
inc
add
fcoms
dec
inc
xchg
push
or
popf
inc
or
insl
lcall
in
hlt
std
outsl
or
enter
jns
repz
lock
arpl
sbb
in
push
push
xor
inc
inc
aad
cwtl
es
loopne
adc
inc
rcr
clc
gs
and
add
rorb
inc
cmpsl
mov
aam
gs
clc
dec
shlb
arpl
inc
test
pcmpeqw
hlt
add
push
sub
test
out
jl
mov
cwtl
jle
xorb
inc
lock
xchg
push
mov
cli
pop
fwait
decb
dec
jo
xor
sbb
add
or
cmp
inc
cld
imul
dec
movsb
cmp
push
push
shr
pop
test
adc
das
push
sar
add
dec
add
dec
fdiv
scas
add
add
lret
pop
inc
ds
push
ret
push
add
adc
pop
inc
add
xor
stc
subb
test
and
pop
dec
sub
sbb
inc
sub
add
xor
inc
jne
push
in
push
dec
dec
push
add
outsb
xor
and
daa
in
pop
jne
push
cmp
mov
sbb
or
push
pop
mov
lahf
addr16
sbbb
jg
or
mov
ljmp
xor
inc
and
jecxz
adc
sub
in
rorb
iret
sbb
and
cmp
mov
push
aam
fiadds
or
mov
aam
jo
je,pt
xchg
mov
xor
push
jge
inc
ss
jle
sub
movsl
mov
add
pop
mov
imul
ja
push
cmp
mov
lods
push
fs
jnp
test
push
fucomi
inc
movsl
mov
dec
les
jp
fs
loopne
aas
repz
mov
les
inc
mov
mov
jne
imul
xor
bound
xor
and
popf
adc
inc
add
sub
mov
push
dec
testl
mov
add
insb
sbb
sub
inc
pop
jp
ljmp
cmp
and
fdivrs
push
jne
inc
imul
jbe
insb
outsl
push
rorb
gs
push
jo
push
cmp
xchg
arpl
rclb
push
cld
hlt
sub
les
mov
add
aam
mov
ret
or
call
mov
xor
aam
xor
xchg
pop
xor
sbb
addb
loopne
xchg
das
and
in
leave
ret
cli
push
ret
mov
iret
push
sbb
idiv
add
orb
aad
adc
loope
icebp
xor
shrb
jb
push
push
test
jmp
sub
dec
lock
mov
xor
je
push
push
addr16
and
adc
push
add
jns
add
lahf
push
mov
adc
stc
fstps
insb
and
aas
or
stc
ja
nop
pop
add
xchg
cmpsb
xchg
sbb
jmp
mov
mov
xchg
inc
lds
adc
mov
stc
add
cld
cmp
andl
mov
mov
add
imul
xor
clc
cmp
add
or
imul
or
inc
adc
scas
std
in
pop
mov
or
lahf
movb
xor
divb
pop
sbb
add
test
fldl
out
jecxz
cmpsl
data16
mov
add
adc
jmp
xor
pop
jae
cmp
movb
jnp
cmp
sub
mov
out
xchg
add
daa
cld
xor
jns
fidivrs
cwtl
cltd
add
cld
divl
add
ss
in
stos
subb
lods
ret
sbb
out
iret
pop
or
clc
push
jno
jp
xor
adc
dec
je
fcoml
or
add
xchg
jbe
cwtl
popf
mov
lret
mov
into
push
insb
pop
sub
cltd
stos
andb
popf
mov
sub
outsw
sbb
mov
xchg
add
add
cmp
xchg
ret
je
jp
mov
jecxz
lea
dec
fidivrl
fidivs
mov
mov
mov
push
lds
add
xor
add
or
jge
stos
add
cmpsb
push
add
and
fadds
ret
and
popa
jbe
in
or
add
addr16
jo
gs
dec
addr16
xor
push
mov
xchg
jmp
mov
fcoml
sub
xor
pop
sti
loop
mov
lahf
movsl
insb
xchg
mov
push
xchg
jg
gs
xchg
js
push
sahf
xchg
push
lods
test
orb
and
xchg
in
sbb
xor
and
dec
jbe
cwtl
push
mov
pop
pop
mov
add
xor
push
imul
aaa
int
leave
add
js
je
shll
xor
cli
xchg
insb
sbb
xchg
add
jecxz
mov
mov
lds
sbb
jne
pop
push
add
pop
add
sti
jle
xor
and
sbb
inc
scas
pusha
pusha
or
xchg
loope
inc
sbb
jne
ja
scas
mov
or
lock
sti
push
cmp
mov
xchg
or
cmpsl
jno
rsm
and
in
out
inc
jecxz
or
addb
push
push
aad
clc
sbb
pop
or
repnz
and
dec
icebp
xchg
and
pop
outsb
jmp
hlt
movsb
sub
daa
inc
jmp
push
mov
xchg
sbb
aas
xor
sbb
pushf
data16
cld
cmpsl
mov
xchg
aas
int
in
cmp
test
movl
mov
fldenv
mov
popf
add
or
mov
shlb
repnz
or
jl
fwait
mov
mov
int3
lods
inc
mov
sahf
mov
xor
in
cmp
loope
out
sub
jl
mov
fwait
dec
aad
shll
pusha
push
scas
push
stc
sarl
mov
wrmsr
bound
sub
xchg
xchg
in
cmpsb
dec
and
fwait
mov
xor
test
popf
lret
sbb
add
sub
pop
push
loope
popa
rolb
mov
inc
inc
pop
xchg
cld
pop
and
sbb
or
in
mov
test
sti
aam
repnz
inc
scas
repnz
and
xor
add
scas
adc
sub
mov
adc
or
fildll
cmpl
test
roll
not
lea
movsl
not
iret
jl
scas
adcl
pop
mov
shll
sub
xor
cld
lcall
and
lock
push
negb
push
inc
xchg
jg
push
lock
jno
pushf
mov
cmp
push
mov
iret
cmpsl
add
adc
cmp
cmp
mov
in
es
sbb
mov
adc
sub
mov
push
pop
push
imul
rcrb
out
pop
mov
mov
mov
sbb
mov
fistpll
stc
push
fldl
in
lcall
pusha
cmp
roll
xor
loop
mov
fdivr
push
leave
sub
cwtl
sub
pop
dec
lret
xor
cmp
les
mov
push
pop
pusha
add
fisttpll
mov
rcrl
mov
lea
clc
xor
xchg
aad
xor
pop
xchg
xor
pop
iret
cmp
js
cmp
and
js
push
roll
sbb
movsl
insl
push
pusha
sbbl
inc
push
lock
inc
dec
inc
pop
sbb
sbbb
and
ljmp
loopne
jo
aas
jo
rorl
xchg
arpl
or
mov
jbe,pn
and
flds
cs
mov
push
outsl
xor
xchg
lret
sbb
push
imul
lret
insl
icebp
mov
arpl
pop
lock
inc
fidivl
mov
push
pushf
test
inc
adc
clc
add
imull
cmpsb
mov
or
jbe
mov
cltd
sbb
pop
fnsave
outsl
cwtl
cwtl
jnp
insl
push
movsl
inc
pop
or
and
gs
mov
push
pop
hlt
aad
mov
insl
xchg
cmp
jno
adcb
popl
and
test
loope
mov
repnz
dec
in
adc
xchg
sub
mov
sbb
dec
mov
add
out
ja
jne
inc
jo
xor
xchg
and
jp
mov
inc
add
imul
sbb
or
nop
lds
js
xchg
push
sub
mov
add
mov
test
inc
sbb
out
mov
movsb
scas
or
add
jae
push
xor
xlat
and
sub
sbb
push
inc
iret
mov
dec
repz
test
sub
add
dec
mov
inc
xchg
fiaddl
sar
add
loop
xchg
pop
mov
cmp
aas
cmp
mov
add
scas
push
fcmovb
test
daa
adc
fsubs
fbstp
adc
jno
dec
add
sbb
outsl
cltd
cli
add
add
das
and
mov
inc
stc
mov
push
rcrl
adc
cltd
or
popa
pop
or
jno
xor
jns
mov
inc
pop
add
lret
dec
cmp
inc
cmp
mov
cmp
mov
cld
inc
adc
xchg
push
clc
inc
cmpsb
jecxz
fsubrl
iret
call
push
pop
in
and
lods
sti
test
xor
adc
hlt
call
shrl
fiaddl
icebp
dec
xchg
jl
add
in
mov
jne
outsl
jbe
addl
dec
jb
pcmpgtb
jge
mov
cld
pop
xchg
aad
aad
mov
movl
sub
jae
jne
bound
mov
inc
push
jb
mov
arpl
xor
rolb
int
inc
pop
and
dec
dec
sbb
je
cmp
daa
adc
popa
add
mov
mov
sarl
ret
pop
jl
cld
add
stos
mov
jmp
mov
ds
bound
jle
andl
test
subb
in
xor
inc
mov
cwtl
jl
push
pop
test
push
sub
jae
adc
or
out
add
mov
movsb
inc
incb
or
enter
test
and
adc
test
mov
jno
stc
push
jnp
dec
inc
push
test
test
stos
jno
int3
or
inc
xor
add
mov
mov
aaa
ret
popf
inc
test
stos
dec
aas
inc
fwait
ljmp
xlat
loope
je
or
leave
cmp
int3
rorb
adc
fstl
imulb
addr16
in
add
mov
rcrb
jnp
das
sbb
pop
mov
add
xor
testb
loopne
add
xchg
push
jno
xchg
or
outsb
nop
or
je
inc
inc
xchg
sbb
rol
daa
xchg
sti
mov
stos
jno
push
data16
pop
loop
jae
push
xorl
aas
shll
pusha
lea
pop
xor
and
imul
cmpsl
jp
fisubl
in
sub
push
cmp
xchg
clc
cmp
leave
daa
cli
mov
inc
mov
mov
outsb
sub
adc
push
lret
dec
insl
cmpsl
mov
dec
cwtl
xchg
out
xchg
mov
add
sbb
mov
dec
insb
shlb
or
fistl
push
lds
adc
dec
scas
and
dec
lock
repz
fbld
xchg
aas
add
jmp
and
scas
jp
pop
add
or
not
lock
xor
lcall
push
inc
sbb
or
fidivl
jno
add
pop
xchg
adc
fisubrs
in
repnz
mov
inc
movb
call
scas
scas
pop
das
mov
jbe
fmul
and
pop
mov
cs
mov
jo
dec
mov
sub
cwtl
cmp
push
jg
daa
inc
xor
sahf
jo
add
inc
shll
js
pop
jno
cmp
pop
adc
add
rolb
jns
fs
sbb
loopne
and
pop
pop
mov
fmul
aad
sbb
xchg
imul
add
push
sbb
pop
jl
enter
xlat
js
mov
aad
push
sti
popf
dec
mov
mov
cmpl
stos
aad
mov
jmp
dec
push
mov
push
stos
das
inc
fiadds
jne
pop
xchg
xor
pop
stos
scas
push
push
dec
fcomps
addb
shrl
mov
cmc
push
dec
xor
insb
lds
arpl
es
mov
push
xor
and
outsb
sar
and
lret
ror
push
clc
add
int
inc
ret
test
pop
pop
aam
lods
push
sub
aas
rolw
scas
hlt
icebp
mov
mov
inc
or
daa
pop
and
pavgw
pop
cmp
sbb
xchg
popf
aaa
or
insb
clc
cwtl
xlat
fs
mov
xchg
sbb
xchg
or
push
in
cltd
lea
sbb
scas
out
inc
jnp
inc
out
push
rcrb
call
pop
or
adc
adc
push
xchg
rclb
lret
sbb
mov
out
test
test
jne
jns
push
daa
push
cmp
sbb
and
inc
testl
cmp
fistpll
mul
mov
es
add
movsb
seta
mov
mov
sbb
push
and
mov
mov
stc
popf
negb
or
jl
mov
cmp
xor
dec
push
or
jno
jne
mov
inc
mov
mov
dec
sbb
das
cli
lret
lret
ljmp
test
addr16
or
lods
add
aam
add
ret
aam
rcrb
mov
mov
fldlg2
xor
or
adc
and
lret
dec
ret
jo
sub
scas
jp
cmp
mov
pop
and
mov
das
sti
push
inc
add
arpl
mov
imul
daa
xchg
xor
ljmp
popa
cmp
lock
loopne
and
cltd
or
addb
add
inc
jp
jo
or
les
icebp
jecxz
mov
xchg
test
add
aad
xlat
fs
add
mov
sti
jp
mov
mov
push
loopne
ja
sbb
push
push
cmpsl
adc
ja
cmp
push
std
gs
shrb
add
mov
jnp
or
mov
push
pop
cmp
push
jl
add
mov
sub
aas
push
ret
pop
lods
push
ficoms
push
add
and
cmp
sbb
pusha
stos
add
cs
js
and
movsl
cmp
jnp
mov
and
aas
movb
test
fimull
loope
aad
add
push
mov
mov
fs
lock
ljmp
jl
les
aam
icebp
inc
sti
mov
cmp
mov
sbb
mov
dec
xchg
xchg
dec
pushf
rcrl
mov
or
cmp
mov
sub
test
fisttpll
and
mov
push
outsl
mov
rorl
stos
push
or
inc
loop
loop
inc
dec
or
inc
mov
rcr
pop
pop
jbe
pop
loope
orl
dec
sbb
jnp
inc
mov
popa
xchg
mov
in
xchg
dec
into
or
inc
cmpsb
add
movsl
lock
mov
pop
push
add
cmp
out
pop
inc
push
aam
rcl
push
lock
loopne
cld
lds
daa
movsl
push
xchg
pop
push
ficoml
popa
roll
jl
jmp
or
aad
aas
push
mov
ds
mov
lahf
movsl
shrl
sarl
shl
mov
movsb
sub
or
jnp
or
sbb
push
pop
imul
pop
lahf
arpl
scas
shlb
mov
mov
test
sbb
shlb
push
cmc
xor
movsb
inc
add
loop
cmpb
pop
lods
jne
scas
jl
or
ljmp
inc
lea
push
aaa
dec
data16
ret
mov
lods
fisttpl
xor
jb
cmpb
mov
cmp
dec
mov
and
in
ret
inc
inc
pop
pop
cmp
insl
hlt
jle
mov
cs
shll
mov
jge
add
pop
fstpt
pop
add
cmc
addr16
mov
test
adc
insb
xchg
and
pusha
lds
insb
daa
jbe
das
xchg
shlb
leave
sbb
stos
xchg
mov
xor
mov
sbb
xchg
cwtl
ss
lods
and
test
lret
repnz
shrb
mov
pop
pop
test
mov
iret
stc
lea
out
adc
leave
mov
call
insl
popa
aam
pop
pop
xchg
icebp
insb
test
mov
and
mov
pop
jmp
or
rclb
cmp
or
out
cmpsb
or
jno
ror
orl
jg
pop
cmpsl
adc
or
ret
orl
pop
clc
mov
pop
pop
or
sub
inc
es
inc
movsb
int3
test
cmp
in
or
xchg
mov
cmc
add
mov
test
adc
push
cwtl
cs
sub
shll
push
je
popl
ficoml
imul
pop
cli
clc
mov
jnp
cmc
adcb
mov
mov
inc
clc
adc
jp
subb
hlt
shr
bound
push
add
mov
test
popf
lods
ljmp
xor
jle
mov
lock
push
pop
mov
push
fs
sbb
push
lea
out
inc
jo
pop
sbb
pop
pop
and
mov
imul
in
aam
cwtl
add
push
mov
test
inc
pop
push
mov
dec
ret
pop
jne
sbb
xor
arpl
sbb
iret
mov
fwait
mov
push
mov
rcll
inc
int
push
pusha
mov
popa
sbb
enter
push
cmc
mov
xor
pop
mov
stos
mov
imul
mov
jg
dec
inc
aam
test
shrb
dec
dec
mov
jo
inc
mov
jecxz
sub
inc
sbb
xchg
pusha
lods
sahf
out
ficoml
push
xchg
cwtl
movsl
push
aad
pop
sbb
and
fiaddl
imul
cli
jl
jns
stos
cltd
icebp
add
lcall
or
repnz
adc
inc
enter
push
push
loopne
sub
pop
bound
sbb
pop
popa
loop
enter
adc
cmp
jnp
aam
add
xor
lret
jo
add
or
cmp
dec
andb
mov
ds
sbb
clc
pop
xchg
sbb
push
pop
inc
add
arpl
inc
rorl
inc
cmpl
call
jbe
jo
lock
cmp
cld
fbld
push
push
imul
or
pop
sahf
push
adc
push
xchg
inc
pop
outsb
cli
mov
mov
inc
jl
adc
or
pop
stos
hlt
xchg
in
fnsave
lea
ret
sbb
jl
xor
loope,pt
push
shll
popf
hlt
enter
jge
sub
push
repz
popa
dec
int3
fidivrs
outsb
rcrb
mov
inc
xchg
lret
andnps
inc
ret
enter
add
mov
js
mov
jp
stos
xorb
dec
jecxz
jne
orl
or
mov
arpl
into
lcall
adc
loop
pop
jle
call
xchg
or
push
jb
jb
je
push
out
loope
insb
shr
outsb
mov
aad
lret
cs
sub
int3
movsb
dec
adc
shll
insb
mov
and
adc
cli
adc
mov
ret
or
sub
sub
aam
or
into
or
add
sbb
inc
mov
ja
rclb
arpl
insb
jle
mov
sahf
fstl
cmpsb
and
pop
pop
mov
jp
fiaddl
idivb
add
sbb
mov
push
sub
mov
lfs
wbinvd
jae
pop
mov
out
adc
pushf
mov
leave
jmp
loop
bound
pop
xor
mov
movsl
adc
add
test
jg
mov
orb
sarl
add
mov
jg
inc
dec
push
jbe
mov
adc
incb
cwtl
jnp
out
cmc
add
shl
xor
push
inc
xchg
add
mov
pop
cwtl
or
pop
movsl
sbb
inc
fsubs
iret
lret
inc
mov
fiaddl
mov
adc
cmpsb
leave
lods
mov
js
xchg
or
out
clc
loopne
movsb
xchg
sub
ret
cmc
add
cmp
orb
adc
inc
dec
cmp
or
xchg
loopne
inc
imul
mov
dec
jbe
sub
jnp
xlat
adcb
or
in
imul
pop
cmp
xchg
enter
or
pop
jle
inc
dec
add
inc
add
push
data16
add
test
aaa
insb
adc
mov
rcrl
or
scas
xor
push
fldcw
jge
adc
dec
sbb
fstpt
faddp
dec
inc
clc
test
add
xor
jg
push
cmpsl
mov
mov
scas
mov
mov
or
out
jns
adc
js
cld
aad
arpl
pop
lcall
cwtl
dec
inc
fs
xlat
fprem1
add
push
xor
aas
iret
xor
pop
pop
cli
fwait
dec
jecxz
jns
pusha
lcall
js
sub
rcll
push
adc
rcrb
lods
add
pop
stc
loopne
jecxz
xorb
sub
jb
sahf
shrl
js
ja
jbe
mov
mov
or
imul
movsl
ds
jne
js
fld
shrb
mov
scas
icebp
dec
cmp
aaa
les
mov
xchg
cmpsb
aad
xlat
fucomp
fwait
xor
xor
pop
int3
mov
aad
pop
shlb
cmc
mov
push
int
push
negb
inc
mov
imul
pop
sub
xchg
jle
mov
xlat
mov
jno
lds
cmp
mov
or
rcr
push
sbb
dec
lods
jb
ret
test
jns
add
test
cld
inc
lret
dec
addb
pop
xor
insl
aad
jp
sbb
rcr
je
inc
fs
or
push
mov
inc
fstpl
dec
mov
mov
cltd
ja
xor
lods
push
jo
mov
shll
push
push
mov
pop
inc
push
fidivl
xchg
scas
lods
add
sbb
xor
jle
rcll
aam
sbb
int3
and
and
jmp
mov
inc
inc
insb
push
scas
imul
lret
add
push
les
cmpsl
pop
sub
mov
icebp
push
ds
mov
dec
js
mov
mov
mov
jb
xchg
rol
and
pusha
xchg
out
shl
clc
jo
loopne
or
out
hlt
loope
add
xlat
jg
lods
push
arpl
rcll
lahf
cs
es
push
ret
adc
inc
mov
aam
sbb
clc
insl
or
xor
mov
clc
scas
mov
jne
jmp
lods
gs
lahf
pop
lcall
ljmp
cmp
outsb
shlb
or
and
sub
andb
adc
test
fisubl
mov
sub
rorl
dec
lret
clc
xchg
frstor
pop
js
gs
xor
popa
dec
mov
fwait
ret
mov
dec
sub
jle
sti
xor
and
ret
xor
xor
dec
dec
bnd
lock
push
lods
sbb
cmpsl
push
aas
pop
sbb
movl
je
mov
xchg
pop
or
test
sbb
dec
inc
repz
mov
adc
xchg
sub
mov
or
jp
xchg
and
mov
mov
pushf
pop
je
insl
stos
daa
push
nop
call
xlat
and
sbb
scas
aad
test
inc
movsl
jo
outsl
and
pop
and
push
push
adc
mov
mov
xchg
sbb
into
mov
cmpsl
cmp
notl
mov
add
push
sbb
aaa
mov
shr
push
loop
push
pop
adc
mov
inc
pop
xchg
push
pop
sbb
sti
fidivrs
fmull
xor
push
cwtl
pop
call
mov
mov
pushf
or
ss
pop
arpl
data16
sbb
inc
mov
mov
popf
ret
push
js
cmp
test
sub
pop
fbstp
inc
push
or
inc
bound
jg
sub
iret
pop
outsl
xor
lcall
adc
daa
add
movsl
xchg
add
inc
push
fildl
jbe
repz
adcl
adc
jle
xchg
push
add
call
pop
or
fwait
shll
pop
lret
ror
jo
movsb
inc
pop
stc
xor
dec
orl
cmp
or
ljmp
gs
dec
int
sub
mov
iret
add
lcall
rolb
xchg
fsubs
out
mov
les
cmp
jmp
mov
imul
push
dec
sbb
js
pop
cmpb
mov
mov
fmuls
fs
add
rolb
repnz
jle
or
test
jno
in
ss
loop
xor
mov
pop
cwtl
xchg
push
dec
add
andl
adc
and
inc
push
loop
mov
std
xor
xor
sahf
es
pop
hlt
test
push
call
loop
mov
leave
sbb
mov
imul
add
mov
add
and
jle
std
call
mov
dec
push
dec
adc
cmp
fldcw
rol
loopne
dec
popf
mov
bound
jl
cmp
pop
repnz
add
insb
push
ret
lea
adc
nop
push
sbb
inc
loop
cmp
and
add
jno
pop
adc
cmc
push
ds
cltd
daa
into
dec
adc
mov
in
hlt
or
clc
clc
or
adc
adc
mov
sub
out
pop
jecxz
push
fadds
fs
cmp
or
sbb
xchg
add
sub
pop
push
xchg
xor
sbb
fwait
add
dec
push
lahf
dec
jecxz
shlb
xor
lret
lret
mov
xor
xchg
mov
test
dec
fsubs
xchg
fstpl
ss
orl
jno
sbb
test
js
sbb
pop
or
fwait
jns
inc
mov
je
aad
push
xchg
out
arpl
inc
push
lret
mov
pop
or
pop
xchg
xchg
fimull
sbb
sbb
cs
stc
xlat
push
cmp
lret
push
shl
stc
xor
adc
xchg
pop
add
out
mov
jne
cmc
mov
xor
out
aad
inc
jp
lea
xor
dec
add
or
mov
je
les
jno
adc
cmpsb
shrb
cmc
fsubrl
ret
leave
dec
push
rcl
add
outsb
nop
inc
andb
mov
add
cmp
mov
mov
push
sbb
dec
scas
push
or
cmp
jns
aas
sub
lcall
pop
add
scas
jmp
pop
out
sbb
mov
sbb
dec
notb
mov
jle
cmp
add
cmpsl
movsb
adc
push
scas
xchg
adc
mov
dec
scas
push
add
les
aad
and
pop
or
jns
insb
aam
push
adc
inc
xchg
inc
sarl
scas
dec
push
inc
adc
out
jmp
mov
or
xchg
adc
pop
push
jmp
ds
pop
lods
jl
jno
fnclex
jl
push
cmp
push
es
data16
inc
inc
mov
shll
xor
xchg
push
cmp
mov
push
imul
mov
or
bound
mov
fst
xchg
lret
aas
outsb
sbb
push
xchg
fldenv
sahf
xor
dec
orw
add
jp
cbtw
int3
xor
xchg
jecxz
jg
jmp
and
dec
dec
add
pushf
inc
jecxz
insb
pop
add
sub
leave
jl
pop
fsubrs
push
or
imulb
out
or
mov
adc
subl
rcrl
insl
cli
rcrb
cmp
add
dec
xor
das
xchg
xor
inc
mov
icebp
int
pop
fbld
stc
or
cmp
rclb
popf
call
loopne
enter
sbb
dec
push
mov
adc
imul
and
ljmp
mov
cmp
stos
push
std
rolb
sbb
and
rorb
outsb
cmp
fcmovnbe
mov
out
push
mov
dec
imul
cmp
cmp
dec
add
sub
addl
add
and
bound
xor
mov
xchg
pop
mov
int
pop
mov
mov
loopne
jmp
adc
loop
mov
outsl
or
jmp
push
mov
jns
scas
js
pop
lds
pop
out
mov
pushf
add
mov
jmp
adc
push
cmpsl
adc
push
jecxz
loope
inc
ja
dec
xchg
and
xchg
cmp
rcrl
dec
xor
xor
fucomp
dec
popa
subl
pop
jne
loopne
xor
cltd
aaa
sbb
or
fldcw
add
clc
sbb
jge
sbb
adc
mov
sbb
xchg
jge
nop
mov
mov
test
add
pop
aad
ljmp
in
jmp
out
insb
dec
ljmp
add
xchg
xchg
loop
or
inc
cmp
loopne
mov
arpl
xchg
pop
out
test
mov
inc
mov
aam
rcrb
loope
cmp
dec
mov
out
push
in
push
pusha
dec
mov
sahf
mov
int3
cmp
clc
xor
jns
mov
pop
std
push
jmp
dec
clc
pop
sbb
les
mov
outsb
sub
adc
or
adc
cli
shlb
fld
cmpsb
sbb
imul
push
mov
dec
and
inc
xchg
mov
lock
xor
pop
pushfw
cmp
imul
jno
cli
lahf
shr
int3
jle
stos
jp
das
or
int
arpl
dec
push
fs
pop
mov
stc
xor
movsl
int3
testl
arpl
fisttpl
sub
jmp
cmp
popa
shr
push
xor
mov
or
cmp
cmpsb
dec
xor
or
mov
andl
mov
jb
or
xchg
push
out
inc
jg
jae
in
jecxz
adc
lahf
mov
mov
mov
add
pop
and
shlb
push
and
sub
lods
flds
lods
adc
and
loope
dec
xchg
andb
xchg
loopne
ret
xor
cmp
scas
add
cmc
fbstp
xchg
jo
cmc
out
cmp
repnz
xchg
push
in
insl
stos
mov
pop
or
rolb
bound
sahf
stos
rcr
adc
pop
and
jns
jl
inc
and
outsl
xchg
inc
ljmp
mov
cwtl
rcll
lds
and
adc
pop
xor
pop
repz
pop
popf
rolb
shrl
shl
lods
cmpsb
lods
mov
push
mov
fwait
push
pushf
mov
test
dec
mov
sbbl
hlt
das
jecxz
and
xor
jge
dec
movsbl
out
add
sahf
data16
sbb
in
push
outsb
jecxz
mov
jo
gs
int
sahf
sbb
in
push
lahf
scas
inc
pusha
cmpsl
pusha
ss
fdivl
mov
inc
mov
cmp
ret
test
sub
dec
push
ja
and
pusha
sub
push
pop
pop
adc
in
lcall
lcall
dec
test
cmp
jo
adc
mov
or
inc
xor
cmp
mov
int
sti
cmp
rclb
lahf
xchg
sti
jp
fs
shrb
pop
pushf
xor
in
pop
sub
adc
lea
out
add
push
fdivs
jle
int
sub
mov
jl
cmp
mov
add
jns
sbb
inc
rcl
repnz
or
xor
cmpsb
aas
ss
loope
aaa
dec
xor
push
data16
enter
mov
xchg
lods
inc
cmp
test
pop
fbld
sbb
mov
movsb
push
rcrb
jecxz
rorb
dec
xchg
fcoms
mov
aad
clc
cmp
insl
pop
and
call
jae
inc
std
scas
or
jo
shlb
and
cmp
sub
mov
push
sbb
aad
lock
loop
jp
cmp
shll
int3
xchg
frstor
xor
xlat
int
jge
ja
inc
pop
add
pop
sub
jbe
cmp
loope
dec
inc
test
aam
xor
xor
imul
xchg
out
mov
in
test
lods
shll
fsts
insb
sbb
push
mov
mov
mov
hlt
ljmp
xor
idiv
lods
or
int
cmp
mov
lcall
clc
addb
mov
loop
ret
pop
push
push
add
dec
pop
inc
or
daa
push
or
inc
stc
push
outsl
leave
inc
mov
pop
push
in
xchg
mov
inc
stos
sub
les
outsb
mov
loopne
push
cmp
inc
pop
xchg
push
sub
into
jno
jno
mov
push
enter
insl
movlhps
sar
push
jns
movsb
mov
dec
jge
int
pop
testb
mov
icebp
es
push
mov
scas
adc
mov
adc
cmp
inc
push
in
rcr
xor
test
lods
cmp
push
push
scas
cmpsb
int
aas
xchg
cltd
arpl
fldt
xchg
mov
xchg
out
data16
sbb
aam
cmp
add
or
push
loope
stos
cmpsb
orl
dec
add
mov
rol
lods
dec
aad
adc
fidivrs
pop
mov
xchg
mov
into
xchg
add
lock
hlt
pop
aam
fs
xchg
sar
sbb
jmp
imulb
push
xor
add
andb
lds
and
int
popf
and
or
f2xm1
aad
movsl
inc
rcrl
test
cli
mulb
icebp
inc
cmp
jmp
mov
sub
xchg
mov
and
test
push
push
cmpsb
push
cmp
hlt
outsb
jle
xchg
or
jo
incl
mov
rol
jg
das
or
popf
sbb
mov
add
jl
pop
rcrl
mov
sahf
adcl
shl
mov
mov
imul
movsb
dec
subl
sahf
sub
lea
rorb
add
adc
and
pop
adc
dec
sbb
ret
scas
xchg
add
ds
sbb
sub
cmp
and
fs
push
inc
mov
inc
gs
xchg
jecxz
in
sub
mov
stos
fcompl
rclb
js
push
lds
adc
add
cmpsl
cmp
loope
lcall
into
pop
mov
adc
mov
insb
ret
cmp
push
jg
scas
adc
cwtl
xor
mov
jnp
clc
test
sub
icebp
arpl
sbb
sub
stc
aas
dec
add
test
xchg
pop
cmpsl
add
test
int
sti
loopne
xor
adc
lea
daa
decl
cmp
jp
jecxz
mov
dec
roll
push
sti
pop
mov
mov
ja
sbb
sbb
jno
jl
add
and
shlb
sbb
mov
or
mov
rorl
fimull
mov
xor
cmpsl
lcall
push
dec
add
inc
ss
inc
out
pop
repnz
loope
inc
bound
ds
jl
sub
dec
push
outsl
in
cli
into
lcall
int
sbb
je
test
fcmove
aam
mov
das
lea
inc
mov
cwtl
dec
aad
arpl
mov
pop
xchg
shrb
or
or
rolb
rorl
or
or
jo
jmp
pop
data16
add
lods
jnp
icebp
test
mov
ds
cmp
xchg
mov
lds
pop
xor
fisubrl
pop
pushf
jmp
daa
pop
xchg
les
pop
lret
fwait
xchg
mov
add
sub
loope
int3
pop
pop
push
pop
mov
inc
cmp
xchg
add
inc
xchg
enter
int
adc
mov
and
repnz
imul
andb
lods
jmp
jl
out
cld
mov
insl
mov
adc
or
and
mov
lret
cmpsl
lock
cli
incl
dec
xchg
or
adc
add
mov
mov
mov
clc
mov
add
in
jmp
xchg
push
test
js
mov
push
jecxz
push
icebp
dec
fs
cmp
sub
or
jle
inc
cwtl
int3
test
js
sbb
fwait
pusha
scas
pop
stos
icebp
sub
das
pop
aad
cmpsl
sahf
cmpsl
sub
sbb
repnz
in
inc
pop
arpl
mov
dec
out
movsb
adc
adc
xchg
sub
popa
and
sbb
inc
mov
pop
push
scas
out
dec
mov
outsb
stos
push
scas
in
mov
insb
loope
das
dec
aad
test
or
xchg
shl
loop
ret
nop
jbe
in
mov
cmp
inc
inc
cmc
mov
push
mov
movsb
dec
xor
aas
jno
mov
lods
stc
neg
outsb
popf
imul
mov
in
loop
orl
roll
pop
cmp
push
cmc
jns
nop
rcrb
mov
lret
and
andl
rcll
stos
in
ja
fsubs
and
inc
jp
or
adc
and
push
lret
repnz
jno
rep
movsl
in
cltd
je
out
imul
dec
les
adc
dec
push
jb
and
adc
loop
mov
or
xor
inc
push
loop
cmp
pop
test
dec
or
scas
sbb
pop
pop
adc
rol
sbb
mov
std
add
add
add
shll
ljmp
cmp
and
jl
imulb
and
dec
shll
xor
cmp
pushf
push
mov
mov
xor
movsbl
mov
mov
cli
lret
scas
shlb
dec
clc
subl
pop
cmp
cltd
js
xlat
xor
test
or
sbb
ret
pusha
mov
imul
inc
roll
orl
lock
rcll
mov
cmp
aas
je
test
mov
enter
dec
pusha
outsl
mov
pop
fdivl
daa
mov
icebp
jnp
mov
sbb
push
sbb
sub
or
or
ja
add
pop
cmpsl
xor
add
mov
jne
or
pop
loopne
jl
mov
stos
mov
mov
cmp
scas
mov
cld
sbb
and
xchg
push
repnz
bnd
add
xor
mov
call
xchg
xchg
dec
add
inc
jne
aas
dec
loopne
push
mov
out
push
push
pusha
mov
jmp
jb
mov
lods
push
stc
dec
bound
pushf
pop
jge
lahf
rclb
stos
xor
sbb
stos
mov
cltd
cmpsb
ja
push
out
enter
mov
xor
cmp
inc
lock
shl
push
scas
popa
jge
push
push
pop
or
or
aam
add
inc
pop
rorl
inc
cmc
adc
lock
sub
movsl
hlt
adc
sub
repz
mov
stos
flds
sbb
pop
dec
inc
in
mov
jb
mov
cli
push
xchg
sub
ljmp
mov
mov
jecxz
xor
lods
mov
push
aam
incl
mov
xor
in
out
push
nopl
push
outsl
popa
mov
sbb
lcall
roll
add
or
arpl
loope
inc
push
push
nop
loope
loopne
adc
push
add
nop
sbb
sbb
mov
adc
push
into
cs
insb
cmp
test
stc
adcl
ds
inc
pop
jecxz
inc
aas
sbb
and
push
loope
xchg
leave
cmp
daa
cld
inc
mov
sub
push
mov
shll
mov
inc
jbe
testb
mov
adc
mov
repz
fmull
das
sub
add
jmp
xor
into
mov
dec
push
addr16
inc
cmpsb
sbb
pop
pop
add
dec
mov
dec
fcoml
cmp
test
mov
sbb
dec
int
and
cmpsl
aam
icebp
je
xchg
mov
cltd
push
mov
daa
shll
cmp
mov
into
and
inc
fistl
mov
orb
sbb
leave
flds
xchg
sbb
xchg
imul
aaa
xchg
pop
cmpsb
jbe
mov
in
push
out
jmp
jbe
pop
loope
std
lock
rclb
aaa
aas
test
fbstp
arpl
mov
aam
or
adc
and
push
xor
cld
push
cmovb
enter
xor
cmc
jnp
mov
call
push
rcll
lret
std
addb
cltd
cld
cmpl
insl
out
or
outsl
popfw
push
or
or
test
outsb
jl
movsl
add
cli
int
cmp
jns
inc
repz
add
push
add
repz
loopne
stos
cmpsl
jg
outsl
lahf
sub
xchg
mov
sub
xor
repnz
adc
aas
lahf
sets
test
aad
jecxz
pop
mov
test
mov
pop
lret
lret
mov
pop
push
add
mov
push
out
sarb
aam
xchg
add
popa
adc
shlb
xor
mov
cmp
mov
test
daa
call
std
sub
jle
add
addr16
lock
cmp
pop
ljmp
push
lock
xlat
or
push
inc
mov
and
cmc
ficomps
mov
xor
cltd
ss
testb
mov
sbb
into
mov
stos
lds
xchg
push
sub
icebp
fsubp
cmp
dec
mov
xor
fs
sub
mov
push
adc
lods
and
test
aad
std
scas
mov
sbb
lods
pushf
movb
popf
jo
push
std
xchg
lds
push
cmp
shlb
push
outsl
test
mov
or
add
xor
adc
push
fwait
or
loope
loopne
cmp
cmc
rorb
inc
in
xor
imul
pop
rclb
lods
xchg
mov
mov
adcl
push
outsb
xor
inc
push
popf
mov
adc
out
rcll
adcb
add
arpl
inc
sub
mov
adc
add
cmpsl
pop
sbb
mov
dec
mov
outsb
mov
test
adc
mov
jno
pop
add
fistpll
pop
pop
sbb
cli
test
and
jge
lea
inc
dec
inc
shr
fadds
fimuls
xchg
dec
mov
xabort
jo
fildll
adc
mov
repz
sub
and
xlat
push
fidivs
sub
aad
test
jno
xchg
int3
and
mov
icebp
pmulhw
stc
add
and
cmp
mov
fs
rclb
shl
cmpsb
sbb
jecxz
in
inc
repz
mov
std
ret
mov
sbb
stos
es
xchg
sahf
mov
or
xor
cs
dec
and
idiv
mov
adc
mov
sbb
scas
dec
jae
sbb
call
jbe
rcll
in
iret
rol
and
mov
ljmp
mov
nop
cmc
ds
aad
sub
and
push
cmp
rolb
lods
pop
dec
dec
lahf
cmpl
mov
cltd
xor
fiadds
or
mov
std
inc
xchg
daa
leave
int3
in
add
int3
mov
les
fists
subl
push
scas
or
insb
bsr
push
icebp
test
jo
imul
or
sarl
push
ret
add
pusha
mov
inc
push
popf
pusha
add
test
adc
mov
pop
aad
hlt
xlat
je
arpl
xchg
hlt
movsl
mov
cmc
sbbb
dec
sub
mov
adc
je
jns
mov
push
mov
jg
pop
cmp
sub
xchg
sub
mov
pop
xor
mov
insb
les
jo
push
xor
push
xor
mov
dec
cmp
dec
add
xchg
int3
gs
sbb
ret
jl
inc
mov
loope
leave
roll
mov
adc
mov
push
rolb
rcl
loopne,pt
pop
jge
andb
ficoml
cmp
xchg
imul
add
and
clc
jo
or
cmpsb
cld
and
pop
cmpsl
cmp
sub
push
insb
jl
nop
ljmp
dec
inc
mov
mov
xchg
inc
dec
pop
fiaddl
jecxz
std
movsl
mov
in
sahf
ds
cmpsb
cmpsl
fst
test
sbb
je
das
leave
rcrl
cmp
pop
mov
les
fadd
mov
mov
insb
xor
inc
int
adcl
mov
cs
or
adc
push
adc
mov
lret
push
inc
mov
pop
clc
popf
cmp
js
push
adc
lods
ret
sbb
rol
lods
cmp
push
pop
jmp
mov
sbb
mov
or
mov
sbb
inc
cmp
cli
fs
scas
inc
jle
cmc
mov
ret
popl
notb
jle
ss
or
aam
add
push
lods
ret
cli
inc
test
out
aad
mov
mov
sbb
add
sbb
xchg
sbb
ljmp
mov
es
sbb
lock
xchg
mov
nop
mov
cld
shlb
xor
nop
pop
mov
mov
mov
xor
add
jb
and
inc
jp
adc
mov
ds
pop
cmp
mov
jnp
mov
insb
pop
jmp
or
or
push
cmp
inc
dec
add
shlb
jle
popa
push
pop
divb
and
sbb
insb
sbb
leave
pop
sahf
adc
mov
insl
hlt
mov
movsl
jge
lret
push
shll
adc
adc
loopne
and
and
add
dec
jnp
xchg
mov
xchg
push
sub
pop
mov
push
dec
xchg
dec
xor
or
jp
xchg
mov
not
sahf
pop
adc
push
mov
mov
or
jp
mov
aam
rcll
lea
sbb
repnz
sbbb
fcoms
movsb
or
pop
dec
add
sub
sub
add
dec
sub
xor
xor
pop
pop
jns
push
inc
fidivl
mov
lods
cmpsl
push
les
loop
dec
leave
ljmp
fsub
adc
sbb
pop
ficoml
jns
daa
jne
xchg
clc
push
data16
inc
cmp
xchg
push
je
jle
lods
pop
jl
pusha
jmp
sbb
fmuls
inc
push
test
mov
ficoms
daa
addr16
sahf
ja
jmp
pop
sub
adc
lea
xchg
sub
fisubs
pop
xchg
frstor
pushf
push
push
cmp
dec
mov
or
movsb
fwait
sbb
mov
mov
add
enter
xor
jecxz
bound
push
mov
pop
jmp
ja
aam
lods
sub
cmp
je
sbb
dec
sbb
or
arpl
testb
int3
aam
mov
xor
sbb
inc
inc
mov
adc
sbb
cld
xor
or
lret
repz
pop
sub
fbstp
add
push
add
stos
int
scas
adc
adc
js
or
jbe
mov
xchg
sub
or
cmc
mov
imul
lret
test
loopne
adc
dec
sub
adc
sub
jl
mov
add
out
lock
push
sub
jmp
mov
sbb
xchg
inc
icebp
pop
xor
cmp
nop
or
mov
repnz
insl
or
pop
sub
cmc
lods
js
jb
xor
test
or
stos
xor
pop
fs
and
push
mov
add
push
les
jp
inc
xchg
call
es
shr
sub
loope
cmpsb
push
out
mov
dec
fs
cmpsb
js
jo
push
jbe
mov
imul
xor
imul
mov
clc
aad
fldenv
sub
sbb
add
adc
push
mov
dec
insb
add
push
xchg
adc
cmp
sub
loopne
movsl
mov
mov
or
add
push
jecxz
pop
movsl
inc
out
shl
fadds
jecxz
addl
jo
mov
cli
enter
mov
ret
movaps
stc
sahf
notl
in
push
or
repz
lock
xor
and
mov
subb
notb
in
xchg
faddp
lret
das
cltd
nop
loope
sbb
dec
cmp
inc
test
and
dec
mov
jmp
inc
fadds
adc
mov
out
lods
js
sahf
adc
adc
hlt
iret
aad
pop
sub
jmp
dec
ret
lret
fstps
push
xchg
or
sbb
cld
in
add
sbb
mov
push
subl
icebp
scas
push
std
movb
jp
xchg
jne
inc
addr16
sub
lock
mov
dec
mov
shrb
and
int
mov
mov
xor
add
fiaddl
mov
jge
push
xchg
add
mov
mov
sbb
jo
shrb
sub
icebp
sub
stos
and
inc
shl
dec
xorb
pop
xchg
push
push
out
loop
cli
dec
pop
add
inc
loope
sbb
mov
mov
cmpsl
lcall
or
mov
sbb
inc
sbb
dec
sub
aas
push
stos
fs
xchg
out
dec
xor
push
jl
movsl
xor
inc
xchg
push
cmp
adc
addb
sti
cli
pop
out
mov
cmpxchg
push
adc
mov
xchg
ret
or
cmpsb
push
inc
scas
inc
shll
mov
test
loop
fchs
in
stos
or
dec
inc
ficoml
or
lea
xorl
out
add
rorl
dec
and
imul
mov
inc
stos
sub
push
out
sbb
and
sar
and
pop
push
mov
addr16
fiaddl
mov
aad
mov
sbb
fst
inc
mov
jnp
inc
fwait
xchg
ja
or
xchg
repz
les
push
or
ret
js
and
mov
push
cmp
movsl
jbe
movsb
xchg
push
dec
mov
dec
and
popf
jg
jmp
jge
mov
lcall
lods
inc
add
mov
jne
popa
dec
jo
sub
fistl
xchg
and
outsl
cwtl
inc
fstpt
orl
lds
outsb
xchg
clc
rcrb
pop
aas
shl
repnz
jbe
setl
jne
mov
bound
and
adc
and
mov
stos
cld
sbb
scas
sbb
idivl
stos
mov
mov
test
vpcmpeqw
cltd
jmp
sbb
xor
std
mov
mov
imul
out
loop
pop
lret
cmc
lock
mov
xor
lcall
xor
lods
mov
push
scas
pop
nop
rorl
aam
add
cmp
push
push
push
sbb
testl
test
and
ret
and
loop
stos
es
scas
icebp
js
mov
arpl
loopne
repz
mov
push
rcrl
adc
js
push
aas
rcr
int
and
hlt
cltd
lock
out
sahf
push
sbb
mov
dec
js
push
mov
push
rcll
mov
jg
imul
pshufw
jecxz
fcompl
loopne
cmp
push
loopne
ljmp
push
push
scas
sub
cs
cmp
cmc
sub
xchg
adc
ja
in
and
insb
cmp
loop
mov
ja
mov
xor
mov
mov
andl
ficompl
xchg
mov
sbb
jne
mov
or
aad
xchg
push
mov
shlb
enter
loop
add
push
stos
and
and
sub
push
inc
lcall
cli
and
imul
push
movsb
shll
mov
movsl
push
sbb
cmpsb
pop
loop
adc
std
adc
adc
loop
pop
idivl
les
es
je
movsb
stos
jp
aad
daa
jp
mov
outsb
call
lods
imul
jl
xor
push
nop
js
xchg
jmp
jmp
jge
xlat
aam
pop
sbb
les
jecxz
lcall
lock
ja
sub
inc
loopne
ja
int
je
inc
lahf
andb
repz
sbb
push
mov
add
movsb
loope
scas
push
inc
mov
sbb
lret
aas
xorl
mov
adc
outsb
data16
loopne
push
test
fildll
adc
lahf
jo
push
fnstcw
pop
dec
hlt
ss
mov
sub
adc
pop
pop
adc
xor
cmpsl
mov
sarb
jmp
insl
js
jp,pt
cmp
mov
loopne
loop
sbb
iret
pop
jecxz
rolb
hlt
and
imul
push
xchg
adc
adc
mov
add
xor
cmpsb
daa
repz
in
xchg
out
sbb
test
mov
xor
dec
mov
pop
mov
fisttpll
fidivrl
rclb
mov
and
cmp
push
out
pop
mov
movb
adc
movsl
ja
and
nop
test
xchg
jp
test
xchg
xor
or
sub
pusha
test
inc
sub
out
xlat
adc
pop
push
ret
xlat
jl
mov
negb
fwait
testb
adc
jp
jp
adc
bound
xor
mov
hlt
sub
lods
xchg
insl
and
into
jo
je
and
mov
test
lods
out
rolb
dec
sbb
mov
mov
xchg
dec
shll
aaa
or
movsb
inc
mov
jle
sbb
in
roll
jl
add
fisttpl
rcrb
add
adc
mov
xlat
jae
and
lret
ja
pop
add
xchg
mov
jo
xor
inc
xchg
rcrb
lcall
ret
arpl
pushf
mov
add
std
and
data16
out
fistps
or
ret
mov
rcr
jl
push
push
mov
cmp
adc
enter
popa
lock
shlb
pusha
clc
stos
inc
mov
sbb
sbb
enter
cmp
fldenv
jecxz
sbb
add
imul
mov
loope
call
ljmp
clc
push
jl
popl
int
xor
mov
xchg
arpl
lock
cld
pop
dec
fcmovu
mov
lea
or
adc
dec
rorl
and
dec
push
adcb
es
rorl
imul
sahf
and
sarb
and
jo
mov
xchg
rep
dec
cmp
outsl
sbb
fnstenv
inc
inc
sub
shlb
mov
mov
mov
or
and
pusha
mov
and
xorb
and
std
gs
icebp
test
loop
fmuls
jbe
imul
inc
pop
rcr
and
loop
outsb
mov
mov
or
scas
ljmp
sub
push
insb
pop
or
add
imul
ret
fistps
mov
test
pop
int3
inc
out
bound
cmpsb
xchg
addl
jae
sbb
sbb
imul
and
push
adc
shlb
test
jl
push
mov
mov
jo
sub
or
mov
mov
cli
xchg
rep
mov
fnstenv
ret
lods
add
pop
sahf
mov
je
mov
push
dec
dec
xchg
push
cmp
mov
add
inc
dec
sub
lock
jmp
sub
sub
or
in
lahf
out
cmc
bound
lods
cmp
jmp
rcll
dec
xor
cmpsb
jmp
test
mov
adc
sbbl
ret
inc
sbb
mov
repnz
pop
sti
adc
sub
sub
lahf
fldenv
in
xchg
pop
sbb
sub
in
cmp
popf
test
int3
mov
xchg
loopne
or
xchg
test
and
sub
and
dec
rcrl
sti
and
xor
imul
call
pop
sbb
lock
fistpll
xchg
incb
add
lds
addr16
loop
jmp
pusha
push
jns
andb
lods
sub
jno
icebp
jns
xchg
jbe
repz
add
xchg
andl
inc
inc
xor
sub
mov
in
in
cs
inc
insl
adc
das
outsb
push
mov
xor
ret
incb
outsb
lods
popf
mov
push
pusha
lahf
xchg
mov
das
push
aaa
cwtl
and
jmp
loope
and
cs
pop
imul
icebp
xorl
mov
adc
icebp
add
inc
push
hlt
mov
stos
daa
push
lods
or
fs
aaa
sbb
mov
xor
cmp
jmp
sub
push
test
lds
stos
mov
mov
notb
mov
jmp
mov
loopne
mov
fxsave
mov
adc
cmpsb
adc
fisttps
inc
icebp
jns
loopne
adc
sub
mov
scas
into
sbb
ret
add
inc
and
pop
inc
lea
pushf
je
and
ret
cwtl
loopne
push
mov
sub
pop
int3
outsl
and
sub
test
rorb
mov
hlt
shl
decl
cltd
jl
addr16
cmp
and
fst
fptan
sbb
mov
xchg
orb
adc
cmpsb
dec
add
scas
cmc
or
sahf
add
inc
mov
lock
add
jmp
cwtl
xor
test
orl
movsl
jle
enter
sbb
out
out
aam
xchg
mov
scas
push
xchg
cmp
cmp
and
sbb
or
jge
inc
dec
test
lret
jmp
aaa
xor
push
rcll
jecxz
test
es
jb
int3
mov
mov
movsl
xor
ss
push
lahf
std
aam
add
xor
dec
stc
and
aaa
fidivl
xchg
icebp
cmpb
and
cmpb
mov
cld
mov
pop
inc
ret
outsl
jb
loopne
jns
mov
loope
test
cs
clc
lret
repz
inc
aad
xchg
pop
iret
mov
add
pop
divb
leave
lock
ret
test
mov
dec
xor
cmpsl
xor
repnz
icebp
inc
popa
rcl
cmp
orb
sbb
repz
sbb
out
pop
inc
mov
jno
sub
mov
pushaw
into
push
loope
out
push
pusha
mov
sbb
adc
and
adc
xchg
xchg
shll
ljmp
dec
push
js
aas
and
jae
and
rcrb
cwtl
adc
sbb
sbb
mov
or
popa
call
in
es
pop
inc
movsl
cmpsb
lret
movsl
adc
push
or
cltd
pop
test
mov
and
into
movsl
xlat
jnp
adc
jp
fwait
sbb
imul
insl
sub
lock
mov
std
popa
or
push
cli
cld
arpl
lock
rcrb
and
mov
rclb
insl
xlat
stos
xor
bound
jmp
pusha
in
es
pop
in
lcall
pop
and
in
jmp
mov
push
push
push
adc
and
xlat
clc
jge
sbb
cmp
fsts
mov
in
or
xchg
or
mov
clc
test
ja
push
fstpl
outsb
xor
out
clc
mov
fincstp
xchg
adc
cli
dec
cmp
and
push
mov
movsb
inc
mov
dec
cmc
addb
shlb
mov
push
loope
mov
xchg
js
loopne
push
subb
mov
or
cmp
mov
xor
lock
mov
push
cmp
dec
dec
jo
jl
jnp
shrb
mov
xchg
jmp
xor
jg
pop
adc
ss
jno
sub
push
pushf
inc
mov
inc
lcall
jo
push
shr
mov
in
cmc
pop
jle
fisubs
cltd
adc
mov
push
and
inc
sub
rolb
outsb
ljmp
lret
data16
popf
push
cmc
inc
addr16
pop
pusha
mov
movsl
jns
mov
mov
sbb
subl
mov
xchg
addl
xor
dec
jo
mov
fimuls
mov
pop
xchg
jb
jl
cmp
xlat
cmp
or
mov
lods
rol
inc
xchg
sbb
mov
jp
pop
loopne
sub
jbe
pop
xchg
pusha
sub
shl
ret
and
fistps
enter
loopne
movsl
mov
popf
jmp
add
pop
jbe
mov
lods
jae
and
sarl
addr16
adc
arpl
push
pop
push
push
pop
pop
bound
stc
pop
mov
sub
test
subb
call
sub
rolb
inc
dec
clc
add
test
mov
adc
aad
sar
add
imul
jle
cmp
and
sbbl
addr16
xor
aam
adcl
push
push
add
es
dec
ret
test
lcall
xor
cltd
cmpb
into
jmp
jne
fisttpl
and
fwait
in
in
push
movsl
or
push
mov
gs
test
mov
scas
sbb
repnz
sbb
jne
pop
pop
lock
cmp
or
movsb
jo
jnp
in
incl
pop
ret
rclb
adc
mov
sbb
mov
push
mov
mov
lea
inc
repz
popa
dec
jge
mov
mov
clc
mov
testl
mov
stos
repz
fdivrl
aas
movsl
pop
imul
leave
ds
sub
push
xor
push
jge
lret
aaa
ss
ljmp
fnstenv
xchg
arpl
ss
xchg
and
xchg
pop
mov
decl
or
and
js
jno
scas
mov
inc
adc
pop
push
jae
nop
inc
dec
or
jg
les
in
fiadds
mov
and
iret
aas
cmc
ljmp
add
addb
bound
cmc
or
mov
xchg
rolb
orl
stos
jg
mov
rcrl
popf
jns
fadd
mov
adc
jl
push
insb
shr
rolb
mov
lds
xor
cmpsl
hlt
xchg
dec
pop
inc
sbb
jg
lea
stos
pop
mov
imul
in
mov
mov
rcrb
or
push
arpl
push
jge
xlat
fstp
and
mov
cmpsl
push
or
and
test
mov
xor
jp
add
movsl
pusha
xor
lcall
pop
je
jle
adc
xor
stc
lret
sub
int3
fld
fdivs
adc
add
mov
and
and
adc
mov
inc
inc
mov
adc
add
in
movl
imull
iret
xchg
push
enter
push
lahf
je
jle
imul
pop
mov
js
repz
cmp
and
test
add
sbb
dec
pop
lret
clc
jnp
aam
jae
xor
dec
or
sub
movsl
lahf
add
sbb
scas
pop
jecxz
sbb
aas
cltd
scas
inc
dec
add
adc
int
fs
pushf
inc
mov
push
cmpsl
mov
cmpsb
in
mov
jbe
or
fucomi
add
leave
cwtl
push
sbb
ret
lds
add
xchg
cmp
fsts
and
hlt
and
in
lahf
xchg
xchg
add
mov
pop
lods
subl
mov
adc
and
inc
hlt
cld
push
pop
jne
add
inc
pop
or
cmpsl
or
cmp
pop
mov
cmp
push
test
pop
nop
inc
sbb
and
sbb
pop
xchg
faddl
loop
mov
pop
cmp
push
ljmp
jo
mov
jae
test
icebp
push
pop
jge
and
outsl
jge
adcb
adc
mov
cmpsb
shrl
mov
aas
test
js
inc
dec
int
inc
sub
xor
js
pop
scas
jno
cmp
pinsrw
cmc
adcl
pop
fwait
or
stos
loop
test
and
lret
cltd
sub
adcl
sbb
or
jo
jno
mov
inc
and
lahf
pop
push
push
or
roll
and
sbb
cmpsb
jmp
es
jp
lea
jbe
je
push
mov
roll
pop
and
jnp
add
jne
mov
cmpsb
sub
test
push
cmp
cmc
call
lahf
push
mov
and
pop
subb
push
dec
lahf
popa
fsubrl
shlb
xlat
ret
mov
dec
lret
mov
fiadds
je
movsb
push
in
push
mov
daa
out
jne,pn
stos
jne,pt
in
rcrb
jo
cwtl
cmpb
and
mov
jns
pop
cmp
add
mov
test
add
jns
pop
sti
jbe
in
push
pop
jne
push
cld
cmpsb
push
aas
add
push
pop
push
mov
adc
loope,pt
mov
outsb
cmp
xorl
or
add
jmp
mov
ret
mov
pop
or
loop
adc
test
test
mov
cmp
shrb
cmpsb
add
cmpsl
jne
testb
aaa
aad
mov
push
and
test
dec
ja
jecxz
pop
fidivrl
rcrl
lock
pop
aam
pop
mov
adc
mov
stc
inc
sarl
or
sbb
ljmp
push
pop
or
xor
adc
insl
aam
movsb
sbb
mov
stos
push
fadds
sub
movsl
out
cmpsl
xlat
push
cwtl
imul
adc
cwtl
test
cmp
xchg
push
adc
rcrb
mov
and
xchg
sbb
rcll
movsl
and
mov
pop
inc
pop
ret
sbb
jge
iret
imul
push
push
xchg
push
xor
nop
loopne
mov
mov
stc
sbb
xchg
std
shlb
arpl
xor
out
int3
and
test
es
stos
push
or
cli
add
loop
iret
mov
bound
cmp
test
jne
adc
mov
or
push
xchg
dec
scas
or
pop
fwait
inc
adcb
pop
mov
jmp
or
ljmp
daa
stos
xor
xor
and
dec
dec
or
call
sub
test
shlb
jge
mov
pop
out
add
test
sbb
test
pop
pop
ficoms
rorb
mov
inc
subl
mull
mov
push
test
cmp
mov
dec
jp
pop
xor
std
call
imul
cmp
pop
push
push
xchg
fildll
jno
or
jmp
aaa
pop
pop
cmc
xlat
out
add
inc
rol
push
loop
sahf
pop
or
fldenv
mov
dec
cli
mov
fnstsw
add
je
fisubrl
adc
xor
adc
and
pop
cmp
lods
push
push
mov
aam
push
lret
shrb
add
das
sbb
dec
cmc
jno
sub
add
xchg
push
jns
fiaddl
cmp
jg
call
test
mov
xor
xor
in
ret
xchg
shll
arpl
jecxz
shrb
push
addb
push
lahf
movsb
or
test
jp
mov
shll
out
xchg
and
mov
add
xchg
mov
out
push
jecxz
adc
lods
push
bound
jg
mov
fwait
dec
lahf
popa
cmp
inc
jmp
sbb
mov
repnz
jmp
mov
cld
xor
rorb
adc
xlat
mov
mov
popa
out
pop
dec
shl
push
rol
outsb
sbb
and
clc
xor
popf
loope
sbb
jmp
dec
cld
cmc
or
and
push
ret
push
mov
and
stos
mov
adc
leave
inc
fwait
inc
ds
test
pop
cltd
and
inc
ret
cmp
or
inc
mov
popf
call
mov
dec
fisttpl
lods
out
rorb
mov
xchg
add
into
sub
mov
adc
xchg
pop
cmpsl
pop
aaa
jns
jbe
aam
lds
cs
add
aas
call
fsubl
xchg
test
and
xlat
or
gs
aas
inc
cmc
out
shlb
jmp
mulb
test
dec
add
sarl
push
mov
loope
mov
mov
adc
adc
mov
jle
lcall
jecxz
cmp
mov
in
in
pop
fdiv
loopne
sbb
jge
loopne
ret
adc
orl
cs
loope
mov
jge
pushf
mov
test
inc
xchg
mov
mov
lds
divb
lret
xchg
sbb
push
adc
insl
sub
loop
adc
dec
mov
jg
dec
movsb
and
aaa
lret
mov
inc
ret
mov
ja
jmp
add
mov
dec
pop
sub
fmull
xchg
out
aad
int3
cmp
js
stos
mov
ds
add
mov
add
rorb
sub
pop
test
movl
insb
xchg
sub
outsb
xchg
ss
test
loopne
inc
jb
or
sbb
dec
mov
mov
add
loope
addl
and
or
test
adc
dec
cmpsl
lcall
cmp
or
xchg
jns
stos
lock
push
ret
out
pop
cs
cwtl
or
jb
pop
pop
shlb
add
sbb
ficomps
loop
mov
pop
sub
dec
sti
pop
push
cmp
loopne
fwait
add
pop
add
stc
mov
or
addr16
or
outsl
imul
cmpsl
sarl
pop
mov
mov
sub
sete
in
jbe
xchg
arpl
inc
adc
and
push
add
loope
mov
dec
inc
jg
pop
into
lsl
xor
mov
inc
push
rol
scas
cmpsl
int
mov
stos
add
aad
jb
mov
loop
mov
movswl
aaa
test
loop
jecxz
xor
aam
and
sarl
jns
or
push
out
aad
and
dec
std
dec
test
ror
cmp
sub
sahf
mov
cld
ja
sbb
std
stos
or
add
and
in
xchg
out
test
data16
test
adc
ljmp
xlat
sbbl
fldenv
popa
fnstsw
dec
push
sub
push
mov
fstps
mov
xor
sarb
push
mov
mov
addr16
jl
in
xchg
fidivrs
mov
nop
cmc
frstor
xchg
dec
mov
scas
imul
mov
push
fdivp
test
enter
jae
jle
cmpsl
fwait
mov
and
push
lods
data16
jle
or
sub
lock
shl
mov
xchg
dec
sub
add
outsb
cld
jb
outsb
push
ja
ss
push
push
insl
mov
cmp
sub
cld
add
xchg
pop
data16
add
sbb
or
adc
ljmp
jge
shlb
hlt
xchg
sbb
and
test
arpl
mov
sbb
sbbb
cmp
and
rolb
pop
and
mov
fists
mov
enter
stc
inc
outsb
dec
push
cmp
jb
mov
cmp
movsb
sbb
xchg
cs
lretw
out
push
push
in
adc
dec
push
hlt
pop
test
scas
add
pop
cld
push
adc
mov
sub
in
pop
sbb
cmp
pop
loope
pushf
and
lock
mov
sub
push
sarl
call
sbb
xor
add
cmp
and
jo
inc
mov
sbb
test
or
pop
addr16
push
inc
lods
mov
or
pop
pop
push
and
mov
mov
add
push
leave
aaa
push
pop
pop
mov
incl
push
mov
add
ljmp
lock
in
xorb
scas
mov
int3
enter
or
push
push
sahf
push
mov
icebp
and
add
push
pop
adc
jbe
mov
aam
jle
xor
movsl
loope
lcall
es
in
stos
ret
das
cmp
add
pop
int
pushw
movsb
dec
sbb
nop
data16
int3
dec
push
mov
leave
out
lock
out
enter
sbb
stos
repnz
jecxz
jnp
pop
out
jo
push
dec
or
or
or
jb
push
pushf
aas
or
sub
adc
cmpsb
inc
scas
ret
pop
jl
clc
rclb
cld
popa
dec
sub
setg
outsl
xchg
jbe
imul
inc
movsb
fwait
ret
mov
icebp
mov
push
dec
pop
dec
inc
data16
or
in
cli
pushf
push
adc
adc
lods
scas
xchg
mov
mov
cmpsl
or
roll
in
cmp
push
push
or
mov
adc
das
popf
sub
cmp
outsb
adc
imul
xchg
xchg
out
ljmp
mov
push
test
lock
push
mov
mov
in
out
imul
xor
aaa
test
test
mov
enter
lods
std
jle
pop
lds
es
xchg
jg
push
hlt
add
ljmp
cmp
out
push
pop
cmp
ds
and
and
lock
lods
jmp
xchg
push
or
hlt
lock
adc
push
insl
icebp
jmp
jbe
hlt
pop
add
mov
mov
lds
inc
adc
or
adc
jbe
adc
sbb
cwtl
das
into
pop
jecxz,pt
mov
push
ljmp
adc
add
adc
sub
je
add
xor
out
idivl
cmp
sbb
mov
fwait
stos
sub
jo,pt
add
jle
stos
fcomp
mov
lods
push
dec
pusha
repnz
and
cwtl
iret
aam
out
pop
jp
dec
dec
shll
jg
fnstcw
cld
pop
ret
cmp
xor
sbb
jb
pop
cwtl
or
sti
mov
jle
das
mov
jno
add
jecxz
inc
pusha
out
mov
cmp
xlat
jmp
sbb
into
js
test
imul
lods
add
pop
clc
cmpsb
mov
mov
rcll
jp
mov
xor
mov
and
inc
aad
ret
lret
and
aam
mov
sbb
push
lret
push
cmp
hlt
loop
dec
or
jne
pop
inc
aaa
mov
adc
loopne
mov
rclb
mov
inc
add
fcomip
mov
js
es
xchg
mov
iret
roll
sbb
cli
fwait
add
out
test
bound
cld
mov
shll
mov
or
jmp
push
adc
push
dec
add
lods
orl
push
outsb
pop
sbb
into
out
pop
jl
pop
mov
cs
mov
and
mov
jecxz
push
lods
orl
bound
add
mov
adc
xchg
xor
add
arpl
jae
adc
shrl
add
mov
aam
lea
inc
enter
lmsw
mov
and
push
sub
jle
data16
dec
lea
add
mov
xor
aad
add
movsb
fistl
push
ss
xchg
adc
and
jmp
jg
cs
outsb
adc
or
cvtps2pd
xor
sbb
imul
pusha
add
sarb
pop
inc
mov
jge
inc
pop
loopne
mov
sahf
mov
lea
out
lret
lcall
pop
cmpsb
pop
jmp
outsb
pop
inc
sub
add
adc
movsb
or
outsl
loope
scas
clc
lahf
xchg
fisttps
cmp
push
jb
and
dec
push
cli
sbbl
and
jns
icebp
add
sbb
xor
adc
js
sbb
or
jnp
cmpsl
and
or
inc
or
xchg
jecxz
lret
and
nop
push
push
dec
insb
lods
aam
or
push
pop
sbb
mov
xor
pop
adc
loop
test
out
movsl
loop
ficoml
daa
adc
mov
cmp
leave
mov
rol
enter
scas
add
and
imul
push
loope
xchg
or
push
test
and
in
cmp
ret
mov
dec
insb
push
xchg
adc
mov
sub
adc
je
xchg
aaa
xor
add
pop
jno
mov
cld
lds
mov
cmp
testb
add
sahf
push
das
jo
out
addr16
inc
pop
je
jmp
ljmp
fisubl
push
add
or
mov
pop
or
mov
aaa
scas
mov
loope
fsubrl
test
xchg
mov
lods
push
fldcw
or
xchg
vmwrite
jle
dec
push
js
popf
flds
test
pop
sbb
pop
push
insb
pop
sub
neg
xchg
movsl
adc
mov
std
enter
cmpsb
cmc
jmp
inc
scas
push
loope
push
jg
jns
sbb
pop
aam
loop
cmp
add
or
sbb
jle
dec
iret
xor
dec
cmp
add
inc
push
sbb
adc
loope
mov
pop
cwtl
cmp
mov
sbb
ret
jmp
aam
add
movsb
dec
ret
cmp
scas
btr
xor
int
and
loop
push
jp
cld
icebp
adc
pop
faddl
xor
dec
fildl
scas
xchg
push
xor
inc
in
jmp
mov
stos
adc
mov
push
ljmp
jbe
xor
cmp
mov
fidivs
lcall
pop
ret
push
xchg
xchg
loope
lods
xor
cld
pusha
mov
lcall
dec
push
jae,pt
adc
ja
xchg
addr16
lcall
ljmp
mov
jecxz
out
nop
stos
mov
inc
pop
mov
xchg
inc
jp
xor
subl
inc
mov
pushf
or
cmp
sbb
les
ds
inc
rolb
jns
call
push
mov
inc
sub
aaa
lret
arpl
popf
and
std
aad
inc
stos
pop
jl
rcrb
pop
push
dec
out
int3
ljmp
mov
test
sub
jnp
sahf
pop
das
inc
sti
sub
sub
pop
cmp
xor
add
movsl
push
outsl
movsl
xchg
hlt
mov
pop
dec
inc
xchg
jno
xchg
sbb
pop
les
jae
mov
push
add
test
inc
inc
pop
push
outsb
notb
nop
mov
jle
mov
lea
xorl
movsl
jmp
cmp
movsl
ret
ror
xor
into
test
data16
mov
push
in
adc
mov
into
pop
mov
dec
lds
jo
push
sbb
push
inc
ds
and
mov
cwtl
sub
mov
pop
out
mov
sub
loopne
jle
int3
rol
mov
adc
test
insl
cmpsb
push
es
lock
inc
push
jl
adc
adc
sbb
mov
sub
lods
cmc
cli
add
in
mov
daa
sbb
add
imul
xchg
sub
and
xchg
add
dec
xor
movsl
jbe
push
popa
cld
xchg
and
pop
gs
dec
mov
in
les
fnsave
sub
cmp
add
mov
xor
movsl
popa
rorl
mov
adc
sbb
loope
and
insl
mov
das
lcall
adc
or
pop
aas
testb
fcmovb
add
and
adc
ja
cli
out
addb
loop
adc
icebp
push
sub
clc
or
cmp
and
jp
popf
xchg
dec
das
or
scas
pop
rorb
rorb
stos
addb
sub
jno
adc
mov
xchg
xchg
ret
rcll
inc
or
and
dec
push
jmp
dec
aad
mov
mov
leave
insb
cmpsl
adc
ficomps
jg
or
clc
mov
xchg
fiaddl
lea
cwtl
mov
xor
out
push
sbb
out
aam
andl
subl
das
outsl
jne
scas
jl
adc
jp
sub
jl
or
cltd
push
xor
xor
in
mov
and
icebp
sbb
inc
pop
out
xchg
daa
inc
and
sahf
pop
js
ret
sub
inc
cmp
std
lret
ret
pop
mov
ds
adc
jl
movsb
fld
inc
cmp
push
mov
inc
ljmp
into
sub
decb
xchg
mov
adc
and
stos
push
sub
xlat
sub
repnz
jecxz
outsb
adc
es
fldl
wbinvd
xorl
jb
addl
pop
stos
xor
sbb
ljmp
fistpl
sbb
mov
cltd
pop
pop
scas
or
test
js
fs
mov
test
aas
cmp
pop
enter
std
ror
adc
xchg
es
fpatan
icebp
inc
out
or
mov
xchg
test
pop
nop
js
mov
or
mov
push
jne
ficoml
aad
movl
aam
jge
fs
jmp
cmp
mov
call
test
je
iret
sbb
ljmp
imul
mov
mov
inc
ja
push
mov
pop
shr
mov
adc
ficoms
cmpb
adcl
stos
rcrl
dec
aas
lahf
lock
jnp
sbb
sti
xchg
xor
hlt
aam
cltd
sbb
sub
sarb
add
xor
add
mov
popf
push
int
lea
inc
xchg
and
xor
pop
add
ja
cmpsl
ds
mov
fwait
cmp
xor
xor
es
loope
inc
pop
pop
inc
adc
xchg
jmp
mov
xchg
mov
adc
sbb
mov
lock
negl
pusha
cmc
loop
mov
data16
enter
pushf
mov
mov
push
jb
test
aaa
or
pushf
and
lock
adcb
mov
mov
and
lock
sub
xchg
add
jns
cmp
or
and
or
icebp
xor
cmc
dec
lea
or
sbbl
out
lds
cmpl
pop
es
xor
push
out
lds
pusha
daa
faddl
mov
rcrb
fisubrs
jae
push
sbb
mov
add
xorb
push
sbbl
es
les
nop
or
cmc
test
mov
push
addr16
or
dec
adc
push
cli
fs
mov
gs
daa
js
inc
leave
cmp
lods
std
fnsave
cwtl
push
imul
add
adc
dec
fs
add
hlt
adc
testl
arpl
dec
pop
xor
jne
jmp
shl
aaa
cld
fs
in
imul
arpl
or
sahf
mov
dec
adc
push
sub
push
ja
mov
dec
pop
push
cwtl
jmp
lods
add
into
fildl
js
dec
push
jl
movsb
mov
mov
fdivl
mov
cmp
sbbl
mov
insb
clc
fs
add
movsl
cmp
and
jo
adc
add
adc
lods
ret
push
pusha
lahf
mov
pop
cmp
ss
rol
jecxz
adc
inc
loop
mov
adc
jmp
and
roll
push
fstpl
xchg
mov
push
movsb
sub
sbb
push
pop
dec
mov
jbe
push
into
mov
sbbl
cmpsl
pop
cmpsl
push
jge
stos
ds
xor
xchg
test
dec
push
fs
imulb
xchg
or
inc
stos
inc
or
push
mov
push
and
shlb
jno,pt
clc
add
jo
adc
push
les
call
mov
lea
push
pop
les
pop
mov
pop
lods
sarb
notb
lret
sub
sti
cmpsb
rcll
lcall
adc
daa
scas
mov
xor
adc
adc
xor
filds
aam
jp
pushf
sti
push
cmp
jp
ja
xchg
add
inc
pop
pop
lock
dec
and
or
roll
or
xor
addl
mov
mov
fs
daa
pop
mov
lahf
scas
push
into
mov
aam
aad
lods
orb
pop
xor
je
sub
stos
lea
stos
leave
pop
cli
into
mov
pop
xor
lea
xchg
fcmovbe
lods
cwtl
mov
jbe
or
jnp
ds
push
mov
jns
cmp
ds
mov
test
ficompl
xor
icebp
ret
cmpl
mov
and
cmovge
push
dec
cmp
ljmp
imul
inc
xchg
popf
test
orl
cmp
adc
and
aaa
cltd
sahf
jmp
roll
mov
test
adc
lock
pusha
sub
scas
add
rcrl
jp
cmp
xchg
aaa
out
pop
bound
dec
mov
dec
stc
test
inc
popw
jmp
loopne
cmpsb
dec
pop
jecxz
xor
and
add
aad
popf
sub
sbb
sub
pop
filds
ficoml
push
sarb
or
adc
out
cmpb
adc
lea
push
xor
push
sbb
fisttpll
filds
into
fwait
out
rcrb
pop
loopne
and
push
shrb
add
jmp
mov
subl
repnz
in
pcmpeqb
or
fbstp
cmp
and
add
ds
data16
icebp
stos
movsl
dec
xchg
pop
jnp
andl
fwait
loope
or
mov
jg
pop
fnstsw
mov
rorb
mov
inc
pop
ljmp
adc
imul
pushf
test
aaa
push
stos
or
test
push
cli
popa
xor
clc
add
movsb
dec
mov
cmp
mov
adc
sub
outsl
inc
xchg
sub
cmp
fiadds
dec
in
faddp
fwait
mov
mov
dec
sub
mov
jno
pop
js
insl
lea
stc
mov
push
addr16
lods
in
outsb
fsubrl
fisubrl
rcl
sub
lret
fs
nop
rcrl
clc
mov
orb
iret
movl
cmpsb
sub
aam
sub
enter
scas
mov
loop
jae
mov
add
mov
sub
jmp
dec
jne
mov
call
jnp
cmp
xchg
cmpsl
call
add
aaa
inc
outsb
aam
push
cmp
nop
xlat
nop
cmpsl
lahf
out
jmp
sbb
xchg
aaa
aad
shlb
add
js
and
sbb
adc
push
pop
mov
pop
sub
cmp
shlb
and
imul
dec
sti
mov
ljmp
js
mov
push
or
ret
sbb
add
xchg
jle
sbbl
js
enter
das
cmpsl
movsb
ljmp
add
jl
loope
ljmp
dec
gs
roll
push
xor
loope
sarl
inc
aaa
push
stos
xchg
sub
sub
sub
shrd
add
pop
adc
outsl
xchg
sbb
test
dec
xchg
push
push
cmp
dec
js
add
add
scas
sbbb
sub
lock
inc
loopne
aam
stc
aam
cmpsb
inc
shrl
test
jnp
inc
popf
orb
popl
movsb
enter
mov
pop
mov
jo
push
xor
sub
mov
or
mov
mov
inc
pop
or
cmp
mov
push
push
push
mov
xor
jmp
push
mov
jb
mov
or
mov
inc
adc
inc
mov
imul
stos
push
push
add
pop
push
leave
in
pop
lea
xchg
sbb
bound
test
mov
test
outsb
add
aas
pusha
xor
dec
mov
lods
dec
add
add
push
test
dec
pop
loop
cli
test
les
lret
jnp
xchg
aam
cli
mov
paddb
or
push
daa
ret
cmp
jmp
pop
rcrb
sub
inc
rorl
jp
inc
lods
push
fcomps
pop
fidivl
ret
xchg
fwait
inc
or
shll
aas
xor
fs
stos
rcl
inc
push
jo
jno
and
lock
repz
inc
xchg
rcrb
mov
leave
cltd
xchg
dec
sub
jae
test
les
pusha
shll
loope
iret
lods
xor
push
test
sti
lods
cltd
loop
inc
adc
inc
loopne
cmpsl
shl
pop
jo
in
mov
sbb
sti
pusha
push
loope
mov
pop
gs
xlat
and
mov
xor
mov
repnz
add
andb
loop
cmp
mov
sbb
and
pop
scas
popa
xlat
ret
cmpsl
es
adc
loopne
adc
decb
mov
fmull
xchg
insb
xlat
divl
xor
xor
sarb
xor
jge
add
add
inc
cmp
xor
mov
inc
xchg
xor
das
xor
aad
add
shlb
mov
leave
int
mov
dec
pop
push
cmpsl
outsl
out
and
xchg
arpl
cmpsl
stos
lds
mov
xchg
jg
and
mov
iret
clc
or
fstl
les
push
add
pop
mov
pop
lods
push
xchg
sbb
dec
adc
daa
in
adc
sub
popf
xor
int
cli
aas
loopne
lock
sbb
and
xor
pop
loopne
mov
add
push
test
mov
mov
sub
in
mov
loopne
lret
clc
pusha
cmpsl
shrl
pop
adc
clc
clc
lcall
aas
mulb
loopne
sbb
scas
filds
cmp
repz
adc
inc
lods
mov
popl
sub
or
sarb
or
or
mov
add
in
jns
inc
stc
cmc
dec
cwtl
dec
or
lock
cmp
pop
inc
dec
mov
or
lahf
es
push
jmp
in
mov
roll
xchg
push
ret
sbb
les
cmp
mov
and
jo
sahf
test
mov
pushf
leave
imul
pop
leave
dec
add
xchg
testb
and
jmp
adc
sbb
push
mov
jne
xlat
push
in
mov
daa
mov
lock
out
daa
xor
add
add
mov
dec
test
cmc
mov
movsl
xor
mov
xor
roll
aad
dec
sbb
push
aam
movsb
ljmp
cmc
ret
adc
xor
fidivl
ds
int
push
xor
and
sbbb
or
in
add
mov
pminub
xor
insb
bound
inc
into
test
cmp
and
xchg
hlt
jae
dec
leave
and
jbe
pushf
movsb
sub
mov
inc
test
and
mov
rolb
push
cmpsb
xchg
mov
jae
xchg
push
fs
stc
and
dec
pop
aas
mov
inc
xor
or
push
rclb
scas
mov
pop
insl
push
and
fbstp
ror
cli
and
inc
and
addr16
mov
or
xor
mov
enter
ds
xchg
out
add
push
or
es
push
jns
loopne
aam
push
and
dec
pop
hlt
jae
xor
test
cmpsl
jns
pop
dec
sbb
xchg
lcall
and
insb
adc
mov
push
xor
mov
call
mov
std
mov
sub
js
fistl
cld
pop
push
int
jge
mov
fwait
add
mov
pop
push
dec
loop
xor
gs
stos
inc
jge
fwait
jbe
ljmp
inc
push
es
and
out
movsl
scas
sbb
mov
mov
push
sarb
shlb
mov
lods
clc
pop
jo
or
push
pop
movsb
add
aaa
rcrb
push
dec
inc
dec
xor
sub
cmpsl
sub
hlt
hlt
dec
test
jl
xchg
cmp
adcl
mov
loop
in
aad
loope
cmpsl
xchg
inc
or
les
jbe
int3
outsb
ljmp
adc
mov
push
scas
fsub
dec
adc
mov
nop
cmp
add
adc
xor
shrl
inc
jmp
mov
or
cwtl
or
pusha
push
sub
cmp
cld
xchg
out
dec
data16
fistl
out
mov
test
cs
mov
cmp
dec
popa
xor
sub
aas
cmpsb
cmp
add
jno
rcl
xor
mov
push
cmp
in
fisubs
inc
pusha
sub
xchg
mov
cmp
mov
sahf
add
inc
sub
jo
movsl
xchg
out
aaa
arpl
outsb
adc
xor
mov
jo
leave
adc
inc
adc
rorl
add
mov
lods
ds
inc
xchg
and
jo
ret
adc
lock
test
jg
lahf
cmc
sub
push
push
test
ljmp
mov
loop
sub
pop
jbe
clc
pop
pop
or
adc
lods
mov
jns
insb
mov
aaa
push
inc
push
push
lcall
xchg
sbb
cmp
jecxz
add
inc
mov
flds
into
inc
mov
add
lret
int
lods
push
aas
cmp
movsl
cs
pop
push
xor
hlt
mov
sahf
mov
pop
mov
imul
or
inc
mov
inc
xor
xchg
adc
daa
adc
fstpt
or
push
adcb
cmp
dec
inc
imul
sbb
outsb
cld
lret
imul
outsl
rclb
push
es
inc
fwait
ja
cmp
mov
and
jge
sbb
movsb
sti
gs
and
bound
mov
adc
or
dec
push
test
xchg
jne
mov
pop
jns
shlb
loope
shrb
mov
lret
and
adc
movntps
pusha
sub
outsl
and
mov
lret
cli
jle
shlb
int3
xchg
mov
movsb
es
das
lahf
ds
xor
push
int3
add
push
ret
stos
je
and
icebp
loope
xchg
push
jo
dec
inc
jmp
add
inc
push
and
mov
adc
mov
sti
push
mov
outsb
jbe
in
cli
dec
sub
cmp
adc
pushf
ret
ljmp
popa
lock
decb
clc
xchg
cmpsb
ret
mov
mov
push
sbb
dec
movb
and
push
fimuls
mov
push
xor
mov
jecxz
adc
sbb
pushf
mov
push
push
lret
out
ret
aaa
test
sbb
test
les
icebp
sbb
out
int
bound
imul
lahf
idivb
cld
inc
shrl
inc
sub
jg
mov
and
mov
lahf
jo
dec
cmp
mov
mov
xor
enterw
xchg
push
ret
xchg
rcrb
test
pop
imul
cmp
adc
iret
jae
sti
jno
jecxz
xchg
subl
dec
rclb
clc
inc
sub
jl
and
mov
out
mov
ja
push
xor
rcrb
in
dec
test
push
jne
mov
mov
push
push
lock
into
inc
cmpsb
cmp
insb
rolb
and
mov
cmpsl
mov
in
xor
push
cwtl
js
ljmp
jbe
jmp
push
xor
sbb
frndint
test
sub
push
pop
fisubrs
sbb
outsb
or
sbb
lahf
test
in
int
cmc
xor
maskmovq
testl
cmp
or
sub
outsb
jecxz
daa
jge
fdivrl
push
inc
popf
pop
add
and
dec
lods
xchg
loop
ja
or
scas
es
in
call
xor
cmpsl
add
enter
addl
inc
pop
stc
jo
addr16
aas
push
mov
sar
dec
xchg
pop
lahf
repnz
test
jne
or
xchg
out
push
and
mov
ljmp
mulb
int3
ret
pop
in
xchg
fs
xchg
cmp
movsb
loopne
fwait
add
ficompl
pop
mov
mov
xchg
fildll
testl
rep
sub
loop
cmp
js
std
int3
je
out
jbe
dec
ret
imul
mov
es
lock
sub
orl
mov
or
pop
je
xor
rcl
ja
ljmp
cmpsl
cmpsb
sub
add
movsl
icebp
test
inc
mov
popf
negl
cmp
fwait
add
lea
in
stc
decl
adc
xchg
ret
or
sub
jecxz
stos
jae
je
sub
repz
loop
arpl
mov
adc
popf
aas
test
dec
mov
mov
jnp
cltd
into
icebp
mov
orl
mov
xlat
xchg
mov
loop
add
std
movsl
adc
push
cltd
mov
aas
out
jns
sbb
sbb
xchg
dec
xchg
mov
sbb
cmp
cld
xchg
lock
clc
adc
in
fadds
shl
xchg
pop
jg
imul
pusha
sub
jle
sbb
mov
mov
je
push
ljmp
xor
dec
mov
scas
jns
dec
cld
jecxz
xchg
out
loopne
jbe
test
ret
sub
push
shr
jmp
sub
ret
fdivr
rcll
ret
sub
rcl
in
fmull
test
mov
jnp
sbb
mov
xor
dec
adc
leave
mov
jl
push
repz
xchg
xor
jg
or
pmulhw
addr16
inc
hlt
adc
mov
scas
dec
pop
or
iret
sub
insl
movsb
xor
dec
mov
lea
jle
dec
movsl
xchg
leave
ss
pop
xchg
in
mov
push
rclb
inc
rcl
push
or
pop
inc
shr
adc
das
or
xchg
nop
xchg
into
sub
iret
push
lret
inc
adc
sub
inc
lret
push
ret
and
pop
cmc
adc
and
cmp
adcl
pop
push
inc
inc
push
mov
outsl
push
jle
test
ret
sarl
subl
mov
scas
lock
jmp
sar
jno
sahf
cwtl
adc
je
repz
pop
add
jnp
push
pop
iret
adc
bound
and
sarl
dec
mull
push
sar
cmp
fcmovne
or
xadd
add
mov
in
push
add
add
jmp
fstps
insl
outsb
mov
xor
fnstenv
push
or
sbb
sbb
pushf
dec
mov
sub
fisubrs
cli
nop
icebp
orb
push
mov
mov
into
or
and
aad
loop
dec
inc
fnstenv
xchg
test
push
adc
popa
call
test
cmc
push
push
stos
adc
mov
std
stos
mov
jmp
add
add
mov
scas
dec
movsb
test
cltd
icebp
and
jge
cs
mov
lahf
jo
scas
cmpb
inc
inc
and
fwait
data16
xor
cmp
sub
test
xchg
cmc
sbb
mov
sub
in
dec
jae
jp
cmp
dec
xor
test
icebp
and
mov
push
jbe
mov
outsl
push
adc
and
mov
ret
pop
movsb
mov
clc
mov
jp
in
push
cmc
cwtl
add
ret
cmpsb
mov
mov
cmp
in
jo
les
test
out
outsb
dec
mov
lods
sbbb
and
cmc
int
dec
cmp
sub
lret
push
lret
stos
xlat
xlat
shll
es
mov
rcrb
inc
dec
sbb
pop
fiadds
jmp
jnp
add
iret
xchg
pop
jo
ficompl
fstpl
push
inc
add
sub
or
mov
rcrl
outsl
xor
and
or
xchg
jno
lcall
gs
mov
pusha
sahf
movsb
adc
inc
mov
mov
ret
cmp
test
add
inc
push
stos
insb
mov
or
shr
popa
inc
mov
sbb
sbb
mov
mov
pop
xchg
inc
jno
fnstenv
icebp
jmp
adc
pop
adc
loop
cmpsl
mov
fimull
sub
rorb
mov
push
or
mov
ja
push
ret
rcll
fnstcw
lea
pop
adc
dec
and
dec
adc
adc
and
add
lret
cmp
sti
xchg
xchg
sbb
lds
loope
and
pusha
adc
xor
rcrl
cwtl
int3
xchg
inc
nop
mov
mov
push
xor
aad
xlat
and
add
xor
insb
push
movsl
dec
pop
popf
jmp
movsl
cmpsl
add
push
adc
sti
sub
test
sahf
pop
sub
into
es
test
push
pop
test
adc
add
xor
mov
push
mov
dec
enter
popa
mov
testl
clc
push
cmc
sti
lea
lds
hlt
jmp
cwtl
add
sub
out
cmpl
outsl
addr16
mov
loopne
es
lret
adc
insb
push
or
insb
sbb
loop
ret
scas
decl
add
dec
sbb
shr
cmp
or
fnstsw
call
sub
and
loopne
or
sbb
movq
dec
or
jo
mov
ffreep
stos
mov
nopl
xchg
popa
outsb
fstps
subb
rcll
xchg
cltd
cld
mov
pop
xor
rep
je
dec
pusha
jb
test
pop
repz
lods
pusha
cmpsw
push
cwtl
sarl
mov
xchg
cld
adc
adc
and
jbe
inc
ljmp
loop
shll
mov
pop
xchg
and
orb
jge
pop
repnz
xor
jae
cmp
jecxz
cmp
sbbl
sbb
je
sbb
jp
loopne
push
sbb
dec
clc
inc
into
lock
xchg
push
xor
or
sub
mov
push
ret
mov
mov
inc
fsub
sbb
mov
ja
popf
int3
das
push
lds
dec
addb
mov
mov
mov
xorl
lods
imul
sub
or
and
js
jno
inc
dec
jne
daa
mov
sarl
xlat
mov
cltd
pop
dec
test
jp
cmc
adc
add
mov
in
inc
cmp
out
icebp
adcl
add
xlat
loopne
loope
add
push
shl
inc
mov
sub
xchg
dec
daa
or
and
shl
mov
cs
cmc
jge
incl
inc
mov
aaa
and
call
adc
jo
sahf
fstpl
jnp
push
stc
bound
pop
xlat
daa
add
loope
xchg
lods
scas
sbb
mov
dec
mov
fsubl
insl
cmc
gs
push
es
xor
loopne
pop
push
or
loopne
sub
mov
cmp
les
inc
cld
add
push
pop
or
call
mov
sub
jp
pop
add
push
and
loop
fsts
jnp
xor
nop
adc
cmp
jle
movsl
loope
jb
pusha
out
ja
xor
stos
and
cmpsl
mov
gs
mov
fwait
mov
test
sbb
inc
sub
cmc
inc
cs
pop
xor
sbb
call
push
sbb
int
push
xorl
xor
scas
popa
call
xor
data16
cmp
sbb
add
aad
pusha
test
cli
inc
loop
dec
jb
mov
inc
inc
and
mov
or
ljmp
fimull
mov
ds
cmp
adc
cmpsb
mov
mov
aad
packuswb
fucomip
dec
cmp
mov
push
ja
add
inc
ja
mov
jmp
dec
pop
lea
mov
jp
adc
ret
sbb
sub
sub
cmpsb
jno
adc
dec
addr16
aad
inc
insl
ss
icebp
adc
pop
or
adc
mov
es
xor
sti
pop
fcoml
push
cmp
es
pop
lock
insb
popf
pusha
mov
push
insl
mov
jmp
inc
test
push
sarb
pop
push
adc
daa
movsb
or
xchg
adc
or
loopne
push
jl
or
int
jns
push
pop
cld
loop
scas
addb
xchg
pop
inc
iret
push
addr16
dec
std
js
add
mov
xlat
jp
ds
xchg
ret
das
aad
mov
popf
xchg
mov
sub
xor
cmp
mov
push
scas
jne
aad
mov
shll
or
jmp
xor
stc
fidivl
scas
xor
imulb
push
push
sbb
or
sbb
mov
sub
sbb
sub
aad
rol
hlt
dec
and
int
cs
dec
inc
push
and
inc
in
sub
pop
and
imul
push
xchg
cwtl
sub
pop
lahf
or
les
sarb
fstpl
or
test
and
inc
inc
jp
xor
in
pop
mov
cli
sub
je
dec
int
scas
test
mov
loopne
sahf
mov
xor
jae
outsb
test
lret
adcb
mov
int3
in
cli
out
xor
push
faddp
adc
fcmovnu
mov
lahf
aam
vmovsd
adc
sarb
push
or
jno
sub
dec
jecxz
cmp
lock
fsub
aaa
pusha
ljmp
lahf
inc
mov
pop
mov
jbe
pushf
movsl
or
push
push
xor
movsl
push
imul
scas
movsb
mov
aaa
xor
in
sub
sahf
adc
xchg
cmc
pmullw
scas
fadd
mov
and
add
movsl
jmp
insb
xchg
aaa
adc
orb
lods
into
test
xchg
cmp
inc
in
js
inc
cmp
cmp
pushf
fstpt
js
sbb
push
sbb
stos
pusha
cld
cmpsl
mov
push
stos
mov
jp
sbb
inc
insl
push
jnp
pop
test
test
or
sbb
inc
adc
mov
lock
xchg
repnz
rolb
xchg
pushf
or
addl
cmp
add
fildll
dec
ds
nop
cli
push
je
adc
push
outsb
rolb
rcr
test
cmp
imul
in
js
icebp
sbb
pop
inc
sbb
out
clc
mov
xchg
movsl
aaa
inc
mov
xorb
call
aaa
push
sbb
cmc
xlat
fwait
lods
int
fdivr
push
inc
movsb
shlb
mov
outsl
fwait
mov
test
js
xchg
mov
xor
cmp
inc
stos
scas
imul
imulb
cmp
scas
and
mov
add
pop
or
ficomps
scas
adc
xor
popf
loopne
mov
xchg
fimuls
clc
sub
loop
sbb
mov
test
sbb
push
fwait
or
sbb
mov
roll
movsb
int3
roll
popa
jb
scas
dec
and
dec
test
jns
pop
addr16
mov
test
mov
fadds
aam
cs
dec
dec
sbb
add
sbb
mov
add
aas
push
je
popa
outsl
adc
shl
mov
cld
jne
pop
addr16
and
or
mov
inc
push
mov
dec
dec
pop
enter
mov
test
xor
testl
loopne
fdiv
movsl
es
nop
mov
repz
dec
nopl
mov
pusha
inc
push
sbb
shlb
sbb
enter
adc
sub
or
mov
leave
cmp
adc
inc
test
mov
push
mov
pusha
mov
in
mov
mov
les
mov
sbb
icebp
push
sub
subb
inc
jmp
push
rcrl
or
fldcw
or
std
adcl
and
adc
je
pop
mov
int
lret
ja
xchg
sbb
fsubp
scas
pop
push
inc
lret
xor
and
call
faddl
push
add
xor
mov
fsubrl
sbb
es
lret
xchg
cmp
adcl
or
xchg
pop
push
mov
in
sbb
test
shlb
dec
jge
add
inc
repz
xor
repnz
out
aas
mov
sbb
sub
cmp
cmp
out
pop
mov
cmpsl
aam
mov
xor
mov
test
adc
clc
or
xor
pop
rcrb
mov
push
mov
ds
push
xor
push
mov
push
adc
inc
setl
insl
repz
dec
pusha
cmp
xchg
fildl
popf
cmc
jmp
xchg
mov
mov
inc
xlat
lahf
sbbl
cld
push
arpl
add
les
mov
inc
roll
loopne
icebp
movsb
incl
mov
fsubrs
test
push
pop
dec
fistpll
mov
or
out
adc
scas
and
andl
jge
int3
xchg
adc
pop
bound
pop
stos
ja
mov
xor
shlb
adc
adc
xchg
fbstp
lods
cmp
scas
dec
test
dec
fstpl
arpl
movsl
jecxz
or
aam
lahf
movsb
cmpsb
jno
dec
sbb
loope
rcrl
addr16
pop
fists
jecxz
dec
leave
fisubl
lock
ret
test
popa
subb
ja
fisubs
and
jae
xchg
hlt
stos
lret
cltd
inc
sahf
ds
cmp
leave
ljmp
jmp
add
scas
mov
push
scas
sti
daa
mov
push
inc
cmp
pop
jmp
call
add
dec
sub
jne
fldt
in
pop
mov
nop
jbe
inc
push
imul
cli
pop
pop
sub
mov
repz
jp
push
shrl
inc
andb
lcall
mov
loope
sub
mov
sti
shlb
loope
pushf
lods
pop
dec
pop
js
add
pop
pop
push
repnz
dec
inc
clc
loop
out
inc
pop
fcomp
xchg
out
sti
js
xchg
adc
idivl
and
cmpsl
in
or
xor
mov
push
sti
cmp
sub
push
aad
lods
push
cmp
mov
mov
xchg
mov
pop
jae
dec
pop
mov
or
dec
jg
mov
adc
cmpsb
ljmp
add
mov
lea
lods
jmp
cli
pop
or
movsb
and
xor
adc
lock
mov
in
je
adc
loop
pop
das
rcr
out
insl
inc
push
push
enter
mov
loope
mov
orl
mov
mull
sub
loopne
inc
je
push
data16
dec
sub
fbstp
xchg
sbb
mov
ret
js
aas
rorb
inc
add
mov
adcb
jno
inc
xor
fdivrs
loopne
jno
cmp
jp
jge
dec
les
jno
ret
test
test
jbe
and
out
jge
sbb
out
push
xor
in
nop
and
xchg
dec
xor
sbb
movb
push
and
mov
mov
mov
dec
fprem1
aaa
mov
lret
pushf
lret
xlat
cwtl
and
push
adc
push
pop
push
sbb
xlat
pop
sbb
orb
daa
pop
dec
or
mov
les
fidivrl
cmp
test
or
and
jge
fdivs
push
push
jnp
push
scas
lahf
pop
inc
clc
jecxz
mov
js
bound
sti
sbb
mov
pop
in
push
aaa
loopne
mov
jge
stos
pop
test
mov
scas
shrl
push
addb
push
ret
or
adc
sbb
aad
idiv
lods
or
inc
stos
adc
xor
mov
shl
data16
push
test
push
sbb
call
xor
sbb
and
daa
push
jge
outsb
je
jle
out
mov
jp
ljmp
cld
lret
mov
add
out
bound
jno
push
imul
cmp
pushf
jae
lods
in
or
nop
add
mov
mov
outsl
ret
jp
arpl
faddl
movb
or
sbb
leave
xor
xchg
cmpsb
push
popa
mov
mov
pop
push
cmpsb
ds
xchg
sti
scas
ret
notb
and
push
pop
inc
out
fiaddl
push
addb
and
dec
push
xchg
push
pop
lock
add
das
jne
repz
cmc
jle
push
call
and
in
loopne
popa
aaa
pop
int
ds
popa
sbb
leave
movsb
mov
sub
orb
ret
add
inc
sbb
mov
sub
xchg
js
outsl
test
pop
push
int3
push
je
mov
lock
add
or
movsb
insl
cli
in
aad
push
rcrl
fmulp
jmp
adc
xor
dec
inc
sbb
mov
mov
out
pop
sub
loopne
cmp
shrl
adcb
je
xor
in
adc
cld
rolb
outsl
nop
push
mov
scas
mov
sub
fnstenv
scas
out
xchg
xchg
mov
insl
sub
insl
adc
add
pop
mov
int
pop
add
sarl
cmp
push
jl
pushf
icebp
push
imul
clc
inc
mov
or
cld
or
mov
test
mov
iret
cmp
fdivrs
cmp
fxch
xor
aad
jl
pushf
dec
inc
nop
sbb
mov
inc
movsl
dec
cmp
mov
sbb
mov
adc
push
fnsave
je
mov
mov
ja
xor
arpl
js
addb
insb
nop
sbb
mov
out
sbb
push
xor
movsb
sbb
out
add
add
fdivrs
iret
lods
shlb
popf
push
inc
lock
mov
jb
push
mov
add
aad
rep
xchg
lods
add
mov
xchg
mov
insl
repz
xchg
cmp
pop
ljmp
jle
xor
mov
popa
inc
pop
hlt
jp
sbb
mov
mov
fnstcw
xor
addr16
cmpsb
repz
roll
jb
or
xlat
call
cli
mov
shll
xor
jnp
arpl
rorb
mov
out
dec
mov
add
or
pop
mov
loopne
pop
lahf
js
mov
movsb
and
jp
loope
add
rclb
xor
adc
push
and
adc
mov
fnsave
cmpsl
fcom
pop
add
cmp
scas
les
ds
in
je
hlt
jle
mov
xlat
sub
inc
insb
add
sub
fdivrs
ds
addr16
hlt
in
xchg
shlb
pop
push
and
rorl
and
clc
adc
pop
dec
sbb
rcrl
pop
dec
into
or
adc
je
dec
in
and
shll
lret
jl
in
mov
adc
aaa
adc
lods
jge
inc
lret
push
pop
jno
dec
lods
not
loop
cmp
out
clc
inc
sbbl
and
out
loopne
lret
fists
mov
push
mov
mov
test
loop
fists
sub
ret
aaa
mov
imul
mov
add
jl
add
jle
in
mov
pushf
pop
jbe
ds
adc
std
jns
ljmp
push
ret
loop,pn
jl
mov
ret
inc
insl
loopne
bound
rorb
push
mov
mov
push
ret
fs
ret
pop
call
lods
adc
mov
push
aaa
push
call
imul
rcrl
mov
mov
pop
adc
xorb
push
mov
nop
test
sub
adc
inc
add
movsb
rorl
sub
jno
aaa
das
add
ret
rorl
fcmovbe
pand
fiaddl
insb
pop
rcll
xlat
dec
sbb
lahf
lcall
pop
fcompl
out
clc
sbb
add
mov
mov
loope
decl
les
das
mov
xchg
mov
js
push
loop
aad
lret
xorb
pusha
mov
arpl
and
xchg
mov
jle
shrd
test
push
xlat
dec
mov
sub
stos
jb
push
xchg
mov
outsl
movsb
xchg
mov
fldt
movsl
int3
bound
xor
mov
les
fwait
or
outsl
in
lods
faddl
sahf
adc
scas
adc
mov
lahf
or
ds
push
out
inc
fsubrs
test
sub
push
lcall
and
lods
jne
add
mov
nop
test
xchg
xor
xchg
dec
xchg
or
adc
lods
push
push
jle
add
rorl
std
je
clc
xchg
xchg
cmp
push
in
daa
mov
push
add
in
movsb
mov
push
xchg
adcl
pop
pop
fstp
and
aaa
in
shlb
mov
adc
lcall
fs
mov
pushf
mov
mov
jle,pn
stos
mov
enter
sub
pop
mov
jb
and
mov
or
push
inc
xchg
sbb
cmp
mov
xchg
dec
inc
pop
add
popa
mov
sub
add
fsubs
xor
mov
in
fwait
sarl
or
dec
out
test
jbe
inc
je
xor
push
push
mov
imul
ljmp
push
decb
mov
fisubl
push
sbb
cmp
mov
mov
dec
pxor
xchg
xor
aad
jns
or
or
sbb
loop
testb
push
ss
lahf
jg
fdivrl
fiaddl
cmpb
repz
push
inc
adc
imul
pushf
xor
push
das
xchg
insl
lahf
and
mov
or
js
mov
cmp
pop
and
aam
inc
inc
rolb
movsb
jle
pop
repz
clc
daa
loopne
xor
fwait
aas
sarl
incb
jmp
lock
sbb
fildll
cld
sbb
mov
xchg
mov
js
ror
mov
sub
push
and
inc
mov
inc
pusha
das
xor
push
daa
rcll
sub
fsubp
sbb
and
outsb
hlt
test
test
outsb
push
jo
scas
popa
xchg
daa
pop
sub
push
loop
sbb
adc
sub
test
jg
leave
mov
cmp
int
mov
or
or
push
push
adc
test
aam
ljmp
loopne
stos
jae
cmp
adc
push
in
xchg
add
icebp
test
lea
mov
pop
push
sahf
lods
dec
cmp
into
sbb
fdivs
ret
data16
jg
add
aas
adc
mov
jmp
repnz
iret
cmc
adc
mov
repz
and
cli
add
add
paddsb
inc
pusha
add
mov
outsb
movsl
imul
cmp
add
mov
cmp
cmp
inc
fwait
pop
cmp
sub
es
cmpps
arpl
cmp
aam
adc
inc
nop
inc
sub
cmp
out
lret
mov
sub
adc
mov
data16
inc
mov
push
xor
inc
fsubrs
fs
sbbl
jbe
push
jl
add
cmpsb
call
pop
bound
push
arpl
sbb
inc
test
mov
pcmpeqw
mov
jnp
movsl
unpckhps
push
in
les
cmp
in
int
inc
pop
push
mov
add
push
push
bound
and
add
xlat
jo
cmp
lret
test
mov
insl
jge
or
loop
xchg
lods
fdivp
cmpsb
fcoml
sbb
loop
sbb
push
push
mov
notb
cmp
inc
or
rorb
inc
pop
push
cmp
jl
loope
pop
and
and
cmpsb
pop
call
testb
jmp
cmp
dec
ret
test
inc
cmpl
hlt
ret
clc
mov
lock
push
daa
jmp
mov
add
arpl
jnp
je
loopne
sub
orl
add
ficomps
adc
push
jge
cmp
xchg
cltd
xor
or
push
cmp
cli
loop
xor
adc
jb
outsl
xchg
inc
inc
lods
aaa
dec
icebp
pop
cmp
sub
or
inc
inc
je
scas
xor
push
xorb
push
loope
mov
or
fisttpl
arpl
imul
shll
nop
in
fstp
mov
adc
mov
mov
adcb
inc
dec
sbb
aas
lea
dec
add
in
clc
rcl
xor
ljmp
sbb
rclb
mov
adc
call
outsb
adc
add
add
mov
mov
mov
insl
ficomps
pusha
aas
inc
add
push
mov
cli
rcrb
jmp
ret
sbb
pop
and
aas
icebp
and
sbb
xor
fiadds
push
test
ret
test
sub
pop
push
mov
adc
jo
xchg
out
gs
cltd
lods
mov
int3
mov
gs
dec
push
push
dec
or
aaa
inc
add
and
push
jmp
jle
cmpsb
jle
std
fwait
mov
inc
sub
inc
sbb
xor
insl
add
jno
mov
cmp
orl
std
dec
and
mov
in
jnp
push
inc
jns
dec
jo
daa
arpl
jge
mov
add
dec
jo
sahf
clc
add
push
daa
popa
stc
pop
fiaddl
ljmp
xor
sbb
dec
dec
bnd
add
mov
jb
je
mov
in
or
xchg
mov
stos
dec
jg
adc
pop
adc
pop
ret
push
mov
leave
movaps
mov
push
test
fiadds
xor
pop
cmp
cwtl
inc
adc
jecxz
daa
test
insl
dec
fsub
mov
adc
add
and
int3
push
push
daa
mov
addr16
aam
mov
dec
fisubrs
test
icebp
cli
adcb
push
cmpsb
icebp
cmpsl
lock
xchg
cmp
ret
test
xor
clc
aad
movsb
mov
mov
ja
mov
enter
loopne
call
dec
pop
aam
and
lret
inc
fsubrs
ret
mov
mov
faddl
or
mov
add
sbb
adc
fs
xlat
mov
sub
inc
cmp
inc
sbb
shl
push
and
mov
push
jle
mov
das
das
lock
sbb
inc
mov
xchg
pop
rolb
std
jbe
xor
mov
lcall
scas
test
stc
mov
dec
add
dec
pusha
fs
aam
subl
sub
hlt
adc
jg
dec
mov
jbe
sbb
adc
pop
add
push
mov
jo
mov
xchg
rorb
scas
je
adc
sub
out
mov
mov
lods
dec
test
outsl
outsl
inc
inc
sub
int3
popf
jg
xor
rcll
pusha
adc
fwait
in
jbe
adc
dec
mov
mov
ret
cmp
mov
iret
and
int
or
dec
aam
pop
enter
mov
call
mov
mov
push
push
jb
adc
xor
ret
dec
outsl
dec
mov
fs
dec
loop
add
sbb
push
adc
or
pop
jle
jbe
jnp
loope
mov
hlt
adc
lcall
push
push
lods
sub
pop
paddb
scas
outsb
sbb
shll
mov
xor
aad
or
cmp
or
xor
fmull
mov
inc
cwtl
inc
loopne
les
or
mov
add
outsb
addr16
loopne
inc
mov
pop
or
ficoms
loope
loopne
pop
push
outsl
mov
inc
sub
mov
es
sub
inc
sbb
add
sbb
add
mov
jmp
cmc
shl
xchg
imul
int
pop
mov
xchg
pop
or
enter
adc
test
addr16
shrb
pop
iret
push
cld
or
inc
scas
sbb
mov
loop
adc
mulb
fwait
ljmp
subl
icebp
jle
rolb
loope
cmpsb
jl
mov
sbb
pop
hlt
mov
into
inc
dec
or
repnz
sahf
or
in
aaa
mov
add
arpl
push
mov
push
push
or
lods
mov
inc
js
add
sti
xor
flds
or
imul
dec
cwtl
add
cltd
sbb
mov
cmp
cmp
ljmp
ret
pop
mov
enter
push
xchg
cwtl
jp
mov
jns
pop
in
push
fnstsw
sub
sbb
jo
outsl
or
lods
fmuls
add
lods
or
add
add
jle
popf
pushf
push
sbb
loop
scas
jne
aam
daa
mov
sbb
subl
sub
jae
sbb
loopne
lcall
pop
add
and
sbb
in
or
mov
or
clc
add
adc
inc
cli
nop
in
out
sbb
lret
sub
pop
aas
shrb
jne
js
cmp
das
push
std
ret
add
adc
pusha
dec
xorb
std
inc
inc
and
sub
cmp
incb
cmp
das
cltd
mov
lea
mov
das
inc
xor
loopne
cltd
push
out
notb
mov
and
push
push
aam
mov
mov
insl
js
cs
pusha
int
lods
or
sbbb
xor
pop
lock
mov
insl
aam
fstpl
mov
scas
cli
mov
movsl
mov
shl
dec
sub
sub
repz
push
cmp
int3
nop
push
lret
mov
ret
add
cmp
lahf
sbb
je
push
ss
test
mov
out
popa
adc
repnz
and
sub
pop
and
enter
imulb
rcrb
pop
jo
or
mov
aam
sub
add
or
or
inc
aas
or
add
mov
cmp
pop
aad
and
pop
and
fdivl
andb
push
xchg
push
stc
js
mov
sbb
rorl
aad
fwait
and
adc
dec
cmp
pop
scas
jmp
gs
fidivrl
movsl
fisttpll
cmp
inc
adc
pop
pop
in
add
xchg
dec
int
adcl
lods
test
cltd
and
sub
pop
inc
add
mov
xchg
test
mov
xchg
and
jg
scas
mov
insb
cli
sbb
xchg
fidivrl
jns
xor
cmp
insb
dec
inc
xorw
and
inc
mov
addr16
xchg
pop
cmp
and
mov
pop
push
sbb
inc
jge
mov
dec
and
into
cwtl
fistl
cli
add
push
xor
push
or
repz
sbb
lock
push
popa
ror
dec
and
jo
outsl
jecxz
cltd
mov
divl
test
sbb
pop
add
mov
xor
roll
insl
or
je
pop
sbb
mov
pop
pop
mov
xchg
test
mov
movsl
fimull
ljmp
push
dec
test
shrl
mov
cmpsb
lds
les
les
adc
test
mov
jge
push
cwtl
sub
or
mov
cmpsl
mov
inc
mov
jle
sub
pop
dec
out
aaa
sub
xor
and
lcall
jg
cmp
cs
cld
inc
ficoms
repz
adcl
adc
movsb
js
in
movsl
xchg
sub
adc
jb
inc
daa
scas
clc
or
add
mov
dec
add
fcoms
shlb
shll
jbe
or
or
mov
imul
faddl
mov
adc
adc
mov
fistps
jnp
adc
fcompl
jb
mov
enter
pop
gs
mov
inc
lret
nop
inc
xchg
jnp
sub
leave
inc
jns
cmp
outsb
mov
inc
adc
clc
jne
mov
xchg
int3
mov
pop
jnp
dec
mov
push
jne,pt
pop
mov
movl
push
rorw
aam
xor
mov
add
xchg
sbb
pop
pop
je
fsub
add
cmp
lret
mov
incb
fsubrl
mov
pushf
pop
shl
leave
mov
nop
fisubl
pusha
dec
jge
into
cmp
and
fcompl
cltd
in
adc
jbe
repnz
stos
aaa
or
dec
test
xchg
test
ljmp
dec
cld
fcoml
pusha
push
lret
lods
shll
sub
movsb
sahf
pop
push
add
mov
jbe
fldl
mov
pop
fisubs
pop
jg
test
mov
and
fdivrl
ss
in
adc
loope
lcall
mov
sbb
pop
inc
ljmp
jp
and
adc
and
or
or
fiaddl
hlt
pop
pusha
aad
movsl
ljmp
test
adc
ret
iret
mov
mov
adc
loop
hlt
jg
mov
and
js
inc
repz
pop
nop
mov
sub
movsb
pop
subb
call
int3
outsb
subb
xchg
or
mov
xlat
clc
lcall
into
mov
and
add
mov
sub
loope
dec
aaa
inc
fistpll
xchg
push
rolb
xchg
xchg
push
in
jmp
or
shr
mov
ds
ja
sarb
inc
sub
stos
mov
loope
mov
je
or
push
add
pop
faddl
sti
jmp
test
inc
cld
loopne
popa
fwait
jecxz
xchg
test
das
idiv
push
sub
loope
mov
pop
cld
jle
cmc
aam
movsb
dec
int
in
push
fisubl
mov
sti
and
int3
push
cmp
ret
xchg
mov
pushf
push
mov
test
inc
inc
inc
mov
jg
inc
mov
xor
mov
jmp
push
cmpsb
xchg
lcall
adc
enter
scas
fcom
gs
adc
sub
add
leave
and
xchg
sbb
add
add
pushf
push
mov
stos
int3
rcrl
push
lock
loope
jg
rcr
pop
inc
fdivs
loop
mov
fyl2xp1
mov
cmpsl
stos
xchg
aam
ret
inc
rclb
pushf
or
mov
jne
lds
push
dec
stc
jns
mov
pop
xchg
pop
mov
es
jnp
sub
or
addb
push
mov
loop
movsb
sbb
and
xchg
sub
jge
sub
and
add
sub
incl
jno
jne
ljmp
xor
xchg
mov
out
sti
repnz
sbb
dec
jge
sbb
and
or
pop
push
pusha
push
scas
xchg
or
xor
push
jle
ret
cld
es
adc
scas
push
add
add
out
jp
enter
dec
pop
push
rcrl
dec
sbb
sbb
jecxz
jbe
pop
fdivl
aam
sbb
xor
daa
pop
cwtl
push
sbb
ja
add
cld
outsb
jle
sbb
sbb
adc
or
or
test
imul
inc
jle
call
push
ret
mov
push
xchg
popf
xor
push
cmp
orb
xchg
fsubrs
cmp
inc
mov
aam
mov
push
jnp
mov
leave
push
outsb
dec
mov
int
int3
lea
and
add
bound
sbb
shlb
xorl
clc
adc
stos
sbb
popa
fiadds
fdivp
add
aam
add
divw
jmp
lret
mov
or
mov
test
mov
mov
sbb
mov
outsl
mov
inc
lods
lahf
or
dec
outsl
je
pop
inc
xchg
cmp
lret
out
shlb
es
es
jbe
and
and
cs
cmc
lret
pusha
fwait
sbb
int3
test
cmpsl
and
mov
mov
mov
push
inc
movb
test
out
mov
push
add
fiaddl
jns
pop
rol
inc
dec
call
mov
js
dec
sbb
push
fsubl
lea
loopne
inc
outsb
pushl
in
push
cmpsl
dec
push
add
insl
pop
and
mov
test
inc
lret
xlat
mov
nop
xlat
into
sbb
mov
inc
xor
insb
fimull
pushf
fdiv
fmuls
jl
jp
cmp
and
mov
cmp
mov
adc
jp
data16
ljmp
jbe
jne
xchg
sub
pop
aam
shlb
mov
xchg
sbb
pop
mov
add
inc
push
lods
xor
or
daa
pusha
cmpsl
jae
jg
les
ljmp
mov
mov
mov
ret
call
jbe
pop
sbb
pop
cwtl
push
jns
ljmp
icebp
push
shrb
cmc
mov
jge
pop
and
icebp
loopne
mov
sub
pop
sbb
mov
cmpsl
popl
pop
jl
icebp
inc
bnd
or
add
push
mov
lea
fidivrl
bound
rclb
add
pop
xor
push
inc
xchg
mov
lcall
jg
add
mov
dec
inc
inc
cmp
ret
aam
clc
ret
add
sahf
dec
dec
popa
xchg
cmp
inc
aas
mov
dec
ss
add
add
xchg
iret
and
sahf
adc
imulb
iret
sub
cmp
loopne
xchg
shlb
inc
jae
or
imul
inc
ja
pop
inc
lcall
cs
add
or
lods
pop
movsb
jmp
mov
ss
je
mov
and
adc
lods
data16
enter
xor
push
lds
mov
fsubr
inc
roll
aam
jle
ret
aas
jp
sub
fisttpl
outsl
icebp
or
iret
xchg
lahf
adc
push
xchg
repz
push
fwait
sbb
inc
or
inc
test
push
mov
xlat
bound
addl
sub
hlt
or
dec
mov
xor
xchg
inc
mov
jbe
int
add
xlat
ficoml
movsl
icebp
ret
mov
xchg
in
xor
push
and
add
negb
lcall
mov
fimull
dec
test
mov
out
push
lods
int
add
shl
aad
les
push
rcrl
loopne
int
adc
push
or
sub
sbb
inc
inc
rorb
clc
and
negl
sbb
cmp
les
fidivs
es
mov
sub
adc
in
ret
mov
lds
and
int3
loop
paddsb
stc
mov
add
or
in
jp
add
xor
stos
lret
mov
lret
xchg
in
adc
stos
repnz
scas
sbb
mov
cmc
and
cmp
push
lds
adc
call
ja
or
xor
mov
mov
test
xchg
rcrb
sub
sbb
push
mov
imul
sahf
and
sub
or
js
fidivrl
add
inc
out
popa
xchg
adc
lcall
cmp
mov
gs
ds
sbb
dec
sub
icebp
scas
mov
jo
or
or
lcall
in
jmp
lock
lods
xchg
mov
sbb
adc
jl
pop
arpl
test
imul
dec
int
adcb
push
jae
push
push
dec
lods
jp
loop
add
mov
sub
ret
into
xchg
cmp
mov
pop
cmp
mov
and
xchg
and
xchg
inc
icebp
scas
in
sbb
cmp
les
cmc
jbe
ret
loopne
les
cmp
pop
or
lods
sahf
add
outsl
mov
push
pmaddwd
cmp
int
shll
mov
test
inc
shrl
pop
test
xchg
cmc
adc
or
test
cmc
es
iret
fdivs
cmp
xchg
fsubr
stc
cli
adc
jg
ljmp
cmp
cmp
push
cmp
sbb
jl
clc
cltd
or
loop
rcll
jg
imul
xchg
cs
push
push
sbb
fmull
pop
loopne
daa
jecxz
fsubl
jg
mov
pop
leave
cmc
data16
mov
arpl
mov
jle
mulb
mov
js
mov
add
aad
jmp
out
sbb
pop
mov
add
sbb
pop
mov
and
sub
cwtl
je
add
jb
xor
mov
iret
adc
sbb
xor
inc
xchg
aad
sti
jne
mov
pop
lock
add
push
movsl
pushf
test
cmp
mov
pushf
ds
les
sbb
or
mov
loopne
mov
outsl
xor
ja
pop
pusha
xchg
adc
sub
sub
inc
cmp
jmp
popl
add
lcall
push
push
cld
and
push
je
icebp
jbe
test
hlt
sub
stos
sub
loop
insl
pop
dec
dec
or
push
mov
xor
cmpsl
addr16
push
jbe
inc
mov
test
push
cld
les
arpl
mov
cs
notl
mov
mov
out
mov
pop
mov
mov
loope
lret
cmc
lock
push
ljmp
add
sbbl
mov
call
mov
xor
hlt
pop
mov
ds
scas
imul
imul
add
aam
xlat
cvtpi2ps
out
outsb
cmp
dec
imul
test
or
jmp
lock
cmc
dec
out
loopne
pop
or
shrl
push
out
push
dec
mov
adc
xor
lods
bound
adc
jle
push
ret
sbb
aam
shr
sbb
jne
rclb
loope
sbb
inc
int3
rolb
jb
push
mov
sub
loopne
push
sub
test
inc
ret
pop
jecxz
sahf
sub
test
add
adc
add
add
loop
loopne
or
push
inc
pop
mov
and
xchg
mov
xchg
lods
push
mov
pop
lcall
bound
in
push
dec
sbb
or
rorl
jo
ljmp
daa
cmp
lahf
in
sub
sub
out
push
out
popa
pop
mov
shrb
jnp
push
fsubrl
out
sbb
int3
or
test
add
or
push
push
movsb
inc
iret
jle
jl
pop
aas
push
xor
xor
push
jmp
mov
jecxz
mov
adc
popf
test
clc
dec
mov
in
repnz
inc
adc
mov
test
sbb
gs
or
push
je
jns
push
ret
js
stc
je
clc
std
dec
dec
mov
jno
rcrb
or
outsb
stos
daa
mov
sbb
inc
jbe
add
aad
insl
into
xor
test
shlb
push
sub
sub
jne
pop
shll
lock
pop
mov
out
rorl
je
pushf
lock
fcoms
mov
dec
mov
rcrb
ljmp
push
aam
mov
push
xacquire
cld
push
pop
xor
pop
and
add
dec
cmp
dec
and
div
jmp
call
clc
and
mov
jecxz
jmp
lock
and
jbe
add
or
pop
adc
popa
xchg
mov
cli
add
and
jbe
sbb
ficomps
pop
bound
add
and
cmc
je
faddp
inc
adc
pop
xchg
shrl
pop
rcll
stos
mov
mov
nop
scas
cmp
and
clc
pop
sbb
and
hlt
or
in
inc
outsb
jns
xchg
js
jbe
orb
inc
je
pop
stos
ss
pop
xchg
movsl
jno
int3
inc
cmp
and
mov
add
cmp
test
gs
cmp
push
cli
xchg
sub
pushf
sahf
mov
cli
loop
push
nop
or
or
pusha
ss
orb
stos
sub
sub
jecxz
mov
or
xchg
adc
xor
sbbl
clc
scas
test
loop
or
ret
mov
add
cmpl
push
adc
sbb
sub
arpl
pop
lods
andb
dec
dec
mov
jb
add
pop
mov
lcall
jl
mov
lret
jecxz
lret
add
insl
test
push
fistps
sub
mov
mov
jae
cli
xor
pop
ljmp
mov
add
pop
std
loop
sub
movsb
inc
inc
mov
sub
into
cmp
addb
lcall
das
arpl
pop
inc
aas
sbb
dec
jl
push
dec
dec
iret
sbb
xorl
xor
add
cli
in
fnstenv
clc
shll
icebp
movl
adc
jnp
xor
fdivrl
js
push
test
mov
mov
scas
jp
into
shlb
adc
cli
cmpsb
xor
les
mov
mov
sbb
repnz
and
stc
pusha
sbb
test
pop
mov
and
shrl
xchg
lcall
mov
cs
mov
inc
mov
insl
out
icebp
and
nop
and
shrl
aas
xchg
lds
nop
call
sar
cli
cltd
push
push
scas
cmp
incl
aam
movsl
xor
cmc
xor
add
add
pop
mov
out
add
in
test
inc
out
xchg
ljmp
mov
sub
mov
sbb
data16
scas
sub
sub
add
and
test
pop
hlt
mov
aam
mov
test
es
ds
pop
insb
ja
inc
xor
adc
mov
aad
out
mov
lock
lea
mov
jne
mov
mov
sbb
mov
xor
cmp
daa
sbb
in
les
pop
mov
jmp
loopne
xchg
icebp
repnz
out
dec
mov
inc
ja
xchg
and
sub
addr16
jmp
inc
lcall
andb
or
and
nop
adc
int3
lcall
loope
sub
dec
sti
mov
push
xchg
mov
add
mov
dec
lahf
adc
or
add
hlt
loopne
push
fimuls
and
lea
mov
sub
shlb
and
scas
pop
and
xchg
iret
cmpsb
das
adc
popf
stc
xchg
xchg
outsl
adc
into
dec
loopne
std
push
mov
adc
adc
out
rcll
push
stos
mov
push
mov
add
aas
xor
sbb
jge
jge
mov
lret
ret
sti
loopne
imul
dec
shl
pop
daa
das
jne
sbb
pop
clc
inc
add
inc
test
dec
add
inc
fstl
cmp
push
sbb
lcall
inc
ret
movsb
ss
andl
loopne
add
cltd
test
enter
push
pusha
add
jbe
shll
mov
xchg
pushf
adcb
fwait
add
push
std
dec
lock
xor
mov
hlt
push
pop
addr16
mov
int3
loopne
sar
pop
jb
repz
and
shrl
inc
cwtl
sub
sbb
pmaxsw
repz
cmp
xlat
mov
jo
lods
sub
or
pusha
sub
test
call
sub
xlat
inc
aaa
pop
dec
jmp
mov
pusha
xchg
push
pop
adc
push
insl
je
loope
and
jle
add
or
bswap
addr16
cltd
sub
dec
mov
cmp
add
jmp
jmp
dec
test
xor
or
pop
lock
jg
inc
insb
sbb
lea
nop
adc
cmp
in
leave
xor
dec
fnsave
jnp
inc
mov
push
aad
push
xor
cmpb
adc
adc
gs
loopne
mov
insl
into
rclw
les
or
enter
sub
inc
testb
out
std
add
orb
leave
je
sbb
in
call
mov
mov
push
iret
sahf
push
mov
sbb
je
mov
pop
push
push
movsb
call
sub
push
mov
outsb
popf
lret
xchg
mov
loop
out
inc
cmp
rol
in
jmp
test
mov
push
and
jp
subb
movsl
shl
mov
pop
inc
inc
cltd
std
cld
pushf
or
push
ret
inc
imul
jo
imul
xor
lcall
xor
or
das
movsb
loope
test
mov
mov
lcall
sbb
push
cmp
pop
jb
jge
leave
adc
pop
bound
pop
add
cli
jl
jle
or
jo
les
sub
xchg
pop
xor
jle
push
and
les
and
cmpb
aad
push
xor
rcrl
les
cmp
mov
scas
sbb
ss
aam
or
push
inc
mov
shll
cwtl
pop
outsb
and
pop
sbb
jno
mov
and
out
add
jmp
push
test
stos
jge
add
dec
and
xor
outsl
aam
inc
xor
ja
das
nop
mov
out
test
lds
inc
scas
dec
cmp
add
addr16
mov
rorl
rorb
outsb
xor
xor
xchg
or
xor
out
stos
mov
or
cmp
cmp
inc
cmpsl
f2xm1
data16
jne
mov
mov
jmp
bound
mov
dec
enter
call
test
incl
mov
adc
faddl
pop
test
mov
out
fldenv
in
fildll
push
pop
and
mulb
fmulp
sarb
vmovhpd
ds
shrb
sbbl
gs
lock
mov
cmp
pop
lock
fildll
test
int3
popa
jae
aas
pop
popf
mov
sbb
add
xchg
push
and
out
mov
xchg
push
and
pop
jle
mov
sbb
dec
clc
adc
jl
aas
pop
cmp
push
into
rorb
cmpsb
jecxz
sub
push
adcb
test
add
rolb
and
mov
mov
mov
jo
sbb
lds
pop
aam
xchg
xor
lods
insl
add
inc
sbb
and
out
lea
adcl
mov
loopne
pop
push
pop
xor
pop
mov
inc
jb
fsts
jo
jecxz
int3
and
cltd
sub
mov
cld
js
clc
out
out
xor
int3
ds
loop
ret
add
in
or
outsl
mov
add
sbb
sub
sbb
into
jl
and
pushf
ljmp
xchg
mov
scas
and
js
fsubrl
mov
addr16
push
xlat
push
call
mov
cld
sbb
push
push
ret
ret
shlb
cmpsb
es
jbe
addr16
add
inc
lock
sub
cld
dec
movsb
and
fbld
mov
mov
cli
push
pop
or
xchg
leave
hlt
jno
out
mov
jbe
loopne
adc
aas
mov
dec
dec
scas
jae
add
dec
lods
sub
xchg
lret
cmp
sub
jp
mov
shlb
aad
sub
cmpsl
add
hlt
imul
je
fwait
test
fwait
adc
aam
bound
rclb
int3
cmc
add
pop
aad
icebp
stos
cmp
pop
cs
cli
pop
shr
and
ret
add
push
fwait
ljmp
xor
push
and
fnstenv
pushf
dec
fdivrs
push
adcb
mov
pop
ljmp
cli
sahf
clc
and
rclb
mov
xor
insb
stos
push
test
scas
sub
fimuls
mov
jg
subl
dec
jbe
mov
ljmp
inc
push
push
jb
gs
les
jle
unpckhps
push
call
inc
jg
test
test
add
std
pop
sbb
push
push
adc
into
jnp
insl
mov
pusha
mov
sbb
push
push
in
repz
adc
or
loopne
jo
aaa
jp
adc
int
mov
outsb
xchg
add
outsl
mov
add
mov
mov
in
xchg
mov
xor
xchg
movsl
jno
scas
add
arpl
and
dec
and
pushf
xlat
sbb
push
decb
sahf
mov
mov
ds
test
add
add
xchg
xor
jb
es
sarb
xchg
push
add
or
mov
iret
pusha
pushf
insb
xchg
test
push
adc
rcr
mov
mov
or
insb
or
aam
test
rclb
loop
nop
and
mov
cld
addb
enter
js
or
and
loopne
movsb
adc
and
sbb
fstpl
insl
cmpl
push
pushf
dec
sbb
push
cmp
int
xchg
jnp
rcl
repz
orl
lret
aam
mov
mov
lods
mov
cmpsl
pop
data16
dec
or
ljmp
ds
jl
cmp
bound
out
leave
push
sbb
sbb
mov
or
mov
sbb
pop
in
sub
stos
jnp
inc
mov
out
jg
sbb
ret
shlb
mov
pop
jp
insb
mov
xor
fimuls
push
pop
rcrl
scas
add
nop
or
mov
lds
outsl
or
fsub
es
out
inc
adc
or
push
add
fimuls
adcl
push
add
pop
or
xor
jmp
pop
adc
nop
lahf
mov
test
push
jmp
add
sbb
mov
add
push
add
cmp
in
add
es
xor
pop
push
mov
icebp
je
js
mul
and
pop
test
jmp
mov
cmp
ds
jae
xchg
mov
mov
pop
lock
push
xlat
or
outsb
pop
push
loopne
cmp
in
jb
hlt
mov
and
movsl
adc
inc
push
mov
dec
adc
ret
scas
test
ret
sbb
les
ljmp
pop
cmpsl
jbe
andb
outsb
or
xor
fdivs
arpl
inc
add
adc
ret
mov
test
mov
frstor
ret
sbb
pop
jle
daa
lea
xor
adc
sbb
lret
mov
jg
out
mov
mov
mov
jge
test
das
cmpb
inc
mov
add
sub
das
jecxz
shll
call
andb
sarl
aaa
inc
aad
inc
or
cwtl
fadds
xchg
stos
js
sbb
sub
sti
mov
cld
jnp
cmp
mov
js
xor
xchg
mov
pop
outsl
mov
cli
pop
jo
pop
jle
mov
faddl
cltd
cmpb
or
mov
rcll
sub
mov
call
test
mov
inc
mov
sub
mul
jg
jle
icebp
xchg
pop
cmc
in
push
jb
int
imul
enter
scas
mov
mov
test
sub
sub
cmp
jo
sbb
clc
push
jbe
cmp
test
int
sbb
add
shl
add
jecxz
pop
mov
mov
stos
sbb
stc
in
add
loopne
push
jo
add
mov
lret
sbb
popa
mov
stc
pop
stos
add
arpl
shrl
fdivp
rorl
adc
into
lods
rclb
dec
mov
lahf
lret
shrl
adc
outsb
xor
scas
and
jl
pop
mov
adc
or
pop
dec
test
inc
push
clc
imul
or
push
lahf
push
lret
inc
test
mulb
in
jb
xor
out
xor
out
bound
ds
ljmp
rorl
cmc
sub
sbb
data16
cld
pop
pop
add
xor
inc
xchg
icebp
fsubrl
mov
add
sbb
retw
lds
cmp
fildll
incb
mov
mov
loope
mov
cmp
fimull
dec
jg
mov
sbb
mov
push
imul
dec
and
rcll
testb
repz
mov
push
pop
mov
sti
repnz
sbb
pop
sbb
mov
push
dec
mov
bound
push
pop
and
ret
mov
inc
call
jbe
insb
jl
testb
lret
dec
test
pop
in
mov
fucomip
iret
mov
push
gs
and
call
add
pop
add
jno
dec
mov
sub
sbb
in
add
outsl
addr16
popf
add
adc
push
push
and
sub
add
mov
insb
movsb
pop
lahf
or
jl
ret
jecxz
test
shr
lods
popf
aam
pop
cld
and
dec
inc
cmp
mov
loop
pusha
pop
call
pop
pop
es
and
add
mov
cli
mov
pop
inc
mov
push
ret
sahf
pop
mov
inc
cld
cmc
sbb
inc
cli
dec
fdivrs
push
loop
orb
bts
sub
sbb
jae
outsl
push
adc
jno
repnz
loopne
push
mov
dec
lds
lret
popf
xor
jae
sbb
inc
lock
movsl
inc
push
dec
sbb
xchg
orb
lds
adc
js
iret
adc
sbb
in
mov
push
into
or
pusha
xchg
and
dec
mov
sarl
mov
movsb
push
sub
adc
push
push
cwtl
scas
jecxz,pt
clc
wrmsr
pushf
insl
cmp
xchg
add
push
call
and
mov
jne
xlat
out
xor
clc
out
lock
fdivrp
add
push
jl
mov
orb
lea
mov
push
lods
mov
xchg
or
mov
in
inc
cmp
fists
and
dec
jge
pop
adc
push
mov
inc
les
pop
add
repnz
fsubl
sbb
and
mov
jns
sbb
lock
test
mov
mov
div
mov
jle
mov
test
sub
mov
cmpsb
xor
sub
jmp
getsec
dec
pop
test
mov
xchg
ds
xchg
pop
cli
xor
mov
add
test
mov
test
and
fld
mov
xchg
push
push
lock
mov
mov
xor
xor
in
or
ljmp
sub
xchg
adc
add
loopne
push
movb
push
inc
sub
jne
and
outsb
adc
push
sbbl
scas
int3
pop
cmp
adc
jp
mov
jo
mov
push
inc
xchg
jmp
add
ljmp
add
test
pop
test
xchg
xchg
in
scas
sub
out
and
xor
popa
hlt
aad
scas
icebp
or
and
mov
mov
jle
sbb
test
repz
fisubrl
mov
inc
imul
mov
sbb
les
mov
mulb
or
daa
jmp
outsl
cmp
es
clc
cmpsl
jo
orb
dec
xor
loopne
push
sti
xchg
sub
adc
mov
fwait
inc
ffreep
jnp
aaa
insb
mov
inc
sbb
dec
mov
shrb
push
adc
xor
pfrcpit1
jge
lret
mov
pop
insl
pop
repnz
mull
ret
pop
popa
sbb
adc
jno
sbb
jo
js
dec
cwtl
loopne
sti
cmpsb
mov
pop
sbb
sub
mov
imulb
sarl
lods
jnp
push
dec
aam
cltd
and
pop
ss
jb
jp
loop
or
and
cmp
les
test
adc
pop
aad
insb
add
test
add
neg
pop
and
jo
outsl
or
aaa
pop
cmc
jl
enter
fsubrl
add
out
adc
addr16
cs
mov
fisttps
fdivrp
imul
fdiv
lods
mov
mov
adc
jecxz
mov
sbb
incb
movsb
inc
and
outsl
repnz
clc
jmp
test
scas
inc
je
std
xchg
and
pusha
push
stos
and
pop
je
loope
xor
xchg
lcall
xchg
cmpsb
dec
adc
mov
push
and
fmul
gs
dec
inc
xor
jmp
rorl
outsb
pop
inc
pop
loopne
mov
dec
push
sbb
mov
aam
sbb
sarl
cmp
adc
jnp
mov
or
jns
sub
push
outsl
sub
jge
add
into
or
jo
push
jp
mov
jle
inc
mov
push
or
cmpsb
jbe
pop
or
push
xchg
fbstp
cmc
mov
outsl
sarb
xor
outsl
lock
stos
dec
das
nop
push
adc
jns
cmpps
stos
jno
inc
xchg
push
repz
fs
adc
mov
pop
push
test
cmp
inc
xchg
jb
cli
cmp
repz
movb
add
cli
mov
or
jl
outsb
xchg
outsl
mov
lods
add
repz
rorl
push
out
add
pop
and
xchg
push
xor
pushf
or
filds
daa
loope
mov
repnz
dec
cmovno
adc
cli
pop
mov
rclb
mov
mov
test
imul
int3
or
cwtl
je
cmpsl
and
fnstenv
out
data16
sarb
aaa
pop
xlat
push
push
mov
or
insl
cmp
das
push
ds
lock
dec
ret
es
push
les
clc
lret
cwtl
cmp
and
xchg
or
sub
shr
fwait
dec
into
cs
or
stos
out
sbb
popl
fisubs
sub
jle
rcll
fistps
adc
pop
dec
arpl
cld
sbb
stc
xor
cwtl
or
pop
cmpsl
inc
bound
subl
test
aad
adc
mov
stos
repnz
push
cwtl
add
int
sub
scas
cmpsb
jns
add
adc
xor
lds
pushf
lcall
out
aam
fwait
or
loope
movsb
push
jo
pop
pop
cltd
jmp
inc
pop
js
inc
mov
push
cmp
outsb
or
mov
pop
ljmp
outsb
push
sbb
insb
inc
shrl
dec
mov
lods
jle
daa
push
jl
pop
mov
fsub
mov
cmpsl
inc
dec
inc
xchg
mov
roll
inc
push
mov
jno
cwtl
and
insb
add
loope
and
ds
inc
faddl
rorl
xchg
mov
pop
sbb
pusha
test
sub
push
orb
ljmp
push
test
push
sbb
rclb
push
les
mov
adc
dec
lcall
sub
pop
xchg
call
dec
pop
loop
xor
lock
clc
ljmp
push
mov
push
ds
or
lods
xchg
push
js
cmpl
push
call
or
add
xor
out
add
jle
shll
jg
push
add
es
sub
sbb
jnp
inc
dec
int3
mov
out
mov
jmp
int
mov
ja
push
mov
dec
lods
enter
loopne
aad
out
push
adcl
pusha
movsb
inc
es
add
mov
xor
int3
xchg
adc
lods
jge
lods
mov
insb
push
sub
into
jne
pop
imul
push
js
inc
ds
sbb
and
xor
pop
sub
inc
push
xor
mov
aam
sub
incl
mov
dec
fsubrs
in
lock
sub
inc
lret
add
adc
aam
add
jge
sahf
cs
adc
lahf
lret
or
jae
jnp
cs
ret
add
scas
mov
fisttps
or
lds
data16
rcrb
push
dec
pushf
lcall
xlat
es
sub
enter
ljmp
xchg
insb
pop
stos
jl
xor
xchg
dec
lret
jae,pn
mov
rcrl
clc
repnz
adc
jle
xchg
ret
subb
sahf
iret
or
imul
jp
push
fidivl
mov
decb
cwtl
mov
pop
fbld
push
jo
andps
ds
iret
sbb
call
mov
jo
adc
and
inc
push
cmp
mov
xor
fstps
hlt
ja
push
fs
or
ror
add
and
mov
divb
dec
mov
gs
pop
cmp
push
fiadds
or
jl
inc
lock
std
adc
je
sub
rorb
add
ficomps
and
mov
test
aad
fimull
cmp
rclb
mov
stos
pop
and
dec
sahf
cmp
rcl
hlt
dec
pop
lods
idivl
dec
inc
dec
pop
cmc
outsl
jl
xlat
pop
inc
fnstenv
mov
or
mov
mov
pushf
or
lock
and
adc
push
adc
push
cmp
icebp
decl
push
sbb
pop
push
je
and
popa
mov
insl
xor
adc
adc
sbb
fidivl
in
xlat
push
mov
and
aam
cmp
insl
lock
mov
sbb
test
rcr
lret
jge
add
sbb
inc
ljmp
mov
ss
in
and
daa
enter
clc
add
mov
adc
push
fs
aad
fs
aas
movb
cmc
add
sbb
popf
xchg
in
dec
mov
xor
add
lcall
add
jl
ret
and
pop
inc
loop
mov
nop
fdivr
rol
fs
push
add
add
scas
pushf
movsb
addr16
jmp
sbb
ljmp
loop
add
dec
dec
int
xchg
adc
push
dec
pop
outsb
movsb
adc
shrb
aad
adc
enter
add
dec
add
sarb
mov
out
add
mov
jbe
jb
xor
std
dec
shl
or
dec
icebp
fcmovnbe
test
push
jno
xchg
or
aaa
call
inc
bnd
dec
sub
lret
cwtl
subb
repnz
xchg
adc
jecxz
out
pop
inc
mov
mov
stos
sub
shrl
push
jle
rorb
dec
and
push
loope
and
mov
fs
and
outsb
ficoml
sarb
or
mov
pop
push
sub
or
push
adc
or
aam
adcb
cmc
mov
ret
push
push
aam
xchg
jle
testb
es
mov
mov
ret
pop
xchg
pop
es
lock
aas
idivl
pop
mov
pop
mov
add
les
mov
shll
jnp
sarl
test
cmc
aam
lods
mov
and
fsub
inc
ret
pop
gs
lds
cmc
cli
pop
xor
pop
jo
jbe
add
pop
jb
push
mov
fidivrl
mov
clc
mov
mov
mov
fdivrp
shll
mul
cmp
stos
push
lcall
or
jp
lock
cpuid
push
inc
cmp
adc
mov
push
cmc
push
ljmp
ss
lret
popf
icebp
out
mov
xor
adc
pusha
mov
lahf
add
pop
mov
lods
or
jne
xlat
jne
frstor
xchg
cli
adc
sarb
leave
add
or
test
cld
or
xchg
mov
test
daa
sbb
xor
ds
stos
loopne
push
leave
into
insb
cmc
lahf
sub
mov
sbb
jno
xor
pop
adcl
hlt
inc
pop
mov
dec
mov
mov
lret
mov
or
add
dec
int3
insb
lahf
add
je
adc
cmpl
lret
data16
push
sbb
test
fcomps
mov
stc
mov
push
xchg
test
inc
inc
xchg
ss
push
ret
push
mov
mov
mov
loop
dec
mov
jmp
mov
inc
cld
bound
fsubrp
adc
or
inc
adc
adc
and
ds
sub
dec
jl
lahf
pusha
fldt
cmp
rcll
clc
ljmp
or
lock
sbb
dec
xchg
push
call
insb
xor
mov
mov
sub
std
adc
mulb
sub
push
cmp
test
mov
in
mov
mov
jae
scas
adc
jb
jp
and
test
movsl
mov
adc
fnstenv
mov
mov
test
or
fistl
inc
pop
ficompl
outsl
imul
cwtl
loopne
dec
add
cmc
loope
mov
cmp
pop
adc
or
cmp
add
lods
push
pop
or
les
add
xchg
loopne
stos
test
out
pop
test
daa
movsb
inc
pop
dec
dec
test
xchg
add
pushf
mov
push
sbb
shrb
dec
jmp
movsl
fistpll
xor
cmpsb
pop
cli
add
jo
pop
mov
and
int3
sbb
sub
loopne
sub
pop
js
scas
clc
inc
andl
and
das
mov
jp
mov
mov
das
repnz
lcall
arpl
out
and
je
xor
inc
add
test
pop
jno
scas
and
dec
shll
cli
jo
notl
dec
loope
xchg
jbe
pavgw
add
push
lods
hlt
movsw
test
xor
sub
dec
pop
mov
adc
cmp
push
inc
clc
add
dec
mov
push
mov
and
lods
cmp
lret
push
adc
push
or
jo
inc
lea
in
adc
jb
inc
les
mov
sbb
add
add
pop
pop
arpl
jmp
int
fs
pushf
add
lret
add
sar
sub
shrb
sbb
xchg
mov
mov
add
fwait
adc
out
shrb
je
or
add
cmp
or
pop
add
test
mov
adc
icebp
pop
or
sub
sub
add
mov
andb
pop
je
mov
rsm
push
inc
fabs
xor
jb
test
mov
in
in
into
test
sbb
pusha
inc
lcall
mov
lds
dec
jecxz
repnz
or
or
xchg
push
cltd
add
bound
js
xor
mov
call
leave
jbe
jge
push
mov
pop
xchg
xchg
and
add
aaa
jns
sti
xor
pop
ud1
pop
imul
nop
mov
inc
xchg
sbb
rcl
inc
mov
js
es
fdiv
xchg
adc
aam
xchg
jl
lcall
pop
data16
fdivs
add
xor
xchg
adc
fidivrl
jmp
icebp
fldl
pop
es
push
jp
roll
mov
clc
push
movsl
mov
lock
repz
mov
xchg
mov
inc
movsb
ret
pop
test
outsb
mov
sub
cmp
fdivrl
mov
dec
gs
into
movsb
and
or
pop
or
push
test
and
adc
push
adc
test
push
nop
sub
lcall
lods
js
cs
and
sub
add
lods
ja
stos
inc
add
mov
rorl
mov
pop
in
mov
jno
inc
test
jbe
mov
js
mov
lock
ficompl
rcrb
sub
mov
xor
push
addb
sbbb
rclb
scas
outsb
lcall
and
pusha
push
mov
sbb
mov
sub
ja
mov
xor
and
pop
hlt
add
in
out
inc
mov
sbb
jno
mov
test
jle
fwait
push
test
dec
pop
inc
sub
movsb
mov
sub
je
cmpsl
lock
outsb
jns
add
shll
xor
sub
adc
xor
cwtl
lods
js
mov
roll
sub
rolb
lahf
push
and
les
out
ljmp
push
mov
lcall
cld
mov
inc
test
pop
mov
fnstsw
inc
shl
mov
pop
scas
and
adc
mov
ret
jp
push
shll
dec
fisubs
mov
std
pop
loopne
sbb
int
scas
xorl
aad
ret
xorb
cwtl
dec
push
push
cmc
stos
call
std
addr16
cmpsl
and
adc
and
les
mov
cs
test
aaa
out
jbe
pop
pop
pop
loopne
je
insl
mov
pop
push
mov
pop
mov
adc
sar
jb
sti
pop
pop
ja
mov
adcb
ja
ljmp
dec
addr16
lret
dec
dec
mov
test
dec
adc
dec
sarb
fdivs
mov
ss
pop
jl
rdtsc
and
in
aaa
arpl
gs
mov
push
sbb
cmp
push
js
push
loopne
mov
mov
xorb
mov
cmp
imul
jno
jne
cmp
fwait
lods
jb
shr
or
test
and
mov
push
mov
add
adc
std
or
out
dec
int
mov
push
cmpsb
sti
xchg
mov
lcall
sbb
gs
cli
movb
shrl
movsl
pop
les
hlt
call
test
shll
xchg
inc
notl
add
mov
push
dec
pusha
sbb
pushf
adc
insb
push
imul
aam
adc
in
outsb
ljmp
loopne
clc
pop
add
insl
test
inc
add
aam
imul
sub
faddl
ret
mov
xor
xchg
and
fsubrl
out
fwait
dec
je
inc
xchg
mov
mov
jns
loop
mov
in
fistl
adc
add
sar
pop
cmp
inc
dec
sub
pop
andb
xor
outsb
dec
adc
shlb
jge
sbb
js
sub
stos
out
testl
pop
push
xchg
test
or
ds
dec
pop
add
nop
test
in
or
xchg
mov
adc
add
int3
sbb
push
out
scas
in
fimull
loopne
push
shll
pop
dec
lret
lcall
pop
enter
add
out
mov
pusha
js
push
sbb
les
nop
cmp
iret
jecxz
sub
lea
or
mov
out
xor
xorl
sbb
mov
shrb
mov
jle
or
jo
push
jbe
stos
repz
inc
sbb
stc
inc
test
or
cmp
mov
dec
sbb
lcall
ds
push
test
inc
shll
push
jp
sub
push
jle
test
inc
push
adc
mov
xchg
pop
push
cmp
jmp
jno
push
pop
test
test
sbb
fsubrl
jmp
xor
pop
xor
ljmp
je
dec
mov
lea
dec
xor
push
cmpsb
ret
push
fnstcw
sbb
pop
bound
mov
popa
aad
mov
jne
push
cmp
ljmp
popa
andb
ret
fldt
aaa
bound
xor
pop
xor
pop
shlb
cs
fisubl
cmp
cld
clc
jo
dec
mov
push
and
push
pop
dec
cld
clc
inc
mov
mov
push
cmp
out
out
add
push
sbb
cmc
lea
push
push
pop
dec
bound
movsb
cmpl
pushf
stc
subb
push
out
test
or
cmp
cltd
xchg
pop
push
inc
adc
inc
test
scas
movsb
push
and
mov
pop
lock
jb
push
push
cwtl
ret
imul
js
test
ret
negb
dec
xchg
adc
stos
mov
loopne
clc
test
mov
ds
sbb
mov
imul
test
sbb
dec
push
clts
cltd
cmp
mov
adcb
push
xchg
mov
push
loop
dec
sbb
dec
sahf
sahf
rcl
ljmp
pop
pop
adc
mov
dec
sub
rclb
jbe
icebp
jnp
xor
sbbb
andl
or
and
ds
insl
outsl
mov
cmp
nop
lds
dec
cmpsl
into
mov
sbb
push
inc
xor
lods
pushf
orb
xchg
sbb
rol
lahf
add
pop
adc
inc
dec
nop
add
xchg
sub
sbb
fdiv
fistps
ficoml
dec
js
fs
pop
ret
xor
loopne
imul
mov
cmpl
mov
lea
lods
int3
mov
popf
pop
div
popa
fmulp
sub
adc
into
dec
push
sbb
xlat
mov
push
insb
insb
push
pushl
in
dec
pop
clc
in
sbb
sbb
lds
cld
pop
and
in
in
sbb
inc
jno
adc
mov
mov
xchg
lods
mov
data16
xor
mov
aam
sub
pop
js
fsubr
push
cmp
addr16
inc
pop
fcomps
jge
negb
repnz
xor
jne
std
imulb
adc
es
into
push
sub
shlb
out
daa
cmp
ja
insl
jl
adc
mov
decl
sbb
bound
mov
inc
mov
push
rolb
xchg
ss
adc
pushf
mov
rclb
test
aaa
sbb
cmp
sbb
mov
jnp,pn
insb
movsl
adc
dec
repz
mov
pushf
dec
and
neg
aam
mov
or
jb
sbb
fbld
insb
sub
loop
mov
sbb
adc
lock
pusha
sbb
push
mov
lret
cmp
cld
or
jp
jle
mov
dec
cmp
push
incl
stos
ja
jl
add
pop
js
cmp
adc
bound
jns
cmp
cmp
cmp
mov
cmpsb
sar
shlb
fs
sti
test
cmpsl
dec
ret
in
jl
roll
inc
in
into
pop
push
push
repnz
adc
inc
test
jmp
dec
loope
xor
js
push
int
mov
cmp
xchg
or
or
pop
inc
outsl
orb
cmc
xchg
ret
testb
push
jecxz
subl
clc
popf
push
cwtl
fprem
scas
imul
pop
dec
cs
popf
mov
addr16
cltd
xchg
inc
clc
fidivrl
ficomps
xor
adc
jge
test
mov
jl
dec
aam
out
sarb
lret
aad
xchg
sbb
jno
daa
out
pop
shlb
addb
ljmp
fs
push
enter
sub
xchg
cmpsb
cmp
sbb
jne
outsl
xchg
mov
negl
mov
mov
pop
add
pop
hlt
push
ficomps
xchg
inc
mov
sub
mov
daa
and
mov
mov
in
add
lcall
and
cmp
out
add
adc
add
mov
adc
bound
ja
mov
lret
fdivs
push
rolb
mov
push
lds
pushf
adc
inc
or
jno
sbb
repnz
test
sahf
ror
xchg
fists
pop
xchg
es
xchg
out
or
in
add
flds
call
dec
outsb
mov
fdiv
clc
mov
pop
std
dec
push
arpl
xor
or
idiv
icebp
sub
push
ds
test
mov
mov
push
mov
sbb
shlb
clc
pop
outsb
mov
out
or
mov
inc
push
add
cli
or
subb
test
or
adc
mov
imul
jge
sub
push
stos
add
xorb
jb
loope
pop
mov
lock
mov
nop
arpl
and
mov
stos
ret
out
aas
xchg
or
clc
mov
mov
scas
shrb
cmc
add
inc
dec
mov
mov
dec
pusha
popa
and
lea
pop
adc
push
pop
popa
xlat
pop
cli
stc
das
dec
mov
jne
adc
test
popa
nop
cmpsl
loopne
aaa
jmp
mov
and
push
scas
mov
cmp
xor
clc
stc
pusha
test
scas
test
test
jp
jbe
mov
stos
jg
ficoms
pop
jg
aaa
push
shll
sbb
stos
jbe
jmp
jns
xor
add
div
subb
mov
iret
rcrb
sbb
sub
mov
les
cld
fs
dec
xchg
or
cld
divl
pop
push
lret
push
lcall
loopne
mov
leave
inc
test
jg
or
push
rcrb
adc
and
pop
loopne
push
inc
clc
test
jecxz
sbb
out
xor
xor
mov
adc
loop
or
popf
mov
aas
add
cli
loop
addr16
mov
dec
ret
pop
add
xchg
or
mov
mov
clc
mov
enter
mov
mov
push
enter
loopne
adc
sub
lods
jp
add
std
mov
mov
and
fcom
sti
jns
or
inc
xchg
cmc
aas
shrb
xor
mov
and
xchg
xor
sub
xchg
jmp
scas
xchg
ret
shl
test
pop
mov
mov
loopne
add
cmp
sub
or
dec
push
xchg
subb
icebp
push
push
adc
dec
fistpll
hlt
out
push
js
ret
mov
sub
cmp
mov
push
in
xorb
pop
adc
inc
ds
enter
dec
out
adc
sub
or
mov
mov
call
pop
lods
push
adc
fimuls
jle
fisttps
or
mov
stos
and
lock
mov
sbb
ss
cld
push
adc
fnstcw
and
jecxz
sbb
std
mov
sbb
loopne
movsb
out
imul
movsb
sbb
push
fisubs
rcr
or
mov
ss
jecxz
mov
ss
sub
xor
dec
scas
pusha
jl
es
sbb
add
cmc
int3
jecxz
jl
push
and
inc
test
js
movsw
xor
mov
mov
fwait
and
push
cmpsl
xor
gs
dec
xor
test
cmpsb
mov
insl
sbb
xchg
repz
loope
incb
stc
pop
imul
xor
inc
rcr
or
jmp
inc
fbld
icebp
pop
jmp
addr16
loop
sub
lret
int3
inc
jno
mov
cs
int3
das
dec
inc
pop
push
enter
add
mov
insl
repnz
movsl
push
sbb
sbb
add
mov
aad
or
cmp
add
sbb
int3
cwtl
lods
js
jp
pop
test
or
sbb
adc
mov
call
sbb
jp
mov
sub
mov
sub
mov
pop
out
xor
or
in
incl
mov
sbb
xor
pop
adc
mov
cld
pop
add
mov
and
xchg
add
shl
cmp
out
inc
in
push
mov
jg
or
das
inc
and
lock
hlt
adc
fwait
add
mov
mov
iret
dec
pop
pop
jg
rcl
xchg
dec
testb
cli
inc
jb
pusha
loop
loope
loopne
cmp
je
mov
mov
loope
push
loopne
icebp
or
adc
mov
jecxz
mov
push
mov
pop
cmp
stos
jge
lcall
or
leave
pop
subl
adc
aas
js
lahf
sbb
xchg
cmp
dec
mov
mov
std
inc
and
inc
dec
or
or
jge
or
shlb
clc
xchg
stos
movsb
xchg
pop
jl
xor
sbb
ljmp
mov
xor
pop
mov
mov
xchg
lahf
mov
cmp
loop
and
xchg
cld
mov
lock
jne
mov
mov
pop
cli
js
and
out
sub
popa
mov
or
sub
outsl
xor
cmp
inc
int3
ret
jmp
jb
test
loopne
dec
fimull
clc
cs
loope
and
add
es
lret
rcrb
sbb
fisubl
jmp
dec
adc
pushf
xchg
dec
les
pop
dec
add
dec
jo
sub
jne
fdivr
mov
pushl
mov
stc
ret
push
fdiv
jg
ror
mov
mov
cmc
mov
mov
push
dec
add
jp
xchg
sbb
xchg
inc
pop
mov
not
add
filds
rol
fidivl
adc
fstpt
and
scas
push
rcl
cmp
xor
repz
loope
lock
rcrl
push
mov
add
inc
adc
pop
sub
mov
adc
sbb
test
and
cli
pop
aam
fidivl
mov
cmpsl
and
fs
mov
rcr
loopne
clc
and
add
sub
push
stos
mov
jne
push
inc
test
dec
je
cmp
gs
xchg
jnp
aas
rorl
loopne
mov
hlt
pop
jle
dec
add
adc
cmpsb
in
xor
jo
xchg
int3
test
out
and
mov
or
mov
add
push
ret
out
fadd
shlb
test
enter
ficomps
inc
rcr
ret
mov
int
mov
jbe
mov
sub
sbb
xchg
addl
cmc
add
jge
or
mov
push
jge
in
inc
mov
xor
mov
ret
push
fs
rorb
mov
push
popf
lret
inc
pop
in
in
jecxz
xlat
and
or
sbb
mov
pusha
rorl
inc
cmc
test
test
cli
add
test
nop
mov
add
and
sub
rolb
jle
sbb
adc
data16
add
sbb
aad
mov
test
xchg
push
ds
xor
insb
jge
push
pusha
fstpt
sbb
aaa
xor
cltd
in
xor
mov
test
pop
or
out
sub
jbe
jbe
mov
leave
xlat
loopne
dec
orb
pop
clc
mov
loop
popf
xchg
aaa
js
adc
pop
clc
sub
ret
mov
push
push
cmp
loopne
mov
pop
int3
adc
aad
cmc
lcall
jmp
lods
cs
filds
xchg
xchg
aad
imul
lods
sbb
outsb
pusha
icebp
test
jecxz
or
mov
mov
insb
es
in
sbb
sub
pop
insb
aaa
jecxz
add
pop
sbb
xchg
cmc
push
jmp
or
lcall
add
dec
clc
and
push
jecxz
ja
ret
xchg
loop
js
jle
cmp
jecxz
dec
pop
sbb
sbb
jecxz
arpl
cs
add
pop
cmp
inc
lahf
lock
mov
inc
test
inc
clc
dec
pop
lcall
and
stos
roll
inc
pop
clc
sbb
mov
mov
sarl
test
and
loopne
inc
sub
mov
test
addb
cld
shlb
add
push
mov
mov
mov
dec
push
aam
mov
dec
repnz
mov
inc
dec
push
or
loopne
in
vcvtdq2pd
add
mov
js
es
add
xor
enter
and
fldenv
sbb
bound
inc
je
jp
adc
test
dec
add
pop
sbb
mov
fidivrs
push
pop
icebp
push
xchg
xchg
and
lcall
testl
and
mov
test
and
lods
add
pop
dec
loopne
sub
js
inc
stc
es
mov
dec
sbb
xchg
mov
aam
mull
imul
push
bound
xor
ljmp
mov
cld
lcall
mov
xchg
cwtl
push
pop
sahf
lea
sar
sbbl
jbe
lret
ja
stos
sub
testb
jle
shlb
scas
xor
daa
out
aam
sbb
fcompp
mov
movsl
rcll
call
insb
imul
and
dec
xlat
pop
push
stos
scas
movsl
and
rcl
mov
ljmp
in
daa
adc
lahf
pusha
sti
dec
pop
ljmp
sub
or
jp
nop
sub
mull
cmp
xchg
and
xchg
adc
cmpsl
clc
pop
cwtl
push
pop
add
inc
lds
cmp
cmp
rorb
sarl
stos
loope
mov
push
xlat
fldcw
clc
mov
jae
icebp
push
inc
test
call
cwtl
scas
push
je
pop
cmpsl
rolb
pop
cld
jno
adc
or
leave
inc
cmc
sti
sbb
fbstp
pop
xor
outsb
adc
pop
repz
mov
aam
or
shrb
aas
add
mov
lods
movsb
movsl
mov
pushf
repnz
pop
divb
sub
inc
mov
push
loope
out
sub
sub
push
xchg
xchg
jne
dec
ss
data16
ljmp
test
and
data16
add
jbe
fwait
cmc
loop,pn
dec
shl
mov
inc
cmp
mov
push
dec
push
js
dec
add
push
add
inc
xor
roll
push
jl
loop
inc
adc
push
enter
popl
sub
cmp
mov
adcl
mov
jo
test
cmp
neg
push
xor
cmpsb
sbb
jno
or
nop
shlb
inc
popa
dec
push
sar
and
jbe
mov
shlb
outsl
sarb
cmpsl
mov
dec
ret
fisttps
pop
or
inc
andb
cltd
aaa
rcll
cmpsb
lock
js
pop
adc
or
lock
ret
test
aam
pop
in
inc
mov
stos
jne
lds
push
mov
data16
lret
call
test
sub
add
mov
sub
aad
or
adc
jne
cld
mov
in
cmc
addr16
mov
inc
dec
lea
clc
add
nop
jg
ret
and
jle
cwtl
cs
hlt
push
repnz
mov
in
orl
nop
lods
jnp
or
add
subb
pop
je
in
add
push
or
cmp
test
inc
rolb
push
sar
adc
pop
in
int3
xor
sub
out
jg
stos
jns
test
mov
movb
cmpsb
cmpsb
hlt
xchg
push
or
call
out
cmp
dec
scas
aas
or
inc
xchg
dec
xchg
clc
or
cmpsl
push
push
xchg
clc
shll
xchg
inc
imul
mov
mov
xor
mov
xchg
mov
ds
rcl
fwait
pop
ficoms
or
hlt
cmp
cmp
inc
cmp
pop
movsb
jo
inc
cld
jg
push
push
dec
push
sbb
imul
xchg
sub
mov
push
das
or
aad
lock
les
addr16
andb
jo
decl
mov
mov
or
sbb
jp
xlat
clc
or
or
ret
add
xchg
push
dec
pop
xchg
fdivs
in
loope
inc
push
and
test
mov
mov
sbb
lea
dec
cmp
popa
mov
jo
pop
sbb
sub
pushl
shrl
movsb
adc
add
mov
sub
jl
ds
iret
inc
imul
packssdw
mov
lock
iret
stos
dec
inc
xor
adc
sbb
shl
std
sbb
sub
int3
insb
mov
jno
or
cmpsb
sbb
xchg
ret
je
pop
decb
and
xchg
xchg
fiadds
inc
sub
inc
out
aam
cwtl
fidivrs
dec
inc
paddq
insb
sub
mov
mov
faddl
in
addr16
mov
and
mov
rcl
push
inc
mov
movups
and
int3
pop
push
jnp
outsl
xchg
add
seta
popa
xor
cwtl
sub
jg
out
xchg
push
icebp
loop
and
push
std
add
mov
cmpsb
add
xlat
stc
add
icebp
ret
sbb
pop
mov
add
fdivl
shll
pop
cmc
and
mov
ret
pop
push
inc
push
loopne
std
jp
je
inc
adc
rolb
mov
jecxz
add
push
and
add
lret
addr16
cmp
push
pushf
sbb
mov
xlat
fs
inc
push
fwait
pop
cld
stos
loop
lcall
repz
scas
js
mov
adc
mov
push
outsl
xchg
sbb
ss
sub
mov
fistpll
inc
push
faddl
xchg
movsb
jbe
inc
in
mov
pop
ss
ret
jl
jmp
adc
leave
enter
xor
cld
sub
mov
cld
std
iret
orb
mov
push
loop
shl
sub
mov
add
arpl
xchg
jecxz
xor
dec
push
aaa
lods
add
loop
pop
sbb
outsb
inc
movsl
movsb
imul
ljmp
and
jl
incb
push
ja
repnz
jo
inc
aam
push
jp
adc
adc
jae
addb
out
out
pop
ret
or
aas
or
dec
lods
mov
push
jg
test
inc
shlb
orb
loopne
xchg
push
or
sub
rcl
dec
cmp
and
lcall
and
jns
xor
push
inc
das
or
cmp
mov
rcr
xor
push
in
cwtl
sub
mov
pop
call
xchg
and
lock
fnstcw
and
or
sbb
adc
jl
mov
add
rcl
cwtl
stos
push
sbb
mov
imul
push
lds
inc
sub
gs
out
jl
jp
add
or
ds
stos
xor
aaa
cli
sub
pop
mov
dec
mov
sub
sbb
add
mov
add
loopne
addr16
sub
lcall
mov
and
pop
iret
insl
and
loope
cld
fnsave
or
adcl
lret
nop
notl
sahf
or
pop
lock
clc
out
lret
loope
dec
ss
ret
mov
and
push
in
cmovs
adc
dec
lahf
icebp
push
sub
or
push
loop
or
mov
movl
lock
mov
mov
sub
fiadds
imul
adc
psrld
or
mov
xor
push
lock
sbb
or
adc
stos
push
lcall
cmc
inc
test
jg
out
xorl
and
loop
pop
or
mov
mov
mov
mov
lahf
xchg
jle
movsl
mov
pop
sbb
loope
pop
dec
wbinvd
aaa
or
push
ss
push
mov
rcl
lock
test
or
mov
jo
sbb
add
pop
lock
mov
jp
mov
mov
mov
jp
pop
loop
sub
mov
sub
test
xchg
dec
inc
jge
daa
testb
pop
jno
mov
sub
mov
or
in
cmc
outsl
push
cltd
mov
xor
sub
push
das
fwait
sub
mov
ret
mov
je
je
fistpll
xor
jl
lods
or
ja
pusha
ds
hlt
adc
push
or
adc
mov
adc
mov
insl
test
jg
rep
pop
lcall
sahf
imul
inc
adc
cmp
cmpl
mov
sub
mov
add
or
shll
fwait
js
mov
daa
pop
mov
fdivl
jb
ljmp
aad
test
out
inc
loop
cmc
jp
fbld
fisttpll
imul
add
lods
jmp
cwtl
xor
xchg
sbb
jp
cmp
jl
mov
dec
mov
imul
call
inc
or
xchg
inc
sub
fldenv
inc
inc
es
push
bound
adc
add
cmpsl
fadd
pop
push
mov
lcall
das
mov
fs
and
xlat
les
push
and
aas
mov
add
in
mov
and
inc
out
jg
testb
mov
xchg
adc
dec
xlat
jnp
push
lods
jle
and
ret
aas
outsb
adc
xadd
es
fcom
je
jne
xlat
stos
lcall
icebp
bound
rcrl
jecxz
fucom
lock
daa
dec
push
adc
out
adc
rolb
jge
mov
and
push
mov
jle
das
or
push
jb
dec
pop
fwait
mov
lods
sar
gs
sub
fwait
pop
jecxz
ss
push
inc
aad
jne
push
jge
adcb
add
icebp
sub
lcall
and
mov
hlt
mov
jb
fsubs
shlb
xchg
fcompl
iret
jbe
push
fimuls
add
sub
mov
push
xor
decb
add
test
test
scas
push
or
es
xchg
pop
and
nop
jecxz
shr
shl
inc
inc
sbb
fnstenv
out
add
or
arpl
insl
sbb
xor
push
bound
fwait
cmp
push
lock
ja
mov
inc
aam
inc
fimuls
jl
loop
dec
xor
mov
xchg
aam
pop
mov
mov
push
and
sbb
ret
sub
stos
mov
shll
and
cmp
mov
filds
pop
in
add
push
mov
xchg
mov
cmp
adc
adc
xor
outsb
add
xor
arpl
and
pop
mov
cwtl
je
mov
push
nop
jbe
dec
rolb
scas
sbbb
outsl
pop
pushf
sbbb
in
mov
fisubl
pop
test
ret
sbb
shlb
xor
insb
cmp
pop
sahf
xor
shrb
or
add
xchg
push
or
push
adc
mov
out
pop
dec
cmpsl
fdivs
or
scas
push
cmp
aaa
sti
jbe
mov
mov
jg
xor
and
xchg
int3
iret
leave
fdiv
scas
dec
aaa
orl
jg
xchg
mov
sub
in
add
ret
xchg
dec
push
dec
jne
dec
mov
rclb
push
dec
bound
adc
add
pop
out
pop
or
push
push
rclb
test
ss
sub
or
mov
sbb
xlat
mov
mov
sbb
inc
sub
fsubrs
call
test
jp
inc
cmp
ss
pop
ds
jmp
std
into
mov
jp
dec
mov
popf
or
or
outsb
test
dec
or
les
add
faddp
std
or
sbb
jmp
rolb
push
or
iret
ss
mov
aas
push
adc
jg
or
or
mov
sti
orb
inc
sahf
push
mov
loopne
xrelease
mov
mov
and
je
test
lret
movsb
imul
cmp
or
test
cmp
and
fcomip
icebp
in
add
jae
mov
jne
jg
mov
inc
mov
fmuls
insl
and
ret
lock
push
shrl
mov
or
xchg
mov
add
aaa
into
xchg
subl
jo
fnstenv
jl
fstpt
xchg
js
add
dec
ret
push
jno
bound
dec
popf
xchg
jp
out
xchg
add
jle
pop
or
clc
cmpsb
icebp
addb
jae
inc
testl
add
add
pop
and
mov
sub
pop
data16
lock
push
aas
xor
mov
nop
xor
es
lods
test
scas
mov
fmuls
jo
cwtl
dec
push
fiaddl
outsb
sbb
and
sbb
je
push
and
xchg
insb
stc
ljmp
push
inc
mov
cmp
mov
add
inc
test
mov
ds
sbb
push
ss
pop
pop
push
ror
or
pop
stos
pop
enter
into
dec
mov
cwtl
adc
bound
jl
aas
mov
rolb
das
ss
cmpl
adc
loope
cmp
ret
inc
ret
or
adcl
mov
jne
out
add
in
pusha
int
rorb
push
cli
dec
pop
lock
xchg
out
movsl
push
mov
lock
pusha
aam
push
xchg
mov
enter
call
sbb
lret
outsl
push
cmc
pushl
mov
inc
lds
sbb
cmp
hlt
mov
fwait
xchg
loope
adc
addr16
push
filds
add
add
xchg
popa
mov
test
int
cmpsb
push
jl
stc
push
dec
and
jmp
into
xor
push
iret
xor
dec
ror
sub
ja
inc
mov
mov
fiaddl
lods
mov
imul
inc
repnz
lret
fadd
cmp
mov
add
add
fwait
les
movsb
inc
out
sti
dec
mov
shll
add
addl
pop
mov
testl
out
sbb
mov
pop
add
cmp
ret
mov
daa
loope
nop
mov
mov
pop
and
imul
stc
out
ljmp
sub
dec
movsb
es
rolb
das
and
sub
mov
hlt
mov
mov
push
stos
adc
loop
push
xor
jge
dec
jne
mov
push
add
pop
sub
and
cmpl
xor
incb
mov
aas
xlat
int
push
add
dec
dec
stos
das
into
cmp
inc
shlb
inc
rorb
inc
out
inc
sbb
adc
xor
mov
mov
mov
cmpsl
negb
mov
inc
inc
call
inc
add
out
fidivs
xchg
test
mov
cld
gs
push
subl
pusha
add
ret
mov
jl
cli
js
jmp
cld
pushf
push
and
and
lock
dec
ljmp
icebp
test
bound
mov
stos
ljmp
test
in
out
mov
aas
adc
in
dec
loope
enter
push
mov
or
nop
adc
jecxz
ss
out
lock
jmp
outsb
or
sub
jbe
es
stos
and
xchg
mov
cld
sub
bound
or
jle
push
clc
pusha
sub
adc
test
fs
pop
and
ljmpw
cmp
int
mov
cmp
cmp
aas
scas
jb
repnz
nop
iret
and
roll
imul
daa
xchg
inc
adc
jl
ficompl
cmp
shll
sub
cmp
adc
or
pop
xchg
jae
add
test
add
mov
lock
and
call
pop
sub
sub
pusha
push
or
out
imul
gs
pop
xchg
inc
cmc
ja
xchg
cs
hlt
add
or
movsl
mov
icebp
mov
lahf
lds
dec
in
dec
push
lods
shlb
adc
cmc
mov
mov
scas
xchg
testb
clc
ror
jp
dec
sarl
mov
push
call
mov
mov
dec
shrb
outsb
sbb
add
dec
push
js
mov
or
stos
jbe
inc
lods
cmp
insl
cmp
push
push
xor
outsl
loop
fildl
loop
xor
mov
pusha
outsb
js
mov
jle
push
adc
call
adc
jns
pop
js
xchg
je
dec
fcoms
dec
clc
enter
shll
lods
cmp
sbb
or
push
fisttpl
cmp
pop
icebp
stos
push
jae
int3
sbb
outsb
sub
xor
jle
xchg
insl
mov
loop
fildl
loopne
push
mov
jno
scas
lcall
dec
or
test
fimuls
lods
fwait
sub
inc
and
push
decb
or
bound
jg
xor
stos
movsl
cmpsb
push
dec
jecxz
push
jnp
std
lods
popa
xor
popa
mov
push
ret
test
rorl
inc
jo
push
fdivr
dec
jg
push
popf
xchg
dec
sub
cmp
mov
mov
addr16
add
cmp
cli
call
mov
mov
scas
cmp
inc
jno
insl
jb
xchg
mov
enter
mov
shlb
pop
sbb
test
in
out
ds
fadds
int3
or
incl
cmp
jl
addl
test
nop
cmpsb
lock
xchg
dec
dec
ret
pop
daa
push
jae
or
or
int3
pop
sub
push
lcall
or
mov
xor
adc
sbb
movsb
dec
les
xchg
adc
rol
mov
add
ret
les
push
add
mov
jg
mov
fidivl
sub
incb
pop
dec
scas
add
pop
clc
adc
xchg
std
leave
inc
mov
ljmp
add
mov
mov
cmc
aaa
mov
outsb
push
js
sarl
xchg
js
lods
xor
xor
rcrl
xchg
in
decl
mov
cld
xchg
pop
insb
bound
add
cmp
dec
jmp
mov
ret
test
cmp
jg
stos
and
clc
jns
aad
icebp
cli
jp
mov
xchg
test
jge
mov
jle
sbb
les
xor
lods
clc
dec
xor
ret
jmp
out
pop
fsub
sbb
add
enter
test
add
push
inc
nop
into
xchg
test
jb
mov
cmp
sbb
popf
cmp
mov
imul
jae
cmp
mov
testl
jle
icebp
xchg
jo
adc
add
stos
ljmp
push
lock
mov
and
ret
push
ret
mov
mov
cmp
imul
movsl
mov
mov
inc
adc
mov
xchg
pop
mov
gs
and
arpl
sub
loopne
sub
inc
mov
dec
pop
xor
cli
push
jne
je
dec
and
test
pop
sbb
dec
cmc
and
xor
pop
testl
and
popf
and
xchg
mov
pop
inc
push
or
push
cmp
and
cmp
dec
lea
fwait
aaa
inc
push
mov
or
js
addl
lret
xor
jne
mov
pop
inc
sti
dec
shl
ret
fldl
scas
fdivr
or
pusha
sub
mov
roll
decl
jb
pop
ds
xor
clc
cs
cld
test
push
add
hlt
mov
adc
mov
and
add
pushf
mov
sbb
inc
arpl
in
sbb
sarl
inc
into
inc
mov
push
push
mov
pop
lcall
inc
mov
insl
push
mov
movsl
mov
mov
das
adc
jle
aaa
sbb
in
pop
loopne
push
mov
dec
es
cmp
add
test
loop
int
lcall
push
sub
je
clc
fisttpll
cmc
or
fwait
mov
push
dec
xchg
dec
or
popf
fcoms
cld
jae
and
test
jle
inc
dec
aas
fadds
notl
mov
inc
leave
std
test
loopne
jmp
inc
push
mov
repz
movsb
dec
shr
add
add
js
aam
cmp
out
aam
push
cli
in
and
fs
add
movsb
fdivrl
jle
cs
sub
imul
jno
mov
mov
inc
mov
jp
loopne
sub
fildll
adc
jge
sbb
dec
add
bound
or
add
and
xchg
mov
or
push
andb
pop
in
pop
push
fsubrl
lahf
je
adc
xor
test
and
or
lea
sbb
es
xchg
addr16
jmp
cld
clc
mov
add
xchg
xchg
mov
jg
leave
mov
ja
out
subb
push
mov
adc
sbb
lret
loope
pop
icebp
or
cmp
mov
scas
imul
mov
mov
roll
pop
mov
xchg
push
pusha
add
mov
push
pop
insb
pushf
push
imul
push
fisttpll
fcoms
adc
add
icebp
push
into
adc
cmp
enter
add
sbbb
nop
push
push
jns
adc
xor
in
cmp
dec
test
adc
mov
in
icebp
jl
jno
repz
lcall
cwtl
sbb
pop
popa
or
scas
inc
pop
pop
sub
and
outsb
pop
add
nop
mov
ds
sbb
jb
aas
das
fcmovbe
and
psraw
sbb
or
lods
iret
lock
imulb
push
in
fbstp
clc
sbbl
insb
adc
adc
in
rcll
pop
cld
addb
push
sbbl
inc
mov
xchg
aad
inc
jge
bound
aam
mov
add
pop
mov
rcl
pusha
adc
ret
mov
insb
sub
xor
in
mov
push
roll
in
xchg
je
xorb
add
xor
movb
jnp
xchg
xchg
cmp
popf
dec
testb
nop
inc
jb
imul
ds
mov
xchg
dec
jg
adc
mov
aam
loopne
or
mov
jp
mov
or
outsl
jo
in
clc
loop
add
push
shr
sbb
pop
cmpsb
jbe
dec
mov
and
pushf
stc
out
sub
cmpsb
aaa
ds
jbe
pusha
jge
add
push
ret
or
jge
int3
mov
mov
and
or
dec
cs
cltd
sarb
inc
inc
or
rcrl
mov
mov
add
mov
stc
mov
mov
std
icebp
movsw
adc
fidivl
sbb
testl
and
add
lock
loopne
incb
out
es
lret
jl
in
push
dec
test
icebp
testl
shlb
add
stos
cmp
jle
notb
push
mov
roll
mov
pop
pushw
fisttpl
inc
icebp
cmp
adc
loopne
cmp
mov
pushf
clc
push
int
lods
xchg
sub
pop
inc
xchg
mov
and
push
or
lahf
lcall
and
ss
dec
jbe
jmp
shll
inc
das
lcall
icebp
addl
pop
push
sub
xchg
ljmp
dec
jbe
jle
jne
and
or
cmpsl
sbb
das
ficompl
divl
xor
sub
aam
pop
mov
sbb
xchg
mov
imul
adc
fs
adc
cwtl
sub
xchg
dec
adc
sbb
mov
inc
loope
mov
cmp
jbe
mov
ss
stc
fs
imul
push
sub
mov
mov
test
cld
ret
rcll
rclb
pop
sub
cmpsb
call
jmp
out
add
jle
movsb
shlb
not
adc
mov
jmp
test
jne
xchg
xchg
push
xor
lret
incl
inc
xchg
cmp
stos
imul
dec
sbb
fsts
out
xchg
fisubrs
add
xor
mov
test
sub
incl
arpl
andl
jl
add
cmp
clc
lds
int
out
sub
pop
mov
or
mov
pop
xor
mov
loopne
rol
mov
cli
mov
test
mov
out
push
push
pop
pop
ja
mov
add
iret
mov
pop
add
lds
xchg
loope
fldt
out
inc
lods
pinsrw
int3
imul
inc
xor
mov
adc
or
js
and
lcall
inc
test
sbb
nop
int
sbb
cmc
adc
or
sub
jge
es
ss
mov
rcl
sbbb
push
mov
addb
rolb
push
add
lret
fistl
xorl
rorb
or
jo
addb
mov
push
xor
cld
js
negl
nop
test
jnp
xchg
sbb
imul
or
leave
inc
adc
rolb
aaa
imul
test
mov
xor
add
outsb
and
scas
xchg
insl
pop
sbb
cwtl
daa
add
lods
rorl
loope
mov
enter
sub
sbb
arpl
mov
add
mov
enter
ja
imul
xchg
shll
dec
ror
sub
mov
add
adc
test
in
sub
push
mov
or
and
out
outsl
popa
mov
outsb
test
sbb
xchg
or
mov
imul
jmp
pop
pop
sbb
testb
sub
sarb
mov
shufps
ljmp
mov
faddl
sub
fildl
rclb
adc
adcb
pop
shlb
xchg
cmp
pop
mov
cli
mov
mov
jno
loop
add
dec
fsubrl
push
push
js
aad
jl
mov
inc
mov
ljmp
sbb
pop
notb
les
mov
mov
push
dec
mov
cld
out
ret
push
sub
sub
jb
cli
scas
scas
loop
aas
inc
cli
subb
xor
inc
xchg
test
adc
scas
fimuls
dec
mov
push
mov
rol
rcrb
add
cvttps2pi
call
cli
cmpsb
cmpsb
or
jae
push
mov
mov
inc
mov
dec
clc
push
pop
push
arpl
cmp
mov
dec
cld
pop
pop
mov
mov
add
call
mov
mov
movl
pusha
add
adc
jl
mov
dec
push
and
flds
cmp
call
int3
outsl
and
jg
loope
clc
shll
adc
divb
cmp
add
movsb
lock
mov
test
in
shrb
pop
in
pop
push
mov
jo
test
jecxz
push
dec
and
adc
jno
mov
test
cmp
sbb
push
add
xor
or
xlat
fisubrl
add
mov
dec
mov
cmp
sub
lods
dec
pop
imulb
lcall
adc
adc
pop
jno
mov
push
daa
dec
mov
dec
adc
scas
clc
enter
pop
adc
add
dec
test
ja
ss
and
shrb
mov
test
add
mov
xchg
and
aas
pusha
inc
aaa
push
je
cld
add
ret
aad
pop
test
cld
mov
push
insl
and
xor
iret
je
inc
dec
test
aad
scas
mov
in
sub
aas
pop
stc
cmp
cmp
push
jl
push
dec
imul
mov
sub
adc
push
mov
lock
cmpsb
rolb
inc
cmp
push
mov
addr16
mov
repz
insb
loop
enter
fcomi
adc
xchg
push
sbb
out
cmp
mov
cmp
test
xchg
cli
and
jecxz
and
push
jecxz
arpl
or
js
add
pusha
push
fdivrl
mov
mov
test
test
jb
lahf
lock
sub
jle
mov
jg
dec
in
jnp
outsl
and
imul
loopne
add
lock
and
adc
sub
pop
lds
push
cmp
mov
pop
inc
fisubrl
cmovns
clc
fcoms
push
jle
xor
ds
mov
rcrl
ds
mov
mov
sub
mov
add
stc
add
mov
inc
jl
mov
rclb
cs
scas
ljmp
pop
ds
cmp
movsl
push
je
mov
push
addb
stos
insb
outsb
mov
xor
rorl
notl
xchg
into
in
push
xor
cld
adc
outsl
xor
andl
dec
jmp
fbld
pop
lock
rcrb
add
sahf
ror
rcr
aaa
pop
mov
sub
fidivl
pop
mov
push
and
notb
pop
ficoml
fcoms
daa
aas
xchg
add
ja
fiadds
or
inc
push
xor
mov
insb
jnp
lods
insb
push
jmp
and
cmpsl
pop
mov
scas
sub
je
dec
out
dec
xor
and
dec
mov
in
pop
adc
fcoms
jb
aaa
push
lea
jmp
lock
mov
push
xor
jg
or
mov
dec
xlat
js
adc
es
inc
push
loopne
lds
or
jge
daa
mov
and
pop
repnz
sub
mov
adc
les
mov
add
loop
scas
rorb
fs
ljmp
pop
rcrl
pop
andb
iret
lock
push
dec
sbb
roll
cwtl
hlt
loope
lds
loop
ror
xor
mov
mov
add
mov
data16
mov
jo
ljmp
out
out
or
push
inc
mov
test
das
testb
lcall
lds
xchg
xchg
mov
adc
sbb
int3
insl
jno
pop
xor
add
and
add
lcall
mov
mov
cmp
pop
shl
out
and
je
pop
movsb
push
push
js
adc
inc
popl
push
lods
jbe
jmp
mov
push
and
popf
inc
adc
ja
pop
fsub
and
mov
cs
cmp
bound
loop
movsb
mov
outsl
dec
out
orl
das
icebp
push
fcomps
xchg
dec
or
dec
call
daa
in
rolb
jno
bound
loopne
and
sub
mov
test
faddl
jl
ret
ret
adc
scas
rcrb
mov
enter
jmp
sarl
addb
dec
cmp
rol
scas
mov
stos
lods
cmp
jmp
into
push
sarl
cs
popf
dec
add
lods
mov
and
stos
ds
cmp
or
dec
cmpsl
les
xchg
push
inc
out
jo
push
cli
ret
and
addb
int3
fbstp
xor
xchg
lret
xchg
lea
inc
clc
jg
sbb
mov
cmovs
cmp
pop
xchg
mov
lcall
adc
push
gs
jb
lcall
popl
jne
xchg
ds
test
dec
inc
bound
loope
push
lcall
dec
push
cmp
xchg
ljmp
and
dec
xor
cltd
xor
jl
mov
pop
jge
fistl
mov
decb
xchg
lcall
pop
add
push
add
push
stc
aad
movsl
scas
push
scas
sahf
lret
js
test
es
add
fsubrp
xchg
leave
add
mov
cmp
icebp
jmp
push
cwtl
fmuls
shr
inc
add
push
pop
mov
push
mov
loop
int3
or
mov
sub
fmuls
bound
and
lea
mov
xchg
sahf
daa
subl
cmpsb
test
aam
mov
jo
xor
fdivl
subb
xchg
aam
mov
add
and
mov
jl
incl
leave
cmp
nop
push
sub
or
cli
xor
jno
fsubl
imul
out
sub
aas
shl
sbb
add
gs
lcall
movsb
sub
add
ret
aas
je
sti
pop
fadds
shlb
dec
rcll
xchg
jne
dec
push
aam
ja
outsl
mov
xor
add
jb
jo
mov
shrb
rolb
rcr
dec
lock
leave
andl
popa
and
ret
faddl
push
out
xchg
jl
sub
cld
shll
in
mov
push
ja
pop
into
add
push
adc
sahf
and
pop
arpl
and
jmp
jp
pushf
xchg
adc
test
sub
sbb
fsts
inc
into
cmp
clc
jl
les
std
mov
out
pusha
call
cmpsb
cmpsl
inc
shr
add
dec
cmp
or
jns
pusha
mov
mov
or
cmp
cld
dec
xor
mov
mov
adc
cli
frstor
fildll
fsubrs
sbb
sahf
or
fstpt
pop
pop
dec
or
les
pop
mov
pop
outsl
sarb
pusha
aad
into
jl
mov
xchg
or
sar
push
lret
nop
daa
ljmp
mov
lods
cmpsb
outsb
sbb
add
fimuls
and
mov
imul
out
pminsw
sub
out
fwait
cmp
pop
push
clc
popa
mov
and
cmp
je
and
outsb
adc
cli
and
sub
imul
pop
aam
inc
sbb
into
mov
inc
adc
pushf
les
stos
stos
movsl
xchg
cli
and
mov
test
fildl
sbb
inc
loopne
pop
and
jae
cwtl
sbb
cmp
sti
sbb
mov
into
mov
mov
outsb
mov
inc
push
pop
xchg
test
add
call
adc
adc
push
push
sbbl
fbstp
inc
loope
addb
and
mov
and
test
fiaddl
inc
aam
push
and
js
in
mov
lock
or
sbb
pop
addr16
scas
adc
popa
sahf
or
mov
jns
mov
xchg
lret
sbb
adc
psubb
or
stc
test
insb
pop
lahf
mov
sar
pop
mov
adc
add
jmp
lret
cld
shrl
jp
andl
sbb
test
testl
sbb
lea
mov
out
pop
lahf
lcall
mov
and
dec
enter
fistps
rcl
pop
mov
ret
fwait
dec
sub
in
xchg
pop
gs
fnstenv
dec
in
rorb
mov
cmpsl
test
xchg
call
fists
lods
xchg
mov
or
subb
sub
mov
arpl
cmp
fmuls
add
inc
dec
ror
pop
clc
and
bound
and
adc
mov
xlat
shr
push
mov
aas
cmp
daa
scas
jle
cmpb
push
cwtl
sub
fildll
jmp
jmp
jnp
enter
adc
in
mov
fwait
mov
ret
pop
decl
adc
loopne
insl
adc
pusha
ds
ret
add
mov
sbb
pop
jl
sub
stos
inc
js
pop
mov
aam
xchg
stos
jl
test
out
pop
sbb
jmp
hlt
mov
dec
fadds
and
inc
adc
shrl
pop
fsubl
es
sub
mov
inc
jl
pusha
pop
and
inc
ret
pop
and
out
fidivs
inc
movsb
jle
pop
cld
sbb
push
negl
leave
mov
movsb
push
clc
in
sahf
push
fsubr
mov
pop
push
enter
int
insl
sub
or
fs
stos
jg
xchg
adc
pop
and
push
sbb
mov
mov
sbb
cmp
add
lods
push
xor
push
mov
adc
testl
test
dec
sbbb
or
pushf
ss
inc
mov
out
inc
lahf
sbb
insl
cmp
mov
loope
xor
push
xor
loop
adc
icebp
pop
sub
movsl
stos
test
sub
inc
jmp
add
and
call
pop
pushf
xor
xchg
rorl
mov
js,pn
movsb
sbb
add
mov
mov
sbb
fsubrs
jecxz
popf
xorb
adc
fdivrs
mov
mov
sahf
push
dec
mov
lods
jbe
or
cli
and
push
dec
sbb
inc
push
mov
in
mov
push
add
lods
das
sbb
jnp
test
scas
adc
fwait
arpl
inc
addb
jecxz
mov
mov
push
jp
adc
sar
mov
fildl
inc
inc
ss
nop
add
push
adc
jge
and
pop
xchg
sub
je
cmpsb
outsl
adc
push
push
repz
jo
sub
adc
dec
add
into
call
enter
push
mov
loope
pusha
fs
orb
cltd
sarb
ret
xor
fs
lods
arpl
inc
out
inc
cmp
mov
or
sbb
jno
or
inc
and
mov
inc
iret
ret
call
nop
repnz
xor
cli
and
loopw
inc
js
adcb
test
insb
adc
js
mov
add
loope
cltd
cltd
cwtl
dec
test
bt
jl
sub
in
inc
adc
sarb
sbb
xor
sbb
mov
and
add
cld
enter
popf
jl
xchg
xor
scas
push
jle
int3
pop
inc
outsl
stos
xor
in
mov
out
mov
rolb
mov
xorb
jnp
adc
xchg
cmpsb
insl
xchg
je
dec
mov
jmp
cmc
int
out
subl
jb
mov
aam
cmp
fistpll
iret
mov
mov
cmp
into
aad
and
pop
ds
push
rolb
testl
jp
enter
cld
scas
mov
mov
lahf
or
mov
arpl
mov
sub
call
push
sub
add
push
push
push
test
stos
dec
sub
pop
addb
adc
clc
or
fsubs
mov
ja
jnp
ljmp
cmp
and
adc
loopne
add
mov
xor
pop
dec
pusha
je
dec
push
out
inc
rorl
stos
inc
clc
popf
mov
inc
aaa
mov
dec
fwait
lods
notl
leave
ss
insl
adc
inc
add
fsubl
inc
mov
leave
scas
push
push
jno
arpl
xor
or
lea
push
sbb
xchg
add
add
dec
ja
rcl
popa
push
test
fisttpl
push
pop
mov
or
aas
cmp
xchg
les
inc
sti
adc
xor
cli
mov
push
cli
sub
jmp
stos
mov
sub
aaa
loopne
aas
int
adc
loop
ss
sbb
inc
cwtl
call
in
cmpsb
ljmp
inc
shl
push
dec
aas
jle
out
out
jne
pop
dec
hlt
mull
idivl
bound
int3
rcrl
push
xchg
adc
cmp
and
dec
dec
mov
dec
xor
mov
daa
jb
mov
mov
pop
inc
outsl
iret
icebp
dec
jnp
add
sahf
mov
aad
lcall
fsubp
or
mov
cmp
stos
stos
mov
cltd
repz
mov
pop
lods
fsts
ror
dec
xor
call
cmp
xchg
lock
lds
push
repz
pop
lret
dec
ss
lahf
roll
mov
dec
adc
sub
in
aam
jbe
jle
hlt
pop
mov
mov
and
push
lcall
repnz
pop
cs
and
hlt
pusha
cwtl
xor
aad
mov
and
sahf
sbb
adc
shrl
loop
arpl
sarl
lret
pop
pop
fdivl
inc
out
sbb
mov
jne
push
in
fwait
mov
jp
xchg
sbb
push
out
ret
push
sbb
xchg
in
ds
shl
mov
mov
inc
jg
mov
add
sub
xchg
mov
cmp
xor
clc
out
add
inc
ljmp
mov
out
or
in
adc
fiadds
lret
popl
loopne
pushf
loop
adc
jmp
mov
adc
jmp
fisttpl
adc
mov
sbb
int3
cmc
xor
pop
fwait
sbb
jbe
jg
hlt
inc
mov
dec
pop
add
sti
gs
mov
inc
dec
ljmp
mov
lret
dec
out
cmp
pop
sbb
cli
add
pop
and
lock
in
fcompl
lods
mov
ret
cmp
jp
or
pop
jno
sti
mov
test
jge
ljmp
add
push
in
jg
push
mov
mov
popl
adc
push
mov
add
mov
mov
dec
stc
inc
inc
clc
loop
cmp
pop
push
mov
mov
mov
pop
mov
ss
xchg
call
push
in
push
adcl
loop
push
pop
adc
xor
or
dec
jmp
mov
test
sub
lds
imul
push
sbb
push
cwtl
adc
xorb
or
pop
mov
sub
and
rorl
sbb
adc
cmp
test
dec
add
stos
hlt
inc
mov
mov
in
outsl
dec
cmp
cmc
cmpsl
xchg
sahf
jmp
shlb
cltd
rorb
les
aam
mov
inc
jb
rcrb
rolb
sbb
xchg
dec
adcb
xchg
add
mov
loopne
repz
mov
dec
add
inc
and
or
cli
popf
mov
ret
js
cli
cld
call
inc
ret
clc
xorb
mov
jg
adc
xchg
scas
add
push
mov
cmpsb
sbb
pushf
subb
mov
and
and
and
mov
leave
iret
frstor
push
cld
push
adc
sbb
add
int
mov
aaa
mov
fbstp
adc
ret
fucomip
stos
outsb
mov
inc
cmp
bound
mov
mov
adc
mov
test
push
rorb
adc
mov
jbe
mov
shl
fmuls
xor
dec
or
cmpsb
mov
mov
cmp
inc
mov
testb
inc
xchg
mov
dec
pop
cld
mov
repnz
cmp
arpl
adc
and
outsl
shll
mov
std
test
or
add
mov
push
push
adc
xor
nop
inc
sar
mov
cmovs
inc
clc
adc
push
js
js
cltd
dec
add
outsl
or
pop
daa
sub
mov
fldl
dec
cld
or
or
sub
and
push
aam
jns
out
mov
aam
bound
dec
lret
aas
shrb
enter
int3
andl
xchg
mov
cli
jge
push
dec
daa
xorb
movsb
fidivrs
or
pusha
loopne
cmpsb
je
sbb
push
and
inc
fbstp
xchg
in
or
xchg
push
jno
cmp
aad
adc
sub
mov
or
loopne
movsl
js
call
or
inc
pop
repnz
cli
push
sbb
test
inc
aas
sbb
fmull
lock
rclb
into
ret
fiadds
ret
call
inc
fcomp
repnz
mov
dec
pop
iret
pusha
jno
or
pop
lret
mov
sub
sbb
and
je
xor
outsb
dec
push
push
jle
sub
popa
xor
inc
sbb
xchg
fmuls
dec
push
mov
call
movsb
scas
dec
and
sarl
dec
frstor
inc
jnp
dec
mov
lods
mov
sbb
cli
bound
rorl
jg
addb
jno
sarb
xlat
sub
popf
rorb
push
ret
repnz
or
or
jl
mov
inc
lret
xchg
cli
mov
enter
jg
add
js
mov
loopne
fcomps
and
pop
mov
aas
rclb
fsub
movsl
or
xchg
cmp
sbb
cltd
and
xor
notb
cmc
rclb
inc
dec
cmc
pop
jb
outsl
xor
sub
pop
and
add
mov
ss
mov
loope
faddl
test
lds
push
pop
sbb
inc
add
hlt
bound
jb
jl
mov
scas
hlt
sub
mov
sbb
sub
add
xchg
or
jl
clc
add
mov
and
push
xor
xorl
repnz
or
sbb
pop
leave
mov
ljmp
clc
jno
insb
or
bound
jmp
jmp
sbb
xchg
into
mov
mov
andl
punpckldq
sub
mov
sbbl
or
jbe
jl
inc
test
rorl
stos
mov
jle
dec
ja
and
sub
cmp
sub
pop
testb
es
and
subl
xchg
and
test
jp
mov
inc
mov
repz
daa
aad
loop
sbb
and
sub
xchg
pop
vmovq
lea
push
shll
sub
adc
push
rorl
adc
and
add
je
shrb
shr
xor
push
inc
mov
cmp
iret
outsb
inc
xchg
push
ljmp
rorb
inc
mov
mov
sub
je
mov
stos
add
aaa
push
leave
mov
jecxz
cmpb
mov
je
rcl
or
out
adc
das
fsts
loope
inc
adc
leave
push
subb
adc
sub
test
iret
and
fisubrs
ja
sub
inc
pop
rorb
mov
sub
and
fnstsw
xchg
xlat
mov
cmp
pop
in
and
fsts
js
loopne
and
sub
sbb
push
gs
jnp
push
fsubs
push
cmp
sbb
scas
gs
rolb
cld
std
rcrl
pop
inc
ljmp
adc
push
xchg
push
cld
pop
xchg
add
aas
nop
cwtl
or
sbb
jmp
cmc
xchg
stos
add
sub
mov
mov
icebp
out
icebp
test
daa
out
push
add
cli
sbbl
mov
stos
push
xchg
push
xchg
and
mov
sbbl
out
in
movsl
pop
fimull
and
mov
and
iret
outsb
ret
mov
pop
mov
xor
cmp
push
std
add
lcall
lcall
in
vpsllw
fsubp
es
adc
out
add
xchg
mov
movl
call
int
loope
mov
push
out
pop
ret
push
push
sbb
mov
jp
lahf
mov
mov
pop
dec
mov
xchg
fimull
mov
ljmp
add
inc
xchg
div
data16
shll
jne
pop
stos
inc
mov
test
bound
jo
pop
add
pop
adc
cwtl
push
add
mov
jns
add
les
test
xor
cwtl
cs
inc
and
and
mov
in
xchg
rol
add
ret
lds
cli
pop
xor
ret
adc
sbb
stc
inc
js
sub
outsb
mov
xchg
out
nop
xor
nop
or
adc
pop
jne
inc
mov
int
xlat
test
ds
aam
test
popa
movsb
inc
dec
or
pusha
push
adc
xor
xlat
sub
jmp
cs
inc
std
push
mov
or
cmp
out
sbb
push
test
jno
imul
ljmp
repnz
jo
hlt
add
mov
jg
jae
hlt
or
xchg
iret
mov
jb
and
xorb
inc
or
pop
mov
jmp
scas
ret
aam
pop
test
popf
pop
dec
leave
pop
mov
int
sub
cs
jl
leave
inc
adc
jmp
scas
pop
pop
dec
pop
or
ds
data16
push
dec
jle
insb
push
nop
ljmp
testl
jne
adcl
in
inc
or
and
aad
movsb
cmp
jb
imul
les
xor
ss
decl
mov
add
add
scas
jp
pop
mov
fwait
inc
ret
cltd
test
push
dec
mov
jg
stc
dec
push
ffreep
sub
push
mov
cmp
out
xchg
jnp
mov
or
rcrl
dec
jl
mov
push
addl
pop
fcom
test
dec
sahf
cltd
lea
jg
fimull
insb
test
icebp
in
mov
pusha
and
insb
or
push
daa
mov
movb
jo
rcrb
repz
xchg
into
pop
adc
cmp
mov
subl
add
mov
fmuls
cli
enter
push
and
cmp
test
cmp
inc
in
add
out
jle
aaa
mov
or
stos
loopne
inc
rorl
xor
call
mov
ret
dec
fsub
push
lods
not
sbb
dec
ljmp
clc
loop
ljmp
icebp
imul
cmc
pop
push
jmp
jo
push
adc
jne
xorb
fs
jo
jp
in
jmp
inc
in
pop
add
adc
pop
add
movsb
adc
xlat
jp
xchg
in
xchg
mov
ja
jle
es
push
dec
lods
outsl
dec
arpl
pushf
sbb
xchg
test
adc
mov
lods
pop
push
mov
lock
aad
and
pop
mov
mov
imul
jp
scas
outsb
mov
js
lock
add
adc
dec
xor
jnp
cmpsb
iret
fsubrl
and
es
push
ret
adc
add
xchg
ret
imul
lds
mov
dec
xor
push
lcall
push
jnp
je
push
cmp
mov
sar
xchg
push
insb
push
sub
mov
xchg
ss
jmp
push
gs
jecxz
pushf
shll
mov
pop
mov
decl
and
loop
popa
leave
mov
sti
das
xor
inc
xchg
add
int3
xor
add
nop
popf
hlt
or
ja
movl
adc
shr
push
push
sbb
out
pop
mov
fildll
or
inc
jecxz
mov
aaa
cmpsl
cli
jo
in
xchg
push
add
cmp
clc
jp
aas
fisubrl
sbb
pop
push
or
ficomps
shl
jg
rcll
push
insl
and
jl
test
push
lcall
push
inc
mov
adc
shrl
jecxz
mov
add
lahf
cmp
das
inc
sahf
loopne
jno
jecxz
push
addl
fdivs
inc
cmp
lahf
and
mov
add
xor
sbb
pop
aam
aaa
ljmp
es
out
and
lock
inc
lock
pop
insl
jb
sub
bnd
add
sbb
cmpsb
dec
cmp
jmp
mov
sub
inc
or
mov
add
arpl
xchg
sub
ret
mov
xor
push
or
pushw
pushf
aaa
clc
xchg
dec
imul
cmpsl
add
mull
mov
push
les
aad
cmp
cli
lock
xchg
dec
sbbl
notb
sub
in
pop
pusha
push
mov
subl
stos
inc
mov
rcll
add
xor
pushf
je
xchg
loopne
fbstp
mov
fcomip
into
lret
gs
lahf
lock
test
pop
xchg
insb
addr16
adc
mov
icebp
push
lret
mov
and
sub
cmc
jmp
aam
call
neg
in
cli
mov
or
xor
sbb
adc
lods
mov
inc
xor
push
and
add
and
movsb
cmc
add
dec
jg
fcomi
aas
out
pop
mov
fiadds
ret
addb
bound
pop
imul
sbb
sub
aam
inc
je
out
fstpl
mov
nop
push
sbb
push
jb
xchg
push
xchg
jle
dec
sub
xor
rol
jmp
rol
adc
fstpl
iret
inc
fwait
mov
pop
sbb
jno
loopne
push
and
mov
xchg
sbb
int3
and
inc
or
pushf
and
imul
mov
add
mov
je
nop
sbb
mov
push
and
cmp
and
loope
hlt
jb
pop
lahf
mov
cmc
rcr
push
adc
lds
add
sbb
divb
test
fimull
dec
push
pusha
std
jo
loope
ret
pop
inc
loope
mov
fcomps
inc
push
dec
sub
push
push
adc
movswl
sbbb
in
adc
cli
push
clc
les
jmp
lock
sbb
mov
fisubrs
dec
sbb
popa
sub
loopne
imul
mov
jo
jg
xchg
movsb
add
cmpsl
cmp
sub
movl
loopne
push
outsb
lret
lcall
mov
mov
decb
in
sub
fldt
and
adc
ljmp
clc
in
je
cltd
xor
xchg
or
rolb
cmpl
cmp
or
mov
xchg
sub
mov
inc
jg
addb
rclb
jo
insb
popa
and
mov
cmp
mov
aad
lea
cmp
cmp
sbb
sub
mov
xchg
jb
fmull
sbb
test
cmpsl
pop
adc
xchg
xchg
cli
push
mov
in
push
push
pop
stos
test
jbe
mov
sti
sbb
mov
cwtl
insb
cs
es
mov
or
loope
pop
shll
inc
xchg
test
sbb
pop
mov
dec
sub
push
push
bound
in
xor
xchg
dec
sub
stc
test
mov
inc
loope
mov
jl
out
cmpb
xor
adc
sbb
cwtl
cmc
pop
mov
in
fsubr
iret
sbb
mov
hlt
add
cmp
in
sbb
jo
push
shlb
or
xchg
ror
xor
ret
xchg
sub
sbbl
nop
push
add
cs
jg
scas
push
xchg
mov
aam
lea
mov
mov
push
and
mov
je
orl
repz
mov
cltd
add
pusha
cld
lcall
adc
dec
popa
mov
cmp
xor
push
ja
xchg
add
mov
sbb
cmp
mov
cmp
push
dec
or
cmp
add
adc
sub
xlat
mov
cmp
mov
nop
push
inc
jo
xchg
sub
lret
or
xchg
loope
mov
dec
mov
and
pop
hlt
dec
add
mov
mov
adc
dec
orb
mov
inc
in
mov
fnstenv
imul
lret
bound
fistpl
insl
std
dec
push
jp
out
adc
movsb
rcr
jle
and
scas
mov
inc
jecxz
pop
out
adc
mov
mov
cli
loope
cmp
pop
mov
add
call
jp
sbb
adc
lods
shll
jge
insb
push
and
dec
clc
movsl
in
adc
mov
xchg
test
inc
adc
pop
push
test
pusha
test
shrl
fists
pop
cwtl
cmp
rorb
cli
out
xchg
add
je
testl
pop
mov
push
gs
mov
adc
pusha
push
inc
pop
cmp
pop
sbbl
sahf
lcall
add
shl
fwait
jp
dec
aad
ljmp
ds
mov
mov
in
mov
insl
outsl
sub
mov
mov
push
mov
mov
in
or
cmpsb
adc
mov
push
mov
cmp
cmp
stos
popa
cmp
rcrb
ljmp
sbb
shl
outsb
and
jo
push
icebp
push
or
xchg
or
movsb
addr16
add
cli
loopne
jne
test
xor
repz
sub
in
in
dec
rclb
push
and
mov
je
xchg
mov
and
adc
push
ss
adc
dec
out
push
and
push
xlat
and
pop
cld
pop
pop
adcl
xchg
xor
es
stos
sbb
mov
push
and
psllq
add
or
ljmp
mov
inc
test
push
addr16
xorl
orl
mov
pop
fwait
xchg
jmp
xor
fwait
add
adc
fwait
in
sbb
lret
cmpsl
xor
fcmovbe
inc
mov
hlt
mov
or
enter
insb
in
cmp
push
add
mov
in
dec
es
loop
std
ljmp
jecxz
sbb
xor
pusha
xchg
sti
cmpsb
outsl
clc
enter
cmp
icebp
in
xchg
pop
scas
xchg
sahf
lock
sbb
fs
inc
push
ljmp
aas
je
clc
out
pop
xchg
inc
jne
cwtl
mov
insl
xchg
shll
sbb
or
nop
jno
les
xlat
sbb
cmp
xor
shrl
and
test
cs
jns
lret
inc
inc
jg
inc
push
and
inc
fdivl
mov
jecxz
shlb
jbe
inc
bound
enter
adcb
mov
dec
push
cltd
xchg
push
pfacc
out
rcll
adc
pop
cs
sahf
scas
cmp
int3
adcl
jo
ret
daa
push
add
out
or
xor
mov
or
sti
or
sbb
add
bound
push
int
mov
push
push
jl
fmuls
xor
popf
gs
push
out
stc
stc
cmp
lcall
push
mov
inc
push
shr
lahf
and
rsqrtps
pusha
rdtsc
stos
std
sub
gs
sub
js,pt
popa
dec
out
sbb
loopne
lea
sbb
jne
pop
into
or
movsb
mulb
negl
mov
das
sbb
outsl
clc
bound
xchg
jecxz
mov
cld
adc
adc
cmp
jl
pop
sub
sbb
cs
and
mov
int
mov
mov
push
insb
add
sbb
popa
int
fcoml
addr16
mov
cmpsl
mov
mov
into
in
pop
jle
dec
xchg
rolb
mov
sub
aaa
cmpsb
scas
and
aaa
jle
pusha
mov
push
mov
cmp
mov
or
enter
ljmp
push
jnp
clc
enter
out
lret
lgs
inc
or
push
repz
xchg
add
mov
mov
push
jno
xorb
aam
inc
lcall
pop
pop
add
ret
adc
cmp
add
dec
rcll
lods
pop
mov
movsb
mov
mov
es
xchg
aam
mov
in
shl
and
pop
dec
or
jl
mov
mov
pop
xchg
pop
sbb
sub
call
scas
sbb
cmp
ret
std
rorb
call
xor
aam
aaa
or
cli
sbb
and
adcl
into
mov
inc
inc
std
insb
orb
jmp
pop
in
mov
test
adcl
shr
mov
testb
pop
les
jne
fcomps
cmp
add
dec
inc
cltd
aaa
mov
out
mov
sbb
fidivrs
dec
xchg
push
outsb
pop
test
int3
out
mov
push
sbb
dec
cwtl
xchg
sbb
inc
mov
cmpsl
xchg
push
cld
push
adc
cmp
cli
adc
data16
cli
sub
cmp
cmp
mov
cwtl
and
push
fsubl
sub
sbb
cwtl
push
cmovg
inc
dec
dec
mov
dec
add
pop
inc
xlat
dec
or
iret
dec
arpl
subl
in
add
sub
lea
mov
push
ss
or
xchg
fdivrs
mov
lods
shll
or
inc
add
sub
inc
loope
add
cld
test
or
sahf
xchg
dec
jns
mov
cmc
xchg
adc
and
in
movsb
sub
sbb
loope
ret
fists
push
sub
mov
insl
leave
inc
test
add
and
fsubs
fidivrl
pop
insb
pop
shrl
leave
cmc
push
jns
sbb
jl
popa
cmp
imul
pop
fisttpl
adc
add
jo
adc
pop
cmpsl
fcmovnbe
cmp
pusha
pop
test
jmp
movsl
popf
and
xlat
ret
mov
loope
pop
mov
jbe
inc
or
or
jnp
push
dec
jp
js
rorb
inc
fsubl
or
shr
cmp
sbb
push
mov
xor
inc
cs
jle
pop
jp
ljmp
and
sub
divb
pop
psubd
dec
scas
mov
out
jge
leave
lret
int3
cmp
aad
incl
add
out
cwtl
adc
sub
sbb
inc
pop
cmpsb
adc
mov
shlb
push
enter
mov
call
les
aad
xchg
dec
jle
mov
stos
jne
mov
test
enter
push
rorl
js
push
enter
xor
mov
fs
call
and
lea
insb
mov
or
ret
testl
sub
adc
sub
sub
int
pop
repnz
rcrl
cmpsl
pop
mov
pop
je
int
dec
lcall
popf
mov
call
and
push
lods
pop
push
in
imul
fldcw
and
cmp
bound
jb
test
lods
push
test
clc
mov
xchg
cmp
mov
mov
sub
inc
iret
or
xor
loope
test
repnz
push
and
jo
inc
add
push
xorb
and
xor
lcall
scas
je
jle
push
pop
push
jmp
test
nop
test
nop
test
xchg
mov
nop
or
movsb
mov
aam
inc
or
jp
jno
loop
cmpsb
fadds
int
inc
inc
iret
pushw
outsl
rcll
imul
add
jo
adc
loop
mov
jmp
dec
mov
xchg
insb
mov
xchg
mov
inc
cltd
pop
ffreep
add
mov
mov
inc
add
inc
pop
ljmp
or
mov
testb
imul
dec
ficompl
pop
icebp
bndldx
xchg
test
pop
stos
add
shl
andb
out
js
jecxz
sub
mov
ficoms
jle
insb
es
inc
fwait
jl
xchg
cmp
adc
dec
int3
push
lahf
lock
lock
push
sub
jno
daa
and
sbb
or
push
in
jl
dec
lods
inc
dec
data16
sbb
mov
xchg
fistl
cmp
inc
push
pop
mov
out
push
adc
xlat
insb
mov
test
rcrl
mov
add
jns
cld
jo
shlb
dec
and
out
das
jno
mov
cs
arpl
push
xor
inc
lock
movsl
add
and
scas
and
mov
cs
outsl
inc
pop
popa
rcrb
imul
js
aam
mov
mov
sbb
cmpsl
movsl
js
bound
outsl
mov
bound
add
or
add
loopne
loop
adc
pop
sbb
out
pop
call
sbb
ret
add
hlt
xlat
inc
fwait
test
mov
cmp
jl
jmp
xchg
iret
sarl
add
pop
std
add
dec
jge
inc
mov
adc
or
aaa
mov
jmp
out
rol
aad
pushf
psrld
scas
inc
jo
or
out
pop
inc
in
mov
cmp
decl
cli
cli
pop
and
jecxz
stos
test
std
les
aas
inc
testb
or
icebp
cmp
in
xor
jl
fcompl
out
xchg
jge
mov
push
fiadds
pop
inc
loopne
pop
cmp
test
sub
pusha
mov
and
call
and
push
iret
cs
add
sbb
adc
pop
xor
sahf
std
lods
or
pop
out
adc
dec
dec
and
mov
mov
or
je
or
dec
sbb
dec
cld
lock
shlb
out
rcrl
sarl
lods
in
lods
xchg
push
adc
dec
push
xchg
dec
aaa
sub
pop
rclb
lods
push
mov
lock
inc
fwait
adc
mov
cld
shl
mov
xchg
pusha
rolb
enterw
pop
pop
mov
jmp
and
lods
xchg
in
inc
mov
pop
pop
popa
shrb
shll
outsb
call
sub
in
sub
cmp
mov
add
jl
jmp
pop
das
insb
pop
lcall
inc
mov
push
inc
pop
adc
sub
jns
sbb
fdivl
or
lock
mov
stos
sti
pusha
ret
mov
lahf
adc
movsl
not
in
xchg
jne
push
dec
adc
shr
in
out
ljmp
jmp
sarl
xchg
sbb
aad
jle
mov
xchg
mov
inc
jmp
frstor
aam
mov
add
hlt
mov
mov
jp
lods
or
mov
lret
sahf
cltd
mov
cmp
stc
loop
test
pop
insl
sbb
out
xor
push
add
loopne
aaa
jge
jbe
xchg
xchg
xchg
inc
subl
mov
push
push
mov
loop
test
or
pop
or
cmp
mov
pusha
jno
mov
dec
and
lcall
add
out
sub
decb
jle
fstps
dec
inc
pusha
push
lds
mov
jnp
fs
loop
push
jo
sub
addb
hlt
nop
sti
clc
test
xchg
and
das
dec
xchg
test
pusha
cld
ljmp
mov
testb
cmp
ja
jg
rol
scas
test
push
xor
cmp
xor
test
jns
pop
add
in
in
roll
mov
xor
ficoml
int3
movsb
mov
xchg
outsl
xchg
cmpb
push
push
push
jge
rcll
dec
clc
lds
push
and
mov
jecxz
push
add
fucomp
and
and
cmp
or
add
pop
shlb
adc
cli
movd
jbe
mov
repz
push
xor
xor
aaa
add
popl
cld
sarl
add
test
push
inc
cmpsb
and
mov
xchg
cwtl
outsb
hlt
cld
pop
sahf
mov
dec
mov
in
xor
mov
cltd
hlt
daa
test
pop
cmp
xchg
jo
mov
lret
scas
push
xchg
xlat
incb
mov
xchg
test
xor
cmc
xchg
js
dec
inc
xchg
pop
add
adcb
jmp
pop
xchg
xor
xorb
xor
sub
rorl
cmpsl
icebp
out
fcoms
cmp
add
inc
adc
xchg
lock
adc
mov
mov
jmp
sub
in
cs
call
lods
in
sub
pop
rcrb
or
push
pop
std
sub
cld
call
or
stos
mov
aaa
inc
fwait
inc
sub
or
aas
shlb
mov
sbb
cs
xchg
fcomp
fwait
add
or
shl
adc
mov
fdivl
mov
push
or
mov
pusha
or
mov
test
outsl
xchg
fildl
data16
pusha
mov
jg
inc
add
sbb
dec
mov
mov
leave
jne
lcall
jmp
aaa
sub
fs
mov
pushf
loop
loope
fcoml
fldenv
push
pusha
cwtl
jge
test
ss
fidivs
jmp
jb
dec
dec
xchg
pop
and
push
sarb
clc
lds
outsb
cli
shlb
mov
or
xor
dec
push
pop
add
pop
jmp
mov
nop
and
loope
mov
mov
mov
dec
je
insb
repz
lods
push
mov
push
fwait
mov
in
test
call
jle
inc
and
jle
shrb
aaa
add
sbb
outsb
cs
test
out
add
lret
movsb
inc
push
scas
mov
mov
incb
clc
cwtl
test
roll
sbb
dec
sahf
out
add
add
clc
inc
dec
push
pusha
roll
pop
mov
dec
cmp
xchg
dec
mov
adc
mov
fimull
lret
mov
push
xchg
pusha
movsb
incl
subb
js
sbb
aam
jecxz
sbb
pop
je
orl
and
pushf
sbb
je
int3
std
lds
and
fimuls
pusha
or
inc
mov
mov
pop
or
or
js
pop
rclb
jp
pop
xchg
push
loope
mov
add
clc
adc
sarb
scas
adc
adc
mov
imul
test
out
inc
in
subb
inc
push
shlb
push
push
es
pop
or
pusha
adc
dec
das
xor
idiv
cli
jmp
jmp
push
fwait
add
rclb
mov
into
lock
sbb
dec
leave
mov
sarb
and
push
push
test
pushf
jle
inc
push
pop
push
popa
loop
push
mov
mov
cli
mov
rcl
and
adc
xchg
push
sbb
rcrb
add
inc
cmp
in
dec
inc
dec
dec
xor
fdivl
push
cmp
and
or
add
call
add
aas
jbe
or
or
mov
dec
sbb
sub
in
out
fstpt
icebp
int
and
sbb
and
ret
adc
dec
adc
push
leave
sub
rclb
scas
sbb
out
mov
dec
mov
push
hlt
bound
and
push
jmp
insl
mov
jae
lahf
and
push
mov
hlt
leave
adc
and
mov
bound
je
jo
and
mov
mov
and
add
add
sub
fisttpll
and
cs
pop
outsl
dec
sbb
push
pop
push
pop
jp
mov
cmp
inc
add
sti
mov
fwait
push
mov
inc
out
lret
mov
mov
jp
js
and
mov
ds
dec
inc
std
jl
cli
push
gs
sahf
nop
sti
add
popa
pushf
cli
xor
movsb
lahf
fstps
js
sbb
add
push
es
and
ret
in
sahf
test
mov
jne
andb
int
mov
push
pop
cltd
add
mov
jbe
sahf
adc
xor
ljmp
push
subl
sub
movsb
jl
clc
ret
pop
pusha
pop
lods
cwtl
pusha
hlt
mov
mov
mov
std
lock
push
xchg
jo
mov
stos
add
imul
mov
hlt
adc
and
sub
subl
test
or
add
fmull
shl
or
das
jmp
add
mov
inc
mov
stos
mov
cmp
out
push
iret
sbb
xchg
rcrb
sub
faddl
mov
mov
inc
pop
jge
fs
es
sarl
pushw
std
dec
cmp
push
stos
push
xchg
cmp
bound
sub
lock
sbb
sub
cmp
sahf
aam
loop
add
cmpsb
cmc
pop
in
cmpsl
and
or
mov
and
shrb
int3
mov
lods
pop
and
jo
add
mov
mov
lods
xor
dec
and
sbb
sarb
adc
shrb
cmp
subb
add
loop
mov
fstpt
call
pop
inc
rolb
dec
in
sarb
mov
clc
aad
ljmp
inc
mov
rcr
mov
arpl
cli
or
jl
add
mov
or
inc
xchg
fdivl
dec
push
push
push
xchg
inc
test
push
rcrl
rorb
inc
pop
int
dec
ret
mov
test
jp
sub
mov
fs
incb
push
mov
adc
sub
push
nop
sbb
sub
je
mov
gs
adc
xor
or
mov
mov
jae
lret
inc
lds
les
mov
sbb
test
addr16
pushl
add
orl
daa
jnp
xchg
mov
cld
xchg
pop
push
jae
cmc
push
add
add
out
pop
pop
fstps
shll
stc
push
ljmp
incl
rcl
lods
daa
orl
pop
sub
and
mov
mov
push
andl
mov
sbb
dec
dec
mov
jno
arpl
cmovl
iret
imul
cmp
scas
jl
cmp
cld
fiadds
repz
ds
adc
and
add
cs
data16
stos
call
loope
mov
loope
repnz
jg
push
mov
mov
xchg
int3
or
mov
stos
mov
jp
and
jle
mov
cmpsl
pop
mov
xor
fimuls
push
jmp
movsl
les
enter
push
js
retw
mov
push
pusha
das
sbb
sub
sbb
es
ljmp
repz
les
in
push
dec
push
hlt
ficoms
adc
xor
adc
xchg
pop
push
sbb
push
or
add
daa
xchg
cmp
scas
mov
inc
add
pop
insb
push
push
sub
fcomip
sbb
mov
cwtl
das
dec
adc
push
aaa
adc
pop
sbb
sub
mov
sahf
dec
aam
cli
push
add
pop
mov
imul
es
jo
adc
in
dec
or
jbe
mov
loop
sub
xor
pop
adc
sbb
cmp
test
out
fildl
ljmp
data16
lcall
pop
inc
pop
cmpsb
fisttpll
add
and
adc
repnz
sub
sbb
inc
and
push
and
xchg
bound
cmp
pop
and
add
arpl
lods
or
xlat
pop
cs
or
mov
loopne
daa
mov
push
jbe
or
movsb
adc
pop
in
iret
clc
inc
inc
add
dec
mov
lock
arpl
repnz
mov
decl
mov
ljmp
pop
shlb
enter
sub
ret
sub
out
ror
mov
aaa
xchg
or
push
movsb
icebp
es
pop
xor
test
lock
mov
mov
mov
clc
or
jo
push
pop
mov
repnz
roll
es
mov
add
jo
sub
aas
int
pusha
mov
pop
in
mov
lods
roll
pop
xchg
nop
sarb
pusha
dec
pop
out
or
loopne
dec
lret
mov
jmp
xchg
gs
pop
or
dec
arpl
js
lea
adc
mov
adc
cmp
add
cli
inc
sbb
or
mov
js
insl
push
rcl
mov
rolb
int3
repnz
jle
les
xor
mov
mov
mov
inc
into
ss
movsb
sub
pop
push
adc
addr16
pusha
lahf
scas
incb
mov
xchg
clc
ret
imul
push
fwait
test
lds
and
faddp
pusha
xchg
fimull
or
lahf
fsubs
popa
test
cmp
sbb
fdivrp
pop
dec
shl
jae
jbe
lock
nop
aaa
test
dec
add
nop
dec
popa
rolb
cli
xor
cmp
cld
jno
jmp
sbb
xor
jle
push
maskmovq
negl
sbb
jge
xchg
adc
lock
icebp
cmp
mov
test
mov
fisubrl
clc
pop
rclb
pop
xor
jmp
push
cmpl
add
cli
push
jnp
and
sub
popa
sub
sub
hlt
mov
movsb
sub
mov
popa
test
xchg
mov
push
cmp
sub
xor
jecxz
js
pop
fisubs
sbb
into
pop
js
rorl
lret
in
mov
cwtl
sub
sbb
xchg
in
movsl
sbb
push
ret
es
xchg
jb
dec
fsts
jo
and
loopne
ret
mov
sbb
dec
enter
dec
jle
cmp
pusha
mov
lods
push
adc
cmp
lret
das
inc
scas
xor
test
in
xor
pop
cmp
sbb
roll
and
or
cld
rcll
sub
mov
pop
mov
enter
cmp
popa
addl
mov
repnz
add
sbb
pushl
jae
adc
xchg
mov
jge
stc
divps
xchg
push
add
push
jg
stc
xor
mov
sub
or
mov
lock
shlb
and
ffreep
xor
mov
shrb
pushf
dec
mov
push
scas
cmc
mov
imul
adc
popa
jns
and
stos
mov
mov
mov
jecxz
and
push
ja
fnstenv
inc
mov
sbbb
dec
inc
scas
orb
mov
push
xor
daa
push
push
mov
mov
shrb
push
xor
addr16
fdivrs
push
into
or
sbb
adc
cld
sbb
push
enter
imulb
aas
ret
lret
sbb
push
mov
inc
mov
pusha
clc
cltd
out
cmpsb
test
fstps
adc
sbb
icebp
inc
hlt
inc
push
add
test
scas
jns
scas
test
inc
xchg
mov
xchg
push
cs
in
dec
mov
push
push
pop
lret
fistpl
loopne
jp
sbb
fs
call
mov
jge
xor
cwtl
sub
pop
jo
inc
pushf
adc
sarb
lds
mov
int3
or
cld
dec
loopne
or
pop
icebp
fcmovnbe
pop
popf
movsb
adc
push
fwait
loop
unpcklps
jp
cmc
sbb
lcall
add
push
addr16
push
dec
insb
jl
fisttps
mov
aam
test
push
insl
inc
mov
fisubrs
testl
outsl
sbb
enter
sbb
add
sub
leave
stos
inc
insl
xchg
insb
adc
mov
call
gs
inc
push
mov
lods
fnstenv
insb
inc
sub
cs
push
ss
sub
inc
cmp
pop
sub
mov
cmpsl
fstl
in
mov
ljmp
popa
sbb
enter
es
sbb
je
pop
pop
aas
sbb
jle
movsl
popa
or
pop
mulb
shll
mov
fwait
jb
push
negl
sarb
cmp
sbb
pop
stos
xchg
mov
sub
xorb
ds
divps
stos
mov
scas
pop
nop
lds
jmp
inc
je
mov
out
enter
addr16
stc
paddusb
js
ja
mov
es
aad
add
pop
je
push
nop
push
or
jne
xchg
jns
adc
fcompl
icebp
xchg
test
cwtl
inc
pop
sbb
adc
outsl
aam
jl
aad
push
out
lcall
lods
cltd
push
loope
adc
mov
ret
divb
xorl
notb
pop
shlb
sub
test
mov
rcrl
fisubrl
mov
pop
mov
aaa
popf
mov
adc
fisubl
movsb
mov
add
imul
ret
test
call
out
mov
xor
mov
cmpsb
aad
xor
dec
out
mov
xor
fidivrs
movsb
fldt
in
dec
aam
rorb
adc
xchg
mov
push
push
lcall
adc
inc
js
rcr
es
push
js
das
fstpt
sahf
inc
mov
cld
mov
popf
sbb
outsl
cwtl
dec
mov
mov
jnp
pop
pop
hlt
mov
push
push
xchg
pop
mov
fwait
add
xchg
dec
xchg
pop
popa
mov
int
insb
or
push
add
sub
push
adc
mov
bound
insl
es
adcb
inc
pop
aam
add
xor
and
ficomps
icebp
push
or
add
mov
roll
aaa
push
fcmovnu
adc
not
pop
test
mov
lods
rolb
sbb
mov
jle
aaa
push
lea
or
ss
adc
cmp
inc
push
adc
cmp
imul
push
adc
push
mov
inc
and
mov
insl
aam
inc
pop
mov
dec
jecxz
push
imul
add
inc
out
ja
inc
xor
or
sahf
push
cmpsb
pop
sub
gs
loop
icebp
stc
xor
loopne
cmpsb
fistps
jnp
cmpsb
sbb
pop
mov
sti
cmpb
sbb
clc
mov
dec
xchg
jl
stc
clc
inc
jns
scas
sbb
sar
pop
out
leave
push
jmp
les
cmc
sbb
jo
sub
push
insb
push
xchg
test
xor
loope
shrl
addl
iret
sub
test
inc
or
jno
jbe
xchg
hlt
arpl
mov
es
repz
mov
mov
inc
sub
sbb
aam
mov
inc
es
fmull
inc
paddsw
xchg
jecxz
pushf
dec
push
shrl
pop
adc
jo
pushf
or
adc
inc
icebp
icebp
adc
inc
push
fsubl
push
icebp
cmc
cld
pop
shrb
push
nop
xchg
js
mov
andb
mov
sub
popa
ss
push
mov
push
hlt
adc
fsubl
iret
jo
xor
xchg
ljmp
andl
xor
popf
mov
popf
dec
jg
pop
xchg
adc
xorb
ljmp
repz
jbe
inc
adc
pop
bound
push
fstps
clc
sbb
loop
xor
xchg
push
enter
push
inc
xchg
push
sarb
inc
pusha
sahf
jbe
inc
nop
pop
mov
popf
push
mov
lods
sub
jae
xchg
xor
call
adc
cli
pop
ljmp
insl
repz
in
icebp
pop
mov
loope
mov
or
pop
mov
mov
mov
rol
sbb
mov
jnp
sbb
cmpsl
shrl
push
scas
push
lahf
jp
push
hlt
enter
pmullw
push
xor
pushf
cltd
add
inc
xchg
call
mov
out
mov
inc
inc
add
cmp
and
loop
xchg
mov
mov
mov
fidivrs
xchg
and
and
mov
out
mov
cs
imul
ret
push
xchg
ret
pop
insl
mov
shr
movsb
stos
nop
sub
ljmp
xchg
add
lds
mov
cmpsl
mov
sbb
cmpsb
je
mov
loopne
pop
pop
and
adc
adc
faddp
fistps
decl
or
dec
and
adc
shlb
fsts
adc
jnp
rcr
jecxz
xor
add
xchg
pop
pusha
dec
cmp
fistl
sub
mov
xchg
lock
clc
pop
inc
cmp
pop
inc
cmp
in
movsl
sbb
dec
mov
es
js
ret
inc
nop
mov
xchg
shll
push
inc
mov
das
or
scas
add
ds
scas
imul
xor
movsb
mov
cmp
sarb
shlb
decb
scas
push
mov
mov
sbb
in
les
jb
ficomps
fnsave
test
add
inc
ret
adc
push
inc
stos
or
in
mov
jmp
movb
pop
mov
inc
pop
add
xchg
pusha
jg
add
push
addb
sbb
out
dec
lret
or
xchg
xlat
jmp
push
mov
add
test
mov
or
or
insb
pop
rorl
sbb
push
jecxz
aam
lods
out
pop
sub
shll
cltd
push
mov
xchg
and
stc
jge
ss
lods
test
nop
mov
shll
shl
jp
or
add
or
ljmp
clc
jne
aaa
mov
mov
mov
and
mov
dec
stos
pop
inc
stos
mov
leave
adc
clc
lahf
sbb
add
xor
test
dec
pop
add
add
insl
out
cltd
repnz
std
stos
push
push
sub
ja
cli
pop
jbe
pop
and
sub
aas
adc
nop
aaa
dec
sbb
int
add
int
adc
mov
rcrl
pop
dec
cmp
push
mov
aad
jle
call
cmp
and
daa
out
or
xchg
mov
pop
in
mov
xchg
lock
mov
push
test
pop
lock
push
dec
into
mov
xchg
shl
jmp
rcrl
daa
decb
arpl
mov
aad
clc
loopne
cmpsb
jp
cmp
out
add
mov
xchg
outsl
movl
xchg
ljmp
cli
nop
and
cmpsb
insb
pop
ljmp
add
jns
inc
push
data16
push
clc
dec
mov
mov
mov
mov
sbb
xchg
stos
adc
push
out
and
adc
insb
loop
enter
test
sbb
adc
into
insb
sbb
adc
jp
inc
add
data16
mov
dec
sar
ss
ds
jns
sbb
mov
std
test
outsb
mov
fstl
icebp
sbb
aaa
pop
shrb
mov
mov
pop
sbb
in
jge
jmp
rolb
mov
and
fucomip
mov
xlat
jle
push
outsb
cmp
adc
xor
mov
add
mov
cs
xchg
cltd
or
psllq
mov
icebp
cmpsb
push
inc
mov
add
or
sub
ret
test
or
lret
clc
scas
cmp
imul
cs
sbb
popa
pop
imul
push
addb
push
mov
xor
fdivrs
and
mov
ret
dec
psllw
notl
pop
pop
subb
jmp
int3
and
push
repnz
ss
adc
sub
xor
adc
dec
push
dec
xor
data16
mov
jne
nop
pop
popa
lahf
lock
mov
popl
xor
loop
test
pop
test
daa
add
pushw
loope
mov
enter
jp
loope
adc
in
cmp
sub
in
fcmovbe
jbe
insb
xchg
mov
cmpb
sbb
add
pop
push
push
add
xor
add
in
jne
cwtl
sub
xchg
sbb
cmpsl
inc
xchg
imul
test
jl
add
add
mov
mov
repnz
mov
nop
mov
adc
xchg
in
out
rolb
inc
push
mov
aas
lods
dec
std
push
lahf
inc
cmp
push
lock
pop
adc
xchg
mov
jo
sub
out
inc
cmp
ja
or
lock
add
jno
cmp
mov
jmp
pusha
ljmp
outsb
jle
out
insl
cmpsb
arpl
lods
pushf
mov
mov
inc
xchg
neg
adc
mov
cltd
fs
or
cmp
sarb
sbb
pop
ljmp
lea
push
or
sub
hlt
pop
test
pushf
clc
adc
mov
icebp
lods
fwait
fs
outsb
cmc
mov
push
fwait
addl
aam
add
sbb
pop
lods
pop
js
cmp
shlb
xchg
inc
dec
push
pop
cwtl
xchg
push
lcall
fwait
xchg
jae
add
cs
push
xchg
fwait
dec
adc
repz
mov
inc
mov
adcb
je
pop
rorb
add
add
mov
loop
cli
adc
fs
sbb
mov
dec
mov
xchg
outsl
mov
scas
xor
nop
repz
fsubs
cmc
bound
fdivs
jp
xchg
movb
xchg
xchg
xchg
test
aaa
dec
cmpsb
pusha
pop
sub
pop
adc
insb
fbstp
pushf
and
add
mov
mov
test
ret
enter
paddusw
ret
idivb
les
aaa
cmp
adc
mov
hlt
adc
aas
mov
mov
mov
shrb
call
sbb
fst
out
ljmp
xbegin
in
dec
dec
pop
or
mov
pop
stc
out
and
lcall
fmuls
hlt
iret
cmpsb
mov
push
loope
cmp
nop
lods
jecxz
push
ss
mov
or
add
mov
inc
push
stos
mov
sahf
clc
push
push
out
xchg
adc
test
push
sub
inc
bound
mov
sbb
loopne
test
inc
psllw
mov
aam
add
repnz
cld
ss
pushf
nop
mov
push
in
or
cmp
idivb
loopne
jg
and
sub
mov
test
orb
mov
cld
aaa
lcall
jno
inc
cli
stos
fnstenv
repnz
in
mov
out
hlt
sahf
inc
testb
je
jmp
orb
inc
int3
fsubr
mov
loope
andb
sbb
pop
dec
and
fisttpl
pop
es
loop
adc
xor
cmp
xchg
adc
mov
push
jo
mov
out
jns
stos
xlat
or
pop
mov
movsb
mov
nop
inc
cwtl
sbb
xor
or
mov
push
xor
sub
std
lods
outsb
mov
xchg
sub
xlat
ss
movsb
repz
mov
ljmp
cmp
dec
xchg
pop
mov
movsl
scas
jle
je
jle
mov
mov
outsb
push
jp
lock
sbb
rorl
call
inc
xor
in
and
push
nop
jp
add
in
add
fcomi
mov
pop
mov
call
imul
xor
cmpsb
icebp
sbb
insl
push
pop
fwait
out
test
repnz
in
xchg
or
inc
lds
lret
leave
les
mov
cld
call
mov
mov
mov
add
fsubl
sub
outsb
inc
inc
sbb
sub
cmc
fistps
sbb
jbe
inc
adc
xor
testl
and
daa
lock
mov
jbe
mov
add
test
imul
pop
push
fxsave
mul
pop
mov
imul
adc
dec
sti
hlt
lahf
push
outsb
shrb
test
pop
cwtl
fadd
push
sub
daa
enter
inc
rorb
add
jae
mov
and
xor
sbb
pop
aad
sbb
inc
push
out
inc
das
mov
and
jp
inc
dec
test
lock
loopne
aaa
loop
divb
pop
cltd
insl
arpl
lock
sbb
sbb
pop
or
jb
out
inc
addr16
adc
pop
mov
mov
or
in
pop
sarl
aam
aam
ret
mov
loopne
cmp
jbe
adc
insl
sub
das
pop
mov
ror
xor
pop
dec
xchg
outsb
loop
imul
std
mov
call
es
or
mov
dec
mov
in
pop
rorb
mov
call
mov
dec
in
leave
cmp
incl
push
mov
mov
test
cmpps
orb
xchg
int3
bound
inc
lock
and
es
pushf
mov
add
dec
add
popf
add
fsubrs
xor
and
hlt
data16
and
dec
mov
inc
fistl
mov
sub
push
inc
rcl
icebp
ds
int3
ret
xorb
pop
adcb
rorb
loopne
cwtl
inc
adc
pop
in
push
and
mov
lea
cmpsb
pusha
pop
shll
and
dec
xlat
xchg
decb
lods
stc
outsb
aam
push
in
mov
sbb
sbb
add
and
add
into
sbb
fld
ds
fisubrl
popl
pushf
or
xor
pop
xor
ret
jecxz
fs
dec
dec
fwait
loopne
sbbb
pop
fimuls
filds
lea
xor
insl
mov
call
push
push
xchg
mov
dec
test
adc
pop
test
in
lret
push
dec
loopne
xor
push
inc
pop
loopne
xchg
dec
cmp
call
nopl
sbb
in
ljmp
aad
clc
adc
ja
js
jne
jne
jbe
je
or
outsb
dec
inc
sbb
pop
jl
dec
xlat
dec
repz
js
pop
add
mov
mov
je
jo
pop
jmp
mov
ljmp
push
aam
push
stc
fs
daa
pop
xlat
sbb
inc
arpl
pop
fadds
test
mov
cmpsb
push
xor
in
sub
inc
arpl
leave
cmp
or
sub
mov
adc
cmpsl
adc
or
cli
inc
xlat
mov
xlat
mov
mov
imul
xor
cmp
rcr
push
fdivs
adc
sub
cwtl
test
jo
inc
pop
xchg
add
cmp
adc
cld
arpl
sbb
cmpsb
mov
aam
pop
jg
add
mov
ffree
mov
dec
out
pop
inc
cmp
jo
sbb
dec
jg
sbb
xchg
push
sbb
lcall
int
sbb
movsl
cs
add
outsb
outsb
push
inc
jno
adc
inc
inc
lods
push
lea
ljmp
mov
cmpsb
xchg
popa
nop
mov
gs
in
daa
lcall
arpl
pop
ror
bound
sbb
push
div
push
push
ljmp
dec
sbb
enter
cmp
subl
xor
rorl
or
aaa
leave
pop
jle
mov
div
int
test
cwtl
jl
sahf
mov
call
mov
gs
les
je
into
inc
pop
scas
xchg
sub
mov
add
jmp
xor
repz
loop
and
fildl
cmpsl
insl
ss
adc
dec
bound
cld
test
loope
and
jmp
cmpsb
or
push
data16
xchg
js
stos
push
and
jp
aas
adc
in
gs
pop
adcb
fstps
je
aaa
lcall
jg
pop
cld
dec
adc
shlb
pop
popa
and
pushf
inc
xchg
mov
insb
fwait
mov
sbb
cmpsl
jge
adc
fildll
adc
mov
inc
push
or
pop
js
mov
loope
int3
es
cwtl
and
pusha
adc
js
inc
adc
or
dec
lret
xlat
pop
rcrb
inc
push
pop
cwtl
jne
xor
lcall
pop
xor
push
mov
push
jmp
dec
in
mov
xlat
jbe
or
mov
adcl
sti
fcmovb
aas
or
and
or
in
addl
or
add
cmc
mov
inc
fildl
jge
call
testb
sbb
out
out
mov
mov
lahf
jnp
pop
jl
cmp
lea
insb
add
pop
or
lret
dec
clc
mov
add
push
int
xor
and
in
push
test
in
js
and
jp
aad
pop
and
ret
mov
sub
or
das
lahf
cmpl
stos
mov
cmp
add
shll
xchg
xor
xchg
jb
add
test
movsb
fsub
and
add
mov
pop
and
push
test
inc
dec
dec
adc
mov
rorl
dec
ret
decb
lods
in
add
iret
sarl
out
sub
xlat
inc
add
mov
mov
cmpsl
mov
jnp
data16
xchg
or
inc
rol
std
mov
stos
cltd
dec
pop
add
xchg
or
ss
mov
adc
pop
movsb
xchg
shl
insb
adc
arpl
mov
iret
leave
cltd
cltd
subl
push
xchg
insl
je
dec
sbb
adc
inc
push
rclb
test
repz
cmc
xchg
push
scas
dec
adc
adc
rolb
sbb
mov
int
sbb
inc
adc
or
inc
mov
sbbb
daa
pop
rorb
lock
ret
xor
sub
fldenv
iret
jne
es
mov
sbb
jg
lock
les
mov
push
ja
xor
mov
ret
mov
inc
jecxz
jle
ret
pop
call
xor
ret
mov
loop
repz
push
jne
js
xor
push
cmp
call
loope
adc
xchg
cmpb
inc
adc
aaa
or
push
push
nop
filds
adc
sbb
scas
add
cmc
popa
lock
mov
shlb
fiaddl
icebp
out
inc
lods
cmp
sub
sar
inc
and
fidivrs
add
call
outsb
mov
add
in
loop
mov
dec
adcb
mov
or
cmc
mov
movsl
js,pn
cmp
int3
jno
test
or
mov
ret
in
inc
mov
fmuls
inc
add
adc
cmp
push
repnz
mov
jp
mov
jne
mov
lds
lock
inc
jp
sub
pop
add
push
in
sub
sub
call
pop
mov
subb
mov
rorl
imulb
shr
iret
jbe
jae
sub
out
fcoml
in
shlb
push
adc
dec
sahf
rcrb
cmpsb
fwait
lret
fildll
push
data16
mov
mov
aad
cli
mov
aad
mov
inc
mov
sbb
xor
addb
sbb
pop
rcl
inc
sub
push
icebp
scas
jmp
test
pop
sbb
test
sub
mov
jge
push
dec
repnz
cmc
fbstp
adc
sahf
and
sub
data16
pop
push
pop
mov
inc
call
andb
ret
in
mov
or
jbe
adcb
pop
decl
cli
cmp
push
lea
orl
push
pusha
push
stos
fiaddl
or
mov
pop
pop
mov
push
xchg
aaa
mov
in
movsb
clc
es
add
outsl
xor
pop
xchg
or
sbb
ss
and
dec
add
test
add
adc
cmp
in
iret
add
push
mov
imul
or
pop
pushf
dec
jmp
jb
ret
fdivs
mov
push
jmp
pop
iret
inc
test
roll
cmp
xlat
sub
ret
arpl
add
xchg
aaa
pop
jge
mov
orb
scas
sbb
or
testb
sahf
fwait
push
xorb
icebp
outsl
push
mov
xor
or
mov
sub
xor
aas
mov
sbb
pusha
push
jo
hlt
nop
xor
fmull
jmp
push
jecxz
lcall
orl
inc
js
cltd
push
cmp
call
push
lock
push
fdivrs
push
outsb
cmp
xor
sbb
or
inc
push
jg
mov
mov
addr16
pop
sar
enter
pop
nop
push
insb
sub
jp
and
je
mov
stc
mov
in
inc
push
or
rorl
sbb
cld
loope
dec
pop
jecxz
nop
pusha
or
movaps
lods
test
adc
in
push
sbb
sub
sbb
inc
fs
and
inc
insb
sub
mov
jns
xchg
push
incb
and
lret
xchg
nop
push
test
fs
and
push
mov
mov
add
movb
xchg
ja
lods
test
lods
sar
push
mov
mov
inc
xchg
xchg
add
cmpsl
or
push
cs
lods
addr16
les
mov
or
pusha
ret
aaa
insl
movb
lret
mov
mov
enter
fldlg2
mov
in
aas
push
jbe
adc
outsb
pusha
lock
fiadds
pop
out
jo
subb
inc
data16
outsb
cmp
cmpsl
dec
pusha
jmp
ja
jp
xchg
sahf
mov
pop
push
test
lcall
fisubrl
test
sbb
movsl
rorb
int3
adc
movsb
and
fisubs
mov
loop
mov
adc
lret
iret
xor
ficoml
pop
mov
pop
dec
test
outsb
add
sub
xor
sbb
push
sbb
loopne
jge
mov
or
cmp
mov
movsl
mov
push
sub
cmp
push
mov
ds
sub
sbb
push
out
adc
add
fstl
icebp
and
or
in
jle
inc
movsb
addb
pop
clc
or
sbbb
fimull
or
cltd
mov
cld
xchg
add
adc
xchg
fcoms
add
mov
jg
and
mov
dec
int3
add
repz
jns
mov
pop
cmp
es
push
shrl
inc
idivb
ret
dec
out
shlb
icebp
test
out
dec
push
fsubrs
cli
or
cltd
sub
clc
lcall
xchg
lea
pop
dec
scas
das
add
mov
sub
dec
mov
lcall
add
fst
add
jae
push
or
push
xor
clc
adc
cmpsb
and
jae
push
ja
pop
xor
add
push
mov
cli
dec
mov
push
inc
or
lcall
aaa
pop
push
push
xor
sub
push
hlt
xchg
iret
out
mov
mov
jecxz
dec
push
mov
push
pop
ror
push
add
add
inc
xchg
les
sbb
aas
cli
inc
stc
adc
adc
loope
dec
repnz
jo
clc
mov
cmp
xchg
add
sbb
cmp
xor
mov
cmp
arpl
sbb
mov
or
je
lcall
jle
pop
mov
enter
and
xor
push
xor
dec
xchg
or
das
movsb
cmpsb
mov
les
push
lea
pop
pop
enter
xor
xor
xchg
cli
xchg
in
popf
xor
push
mov
mov
mov
dec
imul
cmp
sub
inc
xor
ljmp
lods
js
adc
and
xlat
dec
mov
or
jns
je
pop
cli
xchg
out
loopne
sbb
xchg
test
sub
fdivs
aam
xor
stc
mov
inc
mov
add
cwtl
inc
ret
test
push
fmuls
sarb
and
lods
popa
dec
push
outsb
scas
rol
adc
cmp
jmp
mov
rcr
and
out
fstps
sbb
test
sub
mov
cwtl
and
stc
mov
outsl
and
mov
xchg
dec
test
push
pop
add
pop
clc
adc
or
lods
incb
or
xchg
pop
dec
ror
mov
incb
mov
rcrb
jo
aam
push
fldcw
ds
jmp
push
popf
cmp
cli
xchg
rolb
es
jne
mov
loop
cld
xor
scas
add
bound
mov
mov
push
jo
orl
adcb
mov
fldl
cli
mov
jp
sti
aad
out
jo
inc
outsb
inc
pop
push
repnz
mov
add
adc
inc
fucom
aad
orl
enter
int3
je
or
stos
in
test
adc
popf
cmp
and
sub
add
leave
cmp
jecxz
sti
dec
in
cmp
bound
pop
cwtl
mov
jne
pop
add
orl
adc
pop
jg
mov
rorl
dec
cmp
andl
ret
scas
imul
pop
out
adc
or
and
mov
or
cmovbe
nop
jl
and
add
inc
jg
push
push
mov
mov
sahf
ror
rcl
pop
or
push
adc
test
mov
push
jge
sbb
push
out
adc
dec
cmovb
xor
add
push
mov
pop
cmp
mov
stc
sbb
and
orb
adc
std
cli
je
dec
cltd
aas
mov
outsb
add
push
std
mov
or
adc
pop
outsl
mov
cwtl
pushf
inc
inc
nop
jne
inc
icebp
fildll
insb
cmpsb
mov
mov
subb
mov
std
add
repnz
push
fsubr
push
xchg
sbb
enter
xchg
inc
repz
sbb
rolb
push
adc
add
add
iret
rclb
loop
iret
xchg
imull
decl
jp
data16
ret
nop
repnz
and
sub
pop
popf
test
mov
pop
out
lods
fsubs
repz
push
dec
inc
dec
js
mov
mov
adc
call
in
and
mov
into
mov
int3
popa
pusha
orb
aaa
cwtl
and
test
insb
jl
cmp
insl
mov
mov
push
inc
or
sbb
push
std
pop
pop
rorb
fcoms
add
lods
push
add
and
aas
xchg
sub
mov
data16
push
imul
add
mov
fwait
cmp
push
sbb
and
stos
lcall
jae
js
adc
adc
jns
add
dec
dec
sti
shl
sub
loope
mov
add
outsb
mov
imul
pop
push
pop
jle
cld
add
aas
add
mov
sbb
mov
xor
fcompl
sbb
cmp
jmp
sub
mov
dec
dec
pop
gs
mov
jge
loopne
mov
push
xchg
cmpsb
cli
add
inc
ljmp
xchg
je
repz
fucomip
inc
jb
outsb
adc
inc
push
lahf
add
push
xor
repnz
mov
movsb
push
das
push
jle
or
daa
sub
push
int
aam
dec
shr
repnz
xchg
repnz
inc
and
ror
ret
popf
push
or
insl
add
out
out
pop
out
ja
cli
mov
insb
dec
inc
in
stc
or
pushw
xor
mov
add
or
jmp
data16
sahf
call
aad
push
andl
pop
test
sub
fisubl
sbb
xor
pop
sbb
fbstp
andb
cli
cmp
shll
dec
or
jle
jmp
mov
jg
loope
dec
push
dec
xchg
iret
mov
pop
leave
loopne
inc
lahf
mov
or
in
fldcw
adc
icebp
fidivrl
mov
shlb
movhlps
pop
mov
les
jmp
jno
and
cmpsl
out
cmpb
orb
mov
inc
inc
lds
lods
lods
push
mov
mov
das
xor
idivb
xlat
gs
lret
mov
lret
and
pushf
push
out
mov
stc
out
and
mov
jmp
jecxz
dec
mov
sbbb
in
sbb
lcall
aad
ss
iret
rorl
mov
push
jg
add
imul
out
lods
movsl
inc
or
mov
or
or
dec
clc
sbb
or
repz
fstpt
xchg
aad
dec
sahf
daa
mov
and
ficompl
add
mov
mov
push
sbb
jl
test
adc
movsb
out
rcrb
aaa
sub
cmp
loop
add
push
jg
push
mov
cwtl
push
dec
lods
add
ja
push
and
jmp
adc
add
cli
clc
stos
out
push
mov
stos
xchg
add
in
hlt
and
ret
push
adc
mov
aas
mov
cld
pusha
bound
ret
sarl
int3
mov
push
mov
ss
or
xor
es
dec
xchg
inc
mov
mov
outsl
sub
test
add
mov
sub
sahf
jne
clc
pop
push
push
jmp
testl
and
cli
out
ret
sbb
lret
out
and
adc
insl
cli
mov
cmp
push
mov
int3
add
ja
jb
inc
lods
dec
push
aas
icebp
dec
push
dec
pop
sahf
xchg
lret
insb
push
sbb
loopne
sbb
xor
add
cmp
pushf
inc
xlat
cli
adc
loope
push
jge
sbb
sub
loope
inc
jp
xor
or
pop
shl
mov
std
fs
lahf
and
icebp
sub
mov
jne
mov
add
add
sub
mov
sarb
fidivrs
loopne
hlt
fsubl
pop
rcrb
adc
pop
xchg
push
add
sbb
jbe
and
mov
fs
cmp
aaa
sbb
call
inc
js
repnz
into
push
dec
push
xor
rolb
mov
xor
aam
dec
push
adc
push
sti
sbb
lods
xchg
ror
jl
or
push
out
mov
rorb
xchg
scas
out
arpl
pminsw
sbb
jo
sub
jg
movsb
cmp
or
sub
out
scas
in
sbb
and
push
loopne
xchg
ret
jmp
mov
mov
pusha
xchg
sarl
pop
or
pusha
xchg
mov
adc
mov
mov
out
adcl
in
pop
adc
test
jge
xor
or
or
mov
incl
repnz
outsb
push
popf
mov
or
insl
inc
mov
in
std
sbb
inc
xchg
sahf
push
sub
ds
faddl
dec
adc
aas
pop
sbb
push
mov
test
ss
mov
mov
cld
je
iret
ljmp
inc
aaa
stc
jne
adc
mov
and
mov
and
out
pop
insl
jne
push
dec
out
pop
jge
dec
inc
add
movb
mov
popf
or
in
sub
cmp
in
mov
out
mov
or
sbb
jmp
imul
cmp
mov
loopne
push
iret
lods
dec
lods
sub
jmp
pop
je
gs
sub
xchg
aam
mov
push
std
pop
push
push
lret
sbbl
mov
add
jo
aaa
cwtl
arpl
dec
add
push
push
cmpl
sbb
mov
test
fcom
ljmp
stos
pop
sub
mov
mov
ljmp
fwait
test
movsbl
jno
pop
std
out
daa
mov
mov
jae
jg
and
add
pop
push
ficoms
call
loop
adcl
inc
adc
test
fadds
cmp
call
shlb
jnp
xor
lods
xchg
leave
movsb
jecxz
adc
fs
push
fsubl
lcall
add
ret
pop
mov
dec
lods
xor
sub
das
sbb
out
sub
xor
cs
loopne
fists
sbb
xor
divl
sbbl
adc
xchg
ds
nop
pop
add
test
pop
jl
jecxz
add
insb
lcall
add
out
and
imul
ljmp
daa
push
es
xor
lcall
add
ds
or
addb
jge
lock
popa
mov
mov
sarb
ret
sub
scas
sub
xchg
fcmovbe
dec
test
cmp
sub
ret
int
loopne
es
jp
roll
cli
mov
int3
jle
stos
xor
rorb
out
adc
adc
shlb
jae
pop
lock
popa
inc
decb
add
ret
out
lcall
negb
push
fimull
mov
mov
cmc
arpl
loope
in
clc
pusha
ret
fcomps
jnp
mov
into
es
jbe
sub
and
outsl
pop
xor
mov
stos
stos
adcl
or
sbb
leave
jmp
cwtl
jmp
lret
test
sbb
lret
cltd
insb
pop
rol
push
xor
add
adcb
dec
sub
jb
mov
ljmp
mov
jp
fs
ja
repnz
push
rcrb
rcrb
fwait
pop
push
mov
jmp
lea
sub
jmp
leave
mov
cmp
in
aam
orl
call
cmp
insb
xor
adc
pushf
inc
dec
mov
mov
insb
dec
pop
loop
cmpsb
mov
mov
push
or
sarb
and
mov
mov
pusha
dec
pop
subb
stos
mov
adc
popf
add
xchg
adc
sub
mov
je
lods
js
repz
mov
test
ret
jecxz
lds
inc
jle
sub
out
outsl
in
cmpsl
push
push
arpl
cmpl
testl
or
mov
cwtl
sbb
jmp
mov
jae
push
lcall
movsb
dec
lods
adc
mov
or
and
sub
jl
sbb
pop
push
pushf
cwtl
adc
jne
dec
fwait
push
mov
mov
pop
adc
icebp
xchg
das
andb
fwait
mov
pop
push
or
pushf
add
dec
pop
movsl
dec
push
cmpsl
pushf
xchg
fadds
push
dec
push
rclb
xor
or
loop
lock
in
pushf
rcl
rolb
hlt
in
shrl
sub
dec
jp
ja
mov
pusha
cld
call
or
mov
ret
cmp
push
pop
ljmp
cmpl
push
adc
adc
or
or
inc
dec
mov
dec
push
cs
dec
movsb
dec
push
mov
dec
lds
mov
pop
jecxz
sbb
inc
cmp
in
push
xchg
incb
fmull
dec
lret
add
aam
push
test
lcall
and
mov
cmp
mov
and
mov
or
push
fisubrs
mov
or
scas
ficoml
mov
jle
test
inc
sbb
rcrb
or
shl
xor
sub
xchg
fcoml
insb
adc
mov
loop
mov
les
lock
shl
xor
sbb
in
jg
mov
mov
xor
faddl
shrl
push
jns
lret
out
scas
push
push
push
cmp
add
js
xchg
lea
repz
popa
xlat
sub
or
pop
add
shlb
inc
cmp
ds
add
in
xchg
dec
pop
or
pop
pop
mov
aam
les
push
cmp
ljmp
cmp
repz
push
pop
adc
pop
icebp
roll
mov
pop
jl
cld
or
jo
inc
fwait
sub
loop
ficompl
rcrl
jo
add
sbb
pop
inc
mov
push
nop
fdivr
leave
jle
inc
imul
mov
lock
xchg
das
pushf
and
ljmpw
pop
les
xchg
push
outsl
sbb
xchg
sub
fstpl
idivb
fs
xor
mov
enter
mov
mov
andl
add
adcb
loope
mov
iret
or
lret
xchg
mov
lret
ret
repz
shlb
call
stc
lods
fisttps
fldcw
jp
adc
or
sahf
pop
mov
xchg
in
mov
mov
add
sti
and
dec
dec
push
notb
and
push
adc
in
outsl
pop
clc
push
xchg
and
adc
ja
mov
out
cmpb
jmp
or
adc
sub
jb
push
movlps
add
aaa
repnz
movzbl
cld
xlat
mov
push
ljmp
cld
add
pushw
and
sbb
xchg
fiaddl
dec
xor
insl
xor
inc
lock
push
xor
fxch
bound
cmp
jecxz
dec
iret
std
fadds
xor
xchg
or
jg
lcall
xchg
xor
dec
ret
js
add
push
push
jo
out
hlt
xor
add
or
jle
pop
insl
sbb
mov
jns
jge
clc
inc
adc
in
iret
jb
and
add
fidivl
test
xchg
xor
push
sbb
push
fldt
test
fisubs
jge
mov
in
pop
lea
repz
mov
xchg
orb
stos
cli
xor
mov
sbb
add
outsb
pop
or
push
arpl
mov
mov
adc
into
inc
rcrb
and
xchg
out
xchg
and
sub
push
push
mov
sti
into
push
add
inc
loope
inc
movsb
push
outsl
push
dec
loopne
cwtl
inc
xor
dec
add
jecxz
lcall
jmp
xchg
add
sbb
push
and
clc
arpl
sub
ss
push
mov
fwait
cmp
fwait
call
add
or
bound
bound
aas
fcomp
cmp
in
jnp
xchg
sarb
inc
pop
adc
lods
es
cld
adc
sbb
mov
mov
adc
mov
xor
pop
das
xchg
inc
jecxz
fsincos
pusha
subl
loopne
mov
cmc
mov
cld
fisttpll
shrl
push
mov
inc
inc
loop
in
aad
sub
pop
movsl
push
test
mov
push
mov
lods
cmp
cmp
mov
mov
pop
outsb
ds
aam
cmp
into
pop
sub
pop
mov
and
push
rcr
ret
inc
mov
repnz
jno
je
pushf
popa
lret
adc
or
lods
ds
adc
mov
mov
lds
push
lock
fbstp
push
or
and
out
scas
movsb
sbb
or
xor
push
jnp
lock
push
dec
inc
enter
adc
loope
imul
xor
andb
sbb
rorb
cmp
imul
loop
adc
jo
mov
clc
cmc
repz
out
les
mov
andl
daa
nop
icebp
fldenv
xchg
mov
mov
cld
sub
mov
sbb
movsl
mov
push
pop
ja
ret
and
sub
daa
mov
push
cmp
es
idivb
je
add
rorb
test
in
fwait
add
dec
mov
je
jnp
jne
xor
cmp
cmp
dec
daa
push
aas
scas
cmp
jno
lock
push
mov
or
rcrl
add
sub
jecxz
sub
js
dec
dec
mov
push
xor
mov
push
inc
enter
arpl
hlt
jnp
aaa
jmp
fiaddl
jecxz
dec
adc
push
int
test
call
mov
adc
push
or
mov
inc
mov
push
pusha
lcall
adc
pop
ror
test
mov
xchg
aas
loopne
subb
sub
scas
mov
dec
mov
pusha
sub
popf
into
dec
cmp
mov
insl
mov
cmp
movhps
lcall
or
xor
jnp
xchg
inc
in
dec
loopne
push
pop
pop
mov
ss
aam
pop
cltd
mov
push
sub
imul
iret
add
test
das
int
pusha
push
push
xchg
xchg
jnp
mov
sub
psubusb
clc
xor
test
and
shl
ss
insb
xchg
sbb
mov
sbb
rcll
push
in
or
fmull
cmp
or
mov
bound
xchg
jae
mov
adc
addr16
loope
inc
lds
daa
xchg
pushf
pop
shlb
xchg
mov
cmpsl
fisubrs
js
adcb
cmp
dec
addr16
add
or
adc
jecxz
addr16
lret
cltd
pop
jb
stc
jge
sbb
push
cld
mov
sbb
mov
sub
gs
or
mov
pushw
sbb
add
cmpsl
xchg
xchg
dec
fsubrs
jae
cmp
push
push
pop
mov
sbb
push
call
xor
imul
ljmp
pusha
cmp
ffreep
sbb
mov
or
rolb
xchg
and
dec
aad
sahf
mov
insl
and
pop
or
pop
inc
ja
ret
data16
rcrl
out
sbb
mov
out
loop
xor
inc
mov
stc
mov
mov
mov
mov
test
xchg
mov
add
sbb
mov
mov
xchg
mov
push
scas
addb
inc
subl
nop
test
add
pop
pop
in
xchg
jl
pop
xchg
inc
push
mov
pop
int
aas
ja
scas
sahf
vdivps
aaa
cmpsl
pop
push
fsubrl
dec
popf
sub
add
push
out
or
lods
movsl
ficomps
pushf
pusha
push
mov
jmp
sbb
and
mulb
mov
mov
pop
or
mov
jp
shrb
jmp
ljmp
ss
dec
dec
shlb
gs
clc
fmull
sbb
add
jae,pn
mov
inc
loope
and
inc
fstl
xchg
fcompl
pop
mov
or
pop
ret
push
add
dec
xor
mov
add
jmp
adc
adc
out
mov
stc
test
rcrb
adc
adc
je
adc
insb
call
xor
pop
jb
jnp
std
inc
mov
je
adc
pop
mov
scas
imul
mov
jle
mov
sub
adc
imul
bound
push
add
and
and
xor
cmp
out
je
and
faddl
cld
and
testw
popa
js
mov
and
pusha
mov
jns
jl
lds
stos
inc
jo
sbb
push
leave
hlt
in
inc
cmp
js,pt
call
lods
mov
lods
call
ret
sbb
shll
enter
es
in
or
xchg
jle
jmp
xor
dec
loope
insb
lods
les
jge
and
dec
jno
out
fcmovbe
pop
ret
push
fadd
cmpsl
out
movsl
jo
xor
ficomps
sub
nop
mov
pop
loopne
inc
dec
xchg
jecxz
outsb
lea
faddp
push
iret
popf
lcall
add
pop
sbb
test
sub
lcall
notb
or
inc
cs
out
mov
mov
push
sbb
ds
pop
leave
fs
inc
lock
xchg
sub
test
sub
and
add
dec
push
idivl
call
add
cmp
mov
sarb
xchg
testb
add
pop
or
andb
jno
push
and
sbb
inc
fwait
sub
xor
inc
jmp
mov
mov
cmpsl
nop
fimuls
fcmovne
outsb
pop
inc
mov
rcll
movsb
sbb
cmp
mov
ljmp
daa
sub
xor
xchg
fimull
aam
cmpsb
xorl
xchg
push
dec
pop
pop
ss
sbb
loope
push
subb
jg
cmp
jecxz
mov
incl
notl
ret
ljmp
stc
jns
pushf
out
sbb
inc
or
dec
popf
add
mov
sbb
mov
repz
and
test
in
and
or
push
fwait
sbb
fsubs
xchg
xchg
pop
add
cld
push
dec
jmp
cltd
mov
xor
xor
mov
adc
mov
mov
xor
add
sbb
and
ret
sti
int3
mov
stc
jne
js
roll
adc
fcmovnu
jl
das
lret
mov
rorb
jge
mov
adc
sbb
ljmp
add
jg
push
mov
call
or
enter
dec
add
cltd
aad
daa
adc
push
or
scas
xor
mov
cmp
inc
shll
lods
sbb
bound
lahf
xor
inc
arpl
lods
mov
and
pop
loope
mov
jl
loope
jle
not
push
rorb
push
ljmp
bound
jbe
loop
mov
push
sub
adc
cwtl
mov
jge
sub
mov
adc
jae
jl
jae
push
pop
pusha
xchg
sahf
mov
dec
out
pop
sbb
push
push
lods
xchg
jp
pop
into
mov
ds
add
insl
mov
imul
jl
xor
mov
inc
les
or
ja
add
lock
push
mov
cld
inc
out
lds
ss
fsubl
nop
rorb
imul
scas
bound
pop
push
add
test
fbstp
addb
jmp
aaa
add
rolb
inc
shll
out
sub
fistpll
icebp
xchg
lea
dec
dec
sub
or
cmp
outsb
or
in
lock
js
out
test
cmp
push
mov
call
push
mov
adc
sti
insb
sahf
push
jge
sbb
je
jnp
mov
repnz
imul
outsb
pop
adc
aaa
mov
call
adc
mov
mov
dec
jge
push
scas
jle
add
inc
push
xchg
outsl
mov
mov
cmp
es
mov
dec
outsb
cmp
arpl
movsb
jecxz
nop
shl
or
mov
fwait
and
mov
xor
and
adc
jbe
xor
push
shrl
in
push
ret
xlat
cwtl
pop
ljmp
pop
dec
cli
inc
lods
daa
xchg
or
bound
push
pop
lods
jecxz
jmp
push
xchg
adc
xchg
test
and
mov
inc
jo
loopne
mov
or
pop
xchg
inc
push
xlat
cmpsb
or
repz
cmp
std
stc
loopne
inc
and
xchg
sub
insb
ss
aaa
mov
sahf
repz
xchg
sbb
jo
test
icebp
cmp
inc
and
add
dec
clc
push
shlb
loopne
bound
inc
jmp
inc
mov
cltd
into
xchg
or
push
outsb
fsubrs
push
scas
rorl
add
jne
add
sbb
insl
inc
jmp
ljmp
loope
fcmovb
and
popa
dec
push
jp
jecxz
movsl
jp
adc
pop
dec
cmp
xor
mov
push
mov
pop
shlb
push
pop
or
jo
sbb
dec
lods
loope
adc
mov
pusha
inc
fldl
push
add
lahf
fimull
mov
icebp
adc
pushf
and
outsl
mov
jp
stc
shlb
decb
sbbb
sub
inc
cmp
inc
and
mov
xorb
cmpsl
and
add
test
iret
add
mov
adc
mov
pmaxub
jl
icebp
cmp
jae
inc
jo
sbb
es
mov
jo
es
jge
jp
pusha
ret
pop
cmpsb
push
cmp
mov
loop
lret
mov
push
add
outsl
push
pop
sub
out
add
mov
push
inc
scas
pop
mov
jmp
ret
xor
insb
nop
loop
push
or
aas
fwait
mov
orl
lock
xor
cmpsl
dec
rclb
fwait
dec
negl
jnp
push
or
scas
xor
sub
clc
lcall
cmpsb
loopne
xlat
push
mov
rolb
int
push
rep
paddusb
test
mov
and
pop
cmp
cmp
aad
push
mov
adc
or
incb
daa
push
push
loopne
js
pop
sub
adc
push
jle
repnz
cld
xor
int
jge
mov
sti
je
sbb
and
inc
inc
add
add
cmp
mov
mov
or
mov
dec
fisubrl
xchg
outsb
xchg
loopne
jmp
jne
dec
xchg
and
call
sub
jp
or
push
jmp
scas
ds
insl
cmc
mov
je
roll
sbb
dec
or
rclb
daa
pop
push
fwait
sub
mov
js
mov
inc
add
dec
test
sub
cmp
inc
and
sbb
mov
sub
imul
push
pop
sbb
mov
jle
outsl
add
xrelease
push
stos
leave
das
bound
fdivl
or
loop
push
push
cmp
mov
gs
xchg
sbb
mov
push
mov
xchg
sub
sbb
call
dec
and
add
and
add
scas
xorb
and
je
xor
int
das
insl
imulb
cmpsb
jge
cmp
push
popa
movsl
rol
adc
cld
sub
ret
adc
outsl
add
fimull
mov
sbb
mov
add
push
fldcw
pop
jb
and
cld
sbb
shll
jmp
dec
push
cmp
aaa
mov
imul
popf
push
lods
gs
pop
ret
inc
js
push
lea
mov
and
add
scas
or
push
ljmp
adc
test
das
int
aaa
sarl
push
sub
loope
pop
jg
or
jne
push
pop
aam
jb
sbb
mov
fcoms
loopne
mov
jns
add
clc
pop
clc
inc
cmp
pop
mov
cmp
adc
pusha
je
incb
dec
push
ja
xor
dec
and
daa
or
pop
or
scas
jb
pop
mov
inc
mov
outsb
xlat
arpl
jl
hlt
in
fldcw
cli
xor
jp
push
fwait
jo
jo
jne
mov
lods
sbb
inc
inc
pop
mov
or
push
sub
test
pop
push
add
testb
xor
test
sub
mov
mov
mov
add
hlt
int3
ds
out
sbb
ss
rclb
xchg
mov
adc
aas
mov
mov
cmp
cltd
fsub
mov
mov
cmpsl
pop
dec
mov
fildll
mov
sub
sbb
outsb
mov
jns
sub
lahf
ret
jp
outsb
js
imul
mov
cmpsb
nop
push
mov
mov
icebp
push
inc
jge
rorb
lahf
pusha
je
add
pop
mov
xor
and
jg,pt
mov
les
aaa
addb
or
cmp
mov
add
push
sbb
test
mov
sbb
jmp
lcall
and
into
dec
mov
sbb
in
mov
ret
inc
xchg
lret
call
pop
mov
xchg
sub
cmc
jmp
xlat
mov
xor
dec
jnp
aad
push
jp
dec
iret
xchg
adc
and
push
sti
test
adc
mov
test
ja
add
push
ljmp
and
fdivrl
out
sub
sbb
xchg
cmp
adc
ret
jle
aad
ds
and
push
negb
add
fldl2e
jo
ds
fdivrs
inc
adc
sub
adc
shlb
aam
into
movsb
fdivs
sbb
fwait
and
scas
inc
subb
test
mov
mov
mov
inc
sub
mov
jbe
xor
leave
inc
inc
loop
adc
cmc
aam
cltd
lock
xchg
sub
out
out
fs
mov
xchg
push
call
mov
in
push
scas
rclb
imul
cli
aas
and
add
sub
popf
lods
adc
repnz
ja
pop
cmp
fcomps
push
rclb
jno
mov
dec
jo
clc
adc
imul
xor
lret
sbbb
rcrb
mov
jmp
xchg
sub
pusha
test
fwait
sub
ret
add
mov
lds
mov
xchg
ds
fimull
out
push
clc
or
jge
ss
adc
insl
je
out
push
rcll
fidivs
and
mov
cmp
call
stos
xchg
jns
mov
in
jle
dec
pop
sub
insl
clc
outsb
stos
sbb
lret
movb
push
call
jge
fsubl
inc
imul
addr16
xor
add
mov
mov
arpl
sbb
fadd
out
xor
jbe
or
adc
js
xchg
jecxz
push
xor
sahf
adc
adc
dec
mov
sbb
adc
mov
imul
daa
xor
lock
sbb
repz
lods
xchg
push
jge
jl
adc
or
rcrb
test
pop
dec
inc
sub
cmp
mov
inc
in
inc
and
jle
push
arpl
testw
or
dec
dec
dec
pop
dec
inc
cld
cmpsl
repz
imul
arpl
jp
lcall
and
enter
ret
les
bnd
fcomip
shrb
fsubr
dec
imul
dec
incb
ret
pop
fcmovbe
push
jne
les
stos
jno
jnp
or
movsb
movsl
mov
fstl
fsubrs
ljmp
iret
aas
sbb
hlt
cmp
lock
xor
xchg
and
xchg
stos
pop
push
sbb
daa
dec
fimull
cld
ljmp
add
lahf
and
pop
pop
arpl
or
pop
jo
les
lahf
or
push
ud0
popf
push
mov
push
iret
sbb
cmp
xor
js
cmpsb
mov
loopne
mov
jg
test
mov
push
and
mov
ss
test
inc
daa
jecxz
adc
push
addr16
cmpsb
fsubp
in
xchg
mov
add
mov
inc
fmull
sbb
jg
pop
push
dec
scas
sub
push
xor
fcomps
mov
sbb
or
mov
xchg
sub
pop
xor
sub
lods
inc
sub
add
xor
mov
push
pop
sbb
and
inc
pop
push
cmpsb
add
jbe
push
add
mov
mov
cwtl
and
insb
inc
push
clc
std
xchg
test
call
push
dec
or
aam
push
jns
jno
xchg
push
and
hlt
inc
push
or
pusha
in
lcall
hlt
or
pop
fdivs
adc
inc
mov
push
popa
scas
push
dec
push
lock
push
cmpsl
in
pop
test
inc
popa
add
mov
fwait
xchg
mov
push
inc
insb
sbb
arpl
sub
cmpsl
pop
sub
test
mov
fcmovnbe
sbb
aaa
stos
inc
stos
jle
xor
addr16
fadd
cmc
dec
mov
daa
fbstp
xchg
out
cs
jo
jno
aaa
stc
pusha
shrb
pop
loop
loop
push
mov
push
call
cltd
loop
cmp
out
and
fdiv
mov
scas
mov
test
mov
aam
sbb
sbb
in
aam
mov
cmpl
add
mull
outsl
cld
test
mov
push
pop
or
inc
mov
aam
sbb
mov
jne
popa
add
into
insl
cmp
xlat
xor
jo
jp
push
lds
mov
dec
inc
das
lock
push
pop
jge
mov
mov
in
jg
or
push
cmpsb
adc
sarb
push
mov
push
stc
push
push
adc
outsb
and
pop
inc
rcll
xchg
mov
adc
sbbb
mov
inc
test
lret
popf
aaa
popw
cs
mov
inc
xchg
and
jg
loope
stos
mov
stos
mov
jae
xor
xlat
loopne
call
sub
pop
cmp
iret
mov
lock
xor
xor
stc
mov
movsb
aam
js
xchg
push
int3
push
inc
add
xchg
xor
push
dec
scas
push
mov
imul
bnd
fxtract
je
sbb
cmc
es
rorl
mov
fnstcw
adc
jb
push
or
cmp
imul
gs
ds
hlt
jl
orl
gs
lods
outsb
out
out
ss
pop
test
movl
lods
imul
lahf
mov
add
dec
add
cs
push
cmp
loopne,pt
les
mov
mov
inc
push
jp
lods
lock
xchg
aad
ja
ja
test
shl
or
shlb
mov
fwait
add
pop
jo
enter
inc
clc
jl
fdivrs
sbb
je
outsl
lods
adc
pop
cwtl
dec
insb
xchg
test
shl
pop
push
psllq
stos
mov
or
std
jnp
inc
mov
stos
fmulp
sbb
les
push
lds
pusha
mov
xor
jle
mov
xor
inc
inc
sbb
mov
ret
dec
lahf
jl
mov
and
mov
test
push
xchg
mov
xchg
popa
mov
add
lock
test
or
cmpl
out
int
or
repnz
dec
aam
call
mov
mov
enter
aaa
sahf
inc
mov
dec
insl
push
loope
and
fisubs
fnclex
das
push
mov
jns
mov
icebp
sbb
sarb
inc
sub
pop
xchg
lea
or
lcall
es
inc
insb
lock
lcall
mov
cmp
out
imul
subl
fimull
push
inc
loope
xor
dec
je
addr16
ss
call
jo
push
pusha
sbb
ja
sbb
adc
mov
add
inc
xchg
sub
jle
push
leave
add
and
add
imul
pop
jl
dec
adc
fstps
mov
das
xor
cmp
push
fnstcw
pop
cmc
je
xchg
push
out
add
std
loop
hlt
test
ds
push
inc
cmpsb
hlt
rclb
xchg
idivl
mov
dec
jecxz
test
push
aas
mov
dec
ds
pop
pop
adc
in
aas
movsb
xlat
xchg
ret
in
or
inc
fisttpll
sub
mov
imul
dec
int
pusha
and
daa
dec
mov
sub
scas
and
mov
mov
dec
mov
rorl
xchg
or
je
cmp
in
movsl
xor
outsl
mov
xchg
into
push
mov
jle
xchg
push
repnz
lods
adc
popa
mov
and
out
mov
stc
sbb
sbb
or
cmpb
lods
ds
repnz
lock
cmc
mov
pop
add
aad
inc
adc
sti
scas
mov
dec
adc
add
xlat
pop
in
inc
pop
mov
sbb
mov
xchg
mov
dec
mov
dec
xchg
iret
loopne
cmp
sarb
shll
mov
mov
ret
dec
add
add
xchg
inc
lea
loop
and
mov
jecxz
add
shrb
inc
push
mov
aas
sub
int3
ret
mov
clc
and
scas
add
pop
sbb
cmp
test
jno
and
mov
dec
lret
sub
or
add
sub
lahf
fcoms
or
adcl
cmp
mov
xor
or
lods
imul
xchg
loope
sub
push
les
adc
inc
fstl
mov
push
jl
cmpsb
jmp
leave
or
jl
cli
fmuls
call
cltd
sub
hlt
xor
nop
fs
loopne
pusha
cmp
or
add
inc
jge
out
pop
or
add
add
push
ret
pop
js
cli
jl
out
mov
les
shll
loop
push
cli
mov
dec
mov
jmp
push
aad
rol
inc
lret
xor
or
ret
ljmp
adcb
adc
jns
sub
imul
mov
inc
outsb
jl,pt
pusha
add
sbb
subb
sbb
adc
in
and
or
sub
mov
es
cmp
inc
loope
insl
sub
xchg
js
pop
xchg
test
jg
pop
aaa
and
cmp
dec
mov
mov
ror
xchg
inc
xchg
jbe
jne
cmpsl
in
out
push
ficoms
shrb
xchg
lods
test
dec
imul
invlpg
pop
jbe
aad
insl
test
fldcw
std
data16
arpl
mov
cmpsl
aaa
xlat
push
sub
fisttpll
xchg
jg
cwtl
mov
sbb
aaa
push
fmuls
ret
xor
dec
xcrypt-cfb
cmpsl
and
dec
add
mov
push
pop
mov
dec
je
lret
inc
dec
outsb
loope
jne
fmul
pop
push
push
pop
out
or
daa
stc
sub
aas
notl
std
sarl
je
mov
mov
mov
pop
call
cmc
popa
or
mov
pusha
adc
mov
movsb
call
movsl
add
fmuls
stc
inc
or
cmpsb
adc
inc
mov
xor
sub
ds
mov
cmp
cltd
inc
pop
mov
pop
push
cmp
cmp
mov
sbbl
rcrl
rol
push
jg
jb
loopne
test
in
call
fldlg2
pop
xlat
cmc
pop
mov
fs
pusha
xchg
xchg
add
jne
cmpsb
pusha
inc
das
lock
mov
es
inc
jecxz
std
pop
xor
xchg
mov
sbbb
or
ljmp
lods
ret
mov
adc
adc
cltd
call
xchg
test
repnz
adc
mov
adc
lods
dec
sbb
insl
paddb
inc
xor
ss
cmpl
mov
ss
dec
sub
jnp
lock
push
xor
fadd
add
cltd
inc
sbb
dec
in
xor
sub
cmpsb
adc
mov
mov
or
test
sbb
or
orb
test
bound
xor
push
cmpl
jp
test
cmp
and
ja
icebp
ja
cld
test
push
sbb
push
sub
or
pusha
cmp
and
and
clc
mov
ss
mov
fs
jne
xchg
or
add
xchg
xor
jo
add
xchg
imul
bound
dec
lea
lea
xchg
or
paddd
xor
shlb
mov
stos
jnp
or
bound
push
aas
sbb
or
outsb
cltd
sbb
in
inc
xor
inc
loop
call
js
stos
push
jno
xchg
add
clc
xor
mov
aaa
push
test
or
push
enter
loopne
xor
clc
cmp
mov
mov
dec
sbb
jne
cmp
sbb
mov
ret
or
sarl
cmp
loopne
mov
sub
lds
pop
mov
pop
iret
stos
ret
mov
push
fistpll
popa
and
into
jbe
push
das
xchg
mov
sbb
mov
inc
cmpsb
bound
sbb
stos
movsl
nop
push
fs
xbegin
xor
adc
sbbb
push
xsavec
jp
fcoms
mov
xchg
ja
jmp
ljmp
pop
fisubs
inc
aas
ds
xchg
lock
inc
test
xchg
push
or
ret
cmp
push
pop
mov
mov
aaa
loopne
outsb
or
cli
xchg
stos
out
adcb
int3
mov
rcl
nop
jle
and
and
dec
mov
xchg
cmc
cmc
hlt
dec
push
cli
sub
in
addl
pop
outsb
rolb
out
sbb
add
inc
jb
add
pushw
dec
dec
mov
scas
lret
adc
icebp
sub
mov
scas
push
scas
pop
or
xchg
leave
sbb
cli
sub
xchg
push
loop
sarb
push
dec
adc
rcl
enter
and
in
nop
cmp
lock
xor
and
lods
mov
dec
mov
addl
jnp
mov
sub
mov
adc
in
pushf
mov
fdivrl
mov
sub
ficomps
sbbb
inc
out
push
inc
out
adc
add
jge
inc
pop
adc
xlat
jmp
inc
test
pushf
dec
outsb
out
decl
push
arpl
fidivs
test
jno
mov
je
jne
cmpsl
xchg
movsb
cmpsl
dec
shrd
std
stos
in
or
out
daa
inc
cmc
pusha
push
cmpsb
sbb
pop
fmulp
addb
pop
stos
xchg
scas
cwtl
pop
jmp
fs
push
add
push
pop
stc
leave
mov
es
stos
mov
scas
mov
jae
jg
js
mov
subb
jp
gs
mov
nop
push
mov
test
or
fs
or
nop
dec
mov
adc
shlb
cmp
rorl
fwait
cs
or
cmc
ljmp
mov
sub
dec
inc
xchg
push
sub
push
mov
adc
inc
in
paddq
and
ret
and
movsl
push
scas
pop
inc
test
pop
or
das
insb
push
add
scas
lock
bound
out
imul
stc
xor
into
pop
pop
adc
add
fisubl
outsl
clc
outsb
jae
jo
adc
or
lock
mov
gs
pop
xor
mov
cwtl
inc
enter
fcoml
ja
cmp
pusha
sub
jecxz
out
aaa
cld
jmp
push
leave
sbb
pop
and
int
xorb
push
mov
pushl
mov
mov
in
nop
mov
mov
cmpsl
pop
outsb
cld
cltd
pop
data16
mov
mov
fcmovbe
jp
add
je
mov
icebp
xchg
inc
mov
mov
add
stc
pop
xor
pop
mov
sbb
pop
jo
jns
push
js
imul
dec
jmp
jle
sbb
xor
push
addr16
stos
repz
les
je
dec
xor
sbbb
jp
xor
cwtl
add
dec
clc
shrb
in
es
push
mov
add
pop
lock
and
inc
aaa
movsl
test
jp
divb
test
pop
les
xchg
daa
inc
jecxz
and
loope
pop
push
sub
jp
je
sub
stc
mov
xchg
repnz
ja
jb
das
push
add
in
les
sbb
hlt
mov
lods
and
int
ret
mov
inc
push
adc
or
and
cs
mov
mov
mov
stc
ret
lea
fisttpll
inc
andb
arpl
pop
sarl
cmc
mov
into
out
decb
pop
bound
mov
and
jecxz
mov
inc
mov
movsb
cs
inc
sbbb
or
inc
push
xor
push
jns
xchg
and
lock
subl
push
aam
push
jo
ljmp
pop
or
mov
jecxz
push
fwait
negb
outsb
sbb
divb
xor
mov
aad
push
ret
jo
nop
adc
mov
dec
and
mov
and
xlat
rol
lock
cmp
inc
loopne
push
push
or
test
jp
fcompl
add
bound
jecxz
pop
lea
adc
out
jne
testl
test
jbe
cmp
iret
xor
shrb
xchg
xchg
movsl
cltd
jmp
or
mov
inc
mov
mov
arpl
add
mov
cmc
ret
push
adc
push
push
mov
mov
in
aaa
pop
fsubrs
andb
inc
xor
mov
pusha
sbb
sbb
ja
rcrb
mov
lahf
adcl
dec
fistps
sbb
cmpb
rorl
std
test
xchg
jne
stc
jae
les
sbb
and
push
cmp
insb
xchg
mov
sub
subb
sub
movb
xor
movsb
cmp
cmp
add
lods
cmp
test
sub
daa
ljmp
out
mov
xor
ja
add
and
das
push
pop
orb
lods
dec
std
inc
fs
into
push
cmp
xlat
loope
inc
add
jl
hlt
sbb
ljmp
imul
push
fstpt
jg
inc
out
xlat
add
mov
mov
sub
cs
jns
dec
and
les
arpl
enter
test
dec
lods
sub
out
cmp
cmpsl
inc
std
repnz
mov
sub
test
xchg
add
add
pop
mov
hlt
outsl
hlt
pop
xchg
xor
cmp
mov
cld
adcl
ret
icebp
loopne
andl
scas
outsl
and
into
jl
out
mov
sub
push
inc
inc
daa
fildll
mov
push
sti
pop
and
push
popa
jns
jg
xor
dec
dec
popa
push
inc
test
scas
adc
xchg
xchg
cmp
scas
lea
dec
mov
dec
and
data16
fistps
mov
mov
sub
ljmp
dec
mov
adc
xchg
ror
gs
clc
cwtl
mov
js
push
mov
lods
mov
ret
dec
sub
pop
shll
cwtl
push
pop
jbe
cli
addr16
xchg
xor
add
fidivl
mov
and
push
cmp
loop
rclb
into
mov
sub
imul
repnz
lcall
push
div
xorl
les
mov
dec
lahf
les
pop
inc
mov
je
push
outsb
pop
xchg
scas
loop
pop
mov
sbb
ret
inc
pop
lds
and
inc
push
aaa
xor
adc
rcll
push
std
xor
jl
inc
or
rolb
pop
cli
cli
dec
pop
ljmp
cld
fdivrs
mov
xchg
rcrl
sub
outsb
sbb
push
lcall
xchg
mov
loopne
movsb
test
and
mov
fimull
mov
ss
lcall
xchg
lock
aas
or
sahf
push
int3
bound
jg
pop
loopne
dec
sbb
inc
xchg
adc
push
sbb
sub
bound
leave
lds
xor
jp
inc
mov
mov
add
mov
into
push
add
clc
test
int3
iret
roll
hlt
mov
sbb
xchg
jp
cmp
xchg
jno
mov
jge
rolb
mov
ret
incb
add
adc
test
sbb
push
xchg
outsb
aam
push
cmp
nop
jns
cwtl
rorb
sbb
jnp
fs
addl
lods
dec
pop
mov
push
rorl
rcl
or
shlb
iret
jp
imul
dec
pop
mov
and
and
pop
add
adc
sub
mov
cmc
and
ds
sub
xor
sahf
rcrb
xor
outsl
mov
int
or
add
stos
ffree
and
ja
xor
mov
xchg
jmp
and
inc
lea
pusha
pop
xor
add
pushf
jns
jo
jg
and
call
ja
xchg
inc
jg
jge
es
movsl
mov
ret
icebp
xchg
enter
aad
je
inc
scas
xchg
or
xchg
xchg
mov
dec
mov
mov
fdiv
add
and
pusha
mov
cld
mov
popf
pop
sahf
mov
inc
leave
dec
mov
cmp
pop
pop
push
stos
jo
or
xchg
mov
clc
push
lods
hlt
xor
jl
inc
test
dec
push
inc
pop
or
hlt
lahf
mov
add
sbb
cmp
cmc
cmp
daa
xlat
inc
add
mov
pusha
dec
add
and
and
or
imull
jge
pop
add
xor
mov
dec
adc
stc
imul
add
in
dec
decb
popa
push
cld
sbb
mov
ljmp
aaa
sub
and
jecxz
bound
sbb
adc
stos
xchg
daa
fisubrs
fdivs
jne
xchg
xor
gs
add
mov
lock
pusha
cmpl
mov
daa
inc
mov
mov
sbb
stos
xor
fs
add
mov
mov
xor
push
adc
in
jp
cmpsb
and
and
cmpsb
es
add
icebp
cmp
test
cmp
sahf
ds
inc
mov
pop
xchg
shll
and
mov
mov
add
pop
inc
mov
jp
mulb
test
lds
outsb
adc
or
mov
clc
jge
loop
xchg
adc
in
ss
or
xchg
sbb
adc
xchg
xchg
xchg
lods
enter
and
loope
pusha
sub
aas
cld
add
das
jge
insb
xchg
sbb
sub
dec
icebp
test
add
lahf
and
stc
mov
imul
mov
lock
lods
and
test
inc
shrl
fldcw
push
mov
pop
mov
movl
mov
andb
das
sbb
lods
mov
add
mov
mov
xchg
xchg
push
fldcw
fwait
inc
mov
push
add
sub
add
shrl
push
jbe
add
pop
cmp
fcmovne
or
inc
pop
pop
scas
rcrl
loopne
add
cmp
mov
pop
mov
loopne
jl
push
sub
cwtl
dec
inc
adc
jmp
dec
or
ss
or
js
shr
into
cmp
in
sar
adc
outsb
cltd
push
ljmp
xlat
or
mov
or
pop
sbb
xor
adc
pop
inc
subb
movsb
pop
pop
loope
xor
aad
pop
mov
shll
jg
and
ret
pop
or
icebp
cmpsl
mov
fadd
outsl
add
xchg
int
fidivs
cmp
popa
cmp
je
add
scas
mov
xor
cmpsl
xchg
add
in
xor
xor
js
push
push
jl
hlt
shrb
xor
mov
sub
mov
pop
test
push
int
mov
ljmp
filds
mov
cmp
sbb
jecxz
mov
orb
mov
sbb
scas
or
idivb
jo
push
pop
pop
inc
lret
push
dec
or
rep
push
cmp
cwtl
add
xor
adc
das
clc
aad
mov
bound
dec
jecxz
andl
mov
stos
push
jge
push
and
pop
xchg
test
sbb
clc
sbb
xor
out
aad
insl
leave
loope
jbe
lahf
inc
sbb
jl
or
jmp
push
in
dec
push
gs
out
mov
es
add
lret
enter
dec
pop
mov
movsb
dec
push
lock
dec
fsubrs
cmp
mov
inc
sub
xchg
daa
mov
fwait
mov
mov
add
jecxz
jb
addb
push
cmp
in
push
push
clc
or
cs
pop
sbb
leave
imul
or
je
inc
push
pop
mov
dec
jg
xor
push
xor
jae
add
dec
sti
out
push
lea
sbb
push
adc
mov
jp
mov
add
shll
ja
mov
mov
mov
dec
js
dec
fxch
adc
rolb
shr
rcll
xor
jle
push
aam
rorl
mov
xchg
jb
sti
inc
add
add
fimuls
jmp
or
jle
adc
lds
push
inc
pop
loop
jg
lahf
sub
mov
sub
loopne
movsl
divl
aad
in
push
dec
lahf
enter
stos
cli
xor
popa
push
and
or
pop
lret
ss
mov
mov
mov
mov
test
data16
shl
mov
das
xlat
jp
push
inc
into
sub
cmpsl
cmp
aam
or
out
jmp
xchg
pop
sbb
add
sub
shl
pop
dec
jl
cmp
inc
lret
lock
nop
lahf
push
jbe,pt
jl
push
pop
loop
sbbl
jecxz
sar
adc
sarl
sbbb
and
pop
rclb
dec
pop
nop
pop
xchg
fdiv
loop
repz
mov
jp,pn
cld
xchg
mov
mov
inc
mov
inc
jg
and
add
pop
call
cwtl
pusha
loopne
in
pop
inc
sbb
mov
cltd
sbb
mov
pop
adc
inc
repnz
adc
jmp
sbbb
mov
lods
scas
stos
cs
out
mov
adc
mov
push
cmc
stos
cmp
loope
cli
push
add
ror
movsb
push
push
stc
test
add
call
sbb
aaa
xor
bound
and
pushf
sbb
adc
ror
and
js
xor
sbb
stc
inc
into
jnp
inc
inc
bnd
imul
xchg
sbb
ret
or
cmp
mov
mov
clc
mov
or
mov
cmp
gs
ljmp
dec
sbb
xchg
jne
or
incl
jl
rolb
sbb
adc
pop
leave
clc
jnp
jp
out
test
fidivs
in
retw
dec
push
xchg
mull
xchg
and
sub
jae
cld
rolb
xchg
loop
mov
jmp
dec
scas
inc
sbb
mov
mov
sub
incl
add
mov
xor
lea
push
pop
jge
mov
adc
push
jno
adc
imul
dec
shl
imul
out
shlb
mov
sub
add
mov
inc
cmp
leave
test
ds
cs
cmp
push
dec
pop
jne
pop
sub
mov
cli
mov
inc
xchg
add
mov
les
mov
cmp
adc
test
loop
test
iret
fdivs
mov
mov
call
xchg
inc
xor
cwtl
mov
js
subb
push
inc
push
maskmovq
notl
sbb
xor
jo
sbb
mov
out
mov
adc
lods
stos
cmp
or
dec
adc
add
cli
cli
mov
adc
pop
cmpsb
int
jl
mov
push
inc
cmp
jbe
jo
fiadds
sub
bound
jmp
ret
adc
sbb
fildll
pop
push
and
or
mov
popf
repnz
fmull
inc
out
push
loopne
or
add
dec
repz
lea
cs
fisubs
push
adc
dec
or
mov
pop
add
sbb
ss
mov
jbe
sub
jl
in
and
out
stos
or
pop
je
inc
sub
lods
ficoml
push
cli
push
xchg
mov
add
adc
pop
adc
adc
repnz
jo
dec
jne
fmull
out
scas
lret
shll
pop
jp
cltd
xchg
cmpsb
mov
cltd
es
mov
pushf
fidivl
hlt
pop
loope
lock
adc
adc
cmp
dec
pop
cltd
sub
es
xchg
lds
and
cld
imul
imul
loope
jp
rcr
sbb
mov
std
scas
xchg
bnd
dec
js
jbe
inc
js
jns
adc
pcmpgtw
mov
cli
add
pop
dec
jae
jp
or
or
out
push
loopne
icebp
pop
xlat
xchg
cmp
insl
and
mov
aad
pop
loopne
leave
sar
mov
xchg
or
mov
jl
mov
mov
dec
addl
inc
push
aaa
and
push
pop
xchg
mov
outsb
jge
adc
mov
test
nop
xchg
iret
or
insb
test
dec
clc
push
push
mov
je
jg
rorb
and
adcl
test
mov
sbb
cli
mull
fmull
mov
out
sub
sbb
xorl
add
push
pop
add
enter
push
and
mov
inc
repnz
std
inc
iret
nop
jbe
clc
aad
xchg
mov
inc
pop
aaa
ds
pop
mov
iret
dec
or
or
mov
loope,pt
inc
sarb
push
adc
xchg
test
dec
jg
pop
add
and
sbb
push
ret
into
xchg
inc
push
push
in
fwait
call
jg
inc
inc
stos
xchg
mov
push
dec
and
dec
pop
lds
mov
sbb
fs
cmc
xor
leave
cmp
sbb
inc
push
icebp
pop
cld
jno
loop
mov
sub
cmp
inc
aaa
push
xor
mov
pop
clc
add
scas
adc
ds
in
fdiv
sub
mov
add
push
pusha
push
jno
lods
into
movsl
popa
sub
lcall
pushl
push
lods
ficoms
sbb
inc
add
and
or
fnstenv
js
nop
xor
add
call
scas
bound
push
sub
jp
xchg
push
add
push
xchg
mov
lea
mov
dec
pop
clc
mov
pop
ja
ja
into
repz
xchg
arpl
add
lock
xchg
jbe
mov
fbstp
sbb
mov
pop
or
out
call
daa
sbb
pop
lcall
mov
sbb
push
mov
into
pop
cmp
cmp
add
adc
pop
mov
push
xchg
cmpsb
jge
push
lea
push
popf
ret
mov
insb
sub
addr16
ljmp
pop
inc
ljmp
lahf
out
cmp
jae
dec
jge
jne
mov
outsb
bnd
lret
xchg
sub
cs
and
les
gs
sub
cli
adc
xchg
and
lods
fcmovu
xlat
pop
mov
jecxz
adc
dec
xor
lods
mov
leave
dec
pop
mov
mov
lahf
fmulp
sub
mov
cmp
pop
or
sti
mov
leave
and
pop
movsb
into
push
popf
xchg
rol
push
mov
sti
enter
mov
clc
xchg
ret
movsb
jl
jp
mov
or
inc
aam
xchg
and
jle
rep
mov
ja
test
push
push
mov
lret
add
testl
ljmp
cmp
cs
enter
data16
xchg
fcmovnbe
stos
adc
leave
sub
jns
pop
sbb
les
xor
gs
inc
mov
pop
lahf
mov
movsb
cli
nop
and
cld
push
out
dec
sub
push
fstpt
xchg
or
sub
add
or
shlb
call
pop
mov
jno
mov
addl
hlt
push
and
push
ss
xor
insb
cmpsb
testb
sbb
test
mov
mov
lret
aas
rcll
xor
imulb
in
mov
jmp
adc
xor
mov
mov
clc
rorb
popl
repz
es
fwait
inc
push
mov
push
pop
jbe
or
ljmp
popf
rol
pop
outsb
adc
jb
dec
sbb
jnp
push
addl
mov
rcrb
cmp
xor
pop
cmp
pop
sbb
popa
add
mov
push
divb
push
aaa
stos
xchg
int3
jno
pop
sbb
test
mov
or
std
xor
mov
jbe
invd
test
lods
dec
push
xlat
xchg
and
test
mov
mov
xchg
and
pop
mov
mov
push
fnstcw
loopne
mov
sub
test
dec
xchg
bound
mov
push
out
lret
push
xor
mov
es
js
xchg
icebp
inc
adc
cmp
cltd
movsl
ldmxcsr
loopne
or
push
adc
sbb
jecxz
inc
or
pop
inc
pop
mov
pop
mov
jno
ds
mov
jnp
xchg
push
jo
cs
pop
mov
pop
sarb
enter
add
cmp
push
hlt
lock
jbe
dec
xor
lret
push
arpl
loope
push
sub
dec
popf
scas
cld
mov
loope
pop
dec
inc
jo
movsl
jp
lods
xchg
jae
mov
js
test
mov
cmp
or
test
imul
dec
iret
dec
ret
sahf
lret
aas
sub
sub
dec
dec
repz
push
xchg
jmp
call
stos
sbb
add
adc
rclb
fsubp
inc
inc
frstor
jne
shrl
outsb
sub
sbb
int3
fildl
sarb
jp
and
mov
dec
loop
das
sub
std
lods
lods
mov
ret
out
dec
lock
adc
mov
dec
loope
adc
pop
add
pop
lods
xchg
cmpsb
in
aas
out
xchg
mov
and
pop
sti
test
iret
lahf
jg
dec
scas
cwtl
add
mov
fs
sbb
adc
adc
mov
mov
xor
sub
test
mov
mov
push
dec
outsl
and
mov
adc
int
fdiv
sbb
in
sub
push
jmp
outsb
lds
sbb
ljmp
sbb
bound
in
bound
and
jle
xlat
fmull
sahf
hlt
add
pop
fimull
push
ljmp
rcll
mov
rorl
fimuls
pop
enter
gs
clc
or
jns
ret
call
mov
or
repnz
loopne
or
and
and
es
add
push
sahf
pop
shrb
rcr
insl
out
pop
fildll
cmp
nop
stos
jle
in
xchg
adc
aas
and
imul
and
jnp
xor
or
jecxz
js
pinsrw
cmp
xchg
nop
pop
sub
rorl
push
fisttpl
mov
int3
loop
push
fs
cmp
inc
rorb
repz
das
fsubl
fmul
xor
out
imul
shlb
daa
cmp
xor
cmp
ja
arpl
pop
cmp
test
in
shl
mov
mov
jg
imul
es
icebp
and
ficoms
loopne
hlt
mov
xorl
push
outsb
and
inc
addr16
inc
rorl
push
insb
mov
roll
fimuls
lahf
adc
jmp
mov
pop
add
xlat
sub
cs
add
clc
repnz
loopne
mov
iret
adc
sub
add
xor
shrl
into
mov
push
js
dec
push
or
stc
rorb
out
outsb
mov
add
lods
push
enter
inc
jmp
addr16
mov
movsl
adc
inc
ret
cs
cmp
xor
mov
pop
pop
inc
adc
or
and
push
push
out
pushf
popa
add
or
sarl
push
lock
inc
inc
lahf
xchg
lock
dec
ja
adc
in
sub
rol
push
adc
or
sub
push
fildll
mov
cltd
inc
mov
mov
adc
xor
js
in
fucomi
sub
push
dec
jne
fistpl
adc
or
or
ss
decb
and
cmp
fldl
mov
lcall
std
jl
je
sub
test
dec
sub
sbb
in
pop
sub
dec
adcl
jmp
xor
pop
push
and
and
dec
les
mov
clc
testl
scas
or
outsl
adc
sbb
loope
mov
dec
iret
inc
xchg
pop
lret
mov
shlb
pop
popa
out
xor
add
mov
data16
xlat
mov
movb
or
and
movsb
sub
cld
sub
pusha
lock
cmpsl
out
push
lock
and
xor
fnstcw
mov
add
dec
xor
mov
jecxz
in
fimull
push
jo
les
mov
dec
clc
cli
lea
orl
scas
mov
jae
xlat
cmp
andl
and
mov
orl
xchg
testb
loopne
dec
js
fwait
add
add
hlt
sub
mov
dec
lods
and
dec
xchg
pop
push
nop
fimuls
hlt
aad
mov
inc
test
adc
insb
daa
or
sbb
xchg
in
dec
add
add
add
int
xchg
scas
xor
push
ret
pop
sti
dec
mov
aad
dec
rcr
mov
xchg
rclb
aad
fiadds
jno
jb
outsb
loope
addl
clc
int
jl
int
xchg
inc
mov
mov
sbb
mov
movsl
add
inc
mov
rcl
mov
repz
cwtl
inc
insb
fistps
fstpt
imul
clc
pop
jns
clc
add
popf
add
add
sub
xor
jmp
add
mov
jecxz
fsubrl
stos
inc
lea
test
mov
nop
jle
dec
out
jne
sbb
cli
sarb
xor
loopne
loop
mov
adc
sub
or
adc
faddl
adc
pop
loop
jge
adc
mov
push
out
dec
sub
inc
loopne
add
sub
sbb
ja
xchg
dec
popa
loopne
lret
loope
pusha
inc
add
scas
jo
adcb
pop
xor
cmp
fistpll
das
sbb
add
or
addb
pop
or
adc
or
pop
adc
lods
mov
jbe
daa
pop
cmp
js
add
mov
les
mov
mov
dec
in
aad
xlat
incl
iret
fisttps
jno
js
arpl
popf
xchg
push
mov
xchg
outsb
push
js
scas
dec
xor
xchg
jno
call
je
cmp
jl
and
cmpb
fmul
test
jle
hlt
cmpsl
add
bound
jb
stc
icebp
mov
ret
movsb
repnz
cld
mov
leave
movsl
mov
sbb
ror
mov
sti
jo
push
enter
jmp
pop
cs
rclb
sbb
repz
push
sar
shlb
cld
fdivs
jbe
sub
out
negl
mov
outsl
push
loopne
rcl
cld
jbe
and
xor
adc
pop
lret
aam
jmp
out
in
dec
fstpt
mov
inc
dec
lret
adc
jnp
pushf
insb
pop
out
add
loopne
cmp
aad
aas
stos
inc
clc
pusha
add
aad
sbb
add
sbb
lock
and
sub
add
test
je
lret
jp
cli
ja
ja
lea
mov
jo
sub
mov
push
mov
shl
jge
push
jp
push
test
popf
jne
mov
mov
add
stc
inc
outsl
mov
rol
sub
aas
inc
or
adc
in
fcoms
mov
add
inc
ss
stos
cmp
test
pandn
xor
lods
clc
adc
imul
or
sbb
push
scas
push
outsb
faddl
cltd
dec
cmp
cltd
xchg
mov
adc
cs
cmpsl
sub
cmp
adc
add
pop
pop
popa
adcl
test
and
cld
in
scas
add
sbbb
fstp
pop
dec
stc
sbb
mov
push
outsb
sub
hlt
sbb
cs
lahf
cmp
inc
enter
jnp
sti
sub
jecxz
mov
insb
mov
aam
mov
pop
addr16
or
lock
push
cmpsb
in
inc
pusha
out
or
mov
dec
push
test
mov
mov
xor
clc
add
sub
movsl
mov
ljmp
jo
popa
jl
incb
xor
dec
call
das
int3
pusha
movsb
pop
add
in
or
call
jo
adc
or
sbb
jno
icebp
lret
cmp
rclb
pop
fcmovb
icebp
mov
sti
add
cmp
dec
mov
sbb
xor
inc
xchg
outsb
insl
in
push
pop
mov
cli
les
mov
push
mov
mov
inc
addr16
or
mov
mov
in
jno
cld
mov
lds
out
jle
xchg
cmp
mov
add
mov
aas
lcall
or
mov
pop
mov
push
and
push
in
sbb
jne
sub
es
scas
pop
pop
inc
mov
movsb
cmp
push
mov
aaa
jo
xchg
push
leave
mov
dec
pop
mov
mov
push
mov
or
adc
fs
ret
repz
xlat
cs
cli
dec
inc
xor
icebp
lret
push
ret
str
mov
aad
popf
push
loop
jp
dec
mov
xchg
bound
mov
mov
mov
sub
jbe
lds
push
movsl
hlt
adc
inc
push
ljmp
lods
jmp
dec
je
adc
mov
aad
bound
inc
imul
test
cmc
enter
inc
out
ljmp
push
jbe
enter
mov
sub
jmp
mov
push
out
sar
loope
pop
in
daa
dec
push
cmp
pusha
mov
inc
sbb
mov
mov
jle
repz
cli
fnstcw
lods
sti
insb
cmpsl
xor
dec
add
sbb
inc
sbb
addb
adcl
je
fstl
fidivrs
pushf
jno
outsb
loopne
icebp
mov
jle
jmp
push
addl
mov
sbb
jne
dec
fwait
fs
add
inc
aad
loope
inc
bound
icebp
ficompl
push
mov
scas
mov
jge
dec
pop
mov
scas
sub
dec
sbb
pop
mov
lods
xchg
int
lcall
sahf
pop
add
adc
add
fcmovne
lahf
jbe
xchg
mov
mov
je
inc
push
sbb
repz
mov
add
imul
add
xchg
xor
sbb
aam
fwait
lahf
les
rolb
cltd
enter
in
insb
xor
outsb
fsubrs
ja
mov
sbb
shlb
outsb
and
sti
and
popf
in
call
jae
pop
fistps
jb
cmp
cmp
movsl
hlt
aas
lret
cld
jo
dec
dec
cli
fists
les
mov
aam
and
hlt
xchg
cmp
std
scas
push
push
sub
fwait
les
sbb
popa
or
test
fldt
es
shl
pop
or
add
cmp
add
mov
lcall
stos
outsb
clc
sti
jg
loop
and
inc
inc
jp
inc
dec
mov
fwait
inc
mov
jge
pop
mov
ss
and
sbb
inc
pop
adc
loopne
aad
lahf
mov
push
fidivrl
cli
fs
pop
fldenv
pop
mov
xor
mov
scas
fldl
mov
pop
mov
scas
imul
out
cmc
inc
jl
sbb
mov
cmp
icebp
or
cmp
lcall
mov
pop
jl
scas
sub
adc
sub
testb
xchg
dec
test
inc
and
add
loop
cmp
movsb
cs
mov
pop
xor
fcoml
xchg
sahf
les
jbe
jecxz
fidivrs
and
dec
xchg
inc
jge
lret
pop
or
inc
outsl
lods
iret
adc
fcom
inc
push
mov
rclb
je
or
test
sbb
test
test
fisubrs
xchg
xchg
sbb
inc
addr16
push
fsubr
pop
addr16
xor
out
push
ret
and
mov
and
add
add
pop
je
fwait
dec
add
aas
mov
sbb
or
sub
imul
mov
roll
sbb
xchg
cmp
mov
and
adcl
imul
cld
push
add
cs
outsl
lock
add
push
outsl
pop
adc
test
push
adc
movsb
test
add
dec
pop
icebp
js
pop
mov
add
push
js
shl
je
mov
mov
bound
adc
sub
inc
add
insl
into
test
pop
cmpl
sarl
and
data16
nop
mov
xor
pop
fs
mov
cmc
and
roll
jg
loopne
les
out
xchg
ret
sbb
hlt
jge
aam
int3
sbb
and
xlat
xchg
aam
pop
fdiv
xchg
ficoml
adc
scas
xchg
xchg
sub
test
call
add
sub
ljmp
xchg
in
jnp
pop
sbb
inc
imul
and
jp
push
out
mov
xchg
lods
push
mov
sbb
jle
mov
shrb
mov
mov
mov
pop
fidivrl
hlt
mov
xor
call
xchg
sahf
cmp
outsl
pop
ret
nop
andb
mov
mov
out
aaa
dec
testl
lods
mov
mov
jo
fistpll
dec
or
fwait
aas
pop
ljmp
in
or
je
and
aad
xor
loopne
dec
mov
mov
out
testb
shrb
add
bound
push
ss
xor
xchg
xchg
int3
test
pop
out
jp
mov
mov
ret
rclb
jg
pop
into
sbb
lds
xor
ret
mov
test
sbb
and
and
pop
push
xchg
rcr
ljmp
mov
pop
cltd
sub
lds
and
shrb
arpl
std
pop
test
mov
daa
out
sbb
loope
mov
inc
add
jae
lods
or
test
inc
sbb
push
aam
xor
cmp
addr16
push
cmp
jl
in
test
add
test
mov
inc
or
mov
dec
xorl
xor
cmp
mov
cmovns
lahf
xor
bswap
cld
icebp
mov
and
movlps
xor
lock
cwtl
movsb
addl
inc
clc
dec
jne
inc
into
testl
jl
xor
or
test
hlt
cltd
xchg
jo
mov
lods
lds
lret
mov
inc
nop
sahf
frstor
roll
xor
out
cmp
leave
call
loop
pop
enter
int3
test
lods
add
pop
ljmp
push
and
pop
shrb
mov
sahf
outsl
ss
aam
out
inc
mov
and
xchg
inc
dec
jmp
add
cmp
clc
add
push
out
xor
mov
add
mov
xor
call
mov
or
adc
cmp
mov
insl
leave
mov
and
sbb
jl
xchg
mov
jge
cli
jg
ja
imul
and
push
xchg
dec
cmpsl
rcll
xor
or
in
leave
adc
inc
push
adc
sub
push
mov
cwtl
mov
sbb
cmpb
arpl
jo
clc
jl
mov
lret
test
xor
xchg
add
lahf
sbb
jb
aam
jns
rclb
loopne
test
pop
dec
sub
gs
sub
ret
inc
mov
rcl
cmp
jo
mov
jecxz
xchg
jbe
push
push
jo
jle
ffreep
popf
outsb
test
adc
loope
test
mov
out
lock
adc
test
out
insb
jge,pt
mov
add
std
stos
ret
and
xor
adc
pop
adc
jno
adc
sub
lock
xor
ret
dec
mov
inc
je
xchg
inc
cmp
mov
fildll
daa
dec
pop
sub
hlt
adcb
and
jae
rol
push
in
push
mov
or
dec
sub
add
cwtl
test
inc
jl
test
cmp
rclb
jecxz
xchg
pop
in
dec
dec
push
cltd
lods
adc
je
dec
sbb
add
mov
push
xchg
popa
jno
or
push
adc
daa
clc
fsub
dec
cli
pop
push
add
adc
jg
push
inc
push
das
test
cmp
cld
xor
cmpsb
les
dec
pop
loope
mov
pop
dec
dec
or
pop
enter
or
test
jns
xchg
ret
repz
jns
insl
fstl
lret
and
lret
fcoms
sub
popf
jge
add
and
jg
sbb
sub
pinsrw
clc
fdivp
jbe
dec
inc
inc
pop
es
xlat
jp
lds
xor
sbb
lods
push
fnstcw
pop
movsl
mov
sahf
push
stc
loope
addb
jo
push
shl
in
xlat
add
add
push
cli
je
jns,pt
push
inc
aaa
stos
and
testb
mov
std
or
push
pop
inc
pop
out
xchg
cli
aas
dec
lahf
jno
xchg
adc
mov
push
stos
outsl
movsb
adc
or
inc
jmp
pop
add
mov
leave
cmp
mov
filds
outsb
mov
pop
mov
jns
rol
dec
aam
xchg
out
mov
cmpsb
hlt
adc
addl
and
je
jno
mov
outsl
inc
mov
loopne
cmp
push
add
iret
xor
jo
or
xchg
ficompl
les
mov
add
rcrl
enter
std
adc
xchg
mov
mov
stos
incl
mov
inc
jl
roll
call
or
sti
jge
dec
aas
rorb
aad
orb
negb
dec
mov
add
sbb
pop
pop
jo
fcomps
out
insl
lock
or
and
fwait
pop
lret
xchg
lmsw
pop
fsubl
cmp
pop
push
mov
pop
sbb
dec
lret
mov
nop
mov
icebp
and
and
mov
fidivrs
jg
sub
daa
loopne
pop
cmp
sub
jg
or
push
nop
add
ja
loop
inc
xor
lcall
int
mov
cmp
in
xchg
adcb
imul
xor
dec
jl
mov
es
push
push
xor
sub
add
jl
fmul
jp
xor
cmp
adc
adc
adc
shrb
test
aas
mov
jg
stos
jb
ret
jne
xchg
and
and
and
popa
fdivl
jle
add
push
sub
pop
testb
into
push
aad
jle
jbe
test
movb
mov
clc
mov
jmp
sbb
cwtl
add
ror
stos
cli
fsub
push
in
or
icebp
xchg
cmpb
sbb
pop
sti
lds
icebp
push
cwtl
push
xchg
imul
mov
scas
into
mov
xor
dec
push
mov
outsl
push
sbb
jg
dec
andb
mov
pop
outsl
mov
xor
dec
inc
jo
pop
aaa
jnp
es
mov
and
outsb
jl
movsb
and
in
dec
jp
xor
pop
in
repz
pushf
jmp
int3
ja
inc
inc
push
sub
mov
jo
fistpll
cmp
test
inc
hlt
jo
aad
inc
sbb
mov
dec
movb
inc
ss
jmp
pop
jle
ds
add
push
xchg
push
adc
ja
test
test
stos
push
aaa
sbb
lds
mov
mov
adc
sahf
loop
and
mov
cs
in
mov
call
cmp
sahf
mov
out
add
dec
lds
and
add
cmp
mov
mov
test
cltd
mov
rorb
jae
cs
mov
xor
mov
ret
mov
movsb
mov
clc
push
add
out
hlt
gs
add
mov
inc
push
lret
mov
es
inc
and
loope
xchg
mov
daa
mov
movsl
iret
cs
test
je
dec
adc
cmpsl
js
mov
shl
lock
scas
push
jle
add
dec
into
pop
adc
xchg
loop
or
jge
icebp
insb
mov
or
stos
fdivr
les
fs
jmp
cmp
hlt
movsl
xchg
ficompl
es
movsl
push
outsb
push
clc
adc
repz
dec
js
repz
jp
std
sar
movsl
add
adc
pop
sub
subb
rolb
ficoml
sarl
push
add
ss
or
fstl
xchg
lods
xor
cmc
and
xchg
dec
sub
fmul
jle
adcl
xor
outsl
mov
pop
cmpb
std
dec
jg
jne
xchg
sub
pop
test
minps
xchg
cwtl
loopne
jo
or
jno
push
mov
sub
dec
adc
mov
gs
jmp
test
cmc
in
rorl
sti
enter
inc
bound
lods
push
std
push
xchg
data16
inc
dec
lock
xchg
lds
jns
jp
std
loop
test
in
outsl
pop
jl
stc
sub
cwtl
jp
lret
ljmp
out
test
jns
icebp
in
push
and
hlt
sbb
and
fistps
sbb
aas
xlat
push
mov
xchg
fsubs
mov
sub
mov
cmp
add
mov
mov
fmul
push
scas
xchg
jno
ljmp
pusha
push
aas
inc
stos
lods
outsb
enter
fiaddl
jle
pop
pop
lcall
sbb
and
xor
data16
out
pop
mov
sbb
pop
xchg
and
test
push
and
sub
or
test
scas
dec
mov
aaa
mov
out
pop
stos
es
push
mov
outsl
lret
jbe
and
movsb
xchg
nop
imul
in
or
das
insl
dec
inc
xchg
jp
call
or
pushf
mov
mov
loope
out
ret
adc
add
sbb
mov
in
add
pop
xchg
xchg
stos
repnz
cltd
or
aaa
fs
cmp
or
cmp
inc
orb
int
pop
dec
fcompl
loop
mov
clc
sub
loopne
dec
ljmp
outsb
push
sti
mov
mov
sub
pop
incl
sub
sub
sbb
push
inc
push
push
stos
mov
xchg
mov
popa
fsubl
frstor
inc
push
jo
into
lock
arpl
mov
push
add
stos
lret
insb
mov
sbb
fincstp
iret
pop
ret
push
leave
xor
and
or
xor
les
rcl
das
xor
jl
es
popf
push
or
test
sbb
repnz
mov
and
mov
out
mov
jg
loope
mov
dec
inc
fidivrl
sub
cmpsb
sbb
push
aam
enter
stos
inc
mov
cmp
dec
iret
ljmp
test
inc
mov
mov
xchg
pop
and
das
xor
jb
add
pop
cmp
in
xor
xchg
dec
out
mov
sbb
push
pop
fsubp
cmc
jmp
repz
mov
pop
cmp
jbe
and
jg
jbe
ret
xor
cmp
push
iret
pop
mov
push
cli
jp
xor
jle
ret
adc
fwait
adc
pusha
dec
je
xor
cld
or
mov
jns
cmp
xchg
dec
or
jp
push
les
cmpsb
fdivs
push
adc
mov
pop
cmc
inc
jae
je
pop
mov
test
xor
jg
inc
mov
sub
fimull
mov
mov
add
pop
or
sbb
inc
and
cmp
sub
inc
xor
inc
pop
push
xor
mov
out
and
pushf
add
dec
jno
lods
lea
dec
out
push
xchg
addr16
mov
sub
xchg
and
push
add
xchg
xchg
fwait
shl
push
stos
clc
ficomps
push
push
rorl
shrb
jbe
dec
push
inc
inc
dec
out
push
push
or
jg
pop
add
and
pusha
or
stos
push
daa
push
daa
jp
add
rolb
and
js
lret
jp
mov
pop
int
add
inc
lods
sbb
mov
lds
mov
cmp
rolb
loope
cmc
mov
test
insb
clc
mov
mov
out
adc
or
and
rolb
jmp
pop
insb
fldl
or
jmp
cmp
inc
data16
cmpsb
popf
or
add
or
pop
jge
push
cmp
sbb
mov
and
repnz
push
mov
fidivl
aam
in
in
mov
adc
mov
cmp
inc
or
sbb
and
dec
movsb
mov
xchg
xor
pop
shll
imul
repz
lods
jnp
jo
bound
mov
and
jecxz
pop
shl
sbb
stos
jle
add
mov
cmpsb
scas
shlb
pop
andb
mov
fsubrs
scas
cmc
shll
mov
and
icebp
gs
jo
and
mov
push
sbbl
push
bound
mov
mov
push
pop
cli
xchg
ljmp
jge
push
pop
jl
test
into
mov
inc
and
pop
dec
movsb
adc
mov
inc
or
mov
xchg
jb
movsl
cs
cmp
push
outsl
lods
jne
ret
sub
or
jae
outsb
mov
sbb
loop
adc
push
cmc
jns
lods
ret
popa
add
test
fwait
clc
popa
xchg
pop
lea
inc
ja
and
mov
push
sub
dec
pop
insl
or
fmuls
and
adc
mov
sbb
out
mov
call
pusha
rol
out
lret
jbe
cmp
inc
mov
push
sub
insb
dec
pop
mov
lahf
cwtl
aad
sarb
dec
and
test
push
mov
pcmpeqw
jnp
xchg
pusha
jno
adc
sti
les
inc
jl
sub
sbb
packsswb
push
lret
mov
push
clc
pop
jmp
pusha
push
cs
push
dec
jb
ds
cmc
addr16
sbb
cmp
mov
mov
or
test
scas
fimuls
and
mov
fwait
lcall
add
add
jge
xchg
cmp
imul
sbb
mov
sbb
cld
xor
dec
das
mov
je
or
add
aas
inc
subl
jmp
push
ret
decb
xchg
lods
lret
fstl
sub
mov
xlat
movsb
shlb
lods
inc
shl
push
sub
icebp
fstpl
movl
inc
shll
adc
jle
cld
jle
add
push
dec
push
outsl
jmp
sbb
rorl
outsb
fildll
jnp
sarb
inc
xchg
mov
xchg
in
lds
or
loop
fdivp
cmpsl
cmp
and
fs
and
testl
push
xchg
mov
loopne
psraw
fidivrl
push
call
inc
incb
data16
and
xor
cmp
je
xchg
frstor
pop
iret
hlt
add
lret
mov
pop
movsl
sbbb
jp
pop
icebp
adc
xor
pusha
in
ds
inc
clc
rolb
lret
push
mov
pop
daa
jnp
add
push
cli
loopne
mov
addr16
rcll
hlt
movsl
sbb
mov
std
cmpsw
test
and
icebp
fucomip
cmp
sub
ja
mov
mov
rcr
inc
pusha
push
mov
lods
push
push
int3
push
dec
xlat
add
push
or
adc
push
mov
shl
pop
add
push
test
loopne
add
mov
fiaddl
icebp
loopne
stos
lds
cltd
xchg
jl
insb
dec
out
enter
in
xlat
inc
clc
clc
dec
inc
jp
pop
clc
jo
cmc
push
sub
cmp
cmpb
sarl
fisubs
movsb
or
lea
addr16
mov
arpl
mov
stos
and
jl
push
or
nop
xchg
xor
es
rcll
inc
lods
pusha
mov
insb
adc
cmp
jb
in
xor
mov
test
adc
mov
aas
pop
push
out
aam
subl
push
ret
mov
adc
sbb
fucomip
arpl
or
hlt
inc
call
loopne
lea
jge
lcall
adc
dec
repnz
xorb
mov
inc
imul
or
cwtl
xlat
xor
push
lock
push
dec
movsb
add
sub
or
adc
cmp
and
adc
scas
iret
xchg
mov
ret
push
or
inc
ja
jl
pusha
pop
adc
stos
push
cmp
push
es
sti
mov
and
fistps
in
mov
insl
test
leave
rorb
in
imulb
or
fnsave
cwtl
rclb
sub
lahf
test
outsb
iret
push
loope
movb
sub
push
lret
hlt
jns
mov
scas
jg
push
pop
mov
lret
pop
mov
jb
mov
pop
or
push
push
mov
pop
ror
and
mov
push
cld
aas
mov
iret
add
xchg
sahf
inc
cmp
inc
loopne
imul
lods
loopne,pt
mov
xor
sbb
cwtl
divb
cmpl
repz
sub
out
add
sub
mov
daa
adc
insl
mov
daa
std
outsb
push
sub
ss
lcall
daa
iret
and
cmp
add
movsb
jle
jp
or
es
sub
js
jle
scas
movsb
inc
pushf
add
stos
fs
jb
fwait
rolb
mov
push
dec
sbb
or
pop
inc
and
or
pop
pop
mov
pop
sahf
in
push
jbe
mov
adc
push
mov
or
cmp
inc
cld
stc
inc
cmp
ljmp
cld
mov
sub
inc
outsl
push
add
sub
add
push
jnp
out
mov
sub
dec
or
xchg
dec
rolb
enter
testl
push
out
iret
cmpsl
pop
xor
sbb
scas
lods
out
icebp
cmpsb
push
sti
pop
mov
scas
add
mov
or
xchg
cmp
data16
sbb
mov
lahf
xchg
dec
xlat
inc
mov
push
jo
js
mov
and
lcall
sti
test
pop
jp
fwait
cld
add
add
pop
inc
or
jo
mov
das
sbb
fdivs
repz
pop
jg
sbb
lea
out
lea
test
xorb
jb
shufps
mov
sub
shrb
loop
aam
pop
test
mov
jno
xor
fs
push
jo
cmpsb
ret
scas
cld
scas
inc
out
mov
adc
adc
or
stos
mov
jl
roll
xchg
in
mov
push
lahf
pop
jp
cs
loop
sbbb
sub
mov
icebp
dec
int3
test
lahf
push
mov
ds
pop
pop
loope
mov
xchg
push
lock
xchg
sarb
sbb
mov
sti
bound
mov
sub
push
mov
ret
add
das
popf
push
add
inc
pop
movsb
mov
int3
mov
lret
jg
sarb
rolb
mov
push
add
pop
inc
mov
out
movsb
pop
push
aad
dec
push
lret
sub
xchg
push
pop
sub
aad
pop
shlb
hlt
adc
inc
ja
inc
dec
jmp
jle
push
pop
pop
xchg
jo
loop
lods
gs
inc
push
outsl
and
std
mov
mov
or
jp
sub
pushf
adc
gs
mov
jno
xchg
insb
cmp
pop
js
dec
arpl
cmp
jnp
add
xchg
int
les
or
jno
in
notl
aaa
loopne
lock
int3
sbb
cwtl
rclb
push
fisubrs
lods
jle
popa
push
les
add
cmpsb
inc
cmp
es
popf
enter
mov
orl
shrb
setp
imul
pop
cli
mov
push
bound
in
add
pop
mov
xor
inc
inc
pop
adc
xor
dec
outsl
movsb
pop
dec
rep
pop
jge
pop
mov
jo
js
fildll
ret
pop
cmc
arpl
in
adc
rcrb
pop
les
dec
fmul
dec
mov
cmp
enter
xor
push
repz
fimuls
ljmp
push
out
rolb
das
mov
in
push
push
xor
mov
mov
nop
sarb
sbb
xchg
stos
and
pop
jb
sbb
add
add
adc
int3
push
jns
notl
sbb
aad
and
sub
out
roll
push
imull
pop
add
add
imul
mov
daa
jecxz
push
add
loopne
mov
call
leave
xchg
loop
sub
rolb
dec
loope
imul
add
mov
mov
data16
sub
imul
iret
add
or
into
lods
jno
imul
ret
pop
outsb
pushf
push
pop
xchg
nop
jnp
pop
jno
fidivs
incb
pop
sbbb
popf
hlt
dec
mov
jae
mov
or
mov
rcl
jbe
cmpsb
aad
jns
sbb
sbb
or
cmpsb
ficoml
lock
jo
fsubs
xchg
pop
or
dec
pushf
roll
js
add
sbbl
mov
inc
sbb
addr16
clc
std
fisttpl
movsb
sbb
lds
pop
and
ds
out
les
dec
sub
movsl
mov
aaa
ret
or
jecxz
and
jae
add
pushl
pushf
jl
out
fildl
xchg
rcrl
pop
lret
mov
fcmovbe
test
hlt
imul
jne
ds
imul
mov
or
imul
stos
ret
fsub
jmp
and
push
aam
or
lea
psubd
jnp
mov
bound
add
xchg
push
mov
inc
movsl
into
or
aam
or
lahf
xor
mov
or
sbb
mov
push
test
outsb
push
mov
sbb
mov
jle
data16
shll
push
adc
inc
mulb
les
pop
mov
cwtl
test
jne
mov
rolb
mov
repnz
push
lcall
sub
iret
adc
inc
inc
fldcw
mov
fisttpl
pop
es
rcll
adc
push
dec
nop
push
mov
inc
mov
movsb
rorl
and
adc
dec
or
enter
push
rcrl
pushf
ret
loope
mov
jmp
sbb
imul
fdivrl
and
roll
inc
sbb
adc
je
inc
push
add
and
pop
push
insb
je
fdivrl
cmp
out
sbb
clc
cli
push
mov
add
sbb
pop
rclb
adc
stc
dec
loopne
imul
xlat
add
stos
adc
loope
inc
mov
add
dec
xor
mov
insb
mov
clc
ss
into
jo
sbb
outsb
lea
cltd
add
aas
cld
pop
mov
mov
rorb
mov
pop
adc
clc
sti
xor
or
popa
jmp
icebp
xchg
push
inc
cmpsl
test
hlt
add
enter
mov
sub
imul
cmp
scas
test
loopne
mov
out
xchg
mov
mov
inc
inc
mov
pop
enter
je
clc
stc
add
inc
cmp
cmp
jmp
scas
xchg
cmpsb
inc
repnz
xchg
aam
nop
and
lret
mov
outsb
add
jmp
aaa
pop
jmp
js
push
inc
out
loopne
mov
push
mov
lods
jg
loopne
mov
and
add
or
xor
adcl
stos
gs
jp
outsb
pop
mov
mov
adc
sbb
fldt
or
sbb
adc
add
cmp
pop
adc
lods
sbb
les
scas
xchg
in
ret
rclb
scas
xor
jge
mov
fs
pop
cmp
dec
and
aad
negb
jmp
add
pcmpeqw
or
outsb
les
or
ret
in
mov
sub
ds
arpl
cltd
push
mov
test
sub
leave
frstor
mov
cmp
xchg
test
fcmove
cmp
and
jnp
ror
aaa
push
sbb
jns
mov
dec
push
stos
fistps
rcrl
bound
in
push
adc
shld
cmpsb
sarb
add
add
lods
mov
dec
sbb
test
jge
jp
outsb
enter
data16
push
mov
mov
into
ss
jbe
in
inc
repnz
add
add
imul
inc
movl
cmp
insb
adc
cwtl
jns
scas
xorb
sbbb
mov
add
ds
hlt
daa
push
jae
in
inc
xchg
test
test
xchg
xchg
adc
sarl
sbbb
cmp
add
mov
mov
in
gs
xchg
sbb
and
pop
dec
test
pop
les
in
pop
push
sarl
or
loopne
loop
popf
push
inc
pop
data16
inc
sub
inc
jl
push
cmp
inc
pushl
pmuludq
adc
les
fnsave
pop
cmpsb
outsb
scas
push
cld
clc
push
repz
cmpsl
dec
pusha
pop
jmp
sub
outsb
sbb
clc
add
hlt
and
xchg
xchg
ljmp
out
xor
push
pop
js
loopne
cmp
in
test
ja
dec
loope
shl
dec
adcl
imul
ljmp
inc
jl
cmp
mov
fs
rol
push
xchg
aad
mov
out
rorl
lret
pop
jo
imul
xor
sbb
aad
inc
mov
mov
arpl
aad
in
pop
loopne
adc
mov
inc
mov
pop
divl
adc
adc
cmp
adc
inc
cmc
mov
incl
add
pop
fisttpl
jecxz
movsb
mov
jmp
imul
mov
inc
arpl
adc
sub
cmp
push
stos
dec
push
jo
adc
icebp
sub
sbb
pushf
sahf
scas
cmp
jo
and
pmaxsw
and
or
push
push
outsl
sti
stc
dec
aad
orb
das
popa
pushf
bound
sarb
loopne
and
das
adc
adc
in
insb
aad
cvtps2pd
pop
pop
mov
add
mov
pop
shlb
sbbb
pusha
dec
clc
dec
xor
xor
rolb
mov
mov
out
in
daa
mov
dec
cmp
add
cs
clc
pop
sbb
leave
mov
shrl
mov
fcmovnb
out
pop
inc
aam
add
mov
rcll
icebp
repnz
inc
add
fnstcw
push
mov
mov
lods
test
shr
jp
mov
push
insl
notb
in
fs
pop
cld
outsl
mov
adc
push
cmpsl
xchg
jnp
imul
xor
leave
shrb
inc
push
aaa
lods
adc
ss
add
fdivrl
or
repz
push
insb
lahf
xchg
adc
jmp
lock
jle
faddl
pop
mov
inc
xchg
dec
incb
add
or
cmpsl
sub
and
mov
push
call
lds
rcrb
and
inc
or
fwait
lock
dec
push
fcmovu
ljmp
push
mov
lods
inc
repnz
aam
xchg
sub
lret
ret
repnz
or
push
lods
adc
fldcw
lret
mov
sahf
push
aad
adc
dec
dec
repz
xor
out
mov
inc
jge
dec
jge
pop
adc
in
dec
sbb
jo
in
mov
rclb
cld
enter
fwait
mov
paddusb
xchg
pusha
mov
cmp
dec
in
out
mov
push
subl
xor
jg
sahf
rol
adc
sahf
ljmp
lock
push
scas
inc
fsub
out
sahf
out
ret
les
cmp
cmp
cli
je
xchg
clc
stc
pushf
bndstx
or
dec
mov
mov
jbe
add
ds
movsl
add
and
mov
js
sub
fistpl
scas
mov
adc
scas
imul
or
sub
or
cwtl
in
cli
test
ret
and
mov
mov
or
test
imul
pop
ret
and
es
scas
movsb
push
test
jo
clc
mov
jge
cpuid
jb
test
push
cmc
dec
scas
xchg
outsb
add
pop
aaa
or
in
inc
xchg
mov
jmp
dec
gs
ret
inc
and
add
clc
or
rolb
or
push
cmp
xchg
and
xchg
add
sub
test
xchg
mov
pop
sbb
xor
mov
jo
lret
or
inc
aas
rorl
pushf
fdivr
cmpsl
mov
adc
stos
orb
or
adc
xchg
out
mov
je
add
cmpsb
movsb
adc
or
push
shl
and
fcom
add
mov
dec
jnp
mov
sahf
pop
cli
mov
pop
inc
fstl
cwtl
sub
stos
push
sbb
fwait
hlt
loopne
mov
add
test
movl
and
mov
xchg
in
sbb
pop
fldl
xor
lret
jae
sbb
inc
call
and
lcall
add
mov
jl
loop
inc
xchg
je
dec
add
mov
push
mov
pop
dec
in
cltd
cmpsb
aas
lret
cmp
int3
jns
out
and
sub
fcmovbe
clc
xchg
sbb
dec
inc
cwtl
aas
mov
imul
pop
mov
inc
inc
push
ret
jp
push
jbe
pop
test
ret
xchg
pushf
pop
mov
mov
push
xor
jnp
inc
pop
jmp
jle
mul
wrmsr
test
scas
out
jns
decb
inc
sbb
sub
xchg
xchg
mov
dec
xlat
inc
mov
ret
fsubs
cmpsl
dec
adcb
cmpsb
or
xlat
rcrb
pop
dec
jnp
outsl
pop
stc
mov
sbbb
mov
push
ds
loopne
pop
not
sbb
cltd
enter
cmc
outsl
jo
loope
aad
jnp
je
arpl
adc
xchg
pop
inc
stc
pop
xor
push
pop
pushf
xchg
fdivs
cmp
inc
popf
or
adc
cmp
jmp
adcb
xchg
imul
push
add
add
mov
xchg
pop
lock
aad
cmp
movsl
sub
adc
xor
int
ljmp
mov
adc
push
test
jnp
sub
loope
push
jae
xor
xor
daa
js
nop
out
setns
xchg
sahf
sbb
pop
mov
mov
xchg
loopne
popf
popa
sub
jecxz
push
mulb
xchg
icebp
out
aam
inc
mov
add
inc
aad
jge
xor
in
jle,pn
cmp
xor
popf
pusha
mov
jmp
cs
push
lcall
ret
jae
inc
sbb
push
mov
dec
lods
or
pop
icebp
add
or
inc
or
jge
jp
push
lock
mov
push
mov
add
sub
jo
testl
cwtl
sub
sub
sbb
insb
lret
sub
outsb
imul
jns
cmp
shlb
pop
cmpsb
aad
adc
adc
out
adc
mov
imul
leave
mov
push
icebp
pop
cmpsb
cld
mov
in
in
adc
sahf
rolb
mov
cmp
arpl
shl
sub
ss
mov
out
js
arpl
inc
int3
loope
push
xor
sar
mov
lock
sbb
mov
push
adc
sbbl
subb
out
sbb
es
cmp
fucomip
dec
outsb
fists
cmc
fnstenv
push
add
pop
arpl
test
das
mov
insl
or
jp
cld
mov
adc
sub
and
popf
jecxz
inc
pusha
in
es
ret
pushf
in
push
mov
les
push
fisubrs
repnz
adc
pushf
ret
or
call
punpckhdq
push
pop
add
aam
jb
lahf
psrlq
cli
push
sbb
loopne
adc
inc
jmp
loopne
inc
lods
sbb
xchg
into
pop
xor
xlat
cld
rolb
lock
adc
lahf
les
insb
outsb
mov
adc
cltd
or
mov
mov
xor
xchg
push
pop
jmp
push
sbb
adc
scas
icebp
pop
push
mov
nop
lods
adc
cmp
loopne
adc
lcall
pushf
xchg
or
imul
push
mov
shrb
lcall
or
subl
jnp
pushl
or
ss
push
mov
mov
cmpl
xchg
add
mov
jne
js
lock
sbb
sbb
dec
int
inc
daa
or
mov
and
mov
cmp
mov
and
mov
shrb
dec
push
lret
and
jl
ficompl
push
mov
js
dec
mov
fisubrs
dec
mov
dec
mov
fs
pusha
ds
movsl
inc
leave
lcall
add
popf
ljmp
call
jmp
sbb
or
je
std
lock
lods
lock
fadd
push
sbbl
mov
pushf
flds
in
mov
cmp
xor
hlt
das
sbbb
inc
clc
std
fisubl
xor
or
hlt
fneni(8087
stos
aaa
jle
int3
xchg
xor
push
ret
mov
push
mov
lret
clc
push
pop
test
dec
fildl
sbb
ret
les
or
or
sbbb
mov
mov
pop
ljmp
jno
andl
add
imul
test
fs
pop
or
insl
or
cwtl
inc
xor
push
dec
push
in
pop
mov
sbb
inc
es
mov
lock
inc
insb
movsl
iret
loope
lock
adc
xor
dec
pop
fstp
adc
sbb
adc
popa
mov
push
and
lock
push
cmp
xchg
jno
jo
mov
pop
sbb
out
add
or
js
cmp
mov
xlat
mov
std
cmp
movb
lock
int3
leave
lea
mov
imull
orb
adc
add
mov
mov
aaa
loopne
add
mov
add
cmp
mov
jp
enter
mov
xchg
xor
dec
lods
mov
inc
lret
jl
xor
rorl
push
cwtl
scas
in
les
imull
sbb
sbb
push
cmp
mov
lock
test
cmp
and
inc
lods
mov
fwait
sar
lcall
js
mov
bound
sub
mov
mov
mov
sub
popf
dec
int3
mov
test
rolb
sub
xor
leave
push
adc
pop
sub
and
ss
sbb
cmp
insb
lea
mov
enter
dec
mov
call
mov
xchg
inc
test
insl
and
push
xchg
push
scas
ret
arpl
ds
add
sar
mov
test
xorb
inc
andb
arpl
sub
or
add
mov
js
loop
pop
jl
ljmp
sub
pop
fsubs
and
orl
hlt
inc
in
push
or
stos
ret
jp
mov
out
jge
mov
add
mov
ret
in
leave
pop
lret
xchg
sbb
or
push
negb
fists
jecxz
call
mov
loop
push
mov
es
push
sub
sti
adc
sahf
dec
cmpb
mov
cld
mov
dec
jae
add
add
sub
adc
mov
out
mov
je
sub
ljmp
sti
xor
sbb
push
adc
sbb
jbe
push
mov
mov
jg
lret
dec
inc
clc
lds
push
popf
outsb
dec
pop
das
popa
pop
call
push
jo
sarl
mov
push
cwtl
inc
out
pushf
int
xor
or
dec
clc
loope
fildl
pop
loop
rorb
nop
adc
mov
sub
jmp
sbb
push
sub
notb
shlb
enter
or
ja
into
add
shlb
pop
mov
mov
sahf
hlt
cmc
jmp
inc
fbld
xchg
retw
adc
add
ss
fcmovu
sbb
mov
mov
cmpl
stc
aaa
xor
out
adcb
push
movsl
mov
test
in
stos
jecxz
sub
mov
mov
fdivp
mov
mul
add
outsl
adc
jmp
and
cmp
fstpl
xor
aas
loop
xchg
push
adc
bound
pushf
testb
icebp
xchg
cmp
push
jmp
inc
xchg
aaa
lods
inc
stos
mov
dec
scas
leave
dec
sub
jmp
jne
arpl
notl
mov
aam
push
out
lock
mov
push
scas
movsb
daa
pusha
mov
out
mov
aaa
inc
das
push
xor
sub
bound
pushl
push
xchg
xor
testl
xchg
or
inc
dec
out
and
jg
pop
pop
test
cmp
inc
sar
lea
jo,pn
fadds
xchg
clc
rclb
pusha
hlt
push
mov
sbb
xchg
xor
popa
push
pop
add
push
test
push
rcll
adc
sbb
push
dec
pop
ret
push
push
add
push
ror
adc
push
pusha
and
and
push
or
jno
pop
add
inc
adcl
dec
fildl
xor
xor
jne
inc
fs
or
pop
push
push
test
fs
fs
cltd
fwait
decl
adc
mov
sbb
into
push
lock
mov
or
scas
std
mov
adc
iret
pop
mov
sbb
and
adc
mov
adc
sar
sti
in
adc
cmp
and
inc
pop
jp
in
fcomi
fwait
outsl
and
add
jecxz
xor
loopne
out
jle
mov
add
jbe
mov
add
or
out
test
scas
xchg
in
xchg
mov
mov
sbb
lea
push
imul
mov
icebp
test
push
jge
sti
decl
cmp
sub
nop
or
jo
out
rorb
stos
and
bound
cld
ja
push
testl
push
jbe
mov
mov
add
aas
js
cli
enter
mov
xchg
add
pop
aaa
cld
cmp
and
dec
and
or
cs
pop
mov
and
xchg
sbb
adc
cmc
icebp
sbb
jg
mov
jmp
adc
push
fucomp
dec
std
dec
lret
fildl
sub
mov
call
testb
xor
mov
sahf
jb
ffreep
insb
scas
jmp
mov
daa
insb
sub
sarl
push
lods
xor
xorb
out
stos
pushf
push
loope
outsb
test
js
fnstsw
lock
fsub
popa
mov
dec
cmp
incl
mov
ret
jg
neg
and
xor
jne
mov
or
xchg
push
dec
dec
pmullw
mov
and
mov
shll
mov
incl
lret
testl
dec
mov
jnp
jg
js
xorl
adc
out
loop
sub
xor
outsb
insb
adc
xlat
jle
and
outsl
add
jne
or
incl
std
or
ljmp
fadds
das
out
mov
jl
loopne
test
mov
mov
push
sub
dec
or
push
and
push
xor
mov
popf
jg
lods
or
mov
scas
mov
movsl
xchg
xor
mov
dec
or
adc
sbb
mov
jbe
dec
xor
and
mov
das
mov
dec
adc
jne
insl
mov
sbb
sbb
cli
in
arpl
fbld
clc
cmp
fildl
adc
jo
lock
clc
clc
out
scas
mov
lret
mov
cli
out
nop
ret
call
adc
jp
mov
adc
loope
fsubp
clc
sub
fists
and
addr16
movsb
std
out
aas
sbb
sub
lods
cmp
jmp
insb
jge
ret
mov
fs
les
pop
cmp
jg
decb
cld
pusha
mov
and
mov
mov
mov
imull
cld
add
add
inc
xchg
imul
sti
loopne
call
enter
add
aas
and
mov
repnz
jb
cmp
ljmp
pop
pusha
sub
mov
leave
pop
mov
sti
inc
cltd
adc
dec
and
pushf
jp
pop
fildll
and
adc
cmp
fwait
add
jbe
decl
dec
inc
ret
push
bound
orb
pop
pop
and
mov
lods
and
cwtl
xchg
sbb
ljmp
lret
mov
and
popf
mov
mov
xor
repnz
scas
push
out
rorl
mov
out
push
pop
imul
std
sbb
xor
mov
push
xor
jg
inc
inc
xor
mov
sub
mov
mov
scas
adc
stc
dec
xchg
ja
sarb
repz
xor
ss
mov
mov
cmp
push
cmp
shlb
clc
pop
std
clc
ja
call
out
repnz
fistl
cmp
int
ss
xchg
pop
loopne
sbb
shll
cmp
cmpsl
cmp
sbb
rcll
pop
in
cmp
aas
xor
ret
mov
sub
fs
cli
lahf
jle
sub
stc
xor
inc
jns
push
mov
xchg
jge
and
push
leave
mov
leave
xchg
ljmp
dec
inc
cmp
jae
push
jg
xchg
xlat
fildll
lretw
inc
aad
call
cs
lahf
popl
jp
or
adc
andb
stos
ss
mov
jno
bound
in
adc
sti
pop
idiv
dec
mov
mov
pusha
cmpsb
mov
push
je
imul
jae
mov
movsb
insl
add
loopne
scas
call
testl
cmp
mov
in
int
add
add
pop
ja
cmpsl
mov
popa
std
push
aas
mov
cmp
xchg
add
test
pop
imul
andl
pusha
pop
adc
das
sar
sub
roll
inc
fs
xchg
pop
push
out
mov
ud0
sbb
adc
mov
orl
adc
ja
mov
clc
sub
cmp
ds
jl
mov
clc
xor
inc
xchg
sbb
enter
jmp
jg
jmp
xor
add
add
and
ret
loopne
sahf
mov
dec
push
mov
add
mov
fwait
jb
sub
sbb
pop
test
aad
scas
xchg
aam
nop
fmull
and
mov
jmp
pop
mov
xor
inc
incl
ja
aaa
daa
popf
pop
int
fists
nop
or
mov
iret
loopne
jle
mov
dec
rorb
push
lock
mov
clc
pop
rclb
lcall
or
cld
cmp
and
pop
nop
ljmp
push
clc
out
mov
inc
imul
shlb
push
inc
jg
and
lcall
les
std
std
mov
push
rol
stos
push
scas
sbb
sbb
mov
jno
pop
lret
pop
aam
ds
stos
icebp
andl
ss
mov
cmpsl
mov
std
sub
pushf
imull
mov
pop
dec
push
mov
add
cld
push
lahf
aam
popf
rcr
ja
or
iret
std
jge
jbe
inc
lds
test
popa
add
xchg
mov
adc
gs
cmp
mov
add
jns
movsl
iret
scas
in
call
dec
push
pusha
test
pop
fwait
nop
xchg
clc
pmaxsw
sub
int3
leave
jns
or
enter
jl
fwait
insb
dec
daa
dec
jecxz
cmp
dec
sub
call
add
mov
std
cmpl
pop
addr16
fldl
fadd
inc
and
dec
sbb
test
dec
icebp
push
sar
sbb
test
jns
sub
cmc
dec
sub
into
std
sahf
aaa
shll
dec
lds
test
jge
or
imull
imul
cmp
std
cli
pop
decl
dec
scas
outsb
inc
enter
or
cwtl
push
fistpll
adc
sub
xor
rcrb
subb
mov
dec
push
icebp
mov
cmp
ror
and
mov
fldl
jl
or
pop
out
mov
add
push
mov
in
sbb
into
add
xor
inc
dec
cmp
xchg
inc
mov
dec
jmp
xchg
inc
pushl
out
mulb
stos
fbstp
cmp
or
sti
mov
cld
subb
and
mov
mov
sahf
scas
je
fsubrp
out
or
mov
nop
sub
dec
je
xchg
jp
popf
push
mov
pushf
or
ds
xchg
rcrl
movsb
pusha
insb
in
iret
ljmp
jo
add
or
mov
dec
push
adc
test
fildll
pop
dec
int
dec
out
jno
sub
mov
jbe
pop
fmulp
ret
in
lahf
loope
sbb
ret
dec
inc
push
imul
sub
dec
lods
js
sub
xchg
xchg
std
popf
stc
mov
mov
or
idivb
nop
out
lret
sub
out
cltd
scas
fldenv
cli
bound
mov
sub
iret
xorb
xor
incl
inc
outsl
sbb
stos
notl
repz
mov
outsb
in
or
shr
xlat
inc
mov
jge
not
push
jmp
das
cld
mov
lock
inc
or
in
jns
fdivl
xchg
insl
pop
iret
dec
fistpll
and
test
xchg
mov
fdivr
mov
out
add
cmp
mov
sti
sahf
or
insl
adcb
lods
inc
add
in
jg
cmp
mov
decb
int
dec
or
scas
pushw
std
out
jo
dec
xor
in
add
jno
mov
cmp
cltd
icebp
jg
inc
sbb
adc
in
pusha
xchg
add
lahf
rcrl
pop
adcl
out
mov
or
dec
fcompl
mov
and
fsubrs
test
out
pmuludq
sub
push
or
loopne
mov
cli
cmp
ljmp
lcall
adc
fs
push
pop
mov
insb
aam
adc
fdivr
pop
cld
jg
in
pop
mov
cmp
lea
lahf
cmp
and
and
pushf
aam
pop
dec
loopne
data16
mov
xor
insl
xchg
addr16
pop
fdivl
xchg
syscall
adc
into
jne
mov
xor
ljmp
loope
add
mov
push
cli
fucom
mov
pop
sbb
inc
add
add
jmp
or
addr16
clc
jg
cwtl
cmp
test
aaa
mov
nop
sub
leave
cmp
aad
push
jecxz
shll
cwtl
adc
sub
dec
dec
into
dec
shl
mov
scas
in
out
cmp
xorb
outsb
push
sbb
adc
jg
std
out
out
int
movsb
adc
dec
mov
out
or
inc
cmp
addb
sbb
sub
pop
mov
inc
rcl
outsl
cmp
jge
icebp
xchg
cmc
xchg
inc
loopne
cmp
icebp
xor
jge
sbbb
lea
mov
pop
in
outsb
das
lock
arpl
dec
test
push
movb
mov
jo
cltd
pop
loop
insl
mov
mov
popl
orps
inc
xchg
jae
cmp
add
push
stos
popa
sar
loop
adc
repnz
out
jo
mov
lahf
in
cli
fsubp
lahf
jns
shrb
pop
dec
fbld
mov
cmpsl
cld
aaa
dec
mov
push
and
hlt
in
mov
leave
add
sbb
push
inc
ljmp
push
cmp
bound
es
pushf
filds
out
pop
les
dec
roll
bound
ss
cmp
js
loope
jae
xchg
lods
add
sbb
dec
mov
pop
inc
aad
mov
cmovns
ss
dec
jecxz
pop
adc
and
aas
js
jg
iret
pop
in
adc
inc
jmp
sbb
mov
dec
loopne
out
pop
loopne
fldcw
jp
jle
repnz
cmp
mov
seto
sub
jl
jne
lea
lods
or
loope
jecxz
dec
ret
lret
jo
cmp
loope
sbb
repz
je
ljmp
mov
push
push
cmp
mov
inc
pop
and
iret
loopne
or
cmp
mov
mov
lahf
std
scas
xchg
dec
dec
sbb
fisttps
mov
test
push
sarl
mov
scas
repnz
dec
push
loop
mov
adc
daa
test
pop
or
scas
mov
mov
popf
bound
jg
lret
lcall
sarl
xchg
int3
sub
daa
jp
loop
pushf
loop
inc
fdiv
xchg
leave
js
movsb
scas
insb
push
mov
xor
sub
in
std
stc
cli
imul
push
xor
in
dec
lcall
popa
in
ja
cmp
lahf
sar
fdivrs
xchg
into
cli
dec
and
sbb
enter
les
ljmp
in
imul
push
lret
adc
idiv
xchg
sbb
inc
cld
lahf
sbb
dec
gs
ljmp
jbe
std
sub
fldenv
fildl
lock
stos
cmp
lret
adc
cmp
mov
sub
cmp
inc
cmp
call
into
xor
clc
sbb
xor
or
clc
shr
clc
fists
xchg
enter
jo
dec
sub
mov
pop
xchg
mov
scas
cwtl
fsubs
sbb
sar
out
call
arpl
add
imul
movsl
insb
push
mov
popf
scas
xlat
sahf
test
push
jns
mov
shl
int3
in
nop
adc
mov
adc
loopne
inc
pusha
sti
ljmp
cmp
cmp
test
fwait
push
mov
or
pop
jecxz
cmp
test
mov
or
popf
test
cwtl
pop
push
leave
push
push
mov
cli
xor
mov
ds
lds
xchg
outsb
repnz
mov
paddusb
cmp
imull
mov
imul
add
or
xor
loope
aas
js
movsb
dec
xchg
adc
clc
fwait
and
outsl
mov
addr16
ljmp
loope
cmp
les
pop
xchg
dec
dec
fistps
test
aaa
xchg
in
push
lea
xor
adc
mov
jb
arpl
out
cmp
mov
pop
outsl
mov
movsl
lock
xchg
stos
and
cmp
out
out
popf
fbstp
pop
fisubs
xchg
ja
rorl
mov
jl
ljmp
mov
rcl
push
lret
mov
pusha
and
pop
cmp
mov
sub
add
push
mov
into
lods
insl
jg
aam
add
mov
fs
cmp
xor
fnstsw
and
cmp
mov
or
decb
jge
xor
xor
push
cmp
fwait
daa
imul
clc
xor
push
out
inc
xchg
inc
insb
sbb
stc
and
incl
cltd
leave
jg
cli
pop
jmp
int3
push
test
vshufps
scas
rorl
pop
add
push
sbb
or
adc
pop
in
push
gs
in
sti
in
adc
lds
or
jae
sbb
popf
dec
int
test
mov
les
or
out
and
shrb
jg
jae
js
notb
das
jg
cmp
inc
lods
sub
test
je
pop
jnp
jae
cmc
jae
subb
cs
jge
mov
ja
jne
pushf
hlt
xor
pop
add
fcoml
ret
sti
lret
lahf
movsl
scas
test
push
inc
outsl
add
int
paddusb
sub
add
cmc
dec
int3
adc
dec
inc
mov
mov
in
lea
jl
mov
jle
sub
adc
out
scas
mov
fldl
arpl
fxch
inc
rcr
fstp
add
flds
bound
xor
fcmovb
std
xorl
out
push
cwtl
pushf
aad
pop
loope
cmp
pop
pop
mov
lods
jle
jge
adc
push
and
into
add
aas
sar
xchg
pusha
stos
scas
jbe
sub
les
fstpt
or
mov
xchg
mov
sub
lret
adc
sar
rclb
jl
notb
movsl
xor
jb
mov
push
insb
fwait
push
test
cmp
fs
or
mov
push
or
outsl
cmp
xor
idiv
cmpb
cli
leave
stos
out
pop
or
adc
dec
fcomps
adc
mov
fwait
jg
cld
mov
sbb
pop
mov
jg
inc
dec
dec
cli
lahf
std
lret
push
or
mov
cltd
adc
inc
dec
add
sbb
in
in
lock
test
lock
decl
in
dec
xor
fcoml
inc
dec
idivl
add
ja
jnp
das
das
cld
push
mov
mov
sbbl
pop
fcmovnb
aas
ret
lock
xchg
ja
mov
adc
xchg
mov
push
lret
fisubl
incl
jnp
inc
xor
jle
jb
cmp
fs
jnp
shll
imul
jb
mov
ffreep
ffreep
jns
fistpll
mov
mov
ljmp
mov
mov
sbb
mov
jbe
rol
push
int
fiaddl
adc
clc
cmp
cwtl
mov
jo
adc
insl
sahf
jo
dec
insl
sysenter
aad
mov
fisttpl
addl
push
iret
icebp
lahf
sti
aad
push
jne
push
sahf
xchg
inc
add
xchg
shll
pop
test
in
stos
sub
ret
jp
sti
jne
aam
sti
inc
fisubs
mov
jnp
push
in
add
gs
je
je
cmc
push
mov
or
lcall
leave
sub
shlb
loope
add
popa
jmp
ja
fs
aas
mov
jae
add
jnp
lds
cmp
lcall
mov
ja
fs
mov
sbb
push
into
out
and
add
roll
fnstsw
cltd
add
out
lods
or
repz
ja
addr16
cmpsl
add
sbb
inc
mov
ret
rcrb
fiadds
inc
jne
jae
mov
or
mov
sub
sbb
fistpll
cld
jg
cli
pop
je
jl
or
push
xchg
inc
push
popf
fcoms
pop
lock
out
loop
jle
cmpsb
rolb
cli
out
out
cmp
gs
shl
cmc
adc
movsb
int
ja
std
jno
in
pop
xor
leave
inc
scas
int
jg
fcoml
dec
mov
mov
lahf
cs
out
fldt
add
push
jmp
dec
xor
inc
xor
jne
incl
mov
rcrb
push
popa
lcall
or
shl
pop
loope
je
adc
imul
mov
test
cmp
xchg
jg
pushl
mov
lcall
or
int
mov
cmp
xchg
add
cltd
fwait
mov
ja
daa
cli
lahf
or
sbb
pusha
mov
pop
aad
filds
decl
mov
sub
arpl
scas
adc
std
sahf
cmpsb
lcall
test
test
pusha
hlt
pop
mull
incb
fmull
aad
mov
hlt
xchg
dec
and
das
loop
stos
mov
pop
aas
hlt
fiaddl
push
push
cwtl
add
pop
inc
cld
sti
aad
out
xor
adc
outsb
dec
mov
call
loopne
gs
push
lds
les
dec
dec
sbb
rolb
pusha
mov
clc
lds
cld
sub
mov
fcompl
stos
mov
repz
stos
dec
pop
push
out
dec
sahf
mov
jae
sahf
inc
lds
iret
sub
or
pop
mov
cmc
sbb
decl
add
dec
enter
sbb
das
mov
mov
das
add
insb
out
dec
xchg
popa
fs
cmp
dec
xor
mov
mov
xchg
add
mov
pop
push
lret
clc
inc
dec
push
addr16
cli
test
jg
movsl
xchg
fidivl
frstor
sarl
mov
or
jl
test
lods
pushl
push
ja
xor
pop
out
int
movsl
mov
mov
lret
xchg
dec
jl
xchg
dec
or
push
pop
movsb
dec
dec
aam
mov
xchg
sar
pop
neg
add
cmp
pop
mov
mov
jo
sbb
test
inc
or
push
outsl
out
jg
xor
push
mov
out
in
push
mov
movsb
and
mov
lods
add
xor
cmp
out
push
out
adc
xchg
jne
cmp
pop
jno
add
sbbb
icebp
and
xor
divb
out
fs
mov
data16
lret
mov
inc
out
popa
jle
idivl
push
lahf
inc
sub
or
cli
fistl
sub
insl
xchg
pop
pop
mov
lcall
std
aam
push
repnz
adc
out
lock
sti
lods
mov
repnz
or
ja
sahf
fldcw
add
mov
ffreep
xor
mov
cld
mov
movsb
inc
aaa
call
movsb
or
fs
adc
sub
loopne
pop
fs
mov
cwtl
loope
push
pop
aaa
mov
xor
aad
dec
popa
call
adc
cmp
ret
mov
mov
or
test
int3
dec
idivb
test
incl
mov
sub
adc
std
out
push
lret
and
xchg
ss
sbbb
xchg
sub
and
jbe
ror
cmp
lods
sub
aas
adc
das
arpl
movsl
fcoms
add
rolb
mov
push
cld
and
ss
outsl
mov
dec
cmpsb
push
rcrl
scas
push
pop
and
inc
or
xchg
push
fsubrs
pop
jg
fadd
mov
mov
mov
cmp
cld
outsl
insb
xchg
jg
sbb
jecxz
sub
stos
pop
loopne
mov
ljmp
dec
call
mov
popl
xor
jns
push
mov
ret
adc
imul
xlat
daa
sub
jp
push
dec
sti
jg
je
sbb
jecxz
inc
loope
sbb
bound
jmp
out
add
and
shr
cli
lret
pop
push
add
and
cmp
jo
shlb
aam
and
je
mov
mov
aad
dec
cmpb
ficomps
inc
rorb
and
and
loop
adc
inc
jns
dec
dec
scas
push
jge
inc
popf
ja
push
test
lds
bound
xor
jbe
cld
iret
dec
xchg
icebp
fsubl
lret
mov
jecxz
add
mov
int3
lahf
int3
aaa
sbb
std
xchg
les
push
add
jg
test
xchg
xchg
mov
sarl
cli
mov
movntps
fs
mov
mov
or
xor
mov
push
test
dec
cli
iret
es
test
or
sub
leave
test
jns
cs
jo
mov
stos
loope
rcr
daa
jp
mov
insl
mov
out
pushf
jnp
out
dec
fisubs
mov
mov
out
loopne
mov
cmp
sub
push
js
lods
pop
jge
add
add
clc
jmp
dec
hlt
ds
lods
cs
mov
cmc
xor
call
jb
pop
stos
push
push
push
mov
jns
push
and
xor
fs
and
incl
adc
jmp
ficompl
out
pop
std
cmp
push
sub
sbb
loop
shl
cs
int
jecxz
cltd
jb
push
push
dec
std
dec
cmp
mov
outsl
add
std
cmp
clc
ja
pop
jno
push
jl
inc
std
ja
ret
push
push
out
sbb
insb
cmp
mov
add
mov
std
idivl
mov
mov
lds
mov
mov
icebp
scas
sti
dec
pop
jb
push
shll
xor
fwait
sub
ret
testb
push
or
inc
fnstsw
cs
mov
pop
or
and
sub
dec
add
jno
adc
xchg
loope
mov
aaa
jo
mov
push
push
push
push
cmp
xor
mov
mov
jg
cmp
lahf
xchg
and
popl
push
jmp
mov
cmp
popf
test
repz
fsts
and
fs
out
fistpll
out
ret
cmp
ljmp
push
loope
aam
or
enter
xchg
lret
shl
push
cld
aaa
out
mov
sbb
popa
pop
out
iret
lods
loopne
pop
sub
and
adc
sub
sbb
cmpsl
cld
aas
push
jle
enter
into
mov
jg
pop
decb
es
cltd
aam
xchg
pop
shrl
sbb
fidivrl
sar
test
cmc
jge
adc
lret
add
aaa
mov
scas
lea
ds
jno,pt
test
adc
jnp
ljmp
mov
push
pop
negl
cmp
jb
sbb
cmp
dec
dec
or
insb
mov
lret
jge
mov
push
pop
popa
adc
mov
jg
jmp
hlt
dec
insb
xchg
mov
inc
and
xchg
aaa
pop
jl
aas
negl
rorl
jge
clc
jle
ret
mov
push
sbb
movb
push
int3
xchg
xchg
fsubp
test
ss
pop
pop
sub
sbb
repz
out
mov
insb
in
xchg
shlb
xor
and
mov
inc
jb
out
pop
lods
inc
adc
jl
pop
push
pop
push
subl
sbb
pushl
mov
push
inc
and
push
fwait
andb
sbb
mov
jmp
xor
ljmp
jge
dec
lret
mov
cmp
icebp
rol
scas
cwtl
cmpsl
je
add
jno
lea
mov
icebp
and
js
jecxz
lock
enter
sbb
pop
fcomps
push
xchg
std
aas
std
mov
aad
push
mov
das
cmpsb
movsb
sub
mov
mov
cltd
mov
iret
mov
inc
loopne
scas
mov
sub
incl
scas
insb
jb
ficomps
stc
scas
xor
jecxz
pushl
aaa
out
sbbb
pop
fsubl
mov
push
pop
cmc
pop
push
call
inc
and
jmp
and
leave
test
int3
daa
pop
mov
dec
xor
add
inc
sar
jp
jl
into
out
fidivrl
pop
repnz
movsb
or
icebp
iret
loopne
lock
or
sbb
or
lcall
fucomi
stos
pop
aas
icebp
cmp
stos
ret
pop
repz
sti
push
push
cli
inc
push
mov
popa
mov
xchg
fcomps
ss
scas
test
push
push
mulb
xor
mov
pop
xor
xorb
ffreep
aas
idiv
jle
iret
dec
cmp
loope
outsl
jecxz
xor
cmp
lea
lahf
ficoms
fwait
dec
repnz
in
movsb
ljmp
push
fidivrl
pusha
lock
mov
xchg
mov
lea
sbb
call
aaa
lret
mov
ror
repz
xchg
pop
std
out
xchg
shll
into
xchg
jno
ds
lret
mov
sbb
ja
arpl
push
dec
inc
les
ffree
push
cltd
imul
or
pmaxub
jl
stos
add
and
xchg
add
mov
sti
and
push
xor
mov
cld
aas
cmc
push
data16
xorb
aas
xor
loopne
insb
pop
mov
aas
add
mov
mov
out
mov
push
mov
fstpl
adcl
xor
ret
clc
aam
jle
pushf
xor
das
dec
mov
ja
ret
add
js
and
jmp
in
sbb
cmp
or
cltd
mov
pop
lds
cld
cmpsl
sti
fildll
mull
push
dec
repz
sti
call
jb
jns
movsb
das
xchg
je
lock
idivl
call
jecxz
jmp
cltd
ret
cld
jg
and
xchg
sub
xor
mov
jmp
push
pop
mov
mov
pop
add
xlat
xchg
or
add
loope
js
xchg
lret
jecxz
sbb
aas
sti
je
mov
addb
dec
sub
xchg
pop
xor
mov
add
mov
jp
test
sysret
mov
push
xchg
sarl
ja
sar
pop
jl
add
lods
int
mov
mov
sahf
pop
cmpsb
add
sti
lahf
xor
movsb
mov
sub
orb
mul
popa
pushf
out
decl
loope
outsl
mov
fsubs
fwait
push
mov
pop
out
lock
clc
xchg
stc
jp
push
sub
adc
mov
mov
jno
ds
pop
inc
lret
xchg
aas
pop
stos
loopne
cmp
jmp
jp
xchg
lds
mov
or
leave
mov
mov
sarb
mov
dec
lods
scas
sbb
out
pop
sbbb
add
stc
daa
hlt
jae
push
sbb
jae
push
jns
loope
or
dec
shlb
adcl
dec
shll
push
frstor
incl
ret
stos
adc
out
sti
clc
ud0
jbe
add
cmpsl
xor
fsubrs
cmp
insl
adc
mov
repnz
dec
fstpt
ljmp
cmp
cmp
addr16
or
sbb
fnsave
incl
add
mov
je
scas
cmp
ja
cmp
push
fbld
jp
std
pop
out
cmp
icebp
cld
jmp
es
and
add
call
out
out
jns
pop
push
mov
setl
push
push
call
clc
fsubs
in
jno
test
fwait
xchg
jp
in
push
xor
test
xor
xlat
std
fninit
inc
fcmovbe
dec
mov
sub
mov
andl
pop
pop
and
push
cmpl
lds
sub
data16
inc
jl
sbb
sub
mov
pop
cmpl
add
sbb
test
push
rolb
aam
sarl
inc
repnz
xchg
orl
and
pop
adc
dec
xlat
mull
loope
stos
or
or
repnz
into
mov
loope
push
nop
pinsrw
repz
sarb
mov
loop
jecxz
imul
hlt
inc
insb
das
sbb
sub
jnp
cmp
popa
mov
fidivrs
vmwrite
js
xor
daa
cmpsl
fisttps
filds
adc
xchg
cmpsb
and
loope
jb
cmp
mov
insl
adc
hlt
into
mov
sar
jns
mov
iret
adc
push
call
add
add
addr16
andb
add
adc
fwait
mov
xor
sbb
adc
cltd
int
pop
push
outsl
inc
lcall
sub
imulb
inc
outsb
push
or
and
loope
bound
rorl
and
xor
adc
out
mov
xchg
sub
push
out
jmp
dec
cli
mov
jbe
insb
cmc
sbb
jecxz
sti
das
adc
dec
daa
xchg
inc
sbb
inc
jb
incb
test
mov
xlat
sbb
clc
out
cmc
xchg
rcrb
aad
fld
mov
idiv
fsubrl
test
mov
xchg
das
cmpb
pop
or
aaa
pushf
or
or
out
xchg
fwait
lret
lods
xor
std
add
cmp
pusha
inc
and
out
enter
cli
out
es
ret
add
fisttps
lcall
mov
xchg
xchg
jg
lods
ljmp
gs
add
dec
fsubl
scas
push
enter
cmc
decl
add
mov
mov
orb
pop
in
pushf
dec
repnz
rcrb
mov
jecxz
lock
pop
es
sub
lods
and
mov
pop
imul
add
push
decl
mov
add
jecxz
xor
xchg
sub
mov
sbb
popl
stc
xchg
out
test
es
es
hlt
cmpsb
mov
add
lods
or
adc
jno
jo
cli
xrelease
add
cli
pop
idivl
dec
mov
pop
shll
inc
cmp
jmp
add
pop
xor
or
inc
out
mov
fbld
dec
mov
adc
aad
jno
sahf
arpl
decb
jmp
sbb
pop
stc
add
std
add
pop
mov
pop
arpl
aad
xor
out
xor
out
sbb
xchg
sub
or
in
jg
sub
icebp
fmull
sbb
mov
jmp
or
aas
pop
icebp
push
cmp
orl
or
push
cld
dec
cmpsb
inc
push
insl
pop
icebp
lea
or
lret
push
pop
sub
jmp
test
push
nop
mov
aas
out
pop
push
add
mov
incb
std
cltd
test
rorb
push
call
mov
dec
stos
dec
mov
inc
jns
xor
mov
push
les
dec
fstpl
arpl
mov
out
sub
sbb
push
pop
imul
jb
mov
loopne
jns
add
adc
aad
call
jns
outsb
les
xchg
inc
cld
addr16
out
xchg
mov
push
mov
xlat
std
dec
mov
inc
sub
cs
idiv
loope
sbb
cli
mov
lods
mov
stos
in
jne
clc
adc
push
mov
ja
xor
nop
dec
scas
std
leave
loopne
jnp
mov
lods
mov
and
cmp
in
rorb
mov
jne
or
clc
lahf
sti
pop
stc
adc
mov
scas
cmp
lock
into
xorb
ja
lock
lods
aad
es
pop
jge
or
icebp
icebp
pop
push
fistpl
pusha
mov
int
lcall
mov
daa
pushf
lahf
mov
fnstenv
dec
mov
pop
ljmp
push
in
push
mov
pop
inc
xchg
es
ljmp
mov
cmpl
jg
lcall
lock
cmpsb
xor
mov
jg
adc
fnstsw
adc
xor
mov
jp
cmp
stos
stos
xor
leave
std
add
xor
dec
sub
xchg
adc
adc
sbb
fs
cmp
nop
xchg
out
decb
mov
add
pop
xchg
into
int
loopne
sbb
jg
pop
dec
sbb
lcall
adc
fisttpll
cld
lods
enter
xor
in
jb
int3
hlt
dec
inc
std
and
leave
push
popa
dec
mov
mov
imul
or
mov
or
fnstcw
dec
jp
jmp
scas
jne
jle
and
cld
dec
sahf
cs
popa
lahf
add
dec
fnstsw
out
xor
mov
bound
icebp
dec
fstpl
and
adc
cmp
mov
sub
rorl
icebp
outsl
lock
sbbl
pop
xchg
clc
push
testl
mov
ljmp
xchg
shrl
fisttpll
xor
repnz
push
mov
std
pop
lock
iret
into
adc
lea
lcall
adc
and
inc
inc
idivb
in
jmp
sbb
jne
out
mov
inc
or
divl
jl
out
lcall
ss
pop
push
xlat
add
jb
loop
pop
je
xor
aas
add
jg
or
test
call
sbb
test
loopne
dec
clc
pop
and
lea
in
das
jmp
ljmp
inc
lret
jns
fucomip
cmpsb
mov
imul
adc
xchg
push
push
scas
out
std
jnp
xchg
adc
jle
jg
lock
lods
xchg
dec
xchg
dec
lea
ds
push
and
jne
mov
adc
push
andl
push
test
sbb
mov
lret
adc
mov
ja
popa
sbb
xchg
cmpsb
loop
lock
rcrb
test
jecxz
mov
xor
sub
pop
xchg
cmpsb
cmp
push
push
int3
mov
inc
cli
into
add
sar
out
xchg
mov
cmp
inc
jp
outsl
mov
mov
sub
gs
push
sub
repz
cmc
pop
ret
outsl
adc
shlb
lock
mov
pop
fs
shl
les
xor
lea
scas
ljmp
repz
jbe
xchg
fwait
daa
pop
push
icebp
call
dec
iret
test
cltd
pop
cmpb
jnp
in
jg
decl
jae
inc
add
jnp
pusha
jns
cmp
stc
cmp
orb
and
in
push
clc
push
add
fdivr
gs
mov
mov
outsl
jno
pushf
ja
sub
jo
jns
add
mov
call
mov
arpl
pop
xchg
and
arpl
sub
fisttps
frstor
insb
xor
xchg
ljmp
sbb
push
adc
dec
pushf
xor
pop
or
rorl
inc
out
cmp
sar
neg
jle
fisttpll
mov
push
cld
push
hlt
popf
xor
jmp
xchg
cmpsl
inc
out
xor
into
cld
scas
ret
or
or
cmp
jg
jle
clc
ja
adc
push
out
jbe
push
inc
inc
addb
lahf
xchg
std
push
xlat
fisubl
jmp
testl
jmp
movsl
call
out
inc
movsb
pop
rcl
adc
clc
jle
dec
inc
inc
ret
call
std
pop
insl
pop
out
inc
sbb
addr16
paddd
mov
mov
lcall
add
add
jmp
ja
fsubrs
popa
jmp
mov
jg
mov
add
in
aas
or
dec
pushf
pop
fsubrl
mov
filds
decl
decl
adc
xor
pop
push
jno
sbb
or
jle
push
data16
inc
xor
and
ds
adc
sub
clc
xorl
and
aas
adc
cmpsb
jno
mov
mov
jl
jns
dec
push
hlt
adc
rcrl
cmp
test
jge
outsl
mov
sarb
cmp
cmp
in
clc
mull
das
loop
mov
lcall
jecxz
subb
add
aas
push
push
out
sbbl
mov
mov
in
mov
pop
xchg
jne
xchg
inc
mov
jmp
enter
cmp
mov
jo
outsl
push
cli
stos
jnp
cmp
xchg
test
and
int
push
outsl
sub
icebp
orl
dec
lahf
push
mov
ja
subb
shl
push
mov
jg
push
push
dec
negl
inc
jmp
inc
pop
and
test
insb
add
popf
imul
iret
mov
cmp
mov
jne
dec
aas
pop
rcrl
fdivrl
in
xchg
jp
stos
mov
hlt
xor
out
pop
in
insl
enter
jle
push
sbb
jg
dec
adc
pop
mov
adc
dec
jno
mov
aad
or
inc
mov
ljmp
lds
jle
xor
jg
decb
int
push
or
fdivrs
or
imul
fldenv
sbb
adc
inc
nop
push
add
push
sbb
jbe
jg
cmp
and
pusha
xor
mov
in
std
rorb
std
inc
jno
mov
pushf
mov
shrl
pop
insl
sub
jae
pop
aad
inc
cmp
aad
pop
sbb
fucom
mov
aas
les
inc
sub
addr16
std
fs
sbb
xchg
add
ret
call
jae
out
add
inc
aas
jmp
loop
insl
rorb
and
mov
and
mov
ret
xchg
adc
call
fs
cmpl
mov
pop
adc
dec
pop
stc
or
xor
lcall
cmp
incl
mov
frstor
movsl
mov
sub
jg
jg
push
aam
dec
pop
sub
dec
fcomi
and
stos
aas
push
clc
inc
scas
popf
mov
xchg
jg
mov
scas
mov
je
lahf
pop
and
repnz
jnp
std
addr16
dec
adc
jnp
out
add
js
cld
cmpsb
sbb
das
cmp
mov
sahf
shll
cltd
insb
push
sub
xor
pop
sbb
ror
mov
cmp
xor
mov
fidivrs
test
sbb
fs
lahf
rolb
stos
sub
test
call
fs
pand
pop
jbe
aam
std
incl
pop
add
adc
fdivrs
clc
or
add
ljmp
jbe
call
aas
add
pop
adcl
fsubp
test
jle
fisttps
dec
pop
xor
mov
ret
inc
cld
ret
pushf
xchg
sbb
jae
data16
clc
mov
stos
dec
xchg
push
js
scas
xlat
sbb
add
iret
stos
aam
cltd
pop
nop
dec
shrb
xchg
mov
and
xlat
inc
or
dec
pop
and
arpl
pop
xorb
lds
xchg
fsub
mov
push
adc
das
sahf
cmc
js
mov
jns
mov
inc
rol
icebp
or
xor
pop
jmp
loop
cmc
call
mov
imul
sub
lock
cmpsl
push
pop
loop
adc
lahf
movsl
cmp
ja
loope
and
jge
fistps
cmc
dec
sub
leave
or
sti
repz
fdivr
out
mov
push
out
add
test
test
and
jmp
xor
xchg
std
sbb
mov
sbb
pushf
lret
ds
push
pop
pusha
in
in
out
popf
sti
fisttps
fistps
leave
mov
ljmp
mov
notl
pop
xchg
fcoml
pop
gs
iret
mov
shlb
sbb
cmp
xor
loope
call
xor
rol
jb
ljmp
adc
call
dec
das
andb
das
scas
push
loope
add
and
or
dec
jecxz
pop
xchg
leave
ret
push
dec
add
js
imul
fwait
and
aad
imul
shll
cmp
mov
cmpsb
jo
out
jmp
and
mov
xchg
out
das
call
fcmovu
movsl
and
cld
aas
mov
ljmp
push
inc
lods
push
mov
adc
sub
mov
out
lret
inc
mov
pop
shlb
stc
cmp
in
and
xor
or
cmp
imul
js
les
jg
push
fs
sbb
decb
call
inc
cld
mov
lret
in
push
sbb
aam
dec
jge
push
push
ja
aas
test
sub
aas
add
icebp
incb
ret
jae
call
mov
add
pushf
dec
pop
clc
ljmp
loop
sub
push
mov
dec
shrl
dec
or
sbb
push
mov
push
scas
dec
and
pop
gs
inc
ljmp
jns
mov
xchg
inc
call
inc
inc
mov
lea
lcall
icebp
pop
and
.byte
mov
idiv
call
in
sub
push
push
lea
push
push
pushl
push
and
mov
add
dec
xor
ret
fiadds
sub
inc
jne
push
lea
push
push
lea
push
jbe
jae
cld
lods
js
push
push
loopne
push
jbe
lock
sbb
int3
add
fcomps
incb
pop
aam
mov
push
push
or
dec
jno
add
sbb
add
aas
jmp
dec
decl
push
push
fidivs
sbb
ss
push
int
sbb
jns
jae
mov
add
add
loopne
adcb
lock
push
or
sbb
push
sbb
call
mov
aam
adc
cmp
jne
push
and
icebp
xchg
enter
loopne
out
or
insb
insl
outsb
push
push
in
es
xor
dec
in
sbb
sarb
mov
mov
and
flds
push
int
inc
mov
add
hlt
push
jp
dec
push
pop
lret
mov
sub
dec
loopne
jmp
lock
into
add
push
pop
loopne
clc
push
lock
add
push
push
jbe
faddl
pop
cmc
jae
lods
push
push
push
aaa
push
outsl
push
dec
dec
jne
sbb
pop
push
out
mov
jo
add
shl
add
addb
incl
negb
inc
push
inc
add
push
lock
dec
jns
xorps
fidivrs
push
not
dec
push
add
jmp
push
or
insb
push
scas
ret
inc
insl
insl
jo
push
repz
mov
ja
cli
add
add
add
popf
push
pusha
mov
movl
mov
lock
clc
or
test
push
cld
push
flds
rcll
inc
sub
add
sub
ret
jmp
mov
adc
add
cmpsb
xchg
int3
mov
inc
add
or
sbb
fs
sbb
dec
movl
adc
inc
sbb
inc
neg
orb
sbb
add
sbb
adc
dec
lcall
add
loopne
ss
and
jmp
pop
jmp
inc
leave
mov
push
mov
roll
pushf
mov
push
xor
inc
sub
test
xor
mov
mov
jbe
add
cmp
cmc
or
cmp
push
push
cmp
in
ljmp
push
dec
push
push
add
jo
lds
mov
ja
cmpsb
popa
mov
lea
dec
loopne
mov
testl
icebp
not
pop
mov
std
jg
sub
inc
add
dec
jne
cs
fsubrl
mov
orl
xor
jl,pn
mov
push
push
inc
add
mov
xor
push
pop
push
push
mov
add
sbb
add
add
and
xorl
arpl
push
lods
dec
xor
dec
pop
pop
pusha
push
add
arpl
add
repz
dec
loope
xchg
mov
inc
fcom
das
cmc
les
loope
xchg
outsb
xor
pop
mov
in
dec
pop
js
push
int3
movsl
fstp
hlt
sub
inc
pushl
mov
mov
jno
outsb
lret
addr16
in
sbb
sbb
add
push
xor
mov
jg
orb
mov
push
xchg
pop
cmp
pop
xchg
fdivrl
movhps
cmp
int
data16
js
xchg
fsubp
dec
push
xor
orb
push
inc
mov
dec
cld
rcr
mov
jmp
movl
push
xor
addr16
add
ja
bound
daa
inc
cwtl
test
stos
out
in
enter
std
hlt
incl
repz
adc
add
sbb
sub
xorb
cmc
pop
adc
sbb
aaa
loopne
insl
inc
add
jae
dec
rol
shrl
test
cmpsl
mov
lods
mov
inc
fcoml
push
push
pop
cld
or
jb
in
pushf
adc
xchg
int
sub
cmc
aam
add
scas
add
dec
clc
adc
imul
jae
push
add
andl
sbb
sub
mov
test
not
sub
movsl
jmp
cli
and
push
popa
sub
jae
push
movsb
cmp
jo
dec
es
test
adc
adcl
adc
push
sbb
rcr
adc
inc
cmp
cmp
push
jb
or
push
loopne
pop
imul
xor
pop
dec
cld
cmp
adc
fadds
sti
mov
sub
pop
dec
sub
dec
ret
aad
loopne
mov
gs
xor
pop
pop
insl
rcl
pop
push
mov
dec
inc
outsb
movsb
push
sub
lgs
xlat
out
and
test
or
call
mov
in
je
inc
lock
lods
lock
push
repz
push
xchg
jl
push
cmpsb
add
mov
test
mov
nop
xchg
push
mov
clc
mov
adc
fwait
cli
sbb
and
sbb
dec
adc
neg
push
jmp
inc
sbb
lret
inc
sub
in
or
hlt
les
push
ret
cmp
dec
add
cmp
dec
loopne
imul
repz
ret
sbb
int3
dec
inc
dec
push
addb
dec
jp
adc
or
add
orl
inc
neg
sub
push
fldcw
lret
not
sbb
inc
add
jg
in
pop
pop
sbb
jmp
add
lock
dec
mov
lcall
rcll
rolb
fiaddl
adc
adc
iret
ds
add
adc
inc
add
inc
sub
sbb
inc
jp
lcall
mov
add
icebp
dec
adc
sub
adc
add
dec
pop
jb
inc
adc
rorl
sub
jns
lods
pop
xlat
ds
fincstp
mov
jbe
jge
fcomps
cli
int
rcll
enter
int
pusha
mov
push
cmp
add
lods
pusha
add
sbb
mov
repnz
fisubrs
add
lcall
xchg
repnz
sbb
sub
cmp
xor
add
mov
enter
sbb
and
sbb
mov
xlat
sbb
pop
lret
outsb
fisttps
jnp
and
aaa
add
mov
in
fisubs
lret
int
push
add
push
fstps
sbbb
add
inc
adc
and
adc
fistl
push
sub
inc
jnp
fcmovu
int
cs
js
add
imull
loop
roll
xor
add
pop
push
mov
lret
add
inc
inc
or
jne
mov
leave
ret
inc
jl
lds
lret
add
jo
shll
sti
jmp
orb
fdivrp
mov
iret
add
adc
addl
inc
push
xor
arpl
inc
pop
pop
test
icebp
into
aas
es
push
jo
cwtl
mov
int3
sbb
xor
mov
add
mov
pop
push
and
cmp
xor
ljmp
insw
dec
push
add
sub
cmc
push
push
add
aas
icebp
push
add
lock
jne
rolb
shlb
in
add
or
in
js
stc
repnz
and
pop
mov
mov
jecxz
push
push
push
movsl
outsl
pop
aaa
mov
imul
inc
outsl
push
dec
push
lds
loope
jmp
pop
ds
push
arpl
xor
les
mov
jns
xor
xor
movsb
test
inc
movsb
jae
or
test
push
cmp
rorb
jo
push
fimuls
jne
incb
repz
adc
mov
dec
jp
jg
cmp
inc
lods
xor
pop
call
push
add
into
les
inc
inc
movsb
xchg
jae
push
test
and
push
xor
add
adc
jg
out
push
xor
push
cmpb
inc
aam
mov
and
dec
in
xorb
inc
push
jbe
mov
xor
jp
push
add
jb
jno
dec
jns
movl
mov
jle
mov
enter
add
pop
insb
jne
sub
ja
inc
dec
xor
xchg
pusha
clc
sub
arpl
mov
pop
jns
stos
in
ret
insb
clc
daa
je
sub
xor
sbb
out
int
jbe
sub
push
addr16
fdivr
aas
fisubrl
repnz
inc
not
popl
dec
adc
dec
inc
sub
mov
sub
inc
neg
dec
inc
roll
cmp
sbb
jmp
cmpsl
sub
sbb
inc
sbb
sub
neg
adc
rcrb
insb
inc
std
jmp
mov
flds
testl
fimuls
iret
inc
arpl
es
push
imul
add
sub
inc
jg
hlt
mov
cli
dec
add
sbb
mov
fiadds
icebp
sti
push
lcall
rorl
adc
sub
sbbb
fildl
daa
gs
cld
pusha
cmp
into
aam
repz
dec
adc
mov
inc
mov
fiaddl
cmp
add
js
lock
scas
stos
push
jb
push
outsl
dec
int
scas
push
and
jo
and
fwait
jmp
inc
mov
push
push
dec
sub
mov
cld
dec
inc
inc
cmp
adc
or
rolb
imul
cmp
add
lods
add
cmp
pop
filds
nop
mov
sbb
adc
sub
push
push
daa
jmp
dec
push
sti
ljmp
aad
jae
pop
push
push
mov
and
inc
push
test
into
jns
add
ljmp
jo
sub
dec
inc
pop
mov
in
in
cwtl
iret
add
dec
data16
rolb
daa
shll
movsb
inc
and
sbb
mov
xor
es
adc
push
mov
ret
inc
dec
mov
inc
lcall
in
pop
movsl
cmp
pusha
or
push
je
rolb
inc
dec
pop
jb
in
pop
adc
sbb
ljmp
and
les
or
mov
neg
mov
cld
xor
dec
pop
sub
cli
loope
adc
xor
cli
dec
not
pop
out
inc
xlat
fstpt
sbb
dec
sbb
fucomip
sbb
jg
loop
stc
inc
push
mov
repz
dec
add
inc
sbb
adc
dec
inc
push
sbb
adc
push
mov
dec
aas
mov
cmp
insl
pop
inc
xchg
pop
cld
add
add
push
inc
stos
push
jne
jmp
push
jae
sub
push
scas
lock
pop
lahf
xor
cmp
notb
jle
bound
and
add
pop
test
add
push
pop
pop
test
hlt
daa
std
aas
inc
or
push
push
cmpsb
stos
push
shrb
add
aas
push
add
shll
in
scas
xchg
lock
jae
into
inc
mov
addb
outsb
add
dec
sbb
clc
add
mov
push
imul
cs
push
test
loopne
insb
xchg
dec
addr16
sub
in
mov
push
xlat
dec
pushf
pop
rclw
mov
inc
dec
imul
loope
dec
notl
push
mov
js
addb
sahf
push
sub
mov
cld
int
add
neg
mov
pop
lock
push
mov
adc
lds
dec
and
lock
inc
xlat
out
arpl
and
pop
outsl
addl
je
xor
outsl
cmp
jns
daa
sub
dec
clc
daa
and
and
sbb
scas
push
outsb
xor
fdiv
sub
add
pop
leave
ret
cld
lahf
test
add
push
movsl
sbb
mov
push
in
enter
cwtl
fs
incl
dec
add
orl
push
jle
push
sbb
push
push
stos
lock
enter
inc
add
adc
addb
incb
sbb
rolb
push
cmp
mov
adc
dec
cmp
sbbb
add
fnstsw
loopne
lret
dec
add
sbb
neg
std
cmc
loope
mov
movl
push
data16
or
adc
or
adc
neg
inc
mov
pop
xchg
push
add
sub
add
fcom
lds
jnp
jecxz
ss
mov
das
add
xchg
push
sub
push
aas
cmp
cmp
popa
jbe
dec
aas
js
add
push
add
testb
aaa
adc
push
dec
sub
adc
lret
or
lret
inc
movsl
mov
mov
xchg
mov
add
push
jo
adc
jp
push
and
add
pop
gs
ljmp
std
adc
decb
add
push
jo
cld
les
mov
mov
popaw
adc
notl
xor
pop
push
jbe
xor
in
in
mov
add
sub
adc
movsl
or
lahf
mov
fsubrs
xor
imul
pop
repz
mov
psubd
pop
cwtl
add
iret
sbb
push
cmpsb
movsb
call
jle
insb
gs
push
nop
insb
add
in
jmp
push
xor
pop
scas
loopne
cltd
test
loopne
sub
or
sub
add
sub
xlat
jp
hlt
neg
add
lock
mov
sbb
add
add
push
repnz
jne
xchg
push
fs
push
insb
sbb
push
pop
arpl
cli
inc
inc
add
fcoms
dec
inc
xchg
push
or
popf
inc
or
insl
lcall
in
hlt
std
outsl
or
enter
jns
repz
lock
arpl
sbb
in
push
push
xor
inc
inc
aad
cwtl
es
loopne
adc
inc
rcr
clc
gs
and
add
rorb
inc
cmpsl
mov
aam
gs
clc
dec
shlb
arpl
inc
test
pcmpeqw
hlt
add
push
sub
test
out
jl
mov
cwtl
jle
xorb
inc
lock
xchg
push
mov
cli
pop
fwait
decb
dec
jo
xor
sbb
add
or
cmp
inc
cld
imul
dec
movsb
cmp
push
push
shr
pop
test
adc
das
push
sar
add
dec
add
dec
fdiv
scas
add
add
lret
pop
inc
ds
push
ret
push
add
adc
pop
inc
add
xor
stc
subb
test
and
pop
dec
sub
sbb
inc
sub
add
xor
inc
jne
push
in
push
dec
dec
push
add
outsb
xor
and
daa
in
pop
jne
push
cmp
mov
sbb
or
push
pop
mov
lahf
addr16
sbbb
jg
or
mov
ljmp
xor
inc
and
jecxz
adc
sub
in
rorb
iret
sbb
and
cmp
mov
push
aam
fiadds
or
mov
aam
jo
je,pt
xchg
mov
xor
push
jge
inc
ss
jle
sub
movsl
mov
add
pop
mov
imul
ja
push
cmp
mov
lods
push
fs
jnp
test
push
fucomi
inc
movsl
mov
dec
les
jp
fs
loopne
aas
repz
mov
les
inc
mov
mov
jne
imul
xor
bound
xor
and
popf
adc
inc
add
sub
mov
push
dec
testl
mov
add
insb
sbb
sub
inc
pop
jp
ljmp
cmp
and
fdivrs
push
jne
inc
imul
jbe
insb
outsl
push
rorb
gs
push
jo
push
cmp
xchg
arpl
rclb
push
cld
hlt
sub
les
mov
add
aam
mov
ret
or
call
mov
xor
aam
xor
xchg
pop
xor
sbb
addb
loopne
xchg
das
and
in
leave
ret
cli
push
ret
mov
iret
push
sbb
idiv
add
orb
aad
adc
loope
icebp
xor
shrb
jb
push
push
test
jmp
sub
dec
lock
mov
xor
je
push
push
addr16
and
adc
push
add
jns
add
lahf
push
mov
adc
stc
fstps
insb
and
aas
or
stc
ja
nop
pop
add
xchg
cmpsb
xchg
sbb
jmp
mov
mov
xchg
inc
lds
adc
mov
stc
add
cld
cmp
andl
mov
mov
add
imul
xor
clc
cmp
add
or
imul
or
inc
adc
scas
std
in
pop
mov
or
lahf
movb
xor
divb
pop
sbb
add
test
fldl
out
jecxz
cmpsl
data16
mov
add
adc
jmp
xor
pop
jae
cmp
movb
jnp
cmp
sub
mov
out
xchg
add
daa
cld
xor
jns
fidivrs
cwtl
cltd
add
cld
divl
add
ss
in
stos
subb
lods
ret
sbb
out
iret
pop
or
clc
push
jno
jp
xor
adc
dec
je
fcoml
or
add
xchg
jbe
cwtl
popf
mov
lret
mov
into
push
insb
pop
sub
cltd
stos
andb
popf
mov
sub
outsw
sbb
mov
xchg
add
add
cmp
xchg
ret
je
jp
mov
jecxz
lea
dec
fidivrl
fidivs
mov
mov
mov
push
lds
add
xor
add
or
jge
stos
add
cmpsb
push
add
and
fadds
ret
and
popa
jbe
in
or
add
addr16
jo
gs
dec
addr16
xor
push
mov
xchg
jmp
mov
fcoml
sub
xor
pop
sti
loop
mov
lahf
movsl
insb
xchg
mov
push
xchg
jg
gs
xchg
js
push
sahf
xchg
push
lods
test
orb
and
xchg
in
sbb
xor
and
dec
jbe
cwtl
push
mov
pop
pop
mov
add
xor
push
imul
aaa
int
leave
add
js
je
shll
xor
cli
xchg
insb
sbb
xchg
add
jecxz
mov
mov
lds
sbb
jne
pop
push
add
pop
add
sti
jle
xor
and
sbb
inc
scas
pusha
pusha
or
xchg
loope
inc
sbb
jne
ja
scas
mov
or
lock
sti
push
cmp
mov
xchg
or
cmpsl
jno
rsm
and
in
out
inc
jecxz
or
addb
push
push
aad
clc
sbb
pop
or
repnz
and
dec
icebp
xchg
and
pop
outsb
jmp
hlt
movsb
sub
daa
inc
jmp
push
mov
xchg
sbb
aas
xor
sbb
pushf
data16
cld
cmpsl
mov
xchg
aas
int
in
cmp
test
movl
mov
fldenv
mov
popf
add
or
mov
shlb
repnz
or
jl
fwait
mov
mov
int3
lods
inc
mov
sahf
mov
xor
in
cmp
loope
out
sub
jl
mov
fwait
dec
aad
shll
pusha
push
scas
push
stc
sarl
mov
wrmsr
bound
sub
xchg
xchg
in
cmpsb
dec
and
fwait
mov
xor
test
popf
lret
sbb
add
sub
pop
push
loope
popa
rolb
mov
inc
inc
pop
xchg
cld
pop
and
sbb
or
in
mov
test
sti
aam
repnz
inc
scas
repnz
and
xor
add
scas
adc
sub
mov
adc
or
fildll
cmpl
test
roll
not
lea
movsl
not
iret
jl
scas
adcl
pop
mov
shll
sub
xor
cld
lcall
and
lock
push
negb
push
inc
xchg
jg
push
lock
jno
pushf
mov
cmp
push
mov
iret
cmpsl
add
adc
cmp
cmp
mov
in
es
sbb
mov
adc
sub
mov
push
pop
push
imul
rcrb
out
pop
mov
mov
mov
sbb
mov
fistpll
stc
push
fldl
in
lcall
pusha
cmp
roll
xor
loop
mov
fdivr
push
leave
sub
cwtl
sub
pop
dec
lret
xor
cmp
les
mov
push
pop
pusha
add
fisttpll
mov
rcrl
mov
lea
clc
xor
xchg
aad
xor
pop
xchg
xor
pop
iret
cmp
js
cmp
and
js
push
roll
sbb
movsl
insl
push
pusha
sbbl
inc
push
lock
inc
dec
inc
pop
sbb
sbbb
and
ljmp
loopne
jo
aas
jo
rorl
xchg
arpl
or
mov
jbe,pn
and
flds
cs
mov
push
outsl
xor
xchg
lret
sbb
push
imul
lret
insl
icebp
mov
arpl
pop
lock
inc
fidivl
mov
push
pushf
test
inc
adc
clc
add
imull
cmpsb
mov
or
jbe
mov
cltd
sbb
pop
fnsave
outsl
cwtl
cwtl
jnp
insl
push
movsl
inc
pop
or
and
gs
mov
push
pop
hlt
aad
mov
insl
xchg
cmp
jno
adcb
popl
and
test
loope
mov
repnz
dec
in
adc
xchg
sub
mov
sbb
dec
mov
add
out
ja
jne
inc
jo
xor
xchg
and
jp
mov
inc
add
imul
sbb
or
nop
lds
js
xchg
push
sub
mov
add
mov
test
inc
sbb
out
mov
movsb
scas
or
add
jae
push
xor
xlat
and
sub
sbb
push
inc
iret
mov
dec
repz
test
sub
add
dec
mov
inc
xchg
fiaddl
sar
add
loop
xchg
pop
mov
cmp
aas
cmp
mov
add
scas
push
fcmovb
test
daa
adc
fsubs
fbstp
adc
jno
dec
add
sbb
outsl
cltd
cli
add
add
das
and
mov
inc
stc
mov
push
rcrl
adc
cltd
or
popa
pop
or
jno
xor
jns
mov
inc
pop
add
lret
dec
cmp
inc
cmp
mov
cmp
mov
cld
inc
adc
xchg
push
clc
inc
cmpsb
jecxz
fsubrl
iret
call
push
pop
in
and
lods
sti
test
xor
adc
hlt
call
shrl
fiaddl
icebp
dec
xchg
jl
add
in
mov
jne
outsl
jbe
addl
dec
jb
pcmpgtb
jge
mov
cld
pop
xchg
aad
aad
mov
movl
sub
jae
jne
bound
mov
inc
push
jb
mov
arpl
xor
rolb
int
inc
pop
and
dec
dec
sbb
je
cmp
daa
adc
popa
add
mov
mov
sarl
ret
pop
jl
cld
add
stos
mov
jmp
mov
ds
bound
jle
andl
test
subb
in
xor
inc
mov
cwtl
jl
push
pop
test
push
sub
jae
adc
or
out
add
mov
movsb
inc
incb
or
enter
test
and
adc
test
mov
jno
stc
push
jnp
dec
inc
push
test
test
stos
jno
int3
or
inc
xor
add
mov
mov
aaa
ret
popf
inc
test
stos
dec
aas
inc
fwait
ljmp
xlat
loope
je
or
leave
cmp
int3
rorb
adc
fstl
imulb
addr16
in
add
mov
rcrb
jnp
das
sbb
pop
mov
add
xor
testb
loopne
add
xchg
push
jno
xchg
or
outsb
nop
or
je
inc
inc
xchg
sbb
rol
daa
xchg
sti
mov
stos
jno
push
data16
pop
loop
jae
push
xorl
aas
shll
pusha
lea
pop
xor
and
imul
cmpsl
jp
fisubl
in
sub
push
cmp
xchg
clc
cmp
leave
daa
cli
mov
inc
mov
mov
outsb
sub
adc
push
lret
dec
insl
cmpsl
mov
dec
cwtl
xchg
out
xchg
mov
add
sbb
mov
dec
insb
shlb
or
fistl
push
lds
adc
dec
scas
and
dec
lock
repz
fbld
xchg
aas
add
jmp
and
scas
jp
pop
add
or
not
lock
xor
lcall
push
inc
sbb
or
fidivl
jno
add
pop
xchg
adc
fisubrs
in
repnz
mov
inc
movb
call
scas
scas
pop
das
mov
jbe
fmul
and
pop
mov
cs
mov
jo
dec
mov
sub
cwtl
cmp
push
jg
daa
inc
xor
sahf
jo
add
inc
shll
js
pop
jno
cmp
pop
adc
add
rolb
jns
fs
sbb
loopne
and
pop
pop
mov
fmul
aad
sbb
xchg
imul
add
push
sbb
pop
jl
enter
xlat
js
mov
aad
push
sti
popf
dec
mov
mov
cmpl
stos
aad
mov
jmp
dec
push
mov
push
stos
das
inc
fiadds
jne
pop
xchg
xor
pop
stos
scas
push
push
dec
fcomps
addb
shrl
mov
cmc
push
dec
xor
insb
lds
arpl
es
mov
push
xor
and
outsb
sar
and
lret
ror
push
clc
add
int
inc
ret
test
pop
pop
aam
lods
push
sub
aas
rolw
scas
hlt
icebp
mov
mov
inc
or
daa
pop
and
pavgw
pop
cmp
sbb
xchg
popf
aaa
or
insb
clc
cwtl
xlat
fs
mov
xchg
sbb
xchg
or
push
in
cltd
lea
sbb
scas
out
inc
jnp
inc
out
push
rcrb
call
pop
or
adc
adc
push
xchg
rclb
lret
sbb
mov
out
test
test
jne
jns
push
daa
push
cmp
sbb
and
inc
testl
cmp
fistpll
mul
mov
es
add
movsb
seta
mov
mov
sbb
push
and
mov
mov
stc
popf
negb
or
jl
mov
cmp
xor
dec
push
or
jno
jne
mov
inc
mov
mov
dec
sbb
das
cli
lret
lret
ljmp
test
addr16
or
lods
add
aam
add
ret
aam
rcrb
mov
mov
fldlg2
xor
or
adc
and
lret
dec
ret
jo
sub
scas
jp
cmp
mov
pop
and
mov
das
sti
push
inc
add
arpl
mov
imul
daa
xchg
xor
ljmp
popa
cmp
lock
loopne
and
cltd
or
addb
add
inc
jp
jo
or
les
icebp
jecxz
mov
xchg
test
add
aad
xlat
fs
add
mov
sti
jp
mov
mov
push
loopne
ja
sbb
push
push
cmpsl
adc
ja
cmp
push
std
gs
shrb
add
mov
jnp
or
mov
push
pop
cmp
push
jl
add
mov
sub
aas
push
ret
pop
lods
push
ficoms
push
add
and
cmp
sbb
pusha
stos
add
cs
js
and
movsl
cmp
jnp
mov
and
aas
movb
test
fimull
loope
aad
add
push
mov
mov
fs
lock
ljmp
jl
les
aam
icebp
inc
sti
mov
cmp
mov
sbb
mov
dec
xchg
xchg
dec
pushf
rcrl
mov
or
cmp
mov
sub
test
fisttpll
and
mov
push
outsl
mov
rorl
stos
push
or
inc
loop
loop
inc
dec
or
inc
mov
rcr
pop
pop
jbe
pop
loope
orl
dec
sbb
jnp
inc
mov
popa
xchg
mov
in
xchg
dec
into
or
inc
cmpsb
add
movsl
lock
mov
pop
push
add
cmp
out
pop
inc
push
aam
rcl
push
lock
loopne
cld
lds
daa
movsl
push
xchg
pop
push
ficoml
popa
roll
jl
jmp
or
aad
aas
push
mov
ds
mov
lahf
movsl
shrl
sarl
shl
mov
movsb
sub
or
jnp
or
sbb
push
pop
imul
pop
lahf
arpl
scas
shlb
mov
mov
test
sbb
shlb
push
cmc
xor
movsb
inc
add
loop
cmpb
pop
lods
jne
scas
jl
or
ljmp
inc
lea
push
aaa
dec
data16
ret
mov
lods
fisttpl
xor
jb
cmpb
mov
cmp
dec
mov
and
in
ret
inc
inc
pop
pop
cmp
insl
hlt
jle
mov
cs
shll
mov
jge
add
pop
fstpt
pop
add
cmc
addr16
mov
test
adc
insb
xchg
and
pusha
lds
insb
daa
jbe
das
xchg
shlb
leave
sbb
stos
xchg
mov
xor
mov
sbb
xchg
cwtl
ss
lods
and
test
lret
repnz
shrb
mov
pop
pop
test
mov
iret
stc
lea
out
adc
leave
mov
call
insl
popa
aam
pop
pop
xchg
icebp
insb
test
mov
and
mov
pop
jmp
or
rclb
cmp
or
out
cmpsb
or
jno
ror
orl
jg
pop
cmpsl
adc
or
ret
orl
pop
clc
mov
pop
pop
or
sub
inc
es
inc
movsb
int3
test
cmp
in
or
xchg
mov
cmc
add
mov
test
adc
push
cwtl
cs
sub
shll
push
je
popl
ficoml
imul
pop
cli
clc
mov
jnp
cmc
adcb
mov
mov
inc
clc
adc
jp
subb
hlt
shr
bound
push
add
mov
test
popf
lods
ljmp
xor
jle
mov
lock
push
pop
mov
push
fs
sbb
push
lea
out
inc
jo
pop
sbb
pop
pop
and
mov
imul
in
aam
cwtl
add
push
mov
test
inc
pop
push
mov
dec
ret
pop
jne
sbb
xor
arpl
sbb
iret
mov
fwait
mov
push
mov
rcll
inc
int
push
pusha
mov
popa
sbb
enter
push
cmc
mov
xor
pop
mov
stos
mov
imul
mov
jg
dec
inc
aam
test
shrb
dec
dec
mov
jo
inc
mov
jecxz
sub
inc
sbb
xchg
pusha
lods
sahf
out
ficoml
push
xchg
cwtl
movsl
push
aad
pop
sbb
and
fiaddl
imul
cli
jl
jns
stos
cltd
icebp
add
lcall
or
repnz
adc
inc
enter
push
push
loopne
sub
pop
bound
sbb
pop
popa
loop
enter
adc
cmp
jnp
aam
add
xor
lret
jo
add
or
cmp
dec
andb
mov
ds
sbb
clc
pop
xchg
sbb
push
pop
inc
add
arpl
inc
rorl
inc
cmpl
call
jbe
jo
lock
cmp
cld
fbld
push
push
imul
or
pop
sahf
push
adc
push
xchg
inc
pop
outsb
cli
mov
mov
inc
jl
adc
or
pop
stos
hlt
xchg
in
fnsave
lea
ret
sbb
jl
xor
loope,pt
push
shll
popf
hlt
enter
jge
sub
push
repz
popa
dec
int3
fidivrs
outsb
rcrb
mov
inc
xchg
lret
andnps
inc
ret
enter
add
mov
js
mov
jp
stos
xorb
dec
jecxz
jne
orl
or
mov
arpl
into
lcall
adc
loop
pop
jle
call
xchg
or
push
jb
jb
je
push
out
loope
insb
shr
outsb
mov
aad
lret
cs
sub
int3
movsb
dec
adc
shll
insb
mov
and
adc
cli
adc
mov
ret
or
sub
sub
aam
or
into
or
add
sbb
inc
mov
ja
rclb
arpl
insb
jle
mov
sahf
fstl
cmpsb
and
pop
pop
mov
jp
fiaddl
idivb
add
sbb
mov
push
sub
mov
lfs
wbinvd
jae
pop
mov
out
adc
pushf
mov
leave
jmp
loop
bound
pop
xor
mov
movsl
adc
add
test
jg
mov
orb
sarl
add
mov
jg
inc
dec
push
jbe
mov
adc
incb
cwtl
jnp
out
cmc
add
shl
xor
push
inc
xchg
add
mov
pop
cwtl
or
pop
movsl
sbb
inc
fsubs
iret
lret
inc
mov
fiaddl
mov
adc
cmpsb
leave
lods
mov
js
xchg
or
out
clc
loopne
movsb
xchg
sub
ret
cmc
add
cmp
orb
adc
inc
dec
cmp
or
xchg
loopne
inc
imul
mov
dec
jbe
sub
jnp
xlat
adcb
or
in
imul
pop
cmp
xchg
enter
or
pop
jle
inc
dec
add
inc
add
push
data16
add
test
aaa
insb
adc
mov
rcrl
or
scas
xor
push
fldcw
jge
adc
dec
sbb
fstpt
faddp
dec
inc
clc
test
add
xor
jg
push
cmpsl
mov
mov
scas
mov
mov
or
out
jns
adc
js
cld
aad
arpl
pop
lcall
cwtl
dec
inc
fs
xlat
fprem1
add
push
xor
aas
iret
xor
pop
pop
cli
fwait
dec
jecxz
jns
pusha
lcall
js
sub
rcll
push
adc
rcrb
lods
add
pop
stc
loopne
jecxz
xorb
sub
jb
sahf
shrl
js
ja
jbe
mov
mov
or
imul
movsl
ds
jne
js
fld
shrb
mov
scas
icebp
dec
cmp
aaa
les
mov
xchg
cmpsb
aad
xlat
fucomp
fwait
xor
xor
pop
int3
mov
aad
pop
shlb
cmc
mov
push
int
push
negb
inc
mov
imul
pop
sub
xchg
jle
mov
xlat
mov
jno
lds
cmp
mov
or
rcr
push
sbb
dec
lods
jb
ret
test
jns
add
test
cld
inc
lret
dec
addb
pop
xor
insl
aad
jp
sbb
rcr
je
inc
fs
or
push
mov
inc
fstpl
dec
mov
mov
cltd
ja
xor
lods
push
jo
mov
shll
push
push
mov
pop
inc
push
fidivl
xchg
scas
lods
add
sbb
xor
jle
rcll
aam
sbb
int3
and
and
jmp
mov
inc
inc
insb
push
scas
imul
lret
add
push
les
cmpsl
pop
sub
mov
icebp
push
ds
mov
dec
js
mov
mov
mov
jb
xchg
rol
and
pusha
xchg
out
shl
clc
jo
loopne
or
out
hlt
loope
add
xlat
jg
lods
push
arpl
rcll
lahf
cs
es
push
ret
adc
inc
mov
aam
sbb
clc
insl
or
xor
mov
clc
scas
mov
jne
jmp
lods
gs
lahf
pop
lcall
ljmp
cmp
outsb
shlb
or
and
sub
andb
adc
test
fisubl
mov
sub
rorl
dec
lret
clc
xchg
frstor
pop
js
gs
xor
popa
dec
mov
fwait
ret
mov
dec
sub
jle
sti
xor
and
ret
xor
xor
dec
dec
bnd
lock
push
lods
sbb
cmpsl
push
aas
pop
sbb
movl
je
mov
xchg
pop
or
test
sbb
dec
inc
repz
mov
adc
xchg
sub
mov
or
jp
xchg
and
mov
mov
pushf
pop
je
insl
stos
daa
push
nop
call
xlat
and
sbb
scas
aad
test
inc
movsl
jo
outsl
and
pop
and
push
push
adc
mov
mov
xchg
sbb
into
mov
cmpsl
cmp
notl
mov
add
push
sbb
aaa
mov
shr
push
loop
push
pop
adc
mov
inc
pop
xchg
push
pop
sbb
sti
fidivrs
fmull
xor
push
cwtl
pop
call
mov
mov
pushf
or
ss
pop
arpl
data16
sbb
inc
mov
mov
popf
ret
push
js
cmp
test
sub
pop
fbstp
inc
push
or
inc
bound
jg
sub
iret
pop
outsl
xor
lcall
adc
daa
add
movsl
xchg
add
inc
push
fildl
jbe
repz
adcl
adc
jle
xchg
push
add
call
pop
or
fwait
shll
pop
lret
ror
jo
movsb
inc
pop
stc
xor
dec
orl
cmp
or
ljmp
gs
dec
int
sub
mov
iret
add
lcall
rolb
xchg
fsubs
out
mov
les
cmp
jmp
mov
imul
push
dec
sbb
js
pop
cmpb
mov
mov
fmuls
fs
add
rolb
repnz
jle
or
test
jno
in
ss
loop
xor
mov
pop
cwtl
xchg
push
dec
add
andl
adc
and
inc
push
loop
mov
std
xor
xor
sahf
es
pop
hlt
test
push
call
loop
mov
leave
sbb
mov
imul
add
mov
add
and
jle
std
call
mov
dec
push
dec
adc
cmp
fldcw
rol
loopne
dec
popf
mov
bound
jl
cmp
pop
repnz
add
insb
push
ret
lea
adc
nop
push
sbb
inc
loop
cmp
and
add
jno
pop
adc
cmc
push
ds
cltd
daa
into
dec
adc
mov
in
hlt
or
clc
clc
or
adc
adc
mov
sub
out
pop
jecxz
push
fadds
fs
cmp
or
sbb
xchg
add
sub
pop
push
xchg
xor
sbb
fwait
add
dec
push
lahf
dec
jecxz
shlb
xor
lret
lret
mov
xor
xchg
mov
test
dec
fsubs
xchg
fstpl
ss
orl
jno
sbb
test
js
sbb
pop
or
fwait
jns
inc
mov
je
aad
push
xchg
out
arpl
inc
push
lret
mov
pop
or
pop
xchg
xchg
fimull
sbb
sbb
cs
stc
xlat
push
cmp
lret
push
shl
stc
xor
adc
xchg
pop
add
out
mov
jne
cmc
mov
xor
out
aad
inc
jp
lea
xor
dec
add
or
mov
je
les
jno
adc
cmpsb
shrb
cmc
fsubrl
ret
leave
dec
push
rcl
add
outsb
nop
inc
andb
mov
add
cmp
mov
mov
push
sbb
dec
scas
push
or
cmp
jns
aas
sub
lcall
pop
add
scas
jmp
pop
out
sbb
mov
sbb
dec
notb
mov
jle
cmp
add
cmpsl
movsb
adc
push
scas
xchg
adc
mov
dec
scas
push
add
les
aad
and
pop
or
jns
insb
aam
push
adc
inc
xchg
inc
sarl
scas
dec
push
inc
adc
out
jmp
mov
or
xchg
adc
pop
push
jmp
ds
pop
lods
jl
jno
fnclex
jl
push
cmp
push
es
data16
inc
inc
mov
shll
xor
xchg
push
cmp
mov
push
imul
mov
or
bound
mov
fst
xchg
lret
aas
outsb
sbb
push
xchg
fldenv
sahf
xor
dec
orw
add
jp
cbtw
int3
xor
xchg
jecxz
jg
jmp
and
dec
dec
add
pushf
inc
jecxz
insb
pop
add
sub
leave
jl
pop
fsubrs
push
or
imulb
out
or
mov
adc
subl
rcrl
insl
cli
rcrb
cmp
add
dec
xor
das
xchg
xor
inc
mov
icebp
int
pop
fbld
stc
or
cmp
rclb
popf
call
loopne
enter
sbb
dec
push
mov
adc
imul
and
ljmp
mov
cmp
stos
push
std
rolb
sbb
and
rorb
outsb
cmp
fcmovnbe
mov
out
push
mov
dec
imul
cmp
cmp
dec
add
sub
addl
add
and
bound
xor
mov
xchg
pop
mov
int
pop
mov
mov
loopne
jmp
adc
loop
mov
outsl
or
jmp
push
mov
jns
scas
js
pop
lds
pop
out
mov
pushf
add
mov
jmp
adc
push
cmpsl
adc
push
jecxz
loope
inc
ja
dec
xchg
and
xchg
cmp
rcrl
dec
xor
xor
fucomp
dec
popa
subl
pop
jne
loopne
xor
cltd
aaa
sbb
or
fldcw
add
clc
sbb
jge
sbb
adc
mov
sbb
xchg
jge
nop
mov
mov
test
add
pop
aad
ljmp
in
jmp
out
insb
dec
ljmp
add
xchg
xchg
loop
or
inc
cmp
loopne
mov
arpl
xchg
pop
out
test
mov
inc
mov
aam
rcrb
loope
cmp
dec
mov
out
push
in
push
pusha
dec
mov
sahf
mov
int3
cmp
clc
xor
jns
mov
pop
std
push
jmp
dec
clc
pop
sbb
les
mov
outsb
sub
adc
or
adc
cli
shlb
fld
cmpsb
sbb
imul
push
mov
dec
and
inc
xchg
mov
lock
xor
pop
pushfw
cmp
imul
jno
cli
lahf
shr
int3
jle
stos
jp
das
or
int
arpl
dec
push
fs
pop
mov
stc
xor
movsl
int3
testl
arpl
fisttpl
sub
jmp
cmp
popa
shr
push
xor
mov
or
cmp
cmpsb
dec
xor
or
mov
andl
mov
jb
or
xchg
push
out
inc
jg
jae
in
jecxz
adc
lahf
mov
mov
mov
add
pop
and
shlb
push
and
sub
lods
flds
lods
adc
and
loope
dec
xchg
andb
xchg
loopne
ret
xor
cmp
scas
add
cmc
fbstp
xchg
jo
cmc
out
cmp
repnz
xchg
push
in
insl
stos
mov
pop
or
rolb
bound
sahf
stos
rcr
adc
pop
and
jns
jl
inc
and
outsl
xchg
inc
ljmp
mov
cwtl
rcll
lds
and
adc
pop
xor
pop
repz
pop
popf
rolb
shrl
shl
lods
cmpsb
lods
mov
push
mov
fwait
push
pushf
mov
test
dec
mov
sbbl
hlt
das
jecxz
and
xor
jge
dec
movsbl
out
add
sahf
data16
sbb
in
push
outsb
jecxz
mov
jo
gs
int
sahf
sbb
in
push
lahf
scas
inc
pusha
cmpsl
pusha
ss
fdivl
mov
inc
mov
cmp
ret
test
sub
dec
push
ja
and
pusha
sub
push
pop
pop
adc
in
lcall
lcall
dec
test
cmp
jo
adc
mov
or
inc
xor
cmp
mov
int
sti
cmp
rclb
lahf
xchg
sti
jp
fs
shrb
pop
pushf
xor
in
pop
sub
adc
lea
out
add
push
fdivs
jle
int
sub
mov
jl
cmp
mov
add
jns
sbb
inc
rcl
repnz
or
xor
cmpsb
aas
ss
loope
aaa
dec
xor
push
data16
enter
mov
xchg
lods
inc
cmp
test
pop
fbld
sbb
mov
movsb
push
rcrb
jecxz
rorb
dec
xchg
fcoms
mov
aad
clc
cmp
insl
pop
and
call
jae
inc
std
scas
or
jo
shlb
and
cmp
sub
mov
push
sbb
aad
lock
loop
jp
cmp
shll
int3
xchg
frstor
xor
xlat
int
jge
ja
inc
pop
add
pop
sub
jbe
cmp
loope
dec
inc
test
aam
xor
xor
imul
xchg
out
mov
in
test
lods
shll
fsts
insb
sbb
push
mov
mov
mov
hlt
ljmp
xor
idiv
lods
or
int
cmp
mov
lcall
clc
addb
mov
loop
ret
pop
push
push
add
dec
pop
inc
or
daa
push
or
inc
stc
push
outsl
leave
inc
mov
pop
push
in
xchg
mov
inc
stos
sub
les
outsb
mov
loopne
push
cmp
inc
pop
xchg
push
sub
into
jno
jno
mov
push
enter
insl
movlhps
sar
push
jns
movsb
mov
dec
jge
int
pop
testb
mov
icebp
es
push
mov
scas
adc
mov
adc
cmp
inc
push
in
rcr
xor
test
lods
cmp
push
push
scas
cmpsb
int
aas
xchg
cltd
arpl
fldt
xchg
mov
xchg
out
data16
sbb
aam
cmp
add
or
push
loope
stos
cmpsb
orl
dec
add
mov
rol
lods
dec
aad
adc
fidivrs
pop
mov
xchg
mov
into
xchg
add
lock
hlt
pop
aam
fs
xchg
sar
sbb
jmp
imulb
push
xor
add
andb
lds
and
int
popf
and
or
f2xm1
aad
movsl
inc
rcrl
test
cli
mulb
icebp
inc
cmp
jmp
mov
sub
xchg
mov
and
test
push
push
cmpsb
push
cmp
hlt
outsb
jle
xchg
or
jo
incl
mov
rol
jg
das
or
popf
sbb
mov
add
jl
pop
rcrl
mov
sahf
adcl
shl
mov
mov
imul
movsb
dec
subl
sahf
sub
lea
rorb
add
adc
and
pop
adc
dec
sbb
ret
scas
xchg
add
ds
sbb
sub
cmp
and
fs
push
inc
mov
inc
gs
xchg
jecxz
in
sub
mov
stos
fcompl
rclb
js
push
lds
adc
add
cmpsl
cmp
loope
lcall
into
pop
mov
adc
mov
insb
ret
cmp
push
jg
scas
adc
cwtl
xor
mov
jnp
clc
test
sub
icebp
arpl
sbb
sub
stc
aas
dec
add
test
xchg
pop
cmpsl
add
test
int
sti
loopne
xor
adc
lea
daa
decl
cmp
jp
jecxz
mov
dec
roll
push
sti
pop
mov
mov
ja
sbb
sbb
jno
jl
add
and
shlb
sbb
mov
or
mov
rorl
fimull
mov
xor
cmpsl
lcall
push
dec
add
inc
ss
inc
out
pop
repnz
loope
inc
bound
ds
jl
sub
dec
push
outsl
in
cli
into
lcall
int
sbb
je
test
fcmove
aam
mov
das
lea
inc
mov
cwtl
dec
aad
arpl
mov
pop
xchg
shrb
or
or
rolb
rorl
or
or
jo
jmp
pop
data16
add
lods
jnp
icebp
test
mov
ds
cmp
xchg
mov
lds
pop
xor
fisubrl
pop
pushf
jmp
daa
pop
xchg
les
pop
lret
fwait
xchg
mov
add
sub
loope
int3
pop
pop
push
pop
mov
inc
cmp
xchg
add
inc
xchg
enter
int
adc
mov
and
repnz
imul
andb
lods
jmp
jl
out
cld
mov
insl
mov
adc
or
and
mov
lret
cmpsl
lock
cli
incl
dec
xchg
or
adc
add
mov
mov
mov
clc
mov
add
in
jmp
xchg
push
test
js
mov
push
jecxz
push
icebp
dec
fs
cmp
sub
or
jle
inc
cwtl
int3
test
js
sbb
fwait
pusha
scas
pop
stos
icebp
sub
das
pop
aad
cmpsl
sahf
cmpsl
sub
sbb
repnz
in
inc
pop
arpl
mov
dec
out
movsb
adc
adc
xchg
sub
popa
and
sbb
inc
mov
pop
push
scas
out
dec
mov
outsb
stos
push
scas
in
mov
insb
loope
das
dec
aad
test
or
xchg
shl
loop
ret
nop
jbe
in
mov
cmp
inc
inc
cmc
mov
push
mov
movsb
dec
xor
aas
jno
mov
lods
stc
neg
outsb
popf
imul
mov
in
loop
orl
roll
pop
cmp
push
cmc
jns
nop
rcrb
mov
lret
and
andl
rcll
stos
in
ja
fsubs
and
inc
jp
or
adc
and
push
lret
repnz
jno
rep
movsl
in
cltd
je
out
imul
dec
les
adc
dec
push
jb
and
adc
loop
mov
or
xor
inc
push
loop
cmp
pop
test
dec
or
scas
sbb
pop
pop
adc
rol
sbb
mov
std
add
add
add
shll
ljmp
cmp
and
jl
imulb
and
dec
shll
xor
cmp
pushf
push
mov
mov
xor
movsbl
mov
mov
cli
lret
scas
shlb
dec
clc
subl
pop
cmp
cltd
js
xlat
xor
test
or
sbb
ret
pusha
mov
imul
inc
roll
orl
lock
rcll
mov
cmp
aas
je
test
mov
enter
dec
pusha
outsl
mov
pop
fdivl
daa
mov
icebp
jnp
mov
sbb
push
sbb
sub
or
or
ja
add
pop
cmpsl
xor
add
mov
jne
or
pop
loopne
jl
mov
stos
mov
mov
cmp
scas
mov
cld
sbb
and
xchg
push
repnz
bnd
add
xor
mov
call
xchg
xchg
dec
add
inc
jne
aas
dec
loopne
push
mov
out
push
push
pusha
mov
jmp
jb
mov
lods
push
stc
dec
bound
pushf
pop
jge
lahf
rclb
stos
xor
sbb
stos
mov
cltd
cmpsb
ja
push
out
enter
mov
xor
cmp
inc
lock
shl
push
scas
popa
jge
push
push
pop
or
or
aam
add
inc
pop
rorl
inc
cmc
adc
lock
sub
movsl
hlt
adc
sub
repz
mov
stos
flds
sbb
pop
dec
inc
in
mov
jb
mov
cli
push
xchg
sub
ljmp
mov
mov
jecxz
xor
lods
mov
push
aam
incl
mov
xor
in
out
push
nopl
push
outsl
popa
mov
sbb
lcall
roll
add
or
arpl
loope
inc
push
push
nop
loope
loopne
adc
push
add
nop
sbb
sbb
mov
adc
push
into
cs
insb
cmp
test
stc
adcl
ds
inc
pop
jecxz
inc
aas
sbb
and
push
loope
xchg
leave
cmp
daa
cld
inc
mov
sub
push
mov
shll
mov
inc
jbe
testb
mov
adc
mov
repz
fmull
das
sub
add
jmp
xor
into
mov
dec
push
addr16
inc
cmpsb
sbb
pop
pop
add
dec
mov
dec
fcoml
cmp
test
mov
sbb
dec
int
and
cmpsl
aam
icebp
je
xchg
mov
cltd
push
mov
daa
shll
cmp
mov
into
and
inc
fistl
mov
orb
sbb
leave
flds
xchg
sbb
xchg
imul
aaa
xchg
pop
cmpsb
jbe
mov
in
push
out
jmp
jbe
pop
loope
std
lock
rclb
aaa
aas
test
fbstp
arpl
mov
aam
or
adc
and
push
xor
cld
push
cmovb
enter
xor
cmc
jnp
mov
call
push
rcll
lret
std
addb
cltd
cld
cmpl
insl
out
or
outsl
popfw
push
or
or
test
outsb
jl
movsl
add
cli
int
cmp
jns
inc
repz
add
push
add
repz
loopne
stos
cmpsl
jg
outsl
lahf
sub
xchg
mov
sub
xor
repnz
adc
aas
lahf
sets
test
aad
jecxz
pop
mov
test
mov
pop
lret
lret
mov
pop
push
add
mov
push
out
sarb
aam
xchg
add
popa
adc
shlb
xor
mov
cmp
mov
test
daa
call
std
sub
jle
add
addr16
lock
cmp
pop
ljmp
push
lock
xlat
or
push
inc
mov
and
cmc
ficomps
mov
xor
cltd
ss
testb
mov
sbb
into
mov
stos
lds
xchg
push
sub
icebp
fsubp
cmp
dec
mov
xor
fs
sub
mov
push
adc
lods
and
test
aad
std
scas
mov
sbb
lods
pushf
movb
popf
jo
push
std
xchg
lds
push
cmp
shlb
push
outsl
test
mov
or
add
xor
adc
push
fwait
or
loope
loopne
cmp
cmc
rorb
inc
in
xor
imul
pop
rclb
lods
xchg
mov
mov
adcl
push
outsb
xor
inc
push
popf
mov
adc
out
rcll
adcb
add
arpl
inc
sub
mov
adc
add
cmpsl
pop
sbb
mov
dec
mov
outsb
mov
test
adc
mov
jno
pop
add
fistpll
pop
pop
sbb
cli
test
and
jge
lea
inc
dec
inc
shr
fadds
fimuls
xchg
dec
mov
xabort
jo
fildll
adc
mov
repz
sub
and
xlat
push
fidivs
sub
aad
test
jno
xchg
int3
and
mov
icebp
pmulhw
stc
add
and
cmp
mov
fs
rclb
shl
cmpsb
sbb
jecxz
in
inc
repz
mov
std
ret
mov
sbb
stos
es
xchg
sahf
mov
or
xor
cs
dec
and
idiv
mov
adc
mov
sbb
scas
dec
jae
sbb
call
jbe
rcll
in
iret
rol
and
mov
ljmp
mov
nop
cmc
ds
aad
sub
and
push
cmp
rolb
lods
pop
dec
dec
lahf
cmpl
mov
cltd
xor
fiadds
or
mov
std
inc
xchg
daa
leave
int3
in
add
int3
mov
les
fists
subl
push
scas
or
insb
bsr
push
icebp
test
jo
imul
or
sarl
push
ret
add
pusha
mov
inc
push
popf
pusha
add
test
adc
mov
pop
aad
hlt
xlat
je
arpl
xchg
hlt
movsl
mov
cmc
sbbb
dec
sub
mov
adc
je
jns
mov
push
mov
jg
pop
cmp
sub
xchg
sub
mov
pop
xor
mov
insb
les
jo
push
xor
push
xor
mov
dec
cmp
dec
add
xchg
int3
gs
sbb
ret
jl
inc
mov
loope
leave
roll
mov
adc
mov
push
rolb
rcl
loopne,pt
pop
jge
andb
ficoml
cmp
xchg
imul
add
and
clc
jo
or
cmpsb
cld
and
pop
cmpsl
cmp
sub
push
insb
jl
nop
ljmp
dec
inc
mov
mov
xchg
inc
dec
pop
fiaddl
jecxz
std
movsl
mov
in
sahf
ds
cmpsb
cmpsl
fst
test
sbb
je
das
leave
rcrl
cmp
pop
mov
les
fadd
mov
mov
insb
xor
inc
int
adcl
mov
cs
or
adc
push
adc
mov
lret
push
inc
mov
pop
clc
popf
cmp
js
push
adc
lods
ret
sbb
rol
lods
cmp
push
pop
jmp
mov
sbb
mov
or
mov
sbb
inc
cmp
cli
fs
scas
inc
jle
cmc
mov
ret
popl
notb
jle
ss
or
aam
add
push
lods
ret
cli
inc
test
out
aad
mov
mov
sbb
add
sbb
xchg
sbb
ljmp
mov
es
sbb
lock
xchg
mov
nop
mov
cld
shlb
xor
nop
pop
mov
mov
mov
xor
add
jb
and
inc
jp
adc
mov
ds
pop
cmp
mov
jnp
mov
insb
pop
jmp
or
or
push
cmp
inc
dec
add
shlb
jle
popa
push
pop
divb
and
sbb
insb
sbb
leave
pop
sahf
adc
mov
insl
hlt
mov
movsl
jge
lret
push
shll
adc
adc
loopne
and
and
add
dec
jnp
xchg
mov
xchg
push
sub
pop
mov
push
dec
xchg
dec
xor
or
jp
xchg
mov
not
sahf
pop
adc
push
mov
mov
or
jp
mov
aam
rcll
lea
sbb
repnz
sbbb
fcoms
movsb
or
pop
dec
add
sub
sub
add
dec
sub
xor
xor
pop
pop
jns
push
inc
fidivl
mov
lods
cmpsl
push
les
loop
dec
leave
ljmp
fsub
adc
sbb
pop
ficoml
jns
daa
jne
xchg
clc
push
data16
inc
cmp
xchg
push
je
jle
lods
pop
jl
pusha
jmp
sbb
fmuls
inc
push
test
mov
ficoms
daa
addr16
sahf
ja
jmp
pop
sub
adc
lea
xchg
sub
fisubs
pop
xchg
frstor
pushf
push
push
cmp
dec
mov
or
movsb
fwait
sbb
mov
mov
add
enter
xor
jecxz
bound
push
mov
pop
jmp
ja
aam
lods
sub
cmp
je
sbb
dec
sbb
or
arpl
testb
int3
aam
mov
xor
sbb
inc
inc
mov
adc
sbb
cld
xor
or
lret
repz
pop
sub
fbstp
add
push
add
stos
int
scas
adc
adc
js
or
jbe
mov
xchg
sub
or
cmc
mov
imul
lret
test
loopne
adc
dec
sub
adc
sub
jl
mov
add
out
lock
push
sub
jmp
mov
sbb
xchg
inc
icebp
pop
xor
cmp
nop
or
mov
repnz
insl
or
pop
sub
cmc
lods
js
jb
xor
test
or
stos
xor
pop
fs
and
push
mov
add
push
les
jp
inc
xchg
call
es
shr
sub
loope
cmpsb
push
out
mov
dec
fs
cmpsb
js
jo
push
jbe
mov
imul
xor
imul
mov
clc
aad
fldenv
sub
sbb
add
adc
push
mov
dec
insb
add
push
xchg
adc
cmp
sub
loopne
movsl
mov
mov
or
add
push
jecxz
pop
movsl
inc
out
shl
fadds
jecxz
addl
jo
mov
cli
enter
mov
ret
movaps
stc
sahf
notl
in
push
or
repz
lock
xor
and
mov
subb
notb
in
xchg
faddp
lret
das
cltd
nop
loope
sbb
dec
cmp
inc
test
and
dec
mov
jmp
inc
fadds
adc
mov
out
lods
js
sahf
adc
adc
hlt
iret
aad
pop
sub
jmp
dec
ret
lret
fstps
push
xchg
or
sbb
cld
in
add
sbb
mov
push
subl
icebp
scas
push
std
movb
jp
xchg
jne
inc
addr16
sub
lock
mov
dec
mov
shrb
and
int
mov
mov
xor
add
fiaddl
mov
jge
push
xchg
add
mov
mov
sbb
jo
shrb
sub
icebp
sub
stos
and
inc
shl
dec
xorb
pop
xchg
push
push
out
loop
cli
dec
pop
add
inc
loope
sbb
mov
mov
cmpsl
lcall
or
mov
sbb
inc
sbb
dec
sub
aas
push
stos
fs
xchg
out
dec
xor
push
jl
movsl
xor
inc
xchg
push
cmp
adc
addb
sti
cli
pop
out
mov
cmpxchg
push
adc
mov
xchg
ret
or
cmpsb
push
inc
scas
inc
shll
mov
test
loop
fchs
in
stos
or
dec
inc
ficoml
or
lea
xorl
out
add
rorl
dec
and
imul
mov
inc
stos
sub
push
out
sbb
and
sar
and
pop
push
mov
addr16
fiaddl
mov
aad
mov
sbb
fst
inc
mov
jnp
inc
fwait
xchg
ja
or
xchg
repz
les
push
or
ret
js
and
mov
push
cmp
movsl
jbe
movsb
xchg
push
dec
mov
dec
and
popf
jg
jmp
jge
mov
lcall
lods
inc
add
mov
jne
popa
dec
jo
sub
fistl
xchg
and
outsl
cwtl
inc
fstpt
orl
lds
outsb
xchg
clc
rcrb
pop
aas
shl
repnz
jbe
setl
jne
mov
bound
and
adc
and
mov
stos
cld
sbb
scas
sbb
idivl
stos
mov
mov
test
vpcmpeqw
cltd
jmp
sbb
xor
std
mov
mov
imul
out
loop
pop
lret
cmc
lock
mov
xor
lcall
xor
lods
mov
push
scas
pop
nop
rorl
aam
add
cmp
push
push
push
sbb
testl
test
and
ret
and
loop
stos
es
scas
icebp
js
mov
arpl
loopne
repz
mov
push
rcrl
adc
js
push
aas
rcr
int
and
hlt
cltd
lock
out
sahf
push
sbb
mov
dec
js
push
mov
push
rcll
mov
jg
imul
pshufw
jecxz
fcompl
loopne
cmp
push
loopne
ljmp
push
push
scas
sub
cs
cmp
cmc
sub
xchg
adc
ja
in
and
insb
cmp
loop
mov
ja
mov
xor
mov
mov
andl
ficompl
xchg
mov
sbb
jne
mov
or
aad
xchg
push
mov
shlb
enter
loop
add
push
stos
and
and
sub
push
inc
lcall
cli
and
imul
push
movsb
shll
mov
movsl
push
sbb
cmpsb
pop
loop
adc
std
adc
adc
loop
pop
idivl
les
es
je
movsb
stos
jp
aad
daa
jp
mov
outsb
call
lods
imul
jl
xor
push
nop
js
xchg
jmp
jmp
jge
xlat
aam
pop
sbb
les
jecxz
lcall
lock
ja
sub
inc
loopne
ja
int
je
inc
lahf
andb
repz
sbb
push
mov
add
movsb
loope
scas
push
inc
mov
sbb
lret
aas
xorl
mov
adc
outsb
data16
loopne
push
test
fildll
adc
lahf
jo
push
fnstcw
pop
dec
hlt
ss
mov
sub
adc
pop
pop
adc
xor
cmpsl
mov
sarb
jmp
insl
js
jp,pt
cmp
mov
loopne
loop
sbb
iret
pop
jecxz
rolb
hlt
and
imul
push
xchg
adc
adc
mov
add
xor
cmpsb
daa
repz
in
xchg
out
sbb
test
mov
xor
dec
mov
pop
mov
fisttpll
fidivrl
rclb
mov
and
cmp
push
out
pop
mov
movb
adc
movsl
ja
and
nop
test
xchg
jp
test
xchg
xor
or
sub
pusha
test
inc
sub
out
xlat
adc
pop
push
ret
xlat
jl
mov
negb
fwait
testb
adc
jp
jp
adc
bound
xor
mov
hlt
sub
lods
xchg
insl
and
into
jo
je
and
mov
test
lods
out
rolb
dec
sbb
mov
mov
xchg
dec
shll
aaa
or
movsb
inc
mov
jle
sbb
in
roll
jl
add
fisttpl
rcrb
add
adc
mov
xlat
jae
and
lret
ja
pop
add
xchg
mov
jo
xor
inc
xchg
rcrb
lcall
ret
arpl
pushf
mov
add
std
and
data16
out
fistps
or
ret
mov
rcr
jl
push
push
mov
cmp
adc
enter
popa
lock
shlb
pusha
clc
stos
inc
mov
sbb
sbb
enter
cmp
fldenv
jecxz
sbb
add
imul
mov
loope
call
ljmp
clc
push
jl
popl
int
xor
mov
xchg
arpl
lock
cld
pop
dec
fcmovu
mov
lea
or
adc
dec
rorl
and
dec
push
adcb
es
rorl
imul
sahf
and
sarb
and
jo
mov
xchg
rep
dec
cmp
outsl
sbb
fnstenv
inc
inc
sub
shlb
mov
mov
mov
or
and
pusha
mov
and
xorb
and
std
gs
icebp
test
loop
fmuls
jbe
imul
inc
pop
rcr
and
loop
outsb
mov
mov
or
scas
ljmp
sub
push
insb
pop
or
add
imul
ret
fistps
mov
test
pop
int3
inc
out
bound
cmpsb
xchg
addl
jae
sbb
sbb
imul
and
push
adc
shlb
test
jl
push
mov
mov
jo
sub
or
mov
mov
cli
xchg
rep
mov
fnstenv
ret
lods
add
pop
sahf
mov
je
mov
push
dec
dec
xchg
push
cmp
mov
add
inc
dec
sub
lock
jmp
sub
sub
or
in
lahf
out
cmc
bound
lods
cmp
jmp
rcll
dec
xor
cmpsb
jmp
test
mov
adc
sbbl
ret
inc
sbb
mov
repnz
pop
sti
adc
sub
sub
lahf
fldenv
in
xchg
pop
sbb
sub
in
cmp
popf
test
int3
mov
xchg
loopne
or
xchg
test
and
sub
and
dec
rcrl
sti
and
xor
imul
call
pop
sbb
lock
fistpll
xchg
incb
add
lds
addr16
loop
jmp
pusha
push
jns
andb
lods
sub
jno
icebp
jns
xchg
jbe
repz
add
xchg
andl
inc
inc
xor
sub
mov
in
in
cs
inc
insl
adc
das
outsb
push
mov
xor
ret
incb
outsb
lods
popf
mov
push
pusha
lahf
xchg
mov
das
push
aaa
cwtl
and
jmp
loope
and
cs
pop
imul
icebp
xorl
mov
adc
icebp
add
inc
push
hlt
mov
stos
daa
push
lods
or
fs
aaa
sbb
mov
xor
cmp
jmp
sub
push
test
lds
stos
mov
mov
notb
mov
jmp
mov
loopne
mov
fxsave
mov
adc
cmpsb
adc
fisttps
inc
icebp
jns
loopne
adc
sub
mov
scas
into
sbb
ret
add
inc
and
pop
inc
lea
pushf
je
and
ret
cwtl
loopne
push
mov
sub
pop
int3
outsl
and
sub
test
rorb
mov
hlt
shl
decl
cltd
jl
addr16
cmp
and
fst
fptan
sbb
mov
xchg
orb
adc
cmpsb
dec
add
scas
cmc
or
sahf
add
inc
mov
lock
add
jmp
cwtl
xor
test
orl
movsl
jle
enter
sbb
out
out
aam
xchg
mov
scas
push
xchg
cmp
cmp
and
sbb
or
jge
inc
dec
test
lret
jmp
aaa
xor
push
rcll
jecxz
test
es
jb
int3
mov
mov
movsl
xor
ss
push
lahf
std
aam
add
xor
dec
stc
and
aaa
fidivl
xchg
icebp
cmpb
and
cmpb
mov
cld
mov
pop
inc
ret
outsl
jb
loopne
jns
mov
loope
test
cs
clc
lret
repz
inc
aad
xchg
pop
iret
mov
add
pop
divb
leave
lock
ret
test
mov
dec
xor
cmpsl
xor
repnz
icebp
inc
popa
rcl
cmp
orb
sbb
repz
sbb
out
pop
inc
mov
jno
sub
mov
pushaw
into
push
loope
out
push
pusha
mov
sbb
adc
and
adc
xchg
xchg
shll
ljmp
dec
push
js
aas
and
jae
and
rcrb
cwtl
adc
sbb
sbb
mov
or
popa
call
in
es
pop
inc
movsl
cmpsb
lret
movsl
adc
push
or
cltd
pop
test
mov
and
into
movsl
xlat
jnp
adc
jp
fwait
sbb
imul
insl
sub
lock
mov
std
popa
or
push
cli
cld
arpl
lock
rcrb
and
mov
rclb
insl
xlat
stos
xor
bound
jmp
pusha
in
es
pop
in
lcall
pop
and
in
jmp
mov
push
push
push
adc
and
xlat
clc
jge
sbb
cmp
fsts
mov
in
or
xchg
or
mov
clc
test
ja
push
fstpl
outsb
xor
out
clc
mov
fincstp
xchg
adc
cli
dec
cmp
and
push
mov
movsb
inc
mov
dec
cmc
addb
shlb
mov
push
loope
mov
xchg
js
loopne
push
subb
mov
or
cmp
mov
xor
lock
mov
push
cmp
dec
dec
jo
jl
jnp
shrb
mov
xchg
jmp
xor
jg
pop
adc
ss
jno
sub
push
pushf
inc
mov
inc
lcall
jo
push
shr
mov
in
cmc
pop
jle
fisubs
cltd
adc
mov
push
and
inc
sub
rolb
outsb
ljmp
lret
data16
popf
push
cmc
inc
addr16
pop
pusha
mov
movsl
jns
mov
mov
sbb
subl
mov
xchg
addl
xor
dec
jo
mov
fimuls
mov
pop
xchg
jb
jl
cmp
xlat
cmp
or
mov
lods
rol
inc
xchg
sbb
mov
jp
pop
loopne
sub
jbe
pop
xchg
pusha
sub
shl
ret
and
fistps
enter
loopne
movsl
mov
popf
jmp
add
pop
jbe
mov
lods
jae
and
sarl
addr16
adc
arpl
push
pop
push
push
pop
pop
bound
stc
pop
mov
sub
test
subb
call
sub
rolb
inc
dec
clc
add
test
mov
adc
aad
sar
add
imul
jle
cmp
and
sbbl
addr16
xor
aam
adcl
push
push
add
es
dec
ret
test
lcall
xor
cltd
cmpb
into
jmp
jne
fisttpl
and
fwait
in
in
push
movsl
or
push
mov
gs
test
mov
scas
sbb
repnz
sbb
jne
pop
pop
lock
cmp
or
movsb
jo
jnp
in
incl
pop
ret
rclb
adc
mov
sbb
mov
push
mov
mov
lea
inc
repz
popa
dec
jge
mov
mov
clc
mov
testl
mov
stos
repz
fdivrl
aas
movsl
pop
imul
leave
ds
sub
push
xor
push
jge
lret
aaa
ss
ljmp
fnstenv
xchg
arpl
ss
xchg
and
xchg
pop
mov
decl
or
and
js
jno
scas
mov
inc
adc
pop
push
jae
nop
inc
dec
or
jg
les
in
fiadds
mov
and
iret
aas
cmc
ljmp
add
addb
bound
cmc
or
mov
xchg
rolb
orl
stos
jg
mov
rcrl
popf
jns
fadd
mov
adc
jl
push
insb
shr
rolb
mov
lds
xor
cmpsl
hlt
xchg
dec
pop
inc
sbb
jg
lea
stos
pop
mov
imul
in
mov
mov
rcrb
or
push
arpl
push
jge
xlat
fstp
and
mov
cmpsl
push
or
and
test
mov
xor
jp
add
movsl
pusha
xor
lcall
pop
je
jle
adc
xor
stc
lret
sub
int3
fld
fdivs
adc
add
mov
and
and
adc
mov
inc
inc
mov
adc
add
in
movl
imull
iret
xchg
push
enter
push
lahf
je
jle
imul
pop
mov
js
repz
cmp
and
test
add
sbb
dec
pop
lret
clc
jnp
aam
jae
xor
dec
or
sub
movsl
lahf
add
sbb
scas
pop
jecxz
sbb
aas
cltd
scas
inc
dec
add
adc
int
fs
pushf
inc
mov
push
cmpsl
mov
cmpsb
in
mov
jbe
or
fucomi
add
leave
cwtl
push
sbb
ret
lds
add
xchg
cmp
fsts
and
hlt
and
in
lahf
xchg
xchg
add
mov
pop
lods
subl
mov
adc
and
inc
hlt
cld
push
pop
jne
add
inc
pop
or
cmpsl
or
cmp
pop
mov
cmp
push
test
pop
nop
inc
sbb
and
sbb
pop
xchg
faddl
loop
mov
pop
cmp
push
ljmp
jo
mov
jae
test
icebp
push
pop
jge
and
outsl
jge
adcb
adc
mov
cmpsb
shrl
mov
aas
test
js
inc
dec
int
inc
sub
xor
js
pop
scas
jno
cmp
pinsrw
cmc
adcl
pop
fwait
or
stos
loop
test
and
lret
cltd
sub
adcl
sbb
or
jo
jno
mov
inc
and
lahf
pop
push
push
or
roll
and
sbb
cmpsb
jmp
es
jp
lea
jbe
je
push
mov
roll
pop
and
jnp
add
jne
mov
cmpsb
sub
test
push
cmp
cmc
call
lahf
push
mov
and
pop
subb
push
dec
lahf
popa
fsubrl
shlb
xlat
ret
mov
dec
lret
mov
fiadds
je
movsb
push
in
push
mov
daa
out
jne,pn
stos
jne,pt
in
rcrb
jo
cwtl
cmpb
and
mov
jns
pop
cmp
add
mov
test
add
jns
pop
sti
jbe
in
push
pop
jne
push
cld
cmpsb
push
aas
add
push
pop
push
mov
adc
loope,pt
mov
outsb
cmp
xorl
or
add
jmp
mov
ret
mov
pop
or
loop
adc
test
test
mov
cmp
shrb
cmpsb
add
cmpsl
jne
testb
aaa
aad
mov
push
and
test
dec
ja
jecxz
pop
fidivrl
rcrl
lock
pop
aam
pop
mov
adc
mov
stc
inc
sarl
or
sbb
ljmp
push
pop
or
xor
adc
insl
aam
movsb
sbb
mov
stos
push
fadds
sub
movsl
out
cmpsl
xlat
push
cwtl
imul
adc
cwtl
test
cmp
xchg
push
adc
rcrb
mov
and
xchg
sbb
rcll
movsl
and
mov
pop
inc
pop
ret
sbb
jge
iret
imul
push
push
xchg
push
xor
nop
loopne
mov
mov
stc
sbb
xchg
std
shlb
arpl
xor
out
int3
and
test
es
stos
push
or
cli
add
loop
iret
mov
bound
cmp
test
jne
adc
mov
or
push
xchg
dec
scas
or
pop
fwait
inc
adcb
pop
mov
jmp
or
ljmp
daa
stos
xor
xor
and
dec
dec
or
call
sub
test
shlb
jge
mov
pop
out
add
test
sbb
test
pop
pop
ficoms
rorb
mov
inc
subl
mull
mov
push
test
cmp
mov
dec
jp
pop
xor
std
call
imul
cmp
pop
push
push
xchg
fildll
jno
or
jmp
aaa
pop
pop
cmc
xlat
out
add
inc
rol
push
loop
sahf
pop
or
fldenv
mov
dec
cli
mov
fnstsw
add
je
fisubrl
adc
xor
adc
and
pop
cmp
lods
push
push
mov
aam
push
lret
shrb
add
das
sbb
dec
cmc
jno
sub
add
xchg
push
jns
fiaddl
cmp
jg
call
test
mov
xor
xor
in
ret
xchg
shll
arpl
jecxz
shrb
push
addb
push
lahf
movsb
or
test
jp
mov
shll
out
xchg
and
mov
add
xchg
mov
out
push
jecxz
adc
lods
push
bound
jg
mov
fwait
dec
lahf
popa
cmp
inc
jmp
sbb
mov
repnz
jmp
mov
cld
xor
rorb
adc
xlat
mov
mov
popa
out
pop
dec
shl
push
rol
outsb
sbb
and
clc
xor
popf
loope
sbb
jmp
dec
cld
cmc
or
and
push
ret
push
mov
and
stos
mov
adc
leave
inc
fwait
inc
ds
test
pop
cltd
and
inc
ret
cmp
or
inc
mov
popf
call
mov
dec
fisttpl
lods
out
rorb
mov
xchg
add
into
sub
mov
adc
xchg
pop
cmpsl
pop
aaa
jns
jbe
aam
lds
cs
add
aas
call
fsubl
xchg
test
and
xlat
or
gs
aas
inc
cmc
out
shlb
jmp
mulb
test
dec
add
sarl
push
mov
loope
mov
mov
adc
adc
mov
jle
lcall
jecxz
cmp
mov
in
in
pop
fdiv
loopne
sbb
jge
loopne
ret
adc
orl
cs
loope
mov
jge
pushf
mov
test
inc
xchg
mov
mov
lds
divb
lret
xchg
sbb
push
adc
insl
sub
loop
adc
dec
mov
jg
dec
movsb
and
aaa
lret
mov
inc
ret
mov
ja
jmp
add
mov
dec
pop
sub
fmull
xchg
out
aad
int3
cmp
js
stos
mov
ds
add
mov
add
rorb
sub
pop
test
movl
insb
xchg
sub
outsb
xchg
ss
test
loopne
inc
jb
or
sbb
dec
mov
mov
add
loope
addl
and
or
test
adc
dec
cmpsl
lcall
cmp
or
xchg
jns
stos
lock
push
ret
out
pop
cs
cwtl
or
jb
pop
pop
shlb
add
sbb
ficomps
loop
mov
pop
sub
dec
sti
pop
push
cmp
loopne
fwait
add
pop
add
stc
mov
or
addr16
or
outsl
imul
cmpsl
sarl
pop
mov
mov
sub
sete
in
jbe
xchg
arpl
inc
adc
and
push
add
loope
mov
dec
inc
jg
pop
into
lsl
xor
mov
inc
push
rol
scas
cmpsl
int
mov
stos
add
aad
jb
mov
loop
mov
movswl
aaa
test
loop
jecxz
xor
aam
and
sarl
jns
or
push
out
aad
and
dec
std
dec
test
ror
cmp
sub
sahf
mov
cld
ja
sbb
std
stos
or
add
and
in
xchg
out
test
data16
test
adc
ljmp
xlat
sbbl
fldenv
popa
fnstsw
dec
push
sub
push
mov
fstps
mov
xor
sarb
push
mov
mov
addr16
jl
in
xchg
fidivrs
mov
nop
cmc
frstor
xchg
dec
mov
scas
imul
mov
push
fdivp
test
enter
jae
jle
cmpsl
fwait
mov
and
push
lods
data16
jle
or
sub
lock
shl
mov
xchg
dec
sub
add
outsb
cld
jb
outsb
push
ja
ss
push
push
insl
mov
cmp
sub
cld
add
xchg
pop
data16
add
sbb
or
adc
ljmp
jge
shlb
hlt
xchg
sbb
and
test
arpl
mov
sbb
sbbb
cmp
and
rolb
pop
and
mov
fists
mov
enter
stc
inc
outsb
dec
push
cmp
jb
mov
cmp
movsb
sbb
xchg
cs
lretw
out
push
push
in
adc
dec
push
hlt
pop
test
scas
add
pop
cld
push
adc
mov
sub
in
pop
sbb
cmp
pop
loope
pushf
and
lock
mov
sub
push
sarl
call
sbb
xor
add
cmp
and
jo
inc
mov
sbb
test
or
pop
addr16
push
inc
lods
mov
or
pop
pop
push
and
mov
mov
add
push
leave
aaa
push
pop
pop
mov
incl
push
mov
add
ljmp
lock
in
xorb
scas
mov
int3
enter
or
push
push
sahf
push
mov
icebp
and
add
push
pop
adc
jbe
mov
aam
jle
xor
movsl
loope
lcall
es
in
stos
ret
das
cmp
add
pop
int
pushw
movsb
dec
sbb
nop
data16
int3
dec
push
mov
leave
out
lock
out
enter
sbb
stos
repnz
jecxz
jnp
pop
out
jo
push
dec
or
or
or
jb
push
pushf
aas
or
sub
adc
cmpsb
inc
scas
ret
pop
jl
clc
rclb
cld
popa
dec
sub
setg
outsl
xchg
jbe
imul
inc
movsb
fwait
ret
mov
icebp
mov
push
dec
pop
dec
inc
data16
or
in
cli
pushf
push
adc
adc
lods
scas
xchg
mov
mov
cmpsl
or
roll
in
cmp
push
push
or
mov
adc
das
popf
sub
cmp
outsb
adc
imul
xchg
xchg
out
ljmp
mov
push
test
lock
push
mov
mov
in
out
imul
xor
aaa
test
test
mov
enter
lods
std
jle
pop
lds
es
xchg
jg
push
hlt
add
ljmp
cmp
out
push
pop
cmp
ds
and
and
lock
lods
jmp
xchg
push
or
hlt
lock
adc
push
insl
icebp
jmp
jbe
hlt
pop
add
mov
mov
lds
inc
adc
or
adc
jbe
adc
sbb
cwtl
das
into
pop
jecxz,pt
mov
push
ljmp
adc
add
adc
sub
je
add
xor
out
idivl
cmp
sbb
mov
fwait
stos
sub
jo,pt
add
jle
stos
fcomp
mov
lods
push
dec
pusha
repnz
and
cwtl
iret
aam
out
pop
jp
dec
dec
shll
jg
fnstcw
cld
pop
ret
cmp
xor
sbb
jb
pop
cwtl
or
sti
mov
jle
das
mov
jno
add
jecxz
inc
pusha
out
mov
cmp
xlat
jmp
sbb
into
js
test
imul
lods
add
pop
clc
cmpsb
mov
mov
rcll
jp
mov
xor
mov
and
inc
aad
ret
lret
and
aam
mov
sbb
push
lret
push
cmp
hlt
loop
dec
or
jne
pop
inc
aaa
mov
adc
loopne
mov
rclb
mov
inc
add
fcomip
mov
js
es
xchg
mov
iret
roll
sbb
cli
fwait
add
out
test
bound
cld
mov
shll
mov
or
jmp
push
adc
push
dec
add
lods
orl
push
outsb
pop
sbb
into
out
pop
jl
pop
mov
cs
mov
and
mov
jecxz
push
lods
orl
bound
add
mov
adc
xchg
xor
add
arpl
jae
adc
shrl
add
mov
aam
lea
inc
enter
lmsw
mov
and
push
sub
jle
data16
dec
lea
add
mov
xor
aad
add
movsb
fistl
push
ss
xchg
adc
and
jmp
jg
cs
outsb
adc
or
cvtps2pd
xor
sbb
imul
pusha
add
sarb
pop
inc
mov
jge
inc
pop
loopne
mov
sahf
mov
lea
out
lret
lcall
pop
cmpsb
pop
jmp
outsb
pop
inc
sub
add
adc
movsb
or
outsl
loope
scas
clc
lahf
xchg
fisttps
cmp
push
jb
and
dec
push
cli
sbbl
and
jns
icebp
add
sbb
xor
adc
js
sbb
or
jnp
cmpsl
and
or
inc
or
xchg
jecxz
lret
and
nop
push
push
dec
insb
lods
aam
or
push
pop
sbb
mov
xor
pop
adc
loop
test
out
movsl
loop
ficoml
daa
adc
mov
cmp
leave
mov
rol
enter
scas
add
and
imul
push
loope
xchg
or
push
test
and
in
cmp
ret
mov
dec
insb
push
xchg
adc
mov
sub
adc
je
xchg
aaa
xor
add
pop
jno
mov
cld
lds
mov
cmp
testb
add
sahf
push
das
jo
out
addr16
inc
pop
je
jmp
ljmp
fisubl
push
add
or
mov
pop
or
mov
aaa
scas
mov
loope
fsubrl
test
xchg
mov
lods
push
fldcw
or
xchg
vmwrite
jle
dec
push
js
popf
flds
test
pop
sbb
pop
push
insb
pop
sub
neg
xchg
movsl
adc
mov
std
enter
cmpsb
cmc
jmp
inc
scas
push
loope
push
jg
jns
sbb
pop
aam
loop
cmp
add
or
sbb
jle
dec
iret
xor
dec
cmp
add
inc
push
sbb
adc
loope
mov
pop
cwtl
cmp
mov
sbb
ret
jmp
aam
add
movsb
dec
ret
cmp
scas
btr
xor
int
and
loop
push
jp
cld
icebp
adc
pop
faddl
xor
dec
fildl
scas
xchg
push
xor
inc
in
jmp
mov
stos
adc
mov
push
ljmp
jbe
xor
cmp
mov
fidivs
lcall
pop
ret
push
xchg
xchg
loope
lods
xor
cld
pusha
mov
lcall
dec
push
jae,pt
adc
ja
xchg
addr16
lcall
ljmp
mov
jecxz
out
nop
stos
mov
inc
pop
mov
xchg
inc
jp
xor
subl
inc
mov
pushf
or
cmp
sbb
les
ds
inc
rolb
jns
call
push
mov
inc
sub
aaa
lret
arpl
popf
and
std
aad
inc
stos
pop
jl
rcrb
pop
push
dec
out
int3
ljmp
mov
test
sub
jnp
sahf
pop
das
inc
sti
sub
sub
pop
cmp
xor
add
movsl
push
outsl
movsl
xchg
hlt
mov
pop
dec
inc
xchg
jno
xchg
sbb
pop
les
jae
mov
push
add
test
inc
inc
pop
push
outsb
notb
nop
mov
jle
mov
lea
xorl
movsl
jmp
cmp
movsl
ret
ror
xor
into
test
data16
mov
push
in
adc
mov
into
pop
mov
dec
lds
jo
push
sbb
push
inc
ds
and
mov
cwtl
sub
mov
pop
out
mov
sub
loopne
jle
int3
rol
mov
adc
test
insl
cmpsb
push
es
lock
inc
push
jl
adc
adc
sbb
mov
sub
lods
cmc
cli
add
in
mov
daa
sbb
add
imul
xchg
sub
and
xchg
add
dec
xor
movsl
jbe
push
popa
cld
xchg
and
pop
gs
dec
mov
in
les
fnsave
sub
cmp
add
mov
xor
movsl
popa
rorl
mov
adc
sbb
loope
and
insl
mov
das
lcall
adc
or
pop
aas
testb
fcmovb
add
and
adc
ja
cli
out
addb
loop
adc
icebp
push
sub
clc
or
cmp
and
jp
popf
xchg
dec
das
or
scas
pop
rorb
rorb
stos
addb
sub
jno
adc
mov
xchg
xchg
ret
rcll
inc
or
and
dec
push
jmp
dec
aad
mov
mov
leave
insb
cmpsl
adc
ficomps
jg
or
clc
mov
xchg
fiaddl
lea
cwtl
mov
xor
out
push
sbb
out
aam
andl
subl
das
outsl
jne
scas
jl
adc
jp
sub
jl
or
cltd
push
xor
xor
in
mov
and
icebp
sbb
inc
pop
out
xchg
daa
inc
and
sahf
pop
js
ret
sub
inc
cmp
std
lret
ret
pop
mov
ds
adc
jl
movsb
fld
inc
cmp
push
mov
inc
ljmp
into
sub
decb
xchg
mov
adc
and
stos
push
sub
xlat
sub
repnz
jecxz
outsb
adc
es
fldl
wbinvd
xorl
jb
addl
pop
stos
xor
sbb
ljmp
fistpl
sbb
mov
cltd
pop
pop
scas
or
test
js
fs
mov
test
aas
cmp
pop
enter
std
ror
adc
xchg
es
fpatan
icebp
inc
out
or
mov
xchg
test
pop
nop
js
mov
or
mov
push
jne
ficoml
aad
movl
aam
jge
fs
jmp
cmp
mov
call
test
je
iret
sbb
ljmp
imul
mov
mov
inc
ja
push
mov
pop
shr
mov
adc
ficoms
cmpb
adcl
stos
rcrl
dec
aas
lahf
lock
jnp
sbb
sti
xchg
xor
hlt
aam
cltd
sbb
sub
sarb
add
xor
add
mov
popf
push
int
lea
inc
xchg
and
xor
pop
add
ja
cmpsl
ds
mov
fwait
cmp
xor
xor
es
loope
inc
pop
pop
inc
adc
xchg
jmp
mov
xchg
mov
adc
sbb
mov
lock
negl
pusha
cmc
loop
mov
data16
enter
pushf
mov
mov
push
jb
test
aaa
or
pushf
and
lock
adcb
mov
mov
and
lock
sub
xchg
add
jns
cmp
or
and
or
icebp
xor
cmc
dec
lea
or
sbbl
out
lds
cmpl
pop
es
xor
push
out
lds
pusha
daa
faddl
mov
rcrb
fisubrs
jae
push
sbb
mov
add
xorb
push
sbbl
es
les
nop
or
cmc
test
mov
push
addr16
or
dec
adc
push
cli
fs
mov
gs
daa
js
inc
leave
cmp
lods
std
fnsave
cwtl
push
imul
add
adc
dec
fs
add
hlt
adc
testl
arpl
dec
pop
xor
jne
jmp
shl
aaa
cld
fs
in
imul
arpl
or
sahf
mov
dec
adc
push
sub
push
ja
mov
dec
pop
push
cwtl
jmp
lods
add
into
fildl
js
dec
push
jl
movsb
mov
mov
fdivl
mov
cmp
sbbl
mov
insb
clc
fs
add
movsl
cmp
and
jo
adc
add
adc
lods
ret
push
pusha
lahf
mov
pop
cmp
ss
rol
jecxz
adc
inc
loop
mov
adc
jmp
and
roll
push
fstpl
xchg
mov
push
movsb
sub
sbb
push
pop
dec
mov
jbe
push
into
mov
sbbl
cmpsl
pop
cmpsl
push
jge
stos
ds
xor
xchg
test
dec
push
fs
imulb
xchg
or
inc
stos
inc
or
push
mov
push
and
shlb
jno,pt
clc
add
jo
adc
push
les
call
mov
lea
push
pop
les
pop
mov
pop
lods
sarb
notb
lret
sub
sti
cmpsb
rcll
lcall
adc
daa
scas
mov
xor
adc
adc
xor
filds
aam
jp
pushf
sti
push
cmp
jp
ja
xchg
add
inc
pop
pop
lock
dec
and
or
roll
or
xor
addl
mov
mov
fs
daa
pop
mov
lahf
scas
push
into
mov
aam
aad
lods
orb
pop
xor
je
sub
stos
lea
stos
leave
pop
cli
into
mov
pop
xor
lea
xchg
fcmovbe
lods
cwtl
mov
jbe
or
jnp
ds
push
mov
jns
cmp
ds
mov
test
ficompl
xor
icebp
ret
cmpl
mov
and
cmovge
push
dec
cmp
ljmp
imul
inc
xchg
popf
test
orl
cmp
adc
and
aaa
cltd
sahf
jmp
roll
mov
test
adc
lock
pusha
sub
scas
add
rcrl
jp
cmp
xchg
aaa
out
pop
bound
dec
mov
dec
stc
test
inc
popw
jmp
loopne
cmpsb
dec
pop
jecxz
xor
and
add
aad
popf
sub
sbb
sub
pop
filds
ficoml
push
sarb
or
adc
out
cmpb
adc
lea
push
xor
push
sbb
fisttpll
filds
into
fwait
out
rcrb
pop
loopne
and
push
shrb
add
jmp
mov
subl
repnz
in
pcmpeqb
or
fbstp
cmp
and
add
ds
data16
icebp
stos
movsl
dec
xchg
pop
jnp
andl
fwait
loope
or
mov
jg
pop
fnstsw
mov
rorb
mov
inc
pop
ljmp
adc
imul
pushf
test
aaa
push
stos
or
test
push
cli
popa
xor
clc
add
movsb
dec
mov
cmp
mov
adc
sub
outsl
inc
xchg
sub
cmp
fiadds
dec
in
faddp
fwait
mov
mov
dec
sub
mov
jno
pop
js
insl
lea
stc
mov
push
addr16
lods
in
outsb
fsubrl
fisubrl
rcl
sub
lret
fs
nop
rcrl
clc
mov
orb
iret
movl
cmpsb
sub
aam
sub
enter
scas
mov
loop
jae
mov
add
mov
sub
jmp
dec
jne
mov
call
jnp
cmp
xchg
cmpsl
call
add
aaa
inc
outsb
aam
push
cmp
nop
xlat
nop
cmpsl
lahf
out
jmp
sbb
xchg
aaa
aad
shlb
add
js
and
sbb
adc
push
pop
mov
pop
sub
cmp
shlb
and
imul
dec
sti
mov
ljmp
js
mov
push
or
ret
sbb
add
xchg
jle
sbbl
js
enter
das
cmpsl
movsb
ljmp
add
jl
loope
ljmp
dec
gs
roll
push
xor
loope
sarl
inc
aaa
push
stos
xchg
sub
sub
sub
shrd
add
pop
adc
outsl
xchg
sbb
test
dec
xchg
push
push
cmp
dec
js
add
add
scas
sbbb
sub
lock
inc
loopne
aam
stc
aam
cmpsb
inc
shrl
test
jnp
inc
popf
orb
popl
movsb
enter
mov
pop
mov
jo
push
xor
sub
mov
or
mov
mov
inc
pop
or
cmp
mov
push
push
push
mov
xor
jmp
push
mov
jb
mov
or
mov
inc
adc
inc
mov
imul
stos
push
push
add
pop
push
leave
in
pop
lea
xchg
sbb
bound
test
mov
test
outsb
add
aas
pusha
xor
dec
mov
lods
dec
add
add
push
test
dec
pop
loop
cli
test
les
lret
jnp
xchg
aam
cli
mov
paddb
or
push
daa
ret
cmp
jmp
pop
rcrb
sub
inc
rorl
jp
inc
lods
push
fcomps
pop
fidivl
ret
xchg
fwait
inc
or
shll
aas
xor
fs
stos
rcl
inc
push
jo
jno
and
lock
repz
inc
xchg
rcrb
mov
leave
cltd
xchg
dec
sub
jae
test
les
pusha
shll
loope
iret
lods
xor
push
test
sti
lods
cltd
loop
inc
adc
inc
loopne
cmpsl
shl
pop
jo
in
mov
sbb
sti
pusha
push
loope
mov
pop
gs
xlat
and
mov
xor
mov
repnz
add
andb
loop
cmp
mov
sbb
and
pop
scas
popa
xlat
ret
cmpsl
es
adc
loopne
adc
decb
mov
fmull
xchg
insb
xlat
divl
xor
xor
sarb
xor
jge
add
add
inc
cmp
xor
mov
inc
xchg
xor
das
xor
aad
add
shlb
mov
leave
int
mov
dec
pop
push
cmpsl
outsl
out
and
xchg
arpl
cmpsl
stos
lds
mov
xchg
jg
and
mov
iret
clc
or
fstl
les
push
add
pop
mov
pop
lods
push
xchg
sbb
dec
adc
daa
in
adc
sub
popf
xor
int
cli
aas
loopne
lock
sbb
and
xor
pop
loopne
mov
add
push
test
mov
mov
sub
in
mov
loopne
lret
clc
pusha
cmpsl
shrl
pop
adc
clc
clc
lcall
aas
mulb
loopne
sbb
scas
filds
cmp
repz
adc
inc
lods
mov
popl
sub
or
sarb
or
or
mov
add
in
jns
inc
stc
cmc
dec
cwtl
dec
or
lock
cmp
pop
inc
dec
mov
or
lahf
es
push
jmp
in
mov
roll
xchg
push
ret
sbb
les
cmp
mov
and
jo
sahf
test
mov
pushf
leave
imul
pop
leave
dec
add
xchg
testb
and
jmp
adc
sbb
push
mov
jne
xlat
push
in
mov
daa
mov
lock
out
daa
xor
add
add
mov
dec
test
cmc
mov
movsl
xor
mov
xor
roll
aad
dec
sbb
push
aam
movsb
ljmp
cmc
ret
adc
xor
fidivl
ds
int
push
xor
and
sbbb
or
in
add
mov
pminub
xor
insb
bound
inc
into
test
cmp
and
xchg
hlt
jae
dec
leave
and
jbe
pushf
movsb
sub
mov
inc
test
and
mov
rolb
push
cmpsb
xchg
mov
jae
xchg
push
fs
stc
and
dec
pop
aas
mov
inc
xor
or
push
rclb
scas
mov
pop
insl
push
and
fbstp
ror
cli
and
inc
and
addr16
mov
or
xor
mov
enter
ds
xchg
out
add
push
or
es
push
jns
loopne
aam
push
and
dec
pop
hlt
jae
xor
test
cmpsl
jns
pop
dec
sbb
xchg
lcall
and
insb
adc
mov
push
xor
mov
call
mov
std
mov
sub
js
fistl
cld
pop
push
int
jge
mov
fwait
add
mov
pop
push
dec
loop
xor
gs
stos
inc
jge
fwait
jbe
ljmp
inc
push
es
and
out
movsl
scas
sbb
mov
mov
push
sarb
shlb
mov
lods
clc
pop
jo
or
push
pop
movsb
add
aaa
rcrb
push
dec
inc
dec
xor
sub
cmpsl
sub
hlt
hlt
dec
test
jl
xchg
cmp
adcl
mov
loop
in
aad
loope
cmpsl
xchg
inc
or
les
jbe
int3
outsb
ljmp
adc
mov
push
scas
fsub
dec
adc
mov
nop
cmp
add
adc
xor
shrl
inc
jmp
mov
or
cwtl
or
pusha
push
sub
cmp
cld
xchg
out
dec
data16
fistl
out
mov
test
cs
mov
cmp
dec
popa
xor
sub
aas
cmpsb
cmp
add
jno
rcl
xor
mov
push
cmp
in
fisubs
inc
pusha
sub
xchg
mov
cmp
mov
sahf
add
inc
sub
jo
movsl
xchg
out
aaa
arpl
outsb
adc
xor
mov
jo
leave
adc
inc
adc
rorl
add
mov
lods
ds
inc
xchg
and
jo
ret
adc
lock
test
jg
lahf
cmc
sub
push
push
test
ljmp
mov
loop
sub
pop
jbe
clc
pop
pop
or
adc
lods
mov
jns
insb
mov
aaa
push
inc
push
push
lcall
xchg
sbb
cmp
jecxz
add
inc
mov
flds
into
inc
mov
add
lret
int
lods
push
aas
cmp
movsl
cs
pop
push
xor
hlt
mov
sahf
mov
pop
mov
imul
or
inc
mov
inc
xor
xchg
adc
daa
adc
fstpt
or
push
adcb
cmp
dec
inc
imul
sbb
outsb
cld
lret
imul
outsl
rclb
push
es
inc
fwait
ja
cmp
mov
and
jge
sbb
movsb
sti
gs
and
bound
mov
adc
or
dec
push
test
xchg
jne
mov
pop
jns
shlb
loope
shrb
mov
lret
and
adc
movntps
pusha
sub
outsl
and
mov
lret
cli
jle
shlb
int3
xchg
mov
movsb
es
das
lahf
ds
xor
push
int3
add
push
ret
stos
je
and
icebp
loope
xchg
push
jo
dec
inc
jmp
add
inc
push
and
mov
adc
mov
sti
push
mov
outsb
jbe
in
cli
dec
sub
cmp
adc
pushf
ret
ljmp
popa
lock
decb
clc
xchg
cmpsb
ret
mov
mov
push
sbb
dec
movb
and
push
fimuls
mov
push
xor
mov
jecxz
adc
sbb
pushf
mov
push
push
lret
out
ret
aaa
test
sbb
test
les
icebp
sbb
out
int
bound
imul
lahf
idivb
cld
inc
shrl
inc
sub
jg
mov
and
mov
lahf
jo
dec
cmp
mov
mov
xor
enterw
xchg
push
ret
xchg
rcrb
test
pop
imul
cmp
adc
iret
jae
sti
jno
jecxz
xchg
subl
dec
rclb
clc
inc
sub
jl
and
mov
out
mov
ja
push
xor
rcrb
in
dec
test
push
jne
mov
mov
push
push
lock
into
inc
cmpsb
cmp
insb
rolb
and
mov
cmpsl
mov
in
xor
push
cwtl
js
ljmp
jbe
jmp
push
xor
sbb
frndint
test
sub
push
pop
fisubrs
sbb
outsb
or
sbb
lahf
test
in
int
cmc
xor
maskmovq
testl
cmp
or
sub
outsb
jecxz
daa
jge
fdivrl
push
inc
popf
pop
add
and
dec
lods
xchg
loop
ja
or
scas
es
in
call
xor
cmpsl
add
enter
addl
inc
pop
stc
jo
addr16
aas
push
mov
sar
dec
xchg
pop
lahf
repnz
test
jne
or
xchg
out
push
and
mov
ljmp
mulb
int3
ret
pop
in
xchg
fs
xchg
cmp
movsb
loopne
fwait
add
ficompl
pop
mov
mov
xchg
fildll
testl
rep
sub
loop
cmp
js
std
int3
je
out
jbe
dec
ret
imul
mov
es
lock
sub
orl
mov
or
pop
je
xor
rcl
ja
ljmp
cmpsl
cmpsb
sub
add
movsl
icebp
test
inc
mov
popf
negl
cmp
fwait
add
lea
in
stc
decl
adc
xchg
ret
or
sub
jecxz
stos
jae
je
sub
repz
loop
arpl
mov
adc
popf
aas
test
dec
mov
mov
jnp
cltd
into
icebp
mov
orl
mov
xlat
xchg
mov
loop
add
std
movsl
adc
push
cltd
mov
aas
out
jns
sbb
sbb
xchg
dec
xchg
mov
sbb
cmp
cld
xchg
lock
clc
adc
in
fadds
shl
xchg
pop
jg
imul
pusha
sub
jle
sbb
mov
mov
je
push
ljmp
xor
dec
mov
scas
jns
dec
cld
jecxz
xchg
out
loopne
jbe
test
ret
sub
push
shr
jmp
sub
ret
fdivr
rcll
ret
sub
rcl
in
fmull
test
mov
jnp
sbb
mov
xor
dec
adc
leave
mov
jl
push
repz
xchg
xor
jg
or
pmulhw
addr16
inc
hlt
adc
mov
scas
dec
pop
or
iret
sub
insl
movsb
xor
dec
mov
lea
jle
dec
movsl
xchg
leave
ss
pop
xchg
in
mov
push
rclb
inc
rcl
push
or
pop
inc
shr
adc
das
or
xchg
nop
xchg
into
sub
iret
push
lret
inc
adc
sub
inc
lret
push
ret
and
pop
cmc
adc
and
cmp
adcl
pop
push
inc
inc
push
mov
outsl
push
jle
test
ret
sarl
subl
mov
scas
lock
jmp
sar
jno
sahf
cwtl
adc
je
repz
pop
add
jnp
push
pop
iret
adc
bound
and
sarl
dec
mull
push
sar
cmp
fcmovne
or
xadd
add
mov
in
push
add
add
jmp
fstps
insl
outsb
mov
xor
fnstenv
push
or
sbb
sbb
pushf
dec
mov
sub
fisubrs
cli
nop
icebp
orb
push
mov
mov
into
or
and
aad
loop
dec
inc
fnstenv
xchg
test
push
adc
popa
call
test
cmc
push
push
stos
adc
mov
std
stos
mov
jmp
add
add
mov
scas
dec
movsb
test
cltd
icebp
and
jge
cs
mov
lahf
jo
scas
cmpb
inc
inc
and
fwait
data16
xor
cmp
sub
test
xchg
cmc
sbb
mov
sub
in
dec
jae
jp
cmp
dec
xor
test
icebp
and
mov
push
jbe
mov
outsl
push
adc
and
mov
ret
pop
movsb
mov
clc
mov
jp
in
push
cmc
cwtl
add
ret
cmpsb
mov
mov
cmp
in
jo
les
test
out
outsb
dec
mov
lods
sbbb
and
cmc
int
dec
cmp
sub
lret
push
lret
stos
xlat
xlat
shll
es
mov
rcrb
inc
dec
sbb
pop
fiadds
jmp
jnp
add
iret
xchg
pop
jo
ficompl
fstpl
push
inc
add
sub
or
mov
rcrl
outsl
xor
and
or
xchg
jno
lcall
gs
mov
pusha
sahf
movsb
adc
inc
mov
mov
ret
cmp
test
add
inc
push
stos
insb
mov
or
shr
popa
inc
mov
sbb
sbb
mov
mov
pop
xchg
inc
jno
fnstenv
icebp
jmp
adc
pop
adc
loop
cmpsl
mov
fimull
sub
rorb
mov
push
or
mov
ja
push
ret
rcll
fnstcw
lea
pop
adc
dec
and
dec
adc
adc
and
add
lret
cmp
sti
xchg
xchg
sbb
lds
loope
and
pusha
adc
xor
rcrl
cwtl
int3
xchg
inc
nop
mov
mov
push
xor
aad
xlat
and
add
xor
insb
push
movsl
dec
pop
popf
jmp
movsl
cmpsl
add
push
adc
sti
sub
test
sahf
pop
sub
into
es
test
push
pop
test
adc
add
xor
mov
push
mov
dec
enter
popa
mov
testl
clc
push
cmc
sti
lea
lds
hlt
jmp
cwtl
add
sub
out
cmpl
outsl
addr16
mov
loopne
es
lret
adc
insb
push
or
insb
sbb
loop
ret
scas
decl
add
dec
sbb
shr
cmp
or
fnstsw
call
sub
and
loopne
or
sbb
movq
dec
or
jo
mov
ffreep
stos
mov
nopl
xchg
popa
outsb
fstps
subb
rcll
xchg
cltd
cld
mov
pop
xor
rep
je
dec
pusha
jb
test
pop
repz
lods
pusha
cmpsw
push
cwtl
sarl
mov
xchg
cld
adc
adc
and
jbe
inc
ljmp
loop
shll
mov
pop
xchg
and
orb
jge
pop
repnz
xor
jae
cmp
jecxz
cmp
sbbl
sbb
je
sbb
jp
loopne
push
sbb
dec
clc
inc
into
lock
xchg
push
xor
or
sub
mov
push
ret
mov
mov
inc
fsub
sbb
mov
ja
popf
int3
das
push
lds
dec
addb
mov
mov
mov
xorl
lods
imul
sub
or
and
js
jno
inc
dec
jne
daa
mov
sarl
xlat
mov
cltd
pop
dec
test
jp
cmc
adc
add
mov
in
inc
cmp
out
icebp
adcl
add
xlat
loopne
loope
add
push
shl
inc
mov
sub
xchg
dec
daa
or
and
shl
mov
cs
cmc
jge
incl
inc
mov
aaa
and
call
adc
jo
sahf
fstpl
jnp
push
stc
bound
pop
xlat
daa
add
loope
xchg
lods
scas
sbb
mov
dec
mov
fsubl
insl
cmc
gs
push
es
xor
loopne
pop
push
or
loopne
sub
mov
cmp
les
inc
cld
add
push
pop
or
call
mov
sub
jp
pop
add
push
and
loop
fsts
jnp
xor
nop
adc
cmp
jle
movsl
loope
jb
pusha
out
ja
xor
stos
and
cmpsl
mov
gs
mov
fwait
mov
test
sbb
inc
sub
cmc
inc
cs
pop
xor
sbb
call
push
sbb
int
push
xorl
xor
scas
popa
call
xor
data16
cmp
sbb
add
aad
pusha
test
cli
inc
loop
dec
jb
mov
inc
inc
and
mov
or
ljmp
fimull
mov
ds
cmp
adc
cmpsb
mov
mov
aad
packuswb
fucomip
dec
cmp
mov
push
ja
add
inc
ja
mov
jmp
dec
pop
lea
mov
jp
adc
ret
sbb
sub
sub
cmpsb
jno
adc
dec
addr16
aad
inc
insl
ss
icebp
adc
pop
or
adc
mov
es
xor
sti
pop
fcoml
push
cmp
es
pop
lock
insb
popf
pusha
mov
push
insl
mov
jmp
inc
test
push
sarb
pop
push
adc
daa
movsb
or
xchg
adc
or
loopne
push
jl
or
int
jns
push
pop
cld
loop
scas
addb
xchg
pop
inc
iret
push
addr16
dec
std
js
add
mov
xlat
jp
ds
xchg
ret
das
aad
mov
popf
xchg
mov
sub
xor
cmp
mov
push
scas
jne
aad
mov
shll
or
jmp
xor
stc
fidivl
scas
xor
imulb
push
push
sbb
or
sbb
mov
sub
sbb
sub
aad
rol
hlt
dec
and
int
cs
dec
inc
push
and
inc
in
sub
pop
and
imul
push
xchg
cwtl
sub
pop
lahf
or
les
sarb
fstpl
or
test
and
inc
inc
jp
xor
in
pop
mov
cli
sub
je
dec
int
scas
test
mov
loopne
sahf
mov
xor
jae
outsb
test
lret
adcb
mov
int3
in
cli
out
xor
push
faddp
adc
fcmovnu
mov
lahf
aam
vmovsd
adc
sarb
push
or
jno
sub
dec
jecxz
cmp
lock
fsub
aaa
pusha
ljmp
lahf
inc
mov
pop
mov
jbe
pushf
movsl
or
push
push
xor
movsl
push
imul
scas
movsb
mov
aaa
xor
in
sub
sahf
adc
xchg
cmc
pmullw
scas
fadd
mov
and
add
movsl
jmp
insb
xchg
aaa
adc
orb
lods
into
test
xchg
cmp
inc
in
js
inc
cmp
cmp
pushf
fstpt
js
sbb
push
sbb
stos
pusha
cld
cmpsl
mov
push
stos
mov
jp
sbb
inc
insl
push
jnp
pop
test
test
or
sbb
inc
adc
mov
lock
xchg
repnz
rolb
xchg
pushf
or
addl
cmp
add
fildll
dec
ds
nop
cli
push
je
adc
push
outsb
rolb
rcr
test
cmp
imul
in
js
icebp
sbb
pop
inc
sbb
out
clc
mov
xchg
movsl
aaa
inc
mov
xorb
call
aaa
push
sbb
cmc
xlat
fwait
lods
int
fdivr
push
inc
movsb
shlb
mov
outsl
fwait
mov
test
js
xchg
mov
xor
cmp
inc
stos
scas
imul
imulb
cmp
scas
and
mov
add
pop
or
ficomps
scas
adc
xor
popf
loopne
mov
xchg
fimuls
clc
sub
loop
sbb
mov
test
sbb
push
fwait
or
sbb
mov
roll
movsb
int3
roll
popa
jb
scas
dec
and
dec
test
jns
pop
addr16
mov
test
mov
fadds
aam
cs
dec
dec
sbb
add
sbb
mov
add
aas
push
je
popa
outsl
adc
shl
mov
cld
jne
pop
addr16
and
or
mov
inc
push
mov
dec
dec
pop
enter
mov
test
xor
testl
loopne
fdiv
movsl
es
nop
mov
repz
dec
nopl
mov
pusha
inc
push
sbb
shlb
sbb
enter
adc
sub
or
mov
leave
cmp
adc
inc
test
mov
push
mov
pusha
mov
in
mov
mov
les
mov
sbb
icebp
push
sub
subb
inc
jmp
push
rcrl
or
fldcw
or
std
adcl
and
adc
je
pop
mov
int
lret
ja
xchg
sbb
fsubp
scas
pop
push
inc
lret
xor
and
call
faddl
push
add
xor
mov
fsubrl
sbb
es
lret
xchg
cmp
adcl
or
xchg
pop
push
mov
in
sbb
test
shlb
dec
jge
add
inc
repz
xor
repnz
out
aas
mov
sbb
sub
cmp
cmp
out
pop
mov
cmpsl
aam
mov
xor
mov
test
adc
clc
or
xor
pop
rcrb
mov
push
mov
ds
push
xor
push
mov
push
adc
inc
setl
insl
repz
dec
pusha
cmp
xchg
fildl
popf
cmc
jmp
xchg
mov
mov
inc
xlat
lahf
sbbl
cld
push
arpl
add
les
mov
inc
roll
loopne
icebp
movsb
incl
mov
fsubrs
test
push
pop
dec
fistpll
mov
or
out
adc
scas
and
andl
jge
int3
xchg
adc
pop
bound
pop
stos
ja
mov
xor
shlb
adc
adc
xchg
fbstp
lods
cmp
scas
dec
test
dec
fstpl
arpl
movsl
jecxz
or
aam
lahf
movsb
cmpsb
jno
dec
sbb
loope
rcrl
addr16
pop
fists
jecxz
dec
leave
fisubl
lock
ret
test
popa
subb
ja
fisubs
and
jae
xchg
hlt
stos
lret
cltd
inc
sahf
ds
cmp
leave
ljmp
jmp
add
scas
mov
push
scas
sti
daa
mov
push
inc
cmp
pop
jmp
call
add
dec
sub
jne
fldt
in
pop
mov
nop
jbe
inc
push
imul
cli
pop
pop
sub
mov
repz
jp
push
shrl
inc
andb
lcall
mov
loope
sub
mov
sti
shlb
loope
pushf
lods
pop
dec
pop
js
add
pop
pop
push
repnz
dec
inc
clc
loop
out
inc
pop
fcomp
xchg
out
sti
js
xchg
adc
idivl
and
cmpsl
in
or
xor
mov
push
sti
cmp
sub
push
aad
lods
push
cmp
mov
mov
xchg
mov
pop
jae
dec
pop
mov
or
dec
jg
mov
adc
cmpsb
ljmp
add
mov
lea
lods
jmp
cli
pop
or
movsb
and
xor
adc
lock
mov
in
je
adc
loop
pop
das
rcr
out
insl
inc
push
push
enter
mov
loope
mov
orl
mov
mull
sub
loopne
inc
je
push
data16
dec
sub
fbstp
xchg
sbb
mov
ret
js
aas
rorb
inc
add
mov
adcb
jno
inc
xor
fdivrs
loopne
jno
cmp
jp
jge
dec
les
jno
ret
test
test
jbe
and
out
jge
sbb
out
push
xor
in
nop
and
xchg
dec
xor
sbb
movb
push
and
mov
mov
mov
dec
fprem1
aaa
mov
lret
pushf
lret
xlat
cwtl
and
push
adc
push
pop
push
sbb
xlat
pop
sbb
orb
daa
pop
dec
or
mov
les
fidivrl
cmp
test
or
and
jge
fdivs
push
push
jnp
push
scas
lahf
pop
inc
clc
jecxz
mov
js
bound
sti
sbb
mov
pop
in
push
aaa
loopne
mov
jge
stos
pop
test
mov
scas
shrl
push
addb
push
ret
or
adc
sbb
aad
idiv
lods
or
inc
stos
adc
xor
mov
shl
data16
push
test
push
sbb
call
xor
sbb
and
daa
push
jge
outsb
je
jle
out
mov
jp
ljmp
cld
lret
mov
add
out
bound
jno
push
imul
cmp
pushf
jae
lods
in
or
nop
add
mov
mov
outsl
ret
jp
arpl
faddl
movb
or
sbb
leave
xor
xchg
cmpsb
push
popa
mov
mov
pop
push
cmpsb
ds
xchg
sti
scas
ret
notb
and
push
pop
inc
out
fiaddl
push
addb
and
dec
push
xchg
push
pop
lock
add
das
jne
repz
cmc
jle
push
call
and
in
loopne
popa
aaa
pop
int
ds
popa
sbb
leave
movsb
mov
sub
orb
ret
add
inc
sbb
mov
sub
xchg
js
outsl
test
pop
push
int3
push
je
mov
lock
add
or
movsb
insl
cli
in
aad
push
rcrl
fmulp
jmp
adc
xor
dec
inc
sbb
mov
mov
out
pop
sub
loopne
cmp
shrl
adcb
je
xor
in
adc
cld
rolb
outsl
nop
push
mov
scas
mov
sub
fnstenv
scas
out
xchg
xchg
mov
insl
sub
insl
adc
add
pop
mov
int
pop
add
sarl
cmp
push
jl
pushf
icebp
push
imul
clc
inc
mov
or
cld
or
mov
test
mov
iret
cmp
fdivrs
cmp
fxch
xor
aad
jl
pushf
dec
inc
nop
sbb
mov
inc
movsl
dec
cmp
mov
sbb
mov
adc
push
fnsave
je
mov
mov
ja
xor
arpl
js
addb
insb
nop
sbb
mov
out
sbb
push
xor
movsb
sbb
out
add
add
fdivrs
iret
lods
shlb
popf
push
inc
lock
mov
jb
push
mov
add
aad
rep
xchg
lods
add
mov
xchg
mov
insl
repz
xchg
cmp
pop
ljmp
jle
xor
mov
popa
inc
pop
hlt
jp
sbb
mov
mov
fnstcw
xor
addr16
cmpsb
repz
roll
jb
or
xlat
call
cli
mov
shll
xor
jnp
arpl
rorb
mov
out
dec
mov
add
or
pop
mov
loopne
pop
lahf
js
mov
movsb
and
jp
loope
add
rclb
xor
adc
push
and
adc
mov
fnsave
cmpsl
fcom
pop
add
cmp
scas
les
ds
in
je
hlt
jle
mov
xlat
sub
inc
insb
add
sub
fdivrs
ds
addr16
hlt
in
xchg
shlb
pop
push
and
rorl
and
clc
adc
pop
dec
sbb
rcrl
pop
dec
into
or
adc
je
dec
in
and
shll
lret
jl
in
mov
adc
aaa
adc
lods
jge
inc
lret
push
pop
jno
dec
lods
not
loop
cmp
out
clc
inc
sbbl
and
out
loopne
lret
fists
mov
push
mov
mov
test
loop
fists
sub
ret
aaa
mov
imul
mov
add
jl
add
jle
in
mov
pushf
pop
jbe
ds
adc
std
jns
ljmp
push
ret
loop,pn
jl
mov
ret
inc
insl
loopne
bound
rorb
push
mov
mov
push
ret
fs
ret
pop
call
lods
adc
mov
push
aaa
push
call
imul
rcrl
mov
mov
pop
adc
xorb
push
mov
nop
test
sub
adc
inc
add
movsb
rorl
sub
jno
aaa
das
add
ret
rorl
fcmovbe
pand
fiaddl
insb
pop
rcll
xlat
dec
sbb
lahf
lcall
pop
fcompl
out
clc
sbb
add
mov
mov
loope
decl
les
das
mov
xchg
mov
js
push
loop
aad
lret
xorb
pusha
mov
arpl
and
xchg
mov
jle
shrd
test
push
xlat
dec
mov
sub
stos
jb
push
xchg
mov
outsl
movsb
xchg
mov
fldt
movsl
int3
bound
xor
mov
les
fwait
or
outsl
in
lods
faddl
sahf
adc
scas
adc
mov
lahf
or
ds
push
out
inc
fsubrs
test
sub
push
lcall
and
lods
jne
add
mov
nop
test
xchg
xor
xchg
dec
xchg
or
adc
lods
push
push
jle
add
rorl
std
je
clc
xchg
xchg
cmp
push
in
daa
mov
push
add
in
movsb
mov
push
xchg
adcl
pop
pop
fstp
and
aaa
in
shlb
mov
adc
lcall
fs
mov
pushf
mov
mov
jle,pn
stos
mov
enter
sub
pop
mov
jb
and
mov
or
push
inc
xchg
sbb
cmp
mov
xchg
dec
inc
pop
add
popa
mov
sub
add
fsubs
xor
mov
in
fwait
sarl
or
dec
out
test
jbe
inc
je
xor
push
push
mov
imul
ljmp
push
decb
mov
fisubl
push
sbb
cmp
mov
mov
dec
pxor
xchg
xor
aad
jns
or
or
sbb
loop
testb
push
ss
lahf
jg
fdivrl
fiaddl
cmpb
repz
push
inc
adc
imul
pushf
xor
push
das
xchg
insl
lahf
and
mov
or
js
mov
cmp
pop
and
aam
inc
inc
rolb
movsb
jle
pop
repz
clc
daa
loopne
xor
fwait
aas
sarl
incb
jmp
lock
sbb
fildll
cld
sbb
mov
xchg
mov
js
ror
mov
sub
push
and
inc
mov
inc
pusha
das
xor
push
daa
rcll
sub
fsubp
sbb
and
outsb
hlt
test
test
outsb
push
jo
scas
popa
xchg
daa
pop
sub
push
loop
sbb
adc
sub
test
jg
leave
mov
cmp
int
mov
or
or
push
push
adc
test
aam
ljmp
loopne
stos
jae
cmp
adc
push
in
xchg
add
icebp
test
lea
mov
pop
push
sahf
lods
dec
cmp
into
sbb
fdivs
ret
data16
jg
add
aas
adc
mov
jmp
repnz
iret
cmc
adc
mov
repz
and
cli
add
add
paddsb
inc
pusha
add
mov
outsb
movsl
imul
cmp
add
mov
cmp
cmp
inc
fwait
pop
cmp
sub
es
cmpps
arpl
cmp
aam
adc
inc
nop
inc
sub
cmp
out
lret
mov
sub
adc
mov
data16
inc
mov
push
xor
inc
fsubrs
fs
sbbl
jbe
push
jl
add
cmpsb
call
pop
bound
push
arpl
sbb
inc
test
mov
pcmpeqw
mov
jnp
movsl
unpckhps
push
in
les
cmp
in
int
inc
pop
push
mov
add
push
push
bound
and
add
xlat
jo
cmp
lret
test
mov
insl
jge
or
loop
xchg
lods
fdivp
cmpsb
fcoml
sbb
loop
sbb
push
push
mov
notb
cmp
inc
or
rorb
inc
pop
push
cmp
jl
loope
pop
and
and
cmpsb
pop
call
testb
jmp
cmp
dec
ret
test
inc
cmpl
hlt
ret
clc
mov
lock
push
daa
jmp
mov
add
arpl
jnp
je
loopne
sub
orl
add
ficomps
adc
push
jge
cmp
xchg
cltd
xor
or
push
cmp
cli
loop
xor
adc
jb
outsl
xchg
inc
inc
lods
aaa
dec
icebp
pop
cmp
sub
or
inc
inc
je
scas
xor
push
xorb
push
loope
mov
or
fisttpl
arpl
imul
shll
nop
in
fstp
mov
adc
mov
mov
adcb
inc
dec
sbb
aas
lea
dec
add
in
clc
rcl
xor
ljmp
sbb
rclb
mov
adc
call
outsb
adc
add
add
mov
mov
mov
insl
ficomps
pusha
aas
inc
add
push
mov
cli
rcrb
jmp
ret
sbb
pop
and
aas
icebp
and
sbb
xor
fiadds
push
test
ret
test
sub
pop
push
mov
adc
jo
xchg
out
gs
cltd
lods
mov
int3
mov
gs
dec
push
push
dec
or
aaa
inc
add
and
push
jmp
jle
cmpsb
jle
std
fwait
mov
inc
sub
inc
sbb
xor
insl
add
jno
mov
cmp
orl
std
dec
and
mov
in
jnp
push
inc
jns
dec
jo
daa
arpl
jge
mov
add
dec
jo
sahf
clc
add
push
daa
popa
stc
pop
fiaddl
ljmp
xor
sbb
dec
dec
bnd
add
mov
jb
je
mov
in
or
xchg
mov
stos
dec
jg
adc
pop
adc
pop
ret
push
mov
leave
movaps
mov
push
test
fiadds
xor
pop
cmp
cwtl
inc
adc
jecxz
daa
test
insl
dec
fsub
mov
adc
add
and
int3
push
push
daa
mov
addr16
aam
mov
dec
fisubrs
test
icebp
cli
adcb
push
cmpsb
icebp
cmpsl
lock
xchg
cmp
ret
test
xor
clc
aad
movsb
mov
mov
ja
mov
enter
loopne
call
dec
pop
aam
and
lret
inc
fsubrs
ret
mov
mov
faddl
or
mov
add
sbb
adc
fs
xlat
mov
sub
inc
cmp
inc
sbb
shl
push
and
mov
push
jle
mov
das
das
lock
sbb
inc
mov
xchg
pop
rolb
std
jbe
xor
mov
lcall
scas
test
stc
mov
dec
add
dec
pusha
fs
aam
subl
sub
hlt
adc
jg
dec
mov
jbe
sbb
adc
pop
add
push
mov
jo
mov
xchg
rorb
scas
je
adc
sub
out
mov
mov
lods
dec
test
outsl
outsl
inc
inc
sub
int3
popf
jg
xor
rcll
pusha
adc
fwait
in
jbe
adc
dec
mov
mov
ret
cmp
mov
iret
and
int
or
dec
aam
pop
enter
mov
call
mov
mov
push
push
jb
adc
xor
ret
dec
outsl
dec
mov
fs
dec
loop
add
sbb
push
adc
or
pop
jle
jbe
jnp
loope
mov
hlt
adc
lcall
push
push
lods
sub
pop
paddb
scas
outsb
sbb
shll
mov
xor
aad
or
cmp
or
xor
fmull
mov
inc
cwtl
inc
loopne
les
or
mov
add
outsb
addr16
loopne
inc
mov
pop
or
ficoms
loope
loopne
pop
push
outsl
mov
inc
sub
mov
es
sub
inc
sbb
add
sbb
add
mov
jmp
cmc
shl
xchg
imul
int
pop
mov
xchg
pop
or
enter
adc
test
addr16
shrb
pop
iret
push
cld
or
inc
scas
sbb
mov
loop
adc
mulb
fwait
ljmp
subl
icebp
jle
rolb
loope
cmpsb
jl
mov
sbb
pop
hlt
mov
into
inc
dec
or
repnz
sahf
or
in
aaa
mov
add
arpl
push
mov
push
push
or
lods
mov
inc
js
add
sti
xor
flds
or
imul
dec
cwtl
add
cltd
sbb
mov
cmp
cmp
ljmp
ret
pop
mov
enter
push
xchg
cwtl
jp
mov
jns
pop
in
push
fnstsw
sub
sbb
jo
outsl
or
lods
fmuls
add
lods
or
add
add
jle
popf
pushf
push
sbb
loop
scas
jne
aam
daa
mov
sbb
subl
sub
jae
sbb
loopne
lcall
pop
add
and
sbb
in
or
mov
or
clc
add
adc
inc
cli
nop
in
out
sbb
lret
sub
pop
aas
shrb
jne
js
cmp
das
push
std
ret
add
adc
pusha
dec
xorb
std
inc
inc
and
sub
cmp
incb
cmp
das
cltd
mov
lea
mov
das
inc
xor
loopne
cltd
push
out
notb
mov
and
push
push
aam
mov
mov
insl
js
cs
pusha
int
lods
or
sbbb
xor
pop
lock
mov
insl
aam
fstpl
mov
scas
cli
mov
movsl
mov
shl
dec
sub
sub
repz
push
cmp
int3
nop
push
lret
mov
ret
add
cmp
lahf
sbb
je
push
ss
test
mov
out
popa
adc
repnz
and
sub
pop
and
enter
imulb
rcrb
pop
jo
or
mov
aam
sub
add
or
or
inc
aas
or
add
mov
cmp
pop
aad
and
pop
and
fdivl
andb
push
xchg
push
stc
js
mov
sbb
rorl
aad
fwait
and
adc
dec
cmp
pop
scas
jmp
gs
fidivrl
movsl
fisttpll
cmp
inc
adc
pop
pop
in
add
xchg
dec
int
adcl
lods
test
cltd
and
sub
pop
inc
add
mov
xchg
test
mov
xchg
and
jg
scas
mov
insb
cli
sbb
xchg
fidivrl
jns
xor
cmp
insb
dec
inc
xorw
and
inc
mov
addr16
xchg
pop
cmp
and
mov
pop
push
sbb
inc
jge
mov
dec
and
into
cwtl
fistl
cli
add
push
xor
push
or
repz
sbb
lock
push
popa
ror
dec
and
jo
outsl
jecxz
cltd
mov
divl
test
sbb
pop
add
mov
xor
roll
insl
or
je
pop
sbb
mov
pop
pop
mov
xchg
test
mov
movsl
fimull
ljmp
push
dec
test
shrl
mov
cmpsb
lds
les
les
adc
test
mov
jge
push
cwtl
sub
or
mov
cmpsl
mov
inc
mov
jle
sub
pop
dec
out
aaa
sub
xor
and
lcall
jg
cmp
cs
cld
inc
ficoms
repz
adcl
adc
movsb
js
in
movsl
xchg
sub
adc
jb
inc
daa
scas
clc
or
add
mov
dec
add
fcoms
shlb
shll
jbe
or
or
mov
imul
faddl
mov
adc
adc
mov
fistps
jnp
adc
fcompl
jb
mov
enter
pop
gs
mov
inc
lret
nop
inc
xchg
jnp
sub
leave
inc
jns
cmp
outsb
mov
inc
adc
clc
jne
mov
xchg
int3
mov
pop
jnp
dec
mov
push
jne,pt
pop
mov
movl
push
rorw
aam
xor
mov
add
xchg
sbb
pop
pop
je
fsub
add
cmp
lret
mov
incb
fsubrl
mov
pushf
pop
shl
leave
mov
nop
fisubl
pusha
dec
jge
into
cmp
and
fcompl
cltd
in
adc
jbe
repnz
stos
aaa
or
dec
test
xchg
test
ljmp
dec
cld
fcoml
pusha
push
lret
lods
shll
sub
movsb
sahf
pop
push
add
mov
jbe
fldl
mov
pop
fisubs
pop
jg
test
mov
and
fdivrl
ss
in
adc
loope
lcall
mov
sbb
pop
inc
ljmp
jp
and
adc
and
or
or
fiaddl
hlt
pop
pusha
aad
movsl
ljmp
test
adc
ret
iret
mov
mov
adc
loop
hlt
jg
mov
and
js
inc
repz
pop
nop
mov
sub
movsb
pop
subb
call
int3
outsb
subb
xchg
or
mov
xlat
clc
lcall
into
mov
and
add
mov
sub
loope
dec
aaa
inc
fistpll
xchg
push
rolb
xchg
xchg
push
in
jmp
or
shr
mov
ds
ja
sarb
inc
sub
stos
mov
loope
mov
je
or
push
add
pop
faddl
sti
jmp
test
inc
cld
loopne
popa
fwait
jecxz
xchg
test
das
idiv
push
sub
loope
mov
pop
cld
jle
cmc
aam
movsb
dec
int
in
push
fisubl
mov
sti
and
int3
push
cmp
ret
xchg
mov
pushf
push
mov
test
inc
inc
inc
mov
jg
inc
mov
xor
mov
jmp
push
cmpsb
xchg
lcall
adc
enter
scas
fcom
gs
adc
sub
add
leave
and
xchg
sbb
add
add
pushf
push
mov
stos
int3
rcrl
push
lock
loope
jg
rcr
pop
inc
fdivs
loop
mov
fyl2xp1
mov
cmpsl
stos
xchg
aam
ret
inc
rclb
pushf
or
mov
jne
lds
push
dec
stc
jns
mov
pop
xchg
pop
mov
es
jnp
sub
or
addb
push
mov
loop
movsb
sbb
and
xchg
sub
jge
sub
and
add
sub
incl
jno
jne
ljmp
xor
xchg
mov
out
sti
repnz
sbb
dec
jge
sbb
and
or
pop
push
pusha
push
scas
xchg
or
xor
push
jle
ret
cld
es
adc
scas
push
add
add
out
jp
enter
dec
pop
push
rcrl
dec
sbb
sbb
jecxz
jbe
pop
fdivl
aam
sbb
xor
daa
pop
cwtl
push
sbb
ja
add
cld
outsb
jle
sbb
sbb
adc
or
or
test
imul
inc
jle
call
push
ret
mov
push
xchg
popf
xor
push
cmp
orb
xchg
fsubrs
cmp
inc
mov
aam
mov
push
jnp
mov
leave
push
outsb
dec
mov
int
int3
lea
and
add
bound
sbb
shlb
xorl
clc
adc
stos
sbb
popa
fiadds
fdivp
add
aam
add
divw
jmp
lret
mov
or
mov
test
mov
mov
sbb
mov
outsl
mov
inc
lods
lahf
or
dec
outsl
je
pop
inc
xchg
cmp
lret
out
shlb
es
es
jbe
and
and
cs
cmc
lret
pusha
fwait
sbb
int3
test
cmpsl
and
mov
mov
mov
push
inc
movb
test
out
mov
push
add
fiaddl
jns
pop
rol
inc
dec
call
mov
js
dec
sbb
push
fsubl
lea
loopne
inc
outsb
pushl
in
push
cmpsl
dec
push
add
insl
pop
and
mov
test
inc
lret
xlat
mov
nop
xlat
into
sbb
mov
inc
xor
insb
fimull
pushf
fdiv
fmuls
jl
jp
cmp
and
mov
cmp
mov
adc
jp
data16
ljmp
jbe
jne
xchg
sub
pop
aam
shlb
mov
xchg
sbb
pop
mov
add
inc
push
lods
xor
or
daa
pusha
cmpsl
jae
jg
les
ljmp
mov
mov
mov
ret
call
jbe
pop
sbb
pop
cwtl
push
jns
ljmp
icebp
push
shrb
cmc
mov
jge
pop
and
icebp
loopne
mov
sub
pop
sbb
mov
cmpsl
popl
pop
jl
icebp
inc
bnd
or
add
push
mov
lea
fidivrl
bound
rclb
add
pop
xor
push
inc
xchg
mov
lcall
jg
add
mov
dec
inc
inc
cmp
ret
aam
clc
ret
add
sahf
dec
dec
popa
xchg
cmp
inc
aas
mov
dec
ss
add
add
xchg
iret
and
sahf
adc
imulb
iret
sub
cmp
loopne
xchg
shlb
inc
jae
or
imul
inc
ja
pop
inc
lcall
cs
add
or
lods
pop
movsb
jmp
mov
ss
je
mov
and
adc
lods
data16
enter
xor
push
lds
mov
fsubr
inc
roll
aam
jle
ret
aas
jp
sub
fisttpl
outsl
icebp
or
iret
xchg
lahf
adc
push
xchg
repz
push
fwait
sbb
inc
or
inc
test
push
mov
xlat
bound
addl
sub
hlt
or
dec
mov
xor
xchg
inc
mov
jbe
int
add
xlat
ficoml
movsl
icebp
ret
mov
xchg
in
xor
push
and
add
negb
lcall
mov
fimull
dec
test
mov
out
push
lods
int
add
shl
aad
les
push
rcrl
loopne
int
adc
push
or
sub
sbb
inc
inc
rorb
clc
and
negl
sbb
cmp
les
fidivs
es
mov
sub
adc
in
ret
mov
lds
and
int3
loop
paddsb
stc
mov
add
or
in
jp
add
xor
stos
lret
mov
lret
xchg
in
adc
stos
repnz
scas
sbb
mov
cmc
and
cmp
push
lds
adc
call
ja
or
xor
mov
mov
test
xchg
rcrb
sub
sbb
push
mov
imul
sahf
and
sub
or
js
fidivrl
add
inc
out
popa
xchg
adc
lcall
cmp
mov
gs
ds
sbb
dec
sub
icebp
scas
mov
jo
or
or
lcall
in
jmp
lock
lods
xchg
mov
sbb
adc
jl
pop
arpl
test
imul
dec
int
adcb
push
jae
push
push
dec
lods
jp
loop
add
mov
sub
ret
into
xchg
cmp
mov
pop
cmp
mov
and
xchg
and
xchg
inc
icebp
scas
in
sbb
cmp
les
cmc
jbe
ret
loopne
les
cmp
pop
or
lods
sahf
add
outsl
mov
push
pmaddwd
cmp
int
shll
mov
test
inc
shrl
pop
test
xchg
cmc
adc
or
test
cmc
es
iret
fdivs
cmp
xchg
fsubr
stc
cli
adc
jg
ljmp
cmp
cmp
push
cmp
sbb
jl
clc
cltd
or
loop
rcll
jg
imul
xchg
cs
push
push
sbb
fmull
pop
loopne
daa
jecxz
fsubl
jg
mov
pop
leave
cmc
data16
mov
arpl
mov
jle
mulb
mov
js
mov
add
aad
jmp
out
sbb
pop
mov
add
sbb
pop
mov
and
sub
cwtl
je
add
jb
xor
mov
iret
adc
sbb
xor
inc
xchg
aad
sti
jne
mov
pop
lock
add
push
movsl
pushf
test
cmp
mov
pushf
ds
les
sbb
or
mov
loopne
mov
outsl
xor
ja
pop
pusha
xchg
adc
sub
sub
inc
cmp
jmp
popl
add
lcall
push
push
cld
and
push
je
icebp
jbe
test
hlt
sub
stos
sub
loop
insl
pop
dec
dec
or
push
mov
xor
cmpsl
addr16
push
jbe
inc
mov
test
push
cld
les
arpl
mov
cs
notl
mov
mov
out
mov
pop
mov
mov
loope
lret
cmc
lock
push
ljmp
add
sbbl
mov
call
mov
xor
hlt
pop
mov
ds
scas
imul
imul
add
aam
xlat
cvtpi2ps
out
outsb
cmp
dec
imul
test
or
jmp
lock
cmc
dec
out
loopne
pop
or
shrl
push
out
push
dec
mov
adc
xor
lods
bound
adc
jle
push
ret
sbb
aam
shr
sbb
jne
rclb
loope
sbb
inc
int3
rolb
jb
push
mov
sub
loopne
push
sub
test
inc
ret
pop
jecxz
sahf
sub
test
add
adc
add
add
loop
loopne
or
push
inc
pop
mov
and
xchg
mov
xchg
lods
push
mov
pop
lcall
bound
in
push
dec
sbb
or
rorl
jo
ljmp
daa
cmp
lahf
in
sub
sub
out
push
out
popa
pop
mov
shrb
jnp
push
fsubrl
out
sbb
int3
or
test
add
or
push
push
movsb
inc
iret
jle
jl
pop
aas
push
xor
xor
push
jmp
mov
jecxz
mov
adc
popf
test
clc
dec
mov
in
repnz
inc
adc
mov
test
sbb
gs
or
push
je
jns
push
ret
js
stc
je
clc
std
dec
dec
mov
jno
rcrb
or
outsb
stos
daa
mov
sbb
inc
jbe
add
aad
insl
into
xor
test
shlb
push
sub
sub
jne
pop
shll
lock
pop
mov
out
rorl
je
pushf
lock
fcoms
mov
dec
mov
rcrb
ljmp
push
aam
mov
push
xacquire
cld
push
pop
xor
pop
and
add
dec
cmp
dec
and
div
jmp
call
clc
and
mov
jecxz
jmp
lock
and
jbe
add
or
pop
adc
popa
xchg
mov
cli
add
and
jbe
sbb
ficomps
pop
bound
add
and
cmc
je
faddp
inc
adc
pop
xchg
shrl
pop
rcll
stos
mov
mov
nop
scas
cmp
and
clc
pop
sbb
and
hlt
or
in
inc
outsb
jns
xchg
js
jbe
orb
inc
je
pop
stos
ss
pop
xchg
movsl
jno
int3
inc
cmp
and
mov
add
cmp
test
gs
cmp
push
cli
xchg
sub
pushf
sahf
mov
cli
loop
push
nop
or
or
pusha
ss
orb
stos
sub
sub
jecxz
mov
or
xchg
adc
xor
sbbl
clc
scas
test
loop
or
ret
mov
add
cmpl
push
adc
sbb
sub
arpl
pop
lods
andb
dec
dec
mov
jb
add
pop
mov
lcall
jl
mov
lret
jecxz
lret
add
insl
test
push
fistps
sub
mov
mov
jae
cli
xor
pop
ljmp
mov
add
pop
std
loop
sub
movsb
inc
inc
mov
sub
into
cmp
addb
lcall
das
arpl
pop
inc
aas
sbb
dec
jl
push
dec
dec
iret
sbb
xorl
xor
add
cli
in
fnstenv
clc
shll
icebp
movl
adc
jnp
xor
fdivrl
js
push
test
mov
mov
scas
jp
into
shlb
adc
cli
cmpsb
xor
les
mov
mov
sbb
repnz
and
stc
pusha
sbb
test
pop
mov
and
shrl
xchg
lcall
mov
cs
mov
inc
mov
insl
out
icebp
and
nop
and
shrl
aas
xchg
lds
nop
call
sar
cli
cltd
push
push
scas
cmp
incl
aam
movsl
xor
cmc
xor
add
add
pop
mov
out
add
in
test
inc
out
xchg
ljmp
mov
sub
mov
sbb
data16
scas
sub
sub
add
and
test
pop
hlt
mov
aam
mov
test
es
ds
pop
insb
ja
inc
xor
adc
mov
aad
out
mov
lock
lea
mov
jne
mov
mov
sbb
mov
xor
cmp
daa
sbb
in
les
pop
mov
jmp
loopne
xchg
icebp
repnz
out
dec
mov
inc
ja
xchg
and
sub
addr16
jmp
inc
lcall
andb
or
and
nop
adc
int3
lcall
loope
sub
dec
sti
mov
push
xchg
mov
add
mov
dec
lahf
adc
or
add
hlt
loopne
push
fimuls
and
lea
mov
sub
shlb
and
scas
pop
and
xchg
iret
cmpsb
das
adc
popf
stc
xchg
xchg
outsl
adc
into
dec
loopne
std
push
mov
adc
adc
out
rcll
push
stos
mov
push
mov
add
aas
xor
sbb
jge
jge
mov
lret
ret
sti
loopne
imul
dec
shl
pop
daa
das
jne
sbb
pop
clc
inc
add
inc
test
dec
add
inc
fstl
cmp
push
sbb
lcall
inc
ret
movsb
ss
andl
loopne
add
cltd
test
enter
push
pusha
add
jbe
shll
mov
xchg
pushf
adcb
fwait
add
push
std
dec
lock
xor
mov
hlt
push
pop
addr16
mov
int3
loopne
sar
pop
jb
repz
and
shrl
inc
cwtl
sub
sbb
pmaxsw
repz
cmp
xlat
mov
jo
lods
sub
or
pusha
sub
test
call
sub
xlat
inc
aaa
pop
dec
jmp
mov
pusha
xchg
push
pop
adc
push
insl
je
loope
and
jle
add
or
bswap
addr16
cltd
sub
dec
mov
cmp
add
jmp
jmp
dec
test
xor
or
pop
lock
jg
inc
insb
sbb
lea
nop
adc
cmp
in
leave
xor
dec
fnsave
jnp
inc
mov
push
aad
push
xor
cmpb
adc
adc
gs
loopne
mov
insl
into
rclw
les
or
enter
sub
inc
testb
out
std
add
orb
leave
je
sbb
in
call
mov
mov
push
iret
sahf
push
mov
sbb
je
mov
pop
push
push
movsb
call
sub
push
mov
outsb
popf
lret
xchg
mov
loop
out
inc
cmp
rol
in
jmp
test
mov
push
and
jp
subb
movsl
shl
mov
pop
inc
inc
cltd
std
cld
pushf
or
push
ret
inc
imul
jo
imul
xor
lcall
xor
or
das
movsb
loope
test
mov
mov
lcall
sbb
push
cmp
pop
jb
jge
leave
adc
pop
bound
pop
add
cli
jl
jle
or
jo
les
sub
xchg
pop
xor
jle
push
and
les
and
cmpb
aad
push
xor
rcrl
les
cmp
mov
scas
sbb
ss
aam
or
push
inc
mov
shll
cwtl
pop
outsb
and
pop
sbb
jno
mov
and
out
add
jmp
push
test
stos
jge
add
dec
and
xor
outsl
aam
inc
xor
ja
das
nop
mov
out
test
lds
inc
scas
dec
cmp
add
addr16
mov
rorl
rorb
outsb
xor
xor
xchg
or
xor
out
stos
mov
or
cmp
cmp
inc
cmpsl
f2xm1
data16
jne
mov
mov
jmp
bound
mov
dec
enter
call
test
incl
mov
adc
faddl
pop
test
mov
out
fldenv
in
fildll
push
pop
and
mulb
fmulp
sarb
vmovhpd
ds
shrb
sbbl
gs
lock
mov
cmp
pop
lock
fildll
test
int3
popa
jae
aas
pop
popf
mov
sbb
add
xchg
push
and
out
mov
xchg
push
and
pop
jle
mov
sbb
dec
clc
adc
jl
aas
pop
cmp
push
into
rorb
cmpsb
jecxz
sub
push
adcb
test
add
rolb
and
mov
mov
mov
jo
sbb
lds
pop
aam
xchg
xor
lods
insl
add
inc
sbb
and
out
lea
adcl
mov
loopne
pop
push
pop
xor
pop
mov
inc
jb
fsts
jo
jecxz
int3
and
cltd
sub
mov
cld
js
clc
out
out
xor
int3
ds
loop
ret
add
in
or
outsl
mov
add
sbb
sub
sbb
into
jl
and
pushf
ljmp
xchg
mov
scas
and
js
fsubrl
mov
addr16
push
xlat
push
call
mov
cld
sbb
push
push
ret
ret
shlb
cmpsb
es
jbe
addr16
add
inc
lock
sub
cld
dec
movsb
and
fbld
mov
mov
cli
push
pop
or
xchg
leave
hlt
jno
out
mov
jbe
loopne
adc
aas
mov
dec
dec
scas
jae
add
dec
lods
sub
xchg
lret
cmp
sub
jp
mov
shlb
aad
sub
cmpsl
add
hlt
imul
je
fwait
test
fwait
adc
aam
bound
rclb
int3
cmc
add
pop
aad
icebp
stos
cmp
pop
cs
cli
pop
shr
and
ret
add
push
fwait
ljmp
xor
push
and
fnstenv
pushf
dec
fdivrs
push
adcb
mov
pop
ljmp
cli
sahf
clc
and
rclb
mov
xor
insb
stos
push
test
scas
sub
fimuls
mov
jg
subl
dec
jbe
mov
ljmp
inc
push
push
jb
gs
les
jle
unpckhps
push
call
inc
jg
test
test
add
std
pop
sbb
push
push
adc
into
jnp
insl
mov
pusha
mov
sbb
push
push
in
repz
adc
or
loopne
jo
aaa
jp
adc
int
mov
outsb
xchg
add
outsl
mov
add
mov
mov
in
xchg
mov
xor
xchg
movsl
jno
scas
add
arpl
and
dec
and
pushf
xlat
sbb
push
decb
sahf
mov
mov
ds
test
add
add
xchg
xor
jb
es
sarb
xchg
push
add
or
mov
iret
pusha
pushf
insb
xchg
test
push
adc
rcr
mov
mov
or
insb
or
aam
test
rclb
loop
nop
and
mov
cld
addb
enter
js
or
and
loopne
movsb
adc
and
sbb
fstpl
insl
cmpl
push
pushf
dec
sbb
push
cmp
int
xchg
jnp
rcl
repz
orl
lret
aam
mov
mov
lods
mov
cmpsl
pop
data16
dec
or
ljmp
ds
jl
cmp
bound
out
leave
push
sbb
sbb
mov
or
mov
sbb
pop
in
sub
stos
jnp
inc
mov
out
jg
sbb
ret
shlb
mov
pop
jp
insb
mov
xor
fimuls
push
pop
rcrl
scas
add
nop
or
mov
lds
outsl
or
fsub
es
out
inc
adc
or
push
add
fimuls
adcl
push
add
pop
or
xor
jmp
pop
adc
nop
lahf
mov
test
push
jmp
add
sbb
mov
add
push
add
cmp
in
add
es
xor
pop
push
mov
icebp
je
js
mul
and
pop
test
jmp
mov
cmp
ds
jae
xchg
mov
mov
pop
lock
push
xlat
or
outsb
pop
push
loopne
cmp
in
jb
hlt
mov
and
movsl
adc
inc
push
mov
dec
adc
ret
scas
test
ret
sbb
les
ljmp
pop
cmpsl
jbe
andb
outsb
or
xor
fdivs
arpl
inc
add
adc
ret
mov
test
mov
frstor
ret
sbb
pop
jle
daa
lea
xor
adc
sbb
lret
mov
jg
out
mov
mov
mov
jge
test
das
cmpb
inc
mov
add
sub
das
jecxz
shll
call
andb
sarl
aaa
inc
aad
inc
or
cwtl
fadds
xchg
stos
js
sbb
sub
sti
mov
cld
jnp
cmp
mov
js
xor
xchg
mov
pop
outsl
mov
cli
pop
jo
pop
jle
mov
faddl
cltd
cmpb
or
mov
rcll
sub
mov
call
test
mov
inc
mov
sub
mul
jg
jle
icebp
xchg
pop
cmc
in
push
jb
int
imul
enter
scas
mov
mov
test
sub
sub
cmp
jo
sbb
clc
push
jbe
cmp
test
int
sbb
add
shl
add
jecxz
pop
mov
mov
stos
sbb
stc
in
add
loopne
push
jo
add
mov
lret
sbb
popa
mov
stc
pop
stos
add
arpl
shrl
fdivp
rorl
adc
into
lods
rclb
dec
mov
lahf
lret
shrl
adc
outsb
xor
scas
and
jl
pop
mov
adc
or
pop
dec
test
inc
push
clc
imul
or
push
lahf
push
lret
inc
test
mulb
in
jb
xor
out
xor
out
bound
ds
ljmp
rorl
cmc
sub
sbb
data16
cld
pop
pop
add
xor
inc
xchg
icebp
fsubrl
mov
add
sbb
retw
lds
cmp
fildll
incb
mov
mov
loope
mov
cmp
fimull
dec
jg
mov
sbb
mov
push
imul
dec
and
rcll
testb
repz
mov
push
pop
mov
sti
repnz
sbb
pop
sbb
mov
push
dec
mov
bound
push
pop
and
ret
mov
inc
call
jbe
insb
jl
testb
lret
dec
test
pop
in
mov
fucomip
iret
mov
push
gs
and
call
add
pop
add
jno
dec
mov
sub
sbb
in
add
outsl
addr16
popf
add
adc
push
push
and
sub
add
mov
insb
movsb
pop
lahf
or
jl
ret
jecxz
test
shr
lods
popf
aam
pop
cld
and
dec
inc
cmp
mov
loop
pusha
pop
call
pop
pop
es
and
add
mov
cli
mov
pop
inc
mov
push
ret
sahf
pop
mov
inc
cld
cmc
sbb
inc
cli
dec
fdivrs
push
loop
orb
bts
sub
sbb
jae
outsl
push
adc
jno
repnz
loopne
push
mov
dec
lds
lret
popf
xor
jae
sbb
inc
lock
movsl
inc
push
dec
sbb
xchg
orb
lds
adc
js
iret
adc
sbb
in
mov
push
into
or
pusha
xchg
and
dec
mov
sarl
mov
movsb
push
sub
adc
push
push
cwtl
scas
jecxz,pt
clc
wrmsr
pushf
insl
cmp
xchg
add
push
call
and
mov
jne
xlat
out
xor
clc
out
lock
fdivrp
add
push
jl
mov
orb
lea
mov
push
lods
mov
xchg
or
mov
in
inc
cmp
fists
and
dec
jge
pop
adc
push
mov
inc
les
pop
add
repnz
fsubl
sbb
and
mov
jns
sbb
lock
test
mov
mov
div
mov
jle
mov
test
sub
mov
cmpsb
xor
sub
jmp
getsec
dec
pop
test
mov
xchg
ds
xchg
pop
cli
xor
mov
add
test
mov
test
and
fld
mov
xchg
push
push
lock
mov
mov
xor
xor
in
or
ljmp
sub
xchg
adc
add
loopne
push
movb
push
inc
sub
jne
and
outsb
adc
push
sbbl
scas
int3
pop
cmp
adc
jp
mov
jo
mov
push
inc
xchg
jmp
add
ljmp
add
test
pop
test
xchg
xchg
in
scas
sub
out
and
xor
popa
hlt
aad
scas
icebp
or
and
mov
mov
jle
sbb
test
repz
fisubrl
mov
inc
imul
mov
sbb
les
mov
mulb
or
daa
jmp
outsl
cmp
es
clc
cmpsl
jo
orb
dec
xor
loopne
push
sti
xchg
sub
adc
mov
fwait
inc
ffreep
jnp
aaa
insb
mov
inc
sbb
dec
mov
shrb
push
adc
xor
pfrcpit1
jge
lret
mov
pop
insl
pop
repnz
mull
ret
pop
popa
sbb
adc
jno
sbb
jo
js
dec
cwtl
loopne
sti
cmpsb
mov
pop
sbb
sub
mov
imulb
sarl
lods
jnp
push
dec
aam
cltd
and
pop
ss
jb
jp
loop
or
and
cmp
les
test
adc
pop
aad
insb
add
test
add
neg
pop
and
jo
outsl
or
aaa
pop
cmc
jl
enter
fsubrl
add
out
adc
addr16
cs
mov
fisttps
fdivrp
imul
fdiv
lods
mov
mov
adc
jecxz
mov
sbb
incb
movsb
inc
and
outsl
repnz
clc
jmp
test
scas
inc
je
std
xchg
and
pusha
push
stos
and
pop
je
loope
xor
xchg
lcall
xchg
cmpsb
dec
adc
mov
push
and
fmul
gs
dec
inc
xor
jmp
rorl
outsb
pop
inc
pop
loopne
mov
dec
push
sbb
mov
aam
sbb
sarl
cmp
adc
jnp
mov
or
jns
sub
push
outsl
sub
jge
add
into
or
jo
push
jp
mov
jle
inc
mov
push
or
cmpsb
jbe
pop
or
push
xchg
fbstp
cmc
mov
outsl
sarb
xor
outsl
lock
stos
dec
das
nop
push
adc
jns
cmpps
stos
jno
inc
xchg
push
repz
fs
adc
mov
pop
push
test
cmp
inc
xchg
jb
cli
cmp
repz
movb
add
cli
mov
or
jl
outsb
xchg
outsl
mov
lods
add
repz
rorl
push
out
add
pop
and
xchg
push
xor
pushf
or
filds
daa
loope
mov
repnz
dec
cmovno
adc
cli
pop
mov
rclb
mov
mov
test
imul
int3
or
cwtl
je
cmpsl
and
fnstenv
out
data16
sarb
aaa
pop
xlat
push
push
mov
or
insl
cmp
das
push
ds
lock
dec
ret
es
push
les
clc
lret
cwtl
cmp
and
xchg
or
sub
shr
fwait
dec
into
cs
or
stos
out
sbb
popl
fisubs
sub
jle
rcll
fistps
adc
pop
dec
arpl
cld
sbb
stc
xor
cwtl
or
pop
cmpsl
inc
bound
subl
test
aad
adc
mov
stos
repnz
push
cwtl
add
int
sub
scas
cmpsb
jns
add
adc
xor
lds
pushf
lcall
out
aam
fwait
or
loope
movsb
push
jo
pop
pop
cltd
jmp
inc
pop
js
inc
mov
push
cmp
outsb
or
mov
pop
ljmp
outsb
push
sbb
insb
inc
shrl
dec
mov
lods
jle
daa
push
jl
pop
mov
fsub
mov
cmpsl
inc
dec
inc
xchg
mov
roll
inc
push
mov
jno
cwtl
and
insb
add
loope
and
ds
inc
faddl
rorl
xchg
mov
pop
sbb
pusha
test
sub
push
orb
ljmp
push
test
push
sbb
rclb
push
les
mov
adc
dec
lcall
sub
pop
xchg
call
dec
pop
loop
xor
lock
clc
ljmp
push
mov
push
ds
or
lods
xchg
push
js
cmpl
push
call
or
add
xor
out
add
jle
shll
jg
push
add
es
sub
sbb
jnp
inc
dec
int3
mov
out
mov
jmp
int
mov
ja
push
mov
dec
lods
enter
loopne
aad
out
push
adcl
pusha
movsb
inc
es
add
mov
xor
int3
xchg
adc
lods
jge
lods
mov
insb
push
sub
into
jne
pop
imul
push
js
inc
ds
sbb
and
xor
pop
sub
inc
push
xor
mov
aam
sub
incl
mov
dec
fsubrs
in
lock
sub
inc
lret
add
adc
aam
add
jge
sahf
cs
adc
lahf
lret
or
jae
jnp
cs
ret
add
scas
mov
fisttps
or
lds
data16
rcrb
push
dec
pushf
lcall
xlat
es
sub
enter
ljmp
xchg
insb
pop
stos
jl
xor
xchg
dec
lret
jae,pn
mov
rcrl
clc
repnz
adc
jle
xchg
ret
subb
sahf
iret
or
imul
jp
push
fidivl
mov
decb
cwtl
mov
pop
fbld
push
jo
andps
ds
iret
sbb
call
mov
jo
adc
and
inc
push
cmp
mov
xor
fstps
hlt
ja
push
fs
or
ror
add
and
mov
divb
dec
mov
gs
pop
cmp
push
fiadds
or
jl
inc
lock
std
adc
je
sub
rorb
add
ficomps
and
mov
test
aad
fimull
cmp
rclb
mov
stos
pop
and
dec
sahf
cmp
rcl
hlt
dec
pop
lods
idivl
dec
inc
dec
pop
cmc
outsl
jl
xlat
pop
inc
fnstenv
mov
or
mov
mov
pushf
or
lock
and
adc
push
adc
push
cmp
icebp
decl
push
sbb
pop
push
je
and
popa
mov
insl
xor
adc
adc
sbb
fidivl
in
xlat
push
mov
and
aam
cmp
insl
lock
mov
sbb
test
rcr
lret
jge
add
sbb
inc
ljmp
mov
ss
in
and
daa
enter
clc
add
mov
adc
push
fs
aad
fs
aas
movb
cmc
add
sbb
popf
xchg
in
dec
mov
xor
add
lcall
add
jl
ret
and
pop
inc
loop
mov
nop
fdivr
rol
fs
push
add
add
scas
pushf
movsb
addr16
jmp
sbb
ljmp
loop
add
dec
dec
int
xchg
adc
push
dec
pop
outsb
movsb
adc
shrb
aad
adc
enter
add
dec
add
sarb
mov
out
add
mov
jbe
jb
xor
std
dec
shl
or
dec
icebp
fcmovnbe
test
push
jno
xchg
or
aaa
call
inc
bnd
dec
sub
lret
cwtl
subb
repnz
xchg
adc
jecxz
out
pop
inc
mov
mov
stos
sub
shrl
push
jle
rorb
dec
and
push
loope
and
mov
fs
and
outsb
ficoml
sarb
or
mov
pop
push
sub
or
push
adc
or
aam
adcb
cmc
mov
ret
push
push
aam
xchg
jle
testb
es
mov
mov
ret
pop
xchg
pop
es
lock
aas
idivl
pop
mov
pop
mov
add
les
mov
shll
jnp
sarl
test
cmc
aam
lods
mov
and
fsub
inc
ret
pop
gs
lds
cmc
cli
pop
xor
pop
jo
jbe
add
pop
jb
push
mov
fidivrl
mov
clc
mov
mov
mov
fdivrp
shll
mul
cmp
stos
push
lcall
or
jp
lock
cpuid
push
inc
cmp
adc
mov
push
cmc
push
ljmp
ss
lret
popf
icebp
out
mov
xor
adc
pusha
mov
lahf
add
pop
mov
lods
or
jne
xlat
jne
frstor
xchg
cli
adc
sarb
leave
add
or
test
cld
or
xchg
mov
test
daa
sbb
xor
ds
stos
loopne
push
leave
into
insb
cmc
lahf
sub
mov
sbb
jno
xor
pop
adcl
hlt
inc
pop
mov
dec
mov
mov
lret
mov
or
add
dec
int3
insb
lahf
add
je
adc
cmpl
lret
data16
push
sbb
test
fcomps
mov
stc
mov
push
xchg
test
inc
inc
xchg
ss
push
ret
push
mov
mov
mov
loop
dec
mov
jmp
mov
inc
cld
bound
fsubrp
adc
or
inc
adc
adc
and
ds
sub
dec
jl
lahf
pusha
fldt
cmp
rcll
clc
ljmp
or
lock
sbb
dec
xchg
push
call
insb
xor
mov
mov
sub
std
adc
mulb
sub
push
cmp
test
mov
in
mov
mov
jae
scas
adc
jb
jp
and
test
movsl
mov
adc
fnstenv
mov
mov
test
or
fistl
inc
pop
ficompl
outsl
imul
cwtl
loopne
dec
add
cmc
loope
mov
cmp
pop
adc
or
cmp
add
lods
push
pop
or
les
add
xchg
loopne
stos
test
out
pop
test
daa
movsb
inc
pop
dec
dec
test
xchg
add
pushf
mov
push
sbb
shrb
dec
jmp
movsl
fistpll
xor
cmpsb
pop
cli
add
jo
pop
mov
and
int3
sbb
sub
loopne
sub
pop
js
scas
clc
inc
andl
and
das
mov
jp
mov
mov
das
repnz
lcall
arpl
out
and
je
xor
inc
add
test
pop
jno
scas
and
dec
shll
cli
jo
notl
dec
loope
xchg
jbe
pavgw
add
push
lods
hlt
movsw
test
xor
sub
dec
pop
mov
adc
cmp
push
inc
clc
add
dec
mov
push
mov
and
lods
cmp
lret
push
adc
push
or
jo
inc
lea
in
adc
jb
inc
les
mov
sbb
add
add
pop
pop
arpl
jmp
int
fs
pushf
add
lret
add
sar
sub
shrb
sbb
xchg
mov
mov
add
fwait
adc
out
shrb
je
or
add
cmp
or
pop
add
test
mov
adc
icebp
pop
or
sub
sub
add
mov
andb
pop
je
mov
rsm
push
inc
fabs
xor
jb
test
mov
in
in
into
test
sbb
pusha
inc
lcall
mov
lds
dec
jecxz
repnz
or
or
xchg
push
cltd
add
bound
js
xor
mov
call
leave
jbe
jge
push
mov
pop
xchg
xchg
and
add
aaa
jns
sti
xor
pop
ud1
pop
imul
nop
mov
inc
xchg
sbb
rcl
inc
mov
js
es
fdiv
xchg
adc
aam
xchg
jl
lcall
pop
data16
fdivs
add
xor
xchg
adc
fidivrl
jmp
icebp
fldl
pop
es
push
jp
roll
mov
clc
push
movsl
mov
lock
repz
mov
xchg
mov
inc
movsb
ret
pop
test
outsb
mov
sub
cmp
fdivrl
mov
dec
gs
into
movsb
and
or
pop
or
push
test
and
adc
push
adc
test
push
nop
sub
lcall
lods
js
cs
and
sub
add
lods
ja
stos
inc
add
mov
rorl
mov
pop
in
mov
jno
inc
test
jbe
mov
js
mov
lock
ficompl
rcrb
sub
mov
xor
push
addb
sbbb
rclb
scas
outsb
lcall
and
pusha
push
mov
sbb
mov
sub
ja
mov
xor
and
pop
hlt
add
in
out
inc
mov
sbb
jno
mov
test
jle
fwait
push
test
dec
pop
inc
sub
movsb
mov
sub
je
cmpsl
lock
outsb
jns
add
shll
xor
sub
adc
xor
cwtl
lods
js
mov
roll
sub
rolb
lahf
push
and
les
out
ljmp
push
mov
lcall
cld
mov
inc
test
pop
mov
fnstsw
inc
shl
mov
pop
scas
and
adc
mov
ret
jp
push
shll
dec
fisubs
mov
std
pop
loopne
sbb
int
scas
xorl
aad
ret
xorb
cwtl
dec
push
push
cmc
stos
call
std
addr16
cmpsl
and
adc
and
les
mov
cs
test
aaa
out
jbe
pop
pop
pop
loopne
je
insl
mov
pop
push
mov
pop
mov
adc
sar
jb
sti
pop
pop
ja
mov
adcb
ja
ljmp
dec
addr16
lret
dec
dec
mov
test
dec
adc
dec
sarb
fdivs
mov
ss
pop
jl
rdtsc
and
in
aaa
arpl
gs
mov
push
sbb
cmp
push
js
push
loopne
mov
mov
xorb
mov
cmp
imul
jno
jne
cmp
fwait
lods
jb
shr
or
test
and
mov
push
mov
add
adc
std
or
out
dec
int
mov
push
cmpsb
sti
xchg
mov
lcall
sbb
gs
cli
movb
shrl
movsl
pop
les
hlt
call
test
shll
xchg
inc
notl
add
mov
push
dec
pusha
sbb
pushf
adc
insb
push
imul
aam
adc
in
outsb
ljmp
loopne
clc
pop
add
insl
test
inc
add
aam
imul
sub
faddl
ret
mov
xor
xchg
and
fsubrl
out
fwait
dec
je
inc
xchg
mov
mov
jns
loop
mov
in
fistl
adc
add
sar
pop
cmp
inc
dec
sub
pop
andb
xor
outsb
dec
adc
shlb
jge
sbb
js
sub
stos
out
testl
pop
push
xchg
test
or
ds
dec
pop
add
nop
test
in
or
xchg
mov
adc
add
int3
sbb
push
out
scas
in
fimull
loopne
push
shll
pop
dec
lret
lcall
pop
enter
add
out
mov
pusha
js
push
sbb
les
nop
cmp
iret
jecxz
sub
lea
or
mov
out
xor
xorl
sbb
mov
shrb
mov
jle
or
jo
push
jbe
stos
repz
inc
sbb
stc
inc
test
or
cmp
mov
dec
sbb
lcall
ds
push
test
inc
shll
push
jp
sub
push
jle
test
inc
push
adc
mov
xchg
pop
push
cmp
jmp
jno
push
pop
test
test
sbb
fsubrl
jmp
xor
pop
xor
ljmp
je
dec
mov
lea
dec
xor
push
cmpsb
ret
push
fnstcw
sbb
pop
bound
mov
popa
aad
mov
jne
push
cmp
ljmp
popa
andb
ret
fldt
aaa
bound
xor
pop
xor
pop
shlb
cs
fisubl
cmp
cld
clc
jo
dec
mov
push
and
push
pop
dec
cld
clc
inc
mov
mov
push
cmp
out
out
add
push
sbb
cmc
lea
push
push
pop
dec
bound
movsb
cmpl
pushf
stc
subb
push
out
test
or
cmp
cltd
xchg
pop
push
inc
adc
inc
test
scas
movsb
push
and
mov
pop
lock
jb
push
push
cwtl
ret
imul
js
test
ret
negb
dec
xchg
adc
stos
mov
loopne
clc
test
mov
ds
sbb
mov
imul
test
sbb
dec
push
clts
cltd
cmp
mov
adcb
push
xchg
mov
push
loop
dec
sbb
dec
sahf
sahf
rcl
ljmp
pop
pop
adc
mov
dec
sub
rclb
jbe
icebp
jnp
xor
sbbb
andl
or
and
ds
insl
outsl
mov
cmp
nop
lds
dec
cmpsl
into
mov
sbb
push
inc
xor
lods
pushf
orb
xchg
sbb
rol
lahf
add
pop
adc
inc
dec
nop
add
xchg
sub
sbb
fdiv
fistps
ficoml
dec
js
fs
pop
ret
xor
loopne
imul
mov
cmpl
mov
lea
lods
int3
mov
popf
pop
div
popa
fmulp
sub
adc
into
dec
push
sbb
xlat
mov
push
insb
insb
push
pushl
in
dec
pop
clc
in
sbb
sbb
lds
cld
pop
and
in
in
sbb
inc
jno
adc
mov
mov
xchg
lods
mov
data16
xor
mov
aam
sub
pop
js
fsubr
push
cmp
addr16
inc
pop
fcomps
jge
negb
repnz
xor
jne
std
imulb
adc
es
into
push
sub
shlb
out
daa
cmp
ja
insl
jl
adc
mov
decl
sbb
bound
mov
inc
mov
push
rolb
xchg
ss
adc
pushf
mov
rclb
test
aaa
sbb
cmp
sbb
mov
jnp,pn
insb
movsl
adc
dec
repz
mov
pushf
dec
and
neg
aam
mov
or
jb
sbb
fbld
insb
sub
loop
mov
sbb
adc
lock
pusha
sbb
push
mov
lret
cmp
cld
or
jp
jle
mov
dec
cmp
push
incl
stos
ja
jl
add
pop
js
cmp
adc
bound
jns
cmp
cmp
cmp
mov
cmpsb
sar
shlb
fs
sti
test
cmpsl
dec
ret
in
jl
roll
inc
in
into
pop
push
push
repnz
adc
inc
test
jmp
dec
loope
xor
js
push
int
mov
cmp
xchg
or
or
pop
inc
outsl
orb
cmc
xchg
ret
testb
push
jecxz
subl
clc
popf
push
cwtl
fprem
scas
imul
pop
dec
cs
popf
mov
addr16
cltd
xchg
inc
clc
fidivrl
ficomps
xor
adc
jge
test
mov
jl
dec
aam
out
sarb
lret
aad
xchg
sbb
jno
daa
out
pop
shlb
addb
ljmp
fs
push
enter
sub
xchg
cmpsb
cmp
sbb
jne
outsl
xchg
mov
negl
mov
mov
pop
add
pop
hlt
push
ficomps
xchg
inc
mov
sub
mov
daa
and
mov
mov
in
add
lcall
and
cmp
out
add
adc
add
mov
adc
bound
ja
mov
lret
fdivs
push
rolb
mov
push
lds
pushf
adc
inc
or
jno
sbb
repnz
test
sahf
ror
xchg
fists
pop
xchg
es
xchg
out
or
in
add
flds
call
dec
outsb
mov
fdiv
clc
mov
pop
std
dec
push
arpl
xor
or
idiv
icebp
sub
push
ds
test
mov
mov
push
mov
sbb
shlb
clc
pop
outsb
mov
out
or
mov
inc
push
add
cli
or
subb
test
or
adc
mov
imul
jge
sub
push
stos
add
xorb
jb
loope
pop
mov
lock
mov
nop
arpl
and
mov
stos
ret
out
aas
xchg
or
clc
mov
mov
scas
shrb
cmc
add
inc
dec
mov
mov
dec
pusha
popa
and
lea
pop
adc
push
pop
popa
xlat
pop
cli
stc
das
dec
mov
jne
adc
test
popa
nop
cmpsl
loopne
aaa
jmp
mov
and
push
scas
mov
cmp
xor
clc
stc
pusha
test
scas
test
test
jp
jbe
mov
stos
jg
ficoms
pop
jg
aaa
push
shll
sbb
stos
jbe
jmp
jns
xor
add
div
subb
mov
iret
rcrb
sbb
sub
mov
les
cld
fs
dec
xchg
or
cld
divl
pop
push
lret
push
lcall
loopne
mov
leave
inc
test
jg
or
push
rcrb
adc
and
pop
loopne
push
inc
clc
test
jecxz
sbb
out
xor
xor
mov
adc
loop
or
popf
mov
aas
add
cli
loop
addr16
mov
dec
ret
pop
add
xchg
or
mov
mov
clc
mov
enter
mov
mov
push
enter
loopne
adc
sub
lods
jp
add
std
mov
mov
and
fcom
sti
jns
or
inc
xchg
cmc
aas
shrb
xor
mov
and
xchg
xor
sub
xchg
jmp
scas
xchg
ret
shl
test
pop
mov
mov
loopne
add
cmp
sub
or
dec
push
xchg
subb
icebp
push
push
adc
dec
fistpll
hlt
out
push
js
ret
mov
sub
cmp
mov
push
in
xorb
pop
adc
inc
ds
enter
dec
out
adc
sub
or
mov
mov
call
pop
lods
push
adc
fimuls
jle
fisttps
or
mov
stos
and
lock
mov
sbb
ss
cld
push
adc
fnstcw
and
jecxz
sbb
std
mov
sbb
loopne
movsb
out
imul
movsb
sbb
push
fisubs
rcr
or
mov
ss
jecxz
mov
ss
sub
xor
dec
scas
pusha
jl
es
sbb
add
cmc
int3
jecxz
jl
push
and
inc
test
js
movsw
xor
mov
mov
fwait
and
push
cmpsl
xor
gs
dec
xor
test
cmpsb
mov
insl
sbb
xchg
repz
loope
incb
stc
pop
imul
xor
inc
rcr
or
jmp
inc
fbld
icebp
pop
jmp
addr16
loop
sub
lret
int3
inc
jno
mov
cs
int3
das
dec
inc
pop
push
enter
add
mov
insl
repnz
movsl
push
sbb
sbb
add
mov
aad
or
cmp
add
sbb
int3
cwtl
lods
js
jp
pop
test
or
sbb
adc
mov
call
sbb
jp
mov
sub
mov
sub
mov
pop
out
xor
or
in
incl
mov
sbb
xor
pop
adc
mov
cld
pop
add
mov
and
xchg
add
shl
cmp
out
inc
in
push
mov
jg
or
das
inc
and
lock
hlt
adc
fwait
add
mov
mov
iret
dec
pop
pop
jg
rcl
xchg
dec
testb
cli
inc
jb
pusha
loop
loope
loopne
cmp
je
mov
mov
loope
push
loopne
icebp
or
adc
mov
jecxz
mov
push
mov
pop
cmp
stos
jge
lcall
or
leave
pop
subl
adc
aas
js
lahf
sbb
xchg
cmp
dec
mov
mov
std
inc
and
inc
dec
or
or
jge
or
shlb
clc
xchg
stos
movsb
xchg
pop
jl
xor
sbb
ljmp
mov
xor
pop
mov
mov
xchg
lahf
mov
cmp
loop
and
xchg
cld
mov
lock
jne
mov
mov
pop
cli
js
and
out
sub
popa
mov
or
sub
outsl
xor
cmp
inc
int3
ret
jmp
jb
test
loopne
dec
fimull
clc
cs
loope
and
add
es
lret
rcrb
sbb
fisubl
jmp
dec
adc
pushf
xchg
dec
les
pop
dec
add
dec
jo
sub
jne
fdivr
mov
pushl
mov
stc
ret
push
fdiv
jg
ror
mov
mov
cmc
mov
mov
push
dec
add
jp
xchg
sbb
xchg
inc
pop
mov
not
add
filds
rol
fidivl
adc
fstpt
and
scas
push
rcl
cmp
xor
repz
loope
lock
rcrl
push
mov
add
inc
adc
pop
sub
mov
adc
sbb
test
and
cli
pop
aam
fidivl
mov
cmpsl
and
fs
mov
rcr
loopne
clc
and
add
sub
push
stos
mov
jne
push
inc
test
dec
je
cmp
gs
xchg
jnp
aas
rorl
loopne
mov
hlt
pop
jle
dec
add
adc
cmpsb
in
xor
jo
xchg
int3
test
out
and
mov
or
mov
add
push
ret
out
fadd
shlb
test
enter
ficomps
inc
rcr
ret
mov
int
mov
jbe
mov
sub
sbb
xchg
addl
cmc
add
jge
or
mov
push
jge
in
inc
mov
xor
mov
ret
push
fs
rorb
mov
push
popf
lret
inc
pop
in
in
jecxz
xlat
and
or
sbb
mov
pusha
rorl
inc
cmc
test
test
cli
add
test
nop
mov
add
and
sub
rolb
jle
sbb
adc
data16
add
sbb
aad
mov
test
xchg
push
ds
xor
insb
jge
push
pusha
fstpt
sbb
aaa
xor
cltd
in
xor
mov
test
pop
or
out
sub
jbe
jbe
mov
leave
xlat
loopne
dec
orb
pop
clc
mov
loop
popf
xchg
aaa
js
adc
pop
clc
sub
ret
mov
push
push
cmp
loopne
mov
pop
int3
adc
aad
cmc
lcall
jmp
lods
cs
filds
xchg
xchg
aad
imul
lods
sbb
outsb
pusha
icebp
test
jecxz
or
mov
mov
insb
es
in
sbb
sub
pop
insb
aaa
jecxz
add
pop
sbb
xchg
cmc
push
jmp
or
lcall
add
dec
clc
and
push
jecxz
ja
ret
xchg
loop
js
jle
cmp
jecxz
dec
pop
sbb
sbb
jecxz
arpl
cs
add
pop
cmp
inc
lahf
lock
mov
inc
test
inc
clc
dec
pop
lcall
and
stos
roll
inc
pop
clc
sbb
mov
mov
sarl
test
and
loopne
inc
sub
mov
test
addb
cld
shlb
add
push
mov
mov
mov
dec
push
aam
mov
dec
repnz
mov
inc
dec
push
or
loopne
in
vcvtdq2pd
add
mov
js
es
add
xor
enter
and
fldenv
sbb
bound
inc
je
jp
adc
test
dec
add
pop
sbb
mov
fidivrs
push
pop
icebp
push
xchg
xchg
and
lcall
testl
and
mov
test
and
lods
add
pop
dec
loopne
sub
js
inc
stc
es
mov
dec
sbb
xchg
mov
aam
mull
imul
push
bound
xor
ljmp
mov
cld
lcall
mov
xchg
cwtl
push
pop
sahf
lea
sar
sbbl
jbe
lret
ja
stos
sub
testb
jle
shlb
scas
xor
daa
out
aam
sbb
fcompp
mov
movsl
rcll
call
insb
imul
and
dec
xlat
pop
push
stos
scas
movsl
and
rcl
mov
ljmp
in
daa
adc
lahf
pusha
sti
dec
pop
ljmp
sub
or
jp
nop
sub
mull
cmp
xchg
and
xchg
adc
cmpsl
clc
pop
cwtl
push
pop
add
inc
lds
cmp
cmp
rorb
sarl
stos
loope
mov
push
xlat
fldcw
clc
mov
jae
icebp
push
inc
test
call
cwtl
scas
push
je
pop
cmpsl
rolb
pop
cld
jno
adc
or
leave
inc
cmc
sti
sbb
fbstp
pop
xor
outsb
adc
pop
repz
mov
aam
or
shrb
aas
add
mov
lods
movsb
movsl
mov
pushf
repnz
pop
divb
sub
inc
mov
push
loope
out
sub
sub
push
xchg
xchg
jne
dec
ss
data16
ljmp
test
and
data16
add
jbe
fwait
cmc
loop,pn
dec
shl
mov
inc
cmp
mov
push
dec
push
js
dec
add
push
add
inc
xor
roll
push
jl
loop
inc
adc
push
enter
popl
sub
cmp
mov
adcl
mov
jo
test
cmp
neg
push
xor
cmpsb
sbb
jno
or
nop
shlb
inc
popa
dec
push
sar
and
jbe
mov
shlb
outsl
sarb
cmpsl
mov
dec
ret
fisttps
pop
or
inc
andb
cltd
aaa
rcll
cmpsb
lock
js
pop
adc
or
lock
ret
test
aam
pop
in
inc
mov
stos
jne
lds
push
mov
data16
lret
call
test
sub
add
mov
sub
aad
or
adc
jne
cld
mov
in
cmc
addr16
mov
inc
dec
lea
clc
add
nop
jg
ret
and
jle
cwtl
cs
hlt
push
repnz
mov
in
orl
nop
lods
jnp
or
add
subb
pop
je
in
add
push
or
cmp
test
inc
rolb
push
sar
adc
pop
in
int3
xor
sub
out
jg
stos
jns
test
mov
movb
cmpsb
cmpsb
hlt
xchg
push
or
call
out
cmp
dec
scas
aas
or
inc
xchg
dec
xchg
clc
or
cmpsl
push
push
xchg
clc
shll
xchg
inc
imul
mov
mov
xor
mov
xchg
mov
ds
rcl
fwait
pop
ficoms
or
hlt
cmp
cmp
inc
cmp
pop
movsb
jo
inc
cld
jg
push
push
dec
push
sbb
imul
xchg
sub
mov
push
das
or
aad
lock
les
addr16
andb
jo
decl
mov
mov
or
sbb
jp
xlat
clc
or
or
ret
add
xchg
push
dec
pop
xchg
fdivs
in
loope
inc
push
and
test
mov
mov
sbb
lea
dec
cmp
popa
mov
jo
pop
sbb
sub
pushl
shrl
movsb
adc
add
mov
sub
jl
ds
iret
inc
imul
packssdw
mov
lock
iret
stos
dec
inc
xor
adc
sbb
shl
std
sbb
sub
int3
insb
mov
jno
or
cmpsb
sbb
xchg
ret
je
pop
decb
and
xchg
xchg
fiadds
inc
sub
inc
out
aam
cwtl
fidivrs
dec
inc
paddq
insb
sub
mov
mov
faddl
in
addr16
mov
and
mov
rcl
push
inc
mov
movups
and
int3
pop
push
jnp
outsl
xchg
add
seta
popa
xor
cwtl
sub
jg
out
xchg
push
icebp
loop
and
push
std
add
mov
cmpsb
add
xlat
stc
add
icebp
ret
sbb
pop
mov
add
fdivl
shll
pop
cmc
and
mov
ret
pop
push
inc
push
loopne
std
jp
je
inc
adc
rolb
mov
jecxz
add
push
and
add
lret
addr16
cmp
push
pushf
sbb
mov
xlat
fs
inc
push
fwait
pop
cld
stos
loop
lcall
repz
scas
js
mov
adc
mov
push
outsl
xchg
sbb
ss
sub
mov
fistpll
inc
push
faddl
xchg
movsb
jbe
inc
in
mov
pop
ss
ret
jl
jmp
adc
leave
enter
xor
cld
sub
mov
cld
std
iret
orb
mov
push
loop
shl
sub
mov
add
arpl
xchg
jecxz
xor
dec
push
aaa
lods
add
loop
pop
sbb
outsb
inc
movsl
movsb
imul
ljmp
and
jl
incb
push
ja
repnz
jo
inc
aam
push
jp
adc
adc
jae
addb
out
out
pop
ret
or
aas
or
dec
lods
mov
push
jg
test
inc
shlb
orb
loopne
xchg
push
or
sub
rcl
dec
cmp
and
lcall
and
jns
xor
push
inc
das
or
cmp
mov
rcr
xor
push
in
cwtl
sub
mov
pop
call
xchg
and
lock
fnstcw
and
or
sbb
adc
jl
mov
add
rcl
cwtl
stos
push
sbb
mov
imul
push
lds
inc
sub
gs
out
jl
jp
add
or
ds
stos
xor
aaa
cli
sub
pop
mov
dec
mov
sub
sbb
add
mov
add
loopne
addr16
sub
lcall
mov
and
pop
iret
insl
and
loope
cld
fnsave
or
adcl
lret
nop
notl
sahf
or
pop
lock
clc
out
lret
loope
dec
ss
ret
mov
and
push
in
cmovs
adc
dec
lahf
icebp
push
sub
or
push
loop
or
mov
movl
lock
mov
mov
sub
fiadds
imul
adc
psrld
or
mov
xor
push
lock
sbb
or
adc
stos
push
lcall
cmc
inc
test
jg
out
xorl
and
loop
pop
or
mov
mov
mov
mov
lahf
xchg
jle
movsl
mov
pop
sbb
loope
pop
dec
wbinvd
aaa
or
push
ss
push
mov
rcl
lock
test
or
mov
jo
sbb
add
pop
lock
mov
jp
mov
mov
mov
jp
pop
loop
sub
mov
sub
test
xchg
dec
inc
jge
daa
testb
pop
jno
mov
sub
mov
or
in
cmc
outsl
push
cltd
mov
xor
sub
push
das
fwait
sub
mov
ret
mov
je
je
fistpll
xor
jl
lods
or
ja
pusha
ds
hlt
adc
push
or
adc
mov
adc
mov
insl
test
jg
rep
pop
lcall
sahf
imul
inc
adc
cmp
cmpl
mov
sub
mov
add
or
shll
fwait
js
mov
daa
pop
mov
fdivl
jb
ljmp
aad
test
out
inc
loop
cmc
jp
fbld
fisttpll
imul
add
lods
jmp
cwtl
xor
xchg
sbb
jp
cmp
jl
mov
dec
mov
imul
call
inc
or
xchg
inc
sub
fldenv
inc
inc
es
push
bound
adc
add
cmpsl
fadd
pop
push
mov
lcall
das
mov
fs
and
xlat
les
push
and
aas
mov
add
in
mov
and
inc
out
jg
testb
mov
xchg
adc
dec
xlat
jnp
push
lods
jle
and
ret
aas
outsb
adc
xadd
es
fcom
je
jne
xlat
stos
lcall
icebp
bound
rcrl
jecxz
fucom
lock
daa
dec
push
adc
out
adc
rolb
jge
mov
and
push
mov
jle
das
or
push
jb
dec
pop
fwait
mov
lods
sar
gs
sub
fwait
pop
jecxz
ss
push
inc
aad
jne
push
jge
adcb
add
icebp
sub
lcall
and
mov
hlt
mov
jb
fsubs
shlb
xchg
fcompl
iret
jbe
push
fimuls
add
sub
mov
push
xor
decb
add
test
test
scas
push
or
es
xchg
pop
and
nop
jecxz
shr
shl
inc
inc
sbb
fnstenv
out
add
or
arpl
insl
sbb
xor
push
bound
fwait
cmp
push
lock
ja
mov
inc
aam
inc
fimuls
jl
loop
dec
xor
mov
xchg
aam
pop
mov
mov
push
and
sbb
ret
sub
stos
mov
shll
and
cmp
mov
filds
pop
in
add
push
mov
xchg
mov
cmp
adc
adc
xor
outsb
add
xor
arpl
and
pop
mov
cwtl
je
mov
push
nop
jbe
dec
rolb
scas
sbbb
outsl
pop
pushf
sbbb
in
mov
fisubl
pop
test
ret
sbb
shlb
xor
insb
cmp
pop
sahf
xor
shrb
or
add
xchg
push
or
push
adc
mov
out
pop
dec
cmpsl
fdivs
or
scas
push
cmp
aaa
sti
jbe
mov
mov
jg
xor
and
xchg
int3
iret
leave
fdiv
scas
dec
aaa
orl
jg
xchg
mov
sub
in
add
ret
xchg
dec
push
dec
jne
dec
mov
rclb
push
dec
bound
adc
add
pop
out
pop
or
push
push
rclb
test
ss
sub
or
mov
sbb
xlat
mov
mov
sbb
inc
sub
fsubrs
call
test
jp
inc
cmp
ss
pop
ds
jmp
std
into
mov
jp
dec
mov
popf
or
or
outsb
test
dec
or
les
add
faddp
std
or
sbb
jmp
rolb
push
or
iret
ss
mov
aas
push
adc
jg
or
or
mov
sti
orb
inc
sahf
push
mov
loopne
xrelease
mov
mov
and
je
test
lret
movsb
imul
cmp
or
test
cmp
and
fcomip
icebp
in
add
jae
mov
jne
jg
mov
inc
mov
fmuls
insl
and
ret
lock
push
shrl
mov
or
xchg
mov
add
aaa
into
xchg
subl
jo
fnstenv
jl
fstpt
xchg
js
add
dec
ret
push
jno
bound
dec
popf
xchg
jp
out
xchg
add
jle
pop
or
clc
cmpsb
icebp
addb
jae
inc
testl
add
add
pop
and
mov
sub
pop
data16
lock
push
aas
xor
mov
nop
xor
es
lods
test
scas
mov
fmuls
jo
cwtl
dec
push
fiaddl
outsb
sbb
and
sbb
je
push
and
xchg
insb
stc
ljmp
push
inc
mov
cmp
mov
add
inc
test
mov
ds
sbb
push
ss
pop
pop
push
ror
or
pop
stos
pop
enter
into
dec
mov
cwtl
adc
bound
jl
aas
mov
rolb
das
ss
cmpl
adc
loope
cmp
ret
inc
ret
or
adcl
mov
jne
out
add
in
pusha
int
rorb
push
cli
dec
pop
lock
xchg
out
movsl
push
mov
lock
pusha
aam
push
xchg
mov
enter
call
sbb
lret
outsl
push
cmc
pushl
mov
inc
lds
sbb
cmp
hlt
mov
fwait
xchg
loope
adc
addr16
push
filds
add
add
xchg
popa
mov
test
int
cmpsb
push
jl
stc
push
dec
and
jmp
into
xor
push
iret
xor
dec
ror
sub
ja
inc
mov
mov
fiaddl
lods
mov
imul
inc
repnz
lret
fadd
cmp
mov
add
add
fwait
les
movsb
inc
out
sti
dec
mov
shll
add
addl
pop
mov
testl
out
sbb
mov
pop
add
cmp
ret
mov
daa
loope
nop
mov
mov
pop
and
imul
stc
out
ljmp
sub
dec
movsb
es
rolb
das
and
sub
mov
hlt
mov
mov
push
stos
adc
loop
push
xor
jge
dec
jne
mov
push
add
pop
sub
and
cmpl
xor
incb
mov
aas
xlat
int
push
add
dec
dec
stos
das
into
cmp
inc
shlb
inc
rorb
inc
out
inc
sbb
adc
xor
mov
mov
mov
cmpsl
negb
mov
inc
inc
call
inc
add
out
fidivs
xchg
test
mov
cld
gs
push
subl
pusha
add
ret
mov
jl
cli
js
jmp
cld
pushf
push
and
and
lock
dec
ljmp
icebp
test
bound
mov
stos
ljmp
test
in
out
mov
aas
adc
in
dec
loope
enter
push
mov
or
nop
adc
jecxz
ss
out
lock
jmp
outsb
or
sub
jbe
es
stos
and
xchg
mov
cld
sub
bound
or
jle
push
clc
pusha
sub
adc
test
fs
pop
and
ljmpw
cmp
int
mov
cmp
cmp
aas
scas
jb
repnz
nop
iret
and
roll
imul
daa
xchg
inc
adc
jl
ficompl
cmp
shll
sub
cmp
adc
or
pop
xchg
jae
add
test
add
mov
lock
and
call
pop
sub
sub
pusha
push
or
out
imul
gs
pop
xchg
inc
cmc
ja
xchg
cs
hlt
add
or
movsl
mov
icebp
mov
lahf
lds
dec
in
dec
push
lods
shlb
adc
cmc
mov
mov
scas
xchg
testb
clc
ror
jp
dec
sarl
mov
push
call
mov
mov
dec
shrb
outsb
sbb
add
dec
push
js
mov
or
stos
jbe
inc
lods
cmp
insl
cmp
push
push
xor
outsl
loop
fildl
loop
xor
mov
pusha
outsb
js
mov
jle
push
adc
call
adc
jns
pop
js
xchg
je
dec
fcoms
dec
clc
enter
shll
lods
cmp
sbb
or
push
fisttpl
cmp
pop
icebp
stos
push
jae
int3
sbb
outsb
sub
xor
jle
xchg
insl
mov
loop
fildl
loopne
push
mov
jno
scas
lcall
dec
or
test
fimuls
lods
fwait
sub
inc
and
push
decb
or
bound
jg
xor
stos
movsl
cmpsb
push
dec
jecxz
push
jnp
std
lods
popa
xor
popa
mov
push
ret
test
rorl
inc
jo
push
fdivr
dec
jg
push
popf
xchg
dec
sub
cmp
mov
mov
addr16
add
cmp
cli
call
mov
mov
scas
cmp
inc
jno
insl
jb
xchg
mov
enter
mov
shlb
pop
sbb
test
in
out
ds
fadds
int3
or
incl
cmp
jl
addl
test
nop
cmpsb
lock
xchg
dec
dec
ret
pop
daa
push
jae
or
or
int3
pop
sub
push
lcall
or
mov
xor
adc
sbb
movsb
dec
les
xchg
adc
rol
mov
add
ret
les
push
add
mov
jg
mov
fidivl
sub
incb
pop
dec
scas
add
pop
clc
adc
xchg
std
leave
inc
mov
ljmp
add
mov
mov
cmc
aaa
mov
outsb
push
js
sarl
xchg
js
lods
xor
xor
rcrl
xchg
in
decl
mov
cld
xchg
pop
insb
bound
add
cmp
dec
jmp
mov
ret
test
cmp
jg
stos
and
clc
jns
aad
icebp
cli
jp
mov
xchg
test
jge
mov
jle
sbb
les
xor
lods
clc
dec
xor
ret
jmp
out
pop
fsub
sbb
add
enter
test
add
push
inc
nop
into
xchg
test
jb
mov
cmp
sbb
popf
cmp
mov
imul
jae
cmp
mov
testl
jle
icebp
xchg
jo
adc
add
stos
ljmp
push
lock
mov
and
ret
push
ret
mov
mov
cmp
imul
movsl
mov
mov
inc
adc
mov
xchg
pop
mov
gs
and
arpl
sub
loopne
sub
inc
mov
dec
pop
xor
cli
push
jne
je
dec
and
test
pop
sbb
dec
cmc
and
xor
pop
testl
and
popf
and
xchg
mov
pop
inc
push
or
push
cmp
and
cmp
dec
lea
fwait
aaa
inc
push
mov
or
js
addl
lret
xor
jne
mov
pop
inc
sti
dec
shl
ret
fldl
scas
fdivr
or
pusha
sub
mov
roll
decl
jb
pop
ds
xor
clc
cs
cld
test
push
add
hlt
mov
adc
mov
and
add
pushf
mov
sbb
inc
arpl
in
sbb
sarl
inc
into
inc
mov
push
push
mov
pop
lcall
inc
mov
insl
push
mov
movsl
mov
mov
das
adc
jle
aaa
sbb
in
pop
loopne
push
mov
dec
es
cmp
add
test
loop
int
lcall
push
sub
je
clc
fisttpll
cmc
or
fwait
mov
push
dec
xchg
dec
or
popf
fcoms
cld
jae
and
test
jle
inc
dec
aas
fadds
notl
mov
inc
leave
std
test
loopne
jmp
inc
push
mov
repz
movsb
dec
shr
add
add
js
aam
cmp
out
aam
push
cli
in
and
fs
add
movsb
fdivrl
jle
cs
sub
imul
jno
mov
mov
inc
mov
jp
loopne
sub
fildll
adc
jge
sbb
dec
add
bound
or
add
and
xchg
mov
or
push
andb
pop
in
pop
push
fsubrl
lahf
je
adc
xor
test
and
or
lea
sbb
es
xchg
addr16
jmp
cld
clc
mov
add
xchg
xchg
mov
jg
leave
mov
ja
out
subb
push
mov
adc
sbb
lret
loope
pop
icebp
or
cmp
mov
scas
imul
mov
mov
roll
pop
mov
xchg
push
pusha
add
mov
push
pop
insb
pushf
push
imul
push
fisttpll
fcoms
adc
add
icebp
push
into
adc
cmp
enter
add
sbbb
nop
push
push
jns
adc
xor
in
cmp
dec
test
adc
mov
in
icebp
jl
jno
repz
lcall
cwtl
sbb
pop
popa
or
scas
inc
pop
pop
sub
and
outsb
pop
add
nop
mov
ds
sbb
jb
aas
das
fcmovbe
and
psraw
sbb
or
lods
iret
lock
imulb
push
in
fbstp
clc
sbbl
insb
adc
adc
in
rcll
pop
cld
addb
push
sbbl
inc
mov
xchg
aad
inc
jge
bound
aam
mov
add
pop
mov
rcl
pusha
adc
ret
mov
insb
sub
xor
in
mov
push
roll
in
xchg
je
xorb
add
xor
movb
jnp
xchg
xchg
cmp
popf
dec
testb
nop
inc
jb
imul
ds
mov
xchg
dec
jg
adc
mov
aam
loopne
or
mov
jp
mov
or
outsl
jo
in
clc
loop
add
push
shr
sbb
pop
cmpsb
jbe
dec
mov
and
pushf
stc
out
sub
cmpsb
aaa
ds
jbe
pusha
jge
add
push
ret
or
jge
int3
mov
mov
and
or
dec
cs
cltd
sarb
inc
inc
or
rcrl
mov
mov
add
mov
stc
mov
mov
std
icebp
movsw
adc
fidivl
sbb
testl
and
add
lock
loopne
incb
out
es
lret
jl
in
push
dec
test
icebp
testl
shlb
add
stos
cmp
jle
notb
push
mov
roll
mov
pop
pushw
fisttpl
inc
icebp
cmp
adc
loopne
cmp
mov
pushf
clc
push
int
lods
xchg
sub
pop
inc
xchg
mov
and
push
or
lahf
lcall
and
ss
dec
jbe
jmp
shll
inc
das
lcall
icebp
addl
pop
push
sub
xchg
ljmp
dec
jbe
jle
jne
and
or
cmpsl
sbb
das
ficompl
divl
xor
sub
aam
pop
mov
sbb
xchg
mov
imul
adc
fs
adc
cwtl
sub
xchg
dec
adc
sbb
mov
inc
loope
mov
cmp
jbe
mov
ss
stc
fs
imul
push
sub
mov
mov
test
cld
ret
rcll
rclb
pop
sub
cmpsb
call
jmp
out
add
jle
movsb
shlb
not
adc
mov
jmp
test
jne
xchg
xchg
push
xor
lret
incl
inc
xchg
cmp
stos
imul
dec
sbb
fsts
out
xchg
fisubrs
add
xor
mov
test
sub
incl
arpl
andl
jl
add
cmp
clc
lds
int
out
sub
pop
mov
or
mov
pop
xor
mov
loopne
rol
mov
cli
mov
test
mov
out
push
push
pop
pop
ja
mov
add
iret
mov
pop
add
lds
xchg
loope
fldt
out
inc
lods
pinsrw
int3
imul
inc
xor
mov
adc
or
js
and
lcall
inc
test
sbb
nop
int
sbb
cmc
adc
or
sub
jge
es
ss
mov
rcl
sbbb
push
mov
addb
rolb
push
add
lret
fistl
xorl
rorb
or
jo
addb
mov
push
xor
cld
js
negl
nop
test
jnp
xchg
sbb
imul
or
leave
inc
adc
rolb
aaa
imul
test
mov
xor
add
outsb
and
scas
xchg
insl
pop
sbb
cwtl
daa
add
lods
rorl
loope
mov
enter
sub
sbb
arpl
mov
add
mov
enter
ja
imul
xchg
shll
dec
ror
sub
mov
add
adc
test
in
sub
push
mov
or
and
out
outsl
popa
mov
outsb
test
sbb
xchg
or
mov
imul
jmp
pop
pop
sbb
testb
sub
sarb
mov
shufps
ljmp
mov
faddl
sub
fildl
rclb
adc
adcb
pop
shlb
xchg
cmp
pop
mov
cli
mov
mov
jno
loop
add
dec
fsubrl
push
push
js
aad
jl
mov
inc
mov
ljmp
sbb
pop
notb
les
mov
mov
push
dec
mov
cld
out
ret
push
sub
sub
jb
cli
scas
scas
loop
aas
inc
cli
subb
xor
inc
xchg
test
adc
scas
fimuls
dec
mov
push
mov
rol
rcrb
add
cvttps2pi
call
cli
cmpsb
cmpsb
or
jae
push
mov
mov
inc
mov
dec
clc
push
pop
push
arpl
cmp
mov
dec
cld
pop
pop
mov
mov
add
call
mov
mov
movl
pusha
add
adc
jl
mov
dec
push
and
flds
cmp
call
int3
outsl
and
jg
loope
clc
shll
adc
divb
cmp
add
movsb
lock
mov
test
in
shrb
pop
in
pop
push
mov
jo
test
jecxz
push
dec
and
adc
jno
mov
test
cmp
sbb
push
add
xor
or
xlat
fisubrl
add
mov
dec
mov
cmp
sub
lods
dec
pop
imulb
lcall
adc
adc
pop
jno
mov
push
daa
dec
mov
dec
adc
scas
clc
enter
pop
adc
add
dec
test
ja
ss
and
shrb
mov
test
add
mov
xchg
and
aas
pusha
inc
aaa
push
je
cld
add
ret
aad
pop
test
cld
mov
push
insl
and
xor
iret
je
inc
dec
test
aad
scas
mov
in
sub
aas
pop
stc
cmp
cmp
push
jl
push
dec
imul
mov
sub
adc
push
mov
lock
cmpsb
rolb
inc
cmp
push
mov
addr16
mov
repz
insb
loop
enter
fcomi
adc
xchg
push
sbb
out
cmp
mov
cmp
test
xchg
cli
and
jecxz
and
push
jecxz
arpl
or
js
add
pusha
push
fdivrl
mov
mov
test
test
jb
lahf
lock
sub
jle
mov
jg
dec
in
jnp
outsl
and
imul
loopne
add
lock
and
adc
sub
pop
lds
push
cmp
mov
pop
inc
fisubrl
cmovns
clc
fcoms
push
jle
xor
ds
mov
rcrl
ds
mov
mov
sub
mov
add
stc
add
mov
inc
jl
mov
rclb
cs
scas
ljmp
pop
ds
cmp
movsl
push
je
mov
push
addb
stos
insb
outsb
mov
xor
rorl
notl
xchg
into
in
push
xor
cld
adc
outsl
xor
andl
dec
jmp
fbld
pop
lock
rcrb
add
sahf
ror
rcr
aaa
pop
mov
sub
fidivl
pop
mov
push
and
notb
pop
ficoml
fcoms
daa
aas
xchg
add
ja
fiadds
or
inc
push
xor
mov
insb
jnp
lods
insb
push
jmp
and
cmpsl
pop
mov
scas
sub
je
dec
out
dec
xor
and
dec
mov
in
pop
adc
fcoms
jb
aaa
push
lea
jmp
lock
mov
push
xor
jg
or
mov
dec
xlat
js
adc
es
inc
push
loopne
lds
or
jge
daa
mov
and
pop
repnz
sub
mov
adc
les
mov
add
loop
scas
rorb
fs
ljmp
pop
rcrl
pop
andb
iret
lock
push
dec
sbb
roll
cwtl
hlt
loope
lds
loop
ror
xor
mov
mov
add
mov
data16
mov
jo
ljmp
out
out
or
push
inc
mov
test
das
testb
lcall
lds
xchg
xchg
mov
adc
sbb
int3
insl
jno
pop
xor
add
and
add
lcall
mov
mov
cmp
pop
shl
out
and
je
pop
movsb
push
push
js
adc
inc
popl
push
lods
jbe
jmp
mov
push
and
popf
inc
adc
ja
pop
fsub
and
mov
cs
cmp
bound
loop
movsb
mov
outsl
dec
out
orl
das
icebp
push
fcomps
xchg
dec
or
dec
call
daa
in
rolb
jno
bound
loopne
and
sub
mov
test
faddl
jl
ret
ret
adc
scas
rcrb
mov
enter
jmp
sarl
addb
dec
cmp
rol
scas
mov
stos
lods
cmp
jmp
into
push
sarl
cs
popf
dec
add
lods
mov
and
stos
ds
cmp
or
dec
cmpsl
les
xchg
push
inc
out
jo
push
cli
ret
and
addb
int3
fbstp
xor
xchg
lret
xchg
lea
inc
clc
jg
sbb
mov
cmovs
cmp
pop
xchg
mov
lcall
adc
push
gs
jb
lcall
popl
jne
xchg
ds
test
dec
inc
bound
loope
push
lcall
dec
push
cmp
xchg
ljmp
and
dec
xor
cltd
xor
jl
mov
pop
jge
fistl
mov
decb
xchg
lcall
pop
add
push
add
push
stc
aad
movsl
scas
push
scas
sahf
lret
js
test
es
add
fsubrp
xchg
leave
add
mov
cmp
icebp
jmp
push
cwtl
fmuls
shr
inc
add
push
pop
mov
push
mov
loop
int3
or
mov
sub
fmuls
bound
and
lea
mov
xchg
sahf
daa
subl
cmpsb
test
aam
mov
jo
xor
fdivl
subb
xchg
aam
mov
add
and
mov
jl
incl
leave
cmp
nop
push
sub
or
cli
xor
jno
fsubl
imul
out
sub
aas
shl
sbb
add
gs
lcall
movsb
sub
add
ret
aas
je
sti
pop
fadds
shlb
dec
rcll
xchg
jne
dec
push
aam
ja
outsl
mov
xor
add
jb
jo
mov
shrb
rolb
rcr
dec
lock
leave
andl
popa
and
ret
faddl
push
out
xchg
jl
sub
cld
shll
in
mov
push
ja
pop
into
add
push
adc
sahf
and
pop
arpl
and
jmp
jp
pushf
xchg
adc
test
sub
sbb
fsts
inc
into
cmp
clc
jl
les
std
mov
out
pusha
call
cmpsb
cmpsl
inc
shr
add
dec
cmp
or
jns
pusha
mov
mov
or
cmp
cld
dec
xor
mov
mov
adc
cli
frstor
fildll
fsubrs
sbb
sahf
or
fstpt
pop
pop
dec
or
les
pop
mov
pop
outsl
sarb
pusha
aad
into
jl
mov
xchg
or
sar
push
lret
nop
daa
ljmp
mov
lods
cmpsb
outsb
sbb
add
fimuls
and
mov
imul
out
pminsw
sub
out
fwait
cmp
pop
push
clc
popa
mov
and
cmp
je
and
outsb
adc
cli
and
sub
imul
pop
aam
inc
sbb
into
mov
inc
adc
pushf
les
stos
stos
movsl
xchg
cli
and
mov
test
fildl
sbb
inc
loopne
pop
and
jae
cwtl
sbb
cmp
sti
sbb
mov
into
mov
mov
outsb
mov
inc
push
pop
xchg
test
add
call
adc
adc
push
push
sbbl
fbstp
inc
loope
addb
and
mov
and
test
fiaddl
inc
aam
push
and
js
in
mov
lock
or
sbb
pop
addr16
scas
adc
popa
sahf
or
mov
jns
mov
xchg
lret
sbb
adc
psubb
or
stc
test
insb
pop
lahf
mov
sar
pop
mov
adc
add
jmp
lret
cld
shrl
jp
andl
sbb
test
testl
sbb
lea
mov
out
pop
lahf
lcall
mov
and
dec
enter
fistps
rcl
pop
mov
ret
fwait
dec
sub
in
xchg
pop
gs
fnstenv
dec
in
rorb
mov
cmpsl
test
xchg
call
fists
lods
xchg
mov
or
subb
sub
mov
arpl
cmp
fmuls
add
inc
dec
ror
pop
clc
and
bound
and
adc
mov
xlat
shr
push
mov
aas
cmp
daa
scas
jle
cmpb
push
cwtl
sub
fildll
jmp
jmp
jnp
enter
adc
in
mov
fwait
mov
ret
pop
decl
adc
loopne
insl
adc
pusha
ds
ret
add
mov
sbb
pop
jl
sub
stos
inc
js
pop
mov
aam
xchg
stos
jl
test
out
pop
sbb
jmp
hlt
mov
dec
fadds
and
inc
adc
shrl
pop
fsubl
es
sub
mov
inc
jl
pusha
pop
and
inc
ret
pop
and
out
fidivs
inc
movsb
jle
pop
cld
sbb
push
negl
leave
mov
movsb
push
clc
in
sahf
push
fsubr
mov
pop
push
enter
int
insl
sub
or
fs
stos
jg
xchg
adc
pop
and
push
sbb
mov
mov
sbb
cmp
add
lods
push
xor
push
mov
adc
testl
test
dec
sbbb
or
pushf
ss
inc
mov
out
inc
lahf
sbb
insl
cmp
mov
loope
xor
push
xor
loop
adc
icebp
pop
sub
movsl
stos
test
sub
inc
jmp
add
and
call
pop
pushf
xor
xchg
rorl
mov
js,pn
movsb
sbb
add
mov
mov
sbb
fsubrs
jecxz
popf
xorb
adc
fdivrs
mov
mov
sahf
push
dec
mov
lods
jbe
or
cli
and
push
dec
sbb
inc
push
mov
in
mov
push
add
lods
das
sbb
jnp
test
scas
adc
fwait
arpl
inc
addb
jecxz
mov
mov
push
jp
adc
sar
mov
fildl
inc
inc
ss
nop
add
push
adc
jge
and
pop
xchg
sub
je
cmpsb
outsl
adc
push
push
repz
jo
sub
adc
dec
add
into
call
enter
push
mov
loope
pusha
fs
orb
cltd
sarb
ret
xor
fs
lods
arpl
inc
out
inc
cmp
mov
or
sbb
jno
or
inc
and
mov
inc
iret
ret
call
nop
repnz
xor
cli
and
loopw
inc
js
adcb
test
insb
adc
js
mov
add
loope
cltd
cltd
cwtl
dec
test
bt
jl
sub
in
inc
adc
sarb
sbb
xor
sbb
mov
and
add
cld
enter
popf
jl
xchg
xor
scas
push
jle
int3
pop
inc
outsl
stos
xor
in
mov
out
mov
rolb
mov
xorb
jnp
adc
xchg
cmpsb
insl
xchg
je
dec
mov
jmp
cmc
int
out
subl
jb
mov
aam
cmp
fistpll
iret
mov
mov
cmp
into
aad
and
pop
ds
push
rolb
testl
jp
enter
cld
scas
mov
mov
lahf
or
mov
arpl
mov
sub
call
push
sub
add
push
push
push
test
stos
dec
sub
pop
addb
adc
clc
or
fsubs
mov
ja
jnp
ljmp
cmp
and
adc
loopne
add
mov
xor
pop
dec
pusha
je
dec
push
out
inc
rorl
stos
inc
clc
popf
mov
inc
aaa
mov
dec
fwait
lods
notl
leave
ss
insl
adc
inc
add
fsubl
inc
mov
leave
scas
push
push
jno
arpl
xor
or
lea
push
sbb
xchg
add
add
dec
ja
rcl
popa
push
test
fisttpl
push
pop
mov
or
aas
cmp
xchg
les
inc
sti
adc
xor
cli
mov
push
cli
sub
jmp
stos
mov
sub
aaa
loopne
aas
int
adc
loop
ss
sbb
inc
cwtl
call
in
cmpsb
ljmp
inc
shl
push
dec
aas
jle
out
out
jne
pop
dec
hlt
mull
idivl
bound
int3
rcrl
push
xchg
adc
cmp
and
dec
dec
mov
dec
xor
mov
daa
jb
mov
mov
pop
inc
outsl
iret
icebp
dec
jnp
add
sahf
mov
aad
lcall
fsubp
or
mov
cmp
stos
stos
mov
cltd
repz
mov
pop
lods
fsts
ror
dec
xor
call
cmp
xchg
lock
lds
push
repz
pop
lret
dec
ss
lahf
roll
mov
dec
adc
sub
in
aam
jbe
jle
hlt
pop
mov
mov
and
push
lcall
repnz
pop
cs
and
hlt
pusha
cwtl
xor
aad
mov
and
sahf
sbb
adc
shrl
loop
arpl
sarl
lret
pop
pop
fdivl
inc
out
sbb
mov
jne
push
in
fwait
mov
jp
xchg
sbb
push
out
ret
push
sbb
xchg
in
ds
shl
mov
mov
inc
jg
mov
add
sub
xchg
mov
cmp
xor
clc
out
add
inc
ljmp
mov
out
or
in
adc
fiadds
lret
popl
loopne
pushf
loop
adc
jmp
mov
adc
jmp
fisttpl
adc
mov
sbb
int3
cmc
xor
pop
fwait
sbb
jbe
jg
hlt
inc
mov
dec
pop
add
sti
gs
mov
inc
dec
ljmp
mov
lret
dec
out
cmp
pop
sbb
cli
add
pop
and
lock
in
fcompl
lods
mov
ret
cmp
jp
or
pop
jno
sti
mov
test
jge
ljmp
add
push
in
jg
push
mov
mov
popl
adc
push
mov
add
mov
mov
dec
stc
inc
inc
clc
loop
cmp
pop
push
mov
mov
mov
pop
mov
ss
xchg
call
push
in
push
adcl
loop
push
pop
adc
xor
or
dec
jmp
mov
test
sub
lds
imul
push
sbb
push
cwtl
adc
xorb
or
pop
mov
sub
and
rorl
sbb
adc
cmp
test
dec
add
stos
hlt
inc
mov
mov
in
outsl
dec
cmp
cmc
cmpsl
xchg
sahf
jmp
shlb
cltd
rorb
les
aam
mov
inc
jb
rcrb
rolb
sbb
xchg
dec
adcb
xchg
add
mov
loopne
repz
mov
dec
add
inc
and
or
cli
popf
mov
ret
js
cli
cld
call
inc
ret
clc
xorb
mov
jg
adc
xchg
scas
add
push
mov
cmpsb
sbb
pushf
subb
mov
and
and
and
mov
leave
iret
frstor
push
cld
push
adc
sbb
add
int
mov
aaa
mov
fbstp
adc
ret
fucomip
stos
outsb
mov
inc
cmp
bound
mov
mov
adc
mov
test
push
rorb
adc
mov
jbe
mov
shl
fmuls
xor
dec
or
cmpsb
mov
mov
cmp
inc
mov
testb
inc
xchg
mov
dec
pop
cld
mov
repnz
cmp
arpl
adc
and
outsl
shll
mov
std
test
or
add
mov
push
push
adc
xor
nop
inc
sar
mov
cmovs
inc
clc
adc
push
js
js
cltd
dec
add
outsl
or
pop
daa
sub
mov
fldl
dec
cld
or
or
sub
and
push
aam
jns
out
mov
aam
bound
dec
lret
aas
shrb
enter
int3
andl
xchg
mov
cli
jge
push
dec
daa
xorb
movsb
fidivrs
or
pusha
loopne
cmpsb
je
sbb
push
and
inc
fbstp
xchg
in
or
xchg
push
jno
cmp
aad
adc
sub
mov
or
loopne
movsl
js
call
or
inc
pop
repnz
cli
push
sbb
test
inc
aas
sbb
fmull
lock
rclb
into
ret
fiadds
ret
call
inc
fcomp
repnz
mov
dec
pop
iret
pusha
jno
or
pop
lret
mov
sub
sbb
and
je
xor
outsb
dec
push
push
jle
sub
popa
xor
inc
sbb
xchg
fmuls
dec
push
mov
call
movsb
scas
dec
and
sarl
dec
frstor
inc
jnp
dec
mov
lods
mov
sbb
cli
bound
rorl
jg
addb
jno
sarb
xlat
sub
popf
rorb
push
ret
repnz
or
or
jl
mov
inc
lret
xchg
cli
mov
enter
jg
add
js
mov
loopne
fcomps
and
pop
mov
aas
rclb
fsub
movsl
or
xchg
cmp
sbb
cltd
and
xor
notb
cmc
rclb
inc
dec
cmc
pop
jb
outsl
xor
sub
pop
and
add
mov
ss
mov
loope
faddl
test
lds
push
pop
sbb
inc
add
hlt
bound
jb
jl
mov
scas
hlt
sub
mov
sbb
sub
add
xchg
or
jl
clc
add
mov
and
push
xor
xorl
repnz
or
sbb
pop
leave
mov
ljmp
clc
jno
insb
or
bound
jmp
jmp
sbb
xchg
into
mov
mov
andl
punpckldq
sub
mov
sbbl
or
jbe
jl
inc
test
rorl
stos
mov
jle
dec
ja
and
sub
cmp
sub
pop
testb
es
and
subl
xchg
and
test
jp
mov
inc
mov
repz
daa
aad
loop
sbb
and
sub
xchg
pop
vmovq
lea
push
shll
sub
adc
push
rorl
adc
and
add
je
shrb
shr
xor
push
inc
mov
cmp
iret
outsb
inc
xchg
push
ljmp
rorb
inc
mov
mov
sub
je
mov
stos
add
aaa
push
leave
mov
jecxz
cmpb
mov
je
rcl
or
out
adc
das
fsts
loope
inc
adc
leave
push
subb
adc
sub
test
iret
and
fisubrs
ja
sub
inc
pop
rorb
mov
sub
and
fnstsw
xchg
xlat
mov
cmp
pop
in
and
fsts
js
loopne
and
sub
sbb
push
gs
jnp
push
fsubs
push
cmp
sbb
scas
gs
rolb
cld
std
rcrl
pop
inc
ljmp
adc
push
xchg
push
cld
pop
xchg
add
aas
nop
cwtl
or
sbb
jmp
cmc
xchg
stos
add
sub
mov
mov
icebp
out
icebp
test
daa
out
push
add
cli
sbbl
mov
stos
push
xchg
push
xchg
and
mov
sbbl
out
in
movsl
pop
fimull
and
mov
and
iret
outsb
ret
mov
pop
mov
xor
cmp
push
std
add
lcall
lcall
in
vpsllw
fsubp
es
adc
out
add
xchg
mov
movl
call
int
loope
mov
push
out
pop
ret
push
push
sbb
mov
jp
lahf
mov
mov
pop
dec
mov
xchg
fimull
mov
ljmp
add
inc
xchg
div
data16
shll
jne
pop
stos
inc
mov
test
bound
jo
pop
add
pop
adc
cwtl
push
add
mov
jns
add
les
test
xor
cwtl
cs
inc
and
and
mov
in
xchg
rol
add
ret
lds
cli
pop
xor
ret
adc
sbb
stc
inc
js
sub
outsb
mov
xchg
out
nop
xor
nop
or
adc
pop
jne
inc
mov
int
xlat
test
ds
aam
test
popa
movsb
inc
dec
or
pusha
push
adc
xor
xlat
sub
jmp
cs
inc
std
push
mov
or
cmp
out
sbb
push
test
jno
imul
ljmp
repnz
jo
hlt
add
mov
jg
jae
hlt
or
xchg
iret
mov
jb
and
xorb
inc
or
pop
mov
jmp
scas
ret
aam
pop
test
popf
pop
dec
leave
pop
mov
int
sub
cs
jl
leave
inc
adc
jmp
scas
pop
pop
dec
pop
or
ds
data16
push
dec
jle
insb
push
nop
ljmp
testl
jne
adcl
in
inc
or
and
aad
movsb
cmp
jb
imul
les
xor
ss
decl
mov
add
add
scas
jp
pop
mov
fwait
inc
ret
cltd
test
push
dec
mov
jg
stc
dec
push
ffreep
sub
push
mov
cmp
out
xchg
jnp
mov
or
rcrl
dec
jl
mov
push
addl
pop
fcom
test
dec
sahf
cltd
lea
jg
fimull
insb
test
icebp
in
mov
pusha
and
insb
or
push
daa
mov
movb
jo
rcrb
repz
xchg
into
pop
adc
cmp
mov
subl
add
mov
fmuls
cli
enter
push
and
cmp
test
cmp
inc
in
add
out
jle
aaa
mov
or
stos
loopne
inc
rorl
xor
call
mov
ret
dec
fsub
push
lods
not
sbb
dec
ljmp
clc
loop
ljmp
icebp
imul
cmc
pop
push
jmp
jo
push
adc
jne
xorb
fs
jo
jp
in
jmp
inc
in
pop
add
adc
pop
add
movsb
adc
xlat
jp
xchg
in
xchg
mov
ja
jle
es
push
dec
lods
outsl
dec
arpl
pushf
sbb
xchg
test
adc
mov
lods
pop
push
mov
lock
aad
and
pop
mov
mov
imul
jp
scas
outsb
mov
js
lock
add
adc
dec
xor
jnp
cmpsb
iret
fsubrl
and
es
push
ret
adc
add
xchg
ret
imul
lds
mov
dec
xor
push
lcall
push
jnp
je
push
cmp
mov
sar
xchg
push
insb
push
sub
mov
xchg
ss
jmp
push
gs
jecxz
pushf
shll
mov
pop
mov
decl
and
loop
popa
leave
mov
sti
das
xor
inc
xchg
add
int3
xor
add
nop
popf
hlt
or
ja
movl
adc
shr
push
push
sbb
out
pop
mov
fildll
or
inc
jecxz
mov
aaa
cmpsl
cli
jo
in
xchg
push
add
cmp
clc
jp
aas
fisubrl
sbb
pop
push
or
ficomps
shl
jg
rcll
push
insl
and
jl
test
push
lcall
push
inc
mov
adc
shrl
jecxz
mov
add
lahf
cmp
das
inc
sahf
loopne
jno
jecxz
push
addl
fdivs
inc
cmp
lahf
and
mov
add
xor
sbb
pop
aam
aaa
ljmp
es
out
and
lock
inc
lock
pop
insl
jb
sub
bnd
add
sbb
cmpsb
dec
cmp
jmp
mov
sub
inc
or
mov
add
arpl
xchg
sub
ret
mov
xor
push
or
pushw
pushf
aaa
clc
xchg
dec
imul
cmpsl
add
mull
mov
push
les
aad
cmp
cli
lock
xchg
dec
sbbl
notb
sub
in
pop
pusha
push
mov
subl
stos
inc
mov
rcll
add
xor
pushf
je
xchg
loopne
fbstp
mov
fcomip
into
lret
gs
lahf
lock
test
pop
xchg
insb
addr16
adc
mov
icebp
push
lret
mov
and
sub
cmc
jmp
aam
call
neg
in
cli
mov
or
xor
sbb
adc
lods
mov
inc
xor
push
and
add
and
movsb
cmc
add
dec
jg
fcomi
aas
out
pop
mov
fiadds
ret
addb
bound
pop
imul
sbb
sub
aam
inc
je
out
fstpl
mov
nop
push
sbb
push
jb
xchg
push
xchg
jle
dec
sub
xor
rol
jmp
rol
adc
fstpl
iret
inc
fwait
mov
pop
sbb
jno
loopne
push
and
mov
xchg
sbb
int3
and
inc
or
pushf
and
imul
mov
add
mov
je
nop
sbb
mov
push
and
cmp
and
loope
hlt
jb
pop
lahf
mov
cmc
rcr
push
adc
lds
add
sbb
divb
test
fimull
dec
push
pusha
std
jo
loope
ret
pop
inc
loope
mov
fcomps
inc
push
dec
sub
push
push
adc
movswl
sbbb
in
adc
cli
push
clc
les
jmp
lock
sbb
mov
fisubrs
dec
sbb
popa
sub
loopne
imul
mov
jo
jg
xchg
movsb
add
cmpsl
cmp
sub
movl
loopne
push
outsb
lret
lcall
mov
mov
decb
in
sub
fldt
and
adc
ljmp
clc
in
je
cltd
xor
xchg
or
rolb
cmpl
cmp
or
mov
xchg
sub
mov
inc
jg
addb
rclb
jo
insb
popa
and
mov
cmp
mov
aad
lea
cmp
cmp
sbb
sub
mov
xchg
jb
fmull
sbb
test
cmpsl
pop
adc
xchg
xchg
cli
push
mov
in
push
push
pop
stos
test
jbe
mov
sti
sbb
mov
cwtl
insb
cs
es
mov
or
loope
pop
shll
inc
xchg
test
sbb
pop
mov
dec
sub
push
push
bound
in
xor
xchg
dec
sub
stc
test
mov
inc
loope
mov
jl
out
cmpb
xor
adc
sbb
cwtl
cmc
pop
mov
in
fsubr
iret
sbb
mov
hlt
add
cmp
in
sbb
jo
push
shlb
or
xchg
ror
xor
ret
xchg
sub
sbbl
nop
push
add
cs
jg
scas
push
xchg
mov
aam
lea
mov
mov
push
and
mov
je
orl
repz
mov
cltd
add
pusha
cld
lcall
adc
dec
popa
mov
cmp
xor
push
ja
xchg
add
mov
sbb
cmp
mov
cmp
push
dec
or
cmp
add
adc
sub
xlat
mov
cmp
mov
nop
push
inc
jo
xchg
sub
lret
or
xchg
loope
mov
dec
mov
and
pop
hlt
dec
add
mov
mov
adc
dec
orb
mov
inc
in
mov
fnstenv
imul
lret
bound
fistpl
insl
std
dec
push
jp
out
adc
movsb
rcr
jle
and
scas
mov
inc
jecxz
pop
out
adc
mov
mov
cli
loope
cmp
pop
mov
add
call
jp
sbb
adc
lods
shll
jge
insb
push
and
dec
clc
movsl
in
adc
mov
xchg
test
inc
adc
pop
push
test
pusha
test
shrl
fists
pop
cwtl
cmp
rorb
cli
out
xchg
add
je
testl
pop
mov
push
gs
mov
adc
pusha
push
inc
pop
cmp
pop
sbbl
sahf
lcall
add
shl
fwait
jp
dec
aad
ljmp
ds
mov
mov
in
mov
insl
outsl
sub
mov
mov
push
mov
mov
in
or
cmpsb
adc
mov
push
mov
cmp
cmp
stos
popa
cmp
rcrb
ljmp
sbb
shl
outsb
and
jo
push
icebp
push
or
xchg
or
movsb
addr16
add
cli
loopne
jne
test
xor
repz
sub
in
in
dec
rclb
push
and
mov
je
xchg
mov
and
adc
push
ss
adc
dec
out
push
and
push
xlat
and
pop
cld
pop
pop
adcl
xchg
xor
es
stos
sbb
mov
push
and
psllq
add
or
ljmp
mov
inc
test
push
addr16
xorl
orl
mov
pop
fwait
xchg
jmp
xor
fwait
add
adc
fwait
in
sbb
lret
cmpsl
xor
fcmovbe
inc
mov
hlt
mov
or
enter
insb
in
cmp
push
add
mov
in
dec
es
loop
std
ljmp
jecxz
sbb
xor
pusha
xchg
sti
cmpsb
outsl
clc
enter
cmp
icebp
in
xchg
pop
scas
xchg
sahf
lock
sbb
fs
inc
push
ljmp
aas
je
clc
out
pop
xchg
inc
jne
cwtl
mov
insl
xchg
shll
sbb
or
nop
jno
les
xlat
sbb
cmp
xor
shrl
and
test
cs
jns
lret
inc
inc
jg
inc
push
and
inc
fdivl
mov
jecxz
shlb
jbe
inc
bound
enter
adcb
mov
dec
push
cltd
xchg
push
pfacc
out
rcll
adc
pop
cs
sahf
scas
cmp
int3
adcl
jo
ret
daa
push
add
out
or
xor
mov
or
sti
or
sbb
add
bound
push
int
mov
push
push
jl
fmuls
xor
popf
gs
push
out
stc
stc
cmp
lcall
push
mov
inc
push
shr
lahf
and
rsqrtps
pusha
rdtsc
stos
std
sub
gs
sub
js,pt
popa
dec
out
sbb
loopne
lea
sbb
jne
pop
into
or
movsb
mulb
negl
mov
das
sbb
outsl
clc
bound
xchg
jecxz
mov
cld
adc
adc
cmp
jl
pop
sub
sbb
cs
and
mov
int
mov
mov
push
insb
add
sbb
popa
int
fcoml
addr16
mov
cmpsl
mov
mov
into
in
pop
jle
dec
xchg
rolb
mov
sub
aaa
cmpsb
scas
and
aaa
jle
pusha
mov
push
mov
cmp
mov
or
enter
ljmp
push
jnp
clc
enter
out
lret
lgs
inc
or
push
repz
xchg
add
mov
mov
push
jno
xorb
aam
inc
lcall
pop
pop
add
ret
adc
cmp
add
dec
rcll
lods
pop
mov
movsb
mov
mov
es
xchg
aam
mov
in
shl
and
pop
dec
or
jl
mov
mov
pop
xchg
pop
sbb
sub
call
scas
sbb
cmp
ret
std
rorb
call
xor
aam
aaa
or
cli
sbb
and
adcl
into
mov
inc
inc
std
insb
orb
jmp
pop
in
mov
test
adcl
shr
mov
testb
pop
les
jne
fcomps
cmp
add
dec
inc
cltd
aaa
mov
out
mov
sbb
fidivrs
dec
xchg
push
outsb
pop
test
int3
out
mov
push
sbb
dec
cwtl
xchg
sbb
inc
mov
cmpsl
xchg
push
cld
push
adc
cmp
cli
adc
data16
cli
sub
cmp
cmp
mov
cwtl
and
push
fsubl
sub
sbb
cwtl
push
cmovg
inc
dec
dec
mov
dec
add
pop
inc
xlat
dec
or
iret
dec
arpl
subl
in
add
sub
lea
mov
push
ss
or
xchg
fdivrs
mov
lods
shll
or
inc
add
sub
inc
loope
add
cld
test
or
sahf
xchg
dec
jns
mov
cmc
xchg
adc
and
in
movsb
sub
sbb
loope
ret
fists
push
sub
mov
insl
leave
inc
test
add
and
fsubs
fidivrl
pop
insb
pop
shrl
leave
cmc
push
jns
sbb
jl
popa
cmp
imul
pop
fisttpl
adc
add
jo
adc
pop
cmpsl
fcmovnbe
cmp
pusha
pop
test
jmp
movsl
popf
and
xlat
ret
mov
loope
pop
mov
jbe
inc
or
or
jnp
push
dec
jp
js
rorb
inc
fsubl
or
shr
cmp
sbb
push
mov
xor
inc
cs
jle
pop
jp
ljmp
and
sub
divb
pop
psubd
dec
scas
mov
out
jge
leave
lret
int3
cmp
aad
incl
add
out
cwtl
adc
sub
sbb
inc
pop
cmpsb
adc
mov
shlb
push
enter
mov
call
les
aad
xchg
dec
jle
mov
stos
jne
mov
test
enter
push
rorl
js
push
enter
xor
mov
fs
call
and
lea
insb
mov
or
ret
testl
sub
adc
sub
sub
int
pop
repnz
rcrl
cmpsl
pop
mov
pop
je
int
dec
lcall
popf
mov
call
and
push
lods
pop
push
in
imul
fldcw
and
cmp
bound
jb
test
lods
push
test
clc
mov
xchg
cmp
mov
mov
sub
inc
iret
or
xor
loope
test
repnz
push
and
jo
inc
add
push
xorb
and
xor
lcall
scas
je
jle
push
pop
push
jmp
test
nop
test
nop
test
xchg
mov
nop
or
movsb
mov
aam
inc
or
jp
jno
loop
cmpsb
fadds
int
inc
inc
iret
pushw
outsl
rcll
imul
add
jo
adc
loop
mov
jmp
dec
mov
xchg
insb
mov
xchg
mov
inc
cltd
pop
ffreep
add
mov
mov
inc
add
inc
pop
ljmp
or
mov
testb
imul
dec
ficompl
pop
icebp
bndldx
xchg
test
pop
stos
add
shl
andb
out
js
jecxz
sub
mov
ficoms
jle
insb
es
inc
fwait
jl
xchg
cmp
adc
dec
int3
push
lahf
lock
lock
push
sub
jno
daa
and
sbb
or
push
in
jl
dec
lods
inc
dec
data16
sbb
mov
xchg
fistl
cmp
inc
push
pop
mov
out
push
adc
xlat
insb
mov
test
rcrl
mov
add
jns
cld
jo
shlb
dec
and
out
das
jno
mov
cs
arpl
push
xor
inc
lock
movsl
add
and
scas
and
mov
cs
outsl
inc
pop
popa
rcrb
imul
js
aam
mov
mov
sbb
cmpsl
movsl
js
bound
outsl
mov
bound
add
or
add
loopne
loop
adc
pop
sbb
out
pop
call
sbb
ret
add
hlt
xlat
inc
fwait
test
mov
cmp
jl
jmp
xchg
iret
sarl
add
pop
std
add
dec
jge
inc
mov
adc
or
aaa
mov
jmp
out
rol
aad
pushf
psrld
scas
inc
jo
or
out
pop
inc
in
mov
cmp
decl
cli
cli
pop
and
jecxz
stos
test
std
les
aas
inc
testb
or
icebp
cmp
in
xor
jl
fcompl
out
xchg
jge
mov
push
fiadds
pop
inc
loopne
pop
cmp
test
sub
pusha
mov
and
call
and
push
iret
cs
add
sbb
adc
pop
xor
sahf
std
lods
or
pop
out
adc
dec
dec
and
mov
mov
or
je
or
dec
sbb
dec
cld
lock
shlb
out
rcrl
sarl
lods
in
lods
xchg
push
adc
dec
push
xchg
dec
aaa
sub
pop
rclb
lods
push
mov
lock
inc
fwait
adc
mov
cld
shl
mov
xchg
pusha
rolb
enterw
pop
pop
mov
jmp
and
lods
xchg
in
inc
mov
pop
pop
popa
shrb
shll
outsb
call
sub
in
sub
cmp
mov
add
jl
jmp
pop
das
insb
pop
lcall
inc
mov
push
inc
pop
adc
sub
jns
sbb
fdivl
or
lock
mov
stos
sti
pusha
ret
mov
lahf
adc
movsl
not
in
xchg
jne
push
dec
adc
shr
in
out
ljmp
jmp
sarl
xchg
sbb
aad
jle
mov
xchg
mov
inc
jmp
frstor
aam
mov
add
hlt
mov
mov
jp
lods
or
mov
lret
sahf
cltd
mov
cmp
stc
loop
test
pop
insl
sbb
out
xor
push
add
loopne
aaa
jge
jbe
xchg
xchg
xchg
inc
subl
mov
push
push
mov
loop
test
or
pop
or
cmp
mov
pusha
jno
mov
dec
and
lcall
add
out
sub
decb
jle
fstps
dec
inc
pusha
push
lds
mov
jnp
fs
loop
push
jo
sub
addb
hlt
nop
sti
clc
test
xchg
and
das
dec
xchg
test
pusha
cld
ljmp
mov
testb
cmp
ja
jg
rol
scas
test
push
xor
cmp
xor
test
jns
pop
add
in
in
roll
mov
xor
ficoml
int3
movsb
mov
xchg
outsl
xchg
cmpb
push
push
push
jge
rcll
dec
clc
lds
push
and
mov
jecxz
push
add
fucomp
and
and
cmp
or
add
pop
shlb
adc
cli
movd
jbe
mov
repz
push
xor
xor
aaa
add
popl
cld
sarl
add
test
push
inc
cmpsb
and
mov
xchg
cwtl
outsb
hlt
cld
pop
sahf
mov
dec
mov
in
xor
mov
cltd
hlt
daa
test
pop
cmp
xchg
jo
mov
lret
scas
push
xchg
xlat
incb
mov
xchg
test
xor
cmc
xchg
js
dec
inc
xchg
pop
add
adcb
jmp
pop
xchg
xor
xorb
xor
sub
rorl
cmpsl
icebp
out
fcoms
cmp
add
inc
adc
xchg
lock
adc
mov
mov
jmp
sub
in
cs
call
lods
in
sub
pop
rcrb
or
push
pop
std
sub
cld
call
or
stos
mov
aaa
inc
fwait
inc
sub
or
aas
shlb
mov
sbb
cs
xchg
fcomp
fwait
add
or
shl
adc
mov
fdivl
mov
push
or
mov
pusha
or
mov
test
outsl
xchg
fildl
data16
pusha
mov
jg
inc
add
sbb
dec
mov
mov
leave
jne
lcall
jmp
aaa
sub
fs
mov
pushf
loop
loope
fcoml
fldenv
push
pusha
cwtl
jge
test
ss
fidivs
jmp
jb
dec
dec
xchg
pop
and
push
sarb
clc
lds
outsb
cli
shlb
mov
or
xor
dec
push
pop
add
pop
jmp
mov
nop
and
loope
mov
mov
mov
dec
je
insb
repz
lods
push
mov
push
fwait
mov
in
test
call
jle
inc
and
jle
shrb
aaa
add
sbb
outsb
cs
test
out
add
lret
movsb
inc
push
scas
mov
mov
incb
clc
cwtl
test
roll
sbb
dec
sahf
out
add
add
clc
inc
dec
push
pusha
roll
pop
mov
dec
cmp
xchg
dec
mov
adc
mov
fimull
lret
mov
push
xchg
pusha
movsb
incl
subb
js
sbb
aam
jecxz
sbb
pop
je
orl
and
pushf
sbb
je
int3
std
lds
and
fimuls
pusha
or
inc
mov
mov
pop
or
or
js
pop
rclb
jp
pop
xchg
push
loope
mov
add
clc
adc
sarb
scas
adc
adc
mov
imul
test
out
inc
in
subb
inc
push
shlb
push
push
es
pop
or
pusha
adc
dec
das
xor
idiv
cli
jmp
jmp
push
fwait
add
rclb
mov
into
lock
sbb
dec
leave
mov
sarb
and
push
push
test
pushf
jle
inc
push
pop
push
popa
loop
push
mov
mov
cli
mov
rcl
and
adc
xchg
push
sbb
rcrb
add
inc
cmp
in
dec
inc
dec
dec
xor
fdivl
push
cmp
and
or
add
call
add
aas
jbe
or
or
mov
dec
sbb
sub
in
out
fstpt
icebp
int
and
sbb
and
ret
adc
dec
adc
push
leave
sub
rclb
scas
sbb
out
mov
dec
mov
push
hlt
bound
and
push
jmp
insl
mov
jae
lahf
and
push
mov
hlt
leave
adc
and
mov
bound
je
jo
and
mov
mov
and
add
add
sub
fisttpll
and
cs
pop
outsl
dec
sbb
push
pop
push
pop
jp
mov
cmp
inc
add
sti
mov
fwait
push
mov
inc
out
lret
mov
mov
jp
js
and
mov
ds
dec
inc
std
jl
cli
push
gs
sahf
nop
sti
add
popa
pushf
cli
xor
movsb
lahf
fstps
js
sbb
add
push
es
and
ret
in
sahf
test
mov
jne
andb
int
mov
push
pop
cltd
add
mov
jbe
sahf
adc
xor
ljmp
push
subl
sub
movsb
jl
clc
ret
pop
pusha
pop
lods
cwtl
pusha
hlt
mov
mov
mov
std
lock
push
xchg
jo
mov
stos
add
imul
mov
hlt
adc
and
sub
subl
test
or
add
fmull
shl
or
das
jmp
add
mov
inc
mov
stos
mov
cmp
out
push
iret
sbb
xchg
rcrb
sub
faddl
mov
mov
inc
pop
jge
fs
es
sarl
pushw
std
dec
cmp
push
stos
push
xchg
cmp
bound
sub
lock
sbb
sub
cmp
sahf
aam
loop
add
cmpsb
cmc
pop
in
cmpsl
and
or
mov
and
shrb
int3
mov
lods
pop
and
jo
add
mov
mov
lods
xor
dec
and
sbb
sarb
adc
shrb
cmp
subb
add
loop
mov
fstpt
call
pop
inc
rolb
dec
in
sarb
mov
clc
aad
ljmp
inc
mov
rcr
mov
arpl
cli
or
jl
add
mov
or
inc
xchg
fdivl
dec
push
push
push
xchg
inc
test
push
rcrl
rorb
inc
pop
int
dec
ret
mov
test
jp
sub
mov
fs
incb
push
mov
adc
sub
push
nop
sbb
sub
je
mov
gs
adc
xor
or
mov
mov
jae
lret
inc
lds
les
mov
sbb
test
addr16
pushl
add
orl
daa
jnp
xchg
mov
cld
xchg
pop
push
jae
cmc
push
add
add
out
pop
pop
fstps
shll
stc
push
ljmp
incl
rcl
lods
daa
orl
pop
sub
and
mov
mov
push
andl
mov
sbb
dec
dec
mov
jno
arpl
cmovl
iret
imul
cmp
scas
jl
cmp
cld
fiadds
repz
ds
adc
and
add
cs
data16
stos
call
loope
mov
loope
repnz
jg
push
mov
mov
xchg
int3
or
mov
stos
mov
jp
and
jle
mov
cmpsl
pop
mov
xor
fimuls
push
jmp
movsl
les
enter
push
js
retw
mov
push
pusha
das
sbb
sub
sbb
es
ljmp
repz
les
in
push
dec
push
hlt
ficoms
adc
xor
adc
xchg
pop
push
sbb
push
or
add
daa
xchg
cmp
scas
mov
inc
add
pop
insb
push
push
sub
fcomip
sbb
mov
cwtl
das
dec
adc
push
aaa
adc
pop
sbb
sub
mov
sahf
dec
aam
cli
push
add
pop
mov
imul
es
jo
adc
in
dec
or
jbe
mov
loop
sub
xor
pop
adc
sbb
cmp
test
out
fildl
ljmp
data16
lcall
pop
inc
pop
cmpsb
fisttpll
add
and
adc
repnz
sub
sbb
inc
and
push
and
xchg
bound
cmp
pop
and
add
arpl
lods
or
xlat
pop
cs
or
mov
loopne
daa
mov
push
jbe
or
movsb
adc
pop
in
iret
clc
inc
inc
add
dec
mov
lock
arpl
repnz
mov
decl
mov
ljmp
pop
shlb
enter
sub
ret
sub
out
ror
mov
aaa
xchg
or
push
movsb
icebp
es
pop
xor
test
lock
mov
mov
mov
clc
or
jo
push
pop
mov
repnz
roll
es
mov
add
jo
sub
aas
int
pusha
mov
pop
in
mov
lods
roll
pop
xchg
nop
sarb
pusha
dec
pop
out
or
loopne
dec
lret
mov
jmp
xchg
gs
pop
or
dec
arpl
js
lea
adc
mov
adc
cmp
add
cli
inc
sbb
or
mov
js
insl
push
rcl
mov
rolb
int3
repnz
jle
les
xor
mov
mov
mov
inc
into
ss
movsb
sub
pop
push
adc
addr16
pusha
lahf
scas
incb
mov
xchg
clc
ret
imul
push
fwait
test
lds
and
faddp
pusha
xchg
fimull
or
lahf
fsubs
popa
test
cmp
sbb
fdivrp
pop
dec
shl
jae
jbe
lock
nop
aaa
test
dec
add
nop
dec
popa
rolb
cli
xor
cmp
cld
jno
jmp
sbb
xor
jle
push
maskmovq
negl
sbb
jge
xchg
adc
lock
icebp
cmp
mov
test
mov
fisubrl
clc
pop
rclb
pop
xor
jmp
push
cmpl
add
cli
push
jnp
and
sub
popa
sub
sub
hlt
mov
movsb
sub
mov
popa
test
xchg
mov
push
cmp
sub
xor
jecxz
js
pop
fisubs
sbb
into
pop
js
rorl
lret
in
mov
cwtl
sub
sbb
xchg
in
movsl
sbb
push
ret
es
xchg
jb
dec
fsts
jo
and
loopne
ret
mov
sbb
dec
enter
dec
jle
cmp
pusha
mov
lods
push
adc
cmp
lret
das
inc
scas
xor
test
in
xor
pop
cmp
sbb
roll
and
or
cld
rcll
sub
mov
pop
mov
enter
cmp
popa
addl
mov
repnz
add
sbb
pushl
jae
adc
xchg
mov
jge
stc
divps
xchg
push
add
push
jg
stc
xor
mov
sub
or
mov
lock
shlb
and
ffreep
xor
mov
shrb
pushf
dec
mov
push
scas
cmc
mov
imul
adc
popa
jns
and
stos
mov
mov
mov
jecxz
and
push
ja
fnstenv
inc
mov
sbbb
dec
inc
scas
orb
mov
push
xor
daa
push
push
mov
mov
shrb
push
xor
addr16
fdivrs
push
into
or
sbb
adc
cld
sbb
push
enter
imulb
aas
ret
lret
sbb
push
mov
inc
mov
pusha
clc
cltd
out
cmpsb
test
fstps
adc
sbb
icebp
inc
hlt
inc
push
add
test
scas
jns
scas
test
inc
xchg
mov
xchg
push
cs
in
dec
mov
push
push
pop
lret
fistpl
loopne
jp
sbb
fs
call
mov
jge
xor
cwtl
sub
pop
jo
inc
pushf
adc
sarb
lds
mov
int3
or
cld
dec
loopne
or
pop
icebp
fcmovnbe
pop
popf
movsb
adc
push
fwait
loop
unpcklps
jp
cmc
sbb
lcall
add
push
addr16
push
dec
insb
jl
fisttps
mov
aam
test
push
insl
inc
mov
fisubrs
testl
outsl
sbb
enter
sbb
add
sub
leave
stos
inc
insl
xchg
insb
adc
mov
call
gs
inc
push
mov
lods
fnstenv
insb
inc
sub
cs
push
ss
sub
inc
cmp
pop
sub
mov
cmpsl
fstl
in
mov
ljmp
popa
sbb
enter
es
sbb
je
pop
pop
aas
sbb
jle
movsl
popa
or
pop
mulb
shll
mov
fwait
jb
push
negl
sarb
cmp
sbb
pop
stos
xchg
mov
sub
xorb
ds
divps
stos
mov
scas
pop
nop
lds
jmp
inc
je
mov
out
enter
addr16
stc
paddusb
js
ja
mov
es
aad
add
pop
je
push
nop
push
or
jne
xchg
jns
adc
fcompl
icebp
xchg
test
cwtl
inc
pop
sbb
adc
outsl
aam
jl
aad
push
out
lcall
lods
cltd
push
loope
adc
mov
ret
divb
xorl
notb
pop
shlb
sub
test
mov
rcrl
fisubrl
mov
pop
mov
aaa
popf
mov
adc
fisubl
movsb
mov
add
imul
ret
test
call
out
mov
xor
mov
cmpsb
aad
xor
dec
out
mov
xor
fidivrs
movsb
fldt
in
dec
aam
rorb
adc
xchg
mov
push
push
lcall
adc
inc
js
rcr
es
push
js
das
fstpt
sahf
inc
mov
cld
mov
popf
sbb
outsl
cwtl
dec
mov
mov
jnp
pop
pop
hlt
mov
push
push
xchg
pop
mov
fwait
add
xchg
dec
xchg
pop
popa
mov
int
insb
or
push
add
sub
push
adc
mov
bound
insl
es
adcb
inc
pop
aam
add
xor
and
ficomps
icebp
push
or
add
mov
roll
aaa
push
fcmovnu
adc
not
pop
test
mov
lods
rolb
sbb
mov
jle
aaa
push
lea
or
ss
adc
cmp
inc
push
adc
cmp
imul
push
adc
push
mov
inc
and
mov
insl
aam
inc
pop
mov
dec
jecxz
push
imul
add
inc
out
ja
inc
xor
or
sahf
push
cmpsb
pop
sub
gs
loop
icebp
stc
xor
loopne
cmpsb
fistps
jnp
cmpsb
sbb
pop
mov
sti
cmpb
sbb
clc
mov
dec
xchg
jl
stc
clc
inc
jns
scas
sbb
sar
pop
out
leave
push
jmp
les
cmc
sbb
jo
sub
push
insb
push
xchg
test
xor
loope
shrl
addl
iret
sub
test
inc
or
jno
jbe
xchg
hlt
arpl
mov
es
repz
mov
mov
inc
sub
sbb
aam
mov
inc
es
fmull
inc
paddsw
xchg
jecxz
pushf
dec
push
shrl
pop
adc
jo
pushf
or
adc
inc
icebp
icebp
adc
inc
push
fsubl
push
icebp
cmc
cld
pop
shrb
push
nop
xchg
js
mov
andb
mov
sub
popa
ss
push
mov
push
hlt
adc
fsubl
iret
jo
xor
xchg
ljmp
andl
xor
popf
mov
popf
dec
jg
pop
xchg
adc
xorb
ljmp
repz
jbe
inc
adc
pop
bound
push
fstps
clc
sbb
loop
xor
xchg
push
enter
push
inc
xchg
push
sarb
inc
pusha
sahf
jbe
inc
nop
pop
mov
popf
push
mov
lods
sub
jae
xchg
xor
call
adc
cli
pop
ljmp
insl
repz
in
icebp
pop
mov
loope
mov
or
pop
mov
mov
mov
rol
sbb
mov
jnp
sbb
cmpsl
shrl
push
scas
push
lahf
jp
push
hlt
enter
pmullw
push
xor
pushf
cltd
add
inc
xchg
call
mov
out
mov
inc
inc
add
cmp
and
loop
xchg
mov
mov
mov
fidivrs
xchg
and
and
mov
out
mov
cs
imul
ret
push
xchg
ret
pop
insl
mov
shr
movsb
stos
nop
sub
ljmp
xchg
add
lds
mov
cmpsl
mov
sbb
cmpsb
je
mov
loopne
pop
pop
and
adc
adc
faddp
fistps
decl
or
dec
and
adc
shlb
fsts
adc
jnp
rcr
jecxz
xor
add
xchg
pop
pusha
dec
cmp
fistl
sub
mov
xchg
lock
clc
pop
inc
cmp
pop
inc
cmp
in
movsl
sbb
dec
mov
es
js
ret
inc
nop
mov
xchg
shll
push
inc
mov
das
or
scas
add
ds
scas
imul
xor
movsb
mov
cmp
sarb
shlb
decb
scas
push
mov
mov
sbb
in
les
jb
ficomps
fnsave
test
add
inc
ret
adc
push
inc
stos
or
in
mov
jmp
movb
pop
mov
inc
pop
add
xchg
pusha
jg
add
push
addb
sbb
out
dec
lret
or
xchg
xlat
jmp
push
mov
add
test
mov
or
or
insb
pop
rorl
sbb
push
jecxz
aam
lods
out
pop
sub
shll
cltd
push
mov
xchg
and
stc
jge
ss
lods
test
nop
mov
shll
shl
jp
or
add
or
ljmp
clc
jne
aaa
mov
mov
mov
and
mov
dec
stos
pop
inc
stos
mov
leave
adc
clc
lahf
sbb
add
xor
test
dec
pop
add
add
insl
out
cltd
repnz
std
stos
push
push
sub
ja
cli
pop
jbe
pop
and
sub
aas
adc
nop
aaa
dec
sbb
int
add
int
adc
mov
rcrl
pop
dec
cmp
push
mov
aad
jle
call
cmp
and
daa
out
or
xchg
mov
pop
in
mov
xchg
lock
mov
push
test
pop
lock
push
dec
into
mov
xchg
shl
jmp
rcrl
daa
decb
arpl
mov
aad
clc
loopne
cmpsb
jp
cmp
out
add
mov
xchg
outsl
movl
xchg
ljmp
cli
nop
and
cmpsb
insb
pop
ljmp
add
jns
inc
push
data16
push
clc
dec
mov
mov
mov
mov
sbb
xchg
stos
adc
push
out
and
adc
insb
loop
enter
test
sbb
adc
into
insb
sbb
adc
jp
inc
add
data16
mov
dec
sar
ss
ds
jns
sbb
mov
std
test
outsb
mov
fstl
icebp
sbb
aaa
pop
shrb
mov
mov
pop
sbb
in
jge
jmp
rolb
mov
and
fucomip
mov
xlat
jle
push
outsb
cmp
adc
xor
mov
add
mov
cs
xchg
cltd
or
psllq
mov
icebp
cmpsb
push
inc
mov
add
or
sub
ret
test
or
lret
clc
scas
cmp
imul
cs
sbb
popa
pop
imul
push
addb
push
mov
xor
fdivrs
and
mov
ret
dec
psllw
notl
pop
pop
subb
jmp
int3
and
push
repnz
ss
adc
sub
xor
adc
dec
push
dec
xor
data16
mov
jne
nop
pop
popa
lahf
lock
mov
popl
xor
loop
test
pop
test
daa
add
pushw
loope
mov
enter
jp
loope
adc
in
cmp
sub
in
fcmovbe
jbe
insb
xchg
mov
cmpb
sbb
add
pop
push
push
add
xor
add
in
jne
cwtl
sub
xchg
sbb
cmpsl
inc
xchg
imul
test
jl
add
add
mov
mov
repnz
mov
nop
mov
adc
xchg
in
out
rolb
inc
push
mov
aas
lods
dec
std
push
lahf
inc
cmp
push
lock
pop
adc
xchg
mov
jo
sub
out
inc
cmp
ja
or
lock
add
jno
cmp
mov
jmp
pusha
ljmp
outsb
jle
out
insl
cmpsb
arpl
lods
pushf
mov
mov
inc
xchg
neg
adc
mov
cltd
fs
or
cmp
sarb
sbb
pop
ljmp
lea
push
or
sub
hlt
pop
test
pushf
clc
adc
mov
icebp
lods
fwait
fs
outsb
cmc
mov
push
fwait
addl
aam
add
sbb
pop
lods
pop
js
cmp
shlb
xchg
inc
dec
push
pop
cwtl
xchg
push
lcall
fwait
xchg
jae
add
cs
push
xchg
fwait
dec
adc
repz
mov
inc
mov
adcb
je
pop
rorb
add
add
mov
loop
cli
adc
fs
sbb
mov
dec
mov
xchg
outsl
mov
scas
xor
nop
repz
fsubs
cmc
bound
fdivs
jp
xchg
movb
xchg
xchg
xchg
test
aaa
dec
cmpsb
pusha
pop
sub
pop
adc
insb
fbstp
pushf
and
add
mov
mov
test
ret
enter
paddusw
ret
idivb
les
aaa
cmp
adc
mov
hlt
adc
aas
mov
mov
mov
shrb
call
sbb
fst
out
ljmp
xbegin
in
dec
dec
pop
or
mov
pop
stc
out
and
lcall
fmuls
hlt
iret
cmpsb
mov
push
loope
cmp
nop
lods
jecxz
push
ss
mov
or
add
mov
inc
push
stos
mov
sahf
clc
push
push
out
xchg
adc
test
push
sub
inc
bound
mov
sbb
loopne
test
inc
psllw
mov
aam
add
repnz
cld
ss
pushf
nop
mov
push
in
or
cmp
idivb
loopne
jg
and
sub
mov
test
orb
mov
cld
aaa
lcall
jno
inc
cli
stos
fnstenv
repnz
in
mov
out
hlt
sahf
inc
testb
je
jmp
orb
inc
int3
fsubr
mov
loope
andb
sbb
pop
dec
and
fisttpl
pop
es
loop
adc
xor
cmp
xchg
adc
mov
push
jo
mov
out
jns
stos
xlat
or
pop
mov
movsb
mov
nop
inc
cwtl
sbb
xor
or
mov
push
xor
sub
std
lods
outsb
mov
xchg
sub
xlat
ss
movsb
repz
mov
ljmp
cmp
dec
xchg
pop
mov
movsl
scas
jle
je
jle
mov
mov
outsb
push
jp
lock
sbb
rorl
call
inc
xor
in
and
push
nop
jp
add
in
add
fcomi
mov
pop
mov
call
imul
xor
cmpsb
icebp
sbb
insl
push
pop
fwait
out
test
repnz
in
xchg
or
inc
lds
lret
leave
les
mov
cld
call
mov
mov
mov
add
fsubl
sub
outsb
inc
inc
sbb
sub
cmc
fistps
sbb
jbe
inc
adc
xor
testl
and
daa
lock
mov
jbe
mov
add
test
imul
pop
push
fxsave
mul
pop
mov
imul
adc
dec
sti
hlt
lahf
push
outsb
shrb
test
pop
cwtl
fadd
push
sub
daa
enter
inc
rorb
add
jae
mov
and
xor
sbb
pop
aad
sbb
inc
push
out
inc
das
mov
and
jp
inc
dec
test
lock
loopne
aaa
loop
divb
pop
cltd
insl
arpl
lock
sbb
sbb
pop
or
jb
out
inc
addr16
adc
pop
mov
mov
or
in
pop
sarl
aam
aam
ret
mov
loopne
cmp
jbe
adc
insl
sub
das
pop
mov
ror
xor
pop
dec
xchg
outsb
loop
imul
std
mov
call
es
or
mov
dec
mov
in
pop
rorb
mov
call
mov
dec
in
leave
cmp
incl
push
mov
mov
test
cmpps
orb
xchg
int3
bound
inc
lock
and
es
pushf
mov
add
dec
add
popf
add
fsubrs
xor
and
hlt
data16
and
dec
mov
inc
fistl
mov
sub
push
inc
rcl
icebp
ds
int3
ret
xorb
pop
adcb
rorb
loopne
cwtl
inc
adc
pop
in
push
and
mov
lea
cmpsb
pusha
pop
shll
and
dec
xlat
xchg
decb
lods
stc
outsb
aam
push
in
mov
sbb
sbb
add
and
add
into
sbb
fld
ds
fisubrl
popl
pushf
or
xor
pop
xor
ret
jecxz
fs
dec
dec
fwait
loopne
sbbb
pop
fimuls
filds
lea
xor
insl
mov
call
push
push
xchg
mov
dec
test
adc
pop
test
in
lret
push
dec
loopne
xor
push
inc
pop
loopne
xchg
dec
cmp
call
nopl
sbb
in
ljmp
aad
clc
adc
ja
js
jne
jne
jbe
je
or
outsb
dec
inc
sbb
pop
jl
dec
xlat
dec
repz
js
pop
add
mov
mov
je
jo
pop
jmp
mov
ljmp
push
aam
push
stc
fs
daa
pop
xlat
sbb
inc
arpl
pop
fadds
test
mov
cmpsb
push
xor
in
sub
inc
arpl
leave
cmp
or
sub
mov
adc
cmpsl
adc
or
cli
inc
xlat
mov
xlat
mov
mov
imul
xor
cmp
rcr
push
fdivs
adc
sub
cwtl
test
jo
inc
pop
xchg
add
cmp
adc
cld
arpl
sbb
cmpsb
mov
aam
pop
jg
add
mov
ffree
mov
dec
out
pop
inc
cmp
jo
sbb
dec
jg
sbb
xchg
push
sbb
lcall
int
sbb
movsl
cs
add
outsb
outsb
push
inc
jno
adc
inc
inc
lods
push
lea
ljmp
mov
cmpsb
xchg
popa
nop
mov
gs
in
daa
lcall
arpl
pop
ror
bound
sbb
push
div
push
push
ljmp
dec
sbb
enter
cmp
subl
xor
rorl
or
aaa
leave
pop
jle
mov
div
int
test
cwtl
jl
sahf
mov
call
mov
gs
les
je
into
inc
pop
scas
xchg
sub
mov
add
jmp
xor
repz
loop
and
fildl
cmpsl
insl
ss
adc
dec
bound
cld
test
loope
and
jmp
cmpsb
or
push
data16
xchg
js
stos
push
and
jp
aas
adc
in
gs
pop
adcb
fstps
je
aaa
lcall
jg
pop
cld
dec
adc
shlb
pop
popa
and
pushf
inc
xchg
mov
insb
fwait
mov
sbb
cmpsl
jge
adc
fildll
adc
mov
inc
push
or
pop
js
mov
loope
int3
es
cwtl
and
pusha
adc
js
inc
adc
or
dec
lret
xlat
pop
rcrb
inc
push
pop
cwtl
jne
xor
lcall
pop
xor
push
mov
push
jmp
dec
in
mov
xlat
jbe
or
mov
adcl
sti
fcmovb
aas
or
and
or
in
addl
or
add
cmc
mov
inc
fildl
jge
call
testb
sbb
out
out
mov
mov
lahf
jnp
pop
jl
cmp
lea
insb
add
pop
or
lret
dec
clc
mov
add
push
int
xor
and
in
push
test
in
js
and
jp
aad
pop
and
ret
mov
sub
or
das
lahf
cmpl
stos
mov
cmp
add
shll
xchg
xor
xchg
jb
add
test
movsb
fsub
and
add
mov
pop
and
push
test
inc
dec
dec
adc
mov
rorl
dec
ret
decb
lods
in
add
iret
sarl
out
sub
xlat
inc
add
mov
mov
cmpsl
mov
jnp
data16
xchg
or
inc
rol
std
mov
stos
cltd
dec
pop
add
xchg
or
ss
mov
adc
pop
movsb
xchg
shl
insb
adc
arpl
mov
iret
leave
cltd
cltd
subl
push
xchg
insl
je
dec
sbb
adc
inc
push
rclb
test
repz
cmc
xchg
push
scas
dec
adc
adc
rolb
sbb
mov
int
sbb
inc
adc
or
inc
mov
sbbb
daa
pop
rorb
lock
ret
xor
sub
fldenv
iret
jne
es
mov
sbb
jg
lock
les
mov
push
ja
xor
mov
ret
mov
inc
jecxz
jle
ret
pop
call
xor
ret
mov
loop
repz
push
jne
js
xor
push
cmp
call
loope
adc
xchg
cmpb
inc
adc
aaa
or
push
push
nop
filds
adc
sbb
scas
add
cmc
popa
lock
mov
shlb
fiaddl
icebp
out
inc
lods
cmp
sub
sar
inc
and
fidivrs
add
call
outsb
mov
add
in
loop
mov
dec
adcb
mov
or
cmc
mov
movsl
js,pn
cmp
int3
jno
test
or
mov
ret
in
inc
mov
fmuls
inc
add
adc
cmp
push
repnz
mov
jp
mov
jne
mov
lds
lock
inc
jp
sub
pop
add
push
in
sub
sub
call
pop
mov
subb
mov
rorl
imulb
shr
iret
jbe
jae
sub
out
fcoml
in
shlb
push
adc
dec
sahf
rcrb
cmpsb
fwait
lret
fildll
push
data16
mov
mov
aad
cli
mov
aad
mov
inc
mov
sbb
xor
addb
sbb
pop
rcl
inc
sub
push
icebp
scas
jmp
test
pop
sbb
test
sub
mov
jge
push
dec
repnz
cmc
fbstp
adc
sahf
and
sub
data16
pop
push
pop
mov
inc
call
andb
ret
in
mov
or
jbe
adcb
pop
decl
cli
cmp
push
lea
orl
push
pusha
push
stos
fiaddl
or
mov
pop
pop
mov
push
xchg
aaa
mov
in
movsb
clc
es
add
outsl
xor
pop
xchg
or
sbb
ss
and
dec
add
test
add
adc
cmp
in
iret
add
push
mov
imul
or
pop
pushf
dec
jmp
jb
ret
fdivs
mov
push
jmp
pop
iret
inc
test
roll
cmp
xlat
sub
ret
arpl
add
xchg
aaa
pop
jge
mov
orb
scas
sbb
or
testb
sahf
fwait
push
xorb
icebp
outsl
push
mov
xor
or
mov
sub
xor
aas
mov
sbb
pusha
push
jo
hlt
nop
xor
fmull
jmp
push
jecxz
lcall
orl
inc
js
cltd
push
cmp
call
push
lock
push
fdivrs
push
outsb
cmp
xor
sbb
or
inc
push
jg
mov
mov
addr16
pop
sar
enter
pop
nop
push
insb
sub
jp
and
je
mov
stc
mov
in
inc
push
or
rorl
sbb
cld
loope
dec
pop
jecxz
nop
pusha
or
movaps
lods
test
adc
in
push
sbb
sub
sbb
inc
fs
and
inc
insb
sub
mov
jns
xchg
push
incb
and
lret
xchg
nop
push
test
fs
and
push
mov
mov
add
movb
xchg
ja
lods
test
lods
sar
push
mov
mov
inc
xchg
xchg
add
cmpsl
or
push
cs
lods
addr16
les
mov
or
pusha
ret
aaa
insl
movb
lret
mov
mov
enter
fldlg2
mov
in
aas
push
jbe
adc
outsb
pusha
lock
fiadds
pop
out
jo
subb
inc
data16
outsb
cmp
cmpsl
dec
pusha
jmp
ja
jp
xchg
sahf
mov
pop
push
test
lcall
fisubrl
test
sbb
movsl
rorb
int3
adc
movsb
and
fisubs
mov
loop
mov
adc
lret
iret
xor
ficoml
pop
mov
pop
dec
test
outsb
add
sub
xor
sbb
push
sbb
loopne
jge
mov
or
cmp
mov
movsl
mov
push
sub
cmp
push
mov
ds
sub
sbb
push
out
adc
add
fstl
icebp
and
or
in
jle
inc
movsb
addb
pop
clc
or
sbbb
fimull
or
cltd
mov
cld
xchg
add
adc
xchg
fcoms
add
mov
jg
and
mov
dec
int3
add
repz
jns
mov
pop
cmp
es
push
shrl
inc
idivb
ret
dec
out
shlb
icebp
test
out
dec
push
fsubrs
cli
or
cltd
sub
clc
lcall
xchg
lea
pop
dec
scas
das
add
mov
sub
dec
mov
lcall
add
fst
add
jae
push
or
push
xor
clc
adc
cmpsb
and
jae
push
ja
pop
xor
add
push
mov
cli
dec
mov
push
inc
or
lcall
aaa
pop
push
push
xor
sub
push
hlt
xchg
iret
out
mov
mov
jecxz
dec
push
mov
push
pop
ror
push
add
add
inc
xchg
les
sbb
aas
cli
inc
stc
adc
adc
loope
dec
repnz
jo
clc
mov
cmp
xchg
add
sbb
cmp
xor
mov
cmp
arpl
sbb
mov
or
je
lcall
jle
pop
mov
enter
and
xor
push
xor
dec
xchg
or
das
movsb
cmpsb
mov
les
push
lea
pop
pop
enter
xor
xor
xchg
cli
xchg
in
popf
xor
push
mov
mov
mov
dec
imul
cmp
sub
inc
xor
ljmp
lods
js
adc
and
xlat
dec
mov
or
jns
je
pop
cli
xchg
out
loopne
sbb
xchg
test
sub
fdivs
aam
xor
stc
mov
inc
mov
add
cwtl
inc
ret
test
push
fmuls
sarb
and
lods
popa
dec
push
outsb
scas
rol
adc
cmp
jmp
mov
rcr
and
out
fstps
sbb
test
sub
mov
cwtl
and
stc
mov
outsl
and
mov
xchg
dec
test
push
pop
add
pop
clc
adc
or
lods
incb
or
xchg
pop
dec
ror
mov
incb
mov
rcrb
jo
aam
push
fldcw
ds
jmp
push
popf
cmp
cli
xchg
rolb
es
jne
mov
loop
cld
xor
scas
add
bound
mov
mov
push
jo
orl
adcb
mov
fldl
cli
mov
jp
sti
aad
out
jo
inc
outsb
inc
pop
push
repnz
mov
add
adc
inc
fucom
aad
orl
enter
int3
je
or
stos
in
test
adc
popf
cmp
and
sub
add
leave
cmp
jecxz
sti
dec
in
cmp
bound
pop
cwtl
mov
jne
pop
add
orl
adc
pop
jg
mov
rorl
dec
cmp
andl
ret
scas
imul
pop
out
adc
or
and
mov
or
cmovbe
nop
jl
and
add
inc
jg
push
push
mov
mov
sahf
ror
rcl
pop
or
push
adc
test
mov
push
jge
sbb
push
out
adc
dec
cmovb
xor
add
push
mov
pop
cmp
mov
stc
sbb
and
orb
adc
std
cli
je
dec
cltd
aas
mov
outsb
add
push
std
mov
or
adc
pop
outsl
mov
cwtl
pushf
inc
inc
nop
jne
inc
icebp
fildll
insb
cmpsb
mov
mov
subb
mov
std
add
repnz
push
fsubr
push
xchg
sbb
enter
xchg
inc
repz
sbb
rolb
push
adc
add
add
iret
rclb
loop
iret
xchg
imull
decl
jp
data16
ret
nop
repnz
and
sub
pop
popf
test
mov
pop
out
lods
fsubs
repz
push
dec
inc
dec
js
mov
mov
adc
call
in
and
mov
into
mov
int3
popa
pusha
orb
aaa
cwtl
and
test
insb
jl
cmp
insl
mov
mov
push
inc
or
sbb
push
std
pop
pop
rorb
fcoms
add
lods
push
add
and
aas
xchg
sub
mov
data16
push
imul
add
mov
fwait
cmp
push
sbb
and
stos
lcall
jae
js
adc
adc
jns
add
dec
dec
sti
shl
sub
loope
mov
add
outsb
mov
imul
pop
push
pop
jle
cld
add
aas
add
mov
sbb
mov
xor
fcompl
sbb
cmp
jmp
sub
mov
dec
dec
pop
gs
mov
jge
loopne
mov
push
xchg
cmpsb
cli
add
inc
ljmp
xchg
je
repz
fucomip
inc
jb
outsb
adc
inc
push
lahf
add
push
xor
repnz
mov
movsb
push
das
push
jle
or
daa
sub
push
int
aam
dec
shr
repnz
xchg
repnz
inc
and
ror
ret
popf
push
or
insl
add
out
out
pop
out
ja
cli
mov
insb
dec
inc
in
stc
or
pushw
xor
mov
add
or
jmp
data16
sahf
call
aad
push
andl
pop
test
sub
fisubl
sbb
xor
pop
sbb
fbstp
andb
cli
cmp
shll
dec
or
jle
jmp
mov
jg
loope
dec
push
dec
xchg
iret
mov
pop
leave
loopne
inc
lahf
mov
or
in
fldcw
adc
icebp
fidivrl
mov
shlb
movhlps
pop
mov
les
jmp
jno
and
cmpsl
out
cmpb
orb
mov
inc
inc
lds
lods
lods
push
mov
mov
das
xor
idivb
xlat
gs
lret
mov
lret
and
pushf
push
out
mov
stc
out
and
mov
jmp
jecxz
dec
mov
sbbb
in
sbb
lcall
aad
ss
iret
rorl
mov
push
jg
add
imul
out
lods
movsl
inc
or
mov
or
or
dec
clc
sbb
or
repz
fstpt
xchg
aad
dec
sahf
daa
mov
and
ficompl
add
mov
mov
push
sbb
jl
test
adc
movsb
out
rcrb
aaa
sub
cmp
loop
add
push
jg
push
mov
cwtl
push
dec
lods
add
ja
push
and
jmp
adc
add
cli
clc
stos
out
push
mov
stos
xchg
add
in
hlt
and
ret
push
adc
mov
aas
mov
cld
pusha
bound
ret
sarl
int3
mov
push
mov
ss
or
xor
es
dec
xchg
inc
mov
mov
outsl
sub
test
add
mov
sub
sahf
jne
clc
pop
push
push
jmp
testl
and
cli
out
ret
sbb
lret
out
and
adc
insl
cli
mov
cmp
push
mov
int3
add
ja
jb
inc
lods
dec
push
aas
icebp
dec
push
dec
pop
sahf
xchg
lret
insb
push
sbb
loopne
sbb
xor
add
cmp
pushf
inc
xlat
cli
adc
loope
push
jge
sbb
sub
loope
inc
jp
xor
or
pop
shl
mov
std
fs
lahf
and
icebp
sub
mov
jne
mov
add
add
sub
mov
sarb
fidivrs
loopne
hlt
fsubl
pop
rcrb
adc
pop
xchg
push
add
sbb
jbe
and
mov
fs
cmp
aaa
sbb
call
inc
js
repnz
into
push
dec
push
xor
rolb
mov
xor
aam
dec
push
adc
push
sti
sbb
lods
xchg
ror
jl
or
push
out
mov
rorb
xchg
scas
out
arpl
pminsw
sbb
jo
sub
jg
movsb
cmp
or
sub
out
scas
in
sbb
and
push
loopne
xchg
ret
jmp
mov
mov
pusha
xchg
sarl
pop
or
pusha
xchg
mov
adc
mov
mov
out
adcl
in
pop
adc
test
jge
xor
or
or
mov
incl
repnz
outsb
push
popf
mov
or
insl
inc
mov
in
std
sbb
inc
xchg
sahf
push
sub
ds
faddl
dec
adc
aas
pop
sbb
push
mov
test
ss
mov
mov
cld
je
iret
ljmp
inc
aaa
stc
jne
adc
mov
and
mov
and
out
pop
insl
jne
push
dec
out
pop
jge
dec
inc
add
movb
mov
popf
or
in
sub
cmp
in
mov
out
mov
or
sbb
jmp
imul
cmp
mov
loopne
push
iret
lods
dec
lods
sub
jmp
pop
je
gs
sub
xchg
aam
mov
push
std
pop
push
push
lret
sbbl
mov
add
jo
aaa
cwtl
arpl
dec
add
push
push
cmpl
sbb
mov
test
fcom
ljmp
stos
pop
sub
mov
mov
ljmp
fwait
test
movsbl
jno
pop
std
out
daa
mov
mov
jae
jg
and
add
pop
push
ficoms
call
loop
adcl
inc
adc
test
fadds
cmp
call
shlb
jnp
xor
lods
xchg
leave
movsb
jecxz
adc
fs
push
fsubl
lcall
add
ret
pop
mov
dec
lods
xor
sub
das
sbb
out
sub
xor
cs
loopne
fists
sbb
xor
divl
sbbl
adc
xchg
ds
nop
pop
add
test
pop
jl
jecxz
add
insb
lcall
add
out
and
imul
ljmp
daa
push
es
xor
lcall
add
ds
or
addb
jge
lock
popa
mov
mov
sarb
ret
sub
scas
sub
xchg
fcmovbe
dec
test
cmp
sub
ret
int
loopne
es
jp
roll
cli
mov
int3
jle
stos
xor
rorb
out
adc
adc
shlb
jae
pop
lock
popa
inc
decb
add
ret
out
lcall
negb
push
fimull
mov
mov
cmc
arpl
loope
in
clc
pusha
ret
fcomps
jnp
mov
into
es
jbe
sub
and
outsl
pop
xor
mov
stos
stos
adcl
or
sbb
leave
jmp
cwtl
jmp
lret
test
sbb
lret
cltd
insb
pop
rol
push
xor
add
adcb
dec
sub
jb
mov
ljmp
mov
jp
fs
ja
repnz
push
rcrb
rcrb
fwait
pop
push
mov
jmp
lea
sub
jmp
leave
mov
cmp
in
aam
orl
call
cmp
insb
xor
adc
pushf
inc
dec
mov
mov
insb
dec
pop
loop
cmpsb
mov
mov
push
or
sarb
and
mov
mov
pusha
dec
pop
subb
stos
mov
adc
popf
add
xchg
adc
sub
mov
je
lods
js
repz
mov
test
ret
jecxz
lds
inc
jle
sub
out
outsl
in
cmpsl
push
push
arpl
cmpl
testl
or
mov
cwtl
sbb
jmp
mov
jae
push
lcall
movsb
dec
lods
adc
mov
or
and
sub
jl
sbb
pop
push
pushf
cwtl
adc
jne
dec
fwait
push
mov
mov
pop
adc
icebp
xchg
das
andb
fwait
mov
pop
push
or
pushf
add
dec
pop
movsl
dec
push
cmpsl
pushf
xchg
fadds
push
dec
push
rclb
xor
or
loop
lock
in
pushf
rcl
rolb
hlt
in
shrl
sub
dec
jp
ja
mov
pusha
cld
call
or
mov
ret
cmp
push
pop
ljmp
cmpl
push
adc
adc
or
or
inc
dec
mov
dec
push
cs
dec
movsb
dec
push
mov
dec
lds
mov
pop
jecxz
sbb
inc
cmp
in
push
xchg
incb
fmull
dec
lret
add
aam
push
test
lcall
and
mov
cmp
mov
and
mov
or
push
fisubrs
mov
or
scas
ficoml
mov
jle
test
inc
sbb
rcrb
or
shl
xor
sub
xchg
fcoml
insb
adc
mov
loop
mov
les
lock
shl
xor
sbb
in
jg
mov
mov
xor
faddl
shrl
push
jns
lret
out
scas
push
push
push
cmp
add
js
xchg
lea
repz
popa
xlat
sub
or
pop
add
shlb
inc
cmp
ds
add
in
xchg
dec
pop
or
pop
pop
mov
aam
les
push
cmp
ljmp
cmp
repz
push
pop
adc
pop
icebp
roll
mov
pop
jl
cld
or
jo
inc
fwait
sub
loop
ficompl
rcrl
jo
add
sbb
pop
inc
mov
push
nop
fdivr
leave
jle
inc
imul
mov
lock
xchg
das
pushf
and
ljmpw
pop
les
xchg
push
outsl
sbb
xchg
sub
fstpl
idivb
fs
xor
mov
enter
mov
mov
andl
add
adcb
loope
mov
iret
or
lret
xchg
mov
lret
ret
repz
shlb
call
stc
lods
fisttps
fldcw
jp
adc
or
sahf
pop
mov
xchg
in
mov
mov
add
sti
and
dec
dec
push
notb
and
push
adc
in
outsl
pop
clc
push
xchg
and
adc
ja
mov
out
cmpb
jmp
or
adc
sub
jb
push
movlps
add
aaa
repnz
movzbl
cld
xlat
mov
push
ljmp
cld
add
pushw
and
sbb
xchg
fiaddl
dec
xor
insl
xor
inc
lock
push
xor
fxch
bound
cmp
jecxz
dec
iret
std
fadds
xor
xchg
or
jg
lcall
xchg
xor
dec
ret
js
add
push
push
jo
out
hlt
xor
add
or
jle
pop
insl
sbb
mov
jns
jge
clc
inc
adc
in
iret
jb
and
add
fidivl
test
xchg
xor
push
sbb
push
fldt
test
fisubs
jge
mov
in
pop
lea
repz
mov
xchg
orb
stos
cli
xor
mov
sbb
add
outsb
pop
or
push
arpl
mov
mov
adc
into
inc
rcrb
and
xchg
out
xchg
and
sub
push
push
mov
sti
into
push
add
inc
loope
inc
movsb
push
outsl
push
dec
loopne
cwtl
inc
xor
dec
add
jecxz
lcall
jmp
xchg
add
sbb
push
and
clc
arpl
sub
ss
push
mov
fwait
cmp
fwait
call
add
or
bound
bound
aas
fcomp
cmp
in
jnp
xchg
sarb
inc
pop
adc
lods
es
cld
adc
sbb
mov
mov
adc
mov
xor
pop
das
xchg
inc
jecxz
fsincos
pusha
subl
loopne
mov
cmc
mov
cld
fisttpll
shrl
push
mov
inc
inc
loop
in
aad
sub
pop
movsl
push
test
mov
push
mov
lods
cmp
cmp
mov
mov
pop
outsb
ds
aam
cmp
into
pop
sub
pop
mov
and
push
rcr
ret
inc
mov
repnz
jno
je
pushf
popa
lret
adc
or
lods
ds
adc
mov
mov
lds
push
lock
fbstp
push
or
and
out
scas
movsb
sbb
or
xor
push
jnp
lock
push
dec
inc
enter
adc
loope
imul
xor
andb
sbb
rorb
cmp
imul
loop
adc
jo
mov
clc
cmc
repz
out
les
mov
andl
daa
nop
icebp
fldenv
xchg
mov
mov
cld
sub
mov
sbb
movsl
mov
push
pop
ja
ret
and
sub
daa
mov
push
cmp
es
idivb
je
add
rorb
test
in
fwait
add
dec
mov
je
jnp
jne
xor
cmp
cmp
dec
daa
push
aas
scas
cmp
jno
lock
push
mov
or
rcrl
add
sub
jecxz
sub
js
dec
dec
mov
push
xor
mov
push
inc
enter
arpl
hlt
jnp
aaa
jmp
fiaddl
jecxz
dec
adc
push
int
test
call
mov
adc
push
or
mov
inc
mov
push
pusha
lcall
adc
pop
ror
test
mov
xchg
aas
loopne
subb
sub
scas
mov
dec
mov
pusha
sub
popf
into
dec
cmp
mov
insl
mov
cmp
movhps
lcall
or
xor
jnp
xchg
inc
in
dec
loopne
push
pop
pop
mov
ss
aam
pop
cltd
mov
push
sub
imul
iret
add
test
das
int
pusha
push
push
xchg
xchg
jnp
mov
sub
psubusb
clc
xor
test
and
shl
ss
insb
xchg
sbb
mov
sbb
rcll
push
in
or
fmull
cmp
or
mov
bound
xchg
jae
mov
adc
addr16
loope
inc
lds
daa
xchg
pushf
pop
shlb
xchg
mov
cmpsl
fisubrs
js
adcb
cmp
dec
addr16
add
or
adc
jecxz
addr16
lret
cltd
pop
jb
stc
jge
sbb
push
cld
mov
sbb
mov
sub
gs
or
mov
pushw
sbb
add
cmpsl
xchg
xchg
dec
fsubrs
jae
cmp
push
push
pop
mov
sbb
push
call
xor
imul
ljmp
pusha
cmp
ffreep
sbb
mov
or
rolb
xchg
and
dec
aad
sahf
mov
insl
and
pop
or
pop
inc
ja
ret
data16
rcrl
out
sbb
mov
out
loop
xor
inc
mov
stc
mov
mov
mov
mov
test
xchg
mov
add
sbb
mov
mov
xchg
mov
push
scas
addb
inc
subl
nop
test
add
pop
pop
in
xchg
jl
pop
xchg
inc
push
mov
pop
int
aas
ja
scas
sahf
vdivps
aaa
cmpsl
pop
push
fsubrl
dec
popf
sub
add
push
out
or
lods
movsl
ficomps
pushf
pusha
push
mov
jmp
sbb
and
mulb
mov
mov
pop
or
mov
jp
shrb
jmp
ljmp
ss
dec
dec
shlb
gs
clc
fmull
sbb
add
jae,pn
mov
inc
loope
and
inc
fstl
xchg
fcompl
pop
mov
or
pop
ret
push
add
dec
xor
mov
add
jmp
adc
adc
out
mov
stc
test
rcrb
adc
adc
je
adc
insb
call
xor
pop
jb
jnp
std
inc
mov
je
adc
pop
mov
scas
imul
mov
jle
mov
sub
adc
imul
bound
push
add
and
and
xor
cmp
out
je
and
faddl
cld
and
testw
popa
js
mov
and
pusha
mov
jns
jl
lds
stos
inc
jo
sbb
push
leave
hlt
in
inc
cmp
js,pt
call
lods
mov
lods
call
ret
sbb
shll
enter
es
in
or
xchg
jle
jmp
xor
dec
loope
insb
lods
les
jge
and
dec
jno
out
fcmovbe
pop
ret
push
fadd
cmpsl
out
movsl
jo
xor
ficomps
sub
nop
mov
pop
loopne
inc
dec
xchg
jecxz
outsb
lea
faddp
push
iret
popf
lcall
add
pop
sbb
test
sub
lcall
notb
or
inc
cs
out
mov
mov
push
sbb
ds
pop
leave
fs
inc
lock
xchg
sub
test
sub
and
add
dec
push
idivl
call
add
cmp
mov
sarb
xchg
testb
add
pop
or
andb
jno
push
and
sbb
inc
fwait
sub
xor
inc
jmp
mov
mov
cmpsl
nop
fimuls
fcmovne
outsb
pop
inc
mov
rcll
movsb
sbb
cmp
mov
ljmp
daa
sub
xor
xchg
fimull
aam
cmpsb
xorl
xchg
push
dec
pop
pop
ss
sbb
loope
push
subb
jg
cmp
jecxz
mov
incl
notl
ret
ljmp
stc
jns
pushf
out
sbb
inc
or
dec
popf
add
mov
sbb
mov
repz
and
test
in
and
or
push
fwait
sbb
fsubs
xchg
xchg
pop
add
cld
push
dec
jmp
cltd
mov
xor
xor
mov
adc
mov
mov
xor
add
sbb
and
ret
sti
int3
mov
stc
jne
js
roll
adc
fcmovnu
jl
das
lret
mov
rorb
jge
mov
adc
sbb
ljmp
add
jg
push
mov
call
or
enter
dec
add
cltd
aad
daa
adc
push
or
scas
xor
mov
cmp
inc
shll
lods
sbb
bound
lahf
xor
inc
arpl
lods
mov
and
pop
loope
mov
jl
loope
jle
not
push
rorb
push
ljmp
bound
jbe
loop
mov
push
sub
adc
cwtl
mov
jge
sub
mov
adc
jae
jl
jae
push
pop
pusha
xchg
sahf
mov
dec
out
pop
sbb
push
push
lods
xchg
jp
pop
into
mov
ds
add
insl
mov
imul
jl
xor
mov
inc
les
or
ja
add
lock
push
mov
cld
inc
out
lds
ss
fsubl
nop
rorb
imul
scas
bound
pop
push
add
test
fbstp
addb
jmp
aaa
add
rolb
inc
shll
out
sub
fistpll
icebp
xchg
lea
dec
dec
sub
or
cmp
outsb
or
in
lock
js
out
test
cmp
push
mov
call
push
mov
adc
sti
insb
sahf
push
jge
sbb
je
jnp
mov
repnz
imul
outsb
pop
adc
aaa
mov
call
adc
mov
mov
dec
jge
push
scas
jle
add
inc
push
xchg
outsl
mov
mov
cmp
es
mov
dec
outsb
cmp
arpl
movsb
jecxz
nop
shl
or
mov
fwait
and
mov
xor
and
adc
jbe
xor
push
shrl
in
push
ret
xlat
cwtl
pop
ljmp
pop
dec
cli
inc
lods
daa
xchg
or
bound
push
pop
lods
jecxz
jmp
push
xchg
adc
xchg
test
and
mov
inc
jo
loopne
mov
or
pop
xchg
inc
push
xlat
cmpsb
or
repz
cmp
std
stc
loopne
inc
and
xchg
sub
insb
ss
aaa
mov
sahf
repz
xchg
sbb
jo
test
icebp
cmp
inc
and
add
dec
clc
push
shlb
loopne
bound
inc
jmp
inc
mov
cltd
into
xchg
or
push
outsb
fsubrs
push
scas
rorl
add
jne
add
sbb
insl
inc
jmp
ljmp
loope
fcmovb
and
popa
dec
push
jp
jecxz
movsl
jp
adc
pop
dec
cmp
xor
mov
push
mov
pop
shlb
push
pop
or
jo
sbb
dec
lods
loope
adc
mov
pusha
inc
fldl
push
add
lahf
fimull
mov
icebp
adc
pushf
and
outsl
mov
jp
stc
shlb
decb
sbbb
sub
inc
cmp
inc
and
mov
xorb
cmpsl
and
add
test
iret
add
mov
adc
mov
pmaxub
jl
icebp
cmp
jae
inc
jo
sbb
es
mov
jo
es
jge
jp
pusha
ret
pop
cmpsb
push
cmp
mov
loop
lret
mov
push
add
outsl
push
pop
sub
out
add
mov
push
inc
scas
pop
mov
jmp
ret
xor
insb
nop
loop
push
or
aas
fwait
mov
orl
lock
xor
cmpsl
dec
rclb
fwait
dec
negl
jnp
push
or
scas
xor
sub
clc
lcall
cmpsb
loopne
xlat
push
mov
rolb
int
push
rep
paddusb
test
mov
and
pop
cmp
cmp
aad
push
mov
adc
or
incb
daa
push
push
loopne
js
pop
sub
adc
push
jle
repnz
cld
xor
int
jge
mov
sti
je
sbb
and
inc
inc
add
add
cmp
mov
mov
or
mov
dec
fisubrl
xchg
outsb
xchg
loopne
jmp
jne
dec
xchg
and
call
sub
jp
or
push
jmp
scas
ds
insl
cmc
mov
je
roll
sbb
dec
or
rclb
daa
pop
push
fwait
sub
mov
js
mov
inc
add
dec
test
sub
cmp
inc
and
sbb
mov
sub
imul
push
pop
sbb
mov
jle
outsl
add
xrelease
push
stos
leave
das
bound
fdivl
or
loop
push
push
cmp
mov
gs
xchg
sbb
mov
push
mov
xchg
sub
sbb
call
dec
and
add
and
add
scas
xorb
and
je
xor
int
das
insl
imulb
cmpsb
jge
cmp
push
popa
movsl
rol
adc
cld
sub
ret
adc
outsl
add
fimull
mov
sbb
mov
add
push
fldcw
pop
jb
and
cld
sbb
shll
jmp
dec
push
cmp
aaa
mov
imul
popf
push
lods
gs
pop
ret
inc
js
push
lea
mov
and
add
scas
or
push
ljmp
adc
test
das
int
aaa
sarl
push
sub
loope
pop
jg
or
jne
push
pop
aam
jb
sbb
mov
fcoms
loopne
mov
jns
add
clc
pop
clc
inc
cmp
pop
mov
cmp
adc
pusha
je
incb
dec
push
ja
xor
dec
and
daa
or
pop
or
scas
jb
pop
mov
inc
mov
outsb
xlat
arpl
jl
hlt
in
fldcw
cli
xor
jp
push
fwait
jo
jo
jne
mov
lods
sbb
inc
inc
pop
mov
or
push
sub
test
pop
push
add
testb
xor
test
sub
mov
mov
mov
add
hlt
int3
ds
out
sbb
ss
rclb
xchg
mov
adc
aas
mov
mov
cmp
cltd
fsub
mov
mov
cmpsl
pop
dec
mov
fildll
mov
sub
sbb
outsb
mov
jns
sub
lahf
ret
jp
outsb
js
imul
mov
cmpsb
nop
push
mov
mov
icebp
push
inc
jge
rorb
lahf
pusha
je
add
pop
mov
xor
and
jg,pt
mov
les
aaa
addb
or
cmp
mov
add
push
sbb
test
mov
sbb
jmp
lcall
and
into
dec
mov
sbb
in
mov
ret
inc
xchg
lret
call
pop
mov
xchg
sub
cmc
jmp
xlat
mov
xor
dec
jnp
aad
push
jp
dec
iret
xchg
adc
and
push
sti
test
adc
mov
test
ja
add
push
ljmp
and
fdivrl
out
sub
sbb
xchg
cmp
adc
ret
jle
aad
ds
and
push
negb
add
fldl2e
jo
ds
fdivrs
inc
adc
sub
adc
shlb
aam
into
movsb
fdivs
sbb
fwait
and
scas
inc
subb
test
mov
mov
mov
inc
sub
mov
jbe
xor
leave
inc
inc
loop
adc
cmc
aam
cltd
lock
xchg
sub
out
out
fs
mov
xchg
push
call
mov
in
push
scas
rclb
imul
cli
aas
and
add
sub
popf
lods
adc
repnz
ja
pop
cmp
fcomps
push
rclb
jno
mov
dec
jo
clc
adc
imul
xor
lret
sbbb
rcrb
mov
jmp
xchg
sub
pusha
test
fwait
sub
ret
add
mov
lds
mov
xchg
ds
fimull
out
push
clc
or
jge
ss
adc
insl
je
out
push
rcll
fidivs
and
mov
cmp
call
stos
xchg
jns
mov
in
jle
dec
pop
sub
insl
clc
outsb
stos
sbb
lret
movb
push
call
jge
fsubl
inc
imul
addr16
xor
add
mov
mov
arpl
sbb
fadd
out
xor
jbe
or
adc
js
xchg
jecxz
push
xor
sahf
adc
adc
dec
mov
sbb
adc
mov
imul
daa
xor
lock
sbb
repz
lods
xchg
push
jge
jl
adc
or
rcrb
test
pop
dec
inc
sub
cmp
mov
inc
in
inc
and
jle
push
arpl
testw
or
dec
dec
dec
pop
dec
inc
cld
cmpsl
repz
imul
arpl
jp
lcall
and
enter
ret
les
bnd
fcomip
shrb
fsubr
dec
imul
dec
incb
ret
pop
fcmovbe
push
jne
les
stos
jno
jnp
or
movsb
movsl
mov
fstl
fsubrs
ljmp
iret
aas
sbb
hlt
cmp
lock
xor
xchg
and
xchg
stos
pop
push
sbb
daa
dec
fimull
cld
ljmp
add
lahf
and
pop
pop
arpl
or
pop
jo
les
lahf
or
push
ud0
popf
push
mov
push
iret
sbb
cmp
xor
js
cmpsb
mov
loopne
mov
jg
test
mov
push
and
mov
ss
test
inc
daa
jecxz
adc
push
addr16
cmpsb
fsubp
in
xchg
mov
add
mov
inc
fmull
sbb
jg
pop
push
dec
scas
sub
push
xor
fcomps
mov
sbb
or
mov
xchg
sub
pop
xor
sub
lods
inc
sub
add
xor
mov
push
pop
sbb
and
inc
pop
push
cmpsb
add
jbe
push
add
mov
mov
cwtl
and
insb
inc
push
clc
std
xchg
test
call
push
dec
or
aam
push
jns
jno
xchg
push
and
hlt
inc
push
or
pusha
in
lcall
hlt
or
pop
fdivs
adc
inc
mov
push
popa
scas
push
dec
push
lock
push
cmpsl
in
pop
test
inc
popa
add
mov
fwait
xchg
mov
push
inc
insb
sbb
arpl
sub
cmpsl
pop
sub
test
mov
fcmovnbe
sbb
aaa
stos
inc
stos
jle
xor
addr16
fadd
cmc
dec
mov
daa
fbstp
xchg
out
cs
jo
jno
aaa
stc
pusha
shrb
pop
loop
loop
push
mov
push
call
cltd
loop
cmp
out
and
fdiv
mov
scas
mov
test
mov
aam
sbb
sbb
in
aam
mov
cmpl
add
mull
outsl
cld
test
mov
push
pop
or
inc
mov
aam
sbb
mov
jne
popa
add
into
insl
cmp
xlat
xor
jo
jp
push
lds
mov
dec
inc
das
lock
push
pop
jge
mov
mov
in
jg
or
push
cmpsb
adc
sarb
push
mov
push
stc
push
push
adc
outsb
and
pop
inc
rcll
xchg
mov
adc
sbbb
mov
inc
test
lret
popf
aaa
popw
cs
mov
inc
xchg
and
jg
loope
stos
mov
stos
mov
jae
xor
xlat
loopne
call
sub
pop
cmp
iret
mov
lock
xor
xor
stc
mov
movsb
aam
js
xchg
push
int3
push
inc
add
xchg
xor
push
dec
scas
push
mov
imul
bnd
fxtract
je
sbb
cmc
es
rorl
mov
fnstcw
adc
jb
push
or
cmp
imul
gs
ds
hlt
jl
orl
gs
lods
outsb
out
out
ss
pop
test
movl
lods
imul
lahf
mov
add
dec
add
cs
push
cmp
loopne,pt
les
mov
mov
inc
push
jp
lods
lock
xchg
aad
ja
ja
test
shl
or
shlb
mov
fwait
add
pop
jo
enter
inc
clc
jl
fdivrs
sbb
je
outsl
lods
adc
pop
cwtl
dec
insb
xchg
test
shl
pop
push
psllq
stos
mov
or
std
jnp
inc
mov
stos
fmulp
sbb
les
push
lds
pusha
mov
xor
jle
mov
xor
inc
inc
sbb
mov
ret
dec
lahf
jl
mov
and
mov
test
push
xchg
mov
xchg
popa
mov
add
lock
test
or
cmpl
out
int
or
repnz
dec
aam
call
mov
mov
enter
aaa
sahf
inc
mov
dec
insl
push
loope
and
fisubs
fnclex
das
push
mov
jns
mov
icebp
sbb
sarb
inc
sub
pop
xchg
lea
or
lcall
es
inc
insb
lock
lcall
mov
cmp
out
imul
subl
fimull
push
inc
loope
xor
dec
je
addr16
ss
call
jo
push
pusha
sbb
ja
sbb
adc
mov
add
inc
xchg
sub
jle
push
leave
add
and
add
imul
pop
jl
dec
adc
fstps
mov
das
xor
cmp
push
fnstcw
pop
cmc
je
xchg
push
out
add
std
loop
hlt
test
ds
push
inc
cmpsb
hlt
rclb
xchg
idivl
mov
dec
jecxz
test
push
aas
mov
dec
ds
pop
pop
adc
in
aas
movsb
xlat
xchg
ret
in
or
inc
fisttpll
sub
mov
imul
dec
int
pusha
and
daa
dec
mov
sub
scas
and
mov
mov
dec
mov
rorl
xchg
or
je
cmp
in
movsl
xor
outsl
mov
xchg
into
push
mov
jle
xchg
push
repnz
lods
adc
popa
mov
and
out
mov
stc
sbb
sbb
or
cmpb
lods
ds
repnz
lock
cmc
mov
pop
add
aad
inc
adc
sti
scas
mov
dec
adc
add
xlat
pop
in
inc
pop
mov
sbb
mov
xchg
mov
dec
mov
dec
xchg
iret
loopne
cmp
sarb
shll
mov
mov
ret
dec
add
add
xchg
inc
lea
loop
and
mov
jecxz
add
shrb
inc
push
mov
aas
sub
int3
ret
mov
clc
and
scas
add
pop
sbb
cmp
test
jno
and
mov
dec
lret
sub
or
add
sub
lahf
fcoms
or
adcl
cmp
mov
xor
or
lods
imul
xchg
loope
sub
push
les
adc
inc
fstl
mov
push
jl
cmpsb
jmp
leave
or
jl
cli
fmuls
call
cltd
sub
hlt
xor
nop
fs
loopne
pusha
cmp
or
add
inc
jge
out
pop
or
add
add
push
ret
pop
js
cli
jl
out
mov
les
shll
loop
push
cli
mov
dec
mov
jmp
push
aad
rol
inc
lret
xor
or
ret
ljmp
adcb
adc
jns
sub
imul
mov
inc
outsb
jl,pt
pusha
add
sbb
subb
sbb
adc
in
and
or
sub
mov
es
cmp
inc
loope
insl
sub
xchg
js
pop
xchg
test
jg
pop
aaa
and
cmp
dec
mov
mov
ror
xchg
inc
xchg
jbe
jne
cmpsl
in
out
push
ficoms
shrb
xchg
lods
test
dec
imul
invlpg
pop
jbe
aad
insl
test
fldcw
std
data16
arpl
mov
cmpsl
aaa
xlat
push
sub
fisttpll
xchg
jg
cwtl
mov
sbb
aaa
push
fmuls
ret
xor
dec
xcrypt-cfb
cmpsl
and
dec
add
mov
push
pop
mov
dec
je
lret
inc
dec
outsb
loope
jne
fmul
pop
push
push
pop
out
or
daa
stc
sub
aas
notl
std
sarl
je
mov
mov
mov
pop
call
cmc
popa
or
mov
pusha
adc
mov
movsb
call
movsl
add
fmuls
stc
inc
or
cmpsb
adc
inc
mov
xor
sub
ds
mov
cmp
cltd
inc
pop
mov
pop
push
cmp
cmp
mov
sbbl
rcrl
rol
push
jg
jb
loopne
test
in
call
fldlg2
pop
xlat
cmc
pop
mov
fs
pusha
xchg
xchg
add
jne
cmpsb
pusha
inc
das
lock
mov
es
inc
jecxz
std
pop
xor
xchg
mov
sbbb
or
ljmp
lods
ret
mov
adc
adc
cltd
call
xchg
test
repnz
adc
mov
adc
lods
dec
sbb
insl
paddb
inc
xor
ss
cmpl
mov
ss
dec
sub
jnp
lock
push
xor
fadd
add
cltd
inc
sbb
dec
in
xor
sub
cmpsb
adc
mov
mov
or
test
sbb
or
orb
test
bound
xor
push
cmpl
jp
test
cmp
and
ja
icebp
ja
cld
test
push
sbb
push
sub
or
pusha
cmp
and
and
clc
mov
ss
mov
fs
jne
xchg
or
add
xchg
xor
jo
add
xchg
imul
bound
dec
lea
lea
xchg
or
paddd
xor
shlb
mov
stos
jnp
or
bound
push
aas
sbb
or
outsb
cltd
sbb
in
inc
xor
inc
loop
call
js
stos
push
jno
xchg
add
clc
xor
mov
aaa
push
test
or
push
enter
loopne
xor
clc
cmp
mov
mov
dec
sbb
jne
cmp
sbb
mov
ret
or
sarl
cmp
loopne
mov
sub
lds
pop
mov
pop
iret
stos
ret
mov
push
fistpll
popa
and
into
jbe
push
das
xchg
mov
sbb
mov
inc
cmpsb
bound
sbb
stos
movsl
nop
push
fs
xbegin
xor
adc
sbbb
push
xsavec
jp
fcoms
mov
xchg
ja
jmp
ljmp
pop
fisubs
inc
aas
ds
xchg
lock
inc
test
xchg
push
or
ret
cmp
push
pop
mov
mov
aaa
loopne
outsb
or
cli
xchg
stos
out
adcb
int3
mov
rcl
nop
jle
and
and
dec
mov
xchg
cmc
cmc
hlt
dec
push
cli
sub
in
addl
pop
outsb
rolb
out
sbb
add
inc
jb
add
pushw
dec
dec
mov
scas
lret
adc
icebp
sub
mov
scas
push
scas
pop
or
xchg
leave
sbb
cli
sub
xchg
push
loop
sarb
push
dec
adc
rcl
enter
and
in
nop
cmp
lock
xor
and
lods
mov
dec
mov
addl
jnp
mov
sub
mov
adc
in
pushf
mov
fdivrl
mov
sub
ficomps
sbbb
inc
out
push
inc
out
adc
add
jge
inc
pop
adc
xlat
jmp
inc
test
pushf
dec
outsb
out
decl
push
arpl
fidivs
test
jno
mov
je
jne
cmpsl
xchg
movsb
cmpsl
dec
shrd
std
stos
in
or
out
daa
inc
cmc
pusha
push
cmpsb
sbb
pop
fmulp
addb
pop
stos
xchg
scas
cwtl
pop
jmp
fs
push
add
push
pop
stc
leave
mov
es
stos
mov
scas
mov
jae
jg
js
mov
subb
jp
gs
mov
nop
push
mov
test
or
fs
or
nop
dec
mov
adc
shlb
cmp
rorl
fwait
cs
or
cmc
ljmp
mov
sub
dec
inc
xchg
push
sub
push
mov
adc
inc
in
paddq
and
ret
and
movsl
push
scas
pop
inc
test
pop
or
das
insb
push
add
scas
lock
bound
out
imul
stc
xor
into
pop
pop
adc
add
fisubl
outsl
clc
outsb
jae
jo
adc
or
lock
mov
gs
pop
xor
mov
cwtl
inc
enter
fcoml
ja
cmp
pusha
sub
jecxz
out
aaa
cld
jmp
push
leave
sbb
pop
and
int
xorb
push
mov
pushl
mov
mov
in
nop
mov
mov
cmpsl
pop
outsb
cld
cltd
pop
data16
mov
mov
fcmovbe
jp
add
je
mov
icebp
xchg
inc
mov
mov
add
stc
pop
xor
pop
mov
sbb
pop
jo
jns
push
js
imul
dec
jmp
jle
sbb
xor
push
addr16
stos
repz
les
je
dec
xor
sbbb
jp
xor
cwtl
add
dec
clc
shrb
in
es
push
mov
add
pop
lock
and
inc
aaa
movsl
test
jp
divb
test
pop
les
xchg
daa
inc
jecxz
and
loope
pop
push
sub
jp
je
sub
stc
mov
xchg
repnz
ja
jb
das
push
add
in
les
sbb
hlt
mov
lods
and
int
ret
mov
inc
push
adc
or
and
cs
mov
mov
mov
stc
ret
lea
fisttpll
inc
andb
arpl
pop
sarl
cmc
mov
into
out
decb
pop
bound
mov
and
jecxz
mov
inc
mov
movsb
cs
inc
sbbb
or
inc
push
xor
push
jns
xchg
and
lock
subl
push
aam
push
jo
ljmp
pop
or
mov
jecxz
push
fwait
negb
outsb
sbb
divb
xor
mov
aad
push
ret
jo
nop
adc
mov
dec
and
mov
and
xlat
rol
lock
cmp
inc
loopne
push
push
or
test
jp
fcompl
add
bound
jecxz
pop
lea
adc
out
jne
testl
test
jbe
cmp
iret
xor
shrb
xchg
xchg
movsl
cltd
jmp
or
mov
inc
mov
mov
arpl
add
mov
cmc
ret
push
adc
push
push
mov
mov
in
aaa
pop
fsubrs
andb
inc
xor
mov
pusha
sbb
sbb
ja
rcrb
mov
lahf
adcl
dec
fistps
sbb
cmpb
rorl
std
test
xchg
jne
stc
jae
les
sbb
and
push
cmp
insb
xchg
mov
sub
subb
sub
movb
xor
movsb
cmp
cmp
add
lods
cmp
test
sub
daa
ljmp
out
mov
xor
ja
add
and
das
push
pop
orb
lods
dec
std
inc
fs
into
push
cmp
xlat
loope
inc
add
jl
hlt
sbb
ljmp
imul
push
fstpt
jg
inc
out
xlat
add
mov
mov
sub
cs
jns
dec
and
les
arpl
enter
test
dec
lods
sub
out
cmp
cmpsl
inc
std
repnz
mov
sub
test
xchg
add
add
pop
mov
hlt
outsl
hlt
pop
xchg
xor
cmp
mov
cld
adcl
ret
icebp
loopne
andl
scas
outsl
and
into
jl
out
mov
sub
push
inc
inc
daa
fildll
mov
push
sti
pop
and
push
popa
jns
jg
xor
dec
dec
popa
push
inc
test
scas
adc
xchg
xchg
cmp
scas
lea
dec
mov
dec
and
data16
fistps
mov
mov
sub
ljmp
dec
mov
adc
xchg
ror
gs
clc
cwtl
mov
js
push
mov
lods
mov
ret
dec
sub
pop
shll
cwtl
push
pop
jbe
cli
addr16
xchg
xor
add
fidivl
mov
and
push
cmp
loop
rclb
into
mov
sub
imul
repnz
lcall
push
div
xorl
les
mov
dec
lahf
les
pop
inc
mov
je
push
outsb
pop
xchg
scas
loop
pop
mov
sbb
ret
inc
pop
lds
and
inc
push
aaa
xor
adc
rcll
push
std
xor
jl
inc
or
rolb
pop
cli
cli
dec
pop
ljmp
cld
fdivrs
mov
xchg
rcrl
sub
outsb
sbb
push
lcall
xchg
mov
loopne
movsb
test
and
mov
fimull
mov
ss
lcall
xchg
lock
aas
or
sahf
push
int3
bound
jg
pop
loopne
dec
sbb
inc
xchg
adc
push
sbb
sub
bound
leave
lds
xor
jp
inc
mov
mov
add
mov
into
push
add
clc
test
int3
iret
roll
hlt
mov
sbb
xchg
jp
cmp
xchg
jno
mov
jge
rolb
mov
ret
incb
add
adc
test
sbb
push
xchg
outsb
aam
push
cmp
nop
jns
cwtl
rorb
sbb
jnp
fs
addl
lods
dec
pop
mov
push
rorl
rcl
or
shlb
iret
jp
imul
dec
pop
mov
and
and
pop
add
adc
sub
mov
cmc
and
ds
sub
xor
sahf
rcrb
xor
outsl
mov
int
or
add
stos
ffree
and
ja
xor
mov
xchg
jmp
and
inc
lea
pusha
pop
xor
add
pushf
jns
jo
jg
and
call
ja
xchg
inc
jg
jge
es
movsl
mov
ret
icebp
xchg
enter
aad
je
inc
scas
xchg
or
xchg
xchg
mov
dec
mov
mov
fdiv
add
and
pusha
mov
cld
mov
popf
pop
sahf
mov
inc
leave
dec
mov
cmp
pop
pop
push
stos
jo
or
xchg
mov
clc
push
lods
hlt
xor
jl
inc
test
dec
push
inc
pop
or
hlt
lahf
mov
add
sbb
cmp
cmc
cmp
daa
xlat
inc
add
mov
pusha
dec
add
and
and
or
imull
jge
pop
add
xor
mov
dec
adc
stc
imul
add
in
dec
decb
popa
push
cld
sbb
mov
ljmp
aaa
sub
and
jecxz
bound
sbb
adc
stos
xchg
daa
fisubrs
fdivs
jne
xchg
xor
gs
add
mov
lock
pusha
cmpl
mov
daa
inc
mov
mov
sbb
stos
xor
fs
add
mov
mov
xor
push
adc
in
jp
cmpsb
and
and
cmpsb
es
add
icebp
cmp
test
cmp
sahf
ds
inc
mov
pop
xchg
shll
and
mov
mov
add
pop
inc
mov
jp
mulb
test
lds
outsb
adc
or
mov
clc
jge
loop
xchg
adc
in
ss
or
xchg
sbb
adc
xchg
xchg
xchg
lods
enter
and
loope
pusha
sub
aas
cld
add
das
jge
insb
xchg
sbb
sub
dec
icebp
test
add
lahf
and
stc
mov
imul
mov
lock
lods
and
test
inc
shrl
fldcw
push
mov
pop
mov
movl
mov
andb
das
sbb
lods
mov
add
mov
mov
xchg
xchg
push
fldcw
fwait
inc
mov
push
add
sub
add
shrl
push
jbe
add
pop
cmp
fcmovne
or
inc
pop
pop
scas
rcrl
loopne
add
cmp
mov
pop
mov
loopne
jl
push
sub
cwtl
dec
inc
adc
jmp
dec
or
ss
or
js
shr
into
cmp
in
sar
adc
outsb
cltd
push
ljmp
xlat
or
mov
or
pop
sbb
xor
adc
pop
inc
subb
movsb
pop
pop
loope
xor
aad
pop
mov
shll
jg
and
ret
pop
or
icebp
cmpsl
mov
fadd
outsl
add
xchg
int
fidivs
cmp
popa
cmp
je
add
scas
mov
xor
cmpsl
xchg
add
in
xor
xor
js
push
push
jl
hlt
shrb
xor
mov
sub
mov
pop
test
push
int
mov
ljmp
filds
mov
cmp
sbb
jecxz
mov
orb
mov
sbb
scas
or
idivb
jo
push
pop
pop
inc
lret
push
dec
or
rep
push
cmp
cwtl
add
xor
adc
das
clc
aad
mov
bound
dec
jecxz
andl
mov
stos
push
jge
push
and
pop
xchg
test
sbb
clc
sbb
xor
out
aad
insl
leave
loope
jbe
lahf
inc
sbb
jl
or
jmp
push
in
dec
push
gs
out
mov
es
add
lret
enter
dec
pop
mov
movsb
dec
push
lock
dec
fsubrs
cmp
mov
inc
sub
xchg
daa
mov
fwait
mov
mov
add
jecxz
jb
addb
push
cmp
in
push
push
clc
or
cs
pop
sbb
leave
imul
or
je
inc
push
pop
mov
dec
jg
xor
push
xor
jae
add
dec
sti
out
push
lea
sbb
push
adc
mov
jp
mov
add
shll
ja
mov
mov
mov
dec
js
dec
fxch
adc
rolb
shr
rcll
xor
jle
push
aam
rorl
mov
xchg
jb
sti
inc
add
add
fimuls
jmp
or
jle
adc
lds
push
inc
pop
loop
jg
lahf
sub
mov
sub
loopne
movsl
divl
aad
in
push
dec
lahf
enter
stos
cli
xor
popa
push
and
or
pop
lret
ss
mov
mov
mov
mov
test
data16
shl
mov
das
xlat
jp
push
inc
into
sub
cmpsl
cmp
aam
or
out
jmp
xchg
pop
sbb
add
sub
shl
pop
dec
jl
cmp
inc
lret
lock
nop
lahf
push
jbe,pt
jl
push
pop
loop
sbbl
jecxz
sar
adc
sarl
sbbb
and
pop
rclb
dec
pop
nop
pop
xchg
fdiv
loop
repz
mov
jp,pn
cld
xchg
mov
mov
inc
mov
inc
jg
and
add
pop
call
cwtl
pusha
loopne
in
pop
inc
sbb
mov
cltd
sbb
mov
pop
adc
inc
repnz
adc
jmp
sbbb
mov
lods
scas
stos
cs
out
mov
adc
mov
push
cmc
stos
cmp
loope
cli
push
add
ror
movsb
push
push
stc
test
add
call
sbb
aaa
xor
bound
and
pushf
sbb
adc
ror
and
js
xor
sbb
stc
inc
into
jnp
inc
inc
bnd
imul
xchg
sbb
ret
or
cmp
mov
mov
clc
mov
or
mov
cmp
gs
ljmp
dec
sbb
xchg
jne
or
incl
jl
rolb
sbb
adc
pop
leave
clc
jnp
jp
out
test
fidivs
in
retw
dec
push
xchg
mull
xchg
and
sub
jae
cld
rolb
xchg
loop
mov
jmp
dec
scas
inc
sbb
mov
mov
sub
incl
add
mov
xor
lea
push
pop
jge
mov
adc
push
jno
adc
imul
dec
shl
imul
out
shlb
mov
sub
add
mov
inc
cmp
leave
test
ds
cs
cmp
push
dec
pop
jne
pop
sub
mov
cli
mov
inc
xchg
add
mov
les
mov
cmp
adc
test
loop
test
iret
fdivs
mov
mov
call
xchg
inc
xor
cwtl
mov
js
subb
push
inc
push
maskmovq
notl
sbb
xor
jo
sbb
mov
out
mov
adc
lods
stos
cmp
or
dec
adc
add
cli
cli
mov
adc
pop
cmpsb
int
jl
mov
push
inc
cmp
jbe
jo
fiadds
sub
bound
jmp
ret
adc
sbb
fildll
pop
push
and
or
mov
popf
repnz
fmull
inc
out
push
loopne
or
add
dec
repz
lea
cs
fisubs
push
adc
dec
or
mov
pop
add
sbb
ss
mov
jbe
sub
jl
in
and
out
stos
or
pop
je
inc
sub
lods
ficoml
push
cli
push
xchg
mov
add
adc
pop
adc
adc
repnz
jo
dec
jne
fmull
out
scas
lret
shll
pop
jp
cltd
xchg
cmpsb
mov
cltd
es
mov
pushf
fidivl
hlt
pop
loope
lock
adc
adc
cmp
dec
pop
cltd
sub
es
xchg
lds
and
cld
imul
imul
loope
jp
rcr
sbb
mov
std
scas
xchg
bnd
dec
js
jbe
inc
js
jns
adc
pcmpgtw
mov
cli
add
pop
dec
jae
jp
or
or
out
push
loopne
icebp
pop
xlat
xchg
cmp
insl
and
mov
aad
pop
loopne
leave
sar
mov
xchg
or
mov
jl
mov
mov
dec
addl
inc
push
aaa
and
push
pop
xchg
mov
outsb
jge
adc
mov
test
nop
xchg
iret
or
insb
test
dec
clc
push
push
mov
je
jg
rorb
and
adcl
test
mov
sbb
cli
mull
fmull
mov
out
sub
sbb
xorl
add
push
pop
add
enter
push
and
mov
inc
repnz
std
inc
iret
nop
jbe
clc
aad
xchg
mov
inc
pop
aaa
ds
pop
mov
iret
dec
or
or
mov
loope,pt
inc
sarb
push
adc
xchg
test
dec
jg
pop
add
and
sbb
push
ret
into
xchg
inc
push
push
in
fwait
call
jg
inc
inc
stos
xchg
mov
push
dec
and
dec
pop
lds
mov
sbb
fs
cmc
xor
leave
cmp
sbb
inc
push
icebp
pop
cld
jno
loop
mov
sub
cmp
inc
aaa
push
xor
mov
pop
clc
add
scas
adc
ds
in
fdiv
sub
mov
add
push
pusha
push
jno
lods
into
movsl
popa
sub
lcall
pushl
push
lods
ficoms
sbb
inc
add
and
or
fnstenv
js
nop
xor
add
call
scas
bound
push
sub
jp
xchg
push
add
push
xchg
mov
lea
mov
dec
pop
clc
mov
pop
ja
ja
into
repz
xchg
arpl
add
lock
xchg
jbe
mov
fbstp
sbb
mov
pop
or
out
call
daa
sbb
pop
lcall
mov
sbb
push
mov
into
pop
cmp
cmp
add
adc
pop
mov
push
xchg
cmpsb
jge
push
lea
push
popf
ret
mov
insb
sub
addr16
ljmp
pop
inc
ljmp
lahf
out
cmp
jae
dec
jge
jne
mov
outsb
bnd
lret
xchg
sub
cs
and
les
gs
sub
cli
adc
xchg
and
lods
fcmovu
xlat
pop
mov
jecxz
adc
dec
xor
lods
mov
leave
dec
pop
mov
mov
lahf
fmulp
sub
mov
cmp
pop
or
sti
mov
leave
and
pop
movsb
into
push
popf
xchg
rol
push
mov
sti
enter
mov
clc
xchg
ret
movsb
jl
jp
mov
or
inc
aam
xchg
and
jle
rep
mov
ja
test
push
push
mov
lret
add
testl
ljmp
cmp
cs
enter
data16
xchg
fcmovnbe
stos
adc
leave
sub
jns
pop
sbb
les
xor
gs
inc
mov
pop
lahf
mov
movsb
cli
nop
and
cld
push
out
dec
sub
push
fstpt
xchg
or
sub
add
or
shlb
call
pop
mov
jno
mov
addl
hlt
push
and
push
ss
xor
insb
cmpsb
testb
sbb
test
mov
mov
lret
aas
rcll
xor
imulb
in
mov
jmp
adc
xor
mov
mov
clc
rorb
popl
repz
es
fwait
inc
push
mov
push
pop
jbe
or
ljmp
popf
rol
pop
outsb
adc
jb
dec
sbb
jnp
push
addl
mov
rcrb
cmp
xor
pop
cmp
pop
sbb
popa
add
mov
push
divb
push
aaa
stos
xchg
int3
jno
pop
sbb
test
mov
or
std
xor
mov
jbe
invd
test
lods
dec
push
xlat
xchg
and
test
mov
mov
xchg
and
pop
mov
mov
push
fnstcw
loopne
mov
sub
test
dec
xchg
bound
mov
push
out
lret
push
xor
mov
es
js
xchg
icebp
inc
adc
cmp
cltd
movsl
ldmxcsr
loopne
or
push
adc
sbb
jecxz
inc
or
pop
inc
pop
mov
pop
mov
jno
ds
mov
jnp
xchg
push
jo
cs
pop
mov
pop
sarb
enter
add
cmp
push
hlt
lock
jbe
dec
xor
lret
push
arpl
loope
push
sub
dec
popf
scas
cld
mov
loope
pop
dec
inc
jo
movsl
jp
lods
xchg
jae
mov
js
test
mov
cmp
or
test
imul
dec
iret
dec
ret
sahf
lret
aas
sub
sub
dec
dec
repz
push
xchg
jmp
call
stos
sbb
add
adc
rclb
fsubp
inc
inc
frstor
jne
shrl
outsb
sub
sbb
int3
fildl
sarb
jp
and
mov
dec
loop
das
sub
std
lods
lods
mov
ret
out
dec
lock
adc
mov
dec
loope
adc
pop
add
pop
lods
xchg
cmpsb
in
aas
out
xchg
mov
and
pop
sti
test
iret
lahf
jg
dec
scas
cwtl
add
mov
fs
sbb
adc
adc
mov
mov
xor
sub
test
mov
mov
push
dec
outsl
and
mov
adc
int
fdiv
sbb
in
sub
push
jmp
outsb
lds
sbb
ljmp
sbb
bound
in
bound
and
jle
xlat
fmull
sahf
hlt
add
pop
fimull
push
ljmp
rcll
mov
rorl
fimuls
pop
enter
gs
clc
or
jns
ret
call
mov
or
repnz
loopne
or
and
and
es
add
push
sahf
pop
shrb
rcr
insl
out
pop
fildll
cmp
nop
stos
jle
in
xchg
adc
aas
and
imul
and
jnp
xor
or
jecxz
js
pinsrw
cmp
xchg
nop
pop
sub
rorl
push
fisttpl
mov
int3
loop
push
fs
cmp
inc
rorb
repz
das
fsubl
fmul
xor
out
imul
shlb
daa
cmp
xor
cmp
ja
arpl
pop
cmp
test
in
shl
mov
mov
jg
imul
es
icebp
and
ficoms
loopne
hlt
mov
xorl
push
outsb
and
inc
addr16
inc
rorl
push
insb
mov
roll
fimuls
lahf
adc
jmp
mov
pop
add
xlat
sub
cs
add
clc
repnz
loopne
mov
iret
adc
sub
add
xor
shrl
into
mov
push
js
dec
push
or
stc
rorb
out
outsb
mov
add
lods
push
enter
inc
jmp
addr16
mov
movsl
adc
inc
ret
cs
cmp
xor
mov
pop
pop
inc
adc
or
and
push
push
out
pushf
popa
add
or
sarl
push
lock
inc
inc
lahf
xchg
lock
dec
ja
adc
in
sub
rol
push
adc
or
sub
push
fildll
mov
cltd
inc
mov
mov
adc
xor
js
in
fucomi
sub
push
dec
jne
fistpl
adc
or
or
ss
decb
and
cmp
fldl
mov
lcall
std
jl
je
sub
test
dec
sub
sbb
in
pop
sub
dec
adcl
jmp
xor
pop
push
and
and
dec
les
mov
clc
testl
scas
or
outsl
adc
sbb
loope
mov
dec
iret
inc
xchg
pop
lret
mov
shlb
pop
popa
out
xor
add
mov
data16
xlat
mov
movb
or
and
movsb
sub
cld
sub
pusha
lock
cmpsl
out
push
lock
and
xor
fnstcw
mov
add
dec
xor
mov
jecxz
in
fimull
push
jo
les
mov
dec
clc
cli
lea
orl
scas
mov
jae
xlat
cmp
andl
and
mov
orl
xchg
testb
loopne
dec
js
fwait
add
add
hlt
sub
mov
dec
lods
and
dec
xchg
pop
push
nop
fimuls
hlt
aad
mov
inc
test
adc
insb
daa
or
sbb
xchg
in
dec
add
add
add
int
xchg
scas
xor
push
ret
pop
sti
dec
mov
aad
dec
rcr
mov
xchg
rclb
aad
fiadds
jno
jb
outsb
loope
addl
clc
int
jl
int
xchg
inc
mov
mov
sbb
mov
movsl
add
inc
mov
rcl
mov
repz
cwtl
inc
insb
fistps
fstpt
imul
clc
pop
jns
clc
add
popf
add
add
sub
xor
jmp
add
mov
jecxz
fsubrl
stos
inc
lea
test
mov
nop
jle
dec
out
jne
sbb
cli
sarb
xor
loopne
loop
mov
adc
sub
or
adc
faddl
adc
pop
loop
jge
adc
mov
push
out
dec
sub
inc
loopne
add
sub
sbb
ja
xchg
dec
popa
loopne
lret
loope
pusha
inc
add
scas
jo
adcb
pop
xor
cmp
fistpll
das
sbb
add
or
addb
pop
or
adc
or
pop
adc
lods
mov
jbe
daa
pop
cmp
js
add
mov
les
mov
mov
dec
in
aad
xlat
incl
iret
fisttps
jno
js
arpl
popf
xchg
push
mov
xchg
outsb
push
js
scas
dec
xor
xchg
jno
call
je
cmp
jl
and
cmpb
fmul
test
jle
hlt
cmpsl
add
bound
jb
stc
icebp
mov
ret
movsb
repnz
cld
mov
leave
movsl
mov
sbb
ror
mov
sti
jo
push
enter
jmp
pop
cs
rclb
sbb
repz
push
sar
shlb
cld
fdivs
jbe
sub
out
negl
mov
outsl
push
loopne
rcl
cld
jbe
and
xor
adc
pop
lret
aam
jmp
out
in
dec
fstpt
mov
inc
dec
lret
adc
jnp
pushf
insb
pop
out
add
loopne
cmp
aad
aas
stos
inc
clc
pusha
add
aad
sbb
add
sbb
lock
and
sub
add
test
je
lret
jp
cli
ja
ja
lea
mov
jo
sub
mov
push
mov
shl
jge
push
jp
push
test
popf
jne
mov
mov
add
stc
inc
outsl
mov
rol
sub
aas
inc
or
adc
in
fcoms
mov
add
inc
ss
stos
cmp
test
pandn
xor
lods
clc
adc
imul
or
sbb
push
scas
push
outsb
faddl
cltd
dec
cmp
cltd
xchg
mov
adc
cs
cmpsl
sub
cmp
adc
add
pop
pop
popa
adcl
test
and
cld
in
scas
add
sbbb
fstp
pop
dec
stc
sbb
mov
push
outsb
sub
hlt
sbb
cs
lahf
cmp
inc
enter
jnp
sti
sub
jecxz
mov
insb
mov
aam
mov
pop
addr16
or
lock
push
cmpsb
in
inc
pusha
out
or
mov
dec
push
test
mov
mov
xor
clc
add
sub
movsl
mov
ljmp
jo
popa
jl
incb
xor
dec
call
das
int3
pusha
movsb
pop
add
in
or
call
jo
adc
or
sbb
jno
icebp
lret
cmp
rclb
pop
fcmovb
icebp
mov
sti
add
cmp
dec
mov
sbb
xor
inc
xchg
outsb
insl
in
push
pop
mov
cli
les
mov
push
mov
mov
inc
addr16
or
mov
mov
in
jno
cld
mov
lds
out
jle
xchg
cmp
mov
add
mov
aas
lcall
or
mov
pop
mov
push
and
push
in
sbb
jne
sub
es
scas
pop
pop
inc
mov
movsb
cmp
push
mov
aaa
jo
xchg
push
leave
mov
dec
pop
mov
mov
push
mov
or
adc
fs
ret
repz
xlat
cs
cli
dec
inc
xor
icebp
lret
push
ret
str
mov
aad
popf
push
loop
jp
dec
mov
xchg
bound
mov
mov
mov
sub
jbe
lds
push
movsl
hlt
adc
inc
push
ljmp
lods
jmp
dec
je
adc
mov
aad
bound
inc
imul
test
cmc
enter
inc
out
ljmp
push
jbe
enter
mov
sub
jmp
mov
push
out
sar
loope
pop
in
daa
dec
push
cmp
pusha
mov
inc
sbb
mov
mov
jle
repz
cli
fnstcw
lods
sti
insb
cmpsl
xor
dec
add
sbb
inc
sbb
addb
adcl
je
fstl
fidivrs
pushf
jno
outsb
loopne
icebp
mov
jle
jmp
push
addl
mov
sbb
jne
dec
fwait
fs
add
inc
aad
loope
inc
bound
icebp
ficompl
push
mov
scas
mov
jge
dec
pop
mov
scas
sub
dec
sbb
pop
mov
lods
xchg
int
lcall
sahf
pop
add
adc
add
fcmovne
lahf
jbe
xchg
mov
mov
je
inc
push
sbb
repz
mov
add
imul
add
xchg
xor
sbb
aam
fwait
lahf
les
rolb
cltd
enter
in
insb
xor
outsb
fsubrs
ja
mov
sbb
shlb
outsb
and
sti
and
popf
in
call
jae
pop
fistps
jb
cmp
cmp
movsl
hlt
aas
lret
cld
jo
dec
dec
cli
fists
les
mov
aam
and
hlt
xchg
cmp
std
scas
push
push
sub
fwait
les
sbb
popa
or
test
fldt
es
shl
pop
or
add
cmp
add
mov
lcall
stos
outsb
clc
sti
jg
loop
and
inc
inc
jp
inc
dec
mov
fwait
inc
mov
jge
pop
mov
ss
and
sbb
inc
pop
adc
loopne
aad
lahf
mov
push
fidivrl
cli
fs
pop
fldenv
pop
mov
xor
mov
scas
fldl
mov
pop
mov
scas
imul
out
cmc
inc
jl
sbb
mov
cmp
icebp
or
cmp
lcall
mov
pop
jl
scas
sub
adc
sub
testb
xchg
dec
test
inc
and
add
loop
cmp
movsb
cs
mov
pop
xor
fcoml
xchg
sahf
les
jbe
jecxz
fidivrs
and
dec
xchg
inc
jge
lret
pop
or
inc
outsl
lods
iret
adc
fcom
inc
push
mov
rclb
je
or
test
sbb
test
test
fisubrs
xchg
xchg
sbb
inc
addr16
push
fsubr
pop
addr16
xor
out
push
ret
and
mov
and
add
add
pop
je
fwait
dec
add
aas
mov
sbb
or
sub
imul
mov
roll
sbb
xchg
cmp
mov
and
adcl
imul
cld
push
add
cs
outsl
lock
add
push
outsl
pop
adc
test
push
adc
movsb
test
add
dec
pop
icebp
js
pop
mov
add
push
js
shl
je
mov
mov
bound
adc
sub
inc
add
insl
into
test
pop
cmpl
sarl
and
data16
nop
mov
xor
pop
fs
mov
cmc
and
roll
jg
loopne
les
out
xchg
ret
sbb
hlt
jge
aam
int3
sbb
and
xlat
xchg
aam
pop
fdiv
xchg
ficoml
adc
scas
xchg
xchg
sub
test
call
add
sub
ljmp
xchg
in
jnp
pop
sbb
inc
imul
and
jp
push
out
mov
xchg
lods
push
mov
sbb
jle
mov
shrb
mov
mov
mov
pop
fidivrl
hlt
mov
xor
call
xchg
sahf
cmp
outsl
pop
ret
nop
andb
mov
mov
out
aaa
dec
testl
lods
mov
mov
jo
fistpll
dec
or
fwait
aas
pop
ljmp
in
or
je
and
aad
xor
loopne
dec
mov
mov
out
testb
shrb
add
bound
push
ss
xor
xchg
xchg
int3
test
pop
out
jp
mov
mov
ret
rclb
jg
pop
into
sbb
lds
xor
ret
mov
test
sbb
and
and
pop
push
xchg
rcr
ljmp
mov
pop
cltd
sub
lds
and
shrb
arpl
std
pop
test
mov
daa
out
sbb
loope
mov
inc
add
jae
lods
or
test
inc
sbb
push
aam
xor
cmp
addr16
push
cmp
jl
in
test
add
test
mov
inc
or
mov
dec
xorl
xor
cmp
mov
cmovns
lahf
xor
bswap
cld
icebp
mov
and
movlps
xor
lock
cwtl
movsb
addl
inc
clc
dec
jne
inc
into
testl
jl
xor
or
test
hlt
cltd
xchg
jo
mov
lods
lds
lret
mov
inc
nop
sahf
frstor
roll
xor
out
cmp
leave
call
loop
pop
enter
int3
test
lods
add
pop
ljmp
push
and
pop
shrb
mov
sahf
outsl
ss
aam
out
inc
mov
and
xchg
inc
dec
jmp
add
cmp
clc
add
push
out
xor
mov
add
mov
xor
call
mov
or
adc
cmp
mov
insl
leave
mov
and
sbb
jl
xchg
mov
jge
cli
jg
ja
imul
and
push
xchg
dec
cmpsl
rcll
xor
or
in
leave
adc
inc
push
adc
sub
push
mov
cwtl
mov
sbb
cmpb
arpl
jo
clc
jl
mov
lret
test
xor
xchg
add
lahf
sbb
jb
aam
jns
rclb
loopne
test
pop
dec
sub
gs
sub
ret
inc
mov
rcl
cmp
jo
mov
jecxz
xchg
jbe
push
push
jo
jle
ffreep
popf
outsb
test
adc
loope
test
mov
out
lock
adc
test
out
insb
jge,pt
mov
add
std
stos
ret
and
xor
adc
pop
adc
jno
adc
sub
lock
xor
ret
dec
mov
inc
je
xchg
inc
cmp
mov
fildll
daa
dec
pop
sub
hlt
adcb
and
jae
rol
push
in
push
mov
or
dec
sub
add
cwtl
test
inc
jl
test
cmp
rclb
jecxz
xchg
pop
in
dec
dec
push
cltd
lods
adc
je
dec
sbb
add
mov
push
xchg
popa
jno
or
push
adc
daa
clc
fsub
dec
cli
pop
push
add
adc
jg
push
inc
push
das
test
cmp
cld
xor
cmpsb
les
dec
pop
loope
mov
pop
dec
dec
or
pop
enter
or
test
jns
xchg
ret
repz
jns
insl
fstl
lret
and
lret
fcoms
sub
popf
jge
add
and
jg
sbb
sub
pinsrw
clc
fdivp
jbe
dec
inc
inc
pop
es
xlat
jp
lds
xor
sbb
lods
push
fnstcw
pop
movsl
mov
sahf
push
stc
loope
addb
jo
push
shl
in
xlat
add
add
push
cli
je
jns,pt
push
inc
aaa
stos
and
testb
mov
std
or
push
pop
inc
pop
out
xchg
cli
aas
dec
lahf
jno
xchg
adc
mov
push
stos
outsl
movsb
adc
or
inc
jmp
pop
add
mov
leave
cmp
mov
filds
outsb
mov
pop
mov
jns
rol
dec
aam
xchg
out
mov
cmpsb
hlt
adc
addl
and
je
jno
mov
outsl
inc
mov
loopne
cmp
push
add
iret
xor
jo
or
xchg
ficompl
les
mov
add
rcrl
enter
std
adc
xchg
mov
mov
stos
incl
mov
inc
jl
roll
call
or
sti
jge
dec
aas
rorb
aad
orb
negb
dec
mov
add
sbb
pop
pop
jo
fcomps
out
insl
lock
or
and
fwait
pop
lret
xchg
lmsw
pop
fsubl
cmp
pop
push
mov
pop
sbb
dec
lret
mov
nop
mov
icebp
and
and
mov
fidivrs
jg
sub
daa
loopne
pop
cmp
sub
jg
or
push
nop
add
ja
loop
inc
xor
lcall
int
mov
cmp
in
xchg
adcb
imul
xor
dec
jl
mov
es
push
push
xor
sub
add
jl
fmul
jp
xor
cmp
adc
adc
adc
shrb
test
aas
mov
jg
stos
jb
ret
jne
xchg
and
and
and
popa
fdivl
jle
add
push
sub
pop
testb
into
push
aad
jle
jbe
test
movb
mov
clc
mov
jmp
sbb
cwtl
add
ror
stos
cli
fsub
push
in
or
icebp
xchg
cmpb
sbb
pop
sti
lds
icebp
push
cwtl
push
xchg
imul
mov
scas
into
mov
xor
dec
push
mov
outsl
push
sbb
jg
dec
andb
mov
pop
outsl
mov
xor
dec
inc
jo
pop
aaa
jnp
es
mov
and
outsb
jl
movsb
and
in
dec
jp
xor
pop
in
repz
pushf
jmp
int3
ja
inc
inc
push
sub
mov
jo
fistpll
cmp
test
inc
hlt
jo
aad
inc
sbb
mov
dec
movb
inc
ss
jmp
pop
jle
ds
add
push
xchg
push
adc
ja
test
test
stos
push
aaa
sbb
lds
mov
mov
adc
sahf
loop
and
mov
cs
in
mov
call
cmp
sahf
mov
out
add
dec
lds
and
add
cmp
mov
mov
test
cltd
mov
rorb
jae
cs
mov
xor
mov
ret
mov
movsb
mov
clc
push
add
out
hlt
gs
add
mov
inc
push
lret
mov
es
inc
and
loope
xchg
mov
daa
mov
movsl
iret
cs
test
je
dec
adc
cmpsl
js
mov
shl
lock
scas
push
jle
add
dec
into
pop
adc
xchg
loop
or
jge
icebp
insb
mov
or
stos
fdivr
les
fs
jmp
cmp
hlt
movsl
xchg
ficompl
es
movsl
push
outsb
push
clc
adc
repz
dec
js
repz
jp
std
sar
movsl
add
adc
pop
sub
subb
rolb
ficoml
sarl
push
add
ss
or
fstl
xchg
lods
xor
cmc
and
xchg
dec
sub
fmul
jle
adcl
xor
outsl
mov
pop
cmpb
std
dec
jg
jne
xchg
sub
pop
test
minps
xchg
cwtl
loopne
jo
or
jno
push
mov
sub
dec
adc
mov
gs
jmp
test
cmc
in
rorl
sti
enter
inc
bound
lods
push
std
push
xchg
data16
inc
dec
lock
xchg
lds
jns
jp
std
loop
test
in
outsl
pop
jl
stc
sub
cwtl
jp
lret
ljmp
out
test
jns
icebp
in
push
and
hlt
sbb
and
fistps
sbb
aas
xlat
push
mov
xchg
fsubs
mov
sub
mov
cmp
add
mov
mov
fmul
push
scas
xchg
jno
ljmp
pusha
push
aas
inc
stos
lods
outsb
enter
fiaddl
jle
pop
pop
lcall
sbb
and
xor
data16
out
pop
mov
sbb
pop
xchg
and
test
push
and
sub
or
test
scas
dec
mov
aaa
mov
out
pop
stos
es
push
mov
outsl
lret
jbe
and
movsb
xchg
nop
imul
in
or
das
insl
dec
inc
xchg
jp
call
or
pushf
mov
mov
loope
out
ret
adc
add
sbb
mov
in
add
pop
xchg
xchg
stos
repnz
cltd
or
aaa
fs
cmp
or
cmp
inc
orb
int
pop
dec
fcompl
loop
mov
clc
sub
loopne
dec
ljmp
outsb
push
sti
mov
mov
sub
pop
incl
sub
sub
sbb
push
inc
push
push
stos
mov
xchg
mov
popa
fsubl
frstor
inc
push
jo
into
lock
arpl
mov
push
add
stos
lret
insb
mov
sbb
fincstp
iret
pop
ret
push
leave
xor
and
or
xor
les
rcl
das
xor
jl
es
popf
push
or
test
sbb
repnz
mov
and
mov
out
mov
jg
loope
mov
dec
inc
fidivrl
sub
cmpsb
sbb
push
aam
enter
stos
inc
mov
cmp
dec
iret
ljmp
test
inc
mov
mov
xchg
pop
and
das
xor
jb
add
pop
cmp
in
xor
xchg
dec
out
mov
sbb
push
pop
fsubp
cmc
jmp
repz
mov
pop
cmp
jbe
and
jg
jbe
ret
xor
cmp
push
iret
pop
mov
push
cli
jp
xor
jle
ret
adc
fwait
adc
pusha
dec
je
xor
cld
or
mov
jns
cmp
xchg
dec
or
jp
push
les
cmpsb
fdivs
push
adc
mov
pop
cmc
inc
jae
je
pop
mov
test
xor
jg
inc
mov
sub
fimull
mov
mov
add
pop
or
sbb
inc
and
cmp
sub
inc
xor
inc
pop
push
xor
mov
out
and
pushf
add
dec
jno
lods
lea
dec
out
push
xchg
addr16
mov
sub
xchg
and
push
add
xchg
xchg
fwait
shl
push
stos
clc
ficomps
push
push
rorl
shrb
jbe
dec
push
inc
inc
dec
out
push
push
or
jg
pop
add
and
pusha
or
stos
push
daa
push
daa
jp
add
rolb
and
js
lret
jp
mov
pop
int
add
inc
lods
sbb
mov
lds
mov
cmp
rolb
loope
cmc
mov
test
insb
clc
mov
mov
out
adc
or
and
rolb
jmp
pop
insb
fldl
or
jmp
cmp
inc
data16
cmpsb
popf
or
add
or
pop
jge
push
cmp
sbb
mov
and
repnz
push
mov
fidivl
aam
in
in
mov
adc
mov
cmp
inc
or
sbb
and
dec
movsb
mov
xchg
xor
pop
shll
imul
repz
lods
jnp
jo
bound
mov
and
jecxz
pop
shl
sbb
stos
jle
add
mov
cmpsb
scas
shlb
pop
andb
mov
fsubrs
scas
cmc
shll
mov
and
icebp
gs
jo
and
mov
push
sbbl
push
bound
mov
mov
push
pop
cli
xchg
ljmp
jge
push
pop
jl
test
into
mov
inc
and
pop
dec
movsb
adc
mov
inc
or
mov
xchg
jb
movsl
cs
cmp
push
outsl
lods
jne
ret
sub
or
jae
outsb
mov
sbb
loop
adc
push
cmc
jns
lods
ret
popa
add
test
fwait
clc
popa
xchg
pop
lea
inc
ja
and
mov
push
sub
dec
pop
insl
or
fmuls
and
adc
mov
sbb
out
mov
call
pusha
rol
out
lret
jbe
cmp
inc
mov
push
sub
insb
dec
pop
mov
lahf
cwtl
aad
sarb
dec
and
test
push
mov
pcmpeqw
jnp
xchg
pusha
jno
adc
sti
les
inc
jl
sub
sbb
packsswb
push
lret
mov
push
clc
pop
jmp
pusha
push
cs
push
dec
jb
ds
cmc
addr16
sbb
cmp
mov
mov
or
test
scas
fimuls
and
mov
fwait
lcall
add
add
jge
xchg
cmp
imul
sbb
mov
sbb
cld
xor
dec
das
mov
je
or
add
aas
inc
subl
jmp
push
ret
decb
xchg
lods
lret
fstl
sub
mov
xlat
movsb
shlb
lods
inc
shl
push
sub
icebp
fstpl
movl
inc
shll
adc
jle
cld
jle
add
push
dec
push
outsl
jmp
sbb
rorl
outsb
fildll
jnp
sarb
inc
xchg
mov
xchg
in
lds
or
loop
fdivp
cmpsl
cmp
and
fs
and
testl
push
xchg
mov
loopne
psraw
fidivrl
push
call
inc
incb
data16
and
xor
cmp
je
xchg
frstor
pop
iret
hlt
add
lret
mov
pop
movsl
sbbb
jp
pop
icebp
adc
xor
pusha
in
ds
inc
clc
rolb
lret
push
mov
pop
daa
jnp
add
push
cli
loopne
mov
addr16
rcll
hlt
movsl
sbb
mov
std
cmpsw
test
and
icebp
fucomip
cmp
sub
ja
mov
mov
rcr
inc
pusha
push
mov
lods
push
push
int3
push
dec
xlat
add
push
or
adc
push
mov
shl
pop
add
push
test
loopne
add
mov
fiaddl
icebp
loopne
stos
lds
cltd
xchg
jl
insb
dec
out
enter
in
xlat
inc
clc
clc
dec
inc
jp
pop
clc
jo
cmc
push
sub
cmp
cmpb
sarl
fisubs
movsb
or
lea
addr16
mov
arpl
mov
stos
and
jl
push
or
nop
xchg
xor
es
rcll
inc
lods
pusha
mov
insb
adc
cmp
jb
in
xor
mov
test
adc
mov
aas
pop
push
out
aam
subl
push
ret
mov
adc
sbb
fucomip
arpl
or
hlt
inc
call
loopne
lea
jge
lcall
adc
dec
repnz
xorb
mov
inc
imul
or
cwtl
xlat
xor
push
lock
push
dec
movsb
add
sub
or
adc
cmp
and
adc
scas
iret
xchg
mov
ret
push
or
inc
ja
jl
pusha
pop
adc
stos
push
cmp
push
es
sti
mov
and
fistps
in
mov
insl
test
leave
rorb
in
imulb
or
fnsave
cwtl
rclb
sub
lahf
test
outsb
iret
push
loope
movb
sub
push
lret
hlt
jns
mov
scas
jg
push
pop
mov
lret
pop
mov
jb
mov
pop
or
push
push
mov
pop
ror
and
mov
push
cld
aas
mov
iret
add
xchg
sahf
inc
cmp
inc
loopne
imul
lods
loopne,pt
mov
xor
sbb
cwtl
divb
cmpl
repz
sub
out
add
sub
mov
daa
adc
insl
mov
daa
std
outsb
push
sub
ss
lcall
daa
iret
and
cmp
add
movsb
jle
jp
or
es
sub
js
jle
scas
movsb
inc
pushf
add
stos
fs
jb
fwait
rolb
mov
push
dec
sbb
or
pop
inc
and
or
pop
pop
mov
pop
sahf
in
push
jbe
mov
adc
push
mov
or
cmp
inc
cld
stc
inc
cmp
ljmp
cld
mov
sub
inc
outsl
push
add
sub
add
push
jnp
out
mov
sub
dec
or
xchg
dec
rolb
enter
testl
push
out
iret
cmpsl
pop
xor
sbb
scas
lods
out
icebp
cmpsb
push
sti
pop
mov
scas
add
mov
or
xchg
cmp
data16
sbb
mov
lahf
xchg
dec
xlat
inc
mov
push
jo
js
mov
and
lcall
sti
test
pop
jp
fwait
cld
add
add
pop
inc
or
jo
mov
das
sbb
fdivs
repz
pop
jg
sbb
lea
out
lea
test
xorb
jb
shufps
mov
sub
shrb
loop
aam
pop
test
mov
jno
xor
fs
push
jo
cmpsb
ret
scas
cld
scas
inc
out
mov
adc
adc
or
stos
mov
jl
roll
xchg
in
mov
push
lahf
pop
jp
cs
loop
sbbb
sub
mov
icebp
dec
int3
test
lahf
push
mov
ds
pop
pop
loope
mov
xchg
push
lock
xchg
sarb
sbb
mov
sti
bound
mov
sub
push
mov
ret
add
das
popf
push
add
inc
pop
movsb
mov
int3
mov
lret
jg
sarb
rolb
mov
push
add
pop
inc
mov
out
movsb
pop
push
aad
dec
push
lret
sub
xchg
push
pop
sub
aad
pop
shlb
hlt
adc
inc
ja
inc
dec
jmp
jle
push
pop
pop
xchg
jo
loop
lods
gs
inc
push
outsl
and
std
mov
mov
or
jp
sub
pushf
adc
gs
mov
jno
xchg
insb
cmp
pop
js
dec
arpl
cmp
jnp
add
xchg
int
les
or
jno
in
notl
aaa
loopne
lock
int3
sbb
cwtl
rclb
push
fisubrs
lods
jle
popa
push
les
add
cmpsb
inc
cmp
es
popf
enter
mov
orl
shrb
setp
imul
pop
cli
mov
push
bound
in
add
pop
mov
xor
inc
inc
pop
adc
xor
dec
outsl
movsb
pop
dec
rep
pop
jge
pop
mov
jo
js
fildll
ret
pop
cmc
arpl
in
adc
rcrb
pop
les
dec
fmul
dec
mov
cmp
enter
xor
push
repz
fimuls
ljmp
push
out
rolb
das
mov
in
push
push
xor
mov
mov
nop
sarb
sbb
xchg
stos
and
pop
jb
sbb
add
add
adc
int3
push
jns
notl
sbb
aad
and
sub
out
roll
push
imull
pop
add
add
imul
mov
daa
jecxz
push
add
loopne
mov
call
leave
xchg
loop
sub
rolb
dec
loope
imul
add
mov
mov
data16
sub
imul
iret
add
or
into
lods
jno
imul
ret
pop
outsb
pushf
push
pop
xchg
nop
jnp
pop
jno
fidivs
incb
pop
sbbb
popf
hlt
dec
mov
jae
mov
or
mov
rcl
jbe
cmpsb
aad
jns
sbb
sbb
or
cmpsb
ficoml
lock
jo
fsubs
xchg
pop
or
dec
pushf
roll
js
add
sbbl
mov
inc
sbb
addr16
clc
std
fisttpl
movsb
sbb
lds
pop
and
ds
out
les
dec
sub
movsl
mov
aaa
ret
or
jecxz
and
jae
add
pushl
pushf
jl
out
fildl
xchg
rcrl
pop
lret
mov
fcmovbe
test
hlt
imul
jne
ds
imul
mov
or
imul
stos
ret
fsub
jmp
and
push
aam
or
lea
psubd
jnp
mov
bound
add
xchg
push
mov
inc
movsl
into
or
aam
or
lahf
xor
mov
or
sbb
mov
push
test
outsb
push
mov
sbb
mov
jle
data16
shll
push
adc
inc
mulb
les
pop
mov
cwtl
test
jne
mov
rolb
mov
repnz
push
lcall
sub
iret
adc
inc
inc
fldcw
mov
fisttpl
pop
es
rcll
adc
push
dec
nop
push
mov
inc
mov
movsb
rorl
and
adc
dec
or
enter
push
rcrl
pushf
ret
loope
mov
jmp
sbb
imul
fdivrl
and
roll
inc
sbb
adc
je
inc
push
add
and
pop
push
insb
je
fdivrl
cmp
out
sbb
clc
cli
push
mov
add
sbb
pop
rclb
adc
stc
dec
loopne
imul
xlat
add
stos
adc
loope
inc
mov
add
dec
xor
mov
insb
mov
clc
ss
into
jo
sbb
outsb
lea
cltd
add
aas
cld
pop
mov
mov
rorb
mov
pop
adc
clc
sti
xor
or
popa
jmp
icebp
xchg
push
inc
cmpsl
test
hlt
add
enter
mov
sub
imul
cmp
scas
test
loopne
mov
out
xchg
mov
mov
inc
inc
mov
pop
enter
je
clc
stc
add
inc
cmp
cmp
jmp
scas
xchg
cmpsb
inc
repnz
xchg
aam
nop
and
lret
mov
outsb
add
jmp
aaa
pop
jmp
js
push
inc
out
loopne
mov
push
mov
lods
jg
loopne
mov
and
add
or
xor
adcl
stos
gs
jp
outsb
pop
mov
mov
adc
sbb
fldt
or
sbb
adc
add
cmp
pop
adc
lods
sbb
les
scas
xchg
in
ret
rclb
scas
xor
jge
mov
fs
pop
cmp
dec
and
aad
negb
jmp
add
pcmpeqw
or
outsb
les
or
ret
in
mov
sub
ds
arpl
cltd
push
mov
test
sub
leave
frstor
mov
cmp
xchg
test
fcmove
cmp
and
jnp
ror
aaa
push
sbb
jns
mov
dec
push
stos
fistps
rcrl
bound
in
push
adc
shld
cmpsb
sarb
add
add
lods
mov
dec
sbb
test
jge
jp
outsb
enter
data16
push
mov
mov
into
ss
jbe
in
inc
repnz
add
add
imul
inc
movl
cmp
insb
adc
cwtl
jns
scas
xorb
sbbb
mov
add
ds
hlt
daa
push
jae
in
inc
xchg
test
test
xchg
xchg
adc
sarl
sbbb
cmp
add
mov
mov
in
gs
xchg
sbb
and
pop
dec
test
pop
les
in
pop
push
sarl
or
loopne
loop
popf
push
inc
pop
data16
inc
sub
inc
jl
push
cmp
inc
pushl
pmuludq
adc
les
fnsave
pop
cmpsb
outsb
scas
push
cld
clc
push
repz
cmpsl
dec
pusha
pop
jmp
sub
outsb
sbb
clc
add
hlt
and
xchg
xchg
ljmp
out
xor
push
pop
js
loopne
cmp
in
test
ja
dec
loope
shl
dec
adcl
imul
ljmp
inc
jl
cmp
mov
fs
rol
push
xchg
aad
mov
out
rorl
lret
pop
jo
imul
xor
sbb
aad
inc
mov
mov
arpl
aad
in
pop
loopne
adc
mov
inc
mov
pop
divl
adc
adc
cmp
adc
inc
cmc
mov
incl
add
pop
fisttpl
jecxz
movsb
mov
jmp
imul
mov
inc
arpl
adc
sub
cmp
push
stos
dec
push
jo
adc
icebp
sub
sbb
pushf
sahf
scas
cmp
jo
and
pmaxsw
and
or
push
push
outsl
sti
stc
dec
aad
orb
das
popa
pushf
bound
sarb
loopne
and
das
adc
adc
in
insb
aad
cvtps2pd
pop
pop
mov
add
mov
pop
shlb
sbbb
pusha
dec
clc
dec
xor
xor
rolb
mov
mov
out
in
daa
mov
dec
cmp
add
cs
clc
pop
sbb
leave
mov
shrl
mov
fcmovnb
out
pop
inc
aam
add
mov
rcll
icebp
repnz
inc
add
fnstcw
push
mov
mov
lods
test
shr
jp
mov
push
insl
notb
in
fs
pop
cld
outsl
mov
adc
push
cmpsl
xchg
jnp
imul
xor
leave
shrb
inc
push
aaa
lods
adc
ss
add
fdivrl
or
repz
push
insb
lahf
xchg
adc
jmp
lock
jle
faddl
pop
mov
inc
xchg
dec
incb
add
or
cmpsl
sub
and
mov
push
call
lds
rcrb
and
inc
or
fwait
lock
dec
push
fcmovu
ljmp
push
mov
lods
inc
repnz
aam
xchg
sub
lret
ret
repnz
or
push
lods
adc
fldcw
lret
mov
sahf
push
aad
adc
dec
dec
repz
xor
out
mov
inc
jge
dec
jge
pop
adc
in
dec
sbb
jo
in
mov
rclb
cld
enter
fwait
mov
paddusb
xchg
pusha
mov
cmp
dec
in
out
mov
push
subl
xor
jg
sahf
rol
adc
sahf
ljmp
lock
push
scas
inc
fsub
out
sahf
out
ret
les
cmp
cmp
cli
je
xchg
clc
stc
pushf
bndstx
or
dec
mov
mov
jbe
add
ds
movsl
add
and
mov
js
sub
fistpl
scas
mov
adc
scas
imul
or
sub
or
cwtl
in
cli
test
ret
and
mov
mov
or
test
imul
pop
ret
and
es
scas
movsb
push
test
jo
clc
mov
jge
cpuid
jb
test
push
cmc
dec
scas
xchg
outsb
add
pop
aaa
or
in
inc
xchg
mov
jmp
dec
gs
ret
inc
and
add
clc
or
rolb
or
push
cmp
xchg
and
xchg
add
sub
test
xchg
mov
pop
sbb
xor
mov
jo
lret
or
inc
aas
rorl
pushf
fdivr
cmpsl
mov
adc
stos
orb
or
adc
xchg
out
mov
je
add
cmpsb
movsb
adc
or
push
shl
and
fcom
add
mov
dec
jnp
mov
sahf
pop
cli
mov
pop
inc
fstl
cwtl
sub
stos
push
sbb
fwait
hlt
loopne
mov
add
test
movl
and
mov
xchg
in
sbb
pop
fldl
xor
lret
jae
sbb
inc
call
and
lcall
add
mov
jl
loop
inc
xchg
je
dec
add
mov
push
mov
pop
dec
in
cltd
cmpsb
aas
lret
cmp
int3
jns
out
and
sub
fcmovbe
clc
xchg
sbb
dec
inc
cwtl
aas
mov
imul
pop
mov
inc
inc
push
ret
jp
push
jbe
pop
test
ret
xchg
pushf
pop
mov
mov
push
xor
jnp
inc
pop
jmp
jle
mul
wrmsr
test
scas
out
jns
decb
inc
sbb
sub
xchg
xchg
mov
dec
xlat
inc
mov
ret
fsubs
cmpsl
dec
adcb
cmpsb
or
xlat
rcrb
pop
dec
jnp
outsl
pop
stc
mov
sbbb
mov
push
ds
loopne
pop
not
sbb
cltd
enter
cmc
outsl
jo
loope
aad
jnp
je
arpl
adc
xchg
pop
inc
stc
pop
xor
push
pop
pushf
xchg
fdivs
cmp
inc
popf
or
adc
cmp
jmp
adcb
xchg
imul
push
add
add
mov
xchg
pop
lock
aad
cmp
movsl
sub
adc
xor
int
ljmp
mov
adc
push
test
jnp
sub
loope
push
jae
xor
xor
daa
js
nop
out
setns
xchg
sahf
sbb
pop
mov
mov
xchg
loopne
popf
popa
sub
jecxz
push
mulb
xchg
icebp
out
aam
inc
mov
add
inc
aad
jge
xor
in
jle,pn
cmp
xor
popf
pusha
mov
jmp
cs
push
lcall
ret
jae
inc
sbb
push
mov
dec
lods
or
pop
icebp
add
or
inc
or
jge
jp
push
lock
mov
push
mov
add
sub
jo
testl
cwtl
sub
sub
sbb
insb
lret
sub
outsb
imul
jns
cmp
shlb
pop
cmpsb
aad
adc
adc
out
adc
mov
imul
leave
mov
push
icebp
pop
cmpsb
cld
mov
in
in
adc
sahf
rolb
mov
cmp
arpl
shl
sub
ss
mov
out
js
arpl
inc
int3
loope
push
xor
sar
mov
lock
sbb
mov
push
adc
sbbl
subb
out
sbb
es
cmp
fucomip
dec
outsb
fists
cmc
fnstenv
push
add
pop
arpl
test
das
mov
insl
or
jp
cld
mov
adc
sub
and
popf
jecxz
inc
pusha
in
es
ret
pushf
in
push
mov
les
push
fisubrs
repnz
adc
pushf
ret
or
call
punpckhdq
push
pop
add
aam
jb
lahf
psrlq
cli
push
sbb
loopne
adc
inc
jmp
loopne
inc
lods
sbb
xchg
into
pop
xor
xlat
cld
rolb
lock
adc
lahf
les
insb
outsb
mov
adc
cltd
or
mov
mov
xor
xchg
push
pop
jmp
push
sbb
adc
scas
icebp
pop
push
mov
nop
lods
adc
cmp
loopne
adc
lcall
pushf
xchg
or
imul
push
mov
shrb
lcall
or
subl
jnp
pushl
or
ss
push
mov
mov
cmpl
xchg
add
mov
jne
js
lock
sbb
sbb
dec
int
inc
daa
or
mov
and
mov
cmp
mov
and
mov
shrb
dec
push
lret
and
jl
ficompl
push
mov
js
dec
mov
fisubrs
dec
mov
dec
mov
fs
pusha
ds
movsl
inc
leave
lcall
add
popf
ljmp
call
jmp
sbb
or
je
std
lock
lods
lock
fadd
push
sbbl
mov
pushf
flds
in
mov
cmp
xor
hlt
das
sbbb
inc
clc
std
fisubl
xor
or
hlt
fneni(8087
stos
aaa
jle
int3
xchg
xor
push
ret
mov
push
mov
lret
clc
push
pop
test
dec
fildl
sbb
ret
les
or
or
sbbb
mov
mov
pop
ljmp
jno
andl
add
imul
test
fs
pop
or
insl
or
cwtl
inc
xor
push
dec
push
in
pop
mov
sbb
inc
es
mov
lock
inc
insb
movsl
iret
loope
lock
adc
xor
dec
pop
fstp
adc
sbb
adc
popa
mov
push
and
lock
push
cmp
xchg
jno
jo
mov
pop
sbb
out
add
or
js
cmp
mov
xlat
mov
std
cmp
movb
lock
int3
leave
lea
mov
imull
orb
adc
add
mov
mov
aaa
loopne
add
mov
add
cmp
mov
jp
enter
mov
xchg
xor
dec
lods
mov
inc
lret
jl
xor
rorl
push
cwtl
scas
in
les
imull
sbb
sbb
push
cmp
mov
lock
test
cmp
and
inc
lods
mov
fwait
sar
lcall
js
mov
bound
sub
mov
mov
mov
sub
popf
dec
int3
mov
test
rolb
sub
xor
leave
push
adc
pop
sub
and
ss
sbb
cmp
insb
lea
mov
enter
dec
mov
call
mov
xchg
inc
test
insl
and
push
xchg
push
scas
ret
arpl
ds
add
sar
mov
test
xorb
inc
andb
arpl
sub
or
add
mov
js
loop
pop
jl
ljmp
sub
pop
fsubs
and
orl
hlt
inc
in
push
or
stos
ret
jp
mov
out
jge
mov
add
mov
ret
in
leave
pop
lret
xchg
sbb
or
push
negb
fists
jecxz
call
mov
loop
push
mov
es
push
sub
sti
adc
sahf
dec
cmpb
mov
cld
mov
dec
jae
add
add
sub
adc
mov
out
mov
je
sub
ljmp
sti
xor
sbb
push
adc
sbb
jbe
push
mov
mov
jg
lret
dec
inc
clc
lds
push
popf
outsb
dec
pop
das
popa
pop
call
push
jo
sarl
mov
push
cwtl
inc
out
pushf
int
xor
or
dec
clc
loope
fildl
pop
loop
rorb
nop
adc
mov
sub
jmp
sbb
push
sub
notb
shlb
enter
or
ja
into
add
shlb
pop
mov
mov
sahf
hlt
cmc
jmp
inc
fbld
xchg
retw
adc
add
ss
fcmovu
sbb
mov
mov
cmpl
stc
aaa
xor
out
adcb
push
movsl
mov
test
in
stos
jecxz
sub
mov
mov
fdivp
mov
mul
add
outsl
adc
jmp
and
cmp
fstpl
xor
aas
loop
xchg
push
adc
bound
pushf
testb
icebp
xchg
cmp
push
jmp
inc
xchg
aaa
lods
inc
stos
mov
dec
scas
leave
dec
sub
jmp
jne
arpl
notl
mov
aam
push
out
lock
mov
push
scas
movsb
daa
pusha
mov
out
mov
aaa
inc
das
push
xor
sub
bound
pushl
push
xchg
xor
testl
xchg
or
inc
dec
out
and
jg
pop
pop
test
cmp
inc
sar
lea
jo,pn
fadds
xchg
clc
rclb
pusha
hlt
push
mov
sbb
xchg
xor
popa
push
pop
add
push
test
push
rcll
adc
sbb
push
dec
pop
ret
push
push
add
push
ror
adc
push
pusha
and
and
push
or
jno
pop
add
inc
adcl
dec
fildl
xor
xor
jne
inc
fs
or
pop
push
push
test
fs
fs
cltd
fwait
decl
adc
mov
sbb
into
push
lock
mov
or
scas
std
mov
adc
iret
pop
mov
sbb
and
adc
mov
adc
sar
sti
in
adc
cmp
and
inc
pop
jp
in
fcomi
fwait
outsl
and
add
jecxz
xor
loopne
out
jle
mov
add
jbe
mov
add
or
out
test
scas
xchg
in
xchg
mov
mov
sbb
lea
push
imul
mov
icebp
test
push
jge
sti
decl
cmp
sub
nop
or
jo
out
rorb
stos
and
bound
cld
ja
push
testl
push
jbe
mov
mov
add
aas
js
cli
enter
mov
xchg
add
pop
aaa
cld
cmp
and
dec
and
or
cs
pop
mov
and
xchg
sbb
adc
cmc
icebp
sbb
jg
mov
jmp
adc
push
fucomp
dec
std
dec
lret
fildl
sub
mov
call
testb
xor
mov
sahf
jb
ffreep
insb
scas
jmp
mov
daa
insb
sub
sarl
push
lods
xor
xorb
out
stos
pushf
push
loope
outsb
test
js
fnstsw
lock
fsub
popa
mov
dec
cmp
incl
mov
ret
jg
neg
and
xor
jne
mov
or
xchg
push
dec
dec
pmullw
mov
and
mov
shll
mov
incl
lret
testl
dec
mov
jnp
jg
js
xorl
adc
out
loop
sub
xor
outsb
insb
adc
xlat
jle
and
outsl
add
jne
or
incl
std
or
ljmp
fadds
das
out
mov
jl
loopne
test
mov
mov
push
sub
dec
or
push
and
push
xor
mov
popf
jg
lods
or
mov
scas
mov
movsl
xchg
xor
mov
dec
or
adc
sbb
mov
jbe
dec
xor
and
mov
das
mov
dec
adc
jne
insl
mov
sbb
sbb
cli
in
arpl
fbld
clc
cmp
fildl
adc
jo
lock
clc
clc
out
scas
mov
lret
mov
cli
out
nop
ret
call
adc
jp
mov
adc
loope
fsubp
clc
sub
fists
and
addr16
movsb
std
out
aas
sbb
sub
lods
cmp
jmp
insb
jge
ret
mov
fs
les
pop
cmp
jg
decb
cld
pusha
mov
and
mov
mov
mov
imull
cld
add
add
inc
xchg
imul
sti
loopne
call
enter
add
aas
and
mov
repnz
jb
cmp
ljmp
pop
pusha
sub
mov
leave
pop
mov
sti
inc
cltd
adc
dec
and
pushf
jp
pop
fildll
and
adc
cmp
fwait
add
jbe
decl
dec
inc
ret
push
bound
orb
pop
pop
and
mov
lods
and
cwtl
xchg
sbb
ljmp
lret
mov
and
popf
mov
mov
xor
repnz
scas
push
out
rorl
mov
out
push
pop
imul
std
sbb
xor
mov
push
xor
jg
inc
inc
xor
mov
sub
mov
mov
scas
adc
stc
dec
xchg
ja
sarb
repz
xor
ss
mov
mov
cmp
push
cmp
shlb
clc
pop
std
clc
ja
call
out
repnz
fistl
cmp
int
ss
xchg
pop
loopne
sbb
shll
cmp
cmpsl
cmp
sbb
rcll
pop
in
cmp
aas
xor
ret
mov
sub
fs
cli
lahf
jle
sub
stc
xor
inc
jns
push
mov
xchg
jge
and
push
leave
mov
leave
xchg
ljmp
dec
inc
cmp
jae
push
jg
xchg
xlat
fildll
lretw
inc
aad
call
cs
lahf
popl
jp
or
adc
andb
stos
ss
mov
jno
bound
in
adc
sti
pop
idiv
dec
mov
mov
pusha
cmpsb
mov
push
je
imul
jae
mov
movsb
insl
add
loopne
scas
call
testl
cmp
mov
in
int
add
add
pop
ja
cmpsl
mov
popa
std
push
aas
mov
cmp
xchg
add
test
pop
imul
andl
pusha
pop
adc
das
sar
sub
roll
inc
fs
xchg
pop
push
out
mov
ud0
sbb
adc
mov
orl
adc
ja
mov
clc
sub
cmp
ds
jl
mov
clc
xor
inc
xchg
sbb
enter
jmp
jg
jmp
xor
add
add
and
ret
loopne
sahf
mov
dec
push
mov
add
mov
fwait
jb
sub
sbb
pop
test
aad
scas
xchg
aam
nop
fmull
and
mov
jmp
pop
mov
xor
inc
incl
ja
aaa
daa
popf
pop
int
fists
nop
or
mov
iret
loopne
jle
mov
dec
rorb
push
lock
mov
clc
pop
rclb
lcall
or
cld
cmp
and
pop
nop
ljmp
push
clc
out
mov
inc
imul
shlb
push
inc
jg
and
lcall
les
std
std
mov
push
rol
stos
push
scas
sbb
sbb
mov
jno
pop
lret
pop
aam
ds
stos
icebp
andl
ss
mov
cmpsl
mov
std
sub
pushf
imull
mov
pop
dec
push
mov
add
cld
push
lahf
aam
popf
rcr
ja
or
iret
std
jge
jbe
inc
lds
test
popa
add
xchg
mov
adc
gs
cmp
mov
add
jns
movsl
iret
scas
in
call
dec
push
pusha
test
pop
fwait
nop
xchg
clc
pmaxsw
sub
int3
leave
jns
or
enter
jl
fwait
insb
dec
daa
dec
jecxz
cmp
dec
sub
call
add
mov
std
cmpl
pop
addr16
fldl
fadd
inc
and
dec
sbb
test
dec
icebp
push
sar
sbb
test
jns
sub
cmc
dec
sub
into
std
sahf
aaa
shll
dec
lds
test
jge
or
imull
imul
cmp
std
cli
pop
decl
dec
scas
outsb
inc
enter
or
cwtl
push
fistpll
adc
sub
xor
rcrb
subb
mov
dec
push
icebp
mov
cmp
ror
and
mov
fldl
jl
or
pop
out
mov
add
push
mov
in
sbb
into
add
xor
inc
dec
cmp
xchg
inc
mov
dec
jmp
xchg
inc
pushl
out
mulb
stos
fbstp
cmp
or
sti
mov
cld
subb
and
mov
mov
sahf
scas
je
fsubrp
out
or
mov
nop
sub
dec
je
xchg
jp
popf
push
mov
pushf
or
ds
xchg
rcrl
movsb
pusha
insb
in
iret
ljmp
jo
add
or
mov
dec
push
adc
test
fildll
pop
dec
int
dec
out
jno
sub
mov
jbe
pop
fmulp
ret
in
lahf
loope
sbb
ret
dec
inc
push
imul
sub
dec
lods
js
sub
xchg
xchg
std
popf
stc
mov
mov
or
idivb
nop
out
lret
sub
out
cltd
scas
fldenv
cli
bound
mov
sub
iret
xorb
xor
incl
inc
outsl
sbb
stos
notl
repz
mov
outsb
in
or
shr
xlat
inc
mov
jge
not
push
jmp
das
cld
mov
lock
inc
or
in
jns
fdivl
xchg
insl
pop
iret
dec
fistpll
and
test
xchg
mov
fdivr
mov
out
add
cmp
mov
sti
sahf
or
insl
adcb
lods
inc
add
in
jg
cmp
mov
decb
int
dec
or
scas
pushw
std
out
jo
dec
xor
in
add
jno
mov
cmp
cltd
icebp
jg
inc
sbb
adc
in
pusha
xchg
add
lahf
rcrl
pop
adcl
out
mov
or
dec
fcompl
mov
and
fsubrs
test
out
pmuludq
sub
push
or
loopne
mov
cli
cmp
ljmp
lcall
adc
fs
push
pop
mov
insb
aam
adc
fdivr
pop
cld
jg
in
pop
mov
cmp
lea
lahf
cmp
and
and
pushf
aam
pop
dec
loopne
data16
mov
xor
insl
xchg
addr16
pop
fdivl
xchg
syscall
adc
into
jne
mov
xor
ljmp
loope
add
mov
push
cli
fucom
mov
pop
sbb
inc
add
add
jmp
or
addr16
clc
jg
cwtl
cmp
test
aaa
mov
nop
sub
leave
cmp
aad
push
jecxz
shll
cwtl
adc
sub
dec
dec
into
dec
shl
mov
scas
in
out
cmp
xorb
outsb
push
sbb
adc
jg
std
out
out
int
movsb
adc
dec
mov
out
or
inc
cmp
addb
sbb
sub
pop
mov
inc
rcl
outsl
cmp
jge
icebp
xchg
cmc
xchg
inc
loopne
cmp
icebp
xor
jge
sbbb
lea
mov
pop
in
outsb
das
lock
arpl
dec
test
push
movb
mov
jo
cltd
pop
loop
insl
mov
mov
popl
orps
inc
xchg
jae
cmp
add
push
stos
popa
sar
loop
adc
repnz
out
jo
mov
lahf
in
cli
fsubp
lahf
jns
shrb
pop
dec
fbld
mov
cmpsl
cld
aaa
dec
mov
push
and
hlt
in
mov
leave
add
sbb
push
inc
ljmp
push
cmp
bound
es
pushf
filds
out
pop
les
dec
roll
bound
ss
cmp
js
loope
jae
xchg
lods
add
sbb
dec
mov
pop
inc
aad
mov
cmovns
ss
dec
jecxz
pop
adc
and
aas
js
jg
iret
pop
in
adc
inc
jmp
sbb
mov
dec
loopne
out
pop
loopne
fldcw
jp
jle
repnz
cmp
mov
seto
sub
jl
jne
lea
lods
or
loope
jecxz
dec
ret
lret
jo
cmp
loope
sbb
repz
je
ljmp
mov
push
push
cmp
mov
inc
pop
and
iret
loopne
or
cmp
mov
mov
lahf
std
scas
xchg
dec
dec
sbb
fisttps
mov
test
push
sarl
mov
scas
repnz
dec
push
loop
mov
adc
daa
test
pop
or
scas
mov
mov
popf
bound
jg
lret
lcall
sarl
xchg
int3
sub
daa
jp
loop
pushf
loop
inc
fdiv
xchg
leave
js
movsb
scas
insb
push
mov
xor
sub
in
std
stc
cli
imul
push
xor
in
dec
lcall
popa
in
ja
cmp
lahf
sar
fdivrs
xchg
into
cli
dec
and
sbb
enter
les
ljmp
in
imul
push
lret
adc
idiv
xchg
sbb
inc
cld
lahf
sbb
dec
gs
ljmp
jbe
std
sub
fldenv
fildl
lock
stos
cmp
lret
adc
cmp
mov
sub
cmp
inc
cmp
call
into
xor
clc
sbb
xor
or
clc
shr
clc
fists
xchg
enter
jo
dec
sub
mov
pop
xchg
mov
scas
cwtl
fsubs
sbb
sar
out
call
arpl
add
imul
movsl
insb
push
mov
popf
scas
xlat
sahf
test
push
jns
mov
shl
int3
in
nop
adc
mov
adc
loopne
inc
pusha
sti
ljmp
cmp
cmp
test
fwait
push
mov
or
pop
jecxz
cmp
test
mov
or
popf
test
cwtl
pop
push
leave
push
push
mov
cli
xor
mov
ds
lds
xchg
outsb
repnz
mov
paddusb
cmp
imull
mov
imul
add
or
xor
loope
aas
js
movsb
dec
xchg
adc
clc
fwait
and
outsl
mov
addr16
ljmp
loope
cmp
les
pop
xchg
dec
dec
fistps
test
aaa
xchg
in
push
lea
xor
adc
mov
jb
arpl
out
cmp
mov
pop
outsl
mov
movsl
lock
xchg
stos
and
cmp
out
out
popf
fbstp
pop
fisubs
xchg
ja
rorl
mov
jl
ljmp
mov
rcl
push
lret
mov
pusha
and
pop
cmp
mov
sub
add
push
mov
into
lods
insl
jg
aam
add
mov
fs
cmp
xor
fnstsw
and
cmp
mov
or
decb
jge
xor
xor
push
cmp
fwait
daa
imul
clc
xor
push
out
inc
xchg
inc
insb
sbb
stc
and
incl
cltd
leave
jg
cli
pop
jmp
int3
push
test
vshufps
scas
rorl
pop
add
push
sbb
or
adc
pop
in
push
gs
in
sti
in
adc
lds
or
jae
sbb
popf
dec
int
test
mov
les
or
out
and
shrb
jg
jae
js
notb
das
jg
cmp
inc
lods
sub
test
je
pop
jnp
jae
cmc
jae
subb
cs
jge
mov
ja
jne
pushf
hlt
xor
pop
add
fcoml
ret
sti
lret
lahf
movsl
scas
test
push
inc
outsl
add
int
paddusb
sub
add
cmc
dec
int3
adc
dec
inc
mov
mov
in
lea
jl
mov
jle
sub
adc
out
scas
mov
fldl
arpl
fxch
inc
rcr
fstp
add
flds
bound
xor
fcmovb
std
xorl
out
push
cwtl
pushf
aad
pop
loope
cmp
pop
pop
mov
lods
jle
jge
adc
push
and
into
add
aas
sar
xchg
pusha
stos
scas
jbe
sub
les
fstpt
or
mov
xchg
mov
sub
lret
adc
sar
rclb
jl
notb
movsl
xor
jb
mov
push
insb
fwait
push
test
cmp
fs
or
mov
push
or
outsl
cmp
xor
idiv
cmpb
cli
leave
stos
out
pop
or
adc
dec
fcomps
adc
mov
fwait
jg
cld
mov
sbb
pop
mov
jg
inc
dec
dec
cli
lahf
std
lret
push
or
mov
cltd
adc
inc
dec
add
sbb
in
in
lock
test
lock
decl
in
dec
xor
fcoml
inc
dec
idivl
add
ja
jnp
das
das
cld
push
mov
mov
sbbl
pop
fcmovnb
aas
ret
lock
xchg
ja
mov
adc
xchg
mov
push
lret
fisubl
incl
jnp
inc
xor
jle
jb
cmp
fs
jnp
shll
imul
jb
mov
ffreep
ffreep
jns
fistpll
mov
mov
ljmp
mov
mov
sbb
mov
jbe
rol
push
int
fiaddl
adc
clc
cmp
cwtl
mov
jo
adc
insl
sahf
jo
dec
insl
sysenter
aad
mov
fisttpl
addl
push
iret
icebp
lahf
sti
aad
push
jne
push
sahf
xchg
inc
add
xchg
shll
pop
test
in
stos
sub
ret
jp
sti
jne
aam
sti
inc
fisubs
mov
jnp
push
in
add
gs
je
je
cmc
push
mov
or
lcall
leave
sub
shlb
loope
add
popa
jmp
ja
fs
aas
mov
jae
add
jnp
lds
cmp
lcall
mov
ja
fs
mov
sbb
push
into
out
and
add
roll
fnstsw
cltd
add
out
lods
or
repz
ja
addr16
cmpsl
add
sbb
inc
mov
ret
rcrb
fiadds
inc
jne
jae
mov
or
mov
sub
sbb
fistpll
cld
jg
cli
pop
je
jl
or
push
xchg
inc
push
popf
fcoms
pop
lock
out
loop
jle
cmpsb
rolb
cli
out
out
cmp
gs
shl
cmc
adc
movsb
int
ja
std
jno
in
pop
xor
leave
inc
scas
int
jg
fcoml
dec
mov
mov
lahf
cs
out
fldt
add
push
jmp
dec
xor
inc
xor
jne
incl
mov
rcrb
push
popa
lcall
or
shl
pop
loope
je
adc
imul
mov
test
cmp
xchg
jg
pushl
mov
lcall
or
int
mov
cmp
xchg
add
cltd
fwait
mov
ja
daa
cli
lahf
or
sbb
pusha
mov
pop
aad
filds
decl
mov
sub
arpl
scas
adc
std
sahf
cmpsb
lcall
test
test
pusha
hlt
pop
mull
incb
fmull
aad
mov
hlt
xchg
dec
and
das
loop
stos
mov
pop
aas
hlt
fiaddl
push
push
cwtl
add
pop
inc
cld
sti
aad
out
xor
adc
outsb
dec
mov
call
loopne
gs
push
lds
les
dec
dec
sbb
rolb
pusha
mov
clc
lds
cld
sub
mov
fcompl
stos
mov
repz
stos
dec
pop
push
out
dec
sahf
mov
jae
sahf
inc
lds
iret
sub
or
pop
mov
cmc
sbb
decl
add
dec
enter
sbb
das
mov
mov
das
add
insb
out
dec
xchg
popa
fs
cmp
dec
xor
mov
mov
xchg
add
mov
pop
push
lret
clc
inc
dec
push
addr16
cli
test
jg
movsl
xchg
fidivl
frstor
sarl
mov
or
jl
test
lods
pushl
push
ja
xor
pop
out
int
movsl
mov
mov
lret
xchg
dec
jl
xchg
dec
or
push
pop
movsb
dec
dec
aam
mov
xchg
sar
pop
neg
add
cmp
pop
mov
mov
jo
sbb
test
inc
or
push
outsl
out
jg
xor
push
mov
out
in
push
mov
movsb
and
mov
lods
add
xor
cmp
out
push
out
adc
xchg
jne
cmp
pop
jno
add
sbbb
icebp
and
xor
divb
out
fs
mov
data16
lret
mov
inc
out
popa
jle
idivl
push
lahf
inc
sub
or
cli
fistl
sub
insl
xchg
pop
pop
mov
lcall
std
aam
push
repnz
adc
out
lock
sti
lods
mov
repnz
or
ja
sahf
fldcw
add
mov
ffreep
xor
mov
cld
mov
movsb
inc
aaa
call
movsb
or
fs
adc
sub
loopne
pop
fs
mov
cwtl
loope
push
pop
aaa
mov
xor
aad
dec
popa
call
adc
cmp
ret
mov
mov
or
test
int3
dec
idivb
test
incl
mov
sub
adc
std
out
push
lret
and
xchg
ss
sbbb
xchg
sub
and
jbe
ror
cmp
lods
sub
aas
adc
das
arpl
movsl
fcoms
add
rolb
mov
push
cld
and
ss
outsl
mov
dec
cmpsb
push
rcrl
scas
push
pop
and
inc
or
xchg
push
fsubrs
pop
jg
fadd
mov
mov
mov
cmp
cld
outsl
insb
xchg
jg
sbb
jecxz
sub
stos
pop
loopne
mov
ljmp
dec
call
mov
popl
xor
jns
push
mov
ret
adc
imul
xlat
daa
sub
jp
push
dec
sti
jg
je
sbb
jecxz
inc
loope
sbb
bound
jmp
out
add
and
shr
cli
lret
pop
push
add
and
cmp
jo
shlb
aam
and
je
mov
mov
aad
dec
cmpb
ficomps
inc
rorb
and
and
loop
adc
inc
jns
dec
dec
scas
push
jge
inc
popf
ja
push
test
lds
bound
xor
jbe
cld
iret
dec
xchg
icebp
fsubl
lret
mov
jecxz
add
mov
int3
lahf
int3
aaa
sbb
std
xchg
les
push
add
jg
test
xchg
xchg
mov
sarl
cli
mov
movntps
fs
mov
mov
or
xor
mov
push
test
dec
cli
iret
es
test
or
sub
leave
test
jns
cs
jo
mov
stos
loope
rcr
daa
jp
mov
insl
mov
out
pushf
jnp
out
dec
fisubs
mov
mov
out
loopne
mov
cmp
sub
push
js
lods
pop
jge
add
add
clc
jmp
dec
hlt
ds
lods
cs
mov
cmc
xor
call
jb
pop
stos
push
push
push
mov
jns
push
and
xor
fs
and
incl
adc
jmp
ficompl
out
pop
std
cmp
push
sub
sbb
loop
shl
cs
int
jecxz
cltd
jb
push
push
dec
std
dec
cmp
mov
outsl
add
std
cmp
clc
ja
pop
jno
push
jl
inc
std
ja
ret
push
push
out
sbb
insb
cmp
mov
add
mov
std
idivl
mov
mov
lds
mov
mov
icebp
scas
sti
dec
pop
jb
push
shll
xor
fwait
sub
ret
testb
push
or
inc
fnstsw
cs
mov
pop
or
and
sub
dec
add
jno
adc
xchg
loope
mov
aaa
jo
mov
push
push
push
push
cmp
xor
mov
mov
jg
cmp
lahf
xchg
and
popl
push
jmp
mov
cmp
popf
test
repz
fsts
and
fs
out
fistpll
out
ret
cmp
ljmp
push
loope
aam
or
enter
xchg
lret
shl
push
cld
aaa
out
mov
sbb
popa
pop
out
iret
lods
loopne
pop
sub
and
adc
sub
sbb
cmpsl
cld
aas
push
jle
enter
into
mov
jg
pop
decb
es
cltd
aam
xchg
pop
shrl
sbb
fidivrl
sar
test
cmc
jge
adc
lret
add
aaa
mov
scas
lea
ds
jno,pt
test
adc
jnp
ljmp
mov
push
pop
negl
cmp
jb
sbb
cmp
dec
dec
or
insb
mov
lret
jge
mov
push
pop
popa
adc
mov
jg
jmp
hlt
dec
insb
xchg
mov
inc
and
xchg
aaa
pop
jl
aas
negl
rorl
jge
clc
jle
ret
mov
push
sbb
movb
push
int3
xchg
xchg
fsubp
test
ss
pop
pop
sub
sbb
repz
out
mov
insb
in
xchg
shlb
xor
and
mov
inc
jb
out
pop
lods
inc
adc
jl
pop
push
pop
push
subl
sbb
pushl
mov
push
inc
and
push
fwait
andb
sbb
mov
jmp
xor
ljmp
jge
dec
lret
mov
cmp
icebp
rol
scas
cwtl
cmpsl
je
add
jno
lea
mov
icebp
and
js
jecxz
lock
enter
sbb
pop
fcomps
push
xchg
std
aas
std
mov
aad
push
mov
das
cmpsb
movsb
sub
mov
mov
cltd
mov
iret
mov
inc
loopne
scas
mov
sub
incl
scas
insb
jb
ficomps
stc
scas
xor
jecxz
pushl
aaa
out
sbbb
pop
fsubl
mov
push
pop
cmc
pop
push
call
inc
and
jmp
and
leave
test
int3
daa
pop
mov
dec
xor
add
inc
sar
jp
jl
into
out
fidivrl
pop
repnz
movsb
or
icebp
iret
loopne
lock
or
sbb
or
lcall
fucomi
stos
pop
aas
icebp
cmp
stos
ret
pop
repz
sti
push
push
cli
inc
push
mov
popa
mov
xchg
fcomps
ss
scas
test
push
push
mulb
xor
mov
pop
xor
xorb
ffreep
aas
idiv
jle
iret
dec
cmp
loope
outsl
jecxz
xor
cmp
lea
lahf
ficoms
fwait
dec
repnz
in
movsb
ljmp
push
fidivrl
pusha
lock
mov
xchg
mov
lea
sbb
call
aaa
lret
mov
ror
repz
xchg
pop
std
out
xchg
shll
into
xchg
jno
ds
lret
mov
sbb
ja
arpl
push
dec
inc
les
ffree
push
cltd
imul
or
pmaxub
jl
stos
add
and
xchg
add
mov
sti
and
push
xor
mov
cld
aas
cmc
push
data16
xorb
aas
xor
loopne
insb
pop
mov
aas
add
mov
mov
out
mov
push
mov
fstpl
adcl
xor
ret
clc
aam
jle
pushf
xor
das
dec
mov
ja
ret
add
js
and
jmp
in
sbb
cmp
or
cltd
mov
pop
lds
cld
cmpsl
sti
fildll
mull
push
dec
repz
sti
call
jb
jns
movsb
das
xchg
je
lock
idivl
call
jecxz
jmp
cltd
ret
cld
jg
and
xchg
sub
xor
mov
jmp
push
pop
mov
mov
pop
add
xlat
xchg
or
add
loope
js
xchg
lret
jecxz
sbb
aas
sti
je
mov
addb
dec
sub
xchg
pop
xor
mov
add
mov
jp
test
sysret
mov
push
xchg
sarl
ja
sar
pop
jl
add
lods
int
mov
mov
sahf
pop
cmpsb
add
sti
lahf
xor
movsb
mov
sub
orb
mul
popa
pushf
out
decl
loope
outsl
mov
fsubs
fwait
push
mov
pop
out
lock
clc
xchg
stc
jp
push
sub
adc
mov
mov
jno
ds
pop
inc
lret
xchg
aas
pop
stos
loopne
cmp
jmp
jp
xchg
lds
mov
or
leave
mov
mov
sarb
mov
dec
lods
scas
sbb
out
pop
sbbb
add
stc
daa
hlt
jae
push
sbb
jae
push
jns
loope
or
dec
shlb
adcl
dec
shll
push
frstor
incl
ret
stos
adc
out
sti
clc
ud0
jbe
add
cmpsl
xor
fsubrs
cmp
insl
adc
mov
repnz
dec
fstpt
ljmp
cmp
cmp
addr16
or
sbb
fnsave
incl
add
mov
je
scas
cmp
ja
cmp
push
fbld
jp
std
pop
out
cmp
icebp
cld
jmp
es
and
add
call
out
out
jns
pop
push
mov
setl
push
push
call
clc
fsubs
in
jno
test
fwait
xchg
jp
in
push
xor
test
xor
xlat
std
fninit
inc
fcmovbe
dec
mov
sub
mov
andl
pop
pop
and
push
cmpl
lds
sub
data16
inc
jl
sbb
sub
mov
pop
cmpl
add
sbb
test
push
rolb
aam
sarl
inc
repnz
xchg
orl
and
pop
adc
dec
xlat
mull
loope
stos
or
or
repnz
into
mov
loope
push
nop
pinsrw
repz
sarb
mov
loop
jecxz
imul
hlt
inc
insb
das
sbb
sub
jnp
cmp
popa
mov
fidivrs
vmwrite
js
xor
daa
cmpsl
fisttps
filds
adc
xchg
cmpsb
and
loope
jb
cmp
mov
insl
adc
hlt
into
mov
sar
jns
mov
iret
adc
push
call
add
add
addr16
andb
add
adc
fwait
mov
xor
sbb
adc
cltd
int
pop
push
outsl
inc
lcall
sub
imulb
inc
outsb
push
or
and
loope
bound
rorl
and
xor
adc
out
mov
xchg
sub
push
out
jmp
dec
cli
mov
jbe
insb
cmc
sbb
jecxz
sti
das
adc
dec
daa
xchg
inc
sbb
inc
jb
incb
test
mov
xlat
sbb
clc
out
cmc
xchg
rcrb
aad
fld
mov
idiv
fsubrl
test
mov
xchg
das
cmpb
pop
or
aaa
pushf
or
or
out
xchg
fwait
lret
lods
xor
std
add
cmp
pusha
inc
and
out
enter
cli
out
es
ret
add
fisttps
lcall
mov
xchg
xchg
jg
lods
ljmp
gs
add
dec
fsubl
scas
push
enter
cmc
decl
add
mov
mov
orb
pop
in
pushf
dec
repnz
rcrb
mov
jecxz
lock
pop
es
sub
lods
and
mov
pop
imul
add
push
decl
mov
add
jecxz
xor
xchg
sub
mov
sbb
popl
stc
xchg
out
test
es
es
hlt
cmpsb
mov
add
lods
or
adc
jno
jo
cli
xrelease
add
cli
pop
idivl
dec
mov
pop
shll
inc
cmp
jmp
add
pop
xor
or
inc
out
mov
fbld
dec
mov
adc
aad
jno
sahf
arpl
decb
jmp
sbb
pop
stc
add
std
add
pop
mov
pop
arpl
aad
xor
out
xor
out
sbb
xchg
sub
or
in
jg
sub
icebp
fmull
sbb
mov
jmp
or
aas
pop
icebp
push
cmp
orl
or
push
cld
dec
cmpsb
inc
push
insl
pop
icebp
lea
or
lret
push
pop
sub
jmp
test
push
nop
mov
aas
out
pop
push
add
mov
incb
std
cltd
test
rorb
push
call
mov
dec
stos
dec
mov
inc
jns
xor
mov
push
les
dec
fstpl
arpl
mov
out
sub
sbb
push
pop
imul
jb
mov
loopne
jns
add
adc
aad
call
jns
outsb
les
xchg
inc
cld
addr16
out
xchg
mov
push
mov
xlat
std
dec
mov
inc
sub
cs
idiv
loope
sbb
cli
mov
lods
mov
stos
in
jne
clc
adc
push
mov
ja
xor
nop
dec
scas
std
leave
loopne
jnp
mov
lods
mov
and
cmp
in
rorb
mov
jne
or
clc
lahf
sti
pop
stc
adc
mov
scas
cmp
lock
into
xorb
ja
lock
lods
aad
es
pop
jge
or
icebp
icebp
pop
push
fistpl
pusha
mov
int
lcall
mov
daa
pushf
lahf
mov
fnstenv
dec
mov
pop
ljmp
push
in
push
mov
pop
inc
xchg
es
ljmp
mov
cmpl
jg
lcall
lock
cmpsb
xor
mov
jg
adc
fnstsw
adc
xor
mov
jp
cmp
stos
stos
xor
leave
std
add
xor
dec
sub
xchg
adc
adc
sbb
fs
cmp
nop
xchg
out
decb
mov
add
pop
xchg
into
int
loopne
sbb
jg
pop
dec
sbb
lcall
adc
fisttpll
cld
lods
enter
xor
in
jb
int3
hlt
dec
inc
std
and
leave
push
popa
dec
mov
mov
imul
or
mov
or
fnstcw
dec
jp
jmp
scas
jne
jle
and
cld
dec
sahf
cs
popa
lahf
add
dec
fnstsw
out
xor
mov
bound
icebp
dec
fstpl
and
adc
cmp
mov
sub
rorl
icebp
outsl
lock
sbbl
pop
xchg
clc
push
testl
mov
ljmp
xchg
shrl
fisttpll
xor
repnz
push
mov
std
pop
lock
iret
into
adc
lea
lcall
adc
and
inc
inc
idivb
in
jmp
sbb
jne
out
mov
inc
or
divl
jl
out
lcall
ss
pop
push
xlat
add
jb
loop
pop
je
xor
aas
add
jg
or
test
call
sbb
test
loopne
dec
clc
pop
and
lea
in
das
jmp
ljmp
inc
lret
jns
fucomip
cmpsb
mov
imul
adc
xchg
push
push
scas
out
std
jnp
xchg
adc
jle
jg
lock
lods
xchg
dec
xchg
dec
lea
ds
push
and
jne
mov
adc
push
andl
push
test
sbb
mov
lret
adc
mov
ja
popa
sbb
xchg
cmpsb
loop
lock
rcrb
test
jecxz
mov
xor
sub
pop
xchg
cmpsb
cmp
push
push
int3
mov
inc
cli
into
add
sar
out
xchg
mov
cmp
inc
jp
outsl
mov
mov
sub
gs
push
sub
repz
cmc
pop
ret
outsl
adc
shlb
lock
mov
pop
fs
shl
les
xor
lea
scas
ljmp
repz
jbe
xchg
fwait
daa
pop
push
icebp
call
dec
iret
test
cltd
pop
cmpb
jnp
in
jg
decl
jae
inc
add
jnp
pusha
jns
cmp
stc
cmp
orb
and
in
push
clc
push
add
fdivr
gs
mov
mov
outsl
jno
pushf
ja
sub
jo
jns
add
mov
call
mov
arpl
pop
xchg
and
arpl
sub
fisttps
frstor
insb
xor
xchg
ljmp
sbb
push
adc
dec
pushf
xor
pop
or
rorl
inc
out
cmp
sar
neg
jle
fisttpll
mov
push
cld
push
hlt
popf
xor
jmp
xchg
cmpsl
inc
out
xor
into
cld
scas
ret
or
or
cmp
jg
jle
clc
ja
adc
push
out
jbe
push
inc
inc
addb
lahf
xchg
std
push
xlat
fisubl
jmp
testl
jmp
movsl
call
out
inc
movsb
pop
rcl
adc
clc
jle
dec
inc
inc
ret
call
std
pop
insl
pop
out
inc
sbb
addr16
paddd
mov
mov
lcall
add
add
jmp
ja
fsubrs
popa
jmp
mov
jg
mov
add
in
aas
or
dec
pushf
pop
fsubrl
mov
filds
decl
decl
adc
xor
pop
push
jno
sbb
or
jle
push
data16
inc
xor
and
ds
adc
sub
clc
xorl
and
aas
adc
cmpsb
jno
mov
mov
jl
jns
dec
push
hlt
adc
rcrl
cmp
test
jge
outsl
mov
sarb
cmp
cmp
in
clc
mull
das
loop
mov
lcall
jecxz
subb
add
aas
push
push
out
sbbl
mov
mov
in
mov
pop
xchg
jne
xchg
inc
mov
jmp
enter
cmp
mov
jo
outsl
push
cli
stos
jnp
cmp
xchg
test
and
int
push
outsl
sub
icebp
orl
dec
lahf
push
mov
ja
subb
shl
push
mov
jg
push
push
dec
negl
inc
jmp
inc
pop
and
test
insb
add
popf
imul
iret
mov
cmp
mov
jne
dec
aas
pop
rcrl
fdivrl
in
xchg
jp
stos
mov
hlt
xor
out
pop
in
insl
enter
jle
push
sbb
jg
dec
adc
pop
mov
adc
dec
jno
mov
aad
or
inc
mov
ljmp
lds
jle
xor
jg
decb
int
push
or
fdivrs
or
imul
fldenv
sbb
adc
inc
nop
push
add
push
sbb
jbe
jg
cmp
and
pusha
xor
mov
in
std
rorb
std
inc
jno
mov
pushf
mov
shrl
pop
insl
sub
jae
pop
aad
inc
cmp
aad
pop
sbb
fucom
mov
aas
les
inc
sub
addr16
std
fs
sbb
xchg
add
ret
call
jae
out
add
inc
aas
jmp
loop
insl
rorb
and
mov
and
mov
ret
xchg
adc
call
fs
cmpl
mov
pop
adc
dec
pop
stc
or
xor
lcall
cmp
incl
mov
frstor
movsl
mov
sub
jg
jg
push
aam
dec
pop
sub
dec
fcomi
and
stos
aas
push
clc
inc
scas
popf
mov
xchg
jg
mov
scas
mov
je
lahf
pop
and
repnz
jnp
std
addr16
dec
adc
jnp
out
add
js
cld
cmpsb
sbb
das
cmp
mov
sahf
shll
cltd
insb
push
sub
xor
pop
sbb
ror
mov
cmp
xor
mov
fidivrs
test
sbb
fs
lahf
rolb
stos
sub
test
call
fs
pand
pop
jbe
aam
std
incl
pop
add
adc
fdivrs
clc
or
add
ljmp
jbe
call
aas
add
pop
adcl
fsubp
test
jle
fisttps
dec
pop
xor
mov
ret
inc
cld
ret
pushf
xchg
sbb
jae
data16
clc
mov
stos
dec
xchg
push
js
scas
xlat
sbb
add
iret
stos
aam
cltd
pop
nop
dec
shrb
xchg
mov
and
xlat
inc
or
dec
pop
and
arpl
pop
xorb
lds
xchg
fsub
mov
push
adc
das
sahf
cmc
js
mov
jns
mov
inc
rol
icebp
or
xor
pop
jmp
loop
cmc
call
mov
imul
sub
lock
cmpsl
push
pop
loop
adc
lahf
movsl
cmp
ja
loope
and
jge
fistps
cmc
dec
sub
leave
or
sti
repz
fdivr
out
mov
push
out
add
test
test
and
jmp
xor
xchg
std
sbb
mov
sbb
pushf
lret
ds
push
pop
pusha
in
in
out
popf
sti
fisttps
fistps
leave
mov
ljmp
mov
notl
pop
xchg
fcoml
pop
gs
iret
mov
shlb
sbb
cmp
xor
loope
call
xor
rol
jb
ljmp
adc
call
dec
das
andb
das
scas
push
loope
add
and
or
dec
jecxz
pop
xchg
leave
ret
push
dec
add
js
imul
fwait
and
aad
imul
shll
cmp
mov
cmpsb
jo
out
jmp
and
mov
xchg
out
das
call
fcmovu
movsl
and
cld
aas
mov
ljmp
push
inc
lods
push
mov
adc
sub
mov
out
lret
inc
mov
pop
shlb
stc
cmp
in
and
xor
or
cmp
imul
js
les
jg
push
fs
sbb
decb
call
inc
cld
mov
lret
in
push
sbb
aam
dec
jge
push
push
ja
aas
test
sub
aas
add
icebp
incb
ret
jae
call
mov
add
pushf
dec
pop
clc
ljmp
loop
sub
push
mov
dec
shrl
dec
or
sbb
push
mov
push
scas
dec
and
pop
gs
inc
ljmp
jns
mov
xchg
inc
call
inc
inc
mov
lea
lcall
icebp
pop
and
or
jns
pop
mov
pop
jmp
or
mov
sub
aam
mov
minps
jmp
ljmp
idiv
adc
xchg
aad
aas
stc
fsubr
icebp
aaa
leave
ret
clc
repz
aas
adc
mull
lahf
xchg
sbb
sbb
add
and
mov
adc
mov
pop
ficomps
pop
push
incl
sbb
repz
nop
or
es
lcall
shl
mov
fnstsw
pop
pop
in
cmpxchg8b
jne
divl
dec
or
sti
pop
xchg
ljmp
shlb
add
sbb
cmp
in
rep
xchg
arpl
fdivrl
je
int3
iret
jmp
mov
and
pop
push
test
ss
in
pmaddwd
xor
rorb
sti
ja
lret
cmp
dec
out
fadd
gs
mul
xor
call
in
mov
in
hlt
jne
cmp
adc
lahf
pop
dec
sahf
pop
test
mov
inc
and
out
lock
sbb
je
xchg
icebp
pop
jecxz
testl
les
in
pushf
sub
fistpll
cmp
mov
jne
xchg
sub
loopne
cmpsb
mov
jg
add
outsb
pushf
lea
jno
incl
aaa
loopne
mov
sbb
jmp
jne
mov
cmpsb
in
shlb
and
out
jg
pop
inc
or
lret
outsl
mov
add
clc
xchg
inc
repnz
and
jg
repz
and
sub
jge
adc
inc
sbb
cs
out
mov
aad
jno
lock
lcall
xchg
dec
pop
fidivs
lcall
jg
les
cmpsl
or
add
aas
and
push
dec
sbb
sbb
std
xchg
outsb
add
repnz
mov
cmp
xchg
les
push
add
cmp
adc
sub
adcl
pop
pop
mov
and
lock
out
mov
push
sbb
or
and
or
fcoml
pop
mov
inc
push
inc
ficomps
call
std
cmpsb
and
add
push
mov
out
test
or
incl
lods
cmp
xor
cld
imul
call
jmp
push
ret
xchg
clc
mov
jne
lea
mov
xor
gs
cmp
sbb
ds
add
loope
rorb
jo
mov
lock
dec
stc
movsb
js
mov
jnp
lcall
repz
mov
add
ja
add
sbb
decl
cmp
jns
lret
push
dec
inc
aam
movsb
rorb
divl
clc
div
mov
loopne
jl
push
cli
mov
movsb
push
in
pop
cmp
fdivrl
xor
icebp
jg
movsl
lcall
loopne
cltd
xchg
xorl
stc
ret
cmp
xchg
push
test
ret
xchg
std
cltd
pop
add
sbb
inc
pop
lock
ss
cmp
and
and
pop
sbb
sub
mov
and
jbe
dec
sbb
cld
outsl
je
sar
test
xchg
sbb
rolb
and
aas
mov
push
xor
outsb
test
add
ret
pop
sbbb
seto
icebp
jg
add
mov
cmp
add
jg
mov
jg
int3
and
lock
outsl
mov
sub
lcall
and
inc
mov
xchg
clc
iret
insl
pop
shl
daa
fwait
ret
mov
test
aas
pop
aam
lods
mov
jb
nop
dec
loopne
cmp
enter
scas
cmc
out
jge
mov
sub
lea
mov
jns
popa
test
aaa
mov
js
mov
jnp
add
lcall
pop
mov
sar
cmpsl
pop
iret
lds
mov
lcall
ljmp
lahf
fwait
xor
dec
rcll
adc
xor
daa
ret
popa
xchg
mov
leave
sbb
sub
pop
add
in
aad
adcl
inc
push
mov
in
push
fsubs
imul
decl
sub
pop
sub
aam
mov
or
test
pop
jmp
cmp
pop
gs
adc
ds
gs
xor
in
shlb
xor
mov
ljmp
pop
add
mov
into
aaa
and
xor
mov
loopne
fildll
add
push
jecxz
and
and
jg
mov
sbb
add
push
mov
adc
mov
or
push
decb
dec
aaa
pop
negl
stos
adc
mov
sbb
pop
fldlg2
and
std
push
push
push
cli
ss
cmp
dec
popf
xor
mov
out
scas
lods
xchg
ja
movsl
mov
adc
adc
pop
jae
dec
mov
iret
add
ret
loope
add
xchg
cmc
loope
scas
add
enter
add
inc
cs
icebp
pop
pop
mov
sbb
out
or
inc
pusha
out
push
outsl
add
push
jbe
push
shrb
pop
mov
rcrb
lea
pop
jmp
idiv
lods
gs
rolb
jp
lret
icebp
mov
lcall
and
pop
in
pop
sbb
jns
std
cmp
jle
mov
pop
mov
lods
adc
cmc
fistps
movsb
arpl
add
shlb
xor
mov
dec
je
or
incb
jl
push
xchg
test
lahf
cli
divl
cmp
xor
icebp
jne
or
xor
cmp
enter
cmp
jnp
add
and
outsl
xchg
sbb
js
pop
and
ror
jns
xchg
mov
cmc
mov
loope
fdivrl
sub
or
mov
repnz
cmpsl
add
pop
cmp
les
jnp
sub
fistpll
jb
mov
jmp
fs
cltd
scas
stos
in
push
arpl
test
bound
ja
shl
outsl
lock
push
out
leave
xchg
mov
ljmp
shrl
decb
pop
sbb
pop
iret
dec
test
test
js
or
call
mov
pop
das
hlt
lods
jno
fucomip
leave
sarl
and
dec
or
loopne
cmp
inc
cli
sub
jo
adcl
std
insl
test
and
sbb
xchg
stc
push
sbb
adc
push
ja
adc
repz
out
mov
addr16
popa
mov
sar
or
mov
fdivl
xor
mov
sbb
das
jb
cli
or
xor
fistpll
std
imul
jne
loope
notl
adc
rolb
stos
xor
xchg
in
gs
jae
jg
xor
cwtl
pop
sbb
push
stos
jl
das
js
jb
push
movsb
fs
mov
lret
fmuls
push
icebp
fs
cwtl
pop
cli
lahf
sbb
mov
lds
jmp
cmp
mov
data16
test
inc
pop
mov
xchg
pop
sub
push
das
clc
jnp
push
xor
aas
daa
out
loop
add
pop
adc
fcoms
inc
cs
orl
mov
nop
sbb
mov
sub
pop
sbb
iret
jecxz
std
fldl
ret
push
or
popl
pop
add
xor
mov
sub
pushl
add
push
xchg
or
outsb
mov
incb
lock
mov
xchg
dec
ljmp
cmp
aad
cmpxchg
pushf
ja
aad
dec
in
push
outsb
xor
ss
jge
jnp
out
pop
out
jns
jp
ja
out
mov
int3
dec
mov
insl
insl
ss
add
mov
xor
and
roll
xchg
std
out
out
jg
filds
xorb
cmp
mov
mov
jecxz
sub
cmp
sub
sub
jmp
mov
jo
mov
mov
movsb
lea
and
inc
sti
les
pop
cmp
cmp
and
push
lcall
xchg
call
xor
out
cmc
imul
shr
cmpsl
jbe
aas
inc
pop
xlat
push
cmp
subl
dec
and
lock
mov
mov
fs
test
jo
out
incl
dec
clc
imul
pop
ljmp
add
aas
xchg
jb
push
and
mov
push
jg
shrb
mov
xor
cmp
push
ljmp
ja
sbb
loopne
dec
call
outsb
cmpsl
mov
add
mov
inc
sub
jg
test
scas
cmc
stos
xor
jae
sbb
or
sub
jg
sti
push
cmovnp
iret
loope
fsub
dec
cld
decl
push
lods
pop
lcall
dec
cmpsl
mov
pop
push
rclb
sti
pop
incl
inc
scas
push
fwait
or
call
es
insl
cld
mov
clc
fwait
sbb
cld
mov
pushl
sarb
aas
mov
adc
jl
sbb
mov
or
test
sbb
out
mov
push
add
cmc
jl
mov
sub
daa
pop
movb
ja
mov
fdivr
inc
mov
loop
inc
pop
roll
inc
adc
sbb
popf
cmp
loop
push
hlt
lods
divb
data16
dec
clc
testb
xchg
cmp
inc
dec
fprem1
pop
fstps
push
pop
xchg
mov
xchg
pop
xchg
repz
lret
push
fidivs
mov
dec
push
sub
out
sbb
sub
sub
femms
adc
add
loope
movsl
inc
and
lcall
popf
fstpl
in
movsl
fbld
jo
in
decl
sbb
and
mov
mov
adc
sti
les
cmp
aaa
jae
insl
adc
dec
push
lahf
and
push
inc
lahf
enter
sahf
inc
aam
mov
or
jbe
pop
pop
mov
out
mov
aam
dec
arpl
daa
rcr
bound
mov
pushl
lock
lret
ret
sub
scas
call
fnsave
push
dec
or
loope
sbb
in
pusha
movsb
ljmp
sbb
jmp
cmp
and
lock
popf
dec
sbbl
ja
and
pop
lea
lret
ljmp
insl
sub
negl
in
ret
fs
inc
ja
push
push
cmp
push
gs
jmp
ret
cmpsl
decl
bnd
xchg
add
addr16
popf
mov
push
popf
xlat
imul
lret
inc
xchg
div
adc
push
icebp
dec
xchg
lods
call
out
movsl
push
xor
mov
xor
jecxz
pop
leave
jecxz
xchg
push
cli
dec
lock
jo
jg
cmc
fnstsw
inc
das
pop
outsl
pusha
mov
loop
cli
jg
js
js
inc
jmp
jmp
jmp
jo
lcall
pop
jae
pop
pushl
adc
fidivrl
xchg
notb
scas
fwait
mov
frstor
sahf
sbb
jne
shll
or
jnp
mov
ljmp
addl
adc
jnp
ret
lahf
add
dec
out
jle
xor
mov
clc
into
loop
adc
aad
push
pop
das
rolb
mov
out
and
movsl
and
mov
test
loopne
xor
addl
imul
xchg
push
xchg
mov
push
or
stos
jg
loope
ja
and
mov
cmpsb
jp
inc
push
out
push
mov
fistps
cwtl
adc
hlt
pop
jmp
mov
mov
cmpsb
mov
mov
scas
lods
inc
adc
imul
mov
sbb
repnz
outsb
inc
les
outsl
sub
ffreep
push
dec
outsb
adc
cld
scas
subl
dec
jo
jnp
jno
lcall
clc
out
clc
mov
lcall
mov
sbb
and
mov
pop
dec
cld
lahf
ja
out
scas
imul
xor
js
mov
fisubrl
out
insl
sar
mov
and
hlt
cmp
mov
mov
sti
pop
aas
adc
push
sti
call
pushf
xor
fists
fistps
jge
insb
movb
xor
gs
ficomps
setae
or
pop
jmp
mov
lock
push
push
adc
popf
xchg
out
add
push
pushf
xor
out
adc
dec
pop
in
jnp
push
xchg
add
mov
loope
out
jge
cltd
pop
int
in
insb
inc
pop
cmc
out
add
xchg
cld
pop
fdivrl
in
or
mov
pop
push
push
mov
xchg
and
lock
imul
cmc
dec
jns
repnz
roll
std
shufps
leave
lret
scas
mov
aas
xor
xor
xor
scas
je
adc
loope
fnstsw
jle
fdivr
inc
jbe
inc
sbb
sbb
incb
push
arpl
jmp
icebp
filds
adcl
push
xchg
add
es
subb
dec
cmpsl
mov
pop
adcb
out
xchg
clc
jecxz
aas
mov
dec
fidivs
in
sahf
aas
fdivr
dec
sub
pop
aam
sbb
addr16
push
into
pusha
frstor
jg
xor
dec
ret
xchg
cmc
adc
sbb
sti
or
adc
cmp
je
stc
push
call
popa
cmpsl
cmpsb
cltd
mov
cmp
push
dec
lods
jae
jnp
or
lods
add
jmp
pop
into
shrl
jg
orl
dec
dec
sahf
pop
pop
mov
mov
andl
scas
mov
cwtl
push
dec
ja
inc
pushl
pop
or
dec
fstps
int3
cli
xchg
cltd
xchg
xor
jmp
lea
and
jmp
ret
sti
or
aas
cmp
mov
test
dec
cmp
sbb
aas
add
inc
dec
adc
testb
jge
fstpl
adc
ja
ret
imull
fdivrl
push
faddl
pmaddwd
jo
stc
std
adc
xlat
xor
xor
pop
bound
adc
out
pushf
inc
call
mov
jmp
jecxz
xchg
daa
xchg
test
xchg
cli
push
inc
bound
int
xchg
jge
mov
or
xchg
fstpl
cmp
pop
lods
xchg
in
sbb
cwtl
out
iret
fnstenv
movsb
xor
and
mov
inc
jge
pop
adc
jo
mov
push
add
xor
hlt
lock
or
shr
push
sbb
push
ret
clc
call
icebp
mov
or
hlt
mov
mov
add
and
pop
icebp
jg
roll
xlat
or
mov
push
or
xchg
fiadds
push
out
cmp
fcomi
pop
rcrb
fwait
cmp
mov
and
stc
push
sbb
sbb
jg
xor
insb
jg
incb
fwait
jmp
arpl
pop
filds
movsb
lea
lret
cld
inc
outsl
iret
test
or
cmp
test
mov
cld
xchg
adc
dec
in
xorb
or
pop
xor
mov
push
std
dec
sub
pop
aas
mov
incb
jp
mov
cld
pop
inc
in
cmp
mov
jb
push
pop
les
push
xchg
les
ret
cmp
sbb
daa
icebp
sbb
insl
cmp
xlat
jne
jo
adc
dec
aaa
pop
push
jne
sti
stos
dec
lret
ja
aad
mov
pop
outsl
int3
mov
or
mov
mov
jl
and
in
pushf
xchg
les
jg
hlt
fistpll
inc
filds
mov
sbb
ja
std
pop
mov
adc
adc
test
jb
mov
pushf
enter
pop
ret
inc
lods
push
cmpsb
test
mov
lahf
lahf
ret
in
cmp
movsb
popf
int3
mulb
mov
frstor
sub
mov
cmp
dec
jecxz
in
sbb
add
dec
aaa
test
fwait
ljmp
mov
xchg
rolb
mov
out
fsubr
data16
push
push
inc
in
sbbl
xor
pop
iret
lods
sub
push
inc
or
les
jno
das
inc
ja
call
loope
stc
pop
xchg
add
push
dec
xchg
div
les
mov
or
aas
sarl
ret
outsl
add
scas
push
sahf
jecxz
xor
lock
in
icebp
pop
mov
xlat
repnz
test
outsl
adc
lock
aas
nop
xchg
mov
dec
add
std
sarl
mov
sbb
out
dec
sbb
mov
inc
lret
rcll
je
and
fnstsw
mov
fidivrl
pop
movsbl
jo
mov
outsl
das
es
xchg
ss
loopne
sbb
sbb
insl
gs
adc
push
adc
out
pmulhuw
sub
mov
rcrl
es
push
and
fnstsw
adc
xchg
loopne
xchg
lods
jg
cld
frstor
and
je
and
je
push
jp
mov
into
and
add
outsl
xchg
xlat
push
mov
xor
sbb
cmpsb
clc
sbb
faddl
repz
jo
mov
arpl
and
orl
xchg
mov
adc
xlat
push
sahf
mov
mov
out
sub
sbb
jge
cs
cltd
nop
daa
mov
js
jne
sbb
mov
inc
cli
call
mov
cmpsl
sti
or
stos
sar
inc
jge
mov
adc
cs
out
or
inc
jne
pop
add
int
clc
sar
add
xor
mov
sti
ja
mov
ret
test
push
sub
aas
in
cld
mov
adc
push
mov
hlt
mov
add
frstor
mov
sbb
ljmp
cmp
xchg
stos
ljmp
dec
stc
jg
rcr
xor
dec
loopne
ret
sub
add
fbld
xchg
nop
inc
pop
mov
decl
cli
mov
clc
sahf
pop
ljmp
push
cmp
push
push
pop
ja
test
add
push
decl
cli
imul
xchg
adc
jb
sti
mov
cld
adc
roll
adc
aas
sbb
insl
mov
ljmp
call
loop
push
inc
lods
rol
aas
xchg
dec
mov
sbb
lret
pop
in
or
scas
jle
pop
mov
add
stos
popf
dec
fcmove
push
mov
cmp
notl
inc
cwtl
push
pop
xchg
clc
sbb
or
test
lahf
jno
popf
nop
or
clc
jg
fs
leave
enter
mov
cmp
cld
dec
jl
mov
jno
push
test
add
popf
sahf
rcl
and
loop
mov
scas
xor
adc
mov
int
adc
out
cmp
pcmpeqw
fsubp
dec
aas
jne
cs
ljmp
push
pop
decl
insb
cmc
loop
cmpsl
cmp
push
mov
imul
jle
aaa
sub
nop
test
cmpsl
sarb
add
int3
mov
enter
and
push
push
pop
mov
sub
xchg
clc
out
fstl
addb
xchg
pop
adc
sbb
push
clc
lahf
adc
repz
add
fs
in
clc
xor
call
dec
pop
lahf
jg
cmp
popa
jae
sbb
pop
push
or
pop
cmp
dec
push
cmpsb
incb
cld
out
loop
fldlg2
int
mov
adc
add
das
das
jmp
dec
lods
pop
pop
ja
or
inc
sti
aas
adc
and
in
ds
leave
dec
aam
sbbb
test
or
pop
add
cmpsl
pop
movsl
cltd
sbb
jg
int3
shll
fcompl
xchg
cli
sbb
push
lahf
movsl
mov
iret
or
into
push
sarb
decb
mov
add
int
and
mov
jns
pop
shrb
mov
pushf
inc
push
aas
sti
pop
movsl
push
cmc
aad
pop
divb
jmp
popf
xchg
in
xorb
adcb
fistpll
sbbl
dec
filds
push
sub
mov
popa
push
mov
stos
mov
js
iret
int3
mov
sahf
call
aam
out
lret
lods
clc
popa
dec
lahf
scas
jg
cmp
incb
inc
mov
out
outsl
pop
decl
data16
adc
dec
aad
inc
mov
inc
and
push
in
pop
jl
adc
jmp
jne
aam
xor
call
iret
out
pop
inc
jne
into
mov
dec
in
stos
xchg
lahf
or
sbb
dec
xchg
fisubrs
dec
inc
stc
jg
sahf
ljmp
rolb
inc
push
dec
adc
aam
call
clc
pop
scas
pushf
cmc
pop
xorb
dec
or
lahf
iret
mov
ljmp
jne
in
or
ljmp
jp
orl
cli
iret
jae
imul
into
xchg
mov
in
inc
xor
xor
cltd
adc
mov
sub
jne
clc
imul
idiv
cmp
push
push
shrl
pop
mov
push
push
out
cmp
push
jecxz
enter
pop
lds
loop
das
std
sub
repz
xchg
lret
mov
out
pop
jg
ffreep
jmp
gs
sbb
iret
call
stos
xchg
addl
jo
clc
clc
dec
pop
scas
pop
mov
out
xor
sbb
ja
pushl
sbb
out
test
jae
lods
inc
dec
sub
xchg
sub
loope
ret
imul
fbstp
test
stos
pop
mov
sub
sbb
or
pop
aad
cmp
movsb
clc
xor
fimull
ljmp
std
cmp
inc
gs
mov
jle
test
idivb
xchg
adc
sub
icebp
or
push
mov
sub
lea
js
lcall
mov
or
mov
mov
pop
icebp
scas
out
xchg
dec
fs
jg
mov
jno
jne
lahf
inc
idivb
imul
pop
popf
out
mov
addr16
fmul
std
das
cld
mov
repz
mov
pop
xor
mov
ficoml
subl
jg
lods
pop
sahf
inc
xor
subl
add
stc
mov
aas
rcrl
incb
out
rol
je
pop
add
insb
sub
insl
std
jae
mov
dec
mov
pop
rclb
or
call
lods
mov
mov
lock
out
push
cmp
mov
dec
fwait
cmc
pop
inc
jg
mov
jne
and
xchg
and
cmpsl
adc
adc
fwait
lret
push
lahf
jmp
outsl
pop
aad
ret
lret
adc
roll
inc
ja
cmc
cltd
insb
cwtl
xor
cld
pop
clc
test
ljmp
repz
movsb
jg
fs
subl
xor
push
nop
popa
outsl
mov
lock
cli
pop
test
jo
inc
orl
mov
daa
dec
ja
pop
std
outsl
jno
mov
mov
add
jecxz
scas
and
jg
adc
inc
in
js
pusha
insl
scas
cmc
pop
rcll
cmp
bnd
jno
inc
adc
mov
jnp
inc
dec
mov
cli
cld
data16
daa
and
movsl
push
repz
mov
test
sbb
std
lea
les
in
or
mov
inc
into
fwait
mov
push
push
call
jg
cmp
and
jne
idivb
dec
loop
lock
sbb
divl
ljmp
icebp
hlt
rolb
mov
cmpsb
into
ret
jae
out
stos
lods
hlt
push
cmp
adc
add
out
cli
mov
imul
imul
rcrb
lahf
aas
xlat
pop
fcmovu
jge
jg
std
notb
push
or
or
jae
psubb
mov
add
inc
inc
loop
iret
and
xor
jmp
lds
shll
and
sbb
popa
push
lahf
es
or
sarl
out
jbe
imul
loopne
xor
cmp
daa
mov
mov
pop
mov
mov
mov
decl
outsl
jge
out
and
leave
cmp
inc
mov
ljmp
mov
dec
and
or
dec
and
loopne
jecxz
lds
dec
xor
arpl
je
dec
or
cli
out
sbb
fs
jo
xchg
pop
out
shll
clc
pmaddwd
cmp
inc
scas
add
sub
daa
mov
mov
aas
pushf
test
cmpsb
lahf
mov
pop
xchg
test
mov
pop
xchg
scas
and
ljmp
xchg
fldt
test
out
pop
inc
movsb
fucomip
xor
push
stc
or
xor
pop
call
or
push
or
mov
sbb
mov
inc
cld
ja
pop
jg
scas
stos
sub
push
mov
cmpsb
cltd
sbb
pop
add
iret
dec
test
mov
fstp
pop
xchg
add
mov
pop
ljmp
popa
insl
mov
hlt
jae
incl
notl
leave
sub
sahf
ja
sahf
add
xor
pop
jecxz
stc
and
inc
mov
fwait
cmp
add
out
jmp
xchg
or
out
push
sbb
scas
jmp
and
incl
stos
cmp
dec
push
mov
test
cmp
std
cmp
je
lcall
std
out
loop
loopne
or
push
pop
and
add
inc
sbb
test
out
pop
cmp
pop
inc
push
sub
popf
iret
ret
bound
in
mov
and
test
aas
dec
cld
testb
mov
pop
pop
push
psubsw
lds
dec
mov
pop
call
mov
cltd
inc
xorb
rcll
mov
cmc
or
push
mov
cmp
sbb
push
fs
in
adc
fdivl
and
lock
add
frstor
mov
cmpsb
jae
push
add
inc
mov
xchg
lret
mov
std
fsubr
ja
popf
mov
lret
mov
pop
mov
cmp
insl
and
pop
rep
aam
ds
fwait
call
mov
add
jge
mov
repz
cwtl
lret
in
out
loopne
in
fistpl
add
fwait
jne
ds
ret
lcall
test
sar
pop
je
lret
jbe
push
sub
adc
ficompl
popf
lods
aas
xchg
pop
mov
das
stos
mov
pop
pop
jo
icebp
test
adc
shrl
sub
sub
pushf
pop
push
sbb
pop
out
fldl2t
movsb
fidivs
sub
mov
add
xchg
dec
imul
jmp
adc
push
push
gs
loop
cld
jp
adc
daa
pop
or
out
xor
outsb
sbb
das
or
mov
shll
pop
int
mov
outsl
icebp
sbb
inc
sarl
pop
fidivs
mov
rcll
rcl
insb
xchg
and
loopne
jo
sbb
and
call
push
dec
jo
loopne
inc
ret
sbb
call
pop
inc
and
sub
adc
inc
loopne
jl
sarb
push
cmp
out
incl
jno
push
addr16
dec
dec
jbe
inc
inc
push
xor
adc
iret
mov
xchg
cmp
pop
clc
xor
or
pop
mov
adc
push
leave
inc
movsb
and
dec
cmpb
sub
sbb
add
clc
mov
jle
jne
aaa
push
dec
mov
xchg
lea
inc
adc
add
pop
push
mov
mov
and
fiaddl
clc
inc
or
orl
xchg
repnz
xchg
xchg
push
sahf
int3
outsb
add
mov
sbbb
push
mov
imul
roll
in
sub
sbb
dec
adc
mov
inc
sbb
fdivr
cwtl
xchg
inc
adc
add
adc
dec
jno
xchg
push
lods
adc
mov
fwait
xchg
nop
mov
fnstenv
mov
mov
jg
adc
sbb
adc
sub
les
stos
mov
in
adc
dec
sbb
not
push
pop
call
insl
fsubrl
clc
clc
out
adcb
dec
sub
mov
testl
fdiv
out
data16
xor
lret
add
push
shrl
iret
push
inc
adc
cmp
pop
push
pop
fisubrl
test
mov
in
pop
pop
add
dec
add
dec
orl
sbb
jle
aaa
sti
or
popa
imul
rorb
pusha
es
negl
dec
adc
jle
popf
stos
inc
add
jb
fsubrs
icebp
add
pop
neg
push
dec
mov
lods
or
enter
adc
sbb
ret
cmp
add
fdivp
lock
inc
add
fadd
pusha
pop
lret
fdivp
stos
pop
or
jl
add
dec
cmpsb
dec
add
pop
gs
sbb
fcomps
lods
mov
push
shrl
adc
add
adc
js
sbb
adc
xlat
add
pop
or
orl
adc
js
inc
idivl
mov
shlb
and
xor
ret
imul
fwait
adc
sub
pop
adc
and
call
pusha
js
mov
iret
xlat
mov
add
mov
js
push
jle
inc
cld
clc
and
call
xor
dec
push
mov
adc
dec
inc
cmp
lock
push
push
dec
inc
lahf
add
jle
mov
clc
xlat
les
ja
out
insl
push
adc
js
inc
xor
inc
sub
mov
xcrypt-ecb
cmpsl
dec
cmp
shrl
adc
clc
fs
push
cs
sbb
cwtl
or
rcrl
ljmp
mov
push
in
aam
add
fbstp
in
inc
mov
inc
mov
jp
add
test
jecxz
insb
lret
inc
sub
lret
into
rcr
xchg
les
push
xor
cld
gs
cmp
aaa
dec
insl
add
fs
fcomp
inc
pop
inc
xchg
imul
rolb
lea
inc
sarl
mov
ljmp
js
daa
mov
fnstenv
push
jae
bnd
popa
xlat
dec
mov
inc
inc
xor
add
test
ljmp
adc
not
inc
neg
mov
inc
not
neg
dec
scas
jmp
lret
push
shrb
mov
add
gs
push
fs
push
out
cmp
fisubrs
insl
imul
aam
fistl
fs
push
and
dec
inc
incl
fistpl
push
insb
push
outsb
fs
mov
lock
and
adc
push
inc
fldcw
andb
pop
add
inc
cmp
pop
mov
xchg
not
adc
add
inc
add
enter
jmp
ja
aaa
in
pop
pop
xor
rcl
dec
push
xor
popa
ret
cld
icebp
add
push
sbb
add
int
jo
test
clc
pop
add
neg
or
or
hlt
xchg
data16
jbe
hlt
pop
pop
add
push
movsb
push
mov
jl
inc
fwait
and
fwait
push
hlt
clc
jecxz
push
push
inc
sbb
add
ds
xor
cmp
push
aam
test
test
pmullw
mov
das
lcall
add
xchg
push
sub
rolb
cmp
add
sub
outsl
sbb
mov
push
xor
stos
in
or
adc
dec
cmp
iret
mov
hlt
push
cmp
ja,pt
sbb
and
push
sbb
or
gs
jbe
add
fnstenv
mov
pop
test
fucomi
push
ja
js
lcall
add
adc
sub
or
lea
xchg
lock
jmp
dec
jne
imul
in
out
mov
addb
or
flds
add
push
inc
mov
jle
in
fcomps
and
pop
cli
nop
or
inc
pop
and
xlat
dec
ds
xchg
pop
outsl
mov
aaa
push
loopne
cmpsl
fistps
adc
sub
mov
add
add
ret
fistps
sub
iret
add
mov
xor
push
xor
daa
loopne
push
xchg
sahf
push
add
sub
xor
jno
repnz
sbb
pop
aam
add
clc
sahf
xor
dec
paddw
or
xchg
stos
and
and
out
dec
insl
iret
jl
or
mov
dec
ss
movsl
xchg
mov
les
fbld
sub
push
cmp
icebp
inc
arpl
xchg
push
pop
jp
add
sub
pusha
adc
out
ja
movb
ret
insb
push
imul
cltd
fincstp
fdivrs
xchg
and
and
pop
fisttpl
jmp
xchg
aas
dec
lret
fldenv
pop
lods
mov
cmp
and
call
dec
into
rcrb
lahf
cmp
nop
xor
mov
sub
loop
push
jbe
adc
or
loopne
adc
lret
xchg
push
xorl
dec
out
adc
push
push
adc
xchg
clc
fwait
das
xlat
out
stc
incl
cmpsb
jne
inc
add
jle
icebp
in
pop
push
dec
out
jecxz
push
das
loopne
dec
in
mov
mov
out
dec
pop
add
icebp
and
pop
push
js
outsb
dec
mov
out
nop
mov
jle
pop
add
clc
test
sarb
imul
ror
aam
xchg
mov
pusha
adc
fs
mov
sahf
push
dec
sbb
ss
or
and
pop
int
out
popa
rcl
scas
in
dec
mov
mov
rol
inc
xchg
inc
push
stos
pop
cmp
inc
xor
mov
aam
push
iret
push
or
dec
iret
inc
pop
add
lret
cmp
or
pop
inc
sub
jmp
add
add
add
test
pop
cmp
mov
sahf
or
inc
ja
out
cwtl
and
fidivrl
int
xchg
outsl
repnz
jle
inc
sbb
jge
pusha
test
into
mov
xchg
dec
sub
inc
push
or
jmp
xchg
cmp
test
add
pop
jnp
adc
stc
ljmp
xchg
icebp
or
fwait
imul
lods
dec
inc
shll
je
sahf
mov
and
cltd
es
lcall
mov
fisttpl
dec
orl
or
pop
jne
push
cmp
rcrb
jg
dec
sti
imul
arpl
xchg
dec
popa
xchg
movsl
mov
aam
mov
add
movsb
and
mov
pop
lret
push
inc
in
lds
and
dec
mov
test
cs
add
xchg
fs
push
scas
adc
popa
or
mov
insb
int
push
dec
popf
inc
sub
pop
cli
pushf
sub
sbb
sbb
and
and
rcrb
dec
ss
rcrl
push
mov
pop
pop
inc
out
mov
mov
push
fidivrl
sbb
mov
and
add
and
movsb
loopne
or
lcall
push
push
arpl
mov
or
pop
in
pop
dec
test
inc
addl
jne
leave
test
push
jg
push
dec
daa
add
add
into
insl
leave
add
push
scas
bswap
jne
push
inc
and
scas
dec
ljmp
lods
cmpsl
or
or
int3
clc
insb
lcall
movsl
xchg
stos
dec
jge
into
ja
out
xchg
cmpsb
push
popa
adc
xorb
and
imul
movsb
cli
xchg
das
ljmp
xor
jmp
xchg
sub
or
mov
pop
mov
mov
mov
xor
push
dec
add
or
mov
sbb
jmp
in
xor
lcall
mov
fcom
jmp
fwait
sti
lds
dec
jne
xorl
jmp
cmc
les
incb
xchg
jo
add
pop
mov
inc
or
cmpsl
fs
lock
cmp
cld
or
dec
add
pop
sarl
lret
jno
cmp
bound
ret
lea
je
jmp
fcmovu
dec
xchg
les
loope
imul
mov
icebp
mov
xor
aad
frstor
lea
cltd
out
xchg
gs
addb
xchg
popa
xlat
push
push
stos
dec
pop
insb
iret
sub
test
cmp
das
mov
shrb
adc
std
sarb
in
cltd
adc
push
rol
and
fcmovne
cmp
mov
xlat
and
inc
loopne,pn
mov
sub
pusha
xchg
faddl
in
push
push
push
sbb
mov
mov
imul
add
cmc
mov
or
pop
lret
push
cld
push
and
sbb
push
pusha
stos
cmp
add
mov
iret
cmp
fdivrs
or
js
andb
lahf
sti
scas
sbb
shrl
xor
ret
ds
xchg
add
arpl
bound
pushl
xor
repnz
fldl
sub
mov
je
addb
add
mov
cmp
call
and
lret
or
inc
sbb
pop
clc
test
popa
mov
movsl
test
dec
and
mov
popa
dec
fs
movsb
call
or
lods
or
daa
xlat
mov
and
sbb
fisttps
sbb
fdivr
and
sbb
movsb
and
negl
scas
dec
adc
bound
bound
jbe
ret
inc
nop
fstl
imul
sti
pop
inc
jbe
push
adc
movsl
add
shlb
mov
xchg
dec
pop
jno
pop
shl
add
mulb
xor
mov
xor
aaa
add
aad
call
stos
movsl
je
adc
xchg
int
xlat
roll
dec
outsl
push
clc
pop
mov
mov
push
imul
or
out
cmp
or
and
mov
mov
mov
add
mov
jb
and
mov
and
cmp
cmp
xor
and
and
loop
adc
enter
roll
pop
clc
das
jecxz
xchg
ja
pop
pusha
or
mov
popa
adcl
sarb
outsb
push
pop
imul
or
fcoml
ret
add
pop
mov
in
push
adc
sbb
xor
cld
xchg
inc
xchg
shll
mov
dec
jno
cmp
mov
pop
or
lods
mov
cmpsb
test
cmp
cmp
adc
mov
or
frstor
sarb
sub
je
xchg
inc
add
mov
cmp
in
xchg
add
xchg
loope
and
stos
sub
call
xlat
fsubrl
pusha
fwait
or
cltd
jmp
call
cmp
push
ljmp
dec
call
adc
arpl
xlat
js
add
or
mov
test
inc
call
xchg
daa
pop
push
push
xor
outsl
push
sbb
cld
test
shl
push
pop
adc
pusha
add
cmp
mov
adc
pop
mov
jmp
popa
sbb
out
rcrl
icebp
xchg
clc
and
jnp
cmp
mov
outsl
and
lea
cltd
fwait
out
inc
sub
xchg
das
mov
fisubrs
insb
jmp
adc
push
ds
jle
sbbl
sahf
dec
add
ja
stos
popf
out
jnp
mov
pop
aad
cmp
and
jle
movb
and
shlb
sub
and
iret
fists
sbb
mov
movsb
lret
mov
arpl
sub
add
std
add
push
adc
sbb
sarb
lret
dec
rorl
pop
jmp
pop
mov
mov
jmp
dec
xor
cmpsl
stos
stos
add
les
mov
rcrb
cmpsb
cmp
mov
inc
jno
pop
lock
xor
aaa
lock
movsl
loop
shlb
lcall
cmc
jmp
inc
movsl
mov
insb
pop
inc
push
xchg
subl
xchg
stc
jbe
sbb
push
and
cmpsl
pop
mov
aaa
jg
ja
dec
lret
cmp
mov
std
jno
xorl
aad
jo
mov
cmp
jmp
xchg
xor
mov
out
mov
cld
jne
sbb
jmp
arpl
push
pop
cmp
pop
mov
inc
cli
xor
mov
je
test
inc
lods
xorl
das
sarl
pop
btr
xor
sub
and
pop
mov
shrb
mov
pop
sbb
jb
aam
js
ror
xor
jae
pop
sahf
popl
sub
or
sbb
mov
mov
jl
loopne
sub
ret
inc
shlb
cld
imul
out
adc
inc
loop
iret
inc
int3
mov
movsb
loope
aam
and
out
insb
adc
mov
nop
jecxz
push
or
pop
bound
mov
push
mov
add
inc
xchg
shll
push
add
dec
jns
dec
mov
inc
fsubl
lret
jmp
dec
les
mov
pop
fwait
and
push
add
or
push
insl
enter
and
cmp
fcmovbe
mov
clc
mov
push
adc
outsl
jbe,pt
mov
ret
es
adc
sub
stos
mov
pop
mov
mov
fs
pop
out
sub
pop
jns
xchg
cmc
xchg
fisttpl
inc
cltd
sbb
stc
jns
in
add
loopne
push
and
fidivl
gs
add
inc
stos
cli
jno
cmc
jnp
les
push
jnp
mov
dec
iret
jg
sbb
lock
loopne
popa
in
gs
pop
sub
xor
cmpsl
adc
adc
mov
insb
xchg
lret
rorl
sub
adc
push
imul
loop
sub
imul
push
ja
cmp
mov
adc
fcoml
inc
add
outsl
mov
add
repnz
out
shlb
imul
pushf
inc
push
out
mov
push
out
icebp
xor
add
dec
enter
decb
mov
jno,pt
mov
movsl
rorb
test
inc
and
mov
lret
aad
ljmp
sti
push
imul
cmpsl
fdivrs
inc
sbb
je
and
mov
movl
lea
mov
jg
out
push
lahf
add
test
lea
lods
lods
stos
sbb
je
xlat
shl
pop
std
adc
or
jmp
or
in
clc
inc
pop
call
xchg
loopne
dec
push
stos
in
das
clc
dec
movsb
xlat
or
xchg
xor
fnstcw
into
or
xor
mov
idiv
pusha
lret
sub
jae
mov
or
jno
jo
cli
cmp
push
in
and
aaa
inc
iret
lds
nop
les
fidivs
test
push
jne
add
fldt
aad
and
punpckldq
sbb
dec
mov
dec
inc
daa
jne
push
cmp
repz
cltd
push
ret
mov
ds
mov
call
mov
shrb
jmp
jl
adcl
adc
stos
movl
sub
cwtl
or
xor
push
out
push
insb
cli
jo
not
xchg
jnp
adc
mov
iret
sarl
mov
xor
popa
sub
inc
pop
test
into
stos
shl
and
pop
in
addb
jle
or
popa
icebp
imul
push
rcrb
and
fisttpl
cwtl
out
rcll
fldl
mov
insb
lea
or
push
mov
imul
add
mov
pop
xor
ds
xor
sbb
add
nop
hlt
mov
sbb
mov
sub
roll
mov
sub
cmc
or
loope
mov
js
dec
aad
adc
inc
cmp
std
mov
ds
push
lret
nopl
lahf
cmp
mov
push
sbb
sbb
dec
sbb
mov
inc
fldl
loope
lret
ds
mov
movsb
adc
xchg
mov
push
jg
rcl
test
xor
xchg
add
xlat
add
stos
mov
and
mov
cmpsl
addl
jecxz
sbb
mov
outsb
nop
fadds
push
mov
in
pusha
cmp
jae
dec
pop
jmp
jns
bound
jmp
xor
jp
mov
lret
mov
sbb
pop
cmpl
jbe
xchg
cwtl
mov
addr16
xchg
xchg
dec
aas
mov
mov
mov
sbb
dec
lods
pop
lret
repz
gs
sub
pop
stos
cmpsb
ss
scas
adc
sub
inc
out
inc
in
sbb
jp
inc
in
rcrl
popa
add
mov
lds
xor
xchg
cmc
or
or
stos
add
shl
rol
pop
insl
ret
ss
inc
adc
and
dec
or
rcll
cmpsl
xchg
mov
cmp
cs
inc
xor
mov
sbb
sahf
push
insl
or
scas
iret
ret
inc
adc
dec
push
xchg
divb
xchg
inc
mov
sbb
sub
sbb
daa
ds
test
push
or
pusha
je
add
mov
or
scas
mov
cwtl
adc
stos
popf
jno
insl
pop
jmp
sub
mov
adc
mov
dec
and
test
test
loop
clc
add
mov
or
mov
into
out
jge
mov
aam
std
inc
cmpsb
sub
rol
and
popf
mov
cmp
sarl
mov
cmpsl
dec
dec
ret
test
loope
xchg
and
lods
mov
inc
mov
jne
pop
orb
inc
cmp
add
mov
mov
daa
iret
dec
fdivr
fwait
loop
movsl
in
stos
adc
andl
xor
pop
lret
movsl
pop
jl
call
pop
jne
rcll
xor
sbbb
jge
pop
addr16
inc
jecxz
adc
movsb
xchg
xchg
pop
mov
lcall
push
jbe
fs
movsb
jae
jecxz
cmp
mov
jle
add
sbbb
das
sbb
cmp
xlat
and
or
fcmovnbe
shll
ljmp
mov
xchg
push
loop
out
popa
sarb
mov
inc
rolb
xchg
mov
movsl
xor
pop
inc
and
or
xor
imul
sbb
rcll
or
fisubl
decb
fildll
mov
push
inc
pop
cmp
das
fcmovu
pusha
aam
and
push
xor
mov
fdiv
mov
std
or
sub
das
idivb
les
mov
rcrl
sub
pop
bound
xor
sub
fimuls
je
mov
pop
cmp
imul
push
scas
stos
add
pop
jg
jo
test
xchg
shl
push
clc
push
ficoml
adc
mov
lea
pusha
cmpsl
dec
ds
sbb
cltd
inc
popa
lock
mov
dec
negl
cmp
gs
add
dec
cmp
xchg
test
data16
subl
ds
and
cmc
push
xchg
cli
movsb
cmp
addr16
pop
inc
ja
orl
std
lock
stc
jne
add
ret
movsb
push
aas
cmpsl
in
stos
lock
jecxz
pop
xor
inc
and
jns
add
mov
cmpsb
call
mov
shrl
leave
sub
xor
push
or
ja
xor
push
and
jb
sbb
or
jno
ret
hlt
push
out
or
pop
push
test
repz
dec
rorl
and
insl
mov
out
arpl
arpl
push
stos
shrb
fdivr
dec
imul
add
mov
push
xor
adc
cmp
je
bsr
ret
addl
dec
pop
incl
xchg
cmp
ljmp
sbb
and
dec
shll
cmp
fstl
mov
xchg
adc
fdivrs
or
js
sbb
xchg
or
mov
fcmovne
add
loopne
rcrl
sbb
clc
or
sbb
bound
sub
pop
jecxz
movl
ficoml
movsb
int
mov
push
imul
push
mov
and
int3
xchg
push
insb
inc
lcall
lahf
add
jnp
jmp
clc
sub
xlat
sub
and
cmp
ljmp
mov
add
inc
push
or
adc
mov
in
or
push
fistpll
or
mov
push
jnp
pop
cwtl
xlat
inc
dec
xchg
repz
adc
test
enter
inc
mov
adc
insb
sub
jno
jmp
mov
mov
adc
lock
outsb
adc
push
cmp
je
add
dec
mov
cmpsb
xor
push
add
nop
roll
shlb
mov
jle
push
iret
mov
fcmovb
xor
pushf
push
mov
and
jmp
rorb
xor
mov
shll
stc
lods
xor
fwait
cmp
enter
xor
je
mov
mov
dec
aad
adc
xchg
mov
out
mov
lcall
add
cmp
pusha
xor
out
aas
xor
and
test
push
lea
inc
sbb
mov
hlt
loopne
push
cmc
sbb
pusha
jmp
lds
adc
imul
sub
lds
sub
xchg
cwtl
in
nopl
push
or
mov
hlt
outsl
push
scas
div
cmp
xor
nop
cli
testl
loope
out
test
push
add
dec
mov
movsl
aam
mov
and
push
mov
add
xchg
cmp
data16
jbe
mov
loop
out
dec
daa
jns
xabort
clc
sbb
sub
imul
lock
and
repnz
movsl
sahf
push
or
push
and
sub
jo
arpl
rol
movsb
sub
ret
fsubl
mov
pop
enter
test
cmp
iret
fadd
test
xchg
mov
orb
mov
add
push
sbb
ja
lock
aam
divl
pop
outsb
jae
pop
dec
lcall
fsts
dec
lcall
lret
je
inc
rcrl
sbb
clc
inc
cmp
lcall
or
scas
mov
xchg
aad
nop
sub
push
insl
mov
sbb
les
dec
js
sarl
add
imul
add
push
test
and
pop
jb
xchg
pop
movsb
or
out
jecxz
sub
orb
aad
nop
sbb
pushf
lea
xor
mov
repz
js
stos
adc
jecxz
stos
pop
js
xchg
cli
add
xor
jecxz
add
push
test
mov
pop
push
in
cwtl
cmc
cmp
lret
mov
push
sbb
mov
insl
push
mov
mov
ret
xchg
idivl
cltd
sbb
cmp
lret
out
scas
add
jo
into
fwait
xor
lret
scas
inc
push
imul
push
xchg
scas
xchg
mov
sub
mov
dec
icebp
xor
shrl
leave
push
or
push
stos
jne
inc
imul
es
mov
xchg
int3
adc
inc
insb
mov
and
ljmp
stmxcsr
push
inc
cmpsl
cmp
imul
adc
daa
inc
mov
push
adc
mov
lds
inc
mov
int
and
xor
pusha
xor
xchg
sub
cld
out
in
nop
mov
cmp
mov
imul
cmp
icebp
xor
inc
repz
mov
icebp
sub
dec
lods
push
cwtl
pusha
cwtl
popa
in
mov
pop
xor
aam
add
test
add
rcll
cltd
leave
cmp
adc
out
ljmp
xor
aad
imul
push
and
xor
lret
jo
xor
mov
push
sub
push
aam
and
test
ret
sub
int
rorl
gs
adc
cwtl
or
add
pushf
jo
rcrl
das
sarb
mov
sub
pop
repnz
dec
in
js
enter
out
cmpsl
fimuls
jmp
pop
mov
lods
sbb
add
mov
mov
pop
push
addr16
outsl
scas
dec
rcll
adcb
arpl
out
stos
xor
or
inc
adc
mov
and
xchg
test
mov
orb
insl
dec
adc
lods
or
shll
jmp
cmpsb
jg
and
popf
data16
dec
cmpsb
mov
or
iret
mov
sbb
mov
add
mov
sbb
lock
rolb
stc
push
mov
pop
jne
jns
hlt
ret
cmp
inc
mull
sbb
hlt
push
or
pop
pop
jg
test
cmp
loopne,pt
aaa
cwtl
xor
sub
cmc
sbb
cmp
cmc
iret
out
fcoms
mov
add
pop
outsb
in
ja
pusha
mov
rorl
mov
mov
xchg
addr16
lret
mov
call
rcrb
dec
sbb
cmp
adc
jge
dec
in
xlat
fs
loop
cmpxchg
fwait
lcall
cmp
insb
ljmp
stc
por
mov
push
mov
adc
xor
cmc
jge
and
jbe
xor
jge
jb
imul
lods
xchg
cmp
cmp
pop
test
xchg
mov
in
jge
mov
push
add
movsb
mov
sub
pop
mov
mov
jle
cmp
ret
add
sbb
push
rolb
add
loop
pop
jmp
mov
leave
inc
sbb
shlb
cwtl
lods
mov
cli
xor
jbe
jecxz
outsl
inc
movsb
sbb
dec
cmp
adc
and
lds
mov
cmp
sar
test
fldt
sub
push
fdivs
push
add
shlb
jp
dec
js
jnp
add
les
push
rcrl
pop
std
pop
mov
arpl
and
adc
call
adc
sub
mov
cmp
mov
inc
cmp
and
lods
push
and
xchg
dec
xor
pop
popl
scas
push
mov
adc
movsb
add
lods
mov
adc
jae
and
insl
nop
test
stc
movsb
or
and
mov
push
mov
or
sbb
gs
xor
jecxz
sahf
or
dec
gs
mov
test
loopne
or
xor
ficomps
loop
add
cs
adc
and
inc
cmp
lods
inc
mov
xor
sub
mov
cmp
mov
inc
inc
lret
inc
lods
jb
sbb
jnp
mov
inc
cmp
cmp
sub
dec
jl
adc
push
pop
movsb
sub
pop
push
sub
xor
das
sbb
inc
and
cwtl
nop
dec
cmc
xor
fdivs
popf
out
adc
int
mov
mov
dec
addr16
jae
cmp
add
dec
data16
stos
fiadds
mov
mov
pop
in
xchg
das
lea
movsl
arpl
push
lods
ret
or
or
inc
dec
mov
xor
in
push
pushf
aad
or
cmp
xchg
imul
jecxz
sti
hlt
pop
push
movsw
loopne
das
scas
mov
test
inc
ljmp
adc
jo
in
jo
es
dec
jg
adc
ljmp
dec
scas
mov
add
lea
adc
outsb
lahf
or
add
aas
stc
adc
or
mov
clc
ror
iret
sbb
imul
push
and
xchg
or
adc
aas
mov
ds
or
lock
xchg
loopne
pop
inc
sti
ds
pop
inc
xor
push
mov
cmpsl
mov
lds
mov
loop
clc
dec
movsb
mov
fiadds
cmp
icebp
add
mov
push
testl
rol
cmp
sbb
xor
push
enter
or
insl
sbb
mov
out
imul
xchg
push
jmp
jle
push
jl
pop
les
shll
xor
mov
cltd
pop
push
add
jb
cmp
adc
push
loopne
pop
sti
mov
std
negb
dec
mov
scas
dec
movsb
add
inc
popa
or
fisttpll
jno
gs
xchg
ljmp
cwtl
aaa
sbb
test
push
mov
mov
adc
push
and
and
sub
out
add
flds
cs
jne
shrb
add
dec
xchg
fsts
cmp
test
pop
jnp
pusha
jp
jle
dec
lods
inc
ret
push
inc
mov
scas
jecxz
or
sbb
pop
xchg
jae
test
iret
or
popa
pusha
repnz
rcrb
sbb
hlt
pop
fsts
int
xor
jns
sahf
pusha
cmc
test
add
arpl
sbb
and
in
or
aas
mov
rol
or
jp
repz
xchg
lods
jo
test
in
ret
sub
scas
aas
movsl
je
jl
int
pop
push
jg
add
xor
mov
sub
cli
in
push
sub
popa
and
les
sub
add
dec
popf
jno
je
pop
pop
sbb
dec
inc
jl
jo
sub
fimuls
xchg
sub
iret
add
push
outsb
loopne
pop
xchg
fiadds
mov
insb
pop
shl
dec
adc
pop
add
push
cmpsl
xor
pop
pop
lea
cld
push
cmp
cwtl
jp
repnz
xor
imul
fdivrl
enter
and
fidivl
mov
pop
or
mov
sub
insl
cld
daa
or
dec
dec
mov
pop
add
outsl
fs
subb
fucomi
jae
lea
push
sar
xchg
pop
jne
inc
xchg
inc
jecxz
rclb
adc
push
jg
dec
insb
lret
push
jns
push
push
mov
mov
xchg
adc
ret
leave
ret
inc
push
repz
movl
xchg
push
push
adc
fwait
push
ret
jns
lcall
std
cmpsb
push
test
dec
xchg
sub
adc
dec
push
xor
in
mov
inc
push
js
push
add
and
fcoms
jmp
lcall
inc
push
dec
mov
sar
pop
inc
inc
pop
xchg
aaa
je
or
jns
mov
inc
decl
shll
shl
adc
outsb
push
or
in
pusha
pop
shll
or
push
jle
inc
push
push
lods
repnz
push
sbb
or
sub
negl
push
jne
pop
rolb
and
cs
xor
jbe
shrb
inc
dec
mov
daa
sbb
loopne
cmpsl
loopne
into
adc
aaa
cmp
xor
subb
push
insb
aad
xchg
jecxz
push
add
push
outsb
push
enter
mov
rorb
sub
add
lahf
ds
in
ret
js
add
jmp
inc
sbb
mov
push
fs
sar
pusha
dec
xor
incb
sub
cs
aaa
cmp
jbe
jmp
xor
add
outsb
ja
inc
aad
sbb
enter
inc
sbb
pushf
add
out
dec
mov
sub
cli
adc
jg
ja
leave
ret
push
test
es
inc
inc
ja
jo
dec
inc
xor
mov
aaa
je
or
or
inc
xor
xchg
xor
out
ljmp
stc
inc
and
fwait
and
cmp
mov
inc
loop
adc
and
outsl
dec
inc
call
xor
stos
push
mov
dec
movlps
jge
mov
and
jmp
inc
out
push
jns
jo
lret
push
cwtl
xchg
pop
notl
push
ss
xchg
arpl
sbb
add
loope
jle
mov
or
pop
cmp
mov
or
pop
sub
dec
inc
dec
sbb
or
push
add
fcomip
inc
pop
addb
andl
repz
sbb
push
mov
mov
aad
loope
pop
mov
sbb
sub
aaa
xor
xor
ret
add
out
push
and
mov
add
fiaddl
dec
inc
sbb
pop
pop
add
imull
add
pop
pop
out
dec
aaa
push
and
imul
and
add
adcl
addr16
sub
mov
sub
sbb
xor
push
int3
ret
ret
clc
push
movsl
jl
mov
cmpsb
imul
push
add
inc
xchg
xor
push
iret
pop
sub
push
jae
aam
je
dec
jg
lahf
cld
pop
pop
add
sub
push
xchg
xchg
in
inc
nop
fidivrs
push
clc
clc
inc
add
dec
sbb
leave
ret
test
add
inc
cld
mov
xchg
xlat
jo
je
push
daa
outsb
xchg
dec
stos
push
inc
or
adc
jns
inc
sub
filds
dec
dec
push
dec
push
push
enter
shlb
sbbb
add
notl
and
arpl
push
rcl
mov
imul
mov
lea
pop
sub
xlat
or
inc
aam
xor
loope
mov
ret
dec
pop
jbe
inc
cli
loopne
cli
adc
lahf
pop
pop
test
mov
sbb
stc
add
sbbl
hlt
add
push
push
xor
add
add
dec
and
sbb
in
inc
punpckhbw
add
mov
pop
insl
xchg
pop
adc
cmc
cld
cmpsb
iret
clc
xor
add
lret
push
or
pop
push
dec
bound
push
sub
xchg
xchg
and
push
add
bound
push
lret
sub
push
movsb
add
cli
xor
pop
out
test
lret
inc
jl
rcrb
and
pop
sbb
cli
hlt
popa
gs
push
sarb
push
mov
xor
sub
xor
mov
scas
push
rorl
inc
pushf
and
sub
add
jg
dec
sbb
xor
sub
add
sbb
mov
mov
adc
dec
add
repz
add
iret
sbb
pusha
mov
loopne
ds
fldl
call
jns
aam
cld
push
lahf
or
sub
sbb
test
je
adc
add
shrl
mov
sbb
popa
shlb
pop
insl
push
mov
sar
adc
pop
inc
add
add
or
das
pop
mov
push
sub
or
lahf
add
jp
imul
sbb
test
sbb
adc
xchg
rclb
inc
bound
or
js
sarb
addb
dec
mov
fbstp
push
ss
push
js
or
adc
addb
inc
xor
lcall
inc
lret
cli
mov
sub
js
add
sbb
inc
dec
add
or
sahf
je
add
sbb
push
inc
lods
add
inc
jp
rorb
lret
push
lock
hlt
push
xchg
mov
jmp
incl
fs
push
push
insb
dec
inc
fs
bound
push
adc
or
push
mov
ret
outsb
dec
inc
pusha
sbb
jns
push
pmaddwd
push
ret
push
outsb
add
inc
add
or
mov
add
clc
out
outsl
bound
dec
inc
add
inc
add
pop
push
outsb
add
es
or
dec
and
push
xbegin
sub
rolb
mov
test
subl
dec
sbb
add
xor
addb
push
lock
pop
jo
dec
push
jo
push
lret
fstl
mov
fstps
idiv
adc
aam
inc
mov
jecxz
push
dec
lea
dec
cmp
add
inc
or
lret
add
sbb
and
add
in
sub
adc
adcl
insb
and
sub
or
mov
adcl
fldenv
call
push
aaa
cmp
push
dec
aas
fstl
scas
and
icebp
neg
sbb
push
pusha
add
mov
jbe
out
push
mov
fsubs
push
inc
pop
addb
in
dec
sbb
pop
test
scas
mov
pop
iret
sub
push
mov
fcompl
not
dec
dec
fiadds
out
push
sub
outsl
push
push
push
adc
cmpsb
mov
xor
dec
xchg
xor
cmp
rorb
push
mov
sub
adc
xor
jg
pop
and
das
ljmp
dec
popf
mov
pushf
adc
mov
xchg
insb
xchg
out
das
and
outsl
xor
icebp
call
popa
or
pop
in
bound
enter
sub
pop
mov
pop
cmpsb
roll
pushl
call
add
loopne
es
adc
cmp
aas
sub
subl
imul
das
jo
push
gs
loope
in
push
in
cmp
adcb
std
push
js
iret
add
clc
jmp
jne
or
inc
inc
pop
pop
cld
push
pop
iret
jecxz
xor
sbb
push
adc
inc
ds
mov
hlt
outsb
and
fcmove
in
in
inc
dec
rorb
or
xor
bound
je
sbbb
pop
adc
add
rcr
cld
cmp
sub
int3
add
xor
xchg
rcl
pusha
dec
add
mov
gs
sbb
push
lahf
xor
jne
push
pusha
xchg
mov
xchg
mov
push
add
push
or
inc
push
lcall
xchg
and
pop
adc
dec
add
mov
cli
insl
inc
adc
push
pusha
not
push
add
mov
sbb
xor
leave
mov
mov
rorl
push
sbb
dec
push
xchg
std
hlt
and
aad
popa
ja
loope
pop
xor
jae
xor
jno
dec
sbb
pop
push
dec
andl
push
insl
dec
mov
test
jb
loop
jnp
fldt
lds
mov
xor
fcoms
les
int
nop
push
sbb
mov
add
adc
nop
fsubrl
repnz
pop
cmp
pusha
loope
pop
fsubrp
sbb
jg
and
inc
inc
pop
add
or
mov
outsl
movsl
add
lods
sub
jne
inc
pushf
shll
inc
cmp
dec
aad
push
inc
push
dec
ss
cmp
inc
adc
es
dec
xchg
adc
ret
or
jmp
sub
lods
adc
es
repnz
gs
popa
add
inc
ss
imulb
shrl
mov
rorl
ja
aaa
cmp
pop
pop
das
inc
adc
xchg
xor
push
inc
and
add
cld
or
inc
xchg
adc
cs
push
mov
gs
push
push
xor
mov
mov
stos
insl
push
imul
inc
inc
push
or
add
dec
gs
sbb
push
inc
sar
sbb
inc
push
outsb
adc
dec
cmpsl
pop
lock
std
push
xor
inc
jb
xchg
mov
mov
in
in
add
sub
and
fwait
dec
adc
dec
jbe
lods
add
sub
jg
and
add
mov
neg
dec
or
mov
sub
adc
roll
clc
dec
sbb
arpl
jp
mov
inc
add
dec
jb
popf
hlt
cmp
push
subl
outsb
daa
mov
jb
sbbb
jmp
shlb
add
test
and
and
add
xchg
xor
or
fnstsw
xchg
adc
inc
push
add
and
adc
add
adc
dec
add
add
add
adc
and
push
pop
imul
or
or
lods
and
fcmovne
insb
mov
cmpsb
pop
or
or
sbb
inc
test
in
outsb
push
add
and
inc
mov
int
lods
add
and
push
sbb
cltd
ror
inc
dec
push
xchg
adc
add
jbe
or
mov
data16
outsb
test
sbb
xchg
test
add
push
loop
add
fisubs
push
mov
push
test
stos
fldcw
inc
xor
pop
loopne
inc
cltd
clc
push
adc
js
negb
and
lock
in
cmp
decb
cli
test
daa
fsub
inc
adc
ret
imul
movb
inc
sbb
data16
push
bound
or
pop
adc
or
insb
bound
mov
or
cmp
or
or
jle
add
fisubrl
out
push
and
pop
pop
clc
add
in
jo
stos
push
mov
mov
cmp
and
in
pop
add
outsl
jbe
nop
and
gs
gs
xor
cs
insb
or
adc
mov
mov
fadd
int3
pop
xchg
and
imul
sub
or
xor
push
inc
add
jbe
mov
lcall
sub
loopne
in
push
out
add
hlt
add
mov
outsb
insb
jbe,pn
iret
int3
push
pusha
add
into
inc
pop
ret
loop
insl
cmp
and
push
pop
bound
mov
ljmp
adcl
mov
add
and
cwtl
sub
movb
add
mov
js
push
push
inc
loopne
int3
add
insb
cld
pop
sbb
cmp
sbb
sahf
or
dec
cmp
addr16
jo
jl
and
cs
ret
popa
cmpsb
mov
inc
sbb
xchg
add
pop
push
mov
es
mov
push
popa
rdpmc
and
add
sbbb
xor
adc
or
inc
sbb
in
adc
pushf
dec
add
cmp
add
sbb
enter
je
mov
daa
xor
jae
lods
push
add
rolb
push
add
sub
jg
incl
push
jb
je
push
jb
imul
je
outsl
outsb
push
sub
outsb
jae
pop
imul
add
je
bound
cmp
negb
inc
ds
insl
inc
push
jns
xor
jnp
push
imul
adc
ja
arpl
push
pop
sti
out
sti
push
push
gs
arpl
jae
data16
jns
mov
das
dec
sub
gs
popa
xor
outsb
imul
aaa
or
jnp
fcomi
push
je
lret
insb
in
subb
outsl
pand
sbb
lret
and
inc
outsl
jae
pop
fsubrl
gs
gs
and
insb
int3
inc
jns
pop
push
imul
dec
outsl
fs
xor
dec
gs
sbb
comiss
adc
xchg
popa
insb
push
imul
inc
lcall
cmp
xorl
sbbb
push
and
push
push
push
dec
loope
sbb
push
pusha
addb
inc
mov
inc
mov
inc
dec
dec
jne
jg
xor
dec
adc
adc
gs
es
inc
insb
outsl
bound
pop
scas
popa
fadd
push
imul
dec
inc
mov
mov
push
or
mov
ror
push
jae
and
popa
sbb
dec
loop
push
nop
addr16
xor
push
out
push
xchg
cmp
das
fimull
testb
outsl
ja
stc
jne
sub
div
clc
inc
imul
inc
dec
in
mov
addr16
adc
bound
xchg
icebp
subb
shll
insb
sqrtps
mov
insb
inc
mov
or
inc
push
jae
inc
push
insb
push
outsb
push
cltd
and
jbe
push
sbb
je
ret
mov
or
daa
cmp
gs
lods
mov
pop
mov
cltd
sarl
mov
shlb
adc
or
int3
or
js
repnz
pop
lret
xor
int3
fwait
out
icebp
lods
cmovne
sub
cmp
outsl
mov
inc
inc
nop
and
and
jne
xor
and
gs
in
mov
insb
jo
push
outsb
popa
fs
push
xchg
imul
outsl
loope
imul
pop
inc
sbb
mov
arpl
lret
cmp
imul
sbb
jmp
fsubrl
adc
dec
iret
test
push
loopne
cs
test
loopne
lods
add
clc
mov
arpl
cmp
cwtl
xacquire
ja
jb
cmp
adc
push
cmpsb
inc
dec
gs
loopne
mov
addr16
and
js
fcomps
iret
push
es
jae
arpl
dec
divb
pop
mov
xchg
jns
out
je
fadds
pusha
sbb
sub
outsb
popa
mov
inc
fs
rcll
xchg
add
xchg
push
aaa
pusha
imul
pop
bnd
imul
outsl
pop
stos
ror
idivb
out
loopne
int
push
dec
es
sbb
mov
outsb
sbb
roll
je
gs
fldcw
lods
jae
sbb
xor
jb
adc
sbb
mov
scas
jae
addr16
aas
andl
inc
adc
jnp
addl
inc
push
dec
daa
sub
or
mov
aaa
data16
sbb
dec
testl
ficoms
das
sbb
pusha
mov
push
xchg
and
lock
cmp
movsb
popf
add
gs
mov
and
notl
pop
fucom
inc
insb
in
add
outsl
ja
push
btr
add
jae
mov
pushf
fidivrl
mov
int
inc
push
mov
jb
push
popa
fwait
pop
pusha
mov
xorb
shrl
add
fdivrs
inc
inc
inc
inc
pop
je
jae
jl
push
mov
lods
loope
dec
js
inc
push
dec
inc
dec
mov
jno
in
xchg
nop
and
or
adc
fdivrs
sbb
out
push
mov
insb
js
dec
popa
clc
inc
jb
cmp
call
inc
cmp
mov
fmull
sbb
cs
jp
clc
push
and
outsb
ds
int
scas
lock
inc
fs
daa
xor
lds
or
push
xor
mov
and
testb
inc
sbb
jg
imul
and
loopne
mov
mov
cmp
pop
ss
dec
pushf
es
call
jae
aad
inc
rolb
inc
jne
dec
jge
jnp
dec
push
and
loope
int3
lock
inc
push
sbb
insb
jbe
mov
movsl
xlat
mov
mov
or
cmp
scas
xchg
das
and
and
mov
add
inc
jae
lods
push
pop
push
pop
ret
adc
add
pshufw
bound
jns
sub
bound
add
xchg
subl
or
ljmp
clc
stc
mov
jno
or
add
cmp
lods
adc
iret
cmpsl
inc
mov
sti
sbb
add
sbb
loopne
outsb
jg
jb
inc
sahf
bound
enter
or
push
sub
loope
push
mov
push
inc
daa
inc
outsb
je
dec
iret
loop
imul
push
sbb
push
add
jl
jae
imulb
pop
mov
sbb
jns
inc
movsb
jo
dec
jbe
add
ret
or
rcll
sbb
jne
iret
loopne
ja
js
add
imul
push
clc
cmpsl
push
dec
inc
inc
outsb
pop
jae
dec
push
psadbw
daa
into
xchg
addr16
dec
insb
mov
mov
inc
or
sub
inc
gs
and
mov
rolb
inc
cmp
je
adc
push
mov
and
jmp
or
jbe
cli
mov
test
push
sbb
mov
scas
pushf
and
inc
adc
xor
push
push
mov
pop
insb
sbb
push
lods
andb
mov
xor
push
and
test
add
jno
jae
fadd
dec
jnp
sbb
adc
lods
adc
lods
fisttpll
fnsave
bound
sarb
dec
rclb
push
insl
fistpl
inc
add
mov
fs
imul
fdivs
inc
sub
inc
in
clc
js
push
push
fisubrs
lahf
cmp
insb
xor
das
push
insw
jb
jecxz
cmpsb
sbb
push
push
push
mov
mov
lds
fwait
mov
dec
sub
lea
jno
add
add
in
adc
sub
push
sub
and
pop
gs
push
adc
cmp
add
cmpsl
inc
imul
add
add
xor
movsl
stos
cmp
jmp
add
pop
jbe
negb
pop
add
sbb
insl
or
imul
push
add
adc
cmp
jbe
ljmp
dec
adc
outsl
add
or
bound
push
and
add
lcall
ljmp
out
dec
in
push
push
inc
add
dec
and
mov
es
rcrb
jp
insb
push
sub
aaa
sub
das
xchg
dec
xchg
and
add
inc
and
and
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
dec
lea
aad
mov
adc
aaa
aaa
fcmove
ret
dec
cmp
mov
sub
gs
cmp
push
cmp
mov
loop
fwait
xchg
scas
fwait
cmp
dec
pop
cmp
loopne
or
mov
in
ds
mov
testl
ret
inc
test
lods
cli
sbb
cmpsb
fdivrl
xor
pop
pop
pop
mov
rcrl
je
or
test
aad
jnp
cltd
mov
xchg
inc
idivb
outsb
push
jnp
fisttpll
fnsave
ret
repz
shll
sbbl
pop
je
push
push
jl
sub
pop
ja
insl
or
or
out
inc
mov
adc
xor
adc
xchg
roll
and
dec
ja
pusha
xor
aam
jge
testl
adc
ljmp
dec
fs
pop
mov
pusha
rorb
xchg
add
aad
mov
sti
outsb
push
cwtl
fistpl
iret
pop
push
cmp
jmp
outsb
jl
pop
data16
cmpsl
ds
push
out
mov
jge
sub
insl
in
dec
or
and
mov
mov
push
dec
loop
inc
int3
jnp
jge
and
push
mov
jmp
adc
jne
and
lods
push
mov
inc
into
hlt
mov
leave
mov
int
jo
loop
and
outsl
or
sti
aaa
push
rol
mov
lahf
ss
or
aaa
fnstenv
dec
sub
pushf
in
inc
nop
mov
sbb
xchg
pop
enter
int
test
and
sbbb
test
inc
push
mov
incl
lock
xchg
.byte
.byte
.byte
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pop
nop
add
adc
add
pop
push
add
adc
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
push
add
add
push
push
add
aas
add
add
add
add
add
add
add
je
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
add
bound
insb
add
add
add
ja
push
add
add
add
sbb
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
add
bound
insb
add
add
add
ja
jne
push
add
bound
jbe
and
inc
add
add
add
insl
add
add
add
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
aaa
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
insl
add
insb
add
add
add
add
and
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
bound
insb
add
add
add
ja
push
add
add
add
add
add
add
add
add
add
add
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
add
bound
insb
add
add
add
js
add
add
add
sbb
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
add
bound
insb
add
add
add
ja
jne
push
add
bound
jbe
and
inc
add
add
add
insl
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
xchg
add
je
add
cmc
xchg
add
nop
xchg
add
add
add
or
xchg
add
pop
xchg
add
test
add
and
add
sub
add
cmp
add
inc
xchg
add
enter
push
xchg
add
rclb
add
add
fcoms
add
add
loopne
add
je
add
adcb
add
xchg
add
mov
add
add
xchg
add
add
add
ficoms
add
lock
add
add
add
cli
xchg
add
add
add
push
xchg
add
add
add
and
add
cs
add
add
add
inc
xchg
add
add
add
push
xchg
add
add
add
pusha
xchg
add
add
add
push
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
jne
popa
jo
cs
insb
add
jns
je
imul
imul
insb
add
insl
xor
cs
insb
add
fs
insb
cs
insb
add
insb
popa
outsb
insl
popa
outsb
cs
insb
add
gs
cs
insb
add
jae
je
insb
jae
fs
insb
add
insb
insl
outsl
outsb
cs
insb
add
outsb
jae
outsl
outsl
insb
cs
add
jae
jo
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
insb
jne
je
jb
jo
outsb
inc
outsb
jne
add
add
inc
jb
jo
push
dec
push
jb
je
arpl
push
gs
je
inc
inc
add
dec
insl
insl
dec
outsl
arpl
dec
inc
add
push
je
push
jns
je
insl
push
imul
arpl
push
imul
inc
insb
outsl
jae
inc
outsb
jne
add
add
gs
dec
inc
imul
add
add
jae
je
insb
inc
jne
push
je
imul
dec
inc
outsl
ja
insb
outsl
popa
fs
add
push
gs
outsl
bound
add
push
push
push
dec
jo
outsb
push
gs
gs
