in
test
or
mov
pop
mov
sbb
xchg
sbb
les
fistpl
mov
adc
mov
pusha
jle
lods
jg
sbb
popf
adc
cli
jnp
inc
mov
adc
pusha
shlb
sub
jle
pop
jmp
repz
push
test
mov
stos
repnz
xor
xor
pop
xchg
pop
mov
push
aad
faddl
mov
cmovno
or
lahf
inc
ja
sub
fnsave
jb
arpl
push
sbb
dec
pop
andb
dec
sbb
mov
aaa
gs
shlb
or
int
mov
adc
insl
mov
mov
push
lea
dec
add
mov
mov
scas
lret
fistps
jge
dec
pop
cmp
arpl
lock
xchg
mov
repz
push
cld
jmp
adc
push
xchg
fildll
pop
stos
outsl
mov
mov
movsl
nop
aaa
stc
add
push
sarl
pop
fcmovnb
push
ja
jmp
and
pop
jg
mov
shlb
inc
sbb
add
sub
push
xor
sahf
dec
xor
imul
leave
pop
mov
xor
int
lret
cmpsl
ret
flds
mov
cmpsl
pop
xchg
out
clc
cwtl
es
lods
mov
shl
inc
push
fwait
ret
dec
lahf
pop
es
inc
adc
xchg
lret
sbb
out
test
lods
sti
cmpsb
pop
xor
mov
lcall
lret
ret
lock
outsl
sbb
add
jp
imul
add
lret
movsl
dec
sbb
xlat
pop
sbb
test
jmp
push
mov
and
cmp
ror
inc
pop
cld
leave
sbb
jno
inc
fmuls
fmuls
jp
sbb
push
stos
jge
inc
lcall
jle
imul
negb
mov
sbb
jmp
cmp
int
cmp
js
mov
inc
sbb
aad
dec
shlb
dec
frstpm(287
or
adc
inc
adc
fsubr
dec
vpmullw
pop
rcll
fsubs
sar
jecxz
fnsave
inc
fwait
enter
mov
push
sbb
test
cmpb
push
rcll
pop
add
cwtl
dec
and
mov
mov
test
add
int
fs
mov
jns
mov
mov
pop
push
jle
pop
lock
into
sbb
add
pushw
cwtl
dec
or
nop
push
stos
mov
aaa
fadds
mov
movsl
mov
fcmovnu
ljmp
popf
lret
icebp
add
cmp
mov
xchg
fsts
sub
ficoml
cs
imul
aad
xor
xor
sbb
push
leave
jmp
or
xchg
into
xor
addl
mov
hlt
xor
jo
xchg
adc
stos
cmp
lret
xchg
pop
fnstenv
sub
xchg
push
sahf
push
jle
iret
xchg
pop
pop
je
cmp
xchg
push
jle
clc
enter
add
jle
xor
daa
hlt
xor
popf
outsl
dec
mov
loope
and
enter
xor
out
push
shlb
roll
mov
adc
setg
daa
push
inc
sti
lds
pop
and
mov
shll
pop
adc
add
fs
popf
pushf
cmpsb
xchg
and
insb
mov
and
in
mov
lret
lcall
sbb
mov
scas
xchg
bound
cwtl
nop
popf
mov
or
jp
xchg
or
shl
mov
adc
adc
cmp
mov
push
or
lahf
scas
pop
jno
in
rorl
sbb
andl
jmp
or
inc
pop
jmp
and
dec
mov
fptan
stos
cmc
mov
repz
inc
insl
out
jmp
or
cmp
clc
rolb
scas
inc
cltd
enter
push
adc
jp
sub
sub
out
jne
mov
mov
shlb
ret
cmp
and
mov
test
fwait
mov
inc
mov
cld
daa
fnstenv
mov
inc
sbb
inc
sbb
or
roll
lret
inc
sbb
daa
push
mov
pop
test
mov
pop
mov
jns
xchg
and
jae
push
clc
mov
mov
xchg
add
cmp
or
cmp
adc
lock
mov
mov
ljmp
jnp
sbb
jge
pop
xor
fwait
js
jp
mov
mov
cmc
cmp
add
xor
push
psllq
dec
sarb
clc
bound
pop
idivl
stc
repnz
or
add
mov
roll
mov
jnp
sbb
mov
in
int
xor
jb
add
and
sub
enter
aad
or
add
fdivrl
mov
loop
ljmp
xchg
div
cmp
xor
rcrl
add
mov
lahf
fcompp
inc
pop
cli
add
cltd
xchg
adc
clc
in
and
jmp
cwtl
cmc
xor
sbb
mov
scas
xchg
bound
cwtl
nop
popf
mov
or
jp
xchg
or
shl
mov
adc
adc
cmp
mov
push
or
lahf
scas
pop
jno
in
rorl
sbb
jl
clc
jle
je
jmp
or
inc
pop
jmp
and
dec
mov
fptan
stos
cmc
mov
repz
inc
insl
out
jmp
or
cmp
clc
rolb
es
cltd
enter
push
adc
jp
sub
sub
out
jne
mov
mov
shlb
ret
cmp
and
mov
test
cmc
lret
clc
cmp
inc
pop
pop
push
mov
add
rcl
fistps
inc
dec
test
xor
and
xor
stos
sub
push
mov
push
dec
sbb
pushf
cs
mov
sahf
das
xchg
stc
cli
in
test
or
inc
test
bound
and
xchg
ficoml
outsl
les
sbb
inc
cld
repnz
movsl
fstl
jnp
dec
je
into
xor
sbb
filds
adc
mov
andl
dec
adc
rorl
mov
xchg
mov
icebp
pop
ret
inc
gs
inc
or
and
add
int3
sbb
push
inc
cltd
enter
jo
dec
push
int3
insb
enter
adc
or
cmc
enter
xchg
push
adc
out
mov
or
pop
jp
arpl
pop
and
cmp
mov
cmp
pop
rol
cmp
insl
cltd
popf
sti
jecxz
arpl
inc
sbb
inc
aas
rolb
cmp
sbbb
inc
sbb
dec
sbb
inc
lods
push
and
leave
xchg
inc
sbb
dec
pop
inc
mov
bound
call
xor
push
sub
add
push
add
xchg
stos
sti
push
fimuls
mov
sarl
dec
xor
cmp
push
fcompl
jmp
mov
js
dec
xlat
push
mov
sbb
mov
in
aam
fdivs
aaa
rcr
xor
sbb
daa
adc
test
gs
inc
jnp
inc
mov
pop
into
fmuls
mov
jne
jecxz
adc
add
inc
dec
lahf
cmc
iret
pop
sub
pop
pop
enter
mov
add
insl
sub
in
into
hlt
ja
in
xor
sbb
lcall
dec
xchg
mov
sbb
in
dec
push
divb
push
imulb
and
mov
sbb
add
rclb
cwtl
or
adc
mov
add
int3
xchg
sbb
pop
pop
repz
mov
cmpsl
xchg
test
inc
addr16
mov
xchg
add
pop
mov
adc
sub
mov
xor
lds
push
fsub
jmp
pushf
sahf
xchg
cmp
push
pushl
cmp
je
loope
into
inc
fnstsw
or
pop
inc
sbb
adc
iret
mov
test
adc
es
xor
xchg
sub
fdivrl
and
push
push
mov
mov
sbb
mov
test
inc
sub
sub
push
and
lahf
pop
pop
add
fucomi
pop
xchg
sbb
dec
xor
into
sbb
out
mov
sub
imulb
jo
pop
nop
push
popa
sbb
inc
pop
mov
les
in
popf
sti
xchg
lahf
cmp
lds
sti
lods
inc
sub
xlat
std
int3
jmp
repz
jo
shlb
push
cmp
add
add
inc
cmp
jmp
pop
scas
inc
jmp
dec
xchg
cs
pop
jg
pusha
mov
loope
cmp
mov
stc
sub
test
out
jo
dec
sbb
add
dec
mov
icebp
or
or
dec
into
inc
push
fidivrs
jge
imul
popf
cmp
imull
xlat
dec
js
cmp
fstl
sbb
push
loop
adc
sub
loop
decb
sbb
mov
sbb
out
and
sub
call
push
cmpl
lds
ds
imul
flds
push
dec
adc
mov
stos
mov
mov
mov
jb
dec
inc
std
movsl
rcll
loop
push
inc
jno
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
shlb
jo
add
aam
adcb
add
pop
push
xchg
ret
cltd
fcoml
pushf
scas
adc
jmp
push
jg
push
cwtl
mov
mov
xor
cmp
add
jecxz
sub
mov
dec
aam
pop
mov
and
adc
xchg
fists
push
loope
lods
insl
jbe
jp
enter
jg
movswl
jmp
std
mov
sti
and
test
push
sub
enter
lea
cmp
aas
ljmp
lahf
test
pop
test
cs
jmp
cmp
pop
mov
movsl
add
es
pop
mov
shlb
dec
xchg
jo
scas
mov
sbbb
jne
clc
mov
xlat
cmp
inc
and
stc
mov
dec
and
push
jmp
lds
cmp
dec
inc
or
xchg
lcall
lds
ljmp
cmp
loope
dec
in
aad
mov
jmp
lahf
adc
pusha
call
inc
rorb
rorb
mov
mov
adc
dec
adc
xchg
cmc
xchg
xchg
sbb
dec
mov
jecxz
inc
and
cmpsb
pop
repz
dec
jmp
popa
xchg
sub
sbb
daa
loopne
hlt
xor
cmp
mov
adc
xchg
cmp
xor
or
pop
stc
ss
xchg
loopne
pop
daa
into
xchg
jecxz
add
iret
adc
mov
cltd
xor
std
dec
dec
jbe
aad
xor
sbb
jecxz
cli
fimuls
dec
fisttps
mov
push
jge
leave
test
adc
fwait
mov
stos
dec
lret
lds
mov
cmpsl
jae
les
xchg
fisttpl
sahf
ljmp
mov
mov
or
popf
adc
pop
push
notl
loope
mov
out
js
mov
adc
rorb
add
inc
rclb
sahf
test
push
xchg
imul
and
cmpsb
enter
ds
jmp
std
mov
sti
and
das
mov
pop
mov
adc
enter
mov
add
insl
sub
ret
mov
xchg
dec
in
cmp
mov
jae
mov
jecxz
push
xchg
xor
or
dec
or
sub
lock
ja
xlat
dec
sub
ret
mov
aaa
stos
jecxz
sbb
imul
scas
sti
cmp
pushl
shll
mov
pop
daa
sbb
shrb
pop
decl
rorl
xchg
add
jp
add
sbb
leave
cmp
adc
sbb
bnd
lods
scas
fbstp
adc
cmp
andl
addr16
or
sub
and
push
mov
inc
gs
jmp
shrb
lock
lahf
sbb
mov
mov
cwtl
push
xorb
pushf
test
ljmp
cmp
fidivs
mov
orl
in
call
rclb
sbb
pop
mov
jp
add
filds
mov
sbb
leave
cmp
cld
insb
test
lahf
sbb
test
push
in
xor
jnp
jns
mov
mov
mov
test
cmp
push
leave
or
movsl
or
rorl
rcl
cwtl
pushf
xchg
sbb
cli
jecxz
fwait
cmpsb
enter
pusha
jle
scas
pop
icebp
leave
es
sbb
xchg
cld
repnz
sub
fwait
sbb
mov
mov
int3
xor
dec
mov
fnstenv
mov
push
add
xchg
adc
mov
mov
push
fld1
jne
popf
out
push
ret
lds
dec
and
cmp
mov
dec
dec
outsl
xchg
test
mov
mov
mov
cmpl
or
repz
dec
call
mov
in
ljmp
mov
jae
cmpsl
sbbb
sbb
sahf
test
ret
test
dec
iret
push
xor
sar
test
sbb
push
sub
movsb
leave
test
pop
cs
mov
sahf
das
xchg
stc
cli
in
test
or
or
data16
scas
ja
les
bswap
std
lock
movb
loope
fwait
loope
dec
adcl
loop
repnz
inc
xlat
fdiv
sbb
or
inc
add
sbb
mov
add
mov
adc
mov
xchg
insl
cmp
fisubl
mov
lods
int
push
cmp
test
test
dec
dec
mov
in
lea
out
and
push
xchg
mov
and
xor
jbe
iret
ret
clc
shll
mov
repz
pop
and
addb
mov
pop
mov
stc
inc
in
xor
mov
xor
shl
test
xlat
xor
in
mov
lods
popf
inc
in
jae
sbb
dec
test
sbb
jno
les
xchg
sub
or
adc
xchg
fsts
scas
xor
jno
aad
mov
fisubrl
jnp
inc
mov
hlt
inc
and
adc
mov
loopne
mov
nop
lock
or
inc
test
cltd
xor
std
inc
jp
adc
sbb
cmpsb
jnp
enter
inc
rcr
mov
mov
shlb
sbb
outsb
inc
cmp
mov
je
cmp
dec
shlb
mov
fsubp
mov
fisttpll
js
repz
dec
call
mov
in
jmp
jecxz
movsl
cmpsl
sbbb
sbb
mov
ret
test
mov
xchg
pop
jo
adc
mov
cmp
dec
sbb
xchg
scas
movl
or
add
inc
pop
data16
scas
ja
add
and
push
lock
movb
loope
fwait
loope
inc
xor
cmp
jnp
jg
scas
pushl
mov
or
sbb
mov
fwait
push
dec
mov
and
sbb
inc
cwtl
inc
stos
sbb
movsb
fs
add
xor
adc
pop
mov
cmpsb
cmp
xorl
out
adc
mov
shlb
aad
dec
lea
lret
cltd
fimuls
jb
gs
shrb
inc
shl
cmpsl
mov
jp
push
iret
sbb
mov
cltd
xor
std
imul
scas
dec
cmc
push
sbb
jecxz
cli
rorl
dec
iret
or
shrl
leave
test
mov
cmp
popf
pop
cld
mov
or
xchg
orl
xchg
dec
bound
xchg
adc
vpsrlw
xchg
out
pop
mov
ret
xor
pop
cmpsl
pop
pusha
ja
lods
loopne
and
or
dec
jns
mov
out
push
fmul
in
dec
adc
or
inc
sbb
cmp
in
mov
jnp
inc
push
mov
xchg
sbb
push
mov
dec
pushf
adc
rcl
pop
test
mov
push
sub
jmp
fldcw
out
enter
fsubr
push
and
rcrb
pop
push
mov
sub
xchg
lret
imul
inc
loope
repz
cmp
loopne
mov
add
mov
xor
sbb
mov
mov
xor
adc
sarb
cli
push
xor
mov
sbb
int
dec
cmp
out
rcl
fbstp
and
push
mov
push
sbb
nop
lcall
fnsave
imul
sbb
xchg
push
push
pushf
rorb
aas
add
push
nop
push
scas
inc
xchg
cli
stc
and
cmp
sbb
mov
add
jge
jb
pop
and
mov
cmp
andb
xor
push
jno
sbb
ret
sti
xor
cmpsl
sti
xor
popa
ret
sti
ret
andl
sub
sub
mov
push
dec
mov
sbb
ds
xor
les
ds
arpl
lds
cmp
call
mov
testb
pusha
inc
imul
test
iret
mov
dec
mov
test
sahf
sbb
xor
bnd
loope
pop
addr16
sar
xor
sti
pop
into
xchg
pop
mov
inc
sub
adc
jg
or
loope
pop
push
stos
fnsave
sti
xchg
inc
js
stos
loope
fwait
loope
dec
mov
xor
ret
sti
fstps
push
insb
adc
cwtl
add
adc
dec
leave
push
xchg
adc
push
aaa
subb
adc
stos
cmp
pusha
jb
pop
mov
mov
shlb
inc
cmp
mov
je
cmp
dec
shlb
mov
fsubp
insb
pop
push
mov
shr
xor
aam
sti
filds
jno
mov
aaa
out
divb
mov
inc
sub
pop
adc
insl
movsl
adc
adc
ret
sbb
adc
adc
push
pop
and
jns
popf
inc
arpl
mov
mov
je
mov
xchg
or
xchg
add
lret
imul
cmp
mov
or
dec
push
dec
loopne
mov
incl
enter
inc
shlb
or
sbb
loop
mov
nop
lock
or
cmp
or
mov
mov
cltd
xabort
xor
sti
sti
and
test
pop
or
cltd
sahf
ret
out
push
adc
adc
fptan
idivl
pop
loopne
mov
shll
jp
aas
in
mov
mov
sarb
xor
dec
rorb
pop
and
iret
aas
xor
fsubl
xchg
xchg
pop
stos
push
insb
aad
sbb
inc
lahf
push
xchg
cs
lret
jmp
lods
dec
pop
lret
pop
imul
mov
prefetchnta
les
xor
add
jl
add
cld
jp
add
sbb
jne
daa
popf
adc
rorb
cmp
push
inc
push
dec
js
mov
out
push
fmul
jo
adcb
rorb
add
sub
mov
mov
adc
shlb
movsb
inc
add
ljmp
sbb
mov
mov
cwtl
push
sbbb
xor
and
pop
mov
xchg
push
dec
mov
cmp
pop
mov
repz
mov
imul
fisttpll
jne
push
adc
mov
jns
mov
add
mov
dec
adc
movsb
sbbb
inc
sbb
push
jmp
lds
out
lds
pop
ret
xchg
jl
scas
mov
sti
lret
fbstp
mov
or
xchg
mov
dec
bound
push
push
lcall
cmp
xchg
stos
jge
jns
adc
mov
dec
movsb
aad
xor
xor
mov
in
mov
leave
loop
in
nop
xchg
sbb
cmp
pop
inc
mov
xchg
sub
xor
adc
pop
cmpsb
push
fsubs
stos
cmp
push
daa
mov
sbb
outsb
inc
pushf
repz
je
cmp
imul
cltd
push
inc
mov
ret
fs
mov
push
jne
pop
inc
mov
adc
mov
loopne
jmp
shr
sti
jnp
mov
adc
ss
cli
daa
ret
and
cmp
movsl
mov
mov
xor
ja
repz
and
mov
add
cli
hlt
mov
cmpsl
movsl
push
mov
fidivl
pop
mov
jae
lds
cmp
ret
or
xchg
in
imul
arpl
xchg
mov
push
jbe
sub
jno
lds
repz
jmp
fwait
pushf
jne
jnp
inc
mov
in
push
jmp
push
mov
test
sbb
mov
inc
xchg
jmp
outsl
out
sub
dec
loopne
gs
fwait
mov
mov
fldenv
pop
sub
je
or
and
mov
dec
dec
mov
in
lea
out
and
push
xchg
mov
pop
loopne
addr16
dec
subl
in
jmp
jecxz
movsl
cmpsl
sbbb
sbb
mov
ret
test
mov
mov
movsb
fisubl
movsb
fldcw
fucomp
je
push
lret
rcrl
xchg
test
cmp
adc
push
cld
and
mov
jecxz
cmp
mov
aad
mov
add
dec
mov
jmp
lahf
adc
pusha
ljmp
mov
push
addl
or
sub
mov
push
xchg
imul
sub
mov
stos
cmp
pushf
jb
pop
mov
mov
shl
enter
inc
pushf
in
mov
je
cmp
imul
sbb
ret
pushf
sahf
dec
movsb
adc
fsts
std
ss
jmp
lcall
setae
jecxz
pop
mov
jp
add
add
mov
dec
in
or
add
ret
sbb
leave
inc
sbb
push
jmp
lds
out
stc
sbb
push
repnz
adc
cli
mov
cld
mov
and
jmp
add
cmpsl
repz
inc
cmp
rcll
or
dec
sub
lods
fistl
fiaddl
jae
mov
mov
sub
inc
cmpsl
dec
push
fucomi
cmc
mov
enter
adc
dec
mov
adcl
xchg
inc
dec
lret
cmp
clc
outsb
test
mov
jmp
movsb
jp
test
gs
insl
push
inc
aad
jnp
adc
xchg
fldenv
mov
fs
xchg
enter
aam
sub
fidivl
sahf
sub
gs
jne
jnp
xchg
repz
loopne
addl
stc
fstl
dec
mov
stc
into
cmp
sbb
xorb
leave
mov
add
movl
mov
lds
dec
and
nop
push
divb
nop
xlat
dec
sub
ret
adc
cmp
xchg
xchg
or
ljmp
into
fidivl
rcrl
xor
xchg
fimull
mov
jecxz
or
mov
aad
mov
add
inc
pushf
rclb
or
fstl
lahf
add
and
sbb
push
jns
push
xchg
adc
mov
mov
add
sbb
mov
or
std
inc
jp
sub
lret
xor
cmpsb
addl
int
movsb
bound
cmpb
je
inc
fisubl
loop
pop
pop
repz
out
push
and
jle
push
inc
mov
fnsave
out
xor
mov
arpl
mov
popa
out
loopne
mov
push
cmc
lret
daa
cli
into
mov
repz
pop
and
cwtl
pop
lock
fsubl
stc
inc
in
xor
mov
notl
add
xlat
dec
sbb
mov
push
jmp
ljmp
add
inc
pop
les
inc
scas
ja
add
mov
imul
movb
loope
fwait
loope
dec
loope
sub
add
repnz
fstps
loopne
sub
inc
adc
inc
mov
fdivs
sub
or
pop
addr16
jb
mov
xchg
sbb
pop
nop
xchg
push
pop
and
dec
arpl
cmpsl
xor
inc
pushf
outsb
mov
je
cmp
imul
cmp
ret
popl
adc
fsts
stc
ss
lcall
setae
jecxz
or
adc
or
mov
cltd
xor
std
sub
adc
lret
mov
dec
or
xor
test
jecxz
cli
aam
sbb
xlat
or
push
jge
leave
test
adc
mov
cmp
xor
xchg
cwtl
nop
sbb
add
cwtl
stos
pop
pop
scas
xchg
fisttpl
outsb
stos
pop
adc
stc
add
or
lds
rorl
sahf
xchg
fwait
inc
in
cmp
sbb
push
adc
cmp
cwtl
add
pusha
adc
dec
adc
fwait
jmp
loope
fwait
cmp
int3
push
sub
movsl
fidivl
test
gs
ret
aaa
nop
popa
jge
outsl
push
ret
jae
sti
and
cwtl
cmpl
orl
btr
sub
test
fninit
mov
pop
mov
aam
sti
stos
mov
jnp
mov
sti
lcall
js
ret
mov
mov
popl
int
xor
adc
add
rorb
lret
pop
mov
mov
lods
sti
lcall
mov
pop
daa
sbb
test
dec
xchg
mov
scas
testl
push
jb
lods
ret
sbb
loopne
mov
xor
push
pushf
rorb
mov
push
inc
push
dec
fldenv
popf
fimuls
fucomi
push
xchg
add
add
and
mov
mov
xchg
sub
and
push
mov
xchg
cmpsb
or
xchg
pop
int
dec
adc
popa
jge
pop
push
in
popa
dec
mov
in
xchg
enter
aam
sub
lret
sub
addr16
jne
jnp
xchg
repz
adc
push
insb
sub
pop
and
mov
adc
loope
mov
imul
inc
sbb
test
lcall
pop
and
iret
mov
dec
push
dec
and
mov
test
adc
or
aad
in
fnstenv
popf
lret
mov
movb
adc
adc
push
lods
and
stos
std
cld
sub
jecxz
cmp
mov
aad
mov
add
dec
mov
scas
loop
lock
jge
xchg
fdiv
sbb
sbb
js
or
inc
add
sbb
test
dec
lcall
inc
inc
cwtl
inc
stos
sbb
movsb
fs
add
mov
int3
call
es
repz
fsubl
xor
push
and
andl
sub
sub
mov
push
dec
mov
inc
mov
repz
mov
imul
sub
jge
fidivs
lret
push
adc
mov
jns
mov
add
cmc
lods
inc
movsb
or
add
ret
xor
lds
leave
push
jmp
lds
push
clc
mov
movsl
cltd
jne
mov
and
jmp
sub
icebp
add
or
lock
stos
adc
pop
sub
jp
add
sbb
dec
test
popf
adc
call
inc
push
dec
js
mov
out
push
mov
jge
pop
mull
mov
mov
lcall
testb
fsubs
xchg
imul
xchg
adc
rcrb
dec
cmpsb
inc
test
jp
inc
mov
fmull
movsl
movsl
dec
cmpsb
or
cltd
sahf
ret
insl
das
mov
cmp
mov
popa
push
mov
es
stc
xchg
push
jne
daa
in
into
mov
xor
mov
jp
add
movl
add
sbbb
inc
sbb
push
jmp
lds
out
stc
mov
stos
adc
cli
mov
cld
mov
lods
arpl
and
inc
rorb
fmuls
lcall
and
cmp
or
and
sub
lods
pusha
imul
pop
sbb
pop
inc
mov
scas
push
fdivl
into
jo
arpl
add
or
mov
rorl
dec
aam
xchg
xchg
inc
push
mov
sbb
out
push
inc
sbb
cmpsb
gs
inc
je
cmp
pushf
bound
cmpb
je
inc
xor
in
imul
and
jle
mov
das
jns
mov
add
push
mov
popa
push
mov
pop
jmp
in
mov
clc
sti
pop
es
rcr
repz
mov
dec
and
dec
add
sbb
insl
movsl
cmp
mov
inc
xor
and
mov
test
adc
pop
bound
outsb
push
in
fnstenv
popf
lret
mov
cmp
jge
aas
mov
push
sbb
sub
or
sub
scas
xchg
add
dec
movsl
xchg
mov
lods
push
jp
int3
lods
arpl
pusha
mov
cld
loop
mov
dec
pushl
mov
andl
cmp
and
fsubs
adc
mov
loop
adc
loopne
std
inc
inc
sbb
inc
cli
xor
cmpsl
ret
mov
jmp
lret
jge
out
inc
sub
sbb
sub
das
or
ljmp
push
adc
je
cmp
pop
jg
sbb
jecxz
sbb
fisttps
push
dec
js
sti
mov
imul
lret
push
insb
aaa
imul
xlat
cli
addr16
sub
mov
mov
xor
test
mov
sbb
int
dec
mov
fs
fistpll
stos
inc
add
xchg
cwtl
nop
sbb
sbb
inc
xlat
mov
das
or
xchg
out
mov
mov
add
rcl
lahf
pushf
xchg
sbb
in
jecxz
fwait
out
out
ret
scas
scas
pop
icebp
leave
outsb
mov
xor
mov
dec
xchg
and
shlb
cwtl
or
mov
xor
ror
notb
push
fisubs
xchg
imul
pushf
adc
clc
xor
enter
rcll
dec
or
loop
pop
pop
xor
or
insl
das
mov
fcomp
adcl
into
inc
sahf
rcl
hlt
mov
jecxz
jg
fdivp
cmc
jmp
sbb
mov
inc
cmp
add
rcrl
test
or
mov
dec
cmp
and
mov
test
adc
mov
push
push
in
inc
xor
cld
lds
arpl
jo
inc
dec
xchg
rcr
adc
push
mov
xchg
stos
std
cld
pop
mov
jecxz
loopne
fistl
cltd
xchg
loope
push
xor
ficoms
xor
icebp
xor
nop
push
cwtl
add
or
inc
mov
out
dec
mov
adc
mov
push
ret
clc
xor
into
clc
xor
movsb
jne
jecxz
movsb
dec
into
sub
sbb
sbb
das
lret
shll
mull
cmc
xor
pop
cmp
mov
popa
push
mov
aam
sti
stos
mov
jnp
mov
push
lcall
mov
pop
and
and
insl
movsl
ret
insb
inc
adc
sbb
ss
sahf
loop
les
fisubrl
push
in
dec
push
dec
shrl
xchg
or
or
or
cmp
adc
lcall
adc
loopne
cmp
jns
inc
rorl
js
mov
fmull
jnp
dec
push
xchg
inc
fwait
imul
inc
adcl
rcrb
rorl
dec
mov
dec
in
jmp
xchg
dec
aad
pop
rcll
ljmp
push
ret
xor
adc
inc
jo
cwtl
pop
dec
push
lods
addr16
cmc
clc
sub
cmc
xor
pop
cmp
mov
popa
push
mov
aam
sti
stos
mov
jnp
mov
in
lcall
mov
pop
in
dec
add
and
insl
movsl
ret
pop
mov
lods
xchg
sub
adc
xchg
pop
mov
mov
xchg
jmp
shll
repz
rcrl
test
roll
in
inc
pop
xchg
adc
cmp
push
outsl
les
cmp
add
js
cltd
fmull
fwait
scas
dec
push
push
mov
pop
enter
mov
rclb
mov
adc
or
movsb
loope
lock
ror
notb
mov
in
cmpl
push
gs
adc
fdivs
mov
mov
enter
rcll
dec
or
loopne
dec
pop
mov
shr
and
dec
mov
push
bnd
push
xor
mov
sub
mov
into
fwait
lahf
aas
loope
out
pusha
sbb
sti
jnp
mov
adc
sub
jnp
mov
imul
cli
mov
sbb
jae
rorl
dec
push
lahf
push
sub
xchg
fstp
leave
cltd
pop
mov
aad
jno
jno,pn
inc
enter
mov
das
or
shl
mov
jl
or
or
sub
lods
jle
mov
cltd
pop
dec
mov
push
mov
dec
jg
leave
push
nop
sbb
cli
stc
and
cmp
inc
inc
sbb
mov
dec
mov
xchg
sub
or
adc
and
jae
xchg
cmpsb
mov
ret
inc
fstl
jmp
inc
ret
sti
sub
cmpsl
in
out
cmp
mov
or
rcll
int3
inc
ds
inc
pop
mov
sub
fdivp
negl
xorl
in
call
shrl
mov
loope
repz
cmp
mov
in
roll
mov
adc
mov
fs
out
lods
jecxz
cli
pop
dec
sbb
cmpsl
shrl
leave
test
lods
cli
mov
adc
ljmp
or
jo
pop
xchg
sub
jne
inc
pop
lret
stos
xchg
fimull
fisubrl
pop
sbb
push
pop
pushf
ret
xor
dec
insb
jnp
scas
jg
leave
dec
mov
std
cli
jnp
inc
mov
add
dec
pusha
or
sub
xchg
xchg
cwtl
rcl
sub
jo
adc
movsb
pop
jae
inc
jge
jmp
les
mov
mov
mov
mov
cwtl
push
andb
sub
je
and
pop
xor
int
js
push
dec
mov
adc
push
mov
xorl
into
pop
movsl
pop
loopne
call
test
push
cmc
lret
daa
out
into
std
iret
fisttps
mov
jp
add
cmp
mov
popf
xchg
cmp
push
pop
int
sbb
rcrb
int
jb
mov
sbb
lods
fildll
stc
mov
push
sti
dec
into
stos
je
mov
sub
adc
pushf
sub
lret
stos
xchg
fimull
cli
outsl
sub
cmpsb
fcoml
sbb
add
xor
test
cs
jecxz
pop
jo
cmpsl
xchg
and
add
push
sbb
inc
jns
dec
nop
lock
mov
cltd
xor
mov
addr16
mov
and
std
bound
icebp
mov
hlt
and
loop
pop
pop
mov
shr
and
xchg
jle
push
inc
mov
bound
out
mov
loopne
sbbl
sti
fstl
dec
sbb
jns
lcall
and
jns
add
mov
inc
sbb
test
lcall
mov
sbbl
dec
sbb
xlat
or
shrl
leave
test
stos
cli
jnp
mov
pop
dec
popf
ljmp
sbbb
popa
cmp
sub
dec
push
sahf
push
fistl
xor
shrl
test
scas
mov
lahf
jecxz
enter
adcl
mov
adcb
mov
inc
push
lret
js
mov
test
push
fisubl
cmc
mov
mov
and
cltd
mov
mov
mov
cwtl
push
addb
xchg
test
int
mov
cmpl
add
icebp
mov
shrb
movsl
dec
call
fucomip
hlt
cmp
fists
iret
int3
jecxz
hlt
add
mov
sbb
or
push
pop
adc
cmp
xchg
jo
out
dec
sbbb
jne
clc
mov
mov
in
xlat
mov
inc
and
jmp
or
mov
or
cmp
adc
lcall
adc
loopne
cmp
or
or
dec
push
mov
in
mov
leave
loop
in
nop
xchg
sbb
stos
into
jecxz
add
dec
mov
pop
repnz
out
mov
jge
inc
jecxz
vfmaddsub213ps
cmp
movsl
cli
mov
inc
rolb
mov
inc
sti
mov
ret
jno
int3
inc
cmp
cwtl
pop
or
or
into
fidivs
jb
jb
mov
lods
negl
into
mov
fcmovnu
or
pop
dec
mov
daa
lock
mov
lock
loop
cmp
out
les
mov
popf
xchg
jns
push
pop
ret
sbb
iret
adc
xchg
adc
mov
sbb
inc
test
dec
sub
push
lahf
push
lret
xchg
insl
cmp
xchg
xchg
sti
popf
lret
scas
icebp
add
or
cli
adc
sub
push
ficoml
scas
xchg
stos
jge
imul
pusha
sbb
lds
mov
jg
xchg
dec
js
rclb
andl
addr16
xchg
sub
pusha
and
push
mov
xchg
fsubl
and
std
bound
sti
sti
and
sbbl
add
mov
mov
push
adc
adc
sbb
idivl
pop
loopne
inc
int
pop
ret
cli
mov
loopne
lcall
iret
ss
js
rcrl
mov
repnz
pop
mov
or
sub
nop
jg
repnz
sbb
push
jmp
lds
push
clc
mov
jo
inc
cmp
loop
jno
aad
pop
lret
pop
imul
inc
xchg
adc
adc
pop
xchg
adc
or
cmp
stos
jecxz
loopne
cmp
jns
inc
jns
mov
fmull
fwait
scas
dec
push
xchg
loop
iret
or
imul
js
or
cli
cmp
adc
sbb
xchg
lock
mov
cltd
xor
scas
mov
fdivl
adc
jae
xchg
sub
mov
cmpsb
jnp
clc
jno
jecxz
adc
xor
rcll
int3
dec
cld
push
rcr
lret
bound
or
jbe
mov
sti
mov
imul
daa
lock
mov
lock
loop
cmp
lock
mov
leave
sarb
imul
les
mov
dec
xchg
sbb
inc
cwtl
addl
lods
jno
inc
rorb
fmuls
jp
or
xchg
ficoml
scas
xchg
stos
jge
imul
pusha
fwait
mov
lds
shll
jle
scas
push
fdivl
lock
arpl
add
mov
call
les
xchg
sub
pushf
mov
add
nop
adc
enter
ret
mov
jmp
lret
gs
movsb
inc
push
sub
sbb
mov
hlt
dec
adc
pop
mov
dec
sbbb
push
mov
ret
mov
pop
test
cmp
mov
jae
mov
jecxz
push
xchg
xor
or
xchg
mulb
adc
mov
fs
out
int3
jecxz
sbb
lahf
inc
loop
push
test
cwtl
xor
cmc
fcmovne
jmp
xor
sti
fcmovne
je
mov
sub
adc
xchg
lret
or
mov
push
stos
fnsave
pop
loopne
pop
cld
ret
sub
dec
jo
into
scas
popa
lret
inc
enter
movsb
leave
addr16
and
or
jno
jecxz
mov
test
xchg
cwtl
sbb
cmp
push
mov
xchg
sbb
out
fists
dec
adc
inc
push
dec
mov
psubw
call
jge
cmp
or
cltd
sahf
ret
dec
mov
ret
out
mov
push
jne
pop
loope
jns
lcall
mov
mov
xchg
add
popf
sbb
pop
loop
inc
sbb
sahf
test
ret
test
decl
ss
sar
test
gs
push
sub
and
fimuls
dec
dec
dec
js
fldt
jmp
nop
sbb
mov
sub
arpl
xchg
or
push
mov
pop
jno
push
jnp
sbb
adc
adc
lahf
scas
std
fabs
cmp
stos
pusha
ret
subl
fdivs
sub
out
mov
xchg
xchg
lret
or
inc
popa
test
stos
icebp
mov
dec
popf
insl
cmovae
js
fwait
psubw
call
mov
xchg
and
or
sub
mov
rol
pushf
sub
repz
cld
ss
int
lcall
setae
jecxz
pop
mov
out
dec
add
mov
jbe
test
test
lcall
mov
sbbl
dec
sbb
xlat
or
shrl
leave
test
outsl
cli
stos
cmpl
ljmp
adcb
cwtl
stos
pop
inc
scas
xchg
fisttpl
sahf
shl
jne
jl
add
or
pop
fs
lods
mov
rcll
mov
mov
mov
inc
cwtl
sbb
mov
andl
push
loope
sub
cmp
dec
out
mov
add
or
mov
insl
xchg
imul
xchg
jne
mov
xor
cltd
mov
mov
mov
cwtl
push
add
out
mov
jmp
pop
imul
sbb
ret
sbb
icebp
fsts
fldl
sahf
rorl
mov
push
adc
cld
mov
jns
mov
xchg
push
hlt
mov
pop
mov
or
sub
nop
jg
repnz
aas
jo
mov
cmpl
mov
inc
mov
stc
dec
dec
mov
sti
stos
inc
cmc
ljmp
fucom
leave
mov
push
dec
sbbl
push
ficoml
cmp
fwait
adc
loopne
cmp
jo
pop
cwtl
lods
inc
pop
lcall
fwait
out
pop
adc
xor
ss
xchg
xchg
sbb
pushf
add
adc
sbb
add
sub
pop
and
push
mov
inc
jge
jmp
or
xor
lock
cltd
mov
mov
mov
cwtl
push
sbbb
je
and
pop
mov
int
js
push
dec
mov
sbb
dec
inc
xchg
mov
in
cli
int
pop
lret
jge
mov
mov
cmc
jmp
sbb
mov
inc
cmp
add
std
enter
aad
xor
sbb
fs
mov
mov
mov
dec
mov
in
stos
dec
std
ljmp
fucom
jmp
or
or
cmp
adc
mov
push
outsb
les
push
mov
xor
jecxz
fwait
pushf
pop
mov
int3
scas
popa
fwait
inc
fdiv
adc
loop
inc
mov
pop
jb
out
inc
shlb
add
jge
jb
pop
add
repnz
movsl
ret
dec
mov
pop
mov
pop
jae
cmpsb
ret
jmp
pusha
xchg
sub
sbb
daa
loopne
ljmp
xchg
inc
loope
mov
sub
test
fninit
shlb
icebp
add
sti
cmp
mov
clc
sti
pop
es
rcr
repz
mov
dec
mov
sbb
insl
movsl
ret
insb
cmc
ret
sbb
outsb
loop
clc
pop
add
aam
sbb
mov
mov
jo
jb
push
dec
sar
jae
add
sbb
test
mov
sbb
lcall
adc
loopne
cmp
or
or
dec
push
mov
mov
mov
loop
in
nop
xchg
sbb
stos
into
jecxz
add
dec
mov
pop
repnz
out
mov
or
movsl
cli
jg
inc
insl
xchg
adc
test
enter
ret
mov
xlat
pop
fstps
cmp
push
sbbb
xchg
test
ret
out
mov
cmpl
push
mov
orl
in
call
aad
pop
mov
repz
cmp
repz
mov
sbb
pop
mov
inc
sub
push
pop
adc
dec
cmp
xchg
jo
gs
sbbb
jne
clc
stos
add
xchg
dec
sbb
mov
aad
jns
jge
pushf
lds
arpl
jo
test
fdivl
jo
add
jl
or
cmp
pop
jae
lods
jle
mov
cltd
pop
add
xchg
push
mov
dec
jg
leave
push
nop
push
scas
inc
xchg
cli
stc
and
cmp
addb
mov
dec
mov
jmp
aam
xor
aas
fwait
lret
in
mov
mov
xchg
cltd
cmp
fwait
xchg
daa
xchg
pop
fldenv
mov
fs
xchg
enter
aam
sub
fidivl
cwtl
sahf
and
ljmp
xchg
repz
adc
dec
pop
fistl
dec
push
aam
sti
jmp
dec
xlat
jmp
jnp
mov
dec
clc
pop
pop
mov
iret
add
cmp
mov
popf
xchg
jmp
int
sbb
iret
mov
test
pop
stos
push
sub
and
push
dec
sbb
mov
std
in
jmp
nop
sbb
mov
sub
arpl
scas
xchg
push
lcall
inc
or
push
pusha
jbe
lods
arpl
pusha
mov
cld
loop
cmp
push
pushl
ret
mov
andl
push
loope
or
mov
out
dec
shlb
adc
mov
add
xor
cmpsl
ret
mov
jmp
popa
xchg
and
shlb
mov
stos
in
adc
enter
mov
add
insl
sub
ret
outsl
add
pushf
dec
pop
test
cmp
mov
or
xchg
repz
mov
mov
sub
pushf
ret
push
mov
hlt
xor
lret
rorl
dec
add
mov
sbb
dec
sbb
jp
pop
das
xchg
stc
cli
in
test
or
daa
push
cld
xor
add
mov
stos
ja
test
movsl
mov
pop
mov
enter
jmp
sbb
push
xchg
sti
gs
inc
sarb
sub
mov
test
dec
aam
cld
iret
mov
cmp
xchg
call
pop
test
and
movsl
cli
xor
ds
jmp
std
mov
sti
and
xchg
enter
cwtl
jle
inc
inc
fwait
testl
jo
insl
or
xor
mov
lods
lea
into
push
fidivs
imul
popa
xchg
mov
fistps
pop
adc
shll
sbbb
mov
or
test
push
jbe
and
iret
inc
push
pushf
cmpb
adc
push
test
test
andb
out
pop
pop
movsl
mov
jns
lahf
cmp
cwtl
adc
ret
nop
dec
mov
inc
inc
leave
add
inc
sub
xchg
push
mov
icebp
pop
icebp
dec
pop
sub
sbb
shr
sbb
iret
js
jle
xor
icebp
stc
sbb
mov
add
mov
inc
mull
push
push
out
and
addr16
push
jecxz
inc
jmp
cmp
jae
inc
int
jns
mov
mov
rcr
call
aas
sti
sti
and
push
mov
xchg
inc
add
sbbl
lea
cmp
pop
movsl
adc
pop
dec
and
mov
test
sbb
loopne
div
jmp
adc
dec
and
lock
add
movsl
mov
arpl
add
cli
lret
push
jne
xchg
lret
test
sbb
nop
xchg
aaa
in
je
sahf
das
xchg
stc
cli
in
test
nop
sbb
push
leave
ret
subb
add
out
mov
stos
xchg
push
fadds
movsl
xchg
aaa
push
divl
xchg
stc
stos
jbe
pop
jp
mov
ficoms
mov
lret
sub
or
sbb
mov
fwait
push
dec
mov
repz
mov
dec
daa
sub
push
aas
fwait
lret
in
mov
mov
xchg
cltd
jl
cmp
lret
call
cmp
or
cmp
xchg
sub
cwtl
adc
sbb
xchg
mov
cmp
and
mov
test
fwait
lahf
in
mov
and
sub
sbb
test
lcall
fs
xor
and
ss
sub
cmp
sub
cmc
sbb
pop
sti
lock
imul
pusha
push
out
test
andl
andl
push
mov
int3
pushf
mov
adc
test
xor
mov
jmp
mov
imul
jnp
inc
mov
adc
addl
rorb
or
out
xor
mov
and
jno
xchg
jnp
push
cmp
jle
mov
xchg
cltd
jl
xor
lret
gs
add
sbb
add
andb
js
sbb
sahf
gs
adc
mov
add
cwtl
dec
and
mov
mov
test
fwait
lahf
jg
clc
sti
mov
in
inc
hlt
leave
add
sbb
test
lcall
repnz
xchg
roll
dec
and
ss
sub
cmp
sub
cmc
sbb
mov
cmp
in
test
or
test
pushf
and
inc
outsb
cmpsb
sub
mov
mov
push
iret
sbb
sahf
roll
in
mov
dec
sub
icebp
inc
dec
aam
pop
mov
scas
ud0
add
jle
pusha
and
leave
lock
test
cwtl
jg
jge
sbb
lret
xchg
mov
inc
out
scas
mov
fildll
les
fldcw
andb
rolb
aas
or
xor
lret
push
mov
dec
sahf
dec
mov
mov
ljmp
insl
mov
daa
jo
push
sbb
inc
and
add
lahf
jmp
lock
sarl
cmp
and
insb
jne
inc
into
push
mov
mov
inc
push
cltd
jns
ret
xchg
ret
dec
lods
jmp
cmp
inc
push
stc
inc
jb
dec
mov
lret
wbinvd
sub
push
outsl
sbb
push
in
dec
out
outsl
stos
sub
mov
jb
int
sahf
pop
js
lahf
fstpt
push
aam
into
xchg
xlat
jg
xlat
sbb
jae
fcmovnu
test
fstpl
repz
ds
jo
xlat
dec
dec
add
jnp
or
lods
leave
aam
mov
fdivrl
cli
xor
fists
out
cmp
outsl
sbb
and
test
and
xchg
push
hlt
mov
popa
dec
mov
push
test
xchg
jno
pop
mov
or
jno
adc
dec
popa
repz
and
test
sbb
decb
sbb
es
push
mulb
inc
and
dec
pop
fwait
dec
inc
adc
jmp
xchg
stos
jl
ror
jmp
dec
ds
je
fnstenv
aam
jl
ret
add
xchg
adc
inc
jns
dec
cmpsb
xor
jb
fisttpll
cmp
lds
mov
das
pop
icebp
or
cmp
fwait
leave
loop
add
sub
addl
mull
lret
stc
movb
push
mov
mov
std
int
and
mov
jp
fidivrs
jnp
cwtl
cmpsl
ja
inc
pop
inc
into
cmc
add
jp
fpatan
leave
sbb
add
and
hlt
cwtl
adc
popa
mov
sub
pop
pop
add
inc
cwtl
dec
and
mov
mov
test
add
test
inc
lock
xchg
xor
leave
add
mov
or
mov
push
push
mov
outsb
xor
lret
stos
test
fimull
aam
add
push
pop
adc
ljmp
dec
subb
nop
shlb
push
imul
inc
lea
pop
testl
push
xchg
mov
int3
xor
xor
lahf
xor
out
jl
jg
xchg
test
jnp
inc
mov
add
adc
mov
pop
repnz
mov
negb
mov
je
pop
lods
addr16
fidivrs
pop
xchg
fxch
jb
sbb
lods
mov
inc
lods
andl
add
jle
nop
inc
stos
jae
nop
and
push
jb
xor
ja
mov
dec
pop
inc
dec
movsb
les
pop
inc
cmpsl
lcall
push
jb
cmp
and
lret
sti
jno
mov
mul
and
rcrl
inc
mov
jecxz
sbb
or
sub
negb
repz
pushf
inc
stos
xchg
jp
or
inc
cltd
lret
lcall
sbb
std
fistpll
ret
mov
mov
test
in
andb
cmpsb
lds
imul
inc
movsb
xchg
outsb
fwait
es
test
mov
push
or
push
pop
xor
je
add
pop
sub
ret
mov
dec
repz
ljmp
push
mov
cmc
fdivrs
push
test
fidivl
addr16
inc
fisttpl
jo
gs
pop
cmp
mov
xor
dec
mov
sbb
arpl
shll
popf
loopne
inc
xor
movsl
mov
cmp
pushf
subb
aaa
ljmp
jne
les
cmpl
sbb
imul
imul
mov
jg
aad
pushf
ret
pop
mov
pop
adc
int3
or
adc
test
push
jnp
mov
sbb
scas
mov
push
loop
xor
sahf
pop
xchg
iret
loope
pop
ret
adc
add
adcl
out
fnstenv
sub
rcll
test
mov
cmc
push
leave
mov
inc
pop
leave
push
dec
add
sbb
or
std
mov
adc
orl
push
clc
hlt
lcall
or
or
push
test
in
xchg
imul
pop
mov
xlat
or
lahf
cltd
pop
adc
loopne
xor
cmpb
je
test
loope
and
arpl
cmp
stos
mov
mov
add
jo
push
inc
mov
pushf
xchg
cmp
or
mov
jnp
lods
popa
repz
fs
jo
arpl
xor
and
add
sbb
stos
jbe
jle
xor
dec
int3
dec
adc
sub
fwait
xchg
shll
dec
dec
mov
jno
int
add
pop
lcall
divb
jo
xor
sbb
or
pop
adc
pop
sub
jp
add
cmp
lds
pop
mov
das
pop
icebp
or
cmp
sti
and
in
ret
cmp
dec
dec
mov
cmp
or
fistpll
cmpsl
cmc
jmp
pop
pop
test
cmpl
xchg
xor
lret
xchg
test
dec
les
rolb
push
push
sar
push
push
imul
mov
sub
in
into
cld
pop
mov
push
fidivrs
imul
xor
out
sti
pop
es
sub
cmp
mov
sub
pushf
ret
pop
mov
hlt
mov
arpl
push
lcall
fsts
clc
stos
jg
jne
mov
sahf
ljmp
push
bound
sub
mov
jnp
ja
push
scas
test
sub
sub
mov
push
int3
fs
roll
popa
inc
outsl
mov
pop
mov
pop
out
push
outsb
and
je
cltd
cmp
xchg
adc
addr16
fdivrs
shr
nop
outsb
mov
push
fidivrl
cmpsb
cld
andb
mov
push
cmp
jnp
testb
fucomi
hlt
std
mov
sti
and
test
js
and
xchg
push
hlt
mov
popa
dec
mov
mov
push
dec
push
adc
inc
mov
sbb
inc
popf
repz
jl
mov
roll
inc
add
int3
cwtl
stos
add
outsl
hlt
jmp
decb
push
mov
cs
mov
mov
dec
mull
cltd
fbstp
mov
xchg
scas
jle
js
jmp
jmp
ficoml
aam
pop
jnp
lret
nop
cmp
push
or
mov
jle
fcoml
aad
xor
xor
mov
mov
popf
loope
jo
mov
pop
jb
add
mov
out
push
out
popa
add
fisttpl
mov
shrl
fadd
adc
ret
adc
and
jg
lret
pop
jae
lods
fidivrs
jae
pushf
sbb
and
sbb
inc
or
jle
scas
or
and
xchg
addr16
imul
imul
loopne
int3
inc
pop
insb
adc
add
iret
ret
xlat
or
cmp
scas
mov
jl
xor
inc
daa
jne
xchg
test
enter
xor
or
push
xorl
fnstcw
hlt
xchg
push
das
jno
xchg
add
sub
jne
xchg
out
fbld
or
iret
pop
test
rcr
xchg
mov
les
cld
xor
and
fisubl
pop
push
ja
nop
test
add
cmp
lds
mov
scas
das
pop
icebp
or
cmp
fs
loop
out
stos
mov
fs
adc
sub
add
cmc
test
xchg
loopne
stos
inc
movsl
pushf
out
jbe
jg
dec
push
cmc
daa
testl
lods
clc
adc
fwait
mov
sahf
sti
mov
add
pusha
xchg
pusha
mov
xor
out
es
mov
push
loop
xchg
ds
push
dec
mov
xor
and
mov
mov
mov
test
add
test
inc
lock
xchg
xor
leave
add
mov
in
jg
cmpsl
xlat
cmc
push
mov
mulps
adc
ret
scas
lods
adc
jl
dec
ficoms
mov
adc
inc
aas
adc
inc
dec
push
lock
aam
pop
enter
stos
push
repnz
pop
push
je
ljmp
aam
and
jmp
shrb
mov
aas
test
mov
scas
movsl
test
xor
or
dec
std
rorb
mov
cmc
lcall
rcr
out
sbb
ss
outsl
jae
shrb
into
pop
xchg
jo
sti
ret
outsb
popa
fcmovb
stos
jg
jl
cmp
rclb
lret
mov
mov
lods
cltd
hlt
mov
test
outsl
aad
add
lock
sbb
movsb
adc
insl
int3
nop
mov
dec
and
mov
mov
test
add
test
inc
lock
xchg
xor
leave
add
mov
in
jg
cmpsl
xlat
cmc
push
mov
mulps
adc
ret
scas
lods
fisubrl
sahf
xchg
mov
mov
inc
sbbb
sbbb
dec
repnz
sub
mov
repnz
sub
sub
adc
jmp
shrl
push
sbb
mov
xchg
xchg
cmp
inc
mov
enter
dec
pusha
push
dec
add
and
je
mov
cmpsl
adc
pop
sub
je
pop
lods
addr16
add
mov
add
mov
cwtl
inc
data16
add
add
subb
cs
lock
dec
jg
add
outsl
andb
or
faddp
pop
ret
pop
pop
adc
test
pop
mov
sti
mov
push
roll
pop
movsl
adc
orl
dec
sbb
jecxz
test
sbb
sub
mov
movsb
shrb
sbb
pop
repz
movsb
mov
rcr
mov
and
mov
inc
test
adc
enter
dec
movsl
or
sbb
fistl
pop
cmp
cmpsl
or
mov
scas
aaa
mov
cli
jnp
inc
mov
add
adc
and
pop
repnz
inc
fmuls
sti
adc
test
pop
xchg
mov
jbe
iret
test
mov
jae
jo
incb
jl
outsb
addl
sub
xor
imul
rcpps
int3
mov
mov
sbbl
int3
loop
lods
imul
mov
into
add
push
sub
sbb
test
lcall
daa
and
iret
mov
sbb
lcall
scas
cmp
inc
cmpl
in
inc
cmp
dec
movsb
jecxz
cld
dec
inc
sub
sub
or
stos
fs
inc
fisubrl
xchg
xchg
movsl
xchg
jp
xchg
mov
inc
mov
aaa
popf
jo
stos
cmp
ljmp
inc
mov
dec
stc
arpl
lds
add
or
icebp
xchg
sub
dec
lret
fidivrs
cli
shrd
imul
fwait
cmpsl
sti
clc
les
sti
sti
and
test
jnp
and
xchg
push
hlt
mov
popa
dec
mov
or
mov
arpl
std
add
mov
push
xor
push
shll
xchg
sbb
mov
cmp
insb
push
fsubrs
data16
sbb
xchg
xchg
shll
popa
lods
fldt
ljmp
push
sub
pushf
imul
jno
loope
fmuls
adc
ret
push
leave
ret
sbb
imul
scas
aam
je
insl
push
pop
xchg
shlb
je
insl
jb
sahf
fsubl
jbe
lods
adc
fsubs
ja
lods
xor
loopne
stc
mov
inc
mov
jae
in
jo
cwtl
ret
jg
ja
jecxz
sti
or
test
and
xchg
imul
push
lret
arpl
dec
ret
push
outsl
popa
jne
insl
or
sbb
dec
mov
pusha
push
or
daa
dec
loope
cmp
mov
cmp
inc
and
xor
pop
loopne
inc
push
orl
arpl
lds
rclb
mov
mov
jo
or
repz
std
popa
int
push
fcomi
imul
out
sub
jb
test
jmp
mov
cmpsb
test
rorb
push
jb
pop
imul
out
leave
int3
or
and
in
add
mov
add
xor
repnz
mov
or
or
sarb
pop
jl
pusha
test
ficoms
jg
xor
mov
inc
or
es
or
clc
or
fwait
push
dec
mov
and
adc
adcb
mov
inc
insl
out
xchg
inc
test
daa
dec
leave
movsl
jno
pop
inc
enter
pop
inc
cltd
inc
in
cmp
sub
pushf
ret
sbb
std
sub
xor
xor
adc
adc
bound
lods
sub
adc
pop
popf
xchg
mov
les
shl
nop
jle
sbb
mov
ficomps
fldcw
loop
dec
pusha
sub
push
ljmp
jae
pop
cmp
popf
lret
add
and
xlat
cli
aad
idivl
int3
and
out
sub
mov
mov
xchg
inc
and
and
popf
adc
gs
cld
in
jmp
jge
outsl
jno
insb
out
mov
scas
pop
adc
mov
je
mull
mov
rcrb
xchg
xchg
or
fwait
out
jp
in
inc
insl
out
sbb
inc
add
pop
ljmp
ja
mov
push
mov
adc
jb
push
add
push
lds
gs
xchg
inc
stos
repz
dec
je
fildl
in
inc
inc
sar
repz
rcrl
lahf
bound
add
add
stc
loop
mov
aas
pop
dec
dec
pop
lret
adc
dec
pop
push
cmp
popa
ds
mov
cltd
jmp
loop
fsubrl
push
dec
dec
xlat
data16
pop
dec
stos
lret
cmp
pop
fstpt
jns
rolb
divl
dec
inc
pop
mov
cli
test
xchg
fcmovne
aad
adc
sub
call
xor
inc
xor
mov
bound
lret
mov
repz
nop
xchg
lahf
push
cwtl
lock
mov
or
xchg
out
arpl
mov
lret
and
fisttpl
jae
pushf
lods
pop
xchg
sub
cs
repnz
jnp
sahf
jnp
loopne
bound
daa
push
mov
out
sbb
fs
xchg
jmp
xchg
hlt
mov
xor
sub
stc
lea
clc
movsl
dec
sbb
inc
sbb
jnp
mov
jp
add
add
mov
sbb
xchg
xor
mov
test
sub
push
enter
lods
push
shrl
sbb
sub
cmpsl
adc
cmp
std
bound
sub
out
out
jb
push
adc
in
jg,pn
out
in
imul
push
xchg
stos
aam
xor
inc
lahf
jb
lods
mov
test
push
jb
adc
iret
jns
negb
orl
fldt
mov
fsubrs
rorl
repz
out
das
dec
lock
jl
das
dec
iret
shll
inc
int
fsubr
sti
mov
dec
and
mov
rorl
jnp
dec
cmpsl
ja
inc
pop
or
rcll
add
jp
fpatan
leave
sbb
add
and
hlt
cwtl
adc
popa
lods
sti
dec
sahf
inc
sub
pop
pop
add
inc
cwtl
dec
and
mov
mov
test
add
test
inc
lock
xchg
xor
leave
add
mov
or
mov
fcomp
xor
cmp
jge
jge
adc
ret
scas
gs
mov
sub
mov
call
push
xlat
sub
jbe
pop
mov
dec
adc
jg
shl
je
sub
out
fistpl
dec
jno
enter
lods
mov
xorl
push
popa
outsl
aaa
popf
adc
pop
sbb
push
xchg
inc
mov
dec
ljmp
mov
lock
lods
adc
call
les
movb
inc
test
daa
dec
out
jno
pop
add
lcall
aam
and
scas
xchg
and
fdivs
nop
test
push
mov
insl
scas
out
sahf
or
pop
push
test
sbb
stos
cmp
ss
and
shlb
pop
adc
fs
test
push
jnp
hlt
leave
add
sbb
test
lcall
daa
and
iret
mov
sbb
bound
push
ja
inc
in
scas
std
orl
inc
sbb
scas
mov
bound
sahf
fists
ret
adc
add
adcb
add
adc
insb
and
pextrw
adcl
and
push
cmpsl
push
gs
jmp
aas
mov
mov
push
ret
scas
inc
and
sub
mov
fcoml
loopne
inc
sbb
adc
ds
push
adc
pushf
jmp
nop
popa
cmpl
lahf
push
lds
test
sub
dec
jbe
jg
lahf
dec
rorb
shll
outsb
add
adc
or
dec
adc
pop
sbb
scas
and
sub
int3
sbb
jl
inc
push
out
push
xor
fistpl
arpl
repnz
xlat
cwtl
jl
or
pop
rcrb
mov
pop
es
sti
out
fisttps
jnp
dec
pop
insb
cmc
test
fwait
push
push
movsb
ret
mov
lret
add
cli
add
mov
imul
mov
adc
xorl
out
and
outsb
adc
bound
mov
xor
in
xchg
adc
cmp
stos
outsl
mov
cmp
adc
or
cmp
mov
ret
arpl
or
and
test
pop
and
shrb
cmp
mov
xchg
test
push
lds
inc
dec
pop
pop
inc
mov
mov
adc
jmp
popa
xchg
fwait
jl
push
and
push
insl
sbb
rolb
imul
push
mov
insl
aad
in
add
adc
ret
scas
popa
lods
fldt
sahf
xchg
mov
mov
inc
addb
movsb
shll
lock
mov
mov
cs
stos
push
repnz
xchg
mov
push
iret
push
and
push
sbb
fiaddl
stos
pusha
lahf
fistps
inc
shrl
imul
dec
icebp
cmp
pop
stc
add
adc
test
dec
cmp
daa
cmp
adc
and
cmp
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
loopne
xor
cmpb
je
test
push
movsb
mov
dec
push
dec
orl
or
xlat
mov
xor
dec
arpl
sti
mov
in
xor
inc
mov
jl
xor
mov
into
jbe
in
or
loopne
hlt
jmp
decb
push
insb
jne
inc
into
push
mov
cmpsb
ret
in
iret
cmp
xor
inc
mov
push
mov
scas
mov
andl
dec
pop
dec
lret
andl
hlt
xor
push
roll
push
push
xor
mov
or
sbb
lods
jge
fs
into
aam
jge
pop
xor
mov
mov
jle
inc
jo
mov
pop
jb
add
mov
out
push
test
out
cmp
out
mov
nop
pop
mov
adc
scas
mov
add
xchg
cs
repz
jns
outsb
out
sti
cwtl
inc
test
sbb
xor
push
mov
sbb
and
shlb
mov
mov
arpl
orb
pusha
mov
cmp
pop
movsb
lret
xchg
xor
mov
or
jl
loop
out
or
rcrl
and
mov
sbb
sbb
lds
mov
push
push
clc
sub
ficomps
xchg
xchg
pop
das
xchg
stc
cli
in
test
or
test
pop
and
inc
outsb
cmpsb
sub
mov
addb
rcrb
inc
sub
jp
pop
lcall
adc
pop
mov
jecxz
push
cmp
loop
out
cli
mov
jg
sbb
push
mul
inc
lcall
cmp
fld1
stc
mov
cmp
ja
popf
lods
push
jae
fidivrs
sahf
lret
xchg
test
rcrl
xor
into
add
and
rolb
ss
dec
cmpb
add
arpl
aad
sbb
or
test
into
cmp
jle
inc
ret
lds
mov
movsl
jmp
cmc
flds
push
dec
adc
mov
sti
add
imul
sub
and
ret
xchg
jecxz
ret
daa
xor
jns
sub
cmp
sub
cmc
sbb
out
push
cld
mov
bound
data16
scas
pop
rcl
ja
mov
sub
pop
popf
mul
sub
imul
call
mov
adc
dec
sbb
dec
jecxz
push
add
jle
scas
loope
ds
scas
push
or
pop
das
dec
rcrb
mov
fists
cmpsb
cltd
aad
imul
pop
push
rcl
test
inc
leave
pop
xor
ja
jns
jmp
icebp
into
add
mov
pop
add
or
mov
inc
nop
js
push
mov
subl
mov
push
mov
mov
loopne
inc
lds
cltd
xor
mov
lds
mov
xchg
daa
mov
std
mov
xor
inc
push
inc
mov
mov
dec
gs
jle
push
jg
mov
imul
dec
and
lret
ds
jae
iret
sahf
jnp
imul
mov
sbb
out
sbb
inc
shlb
sub
xchg
das
fcomp
push
jne
mov
adc
dec
lods
into
lret
movsb
mov
inc
xchg
fdivl
adcb
aas
orb
mov
std
fdivrl
andl
hlt
dec
les
outsl
mov
aas
dec
inc
push
iret
xor
imul
pop
jns
mov
adc
cmp
es
ud1
adc
cmp
or
cmp
xchg
sub
rol
dec
sbb
xchg
mov
pop
adc
mov
in
mov
bound
adc
xchg
pop
xchg
into
popa
mov
repz
fcoml
xchg
leave
arpl
cltd
pop
jmp
incb
xlat
ret
aad
xchg
mov
sub
mov
aaa
sub
shrl
pop
iret
mov
cmpl
dec
inc
add
iret
push
add
dec
pop
add
or
dec
jmp
js
scas
mov
xchg
sub
add
dec
fidivrs
fldcw
adc
jp
fisttps
mov
mov
push
loope
jo
mov
pop
jb
add
dec
sbb
add
or
push
mov
adc
ja
imul
int3
jbe
xchg
aaa
loope
ret
fld1
je
cmp
inc
iret
add
mov
enter
cmp
repnz
int
or
mov
add
test
bound
jns
ss
add
xlat
mov
in
push
dec
daa
cmp
jp
add
cltd
sub
adc
dec
dec
add
lods
cmpsb
sbbb
lret
mov
pushf
dec
push
lcall
ret
stc
pushf
pop
pop
mov
lahf
fisttps
pop
xchg
jecxz
icebp
fsub
loopne
push
sub
add
push
jg
shl
fcmovnu
adcb
stos
xchg
mov
rcll
test
mov
cmc
push
leave
mov
inc
pop
leave
push
dec
add
sbb
push
dec
aaa
aas
xchg
xchg
adc
or
mov
rclb
sarb
out
sbb
cmpsb
fldt
lock
mov
or
lahf
cltd
pop
adc
ret
cmpb
je
test
loope
and
arpl
adc
xor
ret
xorb
or
mov
mov
out
pusha
xor
push
cmc
mov
dec
pop
jecxz
sbb
rorb
out
inc
sbbl
cmpsl
dec
icebp
xchg
jle
sbb
es
mov
out
test
aad
dec
adc
or
jmp
sub
sbb
ljmp
lret
into
jo
fnstenv
or
mov
jl
sbb
pop
rcl
mov
cmpsb
xor
jb
fisttpll
cmp
push
or
ret
sahf
sahf
xchg
sbb
js
adc
scas
fwait
leave
xchg
xor
adc
ljmp
mov
add
aad
insl
mov
sub
mov
xchg
mov
out
ja
popf
cli
push
pushf
scas
jmp
out
mov
push
dec
add
fwait
out
xchg
mov
fsin
push
dec
jl
outsb
xorl
int
imul
imul
and
cmp
jle
mov
cltd
ljmp
cmp
mov
inc
cmp
inc
pop
adc
in
inc
sbb
or
mov
test
popa
jmp
shlb
dec
xor
lods
dec
adc
or
jmp
sub
sbb
ljmp
lret
into
jo
fnstenv
or
mov
jl
sbb
or
xor
jb
fisttpll
cmp
lds
popf
mov
das
pop
icebp
or
cmp
fs
loop
data16
pop
add
mov
jg
out
aas
add
lea
sbb
mov
iret
aad
cld
xchg
stos
pushf
out
es
jae
pushf
lret
mov
dec
popa
scas
mov
pop
pop
adc
jg
sahf
subl
stc
cwtl
shll
or
add
movd
nop
lds
dec
dec
adc
dec
add
inc
shll
mov
sub
movsl
inc
mov
fldl
pop
lret
enter
inc
mov
cmp
insl
rolb
gs
rcrb
repnz
mov
int
inc
sbb
sarb
in
and
int3
xchg
sbb
std
fistpll
ret
mov
mov
test
in
andb
sbb
mov
mov
inc
insl
jle
popf
mul
dec
sub
cmc
inc
dec
push
cmpl
pop
insb
scas
in
mov
jmp
pop
mov
push
sub
sbb
repz
fwait
adc
add
sahf
xchg
mov
xlat
sti
fs
jecxz
mov
or
das
sti
jb
xor
mov
jecxz
dec
rcll
addl
jmp
inc
mov
pushf
sbb
sbb
sbb
gs
sub
test
cmc
xor
movsb
sbb
pop
add
mov
xor
popf
mov
and
imul
xor
mov
cmp
jp
add
add
mov
sbb
mov
push
testb
mov
dec
and
xor
jmp
sbb
pop
mov
mov
jne
call
mov
xor
ret
jbe
pop
xchg
xchg
adc
in
cmp
popf
addb
repnz
gs
xchg
jmp
dec
stos
int3
mov
scas
shlb
sub
fs
sbb
mov
insb
js
fisubrs
jmp
inc
sarb
clc
mov
adc
or
and
sub
or
test
dec
push
repnz
aas
fwait
lret
in
mov
mov
or
mov
add
leave
mov
test
sbb
dec
jb
xor
xchg
mov
fldpi
mov
push
and
adc
pop
in
mull
xchg
inc
xchg
cwtl
add
cltd
adc
pushf
popf
arpl
push
adc
stos
adc
fsubr
and
dec
mov
insb
arpl
insl
in
popa
ficomps
sbb
cmpsl
mov
lods
and
movsl
dec
push
lea
mov
mov
add
inc
les
jl
or
add
pop
xchg
cwtl
les
pop
mov
sbb
or
stos
xor
xor
mov
mov
push
loope
jo
mov
pop
jb
add
mov
out
push
out
xor
xchg
movsl
out
cmp
scas
dec
cmc
adc
jnp
sub
jb
mov
out
aad
push
mov
es
popf
inc
into
adcb
push
mov
lock
mov
bound
test
ds
bound
xchg
add
and
push
dec
lret
notl
sbb
pop
xchg
pop
cmpsl
fists
inc
decl
xchg
pop
cmpsb
pop
pop
cmpsl
bound
stos
rcrl
add
inc
bound
cwtl
jge
popf
andb
sbbb
mov
and
push
leave
pop
add
sub
mov
fnstsw
xchg
aaa
in
je
sahf
das
xchg
stc
cli
in
test
or
fs
data16
sub
mov
pop
stos
xchg
stos
ja
lahf
push
scas
push
jns
push
sub
add
ret
lea
jmp
mov
mov
sbb
inc
stos
adc
cli
loopne
out
aas
adc
out
daa
outsl
mov
aas
dec
inc
push
lret
xor
imul
pop
jns
mov
adc
cmp
es
ud1
adc
cmp
or
cmp
xchg
sub
rol
dec
sbb
or
lcall
mov
stos
mov
bound
adc
xchg
pop
xchg
into
popa
mov
repz
fcoml
xchg
leave
addr16
outsl
push
jmp
incb
xlat
adc
rclb
mov
jae
loop
pop
stos
push
stos
mov
mov
dec
fistps
test
add
push
pop
add
or
dec
jmp
js
scas
mov
xchg
sub
add
dec
fisubs
lods
mov
adc
jp
fisttps
mov
mov
std
loope
jo
mov
pop
jb
add
inc
pop
or
mov
addr16
sub
jo
mov
dec
mov
push
lods
shrb
jg
lahf
sti
xlat
fmull
pop
outsb
iret
lahf
icebp
es
clc
pop
int3
rcrl
adc
popf
or
nop
push
test
push
subl
inc
into
pop
daa
push
mov
pop
mov
rolb
sti
push
sbb
cld
cmpsl
adc
dec
roll
sub
xchg
push
push
sub
push
mov
mov
shlb
push
stos
lea
ljmp
fldt
int
jno
fildll
push
sahf
jns
loope
pop
in
mov
in
push
addl
mov
inc
lret
test
leave
adc
test
xor
xchg
stos
sbb
dec
repz
lods
cmp
pop
dec
out
cmp
xchg
inc
mov
inc
mov
fdivr
pop
sub
loop
inc
add
push
fldt
cmp
sbb
ss
xorb
cs
xor
jb
mov
xor
and
jmp
cmpsb
or
pop
add
inc
mov
push
push
jp,pt
push
mov
and
pop
lcall
scas
inc
lahf
mov
mov
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
add
mov
sbb
mov
push
testb
mov
enter
jmp
dec
sbb
movsb
cmpsl
adc
movsb
fisubrs
cltd
jge
dec
inc
mov
hlt
lods
push
lods
jnp
mov
mov
xchg
jno
mov
je
xchg
mov
sub
jmp
push
adc
iret
jns
negb
orl
fldt
mov
pop
sub
or
repz
out
das
dec
lock
jl
das
dec
mov
outsl
js
mov
xchg
sbbl
push
mov
cmp
jno
xchg
outsl
lahf
inc
push
test
out
jl
enter
push
leave
daa
in
hlt
xor
and
gs
cli
enter
faddl
push
cwtl
cmpb
xor
les
cltd
mov
aas
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
enter
sarl
aam
xchg
mov
mov
inc
mov
adc
and
xor
dec
dec
and
xchg
cmp
adc
movsb
pop
cmpsb
cmc
lods
xor
dec
inc
sub
int3
add
arpl
in
es
shlb
stc
add
mov
dec
xchg
test
inc
stos
rclb
cwtl
lods
cmp
pop
dec
out
cmp
xchg
inc
lea
fwait
add
jecxz
sti
iret
xchg
test
fwait
sub
add
jmp
xchg
xchg
adc
loop
movsl
icebp
xor
cwtl
fidivl
inc
pop
in
sub
mov
xchg
push
jle
call
les
push
dec
xorl
lret
add
dec
sbb
into
or
lcall
mov
mov
mov
bound
adc
xchg
pop
xchg
into
popa
jae
and
leave
arpl
cltd
pop
jmp
incb
xlat
ret
aad
outsl
into
pop
mov
ret
mov
outsb
aaa
mov
loope
pop
xor
sbb
cmp
rorl
cmp
dec
movb
push
push
sbb
into
xchg
sbb
lcall
mov
lcall
sub
dec
fsubl
out
mov
movsb
mov
fisubrl
jnp
inc
mov
mov
clc
repnz
jo
mov
and
inc
scas
divb
sbb
aaa
push
leave
jne
sbb
fidivrs
push
sub
adc
jge
pop
lods
divl
stc
into
add
and
rorb
ss
lock
or
add
mov
sub
or
mov
adc
xor
fsubl
cmp
in
clc
push
jl
ja
lret
jge
out
sbb
mov
adc
dec
aaa
add
lds
push
rcrb
popf
jnp
mov
adc
sub
pop
notl
mov
lret
jns
xchg
aaa
in
je
sahf
das
xchg
stc
cli
in
test
or
test
cmp
cmpsb
sub
mov
mov
dec
mov
xor
xchg
fdivl
adcb
les
test
xor
add
cs
mov
loopne
xlat
xor
hlt
jbe
aas
dec
add
adc
lods
scas
loop
xor
jae
fdivrp
xor
loope
test
iret
testl
mov
pop
out
test
bound
cmp
call
movsb
lea
push
pop
pop
push
test
mov
lds
add
mov
cmp
jp
add
mov
mov
mov
sub
imul
loopne
scas
lods
pop
inc
inc
sbb
lods
mov
movsl
int
mov
and
bound
sub
xor
shll
or
sub
xlat
inc
loopne
xor
mov
adc
push
jnp
stos
pop
inc
pop
jge
jb
mov
mov
mov
cmc
jge
cmp
rcrl
and
lcall
mov
cwtl
in
aaa
sbb
mov
pop
xchg
mov
mov
mov
mov
jmp
std
mov
sti
and
test
cmp
and
xchg
push
hlt
mov
fimuls
cmp
lods
into
pop
stos
movsb
lcall
push
pop
push
outsl
xlat
test
mov
push
mov
pusha
test
inc
inc
cld
push
dec
xchg
mov
or
out
cmp
mov
insb
mov
lret
inc
std
lods
dec
in
pop
push
fistpll
xor
mov
or
test
inc
mov
or
cmp
adc
mov
adcl
jbe
sub
sub
in
ret
lret
sbb
dec
xchg
jno
insb
jecxz
test
enter
lds
scas
push
imul
leave
xchg
jo
enter
dec
loopne
call
push
rcl
test
mov
pop
cs
icebp
fcomi
movsb
dec
int3
lahf
stc
cwtl
shll
or
add
insb
adc
inc
shlb
vmovdqu
faddp
pop
jae
push
xchg
dec
jnp
and
push
cwtl
add
test
pop
stos
jns
sub
out
insl
mov
or
or
mov
test
popa
jno
ret
in
adc
jns
movsl
stc
adc
test
aad
fisttps
or
in
dec
and
or
jle
and
cmpsb
sub
decb
fwait
int
xor
jb
fisttpll
cmp
lds
jge
bound
scas
das
pop
icebp
or
cmp
fs
loop
out
in
xor
jnp
mov
nop
ljmp
xchg
movsl
dec
hlt
ja
std
test
mov
jecxz
pop
push
jo
jnp
jle
mov
lahf
xor
scas
in
neg
ss
lods
out
inc
scas
imul
mov
inc
inc
mov
pushf
cmp
sbb
arpl
and
movsb
jae
pop
add
shll
xchg
sbb
lret
sarl
mov
stc
clc
jp
add
add
mov
sbb
xchg
xor
mov
arpl
mov
jg
mov
push
int3
push
xor
dec
movsl
arpl
pop
cmp
dec
cltd
jae
pop
fistpll
add
xchg
lods
push
outsl
sbb
fmuls
or
shlb
jnp
xchg
and
mov
xchg
add
sti
and
add
inc
mov
leave
pop
pop
inc
insb
js
in
xchg
jl
sbb
fistl
popl
push
jo
xor
push
rcrl
jb
mov
or
in
insl
xchg
popf
pop
adc
daa
pop
repz
out
icebp
mov
xchg
int3
cmpsb
sub
sbb
pop
popf
sar
stos
test
imul
mov
push
xchg
bound
pop
adc
push
popa
add
jne
mov
adc
out
enter
mov
add
inc
rclb
fucomi
mov
xchg
sbbb
jbe
jp
cli
neg
xlat
fisttps
aad
test
mov
sahf
cmp
stc
inc
repz
adc
int
arpl
lds
adc
mov
adc
mov
adcl
jbe
sub
sub
add
enter
rcrb
add
imul
lea
jo
cmp
pop
out
cld
jb
mov
mov
sub
lcall
adc
xchg
data16
out
cmpsl
mov
jg
repz
lods
lret
aam
ret
cmp
mov
sbb
jo
or
leave
or
cmp
idivb
fucomp
add
sub
movsl
lea
add
pop
shrl
or
xlat
int
add
in
and
lahf
add
out
mov
add
insl
push
sub
pushf
ret
pop
pushf
daa
lahf
iret
push
hlt
mov
inc
pop
and
lock
jb
mov
das
cmpsl
xlat
adc
dec
out
mov
sbb
or
xchg
aad
pusha
sub
lods
scas
sub
sub
stos
rcrl
or
jo
dec
lods
jne
stc
pop
das
mov
sbb
add
cld
sbb
arpl
nop
adc
push
mov
inc
dec
dec
add
add
inc
push
cmp
push
mov
or
in
jg
fsubs
and
pop
jae
lcall
std
cwtl
shlb
sbb
add
jmp
lret
push
sub
or
inc
pop
cmp
shll
fmuls
fstps
adc
sbb
mov
adc
inc
ret
sbb
xor
mov
pop
leave
jb
cld
rcr
push
mov
sub
cmp
sub
cmc
sbb
mov
push
adc
int
arpl
lds
sbb
insl
idivb
out
sub
sub
mov
dec
pop
sahf
cmpsb
and
sbb
icebp
mov
lret
jmp
inc
out
into
bound
lahf
bound
in
scas
add
ret
jg
sbb
add
cli
js
insl
das
arpl
ficompl
sbb
adc
pushf
stc
mov
inc
pop
js
pop
cmpsl
into
call
inc
cmp
jne
cltd
push
loopne
adc
inc
inc
mov
nop
out
push
and
lea
cmp
aas
out
lods
imull
arpl
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
clc
xchg
test
push
leave
push
rcrb
daa
hlt
xchg
scas
sbb
sub
out
dec
movl
mov
cmpsl
pop
sub
adc
dec
mov
scas
pop
pop
cmpsb
loop
orl
inc
stos
sbb
fildl
add
xchg
aad
xchg
test
dec
mov
dec
xor
xchg
xchg
mov
push
inc
jmp
sbb
js
fisubs
xchg
inc
sarb
clc
mov
adc
or
and
sub
or
test
dec
push
repnz
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
cmp
test
loope
and
arpl
es
inc
mov
idivl
inc
lret
insb
inc
inc
lahf
sub
iret
or
push
jl
outsb
scas
sbb
sbb
enter
test
or
imul
hlt
movsb
dec
ljmp
stos
imul
add
and
loope
jne
mov
pusha
out
mov
xchg
sahf
mov
mov
pop
xchg
sub
and
jge
add
andb
mov
fistl
push
shrb
sub
loopne
in
imul
addr16
dec
roll
notl
cmp
inc
addb
das
push
xor
or
jnp
out
push
data16
sbb
shlb
lret
sub
inc
xchg
pop
xor
loop
mov
cmp
inc
aaa
jae
int3
adc
add
lret
ret
fimuls
sub
idivb
add
sub
movsl
lea
add
pop
shrl
or
xlat
int
add
in
and
lahf
inc
cli
out
mov
add
insl
push
sub
pushf
ret
pop
mov
mov
sbb
bound
push
ja
inc
in
scas
jge
inc
sbb
inc
aaa
lret
fucomp
add
fldt
repnz
dec
inc
shl
addb
ljmp
inc
sbb
test
ret
data16
push
mov
pop
dec
xor
pop
gs
lods
pop
adc
pop
pushf
jle
xor
js
in
lds
push
xlat
pushf
sbb
and
pop
push
pop
andl
ret
pop
outsb
mov
or
in
mov
jnp
inc
push
mov
or
xchg
and
leave
inc
mov
push
xabort
xor
cmpsb
ret
cltd
enter
mov
mov
pop
add
or
nop
pop
adc
add
aam
xor
jne
pop
xchg
dec
and
test
sub
leave
sbb
push
pop
add
repnz
sub
setg
jecxz
mov
cmpsb
nop
sarl
xchg
roll
mov
insl
lcall
push
out
out
dec
xorb
sub
mov
push
fcoml
push
test
mov
lahf
cmp
mov
cmp
rorl
cmp
or
cmp
adc
mov
push
lret
lret
rcl
lcall
sbb
lods
sbb
scas
mov
push
int
push
xchg
int3
pusha
xor
rorl
dec
and
mov
inc
lock
fnsave
cmp
xchg
ja
mov
mov
std
push
lret
mov
add
pop
dec
add
repnz
cmp
icebp
dec
mov
out
sbb
adc
adc
aad
lret
gs
loopne
cmc
mov
add
jge
cld
lret
pop
movsl
pop
in
rclb
jns
pop
mov
test
add
in
mov
repz
rorb
mov
mov
fldcw
pop
into
push
mov
mov
xchg
adc
enter
pop
mov
fstl
in
jne
pop
xlat
cmp
ret
lods
add
sub
or
push
mov
jnp
inc
pop
mov
loopne
mov
sub
mov
sahf
pop
or
mov
into
dec
scas
je
pop
aaa
aas
xchg
mov
jne
subl
subl
adc
mov
or
xchg
cmc
mov
addl
mov
mov
or
pop
fsubl
jae
pop
inc
xor
aad
dec
fdivrl
sub
mov
push
xchg
imul
test
les
mov
iret
rcr
std
mov
test
mov
lret
ss
jecxz
pop
dec
xchg
mov
lds
mov
ret
insb
mov
out
mov
test
sti
sbb
sbb
mov
sahf
das
xchg
stc
cli
in
test
or
test
pushf
and
inc
outsb
cmpsb
sub
mov
mov
dec
cmpsl
mov
push
es
test
pop
and
fcmovne
bnd
out
movsl
mov
inc
sub
nop
scas
pop
out
ret
cld
jae
cld
out
daa
dec
lock
jg
xchg
movsl
cwtl
jle
outsb
ds
je
jbe
jg
dec
dec
cmpsl
inc
call
xchg
mov
xor
xchg
push
mov
cmpsb
jno
test
xchg
and
rorb
add
inc
mov
out
mov
int
dec
add
inc
jbe
dec
je
mov
jb
test
and
ret
es
repnz
enter
jle
insl
and
rol
pop
inc
add
imul
mov
cld
jg
cmpsl
xlat
in
ret
sub
repz
sbb
push
cmp
je
test
lods
lods
pop
mov
and
inc
jne
movsb
pop
bnd
lret
cmpsl
sub
int3
sub
sub
insb
orl
fsubrl
arpl
enter
dec
and
pop
mov
icebp
mov
inc
fsubrs
dec
scas
fcmovbe
iret
push
inc
cmp
cmc
and
adc
jmp
and
push
push
cmp
stc
inc
push
cmp
push
mov
or
in
insl
xchg
popf
pop
adc
mov
daa
pop
repz
out
sarl
out
push
test
xchg
add
or
mov
sub
sbb
push
inc
roll
sbb
in
int
mov
pop
loop
lods
ds
add
ljmp
sbb
xor
mov
mov
outsl
aam
sub
jb
xchg
xchg
mov
dec
cwtl
in
sbb
and
mov
mov
sbb
repnz
jbe
push
add
sbb
xchg
iret
adc
orb
jmp
js
scas
mov
xchg
sub
add
dec
fisubs
data16
fstpl
icebp
xchg
jp
fisttps
mov
mov
mov
mov
pop
jb
add
mov
out
push
test
out
cmp
out
mov
nop
pop
mov
adc
scas
mov
add
xchg
cs
repz
jns
outsb
out
sti
cwtl
inc
test
dec
push
jbe
xor
inc
pop
inc
iret
movsb
sbb
mov
pop
push
xchg
push
mov
cli
mov
add
in
and
xor
repz
adc
and
jns
pushf
rcrb
mov
fisttpl
ficomps
cmc
mov
xchg
sub
adc
inc
in
xlat
mov
jecxz
push
sahf
aaa
push
testl
shll
pop
push
lods
push
xchg
movsl
and
jg
out
in
dec
sub
inc
dec
aad
pop
cltd
enter
in
out
int3
mov
in
scas
aas
test
xchg
jmp
push
out
jno
xchg
mov
cwtl
das
push
sub
fdivl
or
add
dec
iret
shl
negl
imul
adc
shll
mov
hlt
test
sbb
cmp
into
and
shll
loopne
hlt
mov
xchg
mov
add
orl
sub
aaa
mov
sbbb
xor
push
repnz
and
mov
test
add
inc
sbb
iret
mov
jae
mov
cltd
jo
pusha
aas
js
push
shl
xor
in
imul
sbb
fwait
aam
sub
and
push
and
and
sbb
sub
fwait
cmpsb
neg
popa
pop
dec
lret
popa
push
icebp
add
inc
fdivrl
cltd
rcr
adc
pop
pop
inc
imul
jge
lcall
lcall
cli
cmp
stos
xor
xor
mov
bound
in
nop
xchg
lahf
push
cwtl
lock
sub
scas
outsb
repz
and
sub
xchg
rcrb
mov
fists
xlat
cltd
aad
imul
test
or
fbstp
out
lods
sti
jae
arpl
and
push
ljmp
add
mov
sbb
jb
mov
xor
call
rcrl
mov
into
fwait
cmp
mov
sbb
jnp
hlt
leave
add
sbb
test
lcall
inc
mov
ret
int3
or
adc
test
push
cli
add
movsl
imul
pop
push
pop
inc
jle
movsb
inc
fwait
push
testb
jae
cmpsl
push
mov
fmull
cmpsb
and
je
cmp
pop
rcr
je
faddp
dec
jp
sub
mov
jne
cmpsb
fisttpll
push
loope
movsb
fstl
fsubrl
imul
sbb
add
popa
or
inc
add
subl
dec
std
adc
les
xchg
jns
fimull
push
mov
or
in
insl
xchg
popf
pop
adc
and
daa
pop
repz
out
rorl
enter
pop
cmp
pop
sub
cli
jecxz
mov
aaa
push
addr16
cmp
test
repz
inc
and
push
jg
shr
jb
aam
addr16
out
jg
lahf
sbb
add
pop
jne
cli
and
sbb
mov
popf
andb
sbbb
mov
and
push
leave
pop
add
sub
aas
ljmp
xchg
aaa
in
je
sahf
das
xchg
stc
cli
in
test
or
test
pop
and
inc
outsb
cmpsb
sub
mov
mov
dec
mov
xor
push
ss
test
jns
jmp
xchg
insb
push
dec
movsl
ss
js
pop
das
rcrw
inc
and
add
or
push
or
ja
pushl
xor
lret
scas
jecxz
jnp
sbb
pop
in
fistpll
iret
rep
mov
push
mov
aas
dec
mov
int
or
jnp
dec
mov
push
sarb
push
dec
xchg
adc
or
subl
ds
ret
pop
pop
xor
sbb
test
lcall
daa
and
iret
mov
sbb
adcl
dec
inc
in
scas
cmp
mov
out
stos
mov
lods
imul
adc
push
dec
sbb
ret
sub
int
add
jmp
dec
and
and
sub
jnp
add
push
cmp
xor
sbb
leave
or
ds
push
sub
pop
std
arpl
lcall
stc
js
xchg
jns
fimull
push
mov
or
in
insl
xchg
popf
pop
adc
mov
daa
pop
repz
out
inc
test
dec
les
shrl
fsubl
dec
in
leave
nop
inc
xor
push
dec
pop
xchg
inc
gs
je
pop
mov
into
pop
stos
shl
pop
scas
pop
rorb
adc
out
jg
lahf
cwtl
cmp
pop
push
push
inc
rcr
cmp
roll
jmp
add
ds
hlt
movsb
dec
ljmp
stos
dec
movsb
mov
cmp
dec
pop
imul
fbstp
mov
xchg
scas
jle
js
sub
pop
xor
xchg
xor
inc
pop
jnp
lret
nop
cmp
push
or
mov
jle
fcoml
aad
xor
xor
mov
mov
sbb
mov
pop
jb
add
inc
pop
or
jmp
imul
ds
je
out
pop
int
inc
movsl
aam
jb
int
aam
inc
and
lret
xor
ss
repnz
leave
pusha
and
cmpsb
addr16
pop
xchg
enter
mov
mov
dec
push
jp
inc
rolb
pop
lahf
lods
fistl
mov
jmp
clc
inc
or
and
fistpl
inc
stc
aas
roll
xor
add
stc
arpl
cwtl
sti
in
aas
inc
lods
dec
inc
ss
iret
mov
cmp
pop
iret
sahf
insb
test
fs
stos
xor
dec
xchg
or
sbb
xchg
out
in
leave
dec
jge
inc
mov
xchg
movsl
add
or
xor
jb
fisttpll
cmp
lds
mov
das
pop
icebp
or
cmp
fs
loop
out
stos
mov
fs
scas
repz
push
dec
xor
or
test
mov
scas
xchg
out
cmpsl
mov
jge
adc
jle
subl
icebp
es
or
adc
add
adc
dec
mov
popf
lahf
loopne
rcrb
ret
mov
mov
movsb
popf
divb
fstl
test
clc
xor
sbb
jne
xchg
mov
mov
sub
pushf
ret
pop
mov
pop
adc
int3
or
adc
test
push
jnp
mov
sbb
scas
mov
push
loop
xor
sahf
pop
xchg
iret
loope
pop
ret
adc
pop
shll
push
jg
shl
je
sub
in
stos
xchg
mov
scas
push
and
sub
es
test
sbb
clc
xchg
jmp
in
ffree
popa
jae
repz
scas
jecxz
cmove
ljmp
lods
sbb
xchg
xchg
jg
fsub
xchg
xchg
test
pop
push
loop
jmp
lea
mov
arpl
jne
cltd
outsl
sbb
and
sbb
lret
dec
sbb
dec
dec
addl
mov
ret
inc
jmp
add
sub
pushf
inc
push
push
call
dec
jl
jecxz
fwait
pusha
sbb
mov
mov
ja
sbb
dec
push
decb
adc
xor
in
inc
ficoms
sbb
ljmp
lcall
xor
ljmp
jbe
arpl
and
or
nop
rorl
fsts
std
dec
jge
adcl
rcrl
rorb
jb
fisttpll
cmp
lds
cmp
bound
scas
das
pop
icebp
or
cmp
sti
and
in
ret
paddb
mov
lock
cmp
popl
cmp
xchg
stos
pop
pop
pop
jbe
jp
fisubrs
ljmp
fists
jecxz
cmp
or
dec
push
or
and
sti
mov
ss
add
and
aas
shl
repz
push
ret
lods
movl
in
cmp
test
out
cmp
les
aad
stos
das
lret
jno
pop
faddl
xchg
mov
sbb
jmp
push
push
test
sbb
in
in
mov
mov
daa
push
dec
inc
ret
jnp
sub
sub
pushf
xor
imul
mov
scas
mov
dec
jmp
lret
data16
ljmp
call
pop
xor
inc
int3
dec
in
sbb
orl
pop
pop
notl
adc
sbb
pushf
lcall
scas
cltd
inc
xchg
jne
pop
pop
int
loopne
enter
daa
dec
mov
repz
mov
dec
inc
add
mov
rclb
push
push
pop
mov
cmp
add
movsb
popf
xchg
mov
add
mov
sub
mov
iret
add
test
inc
lock
xchg
xor
leave
add
mov
or
mov
pushf
xchg
lods
data16
dec
cmpsb
loop
mov
and
push
fstpt
adc
lret
lds
imull
sahf
jnp
popa
jbe
lods
push
xchg
mov
sub
and
clc
mov
movsl
sarl
and
add
adcb
xchg
cmp
pop
pusha
push
out
adc
or
cmp
mov
add
jmp
jl
scas
loopne
or
lahf
xor
aam
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
mov
daa
pop
repz
out
sarl
out
push
test
xchg
add
or
mov
sub
sbb
or
sbb
mov
and
test
pop
arpl
int3
push
xor
jo
and
out
inc
sbb
cmpsl
push
add
shlb
xor
sbb
nop
xlat
stos
movsl
push
movsl
push
rclb
lea
aaa
insb
scas
dec
sub
mov
push
ror
inc
lret
push
mov
subb
fistpll
test
sbb
subl
xchg
das
jnp
push
mov
fwait
push
xchg
jne
push
or
mov
cli
xchg
outsl
aad
js
jle
movsl
jmp
test
scas
add
popa
fsts
mov
dec
cwtl
in
aam
inc
addr16
sbb
lds
cmp
mov
xlat
or
lahf
cltd
pop
adc
loopne
xor
cmpb
je
test
loope
and
arpl
cmp
imul
mov
cmc
mov
mov
add
cltd
sarl
push
ret
mov
ss
leave
idivb
les
shll
clc
mov
push
mov
cmpsl
sbb
sarb
jo
rcrl
filds
int
cmp
test
fbstp
je
pop
iret
sbb
rcr
loopne
cmp
xchg
mov
push
sbb
mov
adcl
jbe
sub
sub
pop
mov
mov
jmp
scas
cmp
push
leave
clc
inc
or
sbb
inc
and
movb
in
data16
lret
ret
jnp
out
mov
out
loopne
js
shl
loopne
mov
add
jp
pop
test
adc
mov
pushf
jl
sbb
arpl
and
movsb
jae
pop
add
shll
xchg
sbb
lret
mov
clc
sti
mov
stc
clc
jp
add
add
mov
sbb
xchg
xor
mov
arpl
mov
jg
fadds
push
push
mov
sub
jne
adc
cmp
sub
hlt
shlb
or
adc
aad
push
mov
mov
faddp
mov
aam
out
jns
dec
adcb
jo
lods
xchg
roll
leave
push
jae
fisttps
clc
xchg
cmp
and
cmpsl
xchg
scas
push
mov
add
in
inc
stos
xchg
stos
loopne
xor
or
scas
mov
adc
add
sub
lret
arpl
cmp
xor
jb
pop
outsl
or
test
pusha
mov
mov
xor
fwait
sub
adc
mov
xchg
cmp
or
aas
out
lods
imull
arpl
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
enter
sar
jecxz
sbb
sbb
ja
push
rorb
ficomps
mov
sub
mov
stos
fucomp
jae
mov
loope
pop
mov
rolb
mov
cs
data16
ss
push
mov
sbb
cmp
dec
les
and
shll
pop
shr
adc
iret
pop
test
xor
popf
add
adc
js
add
mov
fwait
push
dec
mov
pushf
xchg
sub
ss
xchg
imul
xor
inc
and
aas
int
fs
mul
jle
inc
fxch
bound
add
hlt
dec
pushf
inc
addr16
fs
inc
dec
adc
mov
adc
and
push
inc
push
call
es
repnz
enter
jle
insl
and
rol
pop
inc
add
mov
aaa
add
fsubrl
ret
dec
lret
cltd
adc
sub
or
sbb
lahf
jne
and
mov
int
push
aam
ja
stc
cli
in
test
or
test
lahf
and
inc
outsb
cmpsb
sub
mov
adc
mov
leave
ljmp
test
ds
and
dec
movsl
ss
js
pop
aas
scas
aaa
out
iret
cld
jo
cmp
xchg
loop
mov
ficoms
ja
inc
dec
insb
call
pop
pop
jbe
mov
mov
mov
test
repz
jge
sub
mov
es
cmpsl
out
leave
mov
dec
push
rcl
hlt
cmp
or
lret
inc
cwtl
ja
sbb
daa
mov
mov
ret
int
or
mov
std
rcrl
pop
enter
lds
fistl
or
ret
gs
cltd
fs
hlt
sub
lcall
inc
dec
jge
sub
cmc
sbb
std
fistpll
ret
mov
mov
test
movsl
dec
and
fisubrl
loope
xchg
stos
inc
push
xchg
add
dec
out
xchg
out
leave
das
cmpsb
int3
sub
in
mov
scas
shrb
mov
cs
dec
in
lds
mov
das
add
pop
out
inc
xchg
cmpsl
or
mov
ficomps
repz
adc
aaa
jge
outsl
arpl
fisubrl
outsb
scas
subl
sbb
dec
js
pop
hlt
mov
outsb
int3
mov
adc
pop
add
mov
mov
mov
fs
xchg
jmp
xchg
hlt
mov
xor
sub
stc
lea
clc
movsl
dec
sbb
inc
sbb
jnp
mov
movsl
add
add
mov
sbb
and
push
testb
mov
dec
and
stos
popf
push
inc
push
mov
dec
ljmp
and
bound
imul
jns
loope
pop
lods
push
outsl
sbb
dec
pushf
mov
jecxz
imul
mov
scas
push
mov
das
mov
push
sbb
jo
sub
cmpxchg
in
outsl
test
xor
xchg
sub
imul
xchg
xor
pop
sahf
not
int
mov
add
xchg
leave
inc
les
stos
xchg
mov
hlt
ss
outsl
add
xlat
repz
mov
or
incb
aaa
jae
int3
lea
adc
int
or
repz
push
sarb
push
dec
xchg
adc
or
subl
ds
ret
pop
pop
xor
sbb
test
lcall
daa
and
iret
mov
sbb
bound
push
ja
inc
in
scas
jge
mov
mov
ds
add
sub
jb
pop
lea
dec
push
sahf
jge
call
or
std
pop
dec
push
add
shl
je
sub
out
fldcw
out
dec
push
mov
mov
cltd
jb
sahf
pop
mov
cmpxchg
out
test
and
clc
icebp
jle
scas
leave
test
cltd
scas
push
pushf
add
popl
mov
ds
je
out
dec
mov
jmp
inc
mov
xlat
repz
mov
int3
pop
into
scas
in
jecxz
add
rorl
int3
shrb
add
ficoml
popa
dec
sbb
in
dec
popa
pop
mov
cmpb
or
jns
pop
mov
test
add
test
inc
lock
xchg
xor
leave
add
mov
or
mov
pushf
push
shll
adc
jmp
push
stos
popf
pop
dec
or
dec
ficoms
mov
call
imul
fsubs
jbe
pop
mov
push
or
xorb
pop
push
push
mov
jne
dec
scas
push
dec
in
dec
scas
popf
adc
scas
hlt
mov
daa
aaa
mov
cmp
or
add
jmp
out
xchg
adc
cmpsl
js
xchg
test
stc
mov
movsl
inc
push
mov
or
in
insl
xchg
popf
pop
adc
and
daa
pop
repz
out
icebp
mov
xchg
int
sub
mov
mov
inc
sbb
fs
hlt
aam
stos
dec
cmp
mov
popf
movb
rolb
jae
rcrl
jne
cmp
test
cmp
ret
das
and
rol
pop
or
cmp
inc
dec
hlt
xor
int
stos
and
dec
pop
push
mov
and
dec
pop
mov
sbb
pop
mov
and
imul
out
pop
xor
xchg
xor
inc
pop
jnp
lret
nop
cmp
push
or
mov
jle
fcoml
aad
xor
xor
mov
mov
fucom
inc
jo
mov
pop
jb
add
mov
outsb
shrl
inc
hlt
idivb
outsl
jg
fucomp
clc
jp
scas
lahf
scas
in
lock
inc
out
mov
dec
xchg
in
icebp
in
jns
outsb
out
lahf
cli
cwtl
shll
or
and
subl
stos
mov
fsts
dec
jp
sbb
rorl
lea
ss
mov
mov
iret
push
insb
loopne
test
add
pushf
shll
je
lock
dec
jecxz
repz
cmpsl
ret
test
pop
and
gs
sub
adc
inc
in
xlat
mov
jecxz
push
sahf
aaa
push
testl
orl
xchg
test
sbbb
push
adc
add
push
mov
or
adcb
and
pop
leave
test
push
push
push
xchg
push
jns
xchg
in
mov
mov
sub
cmc
mov
mov
xor
leave
das
pop
adc
out
add
and
mov
cmp
lock
sub
pushf
cmp
mov
enter
fcomi
out
xlat
xor
mov
xor
es
sbb
shr
sub
sub
or
aam
shrl
pop
sbb
or
push
call
int
push
sub
push
xor
or
inc
xchg
outsb
aam
sub
adc
and
daa
cmpsb
cmc
fxch
mov
insl
add
sahf
fs
adc
stos
out
mov
test
popa
in
jg
div
rcrb
pop
jne
push
sahf
loope
lret
xor
imul
push
xchg
test
rorl
subl
data16
pop
and
jg
enter
inc
push
dec
sbb
xchg
and
sarb
inc
stos
int
cltd
lods
xchg
mov
pop
sub
or
mov
or
inc
pop
inc
repnz
cwtl
pop
aam
fistl
adc
test
mov
push
gs
pop
xchg
mov
mov
fdiv
addl
and
sub
popf
out
mov
add
mov
lods
insl
lret
mov
mov
ret
push
jmp
or
or
cld
loop
lds
shlb
out
inc
rcr
xchg
sub
mov
xchg
push
push
aad
or
push
pop
or
lea
mov
push
jno
fbld
mov
loope
pop
lods
push
outsl
sbb
jg,pn
push
jecxz
dec
gs
nop
aam
mov
fcmovnbe
int
dec
subl
leave
into
mov
pusha
mov
adc
fsubs
jbe
lods
xor
out
mov
fsubrs
xor
ror
xchg
xchg
jg
sub
push
mov
pop
xchg
lcall
push
jmp
fnstsw
xchg
ds
mov
add
leave
mov
test
adc
test
sbb
mov
in
dec
popa
pop
sbb
fistpll
pop
adc
call
ret
loopne
jl
mov
mov
mov
in
push
movsb
sbb
lods
stos
xor
cmpsl
sub
inc
mov
fmull
movsl
mov
pushf
or
rcl
stos
mov
loop
jecxz
cmp
imul
xchg
inc
inc
fildll
jnp
sub
aad
rcl
jbe
dec
mov
dec
jecxz
push
stos
dec
repnz
mov
lea
jne
insl
bound
enter
mov
jae
mov
xor
dec
scas
hlt
mov
daa
aaa
mov
cmp
or
add
jmp
out
xchg
adc
cmpsl
js
or
test
inc
jmpw
mov
lret
in
mov
mov
or
lahf
cltd
pop
adc
cmp
test
push
or
int
imul
jmp
mov
daa
push
imul
pop
stos
aam
imull
aad
mov
loopne
leave
xlat
pop
cmpsl
enter
in
and
imull
adc
or
adc
ret
sbb
cmc
in
pushf
cmp
sub
outsl
pop
mov
fisubrl
mov
movl
cwtl
loop
mov
mov
test
sbb
subb
imul
cmp
mov
cwtl
lods
inc
sbb
mov
lds
loop
fmull
sti
add
or
push
mov
cld
dec
fdivrs
dec
cmc
gs
push
aam
fistpl
icebp
jmp
cmp
ret
cmpsb
mov
mov
jmp
std
mov
sti
and
sbb
lret
dec
sbb
dec
dec
addl
mov
inc
fstpt
mov
inc
pop
sbb
xchg
pop
adc
out
xchg
fcmovnbe
out
jno
pop
out
xchg
mov
daa
inc
mov
stos
sub
outsl
push
jmp
add
lret
cld
push
cwtl
dec
pop
lcall
push
scas
jnp
stos
out
jno
lds
inc
in
mov
pop
pop
sub
sbb
and
or
nop
rorl
fsts
std
dec
jge
in
adc
mov
mov
jp
add
cmp
lds
frstor
das
pop
icebp
or
cmp
fs
loop
data16
in
adcb
cltd
scas
push
addb
das
push
xor
or
pop
dec
out
xchg
ja
stos
mov
dec
adc
es
inc
clc
pop
mov
jne
iret
or
pop
cmp
inc
mov
push
push
jp,pt
push
mov
and
pop
lcall
scas
inc
lahf
sbb
cmp
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
add
mov
sbb
and
push
testb
mov
dec
and
jge
int3
push
xor
dec
inc
mov
scas
mov
xchg
mov
lret
and
sub
sub
add
stos
inc
or
shlb
jns
inc
dec
xchg
aam
jne
insl
pop
fwait
enter
lods
xchg
cmpl
jnp
stos
push
xchg
push
pop
mov
lds
or
mov
adc
adc
lret
or
iret
dec
mov
sub
lcall
fucomi
jns
jl
xor
cmp
jle
mov
clc
mov
out
enter
xor
aad
dec
sub
popf
das
jnp
sbb
in
out
mov
sbb
adc
negb
and
xchg
sbb
std
adc
xor
rol
adc
xor
rorl
movsb
sbb
clc
mov
push
mov
out
mov
sub
push
add
loopne
mov
mov
mov
inc
cmp
arpl
mov
imul
or
dec
xor
jae
xchg
xor
jno,pn
or
dec
dec
pop
jb
xor
or
jnp
mov
mov
repz
lret
std
cli
jnp
inc
mov
add
adc
mov
pop
repnz
inc
fmuls
test
out
dec
loopne
lret
sub
inc
xchg
pop
xor
sarl
fisttpll
loope
xchg
fcoms
adc
adc
adc
xchg
outsb
dec
sbb
mov
and
push
push
adc
out
push
ret
mov
inc
negl
fs
dec
sub
push
add
push
dec
outsl
aaa
add
cmp
sbb
inc
addr16
mov
orb
mov
xor
scas
lods
fisubl
sub
pop
int3
jge
push
fwait
xlat
mulb
adc
and
jg
and
ja
in
subl
imul
aam
jne
sbb
push
inc
pop
dec
out
js
orl
test
pop
orl
mov
and
les
jecxz
mov
out
sar
jg
out
das
dec
lock
jl
addr16
sub
jo
inc
int
dec
and
xchg
xchg
test
lcall
loope
int
xchg
xchg
mov
std
lods
aam
mov
enter
inc
inc
repnz
hlt
add
pop
shrl
push
push
rcl
hlt
cmp
or
movb
cs
push
lds
orb
dec
jmp
insl
andl
outsb
and
xchg
sbb
js
xor
mov
out
mov
aaa
pop
dec
imul
lods
into
xchg
inc
ret
dec
test
pop
and
xchg
scas
jle
js
jmp
jmp
ficoml
aam
pop
jnp
lret
nop
cmp
push
or
mov
jle
fcoml
aad
xor
xor
mov
mov
loope
jo
mov
pop
jb
add
mov
outsb
rcll
cmc
or
xlat
lock
sub
popa
in
dec
push
cmpb
cs
lahf
jmp
loope
lahf
stc
cwtl
shll
pop
xor
jnp
sbb
xchg
andnps
sbb
push
inc
push
pop
lock
or
xchg
xchg
adc
adc
xor
divl
rol
les
mov
shlb
fsts
inc
pop
arpl
movsl
mov
jg
adc
mov
adc
sbb
mov
ret
sbb
jae
mov
or
cmp
adc
mov
adcl
jbe
sub
sub
add
enter
rcrb
pop
or
jnp
pop
mov
push
pop
rorl
add
aas
add
push
cmp
jecxz
scas
rcrb
outsl
outsl
xlat
icebp
lods
fists
lods
push
jae
mov
cs
jae
popf
xor
inc
lods
fnstenv
xor
xor
iret
addr16
sub
or
imul
imul
test
and
int
ret
or
ror
arpl
fwait
jmp
pop
cltd
imul
repz
mov
repz
std
popa
int
inc
fcomi
imul
in
and
mov
movsb
mov
outsb
xor
and
xor
dec
sbb
fnstsw
pop
mov
cmc
mov
mov
in
fildll
inc
shrl
dec
sub
sub
mov
xorl
popa
mov
push
jnp
rep
ljmp
push
js
xchg
xor
fwait
leave
movsb
mov
sbb
fisttpl
or
sub
icebp
jmp
cmpsl
ficoms
outsb
cmp
inc
mov
mov
jge
dec
push
enter
dec
inc
rolb
cltd
js
enter
xchg
lea
xor
mov
mov
mov
test
jae
push
xchg
ror
xor
sarb
inc
inc
dec
pop
mov
jl
fbstp
dec
sbb
push
ret
mov
inc
call
mov
add
adc
ret
ret
sbb
inc
ds
push
cmpsl
aad
inc
lods
cwtl
and
sbbl
mov
jb
pop
push
bound
push
test
mov
imul
jl
jnp
adc
bound
test
cmp
and
cmpsb
sub
mov
mov
dec
mov
xor
xchg
fdivl
adcb
sti
data16
inc
insb
negb
mov
pop
rorl
mov
mov
sub
xchg
cwtl
cwtl
popf
jmp
shr
pushf
mov
ret
std
dec
dec
test
ljmp
repnz
aam
and
scas
xchg
mov
mov
dec
dec
mov
sbb
jb
mov
in
add
xor
and
mov
rcrl
mov
into
fwait
cmp
mov
sbb
stos
add
sbb
cmp
mov
sub
pushf
ret
pop
mov
mov
sbb
bound
push
ja
inc
in
scas
cmp
inc
cmpl
jae
jecxz
cmp
ret
mov
in
dec
dec
fsubl
stos
fs
jnp
lret
pop
jmp
dec
cwtl
mov
rolb
mov
cmpsl
mov
mov
sahf
fidivrl
repz
cmp
imull
loop
stc
jne
mull
fdivs
fistl
roll
repnz
cwtl
pop
aam
fistl
adc
test
mov
push
gs
pop
xchg
sbb
mov
fdiv
addl
and
sub
popf
out
mov
add
mov
lods
sub
ret
ret
sahf
imul
add
inc
pop
mov
xor
jbe
imul
mov
or
xchg
jecxz
lret
loop
and
loopne
dec
imul
push
adc
ret
scas
retw
out
mov
int
test
lods
rcrb
dec
jmp
adc
mov
mov
cmc
add
xchg
push
sarb
xchg
mov
fcompl
aad
xor
xor
mov
bound
lret
mov
repz
nop
xchg
lahf
push
cwtl
lock
sub
scas
outsb
repz
and
sub
xchg
rcrb
mov
fists
xlat
cltd
aad
imul
test
or
fbstp
out
lods
sti
jae
arpl
and
push
ljmp
add
mov
sbb
jb
xor
in
add
xor
and
mov
rcrl
mov
into
fwait
cmp
mov
sbb
jnp
hlt
leave
add
sbb
test
lcall
daa
and
iret
mov
sbb
adcl
dec
inc
in
scas
mov
lea
push
lret
add
inc
fldt
cmp
push
sarl
mov
mov
add
subl
scas
push
fcomps
jne
insl
outsb
pop
cltd
mul
insl
test
fistpl
test
dec
fwait
jo
sub
repz
aad
jno
add
sarl
cli
repz
jg
out
das
dec
lock
mov
pop
push
sbb
idivl
outsl
outsl
call
scas
loope
std
inc
into
cmpsb
iret
pop
call
leave
pusha
icebp
mov
fcmovne
sbb
mov
je
enter
jno
sbb
fidivl
and
xor
imul
cmpsb
mov
adc
and
push
dec
push
adc
inc
sbb
stos
ret
loopne
int
aas
xchg
arpl
js
fdivp
mov
or
xor
mov
mov
and
lock
clc
pop
enter
int3
inc
push
cltd
icebp
testb
in
mov
movsb
shl
sbb
test
or
out
jle
mov
shlb
or
adc
aad
push
cmpsb
mov
sub
push
xlat
adc
dec
jnp
shrb
lods
sbb
jo
lret
js
popf
scas
test
lret
aas
jno
xor
push
scas
jl
icebp
push
or
jg
push
push
ds
fistpll
lcall
mov
loopne
pop
outsl
jae
inc
pop
mov
push
sbb
jge
dec
lcall
jmp
ss
sub
rcll
add
and
dec
mov
sbb
add
mov
mull
aam
jae
push
addl
scas
outsl
pop
jmp
cmp
imul
jne
jp
add
add
mov
sbb
and
push
testb
mov
dec
and
stos
popf
push
inc
push
mov
dec
ljmp
and
adc
lcall
sahf
jns
loope
pop
lods
push
outsl
sbb
dec
pushf
mov
jecxz
imul
outsb
pop
cltd
enter
fsts
xchg
push
mov
aas
test
xchg
out
push
insb
out
jecxz
add
xchg
pop
sub
or
sti
inc
scas
push
repz
mov
pop
out
js
mov
sub
shr
sti
jp
dec
scas
inc
call
pop
push
repz
fidivrs
jnp
sub
add
cmc
add
jp
fpatan
leave
sbb
add
and
hlt
cwtl
adc
popa
scas
sti
dec
sahf
inc
sub
pop
pop
add
inc
cwtl
dec
and
mov
mov
test
add
in
mov
lock
imul
icebp
lcall
jmp
decb
fdivl
es
call
pushf
cld
jae
mov
insl
xchg
push
dec
rcll
mov
js
xchg
jl
rcrb
sahf
popa
std
mov
stos
cwtl
nop
mov
mov
mov
cmc
add
xchg
or
in
dec
movsl
xchg
mov
data16
ds
mov
pop
xor
mov
mov
popf
loope
jo
mov
pop
jb
add
xchg
js
std
decl
mov
pop
push
pushf
jmp
jno
sbb
ss
in
cli
loopne
xchg
mov
sbb
sahf
sub
adc
into
jae
ljmp
hlt
test
adc
add
sbb
lds
lea
adc
and
mov
incl
int3
push
xor
std
cmp
push
inc
sahf
rcll
cmpsl
adc
cmpb
mov
paddusb
xchg
mov
push
pop
test
test
ljmp
ffreep
shl
inc
addr16
loopne
inc
icebp
add
add
into
xchg
sti
mov
lcall
mov
lcall
sub
dec
fsubl
movsb
mov
out
mov
scas
aaa
mov
cli
jnp
inc
mov
add
adc
mov
pop
repnz
inc
fmuls
sti
adc
test
inc
xchg
mov
jbe
iret
ja
in
jnp
insl
faddp
ret
lea
xor
nop
dec
lea
jl
pop
or
adc
inc
push
pop
add
mov
sbb
sub
stos
mov
dec
push
xchg
push
gs
push
or
jecxz
mov
cmp
pop
movsb
lret
xchg
xor
bound
clc
add
pushf
cld
ds
pop
pushf
lret
or
mov
test
popa
or
loop
out
push
cli
add
mov
lahf
stos
sub
ljmp
jle
push
xchg
in
stc
dec
data16
aaa
stc
or
icebp
push
push
pop
jnp
or
sub
add
push
test
or
stos
xor
xor
mov
mov
std
loope
jo
mov
pop
jb
add
mov
out
push
scas
shll
sub
add
lea
addr16
mov
fstl
pusha
in
loop
dec
push
loopne
or
push
xchg
loope
dec
lock
mov
dec
adc
inc
fxch
cli
sarb
inc
inc
insb
or
ja
xchg
jns
lret
xchg
sbb
lods
jecxz
lahf
pop
stc
mov
push
or
je
cs
mov
inc
ljmp
lcall
xlat
dec
sub
cmc
xor
sbb
std
fistpll
ret
mov
mov
test
jp
jge
scas
xchg
iret
stc
push
mov
mov
scas
push
mov
roll
xor
and
dec
pop
jo
sub
cmpxchg
out
sub
inc
cwtl
das
push
roll
push
sbb
and
imul
leave
pop
iret
shl
idivl
outsl
outsl
call
stos
subl
out
scas
mov
pop
scas
insb
lock
stc
inc
iret
outsb
iret
arpl
out
xorl
mov
push
push
push
imul
mov
sub
in
into
cld
pop
mov
push
fidivrs
imul
xor
out
sti
pop
es
sub
cmp
mov
sub
pushf
ret
pop
mov
mov
sbb
lcall
scas
jge
mov
mov
ds
add
fstps
cmp
std
bound
sub
int3
xor
call
xchg
xchg
jno
mov
je
loop
pop
cltd
enter
fistl
xchg
push
mov
aas
test
sub
cmpxchg
out
dec
aam
pop
mov
scas
pxor
cld
repz
out
das
in
rorl
mov
fsubl
cmc
loop
xchg
mov
into
pop
xor
inc
fdivrp
xor
scas
adc
xabort
jle
scas
xor
adc
sub
or
stos
add
inc
test
jle
cmp
test
aam
mov
cmp
decl
add
inc
sbb
iret
mov
jae
mov
xchg
inc
movsl
xchg
sub
pushf
ret
pop
mov
mov
sbb
bound
push
ja
inc
in
scas
jge
mov
mov
ds
add
fstps
cmp
std
bound
sub
int3
xor
call
xchg
xchg
jno
mov
je
loop
pop
cltd
enter
fistl
xchg
push
mov
aas
test
sub
cmpxchg
out
dec
aam
pop
mov
scas
pxor
cld
repz
out
das
in
rorl
mov
fsubl
cmc
loop
xchg
mov
into
out
in
xor
and
int3
lods
insl
mov
fidivrs
jnp
sbb
arpl
add
xchg
inc
dec
mov
sbb
dec
jl
lods
xor
mov
jno
js
test
or
aas
test
fildl
inc
dec
lret
popf
mov
jns
push
sarl
mov
rclb
cmpb
cwtl
pop
push
jno
fst
outsl
mov
imul
cmpsb
xchg
mov
adc
imul
lods
fldcw
sbb
sahf
out
or
jae
fldt
pop
dec
div
xor
int
nop
mulb
push
ret
insb
mov
push
sbb
lret
sub
test
fiadds
pop
xchg
outsl
cmp
lds
push
fdivrl
jmp
mov
out
mov
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
dec
enter
cmc
mov
cmp
mov
mov
in
lock
std
pop
push
xchg
int
jno
jecxz
pop
push
rclb
add
xorb
add
insb
cmpsl
xchg
ret
dec
sahf
dec
movsl
sbb
pop
inc
inc
lods
aad
adc
inc
ret
mov
xlat
pop
pop
inc
or
in
clc
sti
popf
arpl
lock
ds
adc
inc
push
adc
les
orl
mov
push
pop
jbe
fwait
ds
push
inc
in
stos
mov
push
or
jmp
into
inc
inc
fbstp
jns
loope
lret
aam
gs
xchg
cwtl
nop
std
pop
mov
inc
test
jb
push
imul
xchg
pop
mov
mov
rcll
pop
rcl
fistpl
fwait
pushw
inc
dec
enter
sahf
ficomps
jnp
inc
mov
add
adc
mov
pop
repnz
mov
negb
mov
je
pop
adc
test
and
std
lods
xor
lods
fistl
outsb
out
sti
cwtl
inc
data16
add
add
push
int3
fmull
cmp
insb
xchg
jno
dec
adc
lret
les
pop
mov
orb
mov
jbe
mov
sbb
ds
add
sar
pop
sti
or
or
mov
test
popa
dec
rorb
adc
cmp
xor
dec
xchg
or
sbb
xchg
out
in
leave
dec
jge
inc
mov
xchg
movsl
add
or
xor
jb
fisttpll
cmp
lds
mov
das
pop
icebp
or
cmp
fs
loop
out
stos
mov
fs
scas
repz
packssdw
push
pop
lret
jg
scas
mov
out
jb
mov
jecxz
jnp
out
cmpsl
mov
sub
jno
jmp
out
push
or
cld
or
inc
mov
sbb
orb
stc
add
lcall
xlat
adc
or
xor
stos
aam
icebp
outsl
int
cmc
test
cmp
mov
jns
inc
lock
xchg
xor
leave
add
mov
or
mov
fcomp
xor
cmp
jge
jge
adc
ret
scas
gs
mov
mov
mov
adc
jns
loope
fdivrs
rolb
mov
cs
stos
push
repnz
fmulp
mov
dec
sub
scas
push
and
sub
es
test
push
pop
mov
push
aad
xchg
xchg
addr16
cmc
mov
jle
jno
sub
sbb
add
lock
das
push
iret
fdivp
xor
sub
push
cmp
subl
pop
mov
sub
gs
add
rcr
inc
mov
rclb
push
push
pop
mov
cmp
add
movsb
popf
xchg
mov
add
mov
sub
mov
iret
add
test
inc
lock
xchg
xor
leave
add
mov
or
mov
in
lods
data16
dec
cmpsb
loop
mov
cwtl
pop
mov
push
fstpt
adc
mov
pop
imul
fsubs
jp
rolb
cmp
dec
dec
lret
data16
imul
mov
mov
push
cltd
push
int3
sahf
pop
and
movsl
adc
pop
and
in
loop
xchg
subl
inc
sbb
lret
lock
jge
inc
iret
shl
ja
std
pushf
out
jbe
jg
dec
push
cmc
daa
testl
lods
clc
adc
shlb
data16
bound
jbe
shrl
inc
jae
lds
inc
iret
mov
dec
inc
lds
or
mov
jbe
sbb
adc
xorl
sub
mov
cmpsb
mov
jle
mov
outsb
and
xchg
sbb
aaa
fisubl
shr
xchg
push
hlt
lds
ret
xchg
mov
lcall
mov
mov
mov
or
inc
jns
loope
lret
aam
scas
adc
lret
inc
dec
bound
xchg
dec
subl
nop
pop
jl
rorl
cmpsb
lods
adcl
sub
rorl
js
lods
cs
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
and
adc
mov
inc
insl
out
sbb
inc
add
pop
lods
mov
jl
pop
lods
out
std
into
add
sahf
pop
or
mov
sub
popf
sub
xchg
inc
gs
imul
push
inc
push
xorl
in
push
inc
movsl
cltd
lret
gs
rcrb
orl
popa
or
sub
aaa
mov
sbb
jge
les
sti
sub
sti
sbb
sbb
mov
sahf
das
xchg
stc
cli
in
test
or
test
fbld
and
cmpsb
sub
mov
mov
dec
loopne
adcl
test
pop
pusha
mov
or
orb
mov
std
fdivrl
bound
jl
or
mov
fs
lcall
or
pop
adc
in
jnp
out
mov
xor
pop
iret
jp
popf
call
rorb
inc
xchg
adc
inc
pop
popf
sar
stos
test
push
test
stos
sbb
cmpsb
ja
test
shlb
sti
xor
inc
xchg
in
mov
loopne
sbbl
ret
inc
scas
in
cmp
insl
rolb
gs
rcrb
repnz
mov
int
inc
sbb
sarb
in
and
int3
xchg
sbb
std
fistpll
ret
mov
mov
test
in
andb
cmpsb
lds
xlat
and
inc
movsb
xchg
xchg
push
es
test
shrb
push
xchg
ja
xor
je
add
ret
shrb
xor
iret
shl
aaa
lods
sarl
cmc
pop
adc
popa
test
pop
out
cmp
pop
fidivrs
jnp
fldenv
inc
into
cmc
add
jp
fpatan
leave
sbb
add
and
hlt
cwtl
adc
popa
xchg
sti
dec
sahf
inc
sub
pop
pop
add
inc
cwtl
dec
and
mov
mov
test
add
test
inc
lock
xchg
xor
leave
add
mov
or
mov
push
stos
and
dec
pop
push
mov
and
je
push
clc
lods
pop
imul
movsl
mov
and
call
iret
imul
xchg
cwtl
mov
mov
xor
add
push
dec
add
rorl
test
xchg
fnclex
cmp
fsubrs
push
ja
xor
pop
ret
jge
or
ret
adc
sbb
rolb
inc
clc
or
fwait
push
dec
mov
and
adc
mov
inc
insl
out
sbb
inc
add
pop
lods
mov
jl
pop
arpl
lahf
lcall
sub
leave
data16
daa
ss
stos
jae
nop
and
push
or
mov
adc
movb
and
int3
inc
lds
cltd
arpl
fsubl
lock
ja
mov
insb
xorl
xlat
mov
xchg
push
das
jno
xchg
add
xchg
lea
cmp
adc
fwait
push
dec
aad
imul
into
inc
mov
inc
repnz
dec
jmp
sbb
dec
mov
stos
movsl
arpl
mov
adc
ret
das
lds
test
jno
aaa
jecxz
scas
add
jns
enter
ret
stos
fldcw
lock
jg
push
sbb
mov
jp
pop
adc
hlt
xchg
test
xchg
push
sub
jae
sbb
insb
aas
out
cmp
push
add
xlat
cs
daa
inc
rol
add
xorl
repz
nop
shrl
aad
jno
xor
inc
insb
inc
mov
ret
push
into
inc
lahf
in
imul
sub
jecxz
pop
dec
xchg
lea
int
inc
sbb
fdivrl
ret
insb
mov
sub
mov
test
push
inc
jno
cs
mov
sahf
das
xchg
stc
cli
in
test
or
test
jl
and
cmpsb
sub
mov
mov
dec
loopne
subl
mov
adc
cltd
dec
bound
sub
outsl
jno
sbb
sbb
inc
inc
loope
stc
loope
js
mov
jmp
cmpsl
fdivp
sbb
mov
xor
das
xorb
out
jmp
loopne
popf
test
aas
sbb
bound
lea
scas
cwtl
or
popf
ljmp
mov
movsl
mov
cmp
test
repz
dec
mov
lea
mov
xchg
rcr
jne
loope
pop
int3
add
or
js
sbb
ds
lock
mov
aad
hlt
mov
jo
sbb
add
lods
xchg
sub
adc
fldenv
dec
lret
inc
and
stc
inc
jae
mov
popf
lret
cmpsl
xchg
test
mov
adc
add
movl
pop
xchg
rcll
test
mov
cmc
push
leave
mov
jecxz
pop
lret
fistl
ss
arpl
in
fcoml
lret
mov
mul
jns,pt
outsb
repz
call
add
pop
dec
mov
jb
movsb
cmpsl
pop
hlt
ficoms
xchg
mov
inc
pop
pusha
ljmp
les
cmp
in
jne
cltd
push
loopne
adc
inc
inc
mov
nop
out
push
and
lea
cmp
aas
out
mov
loopne
pop
ljmp
jns
ds
mov
lock
imul
fdivp
sbb
orl
into
out
mov
push
out
mov
test
xor
push
pop
add
int
inc
mov
imul
in
jle,pt
cmc
dec
xor
xor
gs
pop
gs
enter
addb
mov
fdivl
xor
repnz
ja
mov
or
or
sarb
pop
jl
pusha
test
ficoms
jg
xor
mov
inc
or
es
or
push
lret
clc
aaa
jge
push
dec
mov
mov
bswap
or
xchg
cmc
mov
cmp
movsb
ret
xor
cmpsl
mov
jae
mov
int
jno
jecxz
fcoms
mov
nop
pop
adc
add
sub
xchg
vsqrtss
add
notb
sub
addr16
std
mov
jno
jl
ficoml
adc
jmp
mov
push
jbe
add
in
sbb
test
ret
push
cmpsl
mov
nop
pop
lret
cwtl
mov
aam
mov
xchg
push
negl
in
lods
mov
jecxz
push
sahf
aaa
jae
lahf
hlt
je
sahf
das
xchg
stc
cli
in
test
or
test
mov
cmpsb
sub
mov
mov
dec
loopne
adcl
dec
add
and
shl
hlt
xchg
cmp
jecxz
js
fnstcw
pop
daa
in
mov
in
fwait
adc
add
mov
scas
add
and
xchg
xor
sub
in
jnp
out
mov
xor
pop
iret
jp
popf
call
rorb
inc
xchg
jl
daa
loopne
hlt
jbe
push
out
jnp
into
mov
or
xlat
adc
int
int3
fwait
mov
in
and
xor
cmpsb
dec
jp
push
pop
add
add
add
mov
sbb
mov
push
testb
mov
dec
and
lods
stos
push
repz
cmp
sahf
push
aam
push
mov
mov
pop
imul
and
pushf
xor
imul
mov
scas
mov
dec
jmp
lret
jbe
mov
pop
lods
pop
push
inc
call
pop
and
sahf
fisubl
imulb
int
addr16
and
lea
les
std
mov
les
push
xlat
dec
test
dec
fidivrl
cmp
jmp
std
stos
mov
mov
push
jo
outsl
aas
addl
mov
sti
sti
and
sbb
lret
dec
sbb
lea
cmp
inc
jbe
xor
or
fwait
mov
jmp
mov
jmp
incb
leave
popa
mov
mov
adc
inc
sbbl
inc
imul
dec
mov
push
inc
int
push
xchg
mov
insl
in
popa
ficomps
fildll
stos
subl
push
pop
push
jb
pop
imul
xor
adc
push
leave
ret
leave
or
ret
xor
cmpsl
jmp
dec
add
mov
rcrb
jnp
mov
mov
ficoms
cmc
pop
movsb
inc
xchg
ljmp
sbb
mov
fwait
push
dec
mov
and
adc
pusha
adcb
mov
inc
insl
out
pop
sarl
jle
adc
fstpl
mov
outsb
jmp
in
add
xor
outsb
add
sbb
and
sbbl
mov
bound
or
push
pop
push
test
or
push
sub
push
xor
lds
and
daa
adc
orb
and
jmp
decb
aad
push
sub
dec
dec
xchg
dec
push
in
ficoms
fcomi
call
sub
cmc
sub
sbb
inc
in
mov
out
rclb
ss
mov
xchg
cmp
jae
mov
and
xchg
cmp
pop
mov
or
push
cli
cmp
stos
xor
xor
mov
mov
jle
inc
jo
mov
pop
jb
add
mov
out
push
test
out
cmp
out
and
xchg
mov
xchg
rorl
gs
inc
pushf
mov
jg
repz
jns
popf
addr16
into
add
xor
xchg
inc
jno
sub
add
or
cmpsb
jge
fsubr
mov
sbb
das
or
jae
jae
inc
jbe
mov
sub
jl
in
loopne
faddl
push
add
mov
hlt
pop
lret
cmp
mov
pop
inc
xchg
hlt
je
or
int
inc
mov
insb
dec
mov
nop
xlat
arpl
decl
in
push
mov
hlt
and
ror
mov
inc
jns
ds
fs
xchg
int3
add
xchg
or
testl
imul
es
or
test
sbb
xchg
and
sarb
fwait
mov
jne
sahf
fidivrs
sub
js
or
rcll
mov
test
sub
pop
movsl
fists
enter
cmp
lods
push
jne
outsl
rcll
mov
mov
out
and
andb
js
sbb
mov
in
dec
popa
pop
cli
fcmovu
mov
pop
adc
call
cmp
pushl
cli
pop
jg
sbb
mov
mov
pop
or
mov
dec
fidivs
nop
mov
adcb
mov
xor
and
lock
jmp
movsl
fucom
lahf
push
push
lods
bound
jp
add
repnz
inc
jae
les
push
adc
ss
jb
push
imul
inc
lea
pop
testl
push
xchg
mov
int3
xor
xor
lahf
xor
out
jl
or
pushl
rorl
cmp
dec
xchg
mov
pop
repnz
mov
negb
bound
fisttpll
ja
jecxz
xor
lret
xchg
jae
lods
fidivrs
push
sbb
dec
sub
mov
lock
mov
dec
push
cli
or
call
or
int
push
dec
add
or
cmc
and
mov
mov
jl
mov
lea
fsts
inc
pop
cli
add
inc
mov
dec
int3
or
adc
fs
sub
cmc
sbb
mov
push
adc
int
arpl
lds
sbb
sbb
icebp
dec
scas
xchg
stos
mov
inc
lds
adc
lret
test
push
lods
push
sub
leave
test
adc
sahf
pop
and
mov
insb
into
pop
mov
repz
pop
rcll
loopne
inc
ja
popl
xchg
aam
stc
lock
inc
add
push
xchg
push
stc
arpl
or
and
out
cmp
cmp
mov
ret
movsl
clc
leave
pop
and
adc
cmp
xchg
sub
popf
out
mov
add
mov
lods
insl
int
jg
cmp
mov
lods
push
sbb
leave
cmp
xchg
adc
xor
mov
push
or
sub
or
mov
test
sub
dec
clc
xchg
test
push
dec
cmp
hlt
movsl
push
jno
pop
cmp
mov
adc
inc
aas
adc
ret
sub
add
in
subl
gs
xchg
push
subb
mov
das
mov
sbb
dec
dec
fs
in
mov
and
push
addr16
mov
enter
adc
sbb
mov
push
mov
sahf
fptan
mov
sub
std
stos
stos
test
pop
cmpsb
enter
add
mov
mov
in
and
test
js
and
xchg
push
hlt
mov
popa
dec
mov
iret
jg
shll
sbb
pusha
or
pusha
xor
je
idivb
leave
xor
xchg
rolb
adc
or
fimull
sub
dec
fcmovne
sub
or
push
xchg
loop
inc
in
test
mov
xchg
pop
mov
mov
jge
pushf
cmp
mov
or
sbbl
stos
subl
pop
ret
cld
jp
add
cmp
lds
jge
bound
scas
das
pop
icebp
or
cmp
fs
loop
out
in
adc
jnp
mov
nop
ljmp
xchg
movsl
dec
hlt
ja
std
test
mov
repnz
push
lds
jb
movsb
adc
mov
sub
ljmp
inc
mov
mov
je
test
rorl
dec
xchg
adc
dec
mov
rcll
mov
sub
or
lods
lea
arpl
mov
jp
jl
cmp
clc
jp
add
mov
dec
jecxz
mov
out
ret
test
dec
mov
insb
dec
mov
nop
xlat
arpl
fbstp
xor
dec
push
mov
fildll
movsl
int
pop
add
imul
inc
inc
jbe
pop
xchg
dec
inc
mov
pop
adc
mov
push
popa
dec
leave
test
adc
jle
les
lret
leave
scas
dec
xchg
jp
movsl
imul
dec
icebp
cmp
pop
stc
add
adc
test
dec
cmp
daa
cmp
adc
xor
push
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
ret
cmpb
je
test
loope
and
jecxz
pop
sub
imul
sbb
xor
lret
push
inc
push
cmpl
or
push
sub
push
sub
push
out
push
cmp
roll
aam
push
sti
cmpl
mov
das
inc
scas
dec
imul
test
movsl
sub
loopne
dec
sbb
adc
dec
xor
xor
div
call
nop
mulb
push
ret
insb
mov
push
sbb
lret
sub
test
fiadds
pop
xchg
outsl
cmp
lds
push
fdivrl
jmp
mov
out
mov
out
sub
sbb
mov
fwait
push
dec
mov
and
adc
pusha
adcb
mov
inc
insl
out
popf
mov
sbb
mov
mov
xor
into
test
and
outsb
push
dec
jb
xor
mov
int
sub
mov
daa
pop
in
bound
repz
ds
mov
cwtl
add
fwait
jo
push
mov
sub
ja
adc
jmp
add
sbb
mov
dec
les
sbb
les
jg
int
dec
ljmp
sbb
sub
cmp
pop
dec
sbb
and
fcoms
popf
adc
sbb
add
mov
cmpsb
xor
jb
fisttpll
cmp
lds
jge
bound
scas
das
pop
icebp
or
cmp
fs
loop
data16
pop
adc
mov
dec
iret
cld
inc
cs
test
scas
mov
out
jae
pushf
lods
xlat
xchg
fidivrs
std
lods
push
jae
jo
std
js
fisttpll
jg
inc
test
dec
les
or
sub
push
andl
sub
out
mov
inc
shll
pop
sbb
in
int
or
pop
ret
inc
imul
clc
dec
sti
mov
inc
dec
cmp
inc
and
mov
xor
insb
mov
jne
pop
mov
insl
mov
jne
pop
test
push
je
push
test
push
iret
lods
pop
inc
push
mov
inc
ds
movsb
ret
xor
dec
inc
sub
int3
add
push
mov
movsl
inc
pushf
mov
mov
inc
lret
test
std
fmull
cmp
loope
shll
sahf
pop
and
iret
cmp
rolb
jbe
mov
pop
shrb
push
adc
in
rorb
sbbl
dec
mov
into
inc
dec
and
dec
repnz
and
push
mov
test
sti
inc
in
cmp
into
scas
in
jecxz
rcl
loopne
hlt
mov
xchg
mov
add
orl
sub
aaa
mov
sbbb
xor
push
repnz
and
mov
test
add
inc
sbb
iret
mov
jae
mov
cltd
jo
or
cmpsl
push
sahf
mov
mov
iret
sbb
fwait
aam
sub
lods
sub
mov
and
adc
inc
mov
popa
pushf
dec
ret
sub
push
pop
cltd
adc
inc
stos
divb
loope
mov
and
cld
sub
fstps
pushf
xchg
pusha
or
sti
fstps
and
cmp
dec
xchg
mov
pop
repnz
mov
jbe
adc
scas
lahf
push
lds
test
mov
sub
adc
sbb
adc
rcrb
test
ret
shrb
or
dec
adc
xor
adc
and
test
mov
sub
repnz
add
lock
mov
xorb
mov
xchg
ss
ja
fs
dec
sub
pop
mov
notb
dec
xchg
addr16
jmp
in
scas
pop
mov
sbb
adc
stos
adc
fwait
mov
lret
je
mov
ja
adc
cltd
adc
inc
stos
divb
loope
mov
and
cld
sub
fstps
pushf
xchg
pusha
or
sti
fstps
and
cmp
cwtl
add
dec
add
pop
inc
mov
rcrl
movsl
mov
jnp
mov
shlb
xlat
shr
lock
fnstsw
outsb
iret
lahf
icebp
es
sbb
push
rclb
add
andb
and
fisubrs
fisttpl
inc
and
lretw
xchg
mov
push
pop
lahf
das
lea
mov
insb
mov
mov
leave
adc
cmp
lea
jg
or
and
jl
pop
adc
xor
test
inc
mov
add
out
in
xlat
mov
jecxz
push
sahf
aaa
push
testl
loope
lret
movb
xor
xchg
adc
adc
xchg
jnp
imul
data16
rol
lret
jb
pop
push
aam
int3
push
cmp
or
pusha
mov
ret
les
ljmp
mov
pop
jb
add
inc
cmpl
fists
mov
in
push
cmp
insl
in
popf
pop
adc
mov
enter
aas
sti
sti
and
test
sbb
and
xchg
push
hlt
mov
popa
dec
mov
sbb
pushf
rolb
call
les
mov
push
inc
rol
push
cmp
insl
or
in
sub
mov
xchg
push
mov
pushf
mov
outsb
xor
ret
scas
popa
lods
fistl
dec
pop
mov
sub
push
jo
fsts
pop
inc
loopne
mov
jge
push
repz
inc
cmp
int
cmp
sub
inc
in
fwait
xchg
jge
pop
movsb
mov
mov
pop
aad
xor
push
mov
cmp
inc
fidivrl
mov
jno
jnp
inc
mov
add
adc
mov
pop
repnz
xchg
jne
pop
ret
inc
lods
xlat
xchg
mov
jle
pop
sbb
fcoms
jmp
add
arpl
data16
out
jno
jae
pop
xor
jmp
int
mov
xorl
shlb
bound
mov
sub
push
test
jl
fbstp
hlt
sbb
push
ret
popa
shrl
push
cmp
sub
mov
decb
aad
push
sub
push
xor
push
lds
or
movsl
dec
and
and
mov
sbb
rcrb
dec
jmp
adc
mov
mov
cmc
add
xchg
push
shlb
in
dec
movsl
xchg
mov
fcompl
aad
xor
xor
mov
mov
fucom
inc
jo
mov
pop
jb
add
mov
outsb
rcll
cmc
or
xlat
lock
sub
popa
in
dec
push
cwtl
mov
pop
cs
lahf
jmp
loope
lahf
stc
cwtl
shll
pop
jne
cmp
pop
push
lds
stos
les
nop
and
movsl
shrl
pop
sbb
push
inc
imul
push
push
sbb
xchg
adc
lret
hlt
xor
stos
jns
sub
cwtl
push
mov
cmp
push
jns
imulb
in
dec
pop
add
jns
lds
cli
lret
mov
lret
sar
jecxz
aam
ja
stc
cli
in
test
or
test
jl
and
cmpsb
sub
mov
mov
push
iret
sbb
sahf
roll
in
mov
dec
sub
icebp
cmp
rcrl
clc
icebp
jle
scas
pxor
cld
repz
out
das
dec
lock
mov
aaa
jge
outsl
outsl
call
push
shrl
jae
mov
cs
icebp
lods
xlat
xor
adc
pop
mov
mov
mov
cmp
xchg
lds
dec
mov
pop
inc
cmpsb
jg
stos
gs
pop
mov
lahf
and
jne
xor
bound
adc
xchg
xchg
pop
ljmp
cmpsb
sub
mov
insb
mov
lret
inc
std
lods
dec
in
pop
push
fistpll
xor
sbb
fisttpl
or
test
inc
mov
or
cmp
adc
mov
adcl
jbe
sub
sub
add
enter
rcrb
add
imul
lea
jle
xchg
pop
or
or
stos
mov
or
or
ret
jg
lret
jle
aam
outsl
addr16
call
xchg
out
cmpsl
mov
jg
inc
inc
jle
subl
icebp
or
fnsave
sbb
fidivl
aas
ret
jne
push
pop
add
mov
rcrb
pop
jno
loopne
pop
addr16
mov
adc
and
jl
in
test
pop
rcrl
mov
fadd
inc
sub
and
xchg
sub
lods
xchg
sub
adc
inc
in
xlat
mov
jecxz
push
sahf
aaa
push
testl
roll
arpl
jge
les
in
mov
xor
ret
icebp
data16
inc
lcall
dec
inc
cmpsb
fs
fistps
cmp
loopne
and
mov
repnz
cmp
mov
stc
and
add
aas
js
or
push
icebp
or
pop
xchg
sbb
mov
gs
push
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
loopne
xor
cmpb
je
test
loope
and
arpl
adc
xor
movsb
or
and
cld
mov
sbb
push
aas
test
mov
xlat
sbb
xor
rorb
mov
mov
mov
add
addr16
and
movsl
mov
imul
push
adc
ret
scas
push
sbb
ljmp
inc
add
nop
fwait
sahf
popa
std
mov
shlb
test
icebp
fiaddl
or
inc
mov
add
pop
inc
sti
sbb
xor
pop
jp
mov
fisttps
mov
mov
sbb
mov
pop
jb
add
mov
out
push
out
xchg
add
fbld
addr16
enter
stos
sub
cmp
mov
mov
mov
test
repz
jge
hlt
and
mov
pushf
pop
mov
xor
imul
das
out
jne
cwtl
mov
add
shll
xchg
sbb
lret
mov
clc
sti
mov
stc
clc
jp
add
cltd
sub
adc
lods
cmpsb
sbbb
lret
mov
pushf
dec
push
lcall
ret
stc
pushf
pop
pop
pop
loope
lcall
stc
jnp
sahf
pop
xlat
iret
sahf
jno
jecxz
fadds
mov
adc
add
nop
and
pop
stos
xchg
stos
jne
dec
push
pop
rcll
push
in
in
dec
scas
out
xor
insl
lods
and
mov
pop
xlat
cld
sbb
cmp
mov
fdivs
xchg
pop
nop
cmp
sbb
and
mov
movsl
inc
push
mov
or
in
insl
xchg
popf
pop
adc
loop
pop
mov
gs
cltd
mov
cltd
enter
dec
mov
jle
push
pusha
hlt
push
lock
mov
arpl
call
jbe
xor
or
mov
mov
push
mov
jmp
lock
mov
push
ss
movsl
xor
push
push
jle
das
outsl
loop
push
insl
in
popa
and
adc
and
mov
test
mov
jl
clc
mov
cmpsb
neg
int
xchg
daa
push
push
jl
lret
rcrl
mov
mov
mov
leave
xchg
sar
cmp
add
cmp
lds
pop
mov
das
pop
icebp
or
cmp
fs
loop
out
stos
mov
fs
scas
repz
push
xchg
lods
out
cmp
out
mov
sub
je
pop
lods
addr16
fidivrs
pop
sub
adc
jl
pop
lods
out
bound
out
pop
push
pushf
pop
add
adc
inc
inc
pop
jle
nop
inc
fs
inc
mov
jmp
mov
push
add
rolb
jl
inc
jae
test
pop
push
jl
in
rol
mov
and
rcrb
orl
popa
or
sub
aaa
mov
sbb
jge
les
ljmp
mov
sti
sbb
sbb
mov
sahf
das
xchg
stc
cli
in
test
or
pop
sbb
outsb
or
int
lcall
push
and
and
popa
xchg
jecxz
xchg
das
cmpsb
int3
sub
in
mov
scas
shrb
sub
movzbl
mov
jne
sahf
fidivrs
rorl
sub
or
pfacc
jle
fwait
inc
jo
rorl
test
push
enter
test
and
xchg
sqrtps
outsl
or
mov
out
xchg
out
enter
es
mov
mov
add
and
and
mov
xchg
cmp
or
aas
out
lods
imull
arpl
mov
push
cmc
or
mov
xchg
std
pop
int3
push
mov
ja
mov
pop
add
out
pop
fstl
wbinvd
imul
push
adc
call
daa
sub
ljmp
movsb
pop
loopne
mov
movsb
shll
lock
jbe
lods
push
xchg
mov
repnz
sub
lret
jnp
jbe
mov
insl
outsb
pop
cltd
enter
fldt
jae
in
scas
aas
test
sub
cmpxchg
dec
lret
and
cld
mov
dec
mov
mov
add
xchg
adc
dec
and
xchg
gs
pop
test
sti
adc
pop
jg
test
fwait
pop
lea
call
into
loope
and
dec
dec
mov
inc
xchg
leave
sbb
inc
idivb
adc
movl
lods
xor
push
add
jno
lds
movsb
sub
xchg
ljmp
cmpsl
xor
rorl
movsb
sbb
outsl
jl
mov
subl
das
adc
movsb
xchg
test
clc
sub
jne
xchg
out
fbld
dec
mov
jae
sub
pop
test
rcr
xchg
mov
les
cld
xor
and
fisubl
pop
push
ja
nop
test
add
cmp
lds
pop
mov
das
pop
icebp
or
cmp
fs
loop
out
stos
mov
fs
scas
repz
push
dec
xor
or
test
mov
scas
xchg
out
cmpsl
mov
jge
adc
mov
pop
hlt
repz
sbb
pop
inc
dec
and
or
mov
lcall
xchg
jmp
sbb
leave
jbe
add
fsts
inc
pop
cmp
leave
sti
int
clc
test
cmp
and
sbb
jno
decl
lds
push
or
inc
movsl
xchg
sub
pushf
ret
pop
mov
hlt
mov
arpl
loop
ljmp
fsts
clc
stos
jg
mov
fists
jo
ljmp
popf
repz
pop
inc
fldcw
pop
gs
enter
xchg
fs
push
ret
jo
adc
nop
inc
cmp
les
mov
dec
repz
cmp
push
enter
test
inc
and
enter
add
stos
adc
dec
loop
movsl
icebp
xor
xchg
std
cwtl
fidivl
inc
pop
in
sub
mov
xchg
push
jle
call
lds
push
dec
xorl
and
mov
xchg
cmp
or
aas
out
lods
imull
arpl
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
cmp
pop
push
mov
cmp
ja
xchg
movsb
enter
cmc
or
outsb
xor
push
lock
pop
lock
mov
fists
outsb
ret
stos
out
jbe
push
push
movsb
jmp
scas
jmp
outsb
mov
pop
sub
pop
dec
xor
jae
cltd
divb
fisubrl
jno
or
dec
dec
pop
jb
xor
or
jnp
mov
mov
repz
lret
std
cli
jnp
inc
mov
add
adc
mov
pop
repnz
mov
negb
mov
je
pop
dec
mov
and
mov
je
lret
push
and
rolb
push
push
shll
dec
sarl
xchg
jno
dec
adc
lret
pop
sbb
cli
cmp
mov
iret
push
insb
loopne
test
add
pushf
shll
je
lock
dec
jecxz
lret
mov
cmpsl
ret
test
pop
and
gs
sub
adc
inc
in
xlat
mov
jecxz
push
sahf
aaa
push
testl
push
std
and
shrb
fsubl
mov
out
push
xchg
fimull
pop
sub
mov
jecxz
mov
das
mov
in
cmpsb
aas
stos
shrb
mov
scas
bound
add
popa
mov
enter
adc
sbb
cli
push
mov
push
mov
sahf
fptan
mov
sub
std
stos
stos
test
pop
cmpsb
enter
add
mov
mov
in
and
test
and
xchg
push
hlt
mov
popa
dec
mov
mov
push
dec
push
adc
inc
mov
sbb
inc
popf
repz
jl
mov
roll
inc
add
int3
cwtl
stos
add
outsl
hlt
jmp
decb
push
mov
sbb
bound
add
imulb
push
inc
dec
movsl
inc
push
sbb
cli
sbb
sub
sub
or
mull
push
icebp
add
inc
fdivrl
cltd
rcr
adc
pop
pop
inc
imul
jge
lcall
lcall
adc
dec
movsb
aad
xor
xor
mov
mov
pop
loope
jo
mov
pop
jb
add
xchg
js
add
popl
xor
mov
inc
cwtl
dec
int
adc
aam
push
jns
jbe
test
imul
daa
ret
fld1
je
cmp
inc
iret
add
mov
enter
cmp
repnz
int
or
mov
add
test
bound
jns
ss
adc
xlat
mov
in
push
dec
daa
cmp
jp
add
add
mov
sbb
mov
push
testb
mov
dec
and
gs
int3
push
xor
dec
movsl
arpl
pop
cmp
dec
cltd
jae
pop
fistpll
add
mov
xchg
lods
push
outsl
sbb
ja
in
es
shlb
jnp
xchg
and
cmp
dec
dec
dec
cmpsb
xor
dec
push
and
ret
into
mov
push
push
or
jb
pop
in
mov
pop
das
rorl
scas
pushfw
add
popl
mov
dec
pop
call
xchg
sbb
jnp
dec
ljmp
sti
lahf
movsl
call
add
xor
repnz
hlt
add
pop
shrl
push
push
rcl
hlt
cmp
or
movb
cs
push
lds
jle
pop
inc
jl
and
cmp
xor
xchg
dec
stos
add
repnz
sbb
sahf
add
sarl
ss
mov
or
fisubl
cmp
inc
push
ret
call
xor
stos
enter
and
xrelease
cltd
outsl
aad
sbb
adc
mov
fnsave
and
popf
inc
adcb
pop
push
mov
scas
adcb
mov
xor
cmc
xor
mov
mov
cmc
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
in
jg
fsubs
and
call
sbb
jg
into
add
stc
test
ret
jmp
or
and
or
mov
adc
push
adc
mov
push
jp
pop
cmc
push
sbb
idivb
lds
adc
ret
cvttps2pi
add
iret
pop
mov
xchg
fs
outsl
aaa
mov
mov
jne
xchg
rcr
test
aaa
jns
frstor
fisttps
lahf
jp
leave
dec
mov
or
lret
rcll
sbb
mov
cmpsb
xor
jb
fisttpll
cmp
lds
jge
bound
scas
das
pop
icebp
or
cmp
fs
loop
out
stos
mov
fs
jmp
pop
cs
xchg
mov
scas
out
mov
sub
divl
mov
fdivrp
xor
cmpsl
jl
xor
hlt
icebp
adc
sub
add
outsb
add
jle
nop
inc
stos
jae
nop
and
push
or
mov
mov
jo
xor
je
jo
xorl
lds
add
hlt
std
in
pop
enter
bound
push
push
aas
cli
add
mov
xchg
inc
cltd
or
xchg
shll
mov
dec
fwait
mov
cwtl
xor
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
test
cld
and
inc
outsb
cmpsb
sub
mov
mov
push
iret
loopne
xchg
push
inc
xchg
push
es
test
cmp
repz
cmp
push
dec
in
pop
mov
je
cli
add
rorb
aad
je
ror
rorb
xchg
adc
loop
movsl
icebp
xor
xchg
std
cwtl
fidivl
inc
pop
in
sub
mov
xchg
push
jle
call
add
push
dec
xorl
lret
add
mov
add
mov
lods
sub
ret
ret
sahf
imul
add
xor
lock
xor
sub
into
mov
sbb
in
xor
jmp
xor
ret
in
xor
adc
sahf
cli
test
cmpsb
jp
jns
sub
push
mov
je
mov
lahf
lcall
pop
sbb
dec
add
xchg
sarb
xor
mov
jp
add
cmp
push
dec
dec
enter
sahf
sahf
xchg
sbb
js
xchg
xor
in
or
or
jns
dec
sti
mov
inc
fisttpll
adc
popl
pop
or
testb
jle
mov
or
pop
add
mov
mov
cmc
sbb
pusha
out
pop
cmpsb
jo
mov
test
xchg
mov
mov
faddl
jp
mov
mov
ret
dec
sbb
mov
nop
mov
dec
and
mov
mov
test
add
in
mov
cli
out
mov
cltd
jo
lock
dec
and
add
jbe
lea
dec
test
and
daa
mov
inc
ret
jp
movsl
jae
fsubr
cld
fnsave
pop
adc
imul
push
outsl
addl
and
mov
pop
push
and
aad
mov
sub
arpl
mov
in
jo
mov
out
mov
jno
adc
scas
pxor
inc
mov
dec
lock
jl
das
dec
or
pop
pop
loopne
xlat
sti
in
orl
in
arpl
dec
ret
push
outsl
popa
jne
insl
or
sbb
dec
mov
pusha
push
or
daa
dec
loope
inc
lret
lret
cmp
int3
adc
js
test
or
aas
out
lods
imull
arpl
mov
push
cmc
or
mov
jecxz
inc
dec
mov
cli
ret
mov
xchg
ja
ja
icebp
ret
leave
pop
movsb
mov
pushf
inc
nop
sarl
lods
clc
inc
mov
out
lahf
movsb
leave
pop
subb
mov
mov
fmul
cwtl
in
jae
push
cmp
push
xchg
add
lea
sub
push
popa
fsts
movsb
fstl
cld
test
xor
shll
pop
push
fadds
mov
sti
jne
sbb
mov
fwait
push
dec
mov
mov
lret
and
sahf
xchg
sarb
ja
out
fbstp
sub
ljmp
out
int3
lahf
testb
int3
push
sub
mov
mov
stos
arpl
cmovne
pop
pop
sbb
add
push
call
punpcklwd
xchg
jnp
dec
rcr
or
scas
in
cmp
out
mov
adc
jl
clc
sub
int
inc
jmp
rcrb
ficompl
jne
mov
clc
rorl
or
stc
arpl
fldl2e
je
sahf
das
xchg
stc
cli
in
test
or
test
lahf
and
inc
outsb
cmpsb
sub
mov
mov
dec
mov
xor
xchg
fdivl
adcb
les
test
xor
not
jle
pop
xchg
mov
scas
data16
add
inc
xor
or
sti
dec
iret
push
call
subl
cmpsb
jmp
loopne
popf
test
aas
sbb
bound
lea
scas
cwtl
or
popf
ljmp
mov
movsl
mov
cmp
test
repz
dec
mov
lea
dec
or
loope
pop
int3
add
or
js
sbb
ds
lock
mov
aad
call
cmp
mov
cmp
pop
stos
push
lods
xchg
sub
adc
inc
in
xlat
mov
jecxz
push
sahf
aaa
push
testl
shll
pop
push
lods
push
xchg
movsl
and
jg
out
in
dec
sub
inc
dec
aad
pop
cltd
enter
lods
mov
mov
arpl
movsl
sub
sbb
sbb
sbb
ret
xchg
mov
leave
lock
mov
test
mov
rcrl
pushf
sub
jnp
mov
js
call
iret
adc
ret
and
jo
not
fisttpll
cmp
mov
xchg
bound
cmp
call
movsb
lea
push
pop
pop
push
test
mov
lds
add
mov
cmp
jp
add
cltd
sub
adc
dec
add
lods
cmpsb
sbbb
lret
lcall
stos
mov
rcll
pushf
pop
pop
mov
fwait
jecxz
test
std
sahf
pop
xchg
iret
loope
pop
ret
adc
and
pop
mov
mov
push
aam
jne
insl
dec
pop
xchg
enter
adc
cmpsl
insb
mov
lods
jbe
mov
fistl
push
fs
mov
cmp
clc
push
xor
inc
xor
fdivs
add
push
test
xchg
adc
data16
mov
jmp
aad
repz
jne
mov
or
lahf
cltd
pop
adc
loopne
xor
cmpb
je
test
loope
and
arpl
in
add
and
push
cmp
data16
test
xlat
jmp
mov
call
xlat
or
incb
mov
inc
xchg
sub
xor
mov
pop
mov
and
in
shr
xchg
push
hlt
lds
ret
xchg
mov
pop
mov
sub
lods
loopne
sub
jmp
neg
popa
pop
bswap
mull
push
icebp
add
inc
fdivrl
cltd
rcr
adc
pop
pop
inc
imul
jge
lcall
lcall
adc
dec
movsb
aad
xor
xor
mov
bound
lret
mov
repz
nop
xchg
lahf
push
cwtl
lock
sbb
je
jge
in
je
sbb
mov
cmpsb
xchg
xchg
inc
add
test
mov
out
loopne
js
rorl
arpl
es
xchg
mov
mov
fs
int
or
mov
add
test
bound
jns
ss
shr
xlat
mov
cmp
stc
clc
jp
add
add
mov
sbb
xchg
xor
mov
cld
mov
shl
or
shrl
fsubl
sub
xor
sub
inc
ret
pop
daa
mov
aam
xchg
cli
adc
mov
lcall
sti
stos
xchg
add
xlat
loope
movsb
fstl
fsubrl
cltd
jg
xor
sbb
add
popa
or
inc
add
subl
dec
std
adc
les
inc
dec
cld
or
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
pop
rorl
enter
pop
cmp
pop
sub
mov
mov
xor
addr16
fldcw
cmp
mov
dec
les
rcl
idivl
popa
out
test
aam
fildl
imul
mov
sbb
sahf
mov
adc
mov
shlb
mov
cwtl
fadds
cwtl
or
push
mov
sub
cmp
sub
cmc
sbb
std
fistpll
ret
mov
mov
test
in
andb
sbb
fcomps
jne
insl
jle
mov
xor
das
movsl
mov
cs
sahf
pop
and
jle
test
cld
mov
pop
xor
addr16
dec
push
cmp
leave
lock
jl
das
dec
iret
shl
divl
adc
stc
jp
scas
scas
loope
sti
jnp
out
scas
mov
dec
scas
insb
lock
mov
mov
mov
xchg
adc
jbe
push
out
jnp
dec
mov
or
xlat
adc
int
int3
fwait
mov
in
and
xor
pushf
dec
jp
push
pop
add
add
mov
jmp
sbb
leave
fsubrl
adc
aas
movsl
hlt
imul
movsb
xchg
mov
jge
shrb
fstps
inc
cmp
xchg
std
shlb
jp
pop
jp
push
out
fmuls
sub
lods
scas
xchg
jl
stc
mov
inc
inc
add
mov
pop
mov
lods
add
pop
pushf
jle
pop
mov
in
lds
push
push
sbb
inc
jo
mov
xor
bound
fwait
push
dec
mov
and
adc
mov
inc
insl
out
sbb
inc
add
pop
lods
mov
jl
pop
lods
out
std
into
add
sahf
pop
or
mov
lods
xchg
popf
sub
xchg
inc
gs
imul
push
inc
push
xorl
in
push
inc
movsl
cltd
lret
gs
rcrb
orl
popa
or
sub
aaa
mov
sbb
jge
les
stc
sub
sti
sbb
sbb
mov
sahf
das
xchg
stc
cli
in
test
or
test
cmp
and
cmpsb
sub
mov
addb
rcrb
inc
sub
jp
pop
lcall
adc
pop
mov
jecxz
push
cmp
loop
out
repnz
jg
out
das
dec
iret
std
arpl
jecxz
fwait
scas
mov
nop
arpl
push
jmp
push
jae
push
sbb
jge
negl
fildll
lahf
stc
cwtl
shrl
pushf
ret
addr16
sub
or
dec
dec
adc
rcrl
or
sbb
and
xchg
out
xlat
push
sbb
mov
inc
jge
pop
ret
sbb
cmp
out
mov
jne
xor
pushf
jle
sbb
mov
sbb
pushf
push
nop
push
fnstcw
fcoms
aam
xor
rol
cmpsl
flds
inc
ds
movsb
ret
xor
dec
inc
sub
sub
inc
push
fsubl
cli
loop
insl
xchg
sub
and
ja
lock
or
pop
nop
lcall
mov
pop
int
jge
pop
dec
data16
sbb
fwait
jl
fcoml
data16
stc
add
or
xor
dec
movl
jp
dec
cmpsl
daa
sub
mov
sub
mov
mov
inc
arpl
out
fxch
lds
sbb
arpl
shl
mov
pop
dec
inc
dec
fmull
mov
addr16
test
sbb
dec
rcr
sti
jnp
mov
hlt
std
fstps
pop
enter
bound
push
push
aas
cli
add
mov
xchg
inc
cltd
or
xchg
shll
mov
dec
fwait
incb
xor
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
test
jg
and
cmpsb
sub
mov
mov
push
iret
sbb
sahf
roll
in
mov
dec
sub
icebp
sbb
shl
test
scas
adc
imul
push
repz
cmpb
pop
das
dec
iret
shll
dec
icebp
adc
sti
jp
scas
scas
loope
xrelease
loopne
js
cs
jae
sbb
lahf
lods
xlat
pop
arpl
out
test
ss
push
andb
or
das
add
enter
adc
push
inc
lret
movsb
mov
push
cmc
cmp
cmc
jmp
pushl
adc
ljmp
and
jl
adc
and
mov
dec
sbb
adcl
cmp
sub
cmc
sbb
std
fistpll
ret
mov
mov
test
in
andb
cmpsb
mov
aam
movsb
xor
jmp
sarb
stos
pop
xchg
repz
ret
cmpsl
inc
and
in
jge
pop
adc
in
add
iret
jne
cld
jae
sub
xchg
push
fcmove
xchg
hlt
ja
std
outsl
addr16
call
rcrl
mov
add
push
pop
into
vpshuflw
mov
jno
popf
push
sbb
or
xchg
sti
gs
mov
dec
mov
sbb
pop
shrl
loopne
jne
dec
mov
mov
add
push
stc
jo
lods
mov
imul
push
popf
mov
cmp
jp
add
add
mov
sbb
xchg
xor
mov
arpl
mov
incl
sbb
mov
dec
ljmp
and
adc
lcall
sahf
jns
loope
pop
lods
push
outsl
sbb
dec
pushf
mov
jecxz
imul
mov
scas
push
mov
das
mov
push
xchg
and
in
jo
sub
repz
aad
jecxz
xchg
xor
xchg
xor
mull
mov
fxtract
cmc
out
les
out
dec
mov
insl
jmp
mov
adc
fwait
cli
aaa
fldcw
xchg
ds
out
hlt
or
sbbb
hlt
test
cmc
clc
jnp
push
sbb
ret
js
test
or
aas
out
lods
imull
arpl
mov
push
cmc
or
mov
pusha
lret
jecxz
testl
gs
orl
es
test
cmp
pop
inc
roll
pop
test
push
ljmp
out
lods
mov
and
call
imul
inc
sub
sub
adc
jecxz
fdivs
or
xor
dec
dec
xchg
aam
push
pop
loop
dec
xorl
xchg
dec
scas
iret
dec
sbb
shll
mov
repnz
cmp
mov
stc
and
add
aas
js
or
push
icebp
or
pop
xchg
sbb
xchg
mov
gs
push
aas
fwait
lret
in
mov
mov
or
cmp
jb
out
pop
or
cltd
inc
rol
sbb
xchg
dec
nop
sub
mov
rol
sub
fistl
add
test
aam
repz
cwtl
mov
or
adc
pop
jecxz
js
fdivp
mov
or
xor
rol
movlps
mov
xchg
push
pop
repnz
sbb
xorl
mov
pop
ficoml
imul
xchg
shlb
push
cmc
mov
ret
sbb
in
inc
mov
or
cmp
adc
mov
les
pop
lahf
fisttpll
jbe
mov
inc
cld
fcmovu
inc
pusha
scas
mov
and
dec
hlt
int
popf
xchg
cmp
das
ss
paddb
jg
or
jecxz
push
push
cmpsl
out
arpl
scas
mov
inc
call
pcmpeqd
ja
inc
test
daa
dec
leave
movsl
jno
pop
cs
jne
mov
out
lahf
stc
jne
mov
xlat
pushf
ret
addr16
sub
adc
inc
shlb
push
mov
fbstp
test
ficoml
inc
mov
mov
dec
sub
push
aaa
test
mov
hlt
push
aas
mov
sub
mov
bound
addr16
andl
cmpsb
ret
fcomip
adc
and
loopne
into
mov
pop
popf
repz
in
loope
ret
xchg
insl
dec
mov
sbb
mov
xchg
xchg
and
js
dec
test
lahf
mull
sub
push
cmp
in
mov
ljmp
xchg
loopne
or
sarb
rorb
cmpsl
or
repnz
dec
inc
add
xor
stos
stos
sub
cmpsb
call
pop
jae
gs
cltd
pop
adc
loopne
xor
cmpb
lods
inc
test
js
sbb
mov
dec
sbb
or
lcall
pop
mov
mov
and
push
sahf
popf
jecxz
push
adc
stos
and
inc
mov
and
dec
sbb
mov
pmuludq
hlt
imul
xlat
addr16
or
sbb
mov
cmp
out
pop
clc
sub
mov
ret
dec
sub
daa
sbb
add
cmp
adc
mov
adcl
jbe
sub
sub
sbb
das
fucomi
test
popf
scas
cmp
push
leave
hlt
inc
and
fadds
inc
dec
jno
popl
adcb
dec
daa
sub
insb
mov
inc
and
cmpb
xchg
fisttpll
add
out
int3
add
lea
and
shrb
cmp
cld
or
lea
cmp
aas
out
lods
imull
arpl
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
enter
roll
icebp
pushf
jle
mov
xor
jmp
dec
inc
jecxz
xchg
outsb
xor
pop
cmpsl
fisubl
cmp
inc
push
pop
inc
andb
lret
fstl
out
mov
loope
pop
sub
lock
pop
mov
cs
inc
push
clc
mov
jns
gs
mov
sub
cld
xchg
pop
dec
lods
jne
pop
pop
das
mov
sbb
add
pushf
sbb
loop
nop
xchg
mov
jle
dec
dec
add
negl
cmp
push
mov
or
in
insl
xchg
popf
pop
adc
loop
pop
mov
gs
sbb
mov
xchg
int3
scas
sub
sbb
pop
popf
sar
stos
test
imul
je
pop
iret
jp
incb
mov
sbbl
ret
loopne
dec
scas
xor
sub
xlat
add
mov
mov
out
inc
sbbl
cmpsl
dec
or
mov
popa
test
xor
xor
lods
dec
adc
or
jmp
sub
sbb
ljmp
lret
into
jo
fnstenv
or
mov
jl
sbb
pop
rcl
mov
cmpsb
xor
jb
fisttpll
cmp
lds
mov
scas
das
pop
icebp
or
cmp
fs
loop
out
in
and
jae
scas
inc
repz
and
das
inc
xor
mov
fcmovnb
outsl
addr16
mov
ret
iret
test
dec
jnp
sbb
pop
jnp
or
ret
and
jo
or
pop
xor
inc
mov
push
push
jp,pt
push
mov
and
pop
lcall
scas
inc
lahf
jnp
jae
xor
jns
cltd
mov
add
mov
cmp
jp
add
add
mov
sbb
mov
push
testb
inc
pushf
dec
and
inc
xor
lcall
rclb
jg
repz
lret
pop
lods
mov
popf
shl
or
testb
mov
or
imul
inc
adc
mov
leave
jnp
mov
shl
cmpsb
fsubr
adc
xor
and
inc
jb
popf
fimuls
mov
jae
or
sbb
mov
fwait
push
dec
mov
and
adc
pusha
adcb
mov
inc
insl
out
sbb
inc
add
pop
lods
mov
jl
pop
lods
out
std
into
add
sahf
pop
or
mov
mov
inc
dec
adc
pop
sbb
xor
je
jo
xorl
lds
fldt
mov
mov
xchg
lock
mov
out
inc
mov
xor
dec
mov
xlat
in
or
int3
add
imul
adc
inc
das
addr16
dec
and
pop
cmp
insl
sub
mov
je
subl
vroundss
cmp
ret
adc
sbb
mov
push
xchg
pop
xorl
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
add
dec
add
pop
inc
mov
dec
out
mov
xor
das
stos
xlat
shll
test
mov
ret
cltd
call
sti
mov
xchg
dec
test
aaa
mov
pop
jle
nop
add
dec
adc
ss
add
in
dec
jo
push
cltd
das
lea
mov
insb
mov
mov
leave
adc
cmp
lea
jg
or
and
jl
pop
adc
test
inc
mov
add
out
in
xlat
mov
jecxz
push
sahf
aaa
push
testl
loope
lret
movb
vplzcntd
push
stos
fs
xchg
fimull
pop
sub
mov
jecxz
mov
das
mov
in
cmpsb
aas
stos
shrb
mov
scas
bound
add
popa
mov
enter
adc
sbb
mov
push
mov
sahf
fptan
mov
sub
std
stos
stos
test
pop
cmpsb
enter
add
mov
mov
in
and
sbb
lret
dec
sbb
lea
cmp
ret
mov
test
jl
or
int
rcrl
pop
xor
add
repnz
sbb
mov
mov
clc
inc
mov
jmp
cmp
insb
sub
jb
test
mov
popa
ficoms
sbb
fidivs
orl
adc
and
adc
inc
mov
xor
dec
sub
sub
pop
mov
cs
or
pop
mov
int3
add
pop
int
mov
xor
adc
adc
mov
imul
loope
lds
mov
ss
mov
in
sub
cmp
and
pop
adc
mov
inc
insl
out
pop
rorl
mov
sbb
call
cmpsb
cmp
hlt
repz
push
arpl
clc
inc
and
cltd
aas
mov
dec
push
pop
xor
rolb
add
inc
rorb
xor
mov
in
add
xchg
or
lods
sbbl
jae
or
xchg
in
dec
or
repnz
jle
sub
rolb
adc
popa
push
sub
lods
xchg
sub
adc
inc
in
xlat
mov
jecxz
push
sahf
aaa
push
testl
shll
pop
push
lods
push
xchg
movsl
mov
adc
jno
xchg
in
dec
dec
xchg
aam
jne
insl
outsb
pop
cltd
enter
and
jae
in
scas
aas
test
xchg
adc
dec
sbb
insb
out
jecxz
push
cmp
clc
pop
sub
sar
jg
sbb
push
imul
xchg
fsubrl
sbb
incl
mov
out
jae
lahf
xor
ja
daa
negl
mov
iret
adc
ret
and
popf
int
mov
mov
int3
pop
nop
xchg
test
popa
mov
mov
arpl
call
add
and
lods
fistl
mov
test
xor
add
mov
pop
mov
sbb
sahf
mov
adc
mov
shlb
mov
cwtl
pop
inc
xchg
cwtl
or
push
mov
sub
cmp
sub
cmc
sbb
std
fistpll
ret
mov
mov
test
in
andb
mov
cmpsb
dec
sub
in
cmp
xchg
pop
mov
push
push
add
xchg
sub
btr
outsl
jno
insb
out
mov
mov
test
xchg
data16
inc
dec
leave
addr16
sbb
sbb
daa
xlat
insb
mov
sbb
pop
sub
adc
jl
pop
lods
out
std
adc
es
movl
or
inc
fs
inc
dec
adc
mov
repz
mov
pop
sbb
insb
add
fadd
fldl
push
rorb
aad
movb
sbb
sbb
ja
push
mov
adc
add
lock
mov
mov
stos
out
jbe
push
push
movsb
jmp
scas
jmp
outsb
mov
pop
sub
jae
int3
or
push
inc
outsb
scas
stos
rcll
divl
ret
fistl
xchg
jb
xor
lods
aad
sarl
xchg
mov
movsb
mov
xchg
addb
cmp
mov
mov
dec
enter
cmc
mov
cmp
movsb
ret
xor
lahf
cmpsl
mov
jae
mov
int
jno
ret
mov
mov
nop
pop
push
push
jle
nop
fs
insb
xchg
pop
or
xchg
push
idivl
fimull
out
inc
ret
mov
rcr
pop
addb
fcomps
das
fildl
jl
mov
add
dec
lds
push
cmpb
xor
mov
push
aad
or
inc
cltd
lret
lcall
sbb
std
fistpll
ret
mov
mov
test
sbb
subb
imul
jge
sbb
push
sti
inc
movsb
aad
dec
dec
les
es
cmp
out
sub
scas
inc
fwait
int3
in
es
dec
inc
daa
movsb
out
inc
mov
hlt
dec
les
adc
push
iret
xor
imul
pop
jns
mov
adc
cmp
es
ud1
and
cmp
or
cmp
xchg
sub
rol
dec
sbb
into
or
lcall
mov
stos
mov
bound
adc
xchg
pop
xchg
into
popa
mov
repz
fcoml
xchg
leave
addr16
outsl
push
jmp
incb
xlat
adc
rclb
mov
jae
loop
pop
stos
push
stos
mov
mov
dec
fistps
idivb
arpl
push
rorb
mov
jno,pn
insb
repnz
arpl
push
je
push
xchg
testb
xchg
cld
xchg
inc
dec
lods
jne
dec
pop
das
mov
sbb
add
pushf
sbb
loop
nop
xchg
mov
jle
push
dec
dec
add
xor
aam
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
pop
sarl
out
push
test
xchg
add
or
mov
sub
sbb
push
inc
roll
sbb
mov
cmp
push
addr16
or
and
cmp
sbb
sbb
xor
mov
daa
inc
lods
dec
jmp
decb
aad
aad
xchg
mov
leave
pushf
dec
and
adc
and
cmp
xor
into
ffreep
pop
xchg
pop
int3
bound
lret
fildl
cmp
inc
mov
mov
movsb
xchg
sub
pop
lcall
ss
mov
aas
stos
shrb
sub
btr
outsl
mov
mov
adc
sub
mov
shrb
mov
mov
aas
adc
loope
sti
jnp
or
cmpsl
sub
ljmp
xchg
xor
adc
cmpl
push
mov
aaa
xchg
fstpl
pop
xor
cmc
xchg
fcomps
rorb
call
push
scas
pushl
lret
repz
fists
addb
rcrb
hlt
das
lock
mov
int3
fsubl
inc
push
pushf
cmpb
adc
fldenv
dec
lret
inc
and
stc
inc
jae
xor
mov
pop
outsl
loope
mov
dec
xor
dec
xchg
das
cmpsb
int3
push
aas
scas
shlb
ss
mov
aas
scas
shrb
sub
in
mov
and
xlat
insb
loop
mov
out
out
ret
jg
out
and
lret
and
mov
pop
out
inc
mov
enter
pop
jae
inc
and
cmpb
xchg
fisttpll
add
out
int3
add
lea
and
shrb
cmp
push
xor
lea
cmp
aas
out
lods
imull
arpl
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
mov
jmp
hlt
inc
pop
adc
mov
push
insb
xor
iret
movsl
mov
shrb
cmp
mov
add
int
inc
jno
pop
cmp
into
and
adc
inc
ds
lret
ljmp
dec
dec
imul
dec
addl
mov
lret
movsw
cwtl
push
push
push
fsts
add
fisubl
cmpl
repnz
jg
mov
mov
in
sbb
add
or
decb
std
mov
mov
jnp
inc
push
mov
or
xchg
and
leave
inc
mov
push
xabort
mov
lods
out
or
dec
sbb
les
clc
test
push
or
lds
jne
sbb
or
popa
in
push
inc
push
sbb
cmp
sahf
add
push
xchg
sub
inc
enter
sahf
rcrb
orl
popa
or
sub
aaa
mov
sbb
jge
les
std
sub
sub
fldl2e
je
sahf
das
xchg
stc
cli
in
test
or
test
jge
and
cmpsb
sub
mov
mov
push
iret
sbb
push
shr
inc
xchg
jae
in
mov
push
iret
mov
lgs
outsb
out
arpl
das
push
sub
push
clc
mov
fsubrl
cmc
jl
fmul
adc
outsl
cmp
fld1
stc
jp
scas
scas
loope
sti
mov
cltd
mov
pop
cs
icebp
in
jns
outsb
out
lahf
stc
sbb
pop
inc
loope
lea
pushf
shrl
loope
inc
push
push
adc
dec
dec
movsl
shl
add
and
dec
push
nop
push
mov
sahf
inc
movsb
jle
ljmp
cmpsl
cmp
sbb
aas
ja
int
dec
stc
gs
xchg
ja
adc
fcompl
mov
inc
loop
adc
sub
cmp
int3
dec
mov
jno
int
add
pop
lcall
divb
jo
xor
sbb
or
pop
adc
pop
sub
jp
add
cmp
lds
sbb
bound
scas
das
pop
icebp
or
cmp
fs
loop
data16
pop
add
mov
jg
out
aas
add
lea
sbb
mov
iret
aad
cld
xchg
pushfw
out
es
jae
pushf
sub
call
lret
pop
jmp
fisttpll
jg
lahf
dec
xchg
clc
lahf
stc
cwtl
shll
or
add
subb
xchg
xchg
sub
xchg
shrl
pop
sbb
in
int
or
pop
ret
ret
aaa
xchg
mov
jbe
inc
ret
imul
sub
in
sbb
xchg
lea
int
inc
sbb
fdivrl
ret
insb
mov
sub
mov
test
push
inc
jno
cs
mov
sahf
das
xchg
stc
cli
in
test
or
test
pushf
and
inc
outsb
cmpsb
sub
mov
mov
push
iret
loopne
xchg
mov
cltd
mov
xchg
cmp
shrb
std
and
add
lock
scas
push
mov
add
in
and
cltd
fidivrs
mov
out
imul
repz
xchg
push
mov
pop
cmpsl
lock
cmpsl
ja
stc
lcall
mov
pop
add
dec
xchg
mov
stc
and
sbb
mov
mov
mov
test
or
aas
out
lods
imull
arpl
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
mov
rorl
bound
push
push
push
push
mov
inc
ret
pop
ficomps
pop
push
inc
sub
ss
int
inc
loop
imul
mov
sub
or
add
add
into
xchg
sbb
lcall
mov
lcall
sub
dec
fsubl
out
mov
movsb
mov
out
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
add
dec
add
pop
inc
mov
jno
pop
icebp
fs
lcall
dec
fsts
pop
pop
mov
arpl
jle
scas
pusha
mov
sub
adc
push
test
rcrb
es
int
or
mov
add
test
bound
jns
ss
adc
xlat
mov
cmp
stc
clc
jp
add
mov
mov
jns
ror
inc
sub
imul
dec
lahf
jecxz
sub
lods
mov
and
xlat
mov
insb
cmp
fidivs
sub
sbbl
addl
cltd
pop
shrb
pop
arpl
shl
add
enter
insl
scas
adc
test
sbb
ja
sub
insb
sti
dec
cltd
jno
insb
rolb
ja
inc
fcoml
mov
inc
out
mov
daa
xchg
cmpsl
push
hlt
aaa
jge
loop
imul
call
adcl
mov
mov
rcll
inc
in
cmp
xchg
xchg
jle
cwtl
out
cwtl
je
fcoms
inc
push
jp
adc
sub
imul
ds
xor
les
mov
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
mov
sub
mov
adc
insb
xor
lret
mov
in
addr16
or
stos
test
imul
movsl
mov
ja
lds
imull
sahf
jnp
popa
jbe
lods
push
outsl
sbb
ja
in
es
shlb
jns
inc
dec
xchg
aam
jne
insl
pop
fwait
enter
lods
xchg
mov
in
cmpsb
aas
stos
shrb
filds
push
inc
imul
jecxz
fnstcw
inc
std
rorb
mov
in
sbb
xor
push
mov
in
push
aam
ret
inc
jge
imul
stos
cmp
cli
pushw
add
test
add
sbb
add
andb
js
sbb
mov
mov
add
mov
lods
insl
lret
mov
mov
ret
push
jmp
out
pop
iret
or
push
jl
outsb
scas
sbb
sbb
repz
inc
dec
hlt
xor
jmp
mov
sbb
movsl
insl
mov
cmc
and
fisubrl
call
paddq
push
dec
jmp
mov
imul
fists
jl
or
or
sub
push
popa
fsts
movsb
fstl
cld
test
xor
shll
pop
push
fsub
mov
fsts
aam
or
sbb
mov
fwait
push
dec
mov
and
adc
pusha
adcb
mov
inc
insl
out
sbb
inc
add
pop
lods
mov
jl
pop
lods
out
bound
out
pop
push
pushf
pop
add
adc
inc
inc
pop
jle
nop
inc
fs
call
ret
inc
rorl
sbb
test
and
sub
les
push
jp
xor
divl
cmp
push
inc
add
movsl
add
rcrl
in
cmpsb
push
jns
imulb
in
dec
pop
add
jns
lds
cli
lret
mov
lret
sar
jecxz
aam
ja
stc
cli
in
test
or
pop
sbb
outsb
or
dec
dec
add
xchg
lcall
sti
mov
pop
mov
lods
mov
pop
leave
test
xchg
cmp
ficoms
dec
fcmovne
xchg
in
pusha
mov
cltd
das
push
rorl
inc
das
jo
sbb
je
jge
lds
outsl
iret
jecxz
or
lds
shl
xor
and
int3
mov
fstps
cmp
sbb
arpl
add
xchg
inc
dec
mov
sbb
dec
jl
fnsave
mov
cmp
or
aas
out
lods
imull
arpl
mov
push
cmc
or
mov
jmp
aad
cld
dec
or
icebp
cwtl
jle
xchg
mov
pop
xor
sbb
imul
push
stos
lea
and
mov
mov
adc
push
pop
dec
stos
pop
cltd
insl
inc
dec
inc
sub
int3
push
sbb
fsub
ja
in
jg,pn
shl
mov
pop
aam
jne
insl
outsb
pop
cltd
enter
in
int3
mov
in
mov
mov
fisttpll
repnz
fmull
sti
add
or
push
mov
cld
dec
fdivrs
dec
cmc
gs
push
aam
fistpl
icebp
mov
cmp
ret
cmpsb
mov
mov
jmp
std
mov
sti
and
sbb
lret
dec
sbb
dec
addl
mov
inc
jbe
xor
or
fwait
mov
jmp
mov
test
sahf
loopne
push
popa
mov
mov
adc
movsb
sbb
push
stos
push
mov
divl
icebp
movsb
enter
lods
sbb
ljmp
addr16
jb
xorl
clc
mov
and
test
test
or
int
mov
xor
adc
adc
mov
imul
loope
lds
mov
ss
mov
in
sub
cmp
inc
mov
mov
or
xchg
cmc
mov
mov
jae
add
and
mov
xchg
aas
movsl
dec
fistl
sbb
xor
insb
dec
xchg
xor
aas
scas
or
mov
ret
cmp
or
pop
add
push
call
cmpxchg
daa
mov
data16
add
das
jo
mov
adc
dec
aaa
add
lds
push
rcrb
sbb
inc
mov
adc
sub
pop
repz
pop
mov
lret
sbb
mov
sahf
das
xchg
stc
cli
in
test
or
test
pop
and
inc
outsb
cmpsb
sub
mov
inc
fimull
mov
pop
test
lods
cmp
dec
inc
leave
sub
scas
inc
fwait
lds
sub
repnz
inc
std
rorb
mov
in
es
rolb
out
sbb
ss
outsl
jae
fsubrp
cmp
inc
mov
lods
cli
lahf
jmp
sub
xchg
std
dec
data16
lock
dec
sbb
pop
mov
cmp
pop
push
lds
les
gs
push
jbe
inc
sahf
mov
mov
inc
add
rcr
adc
inc
mov
fstps
cld
inc
insl
clc
adc
fwait
js
sbb
mov
adc
inc
ret
sbb
xor
mov
pop
leave
jae
pop
jbe
mov
add
test
mov
dec
lret
inc
and
stc
inc
jae
mov
popf
lret
cmpsl
xchg
test
mov
adc
add
movl
pop
insl
dec
pop
xchg
jbe
or
push
push
push
xchg
push
es
test
sbb
clc
xchg
jmp
in
ffree
popa
jae
repz
scas
xchg
rcll
loop
push
popl
scas
out
cmp
out
mov
xor
jbe
jae
test
popf
inc
and
lret
sbb
cli
mov
fsubr
inc
sbb
mov
and
aaa
jl
pop
or
adc
leave
andl
add
jg
cmp
fistpl
mov
rorl
jmp
hlt
xor
adc
ret
ficomps
mov
fisubrs
adc
roll
add
lcall
daa
and
iret
mov
sbb
bound
push
ja
inc
in
scas
jge
lahf
jge
mov
notl
jnp
movsb
fildll
push
sahf
jns
jecxz
adc
inc
outsl
xchg
bound
in
ss
shlb
rclb
jne
sahf
mulb
push
cmpl
xor
fucomp
add
pusha
mov
mov
cmc
jge
cmp
rcrl
and
lcall
mov
cwtl
in
aaa
sbb
mov
pop
xchg
mov
mov
clc
jecxz
mov
jmp
std
mov
sti
and
test
sti
and
shrb
cmp
mov
popa
dec
mov
test
mov
inc
jo
lds
repnz
add
lret
cmpsl
xor
rorl
movsb
sbb
outsl
jl
mov
subl
xor
int
pop
lret
and
test
mov
mov
pop
xchg
shll
cmp
xchg
cmp
xor
mov
cmp
mov
cmpsb
xor
jb
fisttpll
cmp
lds
popf
mov
das
pop
icebp
or
cmp
fs
loop
out
stos
mov
fs
scas
repz
push
cld
xor
mov
mov
fs
push
mov
jnp
out
cmpsl
mov
jg
jae
popf
adc
jle
jmp
push
jo
out
inc
add
fildl
push
lret
shrb
in
add
xor
and
mov
rcrl
mov
into
fwait
cmp
mov
sbb
stos
add
sbb
cmp
mov
sub
pushf
ret
pop
mov
mov
sbb
bound
push
ja
inc
in
scas
jge
dec
pop
mov
pop
inc
cmpsl
lret
fucomp
add
fldt
repnz
dec
inc
sar
or
jg
test
sbb
mov
les
enter
movsb
jb
and
and
inc
inc
xchg
push
shrl
fstpt
loopne
adc
dec
mov
lds
adc
in
ja
or
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
pop
sarl
out
push
pop
pushf
xchg
dec
adc
cmp
sub
mov
dec
adc
lcall
and
test
pop
shrb
int
push
fisttpl
pop
add
cmp
or
mov
xorl
xlat
insl
aad
insl
ficomps
fists
in
dec
pusha
lods
fldenv
mov
jmp
push
add
repz
add
or
dec
jmp
js
scas
mov
xchg
sub
add
dec
fidivrs
lods
mov
fstpl
icebp
xchg
jp
fisttps
mov
bound
in
nop
xchg
lahf
push
cwtl
lock
sbb
je
jge
in
pusha
rcrb
mov
fists
fistps
jl
das
and
out
cmpl
jecxz,pn
repnz
jns
mov
in
xchg
mov
inc
adc
jbe
push
out
jnp
iret
mov
or
xlat
adc
int
int3
fwait
mov
in
and
xor
stos
dec
jp
les
movsl
add
add
mov
sbb
xchg
xor
mov
arpl
mov
incl
or
push
sub
mov
push
ret
mov
mov
aam
dec
cltd
insl
addr16
inc
sub
sub
inc
dec
fsubs
pushf
mov
in
pop
fmulp
xchg
cmpsb
dec
sub
cltd
enter
fdivs
push
add
xor
xchg
adc
dec
cltd
mov
mov
cwtl
das
push
roll
scas
push
xlat
mov
xor
add
nop
dec
push
mov
push
sub
mov
lret
sbb
andb
add
pusha
cmp
data16
inc
addr16
xor
mov
int
push
and
add
cmp
les
add
push
push
push
lds
or
pusha
jae
inc
int
add
ret
lods
adc
jmp
inc
cld
push
dec
xchg
mov
or
stc
bound
xchg
xor
fs
and
adc
iret
stos
test
movsl
inc
mov
sub
aaa
jnp
lods
hlt
dec
popf
xor
xor
shll
pop
xchg
pushf
push
inc
jecxz
fsubl
add
mov
ficompl
pop
rclb
dec
mov
sbb
btc
and
lret
xor
in
xchg
clc
pop
sub
nop
pop
mov
outsl
mov
cmp
adc
or
cmp
mov
ret
arpl
or
and
test
js
and
xchg
push
hlt
mov
popa
dec
mov
sbb
pushf
rolb
pop
and
or
inc
ret
pop
mov
sbb
xlat
push
cmp
shl
adc
push
mov
sub
mov
mov
mov
test
movsl
push
int
rcr
mov
hlt
xor
shrl
shrl
aas
adc
mov
jae
orb
xchg
mov
jg,pn
shl
push
fsubs
cmpsl
mov
or
cli
mov
ja
shrb
jnp
leave
mov
lahf
mov
test
jg
outsb
jno
insb
negb
mov
scas
pop
pop
or
imul
fadd
cmp
outsb
cmp
scas
mov
out
jb
fsubrl
mov
adc
incl
dec
mov
popa
and
cmpsb
stc
adc
enter
pop
dec
sbb
or
andb
nop
and
or
inc
orl
and
test
clc
xor
out
and
mov
icebp
add
cmp
inc
or
or
rol
dec
gs
jns
rolb
or
mov
mov
pop
dec
add
stos
aam
lahf
stos
sub
mov
push
movsb
jmp
push
ja
fs
movsl
mov
ret
mov
mov
sub
jl
sbb
mov
adcl
jbe
sub
sub
jnp
cmp
jmp
test
jg
outsb
jno
insb
negb
mov
scas
pop
pop
or
imul
fadd
cmp
outsb
cmp
scas
mov
out
jb
fsubs
pop
adc
jge
into
sub
das
sti
pop
fistpll
repz
pop
cmpsb
inc
cltd
movsl
mov
mov
add
dec
mov
inc
xor
push
dec
pop
xchg
inc
gs
dec
mov
idivl
dec
daa
mov
lock
jo
push
sbb
and
add
inc
sar
pop
cs
test
jecxz
or
inc
aad
fwait
scas
mov
jno
das
and
mov
in
arpl
mov
jg
sbb
push
push
mov
sub
jne
adc
call
orl
hlt
cwtl
rolb
push
sbb
jg
out
sub
sub
shl
sub
lock
sub
sbb
inc
jmp
lcall
jmp
inc
sarb
clc
mov
adc
or
and
sub
or
test
dec
push
repnz
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
loopne
xor
cmpb
je
test
jle
jl
out
mov
icebp
push
mov
stos
xchg
lahf
mov
adc
rolb
xor
pusha
or
pusha
push
sub
push
xor
divl
scas
pusha
mov
adc
orb
movsl
outsl
aam
sub
mov
xchg
xchg
mov
divl
push
stos
lea
aam
mov
push
sub
mov
fildll
push
sahf
jns
out
dec
in
mov
or
rcrb
xchg
stos
std
mov
inc
push
mov
xchg
gs
orl
mov
fimuls
mov
pop
and
in
jge
pusha
cmp
xchg
pop
or
or
stos
mov
or
in
cmpsl
ficoms
hlt
ja
mov
jns
jl
xor
cmp
jle
mov
clc
mov
out
enter
xor
aad
dec
sub
sbb
jno
inc
mov
lret
or
inc
roll
cmp
bound
movsb
cmpsb
call
imul
mov
cltd
lret
inc
mov
sti
jae
fistpll
cmpl
dec
mov
out
mov
dec
movsb
mov
cmp
dec
shl
dec
fwait
sbb
add
inc
dec
fisttpll
lret
stc
dec
push
out
aas
in
lret
aam
addl
add
dec
sbb
sbb
fisttpll
sbb
mov
fisttps
mov
mov
mov
mov
pop
jb
add
mov
out
push
test
out
cmp
daa
pop
push
xor
leave
dec
loope
jo
lret
sbb
xor
sub
ljmp
fists
jecxz
cmp
aas
ja
dec
int3
dec
xchg
test
imul
call
or
xchg
fcmovbe
movb
push
cmc
cmp
cmc
cmc
pop
push
dec
push
jmp
adc
ljmp
and
jl
adc
and
mov
dec
sbb
bound
jg
cmp
sub
cmc
sbb
std
fistpll
ret
mov
mov
test
jp
jge
scas
xchg
iret
stc
push
shlb
push
mov
rolb
jb
pop
push
aam
push
mov
and
mov
mov
push
movsb
lods
push
cmc
out
mov
or
pusha
aas
sahf
push
addl
inc
mov
pop
icebp
add
and
adc
xchg
mov
mov
fidivrl
sti
in
popa
insl
in
push
mov
aaa
dec
mov
cmpsl
mov
inc
adc
rolb
mov
add
mov
add
mov
lods
sub
ret
ret
sahf
imul
test
mov
je
jo
and
dec
mov
xchg
or
orl
test
pop
lea
lret
cmp
jmp
leave
sub
xchg
aam
xchg
mov
in
lret
cmp
subb
pop
imul
and
mov
xchg
push
pop
push
inc
fmuls
pop
xchg
push
xlat
adc
dec
mov
dec
lods
jne
mov
xchg
pop
mov
cmc
add
pushf
sbb
loop
nop
xchg
mov
jle
dec
dec
dec
add
negl
cmp
push
mov
or
in
insl
xchg
popf
pop
adc
loop
pop
mov
gs
sbb
mov
xchg
int3
scas
sub
sbb
pop
popf
sar
stos
test
imul
mov
mov
addr16
test
add
inc
pusha
or
xor
mov
aaa
ljmp
push
mov
test
xlat
inc
aad
push
sbb
rorl
mov
in
push
push
push
cmp
xor
data16
jecxz
js
lahf
mov
mov
pop
pop
dec
add
mov
add
imul
lods
test
push
daa
sub
lcall
jle
add
stos
sub
stos
aad
xor
xor
mov
mov
fsubp
inc
jo
mov
pop
jb
add
xchg
js
std
decl
mov
sbb
xlat
lock
sub
jne
sbb
fidivrs
push
sub
adc
jge
pop
lods
test
data16
lock
lret
clc
mov
or
andb
nop
and
or
andl
add
and
jo
out
add
mov
sbb
xchg
xchg
stos
push
xor
jo
xor
push
inc
test
mov
mov
pop
rcr
xor
aas
sub
int3
inc
push
cltd
mov
push
xor
mov
sbb
lods
js
lahf
mov
xor
jmp
popf
push
jns
rolb
fsts
or
sub
repnz
cmp
rorl
stos
mov
add
xchg
xor
jge
pop
xor
fwait
movsb
pop
das
jle
scas
jb
ss
inc
pop
sub
push
sbb
inc
imul
iret
aad
inc
scas
mulb
sbb
pop
dec
icebp
iret
test
pop
nop
pop
aam
sbb
push
outsl
cmp
ret
xchg
shl
cmp
bound
gs
push
inc
inc
mov
imul
in
cmc
nop
outsl
mov
orb
mov
scas
mov
mov
pop
add
cmp
jae
mov
jecxz
push
push
fwait
xchg
cmp
fidivl
add
cmpsb
insb
adc
sub
jns
jno
adc
stc
lret
xchg
jp
inc
sbb
scas
mov
test
lret
mov
cmpsl
out
pop
jo
xchg
xor
inc
cmp
ret
dec
xlat
lcall
push
add
or
jae
ds
mov
pop
xor
fwait
movsb
pop
repz
bnd
lahf
inc
pop
inc
xchg
cmpl
add
dec
fistpl
and
push
ficoml
lret
xchg
mov
pushf
add
dec
push
fstpl
jge
pop
dec
imul
xorb
jae
pushf
add
and
push
movsb
dec
push
or
iret
or
push
hlt
mov
mov
mov
jbe
test
aam
mov
cmp
decl
add
inc
sbb
iret
mov
jae
mov
test
test
lcall
daa
lahf
iret
push
hlt
mov
sarb
shll
dec
xor
jnp
xor
mov
xlat
adc
and
call
cmpsb
xchg
mov
push
jbe
push
pop
mov
add
repnz
int3
fmuls
jnp
push
mov
stos
inc
inc
inc
pop
push
icebp
test
mov
xchg
dec
push
pushf
cmp
add
push
fcomip
cmp
and
sti
add
mov
gs
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
xor
imul
fwait
lea
mov
inc
adc
sub
lahf
push
or
int
imul
push
sub
jge
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
sub
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
lods
jmp
jae
test
mov
push
jnp
xchg
test
add
hlt
movsb
lret
xchg
or
pop
inc
sub
or
data16
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
iret
or
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
out
cmpsb
inc
cmpsl
fstp
and
mov
enter
sbb
addl
shrl
fmuls
in
and
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
nop
inc
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
dec
dec
enter
cli
movsl
addr16
jmp
fbstp
xlat
rclb
in
cmp
lcall
into
mov
xor
sbb
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
in
mov
dec
and
cmp
hlt
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
and
fucomip
jl
subl
imul
bound
loop
ret
mov
add
dec
inc
cmp
push
hlt
sub
push
sbb
nop
xlat
push
mov
jmp
orl
mov
and
sbb
xorl
pop
rcr
xor
rcrl
dec
pop
out
cltd
adc
test
mov
mov
xchg
int3
test
jns
dec
ret
or
dec
lods
fidivs
aad
mov
aad
jmp
fxch
and
es
or
sarb
clc
jb
mov
jb,pt
xor
adc
out
or
mov
xchg
and
fidivrs
jnp
sbb
sbb
xchg
xchg
sti
and
sbb
insl
mov
dec
and
cmp
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
orl
cmpl
xor
mov
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
inc
in
mov
insb
imul
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
inc
lcall
movb
inc
pop
mov
mov
sub
pop
push
dec
lret
mov
sti
test
stos
pusha
fisubrl
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
int
jmp
mov
fwait
mov
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
add
repz
ret
loopne
dec
pop
inc
mov
repz
sbb
and
lahf
lret
jecxz
gs
nop
enter
int
jge
dec
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
aad
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
cmp
or
jno
lds
xchg
inc
sbb
in
movsl
inc
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
dec
dec
add
pop
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
mov
mov
sbb
popf
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
xchg
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
adc
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xchg
inc
fwait
add
dec
rolb
into
bound
adc
or
pop
inc
test
or
nop
dec
enter
xchg
out
scas
fldt
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
ret
push
push
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
cmp
mov
jae
mov
fmull
cmp
add
in
xor
pushf
dec
and
xchg
clc
lret
fsubr
test
xchg
leave
pusha
fsubrl
cmpb
ljmp
push
sbb
cld
xor
mov
movsl
xchg
stos
lds
mov
or
mov
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
inc
sbb
sbb
test
scas
iret
loop
xor
imul
dec
dec
leave
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
ret
mov
loope
scas
in
sbb
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
jne
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
cmp
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
ljmp
mov
leave
adc
sbb
sti
and
dec
popa
sbb
andl
jns
sub
inc
cwtl
test
xchg
cmpsl
mov
ret
ret
sbb
mov
stc
insl
lsl
call
dec
leave
mov
in
mov
fsubrl
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
rorl
shll
fisubrl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
lods
movsl
mov
mov
stos
mov
ja
pop
test
test
inc
mov
sub
mov
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
lret
sbbl
jge
subl
adc
sub
push
inc
or
test
fcoms
cmp
and
pushf
inc
sbb
scas
mov
ret
test
stos
int
enter
push
adc
add
mov
dec
orl
mov
pop
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
dec
fildll
movsb
mov
mov
bound
dec
iret
sub
lds
or
cmp
inc
lcall
gs
lods
xor
mov
xchg
stc
mov
mov
ror
lea
add
arpl
or
out
sub
popl
mov
adc
popf
add
push
into
and
mov
pop
fidivrl
jnp
stos
gs
mov
mov
mov
add
sti
in
mov
or
or
insb
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
or
adc
leave
ret
sahf
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
xchg
lods
mov
mov
xchg
test
dec
mov
or
dec
iret
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
or
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
lea
clc
and
and
test
sub
fwait
inc
fisttps
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
lret
std
fidivl
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
cmpsb
jmp
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
sbb
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
push
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
fsub
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
mov
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
lds
lret
lahf
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
xorb
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
ds
xor
leave
loop
and
sub
inc
sbb
mov
or
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
dec
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
test
cmpl
shl
lock
fiadds
dec
inc
push
addb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
inc
loop
xchg
dec
hlt
sub
or
cmp
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
stos
shr
inc
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
cltd
pop
enter
mov
data16
int
inc
sbb
pop
inc
test
inc
int3
or
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
lret
or
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
cli
popf
scas
inc
movsl
fcompl
xchg
inc
or
jnp
add
push
aas
scas
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubrs
movsl
mov
daa
loop
hlt
xor
mov
in
mov
popf
adcl
push
lods
mov
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
lret
inc
sub
lret
pop
ljmp
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shrb
andl
mov
mov
and
xchg
jp
dec
pop
test
sub
cmp
inc
out
mov
ret
fld1
std
jge
xchg
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
jmp
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
pushf
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
inc
int
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
leave
or
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
adc
sub
xchg
mov
clc
inc
and
call
cmp
cltd
enter
pop
int3
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jno
mov
xor
ljmp
cmc
mov
loopne
xchg
pop
push
add
lret
lock
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
dec
or
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
repnz
cmpsl
mov
fwait
lea
mov
inc
adc
sub
sbb
or
int
imul
push
sub
jne
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
sub
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
lods
jmp
jae
test
mov
push
jnp
xchg
test
add
hlt
movsb
lret
xchg
or
pop
inc
sub
or
data16
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
iret
or
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
out
cmpsb
inc
cmpsl
fstp
jo
mov
mov
test
enter
sbb
or
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
nop
inc
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
dec
dec
enter
cli
movsl
addr16
jmp
fbstp
xlat
rclb
in
cmp
lcall
into
mov
xor
sbb
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
and
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
or
fucomip
jl
xorl
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
inc
in
mov
insb
imul
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
inc
lcall
movb
inc
pop
mov
mov
sub
pop
push
dec
lret
mov
sti
test
stos
pusha
fisubrl
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
int
jmp
mov
fwait
mov
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
pusha
call
cmp
pop
inc
xchg
jmp
clc
sbb
and
gs
pop
enter
int
pushf
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
aad
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
cmp
or
jno
lds
xchg
inc
sbb
in
movsl
inc
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
dec
dec
add
pop
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
mov
mov
sbb
popf
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
jp
mov
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
dec
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xchg
inc
fwait
add
dec
rolb
into
bound
adc
or
pop
inc
test
or
nop
dec
enter
xchg
out
scas
fldt
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
ret
push
push
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
sbb
pop
insl
mov
repz
mov
add
or
cwtl
sub
das
mov
cmpsl
lret
fsubr
test
xchg
leave
pusha
fldcw
cmpb
ljmp
push
sbb
cld
xor
mov
movsl
xchg
stos
lds
mov
or
mov
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
inc
sbb
sbb
test
scas
iret
loop
xor
imul
dec
dec
leave
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
ret
mov
loope
scas
in
sbb
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
sub
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
ljmp
mov
leave
adc
sbb
sti
and
dec
popa
sbb
andl
jns
sub
inc
cwtl
test
xchg
cmpsl
mov
ret
ret
sbb
mov
stc
insl
lsl
call
dec
leave
mov
in
mov
fsubrl
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
rorl
shll
fisubrl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
movsl
mov
mov
stos
mov
ja
dec
test
test
inc
mov
aam
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
lret
sbbl
jge
subl
adc
sub
push
inc
or
test
fcoms
cmp
and
pushf
inc
sbb
scas
mov
ret
test
stos
int
enter
push
adc
add
mov
dec
orl
mov
pop
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
out
fildll
std
mov
mov
bound
dec
call
shlb
or
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
lea
add
arpl
or
out
sub
popl
mov
adc
popf
add
push
into
and
mov
pop
fidivrl
jnp
stos
gs
mov
mov
mov
add
sti
in
mov
or
or
insb
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
or
adc
leave
ret
sahf
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
jb
mov
mov
xchg
test
dec
mov
pop
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
or
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
lea
clc
and
and
test
sub
fwait
inc
fisttps
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
lret
std
fidivl
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
cmpsb
jmp
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
pusha
test
xor
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
push
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
fsub
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
mov
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
lds
lret
lahf
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
addb
stos
inc
movsb
pop
sbb
jno
imull
cltd
push
adc
ret
outsb
pop
dec
pop
jmp
xor
leave
loop
and
sub
inc
sbb
mov
pop
xchg
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
dec
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
test
cmpl
shl
lock
fiadds
dec
inc
push
addb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
push
loop
xchg
dec
sbb
adc
pusha
sarb
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
stos
shr
inc
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
cltd
pop
enter
mov
data16
int
inc
sbb
pop
inc
test
inc
int3
or
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
lret
or
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
dec
popf
scas
inc
movsl
fcompl
xchg
orl
aas
inc
add
jbe
dec
push
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubrs
movsl
mov
daa
loop
hlt
xor
mov
in
mov
popf
adcl
push
lods
mov
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
lret
inc
sub
lret
pop
ljmp
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
sarb
andl
mov
mov
and
xchg
jp
dec
cmp
push
sub
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
jmp
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
pushf
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
inc
int
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
leave
or
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
gs
mov
sub
dec
inc
and
call
cmp
cltd
enter
sub
lea
adc
add
mov
fucomip
mov
cmc
mov
and
jle
mov
xor
ljmp
cmc
mov
loopne
xchg
pop
push
add
lret
lock
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
dec
or
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
movsb
inc
daa
popf
sti
or
imul
lea
mov
inc
adc
sub
or
dec
mov
int
imul
push
sub
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
sub
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
lods
jmp
jae
test
mov
push
jnp
xchg
test
add
hlt
movsb
lret
xchg
or
pop
inc
sub
or
data16
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
iret
or
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
test
fisttpl
out
mov
enter
sbb
fiadds
inc
sbb
in
and
xchg
into
pop
stos
pop
lods
mov
mov
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
nop
inc
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
dec
dec
enter
cli
movsl
addr16
jmp
fbstp
xlat
rclb
in
cmp
lcall
into
mov
xor
sbb
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
insl
mov
dec
and
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
subl
add
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
inc
in
mov
insb
imul
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
inc
lcall
movb
inc
pop
mov
mov
sub
pop
push
dec
lret
mov
sti
test
stos
pusha
fisubrl
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
int
jmp
mov
fwait
mov
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
test
repz
ret
loopne
dec
pop
inc
test
repz
sbb
and
lret
jecxz
gs
or
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
aad
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
cmp
or
jno
lds
xchg
inc
sbb
in
movsl
inc
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
dec
dec
add
pop
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
mov
mov
sbb
popf
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
dec
and
mov
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
lret
push
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xchg
inc
fwait
add
dec
rolb
into
bound
adc
or
pop
inc
test
or
nop
dec
enter
xchg
out
scas
fldt
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
ret
push
push
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
mov
ficomps
mov
xor
ret
mov
add
xchg
cwtl
sub
das
pop
pushf
dec
and
xchg
fmul
pop
stos
fsubr
test
xchg
leave
pusha
fisubrl
cmpb
ljmp
push
sbb
cld
xor
mov
movsl
xchg
stos
lds
mov
or
mov
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
inc
sbb
sbb
test
scas
iret
loop
xor
imul
dec
dec
leave
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
ret
mov
loope
scas
in
sbb
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
cld
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
xchg
mov
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
ljmp
mov
leave
adc
sbb
sti
and
dec
popa
sbb
andl
jns
sub
inc
cwtl
test
xchg
cmpsl
mov
ret
ret
sbb
mov
stc
insl
lsl
call
dec
leave
mov
in
mov
fsubrl
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
rorl
shll
fisubrl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
movsl
mov
mov
stos
mov
ja
jmp
shrl
inc
mov
jb
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
lret
sbbl
jge
subl
adc
sub
push
inc
or
test
fcoms
cmp
and
pushf
inc
sbb
scas
mov
ret
test
stos
int
enter
push
adc
add
mov
dec
orl
mov
pop
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
pop
fildll
lret
lods
dec
pop
mov
bound
dec
sti
sub
add
or
cmp
inc
lcall
gs
lods
xor
mov
xchg
stc
mov
mov
ror
lea
add
arpl
or
out
sub
popl
mov
adc
popf
add
push
into
and
mov
pop
fidivrl
jnp
stos
gs
mov
mov
mov
add
sti
in
mov
or
or
insb
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
or
adc
leave
ret
sahf
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
add
fisubrl
jo
push
dec
mov
int3
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
or
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
lea
clc
and
and
test
sub
fwait
inc
fisttps
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
lret
std
fidivl
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
cmpsb
jmp
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
ljmp
mov
push
dec
test
push
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
push
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
fsub
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
mov
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
lds
lret
lahf
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
xor
stos
inc
movsb
pop
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
sbb
bnd
int3
xor
leave
loop
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
dec
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
test
cmpl
shl
lock
fiadds
dec
inc
push
addb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
loop
xchg
dec
and
adc
pusha
sarb
sub
push
mov
rclb
mov
movsb
cli
xor
cs
pop
into
call
ficoml
xor
dec
xchg
test
push
or
inc
cmpb
jecxz
xchg
ret
push
xchg
sti
mov
stos
shr
or
lea
pop
movsl
imul
mov
fmuls
movl
call
jbe
adc
leave
mov
sbb
mov
mov
rcl
mov
bnd
loope
jne
std
xor
fnstenv
mov
push
cmp
adc
call
mov
or
xor
lock
test
add
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
je
jo
jb
dec
mov
adc
pusha
sarb
sub
push
mov
rclb
mov
das
xchg
mov
sbb
mov
fnstcw
pop
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
stos
shr
inc
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
cltd
pop
enter
mov
data16
int
inc
sbb
pop
inc
test
inc
int3
or
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
lret
or
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
ficompl
pop
dec
xchg
or
push
add
jbe
dec
sub
sbb
aas
sub
mov
ret
and
push
cmpsl
ret
out
cmpl
lea
fsubrs
movsl
mov
daa
loop
hlt
xor
mov
in
mov
popf
adcl
push
lods
mov
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
lret
inc
sub
lret
pop
ljmp
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
sarb
mov
add
xchg
sbb
add
adc
test
sub
cmp
sbb
xlat
ret
fld1
std
jge
push
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
jmp
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
pushf
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
inc
int
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
leave
or
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
adcb
pop
sub
add
lahf
jle
dec
and
jb
js
cmp
inc
addr16
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
add
sbbl
mov
int
cmp
mov
mov
jns
ds
es
push
fwait
jecxz
pop
mov
or
mov
adc
stos
inc
stos
fsts
mov
cwtl
lret
movsl
dec
rcrb
mov
jge
les
mov
shrb
adc
mov
sub
push
sbb
inc
cld
cmc
mov
cwtl
or
rcr
adc
leave
xchg
fwait
adc
cmp
jns
mov
push
js
jb
lods
inc
inc
pushf
dec
outsl
loopne
mov
pop
jmp
out
inc
fwait
ss
repz
nop
xchg
mov
mov
test
mov
mov
inc
cmpsb
pop
fwait
aad
mov
sub
popa
inc
and
call
cmp
cltd
enter
ror
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
cmc
pop
mov
xor
ljmp
cmc
mov
loopne
xchg
pop
push
add
lret
lock
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
dec
or
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
inc
push
or
int
imul
push
sub
icebp
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
sub
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
lods
jmp
jae
test
mov
push
jnp
xchg
test
add
hlt
movsb
lret
xchg
or
pop
inc
sub
or
data16
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
iret
or
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
ret
lea
pop
out
mov
enter
sbb
dec
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
nop
inc
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
dec
dec
enter
cli
movsl
addr16
jmp
fbstp
xlat
rclb
in
cmp
lcall
into
mov
xor
sbb
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
mov
mov
in
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
subl
xorl
les
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
inc
in
mov
insb
imul
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
inc
lcall
movb
inc
pop
mov
mov
sub
pop
push
dec
lret
mov
sti
test
stos
pusha
fisubrl
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
int
jmp
mov
fwait
mov
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
test
repz
ret
loopne
dec
pop
inc
test
in
and
lahf
lret
jecxz
gs
ror
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
aad
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
cmp
or
jno
lds
xchg
inc
sbb
in
movsl
inc
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
dec
dec
add
pop
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
mov
mov
sbb
popf
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
xchg
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
mov
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xchg
inc
fwait
add
dec
rolb
into
bound
adc
or
pop
inc
test
or
nop
dec
enter
xchg
out
scas
fldt
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
ret
push
push
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
or
pop
jns
mov
xchg
mov
mov
add
ds
cwtl
sub
das
pushf
pushf
dec
and
xchg
vminss
mov
sbb
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
movsl
xchg
stos
lds
mov
or
mov
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
inc
sbb
sbb
test
scas
iret
loop
xor
imul
dec
dec
leave
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
ret
mov
loope
scas
in
sbb
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
in
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
fmul
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
ljmp
mov
leave
adc
sbb
sti
and
dec
popa
sbb
andl
jns
sub
inc
cwtl
test
xchg
cmpsl
mov
ret
ret
sbb
mov
stc
insl
lsl
call
dec
leave
mov
in
mov
fsubrl
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
rorl
shll
fisubrl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
repnz
mov
mov
stos
mov
ja
push
test
test
inc
mov
adc
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
lret
sbbl
jge
subl
adc
sub
push
inc
or
test
fcoms
cmp
and
pushf
inc
sbb
scas
mov
ret
test
stos
int
enter
push
adc
add
mov
dec
orl
mov
pop
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
pop
fildll
pop
mov
mov
bound
dec
test
xchg
dec
inc
shlb
or
imul
nop
xor
and
cltd
lods
xor
mov
xchg
stc
mov
mov
ror
lea
add
arpl
or
out
sub
popl
mov
adc
popf
add
push
into
and
mov
pop
fidivrl
jnp
stos
gs
mov
mov
mov
add
sti
in
mov
or
or
insb
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
or
adc
leave
ret
sahf
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
lods
mov
mov
xchg
test
dec
mov
insl
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
or
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
lea
clc
and
and
test
sub
fwait
inc
fisttps
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
lret
std
fidivl
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
cmpsb
jmp
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
test
xor
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
cltd
push
dec
test
dec
aam
fcoms
and
xchg
jbe
pop
jae
inc
insl
icebp
out
xchg
add
mov
arpl
or
add
mov
repz
repz
sub
sbb
sub
out
jne
cmp
fmull
negl
inc
fwait
clc
mov
mov
into
sbb
xlat
mov
aas
mov
ret
fcmovne
mov
fisubl
mov
lock
jbe
mov
ss
xor
iret
mov
sbb
scas
sub
or
mov
lret
sub
sbb
dec
or
bound
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
lret
push
sbb
pop
fucomi
jge
roll
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
push
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
fsub
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
mov
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
lds
lret
lahf
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
cmpb
sbb
jno
mov
cltd
push
adc
ret
outsb
pop
dec
int3
jmp
xor
fwait
leave
loop
and
sub
inc
sbb
mov
ja
ret
pop
mov
cmp
cmp
aad
aas
out
xor
cmpsl
mov
pop
fdivrl
ficoml
xor
dec
xchg
test
mov
xchg
test
lea
rcl
push
xor
mov
lcall
mov
xchg
mov
hlt
xor
jns
add
xor
add
lcall
or
add
xchg
xchg
sbb
fs
xchg
push
stc
adc
lret
lea
lods
sbb
xor
cwtl
nop
mov
test
add
or
jbe
and
stos
inc
movsb
pop
sbb
fwait
lods
mov
mov
push
adc
pop
dec
clc
jmp
xor
leave
loop
and
sub
inc
sbb
mov
pop
xchg
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
dec
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
test
cmpl
shl
lock
fiadds
dec
inc
push
addb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
loopw
xchg
dec
aas
sub
or
cmp
sub
push
mov
rcrb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
stos
shr
inc
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
cltd
pop
enter
mov
data16
int
inc
sbb
pop
inc
test
inc
int3
or
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
lret
or
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
or
pop
xchg
stos
mov
adc
xlat
add
jbe
dec
leave
push
aas
lcall
cmp
pop
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
in
mov
popf
adcl
push
lods
mov
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
lret
inc
sub
lret
pop
ljmp
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
ror
andl
mov
mov
and
xchg
jp
dec
push
test
sub
cmp
sbb
pop
ret
fld1
std
jge
loop
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
jmp
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
pushf
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
inc
int
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
leave
or
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
arpl
sub
sub
adc
lahf
jle
dec
xchg
call
cmp
inc
pop
int3
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
repnz
mov
xor
ljmp
cmc
mov
loopne
xchg
pop
push
add
lret
lock
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
dec
or
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
or
imul
mov
inc
adc
sub
mov
or
int
imul
push
sub
jb
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
sub
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
lods
jmp
jae
test
mov
push
jnp
xchg
test
add
hlt
movsb
lret
xchg
or
pop
inc
sub
or
data16
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
iret
or
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
pop
lea
std
out
mov
enter
sbb
jns
shr
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
iret
loope
add
sti
mov
pusha
sbb
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
nop
inc
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
dec
dec
enter
cli
movsl
addr16
jmp
fbstp
xlat
rclb
in
cmp
lcall
into
mov
xor
sbb
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
jecxz
mov
jecxz
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
xorl
xor
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
inc
in
mov
insb
imul
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
inc
lcall
movb
inc
pop
mov
mov
sub
pop
push
dec
lret
mov
sti
test
stos
pusha
fisubrl
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
int
jmp
mov
fwait
mov
pop
repz
in
mov
repz
and
sub
add
pop
sbb
mov
jb
repz
ret
loopne
dec
pop
inc
imul
and
lahf
lret
jecxz
gs
mov
int
sbb
inc
lds
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
aad
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
cmp
or
jno
lds
xchg
inc
sbb
in
movsl
inc
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
dec
dec
add
pop
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
mov
mov
sbb
popf
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
fcos
mov
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
lret
push
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xchg
inc
fwait
add
dec
rolb
into
bound
adc
or
pop
inc
test
or
nop
dec
enter
xchg
out
scas
fldt
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
ret
push
push
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
pop
mov
pop
xchg
mov
cltd
mov
mov
add
sub
cwtl
sub
das
out
pushf
dec
and
xchg
test
pop
stos
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
movsl
xchg
stos
lds
mov
or
mov
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
inc
sbb
sbb
test
scas
iret
loop
xor
imul
dec
dec
leave
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
ret
mov
loope
scas
in
sbb
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
mov
pop
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
xor
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
ljmp
mov
leave
adc
sbb
sti
and
dec
popa
sbb
andl
jns
sub
inc
cwtl
test
xchg
cmpsl
mov
ret
ret
sbb
mov
stc
insl
lsl
call
dec
leave
mov
in
mov
fsubrl
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
rorl
shll
fisubrl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
xchg
lcall
sub
test
test
inc
mov
jle
jae
cmp
sub
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
lret
sbbl
jge
subl
adc
sub
push
inc
or
test
fcoms
cmp
and
pushf
inc
sbb
scas
mov
ret
test
stos
int
enter
push
adc
add
mov
dec
orl
mov
pop
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
lock
sbb
mov
bound
dec
ljmp
xchg
dec
inc
shlb
or
imul
nop
cmp
mov
lods
xor
mov
xchg
stc
mov
mov
ror
lea
add
arpl
or
out
sub
popl
mov
adc
popf
add
push
into
and
mov
pop
fidivrl
jnp
stos
gs
mov
mov
mov
add
sti
in
mov
or
or
insb
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
or
adc
leave
ret
sahf
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
outsb
lods
mov
mov
xchg
test
dec
mov
mov
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
or
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
lea
clc
and
and
test
sub
fwait
inc
fisttps
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
lret
std
fidivl
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
cmpsb
jmp
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
xor
sbb
mov
fucomi
jge
rcrl
mov
andl
addl
call
test
rorb
stc
mov
adc
out
inc
insl
sti
imul
outsb
push
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
fsub
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
mov
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
lds
lret
lahf
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
sbbb
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
dec
jmp
xor
fwait
leave
loop
and
sub
inc
sbb
mov
xchg
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
dec
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
test
cmpl
shl
lock
fiadds
dec
inc
push
addb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
ret
loop
xchg
dec
fisubrl
adc
pusha
sarb
sub
push
mov
rcrb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
stos
shr
inc
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
cltd
pop
enter
mov
data16
int
inc
sbb
pop
inc
test
inc
int3
or
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
lret
or
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
gs
scas
inc
movsl
fcompl
xchg
pop
or
pop
add
jbe
dec
pop
push
aas
es
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
in
mov
popf
adcl
push
lods
mov
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
lret
inc
sub
lret
pop
ljmp
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rcl
andl
mov
mov
and
xchg
jp
dec
mov
fdivrs
loope
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
jmp
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
pushf
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
inc
int
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
leave
or
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
jo
mov
sub
in
and
call
cmp
inc
fcmovne
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
add
sbbl
mov
int
cmp
mov
mov
jns
ds
es
push
fwait
jecxz
pop
mov
or
mov
adc
stos
inc
stos
fsts
mov
cwtl
lret
movsl
dec
rcrb
mov
jge
les
mov
shrb
adc
mov
sub
push
sbb
inc
cld
cmc
mov
cwtl
or
rcr
adc
leave
xchg
fwait
adc
cmp
jns
mov
push
js
jb
lods
inc
inc
pushf
dec
outsl
loopne
mov
pop
jmp
out
inc
fwait
ss
repz
nop
xchg
mov
mov
test
mov
mov
inc
cmpsb
pop
fwait
or
sub
sub
incb
lahf
jle
dec
xlat
call
cmp
testl
sbb
cltd
lock
add
int
jle
fucomip
mov
cmc
mov
and
je
mov
xor
ljmp
cmc
mov
loopne
xchg
pop
push
add
lret
lock
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
dec
or
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
rcrb
or
int
imul
push
sub
lock
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
sub
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
lods
jmp
jae
test
mov
push
jnp
xchg
test
add
hlt
movsb
lret
xchg
or
pop
inc
sub
or
data16
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
iret
or
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
cmpsb
lea
cs
mov
enter
sbb
adc
inc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
nop
inc
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
dec
dec
enter
cli
movsl
addr16
jmp
fbstp
xlat
rclb
in
cmp
lcall
into
mov
xor
sbb
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
fdivl
cmp
hlt
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
adcl
adcl
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
inc
in
mov
insb
imul
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
inc
lcall
movb
inc
pop
mov
mov
sub
pop
push
dec
lret
mov
sti
test
stos
pusha
fisubrl
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
int
jmp
mov
fwait
mov
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
out
repz
ret
loopne
dec
pop
inc
in
jmp
clc
sbb
and
gs
mov
int
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
aad
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
cmp
or
jno
lds
xchg
inc
sbb
in
movsl
inc
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
dec
dec
add
pop
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
mov
mov
sbb
popf
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
mov
cmc
push
inc
sbb
push
sbb
sub
mov
lock
inc
insl
fwait
adc
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xchg
inc
fwait
add
dec
rolb
into
bound
adc
or
pop
inc
test
or
nop
dec
enter
xchg
out
scas
fldt
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
ret
push
push
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
les
pop
inc
mov
clc
mov
mov
add
mov
xor
pushf
dec
and
xchg
sbb
pop
stos
fsubr
test
xchg
leave
pusha
fisubrl
cmpb
ljmp
push
sbb
cld
xor
mov
movsl
xchg
stos
lds
mov
or
mov
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
inc
sbb
sbb
test
scas
iret
loop
xor
imul
dec
dec
leave
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
ret
mov
loope
scas
in
sbb
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
pop
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
mov
jge
mov
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
ljmp
mov
leave
adc
sbb
sti
and
dec
popa
sbb
andl
jns
sub
inc
cwtl
test
xchg
cmpsl
mov
ret
ret
sbb
mov
stc
insl
lsl
call
dec
leave
mov
in
mov
fsubrl
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
rorl
shll
fisubrl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
cwtl
movsl
mov
mov
stos
mov
ja
test
push
cmp
inc
mov
arpl
jae
cmp
sub
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
lret
sbbl
jge
subl
adc
sub
push
inc
or
test
fcoms
cmp
and
pushf
inc
sbb
scas
mov
ret
test
stos
int
enter
push
adc
add
mov
dec
orl
mov
pop
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
aam
scas
mov
imull
mov
mov
bound
dec
jmp
shlb
or
imul
nop
xor
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
lea
add
arpl
or
out
sub
popl
mov
adc
popf
add
push
into
and
mov
pop
fidivrl
jnp
stos
gs
mov
mov
mov
add
sti
in
mov
or
or
insb
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
or
adc
leave
ret
sahf
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
sbb
cmpsl
xchg
test
dec
mov
mov
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
or
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
lea
clc
and
and
test
sub
fwait
inc
fisttps
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
lret
std
fidivl
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
cmpsb
jmp
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
xor
shrb
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
push
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
fsub
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
mov
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
lds
lret
lahf
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
and
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
dec
jmp
xor
and
sub
inc
sbb
mov
ja
ret
pop
mov
cmp
cmp
aad
aas
out
xor
cmpsl
mov
pop
fdivrl
ficoml
xor
dec
xchg
test
mov
xchg
test
lea
rcl
push
xor
mov
lcall
mov
xchg
mov
hlt
xor
jns
add
xor
add
lcall
or
add
xchg
xchg
sbb
fs
xchg
push
stc
adc
lret
lea
lods
sbb
xor
cwtl
nop
mov
test
add
or
jbe
andb
sbb
jno
cmp
adc
ret
outsb
pop
dec
fucomp
bnd
int3
xor
leave
loop
and
sub
inc
sbb
mov
test
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
dec
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
test
cmpl
shl
lock
fiadds
dec
inc
push
addb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
loop,pn
xchg
dec
stos
sub
or
cmp
sub
push
mov
rclb
mov
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
stos
shr
inc
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
cltd
pop
enter
mov
data16
int
inc
sbb
pop
inc
test
inc
int3
or
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
lret
or
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
int
scas
inc
movsl
fcompl
xchg
mov
addl
add
push
aas
inc
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubr
push
movsl
mov
daa
loop
hlt
xor
mov
in
mov
popf
adcl
push
lods
mov
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
lret
inc
sub
lret
pop
ljmp
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
ror
andl
mov
mov
and
xchg
jp
dec
cmc
test
sub
cmp
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
jmp
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
pushf
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
inc
int
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
leave
or
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
rcll
sub
sub
mov
cmovge
fdivrl
add
popl
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jo
mov
xor
ljmp
cmc
mov
loopne
xchg
pop
push
add
lret
lock
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
dec
or
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
or
imul
fwait
lea
mov
inc
adc
sub
jle
or
int
imul
push
sub
jbe
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
sub
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
lods
jmp
jae
test
mov
push
jnp
xchg
test
add
hlt
movsb
lret
xchg
or
pop
inc
sub
or
data16
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
iret
or
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
lahf
lea
cmp
mov
mov
test
enter
sbb
leave
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
pop
xchg
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
nop
inc
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
dec
dec
enter
cli
movsl
addr16
jmp
fbstp
xlat
rclb
in
cmp
lcall
into
mov
xor
sbb
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
dec
mov
dec
and
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
adc
fucomip
jl
adcl
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
inc
in
mov
insb
imul
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
inc
lcall
movb
inc
pop
mov
mov
sub
pop
push
dec
lret
mov
sti
test
stos
pusha
fisubrl
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
int
jmp
mov
fwait
mov
pop
repz
in
mov
repz
and
sub
add
pop
sbb
jne
sub
repz
ret
loopne
dec
pop
inc
sub
repz
sbb
and
lahf
lret
jecxz
gs
or
int
xorb
dec
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
aad
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
cmp
or
jno
lds
xchg
inc
sbb
in
movsl
inc
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
dec
dec
add
pop
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
mov
mov
sbb
popf
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
sar
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
inc
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xchg
inc
fwait
add
dec
rolb
into
bound
adc
or
pop
inc
test
or
nop
dec
enter
xchg
out
scas
fldt
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
ret
push
push
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
mov
ficomps
mov
push
mov
mov
add
mov
xor
pushf
dec
and
xchg
jno
pop
stos
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
movsl
xchg
stos
lds
mov
or
mov
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
inc
sbb
sbb
test
scas
iret
loop
xor
imul
dec
dec
leave
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
ret
mov
loope
scas
in
sbb
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
pop
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
and
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
ljmp
mov
leave
adc
sbb
sti
and
dec
popa
sbb
andl
jns
sub
inc
cwtl
test
xchg
cmpsl
mov
ret
ret
sbb
mov
stc
insl
lsl
call
dec
leave
mov
in
mov
fsubrl
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
rorl
shll
fisubrl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
xlat
movsl
mov
mov
stos
mov
ja
xchg
test
test
inc
mov
sahf
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
lret
sbbl
jge
subl
adc
sub
push
inc
or
test
fcoms
cmp
and
pushf
inc
sbb
scas
mov
ret
test
stos
int
enter
push
adc
add
mov
dec
orl
mov
pop
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
leave
fildll
xor
mov
bound
dec
and
xchg
dec
inc
shlb
or
imul
nop
xor
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
lea
add
arpl
or
out
sub
popl
mov
adc
popf
add
push
into
and
mov
pop
fidivrl
jnp
stos
gs
mov
mov
mov
add
sti
in
mov
or
or
insb
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
or
adc
leave
ret
sahf
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
in
mov
mov
xchg
test
dec
mov
pusha
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
or
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
lea
clc
and
and
test
sub
fwait
inc
fisttps
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
lret
std
fidivl
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
cmpsb
jmp
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
stos
mov
stos
xchg
push
adc
push
dec
xchg
xor
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
push
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
fsub
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
mov
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
lds
lret
lahf
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
sbb
stos
inc
movsb
pop
sbb
jno
subl
cmp
pusha
mov
jmp
xor
leave
loop
and
sub
inc
sbb
mov
or
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
dec
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
test
cmpl
shl
lock
fiadds
dec
inc
push
addb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
and
jo
jb
dec
repnz
or
cmp
sub
push
mov
rcrb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
stos
shr
inc
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
cltd
pop
enter
mov
data16
int
inc
sbb
pop
inc
test
inc
int3
or
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
lret
or
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
rcrb
mov
jb
xchg
or
add
jbe
dec
add
sbb
aas
daa
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
in
mov
popf
adcl
push
lods
mov
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
lret
inc
sub
lret
pop
ljmp
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shrb
inc
es
mov
sbb
inc
and
xchg
jp
dec
mov
push
sub
cmp
sbb
popf
ret
fld1
std
jge
mov
lock
mov
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
jmp
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
pushf
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
inc
int
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
leave
or
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
adcl
inc
sub
mov
cmovge
call
cmp
cltd
enter
and
lea
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
cmc
pop
mov
xor
ljmp
cmc
mov
loopne
xchg
pop
push
add
lret
lock
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
dec
or
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
and
or
int
imul
push
sub
jne
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
sub
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
lods
jmp
jae
test
mov
push
jnp
xchg
test
add
hlt
movsb
lret
xchg
or
pop
inc
sub
or
data16
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
iret
or
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
mov
fstp
cmp
mov
mov
test
enter
sbb
jl
shr
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
iret
loope
add
sti
mov
pusha
sbb
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
nop
inc
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
dec
dec
enter
cli
movsl
addr16
jmp
fbstp
xlat
rclb
in
cmp
lcall
into
mov
xor
sbb
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
jp
mov
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
addl
jmp
mov
lahf
aam
xor
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
inc
in
mov
insb
imul
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
inc
lcall
movb
inc
pop
mov
mov
sub
pop
push
dec
lret
mov
sti
test
stos
pusha
fisubrl
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
int
jmp
mov
fwait
mov
pop
repz
in
mov
repz
and
sub
add
mov
xchg
idivl
dec
call
cmp
pop
inc
jb
repz
sbb
and
lret
jecxz
gs
in
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
aad
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
cmp
or
jno
lds
xchg
inc
sbb
in
movsl
inc
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
dec
dec
add
pop
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
mov
mov
sbb
popf
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
daa
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
aas
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xchg
inc
fwait
add
dec
rolb
into
bound
adc
or
pop
inc
test
or
nop
dec
enter
xchg
out
scas
fldt
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
ret
push
push
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
aam
mov
xchg
mov
mov
sbb
outsb
add
sub
cwtl
sub
das
imul
lret
fsubr
test
xchg
leave
pusha
push
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
movsl
xchg
stos
lds
mov
or
mov
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
inc
sbb
sbb
test
scas
iret
loop
xor
imul
dec
dec
leave
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
ret
mov
loope
scas
in
sbb
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
xchg
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
scas
dec
jge
jg
rorl
das
roll
lods
mov
jbe
xor
fld
pusha
mov
lret
rcll
lret
xor
mov
or
pop
xchg
mov
inc
sub
add
jo
pop
movsl
jp
mov
pop
xchg
mov
in
pop
fisubs
movb
mov
xor
cmpsl
clc
leave
pop
aam
dec
xorl
adc
sub
fildll
stos
cld
xor
je
arpl
lds
cmp
movsl
add
cltd
push
dec
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
loope
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
ljmp
mov
leave
adc
sbb
sti
and
dec
popa
sbb
andl
jns
sub
inc
cwtl
test
xchg
cmpsl
mov
ret
ret
sbb
mov
stc
insl
lsl
call
dec
leave
mov
in
mov
fsubrl
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
rorl
shll
fisubrl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
jo
mov
mov
stos
mov
ja
imul
fistps
inc
jb
jae
cmp
sub
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
lret
sbbl
jge
subl
adc
sub
push
inc
or
test
fcoms
cmp
and
pushf
inc
sbb
scas
mov
ret
test
stos
int
enter
push
adc
add
mov
dec
orl
mov
pop
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
ret
mov
imull
mov
mov
bound
dec
mov
xchg
dec
inc
shlb
or
imul
nop
mov
mov
lods
xor
mov
xchg
stc
mov
mov
ror
lea
add
arpl
or
out
sub
popl
mov
adc
popf
add
push
into
and
mov
pop
fidivrl
jnp
stos
gs
mov
mov
mov
add
sti
in
mov
or
or
insb
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
or
adc
leave
ret
sahf
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
imulb
fisubrl
xchg
test
dec
mov
cmp
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
or
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
lea
clc
and
and
test
sub
fwait
inc
fisttps
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
lret
std
fidivl
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
cmpsb
jmp
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
stos
mov
stos
xchg
push
adc
push
dec
ss
xor
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
push
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
fsub
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
mov
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
lds
lret
lahf
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
subb
stos
inc
movsb
pop
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
mov
int3
xor
leave
loop
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
dec
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
test
cmpl
shl
lock
fiadds
dec
inc
push
addb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
sbb
jo
jb
dec
sub
or
cmp
sub
push
mov
rclb
mov
das
xchg
mov
sbb
mov
fnstcw
pop
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
stos
shr
inc
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
cltd
pop
enter
mov
data16
int
inc
sbb
pop
inc
test
inc
int3
or
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
lret
or
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
mov
pop
lods
xchg
ja
addl
add
push
aas
ret
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
mov
cmp
and
or
cmp
aam
mov
mov
dec
cmp
cs
aam
sbb
push
cmc
mov
mov
mov
aam
fwait
pop
cmpsl
fists
or
inc
rcl
sahf
jb
insl
xchg
rcrb
mov
loopne
je
jno
dec
push
xchg
add
mov
iret
add
stos
ljmp
test
adc
xchg
cmp
stc
mov
enter
bound
or
mov
gs
imul
rcl
lcall
jb
mov
xor
inc
xor
fdecstp
js
pushf
popf
scas
inc
movsl
fcompl
xchg
scas
or
mov
add
push
aas
or
mov
ret
add
enter
cmpsl
ret
out
cmpl
lea
fsubr
push
movsl
mov
daa
loop
hlt
xor
mov
in
mov
popf
adcl
push
lods
mov
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
lret
inc
sub
lret
pop
ljmp
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shl
andl
mov
mov
and
xchg
jp
dec
ret
test
sub
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
pop
jne
jge
push
dec
test
sbb
mov
pop
cmp
call
ret
loopne
inc
adcb
in
xchg
jae
ret
xor
hlt
mov
inc
test
mov
mov
xchg
or
ret
inc
sub
add
js
jb
mov
mov
sbb
ss
sbb
test
pop
lret
insl
xchg
rcrl
lret
rcll
push
pop
jne
mov
sbb
pop
sub
mov
lds
in
inc
sbb
jecxz
sahf
sahf
xchg
cmp
js
jp
mov
mov
gs
pop
aaa
cwtl
rolb
mov
out
popl
negl
mov
and
xchg
jp
dec
sbb
cmp
inc
out
mov
ret
fld1
std
jge
jo
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
jmp
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
pushf
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
inc
int
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
leave
or
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
scas
xchg
mov
sub
mov
cmovge
cmp
cmp
enter
int3
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
cmc
pop
mov
xor
ljmp
cmc
mov
loopne
xchg
pop
push
add
lret
lock
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
dec
or
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
popf
sti
xchg
imul
mov
inc
adc
sub
hlt
push
or
int
imul
push
sub
jno
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
sub
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
lods
jmp
jae
test
mov
push
jnp
xchg
test
add
hlt
movsb
lret
xchg
or
pop
inc
sub
or
data16
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
iret
or
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
mov
cmpsb
inc
cmpsl
fstp
mul
mov
mov
test
enter
sbb
xchg
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
pop
xchg
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
nop
inc
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
dec
dec
enter
cli
movsl
addr16
jmp
fbstp
xlat
rclb
in
cmp
lcall
into
mov
xor
sbb
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
xorb
fwait
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
sbbl
jmp
mov
lahf
aam
xor
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
inc
in
mov
insb
imul
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
inc
lcall
movb
inc
pop
mov
mov
sub
pop
push
dec
lret
mov
sti
test
stos
pusha
fisubrl
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
int
jmp
mov
fwait
mov
pop
repz
in
mov
repz
and
sub
add
pop
sbb
mov
inc
sbb
lock
loopne
dec
pop
inc
push
jmp
clc
sbb
and
gs
ret
enter
int
or
inc
int
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
aad
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
cmp
or
jno
lds
xchg
inc
sbb
in
movsl
inc
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
dec
dec
add
pop
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
mov
mov
sbb
popf
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
jle
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xchg
inc
fwait
add
dec
rolb
into
bound
adc
or
pop
inc
test
or
nop
dec
enter
xchg
out
scas
fldt
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
ret
push
push
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
into
mov
pop
dec
mov
out
ret
mov
add
push
push
cwtl
sub
das
ficomps
jno
pop
stos
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
movsl
xchg
stos
lds
mov
or
mov
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
inc
sbb
sbb
test
scas
iret
loop
xor
imul
dec
dec
leave
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
ret
mov
loope
scas
in
sbb
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
js
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
cmp
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
ljmp
mov
leave
adc
sbb
sti
and
dec
popa
sbb
andl
jns
sub
inc
cwtl
test
xchg
cmpsl
mov
ret
ret
sbb
mov
stc
insl
lsl
call
dec
leave
mov
in
mov
fsubrl
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
rorl
shll
fisubrl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
sub
lcall
sub
cmp
inc
mov
xor
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
movsl
mov
jns
sahf
popf
enter
fld
pusha
mov
stos
in
fsincos
cltd
push
fwait
leave
loop
jnp
or
mov
sub
xchg
sub
nop
pop
js
xor
jo
xchg
adc
data16
push
fidivrl
jmp
xor
insl
or
pop
out
pop
cmpsb
fcomi
sti
jne
loope
enter
out
pop
fwait
xor
nop
ljmp
fsubrl
in
cmc
hlt
or
pop
pop
mov
xor
cwtl
aam
imull
mov
iret
cmpl
mov
lds
add
jo,pn
fsts
inc
inc
or
add
lcall
jne
inc
mov
pop
lcall
sub
test
test
inc
mov
fucomip
jae
cmp
sub
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
lret
sbbl
jge
subl
adc
sub
push
inc
or
test
fcoms
cmp
and
pushf
inc
sbb
scas
mov
ret
test
stos
int
enter
push
adc
add
mov
dec
orl
mov
pop
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
mov
imull
mov
mov
bound
dec
fisubrs
xchg
dec
inc
shlb
or
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
lea
add
arpl
or
out
sub
popl
mov
adc
popf
add
push
into
and
mov
pop
fidivrl
jnp
stos
gs
mov
mov
mov
add
sti
in
mov
or
or
insb
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
or
adc
leave
ret
sahf
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
mov
adc
xchg
test
dec
mov
mov
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
or
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
lea
clc
and
and
test
sub
fwait
inc
fisttps
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
lret
std
fidivl
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
cmpsb
jmp
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
add
xor
mov
jge
roll
mov
andl
addl
call
test
rorb
stc
mov
adc
out
inc
insl
sti
imul
outsb
push
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
fsub
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
mov
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
lds
lret
lahf
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
subb
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
mov
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
lea
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
dec
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
test
cmpl
shl
lock
fiadds
dec
inc
push
addb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
icebp
loop
xchg
dec
xlat
sub
or
cmp
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
stos
shr
inc
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
cltd
pop
enter
mov
data16
int
inc
sbb
pop
inc
test
inc
int3
or
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
lret
or
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
sbb
pop
nop
xchg
clc
or
std
add
jbe
dec
fisubrs
sbb
aas
negb
mov
ret
xchg
movsb
inc
sbb
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
in
mov
popf
adcl
push
lods
mov
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
lret
inc
sub
lret
pop
ljmp
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shl
andl
mov
mov
and
xchg
jp
dec
push
test
sub
cmp
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
and
xchg
sbb
sbb
in
aam
sbb
push
jne
les
pop
mov
pop
add
adc
ret
push
adc
fidivs
cmpsl
jecxz
push
cld
sub
mov
filds
inc
or
test
pop
jecxz
aam
mov
repnz
dec
pop
inc
les
mov
ja
push
in
mov
push
sub
fimull
mov
daa
sbb
xor
jo
and
add
pop
mov
scas
sbb
fmul
sbb
enter
mov
jnp
xor
sbb
cwtl
cmp
xchg
test
jnp
inc
mov
cwtl
rcrb
mov
sbb
jmp
sbb
fisubl
adc
test
sub
cmp
sbb
jg
fld1
std
jge
pop
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
jmp
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
pushf
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
inc
int
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
leave
or
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
mov
sub
xchg
mov
sbb
cmovge
jb
js
cmp
testl
sbb
cltd
addr16
add
mov
fucomip
mov
cmc
mov
and
jge
mov
xor
ljmp
cmc
mov
loopne
xchg
pop
push
add
lret
lock
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
dec
or
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
movsb
inc
daa
popf
sti
xchg
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
fs
or
int
imul
push
sub
lock
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
sub
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
lods
jmp
jae
test
mov
push
jnp
xchg
test
add
hlt
movsb
lret
xchg
or
pop
inc
sub
or
data16
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
iret
or
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
inc
lea
jo
mov
mov
test
enter
sbb
movl
fmuls
in
pop
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
nop
inc
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
dec
dec
enter
cli
movsl
addr16
jmp
fbstp
xlat
rclb
in
cmp
lcall
into
mov
xor
sbb
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
cs
dec
and
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
sbbl
jmp
mov
lahf
aam
xor
mov
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
inc
in
mov
insb
imul
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
inc
lcall
movb
inc
pop
mov
mov
sub
pop
push
dec
lret
mov
sti
test
stos
pusha
fisubrl
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
int
jmp
mov
fwait
mov
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
mov
repz
ret
loopne
dec
pop
inc
mov
in
and
gs
in
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
and
push
dec
cmp
fwait
mov
insb
push
clc
sub
rcr
inc
mov
imull
orl
pop
icebp
add
jl
jae
mov
adc
iret
xlat
cwtl
pop
jp
mov
push
jmp
adc
or
mov
cmp
loop
fwait
cltd
lret
or
das
mov
sbb
dec
scas
fcomip
cli
cmc
xor
jle
outsl
cltd
sti
add
push
mov
mov
stc
repnz
cmp
xchg
popf
aad
aas
mov
test
or
imul
and
es
fcoms
add
sbb
fdivl
lds
sbb
jne
popa
call
cmp
inc
clc
sbb
and
gs
lret
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
aad
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
cmp
or
jno
lds
xchg
inc
sbb
in
movsl
inc
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
dec
dec
add
pop
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
mov
mov
sbb
popf
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
cmp
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
xchg
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xchg
inc
fwait
add
dec
rolb
into
bound
adc
or
pop
inc
test
or
nop
dec
enter
xchg
out
scas
fldt
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
ret
push
push
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
or
pop
cmp
mov
xchg
mov
mov
add
jle
xor
pushf
dec
and
xchg
inc
lret
fsubr
test
xchg
leave
pusha
cmpb
ljmp
push
sbb
cld
xor
mov
movsl
xchg
stos
lds
mov
or
mov
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
inc
sbb
sbb
test
scas
iret
loop
xor
imul
dec
dec
leave
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
ret
mov
loope
scas
in
sbb
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
cwtl
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
push
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
ljmp
mov
leave
adc
sbb
sti
and
dec
popa
sbb
andl
jns
sub
inc
cwtl
test
xchg
cmpsl
mov
ret
ret
sbb
mov
stc
insl
lsl
call
dec
leave
mov
in
mov
fsubrl
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
rorl
shll
fisubrl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
lahf
movsl
mov
mov
stos
mov
ja
shrl
popa
inc
mov
int3
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
lret
sbbl
jge
subl
adc
sub
push
inc
or
test
fcoms
cmp
and
pushf
inc
sbb
scas
mov
ret
test
stos
int
enter
push
adc
add
mov
dec
orl
mov
pop
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
lahf
fildll
and
fldt
arpl
fisubrl
xchg
dec
inc
shlb
or
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
lea
add
arpl
or
out
sub
popl
mov
adc
popf
add
push
into
and
mov
pop
fidivrl
jnp
stos
gs
mov
mov
mov
add
sti
in
mov
or
or
insb
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
or
adc
leave
ret
sahf
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
push
lods
mov
mov
xchg
test
dec
mov
test
dec
cltd
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
or
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
lea
clc
and
and
test
sub
fwait
inc
fisttps
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
lret
std
fidivl
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
cmpsb
jmp
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
mov
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
push
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
fsub
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
mov
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
lds
lret
lahf
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
subb
inc
movsb
pop
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
pop
jmp
xor
leave
loop
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
dec
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
test
cmpl
shl
lock
fiadds
dec
inc
push
addb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
mov
jo
jb
dec
fisubrs
adc
pusha
sarb
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
stos
shr
inc
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
cltd
pop
enter
mov
data16
int
inc
sbb
pop
inc
test
inc
int3
or
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
lret
or
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
sub
pop
lds
stos
mov
addl
add
push
aas
pop
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
shlb
xchg
cwtl
or
and
rcrl
shr
test
sub
sahf
dec
mov
inc
add
jb
pop
mov
pop
inc
sahf
push
arpl
jmp
clc
add
sbb
in
xor
repnz
jo
jl
dec
jmp
mov
mov
iret
iret
inc
sbb
pop
sbb
mov
jns
aad
mov
cmp
lcall
pop
in
mov
testl
xchg
mov
xor
mov
clc
scas
subl
jle
pop
aad
xor
xchg
add
movsb
fisttps
fdecstp
js
cmp
pop
adc
stos
cld
or
xchg
add
jbe
dec
mov
sbb
aas
out
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubr
push
movsl
mov
daa
loop
hlt
xor
mov
in
mov
popf
adcl
push
lods
mov
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
lret
inc
sub
lret
pop
ljmp
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rclb
andl
mov
mov
and
xchg
jp
dec
inc
test
sub
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
jmp
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
pushf
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
inc
int
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
leave
or
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
les
sub
sub
sub
cmovge
call
cmp
cltd
enter
and
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jbe
mov
xor
ljmp
cmc
mov
loopne
xchg
pop
push
add
lret
lock
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
dec
or
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
popf
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
aad
or
int
imul
push
sub
idivl
and
repz
les
jl
ss
sbb
imul
fwait
jecxz
pop
mov
imul
xor
sbb
aas
xchg
mov
rcrb
mov
xchg
stos
push
test
xlat
test
pop
movsb
jmp
jae
mov
rorb
cmpsl
jno
dec
ret
sbb
fdivl
xchg
add
cld
push
iret
leave
rcll
mov
add
cmpsl
pop
insb
ja
ss
jno
pusha
jmp
stos
in
jno
cmc
mov
mov
add
test
xchg
mov
add
cmp
repnz
xor
xchg
xchg
inc
push
mov
or
mov
lock
sti
and
cmpsl
mov
fwait
lea
mov
inc
adc
sub
xor
dec
mov
fisubrs
popf
xchg
mov
push
sub
jne
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
sub
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
lods
jmp
jae
test
mov
push
jnp
xchg
test
add
hlt
movsb
lret
xchg
or
pop
inc
sub
or
data16
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
iret
or
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
orl
push
out
mov
enter
sbb
sub
inc
sbb
fmuls
in
sub
xchg
pop
stos
pop
lods
mov
mov
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
nop
inc
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
dec
dec
enter
cli
movsl
addr16
jmp
fbstp
xlat
rclb
in
cmp
lcall
into
mov
xor
sbb
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
mov
push
cmp
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
cmp
fucomip
jl
and
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
inc
in
mov
insb
imul
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
inc
lcall
movb
inc
pop
mov
mov
sub
pop
push
dec
lret
mov
sti
test
stos
pusha
fisubrl
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
int
jmp
mov
fwait
mov
pop
repz
in
mov
repz
and
sub
add
dec
mov
mov
ds
cmp
pop
inc
std
jmp
clc
sbb
and
gs
enter
int
scas
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
aad
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
cmp
or
jno
lds
xchg
inc
sbb
in
movsl
inc
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
dec
dec
add
pop
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
mov
mov
sbb
popf
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
arpl
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
dec
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xchg
inc
fwait
add
dec
rolb
into
bound
adc
or
pop
inc
test
or
nop
dec
enter
xchg
out
scas
fldt
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
ret
push
push
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
cmpb
mov
mov
cmp
sbb
lods
add
subl
sub
das
insl
pushf
dec
and
xchg
or
stos
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
movsl
xchg
stos
lds
mov
or
mov
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
inc
sbb
sbb
test
scas
iret
loop
xor
imul
dec
dec
leave
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
ret
mov
loope
scas
in
sbb
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
adc
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
sbb
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
ljmp
mov
leave
adc
sbb
sti
and
dec
popa
sbb
andl
jns
sub
inc
cwtl
test
xchg
cmpsl
mov
ret
ret
sbb
mov
stc
insl
lsl
call
dec
leave
mov
in
mov
fsubrl
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
rorl
shll
fisubrl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
movsl
movsl
mov
mov
stos
mov
ja
pushf
test
test
inc
mov
dec
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
add
cmp
fstl
cmp
lahf
scas
mov
jle
ficoms
loop
xchg
pop
repnz
int3
mov
adc
rcll
sbb
mov
mov
cmp
xchg
lahf
stc
scas
inc
cmpb
jnp
lret
adc
push
xchg
mov
cld
and
cmp
add
sbb
mov
or
ficoms
sbb
gs
pop
pop
pop
or
jns
xor
dec
out
mov
jmp
in
cmp
xor
jae
mov
cltd
je
cltd
nop
lock
aad
pushf
ret
pop
fidivs
inc
mov
pop
lcall
sub
test
test
inc
mov
jno
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
lret
sbbl
jge
subl
adc
sub
push
inc
or
test
fcoms
cmp
and
pushf
inc
sbb
scas
mov
ret
test
stos
int
enter
push
adc
add
mov
dec
orl
mov
pop
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
xchg
fildll
pop
mov
mov
bound
dec
and
xchg
dec
inc
shlb
or
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
lea
add
arpl
or
out
sub
popl
mov
adc
popf
add
push
into
and
mov
pop
fidivrl
jnp
stos
gs
mov
mov
mov
add
sti
in
mov
or
or
insb
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
or
adc
leave
ret
sahf
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
cmp
fcmovu
cmpsl
xchg
test
dec
mov
mov
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
or
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
lea
clc
and
and
test
sub
fwait
inc
fisttps
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
lret
std
fidivl
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
cmpsb
jmp
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
scas
test
xor
sbb
cmp
fucomi
jge
rcl
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
push
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
fsub
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
mov
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
lds
lret
lahf
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
addb
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
jecxz
bnd
int3
xor
leave
loop
and
sub
inc
sbb
mov
or
mov
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
dec
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
test
cmpl
shl
lock
fiadds
dec
inc
push
addb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
dec
loop
xchg
dec
pop
sub
or
cmp
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
stos
shr
inc
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
cltd
pop
enter
mov
data16
int
inc
sbb
pop
inc
test
inc
int3
or
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
lret
or
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
mov
fcompl
xchg
mov
addl
add
push
aas
icebp
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubrs
movsl
mov
daa
loop
hlt
xor
mov
in
mov
popf
adcl
push
lods
mov
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
lret
inc
sub
lret
pop
ljmp
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rcrb
andl
mov
mov
and
xchg
jp
dec
sbb
cmp
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
jmp
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
pushf
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
inc
int
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
leave
or
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
fs
mov
sub
or
lahf
jle
dec
imul
cmp
cmp
testl
sbb
cltd
mov
or
imul
fucomip
mov
cmc
mov
and
jae
mov
xor
ljmp
cmc
mov
loopne
xchg
pop
push
add
lret
lock
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
dec
or
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
jp
or
int
imul
push
sub
ja
mov
out
repz
pusha
or
xchg
mov
mov
sbb
mov
cltd
pop
push
lock
rcrl
or
mov
dec
and
mov
push
xor
mov
lods
ficoml
test
shrb
jne
lahf
pop
les
xlat
fnstsw
roll
jl
or
inc
imul
sub
xchg
hlt
icebp
mov
sbb
push
jge
in
ret
pop
push
jae
rcrl
pop
jo
jge
mov
pop
mov
lods
scas
inc
fsubrl
fsubs
add
inc
sbb
cmpsl
sub
xchg
xchg
aas
inc
mov
stc
mov
movsl
inc
push
mov
or
mov
lock
sti
and
imul
fwait
lea
mov
inc
adc
sub
repz
or
int
imul
push
sub
jb
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
sub
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
lods
jmp
jae
test
mov
push
jnp
xchg
test
add
hlt
movsb
lret
xchg
or
pop
inc
sub
or
data16
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
iret
or
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
xchg
lea
cli
out
mov
enter
sbb
sbb
inc
hlt
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
nop
inc
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
dec
dec
enter
cli
movsl
addr16
jmp
fbstp
xlat
rclb
in
cmp
lcall
into
mov
xor
sbb
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
bound
cmp
hlt
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
orl
jmp
mov
lahf
aam
xor
mov
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
inc
in
mov
insb
imul
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
inc
lcall
movb
inc
pop
mov
mov
sub
pop
push
dec
lret
mov
sti
test
stos
pusha
fisubrl
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
int
jmp
mov
fwait
mov
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
call
cmp
ret
loopne
dec
pop
inc
xor
repz
sbb
and
lahf
lret
jecxz
gs
adc
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
aad
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
cmp
or
jno
lds
xchg
inc
sbb
in
movsl
inc
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
dec
dec
add
pop
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
mov
mov
sbb
popf
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
into
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
mov
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xchg
inc
fwait
add
dec
rolb
into
bound
adc
or
pop
inc
test
or
nop
dec
enter
xchg
out
scas
fldt
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
ret
push
push
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
loop
mov
pop
mov
mov
cmp
add
jae
xor
pushf
dec
and
xchg
cli
lret
fsubr
test
xchg
leave
pusha
fildll
cmpb
ljmp
pushf
invd
mov
xor
xlat
pop
addb
xchg
pop
lock
add
dec
mov
dec
pop
cld
jae
sbb
push
jecxz
fistps
inc
jecxz
adc
out
mov
sarb
leave
stos
add
dec
or
pop
sbb
push
mov
push
xchg
lahf
aam
jg
das
mov
inc
cwtl
imul
out
cmp
fdivrl
repz
mov
hlt
sbb
cmp
decb
xor
test
out
mov
sub
xor
and
pop
aam
jae
add
cmp
and
mov
pop
fld
mov
xor
ret
mov
add
insl
push
cwtl
sub
das
inc
pushf
dec
and
xchg
test
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
movsl
xchg
stos
lds
mov
or
mov
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
inc
sbb
sbb
test
scas
iret
loop
xor
imul
dec
dec
leave
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
ret
mov
loope
scas
in
sbb
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
push
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
mov
jge
or
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
ljmp
mov
leave
adc
sbb
sti
and
dec
popa
sbb
andl
jns
sub
inc
cwtl
test
xchg
cmpsl
mov
ret
ret
sbb
mov
stc
insl
lsl
call
dec
leave
mov
in
mov
fsubrl
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
rorl
shll
fisubrl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
push
movsl
mov
mov
stos
mov
ja
leave
test
test
inc
mov
sbb
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
lret
sbbl
jge
subl
adc
sub
push
inc
or
test
fcoms
cmp
and
pushf
inc
sbb
scas
mov
ret
test
stos
int
enter
push
adc
add
mov
dec
orl
mov
pop
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
or
imull
mov
mov
bound
dec
or
xchg
dec
inc
shlb
or
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
lea
add
arpl
or
out
sub
popl
mov
adc
popf
add
push
into
and
mov
pop
fidivrl
jnp
stos
gs
mov
mov
mov
add
sti
in
mov
or
or
insb
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
or
adc
leave
ret
sahf
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
lods
lods
mov
mov
xchg
test
dec
mov
mov
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
or
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
lea
clc
and
and
test
sub
fwait
inc
fisttps
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
lret
std
fidivl
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
cmpsb
jmp
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
fwait
test
xor
sbb
dec
fucomi
jge
rcr
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
push
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
fsub
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
mov
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
lds
lret
lahf
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
subb
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
dec
jmp
xor
mov
popf
dec
stc
or
rorb
mov
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
dec
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
test
cmpl
shl
lock
fiadds
dec
inc
push
addb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
pop
loop
xchg
dec
cmp
adc
pusha
sarb
sub
push
mov
rcrb
mov
das
xchg
mov
pop
outsl
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
stos
shr
inc
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
cltd
pop
enter
mov
data16
int
inc
sbb
pop
inc
test
inc
int3
or
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
lret
or
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
push
popf
scas
inc
movsl
fcompl
xchg
rorl
addl
add
push
aas
xchg
mov
ret
jmp
inc
sbb
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
in
mov
popf
adcl
push
lods
mov
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
lret
inc
sub
lret
pop
ljmp
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rorb
andl
mov
mov
and
xchg
jp
dec
push
test
sub
cmp
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
jmp
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
pushf
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
inc
int
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
leave
or
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
into
xchg
mov
sub
xlat
inc
and
call
cmp
enter
sbb
lea
adc
add
int
jle
fucomip
mov
cmc
mov
and
je
mov
xor
ljmp
cmc
mov
loopne
xchg
pop
push
add
lret
lock
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
dec
or
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
movsb
inc
daa
popf
sti
jle
cmpsl
mov
fwait
lea
mov
inc
adc
sub
in
push
or
int
imul
push
sub
ja
mov
out
repz
pusha
or
xchg
mov
mov
sbb
mov
cltd
pop
push
lock
rcrl
or
mov
dec
and
mov
push
xor
mov
lods
ficoml
test
shrb
jne
lahf
pop
les
xlat
fnstsw
roll
jl
or
inc
imul
sub
xchg
hlt
icebp
mov
sbb
push
jge
in
ret
pop
push
jae
rcrl
pop
jo
jge
mov
pop
mov
lods
scas
inc
fsubrl
fsubs
add
inc
sbb
cmpsl
sub
xchg
xchg
aas
inc
mov
stc
mov
movsl
inc
push
mov
or
mov
lock
sti
sbb
imul
fwait
lea
mov
inc
adc
sub
lds
or
int
imul
push
sub
ja
mov
out
repz
pusha
or
xchg
mov
mov
sbb
mov
cltd
pop
push
lock
rcrl
or
mov
dec
and
mov
push
xor
mov
lods
ficoml
test
shrb
jne
lahf
pop
les
xlat
fnstsw
roll
jl
or
inc
imul
sub
xchg
hlt
icebp
mov
sbb
push
jge
in
ret
pop
push
jae
rcrl
pop
jo
jge
mov
pop
mov
lods
scas
inc
fsubrl
fsubs
add
inc
sbb
cmpsl
sub
xchg
xchg
aas
inc
mov
stc
mov
movsl
inc
push
mov
or
mov
lock
sti
jp
cmpsl
mov
fwait
lea
mov
inc
adc
sub
xor
dec
mov
fisubrs
popf
xchg
cli
mov
adc
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
sub
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
lods
jmp
jae
test
mov
push
jnp
xchg
test
add
hlt
movsb
lret
xchg
or
pop
inc
sub
or
data16
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
iret
or
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
mov
fldt
out
mov
enter
sbb
das
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
nop
inc
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
dec
dec
enter
cli
movsl
addr16
jmp
fbstp
xlat
rclb
in
cmp
lcall
into
mov
xor
sbb
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
into
mov
dec
and
cmp
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
xorl
fucomip
jl
add
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
inc
in
mov
insb
imul
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
inc
lcall
movb
inc
pop
mov
mov
sub
pop
push
dec
lret
mov
sti
test
stos
pusha
fisubrl
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
int
jmp
mov
fwait
mov
pop
repz
in
mov
repz
and
sub
add
mov
sahf
idivl
add
repz
ret
loopne
dec
pop
inc
mov
in
and
lret
jecxz
gs
inc
enter
int
mov
dec
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
aad
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
cmp
or
jno
lds
xchg
inc
sbb
in
movsl
inc
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
dec
dec
add
pop
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
mov
mov
sbb
popf
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
dec
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
mov
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xchg
inc
fwait
add
dec
rolb
into
bound
adc
or
pop
inc
test
or
nop
dec
enter
xchg
out
scas
fldt
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
ret
push
push
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
push
mov
pop
add
mov
sub
sbb
push
add
iret
push
cwtl
sub
das
sbbl
fsubr
test
xchg
leave
pusha
fisubrs
cmpb
ljmp
push
sbb
cld
xor
mov
movsl
xchg
stos
lds
mov
or
mov
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
inc
sbb
sbb
test
scas
iret
loop
xor
imul
dec
dec
leave
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
ret
mov
loope
scas
in
sbb
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
fisubs
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
jp
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
ljmp
mov
leave
adc
sbb
sti
and
dec
popa
sbb
andl
jns
sub
inc
cwtl
test
xchg
cmpsl
mov
ret
ret
sbb
mov
stc
insl
lsl
call
dec
leave
mov
in
mov
fsubrl
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
rorl
shll
fisubrl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
sbb
pop
lcall
sub
test
test
inc
mov
fucomp
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
lret
sbbl
jge
subl
adc
sub
push
inc
or
test
fcoms
cmp
and
pushf
inc
sbb
scas
mov
ret
test
stos
int
enter
push
adc
add
mov
dec
orl
mov
pop
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
imul
imul
mov
bound
dec
push
sub
rcrl
or
cmp
inc
lcall
gs
lods
xor
mov
xchg
stc
mov
mov
ror
lea
add
arpl
or
out
sub
popl
mov
adc
popf
add
push
into
and
mov
pop
fidivrl
jnp
stos
gs
mov
mov
mov
add
sti
in
mov
or
or
insb
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
or
adc
leave
ret
sahf
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
imulb
fimull
jo
pop
dec
mov
popl
dec
and
pop
dec
les
les
cmpsl
test
sub
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
or
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
lea
clc
and
and
test
sub
fwait
inc
fisttps
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
lret
std
fidivl
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
cmpsb
jmp
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
fs
xor
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
push
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
fsub
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
mov
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
lds
lret
lahf
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
or
stos
inc
movsb
pop
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
jne
bnd
int3
xor
leave
loop
and
sub
inc
sbb
mov
lea
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
dec
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
test
cmpl
shl
lock
fiadds
dec
inc
push
addb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
test
jo
jb
dec
push
sub
or
cmp
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
stos
shr
inc
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
cltd
pop
enter
mov
data16
int
inc
sbb
pop
inc
test
inc
int3
or
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
lret
or
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
xchg
popf
scas
inc
movsl
fcompl
xchg
orb
sbbl
jbe
dec
out
xor
push
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
in
mov
popf
adcl
push
lods
mov
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
lret
inc
sub
lret
pop
ljmp
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
ror
andl
mov
mov
and
xchg
jp
dec
xchg
test
sub
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
jmp
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
pushf
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
inc
int
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
leave
or
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
mov
jae
shrl
mov
lds
lahf
jle
dec
sbb
jb
js
cmp
inc
mov
lea
adc
add
mov
fucomip
mov
cmc
mov
and
jg
mov
xor
ljmp
cmc
mov
loopne
xchg
pop
push
add
lret
lock
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
dec
or
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
push
push
or
int
imul
push
sub
jg
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
sub
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
lods
jmp
jae
test
mov
push
jnp
xchg
test
add
hlt
movsb
lret
xchg
or
pop
inc
sub
or
data16
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
iret
or
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
iret
lea
je
mov
mov
test
enter
sbb
dec
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
nop
inc
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
dec
dec
enter
cli
movsl
addr16
jmp
fbstp
xlat
rclb
in
cmp
lcall
into
mov
xor
sbb
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
push
push
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
orl
adc
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
inc
in
mov
insb
imul
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
inc
lcall
movb
inc
pop
mov
mov
sub
pop
push
dec
lret
mov
sti
test
stos
pusha
fisubrl
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
int
jmp
mov
fwait
mov
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
call
cmp
loopne
dec
pop
inc
gs
clc
sbb
and
lahf
lret
jecxz
gs
push
enter
int
in
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
aad
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
cmp
or
jno
lds
xchg
inc
sbb
in
movsl
inc
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
dec
dec
add
pop
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
mov
mov
sbb
popf
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
sub
mov
mov
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
push
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xchg
inc
fwait
add
dec
rolb
into
bound
adc
or
pop
inc
test
or
nop
dec
enter
xchg
out
scas
fldt
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
ret
push
push
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
fwait
mov
pop
pop
mov
or
cmp
add
leave
push
cwtl
sub
das
sbbb
lret
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
movsl
xchg
stos
lds
mov
or
mov
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
inc
sbb
sbb
test
scas
iret
loop
xor
imul
dec
dec
leave
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
ret
mov
loope
scas
in
sbb
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
imul
movsl
iret
cmpsl
mov
imul
mov
mov
pop
sbb
test
clc
sub
jge
push
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
ljmp
mov
leave
adc
sbb
sti
and
dec
popa
sbb
andl
jns
sub
inc
cwtl
test
xchg
cmpsl
mov
ret
ret
sbb
mov
stc
insl
lsl
call
dec
leave
mov
in
mov
fsubrl
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
rorl
shll
fisubrl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
cltd
movsl
mov
mov
stos
mov
ja
loopne
shrl
inc
mov
push
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
lret
sbbl
jge
subl
adc
sub
push
inc
or
test
fcoms
cmp
and
pushf
inc
sbb
scas
mov
ret
test
stos
int
enter
push
adc
add
mov
dec
orl
mov
pop
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
mov
imull
mov
mov
bound
dec
lods
sub
adc
or
cmp
inc
lcall
gs
lods
xor
mov
xchg
stc
mov
mov
ror
lea
add
arpl
or
out
sub
popl
mov
adc
popf
add
push
into
and
mov
pop
fidivrl
jnp
stos
gs
mov
mov
mov
add
sti
in
mov
or
or
insb
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
or
adc
leave
ret
sahf
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
pop
lods
mov
mov
xchg
test
dec
mov
mov
dec
mov
mov
dec
les
addr16
pop
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
mov
mov
adc
outsb
jno
popl
mov
fcoms
and
xchg
jbe
pop
repz
sti
inc
push
into
mov
push
gs
outsl
mov
cmp
popf
repz
fadds
mov
xchg
mov
je
aad
and
cmp
ljmp
lods
frstor
in
stos
dec
fists
jnp
mov
jns
outsl
inc
sbb
add
mov
pop
push
mov
mov
adc
test
push
adc
cmc
sbb
pusha
mov
cld
cmpsl
xchg
test
dec
mov
je
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
or
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
lea
clc
and
and
test
sub
fwait
inc
fisttps
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
lret
std
fidivl
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
cmpsb
jmp
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
ljmp
mov
push
dec
jno
shrb
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
push
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
fsub
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
mov
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
lds
lret
lahf
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
andb
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
js
bnd
int3
xor
and
sub
inc
sbb
mov
xchg
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
dec
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
mov
test
cmpl
shl
lock
fiadds
dec
inc
push
addb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
mov
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
push
loop
xchg
dec
shrb
or
cmp
sub
push
mov
rclb
mov
das
xchg
mov
push
outsl
mov
loopne
fidivrs
sti
mov
push
mov
mov
int3
loope
orb
in
stos
shr
inc
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
cltd
pop
enter
mov
data16
int
inc
sbb
pop
inc
test
inc
int3
or
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
lret
or
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
xchg
popf
scas
inc
movsl
fcompl
xchg
jecxz
addl
add
push
aas
out
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubrs
movsl
mov
daa
loop
hlt
xor
mov
in
mov
popf
adcl
push
lods
mov
idivl
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
lret
inc
sub
lret
pop
ljmp
mov
je
scas
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shrb
sbb
mov
sbb
push
and
xchg
jp
dec
scas
test
sub
cmp
sbb
push
ret
fld1
std
jge
ret
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
dec
shrb
insl
jmp
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
pushf
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
inc
int
arpl
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
leave
or
shl
mov
mov
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
mov
jae
dec
sub
mov
and
call
cmp
cltd
enter
jg
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jbe
mov
xor
ljmp
cmc
mov
loopne
xchg
pop
push
add
lret
lock
mov
addb
xchg
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
dec
or
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
push
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
movsl
push
or
int
imul
push
sub
hlt
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
sub
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
lods
jmp
jae
test
mov
push
jnp
xchg
test
add
hlt
movsb
lret
xchg
or
pop
inc
sub
or
data16
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
iret
or
orl
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
xchg
lea
inc
out
mov
enter
sbb
pusha
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
cmpsl
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
nop
inc
sbb
lcall
cmp
imul
mov
sarl
push
flds
sahf
dec
dec
enter
cli
movsl
addr16
jmp
fbstp
xlat
rclb
in
cmp
lcall
into
mov
xor
sbb
ret
and
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
mov
mov
popf
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
adcl
fucomip
jl
andl
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
inc
in
mov
insb
imul
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
inc
lcall
movb
inc
pop
mov
mov
sub
pop
push
dec
lret
mov
sti
test
stos
pusha
fisubrl
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
int
jmp
mov
fwait
mov
pop
repz
in
mov
repz
and
sub
add
mov
nop
idivl
pusha
call
cmp
loopne
dec
pop
inc
arpl
repz
sbb
and
gs
or
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
aad
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
cmp
or
jno
lds
xchg
inc
sbb
in
movsl
inc
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
dec
dec
add
pop
push
and
mov
xor
xchg
jmp
lods
jge
imul
sbb
mov
mov
mov
sbb
popf
loop
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
aam
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
out
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
into
orl
scas
xchg
push
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
xchg
inc
fwait
add
dec
rolb
into
bound
adc
or
pop
inc
test
or
nop
dec
enter
xchg
out
scas
fldt
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
ret
push
push
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
je
mov
mov
mov
xchg
mov
mov
add
adc
cwtl
sub
das
test
jne
pop
lret
fsubr
test
xchg
leave
pusha
xlat
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
movsl
xchg
stos
lds
mov
or
mov
fwait
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
inc
sbb
sbb
test
scas
iret
loop
xor
imul
dec
dec
leave
inc
stos
popf
ljmp
pop
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
ret
mov
loope
scas
in
sbb
pop
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
sbb
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
jbe
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
ljmp
mov
leave
adc
sbb
sti
and
dec
popa
sbb
andl
jns
sub
inc
cwtl
test
xchg
cmpsl
mov
ret
ret
sbb
mov
stc
insl
lsl
call
dec
leave
mov
in
mov
fsubrl
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
rorl
shll
fisubrl
xor
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
aad
mov
mov
stos
mov
ja
lds
cmp
pop
inc
add
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
lret
sbbl
jge
subl
adc
sub
push
inc
or
test
fcoms
cmp
and
pushf
inc
sbb
scas
mov
ret
test
stos
int
enter
push
adc
add
mov
dec
orl
mov
pop
imul
cmp
mov
mov
out
int3
fwait
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
add
scas
mov
imull
mov
mov
bound
dec
pop
sub
sub
or
cmp
inc
lcall
gs
lods
xor
mov
xchg
stc
mov
mov
ror
lea
add
arpl
or
out
sub
popl
mov
adc
popf
add
push
into
and
mov
pop
fidivrl
jnp
stos
gs
mov
mov
mov
add
sti
in
mov
or
or
insb
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
or
adc
leave
ret
sahf
or
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
std
lods
mov
mov
xchg
test
dec
mov
push
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
or
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
lea
clc
and
and
test
sub
fwait
inc
fisttps
and
in
shlb
popf
xchg
pop
adc
sub
push
mov
lret
std
fidivl
sub
mov
xlat
mov
hlt
mov
cli
arpl
frstor
and
inc
dec
or
adc
cmpsb
jmp
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
out
shrb
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
push
lahf
pop
pop
xchg
mov
rcll
sbb
leave
rclb
fsub
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
mov
jnp
mov
pop
add
adc
repz
and
int
inc
sub
push
fs
lds
lret
lahf
mov
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
sbb
pop
jnp
xor
lcall
push
popf
pop
sub
mov
jbe
and
jmp
cmp
popa
adc
xlat
in
iret
mov
or
ds
and
mov
fucomi
push
push
js
arpl
mov
lahf
insl
adc
mov
xchg
aas
mov
cmp
leave
jecxz
je
jbe
xchg
nop
out
mov
fbstp
dec
sahf
loop
pop
cmp
loop
cmp
cmp
jg
mov
pop
add
repz
pusha
lahf
lret
mov
bnd
pop
lcall
xchg
mov
lock
addr16
add
nop
in
out
les
adc
hlt
shlb
push
ss
sub
push
jp
pushf
cmp
cmp
scas
push
mov
scas
xchg
loope
and
pop
push
stos
jecxz
addr16
xchg
cli
mov
test
mov
movsb
mov
push
or
mov
inc
loopne
pop
cmpsl
xlat
fmulp
add
add
dec
loop
push
daa
xchg
xor
xchg
test
out
sbb
or
xchg
mov
fbstp
pop
lea
cltd
lea
int3
jb
lea
mov
push
xchg
enter
enter
mov
add
insl
test
or
mov
sub
or
xor
popf
sbb
iret
int
sub
std
clc
add
pop
dec
push
xor
ja
inc
add
cmc
cld
rorb
test
and
mov
fistl
sub
and
adc
popf
inc
data16
jae
sbb
dec
pop
jae
or
push
fstps
pushf
data16
fcmovb
xorb
push
mov
lods
dec
fs
cmp
adc
push
fcmovnb
call
iret
testl
rcrb
or
pushf
out
cmpsb
call
les
jo
lds
in
push
push
js
arpl
in
mov
pop
sahf
mov
cmp
int3
sbb
mov
lods
lcall
push
jecxz
xchg
cmp
repnz
bound
inc
mov
fisubl
imul
jbe
rolb
in
ret
cmp
dec
ljmp
test
ret
test
dec
jno
cmp
outsl
sub
ljmp
sub
fildll
mov
sbb
fisubl
adc
and
pop
inc
mov
mov
dec
cmpsl
push
cmc
xchg
inc
xchg
dec
mov
fsubs
test
popf
inc
sbb
mov
and
push
nop
xor
repnz
inc
mov
aas
cmpsl
es
mov
mov
xor
addr16
popf
push
mov
cmp
in
jbe
cli
mov
mov
fwait
pop
sbb
inc
cltd
mov
hlt
js
inc
out
shlb
add
idivl
xlat
jmp
lret
insl
test
mov
mov
sub
or
xor
inc
fnstsw
add
out
filds
lea
dec
ret
fstl
cmp
push
sub
fdivs
add
mov
test
and
or
cmp
push
idivb
cltd
lret
lcall
sbb
mov
popf
push
call
scas
jb
sbb
mov
push
mov
push
push
mov
insl
lea
gs
inc
repz
mov
aad
mov
mov
sti
fisubrl
jge
in
movsb
inc
xchg
dec
repnz
adc
mov
pavgb
lahf
mov
or
in
mov
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
and
cmp
cld
lods
fwait
mov
stos
xchg
out
mov
inc
inc
mov
inc
sahf
dec
jl
scas
iret
push
int
pop
bound
mov
dec
adc
call
mov
jmp
sbb
mov
in
aaa
gs
mov
pop
sub
and
cli
jg
pop
dec
jno
fldenv
fnsave
scas
cmp
jp
fstps
cmp
cmc
cmpsl
int
dec
addb
mov
lahf
cmpb
xchg
fcoms
les
adc
xchg
add
outsb
xchg
or
pop
loopne
mov
int
pushf
push
pop
test
adc
jp
fisttps
sbb
push
jg
mov
or
xor
mov
mov
fsubrs
dec
std
addr16
mov
xchg
sahf
xchg
and
movsl
cli
jae
inc
pop
fwait
mov
cmpsb
inc
cltd
enter
mov
scas
inc
fimuls
sbb
xchg
lea
jle
mov
inc
sub
xor
mov
test
fsubrs
mov
test
iret
hlt
mov
pop
sub
int
pop
push
xor
test
imul
inc
mov
mov
adc
js
bound
inc
dec
jge
mov
jnp
sbb
neg
mov
dec
popf
lret
data16
cli
or
cmp
mov
jecxz
xchg
stos
lds
lods
fimull
or
mul
inc
or
lods
jle
cltd
shll
fucomi
bnd
ret
cmp
rclb
mov
addl
sub
push
or
push
sbb
jmp
or
and
xabort
pop
sbb
jne
lahf
rcll
lea
pop
bound
mov
cltd
stc
inc
and
loopne,pn
cmc
xchg
imul
inc
lods
repz
gs
lods
test
repz
push
pop
add
add
mov
sub
jg
xchg
addr16
inc
sbb
push
mov
std
movsl
dec
cld
lret
mov
jns
sahf
sbb
divl
idivl
leave
mov
jl
popl
or
addr16
pushf
stos
pop
xchg
pushf
fistl
cli
or
xchg
xchg
fwait
mov
lds
mov
out
fwait
leave
cmc
xor
add
repz
rclb
mov
sub
xor
test
insl
insb
leave
aad
jle
xor
aad
mov
jb
sbb
addl
and
sub
and
das
mov
aam
mov
sub
in
push
dec
push
sahf
cmp
adcb
sti
pop
adc
dec
stos
or
pop
arpl
popf
fistps
pop
dec
xor
jmp
cwtl
aas
in
lods
cwtl
ds
packsswb
stos
mov
push
jnp
sbb
neg
mov
dec
popf
lret
data16
cli
or
cmp
mov
jecxz
xchg
stos
lds
jge
sbb
dec
pop
inc
test
mov
lods
inc
aaa
mov
in
pop
scas
mov
es
popf
fists
das
loopne
lret
repnz
mov
lea
sub
push
mov
or
mov
out
movsl
pop
fsubl
sbb
sbb
mov
test
xlat
aaa
fldcw
inc
cltd
aaa
dec
or
pusha
mov
or
or
inc
shll
mov
cmp
sbb
inc
fxtract
adc
jecxz
call
pop
je
cmp
jecxz
clc
ds
cmp
sbb
lods
in
cmp
cmp
xchg
cmp
push
mov
jne
fs
movsl
mov
lock
js
test
lret
stos
test
loop
cs
sbb
out
jae
out
lods
mov
popf
cld
stc
pusha
sarl
sub
pop
push
test
addr16
jge
sub
mov
xchg
push
mov
std
xor
sub
mov
push
xchg
mov
test
arpl
pop
dec
pusha
sub
popf
fimuls
mov
xchg
lods
loopne
sub
testl
cs
dec
aam
aam
cmp
clc
sub
xchg
adc
jecxz
and
pop
jmp
mov
mov
ljmp
dec
inc
vpor
mov
inc
inc
sub
dec
pushf
and
mov
fsubr
fnstsw
adc
add
jge
loope
pop
or
call
pop
pop
insl
pop
mov
test
out
movsb
shl
jecxz
out
cltd
sahf
fcomps
dec
test
adc
inc
push
bound
sbb
or
xchg
stos
mov
cmc
dec
xchg
out
lret
sbb
inc
mov
xor
cmpsl
ljmp
fidivl
mov
xchg
xchg
pop
pusha
inc
sbb
adc
add
pop
ljmp
leave
dec
jb
ss
lods
dec
xchg
sub
push
inc
xor
movsl
iret
fldt
mov
xor
daa
aas
xchg
imull
cmpsl
xlat
rcll
add
dec
aam
dec
bound
mov
dec
repz
je
xor
mov
test
sub
sub
lods
jbe
pop
mov
ret
mov
jecxz
inc
mov
sbb
dec
sbb
dec
fwait
or
idivl
jae
sub
cld
dec
add
xchg
xor
xor
or
arpl
mov
mov
dec
xor
sar
popf
ror
faddl
sub
pop
jb
stos
mov
xchg
mov
ja
xchg
in
pop
scas
mov
negl
mov
push
pop
lahf
sbb
xor
cmp
test
sbb
push
dec
lcall
pop
pop
pop
adc
fistl
cmpsb
and
test
fstpl
icebp
or
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
add
les
dec
bound
or
mov
rclb
add
mov
add
imul
mov
sbb
inc
fists
xabort
xor
sti
sti
and
sbb
push
adc
xchg
hlt
test
jne
cwtl
les
shl
mov
fxch
adc
ret
loopne
test
dec
lahf
faddl
aaa
out
mov
lea
pop
stc
adc
or
pmuludq
and
rclb
cmpsb
push
dec
lret
cmp
push
inc
sbb
pop
fildll
mov
pop
sbb
ret
mov
mov
add
cmp
sbb
pop
inc
cmpsb
add
sub
mov
shlb
jbe
test
inc
inc
sub
add
xchg
cmc
lea
cmpsl
sub
pop
pop
cmc
cwtl
outsb
cwtl
and
push
pop
sbb
fsubrs
loop
or
sub
mov
sub
popf
movsb
inc
mov
dec
ficoml
fwait
outsl
sbb
and
pop
aas
sbb
pop
daa
sbb
mov
and
mov
dec
mov
mov
xor
push
mov
ret
loopne
dec
pop
rcr
repz
into
mov
jge
add
sub
mov
mov
add
iret
pop
adc
lret
push
xor
imul
sbb
test
cli
sub
ja
pop
cmc
mov
dec
lcall
sti
dec
bound
mov
and
or
bound
xchg
mov
push
adcl
xchg
fwait
subl
daa
inc
xchg
cld
push
repz
loop
push
andl
test
adc
popl
es
mov
cwtl
dec
and
je
mov
pop
test
inc
xchg
jbe
inc
push
mov
test
sbb
jb
fwait
xchg
cmpsb
mov
enter
imulb
and
orb
or
int
imul
fdivrs
je
inc
pop
inc
dec
xchg
roll
mov
add
mov
and
sti
mov
jecxz
repz
adc
sbb
pop
call
cmpb
jmp
or
js
push
ja
inc
in
orl
add
xchg
or
call
nop
cmp
cltd
pushf
pop
outsb
push
cld
jbe
jno
push
notl
shrl
xchg
mov
dec
fs
inc
and
fstpl
mov
xchg
sbb
repz
js
inc
sti
pop
aas
pop
sub
andl
in
mov
inc
je
mov
cmp
mov
movsl
ret
dec
fcoms
popf
movsb
and
mov
stos
sub
call
adc
jbe
popf
bound
and
cmpsb
cld
pushf
or
sub
lret
jmp
testl
inc
xchg
inc
loope
xlat
call
pop
pop
loopne
fisubl
sahf
ds
mov
adc
mov
add
jecxz
iret
or
stc
ss
repnz
lret
movb
jae
fadd
mov
movsb
fisubrl
mov
jmp
dec
into
fstp
push
pop
fidivrl
mov
jae
inc
jbe
jp
xchg
xchg
mov
push
clc
pop
stos
jne
lds
fwait
lods
sbb
cmp
jbe
xor
xchg
or
jnp
jns
add
test
js
das
jl
add
inc
aam
gs
mov
cltd
pop
lahf
int
mov
jne
jbe
fidivrl
xlat
insb
fstpl
jnp
fsubl
lods
in
jl
pop
xor
jl
xchg
sbb
sub
mov
and
jne
enter
mov
mov
dec
sahf
cmp
inc
pop
orb
add
dec
dec
fistps
jmp
mov
or
iret
inc
mov
jge
fucomip
aaa
mov
and
lea
pop
shlb
pop
mov
cli
xlat
enter
push
lods
cli
cmpsl
or
lret
scas
xchg
lret
fstp
js
cmpsb
push
dec
dec
scas
in
dec
or
adc
and
pop
arpl
xchg
push
shlb
and
cltd
and
lahf
inc
outsl
std
xor
mov
sbb
sbb
mov
adc
pop
clc
test
adc
mov
dec
and
xor
push
sub
mov
out
pop
cmp
dec
mov
lcall
inc
shrb
enter
insb
mov
sub
dec
sbb
fsts
push
sub
push
pop
push
into
insb
lea
xor
je
pop
jne
mov
mov
pop
pop
sbb
mov
jl
mov
or
adc
mov
pop
inc
mov
pop
and
add
mov
sub
stos
inc
dec
adc
push
inc
jle,pt
std
lods
push
xchg
sti
stos
or
addr16
aad
jmp
repnz
adcl
fistl
imul
jno
pusha
lahf
xor
iret
stc
nop
inc
bound
aaa
push
js
xchg
ret
adc
or
mov
jo
movsl
iret
mov
shrl
js
dec
movsl
ret
pusha
sub
rcll
repz
adc
jecxz
shl
int3
mov
mov
inc
mov
aad
lock
arpl
mov
or
shll
mov
cmp
roll
repz
sti
fimuls
add
sbb
add
lods
push
mov
movsb
mov
cmpb
sub
pop
dec
push
xchg
dec
and
gs
lods
push
push
add
adc
xchg
mov
stos
mov
rcr
fimull
insb
fcomps
into
insl
mov
ljmp
push
push
inc
cmpsl
push
add
sbb
cmp
inc
xlat
fcompl
fwait
pushw
add
jge
nop
cmp
jmp
push
push
dec
imul
cmpsl
xlat
add
mov
call
repnz
inc
fists
adc
push
lods
jns
int3
cs
arpl
ljmp
sbb
fmuls
mov
int3
fmull
leave
sbb
rsqrtps
inc
push
test
xor
sti
mov
inc
mov
mov
sbb
sbb
mov
mov
cmp
add
mov
sbb
popf
orb
lods
cli
mov
mov
movsl
ret
pop
jbe
add
add
jnp
shll
inc
cmp
mov
lods
jae
pop
jg
shl
out
sub
inc
test
test
mov
sbb
lcall
lret
in
mov
or
stos
xor
xor
mov
leave
mov
mov
orl
in
cmp
mov
and
dec
mov
mov
aas
fwait
lret
in
mov
mov
jnp
fcom
mov
mov
jle
data16
cmpb
test
sbb
hlt
pop
adc
mov
ret
imul
sbb
dec
and
mov
mov
test
add
in
mov
lock
mov
ret
and
inc
dec
mov
add
sbb
mov
cli
sub
test
mov
inc
and
push
test
jge
dec
pop
arpl
push
mov
xor
push
sbbl
scas
mov
dec
mov
mov
mov
clc
cltd
lds
add
ficoms
ficompl
and
cmp
mov
inc
sarb
clc
pop
cs
cld
dec
sarb
lahf
inc
jl
mov
add
pop
lret
fwait
mov
xchg
push
sahf
xchg
sarb
mov
popf
insl
sbb
fucomi
hlt
std
mov
sti
and
or
es
xor
or
dec
push
enter
mov
add
leave
ljmp
jp
push
mov
test
scas
iret
jmp
cmp
fists
add
adc
pushf
orb
sub
sbb
inc
sub
sarl
fs
xor
xlat
stos
les
mov
mov
jnp
sbb
std
movsl
popa
jae
ljmp
push
mov
xor
push
sbbl
ja
repnz
cmc
xchg
dec
movsb
aad
xor
xor
fwait
iret
push
addr16
push
data16
cwtl
hlt
inc
sarb
or
shll
and
sbb
xchg
mov
mov
xchg
rclb
movd
mov
or
scas
lea
and
jle
sbb
loopne
hlt
je
nop
enter
fstp
ret
inc
mov
insl
sbb
sbb
idivb
pop
adc
rclb
jns
pop
mov
test
mov
mov
movsl
add
jmp
ret
mov
add
push
pushf
mov
pop
mov
mov
xor
stos
mov
adc
mov
sbb
dec
arpl
dec
sbb
pmulhuw
mov
mov
les
dec
lret
or
nop
lahf
or
mov
fnstsw
les
mov
je
sbb
pop
or
pop
lods
jp
cmpsb
fbstp
stos
cmc
xor
outsb
cmp
aas
adc
sbb
pop
jns
cmp
xchg
cwtl
dec
and
cmp
pop
dec
mov
cmp
jne
mov
cmp
das
mov
xchg
xchg
inc
cltd
enter
mov
fdivr
or
xchg
xor
dec
arpl
mov
int
pop
loop
dec
mov
dec
sahf
dec
cs
mov
int3
lcall
cmpsl
and
sbbb
jae
in
aaa
lcall
sbb
mov
mov
iret
cmpsl
imul
inc
mov
jg
push
jne
xor
and
push
and
xor
jmp
arpl
push
sub
inc
sbb
or
pop
sbb
xorb
fnsave
push
mov
add
xchg
xor
mov
jbe
lahf
jp
xor
mov
mov
lods
xabort
adc
adc
inc
add
or
mov
or
in
mov
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
mov
call
mov
call
cmpl
enter
sbb
push
adc
das
shlb
insl
addl
ja
shrl
dec
repnz
jge
mov
inc
popl
inc
mov
lret
jecxz
std
cmp
ja
mov
scas
or
mov
fsubrl
adc
lahf
insl
mov
pop
outsl
sub
sbb
push
adc
test
mov
lret
ljmp
bound
dec
jo
fcmovu
mov
and
and
test
stos
pop
xchg
imul
mov
gs
lods
fcoms
into
mov
stos
test
xchg
jns
scas
inc
movsl
faddl
adcb
fdiv
ret
inc
lds
fadd
out
sub
cmc
jno
fidivrl
ret
mov
mov
pop
xchg
pop
cltd
push
aas
mov
ljmp
ds
movsl
mov
adc
hlt
mov
add
cmp
in
pop
push
and
cmpsb
add
testl
clc
push
jl
sbb
sbb
mov
ficomps
cmp
fwait
xchg
or
lret
lds
xchg
xchg
int3
adc
pushf
insl
mov
insb
or
push
dec
mov
pop
push
test
test
mov
or
push
inc
xor
nop
cwtl
pushf
mov
hlt
xor
ret
sub
jl
pop
lahf
lea
inc
lcall
ret
aaa
lahf
sub
loop
ret
scas
cs
idivl
sbb
insb
ss
aas
cmpsl
xor
dec
lcall
aam
ds
jp
iret
loopne
and
push
mov
scas
xlat
insb
imul
ja
test
es
les
xchg
sub
mov
aam
cmp
mov
jmp
ret
imul
dec
popa
mov
cmp
mov
sub
mov
cmp
add
dec
jmp
ds
sbbb
lods
dec
jl
adc
sahf
mov
sbb
add
cld
push
sbb
mov
les
adc
sub
mov
jno
mov
xchg
adc
dec
mov
cld
push
shll
cmp
add
subb
jbe
lds
push
lret
nop
pop
cmpsb
push
push
lret
movsb
push
sub
sahf
jno
adc
cmp
icebp
cmp
lods
cmc
cmp
cmp
push
or
or
add
mov
popl
push
mov
and
test
sbb
mov
movsl
inc
js
pop
cmpsl
aad
lds
adc
sbb
in
mov
testb
jp
arpl
shrb
cmp
insb
jbe
mov
jo
pop
ds
xchg
shl
je
pop
mov
js
pop
aas
cmpsl
xlat
in
idivl
mov
inc
pusha
push
cmp
or
mov
dec
fs
cmp
push
mov
push
push
dec
cmpsl
push
push
mov
pop
insb
push
cmp
outsb
push
mov
and
xor
adc
dec
mov
xor
dec
xor
test
stos
aad
gs
and
dec
mov
mov
outsl
cmp
mov
pop
dec
mov
cmc
cld
jg
inc
inc
xor
adc
pop
add
inc
mov
xor
invd
inc
inc
xor
inc
inc
mov
je
pop
adc
xor
xchg
dec
daa
adc
inc
mov
mov
das
sbb
mov
dec
inc
mov
hlt
jl
pusha
jo
cmp
pop
popl
cmp
xchg
sub
xor
mov
pop
ret
cmp
cmp
sub
mov
repnz
mov
lret
jecxz
push
cwtl
xor
lea
ss
and
cmpsl
mov
nop
pop
repnz
imul
insl
sahf
mov
mov
cmp
cmp
std
movsl
lods
dec
pop
jp
pushf
dec
pop
jno
mov
mov
xchg
test
inc
sahf
cmp
mov
cmpsb
xor
jb
loopne
sbb
es
cwtl
inc
sbb
sub
pop
cmp
in
movsb
lahf
mov
sub
xchg
mov
inc
sbb
lea
js
ds
inc
mov
sbb
cltd
or
adc
jmp
sbb
out
test
fwait
pop
pop
into
cmpsb
inc
cltd
enter
in
add
sbb
add
andb
js
sbb
popf
enter
lods
mov
dec
mov
aam
js
call
xor
mov
inc
aas
pop
cmpb
mov
add
push
inc
or
adc
sub
iret
cmp
xor
leave
lahf
xchg
imul
mov
dec
sbb
clc
iret
pop
mov
sahf
das
xchg
stc
cli
in
test
or
invd
shlb
test
or
add
sub
scas
cltd
movsl
mov
adc
pop
pushf
cmp
sbb
pushf
jp
lods
je
sbb
jle
lods
fcomip
cmp
and
xrelease
test
sbb
sub
jecxz
mov
xchg
imul
xchg
repz
sbb
cmp
test
inc
shrb
cmpsb
inc
loope
repz
jo
push
pop
sub
jmp
dec
addr16
sub
mov
xchg
mov
imul
mov
mov
js
jmp
push
jne
and
ds
lods
ja
fcomi
mov
inc
sbb
outsl
and
imul
sub
cmpb
fwait
popa
cmpsb
clc
icebp
mov
sbbl
sbbb
adc
inc
sub
lahf
cmp
imull
stos
inc
ret
add
and
aam
cmp
ret
dec
xchg
lcall
shlb
jb
mov
fs
xor
xor
cmp
push
mov
or
rclb
es
mov
adc
push
les
rcll
push
fdivrs
push
inc
inc
jge
imul
cmpsb
fcomp
aaa
adc
shlb
fildl
inc
mov
dec
sahf
and
cmpsb
hlt
mov
daa
sub
mov
dec
pop
ja
shl
or
add
in
cmp
movsl
mov
dec
pop
and
jae
xchg
pop
mov
loope
pushf
sbb
mov
lock
jbe
add
aaa
cwtl
cs
gs
mov
add
mov
inc
push
add
lret
test
pop
lcall
repz
imul
fmull
nop
pop
pop
add
xor
or
adc
add
adc
push
xor
mov
out
mov
cmpsl
fists
addr16
mov
loopne
xchg
inc
add
or
sbb
mov
adc
cmp
mov
cmp
fidivrl
push
sbb
dec
test
jp
cmp
mov
mov
sbb
cmp
es
sub
pop
cmpsb
sub
shr
xchg
cmp
or
mov
call
enter
repnz
mov
in
mov
psubusb
sbb
xor
enter
lcall
dec
test
mov
in
out
clc
lret
inc
in
dec
mov
pop
xor
test
loop
xor
cli
into
xchg
stc
cli
in
test
cmp
dec
outsb
push
mov
or
mov
testb
mov
fwait
pushf
adc
mov
xchg
mov
lods
inc
and
pusha
push
jg
cmp
icebp
cmp
lods
cmc
xchg
sub
or
sbb
mov
fwait
push
dec
mov
test
dec
aam
stc
ficompl
push
pop
xchg
push
add
sub
cmp
or
adc
fwait
inc
lsl
gs
outsl
mov
rcrb
sbb
sub
dec
inc
push
dec
inc
shll
sub
loope
aad
enter
ljmp
sbbl
add
lock
jge
lcall
and
adc
shll
push
ss
add
mov
clc
or
adc
mov
icebp
mov
ss
lds
mov
in
lret
pop
sbb
sub
cmp
pop
std
mov
fcoms
cmp
test
cmp
xchg
add
sbbl
stos
jb
lds
add
pop
mov
fcmovne
imul
jg
stc
loope
xlat
addr16
push
pop
in
test
or
jge
or
mov
push
mov
arpl
sbb
mov
jnp
inc
push
mov
or
mov
enter
mov
and
clc
rcrb
std
mov
mov
int3
add
sub
mov
fwait
stc
leave
or
mov
xor
adc
pop
int3
lcall
mov
imul
ficompl
pop
pop
lock
clc
iret
sbb
inc
sbb
add
push
sbb
in
xchg
divb
xchg
fidivrl
mov
std
fs
jns
cli
mov
push
clc
mov
aaa
fsts
push
mov
push
push
pop
arpl
add
insl
mov
sbb
in
or
ljmp
lcall
enter
ret
jnp
push
push
mov
add
icebp
adc
js
ret
add
adc
jl
clc
aaa
jge
or
pop
stos
aam
mov
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
cmp
mov
cltd
repz
inc
add
ret
mov
enter
aam
sub
xchg
jle
pop
dec
lea
popa
mov
lods
xchg
adc
cwtl
sarl
sahf
lret
mov
loopne
mov
add
adcl
push
lock
pop
push
adc
popl
roll
sbb
rcrb
bnd
stos
mov
add
aam
sbb
cli
cmpsb
jae
mov
push
inc
fstp
insb
mov
insb
push
cld
mov
xchg
ds
leave
push
pop
jp
push
push
dec
cmpsl
push
push
inc
lcall
cmp
mov
mov
jnp
leave
sbb
push
xlat
fucomi
repnz
mov
outsb
loopne
inc
popf
pop
aas
cmpsl
push
mov
pop
pop
sbb
js
jae
inc
cwtl
nop
pop
pop
mov
cwtl
push
cltd
cmpsb
fists
xchg
mov
jae
int
jmp
idiv
les
enter
push
mov
iret
jecxz
enter
or
loope
fwait
pop
inc
sub
das
out
and
pop
inc
inc
mov
pop
dec
pop
test
cmp
and
inc
repz
jnp
pop
fdivs
mov
pop
mov
ret
sbb
push
add
xchg
pop
imul
mov
pop
dec
mov
jbe
int3
ss
jns
pop
and
sbb
ljmp
pop
stos
inc
ret
add
lcall
sbb
ret
iret
xchg
lcall
jle
xor
fistl
or
test
jl
adc
and
scas
std
test
fists
js
rclb
xchg
and
mov
adc
inc
out
jge
sbb
mov
xor
inc
popf
imul
xchg
pop
cmpsb
loopne
pop
ljmp
pop
fdivl
mov
dec
inc
xor
sbb
fcomps
stos
repz
cli
mov
dec
push
ss
mov
ret
pop
stos
dec
and
mov
mov
test
xor
mov
lret
jecxz
pop
cwtl
test
pop
mov
dec
sbb
mov
leave
fsubrl
pop
imul
add
fwait
or
shrl
mov
xor
adc
push
test
and
sub
and
daa
sbb
fstpt
mov
jecxz
loopne
fistl
cltd
mov
xchg
push
sub
inc
sbb
push
pusha
jp
and
and
push
repz
ss
dec
push
push
cwtl
fsub
sarb
inc
dec
or
add
mov
out
aam
stc
repnz
ljmp
int
int
jns
mov
mov
or
pop
fcompl
mov
mov
shlb
fdivs
sbb
leave
cwtl
pop
dec
push
cld
hlt
aaa
mov
popf
test
orb
xchg
xor
call
inc
sbb
and
mov
push
popf
mov
cmp
jp
add
mov
lock
pop
pop
adc
mov
sbb
aas
sub
dec
lahf
mov
mov
aad
dec
mov
and
rcrl
jge
jmp
js
stos
xchg
mov
testl
les
test
dec
xchg
or
ret
rorl
cmpsl
int
cmp
movb
push
sbb
test
adc
sbb
inc
sarb
testl
or
jb
xor
icebp
les
fwait
mov
xchg
push
jg
inc
mov
cmp
mov
dec
push
outsl
bswap
lds
les
add
mov
sbb
and
mov
lcall
xor
mov
lea
mov
xchg
xor
jmp
lcall
push
inc
sbb
cltd
hlt
pop
dec
sub
lret
adc
mov
and
dec
or
sub
into
cmp
sbb
xor
out
jge
fsts
jmp
sahf
pop
test
movsb
sbb
and
sbb
movsl
nopl
ret
jno
adc
test
mov
sbb
lock
les
mov
and
in
push
test
sbb
cld
mov
xchg
mov
test
mov
inc
inc
cmp
mov
lret
sub
mov
stc
pop
mov
insl
xchg
popf
aad
pop
sub
test
loope
daa
outsl
or
test
push
and
jno
cwtl
sbb
cs
and
cmp
mov
mov
sarb
pop
pop
aad
fwait
mov
adc
push
pop
pop
test
lahf
sar
into
add
shrb
movl
add
rcrl
repz
cmp
jno
enter
sbb
outsb
xor
orl
adc
aam
jge
jmp
lahf
cwtl
les
xchg
stc
cli
in
test
or
invd
mov
shlb
fldcw
xor
jne
or
stos
xlat
aad
pop
pop
rcl
lcall
cs
inc
cmpsl
push
dec
lds
pop
xlat
cld
or
inc
and
subl
es
hlt
push
xchg
and
dec
fcompl
xchg
mov
add
inc
inc
adc
push
out
jns
lret
in
mov
mov
cmp
out
mov
xchg
xchg
inc
cltd
enter
mov
sbb
dec
cwtl
test
imul
sahf
dec
ja
ret
sbb
inc
mov
jg
ret
mov
mov
call
add
clc
movsl
stos
rcrl
bound
ljmp
dec
mov
leave
sarb
imul
les
js
stc
test
test
inc
lret
push
dec
lcall
mov
lret
cmpsl
jno
into
rolb
or
sub
sub
cmp
sbb
leave
dec
mov
cltd
movsb
push
lds
cmp
scas
push
xchg
mov
std
cli
jnp
inc
mov
mov
inc
cmp
pop
mov
cwtl
test
xor
jmp
add
mov
stos
xor
into
fcoms
std
jb
inc
cwtl
xchg
je
jmp
movsl
dec
stc
hlt
jl
popf
mov
int
jle
push
insl
mov
xor
push
cmp
xlat
test
sub
jle
mov
xchg
mov
inc
jnp
mov
incl
mov
js
cmp
lds
cltd
xchg
adc
scas
inc
and
add
test
test
mov
xlat
xor
jae
sub
iret
sbb
ret
cmc
pushl
test
cmp
ret
add
daa
add
pop
sub
mov
iret
orb
sbb
mov
jbe
sub
xor
mov
sub
jno
addr16
imul
push
rolb
fs
fldenv
dec
shll
add
pop
imul
imul
xor
test
ficoms
leave
xabort
pop
hlt
or
and
outsl
xchg
test
dec
push
or
mov
jns
mov
pop
pop
add
xchg
hlt
pop
stos
shr
aaa
loopne
xor
mov
repz
sti
ficoms
sbb
cltd
mov
pop
sub
movl
or
ret
vunpckhpd
sbbl
dec
sbb
sbb
sbb
sub
dec
lahf
cmp
jae
fildl
in
mov
pop
cmp
sbb
mov
inc
xchg
dec
rorl
scas
fcmove
xchg
outsl
sub
test
lds
imul
icebp
sbb
js
popf
rcll
fdiv
fwait
add
or
nop
sbb
add
and
je
decl
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
movsl
fstps
in
cmp
cld
lods
fwait
mov
stos
xchg
out
mov
enter
sbb
add
dec
shl
cwtl
xchg
aad
adc
mov
out
ljmp
push
xorb
out
mov
clc
sti
mov
jmp
mov
xchg
dec
sbb
cltd
push
int3
push
int
xor
adc
cmp
shrl
mov
ds
cs
mov
sahf
das
xchg
stc
cli
in
test
cmp
dec
insb
push
mov
or
mov
testb
mov
fwait
pushf
adc
xchg
push
cltd
mov
and
fcomi
js
inc
bound
cld
add
add
sti
insb
inc
ret
sbb
mov
jge
fisttpl
in
mov
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
mov
std
mov
push
or
inc
bound
out
mov
flds
lods
lods
pushf
or
fidivs
adc
inc
mov
jle
cmp
aaa
std
into
add
xor
mov
out
jp
ds
mov
jns
mov
add
insl
adc
dec
jp
lcall
mov
lret
mov
and
jg
scas
test
stos
xor
add
fildll
stc
mov
dec
pop
inc
fisubl
mov
bound
or
xchg
dec
retw
adc
add
and
les
xor
lds
jge
pop
xor
sbb
push
je
xchg
jo
movsb
cltd
xor
outsl
sbb
mov
adc
xchg
pop
lret
repz
addr16
les
push
jmp
in
inc
jge
inc
mov
and
lods
insl
out
xlat
pop
faddp
jecxz
iret
push
adc
cmp
push
adc
out
mov
sbb
mov
cmp
xor
sbb
sub
dec
pop
mov
mov
test
clc
int3
sbb
mov
mov
mov
adc
xchg
mov
sbb
mov
mov
mov
fadd
adc
icebp
idivb
cmp
or
test
popf
xchg
leave
pop
fildll
fidivrl
aas
in
xchg
shlb
push
sbb
cmp
mov
test
add
cld
jp
add
sbb
es
cwtl
inc
sbb
and
pop
cmp
in
movsb
lahf
mov
sub
xchg
add
decl
add
addr16
fdivrs
mov
fsubl
pop
jp
stc
dec
js
fucomp
inc
inc
fstpl
pop
fdivrl
dec
in
pop
fdivrl
loop
int3
pop
sub
cwtl
cltd
adc
cmp
dec
inc
xor
outsl
mov
jmp
adc
mov
mov
imul
jns
pop
mov
test
mov
mov
cmp
jp
add
bound
mov
lock
aad
pushf
ss
or
lret
mov
and
jg
scas
test
stos
xor
add
fildll
stc
dec
cmp
in
cmc
fsts
sbb
cmp
test
fwait
jmp
xchg
outsl
stos
inc
lcall
or
stos
xor
xor
cwtl
lret
repz
leave
loop
das
jmp
and
je
stos
loop
xchg
add
inc
mov
mov
jmp
mov
aam
jbe
mov
int
out
test
bound
lds
pop
in
pop
and
cmpsb
hlt
je
dec
dec
imul
cmp
js
test
xor
sbb
shlb
pop
mov
mov
test
sub
in
imul
jg
adc
mov
inc
sbb
nop
jg
adc
rcrb
adc
stos
out
add
aam
sbb
sub
ljmp
add
arpl
lock
inc
dec
xchg
xchg
sbb
push
push
mov
stos
ja
dec
pop
mov
adc
cmpl
jnp
mov
cld
push
or
mov
leave
jmp
rorb
add
sahf
out
inc
push
mov
sub
rcl
xchg
fsubr
sbb
push
cmpsb
sub
xor
xor
dec
lahf
adc
mov
sti
mov
mov
out
mov
mov
je
push
pop
sbb
dec
cmp
fsubrs
repz
rclb
and
pop
stos
shrl
push
xchg
sub
popf
xchg
cmpb
hlt
jns
out
push
dec
test
repnz
push
jo
in
ja
push
sbb
or
aaa
and
mov
sbbb
jne
mov
ja
cmp
cli
lcall
fstp
jmp
imul
push
pop
imulb
insl
mov
or
dec
fistl
push
cmp
xchg
stos
inc
pop
lret
rcl
fistpl
jbe
xor
push
mov
test
dec
xchg
mov
js
addr16
out
sub
sbb
mov
fwait
push
dec
mov
mov
stc
repnz
mov
jbe
mull
orb
or
fldl
sti
repz
mov
xchg
dec
inc
dec
and
leave
sbb
aaa
mov
xchg
jb
stos
cltd
dec
popa
or
mov
subb
shll
mov
cmp
lahf
pop
mov
mov
jmp
jecxz
movsl
mov
les
inc
push
xchg
cmp
in
cmpsb
iret
jmp
and
inc
dec
jge
cmpsb
sub
cmpsl
inc
int
jge
push
lods
jae
int3
jg
aaa
in
out
jns
inc
test
test
adcb
inc
mov
mov
mov
jnp
test
mov
dec
lods
mov
test
scas
stc
stos
repnz
lods
dec
scas
mov
cli
jnp
inc
mov
adc
cwtl
xchg
inc
sbb
add
mov
lods
sbb
hlt
test
mov
ljmp
mov
mov
and
ret
fld1
jb
cmp
jne
jecxz
xchg
or
jle
inc
inc
mov
enter
xor
and
and
dec
repnz
bound
pop
test
rcr
dec
pop
mov
mov
mov
mov
cmp
jp
add
adc
ret
mov
add
addr16
test
pop
jecxz
sbb
mov
stos
test
fiaddl
inc
pop
mov
mov
fucomp
jae
push
test
xchg
sbb
cmpsl
jno
lret
push
cmp
ret
xchg
sub
cwtl
sub
mov
pop
scas
jb
mov
xor
loope
cltd
lods
inc
sbb
aad
adc
das
mov
scas
aaa
mov
cli
jnp
inc
mov
adc
cwtl
xchg
inc
sbb
add
mov
jno
icebp
push
mov
cld
mov
es
sub
mov
pop
repz
mov
sti
fildll
xor
mov
cwtl
mov
rclb
add
lret
cmp
out
pop
ret
cmp
mov
jmp
mov
aam
fwait
pop
mov
xchg
fimuls
or
in
inc
add
rcrb
mov
cmp
mov
jo
cmpsl
mov
cmpb
mull
aas
mov
sbb
repnz
push
loop
int
mov
mov
dec
pop
movl
pop
mov
mov
add
popf
cwtl
xchg
dec
cmpsl
adc
stos
inc
lds
sbb
pop
fadds
inc
fcoml
sbbb
mov
cs
fcomps
js
or
add
idiv
mov
pop
ds
push
dec
adc
stos
mov
mov
pop
cmp
xor
daa
test
add
call
mov
scas
mov
int3
add
jb
xor
sbb
in
cli
popf
inc
sbb
cs
decb
sbb
pop
test
xor
mov
mov
pop
testl
ret
jb
daa
mov
in
ja
les
aad
add
sub
aad
jp
adc
cmpsb
stos
push
test
sub
mov
push
xor
mov
or
push
cmpsl
pop
inc
loopne
or
rclb
sbb
test
lcall
cmp
fcomp
aad
adc
sub
mov
lds
dec
mov
pusha
inc
jecxz
xchg
mov
enter
pop
divl
add
or
inc
sbb
loop
fsubrs
jmp
jae
and
push
dec
pop
cmp
push
fdivl
dec
lahf
adc
mov
aas
mov
popf
iret
sbb
js
mov
sbb
and
sbb
fisubrs
subl
call
int3
nop
mov
dec
and
mov
mov
test
xor
mov
lret
jecxz
push
cwtl
mov
lea
ss
and
cmpsl
mov
nop
pop
ljmp
sbb
xchg
xlat
pop
sbb
test
clc
sub
lcall
subl
ret
mov
ret
movsl
insl
lds
or
daa
pop
mov
mov
stos
ret
fistpl
jo
cmp
fwait
enter
mov
push
jp
xor
dec
cwtl
js
popf
lahf
adc
mov
ds
mov
adc
cmp
sti
adc
jns
xchg
xchg
xchg
sub
repz
fst
in
mov
mov
cmp
or
fwait
xchg
xchg
inc
cltd
enter
mov
fdivr
or
xchg
xor
dec
arpl
mov
int
pop
bound
fstps
shl
dec
adc
call
fcompl
push
inc
ret
push
sti
pop
inc
jle
sbb
in
hlt
push
cltd
xchg
jo
mov
leave
roll
inc
add
ja
popa
stos
mov
out
jo
hlt
das
xor
sub
fimull
or
test
fsts
push
lret
fucomp
jae
push
aam
ja
stc
cli
in
test
cmp
int
push
mov
or
fistps
pop
xor
mov
repz
lods
pop
pushf
or
sbb
ficoms
mov
cmpsb
fbld
ss
mov
mov
add
push
push
cmp
rclb
mov
jmp
push
aas
fwait
lret
in
mov
mov
cmp
sub
fwait
xchg
xchg
inc
cltd
enter
mov
int3
pop
sub
sbb
dec
cwtl
test
imul
fstps
shl
dec
adc
call
pop
lods
dec
add
lock
pop
jmp
in
mov
inc
cmp
mov
jbe
adc
pop
sahf
test
sbb
jmp
xchg
pop
push
pop
dec
adc
or
sbb
bswap
pop
mov
mov
mov
aaa
jns
sub
out
jae
movsl
popf
mov
cmp
test
jl
or
mov
lret
xlat
xchg
and
and
sbb
fstps
mov
mov
xchg
jle
push
nop
xor
jbe
popf
pop
xchg
cmp
subl
mov
into
nop
xchg
push
add
rclb
aam
jnp
adcb
fdivrs
pop
xor
inc
gs
mov
out
sbb
mov
push
out
call
xor
mov
dec
dec
or
jns
mov
dec
push
gs
add
cwtl
dec
and
mov
mov
test
add
imul
in
clc
pop
divl
inc
add
jl
mov
mov
mov
in
sub
lods
dec
pushf
dec
and
jge
test
shl
adc
test
add
mov
sbb
aas
pop
xchg
outsl
mov
push
cmp
ret
add
adc
ficoml
outsb
stos
std
cmp
add
jno
shrb
cltd
fstl
jl
or
mov
scas
aaa
mov
cli
jnp
inc
mov
pop
inc
sbbl
push
dec
mov
jno
icebp
push
mov
push
in
xchg
rol
pop
test
stos
sub
cmpsb
enter
cmpsl
xchg
stos
inc
inc
rcl
xacquire
fldt
inc
mov
mov
push
pop
sbbb
cmpsl
stos
out
push
adc
cltd
jb
fsubr
xlat
or
mov
cmp
dec
or
call
jae
ds
add
push
shl
or
add
inc
divl
shl
jl
adc
push
add
repz
mov
lods
xchg
sub
adc
push
out
mov
dec
sbb
xchg
mov
push
mov
jmp
mov
xchg
dec
mov
bnd
push
cmp
and
push
mov
scas
dec
fcoml
push
enter
mov
jmp
mov
repnz
cmp
scas
rcrl
inc
jo
loopne
aas
cmpsl
xlat
ret
pushf
addl
lea
pop
ds
sub
pop
mov
xchg
imul
daa
int3
sbb
enter
ret
xchg
xchg
fs
sbb
xor
and
dec
inc
mov
pop
push
adc
xchg
pop
xchg
dec
daa
cs
mov
jno
gs
inc
mov
repnz
dec
pop
add
adc
pop
fsubrl
mov
pop
sub
mov
sbb
cmp
mov
repz
mov
lret
xchg
sub
adc
push
out
mov
dec
sbb
xchg
test
push
mov
js
fisttpll
xchg
shll
mov
imul
push
adc
mov
xchg
popf
adc
int3
mov
repz
ss
js
cmp
idivl
inc
push
pop
loop
jo
adc
mov
jle
out
push
push
lods
out
xor
mov
add
jb
sbb
mov
mov
mov
xchg
pushf
hlt
jl
fwait
adc
xor
jo
and
push
or
xchg
lods
mov
xor
je
insl
fildl
xor
mov
pushf
mov
dec
movsb
jbe
sbb
jge
mov
lds
add
xor
push
jnp
cmp
aas
add
cmp
stc
test
test
inc
sub
xchg
data16
mov
lret
popa
sarb
retw
inc
pop
mov
aas
mov
stos
cmp
fcompl
jbe
xor
push
mov
test
pushf
ja
mov
cli
jnp
inc
mov
adc
inc
sbb
add
mov
lods
sbb
hlt
test
mov
ljmp
popf
pop
mov
adc
cmpsl
ret
fld1
gs
jl
xchg
mov
inc
xchg
leave
sarb
or
cmc
dec
inc
ds
sub
iret
inc
xor
mov
jmp
gs
fistps
inc
sbb
adc
or
adc
pop
xchg
dec
sbb
inc
inc
xor
xorb
test
rclb
xchg
sub
pushf
ss
movsb
xor
lret
mov
and
push
nop
mov
fstpt
test
fdivrs
add
scas
mov
xchg
xor
dec
dec
push
ret
mov
ret
pop
sub
loop
mov
fcmovnu
mov
push
adc
pop
scas
dec
jns
or
nop
push
jnp
or
scas
fsubs
lahf
scas
push
xchg
mov
std
cli
jnp
inc
mov
mov
inc
sarb
inc
icebp
or
les
rcll
data16
adc
fidivrl
jl
xchg
aam
stc
and
jae
push
gs
sbb
fucomi
hlt
std
mov
sti
and
xchg
xchg
test
dec
push
or
xlat
pop
mov
mov
mov
imul
mov
arpl
inc
dec
jge
arpl
sbb
and
fucomip
repz
cmpb
popa
xchg
rcl
mov
push
sti
cmc
cld
jg
inc
sbb
lds
lret
inc
sbb
or
in
dec
pop
pop
iret
or
push
test
leave
jl
cld
sub
fldt
out
cmpsl
mov
or
cmp
adc
cltd
mov
sahf
inc
lcall
jp
push
xor
ret
mov
fdivl
inc
fwait
leave
cmc
xor
daa
sub
mov
cmpb
add
add
data16
pushl
pop
mov
xchg
adc
mov
and
in
mov
rorl
fidivs
pushf
or
je
xchg
mov
je
test
in
lea
popf
xchg
dec
inc
mov
cmp
pop
mov
sbb
fistpl
mov
mov
mov
cmp
jp
add
sbb
ret
mov
add
push
pushf
mov
cwtl
push
aam
xchg
mov
jmp
xlat
stos
mov
adc
mov
fsts
mov
negl
jae
fldt
popa
cld
and
xchg
mov
or
push
mov
cmpsl
jnp
sub
or
jb
lods
push
cltd
jo
adc
jbe
cmpsb
sbb
sbb
adc
loope
rcrb
push
inc
clc
or
fwait
push
dec
mov
and
add
or
gs
push
aas
fwait
lret
in
mov
mov
pop
mov
gs
jl
add
mov
inc
mov
rclb
mov
mov
ret
add
hlt
cwtl
movsb
cmp
clc
js
test
adcb
lea
mov
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
add
mov
popf
mov
add
lods
xchg
sub
adc
pop
out
mov
dec
sbb
xchg
mov
mov
mov
stos
adc
sbb
popl
lods
test
sbb
xchg
add
push
inc
sub
add
mov
mov
lods
movb
xor
fstps
push
xchg
js
popf
test
mov
addr16
mov
or
sbb
mov
fwait
push
dec
mov
cmp
pushf
xchg
inc
cwtl
dec
and
mov
fcomp
jnp
sub
clc
scas
lcall
cmpsl
ret
xchg
fstpl
cmp
jne
lods
push
mov
aam
or
xchg
or
loope
or
mov
int
ds
pop
mov
mov
sbb
fdivs
call
shr
repz
inc
in
mov
add
mov
cmp
jp
add
sbb
ret
mov
add
push
pushf
mov
cwtl
push
aam
xchg
mov
jmp
xlat
stos
mov
adc
mov
sbb
dec
mov
mov
xor
mov
aad
dec
cmpsl
xchg
test
lret
rcrl
dec
push
xor
pop
stos
xchg
cmp
mov
xor
cmp
stos
xor
xor
cwtl
enter
test
and
mov
or
lock
cwtl
xor
lret
xchg
xchg
sub
adc
ret
push
mov
sbb
pop
cmp
pop
gs
jl
add
mov
dec
mov
loop
cli
mov
mov
shrb
cmp
clc
movsb
xchg
xchg
lods
mov
pop
pop
add
dec
mov
and
mov
test
add
imul
fucomp
lock
into
mov
jno
mov
mov
mov
push
mov
and
mov
scas
adc
and
mov
les
pop
cli
sub
mov
out
out
xchg
lret
sar
xor
cli
into
xchg
stc
cli
in
test
cmp
call
pushf
inc
sbb
adcb
divl
or
imul
arpl
sbb
cld
cmp
fidivs
dec
shr
xchg
pusha
push
cmp
push
mov
fisttps
js
pop
les
sub
or
idiv
das
andl
mov
inc
or
xchg
mov
sub
mov
cmp
xabort
pop
fdivrl
sti
repz
jno
xchg
rclb
or
xchg
inc
inc
mov
enter
cld
outsl
mov
cmc
clc
pop
movsb
dec
rorl
rolb
cmp
popf
into
adc
int
cmp
stos
push
mov
call
dec
fdivrl
nop
fcomps
dec
lds
or
outsl
mov
xor
imul
das
jb
call
sbb
enter
lret
lcall
mov
pushf
lret
dec
pop
insb
cwtl
loopne
xchg
ret
test
in
mov
lds
adc
pop
scas
dec
fs
stos
push
enter
jbe
mov
jmp
xchg
push
clc
ss
aas
cmpsl
xlat
add
arpl
xchg
idiv
mov
mov
xchg
mov
cmpsl
adc
addr16
fwait
pop
sahf
pop
cmp
insb
jbe
lret
xchg
push
jmp
cltd
fs
adc
data16
popf
mov
mov
aam
mov
hlt
nop
xchg
mov
add
xchg
or
popa
mov
pop
xor
or
pop
mov
mov
fucomip
repz
push
push
cli
ret
pop
pop
xor
mov
mov
sub
pushf
ret
pop
pop
inc
mov
cmp
lods
ficoml
mov
sahf
les
adc
aaa
push
imull
fs
mov
fistps
jne
sbb
lret
push
rcrl
mov
daa
mov
mov
mov
pop
mov
or
dec
pushf
jbe
lods
out
or
pop
or
scas
aaa
mov
cli
jnp
inc
mov
adc
inc
loop
mov
fwait
js
les
rcrl
push
fbld
xlat
insb
jae
cli
xor
outsl
mov
fs
fdivs
popf
iret
and
cmp
cltd
jmp
sbb
mov
mov
adc
mov
pop
cmp
movsl
daa
lock
and
cmp
add
xchg
fisubs
adc
pop
or
pusha
xor
jae
mov
sbb
inc
aas
rcl
or
lods
inc
gs
cwtl
push
lock
xor
adc
sub
add
mov
dec
inc
mov
mov
and
mov
mov
out
cmpsl
mov
or
cmp
adc
mov
les
push
mov
add
pop
js
jmp
fwait
lods
add
shrl
jg
pop
xlat
fcoml
fwait
add
add
andl
dec
rclb
sbbl
stc
bnd
inc
xchg
jmp
inc
insl
xchg
imul
jle
shrb
fsubs
sub
mov
cwtl
mov
mov
sbb
and
cmp
cwtl
movsb
cmp
clc
js
test
xor
sbb
fsubs
pop
mov
mov
test
sub
in
imul
movsb
adc
mov
divb
addr16
add
arpl
add
mov
test
loop
inc
cltd
dec
xor
call
rcrl
dec
bound
xchg
dec
inc
shlb
sbb
or
mov
adc
add
add
adc
sub
inc
sbb
push
cmp
mov
ss
ret
adc
mov
fistpll
adc
es
hlt
mov
push
aas
jb
jmp
call
mov
bound
cmc
mov
mov
or
pop
out
daa
mov
jecxz
adc
push
mov
mov
sbb
out
push
hlt
mov
inc
mov
scas
xchg
ror
int3
xchg
aas
push
sub
sub
xor
fdivrl
xor
adc
cmp
fists
add
popf
sti
sti
jo
jns
add
jmp
cld
or
ret
dec
test
icebp
mov
xor
mov
lahf
ljmp
movsb
leave
pop
sbb
scas
jae
sub
mov
lahf
ret
cmpsl
test
pop
pop
outsb
push
inc
sbb
subb
mov
stos
add
sub
xor
jb
cltd
fstl
jnp
lods
cmp
in
iret
incl
fdivrl
stc
and
push
mov
or
add
jle
out
jp
inc
cwtl
dec
cmc
xor
cli
in
push
int
sub
inc
popf
cmp
cmp
xor
cmovg
std
adc
mov
push
adc
mov
inc
enter
daa
adc
nop
cmc
bnd
das
or
les
jns
pop
mov
test
clc
aas
fidivs
jne
pop
dec
aaa
add
cmp
inc
pop
and
out
mov
test
jle
jmp
les
push
cmp
clc
aaa
stos
xor
jae
mov
les
fcoms
addr16
mov
aam
movsl
cmc
add
jl
arpl
xchg
les
adc
js
jbe
cmpsl
mov
mov
push
pop
add
rclb
out
sub
pop
js
js
dec
test
rclb
dec
xchg
pop
ds
inc
nop
or
shlb
inc
in
imul
xchg
mov
insl
or
pusha
fs
int
stos
popf
iret
and
mov
mov
jb
jg
or
xor
gs
shl
cwtl
cmc
xor
pop
das
or
mov
mov
sarl
inc
iret
sar
int
lods
add
inc
divl
stos
sbb
cmp
dec
fsub
xor
add
xchg
test
les
xchg
push
sarb
aad
pop
iret
mov
mov
sarl
mov
pusha
cmc
mov
add
bound
leave
xchg
lcall
int3
xor
ficompl
shrb
adc
fidivl
sub
in
inc
pop
lcall
sbb
lods
icebp
std
mov
sbb
add
pushl
rcrb
dec
fwait
mov
popf
mov
in
pop
mov
out
pop
stos
pop
cltd
pop
cmp
out
cmp
in
scas
mov
lret
dec
inc
xor
outsb
mov
sbb
mov
hlt
dec
mov
and
jle
pop
pop
mov
sub
or
adc
popf
movsl
pop
sub
pop
adc
out
cli
mov
xor
mov
cltd
test
pop
sbb
adc
jecxz
dec
rorb
adc
fsubrl
cmp
push
sub
push
bnd
mov
mov
push
adc
pushf
dec
or
leave
insl
test
outsb
push
mov
imul
push
mov
jae
movsl
cmp
push
mov
sbb
fnstcw
inc
bound
xor
icebp
and
sbb
test
mov
std
pushl
or
mov
jmp
push
xchg
mov
mov
xchg
insb
jbe
jp
call
pop
inc
es
lea
js
popf
iret
adc
xchg
pushf
aam
aaa
and
cmp
mov
jl
adc
dec
and
push
gs
jbe
mov
inc
mov
mov
roll
xor
call
inc
mov
in
test
pop
dec
jo
dec
inc
ffree
imul
push
pop
push
or
mov
hlt
mov
mov
fisttpll
ljmp
mov
jne
in
outsl
pop
or
jmp
rorb
mov
cmpsb
xchg
mov
in
dec
sub
aad
imul
inc
mov
fcompl
jbe
sub
aaa
pop
cmp
jg
mov
pop
xlat
decl
cltd
lcall
inc
mov
mov
dec
cmp
addr16
fwait
pop
popf
pop
cmp
push
in
mov
movsl
mov
pop
cmp
leave
inc
adc
out
clc
cwtl
and
mov
popf
out
adc
push
pop
fimull
sbb
and
push
or
popa
mov
rcrl
fstpl
cmpsl
lods
int
jp
adc
aas
mov
insl
xlat
inc
inc
mov
and
loopne
out
nop
sahf
aad
ja
mov
shlb
cld
jg
pop
push
jno
or
addr16
ljmp
push
les
adc
push
sub
subl
jge
test
movsl
daa
adc
lods
mov
subl
xchg
jae
xchg
fwait
adc
test
divb
shrl
mov
in
negl
xchg
push
sbb
js
das
popa
or
lret
sbb
adc
add
fs
mov
inc
and
xchg
imul
das
cmpsb
gs
cmpsb
imul
clc
popa
mov
hlt
jne
lret
dec
inc
xor
fwait
inc
and
and
inc
cmc
or
push
or
popa
mov
pop
sarl
sub
push
jp
pop
fnsave
ds
push
jae
or
add
push
lret
sbb
jecxz
aam
sbb
mov
mov
cld
jg
sbb
aas
add
popa
and
dec
push
sub
add
sbb
push
aam
pop
xchg
lods
testb
pop
jmp
jp
lret
scas
jno
inc
movsl
insl
lret
sahf
xchg
stos
arpl
push
mov
mov
fwait
fs
cmp
jns
push
mov
inc
pusha
push
lcall
mov
or
jg
ret
sbb
cltd
cwtl
xlat
in
divl
rcrl
std
decl
and
or
out
addr16
addr16
fwait
aas
rclb
call
inc
gs
in
cmovnp
outsb
xlat
push
pop
xorl
pop
ds
and
xchg
lea
and
loop
mov
mov
sub
or
mov
lahf
inc
loope
cmp
push
cld
aas
fdivrs
pusha
xor
incl
ret
mov
ret
add
jecxz
cld
or
mov
and
ret
cmp
outsl
sub
mov
mov
leave
mov
and
xlat
std
int3
push
repz
loope
add
shll
mov
push
push
mov
mov
sbb
call
push
mov
jp
mov
repz
push
mov
mov
mov
test
in
xor
mov
rcrb
dec
adc
fucomp
push
leave
lods
xlat
insb
imul
sbb
pop
adc
mov
dec
inc
xor
or
mov
movsb
popf
dec
and
gs
sarb
push
fildl
add
fstps
add
ja
lret
or
add
adc
xchg
dec
aaa
mov
pop
dec
shlb
cld
jg
inc
sbb
push
inc
sbb
push
les
sti
dec
add
icebp
stos
xor
test
enter
xor
out
push
aas
and
cmp
cltd
inc
push
push
cltd
add
jge
pop
mov
mov
push
cmp
mov
fadd
fcmovne
es
cld
movsb
cmp
in
mov
ss
inc
cmpsl
xlat
in
mov
adcb
dec
in
ds
xchg
and
rol
cmp
cmpsb
xchg
insb
jbe
jb
test
gs
in
pop
test
pop
lea
ljmpw
inc
je
dec
lds
ds
jl
outsb
out
std
hlt
or
push
sub
push
mov
lds
int
push
clc
repnz
enter
inc
iret
cmp
pop
add
iret
fwait
cmp
jae
add
mov
repnz
movsl
pop
inc
sbb
jg
pop
ret
dec
sub
dec
mul
fs
sub
dec
mov
dec
mov
pushf
mov
lahf
jp
push
ret
fucom
push
jl
pop
pop
pop
mov
cmp
adc
cltd
push
push
stos
mov
add
jnp
add
jl
in
sbb
jmp
mov
icebp
jnp
xor
pop
push
cwtl
add
cmp
jb
push
dec
std
inc
or
xchg
pop
jmp
and
repz
pop
mov
sub
popf
push
mov
cltd
call
add
out
cmp
add
mov
sub
sub
sub
add
testl
inc
mov
imul
add
iret
fwait
cmp
std
mov
scas
roll
fcomps
fs
lcall
dec
test
icebp
hlt
sbb
rcl
mov
fists
in
adc
scas
jns
cmpl
jmp
adc
stos
orb
pushf
test
icebp
cmpb
add
adc
mov
das
ret
pop
pushf
imul
pushf
add
int3
xor
jno
loope
mov
push
mov
inc
rclb
push
mov
inc
aam
push
es
dec
mov
pop
repnz
mov
sbb
or
ljmp
mov
or
pop
shlb
push
xor
jne
push
mov
fsubp
test
sub
lret
gs
das
in
cmc
hlt
cwtl
movsl
popf
repz
iret
sbb
add
ss
jecxz
jp
push
inc
subl
ffreep
ficoms
jae
mov
mov
mov
cmpsl
nop
testb
rcrb
pusha
frstor
nop
push
lcall
rcrl
sbb
fs
cld
sub
std
mov
pop
test
scas
pop
add
mov
jne
test
ja
lds
cmp
push
cmp
and
jp
xor
icebp
sbb
cmp
sub
pusha
mov
push
xchg
or
sarb
fmull
and
or
mov
pop
loope
xchg
imul
in
mov
mov
jnp
enter
lea
mov
out
cmp
pop
test
jo
cmp
xchg
sub
push
jmp
dec
sbb
xchg
mov
cmp
and
mov
test
movsl
sbb
jp
add
ret
cmp
mov
out
sbb
sub
je
outsl
aam
pop
mov
movsl
aam
jbe
mov
xor
shll
inc
lock
xchg
mov
insb
rorb
rclb
pop
cld
jmp
les
sbb
inc
sbb
fcmovne
sarb
inc
lcall
cmp
test
lods
inc
sbb
scas
xchg
lahf
mov
fucompp
repnz
in
ret
arpl
subb
or
or
inc
sbb
push
pop
mov
dec
mov
xor
add
xchg
aad
jns
call
jno
or
pop
fsubs
sti
mov
gs
icebp
or
or
inc
or
scas
xchg
mov
push
inc
mov
imul
std
sbb
cmp
mov
jne
in
aad
adc
xchg
lret
mov
or
imul
ret
inc
mov
push
lock
jnp
pop
adc
xor
negl
hlt
jns
iret
xchg
and
sti
cli
cld
std
scas
lods
mov
popf
gs
add
or
bound
jge
scas
xchg
ficoml
push
mov
loop
jmp
xchg
pop
push
lcall
fsub
bound
in
stos
dec
shl
stos
leave
loop
out
inc
mov
or
add
xor
mov
hlt
dec
fidivrl
jecxz
out
pop
xchg
and
sbb
dec
add
bound
out
test
gs
in
cltd
out
cmp
jecxz
dec
pop
jb
sahf
rcll
adcb
sub
mov
push
adc
sahf
xlat
mov
call
pop
fsub
loop
pop
adc
lret
pop
jg
call
or
cld
scas
push
mov
xchg
push
push
aaa
mov
jo
and
dec
rorb
ljmp
cmpsb
dec
sbb
xchg
fs
aas
stos
xor
mov
popf
lret
xlat
jmp
jnp
xchg
imul
inc
inc
mov
shr
inc
sbb
arpl
push
xchg
ja
xor
lock
adc
mov
lods
idivb
enter
dec
test
enter
sti
arpl
into
mov
push
add
and
shrb
push
lret
ret
out
aam
sti
cltd
sub
jo
xchg
imul
mul
mov
cmp
xlat
in
inc
xor
push
adc
and
rolb
xchg
cmp
ljmp
lahf
mov
fsubrl
mov
leave
insl
xchg
add
std
cld
dec
inc
dec
aam
mov
imul
or
add
mov
fcomip
loop
cmp
ss
mov
inc
bound
aaa
cwtl
pmuludq
shll
mov
mov
sub
sub
lahf
cld
nop
sub
insl
push
jns
test
jns
in
xchg
mov
push
mov
mov
pop
imul
adc
pop
xchg
jb
mov
mov
aad
mov
iret
call
shlb
cmc
xchg
sub
adc
add
mov
leave
daa
push
mov
sub
push
mov
mov
fwait
lret
in
mov
mov
mov
jl
cmpsb
xchg
xchg
sti
and
sti
and
sbb
mov
mov
movsb
imul
mov
mov
popa
push
test
cltd
cwtl
mov
icebp
sbb
movsb
adc
icebp
clc
sti
mov
out
movl
add
push
mov
aam
adcl
pushf
jbe
xchg
push
xchg
push
lea
mov
inc
pop
dec
repnz
dec
mov
inc
ret
mov
shll
dec
bound
mov
les
movsl
push
sti
addr16
dec
mov
out
cmpsl
pop
fs
add
sub
into
cmp
fucomi
repnz
lahf
mov
inc
sti
and
adc
inc
mov
fdivs
fildl
mov
imul
mov
xchg
adc
ret
pop
mov
mov
mov
jb
fwait
pop
xchg
inc
xor
dec
sbb
xor
dec
sub
xor
push
mov
xor
push
sbb
xor
sarl
pop
test
cmp
and
ja
es
jno
enter
dec
mov
or
mov
iret
iret
imul
mov
stos
dec
mov
and
sub
and
aaa
sbb
sub
ljmp
jle
js
call
or
adc
sbb
test
cmpsb
mov
mov
mov
mov
sbb
test
lods
rcrb
push
pusha
mov
rcrl
mov
loop
cli
test
sbb
roll
arpl
ret
add
sarb
stc
sub
lret
les
cltd
adc
clc
enter
fwait
mov
gs
cmpsl
ret
pop
jge
in
mov
enter
push
xor
lea
mov
es
push
adc
dec
mov
dec
mov
mov
push
sbb
and
shrl
movsb
pop
jbe
cmp
xchg
ja
adc
push
mov
jecxz
mov
mov
ret
push
sbb
sbb
movsb
dec
mov
adc
sbbl
clc
lods
jb
sbb
clc
ror
push
push
jno
mov
jge
dec
lahf
mov
dec
adc
ret
mov
sbb
push
xor
ret
inc
mov
mov
fimull
cld
outsb
sarb
xor
loope
ret
pop
jno
pop
sub
in
pop
rclb
pusha
add
icebp
sbb
or
mov
pop
cmpl
repz
add
sub
sbb
cli
and
or
mov
xor
push
lds
jg
movswl
jmp
std
mov
sti
and
sahf
xchg
test
dec
push
or
xlat
pop
mov
mov
mov
into
pop
stos
rorl
dec
mov
push
sahf
sbb
test
adc
cmp
mov
popf
mov
xor
shlb
sub
fsubrl
adc
ret
sbb
insb
mov
lods
cmp
mov
jne
stc
pop
pop
ljmp
dec
dec
mov
pop
std
aad
dec
cmpsl
xchg
test
dec
mov
daa
or
lock
movsl
adc
jl
fistpl
pop
push
adc
add
lahf
cmpsl
adcb
lods
movl
sarb
js
fwait
adc
test
or
dec
sub
dec
jmp
push
call
adc
and
pop
jge
mov
pushf
xchg
enter
pop
cmp
fucomp
rclb
std
pop
mov
push
call
enter
sbb
hlt
jl
adc
adc
cltd
mov
daa
adc
adc
xor
mov
arpl
ficoml
lcall
sbb
fsubrs
popf
mov
cmp
jp
add
adc
sbb
mov
insl
lcall
lret
movsl
mov
imulb
adcl
lret
sbb
gs
pop
push
rcll
in
ror
in
sbb
les
pushf
inc
xchg
dec
xlat
sbb
inc
push
sub
into
cltd
pop
stos
xchg
dec
scas
xor
or
scas
mov
dec
push
loopne
ret
int3
scas
aaa
lods
loope
xchg
outsb
movsb
inc
fdiv
repz
nop
xchg
sbb
mov
inc
lds
decl
mov
pop
adc
outsl
mov
xchg
ja
movsl
rcrb
andl
leave
movsb
jp
cwtl
push
movsl
icebp
xor
test
xchg
sbb
xor
and
fistps
or
mov
dec
daa
sub
mov
addl
insl
test
inc
mov
movsl
pop
sbb
adc
stc
sti
mov
imul
divl
jne
aaa
xor
insb
mov
dec
leave
ja
in
push
hlt
lods
jns
stc
fisubrs
leave
sbb
movsl
movsl
imul
and
xor
ljmp
push
pushf
loop
or
sbb
mov
mov
cltd
lret
stos
push
ret
popf
je
aad
mov
dec
cltd
shll
jae
nop
shlb
adc
sbb
xor
insb
ss
lods
je
out
idivl
xor
push
jecxz
jo
xorl
jle
out
jp
dec
xor
adc
adc
pop
pop
or
fxch
lcall
aaa
gs
sub
faddl
inc
pop
pop
jno
shr
and
adc
mov
mov
das
xor
cmpsb
and
push
pushf
dec
add
pop
and
std
push
mov
pop
push
iret
or
jns
mov
nop
mov
repnz
adc
add
cmpb
iret
movl
sbb
mov
mov
loop
or
push
pop
push
icebp
imul
cmp
push
sbb
mov
out
cmpsb
ret
lret
add
dec
sbb
les
popf
ret
jo
pop
xchg
xor
jge
pop
xor
jnp
js
mov
jmp
or
and
subl
pushf
add
cmpsl
sub
cltd
jnp
pop
mov
hlt
ficompl
inc
pop
mov
inc
sbb
inc
mov
call
or
mov
jl
stos
mov
int3
add
int
icebp
mov
or
decb
sub
out
aad
cwtl
mov
mov
int3
lcall
mov
arpl
out
add
call
jecxz
int3
cmp
add
lcall
orl
jns
adc
ret
leave
push
mov
dec
sbb
pop
jnp
xchg
xor
inc
xlat
int
inc
rcrl
mov
pop
std
ret
mov
xchg
test
sub
fdivl
xorl
leave
xchg
xlat
jl
add
lods
jecxz
mov
xchg
push
sbb
scas
divl
jge
push
fwait
sbb
sbb
push
cwtl
add
arpl
add
js
lea
and
pop
outsb
mov
push
fisubl
and
movsl
cli
ss
lds
mov
or
and
jecxz
jmp
cmp
test
push
loope
cmpl
add
sub
imul
mov
fildl
je
or
nop
rorb
xchg
stos
inc
push
push
mov
shll
test
stc
mov
sbb
mov
fistpl
or
add
leave
sbb
movsb
ret
lods
out
int3
fnstenv
ret
les
xchg
jl
sbb
mov
push
sbb
adc
dec
sub
xor
lods
sahf
pop
js
jecxz
stos
popf
xchg
pop
and
in
adc
sbb
sbb
ds
pop
jb
adc
xor
xchg
insl
mov
stc
xor
prefetch
dec
inc
insl
sti
jmp
cmovne
cmp
fcomp
pop
fdivrl
jnp
fdivs
mov
addb
inc
inc
mov
sbb
or
mov
popf
lahf
push
mov
sarb
orb
inc
popf
shlw
fldenv
mov
std
data16
iret
subb
inc
rcr
sbb
mov
daa
push
pop
push
int
push
movsl
shrb
xor
in
xchg
std
add
mov
jb
or
lret
sbb
xchg
mov
push
aaa
mov
mov
cmpsb
fwait
jl
and
mov
cmp
je
adcl
mov
gs
ja
xchg
fidivrl
or
xor
bound
push
sbb
clc
arpl
call
pushf
mov
sti
and
mov
or
mov
dec
fdivrs
sbb
popf
es
sbb
enter
or
xchg
pop
inc
pop
pop
addr16
ret
adc
lcall
dec
add
and
movsb
hlt
popf
pop
cltd
mov
add
xchg
shr
mov
or
jp
cmp
bound
mov
add
mov
leave
mov
and
lds
rorl
movsb
test
xor
mov
test
js
inc
jb
add
push
push
mov
iret
pushf
or
nop
adc
stos
out
push
stos
lods
mov
push
lahf
stos
and
mov
push
cmc
jns
cmp
lret
jmp
test
nop
daa
sub
pop
lret
sub
lods
sub
popa
or
xchg
jbe
mov
jno
aad
rcrl
lret
inc
jae
cmp
mov
mov
cmc
cmp
ret
jns
cmp
fsub
mov
shlb
in
lcall
arpl
pop
mov
adc
leave
sub
push
mov
push
jmp
ret
fldl
jnp
imul
dec
mov
or
call
cld
sbb
xor
pop
add
dec
add
fwait
dec
inc
lret
loope
dec
sbb
push
pushf
lret
sbb
cmpsl
sub
lcall
fwait
jp
lret
test
in
scas
inc
leave
lret
pop
mov
in
inc
mov
les
mov
mov
pop
out
push
sub
inc
mov
leave
testl
dec
pusha
sub
lds
pop
lret
cmpsb
lret
fucomp
pusha
in
mov
imul
cmp
ret
out
test
sbb
sbb
push
sub
test
rorl
in
bound
and
arpl
shl
add
mov
mov
xlat
jno
popf
cmpsl
sahf
xchg
je
mov
or
pop
rcrl
decb
les
cmp
jns
fdivrl
addr16
xor
lahf
outsl
aas
ret
repz
lahf
outsl
cld
xor
mov
mov
xchg
lods
repnz
mov
cmpb
lahf
adc
dec
sahf
inc
sub
jo
movsb
xchg
adc
fistl
mov
mov
fstl
ret
pop
sbbl
add
lods
jo
mov
sbb
sbb
mov
iret
push
sbb
pop
lods
mov
popf
fwait
sub
inc
xchg
jb
sbb
shrl
into
in
out
sahf
mov
lods
cmpsb
or
shr
pop
daa
bound
dec
push
sub
aas
or
sub
add
dec
les
mov
out
mov
add
sbb
push
xchg
push
test
stos
mov
fmull
xor
sbb
cmpl
xchg
mov
jge
sbb
lret
xor
add
mov
push
pop
scas
call
movb
mov
pusha
sbb
xor
and
cwtl
or
inc
sbb
cmp
shr
mov
loope
out
jne
jmp
popf
xchg
jl
mov
pop
adc
pop
and
xchg
int3
mov
sbb
jno
lcall
sub
mov
jp
add
mov
or
ret
push
lods
xchg
sub
adc
fnstcw
ja
inc
in
aad
push
test
scas
xchg
pop
imulb
daa
xchg
test
or
adc
or
test
aam
cmp
rorl
stos
fcmovnb
mov
into
xor
icebp
cmp
cmp
ret
push
mov
fsubrl
repz
dec
mov
mov
dec
sti
arpl
pop
cmp
mov
in
loopw
aam
xchg
fwait
xor
aam
fs
iret
adc
lahf
insb
mov
dec
push
pop
pop
pop
popf
aas
out
jne
je
lea
mov
rcll
iret
xor
and
je
mov
add
xchg
mov
pop
test
call
mov
ljmp
jl
push
inc
subl
test
pusha
inc
sbb
mov
repnz
lock
sbb
inc
shr
int3
cwtl
lret
movsl
push
xor
inc
cmpsb
sbb
jns
push
add
test
lret
mov
sbb
push
pop
testb
jns
mov
sbb
sbb
cmpsl
push
push
or
pop
loopne
jns
adc
dec
movsb
aad
xor
xor
cli
idivb
mov
cmp
jo
inc
mov
pop
jmp
or
sub
data16
xor
nop
dec
and
cmp
cli
jae
push
xor
fisubl
jge
outsl
scas
inc
cmp
hlt
int3
mov
mov
sbb
jl
rorl
pop
pop
push
mov
or
scas
mov
pop
jns
mov
movsl
mov
pause
mov
mov
fdivr
loope
movl
retw
mov
add
iret
fs
fsubrl
pop
imul
cwtl
pop
stos
push
sub
cmp
popa
and
jae
in
stos
outsb
inc
pop
lcall
xchg
stc
stos
or
shlb
icebp
lcall
mov
mov
stos
xchg
stos
mov
sbb
add
mov
sbb
lock
mov
cmp
pop
scas
std
test
shll
punpcklwd
inc
xor
push
or
cmp
mov
cmpsb
mov
mov
or
test
pop
xchg
lahf
lahf
repnz
mov
pop
fidivrl
push
sbb
mov
xor
imul
push
jp
sbb
mov
cwtl
pop
gs
loopne
cmc
mov
movsb
adc
fsts
pop
or
adc
imul
or
jnp
add
add
cltd
addb
lock
adc
mov
jg
fwait
ljmp
pusha
pop
fldt
in
dec
push
inc
inc
lahf
stos
mov
mov
clc
sub
dec
jo
fnstenv
or
sbb
dec
xchg
sub
sbb
mov
adc
lret
mov
aad
rcll
inc
inc
sbb
xor
fmull
jae
and
add
arpl
int
stos
dec
lea
jle
insl
add
mov
jge
pop
dec
mov
gs
xchg
and
mov
enter
aas
sti
sti
and
sahf
xchg
test
dec
push
or
mov
xchg
mov
insl
sub
adc
call
orb
aad
push
and
cmc
js
xor
sbb
add
push
mov
mov
xchg
push
neg
and
rcrl
cli
sbb
vandnps
sbb
scas
movl
pop
popa
std
mov
insb
or
push
adc
sbb
aas
cltd
pushf
shrb
rcrb
jne
inc
negb
sbb
pop
or
push
decl
pop
pusha
jge
and
cmp
push
js
lret
dec
ret
mov
loop
add
add
les
stc
fwait
inc
xor
nop
dec
and
pop
fs
out
movsb
jno
stc
xchg
outsl
lahf
sbb
mov
mov
mov
sbb
mov
inc
lea
inc
mov
mov
sbb
mov
sub
fadds
inc
inc
into
daa
mov
inc
pop
fmull
pop
loopne
push
mov
out
mov
jecxz
add
sub
mov
test
mov
dec
icebp
xor
into
addr16
cmp
nop
mov
movsl
lret
dec
sub
adc
out
fbld
mov
jmp
popf
mov
sbb
pop
outsl
mov
lds
ret
int
push
popf
pushf
xchg
dec
cmpsl
stos
xchg
stos
inc
lds
push
cmp
shl
jns
jae
in
mov
add
sub
ss
lds
cmp
xor
pushl
adc
das
xchg
int
mov
lret
add
push
dec
push
xchg
cmc
ss
mov
sbb
push
jo
mov
or
test
cltd
rorl
push
cld
xchg
idivl
sbb
or
mov
jno
dec
mov
adc
or
pop
push
and
fdivs
inc
inc
push
lahf
jb
pusha
mov
in
ja
pop
adc
aaa
add
dec
cmpsl
mov
xchg
pop
aas
cwtl
lret
aas
xchg
out
and
call
push
das
add
mov
pop
xor
or
shlb
in
mov
or
cmp
subl
ss
aam
mov
mov
sbb
cmp
and
push
nop
sbb
mov
mov
mov
popf
fistpll
mov
jp
rcrb
dec
xor
aad
push
push
lods
push
fsubl
fbstp
call
pop
mov
addr16
cmpb
mov
imul
mov
jbe
jb
jmp
dec
cmc
negb
sbb
or
loope
pop
test
lock
dec
out
fucomip
call
mov
push
roll
mov
jo
bnd
pop
mov
cwtl
or
outsl
sub
dec
lcall
mov
xchg
leave
pop
pop
dec
add
ljmp
mov
push
xchg
test
lds
mov
in
js
push
push
adc
enter
ljmp
aaa
lahf
jp
dec
data16
in
mov
outsl
in
pop
lret
jo
jmp
mov
xchg
adc
xlat
in
bound
idiv
push
sti
and
mov
add
jle
jmp
or
adc
mov
mov
cmp
call
cmp
sbb
sbb
rcl
insb
push
inc
mov
aas
adc
cmp
xchg
dec
inc
mov
jge
or
inc
inc
inc
bound
and
loopne
adc
mov
add
add
mov
jae
mov
in
ja
ret
jecxz
adc
ljmp
arpl
stos
xor
shrl
pop
sub
lcall
xchg
cmp
and
pop
xor
mov
repnz
adc
xor
xchg
adc
and
add
add
add
jbe
xor
sub
nop
cmp
inc
xchg
mov
jmp
mov
lea
pop
mov
dec
in
dec
daa
xchg
jecxz
fidivrs
sub
push
scas
mov
subb
cwtl
pop
lods
movsl
mov
cmp
repnz
fwait
dec
jo
push
sub
push
aas
and
push
or
push
int
lret
ret
mov
inc
lock
into
inc
mov
mov
loopne
push
pop
add
fucomp
inc
pop
inc
inc
shl
sbb
movsb
repnz
jae
pop
lods
inc
push
cmc
cld
inc
insl
cwtl
dec
and
dec
mov
repz
nop
xlat
dec
add
inc
imulb
dec
inc
ret
dec
scas
mov
jno
test
cmp
stc
inc
std
mov
repnz
nop
dec
mov
add
push
cmp
and
mov
fs
dec
popa
cvtps2pi
in
cmp
cmp
fdivrs
popf
fistps
sti
sub
rcrb
loop
add
add
lods
outsl
mov
inc
xor
adc
push
out
movsb
push
out
arpl
cmp
sarb
pop
call
fsub
or
mov
and
push
rcr
mov
inc
fwait
mov
ja
ja,pn
mov
pusha
subl
loopne
lret
mov
or
sti
cmpsl
xor
lret
sbb
stc
fwait
pop
enter
jno
pop
rclb
mov
xchg
cwtl
push
and
arpl
test
mov
push
dec
jb
ljmp
and
inc
ds
out
xor
push
ss
push
pop
outsb
push
or
gs
xchg
cmp
in
inc
inc
xchg
in
xchg
push
in
int3
mov
popf
imul
or
ljmp
and
push
in
mov
fiaddl
sbb
inc
inc
cmp
jmp
jmp
adc
mov
fbstp
cltd
test
stc
lods
inc
jne
mov
and
adc
call
jb
rcrb
fldenv
ja
iret
fnsave
sbb
fidivl
scas
iret
fisubrs
rorl
lret
dec
cmp
lahf
add
popf
jmp
cmp
or
cmp
shlb
mov
mov
add
cmp
lcall
iret
add
call
rcrb
jnp
inc
push
leave
dec
mov
sub
clc
add
push
cs
xchg
or
repz
push
pop
mov
movsl
dec
pushf
imulb
xchg
cmp
push
dec
xchg
je
add
lahf
leave
mov
push
push
pop
cld
xor
jg
pop
mov
dec
xchg
loope
pusha
loop
or
xchg
inc
sbb
sbb
out
xchg
mov
fwait
jmp
pop
mov
cmpl
cs
mov
lahf
fwait
stos
push
test
lods
inc
fdivrp
xchg
xor
push
and
sub
jecxz
mov
sub
mov
int
js
pusha
imul
shl
inc
jbe,pt
cmp
cmpsl
repz
dec
mov
shll
loop
ss
sar
inc
and
sbb
sbb
adc
jbe
pop
std
dec
pop
repz
mov
mov
mov
adc
xor
lahf
pop
mov
imul
movl
fwait
div
mov
adc
dec
fidivrs
clc
cwtl
or
push
test
mov
xor
dec
dec
inc
sbbb
cmp
mov
mov
and
in
roll
sub
dec
rcrl
and
jge
push
dec
mov
xchg
sbb
or
adc
sub
and
movsb
les
mov
fldcw
dec
inc
test
push
lea
push
enter
daa
je
and
mov
xchg
cmp
andb
adc
pop
mov
test
clc
sub
push
pushf
mov
mov
mov
sti
ret
lds
inc
rcrb
int3
adc
and
jne
mov
out
lret
sbb
add
mov
pop
cld
repnz
int
adc
xchg
mull
xchg
xchg
mov
pop
cld
outsl
inc
scas
ja
add
push
push
jecxz
loopne
scas
cmp
or
push
cltd
mov
lods
ret
sahf
mov
hlt
push
or
inc
faddl
cmp
cmp
lods
leave
inc
dec
add
add
mov
aam
stc
repnz
inc
fucom
push
sbb
pop
xchg
mov
mov
iret
mov
xor
iret
insl
pushf
ror
adcb
pushf
or
aas
addl
ficomps
xor
lea
cmp
fildll
and
pop
xor
pushf
sbb
test
inc
sbb
cwtl
mul
jae
xchg
or
pop
sub
test
xchg
or
sub
js
out
adc
lret
movsl
dec
sbb
pop
mov
push
ret
stos
push
test
sbb
loop
leave
pop
push
lock
jbe
je
xchg
dec
popf
sbb
les
sub
mov
clc
dec
subl
aad
add
fnsave
scas
dec
push
mov
test
mov
mov
movl
sbb
cmp
call
mov
pushl
mov
fwait
jmp
mov
inc
jecxz
cwtl
rcrb
fldt
mov
pusha
jo
in
pop
int3
cs
lea
xor
cltd
jmp
xchg
cmp
inc
fwait
push
inc
mov
test
outsl
mov
sbbl
sbb
imull
push
stc
jl
push
jge
and
or
and
xor
cmc
sbb
fcomps
aad
xchg
sub
pushf
ss
sarl
lret
mov
and
jg
scas
test
stos
xor
add
fildll
stc
mov
dec
pop
inc
jae
cmpsl
bound
or
xchg
dec
retw
adc
push
dec
scas
xchg
stos
test
or
ljmp
mov
push
mov
jp
xor
mov
mov
cmp
sbb
mov
fwait
push
dec
mov
cmp
inc
cwtl
dec
and
jecxz
lea
test
in
mov
push
inc
and
idiv
les
fstpl
aam
cmp
data16
push
test
insl
xor
mov
das
adc
and
mov
test
push
cmp
inc
into
sbb
loopne
sti
mov
sub
cmp
mov
sub
pushf
ret
pop
pushf
dec
test
jecxz
and
pusha
cmpsb
push
test
test
mov
inc
add
xorb
cli
into
xchg
stc
cli
in
test
pop
xor
test
std
stos
mov
lds
scas
mov
gs
pop
popf
cwtl
cmpsl
roll
shl
sbb
adc
sbb
popf
adc
cli
jnp
inc
mov
mov
inc
sarb
call
test
dec
dec
sub
fwait
xor
push
mov
cltd
rcrl
fwait
pop
decb
cmp
sti
and
or
loopne
dec
jb
jb
sub
es
loopne
mov
mov
add
xchg
mov
xor
inc
in
mov
add
mov
cmp
jp
add
add
mov
or
mov
xchg
sub
adc
inc
in
xchg
test
sbb
pop
cs
mov
sahf
das
xchg
stc
cli
in
test
pop
xor
inc
dec
xchg
rcr
nop
std
stos
sbb
push
push
sub
jp
add
sbb
frstor
mov
cwtl
inc
sbb
mov
mov
incb
or
adcl
imull
mov
popl
lret
out
jp
stc
mov
xor
adc
push
sub
imul
pop
mov
ljmp
xchg
xchg
inc
cltd
enter
or
cmp
mov
sbb
sub
lahf
sub
sub
mov
sub
or
inc
divb
cmpsb
mov
fucomip
repz
push
pop
add
add
add
mov
or
mov
xchg
sub
adc
inc
in
xchg
xchg
push
mov
mov
in
mov
sti
stc
cli
in
test
or
invd
nop
shlb
and
stos
lds
testl
fistl
xchg
ja
mov
mov
data16
mov
push
repz
jo
mov
pop
jb
pop
dec
mov
sti
push
dec
aam
dec
data16
xor
dec
sarb
inc
push
fdivrs
xlat
add
mov
push
cmpsl
jnp
enter
cmp
sti
and
or
and
and
and
movsb
mov
xlat
adc
rcrb
push
pop
push
mov
dec
clc
aaa
ljmp
pop
xorb
push
test
shll
push
xchg
mov
jbe
add
test
and
imul
mov
mov
xor
cmpsl
inc
lahf
mov
mov
xchg
in
fisubrs
shll
jno
cld
repz
xor
add
or
jge
dec
arpl
stos
std
mov
mov
sbb
das
cmp
stos
xor
xor
mov
in
lds
mov
js
or
cld
addb
in
aaa
and
mov
mov
jnp
inc
push
mov
pop
xor
insl
in
popf
aad
sub
pop
ds
sub
outsl
fidivs
data16
push
adc
sub
loope
and
sub
popf
out
mov
pop
shl
mov
sbb
jns
pop
mov
test
mov
js
pop
icebp
mov
fcom
mov
cmp
push
mov
and
mov
push
pushf
cmpb
adc
inc
in
xchg
nop
push
mov
pop
cs
mov
sahf
das
xchg
stc
cli
in
test
pop
xor
test
inc
sbb
lret
pop
rcl
mov
cmpsb
xor
jb
xchg
pop
lds
xor
inc
xor
fwait
iret
push
fstps
add
out
or
mov
add
pop
and
pop
fcompl
cwtl
inc
fcomps
push
lret
dec
inc
jns
dec
push
adcb
dec
lahf
insl
pop
call
mov
and
jle
inc
ret
sbb
xchg
lea
imul
pop
gs
out
mov
arpl
mov
jecxz
mov
and
stc
mov
divb
cmp
add
xor
cmp
pop
ret
sub
pushf
dec
xor
stos
dec
or
dec
lcall
jnp
sbb
inc
mov
fists
inc
cli
pop
cmp
pop
jo
inc
scas
push
add
lret
stos
xchg
fimull
fisubl
or
cmp
stos
xor
xor
fwait
push
inc
jno
jnp
inc
mov
adc
jo
sbb
add
jp
adc
mov
xor
imul
mov
mov
or
pop
fdivrl
jnp
test
inc
bound
add
outsb
fwait
inc
dec
pop
faddl
jp
mov
cltd
sbb
and
int3
adc
js
test
adcb
lea
fwait
or
iret
add
dec
push
mov
mov
or
add
jbe
shrb
dec
sub
dec
and
mov
les
lcall
sbb
mov
dec
xchg
sub
shll
test
mov
sbb
lcall
inc
jl
mov
flds
lods
inc
sbb
or
scas
aaa
mov
cli
jnp
inc
mov
add
xchg
pop
dec
adc
insl
daa
xchg
and
xchg
mov
inc
push
mov
or
mov
fcoml
cmp
pop
cmpsb
loop
pop
fdivrl
jge
cltd
pop
xchg
pop
imul
out
enter
fwait
inc
inc
mov
int3
push
dec
mov
mov
xchg
xor
mov
cmp
adcb
lea
push
pop
repz
add
sbb
fsubrs
popf
mov
cmp
jp
add
add
movl
aad
pushf
cltd
push
mov
and
iret
mov
popf
jnp
stc
nop
xlat
stos
les
mov
mov
jnp
sbb
std
movsl
dec
mov
ds
je
fnstenv
stc
sbb
les
hlt
dec
xchg
mov
in
insl
mov
add
ss
and
sbb
jge
pop
xor
mov
in
lds
fwait
leave
loop
and
daa
mov
in
cmp
mov
lret
xchg
sub
mov
xor
rcl
test
fnstsw
xchg
cltd
xabort
pop
mov
mov
inc
and
hlt
xor
xchg
mov
ja
dec
sbbb
outsl
popl
and
mov
arpl
int
aas
xchg
cmp
and
sti
in
test
iret
adc
jmp
mov
sbb
test
lcall
inc
cmp
lret
mov
and
push
nop
mov
fstpt
test
fdivrs
add
scas
mov
xchg
fildll
push
mov
insb
push
nop
mov
pop
mov
xor
xchg
or
xchg
or
aaa
lret
fs
mov
cmp
fstl
mov
cmp
std
cli
jnp
inc
mov
adc
rcrb
xor
mov
jns
sub
stc
repnz
movsl
ret
jp
popa
mov
mov
cmp
or
fwait
xchg
xchg
inc
cltd
enter
or
cmp
mov
sbb
cmp
ret
push
adc
fisubs
testl
call
pop
sub
mov
dec
pop
add
adc
pop
ds
mov
jns
mov
add
insl
adc
dec
jp
lcall
push
cwtl
hlt
dec
loope
mov
sbb
lahf
jb
ljmp
ja
loope
add
pop
xor
cli
into
xchg
stc
cli
in
test
pop
xor
test
std
pop
add
hlt
cmp
xchg
stos
jge
imul
dec
pop
test
hlt
xchg
mov
test
push
in
adc
cli
jnp
inc
mov
add
adc
mov
xor
jnp
inc
push
mov
xchg
stc
jmp
aad
jns
push
gs
fwait
mov
mov
fnstcw
enter
push
cwtl
es
pop
inc
pop
fwait
adc
sub
lcall
adc
cwtl
dec
and
mov
mov
test
fwait
jg
in
repz
hlt
mov
mov
dec
pop
sub
or
cmp
popf
jl
and
ret
icebp
ret
sbb
add
dec
scas
push
sub
inc
cmc
sbb
std
movsl
dec
pop
lret
shr
je
or
sub
cmp
or
cmp
adc
cltd
lods
mov
inc
lcall
jp
push
xor
ret
mov
cld
loop
mov
loop
in
nop
xchg
aas
aaa
cwtl
hlt
addl
add
sub
mov
dec
xor
jno
mov
xchg
mov
pop
pop
scas
call
cmp
pop
lea
push
and
mov
inc
adc
rolb
mov
cltd
mov
xchg
cmp
adcb
imull
cmp
add
iret
mov
in
test
hlt
std
iret
daa
mov
add
cli
lock
rorb
cltd
and
gs
mov
add
mov
push
push
cli
mov
mov
inc
ss
cmc
dec
or
lods
lahf
mov
xchg
int3
nop
cmp
sbb
cli
fs
push
test
or
xor
loope
mov
pushf
lret
cmpsb
xchg
jno
adc
lahf
scas
jg
fsts
mov
mov
jo
jns
pop
push
cwtl
hlt
stos
arpl
iret
pop
xor
add
dec
fisubrl
dec
sarb
clc
pop
lret
movsl
ret
dec
movsl
cltd
fwait
out
cli
xor
push
push
dec
jns
fwait
lea
cmpb
inc
movsl
dec
leave
hlt
jl
dec
mov
xchg
xor
stos
fmuls
js
test
or
pop
lea
ss
mov
sti
arpl
inc
and
clc
ds
mov
ret
insl
sbb
sbb
inc
pop
adc
movsb
ret
push
mov
hlt
lods
icebp
ficomps
jne
shll
or
test
push
cmpsl
sub
jmp
jae
fisubrl
cmp
pop
pop
in
test
shrb
pop
xchg
test
inc
pop
xchg
int
andl
push
test
lock
mov
mov
cld
sub
adc
adc
pusha
push
jg
or
popf
adc
cli
jnp
inc
mov
add
add
ret
jmp
pop
stos
aam
mov
jnp
inc
push
mov
or
mov
aam
fidivrl
int3
in
inc
and
fisubs
xchg
sbb
repnz
mov
xor
and
dec
inc
ds
xchg
sub
and
pusha
imul
xor
test
int
int
pop
mov
divb
mov
cmc
arpl
lods
xchg
divl
rcrl
add
loope
pushf
sti
test
into
enter
cwtl
jno
decl
jg
js
xchg
dec
xor
xlat
outsl
lods
xor
mov
fldl2e
je
sahf
das
xchg
stc
cli
in
test
or
invd
mov
shlb
fldcw
xor
jne
or
stos
xlat
aad
pop
pop
rcl
lcall
jbe
pop
jp
mov
fisttps
mov
into
mov
in
loop
inc
sarb
clc
mov
adc
jo
movups
add
jp
rclb
dec
aam
stc
mov
xor
push
aas
fwait
lret
in
mov
mov
cmp
test
xchg
inc
cltd
enter
push
and
les
imul
mov
neg
imul
hlt
fdivs
adc
mov
fistpl
rorl
fsubp
jno
xchg
jnp
fidivs
ret
scas
int
enter
jns
hlt
sub
dec
push
imul
cli
jo
pop
dec
mov
pop
ljmp
lods
inc
std
mov
into
push
in
dec
mov
in
test
pushl
les
sbb
inc
sbb
or
xchg
inc
xchg
stos
inc
pop
jnp
sbb
add
pop
pushf
ret
mov
aad
lret
jg
xlat
dec
push
inc
fwait
out
push
rorb
add
mov
not
add
insb
xor
sub
push
jl
pop
movsl
addr16
movsb
xor
and
lds
js
cmp
mov
stos
pop
add
adc
pop
mov
aas
adc
xor
inc
push
adc
or
filds
roll
pop
xor
pop
add
addl
in
sbb
xor
add
lods
inc
stos
cmc
cld
or
aas
push
mov
xor
inc
fs
push
cmp
sub
cmc
sbb
mov
fidivl
mov
jae
inc
push
mov
xor
push
fisttpl
mov
les
rorl
movsb
lods
mov
ja
xor
and
scas
movl
cli
jnp
inc
mov
in
test
mull
jns
sub
stc
repnz
movsl
ret
jp
popa
mov
mov
or
fwait
push
xchg
mov
bound
out
les
mov
add
xchg
mov
bound
dec
inc
lret
pop
popa
add
xor
and
sbb
jmp
xchg
or
or
push
lahf
iret
ret
clc
sti
jae
ljmp
add
add
lret
cmc
rcrl
mov
dec
fsubrl
sbb
jns
lds
nop
les
lds
jge
push
in
mov
jae
mov
mov
fcoms
retw
inc
pop
lcall
sub
jge
or
xchg
shrl
dec
movsb
aad
xor
xor
jnp
js
xchg
cmpsl
xchg
inc
fwait
leave
in
test
or
addl
add
dec
test
dec
fidivrl
inc
cmp
xor
push
test
xchg
imul
mov
adc
mov
lods
cmp
cmp
mov
xchg
rolb
mov
daa
loop
hlt
mov
daa
sub
js
mov
push
adc
xchg
jbe
pop
jno
jns
loopne
pop
movsl
dec
sbb
adc
mov
mov
cmp
jp
add
cltd
je
and
sbb
insl
cltd
sbbl
sub
cwtl
lret
mov
mov
ljmp
lods
mov
inc
fistpll
lret
ffree
stc
mov
push
adc
mov
arpl
pop
and
and
hlt
mov
into
dec
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
fwait
or
insb
mov
mov
cs
ret
sahf
sahf
xchg
pop
js
jg
xor
icebp
sbb
cmp
adc
ret
mov
scas
filds
popl
xor
mov
and
dec
add
test
enter
daa
pop
repz
out
pop
push
xchg
enter
push
loope
adc
inc
inc
je
push
or
ror
dec
sub
loopne,pn
sub
ljmp
pop
adc
fwait
lcall
inc
ret
loopne
jno
or
pop
push
insb
lock
mov
nop
mov
repnz
lock
iret
inc
into
cmpsl
mov
testb
mov
shl
xor
mov
add
mov
pop
fisubl
lret
ffree
jmp
shl
sub
or
sbb
test
push
sbb
xchg
imul
xchg
dec
mov
leave
jns
or
pop
daa
mov
pop
xchg
jge
dec
xchg
or
cmp
push
cmc
je
sbb
mov
xchg
xchg
fbld
outsl
mov
sub
test
push
fidivrl
sub
ret
stos
xor
mov
jge
insl
mov
fisttpl
push
adc
das
nop
fisubl
add
movsb
jne
mov
jmp
mov
push
pop
mov
jns
rorb
pop
movsl
dec
sbb
call
or
mov
and
pop
lahf
lret
hlt
movsl
mov
jg
add
jl
sbb
add
imul
lods
das
mov
cli
stos
repnz
mov
sbb
dec
pop
dec
sbb
xor
pop
pop
push
in
mov
insb
fcoms
popf
daa
adc
ret
mov
dec
xchg
mov
lret
push
ss
fldt
jmp
sbb
cwtl
mov
fcmovnb
push
fcomip
sub
pop
repnz
add
adc
xchg
int
fs
xchg
xchg
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
sub
pop
cmp
cmp
cld
lods
fwait
mov
stos
xchg
out
mov
mov
add
sbb
mov
jmp
mov
dec
adc
shl
dec
mov
inc
imul
negl
dec
mov
sbb
mov
adc
add
add
lods
cmpsb
sbbb
imulb
iret
pushf
lret
loop
les
add
mov
cmp
mov
ffree
stc
push
pop
cld
lods
repz
jecxz
fs
test
add
mov
mov
sbb
mov
inc
mov
sbb
sbb
push
ret
jge
mov
inc
inc
jp
loop
inc
cmp
repnz
xchg
sub
rorl
push
aas
scas
mov
xor
xchg
mov
jge
imul
dec
sahf
xlat
cltd
repz
sbb
push
add
cmc
iret
sbb
or
xchg
enter
aam
sub
out
mov
sbb
loope
enter
push
xchg
mov
pop
in
stc
add
call
cmpsl
into
lcall
and
mov
std
dec
ret
ret
pop
add
insb
inc
push
lock
pop
push
rolb
imul
popf
mov
clc
sub
stc
dec
push
push
hlt
adc
pop
jnp
jns
xchg
sti
fnstcw
jbe
fidivl
mov
jae
test
inc
pop
mov
leave
sbb
xchg
mov
mov
sbb
add
xor
pop
cmpsl
pop
pusha
ja
mov
xor
shll
pop
jmp
mov
rol
repz
adc
repz
or
adc
add
dec
sarb
dec
mov
and
rcrb
inc
insl
in
or
pop
cmp
lahf
insl
push
dec
push
dec
mov
psubusw
jecxz
testl
shl
mov
test
inc
mov
cltd
jo
fldpi
push
and
shrl
adc
andb
stos
mov
das
shr
jp
cmp
mov
enter
movb
lock
adc
xchg
mov
and
xchg
mov
enter
adc
xchg
fsubrl
add
cmpsb
xchg
lret
ffree
jmp
int
add
cmp
sbb
jno
les
or
dec
cmp
mov
ljmp
pushf
xchg
push
or
jp
cltd
fstl
mov
scas
std
leave
stc
mov
cli
testb
andl
andl
push
pop
dec
push
test
dec
jmp
out
popa
cwtl
inc
stos
sbb
or
addr16
test
mov
jnp
pop
popa
jne
xchg
stos
bound
enter
daa
movsb
lret
or
mov
inc
mov
or
stc
inc
mov
out
imul
stc
insl
sub
dec
pop
test
pop
adcl
sti
fisubs
aam
test
jecxz
jmp
sbb
adc
loopne
and
xor
mov
fs
mov
stos
hlt
lret
test
ja
xchg
test
ffree
fldcw
xchg
mov
je
repnz
cli
pop
sbb
sub
sub
imul
adc
pop
jl
jecxz
mov
js
inc
pusha
movsl
jg
stos
push
nop
sub
mov
cwtl
xor
aas
fimull
rorb
push
xorl
rcrb
and
inc
out
dec
and
ds
movsb
out
pop
mov
fstps
mov
mov
cltd
fsubs
out
adc
faddl
in
push
and
mov
popf
xchg
dec
inc
mov
or
out
lods
jbe
mov
scas
push
pushf
dec
add
into
sbb
loopne
sti
mov
sub
cmp
mov
sub
pushf
ret
pop
pushf
inc
mov
jno
lret
adc
mov
dec
scas
inc
std
xlat
push
jmp
in
dec
push
inc
movsl
adc
mov
je
mov
jge
mov
add
lock
push
pop
jae
fbstp
dec
cmpl
stos
fistl
mov
fcoml
fcmovnu
lods
jle
mov
push
or
in
repnz
jnp
inc
mov
mov
inc
sarb
cld
dec
sarb
lahf
inc
insl
sbb
fistps
push
aas
fwait
lret
in
mov
mov
cmp
push
jbe
xchg
xchg
inc
cltd
enter
push
and
les
imul
mov
neg
imul
mov
mov
lcall
pushf
xchg
xor
mov
repz
cmp
sbb
mov
ljmp
and
push
xchg
pop
imul
dec
xor
jbe
int3
rorl
pop
add
adc
pop
fisubl
pop
es
or
sbb
sub
shrb
pop
addb
xor
xchg
int
xor
jb
loopne
sbb
es
cwtl
inc
sbb
sub
fucomi
mov
rorl
mov
stc
xor
pop
sub
test
or
sub
push
loopne
cwtl
data16
push
fidivrl
gs
jmp
mov
popf
mov
jnp
enter
outsl
push
ret
sbb
addr16
cmpb
dec
es
jl
sbb
int
imul
fisttpl
mov
mov
xchg
fadds
dec
cmp
sub
sti
mov
sbb
cmp
sbb
sbb
sbb
push
or
or
and
pop
push
aad
lahf
xchg
push
xchg
dec
scas
aad
imul
js
clc
rcrl
cmpl
mov
jle
xchg
xchg
xchg
mov
jo
lret
sub
cmp
dec
data16
in
and
jp
sahf
or
lret
pop
lahf
fwait
jne
mov
fstps
mov
lahf
push
xchg
mov
insb
push
mov
sarb
aas
cmpsl
xlat
in
test
or
mov
stc
and
push
jmpw
mov
lret
in
mov
mov
cmp
inc
popa
jbe
xchg
xchg
inc
cltd
enter
mov
enter
xchg
xor
dec
arpl
mov
int
pop
add
addl
pop
add
adc
and
pop
stos
shll
int
fisubrs
and
sub
test
incb
sbb
dec
aaa
xchg
adc
mov
xor
sbb
insb
test
sahf
sti
stos
push
test
pop
sbb
loop
mov
repz
mov
repz
stos
cmp
xchg
test
lods
or
cmp
adc
mov
mov
push
ja
nop
mov
add
xor
mov
add
movsb
fisttps
jnp
push
lcall
out
addb
aas
fimuls
cwtl
hlt
pusha
sarb
mov
mov
lret
pop
shll
adc
or
push
lods
xlat
mov
xchg
sahf
sub
lahf
xchg
xchg
jle
call
jnp
jne
push
add
add
andb
js
sbb
mov
movsb
popf
in
mov
mov
xor
and
test
lods
aas
mov
movsl
or
mov
mov
cmp
jp
add
mov
lock
dec
sbb
add
jno
mov
test
xor
shrb
dec
stos
cmp
add
xchg
and
movsl
vsqrtss
pop
push
fucomp
jae
push
clc
sub
int
xchg
dec
sub
sub
fdivl
ficoml
mov
jno
or
pop
arpl
xchg
xchg
pop
cld
add
adc
mov
xchg
pop
jge
dec
dec
js
xchg
jg
adc
mov
fadds
mov
fdivs
inc
or
sub
outsb
mov
jp
push
cmp
mov
push
bound
imul
outsl
out
mov
jne
xchg
push
xchg
into
adc
inc
cwtl
es
hlt
sahf
and
cmp
pop
dec
cmp
or
daa
mov
mov
pop
push
sbb
xchg
pop
and
std
inc
cli
jno
lds
mov
in
clc
push
xchg
xchg
push
jbe
add
mov
aas
cli
or
ret
addr16
cltd
mov
sbb
arpl
adc
push
out
stos
lret
lcall
sbb
fs
sub
lret
sbb
nop
dec
mov
sub
ret
xor
or
mov
adc
pop
test
mov
mov
lds
fucomip
bnd
int3
mov
mov
cmc
cmp
mov
add
cmove
rcl
xchg
cmp
mov
cmpsl
mov
imul
sarb
sub
pop
fdivs
sbb
cmp
xor
jne
cltd
jae
adcl
push
inc
mov
cwtl
mov
loop
jne
mov
and
xor
mov
in
fnstcw
loope
cld
jle
pop
aam
xchg
pop
xchg
lea
in
mov
mov
into
add
push
push
movsl
rcrl
sbbb
pop
dec
mov
jg
mov
and
sbb
mov
imul
mov
aaa
cmp
icebp
add
push
cmp
lret
xlat
rcrl
mov
cmp
xchg
stos
mov
jp
add
sbb
cmpsb
inc
sbb
scas
jg
sbb
imul
loop
xchg
adc
andl
inc
pop
stos
adc
inc
mov
insl
sbb
inc
push
mov
or
mov
rolb
scas
inc
sbb
cmpsb
jnp
sbb
pop
fsubl
xor
mov
enter
enter
int3
inc
pop
sub
mov
fcomps
cmp
cs
adc
dec
cmp
xor
pop
add
cmp
cmp
les
movsl
add
add
insl
adc
dec
jp
lcall
dec
test
loopne
fsubrl
cli
mov
pop
scas
mov
pop
pop
lods
or
cmp
out
or
test
or
invd
mov
shlb
pop
leave
xchg
push
outsb
sub
movsl
adc
mov
lods
pop
xor
cmp
inc
test
add
icebp
mov
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
and
pushf
xchg
inc
cwtl
dec
and
mov
fcomp
jnp
sub
clc
scas
lcall
cmpsl
ret
xchg
frstor
inc
jns
ret
loopne
hlt
push
cmp
lods
icebp
mov
shr
testb
push
and
dec
xchg
jb
mov
rorl
cltd
lahf
iret
or
or
inc
inc
divl
pop
push
mov
mov
rcrl
cltd
or
loop
lret
movsl
mov
mov
fsubrl
push
les
loope
adc
stc
sbb
sbb
mov
sahf
das
xchg
stc
cli
in
test
pop
xor
test
inc
cmp
leave
setae
nop
cmp
les
sbb
pop
cld
sub
xchg
xchg
fstl
cld
xchg
jp
xor
jns
sub
fcompl
stc
scas
rclb
es
and
aam
fmuls
adc
and
xor
mov
cmpsb
xor
mov
loope
fdivrl
cli
or
sub
cmp
test
cmp
fstpl
fcompl
xchg
enter
sbb
and
lret
sub
js
test
xor
sbb
shlb
mov
mov
test
int3
mov
mov
sub
mov
mov
dec
sbb
mov
mov
dec
and
mov
fs
lret
push
icebp
push
rcrb
jbe
mov
cli
xor
or
loopne
test
cli
or
cmp
mov
jecxz
xchg
stos
lds
stos
stos
inc
lcall
cmp
xchg
mov
jle
popl
adc
in
test
dec
add
sti
insb
inc
ret
sbb
mov
jge
sti
sbb
mov
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
sub
pop
cmp
cmp
cld
lods
fwait
mov
stos
xchg
out
mov
aaa
sbb
inc
sbb
or
mov
mov
mov
das
or
pop
lea
fdivs
mov
je
test
fstl
inc
cmpl
imul
pop
add
ds
mov
inc
sbb
icebp
pop
dec
subb
adc
subl
push
jno
les
push
cmp
mov
jle
cld
std
xchg
leave
jo
cmp
sbb
inc
and
jnp
scas
xchg
stos
jge
sbb
inc
movsb
pop
pop
push
mov
lods
jle
sub
mov
inc
pushf
mov
fwait
sahf
push
xorl
push
adc
loop
xchg
mov
idivl
adc
es
add
xchg
add
jo
sbb
dec
and
push
fidivs
adc
inc
and
std
inc
sbb
out
shlb
out
xchg
enter
inc
xchg
mov
int
out
jne
jnp
mov
mov
sbb
inc
xor
les
das
mov
loopne
out
mov
adc
jle
dec
rcr
cmpb
rcr
aas
jb
loop
sbbl
repz
jbe
and
lea
sub
sub
mov
aaa
push
mov
test
mov
arpl
dec
sbb
aad
enter
aam
sub
ret
in
jge
scas
xchg
stos
insl
jbe
dec
cmpsl
push
mov
movsb
pop
pop
scas
dec
fs
push
xor
int3
xor
aad
lds
bnd
jg
xchg
and
xor
add
xchg
mov
xor
dec
mov
stc
mov
movsl
inc
push
mov
pop
xor
insl
in
js
test
mov
dec
cmp
es
xor
shlb
cmp
xor
xchg
push
cwtl
dec
add
mov
mov
xchg
xor
mov
cmp
xor
sbb
cmpsb
repz
ret
mov
xlat
movsl
andb
push
add
sbbb
cltd
js
mov
mov
mov
mov
fdivl
fs
dec
mov
jg
push
push
mov
iret
pop
test
pop
cli
xchg
insb
ret
adc
dec
push
test
int3
imul
shll
test
mov
sbb
cltd
enter
mov
add
repz
and
add
cmp
ret
lahf
sahf
adc
mov
and
leave
insl
xor
pop
aaa
cwtl
hlt
jl
pop
mov
setl
fadds
call
nop
dec
and
inc
inc
sub
xchg
imul
pop
xlat
stc
xabort
pop
fidivrs
add
out
xchg
je
pop
push
int3
jecxz
and
sub
sub
out
jne
imul
mov
aam
jae
pop
divb
les
sti
jmp
repz
repz
mov
xor
add
sbb
jl
mov
sub
pushf
ss
or
lret
mov
and
push
nop
xor
fstpt
test
fdivrs
add
scas
mov
xchg
fbld
inc
fucomp
jmp
jl
lret
mov
sbb
lds
xchg
fwait
adc
sub
and
fldcw
lods
inc
sbb
push
cmp
xchg
inc
fwait
out
pushf
scas
mov
adc
sbb
popl
mov
in
mov
jnp
inc
push
mov
or
lods
push
sub
mov
out
push
lods
xor
sahf
xor
outsl
push
dec
outsb
aaa
popf
mov
pop
add
inc
xor
add
mov
iret
sbbb
adc
cmpsl
inc
mov
xchg
bound
mov
fsubrl
lcall
repz
sti
fsubl
inc
mov
or
fstpl
sub
or
inc
sub
mov
dec
jno
ljmp
stos
push
lods
sub
jno
pop
sub
inc
pop
int3
and
lock
movsl
xor
gs
fadds
xchg
dec
scas
jo
mov
sbb
lahf
mov
aad
mov
or
lahf
inc
outsb
xchg
jle
add
and
sbb
sbbl
push
dec
mov
jno
icebp
push
mov
push
in
xchg
rol
pop
test
mov
out
enter
inc
jnp
mov
mov
lds
enter
insb
aaa
and
lds
xchg
fwait
int
push
fimuls
out
loop
mov
push
stos
add
xor
ds
add
xchg
adc
jae
mov
es
std
mov
adc
dec
cmc
cld
inc
insl
cwtl
mov
fsubrl
aad
lahf
push
jne
dec
scas
aad
jmp
sahf
cmp
sbb
lahf
mov
mov
icebp
stc
inc
ficompl
test
push
mov
dec
xchg
mov
sbb
imul
cmp
clc
add
sbb
aad
dec
jecxz
inc
sbb
push
cmp
fildl
jl
sti
loope
lret
mov
sbb
idiv
sti
add
ds
ja
in
test
clc
pop
cmp
sub
popa
leave
inc
lods
push
xchg
pop
cmp
mov
xchg
into
data16
out
jne
xor
mov
lcall
in
lods
and
mov
mov
xor
stc
or
pop
mov
out
xor
inc
aaa
nop
jns
dec
repz
mov
cmp
adc
in
dec
popa
sahf
mov
sbb
sbb
push
pop
sub
xor
dec
enterw
cli
sub
mov
and
mov
in
lods
mov
xor
bound
test
mov
outsb
in
dec
or
push
cmp
ja
or
fwait
lods
push
pop
ds
mov
pop
xor
cwtl
test
ss
leave
loop
inc
mov
mov
sbb
stos
cwtl
xor
lret
xchg
xchg
sub
adcb
fidivrl
ret
push
out
xor
push
insl
icebp
jle
pop
mov
mov
inc
cltd
enter
repz
int3
or
push
orb
adc
and
ret
mov
call
shr
repz
inc
mov
test
clc
aas
fidivrs
jne
pop
dec
aaa
bound
pop
mov
mov
cld
jg
push
fwait
or
push
cwtl
push
shlb
fucomip
cmc
lret
pop
mov
pop
fimull
fildll
mov
std
mov
popf
lret
insl
xchg
push
cmp
xchg
test
inc
pop
xchg
mov
fldt
pop
stos
rsm
jecxz
addr16
dec
jecxz
sub
pop
xlat
ret
sahf
sahf
xchg
cmp
or
mov
jo
sarb
pop
push
mov
add
xor
jo
or
xchg
ds
je
cmpsb
pop
sub
push
test
lods
xchg
jbe
mov
pusha
jo
inc
clc
mov
sti
sti
and
test
push
or
xlat
pop
mov
mov
mov
imul
mov
arpl
inc
dec
jp
arpl
sbb
and
fucomip
repz
pop
addb
xor
mov
and
adc
sahf
lock
sbb
mov
mov
dec
outsb
and
movsl
inc
mov
sub
add
push
cli
das
les
cli
mov
lret
mov
cld
sub
mov
jae
test
cmp
ret
add
or
fwait
xor
pop
int
xor
jb
loopne
sbb
cwtl
inc
sbb
mov
js
in
movsb
lahf
mov
sub
xchg
sbb
jb
shrl
pop
mov
mov
and
pop
lods
xlat
insb
jbe
push
cmp
in
push
ret
fld1
jb
pop
hlt
or
and
test
push
or
xlat
pop
mov
mov
mov
imul
mov
gs
xorb
mov
in
mov
pop
mov
mov
mov
sbb
or
insl
fwait
dec
popf
cmp
sbb
sub
sbb
pop
push
in
lds
and
pusha
mov
lods
mov
push
in
in
xchg
test
test
mov
sbb
cltd
lea
inc
lcall
jp
push
xor
ret
mov
fdivrl
mov
fwait
leave
cmc
xor
adc
ret
subl
rcll
adc
test
dec
sarb
mov
and
xchg
mov
xchg
fisubs
mov
insl
in
xchg
adc
call
sbb
and
mov
push
or
int
imul
xchg
mov
or
into
pop
stos
roll
pop
pushf
fsub
decl
add
jmp
clc
sub
adc
in
xor
fdivrl
mov
jbe
shlb
or
mov
negb
or
leave
mov
call
push
imul
inc
sub
or
mov
mov
arpl
es
mov
lret
or
int3
out
push
fnsave
fwait
and
add
aad
rcrl
jmp
mov
cmp
iret
cmp
imul
xchg
mov
imul
adcl
mov
mov
xor
nop
mov
adc
aam
jle
clc
fcoms
cmp
mov
and
cmp
imul
mov
sbb
jne
xchg
daa
movsb
xchg
cmp
xchg
dec
xorl
and
and
ret
mov
sbb
cmp
in
mov
or
mov
mov
cmp
jp
add
or
ret
mov
add
setl
dec
mov
mov
mov
cmp
lods
mov
lret
push
sub
mov
iret
movsb
leave
test
mov
inc
push
rorl
xchg
dec
sbb
push
nop
mov
jno
mov
fsubrs
arpl
inc
sub
outsl
test
js
mov
fmul
push
inc
sbb
jo
and
push
mov
sub
push
push
mov
andl
rcr
adcb
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
sub
fld1
xor
loope
cmpsb
jo
out
call
cmpl
enter
xchg
jl
sub
test
and
dec
ret
or
fisttps
and
mov
imul
repz
icebp
test
loope
mov
in
ja
loope
jns
or
nop
dec
mov
adc
lahf
xchg
shlb
scas
aad
sub
fistl
push
cli
xchg
inc
adc
dec
mov
mov
mov
dec
mov
dec
pop
insb
fadds
jns
cld
cwtl
cmp
cmp
push
sbb
jb
xor
movsb
push
shl
es
mov
inc
pusha
sahf
sahf
sbb
or
test
ss
cmc
stc
cmp
aas
add
and
jl
rcrb
sub
lock
pop
push
inc
cmp
hlt
jp
fsts
xor
cmp
push
mov
mov
cld
fidivrs
shll
jb
dec
inc
aaa
popf
mov
mov
mov
add
inc
ret
add
aam
and
xchg
movsb
out
xlat
nop
dec
out
sub
or
faddp
add
lea
xchg
dec
sbb
inc
inc
xor
inc
iret
fwait
cmp
std
mov
mov
shrb
or
pop
stos
push
lods
xchg
sub
adc
dec
out
mov
dec
sbb
lods
test
into
push
add
inc
arpl
fldl
sbb
cwtl
or
cmp
jl
xchg
aaa
xchg
dec
ret
pop
xchg
cmp
ret
out
sti
mov
scas
aaa
mov
cli
jnp
inc
mov
or
cwtl
xchg
inc
sbb
add
out
mov
frstor
and
xchg
mov
jo
movsb
add
cmpsl
ret
fincstp
clc
les
mov
addr16
cmp
and
cwtl
or
or
lea
hlt
imul
jle
mov
clc
mov
arpl
out
in
pop
mov
iret
add
in
mov
mov
sbb
outsl
xor
mov
push
test
and
popf
sbb
lret
cli
adc
imulb
pop
add
cmpsl
je
pop
sbb
sbb
mov
sahf
das
xchg
stc
cli
in
test
pop
xor
test
cwtl
xor
mov
mov
xchg
fistpl
jo
stos
push
shrl
dec
movsb
aad
xor
xor
mov
and
jg
int
xor
sbbl
adc
mov
lock
fwait
cmp
jecxz
insl
xchg
imul
push
inc
jne
mov
pop
mov
gs
insl
mov
jge
out
xchg
xor
xchg
dec
xorl
and
mov
xchg
cmp
adcb
ss
shlb
push
fsubrp
mov
adc
add
mov
jmp
ret
add
adc
movsl
mov
inc
push
pushf
mov
lds
nop
lahf
push
aaa
pop
inc
in
xlat
dec
or
sbb
std
frstor
lret
pop
in
mov
enter
mov
mov
xchg
or
and
and
cmp
xor
sub
rcrb
or
jmp
pop
adc
dec
js
popa
or
sub
add
add
cmp
push
mov
pop
xor
insl
xchg
imul
push
inc
jne
mov
pop
mov
gs
inc
push
ret
sbb
clc
and
adc
int
add
adc
xchg
and
lret
inc
adc
adc
lret
adc
rclb
cwtl
dec
and
mov
mov
test
mov
push
addl
add
vpackssdw
enter
mov
inc
sbb
inc
test
loop
dec
and
fisttps
or
cmp
sub
cmc
sbb
neg
mov
dec
popf
lret
data16
cli
or
cmp
mov
jecxz
xchg
stos
lds
scas
push
inc
sbb
add
lret
pop
test
mov
hlt
jbe
cmpsl
sbb
push
in
int
mov
mov
mov
mov
popf
dec
std
jle
mov
insb
pop
and
pop
gs
pop
loope
mov
stos
icebp
mov
push
jle
fcom
lods
in
push
ret
fld1
jb
pop
hlt
or
and
mov
push
or
sbb
mov
shlb
cmp
jecxz
scas
or
clc
cmp
xor
shrb
inc
inc
xor
sub
sti
mov
sbb
cmp
sbb
sti
or
or
mov
mov
loop
dec
movsl
mov
mov
lods
aad
jmp
lret
leave
inc
xchg
cli
sarl
insb
daa
fs
jae
jns
mov
dec
pop
jno
jl
cltd
insl
mov
push
loope
pop
repnz
mov
and
lahf
push
mov
dec
fs
stos
jno
jecxz
nop
push
mov
cmp
loope
lret
sub
mov
xor
cwtl
hlt
add
and
std
add
xchg
int
mov
xor
cmp
test
mov
pop
lcall
fwait
lea
xor
mov
dec
hlt
rorl
pop
xor
mov
mov
adc
xor
xor
or
inc
sbb
mov
loopne
pop
or
jno
fadds
cmp
mov
clc
sub
int
inc
sbb
cmp
jg
pop
ret
dec
sbb
xor
dec
icebp
mov
xor
add
dec
mov
movsb
jmp
xor
adc
push
lea
pushf
cmp
xchg
sbbl
ss
popa
test
in
test
or
push
testl
xchg
call
xchg
dec
popfw
push
pop
xchg
insb
jp
ficomps
clc
push
or
push
fdivs
sbb
js
cltd
in
idivl
shlb
dec
mov
clc
dec
adc
xor
xchg
mov
sbb
push
lods
xlat
push
int
sbb
mov
pop
cmc
leave
fs
inc
cltd
enter
gs
insb
aaa
and
aas
adc
enter
pop
lfs
das
xor
mov
mov
mov
pop
pop
add
inc
dec
clc
fadds
inc
icebp
jmp
clc
mov
xor
nop
lock
cld
jg
xor
adc
cmp
test
lret
sbb
rcrl
push
cli
mov
fisttps
add
and
xchg
cld
xor
fcomps
add
fdivl
stc
jge
push
ja
inc
and
add
popf
jnp
pop
scas
jb
lods
pop
idivl
sbb
in
cmp
cmp
stc
cmp
push
cmp
inc
pop
std
xor
out
xchg
add
loop
ds
xchg
in
dec
in
mov
cltd
je
cmp
popf
jbe
mov
pusha
jo
dec
out
pop
call
jno
mov
sub
mov
hlt
jl
dec
mov
push
dec
cwtl
lret
cltd
cmp
mov
idivl
outsl
mov
rclb
aas
mov
cmp
mov
movsb
mov
lret
jecxz
push
cwtl
xor
lea
ss
and
cmpsl
mov
nop
pop
loop
imul
dec
xor
cmpsl
sub
fsts
push
lret
fucomp
jae
push
aam
ja
stc
cli
in
test
or
invd
mov
pop
daa
mov
inc
xchg
mov
fnsave
fwait
and
pop
pushf
cmp
cmp
jno
aad
jp
das
jg
loope
icebp
sbb
popa
je
sub
rcrb
fsts
mov
mov
fwait
push
dec
mov
das
push
mov
inc
aas
jmp
enter
jnp
pop
nop
dec
mov
fwait
push
xchg
jle
xor
or
xor
cmp
leave
int3
inc
dec
mov
scas
xor
inc
sub
out
xlat
adc
cltd
mov
mov
push
cmp
xor
and
jmp
repz
push
cmp
cmp
stos
dec
mov
sbb
dec
and
leave
inc
add
imul
push
aaa
stc
inc
in
xchg
xchg
jp
mov
jne
pop
out
cld
and
mov
xchg
fcom
jp
cltd
sub
outsb
push
cld
js
mov
nop
aas
addr16
sub
sub
dec
mov
push
js
sub
sahf
cmp
lahf
ds
or
test
ss
cmc
mov
pop
aas
adc
stos
idivb
adc
or
add
xchg
int
decl
stos
adc
fidivrl
mov
insb
jbe
xchg
sub
stos
pusha
jo
xchg
ds
jb
fwait
outsl
adc
outsb
aaa
popf
mov
add
ss
leave
or
nop
test
jb
fsubr
xlat
adc
rol
pop
lds
xor
out
les
call
mov
mov
xchg
mov
push
sbb
mov
lock
jnp
out
push
imul
fsubrl
test
lods
push
push
std
xor
mov
mov
lret
fucomp
js
loope
xchg
mov
test
negb
sbb
lret
xlat
lcall
mulb
mov
mov
incl
xchg
dec
data16
cmp
push
jns
stc
adc
fbstp
sbb
idivl
cwtl
cmp
std
sti
cmp
pop
repz
daa
or
fcompl
in
push
test
daa
enter
out
push
jne
insl
in
ret
push
or
jmp
enter
popa
lret
mov
dec
out
mov
jne
cli
dec
daa
adc
mov
das
or
mov
std
jnp
or
stos
push
pop
mov
gs
mov
or
add
xchg
iret
rcrl
rclb
xchg
xor
xor
jg
inc
add
scas
mov
adc
or
sub
or
dec
mov
mov
dec
xor
cld
fildl
push
sti
pop
sar
dec
pop
insb
cmpl
mov
stos
mov
shrl
cmp
xchg
sarb
mov
pop
scas
dec
fcompl
jbe
ffree
cmp
push
jg
shl
jns
push
mov
pop
xchg
pop
aas
cmpsl
sub
arpl
pop
xor
ljmp
jle
out
jp
rol
ljmp
mov
in
jbe
leave
or
sub
fisubs
push
fldz
dec
jl
dec
inc
je
sbb
push
mov
adc
adc
sub
mov
inc
roll
inc
sbb
cmp
fldt
movsb
pusha
xor
int
test
inc
inc
jmp
mov
sbb
jbe
pop
lods
dec
jnp
cld
mov
inc
sbb
lret
movsl
mov
xor
mov
lret
lcall
sbb
mov
bound
test
pushf
fsubrl
cld
pop
daa
and
xor
and
xchg
fwait
xchg
pop
or
insl
mov
ficomps
push
mov
push
jp
xor
imul
pop
js
sub
sbb
mov
clc
cwtl
es
hlt
dec
pop
movsl
ds
retw
out
rcll
push
fdivrs
jp
sti
scas
xlat
insb
imul
jne
mov
adcl
xchg
jle
mov
mov
mov
rcll
inc
inc
ds
lret
dec
mov
daa
shlb
stos
jecxz
adc
add
int3
ret
enter
inc
jno
test
xlat
xrelease
mov
lock
nop
cld
jg
cmp
cmp
dec
icebp
mov
movsb
lds
nop
lds
clc
stos
repnz
or
mov
jae
or
dec
mov
negl
mov
inc
ret
pop
sub
mov
push
scas
jge
dec
sub
inc
mov
iret
popa
scas
jle
dec
lds
lret
or
cmp
jg
sub
popf
adc
cli
jnp
inc
mov
mov
inc
sarb
cmp
lret
and
fptan
fcomi
pop
je
cmp
pop
test
stos
sub
cmpsb
fmul
jmp
xchg
fxch
clc
int3
pop
fdivrs
mov
shlb
dec
jle
xor
inc
insb
jecxz
mov
test
inc
sub
jb
fstpl
jo
in
pop
jp
das
push
mov
loopne
adc
cmp
mov
pop
aas
in
and
mov
add
sub
pushf
ret
pop
mov
hlt
sub
imulb
cwtl
adc
sub
test
jns
lds
scas
dec
sub
lods
mov
ja
je
movsl
lods
cmp
fisttps
jl
cli
test
add
ror
or
xor
out
push
lcall
ljmp
xor
xor
pop
iret
push
dec
xchg
add
fdivs
aad
insb
cmp
fwait
xor
mov
sub
fcom
push
fdivrl
mov
adcb
jne
jnp
or
pop
fidivrs
loopne
loop
je
call
and
sub
popf
xchg
push
mov
ret
cmp
adc
popa
jnp
push
addl
xchg
cmpl
iret
ret
sbb
stos
shr
mov
sub
pushf
ss
or
lret
mov
and
jg
sub
clc
jl
inc
mov
mov
xor
fldt
jo
lds
cmp
dec
mov
mov
ficompl
dec
test
inc
lcall
cmp
cwtl
test
rcrl
repz
ss
xchg
mov
and
into
pop
pop
popf
paddq
pop
cltd
fidivrs
pop
mov
xchg
mov
mov
out
pusha
stos
mov
adc
rcl
repz
test
mov
clc
hlt
jl
adc
add
lds
out
add
cmpsb
fdivl
sbb
and
adc
inc
insl
popf
add
subl
pop
mov
mov
jbe
add
dec
mov
and
inc
mov
dec
stc
into
jp
fstl
dec
sub
jnp
lahf
cwtl
test
mov
ja
inc
imul
mov
mov
in
in
or
mov
outsl
mov
imul
iret
sub
insl
movsl
int
sub
or
call
movsb
mov
xchg
xor
popf
sub
in
bnd
jg
or
sti
andl
scas
xlat
in
or
adcb
dec
fdivrs
sarl
popf
jecxz
pop
mov
xor
clc
les
lods
out
push
movsl
divl
pop
cmp
or
cmp
leave
xlat
fwait
aas
xor
push
xor
outsb
aaa
sbb
cmp
mov
jle
adc
or
sub
xchg
pop
xorb
cmpsl
and
inc
inc
divb
shrb
jmp
clc
sbb
and
popa
lcall
popa
xchg
rcrl
mov
push
pop
pop
push
fcompl
jne
jns
lds
nop
clc
xor
shll
inc
lock
xchg
das
lret
fucomp
xor
jle
js
mov
fisttpll
xchg
and
pushf
jp
scas
add
fisubrl
pop
jnp
push
inc
lcall
cmp
test
lods
sahf
jno
adc
sbb
lock
and
leave
or
shlb
add
add
dec
add
fmuls
push
insb
xchg
mov
popf
xor
push
mov
popf
fwait
stos
cmp
or
jb
mov
in
add
ss
inc
pop
dec
dec
inc
mov
test
jle
mov
inc
sub
test
mov
stos
out
mov
test
xorl
gs
xor
mov
jb
xor
das
push
mov
and
mov
mov
lds
scas
push
sub
lods
leave
jo
sub
adc
stos
ret
arpl
add
mov
test
shlb
dec
sbb
mov
cmpsb
xor
jb
loopne
sbb
es
cwtl
inc
sbb
movsb
xlat
fucomi
mov
rorl
mov
stc
xor
pop
sub
mov
mov
dec
mov
lock
sub
mov
imul
dec
lahf
insl
push
or
fwait
out
push
mov
popf
fnclex
inc
or
jecxz
mov
aas
adc
adc
loopne
dec
daa
adc
inc
cmc
xor
mov
fscale
inc
jg
shr
ss
mov
je
popf
mov
cmp
jp
add
push
mov
test
or
rorb
pushf
mov
dec
mov
mov
mov
test
test
push
test
test
mov
and
adc
mov
dec
pop
insb
fcoms
inc
shlb
sbb
or
mov
cmp
subl
cmp
push
sub
jp
mov
pushl
xchg
push
mov
loopne
das
cmpsl
xlat
add
inc
pop
lret
jo
xchg
cwtl
mov
in
scas
addr16
popf
loope
pop
cmp
insb
jbe
pop
scas
sub
fidivrs
ret
mov
lcall
aaa
popf
testl
test
push
inc
mov
ds
sub
mov
push
dec
mov
xchg
flds
add
dec
mov
and
mov
test
xor
mov
lret
jecxz
pop
cwtl
cmp
pop
mov
sub
push
jmp
xor
stc
mov
outsl
xor
stos
xor
jno
lods
pop
cld
and
jae
fwait
mov
int
dec
lahf
lret
in
mov
pop
pop
sbb
mov
push
pop
repnz
mov
sub
mov
mov
mov
mov
fstpl
jb,pt
lahf
xchg
movsl
mov
and
cmc
mov
movsl
fcompl
js
pop
sbb
pop
ret
fdivrl
pop
cwtl
xor
std
pushl
adc
xchg
int
mov
mov
fsubl
pop
fs
add
xor
mov
cmp
call
xlat
xchg
imul
mov
xchg
pop
shrb
aam
mov
decl
xor
jle
fidivrl
mov
ja
xor
mov
gs
mov
es
sbbb
pop
popf
mov
lcall
ret
pop
dec
nop
mov
cld
jg
xor
sbb
lret
movsl
adcl
mov
outsl
adc
es
fstl
mov
lahf
mov
or
rcl
fisttpl
mov
pushf
loop
shlb
out
insl
mov
shlb
dec
or
imul
arpl
push
jge
fiaddl
lret
pop
mov
rcl
ja
arpl
jns
jo
and
fchs
les
enter
mov
ret
jl
andl
push
daa
xchg
int
mov
jge
clc
jb
pop
cmp
xchg
js
dec
sbb
stos
cmp
pop
mov
test
mov
mov
dec
inc
aam
dec
jle
adc
add
imul
adc
mov
fwait
add
xor
mov
scas
mov
xor
mov
setnp
mov
movsl
xchg
aaa
rclb
fwait
pushf
mov
ret
mov
sbb
popf
xor
adc
mov
push
sub
dec
mov
mov
stos
dec
cs
pop
lahf
clc
es
scas
jae
into
pop
cld
mov
sbb
daa
sub
imul
sbb
or
dec
mov
pop
clc
popf
lds
pop
aad
stos
std
pushl
sub
add
mov
or
sub
push
sbb
sbb
out
or
pushf
sub
adc
jmp
jp
cmp
fcom
lods
in
push
ret
fld1
jb
pop
fidivrs
mov
mov
xchg
mov
ret
enter
cmpb
xchg
sub
xchg
jmp
mov
dec
mov
aam
js
call
xor
mov
sub
pop
cmpl
sbb
add
add
shrl
inc
insl
cwtl
mov
fsubrl
aad
inc
mov
jg
sbb
les
cli
cmp
shrl
mov
mov
fldl2e
je
sahf
das
xchg
stc
cli
in
test
cmp
dec
lea
mov
or
fistps
pop
xor
mov
repz
lods
pop
pushf
or
sbb
ficoms
mov
cmpsb
fbld
ss
mov
mov
add
push
push
cmp
rclb
mov
jmp
push
aas
fwait
lret
in
mov
mov
or
pop
shlb
lds
mov
ror
adc
xor
adc
repnz
pop
lahf
scas
loopne
push
ret
sbb
pop
jg
inc
sbb
mov
lods
pop
adc
jae
test
enter
sti
add
lods
jo
cmp
mov
int
sbb
pop
mov
mov
xchg
les
lcall
sbb
neg
mov
dec
popf
lret
addr16
les
rcrl
xor
or
stc
out
pop
stos
xchg
fwait
popf
pop
mov
scas
push
lret
pop
test
cmpsb
jno
adc
cmp
add
ss
aas
cmpsl
aaa
cwtl
hlt
addl
mov
inc
sub
je
pop
push
les
cmpsb
xor
fdivrl
fbld
lods
dec
fdivs
pop
mov
in
jne
dec
inc
xor
adc
decb
jne
test
add
or
jae
adc
pop
or
int
jle
cmp
cmp
es
jne
push
jae
xchg
mov
cmc
call
sti
inc
sbb
adc
sbb
add
lret
movsl
push
and
pop
mov
push
dec
pop
dec
add
sbb
cmc
mov
je
mov
aas
ljmp
pop
sbb
xchg
fcomp
or
sub
adc
cmp
repnz
jnp
stos
pushf
push
sbb
xchg
inc
fcmovnu
adc
pusha
push
jg
pop
repz
push
mov
inc
mov
or
mov
inc
test
jmp
test
xchg
sub
dec
and
xchg
fst
push
fisubs
cmpsl
imul
mov
mov
sti
and
mov
jecxz
mov
adcl
imul
xchg
mov
insl
sub
adc
call
fidivs
sbb
cmpsl
iret
fucomip
repz
xchg
mov
cmc
pop
xor
cli
in
ja
inc
add
jecxz
cld
or
stos
dec
and
fs
movsl
mov
rcrb
sbb
scas
test
sub
dec
pop
inc
fildll
repnz
mov
mov
imul
clc
lods
outsb
rcr
dec
pop
insb
mov
dec
bound
or
cmp
adc
fistps
lock
cmp
in
cmp
lret
stos
xchg
lahf
cli
ss
sbb
sub
cwtl
jb
mov
dec
sbb
mov
push
fwait
lahf
adc
cmp
clc
or
sahf
rcll
or
lock
rcl
jne
cmpl
std
sbb
add
or
aam
lret
inc
mov
sbb
insl
mov
loop
push
fldenv
fcmovbe
inc
mov
inc
xor
inc
loope
push
mov
lar
xor
xor
mov
mov
adc
leave
mov
and
leave
inc
sbb
rolb
sbb
les
cli
cmp
shrl
fsts
fsubrl
xor
cli
out
leave
popf
stc
cli
in
test
cmp
mov
inc
sbb
adcb
lods
cmp
fisubrl
mov
inc
stos
jbe
outsl
sub
js
shrb
cltd
popf
sahf
sbb
lahf
pop
into
aaa
fucomi
repnz
sbb
xor
fsubr
idivl
and
std
mov
pop
ds
ja
in
test
fwait
mov
xchg
xchg
mov
imul
out
mov
mov
inc
imul
ret
pusha
and
mov
mov
repz
nop
sub
and
mov
adc
sahf
inc
sub
xor
movsb
mov
pop
sub
or
or
cwtl
add
sbb
scas
call
mov
scas
ret
xor
cltd
mov
adc
test
popf
mov
aad
sub
push
push
sub
lods
inc
dec
fisttpl
or
dec
pop
lret
rcrl
lds
sub
ret
or
dec
push
xor
pop
stos
xchg
cmp
ret
jo
pop
xchg
xor
jge
pop
xor
cwtl
mov
ss
leave
loop
inc
mov
push
fdivr
push
mov
lock
in
mov
out
sbb
mov
out
je
cmp
movsl
xor
xchg
mov
cmc
sbb
andb
mov
mov
mov
dec
inc
pop
lret
dec
into
mov
cltd
cmp
sbb
push
or
popa
mov
xorb
sub
xor
cmp
mov
fdivl
adc
mov
mov
xor
mov
mov
ds
sbb
mov
negb
add
sub
popf
out
dec
in
xchg
mov
mov
in
mov
scas
xlat
xchg
in
cwtl
arpl
fcoms
loope,pt
and
cld
or
push
ficoml
iret
adc
mov
add
mov
add
jmp
xchg
in
cli
repz
push
xchg
adc
addl
int
pop
dec
rcr
inc
stc
inc
ljmp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
mov
call
mov
call
cmpl
enter
xchg
push
jl
or
mov
push
dec
lcall
sbb
jae
sub
or
or
imul
hlt
jns
sti
mov
stos
jnp
cmpsl
sbbb
dec
pop
inc
pop
jb
or
mov
mov
sub
or
pop
pop
outsl
sub
addr16
test
cwtl
mov
jno
sbb
lods
out
lcall
mov
fucomip
cmp
insl
mov
repnz
push
hlt
add
sub
sub
jne
cwtl
jne
and
pop
cld
and
jns
push
inc
mov
add
inc
roll
loop
add
inc
add
adc
ret
aad
dec
aam
jns
jnp
or
mov
pop
xchg
imul
insl
fwait
jmp
add
push
aaa
xchg
cltd
call
inc
cltd
enter
loopne
pushl
mov
mov
mov
adc
add
rorb
sub
js
test
xor
sbb
repnz
repz
ret
mov
test
sub
in
imul
jg
adc
std
cmc
cld
jg
imulb
adc
neg
repnz
jno
lods
push
sub
add
sub
mov
stc
inc
fldt
sub
xchg
mov
push
push
inc
pop
repz
test
mov
stos
or
mov
pop
fisubrl
arpl
scas
inc
ja
pop
xor
mov
pushf
subb
xlat
fsubrl
sub
xlat
in
idivl
mov
ljmp
pop
test
lcall
dec
fcoms
sub
add
imul
std
roll
pause
data16
lret
bound
adc
outsl
xchg
add
push
adc
push
dec
push
into
sub
jne,pt
js
leave
cs
aad
pop
mov
repz
pop
push
adc
les
inc
fsubrp
imul
imul
lret
jecxz
add
scas
sti
xor
rcll
add
test
pop
stos
push
lods
xchg
sub
adc
jo
shll
inc
lock
xchg
daa
lret
fucomp
xor
jle
js
in
jmp
mov
xchg
dec
mov
idivb
dec
mov
aad
mov
jae
fldenv
ja
sub
add
jbe
jmp
and
js
mov
pushf
mov
inc
loop
aas
cmpsl
xlat
mov
and
cmp
jns
mov
out
sarl
xchg
cmc
mov
movsl
xor
and
movsl
pop
xor
jge
jb
mov
xchg
adc
or
dec
rclb
mov
mov
out
je
shl
pop
aad
in
cmc
fiadds
shll
out
mov
pop
xor
pop
iret
arpl
mov
sarb
cmp
jns
add
int3
dec
add
push
popa
mov
or
orb
adc
jecxz
ret
popf
cmp
mov
adc
mov
aaa
jns
and
mov
sbb
arpl
inc
cmp
jno
push
aam
addr16
cli
in
test
cmp
dec
mov
mov
or
icebp
mov
inc
stos
jbe
outsl
sub
js
shrb
cltd
popf
sahf
cwtl
jbe
lahf
pop
into
mov
cmc
sbb
xor
cltd
in
idivl
xchg
idiv
mov
pop
ds
ja
in
test
inc
push
ljmp
xor
mov
lods
jnp
sub
inc
leave
enter
mov
adc
jmp
mov
xlat
ret
xchg
popf
xchg
dec
inc
mov
jge
dec
andl
lock
ficoml
loopne
jl
ret
sbb
ds
mov
icebp
add
mov
or
cltd
cmp
fisttpl
add
mov
movsb
inc
cltd
mov
and
mov
dec
add
or
orb
inc
lahf
push
sub
xchg
mov
lahf
cmp
ret
xor
pop
shll
xchg
or
aas
xorb
fisttpl
add
sbb
cwtl
inc
sbb
ds
fucomi
mov
rorl
mov
push
jnp
adc
addl
ljmp
rcr
xor
repnz
mov
jne
lods
xlat
insb
imul
pop
xchg
pop
cmp
idiv
les
popf
and
shlb
inc
mov
xchg
mov
daa
dec
dec
lcall
adc
cmpsl
dec
dec
mov
push
cmc
imul
sbb
loopne
mov
mov
pusha
std
jns
mov
lahf
aaa
mov
ret
pop
mov
or
gs
lock
xchg
push
hlt
mov
faddl
adc
mov
or
cli
and
adc
and
mov
movsl
fsts
in
cwtl
arpl
aam
push
jl
xchg
add
xchg
lret
or
roll
outsl
xor
lret
xor
loope
cltd
lods
inc
sbb
aad
push
push
dec
aas
or
js
in
imul
jnp
inc
mov
xor
cwtl
xchg
inc
sbb
add
mov
jno
icebp
push
mov
loopne
call
push
sub
ja
fistpll
ret
fld1
jb
cmp
mov
or
jb
insb
aaa
sbb
or
loope
jl
sub
cmp
mov
dec
ret
das
or
pop
mov
call
jae
cmp
pop
add
mov
in
jecxz
push
xchg
mov
jbe
pushf
int
pop
dec
mov
cmp
cmp
mov
cwtl
lret
movsl
add
aas
ljmp
mov
std
add
mov
sti
stos
adc
mov
xor
push
cmp
add
cltd
or
out
mov
leave
xchg
fwait
sbb
jae
stos
cmp
push
mov
jge
push
cmp
js
jge
lods
push
idiv
cli
cwtl
cmp
mov
ljmp
or
cmpl
and
dec
aam
cltd
repnz
or
adc
push
fsubl
and
mov
mov
mov
inc
mov
ds
mov
and
mov
xchg
xchg
lods
mov
pop
pop
adc
pushf
add
iret
stc
mov
enter
add
mov
cmp
jp
add
xor
ret
mov
add
addr16
test
pop
jecxz
sbb
mov
stos
test
fiaddl
or
scas
mov
stc
inc
and
dec
mov
incl
rcrl
inc
bound
mov
jp
or
shrb
pushf
test
jl
xor
fsubrs
jecxz
into
hlt
push
sbb
loop
cwtl
imul
inc
fwait
leave
loop
inc
mov
push
fdivr
push
mov
loopne
in
mov
out
sbb
or
sbb
je
cli
jg
inc
insl
in
or
int3
jmp
dec
cmp
idiv
les
popf
adc
mov
dec
inc
dec
mov
push
inc
insb
dec
inc
xor
les
dec
ret
pop
mov
fstl
or
in
xchg
daa
je
pop
mov
je
jae
mov
imul
sbb
cmp
xor
mov
faddl
dec
or
leave
mov
leave
cwtl
adc
mov
out
push
test
cli
mov
xchg
scas
push
xor
movsl
adc
and
dec
jae
mov
push
test
push
push
pop
push
lret
or
mov
mov
inc
loop
xor
jmp
repnz
lods
inc
inc
fsub
ljmp
or
and
repz
cmpxchg
rcll
push
addl
mov
mov
repnz
icebp
xchg
or
test
sbb
cmpsl
cmp
pop
bound
fwait
fistl
cmp
mov
xor
dec
inc
dec
push
or
dec
popa
add
aad
mov
or
popa
xor
fsub
add
push
mov
jle
sub
hlt
movsl
int
rcrb
clc
fwait
ret
mov
mov
scas
inc
stos
fldenv
and
scas
push
mov
imul
pop
pop
rcl
lahf
enter
xor
push
cmp
pop
nop
mov
mov
add
rolb
dec
fildll
or
add
sbb
hlt
push
movsb
ljmp
outsb
lret
addl
xor
push
mov
testl
orb
int
je
jne
mov
mov
test
xchg
cmp
mov
xor
fsubl
cmp
movsb
jmp
in
jae
push
dec
inc
xor
sarl
je
push
loope
call
mov
movsl
mov
sbb
pop
lcall
and
mov
or
adc
fistpll
std
aas
pop
lcall
mov
sub
clc
add
mov
rol
shr
sbb
mov
outsl
and
dec
xchg
lcall
dec
inc
mov
xchg
pop
fcompl
and
dec
shll
sti
pushf
dec
pop
or
mov
sbb
mov
xchg
arpl
push
sub
stos
lods
pop
test
xchg
mov
mov
push
pushf
repnz
js
jg
push
or
js
repz
jg
js
ret
dec
add
add
aam
adc
jp
sbb
je
push
xchg
ljmp
out
gs
sbb
xchg
rorl
int
test
dec
test
add
lcall
and
cltd
repz
fldpi
push
and
scas
mov
jns
xor
adc
mov
cmp
jae
xchg
sbb
stc
jnp
cltd
rol
or
pusha
mov
pop
inc
orl
or
popf
mov
inc
aam
testl
pop
in
int
test
adc
imul
aam
add
mov
xor
inc
aad
addr16
test
push
and
cmp
push
dec
in
jbe
jmp
mov
js
jg
xor
icebp
cmp
aas
or
adc
add
mov
idiv
mov
push
or
sub
fmul
movsl
cli
mov
jb
push
imul
push
ficoms
push
mov
jecxz
pop
mov
mov
cwtl
dec
inc
cld
xor
lea
shl
or
mov
enter
int
add
xor
mov
call
pop
scas
shrb
inc
inc
xor
inc
inc
mov
scas
mov
cmp
ret
cmp
jl
pop
dec
jno
imul
rorl
fisubrs
dec
sbb
pop
jg
inc
lock
push
inc
fcomip
pop
xchg
call
lds
fcomip
cmp
jbe
movsl
xchg
pushf
cmp
repnz
sub
push
jge
mov
pop
pop
jb
mov
push
lods
shll
pop
ret
mov
loopne
pop
sarb
mov
fs
pop
je
out
idivl
dec
out
idiv
mov
mov
cmp
or
fwait
inc
cwtl
dec
and
stos
movsb
test
sub
ss
test
fldenv
shl
pop
movsb
call
cmpsb
inc
cltd
out
lock
cmc
es
pushl
outsl
lds
gs
add
sub
cmc
hlt
push
inc
xor
vpmacsdql
sub
cmp
pop
lcall
test
jg
enter
insl
test
inc
and
dec
ret
cld
fdiv
jbe
jne
mov
cmp
cwtl
or
sub
data16
mov
pop
inc
stos
push
lods
inc
push
lret
push
pushf
repnz
and
pop
jns
push
test
bound
jle
subl
rol
inc
inc
pop
xchg
adc
sarb
es
ja
or
dec
mov
je
push
sub
push
lea
outsl
in
jae
fnstsw
repz
out
cwtl
inc
xor
push
add
or
or
push
dec
aam
pop
mov
and
inc
les
cltd
xor
test
sub
sub
jo
jo
xchg
ds
fs
cmpsb
in
clc
xchg
xchg
sbb
pop
es
or
add
mov
jne
call
xchg
pop
sahf
gs
add
cwtl
dec
and
mov
mov
test
xor
mov
lret
jecxz
pop
cwtl
cmpsl
fcomps
pop
mov
sub
pop
in
add
lret
movsl
mov
mov
cmpl
dec
xor
jno
add
in
cmpsl
xchg
xchg
pop
and
mov
popf
shr
pop
mov
jl
mov
data16
xor
lret
or
mov
lock
sbb
cmp
mov
lods
jle
jmp
sbb
mov
aad
mov
mov
jmp
test
fistps
inc
sub
idivl
repnz
adc
jae
cmp
xchg
adc
mov
sub
mov
pop
test
jmp
pop
dec
mov
push
sbb
out
mov
aam
jbe
sub
loope
jo
push
jb
cwtl
mov
in
jne
dec
mov
sbbl
call
pop
xchg
dec
add
mov
cmp
sti
mov
ret
addb
les
sbb
jbe
pop
int
jo
orb
mov
cmp
mov
dec
mov
push
stc
jae
push
dec
push
inc
push
fmull
pop
mov
repnz
mov
mov
in
aam
insb
push
xor
insl
cltd
lcall
push
dec
int3
xchg
pop
xlat
stos
inc
pop
mov
jb
scas
dec
out
shrb
xor
cmp
in
jecxz
fisttps
push
call
stc
jecxz
inc
fwait
out
pusha
add
test
je
clc
add
mov
add
mov
popf
aas
jp
mov
adc
push
cmpsb
push
lods
adc
dec
push
sbb
inc
test
enter
xlat
xchg
sbb
cmp
mov
cltd
fiadds
pop
shll
popf
jle
lods
inc
xor
push
into
lea
push
loop
inc
pusha
mov
into
inc
pop
adc
int
int
cmp
and
lds
jl
xchg
iret
mov
or
add
mov
loopne
adc
pop
adc
movsb
nop
sbb
xor
dec
mov
mov
sub
rclb
bnd
pop
push
ja
pop
out
lret
rcll
je
scas
xor
mov
outsb
dec
scas
mov
jge
push
push
jl
test
adc
lret
xchg
std
imul
push
js
jbe
mov
sbb
in
sub
and
icebp
or
popa
inc
sarb
fadd
shl
cwtl
je
std
pushl
adc
xchg
int
mov
mov
fdivl
je
fs
add
xor
ja
out
mov
mov
fwait
fcmovnb
kandnb
pop
mov
int3
add
lcall
add
sbb
pop
mov
pop
fcomps
fbstp
test
je
hlt
into
xor
mov
clc
ds
mov
gs
arpl
in
jecxz
cld
mov
aam
xor
popa
mov
sub
test
mov
sahf
popf
mov
pushf
xor
adc
dec
mov
negb
std
push
jae
push
subl
sub
test
sub
cmc
inc
outsb
enter
inc
movsl
or
sbb
mov
and
pusha
jno
add
inc
mov
scas
movl
ss
inc
cmpsl
xlat
in
pop
dec
fstl
xorl
mov
xchg
sub
sub
sub
or
pop
cltd
mov
dec
cmp
pop
insb
xchg
pop
mov
adc
hlt
push
jmp
lea
mov
adc
cmpb
pop
mov
mov
cltd
sub
ljmp
jae
int3
cltd
mov
in
stos
push
mov
push
pop
add
lahf
xchg
xor
sbb
aaa
add
jbe
pop
rcrb
ss
push
fstps
inc
cltd
add
movsb
cs
aas
add
lds
push
clc
mov
pop
and
adc
adc
rcrl
sahf
ud1
fsubrl
cld
ss
stos
int
insl
movsl
int
sub
fisubs
mov
lods
jle
lret
movsb
sub
sbb
sarb
dec
jmp
pop
add
fwait
add
or
adc
mov
sbb
mov
sub
or
xor
aam
fsts
adc
jmp
addr16
fld
fsubrs
ficomps
popf
iret
sbb
adc
aam
aaa
fs
adc
and
sbb
fldcw
out
ret
out
pop
das
xor
scas
negb
shrb
je
popf
mov
adc
xor
mov
jae
inc
sub
xor
add
mov
mov
xor
inc
inc
sbb
pop
mov
pop
mov
jb
or
cmp
test
dec
cli
aaa
enter
enter
movsb
leave
cmp
lahf
xchg
push
testl
lret
push
fcoms
pop
jns
cli
push
aas
sub
and
sub
pop
mov
enter
xchg
fldenv
lock
outsl
cld
jo
fcmovnb
pop
in
cmp
out
jg
xor
jp
push
pop
or
push
roll
dec
aam
xchg
inc
cwtl
adcb
mov
mov
aas
sahf
pop
mov
adc
push
fdivs
fbld
xchg
mov
popa
mov
xor
lds
enter
insb
aaa
stos
mov
push
addr16
sbb
imul
in
mov
dec
aad
imul
and
shrb
add
or
lods
stos
fisttps
push
xchg
sbb
cmp
mov
push
stos
push
in
jno
inc
dec
pop
xor
negb
cmp
out
mov
dec
lods
pop
push
lahf
push
dec
push
dec
xor
decl
pop
icebp
lcall
xor
push
cmp
repz
popa
jecxz
adc
adc
jb
push
pushf
dec
mov
sarl
roll
lods
inc
sbb
int3
ljmp
push
dec
cmp
aad
ds
xchg
inc
pop
xor
add
dec
and
addr16
movsl
mov
pop
cmp
xchg
imul
testb
sub
push
cltd
out
mov
sbb
test
push
ds
dec
dec
mov
dec
imul
mov
mov
mov
push
mov
ret
imul
ja
stos
and
mov
or
dec
xchg
rol
push
jle
add
fildl
and
fidivrl
scas
inc
mov
scas
in
adc
push
dec
mov
and
and
outsl
push
mov
xor
lods
mov
mov
add
outsb
mov
or
inc
daa
push
jae
xor
mov
shll
jnp
inc
pop
mov
pusha
mov
push
inc
fwait
cmc
mov
inc
das
adc
fdiv
adc
sbb
popl
pop
push
in
push
fsubs
add
xor
clc
cmp
sbb
fbld
jo
xchg
shrd
jecxz
mov
add
mov
mov
ficoms
inc
imul
imul
pop
or
pop
movsl
mov
les
jnp
out
push
in
sbb
loop
divl
mov
add
lret
fwait
cmpb
adc
movl
push
mov
sub
lahf
add
sub
movsl
lds
jp
push
sub
xlat
aad
jmp
jae
into
jo
xlat
jmp
mov
add
dec
bound
lahf
inc
scas
xchg
ficoml
jp
movsl
adc
lcall
ja
cmpsl
push
imul
lret
or
mov
in
into
adc
cmc
cmp
pop
sub
rcrb
pushl
inc
sub
out
gs
pop
cmp
xor
inc
sbb
or
and
loope
mov
inc
pop
mov
jb
inc
xor
sbb
and
dec
push
and
pop
jne
fdivs
ret
cmp
mov
call
pop
mov
imul
ja
stos
and
clc
mov
call
mov
popa
movsl
push
and
or
movsl
ret
leave
cmp
sbb
cmpsl
cltd
xchg
lret
mov
push
mov
test
sahf
mov
cld
sub
into
jo
shll
lds
imul
jo
pushf
testb
sbb
jno
movsl
adc
lcall
push
pop
lahf
xor
lods
mov
aas
lahf
inc
jg
adc
int
scas
xchg
cld
cmp
addr16
nop
adc
push
mov
imull
test
cmpsb
gs
lahf
icebp
cmp
mov
dec
daa
sub
push
mov
pop
loope
xchg
pop
cltd
mov
bound
call
inc
cltd
out
and
je
aaa
sbb
outsl
adc
lock
push
insb
pop
mov
int
ret
cmp
mov
pop
pop
push
or
mov
push
mov
jnp
std
fwait
clc
fs
ss
xchg
jo
push
mov
mov
cmpsl
or
scas
inc
cld
push
xchg
nop
xchg
dec
les
push
push
push
dec
sub
test
arpl
fstpt
arpl
jge
stos
dec
xchg
lret
add
mov
mov
sbb
dec
lock
fildll
and
jbe
inc
lcall
loop
mov
add
pusha
mov
lods
loopne
jno
jno
fs
lahf
cmc
dec
cmp
aas
and
mov
inc
icebp
xor
xor
cwtl
or
ljmp
fsubs
sub
cmpsb
ljmp
pop
cmp
adc
in
pop
mov
std
mov
pop
push
mov
inc
loop
adc
dec
mov
sbb
gs
das
out
shll
pop
das
jo
pop
xor
cmp
je
adc
xor
ds
mov
in
lea
dec
ret
fisubrs
jns
xchg
mov
cmp
cmp
xor
and
push
imulb
sarb
nop
xlat
stos
sahf
das
add
push
inc
jno
cs
mov
sahf
das
xchg
stc
cli
in
test
or
invd
mov
fstps
xorb
add
xchg
and
mov
adc
push
lds
mov
fdiv
fistps
test
mov
mov
loop
xchg
xchg
add
jnp
clc
jb
popl
xchg
lahf
xor
aam
mov
jnp
inc
push
mov
or
mov
fcoms
mov
push
or
push
int3
test
jp
sub
pop
mov
inc
lea
mov
jge
pushl
insl
inc
repnz
pop
aam
loopne
xor
rcrb
xor
xchg
adc
adc
dec
adc
jp
add
ss
test
or
rorb
pushf
and
fsubrl
dec
mov
mov
mov
test
test
push
test
test
inc
mov
neg
je
pop
iret
push
xchg
decl
add
aaa
cmp
jae
add
lock
ficoml
cmpsl
add
jl
rcll
pushf
adc
push
dec
in
jb
adc
cld
push
lret
je
inc
pop
scas
pushl
mov
inc
cmpsb
xlat
in
iret
and
lea
cmp
ja
rorb
test
pop
repz
xor
ja
out
mov
cmp
pop
jge
lea
jl
bound
out
adc
push
repz
sbb
add
and
js
popf
jecxz
lret
dec
mov
add
push
xchg
int
mov
adc
xchg
fnstcw
fnstenv
mov
sahf
loope
repnz
test
and
adc
gs
jge
fwait
ss
lret
inc
sbb
sbb
test
es
sahf
mov
push
dec
jae
pop
mov
insl
sbb
in
addr16
xor
in
rorl
lret
addb
mov
dec
inc
movsl
or
gs
mov
pop
mov
fstpl
ds
aaa
aaa
lods
hlt
sub
aam
loopne
xchg
or
addl
add
mov
repnz
dec
cwtl
push
lock
fidivs
xor
aam
pop
jne
sub
mov
fs
aas
mov
popf
iret
sbb
pop
add
and
ss
inc
outsl
mov
sbb
in
aad
lret
or
push
xor
inc
inc
mov
fldl
pop
add
lcall
inc
in
xor
lock
push
nop
sub
mov
hlt
xor
aas
adc
cmpsl
mov
movsb
mov
sbb
imulb
es
add
in
xchg
lcall
or
push
xor
push
js
push
mov
cmp
std
subl
sbb
andl
dec
mov
sbb
mov
lods
jle
mov
or
sbb
shlb
sar
pop
ret
sbb
lea
mov
sbb
idiv
decl
cmp
sbb
out
cmpsl
mov
rcll
icebp
and
cmp
outsl
mov
fwait
pop
cltd
dec
clc
cmp
fdivp
inc
out
sbb
fsubrl
in
aam
jmp
inc
xor
ret
imul
inc
fnstenv
das
or
inc
add
mov
imul
adc
pop
add
add
mov
sub
test
cli
mov
mov
loop
mov
dec
icebp
ss
imulb
inc
in
xchg
lcall
dec
cwtl
mov
aas
popa
xor
in
mov
ret
cltd
cmp
les
in
mov
aad
xchg
pop
stos
outsl
dec
cmp
fwait
cld
xchg
pop
xchg
xor
jge
pop
xor
jae
xor
mov
mov
add
fisubrl
mov
or
or
mov
repz
pop
mov
adc
mov
adc
jbe
orl
mov
ret
fld1
movsl
xor
cmp
int3
jno
cltd
push
push
add
fisubrs
dec
pushf
hlt
test
xchg
fdivrs
ss
mov
pop
jbe
ficoms
mov
mov
test
add
and
out
in
add
rcrb
into
mov
inc
mov
mov
jb
idivb
adc
jg
nop
in
push
adc
test
xor
sub
in
jno
sbb
jno
icebp
add
mov
jp
xor
mov
shrb
sbb
rorl
mov
mov
inc
sbb
mov
data16
inc
lahf
popa
cmpsl
pushf
pop
sti
and
push
mov
jbe
inc
cmp
ja
popl
mov
fptan
stos
xor
add
lods
push
stos
icebp
mov
mov
fidivrs
jnp
jnp
cmp
popf
stos
mov
jle
or
in
aam
sub
cwtl
repnz
add
fprem1
add
lea
movsl
dec
add
in
movsl
push
popf
mov
push
add
ret
popa
lcall
push
lock
jbe
adc
filds
xchg
lods
push
xor
popa
and
shrl
std
push
stos
push
and
rolb
bound
scas
xchg
lahf
mov
mov
push
inc
sar
loope
aaa
loope
cmp
lret
ret
fwait
mov
inc
outsb
cmpsb
sub
mov
add
sbb
fnsave
test
lods
inc
sbb
outsl
imul
push
pop
or
nop
and
ljmp
push
cwtl
lods
inc
shlb
es
add
aaa
cmpsl
test
jle
adc
and
jp
cmp
xchg
push
mov
popf
add
lahf
cmpsl
jnp
jp
mov
add
enter
or
clc
les
dec
inc
lahf
lret
inc
sub
lcall
xchg
int3
lcall
lods
mov
pop
pop
test
cli
sar
sti
pop
pop
inc
or
jns
mov
popf
mov
hlt
and
sub
ret
lds
hlt
mov
sbb
push
mov
mov
jge
aaa
call
sbb
xor
int
repz
je
cmc
jno
lea
pusha
nop
rorb
xchg
or
mov
mov
adc
cmp
aam
popf
mov
xchg
jb
mov
mov
aad
cmc
jg
notl
jg
or
notl
cli
jnp
mov
inc
aam
fdivs
xchg
mov
fwait
jmp
in
mov
repz
jge
imul
mov
ret
mov
cmpsb
cmp
aaa
dec
and
leave
sbb
popf
mov
dec
push
add
mov
fsubrs
divb
mov
dec
add
xchg
divl
idiv
adc
inc
sahf
mov
add
mov
clc
ds
and
sahf
cmp
mov
cmc
dec
sbb
mov
icebp
aaa
cltd
xor
ret
aas
mov
ss
mov
out
dec
sbb
subb
pusha
in
cltd
dec
push
add
imul
inc
mov
cmp
std
xor
mov
scas
ja
inc
jl
fnstenv
ds
mov
pop
xor
fwait
dec
sbb
jl
stc
cmp
sbb
insb
std
jle
js
cmp
push
jmp
sub
lret
dec
aaa
push
lahf
lahf
hlt
push
cmp
inc
jge
sbb
xchg
cmp
cmpsl
sti
mov
lret
jne
dec
inc
and
cmp
or
cmp
xchg
sub
xchg
jmp
mov
dec
mov
out
pop
stos
nop
cmp
lods
dec
adc
fcoml
cmp
repz
sti
mov
jecxz
popa
xchg
lods
inc
insb
sub
dec
popa
sahf
mov
sbb
shr
lds
loop
enter
mov
and
jne
loope
and
push
and
movsl
lcall
mov
jne
in
call
sbbb
adc
mov
out
adc
idivb
mov
stos
and
sbb
dec
fisubrs
enter
xchg
mov
lods
fidivs
sub
lahf
inc
test
cmp
es
popf
mov
sbb
cwtl
roll
xchg
pop
adc
pushf
add
sub
cltd
cmpsb
sub
popf
jmp
mov
pop
xchg
inc
adc
pop
xchg
adc
lahf
jne
mov
fs
inc
cltd
shr
int3
out
mov
jo
and
or
dec
inc
xor
out
ret
addr16
mov
mov
mov
jmp
cmc
mov
adc
pop
loope
jecxz
and
push
pop
sub
dec
add
add
sub
mov
mov
fisubrs
stos
mov
pop
mov
and
push
dec
dec
sbb
movsl
dec
into
pop
sub
sahf
dec
pop
xchg
test
dec
xchg
bound
subb
xchg
lret
pop
orl
mov
mov
sbb
scas
jno
jae
in
ret
outsb
pop
int
push
or
mov
cld
lret
sahf
movsb
clc
mov
add
arpl
mov
std
jo
ficoms
jge
xchg
dec
cmpsl
sbb
cwtl
imul
insb
jae
jp
cmp
sbb
dec
xchg
mov
fcmovnbe
cmc
fst
mov
mov
dec
inc
aam
sbb
adc
test
xchg
dec
push
and
push
mov
sbb
call
sub
lahf
aas
push
fstpt
mov
push
mov
pop
test
mov
add
orl
xchg
xor
pushf
dec
and
mov
push
push
dec
or
mov
jne
mov
dec
jecxz
arpl
xor
xchg
dec
push
aas
repz
outsb
in
in
dec
mov
js
adc
pop
repnz
pop
outsl
test
ss
pushf
cli
in
push
test
sahf
mov
shl
and
jmp
xorb
inc
pushf
push
aas
cmpsl
push
or
jle
clc
mov
pushl
adc
sbb
jae
addr16
test
xchg
adc
sub
cmpsb
pop
je
fwait
cmpsl
test
sti
mov
lahf
iret
sbb
insb
aaa
dec
jb
sbb
adc
fsub
shl
mov
jmp
mov
dec
mov
into
pop
test
mov
jae
repz
add
aas
push
rorl
pop
jnp
ja
jmp
mov
mov
add
test
popf
cmp
adc
outsl
sub
xor
clc
sarl
frstor
pop
dec
in
stc
movsb
gs
cmc
or
inc
sub
adc
adc
xchg
inc
int
mov
test
inc
sbb
lret
inc
lahf
fwait
sbb
push
sub
outsb
adc
sbb
sub
ss
mov
pop
addl
mov
jl
daa
jae
in
pop
mov
test
adc
fcom
insb
jbe
mov
pop
fdivrl
pop
in
movsb
lods
data16
jne
popf
stos
mov
sub
inc
xchg
addl
xor
lea
cmp
pop
sub
ficoml
push
sahf
sbb
mov
or
cmp
loopne
xchg
and
enter
xchg
inc
mov
pop
lea
leave
cmp
push
ja
add
addb
xchg
dec
sbb
das
mov
movsl
clc
stos
mov
cwtl
ljmp
pop
sub
add
or
xchg
fbstp
iret
adc
pop
sahf
cmovae
loope
movsl
fstl
pushf
enter
cmpsl
inc
xchg
cld
sbb
cmp
mov
and
pop
stos
mov
inc
shlb
xor
add
popl
xchg
sbb
into
ljmp
imul
sbb
fcomps
mov
fdivrs
bound
sub
inc
movsb
inc
dec
push
dec
xchg
aad
inc
mov
dec
ret
jmp
adc
mov
aam
push
rcrl
push
cmc
xor
xor
sbb
pop
adc
pop
pop
adc
imul
inc
pop
inc
test
add
rorl
lret
dec
push
pop
mov
dec
sbb
xchg
nop
movsb
and
mov
popf
les
rolb
test
sub
inc
in
xchg
mov
fsts
pop
stos
xchg
stos
inc
xchg
lods
and
lea
sbb
push
js
popf
scas
inc
add
xor
xchg
push
jge
jo
sbb
add
jp
rclb
sarb
adc
mov
test
arpl
fwait
sarl
mov
std
mov
fstpt
push
int
dec
aaa
imul
mov
push
inc
mov
mov
cmp
mull
mov
in
repz
cmp
fwait
pop
push
iret
inc
call
mov
adc
xlat
les
jle
xor
adc
leave
repz
and
sbb
movsl
mov
idiv
inc
pop
mov
test
xchg
sbb
sbb
pop
mov
flds
test
xchg
and
lods
test
xchg
mov
mov
mov
lret
lret
shrb
jns
ret
gs
fsts
cmp
js
fisubs
mov
inc
das
push
js
xchg
mov
add
cmp
scas
outsl
loop
xor
xchg
cwtl
and
sub
sub
test
pop
fisubrs
pop
adc
inc
cld
xor
fiadds
pop
xor
dec
jb
dec
nop
adc
mov
xchg
cltd
loope
sbb
sarb
mov
mov
aam
push
iret
mov
mov
cmp
jp
add
mov
jmp
ret
leave
cmp
fmull
repnz
jmp
bnd
inc
in
mov
movsb
leave
test
dec
push
sbbb
push
add
pop
fnstenv
xchg
xor
cmp
or
cmp
adc
lock
les
mov
and
in
push
test
mov
lds
mov
loope
xchg
mov
xchg
mov
test
mov
inc
inc
cmp
cltd
pop
push
inc
cwtl
mov
addr16
fbstp
jbe
pop
test
sub
and
enter
cmp
xor
mov
cltd
enter
cltd
leave
imul
lods
hlt
pop
sbb
jne
leave
mov
jmp
pop
repnz
sarl
jns
mov
mov
xor
pop
push
dec
push
lds
adc
inc
sbb
ds
enter
out
and
gs
sbb
cltd
sub
repnz
cmp
faddl
fistpll
stc
or
jmp
push
pop
test
movsb
sbb
mov
in
mov
pop
call
jno
dec
push
mov
xor
push
fisttpl
mov
les
and
jns
or
in
sbb
cmp
fistps
push
pusha
ljmp
inc
lret
add
dec
std
arpl
jmp
or
les
xchg
and
mov
push
fidivrs
sbb
and
xchg
push
fs
pop
daa
dec
lret
sahf
mov
idivl
mov
sti
and
mov
jecxz
mov
adcl
mov
mov
sbb
mov
into
pop
stos
shrl
push
pushf
mov
loopne
out
movsl
lret
call
iret
mov
mov
ret
mov
cmc
or
mov
and
pusha
das
and
aaa
call
sbb
or
int3
pop
inc
pop
dec
fsub
fldt
jmp
pop
xor
pop
or
ds
xchg
or
fisubrl
sbb
pop
mov
xor
add
jp
in
sbb
repnz
icebp
mov
cmp
jl
js
or
aas
jbe
rcll
daa
or
jo
sbb
arpl
cltd
cmp
test
gs
mov
push
out
push
gs
jne
scas
repz
cmp
aaa
popf
mov
sub
cwtl
cltd
sbb
iret
arpl
sbb
js
test
orb
and
dec
imul
repz
fwait
shll
out
sub
dec
jns
testb
or
push
pop
sbb
ss
dec
insb
arpl
jp
jo
test
sub
xor
sbb
mov
neg
into
pop
push
jb
pushf
loope
test
sbb
jno
les
xchg
add
jecxz
dec
fcmovne
xchg
fwait
sbb
jbe
cmp
movsb
push
rcrb
jnp
or
jbe
push
pop
fildll
xor
aas
and
inc
cli
or
sbb
mov
fwait
push
dec
mov
or
bnd
fwait
cmp
push
addr16
imul
pop
clc
jecxz
mov
jmp
std
mov
sti
and
sbb
jbe
xor
or
int
sbb
sbb
sub
cli
ss
stos
les
loopne
rolb
jl
iret
loopne
add
fists
rol
sbb
insl
popf
aas
cmp
aas
loop
mov
rcrb
decb
sbbb
push
imulb
ret
sbb
add
sbb
push
dec
jb
lret
aad
sbb
test
cld
test
sar
mov
scas
cmpl
mov
push
sbb
arpl
pop
adc
xchg
fimull
mov
lret
jno
lds
push
fsubs
mov
lods
ljmp
mov
inc
aas
pop
clc
cs
adcb
and
dec
mov
dec
mov
adc
mov
aad
pop
scas
inc
stos
cmp
mov
mov
ret
adc
jp
mov
cmpb
xchg
inc
adc
rolb
mov
add
stos
mov
ret
cmp
ljmp
pop
jp
xor
in
cltd
mov
gs
and
and
lds
mov
sub
jnp
fildl
imul
cmp
je
popa
roll
inc
push
in
pop
mov
sub
push
cld
xor
or
movl
int
mov
fsubrs
xor
orl
icebp
ret
mov
mov
mov
jae
add
jmp
push
gs
test
movsl
ret
stc
andl
aaa
in
dec
out
or
js
rcll
addr16
mov
leave
mov
in
call
into
xor
jno
sti
lahf
pop
pop
sar
adcb
xchg
jge
inc
adc
mov
addr16
and
xchg
push
jge
or
movsl
or
jne
pusha
mov
or
jecxz
shll
in
repz
loop
add
fiadds
dec
add
mov
imul
lahf
insl
mov
rep
test
or
sub
xchg
sbb
xchg
ds
outsb
in
scas
shrb
lcall
aaa
stos
inc
test
and
into
fldl
jnp
fldt
loopne
dec
push
mov
sbb
jno
add
sbb
lret
or
sub
sti
mov
dec
stos
inc
in
pop
push
push
sub
sbb
xchg
mov
iret
adc
push
fwait
imul
js
jmp
mov
mov
enter
or
fs
fists
bound
mov
cld
cltd
pop
popf
push
loop
in
inc
xchg
std
ja
pop
jmp
jae
loope
scas
test
xchg
pop
aam
test
mov
int
add
fldpi
push
and
push
orb
inc
cmpsb
mov
mov
ret
sub
adc
xchg
lahf
fs
or
fadds
ds
loope
lcall
in
ds
mov
and
adc
fwait
dec
push
test
mov
std
ljmp
xchg
adc
mov
subl
adc
or
aam
adc
and
sub
enter
sbbl
ret
xorb
jmp
cmpb
cmp
jo
sbb
add
jmp
arpl
xchg
xchg
jmp
test
adc
lods
fcompl
enter
cmp
inc
xchg
jp
fisubl
fdivrl
pop
cli
iret
loop
jl
mov
fld1
jb
cmp
pop
xor
call
inc
inc
mov
pushf
mov
mov
int
imul
cmpb
xor
and
fstpt
pop
sbb
test
xlat
jmp
cmp
pop
sbb
adc
rcrb
mov
cmp
adc
icebp
sarl
adc
clc
mov
lcall
pop
clc
stos
bnd
loope
out
xchg
lret
sar
xor
mov
in
leave
pop
inc
push
dec
mov
cmp
lcall
scas
xchg
dec
movsl
xchg
mov
adc
inc
lcall
jge
pop
xor
cwtl
sti
aad
mov
leave
loop
das
jecxz
add
sub
test
sbbl
imul
dec
xor
imul
out
push
sarb
lods
cmp
cli
mov
fwait
outsl
pop
dec
outsb
aaa
popf
popa
xchg
or
int3
pop
and
mov
test
idivl
es
mov
ss
lahf
div
std
ficomps
cmp
push
dec
mov
pop
mov
pop
jne
cmpl
inc
notl
fwait
pop
cmovae
sbb
mov
icebp
enter
mov
adc
fnstsw
fsubrl
test
movsl
mov
mov
fisubrs
mov
int
out
xchg
dec
sbb
jl
insl
fisttpll
mov
mov
pushf
mov
pop
in
push
repnz
shrl
test
lret
loop
pop
scas
jbe
sub
xchg
dec
cli
sbb
jmp
pop
adc
test
ss
pop
loope
leave
scas
xlat
in
ljmp
lock
dec
cmpsw
lret
out
in
scas
addr16
lods
shll
cmp
arpl
aas
jmp
es
adc
les
cmpsb
inc
cltd
pop
xor
add
push
push
pop
sub
push
adc
call
xchg
xchg
mov
pop
das
or
sub
xchg
enter
inc
ja
dec
or
add
syscall
jo
sbb
gs
mov
pop
sub
pop
jb
or
sbb
int3
pop
sub
loopne
fsubrl
mov
bound
push
inc
popa
fwait
inc
mov
icebp
cwtl
mov
test
dec
sub
setns
fsubrl
pushf
jo
push
or
xchg
stos
pop
negb
sbb
insl
mov
add
adc
pop
insb
jne
xor
popf
inc
pusha
mov
and
or
loope
pusha
loop
or
imul
inc
sbb
add
xchg
sbb
lahf
mov
adc
jecxz
sub
mov
out
out
lahf
mov
lret
fld1
jne
sub
or
popf
testb
adc
jmp
test
hlt
push
rcr
pop
int
ret
sub
pop
push
into
imul
popa
or
mov
sti
mull
pop
aaa
lock
repz
pop
mov
iret
iret
stos
cs
sub
mov
dec
pop
arpl
xorb
add
ficoms
push
cli
push
push
pop
or
aad
negl
ja
fldt
arpl
push
xchg
jo
es
inc
sbb
mov
push
push
mov
or
mov
into
movsb
push
vpmulhw
push
mov
jnp
scas
fucomi
inc
daa
xchg
dec
fists
iret
adc
lret
cmp
mov
jecxz
lds
shl
mov
lret
in
mov
mov
inc
push
test
lods
mov
out
mov
cwtl
jecxz
cwtl
dec
push
aaa
stos
add
and
mov
xchg
cmp
subb
xor
sub
cmc
test
test
mov
call
inc
out
adc
sbb
or
cmpsl
mov
aaa
sub
xchg
or
mov
pushf
push
sub
aas
mov
sub
test
inc
addr16
mov
fucomp
movsb
mov
sub
into
jo
fnstenv
or
xchg
pop
ret
inc
sbb
sbb
adc
les
lahf
fwait
sbb
cmp
cltd
mov
insb
idivl
xlat
jo
jmp
pop
fmul
ret
popa
or
jne
mov
adc
test
adc
aam
ret
popf
xor
testb
movsb
inc
inc
popf
stos
jo
int3
and
mov
add
sahf
cmc
dec
inc
xor
jg
mov
jo
insb
inc
aas
test
call
mov
xchg
dec
mov
into
pop
or
ljmp
sub
push
stos
repz
mov
mov
out
mov
in
popf
out
pop
dec
dec
or
shlb
xlat
lret
inc
cli
mov
mov
fsubl
repz
cli
mov
loop
jecxz
js
mov
int
jae
fiadds
mov
cmpsb
xchg
test
dec
into
sub
and
jg
sub
ja
inc
pop
jae
adc
js
lcall
dec
dec
dec
scas
jg
fsts
xor
arpl
pop
add
addl
add
add
outsb
enter
mov
adc
add
sub
int3
mov
arpl
dec
ret
lds
aaa
fldcw
jnp
iret
mov
popf
pop
lods
or
pop
and
dec
shr
mov
fsubr
mov
ffree
pop
sbb
sti
mov
outsb
cli
mov
popf
mov
insl
mov
dec
cmp
mov
add
sub
pop
add
std
aad
dec
inc
pop
add
mov
push
cwtl
push
hlt
sub
hlt
mov
aaa
rolb
pop
cmpsl
xchg
xorb
mov
lret
push
mov
in
fs
sub
and
test
outsb
or
sbb
push
cmp
fisubrl
roll
lods
fisubrl
outsl
or
enter
adc
mov
push
xchg
sbb
rolb
pop
callw
xchg
ds
ret
notl
outsb
dec
dec
scas
aad
jp
std
add
xor
loop
mov
adc
subb
mov
pusha
fwait
mov
mov
jg
dec
mov
cmpsl
mov
into
and
dec
inc
daa
jl
icebp
push
int
lret
jmp
mov
test
stos
or
enter
out
movsb
out
ret
xchg
fnstcw
push
aas
cmp
jecxz
pop
push
jo
sbb
ja
inc
mov
cmp
outsl
xor
nop
mov
loopne
push
push
dec
fnstcw
pop
or
inc
lods
push
lds
sbb
mov
mov
loop
pushf
cmp
setp
push
jmp
mov
fimull
xlat
xor
sbb
fcoml
fucomi
lds
pop
enter
lahf
scas
jg
stos
xchg
mov
js
push
fwait
out
sub
sbb
mov
fwait
push
dec
mov
out
dec
aam
inc
addr16
repnz
xchg
cmpsl
addl
sbb
add
or
ja
std
mov
pusha
xor
mov
loopne
sub
add
andb
js
sbb
hlt
pop
mov
add
stos
xorb
and
out
pop
ss
mov
add
test
fucomip
repz
ljmp
add
adc
sbb
mov
insl
popf
mov
jae
pop
aam
aaa
sub
pushf
out
sub
sbb
arpl
sub
dec
scas
stos
push
sub
insb
pop
push
test
ja
lods
das
xchg
fsubrs
sbb
inc
sbb
fcmovne
rorb
lods
push
xor
loop
cs
mov
mov
insl
movl
pop
mov
ja
fmul
mov
cmp
push
sub
or
addl
rolb
add
xchg
dec
mov
and
cmpsb
xchg
das
sub
or
loopne
lods
in
xor
vpshuflw
out
fsubl
add
jae
shlb
stos
out
sub
jb
jmp
adc
mov
mov
mov
movsb
ret
lock
sbb
adc
jmp
inc
pop
scas
lea
ja
xor
lods
xchg
add
fdivs
cwtl
add
cmpsb
test
dec
pop
div
add
call
pop
popa
das
movsb
cmpsb
aad
sahf
xchg
xchg
mov
int
lock
pop
out
or
jl
mov
jl
adc
xchg
push
and
test
sub
outsl
xchg
dec
xchg
out
add
dec
cltd
fs
andl
cwtl
mov
jge
in
and
test
and
fstl
testl
cmpsl
shr
cmp
jl
fs
xlat
fstl
mov
xchg
sbbl
fs
lods
xlat
mov
fxch
scas
sahf
xchg
test
sti
std
mov
sti
and
lods
cwtl
jecxz
scas
mov
popa
out
mov
int
cmp
inc
and
sbb
mov
lods
mov
ret
imul
jl
test
imul
mov
mov
mov
outsb
push
or
jg
cwtl
sub
sub
sbb
enter
stos
push
sub
dec
hlt
inc
mov
in
push
lods
jp
in
mov
into
pop
pushf
movsl
cltd
jmp
les
dec
inc
shlb
in
jge
jge
add
sub
aad
xchg
sbb
fwait
lods
xchg
aam
xor
pop
jp
mov
mov
nop
inc
lret
xchg
mov
aas
xchg
pop
jb
mov
push
es
sbb
jo
mov
pop
adc
outsl
mov
inc
adc
pop
ja
nop
and
outsb
jmp
dec
cmp
jmp
inc
sbb
dec
fbstp
sub
dec
pop
xlat
and
hlt
cmpsl
leave
xor
lods
xchg
fwait
dec
rcrl
sbb
xor
mov
icebp
rcll
dec
sbb
push
ret
iret
lahf
jl
lock
sti
inc
popa
leave
in
ja
nop
xor
dec
xchg
lret
fsubrl
stos
stos
clc
repnz
cli
or
xchg
test
xchg
jne
mov
xor
ret
rcrb
imul
lods
insl
sbb
dec
pusha
or
fisubrl
out
add
push
pop
lods
cwtl
sub
sbb
sub
sbb
fldt
fildll
js
push
mov
mov
fwait
push
mov
inc
mov
repnz
jbe
mov
incl
stos
in
sbb
shll
cmp
xor
aad
cmp
sbb
jne
fld1
insb
mov
fdivp
inc
clc
jo
cltd
stos
cmp
pop
lret
add
cld
mov
xchg
out
sahf
xchg
negb
cmp
or
cmp
mov
iret
ss
and
xchg
push
inc
sahf
out
adc
pop
aad
lahf
xor
popf
push
aad
leave
subl
sbb
gs
ret
pop
push
jnp
mov
std
mov
jae
pop
leave
in
and
xor
and
push
cmc
add
mov
jbe
outsl
mov
shrl
adcb
xor
ljmp
fldenv
mov
daa
out
nop
out
push
cmpl
ja
jecxz
add
subl
negl
mov
js
jns
pop
push
sbb
aam
and
push
popf
icebp
js
call
dec
and
aad
mov
popf
sub
mov
dec
inc
cmp
push
lahf
enter
shlb
cltd
push
pop
cmc
ficoml
mov
or
xchg
pop
pop
addr16
jb
clc
lock
sub
or
test
cmpsl
or
lods
sarb
xor
cmpsl
mov
xchg
rolb
push
xchg
push
cmp
xchg
loope
fiaddl
mov
dec
icebp
xor
inc
pop
mov
mov
fbstp
movsb
lods
cs
scas
sbb
and
mov
adc
pop
aam
rcll
arpl
fbld
stos
inc
leave
dec
mov
cmp
or
xor
leave
rolb
xlat
fucomi
repnz
jns
sarl
xchg
clc
dec
rolb
dec
bound
or
or
nop
pop
outsl
js
inc
daa
or
and
sub
xchg
rcl
test
in
pop
dec
fistl
jns
xchg
sarl
movsl
sbb
fldl
addr16
adc
mov
int3
sti
pop
pop
lods
sbb
xchg
imul
push
or
jge
lods
add
add
xor
sub
data16
aaa
push
popf
mov
stc
fisttpll
push
add
idivl
in
insb
cmp
xor
mov
ret
bound
xor
add
add
sbb
and
xor
add
adc
gs
mov
loop
bound
mov
imul
mov
add
mov
les
push
mov
inc
out
mov
int3
fldenv
xor
int
fsubrl
fs
in
sub
inc
xchg
dec
cli
jae
xchg
fwait
lds
or
mov
jmp
mov
repnz
fsub
pushl
out
shrb
nop
test
xchg
ja
and
int
int3
xchg
lds
movsl
rclb
jae
sbb
sahf
or
inc
hlt
jb
jle
adc
cmc
adc
add
pop
das
xor
mov
mov
int
dec
adc
fldt
mov
sahf
cmc
fmul
mov
mov
std
je
jecxz
enter
jg
mov
inc
fnstcw
test
fmull
adc
sbb
dec
pop
cmp
add
test
jne
xchg
scas
add
push
jl
or
push
rolb
add
aaa
inc
andl
adc
fs
sub
subb
sub
mov
sub
fs
ss
mov
jge
cltd
fstpl
fdivs
lahf
cmp
incl
jae
repnz
leave
test
cld
xor
push
or
jle
mov
dec
cmp
je
out
mov
outsl
mov
xchg
jecxz
xchg
pop
mov
not
out
xchg
inc
sbb
inc
cs
lea
icebp
test
cmp
int3
add
inc
je
mov
xor
int
js
mov
sbbl
movl
cmc
push
xor
lret
xor
jg
movb
inc
js
add
sub
int3
adc
xor
inc
push
aam
xchg
incl
cmp
pop
mov
lock
fisubrs
dec
fiaddl
sbb
jecxz
dec
xor
xor
push
mov
sahf
dec
pop
push
jg
stos
jge
dec
pushfw
sbb
dec
xor
jae
repnz
mov
sub
loop
mov
cmp
lahf
loop
adc
fstpl
fdivs
lahf
jle
pop
push
cltd
bnd
pusha
xchg
dec
xchg
repz
inc
rcrb
inc
nop
out
inc
cmp
shll
and
mov
jecxz
out
pop
cmpsb
dec
sub
pushf
xchg
push
bound
sti
xor
pop
lea
mov
bound
and
mov
mov
lds
ret
pop
cmpsb
je
mov
dec
sahf
dec
ja
xor
mov
mov
pop
or
call
mov
arpl
xorl
out
mov
in
ja
sbb
sbb
icebp
test
inc
ljmp
loopne
dec
sarb
stc
mov
test
mov
lret
fucomp
cmpl
test
mov
push
inc
test
ss
pushf
add
imul
pop
data16
jne
cli
inc
inc
mov
test
xor
mov
mov
mov
pop
sub
mov
xchg
cmp
and
sub
les
sbb
mov
rcrb
mov
sbb
ss
pop
jne
fnsave
pop
mov
and
cwtl
inc
pushf
dec
inc
imul
cwtl
dec
nop
dec
inc
aad
imul
imul
popa
cmp
xchg
addb
negl
testl
lea
inc
push
stos
pop
jmp
xchg
nop
mov
push
sti
push
pop
or
and
dec
fwait
sbb
add
test
jge
pop
dec
pop
xchg
stc
sub
sub
xchg
or
gs
imul
mov
popa
pop
mov
stos
rcrb
jne
vmaxss
mov
movsl
add
clc
aam
jmp
jmp
sbb
insb
ss
fstp
divl
xchg
xchg
mov
daa
mov
and
xchg
jg
test
and
and
icebp
sub
loop
push
fistps
les
stos
push
mov
dec
sub
sub
adc
mov
add
jbe
ljmp
xor
push
xchg
adc
jns
out
cmc
dec
lahf
sbb
jnp
mov
test
cmp
or
xchg
loope
mov
xchg
scas
mov
dec
js
hlt
mov
mov
rcr
push
mov
add
aam
push
pop
push
subb
ljmp
aam
add
imul
mov
inc
movsl
push
fsubs
hlt
cmp
aaa
fwait
nop
cmpsb
shrl
inc
inc
mov
ret
rcrl
iret
sub
or
inc
fwait
or
or
jns
dec
sti
mov
scas
out
adc
dec
pop
xchg
int
dec
cmpsb
fnstsw
xchg
dec
jae
shr
repnz
inc
sbb
inc
and
and
mov
or
push
pop
pop
lcall
sub
adc
xchg
cmp
lret
adc
cli
ss
stos
push
add
fisttpl
shlb
cld
jbe
pop
jmp
xor
pop
lahf
lret
inc
jmp
pop
mov
jecxz
in
clc
cmp
sub
push
mov
roll
hlt
mov
addr16
lea
dec
adc
push
xor
sub
and
fwait
dec
xchg
loop
dec
jmp
pop
fisubl
fstps
outsb
sub
mov
imul
movb
fistl
psubw
xor
inc
insb
js
nop
push
int3
hlt
loop
inc
mov
jg
or
fsubrs
sbb
push
mov
out
gs
adc
xor
push
xor
mov
mov
pusha
in
das
loopne
push
fwait
cmp
mov
mov
mov
add
mov
add
movl
fistl
stos
add
mulps
in
inc
mov
or
dec
fdiv
shlb
aaa
pop
or
mov
adc
xchg
ja
fs
mov
inc
sub
pop
dec
jno
dec
push
popf
out
fistpll
test
loop
pop
push
sahf
call
push
mov
xchg
fadds
mov
mov
cmp
xchg
lods
out
out
push
or
test
fnstsw
mov
fmull
out
mov
mov
stos
int3
jge
mov
lahf
jmp
js
adc
cmc
stos
inc
je
add
out
jle
xchg
xor
dec
xor
xchg
cmc
mov
ret
sbb
dec
mov
mov
cmpsl
or
adc
jb
inc
push
in
mov
adc
imul
cmc
test
loope
or
mov
test
push
dec
inc
testb
outsl
push
stos
roll
shlb
mov
or
cmp
adc
loop
call
or
in
dec
inc
cmp
jnp
pop
adc
push
sbb
fwait
jno
test
push
fildll
jmp
xor
cmp
adc
popf
lret
and
sub
sbb
cli
int
sub
mov
fidivrs
mov
push
push
aad
xor
push
mov
popa
xor
jmp
push
fdiv
enter
cmp
and
mov
ljmp
add
fdivp
fidivrs
arpl
lock
push
sub
pop
xchg
pop
dec
inc
pop
jmp
push
dec
dec
add
das
jle
mov
pop
lea
fwait
int
inc
mov
outsl
mov
sbb
xor
popf
xchg
rcrb
test
push
addr16
dec
push
hlt
repz
lcall
mov
add
inc
xor
inc
sti
cmp
jg
loop
outsb
enter
test
int3
inc
add
aad
or
mov
pop
dec
adc
dec
push
jae
inc
add
imul
popf
or
push
dec
pop
sbb
mov
xor
ljmp
in
leave
das
gs
dec
mov
push
daa
je
sbb
xchg
jge
dec
dec
cmpsl
push
ja
jg
cmpsl
dec
fcompl
jbe
sub
aaa
push
push
dec
sub
or
inc
fwait
cmc
leave
mov
out
mov
inc
pop
pop
mov
mov
or
xchg
mov
mov
pop
or
jmp
pop
mov
shll
dec
jns
pusha
jb
inc
fimull
pusha
out
or
loope
insb
cltd
xchg
icebp
push
pop
push
add
mov
push
and
ja
or
das
loopne
stos
add
mov
pop
loopne
jg
iret
fisttpl
clc
js
inc
inc
mov
push
add
jecxz
in
lahf
ret
mov
iret
iret
imul
mov
stos
dec
lods
out
mov
sub
dec
jb
dec
xchg
shll
ret
inc
xchg
push
test
aas
pop
lods
and
push
push
popa
std
mov
shlb
dec
xchg
inc
inc
push
pop
mov
push
push
sub
xor
cmpsb
jmp
dec
les
and
lahf
ljmp
and
fisubrl
imul
lahf
mov
enter
cmp
movsl
std
mov
les
mov
push
mov
out
add
iret
jne
and
test
ss
fs
pop
out
movsb
jno
sbb
inc
popw
lea
cltd
add
mov
test
xchg
jge
inc
dec
orl
inc
xor
in
pop
xor
sbb
outsb
cli
lods
pusha
and
add
push
popf
mov
pop
faddl
clc
cmp
in
test
sbb
lds
fwait
bound
nop
mov
loop
cmpsb
push
cmc
pop
pop
dec
add
stos
test
add
dec
shrb
cmpsb
neg
iret
push
mov
xor
hlt
xor
mov
inc
test
jb
push
imul
sbb
gs
dec
shll
mov
mov
test
cmc
repz
daa
mov
push
add
inc
movl
enter
jl
push
ret
and
add
inc
cmp
ljmp
lods
sbb
scas
out
loop
inc
sbb
adc
jbe
adc
and
and
lret
mov
aaa
dec
inc
add
xchg
fdiv
insb
aaa
xor
mov
imulb
xchg
jmp
sbb
mov
xor
push
jge
cmp
scas
pushl
mov
repz
jge
jecxz
lahf
in
clc
test
pop
dec
jo
cmp
mov
aaa
add
fmull
xor
push
jle
mov
fs
stos
xor
dec
push
pushf
adcl
sbb
in
mov
out
add
les
pop
pop
mov
fisubl
movsb
imul
inc
inc
pop
jb
dec
fs
lods
jae
jno
mov
mov
aas
jecxz
pusha
mov
scas
push
shll
ror
mov
sub
js
mov
push
jge
jg
pop
ficompl
jle
mov
loopne
sub
pop
cli
mov
cli
leave
and
mov
dec
pop
rclb
sti
lahf
sbb
es
leave
pushf
jge
and
cs
daa
fsubr
mov
sbb
or
shlb
sub
sbb
and
push
popf
mov
pop
cmp
aas
scas
push
sbb
arpl
cwtl
sbb
in
aas
push
add
mov
cmpsl
mov
jo
fsubl
xor
sbb
test
jb
mov
clc
sarl
inc
sub
lods
popf
jae
pop
test
fisttpl
dec
bound
movsl
negl
mov
mov
jbe
xchg
adc
adc
push
push
inc
push
insl
dec
mov
fsubrl
mov
jbe
and
mov
and
mov
scas
cmp
xor
mov
cmp
mov
in
pushl
adc
addr16
int
mov
sub
insb
je
cli
pop
lods
inc
lods
xchg
je
mov
pusha
jo
hlt
call
jb
sti
xor
push
stc
push
jle
ret
mov
xchg
jle
jl
cs
cmp
pop
pop
daa
adc
loop
mov
dec
das
or
fcoms
inc
inc
dec
pop
mov
or
or
jnp
std
push
js
sbb
push
int3
cmpsl
mov
adc
dec
sbb
gs
jne
into
cwtl
andl
dec
in
in
js
sub
rcll
stos
hlt
and
mov
arpl
inc
mov
pushf
xor
xchg
incb
push
mov
mov
lods
add
imul
jae
movsb
xchg
rolb
fidivrs
xchg
scas
xchg
lahf
leave
pop
xchg
filds
aaa
imul
sub
std
ljmp
xchg
push
sti
add
fsubs
sbb
in
mov
jmp
sahf
cmp
insb
jbe
xorb
adc
mov
call
ret
hlt
cltd
int3
inc
cmp
mov
and
inc
jne
test
cmp
outsb
leave
int3
xchg
mov
mov
ret
pop
std
mov
in
push
mov
jp
add
inc
sbb
jbe
pop
ret
aad
addr16
cmpsb
add
sbb
and
sub
push
inc
lahf
addr16
xor
push
shll
mov
mov
subb
inc
ret
pop
scas
mov
loop
xchg
cmp
ljmp
sub
gs
int
mov
xchg
add
xchg
mov
dec
cltd
lods
inc
sbb
jmp
mov
ja
jg
mov
fs
cmc
test
aas
inc
sub
addl
sbb
hlt
js
jns
mov
out
dec
and
adc
ret
inc
lods
xchg
je
mov
fwait
insl
add
or
mov
mov
add
mov
mov
inc
mov
inc
sbb
mov
adc
jne
pop
mov
icebp
inc
inc
xor
std
sub
or
int
mov
pop
mov
pop
push
inc
push
mov
jns
add
ja
xchg
xor
xor
in
jg
inc
add
imul
inc
push
dec
xor
stos
push
dec
xor
sub
in
pop
mov
dec
xor
in
mov
bound
inc
mov
jp
jge
ss
dec
cmpsl
xor
jge
lcall
lahf
xchg
jbe
xor
in
aad
jge
mov
fcmovnb
stc
add
push
ret
cmc
std
cmpl
addl
mov
xor
mov
xchg
rcr
cli
orl
mov
xlat
std
or
movsl
dec
xchg
enter
mov
int
lds
xorl
or
mov
inc
fcoms
jbe
ret
fimuls
inc
inc
jbe
mov
repz
les
cmp
cmp
stos
and
std
mov
ret
cmpsl
icebp
jbe
test
jns
decl
mov
xchg
sbb
ret
push
xchg
ljmp
rcrb
dec
inc
fdivrs
xchg
andb
pop
into
sub
cltd
mov
sarb
gs
hlt
add
mov
dec
jae
xchg
pop
jnp
inc
sub
outsl
int3
dec
cmp
movsb
sahf
pop
jl
addl
ret
aad
jle
mov
ja
ds
fwait
mov
negl
shl
push
xor
fs
mov
faddp
pop
rcrw
mov
fists
push
out
fs
push
cli
in
mov
xor
xor
rclb
mov
mov
sqrtps
inc
test
mov
ret
add
xchg
push
repnz
test
test
push
sbb
xlat
call
xor
sub
add
repz
mov
sbb
inc
mov
xor
lcall
xor
jmp
test
fisubrl
lds
lret
imul
lea
push
rcl
mov
jns
cs
xchg
or
out
test
cmpsb
test
mov
cmpsl
push
pop
movsb
pop
jnp
dec
lods
pop
test
sbb
lahf
xchg
movsl
sbbb
push
cmc
mov
sub
sbb
aas
cmpsl
in
mov
andl
test
mov
stc
mov
iret
out
push
clc
repnz
push
cmp
pop
mov
lea
rcrb
ret
mov
adc
sarb
aam
mov
xchg
or
jne
mov
lea
inc
xor
mov
cld
or
xor
cmp
int
hlt
addl
xor
push
ret
jecxz
adc
mov
cmp
out
inc
inc
add
mov
test
es
lds
sbb
sub
popa
scas
sbb
gs
pop
mov
jb
push
shlb
mov
jns
filds
mov
add
mov
es
cmp
mov
lods
ja
das
lahf
inc
jge
dec
add
dec
pop
mov
cwtl
mov
lea
jnp
jno
out
in
js
sub
shll
inc
add
lret
add
icebp
xchg
ret
adc
xchg
rcr
test
adc
mov
leave
repnz
out
add
pop
pop
pop
rclb
jnp
sbb
cmpsb
mov
les
sub
mov
into
add
sbb
or
int
xchg
lods
enter
inc
ja
test
pop
add
xorb
lret
jecxz
add
cmp
or
add
nop
cmp
insb
xor
ret
adc
dec
xor
sub
bnd
stos
pop
and
xchg
std
cmp
add
test
movsl
test
adc
ret
int
lcall
hlt
xor
mov
pop
cmp
or
test
adc
pusha
mov
cmpsl
loopne
push
push
sbb
xchg
xchg
jae
es
hlt
js
jns
pop
ret
enter
sbb
aas
jb
pop
test
fucomip
imul
ja
stos
cltd
out
rorl
test
fs
pop
iret
ds
popf
mov
mov
lds
test
sub
push
and
enter
dec
ja
mov
xchg
add
xor
mov
dec
push
adc
rolb
sar
jl
sbb
dec
add
mov
push
aaa
stc
add
mov
std
into
in
xor
test
xor
cmpsl
push
dec
xor
mov
sbb
mov
push
dec
shll
jmp
push
leave
and
and
mov
inc
bound
ror
pop
jns
gs
push
jne
jne
or
imul
and
daa
lcall
adc
cmp
mov
xchg
mov
sarl
aas
sahf
ljmp
imul
js
les
seto
pop
push
ret
or
inc
inc
mov
push
pop
push
cmp
mov
sbb
dec
jb
jns
pop
jmp
cmpsb
dec
aam
int3
jns
dec
mov
cmpsl
and
add
jge
mov
sub
rcrl
inc
inc
xchg
repz
enter
adc
ds
push
pusha
lahf
jecxz
inc
mov
out
xchg
insl
pushf
xor
sbb
jg
daa
mov
fadd
lahf
call
mov
lret
imul
les
push
cmp
pop
and
test
mov
sbb
int3
sbb
push
insb
push
inc
pop
sub
cmp
icebp
pop
int
idivb
scas
xchg
mov
stos
outsl
leave
rcrb
mov
and
popa
in
mov
dec
sbb
mov
adc
adc
or
negl
shl
push
xor
fs
mov
faddp
pop
rcrw
mov
fists
push
out
fs
push
cli
in
mov
xor
xor
rclb
mov
mov
pand
or
mov
dec
stos
or
cs
mov
aam
mov
repz
mov
imul
cmp
mov
clc
sti
pop
or
push
mov
xchg
std
ret
testb
mov
ljmp
rcrl
addl
dec
icebp
orb
inc
and
xlat
jae
sbb
in
mov
pop
sub
or
idivb
scas
xlat
stos
pop
push
jge
pop
outsb
hlt
mov
push
and
mov
jo
or
icebp
je
mov
rorl
push
mov
sarl
je
mov
cmpsl
sbb
dec
cmc
pushf
sbbb
jle
mov
fnstenv
filds
and
cmpsb
ret
out
scas
js
es
cmp
enter
or
xor
add
hlt
cwtl
dec
push
lret
outsb
dec
sbb
test
shrb
addr16
aas
mov
fisubl
jno
je
and
jmp
add
out
repz
mov
sbb
add
and
sbb
sahf
aad
stos
mov
leave
cmp
in
mov
xchg
push
inc
insl
push
fcompl
lret
adc
push
les
xlat
lret
push
ret
lods
dec
imul
aad
mov
insl
xchg
lcall
cmpsl
push
ljmp
xchg
mov
xchg
dec
jnp
xchg
dec
scas
jg
mov
inc
inc
fcomip
mov
inc
mov
mov
mov
je
aad
je
pop
adc
lret
mov
adc
sub
sub
dec
movsl
fbld
pop
xchg
lahf
imul
pop
out
mov
mov
add
daa
sbb
bnd
add
bnd
daa
adc
mov
aam
mov
sub
xor
lods
in
mov
or
cmp
fidivrs
pusha
addr16
popf
in
lea
sub
jae
push
shrl
out
sbbl
mov
icebp
mov
lahf
mov
xchg
adc
pop
dec
pop
negl
movb
cld
js
fsubrs
or
inc
dec
pop
aam
dec
pusha
or
xchg
scas
inc
lds
mov
pop
stos
enter
out
xchg
push
mov
push
sahf
jg
sub
inc
inc
fstpl
jecxz
test
insl
fldenv
cmc
std
ret
cmp
aas
add
xor
les
test
cmp
dec
sbb
shlb
not
in
icebp
pop
xor
sub
xchg
sub
push
pop
pop
cmp
iret
sub
aad
lahf
sbb
push
aaa
sbb
outsb
inc
xor
inc
mov
mov
fistpl
hlt
cmpsl
or
push
pop
xor
stos
shr
repz
pop
divb
sub
add
fists
inc
iret
lahf
sbb
inc
lock
pop
xor
push
lock
rcrb
dec
cli
hlt
mov
xlat
lret
imul
mov
pop
pop
aam
jp
jns
ljmp
inc
adc
mov
in
imul
stc
xorl
xor
pop
movsl
mov
shll
mov
sub
pop
mov
enter
pop
shl
add
gs
arpl
out
loope
into
adc
clc
xchg
and
jno
mov
rclb
inc
or
xchg
mov
iret
out
gs
loopne
fcoms
xchg
mov
js
mov
lcall
scas
popf
call
jge
add
fnsave
out
add
and
jecxz
sbb
inc
aaa
lock
or
cmp
xor
xor
pop
push
xor
mov
adc
sbb
orb
mov
pop
add
ficomps
lret
aaa
lock
out
aad
pusha
sbb
nop
dec
add
sbb
inc
pushf
ror
fmull
inc
xor
iret
test
nop
loop
add
xchg
insl
lods
push
sti
xchg
xchg
inc
sub
xchg
cmp
xor
movsl
xchg
inc
loope
mov
subb
hlt
sbb
outsb
divb
pop
gs
fstpt
xchg
cmp
dec
popa
mov
fst
jecxz
cmp
aad
in
cmp
pop
js
push
aad
ds
shll
inc
sbb
ficoms
xchg
and
out
clc
scas
or
push
pop
xchg
mov
ror
inc
mov
dec
bound
fwait
lea
sbb
ja
iret
iret
push
or
es
cmp
ret
sbb
push
mov
sub
insl
mov
dec
jae
xor
je
or
xor
mov
fdivp
mov
or
xor
cld
enter
jp
pop
mov
jg
xchg
mov
lock
add
or
add
sub
inc
mov
out
cltd
stos
fs
or
push
cmp
outsb
push
jl
add
cmp
xchg
stos
inc
and
inc
lods
addps
test
subb
call
call
sbb
cmp
jge
inc
jnp
test
fstpt
fsubrp
sbb
js
mov
xchg
cmpl
test
mov
mov
pop
movb
xlat
push
or
dec
mov
or
sbb
dec
mov
lods
daa
fldenv
mov
nop
das
andl
jecxz
cmpsb
fnsave
add
xor
mov
fstpl
int
mov
sbb
push
jno
or
sub
cmp
mov
negl
jmp
mov
or
inc
mov
leave
xchg
ja
push
adc
mov
add
ljmp
and
adc
adc
xor
movsl
jge
test
xchg
aad
pop
add
dec
sub
xchg
mov
scas
dec
jns
xchg
push
clc
test
dec
lods
sarb
pusha
inc
fidivrl
fldenv
bound
xchg
mov
sti
and
push
or
cmp
vmread
pushf
dec
jo
inc
int
test
mov
nop
test
inc
enter
dec
sub
xchg
add
xchg
nop
pop
je
add
jle
les
test
or
pop
push
adc
mov
xlat
pop
dec
dec
rolb
inc
std
pop
jle
xchg
cmc
movsl
jge
ja
daa
out
inc
ret
inc
sahf
fisttps
loope
addl
dec
or
dec
add
jmp
jmp
rorl
add
orl
xchg
outsl
mov
dec
sbb
and
int
add
mov
popf
insl
inc
push
pop
mov
jne
or
test
push
fsub
or
hlt
pop
add
xchg
sar
add
dec
dec
gs
nop
push
loope
cs
test
pop
test
rcll
pop
pop
xor
pop
fs
push
shll
ror
mov
sub
js
mov
push
jge
jg
pop
ficompl
jle
mov
loopne
sub
pop
cli
mov
cli
leave
and
mov
dec
pop
rclb
sti
lahf
xlat
call
int3
add
arpl
lret
mov
cwtl
stc
movsb
cmpsl
dec
inc
mov
loope
dec
sbb
cs
jne
pop
mov
mov
inc
xchg
adc
jno
dec
je
and
push
enter
adc
mov
pop
mov
test
ljmp
pop
cmp
push
inc
icebp
gs
imul
xchg
in
push
adc
add
xor
pop
dec
dec
inc
lahf
cmp
sbb
loopne
dec
scas
sbb
insl
mov
in
push
sub
lods
outsl
or
jbe
mov
sbb
stos
add
add
add
loope
dec
fimuls
adc
or
add
in
stos
mov
push
mov
gs
xchg
rclb
sbb
xchg
sbb
and
sbb
xchg
imul
negl
xchg
or
xchg
data16
and
dec
fwait
ja
faddl
dec
sbb
imul
in
rol
sub
sbb
les
dec
or
inc
shll
mov
ss
mov
popf
mov
movsl
sti
enter
adc
xor
shrb
stc
arpl
cwtl
sbb
in
aas
lea
cmpb
xchg
leave
fcoml
xchg
arpl
mov
pushf
into
fwait
mov
aas
jmp
ret
push
adc
mov
ret
ret
xchg
cmp
sub
cltd
lods
aad
loopne
loopne
iret
xorl
rcr
jp
imul
lahf
fs
sar
or
test
bswap
cmc
xchg
mull
daa
leave
xchg
stc
sbb
sbb
xchg
inc
stos
out
xchg
ss
lock
dec
xor
add
ljmp
leave
lods
lock
mov
push
cmp
stc
fnsave
jo
fsts
mov
loop
add
add
ja
and
dec
sar
loopne
mov
mov
pop
pop
dec
pop
sbb
repz
sbb
and
lret
jecxz
inc
rorl
fdivp
mov
jne
sbb
nop
in
mov
mov
or
dec
cmpb
and
ja
stos
test
and
cmp
mov
jmp
jo
in
shlb
jae
inc
and
test
test
out
push
mov
add
roll
lods
decb
enter
cmpsl
inc
pop
ss
ja
mov
inc
jg
xor
jle
in
jl
jnp
filds
add
jge
pop
xchg
xor
cld
loopne
test
faddl
fbstp
cld
sbb
popf
jmp
lds
mov
cmp
push
sbb
and
cmp
sub
sbb
mov
dec
mov
mov
pop
jne
nop
pop
jl
and
push
and
icebp
xor
ror
pop
adcl
popa
mov
mov
leave
sarb
nop
xchg
add
inc
push
and
aad
pop
jmp
js
fwait
mov
dec
dec
sbb
jno
lods
lret
dec
push
les
xchg
xchg
xchg
imul
in
pop
sub
or
lds
shll
jns
mov
aad
inc
lahf
pop
or
jne
push
mov
sbb
ljmp
icebp
adc
adc
repz
ja
dec
sbb
repz
mov
sbb
lret
xchg
mov
inc
sbb
pop
cmp
outsb
sub
lea
out
orl
dec
popf
or
mov
pop
mov
pop
scas
mov
push
inc
cmpsl
dec
loopne
popa
je
jne
or
and
or
xor
sbb
adc
rcll
ret
loop
sti
pop
sti
divb
add
mov
pop
cmp
add
stos
inc
adc
adc
and
jne
test
pop
data16
rclb
hlt
test
mov
lret
mov
scas
aam
test
jae
cmp
dec
das
jo
mov
fisubrl
pop
xchg
push
xlat
adc
dec
jns
adc
xchg
adc
aas
lahf
scas
ret
in
mov
inc
scas
mov
add
adc
psubd
jbe
lahf
js
add
nop
jp
xchg
jg
mov
loope
add
cmc
cli
arpl
jl
arpl
dec
fldcw
or
popf
xor
stc
lods
inc
test
xchg
ffree
mov
aam
add
or
push
movsl
mov
fcomp
push
dec
adc
lcall
and
push
movsb
mov
out
and
push
jle
add
add
nop
pop
ljmp
popa
das
inc
adc
cli
out
sbb
xchg
cwtl
push
loopne
push
push
dec
xor
xchg
fldt
push
jnp
clc
rorl
int
lret
inc
sub
iret
xchg
in
jae
addr16
pushl
sub
mov
fsubrs
test
in
inc
inc
pop
jb
xchg
jno
stos
xchg
mov
cltd
lret
lret
dec
lods
xlat
cmp
and
nop
sbb
flds
std
adc
push
xlat
jae
and
stos
int3
adc
dec
mov
sbb
mov
test
cmp
inc
cwtl
push
mov
fnstenv
xorl
and
mov
fsubrl
mov
mov
dec
and
sub
mov
pop
imul
dec
mov
mov
xchg
inc
mov
mov
xchg
clc
inc
sbb
xchg
cmp
adc
ret
into
push
xchg
ret
int
leave
call
lret
jnp
movsl
imul
sbb
xchg
cmp
pop
sub
push
inc
loop
inc
movsl
jmp
fidivs
mov
mov
mov
insl
aam
adc
mov
dec
sbb
mov
cmpsb
xor
jb
fisttpll
pop
xchg
push
mov
popa
xor
test
jl
enter
mov
or
les
jg
imul
mov
lods
mov
nop
aad
cmp
test
popa
mov
test
test
clc
mov
out
dec
mov
sub
cli
dec
es
test
insl
lea
sbb
mov
dec
sahf
push
mov
mov
dec
or
jmp
inc
movsl
dec
pusha
lods
inc
fs
jno
or
push
aas
enter
arpl
aam
fisubl
jns
out
cli
fidivrl
mov
dec
and
push
lods
leave
xor
mov
push
lea
push
lret
xor
test
fistps
inc
lahf
jae
cltd
out
les
sbb
lock
and
add
jae
mov
jb
xor
popa
scas
pop
inc
outsb
aam
sti
arpl
push
and
add
xchg
into
out
pop
les
sarl
rclb
pusha
sub
rcll
push
pop
pop
sbb
or
ds
cmp
xor
je
mov
cmp
mov
mov
or
cld
stos
iret
ss
movl
push
fmull
sbb
xchg
rolb
push
cmc
dec
ja
icebp
mov
aam
xchg
insl
clc
ds
hlt
mov
cmp
mov
outsl
or
aaa
lcall
push
sub
inc
add
int3
and
into
lea
pop
inc
dec
pop
cmp
mov
inc
push
adc
push
inc
loope
lret
js
sbb
inc
jbe
js
push
leave
sbb
mov
mov
ss
mov
fwait
pop
mov
mov
mov
mov
mov
imul
lahf
adcb
and
dec
add
std
xchg
lods
rcr
adc
sbb
push
notl
xchg
add
rcrl
pop
lret
mov
jbe
ja
daa
negl
xchg
or
xchg
data16
and
dec
fwait
ja
faddl
dec
sbb
imul
in
rol
sub
sbb
les
dec
or
inc
shll
mov
ljmp
nop
jl
fbstp
dec
sbb
push
ret
pop
and
mov
and
jge
pop
sub
mov
mov
gs
jne
cld
or
in
mov
mov
nop
imul
lds
mov
shrb
pop
xchg
out
fbld
inc
mov
jae
pop
mov
mov
popf
pushf
fcoms
sbb
mov
cld
cmp
test
and
xchg
fistl
pop
mov
aad
mov
push
movb
mov
lahf
enter
cld
mov
fwait
int
xchg
inc
mov
push
push
lcall
or
cmc
add
shl
jle
stc
faddl
xchg
std
out
fdivrl
inc
xlat
subb
inc
iret
es
jl
sbb
mov
push
and
daa
mov
pop
fwait
repz
push
adc
cmovs
mov
xchg
rclb
pushf
fldl
fstl
mov
fnstenv
out
fimull
jno
or
pusha
xchg
aas
mov
jmp
xchg
inc
mov
sahf
jl
in
and
add
add
fwait
les
push
cmpsl
jmp
aam
jl
clc
cmc
imul
lret
andl
sbb
sbb
xchg
jge
lcall
xor
xor
pop
shrl
xor
cltd
shll
jecxz
hlt
xchg
cmp
cmc
xor
imul
outsb
out
mov
dec
les
pop
push
inc
frstor
jb
push
jb
jno
cld
mov
jecxz
fs
mov
fisubl
std
add
scas
jb
int
add
mov
push
repz
loop
xor
ror
cwtl
mov
and
jbe
xchg
mov
dec
xor
sub
cmp
mov
clc
aas
in
and
cmpsl
aam
sbb
mov
mov
cmpsl
mov
dec
clc
mov
stos
cmpsb
mov
mov
orb
push
add
mov
jmp
inc
hlt
dec
stos
aad
aad
popf
xchg
movsb
ss
cmc
or
mov
fldenv
or
and
or
dec
add
mov
pop
lahf
adc
xor
pop
cs
adc
rolb
inc
roll
sar
dec
sbb
loop
mov
mov
jecxz
mov
ror
loop
jp
mov
out
test
xchg
jp
mov
cmp
sbb
lret
rcll
aaa
movsl
lret
xor
mov
test
or
cwtl
flds
pop
cmpsb
mov
mov
xchg
ffreep
call
mov
and
push
roll
cmpsl
lret
ficoml
sub
sub
pushf
in
add
dec
mov
in
icebp
pop
fsub
or
xchg
mov
add
iret
hlt
add
enter
lods
insl
jo
fld
push
fisttpll
xchg
fadds
daa
add
les
inc
imul
subl
icebp
in
push
lret
icebp
lahf
fisttpl
add
or
lret
mov
pop
data16
leave
inc
icebp
sahf
sbb
cli
or
scas
xchg
adc
jae
loope
inc
sbb
daa
or
mov
test
loope
add
iret
loop
lahf
dec
jno
push
scas
sarb
pop
cmp
xchg
cmp
adc
dec
and
push
adc
push
ds
sub
mov
push
ljmp
jecxz
cmpsb
loopne
pop
mov
scas
pushl
dec
mov
repz
mov
fwait
js
jns
jle
rcrb
xchg
rcrl
ret
in
dec
cltd
fs
ret
sbb
aas
mov
push
cmpsl
xchg
adcl
push
pop
inc
jle
movsb
inc
push
clc
mov
aas
ret
mov
nop
mov
jnp
int3
call
adcb
gs
fisttps
imul
mov
push
or
and
add
gs
mov
push
pop
jl
pusha
cmp
push
ja
pusha
xchg
inc
and
xchg
sbb
xchg
push
xchg
movsl
in
in
dec
fcmovbe
mov
jl
fs
jle
flds
cwtl
out
test
dec
xchg
mov
outsl
xchg
add
orb
fwait
repz
jne
mov
and
push
les
xor
or
xchg
xchg
lods
faddl
inc
je
add
cltd
lahf
inc
lret
cwtl
hlt
inc
sbb
adc
cli
mov
adc
dec
icebp
inc
lcall
in
sbb
add
stos
inc
xchg
insl
adc
mov
inc
pop
leave
jns
dec
movsl
ret
or
inc
push
cltd
mov
inc
inc
sbb
and
lret
nop
mov
push
gs
les
imul
mov
xchg
push
sub
mov
popa
cmc
test
ret
cmp
mov
adc
xor
pop
in
lret
lods
mov
gs
adc
adc
pop
xchg
adc
out
and
xchg
mov
pop
in
jl
sub
inc
test
dec
shll
fnstenv
jnp
push
ljmp
pop
xor
mov
mov
pop
into
clc
clc
pop
fidivrs
xor
push
and
fnstenv
push
pushf
or
cmpsl
mov
int
inc
sub
cs
aam
pop
mov
call
sbb
or
fld
je
pop
hlt
ret
ds
lahf
fadds
decl
xchg
push
sti
js
inc
lret
out
fwait
mov
cli
pop
mov
adc
mov
repnz
xchg
dec
bnd
inc
std
xlat
dec
adc
sub
lret
popf
cmp
cltd
mov
and
mov
lods
outsl
jge
insb
xchg
sar
mov
fwait
xchg
push
out
movsl
add
into
lds
xlat
push
in
iret
xchg
js
subl
and
xchg
push
and
dec
xor
mov
bound
lret
sub
fstp
sub
add
mov
xchg
pop
adc
lcall
cmc
aam
sbb
movsb
cli
cmp
push
inc
test
add
hlt
sysexit
dec
mov
jb
jnp
es
push
adc
jle
adc
adc
xorl
dec
sahf
jge
and
mov
nop
insb
sbb
and
movsl
jmp
cli
roll
sbbb
fmul
jecxz
or
sbbl
and
sbb
fistpl
adc
add
ljmp
scas
adc
xchg
dec
sub
jne
and
cs
lret
pop
dec
pop
mov
sbb
xor
jmp
inc
sbb
and
push
shlb
xor
push
xor
std
fdivr
push
lret
cltd
jbe
xor
or
inc
dec
push
aam
fildl
rorb
aas
aad
mov
jnp
add
sub
cli
fbld
inc
pop
push
xorl
sbb
and
mov
adc
loope
test
fldcw
scas
cli
jno
cltd
outsl
lahf
insl
test
es
push
dec
xor
xorb
jae
pushf
sbb
and
cmp
in
push
aaa
pushf
andl
mov
shll
movsb
mov
adc
lds
movsl
sbb
jp
add
cltd
sub
xchg
dec
sbb
add
lret
lds
push
rcrb
lds
add
dec
sbb
add
inc
addr16
test
ret
movsb
sbb
sbb
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
pop
dec
and
scas
cmc
add
xchg
or
pop
pop
jnp
movsl
sahf
je
out
and
cmpsl
popf
adc
push
ret
ljmp
adc
sti
and
push
cwtl
lock
rcll
aaa
rclb
xchg
mov
call
fldt
or
rolb
add
iret
lcall
addr16
lea
arpl
popa
mov
dec
sbb
and
cs
adc
js
test
xor
sbb
hlt
cmpsb
repz
ret
mov
test
int3
mov
mov
sub
mov
add
mov
dec
jecxz
cld
add
fs
push
xchg
dec
and
push
iret
pop
inc
dec
cmp
mov
imul
int3
pop
sub
mov
imul
sub
inc
push
sbb
jae
cmp
pop
imul
cmp
in
int3
dec
rorl
inc
xchg
mov
fmull
cmp
mov
lahf
push
js
fidivrs
xchg
rclb
fs
mov
add
pop
jmp
sub
add
adc
lret
movsl
cli
jg
adc
xor
rcrb
pop
mov
cltd
cmpsb
fwait
mov
adc
enter
or
test
lret
lret
cmpl
pop
stos
pop
push
mov
mov
pop
adc
pop
mov
push
jae
mov
jns
xchg
int3
mov
ret
mov
adc
mov
xchg
int3
addr16
imulb
xlat
dec
sbb
and
mov
test
mov
pop
ljmp
popf
lret
or
adc
test
mov
sbb
lcall
lret
fs
lods
pop
jno
aad
int
and
inc
mov
push
ret
cli
bnd
mov
icebp
sub
pushf
add
orl
lcall
ret
pop
push
mov
lock
lahf
aam
mov
popf
movsb
lcall
cmp
lret
fwait
out
es
imul
ds
and
sub
fdivrs
andl
push
mov
inc
add
add
mov
mov
cmp
sbb
sbb
push
in
mov
in
popf
stc
cltd
pop
dec
push
pop
ljmp
ret
xor
lret
in
dec
arpl
lret
fbstp
adc
sbb
sbb
imul
gs
mov
iret
jns
sub
ljmp
fbld
jno,pn
out
and
sub
mov
test
shlb
jnp
cmp
dec
cmp
fcmovnu
jmp
push
fs
repz
and
lds
xlat
push
jns
jo
pop
loope
dec
mov
inc
nop
out
xchg
dec
xchg
cmpsb
mov
mov
push
sbb
call
cmpsb
mov
pushf
shl
mov
loope
xor
mov
adc
push
out
jnp
inc
mov
jmp
test
aam
jp
sahf
xor
mov
adc
or
cwtl
pop
add
mov
inc
pop
rorl
add
out
pop
adc
repnz
push
incl
mov
xor
push
inc
push
cmpsl
xor
pop
xlat
fs
jb
lea
cmp
add
mov
inc
inc
sahf
xor
mov
cld
or
inc
arpl
lret
in
mov
jns
and
sbb
push
jge
mov
or
int
mov
xor
adc
cltd
lods
add
xchg
enter
scas
xlat
fsubs
or
add
or
subb
test
sahf
mov
mov
fidivrs
adc
out
inc
addr16
lock
int3
sub
int3
mov
arpl
dec
ret
shl
fs
cmpsb
push
loope
loope
dec
mov
movsb
sub
arpl
jo
aaa
xchg
jae
push
test
repz
in
or
mov
int
xor
orl
jae
mov
cld
xor
scas
push
inc
xor
xor
enter
mov
pop
dec
test
jae
push
shrl
pushf
dec
repnz
push
mov
iret
pop
imul
push
adc
mov
lods
lret
fucomp
jae
jns
dec
mov
xor
xchg
shl
jecxz
pop
enter
jb
in
shl
enter
add
int3
clc
cmp
jb
push
sbbl
fwait
ds
outsb
stos
lock
orb
inc
ljmp
arpl
imul
inc
mov
inc
pop
repz
jo
cmp
xchg
mov
inc
and
jmp
dec
cmp
jbe
int3
popa
bound
xchg
leave
inc
pop
roll
mov
cmpb
lock
jmp
into
jo
imul
movsl
movl
inc
mov
jae
sub
fsts
jmp
clc
mov
mov
int
rcrb
push
inc
dec
out
mov
sub
xorl
xchg
ficomps
je
push
xchg
xchg
pop
push
shlb
aad
lcall
inc
pop
stos
dec
pusha
fmuls
ficoms
mov
mov
or
fwait
adc
xchg
subl
inc
pop
xchg
xchg
std
push
gs
enter
sti
sbb
out
jnp
movb
cmc
inc
cli
mov
push
insb
leave
ja
pusha
xchg
mov
push
inc
mov
test
cmpsl
sbb
or
cmpsl
or
mov
ficomps
jle
out
jp
inc
cwtl
dec
loop
not
in
icebp
pop
xor
sub
xchg
sub
push
pop
pop
cmp
iret
sub
aad
lahf
pusha
cmp
cwtl
dec
push
or
aaa
xchg
inc
imul
out
in
jecxz
cmpsb
mov
sbb
scas
lock
insl
adc
lds
dec
addl
jecxz
rorb
movsb
lret
test
les
sar
leave
lahf
push
cwtl
lret
aas
mov
mov
push
dec
fisttps
push
lods
mov
push
lahf
mov
pushf
in
repnz
pop
insb
mov
bound
cwtl
pushf
sbb
insl
mov
lock
in
addb
out
mov
pop
insl
lock
jne
push
cmp
push
mov
inc
pusha
push
loop
mov
mov
sbb
push
cwtl
hlt
stos
jle
mov
xor
test
fsubrl
mov
popf
push
mov
cmpsb
or
xchg
jbe
sbb
int
xchg
pop
into
pop
enter
sti
mov
cltd
iret
sbb
dec
or
xchg
sti
popa
lods
in
push
mov
negb
sbb
leave
jbe
pop
jno
xchg
pop
shll
mov
enter
inc
push
int
or
mov
push
dec
ret
cmp
out
mov
cmp
sub
add
cmp
jecxz
inc
mov
xchg
lock
outsl
sub
test
fsubrl
add
pop
divb
mov
pop
div
inc
dec
xchg
lahf
pushf
inc
sub
sbb
aas
rcll
mov
xor
jne
shll
xchg
outsl
js
fnstcw
gs
lret
js
cmp
lea
cltd
aaa
in
jmp
sbb
xchg
inc
xchg
dec
add
jcxz
mov
cltd
icebp
fimuls
movsl
cli
jg
inc
lods
xchg
ss
mov
pusha
jo
inc
push
test
lods
inc
xchg
dec
push
add
jl
fs
xorb
daa
adc
fisubs
fsubrl
aam
mov
cmc
add
xor
jo
repz
push
pushf
int3
arpl
mov
xor
divl
call
mov
inc
cmp
add
mov
or
aas
sub
xchg
or
sub
stos
mov
loop
dec
cmp
push
cli
pop
iret
xchg
and
scas
mov
sti
cli
pusha
cmp
rcr
dec
pop
insb
aam
xchg
and
andb
ja
test
push
popf
pop
mov
cmp
mov
sbb
pusha
mov
stos
jno
push
pop
mov
faddl
add
adcb
cmc
jl
rcrl
mov
xchg
cltd
fsubrs
or
test
sti
add
stos
and
fdivl
test
xchg
xchg
adc
push
dec
insb
push
stc
insb
dec
cmpsl
add
adc
test
test
cmp
inc
lds
repnz
push
push
and
add
or
jbe
jecxz
xchg
push
xor
xchg
xor
ds
add
in
jae
mov
data16
add
mov
mov
mov
push
sbb
jno
sbb
mov
aad
lahf
mov
lret
adc
mov
rcrb
push
and
mov
cmpsl
ljmp
sar
dec
pop
insb
fcoms
addr16
stc
cli
dec
mov
adcb
xor
ljmp
fldenv
mov
daa
out
nop
out
push
cmpl
popf
scas
inc
fwait
data16
sti
inc
cmpb
es
or
and
mov
pop
add
mov
push
cmp
push
jmp
pop
mov
cltd
xor
test
add
enter
push
or
aam
inc
gs
orb
mov
dec
inc
xor
dec
mov
adc
mov
into
pop
stos
add
pop
jp
xor
in
cltd
mov
gs
and
and
lds
mov
sub
jnp
fildl
imul
cmp
je
popa
roll
inc
push
in
pop
mov
sub
push
cld
xor
or
movl
int
cmp
sahf
adc
pop
adc
mov
push
xchg
push
and
test
sub
outsl
xchg
jge
cltd
jns
mov
ret
gs
adc
insb
inc
sbb
out
jns
inc
xchg
mov
sbb
xor
push
xlat
xlat
cmp
aas
ret
cs
inc
push
mov
imull
xchg
out
jecxz
mov
jo
inc
inc
sub
push
cld
cltd
outsl
inc
rcrl
xchg
mov
icebp
push
movsl
sub
mov
in
add
repnz
movsb
es
rcrb
popa
sub
adc
ror
aas
cld
cmp
mov
jnp
cmpsl
repz
int
jle
pop
inc
jl
and
iret
cmpsb
pushf
dec
lahf
xor
mov
sbb
push
dec
mov
lock
cmp
call
pop
jg
pop
lea
push
and
lds
cmp
frstor
cmpsl
ljmp
addl
or
test
ret
int
dec
scas
pushf
jg
sub
mov
mov
xchg
fldcw
dec
push
in
aad
test
ljmp
arpl
push
xchg
fisubrl
cmp
test
inc
repz
repz
mov
or
inc
dec
cltd
xor
ja
js
mov
lcall
scas
popf
call
jge
add
fnsave
out
add
and
jecxz
sbb
inc
aaa
lock
or
cmp
xor
xor
pop
push
xor
mov
adc
sbb
aam
subl
adc
gs
jecxz
push
xchg
xor
leave
mov
aad
pop
dec
sahf
test
ret
test
mov
push
pop
xchg
lcall
je
vminss
mov
lret
xchg
inc
xor
or
insb
or
add
daa
test
pop
inc
stos
loopne
jno
pop
stos
jne
test
jns
xchg
xchg
inc
inc
dec
lods
decb
mov
push
cmp
cli
loop
sbb
inc
xchg
inc
mov
push
push
lcall
or
cmc
add
shl
jle
stc
faddl
xchg
std
out
fdivrl
inc
xlat
subb
inc
iret
es
jl
sbb
or
fldcw
enter
xchg
or
test
fcomp
mov
sbb
enter
inc
pop
dec
push
xchg
shl
test
mov
pop
jne
mov
aaa
sarl
jge
add
lods
in
add
ret
or
mov
xchg
mov
div
xor
add
aas
dec
fwait
pop
sub
test
call
inc
mov
cmp
pop
dec
mov
insb
push
iret
push
push
test
cmp
addb
add
mov
cmpsb
xor
jb
popf
or
push
sbb
jmp
cli
mov
js
incl
enter
scas
xorl
addl
sbb
add
cwtl
ret
jg
lret
jle
scas
lea
call
lods
jp
or
lret
sub
dec
sahf
mov
mov
xchg
aad
push
sub
fs
aas
incb
mov
mov
in
lahf
orb
add
push
gs
loop
push
aam
aas
push
sbb
inc
mov
pop
xchg
enter
mov
mov
gs
jne
cld
or
in
mov
mov
nop
imul
lds
mov
shrb
pushf
add
push
mov
jmp
cmp
mov
outsb
mov
sbb
je
in
mov
testb
sbb
xchg
mov
push
out
jmp
rolb
pop
push
xlat
clc
dec
cs
push
add
mov
sahf
jecxz
or
fldl
mov
adc
xor
dec
mov
lcall
out
mov
loope
js
ljmp
js
fisubl
xor
push
aam
iret
jae
pop
dec
pop
jge
push
rcl
mov
pop
popf
cs
sbb
mov
std
and
mov
fildll
pop
test
jmp
fiaddl
inc
mov
sbb
dec
adc
jb
lods
xor
int
and
lds
inc
adc
lret
inc
mov
and
mov
movsl
mov
xchg
mov
add
in
or
scas
lahf
pop
stos
fs
fisttps
outsb
bound
mov
adc
xchg
cmp
movsl
daa
xor
mov
ficompl
cwtl
cmpl
push
xor
lret
jne
es
mov
rcrb
dec
cltd
inc
xchg
cmp
int3
nop
mov
inc
dec
out
jae
inc
sarb
jae
stos
pop
decl
stos
aam
mov
jnp
inc
push
mov
or
mov
cmp
cmp
bound
xor
mov
pusha
push
mov
inc
inc
mov
enter
aad
push
int
cli
dec
int
int
dec
ret
pop
mov
adc
pop
mov
loopne
fdivrl
adc
inc
mov
aaa
add
adc
repz
cld
rorb
divb
addr16
nop
scas
mov
push
dec
pop
les
stos
sbb
adcb
dec
movb
adc
bound
mov
inc
sbb
adcb
lods
sub
fisubrl
mov
inc
stos
jbe
outsl
sub
js
shrb
cltd
sbb
lahf
xchg
movsl
sahf
rcr
jmp
push
mov
loopne
pop
cmpsl
xlat
mov
sbb
pop
mov
dec
mov
sbb
cmc
jp
fnstenv
fucomi
push
xchg
in
jbe
inc
jne
pop
enter
ret
out
std
mov
pop
out
cmp
or
cmp
push
orl
jl
repz
jle
adc
stos
xor
mov
add
out
push
xor
mov
ds
add
push
pop
add
mov
jae
mov
or
pop
xor
xor
lock
arpl
aad
xor
xor
jne
in
scas
push
pop
mov
push
dec
pop
jp
pushf
dec
pop
lock
add
inc
mov
shrb
aad
mov
cmp
fwait
lods
jge
shr
cmpsb
push
mov
inc
pusha
sahf
lahf
pop
sbb
pop
incl
mov
mov
xor
jmp
push
out
popl
push
adc
clc
xchg
int
lcall
cmp
push
xor
xlat
insb
cmp
imul
fs
ret
mov
fwait
mov
push
cmp
inc
fdivs
dec
lock
bound
mov
imul
cmp
pushf
out
and
add
mov
ss
adc
xor
call
add
mov
add
lcall
aam
arpl
adc
jno
mov
xchg
loop
inc
data16
xlat
adc
xchg
test
push
out
cmc
fsts
pop
pushf
fsubrl
adc
idivb
push
hlt
sbb
xor
push
mov
dec
shlb
xchg
lds
lods
cmpsb
inc
xchg
sub
shlb
sti
repnz
jp
bound
lods
fcompl
jae
loopne
das
cmpsl
xlat
ret
dec
out
ds
sub
sti
add
jle
int
sub
cmp
push
xor
xlat
insb
sub
divb
stos
cmp
jb
fcmovnbe
xchg
push
add
fmul
mov
or
cmp
xchg
sub
mov
adc
call
int
aas
mov
jl
mov
bnd
cmc
pop
icebp
clc
sti
mov
jns
and
cmpsb
lret
adc
fnstcw
mov
mov
cmpsl
push
sarb
imul
mov
pop
or
mov
decb
frstor
sbb
lret
sub
lret
flds
or
sarb
xorb
add
movsb
sub
mov
and
or
cmpsl
sub
ljmp
dec
scas
pop
icebp
or
aaa
inc
fsubs
imul
sbb
andl
lcall
decl
out
xchg
mov
test
add
lret
in
mov
mov
or
mov
pop
adc
cld
xor
loop
hlt
mov
xchg
mov
pushf
or
jge
sub
jne
test
movsb
jecxz
adc
call
pop
mov
jne
jecxz
jns
sbb
and
popa
cltd
fwait
aaa
test
dec
roll
add
lcall
iret
sbb
lret
mov
and
jg
scas
test
stos
xor
add
fildll
jae
fisttpl
mov
in
mov
pop
sub
mov
or
std
mov
or
jl
xor
fsubrs
jecxz
into
aam
jge
pop
xor
mov
in
lds
xlat
jmp
or
adc
sbb
repnz
add
mov
or
in
mov
jnp
inc
push
mov
pop
xor
gs
mov
and
jg
movswl
jmp
std
mov
sti
and
mov
dec
push
or
andb
add
mov
dec
sbb
xchg
dec
sbb
mov
jecxz
ds
mov
lock
cs
mov
popf
rcrl
mov
push
inc
clc
lds
jns
lds
nop
lds
dec
sub
pop
sbb
test
popa
and
sar
pop
dec
in
cmp
cmp
ret
push
rorb
push
out
cltd
dec
fwait
push
stos
mov
add
repz
and
add
cmp
ret
lahf
sahf
adc
test
fcompl
js
pop
js
jmp
mov
jb
lret
xchg
std
and
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
mov
std
mov
push
or
inc
bound
out
mov
flds
adc
xor
add
imul
popa
mov
pop
push
xchg
sbb
cmp
in
mov
or
mov
mov
cmp
jp
add
cmp
ret
mov
add
addr16
test
pop
jecxz
sbb
mov
stos
test
fiaddl
inc
pop
mov
mov
fucomp
jae
cmp
sub
scas
fcoms
std
mov
test
shlb
dec
sbb
mov
cmpsb
xor
jb
xchg
pop
lds
sbb
or
scas
aaa
mov
cli
jnp
inc
mov
add
scas
out
mov
inc
shrb
xchg
jns
cli
add
mov
pop
xor
insl
in
cmp
insl
fdivr
sbb
jmp
std
mov
sti
and
test
inc
ds
xchg
sub
and
imul
and
aam
mov
cmp
and
mov
test
mov
and
pop
jl
add
aad
xchg
sub
pushf
ss
out
sbb
lret
mov
and
push
nop
aaa
rcr
jns
test
fdivrs
add
scas
mov
xchg
fistpll
push
mov
insb
cwtl
nop
sbb
or
lret
jge
outsb
cmpsb
stos
pop
lock
inc
lcall
jle
mov
adc
jbe
jmp
in
xor
popf
scas
pushl
dec
icebp
and
cmpsl
xlat
in
testl
adc
adc
push
push
xchg
mov
inc
push
mov
pop
xor
insl
xchg
dec
push
ret
sbb
or
cmp
inc
adc
out
cmp
xchg
mov
out
addr16
adc
add
lret
enter
mov
fcomps
movsl
jecxz
pop
dec
daa
jne
insl
xchg
movsb
jg
jne
packssdw
mov
jnp
mov
bound
sbb
sbb
jbe
add
into
lds
dec
cmpb
xchg
adc
xor
shll
fcmovne
test
push
cmpsl
or
and
xchg
aaa
loope
mov
sti
stc
cli
in
test
cmp
scas
mov
inc
sbb
adcb
lods
scas
fistps
pop
xor
fwait
adc
or
pop
test
lods
inc
sbb
ficoms
mov
popf
push
adc
jo
sbb
sub
mov
notl
mov
dec
aam
aam
push
adc
xchg
mov
xchg
aas
cmpsb
ret
sub
cmp
lods
cmp
lea
ds
jno
out
mov
and
ret
test
loopne
add
xchg
cmp
adcb
ss
shll
out
repz
les
movsl
add
cmp
ret
mov
add
push
pushf
mov
pop
mov
mov
xor
stos
mov
adc
mov
sbb
mov
fs
lods
cmp
lahf
mov
xchg
push
nop
mov
jae
dec
push
sub
xchg
lcall
inc
lcall
ljmp
xor
xor
mov
in
lds
cmc
xchg
sub
or
sbb
mov
fwait
push
dec
mov
test
and
iret
jecxz
fucomp
push
fdivrs
xlat
cmpsb
mov
inc
inc
mov
js
test
push
push
lds
cmpsb
inc
in
insb
aaa
es
hlt
xor
int3
out
test
add
xchg
cmp
adcb
lea
jbe
fcmovnb
out
mov
out
roll
mov
cmp
jp
add
mov
mov
mov
adc
mov
sbb
add
inc
sbb
push
dec
sbb
and
lds
mov
scas
sahf
sbb
stc
test
cmp
arpl
push
insb
mov
adc
xchg
lret
or
stos
rorl
in
inc
jae
mov
xor
mov
jno
fnstenv
add
cmp
xlat
fcompl
sti
and
mov
sub
adc
aam
adc
jnp
and
adc
add
inc
pop
test
stos
icebp
mov
mov
push
insl
jecxz
xchg
mov
in
mov
fucomi
dec
pop
je
enter
dec
inc
fbstp
imul
ret
push
sbb
loop
sahf
js
test
or
pop
xchg
mov
mov
bound
jbe
sbb
jp
add
add
sbb
iret
cmpsl
mov
cli
pop
mov
xchg
sub
adc
inc
sub
movsb
fldcw
fisubl
dec
jmp
rcrl
test
inc
and
test
imull
inc
sub
js
std
mov
mov
jne
xchg
jmp
mov
es
add
mov
scas
aaa
mov
cli
jnp
inc
mov
aas
inc
sbbl
push
dec
mov
lods
sbb
hlt
test
mov
ljmp
popf
or
xor
push
insl
leave
mov
andb
shlb
loopne
bound
cmpb
mov
mov
loope
mov
aad
lret
sbb
pop
subb
movsb
pop
ret
cmp
mov
repz
and
cwtl
mov
clc
sti
pop
es
out
inc
jne
mov
adc
add
add
insl
ret
dec
mov
pop
pushf
dec
and
jno
lds
mov
sbb
cld
and
mov
xchg
xchg
ljmp
cmc
cmp
sbb
cwtl
nop
mov
les
inc
scas
xchg
ficoml
outsl
les
out
pop
int3
pop
cld
or
adc
adc
pusha
push
jg
sub
mov
incl
dec
movsl
fcompl
jno
andl
sbbb
sub
int
sub
xor
sar
cwtl
push
dec
lret
ss
or
xchg
cltd
call
inc
cltd
enter
lret
jle
or
cmp
xchg
sub
popf
xchg
push
adc
inc
push
cmpsb
jne
hlt
lahf
push
stos
les
loopne
aam
sti
fdivrl
lret
dec
cmp
mov
jp
add
mov
add
dec
sbb
mov
ret
leave
mov
vpshuflw
xlat
dec
lods
inc
data16
mov
lret
xchg
ljmp
cmc
scas
stc
lahf
jnp
pop
mov
xchg
fmuls
mov
dec
mov
add
std
or
pop
fistl
mov
fcompl
aad
xor
xor
mov
repz
js
repz
push
loop
mov
push
dec
mov
test
dec
aam
jns
mov
pop
popf
inc
or
loop
andl
test
push
cmp
loope
cmp
xchg
pop
jle
bound
xor
inc
sbb
dec
inc
mov
aad
ja
hlt
pop
adc
mov
cmc
xor
mov
std
scas
int3
sbb
mov
aam
addl
mov
mov
jecxz
add
adc
cltd
jo
and
or
sub
in
int3
addr16
divb
js
mov
inc
inc
ret
xor
push
popf
lret
push
in
fsincos
pop
cmp
mov
push
imul
test
xchg
mov
cmp
xchg
mov
xchg
cmp
imul
movb
xor
jge
pop
xor
icebp
leave
loope
lds
push
cmp
mov
loope
jge
mov
rcll
sbb
jns
fwait
xchg
sub
out
fwait
xor
cmpsl
lret
in
mov
mov
or
sbb
push
ret
test
fiaddl
inc
adc
sub
aaa
je
nop
lea
and
popa
mov
xor
cmp
and
mov
test
jnp
jbe
outsb
out
jns
push
fnstsw
adc
cltd
je
mov
mov
mov
mov
faddl
fs
fcompl
jne
jns
lds
nop
lds
dec
sub
pop
sbb
test
popa
dec
mov
lods
sti
dec
sar
pop
dec
pusha
jbe
imul
add
nop
daa
sbb
fiaddl
mov
fimull
add
xor
sub
cld
sub
inc
pusha
ficoms
cmp
push
insb
jge
movsb
inc
cld
repnz
pop
andl
jno
clc
add
cmp
pop
mov
and
inc
cwtl
dec
xor
push
aas
fwait
lret
in
mov
mov
or
pop
fdivrl
sti
ret
loopne
push
hlt
fadds
fldcw
lret
sub
int
or
nop
mov
ret
call
jns
pop
mov
test
test
inc
adc
fcoms
mov
jbe
mov
gs
lods
inc
popf
cmc
cld
xchg
xchg
add
push
call
popa
cmpsb
clc
icebp
mov
cmp
dec
sbb
sbb
test
sub
sbb
pop
stos
add
inc
push
aam
addr16
cli
in
test
pop
xor
test
pop
dec
xchg
or
fisubrl
sbb
mov
add
xor
sub
inc
mov
scas
movl
cli
jnp
inc
mov
add
scas
mov
addr16
jae
jecxz
add
mov
sbb
sub
enter
aad
mov
fidivrs
push
pop
clc
xchg
cmp
cltd
out
int3
and
cmp
adc
test
sbb
mov
movsb
popf
out
mov
mov
lcall
mov
mov
test
mov
xchg
shll
mov
imul
mov
pop
aam
pushf
mov
adc
scas
dec
sbb
test
pushf
pop
clc
dec
clc
mov
xor
scas
pop
cmp
fnstenv
in
mov
jo
test
jl
sbb
mov
movsl
adc
gs
adc
inc
lcall
jge
pop
xor
xchg
fmull
repz
inc
sti
and
loopne
test
mov
pop
pop
push
dec
sarb
aas
push
xchg
mov
adc
push
xchg
insl
test
jp
xor
call
dec
daa
aam
repz
insl
sbb
sbb
in
jne
jnp
popf
out
cmp
push
pop
pop
sarb
les
jns
pop
mov
test
add
loopne
jmp
mov
out
aaa
mov
lahf
push
pop
aam
add
imul
ret
lahf
sub
lret
push
aad
test
pop
and
lret
cmpsb
push
dec
mov
xor
test
jo
xchg
mov
jo
test
xchg
push
push
mov
or
fs
mov
clc
aad
mov
push
loope
lds
mov
sti
and
imul
into
cmp
xor
or
jp
imul
insb
dec
push
ret
sbb
sbb
or
jecxz
mov
mov
xor
mov
je
enter
inc
and
sub
scas
cli
push
adc
xor
mov
pop
je
mov
jmp
ljmp
std
inc
movsl
ja
sti
jecxz
loop
push
or
loop
inc
sbb
pop
lock
fs
leave
rorb
out
in
mov
lret
fldenv
subb
popf
dec
pop
inc
and
push
xor
les
nop
mov
imul
cli
addb
cli
xchg
cmp
cmpsb
xor
jb
xchg
pop
push
imul
shlb
jp
xor
jmp
add
and
fmuls
mov
inc
fisubs
inc
mull
add
dec
sbb
or
and
xchg
imul
adc
mov
pop
fdivrl
insl
popf
out
or
or
pop
mov
sub
je
sete
je
movsb
xchg
xchg
xchg
lahf
popa
mov
popf
icebp
fdivrs
dec
adc
cmp
std
pop
adc
inc
sahf
sub
sbbl
sbb
rcrl
sahf
adc
and
sub
sbb
out
lcall
sbb
cmpb
sahf
fucomp
inc
in
std
lds
fcmovb
xchg
insb
movsb
push
dec
repz
fidivrl
popa
imul
pushf
pop
insb
fcoms
popf
test
cltd
pop
jae
cli
xor
ficompl
int
xor
jb
fcoml
mov
cmpsl
dec
push
fucomi
cmc
mov
std
cli
jnp
inc
mov
add
pop
es
adc
sbbl
xor
adc
sbb
inc
mov
sub
aad
pop
daa
dec
lret
jbe
mov
hlt
std
mov
sti
and
mov
dec
push
or
fstp
imul
xchg
mov
or
into
pop
stos
shll
andb
xchg
dec
sbb
mov
sub
add
into
inc
mov
cmpsb
rcrb
adc
mov
adc
addl
mov
dec
and
mov
test
mov
jae
pop
mov
dec
mov
cli
cmp
xor
mov
and
mov
daa
mov
push
add
lods
dec
mov
stos
jno
fadds
xor
mov
and
dec
scas
lahf
fnstsw
fdiv
sbb
js
das
popa
adc
scas
xlat
in
loopne
pop
mov
push
mov
adc
hlt
jp
sbb
ljmp
xchg
jbe
mov
pop
in
daa
cmp
pop
shlb
imul
out
popa
cwtl
mov
icebp
or
nop
dec
inc
cltd
cmp
subl
pop
push
xchg
push
aaa
stos
shr
repz
int
cmc
or
cltd
mov
add
mov
cmp
jp
add
cmp
ret
mov
add
setl
dec
mov
mov
mov
cmp
lods
mov
lret
push
and
xchg
leave
pop
fildll
stos
inc
and
movb
jmp
adc
ss
dec
mov
dec
xchg
aad
sub
inc
cmp
mov
jb
xor
movsb
push
pop
push
and
lahf
scas
jg
pop
ja
xlat
cld
jnp
sub
xor
popl
es
lock
stc
fisubrs
pop
out
addr16
scas
dec
and
xor
pop
pop
inc
xchg
imul
mov
fs
pop
cmpsl
fistpll
pop
mov
xchg
pop
push
clc
rorb
add
in
mov
xchg
jmp
or
js
stc
dec
adc
mov
xor
and
mov
inc
inc
mov
sahf
cmp
cmp
aas
xor
adc
jae
xchg
pusha
push
imul
test
dec
popf
cmp
add
jno
cmp
stos
push
test
inc
adc
orl
mov
sahf
das
xchg
stc
cli
in
test
cmp
mov
pushf
inc
sbb
adcb
lods
mov
fisubrl
mov
inc
stos
jbe
or
pop
test
push
mov
mov
call
xchg
dec
mov
xchg
adc
aaa
adc
addl
xchg
mov
xchg
popf
lea
mov
push
ljmp
xchg
mov
lahf
cmpsl
jnp
test
fs
sahf
inc
aad
mov
dec
mov
pop
xor
xor
add
addl
mov
adc
cmc
fsubrs
popf
cltd
push
adc
test
mov
mov
pop
mov
jb
lahf
idivb
in
ds
mov
jnp
cmpsl
dec
aaa
mov
mov
loop
iret
cmpsl
mov
jbe
xchg
adc
jmp
dec
sahf
mov
dec
add
loop
mov
push
mov
jae
adc
shll
test
mov
sbb
cltd
cmp
sahf
inc
lcall
pop
test
lods
jne
enter
xchg
fucomi
repnz
jge
push
mov
xchg
xor
jl
rorb
mov
mov
rclb
mov
xor
push
sbb
xchg
jbe
mov
pop
out
movsl
cmp
pop
std
cmp
fstpl
je
imul
orb
push
dec
inc
lea
fidivs
and
add
addb
inc
negb
shrb
pop
es
cmpb
cmc
sbb
jae
mov
push
jmp
ljmp
push
repnz
adc
mov
ss
jns
lret
movsl
iret
sub
stos
mov
imull
and
sub
lahf
cmp
push
dec
bound
and
dec
mov
add
or
xor
jb
loopne
sbb
mov
cwtl
inc
sbb
lods
xlat
fucomi
mov
rorl
mov
stc
xor
pop
sub
addl
mov
out
jmp
loop
mov
popf
xor
push
out
xor
push
movsl
out
xor
mov
sti
dec
and
mov
dec
or
loop
ret
jle
sub
xor
jmp
or
mov
push
xchg
mov
jbe
mov
mov
jne
les
jg
push
jmp
call
sbb
cmp
nop
mov
in
ja
xchg
ds
push
cmpb
mov
mov
mov
adc
test
pop
sub
push
les
movsb
push
dec
arpl
mov
xchg
cmp
or
dec
fistl
xor
and
subl
adc
or
int3
data16
jnp
mov
repnz
sbb
mov
xlat
in
jecxz
mov
lods
push
xchg
ja
test
out
push
mov
movsb
cld
mov
pop
jnp
jo
test
mov
fs
dec
cmp
bound
sbb
lea
mov
xchg
sub
mov
fsubr
push
and
rcrb
or
mov
fidivl
cmpl
or
cmp
sbb
cmp
mov
addl
jecxz
cld
xchg
ret
and
xchg
or
shl
les
pop
push
lods
push
jnp
add
and
scas
stos
dec
lret
adc
bound
and
movsl
inc
mov
subb
or
arpl
push
jecxz
loopne
fistl
cltd
mov
inc
push
sub
inc
cltd
and
jmp
cmpsl
jo
and
jno
adc
fdivl
popa
mov
or
inc
add
subl
or
inc
mull
int
shl
add
fldcw
or
xchg
mov
push
pop
daa
hlt
dec
scas
or
shlb
jns
scas
fstpl
jmp
dec
mov
dec
pop
cmp
nop
out
aam
pop
enter
mov
sbb
ja
ret
sbb
fsubrs
mov
sbb
mov
lods
xchg
or
mov
xor
and
mov
jns
ret
mov
adc
push
inc
clc
lds
jns
lds
nop
clc
xor
shll
inc
lock
xchg
mov
mov
mov
stos
adc
sbb
ret
add
or
stos
movsl
sbb
sub
mov
fidivrl
vpmacsswd
mov
jo
xchg
in
fwait
out
js
popa
or
repnz
idivb
adc
mov
jo
pop
test
xchg
sub
dec
and
xchg
fst
pushf
mov
pop
sub
mov
mov
cmp
cmpsl
inc
jbe
xchg
xchg
inc
cltd
enter
mov
enter
xchg
xor
dec
arpl
mov
int
pop
or
addb
adc
rclb
and
pop
stos
shrl
push
xchg
pop
mov
sarl
inc
inc
sbb
sbb
cmp
add
ret
inc
sbb
aas
sub
or
mov
cmp
pop
lods
xchg
sub
adc
pusha
out
mov
dec
sbb
xchg
mov
pop
cmp
mov
mov
stos
adc
sbb
ret
add
and
xor
fisubrl
sahf
or
mov
fidivrl
or
test
cld
jbe
lahf
inc
jge
or
pop
movl
mov
addl
fmull
cmp
sbb
cmp
cmp
aas
fwait
lret
in
mov
mov
cmp
and
jbe
xchg
xchg
inc
cltd
enter
mov
enter
xchg
xor
dec
arpl
mov
int
pop
mov
cmc
hlt
pop
jb
idiv
mov
call
cmp
ja
stc
hlt
cmp
fists
int3
lret
aaa
lock
mov
ja
mov
dec
sbb
xlat
orb
mov
rcrb
adc
scas
dec
popa
mov
push
jne
xchg
mov
pop
lods
push
sub
lds
cmp
lret
fucomp
jae
push
aam
addr16
test
or
invd
test
mov
sbb
cmp
push
sub
mov
mov
pop
push
int3
jecxz
stos
mov
sbb
xor
mov
insl
aaa
mov
cli
jnp
inc
mov
mov
inc
sarb
js
sbb
inc
stc
or
test
dec
repz
pop
fistl
push
add
xchg
adc
outsl
pop
cmpsl
pop
repz
jne
out
lea
and
std
rcr
push
je
int3
sbb
rclb
rcll
cwtl
cltd
dec
sbb
cs
cmc
xor
movsb
adc
ja
shll
popa
push
test
cltd
mov
out
mov
sbb
sbb
negl
inc
inc
sbb
es
mov
cmp
ss
jmp
lret
mov
and
jg
scas
test
stos
xor
add
fildll
stc
mov
dec
pop
inc
fisubl
mov
bound
or
xchg
dec
retw
adc
add
xchg
xchg
fwait
loope
push
sub
cld
xor
sbb
push
cmp
mov
loop
xchg
rcrb
in
cmp
mov
add
pushf
xchg
inc
cwtl
dec
and
jecxz
lea
test
in
mov
push
inc
and
xabort
mov
cmovl
addr16
xor
inc
adc
pop
sub
xor
cltd
scas
nop
out
push
adc
cmpb
iret
mov
jmp
or
add
xor
ja
ret
loopne
jmp
sti
clc
popf
mov
cmp
jp
add
add
mov
or
jg
and
mov
scas
lock
adc
test
xchg
sbb
neg
mov
dec
popf
lret
addr16
aam
sub
cwtl
flds
ja
dec
cltd
add
fisubrl
shrl
jne
gs
sub
mov
lods
gs
lods
sub
dec
ret
movsb
mov
loop
repnz
fwait
leave
cmc
cmc
idivl
aas
and
orb
ret
fcoml
inc
jne
xchg
sbb
mov
out
push
into
cmpsl
jecxz
test
inc
xchg
imul
ja
mov
mov
mov
sti
repz
rcll
les
push
cmpsb
in
les
je
xchg
xor
test
pop
les
add
mov
push
add
cwtl
xchg
hlt
jns
sti
mov
clc
jge
pop
dec
aaa
add
push
gs
orb
das
icebp
aaa
stc
xor
loop
mov
pushf
fs
and
fidivrl
push
in
mov
mov
lahf
cltd
lock
sarb
or
jge
sub
sbb
lret
mov
mov
fs
jle
mov
pop
xor
aas
lahf
inc
lahf
add
cld
and
popf
scas
stc
xor
stc
sub
pop
aad
push
shl
jl
mov
mov
push
mov
inc
push
fidivrl
xchg
imul
pusha
jo
sbb
adc
mov
cltd
xor
xchg
pop
shrb
add
aas
adc
mov
xchg
dec
push
out
xchg
or
lods
ficoms
mov
jle
dec
lret
pop
fstl
pop
push
pop
ud2
pusha
xor
jae
mov
in
arpl
inc
add
cld
rorb
les
and
dec
and
xlat
xor
pop
lea
dec
in
sbb
lods
stos
inc
cmp
mov
shrl
mov
cmp
jbe
movsl
daa
adc
jae
les
mov
int
inc
mov
add
mov
iret
mov
sub
mov
test
jns
inc
fists
sbb
sbb
jg
cs
xor
mov
jae
dec
sti
pop
mov
xchg
call
mov
push
decb
pop
std
dec
sbb
jle
ja
lahf
xchg
or
mov
aam
mov
hlt
mov
aad
lret
enter
dec
lret
cltd
cmp
mov
idivl
sbb
jns
pop
mov
test
xor
mov
lret
jecxz
pop
cwtl
mov
pop
mov
dec
sbb
mov
leave
fsubrl
adc
push
test
lret
mov
adc
sbb
cmp
sub
fucomp
jae
sbb
push
clc
mov
xchg
jne
das
push
push
lock
test
std
int3
stc
mov
dec
xchg
fcoml
filds
mov
insb
jp
mov
std
out
push
mov
js
nop
adc
aaa
cwtl
hlt
jl
pop
mov
and
push
cmp
mov
rcll
push
jae
cltd
cld
jae
fistps
jnp
cmp
std
gs
and
and
mov
aam
cwtl
test
cmpb
pop
mov
push
sub
test
cs
or
cmp
and
fisttpll
jae
nop
popa
mov
in
imul
aad
add
mov
jg
or
mov
mov
stc
repnz
flds
jb
js
pop
and
mov
cmc
xor
insb
push
roll
jmp
pop
outsb
mov
dec
or
adc
xchg
stos
inc
jl
add
mov
sbb
fisubrs
jns
push
lahf
mov
lahf
pop
adc
mov
stc
ret
rcrb
mov
icebp
movsb
fdivs
pushl
adc
cmpsl
adc
call
pop
loope
adc
and
test
xlat
fwait
cmp
popf
iret
es
cmp
leave
outsb
aaa
push
xor
jl
inc
push
or
jb
mov
rol
mov
push
add
xlat
arpl
add
jecxz
int
rolb
divl
inc
mov
add
and
test
ret
and
mov
arpl
add
and
lods
fstps
sub
adc
cmpsl
adc
sbb
ret
mov
lods
shrl
jge
fwait
bound
cmp
mov
inc
mov
push
int
pushf
cmp
icebp
sub
std
inc
and
jecxz
stc
cmp
pop
cwtl
push
stc
add
fcomip
std
mov
stc
and
push
jmpw
mov
lret
in
mov
mov
cmp
jmp
xchg
inc
cltd
enter
mov
sbb
dec
cwtl
test
imul
popa
push
sub
movzwl
imul
ret
loopne
out
and
fucomip
repz
xchg
popa
mov
testl
test
jae
psadbw
cmp
pop
dec
icebp
lret
int
inc
sbb
stos
adc
flds
movsl
loop
xchg
lods
sbb
movsl
repz
pusha
cmp
sar
dec
pop
insb
cwtl
adc
sbb
pop
arpl
add
push
mov
xchg
std
ljmp
pop
push
add
cltd
fcompl
mov
jp
js
popf
shll
cld
in
inc
loopne
das
cmpsl
xlat
ret
mov
xor
sub
fwait
mov
mov
hlt
push
cltd
and
xlat
insb
jae
cli
mov
inc
loop
in
adc
mov
mov
call
xor
lea
aas
push
xchg
dec
pop
subb
mov
inc
jbe
fadds
jae
mov
pop
add
and
sti
mov
call
int
sbb
jbe
pop
lods
dec
pop
or
or
ret
push
fwait
push
sbb
movsl
mov
sarb
adc
lods
out
sbb
sub
push
pushf
and
push
xchg
pop
adc
bound
fcomps
shrb
mov
mov
and
mov
nop
gs
pop
in
clc
push
cmp
fstl
fwait
shll
add
or
lahf
cmp
sbb
dec
in
in
divl
rcrl
daa
adc
jb
mov
mov
popf
rol
sub
inc
fidivrs
fisubs
xlat
out
sti
into
pop
add
sti
mov
popf
iret
sbb
dec
push
loop
inc
and
and
and
xchg
xlat
cs
mov
mov
adc
arpl
lods
pop
pop
sbb
and
and
jb
subl
mov
mov
mov
dec
jno
cwtl
in
push
and
js
std
mov
inc
mov
push
shll
mov
arpl
sub
and
dec
mov
adc
fsubrs
adc
add
stos
mov
mov
jge
or
clc
mov
inc
push
imul
cmp
stos
xor
xor
mov
in
lds
cmc
xchg
sub
or
sbb
mov
fwait
push
dec
mov
and
sahf
addr16
cmc
cmp
push
aas
fwait
lret
in
mov
mov
cmp
scas
inc
jbe
xchg
xchg
inc
cltd
enter
mov
sbb
dec
cwtl
test
imul
popa
push
sub
mov
and
or
mov
out
movsb
movnti
cmc
aad
mov
sar
inc
jnp
mov
cltd
je
mov
cli
or
mov
idivb
xor
dec
sbb
pop
xor
enter
test
sub
dec
vfnmadd231ps
into
cmp
adc
dec
mov
lahf
inc
ja
lods
jmp
or
inc
cmp
adc
stos
dec
addr16
dec
cmpsl
enter
lods
pop
pop
push
jb
aaa
decb
sub
sbb
ret
cld
push
dec
pushf
jae
xchg
mov
shlb
jno
clc
add
cmp
ud1
rorb
iret
loope
and
adc
mov
mov
fs
and
daa
sti
sbb
cwtl
xor
cmp
cltd
enter
inc
adc
cmpsb
loopne
hlt
xor
xchg
sub
fsubrs
mov
popa
mov
insl
lret
inc
inc
xor
shrl
cmpl
out
inc
push
cmc
or
mov
jmp
sbb
mov
cld
enter
pusha
add
lods
dec
mov
add
repz
dec
fdivrl
dec
mov
dec
and
divl
sbb
lahf
movsb
pop
fsubs
push
dec
inc
gs
jae
pop
int3
cmp
insb
push
cmp
mov
in
addb
ljmp
aad
inc
lcall
jle
fcoml
aad
xor
xor
cwtl
scas
ss
leave
loop
inc
mov
push
fdivr
push
mov
inc
cmc
sahf
xlat
rcr
xor
sub
xor
adcl
aam
fldcw
es
clc
popa
mov
jb
mov
loope
loope
adc
aaa
sbb
cmc
dec
dec
or
fidivl
movsb
push
fisttpl
mov
loop
mov
pop
xchg
shll
test
sbb
ljmp
popf
pop
pop
jecxz
incb
lea
xor
lock
add
cltd
jno
jns
adc
xor
xchg
xchg
lret
push
aad
test
sti
pop
and
lret
fucomp
movsb
mov
cld
stos
stc
mov
jo
mov
inc
fildll
mov
outsb
test
xor
ficoml
std
dec
sub
outsb
shrb
mov
mov
out
jns
push
inc
dec
loop
mov
fstl
jnp
inc
fs
movsb
cmp
and
jg
fyl2x
std
stos
jl
aas
or
or
mov
mov
stos
nop
xchg
inc
xchg
pop
mov
mov
sub
sub
cmp
mov
pop
cmp
call
xlat
pop
fisubs
and
xor
mov
jg
or
hlt
jl
insl
lock
cltd
jne
inc
rcrb
cli
push
dec
cmpb
or
inc
dec
pop
mov
or
pop
pop
inc
xchg
cmp
test
cwtl
mov
out
ret
mov
adc
fwait
inc
sbb
aas
xor
js
and
xlat
dec
sbb
sbb
sbb
or
dec
pop
ret
pop
jmp
movsb
in
insb
data16
pop
xor
or
sbb
xchg
ficoml
cltd
testl
or
push
cli
cmp
stos
xor
xor
cwtl
lods
lds
mov
leave
loop
inc
mov
push
fdivr
push
mov
inc
cmc
sahf
xlat
rcr
xor
sub
xor
adcl
aam
fxch
cmpsb
cs
fisubs
jnp
clc
popa
mov
jb
mov
loope
loope
adc
aaa
sbb
cmc
dec
dec
or
fstl
jmp
mov
aam
push
les
push
fidivs
fwait
mov
out
divl
inc
sbb
adc
lcall
cmp
inc
addr16
sbb
mov
push
test
lret
lcall
jne
pop
fildll
fs
scas
addr16
add
mov
inc
fildll
mov
outsb
test
xor
int
push
out
mov
fincstp
add
sbb
fistl
xchg
jb
scas
inc
mov
out
xchg
incl
inc
cli
repz
in
testl
cmpsb
mov
stos
nop
xchg
inc
xchg
pop
mov
mov
das
int3
sub
cmp
mov
pop
cmp
call
xlat
pop
fisubs
jge
insb
aaa
es
pushl
jl
adc
sbb
mov
es
mov
mov
add
pop
sbb
dec
mov
cmp
mov
in
ja
add
and
gs
pop
dec
aaa
inc
fdivl
aas
xor
aas
je
cmpsl
aad
push
jmp
sbb
sarb
jno
add
orl
dec
sub
ss
rcrl
dec
arpl
jl
or
add
ficompl
mov
lcall
adcb
shrb
cltd
xchg
xor
inc
xor
cwtl
mov
ss
leave
loop
das
jmp
and
je
stos
loop
xchg
add
inc
mov
push
les
xchg
ja
mov
out
xor
push
jne
insl
out
inc
pop
call
inc
cltd
enter
dec
inc
mov
inc
mov
pop
jle
xchg
lea
imul
test
pop
shlb
ljmp
repz
adc
or
inc
xor
mov
pusha
push
mov
in
ja
hlt
scas
rorb
sub
aam
xor
fisttpl
sarb
ja
les
push
mov
push
cmc
cmpsl
dec
pop
dec
or
push
sbb
jmp
pop
or
sbb
inc
sub
nop
pop
inc
cmp
xchg
add
pop
mov
adc
stos
pop
mov
sub
call
rclb
mov
test
xor
mov
xchg
scas
or
lret
inc
out
imul
pop
sahf
cmpsb
enter
and
sbb
jecxz
push
ret
vpsrad
mov
push
adc
ds
sub
mov
push
sbb
loop
sahf
js
test
xor
sbb
in
repz
ret
mov
test
clc
int3
mov
mov
sub
mov
sbb
lcall
inc
fwait
jb
data16
sbb
sarb
push
jne
mov
pop
stos
fsubrp
lods
jmp
xor
jge
cmpsb
lahf
add
sbb
dec
sbb
add
push
inc
sarb
xor
xchg
or
lock
lock
loopne
push
jle
mov
push
mov
cmp
jg
xchg
mov
shlb
or
adc
push
daa
xchg
int
dec
aam
stc
repnz
ljmp
int
int
jns
mov
mov
cmp
hlt
dec
jbe
xchg
xchg
inc
cltd
enter
or
cmp
mov
sbb
cmp
cmpsl
cmp
jle
push
pop
stos
mov
das
push
xchg
sti
pop
testl
int
dec
lahf
lret
xor
dec
movsb
jbe
adc
mov
adc
mov
mov
sbb
mov
pop
ficoml
pop
mov
sbb
dec
jb
dec
xor
fists
lahf
sbb
loopne
cmpsl
xchg
test
mov
les
or
shrb
mov
push
inc
fsts
cwtl
fcoml
jbe
scas
fimuls
aad
jge
inc
xchg
sahf
cwtl
fists
sbb
push
pop
or
pop
sti
arpl
rolb
stos
adc
pop
inc
mov
fxch
enter
imul
pop
sahf
cmpsb
enter
mov
insl
jecxz
push
ret
mov
flds
mov
sub
loop
jne
dec
jg
iret
cmp
int3
xorl
mov
sbb
lods
cmp
sbb
lods
sbbl
ret
ljmp
mov
inc
sbb
aas
ljmp
push
adc
repnz
nop
test
stos
push
test
popf
sub
jge
dec
xchg
ficoms
mov
icebp
fsubl
cmp
or
mov
idivb
adc
xchg
dec
cmpsl
push
movsl
es
call
sub
jecxz
cmpsb
lret
pop
pop
pusha
mov
fisubrl
jnp
inc
mov
mov
dec
out
std
cmp
add
fmuls
addr16
xchg
xchg
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
xor
fld1
xor
loope
cmpsb
jo
out
call
cmpl
enter
pop
nop
dec
addl
adc
or
mov
rcll
scas
mov
call
scas
lret
cmp
cwtl
dec
test
sbb
aaa
icebp
repz
mov
pop
sbb
pusha
mov
mov
or
sub
shrl
xchg
add
stos
push
lods
inc
jb
imul
push
dec
clc
fnsetpm(287
or
xor
loop
cld
mov
test
lahf
dec
and
outsl
stos
cmp
xchg
push
idivb
scas
dec
fs
dec
push
sub
inc
sbb
out
pop
fildll
iret
cmp
push
inc
add
add
out
mov
dec
xchg
and
sub
out
addr16
les
cltd
push
sbbl
xchg
and
cmpsl
fidivl
insl
cmovae
mov
data16
cmp
and
aaa
sbb
adc
inc
dec
mov
mov
xor
pop
test
adc
inc
ret
loop
pop
das
xor
mov
movsl
mov
mov
loopne
shlb
inc
inc
xor
fisttps
punpcklbw
jge
mov
in
popf
lahf
sbb
das
sub
data16
dec
movsl
negb
scas
inc
mov
dec
xor
lds
mov
jae
pop
and
xchg
ljmp
or
cmpsl
xchg
cmpb
test
pusha
icebp
inc
sbb
dec
sbb
mov
cmpsb
xor
jb
loopne
sbb
jmp
mov
cwtl
inc
sbb
movsb
fstpl
insb
js
in
movsb
lahf
mov
sub
xchg
mov
andl
mov
adc
rol
xor
cwtl
push
test
xchg
mov
js
ljmp
pusha
ds
roll
push
out
stc
lods
inc
cmc
popf
shll
cmp
sbb
xor
or
sub
sub
lahf
adc
sub
inc
inc
xor
test
aad
int
dec
pop
mov
and
cmpsb
xchg
xchg
cmp
pop
mov
sbb
gs
sbb
mov
cmp
sbbl
inc
sbb
pop
inc
test
lret
push
fs
enter
mov
dec
sbb
lahf
movsb
fnstenv
stc
sbb
dec
pop
lret
pop
xor
test
ret
or
lret
or
rorl
pushf
mov
fistpl
leave
jb
adc
leave
adc
pusha
push
ret
ljmp
out
js
jl
or
adc
jo
add
rcl
lahf
xor
aam
mov
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
lods
fstps
in
cmp
cld
lods
fwait
mov
stos
xchg
out
mov
cwtl
jecxz
movsb
pop
mov
xchg
int
ret
mov
ret
push
insl
test
sub
mov
mov
pop
jno
push
add
pop
add
inc
icebp
nop
repz
push
mov
pop
and
test
xchg
mov
adc
outsl
aam
test
cmpsb
arpl
insb
sub
les
mov
pusha
pop
add
xor
cld
repz
ret
cmp
nop
cmpl
mov
mov
mov
movsb
jne
test
sub
ja
test
sub
cmovl
jecxz
movsb
and
jae
ret
leave
ficomps
jnp
inc
mov
sub
cwtl
xchg
inc
sbb
add
mov
jno
icebp
push
mov
push
in
xchg
rol
pop
test
out
xor
int
int
xchg
clc
pop
fdivl
jge
push
adc
inc
fwait
mov
fwait
adc
outsl
out
aam
aaa
push
inc
sbb
adc
fnstenv
icebp
shl
dec
adc
call
mov
dec
gs
inc
inc
xor
jmp
clc
push
mov
imul
mov
pop
dec
mov
xlat
or
pop
mov
sbbb
insl
lea
sbb
pushl
lcall
sbb
dec
push
push
insl
stos
jae
jge
push
fst
addr16
ret
insb
cmp
dec
data16
pop
or
add
ficompl
mov
lcall
pop
cmpsl
sub
aaa
jmp
scas
fildl
repz
out
stc
push
mov
in
idivl
adc
xlat
add
ds
jp
sbb
fucomp
mov
mov
insb
jmp
add
ja
stos
pop
mov
es
imul
fs
pop
add
inc
dec
inc
ds
sub
mov
fmull
jle
push
adc
mov
jns
pop
adc
and
mov
imul
lock
sti
ficoms
add
mov
lock
in
pop
loop
dec
sbb
mov
cmp
pop
stos
push
lods
xchg
sub
adc
push
dec
sbb
xchg
mov
push
mov
js
fisttpll
xchg
popa
fwait
push
mov
scas
pushl
fcomps
mov
sub
sar
jp
add
popf
dec
mov
cld
ret
test
xor
insb
outsl
xor
sbb
or
mov
rorl
mov
dec
notb
mov
or
in
jbe
push
decb
mov
aaa
push
mov
icebp
aas
movsl
push
cltd
int3
pop
xor
xor
orl
inc
xor
dec
cwtl
aam
dec
inc
in
arpl
cltd
or
arpl
lods
fcomps
inc
inc
ja
sbb
pop
add
or
pusha
xor
xchg
and
icebp
aaa
mov
shl
jecxz
mov
and
sub
mov
dec
lods
aad
imul
shl
xor
pop
and
outsl
xor
rcrl
fimull
jbe
movsl
daa
jmp
inc
mov
xchg
stos
neg
jae,pn
or
pop
scas
sbbl
pushf
int3
push
push
inc
xor
mov
pop
jmp
lcall
mov
mov
loopne
mov
sub
enter
gs
push
aam
jb
push
test
gs
sahf
sbbb
push
gs
cmc
adc
fld1
jne
out
lea
andl
mov
es
xor
and
sub
xor
and
mov
xchg
test
into
mov
jb
mov
pop
add
ret
or
cmp
jb
lsl
mov
or
push
sbb
jle
pop
imul
adc
dec
rcrb
adc
push
lods
push
push
enter
jne
and
jmp
mov
bound
sbb
lods
insl
sbb
mov
int3
lods
push
dec
cmpsl
push
outsl
jmp
mov
pop
scas
dec
fwait
lods
pop
xchg
and
push
fidivs
cs
or
js
fcomps
in
mov
mov
in
idivl
push
push
ds
pushl
jnp
aas
fs
mov
jmp
mov
je
xchg
mov
mov
lock
adc
fld1
mov
sti
xor
mov
mov
dec
inc
je
sub
xor
dec
mov
adc
and
stos
shll
test
mov
ret
flds
xor
fisttps
dec
push
mov
aaa
mov
pop
dec
and
stc
adc
imul
adcb
push
dec
xor
sbb
leave
pop
fcmovne
push
mov
mov
dec
imul
ficoml
mov
xchg
adc
lds
push
mov
dec
sub
push
jno
or
cmp
in
adc
cli
jnp
inc
mov
das
inc
sbbl
push
dec
mov
jno
icebp
push
mov
lock
es
sub
leave
inc
mov
test
fucomi
mov
fists
cmpsl
mov
enter
add
mov
xor
enter
dec
bound
jns
ja
ret
mov
lret
pop
popf
clc
cld
mov
imul
loopne
pop
daa
cmpps
sbbb
add
jb
outsl
mov
pop
cli
jg
pop
dec
cli
fisubl
and
mov
push
and
test
mov
adc
adc
sub
data16
arpl
pop
sub
inc
jne
jge
hlt
cmpsl
sbb
mov
xchg
sbb
mov
xchg
clc
movsb
push
pop
sub
jnp
cmp
mov
cmp
jno
jno
fs
sbb
or
sar
pop
mov
jmp
adc
aaa
xchg
int
and
out
push
pop
lods
xlat
out
ds
loopne
pop
pop
mov
mov
outsl
adc
outsb
aaa
popf
mov
mov
dec
inc
dec
jb
or
sub
inc
xor
lret
ret
pop
cmp
test
adc
inc
inc
xor
push
iret
sub
jno
lahf
add
or
add
adc
pop
dec
shlb
clc
jg
inc
add
xor
or
sbb
push
dec
push
icebp
cwtl
test
sub
add
bnd
lock
xor
lret
bound
push
cmp
pop
mov
pop
stos
mov
negb
cmpsl
push
sbbl
scas
pop
mov
aad
mov
jle
lahf
mov
push
or
or
lock
xor
cmovs
or
xor
jo
or
lahf
mov
out
inc
je
mov
lret
ljmp
xchg
mov
icebp
add
mov
cmp
fwait
lea
jge
jns
inc
ror
addb
inc
mov
std
cli
cmp
dec
mov
cmp
mov
pusha
adc
movsl
test
push
sub
push
mov
inc
and
cmp
lds
sbb
mov
in
call
jo
or
sub
pop
dec
shlb
imul
xor
or
test
lea
fadd
adc
mov
and
test
sbb
dec
sbb
lods
repz
pop
dec
pop
in
in
insb
push
loope
aas
and
mov
and
scas
cmc
sbb
xor
stos
push
mov
lds
out
mov
mov
jmp
push
mov
js
in
shlb
idivb
dec
add
add
sub
push
pushf
out
addr16
cmpsb
ljmp
xchg
ljmp
pop
fsubl
dec
in
xbegin
fisubrs
int3
pop
sub
mov
cmp
lret
push
pushf
nop
dec
daa
jecxz
jnp
xor
cmovge
fimull
cmp
fucomp
enter
pop
ret
popf
xchg
or
xor
ja
fwait
cwtl
and
cmc
adc
mov
jl
fs
ret
xchg
fstpt
mov
mov
dec
mov
mov
dec
inc
out
mov
scas
xchg
bound
imul
insl
xchg
adc
and
push
or
dec
push
testl
cmp
jge
adc
and
jmp
fcomip
jns
js
adc
mov
in
orl
or
jno
pop
dec
hlt
xor
out
daa
adc
ja
fstpl
cmpsb
xchg
in
jbe
fidivl
insl
pop
ret
ss
lea
data16
adc
dec
inc
push
xor
pop
hlt
mov
js
adc
fstl
dec
lret
adc
push
cmp
mov
fidivrl
imul
add
and
std
sti
mov
rorl
cmp
in
ja
shlb
jecxz
adc
ljmp
xchg
lock
incl
aas
push
lods
push
cmpsl
or
sbb
xor
push
sahf
dec
lods
loope
pop
sub
insl
idivb
or
pop
arpl
push
mov
dec
test
sahf
sahf
pop
sub
inc
inc
mov
fstl
cmp
mov
fs
loop
xchg
js
jns
idivl
inc
out
idiv
mov
cmp
daa
dec
lods
cmc
jp
inc
and
mov
jmp
push
leave
ja
stos
cmp
cltd
pop
fs
xchg
mov
dec
mov
xor
inc
insb
adc
dec
inc
pop
mov
xor
and
ds
mov
ljmp
int3
xchg
lcall
into
pop
jo
pop
add
insl
clc
aas
fsubl
nop
pusha
xor
mov
loope
pushf
mov
pop
dec
mov
jo
jle
push
sbb
in
sub
loopne
fisubrs
cli
sub
sub
test
addr16
dec
xor
adc
dec
mov
mov
mov
jno
mov
lods
and
jb
addb
ficoml
frstor
stos
inc
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
cwtl
sub
ss
leave
loop
inc
mov
push
fdivr
push
mov
inc
cmc
sahf
xlat
rcr
xor
addr16
test
xchg
mov
sub
sub
popf
iret
cmpsl
ret
sahf
xor
fs
mov
dec
inc
aam
mov
test
xchg
dec
inc
xor
inc
test
adc
inc
jne
pop
jb
mov
js
popa
jne
mov
add
mov
mov
cmp
jp
add
sub
ret
mov
add
setl
push
iret
sbb
test
adc
sub
pop
add
loop
mov
sarl
lods
sarl
jg
jns
dec
xchg
inc
int
mov
inc
scas
xchg
stos
inc
cli
xor
mov
sbb
and
stos
jno
add
subl
cltd
mov
cmc
fwait
pusha
push
cmp
stc
inc
mov
inc
push
mov
mov
rcll
pop
idiv
sti
xor
cs
jae
in
dec
mov
inc
xchg
mov
xchg
aas
loopne
sti
sub
popf
sbb
cmpsl
sbb
adc
inc
xor
mov
fwait
cmp
leave
cwtl
pop
add
push
xor
je
and
mov
dec
ret
push
pop
xchg
mov
add
inc
fs
fwait
aam
sti
filds
adc
xchg
test
repnz
add
mov
mov
add
orl
xchg
and
iret
pop
lcall
push
dec
mov
push
and
loop
mov
lret
mov
mov
repz
mov
push
insb
push
mov
mov
idivb
outsb
movsl
mov
js
cmpsl
push
ja
dec
xor
fsubrs
aaa
pushf
jnp
xchg
add
movsb
loop
cwtl
dec
int
mov
leave
loop
inc
mov
mov
sbb
stos
cwtl
xor
lret
xchg
sbb
sbb
pop
xchg
lahf
aam
sbb
pop
mov
jbe
push
decb
bswap
vpshuflw
out
aad
sbb
pop
sub
jo
cmp
xchg
sub
xchg
jmp
mov
dec
mov
ficomps
nop
cmp
lret
test
repz
cmp
jecxz
lret
sub
push
je
mov
fsts
movsl
dec
sbb
xlat
mov
mov
mov
jne
in
das
cli
fistpl
into
sbb
punpckhwd
lea
cmpsl
push
cltd
mov
push
inc
lcall
ret
jb
jge
les
fldcw
dec
sub
mov
test
icebp
jns
push
mov
js
pop
in
sbb
pop
mov
popl
int
je
mov
out
push
packsswb
xchg
mov
lods
pop
cwtl
pop
cmp
lods
mov
jnp
fdivs
test
xor
jge
ss
mov
or
and
fisubrs
push
sub
mov
xor
repz
or
or
call
nop
pusha
xor
int
inc
test
and
mov
out
ja
fwait
xchg
cmc
jecxz
adc
jecxz
dec
rorb
or
test
dec
mov
int
mov
lahf
mov
push
stos
dec
push
xor
std
mov
test
shlb
dec
sbb
mov
cmpsb
xor
jb
fisttpll
lcall
out
pop
cltd
shrl
and
push
or
jg
lret
jmp
pop
js
pop
xchg
in
cmp
mov
test
dec
mov
adc
push
aas
fwait
lret
in
mov
mov
or
pop
fdivl
arpl
add
sub
cwtl
lcall
jg
jnp
popf
lods
push
adc
stos
rorb
inc
lcall
pop
divb
pop
testb
lret
pop
lahf
iret
sbb
daa
dec
js
xor
pushf
fadds
addb
daa
lock
adc
scas
imul
cmp
pop
cld
sbb
les
push
cli
mov
dec
mov
cmp
cmp
sarb
les
add
fisubrl
pop
push
mov
sbb
cmp
pop
ss
dec
inc
mov
popa
xchg
pushf
aaa
inc
js
jg
dec
xlat
pushf
adc
and
push
mov
sub
clc
cmpsl
in
into
push
inc
test
ljmp
jmp
push
aas
fwait
lret
in
mov
mov
or
pop
fidivrs
xor
lret
cmp
or
cmp
xchg
sub
dec
cs
jne
pop
mov
push
pop
stos
shr
push
std
int
fwait
movsl
imul
sti
push
add
in
das
div
mov
mov
mov
add
xchg
and
adc
mulb
ror
rorl
lds
addl
mov
sub
xchg
jns
out
bnd
push
dec
lock
inc
cmp
adc
and
mov
rcll
fwait
lods
fistpl
aam
lret
adc
mov
cmp
fwait
leave
loop
inc
fdivl
inc
lret
arpl
ja
gs
test
and
jbe
adc
std
mov
push
cmpsb
fsubrs
aaa
insl
or
shlb
clc
mov
pop
add
mov
xchg
sub
fsubrs
mov
push
out
add
xor
mov
pusha
push
inc
pop
and
lds
push
sbb
stc
push
jnp
mov
lret
jge
lahf
mov
mov
ret
jecxz
adc
or
xor
lcall
and
dec
xor
xor
fildll
mov
sbb
or
mov
or
cmp
adc
push
insl
mov
outsl
mulb
aad
and
cmp
mov
and
sbb
ficoms
jp
mov
leave
loop
popa
adc
xlat
in
clc
add
loope
xor
adc
push
jae
in
dec
mov
fsts
cmp
dec
test
sub
dec
xor
sbb
cmpsl
jnp
dec
pop
fs
push
data16
jno
lahf
push
adc
inc
sub
cwtl
stc
or
push
push
mov
movsb
out
and
push
xchg
mov
jae
jns
mov
xchg
ja
push
dec
sub
jnp
inc
mov
xor
mov
pushf
mov
shll
adc
pop
push
push
xchg
pmuludq
icebp
mov
push
aad
div
je
test
inc
pop
cli
sub
mov
inc
inc
fildll
fs
movsl
in
dec
popf
enter
mov
sbb
ss
les
movsl
mov
cld
jp
add
sbb
lods
pop
scas
pop
mov
das
pop
jno
jge
lret
bound
fs
push
aaa
add
ret
xor
mov
fstpt
sub
or
je
addb
cmc
sbb
sub
xchg
mov
mov
mov
test
out
xchg
call
dec
push
push
xchg
mov
xchg
cmp
test
fisubrs
sbb
push
adc
rcrb
pop
push
test
aaa
in
movsl
divb
pop
push
dec
subl
psrlq
lcall
add
xor
hlt
sub
cmp
lods
js
push
pushf
inc
test
jle
push
sub
test
dec
ficompl
push
inc
pop
add
ljmp
cmp
inc
inc
and
dec
out
andl
sub
cmp
or
test
push
aad
test
mov
cmc
adc
aaa
movsb
bound
rcrl
push
push
dec
insb
ss
sbb
in
testl
adc
test
out
jp
sbb
fucomp
mov
xchg
push
inc
xchg
xchg
mov
cmp
cmpsl
out
imul
dec
repz
pusha
mov
enter
mov
mov
adc
imul
pop
fsubrl
jne
add
cmp
push
add
pop
cli
xor
repnz
adc
ret
mov
sarb
cmpsl
mov
pop
inc
sub
pop
dec
pop
rcrb
sub
pusha
xor
pop
enter
jne
xor
cmp
movb
js
fsubrs
aam
test
jl
sbb
pop
outsb
les
fnsave
jnp
les
stos
push
sbb
push
cmp
jmp
loope
decl
scas
mov
adc
dec
lcall
inc
shrb
dec
dec
mov
adc
movsb
pop
push
or
jl
cmpsl
sti
dec
imul
std
fcmovnu
jb
mov
rclb
or
sbb
mov
push
dec
xorl
push
xor
ficoml
loopne
stos
into
sbb
mov
jp
mov
mov
mov
jb
sbb
mov
movsl
decl
sub
fnsave
stos
dec
std
cmp
mov
lcall
shl
pop
sahf
dec
pop
jno
test
jg
mov
outsb
fstps
bnd
imul
jge
leave
dec
cmpsl
push
testl
add
or
push
jno
adc
leave
and
inc
enter
mov
adc
adcl
add
aaa
dec
bound
sbb
repnz
xchg
imul
push
pop
icebp
dec
and
mov
pop
xchg
cmp
mov
je
or
outsb
mov
hlt
xor
xchg
and
lcall
fcmovnu
jp
jmp
sbb
and
mov
test
clc
aas
fisubrs
andb
mov
roll
mov
das
mov
sbb
fisttpll
les
or
inc
mov
push
adc
in
lods
lret
sbb
inc
mov
in
scas
mov
fstp
jmp
cmc
fs
dec
pop
insb
push
cmp
jl
rorl
aad
push
sub
fistl
lcall
mov
bound
pushf
xchg
mov
enter
xchg
jle
pop
mov
jmp
lret
push
sti
and
lea
imul
jle
adc
cs
xorl
ret
xchg
xor
pop
mov
stos
je
cmp
xchg
fstl
fildll
pop
out
or
jno
xchg
xor
push
or
hlt
jl
inc
jbe
int
pop
inc
xor
mov
dec
rcrb
sub
inc
int3
push
cli
pop
sub
ss
int
cli
js
pop
cmp
sbb
push
inc
add
sub
mov
xchg
sub
sbb
pop
dec
outsl
mov
pop
dec
pusha
outsb
and
mov
lods
rclb
inc
mov
stos
inc
in
ljmp
popf
lret
gs
mov
cld
xchg
daa
mov
shrl
pop
pop
inc
mov
std
mov
daa
push
mov
push
sub
cwtl
rolb
push
mov
scas
pop
fdiv
mov
scas
aaa
mov
cli
jnp
inc
mov
push
inc
sbbl
push
dec
mov
jno
icebp
push
mov
push
in
xchg
rol
pop
test
mov
out
push
gs
push
xchg
xchg
pop
jno
jne
adc
xchg
int3
push
jne
loope
mov
stos
sub
push
lea
sbb
push
or
popa
mov
pop
mulb
int3
lcall
int
jg
packssdw
cmc
inc
out
repz
cmp
inc
popa
adc
mov
ret
mov
mov
nop
jbe
rcrb
sbb
cli
int3
addr16
add
arpl
dec
xor
shrl
ret
pop
and
adc
push
dec
daa
mov
popa
ja
mov
pop
or
jl
lods
adc
enter
xchg
sbb
fistps
sub
inc
dec
fldcw
sub
in
scas
bound
cld
or
shlb
jno
clc
sbbb
fwait
push
dec
mov
jae
mov
inc
push
mov
fcomp
jnp
sub
clc
scas
lcall
cmpsl
ret
xchg
mov
mov
ret
loop
int3
pop
sub
mov
hlt
xchg
lea
sub
dec
sahf
dec
cs
mov
lock
or
les
pop
jb
push
add
add
adc
pop
ds
and
lock
das
mov
push
adc
xor
aad
pushf
ss
add
xchg
dec
and
push
nop
mov
fstpt
test
fdivrs
add
scas
mov
xchg
xor
dec
dec
cmp
ret
mov
ret
pop
sub
mov
shll
push
mov
or
das
adc
or
xchg
xchg
sahf
inc
outsb
pop
or
or
leave
mov
mov
add
sarb
inc
pop
lods
dec
add
jge
xchg
sub
dec
and
xchg
fst
pushf
mov
pop
sub
mov
mov
cmp
enter
xchg
xchg
inc
cltd
enter
mov
enter
xchg
xor
dec
arpl
mov
int
pop
mov
cmc
hlt
pop
jb
xchg
inc
inc
mov
pop
shr
repz
rcl
stos
mov
pop
add
iret
sbb
rcll
pop
sub
roll
fcomps
fs
lcall
daa
jo
lret
mov
and
push
nop
mov
fstpt
test
fdivrs
add
scas
mov
xchg
jg
xchg
mov
popf
lret
fldcw
movsl
pop
sbb
or
cmp
jl
xchg
aaa
mov
pop
xchg
xor
cmp
lahf
loop
xchg
dec
sti
pop
sahf
mov
pushl
sbb
aas
cmpsl
xlat
add
pushf
sbb
adc
sarl
and
lock
dec
and
mov
jmp
inc
sbb
or
stc
call
aas
sti
sti
and
rolb
push
or
xlat
pop
mov
mov
mov
imul
mov
das
push
xchg
addl
and
mov
insb
mov
jecxz
enter
je
pop
dec
mov
aas
mov
int3
fdivl
fs
movsl
mov
stos
pop
ficoml
add
test
addr16
dec
xor
adc
outsb
xchg
mov
dec
adc
add
sbb
cltd
push
push
stos
mov
add
mov
push
xor
ret
mov
fdivr
repz
xor
pop
mov
addl
xor
xchg
mov
sbb
push
cmp
movsl
mov
insb
jbe
push
cmp
in
push
ret
fld1
jb
pop
hlt
or
and
or
loopne
dec
inc
ds
xchg
sub
mov
mov
out
pop
fptan
lods
shl
pop
and
popa
pop
xchg
sbb
aas
into
sbb
int
cld
ds
and
mov
data16
nop
sub
sbb
test
lcall
pop
and
mov
sbb
adc
stos
mov
aaa
pop
lods
mov
test
pop
push
adc
mov
sbb
jo
arpl
sub
inc
xor
test
inc
scas
data16
fisubrl
fsubrs
stos
sti
andl
cmp
push
mov
dec
or
pop
and
and
bound
pusha
push
jo
shlb
or
shlb
subl
rcr
xor
fsubrs
cltd
mov
pop
pusha
stos
ja
aam
adc
fbld
xlat
outsb
fld
clc
xor
xchg
inc
mov
lret
xor
xchg
es
mov
fisubs
pop
mov
mov
js
test
orb
aaa
fisubl
mov
pop
mov
icebp
clc
sti
mov
pusha
lea
add
stos
aad
out
push
and
nop
sbb
mov
push
push
imulb
cmpl
mov
in
jae
sub
jae
mov
iret
pop
dec
bound
push
cmp
xchg
movsl
dec
dec
dec
or
mov
and
dec
xchg
stos
sti
repnz
mov
ja
fstpl
icebp
or
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
push
inc
sbbl
push
dec
mov
jno
icebp
push
mov
push
in
xchg
rol
pop
test
mov
out
xorb
push
pop
pop
dec
cltd
test
jb
sbb
aaa
popf
iret
and
mov
mov
dec
inc
mov
push
jp
out
mov
jne
fimull
loope
xchg
cmp
pop
das
xorl
adc
pop
push
or
je
daa
mov
lret
jns
jp
mov
sub
add
fdivrl
dec
xor
stos
sub
push
and
cmp
lods
mov
sbb
push
test
dec
or
sbb
mov
bound
fxch
push
iret
bound
xchg
fcomps
in
cmp
sub
adc
mov
pop
test
lods
sahf
jno
pusha
mov
sub
in
iret
adc
loop
mov
shr
divl
ds
jo
adc
cmp
mov
mov
mov
mov
ficomps
mov
sub
pop
mov
fcmovnu
out
insl
xchg
or
cmp
xchg
sub
xchg
jmp
mov
dec
mov
into
pop
stos
nop
cmp
lret
test
repz
test
mov
push
out
mov
pop
pop
mov
cmc
cld
jg
mov
sbb
mov
stos
mov
xor
lods
push
sub
lds
stos
adc
stc
inc
pop
dec
add
bound
dec
rcrl
mov
or
cwtl
fistl
mov
or
push
cmp
push
or
es
lds
bnd
jg
xchg
test
jnp
inc
mov
push
inc
sbbl
push
dec
mov
lods
sbb
hlt
test
mov
ljmp
popf
jmp
xor
int
loope
pop
cmp
xabort
js
and
sbb
in
jne
repz
xor
dec
inc
mov
cmp
outsl
xchg
jns
fidivs
push
mov
rol
mov
push
adc
cmp
pop
addb
adc
mov
xchg
lahf
lret
hlt
movsl
ret
inc
in
fdivr
sbb
sbb
add
lods
cmpsb
ret
inc
test
dec
pushf
dec
and
adc
push
out
stos
lret
lcall
sbb
neg
mov
dec
popf
lret
data16
cli
or
cmp
mov
jecxz
xchg
stos
lds
stos
stos
inc
lcall
cmp
sub
cltd
mov
rcr
fcomi
js
inc
bound
cld
pop
mov
mov
cwtl
hlt
add
sti
add
pop
mov
lods
mov
xlat
xor
push
inc
gs
mov
sbb
xchg
adc
call
sbb
and
xchg
enter
mov
dec
mov
rcl
mov
jmp
lret
cmpsl
and
test
sub
cmp
xor
test
shrb
sbb
push
mov
add
or
out
repz
or
repz
clc
movl
sbb
mov
test
inc
sub
and
mov
cmc
in
dec
fsubrs
push
sbb
cs
fstps
lock
or
xor
jb
loopne
sbb
es
cwtl
inc
sbb
cmp
fucomi
mov
rorl
mov
stc
xor
pop
sub
addl
fwait
pop
cmpsl
xchg
adc
hlt
jp
sbb
mov
out
push
ljmp
movsl
jbe
mov
lahf
cmpsl
jnp
pop
fs
fwait
cmp
popf
iret
xchg
and
sbb
push
or
loope
jl
out
mov
cmp
das
mov
or
test
mov
pop
cwtl
in
mov
dec
pop
add
adc
pop
fdivl
pusha
xor
mov
pop
sub
mov
or
add
lcall
addr16
lret
mov
and
push
nop
mov
fstpt
test
fdivrs
add
scas
mov
xchg
jg
xchg
mov
popf
lret
fldcw
movsl
pop
sbb
or
cmp
jl
xchg
aaa
mov
pop
xchg
xor
cmp
lahf
loop
xchg
dec
sti
pop
sahf
mov
mov
mov
add
sbb
or
sarl
and
lock
dec
and
mov
jmp
inc
sbb
or
stc
call
aas
sti
sti
and
aam
jecxz
mov
adcl
mov
mov
mov
imul
mov
das
push
xchg
addl
and
mov
insb
mov
jecxz
enter
je
pop
dec
mov
aas
mov
int3
fdivl
fs
movsl
mov
stos
pop
ficoml
add
test
addr16
dec
xor
adc
outsb
pop
popf
lret
fisttpll
xchg
dec
adc
add
sbb
jp
sbb
adc
inc
pop
pop
mov
cs
mov
rclb
jns
sbb
scas
add
pop
ficomps
leave
loop
cmp
cwtl
add
xchg
adc
cmpsl
push
mov
test
in
shlb
insl
xchg
imul
cli
jae
push
insl
jecxz
or
mov
leave
out
and
lahf
inc
inc
mov
cwtl
mov
loop
cmc
xor
stos
jp
jne
mov
loopne
les
mov
fstl
rolb
adc
ret
jns
lahf
rcrb
mov
push
dec
lahf
sub
cwtl
lret
xor
nop
adc
dec
xor
test
xchg
cld
mov
mov
pop
cmpsb
xchg
jns
test
xchg
loopne
sub
xlat
add
sbb
test
and
scas
mov
lcall
pop
or
lods
arpl
lahf
fmulp
xchg
in
mov
cmp
repz
pop
and
sbb
arpl
inc
aam
jecxz
repnz
sub
and
mov
adc
aad
mov
jg
mov
or
pop
fisubs
int
dec
bound
pusha
push
mov
inc
inc
mov
inc
pop
or
push
cmpsb
jns
fldpi
mov
sbb
cmpsl
pop
sarb
dec
add
in
cmp
in
out
mov
lods
cwtl
mov
mov
pop
sub
or
inc
cmp
jg
pop
ret
cmp
addr16
ret
pop
mov
push
dec
jb
or
cmp
mov
jnp
ljmp
bound
push
cmp
outsb
push
jl
pop
jg
push
xchg
inc
inc
xchg
cmpsb
push
push
pop
idivb
hlt
cmp
rcl
dec
push
mov
ljmp
xchg
in
cli
xchg
movq
movsl
shl
xchg
adc
ret
jnp
clc
xor
lea
jo
pop
ds
cmp
je
dec
pushl
icebp
in
cmpsb
push
lods
push
push
aas
movsb
cli
xor
daa
jge
and
mov
cltd
enter
mov
cwtl
push
or
lds
sbb
in
xor
xchg
dec
pop
xchg
mov
fistpll
dec
call
pop
mov
imul
ficoms
inc
iret
pop
mov
pop
dec
jo
leave
out
ja
ret
add
cmc
cld
or
dec
sbb
dec
fsubrl
leave
add
and
lods
pop
push
mov
stos
fs
bound
sbb
imul
push
jge
cli
dec
cmpsl
push
negl
mov
pop
jb
movsb
add
push
mov
aas
lahf
inc
pop
sbb
icebp
sbb
out
mov
adcl
into
in
std
decl
and
or
out
out
mov
fstpl
lahf
push
lods
xlat
push
or
lcall
daa
jnp
enter
jge
popa
push
stc
bound
sub
xchg
mov
sarb
adcl
arpl
mov
push
mov
lods
xchg
mov
dec
and
mov
push
jae
mov
lock
arpl
les
add
sbbl
dec
dec
test
icebp
mov
xor
mov
popa
lea
pop
clc
mov
in
dec
mov
dec
out
or
cld
and
in
stc
add
aas
jl
jmp
add
ret
leave
or
mov
jmp
mov
add
mov
push
dec
shlb
jmp
mov
cs
leave
cmc
and
dec
outsl
andl
or
push
mov
pop
stc
jmp
lods
movsl
cmp
inc
and
daa
pop
cmc
sbb
test
popf
mov
xor
sub
scas
inc
mov
cmp
inc
nop
fisubrs
sbb
xlat
or
popa
mov
pop
xor
lea
ss
cmp
cld
xor
adc
jno
mov
hlt
jne
pop
dec
aaa
fiadds
xchg
cmp
dec
frndint
jg
hlt
and
push
sub
dec
cmp
adc
fsubrl
leave
add
stos
push
lods
into
push
enter
jne
sub
subb
dec
js
and
lahf
js
shll
pop
shrl
mov
subl
mov
inc
jg
scas
dec
fs
hlt
push
sub
inc
fs
or
jmp
out
fwait
push
mov
cmp
lds
decl
xor
lcall
mov
mov
xchg
lcall
mov
fs
lea
sub
fwait
ds
popf
iret
dec
push
or
aam
lcall
or
sub
and
and
mov
pop
pop
sub
sbb
inc
jne
fdivs
rolb
mov
iret
sbb
in
cmp
sub
mov
xor
lock
add
loop
xchg
gs
mov
pushf
dec
cmp
xlat
pushf
js
sub
mov
mov
cmp
into
xchg
stc
cli
in
test
cmp
stos
aad
mov
or
push
fisubrl
or
je
arpl
sbb
cld
cmp
fidivs
dec
shr
movsl
pusha
push
cmp
sub
pop
andl
add
adc
or
rcr
sbb
jp
stc
mov
xchg
mov
sahf
cli
xlat
insb
jbe
lcall
mov
in
clc
mov
repz
jae
dec
dec
inc
xor
jge
aaa
sbb
mov
sub
cmp
sbbb
shlb
cmp
mov
into
inc
mov
inc
mov
xchg
cmp
cmp
and
mov
repz
cmp
mov
mov
add
cwtl
dec
and
mov
mov
push
dec
jb
jns
and
mov
sbb
dec
or
lret
lret
mov
stc
cli
in
test
or
invd
nop
data16
sub
mov
imul
mov
lods
je
mov
add
sbb
sbb
jmp
mov
adc
icebp
and
pop
sub
or
mov
inc
jecxz
stos
addl
addr16
les
sub
mov
sub
mov
xchg
xchg
push
out
xor
nop
cmpsl
sti
mov
adc
popf
scas
sbb
sub
je
nop
lea
ds
push
dec
mov
jmp
gs
pop
pop
pop
push
int
dec
xor
movsl
dec
cmp
lods
aas
push
mov
jl
lea
sbb
mov
add
shrl
cmpsl
es
mov
das
and
dec
lahf
lock
pushf
dec
xor
mov
lahf
lcall
movsb
leave
push
sbb
sub
imull
cmc
movsl
stc
pop
lahf
jnp
sbb
pop
sbb
xchg
das
add
stos
jge
sbb
dec
stos
cmpsb
xor
jb
popf
or
cli
and
mov
cmp
call
scas
push
js
js
mov
sub
or
sub
inc
mov
enter
bound
out
sti
scas
jp
or
push
cmp
movsb
push
gs
pop
inc
es
rcrl
aaa
popf
xor
mov
je
mov
jg
int3
test
push
mov
das
ret
inc
mov
ret
arpl
das
mov
or
xchg
push
inc
fstpl
pop
add
xchg
mov
scas
xlat
int
hlt
gs
pop
dec
aaa
add
sbb
jg
cld
jg
divl
ret
clc
lds
jns
lds
nop
lds
mov
dec
push
clc
test
ficomps
push
lds
xchg
pop
lcall
jl
lcall
push
sbb
lret
mov
mov
enter
mov
add
pop
cld
adc
xchg
cwtl
popf
adc
mov
movsl
daa
mov
jmp
add
movsl
shr
xchg
popf
dec
xchg
cwtl
loopne
xlat
and
fsubrs
xchg
jns
fimull
push
mov
cmp
xchg
nop
nop
inc
sbb
cmp
fld1
jb
mov
xchg
dec
ds
bound
add
mov
mov
dec
cmc
dec
inc
xor
cmp
popa
mov
or
mov
fsubs
je
scas
dec
pop
mov
mov
fmul
add
inc
testl
sbb
ja
pop
adcl
loopne
mov
loope
push
xor
add
jecxz
sub
test
push
jne
pop
sbb
ss
sbb
mov
pop
dec
fildll
ret
add
jge
imul
mov
icebp
push
sbb
pushf
fstpt
push
or
pop
stc
leave
gs
mov
add
nop
sbb
add
and
je
decl
jnp
inc
push
mov
or
mov
lock
fdivrs
push
sbb
mov
call
xlat
xchg
pop
out
call
dec
cmp
xor
loopne
je
pop
xorl
imul
pop
gs
xor
mov
call
movsb
ja
sti
test
xor
insl
stc
dec
out
ds
mov
adc
mov
sbb
aas
ret
cmpsb
mov
fsubl
dec
cli
sub
shrl
fstps
roll
push
mov
ret
fisubl
jno
cmp
add
pop
mov
inc
scas
jne
dec
xchg
rorl
dec
mov
dec
pop
js
jecxz
scas
frstor
gs
test
pop
pushf
es
scas
and
adc
sahf
push
cwtl
in
sarb
jb
adc
into
xchg
cmp
rcll
stc
mov
push
pop
test
jge
imul
mov
popl
imul
sti
and
xchg
enter
mov
hlt
xchg
inc
xor
push
fsubr
mov
cmc
repnz
pop
das
or
dec
pop
stos
shr
fdivl
mov
je
mov
or
sti
loopne
insb
cltd
adc
jge
sbb
mov
das
dec
scas
es
mov
add
xchg
int3
jae
push
add
arpl
mov
xor
lods
push
sub
sbb
cmp
scas
mov
xlat
inc
jae
jno
cld
sahf
dec
data16
insl
mov
repz
pop
mov
mov
xchg
imul
jecxz
fwait
sbb
or
pusha
push
pop
pop
fsts
imul
rorl
pop
push
mov
inc
sarb
stos
gs
test
rcll
push
fdivrs
jge
imul
xor
fcomps
mov
js
movl
or
push
push
dec
dec
lea
fsubrs
test
cmc
xor
sub
cmc
mov
pop
or
test
ret
imul
fstpt
pop
add
add
push
mov
test
or
shlb
test
pop
jecxz
sbb
mov
stos
test
fiaddl
inc
pop
addr16
fistps
add
ljmp
xchg
pop
dec
loopne
jno
lret
push
cmp
ret
xchg
or
cmp
lahf
stos
test
inc
lcall
cmp
mov
and
jae
ret
leave
ficomps
jnp
inc
mov
xor
mov
std
jg
icebp
mov
push
cmc
addr16
inc
sbb
or
pop
pop
js
or
mov
push
pop
xchg
call
jo
mov
jg
jb
xor
cmp
mov
dec
and
push
out
mov
jne
dec
lds
mov
aad
out
mov
sub
call
and
mov
jge
mov
jecxz
xor
dec
pushf
sbb
in
ja
push
sbb
or
mov
jbe
mov
leave
cltd
xor
ficompl
push
inc
push
pop
sbb
sbb
add
push
icebp
int
mov
popf
imul
push
mov
xor
push
fwait
or
mov
xor
xchg
pop
push
cmp
lods
cmp
cltd
ret
lahf
ficoms
fwait
shl
adc
loop
xchg
lea
jo
int
idiv
decl
cmp
or
adc
in
mov
xchg
mov
bound
add
insb
jbe
inc
sbb
pop
cmp
xlat
dec
cmp
ret
jge
push
loopne
inc
adcb
js
adc
dec
sbbl
push
fimuls
sub
adc
pop
dec
mov
mov
test
xchg
dec
push
or
ret
xchg
clc
jl
pop
je
in
or
dec
or
and
repnz
aad
inc
repz
jp
fnsave
pop
lret
cli
test
xor
mov
inc
stos
push
lock
or
adc
mov
mov
jno
inc
push
insl
sbb
and
adc
shrb
fisttpll
dec
mov
cmp
push
push
cmp
lahf
mov
cld
ljmp
ss
cltd
stc
xlat
in
testl
adc
test
out
jp
cltd
jns
fucomp
push
out
sub
mov
out
push
lods
mov
pop
jo
jb
data16
in
xor
push
or
mov
and
clc
pop
out
mov
xchg
pop
xchg
dec
daa
sarb
xchg
xchg
pop
addb
mov
or
int
sbb
mov
add
inc
stos
ret
pop
pop
xor
mov
mov
sub
pushf
ss
out
jp
lret
mov
and
push
nop
cmp
fstpt
test
fdivrs
add
scas
mov
xchg
fmull
adc
pushf
dec
mov
test
and
jnp
scas
xchg
stos
std
xor
mov
mov
cmp
and
movsb
xchg
cmp
lea
mov
dec
jns
les
xchg
cld
out
stc
or
pop
jle
aaa
sbb
jle
inc
sbb
add
daa
dec
cwtl
call
addr16
fwait
push
xchg
pop
cmp
push
fidivrl
add
mov
mov
popf
idivl
mov
sti
and
fiaddl
push
or
or
shlb
cmp
jecxz
scas
or
clc
cmp
xor
shrb
add
cmp
jb
lahf
pop
mov
popf
repz
cmp
jl
stc
test
shlb
jecxz
add
cmpb
pop
ret
xchg
fdivl
xor
xlat
mov
dec
mov
pushf
dec
pop
and
lahf
lcall
aad
shlb
inc
ret
movsl
insl
lret
sbb
daa
sbb
and
hlt
stos
stos
gs
push
mov
fcompl
jb
sub
mov
dec
in
loopne
cmp
jmp
fistps
sbb
das
cmpsl
xlat
add
add
std
jo
rcrb
push
in
sahf
addr16
push
lahf
push
in
fs
sub
fs
sbb
pop
sti
adc
jb
popf
jl
int3
jbe
popf
xor
mov
jb
add
inc
hlt
xor
jle
adc
dec
xchg
push
sub
mov
or
cmc
jmp
mov
pop
mov
daa
pop
fwait
inc
xor
adc
test
faddp
jns
sahf
push
aaa
mov
pushf
movzwl
push
add
push
int
or
lds
xor
jno
test
sub
mov
sbb
xchg
lea
jmp
mov
in
inc
pop
insb
push
pop
xor
push
mov
adc
sahf
dec
cmpsl
stos
xchg
stos
inc
lds
mov
mov
push
cmp
lahf
ret
data16
and
xor
and
in
int
push
mov
and
push
add
jl
rcl
cmp
call
push
daa
xchg
xor
mov
xor
push
push
lods
xlat
push
sbb
lods
jmp
pop
cmp
mov
push
sbb
enter
enter
inc
sbb
push
inc
je
sub
ret
xchg
pop
jp
dec
mov
inc
repz
xor
mov
inc
mov
movsl
pop
add
fdivl
xor
adc
lods
std
fisttps
pusha
xor
jnp
mov
sbb
cmp
dec
jnp
sub
inc
jbe
and
repz
dec
mov
pop
xor
adc
leave
sub
addr16
or
sbb
js
fsubrs
push
jg
mov
outsb
loop
xor
and
or
mov
push
test
mov
mov
inc
movsb
push
sub
xor
jbe
ljmp
jmp
out
aaa
push
sbb
xor
inc
xchg
pop
mov
jo
pop
sbb
sub
out
push
test
stos
icebp
mov
xchg
ds
xor
cmp
enter
outsl
out
ret
aad
add
sbb
jns
mov
sbb
inc
hlt
mov
jl
adc
or
xchg
dec
push
dec
mov
adc
outsb
leave
lods
push
in
sub
mov
push
mov
je
jne
inc
inc
xor
inc
pop
sbb
shlb
mov
pop
dec
mov
pop
lods
jg
pop
mov
addr16
les
arpl
dec
xor
sub
sahf
repnz
mov
xchg
pop
adc
pop
iret
bound
or
pop
daa
sbb
sbb
fs
push
mov
mov
dec
fs
xchg
jbe
mov
pop
lods
shll
jg
xchg
xchg
cwtl
inc
fwait
push
aas
popf
popa
inc
inc
xorl
push
std
pushl
adc
xchg
int
mov
mov
hlt
imul
lahf
imul
push
lea
es
lock
sbb
cltd
iret
sbb
int
sbb
mov
nop
dec
inc
cmc
or
push
or
imul
pop
fdivrl
mov
and
jae
mov
clc
call
lock
ja
ret
add
or
dec
cmp
lock
outsl
sub
dec
stos
push
lods
and
shrl
lods
dec
test
push
dec
jae
lret
and
pushf
or
pushf
jnp
pop
insb
fcomps
stos
and
test
pop
arpl
popa
xchg
jne
outsl
ss
jb
mov
jno
es
mov
jne
jo
and
js
jg
loopne
das
cmpsl
xlat
add
add
and
dec
mov
cmp
hlt
jp
stc
fisubrl
popf
out
pop
cmp
cmp
mov
sub
pop
popa
mov
mov
mov
jo
mov
and
inc
bnd
daa
adc
or
imul
add
inc
inc
mov
ds
add
or
cmp
mov
in
adc
pop
dec
push
xor
out
ja
inc
add
jmp
cld
rorb
sub
adc
sysenter
add
iret
or
adc
les
popf
xchg
leave
pop
fisubrs
lods
call
bound
add
cmp
arpl
test
pushf
pop
bnd
push
stos
loopne
pop
mov
dec
xchg
dec
mov
inc
lods
push
sub
xchg
fwait
scas
shlb
ja
ja
insb
ss
xchg
fmuls
sbb
cld
jle
call
jo
adc
mov
mov
adc
cmp
sub
sub
fsubl
pop
cmp
mov
xlat
addr16
call
and
push
or
jmp
mov
cltd
pop
dec
mov
cmc
hlt
jnp
pop
movsl
add
xor
std
xchg
push
or
lea
lcall
and
adc
jge
add
shl
jge
sbb
aaa
inc
sub
outsl
mov
and
sub
test
addr16
adc
mov
fisubrs
or
sbb
mov
sbb
push
dec
jae
lret
mov
pop
lret
push
pushf
cmp
xchg
cwtl
popf
cwtl
shrb
lock
mulb
lret
imul
fistl
jl
sub
mov
aad
mov
jbe
jmp
cmp
push
push
inc
sbb
js
das
mov
adc
addb
and
daa
inc
mov
scas
addr16
popf
xchg
xor
cmp
insb
jbe
sbb
ljmp
pop
in
and
data16
lock
lea
mov
mov
out
fcoml
inc
cwtl
int3
xchg
dec
inc
in
hlt
mov
add
int3
sbb
cmp
in
mov
jg
cmp
adc
pop
jmp
xor
mov
cmp
jp
add
mov
mov
ss
gs
mov
dec
popa
jbe
and
mov
sbb
jno
test
fwait
test
mov
lahf
movsb
fnstcw
xchg
cwtl
stc
fucomp
je
fisttpll
lret
test
jnp
push
icebp
add
sbb
test
mov
sbb
cltd
test
push
stos
mov
add
mov
pop
test
lods
jne
enter
xchg
fucomi
repnz
cld
sbbl
cmp
mov
lea
mov
dec
xchg
xchg
int
sub
and
mov
test
enter
lcall
cmpsl
ret
out
mov
fs
in
popa
pusha
mov
add
mov
jbe
add
loope
xchg
xor
sub
js
test
xor
sbb
lcall
mov
mov
test
int3
mov
mov
sub
mov
stos
add
dec
dec
sbb
mov
leave
fsubrl
pop
imul
xchg
add
jmp
outsl
jno
hlt
dec
sbb
out
cli
lret
mov
fs
mov
mov
pop
bound
or
ret
mov
les
pop
stos
xchg
cmp
jb
loopne
sbb
fwait
es
cwtl
inc
sbb
lods
fstpl
insb
js
in
movsb
lahf
mov
sub
xchg
stos
andl
pop
inc
sbb
add
rcr
xor
sub
xor
or
jmp
in
sbb
ljmp
insl
sahf
sbb
mov
sbb
add
loop
ret
add
loop
cmc
leave
outsl
pop
aam
in
dec
fldcw
shl
pop
and
arpl
xor
ja
ret
loopne
jmp
sti
clc
popf
mov
cmp
jp
add
pop
mov
test
or
shlb
cs
push
lret
loopne
xchg
and
cli
cmp
shrl
push
sub
cmp
jp
idivl
and
inc
rcrb
mov
xchg
stos
lds
ljmp
dec
fs
cmp
popf
pop
mov
xor
and
loope
iret
jge
inc
fwait
sbb
cltd
ljmp
idivl
js
imul
or
dec
xchg
pop
shl
je
cmpsb
pop
ret
in
push
test
mov
add
mov
mov
lea
mov
int3
inc
xor
sbb
leave
dec
pop
cmpsl
and
pop
or
daa
cs
xchg
popa
mov
push
add
repz
testb
mov
mov
or
add
xchg
setg
sti
aaa
add
sub
mov
pop
repz
clc
jg
inc
add
xchg
int3
adc
cmpsl
xlat
int
or
or
sub
lret
stos
insb
loope
ljmp
bound
fs
xchg
addr16
cmp
shll
mov
insl
scas
adc
and
ja
lret
adc
mov
vrsqrtps
add
movsb
cmp
aaa
or
lahf
inc
lahf
scas
fildl
repz
xor
inc
mov
or
jge
pop
fdivs
adc
les
pop
sbb
fucomp
xchg
mov
lods
out
negb
inc
mov
cltd
inc
sarb
xor
iret
and
and
mov
call
ret
xchg
dec
xchg
enter
mov
adc
idivl
les
movb
popf
xor
lahf
inc
arpl
adc
xchg
pop
cmp
lar
stos
pop
mov
ret
sbb
dec
or
mov
int3
sbb
fs
mov
pop
push
test
test
mov
push
icebp
dec
mov
dec
pop
inc
sar
mov
xchg
cmp
mov
cld
ss
mov
and
mov
mov
sbb
push
sub
ja
cmp
iret
mov
push
mov
js
pop
pop
je
in
idivl
iret
div
std
push
dec
loop
ds
xchg
xchg
xchg
sub
cmp
ret
inc
mov
aad
ds
imul
lret
fs
jmp
pop
popf
iret
sbb
insb
inc
sub
mov
sub
jne
or
xlat
or
mov
pop
push
adcb
xor
adc
jo
mov
mov
pop
adc
repz
gs
push
cmc
mov
mov
cld
jg
inc
sbb
xor
ret
xchg
sbb
enter
push
inc
std
aad
push
mov
jne
xchg
mov
adc
dec
mov
call
push
jl
leave
insl
mov
repz
idivb
insl
cwtl
push
cmp
push
in
notb
repnz
push
sub
mov
inc
pusha
push
jg
or
xchg
lahf
mov
popa
adc
cmpsl
xlat
in
pop
inc
loopne
mov
adc
adc
stos
or
aam
push
push
mov
insb
jbe
ljmp
pop
xor
pop
lea
dec
xor
cmp
adcb
and
jp
adc
inc
sarl
adc
xor
mov
xchg
icebp
mov
push
add
iret
fucomip
and
fsubl
jge
fmull
add
mov
push
pop
stos
jge
pop
ret
data16
dec
shll
aam
xor
jmp
jge
pop
sbb
mov
icebp
stos
mov
dec
pop
les
pushf
cmp
xchg
cwtl
popf
cli
insl
mov
lock
mov
mov
pop
lcall
mov
scas
repnz
jmp
std
and
mov
inc
pusha
ficomps
sbb
or
cmc
adc
inc
mov
mov
pop
mov
dec
test
inc
sbb
jp
fildll
adc
mov
adc
fsubs
pop
pop
pop
fsubs
xchg
outsl
or
cmc
fdiv
mov
mov
aam
xchg
loope
xchg
test
jge
fsubr
push
or
jno
pop
pop
pop
mov
rcrl
pop
jbe
pop
loopne
fisubs
mov
fisttps
inc
push
popf
push
aaa
mov
inc
sbb
or
test
adc
cwtl
arpl
and
ja
push
test
test
push
and
or
mov
rcrl
pushf
popf
fisubrs
subw
push
push
mov
xorb
jne
pop
fistl
lahf
cli
and
mov
in
and
xchg
ljmp
xchg
sbb
dec
jl
sub
je
out
idivl
sub
idiv
mov
jl
daa
shll
mov
lods
push
jmp
dec
mov
mov
fdivrl
xor
fbld
lcall
cmpsl
sti
xrelease
ret
push
or
aam
inc
lret
mov
cwtl
sahf
dec
inc
dec
and
inc
aaa
sarb
mov
xor
cmp
xor
cs
or
push
inc
call
xchg
pusha
xor
test
xlat
mov
push
push
jo
dec
out
ja
inc
mov
cmp
jle
pop
ret
xchg
int3
addr16
shlb
adc
cmpsb
and
jne
js
pop
and
mov
cmpl
insb
lock
movsl
test
cmpsl
repz
in
idivb
insl
test
dec
mov
std
lock
cmp
cld
repnz
inc
adc
xchg
and
inc
into
jecxz
jl
push
mov
js
mov
sub
in
testl
adc
test
out
jp
cltd
pushf
mov
out
shr
push
sub
ds
mov
pusha
jo
fwait
cmp
pop
out
mov
mov
mov
push
inc
mov
and
inc
fcomps
push
and
push
sub
pop
test
fistpl
dec
xchg
or
mov
jne
ljmp
pop
dec
lahf
lds
add
mov
negb
or
cmc
cld
or
adcb
xchg
int3
addr16
shrb
rcll
xor
sub
test
cmp
insb
adc
adc
icebp
ficompl
test
xchg
ja
in
pushf
lret
insl
xchg
je
and
or
mov
int
pushf
push
pop
test
addr16
push
js
mov
or
scas
aaa
mov
cli
jnp
inc
mov
mov
inc
shlb
leave
lret
aam
imul
or
xor
clc
cmp
cmpsb
fdivr
aaa
mov
fld1
jne
popf
outsl
or
mov
mov
mov
test
sbb
popf
push
xchg
jmp
mov
dec
mov
into
pop
stos
nop
cmp
lret
test
pause
mov
sbbb
stc
outsb
aaa
bound
ljmp
enter
xchg
scas
dec
fsts
xchg
xor
ljmp
orl
mov
ja
loope
imul
inc
and
dec
in
popf
arpl
add
insl
ret
add
or
fwait
xor
xchg
int
xor
jb
loopne
sbb
es
cwtl
inc
sbb
mov
js
in
movsb
lahf
mov
sub
xchg
sbb
jb
rcrl
js
mov
mov
and
lahf
movsl
mov
xchg
mov
pop
cmp
fwait
cmpsl
mov
fs
pop
mov
rcrl
int3
pop
sub
pusha
or
xchg
sub
xchg
jmp
mov
dec
mov
aam
js
call
xor
mov
cli
jae
mov
xor
dec
mov
fsts
mov
mov
add
cltd
xor
mov
mov
lods
push
sub
lds
cmp
lret
fucomp
jae
push
aam
addr16
test
cmp
or
push
mov
or
fistps
pop
xor
mov
repz
lods
pop
pushf
fninit
adc
adc
push
mov
mov
loopne
mov
in
idivl
adc
es
hlt
mov
push
or
dec
mov
or
mov
int3
jo
mov
out
mov
ret
fldl2e
gs
out
push
dec
mov
cmc
pop
test
jp,pt
testb
and
mov
mov
pop
pop
orb
mov
aad
push
mov
jmp
pop
jns
sar
sbb
jecxz
pop
push
mov
dec
adc
jbe
or
mov
and
xchg
pop
dec
mov
inc
xchg
nop
adc
test
ja
inc
in
lret
sbb
sub
popa
pop
inc
jbe
fs
mov
pushf
or
lds
bound
leave
push
sub
adc
jge
pop
jg
sub
lcall
xchg
cmp
cmp
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
add
inc
mov
rcrl
mov
and
rol
fistpl
loop
inc
jge
imul
add
rolb
loope
dec
sbb
jne
cltd
push
mov
inc
push
addl
mov
ds
adc
imul
lea
cmp
xor
pop
mov
mov
in
stc
pop
push
iret
repz
addr16
pushf
shr
or
dec
inc
sbb
insl
movsl
add
into
inc
cltd
fs
and
sub
inc
mov
add
lds
pop
mov
sub
cli
fs
movsl
dec
or
bound
test
or
pop
nop
lods
mov
imul
push
pop
push
int3
lods
and
push
jmp
mov
icebp
mov
jecxz
dec
mov
xor
xor
add
les
xchg
adc
inc
push
xchg
push
pop
pop
negl
xor
jmp
inc
dec
push
sbb
push
popf
xchg
das
inc
fdivrl
push
sti
jmp
inc
cltd
jecxz
sub
int3
pop
sub
sbbl
clc
push
adc
mov
outsl
dec
mov
adc
test
sbb
imul
mov
pop
xorb
decb
popa
movsb
cltd
sahf
dec
lahf
adc
jge
jecxz
loopne
aad
int
inc
sbb
out
and
xchg
sub
lods
xchg
sub
adc
cmp
aad
sbb
inc
mov
xchg
sbb
mov
jo
repz
sub
out
push
add
fcmove
jecxz
and
sbb
cmc
add
mov
sub
push
push
xchg
jnp
or
ja
daa
pop
pop
adc
out
mov
mov
call
mov
pop
adc
loopne
andl
pop
jo
movups
add
jp
pop
xchg
jg
xor
mov
adc
pop
xchg
mov
pop
pop
jbe
nop
adc
inc
ret
or
daa
fwait
outsl
sbb
cmp
xchg
mov
push
ja
in
pop
sub
js
test
xor
sbb
cwtl
cmpsb
repz
ret
mov
test
int3
mov
mov
sub
mov
sub
sahf
mov
sbb
gs
mov
int
mov
and
sbb
leave
push
fs
iret
sbb
push
sub
sub
push
lahf
or
jns
sahf
clc
int3
push
jg
xchg
dec
mov
xor
add
mov
sahf
cmp
mov
cmpsb
xor
jb
loopne
sbb
lahf
es
cwtl
inc
sbb
sub
pop
cmp
in
movsb
lahf
mov
sub
xchg
add
cmp
pop
adc
or
add
out
pop
in
or
adc
fcoms
mov
insl
in
mov
or
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
sbb
inc
lret
and
sub
daa
call
jmp
adc
jle
mov
clc
mov
arpl
out
les
cmp
shl
test
movsl
add
jle
lret
shrb
int
mov
pushf
push
xchg
iret
mov
ljmp
mov
ja
xchg
test
lret
cli
pusha
in
movsl
dec
push
mov
push
fcoms
cmp
xor
mov
push
daa
or
sub
mov
adc
pop
inc
lahf
mov
clc
sbb
dec
lods
xor
inc
xor
pushf
jmp
daa
mov
mov
jo
idivl
dec
xor
call
dec
loopne
int
or
mov
fcoml
mov
ret
pop
mov
lahf
in
or
mov
sahf
pop
mov
sbb
repnz
push
clc
pushl
imul
and
xorb
inc
xor
shr
push
cmp
je
pop
mov
clc
mov
cltd
push
push
jae
pop
rcll
in
ja
jle
in
sub
push
or
sub
pop
and
sarb
push
fildl
add
loop
mov
pop
jnp
imul
dec
mov
into
arpl
jbe
insl
mov
xchg
test
sbb
push
cmp
and
push
push
jge
dec
shrl
xchg
test
in
fimuls
aad
mov
jmp
push
mov
out
stos
adcb
mov
jmp
inc
mov
push
cmp
aam
fdivrs
insb
jbe
push
sbb
pop
inc
es
lea
fwait
lea
iret
sbb
std
outsb
test
je
xchg
nop
in
aad
push
loopne
shlb
adc
inc
xor
int3
lcall
int
cli
addr16
push
inc
mov
or
jnp
mov
jne
pop
dec
aaa
pop
sub
mov
or
cmc
cld
add
fsubrl
adc
mov
mov
xor
jno
iret
jge
stc
or
clc
mov
addr16
mov
fucomp
fs
mov
shll
je
cmc
pop
add
icebp
sbb
mov
pop
adc
dec
cmpsl
stos
xchg
stos
inc
loop
mov
fs
sahf
int
add
adc
repz
sahf
sahf
xchg
aas
idivb
mov
fmul
jo
xorl
lret
fsubl
clc
jb
je
mov
je
mov
xlat
push
sbbb
test
sub
ja
fistps
sub
mov
data16
pushf
mov
mov
cltd
push
or
leave
sbb
push
shr
inc
cltd
lcall
test
fidivl
mov
inc
inc
mov
mov
into
fiadds
mov
push
int
xor
jnp
mov
xchg
dec
popa
orl
lea
ss
inc
sbb
xor
dec
shll
fcmovu
outsl
sub
mov
addr16
xor
and
cmp
pop
insb
test
inc
inc
lock
mov
scas
xchg
dec
scas
mov
dec
cmpsl
push
hlt
xchg
add
mov
fs
jle
xchg
jbe
lods
fimuls
scas
push
fs
scas
pop
icebp
in
bnd
int3
das
fucomi
stc
or
pop
js
cmp
popf
mov
push
loop
jo
pop
ds
xchg
mov
mov
push
ljmp
stos
jbe
mov
mov
ficomps
andl
cltd
int3
pop
sub
sarb
mov
hlt
add
mov
cmpsb
jb
dec
daa
adc
loopne
pop
gs
adc
mov
test
mov
dec
call
ffreep
imul
fdivl
lar
xor
fwait
in
ja
push
add
cmc
cld
or
mov
lock
int3
addr16
mov
cwtl
fs
sub
xor
lods
push
sub
div
mov
mov
lea
adc
push
lret
pushf
mov
xchg
test
push
pop
outsb
push
inc
sbb
orb
test
and
rcr
xchg
ficoml
scas
dec
fs
mov
dec
inc
fstl
pop
es
jmp
pushf
fsubp
xchg
incl
inc
mov
jl
js
sbb
idivl
repnz
std
pushl
ljmp
jp
sbb
mov
out
push
call
inc
jge
imul
ja
test
es
lea
test
add
sbb
add
andb
js
sbb
cmp
fsubrs
out
cmc
hlt
dec
jb
mov
ljmp
lcall
pop
movsb
cltd
std
pusha
idivl
lds
push
sbb
testl
cltd
adc
mov
pop
lret
addr16
ret
adc
fsubrl
sub
sahf
jp
and
mov
mov
movsb
loope
inc
cli
stos
pushf
mov
push
dec
pop
popf
lret
mov
insl
dec
mov
pop
jb
push
push
mov
push
jne
push
jl
fistpl
mov
arpl
in
subb
cmc
nop
cmp
push
mov
xchg
inc
adc
add
arpl
rclb
add
dec
and
addr16
aam
mov
xor
push
jbe
mov
add
mov
in
push
fidivrs
inc
sbb
pop
sub
or
hlt
jl
out
mov
cmp
adc
or
iret
mov
icebp
pop
mov
lods
xchg
mov
imul
xlat
fidivrl
jl
cmpsl
pop
rcrl
aas
jnp
add
adc
bound
out
sbbl
jg
cwtl
lret
movsl
mov
lds
pop
and
xor
pop
and
mov
fldl
jg
mov
mov
lret
cmpsl
push
jg
insl
mov
jecxz
mov
pop
lcall
jl
cmpsl
push
push
std
lock
les
jmp
mov
jmp
push
lahf
jle
insb
and
or
pushl
xchg
and
or
aas
add
add
popl
xor
lret
or
jle
out
push
push
lods
xlat
push
or
push
pop
pop
pop
stos
pop
xchg
pop
cmp
sarb
fdivs
add
xlat
call
xor
fidivl
sbb
push
hlt
xor
nop
inc
fisttpl
xor
dec
lret
pop
inc
push
loop
lock
or
arpl
mov
cmp
jmp
clc
sti
inc
pushl
mov
sbb
cmp
mov
pop
push
jle
icebp
pop
dec
mov
inc
jmp
or
mov
pushf
push
hlt
mov
fsubrl
adc
mov
mov
xor
cmp
movsb
xor
adc
rcl
inc
fists
in
jecxz
scas
aam
aaa
cmp
jae
les
jge
push
push
dec
cmpsl
adc
add
sbb
icebp
sti
pop
sub
sbb
enter
fstpt
or
sbbl
pusha
xchg
and
or
mov
pop
sub
les
and
bswap
inc
mov
sahf
fidivl
lcall
test
jnp
lahf
outsl
or
aad
push
inc
mov
xchg
mov
or
andb
js
sbb
push
dec
sub
or
and
pop
push
xchg
dec
xchg
adc
loopne
cmp
cmp
mov
add
incl
clc
lret
jecxz
pop
push
mov
cltd
adc
jbe
or
cs
and
sub
mov
xor
dec
pop
rcrb
cli
xchg
jp
push
add
adc
pop
push
addr16
mov
fucomp
movsb
mov
popf
lret
add
or
cmp
adc
sbb
sti
xchg
jge
cmp
icebp
jp
sub
dec
mov
xchg
xor
pop
mov
int3
lods
fbstp
loope
int
arpl
pop
jbe
or
pop
sbb
mov
inc
cwtl
aam
sarb
push
stc
imul
fbld
rcrb
sti
xor
inc
xchg
outsl
push
dec
sbb
clc
in
dec
push
adc
int3
add
add
out
adc
lea
cmp
sahf
addr16
pusha
push
inc
in
lcall
ds
jne
in
fists
or
adc
popf
mov
mov
shlb
cmp
inc
and
int
pop
sbb
fcomps
sbb
movsb
push
jecxz
stc
fs
cld
scas
repnz
leave
push
in
dec
push
test
pop
inc
rcrl
dec
add
orl
or
sbb
lret
adc
shrb
test
xor
aad
adc
or
scas
aaa
mov
cli
jnp
inc
mov
pop
inc
sbbl
push
daa
out
mov
frstor
and
xchg
mov
xchg
mov
pusha
jo
jnp
sub
sti
repz
int3
pop
dec
test
js
sbb
popf
dec
xchg
jmp
mov
dec
mov
andl
add
mov
pop
lds
rcrl
inc
fsubs
lock
push
sbb
pop
sub
mov
repnz
xor
mov
ror
push
sbb
and
lods
icebp
negb
mov
pop
iret
inc
dec
jge
xor
jnp
sbb
neg
mov
dec
popf
lret
psubq
lea
xchg
adc
cmp
pop
pop
scas
dec
fs
jle
push
icebp
cli
cltd
lods
xor
jg,pn
sub
movsb
inc
scas
inc
xchg
ljmp
mov
mov
pop
out
xchg
aam
mov
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
sub
pop
cmp
cmp
cld
xchg
pop
decb
int
pop
sub
mov
adc
cmp
mov
int
jle
push
dec
mov
jns
mov
rcll
inc
gs
mov
divb
cmp
add
in
dec
fsubl
clc
outsl
rcrb
sbb
mov
adc
xchg
test
dec
and
mov
stos
pop
ficoml
imul
dec
jno
fimull
mov
xor
decl
jnp
fistps
mov
sub
mov
aad
lcall
ja
mov
jle
loope
fwait
lods
jle
fcoml
mov
xor
xor
cwtl
stos
mov
inc
fwait
leave
loop
inc
mov
push
fdivr
push
mov
in
cmpsl
in
mov
out
sbb
mov
out
je
cmp
pop
test
mov
sahf
xchg
enter
cmpsl
ret
mov
xchg
mov
mov
jne
fisttpll
sbb
outsb
inc
xor
imul
push
inc
mov
pop
pop
shlb
out
and
add
mov
es
sbb
cmc
sbb
ds
sbbb
mov
inc
jge
nop
lods
dec
cmpsb
shr
dec
popa
sahf
jo
ss
add
mov
cltd
cmp
sbb
sub
test
dec
test
test
lcall
ljmp
sti
stc
cli
in
test
cmp
sub
push
mov
or
icebp
mov
inc
stos
jbe
outsl
sub
daa
shrb
cltd
popf
sahf
mov
into
xor
fucomi
repnz
push
shlb
adc
mov
pop
ds
mov
sbb
dec
enter
movsb
xlat
xor
loop
mov
pop
fidivrl
out
ficomps
inc
mov
mov
mov
inc
mov
xchg
xor
and
test
push
dec
mov
mov
movsl
push
push
test
call
clc
je
pop
add
cmp
jmp
fcmovb
cmp
and
add
insl
adc
dec
jp
lcall
dec
test
shll
inc
push
cltd
or
lods
shrl
dec
mov
mov
sahf
das
xchg
stc
cli
in
test
or
invd
shlb
test
or
push
lret
stos
xchg
fistpl
jo
stos
push
shrl
dec
movsb
aad
xor
xor
cwtl
sub
inc
fwait
leave
loop
das
arpl
jmp
dec
inc
sbbl
das
sti
fsubrs
sbb
mov
push
loope
movsl
ret
fsubs
push
fdivrs
cli
jae
adc
in
sti
cwtl
repz
popa
jne
outsl
or
or
clc
lods
xchg
adc
sbb
mov
dec
inc
das
xchg
test
push
mov
push
dec
mov
cltd
lcall
dec
ljmp
jecxz
cmp
or
daa
stc
ds
sub
pslld
or
ret
push
sbb
xchg
adc
or
mov
dec
mov
fs
lret
push
icebp
jl
fcomip
xor
lods
fistps
je
sahf
das
xchg
stc
cli
in
test
or
xchg
dec
or
or
sub
sub
outsb
shrb
jl
mov
add
lds
push
test
movsl
xchg
lret
std
cli
jnp
inc
mov
xchg
andb
icebp
xchg
imull
cwtl
decb
and
mov
dec
int3
jge
cwtl
xor
mov
insl
jecxz
push
dec
test
rorb
mov
sbb
add
movsl
hlt
xor
nop
test
pop
adc
inc
test
cmp
mov
movsl
cltd
jns
adcl
arpl
mov
and
pop
push
inc
sbb
inc
sbb
ret
mov
mov
ficomps
cmc
mov
xchg
sub
adc
shlb
jno
in
repnz
pop
sbb
ss
ja
fs
push
inc
leave
lcall
fimull
cmp
cmp
adc
mov
xchg
fisttps
jmp
lcall
cli
cmp
stos
xor
xor
cwtl
mov
inc
fwait
leave
loop
das
jmp
and
je
stos
loop
xchg
add
ja
in
test
out
push
jnp
mov
sbb
push
lds
jg
movswl
jmp
std
mov
sti
and
ret
test
dec
push
or
andb
add
mov
pop
adc
mov
cmp
add
ja
cmp
jno
mov
hlt
adc
cmp
mov
sub
pushf
ss
mov
lret
mov
and
jg
scas
test
stos
xor
add
fildll
stc
inc
fldt
lcall
cli
pop
shll
xchg
movsl
add
or
xor
jb
fisttpll
cmp
mov
pop
fnstenv
jno
in
mov
push
cmp
mov
add
rcrb
jbe
daa
push
pop
rorb
sub
stos
push
test
xchg
mov
xchg
lahf
xchg
aam
sbb
cli
jae
inc
pop
xchg
jmp
mov
mov
mov
jle
or
in
hlt
xor
dec
dec
dec
add
mov
add
cmp
sbb
andb
mov
mov
test
aad
cmp
int3
mov
mov
sub
mov
addb
xchg
rcrl
aad
negb
ret
sbb
adc
stos
mov
pop
push
test
test
push
in
mov
ljmp
popf
aad
dec
pop
insb
push
cmp
pop
mov
lret
or
testb
outsb
shrb
dec
lods
pushf
xchg
popf
push
ret
fstl
fdivl
sbb
jmp
push
leave
cld
push
stc
and
adc
and
into
mov
cwtl
or
adc
rcr
mov
inc
cmpsb
pop
fucomi
push
jnp
mov
sbb
push
lds
aas
daa
ret
mov
mov
sti
and
rolb
or
andb
add
mov
pop
adc
mov
cmp
add
ja
cmp
jno
mov
hlt
adc
cmp
mov
sub
pushf
ss
lret
pusha
lret
mov
and
jg
scas
test
stos
xor
add
fildll
stc
inc
fldt
lcall
cli
pop
shll
xchg
movsl
add
or
xor
jb
loopne
sbb
andl
sbb
lods
fstpl
insb
js
in
movsb
lahf
mov
sub
xchg
ror
and
fs
cmpsl
and
addr16
les
push
jecxz
or
inc
scas
pop
mov
inc
fstpl
jecxz
xor
mov
je
test
lret
mov
aas
adc
jne
call
mov
pop
pop
add
dec
mov
and
mov
test
add
lods
jl
lds
cmp
insl
sbb
adc
das
out
push
nop
pop
lret
inc
sbb
rolb
test
lods
pop
stc
push
cld
mov
inc
lahf
mov
jae
mov
mov
mov
and
les
or
cmp
adc
cltd
dec
sub
outsb
les
push
xor
mov
fbld
push
pop
xchg
fmull
xchg
mov
shl
stc
popa
or
das
sbb
aam
gs
sbb
mov
push
and
cmp
test
cmc
cmp
and
in
mov
mov
or
cmp
xchg
ljmpw
inc
hlt
movsb
test
inc
ds
ret
dec
mov
sbb
cmpsl
push
push
inc
dec
jmp
and
cmp
call
les
inc
ret
aam
mov
fists
or
add
cld
sub
out
sbb
dec
sub
mov
nop
ret
gs
push
lods
xchg
sub
adc
shlb
jno
in
loop
flds
cli
push
std
push
add
or
nop/reserved
movsl
and
mov
ret
lock
mov
or
jl
mov
inc
add
loope
mov
inc
bound
mov
xor
push
mov
pushf
ret
add
push
xchg
mov
fwait
push
dec
mov
test
dec
aam
jb
inc
push
adc
lods
popf
xor
out
pop
cli
test
cmpsb
push
mov
xchg
fisttpll
dec
jne
push
adc
inc
sub
cltd
es
imul
cmpsl
jne
and
imul
cmp
and
mov
mov
test
add
imul
lds
cmp
insl
sbb
adc
das
out
push
nop
pop
lret
inc
sbb
test
lods
pop
stc
push
cld
mov
inc
lahf
mov
jae
mov
mov
mov
and
les
or
cmp
adc
mov
les
jbe
inc
rclb
mov
fnstcw
mov
fists
xchg
fmull
xchg
mov
shl
stc
popa
or
inc
aam
gs
sbb
cmp
and
mov
mov
cmp
in
mov
mov
or
pop
fdivrl
pusha
xchg
cmpl
jb
sbb
testl
out
push
adc
inc
mov
mov
ret
inc
lods
fstpt
inc
sahf
cmp
push
mov
mov
adc
cmp
mov
sub
pushf
ret
pop
pop
dec
test
jp
inc
push
nop
push
mov
jp
push
push
fwait
movsb
push
and
out
dec
push
xchg
fisttps
inc
rol
cmc
fnstenv
leave
inc
cs
sbb
adc
mov
push
and
scas
xchg
stos
jge
or
cmp
stos
xor
xor
clc
and
call
inc
and
pop
add
sbb
lcall
ja
mov
xlat
inc
and
xchg
inc
decl
inc
inc
insl
out
stos
or
inc
mov
or
push
cltd
jmp
and
lods
push
mov
ret
test
pusha
out
mov
int
inc
mov
jmp
adc
mov
mov
popa
push
xchg
ror
mov
ret
mov
ret
leave
ret
ficomps
gs
into
add
mov
int
pop
stos
or
into
int3
cmpb
imul
enter
ret
or
sub
lret
fcomip
xor
lret
leave
rcrl
movb
jecxz
add
jmp
or
rcl
add
sti
fsts
mov
aam
mov
ret
mov
loop
mov
mov
mov
xchg
mov
int
xchg
mov
lds
mov
std
jge
movsl
popf
negl
movsb
adc
pushf
cmpsl
xchg
outsl
fnstenv
lock
cmpsb
sti
sti
and
adc
push
jmp
addr16
cmp
sbb
jge
cmp
outsb
leave
lods
sbb
mov
ret
loopne
jae
inc
jne
jl
stos
mov
xchg
mov
loopne
fbld
nop
or
sbbb
lahf
xchg
cltd
pushf
dec
and
aad
sbb
test
dec
push
test
add
scas
mov
cmp
lret
int3
sar
cmp
mov
push
rorl
aad
inc
sbb
leave
or
pop
add
or
sbb
fstps
mov
rol
inc
mov
rol
xchg
fsubrl
and
sbb
ffree
inc
pop
jnp
and
jge
xchg
sub
dec
cltd
xor
xor
inc
popf
sbb
test
xor
das
stc
bound
call
mov
cmpl
pop
mov
add
mov
pushf
loope
rol
sbb
ret
fstl
mov
mov
scas
mov
lods
sub
mov
loop
adc
sub
lcall
dec
test
jp
inc
push
nop
push
mov
jp
push
push
fldenv
push
xchg
fisttps
ret
jo
fnstenv
dec
inc
cs
sbb
adc
mov
lods
test
stos
jge
or
cmp
stos
xor
xor
fisubl
call
inc
and
lret
add
dec
dec
cmp
rclb
aam
repz
xor
imul
xor
mov
out
std
xchg
push
lds
sub
pop
and
movsl
hlt
xor
xchg
sub
push
dec
dec
jmp
jno
cmp
xor
cmp
cmc
dec
les
dec
mov
into
lcall
mov
or
repnz
ss
add
mov
xor
push
pop
shl
roll
push
in
xchg
adc
clc
icebp
mov
xorb
sbb
xlat
or
shrl
leave
dec
sbb
sbb
mov
sahf
das
xchg
stc
cli
in
test
or
cs
nop
in
sub
stos
push
sub
cli
movsl
sbb
aas
cmp
jmp
js
test
aad
jp
sub
xchg
adcb
icebp
mull
add
xor
inc
pop
stos
or
xchg
fadds
in
mov
xor
icebp
pop
mov
fcmovbe
fdivr
lret
push
gs
insl
cmpsb
pop
mov
gs
or
mov
xor
inc
pushf
mov
inc
repnz
loopne
cmp
les
repz
in
cmp
inc
cmp
ret
add
inc
cmp
mov
imul
repz
mov
jle
mov
rcll
mov
sarb
add
and
add
mov
adcb
push
cmp
push
or
mov
inc
push
xor
adc
mov
arpl
dec
subb
lds
sbb
pop
movsl
xor
or
sti
xchg
insl
imul
jb
sub
icebp
push
sub
pop
loop
pusha
es
mov
cmp
icebp
loope
out
fs
popa
or
pop
jo
or
sub
dec
jb
out
dec
aam
inc
les
clc
dec
or
loope
ficompl
mov
push
jne
adc
shlb
test
dec
mov
and
dec
mov
sub
dec
mov
xor
dec
mov
cmp
inc
mov
fstps
mov
mov
jl
scas
mov
js
mov
pusha
mov
adc
mov
mov
mov
pop
xor
mov
and
and
mov
fwait
push
xor
mov
inc
add
mov
stc
cli
in
test
or
in
rolb
stc
nop
in
sub
sahf
push
sub
or
sbb
cs
js
test
aad
jnp
xor
cmp
jp
into
sub
sbb
shlb
sub
or
mov
adc
adc
rcr
push
ror
pushf
sub
push
mov
mov
sbb
mov
aaa
inc
xorb
cmpb
cltd
mov
inc
inc
inc
mov
dec
dec
dec
stos
sbb
les
push
inc
bts
jo
add
shrl
subl
push
inc
scas
lcall
scas
sbb
cmpl
mov
add
mov
or
mov
adc
mov
sbb
movsb
lahf
mov
inc
and
movsl
push
repz
xchg
aaa
in
cltd
ss
arpl
dec
subb
dec
subb
inc
test
enter
int3
inc
js
lock
mov
fcomps
lods
int
mov
scas
dec
add
mov
nop
push
mov
in
cmp
mov
mov
sub
repz
outsl
push
lret
push
fisubs
repz
inc
insl
stc
jbe
sbb
fisubl
push
std
mov
push
repz
loop
idiv
inc
cltd
enter
out
fs
orb
dec
nop
xchg
xchg
push
adc
orb
xchg
push
sbb
decb
mov
lcall
xchg
popf
call
incl
lret
pop
lahf
pop
mov
xor
enter
gs
jmp
sbb
add
testb
loopne
test
mulb
hlt
loopne
call
rclb
xchg
rcrb
movsb
loopne
clc
dec
ret
aaa
mov
jne
jo
inc
add
ret
jo
push
add
ret
jo
gs
out
int
and
repnz
ret
test
into
mov
adc
dec
icebp
andb
icebp
mov
jp
repnz
lds
rcrb
enter
add
clc
jns
sbb
mov
test
cwtl
movsl
scas
mov
lcall
icebp
pushf
cmpsl
pop
aas
fnstenv
cmc
sahf
cmpsb
fdivrl
bound
or
xchg
cmp
pop
xor
jmp
jo
mov
pop
mov
shll
mov
iret
add
add
fwait
push
divb
push
idivb
int
pop
xor
fnstenv
adcb
sbb
lret
fisttps
inc
xchg
ljmp
test
push
in
or
lods
xor
imul
cmpb
scas
fcom
push
jl
jmp
cwtl
mov
cmpl
sub
mov
mov
paddb
loopne
outsl
xchg
dec
sbb
mov
repnz
data16
sub
xchg
andb
mov
cmpsl
ret
std
mov
push
movl
lcall
ret
xor
stos
xor
inc
add
inc
add
test
addb
shlb
add
adcl
stos
cltd
inc
in
pop
pop
dec
lods
fwait
addl
sbb
and
push
dec
into
xchg
xor
scas
mov
sbb
stos
sbb
mov
ljmp
dec
sub
enter
int3
push
and
mov
fwait
push
fdivrs
inc
and
mov
mov
imul
adc
subb
lds
sbb
stc
movsl
xor
or
sti
xchg
insl
imul
jb
sub
icebp
fcmovnb
sub
jnp
pop
pusha
es
mov
cmp
sar
mov
cmc
js
sarb
js
js
loopne
andb
sub
push
or
pop
arpl
xchg
mov
sub
sti
mov
xchg
xchg
enter
cmpsl
ret
xchg
jb
fwait
outsl
or
aad
and
cmpsl
mov
int3
add
inc
inc
inc
cltd
ds
dec
dec
lahf
lret
jb
inc
popf
lret
ret
pop
push
xchg
ror
sahf
bound
xchg
ror
fisubrs
push
xchg
ret
push
jno
xchg
ret
lret
ret
jp
popa
mov
int3
add
add
int
inc
pop
mov
insl
into
lret
mov
insl
iret
lret
rcrb
sbb
enter
and
jno
leave
lret
inc
mov
lret
mov
lret
lret
rcr
cmp
cmp
ret
push
rclb
cmp
push
and
mov
inc
xchg
fstpl
lods
lahf
movsl
cwtl
shl
pop
mov
push
mov
lds
sbb
loop
push
sbb
aad
xchg
mov
in
pusha
xchg
mov
in
xchg
mov
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
and
pop
cmp
cmp
cld
lods
fwait
mov
stos
xchg
out
mov
sti
adcl
dec
dec
inc
lret
inc
mov
dec
addl
dec
mov
add
shr
xor
mov
pusha
xor
decb
cli
sti
mov
sbb
cmp
jp
pop
or
and
push
or
cs
aaa
fnstenv
in
ret
xchg
pop
xor
ror
hlt
jb
sbb
mov
push
ss
mov
fildll
jecxz
pop
das
repz
fnstenv
ret
xor
sbb
jo
dec
leave
sub
movsl
mov
cld
jp
add
cmp
mov
sahf
pop
cmp
js
xchg
jg
adc
js
repz
fsts
andl
dec
mov
test
adc
mov
sbb
mov
cmpsb
fcom
jmp
xchg
fld
mov
sti
sti
and
movb
or
or
jns
mov
pop
pop
add
xchg
hlt
pop
stos
shr
aaa
loopne
jne
aam
stos
pop
mov
mov
lahf
aam
or
mov
lods
fiaddl
repnz
out
jg
imulb
fsubrl
pop
imul
mov
pop
test
add
stos
les
lods
flds
sub
dec
std
movsl
lods
pushf
fcmove
mov
push
sbb
mov
pop
pop
lcall
pop
mov
lret
fs
pop
scas
jb
mov
icebp
cmp
inc
sbb
sahf
xchg
mov
addr16
popa
inc
xor
pop
repnz
or
cmp
or
mov
and
mov
push
pop
test
insl
in
jbe
mov
mov
sbb
xchg
fsub
shlb
sub
je
test
daa
loop
hlt
mov
xchg
test
mov
mov
mov
add
dec
jmp
and
mov
mov
test
xor
mov
lret
jecxz
outsl
inc
sub
jae
sub
sbb
aas
repz
cwtl
paddb
orl
aaa
cltd
fsubr
lods
test
leave
pop
pop
scas
mov
mov
int3
ljmp
sahf
dec
inc
ret
pop
sub
mov
rcll
cmp
outsb
xchg
ficompl
outsl
cmp
or
int
fcoml
mov
and
xchg
mov
and
sbb
mov
decl
mov
pop
push
dec
and
ds
aam
jae
cli
jae
push
xor
daa
pop
jae
gs
out
push
dec
mov
add
cli
pavgw
subl
imul
test
lds
or
int
pop
movsl
popa
in
ljmp
aas
out
test
xor
shl
ss
fildl
inc
mov
mov
sbb
sub
push
lods
xchg
sub
adc
aam
mov
sub
cmc
sbb
pop
jne
das
xchg
stc
cli
in
test
or
movsl
ss
lds
leave
or
imul
sbb
cmp
jae
lods
int3
cmp
jb
idiv
mov
in
adc
lahf
scas
popa
fcmovnu
jmp
push
fdivl
inc
jo
arpl
add
cmp
or
idiv
push
dec
mov
stc
sub
out
test
jle
out
push
gs
sub
movsl
fidivl
imul
mov
xchg
push
pop
popa
ds
mov
mov
je
sub
add
mov
fstpl
neg
cmovo
add
dec
pop
test
cmp
and
xor
repz
pop
push
sbb
mov
ret
mov
xlat
orb
sub
fwait
mov
cwtl
lret
inc
sub
rcrb
clc
cltd
lods
mov
clc
cmpsl
xor
lret
int3
stos
and
adc
mov
mov
jae
inc
push
sbb
jnp
stos
jo
sbb
xchg
movsl
add
or
xor
jb
loopne
sbb
mov
sarl
jnp
adc
inc
pop
sbb
sarb
dec
sti
cwtl
aam
sbb
add
mov
and
xchg
mov
mov
imul
mov
sub
daa
mov
fs
add
fnstsw
push
hlt
mov
leave
cwtl
jns
push
cld
out
mov
cmc
clc
dec
xor
pop
lret
sbb
push
cmpsl
shll
ljmp
icebp
dec
adc
call
in
mov
clc
sti
mov
hlt
adc
cmp
mov
sub
pushf
ret
fs
nop
lret
mov
sbbl
ja
inc
loopne
push
mov
stos
xor
ret
fldl2e
je
sahf
das
xchg
stc
cli
in
test
dec
mov
or
fidivs
cwtl
jge
scas
xchg
stos
clc
pop
stos
xchg
stos
lcall
pop
xchg
lods
outsl
ss
push
cmp
test
lahf
scas
std
leave
stc
mov
xbegin
xor
idivl
pop
fisttpll
add
lea
std
pop
insb
in
xchg
mov
xchg
xchg
inc
push
mov
or
in
jg
mov
inc
out
mov
ret
fld1
std
jge
lea
enter
int3
pusha
ds
jecxz
mov
sbb
mov
jmp
ss
dec
mov
push
repz
ret
mov
inc
movsl
test
jmp
pop
repz
repz
pop
push
mov
cmp
mov
push
or
lods
push
mov
xor
mov
test
push
test
mov
cltd
cmc
mov
in
fwait
mov
sbb
fldt
in
cmc
fst
test
lock
jmp
cmp
mov
add
push
dec
scas
jae
shr
jo
lods
inc
sbb
push
xchg
sbb
bnd
pop
stc
xor
leave
add
bound
or
or
add
sub
inc
imul
mov
dec
add
mov
sub
add
mov
int
call
repz
out
int3
ud2
fsub
push
jb,pt
int3
addr16
adc
add
dec
xchg
push
jae
adcb
cs
cmp
push
xchg
cmpsl
pop
or
inc
mov
imulb
sti
inc
jb
pop
mov
loopne
pop
ja
xlat
adc
stc
mov
pop
loopne
xor
pop
lahf
jp
dec
inc
sub
jne
ret
dec
mov
icebp
scas
pop
lea
stos
cmp
in
mov
dec
xchg
mov
int3
mov
lahf
stos
fs
daa
into
or
mov
or
outsb
test
dec
outsb
push
or
jae
stos
jge
jl
test
and
sub
mov
adc
sti
fstps
dec
sti
icebp
arpl
add
ljmp
add
push
shlb
cmp
xchg
clc
cmp
inc
repz
cmp
lds
ds
call
es
or
cmp
xchg
lret
mov
test
cltd
and
iret
scas
in
push
dec
jns
negb
mov
fistl
inc
sahf
shrl
mov
rorb
pop
pop
and
jecxz
xor
dec
jle
in
xchg
add
mov
fsubrl
fimuls
lahf
rcrl
jns
std
out
outsl
mov
je
cld
adcl
and
jl
mov
jbe
cld
ret
jbe
test
xchg
pop
push
inc
mov
imul
sbb
cli
inc
mov
xchg
adc
jne
in
jnp
hlt
add
lahf
enter
jbe
inc
fmull
sti
cmp
push
jecxz
xchg
loop
inc
dec
adc
mov
jge
xchg
xor
mov
lds
mov
out
mov
pop
add
es
lock
push
mov
arpl
xlat
fsubrl
rol
in
add
leave
sub
add
or
xchg
fisubrl
mov
shr
lods
popf
cltd
dec
stos
push
test
adc
scas
out
dec
aad
rorl
and
test
mov
dec
push
ret
shll
xor
shll
in
shll
in
mov
popa
fst
addr16
insl
clc
es
movsl
fsubrp
mov
rorl
fmul
jns
rcll
mov
push
dec
jl
xchg
add
xchg
lods
pop
inc
fidivl
mov
pop
inc
add
push
jp
adc
das
xchg
dec
push
mov
adc
xchg
lds
mov
sub
insb
cmp
push
sub
jmp
cmp
sub
dec
mov
pop
roll
fistpl
stc
pop
filds
lods
gs
adc
addr16
clc
ret
dec
push
ret
lds
ficoml
insb
aad
sbb
daa
sub
imul
ret
fcom
popa
lret
mov
fdivrl
dec
add
add
mov
xchg
sub
mov
inc
mov
pop
push
mov
notb
mov
pop
jo
jne
outsb
lret
mov
out
and
out
lds
xchg
dec
and
rorl
repnz
mov
dec
mov
repz
imul
sbb
test
jle
shlb
mov
jecxz
ja
pop
and
mov
daa
or
outsb
test
push
cmpsb
push
push
xor
movsl
das
pop
cmc
jle
pop
lods
pop
add
dec
daa
popa
cmp
pop
test
das
data16
test
inc
xchg
icebp
aas
mov
xor
inc
lahf
inc
stc
decb
les
aam
lret
mov
xor
push
dec
aad
sbb
insb
jbe
xor
dec
bound
dec
push
test
ret
pop
lock
out
mov
mov
push
push
iret
push
or
ret
jno
pop
ss
fidivs
mov
xchg
fstps
idivb
add
push
inc
inc
mulb
outsl
and
js
push
xor
adc
cmp
jae
mov
aas
out
pop
stos
mov
mov
add
lds
xor
leave
data16
fs
cld
inc
iret
out
cmp
shrl
int
sbb
jae
dec
pop
inc
and
cmp
lds
jmp
dec
imul
sub
mov
fs
add
cwtl
ljmp
lods
shrb
or
cmc
add
movsl
push
sbb
in
adcl
push
mov
adc
inc
mov
or
add
add
ret
out
inc
mov
stc
sub
xor
jp
dec
dec
sahf
mov
in
pop
add
je
sbb
pop
jmp
mov
in
lds
divb
aad
stc
push
jno
data16
subl
jp
push
shrb
cmp
cmp
dec
les
fptan
mov
iret
fucomip
hlt
add
mov
or
insl
inc
push
ja
nop
xor
test
xorl
inc
aam
sub
xor
mov
mov
cmpsl
xchg
mov
push
out
jmp
les
shrb
je
cmc
push
test
incl
cltd
test
xchg
stos
jge
or
out
push
jecxz
mov
dec
lods
pop
xchg
mov
inc
pop
mov
out
mov
js
add
inc
test
adc
inc
push
fadd
or
mov
sbb
inc
stos
fsubrl
movsb
dec
mov
xor
fsubrl
movsb
je
jp
fidivrl
xchg
inc
popf
rclb
cmpsl
fcmovbe
pop
stc
nopl
lock
lret
out
xchg
jge
and
fsubrs
sub
or
cmpsl
lret
test
jo
xor
arpl
test
adc
xchg
imul
mov
pop
jne
imull
cmp
lods
aas
cmpsb
lahf
mov
mov
mov
sub
std
cmp
or
inc
enter
mov
lock
scas
faddl
dec
movsl
xor
cld
mov
mov
notl
sbb
add
sub
add
insl
cli
dec
movsl
sti
adc
inc
mov
popa
jp
shl
hlt
mov
out
shlb
jmp
scas
inc
jecxz
arpl
lds
xor
pop
sub
testl
xchg
test
or
lcall
sbb
lcall
pop
cli
imul
jmp
sbb
icebp
rcrl
jns
xor
repz
in
mov
sub
setl
ss
sbbl
lret
sub
jo
in
adc
cs
sti
add
xor
sbb
jl
in
aam
outsl
jmp
mov
xor
mov
movsl
push
sbb
insb
scas
int3
adc
test
lcall
dec
sbb
scas
sbb
mov
ret
push
or
scas
jae
fidivrl
lock
push
xchg
sbb
les
mov
inc
lcall
cli
push
lcall
sub
daa
xchg
dec
jnp
add
sahf
and
and
inc
jp
popf
leave
jnp
fstpt
jb
adc
inc
loope
andl
scas
insb
dec
sbb
and
sub
test
es
fisubs
imul
arpl
mov
push
or
sti
jmp
jl
in
enter
test
sahf
and
cmp
xorb
sarl
aam
int3
stos
shrb
pop
aam
ret
jno
fucomip
repz
jbe
ret
repnz
jnp
mull
dec
sbb
pushf
hlt
movb
jg
xchg
adc
and
aad
ja
xchg
cmpsb
mov
sbb
mov
adc
jle
rcl
xor
rolb
inc
roll
add
xchg
fisubl
xor
nop
movsb
cmpsl
and
cmp
push
sbb
pop
jae
jmp
fbld
mov
or
xchg
adc
and
popf
inc
outsb
aad
xchg
mov
push
cwtl
cmpps
aad
fst
inc
and
mov
cmp
push
cmp
adc
shll
enter
and
sbb
stos
rorb
jp
ja
push
ljmp
mov
add
push
lahf
cmpsb
arpl
cmp
repz
add
iret
daa
jnp
jecxz
pop
sarl
mov
inc
js
fs
orb
imul
icebp
inc
stos
cmpsb
rclb
outsl
hlt
mov
scas
ds
cld
fcomip
dec
jl
inc
mov
sub
mov
add
add
and
adcb
add
xchg
xorb
add
push
mov
int
pop
jns
subb
add
mov
inc
inc
nop
push
push
jnp
xchg
add
hlt
push
and
and
nop
and
addb
std
jo
shlb
addr16
arpl
adc
stc
iret
jo
jmp
add
cmpsb
into
dec
pop
push
sub
jmp
leave
js
outsw
jae
out
sahf
sub
mov
hlt
sub
xchg
mov
adc
scas
js
mov
cmc
sub
shl
and
clc
mov
out
loopne
popf
aas
fisubs
icebp
mov
sti
mov
ljmp
aad
add
sub
lahf
and
in
lret
mov
enter
inc
in
rcll
lret
out
dec
or
xor
mov
inc
pop
loop
push
cmp
mov
and
push
adc
and
ret
test
and
mov
xchg
cmp
jbe
pop
nop
test
push
xchg
sub
pushf
xchg
incl
aad
mov
push
addl
push
dec
mov
test
xor
sbb
xchg
mov
push
stos
jne
pop
test
dec
insb
mov
jl
jge
mov
icebp
add
jnp
out
lahf
add
mov
mov
push
lcall
and
fiadds
mov
and
cmc
scas
inc
sub
add
xor
mov
mov
std
jl
sub
adc
xchg
cli
stos
or
xor
ret
cmpsl
inc
mov
cmp
lods
mov
pop
ret
jp
dec
push
pop
cmp
rorb
mov
jge
inc
stc
fxch
sahf
lret
jae
jg
xchg
lret
fucomp
push
dec
rorl
mov
dec
jecxz
test
cwtl
mov
pop
xchg
sub
roll
outsl
xor
mov
test
add
add
or
and
jge
stc
mov
inc
fwait
lret
xchg
inc
add
rol
pop
sub
mov
dec
add
gs
insl
or
jge
test
adc
adc
pop
stos
enter
sbb
test
clc
cmp
mov
repz
mov
push
aam
loopne
and
je
cmp
pop
push
mov
add
mov
mov
push
fwait
lods
je
mov
loopne
add
ss
loope
add
out
mov
xor
hlt
sbb
rolb
orb
mov
jecxz
aam
out
jge
and
jnp
addr16
jge
shrl
ljmp
mov
pop
lret
cmp
and
movb
orl
test
and
and
aas
subl
stos
xchg
rclb
cli
add
pushf
jns
pop
inc
push
mov
push
inc
mov
push
fisttps
push
xchg
xchg
push
xor
mov
movsb
stc
std
push
dec
ja
mov
cmp
jp
loop
fsubrs
push
inc
cltd
mov
xchg
cmpsl
sbb
cmp
mov
stos
cmp
dec
xorl
jne
pop
test
jecxz
mov
jp
outsb
aad
add
mov
jno
gs
in
sub
call
add
sbb
in
push
rcrl
test
cltd
mov
mov
scas
mov
cs
mov
scas
stos
and
fildll
push
mov
dec
jl
test
test
jb
iret
sahf
sbbl
dec
pop
push
loop
iret
push
inc
adc
jbe
lods
es
add
xchg
repnz
pop
adc
scas
xchg
mov
lods
pop
xchg
jbe
scas
jmp
lahf
fisubs
cmp
js
jle
lahf
adc
je
sarb
push
inc
mov
adc
in
iret
imul
push
imul
xchg
je
lcall
movsl
sbb
pop
sbb
pushf
mov
sub
enter
mov
int3
add
push
mov
and
loopne
hlt
cwtl
mov
int
mov
mov
push
lods
and
ss
cmp
push
push
or
fdivrs
xor
push
rolb
cmp
movb
cli
add
pslld
xlat
shrl
stos
inc
out
ret
dec
js
sbb
dec
mov
mov
outsb
rcrl
arpl
mov
enter
in
add
popf
dec
mov
dec
xchg
cwtl
mov
ret
xchg
cmp
mov
mov
aad
mov
inc
lock
stc
sub
add
mov
or
pop
or
int
bound
scas
add
lods
mov
jae
movsl
cmp
pop
jge
pop
jmp
popa
jns
insl
ds
add
and
cmpsl
push
aas
pop
xchg
enter
xor
and
mov
mov
adc
aam
cmpb
ds
stos
les
loopne
xor
dec
mov
and
and
mov
lods
mov
or
jae
ret
jnp
mov
mov
int3
fmul
lcall
dec
loop
rcrl
dec
jle
repz
fnstenv
sbb
lahf
cmp
vsqrtps
dec
mov
ljmp
stc
test
call
stos
stos
cmpl
fbld
inc
lcall
pop
imul
push
or
stos
lock
or
jmp
loop
and
xlat
mov
inc
jb
dec
add
adc
jecxz
or
les
or
les
xchg
notl
sahf
fbstp
dec
push
jecxz
mov
dec
repz
gs
jnp
movsb
lret
mov
jae
xchg
sub
adc
mov
and
movsl
test
fcomps
inc
sbb
sub
or
inc
scas
inc
stos
shr
xor
jns
test
sbb
jl
jnp
jmp
jae
sbbb
xor
or
push
lret
movb
mov
cmc
and
mov
jae
sbb
ret
outsl
xlat
stos
mov
pop
mov
dec
int3
push
pop
stos
push
loope
ss
scas
pop
ljmp
into
ret
shl
aam
fmuls
sub
test
inc
push
stos
std
cld
pop
mov
fnsave
les
pop
test
lods
push
mov
inc
dec
pushl
or
ja
in
cmova
mov
push
sarb
add
ljmp
mov
shll
mov
leave
jp
push
pop
add
mov
mov
lret
jae
popf
inc
jmp
adc
pop
sub
push
adc
ret
shrl
and
adc
mov
shr
repz
lahf
mov
out
mov
lds
ds
mov
add
arpl
jl
mov
or
stos
ret
jl
adc
cmp
rorb
jae
shl
add
mov
sub
pop
dec
push
test
jmp
jnp
mov
cmp
pop
mov
mov
push
xorb
pop
mov
xchg
cld
or
xor
sub
dec
lahf
fptan
js
enter
enter
add
dec
mov
clc
clc
popl
mov
or
sub
aaa
jmp
adc
mov
out
std
pop
jae
lcall
dec
test
and
mov
mov
shlb
xor
in
ljmp
cli
or
mov
and
out
xor
lret
add
sti
mov
aam
xchg
pop
daa
jae
sbbl
add
add
xorb
shrl
mov
fmul
push
jb
pushf
dec
and
sub
mov
fnstsw
sub
mov
cmp
pop
mov
negl
insl
push
fldln2
sahf
shl
sbb
repnz
pop
jo
jp
lds
mov
sub
fadds
fistl
dec
or
jecxz
movsb
lret
xchg
faddl
push
inc
push
lods
lret
cmp
xchg
mov
push
push
pop
push
sahf
adc
mov
dec
cmc
int
dec
rcrb
popf
jmp
adc
dec
and
add
xchg
and
sbb
inc
out
lea
jle
out
lret
popf
and
leave
sbb
jae
dec
inc
push
jp
mov
inc
sbb
inc
sub
fwait
push
inc
int
sub
pop
inc
iret
adc
xor
addr16
dec
clc
bound
ret
test
test
jecxz
pop
push
sbbb
test
adc
imul
and
mov
sbb
cmpsl
rol
fucomip
repz
sub
mov
inc
mov
movl
popf
les
popf
sub
inc
sbb
dec
hlt
xchg
push
adc
jne
lds
jnp
les
fdivl
sbb
push
movb
pusha
inc
lahf
scas
jg
out
xor
in
enter
pop
mov
sbbl
rcll
bound
mov
mov
sbbl
jmp
gs
sbb
movsb
pop
shrl
jne
popf
jl
repz
enter
mov
cmp
into
xchg
jecxz
adc
add
mov
aad
lret
in
mov
xor
fsts
rcll
call
test
les
ret
repz
ds
and
mov
and
addb
sbb
add
xor
ret
inc
mov
mov
push
sub
ss
test
test
bound
mov
repnz
rep
dec
sub
arpl
and
xchg
dec
push
aam
sub
insl
mov
fisubrl
mov
fs
lcall
pop
mov
dec
xor
mov
cmpl
or
jo
sbb
adc
adc
sbb
cwtl
clc
dec
je
iret
les
sbb
jp
mov
jmp
add
imul
xchg
sbb
fistps
add
dec
popf
jl
ret
ret
stc
cwtl
int3
pop
out
inc
shlb
pop
in
xor
int
inc
aas
cwtl
sub
stos
mov
jne
mov
xor
icebp
pop
subb
sbbl
iret
inc
mov
in
std
mov
mov
or
sbb
imul
xor
outsl
stos
andb
mov
loop
movsl
xchg
lock
movsl
clc
arpl
jp
push
mov
shlb
inc
xchg
enter
jnp
push
adc
or
jne
mov
dec
mov
rclb
jecxz
jns
mov
mov
jg
out
ja
lods
cs
fxam
lahf
and
test
adc
inc
adc
fdiv
lret
in
adc
das
and
xor
and
dec
and
bound
pop
out
dec
push
js
rep
ret
inc
pop
jecxz
inc
mov
fdivrl
mov
enter
push
inc
icebp
pop
daa
and
inc
mov
xor
jl
or
popf
push
dec
lea
adc
sbbl
cmpsl
pop
popa
shrl
mov
sub
pop
inc
incl
stos
lock
rcrb
mov
push
fadd
cmp
push
cs
add
mov
xlat
jle
add
sbb
xchg
push
outsl
fwait
dec
ds
sub
idiv
dec
lret
in
jae
out
imul
mov
icebp
insl
les
sbb
mov
pushf
lret
or
sbb
or
dec
movsl
sbbl
push
sbb
aas
jnp
jmp
dec
sub
ss
inc
jo
into
inc
dec
in
dec
std
popa
pop
rolb
out
xchg
fxch
test
push
sbb
add
inc
test
xor
ror
push
xlat
pop
pop
and
fwait
ret
loope
icebp
fcomi
push
push
inc
pop
pop
lcall
clc
popf
jbe
dec
adc
push
adc
insb
sbb
jge
mov
sub
dec
mov
out
mov
sub
lret
add
into
sbb
jb
mov
mov
pop
add
jns
enter
cmc
scas
movsl
push
frstor
imul
inc
fcoml
mov
idivb
sbb
add
dec
push
cli
test
test
mov
xor
in
fsubs
cwtl
adc
adc
test
cmpsl
sbb
cs
jge
addr16
push
lret
inc
cmp
inc
cli
lods
pop
xor
adc
mov
jg
dec
fcmovnbe
sti
mov
mov
cld
movb
mov
add
lea
dec
pop
ret
jb
mov
ja
movsl
xchg
out
aad
inc
scas
test
inc
aam
fimuls
cmpsl
ret
test
mov
rorb
jecxz
jae
xor
movntq
out
lock
call
shll
movsb
sbb
lea
cwtl
and
je
adc
into
test
jb
int
cmp
outsl
mov
mov
pop
pop
push
jno
xorl
out
test
mov
mov
add
xor
leave
fcompl
dec
movsl
mov
out
sti
xor
jmp
cmp
loope
in
dec
lret
xchg
ljmp
into
into
mov
mov
test
mov
xor
add
or
xchg
mov
aam
inc
jo
ss
mov
push
data16
sub
push
xchg
insb
ss
inc
sub
enter
fsubrp
sbb
add
jns,pn
dec
mov
popa
cwtl
dec
xchg
cmpsb
jno
out
xchg
or
pop
sahf
outsl
les
jbe
xchg
test
mov
rcll
add
pop
test
jp
and
sbb
sbb
fidivs
jmp
mov
mov
dec
scas
shr
lret
sbb
pop
add
loop
push
popf
fnsetpm(287
mov
fbstp
jns
inc
sbb
or
fadds
ss
out
cli
rcrb
cmpsl
mov
testb
xlat
inc
jge
push
das
xor
ror
sbb
add
mov
jns
xchg
das
inc
ss
popf
in
in
add
test
pop
sar
cmp
jo
enter
jnp
pop
stos
xchg
fistl
jge
iret
push
dec
enter
out
jecxz
mov
cmp
jae
sbb
cmpsb
xor
pushf
mov
icebp
inc
mov
pop
sbb
rcrl
dec
or
or
inc
xchg
popf
dec
test
shll
mov
xor
std
mov
cmp
adc
pop
fucomp
test
fwait
mov
mov
and
push
or
roll
or
xchg
pop
daa
mov
push
ljmp
call
arpl
jmp
lret
sbb
into
rorb
call
adc
pop
and
pop
sbb
mov
inc
iret
ret
loopne
shll
push
lods
cmp
pop
cmpsb
mov
inc
jns
inc
sbb
or
mov
fwait
scas
imul
jbe
fnstsw
pop
enter
ret
stos
push
and
xchg
mov
dec
scas
xlat
xchg
stos
jp
pop
cli
test
out
lret
mov
pop
sub
and
xchg
xchg
xchg
xchg
mov
adc
fsubs
jb
inc
stc
int3
inc
sbb
cmpsb
mov
mov
lret
sbb
jecxz
add
ss
or
shlb
pop
ret
xchg
insb
jno
jns
push
cmp
mov
cli
pop
movl
adc
jl
add
movsl
enter
mov
or
jle
and
lret
sbb
imul
ret
fildll
dec
cmp
xchg
shl
xchg
inc
pop
add
jae
mov
dec
fldl
jnp
ret
rolb
xchg
sbb
dec
movb
mov
pop
inc
fdivl
lds
jo
stos
mov
out
outsb
addl
in
movsl
int
inc
rorl
repnz
pop
int3
in
mov
jno
int
repz
fisttpll
pushf
fcoms
stos
lds
xchg
push
xchg
pop
addr16
dec
and
imul
add
orb
jmp
leave
in
lahf
push
jp
cmc
lea
sub
or
arpl
mov
inc
cli
jb
mov
pop
rcl
cltd
jl
in
fwait
repz
cwtl
inc
and
sti
inc
fwait
enter
shlb
div
and
jl
xor
push
adc
adc
jmp
movsb
mov
int3
movsl
inc
lods
jbe
mov
cs
adc
mov
divb
cld
dec
pop
movsl
dec
sbb
adc
aaa
adc
push
pcmpgtw
add
shrl
mov
fsubl
pop
xlat
sarb
ret
mov
cmp
ret
daa
mov
mov
popf
lret
sbb
nop
dec
mov
sbb
lret
mov
in
outsb
add
lcall
call
roll
mov
out
in
fwait
roll
or
cld
push
push
jns
js
mov
test
jb
adc
or
adc
outsb
or
or
sarl
xor
enter
lods
cli
mov
push
sub
cmp
fstpl
jnp
leave
bound
and
test
mov
out
push
adc
dec
mov
stc
imul
jmp
pop
mov
sub
mov
out
pop
adc
lahf
imul
iret
inc
mov
or
movl
mov
sbb
mov
jbe
dec
adc
mov
ja
add
or
int
lds
shll
jns
rcrl
lcall
mov
dec
nop
test
inc
sbb
stos
jge
dec
mov
test
dec
ret
jnp
pop
xchg
ja
mov
add
pusha
scas
movl
jecxz
andb
lock
push
test
ja
rcrb
je
jbe
inc
fchs
xchg
sbb
cld
aam
ret
and
gs
pop
test
stos
lods
mov
lahf
xchg
mov
es
mov
xor
mov
cwtl
mov
loop
hlt
pusha
inc
inc
inc
or
fildl
jle
pop
adc
mov
pop
mov
push
das
sarb
dec
out
mov
hlt
add
jle
mov
xor
sbb
aas
fiaddl
loop
rcrl
xchg
int3
inc
mov
shrl
xor
leave
xor
push
ficoms
shlb
fildll
jae
fistl
aaa
mov
cwtl
dec
pop
insb
fcoms
subl
jo
xchg
or
dec
movsl
adc
xchg
stos
pop
test
cmp
push
scas
xchg
and
scas
je
test
mov
jo
xor
pop
stc
or
addb
jmp
test
xor
add
arpl
outsl
addl
cmp
dec
outsl
dec
addl
in
fdivs
mov
jl
or
lods
fcmovne
fimuls
shrb
mov
adc
pop
jp
hlt
mov
push
cmova
aam
inc
bound
mov
test
cmp
xor
jbe
lahf
jl
movsb
cld
rolb
cmp
sbb
jno
mov
in
mov
mov
pop
lcall
push
shrl
mov
stos
mov
mov
cmpsl
mov
arpl
pop
subb
fiadds
sbbb
test
aad
xchg
leave
mov
fisttpll
lods
push
sbb
fs
fdiv
clc
mov
cld
loop
test
mov
mov
xor
mov
push
mov
mov
sbb
sub
add
xchg
cmp
movsl
pop
js
repz
lahf
cltd
pop
and
aaa
shrl
ja
mov
mov
xor
lea
lret
adcl
mov
repz
inc
jecxz
jp
movsb
inc
fistl
int
iret
push
fcmovnu
cmp
mov
mov
inc
pop
enter
or
outsb
xor
lret
pop
xor
test
test
imul
lret
pop
ljmp
popf
in
xchg
inc
jecxz
inc
ret
jns
xorb
test
mov
xchg
int
ret
lcall
stos
aad
push
cmpsl
and
pop
mov
mov
cltd
mov
mov
sbb
movsb
inc
add
leave
mov
push
icebp
std
inc
pusha
sarb
cwtl
sahf
hlt
xchg
sbb
adcb
rorl
fwait
sti
inc
popf
fiadds
enter
mov
push
sti
inc
lods
ret
inc
mov
iret
pop
cmp
loope
in
mov
jle
jge
xchg
pop
cmpsl
and
sub
rol
sub
shlb
aam
mov
pop
addr16
or
push
dec
lret
fstl
ja
ja
mov
fmuls
jae
mov
movl
nop
pop
movsb
add
add
stos
cmp
push
mov
ret
gs
jmp
xor
test
add
jns
cld
rorb
roll
mov
lret
pop
lret
ds
sbb
push
push
cld
pushf
push
push
push
sub
xor
push
inc
lcall
sbb
jle
and
test
inc
jmp
lret
ret
fists
inc
add
cltd
dec
fsubs
xor
dec
and
sahf
les
lcall
sub
inc
out
xor
pop
mov
fcomp
sbb
lret
pop
add
adc
sti
xor
loope
out
adc
xor
mov
push
mov
adc
mov
inc
out
mov
mov
fmull
push
cmpsb
rolb
lret
mov
cmp
pop
inc
shl
fisubs
out
and
mov
push
in
jle
pop
xchg
aam
adc
stos
sti
pop
push
insl
cmpsl
sbb
xor
inc
jp
int
cmp
mov
test
cld
lret
and
lahf
je
push
jno
js
or
cld
in
or
scas
cmpsl
divl
and
enter
jns
out
pop
mov
aam
shrb
movsl
loop
inc
dec
les
adc
mov
loop
and
vfrczpd
lcall
xchg
sbb
dec
and
pop
test
cli
push
scas
enter
mov
fld1
add
lea
ret
xchg
faddl
xchg
cmp
insb
push
lock
push
nop
mov
insb
sbb
and
xchg
sahf
inc
push
aad
je
xchg
cs
jo
adc
xchg
mov
jl
xchg
iret
xchg
in
inc
push
fwait
pop
inc
rcll
call
dec
or
push
or
bound
lahf
sbb
push
pop
push
add
stos
add
add
dec
pop
adc
push
sbb
insb
push
cmp
xor
lcall
outsl
lret
dec
js
cmp
imul
fcmovne
pop
sbb
in
pop
pop
cmp
sbb
dec
out
cs
xchg
leave
mov
aas
inc
stos
shrb
testb
inc
sub
cmp
push
fs
or
inc
sub
pop
and
push
aaa
inc
test
adc
inc
ficomps
xor
push
hlt
je
sbb
inc
sub
call
pop
cmpsl
aam
xchg
bound
test
outsb
or
push
inc
mov
push
pop
es
movsl
jbe,pn
pop
movsl
aad
aad
jb
pop
and
jle
pop
movsb
push
xlat
cmc
push
jp
into
icebp
pop
push
jae
cmpsl
mov
ja
pop
aad
test
not
es
dec
dec
pushf
cmpsb
shl
popa
mov
data16
dec
in
hlt
sub
mov
lds
js
popa
push
daa
push
or
repz
idivb
inc
jae
ja
popa
lret
shlb
sub
test
mov
mov
shrb
push
jb
push
dec
lds
mov
scas
inc
dec
push
icebp
inc
inc
repz
sbb
das
loopne
or
inc
fsubr
dec
test
xor
adc
mov
and
jb
fwait
sbb
push
lds
mov
sbb
enter
addl
aam
mov
push
pop
inc
lods
push
stos
mov
dec
add
pop
in
xchg
lods
enter
arpl
mov
push
icebp
push
pop
mov
mov
ret
xchg
and
imul
cmpsb
mov
add
add
inc
mov
mov
iret
cmpsl
pop
inc
pop
adc
addr16
rcrb
lahf
or
inc
cmp
fidivrl
dec
pop
cli
test
push
cmc
mov
mov
jbe
cmp
jno
inc
push
sti
mov
es
test
sahf
dec
stos
inc
scas
cmc
add
dec
les
jl
fistpl
fadd
push
inc
cmp
mov
jl
js
into
mov
test
mov
inc
and
adc
mov
and
dec
mov
sub
mov
stos
mov
test
lods
ficompl
jne
pop
or
adc
push
pop
mov
jb
xchg
dec
pop
sub
out
jge
cmp
xor
int3
and
xlat
popa
push
sbbl
out
out
and
into
out
aad
imul
pop
xor
or
lods
jo
mov
add
lock
cld
add
test
leave
fsubl
lret
imul
jp
in
dec
sbb
add
and
lds
push
insb
inc
movsb
xchg
aas
mov
push
in
mov
shlb
mov
xor
lret
adc
in
adc
sub
rcll
cmp
in
or
mov
cmp
in
cmp
jp
loop
inc
sarb
xor
andl
sarl
out
pop
and
jge
or
or
sub
adc
ret
and
gs
in
lahf
fcomi
cmp
je
clc
lea
rolb
xchg
lcall
pushf
mov
lods
fsubl
cmpsb
cmp
popf
lret
arpl
outsb
pop
cmp
adc
dec
arpl
mov
inc
or
filds
jnp
dec
pushf
fwait
and
pop
push
clc
lods
leave
ja
int3
aad
inc
pop
push
mov
xlat
mulb
imul
pop
xchg
test
pop
and
mov
pop
inc
mov
xor
icebp
or
xor
rorl
pop
push
in
xor
and
lret
pop
scas
lds
add
sbb
rolb
xchg
fwait
out
addb
daa
inc
mov
and
sbb
pop
mov
cltd
sbb
pusha
and
into
aad
or
dec
insb
sub
lods
jo
or
lahf
adc
and
jg
sbb
mov
idivb
sub
and
fsubrs
repnz
test
imul
gs
push
xchg
out
gs
std
jno
adcl
das
or
repnz
adc
dec
sbb
leave
fsubl
ljmp
sbb
push
mov
test
push
lock
shlb
int
add
lret
pop
mov
popf
lret
and
sbb
pop
sub
sbb
xchg
enter
lds
pop
shll
incl
mov
sub
scas
jg
mov
scas
inc
fistpll
rolb
mov
cmpsl
xchg
and
or
sbb
gs
push
adcb
call
clc
fsubs
mov
and
dec
test
montmul
cmpsb
inc
stos
xchg
int3
pop
mov
push
mov
xor
dec
stos
cwtl
jns
fimuls
and
aam
mov
mov
mov
mov
fisubrl
mov
frstor
mov
push
ret
jmp
cld
leave
xchg
pop
mov
lret
jno
and
jle
sbb
mov
mov
xchg
jne
mov
mov
data16
sub
cmp
mov
adc
in
call
mov
mov
jo
jle
repz
dec
lods
inc
sbb
sub
cltd
pusha
jnp
cmpsl
rcr
mov
scas
mov
mov
out
repz
mov
or
fildll
loope
sbb
adc
add
xchg
xchg
pop
mov
pop
dec
cmpsl
xor
test
jp
aad
pop
adc
ret
or
mov
mov
pop
or
mov
xchg
xor
dec
inc
ljmp
cmp
mov
adc
cmp
jecxz
mov
add
sbb
popf
dec
jecxz
and
loopne
loop
jno
jb
inc
movsl
aas
mov
xchg
inc
lea
cmc
mov
std
add
enter
insb
push
out
inc
insl
je
fs
in
mov
and
lods
in
fcom
inc
mov
fistpll
mov
cmpsb
cmpsl
xchg
mov
hlt
test
test
sbb
push
mov
addr16
inc
lcall
cmpsl
pop
test
push
push
sbb
mov
adc
leave
loop
add
in
or
adc
insb
dec
repz
push
or
int
push
pop
stc
fisubrl
sbb
movsl
addr16
mov
and
mov
add
addb
fs
cltd
out
and
mov
je
fnstcw
or
faddl
jne
test
xchg
outsb
mov
sbb
adc
add
pop
arpl
adc
std
test
outsl
jmp
jae
sbb
jae
loopne
inc
mov
mov
cmpsl
adcb
inc
sbb
xor
pop
test
nop
xlat
mov
pop
mov
lods
vminss
mov
cmp
sub
add
xchg
xchg
mov
repz
sbb
and
dec
push
mov
dec
push
xchg
or
mov
pop
test
popf
xchg
pushf
jo
outsl
fs
addr16
in
push
fs
fistl
enter
rolb
or
bound
sub
cmp
and
dec
daa
adcb
inc
les
aam
mov
cltd
es
cltd
and
inc
jbe
pop
pop
fsubrp
xor
adc
dec
pop
nop
bound
and
es
mov
jo
xor
cmpsb
imul
movsl
xchg
jne
jne
pushf
movsb
sub
lods
add
aam
arpl
movsl
push
call
outsl
jmp
jae
mov
jecxz
andl
leave
inc
mov
xchg
iret
cmpsl
mov
and
movsl
mov
sahf
sbb
ret
imull
movsb
aam
loopne
mov
sub
inc
push
imul
arpl
push
fstpt
xlat
mov
xchg
adc
mov
pop
sahf
push
xlat
mov
sbb
and
add
push
outsl
sbb
sub
pop
pushf
sub
mov
divl
xchg
repnz
dec
sti
icebp
xlat
rorb
jo
or
shll
and
sbb
jns
dec
xor
je
pop
mov
push
cltd
daa
movsb
adc
and
xchg
mov
lret
inc
and
cmpsb
dec
cmp
add
stos
adc
out
enter
stos
fldenv
xchg
das
sub
in
adc
push
sub
adc
inc
addr16
pushf
mov
test
lea
lock
movsl
imul
and
sbb
ljmp
daa
loop
inc
mov
andl
sbb
add
dec
cmp
adc
sbb
int
xor
xchg
mov
lock
pop
xor
test
ret
arpl
mov
adc
inc
in
stos
lret
add
jle
fdivl
sbb
or
inc
mov
popa
pop
fimuls
push
mov
push
mov
push
mov
push
mov
js
in
push
cmp
jo
popa
mov
call
subb
in
jns
cmp
inc
cmc
sbb
dec
pop
adc
adc
lods
mov
pop
test
js
stos
daa
push
out
push
mov
mov
cmp
cmpsl
lret
jns
jne
mov
sub
dec
dec
and
cwtl
push
jecxz
xchg
sub
into
jmp
jbe
sbb
pop
push
lds
or
sti
scas
lds
mov
repz
bound
repnz
cld
lock
mov
adc
test
cmpsl
jl
movsb
mov
or
daa
mov
rclb
jb
mov
and
fcom
inc
mov
cmp
dec
mov
cmpsb
cmpsl
xchg
fadd
sbb
stos
pop
data16
and
movsl
jne
les
out
cwtl
popa
ja
mov
lods
push
cltd
lods
clc
ret
adc
hlt
testl
push
lcall
loop
addr16
nop
dec
mov
dec
fbstp
jo
or
pop
and
scas
fucomp
push
fisubs
xor
mov
jg
pop
sahf
pushl
stos
mov
jae
add
jnp
lods
lods
pop
sub
lahf
fs
insb
push
or
cmpsb
mov
xchg
cs
test
in
call
sbb
ljmp
mov
fstpl
outsl
dec
addr16
lret
mov
repnz
sub
ror
xchg
adc
xchg
and
adc
push
aaa
jb
cli
inc
xor
sub
dec
inc
lret
push
sub
jmp
ret
jae
and
xor
ja
add
sub
or
inc
pop
inc
jmp
movsl
dec
cwtl
popa
mulb
rorb
roll
fwait
int
adc
push
fwait
mov
xchg
fxch
iret
push
stos
jo
dec
lcall
add
inc
shll
pop
dec
fsubs
sbb
test
fwait
mov
imul
imul
lahf
mov
push
pop
repnz
lahf
and
sbb
ja
cmp
mov
inc
stos
sahf
jp
push
hlt
add
aaa
mov
popa
in
and
push
dec
mov
mov
mov
stos
xchg
jg
pop
test
sbb
aas
int
pop
adc
je
mov
push
sbb
ljmp
insl
popf
shll
push
ret
mov
and
mov
xchg
dec
dec
cltd
fs
cmp
push
sbb
adcl
stos
xchg
inc
jae
sub
mov
dec
popf
in
movsb
loop
mov
push
sub
add
xchg
mov
out
xchg
mov
push
mov
movsl
xchg
jmp
jno
jno
fldcw
mov
fidivrs
addr16
jp
push
lock
mov
sbb
mov
add
xchg
xchg
adcl
inc
js
fbstp
inc
xor
mov
mov
mov
push
subb
movsb
test
jno
fwait
push
test
out
sub
sub
popf
ja
push
popa
lock
inc
and
fdiv
test
cs
mov
inc
lcall
mov
fcmovnbe
test
pop
mov
mov
scas
mov
in
dec
int3
mov
jo
adc
and
js
mov
out
dec
push
and
movsl
mov
aaa
mov
imull
xchg
sbb
sbb
bound
lods
mov
sub
repz
lock
ss
push
sbbb
lods
nop
push
roll
idiv
fsubrs
or
sahf
icebp
shrb
lea
out
fildll
pusha
mov
call
decl
xchg
loop
inc
lahf
and
sti
add
arpl
ljmp
inc
dec
jl
or
movsb
jmp
push
ret
push
jge
and
push
ss
pop
outsl
xchg
lret
fwait
xlat
xchg
push
and
nop
in
mov
cmp
aas
push
jne
sbb
lods
fisubrs
enter
call
in
pop
mov
stos
fucomi
repz
data16
movsl
push
call
xchg
test
iret
dec
aas
loope
dec
int3
mov
in
enter
enter
xchg
iret
cmpsl
ret
inc
mov
mov
seto
push
mov
loopne
imul
ficoml
pop
mov
roll
cmpsl
xchg
gs
insl
mov
clc
call
inc
add
xchg
enter
lds
xchg
stos
mov
outsl
mov
mov
cmpsb
mov
jne
ds
sbb
add
out
jl
mov
adc
test
and
andl
retw
cmp
stos
bound
adc
mov
loope
lea
icebp
cmp
jb
add
lcall
mov
cmpsl
sahf
jp
push
add
aas
jne
dec
pop
push
shll
mov
bswap
push
push
cld
movsl
mov
test
sub
and
neg
jmp
mov
in
sub
add
in
dec
mov
and
and
movsl
mov
inc
inc
mov
mov
test
mov
jg
mov
fucomp
arpl
shr
cmp
adc
sub
cwtl
sub
test
mov
in
les
push
ret
xor
lods
incb
popa
call
jnp
and
lcall
jmp
lock
xor
mov
adc
dec
je
addr16
xchg
std
gs
add
inc
sbb
sbb
adc
adc
ffreep
mov
pop
xchg
add
dec
pop
mov
mov
mov
nop
je
aaa
jg
jae
mov
xchg
movsb
xor
mov
mov
xchg
mov
sub
adc
inc
inc
pop
adc
insl
fstps
popa
pushf
pop
sti
xor
adc
pop
adc
push
pushf
xor
mov
int3
into
push
clc
mov
scas
push
fcom
dec
mov
pop
mov
test
aad
mov
sarl
dec
popf
idivb
cmpsl
xchg
test
dec
cltd
cltd
push
jl
pop
addb
mov
fsubrl
lret
inc
lcall
inc
sti
test
pusha
jle
xchg
pusha
lahf
push
pop
or
fisubs
addr16
sbb
dec
pop
and
popa
stos
add
or
rcll
stc
fimuls
adc
fildll
mov
ret
cmc
mov
cs
mov
in
mov
hlt
subl
jecxz
aaa
xchg
jb
int3
mov
cmc
pop
cmp
cmc
sbb
cmp
cs
repnz
or
or
jne
call
out
and
cmp
jnp
mov
in
inc
mov
add
jo
pop
add
nop
inc
repz
lret
movsl
scas
and
fsubrl
mov
push
enter
filds
jmp
fildll
gs
cmp
xchg
les
fwait
ret
lea
inc
jbe
leave
or
lcall
cli
outsb
fistpl
add
push
mov
ret
pop
movsb
xchg
jmp
dec
sub
data16
fdivl
xchg
add
stos
add
or
outsl
push
xchg
in
inc
cwtl
hlt
mov
data16
xchg
mov
mov
data16
mov
fchs
shlb
ret
pop
mov
in
mov
je
jp
enter
dec
inc
or
jge
imul
hlt
pop
das
or
mov
call
sub
push
push
in
ds
cmp
jae
mov
das
jns
pop
shl
add
fsubrl
jo
lock
inc
fwait
xlat
stos
mov
push
adc
pop
push
fwait
mov
je
push
xor
dec
popf
lret
xorl
mov
test
adc
or
adc
rcr
ja
fildl
fstpl
push
js
cwtl
jnp
pop
inc
shlb
jp
scas
mov
mov
jecxz
enter
dec
mov
arpl
push
popl
or
dec
mov
fstl
out
pusha
rdtsc
cmc
push
cmp
ficompl
push
xchg
enter
cmp
dec
jecxz
sub
enter
aam
stc
scas
shr
adc
cmpb
mov
mov
popa
mov
lea
out
int3
add
test
fcomps
dec
movsl
inc
cmp
and
pop
ret
add
pop
testl
mov
jo
add
and
mov
push
jmp
sahf
pop
add
dec
repnz
movb
ljmp
int
mov
inc
jmp
arpl
and
pushf
push
push
sub
mov
fistl
mov
inc
pushf
add
rorl
xchg
dec
data16
fwait
cs
popa
mov
jmp
ds
leave
loop
loop
xor
pop
sub
addl
inc
sbb
icebp
or
js
mov
dec
les
jbe
imul
iret
or
inc
inc
test
xchg
lea
jns
in
fisubrs
and
xchg
cmp
add
fsubp
mov
js
int
ljmp
push
push
and
mov
stos
ds
lods
stc
pop
movsb
push
orl
jge
jo
aas
pop
sub
lahf
lret
hlt
jae
popa
mov
sub
clc
sbb
adc
push
scas
mov
or
cmp
popf
stos
mov
filds
mov
cltd
imul
mov
add
aam
xor
cmp
pop
pop
fwait
shll
add
movsb
xchg
stos
insl
inc
mov
mov
push
sahf
fdiv
sti
xchg
jge
daa
sbb
fisttps
jmp
cwtl
inc
lret
mov
adc
imul
subl
jge
jns
cmp
daa
rolb
push
xchg
mov
fiadds
inc
xchg
cwtl
mov
stos
mov
fld
cmc
shl
lock
mov
xchg
xchg
les
mov
data16
mov
leave
inc
xor
movsb
pushf
stc
mov
mov
fstpt
into
pop
into
push
pop
leave
mov
rcr
ret
loopne
dec
adc
mov
fstp
hlt
mov
push
sbb
xchg
ds
sbb
leave
xor
into
cmp
and
int
shlb
xchg
and
inc
in
dec
jge
push
mov
xchg
fcmovnb
out
mov
stos
repz
sbb
lret
jno
inc
push
sbb
ret
test
push
or
and
or
jo
add
fs
or
in
or
shll
push
in
or
cld
push
ja
js
sbb
pop
std
push
inc
sub
mov
and
mov
sbb
xchg
push
fiadds
movsl
mov
scas
in
loope
push
add
aas
push
std
xchg
inc
inc
push
adc
sub
mov
sbb
out
mov
loopne
and
push
dec
mov
test
cmp
in
fistl
and
mov
sub
out
aas
xlat
cmc
sub
inc
mov
leave
stc
xor
in
dec
pop
push
shrb
mov
xor
dec
sbb
sarb
in
dec
sbb
test
push
and
nop
lahf
mov
popa
in
outsl
add
xchg
or
sub
sub
jo
test
lock
mov
js
cmp
into
xor
and
mov
pop
pushf
fisubrl
int3
mov
mov
in
lret
jg
out
les
adc
push
sub
cmp
adc
outsb
pusha
cwtl
repnz
dec
or
shrb
push
sti
and
jge
fwait
cmp
xchg
aas
loope
sarb
shlb
push
insl
jecxz
jno
outsb
out
push
dec
jns
lcall
mov
cltd
cmp
leave
cwtl
jle
or
jmp
pop
cmpsb
inc
and
push
dec
mov
fmull
int3
sbb
cmpsb
int
jp
loopne
jne
shll
daa
push
mov
pop
outsl
jns
loop
sbb
ret
mov
rcrl
xchg
aam
movsb
jo
cwtl
lret
movsl
xlat
push
inc
pop
mov
mov
scas
push
test
cli
scas
ficoms
mov
push
jbe
fs
mov
out
pop
testl
aaa
xor
or
or
arpl
ljmp
dec
adc
xlat
icebp
inc
bound
sub
adc
lret
jno
mov
lds
push
mov
or
dec
iret
subl
sbb
mov
dec
cmc
pop
fs
mov
and
or
bound
push
push
jge
mov
push
mov
shll
inc
add
ret
push
add
les
push
adc
cmpb
pop
xchg
xor
pop
mov
loopne
les
mov
outsb
scas
mov
pop
lahf
pop
out
jae
dec
decb
jbe
les
add
xchg
mov
inc
je
shll
xlat
push
hlt
sub
sbb
mov
dec
mov
jle
sbb
out
bound
xchg
xlat
jb
cmp
xor
jecxz
push
fwait
in
push
insb
dec
xchg
mov
mov
push
inc
sahf
jae
pop
js
scas
mov
lods
inc
sbb
fsubs
pop
jmp
scas
inc
cld
cli
mov
inc
les
scas
adc
and
mov
out
mov
xchg
and
and
adc
mov
dec
test
pop
inc
in
mov
cltd
out
repnz
loop
cmp
jb
inc
sarb
dec
fnstcw
mov
jmp
mov
adc
jne
les
jl
aam
lds
dec
xchg
fcmovne
fwait
jmp
cwtl
jle
mov
cmp
pop
mov
add
test
dec
sbb
negb
aad
pop
cmp
shlb
push
dec
adc
js
lahf
cmp
pop
mov
stc
dec
bound
jo
mov
pop
mov
xor
es
jge
or
std
ljmp
out
test
int3
inc
sbb
daa
jp
sahf
adc
xchg
scas
adc
int3
in
add
or
jmp
pusha
inc
xchg
fdivs
adc
adc
negb
cmp
pusha
inc
pushl
push
inc
adc
xchg
sub
adc
dec
popa
test
cs
jns
fs
mov
mov
inc
push
xchg
jae
mov
out
ror
test
mov
sub
adc
mov
mov
mov
fldlg2
cmp
and
jge
inc
mov
xor
mov
pop
adc
mov
imul
sbb
cwtl
ds
lds
stc
xchg
xlat
stos
sub
stos
push
pop
mov
insl
push
ljmp
mov
arpl
push
cmp
roll
cltd
adc
xchg
stos
lds
xchg
ficoml
jae
scas
cmc
int
jne
sub
xchg
pop
sarl
xchg
cld
xor
adc
js
cmp
cmp
or
scas
stc
add
dec
test
into
mov
xchg
sbb
or
and
lahf
testb
repnz
imul
movsl
adc
or
cld
adc
mov
hlt
mov
dec
dec
jmp
add
push
push
in
sahf
push
sub
ja
jbe
pop
dec
clc
rorb
divb
shrb
sbb
sub
jge
push
repz
insl
cmpsb
shlb
pop
mov
sbb
mov
ja
and
shlb
fidivrl
fucomip
xchg
sarl
sub
iret
jne
jns
sbb
jmp
test
sub
scas
dec
and
push
imul
push
aad
sbb
dec
in
stos
cmp
stos
std
lock
pop
xchg
sub
pop
jbe
lahf
jp
xor
test
sub
mov
arpl
rcrl
subl
jp,pt
dec
mov
xchg
pop
movsb
xchg
xor
adc
push
push
in
push
mov
insb
xor
mov
inc
mov
cmc
mov
push
sbbl
adc
pusha
in
cltd
sub
xchg
adc
setnp
das
loopne
sbb
dec
pop
shrb
movsl
cwtl
call
mov
mov
cmp
in
jp
mov
add
push
push
aad
adc
pop
out
mov
jmp
cmc
sbb
enter
fbstp
lds
mov
xlat
and
mov
insl
jmp
lahf
cli
sbb
add
sub
cld
jo
xchg
xchg
inc
sub
stos
iret
xor
sbb
gs
add
push
jno
and
ja
cmp
jg
inc
testb
aad
push
out
jo
shlb
push
inc
sarb
mov
nop
dec
and
pop
test
mov
mov
fnstenv
add
dec
xchg
push
xlat
add
or
les
scas
pushf
mov
icebp
fdivrs
dec
or
rcrl
cmp
ficomps
add
adc
mov
das
or
enter
inc
sbb
test
cld
fucomip
push
fsts
xor
sbb
mov
add
in
clc
jg
sub
mov
or
mulb
jecxz
or
pushf
fstps
sti
pop
sbb
mov
mov
lret
fstp
filds
movsb
mov
adc
lahf
cmpsl
xchg
add
clc
fiaddl
mov
push
into
xchg
stos
jge
jns
or
sub
pushf
cwtl
mov
mov
push
imulb
inc
test
mov
mov
or
lcall
pusha
loopne
jecxz
jecxz
repnz
lret
pop
mov
adc
xchg
lock
jp
mov
mov
popf
stos
rolb
movsb
inc
push
xchg
fdiv
fwait
cmpsl
fstpl
in
mov
cmpsb
adc
imul
pushf
mov
mov
or
dec
int
cmp
sbb
adc
or
cmp
add
fists
add
gs
test
imul
cltd
cmp
in
std
inc
pop
mull
pop
dec
pop
sti
xor
fsubr
cmc
or
movsl
ret
outsb
and
xor
add
daa
cmp
jmp
in
push
lahf
xchg
ja
xchg
add
scas
mov
loopne
jae
cmp
movl
dec
sub
inc
or
test
jge
inc
das
sti
shll
pop
scas
dec
push
mov
or
cmpsb
inc
aaa
mov
iret
or
adc
dec
jp
popf
xchg
jnp
cmp
mov
and
or
pop
mov
push
sub
les
mov
cltd
sbb
fwait
and
or
in
lods
ret
mov
test
mov
cmpsb
mov
mov
jno
inc
sbb
push
rcrb
add
fidivs
cmp
insb
rcrb
mov
loopne
mov
aas
sub
xlat
lods
mov
mov
mov
or
iret
push
jo
sahf
dec
add
in
mov
int3
adc
dec
cmpsb
xchg
xlat
xor
test
sti
jge
sbb
xchg
dec
stos
std
stos
sarl
xchg
lret
shll
inc
dec
xchg
rcrl
mov
push
push
adc
xor
push
fisttpl
fidivrl
movsb
push
aas
sub
fwait
mov
and
adc
cmp
dec
mov
pop
push
mov
xchg
push
lock
es
xor
or
mov
and
sub
imul
pop
mov
pop
mov
loope
cmp
mov
sbb
flds
sbb
or
adc
adc
jecxz
mov
hlt
js
into
sbb
gs
mov
push
incl
mov
xchg
test
inc
lock
lock
xor
repnz
mov
rorb
mov
mov
pop
mov
inc
cmp
cmp
pop
lret
pop
out
rcll
leave
scas
mov
adc
or
dec
popa
mov
repz
movsb
subl
stos
push
mov
mov
inc
movb
sub
inc
aaa
mov
jns
xor
nop
movsb
pop
scas
inc
xchg
shl
clc
mov
ljmp
test
pop
nop
sbb
mov
shrb
mov
lds
mov
sub
cmpsl
pop
out
mov
jo
fldcw
sub
mov
shll
aam
sahf
aas
rcrl
push
pop
add
push
arpl
enter
imul
mov
or
outsl
stos
shll
sbb
ret
imul
mov
jae
pop
data16
adcl
adc
pop
and
fldenv
imul
and
xor
scas
and
daa
mov
cld
pop
dec
pop
pop
hlt
dec
mov
push
dec
xor
das
xchg
je
bound
jp
jle
or
push
mov
sbb
mov
inc
popa
imul
test
push
mov
jge
and
xchg
push
nop
movsb
pop
scas
inc
mov
push
sti
ficomps
outsb
lea
adc
mov
push
pop
push
pop
inc
out
xor
xchg
xchg
sub
pusha
jo
xchg
cltd
div
cmp
lea
mov
fsubrl
cwtl
add
repnz
mov
push
mov
sahf
mov
mov
negl
mov
mov
or
add
rep
lds
fdivr
pop
jno
lahf
adc
jnp
mov
mov
push
xor
inc
fprem
test
iret
cmpsl
pop
or
mov
cs
sub
sbb
push
sub
test
stc
lock
sbb
test
dec
sbb
rol
inc
les
adc
shlb
fidivl
pop
xchg
fisubl
mov
adc
jno
leave
and
xlat
arpl
fimull
js
popf
pushl
dec
iret
xchg
mov
adc
subb
int
mov
mov
out
popf
test
push
jmp
int
jge
sub
mov
ret
pop
jne
dec
push
add
pop
bound
add
addl
sbbb
incb
imul
out
out
or
adc
pop
fldenv
pop
cmp
dec
add
cmp
jmp
mov
jecxz
lahf
fistpl
je
popa
lcall
pop
sbb
mov
mov
stos
testb
push
push
push
hlt
je
test
mov
pop
xor
repnz
xlat
push
cmpsl
fistpll
push
mov
test
xchg
ret
adcl
inc
fistl
mov
stos
aad
inc
push
stos
mov
ja
pusha
xor
lods
add
sub
bound
jmp
scas
leave
data16
jo
mov
mov
addl
add
dec
mov
jge
data16
xchg
loope
outsl
jp
cwtl
pop
fisubrs
or
inc
stos
mov
dec
das
gs
fcmovnb
jne
push
jno
inc
fidivrs
daa
loopne
sbb
movsl
dec
cmc
adc
lods
pop
add
jecxz
adc
imul
pop
mov
into
inc
dec
sbb
sti
mov
iret
sbb
xor
jle
mov
mov
iret
insl
sahf
add
mov
cli
lods
leave
fldt
arpl
lcall
inc
sbb
cmp
push
aaa
or
lds
pop
pushf
mov
xchg
dec
mov
and
mov
or
ljmp
push
out
ret
mov
mov
lret
lret
fisubrl
cld
push
or
int3
das
inc
fmul
out
xchg
or
ret
ret
mov
mov
shlb
xor
mov
pop
adc
push
mov
shll
ret
icebp
shl
xor
mov
mov
xor
push
je
or
repnz
dec
imul
adc
lret
std
int
cmp
pop
lods
or
rorl
sahf
cmp
cmp
mov
ret
jnp
mov
je
jecxz
enter
xchg
nop
dec
sbb
xorb
cmp
sbb
fldenv
enter
jmp
jo
lahf
jg
inc
cmpsl
jne
push
xchg
leave
mov
scas
mov
sbbb
or
cmp
les
bound
lds
sub
adc
push
arpl
mov
imul
jne
push
dec
scas
jo
sarb
ja
mov
jg
ret
mov
pop
test
das
iret
cmp
imul
inc
add
jecxz
cmp
push
fmuls
inc
cmp
sub
push
std
inc
jne
orb
jmp
inc
sub
cmpl
movsb
xlat
fwait
aad
insb
orb
clc
and
mov
pop
sub
mov
lods
ss
je
nop
enter
sbb
into
dec
icebp
mov
cmc
adc
mov
xchg
clc
pop
adc
addr16
lret
sahf
icebp
pop
inc
dec
iret
xchg
sub
rcr
clc
sbb
enter
mov
mov
xor
push
mov
fsubrl
sbb
dec
and
imul
push
clc
xor
sub
dec
pop
inc
add
std
scas
or
in
adc
adc
cmp
aad
bound
inc
cld
lcall
dec
movsl
add
movb
cmpsb
cmp
cltd
sbb
rcrl
mov
sbb
ret
clc
and
js
jge
push
push
sbb
std
decl
mov
xchg
add
inc
stos
addr16
outsl
sub
hlt
push
push
adc
or
rclb
adc
or
fwait
lea
out
inc
int3
dec
sub
adc
fimull
int
cmpsl
xor
jbe
mov
add
inc
inc
movsl
shlb
adc
int
xchg
je
hlt
add
mov
incl
push
lods
mov
cmp
inc
and
roll
xor
in
loopne
mov
aaa
jp
mov
push
sbb
xchg
test
ficomps
xchg
cld
hlt
scas
mov
ffree
jmp
dec
das
lret
and
pslld
add
or
xor
add
lea
fsubl
sbb
xor
mov
and
lret
popf
push
dec
xor
xor
mov
mov
inc
push
xchg
mov
sbb
mov
xchg
in
sbb
dec
mov
std
and
adc
mov
inc
adcl
jge
add
fcomps
int3
inc
aam
in
loope
sbb
addl
stos
aas
lea
aas
mov
dec
mov
mov
fldt
cmp
jne
pop
push
mov
loopne
inc
sbb
jae
fsubl
pop
xor
clc
add
pop
push
sub
fidivs
sbb
fldenv
dec
sahf
fwait
fs
or
xor
dec
fistpl
cmp
negb
xor
in
xchg
aas
mov
lahf
pushf
repz
mov
cmp
pusha
mov
sub
inc
inc
adc
addl
gs
push
enter
lea
andl
or
sbb
xchg
sti
insb
std
lcall
xchg
inc
jo
vmovupd
ja
or
arpl
and
mov
and
mov
lret
clc
xchg
inc
movsl
ret
inc
js
ljmp
lret
or
ret
sahf
dec
cmp
fwait
mov
bound
cmp
fwait
dec
mov
in
xchg
mov
fsubrs
mov
sbb
scas
mov
aad
mov
les
std
and
sti
sarl
aaa
inc
inc
mov
div
add
and
xchg
inc
mov
inc
xor
dec
aad
imul
pop
cmp
mov
outsl
push
dec
jmp
in
lods
pop
testl
stc
cli
in
test
mov
add
daa
add
inc
push
jae
sub
push
cli
setb
rorl
pop
pusha
in
jmp
stos
rolb
mov
jbe
or
mov
and
xor
pop
das
sub
cmp
pop
sub
iret
add
sub
les
push
mov
xor
push
sub
inc
pop
mov
es
mov
fisubs
push
inc
mov
xor
cmp
mov
lds
in
inc
ja
mov
add
jp
cmpsb
popa
das
shll
mov
push
outsb
add
iret
push
lahf
and
sub
push
cmp
jns
add
mov
rolb
pop
add
js
adc
ret
movsl
int3
fs
outsb
test
into
cmp
cmp
je
and
aad
repz
je
fbstp
cmpsl
je
xor
add
ss
and
cmp
adc
mov
mov
stos
sub
lods
enter
pushf
shl
xchg
cmp
fidivrs
mov
jmp
cmp
pop
stc
xlat
and
cltd
ds
mov
and
andl
jmp
lods
and
pop
cli
push
ret
xchg
test
jbe
popf
xchg
call
push
fcoms
mov
add
insl
pop
mov
jb
sbb
lret
bound
or
xchg
pop
inc
stos
in
sub
cmp
xchg
pop
in
dec
mov
ja
adc
sub
test
scas
mov
mov
jmp
scas
and
adc
out
ljmp
push
add
xchg
bound
dec
inc
leave
movd
arpl
ljmp
shll
sub
mov
jae
cmp
dec
popf
lret
movsl
movaps
pop
and
sbb
mov
imul
and
lods
outsb
imul
inc
mov
push
loop
loop
rcrb
lea
shlb
pop
pop
adc
fwait
pop
enter
dec
loop,pt
out
and
sbb
sub
arpl
popf
cmc
je
mov
loop
xor
leave
stc
inc
fs
xchg
bound
jl
in
xchg
iret
scas
and
pushf
push
jge
dec
ds
stos
cmp
xor
mov
and
ljmp
fs
mov
adc
out
mov
neg
lock
jle
sub
loope
xor
xor
or
inc
mov
push
sbb
jmp
jo
sbb
dec
mov
jg
dec
and
dec
xor
sub
dec
mov
call
jnp
stc
dec
ss
mov
xchg
leave
lret
inc
lret
imul
stos
inc
sbb
mov
stos
sbbl
xor
pop
mov
push
mov
repnz
pop
mov
jb
push
loope
jb
scas
push
addr16
call
push
and
ss
test
mov
nop
data16
mov
in
stos
xlat
insb
mov
mov
cmpsb
test
xlat
xchg
loope
popa
jg
repnz
jb
push
push
or
int
mov
les
dec
dec
pop
cs
daa
movsl
push
out
push
ja
mov
jg
push
lds
fucomip
sbb
jp
mov
sbb
inc
in
clc
inc
int
cli
pop
add
cmp
cmpsl
mov
cwtl
lret
movsl
ret
cmpl
cmpsl
imul
mov
cli
mov
cmp
stos
cltd
jns
movsl
xor
faddl
lret
push
jmp
cmp
test
imul
int3
and
push
inc
jmp
mov
popa
xor
xchg
rcll
pop
sbb
fwait
popa
data16
cmp
pop
pusha
jns
scas
cmc
push
ret
lock
push
xchg
outsb
out
and
shrl
jmp
lcall
push
leave
mov
icebp
in
lods
push
rcll
ja
mov
rorl
mov
jb
pop
fisubs
lock
mov
js
loop
xlat
andl
mov
push
leave
push
es
jne
pop
aad
mov
arpl
sbb
cmp
sbb
push
std
aad
jae
push
and
mov
add
add
add
sarb
xor
or
fsubrl
push
xor
push
fst
dec
dec
test
mov
int3
mov
mov
test
movsb
jecxz
call
bound
adc
mov
mov
or
add
adc
fwait
insl
stos
in
stos
imul
sbbl
dec
in
xor
mov
cmc
test
xor
movsl
vpshufhw
adc
rorb
pop
xorl
mov
ds
mov
popf
popl
ret
push
mov
sbb
es
fsubp
and
test
or
iret
cmc
shrb
pop
loop
iret
andl
in
gs
addr16
or
dec
and
negb
fiadds
ret
lcall
mov
jno
iret
mov
repz
jge
push
fcmovnbe
in
in
mov
or
jo
add
lret
cmp
addr16
mov
sbb
imul
sbb
movsl
ds
aad
inc
out
je
pop
dec
dec
jnp
sub
push
cmp
outsb
sub
push
in
inc
imul
mov
ss
stos
add
mov
addl
lods
add
mov
scas
jg
ror
icebp
cltd
jle
mov
pusha
mov
andl
mov
xchg
test
jb
cltd
mov
movsb
jp
xchg
pop
mov
cmp
int3
rorl
sbb
lods
rcll
loopne
inc
xchg
xchg
pusha
jle
mov
dec
dec
mov
cmp
jne
cmp
insb
test
xor
lods
cmp
mov
pushl
lret
dec
cmpsl
pop
dec
lods
out
repnz
add
sbb
pop
add
loope
cmp
and
mov
jo
cmc
add
movsl
sbb
add
and
mov
add
call
divb
mov
fucomp
jecxz
cltd
ficoms
popf
jmp
xor
test
add
xchg
test
bound
icebp
push
scas
xchg
ficoml
mov
loopne
subb
sarb
addr16
and
aam
insb
aad
mov
movl
mov
mov
or
repz
lds
sub
push
sub
lds
adc
daa
enter
lods
in
inc
or
add
aaa
push
jge
xchg
jne
and
cmp
jl
shll
ret
jp
xor
cs
push
ret
daa
pop
pop
push
inc
std
std
call
cmp
pop
movsl
and
xlat
sahf
mov
jle
fidivrl
outsl
lret
push
sub
add
lds
jbe
mov
fsubrl
cs
and
jne
in
out
shll
jno
aaa
xor
aas
sti
loop
movsb
and
mov
mov
mov
pop
mov
testl
xchg
mov
sub
data16
sub
movsb
xor
and
xlat
ret
sahf
xor
aam
stc
in
jmp
gs
hlt
insb
lcall
ja
add
inc
fwait
out
js
fbld
js
inc
jbe
pop
movsb
in
add
push
or
mov
adc
mov
pop
test
sahf
stos
lret
inc
sub
lods
adc
movsl
lret
cmc
xor
out
sub
mov
jo
dec
inc
sub
mov
push
stos
sbb
add
xlat
and
or
xor
cmpsl
shr
je
mov
addr16
jno
push
xor
inc
test
push
jl
xchg
jge
sbb
ds
icebp
sti
jmp
incb
sbb
jecxz
push
sti
xor
int
fs
out
in
addr16
xchg
ljmp
mov
inc
dec
push
pop
into
sub
ljmp
push
xor
jns
repnz
inc
repnz
in
vandps
dec
lret
push
lock
das
sub
jnp
xchg
cmc
test
sbb
xchg
jge
dec
lahf
pusha
loope
js
xor
jg
jg
rol
inc
sbb
add
fcomps
jbe
jecxz
outsl
jle
pop
dec
adc
inc
cwtl
retw
xlat
cmpsl
test
dec
jb
cltd
and
push
adc
aam
sti
pop
lcall
pusha
rcrb
fcomi
pop
daa
aam
aad
aad
fnsave
mov
inc
or
xor
popa
gs
push
mov
dec
dec
stos
shl
test
mov
push
mov
push
divl
hlt
add
adc
shlb
fadds
cmp
inc
lret
fcompl
cs
cmc
stc
ljmp
dec
sbb
repz
enter
fidivrs
pop
rcrb
xchg
mov
sub
cwtl
aad
imul
fmulp
jnp
jb
notl
daa
mul
cmpsl
and
inc
shr
bnd
subl
sahf
add
xchg
incl
dec
jno
test
notl
cltd
bound
or
lods
xor
xchg
nop
pop
add
rol
pop
ficoms
fcompl
data16
lock
lahf
aaa
pop
add
sub
mov
mov
fisubs
rclb
mov
test
jo
pushf
ficomps
int
lret
lcall
aad
xchg
adc
cli
fnstenv
xor
addr16
xor
jne
pusha
add
sub
xchg
outsl
aaa
stos
ss
ficoms
inc
mov
arpl
stos
push
test
add
sti
gs
icebp
mov
inc
test
pop
dec
into
xchg
jg
pushf
cmp
jmp
inc
popa
cmp
pop
xor
sub
movsl
push
jl
jp
inc
and
push
sahf
in
xchg
in
stos
jne
iret
mov
add
popf
in
into
pop
fcmove
js
lea
inc
push
stos
adc
sbb
fwait
pusha
xor
push
xor
xorb
iret
pop
pop
jnp
pop
adcl
jbe
push
mov
xor
jnp
sub
mov
mov
roll
sysret
push
ret
mov
jle
push
mov
push
dec
inc
jge
inc
cmp
or
mov
or
xchg
mov
data16
fucomip
in
mov
add
std
inc
mov
xchg
cld
dec
insl
ljmp
mov
andb
and
fnstsw
in
out
xor
mov
mov
jmp
mov
mov
mov
fimuls
jg
insb
and
add
sub
mov
ret
orb
das
sbb
in
sbb
push
jno
divl
or
leave
inc
mov
add
inc
ja
and
mov
push
cmp
or
or
sbb
int
repnz
mov
jno
out
push
xchg
aas
jns
inc
cli
add
in
push
out
mov
push
pop
xor
sub
fidivrs
iret
sbb
fldl
frstor
pop
in
sub
pop
sbb
adc
in
sub
fmull
inc
inc
ds
cld
mov
rcll
loopne
lods
repnz
iret
pusha
rol
push
add
shr
ja
mov
sti
xchg
mov
in
cmp
ljmp
pop
into
lahf
sbb
add
int
inc
pop
adc
pop
pop
add
push
dec
adc
sbb
push
sbb
popa
insl
ret
jbe
ss
mov
lods
push
fisttps
fcompl
add
test
aad
pop
pop
ljmp
sbb
arpl
dec
lods
pop
push
in
into
adc
push
inc
ds
cmp
mov
decb
out
test
inc
adc
int
mov
cltd
fcomps
int3
aaa
inc
test
test
push
pop
mov
es
xchg
mov
outsb
aaa
popf
aas
mov
outsb
jo
lcall
iret
and
or
sub
pop
adc
jo
mov
daa
jno
sbb
xor
xchg
enter
out
jge
or
sbb
mov
cmp
iret
ret
push
jle
cmp
sete
cmpsb
add
mov
pop
addr16
sbb
imul
push
inc
clc
test
jae
push
ja
push
mov
loope
shlb
adc
lock
movsl
pop
ja
fcoms
dec
cmc
idivb
hlt
mov
jae
mov
jbe
pop
dec
pop
js
sbb
lret
push
lds
loopne
cmp
test
xor
and
push
add
stc
sbb
pusha
in
cmp
jle
xor
stc
pushl
jne
addr16
pop
dec
jo
cld
push
adc
out
xor
xor
dec
sbb
sbbb
gs
cmp
outsl
fstps
jge
adc
aaa
mov
xor
aam
xchg
popa
mov
iretw
lds
dec
test
leave
cld
fisubl
push
fnstsw
fdivl
jge
jle
inc
js
sbb
pushf
mov
out
mov
sbb
popl
pop
add
sbb
loop
fsubrl
push
mov
push
inc
adc
dec
push
pop
dec
out
adc
mov
mov
fmull
cmp
lds
add
out
mov
cmp
push
xor
sbb
loop
daa
fstpl
jl
addr16
int3
cmp
orb
lcall
ja
sub
jmp
stos
fcmovnbe
or
sub
lds
inc
rorb
inc
cmp
pop
lcall
cmpsw
sti
sbb
cmpsb
xchg
aas
popa
insb
inc
pushf
add
decl
mov
pusha
pop
std
lret
imul
test
dec
add
and
aad
pop
cmpsb
dec
push
fimuls
xchg
push
mov
loop
cli
notl
ss
cmp
add
movsb
pop
js
dec
push
test
pusha
cmp
test
add
sbb
lcall
or
dec
cmp
clc
xchg
nop
icebp
push
sti
or
imul
mov
lds
push
pop
and
movsl
xor
and
ds
sbb
mov
xchg
divb
divb
inc
cmpsl
push
ja
cmp
insl
and
pop
jnp
and
es
leave
xchg
cmp
pop
jns
or
mov
jo
js
ja
pop
adc
pop
testl
test
inc
push
in
mov
push
out
cmp
loopne,pn
mov
test
cmp
shrl
and
pop
xor
iret
sub
sbb
hlt
imul
ljmp
mov
mov
cmp
loop
lret
inc
lds
xor
inc
sub
lods
sar
and
popf
js
loope
push
and
andb
decl
adc
int3
aad
jp
sbb
adc
loope
jg
or
je
sbb
add
dec
in
adc
loop
and
jo
pop
and
mov
push
jmp
xor
push
pop
call
sub
bound
mov
scas
pop
shrb
cmp
dec
aas
dec
lahf
jp
dec
jnp
clc
or
in
pop
pop
inc
or
or
push
in
sbb
aas
inc
stos
rclb
insl
xor
sbb
out
in
loopne
inc
xlat
popf
lock
adc
fstpl
int3
xchg
mov
add
xchg
push
jno
sahf
scas
das
push
aas
push
xchg
gs
inc
sbb
and
shll
icebp
xor
jbe
ss
push
and
aam
mov
or
leave
enter
mov
or
jl
jecxz
mov
ret
outsl
push
adc
push
inc
ret
mov
outsl
lcall
fs
in
inc
imul
push
adc
pop
pop
push
enter
jne
push
out
push
mov
loope
shlb
adc
lock
movsl
pop
ja
fcoms
dec
aad
jge
hlt
mov
jae
mov
jbe
pop
dec
pop
js
sbb
lret
push
lds
loopne
cmp
test
xor
and
push
add
stc
sbb
pusha
in
cmp
loopne
scas
push
out
cmovge
pushf
ds
inc
xchg
out
push
rcrl
je
inc
insb
dec
jae
out
mov
sbb
sbb
lcall
sbb
sbb
aaa
jl
fisttps
lds
fxtract
fisubs
rcrb
in
and
pop
nop
jbe
dec
push
mov
fildll
and
mov
out
xor
push
mov
in
cmp
pop
pop
loopne
sbb
inc
push
mov
jb
sbb
or
inc
jmp
jle
int3
adc
pop
into
lahf
adc
test
push
dec
std
lret
or
pop
add
lods
inc
sbb
and
mov
cmp
int
jg
popa
cmp
xor
push
jge
cmp
pop
lock
jno
out
cmp
fstps
in
xchg
dec
lods
push
push
movsb
mov
adc
out
out
sub
cmpsl
push
testl
aam
jl
insl
sub
xorb
iret
pop
pop
cmp
leave
push
inc
fisubl
ret
push
pop
movsl
add
loopne
sbb
scas
mov
out
inc
xor
or
or
xchg
jl
jl
bswap
data16
xchg
movsb
mov
mov
imul
pop
ss
jns
out
test
cld
and
stos
std
xor
faddl
inc
lcall
mov
stc
in
gs
sbb
call
mov
add
fcompl
call
mov
jns
pushf
scas
scas
adc
push
mov
fs
sbb
push
adc
adc
cmpsl
lcall
es
addl
sub
sbb
shrb
jbe
pop
dec
pop
jne
push
cmp
jo
lock
xchg
cmp
test
and
push
sub
mov
std
lods
pop
pop
js
incl
inc
sbb
out
outsl
jo
inc
jne
out
xlat
insb
add
sbb
je
rclb
out
add
call
pop
xchg
cmpsl
mov
test
dec
and
mov
adc
shlb
in
mov
jb
dec
mov
stos
xchg
xchg
test
jle
pop
dec
fistpll
or
iret
push
les
push
cmp
and
push
frstor
add
subl
cwtl
out
push
lcall
cmp
loopne
sbb
pop
ret
mov
sbb
in
ret
jnp
push
lahf
je
popa
mov
and
cmc
sub
dec
cld
sahf
mov
add
testb
rcll
sarl
pop
repnz
xor
jmp
scas
sub
cwtl
sub
mov
lods
rcrl
test
aaa
push
fdivr
fdivrp
and
xchg
mov
cmc
jmp
js
xchg
fs
hlt
pushf
cmpxchg
cmp
out
jnp
push
lret
inc
mov
push
xchg
pop
insb
call
dec
popf
das
fistpl
dec
cmp
repnz
js
gs
jns
out
dec
enter
lea
or
mov
shll
push
mov
or
out
es
fnstsw
inc
jbe
mov
bound
pop
jl
ficoml
push
mov
in
sub
fdivl
add
les
fs
jne
pop
ret
xchg
and
jbe
shrl
imulb
jno
addr16
sbb
pop
movsb
movsl
cld
sbb
push
push
and
add
int3
jmp
jge
lcall
sub
jne
popf
insl
push
mov
mov
mov
in
iret
xor
clc
pop
jb
out
fnstenv
pusha
fsubrp
divl
in
std
add
push
mov
add
mov
sbb
xchg
dec
ss
in
mov
jno
out
push
in
mov
push
scas
mov
push
in
stc
test
xlat
mov
cmc
cltd
inc
iret
and
or
sbb
pop
daa
xchg
aam
jbe
dec
fsubp
jge
aad
sub
pop
mov
jge
ret
jecxz
call
inc
inc
mov
movsb
mov
fxch
xchg
fsubl
arpl
clc
movsb
into
pop
shl
icebp
or
mov
shlb
push
test
add
in
cmpsb
sbb
lret
fwait
test
push
xor
pop
and
fs
xchg
outsb
pusha
fs
rorl
daa
xchg
ret
bound
pushf
mov
divb
divb
pop
cmpsl
push
push
jl
inc
jne
add
repz
pop
pop
push
fsub
lahf
jp
pop
test
lcall
mov
sub
cmp
das
mov
je
inc
cmp
mov
jo
std
cltd
outsl
push
cmp
pop
mov
mov
pop
int3
fistps
jo
jns
sbb
call
pop
je
jo
in
xchg
adc
pop
xor
loopne
popf
iret
aam
mov
insl
xor
fs
es
hlt
popf
jbe
or
pop
nop
in
insb
xchg
pusha
repnz
mov
add
popf
jnp
or
out
xor
lret
loopne
lds
and
test
jae
push
cmp
std
inc
outsl
fistl
fildll
gs
sbb
call
mov
add
fcompl
call
mov
jns
pushf
scas
scas
adc
push
mov
fs
sbb
push
adc
add
cmpsl
cli
and
xor
addl
sub
sbb
shl
je
mov
inc
scas
dec
pop
jnp
jl
mov
add
pop
pop
jmp
mov
shll
adc
xchg
loop
jmp
dec
mov
mov
inc
jne
test
clc
sbb
je
rclb
out
add
call
pop
xchg
cmpsl
ss
test
jae
lret
shrb
jl
xchg
xor
mov
jb
dec
xor
inc
cmp
xchg
test
jle
pop
dec
fistpll
or
iret
push
les
xor
pop
js
mov
cmpsl
xor
outsb
add
pop
push
sub
inc
inc
jmp
add
sbb
or
inc
xchg
jno
icebp
push
ja
dec
bound
lahf
push
add
mov
and
cmc
sub
dec
cld
sahf
mov
add
mov
testb
rclb
rorl
pop
repnz
xor
jmp
scas
sub
cwtl
push
mov
out
popa
dec
lods
roll
test
aaa
push
fdivr
fdivrp
and
std
rcrb
or
sbb
xor
insl
lret
and
pushf
xorb
out
cmovo
adc
add
cmp
xor
pop
cmp
cmp
sub
fistpl
jno
cmp
repnz
js
gs
jns
out
dec
enter
lea
or
arpl
push
mov
or
out
es
fnstsw
inc
jbe
mov
loop
loopne
scas
nop
or
mov
jno
pop
sub
fdivl
add
sbb
rorb
fwait
push
mov
icebp
loope
fs
cmp
jmp
test
adc
push
dec
jae
sub
jns
sub
xchg
jbe
clc
mov
mov
add
ljmp
push
mov
xor
xchg
add
jge
sub
inc
in
xchg
sbb
dec
lcall
ja
add
add
ja
movl
ret
loope
test
mov
mov
cmpsb
scas
mov
test
test
push
pop
mov
es
xchg
rcrl
hlt
imul
cld
in
sbb
jbe
lret
jge
aad
sub
pop
mov
jge
ret
jecxz
call
inc
inc
mov
movsb
jmp
jge
cmp
lret
xchg
fsubl
arpl
clc
movsb
into
pop
shl
icebp
or
mov
shl
ja
or
lea
add
in
cmpsb
sbb
lret
cmpsl
adc
stos
mov
mov
shlb
inc
xchg
int3
push
popa
in
adc
negb
xchg
cmp
loop
dec
cmp
sub
mov
rclb
dec
cs
push
repz
pop
pop
push
fsub
lahf
jp
pop
test
lcall
mov
sub
and
das
cmp
je
inc
cmp
mov
jo
std
cltd
outsl
push
cmp
pop
mov
mov
pop
int3
jo
jns
sbb
call
pop
je
jo
in
cmc
xor
mov
mov
pusha
push
xchg
add
loopne
fnstcw
or
data16
dec
lds
inc
jne
les
mov
or
leave
mov
mov
mov
add
xchg
push
test
mov
cmp
mov
and
xor
pop
dec
lock
adc
leave
fs
adc
pop
mov
int
inc
push
cltd
push
adc
inc
mov
movsl
xor
mov
add
push
sbb
popa
insl
ret
ret
mov
cmp
ror
push
fisttps
stos
pop
repnz
test
aad
pop
pop
ljmp
sbb
arpl
dec
lods
shl
in
into
pushf
pop
lret
pop
jecxz
aad
xchg
or
arpl
sub
out
sub
test
xchg
xor
dec
push
add
sub
shl
call
mov
out
mov
jns
dec
jo
xchg
fs
outsl
jg
xchg
pop
pop
lods
or
add
cmpsb
aam
lods
outsb
int3
xor
mov
dec
mov
mov
pop
xchg
enter
out
jge
or
lcall
mov
pusha
addr16
repz
pop
rcrl
cltd
mov
mov
imul
jp
aaa
lahf
int
dec
dec
bnd
push
cli
mov
jg
inc
add
cld
mov
fbstp
js
mov
jmp
pop
test
push
add
test
inc
cmp
les
les
lahf
mov
stos
js
jl
movsb
nop
enter
pushf
rclb
lret
dec
mov
scas
pop
rcr
repnz
into
scas
sbb
cld
loop
and
mov
adc
shlb
inc
sub
mov
xchg
test
jge
cmpsl
mov
movsl
xchg
add
fsubs
gs
adc
call
sub
enter
loop
je
sbb
loope
xor
dec
adc
mov
cmc
stc
push
add
imulb
adc
in
mov
hlt
add
mov
mov
jbe
add
roll
inc
aas
sbb
outsl
cmpsb
aas
jno
push
cwtl
lret
inc
sbb
pop
stos
mov
pop
xlat
out
repz
sbb
and
sbb
movsl
popa
scas
dec
pop
mov
movsl
cld
mov
sbb
leave
or
fisttpl
mov
mov
mov
sbb
or
js
fs
lods
jne
sub
imul
das
loope
or
outsl
shll
or
push
mov
mov
data16
and
or
adc
popf
push
mov
orb
ret
lds
cmp
cmp
xchg
mov
xor
and
add
adc
push
mov
dec
mov
cltd
mov
in
aad
clc
mov
out
adc
call
add
cmp
cmp
and
or
pop
sti
mov
push
jge
xchg
cmp
mov
lock
or
sbbb
hlt
test
pop
adc
nop
adc
inc
in
mov
movsb
leave
test
mov
sarl
lahf
mov
jbe
arpl
sub
fcoms
push
fsts
imul
gs
outsb
les
push
mov
add
cmp
cld
cmpsl
dec
insb
jp
scas
hlt
mov
and
dec
bound
mov
cmc
xor
insb
add
add
or
add
mov
jg
out
or
andl
pop
fsubs
xchg
and
xor
es
test
dec
lahf
mov
xchg
push
adc
lret
pop
jae
sbb
imul
and
mov
jmp
mov
pop
push
test
call
loopne
dec
cld
cmp
and
fnsetpm(287
fwait
cmc
pop
rorl
dec
test
out
mov
testb
push
pop
lock
adc
movl
adc
leave
xchg
mov
test
push
hlt
dec
insb
cld
sbb
inc
popa
sbb
mov
lahf
cli
mov
mov
sahf
dec
sbb
pop
sub
int3
test
cmp
call
xchg
fwait
les
mov
mov
mov
inc
mov
arpl
into
jne
cltd
xchg
scas
and
sbb
sub
add
mov
add
outsl
sub
fmuls
orb
movsl
clc
fstpl
arpl
xchg
mov
repnz
test
insb
lea
jp
sti
rcrb
repz
mov
mov
test
or
fstpt
push
int3
mov
lds
mov
stos
shll
lahf
mov
imul
fcom
jl
in
cmp
pop
sbb
mov
add
sbb
out
jnp
mov
fiaddl
mov
push
xor
jns
mov
imul
inc
push
adc
mov
ja
inc
in
aad
sbb
inc
lahf
imul
sub
inc
fbstp
jge
xchg
jp
and
jo
mov
sbb
cmpb
sub
add
sub
pop
test
xor
xor
sub
inc
test
test
jl
jae
loope
andl
clc
sbb
or
int3
mov
sbb
cmp
push
xchg
and
adc
orl
daa
mov
out
je
fwait
lea
jb
int3
gs
addr16
mov
lret
jecxz
mov
dec
outsl
sbb
xchg
mov
sub
and
and
add
xchg
mov
cmp
mov
xlat
mov
repnz
add
test
add
jo
clc
imul
push
sbbb
xor
rorb
dec
lret
lea
mov
push
jb
mov
jbe
movsb
mov
mov
or
aam
push
mov
xchg
pop
add
mov
mov
sub
sub
fwait
lods
cmp
negb
in
mov
jg
jns
daa
pop
add
ss
fsubrs
shlb
sub
pop
jne
mov
mov
lods
mov
stc
cmp
xor
dec
or
push
lods
shrb
adc
mov
push
lea
jmp
std
mov
sti
mov
xor
mov
repz
adc
movsb
add
lea
daa
xchg
jnp
into
pop
jp
negb
pop
into
movsb
sub
mov
loopne
clc
sti
mov
dec
jnp
ror
leave
out
push
mov
cmpsl
jmp
adc
or
jne
test
dec
jno
mov
pop
dec
sbb
out
lods
nop
test
jmp
inc
mov
hlt
ljmp
stos
lret
out
xor
mov
jae
mov
push
push
in
cmpsl
and
jg
lods
and
xchg
ljmp
pop
js
push
inc
test
pop
imul
push
inc
mov
popa
movsb
gs
cmpsb
cld
push
andb
dec
std
push
dec
cmc
push
cmp
jns
dec
push
fmuls
pop
outsb
in
inc
mov
cmp
sbb
insl
xor
xor
movsl
mov
iret
xchg
gs
pop
lahf
jg
fldcw
xor
push
xor
jle
ss
sbb
popf
ja
or
lods
jg
jecxz
cli
jle
inc
mov
in
int3
ret
insb
test
test
and
mov
packssdw
mov
dec
popf
pop
jbe
jns
cltd
iret
xor
das
jnp
cmp
aad
cmc
cmpsb
xchg
stos
pop
ljmp
scas
xor
lret
mov
mov
loop,pn
push
test
test
inc
mov
fucomp
jae
sbb
lret
daa
cmp
xchg
cwtl
bound
add
mov
mov
cmp
subl
sbb
rep
inc
sbb
bound
push
shll
push
mov
int3
pop
sti
mov
daa
or
arpl
add
movsb
add
mov
jne
jnp
fwait
mov
and
jne
dec
lods
fimull
push
stc
pop
xchg
and
fwait
xlat
test
leave
stc
cmp
cmp
pop
in
add
lret
mov
gs
jg
inc
cmp
mov
les
adc
cld
sbb
out
scas
ret
lock
jo
pop
inc
pop
mov
pop
xchg
lahf
xor
lods
lret
ja
mov
iret
cmpsl
mov
insb
dec
cmp
xlat
xchg
jbe
or
stos
mov
arpl
jmp
mov
shl
cmp
in
sbb
mov
hlt
mov
inc
clc
push
jne
mov
ja
mov
ljmp
imul
icebp
lods
push
scas
cmp
push
sub
das
scas
and
sbb
scas
inc
fwait
or
mov
xchg
xor
add
jo
mov
sbb
xor
and
imul
push
dec
aam
cmp
xlat
std
rcl
dec
fs
sti
mov
shll
scas
es
dec
sub
jge
sub
nop
or
paddd
xchg
mov
test
out
ss
mov
loop
fstpl
in
ja
cmp
jne,pt
mov
jne
sub
into
repnz
ret
gs
jo
jbe
dec
rorb
stos
push
and
mov
inc
mov
ret
lock
lods
mov
sahf
ljmp
pop
es
lea
jno
sub
add
lret
mov
pop
scas
dec
jns
mov
mov
sbb
shr
shll
mov
mov
nop
adc
scas
inc
xchg
cli
fwait
test
sbbb
add
andl
roll
inc
pop
or
aad
sbb
movsl
inc
andl
fsub
lock
xlat
ja
out
out
cmp
jbe
stc
and
stc
cmp
in
bound
in
mov
pop
aam
xor
data16
pop
mov
and
inc
sahf
imul
sti
repz
jbe
gs
scas
push
xor
inc
iret
add
sahf
or
mov
sti
xor
inc
xor
mov
test
adc
movsb
mov
xor
repnz
lods
daa
outsl
shrl
insb
daa
xchg
pop
jno
xchg
outsb
push
mov
xchg
mov
push
sbb
icebp
dec
fs
mov
dec
push
sub
sbb
popa
test
dec
leave
mov
mov
inc
lcall
fwait
insl
mov
negl
out
mov
sub
shlb
scas
xor
or
sbb
mov
dec
test
sahf
lods
ret
mov
mov
dec
out
push
int3
mov
mov
cwtl
mov
or
adc
xor
cmpsl
mov
mov
pop
mov
movsb
mov
fcomps
inc
pop
inc
push
xchg
shll
xchg
mov
mov
push
jmp
mov
fsubs
pabsd
mov
sti
xor
lods
xor
mov
inc
mov
fsts
inc
mov
fistps
mov
fistps
orl
cmpl
shll
fiaddl
adc
cld
movsb
mov
dec
push
ds
mov
inc
mov
xor
jmp
mov
lret
fstpt
push
or
sub
ret
in
or
stc
xchg
or
cmovo
lock
adc
and
or
in
push
test
sbb
fcomps
or
loop
mov
cmp
xchg
sbb
es
dec
cmp
or
xor
push
push
cmp
fs
cmp
lret
cmpl
adc
xchg
icebp
addr16
bound
shr
xor
or
inc
cwtl
pop
adc
lock
adc
mov
lds
pop
xchg
pop
sub
shll
add
les
mov
popf
int3
or
pushf
dec
pusha
inc
lods
js
stc
jae
pop
or
test
push
mov
stc
ljmp
popf
lret
cltd
icebp
pop
inc
push
fdivrl
in
mov
int3
imul
cmp
stc
sarb
adc
int
lcall
fwait
bound
loope
js
cld
cmp
xor
pop
push
jns
addl
push
dec
out
rcr
sub
pop
mov
out
push
mov
aam
jns
enter
cmpsl
iret
xchg
cmp
pop
adc
cld
xor
mov
ret
mov
mov
sbb
iret
push
int
push
adc
int
jb
fistpll
shr
xchg
inc
push
add
mov
mov
cli
shll
cmp
pop
sbb
aam
aaa
push
cmp
mov
fidivrl
test
aaa
ror
movsl
add
fwait
and
ljmp
pop
aam
jno
pop
inc
lahf
mov
push
mov
dec
mov
shrl
les
add
sarb
push
push
mov
mov
enter
cmp
adc
pop
cmpsb
jo
sbb
mov
mov
jmp
movsb
inc
or
add
test
decl
aad
xor
test
les
sahf
mov
and
xchg
out
mov
lahf
inc
mov
cmp
inc
jle
sbb
movsb
hlt
iret
sub
sbb
push
cmc
stc
pop
xchg
pop
cld
loope
aaa
outsb
sahf
dec
test
pop
in
xor
push
inc
xlat
mov
mov
ret
loopne
push
movsb
lock
jmp
mov
mov
jecxz
inc
inc
dec
mov
mov
ret
mov
mov
or
lds
stos
stos
jb
pushf
inc
das
movsb
loop
clc
enter
test
dec
stos
das
pop
pop
int
fisttps
or
xor
and
ret
mov
shl
inc
cwtl
push
adc
dec
call
xchg
cld
rcr
adcl
lcall
cmp
mov
xchg
int3
push
rcll
or
and
and
popf
scas
pushl
andl
xorl
cmp
sarl
push
add
out
out
stos
jge
adcb
je
cmpb
addr16
mov
fcomps
and
push
dec
ret
cmp
fstpt
rcrl
mov
adc
fisubrl
int
xchg
cltd
lods
fwait
mov
lcall
fldenv
push
loopne
cmp
add
lret
sbb
jmp
mov
ret
mov
adc
cmp
test
xor
ret
cmpsb
lret
mov
aaa
dec
das
inc
repz
fadd
stos
rolb
mov
pusha
gs
sub
int
mov
mov
paddq
inc
pop
or
into
sub
xor
fistpl
scas
push
push
addb
inc
sub
push
ret
jb
cmp
cmpsl
mov
xchg
lahf
enter
loope
and
stos
je
dec
jg
outsb
std
sub
add
scas
push
movsb
jbe
mov
mov
pop
mov
pushf
popf
outsb
nop
jl
mov
mov
xchg
inc
inc
jmp
sti
pop
ret
sbb
bound
and
fsubrl
inc
cmp
mov
adc
outsb
imul
stos
aas
lea
aas
cmp
aas
add
cmp
or
push
mov
cmp
lahf
jmp
pop
nop
and
dec
fsubr
push
sub
sub
sbb
dec
mov
jbe
ret
imul
and
das
dec
adc
ret
test
ds
pop
or
fucomp
js
ja
aaa
in
popf
arpl
cmpsl
insb
or
lds
jnp
popa
in
pop
jmp
sbb
fisubrl
push
fistps
addb
les
test
inc
mov
push
cld
rcr
test
inc
push
cmp
add
imul
inc
push
sbb
ffree
fmul
aaa
pop
mov
xor
lds
mov
xor
xchg
jmp
dec
rcrb
adc
ret
jp
gs
out
sbb
inc
cltd
and
inc
adc
sub
loope
jnp
out
cltd
mov
ljmp
jb
notl
add
mov
sahf
cmp
add
inc
daa
jmp
clc
cmp
mov
in
test
enter
xor
fucom
fists
push
inc
add
mov
fsub
xor
js
lret
andb
mov
or
dec
mov
insb
daa
xchg
mov
or
push
inc
lcall
cmpsl
push
jne
test
lods
dec
dec
push
sub
jp
sub
enter
jns
popf
fs
sbb
mov
mov
inc
stos
stos
mov
dec
fisubl
pop
xor
fldenv
gs
mov
jbe
mov
lea
pushf
mov
push
outsb
inc
cltd
out
adc
shll
mov
mov
enter
cmp
shlb
jmp
mov
ret
cmp
repnz
cmp
push
and
mov
mov
jae
ja
jnp
repz
loop
cmp
lcall
inc
dec
adc
loope
mov
mov
scas
mov
ficompl
xor
pop
xchg
xchg
adc
lret
shrl
int
cld
stos
adc
bsf
mov
and
jmp
or
cld
js
stos
lret
test
stos
mov
xchg
pop
int
adc
xor
adcl
loope
add
loopne
inc
fsubrs
test
and
xchg
xchg
add
cmp
popf
orl
mov
out
out
stc
inc
bound
cmp
aas
fwait
lret
in
mov
fisttpll
xor
dec
adc
dec
in
jg
les
xor
add
jg
add
dec
cltd
push
es
inc
cmpsl
add
inc
mov
pushf
fyl2x
jmp
imull
sti
vsubss
clc
mov
ss
add
mov
enter
pop
push
iret
inc
les
sub
rcrl
adc
rolb
jecxz
sbb
idiv
int3
addr16
dec
sbb
xlat
xchg
hlt
dec
pop
stos
push
insb
fistl
add
dec
mov
sbb
stos
inc
sbb
xchg
mov
mov
lds
addl
xchg
xchg
xchg
arpl
mov
or
loop
test
fisttpll
pop
inc
pusha
mov
mov
js
or
inc
fwait
imul
push
cmpsl
cld
add
stos
cmpl
xor
mov
adc
cltd
sub
negl
inc
insb
orl
cmpsl
xchg
ret
jl
lea
pop
and
enter
bswap
es
pushf
fucomi
sbb
sbb
sub
sub
idivl
fcmovnbe
jno
inc
mov
fdivrl
insl
clc
cmp
inc
xchg
mov
lahf
cmpb
add
mull
imul
cmpsl
subl
stos
les
jns
sub
lret
fxch
push
les
dec
push
inc
subl
mov
ret
mov
mov
push
outsb
sbb
stos
std
cld
pop
gs
outsb
mov
inc
lcall
xchg
cmpsl
adc
xor
xchg
aad
ret
jg
shlb
sti
and
leave
or
xchg
and
lock
inc
sub
or
out
shll
jp
jmp
mov
cmp
call
or
fbld
bswap
lds
sub
fwait
lea
ror
stc
xor
or
shlb
push
shrb
xchg
mov
xchg
out
jbe
or
mov
and
cld
mov
movsl
pop
nop
dec
lock
inc
arpl
inc
lret
sbb
lods
cmp
ret
pushl
mov
ret
dec
jecxz
dec
mov
jno
jno
or
in
enter
pop
scas
push
sub
sbb
add
mov
inc
fdivr
dec
repz
ss
ljmp
jl
inc
pop
data16
inc
sbb
xchg
or
cwtl
addr16
jmp
xor
sbb
mov
push
jmp
mov
inc
sbb
sub
sbb
dec
sub
int3
in
test
shlb
pop
mov
and
sub
insl
out
dec
fistps
push
dec
or
xchg
mov
mov
cmpsb
cmp
enter
lea
and
xchg
mov
test
jb
or
add
and
jge
movsb
xchg
xchg
push
xchg
dec
jno
and
imul
cmp
inc
mov
pop
movsb
out
hlt
sbb
dec
repz
pusha
sbb
aaa
mov
mov
add
jbe
leave
cmpb
jno
mov
sbb
push
mov
mov
add
mov
lods
fucomp
shll
xchg
push
inc
ds
iret
loopne
adc
and
in
push
dec
scas
xchg
stos
std
xor
mov
xor
vpunpcklwd
ret
or
pop
int3
push
xchg
bound
fidivl
mov
sbb
sti
jl
inc
pop
adc
movsb
inc
sbb
push
pop
sti
outsl
dec
rcr
cwtl
xchg
std
gs
ret
frstor
call
stos
xlat
insb
imul
jge
adc
filds
rolb
int
dec
bound
dec
addr16
les
fsubp
mov
ret
jl
xchg
dec
xor
pop
fildll
in
jne
mov
xchg
ja
push
scas
mov
or
cmp
mov
mov
sbb
in
pop
add
hlt
das
pusha
fs
adc
xchg
mov
mov
mov
sub
leave
push
jmp
les
es
push
and
jne
cs
xor
sbb
ljmp
lret
stos
fs
adc
push
mov
rcll
lods
sbb
xchg
stos
test
pusha
mov
cmc
mov
sbb
insl
xor
pop
xchg
and
fnsave
xorb
movsl
xchg
js
cmp
mov
and
rorb
dec
jae
inc
push
out
imul
rcll
adc
fsub
out
add
aam
adc
int3
pop
sub
ret
pop
dec
dec
dec
pop
cmpsb
rclb
fmull
cmp
fidivs
and
add
jmp
movsb
xchg
out
cmp
fdivl
push
adc
fidivs
sbbl
xchg
and
xchg
xlat
adc
insl
fwait
aam
fwait
mov
xchg
sbb
jno
sbb
les
sarb
in
pop
sbb
lods
sbb
rcr
dec
add
hlt
mov
shrb
imul
pop
lock
mov
inc
lcall
xchg
mov
cltd
lods
jne
test
push
std
pop
enter
repz
adc
and
xlat
in
mov
out
jne
popl
xor
gs
dec
in
push
xchg
imul
sbb
lock
jecxz
push
xor
push
adc
xor
ljmp
sbb
adc
andb
lahf
cs
mov
or
inc
imul
add
lea
mov
je
test
pusha
sbb
or
add
scas
jo
stc
cld
push
add
mov
shrb
jo
hlt
sub
in
dec
inc
sbb
ret
insl
adc
stos
jb
jns
repz
pop
push
bnd
ret
xchg
sbb
and
mov
and
inc
dec
mov
test
fidivl
inc
lcall
xchg
cmp
pusha
or
dec
fdivl
dec
sub
or
xchg
test
xchg
mov
pop
ret
mov
pusha
shlb
or
xchg
popf
subl
pop
jnp
xor
test
fsubs
dec
mov
js
out
cmpsb
xchg
pushf
out
pop
sbb
leave
xorl
mov
xchg
jmp
loope
sahf
inc
jb
or
and
call
pop
add
xor
sti
dec
loop
stc
clc
jp
in
xor
jo
sti
fiaddl
mov
enter
movsb
dec
in
push
cwtl
icebp
and
jmp
xor
mov
dec
sbb
xchg
aaa
in
dec
mov
inc
cmp
jnp
in
jno
xchg
leave
cmp
nop
movsb
dec
and
sbb
arpl
sub
jns
ljmp
add
push
int3
flds
dec
cmp
xchg
outsb
bnd
std
and
loopne
inc
bound
and
ja
out
mov
pop
fimuls
pop
mov
es
outsl
xor
sbb
andl
jle
cmpsb
fwait
jno
in
cmovl
pop
and
cmpsb
sti
mov
jne
cltd
sub
loop
xchg
push
push
or
fcomps
fucomip
mov
cltd
ficomps
movsb
jne
popf
push
aad
inc
sub
mov
aad
cmp
pop
ror
push
pop
inc
add
mov
loop
mov
adc
mov
fcompl
icebp
out
lods
mov
movsl
test
sub
and
stos
lds
pop
xchg
xchg
fldenv
mov
stc
movsb
mov
lahf
fisubrl
les
inc
inc
out
ja
js
loop
test
mov
lea
push
jno
add
pop
cwtl
fistpll
sbb
arpl
sub
iret
xchg
addl
mov
sarb
nop
and
add
decl
cmp
adc
mov
shll
test
insb
addb
and
mov
scas
out
push
outsb
cltd
insl
outsl
inc
rcl
xor
mov
scas
data16
jne
cmc
mov
sub
inc
or
imul
sbbb
sub
jp
enter
hlt
mov
pushf
arpl
adc
mov
clc
cmp
mov
aaa
icebp
out
pop
adc
imul
mov
mov
mov
cli
imul
or
jle
xchg
add
mov
aas
sbb
sub
cmpsb
xor
mov
cmc
in
mov
pusha
iret
add
mov
test
mov
cs
or
xchg
push
push
icebp
fisubl
mov
inc
inc
lret
mov
adc
xchg
xchg
pusha
sub
jo
pop
aas
cmpsl
sbb
mov
fwait
mov
clc
adc
out
sub
clc
popf
xor
push
mov
cwtl
cli
fbld
sub
mov
lds
mov
add
sbb
add
andb
js
sbb
cmpb
outsb
test
hlt
incl
mov
movsl
call
push
fimull
push
xchg
or
pop
pop
xor
pop
adc
pop
stos
inc
stos
enter
xchg
pop
mov
leave
inc
or
cwtl
or
mov
dec
push
shrb
aam
scas
dec
aad
in
jmp
cmp
push
hlt
int
cld
stos
rclb
fisttpl
sbb
ljmp
inc
sbb
pop
push
cs
fmuls
les
nop
inc
lds
push
aam
movsl
lahf
arpl
sub
jecxz
dec
add
movsb
loop
mov
sub
mov
fisubs
incl
aas
pop
call
xchg
mov
and
inc
std
out
push
mov
cs
mov
lahf
insl
dec
loope
pop
fsubl
jnp
clc
adc
fldl
dec
add
fwait
repz
adc
push
push
out
cmp
cmpsb
stos
xor
repz
pop
out
inc
test
cwtl
mov
loop
push
mov
loopne
inc
jae
pop
aad
pushf
jmp
xchg
shl
sbb
add
adc
rorl
iret
pop
int3
adc
xchg
out
psubd
dec
adc
aas
loop
xchg
dec
imul
xchg
test
lret
jp
xchg
notb
bound
daa
rorl
idivb
dec
push
shll
xchg
pusha
sbb
clc
scas
dec
fcoml
fsubl
fcoml
sbbl
push
dec
add
repz
rorl
addl
add
sarb
mov
push
pop
xchg
imul
dec
adc
std
xchg
shl
test
or
call
rolb
xchg
dec
pop
lock
je
clc
add
adc
inc
pop
sub
cmc
mov
test
push
xchg
jmp
adcl
pop
int
pop
sbbb
jmp
mov
jns
cmpsb
pop
inc
fucomp
ja
pop
subl
sbb
leave
fldenv
pop
rol
adc
lret
xchg
mov
pop
cmpsb
repz
call
inc
sub
test
push
xlat
push
idivl
cs
cmp
sub
stos
idivb
and
imul
jge
pop
adc
xchg
xchg
push
inc
pop
scas
dec
add
pop
mov
lret
sub
outsb
mov
mov
cs
test
inc
adc
idivl
into
out
std
jmp
inc
mov
and
fdivrs
fcomip
push
stos
sub
out
jmp
inc
push
jo
loopne
pop
insb
pop
mov
les
fimuls
xor
mov
pop
mov
aam
fisttpl
out
xchg
loopne
addl
mov
pop
aaa
out
hlt
pop
rcrb
arpl
jne
and
scas
lods
cwtl
xor
in
or
and
or
decb
lret
xor
sbb
lds
dec
fmull
les
cmp
scas
cmp
arpl
arpl
pushf
xor
dec
test
add
push
pop
sahf
adc
and
pop
jae
mov
cmp
sub
sub
pusha
mov
jmp
mov
jo
loop
out
das
adc
jne
pop
sub
add
mov
sbb
test
dec
push
cltd
cmp
pop
dec
mov
xor
cmp
jne
mov
ret
fsin
repz
mov
xchg
int3
fadd
dec
inc
xor
mov
enter
dec
bound
inc
pop
xchg
jne
sub
jno
push
jne
jae
xchg
sub
fwait
js
pop
adc
pop
jl
push
jle
cli
xchg
lret
jecxz
jns
push
sbb
adc
sbb
or
fs
aam
xor
imul
xchg
lahf
and
push
dec
stc
and
icebp
scas
sbb
cmc
lcall
rclb
arpl
fisubrl
ds
adc
pop
xchg
inc
scas
xchg
mov
sbb
loop
inc
lcall
adc
xchg
xor
lahf
pop
cmpsl
inc
jmp
pop
movl
inc
mov
and
push
sub
or
shll
aam
mov
sub
les
dec
les
mov
pop
iret
dec
arpl
xlat
push
js
and
mov
fisttps
pop
or
in
aaa
mov
dec
mov
adc
and
hlt
dec
insl
sub
imul
adc
dec
sbb
mov
les
add
and
cmp
aas
mov
subl
dec
xor
jnp
inc
jns
add
and
inc
xchg
shl
dec
push
rorl
hlt
lods
inc
aad
addr16
push
subl
lods
movsb
stc
pop
sub
jl
cmpsl
and
gs
fldl
add
jle
popf
mov
pusha
addr16
xor
fucom
jge
mov
inc
xor
and
add
dec
sbb
ja
shlb
add
lock
icebp
mov
push
popf
adc
add
addl
xchg
movsl
mov
test
clc
push
xchg
movsl
ret
pop
fisubrs
or
out
or
mov
ret
sbb
pop
popf
loopne
mov
and
enter
cmp
or
cmp
xchg
les
push
inc
xor
ds
pushl
mov
test
shll
or
cmpsb
ja
jnp
jae
mov
idivl
xlat
lret
insl
mov
aaa
andl
std
scas
mov
lcall
jns
cmpl
std
mov
pop
xchg
icebp
mov
and
jle
stos
jae
mov
stc
cli
jecxz
subb
data16
and
xchg
push
push
jmp
jne
jb
faddl
jp
lds
lcall
push
imul
js
ljmp
jnp
xor
imul
ja
sbb
cli
clc
and
dec
sub
sbb
xor
inc
sub
or
je
cmp
xor
movsl
ret
test
cmp
mov
jb
sti
les
int3
pop
popf
cwtl
xchg
jg
mov
outsb
add
sub
mov
mov
or
xor
mov
pushf
ja
in
addr16
into
cwtl
lahf
in
pop
cmp
iret
div
ret
pop
inc
xor
xchg
mov
addb
scas
js
ret
add
mov
pop
aaa
pop
repnz
dec
stos
mov
cmp
ret
daa
mov
pop
jne
mov
and
xchg
add
xchg
or
or
xchg
lret
lock
cmpsl
xchg
mov
inc
jbe
and
pop
test
xchg
aad
sub
and
out
jne
fldt
inc
fsubrs
xchg
and
sub
adc
dec
std
adc
out
lret
out
jp
mov
cmp
movsl
jp
cmp
inc
out
add
int3
cmc
xor
es
popf
imul
or
test
stos
out
mov
mov
and
dec
jo
ja
mov
lods
sbbl
push
sahf
jp
fdivrl
pmuludq
inc
inc
mov
out
pop
adc
jns
shlb
cmpsl
mov
inc
push
aad
inc
fsubl
push
sbb
add
pop
lock
mov
jne
fsubr
fcmovne
adc
and
push
cmp
cmp
jnp
inc
ret
push
addb
mov
lcall
mov
mov
sbb
js
mov
mov
mov
sbb
icebp
sti
popf
scas
pop
popf
cmp
sbb
mov
mov
mov
xchg
inc
and
mov
fistps
mov
shr
pop
mov
lahf
pop
iret
xor
cmpsb
xor
jp
mov
popf
leave
inc
xor
movsl
nop
pop
hlt
jl
fwait
jmp
int
jns
shll
ss
dec
je
ret
fcmovnu
add
xor
mov
pop
xor
push
add
pop
add
cmp
sar
sbb
mov
int3
aaa
mov
lcall
movsl
mov
inc
iret
sahf
xor
mov
xor
mov
pop
xchg
test
sub
pop
stos
movsl
lret
cmc
stc
inc
movsb
push
dec
mov
fildll
rolb
inc
shlb
in
jge
push
xchg
stos
lds
gs
xchg
dec
mov
cmp
cltd
add
out
lea
jle
xor
xchg
inc
and
cmpsb
sbb
sub
and
rcll
in
jp
mov
xchg
imul
add
and
pop
cmp
pop
repnz
xor
addr16
or
and
pop
mov
adc
leave
ja
mov
out
mov
roll
mov
mov
out
sbbb
negl
out
sbb
pushw
xor
ret
fdivl
pop
xchg
mov
jo
cld
rcrl
xor
pop
ja
inc
jbe
gs
cmpsb
inc
lods
lahf
push
push
stos
mov
cmp
mov
andl
cmc
fdivs
mov
xchg
and
jecxz
addb
mov
pop
imul
xchg
sbb
push
pusha
andb
lods
inc
and
lahf
leave
lret
xor
push
sbb
shrb
xor
add
jns
mov
sub
movsl
clc
pop
mov
popf
pop
xchg
fsub
push
mov
popf
xor
test
sub
sub
lahf
in
das
cmpl
push
daa
cmp
sbb
mov
or
xchg
dec
inc
xor
pop
cmp
pop
mov
pop
push
xchg
push
aaa
stos
shr
repz
push
mov
push
jmp
cli
jne
in
jmp
lret
jecxz
pop
fcom
xchg
out
int
rcr
dec
mov
cmpsl
mov
add
scas
sbb
rclb
xlat
stos
rclb
imul
pop
and
and
fucomp
mov
ficoms
outsb
add
xchg
test
jno
int3
lret
xlat
pop
mov
fisubrl
mov
xor
inc
push
sub
out
fwait
lods
sbb
or
sbb
push
cmp
mov
fistpl
or
mov
les
fwait
or
or
push
sti
pop
push
ds
inc
aas
aam
test
adc
jp
dec
pop
pop
lods
xlat
push
sub
out
mov
sbb
sti
lea
iret
sbb
int
sarl
enter
cmp
dec
push
pop
fwait
mov
pop
dec
stos
shl
inc
pop
inc
pop
sbb
pop
pop
out
icebp
jae,pn
arpl
pusha
repz
pop
cld
mov
cmc
leave
sar
push
int
aad
ja
notl
or
xchg
jg
inc
mov
fs
outsl
jnp
dec
lret
pop
jg
cmpsl
pop
sub
jno
iret
ja
fs
leave
test
mov
mov
mov
add
jnp
fisubrl
mov
inc
gs
mov
in
fwait
lods
ja
cmp
push
das
mov
pusha
mov
test
scas
mov
mov
sti
mov
xor
stc
add
add
xlat
dec
pop
cmp
jnp
and
push
orb
push
jnp
push
repnz
inc
scas
stc
mov
lahf
fwait
pop
mov
jp
xlat
add
call
rcrl
adc
sub
push
xchg
inc
mov
mov
fcmovnb
dec
inc
cmc
stos
test
movsl
mov
sub
sbb
dec
pop
mov
and
jg
xor
cmp
mov
in
cmp
test
push
mov
add
lds
inc
rcll
xor
ret
dec
lret
lcall
push
clc
sub
les
mov
sub
or
lods
mov
bound
jno
inc
jo
mov
or
xor
and
add
aam
xchg
mov
cmp
push
add
or
les
sbb
ljmp
popl
mov
jl
pop
js
or
iret
addr16
xor
mov
dec
push
jp
inc
stos
aad
xchg
xchg
mov
pusha
push
cmpsl
dec
fstpl
pop
mov
dec
es
bound
inc
rorb
fnstenv
orl
or
lahf
pop
mov
cs
subl
pop
movsb
pop
in
adc
pop
out
les
mov
outsb
mov
lsl
sub
ja
pop
lods
push
das
cmp
xor
or
push
jge
dec
mov
pop
stos
push
lods
fstps
lret
or
xchg
bound
addl
sub
inc
scas
xchg
lcall
mov
inc
lcall
movb
mov
cltd
fadd
cmp
ret
popf
mov
nop
add
scas
inc
sbb
inc
js
pop
xchg
push
sahf
or
jo
sbbl
mov
add
fs
mov
jno
push
sub
dec
mov
cmpsl
push
xchg
sbb
fstps
jge
mov
iret
jecxz
in
movsb
xor
mov
xchg
add
dec
mov
popa
mov
lret
mov
push
aaa
cmp
cmc
mov
pop
cwtl
pop
xchg
clc
sti
dec
iret
sbb
sti
sbb
scas
mov
xchg
and
pop
lock
int3
movsl
xor
in
fldenv
dec
outsl
in
mov
arpl
mov
mov
cmpsl
aad
scas
pop
dec
mov
ljmp
inc
adc
and
mov
add
cs
and
jge
fldt
push
pusha
mov
fistpll
cmpsl
fwait
and
inc
mov
xor
lret
sbb
mov
dec
mov
adc
xchg
dec
and
and
cmp
push
ret
jae
movsl
pop
fwait
mov
test
popw
lea
jp
repnz
cltd
enter
mov
pandn
lods
mov
add
out
mov
jb
push
mov
dec
sub
and
dec
mov
lret
jmp
sbb
push
jns
shlb
mov
cltd
lret
push
cld
xor
mull
sbb
ret
add
lods
sbb
nop
loopne
mov
cwtl
dec
and
pop
stos
push
insb
fcmovne
lods
or
idivl
into
inc
and
or
ficoml
movsl
cmp
mov
imul
pop
subb
nop
sbb
dec
sahf
jmp
stos
push
mov
in
mov
imul
add
sub
mov
cmp
mov
push
es
mov
fwait
jmp
test
fs
lahf
test
sti
jmp
or
xor
sti
pop
mov
lods
cmpsb
inc
cltd
sub
dec
scas
jnp
sbb
sub
mov
cmp
frstor
and
jne
or
fwait
inc
stos
shll
mov
rorb
xchg
push
std
jnp
idivl
sahf
dec
jge
mov
and
cmp
pop
aad
jl
xchg
cwtl
xor
cmp
notl
pop
testl
in
lods
ds
pop
ljmp
pop
arpl
pop
sub
add
add
xchg
or
gs
adc
pop
test
and
pop
sbb
test
jp
mov
es
test
and
add
pop
add
test
push
cmpsl
xchg
fs
or
push
pop
sbb
stos
and
add
jle
inc
push
sti
jno
mov
leave
mov
repz
sub
nop
jne
cmp
sbb
add
movsl
jae
jae
sbb
sbb
or
int
ds
cmpsb
xlat
fnsave
xor
mov
fcom
sub
cmp
int
cmp
pop
dec
shlb
push
add
ja
int3
out
jecxz
out
daa
arpl
rclb
cmp
lods
sbb
stos
pop
imul
fs
out
iret
jnp
shll
out
arpl
and
sub
bound
pop
fs
ss
imul
adc
shl
sbb
mov
into
mov
cmp
fwait
leave
call
sbb
mov
inc
test
add
hlt
mov
push
xlat
out
int
pop
notb
xchg
mov
adc
mov
jge
and
scas
insl
rcr
call
das
dec
push
bound
test
insb
mov
pop
and
shr
and
shl
jo
sub
mov
inc
mov
push
push
punpckhwd
push
fs
in
fwait
jae
or
xchg
mov
mov
dec
mov
hlt
add
iret
cmpsl
aam
push
dec
mov
mov
imul
xchg
pop
iret
loope
xchg
or
adcl
js
sti
cmp
ret
fmuls
sbb
insb
pushf
stos
lds
xorl
lret
xchg
push
add
pop
icebp
ficoml
inc
shlb
inc
mov
enter
cmovbe
mov
rcll
sub
sub
pop
mov
stos
repz
aad
movsl
cli
jg
pop
call
stos
shr
jbe
mov
jle
pop
jne
xchg
ja
jo
sub
mov
xor
lods
aam
je
sub
or
jae
mov
daa
push
cwtl
inc
sbb
inc
int
aas
push
cmp
or
mov
mov
adc
ljmp
cmp
je
sub
push
dec
aaa
inc
cmp
add
int
test
adc
loope
js
mov
loop
xchg
pop
dec
jno
lret
mov
jge
cmp
push
test
frstor
pop
cmpsl
fnsave
aaa
xchg
jmp
lds
pop
outsl
mov
test
sbb
bnd
xchg
test
pop
movsb
or
sbb
mov
and
mov
scas
movl
ss
inc
sarb
and
aad
xor
outsl
mov
xchg
lock
pop
mov
push
ljmp
xchg
mov
pop
mov
cmp
cmp
mov
lahf
xlat
xchg
jp
imul
jl
mov
xor
shrb
sub
inc
jne
dec
mov
xchg
mov
xor
adc
sti
call
xchg
fdivs
sbb
add
test
or
add
cltd
int3
fwait
popa
popa
cwtl
lret
inc
sub
mov
lret
lahf
dec
fwait
mov
inc
mov
cltd
imul
xchg
push
pop
movsb
push
dec
jae
fidivl
adcl
jl
insl
mov
shl
and
pop
or
ja
dec
cmpsl
push
scas
xchg
dec
gs
xchg
mov
add
dec
xchg
fstps
cli
aas
lahf
inc
jg
dec
sub
or
jmp
loope
dec
scas
xlat
in
andl
add
dec
ljmp
xchg
int
dec
xchg
cltd
pop
mov
out
push
out
mov
cmpsb
push
inc
js
jmp
add
xor
pusha
jo
iret
cltd
out
shl
jb
adc
sahf
ror
sbb
add
inc
mov
or
sub
popf
push
ret
mov
cmp
lea
mov
mov
xchg
dec
and
call
mov
adc
mov
imul
inc
cmp
orb
mov
fidivrl
addb
stc
fisubrs
push
xchg
into
inc
dec
lods
fisubrl
mov
mov
stos
inc
and
mov
dec
data16
adc
addr16
sub
cmp
dec
inc
scas
jne
test
idivl
lcall
xchg
adc
push
fisubrs
test
mov
imul
scas
pop
popf
lods
or
loop
das
cmpsl
xlat
in
mov
push
add
pop
test
out
jp
stc
hlt
lret
fucomip
push
stos
scas
xlat
insb
jmp
add
mov
into
cs
loopne
pop
cmpsb
add
out
dec
sbbl
pop
cmp
mov
jmp
mov
xor
or
or
in
inc
xor
dec
call
cld
movsl
enter
inc
not
pushl
stc
dec
mov
jns
out
sar
add
clc
insb
insl
or
pop
push
outsb
jg
inc
or
std
lods
and
sub
nop
xlat
ret
scas
test
stos
xor
repnz
jnp
testb
testl
in
mov
movsl
and
adc
mov
lea
mov
ss
adc
stc
push
dec
and
mov
sahf
mov
in
je
jns
scas
inc
fwait
lret
adc
inc
adc
sub
cmpl
add
jb
mov
ret
daa
roll
testb
add
xchg
jle
pop
ljmp
pop
movsb
inc
cmpsl
ret
out
mov
fwait
lea
xor
jae
cwtl
jns
cmp
aam
or
mov
fbstp
jb
inc
mov
pop
push
int
inc
lcall
xor
mov
xor
mov
adc
push
inc
mov
sub
pop
idivl
adc
testl
jecxz
lret
movsl
mov
fldt
lret
jno
mov
das
scas
sub
jbe
push
movl
idivl
hlt
cmp
insl
mov
mov
or
fidivrl
stos
mov
jmp
mov
jno
cmp
jbe
aaa
clc
sbb
mov
dec
out
js
incb
mov
mov
mov
jle
fs
mov
push
mov
sbb
inc
sbb
fistl
inc
mov
nop
dec
lods
dec
iret
sbb
sbb
sbb
in
test
pmaxub
jge
pop
clc
sarb
insl
pop
inc
test
push
pop
je
jns
jg
movsl
or
test
cmp
dec
lret
push
por
mov
push
adc
sti
add
lods
mov
loopne
dec
mov
fsub
or
jns
pop
shl
jecxz
and
jae
pop
sub
sti
push
cld
jg
xchg
xor
fcmove
imul
dec
and
scas
leave
sbb
dec
jge
popf
lods
stc
pop
ljmp
push
mov
scas
je
arpl
xor
adc
test
jp
adc
xchg
cmpb
xchg
inc
addr16
cmp
fsubrl
and
lods
inc
in
shr
sbb
xchg
adc
mov
add
lods
int
xor
mov
inc
daa
in
push
enter
jl
movsl
rcrb
push
inc
xchg
mov
loopne
mov
out
mov
ret
fld1
imul
pop
popf
iret
dec
mov
jecxz
aam
shrb
adc
mov
jecxz
fwait
movsl
mov
or
push
dec
and
popf
sub
cmp
mov
or
cltd
mov
sbb
jne
mov
in
sub
mov
ljmp
push
push
decb
fwait
shlb
repz
fincstp
pushf
mov
iret
aam
aam
test
imull
pop
jg
xchg
imul
stos
inc
movsl
mov
test
inc
fmull
pushf
mov
xchg
pop
xor
int
hlt
sub
mov
out
rolb
mov
dec
cli
movsl
cwtl
pop
outsb
loopne
mov
cli
mov
and
test
push
js
in
and
dec
cwtl
js
sub
shl
fcomps
xlat
movsl
pop
mov
inc
and
arpl
push
lods
repz
leave
cmp
outsl
mov
fbld
sti
sti
pop
jb
and
insb
xchg
lea
dec
mull
ret
cwtl
sbb
xor
frstor
adc
mov
arpl
fwait
stos
mov
fstl
xchg
sahf
cmp
mov
dec
add
cmp
adc
or
push
mov
pop
lret
cmp
mov
test
mov
movsb
fidivrl
addb
scas
stos
jae
ljmp
popf
lret
add
sub
adc
stos
jecxz
scas
xchg
out
pusha
dec
cmp
loopne
cmp
fldt
cmp
lods
inc
pop
lcall
sti
or
mov
mov
mov
jge
bswap
push
jecxz
fmuls
popa
cwtl
dec
xor
icebp
pop
xchg
enter
inc
lock
lahf
nop
stc
sbb
dec
rol
mov
dec
cld
xor
and
sbb
adc
pop
mov
enter
xlat
adc
call
lea
adc
loopne
dec
xor
js
xchg
lds
cwtl
mov
repz
fnstsw
pop
sub
cmp
lret
lock
shll
cmp
cltd
fsubrl
cwtl
jecxz
mov
pushf
dec
fsub
cmpsl
leave
sbb
inc
clc
enter
cltd
add
aad
jae
jge
pop
lcall
les
cmp
inc
icebp
test
sbb
xchg
dec
mov
dec
mov
lret
xlat
imul
ficomps
sub
mov
cltd
mov
jo
andl
out
mov
test
inc
xor
mov
stc
mov
xor
dec
xor
mov
shrl
mov
fld1
arpl
scas
in
mov
lods
jno
xchg
call
inc
inc
subb
cwtl
stos
adc
cltd
pop
cwtl
out
add
inc
ds
pop
pop
mov
loopne
inc
fbstp
cwtl
aas
aas
cli
mov
lock
test
lock
mov
lods
lock
add
mov
fstps
sbb
nop
stos
mov
fisttps
jns
sub
stc
mov
fildll
and
dec
push
into
aaa
js
cmpsl
shrl
mov
or
xchg
pop
adc
je
aad
movsl
jle
mov
jae
sbb
push
cmp
popf
pop
dec
fwait
leave
loop
fs
mov
add
mov
push
sti
pop
fdivrs
daa
xchg
pop
fmuls
daa
fucomp
push
mov
adc
ret
and
into
jg
fwait
lea
mov
mov
int3
add
adc
cmpb
sub
mov
popf
adc
xchg
andl
ss
rcrl
dec
inc
xor
ds
adc
dec
inc
mov
push
sub
lds
aaa
mov
pop
dec
mov
gs
ja
jne
nop
mov
lret
movsl
ret
cmp
lret
xchg
call
push
xchg
push
and
push
sbb
popf
mov
call
popf
lret
or
xchg
dec
mov
push
in
scas
xchg
stos
aad
imul
popf
sbb
inc
stos
imul
sbb
enter
insb
js
cltd
fists
sbb
xlat
scas
xchg
jo
sub
jl
roll
shll
sahf
inc
mov
push
les
add
mov
jns
aam
int3
cmpsb
xor
pushl
stos
mov
ds
bound
add
jb
adc
sub
pushf
or
clc
inc
cmpsl
dec
lahf
inc
scas
cmp
sbb
jae
ja
mov
or
inc
mov
dec
mov
cmpb
dec
subl
test
push
adc
ret
mov
jmp
imulb
mov
dec
inc
gs
pushw
ja
add
or
mov
sub
addl
sub
arpl
inc
sub
mov
flds
xchg
sbb
sub
cwtl
pop
mov
cmpsl
jns
xchg
pop
rcl
pop
add
les
lret
and
shl
mov
leave
inc
cmp
lret
fs
jno
sbb
incb
mov
fstpl
hlt
pop
pop
sbb
mov
rolb
movsb
inc
inc
fwait
xor
movsl
mov
mov
leave
lods
int
outsl
popf
iret
jp
xchg
mov
xor
adc
sbb
nop
test
mov
sub
or
and
hlt
sti
sub
sti
and
cmp
jmp
clc
lock
mov
mov
mov
jne
or
lods
cmp
insl
xor
cld
dec
sub
inc
in
or
test
pop
pop
fildll
mov
xlat
js
sbb
xor
test
in
mov
clc
jmp
and
pop
xchg
fistpl
add
imul
mov
or
or
inc
sub
pop
push
ss
jmp
in
inc
faddl
xor
sti
or
or
mov
mov
jge
repnz
test
insb
sub
into
sub
or
cmpsb
jge
xlat
sbb
ret
push
mov
or
inc
movsl
cwtl
cmp
pop
sbb
pop
mov
fwait
cltd
jb
aaa
pop
mov
sbb
test
add
daa
adc
inc
sbb
call
int3
lcall
mov
mov
je
in
lods
cmp
mov
xchg
lods
xlat
mov
insb
add
mov
lock
mov
sarb
cmpsl
mov
sbb
sbb
add
stos
mov
ja
dec
sub
test
pop
in
aad
dec
pushf
pop
stos
mov
lret
xchg
lods
push
popf
lret
stos
pop
rcrl
jp
data16
adc
sub
and
xchg
push
sub
mov
lret
dec
cmc
in
push
mov
xchg
pop
push
pop
mov
jmp
insb
leave
loope
loop
inc
mov
popf
pmulhw
adc
adcb
and
sub
cmpsb
dec
cltd
int
mov
into
sbb
pop
icebp
pop
sub
and
lock
fs
andl
addr16
cmp
cmc
clc
insb
mov
loope
cmc
add
out
lcall
adc
repnz
push
das
dec
mov
xchg
pop
dec
andb
xchg
adc
ret
clc
ret
sete
jge
sub
lahf
lcall
jns
dec
pop
fdiv
jmp
ss
int3
in
iret
pop
adc
scas
in
test
mov
loop
icebp
sub
shl
jle
add
xlat
mov
dec
fcmovbe
into
dec
pop
ss
fsts
iret
cmp
sbb
fnsave
inc
gs
mov
adc
sub
xchg
pushf
jbe
inc
inc
ret
jo
or
push
fs
cmp
xlat
in
mov
mov
pop
dec
aam
stc
shrl
icebp
rcrb
sub
dec
mov
cli
mov
lods
outsl
lahf
out
les
mov
sti
popf
jmp
xor
inc
jae
lock
mov
sub
jl
xchg
inc
pop
jne
rcr
inc
mov
sub
movsb
cmpl
jb
mov
mov
and
negl
pop
mov
scas
call
icebp
mov
xor
jecxz
dec
xchg
mov
inc
ret
cmpsb
add
sbbl
out
call
mov
mov
pop
scas
mov
cmc
dec
fsubr
jae
xor
mov
push
pop
sbb
xor
xchg
push
cmp
arpl
ljmp
or
or
cmp
sbb
xlat
or
movsl
enter
or
cmp
js
cmp
ja
leave
xchg
jne
jbe
shr
adc
mov
dec
jbe
and
xor
cmp
sub
xchg
mov
int
fwait
pop
movsl
pusha
rolb
push
sti
js
dec
or
push
leave
daa
mov
push
lods
or
jl
or
lds
addr16
adc
movsl
mov
mov
xor
sub
les
cmpb
cmp
mov
pop
ds
pop
adc
lea
pop
ret
mov
xchg
or
scas
int3
outsb
xchg
jo
sub
adc
lods
ret
test
inc
inc
pop
into
scas
mov
lods
mov
sub
push
pop
je
test
dec
cltd
push
fsts
popf
pop
inc
xor
rcrl
imul
push
mov
aad
fadd
test
xor
jmp
popf
or
fucomi
repnz
pop
inc
inc
fbld
sub
or
sarb
enter
inc
lock
in
je
pop
inc
leave
dec
and
push
stc
mov
mov
push
pop
and
cmpsl
mov
xchg
push
inc
je
xor
jl
in
rclb
inc
fmull
enter
add
lods
insb
inc
xor
gs
fsts
pop
es
je
jo
adc
test
lea
pop
ret
xchg
jl
push
rol
adc
cmpl
daa
out
mov
fwait
lods
rol
mov
in
xor
inc
inc
stos
lret
ret
addr16
lods
mov
mov
fsubrl
std
int
add
push
inc
lret
jge
lahf
pop
shr
pop
gs
push
pop
lcall
mov
aas
jnp
pop
mov
pop
mov
stos
sbbb
testb
inc
push
or
bound
jbe
das
inc
mov
cmp
enter
dec
cmp
fucomi
in
iret
jge
lea
xchg
xchg
pop
imul
pop
lret
jb
cmp
xchg
sub
mov
int
dec
and
int3
mov
test
mov
cmpsl
fnstenv
pop
sbb
call
inc
dec
sub
mov
sub
sub
cmp
call
sub
dec
mov
pusha
adc
jle
popf
pop
lea
out
mov
sub
test
loopne
rcrb
mov
into
push
imul
cli
rcrb
inc
fwait
mov
addr16
mov
pushf
dec
and
fsubrl
cmc
scas
mov
add
jge
int
sbb
jge
rol
mov
pop
mov
inc
xlat
and
mov
dec
mov
cmp
mov
jmp
xchg
mov
es
pop
or
scas
dec
data16
cmp
mov
daa
push
or
imul
and
jecxz
mov
lcall
lods
test
pop
cmp
and
dec
loope
push
sub
xlat
mov
jns
leave
cmp
sbb
sub
mov
fdivr
aas
jle
arpl
ss
aaa
xor
xchg
inc
lret
or
mov
adc
or
lret
mov
iret
mov
sti
mov
iret
lock
cltd
testl
sbb
sbb
mov
xor
lcall
iret
pop
or
mov
test
stc
test
jo
ret
fucomp
jae
fsubrs
jl
gs
xchg
cwtl
xchg
jge
dec
pop
mov
or
or
test
xchg
int3
fisubrl
or
and
mov
je
sbb
aad
mov
iret
sbb
fwait
leave
loop
cmp
hlt
add
inc
adc
sar
lret
mov
cmc
or
cmp
lods
xlat
aas
jns
adc
xchg
ret
bound
mov
mov
mov
mov
pushl
lods
jns
fimuls
rcrb
inc
mov
repz
adc
repz
stos
inc
pop
mov
loopne
mov
repz
mov
mov
jnp
ret
mov
lahf
sar
filds
dec
add
addr16
mov
adc
icebp
mov
add
in
test
je
imul
stos
outsl
aad
frstor
loopne
pop
aaa
imul
mov
or
inc
sub
test
pop
imul
fnstenv
dec
les
pop
pushf
sbb
sub
xchg
pushf
mov
dec
inc
ret
inc
bound
jl
sbb
inc
pop
sub
andb
ret
dec
fidivrs
sbb
es
mov
outsl
cmpsb
mov
cli
xchg
cwtl
push
imul
dec
sahf
cmpsb
xchg
cmp
hlt
mov
shr
pop
inc
fisubs
fmuls
push
add
jbe
fcmovnb
test
pop
mov
in
jae
fwait
sbb
xor
aas
in
and
cmc
jmp
or
aaa
sbb
outsl
std
cld
jg
xchg
xor
or
adc
lcall
push
fsts
clc
stos
stc
and
or
cmpsl
mov
popf
imul
lret
pushl
inc
fldt
movsb
stos
scas
mov
lcall
cs
test
lods
inc
inc
mov
scas
pop
lahf
mov
lret
ss
xchg
cltd
mov
pusha
or
clc
or
fisubl
jge
test
xor
push
mov
pop
mov
repz
rcr
call
cmpsb
inc
aad
lret
fcomp
idivl
enter
sbb
mov
lcall
dec
sahf
gs
xor
aam
lea
dec
lock
and
je
or
imull
sbb
xchg
xor
sbb
jp
add
mov
sbb
sbb
fisttpll
insl
pushf
scas
inc
xor
scas
pop
push
and
pop
stos
push
and
lds
lahf
scas
mov
es
push
jl
lret
jnp
divl
mov
test
subl
jge
jns
xchg
xchg
test
rcr
aam
xchg
cltd
faddl
fisttpll
inc
enter
lahf
jle
lods
push
jp
sti
or
insl
xor
cmpsl
aaa
cwtl
sbb
pop
add
or
mov
adc
sub
fdiv
push
pop
cmp
shll
sahf
adc
femms
aad
jae
out
movsb
fcmovnu
sub
les
add
cmp
cli
mov
pop
lcall
mov
std
hlt
mov
out
icebp
sbb
xlat
pop
int
out
dec
pop
je
hlt
test
ds
std
movsl
dec
scas
pushf
mov
xor
fwait
adc
fistl
inc
mov
repz
jmp
sub
stos
test
cmc
stos
push
fwait
mov
lahf
arpl
sti
scas
shlb
clc
ret
mov
push
daa
xchg
test
sbbb
push
inc
sbb
add
mov
aad
imul
fisttpll
pop
mov
adc
mov
pusha
inc
inc
pushf
inc
or
lret
test
popf
cmc
jmp
xchg
daa
jne
orl
roll
add
sti
or
push
or
stos
and
xchg
and
dec
sub
fiadds
xor
in
xchg
pop
pop
lcall
test
mov
repnz
mov
pop
push
mov
add
mov
pop
xchg
lret
jmp
clc
ds
inc
cmp
in
ret
jbe
add
fwait
jb
sbb
mov
or
xor
xchg
jne
mov
push
pop
mov
mov
inc
call
clc
mov
sahf
ljmp
pop
stos
fists
lret
sbb
jb
pop
sub
adc
es
adcb
xchg
xchg
stos
push
adc
sub
push
fldl
push
mov
sbb
outsl
mov
lods
ret
arpl
inc
and
xor
dec
jge
mov
xor
mov
adc
jno
push
pop
scas
les
popl
sbb
mov
rcr
pop
inc
xchg
mov
sbbl
insl
fwait
je
inc
sbb
or
xchg
gs
outsl
or
cmc
mov
es
add
mov
mov
xchg
xchg
fwait
es
gs
iret
test
leave
xor
sub
movsl
inc
inc
mov
out
arpl
les
or
push
mov
sbb
lret
cltd
jecxz
mov
pop
jle
xchg
dec
popf
cmp
icebp
or
int
jbe
andb
mov
inc
cmp
scas
cmp
and
inc
jmp
push
sbb
fisubrl
xor
inc
dec
pop
int3
test
inc
push
lret
into
mov
cmpsl
push
pop
push
adc
mov
inc
pushf
mov
lds
mov
lods
push
sbb
push
nop
jnp
jle
inc
shrb
sar
cmp
xlat
in
mov
mov
dec
mov
add
ds
sbb
mov
enter
vmulss
movsb
inc
mov
xlat
dec
fucomp
jb
fwait
nop
inc
int
cld
bound
and
inc
andb
fbld
fcmovbe
inc
lock
stc
fnstcw
inc
sbb
out
xor
jmp
popf
cmc
sub
je
je
arpl
std
in
sti
mov
sbb
inc
xchg
push
mov
cld
xor
insl
cwtl
mov
iret
mov
rcrb
jne
lds
push
fdivrp
movsb
jnp
fwait
fs
pop
out
xor
mov
loopne
subl
xor
push
add
rcll
xchg
push
adc
popf
push
xchg
sti
push
cmp
les
lahf
jp
sub
std
cltd
or
mov
mov
scas
shll
mov
pop
mov
test
jns
or
inc
cwtl
dec
mov
ficompl
mov
mov
jb
lods
push
mov
push
sbb
call
bound
and
mov
sub
pop
adc
add
std
add
mov
fists
mov
test
or
xchg
ss
pop
xchg
pop
out
repz
cmp
cmp
icebp
mov
adc
lahf
xorl
lods
daa
mov
fwait
push
sub
pushf
dec
and
insl
test
push
and
and
sbb
mov
mov
popf
popf
fidivs
fidivs
push
stos
cld
fmulp
pushf
xchg
enter
push
push
xor
and
daa
mov
mov
dec
or
test
insl
inc
sbb
dec
imul
bnd
pop
fistps
inc
mov
or
or
pushl
stos
sbb
mov
fstl
and
lods
into
aad
cmp
xor
les
or
inc
mov
and
mov
mov
lea
and
dec
bnd
pop
push
mov
add
jns
loopne
out
and
enter
rcll
mov
inc
out
push
pop
push
add
movsb
jl
cltd
lret
movsl
ret
sub
fsubp
xchg
lcall
adc
aad
dec
lds
mov
mov
lods
push
and
arpl
ss
sbb
mov
idiv
push
cmp
jp
rcl
ja
dec
inc
pop
imul
lods
pop
xchg
das
pop
dec
mov
and
xor
jl
jg
xor
mov
sarb
inc
xchg
and
dec
mov
xchg
mov
adc
sbb
mov
xlat
push
mov
jbe
cmp
aam
cli
pop
xchg
faddp
call
inc
pop
out
and
dec
push
push
inc
jle
aas
push
mov
dec
lods
fwait
dec
adc
popa
sahf
mov
dec
mov
add
mov
les
inc
pop
rol
fistl
push
inc
inc
mov
shll
movsb
mov
or
adc
mov
dec
mov
outsl
mov
jno
mov
lock
cwtl
lret
inc
push
sbb
fmull
xchg
xchg
push
xor
test
dec
pop
pop
mov
push
sbb
mov
leave
sarl
pop
mov
mov
or
lds
xchg
mov
rorb
rorl
xchg
lods
jle
jmp
lods
inc
test
pushf
shl
and
mov
mov
js
pop
xchg
clc
xlat
clc
add
in
mov
jo
and
mov
out
shlb
data16
pop
xor
jbe
mov
jo
dec
inc
pop
cwtl
sub
shlb
push
dec
inc
xor
shll
aad
mov
shr
mov
aam
mov
test
insb
and
or
add
scas
inc
inc
xor
dec
jnp
lcall
sub
sti
rep
ds
sub
mov
adc
inc
aas
adc
jle
push
sub
negb
add
leave
mov
out
shlb
shrb
mov
sbb
testb
clc
lret
in
push
adc
lret
fadd
sub
mov
or
lds
cmpsw
subl
gs
mov
cmp
repnz
out
mov
jne
or
clc
jmp
add
add
int
xchg
leave
es
add
out
daa
dec
shll
jns
dec
cmp
mov
inc
sub
fmuls
xchg
mov
jbe
inc
out
pop
jno
cmp
fadds
and
mov
dec
pop
lea
mov
ret
jl
xchg
xchg
ret
stc
jmp
or
cmp
aad
repz
and
fucomip
push
std
mov
xchg
or
repnz
mov
adc
sbb
hlt
lret
cmp
xor
and
xchg
push
mov
sub
push
mov
xchg
pop
cli
cmp
sub
popf
or
popf
pop
sub
or
jmp
jl
ds
int3
cmpsl
and
cld
push
jo
mov
fucom
sbb
mov
jmp
mov
fwait
int
stc
pop
cmpsl
mov
hlt
mov
xchg
sbb
add
mov
fsubrs
jecxz
ret
cltd
mov
and
iret
xor
js
dec
mov
inc
pusha
pop
shlb
pop
repz
dec
inc
cmc
ffree
pusha
sbb
mov
lret
xchg
lods
mov
dec
cltd
jecxz
test
lods
aad
jbe
adc
fyl2x
outsb
das
or
jg
mov
jns
pop
mov
clc
sti
mov
or
aaa
mov
jne
jge
sub
push
sarb
test
and
dec
inc
pop
dec
cld
mov
lods
xchg
js
jae
sbb
cld
lods
push
dec
insl
int3
inc
shlb
jge
push
push
nop
xchg
sbb
mov
fimull
sub
adc
int
xlat
push
xchg
cmp
push
pop
cmpsl
or
jo
call
pop
andb
cmp
inc
inc
pop
add
and
jb
fs
xchg
cmp
mov
insb
and
das
cmpsl
inc
xor
push
mov
xlat
and
mov
fisubs
inc
cwtl
pop
xchg
leave
addr16
lea
mov
mov
hlt
jl
push
loop
add
fdivrs
lcall
pop
test
adc
add
fisubrl
or
mov
loopne
es
cmp
jb
xchg
jb
fs
mov
lret
outsl
push
in
iret
jecxz
push
mov
jo
mov
call
pushf
dec
mov
mov
cmp
sub
lret
mov
les
jae
testb
icebp
flds
jl
hlt
xchg
adc
dec
lds
or
mov
xchg
mov
add
in
fiaddl
mov
ffree
or
into
out
js
or
inc
aaa
xor
inc
std
adc
test
xchg
sub
inc
mov
lcall
call
xlat
insb
jbe
push
jns
enter
cmp
popf
cmc
mov
cltd
enter
mov
idivb
xor
jp
rcrb
mov
adc
xchg
mov
lret
lcall
pop
jo
popf
in
repz
iret
xchg
jbe
in
xlat
sub
mov
js
jge
cmpsl
pop
xor
inc
jle
dec
das
ss
ds
aas
out
imul
jl
mov
lock
pop
sub
pusha
mov
jecxz
pop
jo
int
jecxz
pusha
inc
popf
lret
js
test
jmp
int3
mov
icebp
cli
xchg
movsl
add
jge
imul
xor
xor
push
push
pop
cmpsb
loope
xlat
jnp
movb
dec
hlt
lea
loope
mov
in
add
jb
push
mov
push
dec
adc
pop
mov
inc
jmp
sub
pop
cmp
xor
rcll
or
test
pushf
jnp
call
flds
cmpsb
hlt
je
fs
mov
lods
jno
xorl
pop
adc
add
arpl
ret
mov
into
lcall
mov
mov
mov
inc
sbb
inc
bound
sbbb
and
xor
push
rcl
cmc
js
fldenv
mov
push
frstor
mov
mov
popf
lret
lret
xchg
sbb
dec
or
mov
fdiv
movl
cmp
jb
cmpb
push
stc
fdivrs
hlt
cmp
sti
push
lret
mov
shrb
pushf
out
xchg
mov
fsubs
out
shlb
mov
xchg
sbb
lret
lock
jnp
fistpll
dec
pop
call
xchg
dec
pop
mov
mov
aas
repnz
lret
mov
or
or
imul
sahf
insl
test
mov
stc
js
call
loopne
cmp
xchg
push
iret
ret
test
daa
sahf
shll
mov
hlt
jns
mov
or
xchg
cmpsl
fistps
rcrb
push
fsub
and
test
inc
lods
rcrl
frstor
rcl
jae
cmp
movl
mov
repz
lret
push
jl
test
cmp
pushf
dec
pop
pop
or
std
lods
out
pop
push
movnti
jecxz
xchg
int3
dec
sub
data16
xchg
push
inc
rcrl
inc
jo
or
xchg
push
das
pushf
popa
mov
adc
inc
dec
jbe
jb
mov
push
into
cwtl
data16
cmp
pop
inc
icebp
lods
sbb
inc
pop
stos
sarl
pop
scas
cmc
jmp
sbb
pop
mov
xchg
iret
fnsave
xor
fnstcw
dec
bound
jmp
stos
inc
imul
sbb
pop
push
into
add
push
leave
jno
ljmp
cld
dec
sbb
inc
sbb
cwtl
mul
jne
mov
add
ret
cmp
pop
and
movsb
lret
xor
outsl
fmul
and
xor
cltd
jne
mov
sub
js
jb
jns
out
push
outsb
adc
pop
add
adcl
rorl
int3
push
mov
std
mov
es
leave
jbe
jp
data16
push
sbb
push
data16
lods
mov
ficoml
stos
std
sbb
mov
fldcw
stc
enter
fisubl
leave
mov
pop
push
add
xchg
and
add
pushf
add
xchg
out
sub
pop
adc
iret
mov
lods
repnz
inc
pop
and
int3
imul
test
cmpsb
mov
out
popa
sub
loop
inc
mov
ret
loope
scas
nop
adc
cmpsl
pusha
pop
imul
dec
inc
fsubs
movsb
sub
int3
shl
fbstp
movsl
jmp
cmc
movsl
inc
push
dec
pusha
insb
cmp
mov
push
ret
fwait
or
sbb
shrl
mov
ss
repnz
lret
sbb
rcrb
gs
stos
xor
or
mov
xor
cld
repnz
enter
pop
lret
aad
or
dec
repz
adc
subb
andb
inc
idivl
xchg
dec
mov
scas
sbb
sub
mov
and
mov
xor
iret
jle
xchg
bound
xchg
hlt
loop
cmpl
mov
inc
mov
out
inc
loopne
test
jl
sub
insl
in
ss
mov
lahf
mov
sti
scas
mov
imul
lret
jecxz
push
mov
lea
and
and
mov
jecxz
or
int
xor
mov
jbe
sbb
sti
inc
sbb
lret
sbb
aaa
xchg
aad
or
sbb
shrb
pop
dec
pop
push
xchg
sbb
jbe
jno
pop
fcompl
aam
xchg
scas
sbb
sub
call
and
scas
jl
ds
mov
xor
pop
inc
or
sbb
outsb
push
roll
sbbl
mov
pusha
aam
inc
pushf
mov
int3
pop
cmp
jecxz
nop
sbb
mov
lock
cmp
jle
jns
and
sbb
int
jl
js
clc
sbb
mov
std
jmp
imul
imul
mov
mov
fwait
mov
adc
sarb
into
push
pop
dec
out
test
sti
stos
mov
mov
cmc
cmp
aas
push
or
mov
pop
ret
fsubrs
sub
xchg
stos
shlb
jp
mov
fs
loopne
jle
inc
pop
sbb
push
subb
btr
enter
pusha
add
mov
adc
mov
adcb
cmp
sub
sbb
lods
test
in
cmp
aas
jge
scas
add
bound
push
cmp
xchg
lret
jge
add
aaa
pop
stos
ja
vhsubpd
xor
lods
push
inc
xchg
pusha
xchg
ret
dec
mov
xchg
mov
cmc
js
orb
in
negl
mov
jl
es
inc
sbb
xchg
sbb
jp
cld
cmp
outsl
fldt
das
inc
sbb
add
cmp
dec
andb
jns
mov
leave
pop
clc
inc
xor
jecxz
push
adcl
andl
mov
jge
mov
xchg
mov
sahf
lcall
pop
stos
cmp
xor
add
pop
jmp
clc
mov
xor
jno
sbb
or
push
scas
mov
jb
popa
mov
xlat
cmpsb
push
pusha
xor
and
adc
stos
mov
mov
test
ret
inc
mov
fisttpll
push
dec
sbb
mov
cmp
test
inc
fildl
fadds
and
push
ret
mov
cmp
lods
jl
loop
pusha
lret
xchg
sarb
and
jnp
push
cmc
inc
fwait
push
jne
adcl
sti
mov
mov
push
mov
and
gs
pop
xchg
xchg
lods
inc
stc
mov
mov
stos
out
jns
adc
sbb
shlb
mov
fs
sbb
inc
inc
xor
imul
mov
inc
cwtl
dec
daa
inc
jecxz
sbb
enter
sub
sub
inc
pop
shlb
je
roll
fwait
xchg
mov
fadds
out
cltd
notl
mov
shrb
iret
pop
test
fsubrs
inc
push
mov
push
dec
inc
sarb
cmpsl
imul
sbb
push
dec
jae
sbb
loope
dec
inc
rcrb
pushf
dec
pop
or
dec
xlat
cmp
inc
sbb
call
dec
cld
orb
hlt
mov
sub
lods
mov
mov
arpl
sub
add
and
pusha
push
pop
xor
or
xchg
fwait
push
mov
mov
jg
mov
bound
fwait
push
dec
mov
nop
xchg
sub
test
push
fisubl
xor
sub
dec
lahf
insl
mov
stos
int3
pop
cli
or
mov
push
sub
dec
push
or
sub
int
push
add
cmc
cld
fldt
jb
idivb
loopne
cmpsb
cmp
fs
xor
inc
fbld
add
iret
dec
aaa
inc
cmp
add
lcall
adc
adcb
pop
jb
mov
stos
ss
mulb
push
imul
repz
xchg
lret
cs
rolb
mov
jae
nop
movsb
les
shrl
or
cld
dec
pop
outsb
enter
pop
test
or
das
cmpsb
inc
push
pushf
or
filds
stos
repz
pushf
lahf
jecxz
mov
cmc
pop
jl
push
cmpsl
icebp
sbb
mov
push
into
add
jbe
push
das
xchg
int
incl
mov
adc
pop
flds
mov
add
mov
jecxz
mov
jmp
std
mov
sti
mov
cmp
cmpl
jno
dec
push
fdivrp
dec
out
cmp
lods
clc
cmp
xor
cld
test
inc
push
ljmp
mov
jle
mov
cmp
aas
and
or
sbb
cmpsl
push
mov
or
push
add
int3
fs
in
aaa
orb
mov
cs
mov
and
addb
xchg
pushf
stos
ret
mov
fnsave
popf
cld
dec
xchg
inc
sbb
add
push
pop
imul
pushf
sbb
fs
call
push
les
enter
lahf
pop
lahf
insl
fucomi
pop
das
adc
leave
pushl
popl
and
push
xlat
lds
into
aaa
jg
or
sarb
daa
out
mov
jmp
seta
and
test
xchg
jge
cwtl
fdivrl
cmp
mov
int3
xchg
ficoms
jmp
push
mov
stc
cmp
out
dec
sbb
xchg
push
rclb
ja
jbe
mov
popf
andl
ret
loopne
dec
es
pop
pop
imul
lahf
lret
jecxz
in
mov
aas
mov
mov
sbb
xlat
pop
xchg
sub
fs
aam
shll
dec
sbb
push
sub
dec
shlb
imul
fucomp
jae
push
test
sar
arpl
mov
movb
mov
mov
cmpsl
ss
adc
and
dec
fnstsw
jecxz
xor
dec
pop
dec
jle
ret
add
bnd
mov
xorb
in
lock
inc
les
and
aad
cmp
cmp
rclb
or
and
xchg
dec
xor
inc
mov
scas
inc
fadds
pop
adc
pop
test
sbb
xorl
in
jb
sahf
enter
loope
test
imul
push
mov
cs
mov
je
push
push
sbb
mov
daa
mov
pushf
add
clc
sti
sub
jae
mov
jne
jmp
mov
sub
pop
ret
test
insb
sbb
dec
subb
inc
bound
push
adc
sarl
and
int
mov
call
pop
imul
cmp
pop
jbe
test
cs
fstpt
cmp
adc
mov
dec
push
clc
shrb
test
push
sbb
or
pushf
mov
xchg
push
sbb
mov
repnz
addl
je
adc
push
jecxz
fnstsw
jns
sbb
add
and
sub
mov
les
mov
cltd
jne
gs
pop
xor
pop
cmpsb
sti
fisubs
inc
jne
push
xor
stos
inc
enter
or
mov
in
cmp
fcomps
iret
test
mov
mov
outsl
xchg
jb
xchg
adc
mov
mov
faddp
subb
add
and
cwtl
mov
push
sarl
mov
jge
int3
lcall
dec
pushf
jmp
sahf
pop
inc
repz
fwait
test
mov
lahf
mov
mov
cmpsb
sbb
mull
mov
sub
bound
lret
addb
adcb
ds
pushf
and
sets
test
stos
and
mov
lret
dec
fs
scas
xchg
xor
mov
clc
inc
dec
scas
xor
xor
mov
sub
add
pop
aad
pushl
rcll
mov
out
loop
fcmove
enter
pop
aad
cs
mov
dec
and
out
xor
mov
jecxz
lcall
cwtl
test
sbb
sbb
shll
mov
jae
mov
xor
push
pop
popa
dec
sbb
mov
dec
cwtl
and
pop
add
jge
std
cmp
psllq
pop
mov
fldl
adc
cmpsb
push
xchg
movsb
ret
xor
mov
iret
inc
push
dec
push
sbb
and
or
ljmp
int
shll
mov
loopne
sbb
adcb
rorb
fimull
enter
xlat
lret
scas
dec
int
inc
in
push
sub
inc
sbb
sahf
and
cmc
pop
nop
std
mov
mov
clc
jl
aas
pop
or
or
xchg
sti
pushl
out
popa
lahf
ror
je
ficoml
sti
xor
xorl
arpl
jo
cmp
jmp
dec
lahf
pop
test
jg
popf
iret
dec
dec
jg
imulb
push
xchg
adc
push
repnz
mov
adc
jbe
lret
inc
add
mov
out
mov
ja
imul
stos
repz
lds
dec
inc
aam
add
shrb
xchg
shlb
in
repnz
jo
cmc
outsb
aaa
push
addr16
dec
fsubl
mov
push
mov
push
xchg
cmpsl
dec
jo
iret
pop
mov
sahf
das
xchg
stc
cli
cmp
int
adc
daa
add
fwait
inc
pop
jl
pop
adc
push
dec
xor
dec
push
xchg
aad
xor
jmp
xchg
das
jg
sbb
mov
jo
push
add
in
je
mov
daa
call
gs
add
adc
mov
bound
stos
add
clc
adc
jnp
mov
jmp
std
mov
sti
and
call
mov
popa
out
mov
int
gs
inc
and
sbb
mov
lods
mov
ret
imul
repz
sti
cmpsl
mov
int3
cmp
jp
sbb
hlt
rcrl
add
fsubrl
cwtl
mov
inc
stos
cwtl
adc
stos
sbb
outsb
dec
inc
add
inc
addr16
push
cmc
mov
lret
or
push
mov
xor
jae
fmuls
lods
int3
lret
jns
fdivl
adc
push
mov
jbe
mov
push
mov
test
sub
cld
mov
repz
aas
cmpsl
push
repz
clc
inc
xor
or
mov
xor
fisubl
sub
dec
stos
jae
out
shlb
repz
add
dec
lahf
ret
adcl
jg
xchg
pop
cli
xchg
mov
icebp
push
jle
mov
jnp
push
add
fsubrs
dec
sbb
incb
fdiv
ja
lret
shr
repz
ret
pop
addr16
jle
mov
imul
in
dec
hlt
mov
and
bound
push
in
orb
cmp
push
dec
dec
fcmovnbe
xor
pop
rorl
cmovno
and
ret
sub
enter
jne
sbb
aaa
clc
add
cmpsb
cmp
lods
fadd
mov
xchg
dec
ret
jae
add
ja
vshufps
jecxz
stos
dec
xor
push
test
lods
pop
push
dec
push
jnp
lods
dec
mov
dec
lea
mov
popf
scas
dec
xor
insl
ss
mov
xor
mov
lea
daa
mov
and
xor
movsl
sub
adc
mov
int
lods
sub
sahf
pop
scas
pop
jle
out
sahf
push
adc
lret
xor
or
ret
aam
push
test
adc
sbb
movsb
ds
notl
xor
stos
xchg
push
cmp
arpl
push
pop
aaa
inc
jmp
sub
jmp
iret
inc
jle
sbb
inc
jl
mov
cmp
or
pop
jnp
in
mov
scas
adcl
cmp
cmp
mov
jp
mov
leave
sahf
call
add
bound
xor
adc
loope
push
push
out
adc
xor
pop
xchg
add
in
and
push
xchg
xchg
jns
jl
dec
data16
push
jl
in
ret
popf
push
and
cmp
inc
jo
popf
pop
lds
shl
cmp
std
pushl
mov
push
jle
sarl
jmp
mov
mov
popf
mov
pop
out
int
xchg
cmpsl
ret
inc
jmp
push
sti
push
popf
iret
cmpb
sub
xchg
pop
lret
mov
inc
loopne
subl
sbb
pop
imul
add
mov
pandn
shrl
push
sbbb
addl
xor
cwtl
iret
std
je
mov
sar
inc
cmp
jne
cld
jg
imulb
mov
sub
sbb
pop
dec
faddl
dec
lret
adcb
adc
ret
mov
mov
pusha
jmp
leave
lret
ss
je
xchg
icebp
add
fs
les
sub
push
mov
adc
inc
je
fstpt
movsl
inc
push
adc
mov
fidivs
mov
cmpsb
xor
jo
pop
pop
push
jle
mov
faddl
adc
outsl
mov
sub
movsb
jp
lret
push
push
loope
sub
dec
mov
push
movsl
lea
fcmovnbe
cld
fstps
jbe
sbb
pushf
inc
les
add
inc
inc
adc
adc
lods
faddl
push
dec
das
or
mov
xchg
fs
mov
les
jmp
pop
xchg
adcb
fdiv
mov
inc
sbb
jae
std
std
insl
lret
jo
lret
add
or
test
ja
sub
dec
push
jmp
nop
xlat
stos
add
pop
test
stc
sub
mov
aad
mov
jae
mov
add
cmpsb
lret
xchg
mov
int3
lds
inc
jge
xchg
push
add
xchg
imul
mov
call
cmpsb
enter
lahf
jp
enter
sbb
bound
or
sbb
daa
js
scas
aas
repz
in
jge
mov
adc
jb
mov
mov
sub
mov
jmp
sub
roll
jmp
jb
lea
outsl
cmovne
add
dec
mov
mov
ret
rclb
cmpsb
repz
mov
inc
cmp
outsl
xlat
inc
push
cmp
xor
sub
push
test
and
fwait
inc
imul
outsb
cmp
xor
push
mov
push
fucomip
sarb
fs
loopne
xor
push
push
int
sbb
push
sub
lods
fistpll
sub
sub
pop
mov
mov
adc
imul
dec
addb
sbb
add
jecxz
mov
push
stos
mov
loope
pop
or
cwtl
and
xchg
xchg
xor
xchg
mov
pop
cmpb
in
mov
andb
cwtl
add
adc
sarl
push
cmp
or
xor
fwait
cmpsl
cmp
test
pop
add
imul
xchg
push
cmpsb
jmp
sbb
int
enter
dec
xchg
ja
xor
shlb
in
xor
fwait
sub
testl
iret
cmp
and
pop
mov
shll
jecxz
cmpsl
pusha
and
add
sbbb
cli
mov
pushf
xchg
sbb
mov
leave
and
xchg
push
mov
xchg
cmc
adc
sbb
out
scas
pop
cmp
in
jmp
dec
dec
dec
js
xlat
add
in
orb
stos
std
test
repnz
push
xchg
xchg
dec
mov
dec
bound
call
adcl
aam
sarl
mov
gs
jecxz
jmp
and
es
inc
add
or
mov
mov
lds
adc
fdivrl
xchg
cmp
mov
xchg
mov
dec
sbb
cltd
mov
jno
call
mov
cmp
aam
pop
cmp
jb
push
add
cs
test
insb
xchg
stos
dec
sahf
dec
mov
repz
jp
sbb
sub
sbb
sub
sub
mov
pop
inc
mov
jecxz
movsl
mov
mov
cmpsl
test
xchg
jg
stc
ret
shlb
ret
fwait
bndstx
dec
test
and
fldpi
sbb
mov
xor
dec
mov
mov
sub
sbb
xchg
xchg
rorb
adc
scas
adc
sbb
sbb
sub
loopne
mov
movsb
mov
sbb
or
jge
xchg
adc
or
das
test
das
test
adc
pop
rcrb
push
iret
mov
cmpsb
lods
dec
sahf
repz
mov
mov
jo
adc
es
sarb
shl
iret
in
adc
test
push
jne
cwtl
sahf
and
enter
inc
arpl
or
fs
sub
test
aam
lds
sbb
lods
cmp
andb
jge
add
mov
dec
mov
pop
add
xor
roll
pop
int3
or
sbb
mov
xor
shrl
arpl
and
sbb
and
inc
test
mov
or
sbb
popa
mov
sbbb
mov
push
popf
sbb
aas
fidivs
lret
aad
add
lods
lahf
adc
mov
repz
adc
jle
shll
cmp
ds
xor
and
push
xchg
cmp
rcl
mov
mov
outsl
stos
les
out
outsl
jle
inc
cltd
out
loopne
mov
fcmove
jecxz
mov
lahf
mov
inc
pop
jge
dec
lods
orl
sub
jle
add
and
cmp
mov
jmp
jmp
dec
jns
dec
inc
xor
sbb
mov
ror
sbb
in
xor
dec
mov
or
dec
arpl
loope
enter
pop
mov
mov
pop
cmp
inc
popa
cltd
stos
push
lret
sbb
pop
cli
int
sub
inc
scas
ja
xor
push
pop
test
xorl
lcall
xor
call
mov
and
out
and
ds
sbb
stc
cmp
or
xor
or
xor
mov
xor
push
xlat
daa
enter
fwait
mov
sbb
jge
and
or
dec
jno
xchg
dec
cmpsb
pusha
out
pop
rcrb
rcll
test
ja
out
mov
repnz
ds
jmp
adc
insl
dec
pop
xor
stos
push
hlt
test
popf
xchg
fistl
rclb
or
jle
iret
cmpsl
adc
mov
lods
subl
push
inc
lods
dec
call
sar
rol
or
mov
and
fs
cmpb
and
lret
leave
inc
push
shll
sbb
mov
fisttpll
mov
fcmovb
mov
and
test
push
icebp
pop
xchg
aas
rcrl
pop
xor
aad
adc
inc
xchg
dec
int3
mov
jl
shrb
enter
mov
daa
inc
pop
iret
js
dec
outsb
outsb
inc
fwait
out
or
pop
sub
and
sarb
cs
aam
pop
cmp
das
dec
enter
ja
cwtl
dec
and
cwtl
imul
aas
ljmp
mov
rorl
inc
popf
and
inc
les
xchg
xor
lods
sbb
popf
inc
shll
mov
fsubr
mov
sar
push
mov
cltd
fbld
mov
pop
or
iret
imul
lahf
lret
in
mov
mov
scas
jbe
movsb
or
adc
insb
test
dec
sarb
push
jns
sub
mov
mov
imulb
xor
mov
xchg
push
cmp
push
cmp
sbb
repnz
insb
mov
cwtl
jae
rclb
cmp
xor
push
xchg
aas
test
into
fimull
call
cwtl
pop
add
clc
jb
sbb
mov
daa
sbb
movsb
mov
xchg
ja
movsl
ret
rep
sub
mov
ret
mov
xchg
inc
mov
pusha
xchg
fcompl
xchg
xor
dec
negb
or
fnstcw
and
cmp
fidivl
stos
shrb
jecxz
adc
pop
mov
loopne
ljmp
inc
test
lcall
sbbb
ret
sbb
mov
mov
int
lcall
inc
cwtl
insl
testb
rcll
sub
lahf
xchg
nop
fcomi
push
shll
lods
lahf
lcall
cmp
nop
cmp
stos
mov
jge
lcall
orb
enter
stc
inc
dec
push
xor
dec
and
fisttpl
jnp
popf
fmulp
pop
cmc
jmp
xchg
test
arpl
push
out
std
dec
stos
inc
adc
shrb
push
jmp
sbb
aas
test
cmp
inc
or
lods
sbb
mov
shr
push
cmpsb
inc
test
inc
mov
scas
jnp
je
xchg
enter
pushf
dec
push
jp
dec
mov
sbb
fsubr
adc
fistpll
into
add
fs
hlt
fsubrs
into
cmp
mov
dec
fcomip
pushf
lock
sub
sub
add
fsubrl
in
xchg
jns
dec
pusha
shrb
mov
ja
repz
and
mov
sub
movl
mov
mov
jae
xchg
and
inc
dec
mov
xor
push
std
sbb
stos
add
push
aas
xor
je
pop
test
push
adc
test
xchg
mov
bnd
popf
roll
adc
push
lea
mov
mov
add
mov
cmp
aam
cmc
adc
imul
inc
and
idiv
loopne
lea
push
and
das
xchg
enter
cmp
add
fwait
int
mov
adc
mov
mov
pop
or
jns
sbb
lea
add
mov
in
mov
lcallw
mov
push
add
fwait
shlb
mov
sub
or
ds
sbb
xlat
imul
fsubl
daa
jns
in
int3
pop
add
cltd
xor
mov
dec
jo
int
push
xchg
sahf
pop
sbb
or
sbb
cmp
lret
mov
fwait
lods
xabort
mov
sahf
xor
bound
inc
shlb
push
leave
bound
mov
fcompl
repz
idivb
les
adc
dec
movsb
call
lret
aaa
cld
je
mov
or
or
popf
subl
mov
imul
cmp
idiv
fcomps
std
or
ja
movsb
sti
cmp
sbb
mov
sbb
dec
lret
inc
push
mov
xor
arpl
lahf
mov
lret
inc
inc
addr16
cmp
test
fcmovnu
jo
gs
icebp
enter
cmp
add
and
mov
push
into
push
test
dec
pop
jo
leave
or
int
adc
movsb
shr
jmp
ret
arpl
xor
ds
add
push
adc
dec
and
lret
lcall
dec
pop
jmp
mov
cmpsl
add
out
sbb
in
xor
popf
scas
stc
adc
sub
pop
sub
repz
rcr
mov
icebp
sarl
xchg
push
jg
inc
cwtl
data16
push
push
pop
mov
cmp
lods
mulb
sbb
sbb
xchg
or
in
je
add
adc
pop
xor
sub
imul
mov
mov
push
hlt
fdivrs
movsb
xor
ret
mov
in
xchg
or
dec
popf
xchg
insb
sub
cli
ss
js
pusha
aam
ja
jo
ss
shll
push
push
pop
pop
dec
push
fcoml
shll
mov
pop
inc
rcrl
mov
popf
lret
sarl
rorl
push
stos
cmpsb
mov
cmp
mov
test
push
sbb
enter
dec
ljmp
fdivrl
mov
mov
mov
sbbb
es
rorb
cmp
mov
jecxz
jo
pop
cs
xor
into
jnp
push
mov
jmp
enter
cmp
sti
push
and
stos
mov
xorl
sub
xchg
pop
aaa
cs
sbb
sub
mov
jmp
or
sbb
xchg
adc
into
pop
movsl
pop
clc
xor
loop
repnz
adc
mov
push
cmp
push
rcrl
sub
jo
cmp
imul
add
pop
mov
mov
das
and
mov
cmp
jmp
or
mov
adc
sbb
sbb
insl
lret
adc
repz
mov
lock
outsb
cmp
jno
mov
inc
shll
stos
dec
push
inc
stos
mov
pusha
es
movsl
ret
push
xchg
test
cmp
jo
inc
rclb
arpl
mov
add
pop
test
mov
pop
mov
xchg
mov
fisubs
or
and
push
call
inc
jb
clc
xor
adc
aaa
mov
cld
je
sbb
lea
mov
test
mov
xchg
decl
icebp
mov
loope
mov
pop
inc
jnp
mov
ret
cmp
jp
out
ret
pop
dec
shr
sbb
dec
lds
imul
repz
sub
dec
sub
movsb
fisttps
lods
sub
fstl
jae
fldt
inc
icebp
or
xor
repnz
mov
fisubrl
mov
inc
stos
jbe
outsl
test
repz
pop
in
fwait
bound
in
adc
es
ds
out
xor
mov
and
cltd
sbb
xor
fwait
cwtl
cltd
jb
cmp
repz
jae
orb
inc
jne
pop
mov
fsubs
pop
jnp
clc
in
data16
shl
inc
enter
xchg
xor
jl
in
mov
mov
jmp
negl
dec
jb
sarl
sub
icebp
fimull
jnp
push
xchg
sbb
repz
shrl
sub
xchg
mov
jp
mov
clc
mov
add
lock
dec
mov
outsl
in
test
inc
sub
lods
push
adc
sub
jge
imul
std
sub
dec
leave
clc
imul
shl
adc
aam
subb
ret
mov
aam
rorb
xchg
cmc
sbb
pop
test
loop
inc
mov
scas
in
repz
bound
aad
push
sbb
or
popa
inc
xorl
add
pop
cs
mov
cmc
pop
push
xor
lret
xor
test
jne
scas
fld1
lock
sti
cmc
stos
push
out
fists
test
mov
cli
sbb
or
jmp
sbb
popa
mov
test
inc
inc
jbe
sub
or
pushf
pop
stc
arpl
mov
nop
cmp
adc
int3
dec
xor
pop
dec
pop
add
ret
pop
dec
je
rorb
mov
dec
cwtl
push
js
shll
fsts
xchg
push
pop
lret
pop
pop
jmp
push
scas
pushf
movsl
in
mov
es
or
xchg
mov
call
sub
mov
fldl
xchg
std
xor
icebp
in
inc
inc
movsb
pop
pop
scas
dec
fs
dec
jae
shrb
cmp
adc
fmuls
adc
pop
repz
xor
add
mov
testl
mov
mov
mov
mov
add
pop
movsl
inc
mov
mov
jp
dec
mov
sbb
mov
lods
inc
xchg
enter
idivb
adc
push
daa
sbb
cmpsl
cmp
jmp
mov
call
add
add
sub
push
and
and
mov
outsb
mov
or
inc
sbb
out
add
subb
mov
cmc
adc
push
sbb
es
lahf
and
int3
inc
lret
mov
mov
push
stos
push
and
rolb
push
push
adcl
mov
fwait
or
inc
cmpsl
xchg
test
mov
ds
addb
push
pop
xor
add
xchg
lahf
cmova
in
rcrl
ret
ret
movsl
movsl
mov
mov
push
dec
jecxz
mov
xchg
adc
pop
mov
pushl
stc
in
jnp
and
mov
les
sub
push
in
inc
or
inc
and
pop
imul
cmpsb
inc
cltd
hlt
pcmpeqd
jo
push
adc
cwtl
pop
push
or
inc
loope
dec
daa
cs
jne
jnp
sbb
fsts
shlb
loop
push
mov
xchg
push
ljmp
ret
jl
in
dec
in
push
mov
add
and
adc
push
cltd
jge
sbbb
dec
aaa
or
sbb
sub
xor
mov
cmpsl
dec
sbb
jl
cmc
cmc
mov
lods
mov
fcmovb
xchg
dec
pop
or
inc
sbb
mov
xor
sbb
rcrb
mov
inc
mov
adc
das
xchg
dec
mov
inc
pop
pop
add
jmp
pop
push
add
ss
das
pop
sub
mov
out
adc
jle
xchg
and
out
rol
xor
inc
mov
addl
shll
dec
pop
in
pop
lea
jle
fiadds
add
sbb
aam
add
sub
lret
and
fwait
xor
xor
sub
adc
icebp
mov
xor
es
or
pop
outsb
mov
mov
adc
inc
inc
push
cmc
lret
test
xchg
lret
jecxz
xlat
and
ja
test
add
out
leave
adc
cwtl
lret
inc
pop
iret
shlb
jmp
dec
mov
out
push
in
into
scas
cmp
sbb
fisttpl
xchg
mov
sub
aas
adc
repz
dec
rcrb
fwait
mov
in
jecxz
movsb
idivb
mov
dec
push
dec
mov
pusha
fidivs
ja
ljmp
or
pop
aas
xchg
es
andl
add
gs
inc
lds
lret
stos
popf
inc
xchg
inc
mov
rclb
cmpsb
and
mov
es
cld
xchg
sarb
mov
out
call
int3
pop
fimuls
les
js
out
cmpsl
push
inc
push
mov
shlb
shll
cltd
arpl
add
scas
xor
lds
mov
or
pop
orl
fisubs
cmp
pop
cwtl
push
xor
int3
xlat
lret
jno
xor
pop
fisubrl
push
dec
inc
dec
stos
push
test
movsl
stc
lcall
iret
jne
in
inc
popa
movsl
xchg
pop
and
ret
dec
pop
inc
insl
mov
stos
orb
xchg
stos
lds
xchg
fistl
popf
ljmp
mov
xor
addr16
jle
shlb
in
dec
mov
leave
test
inc
fwait
and
fsubl
adc
js
jns
dec
sub
lret
cwtl
dec
int3
pop
push
fidivrl
sub
daa
test
xor
imul
pop
popf
xor
mov
inc
mov
adcl
inc
hlt
mov
loop
je,pn
outsb
leave
lods
sbb
jmp
rcrl
mov
jns
shr
bndstx
clc
mov
cmp
mov
inc
sub
or
nop
shl
sub
push
add
inc
sbb
sub
mov
and
idivl
in
push
xchg
pushf
pop
das
cld
jmp
pop
icebp
fiaddl
insl
in
mov
push
jns
mov
jno
mov
sbb
cmc
xchg
dec
clc
mov
mov
or
pop
xlat
or
jg
cmp
cs
cmp
or
push
mov
vmovupd
sbb
test
sahf
jmp
scas
cmp
xchg
call
loop
and
dec
mov
fs
int3
addl
mov
mov
push
or
xor
or
jmp
sbb
xchg
inc
lret
pop
stos
add
push
mov
pop
mov
loopne
and
dec
test
inc
sbb
nop
mul
jne
dec
movsb
neg
sub
mov
inc
cmp
cmp
dec
inc
and
jp
jecxz
mov
sbb
test
cmp
test
call
arpl
sbb
add
mov
inc
xchg
leave
dec
add
nop
int
jp
ja
scas
xchg
stos
loop
xor
in
jmp
dec
and
or
xchg
jbe
scas
and
fidivl
jp
lret
out
test
dec
jmp
insb
jno
xchg
lcall
es
dec
hlt
testl
inc
add
and
xchg
xchg
incb
mov
loop
in
or
jb
icebp
ret
in
pusha
adc
and
add
jecxz
in
shr
aad
addb
sub
add
mov
daa
les
mov
push
or
sti
sbb
imul
push
inc
jno
or
roll
inc
inc
adc
bound
test
icebp
ss
lret
decl
out
and
lds
popa
dec
ljmp
or
jae
into
jo
fstl
cmp
sub
xchg
fisttpll
jne
lcall
arpl
or
std
insb
inc
cmp
jnp
movsb
mov
or
fs
fxam
or
and
mov
pop
inc
jae
scas
cmpsl
push
inc
je
xchg
jl
sarb
dec
mov
popf
xor
adc
jae
and
enter
outsl
jae
inc
mov
sub
or
es
cmp
push
sub
or
out
push
adc
jmp
js
pop
stos
shll
test
in
sub
push
sub
pop
ja
rorl
repz
mov
roll
in
xor
jbe
incb
sbb
jmp
test
sbb
test
inc
push
cli
mov
aad
inc
mov
inc
inc
push
lret
int
xchg
pop
lds
add
mov
cmpsb
xchg
or
mov
jae
stos
xchg
stos
dec
add
mov
pop
repnz
cmpsb
popf
es
cwtl
mov
cmp
popf
scas
pop
popf
mov
jo
mov
mov
ret
lcall
rcrl
sahf
mov
imul
ret
lods
push
lret
fwait
mov
loopne
fwait
cmpsl
push
jb
xchg
dec
jecxz
iret
mov
enter
jo
movsl
mov
shr
mov
fsubrs
movsl
mov
adc
scas
mov
xchg
push
mov
lret
push
das
popl
in
lock
adc
lret
sbb
rcrl
push
mov
cmp
mov
sbb
imul
sbb
xlat
lret
inc
adc
add
and
mov
mov
and
lret
shrb
mov
pop
jmp
bound
xor
xchg
iret
adc
jbe
inc
xchg
xchg
fistl
lcall
jg
xchg
push
jb
lods
cld
pop
jb
ja
mov
aas
nop
in
xlat
fnstsw
push
js
jg
or
push
jl
iret
repz
adc
add
xchg
mov
mov
ret
mov
add
test
enter
mov
add
and
mov
lret
sub
les
cwtl
push
cmpsl
mov
enter
pop
sti
je
rclb
cmpsl
shll
mov
mov
sbb
sar
rep
inc
pop
pushf
or
bound
stos
mov
mov
pop
mov
push
pop
adc
inc
jns
jecxz
jg
lock
dec
cltd
stc
movsl
xchg
cwtl
push
xor
jno
mov
push
js
int
add
icebp
stc
push
cli
mov
pop
stos
in
sbb
mov
inc
test
fwait
aas
nop
cmp
mov
dec
sub
push
sbb
push
jg
mov
xchg
push
fimull
pusha
dec
movsb
sbbb
push
add
mov
push
fmuls
lret
dec
scas
pop
popf
sbb
repz
pushf
sbb
adc
sbb
testl
imul
cltd
mov
mov
cli
sbb
jbe
dec
mov
and
push
lret
js
cmp
bound
sbb
xchg
enter
dec
or
jno
ds
push
dec
mov
ret
mov
dec
jg
push
loopne
sub
mov
std
jmp
pop
pop
fildll
cmpsb
mov
xor
pusha
sbb
nop
or
inc
sbb
pop
xor
mov
push
cwtl
mov
je
xchg
xchg
cmpsl
shl
popa
xor
lds
lods
fistps
fbstp
popa
test
je
xor
sub
insb
jne
mov
push
sbb
aad
insl
mov
outsl
xor
loopne
movsl
mov
leave
lret
pop
mov
xchg
fwait
scas
js
cmp
mov
xchg
leave
loop
imul
and
adc
andl
push
out
or
stc
inc
pop
mov
ficomps
mov
stos
xor
inc
repnz
push
roll
mov
push
fsubrp
cmp
mov
into
arpl
jge
xor
rcl
push
jbe
push
sbb
dec
mov
or
jnp
or
test
sahf
dec
mov
jbe
mov
into
inc
test
push
mov
or
div
mov
lock
adc
sbb
stc
jl
hlt
xor
and
sbb
add
loop
pop
jb
jns
mov
lret
pop
dec
inc
out
sub
push
pop
int3
shll
fidivl
mov
dec
cmpb
sub
push
shl
fstpt
fisttpl
pop
test
add
push
jge
test
fstl
popf
mov
mov
add
jl
pop
andl
and
or
mov
repz
push
jecxz
add
and
xor
insb
mov
inc
fsubrl
xchg
mov
sbb
xchg
fyl2xp1
repz
lock
add
xchg
mov
mov
jns
sbb
mov
iret
push
push
cmc
mov
fildll
xchg
push
mov
fwait
lret
jecxz
add
cs
cmp
js
idivb
cmp
mov
lds
dec
and
pop
dec
insb
testl
push
into
pop
dec
lret
pop
fdiv
shll
lret
cs
pop
scas
lcall
mov
rcll
inc
push
stos
xlat
adc
add
xchg
stos
lcall
ja
lods
mov
les
aad
cli
ss
dec
and
sarb
sbb
out
add
rclb
and
adcb
push
and
ret
inc
rcrb
dec
jae
jnp
pop
mov
mov
mov
ds
inc
cltd
enter
push
adc
mov
mov
int3
mov
jb
jmp
mov
popf
repz
xchg
mov
mov
mov
loopne
mov
shll
mov
rorl
xchg
mov
dec
imul
and
mov
jno
dec
in
shll
add
and
aaa
outsb
mov
pop
xor
xor
push
test
jnp
rorl
bound
xor
fldcw
in
fwait
repz
inc
cmp
ficompl
sub
int
xor
add
cmpsb
cli
push
pop
mov
mov
add
es
js
jb
out
push
sub
ja
add
and
cs
pop
jae
in
dec
pop
mov
rcrl
lret
mov
push
mov
adc
mov
ficoml
add
jg
and
mov
xchg
xchg
sbb
mov
and
adc
ja
sbb
idiv
dec
sahf
push
jb
or
add
aam
add
xchg
or
stos
repz
mov
sbb
insl
pushf
aas
mov
sbb
dec
ret
mov
mov
test
mov
cld
sub
nop
xlat
stos
add
jg
and
inc
aad
scas
and
sub
clc
jae
fisttpl
or
push
je
fnstenv
push
adc
xchg
dec
mov
or
xor
imul
or
rcl
lods
movb
add
scas
dec
in
rclb
inc
pushf
ret
sti
jg
jle
sub
out
aaa
inc
sarb
pop
adc
mov
insb
xor
dec
pop
and
lret
dec
push
je
jns
test
test
add
mov
loope
sub
aaa
aad
xor
fnstenv
mov
out
test
daa
push
in
sub
addl
add
mov
mov
das
loope
je
pop
xorb
add
sti
adc
adc
lock
mov
cmp
icebp
roll
inc
jecxz
or
push
xorl
lea
aad
cld
dec
adc
and
lods
loope
sbb
cltd
out
mov
jne
inc
jae
push
sbb
xchg
inc
or
jo
stos
das
mov
std
in
mov
push
mov
xlat
cmp
pushf
sub
mov
cmp
ret
test
popf
mov
je
sarb
sbb
adcl
add
mov
push
mul
fwait
push
shrb
mov
cmp
enter
mov
and
xchg
pop
dec
sbb
loope
addr16
nop
xor
cmp
insl
xchg
pop
lret
mov
insl
inc
jp,pt
imul
inc
dec
sahf
dec
mov
mov
mov
mov
lret
les
cmp
sbb
ds
cmp
fisubrl
xlat
add
int3
shll
adc
xor
aaa
enter
pop
xor
xlat
adc
inc
cld
shrl
dec
aaa
pop
lea
mov
popa
nop
dec
je
or
push
cmp
pop
pop
sub
pop
mov
hlt
adc
xchg
inc
inc
dec
push
les
xchg
fs
in
je
pop
daa
test
gs
xchg
nop
lods
idivl
bound
jle
ljmp
repnz
lret
mov
test
mov
sbb
mov
and
and
jmp
test
jb
dec
outsb
adc
fs
pop
push
pop
fbld
mov
xchg
aaa
popf
mov
lods
xchg
fwait
dec
xor
inc
inc
leave
aam
or
lods
mov
enter
scas
popa
and
sub
movsl
lea
xor
inc
sahf
xor
mov
in
cmp
sti
jge
lahf
lods
xor
aad
add
loope
cmp
adc
cwtl
xor
or
mov
push
mov
mov
add
das
dec
pop
fidivl
jns
push
dec
leave
ljmp
sbb
loop
cltd
das
fldcw
aad
insl
sbb
mov
aam
mov
sub
pushf
xor
popl
das
repz
xchg
mov
and
shrl
lret
sbb
mov
shll
sbb
xor
roll
lea
xchg
rclb
and
fcompl
daa
jge
fdivrp
xor
enter
push
adc
xchg
or
ret
shr
hlt
imul
dec
xor
cld
jecxz
lss
movsb
adc
dec
or
pushf
stc
sub
dec
hlt
je
mov
insl
dec
cwtl
movsb
add
into
add
mov
lcall
out
cmp
fldl
mov
mov
xor
lret
stc
and
fistpll
mov
jne
vcvtsd2ss
pop
and
js
aas
and
mov
xchg
fucom
mov
arpl
loop
push
jl
pop
cmpl
jl
fistpl
out
loopne
mov
mov
or
fimull
cmpb
jg
mov
fsubrl
frstor
or
les
cmp
movsb
mov
or
imul
jp
cmp
shll
ficoms
push
jns
adc
add
leave
inc
sti
or
int
jae
sbb
in
mov
icebp
jnp
divb
lds
jle
mov
clc
push
sub
jae
mov
sti
test
fidivrl
test
ret
test
mov
push
das
aad
jp
scas
pop
dec
xor
les
or
dec
push
mov
ja
out
in
fsub
das
test
mov
adc
call
popf
adc
mov
fidivl
scas
sub
dec
inc
not
stos
xchg
and
aam
adc
cmpsb
push
pop
jno
lahf
inc
jg
pop
fistps
js
pop
fists
pop
and
jns
mov
lret
sub
js
mov
mov
in
aam
je
adc
addr16
jmp
enter
or
and
cmpl
jbe
add
mov
xchg
add
xor
mov
out
aas
adc
mov
in
incb
inc
int3
cltd
jle
imul
les
roll
lret
pop
jae
mov
add
sub
xor
adc
jmp
test
negl
popl
movsl
sub
jns
pslld
stos
mov
jnp
and
mov
ror
pop
xchg
mov
xlat
dec
dec
bound
inc
pop
dec
in
push
cmp
mov
mov
iret
rclb
sbb
fisttpll
stos
mov
mov
jl
xchg
or
cmp
sti
jno
sub
int
xor
std
and
or
sti
bound
popl
int
xor
mov
ret
add
int3
jbe
in
icebp
in
ja
pop
dec
pop
pop
dec
mov
cmp
cwtl
fsub
scas
pop
je
mov
leave
and
test
out
stc
adc
insl
sub
push
pop
adcl
mov
xchg
or
clc
lock
mov
popl
test
out
mov
bound
inc
sbb
add
fsubrl
adc
ret
lahf
sub
pop
push
xchg
out
and
je
mov
and
scas
or
enter
and
and
mov
nop
cmp
in
cli
in
imul
xchg
mov
gs
mov
rolb
add
dec
in
stos
mov
jmp
bound
popf
lods
push
jg
nop
loope
pop
es
pop
out
das
add
jmp
mov
bound
mov
loopne
mov
xchg
push
jge
ds
lds
sarl
push
mov
xor
inc
enter
inc
shr
push
fsubs
pushl
fistl
iret
cs
out
pop
push
mov
mov
or
pop
dec
sub
fstl
mov
lahf
fs
out
jns
push
popa
ret
sbb
cmp
cmp
lret
movsl
mov
aam
xor
rorl
mov
mov
dec
sub
push
dec
push
mov
out
cmp
cmp
mov
mov
push
test
ss
pop
jae
sub
pop
adc
sub
jae
adc
shlb
test
bound
outsl
ficoms
sbb
sub
sbb
fsub
sbbb
mov
rclb
cmc
in
dec
xor
fwait
xor
data16
fidivrs
gs
inc
or
adc
mov
pop
add
out
iret
mov
cli
cltd
dec
pop
and
sub
or
mov
or
cltd
mov
xchg
test
xor
cltd
mov
pusha
testl
popf
cmc
mov
fistl
add
mov
cltd
test
and
add
mov
jge
sbb
xchg
ss
mov
push
mov
cmc
test
mov
testb
int3
std
aaa
imul
test
mov
sub
xor
push
jbe
inc
dec
sahf
test
and
push
mov
sub
cmp
or
ret
xchg
mov
icebp
adc
or
aaa
and
sbb
lret
mov
cmp
iret
add
adc
push
xor
mov
lods
dec
dec
adc
adc
rcl
xor
inc
mov
out
test
sub
xchg
fwait
mov
les
adc
shr
adc
fidivrs
lret
mov
jbe
inc
inc
add
cmpb
cmc
pop
movsb
ja
sti
in
cmp
pop
in
cmp
dec
lahf
xor
pop
std
sub
sub
mov
mov
int3
pop
sub
imul
sbb
in
test
mov
or
sub
sbb
ljmp
ds
adc
negl
gs
mov
sub
or
rcl
mov
cmp
push
lods
jge
inc
lea
mov
mov
jae
dec
mov
icebp
xchg
ds
sbb
cli
jo
xchg
shrb
arpl
dec
inc
or
popl
and
dec
push
and
insb
jge
adc
pmaxub
sub
shlb
jnp
dec
and
fs
in
xchg
mov
dec
dec
inc
hlt
js
xchg
mov
mov
cmp
push
jb
fildll
jae
stc
inc
jp
daa
and
pop
addr16
popa
push
xchg
sbb
outsl
mov
loopne
imul
xchg
xchg
cmc
cwtl
inc
ud0
orl
jne
scas
dec
jmp
jno
jl
mov
jns
push
dec
bnd
inc
outsb
es
lds
popf
data16
das
dec
test
jbe
gs
outsl
rcl
cmpl
xchg
jbe
pop
js
gs
inc
cmp
inc
enter
fsubl
mov
push
add
inc
mov
sub
jecxz
call
xchg
jge
pop
xchg
cltd
fistpll
js
cmp
add
jmp
lods
dec
sbb
pop
push
mov
jo
fistl
in
mov
aad
fidivrl
jp
mov
jle
aam
aaa
dec
sar
ja
fdivrl
mov
shrl
xchg
es
out
fbstp
cmp
ret
jl
inc
arpl
clc
inc
dec
ret
xor
imul
pop
mov
shrl
stos
les
jmp
fstl
roll
test
lds
lods
mov
jl
andb
test
jg
mov
mov
dec
inc
inc
lret
xchg
xchg
sub
dec
add
test
stc
lea
mov
js
mov
cmp
leave
in
xor
into
xchg
dec
mov
repnz
or
jb
jno
arpl
push
push
jge
or
dec
cs
jno
push
imul
pusha
add
pushf
arpl
mov
sbb
test
sbb
push
mov
adc
test
xchg
jnp
xor
jns
ror
or
mov
pop
fwait
jbe
and
push
enter
cmp
sti
pop
gs
mov
enter
xor
stos
insb
mov
loope
mov
lcall
dec
popa
sahf
jecxz
dec
mov
cmp
or
cmp
popa
add
jno
adc
fadds
cmp
test
pop
pop
or
lahf
dec
mov
sbb
bnd
push
in
lds
enter
outsl
insl
scas
dec
popf
cmp
ds
mov
test
mov
fucomp
jne
out
lods
mov
popf
push
mov
shl
mov
inc
popa
mov
cs
test
mov
mov
cli
movsl
mov
inc
call
pop
push
pop
add
pusha
push
enter
dec
dec
or
jge
xor
mov
cmp
adc
sbb
shrb
mov
xchg
pop
test
addr16
lock
xorb
popf
movsb
inc
out
stos
sarb
pop
iret
jp
cmpsb
cmp
fldl
popf
iret
addl
leave
or
pop
xchg
mov
mov
call
loope
adc
mov
shl
mov
dec
call
ds
or
mov
jnp
jecxz
mov
ret
cli
stos
fcompl
ror
and
jbe
outsl
rorl
mov
outsl
adc
add
xor
adc
push
fnsave
mov
xchg
outsb
clc
fucomp
add
xchg
mov
ds
test
dec
mov
sbb
jge
stc
mov
inc
lcall
add
jnp
movb
push
xchg
xchg
xchg
add
pop
aas
cmpsl
es
add
arpl
add
stos
and
in
dec
shrb
push
roll
push
enter
mov
mov
cltd
fdivr
sbb
fisubrs
outsl
sti
jo
add
add
aam
xchg
dec
adc
mov
neg
cltd
aad
jmp
mov
jecxz
ja
xor
les
sub
call
and
push
iret
push
dec
inc
insb
sti
mov
movsl
add
in
cld
shll
add
push
sbb
mov
jne
enter
lret
push
cli
out
fstl
mov
sbb
push
sbb
and
mov
repnz
push
pushf
pop
dec
and
jecxz
mov
inc
test
or
mov
aas
push
mov
mov
pop
jl
add
ret
mov
outsl
repz
xchg
popf
lahf
xchg
xor
fcoms
sahf
std
out
jno
rclb
mov
loop
jl
mull
xor
jp
mov
aad
and
shrb
or
and
int
int3
fsubrl
imul
jge
test
out
mov
push
cmp
test
ret
pop
push
mov
lock
inc
fildl
rcl
xchg
in
mov
repz
andl
push
push
jle
jo
xchg
push
pushf
dec
rorb
sub
shrl
movsl
cltd
lods
addb
push
pop
ret
push
divb
dec
cmp
cmp
sub
pop
stos
mov
repz
nop
test
mov
sub
push
or
adc
mov
rorl
dec
add
jmp
daa
mov
cmp
mov
lret
or
sti
fistpl
sbb
int3
pop
imul
inc
push
es
jns
adc
mov
out
push
or
insb
jbe
jle
mov
jo
lret
mov
mov
pop
data16
jne
and
xor
aaa
sbb
mov
repz
dec
sahf
cmc
sub
das
ds
mov
pop
das
xor
mov
test
loopne
ret
in
mov
sti
adc
jbe
insl
scas
fs
ret
pop
dec
jnp
sub
dec
or
sub
stc
and
movsl
sbb
sarb
loop
push
xchg
sbb
push
loope
jge
test
sub
push
lahf
cli
stos
mov
fiadds
mov
rorb
or
lods
fisubrl
arpl
or
add
add
jno
cmp
mov
pop
jno
pusha
mov
fstl
dec
leave
pop
sbb
dec
pop
cmpsb
in
testl
ret
push
addr16
ds
pushf
ficompl
mov
inc
adcb
mov
sbb
mov
in
jae
add
nop
lcall
and
inc
ja
jae
loope
insb
aaa
dec
out
inc
sbb
shr
mov
or
pop
das
or
ja
pushw
sub
shrl
cmp
push
push
mov
pop
jmp
cmp
pop
lahf
lret
dec
cmpsb
mov
pop
aaa
mov
in
mov
dec
cs
dec
icebp
cli
pop
inc
pop
dec
test
pop
pushf
dec
test
jle
filds
lods
push
adc
inc
mov
fldl
hlt
int3
pop
mov
pushf
jmp
fsubrs
inc
orb
mov
inc
imul
xor
stos
pop
xchg
push
jge
mov
fwait
cltd
dec
movsl
call
popf
adc
mov
mov
shl
insl
mov
movsb
inc
rolb
mov
sub
xchg
mov
loopne
xchg
std
jnp
and
dec
add
testl
xchg
fistpll
ljmp
pop
stos
mov
sbb
and
push
xchg
dec
inc
adc
ficompl
insl
cmpb
jmp
mov
rcll
xchg
inc
lahf
popf
pop
cmp
insl
icebp
mov
mov
xor
stc
xor
jne
mov
stc
addl
lods
lock
sbb
fcoms
mov
imul
and
leave
xchg
nop
xlat
stos
les
shrl
cli
dec
cs
mov
xchg
or
xchg
dec
sbb
ret
movsl
insl
mov
sarl
insl
in
stos
mov
sahf
test
xchg
popf
mov
mov
inc
mov
or
xor
jns
cmp
jnp
jp
into
dec
push
or
sarb
dec
test
mov
sbb
mov
out
andl
dec
mov
repz
and
in
faddp
fs
mov
xchg
daa
jmp
pop
cmp
cmc
mov
stos
xchg
mov
les
jmp
inc
mov
sbb
out
jge
int3
adc
pop
pop
hlt
cmp
lods
adc
aam
mov
add
fwait
mov
loope
adc
jp
adc
jns
xchg
hlt
jmp
mov
daa
ret
icebp
cli
sub
pop
icebp
mov
test
testl
push
dec
pop
or
push
aad
xchg
or
push
lock
mov
lahf
mov
inc
insl
mov
jae
jl
cmp
adc
ja
inc
mov
pop
test
mov
test
sahf
xchg
jl
ljmp
push
adc
sbb
or
or
divl
stc
xchg
add
adcb
dec
aam
push
sub
lret
mov
inc
sbb
ret
call
push
dec
xchg
enter
sub
inc
inc
vphaddubd
jl
inc
mov
sbb
adc
push
mov
inc
shlw
test
test
loop
dec
pop
xchg
push
fsubrl
out
negb
inc
lock
fmulp
fwait
cmpsl
aam
inc
aas
and
jo
vmwrite
daa
rol
rcrb
dec
pushf
dec
and
lods
stos
sbb
add
dec
cmc
xor
test
mov
xchg
in
mov
and
fcoms
and
or
stos
cmc
pop
imul
stos
mov
fwait
lods
into
nop
mov
movsb
adc
dec
or
call
ss
pop
andl
mul
ljmp
add
mov
mov
orb
push
fsubl
dec
xchg
out
add
popa
scas
fxch
pop
or
mov
cmp
aad
dec
sub
dec
sahf
call
or
fistl
lret
movl
mov
xchg
jecxz
inc
mov
aaa
or
rorb
or
dec
les
xor
mov
xchg
jmp
lcall
loop
mov
imull
sarl
sbbl
nop
mov
int3
aaa
lret
addb
addb
add
rcl
sahf
mov
shl
ljmp
dec
leave
jp
add
scas
adc
and
mov
or
dec
add
int
mov
sub
loopne
sub
lahf
movsl
xor
pushf
or
mov
shlb
cmpsb
fdivs
hlt
or
int3
in
push
jg
sub
sbb
mov
mov
mov
lret
pop
out
mov
inc
inc
mov
xlat
mov
xor
lods
das
mov
mov
mov
and
sbb
fs
xchg
mov
ss
dec
pushf
adc
fildll
fdivp
insl
mov
movsl
xchg
mov
inc
pusha
test
mov
xchg
arpl
fisubrs
bound
cs
test
shl
and
pop
pop
cvtpi2ps
fst
pop
scas
dec
push
addr16
push
insl
dec
inc
jae,pn
and
cmp
sbb
push
js
and
sub
push
and
sahf
dec
mov
data16
xchg
dec
movsw
dec
mov
pop
mov
icebp
lahf
jno
sbb
daa
lock
mov
lret
dec
js
in
xor
cmpl
data16
and
mov
repz
lret
mov
and
insb
aad
leave
jnp
into
daa
fsts
adc
call
xlat
mov
or
xor
mov
cmp
shlb
xchg
fdivrp
pusha
out
sbb
addr16
adc
jne
push
mov
test
mov
inc
and
sti
mov
lret
push
loopne
test
inc
dec
xlat
add
mov
rcll
jne
push
push
adc
fs
cmp
add
pop
xchg
mov
cmpsl
pushf
shlb
lret
mov
ds
lods
repz
ret
or
jle
and
insb
xchg
fsubrs
imul
fnstsw
mov
movsl
jno
icebp
lds
inc
xor
and
mov
data16
es
pusha
sub
lahf
insl
hlt
jl
lea
xor
insl
xchg
fimull
insl
mov
xchg
sub
jbe
cmp
mov
mov
adc
inc
stos
insl
mov
scas
sbb
xor
lock
dec
lock
sahf
out
ss
add
cli
ficoml
mov
mov
dec
subb
inc
pop
cmpsb
repz
xchg
sub
cmpsb
mov
cmpl
pusha
sub
jmp
mulb
mov
and
jmp
ret
push
roll
outsb
repnz
mov
notb
data16
icebp
xchg
jmp
popf
mov
movsl
test
mov
ljmp
cmc
ret
iret
addl
sbb
rorl
mov
rcll
imul
movsb
aaa
inc
jge
sbb
ret
mov
xor
jbe
xlat
bound
out
mov
aaa
and
imul
out
cmc
inc
mov
cmc
mov
hlt
lahf
jge
dec
mov
cmp
push
inc
cmp
mov
mov
aaa
mov
mov
bound
jo
loop
out
dec
ret
and
aad
aas
pop
push
pusha
in
pop
rol
add
cmp
inc
mov
or
pop
int
in
push
xchg
jl
sub
or
dec
xchg
inc
sbb
inc
cmpsb
idivb
test
popa
mov
stos
xchg
mov
stc
mov
rcl
sahf
mov
cmpl
add
dec
xor
and
or
faddl
js
cmp
stos
pop
xchg
pop
inc
mov
call
dec
test
int
or
or
les
fwait
push
mov
cmp
dec
sbb
sub
sub
iret
fnstsw
insb
aaa
dec
out
cmpb
xchg
sub
cmp
cld
shlb
mov
sbb
xor
mov
int
pop
jns
jg
mov
mov
inc
idivl
ret
mov
lahf
sar
inc
mov
or
mov
add
inc
ljmp
dec
and
xchg
sarl
xchg
bound
push
dec
clc
fndisi(8087
jnp
out
sub
popf
xor
test
pop
cmp
xchg
cld
and
mov
or
dec
shll
cmpsb
aam
lcall
jbe
test
inc
aas
mov
dec
jge
and
and
push
mov
jnp
ja
fimull
adc
add
jge
add
mov
pop
into
add
dec
xor
rol
xor
stos
aad
and
es
sbb
and
inc
jmp
mov
enter
or
push
das
sub
inc
xor
jp
sbbb
inc
shrl
ss
icebp
aad
rcr
int
mov
jl
in
mov
mov
xor
and
int
cs
fnstsw
popf
adc
xchg
inc
pop
repz
arpl
push
mov
enter
in
jbe
stos
push
xchg
adc
aaa
mov
into
ds
jnp
sbb
notb
lds
imul
adc
aam
cmp
pusha
push
pop
xor
sub
pop
dec
sti
icebp
xlat
rclb
gs
pop
shlb
repnz
shlb
mov
mov
and
repz
add
inc
orb
xor
mov
mov
andb
loop
mov
lods
sbb
pop
inc
dec
mov
lods
rolw
int3
lea
fisubrs
sbb
fdivs
mull
out
or
cmp
cmp
ljmp
cmp
and
insl
loop
xlat
mov
stc
pop
add
cld
orb
sub
fcoms
mov
pushf
pusha
das
lods
mov
or
push
jge
add
lods
lret
fucomp
je
fildll
jae
add
nop
jnp
inc
into
fadds
push
add
sbb
adcb
je
xchg
pushf
pushf
rorl
movsb
lods
cmpl
xchg
call
mov
push
mov
add
mov
inc
cltd
inc
icebp
das
loope
ds
xorl
or
imul
pop
jb
daa
push
leave
mov
adc
mov
and
cli
test
and
jl
repnz
mov
rolb
lods
mov
ds
les
and
inc
cltd
mov
popl
sahf
sahf
dec
test
pop
cmpsb
ss
cmp
pop
add
in
out
idiv
fcmovu
adc
pusha
xlat
hlt
mov
mov
shrb
fbld
cltd
adc
xchg
pop
repz
fstl
adc
loop
xchg
movsb
pop
scas
mov
fldcw
mov
mov
cmp
and
roll
das
call
and
adc
stos
add
pushf
pop
fistpl
call
xor
imul
jp
mov
std
jo
out
test
pop
testl
adc
pusha
in
jb
xchg
mov
xchg
repz
cmp
xor
dec
or
pusha
insl
cmovl
sti
push
dec
fwait
pop
inc
cltd
out
or
mov
dec
xchg
test
inc
fildll
shlb
pop
int3
cmp
mov
pop
in
mov
movsl
and
push
mov
xor
lahf
cmpsl
cmovge
loop
jns
rcll
rcl
pop
adc
cwtl
in
xchg
cwtl
or
and
and
addr16
inc
ret
scas
mov
out
push
dec
xor
push
adc
imul
cmovo
inc
into
test
addl
jo
pop
ljmp
push
cmp
mov
mov
adc
daa
test
mov
adc
movsb
mov
cs
pop
mov
jl
and
pop
aad
pushl
xchg
add
sub
mov
xchg
imul
pop
xchg
inc
fcoml
outsl
pop
cmpsl
jnp
add
aaa
fsts
pop
inc
loop
mov
lock
in
data16
sub
xchg
sub
es
and
sbb
adc
ret
push
into
adc
jbe
pop
mov
pop
add
adc
dec
or
mull
cmc
lcall
mov
movb
cld
jg
pop
sbbb
pop
mov
dec
xchg
ja
push
jne
push
mov
mov
jo
and
pushf
js
jp
fisubrl
ret
mov
fisubs
shlb
verw
jb
pop
scas
mull
push
aam
or
test
bound
stos
jae
pop
xor
jmp
aam
push
cmp
jg
cld
mov
fcomps
jo
or
mov
inc
clc
pop
cmp
dec
aam
lret
and
or
xor
mov
out
in
and
enter
cmp
lea
mov
lret
out
cltd
hlt
jbe
push
cwtl
jecxz
or
pop
add
ds
imul
inc
arpl
negl
push
int
or
cmp
jecxz
div
clc
or
lods
das
cltd
xorb
pop
add
in
dec
sbb
leave
pusha
iret
dec
cs
mov
arpl
cmp
or
mov
pop
push
mov
aas
repnz
lds
inc
rcl
dec
and
repnz
mov
or
pop
ljmp
dec
loop
mov
dec
dec
scas
sub
dec
arpl
push
mov
sbb
or
addr16
jge
out
lahf
inc
push
dec
cmovns
mov
xor
dec
ljmp
adcb
pop
adc
jp
inc
mov
mov
int
jb
orl
inc
xor
es
aaa
fnstcw
mov
lret
out
mov
std
adc
mov
movsl
hlt
fwait
je
pop
add
imul
lret
call
jg
roll
push
test
mov
cmpl
xor
std
rolb
mov
mov
loopne
mov
nop
out
lods
hlt
xchg
inc
ret
dec
sbb
decl
jae
xor
push
clc
lock
dec
lret
aad
pushf
dec
mov
test
mov
add
sub
fwait
lods
cmp
lea
popf
pop
imul
js
xchg
bound
xchg
hlt
loop
cmp
xlat
cmp
lahf
imull
movsb
call
pop
xchg
sbb
push
mov
loopne
je
add
xchg
push
mov
sahf
inc
mov
sub
dec
push
jl
aam
testb
mov
sbb
sub
mov
sbb
daa
jne
or
ljmp
and
mov
sub
lea
shl
or
imul
mov
fcmovnbe
out
lret
add
test
ret
jae
enter
push
jnp
test
xchg
mov
lods
mov
lahf
and
lahf
pop
cmpsl
rcll
ret
lds
js
scas
xchg
xchg
lods
ret
addr16
mov
orb
push
gs
pop
fstl
cmpsl
test
sahf
sub
bound
movsb
pusha
add
mov
adc
xchg
cmpsl
arpl
jl
str
or
push
stos
into
cli
std
decl
mov
out
je
cmp
inc
jecxz
adc
push
mov
es
xchg
or
cmp
repz
push
data16
mov
aas
aam
xor
loopne
jns
test
jge
dec
fiaddl
jb
mov
incb
jns
sub
pop
scas
mov
jecxz
fidivl
and
fwait
pop
cmpsb
push
adc
fadds
mov
orl
sahf
add
inc
mov
test
decl
lahf
ficompl
sbb
stos
xchg
das
push
lret
sbb
call
andb
dec
popa
add
rorl
insl
cmp
orb
icebp
push
movsb
mov
leave
push
pop
and
shr
jmp
fdivrl
inc
cmp
jmp
leave
clc
cmp
movsb
sbb
inc
jl
aas
cwtl
xor
movsb
push
sti
push
xor
daa
inc
ret
xchg
test
test
shlb
mov
xchg
insb
jbe
push
fwait
movsb
mov
mov
pop
cwtl
les
mov
mov
dec
fadds
xor
cwtl
arpl
stc
cmp
cmpsb
pushf
cmp
enter
das
dec
test
fsub
jae
repz
inc
mov
push
repnz
or
adc
sub
add
or
repz
lods
jecxz
cli
or
fwait
and
lods
xchg
scas
fildl
add
sti
xchg
arpl
loop
push
pop
sbb
mov
int
into
push
inc
pop
mov
je
pop
push
and
or
add
jle
dec
cmpsl
push
mov
and
pop
leave
sub
clc
addr16
mov
inc
shlb
mov
inc
and
pop
aas
cmpsl
add
test
imul
cld
dec
mov
mov
hlt
push
fiaddl
les
mov
popf
mov
mov
mov
jae
fwait
lea
and
cmpsl
stc
fmull
fld
jb
mov
out
mov
imul
pop
and
in
js
call
faddl
mov
call
sbb
fcoml
rcrb
inc
add
ffreep
repz
lock
mov
stc
je
lock
jge
test
ret
test
ret
xorl
adc
cmc
clc
cmpsl
inc
jecxz
loop
mov
pushf
mov
sti
and
sub
sarl
cmp
mov
inc
sbb
push
lock
adc
fbstp
mov
hlt
mov
push
inc
dec
les
sahf
xor
xor
inc
clc
cmp
jnp
mov
loop
scas
sbb
repz
or
push
stos
into
cli
loop
decl
mov
xor
mov
stos
cmp
pop
scas
dec
jnp
lods
xlat
push
mov
sub
and
call
push
dec
add
inc
jl
sbb
mov
shr
adc
pop
cmp
fidivs
pop
das
mov
mov
push
sub
mov
push
sub
mov
lret
clc
push
jl
mov
lret
sbb
lds
in
inc
fwait
out
into
jecxz
cld
test
in
dec
and
out
iret
arpl
jmp
xchg
out
int3
loop
mov
xor
adc
mov
xchg
shll
cmp
jg
mov
fstpt
cmp
jg
mov
ret
jae
cmp
mov
pop
lret
jnp
cmp
push
inc
iret
jg
mov
js
test
idivl
into
fldt
stos
dec
pop
leave
int
je
sub
fucomi
fucomp
push
or
int3
fldt
mov
dec
pop
dec
adc
iret
sbb
mov
pop
mov
sub
ret
jl
adc
mov
pop
lret
adc
aaa
ret
fucomip
pop
das
or
mov
pop
or
or
xor
fildll
cmp
add
mov
pop
dec
or
add
xor
fildll
clts
xchg
mov
mov
fwait
out
jecxz,pt
cld
lea
std
addr16
rcrl
xor
shrl
mov
lret
fisttpll
fbld
dec
and
lret
shll
cmp
xchg
test
fists
arpl
sbb
mov
mov
stc
mov
push
sub
inc
pop
xlat
or
inc
pusha
jns
fucomi
repnz
std
inc
push
mov
push
or
mov
inc
sbb
mov
adc
loop
mov
loop
push
jae
jno
mov
push
inc
lea
jmp
clc
cmp
repz
xchg
sbb
xchg
arpl
mov
shrl
push
or
aad
cmp
incb
mov
stc
push
add
cmpsb
inc
inc
mov
insl
lds
fdivr
fsubl
ss
lret
inc
mov
sbb
mov
outsl
adc
int
adc
push
xor
dec
mov
xlat
scas
mov
leave
adc
mov
hlt
lcall
pop
aad
pop
and
jl
ja
stos
cmp
ljmp
loopne
sub
mov
adc
mov
xor
fldt
imul
cmpsl
xor
leave
test
leave
sbb
lods
cmpsb
fldenv
int
jo
outsl
rcrb
add
sbb
jg
stos
bound
add
xchg
sub
xor
movsl
adc
xchg
pop
icebp
mov
popa
lcall
sahf
int3
push
fs
jle
aad
fwait
inc
jmp
incb
mov
fidivs
cmc
cs
xor
movsb
push
pop
xor
pop
dec
mov
jg
hlt
insb
or
mov
inc
imul
cmp
testl
fimuls
xchg
sbb
cmp
mov
cmp
rclb
push
jmp
lds
jmp
jno
pop
jae
outsb
xor
shlb
dec
mov
or
lahf
es
into
loopne
and
sub
shlb
mov
ss
jg
push
repnz
mov
push
mov
repnz
or
fsubs
scas
jg
leave
loope
jle
scas
sbb
leave
icebp
cmp
adc
xchg
les
mov
push
cmc
mov
inc
mov
popa
aam
xor
ret
inc
sbb
mov
insl
xlat
enter
mov
xchg
imul
fldt
xchg
enter
mov
hlt
in
out
mov
inc
pop
decb
jecxz
sbb
movsb
idivl
shrb
mov
imul
daa
jb
aam
xchg
in
aam
ret
scas
add
test
mov
data16
xchg
popf
in
and
aad
cmp
mov
inc
pop
cmp
les
cmp
and
popf
repz
stos
adc
stc
xor
push
mov
xor
scas
lcall
incl
gs
fistl
dec
push
fistps
cmp
test
cmp
and
sub
adc
jl
and
inc
mov
call
push
sub
and
out
dec
aam
lret
gs
call
or
les
popa
jecxz
call
mov
mov
xchg
incb
sbb
or
adc
inc
xlat
adc
xor
mov
adc
divl
addr16
mov
mov
call
fcmovbe
ficomps
test
lods
fdivrs
in
ja
lahf
lods
xlat
pop
cmc
cld
fnstcw
adc
mov
iret
push
sbb
fisttps
sbb
push
xchg
ljmp
mov
bound
sub
or
lds
lods
in
cwtl
stos
mov
push
push
orb
push
pusha
popf
mov
jbe
lahf
mov
aad
fwait
pop
mov
add
bound
mov
push
xchg
pop
inc
lock
inc
cmp
mov
dec
sti
sbb
pushl
mov
jb
adc
adc
jecxz
xor
xor
pop
gs
cmpsl
sahf
and
fs
ds
shrl
jae
cmpsl
hlt
pop
in
adcb
fnstcw
mov
stc
rcl
inc
int
add
repz
inc
xor
dec
enter
icebp
sbb
mov
or
jle
decb
sbb
cvtpi2ps
mov
sbb
sbb
popf
into
or
or
pop
push
push
dec
jp
pushf
aad
sti
xor
das
jno
mov
nop
inc
adc
fidivrs
popa
ret
pop
push
push
jl
stc
xchg
xchg
sahf
dec
cmpsl
add
pop
and
movsb
push
sub
pusha
in
lds
push
in
mov
in
out
fcmovne
adc
pop
mov
xchg
aad
mov
mov
sbb
jb
xor
popl
addr16
pop
rorl
aam
pop
push
push
pop
ljmp
and
pop
cmpsl
jnp
daa
cmp
sbb
out
enter
add
mov
fdivrs
sub
lret
inc
sub
das
gs
das
imul
push
push
jp
arpl
lea
xchg
mov
mov
push
pop
jno
cmpb
mov
push
fdivrs
cmpsl
push
data16
inc
jne
dec
mov
mov
mov
and
stos
mov
pop
das
lods
push
jg
lds
cli
lods
dec
sbb
scas
mov
testl
mov
shll
iret
enter
addl
in
xor
mov
dec
movsl
and
nop
int
and
push
pusha
jmp
rcrl
jae
sub
cmp
fisttps
and
and
mov
xor
cmp
jle
test
es
test
fildl
xorb
or
ret
sbb
jbe
in
in
push
sub
fimull
ss
sti
incb
fbstp
pop
mov
jae
dec
icebp
popf
jmp
push
jae
cmp
jne
mov
or
icebp
das
in
lods
mov
cli
cwtl
cmpsl
inc
pop
add
es
ret
shlb
jl
das
arpl
inc
jmp
aam
lahf
sbb
adc
mov
idivl
bnd
ror
push
xchg
loop
test
loopne
and
mov
xor
ljmp
inc
add
ret
into
sub
test
jno
add
push
mov
and
push
cmp
and
mov
xchg
clc
paddusb
mov
scas
call
data16
fbld
cwtl
popa
or
inc
daa
and
loop
mov
decb
mov
or
enter
xchg
neg
mov
push
js
fcmovbe
daa
push
pop
pushf
sbb
xchg
mov
int
xchg
stc
xor
outsl
enter
pop
pop
mov
cltd
add
sub
mov
xlat
pop
mov
mov
jns
mov
xor
push
rcrl
mov
sbb
inc
xor
call
mov
les
gs
mov
cld
adc
pop
cmp
je
cmp
and
mov
jbe
xor
ror
lods
or
hlt
xchg
mov
fucomp
shll
xchg
rclb
pop
insb
nop
clc
ret
sub
test
jecxz
xchg
mov
mov
dec
and
cmc
in
push
xchg
loop
xchg
andb
sub
out
xchg
jns
ret
jno
sbb
popa
mov
sub
fsubrl
or
icebp
loopne
das
call
std
inc
imul
stos
movsl
popf
push
jnp
and
mov
sub
les
sub
jne
mov
or
cmp
rcrb
fstpl
dec
sbb
cmpsb
hlt
mov
mov
inc
mov
lret
stos
xorb
aas
mov
push
int
test
aaa
and
ljmp
xor
scas
dec
outsl
clc
out
notl
jbe
mov
clc
mov
cld
add
je
loop
xor
dec
adc
cmp
in
scas
lds
pop
lea
jmp
scas
fiaddl
icebp
test
test
ficompl
ss
xchg
cmp
les
inc
pop
mov
dec
pop
lods
or
lods
inc
inc
dec
cmp
imul
sbb
shll
call
cmp
jo
xchg
push
shrb
adc
into
fcomip
mov
dec
mov
cltd
aad
incb
jmp
loope
es
cmc
insl
pop
mov
lea
ret
les
fists
enter
pop
test
pusha
adc
ret
mov
movsl
mov
dec
das
or
mov
shll
and
imul
inc
inc
pop
call
inc
pop
mov
lock
jbe
cmc
jo
stc
test
cmp
imul
jg
enter
and
fsubrl
fwait
sahf
pop
and
test
dec
lock
mov
sbb
dec
mov
into
inc
mov
xchg
les
adc
repnz
imul
test
outsb
push
cmp
push
add
xchg
lcall
stc
bound
loopne
cs
add
filds
sti
sub
xor
in
adc
repz
in
ds
adc
call
add
inc
xor
xchg
cmpsb
pop
out
fwait
mov
jge
jg
insb
sbb
movsl
int
outsl
ror
fidivs
pop
adc
xor
mov
mov
mov
mov
in
sub
test
insl
sbb
into
sub
xor
cmp
cmp
das
lret
and
or
fiaddl
movsb
call
shrb
or
mov
mov
adc
aam
xor
call
xor
in
push
jae
bound
xor
mov
pop
aas
sbb
icebp
fildll
pop
push
mov
insl
insl
int
movl
sbb
ret
and
xchg
jo
push
aaa
fwait
lods
push
test
push
scas
sub
mov
fsubr
in
lds
je
movsb
xor
lahf
jl
pop
dec
cmp
pop
inc
mov
mov
popf
xchg
jge
dec
and
rcr
pop
out
push
scas
fbstp
jnp
fistps
ljmp
sbb
cmp
movsb
jecxz
out
inc
xor
mov
jecxz
push
mov
lcall
out
out
aas
ror
dec
rcll
in
adcl
xchg
jecxz
out
lahf
jno
in
call
insb
sti
jecxz
rol
sbb
push
sbb
xor
mov
jne
mov
mov
pop
dec
adc
dec
jl
jge
scas
mov
ss
repnz
stos
rorb
lods
repz
fs
movsl
jp
xchg
outsl
imul
call
xlat
and
mov
outsb
lods
lret
mov
outsl
add
lret
out
pop
scas
jbe
int
popf
lds
sbbb
pusha
adc
sahf
mov
mov
xchg
xor
jl
push
mov
add
sub
push
mov
mov
lds
stos
out
and
lods
mov
dec
xchg
mov
mov
pusha
jo
dec
shll
and
popf
fldt
xor
and
rcpps
in
pop
dec
int
int
dec
sub
aam
mov
push
mov
pop
std
cmp
cmp
and
or
dec
lahf
lret
xchg
sbb
subl
fildl
lret
adc
jp
mov
fs
pop
sub
cmpb
lcall
mov
test
lods
sbb
shl
xchg
xchg
arpl
jle
mov
cmpsl
in
mov
enter
pushf
mov
inc
sbb
push
push
sub
and
cpuid
ret
sbb
cltd
repnz
and
test
ss
and
jmp
jl
mov
aam
repz
mov
pop
ds
lret
xor
out
rorl
mov
ret
jp
sbb
into
sub
enter
sbb
add
test
pop
shlb
and
fucomip
sub
int
pop
mov
stos
mov
dec
and
and
cmp
pop
or
cmpsl
push
shll
xlat
add
clc
sti
jle
add
enter
xor
mov
mov
cmp
mov
dec
pushf
jecxz
outsl
in
lods
dec
fwait
mov
cltd
push
add
mov
fwait
stos
call
in
jae
bound
sub
xchg
cld
stc
cltd
mov
mov
outsb
fisubs
pop
loopne
dec
jne
test
ret
pop
add
movl
dec
insb
jge
and
inc
ljmp
pop
hlt
sbb
jle
adcl
sbb
adc
jnp
out
dec
push
stos
inc
fildl
adc
lcall
test
enter
cmpsl
ret
arpl
pop
jnp
mov
dec
stc
lcall
das
xchg
dec
inc
adc
jns
and
mov
inc
jl
popf
xchg
xchg
in
and
popf
inc
cmpsb
aam
cmp
pop
jmp
pop
jno
cmpb
rcll
push
imul
fstps
iret
sbb
add
mov
sbb
cmp
pop
pusha
add
mov
dec
sub
test
pop
and
scas
mov
rorl
mov
xchg
mov
popf
fldcw
sbb
pushf
ret
adcl
inc
pop
inc
stos
neg
lea
js
inc
push
adc
jne
nop
dec
sub
jnp
shrb
cltd
cmpsb
mov
jp
enter
movsl
js
popf
popa
test
pop
dec
xorl
add
aad
call
test
jnp
adc
scas
dec
add
popl
jno
cmpsl
sti
gs
jnp
aad
fcomps
shlb
insb
aaa
and
imul
xchg
pop
rclb
inc
cmp
scas
xlat
xor
mov
push
sahf
xor
and
jns
push
inc
adc
pop
in
jge
sarb
cmpsb
xchg
popf
adc
dec
inc
mov
addr16
scas
inc
xchg
dec
and
stos
push
sahf
popf
jge
rolb
addr16
mov
cld
mov
and
imul
lock
sub
arpl
lcall
test
fsubrl
xchg
mov
enter
sub
mov
sarl
js
ds
jg
mov
jns
xor
sub
leave
aas
gs
js
es
sbb
cwtl
jb
rcll
and
clc
sub
jp
inc
addr16
sbb
sub
push
mov
int3
leave
jae
fistps
and
xor
jb
sbb
int3
test
int
inc
adc
xchg
lods
popf
mov
hlt
hlt
dec
mov
push
jbe
rcll
lds
dec
test
movsl
cmc
pop
adc
dec
lret
les
std
pop
xchg
out
and
cmc
loope
or
lea
std
pop
add
cmpsb
shl
insb
sahf
aad
xchg
mov
cmp
dec
paddusb
push
dec
sbb
push
ljmp
pop
pop
add
push
sti
adc
xlat
xor
and
add
sbb
pushf
testb
inc
xchg
or
stos
orb
push
sub
aad
jp
mov
scas
inc
jb
out
into
mov
into
xor
or
sbb
mov
fwait
push
dec
mov
xchg
dec
mov
data16
fldenv
pop
pop
imul
add
repz
xchg
cltd
lea
stc
out
xor
cmp
sbb
and
sub
xchg
sub
sub
mov
adc
pop
pop
mov
fisttpll
repz
dec
sbb
inc
sbb
jge
loopne
ja
xor
cli
add
das
int
push
mov
test
push
xchg
gs
adc
or
addr16
in
fisttpl
lret
push
lahf
repnz
fstl
test
push
xchg
fbstp
ds
into
nop
cmp
or
pop
pushf
les
xlat
stos
lds
xchg
sbb
fdivr
mov
mov
adc
mov
addr16
sub
adc
pop
push
sbb
push
dec
cmp
in
repz
sete
pop
adc
or
add
or
insb
test
pop
stc
pop
sub
into
fisubrl
push
into
lcall
cmpsl
ret
bound
jmp
pop
sti
mov
inc
mov
and
push
mov
js
mov
sub
dec
or
mov
xor
iret
mov
and
inc
std
and
sub
sbb
add
fucomip
hlt
cmp
fists
add
lock
dec
or
cltd
shrb
pop
dec
icebp
cli
pop
lahf
addr16
dec
push
jp
leave
dec
loop
dec
popf
sbb
mov
repnz
pop
mov
lock
sbb
pop
mov
mov
cmpsb
xor
adc
sub
adc
push
scas
or
cltd
sub
cmp
movsl
and
test
pushf
sbb
cmpsl
std
fistpl
fsubl
mov
mov
iret
lahf
aad
out
rcll
xchg
sub
clc
push
leave
pop
adc
pusha
jo
jnp
imul
pop
insl
test
fwait
add
mov
mov
mov
inc
jmp
subl
nop
inc
xor
jnp
sub
loop
mov
inc
roll
test
sub
add
pandn
repz
push
push
jne
cmp
mov
sub
pop
ret
mov
sbb
aaa
lds
fwait
push
sbb
inc
insb
cltd
je
adc
mov
sub
inc
pop
dec
imul
aas
imul
scas
rcrl
clc
add
in
sbb
cltd
xchg
std
imulb
fstpt
cmp
add
ret
dec
lods
pop
xchg
outsb
and
pop
shlb
push
movsl
xchg
and
cmc
mov
nop
nop
ss
into
ss
repz
dec
inc
inc
imul
test
mov
dec
push
out
cmp
mov
xlat
insb
imul
xchg
pop
movsb
mov
pop
cmp
call
fwait
pop
data16
popf
add
push
pop
or
cmp
sub
out
mov
push
adc
pop
je
fimuls
mov
dec
sahf
dec
mov
subl
mov
xchg
imul
sarl
into
sbb
inc
adc
cmp
mov
sub
add
add
mov
movsl
push
push
int
cltd
lret
movsl
ret
test
repz
stos
push
fwait
sub
sbb
jno
scas
sbb
xchg
lret
fldl
push
je
dec
mov
in
cltd
dec
push
test
and
add
mov
xchg
mov
pusha
jo
ljmp
cmp
pop
or
mov
out
push
cmp
iret
js
es
and
sbb
out
loopne
xor
into
gs
jmp
mov
and
push
test
gs
fucomp
push
mov
mov
and
mov
scas
mov
shlb
and
or
test
xchg
rcll
add
adc
loopne
addr16
pop
jo
fisubrl
add
js
sahf
push
pop
jl
xor
push
cmp
xchg
dec
hlt
sbb
and
and
adc
mov
and
jge
add
mov
sub
mov
jae
leave
and
dec
sbb
sarl
add
and
stc
or
jp
and
iret
jae
jns
inc
pop
int3
inc
dec
popf
lret
loope
mov
mov
rcrb
add
and
lret
push
push
xchg
popf
pushf
jp
iret
cmovno
cmp
pusha
loop
in
shll
dec
pop
cmp
popf
mov
add
sbb
inc
data16
or
shr
add
pop
movsb
fs
mov
pop
xchg
imul
inc
sbb
jbe
jl
cmp
lea
mov
adc
xchg
pop
jo
mov
dec
inc
xor
cmp
inc
fisttpll
mov
mov
lods
or
mov
and
cmp
ret
xchg
pop
dec
inc
mov
das
push
in
sbb
pop
or
pop
push
xlat
hlt
scas
stos
xlat
pusha
push
adc
mov
scas
dec
fadd
jle
arpl
test
and
out
insl
pop
jge
xchg
sahf
fstl
enter
inc
dec
out
outsb
push
roll
cs
xor
hlt
push
rclb
mov
inc
scas
je
lock
push
popa
std
cmp
jg
xchg
dec
and
cli
jnp
inc
mov
mov
and
sbb
sbb
rclb
xor
mov
pop
sbb
repnz
xor
and
jmp
inc
ret
sti
sbb
mov
mov
xor
inc
pop
mov
dec
jb
dec
nop
sub
movsl
enter
fsubr
or
orl
mov
push
xor
pop
mov
xor
std
mov
rcrb
lahf
mov
lock
cs
adc
mov
dec
movlps
jmp
mov
les
xor
mov
and
dec
fistl
sarl
les
inc
push
sbb
test
jge
popf
mov
in
cmp
int
pop
cmpsb
mov
xchg
imul
test
push
or
leave
pop
xchg
sbb
push
inc
fwait
and
jecxz
xchg
adc
cs
dec
mov
rclb
test
mov
in
imul
xor
jge
in
or
sbbb
cmpsb
inc
loope
jno
cltd
rcll
inc
test
sbb
mov
or
xor
adc
xchg
fdivrs
insl
pop
dec
adc
xor
lods
mov
mov
test
stos
gs
mov
pop
repnz
jge
lods
sub
sub
aad
ss
xor
or
scas
xor
lret
movsl
movsl
pop
pushf
dec
and
into
dec
cmp
push
dec
fwait
test
cmc
sbb
xlat
xor
movsb
cld
lds
mov
fiaddl
test
scas
xchg
stos
stc
inc
xor
mov
cmp
popf
fs
js
mov
pop
popf
pop
pop
pusha
es
movsl
pop
stc
jns
sbb
popf
scas
inc
fwait
out
push
xchg
popa
stos
inc
add
or
add
dec
sub
lcall
sbb
js
cltd
mov
and
sbb
movsb
adc
lahf
xchg
jno
lea
fmuls
mov
test
mov
aam
or
dec
and
add
cmc
testb
neg
xchg
mov
lret
dec
call
jg
addr16
arpl
mov
clc
sti
mov
adc
out
mov
lock
or
cmp
dec
in
popa
icebp
mov
lret
mov
mov
sub
shr
dec
xor
dec
xor
test
movsl
mov
mov
cmp
lods
cwtl
adc
movaps
sbb
push
sbb
subl
stos
ja
testb
sub
fwait
lods
jle
js
daa
mov
cmpsb
jno
mov
push
xlat
aaa
jmp
mov
ss
neg
sub
out
mov
ds
jp
xor
loope
xchg
je
push
pop
dec
xlat
insb
popa
mov
gs
mov
mov
icebp
test
arpl
movsb
pop
inc
aam
dec
xorl
enter
push
ret
popl
popa
mov
adc
mov
cld
movl
dec
pop
and
pop
xchg
lds
movl
icebp
pop
loop
push
sahf
or
icebp
out
jae
and
mov
imul
mov
stc
ret
pop
mov
iret
mov
aaa
aaa
xchg
testl
mov
fadd
mov
mov
cltd
add
call
ret
and
add
add
mov
aad
mov
inc
shl
sbb
and
inc
fwait
sbb
cmp
fisubrl
fs
lcall
pushl
fistl
int
push
jne
adc
sti
repz
ret
mov
xchg
jge
mov
inc
es
push
mov
ret
ror
mov
cltd
cmp
insb
repz
ss
loope
mov
lcall
insl
pop
dec
sbb
jbe
cmp
mov
cld
repz
and
notl
out
in
sub
fs
mov
enter
pop
jmp
jnp
pop
repz
xor
outsb
xor
frstpm(287
cmpsl
outsl
sub
mov
lods
divb
xor
les
mov
jae
scas
rcrl
mov
pop
dec
add
jo
fsincos
xor
push
data16
jae
pop
push
xchg
mov
inc
shlb
adc
pop
jl
jb
inc
pop
push
pop
fmuls
pop
pusha
jle
mov
and
xchg
inc
fwait
callw
sti
stos
rolb
or
shl
sub
xor
xchg
lahf
icebp
push
test
fs
inc
pop
xchg
adc
push
mov
sub
stc
into
clc
and
pop
pop
adc
out
push
pop
pusha
mov
pop
xchg
icebp
mov
in
sbb
mov
mov
jns
enter
sub
mov
call
scas
sub
add
xor
sbb
sbb
sbbl
repnz
andb
mov
shlb
adc
pop
into
in
jg
xor
aad
dec
adc
pop
pop
xchg
mov
cli
shr
cs
sbb
xor
arpl
js
pop
aam
pop
pusha
or
adc
xchg
dec
rorl
stos
sbbl
ret
sarl
mov
lods
cmp
jmp
ret
fs
iret
cmpsl
std
and
cmp
or
mov
xor
mov
mov
aam
pop
shr
imul
xchg
push
jecxz
cmp
mov
add
pop
pusha
pop
pusha
mov
sti
cwtl
pusha
fbld
mov
das
xchg
inc
and
push
cmpsl
push
sbb
je
or
mov
and
in
call
bts
sbb
mov
ljmp
push
sbb
ret
mov
inc
mov
cmpb
lret
inc
mov
cld
push
sbb
mov
dec
lods
stc
imul
xchg
xorb
xor
in
lcall
dec
dec
loopne
lds
sbb
inc
jl
dec
rcl
pop
jne
xor
lods
pushf
rcrl
add
jecxz
jbe
cmpsb
adc
dec
js
jge
mov
jl
das
sti
lcall
cwtl
imul
or
jae
int
call
push
sti
xchg
je
inc
cmpsb
jge
inc
insb
pop
outsb
mov
mov
sub
shl
sbb
push
out
fucomi
dec
pop
dec
mov
mov
sbb
test
adc
inc
push
adc
jns
inc
push
inc
inc
add
cmpb
xchg
or
cmc
ficoms
inc
pusha
push
rorl
jge
dec
lahf
stc
test
fwait
jecxz
jecxz
add
ret
xchg
fdivrl
ret
mov
sub
xlat
test
movsb
clc
dec
sbb
push
lahf
mov
jge
pop
scas
xchg
decl
dec
xor
pop
aad
xor
pop
pusha
test
sbb
or
jne
jnp
xchg
pop
dec
insl
xor
add
and
and
mov
xorl
iret
dec
scas
lahf
fnstsw
loopne
iret
xchg
jecxz
lods
xor
scas
mov
mov
add
cmpsl
xchg
test
xor
jne
or
les
frstor
xchg
xchg
mov
ja
mov
aas
into
cwtl
fcomps
cmpsl
jnp
xor
xor
add
leave
out
mov
jne
inc
push
xor
mov
pop
leave
mov
jae
lret
jne
je
imul
adc
clc
jg
mov
cmpsl
insb
cltd
jno
mov
pop
test
test
mov
xor
mov
outsb
mov
push
push
push
dec
push
hlt
jo
mov
mov
dec
xchg
adc
mov
popf
xchg
int
or
mov
stos
insl
lret
rcll
add
mov
outsl
lret
adcb
pop
movsb
jl
xchg
or
sub
jne
cmp
jnp
jg
xor
push
add
addl
decl
rcll
sti
jp
adc
push
test
insl
std
imul
pop
xchg
pop
fbld
pop
xchg
cltd
dec
dec
pop
fwait
lea
adc
or
mov
inc
mov
aad
mov
imul
sahf
adc
es
sahf
pop
stos
shrb
pop
repnz
jl
cmpsl
push
jl
repz
data16
cmp
cmp
mov
pusha
mov
ja
xor
sub
iret
cmpsl
mov
jnp
int3
or
fidivl
mov
lock
sarl
cmpsl
add
cmpsl
rorl
jns
sbb
mov
and
shrl
xchg
or
das
js
jmp
fiadds
adc
popf
fistpl
push
dec
out
jae
push
jl
subb
rcll
sbb
cs
or
sub
loop
repz
aas
cmpsl
es
sbb
hlt
and
roll
addr16
mov
mov
xchg
cmc
outsl
dec
mov
mov
push
inc
and
in
mov
cltd
enter
dec
inc
je
lcall
xor
popf
push
bt
mov
adc
or
js
ret
shrl
movsb
std
inc
hlt
and
lahf
iret
fists
mov
outsb
mov
jae
test
add
ret
sbb
push
fistps
mov
leave
fsubl
lret
pop
shl
aaa
js
aad
mov
test
or
jp
scas
xchg
fists
fldt
pop
inc
bound
ljmp
test
ret
int
fisttpl
push
mov
sti
sbb
int3
and
int
sbb
mov
mov
pop
pop
sub
or
fwait
imul
xor
or
les
sbb
out
push
hlt
jge
inc
mov
push
fmuls
mov
fwait
outsb
aam
ja
lea
or
or
push
pop
mov
pop
jl
jmp
push
int
push
mov
rcll
fisubl
repz
frstor
mov
mov
repz
cmc
mov
sbb
fiaddl
cmp
mov
and
and
dec
stos
push
push
jno
dec
push
sbb
aaa
or
aas
inc
mov
shlb
les
mov
mov
fcompl
aad
jns
pop
adc
push
adc
ljmp
jno
pusha
addr16
in
inc
sbb
sarb
js
es
mov
push
xchg
mov
inc
sbb
mov
hlt
enter
lret
or
loopne
shr
push
test
mov
sbb
out
fld
clc
movsb
add
mov
enter
jo
aad
sub
dec
push
sub
pop
in
fisubrs
xchg
mov
push
pop
sahf
out
dec
xor
sub
or
call
mov
cmp
cmpsl
sbb
out
incb
test
repnz
int
rcrl
sbb
add
mov
pop
mov
aas
mov
mov
add
cli
and
add
push
lret
inc
and
aad
jae
jns
xchg
pop
cwtl
es
mov
pop
pop
sbb
sarb
ss
fistpl
insl
mov
jmp
fbld
pop
cltd
push
mov
mov
ja
mov
pusha
mov
xor
inc
pushl
roll
loopne
movsl
inc
addb
cld
popa
jae
xor
cmp
mov
insl
jp
ljmp
sub
cmpsl
in
xchg
mov
mov
jns
lods
cmpsl
jae
je
xor
dec
jl,pt
pop
xchg
and
or
cmpsb
jns
fldpi
mov
sbb
dec
sub
or
scas
shr
ss
mov
jmp
mov
pop
add
cmp
lret
jecxz
sbb
or
sub
add
int
inc
pop
ret
test
adc
and
jne
push
fcmovnb
dec
push
add
addr16
xlat
daa
out
in
mov
das
jp
popf
arpl
push
cld
repz
enter
jecxz
das
xchg
stos
loop
movsl
pop
push
orb
fnsave
lahf
leave
shlb
cltd
lods
hlt
adc
mov
pop
adc
scas
inc
fs
bound
adc
adc
dec
adc
sbb
mov
test
mov
xor
cmp
xchg
call
test
add
dec
mov
mov
inc
aad
cmp
cwtl
insb
push
je
mov
or
or
in
xchg
dec
daa
push
mov
mov
pop
stos
sub
mov
stos
push
scas
fisubs
insb
cmp
sub
fisubs
dec
pop
pop
adc
popa
mov
sbb
sbb
cmc
in
sbb
inc
mov
in
popf
mov
push
in
notb
data16
lods
push
xor
xchg
mov
repnz
mov
push
push
rep
adc
mov
andl
push
cmp
enter
add
or
fistpl
cmp
xchg
stos
lret
mov
pop
scas
jae
fisttpll
push
aam
adc
ljmp
dec
insl
inc
bound
jo
jae
rcrl
insl
pop
cmpl
inc
mov
jae,pn
jecxz
cmp
jns
dec
repz
cmpsb
je
mov
xchg
imul
jo
sbb
sbb
and
mov
inc
xor
lret
inc
or
dec
inc
xor
das
add
bound
fs
jmp
mov
mov
gs
mov
inc
dec
les
jo
popa
dec
add
dec
ja,pt
iret
or
cltd
test
jge
sarl
arpl
sub
in
int
sbb
outsl
sub
or
mov
cwtl
insb
loop
int3
mov
lcall
jae
pop
pushf
ja
lods
jbe
movsl
inc
inc
mov
lcall
and
popf
stos
inc
push
inc
pop
push
aad
cmpsl
sbb
es
jbe
mov
sti
iret
jo
sbb
insl
xor
xchg
mov
andb
adc
inc
mov
inc
enter
dec
aad
jns
pop
and
js
push
shr
aam
int3
out
mov
ret
fld1
adc
jp
shrb
lcall
sub
xchg
add
les
inc
int
imul
popa
inc
sub
outsb
mov
add
movsb
int
insb
leave
imul
scas
loope
jmp
dec
fscale
ja,pt
lret
add
mov
cld
adc
out
cld
jg
xor
outsb
jne
mov
movsl
mov
sti
xchg
fsubrl
lcall
push
mov
loop
js
movl
xchg
mov
testb
jecxz
xchg
push
lcall
mov
in
xor
jge
sub
imul
mov
push
xchg
pop
fwait
gs
orl
mov
sub
popf
push
fbld
or
leave
jecxz
sbb
cmc
ret
pop
inc
lea
sub
shrb
xchg
or
pop
pop
out
push
leave
jp
push
lods
movsb
inc
sbb
push
gs
push
add
xor
add
inc
lock
adc
movsb
inc
push
aam
dec
xorl
mov
mov
jns
mov
inc
inc
xor
add
xchg
call
dec
fcomps
insl
xchg
outsb
ja
lret
sbb
jg
cmp
sub
fnstsw
hlt
cmovne
inc
shr
gs
clc
dec
mov
push
shl
mov
test
test
mov
xor
stc
inc
sbb
pushf
dec
pop
lock
fs
xchg
rcrl
nop
mov
xchg
push
ret
cwtl
sbb
inc
stos
testb
sahf
dec
push
sub
cmc
inc
pop
mov
cmp
xor
mov
fbstp
js
jmp
cmp
idivl
jmp
pushl
dec
hlt
push
js
je
rorb
push
jns
cmp
xchg
and
out
or
xchg
and
fs
add
mov
jp
mov
stc
inc
das
dec
push
mov
xor
movsb
movsl
in
adc
or
adc
mov
jae
jb
cmp
mov
clc
sti
fists
xor
cltd
cs
xlat
sbb
xchg
push
add
pop
loop
dec
inc
sbb
or
insl
loop
mov
stos
imul
int
sbb
push
pop
fadd
xor
icebp
adc
adc
xor
int
xchg
test
lock
aad
pop
sbb
test
mov
imul
add
cmp
std
and
test
mov
jae
inc
movsb
push
es
adc
repz
mov
cltd
xor
icebp
repnz
movsb
inc
add
mov
xchg
and
cmp
leave
mov
mov
fstp
inc
lret
iret
dec
pop
je
add
repz
mov
inc
cmp
lods
mov
int
je
mov
and
hlt
add
lods
test
adc
jl
pop
add
iret
fwait
js
pop
ret
and
sbb
aad
inc
and
roll
inc
sbb
imul
mov
xor
cld
clc
push
dec
insb
in
roll
jp
fidivrs
sub
xchg
and
xchg
push
sbb
jnp
dec
jno
lds
nop
fldcw
add
orb
arpl
push
jecxz
sub
pop
jb
rorb
stos
cli
fs
call
insl
and
dec
pop
jecxz
push
jmp
xor
push
mov
jne
sar
add
adc
jae
sub
xchg
fists
xlat
add
xchg
jno
shrb
int3
adc
jl
jo
pop
mov
shlb
pop
mov
xchg
mov
cmp
in
sbb
in
sub
lret
xor
jmp
dec
fsubrl
je
mov
in
sub
mov
cmp
jg
pop
jl
push
repnz
sbb
sub
mov
mov
cld
dec
cmpsl
into
mov
inc
pop
jno
aad
aaa
jb
aad
xor
push
cmp
scas
leave
mov
lea
fildll
sbb
push
pop
mov
xor
mov
sbb
sub
sbb
das
adc
add
or
dec
jne
xor
pop
push
mov
xchg
mov
sbb
push
enter
adcb
adc
jmp
rorb
inc
fwait
jb
jmp
dec
inc
sbbl
or
mov
jle
sbb
or
insb
jbe
xlat
jne
jmp
stos
pop
push
and
scas
xchg
xchg
out
pop
int3
pop
add
mov
dec
outsb
je
cltd
js
xor
dec
popa
sahf
xchg
xchg
movsl
pop
int3
xor
arpl
pop
das
or
cmp
jns
mov
mov
mov
push
mov
sub
aad
inc
frstor
fldenv
lods
aad
mov
mov
sarb
sbb
cmc
cmpsb
mov
jp
mov
repnz
rcrl
imul
sub
mov
lret
mov
pushf
sub
xchg
inc
fcmovnu
jns
test
jbe
jecxz
jnp
cmp
sbb
jmp
jge
mov
push
addr16
lcall
jp
mov
cmp
lcall
dec
xlat
shl
inc
fcoms
repz
add
mov
mov
cmpsb
mov
xchg
inc
add
inc
das
sbbl
and
inc
cltd
sub
inc
fmull
icebp
mov
aam
aaa
adcl
addb
cs
lret
rol
cmp
mov
movsl
callw
push
bound
scas
rcrl
clc
jle
inc
add
jnp
outsl
jmp
push
push
mov
and
jnp
add
sbb
sbbb
xor
dec
mov
imul
add
push
divb
aam
cmp
push
jae
ja
xchg
aad
pop
or
call
repz
lret
jge
outsb
cmpsb
sub
adc
inc
outsb
enter
or
mov
mov
xor
rcll
pop
jg
pusha
mov
nop
dec
mov
data16
cwtl
xor
pop
aas
roll
icebp
sbb
jmp
in
push
mov
xor
xchg
mov
shll
inc
add
ret
outsb
jmp
lods
int
pusha
bound
dec
push
cmpsb
xor
daa
insb
lea
stos
rolb
mov
sbb
mov
cmp
lret
pop
push
mov
mov
out
andb
mov
adc
sbb
mov
mov
pop
add
insb
mov
xorb
or
and
mov
loopne
cmp
cld
fs
pushf
adc
in
das
sub
mov
in
scas
popf
mov
xchg
push
mov
jp
loopne
test
and
xlat
fcoml
in
or
add
fmul
lret
dec
jge
mov
dec
sub
inc
sub
sahf
cmpsl
sub
jne
pop
or
add
shrl
sub
or
push
fsubs
jo
mov
shlb
daa
daa
push
cmp
mov
daa
cmpsl
push
cmc
mov
inc
dec
mov
xor
jb
xchg
cmc
or
sbb
in
imul
push
pop
aam
sti
sbb
pop
add
cmp
and
and
sahf
jmp
xchg
ret
lret
pop
xchg
enter
mov
loopne
mov
dec
jae
add
mov
mov
adc
inc
add
mov
jno
test
ror
sbb
xchg
iret
sbb
lods
push
sub
vcvttps2dq
jge
lret
pop
arpl
rcll
mov
test
cmp
daa
arpl
cld
das
js
fistl
fdivl
push
adc
fwait
push
test
lock
push
rcl
xchg
shll
cmp
js
popf
ficoms
cmc
sahf
sarl
ret
movsl
cmp
pop
jl
or
xor
js
push
mov
lock
pop
mov
loope
cmp
ret
icebp
lods
pop
fwait
ljmp
pusha
insl
or
inc
xor
and
dec
pop
aaa
popf
data16
es
pusha
sub
lahf
outsl
hlt
jl
lea
pop
fildll
in
jne
mov
or
adc
int
jg
ds
push
adc
scas
shrb
je
lahf
xchg
jecxz
cltd
jno
mov
sbbl
or
ret
iret
pop
popf
inc
addr16
pop
xlat
fmuls
nop
adc
stos
pop
fdivrp
mov
sub
popl
pop
adc
aaa
jne
mov
testb
faddl
jne
xchg
inc
je
or
add
inc
inc
mov
lret
mov
cwtl
inc
xlat
dec
mov
sbb
ret
mov
push
jae
dec
mov
xchg
shll
clc
inc
push
dec
mov
lcall
call
mov
or
inc
sub
iret
fiadds
shll
add
mov
pop
call
sub
stc
and
inc
push
aam
sahf
enter
push
push
add
lea
and
mov
mov
mov
scas
cmp
xchg
cmp
je
pop
sub
mov
xchg
jnp
sbb
ss
jnp
mov
xor
testl
out
mov
inc
insb
aaa
sti
scas
add
mov
lret
pop
push
inc
scas
cmp
lods
add
mov
sbb
in
xor
inc
sbb
mov
jnp
inc
mov
xchg
test
cmp
add
rcr
push
shll
mov
lcall
sahf
in
in
sbb
movsl
enter
movsl
fdivl
jmp
fists
xchg
inc
jo
ds
and
pop
sbb
and
js
jns
js
lcall
mov
lods
dec
lods
dec
aam
pop
pop
and
fwait
sub
or
repz
sbb
jle
lock
ffreep
movsb
inc
das
or
xor
or
andps
cmp
push
mov
mov
push
movsb
mov
mov
sub
repz
shr
addr16
dec
call
movsl
jmp
jae
in
jb
mov
std
inc
cmpsl
rcrl
add
in
std
lret
ret
pop
pop
addr16
inc
sbb
and
add
adc
mov
xor
test
and
out
std
movsl
lea
les
scas
fld
mov
add
les
mov
enter
mov
scas
fs
ss
mov
std
adc
ret
xor
pop
dec
out
jae
xchg
push
dec
mov
jae
push
xorl
lret
sbb
inc
loopne
imul
push
xlat
test
sub
fbld
xlat
pop
out
mov
insl
cmp
add
or
jae
cmp
enter
sbb
ret
popf
xor
cmpsl
inc
xor
pop
sbbl
sti
popa
stos
call
inc
je
arpl
cmp
jae
or
sbb
xchg
pop
push
nop
sub
mov
xor
ret
fistl
adc
lahf
pushf
sbb
mov
ret
jle
fbstp
rcll
inc
fs
sbb
jle
fs
cmpsl
dec
mov
pop
xchg
jno
lret
xchg
dec
mov
inc
mov
cmp
cmp
xor
test
ret
mov
sub
ja
and
xchg
movsl
inc
and
or
mov
aad
cmp
mov
in
testl
and
fldl
insl
dec
mov
and
pop
outsb
ja
cmpsl
clc
mov
rcrb
mov
or
cmp
pushf
push
data16
into
data16
es
pop
jae
enter
out
loope
test
xchg
pushl
cmp
js
pop
rorb
inc
cmp
in
mov
xor
dec
pop
sarb
and
jecxz
cmpsb
add
sbb
scas
imul
movsb
push
lock
mov
roll
cwtl
psadbw
icebp
ficoms
frstor
je
sub
push
pop
dec
sbb
scas
mov
fisubrl
dec
mov
in
stc
push
arpl
mov
arpl
and
sbb
fcompl
add
xor
add
sub
dec
pop
bound
pop
sbb
pusha
xchg
cld
add
mov
pop
fists
flds
mov
das
and
push
jmp
mov
pushl
fsubrs
xchg
and
lods
sub
cmp
enter
dec
shll
pusha
jbe
xchg
pop
push
jl
fldz
cmpsb
inc
cltd
out
les
add
dec
hlt
ss
leave
shlb
lahf
mov
dec
fsubl
fcmovnbe
dec
stos
ret
mov
inc
mov
pusha
mov
jge
iret
and
repnz
popf
test
and
nop
pop
add
mov
into
jno
lret
cmp
pop
jbe
in
or
cmp
sbb
nop
adc
dec
ficoml
ljmp
adc
inc
pop
lods
mov
leave
mov
mov
xchg
fsts
inc
scas
mov
jl
sbb
lret
loopne
or
sbb
test
jae
xchg
pop
mov
popa
push
idivl
mov
fidivrs
test
xor
shll
or
add
jecxz
push
xor
push
adc
ds
sub
insb
sub
loopne
pop
pop
imul
dec
cmpsl
ret
fnstsw
cmp
mov
test
out
adc
aaa
es
xor
push
jp
out
mov
pop
je
pop
ucomiss
mov
pop
outsb
pop
fs
and
mov
inc
orb
mov
iret
cmpl
repz
das
cmpps
ret
push
pop
adc
les
dec
and
add
pop
and
sbb
or
dec
repnz
dec
lock
das
aad
lock
adc
xchg
mov
out
ljmp
shll
and
xor
lds
imul
shrb
cmp
sahf
ret
xchg
fucomi
mov
lods
jle
jbe
addb
imull
jge
sbbb
fwait
sbb
xor
roll
xchg
and
in
mov
test
xchg
aam
or
mov
mov
inc
pop
testl
jne
dec
rcrb
add
stc
je
xlat
call
int3
adc
test
push
fidivrl
jne
pop
push
fnstenv
frstor
pop
movsb
ja,pn
mov
dec
mov
jmp
lea
fsubrs
jae
xorb
repnz
mov
inc
and
sbb
mov
fldl
mov
cmp
push
rcll
out
addl
popf
popf
ljmp
mov
xchg
test
mov
jbe
mov
sub
push
mov
js
cmp
xor
xchg
cwtl
pop
and
pop
xchg
push
cmp
xchg
sub
dec
js
fcompp
add
pop
cmpsl
or
mov
sbb
xor
lret
mov
test
xor
inc
mov
inc
or
pop
xchg
sahf
xor
loopne
int3
pop
sub
out
push
dec
pop
movsb
popf
shl
fsubr
xchg
xchg
sbb
pop
adc
repz
inc
mov
mov
and
fucomip
repz
inc
xor
mov
lods
jo
add
stos
and
sbb
and
ja
and
stos
mov
cwtl
push
hlt
mov
adc
aam
dec
stos
in
or
cld
stos
outsb
test
add
pop
rcrl
dec
push
push
rcr
xor
xchg
add
sub
cld
dec
loope
xchg
mov
pop
adcl
adc
lods
pop
das
fwait
insb
fwait
cltd
pushf
adc
cmp
jg
cmc
lcall
adc
cmp
pop
sub
or
or
enter
cmovno
scas
out
aaa
fsubrs
cmpsb
pop
xchg
mov
push
fisubl
stos
js
jle
mov
gs
xlat
xchg
ftst
cwtl
les
lods
or
add
jb
inc
mov
xor
push
xchg
inc
push
mov
push
xor
mov
insl
nop
shlb
jl
inc
jb
negl
mov
pop
xor
bsf
bound
xor
cmp
add
mov
fidivl
popa
mov
shrl
cwtl
mov
icebp
hlt
enter
imul
fstl
sbb
sub
xchg
add
inc
lret
lock
repz
jo
or
clc
lock
dec
lret
aad
fsts
pop
xor
ficompl
out
mov
stos
xchg
fwait
xchg
std
xor
enter
mov
sarb
dec
pusha
dec
fucomi
xor
arpl
stc
and
pop
cmp
mov
jne
xchg
rorl
cltd
fldt
jmp
push
add
aam
js
add
mov
mov
fwait
insl
sbb
imul
sbb
xor
mov
adc
das
test
das
push
in
push
add
cmp
adc
stos
xlat
adc
pop
dec
test
pop
mov
icebp
mov
lcall
jge
jle
xchg
lahf
lret
jecxz
gs
shll
jg
sarb
sbb
scas
leave
ja
mov
mov
cmp
push
sbb
push
pop
inc
in
push
push
xchg
adc
sub
inc
mov
rcl
sbb
sub
icebp
add
sbb
aas
push
ret
cmp
fdivl
lret
lret
lea
push
pop
push
sbb
cmp
movsl
xor
ja
lds
add
sub
sub
and
mov
fwait
leave
jb
sub
sbb
or
inc
cmp
fxch
shll
icebp
xchg
ror
cmpb
add
or
push
and
clc
sarb
pop
mov
ret
lds
sbb
sub
notb
xchg
out
jns
cmp
jmp
adc
sahf
or
fcoms
shlb
or
adc
int3
inc
sbb
jecxz
fucomip
repnz
inc
cld
divl
dec
addr16
sahf
mov
ja
adc
and
shl
xchg
mov
mov
mov
fmul
cltd
xor
pushf
fdivrl
cmpsl
dec
shll
es
and
xor
insl
sbb
pop
push
mov
fs
push
cwtl
xchg
std
fdivs
pop
sub
add
sub
sub
outsb
fstps
push
jbe
pop
enter
xorl
mov
repz
sti
fisubrs
lds
sti
ret
push
mov
xchg
adc
in
or
xor
xorb
dec
clc
gs
ret
cmp
xchg
push
fidivrs
movsb
inc
sbb
pop
out
cmc
mov
test
mov
je
rclb
aad
ja
jecxz
ja
rcrl
jg
ds
inc
push
pop
aas
push
nop
xorl
mov
fistpl
add
lods
cmp
sbb
ret
test
ds
dec
push
in
aaa
mov
add
in
nop
hlt
rol
xchg
fildl
repnz
mov
add
std
inc
data16
out
pop
in
mov
outsl
sub
movl
dec
push
add
les
hlt
nop
pop
push
rcrl
ja
aad
sub
movsl
cltd
addr16
mov
inc
mov
push
movsl
or
push
pop
mov
xor
jl
js
outsb
push
dec
xchg
rcrb
pop
std
jl
clc
repnz
pop
inc
mov
je
dec
mov
fwait
xor
mov
out
push
mov
jb
mov
pop
mov
arpl
mov
jle
xor
pop
inc
sub
aaa
xchg
fldcw
pop
pop
mov
pusha
jne
ja
outsb
dec
mov
lea
test
in
movsl
mov
test
sti
mov
and
dec
sbbl
inc
mov
add
mov
sbb
jp
movsl
mov
push
pop
mov
mov
std
bnd
push
sub
mov
arpl
push
push
dec
lahf
cmp
mov
and
and
les
fdivl
xchg
mov
ficoml
cmp
pop
fistl
sbb
cltd
fstl
sbb
pushf
and
mov
pushf
andb
or
fcoml
adcl
fidivrs
push
cmpsl
jge
out
mov
pop
push
test
hlt
cmp
and
fwait
cwtl
jnp
test
mov
mov
fbld
dec
repz
icebp
mov
out
icebp
fwait
repnz
cmpsb
sub
je
mov
inc
pop
mov
pop
mov
loope
shrb
pop
vmwrite
or
lcall
inc
std
test
pinsrw
sahf
orb
test
sbb
lret
inc
sbb
les
cmc
xchg
ret
inc
iret
inc
mov
inc
popl
into
xchg
mov
lods
stos
xor
mov
mov
mov
cltd
push
mov
les
nop
mov
or
xchg
outsl
jno
stos
xchg
mov
call
mov
aad
xchg
les
xor
xchg
lods
and
adc
lds
push
daa
mov
xchg
dec
sbb
fwait
and
cld
sub
xchg
cmp
and
push
popf
arpl
mov
fidivl
jno
mov
adc
adc
inc
dec
popf
mov
xor
inc
xor
mov
mov
cmp
jl
xor
sti
fistl
mov
mov
fstl
fadd
mov
fwait
cli
std
mov
xchg
arpl
dec
mov
or
add
dec
fs
cmp
push
addr16
dec
sbb
xchg
rcll
scas
out
lahf
out
inc
std
push
in
int
xchg
jae
sbb
fisttpl
call
and
rcll
lret
xlat
pop
es
pop
sub
outsb
lods
lret
xor
stos
ja
sti
out
loopne
or
pop
test
add
dec
stc
decb
dec
nop
clc
inc
lahf
lahf
adc
adc
push
add
imul
adc
add
xchg
sbb
fidivl
xchg
into
sub
dec
inc
lret
pop
inc
sub
fsubrs
clc
add
cmpsl
ret
cmp
mov
int
inc
lret
mov
sub
push
xchg
aam
aaa
cmpsb
subl
push
xchg
movsb
xchg
stc
push
fwait
cmc
sarb
pushf
insl
push
xchg
fidivrl
mov
xchg
inc
inc
ja
pop
and
jnp
mov
ljmp
jp
jp
dec
sbb
mov
into
stc
and
adc
xor
xor
lds
jb
pop
push
test
dec
xchg
jmp
and
or
push
aad
xor
aas
les
cld
ret
rcrl
push
es
adc
divl
pop
scas
pop
xchg
sub
sub
movsb
mov
dec
xor
mov
call
ret
scas
insl
sub
xlat
sbb
jg
sbb
cmpsl
sbbl
mov
sub
cwtl
ja
dec
xor
insb
icebp
xchg
call
stos
push
rolb
mov
mov
add
scas
fwait
imul
mov
xchg
inc
push
dec
inc
mov
pop
adc
lcall
std
jno
lods
sti
loope
mov
andl
sbbl
xor
jno
in
fdivr
mov
in
push
sar
adc
dec
cld
mov
and
add
mov
imulb
and
pushf
dec
testl
sub
cmp
lahf
lods
out
and
mov
lds
arpl
nop
add
cmc
idivb
lock
add
inc
mov
inc
inc
shrl
call
ljmp
loopne
xlat
bound
inc
clc
rcll
scas
inc
xlat
cld
fistpl
and
in
idivl
fs
pop
clc
icebp
jnp
pop
ds
xchg
test
je
mov
pushf
mov
fs
call
mov
inc
pop
jbe
and
iret
jne
popf
ret
bswap
jb
call
xor
jns
loopne
fbstp
ret
jp
cmp
pop
cmp
insl
sahf
dec
fldenv
inc
inc
cmp
repz
cmpsb
push
popf
mov
push
iret
jno
push
cmc
pop
in
jl
cmp
or
cwtl
scas
push
int
or
and
sbb
cld
lds
test
inc
repnz
pushf
fs
cli
inc
mov
sub
pop
sub
fldl
mov
sbb
scas
int3
adc
int
jns
mov
aaa
lahf
jge
bnd
mov
mov
add
sbb
jno
shrl
pushf
jnp
fidivs
xor
jmp
lret
leave
jecxz
xchg
xchg
pop
cmpsl
aad
xor
inc
push
mov
popl
int3
pop
dec
jle
inc
cwtl
shll
out
imul
mov
push
pop
adc
in
cmovg
int
inc
stos
fdivp
inc
push
aam
aaa
pop
in
sbb
xorl
mov
arpl
test
mov
jge
jle
scas
or
mov
je
xchg
je
je
xor
stc
in
jns
add
sub
adc
mov
mov
fwait
out
leave
faddl
push
lock
jns
pop
xchg
jge
jp
xor
mov
ja
push
std
dec
push
roll
push
xor
les
push
lods
adc
jmp
push
push
push
xchg
sahf
insl
mov
stos
jne
int
outsl
push
lods
lea
cmp
pop
int3
mov
add
pop
cld
jle
cmp
and
in
repz
mov
shll
dec
pop
aad
mov
mov
pushl
push
pop
stc
xor
xor
push
mov
xchg
cmpsb
fdivr
jg
inc
repz
out
js
pop
inc
cltd
push
imul
xor
insl
add
rolb
je
or
adc
dec
lcall
inc
rorl
jp
pop
push
xchg
int
stc
movsl
jns
cmp
movsb
shlb
ret
call
jns
daa
sbb
adc
xchg
pop
imulb
push
push
cli
movsl
mov
repz
mov
sbb
adc
push
sti
lods
nop
push
sub
mov
rorb
shl
ss
int
dec
sbb
popf
les
cld
jno
xchg
cs
jae
in
nop
es
jo
fidivs
cwtl
push
test
imul
jno
push
jmp
mov
and
mov
stos
call
into
mov
icebp
shl
cmp
xor
fiadds
sub
mov
out
addr16
cld
xor
mov
fcoml
jae
push
push
lds
mov
xor
mov
cmp
push
iret
iret
mov
adc
cwtl
cli
cmp
jg
jmp
in
int
imul
mov
rolb
js
lcall
test
inc
rolw
ljmp
jecxz
mov
rcrl
ja
add
pop
lods
test
insb
ss
mov
out
dec
xor
lock
and
das
stos
push
jmp
outsl
mov
loope
scas
mov
stc
cld
lods
hlt
outsl
out
lret
adcb
add
nop
ret
in
push
add
shlb
ja
stos
dec
sar
inc
outsl
dec
add
stos
jle
scas
and
xchg
sbb
or
ret
pop
ja
fyl2xp1
lock
jge
mov
ds
rclb
and
mov
jne
push
out
mov
jg
je
xchg
fldl
add
jbe
dec
inc
fcoml
mov
fwait
mov
addr16
jno
addl
sarl
xlat
fwait
repz
repz
push
mov
negb
push
push
mov
cld
add
iret
inc
and
cmp
pusha
or
xor
pop
mov
outsb
dec
cmp
jmp
and
jb
dec
mov
adc
pop
pop
stos
push
inc
mov
cltd
imul
push
jl
sub
mov
pop
jo
push
cmp
faddl
adc
test
ret
fcomp
subl
jnp
rol
sbb
inc
cmp
or
nop
loop
mov
mov
adcl
mov
in
push
mov
out
jp
inc
cwtl
dec
and
cmp
rcl
adc
mov
ja
stos
popf
out
mov
pop
call
lods
mov
out
adc
sbb
fdivp
inc
xchg
stos
ljmp
sbb
movsb
ds
js
movsl
dec
push
dec
fldenv
fisubrl
jg
mov
ja
xor
clc
lds
loopne
xchg
das
cmp
out
add
jp
stos
out
imul
fs
or
mov
cmpsb
aaa
pop
repnz
mov
dec
sbb
and
scas
mov
xchg
jmp
fisttpll
xchg
xor
adc
cmp
inc
adc
ljmp
sbb
enter
lods
mov
adc
push
jp
insb
js
bound
pushf
hlt
loop
add
loope
mov
lret
cmpsb
push
dec
cmp
and
mov
jbe
fisubl
mov
ja
jecxz
into
mov
cmp
out
mov
mov
test
push
jg
or
xor
sub
sub
xchg
mov
outsb
mov
adc
inc
pop
pop
sti
pop
add
rclb
fisttpl
inc
les
div
pusha
sub
add
inc
pop
repnz
mov
in
or
nop
das
shlb
shl
jg
sbb
aaa
dec
push
sub
or
pop
dec
jle
add
xor
and
mov
xchg
andb
sub
or
lret
ja
dec
xor
mov
mov
test
addr16
mov
jge
or
stc
les
fs
mov
scas
pop
pop
dec
in
idivl
inc
out
lea
lcall
insb
or
into
test
ret
mov
lods
xlat
or
imul
test
xchg
push
sbb
jmp
or
insl
mov
cmp
adc
and
inc
mov
movsb
imulb
pop
xchg
pop
cld
jecxz
xor
push
call
int
fbld
shrd
cmp
sti
fcoml
add
pop
push
dec
ret
push
sti
ret
cmp
dec
or
mov
cld
xor
jg
jb
mov
lret
movsl
mov
sti
sbb
outsl
push
lcall
push
dec
sbb
add
mov
cmpsb
aad
jae
gs
mov
loope
adc
mov
xor
cmp
jmp
stos
xchg
mov
lahf
pop
jnp
or
push
mov
fstpl
js
popf
dec
sub
cmc
je
arpl
or
es
sub
sbb
sbb
andb
push
fisubl
lcall
movsb
jp
mov
iret
cmpsl
ret
lds
cmp
pop
inc
xchg
fsubp
inc
repnz
iret
std
nopl
push
movsb
jmp
insb
mov
add
dec
mov
lcall
std
jbe
lret
sub
mov
sar
mov
jmp
andb
or
mov
inc
test
cmc
lds
movsb
mov
mov
xor
fdivl
pop
push
shll
imul
inc
dec
outsl
adc
iret
pop
dec
mov
int
mov
xchg
push
inc
sbb
inc
aas
shlb
and
mov
or
fistl
sub
mov
xchg
pop
cmpsl
sub
test
lock
rolb
xchg
ja
out
pop
mov
inc
dec
jle
mov
mov
jle
mov
fs
add
mov
mov
sbb
or
nop
jge
pop
add
scas
gs
iret
pop
ret
enter
mov
aaa
mov
mov
lock
orl
sub
mov
push
testl
movsl
daa
pop
test
out
ss
cmp
add
cmp
jge
mov
sbb
mov
adc
sti
inc
ja
dec
cs
imul
push
mov
subb
xor
testb
mov
stos
ret
or
in
lods
jne
sbb
cli
les
xor
sbb
add
cs
imul
stc
std
cwtl
cld
fistl
pop
addr16
call
inc
mov
mov
inc
sub
ja
pop
fidivrl
push
scas
jbe
or
mov
xchg
sbb
adc
cmp
xchg
push
pop
mov
adc
jp
pop
xchg
cmp
jmp
or
fiaddl
test
cld
sti
xor
jne
lahf
out
jl
jmp
in
jl
pop
out
sti
mov
sub
aad
mov
and
mov
mov
in
repz
dec
push
xchg
int
jmp
pusha
and
in
jge
mov
jecxz
xchg
scas
bound
adc
mov
cmpsl
mov
ja
jecxz
jb
mov
push
shrl
pop
in
outsl
test
imul
je
mov
xchg
int
int3
dec
sbb
imul
xchg
sbb
jp
mov
mov
sub
leave
jns
push
push
addb
lret
pop
or
jbe
das
stos
inc
movsl
fadds
cltd
mov
and
pusha
xor
add
jmp
movsl
ljmp
mov
cs
arpl
fmulp
push
pop
mov
xchg
jns
or
pop
scas
test
push
cmp
sub
push
lds
or
push
xor
cmc
or
test
dec
push
aam
inc
sbb
sbb
das
call
outsl
pop
push
orl
mov
mov
jb
dec
xor
fld
out
int3
repnz
mov
add
add
push
push
ret
push
or
xchg
int
sbb
scas
dec
push
nop
xchg
leave
sbb
into
out
pop
adc
mov
push
cmpsl
xchg
decl
mov
in
pop
mov
insb
dec
mov
test
or
dec
cmp
dec
mov
stos
aaa
mov
dec
jle
add
aaa
movl
or
pop
andl
mov
fdivs
stos
adc
in
iret
xchg
mov
sbb
adc
or
cmpsb
push
lods
push
sub
adc
and
into
cwtl
shrb
xchg
push
adc
pop
mov
jl
out
inc
mov
fisubrs
in
pop
mov
cmpsl
aad
fdivs
ficomps
enter
adc
jle
daa
pop
pop
iret
fucomip
in
test
sub
add
cmpsl
das
sahf
sbb
popf
mov
sbb
inc
pop
cmp
scas
movsl
sbbb
daa
mov
fimuls
add
popa
lea
out
shl
inc
idiv
std
xchg
in
mov
popf
les
movlhps
imul
push
xor
sbb
inc
outsb
int3
ds
pop
rcr
adc
push
sub
adc
cmpsl
sub
loopne
enter
scas
mov
inc
int3
mov
fwait
leave
jecxz
adc
iret
add
sti
cmpl
lcall
js
outsb
test
ret
adc
out
push
stos
inc
push
jmp
mov
in
xchg
es
jb
test
mov
mov
loope
jle
lret
orb
push
fiaddl
cwtl
sbb
sub
call
and
js
inc
jle
test
adc
pop
push
dec
cmpsl
outsb
pop
pop
nop
mov
js
pop
or
into
cwtl
pop
lret
or
hlt
inc
sbb
push
mov
cmc
mov
and
jo
pop
dec
ss
xor
test
in
scas
push
sbb
aas
mov
adc
push
mov
inc
lds
mov
out
jp
mov
arpl
xchg
mov
cmpsl
outsb
add
inc
add
or
and
and
sbb
fistpl
xchg
ss
shll
fs
mov
les
inc
xchg
dec
loop
xchg
in
ja
fdivrs
bound
aaa
xchg
int
jmp
or
xchg
out
add
cmc
pop
xor
hlt
or
pop
xchg
jl
sbb
out
addb
les
pop
repz
aas
sub
dec
mov
and
mov
mull
daa
movsl
xor
repz
mov
iret
fbstp
pop
and
push
iret
rcr
xor
xor
mov
outsl
mov
dec
jo
sbb
cmc
cld
jg
cli
rcrl
stc
fsts
aam
xor
mov
stos
lahf
xchg
stos
hlt
ss
push
pop
pushf
lea
stc
insb
popa
in
xchg
pop
sbb
sbb
adc
cli
sbb
inc
sbb
sub
push
mov
dec
jg
rcll
mov
adc
popf
fidivs
cmp
inc
pop
mov
adc
dec
out
les
or
std
mov
sub
cmp
adc
or
add
dec
and
inc
outsb
mov
xchg
imul
dec
push
enter
mov
loop
ret
fidivs
cmp
jmp
inc
sti
lea
xchg
xlat
lock
ffreep
insl
bound
push
or
cwtl
pop
inc
or
call
and
js
jle
test
adc
pop
jle
cmpsl
outsb
popa
sbb
inc
iret
fbstp
add
ljmp
hlt
insl
scas
aas
ss
ja
mov
stc
ret
dec
inc
movsb
mov
fwait
mov
sbb
fwait
and
lahf
lcall
push
jbe
rolb
lret
adc
push
lret
clc
arpl
aaa
pop
lock
xor
fnsave
stos
mov
adc
fistl
sbb
fldt
imul
jg
test
iret
js
add
bound
and
xchg
adc
mov
inc
xor
ljmp
jge
repz
outsb
stos
dec
fucomp
sub
data16
out
inc
insl
loope
or
shrl
lret
aad
jb
fs
xchg
xchg
fiadds
sub
cwtl
leave
mov
lea
push
inc
dec
dec
mov
push
xchg
jle
mov
cltd
rorb
leave
rcrb
shrl
leave
mov
lods
mov
pop
adcl
dec
hlt
mov
jmp
or
or
pop
sub
pop
ds
jmp
repz
andl
push
jl
pop
mov
lcall
push
or
popf
fdiv
lcall
icebp
mov
cmpsb
stos
or
inc
scas
push
lcall
ja
or
jl
addl
jnp
enter
arpl
pop
xchg
jae
sbb
icebp
sbb
sbb
xor
scas
cmpsl
sub
or
clc
in
aam
fdivl
icebp
pop
icebp
pop
data16
ja
inc
fistps
test
push
xor
xchg
ds
enter
xchg
jns
jns
pop
sbb
jno
mov
sub
sbb
cmp
and
fwait
push
adc
adc
xchg
pop
or
adc
std
jecxz
jge
ja
fstpl
xchg
incl
dec
cmp
add
mov
dec
nop
std
add
mulb
sub
dec
imul
adc
loope
sub
adc
int3
xor
in
test
ss
sbb
popa
icebp
shlb
or
and
pop
jecxz
push
pop
mov
xor
xchg
mov
jbe
mov
sub
jle
pop
ret
cmpsb
ja
test
in
negl
bound
shl
cmp
sbb
shll
push
les
movsl
xlat
and
test
push
movsb
je
sub
dec
inc
test
cld
sahf
xchg
pop
fidivrs
mov
add
imul
adc
jle
push
sbb
out
mov
jns
jne
jmp
mov
inc
negl
int
xchg
push
in
or
mov
jmp
cld
mov
divps
adc
mov
add
test
mov
push
test
lods
pop
xchg
lea
ret
pop
mov
pop
mov
jae
add
fldt
arpl
push
into
xchg
dec
mov
xor
xor
stos
pop
stos
outsl
sub
inc
fimull
jnp
shl
push
stc
nop
inc
sbb
nop
fucomi
repnz
mov
xchg
mov
or
sbb
fs
mov
sbb
add
in
pop
jns
and
cld
add
cmpsl
lods
iret
loopne
cmp
cltd
adc
xor
repnz
fisubrs
xchg
aas
xorb
shr
xor
adc
movsb
js
inc
mov
inc
inc
pushf
jbe
sbb
mov
jae
sti
inc
push
lahf
lahf
dec
jecxz
sbb
push
pop
add
mov
sbb
mov
data16
lcall
cmp
inc
mov
imul
dec
sbb
jnp
scas
addr16
leave
test
mov
mov
fsubs
add
pop
pop
dec
aam
stos
add
daa
pop
shlb
add
imul
enter
sub
scas
aaa
data16
in
fs
das
inc
fwait
inc
insl
int
inc
mov
or
sbb
add
push
pop
push
call
dec
jg
imul
pop
sbb
shlb
fwait
ja
pop
iret
enter
sub
pop
imul
add
mov
mov
movsb
push
adc
mov
push
mov
cmpsb
mov
adc
addb
call
test
stc
stos
mov
mov
sbb
pop
mov
sbb
mov
xor
iret
sbb
leave
aas
inc
and
aad
int
cmpsb
push
mov
adc
jmp
bnd
fldt
hlt
cmp
push
cmpl
dec
mov
or
jbe
mov
imul
cmpsb
push
mov
insl
fimuls
push
adc
pusha
mov
out
addr16
jo
add
sbb
or
add
xchg
test
sbb
inc
cwtl
je
xchg
pop
mov
and
imul
stc
or
pop
sahf
and
xor
daa
dec
jmp
imul
out
fxtract
sub
pop
popa
jecxz
ss
xor
mov
gs
fistpll
push
ja
mov
push
jp
imul
mov
sarb
ret
mov
in
pop
fnsave
test
push
sub
xor
or
into
sub
push
xor
nop
jno
xchg
xlat
stos
ret
stos
push
mov
dec
test
pusha
pusha
scas
mov
mov
mov
cmpsl
popf
lret
push
adc
dec
push
adc
inc
push
iret
add
stc
pop
mov
and
cmp
dec
push
jb
nop
jl
test
push
mov
test
jmp
sub
fsubrs
int3
xchg
and
sbb
or
mov
shrl
icebp
popa
sbb
pop
out
mov
inc
adcl
mov
and
popl
dec
cwtl
in
incl
call
add
repz
or
or
mov
lods
in
aad
dec
xchg
cmp
jns
jo
xchg
adc
dec
mov
mov
and
lahf
lret
jecxz
xor
andl
and
or
orb
ret
sbb
push
rcl
push
and
xchg
shrl
push
test
jle
lahf
movl
out
inc
push
mull
mov
test
cmp
or
sbb
inc
scas
lods
jge
and
push
sar
mov
dec
mov
dec
or
lret
pop
scas
pusha
mov
push
or
inc
fwait
imul
push
nop
inc
pop
in
jecxz
arpl
rcll
or
xchg
adcb
movsw
dec
mov
or
mov
ja
mov
ffreep
cwtl
xor
jb
cmp
sahf
jecxz
add
sbb
xchg
insb
aaa
add
sub
inc
jg
dec
daa
sub
fmull
rclb
xchg
outsl
pop
add
inc
jo
or
push
fists
subb
lcall
push
dec
mov
test
into
xchg
cmpb
mov
das
movsb
cli
fbstp
andb
dec
repnz
stos
inc
pop
mov
push
mov
lods
xchg
dec
popf
lret
pop
jmp
hlt
xchg
ds
daa
mov
popf
mov
cmpsl
push
fs
aad
dec
mov
repz
ficoml
inc
lret
pop
loope
pop
cmp
repz
fcompl
cld
shlb
and
mov
andl
call
adc
in
inc
jl
test
and
or
rorb
mov
lahf
out
mov
inc
jmp
cmpsb
in
pop
mov
jnp
xchg
les
loope
sbb
mov
inc
scas
xchg
dec
pop
jmp
mov
xor
dec
adc
pop
xchg
mov
add
outsl
adc
incl
push
xor
inc
aas
mov
mov
mov
jmp
ret
es
xor
movsl
sbb
sub
xchg
insl
imul
pop
repz
xchg
or
push
push
dec
xor
out
fs
scas
bswap
mov
es
jmp
sbb
mov
imul
mov
mov
stos
std
pop
out
arpl
mov
or
sub
mov
push
mov
ret
ficomps
cmp
mov
je
sahf
and
jl
ror
out
push
xor
push
push
rclb
iret
add
fucomp
push
fisubl
out
add
jmp
add
divl
fwait
lea
mov
mov
jg
dec
or
mov
lea
pop
and
mov
push
mov
mov
xchg
mov
test
or
into
inc
rorl
jne
fisubrs
add
sbb
jmp
add
inc
or
pop
cmp
rolb
addr16
sbb
aam
stos
xchg
lea
pop
imul
push
push
inc
addr16
mov
lods
xchg
dec
popf
lret
aad
push
nop
mov
stos
mov
xchg
add
and
xchg
mov
lds
fmull
sahf
push
sub
pop
sub
push
fucomi
push
xchg
sahf
pop
xchg
cld
push
jns
jl
adc
push
mov
sbb
jge
pop
adc
cmp
rolw
inc
rorb
je
shlb
mov
push
test
dec
psubusb
int3
mov
xchg
enter
jb
jnp
clc
imul
std
iret
test
push
or
fldl
adc
ja
adc
aad
ja
push
xorb
mov
mov
and
sbb
imul
paddw
test
enter
mov
push
outsl
adc
mov
addl
pop
cmpsl
pop
test
dec
mov
push
push
lods
mov
push
mov
addb
xor
or
cmp
push
addb
jge
and
fwait
add
lret
jnp
shll
into
sbb
and
imul
leave
stos
sub
pop
cmc
ret
pop
pusha
andl
vmread
cmp
daa
dec
aam
rcrb
enter
daa
xlat
cmpsb
jge
xlat
sub
inc
mov
sub
shlb
push
sbb
addr16
int3
mov
lea
shrb
mov
loopne
mov
cmpsl
add
add
imul
int
pop
or
mov
pusha
sbb
leave
mov
loope
mov
add
nop
cs
das
xchg
into
push
sbb
jne
mov
xlat
leave
sbb
jmp
or
mov
mov
int3
clc
stos
in
jmp
aam
mov
jnp
outsb
iret
sub
insb
xchg
add
push
andnps
pop
cli
mov
ljmp
jp
mov
in
leave
test
push
or
push
adc
jns
jl
pop
repz
repz
out
push
push
shlb
mov
adc
push
imul
in
cmp
lret
stos
outsl
lahf
inc
pop
pop
repz
xchg
jb
and
out
pop
sub
enter
hlt
mov
inc
out
jnp
and
pop
push
jns
sbb
add
into
lds
xchg
movsb
mov
mov
inc
jl
ja
xor
xor
aaa
bnd
mov
fisubrs
les
sbb
test
inc
pop
sbb
addr16
dec
push
cld
mov
jns
jmp
lret
push
addr16
sbb
sbb
sub
lods
dec
cmp
int3
sub
xchg
flds
das
or
scas
dec
popa
mov
sub
cmp
test
xchg
pop
jno
lds
mov
insb
aaa
inc
ret
jo
pop
xchg
lcall
inc
fidivrs
idivl
js
mov
ss
push
mov
sbb
inc
mov
fwait
cmc
inc
pop
test
mov
adc
jo
lea
sahf
cltd
enter
rcll
inc
add
xorb
sbb
adc
mov
sbb
mov
cltd
cwtl
push
cmp
or
mov
pop
push
fisubs
clc
sti
fidivs
inc
aam
mov
lahf
dec
aaa
cmpsl
imull
loope
icebp
fwait
sbb
add
dec
xchg
int3
adc
and
cmp
leave
jmp
sub
and
mov
cmp
fcmovnu
or
mov
ret
inc
in
cltd
or
lret
or
push
fistl
iret
pop
push
cmp
dec
leave
pop
cmp
add
inc
pusha
add
call
bound
pop
dec
jl
mov
outsb
das
cmpsl
xlat
add
pushf
bound
adc
std
pushl
mov
jge
test
sti
xchg
imul
pop
in
and
jbe
xlat
out
mov
lahf
lret
test
fwait
popa
pop
aam
mov
movsl
jne
cltd
jg
inc
cmp
outsb
aaa
pop
inc
adc
jns
pop
rclb
ljmp
jmp
lret
mov
push
jle
pop
dec
mov
sub
xlat
test
cmp
popf
adc
popa
popf
rcr
fldl
test
lcall
inc
test
popf
rcrb
faddp
ret
mov
mov
push
imul
xor
aaa
xchg
and
dec
and
inc
or
xchg
sbb
pop
adc
int3
dec
pop
imul
pusha
lahf
pop
jnp
repz
jge
mov
dec
scas
je
out
push
cmc
ljmp
cmp
stos
sahf
inc
popl
cmp
stos
dec
and
push
aam
jns
mov
sub
cmpsb
xlat
loope
dec
push
add
pop
and
stc
xlat
test
nop
je
push
push
adc
je
mov
cmp
dec
xor
fs
cmc
je
movsl
es
fdivl
mov
mov
test
and
jl
es
aas
pop
xchg
sub
sub
popf
sti
daa
add
push
add
dec
jnp
cli
add
inc
ud1
push
mov
dec
mov
and
in
cmpsl
movsb
inc
sbb
sti
inc
xor
cmp
ds
pushf
lock
or
pushf
jp
xchg
xchg
dec
sub
movsb
mov
add
pushf
out
jle
mov
mov
fwait
popf
sarl
jb
cmp
in
pop
jp
test
mov
jb
push
push
sub
or
cmp
sbb
push
xor
test
push
add
mov
lcall
mov
scas
ret
pop
fistpll
call
pop
mov
and
inc
fsubs
movsl
mov
add
mov
xor
sub
lcall
shl
fnstenv
mull
loopne
test
xchg
jae
mov
sbb
movl
xchg
pop
lods
add
in
loopne
jmp
ret
rorl
ret
xchg
adc
inc
in
xor
pop
jo
rcll
pop
dec
pusha
movsb
push
ja
leave
ret
loopne
push
mov
dec
mov
dec
cmpb
out
push
adcl
push
jbe
push
mov
adc
and
pop
push
adc
mov
fnclex
sub
jmp
rol
jae
lret
mov
lods
into
in
add
and
sbb
cmp
iret
push
xchg
fwait
sub
mov
sub
popf
mov
jge
xabort
pop
xlat
inc
jo
bound
xchg
xchg
or
jno
inc
add
add
ret
rol
mov
jne
imul
mov
pop
cs
or
ror
push
rcrl
adc
dec
cwtl
pop
imul
dec
je
cmp
repz
mov
inc
cmp
dec
das
pop
test
subl
imul
mov
dec
sub
leave
stos
out
fbld
push
negl
aad
push
loopne
push
out
add
ljmp
outsb
jno
mov
mov
pop
stos
inc
push
sub
fisubrl
mov
rcll
in
xor
sbb
mov
fwait
shl
xchg
or
mov
inc
push
xchg
jo
mov
stos
lds
inc
fsubr
dec
negl
fidivs
daa
fcomps
and
sub
test
pusha
shlb
xchg
jb
andl
iret
mov
dec
fcompl
xchg
xor
lods
cmp
add
daa
stc
inc
mov
sbb
mov
or
pop
mov
pop
mov
dec
add
adc
loopne
rorl
adc
mov
pusha
sbb
jns
stos
rcrb
jne
jge
fildll
jg
mov
int3
dec
push
fwait
aad
sarb
lods
push
aaa
scas
push
test
cmp
inc
test
repz
and
test
dec
xor
mov
popf
lret
shll
sbb
movsl
pop
sbb
mov
cmp
cmp
inc
scas
insl
mov
popf
add
cmp
push
pop
in
lods
movb
loope
cmpsl
shll
cld
xor
mov
pop
xchg
mov
or
jl
ret
sbb
add
fildl
or
test
push
clc
mov
sbb
aam
andb
dec
mov
push
cmp
mov
cmp
xor
mov
std
sbb
mov
sbb
and
add
mov
int
les
mov
cmpsl
and
int
inc
into
mov
shr
xor
je
ret
sub
xor
lea
push
cvttss2si
test
int
mov
mov
mov
push
test
cld
jg
xor
adcl
cmp
dec
pusha
in
pop
mov
mov
imul
pop
js
mov
mov
lock
sub
xchg
je
fsts
xchg
sub
leave
pop
test
lahf
inc
jge
mov
fistpll
pushf
adc
cmp
cmpsl
setne
mov
call
dec
test
iret
out
fsubs
cltd
repnz
xchg
cmpsb
jge
xlat
sub
sub
rcrl
cmp
out
and
sarb
inc
cmp
jne
fwait
push
xchg
lret
mov
adc
es
cmpb
xor
mov
xchg
xchg
jle
push
dec
mov
sub
pop
jmp
pop
test
or
pop
adcl
xchg
jecxz
lahf
inc
aas
mov
sahf
dec
and
fistpl
jo
sti
test
loopne
data16
or
or
into
cwtl
and
ret
js
movsl
ret
lahf
aaa
push
push
test
iret
pop
mov
sbb
push
in
xlat
dec
iret
pop
jae
fistpll
fs
jae
cmp
cs
or
ret
push
jle
push
aaa
jge
dec
mov
stos
mov
movsl
jbe
push
sbb
lods
popf
adc
es
add
jae
ficompl
sbb
add
adc
xlat
or
add
je
mov
xor
adc
xchg
adc
xchg
imul
and
insb
mov
push
popf
inc
inc
jecxz
stc
dec
adc
xchg
enter
mov
out
stc
adc
sub
iret
or
pop
movsl
stc
inc
pop
inc
push
xchg
shrl
movsb
in
lret
aas
leave
loopne,pt
out
dec
push
nop
sbb
jecxz
in
imul
or
and
xor
mov
dec
fdivrl
sbb
in
mov
test
mov
sbb
mov
mov
sbb
stos
cmp
sbb
pop
inc
loopne
push
mov
mov
add
insl
test
adc
and
movsb
jl
xchg
fdivrs
cmc
in
js
cmp
stc
mov
fwait
xor
testl
lock
cmp
dec
popa
inc
int
dec
mov
dec
cmp
lods
adc
mov
repnz
pop
mov
sbb
push
aaa
call
xchg
pop
sahf
addr16
push
mov
mov
inc
jl
lahf
dec
adc
mov
dec
adc
popa
adc
into
pop
stos
pop
call
fbstp
lret
cwtl
aas
adc
jae
fadd
or
lcall
adc
ret
nop
adc
popa
dec
int3
addr16
lcall
mov
mov
inc
mov
inc
fidivrs
mov
pop
jecxz
enter
movb
xchg
pop
cmpsb
pop
push
pushf
movsl
clc
lock
outsb
push
vpaddusb
das
push
mov
xor
or
cmp
pusha
dec
fsubrl
pop
popa
mov
and
mov
shlb
inc
sarb
or
in
clc
or
imul
xchg
js
xor
adc
mov
stos
out
js
adc
jnp
gs
lock
hlt
int3
xor
mov
sbb
and
loope
mov
xor
aam
mov
or
mov
lock
add
imull
jnp
mov
inc
sbb
sbb
aaa
xchg
lds
pop
sbbl
ja
int3
in
ret
pop
sbb
arpl
dec
fwait
sbb
int
adc
inc
mov
shrb
addr16
out
inc
movsb
push
popf
faddp
sarl
ret
inc
bound
sbb
jnp
stos
jo
in
notb
addl
dec
sub
fstpl
dec
add
xchg
sbb
jl
ret
jo
or
mov
mov
mov
sbb
and
call
stc
mov
adcb
pop
jmp
jmp
je
xchg
fldenv
jp
mov
jnp
daa
pop
fidivrs
or
negl
cltd
enter
out
jl
pusha
push
insb
aaa
dec
sarb
adc
out
mov
inc
jg
dec
daa
sub
xlat
xor
mov
push
or
inc
mov
push
adc
jl
pop
inc
add
inc
mov
mov
jb
mov
jne
dec
lods
or
cmpb
mov
sbb
dec
pop
sbb
cli
push
sbb
sahf
popf
dec
xor
stc
push
push
inc
push
mov
loop
into
sub
movsl
cld
andb
xchg
test
nop
dec
push
mov
cld
jmp
mov
push
pop
xchg
mov
lods
pop
dec
push
adc
xchg
adc
ja
mov
lret
mov
fldt
lret
test
push
push
cmpsb
dec
add
sahf
push
test
lock
cmp
test
xchg
not
add
imul
stos
cmp
daa
jnp
repz
imull
icebp
mov
int
out
addl
add
sbb
push
and
rol
in
sarb
xor
jns
adc
test
pop
addr16
imul
mov
mov
pop
push
sub
call
fisttpll
test
testl
cmpsl
jecxz
adc
or
fcomps
sti
lcall
sub
ss
cli
xchg
mov
je
aaa
jns
sti
cmp
jae
in
lods
push
cld
mov
add
adc
lret
icebp
pop
inc
or
outsb
push
jno
inc
and
dec
xchg
imul
shrb
push
jge
sbb
mov
ja
xor
andl
iret
fildl
push
or
rclb
dec
adc
pusha
pop
cmpl
fmuls
loopne
xchg
into
fistps
sub
sub
or
adc
shlb
icebp
pop
mov
xchg
add
xor
mov
je
hlt
aas
lahf
inc
vdivsd
lods
pop
es
mov
pmulhw
inc
into
xchg
mov
lods
mov
fnstenv
inc
lret
aad
stc
xchg
or
imul
fisubrs
sti
dec
pop
cmpsl
rcrl
push
mov
sahf
mov
cwtl
xlat
sahf
jnp
leave
insb
mov
test
outsl
aam
stos
out
sbb
out
inc
movsb
push
xchg
sahf
pop
scas
mov
push
sbb
xchg
xchg
insb
sbb
or
xchg
lcall
cwtl
mov
rorl
push
cmp
dec
push
adc
lret
xchg
or
and
jnp
es
and
lock
sub
pop
sub
xor
loopne
out
mov
adc
or
int
adc
je
cmp
pop
or
scas
inc
pop
sbb
fbld
aas
add
out
mov
lds
mov
adc
inc
inc
mov
fldl
lcall
jge
movsb
lods
xchg
das
lcall
stos
xchg
lret
jecxz
or
int
fs
lds
and
add
xchg
dec
sbb
pop
dec
lock
sbb
loop
jge
inc
movsl
push
sarb
insl
fwait
ret
xor
lods
mov
popa
sub
rol
xchg
xlat
mov
lret
icebp
jmp
test
push
dec
pop
bound
pop
xlat
jg
stos
in
lock
jno
arpl
push
sub
mov
adc
mov
cmp
xchg
dec
data16
inc
jge
inc
adc
ret
out
test
ss
sti
test
lahf
fs
add
inc
cld
scas
push
es
and
add
mov
fwait
jmp
sbb
jns
jnp
pop
mov
mov
jp
fsubrs
fmuls
cmpb
pusha
test
cltd
les
dec
cltd
push
es
inc
xchg
pop
enter
ret
test
pop
das
xor
mov
popf
out
mov
loopne
gs
imul
fbstp
jg
push
lods
sbb
pushl
add
mov
movb
jnp
nop
jno
dec
push
cld
or
cmp
adc
pop
xchg
add
push
mov
dec
aam
mov
fwait
xchg
mov
mov
sbb
xchg
mov
dec
lock
jmp
js
and
dec
xchg
xor
push
xor
xor
mov
mov
and
mov
in
mov
inc
or
cmp
std
je
test
fwait
jmp
jnp
out
andb
nop
mov
inc
sbb
jbe
into
pop
sub
out
cmp
cmp
outsl
mov
mov
addl
mov
or
orl
cmp
inc
xor
sub
jmp
fiadds
fnstsw
fistpl
pop
loope
pushl
cwtl
xchg
icebp
clc
sti
mov
repz
xchg
roll
sub
scas
xor
jp
mov
movsl
aad
mov
jmp
lret
inc
test
cltd
in
lret
ficompl
ljmp
stc
cli
or
sbb
test
mov
sbb
mov
sub
jp
cmp
push
sub
lods
inc
cltd
packsswb
fistpll
mov
leave
loop
pop
andl
stos
orl
loop
xchg
fildll
dec
and
adc
sbb
mov
popf
mov
gs
mov
fcomi
enter
in
cmpb
or
cmp
stos
adc
jnp
jmp
mov
and
mov
pop
int3
icebp
mov
ret
pop
jg
mov
sbb
mov
fwait
adc
mov
adc
test
dec
sbb
add
test
fcmovne
lret
lahf
aas
mov
mov
push
aad
mov
fildll
cmp
jne
inc
mov
mov
sahf
das
xchg
stc
cli
cmp
add
pop
bound
or
vmovdqu
stos
xchg
stos
mov
jnp
push
mov
jnp
sbb
push
mov
ret
pusha
push
cmp
pushf
push
inc
fwait
leave
loop
inc
xchg
and
sbb
ret
dec
jl
pop
clc
pop
mov
push
cli
rcrl
aam
add
mov
inc
sbb
cmpsb
ret
sahf
mov
outsl
mov
mul
cmp
int3
xorb
aas
sub
cmp
jg
mov
adc
mov
sub
xchg
pop
xor
aas
xchg
ret
cld
mov
jbe
sti
xchg
add
pop
mov
mov
adc
and
jmp
ljmp
dec
mov
add
dec
mov
test
dec
lret
insl
ljmp
mov
fsubrs
sbb
sbb
test
sbb
or
xchg
repz
fcmove
pop
cmpsb
push
push
leave
pop
ljmp
test
lods
inc
pop
lock
lahf
inc
jge
jg
jns
mov
fwait
out
jb
out
mov
testl
lea
xchg
cmp
popl
fstpl
jns
push
xor
cwtl
sub
call
cmpsb
inc
cltd
hlt
imul
cld
xchg
enter
or
cmp
inc
cmc
sbb
lods
pop
arpl
dec
out
andb
sub
sahf
aam
mov
imul
repz
sti
mov
data16
cltd
mov
mov
mov
or
or
cld
popa
and
mov
jp
xor
shrl
inc
scas
sbb
dec
pop
inc
and
mov
inc
xchg
stos
les
addl
pop
lock
push
jne
jge
stc
mov
inc
lcall
push
push
arpl
arpl
dec
lods
fucomip
sbb
mov
adc
jo
adc
aas
cmpsl
push
addl
cmp
add
dec
xor
adc
pop
mov
test
push
sub
and
pop
mov
jnp
cli
sbb
jl
mov
ret
mov
dec
pop
mov
rolb
les
push
scas
fisubrs
nop
jmp
lock
das
or
jbe
cmp
das
repz
js
pop
lods
push
in
mov
or
ds
iret
or
mov
sbb
mov
cld
or
jne
sub
movsl
mov
ficomps
cwtl
xlat
xchg
addb
mov
sub
std
loope
mov
in
cmp
fimuls
repz
test
test
cmp
xchg
push
inc
das
shll
ljmp
push
pop
cmpsl
dec
inc
mov
jmp
test
push
mov
rorb
pop
or
adcl
lea
mov
out
addr16
xlat
xchg
mov
ret
mov
pop
mov
std
cmp
add
inc
aad
push
jecxz
movsb
dec
mov
push
xor
ds
jns
mov
push
pushf
jnp
shr
popl
xor
cmpsb
into
repz
shl
mov
shlb
lds
fnstenv
lock
adc
pop
dec
mov
sub
frstor
xor
fmull
cmp
push
dec
jb
test
mov
pop
mov
sub
inc
sub
scas
out
dec
fisttpll
inc
and
mov
inc
xchg
xchg
cmpsb
pop
sub
inc
pop
lock
push
jne
jge
stc
mov
inc
lcall
dec
pusha
inc
sub
add
cltd
dec
pusha
pop
push
scas
xchg
enter
popf
mov
inc
ss
cmpb
rcll
xchg
mov
and
add
mov
out
fstpt
mov
mov
scas
add
dec
inc
xor
or
mov
cmp
sahf
imul
dec
inc
cmc
fsubs
hlt
cmc
dec
mov
popa
xlat
mov
dec
std
fnstsw
test
fbstp
sarb
aad
adc
xor
mov
xor
shll
inc
push
push
xor
pop
jae
aam
cmp
add
cmp
addr16
mov
arpl
mov
push
repz
add
dec
and
call
inc
daa
rorl
pop
scas
shrl
xor
mov
xlat
or
mov
int
jno
fisttpl
imul
in
popa
adc
insb
xor
or
adcb
and
pop
ret
adc
add
add
iret
xchg
shr
jo
sbb
xchg
int3
pusha
xor
lret
test
push
shrb
leave
test
mov
outsl
negl
fst
outsl
mov
imul
pop
xchg
dec
mov
fcoml
xchg
leave
jecxz
cwtl
pop
push
jno
out
icebp
stc
jnp
sahf
pop
xchg
iret
loope
ja
popf
ficoms
shr
jae
pushf
pop
pop
stc
loope
out
outsb
xor
xchg
dec
and
push
adc
lock
and
cmp
add
cmp
pop
outsl
xchg
sti
mov
test
gs
jno
pop
adc
ss
add
jo
push
mov
adc
stos
adc
jo
int
or
js
or
add
shl
sub
push
scas
hlt
xor
loop
adc
cmp
mov
enter
fidivrl
xor
xor
mov
iret
lods
sbb
and
mov
inc
ret
cmpsl
xchg
push
shll
mov
icebp
bound
call
push
scas
in
ss
push
jae
fsubp
xor
adc
cmp
icebp
clc
jle
scas
xchg
repz
cli
jge
pop
scas
xlat
repz
lock
jle
fwait
iret
in
mov
cmp
jp
cmp
fldt
ret
mov
movsl
pop
xchg
sub
enter
dec
mov
stos
shll
scas
push
test
mov
or
inc
sub
cmpsb
ss
out
into
jns
stos
mov
jae
xchg
sahf
rorb
rorl
inc
adc
dec
mov
subl
jl
push
add
lret
sub
lahf
jle
das
mov
inc
bound
cmp
sbb
pop
movsb
cwtl
adc
or
or
push
gs
sub
mov
scas
mov
xchg
xchg
adc
push
sub
push
iret
jp
enter
mov
jmp
std
mov
sti
popa
and
sbb
loope
mov
ret
lret
cmp
call
add
fcompl
mov
test
adc
mov
daa
fdivrl
jle
stc
mov
sbb
ret
inc
test
jg
push
mov
mov
xorb
stos
cmpsl
mov
cli
jns
cli
sub
fwait
or
test
lcall
es
xor
movsb
mov
das
xchg
and
inc
test
or
sahf
and
sbb
addb
das
rolb
shlb
ljmp
test
into
inc
sbb
and
jp
fdivrs
dec
dec
scas
hlt
test
sbb
jb
inc
and
adc
inc
push
and
fldenv
xor
lret
pop
mov
jp
inc
nop
dec
and
dec
mov
or
dec
movsb
inc
sbb
sub
fcomp
xchg
cmp
and
enter
push
mov
aas
jbe
mov
jb
lret
in
sub
add
inc
sbb
jecxz
inc
or
mov
dec
call
movb
mov
or
andl
rcrl
push
lar
pop
mov
sbb
scas
mov
cmp
mov
cltd
mov
test
mov
dec
cmp
mov
cmpsl
fwait
mov
mov
mov
fisubrl
fmull
mov
rcll
dec
mov
mov
mov
jl
sub
jle
sbb
lds
jmp
test
jno
jg
jl
int3
cmpsl
imul
inc
add
push
adc
xchg
inc
cwtl
outsb
pushf
add
imul
mov
jp
sbb
xor
push
jns
test
push
add
xor
jecxz
mov
fwait
sub
loope
or
mov
mov
cmp
and
daa
jg
jge
fisttps
test
cmp
jp
add
lods
sub
in
dec
loopne
mov
sbb
mov
xorb
lods
xchg
sub
xchg
mov
lret
lret
lcall
sbb
stos
and
adc
popf
lret
jmp
mov
mov
mov
sbb
in
mov
pushf
pop
inc
stos
and
cwtl
ljmp
pop
shrb
push
stos
andl
lahf
faddp
pushf
and
js
jg
dec
imul
fs
cmpsl
push
repz
ficoms
and
jae
cmpsl
xchg
and
push
and
inc
cwtl
popf
adc
pop
mov
adc
fisubrl
sbb
flds
mov
pop
mov
sbb
in
inc
fdivr
dec
inc
je
dec
mov
aad
sar
inc
es
mov
pop
mov
insb
jbe
inc
dec
mov
fstpt
arpl
push
mov
add
mov
cmp
jp
gs
mov
ja
push
rorl
inc
cli
inc
inc
dec
loop
adc
dec
ret
adcl
test
inc
sti
xchg
and
arpl
mov
imul
xchg
rol
fiaddl
aas
lods
fsubrs
inc
test
jo
push
insb
sub
push
sbb
sub
fnstenv
bound
jbe
mov
mov
push
imul
jnp
and
pop
outsl
cld
jle
xchg
mov
js
adc
cmc
jp
xchg
ds
mov
or
adc
cmpsb
fdiv
pop
ljmp
pop
cwtl
and
cmc
sarl
test
inc
sbb
in
ss
cmp
or
test
inc
add
xchg
cmp
xchg
orb
sub
push
xchg
int3
push
push
sub
jl
inc
into
sbb
or
sub
and
xor
adc
cltd
sub
xlat
xor
test
xlat
in
fisubrs
clc
ret
sub
aam
adc
dec
mov
imul
adc
dec
pop
mov
inc
test
jl
sbb
or
dec
aad
mov
inc
inc
mov
push
cmp
sbb
lahf
dec
or
or
push
mov
push
and
add
mov
jl
int3
pop
push
jg
jo
ljmp
cmp
jle
adcb
push
sub
cmc
mov
fldt
stc
dec
cwtl
pop
in
pop
xchg
push
outsl
mov
sbb
mov
popf
dec
or
nop
dec
lret
dec
test
in
push
repz
pop
push
inc
inc
cmp
push
mov
pop
mov
jae
mov
xchg
sti
hlt
mov
cmp
out
ja
mov
push
mov
sub
lods
xchg
sub
jno
mov
lods
and
mov
push
ljmp
mov
xchg
cmpsl
dec
popf
insl
mov
fsubrs
cmp
or
cmp
lret
or
dec
roll
jns
sbb
push
mov
ds
das
xchg
out
popf
popf
inc
sbb
mov
shlb
mov
scas
aaa
mov
cli
jnp
lods
mov
cmpb
roll
jnp
xchg
sbb
cmp
xor
lods
mov
adc
sti
repnz
fwait
inc
dec
cmp
dec
xor
mov
mov
adc
iret
fsubs
sub
add
cmp
lea
arpl
int3
inc
pop
mov
in
mov
push
jae
mov
sbb
add
or
xchg
xchg
push
sbb
enter
add
mov
sbb
vandnps
mov
cmp
inc
adc
mov
mov
jnp
cmpb
mov
mov
push
cltd
inc
sub
pop
sub
jp
fstl
mov
sub
sahf
or
mov
aas
sbb
xchg
mov
inc
fwait
outsb
mov
clc
jl
or
sbb
mov
fwait
mov
mov
int
mov
js
pop
jmp
mov
xlat
iret
mov
inc
sbb
mov
loopne
ds
jmp
std
mov
sti
mov
mov
mov
xchg
mov
cltd
dec
daa
mov
lret
dec
sahf
in
aaa
add
cwtl
dec
and
mov
imul
pop
cmp
or
shll
mov
cmp
out
ja
mov
dec
sbb
aaa
push
mov
sub
lods
xchg
sub
jne
vandnps
mov
fnstcw
inc
sbb
mov
mov
jnp
andb
pop
jae
lret
subl
xorl
adc
data16
gs
fistl
sbb
jb
xor
jp
sub
loopne
repz
mov
xchg
mov
aaa
js
sub
test
jle
fwait
mov
mov
int
mov
js
pop
jmp
mov
xlat
iret
mov
inc
sbb
mov
loopne
ds
jmp
std
mov
sti
mov
adc
inc
leave
mov
xchg
mov
test
mov
sub
in
aaa
add
cwtl
dec
and
mov
insl
pop
mov
jae
nop
into
inc
xchg
imul
cld
mov
out
add
lea
cld
inc
or
movsb
push
fiadds
movsl
xlat
jecxz
fisubrl
clc
mov
push
push
mov
pop
sub
es
mov
imul
jecxz
in
test
cld
dec
jg
leave
movsb
xor
mov
cmpsb
xor
adc
sub
sahf
or
mov
aas
add
xchg
mov
mov
clc
jl
or
sbb
mov
fwait
mov
mov
int
mov
js
pop
jmp
mov
xlat
iret
mov
icebp
loopne
ds
jmp
std
mov
sti
mov
rcr
insb
inc
inc
test
dec
lds
movsb
push
leave
dec
inc
mov
push
inc
jbe
dec
mov
xchg
mov
xlat
mov
or
popf
mov
cmp
jp
popa
lahf
mov
or
in
add
test
nop
push
cmp
mov
stos
inc
cmp
dec
pushf
in
aaa
inc
test
sub
cmp
sub
sub
mov
mov
icebp
movsb
mov
cli
je
fistps
dec
cmp
outsl
mov
mov
inc
sbb
xor
mov
cmpsb
xor
adc
xchg
lods
jle
dec
aas
jmp
popf
xchg
inc
outsl
sbb
test
dec
pop
push
popa
idivb
cwtl
lcall
or
in
mov
jnp
popf
xor
lods
movsl
xor
jae
stos
mov
cmpsb
sbb
fsubs
xchg
mov
cmp
inc
jle
xor
pop
data16
dec
dec
mov
daa
inc
inc
lret
or
pop
in
inc
test
sub
xchg
cmpl
je
fdivrl
test
pop
popf
mov
cmp
jp
add
xor
cmc
cld
jg
sub
iret
cli
mov
pusha
push
sub
sbb
std
test
dec
inc
pop
rcl
mov
stc
cli
cmp
push
cmp
outsb
fstps
out
pop
popa
aas
dec
cmpsl
outsb
imulb
mov
cmpsl
loope
lahf
mov
push
mov
adc
xor
xchg
cli
xchg
pop
pop
outsb
js
stc
jl
adc
cwtl
popf
std
jle
add
mov
add
xchg
int
out
mov
push
mov
lahf
movsl
pop
jge
scas
xlat
cmc
mov
fldt
pop
adc
pop
stc
outsl
js
cltd
dec
enter
mov
xchg
push
xorl
inc
mov
push
mov
arpl
int3
push
jg
js
addl
mov
push
call
dec
inc
jg
mov
aaa
dec
cmpsl
jecxz
lcall
xchg
int3
adc
ret
in
js
test
mov
aad
std
add
test
dec
inc
sbb
sarl
stc
cli
cmp
mov
insl
ret
add
scas
js
shrl
adc
xor
or
mov
cmp
jbe
sub
sti
sub
adc
mov
loop
lcall
cwtl
iret
outsb
jle
popf
fimull
lods
out
negl
pop
xchg
int
sub
out
js
jmp
mov
xchg
imul
subb
dec
sbb
jg
data16
sti
mov
push
pop
lcall
enter
mov
inc
inc
cwtl
dec
sbb
mov
mov
inc
sbb
mov
inc
popf
mov
fstps
fsubrs
popf
mov
cmp
jp
gs
rol
push
sbb
leave
decb
imul
ss
lock
cmp
repnz
inc
sbb
mov
pop
cmp
dec
pop
mov
sahf
das
xchg
stc
cli
cmp
adc
test
xor
jg
or
dec
fwait
outsb
subb
testb
xchg
mov
mov
dec
cltd
mov
fstps
push
or
scas
aaa
mov
cli
jnp
and
in
subl
adc
dec
cmp
mov
cwtl
out
aaa
fucomp
je
push
aas
fwait
lret
in
mov
fldt
lret
fsubs
mov
pop
mov
mov
insl
xor
pop
add
dec
addl
sarl
jmp
mov
shrl
movsl
sub
or
sarl
sbb
in
stos
mov
dec
sbb
xchg
insl
test
jg
mov
push
mov
sub
rcrl
lret
scas
or
pop
mov
inc
push
xchg
xchg
cmp
fidivl
fisttpl
add
push
xor
or
xchg
sbb
daa
push
pushf
movsl
mov
ja
dec
loopne
icebp
mov
scas
dec
clc
add
adc
notl
mov
cmp
popf
dec
int
cmp
jae
iret
out
jle
popf
cmp
pop
cmp
mov
negl
loope
pop
ds
mov
in
out
into
pop
mov
stc
add
cmp
insb
jbe
inc
jne
mov
cmp
dec
pop
stos
in
pop
fwait
cmp
popf
iret
adc
mov
dec
inc
shl
cmp
sub
cmp
xchg
pusha
or
mov
cmp
mov
mov
sub
push
mov
imul
flds
xchg
sbb
fldenv
sbb
test
lcall
cltd
int3
adc
ret
in
pop
add
movsb
shr
daa
add
test
movsb
jmp
fcmovne
decl
add
insb
add
adc
xchg
mov
mov
sbb
or
sbb
aad
fistl
mov
lods
pop
popa
fwait
sub
adc
in
push
in
test
out
mov
mov
sbb
shr
mov
and
xchg
jo
cmp
in
mov
jnp
fwait
xor
lods
mov
or
mov
mov
outsl
mov
cwtl
dec
and
cmp
or
cmp
dec
dec
mov
push
sarl
mov
inc
jns,pt
pop
scas
mov
dec
pop
sub
sub
fsubrs
popf
mov
cmp
jp
popa
cwtl
rcl
lea
mov
sub
ret
cli
xchg
loop
adc
dec
ret
adcl
cltd
lret
lcall
jns
mov
inc
adc
cli
je
fistpl
dec
cmp
outsl
mov
mov
inc
sbb
xor
mov
cmpsb
xor
adc
sbb
jb
xor
jp
sub
loopne
repz
mov
test
fisubrl
shrl
cmp
sbb
pop
and
iret
cmp
aaa
pop
xorps
in
jbe
mov
fldt
fstps
lea
mov
jne
scas
jg
inc
cmp
outsb
aaa
mov
lods
aaa
or
pop
sub
js
pop
fnsave
les
ds
ds
mov
dec
xchg
xor
jp
popa
mov
mov
or
int3
popf
int3
adc
add
mov
lods
and
xorl
jns
mov
mov
icebp
movsb
mov
cli
je
xlat
sub
cmp
or
cli
cs
iret
sbb
inc
pop
bound
xchg
int
xor
adc
test
int3
data16
cmp
out
inc
lret
loop
push
int3
mov
push
das
cmpsl
sbb
mov
fwait
mov
mov
les
mov
imul
inc
lret
leave
popf
fsubp
and
sahf
sub
fucomi
hlt
std
mov
sti
mov
push
fsubrl
mov
xchg
mov
mov
or
in
aaa
sbb
cwtl
dec
and
mov
imul
inc
xlat
sbb
jae
mov
xchg
sti
hlt
mov
cmp
out
ja
fwait
add
lods
aaa
dec
mov
sub
lods
xchg
sub
jno
mov
pop
lods
and
les
dec
lods
fildll
mov
int
pushf
jae
sarb
data16
jbe
lcall
xchg
cmpsb
push
mov
jno
shll
or
stos
xor
jmp
mov
or
lahf
mov
cmc
cmp
dec
mov
neg
xchg
jb
sbb
cmp
in
mov
jnp
fwait
xor
lods
mov
or
mov
mov
outsl
mov
cwtl
dec
and
cmp
or
cmp
dec
dec
mov
push
sarl
ja
inc
ds
cs
scas
xchg
outsb
dec
pop
sub
sub
fsubrs
popf
mov
cmp
jp
popa
mov
in
add
lcall
inc
mov
int3
adc
jmp
mov
xor
lods
push
add
jo
push
push
pop
jns
pop
xor
fldcw
push
fldcw
sbb
insl
mov
xor
mov
aas
cltd
add
push
dec
cmpsl
outsb
subb
testb
repnz
inc
and
jae
fdivrp
out
xor
push
imul
jnp
and
andl
std
mov
mov
fnstsw
jp
add
push
in
mov
mov
leave
mov
push
pop
sub
fucomi
hlt
std
mov
sti
mov
sub
insb
inc
inc
xchg
dec
dec
or
mov
dec
lret
or
pop
hlt
add
add
stos
push
inc
lds
jb
and
fsubrs
popf
mov
cmp
jp
popa
orb
test
nop
push
cmp
mov
inc
cmp
into
addr16
lcall
test
sub
cmp
sub
sub
loopne
mov
icebp
movsb
mov
cli
je
negl
dec
cmp
outsl
mov
fwait
mov
xchg
push
sub
jp
fistl
xchg
lods
jle
dec
aas
jmp
popf
xchg
dec
out
sbb
test
dec
pop
push
dec
idivb
leave
lcall
or
in
mov
jnp
popf
xor
lods
movsl
xor
jae
stos
mov
cmpsb
sbb
fsubs
xchg
jb
mov
xor
inc
sbb
enter
mov
dec
mov
daa
inc
inc
lret
or
pop
in
add
xchg
cmpl
je
push
mov
mov
pop
popf
mov
cmp
jp
add
sbb
mov
icebp
cld
jg
and
sub
xor
dec
xlat
in
fisubrl
mov
dec
and
inc
rorb
add
xor
ret
mov
push
adc
xchg
mov
mov
sbb
or
dec
roll
jns
sbb
push
mov
adc
xchg
out
sahf
lahf
inc
sbb
mov
shlb
mov
scas
aaa
mov
cli
jnp
and
in
subl
adc
dec
cmp
iret
out
xchg
xchg
inc
cwtl
out
aaa
aad
je
push
aas
fwait
lret
in
mov
fldt
dec
pop
lea
in
cmp
adc
sbb
cmp
jle
mov
mov
fmulp
pop
sbb
clc
js
pop
push
addb
push
addb
pop
mov
jne
test
jnp
stos
mov
dec
sbb
iret
pop
dec
mov
sub
sbbl
data16
jno
mov
pop
lods
and
mov
push
ljmp
mov
movsl
in
popf
insl
mov
fsubrs
cmp
or
cmp
int
scas
xchg
inc
negl
stos
popf
mov
ficoml
mov
shll
int
jecxz
pusha
dec
jb
sub
imul
jnp
and
in
test
std
lea
mov
int
mov
js
lcall
addl
pop
leave
pop
loop
and
aas
sub
fucomi
hlt
std
mov
sti
mov
stos
shrb
addb
lds
movsb
push
testl
loope
add
inc
jle
jae
pop
jbe
mov
pop
test
pop
push
dec
iret
or
inc
loopne
stos
aad
mov
jmp
jb
add
into
lods
xchg
sub
adc
cltd
add
mov
sub
add
fistpl
loopne
dec
pop
insb
iret
dec
sbb
jae
mov
sub
pop
adc
data16
adc
in
stos
xchg
inc
push
jp
in
sbb
or
mov
stc
jl
sbb
in
divl
aam
out
stos
and
in
add
int
test
push
mov
leave
pop
out
and
fildll
fucomi
hlt
std
mov
sti
mov
push
pop
lcall
enter
mov
inc
lcall
int
inc
mov
inc
sbb
mov
or
and
popf
mov
fstps
add
mov
mov
cmp
jp
gs
rol
push
sbb
leave
decb
imul
ss
lock
cmp
repnz
roll
add
mov
lahf
mov
pop
mov
sahf
das
xchg
stc
cli
cmp
inc
fisubrl
mov
xchg
lret
push
cmp
arpl
jle
push
std
enter
ret
jo
sub
xchg
popf
or
mov
dec
into
sbb
lahf
mov
cmc
cli
lahf
jl
aas
rorl
adcl
fs
cs
mov
test
mov
popf
xor
lods
mov
or
pop
cmp
lret
mov
sti
lret
cmp
xchg
pusha
int3
and
mov
cltd
or
jl
dec
xchg
push
sarl
xlat
inc
inc
xor
mov
shll
inc
testb
sub
or
sarl
sbb
popa
mov
jmp
cmp
rcrl
ss
dec
loop
sahf
sbb
into
mov
loopne
mov
test
mov
dec
enter
icebp
movsb
mov
cli
je
mov
or
imulb
push
cld
dec
cli
in
fstpt
sub
xchg
xchg
cltd
xchg
mov
fstl
mov
dec
push
pop
sub
sahf
or
push
cmp
and
out
and
leave
cmp
cmpsl
lret
stos
sbbl
dec
aad
int
mov
js
lcall
addl
pop
cli
dec
jnp
call
or
mov
fwait
xchg
xchg
xor
inc
push
fsubrs
mov
xchg
dec
xlat
dec
inc
xor
cmc
int3
mov
call
jne
mov
cmp
pop
xchg
orb
or
shll
jp
pop
dec
aaa
lds
ret
push
dec
lock
stc
gs
mov
mov
add
xchg
mov
sbb
mov
lods
and
mov
push
ljmp
mov
scas
gs
popf
insl
mov
fsubrs
cmp
or
cmp
int
mov
dec
aad
movsb
xchg
inc
scas
mov
lods
push
dec
cltd
es
mov
imul
jg
pop
xchg
mov
js
test
sub
scas
sbbl
mov
mov
fwait
lea
test
inc
in
fwait
int
sub
mov
movsb
sbb
inc
mov
subb
jnp
jnp
lock
pop
xchg
lods
data16
lcall
and
dec
addl
sarl
movl
daa
push
inc
testb
sub
or
popf
cltd
xor
mov
lea
stc
cld
or
and
sbb
mov
ret
or
push
rcl
dec
in
mov
lods
fwait
mov
push
ljmp
mov
lcall
fsubrs
cmp
or
cmp
int
mov
dec
aad
mov
pop
fstl
mov
sub
dec
adc
scas
push
mov
xchg
inc
scas
cmp
inc
xor
or
pop
push
push
jo
ljmp
cmp
cltd
adcb
push
sub
in
jbe
fsub
jne
fistps
ds
in
mov
pop
out
mov
data16
mov
pop
mov
cld
mov
leave
in
cld
jl
jbe
cmpsb
push
fwait
nop
dec
push
into
mov
rcr
repnz
add
xor
xchg
pusha
xor
mov
ja
pop
xchg
lods
sbb
shr
xor
data16
xor
add
jb
sub
insl
sub
jno
lods
and
out
mov
xor
dec
pop
cmp
mov
sub
mov
pop
outsb
push
hlt
jnp
imul
popa
or
stos
push
std
cmp
mov
xchg
cwtl
fsubrl
pop
sub
sbb
jb
jmp
mov
mov
dec
sbb
xor
fdivrs
or
sbb
mov
fwait
mov
push
cmp
test
fwait
xor
lods
jmp
pushf
and
jne
pop
stos
mov
test
dec
sbb
mov
mov
sbb
add
andb
js
sbb
mov
push
sarl
mov
inc
ds
test
pop
sub
pop
addb
mov
mov
cmp
jp
popa
lahf
mov
fldlg2
add
test
nop
push
cmp
mov
stos
inc
cmp
into
addr16
xchg
cmpsb
dec
pushf
in
aaa
cs
sub
cmp
sub
sub
mov
sbb
cli
je
fistpl
dec
cmp
outsl
mov
xchg
pushf
inc
sbb
xor
mov
cmpsb
xor
adc
sub
sahf
or
mov
aas
jae
xchg
xchg
lcall
jl
or
sbb
mov
fwait
mov
fistl
mov
push
sahf
and
mov
ret
add
stos
fstps
mov
sti
sti
mov
mov
or
push
aaa
mov
out
mov
cmc
cmc
pop
dec
push
dec
mov
dec
js
pop
adc
scas
cmp
mov
fcmovb
pop
pop
mov
add
inc
inc
enter
add
pop
dec
inc
lock
daa
mov
xchg
sub
fwait
ret
aam
cmp
mov
sbb
mov
pop
lods
imul
xor
jno
pop
sub
xchg
roll
test
inc
and
scas
push
pop
lret
stc
sub
or
or
cmp
lret
or
push
mov
jge
mov
adc
sub
jle
sbb
mov
into
cmp
data16
sbb
inc
stos
sbb
roll
mov
or
repnz
je
roll
push
in
enter
inc
inc
ss
leave
pop
add
and
xor
fucomi
hlt
std
mov
sti
mov
mov
sub
mov
nop
dec
inc
push
popaw
dec
daa
cs
shll
pop
das
xor
and
mov
ret
xchg
data16
je
lods
fwait
lds
lea
inc
mov
int3
arpl
and
cs
xor
mov
mov
pop
dec
mov
aaa
xor
fxch
addr16
stos
cmp
fisubrs
mov
push
adc
push
sub
sub
xchg
push
mov
in
pop
fsubrs
addr16
imul
pop
jnp
push
sub
out
mov
mov
sbb
mov
es
mov
adc
xor
mov
pop
xchg
pop
sub
mov
inc
adc
js
fwait
out
idivl
into
cmp
call
movsl
test
hlt
jp
jnp
fwait
push
pop
cmp
sub
lods
out
pop
xor
pop
pop
pusha
out
mov
pop
fidivrs
iret
and
mov
or
lret
mov
xchg
lea
xchg
movsb
push
jecxz
inc
mov
dec
and
add
and
add
fwait
loopne
sub
pop
add
inc
aas
jns
pop
cmpsl
test
dec
lahf
insb
mov
mov
sbb
test
lcall
fs
aas
and
cmpsb
arpl
sub
arpl
test
pop
sbb
mov
and
xchg
push
jp
je
aad
nop
mov
outsb
push
mov
adc
xor
xchg
cli
push
insl
add
pop
scas
dec
push
mov
ds
das
xchg
out
xchg
fadds
cs
shlb
mov
scas
aaa
mov
cli
jnp
and
in
andl
rorb
xor
or
xchg
xchg
sub
mov
mov
xlat
push
fidivl
loope
mov
inc
mov
push
fidivs
fmul
pop
xor
lret
jae
jmp
xchg
xchg
rclb
push
in
js
mov
jle
enter
cmc
xchg
add
pop
jns
clc
pcmpeqd
mov
popa
xchg
mov
dec
shr
add
rclb
pushl
dec
sub
int
sti
pop
add
adc
inc
aas
cmp
test
push
andl
cwtl
mov
lret
adc
std
insl
js
fldcw
jnp
mov
movsl
jae
or
sub
sti
adc
popfw
stos
gs
fistl
mov
sub
pop
jnp
js
shll
cli
leave
jmp
popl
ljmp
std
mov
xchg
scas
out
fwait
mov
mov
int
sub
mov
fwait
mov
cwtl
inc
out
inc
mov
ffreep
lahf
adc
and
sti
sti
mov
dec
shrb
mov
xchg
mov
loope
daa
mov
push
dec
sahf
in
aaa
imul
mov
insl
pop
test
jae
popf
into
inc
xchg
imul
cld
mov
out
add
lea
stc
cld
inc
or
stos
push
in
lret
mulb
xlat
loope
fisubrl
mov
dec
and
inc
rorb
push
call
push
cli
cmp
sbb
mov
jge
test
movsl
shl
sub
add
loope
and
dec
jl
jb
inc
jbe
test
sbb
cmc
sbb
cmp
sbb
add
mov
pop
cmp
repnz
sbb
mov
addr16
fwait
xor
lods
mov
adc
sti
repnz
fwait
inc
bound
popf
repz
mov
aaa
es
shl
add
sub
stos
push
scas
stos
inc
mov
xchg
cmp
shll
lcall
pop
insl
pop
xchg
jae
mov
inc
xchg
imul
cld
mov
out
add
lea
cld
inc
or
sub
mov
mov
scas
subl
call
imul
jne
sub
lcall
inc
xchg
imulb
cmpsl
xchg
test
ret
add
cli
jge
push
das
inc
mov
stos
shr
adcl
test
mov
sahf
mov
jnp
in
jbe
jmp
mov
cwtl
add
fists
xchg
jmp
inc
sarb
add
xchg
and
gs
data16
push
mov
lods
nop
xchg
pusha
scas
inc
push
gs
movswl
jmp
std
mov
sti
mov
call
nop
enter
cmp
cli
int3
cltd
movsl
xchg
dec
lret
cltd
cli
in
pop
push
mov
jnp
push
enter
and
cmp
jl
int
shl
sbb
add
or
out
les
inc
jle
mov
mov
push
mov
sbb
cli
jns
sbb
vmovdqu
lds
fildll
mov
test
xchg
fisubl
cmpsl
jmp
test
xchg
sbb
daa
push
mov
es
dec
loopne
jl
inc
aad
iret
scas
dec
test
or
stos
xor
shl
movsl
mov
jmp
stc
cwtl
clc
jl
pop
fldpi
testl
rcrl
mov
loope
xor
xor
sbb
xlat
or
mov
dec
sahf
test
mov
mov
mov
sbb
add
andb
js
sbb
ret
mov
ret
jnp
shll
add
rolb
mov
mov
mov
fwait
test
adc
loopne
test
push
pop
nop
sub
sbb
test
lcall
jmp
mov
dec
and
fiaddl
xlat
lret
inc
mov
insb
and
adc
mov
cli
sbb
dec
shll
test
mov
sbb
or
dec
rorl
mov
push
xchg
lods
jle
lcall
add
or
fabs
and
popl
mov
testl
sbb
daa
movsb
mov
mov
xchg
icebp
jne
scas
push
lret
in
mov
fildl
lds
fwait
std
stc
lods
inc
xchg
clc
clc
adc
add
or
loope
sbb
sbb
push
add
inc
mov
jne
dec
mov
into
inc
cmp
arpl
jne
adc
addb
fisubrs
mov
fisttpll
jo
enter
cmc
lods
inc
jo
cld
add
dec
loopne
hlt
lcall
sub
xchg
jge
push
dec
and
push
jae
pop
and
push
or
adc
sub
add
jl
cmp
pop
pop
mov
cmp
jg
repz
pop
in
aam
xor
fucomp
cmpsl
movb
lret
fldln2
cmpsb
inc
add
pusha
push
pop
popa
add
xchg
xor
loop
sbb
in
jmp
inc
loop
scas
out
sar
jle
pop
sbb
test
jg
cmp
push
mov
aad
ljmp
bound
jb
fs
dec
cmp
popf
mov
mov
dec
leave
or
sub
push
cmp
xchg
imul
pop
scas
mov
dec
pop
sub
push
addb
mov
mov
cmp
jp
add
nop
int3
aaa
or
xchg
and
in
pop
dec
rcl
clc
xor
jnp
xor
in
dec
xor
shrl
mov
adc
fisubl
push
dec
mov
jmp
push
dec
jl
xor
data16
shl
dec
sti
inc
test
sbb
push
pop
pusha
dec
sub
adc
mov
icebp
mov
aam
or
das
sbb
addl
mov
pop
ds
repz
inc
inc
cwtl
dec
and
cmp
xor
xchg
lea
addr16
in
pop
jo
imul
cwtl
dec
scas
inc
adc
and
pop
addr16
cmp
dec
dec
mov
ret
push
mov
jne
mov
push
mov
sub
lods
cmp
jae
fldt
xchg
flds
xchg
push
add
ss
lret
xor
push
sbb
add
sbb
test
lcall
jmp
mov
dec
and
mov
lock
dec
jb
mov
pop
scas
mov
sarl
push
imul
dec
lods
push
clc
ss
sub
fsqrt
jge
imul
fildl
mov
jns
lret
sub
in
jbe
or
mov
xchg
scas
aaa
mov
cli
jnp
and
in
test
std
lea
mov
dec
xchg
mov
lcall
addl
pop
leave
fldenv
loop
imul
es
hlt
std
mov
sti
mov
fsubrl
xchg
dec
dec
or
mov
dec
lret
or
pop
hlt
add
add
ds
inc
lds
and
jmp
xor
mov
cmp
jp
popa
xchg
mov
fucomp
add
lea
leave
icebp
cld
or
ret
aad
int
out
mov
ret
or
push
rcl
dec
cld
test
mov
sar
jecxz
sub
and
fldl2e
je
sahf
das
xchg
stc
cli
cmp
mov
inc
lahf
fisubrs
mov
xchg
or
pop
mov
aas
add
notl
aaa
loope
fs
cmp
stos
xor
jmp
test
inc
test
or
inc
pop
ds
pop
shr
andl
js
icebp
js
test
dec
sub
addr16
add
popa
fidivl
dec
cmp
repnz
xchg
lods
out
fldt
mov
lea
and
popf
mov
mov
insb
inc
inc
xchg
push
jle
js
xchg
dec
lret
dec
test
in
push
repz
push
inc
inc
fistpl
jae
pop
jbe
mov
pop
sahf
addb
jae
pushf
addl
sbb
in
stos
mov
dec
sbb
test
cmp
jg
xchg
es
fmul
pop
sub
mov
inc
out
pop
lods
and
sub
adc
mov
cmp
xchg
in
xchg
mov
add
mov
outsb
into
enter
mov
pop
imul
cld
jp
fstl
lods
nop
inc
call
mov
in
mov
pop
jns
or
cwtl
fs
push
and
add
mov
int3
pop
push
xor
jo
xor
pop
push
pop
jnp
fwait
xor
mov
movsb
jg
stos
cmp
lea
stc
outsl
js
cltd
dec
enter
mov
xchg
push
andl
fstl
fcomps
data16
mov
push
mov
arpl
addl
mov
jae
mov
push
ljmp
mov
or
lret
stc
push
test
rolb
jl
xchg
cwtl
aas
data16
cmpsb
arpl
sbb
negb
and
sub
adc
mov
cmp
xchg
mov
add
mov
outsb
into
enter
mov
pop
imul
cld
jp
fistl
lods
nop
inc
adc
sub
inc
scas
jle
jmp
test
pop
push
adc
pop
sti
outsb
js
stc
jl
test
or
arpl
push
subl
pop
dec
rclb
scas
addr16
fwait
xor
mov
lods
jg
stos
cmp
lea
stc
outsl
js
cltd
dec
enter
mov
xchg
push
andl
dec
mov
fnsave
les
inc
inc
mov
test
shll
push
clc
pcmpeqd
pusha
clc
jp
in
stos
mov
dec
sbb
fistpl
mov
sub
addl
inc
cmpsb
arpl
sbb
mov
loopne
lods
and
mov
jne
sub
cmpsb
mov
iret
fisubl
popa
scas
lds
xchg
sahf
dec
sti
xchg
mov
out
outsb
xor
or
ficoml
mov
je
mov
jb
sub
mov
lret
pop
in
sahf
inc
mov
int3
pop
jmp
push
mov
cli
jnp
lods
mov
xor
pop
mov
inc
cmp
stos
xchg
sbb
ja
addr16
popf
xor
lods
movsl
xor
jg
stos
mov
cmpsb
sbb
fsubs
test
mov
sub
inc
inc
pop
in
xor
pop
insw
mov
dec
addb
dec
addb
push
mov
sarb
or
fwait
lea
or
stos
fsubs
inc
enter
add
fmull
fs
mov
xchg
sub
nop
mov
popf
int3
adc
pop
sub
or
lds
cmp
pop
loop
dec
incb
nop
adc
mov
push
sub
mov
sbb
test
movsl
rol
ljmp
cld
and
dec
sbb
push
in
pop
in
sbb
or
inc
ds
sbb
add
mov
les
pop
dec
sti
mov
pop
scas
addr16
fwait
xor
lods
mov
jg,pn
stos
mov
cmpsb
sbb
fsubs
fldl
int
xchg
lahf
iret
mov
mov
pushf
dec
and
dec
xchg
xchg
pushf
dec
push
dec
xchg
xchg
mov
mov
mov
sarl
pop
mov
dec
xchg
push
test
cmp
jp
popa
orb
test
nop
push
cmp
mov
inc
cmp
addr16
fwait
in
pushf
in
aaa
cmp
cmp
sub
sub
xlat
std
dec
cwtl
test
js
mov
or
imul
and
bound
sub
cmpsb
xor
adc
sub
sahf
or
mov
aas
mov
fadds
outsb
mov
clc
jl
or
sbb
mov
fwait
mov
mov
int
mov
js
pop
jmp
mov
xlat
iret
movsb
rolb
das
mov
loopne
ds
jmp
std
mov
sti
mov
repz
mov
xchg
mov
cmp
int3
dec
sahf
in
aaa
jl
inc
and
cmp
and
imul
pop
jb
or
shll
mov
cmp
out
ja
mov
aaa
sub
pop
sub
lods
xchg
sub
jno
mov
push
lods
and
and
mov
inc
push
sbb
jl
pushf
cmp
mov
jae
dec
mov
jge
or
dec
cmp
xchg
dec
jnp
pop
fistpl
cltd
lds
repz
mov
fstpt
lahf
jp
mov
popf
dec
in
les
inc
ds
cltd
shrl
aas
sbb
mov
fwait
lea
mov
int
sub
mov
popf
xor
lods
movsl
xor
jae
lods
cmp
inc
cmp
lea
xor
popf
mov
mov
lea
dec
lds
movsb
push
aad
inc
mov
push
inc
jbe
dec
mov
xchg
mov
xlat
mov
or
popf
mov
cmp
jp
popa
lahf
mov
shr
add
and
xchg
mov
int3
adc
jge
fcompl
mov
dec
mov
jns
sub
add
mov
inc
xor
dec
sbb
mov
data16
mov
nop
fistpll
stos
gs
push
in
fwait
nop
lcall
xor
jmp
xchg
scas
pop
leave
fxam
xor
push
mov
aas
xchg
push
mov
jle
fwait
mov
mov
int
mov
js
pop
jmp
mov
xlat
iret
cmpsb
adc
das
mov
loopne
ds
jmp
std
mov
sti
mov
xchg
insb
inc
leave
mov
xchg
mov
and
or
sahf
in
aaa
jp
inc
and
cmp
and
imul
dec
push
adc
shll
mov
cmp
out
ja
movsb
dec
sbb
aaa
sub
pop
stos
push
lods
xchg
sub
jno
mov
push
lods
and
and
mov
inc
or
mov
dec
xor
arpl
insl
lds
bnd
test
movsl
adc
pop
mov
aas
add
jmp
jnp
pop
push
push
ror
xor
jmp
mov
or
lahf
mov
cmc
cmp
dec
mov
neg
movsb
jbe
sbb
cmp
in
mov
jnp
fwait
xor
lods
mov
or
mov
mov
outsl
mov
cwtl
dec
and
cmp
or
cmp
dec
dec
lret
sar
int3
sbb
xchg
dec
lret
or
pop
hlt
add
add
mov
push
arpl
or
and
fsubrs
popf
mov
cmp
jp
popa
pop
mov
shr
add
xchg
cld
or
or
lods
mov
mov
fidivl
in
scas
push
mov
mov
mov
fldl2e
je
sahf
das
xchg
stc
cli
cmp
xchg
shrb
add
cli
jge
or
dec
adc
mov
mov
inc
mov
sub
ja
lcall
xchg
cmp
leave
xor
sarl
or
sbb
mov
fwait
lea
jo
dec
adc
lahf
dec
or
cwtl
dec
nop
push
lods
mov
jae
loopne
add
cmp
cwtl
and
cmc
sarl
filds
push
mov
sbb
movsl
aaa
pushf
or
mov
pop
sub
js
imul
pop
ss
mov
and
cltd
dec
imul
outsb
aaa
cmp
mov
sub
xchg
mov
cltd
int3
adc
lods
mov
mov
ficompl
call
mov
pop
mov
fldl2e
je
sahf
das
xchg
stc
cli
or
daa
mov
mov
jae
push
pop
aas
push
dec
push
mov
pushf
lret
aam
mov
mov
aaa
pushf
arpl
inc
fmuls
jg
pop
xchg
mov
js
test
sub
enter
lcall
popf
inc
jae
std
mov
pop
and
iret
cmp
fucomip
lret
adcl
in
jbe
xchg
sahf
das
or
clc
enter
outsl
out
lea
jmp
popa
scas
or
inc
mov
dec
mov
sbb
test
cld
out
repnz
ret
jecxz
cmpl
das
lods
mov
pop
cmp
mov
pop
ds
mov
cmp
pushf
dec
jo
mov
shr
xchg
push
sbb
jae
imul
ret
lods
frstor
jne
arpl
mov
imul
xchg
rol
fiaddl
mov
fsubrs
inc
test
mov
xchg
fisubl
movsl
and
pop
mov
add
push
dec
movsb
aad
xor
shll
pand
out
push
and
js
pusha
push
scas
out
sbb
cmpsl
xchg
aam
mov
jnp
mov
xor
mov
cmpsb
ljmp
sbb
out
pop
push
lods
data16
lock
mov
lcall
and
rorl
int
call
mov
andb
repz
addl
cmpl
je
test
jno
pop
popf
mov
cmp
jp
gs
rol
push
sbb
dec
decb
imul
xlat
loope
fisubrl
mov
ret
cwtl
rol
pop
add
scas
or
xchg
insb
mov
movl
xor
push
mov
les
mov
add
inc
push
sub
inc
icebp
xchg
jp
mov
lds
or
inc
jno
jnp
inc
mov
in
stos
divl
fwait
push
dec
mov
mov
mov
cwtl
shl
mov
lret
in
mov
mov
ret
adc
repz
dec
aaa
fdiv
addl
and
sub
mov
popl
adc
cwtl
dec
and
mov
mov
test
iret
adc
jo
sti
xchg
xor
sbb
test
lcall
xchg
int3
cmp
aad
dec
jbe
mov
inc
dec
push
lods
or
fnstcw
cmc
sbb
sbb
fnstsw
bound
insl
jmp
loope
inc
lock
sbb
cmp
sub
test
ret
dec
lods
cld
fwait
scas
jb
outsl
mov
fadds
lret
dec
scas
hlt
mov
and
mov
mov
lret
mov
sarl
add
add
cmpsl
fstpl
inc
pop
mov
mov
pop
xchg
inc
add
mov
mov
lds
xchg
mov
sbb
cmpsl
mov
enter
ret
in
aad
push
int
aas
jmp
ret
mov
inc
xchg
outsb
mov
cmp
fsts
sahf
mov
and
jmp
jl
cmp
mov
push
imul
jmp
cltd
dec
test
push
fmul
lods
cwtl
pavgb
nop
or
mov
jne
and
gs
pop
mov
add
fistpll
icebp
dec
arpl
pop
js
out
cltd
or
inc
shlb
dec
in
scas
inc
inc
sbb
mov
pop
xor
enter
scas
std
cltd
out
push
js
mov
adc
push
mov
inc
and
test
dec
add
inc
cmp
lock
les
pop
jmp
adc
scas
test
sub
lahf
inc
pop
or
std
lods
inc
push
enter
jg
lret
xchg
sti
gs
movsl
mov
bt
fdivs
mov
in
adcl
mov
ret
sarl
mov
push
outsb
mov
lock
or
mov
mov
je
ror
iret
lds
shrb
xor
mov
push
jmp
jo
rcrl
pop
in
mov
nop
adc
mov
cmc
jnp
neg
popa
push
int
mull
xchg
jecxz
les
pop
or
pop
xor
jae
lea
sub
stos
out
sbb
push
fisubs
dec
and
inc
inc
push
mov
fxch
repnz
cmp
add
push
mov
or
addr16
les
fs
push
mov
push
mov
add
mull
ret
lcall
sub
and
mov
pop
call
cmpsb
jo
pop
mov
out
sbb
sbb
xchg
imul
insl
mov
jnp
mov
xchg
cmpsl
mov
pop
scas
mov
call
mov
iret
xchg
mov
test
ret
inc
mov
sbb
mov
mov
cwtl
or
mov
cld
mov
js
leave
adc
push
jmp
adc
fimuls
lcall
movsl
push
pop
lret
pushf
shrl
mov
xor
jecxz
out
lds
stos
xchg
stos
pop
or
fnsave
xor
enter
lods
in
lahf
ret
push
pusha
fisubl
dec
mov
cmpsl
inc
inc
xlat
popf
stos
mov
xorl
add
or
popf
outsl
xchg
sbb
inc
aad
test
je
pop
movsl
icebp
xor
andl
add
lcall
mov
adc
imul
and
scas
rcr
sub
test
jecxz
jg
lcall
cltd
push
mov
mov
mov
push
or
cltd
divl
dec
sbb
mov
pop
pop
stos
mov
clc
clc
mov
in
test
cmc
cltd
pop
enter
dec
jmp
cmpsl
dec
cmp
add
fsubl
mov
lcall
pop
pop
dec
shlb
xchg
out
push
xchg
stos
jae
jecxz
lahf
dec
add
mov
add
or
addr16
pop
cwtl
or
add
stos
div
enter
pop
or
fnsave
shr
cmpsl
xchg
sub
push
or
push
cmp
call
in
popf
fdivs
push
lods
dec
and
je
mov
pop
stos
shll
xor
or
sub
lahf
scas
repnz
mov
dec
jmp
cmpsl
lock
mov
mov
in
nop
int3
jg
and
sbb
sub
cmpsl
rcrl
push
mov
jb
divl
push
sbb
mov
ror
inc
test
cwtl
repz
jge
mov
sbb
mov
arpl
mov
mov
xchg
test
ljmp
outsl
and
pop
pop
xor
jecxz
add
imul
cmc
mov
or
xchg
and
test
xchg
int
sub
outsl
shlb
mov
jae
add
mov
or
pop
mov
ret
shr
push
call
xadd
hlt
loop
add
or
loop
mov
add
ret
mov
mov
sub
mov
lea
adc
dec
inc
jmp
cmpsl
stc
cltd
jecxz
cmp
sbb
pop
xchg
pusha
mov
xchg
rcrl
mov
dec
cmpl
xchg
int
aas
imul
mov
sbb
call
mov
test
jmp
jge
cmp
scas
pushl
enter
pop
icebp
or
dec
mov
sbb
adc
sbb
sbb
pop
andl
out
inc
test
xchg
pop
lret
imul
mov
xchg
pop
mov
aas
frstor
jns
scas
jle
jno
rol
jnp
mov
and
inc
test
jb
push
imul
or
shll
add
lret
xchg
pop
or
fsubrl
nop
popa
int
hlt
repz
and
mov
hlt
loop
xchg
xor
inc
orl
pop
xor
mov
sub
xchg
mov
adc
into
sub
xor
aad
dec
inc
push
fsubrl
loop
mov
repnz
or
xchg
mov
mov
lahf
and
enter
fcomps
cltd
lods
fwait
fs
xchg
jmp
sbb
xchg
into
decl
add
pop
fldt
pop
loopne
cli
mov
pop
jmp
sub
jl
jp
mov
sbb
adc
loope
mov
leave
iret
imul
fwait
push
xor
pushf
insb
cmp
mov
mov
pop
adc
test
in
cmp
mov
mov
xchg
pop
lret
xchg
mov
mov
andl
cwtl
loopne
inc
test
cwtl
add
inc
jae
rcll
test
filds
jbe
sti
jae
mov
or
dec
call
test
frstor
mov
lahf
leave
xchg
fmuls
js
fsubs
inc
cmp
mov
inc
orl
pop
xor
test
push
mov
inc
fbstp
and
xchg
mov
dec
repnz
movsb
jmp
push
lret
mov
mov
inc
aad
stos
repnz
mov
ret
xchg
sti
popa
lods
movsl
mov
fwait
fs
fdivs
test
fstps
push
add
or
ret
pop
jmp
iret
inc
mov
fcomps
pop
push
mov
mov
xor
ror
iret
imul
fwait
push
xor
icebp
adc
lock
addr16
sbb
test
fdivrs
in
mov
out
add
les
jge
mov
sub
jae
mov
rcr
inc
stos
jg
inc
add
xchg
pop
gs
lods
jne
mov
push
int
bnd
xchg
popf
add
fmull
mov
lcall
repnz
add
fbstp
mov
cmp
popa
xchg
inc
add
adc
test
push
call
jle
mov
and
cmc
pop
stos
add
mov
int
dec
mov
imul
mov
call
pop
inc
fsts
mov
and
mov
cwtl
enter
pusha
mov
popf
orb
cmpsl
in
push
test
divl
addr16
or
lret
fucompp
fbld
mov
mov
mov
movb
dec
cmp
es
in
popf
lods
inc
lds
xchg
mov
arpl
fadds
dec
lods
jl
andb
xchg
and
scas
je
js
aas
xchg
add
fwait
dec
mov
pop
ljmp
lret
lods
sbb
mov
sbb
nop
psubusw
addr16
inc
add
pop
mov
add
lods
ret
adc
shll
inc
pop
add
cmc
bound
popa
lods
movsb
cmp
mov
andb
shlb
inc
movsb
imul
aad
push
dec
rcrb
sub
fistpll
rcr
jno
mov
pusha
mov
cltd
loopne
clc
daa
xchg
mov
lahf
pop
stc
test
cmp
mov
dec
add
scas
in
lcall
movsl
aam
fsubr
mov
out
stos
and
xor
arpl
add
sbb
or
cmpsl
pop
or
and
das
cwtl
cwtl
into
subl
xor
and
loopne
les
mov
imul
lods
ret
xorb
iret
dec
scas
jge
ret
pop
lahf
jge
pop
in
jl
push
mov
dec
in
into
sub
mov
add
clc
xor
int3
sub
mov
inc
int
cmpsl
lock
cmp
or
cmc
bound
xchg
sub
and
ss
popf
cmpsb
cmp
dec
test
out
clc
xor
outsb
xor
stos
mov
movsl
adcl
fildll
and
mov
repz
jns
mov
nop
mov
mov
fwait
and
fcompl
sbb
mov
sti
loop
lret
adc
incl
mov
sbb
frstor
pop
ljmp
mov
mov
cmpsl
pop
or
sbb
popa
mov
or
push
mov
sub
outsl
mov
insl
fcomps
inc
push
popa
mov
xchg
mov
mov
inc
add
in
je
push
mov
add
dec
push
fsubs
jb
mov
add
inc
jmp
lea
fdivl
xchg
fisttpll
cmp
movsl
jg
enter
loope
pushl
inc
xchg
jge
add
andl
mov
adc
xchg
jmp
sbb
fnstenv
jecxz
cltd
mov
enter
in
es
loopne
cli
mov
movsl
jmp
in
mov
lahf
stos
xor
mov
adc
sbb
or
mov
gs
cwtl
pop
mov
pushf
xchg
call
xor
lret
adc
sbb
mov
adcl
rcrb
pop
imul
clc
fsubrs
jecxz
mov
call
or
mov
sbb
xchg
rcrb
mov
mov
scas
fcomps
mov
js
fsubs
gs
dec
rclb
lret
stos
xorl
xor
call
jnp
inc
adcb
mov
dec
push
out
movsb
jno
cmp
xchg
test
popl
pushf
lcall
mov
jo
or
xor
lcall
fnstenv
jae
dec
mov
xchg
ljmp
pop
mov
sarl
mov
test
test
jno
pop
out
inc
sub
cmc
fwait
pop
dec
push
pop
stos
inc
out
movsb
shll
stos
dec
mov
sub
mov
movsl
repz
mov
sbb
jl
clc
mov
mov
mov
mov
mov
fldcw
cmpsl
stc
pop
imul
jbe
mov
or
lret
subl
sub
aam
dec
cmp
out
clc
sbb
mov
or
les
into
bound
fs
xchg
cmp
insl
and
adc
fs
mov
lcall
push
fldenv
inc
out
pop
cmpsb
jo
cli
mov
out
sbb
jecxz
xchg
dec
xchg
sub
fstpl
lock
sbb
shlb
jmp
add
pop
mov
inc
rorl
adc
or
fdiv
jecxz
inc
test
and
xchg
adcb
inc
cmpsb
push
lea
push
sub
stos
mov
fwait
push
mov
mov
stos
jl
icebp
cltd
in
mov
popf
push
jns
roll
divl
mov
or
mov
lds
dec
mov
xchg
int3
adc
ljmp
fldcw
lods
jne
js
das
mov
aam
fcomi
insl
movsb
inc
push
lret
xchg
enter
cmp
sbb
fcompl
sbb
shlb
movsl
mov
ret
imul
mov
adc
and
push
out
pop
cmpsb
jns
mov
pop
pop
out
dec
xchg
bound
out
aad
xchg
sub
dec
pop
pop
mov
lahf
fmull
dec
call
popf
mov
cld
imul
and
fdiv
jecxz
xchg
push
mov
rol
adc
aaa
add
fmull
sub
mov
dec
out
movsl
inc
daa
stos
xor
dec
push
fisubrs
arpl
scas
mov
mov
stos
mov
roll
lahf
xor
mov
cwtl
rcr
stos
divb
testl
ljmp
roll
pop
sub
fidivl
cmp
iret
scas
je
lret
xor
xchg
or
adc
stos
inc
aad
call
leave
lahf
push
xor
or
outsb
cmp
jbe
movsl
imul
mov
arpl
dec
ret
xchg
mov
mov
jne
bound
gs
movsb
cmp
cltd
push
xchg
bound
shlb
push
pop
fisubs
mov
lahf
neg
sbb
inc
ljmp
xchg
ret
mov
insl
clc
aas
clc
movsl
jae
lret
xchg
jo
icebp
mov
je
ret
insl
adc
pop
aaa
add
mov
imul
mov
pop
mov
xor
shll
cmpsl
ljmp
rcrl
mov
jnp
mov
mov
lds
lcall
cltd
psrlw
dec
lods
cmc
xor
add
mov
or
fidivrl
mov
enter
jl
inc
mov
cmp
mov
dec
dec
add
lahf
push
xor
push
lret
xchg
inc
add
push
xchg
push
sbb
scas
pop
fdivrs
cmpsl
push
add
ss
enter
mov
adc
or
mov
dec
jnp
xor
xchg
cmpsb
cmp
cmpsl
mov
ja
pop
add
sub
leave
insb
xchg
jge
jp
scas
fstpl
stc
stos
repz
stos
mov
sbb
xlat
cltd
pop
mov
add
or
aad
mov
hlt
js
xlat
lret
imul
xor
lcall
shll
add
inc
xchg
pop
lea
test
mov
icebp
mov
cmp
sub
pop
in
inc
inc
push
pop
stos
test
dec
mov
sub
rol
lods
cld
fwait
mov
cmpsl
rcrb
inc
fsub
lret
dec
scas
hlt
mov
and
mov
mov
lret
mov
sarl
add
add
cmpsl
lea
inc
fcoms
mov
pop
xchg
inc
add
mov
or
mov
movsl
mov
sbb
inc
add
jp
sub
fs
aad
lea
xchg
aas
jmp
ret
mov
dec
inc
outsb
mov
cmp
flds
push
je
cwtl
arpl
and
jmp
jl
jns
mov
jp
adc
fcmovnu
cltd
dec
test
push
lods
cwtl
pavgb
mov
jne
and
gs
pop
mov
add
sahf
mov
icebp
ret
arpl
pop
js
out
sbb
adc
sarb
dec
popf
scas
inc
inc
sbb
mov
pop
xor
enter
scas
std
cltd
cli
push
js
mov
rcrl
push
mov
inc
and
test
dec
add
inc
cmp
lock
les
pop
jmp
adc
scas
mov
test
or
movsb
jno
stos
xchg
outsl
lahf
inc
pop
add
aad
fwait
mov
lods
inc
push
mov
jns
jg
inc
sbb
xchg
sti
gs
movsl
mov
lea
and
jb
stos
ret
in
adcl
mov
ret
sarl
mov
je
outsb
mov
lock
or
mov
mov
je
ror
iret
lds
cli
sub
and
cmp
js
stos
rcrl
pop
in
mov
push
cli
std
mov
cmc
enter
popa
push
add
mull
xchg
mov
les
mov
xor
jae
mov
xor
dec
test
leave
subl
dec
and
inc
inc
push
movsb
xchg
lahf
mov
dec
cmp
call
cli
fwait
cmp
aam
les
mov
push
mov
push
mov
add
lahf
xor
ret
sub
and
mov
pop
call
cmpsb
jo
ljmp
sbb
xchg
imul
cmp
cltd
push
mov
insl
lods
cmpsl
mov
xchg
scas
mov
call
mov
iret
xchg
mov
test
ret
inc
subb
jb
jb
sbb
pop
fsubl
mov
hlt
sti
repnz
leave
adc
jnp
push
adc
int
dec
test
pop
dec
js
rcrl
pop
call
adc
arpl
test
pop
mov
xor
jecxz
cmpsb
mov
adc
je
arpl
test
enter
in
sahf
xchg
fidivrl
dec
mov
cmpsl
inc
inc
xlat
popf
stos
mov
xorl
add
or
popf
jnp
sbb
or
cwtl
test
pushf
jecxz
movsl
icebp
xor
add
lcall
imul
rclb
imul
and
scas
sbb
loop
inc
jecxz
jg
cmp
out
jnp
les
test
cltd
divl
push
sbb
mov
pop
popf
stos
mov
clc
clc
das
shl
test
lea
push
jmp
cmpsl
inc
bound
add
fsubl
mov
lcall
pop
pop
dec
and
jp
jns
clc
xchg
out
push
xchg
stos
jae
jmp
lahf
dec
add
jp
add
or
addr16
or
lds
pop
stos
pop
or
fnsave
shrl
mov
mov
or
push
cmp
call
in
push
jp
jo
xor
sub
mov
stos
les
dec
xor
or
sub
pop
movsl
clc
lahf
mov
dec
sbb
jmp
cmpsl
lock
mov
mov
cmp
and
sbb
sub
cmpsl
sbbl
jle
or
divl
or
xchg
rorl
mov
test
cwtl
repz
jge
mov
sbb
cmp
data16
cmc
popf
pop
leave
nop
ds
outsl
and
pop
pop
shlb
cltd
jecxz
add
imul
cmc
cmp
mov
repnz
addl
int
fmulp
sub
outsl
shlb
pusha
or
cmc
jae
add
mov
or
pop
mov
ret
shrl
xor
hlt
loop
add
or
popa
xchg
mov
add
ret
mov
mov
sub
mov
fwait
lret
in
mov
mov
dec
test
lea
jae
sti
and
insb
imul
mov
hlt
add
xchg
sub
jnp
les
test
andb
stc
enter
test
cmp
adc
and
add
in
sub
push
mov
aad
pushf
scas
inc
adcl
mov
inc
add
or
pop
mov
cmc
sbb
sbb
pop
mov
in
test
or
xchg
lahf
add
test
shlb
imul
cld
insl
mov
xchg
mov
adc
inc
lcall
jge
pop
xor
mov
or
inc
jno
jnp
inc
mov
in
stos
cmc
xor
push
dec
mov
int
sti
ss
jb
mov
dec
or
lods
mov
cmp
jne
mov
dec
mov
lea
jae
sti
and
insb
imul
mov
hlt
add
xchg
sub
jnp
inc
mov
je
cmp
or
std
dec
mov
cmc
test
cmp
pop
in
mov
jne
jp
add
in
sub
push
mov
aad
pushf
scas
inc
mov
mov
lds
nop
test
or
or
pop
mov
cmc
sbb
mov
ja
cli
in
test
inc
insl
jmp
bound
adc
xchg
dec
sti
jmp
mov
add
push
push
sub
inc
icebp
xchg
jp
mov
xchg
push
or
inc
jno
jnp
inc
mov
in
stos
shl
stos
inc
repnz
fwait
push
dec
mov
int
fyl2x
test
jb
mov
inc
or
lods
mov
std
scas
inc
repz
jne
mov
dec
xchg
pop
lea
jae
sti
and
xchg
cwtl
aas
fwait
orb
pop
in
dec
adc
mov
xchg
cmp
andb
movsl
or
pop
mov
test
pop
cmpsl
or
add
in
sub
adc
lcall
xchg
int3
cmp
inc
mov
lret
idiv
rcll
xchg
nop
mov
mov
sahf
cmp
in
test
or
xchg
lahf
push
mov
test
inc
xor
cltd
sub
push
stos
scas
das
fsubrl
movsl
xchg
mov
adc
inc
lcall
jge
pop
xor
sbb
pusha
xchg
popf
cltd
leave
adc
push
ds
sbb
xchg
mov
add
adc
pop
stos
aam
mov
jnp
inc
push
mov
or
or
ret
inc
enter
cmp
stos
out
fwait
mov
lret
gs
in
add
add
andb
js
sbb
popf
shl
jmp
mov
dec
mov
cmp
pop
mov
add
pop
add
jmp
clc
sbb
test
sbb
mov
mov
ret
mov
cli
jg
pop
dec
dec
pop
inc
scas
cwtl
mov
inc
stos
xchg
adc
sub
test
cmc
sbb
cmp
mov
loopne
rorl
cmp
or
cmp
adc
cltd
or
push
stos
mov
add
and
fnstsw
push
xor
ret
mov
fcmovnb
sub
jno
mov
or
pop
sub
or
dec
add
jecxz
leave
out
mov
jnp
add
cmp
xchg
adc
mov
pop
jnp
cmp
inc
cltd
lods
jne
dec
inc
and
cmp
or
cmp
xchg
sub
jnp
xorb
xor
sub
orl
cmp
pop
xchg
mov
add
in
sub
add
scas
dec
loope
int3
cmp
inc
mov
inc
pusha
push
lods
or
test
cmc
sbb
sbb
bound
insl
jmp
movsb
mov
dec
dec
add
dec
dec
aaa
dec
cmpsl
pop
gs
dec
xor
mov
cmp
icebp
inc
es
das
aas
in
jbe
mov
fisttpl
sbb
bound
cwtl
test
aas
xchg
daa
ret
adc
jmp
ja
or
in
mov
jnp
clc
dec
and
inc
or
mov
fcmovne
adc
cmp
pop
mov
fwait
jge
sti
sti
fsubs
inc
xor
push
cwtl
jecxz
and
sub
inc
xor
sti
jbe
jmp
and
fisttps
into
sbb
les
mov
jbe
cwtl
lods
fiadds
add
movb
or
inc
mov
fadd
push
sub
push
dec
ss
enter
test
jns
js
add
inc
sub
xchg
fimull
push
dec
xor
jnp
call
sti
stc
cli
in
test
or
adcb
cwtl
or
pop
test
jge
sbb
xchg
int
xor
jb
lcall
or
mov
jp
fisttps
cltd
punpckldq
sarl
sbb
or
sbb
mov
fwait
push
dec
mov
xor
jmp
insb
sbb
fdivrl
fst
in
mov
mov
or
sbb
mov
pushf
iret
mov
jno
adc
test
sbb
jle
mov
imul
pusha
sbb
jb
filds
and
mov
mov
test
xor
mov
lret
jecxz
outsl
lret
stos
xchg
sub
jmp
sbb
aas
test
or
dec
popf
cmp
cwtl
lret
imul
sahf
fisubl
repnz
out
push
lods
mov
stc
inc
and
dec
mov
decl
les
and
push
rcr
mov
adc
mov
adcl
jmp
adc
adc
cltd
mov
inc
mov
push
mov
mov
das
mov
scas
sbbl
mov
mov
fwait
push
dec
lret
pop
push
adc
out
dec
popf
inc
repnz
ds
sbb
outsl
ja
lods
mov
sub
shl
sti
test
add
dec
push
adc
test
sbb
pop
imul
mov
js
dec
hlt
xlat
sub
imul
and
in
cmp
push
scas
in
clc
add
jp
dec
push
xchg
inc
movsl
xchg
sub
stos
out
int3
fsubrl
sub
push
movsl
jmp
clc
rcrl
xchg
fisubl
inc
mov
xchg
mov
mov
mov
xchg
sub
cld
jl
hlt
mov
mov
inc
scas
xchg
filds
mov
mov
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
.byte
pusha
call
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
pusha
xor
jne
jmp
jmp
leave
jne
jp
jo
jmp
call
call
lock
fstpt
mov
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
pusha
pushf
xor
call
call
add
mov
add
jmp
call
jno
jmp
jp
jmp
jmp
call
jnp
jno
jmp
jmp
push
mov
add
xor
add
xor
cmpl
je
xor
jmp
mov
and
add
inc
xor
dec
jne
jmp
xlat
sti
scas
scas
incl
scas
scas
scas
and
mov
scas
scas
lods
pushf
outsl
es
stos
es
cmpsl
es
mov
out
mov
scas
scas
scas
insb
pushf
outsl
lret
push
lahf
lret
es
pushf
outsl
and
scas
scas
sub
stos
negl
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
and
adc
jb
stos
lods
scas
scas
lods
jp
inc
cwtl
scas
scas
scas
inc
es
scas
scas
push
dec
sub
stos
ficompl
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
inc
lods
scas
scas
scas
cmc
inc
fs
pop
les
or
mov
fwait
and
shr
adc
cmpsl
mov
mov
rorl
je
clc
jg
mov
xor
mov
fwait
inc
mov
add
fldl
fwait
add
rcrl
scas
adc
in
cs
pusha
mov
jg
add
ret
ret
jno
mov
mov
cmp
gs
lret
mov
xchg
pop
mov
aad
xchg
out
push
insl
xchg
push
sub
in
lods
gs
daa
in
sub
xchg
push
das
ret
inc
or
in
add
pop
cmp
mov
cmc
shll
dec
test
pop
adc
sub
daa
mov
and
cli
js
dec
xchg
cmc
sub
mov
lahf
pop
ja
cli
or
lcall
xor
xchg
imul
cmp
negl
dec
xchg
mov
adc
addb
filds
xchg
xchg
int
push
push
xchg
in
push
repz
pop
testl
jno
dec
and
adc
adc
dec
xor
imul
inc
fisubl
clc
adc
add
xor
ljmp
cmp
neg
out
cltd
cmp
scas
sub
insb
outsb
or
leave
pushf
aaa
jmp
insl
cmp
pop
push
cld
sub
mov
sub
cmc
lods
stos
repnz
push
mov
jbe
iret
mov
lret
fs
mov
sub
insl
or
inc
rcr
sub
ss
lods
dec
xchg
sub
mov
in
out
movsb
shlb
or
je
mov
mov
xchg
push
push
fiadds
aam
es
push
and
mov
add
jmp
cmp
mov
xor
notb
pop
jge
rcrb
pop
in
pop
hlt
insb
mov
mov
in
mov
ljmp
std
bound
pop
mov
sbb
adc
add
add
fwait
ret
ljmp
fcomps
xchg
push
adc
fisubl
loopne
popa
mov
out
mov
lcall
pushf
add
mov
mov
imul
imulb
or
mov
and
insb
mov
std
push
inc
outsl
lcall
into
je
int
xchg
add
jb
xchg
cltd
nop
push
push
sub
outsb
test
and
mov
lds
scas
sub
jnp
mov
mov
mov
mov
jno
mov
jl
shlb
or
xchg
dec
push
bound
sbb
xchg
fsts
push
adc
xchg
or
adc
ret
subl
pop
xchg
xor
inc
pop
testb
jle
add
dec
push
mov
mov
ror
fcoms
ss
dec
jmp
imul
popa
add
ss
dec
and
sbb
fnop
out
sub
mov
shl
cld
mov
mov
adc
push
daa
cmpsl
data16
in
ljmp
js
mov
jb
mov
ljmp
movsb
out
fnstsw
int
pop
pop
lock
mov
sbbb
mov
pushf
lds
lods
dec
mov
rcrb
dec
stos
insb
adc
inc
and
loope
call
shlb
pop
in
mov
sarl
fimuls
jg
mov
or
lea
insl
sub
or
jmp
addr16
adc
test
orl
or
sub
adc
out
adc
lods
and
addr16
movsl
bound
sub
imul
sar
jae
mov
les
inc
mov
cmpsl
mov
push
jecxz
fwait
inc
fidivs
lds
push
sbb
mov
jno
adc
xchg
pop
leave
enter
gs
mov
add
sub
mov
pushf
dec
movsb
orb
add
ds
cltd
pop
pop
cwtl
pop
aad
aad
scas
adc
mov
adc
jecxz
pushf
sbb
cmp
jns
lds
outsb
subb
sub
inc
filds
sbb
push
ja
mov
into
sub
pop
add
out
mov
mov
push
cmp
mov
mov
addl
lahf
lahf
pop
pop
mov
push
aad
aam
xchg
push
stos
dec
fucomi
lcall
test
dec
int
sahf
sbb
lcall
scas
fdivrl
rcrb
sbbl
xchg
or
xor
adc
arpl
gs
and
pop
movsb
sbb
sbb
mov
leave
adc
gs
pop
or
push
jp
jbe
sbb
pop
mov
iret
adc
xchg
lcall
imul
dec
outsb
fld
mov
ja
xor
dec
je
or
adc
cmp
push
mov
cs
jmp
ljmp
and
mov
cli
hlt
mov
cmp
sub
test
loopne
in
mov
adc
xor
stc
loop
inc
imul
push
jg
mov
add
jo
jnp
mov
int
add
jo
lahf
mov
jnp
lahf
push
lds
cmp
add
je
test
test
xor
pop
mov
push
inc
cmp
loop
and
add
cmp
lods
inc
pushl
hlt
in
add
push
daa
mov
outsl
jmp
mov
pusha
sub
in
loope
dec
ret
dec
pop
inc
rolb
sbb
push
pop
dec
scas
cmp
scas
std
rol
call
pop
sbb
jne
mov
out
ss
jp
ss
test
mov
iret
xchg
clc
pop
push
mov
dec
mov
sub
testb
push
and
sarl
dec
fs
and
cmp
je
and
dec
loope
repnz
push
lret
mov
rclb
mov
mov
iret
loopne
sub
push
inc
add
cltd
push
sbb
cld
xchg
popa
popa
pop
or
fwait
cmp
incb
sub
out
fidivrs
fists
inc
gs
sbb
incl
mov
jae
mov
pop
mov
inc
gs
xchg
push
push
int
popf
sub
loop
add
aas
sbb
dec
xchg
mov
loopne
xor
in
xchg
addb
cwtl
inc
pop
ja
and
add
scas
iret
movsb
add
xorb
xchg
aaa
jne
ja
jo
fwait
dec
shlb
xor
scas
mov
cmpsl
outsl
mov
inc
fldenv
mov
cmp
sbb
sub
out
ljmp
fisttpl
xor
dec
xor
mov
out
jnp
mov
or
cwtl
jbe
roll
cmp
std
out
insb
out
fidivl
or
inc
int3
sub
int3
test
jne
dec
xor
lods
imul
mov
push
inc
ljmp
mov
cmp
cmp
fistpl
imul
or
icebp
les
dec
loope
ljmp
ss
ss
push
pop
xchg
mov
push
xor
xor
push
fcmovnbe
adc
ss
adc
and
ret
add
cmp
lea
stos
jne
xor
adcb
cmp
push
xchg
es
cwtl
push
insl
addr16
jle
pop
imull
pop
fdivr
test
leave
rolb
xor
lahf
aam
ret
mov
mov
setno
push
and
dec
int
pop
pop
jp
mov
clc
cmc
js
push
shr
mov
imul
mov
mov
sbb
adc
hlt
ffreep
rclb
out
xchg
push
xchg
test
cmpsb
std
sub
jae
or
xchg
sbb
sahf
xchg
xor
lods
sarb
add
xchg
negl
jb
cmp
enter
jp
jle
ret
lock
sbb
pop
sbb
lret
dec
movsb
cmp
xchg
add
jle
adc
and
push
push
mov
inc
loope
aas
and
lahf
pop
iret
shll
push
loopne
cwtl
push
out
ss
cmpsb
imul
je
or
and
xorl
fldl
and
inc
call
jge
add
jns
lock
sbb
scas
imul
mov
mov
in
inc
les
cli
ret
xor
repnz
decb
gs
andb
push
stc
mov
xor
sub
mov
sub
push
mull
aaa
push
inc
sti
in
rcrl
mov
xchg
mov
leave
roll
clc
bound
jecxz
out
add
mov
mov
jbe
xlat
icebp
lock
cmp
sub
adc
ret
push
lcall
cmp
addb
loop
mov
jae
cmp
push
cli
int3
pop
ret
xchg
fsubrp
stos
xchg
push
andl
test
fisubrs
decb
mov
add
pop
pop
fs
jb
out
fistl
stos
lock
mov
fmull
or
movsb
mov
xchg
inc
test
add
jo
cmpsl
mov
ljmp
jnp
mov
in
mov
jecxz
lock
loopne
push
jl
stc
es
jns
mov
xchg
inc
add
stos
inc
push
sbb
add
aam
fwait
sub
movsl
gs
push
add
inc
push
daa
inc
lret
or
loop
imul
ljmp
addb
into
test
repnz
or
neg
sub
cli
push
pop
ds
lcall
sbb
jnp
movsb
orb
dec
or
fidivrs
adc
or
inc
push
push
pop
or
inc
inc
cmp
pop
pop
imul
jb
loopne
mov
aam
mov
incl
sbbl
sub
pop
aad
ljmp
not
xor
pop
inc
jae
vmovntps
in
jb
add
pop
or
cmpsb
arpl
shlb
inc
dec
mov
insl
mov
sub
subl
int
mov
jo
into
mov
inc
daa
xchg
or
push
setne
lds
mov
mov
or
mov
jecxz
fcoms
ja
fdivp
push
fwait
jo
rcr
jo
sbb
pop
loop
in
mov
aaa
and
jg
jl
dec
mov
jecxz
lock
mov
xchg
enter
mov
dec
adc
inc
jb
cmp
xchg
enter
xor
jae
cmp
fs
int3
fisttps
mov
pop
push
jne
mov
sbb
inc
fwait
mov
dec
pop
cmpb
dec
dec
and
cmp
shll
add
clc
mov
sbb
jb
insb
stc
mov
sahf
leave
sbb
leave
sbb
or
in
dec
mov
inc
ret
jle
cmpl
mov
inc
testl
jmp
enter
mov
ljmp
pop
sub
dec
xchg
mov
mov
test
outsb
shrl
jb
imul
aam
mov
jp
mov
sub
sbb
mov
mov
jg
sbb
ret
sub
int3
jb
and
mov
outsb
pop
inc
fwait
call
xchg
inc
inc
xor
adc
fdivrl
fcomi
in
jae
enter
icebp
cmp
mov
aas
xlat
pop
iret
dec
and
jge
lods
add
or
outsl
pop
adc
test
push
jmp
cmp
push
dec
cld
fisubrs
xchg
outsb
std
xor
mov
dec
push
ds
sbb
lea
aaa
mov
push
add
mov
mov
sbb
scas
mov
fcoml
out
enterw
adc
cmp
mov
mov
sub
test
ficomps
fisubs
stos
int
das
icebp
fistpll
mov
outsb
arpl
cmp
sub
dec
dec
fcoml
aam
data16
pop
adc
adc
add
movsb
lcall
pusha
fimuls
xor
adc
push
cld
movb
nop
xor
sahf
lahf
inc
adc
mov
xor
out
in
jp
sub
inc
rorb
lods
jnp
fcompl
sub
jge
add
shll
cmp
clc
dec
lret
cltd
andb
or
cmp
adc
fisttpll
push
xor
call
dec
cmpb
xchg
adc
in
les
xchg
cs
jp
xlat
aad
pusha
dec
call
int
jns
push
or
cld
push
dec
outsl
pop
sbb
aaa
lea
in
mov
sbb
jl
xor
push
in
jne
mov
aaa
adc
xchg
out
das
sbbl
and
add
add
call
inc
inc
sbb
mov
or
jg
push
add
mov
mov
push
push
mov
or
inc
arpl
mov
repz
icebp
cmp
push
mov
jae
movsb
pop
ljmp
and
in
xor
test
dec
or
idivb
xchg
adc
sbb
jnp
je
mov
test
dec
mov
repz
insb
in
jp
sub
leave
gs
shlb
inc
jbe
push
inc
or
sbb
icebp
cmpsl
sub
int3
mov
shrb
bound
clc
mov
mov
sub
enter
aam
sarb
jo
and
fstps
icebp
push
pushf
xchg
xor
test
push
sbb
add
dec
int
xor
jmp
cwtl
pop
jnp
std
or
ja
test
push
pop
test
dec
mov
cld
std
popa
add
movsl
dec
dec
call
sub
bound
ljmp
inc
push
popf
cmp
xor
in
mov
pop
rorb
and
push
fsub
rcrl
cmp
into
lret
das
push
or
scas
inc
sahf
popf
sbb
and
in
test
inc
xchg
in
inc
shlb
push
fsubrp
popf
jl
enter
inc
sub
mov
jne
repz
pop
test
mov
jb
stos
cwtl
xchg
mov
pop
mov
and
sub
ljmp
lds
pop
jnp
dec
sahf
xchg
mov
fcomps
jns
sbb
inc
fsubrs
addr16
ds
jmp
stos
xchg
sbb
jp
sbb
mov
mov
aad
xor
mov
lods
cmp
inc
inc
into
pop
jbe
cmp
mov
pop
dec
jecxz
sbb
loop
pusha
test
out
mov
sub
sbb
pop
jle
fcomps
aam
sub
int
test
mov
sbbl
cmp
sbb
in
and
shrb
lahf
rol
icebp
decb
inc
lds
popa
repnz
rclb
mov
addr16
rcrb
call
and
or
add
cmp
rolb
add
adc
adc
mov
je
hlt
outsb
pop
mov
movsb
and
fwait
push
add
or
xor
mov
rol
and
and
cmp
mov
push
mov
or
sub
dec
sbb
xor
loop
bound
fdivr
les
and
jmp
cltd
lods
jbe
or
jns
jp
int3
lcall
xor
xor
scas
inc
into
stos
out
adc
jge
xor
mov
inc
mov
mov
into
cltd
out
or
cmp
fcoms
fwait
push
adc
fisttps
and
rcll
sbb
sub
shlb
push
dec
pmulhw
jecxz
adc
adc
roll
insb
dec
sbb
shrb
push
les
out
dec
sub
cmp
or
lea
or
stos
jp
mov
ret
es
clc
add
mov
pop
dec
mov
sub
or
or
jmp
mov
push
dec
mov
mov
mov
lret
fcoms
popa
lds
cs
imul
leave
xchg
add
pop
lret
mov
cld
xor
push
sbb
jmp
cmpb
pop
mov
das
xchg
ret
push
stos
sbb
stc
js
add
and
outsb
inc
xor
sub
sahf
add
lods
sub
out
fadd
insl
stos
dec
test
jae
sbb
movsb
lret
mov
in
iret
cmp
je
test
das
loop
dec
in
mov
pop
adc
cltd
jne
inc
cwtl
xor
pop
insl
sbb
push
xor
xorl
lds
mov
jecxz
cli
aas
lret
dec
rcrb
ja
jnp
into
lds
repz
xor
inc
jle
ljmp
jl
out
jmp
mov
cmp
mov
xor
cld
push
rcll
lahf
in
loope
dec
cli
lods
push
jnp
cmp
lods
movsb
dec
adc
movsl
ret
or
loopne
sbb
adc
push
sbbb
pop
gs
rclb
outsb
insl
mov
sahf
orl
jbe
lret
adc
xlat
pushf
inc
mov
dec
xor
pop
fwait
pop
int3
lret
int
cmpsb
and
lret
shrb
mov
jg
cld
mov
mov
imul
push
outsb
lahf
or
pop
jl
lret
cmc
mov
push
xchg
pop
rol
and
movsl
or
or
sbb
push
scas
ficomps
aam
xchg
scas
leave
loopne
ja
sub
lret
cmpb
insl
mov
xor
shll
mov
es
add
daa
test
pusha
mov
add
sbb
outsb
sbb
cmp
dec
rorl
shll
dec
inc
cmpsb
addr16
pop
dec
inc
out
rcl
sub
test
inc
mov
jbe
loop
std
in
cltd
mov
les
fcmovb
pop
xlat
dec
fcoml
fwait
sbb
xchg
add
cmp
xor
cmpsb
arpl
mov
mov
inc
addl
push
pop
jle
mov
rcr
dec
call
int3
mov
sbb
pminub
lcall
scas
or
imul
xchg
outsl
stc
inc
cmp
fldcw
mov
add
pop
fistl
clc
jns
mov
or
cmp
dec
jg
push
rcl
aaa
popf
call
mov
cmp
pop
int3
pop
mov
jmp
les
inc
cwtl
mov
sub
lcall
fistl
dec
xchg
mov
inc
jge
inc
test
jb
adc
sbb
xlat
mov
je
jbe
inc
fstps
fbld
push
push
cmpsb
xor
popa
sub
movups
cmc
push
xchg
fs
mov
cmp
imul
mov
ljmp
psrld
or
sub
cmc
jbe
imul
lods
lret
jl
pop
ret
xchg
cmp
or
sar
push
cld
add
lret
jno
incl
jg
xor
in
mov
inc
xchg
subl
je
jl
iret
inc
inc
cli
ljmp
push
in
cmp
imull
mov
dec
mov
fs
int
inc
or
movsb
cmpsl
lahf
dec
mov
mov
xor
pushl
out
dec
adc
fsubr
mov
inc
jmp
lea
cmp
push
xchg
mov
pop
icebp
and
mov
lsl
popl
jecxz
or
xor
movsl
xor
in
aaa
pop
push
jae
lret
jno
imul
push
in
movsb
lea
out
das
sub
mov
xchg
fnstcw
ret
fisttps
jmp
xchg
push
loopne
stos
adcl
dec
nop
cs
xchg
mov
or
mov
push
popf
xchg
movsl
sub
cld
imul
fcoml
lahf
and
pop
cmp
xlat
adc
cli
xlat
dec
jl
push
push
jns
jle
ret
fcoml
dec
int3
ret
push
sbb
fbld
or
in
push
cmc
cmp
cltd
scas
mov
in
das
pushf
shlb
aas
aas
test
mov
arpl
push
gs
mov
mov
fmulp
ret
jno
pusha
iret
add
mov
lods
stos
xor
jge
out
or
aaa
ljmp
push
rep
inc
ja
adc
and
lock
push
mov
mov
sbb
push
mov
push
push
xchg
pop
imulb
jg
dec
xchg
and
jb
std
fnstenv
cmc
jmp
jae
repnz
or
mov
jl
pop
mov
ja
push
cmp
xchg
loop
mov
fisubrl
fnstsw
mov
test
leave
xchg
push
jb
push
test
mov
adc
rcrb
push
fwait
aad
in
es
out
nop
and
mov
sub
mov
int
or
push
pop
cmpsb
outsb
sbb
int
pop
dec
lds
xor
push
pop
xor
push
ja
jbe
cltd
pop
pop
push
cmp
cli
and
inc
test
adc
popf
mov
jbe
subl
jecxz
adc
push
mov
jno
fstpl
pop
dec
popf
mov
push
or
and
fsub
xchg
mov
jp
push
and
pop
push
orb
xor
movsl
jbe
cld
in
pop
mov
sub
pusha
mov
push
je
push
in
gs
mov
jae
add
sbb
or
xor
lods
in
cmp
subb
inc
sbb
loopne
dec
xor
sbb
scas
cmc
cmpsl
add
inc
sar
push
sbb
push
repnz
pop
dec
cld
repnz
inc
cltd
xchg
or
sub
push
enter
push
ret
mov
fsubs
in
inc
out
test
push
lock
jbe
lock
imul
jle
mov
std
jne
jl
xchg
pop
cmp
test
mov
stc
mov
loope
mov
js
sub
sbb
bound
js
mov
int
jl
fcmovb
mov
or
push
cli
insl
std
or
add
imul
ds
imul
or
and
hlt
and
lods
mov
test
or
mov
lds
cmp
xchg
imul
adc
cmpsb
iret
xchg
mulb
mov
sbb
and
jle
push
and
ret
inc
repz
sbb
rcrb
cmc
mov
inc
add
or
popf
scas
cmc
iret
frstor
ljmp
inc
pusha
cmpb
xchg
insb
pop
push
xchg
sub
cmp
and
sarl
mov
and
ja
pop
dec
pusha
dec
sbb
lcall
scas
mov
mov
or
xchg
jns
loopne
shrl
outsl
jnp
ds
mov
inc
sbb
clc
mov
jecxz
shrb
stos
in
jg
sbb
cmp
inc
int
xchg
aas
mov
cmp
push
inc
push
sub
xorl
ret
hlt
setae
mov
pop
lea
adc
dec
pop
out
sub
enter
cmpl
pusha
insl
pop
xchg
pop
loope
cmp
lret
insl
mov
hlt
adc
mov
mov
jnp
cli
push
fdivp
add
bnd
add
xor
push
adc
xor
sub
lahf
insb
insb
mov
adc
or
dec
lods
in
pusha
fdivrs
push
pushf
hlt
insl
sub
push
leave
dec
iret
jae
hlt
sbb
pop
pop
ljmp
push
loope
out
jg
mov
das
xor
push
inc
popa
mov
adc
push
push
fdiv
sbb
push
xor
pop
ret
xor
out
loope
push
jl
enter
mov
mov
sub
pop
rorl
mov
enter
lods
add
xlat
add
or
js
pusha
repnz
insl
mov
mov
mov
pop
pop
adc
push
xor
arpl
js
or
jns
shrb
inc
sahf
fsubrl
jbe
in
sahf
and
xor
insb
ret
rorb
xor
popf
lcall
lods
clc
cmp
dec
or
mov
jecxz
mov
xchg
jle
lock
pushf
aad
in
dec
sbb
lods
cmp
cmp
cli
pushf
xchg
or
imul
stos
inc
cmp
xchg
icebp
mov
stos
testb
jmp
jg
repnz
pusha
inc
jns
cmp
fsubr
lods
or
aas
xchg
cs
andb
jl
dec
mov
stos
test
inc
xchg
imul
jno
push
out
mov
jp
rcrl
aas
pop
cmp
sub
lods
jne
out
int
orl
shll
inc
sub
xchg
pop
arpl
in
push
mov
add
cld
jp
fildll
adc
sahf
sbbb
in
pop
dec
notl
es
sbbb
incb
mov
dec
roll
push
xor
mov
jmp
adc
adcb
lahf
sti
cmp
push
mov
and
dec
push
jmp
std
jb
nop
lock
scas
je
je
sub
hlt
out
push
cmp
call
cmp
adc
aas
out
add
add
outsl
lret
adc
jne
mov
aam
mov
mov
mov
test
lods
lahf
sbb
dec
push
or
sub
repz
test
and
rcll
sbb
adc
aad
clc
or
cli
inc
inc
xor
jmp
mov
rol
inc
movsl
outsl
cs
xchg
pop
pop
inc
enter
adc
push
lods
adc
js
cmp
cmp
jnp
pushl
sub
pop
cmp
jl
ds
cmp
xchg
mov
and
jp
pop
sbb
call
shlb
out
hlt
lahf
jbe
aas
pop
sbb
push
jno
imul
roll
pop
add
popf
dec
sahf
xor
out
cmpsl
inc
xor
rorl
xor
xchg
add
mov
out
mov
cltd
imulb
dec
jbe
fdivrl
jbe
rcrl
push
clc
ret
cmc
jb
loop
jle
inc
repnz
daa
jae
dec
dec
fmulp
or
pop
ja
imull
lds
out
and
and
js
outsb
std
adc
jmp
outsb
imul
cwtl
jp
mov
popl
xor
inc
fs
xchg
cmpsb
mov
insl
push
cmp
iret
stc
in
cmp
jge
push
or
mov
sbb
push
leave
push
loop
and
fcompl
mov
aaa
mov
pop
mov
pusha
pop
int3
into
sbb
jbe
insb
xor
outsb
pushf
test
cmpl
jl
jle
je
mov
scas
ret
xor
ss
in
sub
pop
push
adc
notb
maskmovq
sub
xrelease
imul
arpl
or
out
push
lcall
faddp
dec
mull
cmp
mov
push
mov
scas
in
js
xor
inc
pop
fsubp
add
in
in
jg
leave
jecxz
add
outsl
fnstcw
call
out
inc
push
cmp
loopne
test
pop
inc
dec
add
ret
mov
out
sbb
imul
cmpb
push
in
daa
add
add
jns
cmpsl
rol
and
scas
pushf
jae
mov
ds
imul
pop
dec
xchg
scas
cmp
mov
or
sbb
shrl
pop
imul
sub
jns
xor
adc
out
mov
sbb
iret
outsb
data16
lock
fdivrs
and
sbb
loop
adc
jecxz
scas
or
movsl
lds
rorl
daa
xchg
outsb
cmp
lea
js
xchg
and
xchg
int3
fcomps
nop
inc
dec
push
lea
mov
jl,pt
jecxz
insb
cld
xor
mov
in
cltd
or
mov
push
xchg
or
dec
call
add
cmc
adc
mov
shlb
adc
sbb
pop
lret
mov
enter
jae
adc
cmp
pop
sti
add
pop
js
dec
cmpsb
shll
xchg
or
jno
adc
sbb
test
add
xor
xor
insb
and
push
and
nop
popf
xchg
in
mov
mov
jle
test
pop
ret
jl
adc
dec
pushf
ficomps
add
inc
push
es
xlat
or
fwait
out
sti
mov
jle
rcrl
std
lcall
push
xor
mov
and
sbb
ficomps
cs
pop
inc
je
or
and
mov
test
lahf
repz
jg
push
in
clc
fnclex
popf
and
jno
push
pusha
jnp
lret
jg
jbe
into
pop
push
jl
push
xchg
cmp
sub
mov
in
xchg
test
dec
movsl
insb
cwtl
inc
loope
aas
push
pushl
xor
xchg
int
pop
jmp
jae
test
jbe
fistl
sub
mov
lahf
stos
mov
in
mov
gs
lcall
jo
xor
incb
scas
mov
lea
sbb
inc
jecxz
add
push
pop
add
sub
stc
pusha
xor
jp
fwait
sbb
xchg
fmull
mov
popf
cmova
rsqrtps
push
pop
into
mov
jp
jg
dec
jo
out
adc
jmp
fbld
loope
xchg
inc
cmp
insb
mov
insb
or
or
cmp
dec
push
inc
nop
test
je
das
jns
mov
shrl
sbb
add
out
in
push
xor
into
and
push
cmp
roll
cmpsl
out
xor
dec
jbe
test
pop
jo
fsubrs
loope
movsl
mov
push
out
mov
loopne
addl
add
inc
cwtl
scas
js
popa
mov
or
aam
repz
jmp
loop
movsb
pop
iret
jne
adc
into
aas
xlat
cltd
lods
jnp
outsl
cmpsl
add
jb
xchg
sub
adc
lret
add
test
pop
sub
stc
xor
cmpb
loop
jno
subb
leave
push
mov
inc
or
int
cmp
mov
push
pop
fimull
cmp
aas
or
cmp
clc
push
mov
lahf
nop
or
push
mov
sarl
mov
push
or
dec
pop
sbb
mov
sub
call
add
pop
pop
or
pushf
pop
sarl
inc
sar
sub
jg
out
pcmpeqd
adc
es
aad
jo
popa
hlt
jmp
adc
jl
das
filds
rolb
xchg
sbb
pop
hlt
inc
and
rorl
test
stos
stos
mov
push
mov
inc
aaa
sub
fldcw
cmp
cmpsl
bound
sub
push
imul
ret
or
inc
jmp
mov
xor
in
mov
mov
push
and
sub
mov
sbb
repnz
mov
mov
xlat
sub
in
les
scas
test
sbb
cmpb
push
xchg
xchg
mov
lahf
or
sub
cmp
insl
out
outsl
and
add
adc
mov
pop
xchg
cmpsb
xchg
cmc
cs
sub
xchg
bnd
mov
cmp
pop
xor
scas
inc
pushf
inc
sbb
xchg
es
mov
pop
jne
aaa
dec
lds
arpl
stc
scas
lods
inc
les
popf
cmc
lods
fistl
ret
fidivs
sub
sbb
and
mov
push
add
dec
xchg
xchg
xchg
sbb
rep
add
in
not
mov
cmp
je
pop
push
push
mov
mov
or
lret
sbb
das
call
insl
push
pop
mov
adc
and
test
cmp
mov
test
daa
add
lds
scas
scas
inc
mov
nop
xor
pop
jmp
gs
dec
fs
test
pslld
cmp
leave
mov
xchg
dec
cmp
jb
fmul
xchg
sub
test
mov
pop
lret
mov
dec
jmp
adc
mov
shlb
adc
insl
mov
xchg
add
jl
mov
je
subl
push
idivl
or
jge
dec
loop
xor
adc
sub
dec
inc
pop
sbb
jl
dec
mov
repnz
rclb
in
push
ss
out
xchg
mov
pop
dec
imul
or
push
lret
inc
pop
imul
push
imul
sub
hlt
push
push
lods
add
push
mov
std
cmc
out
mov
fldenv
test
das
xchg
ficompl
icebp
mov
repz
in
dec
mov
fsubrl
adc
mulb
mov
icebp
push
jl
std
nop
lock
divl
arpl
mov
push
mov
pop
push
push
arpl
xchg
add
lds
out
loope
outsl
cwtl
push
int3
icebp
cmp
outsl
push
fwait
into
inc
loope
lret
inc
inc
add
xchg
add
pop
aaa
rolb
pop
int
xor
aas
nop
pop
xchg
push
stos
add
inc
xchg
add
adc
gs
inc
arpl
fnstsw
shrb
fld
jg
pop
jge
mov
mov
mov
pop
mov
xchg
sbb
adc
js
push
js
sbb
jnp
popf
push
nop
push
addr16
pop
and
outsl
mov
xchg
outsb
xchg
pop
mov
popa
xchg
std
cmp
mov
xor
scas
repz
mov
push
mov
pop
adc
mov
aam
add
stos
inc
pop
push
dec
adc
shll
jecxz
andb
sub
and
int3
lret
call
inc
adcb
mov
aas
pushf
pop
jne
xor
pop
adc
sbb
test
pusha
outsl
xchg
inc
pop
lea
mov
dec
xor
loopne
add
dec
mov
sub
inc
cmp
adc
inc
xor
mov
out
and
inc
incb
loope
xor
pop
push
fld
cltd
xor
add
xor
sub
fnsave
nop
movsb
sbb
sbb
sub
lcall
jp
cmp
mov
sahf
xchg
insl
aad
in
adc
add
mov
adc
lea
inc
popa
popa
and
add
aam
pop
aaa
jb
cmp
inc
cmp
cmp
mov
loopne
aam
jae
loope
outsb
adc
fs
scas
ficoml
cmp
stos
ret
and
sub
das
sub
ffreep
pushf
subl
out
insb
or
add
inc
push
gs
out
jecxz
int
inc
add
dec
in
push
jbe
scas
add
pop
dec
rcll
adc
mov
sub
scas
or
scas
push
jmp
xchg
add
das
andnps
shrl
notl
jae
ret
pop
fmuls
and
test
loope
lea
mov
add
pop
push
test
push
sbb
add
sbb
lahf
xor
add
push
int
push
jecxz
fbld
sub
test
outsb
iret
addr16
jp
dec
scas
in
rorb
pushw
jecxz
sub
or
inc
in
xchg
shlb
and
testl
es
sbb
fbld
sahf
push
lock
xchg
pop
std
aas
gs
in
test
mov
enter
sbb
jo
mov
xor
int3
aad
les
cmp
sbb
test
cwtl
js
loopne
test
jl
mov
sbb
sub
push
dec
push
cmp
dec
or
add
icebp
cs
cmp
into
adc
sub
cmp
stos
mov
loop
out
aam
sti
inc
inc
xchg
dec
mov
pop
ret
inc
icebp
cmpb
inc
cmp
push
fcmovu
push
sbb
scas
pop
mov
jnp
push
jbe,pn
or
mov
ret
in
push
mov
pop
sub
insb
push
cli
cmpsb
jg
insb
pop
out
cmp
iret
xchg
mov
lidtl
sub
push
add
out
int
jne
imul
inc
fildll
fistl
pop
xor
push
lret
out
ficoml
lret
pop
cld
and
inc
jo
movsb
jge
add
scas
cmp
hlt
sub
add
sub
pop
out
fisubl
jne
into
arpl
loop
mov
dec
jns
popa
lock
sti
xchg
jle
enter
movzwl
xchg
dec
cs
add
leave
mov
aas
inc
jae
adc
je
sbb
fisttpl
jb,pt
shr
jbe
loope
mov
in
inc
dec
push
mov
xchg
jb
fstps
aas
mov
push
and
arpl
dec
jae
inc
test
mov
xor
or
cld
pop
mov
dec
xlat
adc
sub
push
pop
mov
idivl
or
or
jbe
push
mov
outsb
pop
push
and
icebp
inc
and
insb
push
xchg
fwait
loope
xchg
stos
xor
dec
mov
js
xchg
movsb
cmp
jge
push
cmpsb
mov
pop
mov
sub
enter
je
jne
shr
inc
je
mov
pop
cmp
lcall
mov
jg
jo
pop
sub
enter
adc
and
dec
inc
data16
sahf
sbb
das
shrb
aas
push
fbld
enter
add
daa
ljmp
fs
jg
aam
stc
fwait
jle
imul
add
lahf
mov
fidivs
sub
xchg
dec
push
sbb
push
inc
sbb
cs
cmpsl
int
dec
sub
lea
mov
push
clc
pop
adcl
mov
fisttps
ds
divl
adc
es
cltd
xchg
cmp
test
mov
pop
ss
test
jb
xor
not
sahf
movsl
shlb
rclb
jns
or
je
cld
in
dec
push
xchg
repz
mov
int3
xchg
pop
dec
rcl
sub
sub
mov
sbb
mov
pop
iret
jne
dec
push
jle
push
lods
dec
cltd
or
jo
in
jle
cmpsl
xorl
cmp
push
jmp
sbb
aas
jge
mov
xlat
jge
push
in
jge
ret
add
jb
push
cmp
cmpsb
add
xchg
das
and
mov
push
or
data16
pusha
xorb
or
cmpsb
lret
add
add
in
xchg
insb
out
int3
test
ja
push
add
addr16
lret
stos
xchg
pop
mov
push
dec
ret
push
mov
xor
arpl
pushf
or
cmp
lret
xchg
xchg
incl
stc
fbstp
loope
bound
jae
mov
pop
hlt
rcrl
iret
jnp
or
shl
add
outsl
add
push
clc
mov
jnp
shlb
mov
push
or
push
std
int3
pop
dec
loope
aas
insl
pop
ret
les
sbbb
loopne
mov
fidivrs
arpl
cmpsl
cmp
movsl
mov
ja
or
into
xchg
mov
and
daa
cmp
cmp
push
cmp
mov
pop
repnz
in
sub
bswap
push
idivb
adc
test
imul
call
jbe
jp
mov
rclb
push
into
pop
push
mov
outsb
sbb
ret
push
sub
or
cs
pop
sub
and
push
adc
fistps
adc
outsb
mov
mov
xchg
inc
jl
lea
mov
outsb
addb
in
push
dec
jmp
cltd
arpl
inc
add
enter
inc
stos
popa
pop
inc
cmp
std
adc
hlt
pop
mov
jns
xlat
fs
mov
mov
enter
lret
popf
out
jae
xor
jae
mov
push
xor
xchg
and
mov
clc
mov
ret
and
xor
int
insl
out
fdivrl
jecxz
add
sub
leave
je
xor
stos
inc
scas
xlat
cmpl
mov
les
jle
mov
mov
jg
sahf
lods
adc
push
lods
mov
enterw
and
push
shlb
or
adc
loope
mov
and
sbb
xchg
cmp
scas
adc
push
ljmp
ficoms
and
js
rcrl
fcompp
and
jle
into
jbe
push
mov
cmp
lock
jge
push
jns
mov
xlat
jno
adc
arpl
push
cmp
ficomps
aas
ljmp
xchg
add
adc
add
mov
insl
inc
xchg
cmpsb
xchg
mov
xor
cmp
lock
or
sbb
add
pop
or
jb
inc
pop
mov
testb
test
or
lcall
push
lods
pop
jl
and
gs
lret
mov
inc
pusha
inc
fsubrl
ret
sbb
push
movlhps
sub
shr
xor
dec
mov
sti
ljmp
inc
insb
inc
stos
ss
ret
data16
push
mov
pusha
arpl
arpl
adc
je
scas
cmp
xor
sub
xor
rclb
loopne
cltd
push
daa
push
fbld
inc
add
fsubl
rol
push
jb
sub
out
in
or
mov
cmp
sahf
cmp
dec
adc
mov
inc
loopne
mov
pop
test
sahf
lret
mov
sub
nop
cmc
int3
pop
and
fdiv
xchg
adc
or
sahf
jmp
mov
xchg
stos
repnz
mov
mov
shrb
or
xchg
imul
mov
jbe
clc
mov
in
out
cmpsb
pop
outsb
cmp
mov
icebp
loope
mov
ret
or
faddl
lcall
repz
mov
ds
fidivl
int
in
mov
cli
rclb
jmp
and
bound
inc
stc
xor
int
xchg
adc
sub
sarb
add
adc
inc
or
mov
in
std
push
cs
mov
add
call
and
hlt
lock
jmp
icebp
cmp
outsl
pop
dec
and
or
push
dec
repnz
call
aad
inc
or
and
pop
pop
es
sbb
in
xor
scas
cltd
bound
xchg
fidivrl
inc
jo
fs
bnd
adc
pop
loop
in
pushl
sbb
mov
adc
lret
xor
mov
inc
scas
pusha
mov
adc
addr16
xor
adc
lea
sbbl
ret
hlt
jae
out
mov
test
test
in
lods
xor
jl
sub
xor
outsb
fmul
in
push
test
shll
lea
pop
leave
aad
loop
xchg
sub
or
clc
rolb
pop
in
sub
cli
xor
add
bound
imul
pop
sbb
and
and
inc
xchg
jg
sbb
mov
dec
mov
adcb
jnp
push
in
push
mov
lock
imul
sub
cwtl
movsl
es
jecxz
pop
pop
sarb
in
movsw
lret
ret
stc
pop
jne
jl
pushf
mov
dec
movsb
jno
gs
sub
sbb
aaa
in
out
dec
fsubrp
inc
mov
jecxz
push
inc
pop
push
arpl
inc
inc
iret
push
scas
adc
pop
stc
data16
adc
inc
xor
jl
xor
jp
int3
and
jl
xchg
add
aaa
lock
out
aad
test
loopne
shlb
adc
repz
std
enter
or
dec
cmpl
mov
dec
mull
jmp
sub
xor
xchg
and
pop
sub
rorb
dec
inc
test
inc
pusha
into
push
mov
fwait
nop
es
hlt
jb
mov
mov
mov
inc
insb
rclb
repnz
flds
sahf
aad
dec
adc
nop
sbb
or
fdivl
and
jno
repz
lret
mov
dec
jbe
inc
hlt
xor
and
fcoms
push
test
popf
xchg
mov
mov
xchg
stos
add
push
mov
imul
adc
adc
sbb
pop
jns
mov
add
in
mov
fcomi
cmc
adc
sbb
fsubl
mov
pop
or
stos
enter
ret
jmp
movsb
pop
pop
cmpsb
xchg
or
shrl
clc
shr
jb
mov
sbb
pop
je
ds
dec
arpl
inc
pop
xor
pop
mov
and
or
rol
es
lea
jp
or
mov
pop
adc
mov
roll
or
sub
xchg
stc
ret
and
aas
cmp
dec
in
sahf
push
sti
cwtl
les
cmp
mov
adc
outsl
mov
lret
pop
pop
push
fists
mov
jns
add
jp
push
cmpsl
jp
fcomps
push
repz
mov
shll
aas
cld
hlt
std
jno
vpackssdw
fs
push
mov
jb
cmp
mov
or
dec
enter
nop
mov
sbb
jnp
andl
fisttpll
pop
adc
aaa
subb
sbb
inc
sbb
push
test
push
add
loopne
mov
xlat
sbb
test
xor
mov
xlat
ficomps
sub
dec
pop
cmp
dec
and
jnp
ficomps
cli
aad
and
test
fimull
repz
ret
add
sub
mov
cmp
dec
and
sbb
les
ffree
xlat
xchg
push
jle
jl
lahf
dec
xor
pop
lahf
pop
push
lcall
push
dec
xchg
xchg
add
xor
push
jg
aam
xor
sub
repnz
sub
jno
jae
loopne
ret
sarb
or
cli
xor
and
fildl
xchg
add
into
add
mov
dec
or
mov
or
sub
xchg
xchg
fistps
xor
jg
je
aad
cmp
add
xchg
insl
push
adc
jp
and
inc
arpl
lods
cmp
or
out
mov
ss
stc
sub
mov
and
push
xchg
leave
add
in
inc
mov
lds
push
sarb
xor
adc
push
pop
fdivs
ret
sbb
add
lock
mov
xor
hlt
jb
mov
data16
bound
adc
test
cmp
push
stos
in
add
hlt
pop
ret
push
ret
out
jnp
cmpsb
pop
call
jno
mulb
xlat
jns
add
jmp
sub
sbb
jb
testl
dec
das
call
aas
jl
lret
mov
into
xchg
mov
dec
data16
dec
xor
mov
cmpl
cmp
cmpsb
adc
stos
xchg
jg
pusha
sub
movsb
push
iret
sbbb
or
xlat
mov
mov
cmc
pop
cmp
cwtl
dec
push
pop
cmp
repnz
sub
inc
int3
xchg
or
sbb
dec
xor
push
test
mov
push
popa
test
sbb
ret
and
pop
and
or
and
push
int
out
inc
int3
loope
xor
test
lahf
mov
aas
xchg
and
subb
mov
sbb
std
loope
or
and
jns
adc
mov
int
test
mov
xchg
mov
or
or
dec
push
adc
lret
mov
jg
mov
mov
lret
in
imul
sbb
mov
adc
add
add
jno
jne
addl
and
fdivrs
sub
push
pop
mov
or
out
xor
mov
pop
test
shll
cld
cld
adc
mov
icebp
xor
push
iret
sub
inc
popf
jbe
std
hlt
push
repnz
das
lcall
inc
inc
sbb
daa
or
pop
dec
inc
addb
dec
stos
lds
xlat
push
mov
push
mov
and
mov
cs
dec
outsl
sub
ds
arpl
fstpl
push
push
js
arpl
loope
inc
fcomps
jne
movsb
add
dec
cwtl
jp
popf
cmp
test
imul
test
cwtl
iret
mov
iret
arpl
mov
shrl
inc
sub
hlt
xchg
mov
cmp
xor
cmp
lods
inc
lods
adc
ljmp
rorl
cmp
add
enter
out
mov
loopne
shll
mov
subb
mov
insb
mov
in
adc
sub
jle
sbbb
lret
fnsave
es
cwtl
fcmovb
ret
in
nop
pop
loop
adc
cmp
popf
loope
sti
es
cmpsb
das
xchg
lret
dec
adc
sub
adc
fistps
divb
inc
or
pop
xor
dec
jb
ja
sbb
xlat
in
inc
cld
test
mov
movsl
and
mov
inc
hlt
es
cld
push
push
push
mov
mov
push
dec
enter
jne
sub
iret
in
pop
mulb
jb
inc
mov
movsb
and
into
pushf
or
std
sti
push
scas
leave
xor
xchg
out
pop
sbb
xchg
push
into
mov
ja
mov
lcall
push
adc
in
in
mov
and
cmpsl
outsb
js
and
mov
xchg
jecxz
cmp
int3
mov
repz
mov
cs
pop
stos
jns
mull
scas
scas
or
std
and
cmp
xchg
movsl
cmp
test
mov
in
push
jle
xor
adc
xchg
pop
xchg
ret
mov
push
daa
sub
cmpl
outsl
jnp
test
rolb
aam
aaa
out
insl
dec
jno,pt
or
shl
pop
sbb
push
test
pop
out
jo
lds
mov
and
push
adc
xchg
loope
xor
pop
std
int3
and
jecxz
push
imul
or
inc
adc
cmp
cld
mov
adc
xor
jmp
repnz
mov
pop
mov
sub
sub
pop
push
js
cmp
cli
lahf
inc
cwtl
mov
mov
fxch
jg
ret
out
test
ds
and
addr16
cwtl
and
outsb
inc
lret
sub
mov
adc
mov
ret
mov
adc
popf
hlt
inc
into
xor
lods
sub
pop
mull
push
in
inc
into
inc
pop
xchg
scas
int
lahf
sarb
rcrl
and
xchg
mov
test
pusha
jecxz
jae
fsubs
xchg
xchg
xchg
movsb
movsb
cmpsl
cs
mov
dec
or
lock
gs
orb
lcall
pop
rclb
ss
or
add
and
cmpsl
sub
cmpsl
push
mov
insb
imul
mov
lahf
dec
inc
cwtl
fwait
or
or
mov
xchg
hlt
mov
mov
ss
test
sbb
cli
pop
adc
push
ror
inc
dec
cmp
ret
cmpb
push
xchg
shll
pop
int
test
dec
add
js
test
dec
add
mov
push
ljmp
and
cmp
icebp
jnp
mov
bound
dec
xor
sub
rcrl
mov
or
jl
psubd
mov
scas
test
cmp
test
inc
cmp
int
sub
lret
in
mov
adc
jo
or
jl
xchg
je
push
hlt
sbb
xor
out
jge
mov
adc
aaa
push
sub
test
push
mov
fsub
or
inc
pop
jbe
loope
sub
in
iret
dec
out
and
cmp
cltd
bound
pop
into
jno
jmp
mov
pop
jae
cmpsl
iret
xor
xor
leave
inc
scas
leave
std
cmp
inc
push
sub
jbe
mov
aam
mov
push
pop
mov
push
jge
dec
pop
mov
pop
loope
mov
push
adc
fwait
xor
pop
xchg
sbb
pop
ficompl
scas
xor
popf
test
repz
and
bound
out
adc
xchg
mov
jno
push
inc
push
gs
in
lds
cmpsl
imul
mov
adc
cmp
mov
xchg
xor
mov
loope
int3
mov
push
mov
xor
mov
sbb
push
xchg
jmp
pop
dec
andl
mov
add
inc
push
mov
cmp
lods
adc
jp
scas
inc
lods
test
pushf
pushf
inc
shr
arpl
push
int
pmaxub
and
xor
pusha
jne
mov
adc
push
mov
fs
jle
shlb
cs
ret
iret
aaa
add
add
jbe
ret
in
ret
sub
daa
insb
shrl
jnp
fisttpll
adc
rcr
andb
adc
lret
bnd
mov
fsubrl
mov
push
lock
nop
es
addr16
push
in
or
xor
mov
in
movsl
aad
and
sub
push
pop
lcall
adc
clc
xlat
jge
hlt
sbb
cwtl
adc
jno
movsb
xchg
jns
lods
ljmp
lock
rclb
push
fldcw
push
repnz
jge
sub
xor
fistpll
mov
movsl
fbld
test
test
lahf
gs
dec
or
scas
or
aaa
popl
and
add
nop
lea
sbb
subb
mov
inc
jecxz
testl
mov
jg
cmp
pop
int3
je
or
addr16
adc
mov
scas
enter
mov
pop
jecxz
or
mov
dec
dec
jmp
movsb
sub
fbstp
jl
sub
dec
popf
in
jg
and
insl
inc
pop
inc
mov
js
jp
jae
shlb
adc
mov
xchg
insb
pop
mov
inc
lods
test
shll
lahf
cmp
jns
jmp
add
mov
mov
fildll
pusha
add
cmpsb
out
loopne
push
into
jmp
cmc
aas
sbb
and
mov
outsb
loopne
sub
mov
dec
or
pop
sub
mov
xor
pop
dec
lret
fisttps
sbbb
jns
lahf
dec
or
cmp
stos
lds
jge
add
pop
cmp
push
mov
imul
bound
insl
pushf
xchg
sub
es
subb
data16
repz
clc
test
lret
mov
dec
push
das
jmp
enter
and
inc
push
add
jmp
add
or
jle
jnp
pop
inc
lcall
lods
jle
push
stos
ljmp
fldenv
adc
outsb
and
out
les
fsubs
rol
sti
fcmovnb
xor
das
add
js
dec
jg
add
scas
push
data16
mov
cwtl
pusha
mov
dec
mov
lods
push
sahf
psraw
mov
xor
cld
sar
pop
sahf
fists
mov
adc
leave
dec
mov
sbb
adc
pop
mov
popf
dec
add
adc
fisubs
push
repz
push
sbbl
into
push
jno
fwait
mov
ret
ss
in
fdivrl
dec
dec
sbb
jnp
xor
jle
loope
les
push
js
iret
mov
xor
jbe
adc
pop
test
rolb
stc
xor
inc
test
lock
push
jne
xorb
mov
adc
push
ffree
out
xor
sub
jl
dec
icebp
in
in
gs
push
lods
xchg
ja
jecxz
gs
jno
pop
pop
xlat
dec
mov
pop
or
aaa
enter
adc
xchg
dec
aas
outsl
push
fwait
bound
inc
jl
and
cli
sub
sub
cli
and
sbbb
push
or
cmpsb
pusha
cmp
jle
pop
fmull
xchg
push
out
mov
fidivs
inc
movsl
in
arpl
pop
adc
loope
adc
jmp
mov
daa
ret
test
lea
movsl
stos
xchg
xchg
notb
mov
sub
sbb
test
mov
pop
mov
mov
hlt
aaa
jb
cwtl
mov
lods
mov
push
mov
mul
fcmovne
xorb
xor
mov
lcall
adc
movb
mov
adc
inc
fmuls
imul
pushf
jge
adc
mov
xchg
jns
mov
fstpt
or
xchg
rorb
mov
mov
jg
push
mov
xchg
mov
shlb
pop
dec
into
arpl
fiadds
xlat
ja
cmc
push
hlt
orl
dec
add
mov
push
loopw
mov
roll
inc
mov
xchg
sbb
inc
mov
mov
cli
ljmp
out
push
jmp
ffreep
jo
mov
inc
je
dec
mov
shrl
div
popf
mov
jne
jmp
in
hlt
push
rorl
push
jle
adc
es
test
xor
in
and
pop
loop
insb
dec
mov
cmp
into
sbbb
ja
lds
out
movsb
adc
pop
dec
cmp
push
sub
nop
test
mov
cwtl
es
xchg
add
jl
lret
mov
rclb
push
push
jge
lea
inc
xor
pop
loope
mov
or
addr16
mov
xchg
andb
jo
insb
sub
sbb
jmp
pop
or
mov
mov
push
mov
and
jmp
dec
imul
pusha
adc
es
pop
add
das
dec
jo
dec
jns
push
sbb
xorl
call
out
push
fidivrl
sbb
jo
nop
repnz
hlt
push
repnz
sbb
xchg
and
lret
add
or
xchg
out
push
inc
stc
daa
filds
cwtl
dec
std
stc
fcoml
and
push
inc
pop
sbb
sub
mov
gs
dec
xchg
mov
jmp
rclb
mov
xchg
mov
push
fchs
jb
test
test
cs
inc
mov
dec
xchg
outsb
in
cltd
icebp
pop
outsb
and
jle
sbb
add
sbb
test
sbb
repnz
mov
data16
sub
std
fs
lea
pop
into
sti
xor
into
mov
lods
jl,pt
in
and
cmp
sbb
xor
aam
mov
ret
je
je
xchg
gs
pop
mov
icebp
cwtl
mov
addr16
fdivs
mov
popf
cmp
repz
xlat
pop
jnp
inc
int3
lahf
out
cltd
and
pushf
sarl
imul
inc
stos
cmpsb
mov
insl
lods
fwait
bound
dec
jl
clc
es
adc
lret
jl
sbb
jle
iret
in
mov
xchg
push
jmp
and
mov
scas
in
orb
add
jne
adcl
mov
inc
sahf
sub
push
inc
and
inc
mov
cld
xchg
test
test
test
dec
and
arpl
push
fists
in
andl
out
out
sbb
jnp
mov
out
js
and
icebp
mov
cmp
pop
js
fildl
push
gs
mov
lock
add
xchg
repnz
lahf
in
mov
mov
lret
push
sub
cmp
jne
inc
fdivrs
jne
push
movb
lahf
jle
iret
xor
scas
out
mov
add
pop
jl
sbb
pop
lods
movsb
xor
xchg
ret
adc
dec
stos
adc
ds
mov
cwtl
ds
or
jge
arpl
int
push
push
ret
orb
gs
inc
cmpb
xchg
lret
pop
lock
and
add
mov
and
adc
scas
rcll
push
cmp
mov
dec
jmp
cmp
mov
loop
lret
cs
xor
subl
mov
mov
scas
or
repz
xchg
pop
lret
sbb
adc
cmp
scas
mov
jno
addr16
adc
inc
cmpsb
cwtl
mov
in
outsb
rcrb
loope
std
or
rcll
popf
sbb
insl
aad
or
cmp
test
lret
movsl
rcrb
push
xor
into
rsm
fprem
and
dec
mov
shlb
arpl
mov
fstpl
out
imul
pop
shll
hlt
sysexit
mov
xor
cvtps2pd
mov
jns
adc
sbb
mov
nop
fmuls
hlt
dec
int3
call
test
js
inc
add
sti
aas
xor
push
fbstp
pop
fwait
popf
pop
cmp
stos
cltd
push
sbb
push
xor
xchg
mov
adc
idivb
pop
mov
cltd
jge
lcall
mov
push
mov
roll
push
inc
xchg
mov
fwait
push
dec
jno
arpl
fldt
or
scas
xor
dec
mov
mov
inc
mov
int3
add
roll
arpl
lds
xorl
aad
pop
fwait
mov
sbb
into
or
test
cmp
pop
cs
adc
jbe
push
push
es
xchg
sti
jns
mov
addr16
inc
xor
sub
out
arpl
cmp
jl
andl
lds
rclb
push
pop
outsb
dec
push
push
clc
cmp
mov
test
dec
mov
shlb
bound
mov
jne
sahf
lea
sbbb
cwtl
mov
sub
shrb
dec
adcl
mov
addr16
dec
add
cmp
xor
shlb
out
add
or
fildll
sbb
pop
sub
stc
fwait
push
lret
xchg
and
push
ljmp
ss
pushw
mov
mov
into
push
leave
lock
imul
xchg
jmp
insb
add
nop
mov
mull
jmp
xor
cmp
push
xor
cvtps2pi
in
xor
mov
lock
sbb
test
add
ret
inc
je
sub
aaa
and
xchg
and
stc
and
fwait
daa
mov
add
pop
in
ljmp
inc
push
int
stos
add
adc
jb
jecxz
loopne
mov
push
in
hlt
fs
mov
mov
testl
xchg
jmp
dec
cmp
imul
jl
xlat
je
fidivrl
int
jno
pop
lock
dec
aad
loopne
data16
inc
fcomps
or
or
sar
aam
mov
into
out
jg
neg
stos
and
xor
into
je
out
add
xchg
or
sbb
daa
adc
mov
fs
fdivrs
or
cld
dec
addb
mov
in
inc
fsub
mov
dec
mov
push
adc
pop
mov
jle
jae
push
mov
push
mov
call
mull
jo
mov
ss
push
xor
pop
popa
or
cmpsl
push
xchg
movb
push
adc
adc
cwtl
or
fwait
call
test
pusha
out
push
xor
es
js
and
mov
and
push
div
mov
inc
in
inc
sub
repz
lret
in
icebp
in
sbb
pop
es
xor
aad
sbbl
jbe
lea
push
push
dec
xchg
inc
dec
dec
rol
out
fstpt
andl
stc
mov
push
das
add
mov
sub
out
fbstp
add
and
out
adc
insb
jo
imul
orb
out
jl
pusha
js
cwtl
and
out
shl
mov
xlat
pop
jecxz
or
xor
addb
std
pusha
shl
test
adc
int
or
and
rclb
ljmp
push
std
and
cmp
mov
cwtl
aas
push
sub
xchg
mov
and
es
pop
sub
sbbb
iret
fisttpl
lret
cmc
das
subb
jecxz
pop
dec
js
mov
and
inc
push
dec
push
imul
out
inc
sbb
ljmp
mov
sbb
jno
or
xchg
push
pop
pop
xor
dec
cmp
and
pop
cltd
outsb
mov
pop
and
push
or
popa
jo
push
pop
jg
add
adc
adc
adc
cmpsl
mov
sbb
arpl
std
sbb
sub
cmpsl
push
add
lea
fldenv
jl
pop
jne
push
hlt
push
gs
mov
addr16
dec
adc
stc
sub
addr16
fninit
insl
sub
push
mov
addr16
fsubl
sub
faddl
test
sub
pop
test
pop
jno
add
push
pop
xchg
or
in
and
icebp
mov
xchg
inc
iret
xchg
jnp
xor
push
dec
scas
mulb
stc
mov
rcrl
daa
cli
xor
addr16
and
stc
in
mov
mov
and
lret
and
aaa
jns
cli
inc
jb
pop
xchg
cmpb
fildll
xchg
daa
test
iret
jp
pop
out
sbbb
lret
and
repnz
test
lds
shrb
or
shll
ljmp
lcall
sbb
dec
out
lret
cltd
xchg
cmpsl
out
mov
jg
fmul
cmp
icebp
cmp
insl
add
lods
les
ss
pop
push
jecxz
mov
mov
mov
and
bound
int3
imul
outsl
mov
int3
cwtl
xchg
clc
jns
adc
pop
cmp
call
push
and
jge
int
jae
into
jmp
jp
daa
xchg
insl
je
pop
or
pop
mov
mov
mov
scas
mov
pushl
push
ss
xchg
int3
sbb
int
test
jle
movsb
sbb
adc
es
in
add
inc
xchg
arpl
jmp
pop
sbb
jae
shll
idivb
mov
jo
add
mov
stos
fldcw
ja
mov
arpl
popf
jns
daa
inc
andb
dec
iret
je
or
sbb
fcoms
out
mov
emms
test
loope
xchg
lods
cli
or
xchg
stos
sahf
pop
or
jecxz
rolb
add
pop
xchg
int
out
scas
cs
add
mov
mov
in
inc
ficoml
push
xchg
xlat
leave
and
ss
enter
mov
cmp
xchg
hlt
sbb
xchg
lods
and
jmp
fdivrl
gs
and
jno
fistpl
imul
mov
movsl
data16
add
das
sub
sub
ret
mov
pop
or
mov
out
sub
adc
adc
adc
push
nop
enter
mov
xchg
cltd
cmp
mov
imul
cli
loopne
stc
lods
dec
arpl
sti
dec
or
ret
sbb
push
cmpsl
pusha
sbb
ja
cmp
lods
inc
iret
xchg
xchg
pop
mov
xchg
cld
mov
dec
and
adc
mul
clc
xor
mov
sbb
push
push
inc
ds
adc
sbb
imul
xchg
inc
leave
stos
sub
adc
sbb
ret
jmp
pop
popa
mov
movsb
pop
lret
mov
out
lds
dec
jnp
pop
aam
dec
mov
cmp
ret
inc
jo
inc
mov
outsl
sub
das
ret
loop
and
imul
xchg
in
loope
insl
pop
adc
mov
or
out
ja
push
sub
cld
mov
push
cmp
out
lock
push
adc
sub
mov
cmc
sub
xchg
sbb
rcrb
pop
into
dec
rcrb
add
lds
shlb
pop
xchg
lcall
lahf
in
sub
push
or
dec
push
pusha
mov
mov
lahf
pop
jo
mov
inc
and
lods
add
fdivl
pop
insb
jnp
or
and
repnz
out
sub
test
push
aam
xor
shl
lcall
xor
adc
pop
inc
or
and
mov
fildl
testb
inc
xchg
je
mov
cmpsl
iret
pop
push
or
jno
pop
xchg
scas
xchg
shr
or
or
loope
pop
and
aas
loope
stc
push
xchg
dec
xchg
mov
cli
pop
add
add
cwtl
rcrl
lods
lods
mov
out
add
xor
xchg
push
je
lock
pushf
stos
lods
int3
cwtl
adc
push
xchg
pop
and
dec
adc
adc
cmc
or
in
ret
ss
pop
sub
dec
sbb
sahf
and
ljmp
jbe
dec
rcrb
std
sub
jb
dec
mov
pushf
dec
pop
dec
in
jnp
shlb
scas
fdivs
add
adc
cltd
sbb
shl
flds
cwtl
inc
jecxz
xchg
inc
mov
int3
pop
cmp
and
or
or
mov
jmp
pop
and
push
sub
jne
popa
pop
pop
sub
jg
leave
mov
sbb
and
cli
cmp
adc
test
dec
mov
and
xchg
mov
fnstsw
fdivr
mov
dec
jne
cmpsb
mov
mov
test
sbbl
loope
insl
jne
adc
notb
sub
add
call
mov
xchg
inc
movl
xchg
leave
out
ja
nop
lret
lea
push
mov
sub
xor
mov
mov
addr16
jg
icebp
mov
out
jno
lcall
adc
cmc
xchg
subl
adc
lahf
dec
push
int3
out
cltd
cli
adc
xor
loope
cmpsl
test
repz
dec
dec
popa
daa
pop
jns
mov
xchg
out
pusha
inc
cmpsb
jmp
insb
stos
jle
addr16
jle
xor
push
stos
xchg
pop
scas
lea
mov
sub
xor
es
xchg
pop
xor
test
jl
mov
addb
push
sub
push
andl
in
xchg
fstpt
roll
enter
mov
mov
inc
rolb
and
mov
pop
inc
fwait
repnz
mov
stc
mov
mov
add
call
cmp
fucom
roll
or
cmpl
call
mov
mov
jmp
loop
xchg
cmpsl
add
outsb
xor
repnz
iret
fistpll
sahf
cmp
xchg
nop
pop
mov
push
mov
call
fdivs
js
lcall
jbe
push
push
xchg
dec
adc
mov
mov
lock
rorl
imul
push
mov
cli
xor
dec
dec
mov
mov
out
mov
cmpsb
mov
loop
fisttps
mov
faddl
ret
cmp
test
and
pop
sub
pop
mov
mov
shlb
testb
in
shll
inc
adc
loopne
jnp
and
mov
mov
xchg
enter
cmp
sbb
mov
aaa
cmpsl
fwait
lea
add
test
sahf
adc
xlat
out
loope
lds
pop
cmp
mov
mov
mov
dec
xchg
rcrl
popf
xchg
jmp
shrl
nop
pop
cld
test
in
mov
inc
push
cmp
mov
mov
arpl
in
sahf
outsb
test
sarb
clc
push
mov
lret
out
add
dec
cmpsb
rcrb
ja
sti
sbb
mov
les
mov
in
cmp
xchg
and
inc
fs
xor
sahf
cwtl
les
add
enter
add
inc
push
lahf
nop
or
inc
push
repz
dec
mov
bound
test
jmp
cwtl
std
lahf
inc
int
or
mov
ds
orl
outsl
lret
sbb
xlat
mov
or
scas
jns
mov
adc
mov
aam
add
mov
dec
sub
movb
push
cltd
dec
pop
sbb
inc
rclb
jle
fcmovnb
pop
dec
jb
mov
dec
xor
in
sub
call
adc
sub
fdivrl
call
hlt
dec
mov
add
pusha
dec
fnstsw
sub
mov
das
es
sahf
mov
jae
and
add
adc
out
ljmp
jne
cmpb
push
cmp
push
add
out
jmp
sbb
push
jns
mov
or
rolb
lret
and
inc
push
pop
cmc
test
stos
icebp
cwtl
pushf
imul
lea
adc
dec
sbb
sub
in
mov
mov
lock
pop
add
cmp
mov
jnp
das
cmp
ret
cmp
or
jmp
mov
and
push
pop
das
imul
sub
mov
inc
and
mov
dec
dec
insl
xor
cltd
fnstsw
mov
adc
sbb
and
insb
dec
adc
dec
lock
sub
xor
adc
mov
cmpb
mov
sub
shrb
popl
js
aam
ds
push
mulb
dec
sarb
flds
scas
lret
je
mov
and
fdivp
outsb
data16
in
xor
outsb
movsb
jns
int3
test
mov
and
mov
dec
arpl
clc
hlt
sub
fdivl
lock
add
mov
iret
daa
sahf
ljmp
xor
out
sbb
dec
lock
xor
in
gs
dec
and
sub
popa
scas
stos
inc
sub
les
jnp
jp
scas
ss
inc
sarl
and
mov
sub
mov
pop
test
dec
cltd
cmp
aad
ss
int
jle
or
pop
outsl
lret
icebp
outsl
popa
outsb
push
jnp
mov
es
aaa
mov
nop
mov
cmp
xor
mov
imul
ss
add
ljmp
mov
mov
scas
movsl
hlt
adc
sub
in
and
push
test
adc
movsb
enter
ljmp
adc
mov
pop
loope
jle
push
aam
mov
pop
xchg
lcall
cwtl
jecxz
daa
mov
xchg
cmp
sub
pop
pop
adc
out
push
in
aam
bound
packssdw
es
and
cmp
pop
xor
ljmp
and
mov
add
push
dec
cltd
mov
xor
xchg
hlt
mov
subl
push
ljmp
aas
dec
lds
push
test
push
inc
pop
and
pop
jmp
cld
push
sub
es
leave
aam
cmp
fidivs
or
sub
jo
dec
add
nop
sub
push
or
jns
lret
and
test
dec
addl
mov
data16
add
fldenv
sub
mov
jno
xchg
loope
push
js
pop
dec
imulb
mov
cli
xchg
aam
push
imul
xor
cmp
sub
mov
xor
xchg
aas
fwait
mov
add
movsl
push
sub
mov
cmpsl
adc
fldcw
data16
sub
movsl
mov
ss
popa
xchg
xor
into
jno
out
and
inc
hlt
arpl
scas
fs
negb
stos
or
jb
xlat
loopne
lahf
mov
insl
addr16
mull
stc
sti
fldcw
xlat
push
push
fldcw
in
add
pop
bswap
sub
xchg
ljmp
out
cmp
cmp
movsl
jo
subl
fcompl
cmp
xchg
push
rcll
movsl
cs
sahf
pop
push
inc
dec
adc
pop
lods
insl
ret
cmp
hlt
mov
in
lea
sub
call
inc
mov
out
sti
xchg
outsb
pop
add
push
cli
dec
adc
nop
jmp
lock
cwtl
imul
sub
jbe
xchg
adc
lea
mov
stos
gs
loope
jno
mov
in
pusha
ja
lds
lock
push
pop
clc
bound
xor
jo
hlt
addr16
movsb
fnstenv
je
sub
imul
mov
pop
xor
xor
stc
mov
mov
push
push
sahf
cmp
or
jle
sahf
sbbl
shll
sahf
sbb
mov
pusha
dec
mov
daa
or
jg
popa
mov
xchg
dec
pop
push
xchg
insb
pop
flds
jmp
dec
xchg
xchg
std
dec
pop
insl
std
mov
inc
fs
mov
imul
mov
xor
mov
repz
cmp
adc
and
and
sbb
cmp
sbb
insb
outsl
mov
icebp
push
int
lahf
push
lods
mov
rolb
inc
popf
pop
adc
aad
js
pop
mov
sbb
mov
jp
dec
add
cwtl
or
decl
cmc
sti
dec
mov
inc
push
sbb
or
cmp
subb
jmp
inc
sbb
dec
xchg
dec
mov
mov
sbb
pop
mov
cs
hlt
clc
push
sub
dec
ret
inc
ja
repnz
jecxz
cmpsb
hlt
mov
jge
push
outsb
adc
adc
inc
ss
xchg
lret
add
pop
cmp
out
cmc
xchg
dec
inc
inc
insl
test
aas
add
sbb
adc
push
cmp
mov
shrl
xchg
add
imul
pop
leave
data16
rolb
lcall
arpl
out
gs
mov
xchg
adc
or
mov
fwait
and
xchg
push
adcb
out
daa
sbb
fisubrl
pushf
dec
pop
scas
xchg
sti
ds
pop
les
aaa
jne
xchg
lock
xor
nop
xchg
add
loopne
dec
pusha
add
cld
cmp
xor
vfmadd132sd
in
mov
stc
sbb
inc
aaa
adc
test
sti
sub
or
dec
jnp
add
xorl
jle
aas
test
jl
rcll
int
jmp
shll
jmp
cmp
ds
inc
in
dec
push
pusha
jl
push
rorl
into
dec
dec
inc
imul
bound
mov
nop
filds
fwait
lods
out
insb
movlps
fmul
subb
push
jg
push
mov
js
loop
in
adc
lea
pop
xor
sbb
daa
std
js
cmpsl
mov
xchg
mov
in
inc
cmp
rorb
ret
bound
push
cmp
jg
lods
mov
jmp
adc
pop
push
sub
cli
jl
ss
sub
es
cmp
fsubs
jo
mov
mov
dec
lods
cmc
jmp
push
iret
mul
test
jns
iret
mov
push
jmp
and
pop
xlat
and
sbb
lods
pusha
dec
ljmp
cltd
sbb
fildl
mov
ja
into
test
cmp
popf
xchg
or
push
outsb
fwait
scas
in
mov
inc
cltd
mov
rcll
je
fstps
shrl
push
nop
shlb
inc
jl
xchg
push
aas
adc
sub
add
ljmp
in
outsl
mov
je
add
xor
sbb
inc
push
mov
mov
mov
inc
popa
mov
shl
xor
test
scas
xchg
negb
add
cmc
leave
outsl
fmull
lret
movsb
add
scas
add
cltd
hlt
adc
rcr
push
sub
push
jns
sbb
inc
add
out
lods
arpl
mov
jb
je
fdivr
movsb
dec
xor
cmpb
imul
pop
sub
outsb
mov
es
jmp
aas
mov
nop
out
stc
orl
mov
aas
scas
xor
dec
inc
or
ret
fcoms
adc
out
push
sub
loop
lds
or
iret
add
sbb
mov
mov
insl
sub
cmpb
cli
push
xchg
stos
dec
dec
test
stos
hlt
fdivrs
insb
test
fwait
push
mov
jae
pop
adc
sbb
imul
sti
mov
aaa
mov
subl
movsb
jmp
in
xlat
xchg
xor
gs
int3
imul
aad
subb
daa
popa
fmull
mov
insl
mov
and
sub
or
pop
out
rcrl
mov
jo
rcrb
mov
pusha
mov
shrb
push
jge
in
fsubrl
pop
jecxz
dec
sub
je
dec
add
sub
push
inc
pop
ds
outsb
pop
cmp
sti
or
adc
test
push
xchg
lret
mov
inc
or
aaa
gs
push
sbb
xchg
xchg
daa
in
cmove
xor
rcll
xor
dec
push
subb
or
lahf
cmp
insb
jl
jl
xor
cltd
pop
adc
cmp
adc
std
pop
addl
pushl
icebp
int3
sbb
xor
sub
setle
dec
arpl
dec
lgs
mov
sbb
xchg
mov
sbbl
lret
fcompl
scas
in
adc
mov
mov
push
sub
push
popf
mov
push
sub
lods
insb
xchg
daa
add
push
arpl
mov
inc
dec
jns
lods
fstpt
std
add
jno
sbb
or
or
and
sub
repz
mov
or
add
lds
and
add
aas
into
ljmp
insb
movsb
fimull
sub
mov
scas
stos
in
jecxz
lock
ljmp
pushw
add
cltd
pop
dec
out
jg
pusha
mov
jno
icebp
iret
out
ja
mov
xor
xor
cltd
sub
popf
movsb
or
mov
mov
in
outsb
dec
pop
cmpsb
and
and
jnp
scas
inc
jecxz
jns
add
test
lcall
test
imul
jnp
add
and
orb
int
xchg
clc
rolb
lods
hlt
cmp
dec
test
sbb
loop
jae
dec
adc
mov
pop
and
std
andb
add
mov
add
fldl
push
jecxz
xchg
and
movsl
and
not
sbb
fnstcw
repnz
pop
add
xchg
add
or
push
xor
mov
fistpll
pop
daa
dec
or
jecxz
stc
ret
fmul
inc
xchg
mov
add
push
xor
fcomi
jle
repz
in
cmp
into
call
std
in
imul
lock
arpl
xor
mov
xor
popa
test
das
pop
or
repz
jae
test
divb
xor
das
les
adc
jb
sub
insb
pop
arpl
pop
addl
pop
push
jecxz
lret
push
dec
or
popa
add
cli
int
ja
push
mov
xchg
ror
cmp
mov
ss
add
xchg
push
in
incb
out
fistps
adc
outsb
jmp
shlb
aam
add
ds
push
cli
cmpsb
rcr
ret
ret
cmpsl
jp
inc
pop
fucom
into
jae
punpckhdq
push
pusha
ret
subb
popa
jmp
pop
jge
jns
mov
cltd
inc
sub
xor
es
fwait
cmp
inc
adc
xchg
cmp
sbb
mov
xchg
push
pop
es
shl
push
mov
cmp
into
push
or
inc
lcall
fcompl
out
imul
push
in
inc
andb
das
xchg
mov
fnstsw
ja
dec
xor
and
hlt
insb
aad
fimuls
mov
push
and
adc
cs
sub
mov
stc
or
xchg
jge
cmp
inc
cmp
cmpsl
into
repnz
lods
in
pop
pop
jne
adc
es
roll
jne
mov
mov
add
xor
add
and
jp
or
sarl
xchg
push
test
push
jb
rcll
pop
pop
and
dec
sub
sub
xchg
ret
push
xchg
fs
push
das
cmp
data16
fcomi
push
adc
inc
xchg
pop
shl
push
jno
jo
mov
daa
es
cmpsb
xchg
or
out
test
mov
movsl
lret
repz
cltd
dec
cmc
movsb
fistpl
out
in
aad
jmp
loope
mov
adc
fnstsw
jmp
call
sub
and
iret
dec
je
cmpsb
sub
dec
lret
clc
je
cld
ljmp
jnp
test
dec
insb
repz
mov
stos
pop
jge
xor
in
int3
test
sbb
push
rorl
lods
test
bound
sbb
out
dec
jo
fistpl
out
repz
mov
cli
push
lock
ds
inc
cmpsb
insb
xor
es
push
aas
sub
jle
test
jmp
or
loopne
cmpb
pop
xor
pop
add
pop
addr16
dec
ss
xchg
cmpsl
or
and
add
mov
adc
push
xor
enter
sub
cltd
push
mov
popa
arpl
hlt
jp
outsl
fadds
inc
push
clc
sub
sub
dec
inc
pop
call
lock
push
ja
nop
imul
add
add
icebp
adc
in
movsb
pop
jl
inc
pop
shrl
daa
mov
pushf
iret
xchg
fs
mov
xor
sub
std
sti
stc
jmp
mov
iret
inc
jae
out
sub
fnsetpm(287
loope
test
ret
loopne
cmp
xchg
cmpsl
xchg
pop
pop
sti
jb
push
repnz
cmp
pop
in
int3
mov
mov
cmp
outsl
lea
xchg
test
and
and
jg
sub
or
mov
add
lods
mov
fstpl
movsb
subb
out
xlat
xchg
mov
dec
xor
cmpsb
cwtl
xlat
in
enter
das
pop
or
cltd
or
and
loope
mov
pop
ret
bound
push
sub
cmp
or
pop
or
adc
xchg
rolb
and
loopne
pop
nop
out
add
pop
ss
outsl
ret
mov
ret
lods
sbb
or
clc
aam
fstpt
pop
mov
cmpb
lahf
out
cmp
push
test
and
mov
fstpl
inc
repnz
sbb
mov
xchg
adc
test
ds
pop
lcall
jg
aaa
dec
ret
jo
test
sub
mov
int
out
or
movsb
stc
in
pop
lods
ljmp
shl
add
insl
sub
lods
xor
xor
add
mov
mov
in
mov
cld
popa
call
or
les
negb
push
adc
lret
add
push
test
pop
mov
mov
cs
mov
sbb
dec
cmp
loopne
jl
jp
hlt
lcall
add
ljmp
rcrb
xor
sti
ffree
in
dec
dec
push
mov
mov
imul
xchg
jg
or
mov
or
ja
dec
pop
xchg
js
and
add
fcmove
push
addr16
mov
rcrb
inc
sti
sub
mov
test
jp
push
mov
dec
scas
sbb
cli
mov
jbe
frstor
cmp
lods
push
bound
test
fdiv
mov
addr16
rcrb
jo
sahf
sarl
push
fwait
dec
xor
xchg
insb
xchg
or
std
mov
es
mov
gs
sbb
mov
xchg
arpl
or
push
inc
mov
sbb
cwtl
sbb
xor
jno
daa
inc
in
jg
push
das
inc
or
cmp
pushf
mov
mov
sti
idivb
les
mov
push
aam
clc
andl
dec
movsb
aam
pushl
mov
mov
and
pushf
push
jmp
fbstp
xor
in
int3
insb
pop
mov
sbb
cmp
idivl
inc
push
ja
adc
aam
push
imul
xor
cli
cmp
sbb
push
aad
out
dec
push
mov
cld
mov
mov
inc
xchg
mov
test
es
dec
dec
shrb
lock
dec
or
add
jge
clc
jns
jne
dec
pop
cmp
push
cli
sub
cmp
movsl
inc
data16
pop
pop
ficoml
lret
sbb
mov
pop
pop
push
mov
fsubrl
push
mov
es
das
xor
dec
xchg
mov
dec
push
mov
fisubl
stos
xor
test
mov
jmp
out
mov
addr16
dec
dec
cmp
jmp
xchg
nop
dec
clc
in
sub
adc
add
push
push
push
add
cmp
dec
push
xchg
sub
or
adc
in
jbe
bound
push
js
addl
or
jge
fwait
stos
sub
mov
jecxz
push
xchg
dec
cmp
push
jp
mov
inc
mov
adc
pop
out
pop
jg
imul
pop
cmpsl
sub
lds
lcall
stc
adc
and
fwait
dec
repz
push
call
jl
loop
mov
pop
mov
sub
orl
ja
cmp
cli
xchg
inc
jbe
pushf
cs
push
mov
push
in
popl
out
fnstenv
sbb
dec
inc
sub
jg
xchg
daa
jmp
mov
paddb
movsl
loope
mov
incb
sahf
faddp
rol
je
sbb
xchg
add
rcrb
hlt
adc
out
es
add
xlat
cmp
mov
mov
add
rcll
nop
xor
dec
movsl
cmp
fnstenv
push
clc
pushf
roll
dec
fadd
xor
lahf
ja
add
pop
mov
add
push
lds
cmpsl
loop
stos
xchg
sub
jp
out
enter
out
dec
lock
sbb
or
test
fsubrs
and
jns
sub
in
insb
sub
or
fwait
add
push
and
dec
cmp
fdiv
cmpsl
pushf
mov
xchg
imul
dec
movsb
dec
aad
cwtl
xlat
and
xor
sub
test
dec
adc
in
mov
mov
aad
push
add
jge
jmp
outsb
jb
out
push
fists
dec
jp
inc
rcl
mov
jnp
jae
shll
icebp
mov
push
jns
lahf
pop
lods
ret
adc
cmp
in
or
rcll
movsl
inc
mov
mov
sbb
inc
or
and
add
loop
add
xchg
sbb
and
dec
mov
mov
push
push
into
int3
scas
lret
mov
mov
cmp
lea
les
movsl
sub
movsb
or
sahf
xor
cmp
test
ja
cmp
add
dec
aaa
imul
inc
cmp
push
xor
std
ret
nop
repz
lea
mov
sbb
cld
dec
shrl
jge
and
test
test
es
fdivrs
add
test
cmpps
pop
xor
dec
jl
enter
mov
bound
orl
cmpsl
or
sbb
push
inc
rolb
aad
xlat
jae
test
xchg
ret
cmpl
xor
out
stc
movsl
xor
gs
lret
push
rep
inc
stos
xchg
sbb
mov
in
push
int3
mov
adc
ret
sti
push
or
xor
popf
push
xchg
cmc
sub
xchg
fmuls
inc
rolb
sub
pushl
push
xchg
in
cmp
in
mov
mov
sbb
bound
js
push
rolb
mov
packssdw
pop
in
pop
add
fbld
mov
dec
push
iret
and
xchg
test
jae
lcall
jne
push
addl
popa
das
and
pop
pop
adc
repz
lret
and
inc
mov
iret
inc
loop
xor
inc
adc
enter
imul
add
xor
adc
adc
cltd
pop
pop
mov
mov
or
mov
subl
in
jg
ret
sbb
dec
mov
jns
jmp
and
cmp
dec
mov
shrl
xchg
out
mov
jns
add
pusha
mov
test
cmp
daa
sahf
scas
out
insb
jle
testb
lods
mov
push
int3
mov
scas
jmp
push
xor
inc
loop
push
jb
dec
inc
outsl
gs
inc
inc
lret
insb
pop
orl
cmc
in
sbb
dec
test
insb
pop
xor
aam
cmp
arpl
enter
and
jns
js
bound
dec
mov
xchg
mov
or
cmp
push
jae
in
imul
mov
clc
mov
jge
add
mov
adc
mov
adc
popf
outsl
cs
sub
push
sub
jle
inc
lods
leave
xor
pushf
out
fidivrs
mov
fiaddl
push
fisttpll
push
push
add
idiv
pushf
push
mov
outsl
cmc
jle
int
dec
adc
leave
jb
push
mov
mov
bound
jb
out
int3
in
lcall
fldenv
xor
or
or
das
xor
lods
mov
daa
push
sub
lea
xor
inc
in
mov
bound
sub
popf
mov
mov
pop
cld
outsb
ret
sbb
stc
arpl
fwait
dec
xor
pop
imulb
push
cmpsl
sahf
pop
push
sbb
jns
dec
out
fbld
hlt
mov
clc
jne
lock
cmp
popf
pop
mov
or
daa
mov
pop
cltd
jbe
cmp
lock
push
push
cwtl
mov
aam
faddp
mov
aad
mov
jnp
mov
fs
iret
enter
pop
push
mov
add
in
pop
push
mov
mov
stos
arpl
sub
rcl
stc
mov
insb
mov
js
imul
js
pusha
mov
les
loop
or
lods
call
lods
mov
in
out
loop
inc
repnz
fstl
loopne
pushf
xor
dec
adc
jle
cltd
in
inc
aaa
cli
jge
in
or
mov
inc
or
addl
push
sbb
push
fsubr
xchg
adcb
xchg
pop
shlb
rcl
sbb
inc
aaa
inc
xchg
mov
or
add
shll
addr16
xchg
pop
mov
aad
mov
xor
popa
rcrb
cmp
clc
jecxz
cmp
aad
jp
lahf
filds
mov
fistpll
pop
rol
push
jle
sub
mov
data16
rclb
gs
cltd
fsubl
test
add
mov
cmpl
pop
test
mov
cmp
nop
in
adc
jge
scas
adc
nop
pop
sub
push
push
ret
sbb
or
fsubl
cmp
pop
jne
fdivr
and
bound
push
jle
aad
xlat
enter
imul
mov
sarb
cs
xor
xchg
test
and
fcompl
movsb
dec
or
inc
rolb
insb
inc
jge
xchg
fsqrt
ljmp
ret
add
ret
dec
bound
insb
orb
sbbb
bound
iret
rorb
fbld
dec
xor
pop
lea
jecxz
add
out
in
insl
cmpsl
icebp
push
icebp
mov
lods
add
pop
fwait
lods
push
sbb
adc
fsubs
testb
scas
fdivr
mov
and
push
xchg
xchg
hlt
gs
mov
lds
jno
idivb
mov
xor
pop
in
adc
sbb
push
test
mov
mov
mov
sbb
sub
xor
call
testl
cmp
out
cmp
mov
daa
inc
mov
dec
shrl
dec
mov
pop
pop
dec
rcr
movsb
xchg
popl
push
pop
inc
sub
cmp
push
xchg
push
popa
sbb
sub
xchg
daa
sbb
loop
outsb
jg
jg
dec
out
rclb
je
mov
fs
sub
loope
inc
jge
jp
push
in
popl
aam
aam
dec
mov
add
jmp
xor
cmpsb
leave
rol
or
jp
out
lret
out
outsb
jbe
imul
pop
shl
test
sub
andl
adc
ja
filds
stos
in
mov
push
loop
sbb
cmpsb
add
push
push
out
push
cmpsb
mov
not
inc
and
sub
mov
xor
xchg
jno
inc
jp
dec
adc
sub
ret
xchg
into
cmp
mov
mov
cmp
imul
add
loopne
lahf
fsubrl
aam
inc
dec
xchg
movsl
rcrl
je
out
testb
mov
adcl
fistl
rcll
or
hlt
fidivl
cmp
push
lods
mov
add
movsl
inc
pusha
sbb
test
mov
stos
or
dec
es
xchg
push
pop
mov
fcmovnbe
hlt
mov
fidivs
pop
in
in
aad
inc
and
divb
decb
loop
and
push
jmp
push
cwtl
jl
inc
movsl
popa
jmp
mov
cmp
in
cmpsl
mov
push
stc
pop
add
or
xchg
sbb
sbb
push
and
pop
pop
or
jbe
ret
or
sub
push
mov
sbb
inc
les
and
push
aas
push
shll
insb
cmp
push
lret
lock
shrb
stos
dec
sub
adc
negb
sbb
stos
push
sbb
mov
sub
push
cmpsl
hlt
in
ret
rol
adc
test
out
mov
int
cmpl
cmp
pop
in
add
fldl
and
call
pop
ja
dec
adc
mov
andb
add
lahf
popa
cmp
lea
pavgw
js
sbb
push
mov
xchg
bound
mov
adc
rorb
sti
xchg
popa
xchg
jbe
les
jecxz
dec
push
jg
ja
mov
arpl
cli
jge
data16
push
sbb
push
xor
pop
dec
inc
sarb
sahf
lea
out
cmp
nop
imul
pop
jge
movb
mov
pop
int3
jns
lcall
mov
jle
stos
movsl
arpl
lods
xchg
xchg
push
mov
nop
mov
add
imul
aas
imul
setae
mov
pop
xchg
repz
cmp
mov
xchg
lret
orb
daa
adc
enter
js
insl
ret
and
call
rolb
add
sub
cs
lods
push
movsw
outsb
cmp
insl
stos
imul
insl
mov
mov
cmpl
mov
popa
push
pushf
outsl
add
mov
out
mov
push
lea
stos
fmull
icebp
insb
add
xlat
loope
jb
aaa
lahf
mov
scas
xchg
es
loope
sti
sbb
mov
sub
ss
rcrb
dec
in
or
mov
push
pop
inc
inc
cwtl
mov
fimuls
or
jo
adc
xchg
jo
fldt
sarl
dec
insb
sarb
or
or
inc
and
ficompl
ljmp
lcall
adc
xor
in
dec
bound
jne
push
emms
xor
push
cmp
in
fwait
clc
pop
sbbl
jno
mov
and
adcl
lea
js
adc
insb
in
call
pop
cmovg
out
leavew
jl
test
sub
sbb
mov
cmc
push
push
lcall
subl
mov
add
addr16
js
test
cmp
rcrb
push
push
loopne
mov
add
add
ljmp
jge
xchg
push
pusha
fsubrl
gs
sahf
ret
pop
hlt
dec
out
pusha
and
xchg
rorl
xor
sahf
testb
xor
aam
xchg
pop
sub
fstl
test
or
xlat
in
mov
and
loope
imul
scas
or
jns
pop
test
mov
add
jb
xor
repnz
cld
push
into
mov
mov
loop
cmp
data16
aam
pushf
inc
push
dec
stos
and
enter
jo
lds
pop
push
sbb
mov
out
add
xchg
ds
ret
lret
or
dec
mov
stc
popa
and
pop
or
cmpsb
repnz
repnz
pop
jns
movsl
adc
fwait
and
adc
lds
mov
fcompl
jmp
test
add
fsubs
cmp
cli
hlt
inc
mov
lds
mov
adc
xor
faddl
push
or
jae
mov
iret
mov
pop
ja
aad
cli
in
adc
and
mov
cmp
cmp
jbe
and
jne
dec
push
pop
add
popf
dec
test
xlat
loope
mov
mov
jl
mov
pop
addl
cmp
gs
inc
inc
inc
stos
mov
and
lahf
jne
clc
mov
mov
arpl
fimuls
push
adc
xchg
and
mov
jl
fcomps
mov
shrl
pusha
sub
daa
addr16
mov
add
fldl
xchg
cmpb
jmp
mov
add
mov
sub
jle
pusha
sbb
ljmp
scas
pop
sbb
mov
ljmp
push
add
add
pop
and
cmp
jecxz
jmp
mov
sbb
mov
outsb
or
add
pop
aas
mov
mov
repnz
mov
repz
jge
adc
jmp
dec
enter
or
pusha
cmc
cmp
js
int3
fisttpl
fisubrs
rcrl
pop
cltd
repz
fs
leave
adc
icebp
adc
jmp
push
subl
orl
into
jmp
imul
int
sbb
fists
mov
sahf
mov
xchg
popa
adcl
lds
add
shl
dec
rcll
test
inc
xor
sti
pop
movsl
repz
shrl
jo
stos
jnp
fiadds
pop
lret
fisubrl
mov
jmp
mov
add
lret
leave
xor
push
int3
addr16
pop
pop
arpl
and
or
xchg
and
stos
int3
jae
repnz
adc
int3
test
pusha
test
dec
push
rcrl
dec
cwtl
jae
std
xchg
iret
mov
fidivrs
mov
push
in
insl
dec
sub
dec
inc
sub
rorl
xlat
test
roll
mov
enter
loopne
lcall
inc
dec
dec
outsb
jno
out
adc
push
iret
rcrb
je
add
pop
std
movsl
fwait
dec
xor
stos
ret
imul
sbbl
mov
mov
inc
gs
movsl
xchg
sub
fisttpll
jns
das
imul
sub
sub
jecxz
mov
jbe
mov
out
mov
pop
repz
pop
xor
jge
and
movsb
pop
decl
stos
je
sub
aam
je
pop
sti
clc
mov
retw
sub
mov
push
cld
mov
shlb
cmpsb
push
adc
adcb
sub
lds
or
fistl
mov
mov
lods
sub
xchg
inc
pop
mov
cli
jmp
dec
dec
dec
cmp
pop
dec
mov
lcall
xchg
cmp
and
ds
rcll
aas
xorb
into
lods
rcrb
roll
rcrl
js
xchg
xchg
jo
inc
iret
das
mov
xor
clc
sub
xor
roll
sbbl
mov
ss
cmp
aaa
xchg
pop
cs
je
xchg
fwait
xor
pop
insb
jno
scas
push
aaa
add
int
push
cld
or
pop
shrl
movsl
cs
jbe
scas
and
add
or
insl
or
pop
movlps
adc
sti
adc
jle
pusha
out
push
int
fcomps
jb
lods
shlb
sub
sbb
fdiv
mov
xchg
leave
dec
dec
cmp
xor
jae
pop
insb
and
adc
divl
in
sub
dec
cli
fld
aam
inc
cmp
cmp
loopne
mov
pushl
adc
cmp
fs
mov
xlat
subl
sub
ljmp
sub
pop
fwait
push
inc
push
mov
vpshldd
cvtdq2ps
xlat
jmp
test
jo
sbb
pop
pop
jno
ja
xchg
mov
subb
push
sbb
mov
js
popf
std
pop
outsb
push
pop
adc
es
jb
adc
gs
xchg
icebp
ret
jae
out
cs
out
pop
aas
dec
sub
loope
andl
jnp
xchg
and
mov
sarb
cmpsl
jnp
icebp
cmp
sbb
rcrl
cwtl
cmp
sub
jb
lods
dec
jmp
push
jecxz
and
sbb
adc
in
xor
xchg
iret
lods
popa
sti
adc
js
add
jns
outsl
push
sub
mov
test
clc
icebp
bound
sbb
imul
addb
inc
mov
pop
stos
arpl
clc
add
lods
cltd
mov
jl
mov
jge
jge
fistpl
xlat
cmpsb
xchg
lods
adc
aas
ds
inc
sub
adc
std
push
je
jno
dec
aaa
or
das
lods
ss
jae,pn
in
das
test
rcl
adc
xchg
addr16
aam
cmp
pusha
mov
iret
lahf
and
xlat
scas
and
fwait
dec
orl
sub
aad
paddw
pop
sub
pop
mov
mov
sub
add
gs
fisttpll
fldl2e
sub
scas
pop
popa
movsb
xor
dec
xlat
mov
outsb
adc
scas
mov
and
mov
scas
or
jns
popa
jnp
sub
pushf
jl
dec
dec
sbb
adc
div
test
mov
cli
imul
xlat
mull
aas
es
cmp
inc
mov
aad
mov
pop
mov
mov
mov
cmp
adc
push
jne
stos
and
arpl
inc
aaa
in
out
jmp
fisubs
mov
xor
adc
mov
jecxz
pop
inc
jmp
stos
jmp
ljmp
pop
test
test
fsubrl
sbb
push
mov
inc
push
jp
and
cs
sbb
int
movsl
je
push
out
or
and
mov
movsb
or
pop
hlt
xor
xchg
ljmp
out
jnp
in
movsb
mov
repnz
outsb
ret
pop
sub
addr16
inc
dec
sub
mov
mov
insb
test
inc
add
xchg
mov
insl
jecxz
sbb
jp
int3
addl
out
xchg
cmp
mov
test
mov
jo
lods
addr16
fimull
mov
xor
mov
mov
lock
icebp
stos
hlt
sbb
insl
adc
bound
xor
dec
mov
loope
negl
test
insl
ret
or
jmp
push
sub
pushf
mov
ret
bound
mov
xor
iret
xchg
cwtl
lods
xchg
fisttpl
scas
jns
fstpl
inc
pop
pop
cld
inc
or
cli
aaa
mov
leave
nop
mov
mov
pusha
cmpsl
popf
test
mov
mov
mov
and
fs
ja
std
jmp
jmp
std
add
lds
lret
data16
push
push
inc
jmp
in
cmpb
mov
sbb
sahf
xor
dec
cmpl
int
iret
dec
cwtl
movsl
dec
hlt
vpcmov
aam
gs
pop
xchg
cmp
dec
or
mov
test
pop
repz
cmp
adc
insl
inc
les
mov
into
mov
mov
cwtl
jle
jge
loopne
arpl
les
xchg
or
popf
xchg
sarb
sbb
cmp
jmp
dec
sbb
or
xchg
add
inc
fcompl
dec
cld
xchg
movsl
outsl
mov
mov
inc
mov
and
in
mov
pop
xorl
notl
dec
mov
les
scas
orl
mov
call
pop
test
push
shll
xchg
and
xorb
es
inc
dec
faddl
test
mov
sub
jecxz
repnz
pop
iret
outsl
jns
ljmp
mov
test
cli
addr16
inc
jecxz
xor
inc
out
xlat
and
jns
sahf
add
in
bound
loope
cld
push
dec
cmpsb
fsubr
push
pop
cmc
lods
nop
push
push
add
add
mov
fdiv
out
jo
insb
inc
sub
ret
or
mov
ficompl
push
fs
in
mov
or
cmp
call
jb
mov
pop
sub
jb
outsl
fimuls
xor
cmp
je
mov
jno
mov
xor
jecxz
repnz
es
data16
push
mov
mov
sbb
fsts
mov
pop
cld
pop
or
lds
iret
jmp
int
test
push
and
dec
js,pt
xlat
mov
aas
jl
mov
jge
scas
cmpsl
out
fucomi
jb
bound
mov
in
ret
inc
xor
push
inc
and
lods
inc
dec
push
nop
mov
push
adc
stos
in
scas
add
andb
mov
sub
sbb
mov
repnz
xlat
cmpsl
ss
xor
js
mov
outsl
aas
mov
fstpl
dec
out
sbb
enter
cs
iret
mov
pushl
pop
loop
xchg
mov
sbb
jmp
fcmovbe
jno
ret
call
mov
mov
or
add
loopne
mov
mov
sub
sbb
jns
ljmp
cli
push
sbb
frstor
je
xchg
push
sti
mov
sub
out
inc
imul
sbb
bound
loope
into
ret
and
sahf
pop
iret
sti
enter
jle
and
adc
cmp
in
out
fistl
fwait
ds
mov
lret
in
iret
leave
nop
jne,pn
cs
jmp
cwtl
push
xchg
gs
mov
dec
lea
jge
loope
mov
xlat
mov
insl
mov
mov
or
dec
push
adc
xchg
lds
ljmp
ss
sarl
sbb
cmp
or
push
imul
decb
shrl
xchg
fcmovnu
jle
jecxz
insb
adc
cmp
cmpsb
mov
cmp
xchg
push
push
xor
into
inc
in
lret
or
inc
or
and
mov
mov
cwtl
or
xchg
bound
rcl
jp
xor
dec
inc
pop
mov
xchg
cltd
out
add
sbbb
mov
pop
inc
sub
push
sahf
add
loopne
dec
adc
sub
mov
mov
das
xchg
and
ljmp
mov
adc
cs
pop
or
sti
or
pop
fidivrl
dec
fistpll
or
jns
in
cmp
cwtl
lock
xchg
adc
or
cmp
xor
fwait
ljmp
and
gs
cmc
movb
sbb
push
ja
or
sahf
jecxz
lods
xchg
xchg
test
pop
or
leave
jle
stos
pop
pop
ret
lea
jp
iret
xor
pop
in
out
test
or
and
push
and
mov
and
sub
cmp
imul
ret
sbb
lahf
mov
mov
pop
ret
xchg
cmp
jmp
push
push
xor
orb
mov
ljmp
fwait
bound
mov
pop
sar
aam
pop
rcr
stc
jecxz
movq
or
ljmp
inc
pop
lret
push
jns
movsb
pusha
mov
icebp
scas
mov
pop
dec
sub
lock
aam
add
imul
movsl
sub
xchg
and
test
mov
pusha
xchg
fidivrs
pushf
out
or
cmc
pop
push
sub
std
xabort
add
bound
cmpl
mov
push
jg
scas
jg
pop
or
into
leave
nop
mov
addr16
out
push
mov
lahf
shll
jne
xchg
iret
call
jmp
scas
dec
in
add
fdivrs
scas
jb
cld
cmp
mov
repnz
scas
mov
testl
popf
cmp
adc
inc
into
push
push
dec
in
push
shlb
jae
gs
ficomps
movb
cmp
fcmovbe
dec
nop
out
popa
aad
out
dec
and
pop
frstor
xchg
add
sbb
es
mov
mov
movsl
insl
mov
psrad
sbb
cmp
cmp
mov
fwait
jg
push
pop
and
and
mov
lods
imul
xor
jg
stos
pop
mov
sub
jmp
jmp
sub
or
sub
mov
mov
sbb
test
pop
push
xor
aas
std
jge
lock
cmp
pop
jmp
fs
fsubs
fwait
xchg
jmp
push
xchg
leave
call
ja
scas
ret
jno
in
adc
incb
mov
or
jg
cmc
lods
dec
lret
push
js
rcll
push
push
mov
jo
jl
adc
and
sarb
repz
pop
pop
add
ret
aam
mov
cmp
es
add
inc
test
lahf
push
xchg
add
dec
pop
ljmp
ljmp
xchg
or
push
push
pop
icebp
adc
adc
ss
inc
xchg
repz
or
mov
inc
js
xor
cmp
jb
inc
imul
lock
push
push
xor
ficoml
xor
loop
push
cmp
adc
mov
ja
test
pusha
cli
inc
test
sbb
cmpsl
push
pop
rclb
add
jne
sbb
sahf
push
add
xchg
xor
rcl
lods
into
cld
pop
ret
and
pop
lahf
pop
xchg
addr16
cmp
jbe
sub
lcall
jp
mov
mov
es
mov
sbb
jno
in
mov
add
mov
inc
imul
pop
popl
loopne
sub
mov
mov
pop
inc
dec
loopne
stos
orl
sti
add
int
imul
into
lcall
ljmp
mov
mov
dec
loope
loop
hlt
loop
cli
push
shll
int
cmpsl
js,pn
mov
or
cmc
xor
popa
sub
pop
push
sbb
in
lret
insb
je
pop
js
aad
lret
jnp
call
sub
out
hlt
lea
xchg
fs
ficoml
mov
call
adc
pshufw
aad
add
inc
cmp
cmp
icebp
icebp
xor
or
jp
xor
daa
imul
or
pop
mov
jp
cmp
imul
sub
test
jecxz
mov
leave
mov
fsubr
les
push
or
mov
gs
inc
lods
and
subl
dec
das
or
add
pusha
stos
mov
push
jmp
shlb
aad
sahf
into
loope
ficompl
push
dec
mov
stos
insl
jmp
shlb
xor
push
enter
test
lahf
js
mov
jo
js
pop
adc
sti
adc
popa
dec
dec
lock
inc
pop
sbb
inc
sub
jmp
mov
fdivrs
pop
int3
in
mov
shrb
hlt
out
adc
xor
loop
mov
mov
or
test
imul
ss
mov
adc
out
push
mov
sbb
dec
jno
xchg
mov
push
cltd
push
shlb
sub
out
jnp
lds
dec
mov
xchg
clc
mov
pusha
ljmp
data16
xor
data16
xor
cmp
neg
insl
lahf
cmpsb
pusha
ja
adc
adc
adc
ss
cmpsb
or
pop
movsb
mov
xchg
xchg
cmpsl
aad
aam
data16
mov
sbb
filds
clc
bound
mov
sub
mov
cmp
gs
mov
and
jle
pop
insl
dec
sbb
out
jno
mov
mov
mov
fwait
or
mov
fcomip
stc
push
jne
pop
mov
jp
sub
cmovo
sbb
das
jb
ds
xchg
popa
es
mov
das
cli
xchg
insb
mov
loop
fisubrs
data16
sahf
inc
xorl
and
aaa
mov
xor
lds
sbbl
inc
dec
mov
daa
xchg
jbe
jno
cmp
call
xchg
scas
push
popf
std
std
fld
dec
jmp
lret
faddl
jmp
push
lock
cltd
push
and
sahf
lret
add
adc
jno
jne
call
jns
xchg
push
or
fidivs
push
mov
xchg
lock
cmp
mov
iret
push
add
movsl
and
pop
xchg
cmp
push
pushf
lods
into
sub
push
pushf
push
dec
test
push
ret
stc
jne
mov
inc
push
jge
and
dec
push
mov
dec
sbb
cmp
ret
insl
mov
icebp
pop
test
push
mov
or
popf
mov
int3
mov
adc
enter
sahf
fildll
or
or
xchg
bound
sub
adc
xchg
cmp
mov
xor
pop
dec
adc
xchg
xchg
mov
dec
inc
lds
ja
sarb
pop
jg,pt
jno
movsb
dec
bound
jno
xchg
fs
popa
icebp
adc
jbe
stos
adc
xchg
sbb
pop
and
xor
pop
aam
cmc
ret
lea
add
pusha
push
bswap
or
imul
imul
shlb
or
pop
push
lock
inc
in
pop
bound
sahf
loopne
mov
pushf
pop
sahf
lods
test
fs
mov
inc
cmpb
lcall
jo
dec
cli
xor
xor
out
mov
inc
push
and
xlat
shlb
std
xlat
or
pushf
mov
in
mov
int3
mov
sbb
and
cmpsl
lret
dec
inc
adc
sbb
icebp
adc
and
insl
pop
int3
rolb
xchg
or
in
xor
push
imul
inc
xor
pop
call
or
popa
out
js
push
ret
or
mov
sub
fldz
push
sarl
jo
js
fcomps
stos
addl
add
mov
add
pop
dec
out
fsubl
mov
ret
jge
aam
movsl
mov
push
lahf
jecxz
adc
and
mov
sbb
sub
xchg
add
jb
clc
and
fmuls
cmp
cmpsb
fildl
or
push
jns
test
hlt
cmpsl
sbb
in
xor
hlt
int
mov
loope
stc
push
mov
and
add
fnstsw
mov
mov
mov
adc
mov
jmp
test
and
sub
fldt
or
or
ljmp
lret
sub
push
cmc
mov
cmp
mov
rorl
ret
test
out
xor
jno
arpl
cmpsl
xor
push
das
mov
mov
pop
ljmp
xor
fs
lods
dec
xchg
pop
jnp
imul
push
or
jno
test
jb
fildll
xchg
stc
adc
test
add
inc
bound
aaa
inc
sub
push
xchg
sub
mov
mov
jo
popf
out
sbb
out
sub
cmp
hlt
aad
cld
adc
dec
outsb
and
mov
sbb
pop
push
jns
jge
shlb
orb
mov
cmp
in
jnp
aad
cmp
cwtl
repnz
insl
outsb
addl
xchg
adc
pop
xor
mov
and
call
xchg
aad
pop
xchg
sub
cmc
xchg
cld
lret
add
mov
jge
pop
cmc
xchg
sahf
inc
inc
push
ret
or
cwtl
shll
push
or
xchg
pop
popl
or
dec
test
add
hlt
push
fnstsw
inc
mov
in
mov
movlps
leave
push
fstpt
rol
shll
sbb
mov
adc
push
sbb
subb
mov
sub
sbb
sbb
push
mov
int3
aas
adc
out
xchg
inc
jl
mov
negb
jbe
lret
inc
out
push
and
xor
mov
call
sahf
es
inc
add
mov
inc
jg
cmp
clc
ss
push
sub
add
pop
xor
inc
jae
cmc
popa
sar
test
cs
push
int3
test
sub
leave
sbb
mov
shrl
push
aas
outsl
roll
int
hlt
movsl
jle
and
out
test
add
das
mov
inc
xchg
mov
add
push
sti
test
imul
repz
enter
add
dec
pop
cmc
pop
mov
add
xchg
test
out
jo
cmp
xchg
lahf
mov
mov
orl
stc
cmp
dec
loop,pn
and
or
jmp
pop
test
iret
filds
in
mov
clc
sahf
xchg
jbe
cli
xchg
shld
mov
push
out
insl
ljmp
imul
cwtl
shrl
mov
cmp
xor
or
movsb
pop
mov
aaa
mov
jns
adc
fidivrl
inc
test
push
jb
dec
loop
sbb
nop
sub
inc
xchg
int
mov
jmp
dec
popf
jecxz
xor
mov
pop
and
push
popa
jae
fdivs
add
test
addr16
mov
and
adc
int3
cli
fstpl
push
sub
cld
mov
aad
jmp
and
push
cmp
lods
sahf
mov
rcrb
out
xchg
dec
dec
movsb
mov
loop
sub
pop
bound
mov
jb
mov
ljmp
mov
pop
loop
mov
cli
sbb
lods
sub
push
les
aad
lret
into
pop
lret
stc
stc
xor
fcompl
cmpsb
aad
rcrl
push
jmp
insb
aam
test
lds
mov
jb
mov
arpl
popa
rcrl
xor
cmc
out
push
inc
int3
dec
ficoml
cld
sub
adc
loopne
ja
mov
sub
pop
sub
mov
rcrl
sbb
inc
dec
and
sub
push
outsl
sbb
xchg
cmp
mov
loopne
cld
dec
sbb
or
lret
stos
xchg
loopne
in
mov
inc
icebp
xchg
push
dec
push
out
or
jmp
ja
jns
sbb
popa
add
and
adcb
out
cld
lods
ficoml
push
sub
dec
xor
roll
test
adc
mov
dec
jle
jmp
cmp
in
fnsave
fs
pop
adc
mov
mov
inc
in
push
ret
sarb
test
and
sbb
cmp
testl
add
fs
pop
cmp
int
sbb
sub
push
push
cltd
or
ss
in
dec
scas
bound
shrl
dec
cmp
lret
test
inc
xchg
or
push
popa
xor
dec
test
int
mov
lock
mov
hlt
inc
xor
jl
mov
mov
fs
cmc
inc
add
mov
xor
fwait
cltd
addl
outsl
cmp
xchg
or
into
sbb
sbb
das
push
js
add
pop
addr16
xchg
mov
jp
out
aad
outsb
pop
mov
dec
mov
xor
jno
je
and
jnp
inc
aad
mov
das
test
gs
cmpsb
mov
pop
popa
fldt
out
pop
out
mov
test
mov
lea
ja
fistpl
int
xor
popa
arpl
push
jle
dec
push
xchg
xor
xchg
mov
dec
and
out
xchg
mov
test
orl
push
pop
push
in
outsb
mov
adc
hlt
fisubs
in
pop
mov
and
mov
dec
enter
xor
xchg
insb
mov
stos
test
jle
and
xchg
stos
sbb
out
roll
cli
xorb
popa
jns
pop
js
push
ret
jne
negl
por
lods
clc
jbe
push
fs
out
movsl
push
inc
xchg
pop
lods
mov
fst
data16
cmc
mov
incl
xchg
gs
arpl
cli
dec
add
and
xchg
mov
lretw
pop
push
xor
testl
pop
jns
scas
mov
inc
adc
dec
rcll
and
out
push
scas
jge
fistl
lds
or
rcr
std
mov
mov
jae
rcr
inc
jbe
jbe
nop
sbb
in
outsl
pop
adc
mov
xchg
pop
fidivrl
je
es
outsb
dec
inc
mov
mov
mov
xchg
jecxz
mov
fdivs
jg
inc
shr
jmp
add
ss
adc
cmc
jne
push
jne
repz
fwait
arpl
mov
jae
lods
or
xor
mov
pushf
lret
out
sbb
sub
xchg
ret
or
stos
dec
movsb
cmp
inc
scas
inc
dec
push
movsb
add
mov
les
sub
addr16
xor
pop
sbb
or
insl
mov
cmpsb
push
cmc
mov
sbb
inc
cmpsb
out
jnp
stos
insl
and
cltd
stos
jp
movsb
mov
sub
mov
fldcw
mov
xor
push
xchg
push
and
ficomps
sbb
or
push
fisubl
mov
in
out
flds
addr16
or
jg
nop
js
jnp
dec
and
sub
insb
sub
rorb
jnp
lods
cmp
dec
sub
mov
imul
call
xlat
lods
jmp
push
dec
or
lea
fs
fwait
mov
mov
scas
adc
cltd
jg
test
mov
ja
adc
rdtsc
jl
sahf
scas
scas
jmp
js
or
sub
inc
and
xor
mov
or
dec
out
sub
pop
data16
add
outsb
inc
mov
push
out
adc
mov
daa
jns
add
mov
xor
or
imul
adc
loopne
pop
sub
sub
fbld
sti
and
xor
cmp
dec
cmp
mov
neg
cmp
imul
lret
icebp
cmp
in
shrl
ds
popa
test
push
ret
movsl
testl
pop
aas
pusha
or
in
pop
aas
mov
fsub
xchg
jl
mov
mov
enter
push
repnz
out
and
sbb
sub
mov
call
push
and
or
sub
incl
adcl
fidivrl
mov
or
pop
inc
add
cmp
cmc
adc
mov
dec
pop
xor
push
sub
ds
in
lds
test
push
loopne
lds
out
aas
and
js
xchg
test
and
out
or
pop
pop
mov
inc
mov
xor
mov
imul
jg
inc
xchg
add
ds
cli
arpl
pop
loop
jl
jb
loop
xor
push
inc
sub
js
pop
mov
mov
inc
dec
dec
push
sub
pushf
jle
mov
cmpl
or
std
enter
out
fwait
icebp
insb
lret
lock
in
aam
xchg
pushf
cmp
enter
fiadds
into
add
std
cmp
dec
shrl
mov
fistpll
test
cli
mov
push
les
out
mov
mov
movsl
xchg
inc
mov
pop
and
mov
loope
cs
jne
outsl
cs
lods
insb
sub
stos
imul
xchg
scas
and
and
inc
jae
fwait
clc
mov
movsb
repz
mov
subl
pop
inc
pop
push
pop
pushf
rcr
sbb
test
push
sub
insb
pusha
mov
rclb
jnp
lods
mov
xor
push
test
test
dec
aas
xchg
mov
cld
jns
aaa
aad
sbb
or
mov
mov
lret
adc
inc
dec
pop
dec
lods
inc
jmp
push
les
rcl
mov
jbe
pop
dec
cmpsb
ljmp
imul
into
cmpsb
arpl
loope
mov
xchg
jg
xchg
lea
ja
mov
xchg
sbb
mov
fwait
aaa
or
push
fstpl
les
inc
or
lahf
daa
inc
add
fstps
jne
mov
fsubr
push
add
inc
out
sub
or
or
inc
pusha
loope
xchg
or
cmp
rcll
lds
xor
inc
imul
dec
xchg
or
lret
pop
sub
xchg
add
jo
or
or
mov
add
in
cltd
mov
dec
add
arpl
cmc
mov
jg
mov
cmp
mov
mov
jb
mov
in
or
popa
stos
hlt
sbb
cmp
inc
add
stos
cld
ficomps
fdivr
aad
cmp
repnz
xchg
xor
sub
mov
sub
adc
call
jb
jle
mov
xor
arpl
jae
pop
sbb
mov
imul
aas
lcall
inc
and
xor
popf
pop
dec
rol
xchg
push
int
dec
addb
cmpsl
xchg
movsb
nop
mov
sahf
pop
arpl
cmc
sub
xchg
outsb
inc
cwtl
dec
lods
sbb
xchg
movsb
push
cld
mov
mov
xor
aas
push
imulb
or
data16
inc
add
inc
jle
mov
cmc
adc
inc
xor
ljmp
aas
cwtl
mov
fisubrl
imul
outsl
sub
callw
inc
dec
or
mov
outsb
sub
addr16
lods
cmp
and
or
push
fnstsw
orl
dec
push
jno
and
or
icebp
dec
sbb
lcall
mov
cmp
in
lods
insb
sub
stos
imul
in
arpl
loope
pusha
aas
mov
jp
clc
mov
je
repnz
xor
dec
or
leave
mov
movb
add
sbbb
popf
pop
sbb
lcall
aam
push
adc
xchg
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loop
pusha
aas
mov
jp
stc
mov
je
repz
xor
dec
or
lret
pop
movl
pop
push
ficomps
pop
sbb
xchg
push
adc
rclb
lods
insb
sub
stos
imul
in
arpl
loop
pusha
and
mov
jp
stc
mov
je
repz
xor
dec
push
int
dec
or
mov
movl
pop
pop
ficomps
pop
sbb
xchg
push
push
aad
push
adc
xchg
push
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loope
pusha
aas
mov
jp
clc
mov
je
repnz
xor
dec
or
leave
mov
movb
add
sbbb
popf
pop
sbb
lcall
aam
push
adc
xchg
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loop
pusha
aas
mov
jp
stc
mov
je
repz
xor
dec
or
lret
pop
movl
pop
push
ficomps
pop
sbb
xchg
push
adc
rclb
lods
insb
sub
stos
imul
in
arpl
loop
pusha
and
mov
jp
stc
mov
je
repz
xor
dec
push
int
dec
or
mov
movl
pop
pop
ficomps
pop
sbb
xchg
push
push
aad
push
adc
xchg
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
push
scas
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
imull
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
outsl
cmpsl
test
pop
jge
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
negl
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
out
out
data16
push
insb
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
lods
push
iret
xor
scas
inc
inc
mov
stos
mov
xchg
scas
aas
insb
inc
fistps
jge
test
scas
out
and
aad
inc
cmpsl
inc
inc
pop
inc
insb
inc
aad
fbstp
jle
pop
inc
aam
fidivrs
xor
push
add
scas
scas
insb
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
notl
xchg
lods
scas
scas
insb
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
testl
xor
scas
scas
xor
scas
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
ret
adc
sar
adc
sar
add
call
add
adc
jo
adc
call
add
call
add
add
add
notl
add
adc
sbb
adc
sub
adc
cmp
adc
dec
clc
adc
pop
clc
adc
outsb
clc
adc
cmp
add
clc
adc
mov
adc
lret
add
clc
adc
hlt
clc
adc
add
adc
sbb
adc
cs
adc
ds
adc
push
stc
adc
pusha
stc
adc
jo
adc
cmp
add
adc
ret
add
stc
adc
call
stc
adc
push
cli
adc
push
cli
adc
sub
adc
cmp
adc
dec
cli
adc
pop
cli
adc
jb
adc
xchg
adc
lcall
add
cli
adc
cli
adc
in
cli
adc
add
adc
adc
adc
sub
adc
ds
adc
push
sti
adc
pusha
sti
adc
jbe
adc
xchg
adc
cwtl
sti
adc
lods
sti
adc
ret
add
sti
adc
fdivrp
adc
out
notl
add
cld
adc
adc
adc
es
adc
cmp
adc
push
cld
adc
call
add
add
add
add
add
add
add
add
adc
hlt
add
add
adc
dec
add
add
add
add
adc
adc
adc
add
adc
lock
add
add
add
add
add
add
add
add
add
adc
out
adc
into
notl
add
notl
add
notl
add
adc
dec
notl
add
adc
hlt
sti
adc
and
adc
inc
add
add
adc
adc
adc
or
adc
and
adc
cmp
adc
push
add
add
adc
je
adc
xchg
adc
lcall
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
adc
jl
adc
mov
adc
cwtl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
outsb
cld
adc
jp
adc
inc
call
add
call
add
call
add
call
add
call
add
adc
out
adc
adc
ret
add
adc
nop
adc
cmp
add
add
adc
inc
adc
cmp
adc
loop
adc
sbb
adc
or
adc
clc
std
adc
ljmp
add
std
adc
mov
std
adc
xchg
std
adc
xchg
adc
je
adc
std
adc
push
std
adc
ds
adc
and
adc
adc
adc
add
adc
repnz
adc
fdivrp
adc
lret
add
adc
lcall
add
leave
dec
add
leave
dec
add
dec
add
lods
dec
add
lods
dec
add
lods
dec
add
dec
add
dec
add
dec
add
add
add
add
add
lods
dec
add
lods
dec
add
lods
dec
add
scas
dec
add
scas
dec
add
dec
add
les
mov
les
rol
add
les
loopne
dec
add
les
add
dec
add
lds
inc
lds
push
lds
pusha
lds
jo
dec
add
lds
mov
add
add
lds
rol
dec
add
lds
lock
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
add
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
enter
add
add
enter
enter
enter
add
add
enter
enter
enter
leave
dec
add
leave
dec
add
dec
add
dec
add
leave
dec
add
leave
dec
add
leave
dec
add
leave
dec
add
leave
dec
add
leave
dec
add
pop
dec
add
dec
add
dec
add
xor
stc
repnz
add
dec
add
add
add
or
cmp
push
add
add
add
or
cmp
push
add
or
cmp
push
add
or
cmp
push
add
add
add
or
add
add
xchg
dec
cmp
in
sbbb
pusha
ljmp
xlat
aas
sti
filds
fbld
xchg
inc
inc
xchg
jnp
push
xor
out
sbb
inc
test
ret
imul
mov
das
inc
inc
and
mov
nop
lahf
mov
fucomip
shrb
push
add
or
movsb
push
push
add
add
add
aas
inc
push
gs
gs
imul
inc
inc
add
add
cs
inc
push
bound
pop
insb
gs
arpl
pop
arpl
je
bound
jae
inc
inc
add
add
movsb
push
push
add
add
add
aas
inc
push
outsl
jne
pop
outsl
pop
jb
outsb
addr16
jae
fs
inc
add
movsb
push
push
add
add
add
aas
inc
push
bound
pop
popa
insb
insb
outsl
arpl
je
inc
inc
add
add
cs
inc
push
aas
and
popa
jae
arpl
je
imul
and
push
jb
imul
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
xor
jae
fs
inc
add
add
add
cs
inc
push
bound
pop
arpl
je
jae
fs
inc
add
movsb
push
push
add
add
add
dec
add
movsb
push
push
add
add
add
aas
inc
push
popaw
arpl
inc
insb
outsl
arpl
gs
jae
fs
inc
add
movsb
push
push
add
add
add
aas
inc
push
aas
and
jne
jo
outsb
arpl
inc
jae
fs
inc
add
movsb
push
push
add
add
add
aas
inc
push
jb
outsb
je
insl
gs
gs
outsl
jb
jae
fs
inc
add
add
add
or
cmp
add
rcrl
std
adc
or
adc
jl
jnp
inc
js
jbe
js
stc
scas
ret
sbb
jecxz
fmull
mov
or
mov
inc
lock
mov
or
stos
cmp
adcl
pop
dec
add
jae
and
xchg
cli
ss
mov
repnz
adc
daa
sub
add
out
adc
add
push
jg
and
add
add
scas
mov
inc
test
inc
jecxz
pushl
add
add
xchg
adc
insb
adc
dec
adc
or
push
add
add
add
add
add
or
and
push
add
or
movsb
push
push
add
add
add
dec
add
movsb
push
push
add
add
add
push
inc
inc
movsb
push
push
add
add
add
aas
inc
push
aas
and
gs
arpl
pop
jae
jb
popa
insl
pop
insb
imul
jae
arpl
push
aas
and
popa
jae
arpl
je
gs
insl
bound
inc
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
push
aas
and
push
jb
imul
inc
fs
imul
inc
inc
add
add
movsb
push
push
add
add
add
aas
inc
push
aas
and
popa
jae
arpl
je
gs
insl
bound
inc
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
add
add
cs
inc
push
imul
gs
jae
fs
inc
add
movsb
push
push
add
add
add
aas
inc
push
aas
and
dec
outsl
jae
inc
dec
inc
jae
fs
inc
add
add
cs
inc
push
aas
and
popa
jae
arpl
outsl
jae
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
add
add
add
cs
inc
push
aas
and
popa
jae
arpl
jae
jb
popa
insl
inc
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
add
add
add
cs
inc
push
popaw
imul
jae
bound
gs
jae
fs
inc
add
movsb
push
push
add
add
add
aas
inc
push
arpl
gs
bound
gs
jae
fs
inc
add
add
movsb
push
push
add
add
add
aas
inc
push
aas
and
je
jo
inc
inc
inc
jae
fs
inc
add
add
cs
inc
push
aas
and
jne
pop
addr16
inc
push
aas
and
jae
jb
popa
insl
bound
pop
imul
inc
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
inc
jae
fs
inc
add
add
or
cmp
push
add
add
add
add
add
dec
add
dec
add
icebp
dec
add
repz
add
cmc
dec
add
testb
testl
add
dec
add
sti
dec
add
cld
dec
add
std
dec
add
dec
add
dec
add
dec
add
dec
add
add
mov
add
dec
add
pop
dec
add
or
lock
add
dec
add
or
add
or
dec
add
dec
add
dec
add
dec
add
dec
add
adc
add
push
dec
add
pop
dec
add
sbb
loopne
dec
add
sbb
add
add
sbb
dec
add
pop
dec
add
and
inc
and
push
and
push
and
pusha
and
add
dec
add
daa
dec
add
sub
shrb
add
sub
loopne
dec
add
sub
dec
add
xor
adc
dec
add
xor
and
dec
add
xor
add
dec
add
dec
add
dec
add
dec
add
cmp
mov
cmp
add
cmp
dec
add
aas
dec
add
inc
dec
add
inc
dec
add
inc
dec
add
inc
dec
add
inc
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
dec
add
dec
dec
add
dec
dec
add
push
dec
add
push
dec
add
push
dec
add
push
dec
add
push
dec
add
push
dec
add
push
dec
add
pop
dec
add
dec
add
dec
add
dec
add
dec
add
pop
dec
add
pusha
dec
add
popa
dec
add
bound
loopne
dec
add
fs
add
dec
add
addr16
add
push
dec
add
dec
add
dec
add
dec
add
dec
add
outsl
dec
add
jno
add
jb
add
jae
add
je
add
jne
add
jbe
add
js
add
jns
add
jp
add
jnp
add
jl
add
dec
add
dec
add
dec
add
dec
add
dec
add
orl
test
mov
dec
add
xchg
rolb
dec
add
mov
lock
add
add
mov
xor
dec
add
dec
add
dec
add
dec
add
dec
add
xchg
dec
add
cwtl
dec
add
lcall
loopne
dec
add
popf
dec
add
lahf
dec
add
mov
dec
add
mov
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
stos
dec
add
lods
dec
add
lods
dec
add
scas
dec
add
scas
dec
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
dec
add
dec
add
dec
add
dec
add
dec
add
mov
dec
add
rorb
rorl
ret
loopne
dec
add
les
add
dec
add
dec
add
enter
leave
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
rorl
mov
rorl
rcl
add
aad
add
dec
add
xlat
dec
add
adc
dec
add
fisttpl
xor
dec
add
dec
add
dec
add
dec
add
dec
add
loop
add
in
add
in
add
out
add
out
add
call
dec
add
jmp
add
in
dec
add
in
dec
add
out
dec
add
dec
add
dec
add
dec
add
dec
add
hlt
dec
add
testb
testl
loopne
dec
add
cli
dec
add
cld
dec
add
add
add
or
movsb
push
push
add
add
add
aas
inc
push
insb
outsl
imul
jb
jae
fs
inc
add
add
add
cs
inc
push
je
jb
popa
fs
jb
jae
jne
arpl
gs
outsl
jb
bound
jae
inc
inc
add
add
add
cs
inc
push
je
jb
popa
fs
gs
gs
imul
jae
inc
inc
add
add
movsb
push
push
add
add
add
aas
inc
push
insb
outsl
arpl
gs
outsl
jb
bound
jae
inc
inc
add
movsb
push
push
add
add
add
aas
inc
push
bound
pop
fs
jns
outsl
pop
insl
outsl
outsb
je
inc
addr16
outsl
jb
popa
outsb
inc
bound
jae
inc
inc
add
movsb
push
push
add
add
add
aas
inc
push
bound
pop
jns
popa
jb
addr16
outsl
jb
popa
outsb
inc
bound
jae
inc
inc
add
movsb
push
push
add
add
add
aas
inc
push
bound
pop
insl
outsl
outsb
je
inc
addr16
outsl
jb
popa
outsb
inc
bound
jae
inc
inc
add
add
cs
inc
push
insb
outsb
addr16
pop
gs
outsl
jb
jae
fs
inc
add
movsb
push
push
add
add
add
aas
inc
push
bound
pop
addr16
bound
jae
inc
inc
add
or
cmp
push
add
inc
push
add
inc
push
add
add
add
add
add
add
add
inc
push
add
add
add
add
add
add
add
add
add
inc
push
add
add
add
add
add
add
add
or
cmp
push
add
or
movsb
push
push
add
add
add
aas
inc
push
pop
dec
outsl
arpl
jo
insb
outsl
arpl
gs
jae
fs
inc
add
add
cmp
push
add
add
add
or
cmp
push
add
add
add
jo
jb
addr16
sub
xor
cmp
sub
and
and
dec
and
popa
jne
gs
and
outsb
jae
and
and
imul
popa
jb
sub
dec
je
and
dec
and
inc
dec
push
push
and
push
inc
push
push
inc
inc
add
add
add
add
add
add
cmpb
sarb
add
add
cmpb
cmpb
add
inc
add
add
add
nop
cmp
add
jg
add
jg
add
jg
add
add
add
add
add
add
add
jg
add
add
xor
add
add
add
jg
add
jg
add
add
add
add
add
add
add
jg
add
add
xor
or
add
add
dec
out
mov
cmp
push
add
or
movsb
push
push
add
add
add
aas
inc
push
je
jo
pop
imul
add
add
cmc
dec
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
jg
jg
jg
add
dec
add
bound
add
add
jne
add
jae
add
clc
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
add
add
push
add
add
add
push
add
push
add
push
add
push
push
add
push
push
add
push
push
add
push
add
push
add
push
push
add
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
add
add
add
add
add
add
dec
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
insb
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
or
add
or
add
and
add
push
push
add
or
movsb
push
push
add
add
add
aas
inc
push
bound
pop
gs
gs
imul
inc
inc
add
add
add
cmp
push
add
incl
add
add
add
add
add
add
add
fdiv
dec
add
testl
fdiv
dec
add
testl
fdiv
dec
add
add
add
add
add
add
add
add
and
add
pop
push
add
dec
add
testl
loopne
dec
add
dec
add
add
add
popa
push
add
add
add
add
js
push
add
add
add
pusha
push
add
add
add
add
test
add
add
add
push
add
add
add
push
add
add
add
pop
push
add
add
add
pop
push
add
add
add
add
fs
push
add
add
cmp
push
add
add
add
push
add
add
add
add
add
add
add
add
add
pop
push
add
add
fcomps
jns
add
enter
jp
add
mov
add
add
add
movsb
pop
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
ljmp
add
sbb
ljmp
add
sbb
ljmp
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
cwtl
bound
mov
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
dec
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
lcall
add
add
add
add
add
js
add
xchg
add
add
add
add
add
add
add
add
add
add
add
insl
add
add
lcall
add
add
add
add
add
ja
add
xchg
add
add
add
repnz
add
add
add
add
add
add
insb
add
add
incl
add
add
add
add
incl
add
add
add
add
add
add
icebp
incl
add
add
push
add
push
add
add
incl
add
add
add
add
add
add
add
jg
add
add
add
add
cld
pushl
add
add
add
incl
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cli
or
add
add
add
add
or
push
ret
cmovo
add
add
add
add
adc
add
add
add
adcb
add
add
add
mov
add
add
add
leave
sbb
add
ret
inc
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
decl
js
roll
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
and
add
int3
int
int3
int3
int3
int3
int3
int3
sti
aas
jno
or
mov
mov
cmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
aas
and
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
in
ficomps
frstor
incl
add
add
add
adcb
add
add
add
add
add
add
add
cmp
push
add
or
movsb
push
push
add
add
add
aas
inc
push
gs
outsl
jb
arpl
outsl
jb
inc
jae
jae
gs
inc
bound
jae
inc
inc
add
add
add
cs
inc
push
outsb
outsl
outsb
arpl
jns
bound
outsb
outsl
outsb
arpl
jns
bound
inc
bound
jae
inc
inc
add
add
movsb
push
push
add
add
add
aas
inc
push
jae
jae
gs
pop
gs
outsl
jb
arpl
outsl
jb
inc
aas
inc
xor
xor
cmp
xor
add
movsb
push
push
add
add
add
aas
inc
push
jo
jae
js
gs
outsl
jb
arpl
outsl
jb
inc
aas
inc
xor
xor
cmp
xor
or
add
add
adc
push
add
ja
add
ja
add
ja
add
push
add
push
add
add
push
add
push
add
ja
add
jbe
add
jbe
add
jbe
add
push
add
jbe
add
jbe
add
jbe
add
jbe
add
add
add
jbe
add
push
add
push
add
push
add
jne
add
jne
add
jne
add
push
add
jne
add
push
add
push
add
push
add
add
push
add
push
add
je
add
push
add
add
add
add
add
and
insb
outsl
arpl
imul
xor
xor
add
shr
add
out
dec
add
dec
add
dec
add
cmc
dec
add
testl
inc
cld
dec
add
add
mov
push
dec
add
or
adc
add
push
dec
add
adc
adc
dec
add
adc
dec
add
out
dec
add
lock
add
dec
add
testb
clc
dec
add
cli
dec
add
dec
add
decl
pusha
add
rolb
add
push
dec
add
dec
add
dec
add
adc
jo
dec
add
adc
add
dec
add
push
add
or
or
adc
or
or
femms
add
pop
add
add
add
adc
or
or
push
adc
or
add
add
or
adc
or
add
add
add
or
add
push
or
push
or
adc
add
add
adc
pop
or
or
adc
add
add
lar
add
add
add
or
pop
or
add
or
movups
or
push
add
push
add
or
or
adc
add
or
or
add
or
or
or
or
adc
adc
or
or
or
adc
or
pop
or
or
add
or
add
adc
or
adc
add
or
or
add
add
add
add
jae
gs
add
push
add
jae
je
add
add
add
inc
inc
inc
and
outsl
arpl
jae
outsb
add
push
ja
inc
inc
inc
add
inc
add
add
add
jb
outsl
add
add
jae
imul
add
add
push
add
push
add
add
add
add
decl
or
add
add
add
sub
add
gs
gs
imul
add
and
jb
push
outsb
outsw
jb
popa
je
outsl
outsb
and
popa
imul
add
inc
pop
inc
inc
push
push
dec
dec
dec
pop
push
push
inc
inc
dec
pop
dec
push
inc
push
inc
dec
dec
push
add
add
inc
pop
inc
inc
push
push
dec
dec
dec
pop
push
dec
dec
inc
dec
inc
pop
push
push
inc
push
add
add
inc
inc
push
push
dec
dec
dec
pop
push
push
dec
push
pop
dec
dec
push
push
push
push
inc
push
dec
dec
dec
add
inc
pop
inc
inc
push
push
dec
dec
dec
pop
dec
dec
dec
inc
dec
dec
push
dec
dec
push
inc
inc
dec
inc
pop
inc
pop
inc
inc
push
push
dec
dec
dec
add
inc
pop
inc
inc
push
push
dec
dec
dec
pop
dec
dec
push
pop
dec
push
inc
push
inc
dec
dec
push
add
inc
pop
inc
inc
push
push
dec
dec
dec
pop
dec
dec
push
pop
inc
dec
push
dec
inc
inc
pop
inc
pop
pop
pop
inc
push
dec
add
add
inc
pop
inc
inc
push
push
dec
dec
dec
pop
dec
dec
pop
push
inc
inc
inc
pop
inc
push
push
dec
push
add
inc
inc
push
push
dec
dec
dec
pop
dec
dec
dec
inc
inc
inc
dec
pop
dec
dec
push
push
push
push
inc
push
dec
dec
dec
add
add
inc
inc
push
push
dec
dec
dec
pop
inc
dec
push
pop
push
dec
inc
inc
push
inc
dec
dec
push
add
inc
inc
push
push
dec
dec
dec
pop
inc
dec
push
pop
push
push
inc
inc
dec
pop
inc
dec
inc
inc
dec
add
add
inc
inc
push
push
dec
dec
dec
pop
inc
dec
push
pop
dec
push
inc
push
inc
dec
dec
push
add
inc
pop
inc
inc
push
push
dec
dec
dec
pop
inc
dec
push
pop
dec
dec
push
inc
dec
dec
inc
pop
dec
push
inc
push
inc
push
dec
dec
dec
add
inc
inc
push
push
dec
dec
dec
pop
inc
dec
push
pop
dec
dec
inc
pop
inc
inc
push
pop
push
inc
push
push
dec
push
add
add
inc
pop
inc
inc
push
push
dec
dec
dec
pop
inc
dec
push
pop
inc
dec
push
dec
inc
inc
pop
inc
pop
pop
pop
inc
push
dec
add
add
inc
pop
inc
inc
push
push
dec
dec
dec
pop
inc
dec
push
pop
inc
inc
dec
dec
push
dec
inc
dec
pop
dec
push
inc
push
inc
dec
inc
add
inc
pop
inc
inc
push
push
dec
dec
dec
pop
inc
inc
push
inc
push
pop
push
inc
pop
dec
dec
push
inc
dec
dec
inc
dec
dec
inc
dec
push
add
inc
inc
push
push
dec
dec
dec
pop
inc
push
push
inc
pop
pop
inc
dec
push
dec
inc
push
pop
inc
pop
inc
inc
inc
inc
inc
inc
add
inc
inc
push
push
dec
dec
dec
pop
inc
inc
inc
inc
push
push
pop
push
dec
dec
dec
inc
push
dec
dec
dec
add
push
sub
fistpl
add
js
add
sub
add
sub
bound
and
jae
add
add
bound
and
imul
jae
cmp
jae
jne
arpl
je
jo
and
insb
jne
and
jne
and
je
bound
imul
gs
and
and
addr16
add
add
mov
ds
add
cmp
add
cmp
add
dec
add
cmp
push
add
dec
add
and
popa
insb
and
insl
add
push
add
cmp
je
jne
add
add
popaw
insb
jae
add
add
outsb
add
add
push
gs
imul
inc
and
jns
outsb
outsl
je
outsw
jne
add
inc
popa
imul
and
arpl
add
add
insb
outsl
arpl
imul
jb
jb
add
inc
popa
imul
gs
arpl
and
addr16
jo
outsl
arpl
jae
add
add
and
imul
je
outsl
outsb
and
imul
popa
outsb
outsb
outsl
je
jae
je
popa
insb
insb
outsl
arpl
imul
popa
outsb
outsb
outsl
je
imul
insl
jo
jb
cmp
inc
dec
dec
and
jns
bound
insl
imul
and
jb
jne
je
and
and
outsl
outsb
and
jb
imul
popa
outsb
outsb
outsl
je
popa
insb
insb
outsl
arpl
and
insl
outsl
jb
and
jb
inc
dec
dec
add
inc
popa
outsb
outsb
outsl
je
insb
outsl
arpl
and
outsl
je
arpl
and
outsl
addr16
insl
and
popa
add
add
inc
outsb
gs
insb
and
je
popa
arpl
outsb
and
jb
jb
add
add
jae
data16
je
insl
gs
outsl
jb
and
add
add
je
jne
arpl
outsb
inc
fs
jae
gs
add
add
add
jae
add
inc
push
dec
push
push
dec
inc
push
dec
dec
inc
inc
add
add
inc
imul
sub
data16
arpl
outsb
and
and
add
inc
imul
sub
outsl
jb
imul
add
add
insb
and
and
gs
outsl
jb
and
jb
outsl
jb
arpl
and
pop
cmp
add
dec
jae
bound
addr16
jb
jae
outsb
je
add
dec
gs
gs
xor
add
add
sub
popa
je
outsl
outsb
and
inc
sub
gs
outsl
jb
arpl
and
add
inc
inc
and
push
inc
inc
ss
add
imul
add
add
add
add
and
add
inc
and
add
imul
jb
imul
gs
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
or
add
dec
dec
dec
push
dec
inc
dec
dec
pop
inc
inc
dec
dec
inc
inc
inc
push
add
add
decl
imul
add
push
add
add
popa
add
jae
and
push
add
jb
imul
inc
push
dec
inc
inc
inc
push
inc
cmp
push
dec
inc
push
inc
pop
dec
push
add
add
inc
dec
inc
dec
inc
inc
dec
dec
inc
add
dec
push
dec
inc
push
push
push
inc
push
push
add
add
push
push
dec
inc
push
push
dec
push
inc
inc
dec
push
push
inc
push
add
push
inc
inc
dec
push
push
inc
push
add
dec
dec
inc
dec
add
add
inc
dec
pop
inc
dec
dec
inc
dec
add
add
push
push
inc
dec
push
inc
inc
push
add
add
push
push
dec
inc
push
push
inc
inc
dec
push
push
inc
push
add
add
inc
dec
push
push
inc
push
add
add
inc
dec
push
dec
add
add
pop
add
add
push
push
inc
push
add
push
jp
add
xchg
dec
add
mov
adc
add
mov
xor
add
mov
lock
and
dec
add
dec
add
dec
add
jp
add
dec
add
mov
adc
add
mov
xor
add
mov
lock
and
dec
add
dec
add
dec
add
add
add
jnp
add
jnp
add
xchg
dec
add
jp
add
dec
add
add
add
add
add
jae
bound
cmp
outsl
bound
and
je
add
add
jae
bound
cmp
popaw
imul
je
add
js
push
add
cmp
imul
cmp
bound
bound
and
je
add
add
dec
add
mov
dec
add
mov
dec
add
mov
dec
add
dec
add
dec
add
jl
add
dec
add
add
ret
dec
add
dec
add
rorl
rorb
mov
dec
add
dec
add
mov
dec
add
mov
add
xor
xor
popa
bound
gs
inc
inc
inc
inc
inc
add
inc
dec
push
push
dec
inc
pop
add
inc
dec
dec
inc
push
dec
dec
inc
dec
push
add
add
jb
inc
add
jae
add
add
add
je
and
inc
add
je
insl
add
jo
and
push
add
outsb
add
add
add
inc
add
inc
add
jae
add
add
imul
popa
add
and
push
add
outsb
add
add
add
add
shr
add
out
dec
add
dec
add
dec
add
cmc
dec
add
testl
inc
cld
dec
add
add
mov
push
dec
add
or
adc
add
push
dec
add
adc
adc
dec
add
adc
incl
or
and
push
push
ja
add
add
xchg
lcall
roll
add
xchg
lcall
xchg
xchg
add
push
outsb
imul
add
add
add
inc
jb
outsl
jb
and
arpl
jae
jbe
outsl
insb
popa
je
outsl
outsb
and
and
js
xor
pop
and
je
imul
and
and
sub
jo
outsl
addr16
insl
and
insl
imul
add
popa
and
outsl
insl
add
add
imul
add
dec
jne
jo
je
bound
push
je
imul
jne
jo
je
bound
push
je
imul
push
push
add
gs
jb
arpl
jae
push
ja
push
popa
jb
insl
gs
jb
add
add
imul
gs
xor
cs
insb
add
add
jmp
add
push
jb
jo
jb
jns
push
add
inc
dec
dec
inc
push
dec
xor
cs
dec
dec
add
add
pop
push
jb
arpl
outsl
jne
gs
jbe
outsb
je
add
add
incl
outsb
daa
je
arpl
jbe
jb
and
jbe
insb
imul
gs
je
and
jb
outsb
add
add
pop
dec
add
dec
add
push
add
pop
dec
add
jnp
add
jge
add
pop
dec
add
pop
dec
add
add
add
imul
popa
jae
push
add
inc
jb
popa
je
push
imul
push
add
push
imul
outsl
arpl
add
je
outsl
fs
gs
imul
add
inc
jb
popa
je
push
jb
arpl
jae
add
inc
gs
je
jb
jne
dec
outsb
outsw
push
add
je
outsl
insl
insl
popa
outsb
fs
imul
push
add
lea
cmp
cwtl
jle
add
mov
cmp
inc
popa
jns
outsl
data16
outsb
je
and
and
je
jbe
insb
imul
gs
jb
add
and
and
outsb
je
and
insb
jne
and
and
je
outsl
data16
outsb
and
cs
add
add
cmp
push
add
dec
add
dec
add
popa
jb
imul
outsl
data16
insb
imul
cmp
xor
xor
xor
xor
xor
nop
jg
add
xchg
dec
add
dec
add
outsb
je
and
insl
bound
and
and
je
outsl
data16
outsb
and
cs
add
in
push
add
pop
dec
add
jp
add
push
add
mov
add
dec
add
arpl
cmp
and
and
add
test
dec
add
outsl
outsl
jae
cmp
bound
pop
addr16
and
imul
jne
and
je
jne
imul
jae
cmp
addr16
add
add
add
jb
gs
xor
cs
insb
add
add
push
jae
jb
xor
fs
insb
add
inc
outsl
insl
inc
insb
xor
cs
insb
add
add
push
outsb
fs
gs
popa
addr16
add
add
cs
bound
outsl
add
and
gs
popa
je
and
xor
xor
inc
outsl
jo
jb
addr16
cmp
xor
outsb
sub
and
imul
add
ljmp
or
add
sbb
dec
add
add
add
in
dec
add
push
add
add
add
in
dec
add
add
adc
adc
or
dec
add
add
add
add
add
out
dec
add
add
add
out
dec
add
add
add
out
dec
add
add
add
out
dec
add
add
add
add
adc
out
dec
add
xor
xor
add
pusha
pop
add
add
push
add
or
add
jae
adc
pop
add
or
add
xor
add
rolb
pop
or
add
pusha
add
or
add
or
add
or
add
or
add
pop
push
add
or
add
sbb
add
nop
add
pop
cmp
add
js
add
cmp
add
rolb
adc
adc
add
push
add
or
add
or
add
or
add
pop
add
add
push
add
or
adc
pop
sub
add
je
add
xor
add
enter
or
add
or
add
test
add
add
add
test
add
inc
add
or
add
pop
or
add
pop
add
or
add
cwtl
add
push
add
or
or
add
fadds
adc
pop
add
or
or
add
mov
add
or
add
clc
add
pop
add
add
push
add
or
add
pop
and
add
jb
add
xor
add
les
adc
or
add
bound
add
and
add
movsb
add
or
add
or
add
or
add
pop
pop
add
or
add
sbb
add
xchg
add
inc
add
or
add
cmp
add
aam
adc
adc
add
push
add
sub
add
mov
add
or
add
mov
add
dec
add
or
add
pop
add
add
or
add
add
adc
xor
add
jbe
add
add
or
add
pop
sldt
or
add
add
or
add
xchg
add
inc
add
or
add
pop
or
add
pop
add
or
add
or
add
jle
add
add
or
add
pop
sbb
add
outsb
add
or
add
or
add
mov
add
dec
add
or
add
add
add
push
add
or
add
pop
pop
add
or
add
xor
add
ret
pop
or
add
popa
add
or
add
or
add
or
add
or
add
pop
push
add
or
add
sbb
add
xchg
add
pop
cmp
add
jns
add
cmp
add
rolb
adc
adc
add
imul
add
mov
add
or
add
mov
add
dec
add
or
add
pop
add
add
push
add
or
add
pop
sub
add
jne
add
xor
add
pop
or
add
or
add
or
add
or
add
ljmp
or
add
sbb
add
push
add
or
add
cmp
add
pop
pop
add
or
add
sub
add
or
add
or
add
cli
add
pop
add
add
push
add
or
add
pop
and
add
jae
add
xor
add
movb
pop
or
add
arpl
add
and
add
cmpsb
add
or
add
or
add
or
add
pop
pop
add
or
add
sbb
add
xchg
add
inc
add
or
add
cmp
add
add
pop
adc
add
imul
or
add
or
add
or
add
or
add
pop
add
add
or
add
add
adc
xor
add
ja
add
aaa
add
or
add
pop
sldt
or
add
daa
add
or
add
or
add
or
add
pop
or
add
pop
add
or
add
or
add
or
add
aas
add
or
add
pop
sbb
add
outsl
add
or
add
or
add
or
add
or
add
add
add
push
add
or
add
jae
adc
pop
add
or
add
xor
add
roll
pop
or
add
pusha
add
or
add
or
add
or
add
or
add
pop
push
add
or
add
sbb
add
xchg
add
pop
cmp
add
js
add
cmp
add
roll
adc
adc
add
push
add
or
add
or
add
or
add
pop
add
add
push
add
or
adc
pop
sub
add
je
add
xor
add
leave
add
pop
or
add
or
add
test
add
or
add
jmp
add
or
or
add
cltd
add
push
add
or
or
add
flds
adc
pop
add
or
or
add
mov
add
or
add
stc
add
pop
add
add
push
add
or
add
pop
and
add
jb
add
xor
add
lds
adc
or
add
bound
add
and
add
movsl
add
or
add
or
add
or
add
pop
pop
add
or
add
sbb
add
xchg
add
inc
add
or
add
cmp
add
aad
adc
adc
add
push
add
sub
add
mov
add
or
add
mov
add
dec
add
or
add
pop
add
add
or
add
add
adc
xor
add
jbe
add
add
or
add
pop
sldt
or
add
add
or
add
or
add
or
add
pop
or
add
pop
add
or
add
or
add
or
add
add
or
add
pop
sbb
add
outsb
add
or
add
or
add
or
add
or
add
add
add
push
add
or
add
pop
pop
add
or
add
xor
add
ret
add
pop
or
add
popa
add
or
add
or
add
or
add
or
add
pop
push
add
or
add
sbb
add
xchg
add
pop
cmp
add
jns
add
cmp
add
roll
adc
adc
add
imul
add
mov
add
or
add
mov
add
dec
add
or
add
pop
add
add
push
add
or
add
pop
sub
add
jne
add
xor
add
pop
or
add
or
add
or
add
or
add
jmp
adc
or
add
pop
add
or
add
push
add
or
add
cmp
add
pop
pop
add
or
add
sub
add
or
add
or
add
sti
add
pop
add
add
push
add
or
add
pop
and
add
jae
add
xor
add
movl
add
arpl
add
and
add
cmpsl
add
or
add
or
add
or
add
pop
pop
add
or
add
sbb
add
xchg
add
inc
add
or
add
cmp
add
xlat
add
pop
adc
add
imul
or
add
or
add
or
add
or
add
pop
add
add
or
add
add
adc
xor
add
ja
add
aaa
add
or
add
pop
sldt
or
add
daa
add
or
add
or
add
or
add
pop
or
add
pop
add
or
add
or
add
or
add
aas
add
or
add
pop
sbb
add
outsl
add
or
add
or
add
or
add
or
add
add
add
adc
add
adc
add
add
add
sbb
and
sbb
add
adc
add
push
add
add
adc
addl
sbb
pop
add
add
popa
add
add
add
adc
xor
sbb
add
adc
add
add
add
adc
adc
adc
add
or
pop
add
add
add
add
add
add
or
add
add
add
add
arpl
jb
arpl
outsb
addr16
and
arpl
add
arpl
jb
arpl
popa
je
and
arpl
add
add
jbe
insb
imul
outsb
arpl
je
outsl
and
jb
bound
imul
add
jbe
insb
imul
outsb
arpl
arpl
add
add
jbe
insb
imul
popa
insb
das
insb
outsb
addr16
and
fs
jbe
insb
imul
outsb
arpl
and
je
add
imul
and
gs
insb
das
insb
outsb
addr16
jae
jae
je
imul
and
je
insb
outsb
addr16
and
jo
popa
je
add
imul
and
fs
addr16
jae
jae
je
add
add
and
outsb
jns
insb
outsb
addr16
and
and
je
outsb
arpl
jae
insl
bound
jae
imul
and
outsl
jb
and
outsl
arpl
insb
outsb
addr16
jae
add
add
jbe
insb
imul
and
add
push
jb
arpl
and
jae
popa
je
push
outsb
outsl
ja
and
popa
fs
data16
popa
addr16
jae
je
add
add
arpl
jb
arpl
gs
fs
arpl
arpl
add
jbe
insb
imul
ja
jae
jp
add
imul
outsb
and
insl
jo
gs
imul
push
add
add
xchg
xor
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
mov
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
filds
or
shrl
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
or
or
and
or
adc
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
js
stc
add
mov
push
loope
or
insl
or
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
mov
bound
ficoml
gs
aam
pop
popa
mov
into
push
mov
je
mov
aam
movsl
fisttps
xchg
fdivrs
sti
hlt
shrl
imul
mov
sarb
add
in
add
pop
dec
or
cmp
add
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
xorb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
ss
push
xchg
ja
int3
add
mov
das
es
lds
or
sub
mov
cmpsl
call
ret
shlb
sbb
ret
es
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
or
lret
pop
or
adc
sahf
gs
clc
sar
imul
insb
push
js
or
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
lret
mov
cmpsb
mov
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
inc
xor
sbb
push
sub
fs
hlt
ja
xchg
inc
dec
or
ret
call
hlt
jecxz
dec
mov
dec
jle
mov
sub
cwtl
xchg
ret
and
push
shll
js
inc
out
popa
push
xlat
scas
cs
mov
xlat
mov
sbb
test
sbbb
add
lcall
out
insb
insb
fistpll
inc
aam
push
pop
int
and
xchg
jecxz
lahf
mov
inc
mov
popa
ja
mov
out
repz
gs
fisubrl
lahf
inc
inc
sub
imul
jo
scas
imul
out
pop
sub
sub
pop
or
sbb
repz
fbstp
push
jo
xor
hlt
div
sub
jne
sbb
xor
pop
nop
sti
mov
test
jns
test
cmp
jns
jae
dec
call
inc
cmp
ficomps
dec
jns
inc
jle
jmp
sbb
fildl
mov
lea
fnstcw
mov
dec
hlt
mov
or
xchg
lea
or
int3
pop
dec
xor
inc
mov
outsb
lret
ja
pop
mov
mov
xchg
push
xchg
xchg
push
cwtl
xlat
ficoms
test
loope
xchg
lret
cli
cmc
pop
xlat
bound
out
imul
push
inc
lahf
test
pop
adc
push
sbb
adc
and
inc
and
out
out
and
cmp
dec
mov
lahf
mov
and
cmpsl
xor
mov
lods
out
sarb
mov
adcl
insb
mov
xchg
adc
jle
push
jns
das
mov
and
je
or
repnz
dec
push
jo
gs
out
jle
repz
mov
xchg
rcl
cmp
mov
js
mov
test
cwtl
cmpl
test
mov
mov
scas
adc
out
pop
push
insb
hlt
inc
int
fldcw
push
ret
adc
add
inc
ljmp
ja
inc
xlat
ss
push
out
mov
mov
movsl
test
jno
mov
ja
insb
pop
push
dec
sub
or
sub
add
adc
cwtl
mov
nop
bound
xchg
push
push
hlt
out
les
fdecstp
jmp
lea
imul
pushf
sub
sub
lods
dec
jo
outsl
sbb
sub
loope
fisubs
pop
lds
push
call
dec
in
mov
movsb
ret
addr16
test
mov
lahf
fdivrp
cmp
repz
jnp
call
cmp
mov
or
stos
mov
sbb
icebp
adc
sub
jae
xor
mov
jo
cmc
shrb
addl
mov
arpl
cli
lret
loope
int3
mov
stc
lea
scas
or
lea
mov
test
and
pop
insb
cmp
les
adc
sub
dec
add
sar
push
or
cmp
popf
cmpsl
push
mov
xchg
adc
in
xor
cltd
bound
fcoms
into
pop
dec
loope
push
jle
push
xchg
sub
int3
bound
mov
xor
call
mov
pop
lods
ret
outsb
xchg
dec
insb
das
mov
adc
test
push
and
sub
adc
jns
xchg
movsl
dec
mov
movsb
daa
sub
repnz
fdivrp
shlb
out
mov
shlb
es
xchg
aas
mov
adc
out
jp
std
pop
mov
gs
pop
jle
aaa
or
jbe
dec
divl
lahf
adc
jb
and
add
add
aaa
push
add
test
pop
mov
or
jmp
lret
push
mov
lea
push
adc
cmp
test
or
stc
sbb
push
xchg
fmuls
or
pop
or
es
leave
in
push
ja
pop
sub
das
sbb
fildll
sbb
repnz
adc
dec
jae
adc
cmp
and
adc
mov
pop
loopne
dec
cmp
sub
cmp
clc
or
cmp
inc
aas
or
cmp
push
add
outsl
jge
aaa
ss
fidivl
test
xchg
xor
imul
fldl
adc
nop
in
and
xor
daa
leave
pop
sub
and
mov
and
mov
sub
fidivrs
sub
ds
sbb
sub
lcall
das
rorb
jno
pop
push
jae
xor
jb
and
push
jbe
icebp
pop
je
fwait
aad
js
mov
mov
jg
or
jl
je
jns
push
inc
js
mov
jnp
cs
insl
fdivrp
cmp
nop
cli
outsb
insb
xchg
push
push
xor
cmp
imul
adc
sub
shr
aam
cmpsb
gs
fs
imul
dec
pop
mov
push
dec
jns
xchg
dec
cld
arpl
dec
lret
or
xchg
mov
dec
movsl
fstpl
inc
scas
lock
inc
testb
shll
inc
xor
inc
jae
cmovo
out
inc
sbb
push
xor
mov
mov
mov
clc
push
mov
adc
push
aad
mov
pop
fists
pop
xchg
pop
mov
movsb
pop
xor
jmp
add
sub
outsl
pop
insl
das
lods
pop
sbbb
loope
jno
loopne
iret
mov
fldenv
cmp
imul
out
addr16
in
dec
es
mov
out
push
sahf
mov
in
in
das
call
mov
stos
jmp
pop
imul
rcl
cld
sahf
insb
xchg
test
adc
cli
sbb
sti
inc
les
clc
dec
jmp
ret
cmp
inc
icebp
xchg
inc
or
mov
xchg
test
pop
js
push
aaa
mov
fidivrl
jecxz
fstpt
mov
shlb
cmc
fucom
dec
aaa
or
xlat
out
test
fsubr
aam
mov
aad
movsb
shlb
into
mov
rcrl
and
adc
pop
lds
xchg
pushf
les
fcmovb
dec
inc
sbb
int3
push
push
ret
xchg
ret
mov
call
dec
lret
lahf
lds
enter
leave
je
inc
int3
inc
insl
xchg
sbb
ror
mov
scas
xchg
ja
insl
nop
cs
sub
pushf
cmpsb
xchg
stos
push
fs
repnz
clc
mov
sahf
xchg
adc
pushf
mov
outsl
mov
adc
xor
xor
dec
mov
or
in
popf
orb
dec
add
mov
mov
push
pop
and
push
adc
faddl
arpl
pop
xchg
shl
test
into
add
stos
stc
outsb
movsb
stos
jl
jmp
dec
adc
scas
adc
lods
sbb
xor
inc
aas
mov
les
clc
mov
stos
std
jl
popf
xchg
mov
mov
sbb
mov
cmpsl
inc
mov
int
mov
fcmovne
mov
mov
mov
cmovns
push
dec
adc
mov
mov
fidivrs
pop
pop
mov
add
add
gs
stos
out
scas
mov
push
xchg
bound
fcompl
and
out
sub
fs
outsl
add
dec
fstp
push
xor
loopne
adc
lahf
push
sbb
xor
cli
jno
lods
inc
enter
lods
cmpsl
addr16
or
outsl
into
int
jg
xchg
adc
mov
aas
sahf
rcrb
xchg
call
jae
lods
and
mov
inc
jp
ds
xor
mov
cmp
rolb
xchg
or
in
xchg
loop
pop
test
xchg
fstpl
iret
aas
sub
ja
adc
ljmp
in
inc
push
clc
sub
les
and
push
sahf
loop
outsl
dec
jg
or
jge
inc
aad
sar
dec
rcrb
lds
xchg
lahf
mov
inc
std
mov
xchg
hlt
adc
call
adc
pop
aas
test
mov
sbb
mov
jbe
push
lret
pop
jg
test
push
shlb
pop
mov
sbb
pop
mov
adc
shl
cmpb
das
lret
jnp
dec
ja
mov
push
add
dec
mov
outsl
inc
nop
call
cld
jle
data16
sbb
ficoml
daa
mov
mov
out
mov
mov
mov
cmpl
shrb
hlt
pop
outsb
xchg
add
cmp
lcall
pop
xchg
sub
mov
pop
clc
or
test
push
mov
fists
inc
addr16
fwait
push
add
in
mov
das
dec
leave
xor
inc
arpl
adc
push
mov
aaa
pop
in
push
loope
inc
call
cwtl
call
scas
push
out
aaa
push
clc
inc
addb
jmp
cltd
scas
xlat
loopne
lret
xor
mov
in
pop
shl
push
mov
push
inc
aad
in
ljmp
bound
inc
xchg
out
xor
orb
sub
push
in
cmp
pop
cmp
outsb
xor
or
xchg
movsb
loope
mov
das
sub
dec
dec
cmc
scas
repz
xor
mov
xchg
and
hlt
js
scas
dec
rol
std
shlb
pop
xchg
idivl
sub
xchg
lahf
pop
repnz
and
add
jle
cmc
mov
out
mov
pop
push
mov
ret
mov
flds
push
ljmp
xor
and
push
mov
roll
outsb
mov
push
or
adc
ljmp
into
movsl
adc
bswap
fsts
xchg
test
lods
sub
sbb
and
xorb
fcoms
add
scas
iret
jb
leave
jae
and
movsb
push
inc
xchg
sbb
test
pop
adc
out
dec
jbe
mov
into
lea
inc
fsubr
inc
clc
fs
jns
stc
xor
xchg
inc
fidivl
lcall
mov
lock
imul
ss
test
cs
mov
call
mov
loope
into
cs
inc
out
add
addl
pop
std
pop
jmp
icebp
and
subb
aam
into
mov
iret
test
jg
pop
es
outsb
mov
jbe
out
lret
sbb
loope
push
adc
cmpl
adc
mov
jle
cmp
pushf
in
adc
outsb
push
sbb
cmpsl
push
data16
jno
ds
outsl
sub
mov
add
xchg
out
mov
dec
or
sbb
rolb
pop
outsb
sti
ret
neg
jmp
pop
test
or
xchg
popa
mov
fiadds
add
add
xor
cltd
or
pop
insl
les
jo
hlt
xor
push
fisttpl
movsb
loopne
jmp
mov
mov
sub
jl
out
sub
xchg
sbb
mov
repnz
inc
ficomps
fcmovbe
jge
fucom
jmp
aam
push
adc
adc
imul
mov
in
adc
pop
dec
arpl
insb
fsqrt
arpl
outsb
and
dec
imul
in
addr16
cmp
in
dec
add
inc
rorb
mov
xor
mov
insb
fstpt
stc
inc
xor
insb
jecxz
fistps
or
pop
fnstenv
lods
push
fiadds
cmp
xlat
push
cmpb
hlt
mov
mov
and
mov
movsl
movaps
mov
or
or
mov
or
and
outsl
jl
pop
push
sbb
cmp
add
jno
cwtl
shlb
mov
jno
test
lahf
mov
aam
js
leave
mov
xchg
or
sbb
or
sub
out
pop
add
push
hlt
sbb
popa
bound
bound
dec
insb
push
xchg
in
sbb
movsl
jnp
or
shl
les
mov
adc
mov
jl
fstpl
dec
mov
jl
sti
aam
gs
mov
pop
cmp
add
xor
dec
fbld
xlat
movsb
rol
insl
rcl
hlt
sti
inc
imul
cld
lods
mov
pusha
mov
jae
add
pop
fisttpll
jno
daa
add
mov
or
xchg
mov
and
mov
data16
into
popa
in
pop
fdivrp
push
sub
leave
cwtl
mov
cwtl
and
xlat
test
pop
mov
pop
cs
xorl
mov
mov
add
rcrb
popf
shlb
add
es
jecxz
or
xchg
cmp
push
test
push
iret
or
add
mov
setae
mov
push
mull
pop
andb
sbb
outsb
imul
aam
jbe
shrl
loopne
fidivrl
fisttpll
stc
mov
out
stc
pop
mov
inc
pusha
mov
aad
mov
jle
fadd
les
repnz
sarl
push
addr16
mov
fisttpll
ss
fmuls
sbb
dec
testb
pusha
fbld
ret
test
fists
outsb
mov
inc
imul
sbb
push
ja
mov
add
mov
lds
or
sub
add
xlat
jmp
sub
sahf
mov
scas
sbb
in
arpl
es
mov
or
ss
jb
test
add
xchg
mov
jp
jnp
sub
xchg
rorb
or
or
fbld
xchg
rcl
icebp
aam
inc
push
fiaddl
int
mov
ja
sbb
pop
out
punpckhdq
push
cmp
adc
or
sahf
clc
bound
rcll
insb
iret
inc
mov
or
adcl
ret
es
shlb
testl
ja
scas
shrl
pop
faddl
or
fdivrs
lock
mov
iret
jg
mov
jmp
lret
mov
xchg
xor
mov
add
push
ficoms
and
addr16
les
mov
sub
xchg
mov
mov
mov
sub
add
add
sbb
inc
xor
bound
fs
lds
pop
cmpsl
xchg
xchg
enter
rol
mov
mov
hlt
fxch
lods
mov
or
scas
jle
sahf
subl
dec
ret
push
fldenv
adc
jo
popa
out
inc
xchg
cs
xlat
push
aaa
mov
adc
cwtl
mov
add
sbb
sbb
ss
lcall
insb
sbb
inc
aas
pop
push
sahf
xchg
test
mov
inc
and
call
shl
ret
fiadds
gs
pop
scas
stos
inc
inc
lahf
jmp
imul
jbe
std
imul
sub
or
or
sbb
insl
filds
repz
pop
pop
mov
jo
jno
imul
sub
mull
sbb
jne
pop
mov
sti
push
test
jns
mov
cmp
jns
push
dec
mov
pop
fisubrs
cmp
jns
add
ret
xchg
push
sbb
xchg
adc
mov
cmpl
lds
or
xchg
into
pop
int3
add
inc
xlat
xor
cli
bound
mov
mov
aas
xchg
xchg
push
xchg
cwtl
push
int3
test
shl
cli
lret
xchg
jb
xlat
pop
imul
inc
push
mov
pop
dec
test
unpckhps
sbb
jo
cmp
std
imul
lret
or
add
lahf
loop
cmpsl
int3
and
mov
loope
mov
shr
lahf
adc
insb
leave
dec
and
rclb
ljmp
ja
das
aas
jns
ss
mov
or
je
adc
xor
push
dec
lea
pusha
jle
xor
out
std
ret
rclb
cmp
lcall
js
cmpsl
cmp
sbbl
or
lret
mov
pop
dec
inc
hlt
insb
push
insl
fnstcw
int
ret
repz
adc
inc
and
shrl
ja
adcb
out
movsl
add
test
mov
push
ja
cwtl
pop
insb
adc
ss
daa
sbb
fnstsw
xorl
mov
push
rcr
hlt
lds
out
hlt
push
out
ret
neg
xchg
aad
pop
mov
test
xor
imul
jns
shll
lods
clc
pop
sbb
inc
sub
data16
loope
lds
mov
dec
repz
mov
in
test
xchg
sub
in
scas
mov
repz
cmp
call
imul
or
stos
test
jg
sbb
mov
pop
adc
xor
xor
dec
jo
mov
imul
jp
xorl
pop
mov
lret
cli
xlat
dec
shl
out
stc
int3
mov
loopne
test
mov
and
popf
mov
inc
mov
and
sbb
insb
pop
xor
push
test
cwtl
inc
jle
test
rorb
cmpl
hlt
pop
mov
cmpsl
popf
stos
adc
add
cld
dec
xor
bound
into
jns
fmuls
dec
pop
push
cli
jle
jnp
sub
aam
lea
push
pop
mov
fnop
pop
jle
in
inc
gs
dec
xchg
outsb
jne
mov
call
or
push
aas
sub
mov
sbb
mov
daa
repnz
mov
mov
out
and
loope
or
mov
jle
shlb
imul
inc
cmp
ja
fsubl
mov
jle
hlt
out
push
or
testl
mov
adc
xor
add
add
ret
add
pop
pop
or
jmp
lea
dec
push
test
adc
psrlw
or
push
out
loope
sbb
fs
xchg
push
or
inc
cmp
sbb
mov
sbb
lods
sbb
popa
fwait
sbb
mov
adc
cwtl
call
mov
cmpsb
adc
xchg
adc
xor
push
mov
in
cmp
loopne
sub
cmp
xchg
mov
or
mov
xchg
cmp
pop
pop
pop
aaa
pushf
jge
xor
sbb
test
xchg
aad
xor
imul
adc
frstor
in
and
out
xor
es
dec
dec
and
cltd
and
and
adc
sub
pusha
inc
sub
or
jno
hlt
sub
jbe
cs
enter
mov
shlb
divl
pop
scas
jb
xor
jbe
dec
sub
jb
aad
inc
jle
fdivrl
dec
mov
jge
or
jl
bound
jns
je
js
push
xchg
jp
mov
std
insb
mov
inc
xchg
cli
fisubrs
nop
jmp
push
in
pop
push
repz
arpl
aas
popa
sub
push
cmpsb
xlat
aam
fs
mov
dec
xlat
lret
and
mov
dec
dec
xchg
jne
dec
fisubs
dec
sbb
lret
dec
pop
mov
dec
cwtl
frstor
inc
push
lock
inc
inc
dec
testb
inc
int
inc
inc
addps
dec
out
inc
mov
push
xor
addr16
jne
ds
mov
or
rorb
adc
push
mov
cmp
pop
and
pop
in
xchg
xchg
pop
sub
add
inc
pop
pop
lods
das
insl
loope
sbb
loop
iret
out
jecxz
movsl
cmp
pop
out
fldcw
mov
or
cmp
in
paddsb
hlt
popa
call
in
mov
jmp
ss
imul
rcl
xchg
insb
sahf
call
test
sti
fdivrs
stc
sahf
les
pop
scas
jne
add
dec
bnd
lock
adc
or
cmc
lret
sub
testb
fnstcw
pusha
fdivrs
mov
fstpt
jecxz
fidivs
mov
and
fdivl
dec
in
imul
test
fdivs
shlb
add
mov
jo
shlb
pop
lds
adc
pushf
xchg
daa
fisubrl
jle
sbb
ret
int3
ret
xchg
cmp
rcl
mov
lret
dec
scas
test
pop
lahf
enter
leave
or
icebp
int3
inc
pop
je
xchg
iret
rcl
into
add
inc
nop
insl
cld
ja
sub
xchg
jmp
ds
xchg
fs
stos
xchg
and
repnz
loopne
lds
jle
iret
pushf
cmp
xchg
popf
cli
jns
cwtl
mov
and
ja
adc
repz
mov
pop
mov
mov
sbbb
mov
orb
mov
push
mov
sbb
int3
push
test
arpl
aad
or
test
mov
into
stos
movsb
outsb
stc
scas
jmp
jl
sub
dec
lods
outsl
lods
adc
sbbl
movsb
jne
jbe
mov
inc
mov
cmp
mov
mov
jae
mov
sbb
mov
cmpsl
mov
mov
fisttpl
cmpxchg
mov
punpckldq
xlat
and
adc
testb
xchg
pushf
xor
loopne
mov
cwtl
xor
add
add
mov
or
mov
mov
out
bound
xor
xlat
cmp
jge
dec
mov
loopne
xlat
add
mov
loopne
ja
pop
arpl
push
push
sbb
call
adc
jno
jnp
enter
lods
jne
or
into
outsl
es
lods
jg
sub
movsb
mov
xchg
rcrb
mov
and
xor
pop
or
addr16
xchg
shrb
push
cmp
in
pop
or
pop
lock
in
xchg
xchg
fnstsw
loopne
iret
dec
pop
ja
sub
ljmp
jecxz
in
fmuls
lock
mov
pop
and
sub
sahf
push
dec
jg
outsl
test
or
insl
cld
rcrb
lahf
rorb
and
lds
sub
mov
inc
and
xchg
test
call
cmp
xor
not
adc
iret
push
lret
mov
ret
pusha
test
jo
out
pop
mov
test
fistpll
ret
imul
push
ret
ja
imul
cpuid
jae
push
sub
mov
cwtl
cmc
cld
sar
nop
out
push
jle
fidivl
sbb
mov
inc
sub
mov
cmp
jg
sarb
xchg
outsb
pop
hlt
cmp
testl
xchg
das
aas
mov
xchg
pop
in
mov
pusha
push
or
pop
xor
dec
test
cmpsb
icebp
iret
mov
inc
cs
addr16
daa
jo
jno
dec
mov
xorb
inc
out
imul
pushf
roll
push
jb
pop
aaa
lret
pop
loope
scas
dec
push
incl
call
mov
aaa
out
push
add
inc
clc
mov
jmp
js
mov
xlat
scas
xor
in
pop
mov
push
in
pop
inc
push
jle
in
sbb
bound
and
inc
or
xor
out
mov
aam
push
stc
mov
in
pop
cmp
cmp
xor
or
cmp
movsb
add
dec
sub
scas
cmc
dec
dec
xor
jbe
mov
mov
sbb
rorb
sar
add
push
movsw
notl
cmp
lahf
xchg
xchg
in
icebp
repnz
imul
cmc
xlat
jle
out
rorl
ret
push
jp
jmp
fnop
mov
xor
xor
and
stc
popa
lcall
mov
lods
mov
ss
jb
lcall
xchg
loope
xchg
adc
int
lods
mov
inc
andb
jne
jp
adc
scas
dec
jae
fwait
push
movsb
icebp
and
sbb
test
jbe
out
push
into
icebp
mov
inc
lea
call
inc
xchg
push
xor
es
jmp
mov
or
mov
lock
bound
fwait
push
mov
xchg
xchg
cltd
xor
es
mov
cld
mov
adc
push
ja
ss
adc
out
mov
loopne
jbe
pop
notb
dec
jmp
ds
insb
addb
aam
popa
inc
mov
stos
jle
test
cmp
es
jl
mov
pop
sbb
mov
repz
in
test
adcl
ja
mov
ret
add
cmp
cltd
in
mov
push
outsb
xchg
cmpsl
fidivl
sub
fisubrs
sarl
lock
out
mov
mov
push
inc
sarb
dec
sti
outsb
pop
sub
push
addr16
cmpsb
int3
mov
pop
je
into
jp
mov
push
icebp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
pop
or
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
or
mov
or
dec
add
add
add
add
or
lods
add
add
add
add
add
or
pushf
add
add
add
add
add
or
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
lds
or
and
add
add
or
in
or
adc
add
add
or
aad
or
xor
add
add
or
cmc
add
add
add
add
or
int
or
sub
add
add
or
in
add
add
add
add
or
fldl
or
cmp
add
add
or
std
add
add
add
add
add
add
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
or
jae
or
repz
add
add
add
add
add
add
add
add
add
or
dec
add
add
add
add
add
add
add
add
add
add
add
add
or
imul
add
add
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
add
add
add
add
add
add
add
add
or
jnp
or
sti
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
or
ja
or
testl
or
str
add
add
add
add
add
or
dec
add
add
add
add
add
add
add
add
add
add
add
add
or
outsl
add
add
add
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
add
add
add
add
add
add
add
add
or
jg
or
incl
or
incl
or
add
pop
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
pop
pop
pop
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
sldt
adc
adc
adc
adc
adc
adc
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
or
or
or
or
or
or
push
push
push
movups
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
sbb
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
add
add
add
pusha
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
arpl
jo
je
bound
jbe
jb
imul
bound
data16
gs
outsl
jb
add
add
jae
data16
je
insl
gs
outsl
jb
add
popa
and
jb
jb
add
jb
popa
insl
and
jb
jb
add
add
insb
and
jb
jb
add
jb
popa
insl
and
add
outsb
gs
je
outsl
outsb
popa
jb
add
push
add
add
or
pop
dec
push
add
push
add
push
add
dec
push
add
dec
push
add
dec
push
add
or
and
data16
popa
je
and
xor
xor
inc
outsl
jo
jb
addr16
cmp
xor
imul
fs
gs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
jae
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
push
add
add
adc
sbb
and
xor
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
sbb
sbb
add
jae
jb
outsb
and
outsl
and
add
jbe
insb
imul
and
jae
je
outsl
outsb
add
adcb
sub
pushl
xor
xor
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
add
add
add
adc
or
or
or
or
or
or
or
or
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
xor
xor
xor
ss
cmp
popa
bound
gs
inc
inc
inc
inc
inc
add
add
add
add
push
pop
or
or
or
push
or
add
and
add
inc
add
inc
and
pop
scas
lds
add
add
add
add
add
pop
inc
add
add
add
add
test
xchg
inc
add
inc
inc
pop
outsb
add
inc
cmc
stc
aas
jmp
xor
sbbb
jae
fisttpll
jne
add
add
add
add
pop
inc
add
add
add
add
test
xchg
inc
add
inc
inc
pop
outsb
add
inc
cmc
stc
aas
jmp
xor
sbbb
jae
fisttpll
jne
add
add
push
add
dec
add
pop
dec
add
imul
outsb
and
arpl
je
outsl
outsb
add
add
adcl
fistpl
add
insl
loopne
add
add
add
add
add
add
add
add
inc
adcl
inc
outsl
jb
js
je
jb
arpl
jae
add
arpl
gs
insb
add
imul
imul
dec
cmp
cmp
add
add
fs
dec
dec
dec
dec
and
and
jns
add
das
fs
jns
add
add
push
dec
add
inc
dec
add
inc
arpl
bound
add
add
dec
outsl
jbe
insl
bound
add
add
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
insb
jns
add
add
outsb
add
add
inc
jo
imul
arpl
add
inc
bound
popa
jb
add
add
dec
popa
outsb
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
insb
add
outsb
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outsb
add
je
jb
popa
jns
add
add
imul
jne
jae
popa
jns
add
add
outsb
gs
popa
jns
add
push
jne
jae
popa
jns
dec
outsl
outsb
fs
jns
add
outsb
fs
jns
add
je
inc
jb
add
add
add
add
outsb
add
outsb
add
push
dec
dec
inc
add
dec
push
dec
inc
push
dec
inc
add
dec
inc
pop
dec
dec
dec
inc
push
inc
push
pop
add
inc
push
pop
push
inc
add
add
dec
inc
pop
inc
dec
dec
dec
inc
push
inc
add
dec
inc
pop
inc
dec
dec
add
add
add
xor
push
add
add
add
jge
add
push
push
add
testl
sbb
push
add
testl
adc
add
testl
add
push
add
testl
cld
push
push
add
testl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
add
sub
pop
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
jnp
jge
jg
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
adcl
fistpl
add
and
arpl
je
outsl
outsb
add
add
fcoms
cs
imul
outsb
arpl
gs
outsl
imul
add
outsl
fs
outsl
imul
add
jae
jb
add
jae
gs
popa
insb
jne
add
jae
gs
popa
insb
jne
add
jae
insb
insb
outsl
arpl
add
add
outsb
je
insl
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
xor
xor
or
and
jo
imul
and
jae
insl
popa
fs
and
je
insl
jo
and
insb
outsl
popa
and
and
jb
outsb
je
insl
and
jb
jb
and
arpl
jb
arpl
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
add
add
xor
xor
je
gs
jo
and
jne
and
dec
dec
and
fs
outsl
insl
and
jae
popa
jae
gs
bound
fs
imul
imul
and
imul
je
outsl
outsb
or
jae
imul
gs
popa
and
and
and
jne
and
jo
imul
and
and
and
jae
and
gs
jns
je
and
jae
insb
je
outsl
data16
insb
insb
imul
dec
push
dec
dec
sub
imul
insb
jb
and
outsb
arpl
outsb
and
outsl
insl
and
outsb
popa
je
jbe
and
outsb
jae
jb
arpl
and
and
outsl
insl
and
dec
popa
imul
push
xor
xor
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
arpl
and
outsw
jb
popa
je
outsl
outsb
or
add
add
xor
xor
je
gs
jo
and
imul
imul
and
push
and
jb
and
outsb
and
arpl
or
jae
imul
gs
popa
and
and
and
jne
and
jo
imul
cs
xor
xor
push
push
and
je
imul
imul
add
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
push
push
jo
insb
imul
and
jae
jb
jno
gs
gs
and
outsb
je
insl
and
je
jb
imul
je
imul
outsb
jne
jne
insb
and
jns
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
jo
jb
and
je
insb
outsl
popa
fs
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
cs
jb
addr16
insl
and
insl
and
imul
outsb
add
push
jne
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
add
sub
outsb
add
insb
add
add
add
add
outsb
jne
insb
sub
add
add
push
add
add
adc
add
add
add
add
inc
inc
add
xor
add
add
and
push
pop
pop
or
aaa
xor
push
push
pop
add
and
or
add
add
pusha
push
add
js
js
js
or
or
add
add
or
add
or
or
pop
or
add
sub
xor
add
sarb
inc
add
add
dec
jae
jb
arpl
jae
jb
gs
je
jb
push
jb
jae
outsb
je
add
dec
inc
push
dec
inc
dec
xor
add
add
arpl
cmp
push
push
inc
sub
push
push
inc
sub
add
add
push
dec
dec
inc
dec
inc
inc
add
arpl
jae
cmp
add
push
add
sub
add
push
add
sub
add
add
add
add
dec
add
inc
add
inc
add
add
push
pop
add
push
jne
dec
outsl
outsb
push
jne
push
gs
push
push
popa
je
add
dec
popa
outsb
inc
bound
jb
jo
dec
popa
jns
jne
dec
jne
inc
jne
push
gs
arpl
jbe
arpl
add
add
imul
je
jae
add
jne
imul
outsl
insl
add
je
imul
and
popa
outsl
add
add
jne
push
gs
add
jne
push
imul
jae
jne
push
gs
add
jne
push
imul
jae
outsl
jbe
imul
jo
gs
outsl
sub
add
sub
popa
add
add
jo
and
imul
outsb
jp
add
ja
jp
popa
insb
popa
outsb
add
outsb
addr16
add
add
insb
insb
popa
outsb
add
gs
je
bound
je
imul
insb
popa
outsb
add
arpl
add
arpl
outsb
popa
add
add
imul
gs
arpl
jne
popa
add
add
jne
add
jae
imul
ja
imul
insb
popa
outsb
add
popa
outsb
imul
gs
gs
popa
add
add
popa
outsb
imul
addr16
jns
jae
popa
outsb
imul
jb
outsl
and
arpl
jae
popa
outsb
imul
jne
add
add
popa
outsb
imul
popa
addr16
jns
add
add
popa
outsb
imul
popa
insl
popa
add
jae
popa
outsb
imul
popa
jb
addr16
add
add
popa
outsb
imul
gs
add
jae
popa
outsb
imul
imul
popa
outsb
imul
fs
popa
jae
add
add
popa
outsb
imul
je
insl
popa
insb
popa
add
add
popa
outsb
imul
jae
insb
jbe
outsl
jb
jae
popa
outsb
imul
popa
outsl
jb
jae
popa
outsb
imul
imul
jb
jo
bound
add
jae
popa
outsb
imul
je
and
arpl
add
popa
outsb
imul
outsl
insl
bound
add
add
jae
popa
outsb
imul
insb
add
add
popa
outsb
imul
imul
popa
outsb
imul
outsb
je
outsb
popa
add
add
jb
jne
jne
jae
sub
imul
add
jb
imul
outsl
jb
imul
add
jb
imul
insl
popa
insb
add
add
outsb
outsl
jb
imul
je
insb
imul
jae
add
add
imul
insb
imul
gs
popa
outsb
sub
jae
add
add
jb
popa
outsb
sub
insl
bound
jb
add
add
jb
popa
outsb
sub
je
outsb
jae
imul
popa
outsb
sub
jb
popa
outsb
add
outsb
arpl
jae
imul
data16
outsb
arpl
insb
jne
gs
bound
jb
add
add
outsb
arpl
arpl
popa
imul
outsb
arpl
bound
imul
insb
imul
add
insb
imul
add
insb
imul
add
insb
imul
outsb
imul
outsl
bound
outsl
add
add
insb
imul
je
and
jb
arpl
add
add
insb
imul
add
insb
imul
popa
imul
insb
imul
add
insb
imul
imul
add
outsb
insb
imul
add
insb
imul
imul
insb
imul
add
insb
imul
jb
arpl
add
add
fs
arpl
bound
imul
push
gs
imul
arpl
outsb
gs
sub
popa
jo
jb
add
add
imul
imul
gs
arpl
outsb
gs
sub
imul
add
add
arpl
outsb
gs
add
imul
arpl
popa
imul
bound
imul
je
popa
insb
imul
gs
arpl
sub
imul
popa
insl
gs
arpl
and
insb
imul
popa
insl
gs
arpl
loopne
push
add
push
add
push
push
add
dec
push
add
inc
add
inc
add
dec
inc
add
dec
add
dec
dec
add
dec
push
add
add
dec
add
push
add
push
add
add
dec
add
push
push
add
push
inc
add
push
add
push
add
push
inc
add
addr16
add
dec
add
addr16
add
inc
add
addr16
add
inc
add
addr16
add
dec
add
dec
add
dec
pop
add
dec
push
add
add
push
add
push
add
inc
add
add
push
add
push
add
push
add
push
add
inc
add
addr16
add
inc
add
push
add
dec
add
push
add
push
add
push
add
add
push
add
add
push
add
add
push
add
add
dec
add
push
add
dec
push
add
push
add
push
add
dec
add
push
add
inc
add
add
push
add
push
add
inc
add
push
add
dec
add
push
add
dec
add
push
add
inc
add
gs
add
inc
add
gs
add
inc
add
gs
add
inc
add
push
inc
add
dec
add
dec
add
add
dec
add
push
add
dec
add
push
add
inc
add
add
pop
add
push
add
gs
add
push
add
gs
add
pop
add
fs
add
push
add
fs
add
inc
add
fs
add
add
fs
add
inc
add
fs
add
push
add
fs
add
push
add
fs
add
inc
add
fs
add
push
add
fs
add
dec
add
pop
inc
add
inc
push
add
inc
push
add
dec
inc
add
inc
add
pop
dec
add
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
push
add
dec
add
push
add
inc
add
push
add
push
add
push
add
inc
add
fs
add
push
add
push
add
add
fs
add
push
add
arpl
inc
inc
push
add
arpl
push
push
inc
add
fs
add
inc
add
sbb
adc
add
or
adc
or
add
push
add
jb
imul
outsl
jb
imul
add
inc
outsl
insl
jo
gs
and
push
arpl
outsl
arpl
outsl
jb
add
add
inc
insb
popa
jae
and
gs
jb
push
jae
jb
jo
outsl
jb
add
add
and
jae
and
popa
jae
and
jb
jns
add
and
jae
and
popa
jae
and
arpl
jo
outsl
jb
popa
je
sub
and
and
arpl
jo
outsl
jb
add
add
outsl
arpl
and
popa
je
arpl
je
jb
popa
and
popa
jb
daa
add
popa
outsb
popa
gs
arpl
and
jo
and
outsb
jae
jb
arpl
and
gs
je
jb
add
pusha
jbe
arpl
and
popa
jae
and
jo
and
outsb
jae
jb
arpl
and
gs
je
jb
add
add
pusha
jbe
arpl
and
jo
and
outsb
jae
jb
arpl
and
gs
je
jb
add
pusha
fs
popa
insl
imul
imul
jne
je
jb
outsw
jb
daa
add
add
pusha
fs
popa
insl
imul
imul
and
jb
daa
add
pusha
gs
je
jb
jbe
popa
jae
and
jo
and
outsb
jae
jb
arpl
and
gs
je
jb
add
push
je
jb
arpl
jns
arpl
jae
jb
arpl
and
gs
je
jb
add
add
popa
outsb
popa
gs
arpl
and
je
jne
je
jb
imul
daa
add
add
pusha
insl
popa
outsb
popa
gs
arpl
and
outsb
jae
jb
arpl
and
gs
je
jb
add
add
insb
popa
arpl
outsb
je
fs
gs
pop
pop
and
outsl
jae
jb
daa
add
add
pusha
jo
popa
arpl
outsb
je
fs
gs
and
outsl
jae
jb
daa
add
pusha
outsl
insl
outsb
imul
jae
addr16
add
and
gs
pop
pop
add
add
outsb
gs
pop
add
pusha
insb
outsl
arpl
and
je
bound
arpl
jae
jb
arpl
and
outsl
jae
jb
daa
add
outsl
arpl
and
je
bound
add
push
push
dec
add
add
dec
add
fs
jb
je
jb
imul
outsl
jo
and
outsb
jae
jb
arpl
and
outsl
jae
jb
daa
add
pusha
gs
je
jb
jbe
popa
jae
and
outsb
jae
jb
arpl
and
gs
je
jb
add
pusha
gs
je
jb
fs
jb
arpl
and
gs
je
jb
add
push
je
jb
arpl
jae
jb
arpl
and
gs
je
jb
add
add
pusha
jbe
jb
jne
insb
and
jo
popa
arpl
outsb
je
insl
popa
jo
add
pusha
jbe
arpl
and
popa
jae
and
outsb
jae
jb
arpl
and
gs
je
jb
add
arpl
and
je
jne
je
jb
imul
daa
add
add
pusha
jbe
arpl
and
outsb
jae
jb
arpl
and
gs
je
jb
add
add
arpl
popa
jb
fs
gs
outsb
and
jae
jb
arpl
daa
add
add
pusha
fs
jne
je
arpl
jae
jb
arpl
and
outsl
jae
jb
daa
add
add
arpl
and
gs
outsb
and
jae
jb
arpl
daa
add
add
pusha
jbe
popa
jae
and
je
jne
je
jb
add
pusha
jae
jb
outsb
addr16
add
add
pusha
insb
outsl
arpl
and
popa
je
arpl
addr16
jb
daa
add
add
pusha
je
jo
outsl
data16
add
add
pusha
jbe
popa
insb
insb
daa
add
bound
insb
gs
add
add
data16
bound
add
add
add
jl
add
es
cmp
add
cmp
add
sub
add
jl
add
es
jl
add
pop
add
add
add
sub
add
sub
add
ds
add
cmp
add
cmp
add
and
add
add
add
add
add
add
sub
add
sub
jo
jb
je
jb
add
add
add
and
add
and
add
cmp
add
ds
and
gs
add
outsb
gs
add
add
jne
popa
insb
imul
pop
jb
jae
jb
arpl
pop
pop
jo
jb
xor
pop
pop
arpl
popa
insb
insb
add
add
popaw
jae
arpl
insb
add
pop
pop
je
imul
add
jae
arpl
insb
add
add
jo
jae
popa
insb
add
add
pop
pop
arpl
insb
add
bound
gs
add
add
add
add
push
add
push
add
add
push
add
push
add
jno
add
push
add
push
add
jno
add
push
add
or
dec
insb
push
add
insb
push
add
push
add
imul
imul
jo
add
jo
add
push
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
push
add
jo
add
jo
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
jo
add
push
add
push
add
jo
add
outsl
push
add
outsl
push
add
push
add
add
add
outsl
push
add
push
add
outsb
push
add
outsb
push
add
outsb
push
add
add
push
add
push
add
push
add
push
add
push
add
outsb
push
add
outsb
push
add
insl
push
add
insl
push
add
push
add
add
insl
push
add
push
add
insb
push
add
insb
push
add
push
add
or
inc
gs
jb
arpl
jae
imul
popa
je
outsl
outsb
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
inc
push
xor
cs
dec
dec
add
push
addb
add
add
adc
add
test
xor
or
sub
cmp
addb
add
xor
push
push
mov
add
and
orb
pusha
push
or
pop
js
jo
jo
or
add
or
or
pop
or
add
xor
push
dec
inc
dec
add
xor
dec
dec
inc
add
add
and
inc
add
add
and
inc
dec
add
inc
dec
dec
dec
push
push
and
fadds
dec
add
outsl
dec
add
ja
add
outsl
dec
add
jb
outsl
jb
and
outsl
jne
and
jbe
jb
bound
arpl
insb
gs
add
add
dec
add
jo
add
js
add
jno
add
outsl
dec
add
dec
push
dec
pop
add
add
jae
gs
add
les
dec
add
jo
add
outsl
dec
add
outsl
dec
add
outsb
imul
outsb
and
jb
jb
add
bound
jae
cmp
insb
outsl
arpl
gs
outsl
jb
add
bound
jae
cmp
je
jb
popa
fs
jb
jae
jne
arpl
gs
outsl
jb
add
add
add
add
jae
popa
insb
and
sub
inc
push
push
cmp
dec
outsl
je
outsb
outsl
jne
push
outsl
jb
and
arpl
jo
gs
and
insb
insb
and
jae
jb
jb
outsl
jb
add
insb
gs
insb
and
je
and
jno
outsb
arpl
add
inc
imul
jns
outsb
outsl
je
gs
jo
jns
inc
jne
arpl
outsb
and
je
imul
outsb
je
add
add
dec
outsl
and
imul
jbe
imul
inc
imul
je
outsl
and
add
add
jae
jne
arpl
fs
fs
outsl
arpl
popa
jbe
imul
gs
insb
je
je
outsl
and
add
add
inc
outsl
insl
popa
imul
jb
add
add
outsl
imul
jo
jo
add
and
outsb
jns
insb
imul
gs
fs
and
insb
and
jae
gs
add
add
jbe
insb
imul
add
add
and
popa
arpl
insb
gs
outsl
outsb
and
imul
and
and
add
dec
outsb
popa
jo
jb
jo
imul
dec
and
outsb
je
outsl
insb
and
gs
je
outsl
outsb
add
and
outsb
jns
outsl
jo
outsb
and
insb
gs
push
outsl
outsl
and
outsb
jns
outsl
jo
outsb
and
insb
gs
imul
gs
add
add
jbe
insb
imul
outsb
je
add
add
and
imul
jns
add
je
popa
and
arpl
jns
dec
outsl
and
arpl
fs
arpl
add
jo
outsl
jo
jb
insb
imul
imul
je
add
jae
jne
arpl
fs
arpl
inc
popa
and
fs
jae
add
jb
imul
fs
imul
outsl
je
outsb
outsl
jne
push
arpl
add
add
jae
jne
arpl
je
insl
jo
jb
jb
insb
jns
jne
popa
jbe
imul
add
dec
outsl
and
imul
gs
gs
add
and
insb
and
arpl
jo
outsl
jb
inc
js
arpl
outsw
jb
popa
je
gs
outsl
jb
add
inc
jb
and
je
je
outsl
and
add
add
and
arpl
fs
arpl
outsl
jb
popa
fs
jae
add
add
jo
je
outsl
jne
jo
je
gs
outsl
jb
add
je
jb
jne
je
and
outsb
arpl
outsb
and
insb
insb
add
add
and
arpl
jo
outsl
arpl
jae
dec
outsl
and
arpl
imul
and
arpl
jns
add
dec
jo
jb
je
outsl
outsb
and
je
jo
jb
imul
and
jb
jb
add
add
add
shl
dec
add
adcl
add
add
dec
add
add
add
add
push
add
add
sbb
dec
add
add
add
add
add
incl
add
add
add
jl
push
add
add
add
add
add
incl
add
add
add
sarb
add
add
add
js
add
add
aam
dec
add
js
add
add
add
push
add
push
add
jns
add
add
aam
dec
add
add
add
add
add
incl
add
add
add
cld
js
add
add
add
add
incl
add
add
add
push
jns
add
add
add
add
jns
add
add
lods
jmp
push
add
add
add
push
add
add
add
add
add
add
incl
add
add
add
test
add
jmp
push
add
add
add
jns
add
jns
add
add
int3
jmp
add
add
add
incl
add
add
add
int3
jns
add
jmp
push
add
add
add
jp
add
push
add
add
in
jmp
add
add
add
incl
add
add
add
sbb
add
jmp
add
add
add
add
add
jp
add
add
add
jmp
add
add
add
add
add
incl
add
add
add
fs
add
add
add
add
add
incl
add
add
add
mov
add
add
add
add
add
add
jp
add
add
mov
dec
add
add
add
jmp
add
jp
add
add
add
jnp
add
push
add
jnp
add
add
add
jmp
add
add
add
add
add
incl
add
add
add
clc
jp
add
jmp
add
add
add
add
incl
add
add
add
dec
jnp
add
add
add
add
add
add
add
jmp
add
incl
add
add
add
dec
jnp
add
jmp
add
add
add
add
add
add
movsb
jnp
add
push
add
jnp
add
add
add
jmp
add
add
add
add
add
incl
add
add
add
xchg
jnp
add
add
add
add
add
add
add
dec
add
jnp
add
add
hlt
jnp
add
jl
add
push
add
push
add
add
add
add
dec
add
add
add
add
add
incl
add
add
add
in
push
add
jmp
add
add
add
add
push
add
add
dec
add
add
add
add
inc
add
add
jp
add
jmp
add
add
add
add
add
add
add
add
inc
add
add
add
dec
add
add
add
add
add
add
pushf
jl
add
push
add
add
jo
dec
add
add
add
add
add
incl
add
add
add
mov
xchg
in
dec
add
jl
add
add
add
jl
add
jl
add
add
xchg
in
dec
add
add
add
add
add
incl
add
add
add
fdivrl
mov
dec
add
jge
add
add
add
jge
add
push
add
jl
add
add
mov
dec
add
add
add
add
add
incl
add
add
add
sub
add
in
dec
add
push
add
add
add
jge
add
add
shr
dec
add
add
add
add
add
incl
add
add
add
js
push
add
dec
add
jge
add
add
add
jge
add
jge
add
add
inc
icebp
dec
add
add
add
add
add
incl
add
add
add
les
add
push
add
add
add
jle
add
push
add
add
mov
dec
add
add
add
add
add
incl
add
add
add
adc
add
dec
add
add
add
add
add
add
push
add
add
pusha
icebp
dec
add
add
add
add
add
incl
add
add
add
pop
jle
add
call
push
add
add
add
push
add
jge
add
add
cld
call
add
add
add
incl
add
add
add
lods
jle
add
icebp
dec
add
jle
add
add
or
push
add
jg
add
jle
add
jge
add
add
aam
dec
add
add
add
add
add
incl
add
add
add
cld
jle
add
dec
add
push
add
add
pusha
jg
add
add
jle
add
jge
add
add
add
dec
add
add
add
add
add
incl
add
add
add
push
jg
add
dec
add
add
add
add
add
add
mov
push
add
jg
add
jle
add
jge
add
add
sub
dec
add
add
add
add
add
incl
add
add
add
movsb
jg
add
push
add
add
add
adcb
adcb
jle
add
add
mov
dec
add
add
add
add
add
incl
add
add
add
clc
jg
add
add
push
add
add
add
push
add
push
add
jge
add
add
push
repnz
add
add
add
add
add
incl
add
add
add
dec
adcb
add
add
add
add
add
add
add
add
add
adcb
js
add
add
add
add
add
add
add
add
incl
add
add
add
cwtl
adcb
add
add
repnz
add
adcb
add
add
add
add
add
add
adcb
adcl
add
add
in
dec
add
add
add
add
add
incl
add
add
add
in
push
add
js
add
push
add
hlt
dec
add
push
add
add
add
push
add
push
add
add
add
hlt
dec
add
incl
add
add
add
pop
adcl
xchg
testl
add
add
mov
push
add
push
add
add
add
add
add
add
incl
add
add
add
mov
add
add
adcl
add
add
add
add
cld
adcl
and
push
add
add
add
add
add
add
add
incl
add
add
add
in
adcl
add
add
add
add
incl
add
add
add
inc
adcb
add
add
add
add
add
add
push
add
push
add
add
add
or
incl
add
add
add
inc
adcb
add
add
push
add
add
add
add
add
add
add
adcb
adcb
adcb
add
add
push
add
add
add
add
add
incl
add
add
add
mov
add
dec
or
fadds
add
add
add
add
add
call
adcb
adcb
adcb
add
add
push
add
add
add
add
add
incl
add
add
add
fadds
add
and
add
je
add
push
push
add
cmp
add
fwait
push
add
fwait
push
add
push
add
push
add
pushf
push
add
popf
push
add
popf
push
add
popf
push
add
sahf
push
add
push
add
sahf
push
add
sahf
push
add
lahf
push
add
push
add
lahf
push
add
lahf
push
add
mov
push
add
mov
push
add
push
add
mov
push
add
mov
push
add
mov
push
add
mov
push
add
push
add
push
add
movsb
push
add
movsl
push
add
push
add
push
add
movsl
push
add
cmpsb
push
add
cmpsb
push
add
push
add
cmpsl
push
add
push
add
cmpsl
push
add
cmpsl
push
add
test
add
push
add
push
add
test
add
test
push
add
test
push
add
stos
push
add
push
add
stos
push
add
push
add
stos
push
add
stos
push
add
lods
push
add
push
add
lods
push
add
lods
push
add
push
add
lods
push
add
lods
push
add
scas
push
add
push
add
scas
push
add
scas
push
add
push
add
scas
push
add
mov
add
mov
add
push
add
mov
add
mov
add
mov
add
push
add
mov
add
mov
add
mov
add
push
add
mov
add
push
add
push
add
push
add
push
add
mov
add
mov
add
mov
add
push
add
mov
add
push
add
mov
add
mov
add
mov
push
add
mov
push
add
mov
push
add
mov
push
add
push
add
mov
push
add
push
add
mov
push
add
add
mov
push
add
mov
push
add
mov
push
add
rolb
pop
rolb
fwait
rolb
fcmovnb
push
add
roll
push
roll
xchg
roll
rol
add
roll
ds
add
add
ret
inc
push
add
push
add
ret
push
add
ret
push
add
ret
push
add
les
add
push
add
push
add
les
add
lds
add
push
add
push
add
lds
add
lds
add
movb
pop
movb
mov
push
add
movl
add
enter
enter
enter
enter
enter
leave
push
add
leave
push
add
push
add
leave
push
add
lret
jns
push
add
lret
or
push
add
lret
push
add
push
add
lret
push
add
lret
push
add
push
add
int3
push
add
push
add
int3
push
add
inc
jnp
add
add
add
addb
add
jmp
jnp
add
add
add
lods
xchg
decl
dec
add
add
add
dec
add
add
add
fadds
add
and
add
xor
add
incl
dec
add
decl
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
test
add
jmp
add
add
add
add
add
add
add
add
jl
add
dec
jl
add
jl
add
jl
add
jl
add
add
add
pop
dec
add
add
add
push
add
add
add
add
add
call
jge
add
add
add
jge
add
add
add
jge
add
add
add
jge
add
add
add
jge
add
add
add
jge
add
add
add
jge
add
add
add
jge
add
pushl
jge
add
add
add
push
add
add
add
add
add
incl
add
add
add
insl
pop
dec
add
pushl
dec
add
add
add
dec
add
add
add
add
add
add
add
insb
mov
pushl
add
add
mov
push
add
jmp
jge
add
add
add
fmull
add
call
jle
add
add
add
or
add
xchg
and
mov
dec
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
add
add
cwtl
mov
add
add
add
add
add
add
add
add
inc
mov
add
add
add
add
xor
push
add
ljmp
dec
add
add
add
dec
add
add
add
rorb
add
ljmp
add
add
add
add
hlt
mov
add
add
add
add
add
add
add
add
push
mov
jmp
jle
add
add
add
call
add
fsubs
dec
add
add
add
call
add
push
sub
and
add
cmp
push
add
add
add
mov
add
dec
add
add
add
mov
jmp
jg
add
add
add
test
push
add
add
add
mov
push
mov
add
add
sbb
dec
add
add
add
incl
add
add
add
shrb
dec
add
call
dec
add
add
add
cld
mov
incl
add
add
sub
add
pushl
add
add
push
mov
jmp
jg
add
add
add
orb
add
jmp
orb
add
add
lods
mov
call
dec
add
add
add
fmuls
add
incl
add
add
add
push
add
add
add
push
mov
mov
add
add
add
add
orb
add
add
orb
add
add
orb
add
add
sub
add
add
mov
jmp
orl
add
add
mov
add
add
add
mov
in
push
add
push
add
add
add
call
add
incl
add
add
add
shrb
add
add
add
add
incl
add
add
add
add
call
dec
add
add
add
add
add
incl
add
add
add
add
sub
push
add
inc
orl
add
add
pusha
lea
push
orl
add
add
mov
add
jmp
orb
add
add
mov
add
add
pop
dec
add
add
add
mov
jmp
dec
add
add
add
dec
add
add
add
hlt
lea
add
add
in
push
add
push
add
call
add
add
xor
push
add
inc
orb
add
add
orb
add
add
pusha
mov
sarb
dec
add
add
add
mov
and
add
enter
incl
orl
add
add
orl
add
add
orl
add
add
orl
add
add
add
add
dec
add
add
add
push
add
push
add
add
add
jmp
add
incl
add
add
add
add
cmp
pushl
dec
add
add
add
dec
add
add
add
and
add
jmp
add
add
add
add
push
push
add
call
orl
add
add
orl
add
add
mov
add
and
add
loopne
push
add
incl
test
add
add
or
add
test
add
add
push
test
add
add
sub
call
dec
add
add
add
dec
add
add
add
or
add
incl
add
add
cmp
push
add
inc
test
and
add
push
add
add
incl
test
and
add
xchg
nop
push
add
incl
dec
add
add
add
rclb
add
inc
dec
add
incl
add
add
incl
add
add
add
add
add
add
nop
push
add
add
add
cld
nop
push
add
add
add
push
add
call
add
add
inc
xchg
push
add
incl
add
add
incl
add
add
add
add
add
add
push
add
add
add
adcb
add
add
add
out
test
add
add
loopne
dec
add
add
add
enter
jmp
xchg
and
add
cld
xchg
push
add
add
add
dec
xchg
push
add
decl
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
jnp
dec
add
xchg
push
add
add
call
xchg
add
add
fadds
add
jecxz
dec
add
add
add
mov
add
call
xchg
add
add
sbb
add
sub
xchg
sbb
add
add
xchg
push
add
jmp
dec
add
add
add
add
push
add
call
add
add
xor
add
inc
xchg
and
add
pop
xchg
push
add
push
xchg
and
add
mov
add
jmp
mov
and
add
mov
push
add
jg
add
dec
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
push
add
add
add
add
add
xchg
push
add
pushl
dec
add
add
add
insb
xchg
push
add
incl
add
add
incl
add
add
add
add
add
add
add
aam
dec
add
add
add
add
add
call
add
fmuls
xchg
sbb
add
add
add
add
add
add
add
add
and
push
add
inc
mov
dec
mov
call
mov
add
add
fmuls
add
loopne
dec
add
add
add
mov
push
mov
jmp
mov
and
add
pop
xchg
push
add
call
dec
add
add
add
mov
add
incl
add
add
mov
push
add
pushl
add
add
loopne
push
add
jmp
mov
call
incl
mov
and
add
or
push
add
pushl
mov
and
add
dec
xchg
push
add
jmp
dec
add
add
add
je
push
add
call
add
add
mov
add
add
cltd
dec
add
add
add
push
add
add
add
add
add
inc
mov
add
add
enter
add
add
rorb
add
fmuls
jmp
mov
add
add
jmp
dec
add
mov
add
add
sti
mov
incl
mov
or
add
push
mov
add
add
pusha
xchg
push
add
push
add
push
add
add
add
dec
add
add
add
incl
add
add
add
add
fwait
dec
add
incl
dec
add
decl
dec
add
add
add
dec
add
add
add
jl
push
add
incl
decl
add
add
add
add
mov
add
add
inc
mov
and
add
hlt
xchg
push
add
push
mov
and
add
and
add
jmp
mov
and
add
dec
cwtl
push
add
jmp
dec
add
add
add
dec
add
add
add
js
push
add
call
add
add
lods
cwtl
push
add
inc
mov
dec
mov
add
add
mov
and
add
fcomps
add
call
lea
and
add
adc
push
add
incl
dec
add
add
add
inc
cltd
push
add
pushl
dec
add
js
dec
add
add
add
insb
cltd
push
add
dec
add
add
add
add
add
add
add
add
mov
add
add
call
add
add
add
add
jmp
ljmp
add
add
add
add
add
add
add
add
add
add
mov
jmp
lea
and
add
sbb
add
xchg
test
add
add
add
add
add
add
add
inc
lcall
adc
incl
add
add
incl
add
add
add
add
push
add
add
add
scas
dec
add
add
add
add
add
add
add
add
add
xchg
sbb
lcall
mov
push
add
incl
dec
add
decl
dec
add
add
add
add
add
add
add
add
add
call
dec
add
incl
add
add
add
add
adc
push
add
pushl
add
add
dec
fwait
push
add
jmp
mov
add
add
jmp
dec
add
add
add
je
push
add
add
add
int3
fwait
push
add
jmp
dec
add
ljmp
dec
add
add
add
dec
add
add
add
dec
add
incl
dec
add
incl
add
add
hlt
fwait
push
add
inc
dec
add
add
add
and
add
incl
nop
dec
add
add
add
dec
pushf
push
add
pushl
nop
dec
add
add
add
js
push
add
jmp
dec
add
add
add
movsb
pushf
push
add
call
add
add
rcrb
add
inc
nop
dec
add
add
add
cld
pushf
push
add
push
nop
dec
add
add
add
sub
add
jmp
xchg
dec
add
add
add
push
popf
push
add
call
dec
add
add
add
sbbb
add
incl
add
add
lods
popf
push
add
pushl
add
add
fcomps
add
jmp
xchg
dec
add
add
add
add
push
add
call
xchg
dec
add
add
add
xchg
dec
add
add
add
xor
add
call
dec
add
add
add
dec
add
add
add
fs
push
add
call
add
add
cwtl
sahf
push
add
inc
xchg
dec
add
add
add
xchg
dec
add
add
add
xchg
dec
add
add
add
les
add
ljmp
xchg
dec
add
add
add
xchg
dec
add
add
add
xchg
dec
add
add
add
xchg
dec
add
add
add
add
add
hlt
lock
add
add
add
add
add
add
add
add
add
add
mov
add
push
lahf
push
add
jmp
dec
add
add
add
dec
add
pushl
dec
add
add
add
dec
add
add
add
add
add
add
add
incl
add
add
incl
add
add
out
testl
ljmp
xchg
sbb
add
add
lahf
push
add
add
add
sub
push
add
call
xchg
dec
add
add
add
xchg
dec
add
add
add
xchg
dec
add
add
add
xchg
dec
add
add
add
xchg
dec
add
add
sti
xchg
dec
add
xchg
dec
add
add
add
xchg
dec
add
call
dec
add
add
add
insb
mov
add
call
add
add
cwtl
mov
add
inc
xchg
dec
add
add
add
enter
push
xchg
dec
add
add
add
clc
mov
add
jmp
xchg
dec
add
add
add
sub
add
call
dec
add
add
add
pop
mov
add
decl
add
add
add
add
mov
add
call
xchg
dec
add
add
add
shlb
add
incl
dec
add
add
add
xchg
dec
add
add
add
xchg
dec
add
add
add
lock
add
and
add
push
mov
add
incl
decl
add
add
add
add
add
add
add
add
add
add
xchg
dec
add
add
add
lods
mov
add
push
xchg
dec
add
xchg
dec
add
add
add
xchg
dec
add
add
add
xchg
dec
add
add
add
xchg
dec
add
add
add
xchg
dec
add
xchg
dec
add
add
add
or
add
jmp
dec
add
ljmp
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
pop
mov
add
call
xchg
dec
add
ficoms
add
jmp
add
add
xchg
dec
add
add
add
xchg
dec
add
add
add
cwtl
dec
add
add
add
dec
add
add
add
mov
decl
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
pushf
mov
add
add
add
in
mov
push
add
add
add
dec
add
add
add
incl
add
add
add
add
dec
add
call
add
add
add
add
or
add
inc
cwtl
dec
add
add
add
cwtl
dec
add
add
add
cmp
push
add
push
cwtl
dec
add
add
add
cwtl
dec
add
add
add
jo
push
add
jmp
cltd
dec
add
add
add
cltd
dec
add
add
add
movsb
movsb
push
add
add
add
movsb
push
add
add
add
movsb
push
add
push
add
add
add
dec
add
add
add
incl
add
add
add
add
pop
dec
add
add
add
add
incl
add
add
add
add
dec
add
call
dec
add
lcall
dec
add
add
add
xor
add
incl
add
add
movsl
push
add
mov
add
add
add
add
cltd
dec
add
add
add
cltd
dec
add
add
add
nop
movsl
push
add
incl
lcall
or
xchg
sbb
add
add
movsl
push
add
pushl
lcall
cmp
xchg
sbb
add
add
cmpsb
push
add
ljmp
dec
add
add
add
dec
add
add
add
add
add
add
add
cmp
push
add
mov
add
add
add
add
andb
add
clc
lcall
lock
add
add
mov
push
add
pushl
fwait
dec
add
add
add
fwait
dec
add
add
add
dec
add
add
add
call
add
add
add
add
dec
cmpsl
push
add
incl
add
add
add
add
call
add
add
add
add
add
add
add
add
jmp
fwait
dec
add
add
add
fwait
dec
add
add
add
fwait
dec
add
add
add
mov
add
pushl
pushf
dec
add
add
add
pushf
dec
add
decl
dec
add
add
add
add
add
add
les
add
call
add
add
add
add
or
add
call
pushf
dec
add
add
add
pushf
dec
add
add
add
cmp
push
add
add
add
xchg
test
add
jmp
popf
dec
add
add
add
popf
dec
add
add
add
popf
dec
add
add
add
popf
dec
add
add
add
dec
add
add
add
loopne
push
add
call
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
popf
dec
add
add
add
popf
dec
add
add
add
popf
dec
add
add
add
popf
dec
add
add
add
pop
test
add
jmp
sahf
dec
add
add
add
sahf
dec
add
cmp
add
inc
sahf
dec
add
decl
dec
add
add
push
sahf
dec
add
add
pop
sahf
dec
add
add
push
dec
add
add
add
dec
add
add
add
inc
sahf
dec
add
add
add
sahf
dec
add
add
add
sahf
dec
add
add
add
lods
test
add
and
add
or
push
add
call
dec
add
add
add
lahf
dec
add
add
add
lahf
dec
add
add
add
lahf
dec
add
add
add
dec
add
add
inc
lahf
dec
add
call
add
add
cmp
push
add
add
add
mov
add
jmp
lahf
dec
add
add
add
lahf
dec
add
add
add
lahf
dec
add
add
add
add
add
mov
add
mov
dec
add
add
add
stos
push
add
add
add
stos
push
add
push
add
add
add
add
incl
add
add
add
add
mov
add
orb
add
push
add
incl
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
push
stos
push
add
add
mov
push
add
add
add
icebp
dec
add
add
add
incl
add
add
add
add
dec
add
add
add
call
add
incl
add
add
add
add
dec
add
incl
decl
add
add
add
add
mov
add
inc
mov
dec
mov
add
shlb
xchg
sbb
add
add
stos
push
add
incl
mov
xchg
sbb
add
add
lods
push
add
pushl
mov
cmp
incl
dec
add
add
add
dec
add
add
add
sub
push
add
pushl
dec
add
js
dec
add
incl
add
add
add
add
jo
push
add
pushl
mov
add
add
mov
push
add
jmp
mov
add
call
add
add
mov
push
mov
xchg
sbb
add
call
add
add
xchg
dec
add
add
add
add
push
lods
push
add
add
mov
push
add
add
add
dec
add
add
add
incl
add
add
add
add
mov
jmp
mov
add
sub
add
xor
pushl
mov
xchg
sbb
add
insb
lods
push
add
jmp
dec
add
ljmp
dec
add
pushl
dec
add
add
add
dec
add
add
add
mov
push
add
jmp
ljmp
pushl
add
add
add
add
hlt
lods
push
add
add
add
push
add
add
pop
scas
push
add
add
mov
push
add
add
add
dec
add
add
add
incl
add
add
add
add
jmp
mov
add
call
add
add
mov
push
mov
xchg
sbb
add
js
push
add
jmp
mov
ljmp
mov
pushl
mov
add
cmp
xchg
sbb
add
mov
add
add
jmp
dec
add
ljmp
dec
add
pushl
dec
add
add
add
dec
add
add
add
add
add
mov
incl
add
add
incl
add
add
add
add
add
add
add
add
add
push
scas
push
add
add
add
add
mov
incl
add
add
incl
add
add
add
add
add
add
xchg
sbb
add
add
add
mov
add
add
jmp
mov
call
add
add
hlt
scas
push
add
call
movsb
dec
add
add
add
sub
add
and
add
or
incl
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
je
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
jmp
dec
add
add
add
dec
add
add
add
lock
add
add
add
push
add
mov
push
add
add
add
add
add
add
incl
add
add
add
add
mov
call
lcall
add
add
add
add
push
mov
add
call
movsb
dec
add
fsubs
add
movsb
dec
add
add
add
mov
add
sbb
add
pop
mov
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
call
add
add
push
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
pushl
movsl
dec
add
add
add
movsl
dec
add
add
add
push
mov
add
jmp
dec
add
ljmp
dec
add
add
add
mov
add
call
lcall
add
add
mov
add
add
inc
movsl
dec
add
add
add
lock
add
push
movsl
dec
add
add
add
sbb
push
add
dec
add
add
add
jmp
cmpsb
dec
add
add
add
pop
mov
add
add
add
mov
add
add
je
dec
add
add
add
incl
add
add
add
nop
enter
call
dec
add
add
add
lods
mov
add
incl
add
add
fdivs
add
pushl
add
add
add
push
add
add
add
push
mov
add
jmp
cmpsb
dec
add
call
add
add
cmpsb
dec
add
add
add
cmpsb
dec
add
add
add
cmpsl
dec
add
add
add
cmpsl
dec
add
add
add
cmpsl
dec
add
lcall
cmpsl
dec
add
add
add
mov
add
add
call
dec
add
lcall
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
decl
add
add
sbb
push
add
inc
cmpsl
dec
add
dec
cmpsl
dec
add
add
add
cmpsl
dec
add
add
add
cmpsl
dec
add
add
add
cmpsl
dec
add
add
add
cmpsl
dec
add
add
add
cmpsl
dec
add
clc
cmpsl
dec
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
insb
mov
add
add
add
add
call
dec
add
add
add
mov
push
add
incl
add
add
loopne
push
add
pushl
add
add
or
push
add
add
add
pop
mov
add
jmp
test
add
call
push
test
add
clc
test
add
incl
test
decl
test
pushl
test
xchg
sbb
add
add
add
jmp
dec
add
add
add
mov
add
add
call
add
add
in
push
add
inc
test
dec
test
call
test
xchg
sbb
add
add
mov
add
dec
add
add
add
add
add
add
add
add
add
add
xchg
mov
add
add
add
add
incl
stos
dec
add
decl
stos
dec
add
call
stos
dec
add
incl
add
add
add
add
stos
dec
add
incl
add
add
add
add
add
add
add
add
add
mov
add
add
add
or
push
add
add
add
mov
add
call
dec
add
lcall
dec
add
jmp
dec
add
incl
add
add
add
add
dec
add
incl
add
add
jmp
add
add
cmp
push
add
call
stos
dec
add
add
add
push
add
add
incl
stos
dec
add
add
add
xchg
mov
add
incl
add
add
incl
add
add
jge
dec
add
jmp
add
add
fdivrl
add
add
add
add
add
push
mov
add
add
add
decl
dec
add
add
add
sbb
add
add
add
add
add
insb
stos
push
add
mov
push
add
ljmp
dec
add
add
add
push
mov
add
add
add
decl
add
add
cmpb
add
add
add
pushl
add
add
add
add
lods
mov
add
add
add
fildll
add
out
dec
add
add
add
loopne
push
add
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
dec
add
add
add
incl
add
add
incl
add
add
incl
add
add
bound
add
add
incl
add
add
incl
add
add
incl
add
add
push
add
incl
add
add
add
add
incl
js
add
js
add
dec
ja
add
ja
add
incl
add
add
incl
add
add
incl
add
add
dec
add
add
add
incl
add
add
incl
add
add
incl
add
add
jl
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
add
add
mov
fmull
add
incl
add
add
incl
add
add
incl
add
add
add
add
dec
add
dec
add
incl
add
add
incl
add
add
decl
dec
add
dec
add
add
sub
incl
add
add
incl
add
add
add
add
add
add
add
add
add
mov
add
pushf
mov
add
add
add
add
add
incl
add
add
add
incl
add
add
dec
add
add
add
cwtl
dec
add
cwtl
dec
add
incl
add
add
incl
add
add
incl
dec
add
dec
add
add
add
incl
add
add
incl
add
add
jmp
fwait
dec
add
fwait
dec
add
add
add
xchg
dec
add
add
add
add
add
add
push
add
push
add
add
add
add
incl
add
add
add
mov
add
add
incl
add
add
incl
add
add
incl
add
add
dec
add
add
add
incl
add
add
incl
add
add
incl
add
add
stos
dec
add
incl
add
add
stos
dec
add
incl
add
add
incl
add
add
call
lods
dec
add
lods
dec
add
add
add
incl
add
add
incl
add
add
jmp
lods
dec
add
lods
dec
add
add
add
incl
add
add
incl
add
add
incl
add
add
dec
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
dec
add
add
add
incl
add
add
incl
add
add
decl
mov
add
add
add
incl
add
add
incl
add
add
incl
add
add
dec
add
add
add
incl
add
add
incl
add
add
pushl
mov
add
incl
add
add
incl
add
add
incl
add
add
leave
dec
add
add
add
incl
add
add
incl
add
add
incl
add
add
int3
dec
add
add
add
incl
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
incl
add
add
incl
add
add
out
dec
add
add
add
incl
add
add
incl
add
add
incl
add
add
lock
add
add
add
incl
add
add
add
out
stc
dec
add
stc
dec
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
adc
add
incl
add
add
incl
add
add
decl
sbb
sub
dec
add
add
add
incl
add
add
incl
add
add
incl
add
add
dec
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
cs
add
add
add
incl
add
add
incl
add
add
incl
add
add
dec
add
xor
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
pop
dec
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
pop
dec
add
add
add
incl
add
add
incl
add
add
pushl
dec
add
pushl
lods
dec
add
add
add
add
push
add
add
add
jmp
dec
add
add
add
xor
push
add
add
add
call
add
add
pop
rclb
add
add
add
add
inc
lods
dec
add
add
add
lods
dec
add
add
add
mov
push
add
add
add
adc
pusha
cld
adc
sub
verw
adc
pop
call
add
xor
adc
add
adc
add
sldt
add
add
call
add
call
add
call
add
call
add
adc
jo
adc
call
add
call
add
add
add
notl
add
adc
sbb
adc
sub
adc
cmp
adc
dec
clc
adc
pop
clc
adc
outsb
clc
adc
cmp
add
clc
adc
mov
adc
lret
add
clc
adc
hlt
clc
adc
add
adc
sbb
adc
cs
adc
ds
adc
push
stc
adc
pusha
stc
adc
jo
adc
cmp
add
adc
ret
add
stc
adc
call
stc
adc
push
cli
adc
push
cli
adc
sub
adc
cmp
adc
dec
cli
adc
pop
cli
adc
jb
adc
xchg
adc
lcall
add
cli
adc
cli
adc
in
cli
adc
add
adc
adc
adc
sub
adc
ds
adc
push
sti
adc
pusha
sti
adc
jbe
adc
xchg
adc
cwtl
sti
adc
lods
sti
adc
ret
add
sti
adc
fdivrp
adc
out
notl
add
cld
adc
adc
adc
es
adc
cmp
adc
push
cld
adc
call
add
add
add
add
add
add
add
add
adc
hlt
add
add
adc
dec
add
add
add
add
adc
adc
adc
add
adc
lock
add
add
add
add
add
add
add
add
add
adc
out
adc
into
notl
add
notl
add
notl
add
adc
dec
notl
add
adc
hlt
sti
adc
and
adc
inc
add
add
adc
adc
adc
or
adc
and
adc
cmp
adc
push
add
add
adc
je
adc
xchg
adc
lcall
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
adc
jl
adc
mov
adc
cwtl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
outsb
cld
adc
jp
adc
inc
call
add
call
add
call
add
call
add
call
add
adc
out
adc
adc
ret
add
adc
nop
adc
cmp
add
add
adc
inc
adc
cmp
adc
loop
adc
sbb
adc
or
adc
clc
std
adc
ljmp
add
std
adc
mov
std
adc
xchg
std
adc
xchg
adc
je
adc
std
adc
push
std
adc
ds
adc
and
adc
adc
adc
add
adc
repnz
adc
fdivrp
adc
lret
add
adc
lcall
add
add
add
push
push
popa
je
dec
popa
insl
gs
add
inc
gs
outsl
fs
gs
imul
add
mov
inc
gs
push
popa
je
dec
popa
insl
gs
add
inc
gs
outsl
fs
gs
imul
add
inc
add
je
jne
jb
outsb
je
jb
arpl
jae
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
je
gs
imul
push
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
cwtl
add
je
jb
jb
je
arpl
push
arpl
outsb
add
push
add
gs
xor
inc
insb
outsl
jae
dec
popa
outsb
fs
add
inc
jb
popa
je
push
push
add
or
inc
insb
outsl
bound
push
outsb
insb
outsl
arpl
add
add
outsl
bound
dec
outsl
arpl
add
add
outsl
bound
inc
insb
insb
outsl
arpl
filds
inc
gs
imul
je
add
inc
push
dec
jne
je
inc
jns
add
add
inc
popa
fs
gs
fs
je
add
testb
insb
outsl
bound
inc
fs
je
insl
inc
add
testl
popa
insb
inc
fs
je
insl
push
add
jg
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
incl
inc
insb
outsl
bound
inc
jb
add
add
inc
insb
outsl
bound
inc
gs
je
insl
dec
popa
insl
gs
add
cli
add
outsl
bound
inc
gs
gs
inc
je
insl
add
add
inc
insb
outsl
bound
inc
gs
je
insl
dec
popa
insl
gs
add
cmc
add
gs
outsl
outsb
jae
insb
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
je
popa
insb
push
jb
je
arpl
addl
jne
insb
inc
insb
insb
outsl
arpl
add
push
jb
arpl
fs
jae
add
jno
inc
gs
popa
jae
inc
jb
outsl
jb
add
dec
outsl
popa
fs
imul
add
sub
push
gs
popa
jae
inc
jb
outsl
jb
add
gs
push
push
jb
outsl
jb
je
add
inc
gs
jne
jb
outsb
je
push
add
adc
push
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
insb
gs
jae
dec
jne
gs
add
je
outsl
jb
imul
push
arpl
add
gs
je
dec
jne
gs
add
test
dec
jo
outsb
dec
jne
gs
add
adc
inc
jb
outsl
jb
outsl
fs
inc
add
je
jne
jb
outsb
je
push
dec
add
into
add
outsb
fs
insb
outsl
jae
add
add
outsb
fs
imul
gs
add
mov
push
imul
jne
jb
inc
js
add
inc
gs
js
je
outsl
fs
jb
arpl
jae
add
fs
jb
arpl
jae
gs
outsl
jb
add
je
popa
insb
push
jb
je
arpl
add
add
outsb
je
outsb
jne
inc
bound
inc
jbe
outsb
je
add
add
jae
insl
gs
push
add
lea
dec
jne
jo
je
bound
push
je
imul
add
je
jne
inc
bound
push
je
imul
add
je
push
inc
outsl
outsb
je
js
add
xlat
add
je
push
inc
outsl
outsb
je
js
add
lea
push
popa
imul
jne
inc
jbe
outsb
je
lods
add
imul
jae
dec
gs
outsl
jb
add
jno
push
outsb
insl
popa
jo
imul
insb
add
push
jne
jo
outsb
fs
push
add
inc
bound
inc
arpl
gs
jb
arpl
jae
add
dec
popa
jo
imul
insb
add
insb
imul
outsb
fs
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
push
add
gs
je
inc
imul
outsb
addr16
add
push
add
je
jbe
outsb
je
add
inc
jb
popa
je
inc
jbe
outsb
je
add
jne
dec
jne
je
inc
jns
gs
outsl
push
imul
push
add
gs
je
inc
imul
jb
popa
je
push
jb
arpl
jae
add
mov
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
jns
je
insl
push
imul
insb
gs
imul
js
je
jb
arpl
jae
dec
inc
push
dec
inc
dec
xor
cs
insb
add
lods
add
push
imul
add
push
outsl
jae
dec
gs
popa
addr16
add
add
push
outsl
jae
dec
gs
popa
addr16
add
std
add
arpl
inc
inc
insb
push
popa
jb
insl
add
imul
imul
add
jne
push
imul
mov
jo
je
push
popa
addr16
add
stos
add
outsb
jae
popa
je
dec
gs
popa
add
add
push
gs
jae
addr16
add
cmp
push
outsb
fs
gs
popa
addr16
add
inc
add
outsb
fs
gs
popa
addr16
add
jnp
inc
gs
imul
jb
popa
fs
jb
arpl
jae
add
pusha
add
gs
je
push
imul
inc
add
add
imul
popa
jae
inc
add
popa
add
gs
je
push
imul
push
add
add
imul
popa
jae
push
add
mov
fs
jne
jae
jb
add
push
imul
outsl
arpl
add
push
imul
outsl
arpl
add
add
gs
inc
inc
insb
push
popa
jb
insl
add
popa
arpl
inc
inc
insb
push
popa
jb
insl
add
outsb
fs
gs
popa
addr16
add
jae
popa
addr16
outsl
js
add
je
outsl
jns
imul
add
imul
jne
dec
fs
add
jecxz
inc
imul
outsl
ja
add
add
fs
je
imul
dec
outsl
popa
fs
je
imul
push
jo
popa
je
push
imul
xchg
add
outsl
ja
imul
push
add
gs
je
inc
imul
imul
jb
insl
inc
add
adc
inc
gs
insb
addr16
je
insl
add
xchg
push
gs
imul
js
inc
add
jp
push
gs
imul
add
je
jns
je
insl
dec
gs
imul
inc
gs
jae
outsb
arpl
jns
je
je
add
mov
dec
imul
add
add
fs
popa
imul
inc
imul
add
cmp
inc
gs
gs
popa
addr16
add
inc
gs
jb
jo
add
fildl
inc
outsb
jne
push
push
push
imul
push
push
gs
jb
jo
add
in
add
jbe
push
imul
push
add
je
gs
je
jo
imul
push
push
inc
push
xor
cs
insb
add
mov
inc
gs
gs
inc
inc
add
xor
inc
jb
popa
je
inc
dec
inc
imul
add
popa
insb
imul
je
add
lar
insb
arpl
insb
gs
add
add
gs
je
inc
inc
inc
add
inc
jb
popa
je
push
popa
insb
gs
add
gs
dec
bound
arpl
adc
inc
imul
add
insb
arpl
push
arpl
sub
popa
je
inc
outsl
insl
jo
je
bound
inc
add
inc
inc
dec
xor
cs
insb
add
dec
outsb
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
je
jb
outsl
arpl
fs
js
push
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
insb
push
outsb
ja
outsb
add
jae
inc
js
gs
imul
push
gs
imul
outsl
arpl
jae
add
push
outsb
push
gs
js
gs
imul
gs
add
push
gs
outsb
push
gs
js
gs
imul
gs
cmp
dec
jae
bound
addr16
jb
jae
outsb
je
push
add
popa
jo
jb
add
adc
dec
gs
jo
insb
insb
outsl
arpl
mov
push
jb
arpl
jae
gs
jo
add
inc
gs
push
dec
outsb
outsw
add
inc
dec
popa
jo
je
imul
add
popa
jo
je
imul
add
inc
gs
popa
insb
jne
add
push
insb
jae
insb
insb
outsl
arpl
add
push
insb
jae
gs
popa
insb
jne
add
insb
jae
jb
add
dec
gs
jo
imul
push
jb
je
inc
imul
je
je
dec
popa
outsb
fs
add
std
add
je
inc
push
add
xchg
add
je
inc
dec
inc
push
add
aas
add
push
popa
insb
imul
add
add
popa
jo
gs
jb
jns
adc
dec
gs
jo
jb
popa
je
add
addl
imul
jb
add
add
popa
jo
gs
insb
insb
outsl
arpl
loop
inc
gs
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
testb
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
and
push
gs
popa
outsb
fs
gs
outsl
jne
je
add
inc
gs
imul
mov
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
jecxz
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
je
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
scas
add
jne
push
jns
je
insl
dec
outsl
arpl
gs
add
inc
add
push
popa
insb
imul
add
push
je
imul
inc
add
mov
push
je
imul
push
add
jne
inc
gs
outsl
arpl
gs
outsb
outsw
push
add
sbb
push
gs
imul
gs
add
add
je
outsl
outsb
jae
insb
gs
push
add
xor
inc
gs
outsl
outsb
jae
insb
gs
outsl
fs
aaa
add
je
je
dec
popa
outsb
fs
add
cltd
add
imul
insb
gs
add
inc
outsl
outsb
jae
insb
gs
jne
jo
je
push
add
mov
je
inc
outsl
outsb
jae
insb
gs
add
add
jne
push
inc
jne
data16
add
cmp
inc
outsl
insl
jo
jb
push
je
imul
add
insl
jo
jb
push
je
imul
add
popa
insb
inc
jb
gs
add
jb
popa
je
gs
popa
addr16
popa
arpl
and
add
inc
push
add
push
pop
add
in
mov
mov
cmp
push
sbb
push
or
test
mov
push
push
pop
in
lods
ss
fs
out
mov
les
dec
push
dec
cmp
cmpsl
lds
lds
imul
movsl
adcb
rcrb
test
fucom
dec
xor
jl
sti
pushf
cltd
adc
fdivrp
fdivp
sti
sahf
out
stc
push
jns
sahf
jge
lahf
mov
pop
jnp
mov
pop
jnp
jge
lahf
pop
sbb
or
inc
cld
sbb
shrb
int
lock
addl
jo
ret
daa
add
mov
mov
arpl
rcrb
xchg
push
fidivrs
sub
das
push
pop
sti
test
repnz
push
fidivs
outsb
scas
pushf
lcall
lret
xchg
jmp
sahf
xor
je
cli
addr16
jnp
cmp
std
lods
mov
sahf
cmp
jle
jo,pt
mov
mov
mov
lock
lods
xchg
sti
int3
mov
xchg
fildll
pop
jnp
mov
or
call
addl
das
scas
aaa
push
jp
clc
xchg
push
and
mov
xchg
inc
lods
push
sbb
inc
adc
mov
sbb
pop
jmp
pusha
dec
inc
shr
sbb
or
lcall
pushl
push
sub
ljmp
aad
add
cmp
lock
mov
test
push
out
loope
icebp
or
pop
jne
repnz
pop
mov
add
xor
psllw
or
inc
mov
jl
loope
add
test
fistpll
clc
jg
cs
cwtl
ljmp
in
mov
mov
xchg
mov
pop
jbe
mov
xchg
mov
js
push
push
outsb
into
fnstenv
sub
mov
stc
mov
and
int
ljmp
adc
xchg
add
push
loopne
or
cs
adc
xchg
add
push
loopne
inc
addl
or
mov
or
lods
push
cmp
stos
jg
mov
xor
and
cmc
cmp
push
test
movsl
inc
aad
xchg
mov
dec
push
cwtl
in
test
push
jg
push
out
xchg
lret
push
jge
stos
or
push
aad
jmp
push
jns
pop
push
aad
pop
std
into
dec
jmp
sbb
movsl
into
in
test
jg
dec
xchg
cmp
ret
jmp
movl
sti
mov
mov
int
adc
mov
mov
mov
xchg
je
xorb
jge
and
pop
lcall
sub
cltd
pop
aas
inc
sarb
nop
push
pop
pop
sub
movsl
cmpsb
xlat
scas
mov
or
push
sarb
pop
pop
stos
lahf
sub
pop
sub
jmp
add
out
scas
jg
mov
cld
cmc
inc
mov
scas
dec
xchg
je
push
call
daa
insl
aaa
aas
clc
in
shlb
push
test
ljmp
mov
cld
xchg
std
fwait
fs
mov
add
int
shrl
in
mov
inc
out
rol
hlt
pop
and
pop
adc
mov
adc
movsb
std
mov
sti
aam
push
test
std
sub
cwtl
push
and
hlt
fsts
push
imul
jns
sbb
inc
xchg
test
and
int3
add
jbe
std
fildl
jnp
push
cltd
jmp
or
xor
push
lods
das
xchg
inc
faddl
les
addr16
aas
push
xchg
add
jle
jge
data16
jb
adc
insb
in
rol
sbb
and
repnz
test
mov
sub
inc
or
jp
int
int
xor
adc
repnz
dec
mov
adc
push
lcall
pop
lcall
js
inc
imul
xchg
dec
inc
and
xorb
popl
movsl
dec
jbe
rolb
ja
in
mov
push
aas
outsb
xchg
sbb
lahf
bound
cmp
into
outsl
stos
sti
and
scas
movsl
lret
mov
xor
adc
shlb
out
imul
lock
call
xchg
stc
imul
and
call
cmp
xchg
push
and
mov
inc
or
outsb
xchg
push
ror
xor
jecxz
sbb
sub
cmp
and
lcall
mov
outsl
cmp
pop
or
xchg
sbbl
int
das
or
inc
cwtl
loop
mov
out
mov
dec
rdmsr
icebp
cmp
xor
pop
push
aas
or
sbb
adc
or
mov
adc
ds
add
je
pop
pop
and
lret
pop
add
rorl
mov
ss
cmpsb
push
cmc
insl
or
pop
sub
test
shrl
adc
cmc
dec
xchg
and
out
xchg
xor
scas
arpl
loop
xchg
out
sahf
je
ljmp
ljmp
cli
loope
xchg
mov
cmp
pop
push
xchg
push
movsb
cmpsl
movsl
call
nop
movsb
addl
ds
lret
and
cli
movsb
je
es
mov
push
jmp
dec
stc
insb
add
aas
movsb
pop
sbb
test
jnp
push
out
test
lea
fwait
cld
cmp
jns
dec
jg
iret
lods
aas
add
xchg
inc
aam
add
inc
test
xor
dec
xchg
stos
sub
rcl
out
lcall
stos
jl
push
in
data16
stos
jl
scas
addb
das
daa
fdivrs
orl
scas
xchg
rol
fistl
mov
inc
jg
aas
repnz
out
sub
ret
inc
movsb
fldln2
jle
xor
icebp
fsubrl
lea
aad
sbb
pop
dec
sbb
jmp
dec
jp
push
add
loope
xchg
or
cmpsl
and
pop
mov
mov
cmp
mov
in
lods
das
xchg
mov
and
inc
sub
jb
pop
xchg
push
fidivs
repnz
add
jne
fcomps
imulb
xchg
push
sbb
or
mov
ds
loop
aas
mov
shll
fucomp
addr16
ss
inc
push
xchg
or
imul
and
or
lahf
cmp
jne
int3
fs
push
in
mov
cwtl
pop
lods
jbe
mov
ret
cmp
adc
cwtl
sub
jbe
hlt
pop
xor
sbb
sub
stos
subb
or
pop
pop
sub
test
sub
movsl
dec
outsb
dec
subl
jmp
jb
lret
ds
inc
shl
nop
loopne
jmp
xchg
aad
or
push
mov
push
push
jg
push
fwait
loope
push
call
test
pop
xor
push
sub
enter
pop
mov
pop
lock
fldl2e
xor
aad
das
cmp
jecxz
lods
stc
pop
cs
lret
fistl
xchg
sub
rorb
push
ss
rorb
sub
test
xchg
add
out
out
movsl
mov
xor
sub
in
fwait
mov
dec
or
shrl
test
shrb
popa
out
dec
mov
cmc
test
mov
std
jns
mov
inc
repz
add
rcrl
dec
cmpl
jae
cmpsb
addr16
add
pop
test
lret
sub
jmp
cmpb
hlt
adcb
mov
hlt
or
lods
mov
pop
clc
jbe
add
push
jecxz
shrl
and
mov
imul
imul
ss
xor
push
mov
mov
lods
xchg
sti
or
loope
or
pop
popa
mov
outsl
hlt
add
inc
dec
cld
push
lret
faddp
or
xor
out
push
std
sbbl
xchg
pop
fwait
or
push
mov
mov
aas
pop
cmp
mov
aad
movsl
xchg
iret
mov
sti
mov
inc
cmc
mov
xor
enter
sbb
mov
pop
outsl
sti
lea
repnz
loopne
nop
inc
lcall
std
das
add
ds
inc
aas
cmp
add
sbb
push
pop
test
pop
push
push
cld
push
pop
std
lret
push
push
push
pop
inc
std
adcb
enter
in
xchg
and
push
fidivrl
repz
out
cmc
jae
punpckldq
push
and
cmc
sbb
mov
adcb
pop
jnp
mov
inc
enter
or
hlt
sbbl
xor
shrl
push
jmp
adc
jb
push
sti
je
int3
cmp
inc
adc
lret
fimuls
xchg
repnz
iret
push
mov
ljmp
and
movsl
dec
lcall
js
push
push
in
pop
xchg
sub
mov
or
aam
movsb
cwtl
mov
incb
push
sub
repz
dec
jle
loop
pop
fisttpl
push
jno
lock
xor
repnz
and
nop
jmp
sub
enter
or
data16
cld
push
cmp
adc
lods
icebp
sub
mov
maxps
xor
leave
mov
nop
lea
push
jae
iret
mov
and
inc
jbe
add
cmp
aas
or
subl
inc
icebp
std
add
mov
loopne
sbb
loopne
mov
jg
or
call
shr
ret
cmc
push
xor
icebp
add
lahf
push
rolb
and
or
pop
cli
inc
cs
jecxz
or
mov
jo
cmc
fdivp
rcl
and
imul
mov
clc
mov
aaa
pushf
push
mov
in
jle
mov
dec
es
mov
or
rcrb
out
pop
dec
sbb
xor
dec
lods
mov
xor
rolb
mov
daa
jg
dec
and
add
loope
lahf
cmp
rorl
cmpsb
inc
ss
call
xchg
arpl
scas
or
shll
pop
push
data16
out
pop
lret
dec
cmp
dec
inc
movsl
cmpsb
xlat
dec
cli
push
sarl
and
sbb
xchg
pushf
cld
fidivrl
adc
cld
movsb
bswap
insb
mov
bnd
xor
mov
jle
imul
shrb
lret
test
pop
rorl
addr16
pop
cld
add
lods
jae
xorl
jmp
jle
mov
mov
push
mov
lods
pop
cld
shrb
mov
push
pop
xor
push
pop
stc
aam
push
jg
stc
lock
mov
sbb
ds
mov
cld
mov
dec
xchg
mov
fistpll
mov
push
and
add
lcall
rcr
push
sub
sub
cwtl
mov
iret
lcall
jg
mov
aas
fisubrs
pop
decl
out
loop
cltd
xlat
mov
xchg
dec
inc
xlat
dec
mov
out
ret
jle
imul
shll
aaa
fstps
push
xor
dec
ret
dec
cmp
push
dec
pushf
js
imul
mov
jecxz
sbb
xchg
mov
aas
mov
stc
push
mov
cmpsl
aad
sbb
mov
cmp
push
dec
lock
adc
rclb
push
jge
rol
cmpsb
and
sbb
dec
xchg
dec
pusha
repnz
jge
cltd
out
lock
dec
stos
adc
out
and
add
shll
jbe
or
arpl
shll
xchg
sti
mov
rcll
add
dec
ret
cmpsb
sub
pop
stc
xor
adcb
jo
mov
enter
push
add
sub
popa
leave
adc
fisubl
sub
xchg
add
and
flds
adc
cmp
push
roll
and
push
pop
sbbb
jmp
cld
jle
xor
mov
xchg
pop
add
jns
add
jmp
or
or
sub
dec
pusha
or
nop
cmpsb
cmp
rclb
mov
dec
and
sbb
jg
clts
lods
aas
idivl
pop
ja
sub
cli
or
add
mov
cs
add
push
inc
xchg
inc
inc
mov
and
jb
mov
adc
pop
lds
nop
insl
in
pop
pop
lcall
mov
fidivl
imul
lret
in
cmp
push
push
push
mov
add
mov
adc
xchg
xchg
inc
outsb
push
addr16
ljmp
repnz
push
lods
mov
push
adc
jg
idivb
dec
jp
lock
sbb
cmp
push
dec
or
dec
popf
push
add
in
pop
add
testl
lock
and
shrb
out
fldpi
movsl
negl
push
jo
xchg
or
iret
or
notl
in
push
mov
pop
fisubrs
push
ret
mov
xor
push
call
jo
inc
inc
dec
nop
adc
add
pop
inc
adc
je
pop
into
rolb
cmove
out
ds
icebp
sbb
ret
dec
movsb
sbb
mov
inc
jle
fdivr
fisubrs
test
add
ret
or
add
sub
flds
fcoml
test
mov
and
cmp
repnz
subl
pop
addb
dec
or
pop
call
mov
mov
push
xchg
mov
inc
dec
push
dec
es
pusha
repnz
xchg
in
cli
mov
enter
fdiv
fadds
sub
xchg
push
push
jns
mov
das
push
stos
pop
adc
insb
dec
test
inc
and
je
je
mov
xor
hlt
test
adc
pop
xor
push
outsb
jns
lods
cmp
adcl
inc
xchg
out
mov
test
movsl
imul
andl
push
and
sbb
xor
mov
shll
cmp
cmp
mov
mov
out
sbb
mov
inc
push
xchg
add
cmc
and
cld
adc
aas
ss
mov
pop
xchg
push
stos
ds
sbb
jge
addr16
dec
ret
aad
mov
inc
xchg
aad
in
popf
mov
dec
je
es
aam
dec
pop
xor
adc
pop
clc
add
negb
sub
pop
push
test
js
cmp
test
popf
inc
and
xchg
pusha
pusha
pop
les
ss
add
sub
xlat
pop
pop
ljmp
xor
sahf
lea
mov
jle
fimull
mov
addb
fnstcw
mov
add
aam
dec
sarl
rcl
xchg
and
xchg
sub
lret
and
pop
push
adc
fisttpl
ds
pushf
mov
cmpsl
data16
mov
mov
cmpsl
bound
xor
or
xor
lds
sti
sti
and
idiv
sti
ds
cli
mov
cmpsb
mov
fildll
daa
in
int3
and
pop
mov
mov
aad
cld
data16
icebp
jg
loope
jle
push
mov
into
inc
push
push
sub
insl
jbe
xchg
pop
out
xchg
scas
cmp
clc
bound
mov
jae
sub
lahf
repz
jmp
push
dec
lds
loop
mov
test
xchg
icebp
cs
adc
nop
imul
push
sub
mov
push
addr16
out
cwtl
sbb
jmp
divb
int3
movsl
xor
cmp
popa
inc
and
out
pop
push
stos
das
add
mov
sub
aad
mov
jbe
push
in
xorb
push
aam
mov
inc
xchg
out
dec
ljmp
loop
add
negb
test
imull
mov
mov
mov
xchg
fmull
pushf
call
lods
jle
imul
mov
pop
sub
insb
fisttpl
or
jge
lea
add
pusha
lods
mov
push
pop
loop
imul
xor
pop
divb
sub
pop
push
sti
das
xchg
test
add
call
dec
xchg
and
bound
stos
movsl
and
mov
pop
aas
loope
je
js
adc
cmp
jno
stos
push
and
out
add
insl
jne
es
jne
dec
pusha
push
xchg
mov
lahf
jnp
lods
xchg
dec
dec
mov
push
adc
fstl
clc
aas
insb
orb
pop
sti
lock
movsl
pop
sub
jg
xor
mov
inc
lock
mov
data16
mov
sbb
mov
or
jp
dec
movsb
fwait
add
jle
mov
sbb
push
fs
dec
inc
jns
outsl
mov
dec
shll
and
cmp
hlt
jo
cmp
jo
icebp
push
cli
cwtl
out
xchg
pusha
test
loop
insb
sbb
sbb
cmp
mov
sbb
mov
arpl
lcall
inc
fsts
imull
inc
jb
aaa
push
mov
ja
imul
inc
in
je
psubusw
mov
hlt
adc
jge
stos
xchg
inc
dec
xchg
andl
addb
popa
mov
or
jb
out
test
fwait
mov
xchg
push
outsl
pop
add
pop
dec
push
cmpl
add
or
xchg
cmpsl
js
iret
mov
stc
shrb
scas
fsubrl
xor
lret
pop
loop
stc
inc
mov
mov
int3
pop
fisubl
mov
inc
je
test
movsl
rcr
addr16
add
js
mov
jecxz
aas
mov
jno
arpl
testb
arpl
jmp
fldl
adc
ret
xor
xlat
sub
xchg
adc
adc
adc
push
test
add
dec
dec
adc
stos
test
testb
stos
mov
inc
cmp
inc
fisttpl
xchg
jne
pop
push
push
mov
jge
pop
adc
test
aam
pusha
scas
mov
es
ds
dec
inc
mov
loopne
test
dec
dec
rcll
push
sti
pop
mov
fistpll
icebp
cwtl
mov
outsb
mov
mov
out
sub
imul
int3
cmc
adc
inc
out
lods
pop
fidivl
mov
das
popf
or
pop
mov
out
mov
popf
movsb
add
in
js
movsb
or
dec
aaa
push
push
adc
inc
mov
mov
fidivrs
xor
shl
or
jg
lods
lods
lahf
mov
ret
gs
mov
arpl
rorb
pop
adc
and
mov
out
mov
fs
xchg
std
dec
jl
popf
add
sarb
test
sarb
fisttpl
or
jne
push
sub
int3
or
mov
sub
arpl
ja
into
in
scas
push
jle
jne
cmp
pusha
fstpt
fldenv
aad
out
cmc
ljmp
fmuls
int3
and
enter
pop
mov
add
mov
icebp
js
sbb
mov
jb
adcl
add
adc
and
cld
and
shll
jbe
mov
test
lods
ret
push
inc
mov
or
sub
ds
lret
xchg
insl
jae
out
popa
dec
lock
push
fstl
movsl
cmp
fildl
dec
mov
imul
pop
add
mov
mov
mov
cmp
push
push
dec
iret
or
mov
movsb
ljmp
inc
or
ss
cmc
scas
push
cmp
rclb
aas
pop
pop
gs
ja
mov
cwtl
mov
or
xor
in
cmpsl
lds
mov
cmp
aaa
mov
xchg
xchg
dec
push
aas
xchg
push
cmp
adc
pop
push
mov
sbb
out
imull
jmp
inc
push
movsb
pop
jge
cwtl
in
mov
jae
or
movsl
or
rorb
aad
enter
stc
add
js
mov
popa
sbb
push
leave
sub
cmp
insb
in
cvttps2pi
xchg
out
shl
mov
inc
in
data16
std
sbb
fimull
push
out
xchg
sti
sbb
adc
pop
dec
push
xor
sbb
bound
xor
push
push
cmp
rorl
inc
and
popa
cmc
inc
dec
aas
lock
jo
and
out
sub
fcompl
jmp
push
jo
out
jae
out
push
xlat
mov
mov
test
mov
call
mov
sbb
mov
or
in
das
mov
cmp
mov
sti
add
lock
xlat
sbb
sti
cmp
addr16
and
fsub
fcom
fdivr
and
out
sbb
inc
cmp
dec
add
mov
aam
divb
lea
and
mov
insb
mov
add
push
cmp
xor
jnp
adc
cwtl
das
lods
fadd
pusha
popf
lea
stc
cmp
aad
enter
xchg
xchg
inc
fisubl
ljmp
lcall
mov
test
mov
leave
mov
stos
xor
cld
jnp
xchg
mov
in
sti
into
inc
pop
call
mov
rol
jp
pop
loop
testb
arpl
pushf
clc
push
insl
jbe
fldt
pop
test
fidivrs
sbb
loop
or
cmpsl
psubsw
cmpsl
push
jne
xchg
pop
addr16
or
cmpsb
pop
xchg
sti
orb
stos
mov
gs
aam
rcrl
outsl
sbb
fstps
test
sbb
jg
mov
push
jbe
mov
dec
jl
into
hlt
fs
jns
loop
xor
fld
outsb
adc
mov
mov
sbbl
sub
mov
push
mov
and
mov
mov
and
stos
dec
xlat
mov
subb
in
mov
lock
xchg
mov
jmp
add
adc
ficoml
shl
daa
sahf
dec
cld
or
jnp
sbb
insl
imulb
push
or
in
xchg
stos
rorb
int
roll
mov
cmp
xor
dec
inc
fldl
inc
pop
shl
sub
scas
xchg
mov
sbb
pusha
das
aad
cmpb
and
add
cmp
adc
roll
addr16
out
test
mov
push
pop
int3
xor
popa
jne
pop
in
int3
add
pop
loop
cmpsl
insb
xchg
pop
jmp
mov
movsb
dec
ss
inc
rorb
das
push
jp
xor
es
rcl
das
sbb
push
sahf
inc
loop
test
pop
adc
sahf
enter
mov
dec
add
mov
mov
fnstsw
sbb
sub
xlat
rcr
inc
and
inc
mov
mov
pop
cmp
lcall
xor
adc
out
xor
dec
push
sbb
cmp
aad
pop
and
ja
jns
cmpsl
mov
in
xchg
xchg
and
cltd
inc
xchg
sub
aaa
dec
add
aaa
xchg
adc
dec
ret
lret
mov
ja
icebp
sub
push
push
test
mov
mov
pop
imul
int
jbe
add
push
mov
lret
sbb
push
mov
pop
jne
add
cld
je
neg
test
mov
repz
out
outsl
add
roll
xor
dec
jl
daa
in
pop
sub
adc
call
in
fdivs
js
scas
jp
mov
mov
fwait
or
push
loop
mov
add
pop
cmp
lea
adc
dec
lds
sub
ds
out
movsl
test
jnp
xchg
inc
mov
jno
daa
mov
add
sub
mov
bound
jno
imul
roll
lret
mov
jbe
int
js
daa
xor
cmp
les
jno
adc
jp
xchg
or
add
mov
cs
push
cld
jns
lret
cwtl
push
pop
xor
mov
divb
shll
jmp
arpl
inc
rorl
dec
and
and
xchg
mov
fimull
sub
ret
add
adc
jne
stos
xchg
ret
cmp
mov
xchg
mov
and
sti
orb
sub
xor
orb
orb
jl
push
dec
push
add
popf
sahf
loopne
dec
lcall
jl
stos
pop
push
fcoms
idivb
sbb
cmp
mov
scas
ja
mov
xor
call
push
sub
inc
mov
xor
imul
inc
sbb
xchg
mov
sub
rcrl
test
std
jle
js
or
mov
pop
cmp
push
ljmp
ss
pop
jmp
sub
add
sub
jl
scas
jae
aad
aaa
push
bound
or
jo
add
mov
popf
xchg
fistl
decl
xor
xchg
in
pop
in
fistpl
out
mov
jge
out
inc
sub
push
popf
mov
popf
bound
popa
mov
filds
mov
inc
sub
addr16
fwait
and
or
cmpsl
sahf
push
test
mov
and
ds
inc
js
mov
lea
sub
pop
pop
scas
adc
cmp
aaa
dec
sbb
std
mov
mov
das
enter
cld
cmp
test
scas
fucomp
xor
xor
add
mov
add
fisubrs
dec
cmpsb
cltd
neg
xor
addr16
pushf
adc
cltd
push
mov
shll
mov
and
xlat
jns
pop
es
repnz
aas
mov
pop
xor
cmp
cld
adc
in
cmp
jecxz
ss
rcrl
mov
xchg
or
sub
into
sti
cwtl
dec
lret
fwait
pop
movsl
push
pop
movzwl
paddsb
in
mov
add
fsubrl
mov
inc
dec
rcrb
es
lcall
mov
mov
shl
fmuls
jno
call
push
push
fnsave
jmp
sbb
add
fdivrs
bound
push
adc
inc
add
ds
outsb
addl
pop
sbb
movsb
sahf
shrl
mov
shl
xor
xchg
jp
test
xor
jecxz,pn
test
sti
pop
sub
fstps
inc
cmpsl
sahf
fsubs
aas
push
leave
mov
cli
xchg
or
and
push
sbbl
dec
int3
je
pop
or
xor
mov
jno
pop
and
xor
jmp
and
sti
mov
sbb
jecxz
cmpsl
mov
scas
out
das
fimull
cmp
jle
add
jle
ss
mov
ljmp
cmp
sub
sub
stos
mov
jbe
xor
inc
faddl
ret
sbb
mov
cmp
cmp
sti
fmull
xchg
mov
lret
out
push
or
test
test
jge
sub
push
mov
and
roll
mov
inc
sbb
sub
inc
mov
fists
int
sarb
std
and
cmp
add
stos
test
and
cs
sbb
xchg
fs
in
xor
mov
inc
or
pop
test
lods
xor
lods
out
loope
imul
mov
ja
push
rorb
xor
sbb
xor
aad
sbb
rcr
bound
push
ja
xor
movsl
arpl
data16
insb
sub
in
add
jg
subl
out
add
inc
fnsave
divb
push
cmc
test
mov
into
mov
inc
mov
lods
push
dec
adc
mov
or
test
jecxz
mov
pop
push
pop
stos
push
sbb
cmp
outsb
ret
data16
push
and
sbb
cmp
test
out
inc
adc
inc
cwtl
xchg
xor
faddl
enter
jne
cmp
cmp
int
cmp
fnstenv
pusha
int
jmp
movsb
call
test
pop
arpl
and
je
pushl
inc
mov
mov
ss
aas
lock
hlt
jnp
repnz
inc
fcmovu
test
mov
xchg
icebp
push
data16
rorb
mov
mov
mov
push
pop
ficomps
jne
int
lods
mov
imul
pop
and
ja
mov
and
jmp
push
mov
or
xchg
or
int
mov
daa
ret
ror
lods
roll
mov
xchg
cmc
sbb
bswap
in
inc
sub
das
sub
popf
in
pop
test
jp
xchg
add
cmpsb
shlb
mov
push
push
mov
test
sbb
cmpsl
pop
cmc
test
add
mov
fimuls
hlt
popa
movsb
lret
lock
in
je
hlt
push
es
jp,pn
fwait
pop
cmpl
inc
and
sub
pusha
stos
jb
dec
or
lcall
fwait
mov
xchg
dec
push
icebp
cmpsb
dec
stos
ds
inc
push
mov
push
ficoml
or
ficompl
lea
test
mov
fcmovnbe
dec
xchg
jb
push
inc
sbb
adc
jecxz
jg
insl
cmpsb
shl
xorl
mov
insl
imul
sbb
inc
jae
les
icebp
push
stos
push
add
push
lea
jp
inc
push
into
jl
mov
iret
arpl
jle
and
dec
jne
lods
cmp
fidivrs
pop
push
xchg
in
sti
inc
adc
dec
movsb
or
les
divl
gs
mov
adc
enter
adc
or
imul
jne
mov
push
insb
nop
lock
xor
mov
pop
jl
mov
repz
ficompl
push
sub
pushf
jp
lahf
leave
scas
sbb
mov
ljmp
inc
loope
aaa
fisttpll
mov
movsb
push
aaa
and
add
lahf
dec
stos
aas
call
and
push
add
test
sub
inc
fistpl
je
les
and
inc
es
mov
popa
call
leave
and
aad
or
dec
mov
mov
push
adc
and
loopne
fucom
vpunpckhbw
mov
jge
push
les
jae
rcrl
icebp
mov
pushf
pop
inc
pop
mov
nop
test
xor
mov
pop
subl
fldl
dec
push
xor
push
sahf
adc
pop
dec
sbb
or
dec
cmp
jg
test
pop
dec
adc
inc
ficoms
push
pop
fldt
shl
pushf
jno
jp
inc
fsts
push
or
popa
push
or
jmp
orl
push
pop
sbbl
pop
mov
cld
mov
xor
adc
push
jp
sarl
lret
sbb
fs
jmp
bound
lods
int
mov
and
outsl
pop
or
test
pop
or
mov
imul
icebp
pop
mov
mov
ds
mov
jl
int
cwtl
int3
pop
jmp
inc
jbe
orb
push
loope
popf
pop
mov
jno
sbb
mov
add
mov
or
and
out
pushf
add
testb
insl
aaa
mov
aad
cwtl
xchg
fdivr
sbb
aam
pusha
mov
adc
scas
mov
loope
inc
pop
add
test
rol
ret
mov
les
jmp
jmp
sub
jb
ja
mov
popl
mov
cltd
push
paddw
cmpsl
pop
or
popf
out
lcall
aam
pop
test
xchg
mov
xor
test
fucomip
cmp
and
cmp
fs
mov
xor
movq
cwtl
scas
cli
call
mov
and
mov
push
dec
sti
push
pop
sahf
push
dec
cmp
cmp
popa
test
pop
imul
sbb
repz
add
cmpsb
jl
out
xor
mov
arpl
shll
pop
rcr
stc
xchg
dec
out
jge
stos
inc
mov
jbe
lahf
jno
in
rolb
cmp
bnd
sub
push
mov
ljmp
xchg
aaa
jecxz
mov
movsl
push
jnp
rol
pop
adc
mov
cmp
out
dec
stc
mov
sarb
jbe
std
das
add
aaa
cwtl
scas
push
test
or
jmp
icebp
test
mov
sti
pop
lods
jg
das
rolb
or
add
xchg
dec
loopne
jmp
lds
xchg
xchg
add
mov
js
movsl
xchg
iret
pushw
inc
push
test
loope
cwtl
into
lcall
dec
hlt
xchg
sbbl
mov
out
or
in
mov
into
xchg
shll
lods
jnp
pop
adc
das
add
fdivrp
pop
mov
pushf
std
add
dec
lods
aas
daa
inc
jne
push
lahf
test
ja
pop
dec
xlat
or
xor
stos
outsb
adcl
divl
dec
mov
icebp
pop
mov
add
add
xor
jns
push
test
into
jl
jge
dec
mov
cmp
sahf
dec
aaa
or
mov
cmp
sbb
pushl
and
pop
jne
ds
dec
adc
pop
rorl
loop
rorb
out
out
mov
shll
pop
out
sub
pop
xchg
add
add
rolb
lret
or
iret
mov
inc
dec
in
inc
mov
imul
outsl
mov
sahf
cmpsb
adc
adc
adc
imul
icebp
dec
fmuls
jo
mov
jo
sbb
adc
cmp
outsl
or
dec
and
loope
test
or
dec
xlat
push
mov
nop
mov
nop
mov
clc
mov
loopne
xchg
pop
jmp
push
xchg
in
das
mov
ret
es
xor
add
inc
jecxz
in
leave
das
mov
inc
pusha
adc
js
add
mov
loopne
fdivrl
sbb
push
mov
cli
jb
shr
or
jae
sbb
sbb
mov
push
dec
sti
dec
scas
cli
jl
shrb
lods
faddp
ljmp
mov
not
fs
shl
hlt
pop
test
fsubr
jp
cmp
les
xor
jp
pop
push
sbb
xchg
push
dec
jp
and
test
or
lcall
popf
mov
xor
fdivrs
outsl
sbb
sarb
ficomps
imul
pop
push
pop
push
push
out
shl
and
movsl
adc
adc
dec
jb
push
imul
cwtl
mov
aaa
or
add
loope
iret
add
loop
pop
pop
pop
stos
jecxz
mov
or
std
repnz
mov
xchg
mov
stc
inc
push
cmc
sbb
xor
cmp
hlt
cmp
js
or
insl
int3
adc
mov
iret
jecxz
ljmp
in
aad
and
adc
es
push
jbe
sbb
inc
iret
cmpsl
and
testb
rcrl
fnstcw
pop
lahf
mov
addl
inc
mov
inc
mov
mov
mov
or
push
xchg
and
pop
mov
sbb
sti
loope
in
xor
std
les
fsts
lcall
outsb
imul
sub
adc
or
jno
inc
out
push
cli
cld
push
cmp
and
mov
cld
lods
sbb
cmp
mov
outsb
mov
push
pop
jg
js
sbbb
and
mov
xor
cs
inc
rolb
std
push
adc
fadd
mov
sar
and
loopne
or
ja
sbb
mov
pushf
clc
sub
test
or
cmp
aad
mov
mov
adc
dec
loop
mov
dec
fisttpl
push
rolb
jno
add
push
fstps
in
push
mov
out
les
fcoml
aaa
aam
jp
icebp
iret
pop
inc
sar
lods
daa
or
jno
scas
lock
loope
inc
cltd
sti
cltd
jns
xchg
shl
in
out
ret
out
mov
js
mov
pop
push
inc
jecxz
mov
fisttps
outsb
inc
aaa
out
sub
lret
sbb
shll
pop
into
sbb
pop
cld
fnstcw
jecxz
subb
ret
inc
sbb
cmpsl
stos
idiv
stos
sub
enter
mov
and
les
jnp
push
sbb
push
sbb
xor
push
fisubrs
mov
aas
and
rcrl
dec
clc
sti
mov
ljmp
push
and
jecxz
cmp
xor
int3
dec
sub
insb
xchg
sub
sbb
sub
add
or
adc
in
inc
call
ja
mov
push
xchg
clc
shll
daa
xor
jbe
mov
daa
jecxz
dec
cmp
pop
sub
fs
rorl
hlt
xchg
pop
data16
fidivrl
pop
ret
xadd
inc
lods
or
test
adc
xchg
out
push
cli
sti
insb
sub
cmc
push
xlat
and
pop
mov
pop
mov
sbb
cmc
test
cmpsb
sbb
xchg
jno
pop
stos
jns
repz
jmp
jp
jnp
outsl
mov
adc
lret
ret
cmp
mov
ret
lock
and
lret
cmp
or
mov
in
clc
sbb
leave
jp
lea
xchg
in
jbe
cli
arpl
mov
cmp
jge
xchg
test
push
movsb
push
push
jb
xchg
push
or
into
das
inc
sub
jg
cmp
ja
push
pusha
insl
sbb
test
dec
les
nop
bound
cmp
ljmp
js
sub
lods
lcall
fsubs
in
dec
inc
dec
xor
shll
jecxz
fdivr
push
in
pop
mov
sbb
xor
or
nop
adc
int
jbe
cmpsl
cmpsb
push
fsubrs
cmp
mov
and
cwtl
into
push
dec
and
or
addb
xchg
popa
les
ret
pop
pop
push
jb
mov
dec
inc
mov
jb
sbb
jnp
inc
sub
pushw
xchg
jecxz
cmc
cmp
jmp
mov
push
mov
lock
shl
lds
mov
mov
loope
push
inc
adc
xor
loopne
mov
push
jb
jg
les
push
idivb
mov
xchg
mov
xchg
mov
jno
mov
in
push
movzbl
add
mov
fbstp
test
mov
push
lret
jmp
or
xor
bound
push
roll
dec
icebp
mov
mov
xchg
mov
jp
imul
lock
sbb
test
aam
mov
insl
in
inc
jae
cmpsl
sbb
sbb
sub
sbb
sbb
sti
push
xor
sbb
mov
scas
mov
and
pushl
fbld
mov
jb
sub
mov
xchg
jae
mov
cld
fstp
pop
cmc
add
in
addr16
push
rol
iret
mov
pop
pop
pop
or
sbb
inc
mov
xor
jp
adcl
lds
fsubr
test
sti
imul
aam
lcall
imull
jo
jae
cmp
incb
sub
mov
sbb
push
push
inc
pop
inc
mov
cmp
repz
dec
cmc
and
or
xor
push
mov
mov
stos
fidivl
mov
mov
sti
jne
mov
mov
jp
scas
pop
xor
ss
cs
and
cmp
test
pop
popl
cwtl
xor
cmp
ret
sti
mov
in
cs
jo
mov
mov
sub
push
mov
in
adc
icebp
aaa
sahf
xor
pop
fs
test
lods
cwtl
rcll
bswap
xchg
mov
lea
fidivrs
or
sub
sbb
inc
sarb
fmuls
js
dec
out
mov
test
icebp
fst
scas
pop
dec
out
popa
aaa
dec
and
dec
mov
das
push
inc
lcall
xor
sbb
dec
jp
cmp
rol
cmp
cmpsl
add
xchg
rorb
and
xor
add
out
dec
mov
pop
in
pop
bound
into
xchg
add
dec
jno
fsub
and
adc
sbb
ss
cmp
shll
pop
mov
pop
push
or
lcall
sub
rorb
xchg
dec
std
jns
jnp
lods
xchg
pusha
aad
cmp
out
lea
xchg
sbb
adcb
imul
and
jb
andl
push
inc
inc
push
xorl
movsl
push
js
loope
add
iret
adc
dec
push
pop
daa
mov
lods
jle
jg
add
loopne
arpl
stos
aad
fs
jae
ljmp
or
ljmp
sbb
outsl
shrb
inc
lcall
dec
inc
pop
leave
rol
cmp
xchg
adc
daa
push
sub
fdivr
cmp
or
shrl
lret
jns
clc
sahf
or
xchg
mov
cwtl
loopne
ficoml
jge
gs
fimuls
sub
test
jno
xchg
addr16
inc
inc
sbb
dec
sbb
gs
out
aas
loop
mov
rcrb
gs
mov
cmp
mov
pusha
and
insb
mov
mov
rcrl
shrb
push
subl
out
cli
xchg
mov
cmp
adc
test
and
and
sbb
movb
fwait
and
jae
push
aas
cmpsb
mov
dec
jmp
mov
mov
mov
dec
adc
inc
xor
push
sub
or
mov
imul
pop
mov
or
repnz
sbbb
jl
add
jae
insl
test
jge
inc
sar
and
aas
sbb
mov
cmpl
and
in
leave
add
ss
and
lea
inc
insb
xchg
outsb
or
jle
mov
icebp
neg
dec
fmulp
movsb
or
xchg
push
push
inc
fistps
mov
ret
xlat
push
sub
cltd
and
frstor
cld
leave
sarb
jmp
inc
fwait
ljmp
jo
cmpb
xor
mov
in
dec
pop
mov
inc
push
pop
ljmp
adc
mov
jno
xchg
fbld
xor
into
xchg
call
jg
rcl
idivb
sbb
movsb
jecxz
out
mov
jmp
sub
and
in
mov
sbb
rcl
push
not
push
lods
hlt
loope
inc
movsb
ljmp
ja
dec
bound
jns
cs
int3
int
mov
data16
xor
adc
test
ljmp
pusha
pop
movsl
jecxz
stc
cmp
cs
dec
shll
cld
fs
pop
test
adc
xchg
xchg
xchg
mov
loopne
mov
adc
sbb
sbb
pop
mov
rol
imul
imulb
sar
in
loop
ds
dec
sti
iret
fldt
sbb
xor
or
test
jg
jb
mov
lret
jmp
cmp
pop
pop
out
iret
mov
shl
xchg
pop
and
jbe
push
in
stos
push
rorl
js
jns
in
mov
aas
pop
hlt
dec
ss
add
sbb
adc
sahf
aas
stc
push
jp
or
subl
cmp
add
cs
outsb
dec
jl
pop
ds
insl
mov
out
adc
mov
aas
leave
lods
xchg
fimull
jo
pop
dec
push
cmp
mov
push
out
fisttpl
movsb
loop
subl
imul
fimuls
cmp
lods
ja
jne
push
push
fdivrl
fimuls
inc
jmp
or
jb
jno
rorl
mov
test
or
sbb
mov
pop
sbb
rcrl
push
mov
ret
std
outsb
shr
mov
adc
jge
fcoml
std
mov
hlt
and
jecxz
cmp
push
cmp
ljmp
sarb
xchg
fs
scas
cmp
sub
hlt
jmp
mov
cmp
addl
dec
and
imul
movb
lea
inc
xor
test
mov
adc
mov
push
push
mov
mov
in
enter
ja
popf
sahf
lahf
aas
sub
iret
sbb
mov
cld
cmp
in
cmp
ret
sbb
outsb
inc
xor
lods
out
popa
ret
jg,pn
adc
aad
push
inc
leave
stc
adc
or
insb
sub
pop
pop
dec
xchg
outsb
adc
mov
add
cld
jb
jno
out
push
pop
lods
mov
out
movsl
push
iret
in
sub
data16
enter
mov
inc
fmuls
xchg
mov
stos
inc
pop
mov
es
jl
mov
loopne
sbb
mov
fiaddl
jl
not
mov
mov
iret
sub
dec
xchg
lock
aas
pop
lock
mov
jmp
lods
mov
xor
movsb
push
cmp
sahf
aam
jge
push
pop
and
push
jg
into
jno
mov
divl
adc
push
push
xchg
adc
cmpsl
stos
out
ret
cmpsb
mov
or
fsubs
fmuls
cs
add
loop
add
xchg
in
pop
inc
test
pop
in
and
mov
jmp
dec
xor
xchg
int3
les
dec
push
sbb
xchg
mov
sub
stos
cmp
adc
fisttpll
repnz
roll
mov
xor
subb
lcall
fs
push
or
dec
ret
ret
pop
pop
adc
aad
adc
aad
ja
dec
xor
sbb
stos
fimull
and
mov
dec
fs
push
dec
pop
sbb
push
addb
sti
adc
xor
cmpsl
test
popf
hlt
cmp
adc
xchg
dec
mov
movsl
push
orl
push
rcrb
data16
insl
mov
icebp
mov
test
lock
mov
xor
repz
pop
popa
mov
ret
mov
mov
jl
adc
lcall
adc
pop
jge
addr16
cmp
in
pop
mov
cmp
push
lods
xor
std
test
out
adc
xor
mov
ja
aam
pextrw
cmpsl
add
das
fcoml
add
dec
movsb
mov
push
test
push
negl
outsl
std
out
subl
insb
xor
pusha
movsl
mov
lcall
push
stos
fdivrp
or
mov
stos
dec
inc
sub
fistpll
sbb
test
xor
or
ja
pop
cmp
ss
cmp
xor
xlat
mov
and
cld
in
daa
inc
adc
sahf
das
bound
and
addb
out
lcall
iret
mov
mov
call
cmp
fdivr
repz
clc
in
call
inc
lea
js
stc
and
or
xchg
out
sbb
push
test
push
ficomps
and
shrb
cli
stos
aad
dec
xchg
sbbl
js
popf
xor
mov
stos
iret
xor
std
fs
nop
js
add
dec
out
inc
ret
cmp
sbb
and
mov
xor
cmp
inc
push
fcoml
mov
xchg
fs
scas
sub
int
popf
add
add
aaa
test
pop
test
sub
mov
dec
or
xchg
roll
sti
or
xchg
or
repz
sbb
add
jmp
aam
lea
aas
jb
dec
jp
sbbl
ret
nop
add
lahf
aas
shrb
or
push
dec
jne
mov
jecxz
pop
aam
addl
roll
lea
or
popl
rcrb
jmp
cld
or
add
jecxz
lahf
mull
pushf
ljmp
xor
sub
gs
inc
xchg
push
jecxz,pn
outsb
pop
cmp
testl
pop
dec
push
mov
cli
ficoms
jb
mov
jmp
ja
push
scas
or
xor
jno
sbb
inc
pop
adc
and
inc
nop
xor
sub
push
ret
mov
fs
aam
mov
or
sbb
sub
push
ds
mov
inc
gs
loop
ds
lahf
iret
jmp
outsb
fisttpll
sbb
mov
hlt
mov
bound
repnz
pop
mov
pop
hlt
dec
scas
or
mov
push
mov
popf
scas
leave
xor
popa
bound
repz
ret
loopne
ss
iret
dec
outsl
mov
in
mov
mov
add
fcom
scas
gs
jno
fimuls
stos
adc
pop
sbb
inc
dec
pusha
sub
mov
sar
testl
jbe
pop
push
lds
loopne
mov
addr16
icebp
test
enter
shlb
mov
stc
sbb
jbe
xlat
mov
sub
mov
adc
jo
sbb
push
testb
out
icebp
scas
test
mov
lods
movsl
rcll
jnp
ljmp
cmpsb
inc
pop
inc
jge
mov
es
stc
adc
lock
jl
movsl
daa
xorb
cmpsl
xor
inc
push
rorb
repz
mov
push
push
xor
add
pop
adcl
mov
xchg
fwait
mov
fnsave
je
push
sub
xor
nop
xchg
fs
mov
mov
mov
xchg
arpl
mov
aam
test
and
sbb
jbe
adc
xor
lock
xchg
fucomi
dec
add
sbb
das
mov
adc
and
lods
sub
jbe
rcl
sbb
fcompl
sbbl
pop
ret
inc
gs
and
lret
or
fistpll
xor
sahf
fadd
and
cmp
or
icebp
je
mov
stos
or
mov
adc
test
movsl
xor
pop
js
push
xchg
clc
es
sbb
leave
imul
pop
mov
into
andb
scas
popf
or
test
fdivr
lret
mov
cmp
pop
xchg
cmpsl
xchg
fistpl
mov
dec
lods
and
mov
scas
pushw
xchg
add
mov
xor
mov
sbb
push
push
ret
jo
push
push
je
and
arpl
loop
pop
sub
pop
ss
push
je
add
xchg
stos
mov
push
lahf
dec
xor
call
or
iret
or
es
or
sbb
inc
dec
push
shr
sub
push
push
cmp
push
enter
inc
jmp
add
ret
dec
add
xchg
pop
cmc
jne
out
sub
inc
test
int3
jge
pop
adcl
adc
dec
arpl
iret
in
add
xchg
xchg
cld
pop
pusha
in
xchg
pop
cwtl
aaa
in
cmp
adc
cltd
pop
imul
rorl
xor
sbb
sbb
lds
scas
iret
popa
gs
leave
imul
sarl
cltd
add
add
sbb
mov
dec
inc
xchg
jns
sub
sub
fistpll
xchg
cmp
or
mov
aam
hlt
push
adc
inc
cmpsb
movsb
dec
xchg
xor
shlb
popf
or
xchg
mov
icebp
popa
or
push
sbb
in
push
inc
fisttps
out
dec
sbb
pop
dec
sub
mov
orl
push
xor
out
ds
mull
fildll
stos
notb
sete
push
push
sbb
rorl
rorl
outsb
and
gs
cmpsb
inc
xchg
scas
test
shl
mov
push
idivb
sbb
pop
stc
cmp
lock
lcall
xlat
mov
data16
flds
pop
mov
dec
hlt
les
js
jne
mov
sti
jp
lret
lock
adc
sub
int
imul
dec
jno
sub
rorb
pop
insb
test
push
or
push
xor
mov
or
mov
or
inc
bound
xchg
adc
add
dec
sub
and
fmull
lahf
sub
pop
shll
mov
fnstcw
nop
enter
and
inc
push
pop
dec
xchg
loop
xor
xor
loop
cltd
in
adc
xor
jns
ds
inc
fdivrs
cmp
jg
and
addr16
mov
cmp
repz
cmp
fcompl
pusha
aam
jno
adc
jo
jp
dec
mov
jp
inc
xchg
shlb
sub
popf
or
or
leave
xchg
test
mov
andl
xor
mov
or
and
fmull
sbb
lods
test
fs
pop
xchg
popa
jl
sbb
lret
xor
or
cld
pop
std
ret
jno
mov
adcb
imul
ds
xlat
dec
adc
aam
fs
or
int3
clc
stos
or
sbb
add
dec
cwtl
jno
adc
clc
cwtl
push
cli
test
add
pop
lea
push
cmpsl
xor
xchg
and
or
sub
add
testl
pop
jno
imul
addr16
mov
call
push
push
repz
icebp
das
outsl
shll
gs
xchg
lds
push
outsb
and
stc
cld
xchg
inc
mov
push
dec
in
xor
cs
ds
or
repnz
sbb
shl
pop
ds
fldenv
sbb
xor
stos
xor
push
leave
add
movsl
pop
inc
leave
push
sahf
test
addr16
add
out
leave
stos
push
inc
xor
out
xchg
pop
or
sub
jae
push
xchg
xchg
or
inc
jns
stc
push
dec
aaa
jecxz
inc
inc
popa
push
mov
movl
push
sahf
fs
add
mov
or
xor
mull
dec
push
test
push
cmpsb
popf
aad
pushl
sahf
popa
cwtl
mov
sahf
pop
popf
and
push
sarb
lahf
out
push
jecxz
lahf
cmc
mov
loopne
mov
orl
mov
push
add
fs
cmp
call
dec
push
pusha
mov
sbb
sub
addb
bound
fs
push
xor
fmul
mov
neg
imul
cmp
int3
ss
jecxz
adc
pop
jl
cmp
xor
xor
xchg
repz
pop
xchg
dec
lcall
int
mov
sbb
fstpt
sbb
jae
bound
int3
cld
or
not
int3
loope
sub
insb
rorb
pusha
data16
sub
test
rcll
mov
pusha
int
test
sub
aad
rorl
cli
icebp
sbb
addr16
lea
les
ret
jmp
jl
pop
mov
mov
dec
sbb
jmp
push
int3
xor
xor
call
addr16
pop
shlb
out
test
rorb
or
lahf
cwtl
cmp
and
pop
rorl
int
andl
fldcw
imul
sarl
mov
jne
gs
scas
lock
jb
add
imul
sub
lcall
mov
int
xchg
and
mov
aad
mov
or
into
ret
stos
inc
shlb
cmpsl
dec
insl
sahf
loope
loopne
or
lock
mov
fs
packsswb
outsb
mov
cltd
mov
mov
popa
out
es
fsubl
xor
fs
shrb
dec
or
and
stos
mov
adc
cmc
sahf
pop
bound
lods
movsl
add
push
test
shr
push
lds
mov
and
sbb
daa
push
ds
addr16
xchg
mov
push
cld
push
xlat
xchg
imul
fisttpl
in
out
flds
out
xchg
lret
std
mov
stos
xor
ja
push
adc
ret
rol
jno
sbb
pop
or
add
addr16
stos
jns
das
push
mov
mov
arpl
rcrb
jnp
stos
and
popa
and
dec
pop
pusha
jbe
icebp
jnp
in
in
sbb
mov
jg
clc
cmp
cmp
scas
inc
hlt
fisttpl
call
lea
and
repnz
shrl
popf
xchg
das
mov
sahf
fucomip
test
mov
std
xor
and
jp
sbb
mov
filds
inc
mov
mov
cmp
cwtl
rcr
jno
ret
adc
inc
daa
dec
cmp
push
pushf
jb
xchg
test
xor
jg
scas
rcrb
sub
rol
adc
cmp
bound
cs
adc
js
aas
sbb
les
cltd
out
add
outsl
pop
shll
mov
js
out
push
dec
sti
push
lahf
cmp
leave
dec
fiadds
std
jns
or
lahf
popl
fdivr
cld
sbb
dec
cmp
rcr
mov
fnstcw
mov
in
sbb
data16
jb
jp
fwait
jp
shrl
jo
fistpll
out
fcomi
lods
daa
push
cmpsb
sbb
adc
sub
sub
sar
adc
adc
pop
outsl
pop
xor
icebp
std
and
inc
imulb
fistpll
in
push
icebp
ds
je
js
mov
mov
mov
jnp
cmp
ljmp
std
and
or
or
and
andb
mov
push
cmp
or
adc
arpl
mov
je
cltd
dec
mov
in
jecxz
cmp
rolb
push
cltd
into
bound
mov
cld
in
xor
in
cmp
pop
callw
fs
mov
icebp
pushf
and
jne
fdiv
mov
std
fwait
jo
mov
sub
inc
in
gs
pushf
or
inc
test
add
push
inc
loope
sbb
das
ret
scas
mov
mov
pusha
cmp
xor
pop
add
lcall
lods
mov
add
cli
add
out
cmpsb
rclb
mov
negb
jl
adc
test
sbb
out
das
test
sbb
pop
mov
in
cmpsl
stc
jmp
xchg
xorl
jmp
cmp
fidivrs
aam
ss
mov
lcall
jg
inc
jns
rcrb
pop
vpmullw
mov
cmp
cmpb
popf
jne
movsl
push
imul
push
jne
mov
fisubrs
xchg
adc
js
add
lock
enter
les
xchg
mov
jbe
inc
das
test
mov
jnp
fstps
jp
fcomi
pop
sbb
jmp
pop
fldl
mov
enter
mov
or
xchg
and
pop
sub
or
xchg
fwait
and
mov
xor
push
sbb
xor
jecxz
jmp
nop
push
and
fnstsw
push
rclb
mov
cmpsl
icebp
inc
ret
dec
cmpsl
push
and
test
cmpsl
shlb
stos
pop
push
sbb
xor
sbb
lret
ljmp
inc
inc
rorb
jne
js
sub
pop
xchg
cwtl
popf
data16
mov
cmp
addr16
push
movsb
clc
mov
cwtl
scas
add
push
fstps
mov
sub
dec
outsb
test
rorb
sbb
inc
fisttps
es
or
movsl
in
pop
xchg
push
mov
pop
dec
cmp
bound
arpl
adc
push
scas
cmp
inc
aaa
adc
dec
in
sbb
cmp
and
add
pusha
aaa
xor
les
add
sahf
and
lcall
and
sbb
lret
xchg
dec
lcall
inc
cmpsb
inc
adc
cmpsl
push
xchg
movsl
mov
jg
lock
add
xchg
stc
je
or
or
and
xchg
xor
cmp
push
cmpsl
movsb
push
push
mov
mov
enter
stos
pop
push
hlt
push
test
fisubrl
je
enter
mov
mov
int3
pop
clc
imul
ret
inc
in
jecxz
sub
js
push
scas
fwait
lret
rol
xchg
jb
aam
xchg
add
xchg
jb
dec
repz
mov
repz
mov
mov
sub
inc
xchg
ret
mov
inc
pop
imul
dec
cld
ljmp
jae
jle
test
cmp
filds
inc
cmpsl
sar
or
inc
leave
rcrl
fistpll
xor
jnp
xchg
aas
push
iret
jl
and
rcrb
xor
dec
scas
lds
stos
sbb
sub
hlt
fisubrl
mov
cld
inc
pop
adc
es
lods
lahf
fisubl
imul
fildl
jne
or
icebp
or
leave
aad
gs
stos
sbb
dec
ja
sbb
mov
cmp
notb
mov
out
pop
or
loope
jbe
jbe
roll
outsl
mov
dec
mov
push
push
pop
jl
jl
dec
sub
scas
fildl
das
push
cmc
repnz
mov
pop
imul
ss
std
sub
bound
movlhps
cmp
sub
pop
in
out
pop
fs
pop
inc
sub
ljmp
add
jl
adc
cmp
fildll
adc
jecxz
xor
cld
pusha
daa
pop
jle
sbb
gs
push
dec
repz
pop
leave
sbb
or
addr16
adc
push
into
fstpl
mov
xor
movsb
or
jbe
int
mov
ret
mov
push
xchg
or
mov
and
cmpsb
sub
in
xorl
testb
sub
xchg
jb
xor
popf
cmpsb
fstl
xor
cmp
popa
in
mov
lea
push
mov
ret
and
inc
in
lods
hlt
mov
push
mov
imul
cmp
mov
and
xor
shrl
rcll
jge
mov
shrb
add
roll
dec
pop
cmp
sbb
push
pushl
les
pop
test
test
loopne
adc
fistpll
bound
sub
mov
mov
lds
add
xor
sbbl
xchg
xchg
insb
xchg
cmpsl
jo
push
sub
je
pop
outsb
test
mov
imul
pop
fdivs
pop
rclb
add
inc
xchg
inc
jmp
sbb
enter
ret
mov
mov
and
cmpsb
pop
daa
add
sbb
loop
mov
es
xlat
pop
int3
dec
adc
dec
mov
pop
fsub
js
push
jg
xor
push
fwait
cs
loope
xor
dec
mov
ljmp
outsl
sub
cld
dec
lock
mov
xchg
fcoml
mov
mov
sub
ds
jle
in
jl
jo
in
leave
mov
out
jle
adc
loopne
adc
jbe
cmp
clc
add
push
lret
mov
in
jb
inc
clc
daa
lret
adc
adc
or
push
mov
mov
or
scas
xor
inc
mov
cmp
adc
xchg
mov
mov
sub
out
ret
lods
fwait
mov
test
sub
mov
xchg
adc
in
add
jb
rorb
lret
sbb
leave
lods
jb
pop
add
cs
jae
mov
rorl
loope
push
arpl
push
mov
roll
sbb
rorb
pop
inc
jle
push
lret
fisubrs
cmp
inc
xchg
jns
push
mov
insb
push
fnstenv
movsb
movsl
enter
add
outsb
push
pop
stc
mov
ja
mov
xchg
les
gs
cs
dec
xor
and
mov
and
data16
test
pop
push
push
popl
push
aam
lods
rcrl
adc
mov
sbb
push
loope
xchg
fisubs
lcall
jmp
dec
mov
xor
out
dec
mov
movsl
cmpsl
push
negl
cltd
dec
outsb
dec
or
pop
fisubrl
push
push
mov
mov
sub
out
loopne
mov
and
inc
push
movb
loop
xchg
imul
out
adc
jecxz
inc
lock
inc
push
imull
sbb
aas
jae
stos
add
cwtl
and
jecxz
mov
push
mov
mov
sbb
jnp
scas
adc
dec
cmpb
daa
ret
adc
lret
inc
jl
cli
cmp
pop
into
mov
push
or
inc
ljmp
and
sbb
out
fdivrs
xchg
out
xchg
movsb
popa
sub
jns
jnp
popa
sub
bound
xorl
sbb
js
push
mov
jp
fmuls
shl
cmp
outsb
or
xor
in
xchg
dec
sahf
cmp
cmp
test
outsb
pop
test
or
cli
xchg
pop
push
js
cmp
xor
lds
outsl
or
leave
mov
dec
outsl
pop
lods
xor
push
rcrb
pop
rcrl
add
mov
ret
and
pop
xor
add
or
pop
shrb
lret
xor
movsb
mov
xchg
insl
movsl
cwtl
and
xchg
dec
inc
data16
mov
push
ffreep
pop
pop
je
lds
dec
xchg
sbb
add
xchg
inc
ss
add
ds
insl
add
dec
mov
ljmp
add
adc
repnz
imul
and
or
ljmp
shl
std
subl
sbb
sbb
xor
call
lods
data16
testl
sbb
cmp
repz
push
add
pop
std
and
inc
jle
add
jecxz
insb
fcmove
loopne
inc
es
hlt
clc
subl
loop
or
adc
mov
lcall
icebp
inc
sub
pop
cmc
pop
jecxz
and
jmp
push
cli
xlat
push
cmpb
pushf
mov
add
dec
pop
repz
sub
repz
mov
or
in
xchg
stos
mov
pushf
or
pop
inc
mov
hlt
in
jne
cmp
sbb
shrl
ret
jg
adc
scas
out
sbb
mov
xor
xchg
aam
mov
jg
mov
mov
dec
or
int
into
inc
inc
xchg
adc
and
push
adc
jecxz
cmp
imul
sbb
jno
xchg
sbb
stos
dec
movsb
ret
es
insl
push
jecxz
mov
cltd
clc
push
loopne
in
fsubl
mov
outsb
mov
rcr
orb
imul
lods
scas
push
stos
ja
push
mov
fnstsw
fstps
loopne
loopne
mov
pop
ds
jmp
cmp
xor
mov
mov
xchg
or
jbe
adc
fisubrs
ds
orb
lock
mov
popf
xorb
xor
outsl
cmp
das
cmpsl
jecxz
inc
leave
dec
sbb
and
adc
dec
add
cmp
ret
sub
xchg
enter
dec
cmpsb
inc
rcrb
push
mov
pop
cmp
cmc
adc
sbb
or
aam
adc
mov
xchg
pop
mov
cmp
sbb
cmp
shll
jmp
mov
cmp
mov
xchg
mov
push
pop
push
adc
add
mov
and
into
jns
and
cmp
lock
movsb
rcrl
xchg
add
or
je
inc
inc
xchg
push
cmpl
inc
das
add
inc
xchg
arpl
add
cmp
fisttpl
push
sbb
cld
aad
adc
or
add
jp
mov
sarl
loope
ret
shrb
out
mov
xchg
iret
repz
pushl
into
cs
cmpsl
sbb
out
xchg
cmp
pop
or
sub
out
xchg
lods
lods
adc
mov
aas
jge
nop
jmp
enter
fcoms
pop
loope
flds
add
lds
and
cmc
sub
fiadds
mov
or
sbb
cli
dec
cmp
or
scas
in
xor
sub
xchg
jmp
add
icebp
xchg
dec
es
insb
stc
jl
outsl
ss
fwait
popf
ljmp
out
out
xchg
subb
xchg
out
pusha
addr16
out
sti
add
xor
or
xor
stos
popa
dec
mov
inc
push
xor
xchg
sti
movsb
jl
aam
out
inc
jl
popf
push
sub
or
mov
bound
fcompl
and
popa
xchg
push
ja
rcll
pusha
cmp
mov
adc
cmp
xor
clc
jmp
pushf
push
fisubs
hlt
popf
in
push
and
mov
hlt
add
pop
inc
jo
xchg
inc
shl
test
mulb
lret
pop
sahf
clc
jmp
mov
aam
mov
push
mov
mov
mov
cmpl
jb
in
mov
dec
mov
out
ficoms
scas
cs
test
imul
xor
mov
mov
imul
nop
or
and
cmp
xchg
jge
adc
loope
jno
mov
jge
arpl
bound
mov
test
enter
out
scas
fmull
mov
mov
jmp
pusha
sbb
andl
cmpl
pop
lea
shll
aad
or
ja
orl
lcall
aas
cmpsb
pop
cltd
xorb
in
xchg
in
pop
fdivrs
sbb
mov
lcall
mov
mov
pop
sub
cwtl
outsb
pop
jns
dec
sbb
pop
icebp
dec
jb
stos
mov
cli
jne
cmp
and
push
ds
sbb
iret
or
mov
dec
js
fsubrs
daa
jnp
jae
out
mov
in
mov
shll
cmc
daa
shrb
outsb
cltd
nop
pop
stos
lahf
sbb
push
sub
setae
in
cmp
mov
sbbb
inc
int3
sub
jl
mov
or
cli
sbb
cmpsb
adc
std
pop
fisubs
pop
push
xchg
pop
subb
enter
mov
push
add
jmp
or
in
sub
cmp
lds
bound
push
push
or
dec
dec
push
outsl
mull
sbb
js
sub
cmpb
dec
sbb
shll
in
or
or
mov
inc
push
insl
rolb
add
loopne
push
sbb
imull
push
ror
stc
cmpl
insb
aad
cld
inc
faddp
je
ds
cld
push
out
pop
jns
lds
cmpsl
out
xchg
jecxz
int3
das
cwtl
mov
loop
cmp
out
js
and
add
lret
lock
mov
shrb
imul
gs
push
mov
mov
add
popf
dec
push
xchg
jne
sbb
add
int
sub
jmp
in
add
inc
jne
lods
lahf
mov
stos
dec
fs
push
addr16
out
shrl
jmp
popa
sbb
xchg
xor
stos
inc
fwait
scas
adc
xchg
mov
sub
cltd
or
fst
cmp
rorl
cmpsb
aaa
pushf
mov
cmpsl
jbe
das
in
pushf
xor
in
fcmovu
and
xor
pop
push
push
test
xchg
mov
add
xor
push
cli
push
xsavec
sbb
sbb
mov
and
adc
das
sub
or
xchg
imul
rcll
shll
rep
xor
int3
push
mov
add
gs
lahf
loopne
outsl
pop
out
fcomip
scas
ljmp
std
mov
addr16
mov
mov
add
sbb
shll
insb
adc
lods
ret
test
mov
cmp
inc
mov
jecxz
sti
sbb
imul
cmp
mov
and
or
repnz
sub
xchg
or
dec
call
das
dec
mov
pusha
push
inc
sbb
bound
push
mov
pop
sub
aad
aas
jae
sbb
sbb
es
cs
mov
fisubrl
push
les
xchg
jge
and
lret
xchg
jg
inc
das
shr
push
pop
add
pop
shrl
out
and
pop
mov
dec
mov
adc
xchg
inc
testl
mov
imul
aam
push
loop
jecxz
fisubrl
out
mov
pop
pushf
in
mov
push
push
and
mov
inc
add
and
mov
mov
cmp
fsts
in
sbb
mov
xor
push
sub
mov
adc
inc
sub
adc
xor
and
xchg
sub
mov
pop
jp
scas
mov
outsb
add
pusha
shl
mov
sub
or
mulb
enter
mov
adc
ljmp
mov
movsb
inc
mov
pop
int3
lock
xchg
or
fsub
insl
mov
ljmp
and
inc
pop
fs
inc
test
adc
orb
add
ret
or
out
data16
jne
loopne
mov
fidivrs
sub
and
testl
imul
jg
xchg
pop
mov
inc
les
sub
mov
xor
fs
repnz
push
xchg
cs
out
pop
das
leave
push
jno
xor
int
adc
rcrb
movsb
jo
adc
dec
mov
push
enter
iret
pop
fisubl
mov
xchg
xchg
xchg
int
adc
sti
dec
pop
push
fidivrl
and
sbb
adc
add
mov
push
das
pop
and
xchg
inc
sub
add
inc
jg
mov
lods
jnp
add
xlat
mov
dec
nop
pop
popa
les
imul
cmp
or
leave
ljmp
mov
ss
xor
xor
repnz
jae
in
shl
aas
sbb
test
filds
into
les
cld
xor
dec
cmp
mov
fwait
clc
inc
pushf
shll
fwait
mov
mov
mov
sar
xchg
mov
add
ljmp
imul
push
fisubs
and
add
inc
loopne
inc
mov
xlat
inc
mov
sbb
mov
scas
dec
ljmp
inc
and
addb
add
push
aam
bound
and
movsl
jl
cmpsl
out
sub
sbbb
jno
cmp
fistps
pop
and
xchg
loope
jb
adc
ret
icebp
test
sbb
fwait
sahf
shrb
ret
add
jge
cmpsl
pusha
add
jno
into
and
pop
xchg
scas
inc
jne
jb
out
test
call
cmp
pop
mov
ja
test
sub
mov
out
outsl
aam
sub
sub
icebp
xor
or
sti
pop
test
addr16
jnp
and
test
mov
push
aas
dec
ret
mov
and
adc
push
dec
cmp
mov
pop
xor
push
mov
adc
nop
into
add
in
inc
mov
or
adc
xor
cmpsb
cmpsb
fldl
inc
adc
jle
jo
pop
call
and
out
mov
js
dec
loopne
rorb
daa
ret
jmp
dec
mov
dec
jl
add
mov
aaa
xchg
std
dec
fdivrl
dec
outsl
ljmp
notl
mov
arpl
xchg
les
leave
iret
push
loop
in
ffreep
dec
jmp
jne
xchg
and
sbb
ljmp
mov
lcall
aaa
iret
jb
cmp
lods
lds
dec
jo
mov
jecxz
pop
push
mov
cmp
inc
push
sbb
loop
xor
push
ret
inc
jl
std
stc
into
mov
cwtl
lods
loope
cwtl
sbb
jns
pop
loop
pop
dec
cmovp
arpl
repnz
ja
ss
sub
popa
mov
scas
add
cltd
xlat
pop
loopne
pushf
mov
cmpsb
sbb
jecxz
dec
icebp
in
leave
sub
lret
add
popa
cmpsl
sbb
enter
adc
sbb
xchg
mov
scas
aam
add
dec
dec
aaa
movsb
out
pusha
jb
or
cs
fistl
or
loope
mov
ret
test
loop
pop
xlat
mov
fwait
mov
iret
and
mov
mov
out
adc
xchg
jle
rcrb
adc
inc
xor
iret
sarl
fmuls
into
test
mov
clc
mov
lret
repnz
sub
loopne
add
out
mov
sarb
inc
aaa
jg
loope
jp
out
cltd
jl
sbb
sub
cmpsb
pop
rcrl
stc
rcrl
das
inc
mov
pop
adc
fidivrs
clc
hlt
stos
pop
rolb
cmp
fadds
pushfw
xchg
loop
out
jnp
jl
mov
jne
xlat
popa
pop
xlat
and
sbb
cmc
dec
or
mov
adc
sbb
cld
pusha
repnz
jo
push
pop
icebp
outsl
fwait
movsl
jmp
scas
pop
seto
adc
add
jl
outsl
and
push
sbb
dec
push
mov
ds
insl
mov
iret
mov
aas
iret
add
popf
jns
imul
imul
inc
scas
stos
ret
push
fistps
jl
inc
insl
push
aad
jnp
cwtl
push
dec
inc
inc
pusha
and
jl
add
mov
jmp
roll
or
pop
xchg
stc
nop
sub
arpl
setno
jb
ljmp
mov
mov
push
xchg
pop
pop
and
stc
push
in
mov
jne
adc
xlat
jge
mov
xor
lcall
cmp
pop
pop
xchg
stc
lret
les
aaa
or
sti
mov
jge
cmpsb
imul
cmc
adc
xchg
dec
sbb
lock
inc
add
data16
push
jl
fwait
xchg
xchg
cli
sbb
cmpsl
mov
stos
out
stos
cld
jo
incb
or
jae
mov
xchg
mov
and
or
mov
lcall
add
jecxz
jnp
jmp
div
xchg
jp
mov
ja
mov
jle
lcall
out
sar
in
dec
mov
incl
fwait
repnz
popa
push
and
insb
xchg
mov
fwait
adc
cli
icebp
shrb
sub
lea
stc
sbb
push
dec
loopne
jg
mov
popf
repnz
test
mov
testb
ret
add
pushf
test
cltd
lods
pop
cld
add
push
mov
out
xchg
xchg
sub
sbb
sbb
inc
ds
adc
cmpsl
sub
mov
add
lods
adc
jecxz
scas
or
imul
cmp
fistps
add
mov
ret
push
ss
mov
add
lret
mov
cmc
or
lea
add
or
packuswb
icebp
outsb
mov
cli
repz
push
mov
js
adc
xchg
and
xchg
mov
add
xchg
and
dec
cltd
pop
scas
mov
sbb
mov
popf
jb
subb
clc
dec
mov
and
mov
push
stos
shr
scas
jns
sbb
add
mov
in
sbb
iret
lcall
or
negl
inc
adc
or
movsb
xchg
fidivl
sbb
mov
mov
iret
xchg
pop
inc
arpl
add
sbb
je
bound
cwtl
fucom
stos
pop
loop
int
xchg
bound
jmp
ret
adc
je
outsb
dec
out
loop
fadds
inc
les
data16
repz
mov
test
xchg
roll
cmc
cmpb
faddl
or
lea
inc
cwtl
loop
rorl
add
jge
test
outsb
jnp
inc
clc
jae
push
aad
stc
aam
out
and
lret
jge
std
jnp
sub
sub
and
iret
jb
lds
pop
ret
cmp
je
mov
cs
jno
dec
daa
inc
es
lret
jno
mov
les
and
adc
sbb
test
add
sub
idivl
adc
gs
iret
inc
icebp
enter
into
xchg
sbbl
loope
stos
mov
cmpsl
adc
into
inc
adc
aam
add
add
sbb
pop
sti
leave
test
std
nop
sarb
sbb
addr16
xchg
shll
adc
hlt
mov
xor
xchg
fiadds
js
and
jo
mov
leave
rorb
lcall
das
test
adc
lret
xchg
fsts
jnp,pt
imul
aas
in
or
mov
push
mov
xchg
and
sbb
leave
sbb
cmp
icebp
jge
inc
leave
stos
mov
lret
je
loope
jl
or
xor
sub
mov
xlat
xor
push
mov
mov
test
icebp
into
fs
cmp
clc
pop
popa
sub
sbbb
aaa
test
push
xor
in
jns
pop
xor
les
mov
movsl
cli
jne
incl
lock
xchg
sbb
lret
xlat
lret
push
leave
cmc
mov
leave
pop
pusha
pop
or
aaa
pmuludq
inc
sub
mov
xchg
fwait
xchg
loope
and
jb
push
sbb
pop
lret
sub
call
jmp
dec
jns
int
iret
sahf
lea
mov
ljmp
push
shrl
scas
pushf
fsubrl
les
pop
sub
nop
xor
ret
push
jecxz
pop
cwtl
or
repnz
add
popa
dec
dec
mov
xor
mul
test
mov
data16
inc
daa
xchg
loop
pop
xor
and
movsb
cs
mul
sti
iret
push
push
add
push
cmp
stos
and
sub
xchg
push
xlat
inc
push
pop
lods
call
insl
mov
and
sti
mov
stos
xor
loop
fcmovbe
push
pop
sbb
incl
fildl
mov
pusha
xchg
xchg
add
repz
orl
sahf
mov
xor
iret
mov
test
cmpsb
ret
mov
sub
mov
add
add
leave
pop
dec
cmp
adc
out
xor
and
xor
cmpsl
mov
add
das
jge
testl
int
test
mov
inc
xor
mov
cmp
mov
or
nop
sbb
cwtl
pop
dec
xchg
repnz
out
loopne
inc
rcrb
lahf
pop
or
aad
mov
outsl
sbb
jae
dec
jge
xor
jg
nop
ret
dec
iret
add
inc
sub
inc
cwtl
vunpckhps
and
pop
mov
mov
insb
inc
mov
fnstsw
xor
push
push
lock
adc
dec
dec
in
scas
adc
sub
and
outsl
insl
pop
insl
aaa
rcrl
ljmp
mov
jne
and
imull
addb
loope
mov
movsl
cmpsb
movsl
inc
notb
fmul
mov
push
inc
or
inc
or
rcr
add
fwait
icebp
dec
or
jg
add
shl
cmpsb
or
push
enter
mov
jmp
stos
fsubrl
repnz
out
and
xchg
mov
bound
aam
and
lret
add
xor
add
inc
hlt
mov
mov
fbstp
jno
dec
pop
fsubrl
add
cld
or
mov
jmp
xchg
push
mov
mov
dec
push
and
jmp
dec
leave
lcall
mov
bnd
adc
dec
mov
pop
test
rcrb
mov
clc
and
sub
push
lcall
fisubrl
pop
mov
push
imul
mov
movsb
push
jbe
cmpb
or
inc
cli
jle
addr16
jns
or
fwait
jle
ja
cltd
xor
cld
lahf
cmp
pushf
popf
ss
movsb
mov
xor
push
nop
movsl
nop
fldl2e
sahf
outsl
mov
mov
pop
cwtl
ss
or
mov
mov
lret
cmpsb
inc
push
sti
iret
sbb
xor
adc
or
test
xchg
push
fistps
cmpsl
fstl
mov
je
lock
jge
sub
sub
inc
lret
std
mov
cmc
xchg
push
dec
loop
je
sub
push
push
cmpsb
xchg
xor
data16
mov
xchg
fldt
push
mov
lret
xor
mov
add
int
cwtl
rol
sbb
loopne
dec
loope
lahf
lcall
test
xlat
daa
shlb
sub
jbe
jo
shlb
xchg
ds
sbb
inc
lock
pop
lods
movsl
or
lcall
ret
in
mov
movsb
mov
jne
sti
adc
pop
xchg
xlat
ljmp
mov
fidivs
push
sbb
dec
out
pop
dec
jg
cwtl
cwtl
pop
shr
leave
or
lea
aam
fimull
shlb
adc
mov
cmp
loope
inc
inc
cmpsl
sti
pop
mov
jo
push
in
shlw
jo
xchg
jbe
popf
cmp
sti
jp
push
and
sbb
jno
out
push
inc
inc
or
cltd
pop
sbb
jle
adc
pusha
stos
xchg
xor
pop
add
in
xchg
adc
cmp
lret
push
and
jae
inc
movsl
adc
cld
mov
pop
std
cmp
sbb
hlt
xchg
push
cld
nop
cmpsb
push
stc
or
je
mov
jl
jg
push
or
adc
je
xor
dec
mov
mov
lcall
jg
cmp
adc
inc
dec
mulb
adc
push
fidivrs
je
dec
push
xchg
lods
mov
jns
or
mov
add
fdivl
and
cmp
cld
mov
bound
mov
int3
jl
int
dec
lods
jp
pop
cmp
push
xchg
das
push
jl
in
jns
xchg
xchg
icebp
scas
cmp
mull
adc
xor
xor
fistpl
daa
fcmovnb
std
cmpsl
int
cmp
daa
in
das
repz
inc
mov
nop
fisttps
divb
test
mov
fcmovu
outsl
mov
push
cmp
test
shll
mov
mov
mov
push
rolb
mov
xchg
push
cs
popf
dec
jnp
add
xlat
add
scas
xor
fildl
mov
jns
pop
scas
dec
aaa
push
sub
int
rcrl
ljmp
in
ds
jge
cmp
subl
and
sub
push
aas
dec
in
fsubs
arpl
dec
pop
dec
inc
sbb
arpl
xchg
mov
mov
je
mov
outsb
mov
in
jmp
lahf
xchg
das
pop
adc
lcall
stos
sub
cmpsb
push
jne
sub
jge
int3
pop
and
cwtl
push
sbb
dec
out
imull
fstps
mov
aam
pop
arpl
sbb
add
pop
jmp
jl
repnz
adc
lods
fsubrs
out
and
and
xor
hlt
push
stc
jmp
jnp
inc
mov
or
cld
out
or
outsl
into
xchg
inc
enter
mov
adc
lea
adc
addb
sbb
fbstp
or
inc
ds
test
jae
push
loop
movsl
sub
in
iret
scas
data16
fwait
dec
fs
mov
xchg
and
fistpll
or
pop
push
mov
mov
lds
shrb
aas
xor
pop
add
pop
call
or
pop
bound
dec
pop
icebp
mov
adc
inc
push
cs
jecxz
add
fildll
sahf
xorb
xchg
mov
xchg
popa
jbe
xor
les
fisubrl
add
aaa
insb
and
add
movsl
iret
jmp
mov
insb
push
stos
lods
fdivr
xchg
inc
data16
enter
and
push
sbb
or
add
and
in
insb
cli
add
xlat
inc
scas
fs
call
mov
mov
scas
sarl
xor
jmp
sbb
lds
mov
cld
adc
loop,pn
add
movzbl
push
stc
mov
int
shrl
jge
les
fucomip
jl
mov
mov
cmpsl
mov
fucomip
int3
dec
stc
sbb
pop
stc
add
aad
clc
rclb
mov
mov
fldt
mov
repz
into
mov
aam
shr
in
dec
daa
nop
jl
fsubl
imul
cld
push
in
les
inc
fildl
ret
out
lret
jle
ss
fwait
in
in
sti
lock
mov
inc
fwait
mov
aam
pusha
fst
and
mov
sbb
cltd
mull
push
jge
sti
jecxz
popa
decl
pop
adc
or
dec
clc
or
std
xchg
in
out
cmpsb
in
cs
imul
adc
mov
push
mov
pop
mov
cwtl
mov
cmc
lahf
xor
lds
or
data16
ret
or
insb
test
idiv
fstpt
add
cmp
mov
jno
jne
mov
in
lods
sub
idiv
lcall
int3
jge
pop
xor
out
mov
xchg
in
push
xor
cmp
jae
mov
fstpt
xchg
dec
shl
lods
outsb
loop
fisubl
sbbb
hlt
xchg
or
sahf
cmp
mov
dec
mov
insb
cmp
mov
pop
loopne,pt
jns
out
cli
lahf
cmp
xchg
in
insl
iret
cmc
jae
sti
pusha
dec
divl
fdivl
xchg
mov
adc
push
lods
xchg
fldl
sub
pop
xchg
scas
iret
out
loop
mov
xchg
sarb
rcl
call
jp
hlt
pusha
xchg
push
outsb
test
add
fidivs
or
mov
shl
rcrb
pop
lret
xchg
jnp
push
frstor
shrb
cs
into
push
adc
cmp
and
cwtl
sbb
pop
pushf
dec
push
adc
jo
popf
push
push
cwtl
mov
add
das
ss
inc
lret
jl
dec
pop
data16
icebp
fwait
inc
mov
jbe
jl
add
dec
pop
xchg
std
sub
adc
out
ret
push
fdivl
popa
enter
inc
rolb
lret
ret
popf
xchg
inc
aam
jne
bound
mov
test
enter
push
cmc
push
add
clc
test
aas
popf
jne
push
mov
and
jmp
sarl
adc
add
sbb
ds
ds
popa
xor
xchg
cs
fisubs
fdivl
stos
dec
leave
mov
dec
sbb
jl
fidivrl
inc
and
es
gs
data16
sub
add
nop
or
jnp
push
in
bound
mov
jl
inc
bswap
sbb
push
shlb
in
inc
xor
or
xchg
fwait
jbe
sarb
cltd
push
mov
nop
in
pusha
popf
adc
adc
add
pop
hlt
gs
arpl
xchg
xchg
mov
inc
dec
clc
jae
dec
in
popa
jno
movsb
add
and
pop
push
outsb
jg
insb
fwait
scas
sub
xor
lret
fs
mov
add
loope
adc
push
daa
movsb
test
jp
mov
xchg
cmp
lret
xchg
jmp
popa
jno
leave
subb
mov
bound
lret
cltd
cltd
ss
je
add
dec
and
mov
jo
jle
add
push
aaa
in
mov
sbb
into
cmp
pop
movl
push
sbb
pop
jno
addb
pop
repnz
test
out
push
pushf
jp
in
cwtl
iret
inc
and
cmpb
subb
xchg
fwait
iret
push
jns
pop
mov
and
imull
jb
cld
jno
hlt
xchg
mov
adc
clc
sub
out
lods
sub
push
shl
out
pop
fdiv
push
xchg
cli
stc
cli
cmpsb
in
mov
fbstp
insb
lcall
sub
xchg
xor
xor
adc
rcrb
fwait
mov
into
pop
cs
int
lock
and
xchg
sub
outsl
dec
jns
ret
and
pushf
inc
mov
jo
jnp
push
adc
in
sub
add
dec
int3
and
dec
mov
inc
inc
mov
lahf
cmpsb
aad
mov
push
mov
dec
push
int
jne
dec
cmp
xor
xlat
inc
fs
push
imul
bnd
adc
fcoml
lcall
daa
outsl
dec
rcl
fisttpll
mov
out
jbe
pop
popa
call
pop
scas
movsb
mov
dec
stc
in
push
xchg
cwtl
sbb
adcb
xorb
ljmp
push
jbe
pop
mov
in
mov
jne
arpl
xor
jo
dec
jg
stos
imul
mov
add
xchg
popa
push
jle
and
fisubrl
sub
sti
add
cld
nop
repz
xchg
fildll
cmc
aaa
dec
lods
and
rcrb
add
or
mov
jns
insb
ljmp
sub
cvtdq2ps
fsubs
loop
mov
cmp
mov
lock
cmp
cmc
dec
mov
cmpb
xor
jo
jae
sbb
jl
cmp
push
push
xlat
cmc
ret
sbb
add
pop
hlt
ret
aam
rcrb
je
aam
push
xchg
cmp
cmp
jbe
add
pop
mov
aad
mov
fdivrs
dec
cs
mov
sarl
pop
jbe
sbb
clc
xchg
cmp
inc
pusha
enter
cmp
dec
aas
inc
fcmovbe
in
test
sub
idivb
or
inc
sbb
std
pop
lods
mov
iret
jge
xchg
leave
cs
xchg
adc
mov
test
fildll
xlat
hlt
cmpsb
jo
push
push
push
mov
xchg
enter
add
sbb
push
mov
fnstenv
cli
cmp
es
leave
or
xchg
pop
mov
bound
pop
decl
push
std
cmp
dec
out
ljmp
mov
lcall
or
mov
test
dec
jg
jmp
imul
cld
mov
loope
out
cld
test
mul
movsb
sub
jne
ficoms
test
adc
call
gs
testl
mov
jno
xchg
jmp
jae
les
jle
pop
dec
outsb
push
mov
xor
outsb
leave
xchg
jb
push
inc
pop
pop
push
dec
stc
out
and
subb
ja
mov
jne
les
mov
jecxz
aad
mov
cmpb
pop
jg
mov
cmpl
test
dec
and
dec
mov
pop
push
call
sti
in
loope
jmp
in
notb
outsb
insl
addr16
cld
sbb
mov
icebp
mov
or
push
add
pop
mov
cltd
cld
jmp
clc
sbbl
sbb
in
sbb
es
cld
lahf
dec
dec
dec
lods
es
js
sub
movsl
sbb
inc
out
jge
lods
push
cmp
fdivrs
mov
shll
stc
cmc
mul
leave
cmc
mov
cmp
sbb
push
std
pop
mov
iret
jb
and
shll
inc
adc
sbb
pop
push
push
es
mov
mov
adc
jbe
mov
xchg
dec
pop
in
dec
shll
dec
and
mov
repnz
ret
mov
in
sbb
data16
xor
dec
xor
fildl
mov
popa
outsl
shl
jle
add
push
or
xor
lds
pop
xor
clc
add
insb
jae
pop
popa
sbb
popf
inc
mov
test
cmp
jo
addr16
jle
push
in
cwtl
lcall
dec
add
mov
dec
push
insb
add
popf
sahf
lret
es
or
stc
or
mov
mov
cwtl
sbb
aad
and
mov
sbb
push
pop
mov
xchg
xchg
ret
stc
push
shll
repnz
dec
cmovl
mov
mov
fnstsw
jb
addr16
sub
push
fwait
xorl
push
fimuls
shrb
dec
inc
pop
sbb
rolb
jne
stos
jb
pop
push
xchg
mov
ja
mov
fsubr
mov
jo
shrb
testb
shr
inc
jns
ja
lock
xchg
fistps
or
in
push
mov
imul
lea
mov
xor
mov
or
int
shlb
mov
loop
xchg
sub
jmp
inc
xor
fcomip
out
mov
test
aad
sub
das
mov
test
mov
push
mov
gs
int
inc
test
mov
outsb
sub
dec
fisubs
dec
cmp
ds
rclb
pop
or
out
inc
dec
and
jle
cmpsl
in
xor
loop
decl
and
inc
sbb
movsl
jbe
rorb
push
mov
or
hlt
orl
xchg
imul
fimull
push
sahf
cmpb
ds
decl
push
dec
mov
inc
movsb
and
xchg
call
sub
mov
lret
dec
inc
outsb
mov
jmp
cmp
pop
mov
xchg
stc
push
push
jne
xchg
inc
cli
hlt
push
hlt
pop
frstor
outsb
add
sbb
lcall
mov
sbb
dec
iret
hlt
testb
decl
imul
fisubs
xchg
sbb
aad
sub
sbb
pop
cmc
lcall
and
adc
push
jle
rcrl
cmpsl
je
sub
int3
pop
sub
jbe
mov
lea
mov
mov
xchg
adcb
and
adc
mov
pop
jmp
and
rol
jns
je
cmp
jae
mov
lds
dec
fiaddl
int3
ja
cmpsb
xchg
rcll
movsb
lock
pop
icebp
fadds
pop
xor
dec
mov
icebp
xchg
movsb
jns
subl
test
fbstp
inc
enter
rorb
cmp
stos
inc
ret
jmp
mov
hlt
andl
push
dec
lret
movb
sbb
sbb
sbb
orb
and
inc
sub
arpl
outsb
repz
and
jno
cs
jecxz
dec
lds
jno
cmp
dec
lods
out
cmc
in
fisttps
outsl
cmp
adc
cmpb
ljmp
add
mov
shrb
and
daa
cmpsb
jb
lods
cmp
aad
mov
dec
mov
mov
cli
and
repz
fs
dec
insl
out
sub
jmp
mov
jg
pop
pusha
push
adc
push
xor
fadds
lds
jns
test
cmp
xor
repz
pop
pop
mov
test
pop
jno
and
sub
lods
mov
insl
pop
inc
adc
dec
xchg
jle
push
adc
xlat
cmp
je
jl
xor
or
in
jl
and
cmc
popf
repz
nop
dec
data16
aas
inc
push
or
jnp
mov
ss
inc
mov
and
push
xchg
lock
pop
test
xor
mov
lret
ja
fs
sti
sbb
stc
xchg
test
call
and
sub
dec
mov
mov
ret
cld
and
fadds
aad
aad
insl
xor
daa
shlb
orl
ss
add
daa
mov
add
outsl
pop
leave
gs
popl
mov
lds
mov
out
sbb
and
mov
enter
loop
jne
jmp
inc
xchg
jp
lea
das
in
inc
fcomps
or
test
into
cmpsb
mov
pop
mov
dec
setp
imul
daa
movsb
ds
sub
push
pop
add
lahf
push
inc
cld
dec
inc
popf
ror
add
enter
xchg
stos
outsl
mov
stos
add
movd
test
test
and
test
jnp
fwait
sbb
jp
jnp
xor
jge
pop
xchg
imul
or
lock
cs
push
cmpb
dec
out
or
andb
hlt
pop
stos
cltd
push
pop
inc
fucomi
or
fstps
inc
sbb
popf
adc
push
pop
pop
lock
xchg
xlat
loope
and
mov
das
push
xchg
lret
and
cli
or
and
adc
int3
mov
adc
fisubrs
push
and
js
push
add
xor
movsl
adc
sbb
dec
push
pop
or
pop
pop
adc
mov
sub
mov
lds
mov
jns
and
mov
mov
out
std
jno
fdivrl
push
movsb
das
loop
sbb
dec
add
mov
mov
xchg
jo
pop
or
mov
adc
adc
jbe
jmp
orl
push
adcb
pop
dec
add
pop
adc
adcl
adc
in
bound
push
lret
out
scas
sbb
mov
cmp
cmp
pop
inc
push
push
xor
lock
es
jbe
push
sub
outsb
xchg
jbe
push
add
out
test
cmpsb
cmc
iret
popa
int
add
jmp
pop
mov
sub
xchg
adc
hlt
pop
pop
jmp
mov
lods
cmp
or
fdivr
call
sub
ljmp
aam
mov
mov
mov
sub
xor
or
in
mov
je
pop
xchg
adc
jb
out
add
and
stos
jp
pop
lcall
pop
bound
or
mov
or
notl
pop
movsl
into
inc
outsb
push
popf
rclb
or
loop
pop
inc
fcmovnu
sub
out
pop
imul
pushf
iret
rclb
adc
and
imul
mov
jne
outsb
cli
jno
jo
cmp
outsl
add
stos
aam
push
push
push
jmp
stos
push
jle
push
andl
or
or
movsl
idivl
imull
jne
imulb
jmp
xlat
arpl
je
or
jge
mov
xor
mov
fstl
and
cmp
mov
imul
pop
add
sub
repnz
pop
in
inc
movsb
mov
mov
mov
test
sti
enter
xchg
int3
aas
fiaddl
add
cmp
loop
fidivl
insb
xor
jo
mov
sub
pop
mov
lods
pop
sub
sub
cltd
outsb
cld
sub
jp
leave
xchg
lcall
cld
push
inc
outsb
pop
lods
popa
xor
gs
xchg
pusha
movsb
adc
lds
jbe
dec
mov
sub
rol
adc
jnp
int
cmc
incb
out
pusha
xlat
bound
popf
add
xchg
or
jne
pop
jo
ret
fwait
lahf
push
cmp
cmpl
mov
or
ds
in
fisubl
xor
xorb
imul
leave
pop
xchg
out
in
jmp
leave
add
pop
pop
xor
pop
punpckldq
popa
inc
sti
pop
xchg
or
mov
nop
mov
lcall
mov
imul
stos
out
mov
nop
pop
call
lods
jbe
and
mov
mov
mov
xchg
in
push
xchg
loop
pushf
movsl
mov
xchg
dec
mov
scas
push
push
mov
icebp
jge
cmpsl
das
jp
or
pop
sub
cmp
dec
add
lock
jge
adc
pop
in
dec
das
xor
mov
inc
psllw
cmc
in
mov
jge
outsl
dec
or
jg
sbb
mov
call
add
or
daa
jb
jge
mov
in
jno
cmpsl
add
sarl
and
imul
adc
cli
popa
xchg
fs
in
rcrb
sarl
pop
push
lcall
pop
bound
inc
cmp
fstps
pop
test
jle
test
sahf
inc
repz
scas
sbb
loop
dec
scas
test
popf
aam
cmp
mov
stos
mov
lods
xor
loopne
bound
repz
incb
cli
and
mov
push
sahf
fdivrl
xchg
out
jp
fildll
mov
lret
inc
out
ljmp
shl
stc
in
inc
sub
movsl
iret
outsl
ret
lcall
mov
rorb
loopne
adc
jb
ds
mov
daa
cmp
mov
lret
push
xchg
adcl
push
dec
fstps
in
jnp
dec
sub
js
dec
fldl
sti
stc
dec
scas
out
addl
ja
cmp
cld
das
mov
add
jne
xchg
nop
jno
sbb
mov
bound
push
jbe
and
mov
mov
dec
scas
addr16
in
je
mov
lods
cmp
mov
das
adc
jbe
mov
xor
dec
xchg
mov
mov
push
cwtl
out
jge
jp
mov
sbb
xlat
test
push
jne
ss
ljmp
icebp
push
jmp
jg
pushf
fbstp
pop
lret
in
mov
push
jae
stos
inc
outsl
stos
out
sbb
mov
mov
out
shrl
lds
sti
adc
rorl
dec
pop
push
pushf
sub
jbe
jl
fidivrl
mov
cwtl
ljmp
mov
movsl
aad
jmp
pop
mov
pop
mov
pmulhuw
and
sahf
inc
lods
cld
stc
fdivrl
jb
into
mov
xchg
cld
pop
inc
and
popa
into
pop
mov
cmp
push
in
in
popf
inc
push
inc
in
arpl
push
fisttps
jge
push
dec
sbb
and
lea
xchg
mov
xlat
lea
jno
dec
jmp
mov
icebp
out
mov
sbb
stos
pop
xchg
ss
mov
xor
leave
xchg
jge
push
stc
sbb
jl
add
scas
and
test
jl
mov
sahf
xchg
push
mov
call
cmpsb
mov
xchg
jecxz
mov
in
negb
mov
mov
cmp
out
jmp
test
fiaddl
test
int3
fsubl
pop
cli
sbb
stc
in
cs
push
push
loope
stos
inc
or
sub
fnstenv
xchg
fnsave
pop
or
scas
cwtl
sahf
jmp
jns
gs
test
in
iret
hlt
cmp
pop
mov
in
cwtl
cmp
popf
mov
stc
les
pop
aad
out
lcall
and
jp
and
xor
sbb
xor
push
in
gs
rclb
mov
ds
das
ds
add
xor
xchg
push
add
sub
mov
jge
xchg
int
push
popa
int3
sub
dec
aas
sub
imul
aam
xlat
test
jb
push
inc
clc
or
bound
xchg
lock
sbb
or
test
popf
fnstsw
mov
pop
repz
jbe
js
dec
jp
dec
cmpsb
and
cli
mov
ss
sahf
js
int
call
rorb
mov
sbb
ljmp
es
cmc
rolb
xchg
rep
lahf
repnz
pusha
mov
scas
nop
and
lods
sbb
mov
repnz
sti
das
cmp
jle
inc
insl
call
je
xor
pop
pop
pop
add
add
cmp
clc
push
fnstsw
pop
sub
outsl
fnstcw
sub
test
les
add
dec
inc
sub
pop
enter
mov
dec
push
imul
es
and
jecxz
mov
mov
outsl
mov
adc
pop
es
jne
jmp
push
decb
int
fistpl
fistl
call
cmc
add
jmp
add
pop
out
inc
in
xlat
and
mov
xor
jmp
scas
jne
xor
ljmp
jp
mov
or
jmp
cli
or
sbb
or
mov
pop
cltd
test
shrl
mov
stos
cmp
in
mov
xchg
jns
in
icebp
sub
push
mov
or
push
mov
cli
ljmp
fldt
cmp
fbstp
dec
int3
inc
xor
lock
jmp
add
dec
mov
sahf
adc
fsubl
pushf
push
add
pause
jo
int
roll
daa
xor
push
jl
mov
repnz
lock
sahf
leave
mov
sahf
popf
outsb
les
test
and
ja
emms
fidivrl
or
out
or
lahf
popf
outsb
imul
mov
sub
mov
repnz
les
jge
jne
jge
fwait
cltd
xor
adc
scas
mov
push
cs
daa
pop
insl
scas
add
adc
lret
mov
fildl
ja
dec
dec
outsb
adc
je,pn
jo
ror
push
mov
cmp
outsl
adc
pop
mov
xor
mov
cltd
ss
mov
or
in
cmp
out
sbb
lret
lahf
pop
test
enter
stos
pop
mov
and
ret
lret
xchg
cli
mov
push
fdivrs
in
repz
pop
jno
js
jg
shl
dec
aad
sbbl
mov
push
dec
adc
xor
push
adcl
pop
rcl
outsb
mov
pop
into
popa
xlat
not
loop
into
or
test
je
rclb
and
scas
ret
aad
pop
arpl
loop
pop
ljmp
test
outsl
push
loope
icebp
dec
inc
test
adc
xor
pop
push
inc
test
cwtl
pop
xchg
or
mov
push
rcll
jne
incl
aam
aas
imul
pushl
mov
mov
push
and
and
xchg
mov
xchg
inc
fistps
aas
xor
jge
imul
mov
movsl
nop
mov
xchg
mov
icebp
jb
mov
aaa
pop
test
pop
jo
cs
ds
aad
aam
das
pop
cs
hlt
cmpsl
add
pop
arpl
and
cmp
mov
sub
fwait
insl
leave
hlt
sbb
imul
pop
test
and
sub
xlat
mov
pop
jle
arpl
popa
out
insl
mov
sarl
shlb
stos
xor
xchg
out
iret
add
insl
std
fdivs
lea
jge
stos
dec
call
mov
add
cmp
adc
pop
pop
pop
test
das
push
sub
push
dec
ret
movsb
pop
hlt
cltd
fnsave
mov
fsubrp
rcl
pop
inc
mov
cmp
jg
icebp
adc
mov
insb
xor
addr16
cmp
and
adc
cli
sbb
imul
dec
lret
push
xor
mov
daa
lret
add
out
ret
out
les
call
dec
cmp
cmp
dec
movsl
repnz
push
stc
insl
dec
xor
fcompl
or
xchg
dec
add
adc
cmp
vpsllw
cmp
pop
mov
add
or
mov
adc
aaa
inc
shlb
repnz
jge
mov
lret
sahf
lret
in
or
dec
push
shr
push
and
rol
cmp
in
push
push
sub
jp
popa
movsb
adc
xchg
ja
mov
lods
sbb
outsl
or
in
add
gs
mov
lds
adc
repnz
mov
fistl
jmp
jle
lahf
sahf
jge
test
lock
das
or
add
pusha
in
popa
scas
cli
repnz
les
outsb
stc
sub
negb
dec
lret
fisubrs
nop
enter
xor
jns
inc
int
xchg
mov
sub
add
aaa
cs
dec
mov
sbb
mov
cwtl
xchg
in
dec
lret
rol
and
rclb
movsl
cltd
and
xor
leave
into
cmpsb
xchg
pop
iret
data16
adc
sbb
pop
rorb
and
sbb
mov
and
adc
outsb
jge
aam
and
inc
lock
pop
fwait
jp
daa
mov
pop
add
shlb
aam
aam
decb
xchg
jl
cltd
loop
js
inc
fwait
jnp
xchg
adcl
xor
testl
push
inc
in
jp
and
out
lret
cmc
mov
ljmp
xchg
repnz
sahf
enter
in
sbb
les
xchg
or
nop
in
or
mov
sbb
arpl
cmp
jb
sbb
mov
jecxz
rcll
lahf
mov
sbb
xchg
sub
sub
fiadds
aam
scas
xchg
adc
test
inc
xchg
lea
xchg
in
mov
dec
push
cli
jl
test
loop
jno
inc
sub
pop
das
mov
cmp
mov
in
popf
add
pop
in
adc
insl
jne
mov
stos
jmp
das
mov
xchg
in
sbb
dec
mov
cli
cmp
and
xor
mov
hlt
lds
jecxz
ret
sbb
sbb
outsl
cmp
mov
cld
pop
pop
out
hlt
clc
incb
ljmp
sub
xchg
cmp
aas
sti
ret
and
outsb
and
aaa
pushf
in
cmc
fldenv
pop
mov
cmp
stos
or
mov
adc
xor
in
jbe,pn
aad
fbstp
xchg
jnp
and
insb
addr16
xchg
xchg
imul
or
int
vmulps
lea
stos
cmpsl
dec
fs
out
notb
cmpsl
inc
rol
mov
pop
idivb
xchg
jne
or
mov
cmp
fucomp
jbe
lea
xor
sahf
cld
add
int3
movsl
add
fwait
inc
imul
add
pop
cmpl
loop
orl
int
inc
dec
add
call
jl
jns
int3
pop
xorb
insb
dec
lea
in
mov
scas
rcl
mov
hlt
push
dec
in
bound
cmpb
and
dec
mov
jb
sbb
jge
and
mov
or
xor
mov
jo
iret
xor
push
xchg
clc
push
inc
movsl
ret
das
ficoms
jl
in
push
cmc
push
jmp
mov
mov
xor
clc
cmp
inc
lea
and
mov
insb
rcrl
xchg
lods
loop
cmp
mov
mov
and
imul
push
inc
jmp
jmp
lcall
jno
adc
mov
test
mulb
hlt
xor
sbb
inc
bnd
pushf
bound
lahf
jno
cmp
gs
lret
xchg
aad
fimull
sub
xor
ss
hlt
push
lods
stos
lods
out
mov
movsb
sbb
fwait
mov
cmpsl
dec
mov
data16
sub
jae
ljmp
lock
sbb
nop
addb
clc
mov
scas
orl
jae
sbb
ficoml
outsl
cmp
js
gs
adc
lods
jmp
mov
push
xchg
enter
pushf
inc
lds
pop
shrb
pop
mov
aam
xchg
fcomip
sub
inc
inc
xor
add
mov
sub
movsl
hlt
rcrl
lahf
pushf
sbb
cld
mov
jnp
or
and
pop
fwait
sbb
in
add
inc
mov
sub
add
jno
jae
push
mov
daa
xor
sub
ja
mov
int3
or
xchg
rclb
dec
aaa
xchg
cmp
or
loopne
aam
insb
add
arpl
pusha
jb
push
pushf
sbb
gs
dec
ljmp
ret
cmpsb
sub
js
or
out
adc
je
inc
cmpb
pop
sbb
cmp
pop
dec
mov
mov
mov
dec
add
jge
mov
push
lea
outsb
ds
cmc
jl
xchg
jmp
dec
mov
add
divb
jecxz
mov
push
out
lahf
adc
sub
pop
sar
push
xchg
dec
add
cwtl
sub
mov
lret
lods
scas
cmp
out
push
popa
test
xchg
inc
mov
cmp
mov
pop
sub
adc
in
int
pop
popa
inc
or
push
jge
cmp
pop
out
lcall
push
insl
cmp
jl
pushf
pop
or
out
leave
stc
inc
sub
lret
loope
jge
xchg
shll
test
pop
hlt
das
clc
fnstcw
jmp
sahf
repz
mov
montmul
cmpsb
add
dec
fwait
adc
imul
repz
negl
dec
lret
mov
es
add
sub
xchg
or
in
jle
andl
cmp
arpl
jmp
fstpt
pop
cmp
jbe
xchg
adc
xchg
jo
imulb
aad
cmp
faddp
psubq
sub
shll
repz
sbb
inc
stc
bound
mov
dec
xor
gs
rclb
mov
dec
push
jbe
aad
xchg
xchg
sub
fdivl
std
dec
sub
mov
pop
call
pop
sbb
mov
test
outsb
xchg
loope
jae
ret
out
jb
outsb
sbb
mov
roll
sub
fcom
mov
scas
out
fidivrs
fcmovnu
add
mov
shll
mov
inc
imul
in
mov
ss
pop
rolb
cwtl
ja
fdivrl
mov
lock
in
js
xor
lods
jno
vsqrtss
ret
jle
cld
ficoml
sbbb
cmp
ret
or
or
in
pusha
test
shlb
arpl
add
fwait
cwtl
or
ficoml
lock
mov
stos
rorl
mov
cltd
jge
in
push
call
ljmp
mov
leave
mov
ret
push
data16
fists
or
lods
aas
orb
cli
out
and
mov
in
mov
cmp
or
push
fbstp
movsb
jge
push
sti
push
shll
movsb
add
out
ret
sarb
outsb
push
fs
out
adc
jbe
xor
cli
xor
repnz
movsb
int
dec
das
push
pop
mov
rorb
lock
jecxz
push
adc
addb
push
xor
jg,pt
cmp
dec
jecxz
jge
inc
push
mov
daa
pushf
add
test
enter
and
loop
out
fnstenv
sets
aas
or
std
push
fcmovnu
aaa
mov
insl
mov
add
data16
idivb
out
add
call
aaa
je
pushf
mov
pop
insb
xchg
fs
out
xchg
cmp
aaa
outsl
cmp
push
jmp
pop
or
mov
mov
repnz
push
push
mov
cmp
mov
jns
repnz
scas
jns
mov
mov
stc
lods
aas
pop
shrb
arpl
stc
pop
mov
fdivs
test
lods
mov
push
mov
scas
gs
push
scas
adc
mov
mov
mov
fmul
jmp
sbb
fldcw
jb
push
imul
xor
jl
sahf
sbb
jle
mov
in
imul
out
push
sahf
inc
mov
pop
mov
mov
ja
add
jne
fdivrl
rcr
popa
clc
push
or
ficoms
icebp
das
pop
mov
mull
sbb
fwait
mov
daa
sarl
inc
outsb
lahf
push
mulb
fsubp
imul
in
mov
jae
xor
push
ljmp
adc
cmpsb
jnp
cmc
mov
mov
lods
mov
mov
call
rorl
stos
scas
aaa
sysexit
cmp
adc
or
jg
stos
sti
dec
in
cmp
adc
rcll
mov
dec
add
pushf
add
jnp
mov
test
in
mov
xor
sbb
push
sbb
jne
outsb
ret
mov
std
sti
ret
or
mov
loope
push
push
jb
pusha
cmpsl
lods
xor
xor
scas
mov
pop
pop
sbb
jle
jne
dec
in
icebp
cld
add
repz
mulb
int
mov
movsb
sub
jle
scas
int
xchg
in
jl
fyl2xp1
sbb
inc
movsl
xor
int
fdivl
xlat
pop
mov
adcb
cs
sahf
dec
out
sub
inc
pop
jle
adc
cld
jle
jle
mov
jp
test
movsb
into
xchg
stc
sarb
cmp
jae
pop
loop
sbb
sub
mov
inc
pop
pop
push
push
mov
rcll
iret
jns
scas
mov
gs
cli
xor
inc
popw
ret
cli
sbb
enter
jnp
stos
in
jg
mov
sar
lcall
pushl
adc
add
movsb
cmp
jle
xor
stos
mov
mov
xchg
pop
adc
jns
bound
mov
cmpsl
mov
mov
jp
shlb
xlat
mov
shrl
push
cmp
pop
scas
cmp
out
stc
divl
lea
popa
sarl
js
xlat
mov
stc
inc
data16
iret
je
add
pop
cmp
test
addl
sbb
fwait
dec
sahf
jbe
or
cli
sub
jb
mov
cmp
leave
out
cmc
push
or
cmp
mov
cmpsl
cmp
arpl
pushaw
repnz
mov
das
jg
imulb
mov
dec
pop
sub
movl
lock
push
int3
mov
notb
dec
cmp
mov
sbb
cmp
mov
jnp
xor
je
popf
pop
rorl
fadds
dec
aas
mov
ss
xlat
clc
clc
or
sub
push
lcall
jp
sub
jg
pop
ds
lret
imul
dec
xor
das
inc
daa
adc
mov
das
fdivrs
es
or
xchg
cmp
lret
clc
xchg
js
sbb
lods
dec
lcall
cmp
push
rep
lret
and
ljmp
into
js
mov
insb
mov
jle
pushf
ljmp
sub
xchg
lcall
lret
aad
mov
xlat
mov
lds
sahf
xor
cmp
push
mov
xchg
fstl
shl
ljmp
xor
pop
dec
lock
imul
pop
jl
insb
mov
push
insb
stos
mov
mov
sahf
jbe
mov
jp
cs
jae
les
mov
add
mov
push
adc
jle
cmp
adc
cmp
adc
dec
sub
shlb
sub
mov
insl
rclb
fadds
sti
lret
xor
dec
arpl
mov
loopne
xchg
gs
das
mov
xchg
jge
loope
bound
push
sbb
std
and
cmpsb
aaa
ret
cmp
and
pop
fsubrs
int
fwait
pop
bound
cli
pop
push
dec
mov
push
add
xchg
pop
ret
arpl
movsl
adc
xchg
add
dec
dec
scas
bound
xlat
jne
mov
stc
cmp
pop
subl
dec
hlt
push
mov
sarb
sarb
testl
adc
fsubs
inc
in
in
shl
outsl
clc
gs
sub
repz
sbb
nop
popa
ds
inc
aas
icebp
hlt
adc
ror
addr16
pop
xlat
mov
addr16
and
test
rep
mov
pop
rclb
into
stc
fimull
jmp
and
adc
fwait
jae
xchg
icebp
in
fs
sbb
mov
aas
pushl
mov
cmp
in
sub
mov
cmc
jl
and
push
fbld
mov
lahf
aas
lock
jge
cltd
add
aad
jl
adc
outsb
mov
xor
les
daa
push
adc
jae
jnp
cmp
inc
mov
mov
cwtl
lods
or
stc
lods
mov
daa
mov
in
or
lock
ficomps
fdivrs
jb
lret
test
pop
pop
movsl
loope
cmpsl
sub
mov
inc
das
jbe
mov
sub
cmp
lcall
mov
mov
mov
and
xchg
mov
xcrypt-ctr
cmpsl
sbb
jp
and
sahf
in
dec
lahf
inc
pop
sti
jl
mov
dec
imul
ljmp
pop
push
divb
call
leave
sbbl
repnz
arpl
cmp
lcall
sub
movl
push
pusha
fnsave
repz
mov
inc
fcmovbe
adc
dec
fimull
pop
lret
adc
jl
daa
scas
out
enter
in
outsb
bound
pop
movsb
mov
in
arpl
in
pop
pop
adc
or
mov
pop
jnp
or
arpl
jae
sbb
ljmp
push
notb
pop
aad
cwtl
pop
add
insb
movsb
pop
mull
sub
hlt
ret
cwtl
mov
or
mov
sub
xor
adc
fucom
cmc
cwtl
inc
call
push
add
sub
insl
jns
iret
pop
add
lock
hlt
fisubl
out
out
pushf
fnsave
cmp
cmpb
mov
das
daa
or
push
sbb
mov
mov
es
sub
inc
rol
mov
xchg
out
testl
mov
mov
outsl
push
adc
lea
jne
cmpsl
jmp
cmpsl
andl
jno
into
and
mov
out
out
sub
sbb
mov
xchg
add
cli
inc
mov
data16
and
scas
gs
mov
sub
cmp
mov
jns
push
inc
gs
jmp
cli
jmp
pop
enter
fistps
repz
pop
es
pop
and
xchg
jg
call
xchg
stc
and
xchg
jbe
jno
stos
cmp
pop
xchg
sbbl
insl
out
push
stos
movsb
lcall
jnp
in
sahf
inc
out
or
jle
inc
xor
in
insb
lahf
and
clc
pop
xchg
xor
xchg
mov
push
push
std
sbb
andl
stos
fnsave
jns
arpl
movsl
out
jmp
jg
outsl
jae
cmp
sub
roll
mov
int3
icebp
rorb
add
ficoml
or
pop
pushl
popf
fdivl
xchg
out
sbb
lret
movsb
int3
jg
push
or
in
in
mov
pop
push
add
imul
cltd
lahf
xlat
les
fsubs
enter
dec
aad
out
sbb
movsl
ror
in
push
cli
mov
jmp
xchg
jbe
pop
sbb
inc
cmp
loopne
imul
mov
add
mov
ss
push
cmc
scas
add
cmp
push
push
rolb
andb
mov
and
lods
jg
mov
lret
push
xlat
popa
adc
sti
sahf
les
mov
add
ja
call
pop
insb
adc
push
or
leave
and
enter
push
stos
jg
call
ljmp
outsl
pop
mov
sub
nop
xchg
lods
push
and
jne
push
jg
fstps
sub
test
shll
iret
inc
jle
or
test
mov
out
mov
xlat
pop
pop
mov
lods
in
repz
xchg
sub
test
movsb
xchg
in
cld
fdiv
sbb
fldenv
mov
adc
jecxz
fs
push
in
out
shlb
sti
pop
push
fidivl
and
out
jo
push
add
aaa
cmp
xchg
fistps
js
add
stos
push
jne
repz
dec
mov
andb
mov
dec
testl
jl
add
in
or
imulb
xchg
jbe
push
in
jae
loopne
rclb
mov
cltd
enter
jbe
add
sub
push
or
fldcw
xchg
mov
add
sub
xchg
test
test
mov
shlb
mov
jb
dec
je
mov
popf
adc
dec
fldl
xor
gs
sub
xchg
mov
mov
pop
jcxz
mov
sub
mov
shrl
mov
ja
movsl
lods
inc
jne
movsb
xchg
push
pop
cmp
cmp
cmp
lahf
xchg
mov
push
mov
pop
in
nop
sbb
fxch
addb
add
xchg
pop
adc
in
fwait
jb
dec
imull
fidivs
das
ljmp
loop
in
xor
add
inc
jecxz
jne
mov
xor
pop
out
push
cmp
pop
xchg
lods
pop
aam
jns
cltd
aam
sub
daa
mov
mov
inc
mov
cmp
gs
sbb
ja
ffree
mov
data16
loop
push
adc
mov
imul
arpl
insl
pop
mov
aas
sbb
lahf
add
out
adc
fwait
imul
dec
arpl
mov
aad
movsl
roll
loop
xchg
and
aad
sub
out
mov
pop
mov
lods
and
in
inc
cmovle
xchg
enter
repz
mov
mov
fsubl
jmp
aaa
or
leave
sahf
mov
cld
int
je,pt
mov
and
jge
mov
sub
stos
push
jae
and
stos
jg
add
add
repnz
xchg
stos
or
push
notb
add
cmp
xor
jle
inc
jb
lahf
arpl
sub
jnp
test
or
nop
cmpsb
shlb
push
add
xor
ljmp
sbb
fwait
inc
sub
push
in
pop
pop
btcl
push
ljmp
push
mov
add
outsl
stos
lds
repz
imul
jbe
enter
in
cs
adc
xchg
cld
out
addb
pop
xchg
mov
out
in
push
sbbb
adc
add
in
cltd
std
inc
sub
dec
push
sub
test
pop
movsb
stc
cmp
and
repz
and
dec
outsb
jp,pt
xlat
xor
jmp
mov
scas
mov
pop
jne
pop
adc
cli
mov
or
cmp
cmc
stc
jp
cmp
push
push
push
sub
int
xorl
pop
pop
push
jno
arpl
jb
adcl
insb
outsb
enter
xor
lods
push
daa
xchg
shr
xchg
xchg
test
xchg
sarl
xor
jb
xor
mov
in
pop
mov
xchg
jb
xchg
jle
xchg
fidivrs
cwtl
std
cmp
and
cmp
mov
dec
mov
sti
sbb
ficomps
lods
testb
push
mov
fisttpll
jno
loope
fbstp
mov
popa
call
lcall
push
push
sub
pop
dec
xor
and
push
stos
mov
push
jle
pop
adc
out
adc
mov
inc
adc
sub
outsb
jge
fistl
lret
dec
outsb
pushf
fwait
test
fmul
dec
outsb
jecxz
outsb
enter
dec
and
lock
cmp
mov
es
jne
cmp
packssdw
adc
cli
outsb
jecxz
push
or
int
ds
pop
and
shl
xchg
inc
lret
inc
push
xchg
pop
pop
push
int
daa
dec
jnp
xchg
divb
dec
imul
mov
movsl
mov
or
movsl
xchg
fisttps
adc
clc
push
sbb
lods
mov
xchg
sub
push
dec
or
mov
sub
add
push
pop
cmpl
dec
and
mov
cmp
inc
dec
mov
in
sub
dec
mov
inc
cld
dec
add
in
dec
ljmp
mov
jae
cmp
cmp
adc
sub
mov
xor
movsl
push
mov
fcoms
mov
movsl
inc
sti
or
fcoml
stc
lods
inc
add
fwait
in
aaa
mov
orb
jmp
sbb
popa
bound
push
sub
cmpsb
inc
mov
inc
sub
imul
cwtl
jl
data16
lret
nop
jbe
gs
mov
adcb
push
xor
push
jno
cld
scas
fisubrs
cld
mov
outsl
cmp
fisubrs
cld
jecxz
outsl
cmpl
ss
xor
cmp
in
mov
cmp
stos
mov
jae
mov
cmp
inc
stc
inc
ss
aaa
mov
adc
inc
fdivrs
enter
mov
sbb
aad
clc
mov
add
mov
sub
xor
stos
out
pop
or
test
mov
sub
mov
out
cmp
xor
ds
imul
aam
fwait
rclb
push
es
xor
lcall
or
mov
cmp
cmpsl
cmp
gs
mov
xor
rcrb
mov
dec
push
lcall
movsb
xor
mov
test
pop
lahf
mov
mov
jge
shl
pop
insb
jo
pop
stos
cmp
jns
shrb
adc
inc
icebp
imul
mov
sub
mov
add
sbb
add
les
ja
cmpsb
mov
mov
fsts
mov
lahf
cmp
aas
pop
in
fyl2xp1
fiadds
add
dec
imull
dec
in
mov
shl
cmp
out
sub
fstps
jl
inc
ret
mov
nop
lock
inc
jl
flds
xor
xchg
addr16
adc
add
std
and
mov
dec
and
dec
loopne
and
pop
mov
mov
xor
imul
arpl
rcr
arpl
loop
dec
movsl
xlat
cmp
ljmp
jmp
dec
fidivs
repnz
cltd
xchg
push
aad
sbb
lea
stos
adc
ffree
jnp
jg
cmp
mov
in
lds
xchg
cs
push
leave
stos
aas
mov
jno
push
fwait
jo
xchg
adc
and
xor
sbb
jg
leave
dec
outsl
shrl
adc
dec
mov
ja
pop
mov
sahf
aas
dec
aas
notb
sub
sbb
loope
mov
je
xchg
mov
je
mov
mov
xchg
xlat
adc
add
mov
dec
push
notl
repz
outsb
sahf
mov
or
fwait
data16
pop
aaa
out
scas
jmp
push
stc
icebp
inc
mov
push
cwtl
mov
mov
push
sbb
mov
movsl
xchg
dec
pop
jecxz
test
and
aam
in
push
daa
cmc
mov
mov
repnz
insb
xor
adc
rol
fildll
mov
into
jecxz
jb
je
das
test
pop
pop
stos
scas
rclb
inc
jle
enter
js
sti
cltd
sbb
imul
cmp
int3
in
mov
pop
xchg
or
frstor
mov
test
dec
aas
push
ljmp
dec
mov
inc
xchg
add
lods
and
lret
ret
and
sub
push
nop
xchg
xchg
loope
imul
stc
pop
cmp
inc
enter
xchg
imul
fsubrl
sbb
cmp
adc
push
xor
mov
cmp
sbbl
fnstenv
or
das
jae
arpl
mov
out
lods
push
test
mov
gs
jnp
std
lret
fnstsw
test
jmp
jl
inc
lahf
push
lea
adc
or
jl
jg,pn
aas
test
pop
scas
cs
popa
inc
mov
lods
arpl
inc
cmc
lods
mov
pop
cli
or
pop
lcall
notl
sbb
in
sbb
jo
call
lds
xor
icebp
mov
mov
ljmp
lods
jge
stc
push
ja
sub
sbb
into
fldl
mov
mov
lsl
pop
mov
andnps
adc
lock
out
ljmp
adc
iret
cmc
or
push
jle
decb
inc
mov
xchg
pop
dec
push
into
aas
xor
insb
imul
cmp
fdivp
add
ret
fs
adc
mov
loopne
dec
inc
test
jns
mov
subps
notb
dec
incl
dec
orb
or
sbb
mov
push
xchg
jle
jl
pop
mov
stos
shr
gs
mov
out
cs
mov
subl
mov
cli
addr16
ja
rcrl
and
lahf
in
xchg
pop
xor
mov
mov
mov
mov
dec
out
out
call
out
insl
aaa
push
mov
jnp
mov
gs
jmp
mov
mov
stos
xor
xchg
xor
aad
jne
sarl
cmp
mov
jnp
es
jp
cmc
addb
sahf
and
push
mov
adc
add
add
int3
inc
loopne
and
imul
cmp
and
pop
roll
sbb
stos
mov
popf
insl
test
sub
dec
in
enter
mov
xor
adc
inc
sti
gs
xor
lret
dec
mov
cltd
inc
inc
scas
shlb
test
xlat
pop
aad
and
pop
icebp
fcmovne
lret
ss
lret
addb
inc
and
xchg
out
xchg
sbb
dec
subb
inc
pop
jno
les
or
in
cli
xchg
lock
sbb
pop
jb
cmp
and
loopne
jae
mov
xor
mov
mov
stos
inc
mov
xchg
iret
or
mov
sub
lret
sahf
lods
jg
out
imul
subb
adc
xlat
lods
call
es
inc
das
dec
mov
inc
dec
idivl
lret
and
xchg
dec
or
jecxz
jle
test
or
mov
mov
xlat
xor
mov
sti
iret
lcall
aam
outsl
jb
and
ret
adc
mov
shlb
fistl
xchg
fsubrp
xchg
inc
cvtpi2ps
mul
int
mov
sbb
push
pop
mov
push
or
push
pop
inc
out
push
push
fs
cli
add
ret
xchg
out
add
push
lahf
and
and
push
cmp
in
aam
outsl
fsts
out
inc
mov
sahf
shll
into
outsl
sti
jns
sub
inc
cli
in
fnstcw
lcall
push
movsb
popw
lds
adc
sub
fstl
push
loop
fstpl
cmc
mov
das
sub
sbb
out
mov
lock
sbb
test
mov
mov
mov
fnstcw
nop
mov
ud2
test
mov
xor
and
jecxz
test
ss
fidivl
push
inc
mov
shrl
iret
lock
hlt
ljmp
hlt
jbe
mov
bound
sub
jp
push
in
stos
ljmp
inc
test
adc
inc
dec
xor
fwait
dec
ror
rcl
push
imul
insl
xor
leave
shlb
jnp
insl
out
dec
lret
shll
inc
push
out
aaa
xor
test
jne
mov
adc
jo
jb
push
sub
popa
sub
pop
inc
jecxz
fwait
push
sbb
out
adc
sub
and
pop
popl
mov
pop
push
sti
arpl
sarb
scas
inc
scas
mov
inc
test
add
ljmp
dec
lds
aam
call
xchg
rcll
xlat
iret
stos
xchg
out
sbb
push
ss
fstpt
push
lcall
sub
inc
push
push
in
fsts
hlt
out
sarb
iret
dec
add
mov
xchg
sub
inc
push
mov
out
and
mov
in
fwait
dec
lret
adc
loop
cmpsb
jae
dec
cmp
or
cmp
test
push
mov
fwait
int3
bound
cli
add
sub
mov
adc
pop
shrb
icebp
xchg
jbe
insl
test
sub
shr
fsubrp
inc
xchg
push
mov
cmpsw
pop
imul
mov
pop
and
mov
mov
rorb
popf
jmp
loopne
fstpt
push
cli
imul
leave
cmp
dec
es
fdivs
pop
repz
push
dec
or
cmpb
sahf
in
test
testl
ret
mov
mov
mov
in
mov
and
mov
push
jge
push
push
nop
scas
adc
xchg
xchg
out
sbb
lret
and
divb
cltd
es
mov
mov
inc
dec
icebp
dec
cmpsl
inc
stos
adc
jns
jmp
icebp
aaa
loopne
dec
and
inc
dec
push
popf
addr16
inc
es
mov
lods
inc
push
jecxz
inc
repnz
xor
mov
sbb
jl
clc
lcall
jnp
jo
inc
push
addb
mov
sub
addl
mov
outsl
sub
xlat
xor
les
inc
ss
cmc
scas
cmp
aas
hlt
aaa
jmp
into
add
cmc
adc
enter
pop
push
jg
sti
pop
push
rcrl
mov
pop
pushf
fs
mov
push
mov
outsb
ret
xor
notl
push
and
xchg
jnp
lret
sub
cs
push
loope
pushf
jns
pop
cmp
xchg
add
xchg
mov
ds
sti
lods
xchg
ffreep
sub
data16
mov
gs
pop
push
rorl
adc
mov
imul
jecxz
imul
gs
xchg
popa
lods
data16
mulb
ja
sbb
lret
mov
jmp
stc
outsb
addl
jnp
jns
cli
aaa
and
pop
push
cmp
sbb
imull
sahf
fisubrl
push
mov
and
pop
adc
xor
mov
ja
dec
shrb
mov
idiv
dec
scas
cli
jnp
cwtl
test
jnp
out
xor
std
mov
aam
stos
adc
dec
push
cmp
sub
mov
loopne
fnstsw
shr
mov
outsb
push
out
test
repz
aas
cmpsb
pop
je
test
out
aam
out
arpl
lahf
arpl
int
out
and
or
scas
inc
out
push
push
test
adc
xor
jae
xchg
sub
jmp
or
fstl
fcmovbe
ret
push
stos
mov
gs
fldl2e
jae
mov
jmp
and
fs
mul
cwtl
pop
push
mov
xchg
enter
add
ret
xor
in
andl
push
xchg
cwtl
cmc
iret
outsb
jae
dec
dec
loopne
test
jns
lds
mov
cmpsb
dec
jle
sub
jno
test
cmp
xchg
xorb
mov
fidivl
xchg
test
ficoml
dec
add
aaa
outsl
pop
popa
out
sbb
mov
pop
aad
xchg
aaa
call
jnp
xor
test
jmp
dec
push
sub
ja
sahf
std
mov
jo
iret
nop
testl
les
xchg
and
rcrl
enter
mov
mov
mov
cmp
std
data16
sti
outsb
jno
scas
outsb
jl
cld
or
popa
mov
scas
inc
in
popf
push
xchg
mov
pop
pop
stos
iret
pop
in
pop
mov
repz
sub
aaa
mov
pop
mov
push
cmp
lock
fidivrl
arpl
pop
push
aam
mov
cmp
scas
mov
fisttpll
sub
lcall
shl
adc
lods
ljmp
mov
push
scas
inc
iret
or
adc
cmp
xor
cmp
push
aad
lea
ja
cmp
add
xchg
in
test
mov
or
push
cmp
push
in
frstor
pop
mov
out
mov
mov
aam
xor
ljmp
cmpsl
cmp
daa
pop
pop
jge
int
pop
cmc
ss
loope
enter
fimull
mov
add
cmp
lock
inc
pop
outsl
mov
lods
mov
movsl
rcll
cmp
adc
ret
out
jae
mov
int
in
clc
pop
lret
pop
inc
adc
out
lods
mov
and
les
ja
es
addr16
mov
xchg
add
dec
jne
jo
add
push
mov
dec
xor
out
js
idivl
inc
in
push
aad
pop
inc
lret
repnz
cmpsb
div
aam
es
icebp
je
cmc
mov
lret
adc
fisubrl
stos
loopne
rcll
fsub
imul
xchg
push
push
jmp
scas
sub
test
push
dec
sbb
adc
adc
jbe
and
cltd
pop
es
jg
inc
fwait
jnp
nop
dec
insl
testl
jno
rolb
and
or
xor
cmp
insl
mov
mov
test
push
mov
jecxz
sbb
faddp
aaa
and
pop
or
xchg
test
cmp
ja
mov
pop
out
ret
xchg
insl
fstps
out
adc
popa
pop
leave
fcompl
xor
push
cmp
repz
push
arpl
lds
imul
imul
and
pushl
fsubs
andl
sbb
pop
ret
xor
lea
sub
mov
or
pop
movsl
jbe
call
cwtl
push
xor
arpl
stos
lds
cld
add
pop
jno
pop
inc
sub
jl
notl
gs
cld
mov
inc
mov
mov
insl
test
mov
ret
sub
neg
pop
shr
mov
xchg
pop
jns
cmp
dec
es
out
mov
add
loopne
fisubrl
sbb
cmp
mov
ret
cmp
loopne
sub
mov
jns
mov
shll
dec
clc
ja
push
jnp
test
mov
leave
mov
add
xorb
inc
adc
aas
clc
dec
iret
sbb
ljmp
sti
inc
loope
sti
ljmp
mov
pop
aad
movsb
imul
les
sti
fsubs
loop
cmp
and
xchg
cld
push
cwtl
int3
sarl
mov
mov
mov
dec
xchg
adc
xor
mov
and
pop
inc
lock
jle
mov
fsub
das
adc
out
hlt
pop
and
ds
or
push
mov
pop
pop
aaa
pop
mov
outsb
and
jmp
cmc
in
push
mov
xchg
lret
shl
in
adc
repz
icebp
rcr
sub
pop
sbb
sbb
test
sbb
pop
stos
jnp
pop
stos
pop
shrb
lds
jbe
jno
dec
pop
xchg
adc
lods
out
or
mov
cltd
in
cmp
inc
repz
gs
inc
push
xchg
out
pop
scas
adc
add
adc
sti
mov
mov
shll
push
cmp
push
lds
xchg
sti
lds
adc
int
mov
fsubs
xchg
mov
mov
fadd
fs
inc
jnp
lahf
test
icebp
xor
cmp
or
insl
jle
fidivrl
js
xchg
insl
dec
cmpsb
cltd
imul
cwtl
pop
in
in
lods
xorb
push
aas
cmpsb
bound
jmp
mov
and
aad
testb
dec
mov
adc
add
push
aam
test
lret
mov
jnp
adc
pusha
movb
jecxz
sarl
xor
fwait
popf
jg
mov
call
repnz
les
mov
pop
insb
nop
xor
and
into
cmpsb
iret
lahf
fsubl
lea
jmp
pop
xchg
sub
out
cs
outsl
in
sbb
in
inc
lahf
push
cmp
test
jb
mov
dec
lahf
pop
movsb
inc
mov
push
and
loop
pop
mov
aas
xchg
sub
test
jecxz
das
push
test
insb
mov
cltd
inc
pop
push
out
jecxz
pop
cmpsb
mov
call
mov
adc
push
aad
adc
jbe
clc
mov
dec
aad
cmp
lds
or
xor
adc
in
cld
shll
std
mov
pop
mov
fwait
divb
xor
cmp
and
in
dec
or
sub
cmpsb
push
lcall
insb
roll
fisttps
and
sbb
mov
aam
inc
push
cmp
inc
dec
ja
ja
sbb
xor
adc
sub
mov
loope
cwtl
or
out
dec
xlat
stos
cmp
cmpsb
stc
inc
mov
cltd
fists
shlb
or
aad
cld
inc
repz
icebp
mov
ret
scas
outsl
subb
cli
pushf
jg
adc
mov
pop
fcoms
lret
ja
sub
adc
fiadds
das
shll
mov
pop
push
sub
cmp
pusha
add
jno
xchg
lea
adc
dec
jne
out
add
jno
xor
aad
mov
mov
and
jae
xor
pop
xchg
mov
ss
xchg
in
lods
sbb
cmp
pop
out
dec
push
xor
adc
loopne
je
jbe
shrl
push
pop
pop
imul
std
dec
ret
fdivs
pop
fisubrs
xchg
stos
mov
dec
in
xchg
psubq
push
pop
outsb
aad
sub
xchg
dec
out
mov
mov
insl
xchg
cltd
dec
and
mov
std
inc
stc
mov
sub
cmp
mov
cmp
mov
lock
ds
std
pop
into
pop
cmovns
outsl
and
mov
leave
scas
push
sarl
cmp
fidivl
movl
push
adc
out
push
push
addr16
push
js
sbb
jl
mov
xlat
fisubrs
iret
xchg
loope
xchg
xchg
imul
fstl
pop
iret
rcrb
xchg
popa
out
add
push
mov
jb
cwtl
pusha
inc
inc
adc
out
idivb
mov
jge
gs
cmp
sbb
push
jb
out
pop
mov
lret
scas
push
iret
sbb
insb
aas
adc
andl
ror
arpl
insb
mov
mov
rclb
mov
fidivrs
scas
pop
loope
xchg
arpl
jno
divb
sbb
cli
fisubs
dec
sub
mov
sub
sbb
mov
shrb
add
inc
lcall
or
and
and
movsl
push
sbb
out
loopne
les
push
fisubrs
cmp
and
push
inc
cs
outsl
inc
jnp
std
push
in
cs
les
xchg
lret
mov
and
mov
mov
jns
sbb
out
xor
pop
cmpb
pop
push
xor
mov
xchg
outsb
jae
fs
cld
in
dec
lock
stos
arpl
jp
dec
adc
adc
dec
test
and
movsb
aas
xchg
nop
dec
sbb
sti
les
and
in
inc
dec
pop
das
sahf
xchg
mov
jb
pop
imul
das
and
sbb
iret
loop
in
loopne
inc
cli
hlt
xlat
fnstcw
xchg
ja
arpl
rol
leave
les
pushf
mov
dec
pop
cld
movsb
pop
mov
add
mov
cwtl
bound
sti
push
pop
repnz
lods
ret
xchg
rcrl
xchg
lahf
lods
repz
aaa
movsb
sti
rcll
loop
out
add
mov
test
xchg
rolb
clc
and
lahf
mov
fcmovnb
push
cmp
mov
cltd
insb
addr16
popf
mov
stos
dec
scas
aad
xchg
push
or
js
mov
out
inc
ss
mov
fs
mov
add
push
insb
movsb
adc
out
stc
xor
sti
cmc
prefetch
mov
pop
jno
push
and
neg
push
je
push
in
das
cmp
xchg
ret
mov
jo
aad
xchg
out
cld
pop
sti
add
ret
int
daa
ret
and
mov
sub
cmp
xlat
xor
clc
fs
repz
dec
lods
repz
test
out
rclb
insl
sbb
fistl
sarl
xor
jle
fistl
mov
call
sbb
je
int3
mov
cmpb
cltd
cmp
mov
xchg
scas
xor
pop
mov
sub
mov
mov
loopne
add
imul
push
int
mov
lea
jmp
push
mov
mov
cmpsb
push
movsl
adc
cwtl
dec
popf
popa
insb
aam
aam
push
sbb
int
scas
mov
mov
mov
mov
add
or
cmp
movsl
fs
push
shll
hlt
push
loopne
fidivrs
pusha
push
push
mov
shlb
out
aas
lock
xchg
test
and
or
subb
aas
mov
cli
popa
mov
lret
and
xchg
jmp
faddp
mov
dec
stc
aad
mov
mov
mov
stc
adc
pop
mov
pop
cli
xlat
repnz
imul
inc
xchg
jmp
sub
xchg
jne
push
sbb
or
adcl
pop
in
sub
test
push
shr
outsb
pop
jns
cmp
fdivs
pop
mov
pop
jmp
mov
imul
add
sbb
inc
in
cmp
hlt
xlat
lcall
mov
jns
pop
add
in
mov
into
ficoml
aam
enter
dec
movsb
ror
lahf
out
sub
repz
push
jp
push
xchg
xor
jl
popa
leave
inc
dec
arpl
outsl
aaa
fstpt
je
push
cmc
test
outsb
stc
pop
ffree
lods
mov
xor
mov
mul
sahf
and
adc
mov
mov
inc
inc
fisubrl
test
inc
mov
mov
dec
sub
ret
or
cmp
mov
inc
enter
mov
lcall
xchg
mov
pop
fidivrl
int
fisttpl
mov
das
nop
jns
sbb
out
xchg
aas
daa
aaa
es
and
xor
negl
and
jle
outsb
out
or
repz
pop
mov
mov
mov
enter
cmp
mov
sti
mov
aad
test
outsl
fwait
mov
pushf
lret
sti
in
and
cmc
and
loope
pop
mov
imul
aas
in
jnp
cwtl
jle
popa
stos
jl
jle
pop
jg
sbb
nop
mov
sub
scas
movaps
jb
repz
jb
nop
aad
and
push
pop
arpl
jb
nop
jne
and
push
xchg
mov
inc
bound
dec
add
cmpsb
ljmp
jge
ficoms
repnz
cltd
and
data16
int
movsl
punpckhwd
mov
insb
repnz
in
jp
in
outsl
adc
jne
xchg
add
xchg
add
out
sub
enter
jl
mov
pop
pop
jb
cmp
sub
pop
push
ficoml
jl
sbb
fcomps
ljmp
bound
cltd
clc
xlat
sti
fs
shrb
and
out
aas
cmc
cmp
clc
lods
es
arpl
mov
popf
rorl
pusha
mov
pop
pop
pushf
cwtl
xchg
pop
cmp
in
int3
dec
push
std
dec
aad
sti
cmp
scas
vmwrite
pop
mov
adc
fsubl
ss
cmp
insb
movsb
sbb
fistpl
xor
adc
lss
pusha
cltd
sub
cmpsb
outsl
jne
dec
lods
dec
pusha
outsl
loopne
stos
jb
jl
push
insl
xchg
sub
insl
fcoms
in
nop
pop
sub
movsb
mov
loopne
mov
mov
loope
pop
pop
mov
stc
push
pushf
cmp
in
cwtl
fnstenv
rcrl
lahf
es
jge
stos
lret
movsb
xor
adc
mov
mov
add
aaa
mov
dec
inc
pop
and
int3
jle
jno
add
push
or
cmpsl
call
push
push
cltd
out
seto
out
xchg
ffree
push
popf
ja
pop
sbb
ljmp
jne
in
dec
pop
popf
lods
sbb
popf
fbld
xor
sub
jbe
popa
cmp
cli
cmp
lahf
mov
mov
scas
sub
inc
cmp
push
add
lahf
lret
cmp
xor
pop
cmpl
js
push
fiaddl
dec
lds
sbb
xchg
out
xor
push
push
pop
in
pop
xor
and
into
mov
mov
sbb
inc
jno
pop
into
sbb
shrl
movsl
loop
jb
in
cmp
les
sub
sub
xchg
shrl
mov
mov
ds
dec
repnz
imul
shrl
in
pop
jecxz
mov
pop
jns
cmp
dec
sbb
icebp
insl
and
in
mov
mov
xor
ret
and
mov
ficomps
inc
push
mov
scas
adc
cmpb
repnz
nop
xchg
xor
aad
movsl
popf
lret
sbb
xor
faddl
lock
pop
lret
jg
adc
sbb
cltd
jg
pop
add
jmp
sub
sbb
test
push
loop
ljmp
repz
je
leave
jecxz
cmp
cld
mov
repz
dec
inc
push
mov
mov
and
loopne
inc
mov
mov
add
pop
or
subb
cli
inc
adc
cli
xchg
and
dec
inc
jb
out
fucomi
bound
cmp
pop
sbb
loop
jns
pop
aad
or
and
adc
inc
in
lret
pop
jns
fbld
daa
js
push
cwtl
imul
inc
mov
sub
and
sub
int3
dec
loope
flds
pop
push
call
sub
das
fsubs
sbb
inc
xor
cmpsl
sti
ja
dec
sbb
bound
lds
aaa
xchg
jge
lahf
test
ror
mov
outsb
ds
scas
addr16
mov
inc
mov
outsb
xchg
sub
dec
mov
test
cmc
orb
loopne
adc
daa
adc
aas
xor
imul
loop
jp
dec
cmp
sbb
pop
cmc
sbb
add
rclb
pop
jmp
repnz
ret
adc
iret
fwait
gs
test
repz
mov
hlt
stc
pop
jle
cmp
or
dec
jno
adc
popa
addb
adcl
jbe
adc
jg
xchg
dec
or
das
gs
mov
push
push
sbb
nop
mov
inc
jmp
mov
pushf
sub
mov
mov
insl
pop
sbb
data16
sub
jle
enter
lahf
mov
loop
jno
sub
js
in
mov
mov
lret
mov
cwtl
fwait
adc
rcrl
jb
add
sub
sub
out
push
ljmp
pop
jne
call
mov
dec
rcrl
jne
xchg
inc
jno
out
sbb
push
iret
inc
jge,pn
hlt
mov
ret
jecxz
test
cmp
or
push
jmp
jge
test
in
and
push
xchg
imul
adc
inc
iret
push
and
loopne
mov
out
mov
je
mov
iret
leave
lahf
mov
mov
jmp
repnz
subl
stos
out
push
sar
hlt
das
pop
xchg
inc
mov
lds
lahf
pop
stos
mov
push
sarb
in
mov
fcompl
movsb
cltd
xchg
mov
dec
lahf
das
pop
scas
movsb
mov
push
push
shl
in
push
pop
mov
pop
mov
or
inc
outsl
xchg
aas
fistpll
fcompl
imul
es
cld
fisubrl
sbb
pusha
repnz
fldl
jle
push
mov
inc
aas
inc
dec
pushf
call
mov
mov
shr
repz
out
push
xchg
dec
pop
inc
into
repnz
sub
fadd
movsl
jge
mov
popf
into
stos
pushw
hlt
pop
adc
add
xor
xchg
fdivl
pop
fidivl
stos
outsb
into
movl
inc
push
sub
pop
mov
or
mov
xchg
jecxz
shl
stos
mov
popf
pop
mov
call
lods
lea
addr16
jno
cld
stc
pushf
repnz
test
arpl
repnz
mov
sub
add
mov
lea
push
push
scas
dec
ss
fisubrs
lods
das
outsb
outsb
int
rol
aad
mov
int
lods
jae
loop
shlb
out
jno
add
jne
jmp
out
mov
cwtl
xchg
mov
ljmp
sbb
jl
jno
scas
imulb
mov
scas
add
push
mov
lret
mov
ret
addr16
adc
std
out
or
sub
adc
or
pop
sub
pushf
push
cltd
enter
xchg
aad
mov
mov
stos
or
push
push
sub
rcl
xchg
pop
std
stc
repnz
stos
xchg
cmp
sbb
stos
rcrb
and
mov
loope
mov
or
jb
cmp
aam
fnsetpm(287
aaa
mov
mov
dec
push
mov
jns
daa
clc
adc
imul
in
cmc
sub
das
mov
cld
pop
add
aad
es
outsb
lock
cmp
fcomps
push
arpl
pavgw
add
mov
mov
jg
shlb
mov
popa
insb
xlat
test
daa
pop
nop
in
jge
jg
xchg
push
adc
push
stos
pop
addr16
dec
mov
sub
ljmp
jbe
push
jne
push
inc
pop
aad
mov
arpl
test
aas
outsl
aaa
pop
leave
push
lods
fcompl
insb
inc
xchg
xor
mov
xor
imul
pusha
imul
mov
sbb
repz
and
adc
jae
xchg
mov
lret
xchg
scas
jg
aaa
or
jnp
gs
push
inc
add
test
xor
js
mov
dec
in
cli
into
stos
push
dec
fstp
jge
mov
ss
adc
jns
xor
and
pop
push
push
stc
pop
scas
test
xchg
scas
cmpsl
sahf
fstl
jnp
adc
ss
xchg
dec
xor
mov
sahf
cmp
or
inc
xchg
jl
aam
xchg
leave
push
sahf
inc
sbb
pop
sub
lahf
mov
mov
or
mov
xchg
movsb
pop
jl
xchg
mov
ja
inc
push
popf
push
repz
xchg
jne
aad
xchg
sbb
jns
xlat
fs
stos
popf
pop
frstor
xchg
mov
stc
aas
xchg
imul
push
cmp
fs
cli
outsb
jne
jl
movsl
ja
mov
ljmp
lods
adc
insl
adc
pusha
jecxz
jnp
mulb
xor
push
scas
jge
sub
popf
pop
dec
push
movsl
lahf
sti
jp
mov
mov
dec
outsb
stos
mov
fcmovb
jl
das
lds
or
das
pop
rep
pop
pop
push
jo
push
in
out
inc
mov
hlt
fucomp
out
mov
mov
mov
jnp
adc
inc
xchg
mov
xchg
dec
shl
lret
xor
xchg
and
mov
jmp
cmp
dec
in
jbe
loop
imul
lahf
mov
push
push
lods
stos
insl
clc
sbb
bound
and
inc
shlb
in
adc
stos
xchg
std
jno
hlt
mov
xchg
or
nop
inc
mov
sahf
ret
dec
mov
mov
jo
mov
aaa
shlb
jbe
jecxz
insb
mov
xchg
inc
mov
hlt
fucomp
ds
enter
push
sub
aaa
shrb
add
xchg
and
xor
inc
fisttps
roll
cmp
orl
push
sbb
jno
scas
ret
mov
or
adc
mov
arpl
in
pop
push
cmpsb
scas
cmp
mov
ljmp
inc
cld
lds
dec
cmp
xor
mov
fsubp
push
or
mov
add
mov
and
dec
clc
mov
cmc
mov
dec
aam
jmp
cmpb
rorb
xchg
mov
inc
pushf
mov
lret
ja
outsl
xchg
mov
jb
movsb
icebp
sbb
in
mov
ja
xor
xchg
xchg
pop
outsb
dec
rol
and
insb
push
lds
lock
mov
jmp
insl
sbb
add
jo
sub
stc
in
and
mov
divb
mov
repz
jecxz
inc
fsubrl
shlb
outsb
jnp
jb
pop
xchg
sub
jmp
jns
push
inc
push
xchg
inc
add
jno
xchg
loopne
xchg
jecxz
leave
movsb
mov
xchg
jecxz
or
sub
arpl
xchg
inc
into
ficomps
and
sbb
add
push
xchg
gs
push
cmp
xchg
cmp
mov
cwtl
and
jge
jl
pop
cmp
pop
add
and
pop
and
sub
dec
xchg
mov
xchg
jb
mov
es
test
jge
cmp
inc
stos
inc
jo
sbb
insl
adc
jle
xchg
dec
fwait
or
push
sub
ret
jbe
es
jmp
xchg
mov
jnp
lret
mov
add
dec
outsl
movsl
std
aas
fiaddl
adc
loopne
out
mov
xor
dec
xor
pop
dec
sub
cltd
cltd
outsl
push
imul
in
xchg
mov
aas
pop
das
ss
lahf
icebp
cmp
movb
test
int3
cmpl
dec
dec
or
loop
loope
pop
sub
inc
cmpsb
int3
pop
lahf
pop
adc
lods
mov
in
fwait
jb
mov
es
nop
mov
jne
int3
jnp
and
leave
xchg
rcrb
xchg
fcoml
pop
addr16
rol
pop
pop
std
push
adc
adc
jo
jno
popa
and
rcrb
adc
dec
mov
inc
nop
pop
adc
mov
xchg
mov
icebp
imul
in
xchg
xchg
add
inc
lock
mov
mov
xchg
aas
loop
push
cmpsb
test
mov
inc
push
stos
jnp
movl
and
ds
movsb
adc
bound
es
cmpsl
mov
adc
jge
cltd
add
mov
fisttpll
sti
xor
or
mov
mov
pop
mov
lods
out
data16
sbb
dec
mov
mov
int
mov
pop
jb
out
lea
xchg
cli
lret
adc
into
or
rclb
inc
loope
fcoml
and
ret
shr
aaa
lahf
mov
and
imul
mov
popa
or
arpl
sbb
mov
pop
cmp
mov
stc
xchg
jb
scas
ds
push
jo
div
pop
les
jmp
and
jle
stc
mov
daa
pop
sbb
mov
notl
in
rcll
sti
fst
jne
mov
ja
add
jmp
dec
or
insb
sbb
lods
fwait
xor
and
xor
push
ret
push
sbb
xchg
inc
cli
rorl
clc
fstl
inc
gs
mov
xor
xor
out
mov
dec
out
scas
jle,pn
and
cwtl
icebp
xchg
lret
loop
jl
mov
pop
pop
mov
push
and
adc
shr
push
repnz
sub
aam
adc
pop
and
cwtl
push
adcl
xor
sub
pusha
mov
cld
xorl
lcall
push
popf
stc
adc
dec
xor
push
jb
shlb
scas
lds
es
pop
roll
adc
mov
int
mov
mov
cmc
or
or
mov
mov
inc
adc
jae
jle
xchg
test
sbbb
and
aas
inc
ss
adc
sbb
out
stos
clc
jmp
xor
idivl
push
dec
sbb
test
xchg
xchg
push
jne
mov
mov
out
xlat
je
and
neg
scas
cwtl
mov
stos
push
add
filds
fs
sub
cmpsb
jne
shll
std
dec
leave
fs
dec
sbb
pop
imul
jecxz
dec
popa
outsl
jae
jl
push
and
lahf
cmpsb
bound
adc
pop
mov
pop
and
sbb
std
mov
mov
dec
pop
out
xchg
repnz
pop
mov
sub
lss
ljmp
xchg
pop
xchg
aam
add
imul
push
dec
stos
xchg
repnz
and
das
leave
leave
jnp
lret
and
dec
ljmp
call
test
fcomp
dec
jle
sahf
fnstsw
cltd
aas
pusha
shrl
push
fnstcw
int3
fiadds
mov
shr
lahf
sarb
jae
dec
out
push
sub
jb
sbb
mov
sub
divl
inc
push
cmp
movl
stos
lods
out
xor
nop
enter
sbb
push
aas
jae
gs
cmp
pop
lock
fdivl
cmc
aad
pop
cltd
imul
jmp
cmp
or
sub
ljmp
insl
out
or
cmp
sbb
scas
cmpsb
loopne
or
fistpll
repz
adc
popf
cmp
push
popf
push
lds
jb
pop
das
pop
jne
cs
addr16
ljmp
mov
addb
xor
stos
mov
pop
lcall
or
lahf
in
and
fiadds
push
sub
outsl
out
xchg
lcall
pop
pop
xchg
xor
jmp
fwait
pop
das
mov
int
sti
jg
add
clc
jmp
jmp
and
jb
and
pop
jp
std
call
subb
test
and
mov
xchg
aad
daa
mov
jbe
mov
jbe
out
mov
push
fdivs
lcall
inc
clc
lcall
mov
cmp
xor
daa
movsl
xchg
out
je
cmpsl
cmp
ja
xor
jne
or
jmp
adc
js
sbb
cmpsb
mov
inc
in
cltd
ss
and
lret
mov
outsb
int3
psrlq
gs
and
cwtl
imul
adc
mov
push
cltd
and
in
xchg
jle
popa
cmpsb
xchg
jg
mov
lds
bound
ss
aaa
test
insb
cmc
jecxz
jge
out
cmpsl
stos
cmc
add
aaa
pop
test
int3
int
push
push
cltd
pop
out
lahf
stos
repz
hlt
int
clc
mov
push
jnp
fld
in
pop
test
adc
push
imul
adc
inc
cwtl
pop
xchg
adc
push
sub
cmp
inc
insb
fdivr
outsl
loop
add
add
add
xor
push
movsb
push
push
sub
arpl
xor
shll
cmp
push
adc
dec
cwtl
mov
fs
sub
push
sub
jb
push
mov
cmp
mov
lcall
add
in
fbstp
lods
pushf
stc
lahf
aas
iret
xchg
outsl
mov
in
mov
pop
sbb
xor
jo
xchg
jle
popf
push
xchg
sti
mov
adc
xor
cld
fpatan
rep
jae
iret
stos
jne
test
and
and
mov
sub
shlb
repnz
loope
and
outsl
inc
cs
mov
jg
ffree
adc
testl
cwtl
lock
xor
fsubp
pop
dec
pop
test
lret
leave
scas
xchg
mov
mov
enter
cmpsl
add
out
les
xor
and
inc
push
mov
out
xchg
mov
mov
pop
dec
xchg
dec
mov
sub
sbb
sub
stos
sub
adc
stos
repnz
pop
cld
lret
lcall
es
fnop
push
jle
sub
and
jbe
jns
aam
xchg
xchg
fwait
insb
jno
fwait
adc
adc
ret
cmpsl
lahf
outsl
push
mov
addl
les
gs
sbb
jp
push
sub
push
cs
cmpsl
mov
mov
pop
popf
call
mov
push
rolb
cwtl
aad
lahf
gs
loopne
sub
pop
mov
cs
pop
scas
inc
mov
pusha
dec
push
pop
xchg
daa
repz
sbb
inc
sbb
jg
dec
stc
cmp
cmpsb
call
insl
adc
int3
push
cltd
cli
or
popf
rorl
pop
outsl
stc
leave
ljmp
pop
ret
out
mov
xor
push
dec
pop
cmp
popa
push
ljmp
out
cmp
imul
mov
mov
mov
mov
push
cmpsl
mov
data16
ds
int3
test
lret
ret
jge
pop
lock
xor
mov
cmp
aas
inc
xlat
dec
aas
cld
pop
xor
stc
push
dec
push
dec
xchg
sti
dec
std
inc
inc
test
mov
clc
jbe
movb
sbb
or
movl
cmp
adc
test
fistl
jbe
add
inc
jnp
pusha
jo
in
adc
sbb
add
add
xor
lods
inc
ss
jmp
cmp
or
xor
mov
ret
or
fcompl
jae
push
push
repnz
jg
mov
popa
loope
dec
sbb
notb
mov
mov
add
sbb
xchg
mov
inc
sti
aas
add
sub
sarb
movsl
ret
xchg
mov
in
dec
jns
mov
bound
or
jmp
fs
orl
xchg
xor
pop
lret
dec
mov
add
dec
mov
mov
cmp
stos
cld
push
xor
and
clc
inc
out
inc
inc
ja
aam
lret
inc
cmpsb
aam
out
scas
jno
rorb
push
sbb
push
cltd
ror
lods
loopne
jecxz
sarb
sub
mov
add
mull
push
fadds
mov
pop
pop
mov
sub
mov
out
cmp
lods
dec
mov
mov
cli
add
xchg
push
inc
ds
push
mov
dec
or
jle
mov
aas
lock
or
or
insl
or
jo
fsubl
mov
js
lods
jo
or
mov
repnz
fidivrs
aad
inc
mov
loope
lock
mov
lcall
cmp
jns
fsubrp
cmp
sarb
out
mov
inc
jnp
push
cmp
aad
xchg
inc
pop
and
sub
pop
test
jl
aam
es
pusha
leave
xor
lret
push
mov
pop
mov
mov
pop
out
push
ljmp
mov
mov
xor
dec
dec
sub
xchg
pop
scas
adc
and
xchg
push
pop
pop
xorb
add
xchg
fisttpl
imul
bound
or
fwait
jnp
test
repz
jle
icebp
sbb
stos
jle
pop
mov
outsb
sub
lods
xchg
test
push
nop
daa
out
jb
filds
add
mov
mov
in
in
jmp
dec
add
pushf
cli
pop
icebp
xor
lds
fimuls
sbb
imul
push
mov
scas
add
xchg
cld
scas
inc
pop
xchg
insb
loop,pt
push
mov
mov
xchg
fsub
aam
popf
mov
dec
pop
push
scas
icebp
clc
call
loopne
xor
aaa
sub
and
pop
shr
test
in
push
xor
ret
mov
dec
ret
in
lods
fcoml
sub
push
push
xchg
popf
jo
mov
jno
cwtl
dec
adc
xchg
jmp
xor
mov
repz
out
pop
andb
into
sbb
jle
add
mov
mov
fsubr
stc
mov
and
aas
or
add
jno
jmp
cmovb
sti
xchg
fimull
cmpl
sub
test
pop
sarb
into
or
orl
pop
sbb
hlt
int3
sbb
clc
aam
fimull
dec
ljmp
pop
cmp
clc
in
cmpsb
popa
push
mov
mov
lea
das
cmc
jnp
out
pop
sarb
push
call
dec
lock
adc
lods
and
out
adc
or
pop
adc
sti
mov
inc
adc
sarl
inc
jnp
sub
pop
dec
lret
mov
pop
pop
aaa
pop
aaa
imul
fdivr
jmp
daa
dec
shlb
out
push
lret
sahf
xchg
in
cmp
sti
sbb
roll
xor
add
sub
xchg
xor
bound
out
subl
pushf
orl
xchg
loop
jecxz
loop
les
adc
cwtl
mov
insl
loop
sbbb
jno
jno
loop
notb
mov
xchg
aaa
shlb
add
ret
loope
clc
outsb
add
lods
nop
jmp
loop
sbb
mov
pop
aad
add
mov
subb
loopew
lea
gs
inc
dec
mov
adc
push
xchg
or
xchg
adc
ds
daa
jl
xchg
inc
pop
mov
inc
std
sub
insb
lock
cld
pop
or
cmp
adc
ja
adc
das
rcrl
imul
movsl
test
or
mov
lret
mov
into
xchg
sub
mov
cmpsl
pop
loop
inc
fdivs
xor
or
add
in
jnp
cmp
shlb
int
adc
dec
in
icebp
mov
xchg
outsb
xchg
adc
mov
imul
enter
push
icebp
aas
xchg
aas
sbb
jmp
shll
ret
bound
mov
loope
xlat
stc
fdiv
shll
pop
iret
mov
jbe
es
xchg
adc
out
fdivl
ss
add
jg
stos
xor
pushf
sbb
mov
push
negl
loopne
xchg
or
test
dec
xchg
xchg
ljmp
in
and
rcl
ss
xchg
cmp
leave
push
mov
loopne
sub
subl
or
stos
mov
add
pop
mov
sti
xorl
cmp
cmp
xor
xchg
loop
inc
and
push
call
cmpsl
xchg
lret
les
pop
add
jnp
aam
pop
or
ret
sbb
movsb
jnp
mov
fwait
or
enter
cli
add
cwtl
aaa
mov
mov
cmp
cmpl
mov
and
scas
cwtl
mov
jecxz
cs
icebp
lods
inc
dec
lods
aam
gs
sbb
mov
pop
inc
sbb
call
cmp
ja
lea
and
sbb
sub
cwtl
insl
mov
popf
pop
cmp
xchg
push
imul
pop
xor
hlt
xchg
jecxz
xor
test
lock
call
int
jbe
fsubrl
scas
filds
push
cmp
fldcw
clc
mov
test
pop
pop
mov
pop
push
outsl
mov
sub
int3
dec
test
inc
pusha
dec
xchg
mov
adc
cmp
out
mov
cmp
dec
push
stos
mov
cmp
or
mov
out
add
int
lock
inc
or
push
mov
mov
out
daa
popf
mov
out
xchg
bound
mov
rclb
sub
test
push
fdivrs
fdivl
shrb
movsb
fstl
adc
sbb
jnp
jle
je
pop
sbb
imul
int3
loop
jnp
push
std
test
test
pop
mov
xor
sub
or
loope
stos
repnz
and
sub
loope
scas
mov
adc
iret
sub
fsubl
decb
mov
ror
popa
sbb
ja
pop
inc
fldt
jl
cmp
mov
push
dec
push
fidivs
std
and
jo
or
push
inc
jmp
xor
xchg
adc
frstor
sar
sahf
xor
ficomps
adc
cmpsb
fs
xor
ljmp
lea
icebp
mov
push
adcl
sti
xchg
pusha
insb
in
ret
rcrl
mov
mov
push
testl
add
outsb
inc
dec
das
aam
ds
test
jbe
pushf
xor
pop
jbe
pop
cmp
push
and
pop
bound
insb
pop
cs
mov
shlb
scas
hlt
push
jo
push
xchg
movsb
ljmp
xor
test
jbe
ret
lret
jns
sub
aad
mov
jne
insl
lcall
mov
mov
movsl
int
sahf
inc
fbld
push
mov
jbe
hlt
in
dec
push
mov
adc
adcl
fidivrl
sbb
stos
and
and
aam
pop
or
cmovge
loope
test
in
sarb
and
shr
jecxz
aad
imul
outsb
enter
jo
push
push
adcb
in
inc
dec
ficompl
sbb
sarb
xchg
cmp
mov
and
jge
cmp
out
xchg
pop
sub
mov
js
out
pop
pop
xlat
ds
in
aad
cmp
xor
divb
imul
ljmp
repnz
imul
rcrl
lret
jbe
sahf
fdiv
fstp
mov
jp
testl
clc
mov
repnz
fdivs
je
cli
popf
cltd
aas
ds
arpl
lods
negl
xlat
pop
pop
pop
lock
cmpsl
lret
scas
sbb
adcl
fdivl
push
ficoms
int
loope
testb
push
mov
jg
repnz
outsl
je
mov
cltd
xchg
outsl
ljmp
fdivrl
push
pop
mov
mov
cmp
jno
adc
and
sahf
lahf
and
iret
cmp
nop
jmp
jge
mov
sbb
ljmp
jl
sbb
out
push
insl
mov
jmp
js
ret
jl
jecxz
mov
adc
push
cmp
mov
loope
inc
pop
jnp
daa
ja
pop
stc
mov
div
sub
data16
ds
xchg
pop
jle
xor
aam
mov
pop
mov
mov
ffree
call
dec
rcrl
out
mov
jo
jg
icebp
popf
cmp
jle
data16
frstor
sti
daa
sahf
shl
ljmp
lahf
fwait
mov
fstp
aaa
or
pop
sar
aas
dec
pop
cmp
pop
dec
and
mov
je
jecxz
fsub
jg
lret
and
sbb
cmp
subl
into
in
add
mov
xchg
in
jle
test
mov
xchg
aas
mov
pop
std
icebp
out
jmp
arpl
or
xchg
aas
cmp
arpl
jle
cli
jecxz
cld
stos
sahf
negl
jnp
out
inc
inc
jg
lock
jecxz
ljmp
jge
mov
cmp
rorl
mov
cli
fnsave
mov
jg
mov
aaa
mov
mov
mov
ficoms
jnp
inc
push
sub
xor
jo
xchg
pop
add
pop
push
push
inc
sarl
jle
lcall
int
mul
je
test
int
mov
and
mov
adc
cli
popa
mov
mov
adc
js
mov
push
dec
lret
sahf
aam
xor
push
iret
js
push
bound
adc
and
add
dec
jno
jne
push
jp
add
outsl
push
popl
push
pop
fs
push
jno
loop
jmp
out
fsubp
xor
fwait
call
jno
push
inc
loope
ja
xor
pop
repz
dec
lahf
jae
loopne
add
call
xlat
pushl
test
or
in
in
movl
mov
pop
scas
out
arpl
or
rcl
push
push
mov
mov
movsl
push
test
loopne
imul
inc
fmull
lock
adc
dec
sbb
mov
push
mov
mov
orl
ja
push
mov
lods
cli
scas
fmull
jne
repnz
mov
cmpsl
outsl
jle
lock
mov
popa
idiv
xor
dec
cmpsb
sub
push
repnz
push
push
scas
sub
sub
arpl
loop
xor
dec
fcmovbe
adc
mov
mov
push
sbb
jnp
push
dec
xchg
outsl
hlt
inc
pop
cmpsb
cmc
pop
fcompl
stos
out
ret
jp
scas
icebp
and
mov
pop
loope
arpl
imul
mov
fwait
push
jns
dec
nop
jl
sub
cmp
les
jmp
add
cltd
or
in
pop
faddp
add
mov
in
lret
shll
add
mov
jmp
pushf
adc
dec
popf
subb
mov
loop
adc
repnz
push
mov
xor
pop
xor
movsl
cmp
sbb
mov
lahf
dec
cld
xor
fiaddl
sub
test
nopl
push
rcr
adc
mov
ja
sub
lock
add
mov
sub
ret
in
hlt
or
rclb
mov
fbstp
fimull
and
arpl
jle
push
pop
mov
imul
mov
adc
inc
add
mov
sbb
cld
or
dec
pop
mov
fadds
insb
mov
clc
push
mov
pop
pop
adc
xchg
incl
lods
mov
xchg
jecxz
xchg
outsl
sbb
movsl
sahf
imul
sub
vcvtss2si
jo
mov
inc
cmp
sub
mov
dec
rcr
add
mov
and
cmp
inc
dec
cwtl
push
cmpsl
rcrb
adc
pop
mov
xchg
pop
testl
pop
sub
sbb
inc
iret
xlat
fistpl
call
dec
cli
xor
negl
icebp
mov
mov
daa
or
cmp
popa
mov
sbb
jg,pn
jne
fcoms
aas
pop
push
repnz
ljmp
sbb
movsb
add
adc
mov
jge
xor
lret
push
sub
and
fdivr
cmc
mov
jns
bound
ja
gs
mov
fcmove
sbb
xchg
iretw
push
mov
push
add
sbb
pop
inc
repz
inc
xchg
push
cmpsb
add
mov
xchg
inc
adc
cmpsb
lcall
or
repz
hlt
sub
lds
aad
les
sti
jmp
mov
fdivr
mov
rclw
mov
cmpsl
mov
jno
add
mov
adc
rorl
push
xor
insl
stos
push
sub
ret
mov
and
mov
shll
inc
push
adc
sub
arpl
xchg
pop
xchg
pop
or
mov
mov
jne,pt
push
mov
rorb
mov
jl
aam
icebp
jno
subl
lahf
cmp
sbb
int3
fbld
adc
std
sub
mov
cmc
fisubrs
hlt
jecxz
push
in
je
xor
lret
lahf
shll
mov
scas
add
dec
sbb
sbb
je
aaa
fbld
ss
movups
jae
pop
pop
push
pop
mov
in
ficoms
sahf
cmp
cwtl
or
aas
pop
int3
lret
inc
sbb
pop
dec
sahf
adc
ss
cli
mov
int
rcrb
mov
adc
notb
xchg
out
mov
or
mov
nop
xchg
loope
andl
dec
mov
sub
sarl
xchg
iret
xor
pop
push
push
push
inc
or
sub
or
js
stos
push
enter
inc
pop
cmp
cmp
mov
pop
ror
fidivl
add
jae
idiv
aam
jg
fidivs
rcll
in
inc
rcll
aam
hlt
push
shlb
or
inc
add
add
lcall
xchg
dec
rcrl
aad
push
sbb
aas
or
jns
sub
inc
pop
mov
les
call
shll
imul
ja
jecxz
jg
lcall
jle
ljmp
rclb
jle
adc
dec
sahf
add
je
push
mov
bound
xchg
call
pushf
mov
inc
add
ret
cld
test
lods
sbb
sub
dec
sub
adc
clc
jmp
shr
call
xchg
adc
sub
xchg
loope
dec
sbb
xchg
daa
sub
inc
inc
popa
add
mov
and
mov
stos
sbbl
mov
int
stos
popf
cltd
jno
dec
sbb
pop
mov
enter
xchg
fldl
rorl
and
mov
xchg
addr16
shrl
sbb
jle
jbe
pushf
lds
add
icebp
rorl
xchg
mov
inc
xchg
mov
bound
sbb
add
sub
andl
or
push
push
cmpsb
lahf
ljmp
sbb
add
sbbl
sbb
add
mov
insb
push
adc
and
fnstenv
cmpl
imul
lret
ja
leave
pop
pushf
or
dec
xor
xor
dec
cwtl
push
out
hlt
dec
xchg
mov
push
xchg
pop
iret
mov
inc
test
es
movsb
mov
mov
push
aas
fnstcw
stos
mov
or
push
mov
cmp
hlt
pop
add
cmc
mov
mov
in
xchg
dec
or
xchg
xor
jmp
xchg
dec
push
popa
cli
les
mov
xchg
mov
add
push
pop
cmp
jb
mov
bound
pop
shlb
cmp
dec
notl
push
fsubl
mov
std
mov
movsl
jl
hlt
mov
dec
xchg
movsl
leave
or
imul
mov
mov
xorb
sbb
inc
mov
push
add
and
and
mov
addb
or
mov
ret
adc
test
into
ljmp
and
sbb
and
xor
pusha
lret
out
jo
sbb
insl
push
mov
xchg
shr
inc
stos
fs
xchg
jl
xor
stos
lea
mov
mov
in
mov
sub
and
xor
in
movb
popa
cmp
out
xor
enter
xchg
cmp
xchg
dec
pop
pop
mov
cmpsl
fs
mov
xchg
xchg
test
cmp
cmp
xchg
dec
and
xchg
movsl
movsl
cltd
and
push
and
sub
mov
and
fistps
loopne
mov
and
int
repnz
dec
imul
ds
adc
sahf
negl
mov
into
lds
and
or
outsl
fisubrl
pop
sub
call
or
sub
or
inc
jns
insb
xlat
loop
leave
pop
call
shl
inc
dec
dec
pushf
dec
mov
mov
pop
jmp
inc
lock
inc
xor
out
mov
inc
insb
icebp
push
jae
mov
or
fistpl
lods
xchg
pop
hlt
push
or
push
adc
movsb
or
cmpsb
outsl
bound
sub
sti
and
ja
mov
test
and
dec
ja
scas
and
jae
outsl
dec
cmpsb
jae
jbe
in
sub
jecxz
aam
pop
popa
sbb
sbb
imul
shll
cmp
push
push
add
mov
push
push
push
and
push
ja
inc
adc
pop
push
and
call
sub
jo
mov
call
push
xchg
mov
sub
adc
lea
imull
inc
ret
push
dec
xor
or
mov
mov
loope
test
or
inc
gs
pop
cmpsl
jno
dec
mov
mov
push
adcl
nop
push
in
mov
mov
push
outsl
loope
push
add
adc
add
lret
out
sbb
arpl
mov
loopne
cs
es
ds
and
lret
stos
icebp
negb
inc
push
or
mov
jecxz
mov
push
adc
jecxz
inc
xchg
inc
ret
add
sub
and
xor
nop
cltd
mov
lods
jne
stos
mov
call
jnp
xor
mov
push
push
testl
cmp
jbe
je
mov
inc
pop
out
and
in
daa
push
fidivl
push
outsl
arpl
int3
adc
sbb
gs
cmp
jno
sbb
xlat
movsl
or
int3
jmp
xor
aam
jle
aad
sbb
xchg
and
add
jle
push
pop
cmp
xchg
jne
scas
ds
popa
stos
and
and
push
xlat
adc
mov
xchg
in
popa
jmp
sbb
test
xor
cmc
ss
xchg
or
popa
or
mov
loop
into
dec
mov
roll
mov
inc
dec
jmp
xchg
test
cld
icebp
stos
fwait
cs
sbb
xchg
ret
test
inc
mull
arpl
pop
sub
mov
mov
xorl
jae
push
pop
in
ret
lahf
sub
xlat
inc
ret
jge
rorl
mov
cmpsl
xchg
popf
cmp
xlat
or
cli
leave
test
inc
repz
mov
nop
dec
inc
lods
cmpsb
out
push
push
jmp
mov
call
adc
ret
adc
mov
add
inc
push
js
jl
addr16
mov
add
orb
repz
addl
pop
fstl
sbb
sbbl
lods
imul
push
insb
movsb
aam
xchg
out
mov
dec
mov
push
and
pop
sub
cmc
rcrl
int
fcomps
jp
test
in
movsb
push
cmp
mov
movsb
push
inc
jnp
cmp
scas
sub
lods
xchg
movsb
mov
jmp
leave
lods
arpl
pop
jp
dec
inc
or
daa
lds
xlat
dec
daa
icebp
jnp
dec
cli
sbb
mov
push
movsl
jne
popa
fdivs
dec
lret
mov
cli
insb
xchg
jmp
adc
cli
pushf
jb
push
pop
inc
jnp
and
emms
dec
ret
mov
inc
insb
shrb
cmp
rcrb
cmc
cwtl
xor
inc
loopne
jb
cmp
jnp
cld
nop
mov
pushf
les
ss
and
ss
dec
mov
pop
cmc
or
and
cmp
dec
or
sbb
push
jp
mov
iret
mov
mov
daa
mov
rorb
jns
and
inc
out
sbb
cmpsb
subb
or
push
dec
pop
push
or
stos
jbe
arpl
fmul
ss
cld
rorb
and
xor
sbb
push
popa
and
push
fs
pop
inc
add
mov
jno
and
arpl
adc
sub
arpl
mov
stos
ds
mov
xor
xor
sbb
cmc
mov
out
ret
dec
mov
gs
repnz
jge
jno
dec
ret
pusha
push
repnz
fisttps
call
stos
xor
inc
divb
in
fmuls
and
push
inc
sahf
pusha
out
jge
outsl
or
test
jae
inc
and
in
xor
mov
hlt
cmp
popa
dec
pushf
pop
aas
pop
push
sub
jge
cmp
jge
dec
mov
dec
nop
ds
xor
add
negb
mov
push
jb
movsb
pop
inc
packssdw
orb
push
or
loopne
lds
pop
sbb
push
sbb
sbb
lahf
test
mov
je
outsb
cmp
dec
push
adc
inc
and
cmpsl
push
outsb
daa
out
jbe
mov
call
into
mov
stc
push
mov
cmp
sarb
stos
ds
das
or
hlt
cmp
cmp
push
sar
aam
xor
xchg
sub
pop
mov
mov
std
jp
push
inc
sub
sub
jb
pop
lret
cs
cmp
sub
stos
sbb
fldenv
push
dec
pushf
sub
add
inc
pop
xchg
push
adc
inc
test
aad
cmp
mov
clc
jbe
outsb
push
jle
fnsave
je
fdivp
and
loope
stos
mov
ret
and
jae
fbld
iret
and
inc
or
loopne
test
ljmp
push
rolb
fwait
inc
stc
mov
lea
cmc
cmp
repnz
add
lds
enter
inc
int3
mov
inc
int3
sub
imul
rcl
sbb
es
aas
xchg
adc
push
mov
subl
jae
mov
out
testl
jnp
adc
fistpll
ds
and
movlps
sub
sti
sbb
aam
mov
xorl
mov
fs
dec
cmp
loop
in
xchg
imul
orb
xchg
jne
mov
adc
das
adc
test
std
jmp
xchg
pushf
push
repnz
push
sub
and
lea
dec
lods
adc
pop
rclb
mov
sti
and
cmp
rcll
mov
icebp
or
mov
sbb
mov
ret
icebp
lods
lahf
orb
jnp
cmp
fidivrl
pop
out
mov
push
mov
add
push
adc
push
lret
and
mov
hlt
mov
loopne
mov
mov
mov
adc
sar
or
cmp
adc
push
cwtl
aad
lcall
mov
cmp
or
xor
mov
insb
lcall
add
mov
cmp
lcall
aam
pushf
cmp
xor
jno
pop
js
jg
mov
xchg
scas
pop
int3
add
pop
ljmp
stos
stc
aad
mov
mov
fidivs
mov
or
popf
and
push
jg
imul
add
cmp
cmp
stc
lcall
mov
pop
pushf
shl
dec
test
jmp
inc
pop
in
leave
rcrb
ds
rcll
in
mov
sub
mov
lds
and
popa
lret
mov
jb
adc
and
xchg
adc
pop
rcrl
in
dec
inc
movsl
movswl
outsl
sahf
inc
push
outsb
xor
jmp
inc
and
and
jae
je
jmp
imul
mov
jle
cltd
push
out
lea
or
scas
outsb
add
dec
adc
fistpll
imul
push
orl
dec
mov
cmp
pushf
add
mov
clc
subl
ffree
push
jo
cld
xchg
mov
and
push
cmp
js
push
aas
js
jp
outsb
outsl
mov
sub
xor
xchg
insb
int
sti
push
stc
pop
sbb
std
ret
shl
sub
ss
adc
ret
scas
loop
jnp
shll
cmp
in
push
int
pop
pop
ret
aaa
sub
cli
cmp
mov
pop
and
in
inc
sub
jg
add
stc
or
mov
xor
xor
jmp
sti
push
xlat
mov
mov
dec
xchg
sbb
sub
stc
sub
xor
mov
data16
out
scas
jae
mov
mov
inc
maxps
rcrb
inc
jecxz
lock
shll
jb
insl
loope
mov
push
dec
subb
cmpsb
sbb
call
inc
push
faddp
add
test
gs
dec
fdivr
xor
jae
cmp
pop
mov
aaa
inc
push
cs
lret
movsl
movb
push
push
mov
and
pop
nop
pop
cmp
inc
addb
stos
cmp
or
pop
and
mov
or
imul
gs
lock
daa
int3
jmp
loope
push
add
pop
leave
mov
arpl
mov
xchg
pop
std
sarl
js
or
popa
jno
rcl
imulb
xchg
clc
out
xchg
sbb
push
aas
les
add
sti
mov
movsb
int3
and
stos
sbb
cmp
jge
scas
sbb
jne
pop
out
hlt
popf
add
imul
cwtl
iret
aam
cs
lahf
ret
roll
call
aas
mov
decl
loope
adc
push
dec
out
xor
test
jbe
cs
cmp
push
scas
jp
mov
in
push
repnz
pop
sub
jnp
in
in
jnp
cld
decl
ss
pop
movsl
ljmp
dec
out
stos
push
out
insb
mov
pop
jno
jno
mov
mov
mov
cmpsl
inc
insl
js
jae
orb
sar
movntps
cmp
imulb
shl
bound
pushf
jecxz
add
jnp
imulb
shrb
das
xor
mov
inc
pop
or
adc
xchg
fnsave
rcll
add
jb
xchg
out
insl
cmc
into
call
mov
push
sbb
es
subb
and
ficomps
adc
cli
fs
cmp
push
inc
stos
mov
fisubrs
repz
cwtl
ds
test
loopne
adc
cmp
pop
bound
adc
lds
adc
nop
push
pop
pop
sarb
cmp
xor
add
movsb
cltd
xchg
xor
sbb
push
pop
movsl
das
enter
mov
shrl
hlt
lods
ss
pop
sbb
adc
cli
cld
add
push
shrl
outsb
sbb
fldcw
push
jno
mov
test
add
fcmovnbe
jl
outsb
rorl
jne
jb
lret
in
add
test
push
add
pusha
mov
jp
jle
push
mov
adc
clc
outsb
pop
inc
xor
xor
add
lds
push
xlat
insb
shr
xor
mov
pusha
ss
mov
jbe
fistl
fcomps
int3
cli
inc
adc
mov
cmpsb
ljmp
cltd
imul
mov
popl
mov
cwtl
xchg
mov
mov
mov
jne
in
movsb
jp
cmpsl
adc
insb
push
pop
cmpsl
lea
ljmp
sub
add
adc
fs
xchg
into
jmp
adc
repnz
outsb
cli
sahf
aam
xchg
and
jo
in
sahf
mov
inc
in
sub
jmp
lcall
push
test
jecxz
push
int3
pop
xlat
push
clc
xchg
aas
pop
inc
pop
cmc
cli
cmp
sbb
mov
inc
and
dec
xchg
loop
xchg
dec
push
sbbb
ds
ljmp
pop
std
xchg
jmp
mov
addb
stos
inc
jecxz
ds
into
fildl
mov
movsl
sahf
mov
clc
pop
ret
fstl
ds
inc
xor
js
fimuls
jne
mov
ljmp
aad
subl
insb
pop
lea
pop
sbbl
dec
xor
cmc
mov
ljmp
sti
movsb
push
jb
inc
mov
jmp
push
insb
rclb
adc
jl
cmpsb
xchg
mov
mov
adc
and
enter
test
cmp
lahf
xchg
aam
or
and
loope
xor
out
xchg
dec
mov
xor
daa
shlb
fwait
ds
xchg
ja
std
cmp
sbb
icebp
andw
jbe
xchg
pop
and
jnp
test
inc
sbb
shrb
out
and
push
cmpsl
lret
lods
cltd
mov
dec
sahf
xor
inc
ds
xchg
mov
clc
xor
arpl
js
push
xchg
ret
push
xchg
test
dec
cwtl
jno
in
cmp
or
and
cmp
adc
nop
xchg
mov
lahf
cli
icebp
add
scas
leave
fisubl
leave
xor
push
mov
stos
leave
cmp
xor
jne
mov
adc
push
push
or
push
xor
sub
sub
aaa
mov
enter
test
loop
call
repz
fmul
rclb
shrl
pop
scas
mov
out
jne
add
mov
arpl
mov
dec
sub
jns
push
or
dec
ljmp
xchg
lahf
sbb
adc
xor
xchg
mov
test
or
mov
addb
push
dec
xorb
ljmp
test
cltd
mov
out
in
jne
cmp
jp
int
out
mov
cltd
mov
rcl
es
mov
and
loopne
xchg
jae
xchg
and
mov
cmp
nop
enter
xchg
xor
adc
neg
sub
jecxz
and
sbb
sti
nop
or
push
mov
lahf
addl
sub
std
aam
les
sub
or
aaa
aam
dec
arpl
cmp
inc
lods
xlat
cmp
xor
ss
mov
mov
jmp
stc
icebp
jge
lret
push
cmpsl
outsb
fs
sub
loopne
xor
and
lahf
popf
lcall
push
adc
aad
insl
push
iret
and
sbbl
repz
add
adc
jle
xchg
rcrb
adcl
jl
mov
leave
add
cmp
in
xlat
and
pop
cmc
mov
shr
and
fbld
add
cmp
pop
cwtl
cld
cmp
enter
das
mov
movsl
adc
dec
jmp
cmpsb
out
jmp
xchg
sbb
adc
xchg
mov
cmp
or
xchg
scas
sub
popa
dec
jp
ljmp
jmp
in
cwtl
data16
sbb
test
mov
mov
fxch
ja
jbe
pushf
push
add
cli
push
jnp
subl
mov
cli
push
dec
aam
mov
mov
push
mov
xorl
adc
insb
sub
inc
inc
xchg
add
pop
pop
or
mov
sbb
jle
loopne
enter
test
lret
jl
inc
aam
mov
inc
outsb
add
cs
pop
pop
out
ficomps
adc
inc
fcmovnu
hlt
ret
popa
mov
and
add
in
or
push
sub
sbb
or
fidivl
imul
lcall
enter
xor
bound
scas
mov
cmc
xor
std
xchg
push
pop
repz
and
inc
pop
dec
or
pop
lcall
adc
data16
xchg
pop
js
lods
lret
jns
lods
int3
icebp
cmp
icebp
mov
repz
xorl
pop
inc
inc
add
jne
adc
and
imul
hlt
mov
vrsqrtps
loope
sar
call
rorb
jae
adc
les
inc
xchg
inc
rcl
imul
mov
cmpsl
cmp
inc
add
lahf
hlt
sub
mov
in
dec
das
cmp
mov
xor
test
mov
scas
adc
fs
cmp
or
adcl
adc
subl
xchg
outsb
into
push
add
pop
cmpsl
decb
lods
jae
arpl
fisttpl
into
pop
roll
call
add
dec
mov
inc
scas
cmp
daa
in
jge
inc
std
cmp
cmp
push
daa
sbb
mov
push
pop
fs
cld
push
jae
jns
jnp
cli
jnp
aam
or
int
and
and
cmp
lock
pop
sti
push
mov
clc
loopne
sub
fdivrl
or
addr16
push
xchg
add
outsb
les
in
enter
fcmovbe
insb
push
or
loop
iret
sub
jmp
cmc
and
out
mov
mov
push
and
aaa
mov
out
lret
xchg
fnsave
cmp
clc
or
cmp
mov
aam
lahf
mov
mov
pop
gs
fsubrl
aam
sbb
pop
xchg
cs
mov
and
mov
jae
push
mov
enter
mov
mov
repnz
add
gs
xchg
repz
call
aam
outsl
mov
hlt
ret
mov
popf
jg
cmp
cs
fcom
xorb
enter
and
mov
sbb
leave
jbe
dec
cmp
jns
xchg
inc
dec
push
mov
sub
jbe
movsl
cwtl
pop
fsubl
jge
fs
and
loop
push
out
aad
loope
and
xlat
or
mov
pop
jmp
mov
popf
nop
pop
fwait
out
sbb
jnp
hlt
jbe
adc
sbb
or
cli
xor
inc
faddl
icebp
jle
insl
dec
adc
pop
mov
sub
xor
jbe
test
push
pusha
lock
aaa
mov
hlt
je
shrb
cmp
xchg
jno
jbe
xor
pop
mov
daa
xor
pop
out
mov
mov
xchg
inc
push
test
inc
sbb
outsb
jecxz
aas
push
repnz
cmp
sub
jmp
inc
cmp
inc
pop
call
push
data16
sub
out
adc
movsb
xlat
push
sbb
imul
icebp
add
push
ja
repz
dec
jecxz
jno
jo
adc
test
in
pop
popf
and
and
ret
dec
lods
jo
pop
and
and
inc
inc
sbb
xor
add
xor
pop
xor
sahf
adc
or
shr
xor
mov
outsl
add
xchg
call
mov
not
js
repz
into
jge
fisttps
dec
sub
sbb
out
xlat
je
scas
test
inc
cltd
and
xchg
fdivs
les
xor
mov
ja
push
dec
push
pop
or
mov
jno
cli
xchg
aam
or
push
loope
push
or
add
pop
adc
lods
test
add
sbb
xchg
in
or
dec
inc
add
arpl
pop
pusha
add
std
addr16
lahf
jnp
sahf
mov
mov
mov
movsb
jle
aas
xor
daa
lret
mov
sahf
pop
out
add
push
les
jb
pop
popa
out
testb
mov
popa
std
lods
dec
pop
aas
inc
cmp
xchg
scas
mov
and
push
mov
push
cwtl
es
sahf
out
popf
pushf
out
adc
aad
mov
aam
push
adcl
mov
icebp
sub
lret
push
out
daa
xor
imul
jle
jbe
push
or
pop
out
ljmp
adc
insl
mov
push
lea
xchg
xchg
xor
and
lods
xorl
ret
sbb
sbb
dec
cmpsl
pop
out
xor
pop
movsl
int
lahf
jge
icebp
in
pop
or
pop
data16
ret
popf
jae
ja
out
pusha
ret
das
pusha
icebp
and
mov
sahf
les
and
aaa
push
mov
adc
or
xchg
dec
jns
push
fs
test
dec
pop
in
push
aas
lret
sub
cmp
mov
out
mov
adc
stos
jns
scas
out
sahf
daa
and
xor
xchg
cmp
shll
stos
sub
sub
inc
inc
ss
sti
xor
cmp
rorb
mov
inc
test
decb
inc
sbb
cld
inc
push
repnz
aad
stos
lods
pop
incl
test
adc
and
pop
out
mov
jo
add
fwait
cmp
inc
cmp
xor
ds
or
jbe
push
sub
das
lock
inc
loope
and
add
jg
enter
sti
adc
std
pop
cld
jge
adc
ret
jns
loopne
mov
jg
clc
sti
mov
stc
sbb
test
pop
add
repz
dec
jbe
in
xchg
xor
mov
sub
mov
or
pop
shlb
pop
mov
sbb
outsl
pusha
mov
insl
inc
test
inc
call
and
mov
das
dec
ret
dec
shrl
cmp
jmp
rol
push
jecxz
pop
lea
add
mov
xchg
into
imul
jns
jmp
in
out
test
cmp
clc
adc
push
out
jns
push
push
xchg
scas
into
out
sub
in
pushf
ror
add
data16
jmp
adcb
sub
adc
je
mov
adc
imul
sti
fidivs
call
loope
pop
sub
je
out
sub
in
sub
mov
add
icebp
jge
test
mov
sahf
jge
aaa
add
inc
jecxz
pop
pushfw
push
xchg
push
push
add
out
and
inc
addr16
push
lea
mov
pusha
cmp
outsl
mov
inc
jne
mov
xchg
ljmp
test
adc
repz
pop
ret
popf
mov
addr16
add
into
hlt
mov
leave
pop
or
stc
iret
cld
negb
aas
repnz
mov
and
insl
je
xchg
push
jnp
out
das
inc
pop
ja
inc
ds
mov
cli
shrb
cmp
sti
loopne
inc
xor
rcrb
xchg
lods
dec
arpl
jle
cmp
repz
mov
xlat
out
notl
scas
mov
xchg
outsl
lods
push
jmp
sti
fmull
push
push
daa
ljmp
dec
mov
jne
stos
pop
or
sub
sbb
sbb
pusha
adc
leave
dec
or
sti
push
jge
xchg
bound
dec
xchg
mov
fwait
mov
inc
xor
or
or
and
jbe
push
adc
scas
sub
mov
or
jo
cmp
jmp
dec
cmp
ss
setns
hlt
cwtl
hlt
fisubrl
ficoml
jecxz
pop
test
adc
into
ret
leave
inc
mov
rcr
mov
mov
jbe
cmp
mull
ljmp
adc
xor
flds
outsb
aaa
and
test
imul
add
nop
ja
flds
cmp
repnz
pusha
ds
and
addr16
out
pushf
lahf
loopne
and
adc
and
adc
and
and
mov
into
xor
mov
cmp
add
pop
shrb
sahf
cs
adc
push
int3
push
push
mov
imull
push
popa
dec
pop
out
add
dec
xchg
mov
inc
orl
jle,pn
test
push
aad
lret
dec
daa
add
repnz
xor
subb
adc
rorl
iret
test
jmp
nop
ret
cmc
jbe
cli
pop
jno
fwait
cltd
sub
scas
xchg
jge
cwtl
inc
hlt
pop
or
cmc
jge
movsl
addr16
sahf
push
xchg
cmp
mov
sbb
cld
lds
xchg
xor
adcl
mov
stos
or
push
nop
pop
mov
jmp
mov
pusha
mov
subb
stc
inc
adc
cld
ret
movl
pop
dec
aas
mov
je
repz
add
fisttpll
aaa
cltd
inc
push
lods
cltd
push
jecxz
xchg
xchg
cmp
mov
xchg
sub
cmpsb
push
in
sub
xchg
mov
inc
test
in
ret
loopne
fimuls
repnz
in
dec
dec
inc
sub
and
mov
sub
sub
cmp
mov
dec
fsts
js
jg
das
adc
or
aaa
enter
dec
jns
mov
push
arpl
sub
hlt
movsl
xor
sub
xor
sub
lret
mov
jg
or
fs
sub
clc
nop
xor
jge
jle
sub
push
push
jmp
pop
adc
sbb
in
fists
fstpl
into
push
ljmp
or
insb
mov
add
cli
repnz
ret
cmpsl
dec
inc
adc
lea
cmp
jecxz
mov
aam
inc
mov
out
xor
sbb
outsb
jb
ret
push
es
cmp
ret
xor
or
incl
idiv
pop
dec
dec
sarb
ffreep
in
in
lods
jb
pushw
fwait
in
mov
test
in
sbb
pop
movsb
jmp
sar
adc
lcall
btc
out
pop
stos
mov
sahf
fldl
mov
out
mov
scas
mov
js
cmp
xor
and
cmova
pusha
mov
inc
aam
xchg
mov
cwtl
cs
push
dec
int
fnstsw
test
outsl
mov
fsincos
loope
popl
fiadds
mov
sub
adc
pop
ljmp
xlat
fcmovnbe
fs
xchg
cmc
ret
lds
dec
cs
fstpl
jbe
mov
and
cmpsb
pop
mov
inc
js
call
test
lock
bound
cli
add
aad
jae
mov
sbb
push
jae
adc
cmp
in
mov
scas
xchg
in
push
inc
les
jmp
mov
jns
sub
je
mov
outsb
mov
inc
sarl
fisttpl
imul
adc
subb
ja
pop
loopne
filds
add
fsubp
push
addl
jnp
mov
or
arpl
into
pop
shll
mov
lret
sbb
movsb
or
cltd
inc
mov
inc
out
fs
cmp
fcoms
mov
pop
cmp
mov
fs
inc
cwtl
and
xchg
nop
sub
and
lcall
mov
jae
js
add
xchg
mov
or
dec
dec
adc
ja
pushf
int
push
lea
insb
pusha
cmp
cmpsb
jae
jnp
mov
jb
pop
aaa
dec
sbb
push
int3
cmp
lret
insl
or
mov
in
push
addr16
test
jmp
lret
std
cmp
and
and
bnd
shlb
int3
shll
mov
sti
out
push
mov
push
jle
das
sub
cmc
test
sub
pop
cmpsb
cmp
add
ret
pop
daa
in
add
sbb
mov
xchg
andl
call
dec
dec
jnp
call
xchg
arpl
inc
pusha
int
adc
jl
and
ss
subl
inc
pop
mov
sahf
mov
into
test
loopne
add
pop
pop
xchg
and
callw
in
mov
mov
andb
jle
aam
dec
icebp
or
nop
fsubrl
outsb
or
jl
jno
pop
enter
jno
enter
inc
mov
pop
pusha
sarl
sub
xor
in
mov
mov
out
mov
fisttps
mov
or
out
iret
adc
fcomps
xchg
lods
sbb
dec
xchg
sahf
lock
mov
inc
imul
mov
sub
in
adc
stc
rolb
jge
jg
fisttpl
xchg
jge
sbb
push
lods
outsb
inc
les
ja
mov
add
and
mov
outsb
xchg
jmp
test
xchg
lahf
jnp
push
enter
loopne
dec
push
subb
js
jnp
popf
add
lock
addr16
and
and
rorb
jns
stos
sti
iret
jp
popa
ds
adc
popa
pcmpeqb
pop
mov
jae
insl
pop
fimull
es
sub
cmp
sbb
sub
repz
xchg
dec
add
lret
jle
int3
inc
repz
divl
sbb
mov
mov
aad
cmp
sbbl
xchg
hlt
xchg
mov
cltd
jl
dec
js
push
aas
push
pop
mov
js
out
inc
adc
lea
cli
cltd
jp
sbb
xor
mov
into
add
lahf
hlt
add
add
inc
cli
xchg
bound
loopne
insl
and
cltd
and
mov
xchg
push
pop
rorb
pop
mov
dec
adc
xor
and
dec
push
sahf
lret
add
push
mov
repz
in
pop
cmp
out
mov
jb
cmpsl
into
pop
pop
test
inc
out
sbb
lcall
call
ficoml
sub
jge
sub
xchg
loopne
sub
hlt
in
fiaddl
sbb
movsb
push
call
pushf
ljmp
xchg
repnz
or
cmp
xchg
mov
push
andb
fisttpl
imul
push
loop
arpl
and
sbb
loopne
iret
push
mov
xor
and
add
rorb
popf
push
or
inc
das
or
cmpl
xchg
dec
sub
jb
ja
mov
lcall
or
adc
repnz
loopne
push
inc
jp
jo
testl
add
jnp
inc
test
shlb
fistpll
shrb
pushf
out
mov
ret
iret
sbb
daa
out
sbb
cmp
add
xlat
mov
es
cmp
inc
add
lods
cmc
imul
and
mov
pop
in
cli
in
push
jecxz
or
inc
bound
and
cmp
dec
wrmsr
jg
sub
jmp
mov
adc
sbb
lods
pop
xchg
pop
xor
mov
loopne
les
popa
and
repz
inc
dec
call
ds
adc
loop
xchg
jbe
cmp
inc
jae
sbb
dec
or
sbb
xchg
and
dec
mov
xchg
sub
cltd
sub
sub
xchg
enter
cmp
ret
sub
mov
shl
jg
inc
clc
mov
lock
loope
jle
scas
sar
clc
jecxz
xchg
clc
jg
mov
jg
ljmp
cmp
lahf
sarb
shll
pop
inc
lds
xchg
andb
rol
loope
pop
mov
ja
fwait
ret
lods
cmpsl
insl
and
addr16
and
aaa
jmp
pusha
mov
adc
push
scas
xor
or
add
add
inc
jae
adc
mov
add
inc
inc
dec
subl
or
push
ss
push
aad
aas
xor
xchg
lahf
gs
iret
dec
std
mov
dec
pop
stos
cmp
addr16
xchg
lods
imul
fildll
aas
sbb
arpl
aaa
lret
push
stc
imul
repnz
dec
jmp
stc
imul
jle
push
lret
dec
xlat
sub
push
sub
cmpsl
addr16
lahf
mov
fs
sub
loope
push
push
sub
adc
mov
in
mov
xor
scas
lret
push
ja
in
lds
mov
mov
iret
aad
pop
iret
shr
inc
dec
daa
icebp
pop
push
cwtl
aaa
push
pop
je
and
add
shrb
mov
add
push
or
addl
add
inc
mov
fiadds
popf
and
out
mov
push
test
shrb
sbb
jns
loop
lret
aam
push
data16
push
push
cmpsb
or
add
inc
popf
andb
aam
push
add
jp
lea
test
rcrb
cli
add
mov
add
js
sub
mov
repnz
test
push
scas
inc
test
push
add
pop
push
dec
add
or
nop
adc
mov
ljmp
add
push
cmpsb
add
push
data16
push
cs
shlb
add
lea
int
mov
mov
xor
push
popf
inc
inc
inc
jmp
pop
add
inc
or
lods
push
test
nop
into
outsl
adc
rorb
stos
add
xor
sub
jb
push
add
push
adcb
mov
push
test
add
add
or
add
jae
stos
pop
xor
mov
aam
enter
mov
xor
mov
push
xor
mov
push
xor
mov
ljmp
adc
add
aam
push
dec
add
add
mov
or
andl
add
add
push
add
xchg
addb
pop
cld
add
das
shr
fs
aaa
push
push
scas
inc
jecxz
cmc
or
nop
adc
mov
ljmp
cmpsb
add
push
data16
push
cs
push
mov
or
shlb
out
stos
pop
push
int
mov
pop
adc
and
or
mov
filds
jmp
scas
add
inc
mov
lods
adc
mov
push
pop
sub
adcl
add
adc
adc
adc
mov
aad
mov
push
xchg
inc
jne
push
or
inc
mov
outsl
and
sub
add
or
or
inc
int
out
aam
push
or
xchg
hlt
imul
dec
cld
cmp
or
jns
scas
or
clc
sub
mov
mov
lcall
cmc
add
sub
cmp
pop
nop
out
add
mov
dec
xchg
push
add
clc
jno
test
mov
push
mov
lea
orb
mov
sarb
lods
xchg
mov
aad
mov
das
pop
lds
mov
and
mov
xor
sbb
pop
push
ret
pusha
add
xchg
jne
pop
push
inc
add
je
pop
cmp
into
mov
scas
inc
aaa
test
jno
and
int
out
lret
add
inc
mov
xchg
inc
push
sahf
jecxz
in
mov
cmpl
push
mov
movsb
add
mov
js
cmpsl
inc
xor
shll
push
mov
mov
push
or
sub
sub
or
push
push
dec
add
inc
inc
sbb
inc
push
add
cmp
rorb
imul
push
pop
and
andl
inc
lret
add
add
and
pop
inc
xor
and
adcl
inc
inc
adc
cli
outsl
adc
rolb
subl
hlt
cmc
sbb
xchg
jne
pop
nop
les
mov
sbb
les
lock
inc
rorb
add
outsl
test
decb
out
pop
inc
pop
in
lahf
lock
inc
xor
cmp
cwtl
xchg
jl
ret
push
mov
aad
push
sbb
xor
push
out
push
loop
or
shl
fcoml
jnp
jo
clc
bound
push
mov
das
mov
ud2
je
outsl
ja
xchg
sarl
dec
packsswb
or
cmp
jb
jo
ret
cs
setae
adc
mov
ljmp
stos
mov
subb
std
xor
loope
xchg
pop
into
cmp
cmpsl
repz
jnp
push
adc
or
roll
cli
stos
cmpb
mov
and
adc
loopne
sbb
pop
dec
pop
push
sbb
repnz
cmp
push
fnsave
lret
sbb
mov
dec
outsl
pop
lret
stos
in
int
call
ret
je
cli
into
xor
push
mov
mov
in
fiadds
fs
sub
test
popa
jo
dec
dec
movsl
mov
sbb
fcompl
mov
add
jle
cwtl
mov
in
outsb
mov
aad
inc
cmp
jg
xlat
dec
xchg
pop
mov
enter
loope
xlat
xchg
xor
scas
mov
movsb
jecxz
mov
mov
rcrb
rol
xchg
movsl
pop
pop
adc
pop
push
icebp
add
in
push
push
sub
sub
dec
xchg
pop
jno
pop
dec
push
cs
jecxz
scas
sub
lds
jnp
fcomps
adc
sub
pop
xchg
sbb
pop
or
mov
mov
jns
rorb
sub
adc
std
out
pop
sub
or
mov
popf
and
addr16
pop
mov
movsl
int3
pop
or
pop
lret
jno
ret
cmpsb
call
in
inc
popa
int3
adc
and
bnd
push
aam
sub
mov
lds
jns
addr16
jg
jne
xor
fisubs
jg
push
push
lahf
pop
push
testl
jns
fcomp
jmp
out
shll
mov
xor
push
xchg
fimull
jno
rol
cli
push
xchg
add
je
movsb
and
mov
inc
jne
ret
fs
cmpsl
shll
sub
cmp
loope
dec
fadds
mov
jecxz
shr
mov
mov
or
sbb
fs
and
pusha
mov
test
or
adc
aam
push
mov
in
dec
push
cs
adc
ss
inc
jle
pop
or
icebp
add
sahf
jmp
outsl
imul
lods
insb
mov
popf
and
subl
pusha
rcrl
or
mov
xchg
inc
lods
insl
arpl
xorb
imul
jnp
cmp
repnz
mov
je
aad
loop
and
add
push
cmp
jb
into
adc
cli
adc
sahf
pop
xor
cltd
jmp
out
add
lea
es
test
mov
loopne
mov
adc
pop
pop
cmc
xor
add
ret
cmp
ja
inc
dec
leave
hlt
in
mov
cmp
jge
loope
mov
leave
dec
jno
incb
les
jmp
testl
or
pusha
pop
test
mov
push
popf
jmp
push
jl
lret
sahf
push
xor
int
rep
jae
ffreep
fdivl
jo
jg
xchg
or
les
shrl
daa
mov
rorb
testb
das
imul
lods
aam
sti
sub
dec
aaa
inc
sbb
insb
inc
mov
or
enterw
jne
cli
shll
and
call
paddusb
jp
insb
outsl
sub
mov
lock
dec
pop
jp
aam
pop
add
leave
jb
add
fnstenv
fdivs
lcall
stos
es
das
fimull
pop
sub
call
ss
push
lods
xor
fcom
aad
in
fwait
stc
ficoml
sbb
inc
xchg
xor
mov
or
mov
push
inc
xchg
jno
sub
xchg
sarl
mov
adc
aad
pop
mov
je
xor
sbb
das
insl
jae
lock
mov
adc
xor
loope
sbb
mov
mov
pop
nop
add
jg
test
inc
xchg
xor
inc
inc
add
lock
cmp
imul
xchg
xor
lea
into
xlat
out
pop
int
int3
cmp
push
mov
mov
sbb
adc
aas
test
xor
inc
aad
in
mov
je
sub
sbb
ljmp
leave
jns
fbld
pop
jae
mov
xor
xchg
adc
dec
je
mov
push
aad
les
sbb
push
out
mov
jecxz
jno
adc
adc
xor
mov
insl
in
cmp
sete
fucomi
or
cmp
xchg
and
sahf
and
and
inc
loope
in
or
push
ss
xor
pop
jns
cltd
aam
test
mov
cmp
or
std
adc
es
mov
pop
or
outsl
or
scas
and
jge
dec
fcoml
sub
push
repz
adc
sub
gs
ret
sbb
xchg
mov
jp
lret
mov
push
in
and
cmp
pop
stos
lock
sbb
pushf
scas
pop
mov
lea
into
mov
js
inc
int3
push
xor
lcall
push
lods
jns
daa
or
inc
imul
dec
lcall
mov
fdivrl
and
inc
rcrl
fiadds
pop
pop
xor
xor
lods
js
push
sti
pusha
arpl
adcb
loope
mov
pusha
test
std
pop
rolb
js
sbb
daa
pop
mov
push
mov
adc
cmp
and
sbb
das
sub
rcll
dec
sbb
push
cmc
ror
clc
pop
sbb
mov
lods
jecxz
mov
jo
nop
adc
ret
cmp
enter
pushf
pop
sahf
ret
cmp
mov
leave
xor
sbb
jmp
push
push
cwtl
push
lods
fldt
lods
shll
xor
jge
stos
jns
jne
stc
call
arpl
adc
xor
insb
xchg
aas
cmp
inc
push
rep
pop
inc
out
add
cli
sub
xor
test
stos
ljmp
xchg
stc
lret
outsl
push
cmc
out
cwtl
jno
add
sub
add
ja
add
cmp
int3
sbb
adc
aad
popf
jecxz
loope
lods
outsb
cwtl
and
add
inc
in
push
ljmp
insl
loope
lea
xchg
ss
ljmp
test
insl
xchg
inc
sbb
lea
inc
xor
xlat
hlt
inc
rcrb
xorl
inc
and
cmp
sbb
test
cmp
das
xor
or
loope
pop
xlat
jge
rolb
pop
in
fists
enter
sbb
inc
ljmp
sbb
xchg
push
into
aaa
outsl
or
or
hlt
out
dec
setns
mov
stos
mov
lahf
inc
inc
mov
mov
push
push
adc
testl
push
jmp
lea
frstor
sbb
inc
cmp
push
pop
fsubs
test
xlat
mov
cmc
xor
mov
mov
stos
mulb
gs
push
mul
push
xchg
push
and
outsl
xchg
sub
addr16
adc
lock
jnp
jp
int
negb
cltd
filds
popf
fistps
out
testb
push
out
mov
out
in
cmp
jg
sahf
enter
psraw
xchg
xchg
adc
rclb
jae
imul
inc
in
mov
xchg
fs
stos
aam
push
insb
shlb
pushf
aam
out
sbb
or
cmp
ret
pushf
xchg
mov
popa
cli
cltd
jecxz
and
xchg
mul
mov
popf
test
shll
and
stc
jne
ror
sahf
insl
push
fwait
in
or
jecxz
repnz
mov
cmpsb
add
inc
pop
popf
stos
ret
int
mov
cwtl
je
stc
frstor
mov
inc
jg
push
jnp
push
sbb
pop
insl
imul
inc
cmp
out
xchg
loop
in
rcll
lds
mov
sub
xlat
cmpsl
sub
adc
pop
and
adc
nop
mov
adc
pusha
push
and
xchg
sbb
data16
jg
jae
xchg
mov
cmp
fimuls
js
sbb
mov
lret
cs
ror
cmc
loope
sub
xchg
repz
addr16
pushf
je
fdivr
pop
add
jns
jbe
insb
cld
xlat
loope
pop
call
sub
gs
loopne
xchg
cmpb
ds
clc
mov
int3
add
sub
dec
jo
xchg
mov
sub
and
aam
sbb
xchg
sub
xchg
pop
rclb
mov
bound
aas
and
or
cmp
xor
cmp
pop
inc
fisttpl
andl
and
sbb
inc
cmp
mov
push
pop
xor
cmpsb
cmp
jns
mov
xchg
jne
pop
je
lret
push
xor
jnp
lahf
mov
jns
or
shr
mov
dec
mov
inc
or
out
add
dec
repz
outsl
inc
lcall
cmp
and
in
lds
out
xor
inc
mov
mov
arpl
and
lret
hlt
sbb
mov
stc
mov
xlat
mov
mov
stos
mov
mov
jmp
mov
sbb
mov
sbb
repnz
mov
cmpps
mov
shr
mov
dec
fisttpll
or
dec
subb
cmp
arpl
mov
movsl
pusha
mov
fisttps
dec
cmc
out
jmp
adc
jbe
je
cli
mov
jle
and
sbb
ret
int3
mov
loopne
and
fsubr
clc
aas
enter
mov
jg
mov
out
sub
push
sub
pop
les
and
push
hlt
mov
es
or
xlat
movsb
setl
xor
jge
pop
sti
jne
and
inc
or
jle
adc
and
imul
pop
mov
xor
push
dec
in
rcr
mov
xor
je
testb
ljmp
sbb
push
adc
movsl
fsubrs
adc
mov
cmp
mov
imul
xor
insb
inc
sub
lods
inc
mov
sbb
push
int
pop
and
mov
ds
add
aam
popa
cmpsb
imulb
lcall
loopne
mov
int3
xlat
fcmovb
in
cmp
or
jo
dec
jmp
cmc
mov
lret
aad
cmpsb
xchg
loopne
xchg
cltd
add
rcrl
cltd
jl
mov
into
les
leave
cmp
jmp
cmpsb
test
mov
xor
insb
outsb
xchg
mov
bswap
lods
leave
and
cmp
pop
and
lret
int3
enter
sbb
push
or
ret
shrl
inc
inc
cmpb
addb
jle
dec
pop
xchg
test
pop
sarl
inc
sbb
aaa
inc
cmpsl
sbb
into
int
cmp
and
pusha
ret
cmp
jae
push
xchg
sti
cmp
inc
shll
fcoms
inc
lcall
cmp
xor
inc
jo
mov
ljmp
fxch
mov
in
jmp
testl
add
rorb
shrl
or
mov
pusha
sub
sub
shrl
sub
pop
push
scas
mov
push
inc
pop
std
jmp
not
inc
cmpsb
pop
es
mov
ret
mov
lock
sub
sub
loopne
out
sbb
enter
push
mov
dec
and
jns
mov
push
ret
push
cwtl
imul
fimuls
mov
stos
incl
cmp
fsts
sub
inc
mov
and
imul
in
icebp
xlat
leave
push
je
out
cmp
jbe
pop
push
loopne
or
out
lock
test
ljmp
jnp
adc
add
dec
lods
call
adcb
push
and
jg
test
inc
rsm
div
scas
push
insb
ret
push
popa
popf
lea
cmp
inc
scas
cmpsb
sub
fldt
add
inc
or
xchg
loop
sti
inc
jp
mov
ljmp
push
jg
test
pop
pop
mov
and
cmp
xchg
mov
sub
ljmp
shlb
fildll
jle
cmpsl
push
xlat
shll
adc
or
roll
dec
mov
out
loopne
sbb
jne
sbb
or
jbe
outsb
dec
js
loopne
sbb
or
mov
es
mov
push
js
push
jle
jae
shl
movsl
testl
aaa
ljmp
jecxz
js
push
ss
repz
xor
repz
loopne
cwtl
loopne
sbb
jne
dec
hlt
pushf
lret
jecxz
jb
pushl
or
int3
les
xchg
fdivs
sbb
les
mov
mov
adcl
lock
mov
mov
cmc
push
stos
enter
push
lods
nop
cmp
push
mov
sarb
fadds
sub
shlb
mov
in
add
mov
cmpsb
lahf
push
jb
andl
dec
pop
insb
inc
adc
jmp
dec
out
iret
lock
out
leave
dec
out
pop
in
xchg
int
add
cmp
xchg
mov
dec
or
loop
lcall
call
or
and
push
adcl
cmp
xor
xchg
and
cwtl
sub
hlt
sbb
fiaddl
das
adc
pusha
rorl
sbbl
mov
pusha
scas
or
push
stos
jne
outsl
stc
pusha
ds
and
aam
pop
insb
popa
sub
imul
push
sub
repnz
cmp
cli
hlt
loopne
dec
xor
nop
mov
fsubs
inc
in
aad
test
shrb
xchg
ret
pusha
loop
pop
xor
sub
dec
xchg
sbbl
incl
popa
outsl
aam
and
aaa
mov
mov
sub
js
add
idivl
sbb
bound
fldcw
sti
popa
fistl
jno
jmp
inc
loop
cmp
inc
inc
jge
mov
add
sbb
cmpb
ret
lods
js
test
push
mov
hlt
bound
jo
addb
fsubr
jo
sti
out
lahf
xchg
ds
pop
fsts
xchg
xchg
test
mov
jnp
shrb
inc
or
dec
aam
cvtdq2ps
stos
adc
mov
and
push
mov
mov
jae
arpl
lods
hlt
ljmp
pop
pusha
pop
adc
dec
jnp
mov
addr16
mov
lahf
push
std
mov
ds
ds
xlat
sbb
ret
orl
jno
push
call
dec
std
mov
jo
stc
daa
loopne
stc
cmp
xchg
add
int
pushf
lds
ret
aaa
data16
sbb
cmp
adc
je
fistpl
shl
lcall
sbb
icebp
push
clc
xchg
inc
adc
aam
jle
xor
sbb
lods
jno
loop
jnp
jns
mov
mov
stos
outsl
pop
outsl
in
sub
cwtl
jo
mov
jp
pop
push
mov
in
jb
lahf
lahf
cmp
pop
and
xor
mov
push
sbb
rcl
ror
dec
pop
test
mov
mov
fcmovb
scas
mov
add
je
aad
call
dec
into
inc
aam
je
dec
enter
jp
sub
test
scas
mov
sarl
sub
push
jbe
or
je
adc
push
jle
sahf
addb
sbb
cli
rclb
jle
adc
leave
mov
add
mov
scas
out
aam
popa
test
ds
in
cmp
jno
scas
stc
repz
popa
mov
mov
jge
scas
pop
push
sbb
mov
inc
push
rorb
mov
inc
ret
sbb
sub
leave
jne
add
adc
and
mov
popl
cmp
dec
adc
fld
das
and
pusha
lret
stos
popa
inc
and
and
test
mov
lock
out
mov
adc
lea
aas
mov
or
add
subb
lds
jge
test
mov
jb
imull
mov
mov
cmp
mov
jb
adc
mov
mov
inc
inc
in
lea
lret
and
test
inc
lods
lds
bound
jecxz
inc
loop
inc
imul
rclb
lods
icebp
fnstsw
inc
insl
cwtl
mov
xchg
xor
pushf
bound
or
repz
xchg
lcall
dec
mov
add
loope
nop
xchg
sub
or
sub
inc
fcmovne
fcoml
ja
cmc
test
jmp
and
adc
sti
mov
or
rorb
adc
mov
add
and
xchg
ss
in
sbb
inc
xor
dec
sub
add
cmp
mov
icebp
call
sub
sbb
roll
fchs
sbb
sahf
movsl
push
mov
test
cmc
outsl
pushf
or
call
inc
cmp
mov
movl
inc
push
mov
jns
push
lods
outsl
insl
das
mov
and
hlt
cmc
and
stos
dec
lea
iret
jp
mov
nop
push
sbb
loope
ss
inc
mov
jno
add
loope
std
sahf
rorl
js
gs
subl
lret
pmaddwd
add
dec
or
and
sbb
xor
mov
enter
aad
sarl
pusha
push
out
adc
dec
dec
lret
inc
push
or
mov
xchg
outsb
lcall
in
xlat
sbb
aam
ret
sbb
bound
jno
xchg
dec
lods
cmc
lahf
or
test
mov
std
into
push
mov
dec
cli
sbb
xor
mov
aad
int
imul
dec
pop
mov
pop
pop
push
jne
shl
jg
in
in
les
aas
mov
stos
mov
push
inc
push
push
or
test
adc
or
test
inc
xchg
adc
pop
mov
jae
dec
add
fcmovnbe
sub
iret
xlat
inc
or
ljmp
aad
scas
xlat
imul
cmpb
push
pop
jg
ret
cmpsl
adc
rsqrtps
mov
test
test
movsb
insb
add
pop
push
pop
outsb
hlt
das
cmp
cmp
mov
push
inc
call
in
loop
or
xor
lcall
popf
jg
cmp
outsl
adc
and
adc
ss
pop
push
stos
add
pop
mov
and
push
loop
pop
mov
adc
jp
add
pop
mov
cmp
daa
loopne
add
sub
popa
mov
pop
xorl
adc
cwtl
inc
xor
scas
dec
ret
xchg
fucom
lret
add
inc
pop
mov
loope
nop
stos
fstpt
out
loop
testl
jl
out
in
test
dec
jg
mov
mov
mov
mov
mov
xor
lcall
test
or
sub
test
stc
andb
jl
push
getsec
sbb
xlat
mov
sbb
sbb
cld
ds
add
movsb
xchg
mov
push
xor
lds
lods
sbb
sbb
push
and
rorl
arpl
adc
iret
mov
add
jp
in
int
sarl
adc
mov
jo
mov
add
xchg
imull
mov
cmpsl
pop
mov
jecxz
cmc
push
cltd
ret
repz
cmp
jns
mov
sti
jb
xchg
adc
push
adc
mov
fsubl
scas
jp
jne
or
mov
cmpsl
shll
cmp
dec
sahf
mov
fidivrl
xchg
stc
test
adc
add
push
punpckhbw
loope
nop
lret
push
inc
icebp
insl
aaa
dec
mov
shrl
imulb
xor
scas
xor
bound
das
pop
jmp
push
xchg
mov
mov
es
mov
xor
dec
pop
inc
sbbl
inc
iret
lret
dec
fbld
mov
xchg
pop
lea
xor
aaa
popf
ror
icebp
mov
push
call
jl
mov
sbb
cmp
das
push
test
mov
nop
mov
imul
jle
mov
jmp
das
ficoml
push
xchg
lods
and
push
nop
stos
sti
addr16
lods
jns
push
rcrb
lods
sti
jb
stos
xchg
clc
clc
andb
pop
shlb
and
fldl
xchg
add
scas
dec
dec
push
int
pop
stos
inc
pop
out
add
sbb
dec
jecxz
iret
push
scas
mov
push
lods
ret
repnz
or
mov
lods
out
mov
hlt
icebp
pop
stc
sub
xchg
outsb
mov
dec
rcll
jp
cmp
cli
sbb
leave
cwtl
gs
pop
cld
nop
push
jg
test
push
dec
mov
imul
into
cmp
ljmp
fs
in
mov
mov
dec
hlt
mov
es
xchg
sub
inc
lea
or
push
gs
adcl
cwtl
pop
in
dec
lock
pop
pop
push
pop
scas
sahf
lock
add
mov
test
dec
cli
call
cmp
fidivl
jp
rcll
adc
mov
sbb
nop
jb
rorl
aam
xchg
in
pusha
mov
push
add
fwait
pushf
xchg
rorb
outsl
mov
sti
lock
push
repnz
inc
inc
cmp
sbb
add
cmp
mov
in
mov
mov
bound
movsb
or
xor
rclb
out
vpminub
and
scas
dec
int
les
pop
loope
mov
stos
repz
sub
mov
test
je
fbld
add
aad
dec
jne
pusha
roll
dec
and
mov
add
adc
xchg
inc
inc
fists
mov
movsb
push
in
inc
movsl
mov
sbb
mov
lea
in
push
pop
pop
dec
ret
cmp
mov
loop
mov
dec
pop
or
adc
mov
jp
adc
xchg
push
int3
fsubs
mov
push
hlt
mov
mov
cmpsb
jno
idivb
cmpsb
jo
mov
cmpsl
test
dec
js
cltd
pop
pop
imul
rcrb
mov
mov
int
rcrb
jne
and
xchg
int
jmp
lods
mov
lcall
lret
xchg
aad
clc
stos
push
jl
mov
nop
wbinvd
stos
das
pop
xlat
nop
xor
pop
out
icebp
lea
in
sbb
scas
incl
xchg
in
push
pop
in
inc
fwait
cltd
sub
das
pop
adc
and
mov
jl
adc
in
lods
fdivrs
push
lahf
xchg
mov
jecxz
popa
lods
clc
push
dec
ja
sbb
push
jg
cmp
pop
cmp
lods
cmpsl
push
pushf
cli
sti
adc
popa
xchg
je
imul
inc
and
jge
int3
hlt
inc
jecxz
imul
xor
mov
mov
shld
dec
out
clc
or
cmp
mov
push
mov
push
mov
int
cltd
lcall
addb
mov
mov
pop
xchg
and
inc
orb
hlt
sub
or
jge
add
jl
xchg
push
adcl
pop
xor
lahf
pop
hlt
repnz
pusha
stc
add
je
testb
testb
icebp
push
mov
mov
lahf
notl
scas
push
push
push
mov
adc
jb
std
add
sarl
pop
mov
js
daa
stos
cmp
lods
and
les
sub
sti
out
sub
mov
ja
sbb
cltd
push
jnp
add
or
inc
jbe
jmp
xchg
decl
popf
cltd
cmc
push
repz
mov
frstor
adc
xchg
fsubl
es
rolb
jge
xchg
movsb
sub
or
andl
lea
pop
scas
mov
je
fcmovb
mov
sahf
or
mov
mov
clc
cmc
test
jmp
push
xor
mov
in
sbb
notb
cmp
mov
sub
call
jmp
sub
push
and
je
add
adc
sti
mov
mov
pop
xchg
out
pop
jb
and
stos
pop
adc
push
pop
test
pusha
inc
mov
fs
mov
clc
fsqrt
shll
sahf
inc
std
cmp
dec
mov
lock
inc
hlt
jae
and
sbb
fcmovbe
add
adc
add
psraw
push
mov
sub
push
xchg
jmp
addr16
add
in
jae
or
in
ja
push
sahf
loop
divl
jo
jecxz
dec
hlt
cltd
fiaddl
mov
adc
mov
stc
mov
cmp
sbb
sbb
outsb
xchg
outsb
ret
jmp
mov
pop
out
or
int
mov
or
fstpt
push
jmp
xor
shrb
bound
dec
lret
stc
dec
sbb
jne
and
fidivrs
popa
or
dec
enter
jl
shll
popa
ljmp
pop
mov
mov
insb
mov
cwtl
sub
adc
ljmp
iret
flds
cld
push
and
and
xchg
mov
iret
adc
pop
or
mov
inc
xchg
sub
inc
addb
mov
clc
add
lds
mov
andb
dec
or
addr16
leave
push
inc
pop
mov
xchg
and
add
pop
or
adc
lods
cmp
xchg
insl
jl
out
aaa
test
pop
scas
mov
push
mov
mov
jo
dec
cmp
jo
in
cmp
repnz
pop
fldl2t
pop
dec
cmpsl
add
dec
pop
lods
sar
lods
and
je
jg
or
cmp
testb
lods
test
xchg
fidivrs
add
inc
fldcw
fisttpl
idivl
sbb
scas
test
movsl
sahf
clc
int
xor
jg
xor
cmp
ror
movsb
mov
mov
adc
dec
xor
dec
sbb
add
xor
cltd
dec
rorl
pop
ljmp
les
std
fmull
xor
ja
lret
mov
mov
cmpsb
arpl
mov
das
stos
cmp
mov
repnz
xchg
fisttps
mov
xor
xlat
cmc
sti
push
xor
jp
and
loop
xchg
movsl
imul
push
jmp
lcall
cmp
xor
xor
cmpsb
dec
ds
sbbl
fdivr
cs
mulb
jg
cli
lret
pushl
mov
test
jae
jecxz
jb
inc
mov
negl
cmpsb
jg
aas
cmpsl
addr16
scas
dec
mov
mov
pop
dec
in
pop
jmp
ds
sbb
dec
lods
in
repz
out
cmp
push
jecxz
out
xor
add
sahf
add
pop
sbb
adc
push
jl
jl
sub
mov
jo
jo
mov
sub
lret
fbld
pop
stos
rcl
mov
pop
add
inc
pop
mov
mov
mov
popf
push
cli
or
dec
dec
sti
insl
sbb
jmp
lahf
jp
cmpsl
adc
pop
sub
and
cli
sub
adc
into
xchg
int
iret
cmp
jp
cmpsb
lods
sbb
pop
scas
cmp
and
dec
push
and
mov
ds
scas
xchg
ja
push
mov
cmp
sbb
cwtl
imul
push
pop
pusha
push
add
dec
fs
ret
scas
out
push
adc
mov
in
sbb
push
or
mov
insl
sub
mov
mov
push
push
ss
shll
aam
inc
imul
mov
pop
fsubrs
cli
aad
ret
inc
fcompl
out
js
test
sbb
loope
sbb
push
lahf
mov
insb
mov
and
mov
dec
loopne
sti
pop
add
mov
push
inc
sub
jbe
rorb
addr16
pop
jle
xchg
call
jle
mov
ret
jmp
in
jge
in
stos
jl
sahf
aas
addl
add
add
ss
adc
xor
inc
dec
jecxz
mov
cs
or
cli
adc
fsubrs
sahf
fwait
mov
xchg
jbe
adc
aam
mov
popa
xchg
add
sbb
inc
push
dec
xor
lods
cmp
mov
push
mov
loopne
cld
fists
jbe
in
fincstp
jnp
mov
cmp
aam
push
cmpsl
dec
popf
xchg
out
lret
sbb
ret
into
xlat
jmp
lea
dec
mov
adc
rclb
add
xchg
rep
cs
es
aas
sbb
mov
pop
mov
or
js
mov
add
cmp
jns
jge
and
test
mull
push
sbb
cmp
aad
arpl
add
lea
or
in
and
mov
jae
pushf
jne
adc
aam
lds
and
fcos
lods
fwait
pop
rcrl
testl
pop
mov
add
mov
push
out
rcrb
mov
jmp
popa
mov
pop
imul
or
push
mov
idiv
ds
in
call
jmp
or
jbe
xchg
jnp
jg
dec
or
ret
adc
or
cltd
enter
sub
jg
add
xor
jae
js
repnz
divb
mov
pop
divl
lea
decb
cli
mov
ret
mov
push
or
and
imull
adcb
adc
add
adc
mov
and
fwait
pop
jg
xor
cmpsl
pop
mov
mov
push
fists
cmpsl
and
sbb
add
xchg
mov
and
inc
sub
mov
add
adcb
dec
mov
out
mov
push
fcmovu
out
fisubrs
je
or
mov
fmuls
imull
mov
aas
push
ss
pop
outsl
mov
and
test
adc
ficoms
addr16
mov
mov
cli
in
push
cmc
sahf
cmc
daa
mov
xor
repnz
jno
push
jne
out
imul
loop
popa
imul
push
and
cmc
inc
cmc
bound
movsb
xchg
push
pop
sub
fnsave
inc
scas
xchg
push
and
in
arpl
fdivrs
fscale
hlt
xor
mov
inc
push
insw
sbb
xor
repz
pop
mov
les
cld
shr
or
xor
cmp
push
pop
adc
test
sub
imul
lret
xor
test
sahf
loop
xor
sahf
push
pop
dec
ss
mov
dec
sub
cmpsl
mov
aas
stc
and
movsl
push
lds
xchg
lahf
cmp
inc
jae
pop
in
xchg
roll
sub
xchg
dec
lcall
sub
out
in
xchg
bound
push
inc
or
shll
in
je
jle
and
mov
sub
fisubl
call
dec
push
inc
fstpl
xlat
ret
xchg
into
les
push
and
and
insl
mov
lea
clc
inc
jnp
ja
add
cltd
cwtl
add
mov
mov
xor
stos
xchg
lahf
loopne
jmp
clc
out
push
mov
add
pop
cmp
int3
add
lcall
mov
lods
pop
and
fldl
in
pop
ret
mov
jp
jbe
mov
sbb
add
in
jb
call
xor
fs
repz
sub
pop
test
adc
sbb
lds
int3
or
xor
inc
aam
sti
xchg
sbb
jnp
push
dec
cli
cmpsl
inc
rol
inc
xchg
push
cmc
call
daa
sti
sbb
lret
stc
cmc
xchg
cmp
cmp
imul
sub
jne
loop
not
and
enterw
mov
push
inc
cmpsl
inc
add
push
andb
shr
mov
or
out
movsb
dec
call
inc
sbb
negb
cmp
push
mov
negl
push
daa
lcall
sub
enter
jne
pop
adc
cmp
mov
mov
mov
movsb
pop
push
xchg
sets
xchg
xchg
stc
mov
in
jne
push
jg
mov
iret
pop
out
sbb
ret
int3
jle
out
jo
shll
cmp
mov
jg
insl
stc
cmpsb
lock
outsb
pop
xchg
out
fwait
aam
fbld
mov
hlt
cmp
popa
imul
mov
jo
dec
es
fdivrp
std
insl
test
adc
pop
ds
push
pusha
inc
jecxz
aad
jns
sbb
mov
adc
mov
fbstp
inc
add
sbb
outsl
out
insb
push
lock
addl
or
add
lds
popf
sbb
push
adc
in
sub
dec
rcrl
gs
cmc
out
hlt
loopne
fadd
fs
fwait
mov
test
xchg
out
shll
lcall
push
or
cli
cmp
fwait
notb
ljmp
mov
sub
push
popl
sahf
jle
pop
mov
mov
dec
ljmp
xor
and
jecxz
jne
mov
jne
das
in
mov
aaa
xor
test
dec
icebp
imull
cmpsb
xlat
pop
fmul
or
xor
push
lock
or
movl
sbb
es
loopne
fucomip
outsb
aam
pop
push
jg
xchg
adc
jmp
mov
adc
mov
int3
pop
aaa
clts
test
lds
mov
and
xor
lea
test
jno
hlt
js
add
je
subl
insl
ljmp
sub
lcall
loopne
mov
test
std
ds
filds
leave
mov
pop
jecxz
addr16
aad
in
pop
test
lret
cmpsl
mov
lock
imul
pop
push
ss
pusha
jns
out
pop
cmp
gs
adc
sub
mov
stc
insb
adc
dec
and
and
imul
jle
fsts
inc
jne
pop
fdivrs
xor
mov
push
jnp
movsl
adcl
push
or
or
or
sbb
in
cmp
xchg
pop
sbb
shlb
push
and
imul
repz
int
fucomp
cmpsb
int
xor
sbb
mov
xchg
push
add
xor
and
and
inc
out
ds
call
push
jno
jbe
test
pop
imul
mov
js
push
gs
test
and
xchg
imul
pop
xor
dec
jle
sahf
in
mov
ja
cmp
in
jle
mov
dec
gs
jp
cli
outsb
in
fucom
cmpsb
dec
fnsave
push
shrl
fsts
dec
mov
icebp
pop
scas
mov
in
sub
cmpsb
ja
shlb
jo
and
insb
mov
and
adc
xchg
push
outsb
rcr
fs
jp
add
add
popf
mov
insb
jmp
push
cmp
pop
ror
insb
push
jge
xor
stos
xchg
xchg
lock
dec
ds
aad
scas
mov
ja
in
or
jmp
leave
fwait
mov
hlt
and
dec
aam
mov
out
aas
stos
mul
loop
push
inc
sbb
lea
aas
xchg
lcall
lock
stc
jmp
xchg
dec
pop
movsl
dec
js
adc
xchg
sbb
insl
test
std
lods
mov
mov
cmp
jge
push
add
mov
or
fsubrs
and
imul
or
mov
lods
test
cs
shr
and
in
repnz
cmpsb
pop
xor
fisubs
fwait
jb
cmpsb
mov
incl
dec
jae
or
out
xchg
and
mov
inc
popf
push
or
or
xchg
adc
leave
cwtl
sub
lods
jbe
cld
insb
pop
loop
adc
and
mov
loopne
rolb
xchg
cmpsb
mov
add
xchg
dec
inc
shrb
xor
je
pushf
lea
loop
outsb
in
mov
jecxz
mov
and
bound
jmp
xchg
addb
out
xchg
or
fcompl
outsl
xchg
shl
mov
dec
jne
mov
icebp
and
jmp
dec
inc
jge
or
adc
and
and
jbe
mov
leave
jo
xor
pop
pusha
arpl
out
and
jecxz
jo
stos
push
loopne
adc
lret
pop
lret
rorb
mov
test
lods
cmpsb
fwait
pop
stos
lcall
shl
hlt
push
inc
test
gs
or
daa
ret
rclb
adc
in
mov
adc
movsl
pop
popf
inc
ffree
and
and
clc
mov
dec
cmpsb
jg
mov
inc
mov
mov
nop
sar
inc
pop
xor
xchg
mov
in
outsl
jle
mov
mov
ret
out
lea
repnz
or
sbb
jbe
aaa
outsl
hlt
les
mov
popf
dec
sbb
into
inc
fbstp
pop
nop
or
mov
pop
int
aaa
popa
scas
in
push
cld
call
cmpsb
not
mov
lods
sti
ja
outsl
adc
xchg
je
inc
sbb
xor
rep
cmp
adc
imulb
jno
mov
add
sub
inc
ljmp
inc
jne
jecxz
sbb
movsb
and
fsubs
mov
test
dec
flds
cmp
data16
mov
jbe
cli
int
pushf
add
xor
xchg
and
out
mov
sbb
cmpsl
orl
dec
in
xchg
inc
lret
sbb
or
xchg
repnz
mov
repnz
into
mov
push
xchg
jno
cmc
pop
sub
inc
jecxz
and
cmc
sarl
mov
frstor
clc
sbb
test
adc
mov
outsl
sub
adc
aaa
iret
lcall
xchg
sub
inc
std
jbe
in
cwtl
mov
imul
das
or
int
pop
sbb
mov
hlt
lods
pusha
push
xchg
out
scas
repnz
aad
mov
inc
call
call
mov
or
inc
mov
adc
lret
xor
xchg
imull
shl
push
jge
ficoml
push
int3
push
inc
call
jb
cld
mov
push
push
int
mov
in
je
std
mov
push
jle
divl
lret
cmp
sub
bound
into
dec
cmp
pop
mov
iret
not
call
out
mov
dec
cmpsl
jp
pop
insl
or
loopne
sub
pop
mov
jmp
ss
out
ds
add
movsl
int
pusha
popa
imul
lods
adcb
cs
out
mov
pushf
dec
dec
mov
xchg
inc
jp
push
add
pop
stos
es
ljmp
mov
push
fiadds
popf
jl
mov
mov
fstpt
mov
cmp
xor
mov
out
or
xor
or
add
iret
push
rcll
in
out
stos
clc
out
push
imul
bound
lea
dec
mov
mov
fidivrs
add
outsb
xor
xor
and
push
mov
jne
push
repnz
mov
xor
sbb
mov
mov
outsb
cld
xchg
xchg
xor
inc
pop
insb
std
decb
sub
cmp
xchg
mov
clc
mov
fiadds
mov
repnz
rcr
sti
xor
add
insl
or
lcall
push
fs
inc
pop
pop
test
sub
cmp
int3
xor
adcb
stos
leave
inc
inc
mov
add
or
fdivs
test
jle
aam
lret
pop
fcompl
fmull
cmp
inc
int
ret
in
mov
js
push
mov
insl
andl
xchg
jbe
inc
pop
and
add
push
insb
inc
mov
je
pop
pushf
or
adc
imul
or
xor
adc
mov
daa
jbe
cmpsl
stc
cwtl
outsl
xor
shrl
fistpl
test
mov
mov
and
int
sahf
pop
pop
xor
pop
mov
je
mov
mov
xor
or
iret
fdivp
negb
mov
jb,pt
mov
hlt
xor
xor
jl
bound
stc
test
ja
inc
xor
jmp
in
jbe
lock
insb
or
push
call
mov
adc
nop
int3
adc
div
mov
push
scas
sti
movsb
shrb
push
inc
lock
jecxz
xchg
cmp
aas
xorl
mov
cmc
sbb
cmp
push
mov
loopne
ja
push
sbb
and
mov
in
nop
daa
mov
mov
arpl
xchg
cld
bound
dec
aam
fucomi
dec
out
and
sub
movlhps
lea
sarl
inc
lods
mov
ja
outsb
mulb
aas
pop
dec
jno
andb
loop
push
daa
sub
mov
mov
sbb
pop
push
shlb
js
leave
inc
stos
sub
inc
jnp
pop
sub
mov
testb
cmp
push
inc
aas
push
repnz
cmp
imul
xor
jmp
test
insb
popa
imul
lcall
xlat
scas
inc
mov
sub
push
and
rcll
dec
cmp
scas
iret
fistpll
call
stos
pop
or
sarl
rcll
jae
dec
pop
push
out
push
lcall
inc
icebp
aam
mov
rorb
mov
ficoms
sub
jbe
jno
out
inc
jge
imul
ficoms
out
lods
add
jbe
adc
dec
ja
and
dec
stos
adcb
jb
jl
push
aad
ds
in
popf
dec
adc
push
int
lds
cli
pop
mov
dec
lcallw
cmp
fidivs
add
into
inc
mov
dec
adc
sbb
mov
lcall
scas
js
and
pop
lds
addb
imul
repnz
andl
ret
rcrl
pminub
cmp
add
test
xor
mov
jb
pusha
iret
stc
ss
scas
lret
mov
adc
scas
push
cltd
hlt
movsl
popa
out
shlb
push
imul
orb
call
sbb
dec
icebp
pop
mov
iret
lcall
outsl
fcoml
aad
mov
push
pcmpeqw
pusha
xchg
and
lods
pop
repz
inc
sub
push
test
aad
jle
jb
pop
mov
leave
inc
movsb
test
or
jb
xor
inc
popf
pop
push
add
add
add
daa
push
in
push
sbb
stos
cmpl
jno
test
mov
xchg
sbb
mov
shlb
out
gs
adc
cmpsl
mov
mov
cmpsl
jecxz
xchg
mov
icebp
inc
xchg
out
and
inc
sti
stos
adc
mov
clc
push
mov
stos
cmc
shrb
and
jg
jg
mov
mov
jno
pop
dec
mov
sbb
cmp
adc
xchg
femms
ret
pop
dec
pop
xor
pop
nop
cmpsl
inc
and
add
fildll
push
push
in
push
test
dec
outsl
mov
jo
fstl
xor
adc
ficoms
pop
pop
inc
push
mov
and
jle
jp
mov
call
in
mov
lret
rorb
fwait
mov
mov
inc
jecxz
xorl
out
aas
sub
scas
pusha
fs
sbb
es
ja
out
xor
mov
cli
aam
shl
sahf
in
iret
mov
xor
es
or
clc
add
mov
sbb
mov
pop
mov
xor
lock
addr16
scas
outsb
loopne
imul
dec
cmp
repnz
push
out
sbb
enter
dec
xchg
arpl
push
pop
xchg
mov
loopne
in
fsubrl
dec
aad
pop
shr
xchg
aaa
xchg
int3
xchg
ds
out
xor
fmull
add
je
lock
out
pop
in
pop
std
pop
cmc
jne
mov
sti
sarb
add
into
or
int
icebp
rcll
flds
xor
aad
pop
xchg
subb
sbb
cwtl
push
mov
outsl
inc
xorb
ret
mov
xchg
bound
pop
push
rcr
out
cwtl
jns
cmc
stc
fisubs
mov
ljmp
jbe
cmp
cmpsb
sub
lea
mov
jg
sub
cli
dec
xor
mov
test
push
push
adc
jle
outsb
jecxz
mov
popa
pusha
out
mulb
aaa
jmp
iret
dec
stos
gs
pop
imul
dec
in
mov
sub
mov
test
adc
imul
repz
fucomp
fistps
mov
cmp
pusha
mov
dec
stos
sbb
mov
lret
scas
test
xor
test
or
in
stos
in
xchg
xor
inc
mov
fbld
es
xchg
inc
mov
bound
and
or
cld
mov
cltd
int
out
les
mov
add
rol
mov
dec
pop
pop
loop
xor
rolb
lret
lahf
lock
mov
add
sub
xor
lock
popa
mov
xchg
hlt
sub
ss
in
popa
push
inc
lret
ss
xlat
lea
ljmp
icebp
push
dec
mov
xchg
mov
dec
add
shlb
inc
inc
dec
data16
mov
test
or
inc
pop
fdivrl
or
decb
test
cmc
iret
push
jl
push
je
and
lods
push
or
es
pop
or
sbb
ja
and
push
movsb
ret
sub
push
movsb
outsl
scas
les
mov
sti
pop
mov
mov
aad
xchg
sahf
mov
cli
dec
imul
ficompl
aad
mov
testb
nop
loopne
xchg
in
fucomp
in
sbb
test
push
pop
gs
push
mov
dec
or
and
ret
xchg
mov
hlt
mov
push
mov
jp
xchg
out
int3
negl
test
ds
dec
inc
pop
imul
push
fwait
cmp
scas
mov
adcl
in
ds
adc
or
mov
mov
and
lret
cli
mov
rcl
add
adc
sbb
sub
dec
arpl
mov
add
xor
adc
or
mov
and
shrb
outsb
mov
push
sarb
out
fwait
dec
test
mov
or
push
inc
les
cmp
sbb
push
fsubl
stos
push
int
mov
inc
aas
decb
inc
sub
mov
cli
test
mov
mov
inc
jge
mov
cmpsl
mov
in
shrl
sbb
add
ret
jno
sub
stos
xchg
jge
loope
gs
xchg
pop
dec
movl
mov
or
mov
in
dec
cmpsb
data16
or
pushf
cli
loop
ret
xchg
dec
pop
mov
jg
inc
jp
inc
lds
in
shrl
ja
pop
lods
push
xor
xor
ret
mov
or
pop
fcoml
dec
in
dec
push
mov
xchg
insb
jne
clc
aaa
fsts
pushl
fidivs
mov
testb
sbb
ror
pop
xchg
push
xchg
or
pop
stc
fsubl
xchg
pop
stos
outsb
sub
int
add
jae
push
or
pushf
sub
jmp
cmpsb
mov
cmp
jnp
ljmp
adc
fwait
mov
lock
add
push
mov
sbb
popa
cwtl
pop
add
jbe
je
dec
jmp
movsl
sub
mov
in
sub
and
push
lock
es
fidivs
cmpl
int3
es
dec
add
ret
jo
mov
lahf
movsl
cld
movsl
add
push
shlb
stos
les
or
cmp
in
sbb
sub
inc
arpl
push
inc
xor
stos
xchg
out
xor
inc
ror
adc
add
pop
sub
and
pop
xchg
push
push
mov
push
mov
daa
or
lret
js
xor
add
nop
stos
xor
dec
pushf
add
out
mov
fiaddl
pop
aam
ret
or
in
sub
int
pop
movl
mov
lcall
lcall
or
push
loope
sub
jbe
int
xor
aas
push
movsb
stos
dec
xchg
enter
or
dec
addb
mov
xor
jnp
daa
inc
mov
jae
dec
test
xor
cmc
xor
imul
aaa
pop
cmp
mov
dec
mov
test
es
lret
pop
inc
jge
xor
ja
push
jnp
lods
push
fcomps
and
push
dec
cwtl
xchg
movsl
ret
mov
imul
sbb
jnp
or
in
mov
je
enter
mov
cmp
sub
lcall
icebp
pushf
test
dec
stc
enter
out
sub
test
push
xchg
sahf
xor
arpl
fiadds
outsb
sub
iret
or
sbb
xchg
movsb
pop
ret
add
mov
ret
or
lods
adc
jnp
adc
push
xchg
cmp
pop
outsl
mov
sbb
mov
movsl
and
adc
imul
inc
movhlps
cltd
int
movsl
test
popf
lds
sbb
mov
dec
imul
inc
aam
xchg
jbe
jmp
mov
fnstcw
mov
mov
ret
hlt
push
scas
gs
mov
into
mov
push
or
push
iret
lcall
outsl
adc
jne
aam
adc
insb
les
outsl
push
dec
mov
fbld
gs
add
les
in
cld
arpl
cmp
xor
lcall
jns
pop
mov
cmpsl
push
mov
fucomp
pop
out
ret
int3
call
int3
inc
mov
cltd
sub
out
js
sbb
pop
arpl
into
xchg
dec
push
mov
cmp
xchg
mov
fs
mov
ret
and
xchg
pop
cli
xchg
jb
add
jecxz
cmp
mov
jl
sahf
fstpt
daa
sub
mov
daa
sahf
imulb
and
cvttps2pi
jl
push
cvtps2pi
mov
xor
decl
call
mov
and
pop
repz
mov
aas
xchg
jns
pop
mov
out
pop
pop
gs
outsb
jl
pop
add
xchg
inc
popa
mov
cmp
ds
lahf
sarl
shrb
enter
push
jp
sub
in
sbb
adc
dec
cs
jnp
mov
test
fisubrs
adc
rorl
loope
ror
in
out
jbe
cmp
and
repnz
cmp
out
pop
push
sti
repz
pop
gs
jp
xor
jno
lret
dec
mov
sbb
xor
push
mov
movsb
jle
xchg
sbb
cmp
ja
push
pop
lahf
xlat
pushf
mov
xchg
insb
cmc
lods
in
arpl
rcll
cmp
lret
adc
jbe
xchg
btr
pop
fnstcw
lods
mov
lret
cmp
dec
mov
out
in
push
add
out
pop
mov
inc
xor
adc
lock
fcoms
lock
adc
ret
and
push
sbbl
or
add
xorl
or
sub
popl
add
adc
pusha
xorl
add
aaa
jnp
fmuls
or
orl
cmp
fidivrs
add
cmp
pop
dec
dec
dec
cs
sbb
or
jecxz
imul
int3
popf
pop
mov
cld
roll
shll
hlt
hlt
add
gs
and
inc
xlat
cld
pop
cmp
push
cmp
or
flds
lods
lahf
xor
cmp
adc
hlt
hlt
pop
adc
popf
sub
test
and
ret
cmp
cmp
mov
mov
mov
popf
repnz
mov
movsb
xorb
add
mov
push
cwtl
pop
add
mov
mov
cld
mov
mov
cmp
xlat
dec
xchg
test
inc
gs
ja
pop
dec
test
shll
in
mov
sub
rcl
iret
aam
mov
sti
dec
outsb
in
add
sar
fistpll
mov
sti
and
cld
std
mov
ds
mov
push
in
mov
mov
xchg
bound
imul
jbe
ficoml
sub
aas
int
push
sub
sub
mov
add
xor
arpl
push
xchg
imul
jns
or
xor
dec
int3
popf
add
add
xchg
mov
cld
out
js
or
loope
jnp
mov
mov
out
pop
cli
andb
jp
push
mov
xchg
test
or
push
dec
jl
mov
repnz
sub
mov
pop
jnp
sti
xchg
data16
and
movsb
icebp
mov
ljmp
mov
jnp
or
mov
fsts
cmp
jb
cmp
test
mov
xchg
out
xchg
movsb
es
es
fmulp
jl
jb
dec
sub
xchg
mov
push
xor
mov
loopne
sub
mov
xchg
divb
lea
lcall
andb
outsl
enter
sti
jnp
cmc
movsb
pop
xchg
cmp
in
xor
sbb
add
push
push
mov
fsubrs
inc
int3
add
in
add
in
sti
aaa
in
jnp
hlt
rolb
mov
pop
cmp
xchg
push
out
movsb
ffree
mov
sub
les
filds
sbb
cwtl
fistl
xchg
xchg
or
scas
and
jmp
aaa
test
push
xor
jb
fwait
inc
sbb
mov
lcall
test
jge
jns
nop
fistpl
shll
cmpsl
dec
ljmp
push
dec
fbstp
mov
int
or
test
mov
inc
sub
jb
addl
mov
cli
fldenv
fwait
and
mov
sbb
out
pop
aaa
or
sub
in
sub
movsl
xchg
mov
sub
sub
push
movb
nop
mov
cli
in
jne
push
fdivp
mov
adcl
dec
fisttps
and
xor
fs
enter
jno
enter
mov
cmpsl
cmpsb
sub
add
iret
test
ficompl
inc
adc
jle
outsl
adc
fadds
dec
jb
xchg
cmc
fisttpll
cmp
std
xor
inc
jno
mov
xor
mov
push
lahf
cli
pop
filds
cmp
cmp
testl
dec
ljmp
cmpsl
test
scas
pop
cwtl
dec
sbb
cmpsl
mov
hlt
xchg
aad
push
in
testb
ret
sub
adc
mov
adc
repz
fcoml
xor
dec
pop
out
mov
in
lahf
pop
xor
pop
sub
insl
std
popf
inc
loopne
bound
sub
mov
ja
xor
loope
bound
push
xor
lods
hlt
and
jno
in
test
sbb
mov
int3
js
bound
popa
shr
ret
stos
lock
fcomps
pusha
mov
loope
movsl
pop
jae
int
or
mov
and
jle
cmpsl
xchg
aas
lret
insb
inc
addr16
sahf
ja
into
dec
sbb
jp
fcmovbe
testl
sbb
jnp
push
cmp
insl
rolb
dec
movsl
push
icebp
push
notl
int
arpl
std
das
xchg
xchg
aam
cmp
out
sbb
shrb
xor
enter
or
dec
dec
dec
and
stos
inc
sbb
mov
repnz
cmp
jmp
xor
xchg
and
dec
xchg
add
cmpsl
pop
and
insl
cld
push
loop
push
shll
cmp
sbb
out
iret
not
scas
mov
out
jle
adc
dec
adc
xor
cmc
xchg
jne
adc
scas
and
mov
push
clc
xchg
sub
pop
inc
loop
imul
add
push
sbb
scas
in
jno
pop
ds
movsb
in
or
hlt
in
add
sbb
sti
rcrb
sbb
fnstenv
les
je
jp
jb
in
push
aas
icebp
int
and
das
jge
cli
popl
lcall
fcoml
stos
xor
jb
cvtpi2ps
das
adc
mov
mov
push
jmp
push
sar
xchg
pop
imul
hlt
mov
scas
cld
lcall
scas
inc
clc
into
mov
cmpsb
sar
sbb
das
bound
lret
loope
cmp
fdivrs
repz
xchg
mov
dec
je
push
insl
or
aaa
dec
cmp
xchg
xchg
ftst
push
and
mov
cwtl
out
mov
gs
pushf
and
orl
mov
sbb
outsl
ficoml
inc
dec
faddl
lret
scas
xchg
push
pop
lea
insb
inc
ds
bound
push
xchg
sbb
daa
xchg
hlt
push
adc
in
andl
sti
jbe
mov
filds
int
xlat
xchg
jns
stc
fsubl
clc
cmp
aas
shl
pop
pop
adc
mov
cmpsb
push
xchg
xchg
inc
fistl
mov
cmp
jge
adc
or
loopne
adc
push
sbb
in
jnp
jnp
pop
insl
mov
subl
jl
mov
dec
lea
xchg
hlt
fisubrs
cmp
call
mov
ljmp
ljmp
cmp
xchg
sbb
dec
jae
std
push
pop
test
jae
or
nop
aam
fildl
xchg
decb
adc
out
sub
inc
jb
push
mov
aam
int3
lods
rorl
aam
xor
jne
inc
push
inc
popa
push
test
sub
dec
scas
stos
in
ss
in
xchg
xor
xchg
movsl
inc
jae
fmulp
cmp
push
xor
cwtl
movsb
fnsave
mov
ficomps
mov
pop
in
loopne
dec
mov
jbe
mov
xchg
aam
lea
ret
pop
gs
sarl
enter
mov
int3
adcl
in
test
outsb
jae
fwait
aam
ud0
mov
daa
popl
aas
push
dec
sub
mov
loopne
rcrb
jg
sbb
adc
add
lds
mov
fisubrl
and
or
inc
inc
mov
lock
pop
js
mov
lret
and
or
mov
cs
jmp
sbb
sti
cwtl
test
sbb
push
mov
notb
jmp
flds
fdiv
addr16
fidivrl
inc
mov
mov
jne
aad
pusha
aas
and
std
lret
loop
daa
mov
push
push
mov
shrb
stc
cltd
pusha
shr
iret
jp
fdivrs
jmp
jg
push
jge
xorl
adc
mov
test
cld
fadds
inc
xor
jle
push
es
sbb
imul
lret
pop
inc
jp
outsb
orl
loop
fstp
xor
out
shrb
out
add
jbe
int3
insb
cmp
pushf
sub
ss
xchg
aaa
popf
loop
mov
fmulp
dec
rorb
cmp
fidivl
outsb
or
xchg
out
pop
out
outsb
lahf
and
sbb
fwait
pop
sub
add
ss
cltd
dec
inc
popa
jbe
icebp
cmp
mov
mul
outsl
imul
and
xchg
pop
pushf
leave
and
mov
mov
xchg
sbb
ljmp
sti
insb
xor
add
dec
jmp
ret
cli
ds
inc
or
or
mov
mov
or
sub
sub
mov
jne
insl
xor
sub
xor
mov
or
out
ja,pt
loop
or
arpl
lods
in
dec
push
testb
jecxz
pop
out
add
out
pop
xor
jecxz
subb
pop
dec
or
jbe
pusha
pop
pop
movsl
sbb
xor
popf
imul
leave
xor
sbb
mov
hlt
mov
arpl
ljmp
sti
inc
pop
inc
hlt
dec
xor
mov
mov
imul
jle
mov
xor
pop
push
mov
cmp
or
dec
mov
jno
ficomps
imul
popa
jmp
sbb
mov
pop
cli
lock
test
pop
lock
mov
dec
lods
pop
mov
cmpsl
outsb
adc
jne
jne
mov
push
sub
shrb
jno
jnp
cmpsl
cmp
cmp
aam
cmpsb
adc
cmp
or
fistpll
jecxz
test
lock
jge
mov
cld
enter
aaa
mov
enter
push
sbb
xor
dec
and
pop
xchg
fists
xor
movsl
stos
mov
aaa
pop
ljmp
push
dec
xchg
out
mov
push
pop
sub
jle
sti
xchg
xor
sldt
mov
xchg
adcl
mov
mov
in
jecxz
inc
mov
imull
xchg
lcall
mov
icebp
push
rcrl
imul
sub
scas
xchg
pop
xlat
out
ds
clc
xor
shrb
sub
fbstp
cmp
nop
mov
insb
and
mov
cld
rolb
fdivrl
fs
je
inc
push
fidivl
xchg
push
inc
add
aas
push
jg
stos
test
call
push
out
lea
rclb
push
jg
rcll
push
jle
add
xchg
push
or
xchg
cltd
sarb
push
mov
xchg
push
fmulp
fildll
mov
fists
cmc
sarb
mov
aas
cmp
repz
fistps
aas
pop
mov
mov
jp
mov
push
inc
mov
jns
jne
mov
fdivrl
push
rcr
sub
imul
stc
mov
mov
jge
mov
test
fistpl
pop
ljmp
dec
push
test
into
daa
push
and
mov
rcrl
jae
mov
outsl
mov
lahf
insl
arpl
sub
cmp
mov
dec
mov
ficoms
imul
jnp
sbb
and
stos
in
leave
jp
push
push
add
std
into
into
lcall
cwtl
jmp
imul
das
and
push
ja
sub
push
lock
ljmp
jns
shlb
cmp
mov
mov
sub
inc
xchg
jnp
adc
fistpl
lock
jmp
bound
pop
jno
and
lgs
mov
rclb
pop
sub
fdiv
and
mov
leave
pop
pop
dec
dec
stc
mov
aaa
in
repz
cli
mov
xor
stos
mov
sbb
out
ss
loope
inc
in
sub
aam
push
notb
push
adc
pop
nop
je
mov
xlat
test
mov
out
or
inc
dec
rorl
sbb
sub
mov
mov
cmpsb
aad
test
jae
scas
or
cmpb
adc
sbb
lret
je
jmp
cmc
popa
mov
inc
fld
pop
in
and
jl
push
mov
add
lods
test
orl
push
dec
adc
jecxz
repnz
mov
stos
xor
sub
lcall
lret
out
inc
bound
test
pop
dec
rorl
ss
data16
in
cmp
push
mov
fisubrl
leave
jg
dec
mov
mov
addr16
sbb
outsl
cmpsb
jnp
and
push
xor
adc
sub
leave
push
add
mov
popf
xchg
sbb
and
push
cs
fwait
add
bound
mov
pushl
xchg
imul
insb
sub
movsb
jmp
scas
adc
and
in
and
in
mov
sti
xor
mov
inc
mov
xchg
pop
jne
jbe
insb
pop
test
in
push
imul
in
aam
mov
pop
test
test
xor
nop
arpl
gs
mov
dec
out
cmpsb
sub
fprem
fadds
bound
sbb
add
and
ss
inc
ja
cmc
loop
push
test
push
mov
and
ss
daa
popf
mov
out
jge
xor
jns
mov
mov
inc
rorl
sbb
jne
xchg
sub
jge
pop
lahf
adc
sub
sarb
test
std
decb
pop
lret
test
sbb
inc
outsl
cmp
mov
or
jnp
add
rorb
xchg
test
dec
add
and
jecxz
into
push
in
pop
pop
lret
mov
into
sub
mov
ja
addr16
inc
and
ja
fwait
or
add
mov
jbe
sub
push
insb
mov
pop
push
fldt
mov
insl
jmp
iret
stos
mov
lds
xchg
imul
inc
cmp
push
cmp
pop
xchg
call
rorl
pop
or
and
inc
dec
insl
stos
mov
and
fcmovbe
dec
xor
imul
cmc
movsb
dec
daa
cmp
jecxz
popf
arpl
push
mov
mov
or
mov
xchg
out
push
push
popf
dec
mov
sti
call
movsb
mov
push
jno
or
jnp
xchg
mov
jae
cmpsb
jmp
or
cmp
aas
mov
lret
popf
xorl
mov
lahf
push
add
mov
adc
cmpsb
shll
cmp
adc
movsb
push
insb
imull
aad
push
push
inc
or
mov
inc
and
xor
nop
jb
push
outsl
cli
test
sub
mov
sarb
adc
xchg
aad
fcoms
loope
int3
dec
pop
mov
ret
cmovbe
add
push
sub
cmovl
adc
mov
subb
sbb
hlt
fs
test
mov
fnsetpm(287
repz
dec
sahf
sbb
arpl
ret
mov
test
call
adc
inc
lahf
test
shrb
addl
xor
repz
fdivp
rorb
jmp
add
hlt
jbe
mov
sub
pushf
test
in
popf
push
test
movsl
mov
out
inc
lahf
mov
ds
aam
nop
nop
xor
pop
push
sbb
sub
fmulp
std
cmp
loope
orb
pop
insl
or
ret
add
ja
cwtl
xor
dec
loope
add
inc
adc
jecxz
clc
mov
cmp
loop
xor
sbb
fdivp
aaa
rol
jnp
push
loope
xor
or
fwait
mov
je
lock
cmp
lock
sbb
pushf
insb
enter
mov
pop
pop
movsb
shl
mov
fs
jp
mov
loop
xor
add
sbbl
leave
dec
and
mov
sub
push
xchg
mov
add
inc
in
fdivp
aas
cmc
movsb
aas
out
test
add
xor
sbb
cmp
dec
inc
sbb
xchg
xor
sub
addb
cltd
fstpt
lahf
ss
cmpsb
mov
cwtl
xor
popf
insb
sub
inc
jnp
mov
dec
fs
mov
sbb
stos
and
insl
adc
movhps
out
outsb
mov
mov
aad
sbb
fwait
sti
inc
dec
outsl
bound
xor
xchg
nop
loope
pushf
lahf
jbe
jmp
pop
sub
dec
insb
pop
adc
inc
js
dec
pop
in
fs
sbb
leave
xchg
aaa
push
jge
cli
fsts
test
push
pop
fs
and
loope
jmp
push
mov
aaa
mov
fs
sub
jl
push
mov
and
rcll
pop
adc
dec
stc
add
mov
adc
adc
pop
insb
stos
add
stos
mov
inc
add
mov
rclb
adc
sbb
or
popa
stos
mov
es
sub
adc
pop
push
rorl
sahf
or
lret
mov
vpsrlvd
pushf
cmc
mov
cli
std
and
dec
adc
jmp
in
int3
push
inc
xchg
sub
loope
xchg
push
push
and
push
ror
cmp
movsl
or
in
dec
cli
cli
mov
cltd
pop
cmp
sub
data16
push
xchg
bound
inc
cwtl
mov
icebp
cmp
ret
roll
test
ja
push
inc
ss
sub
cmp
fstpl
cmp
xlat
mov
sub
xorb
sub
pop
int3
mov
inc
sub
pop
xor
incl
enter
pop
sbb
jecxz
adc
cmpsb
fiadds
outsl
es
cmp
jmp
xor
inc
rorb
adc
adc
jae
sahf
jmp
mov
aaa
xchg
ljmp
mull
cwtl
jne
pop
sub
into
cltd
test
adc
aas
cli
imul
push
int3
rol
jmp
je
jg
rol
or
popf
jle
icebp
or
xor
or
add
adc
xchg
fcomps
push
jnp
iret
cmp
loope
sub
fwait
mov
test
xchg
mov
pushf
clc
out
fadds
cmp
cmp
out
out
cmpsb
int
add
cwtl
push
push
xchg
cwtl
int3
subb
ljmp
mov
push
movsb
pusha
mov
iret
mov
sub
in
out
lods
bound
jge
out
xor
jb
jno
test
mov
mov
loopne
adc
sarl
scas
push
lea
in
mov
cmp
mov
xchg
incl
pop
pop
pushf
jbe
cld
in
lock
les
call
outsl
xlat
adc
jb
mov
xchg
inc
jmp
daa
jmp
mov
vpmaddwd
jl
clc
aam
sub
cmc
push
push
lock
icebp
lods
or
scas
sub
fsubl
ds
and
pop
adc
mov
jb
add
jp
mov
xor
dec
xchg
out
kmovw
aaa
int3
xchg
mov
cwtl
dec
xchg
pop
sub
push
mov
pushf
addl
mov
sbb
jbe
fadd
movsb
push
pop
orl
pop
mov
xchg
xor
jnp
push
dec
pusha
xor
lds
out
xlat
jle
sbb
clc
mov
push
inc
mov
enter
jge
clc
cmp
repz
jl
aaa
cltd
inc
jne
xlat
mov
leave
lahf
out
stos
cmpsl
push
push
mov
mov
sub
data16
fstpl
iret
out
pop
dec
in
mov
fwait
mov
adc
and
mov
lret
into
lods
les
pop
pop
xchg
out
mov
mov
movsl
in
push
push
dec
cmp
shl
movsb
pushf
popf
xchg
pop
jle
addl
pushf
fsubs
xor
mov
pop
ds
insl
cld
cld
cmpl
mov
push
in
fs
xchg
cmpsb
xchg
aam
lea
aad
lret
lcall
push
adc
enter
clc
inc
xor
fsubl
test
and
mov
jge
mov
mov
mov
aaa
push
cltd
shlb
repnz
add
movsb
jmp
rcrb
mov
mov
ffreep
push
or
jmp
inc
xor
scas
xchg
push
cmp
add
jnp
frstor
pop
cltd
push
call
inc
or
mov
cld
sbb
mov
inc
mov
pop
loop
add
test
xchg
pop
jae
xlat
aaa
test
inc
sbb
fs
das
jge
mov
jp
cld
mov
cmp
add
jmp
cld
push
sar
sub
ret
xchg
pop
jecxz
daa
pop
ja
cmp
or
loope,pn
xlat
mov
push
or
rorl
into
mov
cld
mov
xor
fmuls
push
xchg
inc
jae
test
rclb
lcall
jbe
cmc
pop
pop
loop
fcompl
fstl
fimull
sub
movsl
adc
mov
dec
gs
fbld
stos
mov
cmp
mov
sbb
pushf
aam
aad
jbe
xchg
roll
arpl
jge
push
loop
pop
or
jo
sub
cld
adc
pop
jge
add
cmp
cmp
fisubs
lea
xchg
cs
shll
adc
js
lcall
bt
pop
mov
test
xchg
mov
out
mov
loope
into
mov
jns
sub
scas
psrlq
sub
std
jmp
fsubrl
pushf
out
jae
lds
cmp
movsb
stc
sahf
int3
sub
in
cwtl
dec
xor
imul
jmp
dec
mov
mov
fdivrp
mulb
in
jle
lahf
rorl
xor
test
sbb
scas
stos
in
mov
mov
jns,pt
cmpsl
push
scas
sahf
push
cld
imul
stos
leave
mov
inc
out
shlb
xor
dec
mov
test
mov
and
in
and
add
adc
andb
ficoms
push
fcomps
pop
jne
daa
loop
hlt
icebp
xchg
arpl
fucom
fsubs
stos
or
lods
pop
ljmp
loope
mov
cmp
movb
fisttps
ret
pop
sbb
xchg
xchg
inc
test
lods
xchg
adc
aas
cmp
xchg
ror
js
loopne
add
fidivrs
jmp
stos
js
xchg
push
or
pop
test
scas
mov
aam
jbe
dec
cmp
in
sbb
xchg
ret
mov
ret
xor
xchg
xchg
pop
cmp
mov
pop
loope
lcall
mov
leave
jmp
mov
sbb
or
jns
mov
mov
sti
stc
mov
mov
std
cmp
loop
push
mov
call
je
pushf
fcmovb
push
mov
insb
cmp
push
jae
bound
jbe
and
and
outsl
mov
mov
mov
data16
sub
popf
mov
notl
sub
outsb
inc
pop
icebp
push
push
cmp
and
add
jb
cmp
incb
hlt
mov
sbb
les
inc
mov
fnstcw
xorb
xor
mov
orb
mov
rclb
push
mov
push
hlt
out
add
xchg
cli
ds
mov
out
ret
dec
les
loope
std
pop
sub
in
sbb
das
in
out
jmp
push
add
mov
inc
jge
push
mov
xchg
mov
movsb
mov
xlat
rcrb
add
test
ja
ds
add
scas
js
push
xchg
and
xlat
test
mov
outsl
shll
imul
pop
add
push
or
dec
loopne
xor
in
push
pop
push
mov
jo
inc
and
mov
cld
divb
fstpl
repnz
cltd
sbb
cmp
xchg
xchg
stos
adc
outsb
or
cli
cld
pusha
stos
jmp
cs
and
jb
xchg
push
xor
mov
inc
repnz
scas
lods
sbb
mov
clc
fisubrl
cmp
ret
push
adc
mov
cmp
scas
add
mov
sbb
mov
call
adc
adc
cmp
mov
jmp
scas
mov
in
dec
cs
push
cmp
insl
ljmp
fisubs
fildl
sbb
cwtl
popa
jns
jo
mov
call
adc
jno
xor
sbb
rclb
and
push
add
dec
shrl
xor
and
out
mov
dec
and
popf
mov
pop
add
rcl
mov
leave
inc
push
ss
stos
mov
sarl
sbb
leave
movsl
in
push
sub
cld
sahf
jb
pop
adc
cmpsl
push
mov
jl
movsl
popf
cmp
cmpsl
cli
adc
in
lret
out
xchg
sub
out
lods
jl
sahf
cmpsb
push
xor
add
pop
cmp
push
mov
sub
cs
ja
mov
andl
adc
add
jle
repz
arpl
ljmp
stos
movsl
jnp
shl
fsubl
mov
mov
mov
jbe
push
fnstenv
int
ret
andb
in
xor
pop
jl
in
pop
adc
test
dec
and
addl
jmp
lret
jne
aad
inc
filds
or
enter
vmovhps
and
stc
mov
cmp
or
lret
jb
xchg
in
mov
sbbb
jno
pop
xchg
lea
call
repz
into
and
dec
pop
dec
cmovbe
cld
ss
xchg
call
pop
push
pushf
incb
mov
and
fnstsw
dec
xchg
out
jmp
lods
sbb
push
mov
inc
fstl
mov
pop
lcall
push
ja
rol
ret
inc
test
sti
ja
add
loop
je
mov
cmp
pushf
mov
cmp
sub
mov
test
pop
push
lahf
xchg
jge
jle
testb
mov
add
das
inc
sub
mov
ret
std
xchg
in
or
jle
inc
cs
movsb
inc
loopne
cli
add
push
sti
les
nop
or
sbb
lods
sbbb
stos
je
fisubrl
or
scas
adc
adc
mov
jg
jle
pusha
lret
jae
sbb
scas
shrb
push
cmp
data16
sarl
jecxz
push
xchg
nop
dec
cmp
inc
scas
push
in
scas
inc
mov
lcall
cmp
dec
hlt
test
pop
mov
push
jl
mov
xchg
xor
es
rorl
pop
jle
xor
cmpsb
jno
push
or
std
out
int
push
mov
test
faddl
jnp
test
int
inc
pop
aad
xchg
adc
mov
pushf
cmpsb
dec
mov
push
outsb
dec
and
cmc
icebp
inc
in
test
push
xor
add
setge
dec
mov
aam
xor
das
dec
mov
popa
sub
cs
or
sub
jae
stos
les
cs
sahf
pop
ds
adc
push
jo
inc
imul
lea
ds
es
xlat
ret
fisttps
jge
push
jge
and
das
imul
xchg
inc
aaa
stos
xchg
sbb
stos
push
cmp
cltd
lods
int3
cltd
mov
insb
adc
ror
push
stc
sub
xlat
mov
add
xchg
outsb
mov
cmp
mov
jl
push
jl
movsb
call
es
adc
mov
cmp
dec
xchg
test
dec
xor
and
outsl
sbb
rcrb
repz
inc
std
push
mov
push
jmp
mov
lahf
push
push
mov
xchg
xchg
stc
or
xchg
adc
jne
js
jbe
js
pop
push
xor
pusha
pop
inc
pop
mov
adc
inc
ret
cmpsb
and
mov
sbb
mov
mov
cmp
cmc
pop
or
xor
mov
jg
add
pushf
ljmp
and
hlt
inc
jmp
mov
icebp
jns
in
pop
sti
pop
mov
xlat
push
mov
lock
int
sub
adc
mov
xchg
mov
insb
sbb
cmp
lods
cmp
cmp
mov
xor
int3
adc
ljmp
stos
scas
xor
xchg
and
jne
sub
pop
rcrl
out
push
pop
int3
and
pop
and
out
mov
and
movsb
hlt
push
xlat
out
into
insb
cs
jl
adc
imul
jno
popf
das
cmp
ficomps
and
addr16
mov
call
clc
sbb
dec
push
das
jbe
inc
pusha
leave
insb
popf
ds
imul
pop
lret
dec
cli
iret
mov
xor
jl
xchg
cmp
pop
test
mov
or
mov
test
mov
mov
repz
add
mov
or
test
js
popa
dec
push
loope
andb
add
arpl
xchg
dec
mov
push
cmpsb
icebp
xor
cmpsb
jecxz
jo
mov
jmp
lahf
cmp
xor
outsl
fcmovb
dec
add
inc
js
lods
mov
xchg
pop
jp
mov
daa
pop
fdivrs
inc
add
ss
shrl
pop
push
xlat
mov
cmp
pop
test
cmpsb
std
cmp
cmp
mov
dec
fidivrl
gs
inc
dec
sub
cmc
mov
std
in
std
xor
aaa
movsl
pop
ja
mov
fsubr
push
pop
push
into
inc
xchg
cmp
nop
movsb
cmp
aad
dec
and
dec
in
lcall
fidivl
gs
pushf
mov
dec
mov
lahf
push
sti
pusha
and
sub
shll
lods
pop
jmp
cmp
sub
aaa
xor
inc
mov
icebp
sti
jge
cld
fadds
xchg
mov
hlt
in
pop
jp
or
pusha
mov
mov
lret
in
cmc
or
mov
ds
movsl
lret
addr16
cmpsb
rcr
fldt
gs
pop
iret
iret
and
push
pop
cld
jge
dec
or
and
sbb
adc
pop
adc
scas
fcmovne
into
adc
ja
lea
push
xchg
pop
popl
xorl
mov
daa
inc
push
in
loop
push
movsl
push
sub
dec
imul
repz
sbb
insb
arpl
jg
adc
fnsave
rcr
stos
mov
scas
lods
sti
dec
cmc
xchg
adc
jae
pop
stos
std
pop
cmp
fcmovnu
fildl
movsl
sbb
jle
mov
cmp
str
jb
sub
stos
push
push
ds
pop
stos
sbb
enter
mov
fisubs
das
xchg
jb
pop
and
stos
jb
mov
cltd
mov
cs
inc
stos
inc
mov
sarb
inc
lods
into
cmp
ficoms
stc
mov
cmp
std
or
pop
addr16
out
cmpsl
jmp
neg
js
insb
push
pop
jge
stc
add
das
xlat
pop
mov
jecxz
mov
jnp
dec
lods
sahf
mov
push
shlb
sbb
sbb
pop
aam
push
js
dec
mov
mov
sahf
fsubl
fstps
cmpsl
dec
pop
out
jb
inc
cmp
sbb
repz
inc
jo
dec
and
aam
fimuls
mov
add
jb
cmp
jo
pop
xor
cmp
cltd
shll
int3
push
xor
enter
mov
adc
lods
test
pop
arpl
cmp
pop
mov
ja
popl
lods
push
xor
fisttpll
insb
and
call
jmp
lods
nop
and
xor
mov
mov
inc
mov
mov
cmp
shl
mov
inc
xor
jae
orb
mov
fsubp
cld
push
add
pop
incl
mov
pop
andb
pop
and
insl
jb
testl
push
xor
inc
xchg
xchg
pop
outsb
mov
int3
xor
xchg
aas
or
neg
fwait
pop
jae
pop
ficomps
jno
aaa
xchg
repz
mov
mov
lret
jae
stos
test
jae
or
rol
lcall
in
leave
outsl
mov
ss
adc
mov
xor
add
imul
pop
lret
sbb
icebp
push
shlb
sarl
out
int
mov
lods
fnstsw
into
lahf
inc
popa
out
cs
out
icebp
or
shr
lods
cmp
ret
clc
ds
inc
lock
or
jp
into
mov
pop
inc
out
icebp
inc
push
add
rclb
mov
jge
mov
inc
in
add
test
push
adc
repz
jmp
in
xorb
dec
pop
inc
pop
rcll
rcrb
negb
aad
lret
repz
push
fists
shlb
push
aam
movsb
test
notl
icebp
mov
out
icebp
ret
lods
xchg
push
xchg
nop
jne
pop
push
cmpsb
jmp
aaa
mov
jecxz
out
in
ja
std
icebp
dec
in
add
mov
mov
aas
insb
xlat
mov
lret
mov
pop
sub
and
fmul
in
push
cwtl
pop
sub
dec
xchg
divb
pop
or
dec
sub
sub
mov
lcall
addps
mov
pop
mov
repz
call
cmpsl
in
adc
rorl
fucomp
fbld
out
jns
dec
in
xor
dec
lahf
sub
imul
icebp
out
inc
add
ja
les
daa
pop
sbb
iret
hlt
insb
adcb
mov
inc
push
fldl
sub
sbb
push
pop
fmuls
repnz
sub
pop
divl
mov
adc
xor
push
xchg
mov
dec
hlt
or
arpl
ljmp
popa
dec
push
push
mov
in
mov
in
xor
mov
mov
add
outsb
ljmp
pushf
scas
cmpsl
leave
jb
outsl
pop
loop
xchg
sub
xor
sbb
mov
add
push
out
scas
jnp
jge
push
fs
orb
and
mov
adc
adc
into
dec
test
pop
test
jbe
mov
xor
loopne
inc
jbe
mov
movsb
mov
cmp
ja
je
mov
icebp
scas
dec
mov
adcl
mov
dec
outsl
mov
arpl
dec
in
push
test
mov
mov
lcall
test
jb
repz
imulb
jg
and
insl
loop
icebp
adc
or
in
rcrb
mov
fs
call
data16
xchg
stos
jge
dec
rdmsr
dec
cmc
clc
in
imul
mov
orl
mov
cld
or
sub
jmp
dec
inc
aam
cmp
pusha
jl
hlt
test
in
xchg
push
iret
out
xchg
movsl
push
adc
or
mov
jmp
mov
pop
dec
xchg
movsb
pop
cs
mov
inc
add
jb
add
pop
fwait
sbb
lock
mov
cs
jno
dec
stos
dec
pop
sbb
out
lret
insl
xorl
aad
cmp
loope
aam
rorl
push
push
ja
sub
cmp
fldenv
popf
adc
cld
add
rol
repz
ss
arpl
stc
outsl
add
xor
icebp
pop
out
pop
test
je
in
pop
adc
and
or
das
out
push
das
fdivs
ficompl
cmpsb
int
xor
repz
mov
mov
jmp
xor
pusha
ss
loopne
addr16
xor
mov
inc
inc
push
stc
cmc
xchg
fdivrs
mov
xor
scas
outsl
cmp
push
xchg
jge
pop
xchg
fimuls
xchg
pop
mov
inc
and
dec
dec
xor
int
cs
rorl
or
sbb
fs
shl
aaa
popf
push
es
pushf
mov
sarl
addr16
mov
stos
hlt
mov
shrb
ds
and
sub
sbb
or
mov
es
mov
or
dec
imul
rep
mov
cmc
ss
jbe
mov
loopne
ret
inc
xor
adc
aas
idivb
scas
add
sbb
push
lcall
rorb
in
popa
mov
jb
cmp
out
push
jecxz
adc
add
fwait
rcll
ret
rcrb
add
fbld
mov
fsubl
jle
imul
inc
inc
xor
xchg
orb
data16
ss
shrb
mov
pop
cmp
fimull
jl
dec
loop
cmpsl
testl
add
out
mov
scas
inc
xchg
mov
in
mov
adc
cmpsl
imul
div
cmpsb
outsl
insb
dec
adc
aaa
sub
jb
std
or
cmpsb
leave
stos
push
gs
sub
and
mov
cmpsb
pop
sarb
mov
dec
xor
aam
sub
cmp
dec
cli
mov
push
mov
movsb
pop
push
mov
dec
add
in
sbb
stos
push
aam
jb
mov
sub
mov
inc
aam
sbb
ret
sub
iret
insl
pop
ljmp
int
sub
cmpsl
pop
leave
pop
mov
out
adc
dec
and
cs
push
jmp
lret
or
adc
pop
enter
mov
pop
pop
fstl
fdiv
mov
adc
stos
jnp
cmp
lret
cld
or
dec
loop
lock
sub
mov
cli
pusha
fiaddl
xchg
out
outsb
cwtl
sti
out
stos
out
lods
jmp
jp
imul
cmp
out
popf
xor
cmp
cmp
dec
faddl
dec
and
or
cmp
mov
int3
rcll
adc
cld
mov
rolb
sbbb
add
cli
aad
xor
xor
adc
jmp
xchg
xchg
and
adc
rcr
lods
jecxz
adc
xchg
jmp
out
shll
call
adc
cmpps
lret
push
addr16
sti
jmp
add
pop
cmp
fnstsw
xor
lds
pop
mov
or
mov
pushf
cmc
xchg
adc
ret
sti
icebp
mov
xchg
test
cmp
push
push
sbb
cmp
dec
jp
cs
mov
mov
rclb
sbb
lds
xchg
in
cmp
sti
sti
xor
inc
or
add
adc
adc
mov
jecxz
pop
call
insl
int3
test
sti
mov
sub
pop
inc
mov
xor
jmp
jnp
cmp
xchg
hlt
into
push
add
adc
add
loopne
cmp
lcall
xlat
ja
mov
or
in
pusha
add
jge
mov
cld
fcompl
mov
stos
enter
lcall
stc
xor
fsubrl
ljmp
aam
das
ja
mov
cmc
jne
test
pop
push
out
adc
and
xchg
imul
jp
jl
or
mov
jp
loope
popa
shl
xchg
fs
fcmovnbe
jno
out
sti
dec
xchg
xor
push
fistpll
pop
fnstsw
js
mov
pushf
sub
push
sti
mov
fwait
push
push
ret
lea
xor
xor
mov
js
shll
pop
dec
nop
sub
iret
inc
push
dec
jl
xor
lret
and
ss
sti
ret
ds
push
into
rcr
sub
mov
and
in
mov
mov
pop
mov
inc
shlb
mov
ss
repz
sbb
pop
imul
sbb
and
jp
mov
das
cmp
inc
add
fadds
pop
test
mov
stos
push
jb
add
addr16
hlt
test
stc
popf
dec
fdivr
inc
inc
jae
mov
xchg
mov
and
xor
push
incb
mov
int3
lahf
jl
cmp
jl
cmpsl
mov
jmp
ss
jle
ja
mov
cmp
or
mov
adc
add
mov
imul
mov
cmp
ljmp
dec
cmpsb
or
mov
dec
xor
int3
mov
push
shrl
rolb
fcomi
mov
mov
outsb
mov
scas
mov
adc
in
and
mov
test
pop
in
push
icebp
or
pusha
jg
or
add
ljmp
ret
daa
pop
inc
jmp
jge
orb
push
repz
in
jnp
lock
and
pop
test
mov
fidivrs
dec
pop
dec
inc
ficomps
and
ret
outsb
add
mov
pop
rcrb
xchg
sbb
push
mov
out
mov
mov
pop
sbb
outsl
or
jns
je
lods
and
inc
lea
bound
push
push
and
inc
sub
loope
adc
sti
pop
xchg
push
push
fsin
adc
or
cmp
mov
cmp
mov
mov
lods
in
xchg
push
adc
loopne
xlat
repnz
cwtl
dec
je
and
aas
jl
js
fsubr
pop
push
or
repnz
es
push
dec
cld
sbb
push
mov
dec
outsl
jle
mov
hlt
xchg
jnp
stc
or
ret
mov
mov
fistps
pushf
lock
pop
pop
ss
jne
gs
jp
rorb
xchg
jnp
test
into
jns
inc
xchg
sbb
ja
call
addr16
pop
icebp
inc
cmp
fistpl
test
paddb
lea
jmp
mov
arpl
out
adc
mov
test
insl
lahf
mov
adc
adc
inc
lret
push
insl
mov
sahf
jmp
jle
mov
es
ljmp
mov
in
out
mov
push
jo
adc
xchg
pop
pop
in
mov
mov
out
add
fdivs
sub
sub
es
jmp
sub
sbb
pop
push
mov
sub
push
jg
adc
inc
and
enter
mov
lret
fidivl
pop
dec
mov
xor
je
gs
lret
jne
dec
outsb
lods
repnz
push
pop
js
enter
nop
mov
into
mov
testb
lds
cmp
jno
fwait
popa
xor
jo
mov
mov
aad
push
push
pop
mov
cmp
mov
ror
lret
xor
shrl
jno
inc
mov
shlb
mov
jno
lahf
out
xchg
stc
insb
pop
push
loopne
mov
xchg
dec
jl
mov
cmpsl
jnp
mov
jge
icebp
pop
xchg
pop
dec
xchg
out
jmpw
or
mov
sarl
int
sbb
and
les
sub
data16
push
mov
inc
pop
mov
push
out
aaa
pop
bound
xchg
cwtl
mov
mov
stos
jmp
maxps
rcrl
cmp
in
shlb
out
cmp
aas
iret
pusha
jmp
sub
push
test
int
sbb
sbbb
movsl
mov
ds
loop
push
cmpl
mov
cli
or
orl
scas
leave
and
mov
cli
es
cltd
cwtl
sbb
dec
pop
ds
mul
rorl
insl
push
adc
cli
repnz
repnz
les
test
dec
mov
adc
scas
mov
jno
add
jne
pop
imul
mov
ljmp
inc
mov
stc
pop
out
cld
jo
push
fldt
scas
inc
inc
dec
sub
jns
rclb
cld
sbb
cltd
ret
ficompl
lret
repz
xchg
mov
les
divl
repnz
sub
test
sub
pop
xor
xorb
xchg
dec
divb
adc
push
lar
mov
sbb
xchg
add
lret
mov
sbb
push
mov
sub
lcall
and
ja
xor
pop
fstps
ficompl
mov
mov
fistpl
fistpl
xor
or
loopne
lods
aas
out
and
push
jge
subb
cmpsb
add
push
cs
jg
inc
push
jecxz
cltd
sbb
aaa
pop
shr
or
fdiv
imul
lret
push
inc
lds
fdivs
mov
dec
enter
leave
imul
or
fisubrs
push
out
mov
iret
outsb
cs
lods
push
jns
gs
xor
jecxz
or
cli
inc
iret
mov
adc
lcall
sarb
leave
fbld
sub
push
loopne
rcrb
popa
jbe
std
mov
cmpsb
loope
dec
mov
insb
sub
std
xor
rorl
pop
jl
mov
sub
fidivs
fs
lret
sub
test
stc
pop
mov
in
dec
sahf
mov
xor
sahf
xchg
insl
push
xchg
dec
pop
cmpsl
inc
sbb
mov
xor
jp
and
jle
jle
and
in
pop
pop
add
mov
dec
pop
add
sahf
lds
shrb
cmpsl
and
sub
lahf
push
jo
xchg
push
add
jp
pop
pop
or
dec
pop
jb
fsubrl
imul
hlt
xor
fnop
pushf
xor
or
aad
int3
push
loope
imul
xorl
hlt
xchg
push
jb
push
shlb
xor
sub
repz
ret
fisubl
test
jmp
and
cmpsb
jmp
sbb
push
inc
test
mov
stc
sbb
sub
sbb
orl
adc
faddl
lods
xchg
dec
cmp
add
xchg
push
inc
inc
dec
cld
pop
stc
sbb
pop
jp
loope
test
xchg
push
or
pop
adc
popa
imul
outsb
fistl
ror
jo
fst
rclb
sub
cmc
mov
mov
and
mov
jne
pop
ficomps
sub
out
pop
cmp
mov
xor
jmp
cmp
mov
push
xchg
mov
popa
movsl
aad
scas
mov
je
lahf
rcl
out
stc
and
rcrl
mov
mov
xlat
mov
pushf
cmpb
cmpl
cmp
jnp
mov
or
insl
sub
addl
xchg
pop
jae
sbb
shl
aad
inc
mov
clc
rcrb
adc
xchg
adcl
cmp
jbe
jl
mov
push
push
pusha
leave
mov
xchg
xor
aad
cmpsl
loop
lahf
cld
inc
dec
and
sub
xchg
inc
popa
dec
adc
sbb
sahf
inc
popa
scas
and
inc
and
pop
dec
adcb
mov
mov
loopne
lcall
addr16
sub
push
test
jg
sbb
imul
pop
mov
cmc
cmp
push
in
outsb
cmc
ret
es
pop
inc
xchg
xchg
mov
ds
sbb
arpl
test
filds
sahf
cltd
add
mov
jg
cld
insl
daa
int
clc
pop
hlt
push
and
scas
scas
mov
cli
ret
inc
daa
pop
shrb
call
adcb
sbb
sbb
repnz
mov
pusha
mov
sub
aad
xchg
cld
int3
lahf
scas
cmp
inc
into
mov
in
int3
in
xchg
lods
rorl
imul
pusha
adc
js
add
push
out
idivl
jecxz
lret
mov
lds
repz
lods
shrl
test
jmp
mov
add
movsl
stos
mov
in
jne
push
aaa
lahf
jecxz
sbb
popf
popa
lea
xchg
iret
imul
in
inc
out
pop
les
and
and
mov
mov
jp
imul
mov
xor
and
inc
xor
sbb
loop
mov
insb
lods
hlt
mov
pop
xor
push
mov
inc
adc
fimuls
jg
movsl
pop
loop
test
outsb
xor
stos
je
in
jg
pop
sbb
push
clc
ffree
popa
in
test
imul
testb
or
cwtl
sub
bound
xchg
je
leave
lock
xor
std
ja
insl
lcall
push
adc
xor
testb
lret
pop
mov
xor
arpl
push
add
xchg
and
pop
clc
into
adc
cmp
scas
add
xchg
mov
add
rcrl
mov
std
jbe
xor
cs
and
mov
mov
repz
je
mov
test
inc
cmp
cld
cmp
mov
lret
dec
pusha
xchg
mov
jo
int3
mov
ret
jge
pushl
xor
je
lods
lods
dec
std
xchg
sub
mov
imul
not
movsl
mov
mov
jmp
aaa
loopne
out
out
jb
cli
jno
push
xor
xor
inc
push
push
mov
insb
addr16
ja
sbb
lea
sahf
cld
fidivrl
jbe
dec
xor
loop
shll
lea
lods
mov
ja
fistps
cmp
sub
inc
mov
mov
jecxz
sbb
sub
nop
insb
iret
sub
or
ja
scas
push
mov
pop
scas
sub
inc
adc
cmpsb
xchg
mov
push
enter
inc
xchg
shl
je
test
sarl
and
fsubl
adc
or
fcmove
and
xor
mov
out
pop
icebp
sbb
pop
add
mov
clc
gs
pop
cmp
je
and
test
push
ret
cmp
test
stc
not
fwait
icebp
cmp
push
dec
or
imull
cmpl
adc
std
shll
movsl
xchg
mov
inc
jns
push
pop
loop
and
dec
jle
jae
cmp
fisubrl
pop
pop
ds
jae
insl
or
ja
imul
mov
and
bound
pop
xchg
or
sub
jno
pop
xor
addr16
push
mov
adc
push
stc
lods
jnp
fistps
lea
push
xor
sbb
repnz
jg
or
ffree
movsb
outsb
mov
sub
in
scas
clc
jb
sbb
push
mov
ret
jnp
mov
jne
cwtl
jne
mov
scas
lods
into
xchg
ja
idiv
or
mov
pusha
jne
into
iret
fildl
and
pop
cmp
out
jp
inc
bound
mov
jb
fisubrl
inc
out
mov
mov
dec
push
insb
sahf
lcall
into
xor
pushf
lods
imul
mov
rcr
aam
pop
jge
push
rcrl
testb
popf
inc
jb
push
incl
mov
insl
imul
pushf
jne
push
lcall
popf
out
pop
sahf
cld
sbb
fistl
xor
sub
fsts
xchg
int3
in
popf
sti
fisubl
push
ret
or
mov
test
mov
out
lret
sti
sahf
pop
fidivrl
xchg
dec
daa
int3
into
in
repz
sub
cmpb
ret
and
xchg
andb
dec
mov
jmp
dec
jl
inc
sub
fistps
leave
pushf
hlt
int
mov
cmp
stos
jecxz
lahf
xor
dec
cld
je
jne
testl
or
xchg
dec
out
adc
cmp
sub
mov
sti
xor
xor
push
add
xchg
sahf
fdivrl
inc
loop
addr16
xchg
inc
sbb
dec
add
fdivrl
adc
in
mov
dec
sbb
xchg
xchg
push
popf
scas
into
mov
daa
sti
pop
shl
mov
jns
xor
add
addr16
lcall
jmp
sbb
rcrb
sbb
iret
mov
icebp
sub
push
dec
outsb
aaa
mov
subl
dec
mov
je
dec
and
xlat
xchg
fs
mov
jl
jp
mov
das
mov
pop
loop
or
mov
add
mov
pop
dec
xchg
jbe
mov
jge
jns
mov
mov
or
dec
add
and
fcomi
xor
lock
jae
sbb
pop
inc
arpl
mov
xchg
adc
sub
sbb
push
push
jbe
call
insl
test
cld
ss
fst
jl
mov
mov
pusha
call
xor
adcl
jns
push
mov
cli
ljmp
pop
push
inc
ret
repz
mov
xchg
pop
cmc
adc
bound
inc
shll
mov
rolb
push
cwtl
push
imul
xchg
cmp
push
jne
cmc
lret
sub
ljmp
jne
xchg
xchg
fdivrs
pop
addr16
mov
or
cwtl
fdivrs
rcr
mov
adc
ja
mov
je
or
jbe
aas
scas
iret
unpckhps
aas
hlt
or
xor
outsl
xchg
test
dec
push
xchg
test
or
popf
decb
movsb
iret
jb
xchg
pop
push
cmp
movsl
cmp
lods
fisttps
lcall
cmp
loop
rcrb
jg
cmpsb
dec
out
push
and
lods
scas
inc
inc
pop
xchg
push
movsb
inc
ficoml
sti
cmc
cmp
pop
mov
dec
cwtl
adc
pop
jp
testw
xchg
dec
adc
dec
or
pop
sti
cltd
in
dec
adc
out
mov
push
add
mov
adc
rorl
dec
fisubrl
push
sar
iret
shll
cmp
aaa
in
mov
ljmp
cmp
dec
jp
add
enter
xchg
and
int3
pop
sbb
int
xchg
scas
cmpsb
cld
inc
mov
shrl
shrb
ret
jle
cli
cmp
inc
into
imul
movl
pop
int
sti
cwtl
mov
sahf
div
fisubrs
stos
cmp
sti
pusha
push
mov
xor
loop
mov
pop
int
gs
pop
stos
fisubs
pop
popf
test
mov
sbb
inc
xchg
jnp
or
sub
or
or
test
dec
lods
popf
cwtl
mov
test
or
xor
lret
dec
in
in
push
aam
adc
jae
fidivrl
or
jmp
jmp
push
loopne
jnp
out
sub
neg
rcll
add
in
shl
cmp
add
sub
cmp
mov
xchg
int3
mov
xchg
outsl
pop
insl
outsl
inc
in
pop
adcl
in
stos
fstp
lds
int
sub
inc
add
insl
lret
sbb
jae
mov
adc
out
mov
arpl
or
shrb
mov
inc
jo
and
jp
call
xchg
cmp
lods
out
jle
jmp
gs
jmp
pushf
sbb
xor
notl
dec
or
jl
mov
xor
dec
dec
pop
sub
xchg
fistl
clc
and
push
xchg
mov
xor
lahf
rorl
jle
lret
scas
sub
push
mov
mov
dec
push
in
in
jns
std
lret
mov
imul
push
ret
mov
mov
cmp
inc
push
lock
add
jl
jno
add
jmp
lock
jecxz
mov
xor
pop
push
mov
dec
inc
sbb
das
fnsave
lcall
mov
loop
stos
scas
fcomi
movsl
mov
mov
jl
or
jae
adc
sbb
xchg
mov
dec
fldl
lea
in
punpckldq
lea
call
xchg
out
or
mov
jmp
fcoms
mov
cmpsb
call
mov
icebp
or
mov
push
xchg
mov
sub
pop
jmp
fs
jns
hlt
std
lahf
mov
cwtl
pop
pop
lret
iret
mov
jmp
add
sbb
mov
adc
mov
lahf
cmc
in
mov
imul
jns
dec
and
push
adc
lock
cmp
bound
in
mov
pop
inc
sub
inc
mov
repnz
inc
roll
adc
aas
mov
cld
int
repnz
cwtl
notl
jg
ds
fwait
mov
iret
and
mov
cmp
cmpsb
pop
sbb
rclb
scas
mov
aam
loope
jne
jecxz
xchg
leave
jb
stc
push
mov
movb
jno
cltd
sub
arpl
popa
add
xchg
cmpsb
insl
sub
sbb
lods
enter
or
jmp
mov
mov
pop
dec
inc
int3
mov
push
sti
jbe
int
bound
sub
out
ret
or
imul
js
jg
jge,pn
cmp
call
sbb
push
mov
setno
jb,pt
and
scas
aas
movsl
movsl
repnz
mov
or
sahf
xlat
int
js
outsl
mov
mov
sub
pop
sti
je
in
int
ss
outsb
loope
sbb
mov
lods
mov
scas
cmp
ret
aad
sub
insl
lcall
push
lret
xchg
push
cmp
or
lret
xchg
push
mull
mov
jae
cmp
jb
cmp
das
int3
fstp
xchg
outsl
out
cmp
mov
cmpb
roll
sti
aad
movsb
pop
adc
mov
insb
cmpsl
arpl
xor
ret
pop
jl
test
jecxz
add
fcmovnu
xchg
jmp
sub
mov
push
popa
out
inc
push
xor
repz
xchg
inc
out
push
and
dec
add
out
pop
or
lods
mov
jl,pn
repz
pop
loope
popa
mov
mov
roll
popf
sti
mov
xor
xchg
in
jecxz
add
sahf
jae
pop
pop
clc
xchg
sub
repz
ret
cld
leave
shrl
fbstp
inc
cmc
sub
inc
icebp
mov
adc
scas
mov
jae
mov
lea
filds
stos
jecxz
push
jns
cld
and
jmp
out
stos
xchg
aas
scas
mov
rcrb
push
clc
adc
pop
push
lret
ljmp
sbb
adc
xor
mov
push
out
aad
dec
adc
insb
add
push
in
lea
xor
add
cs
movsl
sub
jb
sarl
flds
lret
inc
jg
mov
push
xor
outsl
inc
addr16
lahf
fbld
pop
call
mov
pop
icebp
adcl
push
push
jmp
dec
les
test
addb
std
sub
lds
data16
into
add
sub
cwtl
dec
cwtl
xor
rclb
pop
lea
cmp
leave
outsl
icebp
cld
mov
fsubrl
sbb
movsb
xchg
out
cmp
leave
fcompl
push
test
inc
inc
inc
movsb
sub
pop
pop
or
jmp
test
fisttps
xorl
fucomip
sub
and
cmp
test
sbb
push
loopne
mov
imul
mov
jl
in
fisttpl
xchg
mov
cs
inc
jmp
and
add
mov
int
mov
inc
fmull
jnp
adc
iret
and
jg
fldl
push
inc
call
cwtl
jnp
scas
rol
shlb
pop
aam
iret
push
sbb
or
dec
fsubl
push
inc
sahf
insb
ret
es
or
js
bnd
pop
daa
mov
popa
repnz
mov
fbld
push
mov
hlt
or
inc
jle
or
jns
mov
repz
cmp
outsl
mov
sub
inc
popa
jb
or
mov
dec
in
hlt
popf
and
ljmp
sahf
popf
test
repnz
sbb
push
dec
push
es
repnz
sub
orl
push
sbb
cmp
sub
push
inc
add
sub
jl
es
repz
cmp
imul
hlt
xchg
dec
mov
ds
xchg
xchg
jmp
adc
adc
jl
xor
xor
lock
mov
out
mov
mov
pop
or
data16
cmp
inc
cmpsl
in
sbb
popa
lret
cwtl
lods
mov
pop
jb
fildll
jg
mov
decl
push
ret
sbb
mov
addb
popa
in
andb
mov
movsl
in
les
jle
xchg
fldl
xor
je
sbbb
loopne
lea
inc
mov
sub
nop
aad
int
loop
or
cmp
cmp
lret
repnz
loopne
push
scas
and
es
cmp
and
pop
push
cmp
sub
sbb
roll
inc
repz
movsl
mov
xchg
bound
and
cs
mov
fisubl
mov
jnp
ret
mov
fbld
shll
aas
sbb
push
inc
sbb
sbb
inc
jno
addr16
cmp
mov
loop
mov
sub
add
cmp
mov
notl
xchg
icebp
inc
or
pop
or
fisttpll
push
rol
mov
and
aaa
cmpsl
add
iret
mov
stos
fcomps
cmp
add
mov
mov
mov
imul
xchg
inc
push
mov
lea
into
pmaxsw
cs
inc
in
lea
mov
mov
mov
jnp
cmp
aas
movsb
popa
scas
sbb
ret
movsl
inc
mov
cmpsb
loope
stos
loopne
push
mov
int
ja
movsb
jns
js
ds
addl
loopne
cld
mov
xor
push
jno
pop
add
in
jns
leave
fldl2t
in
sti
mov
and
fidivs
dec
shll
push
sti
pop
jle
xchg
int3
pop
mov
cltd
movsl
xor
mov
ja
dec
pop
lods
dec
push
hlt
sbb
test
xchg
mov
mov
sub
in
movsb
into
mov
pushf
ficoml
push
leave
sub
fdivrp
out
push
xchg
dec
outsb
or
mov
fstp
fwait
stc
outsb
dec
out
inc
fincstp
adc
icebp
push
cmp
sbb
mov
sahf
jp
addr16
adc
aam
jg
popf
or
call
test
add
push
imul
test
sbb
and
pop
stos
and
mov
or
and
insl
mov
aad
xchg
mov
mov
sub
cwtl
aad
xor
fldl
mov
sti
cmp
ds
and
inc
idivl
out
jae
into
cmp
cmp
xchg
test
outsb
cld
pop
stos
ret
imul
inc
clc
int
cld
jns
dec
adc
mov
fnstsw
int3
or
dec
es
push
jmp
or
nop
add
xchg
addr16
lods
inc
in
out
mov
mov
and
popa
lcall
call
lret
jbe
mov
ljmp
sub
or
xchg
xchg
pop
jnp
sbb
insb
adc
pushf
sarl
fildl
inc
rorb
into
lret
cmpsl
loopne
sub
mov
push
pop
mov
fistl
test
sbb
cltd
xchg
test
and
xchg
inc
aam
punpcklbw
test
inc
dec
cmp
mov
add
aad
adc
pushf
mov
bswap
hlt
cmpsb
xor
sub
xchg
cmp
rcrb
cmp
loopne
popa
mov
sub
mov
pop
jno
pop
cmp
mov
outsl
sub
inc
popa
mov
add
mov
xchg
in
xchg
cmp
sbb
push
std
xor
or
rcrl
or
push
and
frstor
pop
cltd
js
mov
mov
sarl
adc
pusha
mov
stc
inc
cmp
jno
fidivrs
stos
fmull
je
and
adc
dec
imul
mov
fisubrl
xor
push
roll
dec
mov
aad
in
arpl
insb
mov
mov
daa
xor
outsb
and
mov
push
and
enter
ss
or
pop
push
mov
repz
ljmp
or
lods
dec
pop
sub
mov
movsl
in
mov
xor
push
ret
push
das
stos
add
mov
lea
gs
cwtl
push
leave
call
jge
or
lods
add
cwtl
pop
leave
pop
mov
mov
and
std
mov
shlb
cmp
pop
loopne
dec
inc
jge
aam
push
pop
test
xor
jle
adc
adc
insl
ds
into
jecxz
xchg
ficoml
xor
and
pusha
xchg
inc
mov
add
insl
add
std
mov
cli
outsb
dec
ss
dec
test
pop
sbb
sbb
mov
cmpsl
push
push
xchg
addr16
ficoml
jmp
jge
negb
jae
or
cmp
std
mov
in
call
adc
pop
stos
mov
ffree
xchg
mov
inc
int
lock
testl
fnsave
push
andl
addr16
jbe
adc
jge
fs
outsl
or
mov
fdivr
popa
add
xchg
lods
stos
inc
sub
pop
cmp
iret
ljmp
sbb
xchg
inc
inc
pop
sub
int
aad
pop
pop
jb
ret
and
cltd
leave
mov
add
jno
arpl
ficompl
cli
fs
pop
ja
mov
wrpkru
movsl
out
fsubrp
pop
xor
mov
mov
jl
hlt
pop
gs
cs
ret
div
xchg
sbb
mov
icebp
popf
gs
mov
add
adc
insb
or
xor
cltd
mov
das
lods
call
lock
pop
insl
vpshlw
mov
dec
ret
stc
jo
dec
ret
sbb
adcl
fwait
adc
ss
push
adc
or
lock
push
into
sub
dec
fsubs
dec
jns
mov
in
aaa
fistl
or
xchg
adc
mov
mov
insl
dec
enter
mov
and
push
cwtl
mov
fisttps
jecxz
mov
rcll
sbb
insl
mov
shll
inc
inc
sbb
cmp
repz
lret
xchg
fs
imul
push
dec
adc
and
xchg
mov
test
cltd
mov
cmpsb
sti
xor
jl
push
mov
pop
ds
push
push
sub
pusha
jmp
loop
cwtl
inc
sbb
mov
sarl
cmp
adc
sbb
call
mov
cltd
mov
inc
pop
push
imul
test
xchg
jge
inc
lea
push
add
mov
fidivs
push
aas
adc
adc
mov
hlt
mov
xchg
es
xchg
in
mov
push
adc
loop
jb
jecxz
xor
push
sub
xchg
scas
nop
enter
jle
lea
cli
dec
out
aam
add
rorl
dec
fs
push
dec
les
enter
ficoml
inc
data16
out
xchg
cld
xor
mov
out
sbb
das
iret
cmp
in
decb
xlat
mov
pop
fcompl
cmp
sbb
fidivrs
or
and
pop
dec
add
or
cmpsb
and
jg
xchg
lods
enter
repnz
out
dec
nop
mov
ds
mov
mov
inc
sub
cld
cld
mov
repz
xchg
into
cmpsl
pop
xchg
dec
int3
or
imul
clc
inc
mov
inc
cli
or
inc
sub
mov
xchg
cmp
mov
sbb
test
xchg
lcall
add
jle
dec
in
cld
faddl
jge
pop
mov
xor
call
js
mov
pushf
fbld
pushf
mov
and
js
push
and
sub
mov
bound
mov
xchg
mov
mov
pop
xchg
dec
outsl
sub
sub
inc
push
push
in
cmp
push
movsb
jbe
lods
cmp
mov
cwtl
jbe
mov
inc
xchg
aam
insb
cmp
in
test
xchg
ss
ret
jmp
push
popf
mov
cmc
shr
scas
push
push
sbb
xor
sbbl
cmpsl
dec
in
nop
test
ljmp
cld
push
push
negl
shrb
insb
xor
mov
sub
inc
sub
popa
je
push
add
inc
lret
mov
mov
pop
sub
mov
dec
dec
in
stc
enterw
insb
ja
sti
and
xchg
test
call
cmp
in
pop
dec
pop
mov
lret
stc
repz
out
data16
stos
lahf
pop
jge
std
or
fistpll
cmp
dec
mov
pusha
and
xor
daa
stc
aam
test
and
mov
inc
subl
nop
mov
or
lahf
cmp
fs
ds
std
pop
loop
and
orb
push
dec
pop
pop
lcall
mov
pop
inc
push
insb
shrb
rcrb
mov
out
mov
movb
add
and
and
int3
cmpsb
mov
xor
and
jne
pusha
int3
mov
lds
test
je
aad
imul
mov
adcl
xor
mov
outsb
adc
fcoml
bound
fwait
xchg
lret
dec
fcompl
aaa
xchg
dec
fadds
mov
test
mov
xchg
mov
cmpsl
jnp
cld
jns
or
jo
dec
fiaddl
aaa
addr16
in
call
xor
cmp
and
rorl
test
fwait
sahf
mov
out
jl
mov
sbb
ja
cmp
pusha
pop
cmp
fsub
cmp
sub
sub
dec
mov
push
mov
jle
add
mov
jp
jl
sbb
mov
ret
or
and
inc
lahf
jo
or
pop
iret
je
pop
insl
imul
ds
xor
in
xor
add
adc
jl
pop
mov
add
jl
pop
mov
and
outsb
inc
fucom
fstps
les
add
notl
fucomp
je
push
popf
fsubr
lock
stos
cmp
mov
testb
cmpsb
push
cmp
idivb
pop
shl
push
dec
out
fcomi
inc
cld
or
clc
notb
testl
xchg
ror
xor
pop
adc
adc
push
lds
mov
lret
ret
cwtl
inc
add
xor
cmpsb
add
sub
push
sub
adc
mov
ficompl
js
jne
jbe
data16
enter
push
scas
lea
rcrb
repz
lds
sub
shll
lret
or
sbb
jp
outsb
jae
outsl
insl
cltd
add
push
sub
out
scas
mov
mov
data16
incb
mov
mov
aam
repz
jp
xlat
movsl
lods
daa
lret
scas
std
bound
test
nop
fldenv
jmp
aam
or
leave
dec
call
fmull
and
icebp
adc
and
pop
mov
call
fnstcw
xor
inc
out
stos
clc
sbb
dec
cmp
push
test
mov
push
shrb
lret
dec
cld
adc
stos
jl
xchg
test
shrl
mov
mov
and
outsl
aam
pop
stos
ror
mov
out
xor
or
jns
cmp
in
xchg
cmp
test
into
shrl
mov
stos
clc
int3
cmp
pop
stos
inc
and
sahf
popf
insb
fs
or
lods
pop
test
mov
sti
adc
addr16
mov
xlat
sti
ljmp
lods
mov
ret
cmc
xlat
adc
xchg
adc
iret
push
and
jo
repnz
pushf
dec
stc
pushf
xor
lods
mov
mov
inc
loop
xchg
ret
jo
cltd
sub
mov
scas
sub
xchg
and
mov
dec
fwait
sbb
inc
inc
dec
repnz
hlt
stc
iret
inc
and
cs
outsl
mov
add
and
adc
adc
out
in
leave
cli
xchg
or
movsb
scas
pusha
mull
scas
cltd
jecxz
aas
xorl
ja
outsb
inc
sub
lret
cmc
rcr
sub
es
test
sub
nop
cmp
mov
jmp
pop
push
xchg
pop
fisttpl
outsb
jns
popa
sub
dec
adc
sub
mov
push
adc
adc
repnz
push
lahf
in
test
adcb
adc
shr
cmc
pop
fwait
mov
je
push
int
jle
and
push
frstor
insb
dec
mov
test
gs
pop
dec
fs
popf
outsb
pop
mov
xor
shlb
lahf
push
mov
ror
arpl
sub
cltd
push
inc
loope
xchg
mov
cmpb
repz
xor
in
mov
sub
cmp
cs
push
mov
outsb
pop
jnp
jg
and
bound
push
aad
mov
fdivs
aas
sbb
fisttpl
cmp
imul
cmp
dec
leave
ds
repnz
push
inc
imul
mov
and
jecxz
mov
push
popa
mov
mov
in
pop
cmp
mov
jle
dec
dec
out
or
je
mov
mov
mov
notb
pop
pop
bound
lods
test
lds
add
imul
stc
mov
sub
jno
cmp
bound
stos
mov
pop
fs
movsb
sbb
jb
mov
fidivrl
add
loopne
lret
push
repz
push
pop
in
shl
push
dec
pop
cli
pusha
lret
or
inc
arpl
stos
inc
xchg
dec
jns
inc
sub
enter
adc
inc
sbb
push
or
je
jge
inc
xor
xchg
sub
leave
popf
jbe
pop
in
pop
inc
test
js
push
mov
mov
loop
dec
xlat
xor
call
movsl
mov
cmp
cld
push
sub
movsl
movsl
push
fwait
add
jno
cmp
xor
lock
ss
stos
icebp
data16
fwait
sarb
cs
fwait
call
aam
cmp
push
jnp
mov
pop
fiadds
jmp
call
fisubrl
scas
adc
jg
sbb
stc
bound
mov
stc
inc
mov
mov
mov
xchg
cmc
mov
loope
fstps
mov
xchg
nop
lea
cmp
add
mov
sub
inc
sbb
inc
ds
mov
gs
xchg
jmp
in
ljmp
sub
mov
inc
rcrl
pop
out
call
sbb
mov
mov
sti
test
sub
jae
inc
ror
int3
sub
or
in
leave
cmp
xor
insl
lods
insb
or
fcmovne
xchg
or
imul
xor
rcrl
fnstenv
into
iret
fwait
or
add
ss
inc
pusha
nop
std
or
int
into
sbb
dec
cs
lahf
and
pop
lds
dec
mov
cmp
mov
scas
jno
jg
inc
cmp
pushf
loop
imul
iret
jb
mov
ret
sbb
sub
js
fbstp
mov
xor
jno
push
faddl
cli
mov
fndisi(8087
cmpsl
mov
inc
cmp
fistpl
mov
ljmp
popa
xchg
dec
cmpsb
mov
jnp
loope
idiv
cmp
fs
fbstp
mov
mov
popf
mov
rorb
xchg
pop
sbb
jnp
adc
enter
fimuls
lock
sub
pop
jle
fiaddl
fst
push
repz
arpl
popa
fwait
rep
into
cmp
xchg
add
inc
inc
dec
and
popf
jg
inc
jbe
aam
cmp
add
inc
push
cmp
clc
or
mov
int3
pop
push
in
fnstenv
stos
pop
mov
leave
mov
mov
or
push
sbb
inc
shlb
cmp
mov
sahf
jne
and
lahf
arpl
ret
scas
repz
aam
cmp
pusha
mov
adc
mov
out
mov
popf
lret
call
paddq
and
pusha
cmp
mov
jno
pushf
and
cli
lret
inc
cmpsl
mov
dec
push
inc
arpl
aam
and
sbb
push
cmp
scas
out
push
std
lcall
dec
jle
pusha
xchg
in
mov
xlat
lods
add
lret
push
loopne
push
call
in
mov
push
dec
fiadds
fiaddl
jb
push
outsb
fisttps
push
scas
leave
jge
scas
lret
mov
add
stos
push
fdivs
movsl
adc
sub
xchg
mov
cmp
cmp
pushf
push
fnstcw
ja
sbb
push
add
sbb
aas
mov
sbbl
pop
mov
dec
cmp
push
or
fndisi(8087
enter
mov
hlt
lods
sbb
sbb
leave
jae
dec
xor
fists
push
popa
adc
add
adc
xor
out
dec
popa
mov
mov
push
jns
mov
fcomps
cmp
mov
fldenv
out
xchg
call
cmp
and
cld
sub
mov
fisubs
push
xchg
mov
inc
cmc
cli
test
xchg
sub
push
aam
mov
gs
in
ja
mov
cwtl
loope
push
jl
jbe,pt
or
mov
outsb
push
cs
lock
into
pop
push
push
sbb
cmp
aas
leave
cmp
lret
push
stos
sbb
imulb
shr
jp
pop
jg
xchg
mov
mov
pushf
dec
inc
sti
stos
clc
int
mov
push
aaa
cmp
sub
sbb
ficoms
dec
cld
push
xlat
divb
out
inc
jns
push
sub
shr
push
push
les
cmpsb
xchg
xchg
adc
and
or
xchg
call
xchg
loop
daa
cmp
dec
in
addr16
shll
rolb
iret
mov
bound
xchg
lods
ret
adc
insl
and
xchg
addb
pop
ret
sbb
and
jb
sbb
cmc
xor
mov
mov
pop
jl
popa
mov
jbe
dec
adc
sub
jo
fwait
push
and
pop
add
inc
movsl
cmp
push
fs
notl
or
mov
rol
push
and
mov
cmpsl
add
jmp
sbb
mov
inc
cmp
adc
loop
scas
clc
pop
jle
push
jg
jne
fmuls
scas
dec
dec
sbb
scas
cmp
mov
std
pop
push
mov
leave
popa
rcrb
out
fsubl
xchg
lret
das
jmp
push
call
push
pusha
pop
mov
repnz
mov
or
xor
imul
sub
jle
cs
pop
jo
roll
sahf
xor
xor
mov
inc
and
mov
outsl
scas
repz
rcrl
pop
xchg
sub
iret
outsl
inc
cmpsl
jb
cmp
push
mov
dec
iret
xchg
nop
pop
sbb
xchg
arpl
dec
mov
pop
adc
adc
cltd
add
xor
fdivrp
inc
cltd
sbb
popa
cmp
test
sbb
in
imul
mov
xchg
jle
sub
push
pop
xor
daa
clc
mov
mov
aaa
mov
lret
cmpsb
mov
xchg
ss
sti
inc
pop
jb
stc
push
addr16
mov
sbb
xchg
lret
dec
outsl
jecxz
or
lcall
jge
ljmp
loopne
gs
not
lds
jle
push
dec
jmp
sbb
push
mov
je
cs
je
repz
cmp
jbe
push
jb
ss
out
lock
and
rorb
in
pushf
cmpsl
jg
xchg
enter
inc
xchg
fidivrl
cmc
pop
ss
pop
test
and
pop
and
and
cmp
cld
mov
sarb
int
fnsave
out
movsl
mov
and
clc
jnp
lret
cld
negl
lock
imul
xlat
mov
pop
in
sti
xchg
andl
rcll
loopne
sti
jae
inc
mov
cld
imul
mov
stc
hlt
adc
inc
fcompl
pop
fsubr
les
jp
adc
xchg
fidivrl
out
sub
out
pop
push
jle
xor
clc
jle
xchg
test
mov
enter
out
insl
fsincos
push
pop
xchg
out
mov
arpl
jb
lret
mov
addr16
adc
pop
fisttpl
popf
test
ds
sbb
out
mov
mov
ret
add
mov
adc
in
jge
inc
jecxz
stos
iret
or
xchg
js
inc
bound
test
icebp
int
or
push
sbb
movsb
fwait
pop
push
mov
les
mov
test
xorl
mov
xchg
out
lahf
dec
cli
fdecstp
or
push
pop
xchg
jge
cwtl
mov
lahf
test
pop
outsl
roll
xchg
jl
out
outsb
push
jns
inc
in
je
test
iret
pop
push
aad
mov
mov
popa
inc
jp
mov
xor
repnz
mov
mov
subb
pop
mov
jmp
fiaddl
pop
cmp
loope
inc
xchg
fadds
push
sbb
jns
sub
adc
sub
scas
arpl
xchg
cmc
pushf
in
jne
xor
outsb
mov
mov
jmp
inc
sub
lcall
pushf
mov
popf
cltd
ja
cmp
cmp
mov
and
test
cmc
mov
rorb
sbb
nop
pop
dec
xchg
xchg
sbb
mov
inc
inc
cmp
mov
iret
mov
pop
dec
xor
std
sahf
ja
mov
pop
xor
jae
pop
push
xchg
outsl
pusha
mov
int3
jle
sub
mov
setns
mov
out
repnz
jo
mov
mov
sub
lods
pop
movsb
pop
shl
xchg
mov
or
loopne
and
inc
xlat
mov
ljmp
lock
xor
or
and
outsb
pop
push
pop
jmp
fxch
xlat
cmp
pushf
cmp
xlat
aam
aaa
and
shll
addl
cwtl
cmp
pop
fs
pop
push
out
jns
push
lcall
push
cld
pushf
cmp
inc
int
fidivs
sbb
or
out
rolb
das
idivb
dec
mov
inc
jno
sub
cmc
bound
pop
cmc
push
scas
adc
and
dec
aas
stc
popf
or
mov
sbb
add
lods
push
loop
jmp
movsb
ljmp
gs
outsl
sbb
dec
dec
call
dec
movsl
outsb
pop
dec
aam
add
into
cmp
rol
fwait
xchg
mov
mov
inc
leave
das
cs
js
fists
daa
jmp
jg
or
xchg
mov
out
mov
stos
loope
sbb
call
and
mov
adc
pusha
jbe
lock
jno
add
mov
mov
dec
mov
stos
ljmp
jb
sbb
jg
xchg
mov
xchg
jb
fdivrl
jp
sbb
jmp
bndstx
inc
imul
imul
fisttps
loop
pop
iret
lret
aas
jae
jg
xchg
ds
mov
gs
lods
sub
sbb
pushf
mov
aaa
push
in
bound
pusha
call
hlt
test
das
shrb
cmp
mov
mov
mov
jp
cmp
mov
lock
push
pop
adcl
dec
xor
push
add
out
lret
lods
popf
iret
aad
imul
xchg
ss
xchg
popa
inc
add
outsb
push
in
mov
pop
scas
stos
insl
out
fisubl
cltd
adc
adcb
add
sahf
mov
xchg
das
push
jmp
push
cmpsl
sarb
mov
sub
loopne
out
inc
popa
mov
gs
or
cmpsl
xchg
pushf
cld
xchg
xor
stos
arpl
in
cs
lea
inc
in
psubsb
insb
cltd
cld
lret
repz
jbe
push
fimuls
jg
mov
push
enter
push
adc
jle
into
sub
add
stc
fcmovnu
rol
mov
xchg
jge
xchg
decb
das
or
jno
lcall
cmp
pushf
test
mov
pop
adc
call
and
out
jmp
mov
inc
add
mov
cmpsb
mov
out
xchg
or
testb
mov
sub
mov
pop
bound
mov
mov
jecxz
pop
fistpll
and
fidivrl
stc
dec
push
pop
jecxz
push
mov
std
es
lock
jmp
cmc
jno
dec
gs
dec
inc
xchg
jnp
incl
std
push
jl
aaa
pop
sbb
push
mov
cmovo
test
push
cmpsb
test
ss
pop
leave
stos
das
popa
inc
mov
xchg
cmp
cmp
mov
jg
jae
lahf
sti
push
mov
aam
adc
sub
les
aad
in
inc
aaa
pusha
js
push
inc
rcl
or
xchg
and
sub
inc
sbb
xor
inc
jns
push
pop
or
adc
sbb
out
mov
loopne
pop
std
xchg
push
mov
out
rclb
inc
or
push
pop
arpl
sarb
pop
cmp
out
and
push
xor
and
inc
xor
aam
mov
dec
shr
jle
hlt
jecxz
xlat
push
jge
or
and
xor
adc
cmpsl
push
fdivr
adc
inc
je
mov
out
outsb
push
push
adc
lahf
aam
xlat
addr16
addr16
cmp
mov
hlt
call
mov
inc
faddp
pop
or
cmc
arpl
pop
mov
sub
and
jecxz
jle
ja
popl
or
ret
pop
mov
or
pop
out
fwait
cmp
xor
push
jo
popf
ja
outsb
mov
dec
shlb
data16
jle
jns
aam
sub
dec
std
jp
in
scas
maxps
out
push
jge
std
pop
call
cmp
in
mov
loope
dec
jge
sbb
mov
in
aas
mov
ja
aaa
mov
es
int
or
xorl
mov
cmp
pop
xor
cmp
push
pop
dec
mov
nop
aas
jg
adcb
adc
mov
loope
out
mov
and
inc
inc
xchg
movb
xchg
cmp
sbb
jno
fwait
hlt
xor
or
mov
push
aam
inc
inc
cltd
lret
insl
push
nop
jbe
lahf
negl
jns
xchg
cld
xchg
mov
inc
decb
lret
cmp
mov
fstpt
pop
mov
or
xchg
call
cld
repnz
dec
pushf
in
call
pop
cli
mov
cs
pop
in
sbbl
dec
cmpsb
xchg
fildl
in
ror
popf
test
cmp
lock
ljmp
sbb
out
mov
inc
jne
fsubl
cmpsl
aam
sub
push
xor
mov
ljmp
pop
inc
fsubs
sub
and
popa
cltd
iret
leave
mov
mov
test
iret
fwait
iret
hlt
xchg
mov
gs
imul
jge
or
xor
aad
pop
push
insl
js
bound
stos
cs
cmp
lock
jge
rclb
xchg
mov
mov
mov
sbb
sarb
and
adc
nop
loopne
jbe
jb
or
incl
xor
sbb
fnsave
inc
mov
ret
stc
out
stos
push
xchg
sbb
pop
enter
sti
ljmp
mov
jmp
ss
push
cmp
lahf
dec
lahf
or
neg
mov
mov
xchg
xor
xchg
add
fs
aaa
sbb
jns
mov
lcall
ret
jnp
out
sbb
popa
and
mov
dec
add
sbbl
fwait
jmp
sti
jne
ljmp
ja
icebp
push
xor
in
mov
jle
cli
daa
gs
fsubl
lcall
movsl
fldenv
or
cmpsb
and
add
dec
aam
pop
pop
ss
repz
lahf
xor
mov
lods
push
dec
rcr
push
pop
outsl
test
jecxz
gs
fistpl
insl
mov
ja,pt
pushf
xchg
ror
dec
lcall
out
inc
into
ljmp
and
cmp
addr16
je
dec
lret
adc
xchg
js
and
scas
sub
subb
mov
mov
mov
das
arpl
int3
xlat
cld
sub
mov
jns
ljmp
mov
mov
enter
fiadds
mov
push
adc
scas
not
mov
pop
sub
jp
adc
push
jg
mov
insl
in
xor
lcall
and
leave
addr16
dec
je
adc
test
inc
stos
into
insb
rcrb
sbb
add
add
pop
int3
mov
mov
out
pop
jge
popf
xor
or
out
push
jnp
addb
mov
scas
xchg
adc
std
int3
cld
inc
aas
jmp
mov
subb
ret
mull
repnz
adc
fidivl
mov
dec
cmp
jo
mov
dec
std
xor
mov
ret
mov
pop
push
cwtl
stc
jecxz
shll
repz
lfs
cmp
sub
and
xchg
mov
movsl
jg
xchg
nop
adc
lcall
sbb
add
sbb
inc
mov
push
xchg
bound
loopne
push
lret
mov
imul
sti
and
ret
test
or
push
fsubl
ljmp
clc
inc
arpl
xor
sar
sub
mov
stos
cmc
in
jb
cmp
fists
jbe
jne
in
hlt
loopne
pop
jne
cmp
xor
decb
decb
or
lret
es
jnp
pop
push
das
mov
in
in
mov
pop
pop
test
out
shrb
fldcw
xor
out
mov
out
fcoms
mov
or
lods
popa
rcr
les
js
mov
jne
dec
dec
jb
sbb
test
sub
std
das
sti
xchg
movsb
stos
push
push
adc
adc
push
fstl
sahf
das
inc
push
imul
scas
lcall
mov
cmp
jb
sbb
sysret
mov
les
in
mov
mov
ss
mov
stc
sub
lods
imul
dec
cmp
mov
and
adc
and
xor
rcrb
nop
es
pop
jge
mov
lea
mov
cmp
xor
mov
inc
test
sub
data16
insb
jno
insb
xchg
sbb
call
inc
pop
out
xchg
lcall
push
dec
lock
mov
shrb
out
in
jge
ja
lcall
icebp
pusha
jne
and
daa
movsl
pop
sub
jno
into
aas
xchg
cmpsb
outsb
idivb
scas
fdivl
ficoms
add
in
and
add
adc
adc
std
sub
and
mov
dec
enter
or
hlt
aaa
add
addr16
ret
fcoms
mulb
gs
sbb
ss
mov
push
and
or
fldl2e
sub
jmp
shlb
popf
inc
mov
cwtl
jle
mov
out
xchg
fcoms
sti
or
addr16
mov
test
and
enter
cmp
push
out
test
xor
popl
add
in
ret
repnz
shl
pop
loop
dec
pop
and
xchg
imul
xchg
cmpsl
sbb
add
loopne
insl
push
push
xchg
mov
xor
xor
adc
mov
adc
dec
pop
ljmp
and
sub
lret
mov
cli
popa
sub
cmp
mov
data16
push
dec
filds
or
dec
or
aas
lods
xor
dec
outsl
mov
xor
xchg
das
mov
or
pop
mov
enter
addr16
cmp
fsts
sbb
lods
insb
inc
pusha
call
xor
mov
imul
cltd
movsl
push
mov
lods
mov
inc
out
cmp
sub
sbb
ljmp
adc
sub
clc
pusha
push
fsubs
aas
cmpsb
push
add
xchg
inc
ja
cmpsl
lods
icebp
inc
adc
adc
mov
sbb
stos
pop
add
les
lret
jecxz
xor
push
vcvtpd2dqx
test
or
repnz
and
add
outsl
imulb
jnp
sti
push
lea
add
mov
xorl
fdivs
in
lea
jmp
sub
jae
jl
and
xchg
subl
test
or
mov
aas
pop
xorl
mov
movsb
xabort
in
pop
inc
shll
lods
mov
ret
ja
add
fstpt
jl
adc
stos
and
ret
mov
jge
pop
sti
cmc
mov
xor
adc
pop
adc
bound
pop
js
push
push
cmp
popa
dec
test
iret
lret
cmpsl
fidivl
mov
pushf
push
or
dec
adc
cwtl
xor
repnz
and
lret
jecxz
test
pop
jae
stos
jecxz
scas
jmp
lds
dec
aaa
pop
fs
in
insl
sbb
xchg
and
lods
push
xchg
push
sti
fiadds
xchg
mov
in
xlat
test
jns
leave
dec
or
or
mov
call
add
or
jae
cld
or
lock
or
in
add
xorl
sysret
mov
sbb
xor
cmp
mov
add
push
in
push
sahf
dec
or
pop
or
lahf
push
sti
aad
push
and
and
push
jp
xor
lret
inc
loopne
div
jge
jle
jg
iret
jo
dec
push
fucomip
scas
xchg
inc
daa
std
std
or
negl
jg
or
in
out
enter
ss
test
push
cmpsl
clc
jnp
mov
js
or
popf
lret
aad
mov
xchg
push
call
lcall
lcall
pop
xchg
mov
fs
mov
dec
cmc
mov
add
aaa
shlb
dec
icebp
push
shrb
mov
or
dec
in
pop
jmp
pop
stos
jno
inc
mov
push
sbb
daa
call
mov
fldcw
imul
push
lods
aaa
cmc
jl
fs
loop
xor
xor
lret
out
push
cmc
mov
cmp
in
add
mov
mov
push
xlat
ret
mov
stc
sarl
jge
jmp
roll
outsl
cmpsl
push
mov
stos
arpl
mov
xor
push
xchg
mov
xor
test
dec
inc
dec
icebp
pop
das
mov
call
sahf
and
add
or
cmp
sbb
or
xchg
into
jnp
jae
jmp
sti
ja
and
sub
and
mov
ja
out
mov
and
loope
mov
mov
int
xchg
lcall
push
xchg
pop
lods
fadds
shl
mov
mov
stc
cmc
or
hlt
jle
out
iret
fisubs
push
or
lcall
shrl
xchg
xor
loopne
into
sub
por
pop
jbe
xchg
jb
ljmp
inc
int
xchg
and
insl
cmp
xchg
lods
push
repnz
aad
divb
and
repz
das
std
or
imul
and
fwait
inc
stc
out
mov
shr
scas
push
pop
sbb
pop
sub
adc
cld
mov
jmp
sub
test
inc
adc
or
into
pop
in
arpl
mov
daa
in
jns
xchg
adc
mov
pop
jp
xchg
imulb
or
jg
xor
mov
push
jbe
cmp
or
adc
or
mov
fs
and
mov
daa
xchg
fisttpll
fdivl
mov
jl
arpl
ja
outsl
and
jnp
pusha
sti
lds
add
push
jmp
inc
mov
insl
xorl
pop
popa
imul
cmp
inc
call
sbb
mov
ret
les
test
adc
cmp
in
xchg
nop
out
or
mov
inc
mov
int
mov
push
mov
sbb
pop
fcmovnbe
push
insl
push
pop
or
or
out
inc
test
adc
rclb
add
mov
cmpsb
ds
lods
decb
lcall
adc
push
xor
add
js
outsb
dec
cmpl
jmp
loope
jnp
pushf
jp
mov
and
sub
sub
mov
sbb
xor
inc
outsb
cmpsl
dec
xor
mov
jb
arpl
sub
outsl
les
cld
repz
jmp
xlat
negb
pop
cld
xchg
mov
mov
and
jp
popf
out
dec
imul
pusha
jl
fsubl
jl
xor
jae
push
insb
repz
shrb
iret
mov
mov
shll
xchg
pop
sbb
xlat
mov
sbb
filds
mov
mov
inc
lret
cmp
mov
xlat
aas
xchg
cmc
mov
fs
or
push
loop
adc
aaa
cmpsb
push
pop
mov
ficoml
aam
pop
jmp
mov
dec
xor
jno
jmp
stos
or
adc
push
ret
mov
in
jmp
sbb
inc
scas
cmpl
pop
shrl
mov
pop
fdiv
test
mov
outsb
sub
and
add
xchg
jns
stc
dec
insb
jne
ret
xchg
fmulp
idiv
adc
fimull
mov
cmpsl
pop
sub
xor
cmpsl
and
sub
jg
int
push
mov
movsl
loopne
mov
cmc
mov
lea
int
mov
lcall
mov
aad
jp
orl
xchg
movsb
rclb
xchg
loop
pop
xchg
ljmp
inc
push
imul
ss
pusha
stos
mov
mov
sbb
or
add
int
lods
cmc
out
in
mov
xchg
xor
ja
lock
in
push
push
js
movsl
sahf
in
dec
out
lds
cmp
fidivrl
mov
insb
cmp
movsl
jp
sbb
jne
adc
sub
sub
jns
pop
stos
mov
pop
stos
mov
je
mov
fs
in
push
add
sub
push
or
push
test
xchg
xor
xchg
dec
xor
gs
pop
xor
adc
gs
add
pusha
clc
fnsave
cmpsb
jb
insl
add
and
mov
mov
inc
cld
enter
push
fmul
and
and
jmp
call
sti
cmp
cmpsl
repz
gs
loop
pushf
fcomps
in
pop
test
fcomps
cmp
lcall
loope
pop
loop
cmp
xchg
clc
pop
push
sbb
pushf
pop
loop
xor
mov
push
jmp
mov
mov
enter
addr16
test
test
pop
insb
mov
pop
sub
add
sub
lcall
ret
push
ret
xlat
ja
sub
negl
cs
xchg
adc
rcrl
in
rcrl
jl
xchg
push
int
pop
inc
mov
mov
imul
call
jmp
into
mov
push
in
stos
cmp
xor
loop
mov
and
dec
cwtl
scas
sahf
jmp
sub
mov
out
mov
cltd
das
mov
test
lret
lds
outsl
mov
repz
lds
mov
push
out
dec
adc
outsl
fidivrl
lods
test
fiaddl
fcompl
adc
clc
add
mov
mov
mov
mov
das
dec
out
clc
jg
pop
js
cmc
push
aas
mov
ss
pop
out
aad
xor
inc
dec
lcall
push
clc
loope
or
jbe
std
aad
sub
push
mov
inc
outsl
dec
inc
data16
lock
loopne
mov
xor
ret
test
adc
ud1
testl
adc
adc
imul
aam
xchg
dec
out
mov
xor
xchg
addl
cmpsb
iret
jae
gs
jp
not
cmp
inc
insb
popa
inc
mov
test
pop
inc
and
int3
aam
sti
mov
andl
jg
pop
mov
push
stos
ret
xor
jbe
pop
dec
les
ja
ror
in
dec
in
clc
ljmp
cmpl
mov
inc
xchg
insl
adc
out
in
movsb
loopne
gs
adc
js
insl
xor
push
rcrl
cmc
enter
movsb
dec
sub
xor
push
les
inc
mov
dec
pop
push
popf
outsl
xor
aaa
push
sbb
xchg
push
xchg
sbb
xorb
push
rol
sbb
jnp
fisttpll
test
push
leave
imul
jl
das
and
testl
mov
aad
pop
mov
pop
mov
test
push
or
push
jo
xchg
fldl
into
cmpsb
stos
cli
pop
fcomip
dec
mov
jmp
aaa
or
push
stos
ds
das
repnz
sarb
sub
rorl
mov
in
pop
jmp
push
sub
pusha
addb
mov
cmpsb
jne
mov
pusha
repnz
add
int3
pop
or
mov
or
call
push
iret
pop
fnstcw
add
lret
cmp
leave
fisubrl
sub
jmp
mov
aas
xchg
xor
push
mov
mov
push
inc
dec
loope
gs
lods
cmp
xchg
fs
xor
cmc
pop
adc
divb
fbld
in
aad
dec
or
out
cmpsl
es
xor
sbb
dec
gs
call
pop
jmp
out
outsb
add
and
enter
shlb
push
imul
mov
lahf
jmp
je
lods
cwtl
or
add
test
mov
pop
loop
adc
in
aaa
xlat
test
jle
adc
lock
into
jns
lock
add
and
loope
push
icebp
push
xchg
pop
cmc
xchg
out
mov
pusha
cmc
xor
fcmovnb
mov
std
insl
fcomip
adc
fldt
pop
roll
ljmp
dec
dec
xchg
out
cmpsb
rcl
mov
cmp
fstps
mov
or
xchg
mov
lret
adc
std
mov
cmp
jb
sbb
or
data16
es
es
in
scas
cld
jmp
sti
push
cltd
cmp
dec
cld
mov
out
jo
cs
repz
push
mov
mov
scas
sub
das
jbe
aas
not
jecxz
outsl
xor
xchg
daa
push
sbb
lods
inc
mov
enter
xchg
insb
inc
loop
aam
cltd
and
daa
flds
popf
out
and
cmc
or
popf
jo
pushf
and
sti
xchg
inc
xor
loope
rcll
jns
sbb
pop
sbb
pop
das
pusha
js
mov
insl
pusha
cwtl
popa
test
mov
pop
aam
pop
add
pop
push
push
mov
xor
imulb
negb
out
in
add
das
lcall
imul
imul
fwait
xchg
aas
lock
pop
cmp
inc
imul
mov
insb
mov
and
scas
movsl
push
inc
outsl
test
mov
dec
lods
dec
popa
inc
xchg
push
bound
test
stos
fsubrl
mov
loopne
mov
xor
pop
iret
or
mov
sub
mov
out
xchg
push
mov
dec
int
fs
xchg
adc
cmpsb
fsubl
cmp
test
xor
xchg
xchg
sbb
cwtl
das
push
stc
push
adc
test
mov
into
mov
loopne
jmp
loopne
mov
push
pop
pop
sahf
dec
scas
test
lds
cltd
mov
nop
push
jp
add
push
sbb
ljmp
pop
inc
inc
ret
sub
xchg
xchg
pop
mov
cli
inc
xor
xchg
mov
jle
pop
negb
sub
jge
lods
fmul
outsl
data16
imul
dec
dec
lahf
xchg
dec
std
pop
push
pop
repz
xor
sub
dec
mov
out
pop
mov
push
bound
inc
sbb
sbb
xor
jle
cli
enter
jl
and
leave
xor
mov
inc
jge
adc
test
repz
cwtl
jb
jge
in
aam
sbb
jmp
arpl
mov
ror
inc
and
jbe
out
mov
pusha
push
divl
inc
in
lahf
push
in
mov
pusha
jge
push
scas
dec
or
jns
mov
bound
icebp
mov
nop
sahf
pushl
sub
push
cmp
cmpl
xchg
enter
stos
push
js
and
xchg
call
jmp
jnp
lcall
mov
imul
xor
cwtl
negl
jle
call
cmc
dec
enter
xchg
iret
sbb
inc
jmp
sarl
addr16
push
fsubrs
fidivrl
andl
ja
jg
add
ds
jb
pop
sti
and
inc
clc
sub
xchg
and
je
ja
pusha
orl
insl
and
mov
aad
stos
mov
out
jo
mov
dec
es
cli
push
sub
aad
mov
outsb
xorb
pop
xor
loopne
imul
add
stos
neg
push
dec
pop
jmp
cmp
inc
inc
mov
mov
in
cmc
fldl
stos
sub
push
xlat
mov
popa
and
xchg
adc
mov
lret
ljmp
addb
pop
or
cwtl
jno
sub
fcomip
mov
xchg
scas
add
in
sbb
or
pop
add
pop
negb
mov
je,pn
pop
out
aad
out
lock
pop
jnp
dec
fnstenv
scas
pop
dec
add
mov
cli
sub
adc
fwait
das
jbe
or
jge
ret
hlt
out
lcall
leave
popa
test
mov
arpl
les
repz
notb
mov
cmp
xchg
xchg
xor
push
xor
mov
jns
idivb
pop
pop
xor
mov
xchg
xor
fstpl
lcall
shl
scas
fstl
int
xchg
jg
xor
test
lahf
inc
jp
in
dec
push
jnp
pushf
and
dec
aad
adc
clc
sub
mov
pop
inc
cmc
pop
ja
fsubrl
out
sbb
dec
fdiv
fisubrs
jl
xlat
mov
imul
fistpl
dec
push
popa
mov
adc
fstps
movq
cmp
leave
mov
aas
pop
pop
leave
push
and
fsubrl
movsb
pop
mov
fs
lahf
out
pop
dec
pop
into
mov
xchg
push
fldenv
cmp
mov
ss
add
dec
jmp
push
mov
and
xor
mov
pop
std
ret
or
sub
iret
in
sti
fisubs
aad
repz
pop
jmp
or
mov
pop
icebp
xchg
or
sub
outsb
mov
daa
mov
pop
add
adc
std
cld
fsts
xchg
mov
ret
dec
sahf
push
cmpsl
and
jo
push
jo
mov
mov
ja
dec
outsl
das
aaa
and
push
movsbl
repnz
int
hlt
push
cmp
cltd
leave
js
push
in
cmpsb
pop
repz
mov
jmp
int3
dec
mov
div
mov
inc
lret
and
xor
mov
jmp
add
xchg
and
loope
jne
pop
shrb
mov
call
outsl
inc
imul
arpl
mov
and
push
dec
xor
mov
and
push
es
and
loopne
sti
aaa
arpl
fwait
mov
mov
pop
in
inc
fs
popa
sub
mov
mov
and
fstpl
xor
inc
fnstcw
mov
movdqa
pop
or
inc
fwait
cld
inc
stc
mov
jb
pusha
scas
inc
mov
roll
clc
and
fldl
xchg
xchg
fadds
lahf
jl
fs
aas
mov
out
inc
outsl
cli
call
fimuls
and
jbe
pop
divl
dec
inc
repz
or
mov
lahf
adc
in
loopne
orl
jge
jnp
in
dec
jo
xor
icebp
loopne
sbb
jge
aas
call
xchg
mov
rclb
dec
clc
cmpsl
adc
negl
mov
out
cltd
add
cmp
imul
into
mov
out
outsl
std
sub
or
xchg
dec
nop
outsb
xchg
rorl
or
test
sbb
pop
scas
push
mov
jnp
xchg
sbb
cmp
int3
mov
sbb
movsl
stos
and
cld
cmpsl
push
or
mov
cmp
test
or
cmc
stc
out
out
addr16
push
mov
aas
xchg
ds
js
jno
mov
sbb
jl
pop
xlat
mov
adc
mov
xor
xor
sbb
outsl
xor
shl
sub
adc
fbld
xlat
sahf
jecxz
addl
pop
or
outsb
stc
add
test
movsb
pusha
aaa
cwtl
pop
mov
loopne
sbb
mov
scas
mov
je
cmp
bound
jle
enter
scas
popf
mov
mov
jns
and
jp
pop
icebp
and
or
push
sarb
jnp
test
mov
mov
cmpsl
test
mov
loopne
rcl
lods
pushf
pop
adc
call
pop
lock
pop
xor
les
nop
jp
mov
fprem1
xchg
xchg
or
popa
jmp
dec
call
add
inc
adc
sbb
pop
fadd
xchg
pop
cwtl
in
pushf
shrl
scas
fbld
cmp
cmp
gs
lret
mov
cmc
push
xchg
std
sbb
xchg
push
rcll
push
mov
mov
push
mov
test
dec
ror
mov
cmp
pop
aas
aas
jg
add
mov
shrl
fwait
ds
jbe
lock
cmpsl
pop
repnz
shll
sbb
xchg
daa
stos
and
lock
jmp
test
ljmp
movsl
pop
xchg
das
push
inc
je
retw
andl
inc
testl
dec
mov
in
dec
jmp
movsl
mov
outsl
cmc
mov
hlt
mov
sub
pushf
sar
pusha
rcrl
cli
and
or
mov
add
aaa
xchg
sbb
jge
and
scas
sbb
inc
dec
fwait
fdiv
push
out
adc
mov
shll
add
and
jne
jecxz
push
or
cmp
hlt
inc
lret
and
mov
int
das
mov
add
fwait
jae
jmp
or
enter
mov
pop
ja
ficomps
add
mov
push
loopne
xchg
out
sbb
insl
dec
cld
in
sarl
fbstp
sbb
out
aam
in
cmp
inc
lods
add
enter
cli
gs
ret
xchg
icebp
mov
dec
and
adc
jno
xchg
sbb
jbe
push
mov
pusha
mov
push
and
xor
aam
dec
std
lahf
jl
fwait
pop
jge
ret
dec
xor
sbb
jge
mov
push
pop
adcb
sbb
stos
stos
dec
pop
loop
mov
xlat
aam
pop
dec
shll
sub
dec
jge
mov
out
fbld
loop
push
test
fsubl
movsb
xchg
pop
scas
jmp
adc
push
dec
push
jmp
adc
sarl
insb
rclb
pop
and
mov
xchg
cli
mov
lds
das
mov
push
jno
or
mov
ret
adc
clc
test
xchg
dec
out
inc
pop
xor
adc
cmp
and
dec
jge,pn
loopne
les
sbbl
ss
cld
sub
out
cltd
inc
xchg
stos
inc
adc
push
or
or
xchg
loope
testb
idivb
pop
sub
cld
dec
repz
push
lods
mov
mov
mov
hlt
in
and
or
sbb
dec
dec
adc
mov
call
cmpsl
jmp
mov
pop
dec
aas
clc
sbb
lods
jb
mov
cs
cli
mov
mov
jg
and
cmpsb
jmp
jmp
sbb
lock
xor
fsub
imul
mov
imul
das
repz
push
aad
nop
push
and
pushf
mov
js
out
scas
fldcw
lods
jno
scas
xchg
repz
imul
mov
cmp
cltd
leave
cmpsb
pop
mov
sbb
sbb
jg
out
jno
mov
sbbb
outsb
add
les
addr16
setl
notl
les
or
ja
adc
data16
sbb
mov
aam
repnz
or
test
add
repnz
fnstenv
push
xor
sub
mov
fisttps
setno
or
adc
int
sar
dec
popa
push
lea
movsl
xchg
stos
lret
mov
push
mov
jns
push
lret
jnp
test
sub
pcmpgtb
inc
stos
pop
out
xor
in
lea
mov
nop
mov
and
add
fimuls
movsb
cmpsb
push
daa
rclb
mov
fcoml
loopne
in
push
aam
lret
dec
mov
pop
adc
mov
push
jne
sahf
jmp
inc
pop
xchg
xorb
js
movsb
mov
mov
jmp
jo
cmpsb
fistpl
ja
add
xchg
adc
pop
mov
outsb
jg
and
pop
inc
ret
or
jg
mov
jnp
data16
lret
sbb
pop
cmpb
mov
fists
mov
in
loopne
inc
inc
rorb
push
inc
sti
pop
dec
testl
test
cmp
jno
std
lret
jmp
mov
push
pop
dec
lahf
insb
cmp
mov
cmpl
cwtl
sbb
push
fildll
std
outsb
loope
in
sub
xchg
pop
arpl
arpl
sub
gs
daa
cmpsb
les
jbe
dec
ja
mov
xchg
ret
ret
repnz
fstp
mov
xabort
hlt
jbe
adc
nop
mov
sbb
fstpt
xor
lret
lret
push
push
mov
in
xor
inc
rcl
bound
xor
or
sbb
out
jmp
loope
fisubrl
bnd
push
leave
xchg
or
jae
outsb
dec
ljmp
test
lret
shr
sub
ds
xor
pop
in
cltd
lock
addr16
leave
fidivl
mov
es
incl
xor
adc
sbb
lock
enter
mov
lahf
jns
jbe
jbe
loop
dec
push
mov
inc
fldt
mul
mov
mov
jmp
out
push
cmp
dec
fstl
jg
push
pop
xchg
mov
mov
cmp
inc
push
rorb
cwtl
call
mov
outsb
loopne
rorb
ffreep
stc
hlt
dec
es
xor
cmp
shlb
clc
mov
cmp
jne
mov
loopne
push
adc
or
fnstenv
es
iret
pop
push
adc
in
fs
fsubp
push
dec
sub
test
adc
xchg
je
pop
in
inc
mov
cli
adc
or
fmuls
mov
std
pusha
shrl
mov
test
scas
iret
out
mov
lea
rclb
jmp
out
pop
xor
scas
lcall
jecxz
cli
shll
es
sub
aas
sbb
inc
aam
mov
lcall
jmp
jnp
mov
and
iret
fmuls
xchg
jno
xchg
push
test
ret
fisubl
fisttpll
or
inc
mov
mov
stc
or
jne
addr16
stos
push
ret
stos
sbb
fnsave
or
xchg
repnz
int3
lods
mov
jnp
test
ss
lea
xchg
scas
shrb
out
pop
out
cmpl
dec
sti
fsub
inc
bound
lret
mov
fistl
inc
cmpsl
jle
sbb
jge
cmpsl
pop
sbb
mov
repnz
pop
leave
lods
into
call
movsb
jmp
sbb
mov
outsb
xor
inc
and
or
int3
cli
sbb
pop
jg
cmpsb
inc
jp
subl
mov
sbb
mov
xchg
mov
sub
sub
push
nop
mov
mov
mov
inc
aaa
dec
fstl
daa
je
roll
or
xor
mov
imul
imul
in
pop
adc
mov
je
jno
jle
loope
inc
mov
sub
in
mov
lds
fsubrl
jp
or
xor
dec
insl
jno
std
mov
xchg
scas
push
xor
stc
loopne
cmpb
lcall
pop
stos
mov
xor
out
pop
dec
mov
fadd
sbbb
lcall
sbbb
lods
mov
lock
push
xchg
jns
repz
nopl
jo
nop
loopne
sub
aaa
lods
out
and
adc
inc
arpl
pop
cmp
jb
dec
sub
jns
stc
cmc
sbb
inc
idiv
mov
mul
cmc
sbb
pop
rcl
out
or
jmp
pop
jne
addr16
xlat
jns
rorl
aaa
clc
add
pop
sub
xor
push
xchg
data16
xor
sub
inc
push
lods
leave
mov
mov
adc
push
lea
stos
and
je
jecxz
movsb
ja
div
fwait
sub
int3
bnd
fwait
out
in
jae
mov
pop
js
scas
enter
cmp
fisubrl
test
sbb
icebp
fimull
cmp
jl
sub
dec
mov
cli
stos
and
sahf
and
jmp
pop
sbb
pop
stos
insl
mov
or
pop
iret
std
adc
stos
sbb
push
ror
test
inc
xor
cltd
lret
push
pop
idivb
out
jmp
push
mov
fs
int
mov
and
inc
xchg
scas
xchg
stc
push
jle
popf
jmp
mov
cmp
fisttps
rcl
test
mov
stos
xor
scas
mov
xchg
sbb
jl
jg
fcoml
xchg
push
xchg
rorb
jae
xchg
push
jmp
stos
push
repz
lret
xchg
sub
rcll
jne
out
add
add
inc
add
push
inc
add
push
sbb
xlat
lock
lds
inc
jbe
push
and
data16
out
out
inc
sub
jnp
in
push
idivb
mov
hlt
insb
pop
mov
push
mov
mov
pop
mov
insl
mov
rcrl
sbb
andl
mov
jg
cwtl
push
mov
push
fstl
arpl
fldenv
jp
push
inc
jae
filds
mov
dec
mov
rcrl
xchg
inc
ja
sub
push
hlt
xlat
sbbb
xchg
shrb
loop
cmp
xchg
loop
inc
cmp
mov
sub
enter
mov
mov
js
mov
add
mov
imul
mov
vmovntps
jb
incl
in
lret
cmp
adc
sahf
out
pop
test
pop
pop
subb
in
push
movsb
fnstcw
cmpxchg
shld
mov
cwtl
xchg
fsubs
mov
daa
test
mov
scas
or
xor
ret
cmpsb
dec
add
or
mov
lods
addr16
adc
gs
data16
inc
shrl
gs
test
mov
sub
stos
mov
mov
inc
scas
mov
sar
ds
push
sub
iret
stos
push
xor
addr16
mov
jbe
mov
std
into
in
shrb
dec
divb
aad
inc
out
dec
dec
mov
pop
pop
sarb
cs
mov
xlat
cwtl
fs
ljmp
inc
scas
sub
js
fisubrs
js
mov
stos
lret
inc
mov
sti
xchg
lcall
cmp
cs
xor
cli
dec
push
push
mov
arpl
and
jle
int3
lahf
outsb
sbb
pop
rorl
cmpsb
subb
xor
jns
dec
and
out
scas
inc
cmp
in
mov
sbb
mov
popa
pop
mov
adc
call
pop
movsb
lods
pop
and
push
imull
sub
add
push
inc
mov
mov
ljmp
inc
sbb
sti
jl
jg
out
jg
insb
es
aam
movsb
dec
ret
in
lahf
cmp
lahf
outsl
iret
sbb
sbb
lahf
movsl
mov
rcrb
je
test
sbbl
xchg
pop
inc
cld
test
dec
loop
stc
and
lods
xlat
and
inc
dec
sbb
fstl
cmp
sbb
xchg
xchg
cvtpi2ps
incb
push
fsts
test
subb
xchg
iret
daa
push
iret
pop
or
es
xor
scas
inc
and
sub
mov
xor
cli
cmp
lcall
adc
or
sti
push
adc
mov
aaa
push
mov
and
mov
or
mov
shll
mov
repz
pushf
inc
add
dec
and
sub
stos
push
push
jb
insb
lret
test
jecxz
mov
mov
cmp
or
addr16
cmp
push
xorb
xchg
sub
hlt
rcr
adc
in
or
loopne
popf
pop
cltd
fsub
out
imul
insb
shrb
lods
dec
out
mov
dec
std
fistps
cmpsl
cmpsl
jle
out
int
shll
and
mov
or
jne
outsl
out
sbb
lock
adc
push
adc
and
xchg
push
push
scas
popa
lsl
scas
enter
mov
out
xchg
cmp
daa
or
mov
xchg
and
pop
cmp
jp
or
adc
inc
sub
stc
cmc
jo
sub
movsb
movsl
rorl
scas
and
ja
mov
fildl
lock
call
arpl
es
fimuls
iret
and
iret
jecxz
xchg
cwtl
jnp
pop
or
je
jmp
or
enter
adc
popa
xchg
adc
mov
out
jecxz
cmp
cwtl
testb
fidivrl
mov
inc
iret
jle
sbb
push
jge
lret
jg
adcb
adcb
popa
push
hlt
xchg
ret
cs
bound
xchg
push
imul
fwait
inc
mov
sti
xor
inc
xor
mov
sub
stos
mov
lea
sbb
shll
pop
and
jg
adc
inc
mov
pusha
int
clc
bound
push
push
je
mov
xor
xchg
mov
cwtl
jb
push
cs
dec
cmpsb
shlb
flds
mov
mov
mov
cmp
mov
mov
and
iret
xchg
cli
mov
sub
xchg
fisubrs
jne
in
ret
xor
inc
and
mov
push
pop
inc
cmp
or
and
or
and
mov
and
lahf
out
es
stc
dec
pop
sti
insb
jb
jae
inc
sbb
inc
iret
adcl
pop
or
rcl
call
enter
int3
pop
sbbl
adc
imul
mov
mov
sbb
jg,pn
lods
lret
push
popa
fdivrl
bound
outsb
sub
out
lock
jnp
repz
xchg
cltd
lahf
sub
pop
mov
cmpsb
es
or
cmp
inc
mov
sub
insb
rcrl
jge
push
xchg
push
push
daa
xor
stos
and
xor
mov
xchg
cmp
inc
mov
mov
pop
sub
xchg
push
sub
sarb
imul
or
inc
or
lds
dec
cmp
int3
mov
adc
push
insl
cmp
mov
ret
or
xor
jo
bound
test
sti
movsb
sbb
lds
sbb
hlt
mov
jns
aam
enter
cmp
sub
aaa
clc
sbb
addr16
inc
vpsllw
out
mov
xchg
int
std
cli
or
jnp
mov
jg
sti
add
std
sub
pusha
inc
push
push
dec
xchg
sarl
pop
adc
cmp
dec
sbb
out
mov
imul
xchg
jns
gs
jnp
out
sbb
lock
mov
insl
dec
fidivrs
dec
sub
sti
scas
pop
adc
jb
in
jge
and
scas
lret
and
push
fstp
test
data16
pop
fists
mov
sub
mov
cmp
and
lods
out
or
mov
notb
rorl
jp
sub
pop
repz
xchg
rorl
sub
in
arpl
pop
out
xor
jne
inc
dec
gs
mov
jno
push
cmpb
jg
stos
mov
pop
and
ds
shrb
popf
jns
je
out
insl
or
shrl
jno
repnz
in
mov
jl
mov
fidivrl
jno
or
pop
mov
cltd
outsl
cltd
std
ret
out
jle
push
sub
adc
pop
out
jbe
add
mov
out
cmpsb
dec
ljmp
or
push
fsubrs
sarb
out
inc
and
jns
add
fcmovne
ds
dec
add
or
mov
sbb
add
dec
lds
inc
gs
aas
popf
xor
xchg
mov
arpl
mov
imul
lea
pusha
iret
ds
mov
sti
inc
jmp
and
sub
inc
adc
push
cli
cltd
addb
fnstsw
mov
mov
movb
xchg
or
mov
dec
lret
insl
jp
mov
jb
in
aas
imul
movsl
adc
cmp
fcom
fst
in
dec
lds
cmp
jae
sar
push
stos
jb
das
sub
int
mov
push
stos
xlat
cmp
vmovntps
jecxz
mov
mov
iret
jns
imul
das
addr16
outsb
sahf
jmp
inc
pop
stos
fmull
inc
sarl
into
cmp
sub
fdivrp
ret
aam
xchg
ss
ds
test
scas
ret
xor
addl
xor
sbb
sub
xchg
test
outsl
addb
ljmp
nop
out
push
inc
jmp
arpl
pop
sahf
das
xchg
scas
test
scas
daa
dec
aaa
rcll
adc
or
dec
aas
out
sub
cld
nop
int
sub
mov
and
rorl
add
mov
sbb
add
xlat
mov
shrb
lds
frstor
ret
dec
cltd
dec
test
jb
and
sbb
outsl
dec
incb
add
lcall
mov
out
mov
pop
fsubr
jle
popa
mov
dec
out
ja
xchg
jmp
mov
jbe
dec
add
sbb
or
pushf
jo
xchg
fstp
xchg
rcrl
sbb
testl
cmp
movsb
in
sahf
add
fwait
jp
push
repz
out
mov
adcl
out
int3
lahf
daa
es
out
aam
jne
mov
incb
inc
pop
pop
mov
fbld
test
jp
push
movsl
or
jno
out
xchg
xchg
pop
jp
mov
lods
dec
popa
inc
mov
in
add
ret
cmc
or
add
aam
sub
insl
aas
icebp
or
movsl
dec
cmp
notl
mov
pop
sbb
jno
or
fisubrs
inc
pop
mov
xchg
sbb
mov
jno
inc
jp
mov
add
cmpsb
adc
push
mov
popa
out
sbb
pop
ret
pop
adc
xchg
scas
push
jg
shr
or
iret
sbb
shl
int
aaa
lock
addr16
sbb
test
stos
mov
mov
or
dec
std
rclb
sahf
aad
ss
add
mov
xor
mov
cmp
or
cmc
test
push
pop
call
test
insl
mov
sbb
es
pop
mov
je
imul
outsb
adc
dec
insb
loopne
xchg
add
push
jmp
call
cmp
pop
cltd
daa
adc
xor
std
sbb
pop
mov
jle
cmpsl
mov
les
mov
push
cli
sub
xor
cmc
push
cmp
and
xchg
add
orb
mov
and
test
andl
inc
scas
int3
mov
std
rorb
and
inc
jge
repz
repz
mov
mov
jp
cmpsl
mov
js
fnstsw
jbe
aam
jbe
inc
fidivrs
fsubl
stc
sub
xchg
stos
adc
mov
push
xlat
pop
pop
fdivrs
adc
pop
pop
push
pop
dec
lock
ror
sub
xchg
mov
hlt
jge
movl
cltd
mov
mov
les
push
inc
cmp
pop
mov
iret
jb
or
data16
jle
cmp
inc
xor
jnp
inc
inc
out
jl
lahf
ss
mov
dec
fsubrs
sbb
cmpsl
bound
jne
dec
dec
arpl
mov
inc
arpl
sbb
dec
sbb
sub
mov
add
outsl
jno
xor
inc
ret
sbb
into
xor
ja
xor
pop
aas
test
shlb
ficoml
push
push
iret
dec
rol
sub
in
jns
sbb
lds
add
addr16
push
mov
jb
or
inc
insl
js
pop
call
sbb
cmpsl
dec
cmp
sti
negb
inc
loopne
cli
inc
repnz
cmp
inc
bnd
adcb
inc
sbb
xor
call
pop
push
lods
and
cli
and
in
cmc
add
scas
sub
cmpsb
cmpsl
std
cmc
mov
std
sarb
shrl
imul
inc
icebp
cltd
das
pop
jb
loop
jmp
jnp
aam
push
mov
inc
mov
in
scas
pop
mov
cmpsb
mov
inc
scas
mov
or
push
mov
mov
rolb
push
jae
rcl
repz
inc
out
mov
rcrl
sbb
in
shll
sahf
xor
mov
mov
push
dec
lds
push
xlat
testb
sarl
add
mov
add
adc
jp
mov
jg
test
movsl
xor
push
xlat
jbe
push
int
push
xor
inc
push
jg
std
cmc
aad
aas
push
xchg
das
push
mov
popf
add
mov
stos
loop
loopne
dec
adc
add
inc
repnz
push
adc
adc
fisttpl
inc
into
add
mov
int
push
rclb
std
fsubrs
xchg
and
jno
faddp
push
out
xor
mov
sbb
push
xlat
in
scas
out
cli
dec
xchg
add
lahf
popa
jmp
cmp
test
jne
lods
xlat
icebp
stos
fnstsw
jnp
rorb
or
scas
lcall
inc
mov
cltd
cmpsb
cmp
fwait
mov
lds
push
negb
std
mov
out
or
mov
das
push
inc
fdivs
inc
push
inc
aaa
mov
jle
dec
jo
test
stos
and
mov
test
push
enter
insl
pop
in
popf
pop
cmp
xor
xchg
sbb
sbb
cmpsl
pop
sahf
push
roll
pop
aas
lret
xor
xchg
mov
add
dec
push
loopne
jae
sarl
out
repz
pop
test
dec
ror
mov
sti
push
es
mov
ss
push
iret
lock
cmp
push
or
mov
icebp
fidivl
mov
jp
in
mov
cmp
outsb
xchg
and
aad
ficompl
sbb
imul
popf
in
inc
ror
lock
out
addr16
je
lods
mov
aas
and
jg
ror
lods
movsl
mov
fmuls
pop
xor
nop
imul
push
jle
enter
xor
pop
sahf
shll
mov
inc
push
mov
mov
dec
or
test
lret
repz
movsb
xchg
push
cs
mov
push
divl
mov
clc
frstor
test
mov
loopne
jmp
lahf
push
xor
xor
sti
repnz
dec
daa
xchg
adc
mov
out
clc
sbbb
and
jle
std
inc
dec
aam
mov
test
push
push
ja
sbb
test
leave
es
jnp
gs
fsubl
sbb
cli
out
fsubrp
cli
fcomip
outsl
sbb
cmpl
mov
out
cld
stos
cmp
mov
fsubrl
pop
push
jae
jno
js
std
ja
jmp
inc
pop
adc
push
jmp
repz
jne
repz
jnp
ljmp
clc
jno
std
mov
out
out
or
std
dec
sarb
clc
mov
testl
lcall
push
xlat
lock
cld
pop
jne
mov
jecxz
cmp
lahf
push
jnp
dec
aad
repnz
jmp
lods
pop
push
mov
push
xor
iret
loop
out
and
out
cmc
jno
mov
adc
push
jmp
adc
test
add
in
push
jecxz
cmp
fs
outsb
cmpsb
xchg
sbb
push
pusha
das
loop
lods
add
popa
jae
inc
sarb
loopne
push
fsubl
iret
adc
stos
xor
lds
shlb
out
addr16
push
sub
shrl
lods
in
loop
loope
lahf
shr
sub
pop
loop
pushf
jle
dec
lock
arpl
dec
lea
mov
xor
or
xchg
aad
push
fadds
sahf
scas
sub
lret
jecxz
cmpsl
stc
ret
mov
lds
or
into
lds
das
ds
inc
fwait
fdiv
arpl
adc
sub
pusha
mov
cmpsb
int
or
mov
test
jmp
gs
sub
test
pop
jmp
xchg
sahf
sar
and
ds
push
insb
adc
adc
adc
inc
xor
ja
shll
mov
xchg
sti
stc
imul
enter
dec
inc
cmp
xchg
mov
mov
int3
test
jle
mov
gs
popf
jne
shrl
xor
pop
jbe
xor
xchg
lods
xchg
mov
jno
or
inc
push
ja
mov
loop
xchg
mov
push
pop
sti
dec
test
out
or
inc
jge
gs
cmpsl
in
xor
nop
mov
rclb
cmpb
aas
mov
js
fwait
js
cmpl
adc
ficoms
lods
xchg
lods
push
xchg
mov
mov
pop
int
mov
lods
inc
mov
ss
sbb
lcall
jb
xor
jp
or
mov
xor
and
es
mov
mov
fnstcw
sbb
leave
lea
jecxz
add
mov
lock
push
or
and
hlt
rorl
ja
repnz
fimull
jnp
and
scas
jg
cmc
popa
popf
in
sbbb
cmpsl
cmp
dec
jno
aaa
in
cmpsl
sbb
mov
and
sub
xchg
jg
inc
sbb
sbb
jnp
xor
repnz
mov
jnp
inc
cltd
sub
fiadds
mov
aas
fs
enter
dec
jg,pn
push
aas
xchg
xor
in
cmp
xchg
inc
xor
adc
aam
fs
sub
xchg
clc
imul
jl
adc
in
mov
inc
iret
mov
add
call
ficoml
popf
pop
push
pop
sbb
push
mov
insb
outsb
fstpl
cltd
push
aas
xchg
add
dec
adc
sbb
adc
sbb
enter
rcll
xchg
hlt
movsb
aad
std
push
cli
or
jbe
mov
lock
dec
aam
jb
mov
sbb
inc
stos
outsb
movsb
clc
pushf
add
sbb
push
mov
jno
xor
sub
nop
mov
cmp
ret
stos
xchg
dec
and
adc
mov
cmp
inc
or
mov
enter
aam
sti
jno
std
push
ljmp
adc
xor
jns
pop
lcall
outsb
subb
add
jecxz
push
stc
loop
lods
iret
jbe
lds
or
imul
sbb
lock
imul
cmpsl
inc
xchg
addr16
jg
jns
je
int3
ja
stos
pop
jo
mov
jae
rolb
pop
fstpl
loop
mov
mov
and
lret
rolb
pop
inc
lds
mov
push
xor
imul
jae
clc
xchg
jns
dec
outsl
sahf
loop
movsl
out
cmpsb
push
sarb
leave
and
cmp
mov
mov
sbb
cmpsb
jp
cltd
enter
jns
shrb
stc
js
xor
sub
ret
and
sbb
and
lcall
ret
insb
push
inc
xor
test
cltd
push
jo
mov
xor
cmp
ds
mov
adc
jmp
pop
fcmovnbe
xor
hlt
push
jp
mov
fsts
dec
add
mov
rcrl
and
jbe
fnstenv
lods
mov
pop
jne
lods
mov
sbb
jmp
xor
mov
imul
cmp
push
jge
addl
jecxz
and
aas
repz
in
fcomps
xchg
adc
fidivl
or
insl
sub
jg
js
pop
xor
pop
scas
jp
lcall
imul
xlat
sub
rorb
jo
add
mov
xor
repz
sub
mov
sub
mov
and
pop
negb
mov
cmpps
mov
dec
repz
jne
jg
push
mov
repz
dec
mov
stos
shrb
xlat
sub
stc
fcompl
jg
mov
fcomps
inc
push
rcr
cmp
mov
hlt
pusha
in
jmp
rcr
jb
dec
and
je
ficoml
mov
mov
add
push
xor
fiaddl
jmp
add
jne
jne
jmp
jge
in
push
xor
cmc
pop
subl
stos
push
add
mov
push
xor
mov
push
jp
push
pop
ds
gs
repnz
lods
mov
pop
lea
fs
sub
jae
out
loop
xor
or
mov
test
mov
sbb
icebp
pop
insl
and
cltd
in
sbbl
mov
imul
sbb
fidivrl
adc
push
icebp
aad
jns
mov
cmp
pop
icebp
xor
cwtl
xor
outsl
sub
mov
int
cmc
push
adc
hlt
mov
xlat
hlt
add
push
push
sbbb
jg
cmp
data16
dec
leave
adc
fs
xchg
das
frstor
int
stos
sbbl
das
stc
jle
mov
dec
aaa
cld
jne
and
push
and
dec
ljmp
fdivl
pop
jbe
shlb
out
adc
repnz
sbb
jle
lock
xlat
loopne
push
popf
outsb
mov
inc
psubusw
pop
negb
or
mov
dec
pop
mov
or
jmp
ljmp
out
dec
adc
push
psrad
jb
pop
mov
cmp
stc
insl
jne
addb
cmpsb
sbb
inc
xchg
sahf
out
repnz
out
scas
push
or
or
jecxz
icebp
sbb
scas
popa
dec
jle
insl
scas
sbb
mov
and
movsl
movl
test
cmpsl
dec
pop
jecxz
iret
sub
pxor
adc
push
xchg
cs
and
imul
loope
insb
inc
sbb
inc
jb
xchg
imull
jmp
jb
jle
test
adc
pop
iret
cmp
xchg
lods
icebp
push
lods
sub
lret
add
jp
adcl
push
mov
test
and
mov
jge
sub
push
je
pusha
jne
loopne
lods
inc
pop
in
adc
test
push
movb
inc
test
inc
and
sbb
out
mov
lods
test
aas
jp
lea
out
aaa
jo
jmp
je
outsl
mov
and
hlt
push
sbb
mov
jbe
ficoms
or
xor
xor
cmp
lcall
gs
push
std
repnz
repz
push
ss
cmp
scas
arpl
inc
adc
dec
in
sbb
fbld
push
int3
inc
lods
fnstsw
jnp
sub
jae
sub
lea
pop
je
rep
push
decl
or
mov
sub
push
pop
insl
lods
push
and
mov
out
mov
in
push
inc
add
cmp
dec
inc
ss
mov
pop
inc
push
cmpsl
sbb
aam
cld
sbb
out
pop
push
adc
mov
pop
imul
mov
xchg
cmp
outsl
and
imul
mov
and
xor
and
xor
lret
test
xor
pop
lods
pop
xlat
scas
fsubr
fcmovb
xor
fildl
sti
jl
stos
call
idivl
outsl
mov
ja
incb
xchg
test
out
rclb
sbb
les
fists
mov
jg
cli
jle
sub
enter
inc
dec
int3
lea
loop
in
sub
cltd
je
rorb
stc
int
iret
loope
mov
repnz
mov
mov
sub
inc
sti
cltd
mov
or
xor
ljmp
adc
sub
mov
fs
xchg
popa
insb
stos
in
aaa
push
inc
push
cld
jle
daa
ja
xlat
push
inc
sti
jne
insb
mov
imul
insb
pusha
fistps
pop
inc
jmp
aas
daa
mov
and
xchg
scas
xchg
inc
or
dec
xor
jmp
imul
mov
test
push
jg
pop
xchg
and
test
icebp
mov
arpl
mov
xor
mov
fidivrs
cmpps
sbb
xchg
push
inc
sbb
out
out
jbe
insb
icebp
sbbb
cs
mov
cmpsl
sbb
cmc
loop
push
inc
sub
jnp
pop
mov
push
push
pop
push
ss
out
iret
sbb
inc
in
es
fdivl
das
push
cli
ror
jne
and
jnp
addr16
and
lahf
stos
insl
cli
or
adc
test
rclb
data16
cmpsb
sti
ljmp
mov
jl
in
arpl
inc
jmp
out
sub
or
in
shrl
aaa
fiadds
repnz
mov
pushl
repnz
jno
mov
sub
movb
mov
test
fildll
aaa
dec
xchg
and
push
gs
aas
mov
in
push
push
out
into
adc
xchg
mov
movsl
jnp
out
test
mov
mov
cli
in
dec
mov
inc
imul
mov
mov
cmp
xchg
xchg
lods
xchg
mov
sar
mov
mov
add
ret
sarb
pop
jl
scas
rol
in
fdiv
inc
int3
jno
int
push
sbb
mov
or
pop
jno
hlt
lret
popa
cmc
fldt
xor
lods
cli
sub
cmc
pop
sbbb
jle
ljmp
push
and
icebp
daa
adc
xchg
mov
pop
or
xrelease
push
aad
dec
add
movsl
jns
jae
jns
je
push
mov
rep
pop
stos
in
addr16
inc
orl
pop
inc
test
gs
bound
mov
push
repnz
mov
lods
cmp
xor
in
dec
iret
divb
cmp
lods
sahf
inc
mov
mov
test
ret
mov
push
inc
stc
jo
imul
aas
cmpsl
mov
inc
mov
cmpsb
cmc
enter
pop
loope
scas
mov
jnp
add
or
mov
jne
jl
mov
mov
in
or
push
sti
in
ljmp
dec
push
add
sub
sub
push
rcll
cmc
inc
sbbb
loopne
dec
test
or
sub
out
pop
scas
lret
outsb
loopne
lahf
int3
push
mov
enter
movb
rorl
mov
ret
call
jge
sub
fwait
add
mov
les
push
cwtl
inc
fldl
jmp
sbb
pop
fcmovb
ret
fsubrs
stos
lret
mov
inc
jle
add
add
js
repz
xor
in
mov
sbb
add
lds
ljmp
out
cmp
add
adc
aaa
pop
stos
mov
out
popl
stc
sahf
test
les
jmp
fsub
jns
stos
jo
mov
lods
aam
or
and
adc
cmp
adc
cmpb
sub
push
sbb
cmp
mov
lods
and
lds
adc
rorl
shrl
mov
cmpsl
mov
movsb
aam
lcall
je
mov
aas
sub
into
or
add
out
in
dec
jl
stc
nop
leave
and
pop
xchg
das
dec
dec
ret
leave
inc
mov
mov
lahf
loopne
loop
or
ficoml
lahf
mov
insb
adc
and
cmpb
ud2
outsl
out
inc
jg
ss
loop
nop
inc
movsb
pop
jg
call
test
jp
sub
in
lret
cmp
aas
outsb
fildl
push
xor
and
sub
clc
xor
xchg
inc
aad
incl
stos
xchg
sbb
jl
xor
add
sbb
imul
rol
das
xchg
mov
mov
sub
push
aam
xchg
nop
or
adc
inc
fldenv
sub
in
xchg
pop
jae
gs
test
fs
sub
xchg
xor
out
sti
mov
jno
outsb
in
mov
andb
jb
rcr
mov
mov
xchg
sarb
repz
js
jb
inc
xchg
push
loop
mov
stc
dec
jo
xchg
fadds
mov
pop
lea
fildl
sahf
push
sti
xor
pop
and
dec
pop
es
mov
push
jo
in
das
iret
icebp
xchg
test
into
hlt
adc
stc
add
jbe
cmc
xlat
fucomi
mov
inc
cmp
cmp
add
cmovp
in
xchg
data16
lock
mov
outsl
sahf
sub
insl
dec
push
rcll
lock
pop
sahf
or
mov
mov
mov
cltd
sub
out
pop
lret
mov
or
dec
cld
imul
pop
scas
fdiv
mov
inc
dec
cld
sar
sub
das
fadd
out
jmp
cmpsb
dec
mov
add
pop
fildl
and
jecxz
mov
dec
lret
mov
cmpsl
xchg
add
mov
cwtl
pop
xchg
xchg
dec
jmp
jge
and
in
cmc
stos
fldcw
jno
adc
xor
std
xor
inc
movsl
in
repz
in
call
out
xchg
inc
rolb
pop
jns
addr16
fisubrl
out
and
xchg
push
pop
sbb
clc
insb
ds
push
mov
lods
movsb
scas
int
sti
lods
jb
icebp
lret
fwait
add
pop
and
and
push
pop
negb
aam
pushf
cltd
pop
lret
sbb
inc
adc
sub
mov
adc
jnp
scas
dec
push
adcb
xchg
cmp
mov
mov
mov
mov
into
sbb
sbb
test
pop
and
adc
loop
push
cld
cs
pusha
jns
scas
jnp
ljmp
sub
mov
mov
ss
pop
pop
leave
pop
ljmp
mov
rcrl
push
adc
fisttps
inc
lea
mov
aas
xchg
dec
mov
jl
or
xor
add
mov
mov
jbe
subb
bound
daa
push
pop
sti
add
pop
stc
fcmovnbe
pop
in
xlat
stc
sbb
outsb
outsl
out
pop
fmulp
test
ja
cmpsl
jb
cmp
mov
stos
pop
loope
sahf
or
xor
cmp
mov
repz
sub
and
add
dec
fisttpl
mov
xchg
leave
fnstsw
fbstp
shlb
call
xchg
pop
xchg
aaa
ljmp
mov
pop
push
push
xchg
push
call
mov
pop
mov
lahf
mov
test
fwait
sub
cmp
jmp
xchg
pop
cs
inc
mov
xchg
dec
push
movsl
adc
in
out
jns
push
insb
fstpt
and
gs
mov
xor
addr16
dec
xchg
jg
lcall
pushw
mov
jl
nop
ficoml
mov
and
lea
push
insl
loope
test
inc
int3
sbb
cmpb
jmp
or
cli
and
add
imull
xchg
data16
pop
fnstcw
lret
mov
cmp
shll
aam
out
dec
xchg
inc
add
and
clc
nop
jg
ffree
int3
iret
imul
jbe
lods
insb
lock
out
pop
outsb
and
and
outsb
fimuls
lcall
sub
adc
in
fwait
cmp
mov
lea
and
cld
jmp
mov
xchg
mov
enter
mov
test
jle
xchg
popa
mulb
add
cli
outsb
push
inc
adc
aaa
add
cmp
test
push
ja
xor
pop
pop
ror
sbb
imul
loop
popa
mov
mov
loopne
fimuls
loopne
jno
cmpl
push
sti
xor
out
sbbl
testl
sub
pop
xchg
mov
cmp
fcomi
stos
fldcw
pop
push
pusha
sbb
jns
gs
popa
lcall
dec
cmpl
scas
mov
das
int3
cs
aas
stos
pop
sbb
jle
jne
inc
leave
movsb
jo
in
out
rorb
push
shlb
sub
je
cmpl
adc
fsubp
or
es
sbb
pop
sbb
pop
add
pusha
in
mov
enter
inc
inc
ja
jo
loopne
dec
push
in
insb
mov
mov
mov
cli
xor
mov
pop
dec
mov
aam
pop
pop
pop
xchg
jp
cld
lock
gs
push
pop
pushf
lock
dec
in
add
lock
mov
fninit
inc
mov
inc
cmc
lock
popa
shl
lock
jle
mov
jmp
mov
fdivs
in
and
add
push
pop
mov
movsl
lea
push
cmp
jl
pop
push
mov
enter
std
xor
inc
jp
pop
negb
or
inc
cmp
ret
xchg
ficoms
lods
pop
test
jmp
out
loop
je
cmp
nopl
test
jno
xchg
and
and
ret
repz
cmp
ljmp
rcl
ss
popa
es
cmp
pop
push
and
jns
pop
out
ds
lret
mov
inc
add
inc
push
insl
out
testb
xlat
mov
pop
lret
clc
lds
fnstenv
push
xor
mov
mov
scas
leave
sub
dec
addr16
mov
cmp
bound
mov
mov
gs
arpl
shll
sub
dec
test
loope
enter
cwtl
pushf
mov
lret
or
mov
sahf
leave
insl
jno
repz
repz
pop
int3
pop
fs
ror
pop
jb
aas
cmp
iret
dec
insb
and
ljmp
inc
jg
test
or
and
mov
mov
rorb
push
shr
dec
out
out
sub
lret
loop
aaa
dec
sub
dec
inc
ljmp
shl
orb
mov
mov
fcompl
and
and
aas
lock
rcrb
hlt
rcr
mov
sbb
shll
pop
sub
sahf
cmpsl
testl
cs
sbb
sub
lods
dec
xor
js
les
push
push
icebp
jmp
call
rorb
push
shlb
loope
fstpl
shr
add
in
ffreep
shl
cmp
xor
or
mov
mov
cmp
mov
adc
xor
stos
cwtl
call
lahf
scas
dec
lret
lea
cwtl
mov
mov
les
push
inc
mov
lock
mov
cmc
adc
in
or
push
mov
std
or
ret
mov
sbbb
cltd
cmp
loope
les
adc
add
aad
sbb
rolb
push
mov
ja
movsb
xorl
call
lahf
mov
int3
xor
test
cmp
fs
imul
cltd
shrl
jbe
and
xor
sbb
cmpl
cmp
dec
and
fsts
mov
fsubrl
jb
jp
scas
inc
dec
lret
outsb
notb
inc
mov
cmp
es
js
or
mov
sbb
pop
xchg
cmp
aas
inc
or
or
mov
mov
xchg
cmpsb
dec
xlat
dec
pop
jnp
pop
pop
jne
lcall
insb
call
mov
lahf
ret
ja
pushf
inc
in
xchg
pop
cltd
push
and
inc
adc
xchg
cmp
pushf
movsb
decb
adc
sub
push
dec
shlb
outsl
rcll
mov
cmc
xor
test
out
jp
jae
mov
cmp
iret
jmp
cmp
sub
pop
popf
lods
mov
xor
jg
clc
pop
pop
neg
pop
ja
divl
das
mov
jbe
adc
or
adc
pop
mov
xlat
sbb
sbb
inc
adc
fildl
adc
test
mov
fbstp
lods
popf
pop
movsl
push
push
fstpt
insb
pop
cmp
sub
xchg
addr16
mov
xchg
movsb
mov
mov
out
jns
cs
clc
ret
jmp
pop
xchg
cmp
xchg
scas
push
icebp
push
arpl
sub
fidivs
cmp
lock
repz
outsl
sbb
pushf
pop
jo
xchg
jae
xchg
mov
enter
mov
dec
cwtl
dec
sti
fistl
dec
mov
cmp
scas
pop
ret
ljmp
add
mov
cmp
imul
pusha
pop
outsl
insb
and
mov
pop
sub
cmp
scas
add
and
and
stos
cmp
cmp
loop
insb
pop
repz
mov
imul
add
pushf
mov
js
sub
cmpsb
sbb
popa
mov
pop
fistpl
out
scas
sbb
mov
push
adc
ret
dec
mov
fwait
nop
push
xchg
cmp
ljmp
pop
jbe
jnp
sbb
ret
lods
loope
clc
int3
xor
xlat
mov
popf
xor
cmpsb
repz
and
sub
push
mov
aad
fsubrl
cmp
out
adc
fcomps
jae
mov
push
pop
xchg
sbb
outsl
adc
pop
xchg
pop
or
inc
pop
inc
clc
push
xchg
les
dec
insl
mov
xor
outsl
lods
xor
inc
in
cmp
mov
hlt
dec
pop
fcmovnbe
mov
push
lea
or
push
in
mul
es
xchg
mov
xor
hlt
or
ja
jmp
jecxz
in
in
or
lret
or
fdivrs
and
out
outsl
mov
sbb
data16
cmp
lea
je
iret
adc
shll
loop
ficoms
pop
push
sbb
or
mov
into
test
in
sub
test
push
jge
mov
sub
mov
std
fdivrl
cmp
rclb
xchg
leave
lret
iret
jg
pop
push
into
pusha
cmp
cmp
mov
sbb
pop
dec
into
ret
in
jmp
andl
push
inc
in
scas
popf
mov
xor
pop
jl
mov
adc
cmpb
into
pushf
adc
xor
sbb
sbb
sub
cmovle
fstpt
lea
lock
cld
int
stos
je
lahf
xor
rclb
mov
mov
cmp
adc
xor
fadd
lret
mov
push
or
movsl
mov
mov
or
test
mov
cli
imul
mov
iret
push
hlt
mov
bound
sbb
sub
jmp
pop
jmp
icebp
jmp
pop
in
jmp
and
push
ds
inc
push
pop
fst
pop
adc
inc
or
push
test
leave
mov
and
xor
clc
add
push
mov
cmp
fadd
int3
mov
leave
mov
out
sahf
pop
mov
js
xchg
sbb
fwait
dec
mov
xor
mov
dec
fwait
adc
push
outsb
pop
cmp
daa
xchg
je
shlb
dec
dec
sti
outsl
subb
shrb
lds
lret
int3
and
add
xchg
scas
mov
push
jl
pop
push
cmpsb
mov
in
outsb
jmp
scas
rorb
adc
dec
insb
mov
js
push
shl
cli
cmc
cmp
fstps
rcrb
scas
test
jne
mov
mov
mov
stos
push
push
aad
mov
sub
out
stos
or
cmpl
cmp
in
outsb
sbb
adc
arpl
insb
xor
mov
pop
cmp
add
ret
icebp
gs
mov
iret
mov
mov
pop
jp
cmp
xor
mov
sahf
inc
loopne
inc
mov
jns
adc
rolb
jo
rolb
mov
mov
jnp
mov
inc
ret
push
push
popf
scas
addr16
fwait
outsl
outsl
mov
ret
fisubs
xor
cmp
pop
mov
call
cld
sub
dec
fldt
mov
fsubrl
cld
pop
ja
mov
xchg
out
adc
shrb
mov
mov
xor
insl
inc
std
imul
mov
sub
mov
xchg
ds
push
sahf
dec
dec
insb
movsb
es
pushf
inc
push
xchg
rorb
hlt
fs
test
stc
xor
fidivrl
push
ja
icebp
push
and
das
mov
daa
int
xchg
in
or
inc
mov
push
mov
sub
and
fidivs
lahf
pop
cld
jl
sub
or
push
or
add
shr
jo
rolb
push
fistpl
mov
adcb
xor
sbb
lcall
cmpl
aas
push
sub
cmp
cwtl
insl
lods
inc
pop
out
lret
fimull
stc
cmp
inc
aas
fwait
sbb
xor
faddp
or
pop
cmp
jmp
add
shrb
sub
scas
jb
or
cmpsl
stos
in
popf
inc
and
dec
ret
jle
cmc
aam
stos
and
scas
jnp
lahf
shlb
or
xor
mov
bound
ret
scas
jo
inc
pop
ret
stc
and
dec
out
jl
movsl
repz
xor
xchg
mov
push
push
sbb
lds
xor
or
mov
stos
insb
into
jg
jl
data16
pop
ja
in
scas
stc
jbe
mov
in
mov
cld
mov
cmc
jnp
xchg
fs
mov
and
hlt
sbb
outsb
sub
or
psubusw
les
mov
xor
mov
xchg
jnp
mov
std
loopne
xor
out
test
mov
sbb
fwait
loop
sub
mov
aas
mov
daa
cmp
dec
add
pop
jecxz
rcpps
sub
loopne
ret
shrb
and
jp
movsb
xchg
ja
in
mov
cmp
sub
jecxz
cmpsl
pop
addb
call
cs
dec
jo
dec
xchg
imul
jmp
mov
dec
lcall
fs
xchg
and
ret
out
cmp
fcoml
push
pop
push
jge
dec
cs
shrb
xor
pop
call
jnp
stc
push
pop
push
xchg
lea
push
or
sbb
loopne
add
sub
xor
out
and
dec
loope
or
sbbl
daa
mov
or
fbld
aaa
je
leave
xchg
int
pop
jo
sub
and
cwtl
pop
mov
das
xchg
jns
xor
arpl
and
add
std
and
out
and
negl
int
es
mov
jns
testb
mov
jge
and
stos
loopne
add
dec
shrl
pop
cld
aam
test
rcr
cmc
ret
push
in
and
jmp
fs
call
loopne
lcall
cmp
adc
push
je
js
pop
shlb
arpl
dec
aaa
xor
jo
mov
fucomi
js
les
sub
inc
mov
and
mov
inc
imul
xor
add
and
mov
and
push
dec
sub
test
pop
or
frstor
scas
mov
leave
pop
push
ss
sbb
cltd
call
lea
daa
ss
sti
cltd
cmc
inc
lcall
mov
out
lahf
iret
jnp
out
into
addr16
lret
out
ja
lahf
jecxz
loopne
popf
xor
mov
lods
jl
lret
and
sahf
cmp
and
add
sbb
cmpxchg
xchg
mov
scas
out
leave
mov
adc
sahf
std
movsl
xor
fsts
pop
sti
dec
pop
sti
mov
sub
outsl
arpl
arpl
or
push
mov
mov
mov
mov
ficoms
out
mov
or
lahf
imul
jb
or
xchg
jbe
pop
dec
iret
shlb
dec
add
add
lcall
dec
leave
aaa
push
std
fstps
sub
test
fwait
mov
int
in
lods
mov
mov
inc
xchg
jbe
mov
mov
scas
sbb
popa
insb
lds
push
adc
push
addr16
sub
ja
mov
pop
dec
fcom
mov
add
jbe
inc
ljmp
xchg
pop
cmp
cmp
pop
inc
fidivs
out
test
ja
fwait
adc
lds
mov
jle
out
out
or
cmp
out
cmp
fcom
xchg
in
rcrl
clc
sti
ffree
aad
and
mov
lret
cltd
xor
std
insl
xor
xchg
call
dec
mov
hlt
pop
xor
cmp
xchg
shlb
push
lods
jae
and
pause
leave
int3
push
mov
dec
sbb
ja
addr16
lahf
sbb
iret
fistps
out
add
xchg
outsl
in
pushf
bound
adc
mov
psrlw
and
dec
mov
or
sub
mov
push
or
sbb
es
out
and
js
divb
aam
sub
and
mov
or
jns
fidivl
into
js
call
ret
xor
insb
stos
in
cmp
in
js
in
mov
pop
mov
lea
or
js
test
mov
or
mov
lcall
mov
cli
sub
repnz
fiaddl
add
in
add
popa
outsl
fbld
pop
in
hlt
or
scas
mov
fists
inc
pop
xchg
aas
push
pop
jb
sub
and
sti
inc
in
test
fdivrl
pop
out
push
stc
scas
or
cmp
jecxz
xchg
bound
notl
cld
bound
inc
insl
shll
fdivrs
inc
cltd
dec
sub
xchg
and
dec
repnz
mov
sbb
scas
mov
xchg
mov
gs
xlat
testb
insl
inc
rcll
xchg
ss
or
lea
push
or
mov
sbb
cmpl
test
jp
pop
fucom
int3
outsl
mov
cmp
or
stc
fmul
cli
int3
sub
jmp
inc
or
es
aam
daa
mov
in
stc
adc
cmc
cmpsl
pop
es
mov
pop
xor
mov
dec
push
pop
outsb
mov
aas
xchg
xchg
loopne
in
stos
add
rcrl
lods
sbb
cmc
mov
mov
mov
cmp
fisttpl
adc
pop
scas
out
mov
mov
cs
cmp
sbb
mov
xchg
int
xchg
push
subl
xchg
and
and
lods
repnz
cmp
adc
mov
mov
push
cmpsl
lret
cmp
pop
sahf
mov
orb
jnp
stc
mov
in
popa
aas
negl
and
and
out
mov
enter
inc
pushf
or
xor
cmpsl
and
lahf
fxch
adc
scas
js
int
out
ljmp
incb
add
mov
fimull
iret
je
jnp
adc
insb
mov
or
cmc
push
ljmp
lahf
mov
fdiv
in
dec
fbld
push
jmp
mov
rorb
pop
sub
xchg
and
fcomps
mov
lds
jo
mov
sub
and
lret
imulb
movsb
fstps
and
mulb
or
ds
iret
push
push
arpl
flds
fmull
pop
and
mov
in
lods
jnp
int3
push
bound
pop
lahf
roll
std
sbb
cs
pusha
sti
fsubl
mov
jle
xchg
add
movsb
add
mov
jne
xor
jg
sub
testl
sub
inc
icebp
or
arpl
orl
incb
xchg
rorl
int
mov
test
push
outsb
ljmp
ds
aaa
fldt
gs
jmp
lock
stc
mov
xor
mov
fmul
or
popf
fcmovb
adc
icebp
inc
jg
mov
xchg
and
sub
or
lock
or
sbb
mov
ja
jo
cmp
lahf
jmp
fwait
jmp
scas
dec
or
xchg
fmuls
jmp
dec
inc
outsl
add
xor
cmp
js
dec
xchg
adc
jbe
mov
cwtl
bound
jb
dec
xchg
in
sub
jl
cmp
hlt
jb
pusha
inc
neg
in
mov
add
shl
cwtl
fstl
or
in
in
imul
xlat
lock
cltd
add
fwait
dec
xor
and
push
lret
shll
adc
inc
jp
cmpsl
jecxz
fmull
cmp
cmp
rorb
loope
out
jae
movsl
loope
cmp
jbe
jl
mov
int
neg
popf
out
cmpl
mov
hlt
add
les
roll
insl
cmpsl
inc
jmp
inc
dec
into
into
push
sub
mov
lods
subb
icebp
inc
rolb
mov
pop
inc
gs
lcall
mov
loopne
sub
mov
jns
jg
mov
ss
mov
sub
pop
jmp
in
outsl
insl
mov
roll
andl
je
test
or
bound
xor
jmp
push
adc
gs
mov
lcall
sbb
into
std
es
xchg
mov
adc
lahf
cmp
adc
mov
sbb
sub
adc
test
cmp
jl
push
sbb
dec
stc
ljmp
out
mov
xor
cmc
adc
mov
sbb
stc
jl
jg
ffreep
mov
add
xchg
repnz
bound
rorl
sarl
ds
add
push
xchg
lret
xorl
das
loope
xchg
mov
dec
push
cmp
cli
loop
mov
sub
loopne
inc
das
mov
in
mov
lods
sahf
inc
dec
nop
mov
imul
rclb
mov
and
sbb
jae
imul
cmp
insl
outsb
or
xor
mov
sub
repz
cmp
in
jg
inc
xchg
ljmp
jle
push
icebp
dec
inc
int3
add
and
mov
testl
sub
pushf
enter
pop
xlat
add
mov
aad
iret
aam
shlb
mov
sub
jno
popa
xchg
and
push
jle
mov
cmpsb
xchg
and
jnp
rcll
jae
je
ja
add
faddl
js
fucom
or
jnp
and
push
cli
add
adc
jae
cmp
cmc
jne
pop
mov
mov
sub
dec
addb
je
aaa
movsb
fs
xchg
xor
fmul
pop
push
shlb
ljmp
repnz
cmp
and
push
dec
jle
and
loopne
cmpl
pop
and
sbb
add
loopne
movsb
cs
pop
cmp
push
add
pushf
jg
xchg
lcall
fdivrp
loopne
xchg
in
fcoml
les
stos
xor
ss
out
mov
ja
jmp
cmpsl
add
test
jl
dec
pop
dec
push
push
es
pushf
pop
data16
xor
jns
sub
int
sbb
xor
addr16
lret
mov
adc
outsb
in
cli
cmpb
lods
outsl
adc
push
mov
out
in
dec
out
xor
ss
scas
shlb
dec
wrmsr
aas
push
dec
push
xchg
xchg
pop
cwtl
in
int3
xchg
ljmp
test
pop
xlat
xorb
mov
into
lods
xlat
ss
outsl
jb
out
cmpsb
add
ret
cwtl
insb
add
push
mov
je
shl
sbb
inc
cs
daa
inc
jecxz
mov
jmp
cli
xchg
inc
repz
out
addr16
addr16
mov
ljmp
dec
push
cltd
hlt
cmc
or
mov
lock
xlat
pop
jp
jns
lahf
inc
sti
push
in
xchg
pop
xchg
lret
or
mov
sub
mov
out
dec
sbb
lods
add
test
mov
aas
mov
cmp
xchg
push
out
push
xor
xchg
cmp
insb
lea
lret
pushf
incl
ret
adc
lods
sub
mov
jns
fadds
mov
inc
add
mov
pop
imul
mov
sbbb
lcall
inc
hlt
xchg
in
jnp
sahf
xchg
xchg
pop
addr16
lods
inc
loopne
jae
sbb
adc
fmul
repz
ss
enter
stos
cmp
mov
rcrl
inc
ss
dec
lds
mov
test
push
ja
addr16
cmpb
push
jg
xor
and
mov
scas
mov
xor
into
orb
dec
mov
cwtl
mov
pop
ficomps
inc
inc
js
je
mov
adc
aas
push
and
stos
push
or
test
lea
lcall
inc
mov
add
mov
adc
aad
lret
sbbl
jl
xor
push
test
test
test
popa
inc
sbb
cltd
add
ret
jo
dec
cmp
and
sti
mov
inc
lret
mov
clc
push
and
add
xchg
jle
push
aaa
cmp
loope
pop
in
pop
lahf
and
sarb
or
pop
test
fwait
mov
aas
jo
and
jbe
mov
movsl
xor
or
inc
add
in
lahf
pop
fimull
popa
lcall
dec
stos
jmp
dec
or
and
mov
jbe
ret
int3
pusha
jno
mov
sub
cmp
adc
mov
test
ret
int
xchg
bound
pop
aad
std
jno
lea
sbb
mov
adc
inc
icebp
jbe
ds
mov
popa
add
pop
and
out
cmp
insl
add
add
jmp
mov
sub
dec
xor
pushf
dec
ljmp
daa
cli
inc
test
stos
adc
push
cmc
aas
cmpsl
jg
pusha
in
in
mov
hlt
iret
cmpsl
inc
sarb
ljmp
cld
push
cli
aaa
call
jge
into
arpl
out
xor
loop
into
adc
jle
test
int3
ljmp
test
jo
rcrl
iret
cmpl
das
mov
mov
adc
test
xchg
mov
dec
popf
xchg
add
aas
mov
xor
sub
testl
mov
push
je
mov
shlb
or
adc
in
dec
jno
sub
sti
loope
aam
dec
rdpmc
mov
movsl
jge
dec
dec
popa
mov
outsl
xor
or
in
hlt
pop
add
push
addr16
mov
scas
rol
push
pushf
gs
or
fisubrs
rol
fwait
cmpsb
mov
test
out
sub
mov
mov
aad
lret
bound
loop
xor
je
dec
pusha
push
jecxz
xor
shlb
ljmp
outsb
cmp
xchg
pushf
sahf
xor
iretw
icebp
cld
and
ja
in
std
sbb
xlat
jg
into
or
arpl
cs
jb
push
xor
call
movsb
push
dec
mov
ret
cmp
imul
xor
mov
push
sti
mov
push
popf
dec
mov
mov
push
hlt
shlb
fidivl
lods
xlat
xchg
neg
rcll
xchg
in
stos
imul
lret
and
lods
xchg
imul
and
push
sub
mov
inc
push
lret
mov
add
pushf
not
dec
ret
jmp
arpl
push
scas
sub
je
mov
insb
sahf
movsl
lret
mov
mov
mov
pushf
dec
xchg
push
repz
pop
inc
jg
js
fs
ljmp
out
mov
sbb
rorb
add
es
sbb
jo
xor
mov
dec
mov
loopne
push
jae
pop
dec
jno
dec
mov
push
adc
mov
test
ljmp
rol
push
ficomps
cmp
fcmovu
mov
push
fbld
pop
mov
xchg
lcall
aam
push
mov
inc
xchg
out
test
lret
mov
test
pop
sub
mov
addr16
inc
pop
jns
out
mov
sub
nop
mov
sub
fimull
jecxz
sub
sub
insb
xchg
dec
icebp
fwait
xchg
sbb
mov
push
std
sbb
lods
ret
xchg
sbb
cli
lods
mov
je
lods
jle
cwtl
mov
inc
jle
pop
lds
rcrb
leave
push
inc
xor
mov
ljmp
lds
push
aas
or
xchg
dec
pop
pop
push
das
jae
enter
sarb
mov
sbb
les
fistpll
adc
fildll
sub
lret
mov
es
xchg
cld
xchg
jnp
leave
fwait
jge
push
dec
jl
test
lock
subl
dec
stos
or
rcrl
fwait
imul
pop
cltd
pop
push
addr16
loop
lea
cmp
stos
sbb
dec
shr
mov
decb
mov
repz
rcrb
in
and
es
lret
rcr
enter
cmpsl
sar
cmp
lods
inc
pop
nop
stos
dec
adc
leave
mov
pop
and
sub
imul
adc
jp
in
stos
xchg
or
or
cli
sbb
pop
inc
stos
lods
cmc
mov
mov
fildll
mov
out
outsl
negl
rcr
push
push
push
popf
ljmp
iret
pop
xchg
cmpb
push
popf
lods
cmp
xor
in
pop
test
mov
insb
push
js
shll
or
cmp
ficompl
jnp
push
in
add
ja
in
insl
mov
push
jge
cli
mov
cmpsb
jecxz
sti
ja
aaa
lods
mov
jae
lods
mull
std
mov
xor
cmp
jp
sahf
cli
fistl
sarl
loopne
jl
out
loop
insl
mov
lods
out
jmp
or
scas
clc
lods
or
loop
dec
xlat
add
xor
subb
test
mov
orb
jno
cmc
adc
inc
in
adc
push
mov
lods
gs
jns
push
cmp
pop
xlat
mov
call
inc
cmp
ljmp
cmpsb
shlb
out
cli
dec
leave
repz
mov
push
out
inc
mov
cmpsl
xor
jnp
push
mov
rcrb
scas
xor
jg
xchg
cmp
std
mov
xchg
enter
cli
clc
push
sbb
cli
xor
push
mov
test
inc
mov
stos
and
cmp
hlt
fucompp
sbb
pusha
mov
mov
cmpsl
pop
inc
pop
aaa
jmp
cmc
sti
xchg
push
pop
push
mov
shr
stc
test
stc
cmc
addb
leave
jp
and
rcrl
xchg
adc
fstpt
push
scas
pop
adc
adc
daa
or
icebp
lcall
clc
das
iret
jle
pop
add
into
loope
sub
sahf
jo
push
lcall
mov
sub
cmpl
insb
aas
cld
push
cmc
decl
lcall
lea
subb
mov
mov
pop
pushf
jle
cmp
in
mov
fsubrs
scas
inc
movsl
daa
pop
cmp
dec
aam
jbe
imul
clc
pop
sbb
jmp
fdivrl
mov
cli
pop
mov
adc
inc
or
push
mov
cs
jb
repz
xor
sbb
std
jmp
movsb
cmp
adc
or
data16
fmuls
add
xchg
cmp
loopne
pop
sahf
push
cmp
jns
push
jmp
sbb
inc
xchg
hlt
adc
add
adc
sbb
push
push
call
mov
mov
testl
xor
int
xchg
sbb
inc
or
insb
stos
aad
push
dec
xchg
fwait
mov
jo
sbb
jecxz
fsubrs
aad
dec
fisttpll
stos
jno
iret
add
add
mov
and
cmc
addr16
push
pop
pop
clc
xchg
mov
jp
mov
movsl
push
aaa
xlat
push
dec
lahf
ja
sbb
popa
and
or
in
dec
jae
les
and
mov
fcoms
dec
sub
xlat
adc
add
inc
fistpll
cmpsb
xchg
add
or
push
mov
push
jns
cmp
in
pop
ret
scas
xor
push
lret
cmpsb
mov
outsl
out
push
ret
pusha
push
cmp
xchg
push
out
aas
sub
les
fstpl
stc
push
xor
push
stos
jp
jecxz
dec
push
cmovl
inc
cmp
loop
movsl
mov
xchg
popa
sahf
lret
sub
inc
add
fsubrs
pop
jecxz
sub
lock
clc
stos
fs
mov
fisubs
rclb
jp
pop
dec
mov
insb
adc
ljmp
cmp
jecxz
les
sub
out
xor
push
gs
iret
test
xchg
adc
xchg
add
shrb
xchg
cli
std
cmp
push
test
cld
rolb
ss
xor
cli
vminps
cmp
daa
cwtl
fldl
xor
dec
cli
mov
orb
loop
xchg
in
pop
stos
test
imul
test
data16
leave
outsb
pop
xchg
jb
out
nop
in
leave
mov
cmp
sbb
mov
lods
or
inc
inc
sub
pop
mov
dec
mov
into
dec
cmc
dec
inc
enter
xchg
jecxz
leave
xor
sti
adc
xor
xor
xor
xor
fld
incb
mov
leave
xor
notb
je
jbe
div
ljmp
pop
sahf
adc
and
rcll
cli
jne
jecxz
push
incb
push
notb
inc
push
outsb
icebp
notl
loop
xchg
push
inc
sub
dec
push
jbe
in
adc
dec
xchg
sbb
or
fsts
mov
jle
push
insl
mov
outsl
add
outsl
out
shl
es
adc
stos
xchg
cwtl
push
sub
sbb
mov
insl
icebp
xor
jo
stc
scas
out
cli
pop
je
fwait
jl
pop
jne
cmc
dec
rcr
int3
out
push
je
cmp
or
aam
add
mov
mov
shrl
call
aad
mov
cmpsl
cs
mov
pop
add
fsincos
adc
push
add
push
mov
cmc
pop
negl
lcall
xor
imul
or
add
dec
repnz
out
jle
xchg
shll
inc
adc
cmpsb
sub
dec
mov
or
add
out
ss
mul
sahf
xor
cld
mov
lods
out
sti
adc
shlb
rcrl
mov
and
ds
mov
in
sub
jno
sub
cli
enter
sub
push
test
xchg
xchg
lret
fadd
js
icebp
stc
xlat
mov
jmp
or
pushf
test
inc
push
sbb
dec
or
fidivl
dec
arpl
mov
push
ret
mov
mov
mov
mov
pop
pop
pusha
xchg
jle
jp,pn
or
jae
loopne
mov
jecxz
dec
popa
testl
dec
push
push
sub
jp
pushf
sub
mov
and
daa
sarb
mov
add
subl
icebp
xlat
jl
pop
rcr
in
xchg
es
xor
popa
add
ja
sbb
loop
imul
sbb
jecxz
xor
mov
clc
sbb
push
xorl
cltd
jnp
push
xchg
adc
xchg
lds
orl
rcrb
xchg
repnz
outsl
sahf
mov
jmp
js
dec
mov
out
stos
sub
fdivrs
push
insl
stos
aaa
bound
and
dec
stos
aaa
jecxz
ret
or
test
rclb
mov
pushf
adc
lea
enter
popf
dec
stc
dec
dec
cwtl
inc
in
add
sub
pop
adcl
pop
das
rcl
xchg
fldl
mov
out
or
lcall
insb
dec
mov
rcll
cmpb
xor
data16
loop
inc
in
cmp
push
push
xchg
mov
clc
test
rorb
sbb
fnsave
in
lods
mov
imul
jge
cli
cs
sbb
inc
mov
jle
or
dec
loopne
fdivrl
and
inc
ret
mov
lret
inc
push
cli
inc
mov
imul
mov
int3
cmpsl
out
pop
aam
dec
pusha
sub
xor
hlt
rcll
pusha
incb
addr16
hlt
xor
pop
cmp
mull
loopne
add
mov
jno
push
out
cmp
je
sbb
or
jge
dec
dec
sbb
test
jo
inc
inc
jae
mov
jge
pop
mov
sub
shlb
pop
call
sbb
fistps
outsb
arpl
pop
push
iret
xor
or
ss
xchg
fstpt
jp
dec
pop
xchg
cmp
fidivs
repz
mov
inc
pop
sub
xchg
sbb
out
pop
call
pop
mov
xchg
mov
leave
and
in
mov
rcrb
sbb
mov
xchg
push
clc
les
inc
fistps
lret
movsb
lret
and
fidivrs
fildll
mov
mov
inc
mov
sub
adc
jmp
cs
jle
negb
pop
shlb
xchg
cmc
jo
or
test
cmp
outsb
xchg
aaa
fcompl
stos
push
xor
push
fistpll
xchg
push
jmp
mov
movsb
inc
xor
lods
mov
push
jg
jl
lcall
outsb
sub
js
xchg
xchg
movsb
mov
lcall
mov
sbb
enter
lods
sub
insb
add
mov
mov
push
das
mov
mov
insl
dec
mov
sub
ljmp
scas
mov
or
add
xchg
sbb
mov
mov
cli
sub
movsl
push
int3
pop
jmp
inc
inc
dec
scas
adc
js
aaa
fsubrs
repnz
push
xchg
add
mov
mov
and
pop
mov
cmp
inc
inc
xchg
mov
jb
mov
lcall
cmc
imul
fisubs
push
sbbb
out
andb
daa
fstpl
sti
push
inc
or
rcrb
jne
sbb
ja
pop
rcrb
pop
stos
mov
xlat
mov
test
jp
mov
sbb
in
and
jl
and
mov
or
add
js
and
or
imul
inc
test
xor
ds
push
ljmp
mov
fistpl
inc
mov
inc
jns
pop
or
dec
xor
cmp
dec
jl
mov
cmp
das
stos
adc
dec
divb
call
repnz
in
mov
movsl
rclb
add
pop
ds
stos
mov
lret
push
inc
aam
into
sub
pop
pusha
xchg
jle
stc
xchg
sahf
pop
jge,pt
aad
push
dec
dec
inc
sbbb
clc
hlt
in
inc
mov
push
pop
xor
outsb
push
xchg
int3
cmc
loop
pop
mov
cmpsb
xchg
outsl
in
mov
cwtl
shrb
fldt
negb
sub
lds
int3
test
and
lods
inc
mov
mov
push
ljmp
adc
mov
imul
inc
fs
adc
pop
pusha
xchg
jle
cmpsb
xchg
scas
cltd
xchg
sbb
mov
fildl
push
xor
les
push
inc
push
inc
lcall
js
pop
ret
lss
imul
pop
dec
shrl
shrl
xlat
xlat
sub
xchg
mov
or
inc
xchg
cwtl
fmull
cwtl
mov
dec
dec
or
lret
xchg
lock
dec
sbb
fisubrl
mov
mov
jmp
fsub
adc
cmpsl
idivb
cmp
call
pop
mov
adc
lahf
and
lea
leave
adc
roll
adc
lcall
punpckhbw
inc
nop
jp
lea
mov
arpl
mov
add
hlt
sub
lods
arpl
cltd
cmp
push
xchg
repnz
pop
test
xor
mov
pop
mov
sub
bound
test
or
xchg
rol
mov
call
arpl
mov
shl
mov
mov
adc
sbb
mov
xor
dec
jl
pop
movsl
cmp
push
jmp
sub
pusha
pop
insb
pop
cmpsb
fidivrs
push
and
dec
jmp
add
cmp
jp
test
mov
outsl
xor
inc
into
aaa
push
push
xchg
mov
call
jns
push
mov
icebp
enter
loopne
push
or
inc
leave
shl
cli
and
add
push
or
in
mov
adc
jbe
mov
adc
je
insb
aaa
xor
push
out
pop
enter
inc
cwtl
jne
add
adc
pop
dec
push
lods
pop
push
mov
xchg
and
js
mov
and
pop
cwtl
inc
xchg
lret
loopne
push
and
cmpsb
dec
jmp
sub
icebp
cmc
dec
pand
jg
mov
fcoms
test
imul
repz
mov
cmp
sahf
push
gs
jmp
inc
xchg
mov
popa
mov
stos
jno
adc
adc
push
js
jle
sub
or
push
lret
or
sbb
xchg
or
bound
repnz
jbe
add
jno
sti
std
cmp
xchg
pushf
inc
jg
inc
inc
xchg
loopne
enter
adc
fistl
jl
lock
out
cli
out
repz
push
lock
cli
arpl
fisubrs
jmp
inc
and
scas
int
enter
in
pushf
hlt
dec
dec
cmc
outsl
daa
std
mov
add
sarl
or
sub
movsb
cwtl
mov
insb
cmpsb
jmp
or
sbb
or
inc
fnstcw
adc
jg
sbb
lods
hlt
lret
cli
mov
adcl
sub
mov
sub
mov
fucomi
sti
clc
sub
addr16
subl
mov
adc
into
cmp
lret
pop
into
pop
jmp
movsl
out
dec
pop
insl
jle
bound
fimull
pop
fcomps
ss
lcall
lret
adc
pop
mov
sbb
xor
xchg
xchg
xchg
inc
jb
cli
cwtl
xchg
pushf
and
test
fldl
mov
sub
add
mov
push
or
ss
std
xor
jge
sti
xor
stc
pop
in
popa
xor
inc
bound
mov
fcmovnu
andl
xor
incl
mov
fldt
fmul
jl
and
gs
mov
repz
sub
nop
jmp
xchg
xchg
xor
je
mov
rcrl
add
data16
sbb
dec
push
sbb
xlat
jecxz
dec
cmp
fiadds
icebp
ds
repnz
pcmpgtw
ror
loopne
frstor
adc
mov
adc
daa
scas
sbb
lock
add
cmc
in
mov
popf
sub
loope
subb
xchg
xor
aam
mov
push
cmc
loope
sbb
lock
cli
loop
xor
out
mov
fwait
push
pop
fwait
pop
stc
fcmovu
jae
adc
xchg
pop
sub
sahf
lret
dec
push
xor
and
into
stc
add
jmp
mov
lock
sbb
jbe
jne
lds
xchg
sarb
mov
cmpsb
pop
js
stos
mov
jmp
clc
cmp
xor
push
adc
mov
std
push
or
jae
jns
pushf
push
or
dec
outsl
stc
xchg
iret
inc
adc
jne
lret
mull
jne
jge
cmp
push
xchg
ret
push
push
jo
adc
or
xor
aas
ret
daa
imul
xchg
mov
adc
icebp
mov
repz
fldenv
ja
xchg
repz
pop
mov
fcompl
in
pop
test
enter
gs
stos
or
fimull
mov
dec
pop
adc
jno
fiaddl
int
xchg
push
shrl
xchg
jb
out
insl
popa
cltd
test
shrb
stc
xor
jp
jl
imul
or
fisubrs
cld
test
cmpsb
mov
gs
inc
push
dec
sti
in
jno
jae
mov
je
add
movsb
cmp
fiadds
xchg
in
aas
or
fyl2x
repnz
sahf
fnstenv
std
and
cmp
inc
loope
movsl
pop
popf
orl
test
ficoml
bound
pop
and
xchg
adcl
mov
roll
sub
sti
repz
int
sbbb
lret
mov
mov
pop
in
cmp
sti
insb
or
int
fs
imulb
repnz
jmp
dec
pop
rclb
mov
ja
jnp
fbld
xchg
add
mov
shlb
imul
add
mov
in
hlt
push
xchg
fst
xchg
sbb
loop
cmc
cli
push
out
pop
sub
je
insb
mov
mov
cmc
and
dec
scas
loopne
push
dec
lds
adc
mov
into
ljmp
out
mull
icebp
pop
adc
or
in
xchg
enter
jge
jbe
push
push
inc
ja
mov
mov
mov
hlt
and
adc
jno
push
notb
mov
inc
ss
aas
adc
std
xchg
lods
mov
jecxz
adc
inc
cli
cld
and
fs
je
mov
js
jae
fsts
jle
xor
xchg
roll
iret
or
aad
adc
cmp
ss
cmc
mov
fistps
int
aas
imul
sbb
xor
jmp
inc
cli
push
push
dec
outsl
in
jb
pop
mov
cmp
and
data16
ret
ja
in
rorl
shl
out
cmp
int
sbbl
fidivrs
mov
in
fwait
adcl
mov
pop
data16
jle
pusha
vminpd
pop
js
adc
and
into
push
push
cmc
inc
scas
in
lret
insb
out
or
jge
cmp
adc
push
das
xor
stos
dec
shrb
inc
sub
pop
in
ret
mov
jge
mov
inc
and
jnp
xlat
daa
or
dec
int3
jp
fldenv
cli
pop
enter
int
loop
jo
mov
shrl
mov
and
outsl
test
ds
lods
xor
aad
dec
test
mov
fdivs
sahf
mov
pop
mov
jno
sbb
repz
pop
jo
pop
jbe
ljmp
shrb
inc
dec
repnz
stc
data16
cltd
daa
daa
jmp
cmpsl
ret
cmpb
push
jg
stos
or
push
outsb
sbb
stos
pop
stos
cmp
jns
pop
pusha
sahf
cmp
mov
or
test
jbe
xor
cmp
inc
adc
fs
jmp
call
adc
push
ret
icebp
fcmovne
bnd
cwtl
jo
popa
push
out
add
cmpsb
or
pop
cmp
sub
pop
out
rcr
jle
orb
stos
aaa
and
lahf
test
mov
call
jae
dec
sub
mov
sbb
mov
pop
loop
and
rcrb
pop
xlat
cmpsl
sub
repz
sbb
mov
ljmp
xchg
and
loopne
jg
xor
xchg
cltd
dec
outsb
jne
adc
jbe
inc
fs
jg
dec
pop
mov
in
inc
mov
add
jns
test
add
push
mov
sbbl
push
lcall
xor
push
add
out
sub
mov
adc
mov
sahf
in
dec
mov
fcmovbe
imul
push
pop
lods
lea
out
je
repz
jo
push
mov
push
pop
dec
test
lods
ret
enter
inc
movsb
sbb
dec
or
mov
shlb
jmp
loopne
or
das
xchg
stos
push
leave
add
jb
push
pop
mov
dec
and
inc
mov
adc
jo
popa
inc
fidivrl
int
inc
push
pop
lcall
adc
sub
iret
sti
pop
fldt
imull
inc
ja
ljmp
repz
mov
cmp
or
pop
and
push
inc
xchg
call
mov
loopne
dec
fcomps
xchg
sti
dec
jne
or
jge
jae
push
insb
das
ficoml
mov
lret
jp
mov
stos
into
movsl
jbe
aas
cmpb
push
movsb
mov
lods
adc
xchg
lret
sti
ljmp
repnz
inc
sbb
sbb
fcoml
sbb
in
repz
jae
loopne
xor
cmp
ret
icebp
mov
movsl
adc
in
mov
sub
jp
loope
add
cmc
sbb
adc
rclb
mov
es
mov
jmp
sbb
and
sub
stos
fdivrl
mov
lret
add
dec
jae
dec
stos
jne
mov
cld
sahf
in
fmul
pop
lret
dec
inc
movsb
ja
negb
jge
mov
lods
cld
imul
sbb
dec
jne
inc
fdivrs
lret
iret
inc
jmp
add
incl
sub
inc
jae
cmp
xor
push
adc
lcall
in
jno
int
loop
sub
push
loop
xor
arpl
jp
insb
cmp
mov
xor
mov
dec
mov
es
sub
push
xchg
loop
sub
psubsw
and
mov
adc
gs
mov
add
imul
call
mov
cmp
sbb
mov
or
mov
in
and
xchg
popf
cmp
and
aaa
xor
popa
add
pop
hlt
dec
dec
imul
test
subb
sub
test
popa
adc
mov
adc
scas
cs
and
adc
std
in
and
lods
loop
and
push
mov
repnz
xor
push
cmc
push
and
or
lcall
out
jb
out
repnz
mov
fidivs
aad
inc
in
mov
push
adc
in
outsl
and
enter
ja
dec
mov
dec
lahf
in
ss
sub
loope
arpl
ret
and
repnz
xchg
push
mov
and
inc
sub
es
mov
xor
in
or
sahf
mov
jno
mov
mov
aad
aaa
aad
je
fdivr
push
aam
cmp
sub
jecxz
jo
push
jmp
or
cs
jne
cmp
rcrl
addr16
sbb
loop
repz
aaa
push
lea
mov
out
or
loope
cmpsb
fs
repz
sbb
jo
mov
push
int
repz
xchg
jecxz
cmpsb
push
mov
fadd
rorb
in
and
push
cs
movsb
mov
movsl
ficoml
jae
les
mov
push
sbb
or
xor
mov
mov
xor
push
popa
and
fcomi
iret
inc
nop
inc
sahf
adc
push
les
inc
adc
push
and
enter
cmp
sbb
insb
movsb
sbb
enter
sub
lcall
aad
sbbl
add
mov
insb
cmp
cmc
into
and
inc
jl
push
stc
or
fmull
loope
test
arpl
rcrb
in
hlt
push
mov
in
cmp
es
dec
loopne
out
inc
mov
cmc
sahf
icebp
mov
xchg
pop
jmp
xor
adc
jecxz
sbb
mov
outsb
int
insb
lods
stc
mov
pop
outsl
pop
mov
cmc
shl
loop
pop
cmp
fildll
cwtl
mov
ds
call
pop
outsb
adc
pushf
pop
inc
aad
std
cmp
or
push
push
push
fwait
test
out
sub
hlt
aaa
inc
xorl
out
std
fisttpll
xor
loop
lods
lcall
cmp
and
fwait
int
es
in
loope
lods
das
movsl
scas
lods
mov
loope
mov
jmp
aam
inc
sti
out
xchg
mov
xchg
adc
lret
cmp
sbb
mov
ljmp
out
push
inc
inc
je
cmpsb
cltd
jmp
xchg
subl
stc
inc
adcl
out
mov
xchg
addb
js
cmpsb
sub
loope
lcall
test
and
lret
mov
jmp
jp
sbb
adc
fbld
mov
mov
scas
add
xor
mov
rolb
cmp
jo
mov
cmpl
mov
push
jge
cmp
sti
je
xorl
outsl
imul
push
cmp
xor
jns
cmp
inc
cmp
lret
jg
lcall
push
mov
enter
cmp
adc
jno
movsl
stc
decl
lcall
pop
dec
ljmp
sub
aas
add
inc
ljmp
pop
fwait
add
fwait
adc
mov
sub
out
xchg
testb
pop
jg
ret
inc
jne
mov
xlat
push
aad
lret
out
lcall
fisttpll
fmull
in
pop
sub
out
xchg
inc
lock
cli
fisubrs
fldenv
jge
mov
out
sbb
mov
sub
popa
fstpl
push
imul
jmp
mov
lcall
data16
fs
mov
cmpsb
std
add
jle
scas
xorb
mov
push
lods
cmp
fs
jge
mov
mov
pop
and
loope
gs
mov
sbb
cmp
mov
mov
adc
lret
xor
push
shlb
inc
mov
dec
fsubs
out
jmp
add
lods
fsub
cmpsl
call
jg
ficoms
cwtl
mov
adc
movsb
adc
adc
out
xchg
ret
xchg
jmpw
std
push
pop
data16
std
in
into
in
adc
pop
jno
cltd
stos
cli
loopne
pusha
or
mov
xchg
dec
cmp
pop
cmp
leave
inc
xchg
dec
lret
inc
cmp
fnstsw
scas
xor
dec
arpl
pop
aaa
mulps
inc
addr16
lods
mov
inc
push
lret
inc
outsb
sub
insb
sub
mov
test
divb
and
mov
lock
cwtl
adc
outsb
cmc
xlat
xchg
lods
stos
roll
scas
push
insb
mov
mov
xor
xor
daa
lret
rorb
xor
push
lds
jmp
dec
cmp
subl
add
rol
or
mov
cmpsb
and
jle
cwtl
sub
mov
lods
push
sub
lahf
xchg
and
mov
int3
shrl
test
js
mov
mov
pushf
pop
and
insb
push
inc
or
or
ja
jne
mov
ret
cmp
test
adc
jg
aam
andb
sbb
in
in
push
rclb
or
mov
push
aam
leave
pop
lcall
enter
and
sti
sbb
pop
pop
and
push
punpckhdq
enter
push
insb
lods
fnstcw
sub
into
lock
xchg
adc
dec
adc
and
into
jle
or
imul
roll
sbbl
mov
or
ds
mov
inc
mov
or
imul
enter
jb
lahf
les
rcr
iret
xchg
cmp
add
dec
pop
fbstp
dec
dec
fs
fistps
popf
aas
pop
xor
push
inc
fsubrl
std
cmp
mov
lds
and
fdivr
mov
mov
xchg
int
cmp
pop
test
cmc
rorb
jp
lcall
insl
loop
sbb
leave
dec
push
nop
scas
cs
cld
dec
mov
outsl
out
push
gs
leave
mov
mov
decb
imul
lcall
push
ret
dec
cmp
dec
test
bound
jecxz
sbb
in
insb
ret
push
push
cmp
pusha
mov
inc
int3
push
dec
or
push
iret
in
pop
push
mov
jl
sub
cmp
decb
cld
mov
clc
out
loope
arpl
mov
lahf
mov
push
cmc
sbb
lahf
mov
stc
mov
into
sub
ds
and
xor
repnz
incb
mov
jp
dec
add
je
xchg
mov
and
test
cmp
leave
mov
inc
dec
push
pop
xchg
xor
fwait
pop
jae
cmp
adc
das
popf
pop
sub
xlat
mov
aaa
xor
push
pop
xchg
js
lret
out
mov
and
int
push
inc
and
and
sub
cs
xorl
divl
xlat
push
loope
repz
es
dec
mov
or
push
data16
loope
or
and
push
outsb
jo
sub
outsl
mov
add
les
mov
cmpps
out
imul
cmc
faddl
inc
lods
sub
cmp
lods
sub
stos
mov
and
outsl
jg
sbb
jnp
out
outsl
je
je
mov
jne
cmp
les
roll
mov
adc
adc
pop
incb
sbb
and
xchg
sub
pop
rclb
mov
repz
and
and
fiadds
sub
lods
repz
mov
pop
mov
pop
push
mov
ds
ja
push
push
mov
jge
outsb
push
in
addl
jge
daa
xchg
ficompl
and
outsl
or
jb
xor
jg
ja
aad
leave
shll
cli
imulb
aad
lods
js
aad
out
xchg
out
add
stos
adc
in
insb
loopne
mov
repnz
push
push
out
xchg
push
lods
fcomip
stos
mov
divb
xchg
push
bts
jns
pop
aad
mov
fldt
scas
cmpsb
jbe
dec
scas
jp
cltd
push
push
jae
pop
aam
scas
mov
jmp
or
add
and
pushf
cmpsb
and
or
dec
fwait
add
repz
push
mov
mov
cmc
pop
cmp
dec
loop
add
mov
test
loopne
lds
xchg
xor
cli
pop
testl
sbb
aaa
popf
or
push
enter
xchg
push
les
icebp
mov
inc
pop
mov
xchg
pop
das
mov
mov
xchg
je
nop
or
dec
pop
inc
cmpl
xchg
push
dec
push
and
rorl
xchg
jl
fsubr
cld
cmp
popa
mov
or
jl
and
lret
stos
sub
xchg
icebp
mov
or
mov
jl
or
call
mov
test
stos
scas
in
cli
in
jg
or
xlat
xor
adc
test
xchg
xor
add
sbb
or
popa
lea
cmp
fs
mov
sahf
pop
arpl
add
int3
fimull
sti
out
jmp
jge
mov
jl
inc
ficoms
cwtl
mov
sbb
fsubs
cmc
mov
push
stos
into
adc
lods
jbe
jg
or
pop
add
std
shl
pop
lcall
sarl
pushf
inc
xchg
js
pop
lods
mov
not
mov
rclb
dec
xor
out
sti
shll
add
dec
and
icebp
pop
mov
subb
cmp
sahf
lock
int
push
sub
pop
mov
xchg
rcll
sbb
ljmp
call
insl
fisubrs
and
adc
cltd
neg
dec
cmpsb
das
cmp
sti
mov
fimuls
jno
and
loopne
js
mov
cli
aas
jno
and
ss
mov
adc
test
or
mov
sbb
andl
mov
mov
incb
cmp
xchg
mov
int3
popf
pop
pop
dec
popf
pop
sarl
sub
mov
ficoms
dec
adc
ret
fiaddl
push
daa
push
daa
inc
push
cmpsl
mov
in
cmp
inc
jle
leave
mov
mov
shll
call
jg
iret
dec
xchg
sbb
mov
cmp
pop
mov
pop
inc
cmp
push
jle
and
lcall
notl
outsl
loopne
xchg
inc
and
pop
call
add
imul
shlb
nop
mov
lahf
outsb
inc
mov
xor
or
jecxz
mov
xchg
pop
data16
mov
ss
ror
mov
in
addr16
xor
loope
and
add
add
inc
ss
shrl
inc
dec
jae
mov
xor
cmc
cld
cmp
lret
shl
in
clc
cmp
lahf
dec
or
push
inc
cli
jle
and
sahf
sbb
xor
testl
inc
push
mov
pop
add
std
mov
jge
scas
fadds
in
shrl
dec
cmc
sti
xchg
iret
outsb
in
lods
xor
test
xor
dec
add
inc
aad
jecxz
lods
idivl
mov
sahf
les
or
shll
mov
mov
loop
sub
mov
add
ds
fldz
cmpsb
loope
adc
pop
dec
jns
dec
subb
jl
mov
pop
outsl
push
int
fisubrs
pop
daa
popf
jne
pop
loope
js
incb
dec
arpl
mov
push
mov
sub
xor
xchg
aad
shrb
inc
mov
lock
scas
push
and
pop
sub
sbb
mov
dec
fldenv
mov
pusha
mov
int
push
mov
jmp
sar
mov
inc
ret
lahf
ljmp
iret
dec
sub
cmpsl
mov
mov
jmp
sbb
or
mov
xor
dec
popa
and
sub
xchg
leave
movsb
jnp
cmp
movsl
mov
insb
shll
outsb
clc
sub
mov
insb
xchg
dec
add
mov
or
stos
jbe
mov
in
lods
les
push
xchg
jmp
cltd
add
mov
icebp
popf
dec
xor
lods
cmpsb
xor
dec
xchg
iret
in
test
push
cmpsl
in
cmp
add
xor
hlt
pop
ret
popf
and
lahf
inc
xchg
jb
or
pop
sbb
test
mov
fadd
jmp
out
inc
out
pop
enter
xor
ret
das
in
data16
jge
addr16
add
negb
jp
mov
xor
xchg
sbb
ljmp
loop
inc
push
dec
ds
mov
mov
sahf
cmp
mov
clc
jnp
loop
scas
clc
cmp
inc
push
mov
inc
pop
loope
jo
xchg
bound
push
push
jb
out
mov
dec
cmpsl
mov
imul
mov
subb
inc
mov
xchg
mov
cmpsb
add
imul
shlb
sbb
loopne
dec
ret
hlt
cmpsb
cld
lret
cmp
xchg
ja
pop
mov
testb
sub
ficomps
xchg
popl
popa
pop
or
es
scas
jbe
push
dec
int
comiss
fwait
stos
cmpsl
xor
repz
xchg
pop
xchg
cld
sbb
stc
pop
outsl
mov
ljmp
sbb
sbb
lea
les
cmp
int3
mov
stos
fs
lahf
sbb
push
addb
push
xor
fstp
mov
stos
sub
jae
jmp
push
dec
mov
jbe
mov
lcall
push
dec
or
loop,pn
shrl
fs
shlb
cmc
idivb
push
mov
adcl
insl
jb
push
fldl
into
or
inc
jl
insb
jle
out
fdivrl
loopne
pop
orl
sahf
outsb
xchg
sbb
jp
es
mov
int3
or
loop
mov
int
rcl
xchg
cmp
and
push
sti
xchg
xor
adc
fcmovnbe
pop
popa
mov
and
notl
enter
pop
add
xlat
ret
mov
dec
mov
mulw
cmp
xlat
jg
test
dec
inc
pop
ss
or
aad
adc
mov
sarb
call
movsb
push
daa
add
popa
fcoml
cmp
cmp
xor
mov
jmp
out
push
or
xchg
jnp
sub
clc
sub
inc
stos
fildl
add
js,pt
std
fs
mov
cld
inc
mov
jns
pop
enter
mov
sbbb
xchg
pop
jb
test
hlt
imul
lret
mov
mov
jns
mov
or
out
pop
jns
in
mov
push
fmull
bound
negb
inc
inc
je
jl
sbb
or
cmp
rcr
push
cmc
icebp
push
insl
shll
cs
mov
pop
int3
aas
in
dec
xchg
call
dec
jo
jo
insl
xlat
pop
sub
adc
jo
out
stos
out
or
int3
ret
pop
sub
push
in
mov
cltd
sbb
leave
aas
pop
test
or
outsb
jns
adc
sbb
xchg
mov
loop
pop
and
cs
or
lods
lods
int
add
mov
dec
test
inc
std
push
in
imul
loop
push
stc
lret
gs
das
fistpll
cmp
jnp
cmp
push
icebp
les
push
divl
in
or
hlt
scas
scas
scas
sbb
shrl
mov
rorl
call
push
pop
repnz
or
cmp
fwait
cmp
adc
popa
push
pusha
mov
jp
push
cmp
scas
jne
sub
xor
daa
popa
data16
fidivs
cmp
mov
loope
mov
inc
test
test
andb
and
dec
mov
fwait
mov
mov
fimuls
adc
insb
out
xchg
pop
cmp
mov
jp
mov
int
cmpb
addl
lret
fsubrs
lretw
imul
iret
call
pop
ss
xchg
jb
aaa
shrl
mov
mov
ljmp
lahf
mov
lock
cmc
xor
data16
inc
lods
int3
mov
add
pop
sbb
sbb
jb
iret
xor
xchg
dec
pop
ss
pop
jl
mov
jo
and
sahf
loopne
das
push
inc
lcall
insl
adc
das
sahf
pushl
bound
xor
ret
inc
ja
sub
leave
insb
test
les
gs
dec
sub
jo
std
sub
andps
ja
push
pop
dec
inc
jbe
push
pop
inc
shlb
dec
jo
jmp
ss
xchg
ret
inc
cmp
in
push
ja
clc
ja
scas
sti
cmp
xchg
rorb
shl
sahf
and
adc
jb
rolb
xor
or
xor
jp
pop
gs
cmc
mov
adc
cmp
stos
inc
push
test
out
lahf
insb
inc
popa
push
sub
xchg
sbb
mov
pushl
aaa
mov
in
imull
push
jns
insl
fstps
add
icebp
dec
aad
sbb
pop
cmp
cmp
sub
aas
clc
adc
jge
sbb
xor
cmp
mov
js
sbb
rolb
sub
xchg
sahf
aas
add
rol
adc
enter
scas
stos
sub
add
stos
lret
jmp
test
pop
popa
pusha
mov
sbb
jne
push
mov
xchg
sbb
insb
pop
push
out
inc
in
sti
cmpsb
movsb
popa
mov
cld
loope
repz
jne
shlb
das
lock
xchg
xor
jecxz
push
stc
jne
adc
sbb
jge
sarb
fwait
orl
fpatan
mov
sti
enter
jecxz
mov
inc
xor
cmp
xor
add
pushf
or
inc
add
scas
push
cmp
fs
int3
lahf
rol
insl
fldt
cli
push
mov
mov
mov
and
mov
mov
jge
sbb
int3
mov
lahf
dec
enterw
cmp
pop
sahf
push
mov
es
insl
pop
xchg
add
add
adc
push
outsb
into
jo
or
mov
add
ret
in
push
push
xor
out
call
xlat
push
mov
lods
sbb
or
scas
ja
loopne
in
leave
es
rcll
mov
push
iret
xchg
xchg
dec
movsl
pop
sahf
ficoms
jne
dec
popf
sub
lock
inc
insl
cmc
repnz
xchg
push
lods
les
mov
lahf
cmp
pop
lret
cmpsl
push
push
push
mov
push
orl
filds
inc
cmp
stos
cmp
lods
aad
pop
push
cmp
push
pop
das
and
data16
xor
and
js
ret
xchg
shll
and
clc
sbb
adc
imul
inc
inc
ss
or
push
push
cmp
xor
inc
into
jecxz
jl
test
pop
dec
adc
movsb
mov
pop
lds
jmp
push
test
cmpsl
ljmp
push
out
popf
mov
dec
gs
push
sub
inc
mov
loopne
popa
cs
mov
imul
xchg
and
outsl
popf
sahf
dec
xchg
scas
sbb
pop
jbe
dec
lret
out
inc
in
lock
mov
jno
inc
fs
out
mov
and
add
sahf
jo
fistl
jae
mov
les
dec
bound
adc
sub
fisttpl
cs
or
out
fisubrl
mov
xchg
scas
pop
mov
fcoms
movsb
pusha
mov
jae
aam
fucom
and
fs
cmp
xchg
mov
mov
xchg
and
imul
imul
push
mov
popf
loopne
cwtl
notl
test
aam
iret
xchg
stos
adc
loopne
sub
mov
sarb
fnstcw
adc
and
mov
inc
xchg
sub
fdivr
inc
lods
sub
rcll
push
leave
and
mov
dec
pop
rcrb
pop
xor
testb
pop
adc
int
iret
or
addr16
adc
jnp
sbb
jb
sub
pop
xor
adc
loope
out
loop
ljmp
dec
and
mov
mov
inc
add
and
cli
sarb
repnz
sbb
movsl
jle
cmp
pop
mov
call
sbb
aaa
gs
popf
pop
xor
je
push
cmc
sub
push
dec
and
outsb
shl
int
xchg
loopne
nop
ss
inc
std
mov
adc
sbb
loop
jnp,pt
insl
mov
add
mov
clc
xor
popa
test
sbb
adc
repnz
mov
mov
out
mov
mov
and
out
ret
scas
sub
adc
ret
and
das
adc
mov
adc
ss
jnp
cmp
out
push
jge
mov
jmp
leave
loop
mov
es
sub
xor
or
xchg
ljmp
pop
sbb
add
and
mov
mov
jae
ja
jne
pop
scas
jb
fidivrs
or
test
stos
xchg
mov
cmp
in
rcrb
out
add
int3
inc
fsubrl
inc
sti
inc
fcoml
imul
dec
les
mov
dec
inc
inc
daa
mov
xor
loope
das
mov
sub
mov
jecxz
das
sbb
pop
xchg
add
js
xchg
mov
jne
pop
lret
push
pop
or
pushl
clc
dec
push
mov
cmpb
push
es
das
mov
dec
pop
mov
test
push
aas
mov
ja
imull
jge
stos
dec
out
jne
cmpsl
xchg
cmp
aam
stos
repnz
xchg
mov
mov
mov
push
mov
add
pop
mov
push
mov
sub
shrl
jle
cli
sbb
or
pop
fisubrl
push
xor
mov
stos
inc
test
sub
and
xchg
fsubrl
mov
jbe
sbb
jne
outsb
mov
pop
inc
add
lcall
sub
sub
mov
adc
je
dec
pop
rcl
dec
mov
aad
xchg
paddusb
insb
int
rcll
fwait
push
int
call
call
inc
hlt
adc
xchg
and
lea
js
dec
and
aad
cmc
sub
cmp
dec
xor
nop
js
es
in
adc
push
rorl
outsb
dec
adc
adc
fs
out
adc
and
dec
fwait
jns
jne
pop
xchg
test
movsb
jbe
jecxz
xchg
jno
cmpl
xor
pop
xor
ss
and
jb
push
int3
fucomip
and
mov
jp
mov
aad
roll
mov
xlat
out
mov
pop
mov
inc
push
adc
popf
inc
pop
pop
cmp
jl
jb
fsubl
xchg
jne
and
shll
rclb
or
and
fs
push
or
mov
popf
inc
xchg
shrl
outsb
sbb
int
push
es
sub
pop
jl
in
out
pop
enter
and
pop
cli
mov
push
push
enter
sub
dec
aad
push
xchg
jbe
inc
loope,pt
jno
ljmp
outsl
test
sbb
mov
enter
arpl
pop
mov
mov
shrl
push
in
mov
and
loope
stos
lcall
mov
stc
movsl
int
imul
inc
xchg
mov
push
pusha
lcall
dec
sub
push
sbb
sub
pusha
scas
in
sahf
xor
sub
sahf
ret
das
push
idiv
mov
rcll
xor
das
and
and
pop
and
push
imul
imul
idivl
xor
in
loope
iret
imul
cmp
fcomip
lods
lock
mov
lock
and
mov
arpl
mov
or
aam
adc
adc
mov
inc
jne
lods
fidivrl
into
in
into
cmp
and
das
insl
into
int3
jg
jbe
ja
jnp
sub
aas
movsl
push
in
pop
xchg
ds
ret
frstor
xlat
dec
jb
mov
or
imul
jbe
leave
mov
cltd
cmp
mov
icebp
jns
shr
movsb
fimull
mov
fisubrs
lret
bswap
mov
pop
mov
call
lea
jge
popa
jecxz
stos
pop
sub
aam
lea
cs
fs
xchg
and
xchg
sbb
stos
out
xor
ret
mov
fwait
or
test
push
add
shll
je
adc
dec
mov
sub
jp
cld
xchg
mov
test
test
shl
mov
ficoms
ja
push
repz
add
cwtl
push
add
insl
insb
push
jg
ss
fsub
js
mov
xor
push
pop
icebp
ficoms
test
push
outsl
daa
mov
movsb
cmp
aaa
out
cltd
jg
cld
shl
cmpsb
popf
xchg
adc
test
add
adc
cmp
cld
sub
sub
adc
inc
repz
mov
pop
inc
aas
cmp
arpl
mov
xor
ret
test
orb
rcrl
mov
jg
data16
fsubl
sbb
loop
stc
sti
pop
jecxz
ja
sbb
pop
cs
dec
pop
adc
in
sbb
jo
imull
ret
mov
mov
dec
lods
test
pop
arpl
fisubrs
cmp
push
scas
sti
or
mov
cmp
mov
and
xor
loop
add
loop
add
cld
cli
sti
mov
dec
sub
jg
and
fwait
lret
mov
mov
xor
sub
loopne
cmc
mov
es
subb
mov
insl
xor
adc
jne
push
inc
cltd
pop
sub
cli
jo
imul
les
dec
mov
fildl
mov
push
add
sbb
divb
int3
in
sbb
mov
mov
les
arpl
lret
pop
push
jmp
int3
test
repnz
je
inc
mov
lcall
jmp
cld
es
data16
sti
mov
cwtl
cmp
add
sbb
insl
shll
out
stos
roll
pop
stos
sub
mov
sarl
dec
push
adc
cmp
mov
lret
jp
pop
pop
mov
mov
add
push
sbb
cld
jp
or
out
in
idivl
inc
popf
lds
sub
dec
adc
std
mov
push
adc
cmp
cld
dec
ss
xchg
jle
in
dec
iret
shll
shl
jge
xchg
rclb
lock
lahf
gs
lods
push
and
sub
lret
xor
xchg
inc
scas
sub
mov
sub
or
loope
dec
insl
mov
mov
sahf
mov
jnp
mov
and
cltd
jle
inc
push
mov
sbb
mov
dec
sub
push
out
mov
push
ljmp
divl
mov
negl
xor
loop
xchg
fiaddl
stos
repz
lea
mov
fcompl
enter
call
aam
or
or
and
or
into
repnz
push
push
pusha
movsl
or
mov
rorb
sbb
push
pop
mov
add
aaa
mov
xchg
adc
out
jns
adc
and
call
sbb
outsb
pop
jb
popa
pushf
movsl
or
inc
sbb
testl
dec
add
add
bound
lret
loopne
clc
cli
adc
push
pushf
test
and
je
push
and
sbb
xor
inc
cmp
test
pushf
arpl
push
xchg
push
push
call
addb
addr16
sub
cmp
and
iret
push
dec
test
ret
mov
ret
sbb
mov
fwait
ret
aas
pop
adc
push
push
sbb
aaa
icebp
and
push
and
rolb
ret
pop
push
inc
jp
popa
sbb
insl
scas
sub
data16
mov
in
test
je
cli
or
jle
out
jnp
in
insb
add
fcomps
out
aam
inc
cmp
divb
ret
xchg
sub
lds
sbb
jp
in
xchg
ss
jmp
inc
mov
jb
js
int
jb
pop
or
jge
testb
jmp
push
out
push
xchg
inc
xor
jae
pop
stos
mov
push
int3
outsl
bound
push
jne
test
pop
ljmp
xor
cmp
aad
or
pusha
jb
xorb
jge
cltd
pushf
mov
push
test
cli
and
rclb
hlt
test
lret
mov
int
inc
lret
jecxz
mov
sub
out
pop
xchg
leave
inc
fcmovnbe
and
and
push
or
cltd
xchg
mov
in
or
pop
jge
jmp
jae
mov
mov
pop
lret
xchg
fcmovnbe
adc
xchg
mov
xchg
jbe
enter
ljmp
pop
push
out
pop
mov
jp
bound
insl
lret
jbe
jnp
push
outsl
and
mov
sub
pop
jmp
or
in
fsts
push
scas
imul
cmc
std
and
mov
flds
mov
and
cld
adc
dec
fwait
pop
add
aaa
rclb
lods
jbe
pop
out
and
fsubp
dec
leave
out
cmp
fbld
aad
dec
lods
pushl
push
xor
lods
int3
jne
add
mov
out
xor
jmp
mov
fcmovne
cmpsb
and
shrb
push
sbb
adc
push
cmpsb
push
lret
or
inc
sbb
and
or
jl
jl
ss
enter
mov
pop
jle
push
addb
stc
push
jb
pop
push
pop
mov
fwait
sbb
out
inc
push
popa
inc
hlt
lods
adc
gs
mov
sbb
push
enter
loop
mov
mov
inc
xchg
ret
add
mov
and
sub
xchg
xchg
cmp
cli
pushw
rol
in
inc
fmull
adc
sbb
pop
xor
or
fwait
mov
jmp
inc
mov
sbb
fdivr
mov
je
sbb
movsb
out
mov
hlt
mov
add
cld
in
add
mov
dec
int3
sbb
sub
stos
movsl
popf
pop
bound
lods
jecxz
jecxz
mov
mov
sbb
into
fimuls
jnp
mov
pop
pop
int3
jb
adc
in
add
dec
hlt
test
jge
jns
ret
add
sub
and
mov
cmp
dec
xchg
daa
mov
sbb
xchg
mov
push
inc
call
push
enter
mov
sbbl
out
mov
lret
jle
sti
lock
aam
mov
pop
push
xor
into
jl
inc
xor
iret
pop
mov
daa
push
pop
stc
xchg
call
mov
ja
inc
subb
dec
inc
pop
sarb
and
xchg
cwtl
pusha
mov
aaa
fwait
xor
aas
ja
add
dec
xchg
push
movsl
mov
inc
jne
pop
lea
leave
push
xor
mov
xchg
fisubrl
mov
stos
test
xchg
rcrb
push
mov
fstpl
and
and
jne
pop
mov
xor
or
adc
xchg
mov
imul
mov
out
inc
mov
mov
add
fucom
inc
sbb
stos
fldt
pop
jp
dec
fucomp
repnz
leave
lret
mov
xchg
ljmp
cli
push
stos
fcoml
pop
mov
movsl
ret
dec
mov
sbb
mov
hlt
and
aam
nop
dec
inc
les
iret
push
sbb
lret
adc
nop
add
pop
push
inc
xor
sti
push
mov
or
xchg
xor
outsb
sub
aam
lret
push
cmpsb
pop
mov
stos
aad
mov
cltd
cmp
outsl
jl
adc
sub
imul
pop
pop
mov
jmp
cmp
testb
idiv
imul
cli
imul
ljmp
movsl
gs
mov
mov
push
out
std
insl
inc
arpl
popa
pop
popf
cld
lods
ret
xlat
das
pop
ja
push
movsl
imul
pop
out
mov
lahf
mov
scas
test
in
test
sti
test
mov
inc
pop
lret
out
dec
sahf
jp
lods
mov
mov
push
jl
stos
mov
dec
out
mov
xor
rol
addr16
jmp
shrb
call
test
pusha
jle
movsb
iret
iret
mov
pop
xor
dec
test
in
sbb
iret
nopl
call
mov
or
cmp
and
or
sti
mov
pushf
aad
fists
push
mov
icebp
mov
pushf
mov
aam
sarb
sub
jg
aas
mov
lahf
mov
dec
jp
lea
sbbb
xor
cmp
push
stos
dec
xorb
and
fidivrs
push
adcb
sub
add
inc
push
rolb
outsl
or
jge
pushf
shl
jge
std
xorb
ret
outsb
or
sbb
mov
je
dec
bound
pop
mov
or
and
inc
rcl
mov
dec
lods
in
xchg
jbe
daa
loope
mov
enter
xor
xchg
ficompl
pusha
addr16
movsl
movsb
rcrb
out
adc
jae
insl
xor
jns
sub
data16
sbb
jl
push
cmp
sub
jno
fcmovnbe
fucomip
cmp
jo
jo
cmp
inc
clc
sarl
rorb
mov
out
sub
sub
push
push
popa
adc
mov
xlat
cwtl
mov
pop
dec
jge
xor
outsb
xchg
pop
sbb
rcr
scas
lea
rorl
mov
aas
jecxz
clc
repnz
aas
out
jmp
ret
pushf
mov
ljmp
ljmp
jae
movsl
pop
addr16
pop
pop
dec
dec
rcrl
push
repnz
icebp
pop
dec
outsl
icebp
jg
mov
push
mov
roll
cld
daa
jle
lds
hlt
jge
sti
out
nop/reserved
loop
test
cmc
fsubp
jle
popa
push
insb
lahf
lds
xchg
jns
jp,pn
push
aas
clc
inc
dec
call
lds
fldenv
lret
arpl
pop
jl
gs
iret
sahf
mov
in
js
jg
jecxz
mov
js
inc
std
xchg
fldl
jg
leave
mov
xor
cltd
aas
outsb
ds
or
jmp
pop
push
stc
icebp
ret
lahf
pop
jae
out
dec
loope
lods
lods
jp
lret
cmp
cmp
outsl
shl
out
pushf
jne
mov
fsubrl
xor
cmp
cmc
fdivrs
iret
outsb
cmp
ficompl
outsl
pushf
cmc
shrb
jl
fists
push
ss
addb
push
daa
ds
call
testl
mov
ficomps
fnsave
pop
clc
cmc
das
out
jmp
jmp
dec
mov
jns
pop
push
jg
mov
lahf
cli
leave
mov
xor
mov
jg
pusha
leave
xchg
cs
jmp
jp
loop
inc
scas
mov
cmp
out
lahf
jnp
cmp
ret
negl
stos
cmp
shll
call
jb
hlt
into
out
mov
lock
mov
jmp
loop
dec
fidivrl
das
push
fnstenv
mov
dec
sti
std
out
dec
sahf
icebp
in
cmp
xlat
sub
and
out
xor
iret
sbb
dec
in
cmpsl
ljmp
pop
mov
pop
mov
push
jns
pop
leave
out
pop
iret
or
jge
shl
jg
jno
test
xchg
mov
lret
fistpll
arpl
jo
setle
stc
lahf
jle
mov
imul
popf
jb
fiadds
sub
popf
jg
out
sub
xor
pushf
xchg
inc
pop
stc
out
out
mov
xlat
test
xchg
pop
jbe
std
aas
jl
popa
rorb
jl
mov
out
hlt
mov
inc
iret
int3
push
loop
pop
mov
out
stc
gs
aas
in
sub
stc
jg
es
repz
lahf
jp
ret
pushf
icebp
shll
xchg
jl
fsubrl
dec
in
stos
aas
push
stc
hlt
mov
lret
repz
mov
out
int3
out
divl
mov
in
pushf
jo
in
lock
inc
pop
jns
data16
fldt
cmpsb
fdivrl
int3
mov
ljmp
lahf
fstpl
push
scas
outsl
cmp
cld
xlat
dec
f2xm1
cmc
in
in
repnz
or
mov
xchg
jle
aaa
into
push
mul
lea
mov
mov
cmpsl
cld
not
mov
callw
pop
jnp
cld
aam
mov
cmp
dec
in
fmulp
dec
mov
inc
mov
stos
sbb
testl
lret
iret
popf
js
inc
aaa
out
jge
sub
pop
push
push
mov
fstpt
inc
repz
aas
mov
aas
sbb
aaa
scas
pop
lcall
jg
inc
mov
stos
jle
rcrb
es
movsl
or
cmp
push
in
hlt
lahf
mov
imul
stos
loopne
rep
jmp
jge
mov
lret
cld
leave
adc
imul
push
jb
xor
mov
in
lcall
jg
leave
mov
icebp
orl
pop
sahf
sbb
dec
mov
inc
jnp
sahf
jns
jecxz
scas
cld
cmp
jmp
scas
fists
les
mov
aas
cmp
mov
iret
data16
aam
cmpsl
lea
push
arpl
adc
in
ljmp
hlt
lea
repnz
mov
int3
dec
adc
adc
pop
mov
mov
sbb
add
lret
dec
mov
jg
mov
in
addr16
jmp
out
pop
rcll
movsl
jecxz
stc
outsl
jle
faddl
push
das
pop
js
loop
mov
fdivs
cwtl
out
jl
mov
mov
fcmovu
xlat
cmp
cmc
shrl
out
stos
out
mov
or
imul
shrl
scas
mov
mov
sbb
pop
jg
xor
scas
cli
out
ljmp
fistpll
test
ljmp
out
ja
lret
cs
je
iret
scas
jg
notb
dec
paddusw
xrelease
jg
lea
cmp
sbb
fwait
hlt
fs
jle
popa
mov
xchg
fstpl
sub
mov
sub
pop
mov
mov
mov
clc
push
shl
cwtl
dec
rcl
sarl
imul
mov
mov
aaa
in
jmp
lods
dec
imul
lahf
hlt
dec
lret
xchg
dec
adc
cmp
lods
mov
push
push
dec
push
lods
cld
test
addb
aam
adc
imul
pop
push
xor
xchg
push
int
pop
xchg
js
cmp
ret
cmp
jle
fmul
or
ljmp
outsl
inc
aad
fbld
gs
cmpsb
pop
sbb
lea
lret
pop
cltd
out
mov
in
les
xor
dec
outsb
mov
jecxz
roll
jns
pop
mov
push
mov
inc
xchg
inc
movsb
inc
lahf
push
jo
addl
nop
sub
in
sti
roll
jno
mov
jmp
push
xchg
jg
rorl
pusha
dec
fwait
pop
mov
mov
push
jmp
jge
ja
mov
in
ljmp
pop
ret
outsl
and
push
repnz
cmp
mov
cld
xor
imul
pop
mov
ljmp
add
cmp
inc
scas
movsl
add
in
adc
movb
test
adc
mov
dec
test
xor
xchg
cmp
or
pop
and
mov
and
enter
sbb
std
test
mov
insb
push
divl
mov
cmp
test
insb
or
xor
fs
mov
repnz
icebp
mov
dec
jle
outsb
aaa
idivl
iret
aaa
cli
popf
cltd
in
ret
std
mov
je
dec
mov
xor
pop
xor
enter
xor
and
cmpsb
cmp
imul
inc
pushf
inc
and
cmp
push
adc
mov
mov
and
out
inc
imul
cmp
adc
dec
bound
jo
sti
jecxz
dec
loopne
leave
ret
pop
or
sub
cwtl
and
sbbl
lcall
pop
jnp
jne
dec
dec
mov
lea
add
lea
arpl
jo
push
mov
sbb
idivl
xchg
dec
es
lret
in
pop
fstpt
fcmovbe
cmp
fsubr
xor
sbb
mov
bound
xor
sahf
sbb
aam
in
mov
dec
fistps
repz
inc
push
aad
popl
jbe
invd
dec
mov
imul
sub
out
mov
xor
lea
mov
shr
pop
out
pop
daa
leave
fildl
dec
int
pop
fbstp
in
leave
fildl
mov
insl
cmp
mov
outsb
notb
or
movd
dec
addr16
lcall
imul
cmp
fdivp
push
cmp
sub
adc
clc
hlt
mov
mov
test
lea
mov
cwtl
jecxz
cltd
or
fsubp
aas
push
mov
add
mov
bnd
pop
dec
mov
push
int
ja
mov
pop
mov
out
pop
dec
adc
ja
shll
lods
lahf
xor
cwtl
dec
in
dec
arpl
ret
lea
sub
outsb
cmp
jg
jns
add
int3
xor
lret
out
push
cmp
and
icebp
push
das
jbe
push
jg
sub
int
movsb
mov
jge
xchg
ljmp
repz
lcall
fwait
cmpsl
xor
fnstsw
lcall
mov
ret
repz
and
orb
sub
daa
sahf
stos
and
movsl
sbb
rcrl
cmp
sbb
iret
xchg
and
stos
aad
push
mov
push
mov
mov
mov
orb
andb
clc
lea
push
jle
leave
or
aaa
stc
shlb
fwait
sarb
and
call
cmpsb
xor
stos
push
push
add
dec
pop
out
cmp
pop
loopew
inc
jge
mov
fdivrl
jg
out
test
dec
out
icebp
add
jp
std
outsb
out
popf
int3
daa
cli
ds
in
mov
cmc
jle
pushf
call
outsb
cmpl
aad
rclb
mov
out
nop
jne
inc
and
add
xchg
lret
mov
cmp
pop
not
and
repz
add
inc
inc
pop
and
aad
fiadds
push
pop
mov
jae
pop
scas
inc
enter
dec
adc
stc
rcll
xor
adc
xchg
pop
insl
or
mov
mov
and
cmpb
leave
jns
out
into
repz
loopne
inc
or
sub
data16
ret
pop
inc
cmp
cmp
pop
aas
cmp
lods
xor
test
xor
test
out
inc
adc
add
dec
sahf
cld
dec
cmp
call
notb
sahf
mov
xchg
push
jns,pt
xor
mov
in
add
pop
add
clc
pop
sbb
lret
mov
pop
repnz
pushf
pop
fs
cmp
xchg
es
movsl
fistpl
jge
sbb
clc
subl
lret
xchg
pop
dec
addr16
jmp
scas
pop
mov
xor
sbb
sarl
cmp
mov
cmp
mov
jne
push
or
jmp
dec
cmp
aaa
lret
rcll
and
push
pop
repz
dec
add
loopne
popa
push
fcompl
sbb
repz
pop
hlt
mov
pop
pop
push
or
cmp
loope
hlt
inc
inc
les
idivl
inc
mov
hlt
jo
jae
jp
addl
hlt
loop
sub
mov
rcll
cltd
or
rcl
mov
repz
adc
sbb
outsb
push
or
imul
bound
add
dec
out
test
dec
mov
in
push
dec
xchg
vaddsd
pop
hlt
js
adc
pusha
and
add
dec
jae
mov
fmull
cmpsb
enter
cmp
movsl
imul
xchg
and
jmp
cs
movsl
movsb
movsl
xchg
push
cltd
sub
sub
sub
and
dec
dec
mov
lcall
je
idiv
lods
addr16
sti
fdivp
fdivrl
jnp
cmp
shlb
xor
ljmp
jle
xchg
xchg
push
dec
ss
pop
jne
clc
xchg
inc
call
mov
fwait
inc
dec
lret
xor
xchg
sbb
cltd
mov
int
lcall
fcoml
mov
mov
daa
mov
out
icebp
pop
in
lea
push
adc
mov
rorb
mov
fidivs
pusha
sbb
dec
mov
push
mov
cmp
and
xor
cmpb
inc
inc
xchg
sbb
mov
sbb
decb
push
icebp
in
and
test
in
ret
negb
shl
outsb
xor
pop
adc
inc
or
xchg
or
mov
adc
dec
cmp
lods
adc
iret
and
add
popa
mov
adc
enter
je
xor
adc
xor
xlat
xor
adc
mov
cmp
pop
pop
lods
adc
sti
test
ret
cmp
addr16
test
mov
pop
rcl
in
into
jle
mov
pop
xchg
jnp
int
or
fimuls
or
adc
dec
or
pop
cmp
imul
sbb
mov
int3
pop
dec
jno
lods
and
test
jmp
adc
jnp
inc
jmp
jp
dec
push
cmpsb
fsub
dec
adc
loopne
mov
xchg
in
mov
dec
push
push
push
imulb
jg
cli
dec
pop
es
and
lahf
adc
fucomip
clc
inc
mov
jnp
xchg
dec
sub
shlb
test
fwait
and
mov
and
xchg
jecxz
fidivl
lds
lea
push
repz
jp
xchg
push
mov
out
out
push
lcall
or
cs
jo
lea
fwait
jp
mov
xor
push
rcpps
jp
mov
ret
call
sub
test
aam
sbb
outsl
push
xcrypt-ecb
cmpsl
or
xor
jp
daa
pop
int
sub
roll
push
xchg
sub
cli
dec
jecxz
orb
clc
scas
push
mov
push
jns
mov
lret
ds
movsl
jmp
movsb
inc
das
cmp
cmp
cli
push
enter
push
xor
jnp
repz
daa
jp
arpl
mov
mov
scas
mov
mov
int
adc
pop
cmp
jo
mov
cmp
icebp
cs
sub
jge
xor
xor
lahf
jns
scas
test
pushl
jmp
cmp
lret
es
loope
sub
sti
xchg
movsl
ja
cmp
fwait
lods
xlat
mov
xchg
push
shll
sar
mov
test
lock
pop
mov
mov
mov
popa
jmp
xor
lret
jge
ja
test
jno
inc
xchg
loopne
push
mov
clc
fiaddl
das
jnp
mov
mov
out
iret
mov
cmpsl
inc
popf
jnp
fnstcw
push
cmp
stos
mov
das
sbb
dec
data16
mov
inc
fcomps
cmp
push
sbb
jg
enter
lahf
push
je
dec
stos
mov
adc
fistpll
jne
lret
pop
dec
lret
js
mull
ja
out
iret
negb
outsl
mov
xor
jp
in
push
dec
jo
hlt
stc
cmpsl
dec
sbb
hlt
xchg
sbb
cmp
pushf
fdivrl
xor
repz
dec
fidivl
xchg
cmp
mov
in
jg
testl
cmp
les
adc
dec
je
fadds
les
lock
mov
mov
xchg
sub
loope
xchg
pop
ss
loope
sbb
dec
movsb
rorl
addb
xchg
and
adc
adcb
fbld
out
je
pop
mov
mov
pop
mov
pop
into
mov
add
cmp
xchg
fwait
in
shrl
mov
xchg
xor
hlt
add
ret
push
ja
jecxz
stc
mov
and
sbb
jne
shlb
loope
hlt
js
enter
adc
fstpt
adc
sbbb
cltd
inc
xlat
call
jb
xacquire
cmp
je
add
xlat
push
sub
xchg
mov
inc
push
int
test
icebp
out
push
xor
leave
subb
cmp
pop
lret
push
loope
sub
lea
cmc
jp,pt
les
clc
push
and
aas
notb
sub
jb
pop
rorb
push
cmp
jb
cmp
pop
lcall
xor
or
in
push
aas
xchg
inc
dec
mov
pop
sarb
sbb
and
rol
aad
xor
inc
lods
enter
roll
sahf
jns
inc
invd
jnp
fsin
out
adc
pop
repz
dec
nop
insb
pushf
mov
pop
pop
dec
sub
or
arpl
mov
das
jg
in
sbb
push
inc
mov
add
or
movsl
add
inc
fidivs
inc
test
lods
mov
push
mov
out
leave
mov
mov
dec
nop
pop
test
mov
rclb
xchg
mov
mov
xor
shll
mov
sbb
adc
rclb
inc
pop
adc
cmp
or
aad
sub
pop
dec
lock
scas
fs
dec
imul
xchg
aad
aad
push
mov
push
mov
xchg
jle
jg
nop
jl
xor
sub
js
pop
mov
push
icebp
lock
mov
add
push
inc
fadds
dec
mov
cld
and
jle
inc
call
jnp
repnz
fmuls
mov
roll
mov
mov
and
bound
xor
jecxz
ja
sub
int
test
xchg
mov
popa
jge
ja
dec
fsts
mov
push
into
incb
add
push
sub
fimull
hlt
nop
mov
adcb
lock
xchg
in
mov
lcall
inc
push
pop
pusha
jbe
or
scas
es
adcl
loop
or
and
pop
insb
mov
or
in
jns
mov
imul
mov
push
mov
sbb
dec
fcomps
inc
jg
jnp
subb
hlt
orb
jmp
int3
cmp
loopne
jae
movsl
add
sti
movsb
push
and
fldenv
sbb
inc
pop
addb
pushf
ficomps
arpl
addr16
mov
push
in
cmp
push
arpl
shrb
sbb
loop
push
les
xor
cmp
xchg
ret
loope
arpl
fisubrl
xchg
inc
mov
movsb
xor
push
or
lods
lea
hlt
repz
mov
mov
adc
push
and
xchg
sub
lock
movsb
or
xchg
push
adc
lahf
fnstenv
ss
jecxz
jle
dec
pop
test
xlat
mov
rcr
test
cmp
mov
jg
pop
mov
fadd
sti
movsl
pop
ja
add
jne
xor
inc
mov
xchg
rorl
dec
cwtl
in
or
cmp
sbb
adc
loopne
repz
sbb
js
out
mov
or
jb
data16
sub
add
fs
cs
adc
loopne
pop
push
aaa
cmp
pop
inc
into
add
pop
pusha
inc
sbb
loop
jp
in
and
push
sub
ss
pop
sub
inc
movsl
push
xchg
pushf
sarl
mov
and
adcb
inc
loop
pusha
lea
xchg
or
inc
icebp
mov
icebp
imul
ret
fwait
scas
xchg
sarb
or
lea
daa
cmpsl
jno
aaa
and
test
lock
jl
shll
enter
cmp
pop
push
lret
lock
dec
dec
or
mov
inc
sub
add
je
mov
lds
je
cwtl
push
pop
out
inc
sub
clc
cmpsl
andb
or
fnstcw
clc
hlt
sub
xorl
in
dec
imul
mov
mov
mov
and
test
movsb
in
xchg
lods
movsl
inc
adc
sub
int
xchg
cmpsb
jb
loopne
ss
push
lea
mov
fimull
jbe
hlt
xor
das
sbb
adc
pusha
fwait
and
sbb
adc
test
data16
rcrl
or
or
scas
xchg
sub
in
add
pop
pop
mov
aad
sub
insl
adc
mov
test
mov
lahf
ljmp
pop
aaa
out
daa
negl
cmp
mov
enter
popf
adc
mov
sti
xor
nop
insb
inc
xlat
lds
cmp
add
mov
mov
pop
or
insl
stos
or
out
aas
cs
jb
fwait
dec
loope
cld
aam
mov
add
add
rcl
mov
jmp
sbb
add
lock
sbb
mov
mov
sbb
idiv
testb
cmpsb
mov
mov
push
mov
sbb
loop
in
mov
push
std
inc
push
imul
cmpsb
mov
pop
test
out
jne
dec
adc
fistl
divl
jecxz
rcrl
sbb
sub
push
dec
loop
rorl
clc
jo
or
inc
das
xchg
aaa
shrb
sub
insl
mov
sbbb
test
fnstcw
pop
add
push
test
out
hlt
jmp
xor
or
push
dec
adc
xorb
fistpll
adc
and
adc
sbb
mov
in
loopne
je
sbb
push
js
test
inc
sbb
in
and
mov
or
test
mov
dec
pop
into
jecxz
jle
adc
sahf
push
xorl
test
mov
dec
outsl
dec
xchg
clc
ja
rcrl
ret
mov
addr16
rcll
mov
into
xchg
lea
repz
cli
add
sub
outsl
leave
inc
outsb
jecxz
sbb
in
aaa
sub
xorl
mov
xchg
jns
dec
inc
mov
add
push
dec
ss
sub
in
clc
insb
jecxz
inc
sahf
sub
jnp
movsl
movsb
shrl
or
cld
insl
sub
inc
xchg
jp
push
jl
loop
lahf
jl
call
dec
in
test
aad
mov
jns
dec
inc
adc
cmp
or
inc
fildll
pop
push
or
in
daa
pusha
pop
ja
loop
adc
xor
imul
or
push
sbb
and
xchg
in
add
xor
outsl
insl
jb
add
fstpl
and
std
mov
cmpsl
jecxz
lods
lret
loope
in
cmpsl
cld
es
les
lods
pushl
inc
inc
fnop
pop
and
sarl
adc
jge
fucompp
xor
notl
mov
pop
pushl
aam
jmp
mov
mov
xchg
out
addr16
lods
arpl
mov
or
ficomps
fbld
jge
imul
insl
out
add
jae
sub
and
popa
and
pushf
test
popf
and
sbb
xchg
jg
inc
movb
stos
push
cmp
lahf
mov
push
stc
mov
cmpsb
aad
fbld
cmc
vdivps
mov
push
shrb
mov
sub
pop
in
xlat
aad
sub
loopne
loope
xorb
pusha
addr16
lcall
leave
sbb
jbe
pop
pop
in
cmp
jnp
jmp
mov
in
xor
xchg
fs
xor
jecxz
pusha
ds
inc
xor
addr16
pop
or
jl
cltd
push
mov
aam
mov
por
mov
dec
sub
mov
lods
jno
inc
sbb
inc
pop
xor
push
fnstsw
mov
inc
addr16
hlt
push
addr16
enter
addl
sub
inc
leave
call
mov
cmc
stos
push
insl
add
pop
cmp
movsl
nop
lea
test
mov
jns
stos
dec
cmpsl
pop
push
dec
push
sahf
ret
pop
clc
push
mov
sub
or
xor
mov
mov
lea
adc
scas
dec
test
inc
mov
in
and
push
mov
sbb
push
inc
shlb
lock
and
or
ja
pusha
cltd
lock
push
mov
push
out
and
ret
mov
mov
push
dec
xlat
cli
mov
adc
pop
jp
clc
or
xchg
mov
jno
and
enter
enter
sbb
dec
enter
mov
jecxz
idivb
icebp
adc
sub
mov
cld
stos
lahf
xchg
out
cmp
sub
cwtl
cmc
xlat
cli
clc
fimuls
sbb
sub
in
jmp
pop
mov
push
add
jbe
in
fwait
jnp
das
jmp
xor
pop
jns
out
addr16
pop
repz
push
pop
mov
ret
loope
lcall
adc
lds
dec
xchg
cmp
mov
loopne
pop
popf
stc
mov
movsb
jae
jno
aam
insb
jbe
enter
in
mov
add
inc
xchg
adc
cmp
fidivs
orb
mov
inc
inc
imul
mov
rolb
jmp
loope
pop
enter
loopne
and
pusha
inc
or
mov
pushf
fldln2
mov
call
movsb
sub
add
ja
imulb
test
lea
sti
popf
les
mov
mov
fs
sbb
outsb
sbb
pop
mov
lods
enter
js
gs
adc
cmpsb
inc
rcrb
lods
roll
ret
fisubrl
add
pop
dec
dec
and
and
loope
aam
cltd
fildl
pushf
je
cmpsb
mov
inc
lret
gs
arpl
xchg
adc
enter
lods
ret
adc
in
lcall
ret
aam
adc
push
adc
es
push
pop
sub
insb
pop
or
je
jl
data16
and
loop
rcrb
mov
push
stc
sbb
sbb
nop
mov
lds
mull
stc
mov
xchg
pop
sbb
movsl
sahf
and
cmc
adc
inc
dec
xor
sbb
xchg
mov
mov
test
cmp
loop
shr
fbld
xchg
aam
scas
aas
cmp
pop
popl
ljmp
xor
inc
scas
jnp
mov
jecxz
or
add
adc
lea
cmpsl
xlat
cmp
xchg
xlat
pop
sbb
push
aaa
jp
xchg
movsb
mov
cmp
mov
lea
shr
mov
add
jmp
sub
lret
cmp
fistl
mov
sbb
lea
nop
ss
push
pop
fwait
in
jns
sti
xchg
in
stos
cmp
pop
mov
adc
std
jnp
mov
pop
push
cld
jl
jle
arpl
pop
pop
cmp
fyl2x
jg
or
shll
pop
mov
xchg
jbe
dec
cmp
cmpsb
xor
mov
arpl
lret
in
cmp
cmc
and
js
repz
std
jnp
mov
cld
mov
bound
jne
push
in
gs
fiaddl
pop
aad
mov
xor
cmp
fiaddl
or
test
push
sbb
fisubrl
rolb
or
lret
enter
jmp
lods
dec
or
std
adc
xlat
dec
orl
daa
push
push
jp
mov
insb
or
push
imul
or
jp
gs
in
mov
inc
ja
loope
stos
pop
out
push
jno
sbb
xchg
cs
xchg
pop
fwait
pushf
inc
push
iret
or
push
dec
movsl
sbb
ds
ljmp
push
out
aad
cmp
test
ret
cmp
ja
enter
scas
jg
dec
fmull
cmp
add
popa
outsb
mov
sub
gs
cmp
call
push
roll
fcompl
scas
daa
dec
ficomps
adc
aaa
dec
aaa
insl
into
jnp
out
rcl
aas
mov
jge
jno
ret
fisubrs
sub
xor
ss
jmp
ss
pop
push
cld
cwtl
xlat
lret
cmp
cmp
jns
lret
mov
in
xchg
imul
xchg
lahf
mov
sub
cmc
mov
outsl
sub
ja
das
mov
sub
xlat
cmpsb
std
jge
jg
scas
cld
loope
popa
or
je
jbe
ret
into
mov
mov
mov
shl
sub
fimull
stc
maskmovq
testl
mov
rcrb
push
add
xchg
je
sub
xchg
cld
pop
inc
addb
jnp
inc
sub
movsb
les
push
push
adc
add
addb
mov
fwait
sbb
jne
pop
cmp
adc
fisttps
xchg
ja
inc
jns
mov
outsb
into
mov
icebp
aas
aad
hlt
jno
sbb
xchg
outsb
out
dec
loopne
cwtl
jp
aas
dec
fisttpll
mov
xlat
call
ja
mov
clc
das
add
je
push
clc
push
sahf
loop
idiv
add
repz
icebp
aas
dec
loopne
add
clc
sti
adc
pop
insl
js
fsubr
sbb
mov
inc
loop
mov
sbb
sbb
pusha
into
mov
pop
xor
xor
fs
das
inc
jnp
inc
pop
mov
enter
lcall
test
in
jge
repz
jg
cmp
iret
cmc
rcrl
dec
sbb
mov
sbb
aam
jecxz
icebp
mov
shrl
idivl
cmp
imull
or
pop
cli
inc
out
xchg
mov
loopne
cmp
xor
in
xchg
aas
mov
jg
movsb
jecxz
fcompl
adc
add
jecxz
stos
xor
lock
add
inc
fwait
sbb
pop
pop
xchg
test
cmp
cmp
loope
xchg
orb
push
xchg
cmp
push
popa
xchg
adcl
cli
pushf
push
fcom
adc
cwtl
adc
xchg
inc
pop
mov
jne
sub
jo
mov
pushf
rcrb
mov
sbb
stos
fdivr
push
sbbl
push
mov
jnp
mov
into
leave
or
mov
in
jg
movsb
dec
or
filds
add
jle
in
test
sbb
cmp
fwait
data16
mov
rcr
mov
or
insl
jns
adc
sub
cmp
inc
cmp
xchg
xchg
iret
push
and
std
inc
cmp
xor
cmp
adc
shll
loop
sbb
add
lret
jb
addr16
jno
dec
adc
xchg
mov
mov
inc
sub
jmp
sub
enter
mov
inc
push
pop
jmp
mov
inc
cmp
das
clc
push
mov
mov
scas
mov
out
jl
and
into
leave
cmp
js
clc
inc
xchg
rorb
push
or
add
int
push
push
jle
mov
movsl
push
aam
mov
test
leave
xchg
mov
call
xor
add
or
inc
pop
add
xchg
adc
cmp
and
cmpsl
push
add
mov
repz
sub
add
sahf
jmp
xchg
inc
or
gs
push
cmp
ljmp
in
or
aas
adc
fadds
enter
scas
or
daa
sbb
repnz
sahf
cmp
adc
pop
mov
jle
xor
loop
pop
xlat
mov
insl
negl
stc
sbb
ds
dec
xlat
mov
cwtl
mov
xlat
or
repnz
push
setno
inc
shlb
cmc
mov
gs
outsb
lret
rclb
xor
cmp
xchg
aam
push
out
and
jbe
ljmp
inc
pop
xchg
dec
loopne
loop
and
mov
psllw
adc
ret
jmp
repz
mov
das
xchg
lods
dec
lods
or
push
adc
out
pop
cmp
mov
inc
push
or
sub
and
scas
js
arpl
ljmp
jnp
sub
push
cmpsl
cs
std
mov
insb
xchg
pushf
adc
push
adc
sbb
sub
jl
std
jno
in
div
mov
pusha
movsl
popa
xchg
push
orb
test
mov
jecxz
or
adc
push
daa
mov
push
mov
je
enter
sub
or
mov
jp
jmp
cmp
xchg
loope
and
imulb
les
sub
ljmp
push
mov
pop
sti
sarb
ss
mov
stc
fdivl
push
push
outsb
dec
stos
popf
test
cs
xor
cli
or
insb
jb
sahf
inc
or
jp
sub
inc
mov
push
sub
inc
cmp
push
inc
xor
push
sbb
aad
icebp
sub
mov
cmp
sbb
jb
lahf
cld
xor
insb
inc
mov
mov
insl
ret
icebp
xchg
push
push
push
sub
inc
add
aad
dec
xorl
xor
xchg
cmp
sub
mov
xchg
stos
adc
add
push
pop
lods
add
push
cmp
pusha
stc
ret
cmp
mov
sbb
cmpps
jp
and
ds
testb
push
daa
out
jb
inc
mov
sbb
rorb
ror
xchg
mov
add
in
or
and
adcl
outsb
mov
shrb
arpl
out
dec
push
jmp
test
in
sbb
xchg
scas
rolb
mov
jle
sub
imul
imulb
sub
stos
mov
stos
ficompl
subl
and
sbb
mov
lret
mov
sbbl
jmp
leave
adc
cmpsb
sub
jnp
imul
cmp
inc
test
jg
popa
mov
loopne
lahf
push
or
aas
imul
stos
daa
mov
mov
or
mov
jne
mov
jne
test
loopne
mov
popf
adc
leave
fwait
xabort
jmp
xlat
divb
notb
inc
lock
test
push
sbb
insb
js
mov
fwait
xchg
stc
fucomi
inc
xor
das
pop
jg
pusha
fs
pop
xor
mov
xchg
jecxz
xchg
cli
outsb
sbb
int
pop
add
psubusb
icebp
pop
lahf
sub
das
jne
dec
push
mov
ret
mov
pop
outsl
dec
cld
in
outsl
aaa
scas
cld
std
jge
loop
ja
sub
sbb
icebp
mulb
cmp
mov
xchg
mov
ss
sbb
pop
mov
jbe
mov
aas
jge
call
mov
cli
inc
lret
imul
cmp
aam
out
das
mov
jge
movswl
stc
nop
dec
dec
nop
jp
popf
and
imul
and
cmp
mov
mov
adc
outsb
jno
lret
push
add
roll
push
inc
mov
mov
fisttpll
xchg
mov
js
mov
add
test
ss
mov
clc
sub
cltd
fcoms
mov
mov
cmp
and
sahf
xchg
pop
fadds
dec
jbe
mov
or
pop
push
mov
jbe
sub
mov
lods
push
jno
dec
notb
imul
sbb
mov
fwait
inc
mov
dec
xchg
shrd
test
mov
cmpl
test
adc
sbb
mov
sub
ja
push
mov
adc
pop
bound
or
test
mov
jne
and
lea
xor
or
push
test
popf
xchg
sub
push
mov
pushf
add
dec
iret
ret
repnz
push
aam
jns
in
repnz
jmp
adc
ret
inc
and
pop
aam
xchg
ja
mov
xchg
push
xchg
cs
cmpsl
xor
imul
or
mov
es
cmp
popf
push
ss
mov
inc
int
xor
push
fsts
data16
sbb
dec
push
daa
sub
mov
mov
incl
imul
mov
pop
xor
lret
jle
cmp
cs
mov
stc
push
mov
mov
inc
ds
stc
popa
push
jmp
mov
clc
imul
iret
mov
dec
jge
mov
xchg
inc
dec
sbb
sti
push
mov
gs
sti
xchg
add
cmpb
dec
or
adc
dec
add
or
mov
aaa
addr16
mov
dec
xor
addl
rcr
inc
inc
sbb
lret
and
stos
mov
push
jl
or
sub
cld
lea
push
jae
nop
repnz
into
dec
inc
fcoms
push
stos
repnz
fisubl
fiaddl
out
and
xchg
in
mov
enter
cmpsb
xchg
mov
movsl
dec
or
subb
or
sti
xchg
xor
pop
inc
mov
stos
testl
jno
push
sub
sub
sbb
xor
into
je
jo
xor
lods
mov
outsb
aaa
or
xor
cmp
xchg
lea
sahf
push
and
pop
js
push
mov
rcrb
mov
leave
cmp
xchg
je
inc
outsl
push
dec
and
mov
mov
or
and
add
mov
repnz
test
sbb
push
xor
mov
mov
lret
mov
sub
clc
xor
xchg
pop
mov
cmp
mov
dec
pop
dec
jle
mov
pop
or
dec
movsl
enter
xor
add
add
ss
mov
xor
cmpsl
movsb
push
sbb
cmp
jb
sbb
mov
mov
loope
sub
pop
lods
jl
cmc
shrb
popa
cmp
jb
push
jp
cmp
ret
mov
mov
inc
push
adc
and
loopne
adc
mov
cmp
push
mov
mov
xchg
insb
push
sub
sub
arpl
out
cld
add
arpl
cmpsl
lds
xor
sub
push
nop
jns
std
jp
add
push
xor
mov
pop
or
sbb
shrb
and
jb
lods
in
xor
pop
or
fld
add
mov
push
cli
es
ret
dec
divl
mov
aas
ss
sbb
mov
mov
cmova
sub
scas
push
in
jmp
insb
es
rcrl
ffreep
repnz
mov
mov
or
ret
xor
xchg
adc
sbb
scas
pusha
fcmovu
pop
repnz
dec
jl
inc
cmc
xor
subl
or
loop
jo
sub
stc
mov
adc
lret
or
mov
fcomp
push
jmp
mov
outsl
mov
rcrl
mov
fwait
rorb
stos
in
fdivrs
stos
fstpt
test
mov
ja
pop
jp
cld
pop
inc
jecxz
ret
pop
cli
push
paddb
push
dec
dec
idiv
xchg
pop
inc
sub
insl
mov
pop
xor
cld
daa
dec
and
dec
pop
add
aam
xchg
adc
cld
test
jecxz
and
aaa
lock
cmp
addb
add
and
push
mov
ds
jl
jecxz
cmp
cmp
ds
cmp
dec
loopne
or
xchg
sub
pop
jae
addb
sbb
stos
cmp
in
xchg
popf
std
pop
sbb
fcmovb
push
adc
mov
lods
cwtl
cmpsb
pop
shll
cmpsl
fsubrs
and
and
or
jge
lock
adc
mov
into
adc
push
addl
jmp
push
adc
push
cmp
mov
sub
push
xchg
jl
push
icebp
mov
adc
test
xchg
clc
jl
das
shlb
cmp
or
add
adc
movsb
ljmp
adcl
cmc
push
outsb
fistps
or
lret
shll
sub
test
fisubrs
pop
adc
shlb
sub
push
into
add
fstl
or
push
fbld
xchg
aaa
dec
push
bound
push
dec
cmp
inc
adc
in
push
mov
in
and
and
and
rcrb
stos
pop
subb
inc
cmp
inc
cmp
sub
setnp
push
push
insb
mov
jno
gs
scas
sub
or
push
cmpl
test
sub
popa
sahf
or
int
inc
mov
push
sub
scas
xor
mov
inc
cmpl
sbb
dec
insb
imul
cmp
leave
adc
xchg
inc
es
scas
and
inc
je
push
push
sbbl
xchg
insb
dec
in
pop
and
jbe
pop
add
and
int3
pop
mov
adc
dec
les
and
cmpsb
shlb
xchg
test
xchg
jmp
cmp
inc
dec
lock
loopne
out
mov
popf
sub
sbb
inc
rcrb
enter
popf
movsl
outsb
mov
loope
cmpsb
mov
mov
movsl
mov
popf
cmp
mov
aas
in
add
adc
data16
test
cs
dec
pushf
repz
jge
js
cli
xchg
xor
pop
popa
adc
cmpsl
add
shrl
in
bound
rclb
add
cmp
inc
mov
lret
pusha
sahf
mov
inc
jae
int3
mov
pop
sbb
inc
int
out
xchg
negb
test
inc
xchg
mov
pop
mov
push
add
mull
cltd
dec
jle
pusha
test
aaa
mov
add
adcb
mov
mov
aaa
xchg
nop
dec
or
cli
nop
popf
je
jl
cwtl
push
scas
call
enter
xchg
jo
rorb
outsb
push
inc
test
loopne
in
cmp
add
push
sub
cs
jo
lods
inc
jge
sbb
loope
cwtl
pop
rolb
cmpsl
jae
sahf
out
ja
push
mov
jmp
loopne
fmull
inc
xchg
loopne
aad
dec
inc
movzwl
lret
dec
mov
icebp
push
and
sub
out
or
mov
push
push
test
icebp
lcall
outsb
loop
cli
icebp
jbe
ffree
inc
mov
jg
add
mov
xchg
mov
push
shr
xchg
xchg
ret
shll
push
fucomip
das
mov
fisttpl
dec
es
out
sub
cmc
mov
cld
imul
repz
mov
inc
faddl
out
in
jl
aaa
xor
stc
scas
push
imul
inc
mov
and
test
dec
or
sbb
pop
xor
jge
sub
jmp
outsl
pop
pop
in
shl
inc
xchg
pop
loopne
jmp
dec
cmc
xchg
sub
rcll
jne
int
std
arpl
les
and
dec
cmpsb
inc
push
insl
insl
pusha
cs
aaa
mov
pusha
stc
xchg
and
popf
sbb
push
pop
popa
cwtl
mov
mov
jae
imul
or
dec
add
and
or
cmpsb
and
xor
fcomp
and
daa
mov
or
shll
loopne
into
add
cmp
jo
loopne
mov
mov
inc
mov
inc
pusha
dec
mov
sbb
sti
and
and
sbb
shlb
je
outsb
fdivrl
and
push
cltd
inc
jb
push
add
xor
sbb
jne
in
adc
leave
mov
or
rorl
xor
stos
popl
mov
mov
imul
mov
sbb
pop
add
or
inc
les
sub
fisttps
jns
fdivrs
fnstcw
dec
cli
jbe
pop
imul
cmpsb
xchg
sub
add
xor
jmp
dec
dec
insl
mov
pcmpgtw
jmp
sarl
xlat
mov
xor
xchg
pop
mov
pop
jbe
test
and
sbb
adc
aam
insb
lds
adc
jae
jge
push
ds
cmp
push
test
bound
inc
outsl
in
mov
cs
inc
call
add
dec
jne
rcll
sub
in
ljmp
popf
sub
out
es
xchg
dec
push
stos
cli
fdivrl
mov
lods
das
xor
fs
int3
and
mov
movsb
sbb
int3
inc
hlt
mov
hlt
xchg
cltd
je
push
push
ljmp
jp
xchg
jbe
adc
mov
lock
pop
bswap
std
fists
lea
fbstp
je
aaa
imul
lcall
into
pushl
pushl
scas
fdivs
addr16
sub
outsb
call
add
or
gs
popa
sub
pop
mov
inc
stos
scas
imul
loop
pushl
pop
sub
mov
jnp
hlt
xchg
dec
lods
arpl
fimull
enter
cmp
test
sbb
sub
insl
inc
or
mov
stos
js
xor
ljmp
inc
out
jno
push
xor
ret
imulb
jnp
cmpsl
dec
in
push
inc
testl
xchg
movsb
lods
fs
les
push
stos
or
inc
int
popf
xchg
or
mov
in
repnz
lret
and
mov
and
mov
lds
cmc
js
sbbb
mov
inc
repz
and
aas
add
xchg
add
inc
out
mov
mov
mov
add
jp
shl
lea
or
inc
cmpsl
gs
sub
movsb
push
jmp
cwtl
or
in
pop
cli
daa
cld
and
orb
jno
cli
aaa
sub
aad
repnz
scas
mov
jne
fildll
mov
imul
sahf
sarb
add
and
jno
mov
add
cmp
cmc
jb
push
jge
outsb
cwtl
push
incb
loop
fistpl
pop
js
in
scas
mov
mov
fnstsw
inc
jbe
mov
movsl
cmp
movsl
sbb
addl
aam
push
dec
push
out
and
adc
popf
ljmp
inc
inc
loopne
mov
push
sti
adcb
sbb
add
insb
pop
int3
enter
or
gs
out
fadd
adc
clc
and
loope
cmp
mov
in
sbb
lea
jg
xchg
xchg
pop
sbb
js
mov
xor
mov
scas
test
inc
inc
sbb
xorl
rsm
ja
inc
sbb
mov
sbb
iret
ret
int3
movsl
cmp
pop
aaa
sbb
sbb
pusha
xor
dec
mov
stos
sbb
movsb
xchg
dec
cli
mov
mov
cmp
test
adc
xchg
fldcw
out
dec
dec
bound
ljmp
je
out
xchg
pop
les
push
lret
cwtl
sub
mov
jb
mov
or
mov
aam
push
fsts
std
and
pop
push
mov
or
inc
adc
sub
mov
inc
sbb
sub
into
pop
pop
testl
repz
sbb
pop
xor
add
or
iret
pop
bound
enter
mov
pusha
icebp
sub
add
les
cmp
gs
add
sbb
gs
add
faddl
inc
daa
cmp
rorl
daa
jmp
inc
jmp
das
mov
cwtl
mov
icebp
ds
aad
push
push
imul
mov
outsb
aaa
test
rcll
push
jge,pn
adc
lds
add
call
add
add
lods
out
push
mov
push
dec
and
cmpsb
jp
pop
pop
in
ficoml
fs
mov
mov
mov
scas
adc
pop
aam
push
fsubrl
push
test
sti
add
pushl
notl
push
std
mulb
mov
xor
into
mov
enter
mov
push
aam
incl
mov
js
dec
clc
outsl
imul
mov
imul
push
lret
roll
mov
loope
rorl
pop
jns
out
loopne
xchg
push
in
jg
rorl
addr16
inc
inc
es
xchg
iret
fdivs
invd
jg
shlb
jl
test
push
cmp
aas
int
cmp
xor
sbb
mov
pop
ss
dec
jecxz
repz
dec
mov
xor
or
je
xor
outsb
fsubrl
mov
clc
leave
inc
or
cmp
lea
xlat
mov
cmp
fcoml
icebp
cltd
icebp
xchg
dec
scas
std
fnstcw
fs
scas
cmp
jnp
insb
inc
cli
addb
bnd
mov
dec
fidivl
jae
daa
adc
clc
fnstenv
iret
in
out
cltd
adc
divb
lret
and
dec
lret
lods
aad
pop
popf
test
inc
out
ljmp
test
scas
adc
out
int3
cmp
inc
sub
mov
insb
inc
scas
xchg
in
push
pop
xor
cmp
mov
add
dec
push
lds
loopne
insb
fildl
test
inc
sbb
inc
out
cmpsb
cmpsl
add
cwtl
sub
call
xor
push
out
cmp
jne
std
dec
movsl
arpl
dec
daa
icebp
jo
and
lds
inc
and
sbb
mov
xchg
sub
nop
jmp
inc
mov
mov
push
sbb
push
stc
dec
daa
xorl
pop
cmpsb
inc
pop
jnp
in
je
cltd
sub
add
sbb
push
icebp
popf
hlt
lret
mov
stos
test
push
pop
imul
push
sbb
rcrl
cmp
outsl
repnz
icebp
jne
sahf
jle
sbb
dec
aas
dec
inc
ret
pop
loope
cmp
mov
fwait
sub
mov
in
and
jecxz
out
movsb
pop
out
and
mov
mov
faddl
jbe
into
inc
popf
movsb
pop
sbb
int3
mov
jle
mov
nop
xor
in
mov
loop
push
dec
push
sbb
scas
cltd
mov
call
sbb
mov
adc
cli
xor
inc
icebp
xor
add
mov
mov
clc
imulb
lea
adc
fwait
mov
dec
inc
fistpl
insb
daa
std
shlb
inc
dec
xor
movsl
mov
arpl
lret
outsb
cmp
push
sahf
jl
movsl
inc
stc
decl
lret
xchg
sub
jns
push
sbb
jmp
aas
insl
xchg
idivl
mov
pusha
int3
mov
push
hlt
pop
inc
imull
fldcw
fidivrs
shrb
stc
mov
repnz
outsb
rcr
mov
xlat
repz
idivl
mov
in
cltd
repz
push
leave
out
xor
fcomi
int3
sbb
sbb
js
ljmp
fbstp
loop
cmp
fisubrs
mov
xor
or
lock
add
pop
cld
int
repz
pop
repz
adc
fdivr
addr16
jnp
insb
jns
ljmp
jp
into
xchg
lret
pop
sahf
mov
insl
jle
mov
mov
sar
int
inc
dec
inc
cmp
out
xor
out
fisubs
dec
sbb
add
sahf
jae
lahf
xchg
fdivr
incb
mov
pop
jl
jns
pop
sbb
pop
fidivl
jecxz
decl
push
cli
cmp
aad
popf
mov
loope
inc
cld
jge
mov
ljmp
enter
js
insl
dec
pusha
enter
lahf
pop
inc
sbb
add
push
push
movsb
aaa
repz
cli
in
loopne
xor
les
sub
sbbl
fimuls
pop
stos
sub
dec
addl
sti
push
aas
test
mov
pop
outsb
mov
mov
cld
jnp
or
add
push
in
mov
inc
out
xor
pop
out
dec
xchg
cmpsl
scas
ret
mov
cmp
sub
test
and
aam
mov
aaa
loop
and
rol
sbb
cmovne
cmp
mov
mov
mov
das
pop
mov
or
lret
cltd
fcoml
xchg
add
xorb
imul
lds
out
sbb
cmp
mov
cmp
jl
mov
jp
push
std
fstpt
imul
jo
mov
jge
ffree
pop
push
jp
xor
fcomip
xor
lods
xor
lret
insl
fisubs
fidivs
test
nop
or
push
fwait
xor
cltd
mov
loopne
pop
iret
pop
jl
xchg
jns
fisttpl
and
cmc
fildll
in
in
pop
pop
out
outsb
push
les
decb
inc
idiv
idivb
ja
pop
iret
mov
sar
sahf
adc
mov
fbld
andl
testl
and
mov
ja
jns
push
out
sub
pushf
rcrb
sahf
inc
cwtl
sub
je
mov
rcrb
popf
sti
bound
cli
lret
pop
and
into
lock
fcoms
ret
push
lea
inc
lods
jl
push
push
nop
xchg
in
lret
adc
cmp
lret
xor
or
push
push
in
push
mov
and
mov
popa
cmp
cmp
nop
jo
jl
jle
jnp
fcomps
sbb
inc
jge
pop
xlat
outsb
dec
sub
cltd
sbb
jecxz
jge
in
or
bndstx
shrb
cmp
xchg
inc
movsl
imulb
ljmp
pop
loopne
sub
testl
dec
jge
inc
ljmp
paddq
jge
shlb
xchg
or
push
jbe
fsubrs
ret
inc
inc
fcomps
or
and
dec
add
xor
xchg
inc
les
push
mov
pusha
adc
dec
ds
cld
popf
lods
inc
stos
sbb
jmp
sbb
cmp
out
adc
mov
jl
shlb
sub
aaa
rcrb
stos
push
pop
push
mov
mov
or
in
psrad
xlat
sub
loopne
aad
cmp
mov
movsb
mov
xor
clc
xchg
mov
jbe
packuswb
mov
or
and
lahf
shll
xchg
and
mov
aaa
or
adc
fistps
lret
stos
lcall
jns
jbe
loop
scas
xchg
mov
sub
xor
xor
mov
sub
mov
sbb
daa
movsl
adc
pop
ljmp
adc
add
jle
jns
mov
mov
lock
aad
imul
jno
sti
les
mov
xchg
incl
sti
aas
adc
das
or
push
push
dec
call
pop
inc
push
dec
aad
adc
outsl
loope
sub
movsb
cli
jl
arpl
call
pop
adc
sub
stc
dec
sbb
fnstenv
or
jo
inc
mov
addr16
sub
icebp
lret
lret
jb
xchg
mov
xor
inc
dec
movsl
test
movb
js
popf
xor
pop
jle
int3
push
jl
fistpl
mov
jp
repnz
hlt
call
lret
mov
dec
call
mov
sbb
bound
js
mov
jp
mov
jmp
repnz
pop
out
arpl
shl
inc
sub
ja
push
lods
jle
push
push
sbb
ja
xchg
xor
xchg
les
sbb
fwait
rclb
push
pop
jl
mov
call
add
out
clc
ret
adc
jp
or
mov
sub
mov
inc
into
test
nop
jo
jl
mov
iret
lock
add
cwtl
div
mov
fwait
inc
gs
fdivrs
daa
mov
not
inc
jmp
mov
xchg
xchg
push
adc
out
lea
dec
fidivrs
fimuls
arpl
daa
xor
repz
jecxz
push
cli
ljmp
xchg
push
pop
pop
jnp
loopne
imul
notl
in
sub
loop
fwait
testl
cltd
push
push
mov
loopne
jae
stc
and
pop
pushf
jle
dec
adc
pop
sub
test
pop
sub
clc
test
scas
push
mov
mov
movsb
test
push
pop
enter
push
jnp
jno
clc
or
sbb
test
lds
stc
xchg
jp
jo
push
adc
mov
mov
add
sbb
mov
inc
aaa
incb
mov
rcrl
cmpsl
test
xor
push
adc
inc
jecxz
push
adc
inc
xlat
mov
popf
mov
mov
cmp
addr16
sub
or
mov
pusha
mov
mov
stc
lea
sahf
out
mov
add
adc
adc
inc
mov
inc
push
enter
fistpll
std
pop
test
lock
dec
pop
mov
addl
or
add
jge
aad
rcll
aaa
mov
in
das
xlat
mov
or
jecxz
jno
push
mov
dec
inc
push
cmc
dec
test
xchg
imul
or
popl
jne
nop
xchg
push
xor
mov
adc
jno
mov
test
or
dec
pop
dec
call
movsb
sub
pop
or
sub
push
imul
mov
push
lock
pop
sti
faddl
add
lcall
ljmp
jnp
rcl
fucomi
fwait
cwtl
repz
xor
sbb
fadd
loope
mov
mov
movb
adc
xchg
stos
insb
out
sub
mov
adcb
cmc
cmc
out
fcoml
cmp
fisttpll
cmp
ja
mov
mov
cmc
jle
inc
inc
xor
xchg
jp
pop
ljmp
push
jl
jmp
movsb
inc
mov
dec
adcb
jp
mov
mov
pop
pop
dec
pop
jo
arpl
fwait
or
mov
dec
ret
rcll
jecxz
mov
inc
jge
outsl
jp
mov
fists
lods
ja
sarb
adc
pop
out
mov
push
enter
out
add
cmpsl
push
fwait
sub
push
jmp
jle
fs
cli
sub
movsl
pusha
jge
std
fisttpll
xlat
mov
pop
imul
and
loop
ljmp
or
mov
lods
scas
jge
int
mov
cmpsl
or
fsubrs
mov
inc
in
sahf
lods
std
and
decl
xchg
lds
into
xor
cmp
pop
int3
sbb
mov
insb
jns
lahf
mov
shl
int
cmpsl
mov
fdivrp
sti
test
loop
lock
xchg
movb
or
mov
cmp
fmuls
mov
add
movsl
pop
call
daa
rcrb
lret
xchg
or
pop
pop
jl
add
fxrstor
pop
xchg
and
xchg
mov
inc
lds
icebp
andl
rclb
mov
and
orl
fs
fldt
or
mov
cmp
push
pop
pop
cli
loop
ja
sub
out
jg
outsb
jns
test
mov
icebp
in
mov
sub
test
stos
and
xchg
sbb
mov
sub
and
mov
add
push
dec
cmpb
aas
mov
inc
jl
dec
fcomps
adc
fcompl
stos
sbb
pushf
dec
adc
ljmp
ret
stos
cli
loop
sub
jl
adc
ds
call
sbb
cmp
or
and
push
adc
pop
lds
lods
add
mov
pop
rcrb
pop
sub
and
or
cs
dec
mov
or
push
mov
pop
cmc
cmp
jb
arpl
out
pop
cli
call
push
jo
xchg
xor
dec
aas
repz
call
rolb
in
faddl
add
and
shlb
add
enter
subb
sbb
or
pop
rolb
xlat
ja
pushf
push
or
test
shrd
mov
ja
ljmp
or
ds
jno
dec
mov
lret
outsb
cwtl
jg
dec
imull
mov
and
cmc
xlat
xchg
mov
stc
fistl
shrb
out
dec
ror
jmp
xlat
scas
pop
pop
cmc
dec
dec
pop
out
xlat
push
inc
out
cmpsl
aaa
repz
repz
repnz
or
repz
js
jg
xchg
pop
lock
xchg
daa
jp
jg
dec
out
out
jge
lods
sbb
mov
cld
push
iret
aas
ljmp
or
loope
into
jmp
mov
stc
ficompl
out
pop
insl
mov
vsqrtss
sub
jnp
or
lret
sar
aam
mov
xlat
xchg
jg
add
mov
aaa
sbb
repz
push
jno
xor
sti
mov
loopne
jae
outsl
jae
shlb
cmp
adc
stos
rclb
imull
mov
sub
jno
loopne
in
sbbl
sar
dec
push
incl
clc
ret
hlt
lret
mov
or
add
shlb
ss
add
imul
mov
push
stos
jle
fldlg2
into
mov
aad
cmpsb
js
fs
adc
jp
cmp
int
fisttps
push
push
push
ja
mov
mov
repnz
lret
cmp
rorb
popa
mov
push
xchg
orl
mov
outsb
sti
hlt
or
jg
inc
pop
cmp
in
lods
xchg
add
xor
nop
shr
pop
icebp
cmpsl
loopne
sbb
and
aad
mov
imul
inc
inc
js
loope
pop
dec
xchg
jmp
mov
je
sbb
jo
sub
jg
fisubs
icebp
adc
adc
mov
lods
sbb
and
pop
or
cmp
les
and
mov
test
aam
enter
push
dec
pop
sub
sub
aad
das
cmp
dec
push
sub
movsl
js
pop
dec
popl
jns
enter
mov
pop
add
mov
mov
mov
repnz
xchg
pop
mov
out
sbb
out
icebp
mov
add
and
mov
popa
pop
call
xor
cmp
lock
hlt
sub
daa
bound
and
aam
clc
add
xorl
add
stos
mov
js
daa
xchg
mov
jb
loop
push
sub
lds
mov
sub
loope
stc
stc
fst
push
fsub
mov
lcall
add
push
roll
adc
mov
sub
or
mov
adc
insb
cmp
out
adc
fcoml
bound
add
dec
sub
push
aad
and
jmp
in
scas
jae
shlb
mov
aaa
adc
out
add
in
adc
push
lods
sub
stos
hlt
lds
adc
adc
fldl
lods
jns
and
mov
test
mov
cmpsb
cld
or
pop
or
and
std
jp
cltd
xchg
and
add
push
jle
pop
jnp
add
sbb
cs
mov
stos
mov
lahf
arpl
inc
fs
push
and
add
adc
jbe
mov
mov
sbb
xchg
add
pop
mov
shrb
shlb
or
rcrb
cli
cmp
push
cmp
ds
aam
xchg
movsl
sbb
fisttpll
test
add
std
push
mov
xchg
push
xchg
mov
loopne
test
mov
mov
add
pop
sbb
xchg
add
push
lcall
push
stos
add
popf
inc
fcompl
fsts
pop
les
mov
push
cmp
or
jecxz
ss
dec
cwtl
mulb
cmp
ljmp
inc
dec
enter
inc
push
sbb
jmp
dec
and
out
push
cmp
js
jbe
mov
mov
inc
sbb
es
or
arpl
inc
sbbl
bound
vmovaps
mov
lock
mov
jl
iret
xchg
in
jle
vpunpcklbw
jns
pop
int
sbb
xchg
ds
add
push
mov
mov
rorl
aas
ficomps
xchg
test
cmp
push
insl
xor
mov
imul
cli
cmc
dec
xor
hlt
add
sub
fnstsw
adc
hlt
mov
or
gs
test
arpl
or
and
pop
cmc
loopne
js
movsb
mov
push
pop
test
sbb
ljmp
push
filds
rcrb
mov
sarl
cmc
dec
pushf
add
pop
shll
mov
inc
cmp
mov
test
sub
sbb
sbb
popf
mov
xor
pop
adc
inc
mov
mov
inc
insb
xchg
jb
dec
and
sbb
mov
dec
and
ret
aas
sbb
setne
mov
pusha
xchg
and
lods
outsl
cli
mov
add
pushf
sarl
gs
aam
mov
sub
mov
stc
add
nop
jae
add
inc
xor
cmpl
mov
inc
addr16
xchg
jae
ds
fcmovne
mulb
inc
mov
in
pop
mov
shrb
outsb
stos
dec
loope
and
orb
pop
jne
aad
out
insl
decb
mov
or
push
inc
xor
rclb
movaps
repz
sbb
sbb
dec
fwait
fwait
sub
ljmp
xchg
jnp
je
test
add
pop
add
loope
or
data16
and
add
push
lahf
dec
fildl
cmp
push
js
pop
jge
adc
cmp
pushf
jmp
xchg
adc
inc
push
rolb
sbb
popa
icebp
lods
mov
ljmp
or
aas
in
repz
or
loop
mov
adc
leave
or
aas
pop
and
add
inc
enter
sub
int
pop
repnz
out
cmpsl
sar
push
fisttpl
inc
fcmovnbe
cmpsb
loop
inc
testb
lods
xor
inc
pop
insl
adc
mov
xchg
adc
sbb
insl
pushf
daa
sahf
jge
mov
aad
dec
dec
push
or
es
divb
call
xchg
test
shl
cld
mov
push
jno
push
sahf
call
pop
mov
loope
in
ret
cmpsl
and
jl
and
fcoms
add
pop
xchg
mov
jne
cmp
cmpsb
or
jmp
in
mov
mov
es
loope
dec
dec
push
je
mov
or
cmp
xchg
mov
dec
in
adc
test
adc
adc
sub
xor
hlt
lret
aam
popf
adc
pop
or
out
push
sbb
sbb
jecxz
leave
pop
lret
xchg
insl
jno
lret
lds
or
add
sbb
pop
ja
shl
lcall
dec
sub
and
out
push
outsb
movsl
mov
inc
xor
or
sub
and
adc
add
fwait
addr16
out
jns
lods
mov
jns
fs
hlt
leave
test
lret
mov
lahf
push
arpl
in
iret
repz
cmpsl
mov
fdivl
dec
xor
sbb
das
inc
inc
fisubrs
jnp
jmp
xchg
aad
mov
sub
cmp
inc
std
xchg
iret
mov
aas
mov
cs
mov
mov
js
fdivs
add
lods
inc
sub
or
jp
jae
or
bound
cmp
inc
jae
push
cmc
push
ds
out
sbb
dec
lods
movsl
inc
mov
pushf
repnz
cs
not
dec
int3
lds
mov
pop
jmp
pop
sbb
push
jnp
xchg
inc
outsl
bound
mov
pop
xor
inc
mov
decl
decl
jl
xchg
cmp
mov
xchg
out
into
dec
add
ja
pop
cmpsb
repz
sbb
xchg
enter
mov
and
xchg
cmp
inc
pop
xchg
es
lret
mov
in
popa
pop
lods
ljmp
mov
test
dec
rclb
repnz
pop
aam
inc
dec
sbb
dec
mov
mov
sub
testb
jae
into
sub
addr16
push
push
movsl
mov
pop
pop
lret
mov
fsub
call
cmp
cmc
je
mov
mov
inc
pop
cmp
dec
mov
inc
push
addr16
insb
fidivs
sbb
cmp
out
aas
pushf
push
adc
inc
sahf
mov
cmp
inc
push
mov
js
fwait
fwait
cwtl
or
mov
mov
jg
mov
notb
jp
or
or
mov
adc
inc
fcoml
mov
sti
xchg
pushf
stc
clc
data16
gs
jo
push
mov
in
lds
mov
mov
das
sub
sbb
cltd
repnz
lret
sbb
sahf
mov
lea
js
in
imul
rolb
ret
add
xor
lahf
stos
adc
inc
push
xor
xor
fiadds
leave
lcall
push
cmp
adc
iret
lret
or
dec
push
rorb
fs
stos
sub
jb
mov
inc
ljmp
test
rolb
js
or
cmp
nop
mov
push
shrl
cmc
adc
pop
mov
mov
push
cmp
or
pushf
inc
test
scas
push
cmpsb
xor
push
andl
sub
gs
out
mov
jecxz
jle
pop
popf
shlb
push
idivl
add
repnz
rcll
orb
push
daa
xor
stc
push
xchg
pop
mov
into
mov
sbb
mov
mov
mov
out
mov
inc
xchg
sahf
pop
aam
push
xchg
addr16
icebp
add
fdivrs
test
sbb
xchg
loope
popa
or
push
aam
dec
icebp
cmp
es
sbb
cmpsb
push
push
and
fnstenv
andb
xor
pop
push
push
int3
cli
loopne
mov
cmp
jge
neg
xchg
sbb
add
sahf
fisubl
stos
in
sub
sub
testl
jb
out
dec
test
xor
pushf
fistps
addl
dec
pushf
push
dec
out
dec
xchg
pop
fsubrl
push
dec
test
inc
jmp
cs
adc
adc
mov
into
mov
xchg
ljmp
mov
lcall
arpl
and
addr16
imul
or
out
daa
lahf
lods
sbb
and
test
mov
jne
push
xchg
pushf
sub
or
mov
call
mov
mov
es
ljmp
push
rcrb
pop
shlb
ss
stc
prefetchnta
test
cli
mov
mov
pushf
lds
call
psadbw
pop
rolb
inc
xlat
add
mov
stos
sbb
subb
jb
cld
cmp
das
incl
pop
rcr
lret
int
adc
mov
mov
fdivrl
roll
mov
imul
repnz
pusha
sub
lds
je
mov
pop
push
cs
inc
movsb
cs
pop
gs
inc
fwait
out
or
das
xchg
jb
mov
jecxz
movsb
clc
imul
jns
stc
pop
add
adc
cmc
repnz
test
subb
hlt
xchg
movsb
mov
jge
hlt
jg
les
orl
jae
lahf
pop
repnz
lods
mov
dec
in
push
cmp
push
out
xor
cmp
xchg
outsb
jl
out
cmp
daa
jno
dec
repnz
xor
mov
in
sub
jne
cwtl
cmpl
jmp
cmp
add
shl
roll
cmp
adc
test
cmp
pop
mov
fidivl
fsts
loopne
orb
je
into
popl
cmpsl
ret
test
jecxz
sbb
sbb
pop
mov
cmp
loopne
gs
sub
jecxz
imul
jne
repnz
pop
jmp
jg
lcall
inc
dec
addr16
mov
jg
cmc
lret
in
add
sub
mov
pop
pop
test
or
addr16
xchg
mov
dec
push
adc
adc
add
sahf
sub
mov
mov
dec
push
pop
adc
jno
inc
jl
loope
outsb
lahf
jo
jge
insl
mov
sbb
aaa
mov
ss
fisttps
or
pop
dec
arpl
mov
mov
xchg
jecxz
xlat
lds
jge
inc
arpl
dec
mov
sahf
insl
add
stos
lock
lcall
in
lret
outsl
js
std
xlat
push
jl
imul
xchg
loopne
jo
lock
add
xchg
inc
call
int3
out
dec
mov
jecxz
aaa
adc
jo
mov
movsl
mov
out
xchg
mov
rcrl
pop
add
push
outsl
mov
or
fistpll
or
xor
xor
and
icebp
lods
lcall
and
xor
sub
in
pop
push
jl
pop
insl
rcl
pop
and
imul
sbb
aam
stos
pop
pusha
scas
and
jns
mov
negl
jecxz
mov
imul
pop
arpl
ss
fstps
fidivl
push
sbb
push
insl
clc
mov
test
inc
jns
lods
add
mov
mov
decl
add
sbb
cltd
mov
loopne
mov
adc
repnz
call
mov
outsb
stc
bswap
push
leave
inc
lods
or
jmp
dec
lcall
push
push
adc
cltd
addr16
add
xor
imul
or
in
push
pop
push
mov
adcl
insl
in
or
mov
xorl
add
xchg
fadds
scas
jns
je
or
cmpsl
jecxz
xor
je
xlat
push
push
cmp
mov
stos
dec
outsb
sub
in
rcll
sbb
xor
cwtl
in
sbb
cmp
pop
dec
clc
mov
ret
jmp
push
add
dec
popa
mov
stc
inc
call
push
mov
out
mov
add
adc
push
sti
mov
lret
shrb
enter
repnz
addb
je
imul
ljmp
push
sub
pop
lock
pop
daa
mov
mov
mov
mov
mov
lds
or
mov
and
inc
outsl
jecxz
xor
xchg
jl
fsubrs
shr
outsb
adc
out
pop
jns
addr16
shrb
push
mov
or
mov
loope
xor
sub
jae
add
pop
or
imul
inc
mov
and
mov
jne
lahf
lock
sub
add
mov
wrmsr
fcomp
insb
adc
fs
popf
xchg
lds
cmc
push
movsb
mov
sbb
and
int3
jno
ss
dec
cmp
cli
mov
add
aad
dec
mov
sbb
and
popl
imul
sbb
jecxz
outsb
outsb
icebp
lret
inc
xor
leave
pop
add
dec
outsl
int3
mov
jae
adc
cli
mov
loope
xlat
and
adc
out
mov
jle
dec
in
filds
inc
pop
ja
sbb
jp
mov
mov
mov
mov
sti
xor
inc
adc
xor
push
mov
jl
rclb
xchg
add
cmpsl
inc
pop
sbb
lret
mov
fsubrs
psrad
subl
lods
and
sub
add
or
repz
mov
shrb
push
add
xor
sti
shrl
adc
xchg
sbb
roll
ss
xlat
add
scas
stos
in
pop
ret
or
jmp
or
cmp
addps
test
xchg
loope
adc
cs
aad
aas
ja
adc
jbe
dec
add
les
pusha
stos
jmp
and
aaa
movsb
incb
dec
and
or
inc
jbe
lock
mov
adc
mov
out
stc
std
aam
xor
rclb
inc
inc
repz
push
das
adc
push
mov
js
add
jo
popa
xor
out
adc
outsb
mov
aas
and
bound
scas
pop
adc
sub
addl
arpl
xchg
leave
cmp
les
adcb
int3
sbb
push
mov
scas
xor
shrb
movsl
jl
sub
mov
repz
scas
xchg
dec
mov
into
push
jl
pop
xchg
xchg
mov
insl
mov
dec
push
and
jae
cltd
mov
push
ret
pop
loope
cs
loopne
mov
mov
call
rorl
aaa
jns
dec
add
popa
mov
dec
jb
and
xchg
xor
int
repnz
ret
jne
in
sti
sarl
mov
pop
or
test
xchg
and
push
aaa
repnz
mov
aad
mov
orl
cmp
mov
mov
dec
inc
xor
mov
ds
fisttps
fisttps
xor
and
push
sub
cwtl
push
sti
jno
cmp
mov
lods
imul
clc
mov
cs
mov
mov
mov
rorl
and
pop
call
pushf
or
inc
sbb
push
adc
mov
and
bound
lds
bound
andb
cmp
xchg
data16
inc
aad
adc
and
add
dec
scas
inc
xchg
call
lret
or
cmpsb
test
int
icebp
lahf
xchg
sarl
pop
or
cmp
fstpt
aad
rol
mov
imul
std
out
aas
xor
movsb
or
sbb
pop
cmc
mov
pop
xchg
mov
int
fucomi
jns
repnz
shlb
xor
pop
mov
xchg
mov
lahf
push
mov
in
sub
push
ljmp
outsb
imul
mov
pop
fistpl
sbb
clc
popa
notb
cs
push
lcall
mov
in
daa
jg,pt
scas
clc
push
iret
pop
mov
pop
shlb
push
mov
pushl
jns
inc
fildll
ja
or
test
icebp
fs
jle
mov
mov
push
fwait
mov
sbb
outsl
lahf
push
mov
ss
lea
fcompl
add
push
adc
movsl
arpl
xchg
iret
pop
stc
mov
push
ljmp
insb
xchg
mov
pop
aas
jl
loop
pop
pop
mov
xor
lods
jae
pop
pop
mov
fwait
into
dec
jns
call
push
inc
pop
sbb
or
fstp
icebp
scas
cmpsb
xchg
jge,pn
jbe
cmpsl
pop
pop
push
insb
mov
jg
jmp
cs
imul
pop
aaa
jle
inc
scas
cmp
scas
jg
jo
test
mov
jmp
jl
jae
ss
mov
xorl
sahf
jg
lret
shll
pop
fucomp
movsl
jg
aaa
pop
aas
jae
addr16
rcl
cltd
das
in
js,pt
xor
xchg
sub
test
iret
mov
std
clc
inc
into
lds
lods
outsb
pushl
aas
pop
lcall
in
loope
sbb
push
ss
dec
int3
nop
dec
insb
or
mov
ljmp
out
sahf
jmp
jno
popa
cld
mov
sti
in
int
loope
fstpl
sbb
jo
scas
pop
das
ss
repz
pushl
xchg
add
std
jb
xchg
push
das
in
aaa
popf
jg
jl
mov
sbb
push
sti
outsb
mov
int
gs
sub
mov
sbb
pop
sbb
sti
lahf
in
jnp
fistps
in
cmpsl
ds
test
repnz
inc
cmp
data16
shrl
int
jg
lcall
cld
das
je
push
lret
sti
aaa
sbb
pusha
lds
push
mov
test
mov
outsl
out
into
add
test
clc
jle
lods
call
mov
push
fiaddl
fdivr
ja
int3
fiadds
in
stc
das
fnsave
fbld
outsl
mov
repz
mov
repz
aad
xchg
popf
fwait
xor
popf
adc
aas
push
xor
mov
in
fs
mov
mov
js
ret
divl
aas
rcrb
mov
jbe
insl
lcall
mov
loopne
inc
bound
sub
scas
sahf
stc
jecxz
pushl
testl
iret
jbe
scas
cltd
jl
divl
mov
rcrl
out
negl
mov
dec
aaa
clc
loop
scas
stos
push
pop
jge
loopne
lahf
inc
add
clc
repz
popf
xchg
outsb
cltd
repnz
hlt
lret
ja
je
imul
and
insb
mov
out
jae
xchg
sbb
lock
jnp
out
inc
jg
cmp
jne
mov
pop
insb
neg
divb
into
andl
repnz
repnz
mov
pop
inc
out
sub
jnp
jp
call
cmp
divb
and
xor
lahf
xlat
inc
jle
push
inc
mov
bound
jbe
enter
js
out
repnz
ds
mov
int3
ljmp
cmp
movsl
lods
inc
icebp
popf
adc
pop
in
loopne
inc
fidivs
cli
mov
push
les
lcall
jmp
gs
scas
aas
mov
lret
repz
xlat
movsl
xor
pop
push
inc
sbb
cmp
xchg
add
rep
or
cs
dec
mov
xchg
addl
hlt
inc
add
lret
dec
inc
dec
xchg
popa
push
je
loopne
xorl
add
stos
xor
std
adc
aaa
out
movsb
pop
outsb
xchg
pop
inc
mov
call
push
mov
mov
or
and
fistps
popf
fcomps
mov
mov
in
lret
inc
out
and
aaa
je
aaa
sbb
fld
shrl
mov
je
jle
sub
sbb
or
mov
dec
adc
cwtl
insl
pop
sub
pop
cmpsl
xchg
sbb
daa
pop
push
fisttpll
and
dec
or
out
lods
rcr
shll
mov
loop
scas
or
insb
sub
and
inc
dec
in
jmp
ss
sub
push
pop
mov
testl
rorb
lret
stc
lahf
sub
pushf
xor
inc
cmp
add
jns
iret
mov
mov
or
pop
int
add
dec
or
sbb
mov
popf
sbb
sarl
pop
pop
and
sahf
jne
and
pop
jno
and
inc
and
jp
js
popf
sub
daa
jl
mov
and
xchg
mov
fldcw
push
mov
adc
ds
repz
cmpsl
in
stos
pop
cmp
je
add
imul
jbe
or
cmp
jge
fiaddl
cmp
and
imul
push
rclb
je
mov
and
push
fsubrs
push
and
into
push
ljmp
mov
xchg
das
arpl
xchg
mov
pusha
dec
pop
cmpl
jge
clc
mov
fistps
push
pop
mov
orl
nop
or
dec
in
imul
adc
xlat
pop
dec
push
mov
add
xor
fwait
loope
mov
cltd
xor
inc
mov
cmp
jp
jnp
rcrl
loop
and
push
test
jmp
mov
int
lock
scas
or
lods
fisttpll
jmp
test
out
jl
out
cmpsl
pop
movb
xor
and
jg
rclb
imul
pop
pop
outsb
repz
push
shrb
lock
call
stc
arpl
pushf
das
lods
stos
leave
mov
push
imul
add
inc
sbb
dec
les
movsb
add
jb
xlat
inc
rcl
cmpsb
inc
sahf
push
sbb
jmp
sarb
outsb
cmp
insb
push
cmpsl
mov
pop
jmp
push
dec
imul
xchg
mov
cmp
notl
rdtsc
rcll
pop
and
out
inc
adc
repnz
xor
jl
mov
jl
popa
cli
xor
mov
mov
mov
add
js
adc
mov
mov
insb
jne
push
stos
adc
daa
inc
dec
repz
dec
pop
aam
or
adc
fwait
outsl
lcall
pcmpgtd
cmp
dec
lcall
push
or
inc
cwtl
mov
arpl
mov
dec
push
xchg
lret
cmp
pusha
inc
js
push
xchg
xorl
jns
cltd
push
push
sarb
push
mov
jp
adc
test
test
and
sbb
subl
gs
mov
mov
push
xchg
repnz
jg
cmp
ja
mov
pop
daa
mov
jle
mov
mov
mov
cmc
movsb
sub
and
rcr
xchg
mov
push
subb
daa
outsb
add
push
in
insb
pop
push
lock
xchg
sbb
adc
mov
xor
out
push
loop
mov
sub
jno
xor
lcall
sub
jnp
data16
push
adc
or
mov
pusha
daa
mov
fnsetpm(287
shr
push
push
loop
ljmp
push
jne
call
lea
mov
dec
shlb
push
mov
jge
push
or
or
pop
imul
inc
lock
sbb
or
lret
mov
in
out
cs
mov
std
movsl
pusha
pop
and
dec
ja
and
repnz
insb
pop
or
push
cs
call
es
lret
scas
rorb
ret
xchg
sub
cmp
add
and
pop
jmp
hlt
mov
jp
xchg
mov
or
mov
add
xor
cmp
add
jmp
movsl
jae
sbb
movsl
inc
adc
push
pop
adc
or
in
gs
mov
popa
xor
sbb
xor
xchg
dec
jmp
cmpsb
sub
imul
pusha
mov
sar
sub
sbb
icebp
mov
movsl
clc
dec
addb
and
mov
pop
in
in
mov
cmp
mov
cld
add
loope
jecxz
in
xlat
das
sub
fdivs
bound
mov
and
xor
jecxz
icebp
cltd
dec
out
scas
xor
movsl
sets
movsb
repnz
xchg
aaa
movsb
loope
sbb
sahf
cwtl
cmpb
out
push
arpl
mov
fisubrs
adc
call
loop
jg
pop
jne
in
lods
push
popa
testb
out
add
fiadds
add
mov
in
adc
sar
adc
fcomi
andl
push
sbb
mov
imul
xchg
xchg
jl
xchg
push
inc
pop
inc
and
stc
push
inc
sub
ss
cli
push
sub
jb
jns
mov
cmovge
adcl
mov
xchg
mov
stos
pop
jle
lods
mov
pop
hlt
stos
pop
xchg
jbe
in
loop
or
lock
adcb
cmp
pop
mov
fs
mov
sbb
scas
xor
in
xchg
dec
cmpsl
cwtl
lods
aad
push
xchg
outsl
out
es
add
push
or
cmpl
rorb
mov
push
mov
lock
sub
or
add
aam
inc
jbe
dec
ljmp
out
les
rol
xchg
add
push
cmc
bound
push
test
fcomi
out
xor
int
sarb
jb
lret
mov
inc
mov
fadds
sbb
cs
bound
test
xor
add
test
adc
or
inc
cwtl
mov
lret
sub
sti
or
call
dec
ret
popf
call
out
cli
scas
fisubrl
add
imul
jl
cmp
cltd
cwtl
lds
aam
push
inc
in
loopne
and
xor
xchg
sub
lret
gs
push
insb
xor
hlt
leave
mov
nop
sbb
test
sub
and
lcall
xchg
lock
dec
add
lcall
leave
jno
filds
pop
mov
jb
test
scas
or
loope
lcall
movsl
pop
stc
test
das
mov
enter
mov
loop
js
jecxz
test
sub
int3
aad
push
xchg
lcall
fmull
dec
ds
fistpl
out
xor
xchg
aas
mov
repnz
repz
stc
cmpsl
stos
vunpckhps
mov
int
add
and
mov
pop
vmread
or
sarl
dec
add
orb
sti
mov
xchg
pusha
push
test
icebp
cmp
sub
inc
divl
xchg
or
push
repz
insl
insl
les
test
loop
ficoml
imul
pop
jge
and
insl
xor
jb
push
jle
sub
or
mov
xlat
fcomi
adc
scas
xor
cltd
jp
movsb
iret
cli
int3
shlb
mov
cli
or
stos
insl
test
push
pop
mov
pop
jne
sub
xchg
leave
ss
adc
mov
dec
sbb
dec
stos
adc
test
add
gs
dec
test
push
mov
xchg
dec
cmpsb
aam
inc
shll
mov
lret
push
lahf
mov
sbb
inc
aam
dec
shrb
xor
frstor
inc
imul
or
and
mov
out
cmpsb
data16
loop
lret
adc
push
adc
flds
lds
add
jmp
aad
imul
ja
ds
add
and
pushf
xchg
cmpsb
sub
jb
int3
aaa
cmpb
mov
mov
je
addr16
fistl
out
jns
rorb
ss
shll
sub
inc
and
inc
imul
loope
add
adc
pop
jecxz
xor
and
jb
test
int3
cli
rorb
jbe
mov
lahf
aam
mov
sbb
adc
jp
inc
lods
cmpsl
fsubrs
fnsave
push
test
pop
in
lcall
inc
push
out
inc
mov
mov
add
mov
mov
inc
inc
jns
in
mov
ja
cmpsl
mov
cmpsb
inc
in
mov
imul
enter
sub
movsb
cwtl
mov
push
pop
push
movsl
xor
xor
ret
xor
stos
imul
adc
sub
dec
and
sbbb
pop
rorl
xchg
hlt
inc
lods
xchg
xor
pusha
enter
icebp
cmpsl
mov
mov
les
popa
mov
out
je
mov
movsl
push
xor
fistpll
rclb
mov
jge
sub
sarb
mov
add
sub
xorb
mov
sub
popa
adc
pop
dec
adc
jecxz
cs
lock
movsl
xor
xchg
push
roll
mov
push
push
sbb
test
out
xchg
js
out
sub
sbb
inc
dec
ss
dec
fistpll
sbb
xor
call
fwait
ret
lahf
out
push
pop
in
cmp
shlb
jns
xchg
add
or
shlb
jae
adc
sbb
out
hlt
shrl
loope
sub
hlt
pusha
mov
push
inc
sub
cmp
add
mov
sbb
push
sub
rolb
aaa
push
rorl
subb
cltd
adc
add
lock
lret
pop
sub
sbb
enter
aaa
mov
sti
xchg
jb
push
nop
inc
cli
adc
sub
test
inc
cmpsl
push
loop
movsb
scas
xor
daa
xchg
jbe
adc
ret
loop
aas
push
stc
out
pop
test
xor
rolb
scas
rclb
sbb
test
push
inc
clc
and
in
inc
loopne
push
xchg
leave
add
sbb
and
ja
lcall
mov
scas
push
ret
adc
inc
int3
aaa
imul
sub
dec
cmpsb
sub
fadds
xchg
jge
xchg
mov
inc
pop
push
filds
gs
pushf
jle
sahf
clc
push
inc
cs
lds
pop
inc
fcoms
xor
dec
popf
arpl
pop
lock
in
stos
adc
icebp
xchg
cmp
dec
inc
js
and
dec
int
xchg
pop
mov
pop
pop
mov
aad
mov
out
mov
imul
fstl
and
pop
and
cmp
mov
stc
stos
stc
xor
xor
xchg
inc
mov
lds
aaa
sub
sbb
test
mov
fwait
xchg
pop
in
cmp
mov
dec
leave
mov
lret
push
addr16
jg
push
push
in
negb
rclb
fcompl
dec
std
dec
add
pop
push
sbb
pushf
sbb
fidivl
int
jno
in
mov
xchg
sbb
or
rcrb
sub
push
lahf
jl
add
push
pop
sub
and
add
negl
inc
popf
push
frstor
add
cmp
popa
out
add
xchg
pop
shlb
push
adc
add
inc
nop
cmpsl
add
mov
cmp
lds
test
fmull
add
imul
sub
pusha
xchg
inc
cmc
push
and
mov
ret
movsb
call
sub
cwtl
popa
mov
out
xor
inc
pop
dec
xchg
sbb
mov
or
lods
lret
sub
push
aaa
outsb
pop
jg
sub
xor
aad
sub
das
testb
dec
cmp
dec
cmp
cmp
pop
fs
push
mov
adc
cmp
test
dec
add
fs
sbbl
adc
fcoms
mov
xor
imul
inc
fwait
pop
fstpt
imul
xchg
mov
mov
sub
aas
or
adc
and
idiv
popa
jg
jnp
inc
fiadds
mov
in
int3
mov
cld
shlb
xor
rorl
arpl
or
int3
bound
dec
out
pop
fs
cmpsl
jmp
sbb
mov
or
push
sahf
mov
lcall
adc
mov
jns
push
jl
push
dec
cltd
add
inc
js
sbb
add
subl
mov
lahf
adc
das
cmp
scas
mov
sahf
test
adc
add
and
adc
mov
cmp
xchg
out
lret
push
inc
xchg
sbb
outsl
sub
fsub
cmp
dec
insb
mov
outsb
or
sub
xor
mov
mov
mov
mov
cmpsb
sub
popf
stos
dec
aaa
iret
pusha
sub
xchg
mov
sub
mov
shr
or
loopne
push
stos
mov
inc
roll
dec
and
or
sbb
xchg
sbb
jne
xchg
lds
mov
loopne
mov
adc
cmp
ret
dec
jl
jb
nop
jae
addl
xchg
movsb
sbb
fisubs
sub
mov
xchg
sarl
xchg
flds
jp
call
nop
mov
or
je
sbb
je
cltd
adc
leave
ds
mov
add
inc
inc
jo
push
cmpb
inc
xor
ret
push
dec
es
movsb
inc
das
pop
dec
pop
or
inc
and
push
sti
das
stc
js
mov
cmpb
filds
aaa
pop
outsb
lea
cli
jl
mov
inc
clc
daa
in
ja
loope
or
push
add
mov
xchg
jbe
cmp
pop
rcrb
das
mov
push
fsubrs
not
pop
add
imul
shlb
aad
sbb
mov
fidivrl
popa
cmpsl
dec
or
loope
pop
mov
outsl
scas
xlat
or
mov
adc
es
stos
lahf
mov
jno
sbb
xchg
sbbl
jbe
pop
sahf
minps
mov
jge
jle
leave
hlt
int3
sub
push
inc
pop
inc
pop
lret
cmpsb
adc
mov
dec
test
and
scas
arpl
and
adc
pop
dec
push
lds
inc
cmp
pop
push
sub
dec
sub
add
jne
sbb
pop
jae
add
ja
in
jmp
adc
es
add
adc
push
mov
test
rol
pusha
pop
or
mov
repnz
jp
aam
and
mov
fs
dec
aad
imulb
push
outsl
aad
lods
lret
push
add
mov
lds
sub
popa
jecxz
dec
adcl
mov
push
mov
outsl
pop
stc
out
jl
cmp
addr16
pushf
cmp
int3
cltd
xor
mov
dec
jecxz
adc
mov
pop
bnd
cmp
mov
punpckldq
fwait
xor
pop
out
mov
xor
popf
push
pop
adc
xchg
aad
stos
sti
iret
lret
fmuls
jl
or
xchg
dec
sbb
xchg
dec
mov
icebp
jb
adcb
je
fcmovnu
dec
add
rorb
pop
int3
xor
jbe
clc
aas
test
xchg
sub
ljmp
push
mov
push
jl
mov
push
scas
xor
mov
push
mov
iret
jp
cmc
fwait
cmp
rcrl
jbe
sub
xchg
xor
repnz
lods
inc
xor
std
mov
add
rcrl
cmpsb
insb
push
movsl
xchg
in
xorl
pop
dec
pop
or
jp
mov
add
cmp
jg,pn
inc
sub
cmp
fisubrs
hlt
cmp
sub
mov
and
dec
jg
insb
das
aaa
and
dec
cmpsl
xchg
icebp
add
loop
and
mov
sub
subl
rol
pop
cmc
adc
jmp
pop
mov
adc
js
mov
pop
fucomip
fidivrs
cmp
and
insb
mov
jp
movsb
dec
pop
xchg
mov
scas
mov
es
jbe
sub
out
or
ja
inc
xchg
adc
addr16
xor
mov
mov
mov
cmp
mov
cltd
fcoms
mov
pop
mov
xchg
fidivs
sub
xchg
or
sub
das
out
icebp
add
cmp
adc
pusha
add
out
cld
pop
xchg
shlb
cmpb
jo
and
call
mov
shl
fsubl
push
aam
insl
pop
or
pop
dec
insl
pop
or
add
fwait
bnd
outsl
bound
add
icebp
mov
add
mov
icebp
xor
dec
inc
cmc
inc
adc
push
ljmp
ja
and
or
das
sbb
push
jnp
pop
mov
sbbb
push
leave
je
push
aam
int3
ret
sete
subl
and
cmp
mov
dec
shll
mov
shrb
mov
insb
mov
jbe
dec
or
scas
jge
jb
mov
mov
les
fisubl
xlat
cmp
jmp
xor
js
andl
mov
fdiv
mov
lcall
sbb
inc
xor
pop
mov
sub
shlb
xchg
pop
bndstx
testb
jo
pop
icebp
das
test
hlt
pop
jno
imull
imul
mov
icebp
fcmovb
int3
testl
ret
xchg
inc
outsb
arpl
fadd
into
js
stos
ja
out
mov
mov
or
out
insl
hlt
mov
inc
lret
dec
stc
into
mov
cmp
add
test
dec
fwait
testb
push
mov
add
inc
and
dec
xchg
loopne
sub
fistpll
mov
shll
adc
mov
daa
aaa
mov
cmpsl
repnz
mov
call
lret
outsb
sub
push
inc
mov
dec
or
or
loope
sub
das
in
stc
xchg
icebp
mov
cmp
mov
out
dec
subl
or
jl
mov
aam
push
add
out
fwait
mov
les
mov
daa
rcl
inc
iret
mov
sbb
lock
xchg
fsubr
into
sar
iret
pushf
lock
scas
in
adc
daa
scas
dec
out
std
das
subl
int
mov
insb
sbb
jns
mov
mov
in
je
out
mov
dec
es
insl
lcall
push
mov
sbb
jmp
xor
jbe
inc
std
pop
jecxz
jg
xchg
loope
pop
fwait
cmpsl
filds
or
sti
enter
icebp
idiv
cmc
scas
mov
mov
hlt
mov
out
lock
inc
jg
mov
std
jmp
and
cltd
mov
aam
mov
shrb
movsl
test
rorl
notb
mov
out
imull
and
xchg
lods
jnp
test
mov
xchg
jle
addr16
mov
fisubrs
addr16
push
fdivp
mov
insl
sub
iret
rclb
mov
mov
iret
stc
loopne
or
lahf
push
lods
pop
cmc
cmp
aas
sub
movsl
cld
int3
ss
cmp
push
pop
mov
inc
js
lock
mov
add
aas
pop
ds
clc
pop
xlat
xor
iret
test
call
aam
xchg
pop
test
push
lahf
das
loopne
jg
cli
sti
incl
aas
cmp
hlt
rorl
movsl
lahf
jno
shll
mov
xchg
xchg
mov
pop
push
pop
adc
idivb
sub
daa
leave
insl
mov
sti
lock
mov
sarb
insb
out
cmp
mov
push
inc
je
mov
dec
jg
cmp
xchg
xchg
sub
fcoms
stos
mov
jnp
lret
mov
xor
push
or
ret
sti
imul
xchg
out
pop
xor
inc
repnz
pop
es
imul
inc
popf
pop
dec
dec
push
subb
mov
xabort
ret
push
xchg
jmp
lock
movsl
out
mov
cmc
sub
in
repz
in
push
rcrb
jle
daa
mov
mov
fiadds
push
pop
xchg
hlt
cmpsl
notb
idivl
sbb
mov
inc
mov
shlb
mov
lahf
call
stos
iret
test
jge
mov
pop
aaa
push
push
fisttpll
stc
roll
inc
lods
mov
pop
xchg
mov
outsl
outsl
lret
add
fidivrl
push
cli
dec
out
imul
jg
mov
loope
mov
jge
dec
fcmovnu
fistl
push
jno
mov
ljmp
enter
mov
pop
jg
cmp
loopne
lods
lods
xchg
mov
xor
icebp
jmp
aad
shlb
mov
dec
enter
in
push
and
inc
mov
mov
das
clc
sub
sub
xor
imul
or
sbb
fdivl
sbb
insl
popf
add
call
shl
mov
aas
icebp
cmpsl
lcall
mov
push
out
pop
js
cld
xchg
daa
pop
fbstp
add
mov
insb
andl
dec
jns
mov
mov
call
mov
cmc
cmp
pop
inc
fwait
pop
leave
mov
fnstenv
dec
pop
or
and
test
insb
mov
pop
movsl
jo
test
rorb
and
xor
mov
movsb
push
inc
out
add
adc
cmp
fincstp
push
pop
cmp
insl
jno
jp
insb
insb
xlat
xor
divl
push
popa
jae
inc
inc
stos
call
fsubs
pop
xchg
jle
xor
sub
adc
lock
in
mov
sub
test
add
pop
pop
cmp
fimull
xchg
mov
jne
scas
mov
inc
aam
cs
xchg
loopne
push
xchg
shlb
pushf
rol
and
xchg
pop
jno
sub
push
fbstp
dec
icebp
sbb
call
imul
or
jbe
stos
int3
mov
aaa
and
jno
es
xlat
adc
mov
fcmovnbe
rorl
in
andb
in
or
insb
mov
hlt
in
popf
mov
fistl
add
pop
fdivr
lea
dec
sbb
aad
jp
sub
popf
rcrb
ss
mov
cmpb
hlt
loop
bound
xchg
data16
mov
inc
out
scas
jge
mov
cmpsb
je
pop
xchg
in
iret
and
lcall
or
push
repnz
shl
xchg
daa
inc
dec
sbb
mov
in
rcrl
aaa
sbb
movsl
mov
or
cmp
xchg
rcrl
fs
cmpsl
lret
cld
mov
cli
out
cli
into
add
mov
cltd
call
call
mov
pusha
fucompp
imul
adc
in
subl
push
rolb
pop
pop
sub
movsb
push
or
scas
pusha
push
adc
les
test
out
out
fimull
lret
aad
adc
xchg
xchg
mov
mov
jne
ret
xchg
mov
mov
popa
fwait
jo
or
les
jae
icebp
popa
or
push
ss
dec
xchg
dec
and
jne
int
cld
sub
aam
scas
jne
xchg
std
out
loop
push
jno
jbe
jbe
mov
sbb
mov
lahf
jg
mov
lahf
or
jae
daa
mov
call
dec
inc
and
fmul
js
dec
jns
aas
xchg
repz
mov
popl
scas
sbb
test
or
mov
xchg
cltd
push
mov
sbb
mov
cmc
pop
out
or
cltd
xor
cmp
fs
mov
sbb
fsubs
popa
fwait
dec
lods
mov
ficomps
sti
sbb
out
test
lahf
pop
cli
dec
jbe
push
mov
cs
fdivl
stos
and
dec
dec
outsl
sbb
mov
push
rcrb
jmp
mov
std
lcall
loope
inc
enter
and
inc
and
mov
mov
mov
pusha
sarl
pushf
jecxz
aad
into
stos
adc
push
mov
add
pop
mov
push
into
mov
adc
sub
add
lock
jle
stc
pop
scas
imul
test
lret
hlt
lods
decl
ja
inc
cli
inc
jg
xchg
push
cmp
jge
call
psadbw
adc
inc
sbb
cwtl
mov
sti
imul
push
mov
movl
xor
enter
lahf
dec
ds
xor
dec
and
xor
sbb
scas
lret
in
xchg
daa
pushf
dec
ds
mov
icebp
fwait
pop
dec
sahf
jl
mov
outsl
cmp
daa
sahf
dec
fidivs
xor
nop
and
mov
jmp
jb
mov
rep
and
push
mov
or
jecxz
cmp
out
jge
call
mov
shll
xchg
aad
fiaddl
xor
insl
andb
inc
dec
icebp
push
and
push
sbb
jns
dec
lods
dec
addr16
jns
inc
dec
icebp
data16
lcall
pop
in
mov
jmp
loop
in
ljmp
xor
jecxz
mov
xor
or
shll
lahf
int3
and
ficomps
dec
inc
enter
add
sbbb
xchg
icebp
push
and
lret
hlt
add
lea
and
adc
cmpsb
jnp
daa
mov
out
cwtl
jb
in
xor
pop
push
xchg
pop
sub
pop
rcll
add
inc
jo
ret
cmpsl
lods
or
xchg
repnz
inc
test
jnp
mov
popa
pop
loopne
or
jp
cltd
mov
aas
stos
or
out
mov
mov
dec
xchg
and
loop
je
pop
jl
xchg
pop
test
out
pushf
pop
dec
xor
or
insb
adcl
mov
cs
or
xchg
outsl
mov
xor
subl
xor
mov
shlb
xchg
push
cwtl
xchg
push
mov
sub
xor
rcrl
cli
clc
scas
sub
jb
jg
cltd
ss
pop
into
lahf
rclb
dec
xor
push
fisubrs
jnp
jle
or
jge
dec
cmpsb
mov
cmp
lcall
movsb
mov
dec
or
xchg
div
xor
jge
push
mov
aaa
mov
pop
jb
icebp
adc
jo
pusha
cli
fldl2e
movsb
or
rolb
movsb
cld
dec
cmp
je
shlb
pop
ret
fdivl
fs
rolb
and
pop
in
mov
and
lcall
mov
das
jns
cmp
mov
jo
daa
lahf
inc
jb
lods
int
test
push
pop
cmpsl
dec
enter
insb
xchg
stos
leave
out
pop
cltd
or
scas
mov
jle
imul
xchg
lret
iret
test
scas
in
incb
les
jmp
mov
cmp
lret
mov
in
mov
aam
in
sbb
mov
cli
and
sub
lock
jo
cmp
stos
cmc
adc
push
mov
xchg
cmp
test
jl
lret
out
sbb
lcall
sub
sub
fwait
jne
jb
adc
pusha
ret
jno
add
jl
jmp
mov
pop
mov
in
andl
push
ss
xchg
push
sub
sbb
mov
inc
cltd
jecxz
add
and
mov
mov
out
insl
jno
int3
pop
repnz
lahf
jo
xor
addr16
jg
sub
addr16
icebp
pop
jecxz
leave
ds
shlb
inc
and
or
push
dec
cmpsb
cmp
xor
out
in
inc
mov
fsubp
mov
hlt
lds
inc
mov
sbbl
movsb
and
mov
xor
into
lods
jo
ds
lahf
aaa
sub
lret
repnz
cmp
xor
sarb
scas
stos
xor
aas
cmp
dec
lods
sub
outsb
inc
data16
repnz
cld
adc
push
mov
jecxz
cmp
jmp
rcll
xchg
pop
paddsb
pop
shrd
jge
jo
cmp
sahf
ds
jno
lea
mov
icebp
inc
clc
pop
jns
pop
pop
jb
dec
and
sub
arpl
std
pop
jmp
or
test
mov
loop
jecxz
xor
sub
aas
jmp
insl
mov
pop
cmpsl
rcrb
testb
clc
dec
movsb
loope
mov
jg
movsb
push
adc
pop
lcall
je
xchg
adc
jns
xchg
sub
je
fsubs
pop
push
jo
cltd
std
mov
movsb
or
lods
imul
or
call
adc
mov
mov
lds
les
adcb
test
loope
jbe
pop
xchg
dec
test
shll
mulb
psrad
leave
scas
insl
xlat
pop
lds
inc
lods
adc
push
int3
call
pop
cld
xchg
lahf
pop
pop
clc
movsl
add
insl
or
dec
fwait
pop
shl
or
cmpsl
adc
pushf
and
loopne
sub
jnp
aam
pop
cmpsl
sub
repnz
mov
call
inc
call
test
push
popf
cli
inc
clc
jns
add
loope
loop
in
push
movsl
mov
fcmovnbe
imul
push
adc
dec
and
test
loopne
test
int
mov
pop
lret
testl
cmp
adc
lret
sbb
lods
lea
loopne
xchg
inc
inc
fld
xlat
int3
je
pop
mov
in
inc
push
and
mov
mov
push
icebp
pop
repnz
or
icebp
std
or
popf
adc
mov
push
push
mov
mov
sar
adcl
bound
fnstenv
jnp
pop
xor
stos
dec
mov
xor
dec
jp
popa
cs
mov
lret
sbb
js
and
pop
xor
jle
bound
mov
push
sbb
cmp
or
jbe
pop
sub
mov
pop
addr16
outsl
cwtl
or
idivl
inc
mov
pop
xchg
push
iret
dec
imul
mov
call
int3
ljmp
aam
dec
not
jl
or
mov
int3
mov
cmp
and
ja,pt
mov
std
into
mov
xor
cmpl
test
loope
loop
loop
aad
test
cs
mov
mov
mov
inc
mov
stos
imul
sti
pop
sti
mov
outsl
pop
sti
leave
lods
out
rcrl
out
sbb
loopne
jno
jae
cmpsb
cmpsb
lea
mov
mov
jne
jl
ficoml
pop
je
xchg
mov
inc
pop
pop
fmull
stos
icebp
xor
or
dec
inc
in
push
jnp
cwtl
push
ficoml
or
stos
test
xor
test
pop
clc
stos
pop
jecxz
cmp
pop
out
shl
inc
ja
testl
test
cmp
and
cmp
mov
mov
jg
jge
mov
mov
pusha
inc
in
dec
pop
pop
in
pop
adc
jecxz
or
shrb
es
mov
sub
cmp
cmpsl
jne
loopne
in
dec
in
jle
stos
bound
pop
idivb
jge
push
dec
jo
mov
sbb
inc
fists
push
push
ja
lret
mov
cmp
or
gs
cwtl
dec
addr16
or
mov
sarl
in
jne
sbb
cwtl
loope
je
inc
jne
clc
pushf
xchg
mov
xor
ja
mov
std
push
test
loopne
mov
daa
and
cmp
push
jne
mov
ss
xor
jnp
mov
mull
outsb
jb
sahf
leave
iret
mov
ja
int3
lret
imul
mov
pop
sbb
aaa
pop
je
mov
out
add
mov
fldt
std
pushf
into
fdivs
push
pop
stos
or
and
mov
mov
add
shrl
pop
pop
sbb
pop
ss
daa
pushf
cmp
test
mov
iret
xchg
loop
in
lods
push
lahf
add
aad
jo
sbb
mov
pop
lock
fsubrs
jne
cmp
fisttpl
cmpsl
iret
cld
sbb
xchg
cmp
jg
xchg
movsb
sbb
jle
push
mov
mov
and
shll
or
mov
lret
jge
xor
stos
insl
jb
loopne
jae
lea
jo
mov
and
loope
jge
cmp
inc
mov
mov
lret
popf
addl
sub
xor
imul
inc
sbb
dec
adc
cld
lds
outsb
lods
cmp
int
test
sbb
dec
ret
andb
loope
mov
nop
xor
adc
decl
add
or
jne
btc
gs
adc
fcoms
cmpsl
insl
mov
add
insl
jo
or
dec
je
cmp
orl
and
aaa
sub
inc
das
out
mov
stos
es
inc
mov
adc
enter
aaa
push
mov
std
in
xchg
inc
pop
arpl
mov
dec
mov
dec
scas
jb
jmp
sub
jmp
div
lods
jle
pop
lock
es
notb
sar
fldcw
mov
mov
enter
push
sbbb
leave
or
sahf
in
push
inc
push
lahf
pop
inc
push
lock
das
cmc
jl
movsb
and
xchg
aad
popf
pop
shll
pop
dec
jl
add
faddl
push
push
bound
xchg
andl
pop
jbe
mov
cmp
mov
jle
mov
hlt
cmp
repz
ss
test
push
push
push
not
ds
push
sbb
cmp
leave
shrb
iret
je
sbb
out
icebp
xor
adc
pop
sahf
sbb
popf
and
mov
testl
lcall
jl
xchg
cmp
fcoms
mov
nop
movsl
mov
and
mov
jmp
mulb
gs
sub
add
lret
imul
stos
test
sbb
sete
lret
std
xor
pop
mov
cld
out
jmp
pop
out
inc
out
push
stc
js
cmp
mov
mov
mov
aam
push
test
loope
mov
mov
inc
int3
stc
or
out
cmc
mov
add
stos
jo
and
sub
out
cli
je
dec
in
pop
fwait
mov
sub
sub
jle
lods
incl
inc
inc
ds
mov
nop
loop
push
jnp
int
and
je
gs
pop
cmc
jl
lret
outsl
std
mov
outsb
int
insl
inc
rcr
sub
mov
sub
leave
aad
mov
imul
xor
test
jo
mov
mov
xor
xor
xlat
pop
xchg
cmp
dec
xor
scas
inc
dec
or
std
or
neg
pop
sub
loope
inc
dec
push
mov
adc
jecxz
pop
push
lods
mov
mov
pushf
shrb
mov
imul
mov
cld
inc
xchg
test
mov
mov
mov
adc
cmp
int3
mov
mulb
push
push
loop
insl
jge
dec
jno
and
movsl
std
xchg
xor
cmpsl
sar
push
xchg
repnz
push
mov
enter
sub
test
inc
jp
jnp
jp
insb
sbb
sub
les
sahf
sub
push
cmp
and
push
jns
cmp
mov
cltd
fsubrl
or
pop
mov
pop
and
fcomps
mov
mov
sub
pop
jg
jp
or
rorb
sbb
xor
cmp
inc
inc
and
jns
xchg
ljmp
cmp
ret
orl
je
inc
cmp
push
test
inc
mov
inc
push
pop
and
xor
out
mov
pop
dec
pop
imul
pop
test
daa
mov
or
or
cld
push
xor
dec
add
es
cltd
gs
xchg
arpl
mov
and
mov
jecxz
in
jno
stos
mov
and
sbb
cmp
push
xchg
pushf
sahf
xchg
adc
orl
stos
in
sbb
push
pushf
cli
mov
xchg
mov
pop
fldt
outsl
daa
or
jecxz
loop
insb
mov
std
mov
aas
mov
cmc
repnz
inc
js
xchg
scas
in
stc
push
mov
push
stos
sbb
aas
insb
ds
rorb
fildll
pop
int3
inc
push
mov
jl
adc
test
cmp
outsl
int
and
dec
and
daa
std
lret
and
mov
rcrl
ret
les
mov
stos
xchg
cltd
xchg
subl
jmp
lahf
adc
movsl
lcall
adcl
rol
int
sahf
leave
int
push
sar
jmp
pop
fdivl
int
movsb
cmpsb
xlat
je
or
push
std
push
push
shr
pusha
push
shl
cmp
lcall
pop
pop
scas
sbbl
mov
sar
jns
stc
sub
cwtl
mov
lock
pop
or
cs
inc
scas
scas
leave
pop
fistps
shlb
inc
testb
cmc
loopne
test
shr
loop
popa
xchg
ljmp
aam
push
sahf
push
stc
insl
mov
xor
sub
dec
sub
mov
cld
add
lods
neg
lret
push
dec
mov
dec
fwait
dec
push
pop
sbb
jne
dec
popf
pop
loope
xor
repz
ss
sub
fs
test
ret
xchg
loop
into
cmpsb
aam
bound
out
fcmovb
sbb
xlat
nop
cmc
pop
std
push
fwait
ds
int
out
test
inc
imul
mov
push
js
out
sbb
jge
ret
add
sahf
inc
out
movsb
adc
das
mov
sti
xchg
stos
repnz
rorl
jl
divl
mov
inc
out
jo
add
cmp
adc
bnd
aas
test
sub
push
ror
aam
xchg
out
xor
ss
aad
mov
or
testb
xchg
mov
ja
jae
imul
in
outsb
popf
jecxz
f2xm1
cmp
pusha
leave
lock
out
cld
enter
mov
nop
aas
arpl
ds
pop
mov
fnstenv
lds
stc
inc
lods
adc
or
incl
and
pop
xor
aad
movsl
add
out
inc
test
push
popa
sbb
shl
mov
orl
insl
daa
dec
cwtl
data16
jge
jbe
hlt
into
xor
push
in
pop
dec
das
lahf
ljmp
stc
inc
xchg
mov
cmp
repnz
insb
push
in
lds
xchg
lret
mov
lds
ljmp
data16
jo
mov
pop
fsub
lock
fs
sbb
into
popa
adc
pusha
cmp
pop
les
push
scas
adc
xchg
mov
jb
lcall
test
xchg
fimuls
sbb
hlt
pop
dec
ljmp
inc
lds
popa
push
inc
shl
ja
mov
aas
aaa
hlt
sti
and
cmc
test
std
mov
and
or
std
test
dec
movsl
clc
jns
ljmp
mov
add
push
shr
rclb
out
push
pop
adc
aam
clc
dec
xor
aas
xchg
fsubrl
out
jl
orb
out
jns
out
cltd
inc
xchg
ficoml
inc
es
push
mov
adc
push
out
mov
inc
add
dec
jae
add
ficomps
fstpl
dec
lret
repnz
test
or
mov
scas
icebp
cmpsl
inc
ret
out
testl
or
push
lea
popa
sbb
cwtl
nop
jno
clc
mov
out
and
jle
mov
dec
mov
mov
inc
push
cmpb
dec
mov
cmpsb
leave
add
popf
lds
dec
aas
and
and
dec
aam
hlt
sbb
jns
aaa
cli
dec
pop
mov
pop
or
jo
cwtl
daa
outsb
xchg
or
nop
cmp
xchg
ret
shrb
std
inc
mov
out
push
add
aam
mov
push
push
testl
mov
mov
and
enter
outsb
or
push
adc
inc
cmpsl
bound
test
push
adc
sbb
pop
xchg
xor
push
aas
push
lret
andb
outsb
in
sbb
sarl
push
add
mov
ds
pushf
and
mov
xor
add
insb
mov
push
lret
idivl
jbe
pusha
scas
cmp
push
xor
push
push
test
push
test
or
xchg
sbb
orl
and
xchg
sub
sub
sub
mov
dec
mov
adc
enter
sbb
cli
cmp
mov
movsl
sbb
je
push
cmp
sub
stos
mov
pop
xor
or
and
push
mov
test
xor
pop
leave
int
cmp
gs
mov
mov
xor
xor
lock
fwait
dec
test
jb
sbb
sahf
or
inc
dec
addr16
iret
jmp
addr16
jl
lods
test
jbe
loop
loope
das
pop
outsb
iret
daa
negl
test
xchg
sbb
or
scas
mov
int
jmp
xchg
aad
popf
lods
jecxz
cwtl
jnp
movsl
nop
popf
daa
sahf
xchg
or
xchg
loop
pop
mov
sbb
mov
add
mov
xorl
mov
xchg
jae
pop
loope
in
jmp
sub
cli
inc
inc
dec
push
je
arpl
sahf
cmp
mov
inc
icebp
push
mov
ret
in
jb
or
cwtl
fdivrl
or
jmp
adc
cmp
bound
popf
ljmp
and
add
sar
jl
lods
push
lcall
add
or
pop
jbe
sahf
enter
jo
xor
sbb
sub
imul
cmpsl
adc
test
lret
cmp
adc
dec
adc
ljmp
inc
mov
dec
imul
out
add
inc
scas
clc
adc
imul
cmp
cmp
cmp
pop
adc
stos
or
and
mov
mov
xchg
and
and
cld
inc
out
mov
mov
inc
lods
mov
cmp
inc
pop
mov
pusha
xchg
je
push
cs
sbb
cwtl
mov
xor
add
xor
mov
xchg
or
jbe
aas
inc
mov
insb
mov
or
sbb
jnp
cwtl
jo
lea
cltd
fstpt
fcmovb
imul
mov
lahf
cli
sub
dec
ret
cmpsb
hlt
pop
push
hlt
sub
push
mov
lahf
dec
xor
in
cmp
pop
xchg
fisubl
sub
outsb
aas
cmp
and
aam
or
fisubrs
call
jl
aaa
shl
jl
ret
fwait
mov
shll
inc
inc
jns
sub
pop
xchg
fwait
pop
movsb
xor
cmc
xchg
rcrb
cmp
inc
cld
movsb
jmp
jb
pop
lods
push
push
push
xor
test
and
add
mov
int3
and
push
lret
mov
lahf
insl
adc
push
xor
pusha
mov
add
int
cmp
and
sub
sti
mov
and
inc
scas
out
ss
push
ret
pop
cld
loop
push
sub
popf
jl
xor
dec
imul
rcll
sahf
jne
adc
add
les
xor
xchg
aaa
add
test
sub
add
in
sbb
lods
fbstp
push
test
pop
xor
jecxz
fcomp
ret
push
lcall
mov
clc
pop
pop
xorl
icebp
cltd
sbb
ficoms
mov
push
ss
mov
mov
mov
adc
sbb
pop
mov
iret
jp
icebp
xor
cmp
sahf
xlat
mov
cmp
or
xchg
push
stc
sub
divl
lret
shll
sarb
cwtl
lock
dec
sbb
xchg
mov
imul
mov
lret
mov
sbb
xchg
lds
sbb
jne
jmp
and
in
xorb
sub
mov
mov
sub
pop
jg
test
das
insl
jnp
mov
arpl
cmp
pop
shrl
cmp
sbb
fcomps
and
mov
movsl
jp
cmp
dec
mov
nop
in
or
pop
jo
add
subl
mov
ljmp
or
jl
in
or
test
dec
or
xor
gs
push
outsb
or
fbld
aam
mov
faddp
ljmp
mov
aaa
xchg
scas
push
cli
or
inc
cmp
nop
outsb
mov
movsb
mov
std
add
imul
inc
xchg
adc
out
out
sub
jb
lea
pushf
xchg
xor
out
xchg
out
outsb
adc
adc
jmp
mov
mov
xchg
mov
arpl
fbstp
movsb
mov
mov
mov
das
xor
mov
movsb
setb
lret
inc
sbb
jnp
jp
add
int3
fwait
jl
shll
mov
push
mov
dec
ds
inc
jg
movsl
rcrl
xor
mov
mov
push
add
sahf
imul
das
push
pop
out
xchg
pop
out
stc
shll
sub
xor
popf
pop
popa
mov
or
lret
leave
pop
addl
in
inc
sarl
out
pop
subl
aad
jl
dec
sti
mov
scas
sbb
and
call
bound
popa
test
mov
stos
rcrl
scas
jp
and
push
pop
xor
bound
fmul
xor
stos
sub
stos
ds
cmp
or
das
mov
ret
ficomps
test
das
sbb
fs
mov
jp
push
dec
sarl
sbb
jb
push
cli
sbb
jne,pn
mov
jp
jne
or
insl
lods
aam
jno
adc
xchg
mov
fisttpl
das
fs
and
push
and
jbe
cmp
and
xor
loop
sarl
cwtl
movsb
das
test
jecxz
cmp
jns
xchg
inc
inc
sbb
fs
and
jno
dec
sbb
js
filds
or
and
popa
lahf
test
out
faddl
push
dec
stos
fistpl
jne
sbb
fildl
mov
into
jmp
cmp
ficoms
loopne
dec
subb
and
sbb
scas
dec
push
jno
add
and
lock
sbb
push
dec
sbb
sub
cwtl
push
sub
fidivrs
fstpl
loop
push
test
push
jge
lahf
inc
mov
ja
aaa
inc
shl
inc
les
loop
dec
sub
lods
mov
call
inc
jge
cltd
add
out
cmp
stos
addr16
into
sub
fistps
in
insl
add
jecxz
inc
cwtl
sbb
loope
pop
jns
mov
jns
sub
mov
adc
imul
lcall
aad
dec
mov
add
xor
add
dec
mov
push
daa
imul
push
out
adc
popf
lock
stos
adc
xchg
int
roll
cli
lock
push
jns
pop
sub
lods
stos
icebp
jmp
lcall
lcall
mov
scas
je
jno
sti
test
push
inc
ret
dec
es
and
lods
mov
and
dec
or
repnz
mov
shll
adc
cmp
sbbl
mov
pop
insb
jecxz
pmovmskb
mov
sbb
roll
add
shrl
dec
mull
jae
cmp
mov
mov
daa
mov
jno
std
in
stos
inc
jle
or
cltd
les
push
fwait
mov
jmp
shrl
xor
cmpsb
dec
xor
cmp
outsl
scas
cmp
imul
fistpl
fadds
push
divl
scas
test
or
sbb
xor
xor
xor
sbb
testl
sti
xor
stc
mov
notb
xchg
sarl
pop
sub
pusha
cltd
loope
sbb
or
and
les
imul
xchg
mov
push
cmp
in
mov
test
aaa
pop
push
and
hlt
jae
jle
rol
cmpsl
mov
into
xor
and
mov
lods
sub
outsl
jbe
lods
or
jbe
lcall
xchg
inc
movsl
xchg
sbb
rol
and
cmp
into
mov
cmp
mov
mov
aam
fdivrl
fstpl
push
lahf
mov
ss
inc
mov
addr16
adc
pop
das
xchg
push
cmpsb
data16
mov
mov
out
movsb
mov
inc
aas
ficompl
add
inc
mov
cwtl
pop
jo
cmp
or
jmp
cmpsl
fprem1
lcall
icebp
or
lret
scas
cmc
dec
mov
lcall
aam
add
add
cmpsb
xorl
fwait
cmc
mov
push
add
fidivrs
xchg
int
aaa
jae
mov
aad
jnp
lcall
xchg
jnp
or
adcb
xor
movsl
pop
imul
jnp
add
mov
pop
mov
mov
imul
dec
negb
adc
inc
xor
mov
adcl
sub
mov
imull
cwtl
rcll
jl
jb
cmc
orl
and
dec
sub
addr16
sub
mov
xchg
orb
ss
pop
ss
mov
fsubp
aas
sar
fildl
fldl2t
sub
mov
sbb
adc
dec
or
xchg
fs
mov
sub
add
mov
test
cltd
pop
push
movsl
mov
insl
popf
xchg
pop
and
cmp
xor
push
pusha
mov
or
add
pusha
jp
jge
lea
cs
xchg
mov
jns
out
add
cmp
mov
aam
cmpb
scas
push
xchg
add
leave
mov
pop
sbb
bound
scas
cs
mov
vmovd
int3
fptan
and
add
movsl
out
lret
jmp
call
dec
scas
ds
fstps
dec
xlat
cwtl
add
mov
xchg
nop
xchg
push
adc
into
and
fadds
pop
fistps
inc
das
sub
mov
jge
cmpsl
lea
mov
imulb
xor
movsb
mov
dec
rolb
repnz
pop
push
popa
out
mov
cmp
xor
test
dec
xchg
mov
mov
xchg
clc
insb
sub
scas
icebp
cmp
add
imul
sahf
mov
bound
lea
out
xor
mov
gs
and
pop
loope
je
jae
lock
icebp
rclb
or
jns
out
mov
cmp
sahf
xor
sti
and
sbb
sub
addr16
test
scas
shl
mov
mov
inc
scas
notl
into
andl
ret
and
xchg
imul
pop
cmp
icebp
push
rolb
mov
lea
rcll
das
lea
shl
out
rcrl
jno
or
jg
lods
fcomi
insb
fstl
push
mov
xlat
dec
push
adc
stos
push
ljmp
insb
pop
push
and
lock
cmp
sbb
jae
out
inc
xlat
sbb
shlb
daa
cs
mov
movsb
adc
inc
jne
shlb
test
or
sub
nop
fimull
mov
jge
sbb
movsl
shll
cmp
outsl
hlt
pop
pop
mov
sub
fsub
mov
xor
stos
daa
stos
push
dec
pop
xchg
stos
aaa
inc
ficoms
aas
test
mov
mov
call
mov
mov
fisttps
push
es
mov
test
inc
insb
clc
mov
enter
addb
scas
in
add
lcall
jecxz
sti
testl
sbb
and
xlat
sahf
pusha
insb
leave
xor
mov
mov
push
test
push
ret
addl
push
ja
sbb
adc
mov
pop
data16
jae
outsl
scas
popa
out
rclb
lods
inc
mov
lods
mov
sti
js
dec
repnz
mov
pop
mov
mov
push
sbb
fidivrl
outsl
fstps
sbb
xor
xchg
push
xchg
nop
in
mov
xchg
loopne
aam
sbbl
ret
movb
sub
stos
cmpsb
mov
or
inc
lret
mov
mov
jl
xor
int3
push
push
les
mov
adc
xchg
pop
mov
mov
sti
pop
jge
insl
mov
adcl
stc
jp
pusha
adc
lea
test
fildl
push
inc
in
push
push
loope
xor
adc
movsl
pop
dec
in
mov
jge
jl
jl
xchg
xor
xchg
pop
ret
add
or
call
cwtl
in
jge
rcrl
mov
fidivs
or
call
adcl
cld
aad
repnz
ret
out
ficompl
pop
sbb
fdivl
lret
xor
pop
mov
mov
jmp
pmaddwd
push
ljmp
add
out
loopne
cmp
mov
je
mov
xchg
ret
xlat
inc
add
push
pandn
ss
sbb
scas
dec
fidivs
icebp
int
pusha
mov
addr16
outsl
test
pop
mov
addb
push
push
add
test
adc
fisubl
or
repnz
adc
mov
sub
in
add
out
mov
mov
out
push
into
out
sti
push
and
jge
dec
lea
push
sbb
cmpsb
xchg
mov
ret
insl
scas
in
subl
jecxz
mov
xlat
push
inc
push
sbb
mov
and
enter
rcl
add
mov
mov
ja
add
mov
cmp
divb
mov
cmp
insb
push
rolb
xor
cmp
stc
fcomps
adc
repz
jge
xchg
inc
dec
fstps
mov
pop
mov
ret
cmc
in
inc
pop
je
mov
into
xchg
mov
mov
out
movsb
push
pushl
pop
push
cmp
gs
jns
sbb
adc
loop
pop
inc
jp
int3
aam
call
insl
aad
aaa
dec
adc
test
testb
push
and
cmp
imul
pushf
sti
in
in
ret
and
cmp
scas
les
push
xor
mov
pop
mov
divb
fdivl
push
pop
shll
gs
out
popf
jo
adc
out
jecxz
sbb
cwtl
pop
dec
fwait
jle,pt
aas
inc
push
and
outsl
jnp
jno
pop
cmp
cmpsb
cmpl
fwait
cmc
mov
lods
add
fnstcw
scas
insb
adc
gs
daa
fdivrs
xchg
push
cli
add
cli
ss
out
lock
pop
pop
fwait
sbb
sbb
mov
hlt
mov
fidivs
rcll
xchg
push
aam
pop
outsl
mov
push
jmp
int3
fwait
sub
inc
les
mov
test
clc
jge
pop
daa
mov
js
int
cmpl
lods
jge
mov
and
mov
sti
hlt
or
cmp
sub
icebp
lock
or
inc
mov
pop
add
dec
sub
fcmovnbe
pop
cmp
xchg
fwait
cli
enter
cld
js
xchg
and
mov
xchg
addl
insb
lcall
jbe
sub
daa
fnstcw
imul
int3
out
inc
sbb
sub
mov
pop
adc
addr16
xor
pop
mov
gs
push
sbb
mov
dec
and
pop
mov
repnz
jnp
jbe
outsl
xor
jne
dec
cmpl
cmp
mov
lcall
divb
xchg
repz
jbe
add
adc
inc
xchg
sbb
adc
fdivrs
mov
rcrl
sbb
loope
into
scas
jecxz
jo
cli
and
sub
jno
xor
mov
or
add
or
sbbb
repz
paddusb
loope
push
mov
mulb
ja
scas
sbb
fs
popa
shl
xchg
add
repz
ds
int3
dec
sarb
sub
arpl
fldt
mov
dec
arpl
sub
or
mov
cmpl
mov
jne
cmp
or
stc
aad
cmp
fs
test
add
mov
push
ficoml
jl
cli
lods
or
dec
jg
xchg
ret
dec
jne
dec
adc
hlt
pop
mov
lret
into
xor
cld
xchg
and
mov
mov
ret
insb
inc
in
daa
insl
out
mov
xlat
xchg
add
push
aas
jmp
push
mov
insb
lea
inc
mov
dec
push
das
jg
stos
daa
mov
stc
lods
idivb
cmp
pop
xor
adc
or
sub
mov
lock
jecxz
dec
js
or
gs
addr16
and
pop
dec
mov
je
mov
pop
lods
pop
les
fsubrl
nop
mov
jns
decb
sbb
call
iret
sbb
pop
rcll
inc
repnz
sbb
xor
test
int
ficompl
xlat
std
test
pushf
xchg
aad
out
adcl
out
jl
mov
jne
push
jg
inc
xchg
outsl
and
cltd
movsl
cmpsl
sbbl
sahf
aaa
or
push
push
inc
fcomip
xor
mov
out
lds
or
mov
int
daa
xor
or
stos
mov
fbld
pop
es
dec
mov
mov
push
cmpsl
mov
xor
scas
add
mov
int
mov
mov
incb
pusha
cltd
xchg
ficoml
push
arpl
xor
js
mov
xor
adc
mov
push
imul
pop
cmp
outsl
pop
mov
test
mov
cmp
add
into
test
add
idivl
xor
lods
loopne
shlb
push
mov
cmp
mov
xor
jg
xabort
dec
sbb
test
mov
subl
sahf
sbb
repnz
jne
push
jo
jmp
sahf
mov
movsb
pop
cmp
andb
sub
stc
add
negl
dec
xchg
lods
movsl
std
xor
cmpsb
adc
mov
push
rol
mov
out
xor
pop
mov
sub
js
mov
cmc
icebp
xchg
jl
fisubrl
sahf
orb
xor
adc
imul
sahf
pop
adc
lods
movsb
add
push
jno
xchg
data16
in
dec
sahf
mov
or
int
xchg
lret
mov
clc
bound
xchg
or
mov
sub
cmp
repnz
mov
pop
das
jecxz
daa
or
test
xchg
loope
mov
frstor
cld
dec
inc
mov
int3
insw
sar
lret
adc
sub
mov
dec
pop
int
test
stos
jmp
add
mov
aad
sub
jg
lods
mov
pop
cs
andb
shlb
pop
mov
cmp
push
fistpl
mov
dec
xchg
cmpsl
in
mov
push
xor
push
lcall
and
or
jecxz
pop
jne
sbb
or
ss
repnz
les
sub
mov
push
or
enter
sbb
mov
enter
and
cmp
test
movsl
mov
pop
rcll
cmp
nop
xchg
ja
daa
inc
mov
adc
ds
in
push
out
je
xchg
aad
cmpsl
xor
int
repnz
inc
enter
mov
aam
mov
sti
rclb
adc
sub
jp
inc
out
outsl
xorl
mov
jb
adc
adcl
mov
ss
add
das
cmp
add
in
mov
push
enter
cmpsl
sbb
add
lcall
int
lds
cmp
and
xchg
cmpsl
mov
or
stc
mov
fistpl
ret
loop
sbb
mov
pop
pop
fsubr
rorl
cmp
aaa
sub
pusha
xor
dec
mov
cld
cmp
sbb
sbb
inc
inc
movsb
sub
cmp
lret
test
cltd
call
aaa
jne
adc
push
jge
or
repnz
xchg
loope
cmp
shlb
sbb
cmp
push
out
adcl
arpl
pop
xchg
cmp
xor
shrb
cmc
mov
loop,pt
loope
jae
ss
xchg
cmp
gs
sub
mov
sub
push
ds
push
pop
imul
or
iret
xor
in
aad
xor
wbinvd
mov
ds
leave
out
cmp
pop
cmpl
daa
jecxz
aas
es
in
mov
ret
jmp
mov
loop
xchg
cmp
negb
mov
dec
outsb
icebp
bound
jg
loope
insl
inc
lock
mov
das
in
stos
adc
mov
jp
shlb
inc
pop
push
inc
jmp
pop
pop
push
jecxz
cld
sbb
stos
dec
pop
fisttpl
cmp
dec
jb
mov
xchg
mov
mov
push
dec
xor
es
in
mov
jecxz
cli
clc
pop
jl
sub
sbb
mov
movsb
subl
mov
jb
test
es
and
or
negb
inc
sbb
mov
aad
jp
push
sbb
movsl
scas
pop
pusha
pusha
and
out
bound
sbb
push
push
pop
cs
outsl
sti
outsb
cmp
jg
push
ja
push
mov
jecxz
repz
lret
pop
inc
popf
jmp
mov
inc
mov
cmpsl
jno
aaa
push
aas
cltd
xlat
jmp
sbb
fimull
jno
clc
inc
pop
mov
ficoml
ret
sub
shll
xor
nop
xor
in
cmp
fs
sub
shlb
sbb
pop
lcall
mov
stos
shl
add
inc
loopne
fldl
mov
mov
adc
ljmp
test
shrb
cmp
mov
push
int
add
add
mov
rcrb
pop
add
dec
daa
pop
testb
int
mul
jno
or
lcall
cmpsb
inc
push
flds
cmp
stc
push
cmp
mov
inc
out
inc
push
push
in
enter
out
lret
jb
or
push
or
das
ljmp
xchg
loope
cmp
imul
or
popa
lods
popa
push
jmp
xchg
stos
out
std
ds
insl
cmp
leave
xor
jns
pop
cmp
lds
test
inc
dec
mov
inc
xchg
dec
dec
inc
aaa
mov
xor
pop
xchg
mov
test
dec
out
loope
fldt
sub
gs
insl
repz
movsb
sub
or
lock
scas
xchg
jne
aas
mov
into
cmp
cmpsb
adc
cmp
cmpb
scas
or
outsl
mov
divb
fnstsw
pushl
mov
sub
ret
or
xchg
cmp
inc
and
movsb
push
pop
xor
and
sub
mov
loopne
xlat
mov
stos
andb
mov
and
mov
std
jge
insl
adc
pop
fcoml
int3
pop
fcomp
sti
notl
mov
pop
and
jmp
lock
xchg
rcl
and
mov
push
pop
pop
mov
lea
inc
aas
xchg
call
stos
pop
outsb
xor
aad
bound
jae
xlat
or
push
and
fiaddl
rolb
adc
push
dec
push
mov
sub
jge
mov
dec
ret
jg
inc
mov
ret
lods
addr16
addr16
fists
push
gs
jp
push
jne
loope
cmp
mull
loopne
filds
mov
inc
pop
jge
jne
pop
sahf
mov
mov
shrl
fsubrs
test
mov
add
and
fs
arpl
testb
into
divb
adc
test
sub
and
and
push
fists
mov
jmp
push
or
je
pusha
jge
sbb
ret
lcall
xlat
push
mov
lret
pop
fsubs
fidivs
cli
jle
mov
pop
xor
add
or
int
cld
ljmp
mov
pop
ret
orl
les
js
mov
jbe
fidivrl
jle
cwtl
fildll
sbb
idivl
in
pop
jl
and
jge
add
in
dec
mov
mov
pop
cwtl
dec
sub
dec
mull
icebp
sarl
jmp
adc
pop
dec
push
jg
pop
jbe
inc
ja
ljmp
fistl
mov
outsb
pop
mov
push
dec
add
decl
movsl
push
mov
dec
std
outsl
sbb
adc
iret
test
in
lahf
push
cli
orl
add
or
mov
lods
in
sbb
fistpl
sahf
pop
fimuls
lea
push
data16
gs
mov
pusha
arpl
in
in
push
stos
daa
fnstsw
cmp
cwtl
mov
test
fistpl
or
sbb
push
fdivl
test
jb
mov
fadds
leave
int
mov
xchg
loope
mov
mov
and
repnz
ficoms
lea
fwait
sbbb
iret
xlat
imul
jp
xor
add
mov
cmpsb
pop
daa
lods
aam
pop
cmpsb
mov
rclb
and
jg
movsb
pop
mov
lret
pop
xchg
test
loop
cli
in
pop
sub
dec
stos
aam
fstps
sub
xor
inc
jnp
adc
mov
dec
or
sub
in
jle
cmp
mov
and
pop
dec
jecxz
or
aas
dec
xchg
int
jb
cmp
jecxz
mov
push
lock
in
pop
fisubl
repnz
jns
jmp
push
frstpm(287
fcmovnu
push
fistl
rol
addl
out
cltd
mov
dec
pop
or
je
shrl
cmp
xor
xlat
ficoms
mov
popf
sti
jne
pop
movsl
mov
cmp
ljmp
adc
mov
sub
or
fdivr
sub
push
jp
mov
lods
jge
cmp
xchg
xchg
xchg
hlt
cmp
xchg
mov
iret
aaa
inc
mov
xchg
sahf
lret
push
jb
push
cmp
mov
sahf
mov
data16
insb
xchg
or
pop
ret
dec
or
add
aad
lcall
mov
mov
in
jge
popf
fimuls
movsb
add
and
pop
and
mov
out
inc
les
test
lds
pop
mov
pop
cwtl
in
lcall
iret
dec
xchg
loop
push
cwtl
pop
std
mov
fmul
jg
incb
mov
lods
cmp
pop
rorb
popf
shrl
bound
loopne
cld
dec
xor
and
ds
shl
cmp
popa
mov
lea
int3
lcall
addb
mov
adc
add
mov
stos
xchg
fstpl
push
sub
push
lret
push
push
scas
pop
lock
mov
sub
mov
stos
test
dec
mov
xor
mov
roll
outsb
lcall
aas
ret
mov
cmpsb
cld
sbb
iret
outsl
pop
jl
push
popf
mov
in
xor
sub
mov
out
xor
pop
sub
pop
imul
mov
pop
cwtl
xchg
xchg
cmpb
data16
mov
and
insb
sbb
push
in
push
test
ljmp
in
dec
lret
jbe
and
mov
pop
imul
scas
jb
mov
lahf
sahf
clc
es
jg
cmpsb
or
ret
jl
testl
int3
add
pop
sar
pop
jno
mov
inc
or
fmull
aaa
push
jns
jg
push
jle
clc
in
cld
loop
clc
lock
mov
xor
jne
flds
arpl
jge
mov
ficoms
loopne
out
inc
sub
inc
mov
jne
adc
and
ds
popf
mov
add
clc
int3
mov
in
mov
sub
fldcw
inc
div
stos
sbb
test
pushf
loopne
fcmovnbe
adc
aaa
insb
dec
jl
inc
mov
cmp
mov
push
ret
nop
or
mov
xchg
je
lret
fs
mov
sub
into
mov
stc
dec
or
mov
mov
push
cmc
test
arpl
stos
jae
test
ds
mov
iret
lods
xor
clc
mov
bound
mov
xchg
or
sbb
js
push
loopne
cmp
dec
lock
dec
xor
cmp
repnz
ret
jnp
add
in
jne
jno
pop
adc
sub
push
cmp
clc
les
sub
pop
in
pop
ss
lcall
adc
jge
lods
push
call
add
push
sub
sbb
xlat
addr16
test
cmc
insb
aam
cltd
lea
xchg
imul
cmpsl
fs
jbe
adc
ds
mov
xor
out
sbb
aad
rolb
fcoml
inc
inc
sti
enter
jne
nop
loopne
pop
pop
ljmp
and
jb
xor
sub
jge
sbb
mov
arpl
inc
inc
fwait
test
popa
ja
out
inc
xchg
push
sahf
icebp
int
push
arpl
sbb
push
pop
cmc
sahf
jnp
imul
lea
dec
fdivrl
lock
fstpl
fsts
and
mov
mov
fsts
shll
add
dec
lea
insl
loop
inc
sub
jno
or
fadds
lods
lods
mov
mov
cmp
add
aad
jg
iret
add
pop
hlt
std
jge
dec
jle
sub
mov
adc
cmp
push
jmp
leave
and
call
fldenv
jbe
rclb
mov
sbb
mov
mov
ret
mov
dec
cmc
mov
mov
pusha
mov
andl
push
ljmp
pop
mov
notb
bound
gs
ja
inc
je
xchg
in
ret
xchg
cli
aas
dec
xchg
cmpsb
clc
dec
movl
pop
in
inc
sub
sub
test
enter
popa
lcall
lret
iret
adc
call
adc
or
mov
leave
jno
sti
fst
lea
out
inc
xlat
push
push
xchg
mov
mov
jne
into
test
outsl
add
xor
add
gs
enter
std
and
lock
pusha
adc
movsb
adc
pop
outsl
lahf
dec
sub
aaa
shll
cmp
decl
xchg
loope
stos
jbe
sub
movsb
or
mov
mov
jb
inc
inc
mov
imul
fisubrl
jg
in
shl
push
repnz
es
rcl
and
scas
call
rclb
fisubrs
push
pop
inc
xchg
inc
inc
sub
sbb
cld
xor
iret
jg
adc
insb
test
pop
in
mov
jae
or
ja
sub
jg
push
xchg
call
xchg
es
pop
les
test
ss
mov
fwait
inc
pop
add
je
adc
push
xchg
push
lods
adc
mov
cli
dec
sbb
add
jo
mov
lock
jp
clc
and
jle
imul
pop
cmp
fwait
jmp
iret
mov
aam
sbb
mov
iret
aas
cmpsl
into
inc
ja
cwtl
jmp
sub
jle
or
jno
or
int
mov
dec
mov
adc
pop
mov
shrb
jp
pop
outsl
cltd
popa
mov
ja
sbb
push
xchg
stos
cwtl
pushf
stos
fcompl
mov
inc
hlt
divl
cmp
push
jb
clc
je
add
data16
stos
and
jmp
shrb
gs
imul
pop
icebp
lcall
xchg
push
inc
rcrb
push
mov
jo
push
lds
sub
pop
fsubl
xchg
mov
push
int3
mov
popf
mov
adc
out
xor
ljmp
xchg
xchg
test
stos
rcrb
sub
sub
push
pop
pop
mov
fstl
mov
dec
jmp
cmp
fbstp
js
cmp
mov
in
insb
pop
push
jae
gs
xlat
jns
mov
jl
mov
xor
jae
mov
xchg
xor
cmpsl
lea
cmp
mov
fs
insl
mov
dec
push
hlt
test
jge
ds
jae
je
ror
scas
lea
sub
cs
cld
add
push
adc
sub
lcall
ror
subl
pop
push
out
adc
movsl
shrb
inc
mov
jo
sbb
fwait
add
xlat
add
es
cmp
push
repnz
stos
dec
scas
outsb
data16
lods
sahf
cmp
push
mov
test
push
test
cmp
fcmovnbe
sub
mov
jno
hlt
adc
aad
out
test
or
scas
mov
or
jl
fisttpl
jmp
test
shr
pop
mov
mov
sub
stos
pop
or
push
lcall
stc
outsl
test
scas
lahf
stos
js
push
pop
cld
xchg
jl
pop
jl
out
out
cmp
lods
iret
out
mov
add
ja
hlt
dec
xor
cld
loop
bound
xorl
test
lods
mov
fwait
push
shr
inc
faddl
push
mov
ds
or
pop
fstp
pop
aad
decb
mov
mov
sub
fimuls
jae
mov
in
mov
lcall
insb
push
es
popf
pop
dec
xor
cld
shrb
inc
lods
ja
push
jne
rcr
mov
adc
testl
mov
cwtl
sub
sbbl
push
xchg
pop
pop
sub
fwait
daa
sbb
mov
mov
sbb
and
xchg
sbb
xchg
mov
sub
mov
push
or
sub
xchg
push
lods
cs
sub
icebp
mov
ljmp
jmp
dec
jp
jl
insb
sub
fistpll
mov
mov
and
iret
inc
scas
js
jl
push
out
loop
fstps
sti
pusha
jle
fwait
jp
jae
test
shll
mov
testb
adc
shll
cpuid
ret
loope
daa
cmpsl
jecxz
mov
push
clc
mov
shll
jns
cld
hlt
cli
sbb
cmp
pop
jl
arpl
cmc
pushf
je
lea
or
test
jg
popf
lret
mov
hlt
fsubl
roll
imul
movsl
adc
pushf
mov
dec
in
dec
push
jge
test
cmp
xchg
ret
rorl
sbb
fld1
mov
or
mov
sub
xor
add
dec
cmp
pop
xchg
outsb
add
das
push
aad
mov
cwtl
dec
sub
mov
addr16
mov
push
scas
test
outsl
je
ret
pop
mov
jno
inc
stc
imul
or
sbb
iret
pop
adc
or
pop
sbb
jmp
insl
inc
dec
fbstp
mov
jge
mov
jae
dec
nop
cmp
xchg
pop
cmp
fstp
pop
jae
outsb
in
mov
arpl
imul
pop
scas
sub
outsl
lret
xchg
popa
dec
push
das
mov
push
je
es
imul
fists
mov
adc
and
jp
scas
daa
into
lds
mov
lret
aaa
lock
mov
sarl
aas
stos
ret
mov
and
int
push
sub
js
push
mov
inc
sti
adc
pop
xchg
mov
mov
add
ss
int
cmpsb
inc
dec
xchg
add
inc
in
popl
cli
sub
add
test
mov
mov
xchg
fsub
fistl
int
pop
push
pop
cmpsb
sub
das
jmp
sub
movsl
lea
sahf
cmp
adc
sbbl
out
in
mov
jg
mov
sub
add
fxch
in
stos
adcl
mov
test
sbb
and
jl
addl
pop
xor
ljmp
inc
push
xchg
adc
jae
lret
or
subb
in
adc
jb
out
push
imul
dec
and
xchg
je
aaa
mov
addr16
sbb
dec
inc
fnstsw
fs
or
jnp
pop
xchg
dec
add
leave
in
loopne
iret
xchg
mov
jecxz
cmp
xchg
sahf
scas
or
repz
or
mov
mov
add
inc
xchg
cmpl
cmpsb
dec
out
jge
lret
outsb
test
lret
pop
out
fimull
cmp
rcrl
pop
sub
ljmp
xchg
cmp
jae
push
addl
add
adc
or
sbb
insb
xor
jo
pop
ljmp
mov
dec
cmc
lock
lock
sub
dec
lods
sbb
push
daa
shll
push
dec
out
cmpsb
fisttpll
sbb
mov
push
jo
iret
pushf
lcall
lods
mov
jnp
or
in
outsb
mov
mov
add
xchg
test
repnz
fisubrl
lds
or
sub
stos
or
cmp
pop
andb
fldl2e
out
jnp
adc
mov
scas
cltd
test
in
jp
je
dec
not
sub
aad
and
pop
adc
xor
hlt
cmpsl
stc
sbb
movsb
lods
sbb
adc
rcll
sbbl
mov
lahf
mov
sbb
cmc
shll
in
or
mov
sbb
xor
cmp
push
cmp
push
add
adc
mov
sub
loopne
sbb
and
pop
cmc
push
inc
test
jge
pop
lock
orl
jo
dec
scas
inc
or
sarl
pop
add
sar
scas
jmp
ret
lahf
pop
or
loopne
test
lods
cmp
sub
or
push
lahf
mov
sbb
push
mov
mov
xchg
push
fdivrs
aam
pop
jb
mov
adc
add
sbb
add
push
push
pop
push
sbb
imul
jle
cmp
lods
dec
call
lods
sbb
pop
ret
pop
pop
push
lds
and
push
add
fs
and
iret
jmp
push
sub
and
mov
xor
sbb
insl
ret
pop
jo
sbb
fcompl
mov
stc
sub
xchg
adcl
jae
lahf
sbb
aam
cld
sbb
cs
dec
cmp
fsubl
clc
dec
in
addr16
ja
fistps
fwait
add
dec
ficoml
push
lea
add
push
fstp
push
add
sbb
je
cld
or
jno
cmp
add
cmp
xor
fnstcw
sbb
cmpl
cmp
int3
cmp
les
dec
inc
aam
mov
in
xchg
outsb
xchg
xchg
out
icebp
shlb
addps
fstpt
insb
jmp
fsubl
in
loopne
scas
aad
mov
inc
xchg
jne
jmp
mov
push
pop
mov
xchg
cmp
mov
test
loope
ret
js
cmpsl
icebp
hlt
pop
cmc
sarb
leave
or
ror
imul
fnstsw
jmp
mov
add
fcompl
xlat
sbb
xchg
add
rorl
mov
jo
sub
nop
add
mov
cmp
out
inc
lock
testl
out
lcall
gs
pop
lcall
stc
inc
jp
jg
daa
cmpsb
cmp
icebp
push
and
mov
pop
movsl
addr16
lds
dec
push
or
push
mov
mov
rclb
adc
insb
out
sarb
ja
popf
adc
jle
sbb
or
repnz
test
loop
aam
or
jb
insl
mov
pop
or
mov
pop
and
out
cmp
lret
mov
xor
fdivs
pop
fisttpl
rcrb
sarb
mov
sbb
shrb
ja
push
ror
fwait
sbb
push
pop
das
inc
int
movsl
sbb
cwtl
dec
jnp
mov
pop
sbb
and
dec
mov
mov
push
insl
sub
mov
sbb
test
xor
sarb
inc
mov
adc
xor
mov
cmpsl
sub
scas
scas
cltd
movsb
aaa
pop
pop
je
xchg
cmpsl
mov
in
in
ss
test
jecxz
cmp
inc
add
stc
dec
xchg
cmp
inc
pop
mov
sar
push
pop
mov
xchg
dec
fistl
sub
mov
mov
add
das
shrb
call
lret
fimull
repz
push
xchg
je
push
xor
stc
add
out
dec
in
xchg
dec
adc
nop
or
mov
sub
filds
cmp
cmp
cmp
cmp
shll
in
cmp
popf
add
repz
jp
int3
jmp
cmp
test
mov
dec
jb
jmp
pop
pop
jmp
mov
popf
pop
dec
mov
pusha
or
cs
jae
xor
in
sbb
push
ja
dec
mov
dec
in
mov
push
mov
cli
mov
jbe
loope
out
mov
andb
shrl
xor
mov
push
stos
mov
popa
push
inc
push
push
mov
pushl
adc
dec
fdivrs
rolb
push
shll
or
sti
pop
inc
fcmovnbe
aam
pop
test
pop
or
jp
loopne
dec
cmpsl
test
mov
or
pushf
mov
mov
push
rol
dec
nop
mov
fbstp
icebp
pop
pop
in
imul
and
loope
loopne
sub
xchg
icebp
mov
jge
in
or
cmpsl
mov
jmp
sub
in
rorb
xchg
cmpsl
adc
add
push
and
repnz
insl
in
in
sbb
sbb
push
pop
mov
ror
jl
mov
sbb
incb
daa
cmc
ret
dec
call
and
xchg
stos
aad
or
lret
vpcmpeqd
bound
movsb
adc
out
push
pop
pop
fdivl
adc
rclb
loopne
je
cld
add
popa
aas
xlat
push
mov
push
pop
bound
mov
lock
arpl
xor
pop
wrmsr
sahf
inc
popa
dec
call
jbe
fcmove
xor
aaa
mov
insl
leave
lock
pop
jns
loopne
iret
mov
stos
and
ret
mov
mov
and
add
daa
andl
pop
faddl
add
loopw
fnstsw
movsb
orb
pop
addr16
ret
scas
sub
add
rorb
in
ds
mov
mov
and
adc
push
add
mov
jne
and
es
mov
adc
loope
jae
cltd
push
fildl
pop
out
push
xchg
add
icebp
mov
lcall
adc
stos
cmp
adc
loop
mov
xor
mov
xor
pop
inc
jae
int3
cmpl
add
cmp
or
aam
adc
test
out
in
ret
fidivs
fbld
out
insb
movsb
pushf
pop
mov
mov
xchg
stc
push
cmpsl
mov
sbb
cmp
jmp
cli
jo
cmp
mul
sahf
jo
pop
fwait
cmp
mov
fsubrl
and
ret
mov
hlt
fiaddl
sahf
add
loope
mov
frstor
xchg
inc
sbb
popf
out
or
xor
push
orb
insl
fidivrs
dec
jns
test
or
cld
mov
pop
inc
and
xlat
neg
push
enter
cmc
rorl
mov
cmp
outsl
dec
dec
aaa
inc
sub
enter
sahf
add
imul
rcrl
ds
fmul
cmpsl
aad
push
aad
xchg
xchg
push
dec
push
ud2
mov
lret
int
dec
mov
xchg
inc
xchg
lock
aas
inc
insb
mov
jnp
mov
fidivrs
jmp
mov
jp
jne
dec
xor
mov
adc
push
or
mov
inc
jb
jb
xchg
pcmpgtw
xchg
pop
dec
sbb
lods
test
sbb
xchg
and
push
inc
sbb
mov
push
inc
mov
dec
sub
lcall
xchg
cmp
add
lcall
inc
out
pop
push
inc
mov
push
mov
nop
das
and
add
ret
cmp
repnz
mov
std
pop
add
mov
mov
fisttpl
sub
xor
scas
aam
fs
lods
fsts
jo
or
mov
sub
sub
mulb
out
movsl
pop
sub
xor
daa
adc
sub
jecxz
out
cwtl
int3
sbb
pop
or
outsb
jmp
ret
xlat
push
imul
jbe
mov
pop
mov
and
fnstenv
xor
lret
xlat
negb
je
call
inc
push
popa
in
enter
xchg
and
sub
cmp
lcall
mov
test
insl
sub
jo
loop
movsl
mov
xor
pusha
sub
pop
mov
mov
insl
add
push
inc
scas
aad
faddp
xor
sbb
adc
jge
in
sub
jg
mov
push
cmp
inc
jns
cli
cmc
xor
data16
repnz
push
pop
push
mov
lahf
gs
push
pop
out
dec
push
subb
mov
mov
fildl
and
pop
fst
mov
or
mov
mov
mov
sub
cld
mov
gs
sbb
daa
cld
fldl
shrl
xor
xor
inc
and
lahf
xor
jns
rorl
outsl
cmp
lock
hlt
cmpsl
pop
rcrl
js
push
roll
pop
jbe
lahf
ret
mov
sbb
stc
andb
call
mov
shll
lods
fsubrl
out
stos
orb
scas
mov
fnstcw
sti
clc
mov
sbbl
adc
push
mov
jecxz
hlt
mov
imul
mov
add
jbe
push
lcall
xor
cs
push
xor
iret
mov
sub
ret
sub
mov
xchg
sbb
in
fwait
test
pop
in
call
pop
repnz
adc
cmp
pop
lods
pop
xchg
lods
call
adc
sbb
mov
cmp
js
mov
pop
fsubrl
xor
fwait
in
ficoml
loope
enter
jno
les
leave
aad
xchg
repnz
mov
jp
nop
push
scas
cmp
jle
push
outsl
xchg
fnstsw
sub
data16
dec
movsl
and
xchg
in
add
outsl
movsl
inc
lret
lret
cld
fnsave
leave
mov
mov
cmp
xor
sbb
pop
mov
sub
ds
rcrw
sbb
push
mov
mov
insb
mov
int
sbb
rcrb
adcb
jae
mov
lahf
mov
insl
test
push
cmpsl
push
and
fs
mov
ljmp
es
in
mov
mov
in
mov
mov
int
test
mov
xchg
std
stos
movsl
mov
mov
mov
mov
lret
mov
cmpsl
adc
insb
inc
lds
sub
dec
cmpsb
jmp
dec
push
test
cs
jae
inc
cmp
pusha
jmp
pop
test
or
fs
xor
jno
mov
stos
inc
dec
mov
popa
popa
dec
mov
cmpsl
pop
xchg
mov
dec
rcll
stos
pop
xor
lods
add
mov
and
xor
aas
cmp
jge
xlat
out
xchg
push
imulb
testl
test
jns
mov
fildl
lcall
push
jl
imul
daa
push
push
popf
ds
cmp
lret
data16
lea
xorl
fs
fs
xchg
insl
sti
pop
decl
notl
jg
cli
pop
je
and
ljmp
test
fdivl
mov
cmp
fidivs
cmpsl
stc
aad
mov
push
repnz
incl
mov
imull
clc
aad
jg
mov
loopne
test
inc
jle
cmp
push
lock
popf
je
mov
push
cmc
push
icebp
stos
das
fwait
cmp
scas
scas
fs
cmp
or
jo
mov
or
lea
lcall
daa
jle
pop
pushf
rclb
scas
fdivrp
movsl
icebp
cld
ljmp
loopne
push
ficomps
cltd
pop
pop
scas
repnz
xchg
jle
inc
mov
or
sbb
xor
add
mov
mov
mov
in
sbb
inc
cmpb
xchg
das
jmp
cld
jae
mov
cmp
lods
add
xchg
loope
jo
leave
and
or
or
mov
decb
int
xchg
add
movsb
je
imul
jg
scas
xor
or
lret
movsb
xchg
daa
negb
push
jp
add
loop
and
push
xchg
add
aaa
mov
mov
pop
cmpsl
bound
adc
mov
cltd
push
adc
popa
sub
push
scas
out
push
sbb
inc
add
push
xor
lret
ljmp
popf
push
aad
mov
dec
aas
roll
movsl
push
es
call
int
test
test
rcll
daa
insl
mov
mov
add
out
or
rorl
ds
sub
roll
xchg
mov
ret
mov
push
mov
mov
mull
add
mov
mov
xor
jge
dec
push
dec
mov
arpl
xor
add
scas
push
add
xor
das
mov
and
push
ror
add
jge
lock
jb
lcall
inc
jns
push
cmp
jno
adc
cltd
xchg
ja
js
cmc
retw
xchg
mov
jg
xchg
leave
hlt
pop
cmp
in
ja
sahf
jle
and
pop
adc
testb
adc
cli
push
aad
imul
mov
popa
pop
jmp
out
jno
jnp
push
pop
scas
dec
mov
and
cli
call
pop
stc
into
fs
cmp
sti
mov
jle
cmp
ljmp
mov
sbb
mov
pop
jmp
stos
hlt
sbb
aas
push
mov
mov
mov
add
pop
into
sbb
cmp
jge
xor
inc
sub
lods
sub
xor
loopne
jns
sub
shll
xor
aaa
inc
sub
int
loopne
push
dec
inc
add
pop
orb
pop
aas
pop
shr
dec
rep
outsl
lret
adc
arpl
jno
decl
test
mov
pop
mov
push
mov
cmp
jge
aam
into
aaa
lock
pop
lods
das
xchg
daa
fisubl
fnsave
shll
mulb
ret
dec
stc
loopne
movsl
and
or
fdivl
scas
mov
push
ljmp
loope
mov
push
inc
aad
push
sbb
gs
leave
int
dec
inc
je
cwtl
movsl
inc
cmp
enter
lock
xchg
and
sbb
dec
pop
leave
adc
ja
loopne
outsb
xchg
shll
test
out
xchg
jnp
mov
push
shlb
sbb
test
inc
in
mov
int
sbb
loop
subb
mov
push
rcll
ljmp
adc
sbb
std
mov
add
mov
les
movsl
aas
testb
add
dec
rolb
fnstsw
pop
dec
jb
jmp
xchg
add
xchg
aas
out
lret
test
mov
inc
xchg
fists
imul
aas
enter
into
and
jbe
dec
nop
jnp
push
mov
mov
mov
mov
add
orb
mov
sarl
or
xchg
jnp
outsl
jle
rcr
cmp
and
xchg
jmp
cmc
cli
sub
adc
fsubrl
mov
cmp
mov
cmp
filds
xor
mov
pop
xchg
or
dec
roll
sub
loope
cmpsl
inc
pop
clc
pop
sti
filds
ljmp
mov
mov
sub
fdivrp
enter
push
test
mov
mov
aas
push
ds
lds
inc
inc
sbb
sbb
push
shrb
addl
ss
aad
jno
xor
fwait
daa
add
jo
mov
out
cmc
cmpsl
orl
nop
and
pop
lret
and
fdivrs
roll
sbb
repnz
inc
in
pop
nop
sarb
fsubs
mov
clc
cmovge
jbe
sub
dec
dec
or
fists
mov
mov
push
mov
sbb
sbb
dec
pop
push
test
repnz
or
jae
decb
sbb
jle
push
xor
mov
test
test
aas
andb
or
pop
fistpl
xchg
push
loopne
jae
test
adc
push
ljmp
jmp
lret
mov
repnz
scas
sarb
sub
mulb
mov
pop
lret
push
faddp
loopne
xor
inc
and
nop
jge
jns
in
leave
cmp
inc
sti
in
into
lret
std
sbb
mov
mov
adc
insl
cmp
pusha
outsl
cld
sbbl
push
js
jg
push
sar
scas
call
pop
out
pop
cmp
pop
and
sbb
adc
sbb
push
pop
add
pusha
mov
xor
daa
cmp
sbb
mov
imul
lods
xchg
cltd
xor
mov
sahf
test
xchg
sbb
les
and
cmp
sbb
pop
out
mov
icebp
clc
js
jns
repnz
pop
or
jns
xor
iret
push
sub
inc
fstl
mov
mov
dec
rcl
enter
lods
inc
pop
int3
pop
fwait
hlt
push
mov
cmc
hlt
ss
mov
loop
hlt
lods
movsb
loopne
dec
push
sahf
outsl
mov
mov
mov
ss
fisttpl
mull
shll
pushf
xor
out
jbe
icebp
mov
fs
mov
mov
negl
jle
jecxz
mov
pop
sbb
adcb
mov
add
pop
xor
repz
xor
jno
pop
shlb
mov
mov
inc
add
lock
xchg
stos
aas
jmp
and
sbbb
imul
sbb
daa
out
repnz
cmp
and
lret
aad
mov
int
aad
in
mov
ret
sub
xor
mov
cmp
sub
dec
lcall
dec
push
inc
jb
xor
fwait
pop
xor
and
sbb
enter
test
jbe
adc
mov
ret
mov
mov
or
sqrtps
push
or
cmpsb
xor
adc
ja
pop
xor
or
scas
jae
loope
xchg
inc
mov
push
add
xchg
mov
lods
dec
roll
rdtsc
test
popf
out
inc
into
scas
pop
aas
mov
pop
insl
sub
icebp
shll
dec
jle
xchg
lahf
pop
xor
scas
jge
icebp
ja
popa
cld
pop
push
jecxz
subl
xchg
inc
inc
iret
mov
jg
mov
rclb
mov
in
in
cli
push
xor
pop
add
imul
daa
mov
cmp
or
mov
lods
shrb
aam
nop
out
adc
push
and
sub
shlb
fcmovnb
loop
cli
ljmp
push
pusha
cmc
lock
outsb
enter
push
add
sbb
sbb
mov
mov
mov
aas
inc
and
xor
add
repnz
jl
xor
jb
sahf
imul
cmpb
out
dec
pop
inc
mov
rcll
or
xor
std
mov
rcll
and
sbb
xchg
xor
add
xchg
push
mov
std
fsincos
xchg
sub
sub
lret
aas
imul
mov
scas
cmpsl
pop
call
mov
mov
iret
leave
aam
push
and
add
xor
fucom
out
jmp
adc
pop
frstor
sahf
inc
das
cmc
and
sub
pop
dec
lea
movsl
sbb
loope
and
incb
jg
lods
lret
rcr
xor
hlt
hlt
push
in
inc
popa
dec
inc
xor
mov
and
push
sub
aam
ss
outsb
roll
xor
sahf
movsb
mov
clc
mov
jno
rcll
sub
loope
sub
dec
movb
jo
fnstenv
shrb
lock
ret
xchg
pop
lock
jp
pusha
adc
cs
push
popa
enter
icebp
mov
shlb
test
lcall
addr16
mov
mov
jmp
ljmp
xchg
or
xorl
jl
cmp
dec
cwtl
cmp
and
add
xchg
cld
pop
push
mov
push
orb
ficomps
mov
pop
jns
aas
fldt
pop
test
xchg
int3
cmpsl
pop
lret
scas
pop
mov
sahf
mov
cs
ret
les
das
enter
jnp
lds
iret
fisubs
cmp
stc
jne
cmp
dec
enter
jmp
dec
mov
jns
cmp
stos
fsubr
mov
dec
out
mov
mov
push
divl
inc
jp
mov
pop
cmp
stc
cld
addr16
mov
iret
xor
jb
mov
hlt
jb
adc
hlt
jb
adcb
pop
jge
ror
sti
andb
push
setge
mov
mov
or
fmuls
aad
or
jl
fwait
or
sbb
aam
nop
loope
lahf
cmpsl
and
adc
lahf
xchg
jl
mov
mov
mov
adc
scas
sub
das
xlat
push
dec
mov
or
aas
or
sbb
out
jl
xor
jo
iret
mov
das
iret
imul
inc
clc
shl
add
push
and
sbb
adc
into
clc
dec
aam
gs
xor
fstp
daa
aad
xor
repnz
mov
sub
bound
xchg
nop
or
int
adc
pop
mov
lods
push
daa
decl
in
mov
pop
cmp
fmull
mov
lea
sub
adc
icebp
fstpt
jo
out
cmpsb
and
cld
sub
loope
pop
mov
subl
loope
mov
std
adc
xor
lea
sub
pop
xor
je
loop
ret
inc
mov
fsub
xchg
popf
daa
pushf
add
sbbb
fstp
nop
and
gs
iret
jbe
inc
adc
mov
pushf
cmc
repnz
ja
dec
dec
nop
cmpsl
dec
push
mov
out
loope
or
sbb
sbb
xchg
dec
lea
lods
scas
pop
push
in
mov
mov
daa
fadd
sub
xor
lods
iret
icebp
inc
dec
mov
inc
outsl
lods
pop
pop
xchg
inc
data16
xlat
sbb
push
je
pusha
and
loopne
ret
testl
fcomps
shrb
mov
inc
xchg
je
aas
leave
push
cmpsb
sti
mov
xor
inc
arpl
sbb
ret
jbe
adc
and
lock
lock
and
mov
xor
xor
das
jecxz
arpl
sbb
xor
leave
popf
les
pop
mov
rcll
in
lea
jb
js
lret
add
cmpl
cmpsl
inc
aam
fwait
ret
mov
pushl
divl
lock
adc
orb
stos
pop
imul
sub
mov
lahf
stos
sbb
pop
aam
push
or
pop
inc
dec
pop
push
fisubl
xchg
sub
mov
imul
and
sbb
out
iret
cltd
mov
fcmovnu
out
cmc
inc
out
data16
fdivrl
jae
int3
cltd
xor
pushf
adc
mov
insb
ds
sti
xlat
aas
call
jmp
aas
in
aad
sbb
jecxz
add
xor
dec
fstps
lds
daa
es
out
push
dec
ljmp
stc
scas
pop
shrb
mov
test
mov
sub
cld
sub
jg
scas
out
mov
pop
dec
cli
insb
cld
pop
lret
and
into
loopne
lods
lcall
sbb
jecxz
fsts
pop
mov
jnp
test
xchg
cmp
mov
stc
clc
scas
cmp
cli
dec
jbe
test
sarb
stos
std
or
jmp
sar
mov
mov
scas
iret
cltd
negb
ficoml
push
or
adc
aas
loop
cmp
hlt
out
cli
xchg
pushf
pusha
inc
jbe
jecxz
dec
push
fisubl
mov
adcl
fidivrl
fidivl
mov
mov
push
cmpb
ja
add
addr16
sub
pop
inc
add
subl
sub
nop
jo
int3
cld
inc
faddl
push
push
sbb
sti
lods
daa
stos
in
add
aad
loope
ret
mov
sbb
inc
inc
outsl
sub
lock
imul
xchg
dec
mov
cmp
xlat
pop
push
jo
adc
pop
mov
call
jae
das
lock
insb
ret
cmpsl
mov
lea
in
pop
mov
scas
cmp
jge
mov
mov
cmp
pushf
pop
movsl
je
xchg
stos
mov
in
ss
or
pop
fmuls
add
insl
sbb
lret
stc
aad
xchg
flds
lret
mov
mov
pop
add
ds
loop
insl
mov
ss
test
clc
movsl
pop
add
jle
cmp
cld
mov
push
mov
fucomip
arpl
mov
test
inc
jo
cli
add
jb
into
jecxz
sti
xor
out
push
repnz
xor
int
outsl
movsl
lock
jle
mov
inc
jmp
push
pop
push
pop
pop
pop
sbb
mov
popf
fisubrl
in
lea
repnz
mov
jnp
subl
mov
pop
dec
pop
fnsave
cmc
lret
mov
dec
sub
push
push
lret
scas
pop
ljmp
inc
pop
xchg
cltd
imul
jle
mov
lock
adc
rcrl
in
lret
xor
cmpsb
stos
jb
inc
addb
push
pop
movsb
fcos
int
fs
outsl
push
test
dec
je
xor
out
add
xor
fldenv
dec
xor
jmp
fsubl
lret
rcrl
sbb
sti
pop
jbe
lods
js
add
ljmp
adc
nop
sbb
scas
cmp
clc
push
push
cmpsl
pop
pop
aas
imul
mov
fwait
mov
fdivl
cmpsl
leave
pop
sbb
shl
shr
bound
or
push
adc
mov
push
jg
jle
es
mov
cmp
sub
xchg
lods
jge
jl
arpl
aad
or
jmp
iret
addr16
test
fsubrl
ficoml
dec
jecxz
xor
gs
fistpll
xchg
lret
scas
mov
inc
inc
mov
insl
scas
jbe
adc
rolb
enter
lea
cmp
xchg
loope
int3
aas
repnz
test
fistpll
cmp
jecxz
jb
add
cmc
adc
cmp
pop
inc
ficompl
add
hlt
push
cmpsb
or
push
cmp
pop
mov
loop
outsb
vhaddps
xchg
rolb
jnp
lods
mov
dec
jnp
cmp
call
hlt
xchg
aam
adc
cmpsb
sub
or
icebp
push
pusha
jo
push
cmp
stos
repz
out
stos
sub
hlt
sub
xor
std
ja
in
insb
mov
pusha
or
aaa
and
test
jg
mov
out
scas
sub
clc
enterw
lret
pushf
sarb
loope
aad
push
and
pop
add
sahf
xchg
jecxz
fidivrl
inc
lea
mov
das
mov
rolb
leave
add
adc
inc
sub
fcomps
mov
sub
push
cld
aaa
daa
or
insl
dec
rorl
jae
test
sbb
xchg
bound
push
fisubrl
cwtl
daa
in
mov
or
cmp
pusha
xor
or
sbb
sub
push
testl
dec
daa
add
fwait
xchg
jmp
adc
mov
clc
fwait
xor
stos
hlt
push
mov
jae
and
mov
or
js
loopne
cmovnp
mov
dec
and
fisubs
ss
sub
testb
incb
lcall
mov
inc
in
dec
stc
in
mov
jle
cmp
mov
push
sahf
fwait
test
xor
xchg
dec
leave
lea
mov
faddp
lahf
shrb
push
push
call
cmp
movsl
mov
out
sbb
mov
inc
int3
es
in
lahf
in
add
sbb
jb
lahf
mov
popa
out
sub
rcll
sbb
sahf
mov
pusha
push
arpl
outsl
test
mov
repz
into
insb
sub
mov
js
js
mov
fldl
add
loop
xchg
mov
inc
fbld
jo
fists
frstor
sti
ss
xor
fisubs
nop
dec
out
dec
popa
orb
add
add
lret
cld
mov
enter
jae
mov
push
inc
ss
orb
mov
int
cmp
xchg
lret
rclb
pop
push
and
popf
loope
icebp
jo
pop
pop
jno
pop
outsl
sub
insl
mov
mov
cmp
inc
loope
adc
sub
adc
pop
test
test
andl
mov
dec
sub
cltd
repz
mov
dec
fmuls
mov
sarb
cmc
fwait
mov
xchg
movsl
mov
push
dec
jg
dec
fimuls
and
push
movl
or
icebp
pop
sub
add
jp
mov
outsl
insb
sbb
mov
push
push
mov
push
clc
lahf
ljmp
andb
test
aaa
decb
xchg
jmp
std
push
adc
lods
bound
or
or
outsb
cmpsb
lock
add
and
fnstsw
popl
pop
mov
cmp
in
mov
fdivrl
pop
mov
push
loop
add
rorl
push
orl
jle
dec
sbb
sub
jge
bnd
mov
push
bound
push
incb
std
popf
fisubs
lret
dec
in
int3
mov
push
jg
icebp
add
and
cli
adc
hlt
mov
add
cmp
arpl
leave
jae
lea
stos
add
shl
mov
push
ljmp
or
cltd
push
push
mov
into
fnsave
outsb
cmp
dec
std
dec
cli
mov
mov
lret
add
outsb
mov
imul
or
sbb
loope
cmpb
dec
loopne
out
mov
adc
pop
add
out
cmp
xchg
roll
out
into
jno
cmp
xor
xor
jmp
loopne
xchg
pop
jp
and
pop
sub
mov
into
fisubl
sbb
ret
sbb
int
lret
int
or
or
xor
or
es
lock
std
cmp
push
loop
inc
jne
mov
sub
jae
mov
push
test
iret
jle
cmpsl
pop
je
dec
popa
adcl
push
pop
popf
cmp
or
je
sahf
cli
mov
adc
push
shr
push
test
mov
push
fsubrs
or
fwait
adc
addr16
jmp
icebp
pop
ret
jae
iret
sub
lods
pusha
mov
mulb
mov
mov
lcall
out
ja
ja
xchg
adc
lahf
clc
push
ret
sti
push
jle
inc
adcb
es
mov
adc
xchg
orl
inc
icebp
pop
ret
int
pop
jne
or
lret
std
or
rorl
xchg
mov
adc
cmp
gs
scas
mov
pop
fnsave
lods
mov
jns
xchg
dec
lods
loope
in
xchg
int
push
dec
fs
and
cld
xor
cmp
jge
dec
lock
mov
inc
sti
and
mov
sbb
sbb
push
push
and
orb
pop
sub
cli
pop
loopne
test
stc
addr16
jne
movsl
aas
out
pop
lret
cmc
nop
inc
pop
std
jg
aas
push
call
add
dec
xchg
jnp
dec
cmp
int
loopne
xlat
mov
pusha
les
pop
lahf
lahf
or
add
inc
aaa
xlat
pop
fsubs
cmp
fdivrl
xchg
test
fstsw
loop
pop
jae
xchg
cld
mov
cld
testl
shll
push
outsl
shlb
jbe
dec
rcrb
or
cmp
mov
fcomps
stos
dec
ret
jl
cmc
call
sub
loopne
addl
mov
stc
fdivr
sub
in
mov
in
cmpsb
cmp
test
mov
rcrb
in
aam
inc
jge
out
std
imul
mov
dec
aam
scas
mov
icebp
xor
cmp
push
lcall
in
push
push
mov
sub
in
mov
pop
popf
aas
dec
int
stos
and
jl
jl
faddl
je
movsb
adc
mov
cs
dec
cmp
cmpsb
inc
shrb
dec
sahf
gs
inc
ficomps
lods
nop
lods
lcall
cmpsl
xor
adc
push
jge
xchg
inc
fmul
mov
dec
lcall
je
in
xchg
addr16
adc
cltd
shrl
inc
rcr
fidivs
int
adc
cli
ds
sti
push
adc
rcr
call
pop
xor
insb
call
sahf
mov
inc
fdivp
add
push
aam
out
and
xlat
push
cs
cli
fwait
ss
insl
push
sub
push
push
mov
subl
dec
sbb
sarl
imul
sahf
das
ss
fistpll
jnp
adc
xor
std
icebp
iret
mov
jae
dec
jns
mov
cld
xchg
das
adc
push
shlb
fcmovb
cmp
test
cmp
jo
clc
xchg
data16
lock
std
adc
mov
cmpsb
pushf
sub
push
mov
dec
sub
out
mov
icebp
cmp
shl
addr16
pop
sti
icebp
clc
fdivrl
push
lahf
mov
mov
mov
repz
shlb
std
negb
push
add
arpl
sbb
mov
scas
sarb
push
clc
lret
sahf
clc
in
sahf
call
jp
sti
mov
inc
fwait
sbb
inc
jnp
inc
sbb
xchg
daa
and
idivb
mov
shl
xchg
lahf
jmp
sahf
push
mov
imul
jge
mov
incl
push
std
sti
xor
in
inc
or
scas
hlt
clc
sub
xchg
hlt
test
dec
lock
cmpl
sarl
enter
ret
in
imul
mov
aaa
and
cltd
pop
lahf
pop
lcall
out
shlb
pop
push
xor
fidivl
jno
sbb
jmp
xchg
mov
mov
or
pusha
pushf
adc
dec
scas
in
bound
sbb
notb
xlat
jmp
ret
fstpl
div
clc
outsl
sarb
aam
andb
dec
push
out
xchg
bound
push
xlat
popf
mov
sar
inc
jmp
push
pop
fcoms
popf
mov
sbb
push
leave
popf
cli
sbb
or
pop
pop
inc
movsl
pop
push
push
popf
cmp
adc
jp
dec
mov
pushf
cs
and
sbb
lahf
dec
mov
pop
clc
push
in
mov
lcall
and
addr16
in
cmp
mov
jns
imul
movsl
es
jns
ja
icebp
push
adc
rolb
call
js
push
pop
in
xlat
in
lcall
lock
sti
or
test
cmpsb
in
mov
mov
xchg
xchg
pop
das
notl
xchg
xchg
in
push
dec
dec
push
mov
jp
mov
jle
sbb
cmp
cmp
aam
xlat
movsl
inc
mov
and
jnp
and
dec
test
or
jno
mull
hlt
fiaddl
jae
xchg
jb
aam
gs
cmp
insb
jo
cmc
mov
ret
and
or
aaa
aaa
sub
dec
pop
ljmp
arpl
fwait
xchg
mov
mov
sbb
lahf
addr16
repnz
inc
adc
iret
fimull
std
xor
popf
jbe
pushf
dec
into
in
push
lahf
insl
or
pop
dec
xchg
sub
out
add
stc
mov
lods
mov
xchg
dec
fsubs
xor
ret
lret
icebp
fmul
mov
mov
adc
jbe
sub
out
jl
push
or
leave
xchg
sti
repnz
loope
and
mov
cwtl
std
mov
aam
push
xlat
stc
pop
fistl
inc
lds
ret
push
sub
addr16
mov
xchg
imul
aaa
or
stos
pushf
pop
loope
dec
and
lret
and
ret
mov
push
cwtl
pop
stos
mov
ss
dec
xor
dec
inc
ja
pushw
sbb
mov
sub
add
fwait
sti
jg
inc
push
or
lret
dec
int3
xchg
popa
std
pop
shll
movsl
imul
sbb
push
sbb
insl
xchg
clc
add
fisttps
adc
add
cld
icebp
xlat
loopne
pop
xchg
je
sub
jbe
mov
xchg
ret
aam
add
aas
sbb
out
mov
inc
dec
or
pop
imul
fcomip
jle
cmp
mov
sbb
pop
popa
cmp
lahf
fs
aad
dec
cwtl
lret
adc
out
pop
sub
ret
pop
cld
stos
pop
fdiv
in
mov
aaa
push
xor
clc
adc
jnp
idiv
mov
std
xchg
cmp
inc
ret
inc
cmp
dec
popa
mov
xchg
outsl
xchg
addr16
out
sarl
pop
inc
and
cmpsl
nop
scas
mov
inc
mov
in
push
pushf
mov
addr16
cmp
pop
stc
xchg
mov
jecxz
lock
push
mov
fstpl
popa
lods
sbb
shrb
movsl
ret
outsb
pushf
lret
dec
sbb
and
ljmp
andb
xchg
mov
aad
add
nop
into
cli
xor
orb
sbb
cmp
adc
xor
mov
cmpsl
mov
push
movsb
pop
int
xor
and
push
mov
movsl
push
pop
jno
lret
enter
loopne
push
or
add
insl
lds
stos
jecxz
call
jnp
cmp
je
xchg
jo
mov
sub
bound
push
pop
lret
cmc
xor
cmp
in
fsin
push
test
cmp
out
rcl
popf
sub
lods
sub
rcr
mov
ljmp
addr16
hlt
cmc
int3
mov
scas
hlt
xchg
outsb
data16
lret
jnp
lea
fst
sbb
insb
insl
sbb
nop
subb
hlt
fbld
adc
decl
inc
aas
mov
mov
cmp
and
xchg
jecxz
mov
bound
pop
dec
call
dec
mov
cli
sbb
lahf
rorl
inc
lret
in
sub
leave
nop
adc
mov
stos
std
roll
jmp
sub
mov
negb
mov
imul
in
jmp
pop
negl
mov
lods
imulb
jo
mov
and
xor
jecxz
call
sub
xchg
push
jbe
mov
mov
shrl
cmp
sbb
lcall
ja
stos
dec
cmp
sbbb
mov
enter
add
insb
leave
dec
dec
in
pop
sub
fisubrl
outsb
push
out
test
fldt
xchg
arpl
jle
push
xchg
fs
add
aam
loop
jno
pop
mov
push
inc
mov
and
xchg
inc
pop
push
inc
pop
sbb
sub
rcll
mov
adc
sub
or
bound
sub
out
lea
xchg
loop
jmp
push
ds
xchg
loope
inc
xor
ficoms
outsl
xchg
xchg
dec
testb
hlt
mov
testl
jne
cmp
xor
movsb
movsb
push
add
fdivr
lret
cmpsl
imul
cmpsb
jecxz
pop
add
mov
jp
scas
lcall
or
es
shlb
fnstcw
mov
jns
and
fs
insb
mov
jmp
mov
jecxz
push
mov
push
loope
mov
add
rep
inc
in
jb
inc
push
je
fwait
out
sub
fidivrs
xor
stos
adc
movsl
cmp
fdiv
inc
mov
xor
outsb
cmp
sub
push
idivb
cltd
adc
mov
in
out
rcll
mov
inc
mov
aas
adc
and
add
aam
in
jle
pop
inc
mov
mov
xor
dec
mov
aam
pop
pop
mov
stos
add
cltd
mov
and
and
scas
push
js
jge
jg
pop
repz
ljmp
repz
jg
pusha
test
out
add
mov
lcall
out
sub
add
repnz
adc
in
push
sub
sub
cmc
push
mov
pop
adc
or
mov
push
sub
jle
inc
and
inc
pop
adc
std
lcall
sti
xor
mov
loope
add
lea
adc
and
jp
mov
pop
sub
pushf
and
aad
add
fists
fwait
mov
sbb
andb
add
jecxz
nop
outsl
mov
pop
pushf
sahf
push
jmp
iret
mov
mov
xchg
mov
aas
push
xchg
shrb
jo
xlat
shl
jns
dec
dec
pop
inc
ds
push
jmp
add
repnz
rclb
sahf
jle
test
add
lea
aas
push
jb
enter
iret
leavew
stc
cld
ficomps
movsb
fdivr
push
scas
hlt
sbb
jo
mov
or
loope
es
and
sub
mov
fwait
xchg
jae
sbb
out
test
mov
push
insl
jne
pop
insl
in
mov
je
jae
lahf
push
lods
inc
js
pop
in
mov
aas
push
sbb
and
idivl
push
jo
mov
imul
addr16
sti
mov
leave
inc
and
sbb
xor
in
mov
mov
stos
ret
test
test
out
mov
fwait
cwtl
bound
fsubrl
arpl
out
mov
adc
ljmp
sub
push
add
clc
cmpsb
iret
sub
mov
in
lret
fistpll
jmp
loope
stc
push
dec
pop
pop
cmpsl
push
jno
jle
push
scas
xchg
mov
pop
mov
ss
fcomps
add
pop
xchg
sti
fistps
imul
jp
cmp
movsb
sti
and
rcll
dec
aam
inc
mov
mov
repnz
and
aaa
sbb
adc
push
lahf
ljmp
pop
out
fwait
es
ljmp
push
mov
stos
push
scas
push
sbb
xor
popf
mov
insl
imul
arpl
pop
pop
mov
sbb
das
fcompl
inc
inc
scas
test
sbb
pusha
andb
test
pop
push
sub
sub
mov
mov
mov
push
push
mov
jmp
sub
mov
sar
jl
test
pop
add
jne
jle
cli
sbb
cmp
bound
sbb
and
pop
sub
mov
stos
jl
push
lock
loope
sbb
popf
int3
test
fsub
test
and
and
loopne
jns
jb
es
shll
repz
rcll
inc
mov
lods
pushf
jne
mov
pop
jne
and
push
es
inc
sahf
sti
jge
inc
ljmp
or
sbb
test
push
fisubs
xor
sub
mov
fadd
xlat
mov
ljmp
outsb
add
push
or
mov
leave
jg
sbb
loopne
fcmovnbe
or
xchg
int3
xor
loope
or
and
and
rol
or
out
adc
sbb
inc
daa
pop
test
add
inc
loope
sbbl
aam
pop
sub
pop
fstl
jne
aaa
imul
dec
xchg
pop
and
cli
mov
leave
lret
into
lahf
xor
sub
jge
sbb
push
jle
pop
loop
shl
jo
das
addr16
loopne
out
sub
outsl
or
pop
dec
test
mov
sbb
jnp
adc
pushl
mov
popf
push
push
clc
push
mov
fld
pushf
imul
mov
dec
adc
pop
sbb
sarb
lcall
push
das
loope
jnp
xchg
cmp
loop
sbb
cli
ljmp
lock
repz
mov
or
fmuls
daa
xchg
addl
adc
iret
xor
jecxz
jl
cmp
pop
in
sbb
cmpsl
int
out
ss
icebp
cmc
gs
js
movsl
mov
cmc
test
inc
cmp
aam
sbb
xor
scas
ljmp
cld
fcmovnb
das
lret
mov
and
and
bound
push
mov
and
mov
fcmovb
aad
adc
sbb
adc
popa
cmpsb
mov
repnz
xchg
mov
xchg
cmp
mov
mov
cmp
loop
jmp
dec
push
adc
dec
fdivs
cmp
cld
loope
arpl
and
test
test
cmp
sub
xchg
rorb
push
jo
stc
jnp
dec
dec
mov
stc
sub
xor
xchg
rorl
jecxz
js
jp
fnstsw
xor
lock
sub
stc
cwtl
je
mov
lods
sbb
addr16
jae
xor
jmp
adc
jno
decl
jns
popf
push
xor
ds
or
mov
lahf
int3
cmp
mov
sbb
movsb
call
imul
aaa
lods
push
jbe
stc
hlt
test
jmp
aas
jg
mov
jne
gs
jo
lock
test
outsb
orl
fisubs
and
stc
xor
in
sbb
mov
pop
icebp
lret
jle
mov
cmpl
fmul
sub
and
stc
push
fnstcw
in
ja
hlt
mov
mov
int3
pusha
js
ja
push
les
jae
stos
lahf
ja
sub
pop
mov
push
jge
daa
jns
mov
aam
xchg
mov
fisubrl
sarl
pop
jecxz
leave
lret
in
std
hlt
sbbb
or
cmp
push
mov
pusha
push
add
inc
mov
push
ljmp
sbb
mov
push
in
out
popa
jp
cmp
popf
pop
dec
pushf
aam
popf
call
out
fdivrl
sub
filds
out
fwait
dec
xchg
adc
mov
stc
dec
fisubs
sbb
mov
es
inc
xor
andb
jns
xchg
jb
in
dec
stos
inc
adc
adc
and
adc
jo
loop
stc
subb
cmpsl
es
or
push
cli
add
fcompl
jmp
dec
jg
in
sub
adcb
pop
xchg
lods
ja
movsb
pusha
mov
les
xchg
fiadds
sahf
sbb
jae
outsb
and
out
mov
dec
or
mov
jbe
cmpsl
shl
jnp
leave
mov
and
mov
xlat
std
mov
paddusw
adc
adc
in
pusha
sub
clc
mov
stc
es
sti
xchg
sub
xor
pop
icebp
imul
les
stos
out
out
adc
into
pop
or
inc
inc
fxch
out
cmc
movsb
btcl
mov
dec
rcrl
pushf
test
daa
sbb
jecxz
jns
pop
jns
fcoml
pop
push
out
jno
movd
sbb
jae
sbb
sbb
xchg
daa
cmp
lret
data16
insb
loopne
pop
or
int
insb
jno
or
add
mov
mov
sahf
rorl
add
dec
xor
imul
jmp
les
cmp
ljmp
pop
push
sub
and
jo
jge
mov
xor
into
mov
inc
lods
pop
lret
ror
or
cmpsb
sbb
mov
fwait
aad
jb
in
fcoml
es
jmp
mov
mov
out
pop
aad
dec
insb
movsb
movsl
jae
mov
fsubr
lods
mov
add
add
or
and
shll
pop
mov
xorl
sahf
mov
loope
mov
jg
and
jno
xor
ret
test
sahf
mov
mov
sbb
mov
int
ret
js
shll
adc
jb
push
pushw
mov
stos
daa
mov
sahf
movsb
cltd
imul
add
into
sub
rcll
outsl
leave
add
jo
and
imul
in
fdivs
xchg
loope
or
sarb
std
sub
jg
push
or
and
xor
inc
and
jge
sarb
pop
movl
push
and
jnp
jns
sarb
dec
pusha
mov
mov
arpl
mov
loop
loop
imul
mov
jmp
je
shll
jno
fsubrl
lds
cmpsb
clc
leave
fmull
jge
cltd
sub
hlt
push
jp
mov
mov
fsubrl
bound
sub
outsb
je
jmp
jecxz
ffreep
or
sahf
mov
mov
lret
shl
ffreep
lock
rcrl
negb
mov
push
decl
loop
xchg
aaa
loopne
jg
leave
push
ds
or
dec
in
pushf
push
inc
jl
clc
adc
fwait
out
or
rcrl
outsl
je
sub
push
push
loope
shll
imul
imul
cld
sub
inc
paddd
jnp
cmpsl
addr16
pop
test
je
mov
rclb
popf
inc
lahf
dec
sub
push
add
adcl
cmp
or
add
pop
mov
inc
pop
add
andb
call
bound
add
push
mov
aas
bound
outsl
jge
fistpl
xlat
fimuls
sub
dec
inc
decb
fwait
nop
cmp
xor
sbb
enter
mov
test
bound
adc
push
imul
insb
cmc
outsl
in
ret
xchg
dec
sub
mov
fisubrl
lods
mov
fdivs
cwtl
ss
mov
xchg
mov
mov
push
std
stos
push
cmp
subl
ss
jnp
and
push
push
push
mov
inc
pop
js
push
dec
je
test
cltd
mov
sbb
sub
sahf
ret
dec
popa
stos
lret
push
fsubr
mov
or
ret
or
mov
cmp
loopne
sub
push
push
xchg
icebp
cmp
adc
push
pop
stos
xor
int3
rcrl
sub
adcb
cs
mov
aaa
test
inc
sub
push
push
pop
mov
cmpsb
mov
push
cwtl
sbbb
jge
push
inc
mov
lahf
mov
pop
add
jbe
or
into
sub
int
mull
outsl
repz
shlb
xchg
leave
sub
sbb
xor
adc
mov
mov
fwait
add
jae
mov
das
loope
xor
dec
cmpsb
cmc
es
xchg
js
decb
adc
sbb
mov
mov
cltd
push
pop
mov
pushf
mov
dec
sub
inc
xchg
andb
out
xor
clc
add
fnsave
fnstenv
int
dec
and
jg
leave
pop
push
pop
jp
cmp
loopne
fadd
fdivl
lret
aaa
push
mov
mov
ss
fstp
xor
sbbb
ret
adc
fldcw
jbe
lock
call
pop
sbb
dec
shrb
and
lds
subl
rcrb
ja
cltd
xlat
jno
or
add
cmp
mov
adc
xor
mov
test
sub
push
insl
push
cmp
xorb
mov
mov
fcmovnbe
lods
test
or
xor
inc
mov
in
sub
mov
insb
adc
outsb
in
dec
fs
addb
xchg
fiadds
add
push
mov
outsl
outsb
sbb
push
push
fstps
rcr
jle
cs
push
addr16
jae
test
flds
mov
stos
cmpsl
addr16
mov
inc
out
or
cmpsl
mov
clc
por
xchg
cmpsl
adc
in
inc
jnp
xchg
imul
xor
pop
adc
addl
add
push
lahf
ficoml
dec
add
mov
push
jecxz
mov
mov
adc
nop
push
pop
fsubs
sub
xchg
pop
notl
ljmp
inc
cmpsb
adc
mov
xchg
fisttpll
ret
bound
in
pop
nop
or
dec
arpl
xor
jb
pushf
int3
or
and
xor
xchg
repz
repz
movsb
loope
inc
pushf
jl
clc
dec
lods
cmp
pop
cmp
xor
dec
sbb
pop
mov
add
mov
jge
mov
frstor
and
into
int3
mov
mov
sbb
push
ficoms
cld
push
es
test
add
popf
mov
mov
push
fdivl
xchg
andb
clc
or
jbe
pop
mov
test
test
mov
push
enter
pop
push
or
imul
inc
cmpsl
sbb
test
xor
les
inc
imul
inc
addr16
faddl
imul
dec
xchg
sub
test
mov
jb
mov
push
in
jnp
fs
imul
jp
jb
jne
scas
mov
mov
pop
dec
dec
jne
in
test
dec
dec
or
lret
or
testl
cmp
std
xchg
push
or
nop
jno
iret
sub
push
jmp
cltd
cmpsb
lock
fldt
sub
lods
sbb
lcall
xchg
inc
sub
mov
cmc
jae
insl
pushf
stos
dec
std
xor
cmpsl
cld
adc
loope
andb
push
mov
mov
inc
fbld
sbb
xchg
popf
jbe
mov
insl
cmp
cmp
adc
jg
test
mov
ljmp
fwait
sbb
push
into
cwtl
es
test
cmp
mov
jb
ret
inc
fs
pop
add
inc
addr16
scas
dec
xchg
aas
sbb
pop
add
loope
or
push
or
push
scas
lds
rorl
push
adc
xchg
inc
jl
scas
ret
xchg
popf
sub
pop
leave
mov
push
cmp
test
in
cmp
add
cli
or
out
test
imul
cwtl
mov
dec
rcrl
xor
cmp
cmp
jns
femms
mov
mov
xlat
lcall
stc
out
mov
jecxz
andl
ja
and
sti
jns
test
and
xchg
cwtl
cli
xchg
mov
inc
sub
into
sub
and
dec
inc
mov
out
fidivl
cmpsl
jge
fincstp
fsubl
movsl
icebp
jg
mov
rorl
leave
push
int
adc
fldenv
addr16
sbb
pushf
sub
std
repz
imul
pop
mov
lock
pop
pop
jnp
nop
push
not
sahf
dec
insb
icebp
adc
pushf
and
xor
fsts
das
xor
pop
xor
ja
ret
xchg
jne
adc
sti
enter
inc
dec
jo
pusha
jo
ds
mov
xchg
cmp
cmp
nop
xor
sbb
rorb
xchg
adc
mov
outsl
cli
and
lahf
push
int3
push
pop
cmpsb
out
sbb
repz
rclb
or
cmp
and
sbb
cs
inc
insl
clc
pop
mov
data16
cmpsb
std
push
mov
shrl
fsub
jl
bound
mov
in
xor
insl
inc
cmpsl
out
int
push
mov
gs
fiaddl
xchg
cltd
fstl
dec
sbb
push
sbb
out
sar
aad
fmulp
loop
xchg
mov
mov
mov
icebp
ret
insl
pusha
jge
ja
add
sub
sbb
ret
adc
movsl
fcos
push
mov
adc
inc
mov
and
test
in
loop
dec
adc
arpl
into
lahf
insl
dec
mov
mov
imul
jmp
cs
xchg
sub
fbstp
imul
das
mov
jne
imul
pushf
icebp
pop
cs
orl
push
imul
std
jne
mov
mov
pushl
push
xchg
shrl
push
fidivs
or
jle
inc
sbb
mov
mov
jmp
jno
sub
dec
cmpsl
add
push
mov
add
xor
and
mov
xchg
jo
xchg
mov
sub
or
scas
in
or
or
out
idivb
pop
xor
mov
lret
mov
cmp
sub
js
pop
push
clc
arpl
mov
push
push
cli
cmp
inc
dec
jmp
sbb
faddp
jns
push
fs
sub
es
loopne
xchg
sbb
call
scas
jb
xchg
mov
dec
aam
and
mov
frstor
push
xor
and
jb
stos
push
push
lahf
mov
out
sarl
lods
cmp
pop
roll
mov
jmp
lock
sub
fidivs
negb
test
sbb
ds
out
pop
ds
or
push
mov
addr16
fwait
lea
stc
mov
dec
das
cli
insl
jmp
jle
iret
repnz
push
jo
stos
jmp
mov
lret
inc
mov
fistps
das
add
lahf
rcrb
je
add
jo
out
stc
adc
pop
movb
not
mov
ss
mov
mov
jnp
xchg
das
inc
test
pop
inc
cwtl
inc
push
xchg
mov
sub
daa
stos
xor
cld
lds
push
mulb
jno
jb
fists
xchg
arpl
shrb
jo
loop
cwtl
pop
mov
leave
popa
push
fcmovnb
pop
pushf
test
push
cmp
cmpsl
inc
mov
das
jns
out
sahf
popf
cmp
out
nop
cmpsl
pop
int
les
test
sarl
in
mov
add
push
js
cmp
sahf
dec
sahf
out
lock
into
repz
pop
testb
ds
mov
cwtl
mov
mov
add
lcall
fldlg2
or
pushf
clc
jg
lahf
outsl
addl
sahf
xor
iret
ja
cs
push
dec
or
pop
push
iret
repz
repz
sbb
cld
jnp
fists
frstor
xchg
fwait
clc
push
adc
push
and
mov
pop
in
inc
sbb
xchg
mov
jp
cmp
jp
cmp
mov
mov
mov
mov
adc
push
lcall
add
scas
repnz
xorl
sub
push
popa
test
add
scas
repnz
arpl
adc
outsb
lcall
mov
dec
push
mov
cmp
xchg
dec
dec
repnz
mov
xchg
jns
or
sbb
xor
jecxz
out
andl
jns
loop
int
or
pop
sahf
pop
repz
aam
int3
jecxz
xchg
daa
and
and
jg
ds
in
cmp
inc
in
xchg
cmp
loopne
scas
sub
in
sbb
lahf
dec
shll
aaa
fstpt
dec
sti
fsub
rcll
or
dec
jns
jecxz
lret
xor
js
repz
push
int
add
or
sbb
repnz
xor
fwait
lods
incl
xchg
mov
or
add
mov
int
xor
rol
lea
sbb
mov
lret
imul
fdivrs
xchg
dec
push
mov
das
cmpsl
xlat
push
mov
mov
cs
clc
mov
mulb
mov
cwtl
push
out
mov
jmp
pop
push
cld
fdivrs
mov
inc
aam
out
push
cld
mov
shrb
mov
pop
pop
fisubrs
xchg
adc
push
cmp
ret
inc
repz
fidivl
cmp
repnz
cmp
icebp
pop
int3
push
lds
popf
addr16
iret
insb
sahf
pop
sahf
stc
cmp
jns
repz
pop
into
mov
cmpsl
andl
cmc
lea
iret
mov
add
int
jnp
js
dec
push
outsl
push
xchg
xchg
dec
dec
inc
movsb
out
pusha
pop
ja
xchg
rcrl
rorl
xchg
adc
mov
or
xchg
pop
test
cltd
pop
test
mov
mov
pop
test
mov
pop
test
mov
pop
test
mov
pop
test
mov
pop
test
jg
push
add
movsb
js
cld
mov
in
clc
call
sbb
pop
mov
out
sahf
out
pop
out
jecxz
mov
cmp
pop
iret
pusha
sahf
inc
js
loop
xchg
clc
fstl
cmpsl
icebp
sti
inc
dec
fistl
cld
xchg
shll
cmp
pop
sbb
fcoml
mov
lods
nop
std
inc
outsb
fwait
inc
out
mov
sar
inc
insl
call
mov
lahf
test
popf
mov
mov
mov
mov
mov
mov
inc
icebp
mov
fsubrp
mov
mov
mov
push
hlt
push
icebp
mov
ficoms
mov
add
jg
stc
sbb
lcall
iret
or
repz
loop
lock
jae
dec
adc
cmp
jns
jns
loopne
outsl
repnz
sti
xor
pop
movsl
adc
ss
ljmp
push
sub
lods
xchg
sbb
jmp
in
cmp
mov
cs
push
dec
or
pop
push
iret
repz
repz
sbb
out
sahf
pop
jns
push
clc
sub
push
aas
jnp
jnp
push
hlt
or
or
jne
mov
ret
jg
jne
mov
test
es
sub
push
pop
fiaddl
outsl
lcall
push
scas
cmp
mov
ss
movsb
push
sar
outsb
or
push
jo
sbb
cmpl
insl
dec
out
push
test
loopne
insb
lahf
push
aam
ds
xchg
mov
pop
dec
sub
fiaddl
jp
jae
xchg
imul
fimuls
out
jno
xor
notb
jnp
cmpsb
repnz
test
ss
cmp
aaa
outsb
dec
mov
push
or
notl
push
enter
test
lcall
pop
jl
sub
fldenv
fwait
dec
test
mov
in
mov
cmp
adc
stos
leave
or
rcrl
add
incl
sub
push
imul
pop
shrb
add
dec
jmp
cli
sbb
jo
adc
out
loopne
rcll
push
xchg
aas
mov
cmc
fcos
push
mov
test
jl
or
sub
aaa
cmpsl
jge
and
or
push
aam
imul
jg
scas
or
mov
jp
scas
sbb
sub
repz
cmpsl
fdivr
ja
sbb
mov
cli
pushf
sbb
push
imul
mov
add
cmp
stc
jecxz
mov
sub
mov
adc
and
dec
jecxz
mov
rcl
jecxz
dec
sti
jb
scas
bswap
add
ret
cmpsb
dec
aas
jg
xchg
test
aam
jp
pop
sbb
xor
sub
xor
mov
cwtl
pushf
ljmp
jp
neg
mov
mov
mov
jno
aad
test
jge
pop
lret
jae
mov
jg
repnz
add
dec
fsts
enter
lret
xor
dec
sub
jge
fcmove
aaa
cmpl
dec
pop
jnp
mov
push
cmp
sahf
std
dec
mov
pop
xor
and
cmp
mov
cmp
out
sbbl
and
imull
dec
push
or
stos
mov
jge
xor
std
cmpsl
in
pop
mov
test
icebp
mov
imull
test
pop
sbb
aam
out
lahf
jp
test
enter
fcompl
data16
sbb
ja
adc
roll
sub
cmpsb
jge
mov
and
out
adc
or
fcoml
out
mov
inc
inc
imulb
sub
stos
sbb
jle
pop
push
mov
stos
ret
dec
pop
xor
clc
cltd
mov
jg
xchg
push
mov
cmp
ret
loope
push
data16
push
lds
daa
out
mov
rclb
sub
cld
cmp
fildl
push
pusha
xchg
pop
out
adc
xchg
adc
or
aad
jge
xchg
mov
xor
lea
xchg
mov
dec
cld
sti
push
xchg
fdecstp
inc
push
lods
out
aas
xor
bound
mov
mov
mov
inc
ret
adc
loope
test
leave
pop
stos
dec
enter
jae
jle
mov
xchg
or
insl
push
call
out
rcl
and
jae
xchg
xor
add
clc
mov
lcall
pushf
push
jecxz
mov
cmpsl
shlb
cmpsb
hlt
dec
pusha
daa
cmp
lcall
hlt
inc
push
push
cld
inc
cwtl
dec
icebp
inc
push
repnz
in
dec
xchg
mov
lea
aad
xchg
adc
fadds
ss
jns
nop
inc
repz
and
pop
ljmp
pusha
mov
sbb
sub
xchg
and
scas
adc
lret
out
cltd
dec
dec
sub
lcall
stos
add
xchg
mov
adc
mov
push
add
pop
repz
scas
sbb
cmp
xchg
fwait
stos
dec
xor
lcall
cmpb
imul
jmp
gs
add
mov
add
mov
daa
adc
shlb
ss
mov
dec
and
xlat
mov
xor
aaa
loop
inc
mov
adc
mov
je
ss
jmp
repz
icebp
pushf
ds
fld
or
mov
xchg
icebp
out
fisttps
jns
add
add
push
lret
out
mov
cmp
negb
stc
mov
mov
jbe
jnp
sub
and
pop
aad
jg
and
les
test
push
pop
mov
sub
mov
mov
cmp
out
fistpl
scas
xor
sbb
jae
add
into
fisubrs
idivl
shrl
inc
push
inc
clc
jle
cs
push
fldcw
xchg
or
ret
sahf
cmp
es
pusha
pop
in
adc
cld
or
inc
ds
pushf
icebp
inc
ret
in
push
xbegin
stos
pusha
jno
dec
push
arpl
outsb
pop
mov
xchg
mov
mov
jbe
enter
xchg
arpl
pop
lock
mov
adc
push
mov
mov
mov
lods
mov
pop
scas
std
shlb
imul
popf
ss
mov
fstl
xchg
cmova
fldenv
insb
mov
fisttpl
xchg
sahf
ret
jle
fcmove
mov
lods
push
cld
add
lods
cwtl
pop
mov
mov
mov
popa
mov
fs
lret
mov
add
and
jecxz
adc
aaa
mov
add
icebp
bound
test
jne
in
inc
int3
dec
and
or
out
loopne
xor
jg
cltd
js
mov
iret
mull
xor
test
fmuls
pop
jbe
xor
movsb
mov
stos
mov
stc
sbb
test
xor
in
dec
xchg
pop
ja
rclb
or
inc
mov
fcompl
jns
shll
cmp
aaa
dec
jno
in
fimuls
mov
fisubrl
shll
int
in
sub
xchg
movsl
ljmp
or
jne
jno
sbb
arpl
lods
jae
xor
add
loopne
fwait
js
int
xchg
arpl
add
repz
dec
mov
orb
fisttpl
test
xchg
push
or
addr16
push
push
sub
test
adc
repnz
rolb
je
sbb
fwait
call
push
jmp
adc
inc
jno
cmp
jp
sbb
pop
pop
jo
xor
mov
std
mov
jo
jecxz
adc
imul
std
dec
sbb
mov
mov
fucomi
xlat
xor
ficoms
xchg
lods
mov
sub
incl
push
dec
jmp
sbb
sub
in
ret
inc
xchg
sbb
cmpsb
stos
cmc
push
scas
mov
dec
int3
or
adc
inc
sahf
cltd
aaa
ret
adc
add
mov
inc
add
or
xor
stc
inc
push
lcall
pop
loope
loopne
or
jb
mov
sub
das
dec
sbb
aad
sahf
adc
dec
lcall
jle
cmc
pop
stos
les
pop
fstpl
add
out
mov
xchg
clc
cmc
subl
repnz
or
xchg
mov
fimull
ret
and
inc
outsl
mov
sbb
adc
fmuls
and
mov
jno
lret
into
push
cwtl
out
inc
and
pop
mov
dec
jbe
lea
push
mov
pop
mov
int
scas
sbb
mov
xor
or
pop
or
add
xchg
pop
insb
test
movsb
push
adc
add
fildll
and
mov
mov
push
cs
daa
pushf
imul
push
data16
jo
int
loop
inc
pop
mov
aaa
mov
arpl
jno
jg
je
outsb
jae
mov
pop
mov
test
inc
pop
mov
dec
mov
jle
jl
dec
lea
test
rolb
iret
sub
push
xchg
xor
dec
mov
ss
jae
push
pop
lcall
sahf
xor
repnz
cmp
pushf
dec
xor
sub
inc
mov
repnz
pop
inc
jbe
push
mov
dec
mov
scas
push
addb
sti
cmp
jb
inc
mov
inc
ficoms
mov
xor
rclb
test
pop
fs
shl
push
out
pop
adc
xor
cld
cmc
cmp
imul
mov
add
es
std
fldenv
xchg
lock
je
jno
xchg
mov
pop
divl
add
addr16
fsubrs
mov
repnz
dec
pop
rcl
dec
sub
mov
daa
add
mov
dec
mov
pop
xchg
fimull
dec
inc
inc
cmpsb
add
pop
out
xor
imul
scas
xor
adc
cmp
ja
sub
test
pushf
adc
mov
mov
inc
arpl
add
loopw
out
xchg
mov
pop
bound
out
imulb
shlb
pop
sub
adc
scas
shll
jle
ret
std
cld
aam
sbbb
sub
cmp
sbb
fidivrs
and
addr16
mov
pusha
ds
pushf
rol
add
add
and
dec
mov
out
hlt
and
jmp
jbe
or
stc
jb
and
sbb
aaa
ja
or
pop
mov
mov
lea
push
mov
sbb
and
xchg
xor
jno
mov
jmp
dec
adc
scas
in
lcall
test
and
mov
in
lock
clc
fldl
icebp
ss
adcl
push
sar
and
das
mov
test
fsub
adc
cmp
pop
hlt
sbb
jnp
push
push
mov
cli
popf
xor
fs
ss
xchg
cmpsl
ret
imul
jbe
mov
in
mov
jle
into
xchg
fldcw
fistpll
mov
jmp
push
das
pushf
xor
push
inc
sbb
add
outsb
in
sti
mull
dec
aas
mov
fistl
loopne
dec
imul
jo
repz
icebp
ss
mov
push
cld
mov
cmpsl
clc
test
sub
cltd
ret
adc
dec
gs
sub
jecxz
lea
shll
ljmp
dec
jge
sahf
push
js
dec
push
dec
xchg
xchg
or
loop
xchg
out
mov
mov
xor
and
les
push
int3
push
shl
stos
ds
adc
test
cli
fsubrp
cltd
pushf
pop
jb
cmp
js
dec
adc
ss
imul
jle
jnp
push
dec
outsb
fstl
std
test
cmp
push
rol
shlb
dec
dec
ss
pop
push
cmpsl
mov
jle
cmpsl
jge
dec
mov
jae
insl
xchg
out
pop
push
ss
mov
popf
xchg
ja
pop
je
call
fucomp
lret
jno
test
inc
mov
out
aaa
popa
mov
mov
fwait
aas
pop
and
xchg
movsb
lcall
and
cmc
pop
loope
dec
adc
out
movsl
sub
lods
mov
imull
dec
pop
xor
bound
xchg
test
in
repz
mov
loop
jmp
ret
sub
ret
mov
fcomp
mov
jns
das
imul
dec
and
mov
pop
push
mov
pusha
enter
mov
arpl
jo
out
lods
jb
pop
push
or
inc
sub
jg
fidivl
iret
jl
shrl
jl
sub
mov
ret
movsb
decb
int
dec
mov
add
add
pop
popw
mov
inc
mov
test
test
xor
sbb
cs
dec
sub
fidivrl
rcrb
loop
jg
push
movsl
pop
ja
stos
movsl
sbb
outsl
mov
xchg
mov
mov
cmpsb
or
cmpsl
call
adc
push
jecxz
sbb
bound
adc
std
and
dec
js
cwtl
mov
inc
xor
add
push
mov
outsl
cmp
icebp
inc
and
insb
push
dec
mov
outsb
pushf
std
repnz
jmp
adc
fisttpll
fstl
xor
jmp
fucomp
out
loope
rcr
sbbl
sbb
pushw
insb
idivl
add
sub
mov
pop
imul
not
inc
sbb
out
vmovaps
push
loope
imul
dec
roll
es
dec
pop
ljmp
xchg
shll
je
inc
dec
adc
jno
popa
test
leave
inc
push
pshufw
int
sub
ret
lock
xchg
mov
add
push
lret
sti
xlat
pop
xor
call
mov
push
lea
push
sbb
in
lea
and
xor
call
es
jle
sbb
jmp
jp
sub
in
mov
and
adc
testl
jmp
sbb
out
pushf
xlat
jb
out
aam
xchg
inc
xor
cld
or
xchg
sti
mov
xchg
cltd
imul
pop
das
ret
fistpll
into
cmp
mov
cld
in
scas
cmp
push
mov
pop
mov
sub
xchg
cli
cmp
jge
pop
sub
sbb
repz
sub
mov
add
push
nop
xor
inc
cld
jno
add
mov
push
mov
xchg
daa
cld
out
notl
leave
repz
scas
adc
inc
pop
mov
fnsave
dec
mov
add
aas
sahf
xlat
stos
push
ds
inc
stc
nop
ret
test
dec
xchg
and
iret
mov
lcall
lret
pop
les
lods
lahf
pop
push
pop
les
fistps
movsl
pop
sahf
pop
push
or
outsb
push
jmp
iret
fists
push
sub
xlat
sbb
sub
pop
pop
mov
xchg
insl
js
ret
jl
jmp
or
cmc
sub
mov
xchg
imul
push
icebp
sub
mov
shll
dec
mov
les
icebp
cmovl
sub
and
mov
popa
pop
icebp
aaa
fs
arpl
lret
rclb
xchg
popf
xor
lret
and
mov
jecxz
loop
dec
and
data16
cwtl
aam
shlb
mov
rcrb
fcmovb
shlb
mov
adc
mov
jmp
lds
pop
xor
or
ljmp
or
scas
rcll
push
test
clc
neg
xchg
jae
call
sbb
mov
test
sahf
push
ret
sbb
lds
aam
xchg
sub
mov
jbe
xchg
and
xchg
inc
das
mov
add
cmp
xor
mov
mov
sub
outsl
rolb
sbb
or
in
mov
xor
rolb
arpl
sbbb
push
mov
lods
mov
movb
pop
push
mov
mov
repz
nop
mov
mov
or
inc
cld
sub
adc
sbb
scas
mov
fsubrs
sbb
clc
sub
xor
das
cmp
jle
lds
sub
pop
xchg
sub
xor
inc
loopne
lcall
rorb
sbb
cmp
xchg
call
and
lret
mov
pusha
scas
aaa
add
ror
jo
pop
rorl
jle
sub
adc
and
outsl
push
pop
mov
cli
sub
loopne
mov
mov
jmp
outsb
les
sbb
jle
scas
cmp
aam
gs
dec
jnp,pn
sahf
jmp
pop
test
daa
cmpsb
mov
xor
in
lahf
cwtl
scas
add
push
sub
ficompl
xchg
in
add
in
cmpsb
rol
mov
jle
mov
hlt
ljmp
or
mov
lods
cli
and
lret
sar
and
cwtl
gs
mov
lret
mov
lret
in
mov
in
je
mov
push
clc
pop
jb
fwait
lret
add
aam
je
sarb
inc
call
pop
xchg
cwtl
push
push
xchg
in
xchg
in
dec
lcall
gs
cwtl
pop
mov
pop
int3
pop
xor
cmp
rcrb
jle
repz
mov
mov
cmpsl
push
adc
cli
stos
mov
sub
out
test
and
out
pop
dec
ljmp
inc
loop
les
fwait
mov
scas
ret
sbb
mov
cwtl
sbb
inc
aaa
or
xchg
and
push
clc
jecxz
xchg
add
insb
or
or
test
cwtl
push
js
loope
dec
xchg
fimuls
add
mov
mov
orl
ljmp
dec
xor
clc
push
test
in
dec
es
in
push
mov
popf
mov
and
xor
xor
fwait
inc
mov
mov
sub
test
cwtl
xchg
jnp
inc
cld
xchg
or
sbb
in
fptan
out
and
cmp
lret
jo
out
jo
and
and
push
mov
lret
or
rorl
pop
cli
pop
insb
mov
mov
repnz
pop
add
cli
jl
sub
cmc
jge
cmp
int3
or
addr16
lcall
fidivrs
xchg
cltd
daa
push
jne
mov
jo
mov
push
lcall
loopne
cmpsl
rolb
xorl
push
xchg
and
mov
push
inc
loopne
orl
pusha
scas
andb
lods
stos
adc
out
and
mov
xor
adc
lods
inc
aad
cmp
add
mov
push
jne
lret
or
repnz
data16
and
cld
ffree
sub
mov
stos
push
pop
pop
and
pop
mov
push
inc
adc
cld
push
pop
ljmp
inc
sbb
idivl
mov
shrb
fldcw
decb
or
and
fiaddl
and
aad
and
aam
ja
fildll
cmp
mov
or
loop
mov
dec
cmp
or
push
mov
xlat
push
lea
adc
not
pushl
inc
or
inc
dec
jb
arpl
popa
add
mov
adc
lcall
push
or
aad
stc
adc
mov
repz
rclb
popa
in
hlt
gs
arpl
movsb
rcll
shl
xchg
dec
lret
sub
xorb
enter
pop
ja
mov
subb
mov
add
in
daa
push
jns
ffree
and
push
insb
pop
repnz
pop
inc
cmp
stos
adc
mov
push
sbbb
sbb
add
ljmp
adcb
movsb
fiadds
jno
push
fwait
bound
outsb
lret
out
add
or
pusha
sub
sahf
mov
aas
xchg
and
cmpb
cmp
lea
fldenv
repnz
add
movsl
rorb
xchg
pop
xor
flds
xor
xchg
rcr
push
mov
and
int3
sbb
sbb
sbb
pop
jne
and
hlt
mov
arpl
call
add
push
adc
fstpl
movsb
xlat
notl
sbb
xor
add
cmp
call
aaa
dec
adc
mov
push
mov
movsb
add
mov
fadd
outsb
int3
pop
in
daa
jo
and
jmp
add
cltd
ret
sbb
sarl
jp
insb
and
js
mov
jecxz
sub
pop
ja
adc
shrl
fs
push
adc
or
adc
jle
jno
lods
pop
dec
inc
ds
pop
loopne
mov
fisttpl
sbbl
push
xrelease
mov
ret
dec
scas
inc
test
mov
adc
mov
das
pop
sbb
fsubr
stos
push
jo
inc
cmp
mov
mov
rolb
fucomi
inc
mov
mov
aad
into
aas
xor
jp
mov
cmp
enter
sub
in
shr
cmpsl
inc
xlat
lea
jbe
pop
flds
std
int
mov
push
out
into
add
pop
dec
lcall
lret
push
dec
jne
mov
xchg
nop
mov
jbe
aam
push
mov
or
mov
mov
filds
mov
xchg
jnp
ret
ds
cmp
pop
xchg
inc
movsb
mov
rcrb
insl
sbb
dec
mov
mov
dec
enter
gs
cltd
loopne
sbb
lods
mov
mov
lret
imul
in
ds
sbb
cld
cmp
jle
arpl
mov
loope
into
sbbb
mov
dec
xlat
jbe
jno
xor
mov
sahf
mov
movsb
lahf
ja
cmp
dec
xchg
dec
xchg
rorb
xchg
mov
sti
xchg
cmpsb
inc
xlat
cmp
push
push
stos
inc
mov
pop
repz
jnp
jg
iret
or
gs
and
icebp
fld
cmp
icebp
pop
mov
fwait
loope
sbb
jnp
pop
lea
addr16
bound
jle
mov
add
jne
shrl
mov
pop
jb
pop
or
xchg
mov
adc
ja
roll
out
test
mov
shll
gs
stc
mov
dec
mov
imul
push
dec
inc
popa
movsl
lock
ret
cmpl
out
loopne
pop
mov
pop
sbb
subl
and
sahf
cld
adc
and
sbb
loop
add
pop
xlat
jb
inc
loope
fisubl
lahf
xor
lahf
and
push
xchg
inc
push
mov
leave
cmpl
add
push
jno
mov
sub
loope
andl
lods
jbe
cld
es
nop
adc
inc
mov
movsb
pop
xchg
xor
sub
mov
jle
xor
mov
imul
and
dec
fldl
pop
jg
adc
push
push
sahf
inc
inc
fs
and
mulb
arpl
push
add
adcl
adc
mov
jg
aad
testb
add
xor
es
mov
nop
jle
xchg
push
ss
lahf
cwtl
push
std
imul
dec
inc
fsubrs
push
pop
stos
push
jb
loop
test
pushf
cmp
push
cmp
push
or
push
push
mov
int
mov
xlat
push
sbb
dec
loope
lcall
test
jmp
adc
and
out
push
mov
ret
adc
cld
adc
pop
mov
shrb
mov
or
mov
fistl
scas
push
push
and
les
mov
roll
mov
and
push
jmp
fistpl
push
cmp
xchg
out
adc
std
cmp
inc
cmp
sbb
mov
pop
xlat
cmp
push
jmp
push
call
sub
add
sbb
dec
fmull
fs
add
add
xor
mov
cmp
aaa
sub
faddl
jmp
lcall
or
pop
jle
fsub
push
aam
pop
xchg
cmpsl
adc
mov
sub
jns
out
fxch
ss
pop
mov
stc
inc
pop
jae
pop
pushl
popa
out
into
popa
cmp
xchg
push
ja
int3
pushf
ss
movsb
adc
push
test
repz
ret
mov
or
or
jno
xchg
jnp
jnp
test
mov
sbb
shrl
adc
add
addr16
scas
loope
sti
mov
iret
pop
mov
div
int3
pop
push
mov
int3
jge
into
arpl
mov
outsl
xlat
pop
and
cmpsb
or
jg
mov
dec
adc
adc
jge
outsl
ljmp
sti
ljmp
sbb
imul
mov
adc
xchg
lret
je
sub
lahf
jg
leave
push
adc
inc
mov
aad
pop
cmp
push
jno
dec
cmpl
jecxz
lahf
pop
std
push
mov
push
out
jne
sub
aas
call
jle
jbe
mov
jg
mov
dec
pop
xchg
mov
stos
ror
pusha
outsl
das
xchg
rcr
pushf
cmc
and
fisttps
lock
sbb
mov
out
push
dec
icebp
lret
out
lds
push
xor
xchg
jle
xor
out
fildl
popf
mov
aaa
sbbl
shrl
pop
and
rclb
xor
adcl
stc
mov
ret
scas
rorb
out
ret
add
and
push
mov
pop
ss
mov
jg
mov
sub
insb
mov
add
and
notl
fstpl
enter
lret
jecxz
insb
in
sub
cmc
testl
loopne
sbb
stc
mov
fnstcw
das
inc
mov
test
inc
add
in
stos
dec
adc
mov
dec
add
test
sbb
in
stos
dec
adc
push
cmpsl
scas
shll
cmc
je
mov
mov
xchg
in
add
jb
scas
cmp
stc
into
fucom
lret
or
aad
ret
cmc
not
movsl
or
rclb
xchg
sub
call
stc
jmp
mov
pop
jl
inc
xor
sti
mov
in
and
xchg
cli
mov
fcmovnu
xor
mov
and
stos
fbld
movsl
in
pop
jae
arpl
das
aas
outsb
sbb
mov
jg
insl
sbb
or
xchg
or
into
out
rcll
aam
pop
in
pop
mov
lods
out
lcall
pop
inc
mov
out
jno
pushl
mov
and
xchg
sbb
add
cli
cltd
push
add
stos
or
pop
jo
mov
pop
and
lods
xchg
std
push
arpl
cmp
shr
inc
aaa
adc
dec
shll
push
pop
or
scas
xor
pop
mov
push
cmp
movsb
or
add
pusha
mov
jne
aad
aaa
adc
sub
adc
cli
or
push
push
dec
xor
loop
push
push
push
xchg
test
add
jecxz
sub
ror
xor
dec
mov
push
inc
pop
out
sub
push
dec
imul
frstor
mov
push
jp
ss
jmp
aad
lahf
pop
ljmp
test
pop
test
xor
push
dec
xlat
dec
cmc
inc
cmp
js
xchg
aas
cld
mov
push
mov
mov
adc
dec
mov
insl
cmp
test
pop
pop
mov
mov
mov
pop
out
addr16
dec
scas
cli
test
sub
leave
popa
sub
test
clc
call
push
inc
xlat
pop
inc
mov
and
adc
ds
es
push
addr16
mov
mov
mov
in
nop
sub
adc
ss
add
pop
and
dec
push
dec
jo
loop
insl
and
sbb
inc
lret
xchg
fcoms
lods
sbb
scas
out
sub
rclb
pop
jl
xchg
call
lahf
cmpl
sub
mov
gs
push
or
pop
mov
js
lahf
test
xchg
mov
stos
aad
movsl
fldl
mov
xchg
push
punpckhbw
cmpsl
js
or
jbe
push
lahf
cvtps2pi
jl
and
sbb
adc
scas
insl
loop
pop
inc
lahf
mov
insb
pushf
sub
adc
sbb
jle
xchg
loope
xchg
sarl
in
mov
jl
xchg
mov
dec
and
mov
adc
into
js
xlat
cmp
cmpsl
mov
add
repnz
pop
mov
pop
jno
icebp
dec
into
jl
loop
std
cli
jle
xor
push
push
rsqrtps
mov
mov
lret
pop
sub
mov
or
jne
ds
mov
lea
sahf
in
lea
ss
sbb
mov
or
es
pop
cli
data16
xlat
sbb
or
xchg
xchg
not
scas
outsb
or
jge
arpl
cltd
mov
inc
imul
out
lea
jae
dec
inc
fsubrl
jns
repnz
rcrb
xchg
icebp
shlb
inc
push
sar
cld
pop
inc
popf
jg
out
pop
xchg
mov
jp
daa
in
sbb
clc
pop
loope
dec
outsl
or
add
jecxz
xor
sti
cmc
push
sti
aad
ja
pop
fs
mov
call
mov
in
in
js
scas
outsl
push
fildll
iret
outsl
pop
xor
add
aaa
xor
dec
das
pushf
stos
mul
or
adc
shll
mov
nop
arpl
cmp
mov
jp
push
push
data16
daa
popf
jnp
mov
pop
mov
mov
push
mov
cs
js
popf
adc
sbb
sarb
mov
std
sbb
aas
sar
ret
mov
jns
ret
pop
mov
in
pop
aad
xchg
xchg
aas
or
les
inc
ds
add
lds
clc
mov
jmp
jmp
les
push
inc
je
inc
dec
xor
dec
add
sub
adc
mov
outsl
cmp
nop
jl
mov
push
mov
enter
pop
das
lret
jb
xlat
nop
push
icebp
into
lret
rcll
mov
shrl
outsl
test
adc
stc
adcl
mov
mov
iret
sub
and
loope
add
add
cmp
insb
pop
add
sub
pusha
xchg
shlb
adc
or
enter
jb
mov
sub
icebp
lret
pop
lret
xchg
sub
lock
leave
repz
divb
adc
test
cs
xlat
and
js
jp
and
adc
fucomi
cld
jle
jmp
jb
stos
jns
sub
sub
je
xor
jge
push
cli
xor
mov
movsw
das
dec
jg,pt
aam
je
mov
notb
pop
push
stc
ljmp
xchg
pop
mov
test
cli
mov
sub
mov
das
popf
push
pop
push
jne
or
repnz
or
cli
pop
es
loopne
sbb
insb
jle
cmpsl
lahf
mov
inc
scas
mov
xlat
pop
cmp
repz
sti
lea
jg
fiadds
in
out
jo
popa
mov
lret
lds
jl
repnz
js
cmp
inc
rcr
cmp
or
jle
in
sub
aas
out
negb
out
aas
in
mov
jno
in
leave
cmpsl
popf
ja
mov
or
cmc
cmpsl
js
and
mov
ret
lcall
xchg
jg
andb
pop
sbb
mov
pop
mov
repnz
mov
pop
das
sbb
movl
stc
sub
xchg
sbb
cld
mov
fs
lea
sti
fnsave
lds
pop
lea
push
out
repnz
in
mov
mov
cmpsl
fistpl
push
jmp
and
call
fildll
jmp
or
jno
dec
fisttpl
scas
clc
aam
scas
cwtl
pop
repnz
jbe
clc
ljmp
out
jg
ljmp
imul
xlat
out
in
fidivl
inc
fwait
iret
sub
jg
fmuls
aam
push
mov
jle
pop
out
mov
mov
int3
jnp
in
inc
fstl
jnp
cmpsl
jbe
cli
xchg
mov
aas
push
enter
out
xor
fimull
ds
jg
dec
fldt
arpl
pop
sar
shl
gs
xchg
lahf
cli
ficompl
push
ficoms
pop
mov
orb
xor
ficoms
js
aad
imul
hlt
stos
add
shr
jnp
mov
xchg
push
ds
mov
mov
xchg
lods
push
dec
aas
jmp
fistpl
jno
ret
mov
insl
repnz
adc
jp
out
idivl
cmp
pop
sti
loopne
lea
fnsave
cli
mov
push
cli
pop
push
imul
fnstcw
mov
pop
mov
jle
repnz
ss
roll
frstor
mov
cld
stc
enter
jp
cld
add
jle
add
sbb
les
dec
cmp
call
and
out
mov
xor
xchg
dec
sahf
jge
fwait
xor
movsl
ljmp
stos
stc
int3
cli
dec
dec
jmp
push
out
mov
je
add
xchg
aas
mov
iret
pop
mov
xchg
repz
xlat
mov
lods
clc
inc
mov
sti
fstpt
scas
cli
into
movsb
cmp
mov
js
pop
pop
lods
fnstenv
mov
stc
sbb
cmp
sub
jns
lahf
imul
imul
mov
push
ds
push
mov
push
xchg
add
xor
xor
sub
sbb
das
sbb
sub
mov
jmp
pusha
cwtl
lds
mov
mov
or
or
sbb
test
test
ret
add
popf
or
jge
adc
push
jno
call
rclb
mov
imul
mov
pop
pushf
jns
jecxz
fistpl
fsubrp
cmp
pop
arpl
fimuls
push
mov
or
das
mov
into
sub
mov
sub
mov
pop
scas
dec
rcrl
sub
cmpsb
and
cmpsb
in
pop
mov
mov
sub
jno
test
jno
in
lea
into
pop
aam
xorl
jbe
adc
or
bound
fwait
mov
mov
fwait
repnz
lcall
mov
cmpl
fistpl
insl
mov
sbb
sarl
mov
jno
xchg
inc
cmp
leave
sub
int3
or
cltd
aaa
cmp
mov
cltd
fstpt
inc
das
scas
hlt
aam
insb
out
pop
popf
dec
das
mov
cmp
dec
mov
pop
jno
roll
repnz
jnp
or
push
js
sbbb
int
jg
lock
mov
out
js
xchg
cs
jo
test
dec
mov
jp
arpl
pop
sbb
ret
into
ds
mov
mov
xchg
ljmp
rol
pushf
cmp
ret
bswap
fnsave
outsl
mov
aad
jge
insl
out
loopne
subl
cmp
fmull
pushf
clc
jecxz
inc
dec
cmp
cmp
inc
lret
push
cld
idivl
jecxz
sti
xlat
sbb
mov
push
xlat
pop
aam
sub
cmp
jmp
jmp
mov
xlat
outsl
outsb
mov
jg
xlat
stos
adc
std
cmc
iret
xchg
aas
sbb
pop
ja
stos
iret
mov
mov
dec
mov
dec
xor
rcll
pop
lock
fcoml
insl
vrcpss
das
int
jp
aaa
jg,pt
sub
das
inc
pop
cmp
cmp
jl
roll
int
jbe
test
sub
sub
jbe
ffree
xchg
push
sbb
ss
out
lods
iret
mov
pushf
sbb
jg
sub
mov
aaa
fidivs
lret
jle
stos
cwtl
mov
cmpsb
cmp
fdivr
cmc
mull
xchg
jg
mov
fstps
aas
pop
outsl
hlt
cmp
iret
sahf
std
lock
into
mov
ds
imul
popa
shlb
loop
lods
daa
scas
cwtl
xor
out
decb
or
js
cmp
arpl
jb
lods
mov
fstpl
ret
lahf
mov
aaa
mov
mov
aad
aam
out
jle
test
jle
in
out
pop
jp
stos
daa
jbe
pop
cli
cmp
aad
dec
sahf
aad
xchg
or
sti
iret
add
in
das
mov
pushl
jnp
loop
ss
xchg
int3
adc
mov
sahf
mov
push
inc
out
jns
inc
jnp
lds
dec
jnp
mov
inc
addr16
mov
js
pushf
adc
dec
notb
jmp
push
sbb
movsl
and
cs
cmpsl
sbb
sub
out
aad
decl
stc
mov
and
inc
fistps
adcb
push
adc
sub
mov
adc
iret
push
lret
incb
or
dec
rclb
sbb
aad
mov
mov
push
dec
or
xor
xchg
mov
sub
shrl
mov
mov
icebp
mov
lea
fwait
mov
dec
loope
jp
imul
jo
mov
aam
xchg
sub
push
cmp
mov
shll
sub
loop
sbb
xor
dec
mov
dec
in
mov
scas
insb
mov
jns
inc
popf
scas
notb
xchg
mov
mov
adc
fimuls
leave
cmc
aas
pusha
outsl
push
out
push
lods
or
out
and
jg
and
mov
jecxz
roll
fisttpl
movsl
add
iret
std
mov
scas
sub
add
popf
flds
push
xchg
pop
int
insl
mov
sahf
notb
sbbl
sub
xor
scas
mov
sbb
sub
daa
std
mov
jns
sub
add
jno
cmpsb
testb
adc
cmp
xchg
lcall
ficompl
jbe
jp
xor
mov
push
xor
sub
mov
das
sarl
fs
loopne
loopne
data16
sub
mov
andl
or
in
divl
dec
js
aad
sub
pop
dec
sahf
add
mov
pop
bound
ja
xor
ja
push
aad
inc
out
pop
sbb
rol
dec
sbb
xchg
and
cmp
pop
sar
add
mov
in
fimull
ret
sub
data16
xchg
ljmp
cmp
dec
jnp
dec
dec
sbb
jge
push
jmp
cmpsl
ljmp
sbb
inc
lods
or
clc
cmp
xchg
pop
stos
cmp
mov
pop
dec
mov
iret
push
jecxz
mov
xchg
jno
inc
pop
test
pop
aas
pop
xlat
push
dec
pop
cli
icebp
mov
movsl
pop
das
sahf
cmp
pop
dec
inc
jle,pt
cmp
loop
jg
xlat
movsb
repz
adc
jns
and
addr16
dec
adc
sti
pop
mov
hlt
inc
pop
or
add
dec
fmull
xchg
cmp
ja
in
out
mov
mov
and
ss
in
add
push
scas
repz
sub
push
mov
scas
insb
pop
dec
mov
jae
adcl
sbb
xchg
pop
xor
in
inc
test
xor
in
aas
xchg
fwait
push
mov
jg
push
ss
aaa
inc
arpl
out
loopne
sbb
imul
push
flds
cmp
mov
sbb
push
mov
scas
cmpsb
or
jb
push
das
cmpb
jb
pop
sub
adc
and
roll
cmc
jg
xchg
jmp
cmc
pop
or
xor
add
shll
cld
jg
fistpl
adcb
and
sahf
sti
sub
scas
decl
pusha
sub
pop
push
dec
dec
js
pop
mov
jp
mov
dec
dec
push
sbbl
sbb
insb
inc
lea
pop
mov
cmp
mov
std
sbb
push
test
and
xlat
imul
pop
adc
bound
popf
mov
in
imul
push
lret
das
outsb
arpl
sbb
xchg
std
cltd
pop
and
cmpsb
bound
pop
cmp
mov
xor
add
mov
jno
inc
xchg
leave
aas
jmp
stos
mov
daa
gs
push
mov
out
ja
mov
push
dec
sbb
pushf
cmpsl
test
mov
idivl
ret
jne
jnp
insb
mov
das
mov
and
jl
out
lods
scas
xor
add
stos
cmp
push
scas
xchg
pop
mov
insb
test
jb
imul
xchg
aam
mov
aaa
push
pop
mov
out
push
ret
mov
pop
dec
dec
add
bound
movsb
mov
jmp
cld
outsl
dec
dec
inc
rcll
sub
adc
mov
mov
and
ljmp
out
bound
cli
nop
fildl
in
and
mov
pop
pusha
mov
mov
fisttps
sub
insl
sbb
sbb
add
lods
in
xchg
sti
sbb
subb
dec
inc
lock
xchg
mov
sbb
lock
xor
popf
xchg
cmc
loop
jb
mov
imul
lods
ss
lcall
inc
lcall
or
loopne
mov
je
std
in
outsb
scas
nop
dec
adc
xchg
jecxz
sbb
lahf
push
mov
xchg
shld
sbb
cltd
es
sbb
sahf
pusha
ljmp
jne
subl
sahf
test
int
xorl
and
xor
and
and
fiaddl
nop
sbb
andl
gs
or
cmpsb
inc
scas
sub
sbbl
popf
pop
xchg
ja
push
out
aaa
sbb
lock
xor
inc
sub
add
or
popf
push
sti
in
xor
xor
xchg
lret
push
ret
lret
push
jns
xor
enter
fsubl
ss
es
cmpl
paddusb
cmp
outsb
push
lock
mov
add
dec
xchg
cmp
xchg
mov
or
lret
mov
and
mov
push
es
out
insb
mov
mov
call
outsb
jo
fwait
push
jmp
fdivr
mov
or
push
xor
mov
mov
jg
gs
lods
ds
js
xchg
pusha
adc
xor
push
push
xchg
push
iret
mov
adc
popf
scas
rcll
or
mov
shrb
jne
jbe
test
jp
mov
xchg
lahf
dec
sub
dec
pop
addr16
mov
lret
iret
jb
or
int
notb
sbb
xchg
lock
mov
xchg
lock
aaa
icebp
mov
dec
push
adc
sbb
movsl
loopne
cmp
cmp
movl
add
aas
mov
xor
pop
push
cmp
mov
ljmp
leave
rorl
std
into
sbb
lret
mov
fistpll
pushf
mov
popf
jle
pop
xor
and
cmc
scas
push
shll
jecxz
push
sahf
inc
push
nop
lcall
fdivrs
lret
adc
xor
pop
xor
xchg
sub
pusha
mov
or
data16
loopne
mov
pop
xchg
xor
jle
jo
shlb
xchg
js
negl
mov
mov
mov
mov
pop
and
test
xchg
pop
fdiv
outsb
cltd
push
fwait
sbb
pusha
fwait
mov
adc
sbb
incl
push
aas
pusha
mov
scas
repz
and
scas
pop
fcomp
inc
mov
leave
lcall
test
fs
subl
xchg
in
les
jns
xlat
xor
jne
sub
sahf
xor
lret
mov
movsl
cltd
sti
add
lret
xchg
ljmp
sti
fisubrl
out
retw
fistl
daa
mov
aas
cmp
iret
stc
and
rcrl
mov
jp
insb
aaa
loope
push
xor
out
lcall
mov
testl
lds
sbb
jecxz
aad
pop
scas
inc
inc
mov
and
lret
and
aam
je
xor
or
lret
cmp
mov
mov
push
dec
mov
in
cmp
fldcw
loope
adcl
sbb
dec
scas
sub
aas
aad
call
adc
sti
mov
push
or
add
popa
add
mov
scas
xor
or
pop
insl
cmp
jae
dec
jl
mov
rcr
into
sub
insb
push
ret
cli
arpl
sarb
cmp
mov
lret
out
mov
pop
loop
fstps
ret
and
outsb
in
test
mov
push
out
aam
add
jnp
sti
xchg
lods
jl
aaa
push
or
int
popf
popa
and
add
test
xorl
ljmp
es
jecxz
xor
adc
inc
adc
jae
dec
xchg
pop
icebp
add
pusha
push
xorb
out
pushl
inc
out
mov
into
in
mov
shr
cmp
add
push
xorb
dec
sbb
mov
push
lcall
add
leave
outsb
cmp
test
and
repz
xchg
dec
hlt
imul
cmp
iret
das
sbb
pop
hlt
or
lods
or
sbb
add
scas
cmp
pop
dec
std
jb
fxam
movsb
cli
je
in
in
hlt
or
sub
sti
and
or
adc
std
cmp
fcmovne
jp
or
sbb
gs
push
push
int3
pop
and
lods
lcall
xchg
adc
in
push
pop
inc
push
fildl
addr16
mov
inc
out
sub
push
sar
xchg
fwait
dec
int3
sub
xchg
mov
and
pop
ds
or
pop
fsubs
rcll
dec
inc
push
mov
dec
jbe,pn
jl
and
andl
iret
imul
cmpsb
mov
insl
addr16
nop
sbb
stos
or
adc
int3
rorl
sbb
mov
hlt
mov
lret
in
pop
lods
mov
out
js
mov
jns
jae
and
divl
mov
das
jp
cmp
mov
mov
lock
mov
cmpsl
insl
xchg
out
daa
fs
jae
pop
mov
inc
fildl
sbb
push
lcall
mov
or
lods
jmp
out
scas
cmpsb
in
lret
mov
mov
cltd
lahf
lods
jl
xlat
in
lock
cld
jnp
in
mov
push
dec
adc
imul
push
leave
xor
push
ret
enter
rolb
or
inc
jns
out
mov
xchg
mov
popf
test
popf
movsb
outsl
in
mov
lods
cmp
out
test
loope
xor
xor
inc
cmp
push
mov
repz
xor
and
js
into
hlt
mov
ffree
sbb
mov
movsl
cmp
insb
xor
in
pop
sbb
sarl
inc
lret
lahf
out
xor
dec
addr16
aaa
cmp
cmp
in
loope
xchg
or
call
daa
fwait
cmp
mov
jne
cltd
clc
shlb
jno
fcoms
push
xchg
dec
sbb
lods
insb
aam
lahf
ss
xor
adc
xchg
shll
out
out
pop
ljmp
dec
pop
mov
jg
or
pop
rorl
shlb
pusha
sub
adcl
test
mov
out
mov
imul
sub
rcl
mov
lods
dec
and
fbld
xor
sbb
mov
jae
cmp
add
ljmp
xchg
rcl
jl
mov
lret
nop
xor
int
inc
xchg
mov
lret
movsl
aam
mov
xchg
or
mov
dec
leave
push
flds
pop
test
enter
xor
fucomip
shl
sti
xlat
jmp
mov
pushf
xor
cltd
xor
pushf
cmp
mov
mov
imul
cmp
jbe
mov
lret
xchg
jne
imul
mov
push
jmp
mov
and
add
dec
aad
or
inc
adc
test
js
std
out
xor
subb
sbb
mov
and
inc
rorl
test
cmp
sub
jae
dec
rolb
rolb
push
and
mov
stos
rcrb
sbb
dec
pushl
lea
dec
mov
mov
add
push
jp
mov
mov
push
jg
in
in
or
add
add
in
sub
inc
int
sub
mov
pushf
aad
daa
pop
lret
sbb
mov
mov
mov
movsb
repz
aam
cmp
es
xor
fs
nop
push
xor
jl
push
rol
sub
xchg
pop
out
inc
jl
sbb
ret
cmp
xchg
aas
or
popf
adc
lds
les
mov
nop
or
pop
xor
jno
inc
arpl
dec
daa
jns
mov
lret
pop
ss
mov
out
cmpsl
cmp
add
mov
ss
and
add
cmpsl
in
in
inc
jae
or
adc
inc
adc
daa
jle
pop
and
push
bound
lcall
insb
mov
xchg
add
or
pop
mov
xchg
test
xchg
dec
clc
sbb
dec
lods
fldcw
andb
jg
mov
les
cmpb
lock
mov
shll
mov
mov
push
shll
push
mov
icebp
and
sbb
int
inc
or
jmp
sub
dec
test
mov
dec
pop
mov
pop
or
inc
xchg
pop
add
pop
sub
sub
mov
or
and
popf
lods
cmp
and
imul
mov
pop
incb
push
adc
add
xchg
nop
push
shlb
jg
cmc
add
ja
and
jp
jb
lea
add
mov
sub
sti
dec
lret
rorb
jge
jle
aaa
ret
fldl
clc
or
mov
sub
push
loope
or
and
test
mov
test
punpcklwd
pop
add
push
shl
inc
sbbl
lods
mov
popf
aas
mov
cmp
cltd
jmp
lock
add
mov
aaa
and
loop
shrl
sbbb
push
loop
das
ljmp
insb
fiaddl
adc
kmovd
push
adc
or
and
jnp
or
js
loopne
jp
sti
call
imul
xorb
xchg
or
std
xor
fxch
jl
lahf
sub
mov
jbe
add
stos
js
mov
and
bound
nop
bound
notb
in
fistps
mov
cmp
mov
xchg
data16
testb
lock
clc
inc
cmp
test
loope
sub
loop
cmp
rorl
push
imull
inc
cmp
push
outsl
push
cmpsl
daa
ja
jb
cmpb
inc
movsl
clc
and
movb
and
or
pop
stos
loope
lea
cli
outsb
mov
sarl
out
pushaw
stc
adc
ss
xor
add
add
adc
cld
pop
mov
faddl
lods
pop
jns
mov
rcrb
pushf
push
jno
jb
call
or
pop
and
fidivrs
scas
or
repz
and
xchg
sub
inc
in
call
and
gs
dec
jl
sub
mov
pushf
fwait
ss
cwtl
into
insb
mov
adc
lea
negb
sahf
adcb
or
in
dec
xor
ss
inc
sub
jg
fistpll
push
or
pusha
cmp
mov
lds
cli
cmpsl
setg
ret
cmp
mov
push
adc
xchg
lret
xchg
mov
test
sbb
popf
dec
or
cld
in
das
mov
cmc
cltd
mov
sti
out
xor
mov
or
je
call
pop
iret
mov
leave
lds
dec
mov
push
xchg
mov
push
push
and
xor
xor
xchg
adc
mov
or
lds
cmpsb
data16
leave
add
fcomp
repz
outsb
sbb
or
sbb
fsubs
xlat
xchg
movsl
fisttpl
jecxz
sub
movsl
xor
mov
dec
mov
ficompl
outsl
xchg
lcall
jge
or
ljmp
mov
pop
ss
xchg
imul
cmp
stos
enter
loopne
mov
fmull
mov
mov
xor
sbb
or
xchg
mov
or
push
pop
inc
sub
outsl
mov
ret
dec
fimuls
rcl
loop
push
mov
and
adc
or
loope
dec
js
adc
push
dec
rcrb
cs
add
fs
pop
mov
aaa
popa
or
call
or
daa
xor
cmpsb
and
jg
push
push
pop
aad
ja
sbb
or
mov
adc
pop
aaa
xor
xchg
out
aaa
popa
adc
pop
mov
subl
mov
fistpll
int
loope
push
xchg
aas
fsubrl
dec
ljmp
mov
cmpsb
jbe
imul
lret
mov
inc
add
jg
fdivrs
aad
pop
xchg
fcomps
lods
and
dec
xchg
add
push
sbb
testb
dec
add
sahf
cmp
leave
jns
pop
int
insl
push
ret
mov
das
xchg
pop
lret
or
sbbb
in
sub
fs
mov
decb
stos
mov
repnz
jecxz
dec
insl
inc
movsl
mov
push
in
test
stc
or
xchg
jle
or
cli
inc
and
mov
cs
adc
pop
hlt
pop
dec
push
jno
adc
lds
iret
ja
or
fdivr
pusha
lock
clc
xchg
mov
into
in
dec
rorl
cmp
or
outsl
shrl
imul
add
data16
pop
pop
push
dec
sbbb
lods
imul
sub
fsubp
cld
sub
repz
mov
popf
call
fwait
jne
cmc
aas
pop
ret
dec
jp
sbb
or
fidivrl
data16
fisubrl
lea
adc
bound
cmp
sahf
sahf
pop
mov
fnsave
lds
mov
jnp
movsl
mov
dec
subb
or
imul
lcall
mov
lcall
jp
push
xchg
fisubrs
jg
iret
jo
lahf
mov
pop
add
pop
xchg
mov
xchg
fwait
cwtl
and
fisubl
add
cmp
mov
inc
or
das
or
cmpsl
mov
movsl
repz
or
dec
repz
test
lock
data16
nop
bound
mov
mov
or
addl
xor
xor
and
add
mov
push
adc
and
push
insl
sub
nop
mov
sub
cwtl
mov
dec
inc
dec
cmp
cld
lock
fists
push
push
xlat
loopne
outsb
aas
test
mov
xchg
out
out
ss
shl
jns
popa
inc
ficompl
mov
mov
cmpb
bound
lahf
data16
inc
mov
out
mov
gs
into
add
inc
xor
sbb
addr16
adc
stc
push
sub
push
cmpsl
jle
mov
scas
xor
push
out
mov
dec
push
pop
addb
and
gs
hlt
aas
insl
jnp
lahf
jns
das
pop
lahf
icebp
jl
inc
sbb
push
fwait
les
enter
sbb
cmp
xchg
sub
dec
mov
or
mov
stos
sub
fldcw
loop
inc
cmp
xor
fstpl
mov
add
push
inc
adc
jno
sbb
stos
sbb
loopne
xor
mov
dec
cmpl
arpl
mov
outsb
and
mov
lret
ret
xchg
fisttpll
mov
sbb
mov
jno
cli
xchg
cld
out
in
push
icebp
out
cmpsl
push
subb
bound
imul
es
dec
sub
mov
xchg
movsb
add
mov
cmp
call
jno
or
and
inc
pop
lock
inc
mov
or
mov
mov
inc
inc
mov
sbb
and
xchg
push
and
mov
movsb
xchg
jb
pop
test
jge
test
adc
mov
jmp
in
xor
aas
fwait
and
or
adc
sbb
add
test
movsl
pop
pop
lret
pop
add
enter
cmp
loope
xor
and
andb
std
or
and
dec
sub
rcll
adc
jge
add
xor
bound
mov
sub
scas
xchg
xchg
mov
fimuls
call
cmp
xchg
xchg
je
leave
xchg
out
testb
es
addl
adc
mov
adc
mov
push
pop
popl
push
mov
ror
ja
xor
dec
mov
sbb
mov
sub
inc
jge
sub
js
aas
pop
js
mov
push
ret
push
mov
lcall
scas
int
mov
aam
fcmovu
or
sub
jp
cmpsb
fbld
shlb
cmp
pop
faddl
lret
jb
scas
int3
push
dec
test
or
or
fmuls
mov
int
push
cwtl
pop
cwtl
rorb
jmp
xchg
and
dec
xor
test
addl
add
int3
incl
or
lods
push
cltd
or
call
sbb
pusha
adc
das
dec
jecxz
subl
add
dec
mov
adc
test
adc
outsb
inc
push
cwtl
push
sbb
or
test
and
mov
mov
ret
movsb
pop
adc
inc
and
lock
popf
sbb
pop
push
dec
or
test
sub
inc
dec
inc
jp
cmp
popa
daa
mov
add
sub
sbb
inc
popa
cmp
xor
mov
rorb
es
add
popa
push
push
and
and
jns
adc
mov
adc
add
jb
lock
dec
gs
sahf
orb
pop
jp
adcl
jns
push
xor
lock
test
sub
cmp
les
shrl
sub
add
cmc
jns
adc
shll
pop
dec
jle
sbb
push
lock
cmp
add
movsb
add
cmp
push
bnd
dec
test
pop
pusha
imul
popa
jb
popf
lods
subl
add
sti
xor
push
or
push
push
dec
jne
sbb
lret
xor
add
inc
lock
mov
pop
in
insl
iret
sbb
dec
add
mov
cli
add
scas
cmp
aad
jne
repnz
rcrl
or
inc
movsb
jecxz
test
out
fiaddl
mov
xlat
scas
insb
int3
jl
mov
je
flds
call
lahf
lret
mov
push
loope
cmp
popa
cmpsb
dec
fistps
mov
mov
push
and
mov
lcall
and
imul
loope
lcall
psadbw
ljmp
rcll
push
inc
cmp
enter
lods
aam
lret
scas
loop
sbb
or
hlt
es
inc
insb
loope
jmp
mov
andl
fiadds
adc
cmp
negl
ljmp
mov
push
jbe
fs
push
clc
xchg
mov
ss
and
cli
fnstenv
cmpsl
mov
pop
shr
push
xor
inc
int
ffree
push
aam
call
insb
xor
xchg
cmc
and
fsubs
push
cwtl
inc
xchg
insb
sub
pop
jo
jl
mov
mov
cmovl
and
xchg
adc
std
cmp
and
sub
nop
inc
movsl
iret
push
pop
dec
imul
fsubrl
ffreep
xlat
shl
pop
add
sti
mov
xchg
ja
xor
out
sub
mov
xor
cmp
jle
push
cs
adc
and
push
and
cmp
es
sbb
cmp
xchg
js
in
lret
xchg
or
dec
bound
mov
adc
icebp
mov
jl
cmp
in
fs
inc
mov
pop
arpl
push
sub
psrlw
clc
push
and
jb
mov
adc
pusha
sahf
sbb
enter
add
pop
xor
push
std
add
inc
pusha
pop
xchg
cmp
xlat
xor
jnp
and
inc
jae
adc
cmp
insb
loopne
pop
cmpl
adc
xchg
mov
add
mov
int3
ret
cltd
xchg
push
xor
addl
dec
mov
hlt
inc
js
pop
sbb
shll
push
xor
sbb
popf
jae
jg
nop
adc
in
sbb
cmp
movsb
add
lea
movsb
and
xor
leave
fwait
mov
fdivrl
mov
mov
mov
mov
xchg
outsl
pop
test
sbb
add
ret
adc
orl
xor
dec
and
jo
dec
es
bound
adc
repz
mov
pop
and
std
push
xlat
lret
or
cmp
and
xor
sbb
test
imul
fcomps
jne
pop
js
fimull
movsb
fiadds
scas
ret
addl
mov
dec
pop
push
adc
andb
sbb
popa
mov
add
inc
ljmp
and
test
enter
or
lea
inc
hlt
les
or
or
xchg
int3
pop
add
push
imul
sbb
gs
into
ret
sarb
add
and
movsl
insb
adc
xor
mov
fcomps
add
push
push
lds
push
cmp
sbb
sahf
je
jbe
inc
mov
out
inc
icebp
dec
enter
cmp
mov
in
loop
xlat
add
cs
js
in
cmp
xchg
inc
aas
mov
sub
sub
jl
icebp
push
shlb
push
popa
inc
insb
shll
cmpsl
in
jo
test
ret
cmp
jmp
lret
dec
add
std
sub
add
cmp
dec
jo
mov
push
rcrl
mov
fldl
pop
sub
in
mov
les
jg
dec
pop
and
and
or
aaa
dec
lea
icebp
and
mov
adc
jno
cli
xor
cmp
rcll
jge
sub
rcr
adc
push
add
push
and
inc
jl
dec
pusha
dec
jbe
dec
bound
cmp
dec
adc
sbb
mov
xchg
ret
mov
mov
call
lock
and
in
sub
pop
dec
movsl
push
int3
xchg
orb
push
mov
popa
dec
mov
inc
dec
sbb
add
mov
cld
sbb
xor
jne
mov
dec
arpl
add
shlb
ja
adc
pusha
pop
test
shr
nop
mov
sub
fcmovnbe
enter
fildl
cmp
adc
in
xchg
xlat
repz
mov
movl
or
sbb
dec
push
mov
cmpsl
inc
lret
mov
mov
cs
cmc
cmp
je
xchg
sub
sub
dec
imul
push
mov
dec
mov
xchg
dec
xchg
fmuls
xchg
pop
add
and
mov
jae
das
xor
notb
mov
sub
push
lahf
arpl
xchg
sbb
shrb
mov
push
cmp
call
sub
fdivs
nop
jno
mov
and
pushf
dec
fwait
mov
cmp
int3
add
xor
sbb
aam
pop
in
adc
inc
mov
int
jae
fidivl
addl
mov
pushf
aam
scas
call
add
movsl
xchg
hlt
push
mov
sbb
movsl
xchg
lret
adc
mov
aas
fiadds
cs
xor
les
popa
add
daa
cmp
rcr
aaa
testb
push
leave
dec
xchg
or
pusha
mov
mov
dec
es
rolb
or
push
mov
and
add
test
jge
pop
out
adc
outsb
lods
push
test
in
jns
out
xchg
inc
call
fdivl
ret
xchg
push
fwait
mov
jp
insb
xor
dec
xlat
daa
outsb
ret
outsl
addl
push
sbbl
adc
jmp
mov
insb
adc
and
push
leave
pop
fstl
loop
adc
pop
inc
xchg
push
cld
adc
mov
push
hlt
jmp
jecxz
jbe
push
xor
jle
in
ds
sbb
loopne
cmp
adc
adcb
push
lods
mov
jecxz
popa
xor
mov
push
jp
leave
or
shll
mov
pop
fldt
push
inc
pop
mov
sbb
mov
push
imul
cli
popa
or
or
sub
and
cmp
mov
push
cs
inc
inc
mov
lea
inc
and
pushf
cwtl
test
iret
and
lods
test
push
fdivs
dec
dec
pop
lods
adc
push
icebp
mov
add
loope
daa
sub
add
xchg
cwtl
xchg
rcl
scas
cmc
fistpl
imul
enter
sub
test
push
inc
test
sbb
xor
test
lcall
je
mov
or
adc
loopne
or
jnp
dec
nop
sub
and
sub
adc
sbb
or
cmp
xchg
out
or
sbb
xchg
pop
and
dec
in
rolb
sbb
dec
adcl
cli
jo
xchg
or
test
adcl
cli
pop
pop
xchg
and
imul
pop
imul
dec
and
data16
jp
dec
xor
std
dec
adc
xor
and
push
push
push
jnp
add
mov
mov
movsb
in
jb
pop
push
dec
ret
jae
jbe
push
sahf
je
out
jl,pt
add
test
adc
push
sarl
call
lds
and
xchg
rclb
cltd
mov
leave
fldl
sahf
imul
sbb
sbb
bound
adc
jbe
push
data16
mov
ds
mov
jg
out
mov
pop
cwtl
aam
cmp
leave
leave
fstpt
add
in
nop
or
jno
stc
push
and
andb
xchg
fistpl
bound
inc
push
dec
cltd
test
out
mov
cs
popf
movsl
out
in
pop
mov
sarb
xchg
mov
mov
popf
test
test
add
add
push
loopne
jecxz
mov
iret
mov
and
into
imul
sbb
fs
push
add
cmpl
cmp
daa
or
mov
out
dec
cmp
shlb
sbb
lahf
ret
pop
jae
movsb
pop
int3
iret
sbb
add
push
lret
and
pop
or
dec
mov
add
aas
imul
fisttpll
es
pop
pusha
ljmp
rcll
pop
out
cmc
jno
cmpsl
pusha
pop
data16
jmp
loop
or
dec
mov
or
out
sti
loop
sbb
adc
loopne
adc
nop
sbb
test
jp
das
test
lock
xor
leave
rcrl
mov
daa
adc
jecxz
and
lcall
jp
mov
jg
sub
fdivrl
rclb
scas
xchg
cwtl
xor
add
xchg
hlt
or
and
jge
mov
mov
les
mov
sbb
xchg
pusha
dec
inc
icebp
insl
jnp
or
mov
test
fildll
sub
inc
mov
xchg
xchg
cmp
mov
or
sbb
ljmp
and
inc
stos
fs
in
adc
cmp
dec
fnstenv
jae
mov
adc
movl
add
daa
je
inc
push
xor
push
xor
or
and
xchg
inc
sbb
cmp
mov
movsb
and
pop
and
inc
sbb
and
lcall
and
iret
sbb
xchg
push
or
nop
mov
pop
dec
gs
roll
dec
out
clc
adcb
cmp
sarl
mov
movsb
inc
pop
or
sub
jnp
mov
addr16
push
rorl
inc
dec
push
jae
add
das
pop
mov
add
aam
mov
ljmp
out
jo
rorl
cmp
in
sahf
inc
cmp
and
xor
xor
jno
sahf
mov
mov
mov
js
mov
cli
movsl
les
adc
lcall
xchg
push
jno
and
or
in
js
lcall
or
push
jbe
lcall
push
mov
jecxz
jbe
hlt
orl
and
pusha
lock
loop
in
scas
and
push
mov
mov
into
in
aas
mov
testb
enter
aas
mov
popa
pusha
scas
mov
or
inc
inc
cmp
pop
leave
inc
mov
xchg
inc
and
mov
and
jg
adc
movsb
mov
mov
cltd
cmp
inc
sub
cmpsb
or
mov
imul
or
int3
cmpsb
inc
cmp
sbb
data16
rol
mov
pushl
frstor
sarl
xlat
adc
outsl
pop
jo
mov
or
adc
push
mov
push
test
cmp
clc
xor
rcr
int3
mov
test
xchg
adcl
push
cwtl
jle
adc
movsl
ret
sub
mov
ss
loopne
add
mov
test
inc
jl
push
xor
fsubrp
and
stos
addl
test
mov
inc
pop
inc
insl
adc
and
cmpsl
pop
ljmp
insb
icebp
or
adc
pop
lods
xchg
mov
cmp
mov
loop
push
xlat
dec
scas
filds
sub
pop
xchg
jo
nop
in
or
xor
jg
stc
pop
data16
rcr
dec
dec
out
push
test
aad
inc
pop
push
out
lock
cs
and
sub
popa
roll
lods
and
cmp
mov
cmpsl
adc
adc
arpl
lret
and
fwait
push
outsl
test
jno
addb
mov
andl
fidivs
pop
out
mov
xchg
outsb
lcall
sub
pop
arpl
sbb
lret
inc
ficoms
repnz
add
test
cmp
sbb
mov
ds
inc
imul
inc
mov
stos
test
xchg
mov
les
xchg
addr16
sub
mov
insb
sub
and
test
ficomps
fmuls
add
and
nop
adc
adc
in
adc
cmc
adc
add
sahf
pop
sub
add
pop
lock
notl
loopne
sub
sbb
and
test
out
adc
sub
leave
jmp
push
mov
adc
ds
fimull
inc
and
jmp
loopne
cs
pusha
mov
loope
loop
xor
insl
dec
nop
lods
mov
fdiv
mov
xor
mov
jns
push
enter
mov
push
cwtl
rorb
push
push
sub
repz
pop
sti
add
pusha
out
je
mov
inc
add
arpl
adc
jl
test
mov
cld
das
pop
dec
inc
into
mov
cmp
into
inc
cmp
and
mov
inc
mov
inc
es
or
sub
add
jge
xchg
inc
pop
push
bound
add
push
and
add
adc
push
cmp
test
inc
loop
push
jmp
dec
adc
cld
test
fdivrl
or
fisttpl
cmc
scas
enter
cmp
test
lock
in
xlat
sahf
notb
mov
xor
mov
xchg
lock
nop
mov
test
mov
push
cli
jne
mov
or
cmpsl
call
mov
dec
jle
nop
mov
mov
in
cmp
scas
sbb
jge
test
cmp
addl
js
cmp
mov
dec
pop
mov
pop
test
lret
jae
and
push
mov
fdivrs
loopne
jno
jbe
push
pop
pop
jmp
arpl
pop
mov
arpl
in
jle
xor
or
jle
lods
dec
jp
and
xchg
dec
pop
je
sub
push
adc
shll
pop
jl
aaa
fistpll
into
lahf
pop
mov
stc
lods
xchg
jb
xchg
jmp
xchg
xor
ret
xor
jae
adc
outsl
loope
dec
cli
fs
pop
cli
je
stos
pop
jbe
xchg
dec
cmp
cmp
add
cmp
pop
data16
mov
xchg
test
inc
sub
xor
comiss
out
loope
or
and
dec
add
iret
xlat
push
jno
sbb
inc
je
sbb
cltd
sbb
std
or
stos
push
fcoms
cmp
mov
pushf
push
xor
mov
push
inc
sub
mov
aaa
mov
std
das
push
push
and
movsb
xchg
push
movsl
inc
and
add
std
xorb
ret
ljmp
in
push
xlat
cltd
push
mov
add
inc
cld
jo,pn
sbb
dec
pop
jnp
jg
dec
jo
mov
inc
adc
roll
and
in
fsubrl
adc
sub
repz
adcl
jnp
xchg
push
gs
subl
pop
cmpsl
add
jno
dec
les
jns
leave
sub
mov
cmpb
lar
popf
addl
fxrstor
insl
negb
push
inc
xlat
adc
jg
dec
and
xorl
push
dec
xor
jns
cmp
xor
mov
ljmp
jmp
inc
mov
adc
ds
or
sbb
mov
mov
xchg
sbb
sahf
inc
mov
addb
sbb
out
test
loope
jmp
mov
orb
pop
xlat
test
cs
push
sbb
cmp
test
pop
xchg
sbb
scas
das
shrl
cli
cmp
mov
mov
scas
mov
das
or
inc
into
insb
das
mov
inc
lret
mov
fcoml
mov
aaa
imul
test
jae
cmp
jecxz
adc
pop
es
adc
je
jmp
jg
lea
dec
fnstcw
sub
jne
scas
nop
xor
mov
mov
scas
loopne
hlt
daa
rol
into
mov
shlb
pop
xor
and
mov
mov
mov
xchg
popa
mov
bound
daa
xchg
pop
js
clc
outsl
out
ret
dec
xor
add
and
mov
mov
mov
arpl
sub
sbb
jp,pn
xchg
pop
add
adcl
sti
mov
outsb
jae
xlat
mov
int3
bound
xchg
jle
loope
inc
mov
mov
leave
insb
loope
or
loopne
loopne
subb
aam
lcall
pop
subl
into
bound
mov
popf
jbe
or
jb
cmp
cld
sub
and
test
je
imul
or
xor
adc
aam
popa
ret
popa
jno
icebp
out
ret
mov
jns
jae
inc
arpl
movsb
test
push
mov
mov
lock
cmp
repz
add
push
lcall
and
and
cmp
mov
inc
clc
insb
arpl
ss
test
adc
loope
out
push
shrl
jno
cmp
xchg
imul
cmpsb
sbb
pop
mov
int3
mov
push
or
mull
rcll
punpckhbw
sub
ljmp
test
pop
mov
mov
cs
lock
and
mov
inc
movsl
cld
jae
push
loop
pop
jno
inc
pusha
pushl
scas
insb
repz
sarb
inc
lds
mov
popa
or
ja
jo
arpl
dec
mov
movsb
out
je
popf
xchg
cwtl
imul
pop
and
xchg
rorb
mov
mov
push
cmp
aad
imul
test
scas
sbb
mov
andl
mov
pusha
dec
xchg
stos
pop
insb
jl
xor
sahf
mov
popl
lahf
call
jl
pushf
les
ret
data16
outsb
xrelease
fstl
mov
aad
sahf
mov
popf
mov
push
das
dec
dec
cmpsl
and
aam
insb
aad
ss
and
leave
inc
shll
inc
imul
es
mov
xorb
add
and
fiaddl
or
adc
and
sub
pop
mov
xor
mov
mov
jae
cmp
mov
mov
xchg
roll
inc
pop
insb
fprem
mov
mov
test
mov
and
push
out
sahf
mov
pop
loope
inc
pop
xchg
mul
inc
in
and
sahf
mov
or
inc
dec
push
mov
mov
add
repnz
shll
jecxz
sbb
sub
cmp
lock
fs
cmpsb
pop
sbb
loope
inc
dec
xchg
movl
push
cltd
mov
sub
sti
sbb
adc
repnz
fcoml
insl
push
mov
push
inc
sub
cmc
xor
lcall
push
movb
xor
pop
pop
cmp
imul
rcrl
sub
cmp
lret
dec
pop
rcrb
insb
ret
mov
mov
int3
inc
jecxz
fdivs
xchg
or
aam
mov
inc
or
imul
sub
fcoml
loop
sub
cmc
pop
fcompl
rorl
lret
mov
cmp
cltd
xor
dec
fs
inc
in
push
incb
cmpsl
xchg
outsl
int
push
js
mov
test
into
xchg
idivl
clc
out
cmpsl
jnp
mov
sar
mov
or
es
xchg
imul
arpl
cmp
add
or
jge
mov
inc
imul
int
adc
dec
mov
mov
and
hlt
out
jb
rcr
mov
push
mov
das
adc
push
leave
mov
incl
aaa
addr16
lods
shll
subl
xor
stos
or
inc
jb
inc
in
cmp
in
mov
xchg
aas
fcoms
addb
ret
adc
pop
xchg
sbb
mov
or
xlat
cmpsb
repz
pop
cmc
stos
xor
adc
mov
cld
out
cwtl
add
push
mov
int
adc
push
test
jno
lea
jecxz
push
xor
adc
and
call
and
andb
jmp
mov
mov
pop
outsb
xor
popa
mov
jmp
adc
pusha
add
push
sbb
adc
adc
xchg
mov
and
gs
dec
loope
and
cmc
cmp
inc
cs
mov
mov
shll
call
mov
out
and
pushf
into
sub
xor
rorb
or
lock
in
mov
or
adc
mov
js
les
jle
out
hlt
push
xchg
mov
and
out
mov
pop
adcb
movsb
push
scas
mov
dec
cmp
in
cltd
push
popf
in
call
lods
dec
inc
lret
negb
push
negb
pop
movsl
ret
lods
push
pusha
stos
push
stos
das
jbe
jnp
lds
xor
pop
inc
dec
dec
xor
push
lahf
or
pop
mov
jo
add
mov
mov
rorl
loope
orb
or
cld
cmp
repz
sbb
dec
sbb
and
or
gs
lds
cld
mov
fsubl
stc
int
xchg
mov
movsbl
pop
ret
fildl
insb
xchg
jg
xchg
mov
scas
xor
out
out
int3
repnz
hlt
sbb
and
insb
adc
jl
or
popa
xlat
pop
insb
lea
sbb
in
ret
mov
cwtl
sti
das
sbb
fistpll
jae
dec
mov
pop
cltd
out
adc
mov
sbb
out
mov
add
push
inc
push
dec
inc
scas
lock
xchg
jp
pop
mov
mov
sbbl
adc
inc
sbb
rorb
notb
add
sbb
ret
sub
or
jg
dec
inc
daa
fistl
xchg
mov
out
adc
bnd
jge
add
nop
scas
lret
mov
fwait
jmp
jge
pop
sbbb
ret
call
or
scas
movsb
outsl
fcoms
jmp
repnz
sahf
call
add
xchg
push
mov
lcall
cld
xor
lods
loop
rcrl
mov
xchg
out
pop
jl
mov
loope
push
mov
mov
inc
pop
pop
and
int
roll
inc
mov
scas
addr16
iret
dec
fcomps
test
push
lret
xor
popa
dec
test
or
rcl
popa
jecxz
stos
sub
mov
sbbl
daa
hlt
scas
inc
cmp
jne
rcrl
xchg
inc
lock
mov
inc
mov
fwait
xchg
rcl
test
es
jp
scas
sub
or
movsb
test
pop
jb
test
and
test
or
aas
xor
mov
or
sbb
sub
pop
test
push
loop
xchg
js
jg
mov
dec
mov
imul
sub
popa
dec
pop
jge
push
inc
dec
add
and
push
imul
cmpsl
mov
aaa
test
fcoms
ret
cmp
test
add
and
xor
pop
dec
pushf
sub
sub
pop
and
pushl
roll
jo
test
insb
fisttpl
and
push
mov
idivb
xchg
std
xchg
mov
or
push
inc
or
aas
push
push
xorb
rcll
js
popa
test
pusha
out
mov
mov
test
dec
cld
xor
jno
mov
ds
popf
mov
jae
cmpsl
cwtl
imul
ljmp
xchg
mov
cmp
push
test
fwait
sub
insb
push
rep
inc
pop
push
sahf
ret
scas
push
cltd
sbb
cmpsb
push
xor
jno
popa
xchg
das
cmp
adc
aam
xchg
add
js
add
pusha
dec
or
dec
pop
jae
aas
xlat
jo
dec
dec
incb
pusha
hlt
sbb
das
enter
cmc
movsb
ds
cwtl
mov
roll
sub
aaa
rcr
mov
std
stc
mov
pop
sub
cli
sbb
aad
repnz
movsl
add
mov
adc
adc
repnz
rcr
fs
bound
insl
mov
mov
mov
xor
loope
pop
push
cltd
mov
or
int3
jo
test
fisttps
mov
mov
pop
cmpsb
inc
jmp
outsb
jg
mov
push
sti
jae
mov
adc
xlat
xor
lea
mov
add
push
xor
repz
dec
aas
and
inc
pop
xchg
out
icebp
mov
fcoms
repz
mov
pop
mov
pop
sub
push
into
mov
sub
or
jb
mov
push
rorb
or
dec
gs
pop
fs
or
je
mov
cmp
or
and
push
andb
bound
test
sarl
mov
xchg
inc
clc
add
cwtl
and
pop
pop
mov
push
cltd
and
shl
sub
mov
or
inc
or
push
rol
jmp
lahf
mov
loop
cmpsl
mov
ficompl
ja
mov
test
ds
pop
add
mov
pop
in
fdivrs
addr16
iret
ret
push
pop
adc
adc
dec
insl
adc
sbb
jl
push
dec
in
jp
inc
fldenv
fsubr
cmp
cmc
or
sbb
int3
xchg
in
lret
jmp
cli
cmpxchg8b
cmp
sub
sub
xor
xchg
xor
mov
xchg
and
push
sbb
adc
aas
shrb
rcll
mov
imul
jge
jb
loopne
inc
loopne
int
sbb
xor
les
or
dec
xor
imul
repnz
cmpsb
sbbl
arpl
cli
lock
or
jmp
call
adc
adc
add
dec
pop
mov
xchg
sarl
stos
in
mov
sub
mov
jns
dec
test
out
mov
sbb
clc
adc
inc
mov
push
sbb
cltd
and
push
jp
ficoms
adc
in
stc
add
adc
in
mov
lock
sub
sbb
adc
add
or
inc
dec
cmp
adc
jbe
jbe
loop
inc
bound
insb
fs
mov
and
jnp
mov
fldl
xchg
sub
push
cmpsl
orl
in
xchg
fnsave
lahf
and
xchg
pop
adcb
sub
loope
mov
push
add
sub
and
pop
out
dec
push
stc
add
add
sbb
cmpsl
add
mov
adc
or
inc
or
dec
test
pop
jne
dec
push
lret
cmp
push
pop
or
xor
xlat
clc
pushf
and
aas
fsubrs
push
imul
and
mov
and
add
shrl
xchg
xchg
cmp
in
xchg
cltd
sbb
push
push
sbb
xor
mov
mov
lret
neg
xchg
inc
fs
sbb
sahf
or
data16
add
aad
bound
movhps
sbb
ss
push
xor
push
pop
ret
sub
jne
repnz
inc
and
pop
jge
jecxz
lcall
push
das
and
repnz
rorl
lods
insb
jmp
and
mov
mov
fdivs
mov
add
pop
mov
ljmp
adc
data16
inc
rol
movsl
fsubrs
sub
sti
xlat
sub
xor
sub
sub
jnp
mov
mov
loopne
shrl
imul
sub
popf
jle
nop
jl
pushf
bound
pop
sbb
stos
xchg
push
aas
mov
in
test
jne
call
mov
loopne
mov
shlb
in
lcall
insl
sub
nop
xchg
gs
adc
jbe
shlb
shlb
or
dec
mul
lods
sbb
std
add
paddd
ficompl
test
mov
sub
xor
pop
xor
jg
les
mov
mov
push
adc
mov
ja
aas
xor
mov
cwtl
arpl
sahf
or
mov
shl
out
mov
adc
inc
inc
fimull
push
sub
and
shll
mov
fisttpll
add
and
push
sbb
addr16
mov
aaa
daa
sub
pop
lcall
pop
or
cmp
xor
dec
shl
int3
fdivs
cmp
or
push
mov
sub
xor
es
adc
jb
and
pop
outsl
mov
shrl
xor
pop
enter
push
sub
sub
mov
fs
jbe
xorb
jle
push
aas
in
xchg
cmp
xor
dec
mov
iret
aaa
xorb
dec
cli
dec
out
push
popf
or
mov
fstps
sbb
and
cmc
jle
lahf
inc
stos
jmp
int3
mov
testl
or
enter
adc
pop
arpl
test
mov
ficompl
jo
faddl
out
fisubs
mov
mov
mov
in
sub
in
out
xchg
outsb
ret
sbb
imul
leave
fs
xchg
and
ljmp
xor
inc
or
je
mov
inc
adc
dec
jno
lea
cmp
enter
mov
xlat
add
push
xor
dec
mov
xchg
lods
iret
fimull
and
js
aam
int
jge
enter
and
push
les
pop
jmp
jecxz
outsb
dec
test
test
mov
cmp
mov
mov
vpaddusw
mov
xchg
push
sbb
mov
int3
mov
sub
hlt
or
jle
xor
add
repnz
jl
std
sub
cmp
mov
out
fdivs
mov
adc
adc
jo
dec
outsl
bound
dec
and
mov
in
push
lock
and
dec
inc
jbe
dec
pop
pop
inc
jno
mov
push
pop
lret
mov
sub
mov
aaa
test
jo
rcll
mov
bound
xchg
test
or
cmpsl
les
mov
dec
or
pushf
mov
hlt
and
outsb
pop
or
sub
fldl
or
cli
xor
jno
aam
hlt
lret
lcall
xchg
outsl
inc
jle
cltd
and
cld
call
shll
outsb
push
in
test
lret
loopne
pop
push
lds
inc
adc
pop
push
inc
and
jecxz
addr16
icebp
xchg
or
mov
imul
mov
or
jno
lahf
dec
xchg
or
push
xor
jle
mov
cmp
in
int3
mov
fwait
pop
mov
test
scas
in
mov
popa
xor
inc
adc
aas
in
mov
aam
adc
pop
push
sbb
or
sub
push
shrl
rcl
daa
fcoms
dec
adc
mov
push
xchg
inc
icebp
hlt
fs
sub
sub
out
add
and
pop
or
cld
movw
outsb
icebp
fnstenv
push
ffreep
mov
outsb
jns
cld
repnz
aas
data16
insl
aaa
sarl
mov
mov
jmp
fimull
push
xchg
popa
es
fimuls
pop
mov
cmpsl
int
xorb
fcoml
cmp
rorb
xor
dec
sbb
jne
cwtl
mov
sbb
mov
fnsave
popf
sbb
push
out
jle
es
xlat
xchg
lret
out
or
dec
pop
dec
es
xor
fidivrs
sti
int
test
psubusb
pop
insb
insl
lods
lcall
mov
mov
aas
iret
in
popa
xor
loop
sub
lcall
andl
popf
cmpsb
jbe
jle
mov
lret
sti
test
jmp
push
popf
cltd
xchg
push
in
out
mov
movsb
sbb
bnd
mov
into
mov
push
fcmove
fldenv
dec
adc
or
insb
cmp
lret
mov
ss
nop
fptan
incb
mov
aas
lahf
lock
push
clc
addr16
jae
push
hlt
scas
rol
dec
shrl
outsl
jp
sbb
xor
hlt
mov
sbb
cs
pop
mov
mov
xor
out
ficoml
fstps
mov
fsubrl
mov
movsb
lret
ja
cmpsb
sbb
push
xor
cmpsb
or
rorl
test
jns
roll
mov
popf
cmpb
jmp
sbb
outsl
mov
mov
xor
jg
mov
jno
jne
xchg
pop
lea
xchg
cmpsb
jmp
cli
mov
sub
out
imul
nop
cmp
outsl
scas
mov
out
xchg
scas
adc
xchg
jle
mov
xchg
sbb
mov
cmp
cwtl
push
insb
psubsw
push
xchg
cmp
loop
mov
dec
jmp
xchg
cmpsl
ja
pop
rcl
and
insb
fs
xlat
dec
cmpsl
sub
jno
sbb
out
fcoml
pop
mov
data16
xlat
mov
cmp
mov
push
sarl
mov
xchg
fbstp
inc
xchg
fstpt
sti
mov
cmp
frstor
lahf
cs
fstpt
fs
call
lods
test
mov
mov
lahf
xor
cli
cld
cli
cmc
fstpl
test
cmpsb
cmc
lock
ljmp
lahf
cmpsb
cld
ss
mov
jns
cmpsl
push
addr16
pop
adc
cs
jge
js
push
dec
xchg
dec
push
mov
scas
outsb
xchg
outsl
or
clc
jb
dec
cmc
and
shrl
push
jnp
mov
shll
mov
outsl
int3
fistps
mov
std
sub
sub
mov
outsb
ljmp
jb
fists
leave
repz
add
loope
jle
mov
lods
mov
sti
test
cmpsw
cmp
insl
jne
out
jp
jge
inc
dec
mov
test
xlat
dec
cmp
les
cmpsl
sub
testl
in
in
mov
xchg
testl
mov
inc
popf
or
sahf
xor
add
xchg
cli
ss
scas
push
cmp
adc
mov
pop
pop
pop
js
jbe
pop
push
push
icebp
arpl
mov
sub
sbb
lods
mov
and
out
push
jnp
mov
je
scas
mov
lods
fwait
insl
mov
out
jg
pop
int3
jno
lock
stc
je
adcl
pop
dec
mov
sti
mov
outsb
pop
dec
iret
sub
sub
iret
lret
movsl
aaa
mov
out
fcomps
cld
es
jmp
pop
pop
mov
leave
out
pop
ja
insl
lahf
pop
adc
xlat
jns
mov
cmpsl
ss
jecxz
dec
lret
lcall
sbb
das
pop
mul
xchg
ds
sbb
jg
push
jno
inc
clc
stos
fdivrl
outsb
ljmp
inc
ja
iret
test
mov
int
daa
push
pop
push
cmpsl
mov
fcompl
daa
dec
mov
mov
xor
cmp
ds
jo
cmc
mov
xor
mov
sahf
xor
movsb
lea
lret
cli
xchg
jle
mov
push
rorb
pop
dec
jnp
sbb
into
mov
jns
pop
mov
scas
dec
mov
jl
fnsave
in
mov
repz
fisttpl
jp
rcr
cmp
imul
repz
fnsave
repz
bound
leave
mov
fnstenv
std
lods
in
loope
ret
std
ds
clc
test
aad
mov
popf
cmc
jecxz
jmp
es
mov
jae
xchg
std
popa
mov
ds
jno
int
push
sbb
bnd
jbe
pop
sbb
imul
div
lcall
lds
xor
xchg
mov
pushf
movb
and
add
jp
dec
xchg
or
lahf
jmp
mov
mov
xchg
mov
mov
xchg
mov
mov
mov
jae
shl
out
ja
mov
pop
jp
cmpsb
movsb
mov
ljmp
imul
jge
lock
or
cli
das
insl
push
arpl
aam
dec
or
aas
mov
stos
pop
aas
sub
fidivs
inc
mov
push
leave
jmp
cmp
insl
jge
fbstp
shl
push
lea
lods
sti
jle
lret
jp
jne
cmpsl
sbb
pop
jnp
mul
cld
jge
ret
push
lea
mov
aad
outsl
stos
test
jp
mov
test
ffree
jbe
xchg
or
pop
mov
loopne
lods
addr16
sub
cmp
loopne
addr16
inc
mov
jecxz
sbb
mov
popa
mov
int
cwtl
push
insl
jbe
stc
inc
jmp
outsl
sti
sti
ficomps
gs
xorb
sbb
test
repnz
imul
mov
ds
mov
icebp
pop
mov
imul
sbb
jle
outsb
mov
dec
fcoml
rorb
mov
lds
sti
pushf
fisubrs
jbe
aam
jmp
push
push
push
outsl
pop
jnp
sbb
mov
or
lcall
cld
mov
aaa
xchg
mov
in
out
dec
mov
cmp
xor
in
shll
fprem1
mov
fstl
addr16
out
adc
negl
sub
mov
dec
mov
sub
test
jle
cmp
sub
aas
pop
jp
call
mov
mov
ss
stos
enter
scas
mov
hlt
mov
std
outsl
cmp
push
inc
mov
es
stos
movsb
cmp
loopne
fistpll
cltd
fidivs
xor
lods
inc
jmp
pop
test
jne
imull
bound
mov
mov
jns
daa
fsubr
fsubr
pop
rcrl
cmc
mov
mov
sti
fptan
loope
paddq
das
iret
mov
and
sub
push
mov
push
mov
sahf
adc
fimull
cmpsb
mov
iret
imul
hlt
imul
call
mov
jmp
ss
pop
dec
idivl
lock
sub
in
dec
jge
iret
jnp
dec
repz
add
movsl
scas
fwait
cmpsb
push
enter
cmp
cmova
mov
jg
xlat
out
call
dec
push
ss
push
adc
xor
push
push
jp
mov
sti
sahf
jbe
je
xchg
cmpsb
mov
ljmp
inc
xlat
lcall
cmp
jne
pop
jge
mul
pop
mov
test
jb
fdivl
idivb
dec
jge
mov
xchg
xchg
push
popa
pop
cmpsb
xchg
in
pop
gs
sti
dec
xlat
mov
call
jmp
jne
pop
jle
hlt
mov
push
aas
mov
mov
leave
cmc
xchg
push
mov
lret
mov
pop
dec
lahf
sbb
jg
cwtl
sti
dec
aad
pop
or
pop
mul
fwait
aaa
sub
orl
aam
ror
mov
push
cs
cmp
test
addr16
push
xchg
xlat
out
pop
test
jecxz
mov
push
daa
jl
mov
push
rcrb
push
sahf
lret
push
sahf
repnz
arpl
and
xor
outsb
cmp
ds
negl
imul
mov
mov
in
sbb
push
jbe
ljmp
jp
jmp
cli
pushf
dec
cmc
cs
std
aam
popa
in
into
mov
mov
jmp
icebp
cmpsb
mul
adc
sbb
fisubrs
decb
fisttps
or
pop
int3
imul
in
in
adc
popf
outsb
jg
xchg
sub
cld
dec
mov
out
subb
pop
push
or
std
mov
ja
cmp
loope
in
pop
imul
mov
fisubrl
mov
or
outsb
ja
sub
popa
lret
scas
or
cld
je
in
ret
pop
mov
cli
cmp
xchg
mov
jp
mov
jmp
push
mov
mov
jbe
xlat
inc
ljmp
imul
addr16
pop
mov
outsb
sbb
int3
pop
sti
add
mov
mov
dec
xor
pop
pop
jns
insl
dec
xlat
fidivl
sbb
int3
iret
mov
mov
daa
dec
aas
mov
jge
jae
clc
in
inc
jae
aas
mov
and
cld
pop
jle
lret
shll
xchg
fsubl
into
aaa
jp
ja
jne
fisttpl
icebp
xor
in
sbb
mov
aam
out
jno
idivb
sub
dec
cmpl
mov
arpl
scas
lods
stc
push
fnsave
and
push
jae
repz
std
dec
ret
addr16
cmp
xor
cltd
and
and
mov
cltd
cmp
adc
push
out
inc
cld
cltd
jl
mov
pop
sbb
or
into
mov
xchg
push
rorl
je
jl,pt
shr
bound
ljmp
insl
out
mov
inc
jmp
out
and
out
int
cli
jb
xchg
repnz
mov
sub
ja
out
aaa
lahf
std
rcrb
out
mov
inc
sbb
sbb
std
fildll
test
dec
out
jnp
int3
insl
es
outsl
push
int3
hlt
shl
lods
and
mov
mov
or
jg
ljmp
jmp
fdivs
mov
cmc
dec
mov
aam
insl
es
dec
mov
mov
xchg
mov
shlb
jno
in
cmc
xchg
xlat
fsubl
jb
jb
je
test
and
mov
adc
mov
insl
popa
lahf
jne
ret
mov
mov
inc
xchg
sbb
xor
daa
jae
sbb
jle
jmp
mov
jge
testb
jno
xorl
in
scas
hlt
push
int
jno
mov
pop
leave
stos
xchg
xchg
cmp
jl
idivb
sub
test
sahf
push
jae
movsl
scas
or
xor
xchg
ret
mov
xlat
in
cmp
test
cmpsb
ret
xchg
iret
dec
sbb
ror
int3
fcompl
fldenv
lret
mov
fiadds
pop
and
in
push
ror
shll
shll
clc
mov
jecxz
daa
popf
mov
aam
inc
out
scas
pop
mov
xlat
inc
fdivrl
ret
scas
int
fcmovbe
push
cmc
push
and
xor
pop
icebp
cmp
jecxz
xor
cmpsl
xchg
pop
shlb
pushf
daa
divl
fcompl
fldl
shl
pop
jbe
and
in
xchg
lods
mov
xor
lods
out
adc
and
mov
inc
xchg
jmp
ljmp
xor
jge
mov
gs
lods
cmp
scas
mov
ds
scas
aad
jno
or
jbe
sub
add
cli
mov
out
popf
mov
movsl
push
mov
cld
hlt
jl
lahf
cli
fadds
cmp
repnz
jo
roll
mov
dec
dec
lcall
out
ret
jne
xor
ret
ficoml
adc
lods
cli
jne
aas
and
or
test
jno
push
cmpsl
dec
daa
mov
repnz
enter
jae
inc
es
or
xchg
imul
movsb
stc
fldl
push
aam
in
mov
jmp
dec
xchg
daa
or
cmp
setnp
scas
cli
xchg
xchg
push
jecxz
cmp
cli
xor
loope
sti
xchg
cmpsb
data16
mov
fcomp
cmp
out
mov
es
mov
rolb
movsl
push
ret
add
stos
sbb
adc
mov
in
fucomip
dec
popf
je
imul
jnp
in
mov
mov
lock
mov
cli
xchg
scas
out
mov
xchg
fisubs
shlb
pop
int
outsb
icebp
ret
das
ljmp
outsl
mov
and
sbb
hlt
xlat
cs
lock
jmp
mov
sub
insl
ds
hlt
mov
gs
lods
andl
mov
lods
clc
gs
sbb
push
fs
lret
cmp
stc
jne
mov
sbb
xor
mov
pop
jle
repnz
cwtl
lea
sti
aaa
sbb
lods
sahf
cmc
sub
xchg
leave
pop
fcmovnbe
xor
cmp
xchg
in
in
jne
outsl
push
inc
in
gs
sbb
insb
jp
and
stc
pop
pop
push
mov
ret
lahf
dec
xchg
stos
sarb
test
addr16
push
push
leave
ja
inc
pop
lret
xchg
subps
fwait
iret
insb
js
shl
xchg
xlat
lock
jge
in
in
mov
lea
cs
aad
dec
int3
std
fdivrl
leave
sti
imull
mov
nop
mov
scas
mov
fcmovne
lret
mov
aad
insl
push
mov
cwtl
in
imull
xchg
sahf
jnp
insb
jae
rcrl
mov
aaa
cmp
je
test
sbb
push
fdivrs
std
pushf
fstpl
dec
cmp
ds
sub
cmp
movsl
inc
sub
sti
and
sbb
cmp
repnz
sub
iret
mov
fbld
lock
mov
fstpt
leave
push
jmp
jecxz
dec
mov
xlat
out
insb
repz
psubq
jns
fidivl
sarl
pop
int
out
cmp
pop
mov
pop
ja
scas
lret
je
test
in
dec
fistpll
cmp
test
push
push
ds
stc
cld
fst
xchg
inc
lret
jmp
stos
loope
enter
sbb
pop
mov
jae
in
cmc
iret
insb
icebp
sub
mov
lcall
addr16
outsb
cmc
jb
ret
hlt
xor
pop
pop
pop
cli
lods
mov
aam
in
xor
cmc
cmpsl
pop
cmpsb
gs
mov
hlt
mov
inc
lea
sahf
jae
pop
test
pop
aas
dec
cli
enter
cwtl
pop
aad
fcmovnbe
jmp
mov
jle
push
jne
outsl
in
sti
daa
mov
mov
mov
daa
pop
push
das
mov
xchg
loope
inc
jnp
in
jcxz
stos
mov
xchg
push
mov
mov
xchg
lcall
cmp
data16
mov
frstor
in
aaa
aad
lret
add
fadds
dec
xchg
gs
sbb
pop
repz
sub
fsubp
push
fdivrp
jecxz
rorl
ja
test
insb
js
jl
inc
sti
in
add
jp
outsb
js
in
enter
out
sbb
popa
push
add
xlat
push
jmp
lock
jecxz
les
xchg
push
push
jle
push
stos
shrl
punpcklwd
addr16
jb,pt
adc
shll
sahf
jae
pop
push
cmp
cmc
in
add
push
cltd
push
aam
xor
jnp
push
mov
xchg
ljmp
push
stos
push
sahf
cmpsb
aad
mov
jle
mov
enter
mov
inc
ja
adc
mov
aas
fmuls
mov
dec
popf
into
in
sbb
ds
rol
imull
outsb
and
push
pop
scas
jg
vcvtpd2dqx
push
jnp
pushf
pop
mov
ret
clc
cs
std
push
in
popf
jae
mov
addb
pop
or
cli
pop
ret
test
xor
pop
arpl
cmp
xchg
fdivrp
mov
jae
shlb
sahf
lahf
pop
xor
out
jns
pop
dec
push
adc
mov
fisttpl
divl
cmc
or
cmpsl
out
negl
sub
lods
out
mov
loopne
aaa
int
test
xchg
das
aad
cld
into
imul
lock
stos
cli
push
cmp
fbstp
sbb
pop
jno
jmp
ljmp
and
and
xchg
mov
mov
lea
xchg
mov
and
xor
and
stos
sub
jmp
rorl
popa
hlt
cmpsb
lret
test
setb
pop
push
arpl
in
push
cltd
sahf
or
jnp
nop
sub
jne
enter
mov
add
add
stos
mov
jbe
jl
jecxz
clc
pop
sbb
push
out
add
push
leave
dec
xor
test
enter
jns
xchg
mov
scas
cmp
das
lahf
pop
mov
nop
popf
mov
mov
dec
mov
jge
test
in
sub
pop
scas
mov
and
xchg
mov
sbb
mov
push
add
into
sub
cmp
dec
dec
sbb
jnp
cmp
dec
je
and
out
xchg
enter
sti
scas
pushf
sbb
xchg
daa
mov
ds
inc
jp
sahf
cmovge
scas
movsl
sub
and
push
push
mov
jmp
std
add
pop
shl
mov
mov
fisubs
xchg
dec
adc
mov
addb
in
leave
or
mov
xchg
sarb
fs
test
lahf
aaa
les
inc
aad
mov
push
xchg
or
jb
outsb
mov
inc
xchg
dec
mov
inc
daa
xchg
test
stos
mov
dec
arpl
dec
imul
test
push
sbb
sub
dec
outsl
adc
or
adc
cld
test
enter
mov
add
pop
mov
sti
jns
xor
movsb
pop
dec
dec
jle
je
mov
push
push
mov
mov
sbb
push
stos
push
adc
sbb
inc
ret
pop
pop
inc
cmpsb
mov
movsb
inc
lods
jle
pop
imul
mov
mov
dec
pop
mov
loope
scas
jbe
cs
push
mov
sbb
sub
loopne
je
mov
xchg
adc
jp
dec
or
ja
sahf
sbb
jno
xchg
loop
in
test
cmpsl
push
and
cmp
divb
inc
scas
sub
or
es
and
sahf
pop
dec
mov
cwtl
sbb
mov
and
lods
sbb
repnz
testb
xor
mov
push
or
push
in
or
sbbl
ja
add
mov
sub
push
push
leave
int
scas
pop
movsb
ss
dec
stos
adc
repnz
movsl
lret
sbb
shll
xchg
rcl
push
in
scas
pushf
xchg
pop
jmp
or
ljmp
cmp
int3
pop
int
rcll
xchg
jbe
add
mov
sub
mov
mov
mov
adc
fdivrl
rcll
clc
or
pop
cmpsl
inc
cmp
mov
dec
popa
xor
jb
or
adc
xchg
pop
xor
pop
jns
inc
lock
inc
pop
cwtl
inc
sub
sub
rcrb
shrb
adc
stos
adc
pop
inc
ja
les
in
adc
mov
push
xor
out
or
inc
jae
scas
mov
nop
pop
inc
pop
push
in
push
cmpsl
mov
test
and
mov
lcall
push
mov
push
mov
push
pop
xchg
bound
sbb
push
push
cwtl
test
dec
iret
add
cmp
imul
pop
jne
dec
and
mov
and
dec
push
pop
mov
pop
or
xchg
pop
sub
dec
sbb
xchg
xor
sbb
jg
fwait
and
or
mov
das
das
daa
call
xchg
lahf
test
ret
roll
loopne
ds
test
test
movsl
inc
cmp
mov
sbb
dec
push
xor
mov
mov
add
sti
inc
js
sub
dec
mov
leave
popf
inc
divb
xchg
in
test
clc
inc
inc
sub
int3
add
dec
mov
bound
inc
jle
mov
mov
lcall
add
imul
mov
fcomps
mov
sub
add
adc
mov
sahf
mov
dec
add
shll
cs
xchg
fwait
lods
inc
push
dec
lds
std
or
xchg
cmc
xchg
and
fisttpl
nop
nop
sub
dec
sub
inc
sbb
imul
iret
mov
ljmp
ja
xchg
adc
cmc
mov
out
fxch
xor
pop
dec
push
movsb
mov
gs
mov
test
add
fdivrs
test
daa
call
adc
pop
mov
sub
push
kmovd
mov
xchg
repz
leave
movsl
bnd
adc
sub
cs
inc
lds
jmp
or
test
mov
cmp
adc
data16
rolb
js
xor
orl
cmp
leave
imul
popa
add
fbld
ret
push
xor
mov
imul
or
sub
sahf
sahf
or
test
movsb
pusha
dec
cwtl
mov
popa
dec
add
mov
call
mov
mov
adc
add
push
sub
mov
dec
stos
sar
cmp
gs
add
push
add
push
mov
jp
aad
add
mov
dec
loope
call
push
popa
xchg
fdiv
fs
sub
je
dec
mov
and
xor
mov
sbb
xchg
fnstsw
jmp
jl
pop
out
pop
xchg
inc
iret
scas
inc
negb
pop
xor
aas
aaa
setg
rcl
std
fwait
dec
push
in
xor
xchg
inc
mov
insl
icebp
into
mov
fisttpll
scas
sbb
lahf
fldcw
pop
divl
sbb
push
fsubr
out
fidivl
pop
fninit
pop
adc
lods
ret
testl
xchg
and
pop
addr16
lret
aam
add
xor
lods
leave
adc
mov
sbb
lods
arpl
int
cmp
iret
cmp
inc
fnstsw
aad
push
and
ret
jmp
insl
fnstenv
mov
in
xchg
mov
pushf
jo
mov
iret
popa
into
sbb
jnp
mov
in
clc
insb
mov
iret
into
insl
cmp
mov
dec
inc
cmp
fisttpl
out
sub
xchg
sbb
and
or
int3
cmp
imul
inc
jmp
push
dec
push
rcrl
push
sub
xchg
int
jbe
fnsave
imul
mov
mov
fdivrl
clc
dec
or
sbb
cmp
and
cmpsl
mov
insl
xor
inc
xchg
lret
ss
ljmp
sahf
fwait
std
lcall
ror
inc
pop
or
mov
mov
push
test
jcxz
movlps
jge
cmp
enter
mov
jg
cltd
rcrl
or
mov
adc
mov
aad
jp
sti
mov
fstl
mov
lods
scas
cmp
lret
mov
sub
jbe
jg
mull
and
leave
cmc
push
out
fildll
fmuls
cs
in
push
pop
or
lret
movsb
aad
cmp
bound
ljmp
xchg
sarl
das
and
in
lcall
xor
outsl
sahf
test
scas
mov
xchg
rep
in
shrl
movsl
jmp
movsb
scas
jae
pop
repz
jns
into
sbb
call
int
sub
mov
adc
in
xor
loop
pop
dec
inc
jno
jmp
shr
int3
dec
sarl
stc
mov
xlat
into
lea
icebp
mov
jns
std
stos
mov
aad
mov
mov
xchg
mov
jg
pop
pop
mov
mov
out
hlt
sub
push
pop
push
in
cld
xchg
scas
and
or
fsubrs
lods
inc
jb
test
jle
push
in
movsl
xlat
xchg
lahf
aaa
jbe
jle
jnp
pop
mov
aad
jg
leave
push
mov
mov
ret
imul
fdivrp
popa
and
out
ss
imulb
cmp
loope
popa
jp
ret
stc
out
push
jg
push
mov
outsb
aad
jle
sub
jbe
incl
mov
pop
sbb
dec
movsl
cmp
and
in
shl
dec
push
std
imulb
pop
inc
sub
out
mov
loopne
dec
mov
das
jge
lods
sti
xor
mov
cmp
pop
xor
sbb
cmpsb
call
cmpsl
inc
or
jge
push
outsl
jo
push
in
mov
jnp
mov
fwait
pop
mov
cli
mov
cmp
in
jbe
adc
add
dec
jmp
fidivs
icebp
jecxz
leave
xorl
jl
rol
in
cmpl
sbb
jbe
test
outsb
jmp
mov
mov
call
sti
aam
and
bound
sbb
mov
rol
in
imul
jb
fnstsw
cmp
jne
xchg
andl
in
roll
cmpb
pop
push
daa
repnz
sbb
cmp
jle
jge
aam
fidivrl
scas
jnp
cmc
cmpsb
ljmp
jae
in
pop
aam
std
fisubrl
xor
imul
aam
lods
insl
into
push
pop
mov
fcmovbe
clc
gs
in
mov
dec
stos
hlt
sti
out
testl
mov
xchg
int
jmp
lock
or
cwtl
ja
aas
outsb
test
in
scas
jne
in
sbb
in
lret
iret
negb
leave
jnp
iret
aad
repnz
ror
into
in
pop
lcall
fnstcw
out
imul
mov
repz
in
jp
ret
lds
xor
jl
adc
jo
xchg
pop
test
mov
out
lret
cmpsl
cmpsl
dec
mov
mov
sub
test
adc
push
hlt
dec
sub
out
mov
loop
lds
fildll
jne
sar
popl
cli
push
sti
mov
jae
pop
call
mov
aad
mov
and
dec
xlat
push
xlat
outsb
fistpll
push
add
std
sbb
call
cld
mov
sahf
cmp
pop
mov
movsb
jmp
lret
mov
fidivs
mov
xchg
lret
or
cmp
stc
inc
ljmp
ss
imul
icebp
cmp
outsb
adc
popf
lods
jp
mov
addr16
jle
jo
cmpsb
mov
sub
leave
jbe
out
dec
xor
cmp
adc
lret
push
pop
sarb
xlat
aam
push
test
in
scas
mov
fsubrl
jno
mov
cli
pop
lret
cli
js
insb
ja
lock
xchg
repnz
loop
fimuls
js
arpl
mov
mov
pushf
enter
xchg
or
inc
push
jg
stos
xchg
mov
scas
adc
cs
dec
into
pushf
fbstp
clc
jnp
popf
in
inc
cmpsl
pop
lahf
stc
imul
xor
push
idiv
popa
lahf
clc
popf
push
mov
stos
jle
inc
mov
testb
mov
call
sub
mov
cmp
pop
jl
repz
repnz
in
jae
int3
fwait
sbb
mov
push
pop
cmp
xlat
mov
data16
iret
lahf
aad
xor
movsb
int
repnz
mov
xchg
das
into
hlt
jle
mov
sti
jne
jno
aaa
das
in
neg
jge
es
pop
std
in
mov
aas
sti
js
sar
push
scas
fbstp
scas
cmp
sub
in
mov
sbb
into
scas
insl
std
sbbl
sbb
scas
mov
mov
lcall
jns
stos
arpl
lcall
icebp
out
fsubr
or
sub
dec
mov
dec
aad
pop
das
pop
sub
push
popf
pushf
stc
mov
xchg
leave
outsb
jbe
and
cmp
bound
adc
sub
cmp
addr16
inc
stc
icebp
push
addr16
insb
test
call
fwait
pop
pop
into
sbb
shlb
push
aas
fwait
xor
roll
mov
push
rcrl
ljmp
cld
dec
imul
mov
stos
imul
xchg
scas
in
ljmp
aaa
lcall
xchg
push
hlt
jne
push
ja
ljmp
outsl
nop
insb
adc
pop
icebp
jl
stos
sbb
jae
aam
lods
cmp
dec
data16
mov
xchg
loopne
ss
fldcw
jnp
mov
sub
pushf
inc
into
shl
int
fbld
sub
mov
mov
lea
xchg
int3
call
cmpsl
xlat
jbe
adc
or
fcmovu
addr16
sti
data16
enter
in
jle
insb
push
fdiv
jmp
movl
pop
test
ljmp
inc
pop
in
out
subl
mov
pop
ds
mov
cmpsl
negl
mov
or
int3
mov
imul
xor
in
sbb
call
mov
sub
je
div
insl
or
mov
addr16
mov
xchg
ret
das
aaa
lret
in
mov
into
cmp
imul
jl
mov
pop
jne
jg
cld
popa
hlt
scas
mov
inc
repnz
popf
ljmp
fs
jno
fadd
in
sti
mov
aaa
jns
sub
sar
xchg
addr16
mov
fnstenv
jbe
loop
aad
scas
xchg
ds
lret
sbb
xchg
dec
push
iret
js
shll
push
mov
lahf
ficoml
xor
cli
dec
sub
out
push
lahf
movsb
mov
ss
cmp
sti
fiaddl
and
push
fildll
pop
jmp
fnsave
pop
out
pop
sti
jle
lods
stos
mov
fwait
mov
mov
or
arpl
or
iret
fldcw
gs
jecxz
xchg
dec
ljmp
lahf
xchg
xchg
pop
scas
fistpl
ret
jns
pop
push
pop
sub
jnp
fstl
pop
push
sbb
aam
jo
sub
mov
mov
cmpsb
adc
lahf
stos
mov
ja
int
pop
sbb
leave
std
xor
aad
dec
repnz
out
pop
xchg
out
pop
js
movsl
ret
scas
jmp
jmp
or
imul
xchg
jbe
jle
cmpsl
push
repnz
repz
stos
aad
stos
dec
addr16
jne
mov
insl
cld
push
mov
mov
out
ljmp
mov
cmpsb
fs
or
mov
push
jp
into
and
push
cmp
jae
push
fistl
mov
dec
stos
dec
scas
cmp
mov
mov
mov
je
aas
outsl
enter
and
and
jecxz
rcrl
lods
cs
out
jl
imul
mov
jo
les
jl
inc
jb
hlt
out
push
rol
inc
das
cmp
inc
sti
orb
jl
jno
mov
pop
ja
mov
pop
jle
sbb
jmp
in
cmc
mov
xlat
xor
insb
xor
arpl
fsubrs
daa
push
es
cmp
mov
pop
in
xchg
push
push
mov
jmp
lock
push
add
cld
fstpt
movsb
add
popf
cli
jo
rol
jne
fisubrs
push
aas
mov
jnp
jle
scas
imul
jae
and
xor
mov
sbb
outsl
test
xor
stos
jno
jp
mov
mov
mov
loopne
shl
call
push
sub
js
in
jno
mov
push
pop
xchg
sub
sbb
movsl
jae
enter
push
lods
vpaddq
mov
in
stc
push
sub
js
xchg
in
mov
loop
fidivs
cmpsl
push
pop
in
mov
hlt
cld
pop
jle
loop
dec
and
lods
xchg
ds
shll
lret
mov
jmp
mov
daa
imul
jmp
pop
daa
mov
iret
jg
lods
out
mov
int3
pop
mov
test
jo
mov
or
pop
test
std
into
fdivl
dec
ljmp
lret
iret
cmc
stos
xlat
fsts
jmp
cmp
mov
arpl
adc
repnz
fnsave
pusha
leave
int
jg
or
out
xchg
jmp
rcll
movsb
fadds
dec
and
mov
mov
fistl
enter
fldcw
xchg
sti
push
dec
nop
pop
and
mov
cmpsl
and
rol
sbbl
mov
fsqrt
adc
repnz
mov
mov
pop
nop
xor
jno
daa
in
test
dec
xchg
mov
jnp
ja
lcall
push
push
mov
inc
icebp
decl
mov
xchg
push
sbb
add
jmp
xchg
xchg
nop
xchg
out
nop
push
jmp
movsl
inc
push
push
inc
inc
adc
adc
outsl
testb
out
sti
std
pop
pushf
out
scas
jae
imul
out
mov
pusha
mov
loope
or
clc
sub
scas
xchg
call
hlt
pop
pushf
scas
movsl
dec
inc
lds
cmc
pop
mov
push
dec
add
loope
lret
pop
sub
rol
ret
adc
sarl
adc
inc
nop
jo
adc
loopne
call
andl
sbb
add
and
rorl
push
ret
in
inc
pop
or
adc
add
jmp
dec
add
dec
sbb
inc
push
mov
filds
cmp
movsb
pushf
add
out
cmp
push
push
testb
lret
sub
pop
mov
add
std
mov
lahf
jle
pop
pop
js
ret
leave
ret
jmp
dec
out
lea
imul
leave
xchg
mov
popa
mov
movsl
imul
add
gs
les
push
sub
jns
mov
ljmp
xor
xor
push
fldt
inc
test
cmp
sub
mov
pusha
jl
dec
test
leave
mov
popf
mov
pop
lcall
mov
andl
pop
sbb
out
ds
mov
clc
cmpsl
jbe
xchg
fdivp
xchg
cmp
and
imul
push
dec
cli
mov
pop
pop
std
ficompl
add
adc
mov
fcoml
cs
fsub
rcrb
int3
pop
sub
es
xor
jnp
into
int
ret
aaa
cmc
stos
push
push
ror
jnp
sub
inc
sbbl
pop
sbb
lods
stc
xor
test
data16
pusha
jl
cmpsl
ret
lcall
or
ret
sbbl
in
aaa
inc
mov
xor
ja
mov
sub
lea
dec
inc
and
idivb
in
std
leave
push
dec
and
xchg
movsl
movsl
sarl
mov
into
in
dec
data16
cmc
je
js
repnz
jne
mov
xchg
lods
mov
adc
cltd
addr16
mov
dec
stos
into
add
pushf
adc
pop
mov
push
inc
cmc
outsb
jno
inc
pop
lock
xor
jne
shl
jo
sub
cmp
cmp
in
xor
std
mov
cwtl
pop
and
loop
fwait
pop
jo
mov
sbb
in
and
pop
add
les
cltd
dec
push
sbb
add
mov
gs
jp
pop
cld
or
sub
loope
pop
sbb
sti
jns
rcr
lcall
push
outsb
repnz
jno
ss
call
xor
sbb
xor
push
xchg
mov
and
adc
por
stos
scas
cmp
aad
lahf
sub
add
sbb
jb
loope
sahf
inc
imull
out
mov
test
movsb
xor
mov
sub
xlat
stos
pop
aaa
or
imul
pop
repz
pop
out
es
pop
aam
xchg
pop
rep
dec
cmc
mov
mov
idivb
lods
jl
cmc
ret
stos
push
mov
jno
or
divb
mov
cmc
xor
repz
xor
cmpsb
add
ss
jg
mov
jl
enter
arpl
xchg
pop
shlb
push
mov
pushf
pop
pop
aas
xorb
cmp
dec
xor
cmp
adc
lret
inc
mov
outsw
adc
sub
add
push
add
es
mov
cli
cmpsb
xor
jp
mov
out
cmp
jle
stos
push
repnz
hlt
dec
popf
andl
xchg
sub
mov
std
loope
ljmp
mov
lahf
das
vmovaps
icebp
clc
mov
add
or
inc
xor
pop
lds
mov
sbb
or
sbb
xchg
dec
mov
push
stos
jno
out
sbb
and
mov
pop
repz
lods
outsb
or
and
aad
aas
leave
or
add
adc
xchg
add
loopne
in
jo
and
inc
and
lock
cmp
dec
jb
hlt
aas
xchg
adc
xor
sbb
aaa
dec
adc
add
mov
add
rorb
test
movsl
pop
ja
decb
aam
cli
lahf
mov
cmp
cmp
hlt
repnz
dec
nopl
and
lock
mov
aaa
ret
test
mov
or
or
and
add
pop
ret
jo
adc
add
rorl
adc
jae
add
addl
loope
or
clc
inc
push
ja
repnz
inc
add
or
or
pushf
mov
dec
dec
test
inc
inc
inc
fbld
sub
adc
pop
inc
rcll
xchg
inc
jo
and
jl
or
decb
stc
outsb
in
rolb
cs
push
xor
insb
add
cmp
jl
shrb
inc
lock
push
negl
push
jecxz
ss
aaa
stc
mov
rcl
or
push
and
outsb
sbb
pusha
and
xor
add
dec
adc
addr16
and
cmp
pop
xchg
pop
pop
fs
or
cmp
repz
out
push
int
nop
fldenv
loop
sbb
sub
push
cmpsb
mov
dec
dec
or
push
fadd
lea
xor
xbegin
jnp
adc
inc
mov
xlat
es
add
or
dec
mov
lret
and
std
lcall
xchg
enter
je
jo
fisubrs
arpl
pusha
mov
xchg
dec
popa
xchg
addb
pushl
out
mov
inc
dec
dec
fld1
push
movsl
aaa
mov
cmpsl
xor
pushl
jae
push
mov
les
loope
add
mov
fidivrs
out
jmp
dec
hlt
fidivs
outsb
lret
shlb
lds
mov
and
stos
xor
push
cli
je
xor
bound
in
push
scas
int
in
and
mov
push
leave
test
lds
cltd
jl
shll
shlb
enter
inc
mov
xor
mov
pop
daa
outsl
jp
sub
mov
fdivrl
adc
xlat
pop
loope
stos
xchg
jle
jmp
es
push
dec
ret
inc
sbb
sbb
loope
mov
jns
mov
cmp
cmc
outsb
lods
pop
mov
pusha
into
mov
sahf
push
popa
pop
sbb
loop
adc
roll
cmp
idiv
int
or
pop
into
cwtl
sub
gs
aad
mov
pop
cwtl
xchg
cwtl
cs
pop
fs
insb
enter
std
fsubl
aad
sti
outsl
ret
daa
pop
add
sub
cmp
lods
and
xchg
movsl
into
fcomp
loop
xchg
je
mov
rcr
mov
push
xchg
bnd
mov
push
sub
inc
jmp
sbb
subl
or
and
xchg
js
mov
mov
stos
jne
xor
push
inc
sub
mov
xchg
enter
popa
pop
rcll
das
mov
xor
jbe
sub
pop
lcall
jae
in
movsl
pop
push
push
mov
lcall
std
stc
popf
cmovno
jl
sub
out
add
ds
popa
mov
add
rorl
loopne
repz
lret
jg
shll
pop
add
popa
add
cmp
cmp
xor
xlat
fstp
adc
adc
outsl
mov
popa
mov
js
mov
cmp
or
add
adcb
xchg
xchg
mov
sti
fucomip
insl
sar
dec
and
inc
push
cmp
movsb
mov
pushf
sbb
mov
or
in
ret
mov
push
sub
xor
cmp
pop
or
push
ret
lea
add
xor
addb
subl
push
loopne
xor
adc
add
lock
push
xchg
pushl
sarl
iret
add
cmp
dec
mov
adc
dec
aas
lahf
add
xor
adc
pop
add
outsb
add
pop
add
aaa
dec
cmp
test
adc
mov
loope
or
add
mov
rclb
test
and
xorl
add
inc
add
test
mov
inc
andl
sbb
push
std
idiv
sub
out
lahf
rol
and
popa
mov
push
lock
sub
loope
aaa
fmull
clc
push
pusha
mov
test
jbe
stos
and
push
fildl
add
insb
cvtps2pd
mov
aaa
xchg
test
mov
fucomp
loope
insl
sbb
out
in
jno
mov
lret
fidivl
or
xchg
lds
pop
or
das
rcll
movsl
repnz
in
jo
cmp
in
idivb
bnd
add
pushf
jb
pop
scas
in
push
in
mov
mov
adc
push
xchg
imul
sub
aad
mov
jg
cwtl
movsl
xor
mov
xchg
jno
jno
mov
fwait
mov
pop
in
cmc
ret
ud1
ficompl
xchg
mov
cli
jmp
shl
jnp
xor
xchg
xchg
jmp
into
mov
cmpsb
xchg
xor
cmp
mov
mov
call
jle
mov
adc
sub
sub
and
int
stc
mov
jb
es
test
out
sbb
sbb
sub
mov
stc
jle
out
cmpsb
mov
data16
add
inc
pop
gs
xchg
mov
mov
jb
movsb
inc
sbb
out
cmp
lods
mov
out
add
fucomip
xor
xlat
aas
sbb
mov
push
cli
in
jae
ss
jae
jns
jne
pop
jl
jl
mull
push
cmp
push
lret
pop
xchg
mov
fucomip
and
mull
adc
lret
clc
fistpll
ja
aad
cmp
dec
cmp
stc
cmp
cmpsl
clc
push
shlb
fwait
enter
js
mov
and
mov
xchg
cmp
lock
lret
fistpll
in
jmp
je
fdivs
mov
cmp
aad
or
mov
fcom
enter
movsb
jp
es
jo
add
sub
mov
fnstcw
jg
leave
clc
loop,pn
inc
rcr
outsb
sub
jae
jb
fcmovu
cld
pop
aas
negl
sub
les
out
test
push
movsl
test
adc
pop
dec
pushf
mov
cmp
mov
jge
pop
mov
push
dec
scas
pop
adc
add
push
loop
xor
pop
out
cmp
jecxz
lcall
decl
stos
stc
fldt
clc
scas
mov
lahf
mov
rclb
sbb
in
mov
dec
mov
out
dec
push
jge
outsl
cmp
stc
inc
icebp
add
xchg
jl
in
cmp
push
fstl
loopne
cli
cmpsl
iret
add
shrl
out
push
das
xor
push
cltd
cs
mov
mov
mov
rcll
out
iret
add
push
mov
fidivrs
int3
sbb
frstor
test
jns
fidivrs
fistpll
dec
pusha
sti
xor
push
push
dec
mov
push
gs
mov
icebp
in
adc
or
ja
lods
sub
pop
inc
jo
lret
mov
xor
inc
out
loopne
dec
in
rorl
addr16
cli
test
push
test
adc
xor
pop
sbb
jecxz
adc
push
testl
xor
dec
pop
hlt
xor
lret
xchg
push
mov
push
lcall
std
out
sti
cmpsl
pop
pushl
jl
ja
dec
xor
movsb
sahf
push
cmp
scas
cmc
ljmp
xchg
sbb
das
out
in
push
cmp
call
test
jge
mov
lea
pop
and
dec
push
into
push
insl
in
ja
mov
cli
xchg
pusha
and
shll
pop
xchg
dec
and
aam
repz
inc
aas
sub
pop
bnd
leave
jle
xchg
bound
fnsave
sarb
je
adc
pop
ja
add
bnd
fbstp
loop
in
or
inc
jo
pop
mov
or
rcrl
outsb
call
jle
out
into
sbb
inc
xchg
mov
scas
lods
lret
je
cmovb
insl
mov
jecxz
stc
dec
outsb
mov
dec
jge
jbe
push
cmp
rcll
fisttpll
in
push
jae
aas
push
movsb
scas
pop
mov
mov
incb
jne,pn
ss
pop
arpl
outsb
jge
and
das
jbe
aas
cmc
stos
mov
sarl
loopne
mov
pop
out
shr
ficoml
icebp
out
lods
out
aam
mov
js
xchg
cmc
popaw
xchg
in
es
ljmp
shll
mov
and
mov
mov
outsl
pop
inc
jnp
stos
xlat
fcomps
mov
pushf
scas
jle
sbb
xchg
lea
mov
rcrb
mull
aas
cmp
aam
lods
adc
jecxz
divl
or
rcll
push
ja
pop
dec
cmp
cmc
rol
mov
shlb
push
sbb
lret
inc
insb
jecxz
fdivrp
outsl
mov
int
fnstsw
adc
ss
dec
inc
and
or
lods
aaa
or
pop
sub
dec
mov
popa
mov
in
mov
jp
nop
into
mov
dec
jae
xchg
adc
pop
push
mov
jne
rolb
jne
pop
xor
pushl
in
fstps
hlt
lahf
lcall
adc
xor
fstps
fcmovnu
cli
dec
pushf
icebp
push
push
or
pop
das
pop
add
scas
orl
mov
ss
inc
imull
leave
pusha
mov
loope
push
xchg
outsb
dec
movsl
mov
push
mov
push
mov
scas
clc
cwtl
lahf
or
ja
mov
mov
addr16
ljmp
mov
cmp
sbbb
xlat
flds
lock
pusha
lds
mov
mov
incb
cmp
xor
dec
or
push
int
repnz
pop
rcl
test
loope
mov
jmp
test
pop
add
cmc
inc
cmp
enter
imul
aaa
push
movsb
clc
or
loope
pop
fwait
mov
and
ljmp
cli
insl
inc
cmp
enter
or
inc
arpl
gs
add
xor
cmpl
aad
scas
mov
pop
imul
pop
xchg
test
dec
or
mov
ss
jp
or
pushw
movsl
clc
adc
loope
xchg
int
jecxz
push
dec
imull
push
lahf
xchg
xlat
xchg
scas
sbb
xchg
jp
aas
stc
scas
mov
cmp
ss
dec
repz
ja
cli
into
into
cmp
mov
ret
mov
sub
popa
fcmovnu
cmp
mov
jne
fwait
adc
mov
inc
sbb
sbb
pop
push
mov
sbb
xchg
sbb
gs
inc
and
loopne
in
xchg
inc
fnsave
push
pop
xchg
sub
pop
add
test
and
xchg
push
lcall
sti
cwtl
ret
lods
mov
pop
je
outsl
jle
test
jge
cmpb
mov
push
imulb
inc
int
cmp
imul
test
roll
dec
insl
fs
sub
fs
or
out
insb
sbb
lods
in
mov
inc
call
cmc
jl
ficoml
pop
test
pop
or
out
cmp
mov
lcall
jp
jecxz
add
popl
lds
popf
imul
pop
mov
into
pop
cli
int3
push
or
pop
les
jbe
push
xchg
ljmp
mov
xor
aam
push
prefetch
or
xor
sbb
mov
jp
jnp
rcr
into
sub
inc
xlat
ficoml
xor
in
movsl
or
sub
mov
repnz
hlt
sub
jbe
sbb
fwait
and
shrb
xchg
jmp
imul
fdivrl
cwtl
cli
xchg
push
inc
and
mov
stos
cmp
lods
mov
fildll
arpl
nop
cmp
lcall
cmp
inc
lods
mov
dec
arpl
adc
add
int3
in
mov
pop
stos
aas
repz
push
inc
pop
cmp
andb
aas
push
stos
aam
imul
in
loopne
cwtl
ret
dec
popa
popa
mov
cmp
jge
cmp
adc
cmpb
xchg
cmp
hlt
pop
sub
adc
cltd
ds
ret
adc
or
ret
mov
mov
inc
push
jb
loop,pn
pop
paddd
addr16
iret
fisubrl
pop
dec
out
jg
icebp
cmp
cmp
inc
enter
and
and
mov
adc
push
sub
xor
add
ret
lea
add
adc
cmp
add
add
stos
rcll
lock
ret
fmull
test
lock
mov
pop
outsb
pop
mov
rcll
out
sub
inc
andl
mov
js
xor
call
hlt
add
push
mov
adc
sub
pop
lret
push
mov
add
push
sub
pusha
mov
loope
or
adcb
insl
jo
scas
sbb
push
sub
adc
inc
add
mov
sbb
pop
mov
xlat
inc
leave
cmc
inc
ljmp
mov
adc
jp
dec
sub
icebp
pushf
push
push
testb
xor
pop
sahf
loope
shlb
jmp
push
and
popf
mov
mov
mov
popl
xchg
sbb
into
pop
sub
cmc
loopne
stos
xor
pop
loop
xchg
xchg
aas
sbb
pop
push
xchg
adc
mov
xchg
lahf
mov
cltd
out
js
pop
xor
jl
imul
int3
jno
xchg
pop
xlat
popf
fmull
rcrl
fistpl
mov
leave
ss
mov
lods
fdivr
pop
pusha
dec
loope
aas
mov
mov
leave
mov
push
pop
jg
test
fildl
movsl
sbb
add
cmp
xor
fs
mov
out
arpl
xchg
push
lods
push
jg
and
dec
repnz
leave
movsl
jl
and
sub
addr16
jp
xchg
aam
js
adc
inc
cmpsl
aas
das
lcall
inc
test
shll
mov
xchg
and
jbe
repnz
adc
aam
mov
sbb
jl
popw
adc
jae
iret
add
insl
movsl
rol
shl
xor
jo
and
mov
xchg
fdivl
leave
jb
xchg
in
adc
leave
sbb
div
sets
jne
jle
jns
sub
nop
sbb
stos
clc
int3
stc
jp
out
jae
lahf
push
jecxz
jp
fnstcw
outsb
dec
or
sbb
mov
hlt
mov
ljmp
lods
sub
cmp
mov
mov
dec
mov
fisubrs
sub
stos
inc
sub
pushf
rorb
lcall
pop
fdivrl
jle
jg
in
adc
loope
pusha
mov
add
nop
addr16
ffree
push
sbb
lcall
out
xchg
cmpsb
punpckldq
and
loop
jge
stos
pusha
dec
dec
ret
jmp
mov
rorl
leave
mov
sub
fstpt
sarl
add
jp
adc
out
push
cmp
inc
sub
inc
gs
lret
sbb
js
cltd
in
dec
movsl
sub
mov
test
add
push
aaa
jns
call
sub
lods
lretw
dec
arpl
mov
mov
das
daa
xchg
inc
clc
xor
xchg
xchg
jns
imul
mov
iret
scas
cmp
adc
sbb
xchg
and
push
in
dec
leave
sub
jecxz
or
xchg
gs
fcoml
mov
xchg
rolb
mov
inc
or
push
inc
jg
fidivs
in
pop
cmc
sub
iret
nop
dec
jle
pop
jle
mov
and
xchg
lahf
leave
movsb
cmp
jmp
pop
ja
iret
cmp
je
mov
bound
imul
addb
mov
mov
mov
bound
sti
movsl
cld
lahf
stc
addr16
inc
jmp
nop
mov
jp
sub
loopne
mov
lret
cltd
movsl
ret
arpl
mov
mov
es
stos
outsb
lods
movsl
fwait
loope
stos
lea
jbe
mov
lods
jne
fs
mov
jecxz
fbstp
fimuls
jmp
cmp
mov
push
push
dec
mov
insl
and
push
xor
loop
test
icebp
aas
mov
cmp
fldcw
lret
push
imul
cli
cmp
test
cmpsb
push
sbb
mov
cmc
sbb
push
pop
icebp
cld
xchg
inc
loop
ficoms
ss
mov
pushf
mov
call
add
dec
cs
dec
dec
pop
push
cmpsb
mov
fwait
pop
out
std
xchg
push
add
or
mov
into
push
test
ds
test
mov
lock
pop
outsb
add
fildl
popf
rcrl
mov
lret
jg
sub
jmp
lods
xchg
sbb
xor
push
pop
js
pop
sarb
jnp
jmp
jbe
int3
pop
mov
sbb
rcrl
xchg
jmp
xchg
mov
sub
std
push
mov
lret
adcl
pop
jb
sub
jmp
mov
xchg
sub
or
jnp
aam
mov
in
es
aad
jl
push
sub
xor
int3
jl
or
sbbl
fmull
popa
cmp
cmp
andl
repnz
sbb
ret
outsl
sbb
das
cmp
pop
mov
movsb
movsl
inc
cmp
push
mov
je
add
inc
inc
cmpsb
repz
xchg
js
push
fdivrp
xchg
mov
xor
lret
in
mov
outsb
lods
xor
sbb
inc
paddusw
or
rcll
jo
mov
jo
xchg
xchg
cld
add
jo
nop
cld
add
cmpsl
sarb
adcb
xchg
and
dec
pop
add
pop
insl
jne
lret
xor
cmp
or
mov
dec
cmp
pop
scas
loope
shlb
cmp
mov
adc
sbb
push
mov
inc
inc
adc
add
and
sti
adc
push
jnp
lock
xor
call
js
fucomp
xlat
push
clc
in
cmpsl
dec
rcrb
jb
stc
jne
jp
sub
mov
test
repnz
mov
cmp
stos
jl
mov
adcb
icebp
push
or
arpl
repnz
invd
add
add
punpcklwd
inc
xchg
add
sahf
or
inc
sbb
or
add
addr16
test
pop
and
fmuls
sub
push
push
inc
or
pop
push
and
js
ljmp
ret
jnp
jmp
mov
test
xchg
mov
inc
mov
js
adc
jl
or
pop
push
push
adc
push
mov
push
addb
stc
lahf
push
je
aad
test
pusha
mov
loope
or
add
and
movsl
addb
addl
sbb
add
inc
pusha
push
or
and
mov
add
popa
pop
inc
jge
sbb
add
std
add
ljmp
fwait
cmpsb
adc
push
rolb
shlb
enter
mov
push
lock
sbb
loope
aaa
fmull
clc
push
pusha
mov
cmp
out
xchg
push
adc
push
sahf
outsl
push
fs
icebp
jb
lods
lods
add
mov
aaa
xchg
arpl
xchg
pop
mov
or
mov
stc
iret
cmp
pop
fsubrl
and
out
inc
cmpsl
sub
addr16
cmp
and
xchg
push
enter
jbe
lret
jmp
arpl
repnz
push
arpl
mov
mov
mov
mov
repz
lock
decl
lret
xchg
imul
and
mov
movsb
out
mov
icebp
lret
int
xchg
and
xchg
incl
mov
jno
ds
jle
ds
sub
ds
scas
test
mov
lret
arpl
mov
jle
dec
fdivl
arpl
adc
xor
loopne
xchg
call
test
mov
adc
sti
rorb
cmp
inc
inc
popa
mov
xchg
hlt
dec
aam
std
cltd
sbb
inc
outsl
cmpsl
gs
jb
mov
dec
add
fmuls
jmp
cmp
or
hlt
in
mov
xchg
cltd
cmp
cmpsb
dec
mov
pushf
stos
test
pop
add
lahf
fisubs
sub
aam
js
dec
xchg
xor
sahf
sub
inc
jbe
clc
jecxz
xor
stc
ss
dec
cmpsb
pop
pop
or
push
mov
jle
lods
cwtl
push
imul
adc
test
imul
je
mov
mov
xchg
jg
xchg
xor
in
rcl
shll
int
repnz
dec
orb
popa
cmc
jg
cmp
adc
dec
pop
ljmp
and
jno
push
inc
sub
push
xchg
icebp
xor
je
push
fbstp
test
stc
pushf
gs
jecxz
mov
andl
lods
aaa
lods
jbe
loope,pt
xchg
push
sbb
pop
xchg
jl
test
fidivrs
xchg
aam
jnp
jp
repnz
xlat
jl
outsl
or
fimull
inc
leave
dec
or
pop
jle
loop
aam
in
hlt
fs
sub
mov
je
or
loop
andps
mov
push
push
out
dec
pop
mov
scas
mov
cmp
sbb
or
dec
sar
pop
fiaddl
xor
pop
mov
sbb
scas
fs
pushf
mov
mov
adc
pushf
lcall
imul
ja
fnsave
dec
int3
repnz
enter
fmuls
ds
neg
pop
cli
or
cmpsb
addr16
adc
dec
cmp
cltd
sub
push
cmp
leave
sbb
xchg
es
or
out
loop
sbb
lods
add
inc
lods
jo
in
mov
mov
mov
cmp
jle
insl
out
push
dec
scas
sbb
scas
adc
aas
xchg
sbb
pop
scas
cld
inc
scas
mov
test
pop
push
loop
inc
arpl
adc
ja
xor
call
xchg
xchg
fucomip
xor
es
pop
lea
loope
adc
jo
dec
lds
insl
push
push
cmp
push
pop
dec
ss
lahf
lds
cltd
or
sti
jns
mov
aad
rorb
mov
je
sahf
inc
and
mov
jecxz
imul
xchg
push
lods
movsl
mov
mov
push
repz
xchg
xchg
cmp
sbb
push
iret
push
jbe
mov
xchg
jb
out
pop
dec
sub
push
push
std
mov
loope
ret
je
jge
cs
addr16
pop
mov
test
loope
ror
lods
hlt
xchg
sbb
pop
sbb
sbb
mov
mov
call
rclb
pop
out
sarb
push
dec
les
mov
push
lds
dec
xor
add
sbbl
mov
jmp
rorb
xchg
fimull
mov
jle
cmpsb
ds
ljmp
cmpsl
xchg
jmp
mov
outsb
mov
lds
and
sub
adc
adc
jp
ret
sbb
dec
in
pushf
cli
xchg
cmpb
roll
mov
fstps
jle
insb
pop
das
aas
push
xlat
or
mov
icebp
imul
imul
shlb
and
jo
pop
pop
sarb
outsb
loop
pop
scas
loope
in
mov
arpl
cmpsb
popf
scas
repnz
fistl
sbb
loop
xor
add
insb
jno
jge
iret
clc
hlt
cmp
int
or
call
mov
shr
pop
adc
dec
test
sub
shlb
ss
dec
int
pop
push
push
jmp
mov
inc
sahf
sbb
push
xor
fisubrl
scas
mov
icebp
divb
fdivr
aad
push
int3
std
lock
popf
or
jne
mov
dec
jge
sub
mov
fisubrs
xchg
pop
or
and
sbb
jns
push
roll
cmp
adc
in
push
sub
mov
loopne
rol
pop
sub
idivb
mov
push
call
es
lahf
sub
pop
les
insl
rcrl
dec
int
loopne
xor
cmp
sbb
xor
fdivrs
into
int3
mov
inc
push
out
mov
cwtl
sub
mov
cmp
inc
icebp
fwait
pop
fndisi(8087
movb
push
xchg
aas
sahf
call
jae
push
adc
fimuls
lods
rorl
mov
jb
and
je
insl
pop
je
xchg
js
jae
push
mov
dec
data16
cmp
and
inc
jb
pushf
push
sub
dec
jmp
scas
mov
jae
or
sbb
out
mov
es
rcr
test
or
daa
jge
sti
in
pop
int
rolb
insl
mov
mov
jg
cmpsl
hlt
scas
push
sub
es
xchg
xchg
out
fldcw
dec
scas
movsl
jnp
nop
jecxz
sbb
sub
mov
jl
sbb
int
cmpsb
sbb
loope
cld
js
cmpl
ret
cmp
stos
rol
dec
lods
and
push
addr16
jbe
adc
sub
jmp
sbb
push
xchg
sbb
aad
mov
pop
sti
pop
adc
pop
push
scas
mov
lods
test
jg
push
push
fstpl
mov
data16
cmpsl
push
sarb
repnz
jecxz
rclb
add
jb
or
scas
test
push
mov
mov
sbb
rcl
std
sahf
mul
and
push
xchg
dec
ljmp
or
roll
sar
icebp
lcall
or
mov
and
int
fwait
inc
mov
sub
aaa
je
fisttps
popf
xor
mov
test
loope
adc
gs
iret
cs
repnz
dec
fistps
pop
inc
rcrl
inc
sub
xchg
roll
lret
loop
cmpsb
mov
hlt
mov
jns
fsubrp
lock
arpl
mov
sub
arpl
or
cmp
jnp
repnz
in
cmp
add
outsl
loop
clc
adc
fildll
stc
repnz
xor
icebp
clc
bound
jp
bound
test
lcall
stos
addr16
lret
mov
and
cmpsl
push
ljmp
pminub
cmp
sti
into
push
push
cltd
mov
or
bound
loop
nop
mov
lods
sub
inc
jne
pop
loop
out
sbb
mov
xlat
adc
fdivrl
movsl
in
insb
pop
das
nop
adc
mov
nop
repnz
rolb
push
fs
imul
add
fsubp
je
pop
xchg
outsl
mov
sbb
lret
mov
cli
lds
adc
jle
xor
call
nop
mov
xchg
mov
cmpsl
mov
das
jmp
push
jbe
popa
testb
cli
jle
loopne
and
ficompl
bnd
jno
mov
pop
pop
jo
xlat
movb
mov
and
mov
neg
lcall
aas
jecxz
cli
adc
mov
movsl
sbb
notl
in
fdivrl
xlat
ds
lods
cmp
call
decb
pop
leave
es
enter
inc
cmp
mov
sub
shrl
cmp
mov
test
fistl
aas
sarb
rorl
sub
xchg
out
sti
sub
lcall
fmull
lret
das
orb
mov
sbb
dec
les
cmp
arpl
fisubrs
pop
addr16
aad
and
bound
push
xor
xor
xlat
mov
divb
push
iret
ja
mov
or
dec
jns
mov
imul
dec
xchg
ljmp
add
loop
int
into
lret
test
sbb
fnstcw
cwtl
dec
jle
mov
jae
and
lods
insb
repz
mov
or
inc
jg
loopne
aad
mov
mov
arpl
jns
sbb
lea
stc
fidivl
jb,pn
lods
xchg
hlt
inc
jmp
or
cmc
scas
sub
jg
pop
es
pop
dec
or
jae
jge
leave
sbb
mov
movsl
inc
mov
cmp
xchg
xor
stos
mov
adcl
lret
cli
shlb
and
aas
ficomps
into
jno
adc
mov
lds
cmc
out
fidivs
xchg
outsl
sbb
lret
cmp
xchg
and
adc
shlb
mov
test
gs
ss
int3
cli
aas
repz
repz
mov
and
push
movsb
xchg
pop
xchg
mov
sbb
mov
add
lock
popa
jns
mov
dec
in
cmpsl
jne
arpl
add
mov
xchg
inc
repnz
lret
imul
jne
dec
data16
ret
pop
cmp
push
cmpsl
lcall
xor
push
mov
leave
mov
mov
lods
mov
pushf
mov
mov
jge
das
and
xlat
pop
jmp
and
cmp
or
cmp
add
fidivs
sbbl
xchg
dec
je
into
stos
ja
mov
scas
jge
cmp
xchg
mov
xchg
aad
js
in
sub
idivb
shl
sub
lds
dec
sahf
push
jle
sub
xor
sbb
std
pop
xchg
pop
cmpsl
sahf
sti
rolb
jno
movl
insl
lods
repnz
movsl
jg
das
inc
test
dec
mov
inc
inc
test
pop
lret
jg
icebp
jg
lcall
mov
mov
stc
push
jns
int
and
movsb
stos
ficoml
adc
stc
clc
inc
mov
add
mov
sbb
loop
fldenv
stc
push
sbb
and
jo
push
hlt
inc
aas
lock
push
test
jge
and
in
xor
push
leave
bswap
xor
repz
shl
mov
bnd
push
jns
ret
add
cmp
add
stos
xchg
mov
adc
mov
sti
in
mov
cmp
dec
stos
dec
pop
or
adc
stos
test
mov
repz
rolb
sbb
loopne
mov
popl
insb
fisubl
push
pop
mov
adc
gs
stos
jne
mov
xor
xor
fwait
outsb
std
in
fsubs
mov
jge
cmc
xchg
cmp
xchg
int
mov
in
sti
jl
cli
sbb
dec
bound
fidivrs
fisttpll
imull
xchg
mov
ds
cld
mov
cltd
inc
mov
pop
subb
xchg
add
leave
sbb
ret
mov
sti
out
sti
sar
outsl
out
fidivs
cs
cld
and
stos
imul
lahf
jmp
aaa
dec
shrl
cmp
jge
pop
sub
cld
aam
or
fs
rorb
ficompl
mov
inc
ficoms
xchg
out
xchg
lret
aas
dec
jno
and
rcl
adc
fwait
adc
adc
lret
cmp
jmp
mov
sub
adc
pop
fimull
insb
add
or
push
push
lret
inc
out
mov
add
or
pop
clc
int
dec
das
jle
push
mul
pop
push
jnp
insl
ja
or
xorl
cltd
add
pop
pusha
shll
or
shll
test
aam
add
cmpsl
lods
movsb
push
iret
rol
mov
or
xchg
add
add
addr16
push
shl
imul
pop
add
mov
rcl
and
and
sbb
test
test
sub
mov
test
xor
lods
add
cmp
rolb
insl
inc
or
pop
leave
or
iret
pop
addl
mov
cld
xor
pop
lock
and
getsec
add
add
aad
addb
shlb
xor
sahf
push
inc
cmp
sbb
xor
xchg
mov
neg
lret
sarl
inc
jg
inc
out
fucomip
ja
or
add
pop
rcll
imul
arpl
xchg
ret
cmpsl
or
or
test
mov
add
inc
jo
add
pop
or
cmpsl
aad
push
aam
inc
inc
or
test
inc
scas
popa
sub
push
xor
or
cmpsl
lret
inc
or
movsl
sbb
lock
and
jbe
test
adc
xchg
addl
lret
cmp
push
jnp
pop
inc
inc
push
xor
mov
ret
mov
push
lock
or
shlb
or
push
add
mov
inc
pop
mov
pop
std
cmp
pop
sub
sub
lds
push
mov
ds
test
outsl
daa
bound
pop
cmpsl
cmp
sar
ljmp
mov
aas
jns
jae
dec
fdecstp
cmp
adc
lret
inc
or
adc
jnp
ret
fiadds
dec
xor
testl
lods
sbb
cmpb
in
jle
cmp
mov
sub
jae
mov
sbb
and
dec
lret
int
test
idiv
stos
or
mov
aad
push
sar
pushf
add
xlat
pcmpeqw
sub
adc
lea
mov
inc
mov
push
sahf
pop
jne
cli
shl
or
sbb
cld
and
subb
or
pop
ja
sbbl
push
insl
into
jnp
aam
out
xchg
xor
repz
pop
xlat
or
xchg
sub
cmp
jns
pop
scas
shl
fadds
scas
icebp
adc
xchg
pop
or
jno
dec
xor
out
jns
sbbb
push
in
pushf
xlat
pop
mov
inc
adc
lea
jecxz
mov
dec
xor
faddp
push
call
mov
icebp
fldenv
push
fistpll
decb
cmp
shrb
inc
lretw
or
or
dec
xor
push
scas
test
pop
xor
sub
mov
sbb
daa
insb
dec
mov
fwait
xchg
jbe
jbe
and
mov
out
jnp
dec
imul
pop
xor
jge
mov
jle
rclb
sbb
cmc
sub
aas
push
js
rcrl
cmp
and
mov
mov
hlt
mov
lods
add
pop
and
mov
mov
inc
imul
pop
fwait
jno
aaa
movsb
cmp
fidivl
sbb
leave
popf
push
mov
outsb
call
sbb
jg
push
mov
cmp
jns
lea
inc
and
out
mov
mov
and
ret
jl
push
movsl
push
lahf
pop
pop
push
pop
in
xchg
push
fnstenv
lcall
adc
xchg
cltd
and
cmpsl
xchg
insl
mov
lcall
xor
jns
ficoms
inc
xor
adc
hlt
cmp
xchg
in
sub
outsl
iret
data16
pusha
mov
adc
sahf
mov
cwtl
in
idivb
adc
mov
out
std
ja
aam
xor
xchg
xchg
jbe
inc
pop
dec
int3
pop
iret
icebp
mov
sub
movsl
js
call
in
lds
xchg
sub
mov
inc
fwait
pop
dec
jl
sbb
jb
lea
cmp
push
push
jne
sub
cmp
xlat
inc
xchg
cs
fdivl
dec
jb
aad
repz
iret
cwtl
cs
jae
sub
push
fstpl
push
repz
addr16
cwtl
call
mov
mov
or
mov
imul
data16
jge
aas
pushf
scas
stc
push
hlt
in
out
into
std
xchg
lret
lods
ja
ffree
and
fbstp
daa
pop
jl
popf
pop
sbb
movsb
mov
sti
push
adc
sti
pop
jns
mov
setp
fiadds
cltd
inc
mov
mov
xor
jae
mov
inc
mov
rorl
or
and
mov
adc
aaa
mov
es
enter
jno
add
xchg
call
fprem
es
inc
lods
push
sub
adc
sub
cs
mov
dec
cmc
dec
mov
adc
jae
mov
jb
in
ljmp
pop
mov
pop
dec
mov
not
dec
pop
paddw
cmp
icebp
adc
xchg
pop
ret
in
xor
mov
pop
leave
dec
jns
jecxz
insl
xor
cmc
loopne
mov
push
add
icebp
sbb
sub
shll
or
outsb
test
jl
jecxz
mov
test
pop
jmp
push
mov
jge
clc
ficomps
call
push
mov
pop
cmp
and
test
jnp
sbb
mov
dec
pop
push
scas
in
ficomps
repnz
xchg
sbbl
movsl
insb
push
mov
aad
lcall
xor
call
outsl
mov
sahf
sahf
sbb
inc
addr16
out
sar
cmp
inc
loop
fwait
push
incb
call
jmp
mov
dec
sbb
mov
in
sahf
cld
and
out
sbb
mov
int
gs
pusha
mov
scas
rol
pop
test
pop
add
mov
xchg
xor
pop
adc
and
mov
push
cmp
std
jl
fwait
sar
cmp
aad
hlt
mov
in
mov
mov
and
push
fbld
js
arpl
inc
lret
push
cmpsb
mov
push
popf
mov
rcl
cld
or
jbe
dec
andb
inc
insb
xchg
out
loop
stos
and
ja
outsl
leave
test
in
ret
mov
dec
or
mov
adc
daa
lahf
in
inc
dec
cmp
outsl
sub
inc
icebp
out
jmp
daa
dec
mov
sbb
rcpps
mov
in
pop
pop
cli
shrb
rcll
ljmp
scas
cmp
call
dec
ja
adc
dec
push
push
das
stc
dec
stos
dec
sbb
loop
fcmovbe
mov
repz
sub
stos
xchg
into
inc
push
pop
xor
aad
daa
sbb
es
lret
stos
negl
in
pop
fnstenv
js
lret
call
ja
cmp
mov
and
sahf
mov
fwait
lret
out
enter
dec
xchg
fisubs
inc
fstps
dec
popf
test
int
lock
js
call
scas
jns
std
outsb
clc
mov
mov
mov
insl
jp
iret
hlt
ja
into
dec
out
int
mov
bound
adc
ss
int
call
pop
add
fisubrs
fs
cmpsb
std
imul
lcall
int
add
jecxz
xchg
jno
xor
xor
add
cmp
inc
test
add
mov
add
sub
repz
hlt
int3
pop
loope
out
aaa
add
pop
add
cltd
stc
rolb
xorb
mov
and
in
xchg
pop
vpsubd
adc
add
push
push
jbe
push
les
or
scas
loope
shlb
inc
jnp
cli
ja
cli
idiv
enter
sbb
push
adc
ficomps
mov
inc
test
lcall
dec
cmp
mov
jns
call
push
xchg
adc
loope
push
adc
add
mov
xor
jae
nop
test
pusha
mov
loope
or
clc
cmpsl
sti
imul
jl
fistpll
int3
lahf
mov
mov
add
push
pushf
jg
pop
test
sahf
mov
push
cmp
test
cmpsb
test
lods
add
mov
shlb
das
call
and
or
adc
pusha
loop
negl
push
mov
ljmp
push
push
subl
push
loopne
xor
adc
add
loope
cmpsl
add
or
inc
ljmp
or
jae
loopne
lock
cld
popf
js
sbbl
shll
and
cmc
aad
addr16
jg
jl
add
xor
add
loop
jo
sbb
jl
mov
lcall
jp
shlb
outsb
inc
jl
test
sti
or
outsb
ret
leave
daa
sbb
add
test
jmp
cmpsb
dec
and
dec
jle
mov
test
notl
dec
jp
push
inc
in
std
ja
divl
pop
xchg
add
test
enter
pusha
sbb
repz
mov
sub
mov
pushf
sub
and
stos
aad
mov
out
loope
sub
cmc
jl
pusha
xchg
iret
cmc
cltd
xchg
xor
mov
std
xchg
popa
or
mov
jmp
cmp
mov
mov
ds
cmp
jne
mulb
cmp
fs
push
lods
data16
shll
clc
inc
mov
outsl
inc
pop
jg
into
stc
sti
in
sub
or
js
sbb
jle
repnz
mov
mov
and
addb
addl
inc
jb
ficomps
icebp
je
sbb
xchg
mov
mov
sbb
clc
and
iret
dec
enter
sub
xchg
test
pop
mov
inc
inc
push
lret
into
mov
out
cmp
std
lcall
sbb
pop
adc
insb
out
jns
sbb
fs
std
and
addr16
xchg
adcb
ds
jp
pop
int
arpl
mov
xor
out
cwtl
or
push
and
test
push
inc
ds
jmp
jecxz
sbb
std
mov
lods
fidivl
loope
sub
imul
ss
in
lret
cld
in
loope
and
sahf
sub
mov
ret
fcoml
ret
xor
fnstcw
cld
insb
sub
sub
das
adc
loope
out
popf
adc
pop
sbb
mov
push
xchg
push
mov
mov
out
fstpl
xor
mov
cmc
leave
pop
je
ds
dec
xchg
aas
and
pop
dec
push
aam
js
arpl
xchg
imul
inc
mov
push
mov
adc
ss
inc
pusha
loope
adc
jmp
das
test
cmpl
mov
add
mov
scas
and
in
sbb
pop
add
pop
mov
add
inc
jb
dec
cltd
stos
shll
xchg
mov
pushf
incl
stc
sti
sub
push
cmovns
jne
inc
xchg
ja
inc
and
subl
lds
or
mov
cmpsb
dec
int3
add
cwtl
loope
and
mov
mov
ds
fildl
test
js
or
add
add
les
scas
ficompl
fsincos
jg
xchg
popf
sbb
aas
push
rcll
nop
subb
add
or
hlt
add
shll
int3
popa
push
cmp
cmp
and
or
cmpsl
inc
pop
test
inc
sbb
mov
add
sbb
dec
adc
sbb
rorl
xor
or
sub
push
add
movb
sbb
loopne
pusha
sbb
add
pusha
xlat
inc
leave
dec
test
or
mov
test
movzwl
pop
js
add
outsl
iret
mov
xor
add
add
cmp
or
add
dec
mov
loop
fcoms
btc
orl
pop
jmp
clc
inc
adc
inc
lods
arpl
frndint
out
mov
or
loope
lahf
inc
addr16
or
push
fisubs
daa
cld
cmp
ret
adc
add
jae
fs
hlt
inc
inc
push
push
lahf
call
dec
dec
ror
xchg
fidivl
ds
sahf
mov
and
cmpsb
mov
movsb
pushf
ret
adc
jecxz
mov
out
lret
pop
jle
cli
mov
mov
mov
loopne
and
or
adc
icebp
add
js
inc
pop
push
nop
mov
aad
cmp
test
jne
jmp
shr
xchg
mov
xchg
cmpsl
dec
push
ret
and
adc
pop
dec
jae
push
cmp
nop
loope
rcrl
sti
xor
insl
pop
addr16
lret
push
xchg
movsl
jo
fwait
lock
ds
subb
movsl
dec
mov
dec
imul
out
aas
push
ljmp
movl
cmp
jge
loop
frstor
in
adc
aaa
stc
cmp
ds
in
mov
cli
out
pop
fldcw
pop
pop
movsl
mov
es
push
push
cmc
cwtl
lea
fcoms
add
lcall
xor
inc
int3
ret
jg
mov
stc
push
jge
mov
pop
xchg
inc
stos
lret
xor
dec
sub
xor
jp
jle
mov
out
insl
or
roll
fildl
in
mov
sub
pop
fidivrl
sbb
jns
sub
lahf
jmp
mov
sub
ret
mov
imul
mov
jg
xchg
out
inc
xchg
dec
adc
aam
sub
fcmovbe
shlb
ficoml
pop
in
sub
jne
cltd
sbb
push
out
outsl
jnp
pop
pop
ficomps
pop
xchg
xor
mov
jle
xor
pop
imull
mov
pop
sti
clc
mov
scas
jp
aaa
xchg
sub
sub
fs
fcompl
add
xchg
cmp
sbb
sbb
pop
pop
xchg
adc
lock
xchg
bound
fsubrl
sbbb
push
loope
push
movsb
leave
xchg
mov
cmc
popf
bound
ficomps
movsl
jle
jnp
push
and
pop
stos
xor
mov
pop
jge
xchg
push
xor
lods
into
test
push
fmull
mov
push
push
jne
int3
pop
pop
clc
rcrb
mov
and
and
stc
int3
inc
mov
add
sbb
push
inc
mov
mov
mov
lahf
fists
and
stc
pusha
imul
sbb
push
insb
jno
or
mov
jl
jno
dec
out
ss
jp
loop
or
arpl
notl
push
in
mov
mulb
jecxz
popa
jp
outsl
or
idivl
ret
and
xor
stc
ss
das
jne
rorl
adc
in
imul
int3
push
jnp
push
movsb
inc
pushf
inc
add
shl
jmp
sub
stos
pop
pop
mov
fisttpll
jno
fcoml
cld
and
push
inc
ficoms
lcall
popl
mov
mov
rorl
bound
mov
int
adcl
movsb
icebp
pop
add
jge
sub
mov
fcomp
pop
movsl
jge
nop
lahf
mov
push
xor
cmp
lods
inc
sbb
sub
mov
outsl
decl
adc
jae
dec
lea
mov
jo
pop
lock
idivb
lcall
pop
lock
xchg
or
xchg
mov
flds
cwtl
mov
sbb
pushf
cmpsl
dec
popf
rcrb
outsb
mov
push
pop
repz
jge
jecxz
lret
mov
in
cmp
xor
flds
xlat
xchg
push
mov
sbb
and
xor
pop
pop
jo
cmp
fsubl
jns
scas
adc
jecxz
dec
or
push
mov
sbb
stc
push
push
aam
mov
fucom
testl
jle
push
jbe
jge
xor
jle
js
mov
and
cmp
repz
jmp
push
fimull
and
ja
insl
negb
fwait
dec
mov
jg
shl
push
xchg
pop
outsb
repnz
push
jns
mov
mov
scas
movsl
fwait
inc
in
and
xor
mov
dec
bound
push
rep
cli
pop
lock
mov
mov
clc
cmp
icebp
pop
hlt
sub
int
iret
ret
mov
jecxz
aas
add
pop
sub
mov
aad
out
jecxz
push
scas
push
cltd
ds
cmp
lahf
jl
rcrb
fstpt
adc
push
int3
loopne
jp
das
rolb
shlb
pop
push
call
dec
fnsave
inc
stos
mov
cmpsl
cmp
xchg
scas
adc
ret
daa
pop
xchg
arpl
xlat
clc
and
dec
pop
pop
int3
and
je
stos
adc
xchg
jg
jg
test
clc
lods
in
test
stc
addr16
inc
inc
xchg
push
cmp
popf
jl
scas
mov
push
scas
shl
movsl
in
pop
xchg
pop
jecxz
ret
mov
pop
and
mov
loope
shl
mov
test
in
jmp
push
mov
or
in
rolb
das
sub
push
test
scas
fistpl
sarb
in
rclb
xchg
movsl
adc
jmp
push
popf
test
lahf
or
add
fbstp
push
mov
iret
sub
not
out
outsl
or
mov
pop
faddp
out
in
jbe
mov
mov
in
xchg
sbb
sub
jecxz
lea
dec
rorb
mov
pop
fwait
sbbl
sbb
movq
adc
xor
fdiv
sub
popa
fs
fwait
mov
jnp
cmc
dec
jle
rcll
jle
mov
push
movsl
mov
in
sbb
xchg
pop
mov
call
dec
sar
daa
mov
and
jmp
mov
mov
sub
rol
cmc
popf
dec
xchg
aam
aas
mov
bound
sbb
and
dec
fldenv
pop
adc
fwait
sbb
shr
add
insl
sub
testl
nop
das
int
negb
pop
stos
imul
or
ja
mov
cmp
sbb
mov
jge
add
jmp
mov
mov
jne
or
sbb
mov
mov
stc
call
fwait
pusha
push
pop
push
or
dec
mov
mov
pop
push
fisttpll
pop
in
testb
xchg
in
imulb
dec
out
xchg
jp
ret
jno
pop
sarb
std
adc
lods
push
cmpl
out
xor
clc
jbe
cmp
fnstsw
daa
dec
jbe
mov
add
cli
lcall
jg
jne
jne
aaa
dec
mov
mov
les
mov
scas
jl
flds
not
fcoms
fists
push
mov
jmp
rorb
dec
sarb
xchg
iret
mov
cmp
pop
dec
inc
arpl
popf
xchg
outsl
cmpsb
mov
pop
dec
ss
pop
sub
sbb
cmp
outsb
jnp
cmp
and
cmpsb
push
jp
cmp
out
adc
sahf
hlt
mov
and
jmp
mov
xorl
call
cmp
or
push
lahf
dec
addr16
je
cmc
cmp
call
enter
inc
fadd
cmp
jg
movsb
imul
sti
ret
mov
mov
pop
push
arpl
pop
sub
lret
mov
repz
add
pop
mov
push
push
cli
jo
aam
jg
leave
dec
ljmp
sbb
mov
sarl
stc
stos
cmc
mov
pop
ja
xchg
jae
lea
pop
cltd
fists
mov
push
and
xor
cmp
es
popf
push
inc
xor
jecxz
mov
out
mov
mov
or
add
sbbl
or
mov
xchg
jmp
and
mov
cld
or
call
sub
mov
dec
and
repnz
jge
or
mov
lret
bnd
or
jmp
or
mov
lock
jl
jle
in
cld
xor
or
fsubrl
sub
dec
dec
imul
adc
xlat
mov
adc
scas
and
loop
in
adc
push
xchg
call
xchg
mov
aad
push
ret
pop
mov
movsb
outsb
aas
xchg
pusha
pop
sbb
iret
out
lods
mov
push
jo
daa
or
dec
ret
jg
pop
jge
or
mov
push
jmp
xor
nop
js
xchg
dec
pop
dec
sbb
in
and
push
push
xor
pop
xor
cmpsb
lahf
and
int
dec
cmp
fs
or
pop
mov
pushf
add
xor
imul
lahf
idivl
jecxz
call
in
aaa
fsubrl
add
call
int3
scas
cmpsb
fwait
daa
cmp
cmpsb
push
mov
mov
notl
test
sub
scas
addr16
cmp
mov
pop
adc
mov
mov
call
outsb
push
into
xchg
stc
in
jg
out
loope
mov
outsb
jno
lods
insb
sbb
popf
loope
movsl
mov
rclb
imul
sub
xchg
push
mov
xchg
cmc
out
int
clc
add
mov
scas
jecxz
mov
jmp
mov
daa
push
mov
jg
jp
ds
lods
push
test
int
mov
sub
popf
movsl
adc
ret
cli
out
mov
adc
cmp
xor
scas
push
adc
mov
jnp
je
pop
repz
sub
aaa
repnz
mov
dec
push
pop
out
in
pop
xchg
xlat
pop
xchg
inc
pop
mov
iret
sub
jle
pop
fsubr
dec
pop
fdivl
pop
sub
adc
push
xlat
rolb
push
sar
test
jne
sbb
cmc
inc
stos
insb
xor
std
or
outsb
xchg
shrb
jne
mov
das
push
scas
aaa
inc
mov
addr16
jnp
in
lret
fstps
out
jp
cmpsl
pop
pop
jbe
mov
cmp
inc
bound
mov
arpl
hlt
cltd
in
cmp
push
pop
push
gs
leave
lock
stos
dec
sti
aad
repz
jge
jne
mov
pop
scas
push
mov
or
enter
shll
test
lods
sub
clc
cmpsl
push
out
mov
add
mov
push
add
adc
shrl
xlat
rol
popa
mov
push
loope
xor
add
and
xchg
xor
mov
jb
adcl
jg
nop
and
and
and
or
mov
enter
mov
pop
cmp
and
js
ret
adc
mov
add
lret
cmp
add
rol
xor
add
aaa
add
cld
sar
into
push
jg
ds
outsl
gs
jb
mov
push
xchg
rolb
push
xchg
and
inc
mov
js
lret
or
mov
sbb
adc
mov
js
flds
sbb
aaa
dec
cmp
test
shrb
push
inc
aam
cmp
xchg
push
aaa
add
and
sub
xchg
xchg
xor
add
sahf
add
sbb
add
inc
mov
cmc
sti
or
mov
inc
xor
sbb
push
cmp
mov
jge
sarb
icebp
or
ret
mov
out
xchg
sub
aam
dec
cli
sub
mov
sbb
ja
mov
ret
arpl
dec
stos
outsl
xlat
movsl
aas
mov
ds
lds
cmp
and
movsl
movsl
pop
popa
test
or
mov
mov
mov
les
nop
mov
test
xchg
dec
outsb
aam
mov
movsb
mov
xchg
loopne
pop
aaa
sub
mov
sbb
in
and
jl
push
xor
scas
cmp
xchg
aaa
mov
std
jmp
je
loop
and
repnz
mull
cmp
jno
insl
push
loopne
repz
rcrl
imul
aaa
mov
aaa
fstl
loope
and
xor
push
sub
xchg
popl
mov
sub
sbb
mov
pushf
js
hlt
popf
gs
xchg
mov
jbe
add
xor
mov
sar
dec
mov
popa
lods
pushf
adc
aad
out
addl
add
test
icebp
ss
out
push
int
dec
mov
mov
stos
callw
xchg
out
fwait
xor
shll
or
pop
in
sub
mov
inc
movsb
sbbl
ret
and
test
sbb
cli
mov
rcl
sarb
mov
lods
negb
shll
mov
jecxz
aas
cmp
jp
cld
into
scas
dec
std
mov
inc
xor
test
ds
or
repnz
fldl
pop
divl
incl
in
add
fcmovne
push
cmpsl
pop
sbb
push
aas
in
in
dec
cmp
pop
movsl
or
es
cmp
inc
ret
test
jmp
lret
iret
sahf
in
cld
movsb
jns
mov
and
repz
in
jnp
inc
icebp
or
leave
adc
xchg
or
fsubrp
repnz
hlt
mov
popa
cmp
je,pn
lret
out
inc
nop
dec
cmc
rclb
xchg
and
xor
push
loop
jl
mov
gs
cmp
mov
pop
jg
jne
push
aas
mov
enter
movsl
andl
pop
das
sarl
pop
jp
inc
push
cmp
adc
push
cmp
add
xchg
repnz
imul
ret
add
movl
shl
mov
iret
das
popa
iret
rol
popa
mov
lock
inc
jo
sbb
cmp
add
mov
jg
mov
outsl
stos
xchg
sbb
and
ljmp
jne
subb
sub
xor
cmp
pop
or
push
ret
lea
add
mov
or
lds
push
subl
push
loopne
xor
adc
loopne
out
sub
mov
jb
add
xlat
push
inc
rcrb
jp
push
sub
sbbl
jae
cmp
in
jnp
mov
nop
xor
add
push
mulb
jo
sbb
lea
dec
push
push
stos
mov
test
fdivl
sub
add
lds
dec
les
loop
mov
dec
mov
mov
mov
push
jo
mov
test
or
lret
data16
and
jle
outsl
sti
aas
scas
xlat
lret
lret
int3
fdivrl
addr16
cmp
int3
cltd
xor
mov
and
inc
inc
push
sbbb
loopne
xchg
jb
xchg
mov
repz
and
xchg
mov
mov
sbb
and
hlt
mov
mov
sub
mov
mov
jmp
mov
xchg
jne
mov
mov
les
and
int
insl
cmp
mov
loop
fisubl
fidivs
and
xchg
lods
addr16
test
dec
and
sub
stos
lcall
dec
cld
sub
aam
aas
jge
xchg
sbb
xchg
jl
stos
mov
push
dec
out
jmp
xchg
jp
sbb
and
loopne
pusha
leave
lcall
addr16
jp
in
in
dec
out
insb
adc
imul
popf
fimuls
insb
cli
push
mov
adc
pop
fdivrp
push
mov
out
pop
mov
jae
cmp
mov
aam
test
adc
stos
jl
inc
jge
in
pop
imul
out
mov
arpl
jnp
mov
cmp
stos
mov
or
jno
ss
aam
out
scas
shll
xlat
push
int
sub
dec
push
pop
mov
stc
mov
fwait
outsb
mov
call
test
jne
jl
push
mov
jmp
push
cmp
iret
das
cmp
mov
mov
fistpll
aam
hlt
xchg
in
bnd
dec
pushf
fwait
out
xor
rol
sub
push
xchg
arpl
mov
pop
adc
lock
push
loop
stos
in
insb
js
je
aam
jns
adc
out
pop
mov
in
sti
fwait
outsb
sar
pop
stos
into
scas
push
ja
pop
mov
aaa
mov
sbb
fldenv
test
xor
idiv
xchg
xor
jp
lret
pop
jg
adc
cld
mov
and
imul
out
push
sbb
and
test
jns
mov
mov
mov
out
push
fnstcw
nop
mov
cmc
ret
cmpsb
enter
repz
pop
js
mov
lcall
mov
sub
dec
ljmp
ss
cs
mov
dec
fimull
push
mulb
xchg
push
mov
sbb
fisubs
int
scas
out
in
fisttpll
jnp
fmuls
call
shl
pushf
mov
hlt
push
xchg
mov
jle
mov
imul
aas
in
cld
std
xchg
fnstsw
ljmp
cmp
cmp
xchg
xchg
les
fs
cld
push
ss
sti
mov
lcall
popa
cbtw
stos
mov
cmp
into
es
jl
pop
in
ljmp
cmp
in
loopne
xor
push
jp
jno
mov
or
adc
clc
pop
mov
xor
lea
jle
xor
cmc
mov
xchg
bound
push
hlt
daa
out
test
pushf
icebp
dec
fdivr
xchg
aam
scas
negl
adc
fidivrl
sbb
cld
test
insl
jns
out
jle
clc
jne
cld
jge
pop
xchg
aaa
insb
push
mov
mov
jl
int
pop
xor
mov
imul
fdivs
int3
jnp
fstl
mov
repz
andl
sbb
test
mov
xchg
mov
ljmp
sbb
mov
mov
pop
jae
jbe
out
fisubl
jb
cmpsl
lahf
push
test
lods
xchg
jb
test
mov
push
les
cmp
jno
fldt
mov
xchg
push
std
std
scas
fnstcw
loope
fidivs
xchg
pop
call
repz
mov
cli
jmp
loope
shrl
lret
in
lcall
mov
stos
dec
mov
xor
rorb
mov
repnz
mov
in
stos
pop
std
adc
add
jp
xor
dec
mov
adc
out
push
push
ljmp
bswap
insb
xor
inc
std
out
mov
fwait
hlt
sbb
fldt
pop
pop
xor
jle
out
mov
mov
insl
mov
nop
outsb
in
call
pop
jecxz
add
out
mov
leave
rorl
mov
fwait
push
pop
jmp
arpl
lahf
mov
xor
hlt
fidivrl
sbb
leave
movl
ljmp
jbe
pop
jns
mov
in
cmp
rcr
mov
aaa
rcrb
adc
ret
loope
insl
aad
xor
push
xchg
arpl
dec
cmp
push
aas
jp
mov
in
ss
sahf
iret
mov
xor
das
ljmp
fmul
int
push
fcompl
mov
dec
push
xchg
fdivrs
inc
in
jno
xchg
call
call
lahf
iret
cltd
sub
xacquire
fwait
sbb
sbb
loope
fmul
pop
mov
stos
xor
sbb
sarb
jl
push
lock
stc
or
imul
mov
pop
mov
jno
jmp
iret
in
jmp
pop
in
fcmovnb
xchg
xchg
cmp
jmp
jne
scas
xlat
mov
xchg
mov
in
fisttpll
push
jmp
jp
mov
loope
dec
sysret
in
arpl
rcr
xchg
in
mov
loopne
addr16
std
pop
outsb
cld
mov
fisubl
scas
outsl
fnstenv
popa
outsl
mov
aad
jle
xor
jns
mov
fdivp
mov
xchg
loop
arpl
outsb
jno
shrl
stos
fisttpl
test
cmp
inc
jnp
les
fxam
xchg
out
outsl
pop
mov
jns
aaa
jbe
lea
cmp
hlt
cmp
xor
and
cwtl
mov
xchg
sahf
iret
push
cli
cmpsb
push
clc
mov
mov
mov
xchg
add
dec
sahf
filds
sub
ret
jge
cmpsb
push
movsl
jbe
push
cmpsl
out
push
xchg
sbb
add
mov
in
inc
jecxz
lods
mov
cli
movsb
out
dec
sub
jl
sbb
jbe
mov
jp
fadds
out
cmp
test
int3
nop
pop
andb
cmpsl
sti
lea
nop
pop
in
outsl
jno
cmp
iret
mov
sarl
pusha
divl
inc
jae
xor
mov
movsb
aas
ja
std
jne
mov
maxps
pop
mov
xor
in
ja
mov
mov
add
mov
adc
mov
stos
push
or
dec
mov
out
pop
jecxz
das
mov
xor
jmp
sbbl
pop
mov
roll
das
mov
stc
push
xchg
inc
out
pop
pop
sub
into
stos
jle
hlt
lcall
adc
and
stos
sbb
cmp
je
mov
mov
cmc
ljmp
sub
mov
pop
xchg
dec
testl
sbb
jge
imul
jecxz
popf
mov
js
int
cwtl
stos
mov
aad
jne
jge
std
mov
pop
fbld
repnz
outsb
jge
mov
movsl
mov
outsb
pop
adc
jae
jl
jl
jmp
and
xor
pop
and
addr16
and
push
fidivs
mov
pop
jae
ja
lds
getsec
sahf
shll
mov
out
les
cs
sti
aam
sti
loope
pop
pop
sar
enter
lods
pop
mov
addr16
mov
adc
xchg
jp
xor
jo
dec
mov
fdivs
lret
jecxz
jp
out
sbb
lea
dec
sahf
frstor
popf
xchg
stos
bound
je
pop
iret
insl
fldl
cld
or
ja
aad
cltd
out
fxam
lret
sahf
inc
pop
daa
push
mov
jmp
int3
es
mov
popa
dec
cli
ret
pop
cmp
enter
mov
xchg
fwait
adc
aas
pop
push
popa
mov
and
dec
mov
lret
repnz
add
roll
push
mov
push
js
popl
shlb
lods
sbbl
cmp
xchg
popl
push
arpl
icebp
lods
imul
dec
dec
iret
push
shrl
call
outsl
mov
scas
cmpb
mov
imul
insb
add
inc
mov
jno
sbb
xor
imul
jo
in
push
rclb
cmp
test
loopne
sbb
mov
loope
movsb
icebp
pop
mov
lret
adc
push
and
adc
mov
push
mov
ljmp
dec
stc
push
stos
sbb
cmp
shlb
sbb
fwait
dec
bound
cli
cmp
cmpsb
xor
pop
mov
dec
dec
and
int3
mov
mov
movsb
lods
outsl
int
in
mov
in
push
cmpb
inc
dec
dec
xchg
fisubl
in
inc
enter
dec
nop
mov
jecxz
cli
xor
inc
inc
dec
inc
gs
pop
out
xor
pop
out
jb
pop
and
loop
xlat
and
mov
andl
inc
dec
pop
jbe
push
addb
sbb
imul
jne
jns
fisubl
test
dec
loopne
pop
int3
mov
stos
sbb
jmp
pop
inc
test
push
ja
enter
gs
sbb
cmp
dec
out
dec
scas
mov
jl
dec
popa
out
aas
jl
push
scas
jno
pop
pop
aad
in
cmp
fwait
scas
cltd
mov
sti
icebp
adc
lahf
mov
fimuls
mov
imul
out
test
ja
cmp
mov
js
stc
push
mov
pushf
mov
xchg
cmp
sbb
mov
lahf
into
jb
scas
rcrl
push
inc
dec
mov
mov
in
in
push
xor
repz
adc
adc
jne
stc
int3
aad
push
in
push
popf
aaa
out
push
adcl
pop
sbb
mov
mull
and
dec
jg
xchg
fsubrs
fstps
adc
pop
fwait
cwtl
orb
inc
hlt
fs
int3
mov
lahf
sub
insb
cmp
iret
lods
adc
xor
inc
inc
popf
arpl
inc
cmp
pop
ljmp
aas
xor
xorb
xor
repnz
sub
popa
cmp
sub
and
sbb
adc
sbb
roll
call
mov
or
lahf
cmpl
push
sti
jecxz
insb
sub
fsubrl
clc
sub
mov
pop
scas
fsubl
test
push
pop
lcall
push
push
lcall
popf
add
cwtl
mov
mov
pop
sahf
fidivl
inc
push
add
int
xor
cmpsb
add
ja
or
cmc
push
pushf
insb
xchg
push
xchg
push
xor
xchg
cmpsl
iret
push
add
ficoms
cmc
add
outsl
and
mov
push
xchg
sub
push
mov
lahf
movsb
pusha
shl
jmp
xlat
sar
mov
mov
push
jbe
jmp
rcrb
cmpb
inc
pop
sub
mov
jae
test
cld
inc
out
ja
xchg
cld
jp
jle
mov
notl
or
xchg
sbb
push
mov
inc
cltd
insb
cld
jp
aaa
stc
cmp
xchg
das
push
mov
out
imul
mov
inc
sub
xchg
mov
movsb
inc
lods
adc
adc
xchg
and
clc
lcall
ss
fisubl
jns
sub
ss
xchg
or
xchg
pop
pusha
in
imul
pop
mov
push
inc
cltd
pop
es
bound
ficoml
movsl
mov
mov
mov
inc
mov
daa
xchg
xchg
mov
xchg
mov
mov
sub
je
lea
insb
xchg
mov
repz
and
lea
mov
mov
xchg
mov
repz
mov
push
and
or
and
mov
icebp
cmp
inc
pop
pop
cmpsl
js
xchg
leave
inc
int
mov
jns
test
daa
imul
mov
cmp
insl
mov
aam
and
inc
inc
dec
jp
outsl
sbb
and
cmpsl
push
arpl
imul
ja
idivb
cmp
xchg
stos
imul
xchg
imul
negl
imul
sub
mov
scas
stos
cmpsl
sbb
fldl
inc
push
cmpb
subb
outsb
dec
sti
ds
cmpsl
nop
mov
cmp
testb
rorb
sti
sbb
outsl
sub
lods
jno
jge
das
repnz
mov
loope
mov
pop
mov
mul
in
mov
xor
ret
mov
cmp
sub
mov
lret
sti
test
daa
mov
dec
cmpsl
and
je
mov
test
iret
lahf
pushf
sub
jno
nop
jne
scas
mov
push
mov
aas
jle
repnz
loop
jge
movsl
push
enter
dec
push
ljmp
pushf
inc
mov
cs
lahf
lea
aad
imul
retw
shll
jle
cmp
xchg
clc
leave
lret
cli
std
cmp
icebp
pop
push
das
call
push
daa
xlat
fisubrs
call
rol
pop
cli
jge
es
iret
jnp
cmp
jge
test
sbb
adc
pop
outsl
bound
out
pop
push
scas
mov
xchg
mov
cmp
test
movsb
dec
mov
daa
sti
fsubrp
cmp
push
push
out
cmp
sub
aad
xor
mov
mov
ficoml
sti
xor
repz
xor
mov
xchg
sti
jmp
fbld
or
out
mov
std
out
push
jle
jbe
leave
arpl
mov
sub
into
stos
ja
ret
fsubs
repnz
mov
xor
fidivs
ja
ror
popf
mov
sahf
xor
lds
pop
es
int3
rorb
fmulp
imul
pop
mov
xor
pop
xchg
jbe
dec
into
jo
jae
mulb
aaa
push
cli
fmuls
push
mov
fidivrs
hlt
sub
aas
outsb
std
dec
pop
cmp
pop
sti
fsubr
lods
pop
insb
outsb
mov
faddl
pop
xchg
pop
sbb
je
shll
test
je
mov
and
push
shlb
pop
ficomps
out
ret
testl
dec
pop
push
inc
out
faddp
jmp
xor
xchg
pop
jecxz
mov
jo
les
add
fcom
jl
out
cmp
test
cmp
div
in
pop
out
cmpsb
xchg
adc
iret
fucomip
pop
xchg
lods
stc
repz
pop
xchg
jbe
cli
jecxz
fdivp
repz
daa
cs
xchg
push
ja
mov
test
pop
sub
push
in
pop
adc
gs
fst
lahf
outsb
fsubrl
sti
cmpsl
les
sahf
aad
fildl
mov
fsubl
outsl
or
loope
in
stc
inc
ficompl
cmp
dec
rcr
outsl
push
jne
jb
cmc
sahf
cmc
dec
lods
pushf
out
push
pop
mov
iret
dec
cmp
imul
inc
cmp
jl
inc
pop
ret
cmpsl
mov
out
out
adc
cmpsb
xlat
jp
mov
fwait
inc
jmp
mov
add
jb
push
in
cld
mov
dec
das
dec
cltd
stc
std
hlt
xor
xlat
lahf
sbb
mov
mov
loop
sub
lods
stos
outsb
push
fldl
mov
sbb
icebp
sarl
ficoml
xchg
jne
das
negb
int3
icebp
repnz
mov
xchg
mov
mov
pop
fistl
fcoml
dec
lret
fidivrs
and
ret
rcll
scas
jl
push
pop
jae
xor
inc
movsl
cmp
xlat
outsl
fildll
xlat
inc
js
out
clc
or
xchg
sub
add
loopne
or
in
in
aad
mov
push
pop
stos
mov
insl
std
out
mov
std
dec
inc
cwtd
out
daa
lcall
cli
mov
cmpsl
jp
mov
lret
repnz
jmp
jo
mov
mov
ds
mov
sbb
pop
fsubl
fisubl
ficoml
or
mov
pop
lret
mov
sbb
mov
jp
lcall
fs
mov
mov
lea
pop
es
mov
jle
sub
ret
test
mov
loopne
aad
cwtl
cmp
push
out
fcmovb
sbb
pop
cs
out
icebp
loopne
imul
xchg
movsl
mov
push
fists
jnp
int3
jecxz
std
lcall
insl
repz
pushf
cmp
repnz
iret
pop
sbbl
push
lcall
xchg
mov
pop
fidivrs
repnz
scas
lcall
jge
in
inc
sub
inc
jns
aam
pop
in
xor
jns
cmp
mov
dec
repz
jg
xchg
out
adc
inc
loop
movsb
imul
xlat
enter
int
into
clc
fidivrs
mov
push
add
packssdw
mov
lahf
mov
cltd
cmp
jnp
movsb
rclb
iret
ds
call
dec
scas
fsub
lods
cmp
xchg
lock
jp
rcll
mov
pop
xchg
shr
jle
xchg
jmp
insl
clc
into
sti
sti
pop
sti
fstl
and
test
movsb
addr16
clc
xor
mov
mov
mov
pushf
push
lock
aad
sti
ljmp
dec
mov
sar
out
imul
cmp
negb
insb
jae
js
mov
stc
cs
ss
mov
in
jp
sti
ret
loope
addr16
test
push
testb
jbe
das
arpl
stos
jle
pop
outsl
in
xchg
aas
loop
std
mov
cmp
push
aaa
mov
addr16
lock
sbb
lock
xchg
dec
mov
in
cmp
loope
xor
into
fsts
sub
mov
mov
call
pop
cmp
ja
test
inc
lahf
adc
add
out
sbb
jbe
dec
or
scas
push
push
dec
jge
cli
mov
jae
mov
cmp
mov
mov
insb
ret
idivl
push
push
fildl
hlt
xchg
dec
repz
xor
mov
out
std
cld
jp
sbb
mov
pop
das
jmp
out
mov
mov
mov
aam
loopne
ds
push
mov
ds
jo
fisubs
movsb
mov
push
push
aas
test
mov
std
dec
repnz
aad
inc
xlat
inc
sbb
sbb
call
mov
jge
ss
xor
aam
xlat
mov
xchg
orl
lds
sti
xlat
or
mov
mov
cmpsl
sti
pop
pop
hlt
pop
mov
sub
ljmp
in
dec
lret
stos
jbe
sti
es
push
clc
pop
cmp
mov
jl
or
pop
cli
mov
scas
lock
fnstenv
stos
push
mov
push
jmp
lahf
xchg
stos
pop
mov
fimuls
mov
das
or
stos
mov
push
out
stos
xchg
pop
xchg
lods
lcall
test
insb
mov
pop
js
or
jmp
push
mov
pop
pop
loope
ljmp
push
lods
pop
cmpsb
or
aas
mov
jmp
in
fisttps
mov
je
jecxz
mov
fdiv
jge
out
iret
or
jb
iret
jno
lds
fwait
mov
sub
mov
mov
jne
cltd
xor
movsb
imul
lret
out
jmp
into
cmp
popf
jmp
cmpsb
outsl
stos
sahf
stos
pop
or
jecxz
cmc
into
ret
lret
or
aaa
fucomp
cmp
jp
xchg
jns
std
mov
outsb
call
clc
into
lea
sub
jo
fxch
mov
mov
out
pop
jns
in
into
lret
xchg
out
out
insb
pop
jle
fiaddl
ja
mov
mov
mov
insl
fcmovbe
int
inc
mov
cmp
in
sti
test
idivl
outsl
pop
jl
cmp
test
fists
mov
mov
ret
adc
xlat
push
cmp
jne
jecxz
rorl
je,pt
lods
stos
lret
xchg
cld
out
jae
into
iret
lret
lret
cmp
fldenv
lds
sbb
jle
lret
mov
jp
adc
mov
scas
std
pop
mov
int
pop
dec
mov
sbb
addr16
mov
out
fisubrs
push
sub
push
out
pushf
mov
mov
push
push
mov
std
loope
mov
mov
jbe
or
fucomip
xchg
jecxz
in
scas
scas
scas
daa
sub
addr16
in
mov
ljmp
imulb
lea
ljmp
rorl
mov
jnp
push
jg
loope
bswap
cmp
cmp
cmp
mov
inc
out
pop
mov
sub
fcompl
jns
jl
sbb
cmp
es
mov
xor
stos
jle
mov
std
mov
dec
lahf
aaa
push
rolb
fimull
cmp
popf
mov
adcl
xlat
mov
cmpsb
lret
mov
jno
mov
popa
mov
cmpsb
mov
pop
out
mov
mov
les
mov
in
ja
nop
pop
xor
cmc
scas
xchg
ds
pop
aam
rcll
sbb
jecxz
ret
dec
mov
out
sub
fwait
xor
sub
and
inc
in
fldl
mov
stos
adc
lock
pop
cmpsl
and
and
test
mov
inc
push
in
cmp
in
insl
cwtl
jb
aad
fldcw
cmp
jecxz
dec
xorl
push
xor
sbbb
outsb
mov
mov
adc
pop
repz
mov
and
dec
imul
in
sti
scas
pop
fwait
jns
fcomi
rorl
rorl
sbb
gs
pop
cmpsl
inc
std
repnz
sahf
pop
jle
cmpsb
jg
stos
xchg
out
add
out
mov
push
clc
sti
loopne
mov
mov
jb
fwait
or
mov
test
shrb
lea
xchg
pop
pop
cmp
movsb
scas
pop
mov
mov
push
pop
cmp
mov
fwait
shll
dec
jb
xchg
es
out
je
into
ja
jmp
imul
mov
adc
mov
jle
mov
fwait
or
push
in
pop
fisubrs
addr16
in
fadds
xchg
mov
lret
dec
inc
cld
shr
bnd
jge
xchg
repz
cmpsb
insb
data16
aad
in
divb
jg
call
pop
mov
xor
loop
repz
jl
mov
mov
clc
in
stc
sub
xor
cmp
das
push
mov
sar
inc
in
sub
lcall
fimuls
fildll
mov
enter
push
arpl
fsubrl
push
jae
mulb
inc
jge
mov
fcmovu
dec
inc
sbb
outsb
in
cwtl
jb
jge
sbb
movsl
push
rorl
paddb
jno
leave
imulb
cmp
jmp
mov
std
adcl
jle
jmp
subl
jle
jnp
sahf
jle
cmp
stc
inc
mov
cs
bnd
insb
call
sub
outsl
jmp
rclb
out
scas
ss
ja
cmp
sbb
aaa
sub
clc
mov
ss
das
mov
das
fnsetpm(287
scas
xor
loop
xchg
pop
mov
jmp
aas
cmpsl
fcmovnu
xor
xor
mov
jle
js
jl
sahf
ja
pop
pushf
pop
call
std
xor
sbb
jmp
jge
jmp
mov
mov
push
movsw
fmul
cmp
fidivs
daa
jl
sbb
inc
out
jmp
mov
mov
inc
roll
cld
je
lahf
jnp
xor
scas
dec
pop
in
mov
or
les
cmp
into
cmc
pop
adc
mov
xchg
cmc
jne
out
xor
mov
xchg
fbld
scas
aas
mov
dec
dec
stos
scas
cli
arpl
xor
xchg
jge
in
pushf
cltd
aam
addl
fldl
sub
outsb
out
mov
test
xlat
xor
sub
out
inc
cmpsl
push
out
xchg
dec
jne
aaa
fidivs
jge
mov
fistpl
lcall
addr16
mov
pushf
in
pop
xchg
pop
mov
das
fdivrs
jns
xchg
stos
jnp
js
repz
pop
and
stos
cmc
ret
aas
inc
adc
shlb
lret
and
jnp
mov
imul
cmpsl
test
mov
std
sub
jg
stc
shrl
aad
outsl
xchg
adc
fidivrs
test
mov
sub
aad
pop
mov
sti
aam
enter
idivb
cmpsl
jo
push
icebp
scas
jle
stos
inc
pop
addb
in
sub
sahf
testb
mov
idivl
mov
daa
das
lods
js
jns
mov
insl
hlt
in
movsb
mov
inc
mov
fdivrp
dec
lea
aaa
jl
push
push
idiv
cmc
xor
shlb
push
cwtl
clc
mov
dec
mov
fs
mov
rclb
sub
repnz
adc
hlt
add
addr16
push
rol
push
dec
push
sub
cmp
fldt
out
insl
push
mov
cmpsb
add
pusha
cmp
push
cmp
mov
pop
inc
xchg
scas
jl
mov
mov
pop
mov
popf
adc
inc
sbb
movsb
aaa
lds
aaa
sub
jb
mov
popl
inc
dec
leave
jo
out
xchg
xchg
xchg
dec
test
scas
aas
and
fsubs
xor
pop
pop
pusha
ja
push
ja
sub
mov
push
fsubl
aas
or
popf
adc
fisttpll
jle
and
mov
fsubrl
icebp
dec
pop
mov
fisubs
add
adc
mov
adc
fs
idivl
xor
mov
and
lods
sub
fwait
add
loope
pusha
add
xor
lret
and
lds
mov
roll
pop
xor
lret
es
add
sub
cmp
dec
ret
push
add
xchg
xor
insb
dec
and
int
andb
insb
mov
aas
inc
ret
inc
pushf
adc
cmp
lods
sub
js
push
push
ficompl
mov
jl
push
popa
out
adc
xor
pop
xchg
mov
iret
and
incb
popf
pop
or
sub
push
dec
test
outsl
dec
fdivs
jg
xchg
push
cmc
mov
rorb
inc
nop
mov
lods
cmp
stos
int
stos
mov
mov
xchg
jge
dec
stos
in
enter
or
ss
cltd
and
jo
pop
popa
lods
aaa
jecxz
ss
and
cmp
js
leave
pop
lea
decb
pop
loopne
test
cmpl
loope
mov
adc
jne
test
test
mov
mov
test
fildll
pop
jo
dec
sbb
lods
mov
or
jns
push
movsb
push
cli
sbb
mov
cwtl
imul
dec
mov
pop
fwait
push
add
xchg
pop
loopne
mov
mov
scas
mov
inc
jno
xchg
or
xchg
adc
lods
enter
mov
jecxz
xor
pop
jge
fdivr
outsb
loopne
or
inc
push
int3
stos
push
lds
mov
dec
addl
mov
mov
push
test
pop
std
mov
jnp
ror
dec
pusha
adc
inc
mov
aam
dec
outsb
push
shlb
into
or
push
xlat
adc
xor
xor
and
das
mov
mov
push
aad
push
xchg
ss
ljmp
cwtl
xchg
pop
jle
sub
test
dec
lret
pop
aaa
push
cmc
adc
adc
cmp
xchg
adc
push
dec
aad
test
lea
add
inc
in
inc
fwait
popa
push
nop
test
or
and
nop
nop
sbb
icebp
sbb
dec
mov
push
push
push
in
pop
jl
movsl
push
dec
int3
dec
push
pop
dec
ljmp
shl
mov
ljmp
jnp
aas
stos
mov
push
int3
imul
shll
adc
fs
xchg
push
sahf
cmpsl
xchg
xchg
loopne
xor
xorl
fnstenv
pushf
or
cltd
cwtl
sub
fisubs
addr16
out
mov
xor
jecxz
ror
and
mov
call
sbb
xor
lods
es
test
ss
loop
test
push
cmp
pop
mov
xor
fcoms
pusha
mov
in
ja
inc
add
sbb
and
inc
mov
repz
sbb
mov
ffree
push
dec
mov
or
int
insb
push
xor
mov
std
pop
cld
mov
and
push
jo
push
jmp
sub
adc
jae
push
push
lods
sub
fstps
rol
sbb
cmpsl
adc
leave
xchg
repz
cmpsb
pop
insb
stos
cwtl
jl
mov
les
pop
sub
in
insb
push
xchg
mov
paddw
or
fadd
test
ret
push
xchg
xor
jnp
mov
stos
mov
mov
mov
mov
sub
cltd
sub
popa
mov
push
adc
je
mov
addb
push
adc
cmc
scas
adc
inc
mov
xchg
stc
cltd
or
mov
adc
outsb
inc
mov
xchg
lods
fwait
cmp
cmp
adc
int
call
mov
icebp
adc
and
cmp
mov
nop
loop
cmp
mov
shlb
xchg
test
popf
leave
xor
fcom
xor
cld
mov
sub
ret
mov
int
mov
cld
mov
inc
dec
dec
xchg
mov
pop
lcall
jmp
mov
outsb
ja
mov
xchg
mov
sbb
and
insl
sub
push
in
jbe
nop
sbb
adc
cmp
stos
sbb
add
bound
cmp
and
sub
mov
add
int3
test
enter
xor
and
xor
test
inc
out
mov
pop
pop
out
fcompl
jle
or
push
mov
mov
xor
aas
rcll
add
sarl
ficoms
push
and
dec
lods
sahf
test
xor
push
add
daa
popa
pop
mov
mov
xlat
repnz
lea
les
push
sbb
outsl
lock
mov
shl
andb
test
or
xchg
push
test
jle
dec
adc
das
or
ret
fisttps
test
sub
or
pop
lea
jbe
mov
inc
incb
lahf
mov
xchg
mov
notl
push
rcrb
sub
cmp
rcrl
push
insl
or
or
cmp
sbb
and
dec
xchg
mov
adc
add
dec
fidivs
pusha
push
in
addr16
mov
shr
aas
pushf
and
mov
imul
inc
inc
and
in
jne
inc
pop
movsl
push
das
std
pop
xchg
or
hlt
in
and
das
pop
aas
loop
add
xor
es
adc
loop
pop
pop
or
int3
gs
push
mov
cmp
lret
lea
or
cmp
test
xor
in
and
add
repz
movsl
ficoms
xor
inc
cmp
inc
add
mov
outsl
enter
xchg
stos
add
push
xchg
dec
cs
pop
ss
jae
outsb
repz
lcall
pop
xor
push
fisttps
lahf
in
cmp
cmp
cmp
lcall
xchg
not
adc
adc
sbb
add
adc
in
inc
cmp
or
cwtl
cmpsb
dec
jge
test
pop
fisttps
or
adc
add
stc
and
adc
xlat
add
test
lret
sbb
loope
push
mov
sub
mov
daa
cmp
xchg
cmp
and
jnp
test
sub
cld
adc
fidivs
mov
sub
mov
loopne
gs
push
call
iret
sub
popa
icebp
out
push
cs
mov
xchg
sahf
cmp
dec
out
mov
aad
jmp
mov
ds
enter
jbe
lods
fnstcw
adc
mov
or
mov
pop
cmpsb
aas
lcall
pop
popf
mov
xchg
fldcw
arpl
and
push
out
popl
xor
mov
xchg
inc
popa
mov
ret
cmpsb
sub
lods
mov
addl
rcll
mov
add
aaa
cmp
loopne
popa
mov
mov
and
sbb
stos
or
xorb
pop
xor
in
jae
sub
inc
fadds
dec
sbbl
jge
lret
xchg
cmp
push
sahf
adc
dec
mov
cwtl
vshufps
xchg
das
mov
mov
std
sub
jno
and
in
imull
imul
jns
mov
mov
or
hlt
pop
dec
jns
push
xchg
in
shrb
cmp
das
out
pop
ljmp
jbe
jle
fdivrp
lret
repnz
inc
repnz
negl
int3
sti
outsb
cwtl
andl
xchg
add
cld
clc
mov
or
pushf
sub
mov
adc
pop
hlt
or
xor
je
aam
xchg
sub
mov
in
pop
lahf
addl
cmovge
movsb
xchg
add
inc
mov
adcb
add
rolb
mov
mov
int3
mov
jecxz
addr16
pop
sbb
leave
fs
cmp
mov
cltd
xchg
outsb
push
lcallw
addl
xchg
arpl
dec
sti
lods
sub
aaa
ret
fs
in
lea
test
in
mov
sti
inc
adc
jle
lock
cmpsb
inc
inc
mov
inc
repz
lcall
shrl
in
or
dec
pop
mov
fldenv
je
mov
adc
rorl
and
dec
and
fisubrl
push
adc
pop
dec
mov
dec
sub
in
xor
cwtl
jo
adc
ljmp
stc
push
jb
inc
andb
sub
cmpl
icebp
xor
push
cmpsl
arpl
pop
push
and
xchg
stos
popf
add
out
mov
or
adc
cmpsb
pop
aam
dec
push
push
xchg
push
and
sub
mov
enter
add
push
adc
jmp
cmpsb
sar
movsl
dec
cs
and
insl
mov
cmp
and
pop
add
sub
lret
mov
mov
fisubl
ss
and
and
dec
add
nop
mov
and
addr16
jo
cmp
es
test
inc
sub
mov
pop
imul
cmp
inc
sbb
cmp
movsb
and
push
push
cltd
pop
cwtl
lret
sub
popa
cmp
cwtl
int
push
test
pop
mov
cltd
je
mov
lds
adc
loopne
je
int
inc
pushf
pop
adc
jle
rcll
add
pop
ficoml
mov
loop
pop
out
sbb
mov
xlat
and
nop
sti
jbe
jo
pop
sbb
sub
leave
sbb
mov
add
outsl
mov
mov
movsb
cmp
stc
push
in
push
sub
fstps
in
sbb
mov
repnz
cli
ja
pop
incl
mov
fstl
jae
outsb
jle
jo
adc
or
jo
dec
pushf
or
stos
rolb
cltd
jge
jecxz
sub
test
lcall
das
loopne
sub
insb
inc
sbbl
dec
leave
out
jle
jl
add
sbbl
shrb
pop
inc
scas
lds
jge
mov
or
mov
jne
test
jae
cli
es
jp
xor
mov
add
adc
and
cld
fists
inc
popf
sub
or
sub
insb
push
adc
scas
mov
xchg
pop
pop
shlb
cli
inc
push
cli
cmpsb
call
or
adc
pop
outsl
pop
rorb
cmp
push
xchg
and
lcall
subb
cs
scas
cmp
xchg
pop
sub
push
or
movl
repnz
rep
jl
xorl
enter
outsb
mov
decl
jnp
jp
cld
inc
jp
mov
call
add
mov
daa
aas
lcall
repz
push
sub
xchg
pop
in
pop
insl
xor
das
inc
cmp
cltd
pop
push
or
pushf
daa
xchg
shlb
aad
enter
sbb
push
mov
movsl
pop
inc
and
dec
stc
sub
adc
lahf
cmpsb
jecxz
xor
cmpsl
xchg
add
sub
ret
popf
add
das
xorb
mov
sti
fwait
repnz
shrb
inc
fldenv
data16
fsts
adc
xchg
lods
sbb
xor
cwtl
mov
or
icebp
or
sti
ret
stos
dec
stos
lahf
test
sbb
shrl
cmp
push
jmp
stc
cwtl
xor
in
data16
and
std
or
sub
xor
mov
sub
cmp
or
out
and
jno
dec
xor
out
push
fdivrs
lds
std
push
mov
push
and
push
mov
enter
or
prefetch
inc
sbb
mov
js
mov
js
xorl
fsubr
pop
testb
pop
xor
movsl
or
sub
test
jmp
shrl
adc
int3
mov
sbb
sti
orl
sub
xor
add
ret
mov
lds
push
inc
ficompl
cs
cwtl
cmpsb
test
imul
add
ja
fs
es
inc
push
dec
imul
sub
push
sbb
xor
mov
pop
inc
mov
pop
test
or
xor
hlt
xor
hlt
out
btr
int3
je
orb
pop
adc
ret
push
jl
outsl
je
test
ret
mov
dec
in
pop
push
adc
ljmp
push
cltd
movsl
mov
mov
sub
adc
hlt
outsl
outsb
in
and
and
pop
call
inc
add
inc
push
addl
mov
fldl
and
aaa
insl
cltd
xchg
ret
inc
je
loopne
in
test
inc
lds
dec
je
ret
test
dec
push
pop
sbb
mov
outsb
and
and
xor
add
aad
sub
push
movsb
std
add
xchg
cmp
add
fisttpll
pop
pop
decb
lret
adc
int3
cs
imul
dec
sub
inc
sbbl
das
ss
iret
rsqrtps
mov
scas
cltd
rolb
dec
js
inc
xchg
cmp
lahf
bswap
popa
insl
ret
popf
pusha
pop
push
mov
mov
cli
aas
push
enter
rol
bnd
pop
cld
adcb
shrl
sbb
popf
jge
add
jp
arpl
rorl
xor
jge
cli
scas
bound
cmp
pop
pop
aam
out
pop
les
xor
jb
fsin
out
and
mov
add
inc
xor
push
ss
mov
out
ret
lds
adc
sti
inc
lods
dec
push
sub
push
mov
mov
inc
or
pop
movsl
mov
popf
out
and
push
pop
stos
imul
cmp
adc
adc
sbb
mov
xchg
dec
or
push
cmp
insl
data16
mov
dec
pop
roll
add
mov
dec
aaa
cwtl
cmc
subb
movsl
movsl
xchg
inc
add
cmpl
push
loopne
test
mov
fmul
andb
pop
int
lahf
mov
fcomip
cmpb
cs
aaa
sub
pusha
sarl
int3
mov
stc
mov
mov
popa
sti
incb
or
and
pushf
inc
es
test
divl
iret
add
cmpxchg
js
imul
mov
xchg
dec
push
out
daa
inc
pushf
mov
push
popf
mov
mov
nop
and
test
scas
mov
adc
loope
sub
push
mov
aad
fwait
pushf
mov
cmpl
popa
xor
jno
dec
aad
in
mov
push
push
cmp
jbe
pusha
xchg
xchg
sub
add
call
pop
dec
sbb
mov
aaa
inc
test
cwtl
adc
lea
fwait
daa
dec
ret
cmp
sub
scas
repnz
xchg
dec
mov
mov
mov
inc
jg
adc
xchg
mov
enter
and
mov
mov
in
mov
int3
and
xor
cmp
sbb
aaa
inc
pushf
lea
mov
mov
fdiv
cmp
faddl
add
jno
and
loop
mov
or
or
fisttps
pop
pop
xchg
gs
int3
mov
pop
xor
jl
mov
jo
ss
xchg
rorb
fs
ret
sarb
cltd
pop
cld
cmpsl
testb
mov
xor
add
leave
xchg
orb
and
jl
fidivrs
fidivrl
or
mov
push
fists
mov
fdivr
dec
jle
sub
scas
mov
push
inc
jno
inc
shll
mov
aam
sbb
stos
rolb
aaa
mov
sub
je
dec
cmpsl
push
es
xorl
out
mov
fsubrl
cmp
test
lock
call
sub
add
jne
punpcklbw
adc
mov
daa
sbb
mov
fstpt
pushf
subl
add
pop
fwait
in
adc
mov
dec
and
out
cmp
jg
enter
mov
daa
pop
push
popa
sub
mov
vmwrite
push
es
adc
sub
inc
inc
pop
add
mov
xchg
sarl
hlt
daa
xor
test
ja
sti
xor
gs
aad
adc
into
bound
mov
mov
xchg
mov
or
pop
scas
lods
es
xorb
cs
ja
mov
mov
push
cltd
into
inc
or
pop
mov
das
lret
lds
jl
sub
pop
enter
jg
je
mov
inc
pop
or
or
into
sarb
pop
sub
mov
jns
fstps
in
lret
jmp
push
xrelease
mov
test
mov
int
lret
inc
loope
loopne
cmpsl
jle
add
aad
pop
insb
inc
adc
iret
cmp
and
popf
jne
in
cli
cmp
rcrb
std
sbb
pop
into
add
sbb
xor
int3
push
xor
jmp
test
aad
mov
pop
pop
cmp
mov
pop
pop
pushf
mov
inc
inc
dec
push
adc
roll
movsb
je
or
loope
repz
cli
ret
call
adc
loope
lret
mov
inc
inc
test
adc
pop
stc
sub
fisubrl
xor
cmp
test
test
inc
aas
and
mov
das
pop
pop
clc
in
icebp
loopne
adc
dec
mull
inc
xchg
sbbl
push
inc
push
or
mov
mov
pop
cwtl
sbb
gs
mov
fidivs
mov
loopne
punpckhdq
sub
dec
nop
adcl
cmpsb
cmp
xor
cmp
int3
push
cli
in
sbb
rcl
shl
mov
iret
je
int3
xorb
lods
and
mov
jmp
adc
inc
in
adc
cwtl
call
pop
js
pop
fcomp
mov
je
push
push
xchg
push
pushf
test
dec
push
fstpt
cs
lods
sub
dec
lds
mov
xor
pop
mov
jbe
ret
cmpsl
daa
aad
adc
pop
dec
mov
mov
add
andb
insb
repnz
dec
jno
ret
and
mov
mov
gs
inc
mov
pop
in
mov
xchg
insb
stos
repnz
mov
into
aad
in
ret
mov
pop
ss
popa
pop
push
sbb
lret
subl
clc
mov
cmp
cmc
cmp
int
cs
outsb
insl
mov
jns
aaa
mov
and
mov
lods
mov
pop
cs
sbb
mov
fdivrp
in
sub
sub
adc
pop
cltd
ret
mov
adc
fnstsw
cmp
jge
jnp
sbb
inc
mov
decl
dec
mov
mov
xlat
call
pop
packssdw
mov
pushf
jo
mov
leave
dec
outsl
in
add
cs
sub
jbe
mov
sbb
sbb
push
cmp
mov
loop
std
imul
vaesdeclast
aas
inc
mov
imull
les
and
push
pop
jns
add
or
movsl
leave
mov
subb
xchg
loope
pusha
xchg
leave
out
dec
push
inc
and
sbb
sub
fimuls
imul
push
into
xchg
or
imul
testb
xchg
mov
jb
xor
add
jnp
es
pusha
loop
dec
add
jno
mov
and
sbb
jns
adc
fnstcw
dec
fdivl
lret
cmp
divb
mov
fiadds
imul
je
fmuls
mov
inc
js
lahf
inc
loop
daa
inc
shl
out
or
movaps
xchg
xchg
repnz
push
sub
out
aas
mov
cmp
test
mov
xor
or
jp
loop
fsubrl
lcall
xchg
repnz
clc
xchg
xchg
inc
mov
enter
cmpsl
inc
rolb
lock
mov
fs
jnp
jo
insl
mov
pop
stos
pop
xchg
and
dec
xchg
mov
mov
jo
je
repz
jl
data16
jle
mov
stos
mov
adc
call
adc
push
cmp
loope
in
inc
ficompl
add
mov
push
mov
stos
loop
stos
push
push
fsubs
aas
jo
std
jl
vcomisd
outsl
cs
mov
add
or
ret
popa
cmp
xchg
xor
insl
nop
xor
dec
or
in
jbe
xor
or
or
imul
aaa
int3
cmp
sti
sbb
cwtl
aam
iret
xchg
popa
ja
inc
cwtl
pop
popa
out
insb
sub
sub
xchg
arpl
ja
dec
pushf
divl
xchg
push
popa
jnp
xchg
mov
lock
out
jg
jecxz
ljmp
imul
and
adc
push
int
and
inc
movsl
bound
popa
cmp
outsb
sbb
nop
push
daa
push
mov
pusha
dec
aad
jmp
je
outsl
aaa
je
sub
jns
in
sbb
stc
dec
xchg
cmc
xor
jg
cmpsl
imul
leave
dec
jbe
xchg
adc
pop
sub
shl
add
jbe
add
adc
cld
lods
mov
mov
jo
add
cmp
and
mov
dec
mov
jmp
daa
push
mov
dec
and
mov
inc
das
pusha
adc
push
fwait
cltd
ds
inc
insb
loopne
xor
push
adc
sub
push
or
outsl
cli
aas
xchg
outsl
pop
mov
in
or
sbb
sbb
sub
clc
dec
mov
repnz
je
pop
repz
pminub
dec
loop
adc
rclb
pop
stc
mov
inc
sarl
loop
dec
les
xchg
ret
loop
cwtl
lcall
in
stc
addr16
loop
adc
or
decl
or
ja
std
jg
aas
cli
ja
lcall
pop
xchg
clc
mov
dec
or
inc
add
inc
decl
push
mov
dec
inc
push
add
ret
xorb
ret
mov
call
jne
cmp
lcall
cmp
jmp
out
cmp
enter
adc
mov
nop
adc
mov
fcmovu
orb
or
mov
adc
pop
mov
or
pop
and
bound
daa
push
xchg
jo
pop
xchg
stc
add
cmpsb
dec
mov
xchg
stc
clc
mov
imull
les
mov
rcr
scas
insl
inc
adc
dec
mov
sub
or
sub
mov
ret
push
xchg
dec
imul
inc
lods
out
subl
and
pushf
test
jo
cwtl
add
test
sbb
shll
inc
loopne
push
mov
dec
mov
mov
xor
in
push
mov
pop
sub
dec
sahf
add
and
mov
sbbl
test
pop
movl
pop
repnz
sarl
mov
mov
xor
dec
dec
fcompl
std
pop
out
sbb
sbb
xchg
mov
out
movsb
test
push
and
js
or
repz
cmc
jmp
push
loop
adc
mov
or
sub
lock
sub
inc
cld
jmp
dec
notb
sbb
dec
imulb
mov
mov
fsubrl
je
sbb
pop
cmpsb
push
fisubs
scas
inc
out
mov
xlat
rorl
sti
add
fldenv
push
repnz
sub
aad
cmp
mov
popf
pop
jno
lcall
jg
push
mov
in
xchg
and
dec
pop
in
add
loope
push
jmp
stc
push
shll
mov
iret
nop
pushl
jg
mov
mov
dec
pop
stc
fisttpl
pop
adc
adc
push
xchg
decb
and
dec
cld
push
ret
sbb
inc
insl
add
lods
std
inc
add
mov
pushl
jg
into
and
inc
or
jg
les
test
xor
pop
push
lcall
icebp
cmpsl
iret
jbe
fcoml
sbb
addb
mov
mov
std
popa
sbb
int3
or
ret
adc
and
push
pop
sub
pop
xchg
stc
jbe
xchg
sbb
push
arpl
xchg
sub
popa
jg
add
mov
mov
mov
es
pop
jb
rcr
fstpt
ds
aas
and
mov
add
das
clc
sub
jb
loope
push
mov
scas
mov
sbb
push
fdivs
leave
aaa
test
clc
adc
aaa
push
sahf
shlb
jno
push
pcmpgtd
aaa
cmp
test
add
insb
dec
cwtl
adc
pop
dec
cld
xchg
xor
mov
push
inc
pop
mov
leave
sub
xlat
inc
and
js
and
xor
mov
push
mov
adc
mov
daa
vunpckhps
mov
ss
sub
in
xchg
pop
and
pop
dec
inc
pusha
sbb
int
insb
sbb
mov
js
repz
adc
push
pop
lods
sub
and
lock
jmp
jb
push
mov
sbb
mov
ret
inc
inc
js
es
inc
scas
xchg
lds
cmpsl
mov
std
js
adcb
pusha
xlat
loopne
sub
ret
inc
mov
int3
dec
call
mov
fcomp
jp
jmp
adc
mov
shll
aaa
adc
add
movsb
enter
sbb
daa
int3
mov
mov
pop
dec
xlat
out
inc
cmc
jno
popf
sub
cmp
aam
xchg
dec
ret
and
aaa
cli
mov
mov
cmp
lahf
mov
adc
mov
mov
mov
leave
aaa
mov
lret
dec
leave
xchg
cli
lock
dec
pop
arpl
pop
mov
clc
push
repnz
jecxz
pop
es
dec
adc
aaa
lds
mov
jp
test
xchg
mov
data16
add
jmp
fcomp
fldl
or
or
into
lcall
fsubs
fdivs
or
das
pop
decl
mov
push
mov
daa
not
jp
mov
inc
jge
jb
cwtl
fwait
sbbl
xor
sahf
sbb
mov
xlat
nop
arpl
sbb
adc
xchg
in
into
je
xor
imul
aas
or
ret
pop
pop
xchg
rolb
gs
icebp
ret
adc
fs
inc
sub
sbb
outsl
pop
sbb
mov
ret
pop
mov
cltd
insb
sub
adc
mov
cmp
push
imul
push
mov
test
sbb
mov
and
rorb
xchg
xor
rcl
pop
push
es
push
sub
adc
ret
mov
add
lret
cltd
lcall
push
and
and
mov
and
adc
js
fidivrl
lret
mov
cmpsb
jp
data16
loop
cld
and
cmp
stos
les
mov
sbb
cmp
pop
lcall
shrl
mov
mov
mov
mov
push
into
movsl
arpl
inc
lret
dec
adc
xchg
lock
dec
imul
inc
add
xor
add
int
push
loopne
xor
and
jl
pusha
cmpsb
xor
push
inc
or
not
fists
incb
push
dec
stos
js
fs
xchg
jno
inc
xchg
mov
arpl
sbb
mov
idivb
icebp
arpl
hlt
daa
pop
pusha
hlt
jecxz
addb
jno
addr16
shlb
push
lds
xor
or
out
mov
cltd
mov
pop
dec
add
pop
add
mov
clc
add
sbb
cwtl
mov
mov
negl
add
movsb
mov
mov
mov
aaa
mov
xor
sub
aad
fs
sub
jno
imul
mov
pop
rol
mov
pushf
insl
xor
adc
mov
stos
jl
sub
shll
in
stos
js
or
adc
js
loope
and
aam
add
gs
shl
dec
test
fildl
std
add
push
push
enter
dec
xchg
lods
push
in
or
addr16
add
es
popa
andl
data16
int
adc
test
outsb
pop
mov
notb
jo
aam
or
xlat
out
es
dec
ss
adc
jmp
mov
inc
mov
pop
jg
xchg
push
movq
ficoms
les
jns
mov
in
push
jne
mov
sbb
rcll
jne
stc
pop
sub
cli
jno
in
push
das
jno
sti
stc
add
lcall
test
out
xlat
jle
and
and
dec
cmp
cltd
call
rcrb
das
mov
ss
in
dec
add
add
vpaddsb
enter
je
dec
pop
ljmp
test
push
add
test
push
mov
ljmp
cmp
out
mov
xor
and
in
dec
jns
cmp
xchg
pushaw
mov
les
pusha
cmpsb
cmpsl
js
mov
cld
cwtl
cmp
cmp
sub
fistpll
popf
cli
inc
jl
mov
mov
jns
addr16
mov
push
inc
daa
dec
pop
jo
add
cltd
adc
sbb
xchg
mov
xchg
out
std
pop
jnp
int
inc
ret
cltd
xor
push
jle
inc
mov
xorb
inc
adc
mov
arpl
popa
dec
test
ja
sub
aam
cmpsl
js
fwait
pop
daa
repz
adc
lods
sarb
ljmp
mov
int
jp
repz
jecxz
shlb
aad
xor
jmp
filds
popa
xor
cmpsl
out
cmp
push
jmp
sar
aad
cmpsl
loop
mov
jl
mov
jmp
rcr
loope
movl
scas
fisubs
out
dec
jp
add
rol
lret
bound
testb
ret
aaa
sbb
nop
arpl
aas
ljmp
scas
leave
and
or
push
mov
cmp
add
sub
movq
cmp
fdivrs
das
das
dec
or
mov
dec
or
push
aam
adc
or
jb
out
fstl
and
and
stos
sub
lds
addl
add
sub
roll
addb
lds
xor
adc
xlat
mov
xor
jns
pop
popa
or
mov
rcl
pop
jle
addr16
call
xchg
movsl
pop
lods
adc
inc
jbe
or
mov
mov
xor
in
mov
add
xchg
inc
ror
push
rcrl
add
jne
pushf
push
add
or
insb
xchg
push
jno
adc
into
cs
or
popa
lods
sbbb
mov
movb
push
pusha
push
ds
and
and
and
dec
fidivs
adc
xchg
cmp
sbb
adc
cltd
addl
or
and
in
add
call
popf
cmp
and
add
push
add
add
push
hlt
or
add
mov
nop
sahf
or
xor
rcrl
push
adcl
pop
in
sbb
mov
mov
adcb
pop
fwait
mov
lods
popf
dec
xchg
aaa
adc
mov
dec
jne
cmp
sti
rol
les
test
pop
das
add
adc
lret
sub
or
scas
es
adc
xchg
push
or
xor
xchg
dec
lds
jo
test
xchg
push
jle
jno
lods
mov
hlt
pop
or
sub
mov
or
jne
mov
popf
pushf
jne
fxch
lcall
mov
adc
jl
jne
xor
sub
or
pop
fdivrs
sbb
or
xor
test
int
les
push
or
ror
xchg
shll
sub
inc
dec
xchg
test
sahf
cli
punpckhbw
aam
adc
add
push
or
loopne
jae
inc
inc
mov
mov
pusha
sub
sbb
mov
ret
xor
lock
loop
test
call
xor
popf
data16
cmp
nop
push
mov
sarl
and
sbb
inc
pop
push
imul
pop
stc
xor
outsb
ds
xor
out
jge
pop
cmp
push
sarb
jne
adc
pop
roll
rcrl
repz
cmp
es
iret
xchg
fs
movsl
pop
das
orb
lock
xor
stc
js,pt
addr16
cmp
lret
xchg
or
shl
lea
dec
pusha
lret
pop
aad
mov
dec
adc
jle
inc
sub
xor
ret
mov
adc
cmpl
repnz
push
sub
pop
sbb
push
push
xor
inc
push
into
cli
aad
xor
xchg
ds
jno
mov
jg
fwait
jle
jno
xor
icebp
add
mov
outsb
cmp
and
loope
mov
mov
sarl
lock
scas
insb
cli
xchg
rcll
and
lods
std
push
test
push
push
adc
mov
xlat
sbb
aad
cwtl
or
add
int3
hlt
or
sbb
mov
enter
sahf
cmp
in
lods
daa
mov
loop
and
stos
rcll
dec
adc
sbbb
adc
and
lcall
jns
push
push
sbb
mov
sbb
andb
xchg
mov
movsl
pop
addr16
and
pop
dec
clc
add
inc
fcomps
icebp
mov
xchg
mov
rorb
sbb
adc
lds
sbb
lahf
cmp
in
mov
or
mov
dec
jno
xor
push
mov
clc
jns
mov
or
xchg
add
inc
push
cmp
ja
jo
inc
repnz
imul
scas
dec
adcb
lret
lds
bnd
sub
int3
xor
mov
add
cmc
les
cltd
mov
lea
sbb
fs
je
push
sub
push
ljmp
cmpsb
push
xrelease
je
movsb
push
cmpsb
daa
sub
enter
ret
push
bound
xchg
jecxz
sub
mov
enter
sub
les
fnstcw
cmpsl
jns
mov
xchg
lock
pop
mov
dec
cltd
scas
xor
xor
pop
jle
mov
aaa
xor
or
ljmp
in
xorl
push
jp
fldpi
push
test
cld
sbb
dec
icebp
sub
subl
sbb
mov
sbbb
jo
jae
ret
pop
dec
mov
movsb
lret
pop
cmp
rorb
pop
scas
outsl
mov
into
mov
jecxz
cli
in
inc
jge
std
in
xchg
push
jne
movb
mov
cmp
mov
xor
pop
dec
outsl
xchg
repnz
rclb
mov
mov
mov
adc
cltd
ficoms
xor
mov
js
xchg
loope
sub
xor
add
mov
dec
ret
mov
xor
xchg
es
decl
mov
lock
push
push
cmpsb
test
push
sub
imul
outsb
xchg
inc
cld
cmpsb
adc
xchg
xor
and
lret
and
push
popa
xchg
jge
dec
sbb
mov
adc
shl
jno
pushf
in
ss
inc
sub
pop
movsb
pop
loopne
in
lahf
stc
xchg
loop
push
xchg
shlb
jo
xchg
push
outsl
adc
sub
in
adc
xchg
inc
mov
mov
push
adc
inc
vmovaps
outsl
test
test
in
push
sbb
rol
aam
add
icebp
out
mov
mov
in
iret
loope
pop
mov
xchg
aad
pop
pop
push
jmp
cli
jmp
xchg
mov
jg
push
add
push
mov
push
push
and
out
jbe
in
add
and
sbb
in
call
inc
xor
mov
and
pop
sub
inc
scas
test
out
lahf
movsl
or
int3
sbb
dec
fdivrs
or
popa
cmc
test
daa
dec
lea
das
sahf
pop
movsl
dec
ret
in
fmull
out
jmp
pop
sub
mov
mov
lock
cmp
loop
pop
mov
adc
mov
dec
iret
pusha
and
or
jle
enter
insl
jp
cmp
or
jg
push
jno
stc
push
lret
scas
push
clc
sub
jo
jns
lcall
or
cltd
mov
inc
sub
aad
inc
cmp
cwtl
add
cmpsl
jmp
push
bound
push
or
cmpsb
loope
loop
cmpsl
cmp
lds
mov
mov
xchg
popa
push
inc
adc
pop
fdivs
add
push
dec
mov
dec
shll
cltd
adc
mov
and
push
jbe
dec
aam
mov
cmpsb
mov
movsl
shll
movsl
in
xchg
lahf
or
ret
mov
pop
inc
in
xchg
sbb
inc
imul
sarb
xchg
mov
aam
jo
pop
loop
cmp
int3
xchg
sub
xor
mov
repz
loop
jns
pop
ljmp
mov
inc
lods
jbe
lret
cmc
cmp
dec
mov
loopne
or
sub
mov
mov
adc
jns
cli
jmp
aaa
les
xchg
lock
sbb
and
stos
stos
jp
cmp
das
icebp
movb
add
and
dec
xchg
cmp
ss
pushf
les
bound
ret
mov
scas
stos
and
pop
orl
sbb
scas
xor
test
iret
adc
std
stos
sub
js
sbb
push
jbe
outsl
xor
mov
jne
clc
imul
notb
adc
lods
icebp
lret
sub
idivb
inc
cmp
jmp
ffree
lret
repnz
test
loop
mov
push
xchg
divb
dec
mov
mov
mov
xchg
movsl
add
inc
sbb
bound
nop
pop
mov
aaa
add
loopne
ljmp
loope
jno
xor
andl
sub
jb,pn
adcb
and
lret
push
inc
test
push
enter
mov
pop
sub
inc
fildl
setae
dec
sarl
dec
xchg
fldl
cmpsl
xor
rcrb
mov
pop
and
push
ja
lods
loope
xor
jg
arpl
jg
movsl
mov
negb
sbb
out
mov
ljmp
pop
imull
xchg
xchg
in
out
pop
jb
ret
pushf
xchg
mov
xchg
outsl
call
clc
pop
cld
lret
mov
mov
lock
outsb
pusha
mov
jl
jl
decb
daa
movsl
popa
push
inc
testb
pop
lods
mov
fisttpl
pushl
test
sbb
bnd
stos
sbb
pop
cmp
xchg
or
sub
cwtl
xorl
mov
cmc
mov
cmp
dec
dec
push
jg
jb
loop
pop
sbb
jp
hlt
imul
hlt
sbb
or
and
stos
and
iret
jbe
repz
int3
cmp
movl
xchg
xor
lahf
out
push
insb
stc
cmpsl
cwtl
fcomip
scas
loopne
scas
and
add
mov
fsts
iret
fst
add
pop
mov
cmp
inc
movlhps
jns
call
adc
pop
dec
pop
aas
mov
aad
das
cli
cmp
fisttpl
aaa
arpl
inc
outsb
inc
lahf
pop
icebp
call
mov
pop
lcall
fcmovnu
in
iret
lcall
ja
xor
push
loope
dec
in
aas
mov
rorb
pop
fldenv
fcmovnu
xchg
inc
rcr
fidivrl
jno
sbb
insl
and
adc
sbb
mov
jmp
call
imul
and
push
xchg
movb
xchg
push
cli
mov
pusha
sbb
xchg
into
sub
add
inc
inc
adc
sub
iret
pop
inc
in
rorl
xchg
popf
push
mov
xchg
fsts
mov
movsl
xchg
push
cmp
sub
inc
sahf
addb
rorl
je
xor
testl
mov
adc
inc
roll
and
push
mov
adc
and
sub
scas
push
add
xor
push
pop
daa
insl
pop
add
and
sub
add
xchg
sbb
test
mov
mov
dec
dec
add
movsl
enter
hlt
mov
mov
adc
add
rcl
or
and
mov
sahf
push
mov
popa
xchg
mov
or
jns
mov
lds
add
inc
pop
push
add
imul
xor
jp
adc
sub
sbb
cmp
add
and
add
and
fwait
add
rorl
movsb
sub
xchg
orb
popa
inc
hlt
mov
in
pop
popa
rorl
or
jnp
lds
aaa
xchg
add
push
mov
push
and
or
cmp
jne
cmp
and
cwtl
daa
andl
inc
gs
popa
adc
bswap
pop
les
aad
clc
std
in
js
push
cmpsb
ret
or
xor
movsb
pop
sbb
adc
add
xchg
mov
mov
lds
and
push
loope
ret
in
push
push
shlb
jp
jbe
mov
xchg
cmp
inc
cmpsl
dec
xor
repnz
aam
fwait
mov
mov
lcall
mov
outsb
pop
jge
mov
and
xchg
mov
hlt
ficomps
dec
add
mov
lods
cltd
xchg
mov
andb
lods
jle
sbb
cmc
stc
in
jne
test
xchg
mov
push
lea
in
sub
andb
test
data16
inc
fs
jne
inc
sub
sub
and
pusha
push
cmp
add
je
hlt
rcrb
or
and
fsts
cmp
pusha
rorl
inc
shr
negb
ss
rcll
mov
aas
xor
dec
jno
and
cmc
das
incb
mov
jae
add
add
dec
shlb
xor
lds
cmc
pop
test
rclb
mov
movsb
mov
xor
adc
sbb
test
std
out
loope
test
push
push
mov
lds
ret
stos
ret
cmc
mov
or
push
int
cmp
or
ja
hlt
mov
add
push
es
sbb
inc
out
les
or
lcall
jb
loopne
dec
insb
das
mov
xor
adc
inc
or
xchg
xchg
pop
mov
orl
ja
jae
cltd
xchg
outsb
scas
inc
pop
out
outsb
lret
hlt
xor
iret
ljmp
fstl
in
push
out
dec
mov
mov
xor
mov
ret
das
lret
xchg
mov
lea
or
inc
or
shr
xor
xchg
cmp
mov
stos
and
sub
jmp
or
jo
insl
xor
fs
lcall
mov
and
push
ret
lods
stc
jnp
cmc
fcoms
leave
test
sti
subl
imul
mov
pop
xor
aaa
jge
jecxz
js
gs
jnp
pop
lcall
repz
jmp
shl
into
lods
pop
xchg
les
js
fwait
hlt
push
sub
xchg
inc
jne
sbb
cvtpi2pd
aas
mov
xchg
mov
test
dec
push
cmpsb
shlb
pop
jne
iret
adc
mov
inc
insb
iret
adc
das
cs
aaa
ret
fimull
sbb
pop
cmp
dec
lods
mov
ficoms
sbb
sub
push
pop
and
sub
mov
inc
fisttpl
mov
sub
addr16
ror
inc
pop
adc
or
xor
popa
mov
mov
inc
push
in
sbb
add
rol
sahf
cmp
inc
in
or
pop
test
rorb
jle
dec
fsubrl
sub
mov
int
rorl
push
add
int
popf
aam
sub
sub
movsb
roll
shlb
push
lods
mov
push
ja
xor
cmp
mov
fdiv
shll
sbb
je
and
or
mov
or
cmpsl
dec
notb
inc
cwtl
shlb
mov
or
pop
and
clc
jmp
sbb
pop
pop
icebp
cli
shll
inc
dec
adc
popa
jecxz
arpl
lcall
in
adc
xchg
sub
pushf
jno
fistl
and
jno
sub
stos
xor
inc
adc
lock
call
daa
loop
sub
jnp
stc
cli
out
lods
jle
imul
stos
popf
insl
mov
sub
pop
mov
or
fists
rcrl
mov
and
mov
or
jae
or
lahf
and
rolb
adc
xchg
in
fistl
sub
int3
inc
push
test
sub
imul
add
cli
adc
mov
sbbb
lret
lods
inc
xor
fmull
pushf
cmpsb
inc
xchg
adc
testl
push
aaa
daa
insb
inc
xchg
pusha
int3
sahf
into
or
pop
mov
pop
inc
mov
daa
inc
lods
lahf
in
ret
test
js
mov
mov
push
popf
xchg
call
xor
ds
cmp
xor
insb
les
ret
movsb
cmpsb
mov
sbb
add
pop
test
js
pop
pop
nop
cmp
mov
dec
lods
xor
outsb
pusha
mov
inc
mov
ds
pop
mov
scas
sub
cli
xchg
add
and
and
jb
or
push
mov
lret
aas
int
xor
xchg
and
pusha
dec
xchg
or
mov
cwtl
jns
test
xchg
fisttpl
inc
mov
iret
sbb
sbb
jp
mov
push
xor
hlt
idiv
sbb
cmp
mov
inc
mov
fimull
insb
imul
and
fsubs
push
ror
dec
popf
in
and
insb
into
cwtl
push
cs
enter
cld
aad
push
popa
push
mov
pusha
jae
aaa
lods
mov
pop
adc
roll
sub
inc
xchg
testb
push
adc
insl
ja
rclb
mov
push
cld
mov
scas
or
fisubrs
notb
jns
mov
in
lahf
out
lahf
adc
movsb
loop
or
push
cmp
rol
idiv
mov
push
pop
mov
push
aaa
mov
les
sub
mov
pop
inc
lcall
pop
test
add
pop
sub
lods
sarl
mov
ret
jmp
in
xor
or
push
ds
lods
cmp
into
fcoml
lods
iret
clc
mov
sbb
xchg
loop
mov
cmpsb
push
xchg
push
cmp
out
insb
or
gs
dec
ret
push
fwait
pop
ret
test
push
mov
cmp
stos
ret
cltd
jno
cltd
pushf
adc
pop
mov
lcall
inc
insb
push
int3
movsb
pop
cld
mov
daa
bound
push
or
ljmp
cs
int3
clc
jne
repnz
out
call
cmp
push
and
xchg
shrl
cmp
pop
sub
cld
sti
icebp
dec
icebp
addr16
rol
cli
inc
jnp
ljmp
inc
pmaxsw
outsb
lock
or
lock
sbb
pop
pop
sbb
cld
dec
adc
pop
mov
pusha
or
mov
add
push
cmp
mov
movsl
mov
sbb
inc
jns
push
cwtl
pushl
lock
or
call
xchg
mov
ds
out
push
pop
sub
add
inc
in
xchg
bound
jne
sbb
out
ljmp
sbb
leave
jg
mov
mov
cmp
dec
pusha
add
data16
push
mov
pop
rcr
or
cmpl
inc
add
insl
xor
xor
fimull
cmp
leave
jmp
hlt
push
pop
std
push
lods
mov
mov
cmp
add
movsb
sbb
sub
mov
mov
std
lods
mov
call
sti
cmp
mov
fnstsw
mov
fisubrl
mov
imul
sahf
jae
cs
iret
pusha
cmp
fistps
or
das
fldcw
push
cmp
daa
xchg
mov
into
test
xor
mov
stos
dec
push
dec
jns
or
daa
loope
fdivs
icebp
cmpsb
daa
or
repnz
sbb
xchg
test
xchg
out
hlt
dec
push
add
dec
std
cmp
jl
mov
bound
cmp
jge
jb
bound
push
in
jbe
mov
mov
adc
xchg
sub
pusha
and
pop
adc
addr16
jnp
pop
and
jecxz
push
jl
dec
sahf
jno
xor
or
mov
mov
ljmp
movsb
cmp
rorb
scas
jbe
inc
cmove
ud1
cmp
repnz
cmp
enter
pop
add
imull
dec
divl
push
outsb
outsb
xor
aam
push
mov
lds
fmull
jmp
sbb
mov
mov
inc
mov
outsb
mov
loope
repnz
xchg
sub
xor
pop
mov
add
sbb
jg
jno
jecxz
stc
pop
push
sbb
jno
xchg
insb
mov
mov
pop
dec
jp
inc
lods
aad
cs
cld
lahf
aas
ss
in
and
dec
add
popa
inc
pop
mov
out
xchg
shrb
roll
jg
xor
inc
mov
pusha
in
js
pop
punpcklwd
ss
mov
jp
rcr
xchg
in
or
insb
sbb
jmp
sub
push
jbe
cmpsb
cmp
aam
mov
clc
inc
xchg
push
dec
cmp
cmp
sahf
iret
and
fsubrl
adc
imul
inc
packssdw
xchg
clc
push
dec
stos
into
dec
push
sbb
mov
dec
clc
inc
fcompl
loop
jno
fistl
jnp
subl
dec
jmp
or
mov
push
add
leave
inc
dec
pop
fidivs
jno
cli
mov
clc
dec
test
jbe
cmpsb
repz
fstpt
enter
cltd
mov
into
scas
std
icebp
inc
ds
jmp
xchg
inc
xchg
aas
jbe
mov
mov
sbb
pop
stos
dec
repz
movsl
jecxz
sub
cmp
data16
sub
push
shlb
mov
mov
jno
int
or
sahf
or
aas
roll
mov
mov
stos
adc
leave
aad
add
fs
adc
jecxz
xlat
mov
mov
sub
fisttpll
rclb
shl
cmp
lcall
mov
cmp
lcall
in
xor
push
scas
xor
adc
in
aaa
stos
mov
push
sbb
nop
mov
push
cli
lahf
xor
lea
std
xor
sub
push
stc
stc
inc
cmp
aaa
push
addb
je
mov
test
dec
xchg
mov
xor
pop
clc
add
mov
f2xm1
push
xchg
inc
lods
out
xchg
dec
insl
sub
imul
pop
cmc
xor
sub
insb
cmp
mov
jno
mov
cmp
xor
mov
mov
daa
mov
je
push
xchg
inc
mov
out
loopne
push
mov
dec
or
sbb
js
or
mov
in
adc
cltd
enter
dec
int3
xor
nop
lcall
lcall
lcall
adc
mov
stc
add
fldl
aad
jo
jnp
lods
dec
push
pop
arpl
lret
xchg
fs
ss
js
gs
or
push
dec
pop
or
popf
lea
sub
sbb
sbb
faddl
mov
mov
adc
adc
or
mov
push
inc
adc
cmp
xchg
repnz
bound
adc
mov
cld
es
inc
mov
push
add
cli
shlb
jle
cltd
jle
in
mov
adc
inc
inc
jle
ds
jecxz
loopne
xor
pop
lea
xor
inc
jb
in
and
mov
mov
scas
leave
dec
push
cmp
dec
ret
xor
fsubrs
mov
push
push
arpl
and
rorl
and
jbe
lcall
sbbl
mov
aam
adc
loope
sahf
push
and
cmpsl
jge
addr16
repnz
xchg
pop
mov
sub
or
lock
out
pop
ret
sahf
inc
enter
push
fildl
fstpt
push
cmp
and
lahf
xchg
sub
inc
dec
bound
xor
lds
push
es
iret
ds
mov
cmp
daa
in
dec
outsb
pusha
and
in
out
jmp
loop
iret
imul
in
aaa
rorl
inc
jnp
mov
push
add
cmp
push
in
dec
mov
imul
cltd
dec
dec
out
add
jbe
mov
cli
cmp
repnz
sub
push
sub
sbbb
xor
pop
xor
mov
adc
int
lock
lock
scas
and
pop
cmp
and
fadds
jnp
aad
pop
fisubrs
jbe
xor
pop
mov
outsl
enter
sub
jmp
mov
rcrb
aad
and
in
and
cld
pushf
dec
ret
dec
mov
mov
sub
xchg
outsl
imul
lods
iret
sbb
mov
dec
xor
out
dec
lahf
sbb
mov
shrl
shll
mov
movsb
fnstsw
inc
or
push
pop
lods
jns
lea
jne
adc
out
mov
pop
inc
stc
into
hlt
js
movsl
sahf
cld
ret
and
insb
out
mov
test
fstps
inc
push
xor
xor
mov
jae
std
icebp
loope
push
adc
jmp
enter
or
mov
negb
fidivrs
pop
sbb
adc
sbb
fs
push
pop
cmp
sub
aam
aaa
adc
lret
pusha
enter
cmp
imul
xor
in
jp
jecxz
out
xchg
fdiv
jge
mov
xchg
xchg
inc
fwait
cs
jmp
leave
sub
cli
pop
or
cwtl
scas
dec
cmp
jbe
mov
xor
shlb
shll
pop
test
lret
scas
fidivl
lcall
push
jle
mov
inc
jns
je
mov
mov
adc
mov
pop
or
bound
leave
shll
or
enter
xchg
fimuls
pop
into
call
mov
sub
mov
mov
mov
in
call
cltd
jne
mov
ror
adc
shrl
aas
mov
in
lea
add
cmpl
mov
or
dec
dec
mov
sbb
mov
cwtl
ds
inc
daa
stc
test
test
pop
sbb
fistl
pusha
imul
jae
xor
sarl
mov
push
dec
test
pop
sbb
or
hlt
test
pusha
dec
push
add
add
push
mov
mov
sub
and
jb
jne
or
fwait
sub
loop
popa
cbtw
das
sar
dec
inc
lea
pop
jbe
movsl
lock
rcr
mov
sbb
js
mov
inc
out
add
loope
out
add
xchg
ffree
adc
in
jne
and
push
xchg
test
rol
push
xchg
loop
adcb
iret
jb
fdivl
jbe
enter
lods
pusha
ficompl
and
xor
insl
push
ret
sbb
lret
popa
inc
and
test
xchg
or
inc
mov
dec
dec
adc
xchg
aas
lea
jno
dec
inc
or
xchg
in
mov
sub
sbb
pop
sub
movsb
sbb
sub
jns
pop
test
out
add
push
cmp
cli
push
mov
xchg
scas
stos
pop
xlat
inc
and
sbb
jae
imul
mov
cmp
pop
cmpsb
insl
lcall
jle,pt
lea
fwait
js
mov
sti
and
mov
enter
sarb
inc
lret
fld
inc
xchg
out
in
mov
std
enter
sbb
or
mov
mov
cmpsl
or
adc
insb
lods
outsl
ficoml
scas
xchg
lock
nop
pop
mov
stos
out
add
sub
mov
ds
lock
int3
lahf
adc
mov
jg
repz
xlat
and
pusha
xchg
loop
fdivrp
fists
xor
dec
stos
mov
test
enter
or
and
in
mov
cmp
notl
mov
fwait
imul
jns
xor
xor
sub
das
popf
sbb
dec
push
jns
stos
mov
sub
cli
xchg
sbb
push
cmpsl
int
gs
sbb
sbb
mov
loopne
call
or
dec
and
mov
cmp
add
ja
and
test
xchg
unpckhps
and
imul
dec
mov
adc
adc
push
xchg
addr16
sti
fists
fildl
mov
cmc
sub
sbb
cmp
jl
xor
cmc
fwait
pop
dec
or
mov
xchg
movsb
jns
or
xor
nop
repz
lds
or
jge
mov
out
scas
gs
mov
outsb
mov
pop
xchg
test
dec
rcl
cmpsb
andb
test
mov
cmpsl
add
jp
hlt
fldcw
shlb
xchg
je
imul
pop
push
loop
in
lret
insb
add
mov
icebp
in
sub
jne
inc
test
in
pop
dec
inc
movsb
pop
leave
test
inc
pop
fistpll
enter
test
subl
push
pop
push
dec
int3
or
cmp
xor
arpl
xchg
scas
iret
xchg
loope
icebp
lahf
xlat
addr16
lods
ljmp
fmull
mov
scas
xor
adc
or
pop
inc
cmpsl
adc
dec
and
xor
dec
stc
xchg
push
sbb
ret
or
cmp
push
cltd
sbb
lcall
lcall
imul
addl
dec
cmpsb
rorl
movsb
mov
mov
rcl
lds
cld
shrb
ret
test
mov
shll
xchg
pop
sub
adc
sbb
sbb
fisttpl
dec
roll
mov
fwait
and
xor
push
sbb
mov
add
pop
stos
je
imulb
lahf
stc
mov
xchg
jb
mov
pop
sbb
mov
testl
mov
mov
ret
das
dec
xor
std
lock
testl
mov
adc
pushf
fst
jae
cmc
dec
pop
jno
enter
push
lods
fwait
mov
xor
cmc
mov
sahf
xchg
cmp
call
lcall
mov
rcrl
xor
or
push
mov
ds
inc
popl
push
add
push
pop
cmpsb
sub
sti
cmp
das
bnd
inc
add
imul
mov
mov
and
ret
out
iret
lock
loope
inc
inc
or
fmul
icebp
add
add
das
jnp
push
xchg
push
sub
rolb
lcall
sbb
add
jb
sbbl
mov
lret
sub
mulb
test
sbb
push
xor
mov
jl
cmp
aas
cs
pop
mov
adc
mov
jg
aaa
mov
mov
dec
push
stos
xor
xor
pop
stos
test
mov
insb
mov
loop
inc
xor
jne
loope
fisubrl
cmp
or
aaa
mov
xorb
xor
pop
call
out
sbb
andb
adc
sbb
pop
fsubs
gs
and
fwait
jae
lret
popa
mov
push
mov
mov
clc
xchg
push
aas
mov
push
push
insb
jnp
mov
pop
pushf
add
inc
mov
add
jge
pop
adc
push
scas
adc
imull
int3
sub
pop
cmp
into
sbb
mov
push
cmp
push
fs
xor
in
int
out
push
dec
fwait
es
sahf
jl
inc
fcoms
cwtl
dec
and
add
sub
ret
inc
cmpsb
ret
mov
dec
leave
rcrb
jbe
jbe
add
push
movsl
xchg
and
or
mov
and
idivl
lahf
shrl
pop
mov
and
or
mov
jne
cmp
sbbl
mull
mov
rorl
enter
dec
jo
sub
lahf
ds
sbb
jle
cmc
sbb
xor
cli
idivb
xchg
cmc
sbb
pop
add
movsb
dec
add
iret
incb
les
pop
inc
jns
loop
cmp
push
dec
pop
outsl
mov
sbb
rcl
adc
push
movsb
and
out
or
movsb
cli
lret
aam
ss
mov
aad
shl
mov
out
xor
mov
in
lock
andb
mov
or
mov
mov
mov
inc
arpl
inc
aaa
in
lret
les
mov
pop
mov
lret
sahf
mov
sbb
inc
and
lcall
call
cs
aam
outsb
call
fdiv
test
ficomps
ljmp
ss
or
aam
adc
dec
shll
mov
stos
popf
fmulp
or
es
cmc
xchg
or
mov
rorb
sbb
push
es
daa
mov
leave
outsl
push
xor
fstpt
movsl
xchg
aam
mov
out
push
pop
xor
adc
or
xchg
sub
mov
xchg
push
mov
cmp
lahf
mov
sbb
pop
stos
add
imul
enter
xor
pop
push
mov
mov
mov
sbb
or
add
cmpsb
sub
popa
bound
sbb
add
frstor
mov
sbb
inc
sub
ret
push
leave
cld
orb
add
pusha
xorb
xor
mov
jo
mov
sbb
idiv
mov
orb
in
inc
pop
rorl
sbb
mov
jbe
mov
dec
push
call
jge
sbb
xchg
mov
cld
in
cmpsl
cwtl
enter
inc
in
jbe
mov
lret
dec
call
dec
test
and
pop
pushf
out
jae
mov
or
mov
bound
inc
lods
loope
xor
xor
int
mov
fs
push
lret
pop
cmp
inc
std
and
sbb
loope
fsubl
push
sbb
inc
pop
popa
xchg
push
push
cmp
or
dec
into
cli
sub
in
push
push
mov
aaa
es
xor
in
mov
adc
adc
sbb
clc
xchg
or
sub
fnsave
mov
push
mov
cmp
mov
into
in
cmp
sub
repnz
xchg
les
dec
bound
xchg
cli
mov
sbb
mov
cwtl
lods
or
pop
aaa
push
jl
fidivrl
mov
out
rcrl
dec
pop
repnz
pop
ljmp
icebp
pop
in
cltd
dec
push
pop
cmp
xchg
adc
xchg
sarb
cld
gs
lahf
fisubl
sbb
cwtl
arpl
in
sbb
rorl
fs
mov
leave
test
in
mov
mov
shr
orb
jne
xchg
mov
pop
mov
enter
les
icebp
inc
es
push
jns
jl
push
cmp
lcall
cmp
test
fs
cs
rolb
aam
ds
add
rcrl
mov
popl
push
pop
push
aam
mov
inc
inc
in
dec
push
cs
push
lea
das
or
push
xchg
mov
or
out
push
push
add
sub
iret
mov
arpl
pusha
inc
fstps
test
dec
mov
mov
fsts
xlat
repnz
sbb
jmp
push
inc
hlt
push
push
dec
daa
lret
jb
cmp
fldl
xchg
mov
sub
bound
aam
call
popa
jo
adc
sub
jle
jb
adc
and
cmp
dec
in
adc
sub
or
clc
sub
add
push
xchg
xchg
mov
test
lret
sub
xor
in
push
stos
cmp
mov
mov
pop
decb
rcrl
sub
dec
daa
dec
imul
mov
andb
test
icebp
and
cmp
mov
arpl
shlb
adc
xor
mov
call
es
sub
out
movsb
inc
pop
jo
cmp
xor
dec
sbb
jle
push
adc
cld
out
mov
lahf
sbb
stos
popf
sub
jo
addb
idivb
xor
jp
xlat
ja
and
pop
mov
out
dec
cmc
icebp
push
addl
inc
lds
aas
cmp
xor
insl
or
mov
pop
icebp
cmc
xchg
in
or
cmpsl
mov
mov
mov
dec
dec
int
adc
in
insb
test
push
jbe
adc
outsb
mov
mov
arpl
cmc
daa
scas
call
dec
cmp
xor
loop
lret
popf
cmp
mov
mov
in
out
mov
dec
push
mov
aas
sub
dec
jle
mov
sti
mov
mov
sub
push
inc
scas
sti
mov
sti
sbb
bound
cmpsb
rclb
idivl
loope
mov
stc
push
shr
cmpsl
push
inc
add
lret
mov
in
stos
jb
adc
add
mov
xor
mov
dec
test
inc
or
or
nop
jp
rcrl
mov
push
push
aaa
lds
pop
idivl
xchg
ret
fdivs
sub
test
jns
mov
into
divb
outsb
pushl
cld
mov
cs
mov
mov
sbb
sti
pushw
lcall
fbstp
psllq
add
in
rorb
xchg
into
mov
add
xor
mov
xchg
xchg
xchg
leave
sub
js
jne
ss
outsb
or
nop
lret
jb
mov
rcl
jle
js
test
inc
push
add
sti
aaa
inc
mov
aam
lret
or
bnd
xor
aam
scas
test
test
jns
outsb
inc
sub
test
sbb
cmpsl
pop
notb
int3
dec
mov
dec
mov
icebp
loop
in
in
sbb
in
mov
jl
jae
sbb
jmp
adc
and
cwtl
mov
stos
aam
push
mov
arpl
aad
mov
outsl
cmp
icebp
out
leave
lret
mov
cmovg
dec
pop
das
mov
mov
jnp
sarb
fnstcw
mov
insb
arpl
imul
cmp
pop
in
clc
xchg
add
dec
in
mov
fdivl
lret
jns
insl
sbb
cli
rep
test
xchg
cmpsl
adc
inc
fidivs
sahf
lods
cmc
xchg
lock
cmc
psubq
or
xchg
jne
cmp
pop
test
mov
loopne
jg
adc
pop
lret
adc
je
filds
push
mov
outsl
pop
inc
mov
stc
or
fucomi
and
int3
jo
push
fnstenv
test
dec
shll
mov
int
lcall
int
sub
addr16
negb
xor
cmp
cmp
adc
push
sbb
push
dec
loope
jnp
scas
jb
sub
dec
or
pusha
adc
pop
ja
and
sbb
aad
adc
cmpsl
in
stc
shll
adc
push
cmpsl
adc
ret
sub
in
xor
pop
pop
and
sub
pop
dec
or
xchg
test
and
int
jnp
mov
nop
dec
cmp
lods
fstpl
or
jbe
and
jg
push
and
dec
fidivrs
push
jp
jge
ds
pop
scas
ja
and
cmc
or
fxch
cmpb
mov
pop
jae
clc
sbb
bound
arpl
lds
or
sub
imul
cs
ljmp
test
jae
push
sbb
test
dec
inc
xor
loopne
lret
cmp
xor
gs
orb
cmpsb
jne
push
inc
in
jmp
and
dec
js
sbb
lock
insl
cmc
ljmp
push
mov
and
dec
test
icebp
dec
popa
push
xor
xchg
frstor
ret
jmp
push
sub
mov
fldl2t
mov
jecxz
insb
nop
aad
pusha
push
dec
clc
jne
lahf
adc
fldt
pop
inc
je
leave
or
push
xlat
out
stos
iret
jno
xor
add
or
xchg
adc
in
repnz
push
mov
adc
adc
ds
or
adc
and
icebp
hlt
xlat
lret
cmp
es
xchg
xor
mov
es
movsb
gs
xchg
jecxz
jg
call
hlt
mov
mov
std
insl
xor
orl
mov
sbbb
pop
rcrl
mov
push
cmp
test
lcall
sbb
xor
lret
adc
mov
adc
clts
movsb
movsb
call
push
mov
ret
push
ss
xchg
mov
mov
stc
divl
mov
mov
dec
add
mov
loope
ss
cli
add
mov
cmp
aaa
cmp
push
mov
lods
imul
xchg
adcb
aaa
mov
fsubrs
mov
out
jmp
aas
mov
in
std
pop
movsb
or
outsb
enter
xchg
ret
lcall
mov
jmp
push
cmp
push
pop
cmp
or
inc
test
std
outsb
cmp
pop
jae
pushf
shrb
and
fcoml
sbb
push
pop
aad
and
xor
lahf
nop
mov
stos
mov
in
leave
addr16
mov
add
fdivrl
sub
test
adc
xor
test
fwait
and
mov
enter
pop
pushf
adc
scas
add
ret
mov
mov
jo
data16
jp
inc
enter
stos
out
shll
cmc
repnz
sbb
fwait
jl
and
out
and
mov
je
mov
loope
cltd
cmp
stos
cmp
hlt
add
sbb
lods
into
mov
push
xchg
jno
daa
movsb
cbtw
dec
out
fsubrp
add
and
cmpsl
jnp
adc
jmp
bound
add
push
or
loope
stc
mov
dec
lret
insb
insb
fs
mov
dec
in
cld
loopne
xchg
pop
or
rorb
sub
push
sub
sub
sarl
pop
imul
daa
or
xchg
xlat
nop
cli
cs
xchg
xor
xor
add
aad
imul
mov
clc
sbb
push
dec
dec
in
dec
mov
das
push
push
jge
jno
push
cmp
enter
in
ljmp
aad
loop
leave
ss
mov
adc
jo
mov
insl
mov
stos
jg
inc
imul
dec
bound
push
les
jmp
or
cmp
and
stos
ljmp
popf
push
andl
jge
or
cmp
divl
jp
and
push
xor
popa
mov
pop
and
push
dec
ror
add
sti
dec
sbb
and
cmp
adc
subb
jmp
dec
mov
popa
js
cmpsb
push
push
xor
push
dec
out
and
lods
sub
push
xchg
in
mov
jno
fidivrl
clc
aam
adc
je
jp
cmp
sbb
push
dec
dec
movsl
xor
jnp
sahf
popa
xor
push
push
dec
xchg
pop
fdivrp
push
fcmovb
sub
mov
xlat
scas
ja
fistpl
pusha
in
into
lret
cltd
xor
add
loopne
aaa
and
xor
imul
mov
xchg
repz
and
test
mov
fidivrs
pop
mov
mov
jno
add
push
add
pop
shlb
arpl
push
in
xlat
xchg
push
and
les
add
imul
mov
mov
xchg
ret
call
aad
xchg
int
fwait
arpl
ljmp
sbb
in
jg
data16
xor
cltd
cltd
ja
jge
adc
std
pusha
mov
jecxz
fnstcw
and
xor
icebp
stos
pop
inc
cmp
movsb
testl
imul
and
out
push
stc
fbld
and
and
xor
aad
mov
xor
and
je
fcmovnbe
push
pop
ds
jle
dec
cmp
cmp
jg
mov
sbb
aaa
or
pushf
push
and
fs
jb
pusha
mov
xchg
pop
pop
outsb
pop
mov
add
inc
js
cli
fists
icebp
mov
dec
xorl
test
movsl
dec
push
inc
ret
jmp
xor
push
je
loope
mov
cltd
lds
mov
aaa
add
adc
xchg
or
testb
fs
ljmp
pusha
cltd
lret
stos
pop
daa
mov
xor
lret
xchg
iret
mov
xchg
loopne
push
fcomps
adc
sbb
sbb
adc
xor
inc
jbe
fdivs
sub
les
inc
stos
cmp
xor
mov
jne
loop
int
sar
adc
ja
dec
psraw
push
add
das
test
fidivs
mov
add
jno
pop
mov
fldcw
and
jle
les
ret
arpl
outsb
sti
mov
lods
popa
test
xchg
sbb
and
mov
and
inc
xchg
das
bndstx
push
les
xchg
xor
or
fistps
mov
loope
mov
mov
jle
bound
js
push
aam
sub
mov
sbb
cmp
xor
call
adc
mov
daa
loope
dec
je
in
jns
movsl
int
cmc
cwtl
int
and
ret
int
xchg
shl
scas
adc
xchg
and
dec
dec
add
into
jecxz
mov
out
and
add
inc
or
clc
into
add
mov
jmp
ljmp
fnstenv
pshufw
mov
mov
filds
sbb
cmpsl
mov
std
mov
sbb
seto
sub
js
pushf
stc
mov
sti
mov
pop
adc
add
shlb
stc
dec
dec
push
xchg
testl
xchg
int3
out
jle
into
add
lret
and
fwait
in
mov
sbbl
lcall
adc
mov
popa
fstpt
push
aas
pop
inc
or
fiadds
test
mov
adc
in
les
out
subb
fwait
pop
pusha
and
xchg
mov
sub
popf
xlat
mov
ror
dec
jbe
cmc
psllw
out
mov
cld
hlt
mov
mov
jl
aas
jge
cld
mov
mov
into
push
mov
pop
movsb
shlb
rcll
cmpsb
out
movsb
fisubrs
mov
push
adc
sahf
arpl
popf
aaa
aam
mov
cltd
cmp
mov
sbb
fcmovb
enter
jecxz
inc
dec
sbb
push
cltd
jb
popa
push
aaa
xor
mov
mov
sub
data16
rclb
data16
sti
into
push
push
mov
int
add
shll
adc
fcomps
adc
out
shlb
fndisi(8087
jae
adc
jle
aam
pop
sub
shl
push
cltd
aad
into
jg
pop
xchg
clc
xor
and
mov
lahf
enter
int
cmp
push
sub
inc
pop
ficoml
int3
aam
sar
sahf
fadd
sbb
arpl
adc
jnp
or
hlt
fwait
and
dec
dec
dec
lds
mov
aam
adc
inc
data16
mov
jno
inc
jmp
fwait
xchg
imul
and
fidivrl
mov
jp
sbb
in
xor
stos
mov
mov
fwait
out
cmp
mov
jl
or
inc
inc
mov
or
subb
inc
cs
out
cmp
xor
or
xor
jb
dec
push
and
enter
mov
xchg
mov
jl
jbe
out
lret
insb
xchg
mov
inc
pop
sub
and
dec
pop
dec
movl
jno
test
mov
daa
out
push
out
xchg
insb
mov
xchg
cmp
and
stos
xchg
mov
push
mov
jne
mov
outsb
or
test
dec
loop
lcall
popa
imul
jne
jae
sbbl
xchg
repz
dec
mov
xchg
sbb
pop
push
movsb
pop
in
aaa
xchg
lea
das
sub
insl
fimull
std
pop
scas
sahf
sbb
push
push
shr
lret
fmull
lahf
ljmp
and
enter
mov
bsf
sub
pop
jnp
in
mov
insl
sub
xchg
adc
push
addb
aas
mov
mov
cmp
leave
fidivrl
xchg
push
jnp
mov
sub
lcall
xchg
jge
lret
mov
sahf
add
push
rol
repz
cmp
imul
push
movsl
or
xchg
add
push
and
pop
inc
rcll
pushf
xor
mov
aam
jne
movsl
ja
fsubr
pushf
test
adc
lods
mov
bound
push
leave
cmp
das
dec
in
cmp
jg
xchg
movsb
push
pop
push
cs
jbe
mov
movsl
xlat
inc
mov
ror
int
cmpsb
add
mov
xor
adc
xchg
test
or
ljmp
fcmovb
add
sahf
xor
pop
sub
movsb
icebp
cmp
push
xchg
je
insl
push
xchg
cltd
dec
testb
adcl
inc
push
fbld
js
outsb
leave
outsb
fnstsw
aad
repz
into
dec
push
push
clc
push
pop
test
mov
or
lret
sub
addl
into
pusha
jg
mov
mov
adc
movsl
mov
lcall
mov
mov
jnp
push
or
cmpsl
cmc
cwtl
lahf
pop
stc
test
jmp
int
mov
sub
in
loop
dec
mov
or
hlt
xor
imul
pop
and
movsb
mov
scas
imulb
inc
faddl
sarb
in
lea
lcall
pop
gs
cmp
cmovns
push
mov
addr16
mov
dec
gs
sbb
nop
or
cmp
sbb
dec
xchg
jns
aas
push
addl
in
loopne
cmp
lock
dec
cmpsb
xor
xchg
xor
movsb
sbb
jno
jns
daa
push
testb
bound
mov
mov
sahf
nop
pop
xor
leave
sbb
pop
xchg
cld
and
sbb
mov
push
pop
daa
mov
mov
inc
fwait
jge
stos
jge
inc
subb
test
stos
mov
addr16
and
push
pop
adc
nop
xchg
lock
ret
imul
test
xchg
cmp
je
movsb
or
arpl
dec
add
mov
mov
shlb
or
jne
inc
popf
mov
inc
inc
pop
pusha
test
jge
into
pop
pop
gs
xchg
mov
in
push
nop
sub
jns
and
xlat
in
call
call
adc
xchg
add
in
mov
fcmovbe
add
cmp
pop
dec
leave
xchg
out
mov
imul
jbe
es
push
leave
out
push
fdivs
mov
pop
push
icebp
cmpsb
sbb
add
cltd
xor
cmp
xchg
or
or
push
pop
lock
fnsave
cwtl
out
adc
mov
imul
or
lret
lret
iret
and
mov
xchg
ror
in
xchg
mov
into
cmp
arpl
and
dec
in
sub
hlt
call
or
pop
jp
scas
rcll
loopne
leave
stc
pusha
hlt
jne
jae
repz
lret
orl
jl
lock
pop
clc
sbb
pop
mov
leave
loopne
fnsave
xchg
push
cltd
pop
dec
jp
cmp
mov
pmaxub
sub
cmp
xor
push
mov
idivb
inc
movsl
xchg
push
mov
cmp
ret
or
push
insl
sbb
dec
mov
inc
pop
mov
mov
outsb
aad
cli
xor
incl
or
test
and
shlb
mov
jle
call
int
repnz
jns
test
rcll
into
dec
test
lock
push
clc
mov
jb
mov
cmp
out
pop
notb
mov
xchg
sub
adc
cltd
push
cltd
adc
pop
test
fldl
mov
mov
lock
and
mov
push
mov
icebp
add
hlt
test
out
lret
outsl
cmp
in
mov
ds
shl
xchg
xlat
add
std
add
aam
shr
mov
xchg
push
dec
push
aad
push
hlt
mov
mov
lods
popa
push
rcrb
sub
das
cltd
in
jg
xchg
jae
in
icebp
xlat
push
outsl
into
adcb
mov
sar
or
add
fs
fdivr
add
mov
dec
mov
dec
shll
leave
and
add
std
sub
cmp
sbb
adc
repz
or
dec
jb
pop
add
scas
das
mov
jns
adc
push
jnp
dec
in
inc
clc
mov
daa
ret
and
hlt
cwtl
stos
seta
or
pop
mov
add
sub
lods
sbb
test
subb
or
adc
repnz
mov
cmp
mov
push
push
ljmp
adc
push
cwtl
in
shl
and
or
paddb
pop
insb
test
mov
jmp
adc
cmp
push
cmp
subl
cmp
and
pop
or
popa
sub
pusha
xchg
or
cwtl
inc
mov
dec
or
fsubrs
sub
test
ss
in
pusha
in
mov
pop
ljmp
push
popa
imul
mov
test
inc
insl
fsubrs
popa
xchg
add
clc
test
imulb
mov
adc
mov
outsl
push
frstor
and
lahf
popa
mov
push
mov
jno
sahf
adc
mov
inc
aaa
sbb
testb
scas
popf
test
push
lds
cmc
inc
mov
out
xchg
fbstp
aam
popa
jg
push
cmp
stos
lods
cmp
sub
pop
pop
in
cltd
fistps
mov
mov
fcmovne
rorl
in
dec
les
mov
cmovb
lret
addr16
or
push
lcall
add
sub
push
cmp
or
in
sbb
dec
enter
inc
jnp
push
test
and
cmp
ret
sti
mov
sbb
push
call
clc
out
sti
xor
sbb
insb
jns
inc
lahf
pusha
push
or
mov
xchg
dec
mov
mov
shl
es
or
andl
xlat
mov
test
loopne
jmp
dec
xchg
sbb
fnsave
mov
pop
jae
jp
aad
and
sub
xchg
xchg
add
ljmp
sbb
mov
ja
sub
ss
ficomps
xchg
enter
add
test
sub
pop
out
xchg
xchg
inc
mov
cmpsl
inc
sbb
jb
pop
scas
ret
lret
inc
aad
mov
in
adc
xchg
mov
or
lahf
mov
and
xchg
test
sub
jns
sub
into
sbb
idivl
lahf
push
mov
and
dec
push
mov
pushf
pop
adcb
repnz
leave
fiadds
and
loop
cmp
pop
cli
mov
scas
mov
lods
jnp
test
and
enter
enter
and
jo
test
mov
jo
packssdw
mov
pop
adc
xor
dec
fucomip
add
cmp
xor
addr16
pop
mov
ss
mov
cmpl
movb
test
lea
sub
or
cmc
xchg
cwtl
test
mov
dec
push
into
jmp
in
fwait
inc
cmp
popf
jl
clc
lret
and
es
aaa
int3
cmpl
addr16
daa
xor
dec
and
dec
mov
hlt
rcrb
imul
call
mov
test
push
fwait
mov
pop
mov
jno
das
and
insl
adc
loope
and
mov
fcmovu
sbbl
mov
loope
clc
xchg
ds
jae
pop
negl
sub
cwtl
sub
jmp
mov
clc
adc
insb
arpl
hlt
test
test
sub
adc
iret
mov
pusha
sbb
xchg
addr16
push
shlb
aam
xchg
cltd
aas
ljmp
inc
int
in
sbb
stos
or
daa
push
ss
rorb
lcall
jb
pushf
push
pop
mov
cmpsl
jle
add
out
das
insb
lds
sub
in
cmpsl
push
add
mov
xchg
mov
jp
rcll
cmp
outsl
icebp
sbb
and
ss
cmp
outsb
ljmp
pop
inc
lock
loopne
sbb
add
rcrl
imul
arpl
jg
sub
into
push
std
data16
push
hlt
pop
or
lret
fdivl
icebp
stos
pop
inc
dec
std
or
push
push
add
xor
inc
dec
xchg
outsb
xor
or
mov
cmp
lods
sub
lahf
sbb
das
imul
adc
push
ds
inc
outsl
jo
aam
out
stos
mov
jo
mov
jne
insb
or
and
insl
push
mov
mov
lea
sti
es
lock
stc
data16
push
xchg
xchg
mov
negb
rcll
dec
sti
push
jno
inc
mull
inc
icebp
cmp
jecxz
loop
adc
xlat
jo
ss
mov
and
scas
xor
mov
enter
or
adc
icebp
fidivl
jae
adc
push
sub
in
fsts
xchg
and
test
fcoms
pushf
orl
and
into
js
ss
pop
scas
push
jg
lods
rcrb
sbb
mov
mov
xor
jne
push
addr16
inc
push
dec
clc
nop
stos
inc
lds
mov
jge
adc
loopne
push
addb
js
repz
pop
jb
in
xorl
mov
mov
sbb
notl
xchg
sahf
and
push
pop
in
inc
test
dec
loopne
lret
jg
jnp
and
cli
scas
imul
adc
repz
push
lds
sub
pand
dec
movsl
das
cli
cli
sbb
or
popf
or
ret
imul
fsubrp
mov
cli
lret
mov
mov
and
xorl
xlat
cmp
add
xor
je
mov
call
out
sbb
sarl
lods
lods
add
repz
cmpsl
sbb
pop
jb
cmp
mov
push
into
jno
cmp
mov
out
scas
fs
jae
inc
sub
sbb
cwtl
xchg
adc
jle
enter
sub
ljmp
fucomp
mov
aad
test
outsb
lods
sti
push
mov
testl
sahf
xlat
cmpsb
pop
sti
or
aad
test
jnp
mov
mov
add
pop
inc
mov
scas
fcomps
in
cmp
mov
in
ffree
sub
fcmovnbe
cld
lcall
mov
mov
rcrb
dec
cli
loop
enter
jae
mov
daa
jle
gs
out
pop
sti
and
cltd
adc
loope
xorb
xchg
pushf
cmp
divl
xor
push
lcall
fdivr
jp
clc
and
scas
pop
popa
in
test
sar
loope
lret
mov
or
mov
adc
scas
rcl
pxor
in
xor
stos
cmp
xchg
pushf
sbb
mov
insl
mov
pop
lret
or
mov
pop
gs
cmp
insl
pop
ret
les
je
fildl
cmp
and
jnp
cmp
sbb
mov
fisubs
daa
in
gs
xor
lea
scas
xlat
cmp
in
jge
stos
test
cmp
inc
sbb
lahf
pushf
add
cs
nop
outsl
popf
inc
jl
push
fdivl
rclb
xchg
push
lods
pop
mov
pop
xchg
aad
leave
mov
hlt
loop
mov
xor
push
shrl
jns
sbb
mov
cmpsb
loop
xor
popf
cwtl
incb
inc
mov
pop
arpl
mov
sbbb
jne
xor
pop
mov
pop
incl
scas
rcll
lods
mov
mov
inc
jmp
lds
out
mov
imul
sub
scas
cltd
movsl
mov
ja
xor
jecxz
in
jge
xchg
int
xlat
mov
ljmp
sbb
movsl
ret
loope
push
push
sbb
add
mov
data16
and
add
in
negl
popf
cmp
ja
fidivrs
and
pop
pop
rolb
lock
jmp
ss
bound
dec
sti
cs
fisttpll
mov
fiadds
push
fdiv
add
pop
sbb
sbb
jge
sbb
movsb
adc
jo
mulb
cltd
jo
pop
adc
jbe
pop
aas
and
jo
testb
in
repz
ja
mov
or
fnstcw
aas
es
mov
imul
scas
xor
jne
sti
push
and
sub
add
cmp
cmp
outsb
push
lret
add
add
add
adc
mov
cmpsb
inc
hlt
mov
outsl
lret
nop
inc
ficompl
out
add
dec
mov
mov
pop
xchg
das
fldl
mov
inc
xchg
sbb
mov
movsb
cwtl
jg
call
fbld
add
inc
mov
jle
fcmove
imul
fildl
mov
pop
cli
into
pop
ficomps
cmp
sbb
mov
mov
jnp
int3
jmp
pop
shrl
and
negl
popa
fstl
in
xlat
ret
movsl
dec
cmp
rcll
sub
test
inc
mov
popf
fwait
lods
popf
in
fisubs
out
movsl
sbb
sbb
jp
and
xlat
ds
cwtl
jmp
je
pop
das
xchg
fnsave
incl
mov
pop
xchg
aam
jle
adc
jne
out
in
addr16
fistpl
in
fbld
sbb
test
int3
jge
cld
inc
fldl
adc
cmp
sub
ja
jecxz
nop
cmp
out
stos
fldl2e
das
jns
fldpi
cld
and
sbb
dec
xchg
mov
out
push
cltd
xchg
push
sbb
and
ret
dec
push
les
push
pop
outsl
in
pop
mov
or
sarl
test
fwait
sti
inc
clc
repnz
jne
mov
push
aas
pop
mov
loopne
lock
pop
loop
aas
xor
xor
pop
pop
pop
mov
stc
jmp
cmp
push
test
lahf
mov
push
sub
and
sbb
lahf
pop
mov
and
imul
scas
call
push
test
pop
daa
movsb
xlat
decl
mov
xchg
ljmp
sbb
lret
add
mov
xor
or
mov
push
xchg
xor
into
push
out
mov
pop
std
test
inc
mov
mov
shll
xlat
dec
mov
push
pop
sub
scas
pop
fstl
in
stos
sahf
cmpsb
sbb
inc
pop
mov
xor
xchg
into
in
orl
cmp
push
jne
inc
dec
mov
pop
mov
pop
pop
sbb
cltd
cmp
icebp
xchg
push
mov
jne
rclb
pop
enter
test
cltd
push
das
sbb
and
test
hlt
jno
or
cmp
fstpt
loopne
divl
push
in
pop
xor
aas
add
jge
sbb
jmp
cmp
out
jne
xlat
jbe
sub
dec
adc
and
paddusb
aas
jns
xchg
fdivl
divl
in
sbb
jp
pop
dec
cmp
and
jae
dec
cmp
or
cmp
stos
clc
fwait
jle
jno
ret
fadd
inc
pop
or
gs
outsl
ret
loop
push
jae
xchg
into
popf
mov
sub
ficompl
mov
insl
push
ficompl
dec
insb
inc
cmp
leave
pop
pop
jg
cld
xor
sbb
jne
testl
mov
push
jle
clc
in
in
xchg
fistpll
jle
clc
sbb
scas
push
sti
ds
pushf
stos
cmp
pop
dec
test
repnz
cmc
pop
mov
inc
lret
ss
jnp
add
inc
mov
int
orb
cltd
xor
inc
rcll
in
je
xchg
adcl
pop
cmpsb
movsl
dec
jns
scas
push
lahf
jl
cli
movsb
pop
cli
in
jo
inc
xorb
mov
dec
aas
fdivl
mov
jnp
cmc
jle
sub
ror
sbb
stos
ja
mov
sbb
mov
mov
jmp
mov
mov
mov
pop
pop
inc
aaa
lock
mov
mov
negl
push
nop
filds
jle
clc
int
aaa
lahf
pop
pop
mov
ret
scas
fwait
pop
aaa
mov
sti
mov
ret
in
cmp
clc
cmp
cmpsl
cli
xchg
xchg
push
sbb
pop
cli
fimull
jmp
ljmp
adc
add
xor
mov
pop
xlat
leave
ljmp
in
push
pop
stc
mov
outsl
sbb
or
and
out
or
repz
xchg
cmc
mov
push
xchg
sub
jl
jne
mov
sub
lds
jge
push
push
sub
inc
mov
mov
jg
mov
or
sar
mov
pmaddwd
nop
lcall
movsl
cmc
inc
hlt
inc
xlat
stos
cli
pop
mov
getsec
inc
aad
fcomps
lods
pop
into
data16
icebp
icebp
jae
dec
dec
inc
xchg
pushf
les
js
cmpl
mov
je
xchg
js
jo
dec
mov
mov
test
xor
int
lods
mov
arpl
sar
ljmp
cmpsl
push
lods
scas
stos
sub
and
in
sub
and
lods
adc
es
gs
lret
and
mov
pop
int3
movsl
pusha
pop
dec
pop
shrl
shlb
mov
sbb
fists
roll
jmp
ja
and
pop
add
xor
leave
dec
inc
jo
dec
mov
or
cmp
mov
mov
pop
inc
sub
lods
xor
aam
repnz
jbe
and
enter
rcrb
pop
xchg
mov
push
movsb
xchg
ficompl
jnp
insl
lea
add
jb
scas
jnp
into
push
sahf
mov
dec
xchg
fdivr
mov
jns
dec
push
mov
rcrl
cmp
addr16
mov
xor
mov
xor
sbb
pop
inc
imul
mov
mov
int3
jle
push
cmp
cmp
pop
jle
cmc
ljmp
mov
xchg
je
pop
imul
dec
mov
mov
add
xchg
mov
mov
dec
fidivrl
rcll
fwait
xor
lods
rol
insl
mov
cwtl
jp
sbb
hlt
adc
mov
scas
or
mov
fldt
sbb
sarl
mov
icebp
test
or
xchg
int3
sbb
lret
push
out
call
mov
sbb
mov
cwtl
xchg
in
mov
sub
pop
in
mov
imul
pop
adc
iret
and
cmp
es
add
cli
lea
outsl
into
adc
push
jle
out
into
adc
mov
pop
les
out
mov
inc
sbb
sub
scas
imull
dec
loop
fs
mov
pusha
xchg
sub
arpl
lret
int3
mov
push
xlat
repz
iret
aad
je
bound
mov
adc
stos
inc
and
leave
scas
adc
push
add
jne
sbb
mov
mov
cmpb
mov
fwait
mov
xchg
adc
mov
pop
loop
inc
pop
sbbl
add
adc
lret
sub
xchg
cmc
jbe
mov
int3
and
fs
or
adc
xchg
xchg
adcb
movsb
out
xchg
insb
fstpt
js
addr16
pop
cmc
push
leave
ds
std
add
jp
dec
pop
pop
repnz
fwait
mul
mov
mov
inc
daa
mov
stos
movsb
ja
mov
add
fists
ds
inc
inc
mov
loop
or
rcl
jno
jnp
dec
sbbb
shr
mov
and
xchg
adc
mov
hlt
shr
xor
lea
mov
gs
cmpsl
aam
lret
push
push
sti
imulb
test
out
outsl
mov
test
adc
xlat
fildll
dec
mov
add
adc
push
sbb
xchg
cmc
mov
mov
mull
cli
stc
mov
imul
std
sbb
orb
dec
icebp
add
mov
cli
in
mov
cmpsb
aaa
insb
sub
mov
inc
sub
loopne
sub
cmpsl
adc
lahf
loop
sbb
dec
sbb
out
and
jle
cltd
test
jle
inc
or
cs
shlb
push
jecxz
imul
ja
cmp
ds
mov
jnp
push
mov
lcall
jmp
mov
xchg
push
lcall
sub
push
cmp
sahf
inc
sub
dec
aad
mov
mov
pushl
inc
das
mov
sbb
pop
int
out
mov
xor
lret
adc
and
mov
push
pop
sub
adc
xor
std
lods
shlb
sahf
gs
loopw
xor
jnp
xor
pop
imul
add
mov
jl
adc
adc
inc
adc
mov
jne
pop
or
adc
pop
daa
xchg
shl
mov
xor
dec
lods
pop
stos
scas
fisttpl
roll
cmp
push
loopne
sbb
or
push
roll
mov
cs
inc
add
add
mov
leave
adc
xlat
addl
cwtl
dec
cwtl
fwait
dec
push
pop
repz
mov
jbe
sbb
xchg
cmp
bnd
dec
test
lea
jo
mov
lods
imul
sbb
mov
sub
pop
dec
xchg
mov
pop
pop
sub
cmp
inc
xchg
aaa
push
pop
daa
pop
pop
jns
xchg
scas
stos
fwait
push
sub
lds
pop
dec
stos
bound
add
sahf
outsl
dec
sahf
pcmpgtw
mov
mov
cli
lock
mov
and
je
pop
insl
fisubrs
stc
mov
and
xchg
pop
pop
mov
fwait
and
dec
adcb
cmp
xor
shll
dec
sbb
inc
mov
sbb
mov
stc
rcrl
lcall
xor
mov
test
je
rcll
sbb
jae
imul
cmp
cmp
repnz
cmp
ss
into
pushl
xor
mov
in
pop
sbbl
cmp
mov
movsb
adc
les
cmc
jle
mov
and
jl
repz
jb
leave
or
popf
in
ficomps
inc
xor
jp
stos
sub
xor
pushf
loopne
sbb
mov
enter
push
fisttpll
out
push
lods
sub
stc
call
jle
xor
mov
pop
mov
pop
lock
cltd
divb
cwtl
je
ja
pop
out
dec
dec
lods
dec
adc
dec
mov
lret
iret
int3
and
jb
xchg
out
xchg
push
std
daa
movsl
mov
xchg
into
pop
int
fcomp
arpl
pushf
mov
jge
mov
xchg
fnstsw
in
push
loopne
jl
enter
mov
sbb
jno
pop
adcl
lcall
mov
in
push
xchg
loope
lahf
test
std
sbb
out
mov
call
mov
dec
jbe
in
ss
das
jl
mov
das
int
addl
add
roll
mov
push
frstor
add
sub
aaa
mov
pop
pop
insl
xchg
jae
ret
movsl
xlat
inc
dec
stc
lahf
or
icebp
adc
push
sub
gs
cmpl
repnz
xchg
jno
int3
loop
insb
into
fcmovu
or
stc
popf
mov
int3
dec
inc
jle
sub
push
daa
xchg
into
xchg
add
icebp
vpmaxsw
les
add
in
lods
mov
ret
add
insl
mov
xchg
scas
movntps
in
into
cli
jne
jg
mov
pop
cs
fs
stc
push
in
jo
push
test
out
outsl
fptan
jmp
inc
into
out
loop
fsin
xor
out
mov
test
jae
andl
lock
push
sti
push
notb
jb
mov
mov
xchg
adc
gs
stos
cld
mov
cli
pop
cwtl
clc
scas
out
jle
add
arpl
outsb
adc
sub
pop
jg
das
dec
mov
jne
test
test
rolb
push
loop
pop
add
cmp
pop
push
adc
fnsave
sbb
jnp
roll
sahf
add
push
aad
xchg
stos
xchg
rdmsr
in
pop
push
scas
push
dec
mov
mov
sar
int
rclb
insl
stos
push
outsl
or
mov
push
push
lods
push
das
push
dec
push
push
jg
fsubrs
add
enter
mov
jb
push
insb
and
jbe
push
pop
mov
pop
test
and
icebp
sub
push
insl
mov
xor
jb
adc
pop
dec
in
add
movsb
mov
pop
pushf
pop
adc
adc
or
inc
push
or
fsubrs
jne
int
pushf
dec
aas
sub
push
fisubrs
stos
test
dec
cs
test
outsl
xchg
jl
ljmp
or
push
xchg
jl
fistps
mov
xor
in
push
lock
in
xorl
dec
mov
das
imul
inc
pusha
gs
imul
loope
dec
mov
xchg
pop
or
into
xchg
test
inc
jle
jecxz
je
sbb
xor
add
shll
mov
or
jae
xor
inc
test
jne
inc
testb
aad
aad
jmp
test
xor
or
mov
push
lcall
clc
lods
mov
jb
jmp
pushf
in
sub
std
leave
cld
cmp
jle
aaa
aas
dec
out
popa
nop
mov
mov
out
call
sub
lahf
mov
push
leave
stos
nop
cli
lahf
mov
outsl
pushf
lcall
cmpb
lods
mov
dec
or
ss
sbb
cs
add
pushf
add
add
jno
mov
push
pop
ss
ja
pushf
or
fcompl
push
jb
enter
lret
add
pop
sbb
daa
sbb
mov
mov
outsb
sbb
jae
fsubp
xchg
or
inc
sbbb
pusha
sbb
jecxz
add
jg
jl
iret
push
jl
fstpt
lods
mulb
imul
repnz
cmp
add
add
and
shlb
add
xchg
imul
push
adc
clc
xor
testb
fildl
data16
sbb
and
fcmovnbe
lss
pop
xor
mov
subb
sti
in
pushf
lahf
xor
add
add
sbb
sbb
daa
ds
imul
pop
push
enter
leave
or
dec
inc
add
add
sbb
cmp
and
aad
iret
mov
das
test
sub
fistps
fimuls
jo
rolb
push
mov
inc
fiadds
inc
pop
pushf
sub
repz
pop
inc
in
mov
pop
ljmp
incl
hlt
cmp
shl
and
clc
dec
push
in
mov
subb
loopne
jg
js
jbe
push
out
jae
jp
clc
jge
adc
into
dec
pop
out
and
sub
dec
and
int3
adc
mov
mov
jl
push
in
mov
mov
inc
cmpsb
push
push
scas
lahf
inc
sub
or
fmuls
mov
sbb
jne
rcrb
lock
add
fs
pop
icebp
in
add
jno
je
xchg
push
dec
or
push
and
sti
cmp
iret
or
mov
mov
inc
call
dec
mov
cmpsb
shr
int
fldcw
xor
xchg
adc
imul
jge
iret
or
or
adc
jae
jae
and
fsub
pmaddwd
inc
or
xchg
mov
fdivr
add
aas
xor
fsubl
dec
add
and
push
orb
std
out
addr16
rcrb
dec
xor
es
add
and
cmpsl
mov
add
xor
rorb
loopne
add
add
pusha
clc
pop
int3
pop
push
add
cmp
sbb
mov
sbb
xchg
and
gs
ret
out
lret
pusha
jns
mov
cltd
cmp
aaa
int3
cld
mov
shrb
es
push
mov
lcall
ret
pop
jp
aad
outsl
nop
fucomp
or
xlat
fdivs
repnz
add
lock
add
cmp
push
repz
inc
add
mov
mov
sub
dec
data16
xorb
jo
add
roll
movsb
or
dec
sub
daa
loope
and
sbb
inc
in
pop
pcmpgtw
add
sarb
mov
fs
out
subb
je
push
mov
push
xchg
cltd
add
into
dec
add
sbb
dec
mov
int
daa
std
mov
push
mov
sbb
pop
xchg
pop
cmp
cld
aaa
add
fs
sbb
into
xchg
xor
mov
or
jae
leave
or
add
xor
out
add
mov
and
mov
inc
subb
jns
push
mov
pop
xor
inc
add
aam
adcb
or
adc
shl
loopne
or
cmp
aas
and
inc
idivl
bsr
clc
pushf
pusha
fisttpl
filds
loope
les
pop
cld
mov
int3
or
lret
clc
xchg
aas
hlt
push
or
sub
mov
jecxz
sbb
add
aaa
mov
data16
and
cmp
sbb
cmp
mov
push
into
dec
sub
pusha
add
and
cmp
xchg
dec
mov
into
fs
bound
mov
fwait
pop
sbb
into
jg
cmp
or
inc
daa
xor
lock
rcl
sub
popa
xor
negl
xorb
dec
push
and
xor
lret
movsl
imul
loope
popf
pop
call
add
push
sbb
adc
and
xor
mov
and
clc
mov
jns
xor
aas
rcrb
mov
into
dec
sub
sbb
mov
sbb
std
mov
cmp
sub
pop
notl
call
pop
jg
xor
mov
sbb
xor
and
mov
and
jne
and
add
or
cmp
cltd
imul
subb
inc
xchg
sub
pusha
xor
push
mov
clc
sahf
fwait
andb
and
cmp
fistpl
ljmp
jnp
pop
mov
sbb
mov
nop
mov
mov
rcr
push
call
aaa
cltd
movsl
cmp
xorb
xlat
mov
movsl
stc
push
adc
xor
mov
ret
mov
inc
out
cmovge
arpl
sbb
enter
dec
data16
push
loope
std
and
cmp
mov
cs
pop
mov
sbb
push
cltd
aam
arpl
add
repz
subb
je
outsl
cmp
out
mov
fcoml
les
movsb
sub
je
sbb
fwait
mov
jae
dec
test
sub
pusha
pop
not
xor
mov
mov
testl
sahf
sub
lahf
clc
xor
mov
mov
and
andb
or
dec
loope
jle
testl
mov
xchg
adc
bound
mov
movsl
mov
lahf
movsl
pop
fstpl
inc
and
inc
aam
fstpt
fldenv
das
popf
xchg
jmp
das
int
dec
mov
dec
scas
out
xchg
pop
pop
std
out
jge
clc
jl
out
testl
jge
jl
out
cmp
jge
jl
pop
cwtl
jmp
loope
pop
pop
lcall
jge
sub
cmc
mov
or
sub
mov
jge
iret
into
cmc
cmp
mov
dec
repnz
sbb
insb
lahf
xchg
int
fwait
mov
mov
inc
fwait
loop
inc
nop
dec
sbb
daa
cmp
loope
repnz
out
sub
pop
sahf
ljmp
cltd
jp
stos
xor
pop
lods
mov
xchg
ss
mov
popa
decl
int3
dec
stos
xor
loopne
pop
mov
out
lds
pushf
dec
pop
nop
je
sub
sub
xorl
dec
jne
loope
xor
push
fnsave
push
or
mov
jmp
dec
fcompl
out
mov
pop
cli
dec
jge
call
jg
leave
pop
mov
loop
adc
fistl
test
out
jno
sarb
mov
jb
mov
and
cmp
xor
lock
iret
int
cmpl
icebp
xchg
loope
cmp
movsl
shlb
lock
mov
mov
push
cmc
inc
mov
jp
std
shll
lock
mov
pop
dec
out
mov
pop
aad
cmpsb
repnz
imul
xchg
push
jg
into
mov
out
jle
push
loop
xor
sahf
loopne
dec
mov
inc
movsl
xor
fld
push
icebp
aaa
rcrb
pop
aad
sbb
pop
jmp
pop
ljmp
jae
popa
and
inc
sub
adc
roll
repnz
fbld
jnp
inc
in
stc
mov
mov
xchg
insb
stos
insl
adc
aas
shl
jp
push
jg
xchg
push
push
int3
lahf
add
cmp
lahf
jo
js
push
frstor
jg
incb
das
cmp
push
nop
les
mov
inc
fs
xchg
cmp
jno
loope
iret
mov
mov
stos
jg
jbe
add
daa
into
mov
inc
test
and
inc
mov
and
xchg
xor
inc
mov
lss
outsl
cmpl
mov
out
jecxz
ret
adc
shlb
inc
bnd
rclb
decl
and
mov
stc
sub
jle
xchg
jp
pushf
sbb
stos
cmp
in
cli
aas
sub
lea
rolb
mov
jb
out
push
mov
dec
xor
call
mov
addb
in
or
cs
push
lock
ss
enter
jg
js
sub
xchg
pop
sti
or
lods
imul
sub
sbb
or
inc
jmp
rcrl
aas
push
test
fisubs
sbb
movsl
mov
ljmp
mov
leave
jae
push
jns
fstl
mov
sbb
std
popa
mov
push
ret
or
stos
mov
sti
mov
scas
jg
pusha
jmp
sahf
and
mov
ror
sub
andb
sbb
ljmp
lea
lret
inc
mov
insl
or
fsts
faddl
ds
or
add
adc
data16
adc
stos
stos
mov
repnz
and
filds
and
cld
pop
jno
push
leave
lahf
test
aas
ds
xchg
cmp
pop
pop
inc
mov
jbe
dec
jbe
dec
iret
incl
imul
push
orl
push
mov
adc
not
loope
sub
jne
xchg
sbb
mov
aad
lods
inc
out
jno
fdivs
loope
imul
rolb
mov
call
and
dec
ds
ljmp
inc
outsl
jb
ds
cmp
mov
mov
sub
pop
jmp
mov
repnz
cmp
pop
xorb
jne
cmp
jns
adc
add
xor
pop
xchg
cmp
imul
mov
xchg
bound
mov
mov
mov
out
pop
sbb
stos
stos
movsb
rolb
in
add
mov
cs
incb
fsubrl
lret
xchg
jo
cmp
jae
lret
inc
inc
mov
dec
into
aam
ja
es
mov
sub
int
mov
sub
movsw
cmp
data16
mov
jg
rcrl
insl
pop
add
std
or
push
cmp
mov
sub
adc
dec
jb
lea
int
and
orb
gs
arpl
inc
pop
out
or
mov
bound
or
std
popf
stos
cmpsl
lods
movsl
xchg
stc
push
mov
ds
sbb
into
mov
inc
lds
pop
jnp
inc
sub
push
jg
shll
mov
push
pop
aam
mov
movsl
pop
lds
jle
jbe
jl
push
push
cmp
jecxz
push
jns
push
mov
jl
fcoms
inc
inc
scas
clc
xchg
mov
fstpl
mov
and
xchg
xchg
int3
fmul
pop
scas
jmp
mov
subl
stos
push
mov
fstps
bound
inc
fnsave
cmp
pop
adc
es
cltd
ljmp
xor
not
mov
mov
je
cmpsb
mov
push
xchg
mov
mov
scas
or
pusha
icebp
bound
xor
clc
out
mov
mov
movsb
push
mov
mov
out
out
adc
ljmp
jnp
stos
lods
pushl
mov
sub
xchg
mov
add
xchg
outsb
mov
outsb
pop
push
test
xor
cmp
mov
in
jb
cmpsb
addl
rcrl
lret
and
sbb
jne
sub
add
stos
inc
iret
push
cmc
cmpsl
je
loope
adc
add
cmp
mov
daa
cmp
jmp
mov
sub
xor
adc
popa
orl
or
scas
push
call
in
pop
test
xchg
pop
std
in
mov
jne
mov
repz
sub
jecxz
sarb
outsb
int
xchg
inc
adc
sbb
mov
popf
insb
mov
sbb
xchg
cmp
jecxz
daa
test
cmpsb
cwtl
xor
adc
cli
jge
repz
mov
insl
repnz
das
lods
xchg
std
push
push
mov
lret
and
imul
push
int3
cmpsb
jbe
or
push
mov
popf
lods
pop
aam
lds
or
mov
mov
push
popf
in
mov
mov
sbb
cwtl
mov
aam
shll
scas
ljmp
mov
outsb
cltd
cmc
aam
and
or
pop
dec
lock
pop
sub
inc
loop
pusha
jge
mov
pop
pushf
inc
pop
xchg
xor
mov
lock
out
or
xor
testl
in
aaa
pop
icebp
push
fsubl
test
icebp
mov
adc
xlat
scas
aas
xchg
cwtl
sbb
ljmp
mov
xchg
pop
imul
mov
jae
inc
jl
or
pop
aaa
loop
push
inc
mov
pop
push
aaa
daa
fidivs
cmp
shrb
dec
push
mov
dec
popa
repnz
dec
popf
into
or
xor
xor
mov
icebp
aaa
mov
lea
sub
test
cwtl
or
enter
mov
push
dec
pop
pop
or
test
jp
imul
sub
movsb
pop
sbb
out
push
insl
std
roll
mov
ret
pop
pop
cli
xchg
xor
mov
xchg
fadds
out
mov
std
dec
stos
outsb
es
push
push
push
ja
sub
and
xchg
mov
mov
sbb
rcll
xlat
cmpsl
bnd
nop
lret
sbb
aas
data16
inc
jp
ret
pop
aad
jmp
call
test
sbb
sahf
js
xchg
mov
ficoms
and
shrl
mov
test
and
mov
adcw
sub
into
pop
clc
int3
add
xor
stc
push
mov
sub
es
into
mov
sub
or
xor
pop
popf
mov
cmpsb
leave
xlat
ret
xchg
repnz
sub
les
ret
rcrb
leave
add
mov
outsb
sub
sbb
xchg
stos
aad
inc
pusha
mov
pop
push
cltd
jne
mov
rclb
push
lea
sbb
fcmovne
fcmovb
imul
out
sbb
aad
pop
insl
fcmovnu
mov
out
mov
aaa
mov
jle
into
mov
test
xchg
and
lcall
sub
fsubrs
mov
cld
fsubl
popa
nop
cld
cmpsl
pop
popf
or
fsubr
jecxz
ret
imul
insl
push
imul
jae
addr16
scas
int
in
push
or
out
or
in
loop
sub
jbe
outsl
mov
mov
js
cmc
and
mov
rclb
mov
inc
mov
insb
loopne
lea
repz
mov
push
cmpsb
sub
jbe
push
in
cmp
sbb
in
out
pop
push
stos
scas
jmp
arpl
push
fdivrs
xchg
mov
jnp,pn
out
outsl
pop
inc
mov
hlt
xor
xor
rcll
pop
fiadds
inc
fiadds
mov
into
sbbb
jb
data16
out
add
lds
in
scas
stc
inc
mov
dec
gs
ds
inc
cmp
push
popa
mov
xchg
lret
mov
js
xlat
js
push
movsb
ja
and
repnz
mov
mov
push
call
test
mov
pop
mov
bound
and
je
lds
into
sub
mov
cs
jne
push
xchg
pop
fildll
fbld
ds
in
fstpt
sbb
mov
scas
add
aaa
cmp
pop
loopne
daa
sti
lahf
jg
lahf
out
pusha
fsub
leave
and
xlat
sub
cmp
cmp
call
lock
xchg
xor
pop
adc
jecxz
dec
mov
mov
es
mov
ds
sub
sahf
aad
fs
outsl
cmp
jne
pop
mov
xchg
stc
test
mov
jo
and
and
icebp
insl
sarl
clc
pop
add
inc
in
sbbl
insb
lcall
rorl
arpl
pop
jmp
test
rcl
loope
push
repz
mov
sbb
shrl
pop
ficoml
jl
iret
std
xchg
xchg
mov
in
and
sti
push
sti
mov
in
es
js
jbe
leave
outsl
imulb
and
test
or
jae
repz
movsb
lea
dec
xor
das
xchg
or
jbe
adc
cmp
outsb
cld
pop
adc
push
fadds
es
cs
push
sbb
test
xchg
xor
push
mov
pop
gs
out
aaa
sti
test
std
xchg
jmp
lcall
repnz
inc
jl
test
lcall
mov
or
repz
or
fiadds
adc
iret
imul
mov
hlt
jge
jp
mov
mov
js
ja
adc
cmpsl
ljmp
push
lcall
and
idivb
das
sar
iret
repz
lock
das
pop
xor
repz
push
sti
push
sbb
xor
daa
inc
gs
pop
enter
push
lcall
jp
les
lcall
mov
jo
adc
repz
shl
addl
jo
pop
das
dec
out
fsin
and
pushl
and
push
ja
xchg
mov
xchg
popf
jno
data16
test
pop
ljmp
ljmp
insl
loopne
xor
subl
pusha
pop
inc
test
lods
jbe
jae
pop
cltd
andb
xchg
lret
call
repz
das
cltd
lock
in
lock
fildll
fcoml
push
mov
or
cmp
test
mov
mov
pop
xor
fcmovbe
les
sahf
lahf
into
mov
enter
out
or
ret
or
add
dec
mov
pop
js
mov
leave
pop
sub
jge
sahf
or
mov
add
scas
push
cltd
mov
fstpl
fildll
hlt
and
fucomi
jmp
int3
out
ret
sar
sbb
sbb
sbb
cld
mov
cmp
ss
jmp
out
frstor
jp
jnp
nop
movsl
inc
add
int3
add
daa
adc
push
in
push
add
loope
pop
cmp
out
xor
es
push
in
mov
ret
lods
mov
cmp
out
mov
xor
mov
mov
mov
fisubl
pop
and
icebp
mov
jne
add
adc
jmp
pop
jecxz
xchg
jo
insb
ss
pop
push
test
pop
aaa
jb
je
sub
mov
pop
jo
push
leave
xchg
out
iret
inc
push
cmp
or
sbb
aas
jnp
cmp
mov
outsl
mov
mov
scas
jno
fldt
and
mulb
fs
pop
inc
fiaddl
xor
lods
out
mov
cs
mov
mov
outsl
lods
dec
pop
adc
xchg
adc
pop
sbb
and
inc
stos
jge
and
mov
jl
jno
mov
push
jmp
loop
pop
pop
sbb
ja
adc
or
add
inc
sub
cmp
xchg
ucomiss
jecxz
out
cwtl
cli
sbb
jle
sbb
or
divl
jno
fucomp
cli
cld
jecxz
mov
mov
pop
mov
xchg
mov
int
outsl
sahf
ja
ja
xor
outsl
push
jl
add
jg
pop
fdiv
xchg
adc
sbb
icebp
not
jmp
test
mov
mov
adc
lea
xchg
aas
jo
arpl
out
jg
jmp
cltd
inc
mov
insb
loopne
ja
inc
dec
rcrl
insl
cmpsb
fmull
rorl
sub
push
mov
xorb
lret
xor
call
mov
out
fisubrl
sti
test
jb
jecxz
outsl
inc
mov
outsl
repz
loope
pop
and
in
pushf
dec
ffreep
cmp
push
ljmp
pop
insl
mov
sbb
pop
in
stos
push
cltd
shrb
pop
jnp
mov
mov
xchg
sbb
into
bound
sbbb
cwtl
cmc
cmc
ja
cli
pop
push
fmul
cli
mov
sbb
pop
jp
dec
jl
lahf
sub
and
and
data16
pop
fcomp
and
mov
mov
ret
sub
inc
sub
cs
inc
mov
lcall
cmp
lods
jno
dec
jnp
aaa
xor
and
dec
sbb
iret
fsubrs
sahf
sbb
add
dec
sbb
cld
xchg
xchg
cmpsb
fsts
fwait
xlat
out
xor
and
add
dec
sbb
ss
and
dec
stos
iret
mov
stos
popf
sub
xor
pop
xchg
mov
jg
fisttps
inc
pop
in
add
addr16
push
mov
xchg
mov
adcb
ja
sbb
jns
and
inc
cs
pushl
outsl
sub
ja
mov
pushf
das
scas
and
mov
shlb
xchg
and
outsl
stos
leave
pop
sub
mov
push
les
push
popa
sub
mov
add
mov
test
rol
out
mov
xchg
fldt
ret
dec
sbb
stc
lock
jmp
or
movsb
xchg
idivl
sbbb
int
lea
rcr
mov
in
aad
movsl
enter
sbb
scas
cmp
inc
lock
movsb
ds
aad
inc
cs
jns
cli
cmp
or
arpl
sbb
push
jne
jbe
push
mov
out
fnstcw
xchg
js
sbb
dec
mov
xchg
dec
test
jge
pushf
mov
in
popa
xchg
inc
mov
ljmp
xorl
jg
std
loope
lahf
sub
pop
mov
in
lods
pusha
dec
mov
inc
fwait
pop
lds
cltd
imul
mov
clc
pop
leave
ljmp
jne
sub
pop
popf
lods
cli
and
lds
pop
push
movsb
out
inc
mov
jl
inc
imul
loopne
jmp
pop
xchg
add
dec
jge
in
push
xchg
arpl
inc
push
dec
or
scas
std
pop
fstl
lds
faddl
sbb
in
xor
insl
gs
xchg
jae
hlt
shl
dec
pop
cmc
sub
or
clc
out
lret
sub
cmp
add
jnp
cmp
mov
cmpsl
push
mov
cmpsl
sub
or
aaa
lods
nop
mov
adcl
faddl
mov
jmp
into
and
cmp
hlt
mov
addl
push
popa
leave
addl
jae
sbb
jge
test
lea
jb
fs
push
fists
pop
std
pusha
incl
and
dec
adc
pop
inc
orl
lods
ljmp
and
pop
scas
mov
push
andb
incl
mov
imul
cli
and
mov
adc
add
mov
cmp
sbb
scas
sbbl
ss
sub
add
sbb
xor
xchg
cmpsl
xchg
push
les
loope
popa
divb
lock
jecxz
add
sub
xchg
fsubrs
mov
sbb
repz
dec
out
int
push
outsb
fcomps
adc
out
repz
repnz
jo
pop
loopne
add
cwtl
inc
cmp
test
push
sbb
bound
icebp
xorb
hlt
cmpsl
jecxz
pop
jo
repnz
xor
push
jp
push
orps
divb
inc
push
sbb
fdivrp
xor
jmp
and
adc
inc
pop
mov
dec
add
movd
shlb
dec
das
sub
test
shlb
mov
xor
cmpsl
mov
test
aas
sbb
test
pushf
mov
call
xorl
inc
stos
mov
gs
adc
into
or
mov
push
xor
cld
imul
xchg
iret
pop
mov
pop
dec
xchg
cltd
loopne
push
scas
xor
fidivl
xor
cmp
in
push
push
cmpb
mov
out
pop
stos
out
xchg
dec
dec
jnp
andb
ret
shrb
rorb
ja
popa
orl
test
pop
in
pop
lea
jg
inc
decl
sti
xchg
loop
push
adc
or
insb
addr16
jmp
sarb
lds
jp
lcall
pop
rcr
movsb
mov
fwait
xor
imul
push
stc
inc
pop
xchg
js
inc
std
ljmp
or
adc
nop
imul
and
push
fwait
nop
mov
in
inc
push
push
and
cli
jg
div
loope
push
xlat
loop
test
push
into
mov
lea
xchg
cmp
popa
xchg
addb
test
push
and
cltd
sbb
in
lods
insl
in
lods
insl
movsl
fcom
fstpt
mov
movsb
lods
add
stos
mov
mov
xchg
repz
lods
jge
and
xchg
out
cli
in
jb
pushf
std
mov
fisubrl
mov
add
aas
cmpsb
adc
inc
in
add
fisubs
out
in
hlt
sahf
push
inc
and
xor
ljmp
and
mov
cmp
int3
push
dec
hlt
jl
mov
mov
test
addr16
xchg
jle
cld
jp
aaa
popl
shl
ror
ret
inc
daa
mov
movsl
sbb
jge
inc
cmp
sarb
paddb
outsb
push
fisubrs
jae
shll
cmpsl
aas
sarl
pop
scas
sbb
jmp
mov
xchg
cmp
mov
pop
pop
xor
xchg
cwtl
in
das
ret
dec
add
jl
ja
xlat
or
test
xor
repnz
incb
xchg
stos
popa
cmp
popf
rorb
imul
mov
or
fstpt
bound
inc
fsts
out
je
cld
test
push
dec
pop
cld
jae
push
cmp
out
jmp
dec
adc
sbbl
repz
dec
add
into
lds
sub
pusha
dec
loopne
sbbl
and
cltd
xor
jl
jmp
insl
inc
jle
data16
call
sub
int
andb
pushf
push
push
int3
sub
or
pop
mov
or
and
add
pop
pop
xchg
sub
stos
xchg
add
sbb
sub
sbb
push
lahf
mov
fwait
adc
hlt
mov
fsubrs
insl
cld
and
test
fmuls
pushf
int
xchg
lret
pop
mov
push
push
rcrl
lahf
icebp
int
dec
push
xchg
mov
push
ljmp
lret
cli
sahf
pushf
ja
or
sti
fsubrs
and
pop
mov
sbb
das
sbb
jne
fnsave
xorb
xchg
jbe
cmp
fildll
xor
call
lcall
ss
aad
aas
gs
push
clc
xchg
cmpsb
repnz
shll
lods
push
lcall
je
jb
xchg
test
xchg
add
dec
adc
xor
sbbb
adc
jnp
add
rolb
out
sbb
mov
xchg
adc
cmp
cli
fucomip
xor
jne
test
mov
or
pop
scas
call
hlt
xor
dec
mov
push
cmp
mov
jnp
in
mov
popf
adc
or
pop
sub
clc
jne
fstpt
hlt
add
adcl
pop
out
xor
jae
ljmp
xor
mov
mov
dec
mov
cmp
mov
subl
mov
push
enter
cmp
xor
es
testl
push
and
stos
bound
icebp
clc
aam
iret
scas
iret
mov
mov
add
push
stos
in
mov
movsl
outsb
push
inc
pop
jge
fs
pop
jge
inc
iret
mov
cmp
jns
lahf
js
or
pushf
adc
adc
in
mov
sbb
test
rcrl
test
in
mov
cmp
cmp
addr16
in
push
add
imull
pop
aaa
int3
dec
dec
add
out
cmp
dec
repnz
ja
sbb
jle
or
mov
bound
or
cs
cmpsb
sbb
pop
lret
adc
hlt
jo
mov
loopne
mov
insl
js
ljmp
sub
pushw
in
pop
stos
pop
push
cmpsl
out
addr16
push
jbe
aaa
sbbl
push
icebp
test
imul
push
call
stc
mov
scas
sub
jle
inc
or
adc
push
xlat
call
jl
mov
add
sbb
pop
loopne
outsb
inc
dec
and
sub
cmp
push
and
loop
and
xor
sahf
aam
jge
or
cmp
push
add
add
add
mov
sub
and
or
jle
push
movb
adc
xchg
ljmp
inc
call
sub
jg
sbbb
pop
popf
pop
jae
dec
popa
push
stos
xchg
cmpb
scas
ljmp
or
sarb
rol
inc
aas
cltd
adc
mov
mov
pop
pushf
and
sub
sbb
cmp
jns
shlb
mov
inc
adc
dec
pop
ret
mov
cmpsl
das
aas
cmp
jmp
sub
scas
sbb
test
mov
and
arpl
arpl
addr16
fwait
push
mov
inc
out
push
mov
xchg
cli
pop
sarb
cld
je
in
pop
sahf
mov
mov
cld
inc
cmp
scas
fcmovnu
jmp
xchg
cwtl
inc
ret
jb
mov
jae
sbbb
sub
movsb
fmulp
push
mov
movsb
bound
mov
aas
aam
dec
rcl
push
imul
dec
dec
dec
ret
cmp
lock
lret
inc
aas
or
xchg
int3
xchg
jno
in
mov
in
cmpsl
mov
adc
add
ljmp
or
add
std
cmp
cli
scas
popf
pop
std
fsts
xor
cmp
insb
mov
fucomip
mov
mov
das
push
imul
adc
std
dec
ljmp
aam
inc
ljmp
lods
ja
pushl
fdivrp
jg
scas
pop
ljmp
pop
jmp
mov
xlat
cltd
out
jae
push
aas
sbb
test
xchg
call
imul
fnstenv
cmpb
gs
jo
daa
shll
loop
jnp
inc
int
xor
sahf
jp
sarl
mov
stos
call
mov
cmp
scas
adc
sub
stos
mov
stc
push
add
inc
push
cmp
test
push
dec
insw
jecxz
cltd
jo
or
xor
fisubrl
adc
aas
push
arpl
mov
repnz
lcall
pop
lea
aas
mov
mov
lds
dec
pop
cmpsl
pop
lea
dec
dec
cmp
add
pop
sub
clc
sbb
inc
out
push
jmp
enter
jl
cmp
dec
and
lahf
xchg
test
add
pop
out
pop
movsl
cmc
xor
or
cmpsb
push
adc
leave
pop
jo
mov
push
jle
les
rolb
add
or
in
ja
mov
xor
fnsave
cmp
iret
xchg
and
xchg
testb
dec
clc
fsubrs
insl
push
int
lods
outsl
fldcw
jge
scas
lahf
into
xchg
aas
push
repnz
stc
lea
repz
iret
loope
mov
jle
cmp
sbb
loope
jmp
pop
dec
mov
stos
pop
icebp
push
pushf
leave
inc
pop
inc
decl
insl
ficoms
sti
std
dec
xchg
out
mov
mov
loop
jb
repz
jo
pop
gs
decl
test
jp
xchg
loopne
mov
cmpsb
push
and
fcomi
push
add
push
sbb
int
neg
xchg
divl
mov
enter
mov
jl
fld
das
xchg
xor
sub
unpckhps
mov
les
pop
and
js
cmc
xchg
fwait
push
mov
or
lock
inc
cmp
lock
push
ljmp
push
insl
and
ds
cli
jp
in
cmpsl
mov
repnz
out
jle
icebp
lods
push
int
mov
repz
cs
pop
arpl
movsb
rcll
hlt
adc
inc
mov
out
lea
lds
jecxz
push
mov
add
subb
mov
push
fwait
les
je
xchg
push
stos
pop
imul
dec
jne
push
pop
lock
jns
jecxz
or
add
in
loopne
enter
cs
imul
add
in
js
sbb
cmp
mov
push
leave
xor
mov
dec
enter
shr
mov
fistps
rcll
dec
cltd
insb
popa
xchg
outsl
xchg
mov
ljmp
imul
mov
or
inc
sbb
call
pop
repz
mov
and
xchg
rcrb
mov
mov
cmp
movsl
adc
or
sub
scas
or
sahf
ficoml
in
lea
mov
into
push
les
loopne
mov
add
sub
pushf
mov
dec
addr16
andl
cmp
inc
test
gs
aas
roll
out
and
xchg
mov
leave
fwait
sub
cmp
ljmp
pop
sbb
pop
roll
jo
mov
aad
push
repz
add
add
jecxz
out
xchg
outsl
outsb
mov
lea
repnz
lahf
mov
fsubrl
div
mov
movl
hlt
add
or
imul
or
imul
xchg
movsl
ficoml
rorb
repz
mov
push
aaa
imul
cld
inc
xor
int
jb
lcall
adc
imul
or
or
sub
mov
pushf
in
popf
jb
adc
lds
sub
cmp
loope
test
mov
cld
pop
or
imul
or
push
data16
aam
lds
mov
cmc
adc
jle
fbstp
js
aaa
bound
leave
push
mov
lock
xchg
clc
mov
push
inc
insl
es
jl
and
ret
xchg
enter
mov
and
fiadds
push
int
std
xorb
and
pop
mov
pop
icebp
ja
bound
lods
loope
pop
ss
sbb
nop
or
push
add
pop
jne
test
lods
outsl
mov
pusha
mov
addr16
ljmp
and
int3
imul
mov
js
je
push
push
xor
xor
push
stos
mov
fxtract
pusha
repz
cmpsb
dec
std
lret
fsubrl
pop
sub
xchg
cmc
inc
push
sbb
js
scas
jp
aad
aam
cs
aad
push
mov
ret
outsl
add
enter
inc
push
xor
mov
das
nop
jo
inc
jno
xchg
sbb
out
stc
add
xor
inc
js
out
push
sbb
add
dec
cmp
fiadds
push
xchg
mov
pop
inc
into
icebp
jmp
mov
ljmp
test
test
mov
jecxz
adc
cmp
call
out
xchg
sbb
stos
push
aaa
and
sub
sahf
push
jae
xchg
mov
je
cld
lahf
cmp
test
jno
ret
add
cmp
loopne
jnp
inc
jmp
test
jnp
into
pop
xor
jbe
adc
lret
orb
jo
and
vpmacsdqh
cs
mov
insb
jge
sub
sub
pushf
enter
xchg
push
test
jp
and
and
notl
or
xchg
jnp
jge
adc
push
stos
jns
xchg
xlat
inc
cmp
push
daa
cmp
push
test
mov
sbb
lret
fadd
fs
jb
iret
gs
fimull
xchg
ret
and
inc
fistl
xchg
mov
cmpsb
loop
sti
and
test
movb
sub
out
sbb
jmp
xor
jno
frstpm(287
sbb
test
movsl
pop
cmp
cmp
dec
mov
icebp
pop
sbb
bound
shl
stc
dec
rorb
jmp
mov
pop
push
push
fwait
sub
scas
mov
cmp
repz
pop
stc
pop
hlt
adc
sub
jp
dec
push
ret
push
pop
loop
xchg
es
gs
jp
jae
popf
enter
sahf
cmp
adc
rclb
mov
enter
xor
sub
sub
mov
mov
imul
loope
lcall
sar
mov
wrmsr
pusha
mov
fcmovb
push
and
pop
pushf
pop
rep
xchg
cmp
addl
sbb
test
sbb
pop
ret
sbb
xchg
push
xor
and
adc
sub
adc
test
add
sbb
andb
testl
dec
and
lret
out
cmp
jecxz
orb
insb
nop
jno
xchg
dec
mov
sub
xor
xchg
xchg
mov
xlat
xchg
clc
cs
leave
ret
out
jno
or
mov
lret
xchg
inc
mov
push
mov
out
mov
ja
dec
enter
mov
mov
push
imulb
lea
pop
adc
fstpt
fbstp
xor
pop
dec
insb
gs
or
xorl
xchg
xorb
stos
in
dec
adc
clc
xchg
and
stos
repz
push
xor
test
movsb
nop
test
xchg
sarl
lea
imull
aas
movsb
shll
imul
and
or
jle
pop
cmp
stc
jp
stc
lcall
cmp
jae
cmp
cmp
into
xlat
pushf
scas
pop
or
fsubrs
shll
hlt
pusha
ss
and
inc
cli
andb
or
cli
and
out
ss
fmull
push
sarl
push
xor
neg
xor
fmull
mov
hlt
pop
push
mov
dec
inc
mov
push
lret
leave
and
cmp
xchg
stos
into
mov
cmpsl
cmp
or
mov
sub
mov
mov
and
jne
aad
inc
sbb
fdivs
adc
rol
repz
fs
push
movsl
insb
sbb
rolb
ficomps
or
push
pop
leave
add
pushf
push
rclb
fisubl
mov
icebp
jp
cmp
fnstsw
std
and
lea
dec
loop
stos
inc
push
mov
pop
shlw
dec
sub
addb
mov
fwait
fs
movsb
dec
xor
mov
repz
popf
inc
mov
divl
test
xor
pop
or
test
inc
fnstsw
loope
sub
aad
jbe
daa
subl
lods
mov
xchg
insw
jnp
pop
fistps
inc
mov
pop
xchg
aad
xor
adc
adc
mov
jo
dec
nop
sub
xchg
imulb
pop
sub
pop
push
cmpsb
mov
into
xchg
aad
es
sbb
inc
aad
test
arpl
mov
iret
mov
cltd
test
sar
mov
fidivrl
cmp
adc
mov
dec
js
or
mov
cmpsl
scas
jae
test
or
insl
mov
js
cld
push
mov
aad
in
lcall
mov
xor
push
pop
cmpsl
sbb
lret
sti
lods
cs
call
xchg
inc
out
or
and
jg
pushl
imul
cmpsb
push
jge
adc
push
mov
pop
add
aam
and
imul
subl
js
insl
push
xor
das
cmpsb
mov
push
sbbl
test
adc
mov
dec
or
out
call
js
ds
xchg
fwait
add
dec
cmp
cwtl
inc
nop
and
or
ret
mov
xchg
gs
and
ud0
jno
rorb
and
mov
cs
hlt
lock
and
mov
outsb
fcompl
dec
jb
sbb
xchg
mov
add
pop
dec
sarb
push
into
arpl
insl
cmp
push
adc
popa
jmp
and
scas
pop
adc
push
mov
pushf
arpl
test
daa
fwait
aad
push
movsb
or
cmp
in
cmp
leave
jnp
out
jmp
inc
jle
sbb
sti
sub
xor
clc
sbb
pop
sbb
and
gs
das
into
into
stc
movsb
xchg
stos
mov
test
inc
call
mov
pop
test
addr16
pop
fdivrl
fcoms
and
push
jo
aaa
adc
clc
fdivrs
xchg
cmp
aaa
add
xchg
add
loopne
stc
lea
aad
sbbl
neg
sti
sarl
notb
fistpll
inc
ja
mov
mov
dec
inc
lret
stos
jo
mov
popa
ljmp
lahf
stos
rclb
jae
mov
jno
xor
sub
push
add
imul
das
daa
arpl
dec
mov
lock
cmp
aaa
jg
jl
cmp
add
xor
in
hlt
dec
nop
std
out
cmc
mov
adc
or
popa
dec
xor
outsl
adc
sbb
dec
out
incl
and
jl
repnz
add
movsb
das
xchg
xor
insl
sahf
jmp
enter
mov
or
andl
inc
outsl
les
cmc
dec
push
mov
mov
sbb
ja
movaps
dec
jge
ljmp
push
xlat
aam
jno
push
gs
mov
lret
iret
adc
jb
sbb
mov
jecxz
cld
push
cmp
add
dec
jl
enter
cmp
rorb
rorb
rorb
hlt
sbb
shl
xchg
bound
js
sbb
mov
lahf
xlat
and
mov
std
pop
cmp
shll
pop
jb,pn
lret
inc
int
nop
lret
mov
add
clc
mov
or
pop
jns
pop
stos
addl
push
addb
into
ds
das
dec
ljmp
and
xor
mov
mov
subl
xchg
xor
ljmp
mov
or
mov
add
mov
or
xor
aad
and
das
push
cwtl
das
out
dec
inc
mov
ja
or
cs
dec
or
in
sbb
ds
cmp
fistl
mov
test
cwtl
push
mov
inc
ffree
jecxz
rdpmc
daa
scas
fcomp
xchg
and
or
scas
add
mov
repnz
fnstcw
or
das
data16
adc
cmc
out
adc
stos
cmp
mov
mov
mov
mov
inc
lcall
dec
cmp
push
scas
adc
rol
rolb
std
outsb
fmull
inc
push
jns
in
movsb
cmp
xor
lods
mov
mov
mov
dec
push
pop
mov
in
fnstsw
imul
gs
cmp
sti
imul
xbegin
jbe
mov
sub
mov
cltd
popf
imul
xor
sub
enter
pop
repnz
lcall
cmp
mov
or
pop
inc
jmp
rorb
stc
sub
fidivl
xor
dec
cmpsb
mov
cmp
pop
xchg
sbb
sbb
js
movsl
mov
insb
dec
jb
mov
cmp
push
call
das
jne
mov
cmp
incb
lret
ja
ljmp
shlb
cmp
bound
mov
rcpps
paddsw
jp
scas
inc
ret
andl
pop
dec
outsl
inc
push
mov
mov
ret
dec
rcll
pop
outsb
xchg
mov
aas
jmp
outsb
mov
scas
mov
jecxz
or
cs
pop
mov
dec
dec
add
repz
jmp
pop
mov
lret
fisubrl
fcompl
push
push
aam
mov
es
gs
pop
nop
pop
xchg
dec
and
adc
imul
mov
jg
xor
hlt
adc
es
inc
xor
jb
mov
cs
mov
or
sub
pop
sti
scas
pusha
aaa
cld
popa
test
aam
adc
push
iret
jmp
lahf
cli
adc
cmpsl
ss
add
into
int
daa
or
xchg
mov
cmp
jle
mov
mov
jnp
shrl
push
insl
adc
cmp
iret
movsb
jno
or
push
push
enter
mov
clc
lods
gs
mov
ja
xchg
cmp
xchg
sbb
icebp
aas
mov
das
adc
idivb
ret
push
aas
subb
or
dec
mov
or
sub
shl
sbb
mov
inc
les
movsb
incb
pop
stos
push
sbb
push
inc
lcall
cmp
sub
add
lahf
outsb
pop
addr16
push
loope
push
push
std
pop
xchg
jns
mov
mov
mov
dec
pop
sub
add
int
ror
push
stos
xchg
mov
mov
mov
dec
inc
js
jmp
fiaddl
adc
or
ret
push
pop
repz
nop
test
rcl
aaa
decb
lds
sub
popf
sbbb
rcrb
or
mov
insl
sbb
js
xchg
xor
pushf
push
stos
and
fiaddl
mov
setbe
sbb
add
daa
and
in
sub
mov
addr16
sbb
ljmp
lret
sub
outsl
lock
adc
mov
or
inc
fstpl
in
cmpsb
or
das
daa
pop
jnp
pop
jmp
cmp
popf
imul
pop
clc
pop
icebp
xor
fistps
xchg
jae
mov
out
xor
pushf
mov
push
addb
push
mov
push
mulb
pop
testb
gs
and
sub
adc
xor
mov
adc
mov
dec
jbe
stos
jg
cmpsl
fstps
xor
pop
lds
jle
sti
pop
ljmp
scas
add
push
lahf
in
ret
adc
cmp
push
lahf
push
lahf
sub
gs
sbbl
pop
test
in
movsl
push
dec
cmp
movsb
mov
cmp
sbb
xor
mov
adc
add
sbb
stos
add
aam
pop
xchg
push
sub
mov
mov
or
xchg
aas
xor
sarl
inc
outsl
adcb
int3
mov
or
sub
daa
sub
push
mov
cmc
cmp
dec
push
jecxz
pushf
lea
push
add
lds
sbb
xchg
outsl
shrl
inc
paddd
fimuls
popa
mov
lret
cs
fimull
jl
push
pushf
int
push
addr16
dec
punpcklwd
mov
ja
mov
xchg
ret
mov
nop
inc
std
sahf
test
push
xchg
fsubl
and
jmp
shr
lcall
or
push
test
gs
loopne
shll
add
int3
icebp
pop
daa
adc
fwait
popf
push
mov
addb
lahf
aas
ret
push
mov
jnp
repnz
shl
sub
mov
cli
xchg
aad
xor
mov
cmpsb
je
aam
pop
leave
mov
loope
xchg
mov
push
sub
jne
js
jecxz
icebp
inc
jb
out
xor
popa
jbe
addr16
xchg
push
jbe
scas
sbb
xor
stos
xchg
mov
loope
and
fisubrs
add
mov
nop
pop
xor
push
imul
enter
scas
in
loop
lods
push
std
pop
loop
adc
push
mov
int3
mov
push
nop
addr16
xor
sub
js
adc
loope
add
sub
cmp
push
sti
int
gs
pop
mov
pop
pop
cs
aad
sub
mov
out
xchg
int3
shlb
subb
and
ret
cli
push
mov
cmp
xchg
sysexit
repnz
inc
fnstcw
inc
xchg
test
xor
fsubl
je
mov
pop
jno
fnstenv
cmc
pop
cmp
push
in
lods
inc
addr16
ds
push
gs
repz
call
mov
out
mov
inc
push
jae
mov
outsb
cli
and
loopne
mov
jo
stos
popa
lods
jmp
jp
int3
stos
lcall
or
mov
dec
xor
mov
and
std
fsubs
in
mov
and
xchg
jecxz
push
jne
addr16
xchg
cmp
icebp
dec
out
rclb
mov
daa
jb
xchg
faddl
mov
xlat
inc
imul
lock
push
fisttpll
sbb
push
add
scas
aad
dec
or
and
inc
dec
pop
xor
enter
sbbl
sbb
fcmovnb
fmull
mov
cmp
push
popf
lret
fabs
add
daa
jp
in
nop
mov
pop
out
xchg
fdecstp
sub
sbb
repz
mov
xor
inc
scas
sti
shrd
cwtl
popf
bound
jmp
jl
cmp
adc
int
jmp
adc
sbb
or
rol
xchg
lret
pop
jo
mov
push
cs
sbb
mov
stc
out
std
mov
stos
xor
push
sbb
fucomip
loope
xor
fsubs
adc
add
je
repz
faddp
les
rol
cmp
mov
mov
sub
mov
jecxz
insb
and
es
pop
xor
out
xchg
shl
aaa
sbb
sti
clc
sub
jno
imul
cmp
and
push
xchg
jmp
lret
cmp
add
inc
mov
fdivr
inc
jns
jp
xchg
xchg
imul
cmovs
mov
js
or
cmpsl
sbb
bound
adc
mov
cmc
lods
pop
or
dec
in
pop
mov
popa
mov
cmp
dec
lods
cltd
es
cmp
push
mov
lods
int
das
out
outsb
inc
xchg
cmp
sub
cmp
iret
test
int3
jae
rcrl
lahf
sbb
jmp
sarl
xchg
div
repz
cs
out
repz
in
cmpb
mov
or
fs
jne
adc
ss
in
jecxz
mov
dec
icebp
int3
jo
pop
cmp
mov
popa
scas
dec
shll
mov
jp
mov
pop
sbb
xchg
xchg
pop
mov
jbe
insl
pop
stos
jbe
loopne
cwtl
xlat
mov
and
or
outsl
mov
rcl
dec
fldenv
xlat
jb
mov
xlat
jg
mov
mov
repnz
jne
and
pop
and
cltd
push
cmp
mov
sub
pop
mov
jo
cmp
dec
pop
fs
xchg
out
daa
scas
aad
sub
adc
inc
or
imul
int3
pop
in
and
and
repz
insb
imul
jbe
cmc
daa
std
pop
call
fsubrs
sub
leave
or
jnp
stos
mov
cli
test
adc
cld
lods
pushf
sahf
cmp
lcall
jnp
test
mov
js
inc
adc
dec
js
divl
iret
mov
sahf
loop
mov
push
jmp
fdivs
mov
push
adc
mov
mov
loop
stos
bound
rorl
inc
ja
jno
xor
cmp
push
leave
cs
std
cli
icebp
ljmp
dec
jno
sbb
adc
es
call
cmp
xor
mov
jns
add
mov
in
sbb
sbb
test
xor
fistl
jmp
mov
enter
inc
xchg
lods
sbb
lret
mov
add
mov
outsl
push
cmpsl
pop
jmp
and
dec
dec
outsb
dec
dec
mov
mov
cltd
stos
pmulhuw
or
stos
pop
scas
push
ja
imul
nop
mov
test
scas
mov
nop
add
cltd
imul
pop
mov
lret
pusha
mov
shll
into
sti
int3
lods
fidivl
or
out
mov
ljmp
add
xchg
mov
push
xor
dec
lods
add
test
or
mov
inc
outsl
mov
push
andl
int3
jge
inc
cli
jmp
jne
insl
imul
jp
mov
push
xor
aam
push
mov
cmpsb
jne
jp
leave
movsb
rcll
outsl
cmp
xor
pop
push
sbb
lcall
clc
cmp
pop
into
into
fistl
jle
out
adc
int
ds
pop
or
dec
xchg
lcall
pop
cwtl
xchg
cmp
mov
mov
in
lods
push
stos
shll
mov
in
adc
inc
fstpt
aad
cmp
outsl
xor
stc
jne
loope
std
scas
aas
iret
lock
gs
test
ss
lods
sbb
add
lret
ss
ret
fs
aaa
and
dec
inc
xchg
mov
dec
jns
mov
test
adcb
arpl
addl
mov
sub
lahf
mov
mov
shll
jge
cmpsb
xor
sarb
jmp
arpl
dec
sub
jo
ficomps
adc
push
inc
and
shrl
cmp
popf
mov
dec
jne
into
rcr
arpl
jmp
jae
lds
inc
lahf
fstpl
shll
cmp
dec
sbb
frstor
xor
cwtl
das
fistpll
mov
jle
jns
call
test
popf
pushf
jle
repnz
mov
push
xor
xlat
inc
jle
xor
ret
jnp
adc
sbb
jg
mov
xor
ja
push
loope
ja
out
stc
xor
sbb
lcall
mov
ds
mov
mov
dec
push
mov
inc
cmpsb
fs
daa
adc
jmp
fnstsw
sbb
sbb
cmp
cmpsl
ret
xchg
int3
dec
lock
int
cli
cwtl
iret
inc
adc
adc
call
nop
sahf
cs
ficoms
out
popf
rcrl
fidivs
sbb
push
mov
pop
mov
push
in
repnz
xchg
jmp
int
push
or
push
fsubs
loopne
ss
loopne
cmp
outsb
pop
add
and
xchg
jno
ljmp
shlb
sbb
mov
push
xchg
bound
mov
fldt
dec
sbb
inc
mov
pop
lock
jecxz
adc
or
test
mov
stos
cltd
pushf
xadd
mov
mov
jge
subl
lret
push
pop
mov
pop
lods
aas
sbb
das
xchg
mov
test
jle
or
jnp
cmp
int
es
shl
jb
mov
rolb
addr16
nop
cwtl
ds
inc
sahf
push
iret
xor
xchg
cld
push
jecxz
movl
adc
cmp
mov
jne
push
mov
xchg
scas
loopne
sbb
ret
divb
xchg
lock
imul
mov
jle
jmp
mov
jo
test
fmull
sub
fdivl
adc
icebp
popa
mov
xor
adc
insb
rolb
arpl
repnz
fcmovnu
mov
sub
mov
fnsave
dec
add
repz
sti
nop
push
fnsave
jl
xor
loopne
xor
xor
or
cmc
push
add
sub
sar
inc
dec
mov
mov
int
xchg
cmp
sbb
aas
pop
int3
ds
xchg
int
xor
mov
dec
lods
mov
or
movsb
insb
imul
sbb
adc
mov
rclb
push
dec
cli
mov
dec
dec
xchg
sbb
loope
sbb
cmp
jne
fcoml
fcom
adc
leave
push
mov
or
out
jns
outsb
lret
push
mov
outsb
sub
dec
aaa
sahf
das
jmp
mov
push
add
mov
mov
cmp
es
out
stos
inc
mov
les
inc
imul
jle
out
rcll
push
mov
adc
adc
adc
in
mov
in
and
mov
cli
mov
pop
jle
mov
cmpsb
cmc
jmp
loopne
mov
adc
add
scas
jne
aas
push
repz
shlb
ss
pushf
pop
fistps
insl
xchg
pushf
cmp
loopne
inc
int3
ret
sarl
mov
fsub
int3
inc
fldenv
in
lock
xchg
fadd
clc
aad
xchg
adc
mov
cmp
jecxz
xchg
dec
ret
ss
push
repnz
shrb
xchg
cs
xchg
add
out
mov
inc
cmp
jle
aam
cmp
jno
xlat
pop
ret
jns
data16
dec
int
pushf
lcall
in
mov
mul
pop
push
stc
cmp
popf
jbe
test
and
sub
in
cmpsl
inc
cmp
cld
push
jo
push
imul
push
imulb
and
sub
jne
pop
push
bound
and
jae
jle
loope
cld
incl
push
inc
pusha
sbbb
mov
fsts
pop
in
cmp
xor
fcomi
cmp
andb
dec
push
fdivrs
and
xor
andb
stos
in
lcall
jl
push
xchg
insl
mov
movzbl
mov
stos
inc
jge
cmp
test
mov
push
enter
out
rcll
cmp
loope
out
icebp
or
push
inc
cld
out
loopne
pop
lcall
shlb
mov
mov
push
shll
cld
and
cli
aaa
jmp
test
fidivrs
negl
adc
sahf
sbb
aaa
mov
pop
hlt
mov
lods
push
dec
mov
jg
jge
sub
aas
sub
add
les
cmpsl
sub
popf
out
pop
sbb
sub
xchg
insb
push
lock
adc
mov
push
cltd
or
push
int3
les
int3
cmc
dec
lret
xchg
ret
dec
in
and
push
icebp
dec
cmp
push
cmc
jecxz
std
pop
dec
pop
ss
ds
mov
in
push
sbb
xchg
or
loope
pusha
loope
push
or
popf
mov
pushl
add
mov
cmp
push
push
sub
and
and
inc
push
adc
push
pop
addr16
pop
mov
xchg
ljmp
flds
decb
sbb
lea
out
out
inc
cld
push
popa
sbb
dec
pushf
xchg
jbe
cmp
mov
push
push
iret
inc
sbb
dec
orb
stc
fucomi
xchg
inc
jp
stos
rcrb
je
or
andl
lds
mulb
testl
imul
adc
je
scas
jp
push
insl
xchg
cwtl
cmp
push
mov
push
pop
int3
or
fcoml
out
cmp
and
repnz
sti
lods
xchg
sbb
and
and
and
mov
cli
cmp
xchg
inc
jmp
lods
cmp
mov
cld
pop
mov
or
mov
push
lret
mov
test
insl
cmp
sbb
push
fs
aad
mov
or
pop
pop
sub
test
push
mov
jecxz
iret
push
test
add
push
ja
jge
pop
pop
jns
jecxz
jne
or
lcall
popf
dec
jecxz
sbb
jecxz
scas
sub
test
ret
les
mov
lods
sahf
int3
cli
jae
push
pop
jnp
jmp
ljmp
inc
movsb
mov
mov
push
out
addb
iret
mov
outsb
lret
imul
xchg
pop
repz
xor
lods
xchg
mov
sub
das
cmpsb
pushf
cld
add
jo
inc
int3
daa
push
iret
mov
mov
js
jbe
xchg
push
sti
divb
aad
jge
mov
movsb
mov
in
mov
and
jne
imul
jb
xlat
sbb
std
repnz
mov
xchg
pushf
pop
sub
inc
gs
call
in
mov
lcall
cli
sbb
cmp
arpl
pop
sub
dec
and
mull
jmp
enter
clc
or
push
stos
mov
test
jbe
jecxz
cmp
xchg
hlt
icebp
xchg
inc
dec
mov
addr16
jae
xor
mov
aad
jnp
cmp
insl
test
roll
dec
push
pop
testb
xchg
es
int
mov
push
arpl
cmc
push
sub
scas
mov
add
sbb
repz
icebp
or
adc
jmp
test
mov
fxch
add
in
je
dec
fucomip
inc
imul
inc
adc
jecxz
cmp
lock
fs
lret
xor
xor
stos
mov
inc
fsts
inc
sub
sbb
gs
loop
pop
popa
std
mov
mov
loopne
inc
call
cmp
or
and
out
stos
ja
sbb
fimuls
fisttps
xchg
sbb
lods
iret
lods
mov
aas
hlt
popa
jbe
das
sahf
mov
jg
in
jbe
inc
ja
mov
ror
icebp
test
fldt
cmc
push
js
shll
movsb
out
lcall
out
fcoms
cs
push
jmp
push
fdivrl
in
enter
unpcklps
sti
xchg
xor
cmpsl
out
or
mov
add
add
push
mov
pusha
movsl
pop
clc
dec
repnz
xchg
inc
xchg
xchg
pop
pop
cmpsl
sbb
inc
mov
lret
push
inc
mov
rorb
xchg
sbb
pusha
scas
fldenv
jo
test
lods
imul
lret
ret
jns
inc
lcall
add
rorl
popa
enter
cmp
mov
mov
and
mov
stos
cmovle
rorb
test
rcll
cmp
add
xor
cmpsl
cmc
jecxz
lahf
push
stos
xchg
sub
mov
jae
lods
mov
rcll
add
mov
fsubl
mov
inc
imul
ljmp
xor
shr
aaa
rep
cmp
shrl
call
roll
pop
pop
inc
pop
scas
sub
sub
jb
je
cld
mov
stc
mov
ja
xchg
xlat
fcom
inc
adc
push
fisubs
ret
jnp
lock
mov
gs
divb
fiadds
adc
xchg
sbb
in
sbb
cs
or
loopne
xchg
loop
lods
cs
data16
fwait
and
push
lods
mov
xor
dec
iret
insb
aas
int3
xlat
loop
adc
ljmp
int
cltd
sti
cltd
xor
or
xchg
mov
mov
adc
add
jne
xchg
and
enter
cmpsl
pushf
fwait
xchg
fistl
pop
push
leave
popf
pop
pop
cmp
cmp
pop
push
inc
dec
adc
std
and
sbb
aad
xchg
frstor
sbb
sub
mov
sbb
mov
cmp
cmp
sbb
adc
test
pop
nop
roll
orb
popa
xor
test
fdivrs
xchg
jl
add
pop
pop
sub
loopne
fistpll
dec
jge
cmp
dec
imul
out
in
das
sbb
jle
imul
fildl
adc
les
mov
std
aam
or
xor
and
fadd
inc
std
sbb
adc
dec
pop
cmp
pop
loopne
or
out
xor
aam
fadds
je
scas
sbb
jge
mov
xor
mov
sar
les
jmp
add
and
adc
in
and
out
cli
xlat
mov
xor
dec
stos
mull
push
icebp
push
adc
cmp
inc
lret
mov
xchg
dec
sbb
nop
and
cmp
dec
nop
dec
jae
out
xor
scas
roll
out
inc
ret
mov
sbb
jmp
and
inc
cli
mov
sbb
jmp
pop
mov
xchg
fstp
jmp
mov
int
pop
push
je
xchg
in
inc
add
clc
adc
sub
inc
fucom
stos
xchg
mov
add
cli
xchg
fisttpll
add
dec
mov
sub
roll
pusha
lods
mov
pop
orl
xor
aaa
insb
ja
into
in
in
jb
cli
iret
sbbb
cmp
stos
mov
insb
cmp
adc
xchg
and
cmp
pop
mov
jecxz
dec
cs
in
in
mov
gs
xchg
xchg
rcll
xchg
call
jb
pop
sub
shrb
jge
movl
and
jnp
xchg
shrb
shrl
push
aas
decl
sbb
pop
jne
leave
stos
stos
cmp
xor
mov
mov
out
stos
inc
push
sti
jae
adc
jecxz
movsl
les
clc
jge
inc
pop
jmp
jae
movsl
jp
ds
fwait
sbb
sub
aam
adc
mov
xor
rolb
movsb
sub
pop
lods
cmpsl
aas
push
movb
fs
jp
lret
push
ret
pop
xchg
leave
dec
fdivrl
cltd
xchg
or
mov
adc
bound
and
sti
lcall
sub
call
out
in
and
iret
scas
stos
mov
and
or
and
mov
mov
enter
xor
pop
adc
or
jmp
stc
xchg
ljmp
add
dec
imul
or
rcrb
es
mov
aam
bound
mov
mov
dec
lock
cmp
sbb
jg
out
fsub
mov
push
fildll
and
xlat
test
call
mov
push
orl
mov
shld
movsl
stc
dec
and
and
mov
es
adc
mov
mov
cmpsl
js
mov
or
stos
add
xor
xor
std
sti
cmp
and
xor
rorb
add
adc
test
cmp
sub
cmp
xor
das
add
jo
pop
jno
mov
dec
push
movsl
cmp
push
adc
push
wrmsr
aad
inc
sbbl
push
gs
xor
shrl
lock
ljmp
mov
jg
das
or
jae
stc
push
sub
lods
mulb
add
push
scas
jg
mov
dec
insb
inc
push
aaa
std
dec
jae
mov
gs
push
jo
popf
push
push
std
data16
mov
or
cmp
push
fldt
pop
pop
pop
divb
lock
arpl
push
insl
mov
xchg
icebp
out
push
dec
mov
test
dec
and
sbbb
das
and
jns
or
pop
ljmp
inc
pushf
test
jnp
jno
int3
scas
pop
cmp
mov
imul
and
test
call
fbstp
mov
push
aad
daa
mov
mov
xchg
inc
xlat
movsb
cmp
adc
lcall
pop
push
adc
pusha
adc
insb
sub
xlat
iret
shl
lcall
dec
push
pop
xor
xchg
xlat
cli
jle
sbbl
or
mov
mov
dec
int3
popa
xchg
xlat
ss
jns
mov
test
sbb
pop
inc
mov
mov
push
push
jae
or
push
inc
xlat
mov
mov
idiv
and
mov
xor
push
pop
lret
cmpsb
xchg
adc
pop
mov
sbb
ljmp
xchg
fs
sub
roll
divl
out
inc
sahf
mov
mov
dec
push
sbb
pop
stc
sub
repnz
adc
inc
xor
jmp
fcmove
vorps
xlat
pushf
divl
lcall
idivb
inc
jns
je
pshufw
dec
lods
cs
xlat
ds
jmp
push
inc
push
xor
sub
stos
jp
push
push
loope
push
sbb
dec
cmpsb
aaa
cli
lret
mov
js
pop
leave
loopne
mov
test
xchg
inc
out
sub
mov
fwait
sbb
lret
mov
mov
mov
add
pop
es
add
fiaddl
pop
sub
mov
fisubl
lea
pop
cmp
mov
or
mov
loope
es
stos
fisttps
sbb
jle
rcrl
mov
adc
and
insl
jmp
add
dec
dec
idivb
rcl
shl
dec
icebp
xor
inc
add
push
xchg
pop
mov
ljmp
rcl
and
sub
dec
and
mov
sbb
lret
stos
or
and
cmp
and
insl
push
repz
inc
shl
out
sbbb
or
pop
xchg
popf
mov
test
incl
xchg
cmpsl
add
or
pop
xor
gs
and
dec
fimull
cmp
inc
inc
push
and
call
sbb
mov
jge
aad
xchg
jae
dec
adc
xchg
and
pop
icebp
mov
in
hlt
call
mov
idivb
loopne
mov
aam
gs
jecxz
lods
jns
dec
cwtl
lods
ljmp
push
leave
icebp
push
hlt
xchg
mov
mov
mov
push
jns
das
faddp
pop
aaa
jae
mov
dec
cwtl
xchg
add
add
cli
in
xchg
mov
push
fistl
shll
arpl
aaa
adc
lea
ja
sbb
or
adc
pop
fwait
fwait
pop
push
sub
push
das
sub
pop
clc
pop
mov
adc
jl
sub
mov
jne
inc
lcall
xchg
fisubl
and
clc
mov
jle
imul
shlb
lods
lock
aam
push
ret
aad
push
shlb
outsl
fcmovb
adc
push
mov
les
mov
xchg
cmpsb
push
sahf
mov
push
ret
mov
ret
push
je
pop
in
mov
rclb
dec
push
inc
mov
addr16
and
ret
and
out
jg
inc
push
push
jmp
or
lods
leave
cli
test
mov
xor
pop
nop
in
mov
out
mov
fnstsw
mov
mov
stc
mov
nop
je
mov
fcoms
mov
ja
lds
cmp
in
int
mov
pop
leave
push
in
sub
inc
jbe
jne
fsubl
or
mov
and
loope
pushf
inc
into
push
mov
scas
jne
jecxz
add
pop
mov
cmpsb
mov
mov
mov
adc
mov
inc
aaa
xor
xor
lahf
addb
cltd
stc
mov
cmp
js
sub
popa
loop
cltd
push
inc
push
cltd
aas
nop
fsts
cmp
shlb
dec
lea
cmp
add
mov
inc
add
cmpsb
out
pop
mov
mov
test
cmp
cmc
mov
std
rcrl
add
les
push
movsl
adc
sbb
inc
std
mov
aam
cli
xor
in
mov
pop
pushf
ss
aad
inc
insb
in
mov
arpl
xor
jg
or
xchg
mov
cmp
dec
pop
cmp
dec
sub
and
movsl
into
or
ds
cmp
inc
addr16
ret
decl
cmp
cmp
negl
loope
adc
cmp
ret
popa
scas
dec
stc
hlt
mov
test
xor
nopl
imul
pop
sub
pop
push
test
and
lods
sbb
and
rcll
add
popf
imul
std
jmp
and
sub
daa
mov
xchg
mov
in
lret
xor
push
cmc
ljmp
outsl
call
sahf
inc
shll
sbbl
outsl
inc
shl
lret
push
dec
add
bound
subb
sub
ss
ss
lods
pop
ljmp
pop
shll
or
add
mov
mov
lret
cmpsb
dec
and
pop
xchg
lods
jo
fdivs
scas
call
imul
and
mov
mov
aad
sbbl
and
adc
and
testb
jo
cld
pusha
xchg
jae
pop
inc
pushf
and
xlat
test
adc
sahf
shrl
mov
jg
les
mov
das
xlat
push
cltd
idivb
ljmp
ror
nop
test
aam
lahf
dec
mov
mov
sub
push
mov
in
je
fldt
add
mov
test
psllq
call
pop
mov
ret
rorl
push
mov
xor
mov
dec
xor
imul
push
mov
xchg
dec
idivl
jnp
inc
popf
jp
pop
xchg
mov
mov
cld
adc
push
pushf
ror
nop
rcl
or
sub
cld
add
lcall
ja
dec
adc
adc
and
in
pop
enter
addl
mov
sbb
sub
xchg
mov
daa
lret
push
jo
xchg
fmull
stos
push
sub
push
outsl
cwtl
push
daa
pop
sbb
in
jg
test
stos
out
adc
movsl
sub
jbe
cmpsl
adc
mov
push
jns
inc
and
fldcw
out
insl
stos
cmp
loope
lahf
jle
lods
push
dec
inc
cmp
shlb
or
xor
push
jl
hlt
pushl
mov
xor
fmuls
pop
mov
push
in
mov
jnp
sbb
push
push
pop
ds
gs
js
jbe
inc
xchg
jne
in
decl
or
dec
sbb
loop
sub
movsl
jp
xor
pusha
adc
push
sub
xchg
ds
repz
mov
imul
scas
xor
sbb
sbb
xchg
dec
lods
adc
cld
adc
mov
cli
iret
ss
pusha
ret
jnp
repnz
jo
jb
dec
cmp
rcr
xchg
xchg
es
cmp
jge
cmpsl
hlt
jle
pop
imul
aad
mov
sbb
mov
push
push
pop
sub
cmp
jnp
dec
xlat
gs
aas
ret
sbb
popa
ljmp
push
mov
jo
out
out
dec
add
je
mov
xchg
andb
xchg
and
insb
rcrb
cmp
mov
mov
ljmp
fs
add
popw
repnz
fdivrl
scas
sbb
add
xchg
aas
in
or
push
mov
push
push
fldt
jo
jmp
adc
mov
leave
mov
andb
imul
repz
jle
xchg
sbb
outsb
roll
add
movsl
ret
pop
mov
push
or
lods
or
fwait
scas
out
cmp
sub
sbb
in
in
fiaddl
pushf
ja
mul
int
fcmovne
push
jnp
out
lret
or
in
sbb
mov
push
insl
sahf
outsl
rclb
lea
and
adc
push
inc
adc
cli
push
jne
outsb
movsb
adc
xor
mov
insl
inc
sar
dec
std
nop
adc
mov
and
imul
in
xchg
dec
faddp
sti
repz
adc
lret
mov
inc
mov
mov
push
pushf
loope
push
insb
jns
push
pop
pop
pop
scas
idivb
sub
push
movsb
shlb
xor
jp
loopne
xchg
faddl
mov
mov
xchg
push
push
fs
xchg
mov
dec
mov
cs
sub
inc
out
jnp
pop
mov
inc
sub
es
push
or
aad
pusha
and
or
test
and
inc
lea
sub
jo
xor
xor
add
adcl
jo
lods
popa
call
adc
mov
pop
mov
ljmp
add
js
jmp
cmpsb
inc
out
aam
test
dec
jnp
inc
xor
scas
aas
orb
int
sub
and
push
mov
ret
iret
js
xchg
xchg
add
pushf
jne
lret
fadds
sub
addb
ret
mov
sbb
cmpsl
mov
xchg
or
clc
loopne
and
leave
xor
pop
hlt
jg
pop
lock
iret
les
jne
cmpps
test
add
aaa
loop
out
outsl
scas
inc
xor
xor
stos
inc
inc
cli
adc
outsb
popa
mov
add
sub
or
aad
into
repz
jbe
jecxz
pop
enter
insl
jno
pop
jecxz
and
mov
call
int
test
or
pop
lods
clc
insb
mov
stc
jecxz
add
jle
jp
fldl
pop
fldt
pop
add
lods
sahf
jp
js
leave
adc
leave
scas
push
cld
mov
push
mov
xor
rcl
scas
loopne
mov
insb
lahf
cli
stos
lods
clc
push
jg
cmc
mov
mov
mov
cmp
test
ja
add
mov
out
shlb
into
jb
ja
out
std
lea
mov
dec
std
xor
out
gs
loop
xor
out
daa
mov
das
ja
imul
mov
test
xor
mov
sub
cmpsb
mov
lcall
imul
cmp
pop
pop
test
push
mov
mov
mov
loop
jp
shlb
fiadds
dec
mov
sti
das
fidivrl
adc
out
pushf
xchg
jmp
mov
lahf
mov
pop
pop
iret
lds
xor
and
shr
lret
inc
ret
push
imull
or
loop
and
xlat
xchg
insb
shrb
and
jg
xchg
fidivrs
push
xor
pop
push
pop
cwtl
xor
out
push
mov
jae
push
and
iret
jne
ljmp
sahf
ret
jge
in
imul
and
xlat
das
jmp
or
test
lahf
fsub
cld
dec
sub
fildll
lods
sbb
pop
loop
scas
adc
push
sub
sbb
jle
or
insb
icebp
pop
ja
cmp
js
mov
mov
idivl
pop
lret
lcall
xchg
mov
es
ss
stos
out
pop
out
jg
in
loopne
loop
dec
xor
ljmp
mov
jae
or
pop
xchg
sub
cmpsb
das
sahf
pop
or
gs
pushl
leave
pop
inc
fstpl
pop
in
jecxz
sbb
xchg
cli
mov
bound
jne
loop
xlat
mov
inc
mov
clc
mov
sbb
frstor
mov
sahf
add
cld
insb
or
fdivr
xor
test
adc
std
aad
dec
jecxz
push
add
sbb
dec
ret
or
imul
sti
and
mov
das
dec
mov
mov
dec
test
push
incl
xchg
mov
mov
jno
bound
mov
subb
lahf
pop
lret
loopne
mov
dec
rorl
movsl
fstl
movsl
pop
cld
mov
imul
pop
pop
aaa
dec
push
repz
or
movsb
pop
mov
addb
sti
stos
mov
mov
int3
mov
cmpsb
push
mov
movsl
rcrb
push
ja
ljmp
scas
lret
xor
pmulhuw
int3
lock
push
addr16
mov
mov
call
and
js
sbbb
mov
in
mov
loop
dec
repnz
lret
or
mov
cs
pop
insl
sub
adc
fscale
in
sbb
cmp
or
adc
enter
jge
adc
push
cmc
fsts
sbb
insl
adc
inc
in
enter
inc
mov
xor
xor
jns
cmp
test
movsl
jne
in
and
mov
pop
adc
xor
sbb
fs
sbb
sub
xchg
js
cmc
stos
pop
leave
lea
jne
pop
loopne
xor
repnz
inc
sahf
xor
add
sub
xchg
jae
add
adc
sbb
xor
aad
jb
mov
shrb
or
dec
sub
cmp
xor
add
dec
inc
fldcw
cmpsb
ds
sub
mov
push
xchg
js
les
adc
inc
xchg
cli
cmpsl
and
pop
xchg
cli
fstl
inc
pusha
jnp
jle
cmp
lcall
mov
icebp
out
subl
sbb
or
xor
js
in
subb
mov
leave
int3
dec
cmp
dec
add
and
dec
pop
js
inc
pop
rcr
pushf
nop
call
mov
or
flds
test
cld
inc
icebp
cli
inc
lea
or
ja
jmp
mov
cmpb
or
loopne
outsl
in
sbb
arpl
ficoml
mov
sub
push
pop
xchg
daa
jbe
repz
sub
movsl
mov
or
ljmp
imul
push
fnstenv
iret
jae
and
cmp
xchg
ja
cwtl
and
ljmp
jle
in
cmp
mov
jmp
jno
cmp
xor
adc
and
push
lret
push
mov
add
dec
jp
add
lods
sahf
jne
rsqrtps
push
rsqrtps
aas
and
cmpsb
push
sti
outsl
icebp
mov
cmp
cmc
test
pop
daa
cwtl
mov
idivl
das
fnstenv
rcll
sub
sbb
cmpsb
xchg
cmp
pop
repnz
push
add
popf
call
pushf
stos
mov
and
mov
fstpt
xchg
mov
add
lret
or
repnz
leave
repz
pop
out
mov
mov
sub
dec
ja
cltd
cli
lahf
adc
dec
inc
lret
aam
inc
mov
iret
adc
in
xchg
shll
xor
aam
and
push
mov
mov
fidivrs
mov
mov
adc
adc
lea
movsl
push
test
jb
inc
xchg
xor
leave
xchg
sbb
push
test
scas
insb
xchg
fwait
retw
dec
jnp
push
mov
stc
ljmp
jb
ret
mov
xor
orl
dec
repz
loopne
mov
movzwl
add
mov
sbb
popf
xchg
loop
clc
popa
pop
adc
data16
lea
mov
cmp
sbb
out
and
push
inc
in
ffree
mov
cmpsl
dec
iret
dec
outsb
push
mov
sbb
mov
cltd
adc
inc
jno
mov
push
test
and
push
adc
inc
shll
adc
ror
push
push
in
and
xchg
mov
push
pop
rolb
xor
inc
icebp
rcr
pop
hlt
lahf
sub
mov
cmc
add
mov
dec
cmp
mov
ja
jns
and
adc
or
jmp
pop
popa
or
out
sub
sub
sqrtps
pop
dec
or
pop
adc
cld
in
xor
mov
imul
repz
inc
inc
js
xchg
jbe
pop
rcrl
pop
roll
add
xchg
xchg
clc
stos
mov
insl
mov
in
test
adc
aad
je
cs
inc
adc
or
or
cs
jne
sbb
lock
in
mov
cmp
inc
mov
mov
jne
add
sub
cmp
icebp
pop
xor
loope
je
sbb
pop
inc
aam
dec
sbb
ljmp
loop
je
push
push
das
mov
mov
pshufw
loop
and
adc
icebp
mov
dec
cwtl
xor
arpl
xor
xor
xor
push
push
adc
out
mov
and
stos
xor
and
aam
movsb
dec
push
or
pop
stc
pop
lods
or
add
cmp
jb
mov
jns
scas
andl
add
ljmp
inc
dec
sub
shrb
lea
dec
add
cmp
jmp
jno
fnsave
repnz
movsl
leave
inc
sbb
stos
pop
sbb
cltd
and
cld
jge
cmpsb
sbb
adc
pop
mov
pop
jbe
icebp
jg
or
and
icebp
ret
std
loop
dec
and
and
sbb
movsb
cmp
xchg
lret
imul
aam
mov
and
inc
cmp
shll
jl
hlt
mov
jb
daa
jo
aas
and
lock
aad
dec
cmp
xor
out
push
cld
sbb
icebp
cmc
jnp
sub
or
cld
adc
sahf
int
enter
clc
mov
daa
cmpsl
popw
add
mov
loop
iret
sahf
nop
std
xchg
sbb
cmp
pop
negb
jno
scas
add
subl
int3
outsl
ljmp
add
push
pop
push
scas
ds
adc
and
and
or
mov
ds
mov
and
ds
mov
inc
cld
sbbl
dec
and
jb
aas
call
jo
rcrl
outsl
stos
mov
imulb
mov
fsts
xchg
sub
push
jne
test
pop
mov
cmp
lds
and
mov
or
aas
dec
lock
test
test
jmp
repz
jnp
scas
ficompl
or
ja
aas
ret
jge
mov
cmp
imul
or
inc
sbb
jmp
nop
es
aam
test
sbb
push
jge
jp
icebp
adc
jnp
mov
xchg
sarb
fnstcw
or
ficoml
mov
sub
inc
shlb
push
aas
cmp
lahf
std
lods
fnsave
ss
test
loopne
lods
gs
mov
jmp
sbb
xchg
inc
movsb
loop
jge
out
daa
mov
cltd
push
adc
push
test
jns
popf
repnz
push
inc
daa
loopne
push
push
ja
sbb
out
and
inc
push
mov
adc
bnd
imul
mov
out
imul
xchg
jo
or
lret
lret
mov
icebp
or
xor
arpl
push
fistpl
jg
out
xor
push
xor
shlb
xor
jns
jle
pop
loopne
xor
pop
dec
lds
mov
data16
dec
dec
data16
cli
movsb
fistps
xchg
dec
cmp
cmp
jns
xor
jbe
jl
leave
mov
mov
pop
adc
lock
and
mov
lods
mov
test
jbe
adc
add
cld
stos
mov
jmp
cmp
cmp
mov
das
add
ljmp
popf
dec
orl
lcall
mov
ss
call
pop
andb
inc
xor
js
pop
dec
dec
out
js
mov
push
lods
pop
jb
pop
test
xchg
sbb
mov
pop
and
mov
xor
lret
mov
sbb
sbbb
or
push
loope
jmp
stos
js
sbb
lock
stos
mov
cld
push
fs
lds
arpl
das
jnp
int3
xchg
hlt
cmp
push
sahf
adc
sub
insl
je
inc
sbb
inc
ret
loopne
aam
dec
mov
loope
lcall
xor
cmpsl
incb
in
loope
jno
js
pushf
je
dec
mov
out
add
push
mov
pop
pop
test
xchg
shr
mov
push
repz
ja
loop
xor
mov
push
adc
jb
mov
int
xchg
stos
aas
xchg
js
xor
adc
pop
mov
inc
or
sbb
inc
and
push
subb
sarl
mov
ja
je
outsl
lret
pop
shll
mov
aad
and
popa
daa
mov
dec
dec
cmp
test
ret
and
lahf
push
mov
lea
cmp
aas
scas
cmp
shlb
ret
out
out
scas
rcr
cmp
js
xchg
jg
aam
sbb
and
bound
cmp
mov
icebp
fsub
mov
jnp
scas
mov
xchg
aad
inc
lock
push
outsl
mov
cmpsb
lcall
push
dec
add
mov
and
test
mov
pop
dec
xor
test
jecxz
inc
bound
jl
call
call
ror
jnp
ror
mov
imul
fwait
out
mov
jle
aad
mov
ret
lcall
dec
mov
and
iret
test
push
mov
in
out
cmpsl
lret
cmc
test
mov
cmc
pop
inc
adc
jecxz
daa
in
pop
enter
or
stos
out
in
mov
push
and
inc
shlb
mov
popa
bound
pop
adc
enter
lea
stos
aad
push
cmp
mov
dec
out
xchg
mov
lea
sbbb
bound
in
pop
insb
sbb
outsl
cltd
stc
ret
sbb
adc
xor
xchg
je
aad
scas
icebp
push
sub
and
ret
test
xchg
call
js
test
data16
fimuls
add
hlt
sbb
mov
ret
sbb
loope
xchg
ja
pop
mov
insb
xor
leave
por
xchg
fmuls
pop
inc
insl
mov
xor
pop
xchg
mov
test
mul
mov
cmpsl
mov
pop
xchg
cmpsb
lret
xchg
mov
xor
sub
mov
jge
jnp
xor
sbb
mov
pop
jg
push
push
aas
out
mov
dec
sub
jmp
sti
into
loop
xchg
sbb
mov
in
push
pop
pop
inc
fistl
push
xchg
out
fs
inc
clc
and
jb
cmc
lahf
adc
mov
rolb
je
xchg
lcall
test
mov
mov
js
mov
cmc
pop
pop
sbb
aad
leave
fwait
lods
repnz
mov
add
lret
fisubrs
dec
out
das
pusha
xor
jg
mov
lret
xlat
popf
mov
cmp
jno
xor
aad
adc
xor
xchg
jae
jmp
cmp
in
into
sbb
fcompl
jecxz
xchg
leave
mov
jmp
addr16
fcomip
jmp
jmp
movsl
std
and
das
fnstcw
or
dec
or
sub
add
mov
sbb
cmp
arpl
xchg
lods
in
xchg
test
int
jg
in
jno
push
jge
addb
cmp
insb
pop
cmp
repz
dec
scas
stos
adcl
out
imul
xor
in
pop
sub
adc
outsl
movups
jae
aad
lret
ljmp
xor
pop
and
cmp
pop
mov
sbb
mov
cmp
sbb
mov
arpl
adc
cmpsb
std
jbe
daa
into
push
dec
out
lock
mulb
popf
push
lret
pop
jae
mov
dec
mov
cs
ficoml
mov
push
loope
sti
dec
inc
loopne
jmp
pop
aas
adc
mov
jl
loopne
push
andb
push
fldt
into
cmp
xchg
fs
inc
ss
xchg
xchg
loopne
adc
iret
fidivrl
push
push
ja
aaa
test
cmp
xor
jbe
arpl
mov
sbb
je
cs
pop
call
mov
lods
out
popf
movsl
popa
and
hlt
mov
sub
mov
divl
adc
xchg
into
outsb
sbb
cmp
sub
mov
dec
pop
repnz
lret
jmp
lods
mov
mov
fstpt
xor
add
mov
movsb
mov
sbb
lods
xchg
mov
stos
pop
andl
ja
ds
mov
mov
xchg
ds
ud0
mov
add
add
enter
lret
inc
int3
sub
movsb
push
outsb
push
mov
pop
mov
dec
and
xchg
jmp
loop
and
pop
or
lods
dec
dec
adc
iret
adc
lret
xor
jnp
lahf
fsubs
and
pop
mov
ljmp
jnp
insb
pop
push
leave
mov
sub
jmp
xor
mov
inc
shl
cmc
leave
xchg
dec
dec
inc
mov
out
fdivrs
push
adc
out
inc
mov
repz
jle
mov
stos
ja
outsl
outsl
lods
sbb
add
pop
xor
fldcw
mov
insl
fld
repnz
dec
mov
aas
dec
jb
or
shlb
mov
dec
xchg
loopne
mov
sbb
mov
xor
mov
mov
mov
fcmovnu
xchg
mov
jle
push
xor
jno
add
mov
push
jmp
push
fbstp
loop
movsl
aas
xchg
mov
fdivrs
jae
dec
inc
stos
mov
pop
sub
xchg
jns
inc
inc
mov
jge
cmc
call
jl
push
subb
lock
sarb
imul
xor
bound
xchg
arpl
xor
lret
mulb
loop
pop
stos
xchg
mov
mov
leave
scas
dec
mov
mov
and
sti
scas
cmp
inc
dec
dec
stos
scas
insb
sti
and
mov
or
sub
pop
xchg
dec
data16
ja
ljmp
icebp
sti
pushf
cs
pushf
in
ret
daa
mov
std
test
dec
sti
sbb
push
ja
pop
mov
call
xor
mov
and
jbe,pn
cmpsb
add
clc
push
jl
test
out
pop
mov
jns
pop
xchg
sbb
iret
dec
push
jl
scas
sbb
sub
sbb
xchg
ljmp
arpl
insb
xor
xor
setns
rorb
inc
cmc
inc
xor
xlat
mov
jb
jns
frstor
mov
shll
sub
outsl
xadd
lret
shlb
fildll
jae
ljmp
push
sti
push
ljmp
xchg
and
mov
xor
cwtl
and
leave
int
arpl
and
xorl
rcrl
stc
jbe
dec
sub
xlat
lea
mov
push
push
test
ds
orl
mov
mov
fsubrl
loope
lret
xchg
aam
jnp
fildl
bound
out
push
sub
sub
mov
loopne
jge
and
cmp
cmp
mov
mov
pop
or
add
or
xor
jb
pop
dec
es
cld
and
sti
pop
mov
mov
jb
daa
jg,pt
ja
dec
ret
push
or
adc
fnstcw
mov
mov
fildl
in
lcall
cltd
and
out
lods
and
and
out
lret
sbb
out
push
jno
mov
xlat
mov
lret
lret
fs
cwtl
jmp
push
sub
int
jbe
pusha
mov
fisubrs
sub
pop
fwait
mov
and
ret
mov
xchg
mov
out
inc
dec
cld
es
js
sahf
dec
cmp
sahf
and
mov
pop
sub
lods
dec
adc
aas
fs
das
add
push
jnp
fistl
testb
out
mov
cmc
mov
insb
fsubrs
inc
mov
adc
cmp
pop
fisttpll
pop
fildl
and
mov
dec
mov
fsts
pop
aam
gs
out
pop
push
push
loop
subl
out
lahf
pop
mov
fwait
in
sbb
sbb
sub
mov
bound
jle
inc
cmp
outsl
mov
les
jge
add
stos
int3
xor
jl
je
out
int3
arpl
imul
add
loope
add
mov
loope
mov
in
aaa
mov
insl
sahf
aaa
jp
insb
movsb
dec
shrb
xor
int3
jno
dec
or
sbb
lret
xlat
hlt
mov
mov
ficomps
xchg
clc
fistps
les
xchg
mov
lret
cmp
lods
loopne
xchg
jmp
iret
arpl
lods
fisubrs
inc
stos
into
mov
lock
das
out
int
shrb
outsl
call
dec
xchg
outsb
out
jge
xchg
push
cmp
sbb
test
adc
mov
jg
pop
bound
sbb
sbb
or
test
mov
fadds
jl
jb
jmp
imul
lret
mov
mov
out
stos
cs
aad
pop
xorl
call
mov
into
enter
adc
sbb
inc
test
dec
jp
loopne
push
adc
and
and
dec
jo
jno
clc
dec
add
cs
mov
or
cmpl
mov
icebp
mov
lret
into
sub
call
inc
pop
dec
xor
xchg
cmp
adc
mov
dec
push
ljmp
lods
fcmovnu
cmpsl
je
xchg
mov
dec
popa
test
icebp
mov
popf
pop
sbb
insl
add
in
roll
in
cmp
sub
sub
pop
xor
dec
call
mov
fst
xlat
cmp
jp
call
adc
sub
fwait
fs
mov
xor
add
xchg
pop
push
sbb
sbb
in
loop
dec
dec
lods
scas
mov
cmc
out
shrb
scas
out
int3
push
popf
mov
mov
lock
outsl
jge
das
fcoms
cmp
gs
and
mov
mov
sbb
jmp
pop
pop
repz
or
movsb
popa
mov
jnp
loop
lods
loope
or
mov
jge
stc
in
js
push
adc
cmp
sbb
out
sbb
cli
add
xchg
inc
aaa
mov
jne
mov
jl
popf
and
scas
pop
in
pop
std
sahf
imul
mov
out
mov
pop
add
dec
stos
mov
popa
xor
roll
clc
std
sbb
imul
stc
sub
ja
adc
repnz
sub
stc
xor
mov
xchg
call
xchg
cltd
sahf
call
cltd
outsb
jmp
pop
int
repnz
add
pop
mov
or
mov
mov
add
es
jnp
imul
and
push
jae
scas
rorb
sbb
or
out
jge
fsubrs
jge
fwait
sbb
cli
call
jne
jge
clc
dec
cltd
enter
mov
adc
js
jge
jg
js
iret
sbb
in
movsb
jnp
jne
jp
test
cmpsl
xlat
pop
pop
int
mov
xor
jbe
lods
les
fcompl
push
in
mov
push
sbb
in
je
arpl
jg
mov
pop
movsb
lea
mov
std
enter
pop
dec
sub
aam
pop
xchg
loope
or
mov
and
cmc
sarl
cmc
or
call
and
pop
jecxz
push
jnp
aaa
mov
scas
scas
negb
addb
andl
inc
push
or
ljmp
loope
imulb
mov
clc
add
or
inc
adc
mov
and
popf
jge
pop
les
cltd
xchg
rolb
outsb
ret
movsb
je
dec
fs
pop
fs
cmp
cmp
xor
mov
xchg
fs
mov
jle
in
mov
lock
jb
mov
pop
iret
into
inc
cwtl
je
dec
ja
xchg
int
fs
pusha
jo
or
xor
xchg
adc
out
xchg
cmpsl
aaa
xchg
stc
jp
shll
pushl
fsubrs
negl
lea
js
push
jo
mov
idivb
adc
aas
mov
xchg
mov
out
or
lea
dec
and
push
or
mov
pop
jns
xchg
jl
mov
pop
por
xor
xchg
idivl
aas
push
sahf
sbb
push
mov
mov
and
dec
jo
aad
scas
cmc
ficoms
pushaw
mov
loopne
scas
lods
stos
pop
outsb
mov
push
ret
adc
xchg
enter
mov
bound
add
negb
test
mov
data16
cli
cmp
and
cmp
imul
pop
loop
jmp
insb
dec
dec
dec
ret
ja
pushf
push
and
stc
jne
mov
push
jecxz
je
dec
scas
jne
xor
stos
in
sbb
adc
lods
imul
mov
cli
sub
mov
xor
sahf
jge
cltd
mov
push
repz
int
inc
arpl
insb
cmp
hlt
or
hlt
or
aas
adc
jmp
faddp
mov
adc
mov
pusha
or
fcoml
mov
pushf
or
in
cmpsb
xchg
outsb
jnp
push
adc
daa
std
rcrb
and
mov
xchg
mov
jns
stos
dec
scas
lahf
cli
dec
in
push
gs
inc
xlat
dec
add
adc
call
decb
data16
or
dec
in
cmp
ss
sub
ds
xor
inc
shr
pop
std
jne
in
mov
xlat
insl
jg
rolb
xchg
jo
xlat
adc
add
lock
jbe
jno
jb
lret
fldl
cmc
ret
icebp
push
in
sbb
xor
mulb
imul
pushf
push
iret
mov
test
mov
out
jne
cmpsl
cmpsb
test
jl
jno
push
enter
push
mov
roll
or
fcompl
int3
xor
repz
xchg
sbb
repz
sbb
movsb
or
std
mov
shrb
fstpl
popa
mov
pop
js
cmp
jne
xor
mov
pop
fcompl
pand
jae
lahf
mov
dec
je
add
push
pop
lods
inc
scas
xor
xor
jns
jno
enter
mov
xchg
out
imul
inc
dec
sub
sub
test
test
rcrb
mov
mov
inc
or
aas
insl
icebp
adc
testl
pop
push
hlt
xchg
cli
arpl
mov
xchg
xchg
pop
je
scas
push
sub
mov
pop
loope
int
mov
les
inc
fsubr
mov
fnstcw
and
roll
mov
cmp
test
mov
cmp
xchg
add
test
and
lret
sub
mov
hlt
repz
sbb
lods
push
out
inc
outsb
mov
xor
inc
movsl
mov
leave
mov
iret
idivb
pop
stos
add
sub
inc
movl
int3
and
xchg
rorb
inc
subb
roll
shlb
dec
adc
pusha
int3
test
mov
loope
rclb
jmp
out
scas
insl
insl
lret
mov
in
scas
insl
lods
movsl
jmp
mov
dec
or
loopne
or
sub
pop
fistpl
add
out
jl
jnp
add
out
icebp
std
repnz
cmp
sti
mov
mov
add
cwtl
sub
push
mov
dec
outsl
adc
ljmp
inc
iret
int
stos
outsl
loopne
jge
out
scas
fimuls
pop
mov
sbb
ljmp
pop
les
sbbl
mov
jp
sub
xchg
lods
and
sub
mov
and
sub
adc
xor
adc
or
cmpsl
mov
or
mov
aad
mov
cmp
lds
ds
ja
xlat
cmp
adc
cltd
enter
mov
es
push
lret
rorb
repz
mov
scas
dec
aaa
fdivrl
sub
icebp
cmp
data16
stos
add
and
outsl
cmp
fstpt
xchg
out
out
push
xchg
jbe
and
addps
rcll
jno
pop
movsb
loope
jae
inc
popf
jecxz
lods
movsb
mov
popf
and
xor
xor
push
xor
pop
xchg
addb
or
and
sar
arpl
std
and
int
pop
fadd
jecxz
sahf
dec
cld
sbbl
paddb
int
hlt
cmpsb
mov
jno
cwtl
jb
jl
jecxz
xchg
imulb
or
das
cli
and
sti
fdivrl
xchg
test
mov
movsb
or
aam
add
shl
adcb
cmc
stos
mov
sbb
inc
out
lds
movsl
and
cltd
fsubs
aas
inc
bswap
jl
mov
nop
pop
push
dec
jb
das
adc
adc
mov
jecxz
rol
jno
inc
test
lods
cs
cltd
or
gs
scas
dec
inc
cmp
jns
imul
cld
movsb
add
aad
xchg
ja
mov
fimuls
in
ret
int
mov
and
pmulhuw
cmp
jl
jp
lret
sub
mov
int3
shrl
shll
cmpsl
sub
mov
nop
lret
xchg
movsl
or
mov
arpl
inc
mov
mov
orl
enter
pushf
pop
and
and
sbb
jnp
ret
stos
das
imul
xchg
cmp
sub
jnp
popf
mov
xchg
in
lret
call
adc
in
aam
popa
sub
call
pop
mov
cmp
rep
and
push
cltd
aad
and
push
sahf
iret
adc
push
addb
jp
lret
add
inc
add
lahf
lock
mov
into
push
cmp
not
mov
mov
pushf
sti
addb
xchg
ds
add
mov
pop
jne
pop
lock
sti
xchg
mov
enter
pop
push
ret
cld
xor
ljmp
movsl
jecxz
push
fsubs
dec
in
hlt
je
js
xchg
push
jns
sub
dec
lcall
in
xor
xchg
out
scas
imul
icebp
mov
in
add
xsaves
pop
sbb
daa
adc
out
jns
pop
data16
pop
ficoms
sbb
outsb
testl
enter
sub
mov
sub
popa
lcall
addr16
lods
jnp
test
aad
cmc
loopne
xor
cmpsb
lret
js
mov
cmp
mov
mov
xchg
cltd
mov
insb
jmp
fdivrl
popf
rcrb
or
inc
sbb
cmpsl
jnp
test
and
aad
repnz
cmpsb
incl
inc
arpl
xlat
int3
imul
sub
sub
subb
pop
mov
mov
xor
les
push
dec
mov
or
shrb
jae
movsb
ss
enter
negb
cmp
xor
hlt
jmp
aad
mov
es
mov
sbb
mov
pop
jbe
repz
int
xchg
sbb
loop
ds
pusha
out
addr16
add
pop
pop
rorb
xor
mov
pop
or
sbb
push
xchg
and
jl
xorl
movsb
popa
cwtl
aaa
popf
jnp
pop
leave
or
cli
fdivl
push
or
jmp
xor
mov
cld
ljmp
push
aam
cmc
and
push
je
mov
add
int
push
std
cmp
aam
dec
scas
test
pop
enter
mov
lret
push
in
jae
jb
dec
ljmp
add
call
xor
jb
push
fadds
pop
into
pop
cmp
rcrl
mov
jno
pushf
lods
inc
pop
je
mov
notb
fcmovnu
or
aaa
cmpsl
or
in
leave
in
loope
xchg
stos
div
push
xchg
push
mov
js
cmc
outsl
sarb
mov
pop
xchg
cli
fst
arpl
jne
and
ja
mov
sub
popf
sub
xchg
les
or
popa
filds
jne
add
mov
bound
push
add
jae
jecxz
adc
fsubrs
das
gs
call
push
nop
jp
mov
pop
fmulp
fucomi
mov
cltd
test
or
mov
out
jp
add
inc
into
aad
xchg
dec
je
jbe
int3
int
xchg
fimull
mov
nop
in
dec
jns
lret
pushf
cmc
sbb
and
dec
jp
xchg
aad
decb
and
dec
das
sti
add
mov
and
mov
loope
jb
not
sub
jecxz
into
dec
lcall
dec
push
mov
ret
repnz
mov
mov
repz
mov
cli
shl
xchg
ljmp
pop
notl
out
call
xlat
push
std
nop
adc
fbld
fisttpl
in
lea
outsl
mov
fnstsw
sub
xchg
mov
push
sti
arpl
xor
push
xchg
xchg
cmp
add
push
and
je
xor
xchg
xor
jmp
repnz
mov
bound
lock
inc
jns
js
mov
xchg
dec
std
fisttpll
js
inc
arpl
add
mov
or
jecxz
repnz
pop
rcrb
into
cmp
adc
stos
cld
js
pop
or
xor
cmp
loope
xchg
inc
cmp
xor
or
lret
inc
xor
pop
in
mov
outsb
cmc
lahf
jmp
or
mov
es
mov
rcll
mov
fidivrl
popa
ret
clc
movsb
test
and
in
cld
clc
mov
xchg
push
xchg
cltd
test
test
mov
add
push
sub
push
mov
mov
dec
out
sbb
out
lahf
iret
arpl
scas
inc
push
into
cmp
rcl
and
aas
adc
popf
fucomip
and
mov
les
inc
pop
mov
cmpsb
jle
pop
xchg
cmp
jmp
test
vmovaps
jbe
fisubrl
aad
lods
jge
shll
icebp
movsl
and
loope
add
fimuls
icebp
aaa
fdivp
sti
sbb
mov
lods
rep
pop
xchg
push
jbe
scas
andl
xor
fcoms
mov
inc
mov
insl
inc
mov
dec
adc
rcrl
and
popf
dec
mov
or
lds
adc
aaa
stos
clc
mov
dec
nop
mov
pop
adc
leave
mov
pop
adc
and
icebp
lock
xor
push
cmpsl
fxch
icebp
shl
push
xor
jbe
jp
ja
pop
add
gs
jmp
sbb
int
jmp
ja
aad
in
fnstsw
mov
push
scas
das
dec
xor
add
add
sbb
cltd
mov
xchg
ret
push
jge
mov
inc
adc
jp
adc
mov
inc
xchg
push
mov
jge
mov
mov
cmp
or
fldt
mov
xchg
xor
xchg
dec
les
mov
std
loop
mov
stos
pop
push
mov
loop
iret
movsl
cmpsl
pop
pop
mov
jb
sub
sub
mov
jmp
rclb
stc
insb
jne
repz
mov
and
fnsave
movsl
rcl
sbb
jecxz
into
int3
lahf
gs
sbb
cltd
cmp
fbstp
scas
jnp
icebp
xor
stos
outsb
xchg
inc
fcmovnu
mov
sub
insl
out
out
jecxz
mov
es
inc
push
jbe
xlat
inc
pushf
mov
mov
stos
sbb
and
popf
cs
xchg
adc
or
push
loop
push
mov
adc
cmp
lret
cmp
inc
or
push
lock
mov
xchg
adc
xor
inc
scas
out
sbb
and
xchg
sub
push
out
xchg
mov
in
lea
call
xor
je
mov
das
xor
lock
jge
jb
jle
jmp
imul
nop
lock
pop
fidivrs
pop
pop
punpcklbw
mov
and
push
xchg
fildl
push
lods
cmpsl
and
movsl
push
xchg
sub
cmpsb
and
cmp
inc
pop
xchg
add
mov
pop
mov
mov
mov
ss
test
and
in
xchg
mov
fiadds
dec
fcoml
push
ffree
adc
push
adc
test
clc
mov
xchg
imul
dec
cmpsl
sub
xlat
scas
aad
nop
js
fwait
adc
mov
xchg
cli
outsb
xchg
lahf
inc
divb
test
mov
inc
stos
mov
sbb
pop
cmc
divb
imul
int3
sub
out
xor
or
sbb
call
push
stc
lret
add
in
arpl
xchg
sti
xlat
fists
ret
xlat
fs
test
fs
jge
lret
gs
xchg
nop
or
jl
pop
mov
xchg
inc
aaa
negb
cmpsl
jne
ficompl
mov
jp
add
mov
push
mov
outsb
mov
mov
cmp
pop
xchg
cwtl
and
dec
mov
je
jle
push
movb
movsl
rolb
sti
lret
dec
cld
sbb
adc
xchg
push
ror
mov
test
mov
ret
push
shrb
pop
imull
mov
mov
std
add
popf
jno
jle
and
sbb
arpl
mov
xchg
pop
sbb
arpl
je
push
jp
sbb
mulb
dec
sbb
sub
das
lds
aaa
sahf
enter
imul
xor
les
cmp
or
inc
shll
adc
inc
test
mov
push
pop
cmp
shr
xchg
stos
jnp
dec
test
gs
int3
xchg
cmp
idivb
in
xor
pop
cmp
sbb
call
cmpb
sub
in
jp
jne
mov
or
in
imul
cmp
jne
jecxz
pop
mov
loop
xchg
jl
insl
imull
popl
std
sbb
or
and
int
adc
sub
xor
jno
lea
sub
outsl
lea
push
pop
mov
push
jne
icebp
pop
rol
push
imul
rcr
negb
js
inc
out
push
and
shl
mov
rcrl
mov
mov
inc
push
cmp
stos
push
jl
lds
addr16
fstpt
pop
mov
mov
mov
bound
mov
jo
mov
divl
adc
push
scas
cmpl
dec
push
xchg
xchg
lahf
mov
xchg
lret
dec
pop
jo
inc
sti
sahf
std
cmp
xlat
cs
pop
sub
scas
lds
sahf
mov
push
sbb
lcall
popf
sbb
sub
xor
pop
mov
cwtl
sub
divb
mov
inc
mov
sub
mov
mov
cmp
es
loopne
push
dec
js
mov
mov
push
shrb
and
shr
mov
mov
xchg
pop
push
aas
push
clc
repz
xchg
push
push
xor
jb
sti
sbb
mov
xchg
mov
sub
push
les
jle
out
dec
dec
imul
xchg
subl
mov
push
pop
idivb
bound
fwait
rcr
inc
xor
in
movsl
nop
cmp
sbb
int3
push
jb
dec
data16
stos
cmpsl
jo
loope
push
xchg
jp
stc
mov
rolb
cmp
gs
faddp
jp
repnz
pop
popf
icebp
xchg
add
mov
ss
shr
punpckhbw
jge
call
aas
out
fstps
push
adc
push
mov
push
xchg
mov
loop
lahf
pusha
sbb
test
pop
mull
inc
inc
lahf
int3
cmp
pop
lea
jecxz
pop
xor
iret
data16
jle
and
aad
sbb
mov
mov
dec
test
into
sbb
hlt
pop
out
pop
xor
cmp
stc
push
shr
imul
xchg
jae
aad
dec
xor
sbbl
or
dec
into
lret
add
data16
aas
jmp
adc
js
aaa
ss
jp
lock
sti
movsb
inc
sub
test
sahf
cmc
mov
ss
fwait
movsb
lds
lahf
mov
outsl
aam
dec
push
sub
int
mov
in
sti
xchg
jecxz
inc
ljmp
hlt
cs
dec
xchg
adc
xchg
push
cmp
pop
int
cltd
pusha
fstpl
and
sbb
sbb
push
jle
xchg
xor
sbb
inc
scas
jp
sbb
sbb
bnd
xchg
out
rorl
out
adc
leave
jp
lock
icebp
or
jp
sub
mov
fnsave
cltd
and
add
sti
pop
push
adc
scas
jecxz
lea
push
push
adc
mov
jnp
jne
push
lods
icebp
mov
xor
ss
aad
dec
xor
aaa
in
nop
faddl
jg
ds
imul
in
loope
rorb
stos
mov
mov
in
jns
xchg
testl
xchg
fs
pop
pop
sub
cmp
mov
mov
sub
int3
and
dec
pushf
pop
insl
pop
in
adc
ret
or
adc
mov
pop
mov
dec
arpl
pop
sbb
mov
lods
popf
mov
aaa
mov
adc
testl
inc
xchg
sti
jp
pushf
xor
lock
xchg
repnz
or
and
pop
testl
lahf
cmpsb
sub
fsubrs
ret
outsl
mov
leave
fdivr
aaa
and
cwtl
sub
xlat
mov
popf
add
shl
sbb
inc
mov
into
data16
pop
inc
or
in
adc
aam
dec
mov
push
das
jne
pop
pop
mov
inc
int
lcall
xor
cmp
cmp
stc
nop
mov
bound
xchg
adc
push
lods
int
clc
sbb
dec
mov
es
ja
adcl
leave
jno
push
bndstx
xchg
or
ja
jbe
ret
cmp
mov
mov
xlat
cmp
cwtl
out
xor
mov
push
les
xchg
ficompl
in
out
jno
xor
inc
jae
push
cmc
push
std
outsb
xor
jmp
mov
fstp
sahf
dec
mov
xor
enter
mov
lret
cmp
cli
push
mov
leave
lods
mov
jge
push
add
std
test
jge
lcall
fcomip
mov
rorb
lods
scas
aad
fst
popf
add
adc
imul
sub
cmp
ret
mov
lcall
sbb
fsub
mov
fdivrl
jg
jns
xor
sbb
mov
adc
xor
mov
xor
out
outsb
cli
mov
pop
sbb
ljmp
rolb
xor
mov
cmc
ret
loop
fnstcw
mov
pop
xchg
sahf
mov
aad
lock
inc
std
icebp
insl
jge
jle
aad
or
pop
or
nop
push
jge
mulb
outsl
cmp
inc
lret
cmp
xchg
ret
mov
push
cmpsl
das
mov
pop
aaa
pop
std
mov
cld
mov
and
inc
inc
rorb
in
in
out
dec
mov
aas
clc
or
jle
inc
cmpsb
add
ret
push
repnz
clc
lods
leave
pop
jne
and
movsl
mov
and
inc
andl
js
repnz
shl
mov
pop
outsl
fcomip
xchg
dec
shrl
mov
dec
sub
out
out
in
lret
out
push
out
push
xlat
addr16
int3
out
out
clc
ficompl
mov
cmp
pop
fmul
lahf
sub
daa
xlat
push
pop
mov
jno
sbb
std
dec
push
loop
xchg
adc
ds
shrb
imul
mov
insl
frstor
popf
mov
cmc
outsl
rcrl
scas
inc
dec
aad
xchg
mov
dec
fsubrl
xor
insb
out
ds
pop
mov
xchg
cmpsb
pop
test
mov
dec
cs
inc
stos
mov
and
pop
mov
pcmpgtw
js
out
stc
cli
lcall
roll
and
test
fcompl
fst
fnstcw
sbb
pop
adc
xchg
add
add
imul
fldt
jge
pop
pop
sub
insl
pop
imul
repnz
jecxz
cli
xor
and
and
pop
jbe
ljmp
push
jae
and
jo
xchg
push
ljmp
inc
aaa
push
jecxz
aam
ja
sub
stos
incl
lret
stos
js
insl
sbb
adc
int3
xchg
scas
js
out
pop
scas
nop
stos
jns
and
xchg
and
lods
lahf
sub
xchg
daa
mov
push
push
adc
mov
pop
jge
jne
pop
aam
addr16
sahf
cs
and
test
dec
jo
bound
hlt
loopne
imul
mov
mov
dec
or
imul
jecxz
mov
pop
pushl
pusha
dec
xchg
nop
push
stos
inc
mov
sahf
mov
jbe
push
negb
enter
addr16
jle
inc
negl
insb
push
mov
jne
stos
fldpi
mov
pop
inc
xor
jae
adc
ljmp
ds
or
cmp
xchg
and
fbld
xchg
shrb
leave
stos
jle
mov
inc
cmp
and
inc
daa
and
mov
repnz
cmp
adc
mov
imul
push
ret
sbb
dec
aad
fistps
mov
pop
int3
sbb
pop
and
dec
iret
push
or
fnstcw
cmp
lds
clc
ficoml
rcl
xchg
push
sub
mov
pusha
icebp
cwtl
jge
int3
out
cltd
mov
lahf
push
jb
pushf
add
and
xchg
cld
cli
aam
jmp
xchg
aaa
scas
mov
xchg
imul
jnp
lods
setp
jb
cld
rcr
leave
inc
xor
mov
pushf
xor
pushf
xor
jo
int3
pop
in
sub
shll
lahf
imul
push
mull
int3
pop
outsl
out
cmp
mov
push
add
iret
fnstsw
ffree
iret
mov
push
mov
sub
xchg
cmp
pop
adc
jl
lcall
into
dec
movsb
fwait
add
sarb
xchg
scas
repnz
dec
add
int
or
inc
pop
mov
out
ss
sbb
mov
outsb
and
or
cmpsl
lret
xlat
mov
hlt
inc
cmp
into
and
loope
push
stos
jne
mov
pop
inc
outsb
lods
push
ja
arpl
out
sbb
cmp
sub
add
daa
testb
and
xor
dec
inc
insb
into
xlat
jns
pop
adc
in
ljmp
sbb
mov
aad
jp
int3
dec
in
adc
stos
mov
pop
ljmp
icebp
cmp
call
inc
ljmp
out
and
fisttps
xchg
or
addl
jl
dec
dec
xchg
pop
lds
dec
dec
xor
stos
clc
push
scas
and
pop
es
or
inc
or
xchg
mov
push
push
mul
outsl
mov
sub
enter
pop
or
push
mov
inc
ret
roll
popf
sub
fnstsw
addb
push
lgs
fwait
addr16
inc
dec
inc
push
ret
pop
push
jecxz
xchg
mov
ds
pop
in
incl
sar
dec
repnz
ds
cmpsl
pop
out
xor
xor
or
mov
daa
mov
sub
sub
dec
lea
inc
ljmp
sub
sub
and
leave
jmp
push
js
loope
lahf
arpl
jns
dec
pop
ss
jp
mov
test
xchg
ds
xchg
sti
hlt
and
or
sti
lock
insb
sub
xor
lcall
or
and
xchg
loope
sub
push
repz
pop
cmp
ss
mov
es
addr16
jmp
fistpl
adc
jbe
je
or
cwtl
imull
fs
rcl
push
dec
xlat
outsb
and
xchg
ds
out
setle
xchg
mov
ja
scas
in
fdivrl
push
in
jb
jns
in
xchg
jnp
jne
outsb
addr16
mov
fstpl
push
or
xchg
ja
insb
jmp
fs
fiaddl
in
mov
and
aaa
jmp
sub
mov
mov
xor
mov
xchg
cmp
pushf
das
clc
xor
adc
jle
repnz
pop
jge
stc
ret
and
repz
xor
adc
inc
loope
mov
xor
inc
movhps
bound
lea
test
xlat
cld
stos
cmp
jb
mov
adc
scas
sahf
shl
test
push
or
dec
mov
gs
push
mov
cmp
mov
xor
mov
lret
push
jbe
dec
jmp
je
cli
xor
pusha
orl
enter
mov
repnz
sbb
push
inc
cmp
ja
rcrl
fidivrs
aaa
shlb
adc
pusha
cmp
das
out
lock
sub
pusha
mov
and
dec
fsubrl
fwait
in
scas
mov
fidivrl
lret
dec
xor
sti
xchg
mov
inc
enter
push
popf
pushf
jl
adc
in
ljmp
inc
xor
xchg
enter
xor
push
or
inc
bound
mov
cmp
shlb
pop
and
mov
lahf
rcrl
xchg
daa
stos
jo
jbe
loope
cmc
sbb
stc
cmp
cs
mov
and
es
insb
mov
cmp
bound
cwtl
jns
cwtl
les
and
nop
and
inc
push
push
dec
cwtl
in
sbb
lock
and
mov
ds
lea
xchg
xchg
xchg
mov
or
dec
xchg
jl
mov
daa
pop
rcl
icebp
push
jp
movsl
sub
cld
jb
daa
sti
xchg
ret
repz
jmp
adc
dec
or
mov
cmpsl
lock
in
push
scas
or
fmull
pop
shlb
pop
sbb
mov
pop
dec
mov
in
add
or
jl
sbb
test
pop
pusha
sub
xchg
cmpsl
xchg
cmp
add
lret
popa
pop
mov
ss
jmp
mov
cmp
and
pop
loopne
ljmpw
lahf
mov
dec
xchg
test
cmp
rol
repnz
add
cltd
sbb
fnstenv
daa
xor
shrl
mov
sub
and
pop
dec
sbb
xlat
je
mov
pop
fwait
mov
adc
loopne
or
cmc
addr16
stc
lret
clc
sahf
int
outsl
jns
add
into
xor
mov
inc
int3
cwtl
inc
stos
ret
popf
xor
das
loopne
les
add
lcall
add
mov
push
popf
addr16
mov
daa
shrb
into
pop
pop
mov
jge
mov
push
dec
shlb
aas
mov
gs
push
xchg
and
imul
fdiv
inc
dec
jge
add
add
lds
pusha
lods
loopne
pop
xchg
mov
xlat
cs
jb
iret
inc
fwait
jge
into
adc
icebp
jge
fldt
aas
cmp
lret
test
ret
test
mov
jecxz
and
or
push
jl
mov
notb
out
inc
sbb
test
pushf
push
std
add
adc
bound
into
mov
dec
xlat
test
ljmp
or
xor
dec
ja
dec
mov
jecxz
lret
lods
fcompl
ret
insl
cld
xchg
add
xor
cmp
int
outsb
cmpsb
pop
pop
mov
dec
pushf
das
ret
daa
lret
mov
aad
pop
pop
adc
icebp
arpl
push
mov
sub
cmp
jp
xor
pop
mov
sbb
ret
orb
subb
or
rorb
xchg
scas
jge
aaa
test
paddusb
adc
push
arpl
sbb
ret
aam
or
fadd
loope
fs
inc
sub
fs
stos
out
sbb
pop
fucomi
loopne
dec
lea
sarb
xchg
jg
scas
add
mov
popf
lcall
in
fsubrs
inc
nop
imul
sbbb
push
or
ss
std
std
loope
jg
insl
lods
xor
sbb
fcmovnb
sbb
gs
in
mov
fcomps
xchg
adc
int3
jno
dec
ss
pushf
mov
adc
xchg
rorb
mov
cli
std
aas
xor
xchg
fnsave
adc
cmp
adc
notl
cmc
xchg
addr16
mov
sub
jle
jbe
stos
adc
cs
leave
in
insl
sub
movsl
scas
lea
and
sub
sub
add
push
inc
or
inc
jmp
inc
loop
sub
jg
cmp
sbb
mov
mov
jecxz
jmp
or
fstpt
inc
push
bound
pop
sub
fildll
out
mov
cli
cs
out
xor
sub
cmp
test
js
cwtl
inc
cmp
pop
sarb
out
push
rcr
add
jae
out
jl
popa
fldl2t
out
test
push
aaa
movsb
sahf
mov
movsb
inc
leave
or
or
lock
vmread
cmp
out
pop
cmp
push
or
mov
cmp
bound
test
enter
dec
call
scas
mov
pop
inc
push
pop
xor
pop
testb
pushf
mov
mov
add
aad
jns
adc
cs
xchg
movsl
lcall
and
cmpsb
dec
mov
mov
push
ja
jb
outsb
inc
add
divl
adc
push
cmc
cmp
dec
xchg
pop
inc
outsb
das
mov
scas
mov
sbb
icebp
dec
hlt
push
ffree
push
imul
rorl
lods
jl
jge
nop
push
or
add
sarl
in
pop
insl
adcl
jecxz
push
add
push
or
ficoml
lcall
xor
add
es
jmp
hlt
fcmovbe
pop
dec
push
je
lods
ds
out
hlt
jns
rorb
xchg
leave
cmp
adc
subb
mov
mov
push
mov
cli
inc
cmc
and
negb
call
and
cmc
fwait
xchg
fsts
xchg
test
cmc
jae
negb
lds
in
dec
ret
pop
test
cmp
iret
lcall
or
lea
adc
sub
sub
ds
pop
mov
adc
fsubrl
out
stos
mov
movsb
and
pusha
adc
shr
lea
add
shlb
pop
mov
push
push
push
add
jle
movsl
sub
call
jp
test
leave
jge
imul
lods
outsb
std
xchg
int
sbb
scas
inc
test
xchg
pusha
jle
mov
rolb
xor
negb
testb
dec
xchg
mov
pop
adc
or
testl
mov
movsl
adc
cmpsb
aad
loop
fildll
aas
shll
fcmovnbe
or
sub
aad
or
in
inc
and
mov
pushf
popa
xchg
mov
inc
sub
cwtl
mov
dec
test
ret
test
cwtl
mov
mov
and
std
aas
add
or
mov
xor
xor
rcrb
aad
and
xchg
jg
xor
mov
mov
cld
add
lods
rcll
aas
popf
sahf
fmull
in
xor
imul
repz
xchg
adc
aad
pop
pop
pop
xor
fstp
pop
sbb
jb
sbb
mov
insl
jle
lcall
xor
out
popf
mov
cli
mov
and
and
aad
add
pushf
ret
outsl
loopne
lret
adc
outsb
je
pop
mov
inc
loopne
xchg
jg
inc
adc
test
nop
fsubs
pushf
push
fidivl
mov
adc
or
push
repnz
leave
stos
fmuls
lds
es
cld
stc
adc
ret
ficoml
add
dec
ret
fwait
sbb
sbb
fmull
pop
in
rcr
sarl
or
mov
ss
xchg
sarl
int
pop
nop
adc
dec
or
xchg
leave
mov
out
leave
dec
incl
ror
add
mov
shlb
imul
mov
pop
push
push
dec
mov
adc
lret
loopne
lret
mov
inc
push
mov
lock
addr16
aas
cmpsb
pop
rorl
adc
pop
mov
jmp
je
xchg
out
mov
sbb
scas
shll
pop
sti
push
or
cmp
jl
mov
lock
xchg
sub
xor
adc
out
pop
repz
addr16
lcall
add
sub
mov
push
jne
int
int
jge
lret
test
add
inc
cmp
lret
repz
lahf
mov
sti
mov
pop
dec
cmp
out
cwtl
jp
jecxz
int3
jl
sbb
mov
sbb
jmp
jne
out
xor
in
in
in
mov
add
shrl
fiaddl
inc
lea
movsb
loop
stos
push
arpl
jecxz
mov
mov
mov
inc
jnp
lods
test
ja
jl
mov
dec
aad
or
or
pop
push
or
lea
lret
aas
push
jae
sahf
bound
movsl
sbb
stos
mov
inc
jecxz
sbb
sub
mov
push
enter
jle
mov
mov
xchg
xchg
mov
mov
adc
cmp
outsl
dec
mov
pop
out
mov
adc
stos
mov
mov
pop
pushf
jbe
inc
dec
push
loop
out
pop
fsts
xor
and
shlb
popf
xchg
push
out
aad
call
and
loopne
jb
lods
push
jg
xchg
test
fisttpll
add
xchg
or
scas
fiaddl
stc
add
int
mov
cmp
mov
je
adc
movsb
xor
push
fwait
mov
icebp
mov
dec
jp
daa
loopne
lea
push
negb
lds
loopne
ret
cli
push
sahf
js
push
les
push
push
xchg
test
mov
mov
and
inc
jle
cmpsb
jmp
lcall
sahf
addr16
xchg
scas
into
adc
call
call
pusha
test
inc
loop
push
lret
mov
mov
pop
push
xlat
lcall
jae
push
or
xor
push
mov
xchg
push
sbb
jge
and
xor
dec
hlt
xchg
int3
aas
inc
cmp
mov
xor
insb
mov
mov
test
xchg
xchg
sub
mov
mov
mov
jne
inc
xchg
mov
aad
insb
in
fsubl
lret
clc
inc
mov
xor
arpl
in
mov
out
mov
push
xchg
inc
and
movsl
pusha
mov
jge
mov
das
cmp
mov
dec
push
insl
rcll
fisubrs
xchg
in
jb
push
enter
mov
pop
xchg
cmc
aaa
int3
mov
arpl
and
hlt
jp
addr16
jb
cmp
xor
into
cmpsl
into
rcll
push
add
mulb
adc
push
testb
lock
fsubrl
mov
and
mov
jecxz
lods
jns
push
gs
xchg
cmp
push
and
addr16
xchg
scas
insl
xorb
ucomiss
repz
test
icebp
jnp
inc
js
bound
dec
add
leave
xor
jae
movsl
push
sub
mov
xchg
negb
dec
xchg
insb
or
push
outsl
sub
xor
aaa
test
xchg
mov
outsl
cmp
cli
sub
out
push
pop
loopne
lea
pop
inc
das
inc
mov
adc
outsb
repz
addb
cmpsb
test
sbb
or
dec
scas
pop
mov
lcall
ja
xor
add
es
cmc
cmpsb
mov
pop
incb
jbe
push
sbb
into
fs
sti
or
dec
mov
fnsave
stc
jmp
adc
aaa
into
movsb
mov
mov
jl
mov
mov
mov
aad
add
push
arpl
iret
bound
jns
mov
cmp
lods
mov
push
jp
jecxz
pop
jbe
dec
mov
je
into
cmp
stc
fdivrl
ss
mov
mov
roll
xor
out
les
inc
add
and
push
clc
adc
push
hlt
pop
outsl
into
ret
test
adc
pop
loop
fwait
push
push
lods
add
adc
test
mov
xor
jl
xchg
pop
adc
inc
test
mov
push
scas
xor
std
push
inc
pop
mov
int
sahf
loopne
push
notl
sbb
repnz
sbb
sbb
push
addl
add
mov
ljmp
in
sub
cmc
add
jne
inc
push
push
and
cmp
pop
cmp
insb
loope
and
push
push
imul
sbb
mov
movsb
mov
pop
repnz
mov
adc
adc
int
adc
xchg
popf
pusha
cmp
fistpll
jp
test
cmp
mov
pop
cli
sahf
addr16
add
test
je
cmpsb
mov
dec
faddl
jecxz
fnstcw
int3
jecxz
out
jb
jb
mov
xchg
jecxz
popf
imul
fmull
test
jo
inc
imulb
jb
cmpsl
std
nop
cltd
and
rcr
shl
cmp
push
insb
scas
mov
in
xchg
jge
lods
or
sub
imul
stos
das
mov
das
test
movsb
scas
jb
stos
mov
ja
fdivp
outsb
cs
adc
and
fistps
call
call
jb
lcall
jp
add
jae
push
xchg
fists
stos
mov
arpl
gs
incb
mov
pop
in
lods
lods
push
xchg
sbb
lea
clc
lods
jns
clc
push
clc
adc
mov
or
cmp
stos
scas
push
xchg
adc
inc
cmp
roll
sub
push
sbb
mov
pusha
jl
cmpsb
popf
imul
je
insb
test
movsl
stos
adc
repz
cs
pop
sub
inc
adc
pop
ljmp
ja
mov
gs
data16
cmc
dec
jecxz
xchg
mov
and
push
xchg
faddl
loop
addb
xchg
pop
lods
cmp
inc
mov
sti
jg
mov
ja
daa
dec
xchg
idivl
sub
sub
in
cmp
movsb
jb
xchg
stc
xor
jmp
popa
mov
aam
xchg
inc
push
and
xchg
add
test
jns
scas
das
inc
lds
in
mov
lods
push
fbld
cmp
ret
js
dec
pop
int3
lds
pop
dec
iret
or
and
lods
in
xor
dec
dec
repz
es
sub
adc
jecxz
gs
dec
mov
sub
inc
dec
mov
ret
cmpl
rolb
pop
mov
sahf
hlt
mov
dec
or
iret
or
pop
jmp
shrb
ljmp
ja
dec
xchg
movsl
dec
lea
xor
outsb
xchg
outsl
test
mov
sbb
mov
add
fidivs
xchg
push
jae
xchg
sbb
cmc
imul
sahf
aad
nop
xchg
popf
or
out
call
rol
cmp
push
cmp
sub
xchg
js
pusha
fs
mov
aad
and
and
out
push
mov
or
dec
jns
push
loopne
ss
and
xor
imul
subb
add
scas
fdivrl
sub
fdivrs
jnp
loop
cwtl
and
rcrl
lret
mov
adc
mov
xor
lahf
lret
lock
jbe
add
sar
aaa
fwait
or
xchg
add
inc
adc
int
rclb
push
and
mov
dec
lods
popf
sub
mov
aam
decl
fstpt
cmp
mov
test
outsl
xchg
stos
dec
push
es
mov
adc
inc
jb
pop
mov
xchg
mov
mov
mov
lods
pushf
cli
adc
adc
call
in
mov
sti
fistpll
mov
fdivs
xchg
jnp
subl
push
sub
sub
std
inc
out
pop
sbb
dec
pop
scas
lcall
ds
sahf
scas
mov
addr16
and
jbe
hlt
push
std
push
push
call
bound
mov
adc
enter
push
pop
fcoml
lods
loopne
imul
mov
dec
cld
mov
xor
add
int3
aad
rol
mov
lahf
mov
add
push
outsb
je
push
push
loopne
pop
emms
rcll
jne
pop
pop
jb
jmp
bound
cmp
sub
and
mov
imul
pop
mov
imul
in
test
xchg
inc
mov
and
js
or
xchg
test
mov
sub
cs
sub
push
roll
or
adc
inc
stc
mov
movsb
shll
aaa
push
push
shrl
mov
add
add
inc
push
mov
inc
call
jo
test
adc
stc
cmp
xor
cmp
jge
clc
adc
jo
xor
sub
gs
pop
popf
xor
pop
outsl
or
dec
mov
sbb
push
rcl
xor
cbtw
out
inc
jbe
pop
pushf
xchg
rorb
test
and
sti
lock
inc
sbb
cltd
or
pop
dec
jg
mov
cs
shrb
push
std
ret
stos
sbb
pusha
aad
stos
pop
dec
cwtl
mov
jge
mov
mov
movsl
mov
jbe
push
lods
cmp
mov
aas
lret
rorl
and
sbb
pop
shll
repz
leave
jo
stos
jecxz
push
xor
and
push
push
dec
pop
iret
adc
pop
insl
std
es
sti
test
mov
cmp
ja
xchg
dec
lods
jmp
jae
cmp
jb
mov
xchg
xchg
cmp
jecxz
lods
push
dec
test
pop
outsl
loopne
enter
jnp
or
add
lret
push
inc
pop
sub
jl
inc
fcoms
mov
mulb
mov
loopne
inc
push
pop
mov
out
sub
push
mov
add
cmpsl
outsl
sub
inc
xchg
mov
dec
aas
out
repnz
cmp
jne
cs
or
and
cli
push
cmp
pusha
shr
mov
sub
jae
int3
insl
rcrb
cld
mov
jns
repnz
addr16
scas
jns
and
lea
xchg
negb
mov
aad
adc
sti
add
subl
sti
sub
mov
enter
inc
push
mov
ret
hlt
cwtl
cwtl
std
inc
xor
icebp
pop
sarb
lahf
adc
fsts
test
scas
xchg
xchg
adc
in
adc
scas
mov
ret
push
sbb
sub
testl
stos
cmp
mov
pop
imul
fwait
ror
cmp
xchg
or
xchg
dec
cmpsl
stc
push
clc
cmp
leave
loopne
mov
sub
out
fwait
xchg
jl
xchg
mov
fstps
adc
jp
or
imul
sub
repz
stos
jecxz
adc
ds
out
jg
cmpsl
repnz
ret
sbb
ljmp
xchg
xchg
movsl
sbb
jnp
sub
inc
sbb
shlb
fnstsw
pop
sahf
sbbb
inc
repz
xor
mov
jb
xchg
data16
and
aad
jmp
icebp
loopne
add
aad
dec
push
aaa
ja
mov
in
inc
icebp
fs
sbb
shll
in
mov
xor
inc
jo
push
imul
push
cmpsb
jne
dec
lahf
fidivs
jbe
mulb
mov
xor
and
shlb
adc
pop
push
insl
cmp
shrl
pusha
shl
out
fists
fwait
push
ss
int
inc
rcrb
cli
pop
mov
sub
lret
sbb
xchg
xor
dec
adc
cmp
push
and
jb
dec
adc
mov
push
aad
xor
sub
ret
mov
dec
xor
stos
jns
add
test
out
dec
xor
repz
add
filds
sub
loop
fdivr
arpl
and
notl
mov
push
xchg
movsb
mov
shll
sub
mov
cmc
add
scas
jno
fstp
loop
xor
fwait
sub
add
mov
and
movsb
xor
insl
ds
mov
int
sub
popa
add
pop
or
jo
movl
xchg
and
jmp
mov
leave
fldcw
jns
mov
inc
inc
and
add
cmpsb
mov
xor
into
pop
adc
iret
notb
popf
sub
jne
repz
xchg
test
xchg
fcmovnbe
push
cmp
push
dec
aam
mov
mov
mov
jae
outsb
mov
pop
repnz
mov
iret
daa
and
out
lahf
cmp
gs
outsl
pop
lret
xchg
push
fcmovnb
aad
pop
fcomps
and
fimull
mov
or
mov
mov
sbb
std
mov
popf
mov
jg
cwtl
movsb
loop
mov
xchg
addr16
mov
xchg
push
jnp
lret
das
lea
dec
sub
jmp
adc
dec
add
jle
scas
mov
adc
rcll
nop
or
xor
mov
or
lock
xchg
insb
cmc
arpl
iret
sbb
add
xor
mov
sar
lea
or
ficomps
xchg
push
scas
push
mov
int
in
das
ja
les
movsl
enter
aad
fwait
arpl
pop
scas
out
jmp
mov
aaa
and
push
and
scas
sahf
movsb
mov
shrd
clc
mov
sbb
sub
push
aad
lock
push
mov
and
outsl
xchg
scas
aad
ret
xchg
inc
dec
sub
push
subl
dec
fistl
aad
sbb
mov
aam
js
cmp
out
jbe
loop
mov
js
inc
stos
or
jge
or
sti
fisubl
sahf
mov
jge
sub
jne
pop
pop
mov
mov
lods
hlt
ss
xchg
mov
lahf
push
jns
jge
inc
sub
icebp
pop
mov
hlt
push
pop
cmp
or
pop
aas
neg
testl
pop
push
imul
cld
cmpsl
cmp
pop
das
imull
ret
aam
cwtl
dec
pop
in
mov
orl
lret
pop
repnz
mov
mov
fisubl
sbbl
inc
ffree
int3
pop
aam
cmpsb
push
cltd
mov
xchg
mov
pop
ret
sub
rcrl
rolb
nop
xchg
xchg
pop
cmc
scas
lods
out
scas
stc
push
es
inc
and
push
add
aad
cli
or
cmp
push
xor
sbb
ficoms
int3
inc
push
hlt
enter
mov
in
sub
and
repz
xchg
sub
xor
sbb
inc
scas
popf
addr16
mov
and
xor
inc
int
jl
pop
push
push
cwtl
ret
les
cmpsl
clc
aas
jmp
adc
iret
into
imull
mov
push
pop
out
in
sbb
jnp
int
iret
lret
mov
push
pop
insl
sarb
mov
mov
pop
mov
rorl
insl
mov
pop
lock
pop
adc
push
jl
lds
inc
rorb
imul
pop
negl
push
push
das
ss
repnz
das
in
sub
int3
out
aas
dec
iret
sarb
fcmovb
adc
pop
stos
push
or
jo,pt
sbb
fwait
push
in
xchg
mov
inc
dec
pop
jmp
mov
call
in
mov
jge
rolb
lods
pusha
xchg
mov
in
sbb
and
cmpsb
xchg
cwtl
or
int3
leave
and
jge
lahf
call
inc
jle
aas
lock
mov
mov
and
jno
jl
xlat
mov
stos
das
add
pushf
rcrb
mov
jmp
push
or
dec
leave
cld
add
dec
loope
and
cs
ficompl
in
inc
sbb
icebp
mov
scas
inc
mov
mov
jns
sub
xlat
cmp
fldenv
out
jbe
scas
es
in
xlat
jbe
scas
dec
jge
sti
mov
out
add
push
mov
dec
jo
in
push
in
pop
popf
sarl
or
cmp
shlb
jbe
pop
mov
leave
test
jnp
iret
pushf
pop
or
rcl
xchg
push
sbb
inc
cmpsl
shll
insb
insl
cmpsl
sub
in
mov
lahf
pop
sbb
xlat
inc
das
mov
dec
push
popf
jae
repnz
mov
pop
insl
pop
popf
pop
cmp
pop
test
lock
inc
adc
xor
in
int
lcall
add
or
std
mov
int
out
loopne
jmp
fidivrl
lods
nop
xlat
mov
mov
sti
cmp
loope
dec
dec
xor
jecxz
jbe
cmp
cmp
xchg
movsl
dec
dec
sub
clc
enter
jl
sub
add
test
loop
gs
adc
icebp
jge
inc
and
call
sbb
dec
cmp
es
mov
imul
and
adc
fidivs
mov
insl
into
nop
ret
negl
arpl
pop
xchg
cmp
sbb
loope
popf
mov
mov
outsb
mov
movsl
scas
insl
and
pop
je
push
aaa
mov
sbb
add
divb
mov
jno
xor
iret
push
jns
dec
jl
lret
aaa
fsts
lods
push
cmp
jl
jno
mov
testl
stos
push
mov
sbb
ja
bound
sub
fs
pop
mov
or
cmp
adc
add
jg
push
jmp
add
mov
jl
xchg
pop
int
loopne
sbb
mov
mov
icebp
mov
mov
subb
sbb
mov
xchg
and
insl
ja
jmp
mov
insl
loop
jne
inc
jmp
pop
enter
ret
popf
out
jo
insl
ja
xor
icebp
daa
icebp
mov
sbb
lods
mov
sbb
imul
shr
add
es
dec
aad
shll
int3
cld
inc
sbb
mov
mov
pop
fdivl
pop
dec
stos
rcrl
cli
ljmp
xchg
hlt
push
ja
out
or
ljmp
dec
adc
push
add
minps
inc
arpl
xchg
out
jb
xor
sub
jmp
jns
insb
jp
out
je
test
or
fwait
std
fcmove
cmpsb
cmp
push
sub
fwait
jbe
movsb
pushf
insb
out
mov
xchg
mov
stos
cli
inc
cmp
fsubl
fstps
cmp
fs
xchg
int
mov
mov
sub
or
sti
lea
out
jecxz
repz
adcb
popf
insb
xchg
pop
cmp
xlat
loop
cmp
mov
mov
sub
sbb
or
decb
push
mov
cmp
push
xor
insl
dec
xlat
fidivs
xor
pop
mov
shl
xchg
mov
push
mov
adc
xchg
cmc
cmp
adc
gs
cmp
stos
js
lods
mov
int
push
xchg
test
stos
jbe
xor
mov
insb
stos
popa
das
fwait
scas
stos
or
push
iret
pop
rcr
add
push
scas
sub
inc
xchg
int3
js
inc
repnz
cmp
test
into
and
sub
arpl
push
jno
mov
insl
jp
push
addr16
scas
int
mov
int
jl
stos
jp
push
js
jp
mov
sbb
icebp
sbb
mov
push
inc
push
push
cmp
mov
outsb
mov
pushf
insl
xor
mov
cmpsb
jp
sbb
sub
fs
gs
mov
push
icebp
shlb
loop
insl
add
and
fnstenv
insl
jge
mov
pop
cmp
mov
mov
fstpt
xchg
mov
mov
filds
mov
cmp
xchg
sbb
repnz
cwtl
mov
fdivl
mov
lods
jne
clc
add
xor
ret
cmp
test
mov
repz
int
sub
sbb
add
dec
je
bound
push
fildll
jmp
push
adc
adc
dec
mov
mov
dec
inc
les
mov
cmp
xor
pop
mov
mov
aaa
dec
stos
stos
add
lods
insl
mov
cmpsb
jl
jo
lcall
push
bound
pop
imul
dec
nop
int3
popa
mov
lcall
pop
pop
lcall
inc
mov
mov
pop
jns
cwtl
mov
loop
xlat
jmp
mov
pop
jmp
pop
add
in
shll
imul
pop
mov
pop
call
dec
jo
lock
add
fstpt
push
aaa
sbb
std
xchg
xchg
lds
pop
jmp
pop
jae
jp
daa
mov
push
dec
cmc
cmpb
lock
xchg
mov
mov
inc
aas
iret
cmc
fidivrs
mov
add
lea
int
inc
aam
pand
orl
ficoms
push
pop
insl
inc
adc
or
dec
mov
dec
scas
lret
arpl
fisttpl
stos
add
jge
aas
aam
jmp
push
lcall
adc
sub
jge
xor
lcall
movsb
les
sbb
mov
xchg
inc
les
xchg
shr
ret
lock
push
pop
insl
jp
stos
adc
xor
pusha
ds
jmp
add
outsb
cmp
dec
addr16
into
mov
mov
push
ret
pop
and
loop
sbbl
addb
lock
mov
or
test
nop
xchg
fistl
sahf
adcb
xor
mov
jne
cld
call
jp
out
shl
ljmp
nop
idiv
mov
stos
hlt
jmp
dec
mov
mov
and
shll
rol
cs
push
inc
jp
into
adc
mov
xor
and
test
loop
loop
dec
std
xor
or
inc
dec
jge
aaa
xchg
mov
jne
push
lcall
cmp
repz
pop
pop
sub
xchg
or
adc
mov
sub
int3
pop
mov
lea
aad
xchg
xlat
aam
mov
add
or
mov
into
loopne
imul
xchg
lcall
stc
adc
pop
mov
pop
std
add
loope
mov
es
cmpsl
cmp
loop,pn
test
out
inc
popa
fldenv
xor
cwtl
orb
jmp
adc
push
push
int3
loopne
ljmp
push
push
lahf
outsl
dec
fldl
mov
dec
dec
aam
std
mov
out
mov
js
sbb
insl
jg
jecxz
shl
jne
xchg
roll
pusha
std
sbb
or
jg
add
in
mov
fs
adc
bound
int3
movsb
mov
aaa
fstps
loope
xchg
in
mov
loope
fiaddl
adc
mov
mov
add
mov
aas
add
add
mov
add
sbb
outsl
mov
adc
xor
inc
push
jbe
pop
sbb
xchg
push
xlat
fcomip
scas
je
xchg
out
jp
loopne
std
ds
ja
ja
cmc
mov
fisubrl
mov
add
xorb
mov
and
insl
sub
jnp
lock
and
mov
sub
xchg
shlb
mov
push
xor
rcr
xchg
lods
cmp
stos
push
jge
xor
or
pop
subb
sbb
shrb
jg
add
or
jb
ret
lock
jae
int3
or
daa
cmp
jo
xchg
shr
nop
inc
into
or
push
xchg
imul
xchg
shlb
sahf
mov
sub
xor
dec
lcall
repz
enter
sti
popf
rcrb
xchg
dec
loopne
push
in
loope
cli
xchg
leave
into
or
sbb
or
fld
xorl
and
jo
sub
sbb
int3
cmp
insb
jns
push
xor
xchg
lahf
fsubrs
sbb
cld
mov
mov
sbb
ret
or
lock
add
lea
rorl
fbstp
sbb
scas
adc
cmp
dec
dec
loopne
mov
rclb
pop
aaa
sbb
out
inc
pop
push
mov
pop
in
add
xchg
movsl
ret
and
adc
sbb
test
ja
jb
jo
rclb
and
mov
dec
daa
jo
sub
outsl
cmp
inc
daa
jo
sub
jg
lock
add
lea
or
sub
lock
pop
in
clc
divl
ret
xlat
cmp
sbb
je
pop
inc
ljmp
outsb
ljmp
jmp
lcall
fs
js
adc
mov
xchg
out
jne
mov
loope
ja
lds
sub
cmp
adc
dec
js
fwait
mov
cmp
mov
adc
add
dec
sub
adc
fists
mov
mov
cmp
ret
adc
ret
jge
push
jne
ljmp
lods
scas
stc
push
pop
das
push
xchg
jmp
inc
jne
mov
jne
cmp
stos
mov
cmp
mov
mov
sub
fwait
pop
cmp
je
jns
jne
cli
xchg
push
pop
movsb
jle
scas
mov
jp
jp
pop
inc
stos
dec
pop
outsl
push
das
ljmp
push
aas
aad
fcmovnbe
jg
jmp
cmc
cmp
aam
mov
mov
pop
pop
or
stos
xor
cltd
stos
adc
fsts
lcall
or
jge
addl
outsl
gs
push
xor
aam
sbb
mov
push
jge
sbb
mov
dec
lahf
stos
adc
test
les
dec
add
adc
push
pop
je
mov
pop
shl
xchg
jl
mov
jne
lds
mov
add
push
or
lods
jle
inc
cmp
lcall
leave
cmpsl
stc
es
outsb
sbb
cmp
dec
dec
xchg
or
inc
mull
add
fsubs
xchg
push
aas
mov
pusha
int3
mov
add
outsl
mov
pop
and
enter
test
in
mov
jge
les
adc
and
cmc
push
add
push
xor
sub
outsl
sahf
popa
jnp
in
or
in
lret
sbb
fstps
push
ret
jb
xchg
aas
orl
mov
cmc
aam
xchg
xor
pop
test
pop
and
mov
das
adc
nop
test
xchg
bound
ss
fdivrs
cmp
jp
push
add
inc
dec
rorl
arpl
out
dec
cld
cmp
or
imul
arpl
rorl
lret
pop
xchg
ds
sub
jp
inc
dec
and
lahf
pop
outsl
mov
lret
or
in
cs
pusha
xor
sbb
test
mov
mov
cmp
lahf
mov
xlat
outsb
sbb
sub
and
imul
xor
lods
mov
cmpsl
jne
jo
jb
mov
rep
mov
lods
rcl
es
and
xor
sbb
sub
push
lds
or
jecxz
jno
aaa
push
jmp
scas
je
loope
inc
push
inc
gs
repz
setl
cmp
xchg
shr
push
xchg
ss
stos
dec
jg
stos
xor
xchg
fs
out
out
ret
dec
adc
mov
test
scas
icebp
ljmp
fisubl
jns
aas
cmp
jae
nop
cld
inc
movb
lcall
inc
fisubl
test
repnz
dec
xchg
mov
dec
pop
xor
lcall
xor
xor
adc
jp
ljmp
add
dec
cmpsb
mov
mov
mov
sbb
std
mov
push
lds
mov
inc
pop
xchg
mov
sbb
lods
sbb
sbb
outsl
lret
ljmp
dec
mov
mov
inc
test
mov
mov
mov
cmp
cmp
ret
inc
nop
adc
and
repnz
sar
xchg
mov
push
inc
test
cmp
mov
aas
jmp
call
test
rcll
dec
inc
pop
mov
and
mov
cwtl
mov
popa
lds
jbe
or
sub
lods
push
add
push
daa
cmpsl
dec
popf
test
xchg
aaa
movsb
ret
ret
inc
stos
push
popa
arpl
out
jb
mov
add
sbb
push
sbb
inc
add
mov
push
jl
in
cltd
idivb
mov
inc
bound
cli
add
test
pop
cmpsb
push
mov
jle
jo
scas
cmp
mov
or
inc
dec
lcall
jge
lods
mov
mov
jge
jne
cwtl
out
call
stos
outsb
adc
test
in
sahf
dec
cmp
cltd
dec
cli
ret
fdivs
dec
es
ret
mov
xchg
mov
gs
repnz
push
inc
cmp
inc
inc
cmp
or
sub
push
push
xor
mov
mov
mov
and
movd
divb
hlt
pop
pop
sbb
sub
outsl
stos
and
or
std
ljmp
mov
adc
pop
push
mov
add
mov
in
sub
xchg
sbb
loopne
cmpsb
add
clc
fisubrl
int
pop
or
xor
pop
test
sbb
sbb
aaa
mov
sbbl
pop
pop
adc
mov
iret
lock
xchg
cmp
adc
int
dec
jmp
int3
mov
fucompp
lds
add
mov
pop
scas
shl
lods
mov
jo
stc
ret
repnz
mov
xor
popa
jnp
ja
iret
imul
pop
or
sbb
rolb
sahf
lods
les
dec
pop
aad
jbe
jb
push
pop
out
jl
cmp
cmpsb
arpl
scas
jl
fsubl
push
adc
sub
inc
fcoml
xor
pop
jge
stos
pop
mov
les
les
loope
jecxz
cmc
sbb
mov
mov
push
cmp
xor
inc
ljmp
jne
jae
in
lea
fbstp
add
scas
aas
cmp
lock
sti
sbb
rcrb
or
mov
mov
fsubrl
jne
ds
aad
fists
xor
mov
mov
adcl
call
adc
or
enter
inc
fldz
scas
cmp
mov
lods
sti
jbe
ds
adc
mulb
adc
xchg
jmp
push
jle
sti
inc
push
push
cmp
out
stc
insb
pop
dec
cmp
shl
xchg
inc
pusha
lret
lret
arpl
dec
xor
arpl
in
aam
cmp
imul
cwtl
mov
shl
or
nop
dec
sbb
jnp
gs
repnz
sbb
and
add
out
cli
mov
pop
inc
stc
pop
es
mov
xchg
xor
insb
dec
int
pusha
pusha
mov
int
popf
repz
mov
inc
mov
sbb
sub
mov
mov
stos
mov
jno
imul
push
mov
add
gs
cmp
inc
lahf
out
adcl
std
mov
jbe
outsb
lret
hlt
cmpsb
mov
xor
lds
dec
sbb
pop
push
fwait
insl
arpl
cmp
jne
jl
movsl
add
pop
fs
frstor
xlat
fwait
jo
lea
stos
or
sti
jp
adc
sar
mov
sarb
cmpsl
push
mov
mov
sub
ljmp
lcall
test
mov
xor
sahf
adc
jns
leave
lret
loopne
loop
jmp
imul
sub
xor
pop
pop
scas
and
mov
dec
or
out
arpl
pop
mov
fprem
jo
int
mov
cmp
mul
lcall
bound
call
pmulhw
xchg
add
mov
xlat
ljmp
add
aas
sbb
in
jb
cmp
dec
jns
bound
ret
popa
aad
pop
push
xchg
mov
xchg
test
dec
mov
mov
pushf
repnz
jmp
mov
xor
bound
test
mov
mov
sbb
push
lock
jmp
lea
int3
fbstp
data16
out
insl
pusha
sar
xor
stos
xchg
arpl
mov
mov
loopne
push
in
in
fsub
or
push
lea
icebp
out
repz
lods
mov
push
int3
push
fs
add
mov
pop
pop
xor
std
xor
cmc
xor
iret
scas
lock
daa
cs
push
mov
scas
push
popf
dec
adc
and
out
pop
jae
nop
push
pop
fwait
repnz
ljmp
xchg
cmc
pop
xor
lock
push
and
test
push
adc
dec
mov
ret
fwait
cli
or
pop
aad
in
mov
xchg
cli
cwtl
shlb
jb
shrb
in
mov
push
stos
xlat
xor
sbb
adc
push
lret
dec
pop
xchg
and
jnp
push
fdivp
mov
fistl
mov
leave
cwtl
push
mov
iret
xor
cmp
jg
test
int3
insl
movsl
in
cmp
xchg
mov
fnstsw
fsts
lock
aad
shlb
leave
dec
imul
sub
sub
int3
mov
ret
add
in
lds
cltd
xchg
enter
imul
jb
mov
mov
mov
stc
xchg
and
popf
ljmp
imulb
mov
xchg
sub
loopne
mov
add
xchg
test
pop
xchg
imul
jp
dec
pop
inc
rclb
add
stos
mov
lcall
push
std
aad
push
dec
stos
insb
pop
ds
jne
sbb
dec
pop
mov
xor
cmc
xchg
out
cld
pop
pop
iret
daa
cmp
sar
nop
sbb
mov
stos
js
lret
es
mov
lods
mov
int
mov
cmp
pop
nop
stos
test
add
movsl
mov
ja
dec
and
jno
mov
xchg
or
mov
leave
xchg
jecxz
inc
push
push
mov
xchg
adcb
lea
dec
sub
pmulhuw
cmp
adc
in
add
sbb
mov
push
xor
xor
jb
repnz
dec
push
xlat
push
mov
push
out
mov
jmp
cs
daa
push
dec
fidivs
push
cmpsl
hlt
rol
iret
pop
cmp
shl
dec
mov
xchg
gs
push
repz
stos
mov
cmp
lds
stc
mov
call
jecxz
pop
push
ljmp
adc
xchg
xor
mov
jl
mov
arpl
fildll
leave
pop
xchg
push
cmp
pop
cmpsl
xchg
sbb
pop
push
stos
mov
lods
outsb
push
push
and
mov
or
fldcw
testb
dec
mov
js
adc
es
decl
lods
xlat
pop
pop
push
jp
xlat
xchg
jbe
jnp
cmp
jo
push
mov
cmc
mov
pop
or
push
fnstcw
mov
sub
and
decl
fcomps
mov
or
mov
xchg
push
lds
jne
or
xchg
sbb
out
adcl
call
imul
inc
mov
dec
cmp
icebp
in
cmp
dec
inc
ftst
and
adc
in
push
les
inc
inc
lret
pop
pop
mov
and
mov
fistpll
mov
in
inc
push
test
test
in
movsb
sbb
test
fxtract
aad
into
hlt
insb
insb
cmp
xor
clc
adc
fisttps
data16
xchg
cmpsl
push
test
loop
xchg
pop
or
pop
ljmp
inc
nop
jae
pusha
mov
and
and
sarb
fs
int3
lret
lahf
xlat
cmp
xchg
aad
subl
popa
movsb
mov
stc
adc
xchg
test
jmp
shr
adc
or
ficomps
clc
sub
movsl
aaa
fcoms
and
mov
inc
xor
mov
xchg
add
push
xchg
push
jp
mov
mov
dec
ret
in
lcall
lcall
mov
into
in
adc
out
jno
push
mov
push
in
pushf
lock
pushf
cmp
push
cmp
aaa
cmp
jb
inc
jl
jl
fdivrs
ret
out
imul
dec
aad
movsl
pop
xchg
xor
lret
inc
sub
inc
leave
cmpsl
lret
fcompl
adc
inc
xor
dec
daa
aad
adc
cmp
inc
int3
outsl
out
jecxz
inc
out
jp
cld
out
and
mov
push
jp
mov
mov
pop
in
pop
in
icebp
jns
push
push
sub
or
stos
push
add
mov
fmul
lds
sbb
js
cmpsb
lret
clc
pop
mov
lahf
sub
dec
lret
lcall
pop
insl
ror
adc
mov
xchg
mov
and
cmp
cmp
pusha
jns
xor
incl
and
stos
push
stos
data16
cmp
and
loop
ret
inc
dec
cmpsl
add
out
aaa
or
mov
jl
stos
jb
jne
cmpsb
or
push
xchg
pushf
iret
test
cmp
adc
flds
jno
xlat
outsb
mov
pop
rorb
gs
push
sub
fbld
test
jg
fs
jnp
in
cmp
mov
divb
mov
pop
xchg
mov
sarl
loopne
cmp
sarb
or
add
inc
addb
sub
inc
jg
movsl
mov
push
hlt
mov
sbb
cmp
jge
mov
and
xchg
data16
jg
jmp
int3
jnp
bound
or
mov
jp
push
jno
lock
push
mov
fiaddl
cs
in
stc
add
popa
shll
or
pop
push
sub
out
dec
fadd
push
push
js
js
mov
das
in
mov
outsl
mov
mov
call
mov
movsl
push
mov
ficompl
ljmp
mov
jno
out
sub
and
sahf
cmpsb
push
lret
jno
mov
pop
sub
jmp
shrl
mov
dec
xor
pushf
xor
out
hlt
movsb
shll
jecxz
mov
test
adc
xor
push
mov
in
aad
out
mov
mov
addr16
cmp
xor
loopne
addr16
xchg
push
push
push
push
xor
sbb
arpl
test
sbb
dec
jne
and
pushf
mov
sbb
popa
sub
add
xor
jno
mov
lea
sbb
aaa
sub
leave
adc
rcrb
movaps
mov
and
int
push
inc
adc
test
jecxz
jg
int3
rcll
jecxz
cmp
xchg
lods
fcoms
leave
outsb
sbb
mov
pop
dec
and
enter
xlat
xchg
jl
movsl
ljmp
adc
outsb
roll
cwtl
aas
fbld
orl
dec
out
icebp
les
in
rcll
jo
fbld
add
das
repz
in
aam
push
test
idiv
into
sbb
pop
jmp
loopne
jo,pt
xlat
xchg
ljmp
out
dec
jle
sbb
mov
imul
test
insb
insb
xchg
xchg
xor
or
xchg
addb
and
lods
aam
rclb
pop
xchg
add
inc
movsb
add
test
add
cmp
adc
push
mov
mov
fisttpll
dec
scas
and
movsl
jns
scas
adc
push
repz
jge
sbb
or
and
sub
out
js
jb
push
xor
bound
scas
rorl
mov
fs
stc
push
pop
jbe
jno
dec
sbb
dec
jmp
filds
cmp
mov
cmp
out
and
mov
xor
stos
mov
stos
or
xchg
sbb
add
sub
sbb
sti
lods
fsubp
sahf
cmp
inc
jo
fwait
xchg
sub
pop
pop
stos
pop
fnsave
sbb
pop
jg
and
jb
movsb
scas
hlt
mov
popf
xchg
cmpsb
aad
add
push
adc
mov
clc
nop
mov
mov
lds
in
add
repz
sub
pop
stos
adc
mov
mov
mov
ret
and
clc
in
adc
adc
xchg
mov
fiadds
adc
xchg
mov
adc
fiaddl
push
mov
and
aas
jnp
les
data16
rcll
fs
add
negl
scas
xchg
mov
dec
jg
imul
sarb
pop
sahf
aad
push
pop
sub
cli
add
xchg
cs
dec
push
xchg
into
repnz
mov
push
xchg
add
cwtl
das
add
dec
mov
mov
adc
mov
mov
bound
fsubrl
sbb
add
mulb
mov
cltd
les
mov
leave
inc
addr16
push
andl
scas
sahf
inc
and
scas
xchg
dec
int3
lea
xlat
or
mov
fwait
cs
aad
mov
testb
aas
popa
cmc
into
imull
mov
inc
push
add
cmc
cs
cmpb
pop
mov
in
insl
call
outsb
cmc
adc
push
mov
cmp
adc
dec
dec
push
data16
cmpsb
xor
push
es
push
cmp
mov
inc
jns
in
mov
test
pop
movsb
adc
cs
dec
movsl
and
jnp
lods
sahf
subl
mov
outsl
cmc
mov
lods
imul
arpl
ret
fs
shll
jns
repnz
jle
ret
dec
or
mov
imul
push
cmpsb
cmp
xor
cmpsb
pop
xchg
push
in
mov
movb
cmc
sub
lds
lret
mov
dec
lods
sbb
and
mov
mov
subl
mov
cwtl
dec
inc
fisubs
add
dec
and
loope
aaa
or
pop
add
jecxz
fwait
fs
push
in
sub
mov
sbb
in
repz
iret
imull
insl
fs
mov
mov
fsubs
ror
stos
cld
jmp
dec
fisubs
lock
cmp
pop
pop
push
cmpsl
push
fidivrl
cmp
jecxz
int3
pop
rcrb
xchg
dec
and
fwait
ljmp
mov
pop
in
inc
call
sub
in
imul
inc
sar
cs
inc
dec
cld
cld
mov
decb
popf
in
ds
cli
pop
rcrb
cld
and
ja
out
arpl
xor
xor
or
cwtl
addr16
std
lahf
leave
cmp
fs
sarl
inc
pop
jge
dec
inc
xchg
add
adc
sub
adcl
insb
stos
ja
popa
test
in
aad
and
out
jecxz
roll
clc
jecxz
jmp
cmc
lcall
cmp
test
in
gs
jae
cmp
push
cmpsb
xor
push
add
incb
ret
ljmp
pop
divl
lcall
mov
adcl
inc
jns
mov
jmp
ret
div
dec
das
test
popa
test
xchg
push
push
mov
xchg
sub
sbb
dec
pop
les
ljmp
int3
outsl
mov
inc
xor
das
fdivrs
inc
sub
lahf
push
lret
sbb
rcll
ss
cmp
notb
hlt
inc
xchg
aad
test
adc
test
mov
push
fldcw
push
mov
outsl
xchg
data16
push
mov
gs
arpl
mov
popf
inc
jp
or
lds
mov
adc
jge
add
jge
jbe
fcoml
jl
mov
std
add
xchg
inc
ds
loope
jne
pop
fcoml
data16
add
lds
jb
daa
xor
in
mov
test
xchg
fucomip
xchg
xchg
shl
adc
push
clc
mov
xchg
pop
insl
in
or
jbe
js
mov
mov
jg
fisubs
scas
repnz
addr16
mov
jp
in
cltd
mov
pop
pop
mov
add
add
mov
ret
cmp
mov
les
xor
arpl
andl
cmp
fdivrl
daa
addr16
aad
mov
decb
and
push
sub
jbe
rcrl
mov
or
pop
mov
daa
out
jle
cmpb
fistpll
adc
mov
loop
stos
arpl
add
mov
fnstcw
loop
aaa
push
sub
lea
cld
mov
add
fdivs
in
jnp
imul
arpl
leave
bts
and
mov
jno
sub
mov
mov
imul
fs
jo
push
sbb
xchg
imul
xor
cwtl
mov
aaa
stc
daa
fists
cmpsb
mov
dec
push
scas
push
std
ret
scas
push
repz
sub
jl
dec
push
cmp
in
addr16
sti
dec
repz
scas
push
or
xchg
push
jecxz
aad
mov
dec
xorl
or
dec
cmc
jp
in
cmpsb
jle
lods
shll
jl
mov
xor
fnstcw
outsb
cmpsl
in
push
imull
in
and
adc
mov
cli
push
cmpsb
fisubrs
daa
sti
icebp
or
sarb
rcl
sbb
dec
leave
cmc
arpl
add
add
int
dec
lret
mov
lea
mov
jnp
cmpsl
test
ret
jp
mov
push
sbb
jae
sti
or
xchg
iret
orl
xchg
sbb
scas
push
scas
aam
lds
es
aaa
addr16
into
inc
pushf
fnstenv
adc
mov
ret
adc
fadd
add
cmp
scas
test
push
fisubs
out
xchg
xor
xchg
mov
fcomps
movsb
cld
movb
dec
and
hlt
and
adc
pusha
inc
hlt
inc
std
ss
inc
stc
push
rorb
adc
hlt
lods
sbb
pop
in
mov
cli
inc
pop
pushf
outsb
xchg
dec
addb
pop
sbb
popa
mov
fnsave
cmp
dec
fisubrs
mov
mov
xchg
or
in
imul
loope
cmpb
jbe
fstps
shlb
lock
jne
mov
mov
inc
enter
cli
adc
insl
aas
test
pop
fadds
mov
mov
popf
push
je
enter
mov
cli
adc
repz
mov
adc
bound
cmpsl
add
ss
cltd
xor
jl
sub
lods
adcl
gs
add
inc
scas
test
mov
ja
stc
ret
stos
mov
ss
fnstcw
ret
sbb
sub
cli
aaa
and
and
jl
adc
lea
jmp
mov
push
adc
mov
jbe
push
push
outsb
xor
add
out
adc
lahf
adc
xor
lock
push
call
daa
adc
js
and
int
fwait
rcrb
xchg
or
dec
ja
hlt
push
lahf
and
inc
mov
xchg
sbb
data16
mov
mov
xchg
mov
push
int3
fsubrs
pop
pop
xlat
xlat
cmp
shrb
insl
iret
lret
pushf
push
pushw
pushf
ror
jb
shll
das
mov
shrl
insl
imul
jp
inc
ds
sbb
scas
dec
mov
js
inc
lahf
xchg
inc
ss
sti
jno
js
and
ret
and
cmpsb
ret
jmp
jmp
push
xor
arpl
ds
cmp
mov
cmpsb
and
std
cltd
push
mov
iret
push
mov
mov
call
push
daa
xor
cli
ffree
sub
sahf
cmp
test
mov
lock
fstpl
adc
mov
aam
add
ljmp
lret
mov
inc
pop
jo
loope
test
sarl
jno
iret
leave
mov
out
mov
fdivrs
mov
repz
mov
pop
xlat
cmp
mov
add
or
mov
movsb
cld
pop
pushf
inc
xchg
dec
cmp
and
sbb
lock
cltd
aas
jg
xchg
fwait
sbb
lcall
mov
test
adc
jb
popa
adc
push
inc
sbb
pop
shll
inc
testl
into
test
aaa
jne
or
insl
mov
and
enter
dec
sbb
jno
ja
les
cwtl
cmp
fmull
sbb
sub
fstpt
ds
add
xchg
cld
lock
ffree
mov
mov
sbb
pop
comiss
out
mov
mov
loope
jns
stos
test
sbb
hlt
push
or
xchg
cmp
sbb
outsl
add
inc
mov
ja
ss
aas
repnz
ds
repnz
sbb
rorl
and
lea
push
rorl
and
test
rcll
int
cmc
inc
movzbl
bound
push
gs
xchg
test
and
pusha
inc
les
mov
xor
cmp
mov
jl
add
out
jg
out
jae
out
testl
pop
not
mov
mov
ljmp
sub
pushf
ret
aam
stos
subl
dec
mov
xchg
xor
dec
fldcw
mov
sarl
loope
fs
mov
pop
jb
in
jo
sub
pop
test
xchg
jbe
test
cmp
ficoml
mov
shl
mov
jbe
jae
mov
fisubl
cmp
push
fsubr
loopne
dec
pop
or
jmp
lcall
mov
fldenv
jmp
push
add
and
mov
int
int
fcoml
test
rep
xchg
shr
mov
xor
cld
push
in
mov
mov
dec
test
lahf
scas
pop
je
scas
push
mov
test
pop
sub
icebp
pop
imul
aaa
cld
xchg
inc
bound
ljmp
or
mov
test
mov
lcall
adc
insb
aas
cmp
cmp
pop
adc
xor
jae
pusha
xor
jp
stc
add
aas
into
in
push
addb
leave
loope
insl
mov
adc
jg
insl
sbb
mov
push
repz
or
fucomi
jp
cwtl
sahf
dec
sbb
and
xchg
add
cld
mov
jg
rcrl
xlat
pop
out
loopne
outsl
add
push
inc
clc
xchg
inc
inc
fadds
push
and
rcrb
xchg
jecxz
adc
pop
ss
sbb
cmpsb
in
inc
xor
inc
xlat
orl
push
or
sbb
mov
cmp
sahf
adc
sbb
mov
dec
jmp
or
push
or
repnz
pop
cmp
movsb
mov
jecxz
push
xchg
push
imul
repnz
pop
out
mov
imul
scas
cmp
mov
jge
stc
sbb
lds
notl
cltd
sub
dec
cltd
cs
push
std
popf
ficomps
push
dec
les
inc
pop
or
imul
clc
es
lahf
add
add
int
test
push
nop
in
dec
pop
aam
xchg
jl
jge
daa
sbb
or
dec
cmpsl
jbe
les
push
popf
inc
mov
pop
lods
xchg
dec
sbb
pop
leave
int3
mov
dec
mov
pop
std
lods
or
fnstenv
cli
and
pop
stos
mov
jle
fisubrl
mov
mov
es
outsl
jge
xlat
cld
mov
fwait
lods
dec
push
push
push
cmc
xor
sahf
mov
imul
mov
in
leave
test
jg
jns
jg
loope
jbe
adcl
in
movsl
insb
aas
insb
add
dec
mov
push
pop
mov
imul
outsl
jge
shr
inc
lcall
mov
sub
cld
data16
sub
mov
lds
dec
daa
test
loope
mov
leave
sub
sub
push
sti
adc
aad
stos
pop
shlb
ljmp
pop
xchg
push
leave
insl
push
enter
call
and
jecxz
pop
inc
pushf
jno
cmp
jns
aaa
adc
xchg
mov
ror
out
ja
jae
adc
inc
xchg
sti
dec
mov
xor
xor
aaa
loope
jb
push
int3
dec
sbb
mov
or
xlat
xchg
fistl
test
mov
inc
rolb
jo
scas
inc
pop
sbb
into
mov
cwtl
or
cmp
mov
pop
shl
mov
leave
stos
mov
push
and
lods
jp
pop
add
jbe
pushf
dec
icebp
insb
jne
mov
or
fnsave
testl
pop
xchg
or
ret
pop
sub
ds
mov
mov
mov
sti
jne,pn
push
int3
and
jl
aas
fstp
shlb
test
jle
mov
ds
cmpsl
cmpsb
and
or
stos
cwtl
insb
ret
sbb
ret
test
bound
pop
arpl
cmp
scas
mov
scas
jle
xchg
xor
cmp
adcl
icebp
lahf
std
jl
jge
movsl
cmp
int3
sbb
push
jnp
and
dec
sbb
insb
inc
jmp
outsb
xchg
out
cmp
mov
arpl
cltd
push
cmp
in
sub
stc
dec
jp
ret
jae
dec
push
inc
or
sub
in
mov
out
mov
and
fadd
and
das
into
cmp
sbb
mov
ret
mov
adc
icebp
jmp
cmp
enter
sbb
lahf
mov
and
and
sbb
or
xchg
or
pop
shlb
ljmp
in
xchg
popf
into
mov
mov
push
daa
ret
or
xchg
out
aam
arpl
scas
pop
cli
faddl
enter
add
pop
pop
enter
sbb
clc
fdivr
push
mov
mov
push
jmp
adc
sarb
fcompl
cmp
jge
in
mov
js
aas
or
dec
dec
pop
popa
jbe
sbb
add
jno
inc
and
mov
push
xchg
mov
mov
xchg
xchg
sbb
shlb
aam
jmp
movsb
divb
xchg
aad
int3
test
add
movsb
mov
mov
sarl
andb
sbb
into
pop
sub
fisttps
pop
mov
add
neg
arpl
andb
nop
inc
popa
out
mov
mov
nop
shll
xor
into
cmp
add
mov
insb
aad
aad
testb
push
out
addr16
and
push
xchg
movl
xchg
addl
add
xchg
out
adc
jp
test
xor
jbe
mov
fcoml
xchg
ficoms
ja
hlt
test
push
push
push
pushf
jp
jb
pop
rcrb
xchg
cs
mov
lods
xchg
repz
movsl
cmpsl
jge
fldenv
xchg
sahf
sarl
cmp
sarb
inc
stc
adc
mov
sarl
inc
add
lret
jl
stc
fistps
dec
sub
jle
jmp
xchg
lret
inc
pushf
movsl
inc
cmp
mov
inc
xor
fucomp
mov
cli
cmp
sub
add
lods
cmp
inc
lods
pop
cwtl
mov
aad
xchg
mov
stos
inc
cwtl
inc
or
lret
sbb
dec
push
mov
mov
insb
push
aad
js
pop
and
fistl
add
sbb
dec
ss
and
roll
scas
add
or
aam
jcxz
xchg
push
jns
cli
sub
pop
adc
and
pop
lock
push
or
cli
xor
and
sub
jp
int3
call
das
nop
xchg
push
or
xor
leave
add
imul
pop
inc
imul
les
out
insl
movsl
mov
push
shlb
jnp
mov
divl
sub
jp
sti
dec
js
shll
arpl
mov
xchg
mov
rorb
lods
jp
imul
mov
adc
jns
or
aas
js
scas
cwtl
xor
adc
stos
lods
or
adc
push
ljmp
adc
push
sub
lock
sub
jl
and
pop
fnclex
add
fdivs
jmp
mov
aas
mov
popa
jo
into
daa
outsb
shll
mov
popa
mov
arpl
aam
daa
jno
and
and
sarb
sar
pop
jne
pushf
mov
mov
xlat
dec
inc
push
fidivs
xchg
hlt
sarb
xchg
ficompl
loop
aad
push
testb
inc
clc
inc
pop
mov
out
jns
test
in
ljmp
out
push
cld
inc
push
push
push
xchg
hlt
mov
add
sub
adc
xchg
mov
hlt
testb
outsl
aaa
loop
lcall
and
pusha
bound
dec
int3
sbb
aad
in
dec
icebp
popa
lea
sarb
cmp
jns
inc
mov
mov
test
enter
push
cmpsb
sub
dec
xor
jno
into
sahf
insb
pop
ficompl
cmp
movsl
cmpsb
ss
mov
cli
or
stos
popf
or
pop
loop
push
xor
mov
mov
ja
lea
js
pushfw
mov
dec
jbe
inc
aas
dec
pop
mov
in
into
dec
subb
sub
in
popf
and
loop
lds
dec
mov
xchg
pusha
pop
fwait
movsb
jne
sub
in
loop
add
outsl
ret
jbe
stos
popf
lds
or
jbe
sub
cmp
shrl
sti
enter
xor
scas
shl
jecxz
stos
ror
popf
stc
add
xchg
or
out
insb
or
imul
pop
lods
stos
js
jne
push
xchg
jns
fwait
push
pushf
cmp
rol
mov
test
ss
cmp
mov
push
lods
cld
ss
adc
push
pushf
cmp
push
out
scas
adcb
xchg
mov
sahf
cmc
pop
jo
or
not
mov
or
inc
mov
ja
or
insb
pop
and
loop
and
dec
test
inc
mov
mov
aam
pop
mov
movsl
ja
dec
data16
scas
mov
dec
or
lock
loope
lock
jae
fwait
and
sub
dec
xchg
mov
lea
ficomps
sbb
lret
aad
xor
test
dec
or
jg
ret
xor
jecxz
call
cmpsl
repz
cmp
repz
into
lea
push
xor
and
subl
push
pushf
xchg
fsubrl
mov
jbe
xor
and
dec
xor
aas
adc
cwtl
adc
cmpb
pop
andb
inc
mov
imul
xchg
sbb
push
lcall
fadds
pop
add
lock
fnsave
pop
push
icebp
and
xchg
mov
push
cs
test
jne
xchg
jle
cli
add
enter
outsl
in
fsubrl
jge
pusha
sti
jp
dec
cmp
movsb
pop
fsubrl
out
jns
dec
cmc
xor
jno
mov
xor
push
push
or
or
loope
cmc
cwtl
daa
ror
dec
xchg
andl
pop
push
and
adc
pop
cltd
ja
inc
xchg
cwtl
shll
cwtl
ja
sub
sbb
sarb
subb
xor
mov
fstpl
sub
push
ljmp
mov
popa
jae
repz
jbe
ljmp
outsl
sbbl
jp
test
loope
push
xlat
cmpsb
fstpt
push
mov
notl
push
iret
cltd
imul
lds
jbe
push
ret
jno
cld
in
push
mov
inc
out
movsl
pop
cmpsl
cmp
jl
arpl
dec
test
xor
cwtl
sbb
aad
mov
mov
in
sub
loop
sub
hlt
loopne
xor
mov
jge
push
bound
mulb
xor
push
mov
push
sahf
xchg
pop
or
insl
push
sbb
addr16
push
mov
add
stos
push
push
push
gs
fldcw
ret
pusha
xor
test
add
shll
mov
push
cmp
mov
shl
mov
bound
ss
aas
pop
popa
iret
sub
arpl
xor
jp
sub
mov
xchg
lea
jecxz
xor
rep
xor
dec
xchg
mov
cmp
les
test
pushf
sbb
into
mov
push
xor
cmp
in
negb
out
cltd
sbb
loop
shlb
fdivs
pop
loope
mull
cmp
push
sub
xor
into
sub
cltd
mov
xchg
mov
imul
test
pop
je
dec
jg
fs
repnz
sbb
out
fistl
daa
divl
cli
into
cwtl
ljmp
icebp
inc
inc
adc
test
adc
mov
out
out
or
xchg
es
add
add
int3
das
roll
movsl
or
dec
mov
insb
push
rcrb
xchg
mov
aaa
mov
ljmp
pop
pop
out
arpl
sbb
lods
mov
mov
insl
inc
mov
enter
pop
mov
scas
mov
jns
push
dec
sub
sahf
dec
push
lahf
or
cmpsb
rcrb
cmc
adc
xorl
sti
fwait
aam
push
add
ss
mov
jne
xchg
mov
in
fistl
xchg
loopne
and
imul
mov
pusha
xchg
insl
arpl
jnp
sub
std
andl
inc
aad
and
mov
push
xor
scas
pop
dec
lds
xor
or
push
dec
cmp
inc
fdivl
mov
dec
dec
sub
enter
fcompl
bound
arpl
mov
mov
repz
push
adc
daa
sbb
xchg
push
push
cmc
jmp
mov
jecxz
mov
hlt
into
cmpsb
sbb
int
loope
rcrb
in
mov
xchg
mov
sbb
and
fiadds
pusha
int
dec
xchg
repnz
inc
sbb
addr16
jle
jle
push
fldt
cltd
mov
les
dec
jns
loope
nop
sbb
mov
pushf
sahf
sub
cmp
dec
std
xor
insl
lret
cld
adc
mov
imull
loop
sub
test
adc
sarb
mov
gs
jno
mov
pop
pop
addr16
adc
stos
mov
sub
ds
sub
movsl
add
aaa
loope
push
mov
add
loope
dec
stc
jge
icebp
inc
movsl
push
stc
mov
push
or
loope
and
les
jo
ret
pop
pop
fidivl
ret
movsb
repnz
or
cwtl
cli
push
call
rcr
out
mov
fimuls
out
test
aam
mov
inc
int3
dec
es
cwtl
pusha
les
ja
sub
ds
jmp
insl
fcomps
adc
sbb
arpl
int3
xchg
loope
pop
imul
sbb
sub
add
cltd
ss
inc
jge
dec
sbb
cmp
aad
rorb
lods
push
mov
test
aam
ljmp
inc
out
push
rclb
mov
dec
xchg
repnz
xchg
xlat
inc
pop
fs
andl
inc
jnp
jb
xchg
push
lock
mov
movsb
and
inc
mov
sub
into
sahf
or
outsb
call
andb
icebp
mov
sub
xchg
scas
pushf
adc
sbb
call
das
into
xchg
sbb
mov
pop
mov
in
fs
into
add
cmpsl
xchg
mov
pop
or
cmpsl
jno
sub
pop
or
add
jb
xor
insl
pop
mov
and
aaa
jp
jnp
jge
movsb
cs
push
push
mov
dec
lret
adc
sbb
mov
ret
insb
xor
cmp
mov
cmp
dec
aaa
or
stos
cs
inc
inc
psadbw
xchg
fsts
shll
and
addr16
jb
adc
adc
fistps
push
pop
or
decb
inc
mov
or
jge
mov
lock
sbb
sahf
scas
outsl
std
sub
icebp
int3
add
negb
pop
and
mov
cwtl
pop
popa
mov
ss
rcrb
jge
inc
sbb
out
pop
stos
imul
nop
fmul
inc
int
cwtd
sub
adc
sub
jl
fldcw
stos
pop
or
xchg
aas
rclb
dec
jnp
fsts
mov
fstp
cld
mov
fmul
clc
push
dec
fdivrp
clc
fbstp
and
sub
cmp
shll
cli
push
cmpsl
mov
and
addl
movsb
push
int
mov
call
enter
das
jp
jnp
jno
addr16
cltd
adc
inc
xchg
xor
movsl
adc
adc
mov
out
insl
cs
test
jbe
jo
arpl
or
inc
cmp
gs
aad
imul
je
les
inc
movsl
rcr
iret
or
jmp
xchg
xor
lea
ror
cwtl
mov
shll
xor
shl
sub
enter
dec
inc
movsl
inc
cli
push
mov
push
jge
orb
dec
push
and
dec
xor
das
mov
popa
mov
mov
xchg
cmc
movsl
scas
push
lods
cs
adc
call
sbb
rcrb
cmp
sbb
push
sbb
das
xchg
scas
add
test
inc
fadds
pop
adc
pop
gs
and
add
out
in
and
jb
jo
xchg
rcrb
push
out
addl
sbb
pop
jge
clc
jae
bound
adc
mov
cmp
jg
cli
mov
insl
or
movsl
add
fisubl
fnstenv
in
add
push
insb
mov
xor
out
aas
add
fdivs
imul
inc
imull
lcall
mov
jg
stc
loopne
jmp
sahf
push
sbb
push
sbb
std
mov
and
aad
jge
inc
mov
push
loopne
mov
xor
sbb
mov
lret
jge
jmp
iret
cwtl
dec
adc
loopne
xor
mov
sub
aaa
decl
xor
or
dec
sahf
add
push
push
sub
ss
stos
mov
decb
stos
imul
push
wrmsr
jl
test
fisubrl
das
inc
mov
call
insb
fisubl
cmpsl
sub
loopne
dec
and
lock
pusha
xchg
stc
jae
sbb
ret
xchg
aas
rcll
sbb
es
mov
cs
inc
daa
xor
and
dec
mov
and
adc
jno
pop
mov
push
mov
mov
int3
sub
test
daa
mov
dec
in
mov
int
enter
cmp
pop
jmp
and
jb
or
mov
or
rolb
and
aad
push
push
dec
jnp
jl
in
sbb
jl
ror
shll
xorb
and
cmpsl
repnz
and
loop
xchg
cmc
sarl
cmp
lea
inc
jmp
xor
outsl
inc
pop
int3
insb
in
in
cmpsb
or
cmp
mov
cmpsb
lret
push
mov
out
fldenv
aad
out
and
jo
adc
sub
notl
cmp
jae
inc
mov
data16
sti
lahf
lcall
out
insl
sbb
dec
jae
into
jbe
int
aaa
sub
push
pusha
ja
push
xchg
push
dec
std
jae
xchg
dec
push
jnp
stc
jge
repnz
sub
jns
in
jnp
jp
imul
iret
mov
not
and
jnp
mov
xchg
out
test
mov
jae
and
mov
fucomp
mov
shl
mov
and
jl
xor
push
stc
or
adc
push
mov
and
ds
mov
jb
outsb
shrb
mov
mov
dec
test
dec
sub
cmp
xchg
sbb
pop
pop
and
cmpb
mov
les
popf
sahf
mov
sti
push
mov
aas
int
xchg
lds
arpl
mov
jne
cwtl
test
aam
imul
push
das
inc
int3
imul
mov
lahf
mov
cmp
push
push
popf
inc
xchg
mov
aaa
into
dec
inc
dec
mov
cmp
das
sbb
mov
inc
mov
shrl
aas
sub
xlat
std
cs
in
dec
lcall
notb
sub
repz
dec
jno
mov
sub
ret
pop
cmpl
cmp
lods
inc
dec
mov
or
mov
mov
jecxz
ds
iret
cmp
pop
push
cmpsb
test
jmp
lret
lods
push
stos
push
scas
jmp
xorb
mov
out
and
jb
jb
and
jae
or
pop
mov
mov
dec
lret
fnsave
sub
cmp
cmc
mov
adc
jns
mov
call
test
int3
adc
dec
lea
mov
push
push
in
in
clc
add
ja
stc
add
lods
addr16
cmpsb
outsb
jb
stc
add
push
movsl
push
push
aad
fildll
jmp
lret
push
jns
xchg
push
push
js
popa
lds
cmp
repz
dec
mov
sbb
push
iret
mov
lret
dec
scas
push
notb
sub
dec
mov
rorb
add
idivb
into
inc
sbb
sbb
dec
inc
mov
xchg
fnstcw
fwait
in
out
pushf
sti
mov
cmc
das
xchg
stos
adc
out
xor
ds
push
gs
jg
inc
pushl
subl
mov
sub
ljmp
xchg
jae
lret
mov
xorl
and
mov
ret
mov
lea
les
mov
or
aam
shlb
int3
xchg
repz
xor
in
out
jns
fdiv
ss
fneni(8087
sahf
mov
cmp
push
jecxz
fnstsw
mov
inc
dec
fcoms
mov
or
bound
sbb
sbb
mov
lds
adc
mov
testl
cmpsl
scas
cld
lret
lahf
loop
fldt
xor
xchg
xor
mov
sub
adc
jl,pn
xchg
add
pop
in
inc
xor
xchg
cmp
xor
xchg
mov
loope
leave
pop
dec
rcrl
nop
out
scas
movsl
xchg
inc
or
out
ja
inc
stos
adc
nop
cmpsl
fstpt
gs
xchg
xor
mov
arpl
xor
rcrl
xchg
xchg
mov
cmc
jmp
iret
mov
mov
lahf
scas
jb
imul
mov
call
fisttpll
mov
dec
lds
push
dec
add
or
sbb
push
mov
mov
mov
push
cmpsl
dec
outsb
sub
jns
lahf
jns
inc
icebp
fsubrl
pop
mov
add
inc
dec
inc
outsb
out
out
mov
sbb
cld
mov
or
jmp
mov
add
pop
lahf
cli
sub
pusha
mov
adc
xor
xor
xchg
add
fwait
mov
lds
xor
movsl
push
insl
adc
jle
fcom
jb
xchg
not
push
lds
add
jl
push
jle
fnstenv
fs
push
test
jge
iret
xchg
sbb
lret
mov
mov
mov
ljmp
shrl
dec
mov
cs
sub
enter
lods
mov
aam
fsubr
cmp
ss
fsubr
lods
mov
leave
aas
add
push
push
sbb
xchg
inc
jl
ja
jmp
testl
adc
sti
adc
lret
jae
or
adc
popa
sbb
push
inc
out
mov
sub
sub
cli
int3
mov
xchg
jbe
pusha
mov
add
fisttps
outsb
jnp
cli
mov
imul
int3
mov
das
mov
outsb
lret
popa
fucomip
mov
outsl
jb
popa
lahf
xor
sbb
pushf
mov
jge
loopne
adc
pop
sub
test
lret
aad
and
lds
mov
imul
cmp
fcomi
data16
add
mov
push
scas
mov
mov
cmpb
cs
push
imul
in
dec
cltd
pop
imul
std
push
add
stos
jne
insb
js
cmp
push
fistpll
push
loope
hlt
sahf
fstpl
aad
jle
hlt
mov
repnz
mov
cmp
push
xlat
mov
lret
loop
outsl
std
in
xlat
xchg
add
iret
out
mov
aad
cmpl
cmp
dec
cltd
xchg
jno
add
dec
out
push
pop
mov
imul
call
inc
pop
and
notb
jne
divl
and
rorb
mov
cmpl
fisubrl
ja
jge
xchg
mov
sti
jp
pusha
dec
aam
ljmp
cmp
out
jne
pop
fmull
lcall
xchg
mov
sbb
pop
test
das
in
push
out
repz
leave
cmp
inc
leave
jno
dec
mov
sbb
adc
mov
xchg
lea
flds
push
stc
imul
xor
mov
push
je
push
fs
out
pop
pop
lea
sub
push
lds
lock
jb
ljmp
ljmp
push
in
jle
push
sub
adc
fisttps
mov
push
dec
sub
jge
push
lods
push
pop
into
loopne
faddp
and
mov
lods
mov
jo
inc
jmp
es
mov
out
or
ss
inc
rcrb
push
lds
lods
outsl
push
jle
testl
and
push
fnstenv
mov
arpl
dec
xlat
mov
cmpxchg
xor
add
sub
fmull
jl
jg
or
push
loope
ret
jnp
xor
add
idiv
inc
mov
jbe
push
pop
int
mov
push
and
mov
loopne
fldt
push
aas
addb
mov
icebp
mov
jno
sub
xor
pop
mov
ficompl
das
mov
xchg
sub
adc
outsb
sub
add
movsb
in
jecxz
push
lcall
jbe
mov
mov
mov
movsb
jnp
aas
lods
pop
je
scas
xchg
dec
mov
mov
pop
lock
push
arpl
testl
adc
loopne
notb
loope
ja
dec
setg
xlat
add
out
mov
pop
or
std
jb
push
jae
dec
xchg
adc
insl
cmp
cwtl
jnp
jg
lock
decb
sbb
imul
jno
popf
clc
scas
xor
mov
mov
in
sub
call
into
rcrl
cmp
jge
jns
mov
scas
sub
jo
jnp
cmp
sub
inc
jecxz
jae
jecxz
push
es
push
rolb
cmp
or
xchg
fsts
adc
cs
xlat
fcmovu
mov
push
pushf
int
daa
or
mov
cmpsb
cmp
mov
sub
rcll
cmp
push
icebp
jae
dec
pop
jle
cmpsb
cltd
dec
das
iret
push
addr16
lea
mov
adc
sbb
sub
push
loope
mov
sti
scas
sub
mov
out
cmpb
mov
push
mov
fs
int
frstor
lahf
inc
imul
push
xchg
mov
test
divl
jge
pop
fisttpll
mov
or
bound
outsb
out
out
mov
ja
xlat
pop
stos
sub
and
adc
cs
incl
pop
jns
cmc
push
cli
out
mov
or
mov
mov
gs
int
mov
dec
mov
daa
bound
lods
aaa
inc
mov
hlt
add
adc
fists
cmp
xor
movsl
test
jno
inc
push
jns
push
jae
adc
loop
push
mov
into
push
push
ror
adc
and
push
xor
pop
xchg
add
cmpl
and
add
jmp
dec
test
outsb
test
cwtl
push
push
add
pop
mov
es
scas
cmpsb
fdivrl
push
jbe
fwait
adc
pop
aam
push
sbb
mov
jae
nop
jbe
rcll
jb
mov
mov
inc
test
inc
cld
mov
pop
mov
mov
xchg
mov
es
in
xchg
or
andl
jns
pop
mov
inc
in
jae
jp
mov
aaa
stc
in
jne
mov
adc
das
scas
mov
xor
shld
sbb
nop
in
mov
fbld
aam
xchg
adc
and
sbb
test
sbbb
mov
mov
dec
dec
aaa
mov
in
cmp
pop
mov
popf
loope
cmp
popa
push
std
daa
dec
xchg
mov
pop
pop
into
mov
ljmp
test
mov
popa
movsb
push
in
jge
push
jnp
mov
sti
or
and
or
fidivs
sbb
jnp
push
in
popf
mov
stos
lret
test
sbb
dec
adc
mov
pop
lock
icebp
xor
lock
mov
dec
pop
js
adc
mov
push
inc
rorb
cld
push
fdivrp
sbb
lret
mov
cmp
test
or
mov
push
std
jne
enter
cltd
cmp
dec
clc
in
lret
bound
push
lods
stos
push
inc
in
loopne
aad
pop
xchg
push
out
jl
addl
mov
imul
lds
and
loop
popf
loope
popa
mov
adc
or
push
xchg
sub
pop
add
mov
bound
iret
cld
add
jne
xor
ja
faddl
pop
or
cmpsb
nop
inc
mov
fstpl
adc
push
mov
cltd
adc
mov
mov
or
loope
inc
and
xor
mov
cmpsb
out
push
or
test
mov
add
jmp
mov
jl,pn
jae
cld
pop
ret
stos
or
xor
and
std
lret
xchg
and
sbb
addb
das
test
xchg
clc
add
mov
xchg
xor
addb
mov
mov
popf
or
sti
int3
xlat
cs
xchg
xor
call
inc
sub
jbe
cmp
out
ficoms
popa
dec
enter
mov
and
xor
cltd
sbb
cmp
jo
jnp
adc
and
cmp
mov
cli
das
adc
mov
inc
int3
and
test
in
sbb
stos
sbb
mov
mov
pop
insl
cmp
cmp
cmpsb
in
out
cvtpi2ps
rcrl
lods
sbb
test
int
push
cmp
sub
push
arpl
addr16
push
xchg
stos
mov
aad
sahf
jnp
out
jns
cltd
fldt
andb
rcl
fwait
xchg
lods
push
into
int3
aas
dec
repnz
stos
rclb
lahf
xor
movsl
repnz
jg
adc
sub
in
mov
sahf
lods
enter
fs
test
inc
insb
testl
mov
mov
daa
and
adc
inc
dec
mov
cmp
outsb
cmpsb
and
mov
add
sub
je
dec
mov
xor
xlat
xchg
dec
sbb
aam
ret
dec
mov
lods
mov
sahf
stos
repz
scas
enter
push
jae
fst
scas
lock
xchg
mov
mov
je
ljmp
jecxz
lcall
sub
fcompl
cltd
ljmp
cltd
dec
js
fcoms
jbe
sahf
or
sub
and
je
jle
or
out
pop
xor
es
add
shl
dec
push
adc
adc
into
dec
stos
cltd
xor
inc
das
add
cmp
addr16
into
sarl
aas
das
xor
xor
or
pusha
test
outsl
lods
xor
dec
sar
and
int3
scas
xor
imul
push
sbb
les
xor
ds
cmp
mov
mov
mov
and
ja
aam
insl
ljmp
int
pop
das
xor
inc
inc
movsb
rorb
dec
pop
cs
push
cwtl
cmp
cmp
sub
cli
int3
mov
jo
and
push
xchg
push
cmpsl
inc
mov
cmp
loop
add
mov
clc
sub
pop
jne
and
stos
xor
loopne
idivl
ja
lods
inc
mov
pop
inc
mov
add
mov
mov
mov
cmp
and
subl
mov
lods
jns
inc
adc
shrl
aam
and
ljmp
mov
mov
add
ret
ret
rcrl
in
test
mov
sbb
inc
inc
sarb
outsl
mov
cmp
cmc
xchg
sub
stos
rorl
movsb
inc
popa
fisttpll
shl
push
cwtl
in
jle
inc
jbe
cmp
xlat
lock
ret
xor
pushf
fsts
sbbl
pop
mov
out
mov
stos
fcomps
jmp
cs
push
roll
jg
stc
cli
fstps
push
fwait
ljmp
dec
outsb
xchg
pusha
popl
pop
cs
test
jl
pop
test
pop
mov
sti
es
pop
pop
mov
or
ret
cli
orb
repz
mov
stos
add
lret
pusha
outsb
stos
jge
mov
adc
pop
fadd
in
movsb
and
lea
ja
insb
cwtl
mov
out
jae
fs
push
mov
cmpsb
cld
jecxz
push
xchg
jmp
mov
decb
xor
xor
mov
sub
jb
mov
fistpl
jns
insl
jbe
sbbb
xchg
cli
jnp
fistps
lock
sbb
shlb
cmp
negl
mov
lds
bound
jne
cmpsb
rorb
lods
push
sarl
mov
loope
fadd
or
jge
in
das
notb
test
jne
xchg
adc
adc
gs
push
aam
int3
xchg
fdivp
fs
int3
mov
xchg
pop
xchg
xchg
int3
out
clc
pop
gs
cwtl
xlat
jmp
arpl
loopne
fnstcw
loopne
imul
push
jo
xor
out
jl
mov
mov
mov
enter
dec
xchg
daa
out
in
stos
lods
sub
mov
sbb
jne
mov
shrb
aaa
mov
mov
ret
push
out
subb
xchg
dec
mov
mov
mov
cmp
aam
jo
in
dec
add
cmp
in
add
lock
clc
scas
popa
icebp
push
xlat
jg
jae
aas
fwait
repnz
std
inc
mov
das
insl
mov
aad
mov
out
pop
clc
xchg
jne
repz
push
xchg
push
gs
push
push
inc
popf
inc
stos
mov
scas
inc
test
scas
lods
stos
fbld
pop
sbb
pop
stos
stos
lock
dec
mov
xchg
pop
test
dec
cmpsl
jnp
stos
mov
std
and
fisubrs
andl
mov
xchg
scas
lahf
loopne
out
mov
cmpsb
fsubrl
sub
icebp
add
xlat
xchg
cld
sbb
fiadds
cmp
or
push
xchg
jl
out
imul
xchg
inc
fcomps
pop
loopne
inc
and
stc
jnp
sub
mov
js
mov
inc
sub
inc
cli
sbb
adc
mov
ret
jle
dec
rcrl
je
xor
or
fsubrp
imul
or
ja
jns,pn
lahf
xor
push
fninit
mov
mov
cmp
jmp
dec
jb
loope
mov
pop
pushf
das
dec
mov
fsubp
inc
lock
adc
pop
mov
sti
xchg
pop
aam
fdivl
std
sub
daa
addl
xor
inc
xchg
testb
orb
lcall
stc
pop
lds
pushf
ja
pop
js
in
lahf
iret
fcmove
add
mov
in
sub
push
xchg
pop
adcl
pop
xor
les
loope
inc
mov
test
mov
repnz
sbb
das
jno
in
cli
dec
std
add
xchg
fnstcw
aad
mov
pushf
pop
dec
mov
das
sbb
add
add
sub
sbb
bound
sub
inc
int
add
xor
sub
fwait
pusha
fs
add
or
pushf
xor
mov
push
dec
add
test
xchg
mov
ds
mov
inc
lods
push
ljmp
sub
mov
fstpt
dec
xchg
dec
and
pop
rcrl
sahf
push
mov
jbe
ret
push
push
dec
mov
dec
cs
mov
xchg
jne
out
imul
rcrl
pop
dec
es
and
dec
cld
dec
jo
xchg
mov
mov
xor
outsb
decl
test
cmp
mov
icebp
dec
mov
or
lods
mov
pop
sub
jnp
fildl
pop
inc
lock
mov
adc
adc
and
ds
pop
or
test
xorb
jmp
loopne
out
jg
sbb
jo
out
cmp
inc
scas
jae
gs
lods
mov
sub
or
test
jge
ja
pop
pop
pop
add
mov
pmullw
lcall
loope
icebp
dec
cmpsb
mov
mov
inc
push
insb
jb
lds
mov
aas
lock
icebp
inc
mov
scas
dec
add
out
jno
das
lcall
push
popf
sti
cmpsb
mov
stos
ja
roll
imul
add
sbb
pusha
mov
jbe
cmc
adc
loop
dec
xor
add
or
or
ret
jo
je
pop
xchg
in
mov
adc
pop
mov
cmpb
cltd
test
xchg
add
shr
jae
xor
loopne
sbb
aad
mull
dec
clc
xchg
dec
jbe
getsec
add
push
pushf
mov
pushf
ds
popa
pop
jb
loope
mov
addr16
xor
pushf
cmpsl
add
addr16
cld
cmp
jb
gs
js
ss
sub
pop
test
fwait
add
hlt
add
shl
inc
adc
inc
or
adc
xchg
setg
orl
or
rorb
pop
cmp
pop
stc
out
jle
and
shlb
clc
nop
sub
outsl
cmp
and
nop
std
aaa
test
es
addl
cli
ss
rcl
dec
adc
jle
pushf
jb
je
lods
movb
push
aas
shrb
jl
popa
mov
in
mov
jp
jbe
into
pop
popa
jge
add
or
cmpl
mov
out
dec
inc
adcb
push
mov
sbb
push
sbb
xor
inc
cmp
lock
fdivl
test
lahf
les
sub
daa
jnp
or
xor
jae
jns
aad
mov
jp
ljmp
int
sub
cltd
pop
fistps
mov
stos
cltd
pop
xlat
cwtl
sbb
mov
mov
ljmp
stos
rcrl
push
iret
mov
std
push
dec
mov
mov
fsubrl
sarb
add
sub
xchg
arpl
lods
jne
add
inc
sub
roll
lods
xchg
jnp
pop
std
lds
jge
inc
out
xchg
dec
xor
std
jle
xor
mov
scas
imul
cmp
fldenv
xor
cld
test
jmp
pop
mov
sbb
cmp
and
sbb
popl
stos
push
push
adc
and
outsl
adc
pop
or
sbb
xor
mov
mov
push
or
sbb
mov
xchg
repnz
jecxz
or
cmp
and
push
add
inc
in
cmc
popf
fbstp
or
mov
or
rorb
int3
jecxz
lcall
inc
sub
cli
lods
lock
sbb
jne
clc
dec
jnp
test
mov
xor
xchg
and
out
sti
push
pop
test
arpl
pmullw
clc
mov
fildll
cmp
push
pop
inc
int3
popa
rorb
mov
jb
ret
xor
xchg
jbe
test
push
ficompl
iret
mov
cmpsb
push
repnz
hlt
xchg
add
or
lcall
push
sub
sub
fldcw
dec
popf
and
xor
push
mov
mov
sbb
loope
add
xlat
xorb
cmp
cmp
mov
subl
pushf
jbe
imul
and
dec
mov
mov
movsb
je
push
clc
mov
jecxz
push
popa
sub
push
xor
adc
jecxz
mov
dec
cltd
sub
daa
push
add
xor
gs
cs
push
insl
cmp
push
nop
shlb
dec
sbb
pop
mov
adc
jbe
cli
sub
and
loopne
mov
mov
outsl
outsb
pushf
repz
push
and
and
cmp
jmp
pushf
or
sbb
pop
xor
cs
add
cmp
inc
xchg
mov
pop
daa
incb
xlat
jo
les
xchg
aam
jo
ds
fisttpll
cmp
jle
or
test
jbe
sbb
cmp
mov
ficomps
push
div
pop
fstpl
int
jge
jp
or
sbb
cmp
inc
pop
adcb
aad
das
mov
sbb
push
mov
sti
and
arpl
insb
jne
mov
lahf
fldt
andb
int3
pop
jecxz
mov
or
and
adc
out
pop
out
jo
mov
mov
cmp
sbb
mov
sti
xor
jb
out
push
xchg
mov
js
inc
bound
mov
mov
decb
das
xlat
jge
mov
dec
orl
sbb
ljmp
ljmp
insb
and
daa
jmp
subb
dec
mov
xchg
gs
and
mov
std
inc
scas
fsubrl
pop
or
js
sbb
xor
in
addr16
mov
or
nop
sub
lea
movsb
pop
lahf
popa
dec
xchg
ljmp
mov
xor
pop
cmp
cmp
and
jecxz
pop
test
jno
xor
add
sub
xchg
call
mov
sub
pop
xor
adc
add
fistps
or
fwait
imul
pop
push
push
jl
sub
cmpsl
arpl
pop
sbb
shlb
or
fdiv
pop
pop
lret
jb
pop
sub
call
ljmp
push
mov
jecxz
jle
into
cs
rcrl
xor
jno
jl
inc
addr16
icebp
mov
in
sub
fdivrl
sbb
fstl
add
pop
sahf
lret
je
stos
pop
shlb
imul
aas
fst
popf
or
mov
cmp
repnz
mov
out
jmp
sbb
xorl
add
sbb
decb
bnd
dec
mov
mov
dec
lods
xor
ja
out
leave
nop
jle
jl
dec
sbb
dec
lret
add
movsl
sbb
addr16
mov
dec
jae
jecxz
js
jecxz
aas
adc
imul
inc
andl
cmc
gs
addb
fdivs
je
je
fidivrs
cmpsl
or
popf
ja
push
push
push
cmp
pop
add
xchg
lahf
jno
std
jns
inc
inc
ljmp
cmp
pop
loopne
mov
sub
out
in
out
add
sbb
imul
in
movsl
cmc
adc
pushf
fistpll
mov
mov
popa
sub
out
ja
scas
mov
pop
fs
cmp
rcll
leave
or
dec
test
xchg
jmp
inc
add
cltd
mov
cmp
loope
dec
das
and
push
cli
jecxz
outsl
into
rorb
aas
push
lock
insb
jno
ljmp
mov
loop
popf
xchg
mov
mov
out
repz
mov
nop
lret
jp
cmp
mov
cmp
sbb
test
data16
aaa
loope
xchg
clc
out
rolb
xchg
in
arpl
mov
idiv
lea
cmp
jae
cmpsb
jle
lock
mov
sbb
int3
movsb
sete
dec
out
shll
scas
jg
test
loope
dec
xchg
in
stos
mov
push
seto
lret
jg
ficompl
lcall
lock
das
mov
rcrb
ficoml
ret
cld
sahf
outsl
in
and
mov
push
out
loop
cmp
jle
popa
test
mov
ret
test
stos
and
push
in
mov
push
pop
lods
scas
push
stos
daa
bound
ljmp
aaa
shlb
pop
xchg
in
sbb
jne,pt
ja
and
or
aaa
pusha
pop
push
dec
mov
cmp
jg
dec
cmpsb
jb
jns
cmp
mov
cmp
pushf
mov
cmp
fisubs
push
sub
fidivl
rcll
idivb
inc
je
stc
push
inc
repnz
jb
and
xor
pop
lahf
stc
cmp
cld
pop
jns
sbb
fistpl
js
test
nop
cmc
test
mov
in
ss
mov
scas
enter
jecxz
inc
out
sti
or
dec
push
pop
decl
jnp
ljmp
inc
aam
add
mov
sub
leave
mov
aas
lds
cli
aam
inc
insb
jge
bound
or
xor
push
mov
xor
xor
and
movsl
jo
mov
stc
das
loope
das
rcrb
rcrl
and
mov
in
xchg
push
dec
jle
nop
cld
jb
stc
out
in
ret
or
int3
adc
and
dec
xor
xchg
ret
inc
repnz
jo
test
or
mov
and
or
outsl
xor
pop
addr16
scas
scas
xor
pushl
pushf
cld
mov
pushf
outsl
dec
ficoms
dec
into
xor
or
xor
adc
xor
lahf
loope
mov
testl
xchg
cmpsb
lret
cltd
in
pop
mov
outsl
clc
sti
adc
mov
aad
arpl
jl
jg
loope
add
lock
jle
lock
decb
lock
imul
lcall
cmp
or
cli
cmc
aaa
pop
push
cltd
sti
xadd
xor
loop
push
scas
jg
in
or
decl
sbb
sarl
push
icebp
cs
das
ds
or
loop
in
test
fildl
inc
inc
sbb
inc
inc
sub
mov
dec
pushf
inc
cmc
mov
cmp
inc
fwait
dec
out
xor
add
or
sbb
decb
cmp
divl
movsb
outsl
rcr
lock
mov
clc
pop
add
cmp
les
iret
enter
and
pop
incl
xor
add
out
xlat
fbstp
and
ss
rclb
and
loop
and
mov
and
repz
or
adc
jmp
add
jmp
push
loop
xor
inc
adc
sbb
into
lea
jb
mov
adc
add
mov
test
aad
mov
sbb
test
mov
inc
test
pop
ljmp
out
xchg
nop
xchg
jb
mov
mov
jle
cmpsl
xor
jnp
repz
cmp
cmp
shlb
loopne
jne
push
aas
xchg
jne
lds
imul
shll
and
xor
in
push
cmpl
add
pop
ja
xlat
ljmp
in
mov
inc
dec
push
repz
fdivl
mov
jnp
lret
data16
xchg
movsl
mov
mov
fimull
cmpsb
cmp
xor
cmp
mov
daa
pusha
jecxz
ja
popf
pop
sbb
je
pop
std
sti
adc
pop
in
lcall
xchg
mov
add
pop
sub
mov
movsl
movsb
fcoml
loope
xchg
ret
stc
daa
mov
mov
sub
sub
xchg
pop
push
cmp
pop
mov
fimull
into
shrb
mov
mov
icebp
add
pop
pusha
icebp
je
sub
loopne
daa
jns
sbb
sub
sbb
dec
icebp
into
sub
addr16
das
stc
mov
xor
xchg
push
mov
jb
xchg
ret
setge
xchg
cmp
aad
ret
scas
aaa
mov
or
iret
sbb
out
ror
es
int3
or
or
push
clc
cmp
in
cmpb
push
mov
lcall
push
and
and
push
jl
sbb
xor
dec
xor
adc
dec
inc
lahf
add
and
sub
les
add
cltd
push
outsl
ret
test
or
outsl
xchg
or
popf
cli
or
or
test
and
sti
xchg
pop
mov
fcoms
xchg
push
add
cmp
sbb
lds
pmaddwd
into
push
in
or
push
add
or
mov
orl
fcom
cmp
les
jmp
xlat
pop
jo
mov
xlat
sub
shlb
push
xchg
test
sahf
add
pop
fs
jo
pusha
ds
fstpl
mov
gs
shll
xor
int3
dec
pusha
lret
mov
xchg
mov
iret
stos
push
sub
sbb
aad
enter
jg
mov
xor
adc
cwtl
lods
stos
lret
in
in
das
arpl
jb
fadds
xchg
pop
jnp
fiaddl
sbb
out
inc
sar
pop
sti
add
loope
push
adc
movsb
xchg
mov
pop
je
push
mov
mov
adc
addr16
mov
lods
adc
in
outsl
pop
adcl
push
cwtl
adc
mov
stos
movsb
inc
dec
inc
pop
fsubl
mov
push
imul
sub
xchg
lods
ja
xor
das
push
dec
rcr
ljmp
outsl
scas
jle
dec
push
ficoms
dec
jle
jno
sarl
add
add
daa
iret
push
mov
mov
adc
cmpsl
mov
pop
repz
addb
movsl
loope
mov
xor
or
inc
stos
jmp
cli
adc
mov
pop
xchg
mov
inc
jne
adc
dec
les
mov
js
jecxz
inc
mov
shr
cmp
xchg
sbb
sbb
mov
xor
mov
adc
fbld
or
push
daa
jae
leave
repnz
clc
cmp
inc
jl
pushf
pushf
out
xor
shr
movsl
xor
mov
sti
push
bnd
pop
or
jecxz
push
pop
mov
mov
sbb
popf
inc
jmp
stos
out
repz
push
pop
mov
ljmp
lods
negb
push
movsl
stc
lds
dec
enter
push
das
loopne
imul
or
mov
xor
add
and
add
sbb
add
mov
sub
xlat
andb
movsb
xchg
xchg
add
leave
jmp
lret
push
mov
mov
jb
mov
jmp
loop
xchg
or
out
cmp
movsl
xchg
ret
pop
movsb
out
dec
leave
jl
insl
aas
or
mov
pop
mov
or
pop
cmp
test
movsl
push
out
mov
mov
ret
loopne
out
mov
mov
add
jbe
call
popf
icebp
ljmp
ds
push
dec
lret
movsb
push
push
push
add
push
das
or
imul
add
sbb
xlat
mov
mov
dec
pushf
pop
je
popf
ficompl
je
fs
dec
dec
js
jnp
push
stos
pop
movb
cmp
push
pop
orb
das
mov
dec
bswap
mov
sbbl
mov
push
test
mov
pop
add
mov
arpl
scas
sarb
scas
rclb
jle
outsl
add
pop
jnp
cmp
enter
aad
gs
outsb
pushl
sbb
enter
sub
and
adc
mov
mov
push
and
xchg
fwait
int
push
or
dec
cli
or
fs
adc
and
bound
or
pop
or
daa
fadds
jmp
decb
fmuls
mov
out
loope
lret
push
push
xchg
addl
into
xor
mov
push
rclb
dec
inc
inc
sub
cmp
testl
pushf
pop
dec
sub
sub
push
faddl
mov
js
rcrb
fmuls
sbb
lods
cmp
js
pop
movsl
mov
fnstenv
cmp
imul
sbb
push
pushf
mov
dec
inc
xlat
rcrl
dec
test
divl
jmp
into
inc
sbb
mov
cwtl
cmp
out
push
hlt
cli
out
stc
ljmp
pop
inc
cmp
out
jb
xchg
call
jnp
and
ficompl
ret
lret
movsl
mov
stos
daa
movsl
or
pop
or
sarl
scas
push
push
filds
test
int3
arpl
pop
shl
lea
mov
bound
jge
movsl
imul
jbe
mov
out
icebp
fisubl
mov
dec
in
push
fst
inc
jne
lret
sbb
adc
xchg
push
cmp
cwtl
and
mov
lock
insl
das
xchg
mov
pusha
nop
pop
or
jns
or
pop
fisubrs
ror
adc
dec
sub
xchg
ss
mov
pop
sub
jae
stos
popf
inc
jg
xor
sub
jge
lock
adc
jno
out
mov
lcall
mov
pushf
dec
inc
jl
clc
pop
fcoms
dec
jno
stc
mov
push
cmp
jp
out
into
lret
mov
push
and
icebp
das
mov
fdivrs
out
hlt
lahf
flds
push
sbb
dec
lahf
ret
sbb
test
ds
cmp
dec
pop
sub
cmc
cltd
adc
sub
stos
push
add
aad
ds
aaa
int3
sahf
mov
scas
or
imul
pushf
pop
sbb
push
out
iretw
cmp
jno
cmpsl
cmp
sub
xchg
cmp
and
test
mov
pop
xchg
mov
sbb
lcall
mov
shll
lods
in
jns
add
pushf
fwait
scas
xchg
adc
mov
sbb
mov
mov
xlat
clc
lds
cmp
stos
cs
dec
xor
adc
pop
add
icebp
sbb
jle
add
and
mov
push
data16
jbe
popf
out
sahf
xchg
jo
jnp
cmpsb
adc
xchg
cmp
mov
fwait
cwtl
or
push
outsl
or
mov
mov
decb
cmp
iret
aam
cmpsb
lcall
stc
in
fwait
jbe
fnstsw
addr16
push
stc
ljmp
jno
lock
adc
stc
ds
inc
popa
outsl
popa
lods
loop
leave
mov
call
shlb
adc
jo
sbb
push
cmpsb
sbbb
or
arpl
fdivrs
dec
mov
cmp
sub
test
pop
repnz
outsl
sub
fldl
cltd
loopne
push
jne
or
add
add
imul
loope
inc
pop
sbb
jns
xor
shll
or
push
push
push
mov
cs
addl
test
push
inc
scas
shll
jle
sub
pop
jg
icebp
mov
sub
or
fdivrs
mov
lock
stc
data16
inc
jle
dec
jg
hlt
mov
cmp
je
mov
jne
insl
inc
jp
pop
dec
and
ja
fsubrp
movsb
scas
xchg
cld
fidivl
loopne
sub
icebp
popa
mov
fwait
add
setae
xor
rcrl
lahf
jl
push
jns
push
and
imul
mov
gs
xchg
outsl
es
jnp
push
cmp
scas
sub
sub
pop
mov
decb
repnz
out
bnd
mov
in
pop
lock
repnz
shrl
fldcw
in
sbb
jmp
out
jge
loopne
aad
in
aad
in
dec
lret
and
iret
sub
push
in
push
dec
xchg
out
sub
xor
cmp
call
mov
jmp
mov
sub
xor
divb
dec
lock
out
subb
inc
cmpb
mov
insl
cmpsl
sbbb
js
rcll
jp
ja
pop
iret
aam
cmp
int
bound
pusha
cmp
pop
xor
cmp
iret
dec
lods
nop
hlt
sub
lahf
mov
adc
je
xchg
mov
repnz
mov
mov
inc
andb
jno
dec
sahf
popf
pop
dec
mov
mov
outsl
inc
jp
mov
incl
repnz
filds
jl
jg
cmp
mov
in
repnz
loope
adc
xchg
and
mov
cld
jg
adc
dec
sub
jbe
movsl
sbb
ret
stc
dec
mov
clc
jo
pop
addb
and
pop
lret
bound
adc
dec
setne
mov
gs
cmc
hlt
add
mov
jle
aad
repz
mov
inc
jp
jg
into
mov
dec
fwait
outsb
or
das
adc
popf
pop
mov
repnz
cmp
dec
xchg
addr16
xchg
sub
jg
jae
sbb
fldt
stc
fsts
pop
jg
insb
cld
cltd
inc
or
cmpsb
pop
iret
jmp
outsl
lret
sub
or
rcrb
push
jns
push
repnz
shr
dec
mov
repnz
scas
dec
repnz
mov
out
aaa
call
cs
loop
xchg
or
ds
loopne
add
pop
mov
int
insb
sarl
iret
push
in
jp
fbld
pop
xchg
movsb
outsl
roll
lret
pop
fisubrs
cld
xchg
pop
mov
pop
aaa
sahf
mov
adc
jns
push
mov
sub
data16
repnz
mov
sahf
mov
stos
insl
xchg
daa
in
sahf
sarb
push
pop
aad
jae
push
and
sbb
aad
dec
cli
push
lods
inc
sahf
jmp
add
lret
xchg
das
iret
aad
sahf
cmp
mov
jns
imul
xor
pop
mov
pop
sbb
or
in
repnz
cmp
cmpsb
mov
cmp
rcrl
lret
frstor
xchg
out
jno
or
dec
add
inc
cmp
mov
aad
push
jb
ror
add
fiaddl
xchg
xor
mov
int3
test
cmp
mov
xchg
cltd
pop
cmpb
in
inc
scas
mov
or
in
add
cltd
pop
mov
cmp
mov
pop
dec
jl
pop
pop
jg
push
mov
stc
dec
xchg
lret
dec
insl
sahf
push
ljmp
ficoms
and
and
inc
cmp
xor
insb
xchg
leave
xchg
fs
mov
lods
xlat
pusha
loop
inc
cld
std
popa
jl
cmpsl
lods
or
fisttpll
xor
je
iret
lock
add
xor
jb
lea
or
push
inc
fimuls
jne
pop
sub
mov
dec
fisubrl
sbb
inc
jbe
or
xor
sub
sti
mov
cwtl
mov
in
inc
aaa
xchg
jbe
dec
dec
add
outsl
pusha
mov
js
test
std
push
jle
add
sbb
xor
cs
xor
cmp
xlat
push
mov
lret
ror
divl
and
mov
punpcklbw
in
rcrl
pop
cmp
jg
clc
imul
pop
fbstp
scas
xlat
jl
cmc
daa
loop,pn
pop
mov
icebp
push
loop
test
ja
stos
fildll
jge
mov
sub
es
sub
out
es
mov
fmull
dec
push
repz
and
je
aas
adc
or
or
mov
push
in
cmp
xor
mov
cmp
sub
outsb
pop
ror
insb
and
sub
xorb
dec
lock
mov
adc
or
mov
loopne
add
js
adc
adc
daa
loopne
subb
pop
cmp
aam
add
xor
int
jne
aam
jns
imul
and
add
sahf
or
xorb
dec
lock
es
and
push
iret
inc
adc
in
jne
mov
add
mov
xchg
adc
ret
sub
xchg
cltd
pop
fldcw
in
lret
inc
xchg
pop
sbb
fstpl
int3
popa
mov
pop
xor
jle
divb
shll
mov
repz
popf
add
movhps
stc
push
mov
jl
mov
mov
int3
dec
out
shlb
mov
fptan
xchg
xchg
add
dec
push
gs
sub
adc
ret
inc
mov
ret
add
sbb
fisubl
cmpsb
push
jmp
mov
fidivrs
jmp
xchg
push
iret
jbe
adc
int
test
rcrl
xchg
gs
cmpsb
int3
cmp
data16
icebp
scas
mov
add
js
int
lahf
movb
adc
mov
pusha
xchg
subb
and
stos
or
push
inc
jle
mov
add
andb
push
xorb
jmp
mov
and
add
push
and
ss
subb
scas
loopne
sub
adc
cmp
andb
push
cmp
or
loopne
subb
and
add
clc
mov
mov
inc
adc
mov
xor
movsb
shrb
lret
cmp
add
sub
mov
movsl
sub
adc
add
aaa
jo
jnp
pmulhuw
mov
mov
cmpl
jecxz
mov
imul
mov
rclb
test
push
xchg
aam
orb
in
mov
adc
adc
pop
jae
pop
test
std
sbb
adc
test
call
jp
or
and
and
sub
aaa
inc
pop
xchg
cltd
cld
or
sub
cmp
repnz
lods
pop
lea
hlt
jecxz
xchg
jp
call
cli
or
outsl
data16
fwait
test
rcrl
xlat
repz
iret
es
jmp
ljmp
hlt
imul
arpl
pop
jp
mov
out
mov
pop
aad
push
shl
cwtl
es
cmp
add
adc
mov
cmpsl
or
nop
daa
fimull
add
adc
inc
cmpsl
xchg
test
shlb
pusha
cmp
repz
xor
js
loopne
add
and
sbbb
add
jns
fimuls
std
inc
sarb
adc
cmp
jns
fldenv
or
push
orb
mov
xchg
movsb
outsb
and
dec
shl
cmpsl
or
xchg
adc
pusha
adc
pusha
mov
add
adc
add
lds
rolb
adc
jge
in
add
cwtl
pop
in
inc
es
cmp
sub
mov
or
jae
mov
fdivrs
jno
pop
nop
lahf
xchg
cmc
push
insl
cld
jb
mov
outsl
inc
repnz
pop
in
cmpb
and
int3
addr16
es
push
xor
cltd
or
fildl
jg
xor
xor
pop
pop
aas
sbb
mov
xor
nop
inc
stc
stos
dec
out
jl
hlt
sub
add
mov
and
inc
cli
ja
sbb
das
stc
scas
outsb
and
lods
test
pop
sub
cmp
cltd
or
lock
mov
sbb
and
push
repnz
adc
jbe
stc
mov
loopne
pop
mov
push
dec
xor
dec
in
sub
rcrb
mov
xorb
sub
xor
push
jmp
jp
frstor
in
lods
scas
and
jo
push
mov
mov
mov
stos
inc
jb
nop
mov
in
sti
nop
mov
sub
movsl
ds
pop
cmpsl
or
push
inc
and
pop
lock
pop
sub
outsl
cmp
add
nop
stc
push
xor
daa
jb
ljmp
jmp
lock
jl
cmpsb
decl
lret
das
out
xor
jne,pn
push
cmp
xchg
sahf
adc
pop
mov
cmc
jne
jns
fimuls
mov
call
xor
dec
cwtl
add
bnd
mov
scas
ds
jge
pop
rcll
add
or
or
xorb
inc
and
and
enter
movsb
xchg
cmc
inc
push
mov
je
xchg
adc
aaa
pushf
mov
rcrb
fsubs
inc
inc
mov
pop
scas
addb
inc
cmpsl
inc
adc
xor
push
outsl
or
push
adc
xchg
pusha
xchg
or
es
push
pop
stos
sbb
pop
cmc
fldl
inc
push
xchg
pop
jne
hlt
rol
dec
push
movq
cwtl
mov
jge
and
add
lock
sub
aad
in
xchg
iret
or
and
out
fistpll
or
dec
push
push
push
adc
aam
xor
fildll
lea
lahf
repz
loop
and
mov
stos
cmp
or
lret
mov
xlat
andl
in
shr
pop
mov
or
mov
sti
test
inc
jl
xchg
adc
xorl
shrb
mov
xor
and
clc
mov
cmp
icebp
add
adc
aam
inc
mov
sarl
iret
inc
repnz
xchg
in
xlat
adc
mov
dec
inc
jp
aas
lods
ss
fiadds
cmp
and
int3
jge
mov
das
pop
insb
or
adc
aam
test
cmp
xor
mov
test
das
mov
loope
popf
imul
pop
dec
cld
notb
pop
cmc
ja
mov
das
jle
movsb
enter
insl
jge
pop
out
clc
sub
xor
cmp
out
sbb
imul
addr16
adc
dec
push
or
adc
jb
int
out
je
cld
idivl
stc
or
in
adc
sahf
movsl
sub
js
cmp
loopne
add
pushf
add
fadds
mov
into
pop
mov
jge
popf
test
jns
arpl
mov
adc
xor
sahf
and
mov
adcl
or
es
xchg
lock
jg
sbb
popf
adc
test
add
movsl
data16
mov
insb
pop
inc
add
adc
addr16
mov
imull
leave
xchg
or
mov
cmp
gs
fs
mov
push
mov
dec
mov
mov
je
sbb
mov
lret
xchg
loope
push
clc
pop
inc
sarb
jl
sbbb
ljmp
and
and
sbb
xlat
nop
js
das
bound
leave
jns
hlt
push
dec
sbb
enter
es
mov
mov
or
jns
mov
scas
adc
sbb
xchg
add
mov
pushf
scas
inc
push
cltd
out
jbe
stos
push
or
push
repnz
jae
rolb
mov
pop
sahf
push
js
xchg
inc
fwait
inc
push
or
add
adc
fldt
mov
cs
ret
cld
jbe
sarl
pop
xchg
and
inc
clc
jno
stc
sub
sub
jle
pop
cmp
lods
dec
sahf
in
lcall
jp
or
push
jb
add
jo
fcomps
rcr
dec
push
iret
jbe
mov
icebp
in
loop
ds
fwait
sbb
push
mov
cmp
shll
decb
subb
imull
repnz
in
mov
lret
xchg
cmpsl
push
lret
rcll
cmpsb
movsl
repnz
lahf
lods
repz
cld
xchg
out
jg
cmpb
mov
jg
xor
mov
jmp
imul
jmp
or
mov
mov
repnz
pop
fdivrs
leave
cs
jne
push
outsl
inc
push
mov
push
jmp
xlat
jnp
pop
or
lret
xor
clc
adc
mov
jb
lds
xor
sbb
xchg
daa
add
int3
aam
add
mov
mov
mov
or
push
data16
mov
insl
mov
xchg
daa
mov
inc
inc
ret
out
arpl
movsb
and
push
popf
ficoml
sub
pop
sarb
pusha
movhps
insl
jl
jmp
cmp
or
push
sbb
mov
loopne
arpl
add
push
fimull
sub
dec
fsubrp
jae
ljmp
idivb
push
and
shl
or
sarl
jae
ss
sahf
mov
shrl
out
in
cmp
cmc
adc
sbb
and
subb
pop
or
shrb
and
aaa
xchg
loopne
add
inc
sbb
testl
add
mov
fbld
es
xadd
or
or
pop
adc
add
push
lcall
pop
push
rclb
inc
jge
pop
enter
sbb
sub
fnstcw
push
push
mov
daa
dec
push
out
ret
xchg
jb
adc
repnz
mov
mov
shl
pushf
pop
lods
xlat
ljmp
and
movsb
mulb
jns
push
sti
sbb
pop
push
sub
mov
fwait
lret
sbb
inc
enter
arpl
movsb
cmp
adc
dec
bswap
pop
mov
sbb
adcl
sbb
fstpt
jae
adc
mov
xor
mov
cmp
mov
push
mov
mov
mov
jp
rclb
shll
or
js
arpl
xor
dec
mov
ljmp
push
adc
in
shl
cmpsl
sbbb
hlt
cmc
pop
xchg
push
rolb
dec
jmp
sub
pop
test
adc
jbe
mov
inc
mov
inc
dec
je
stos
in
ret
stos
lods
xor
dec
outsl
out
xchg
xchg
rcrl
mov
mov
imul
jb
mov
xchg
vpunpckhbw
xchg
aam
mov
jmp
or
test
loopne
mov
mov
shl
aaa
pop
clc
das
and
jnp
inc
xor
sbb
adc
fwait
push
cmpsl
in
popf
inc
aam
add
sbb
mov
add
mov
popa
mov
fs
or
pmaxsw
and
mov
push
inc
pop
mov
dec
mov
jnp
nop
jl
orb
pop
jmp
mov
pop
aam
ret
sahf
or
jae
and
sti
jg
cwtl
fildll
dec
pop
add
ds
out
dec
push
cltd
or
repz
lret
push
xchg
mov
and
mov
jle
imul
jbe
adc
sub
push
mov
xor
pop
xor
mov
cmp
pop
in
shl
or
call
xchg
push
mov
cwtl
xchg
imul
ss
les
paddb
adc
sbb
das
jge
out
jg
icebp
xchg
aaa
push
fistl
sti
inc
mov
mov
inc
xor
xor
push
push
sbb
push
cmc
les
mov
xchg
lods
in
push
std
sbb
pop
mov
push
mov
lret
lds
cmp
add
xchg
in
jle
push
and
jno
jp
inc
hlt
setb
mov
dec
decl
pop
dec
cli
adc
jg
or
repz
cmc
jmp
adc
fwait
clc
cmp
mov
pop
das
pop
add
aam
inc
movsl
push
call
fcmovb
addr16
je
lock
add
insb
push
add
dec
add
rolb
cmp
jle
jecxz
xor
pop
inc
lock
addb
or
push
addr16
inc
int
outsb
and
lods
in
fld
push
movsl
gs
adc
in
and
xor
lock
xor
cmp
shl
ret
cmp
jle
fdivrs
out
dec
sub
push
dec
daa
mov
ljmp
jl
ljmp
jp
insl
ja
pop
pop
pushf
jo
js
es
repz
cmp
mov
out
shlb
push
bound
sahf
xchg
or
leave
ljmp
xor
cli
ss
imul
pop
mov
lcall
arpl
cmovle
fidivl
aaa
cld
mov
es
aad
push
or
ret
jo
fidivrl
inc
xor
jg
lods
movsb
sub
add
fwait
pushf
and
clc
aaa
add
clc
jnp
gs
imull
fldt
xchg
pusha
mov
mov
xor
push
xor
push
add
adc
fldl
add
jae
stc
fwait
push
xchg
cmp
leave
loop
adc
repnz
push
in
test
pop
outsb
rclb
sbb
push
mov
xor
popf
add
test
std
pop
in
aad
pushf
mov
out
aaa
je
inc
or
dec
pop
pop
in
inc
pop
push
sti
sbb
add
ret
pop
add
stc
pop
arpl
adc
out
jmp
jl
lds
cmc
dec
push
stos
lcall
pushf
aas
inc
es
loope
imulb
pop
pop
insl
icebp
mov
pop
and
int3
addr16
in
clc
enter
cmp
sti
xor
pop
lock
cld
gs
xor
addr16
mov
cld
push
jae
mov
cmp
and
loopne
and
sub
popf
movsb
addb
call
adc
lea
xor
mov
pop
mov
aaa
mov
adc
and
rorl
divl
pop
cmp
outsl
ds
stc
push
sub
jecxz
sbb
mov
call
or
popa
and
sarl
outsl
and
xchg
mov
inc
incb
jb
and
pop
test
dec
cld
pusha
repz
divl
popf
ja
and
insl
push
cmp
out
out
or
mov
xlat
adc
cwtl
dec
mov
std
or
sub
fisubl
jb
fildll
mull
xor
stc
add
jns
xor
ja
add
cmp
inc
in
cs
sahf
or
insb
inc
aad
mov
sub
scas
sub
stos
mov
lods
mov
outsl
sub
pop
pop
mov
sbb
dec
lahf
jns
shl
lea
push
mov
pop
pop
sahf
ss
lret
stos
es
mov
int3
add
cmc
pop
mov
and
jbe
scas
or
lea
iret
stc
ljmp
xchg
push
ljmp
sub
adc
rcr
sti
imull
mov
testl
nop
and
add
outsl
mov
movsl
add
out
and
mov
and
addr16
jle
mov
jle
subb
adc
stc
bound
jg
shl
and
aad
dec
jge
cmp
sbb
jp
or
add
or
push
or
sarb
and
ss
or
sarl
jnp
lret
cmp
test
mov
lods
test
out
addl
xchg
xchg
push
cmp
data16
cmpsl
cltd
jnp
cmp
aaa
into
jnp
mov
test
jns
and
or
xchg
xor
xor
fadds
or
ljmp
cli
ja
ja
xchg
hlt
sahf
ds
push
lcall
and
pop
bound
jp
lret
js
inc
inc
mov
push
iret
dec
xchg
sbb
mov
inc
adc
pop
push
lock
fildl
shll
outsl
rcr
mov
or
inc
inc
adc
push
or
ja
lods
aaa
out
sti
outsb
pusha
cmp
jp
sbb
inc
loopne
stos
mov
cmp
icebp
inc
jl
stos
mov
cmp
aas
or
mov
clc
push
loop
es
or
lret
lea
and
das
pop
add
push
pop
add
ror
loopne
imulb
imul
loope
out
dec
aas
test
setae
pusha
push
out
inc
cli
inc
call
jmp
rep
and
cmp
jle
icebp
dec
and
xchg
push
adc
das
out
pop
ja
shll
adc
sbb
notl
aas
cmpsl
das
movsl
hlt
popa
dec
cmp
or
or
sub
ret
pusha
loopne
xor
xchg
test
jmp
sti
lock
aad
jecxz
xchg
icebp
movsb
sub
in
test
sti
das
inc
sbb
pop
mov
hlt
adc
add
lods
and
scas
ret
sahf
sti
cmp
test
xchg
je
dec
test
jmp
mov
jne
sbb
inc
xlat
pop
iret
xchg
pop
sbb
cmpl
nop
pop
mov
aam
and
jb
push
out
jno
out
cmpsl
cli
loopne
adc
icebp
adc
ja
es
rcll
and
dec
ja
jmp
lahf
jbe
mov
orb
sbb
and
das
lock
imul
mov
cmpsl
fisubrs
data16
xchg
or
or
pop
test
mov
in
pop
int3
mov
or
addl
js
mov
lods
repnz
in
adc
test
xchg
lahf
cmpb
push
pmaxsw
int3
inc
mov
daa
ja
std
ss
fadd
cmp
lahf
adc
cmp
sub
inc
mov
xchg
lods
and
sbb
loope
dec
jge
int3
pop
int3
loope
mov
dec
int3
in
cmpsb
je
js
push
cmpsl
xor
es
mov
push
pop
dec
stos
xor
lods
sub
fwait
mov
shlb
jp
pushl
sbb
aad
jle
mov
mov
push
adc
jge
mov
jmp
clc
sbb
push
sbb
and
mov
push
sub
push
iret
ret
loope
jb
or
cmp
lea
dec
scas
sub
xorb
mov
fldl
or
ds
sbb
icebp
inc
cmc
popa
and
xchg
ljmp
sahf
mov
jg
iret
xlat
pop
adc
leave
inc
or
add
icebp
std
fbld
repz
cld
adcb
cwtl
lahf
jae
and
add
in
nop
push
stc
inc
jno
cmp
dec
sbb
adc
jmp
or
sub
daa
fistpll
pop
inc
jno
cld
cmp
decb
in
pop
jg
stos
adc
decl
test
dec
les
sub
xor
and
push
jmp
mov
je
movsb
sub
adc
movsl
das
cwtl
and
cmc
stc
fimull
addr16
imul
xchg
insb
xchg
in
in
jae
mov
repz
outsl
mov
pop
int
inc
jge
test
add
out
lret
jecxz
stos
out
mov
add
bound
ljmp
and
push
mov
push
cltd
subl
inc
push
inc
push
add
sub
adc
mov
mov
mov
push
arpl
lcall
inc
dec
adc
into
frstor
inc
jg
pop
aas
out
pop
out
cmpsl
shrl
addr16
lret
fsts
push
movsb
stos
cmc
ja
add
xor
jg
notl
stos
push
lods
push
lret
dec
cmp
repnz
pop
in
mov
adcl
push
outsl
ja
aaa
xchg
jecxz
cmp
je
xchg
mov
push
aas
jo
mov
pop
adc
mov
orb
xchg
lret
cli
dec
and
jno
enter
pop
std
fsubl
in
sbb
fistl
and
lahf
cmp
fsubrl
rorb
stos
filds
subl
mov
ret
xor
add
pop
cmp
outsl
int3
aas
int3
pop
fcompl
repnz
inc
into
mov
jo
call
dec
cld
push
std
icebp
dec
loop
adc
mov
test
add
pop
xchg
mov
jnp
pop
mov
js
lods
int3
iret
dec
mov
stc
jl
inc
clc
addb
dec
push
scas
das
out
mov
daa
inc
jb
and
out
sub
notl
lahf
fcomps
fistps
scas
and
push
js
ljmp
xor
push
stos
sti
iret
push
or
mov
sub
movsbl
mov
std
adc
imul
or
out
push
lahf
es
pop
movsb
sbb
lret
aas
mov
lcall
cld
cmpsl
mov
incb
insl
push
iret
movsl
sub
cli
mov
daa
push
addr16
sub
lds
lock
outsb
cmpsl
loopne
or
jnp
insl
dec
sub
mov
or
popa
in
xor
cmpl
push
inc
mov
xchg
pop
inc
xor
repz
cmc
mov
jb
in
xor
subl
sti
push
ljmp
imul
and
stos
pop
pop
cld
sub
out
add
std
fcomps
scas
push
cltd
pusha
jl
and
mov
fs
mov
adc
inc
sbb
notb
add
lahf
ret
mov
imul
xchg
fs
repnz
imul
jae
mov
and
cmp
jns
frndint
aas
inc
inc
or
sub
addr16
in
test
test
lahf
js
fadds
inc
fs
aad
clc
cld
shll
fisubrl
pop
hlt
iret
jmp
dec
das
in
ljmp
fistpl
mov
mov
cmp
jmp
dec
sub
pop
xor
pop
scas
ss
sbb
icebp
jne
ja
js
inc
testb
mov
jl
sbb
mov
in
test
dec
xor
loopne
lret
in
in
cmc
adc
cmp
cmp
xchg
dec
pop
add
sbb
xor
mov
fistl
pop
mov
add
xlat
daa
or
xlat
jp
sahf
and
jno
roll
inc
mov
ret
cwtl
mov
je
xlat
ficoms
aas
jg
cltd
jbe
cli
in
inc
fwait
or
scas
add
inc
adcb
lret
mov
xlat
inc
pushf
pop
jmp
push
push
mov
xchg
js
std
cld
push
xchg
mov
aad
scas
mov
insl
push
mov
aas
adc
mov
into
inc
sti
cmc
jle
and
cltd
mov
roll
lret
testl
imul
clc
jp
mov
jl
push
sub
adc
loop
cwtl
movsl
out
inc
scas
fwait
clc
or
mov
push
nop
insl
xor
enter
bound
test
dec
addr16
xchg
cmc
fwait
or
cmp
push
inc
sub
xchg
jl
adc
jno
and
sti
pmulhuw
dec
sahf
add
por
pop
mov
sbbb
iret
jp
inc
orl
adc
mov
sti
stos
cltd
sbb
or
jmp
xor
sar
hlt
inc
sub
ret
sbb
mov
mov
enter
call
and
inc
jle
cmp
leave
and
out
dec
and
mov
shrl
xor
or
sahf
cmovbe
sbb
int
jl
lea
mov
jnp
ret
lods
mov
push
insb
and
push
rorl
daa
fwait
jecxz
frstor
loop
es
xor
popa
sub
fisttpll
mov
or
clc
and
push
push
out
inc
mov
aas
adc
repnz
dec
aam
loop
push
pop
xchg
insl
adc
mov
pop
rol
addr16
in
jl
out
bound
mov
test
sbb
jnp
sub
mov
xchg
in
shl
out
daa
lods
sti
xor
dec
add
std
add
std
and
cmc
icebp
push
lods
xchg
lock
testb
pushf
repz
mov
scas
popa
daa
xchg
inc
repnz
xchg
scas
minps
dec
jl
xchg
and
mov
inc
pop
add
inc
mov
mov
inc
pop
sahf
sub
pop
push
inc
cwtl
pushf
jge
repz
adc
dec
test
pop
shrl
cmpsl
sbb
imul
idivb
jo
cld
jmp
mov
in
and
cmpsl
jg
adc
pop
and
rorl
orb
sub
enter
rorb
jl
sbb
pop
push
xorl
movsb
sahf
les
cmpb
jl
and
pop
leave
xchg
sub
in
cmpsb
mov
lret
mov
inc
test
insl
fs
cmp
repnz
data16
ss
xchg
lods
push
shrl
lret
jno
mov
mov
orl
xchg
cmp
push
roll
in
movsl
sbb
push
adc
dec
cli
mov
and
add
lret
cmp
mov
nop
push
aas
mov
lahf
cmp
mov
mov
scas
into
mov
xor
pop
inc
popa
mov
jecxz
movsl
outsl
xor
fildll
inc
fwait
sub
mov
push
bnd
mov
sbb
inc
std
xor
iret
jp
lods
sub
dec
pop
js
addl
enter
aas
mov
lods
mov
xchg
dec
and
xor
aas
lds
xor
sbb
popf
or
sub
sub
mov
jb
daa
xlat
scas
add
iret
inc
stc
dec
cmp
mov
cld
imul
mov
mov
and
cmp
cld
call
mov
into
cmp
rorl
mov
sbbl
sbb
lods
test
xchg
ja
mov
dec
push
mov
mov
sub
mov
add
jbe
cmc
ret
out
mov
inc
cmp
sbb
dec
stos
cld
push
aam
xchg
and
sbb
leave
xchg
sub
inc
pushl
adc
inc
push
lods
es
test
fucomp
cmp
cli
add
cmp
iret
mov
dec
adc
jbe
incl
outsl
xor
aad
repnz
notl
lods
xor
mov
cmpsl
call
iret
mov
xchg
call
pop
mov
imul
aaa
cli
lea
mov
insl
aaa
fmuls
lret
setg
cld
lods
mov
push
inc
adc
jp
cmp
sbb
inc
movsl
dec
cs
stos
sub
xor
jecxz
test
jne
lods
faddl
mov
cli
loopne
out
inc
loopew
and
test
fwait
jo
mov
arpl
inc
mov
pop
pop
xor
aam
sti
inc
push
cld
push
xchg
insl
nop
clc
cmc
sti
sti
jecxz
cmp
add
xchg
jbe
int3
or
popa
popa
add
pop
jmp
dec
inc
fsubp
test
adc
cs
je
push
jo
rcr
xlat
xor
and
lahf
xchg
ficoms
sbb
gs
mov
add
int3
ret
mov
dec
lods
cmp
jb
and
mov
lcall
fbstp
pop
xlat
es
jg
jns
adc
mov
cmpsb
es
push
lahf
mov
movsl
push
fiaddl
xor
adc
aaa
loope
mov
or
mov
cmp
fsincos
xchg
jle
shl
cmp
shlb
mov
xchg
dec
ret
pop
cmp
decb
outsb
loopne
pushf
test
pop
ja
jle
and
cmp
fisubrs
cmpsb
jne
in
and
inc
inc
test
shll
sub
loopne
sub
aam
jbe
test
mov
sub
mov
pop
loop
enter
push
dec
loop
shll
popl
in
cmp
mov
rolb
jne
push
jne
push
xor
ds
scas
push
jb
push
jnp
ss
mov
ja
jbe
out
push
cli
push
rcl
inc
fisttps
stos
lods
dec
repnz
pushl
jb
pop
jno
mov
add
fnstenv
push
inc
inc
and
inc
cmpsb
rcrb
rcr
jle
in
jnp
mov
sbb
rcr
and
das
jl
push
xor
mov
negl
or
pop
fstps
aam
call
pop
aaa
xor
or
and
cld
jge
mov
mov
jb
imul
mov
cld
pop
cli
cmp
xor
pop
fldl
xlat
adc
ficompl
nop
dec
or
test
into
jg
push
out
fdivl
inc
adc
adc
mov
js
pop
lret
mov
mov
mov
mov
add
loopne
or
dec
rolb
out
inc
lods
cld
jne
mov
lahf
jmp
outsb
in
scas
jmp
mov
jp
loop
or
jp
lcall
push
cmp
loope
push
ret
adc
cli
daa
imul
mov
mov
adc
mov
orl
mov
and
xor
iret
push
mov
or
cbtw
sbb
mov
mov
mov
cmp
jmp
imul
daa
lret
in
cwtl
lcall
repnz
shrl
pop
sbb
cmove
sti
cmc
cmp
dec
pushf
daa
jne
push
dec
push
mov
jmp
out
mov
ljmp
mov
xchg
in
xor
loop
mov
jge
lcall
mov
sar
jle
and
jle
xchg
xchg
loopne
mov
inc
mov
lahf
jmp
loopne
cmp
iret
pop
out
fiaddl
xor
sub
in
mov
dec
push
fs
cwtl
inc
xchg
fsubrl
lods
add
mov
ds
pop
lock
inc
xchg
jbe
lret
sti
nop
xor
outsl
popf
fimull
jle
jmp
sarb
insl
pop
pop
sub
jb
loop
pop
movsl
cltd
stc
aaa
lea
in
push
inc
mov
cmp
mov
jg
mov
faddl
clc
das
rolb
loopne
jge
sub
ja
or
cltd
jecxz
mov
dec
cld
cmp
xchg
cmp
mov
arpl
imul
sbb
mov
add
push
fbstp
out
xor
aaa
adc
dec
cld
aas
fisubs
ja
popf
push
jl
pop
pop
pop
push
das
and
icebp
mov
mov
jmp
push
subb
inc
cld
jge
fidivrs
add
dec
cld
push
loop
add
icebp
mov
push
jle
icebp
cmp
sti
cmpl
popf
inc
dec
in
inc
insb
sbbb
sti
fisttps
testb
std
stos
pop
scas
shll
out
xchg
aaa
out
mov
cmc
cmp
movsb
xchg
and
mov
mov
jle
fwait
mov
sub
cld
mov
add
outsl
or
out
push
sti
mov
hlt
mov
subl
jecxz
out
in
and
pop
fidivrs
cmp
cmc
cmp
mov
dec
popf
lods
add
push
xorb
stos
mov
or
call
sarl
cli
adc
mov
ret
mov
adc
xchg
add
faddl
lock
sbb
pop
pop
test
insl
lds
lock
push
subl
ret
scas
out
xor
mull
scas
cmp
sub
dec
mov
mov
test
es
push
outsl
mov
clc
movsl
adcb
cmp
mov
mov
mov
lret
sbbl
xchg
pop
sbb
pop
data16
aam
mov
sti
mov
insl
adc
adc
mov
fmulp
sub
mov
mov
pop
dec
das
in
mov
xor
or
cmp
scas
js
repz
xchg
push
adc
xor
lahf
mov
lahf
fs
stos
insb
push
push
mov
shrl
mov
mov
mov
xchg
data16
cld
pop
stos
in
xor
sti
in
je
lahf
cmp
add
popa
add
lods
lock
and
mov
ficoms
mov
add
lea
jle
cmpsl
add
ljmp
fbstp
inc
dec
cmp
test
movsb
cmp
lea
test
addr16
loope
adc
xor
inc
jno
loope
inc
push
jb
xchg
pop
pop
jo
xor
lret
sbb
adc
leave
mov
inc
jp
aas
inc
pop
and
dec
lods
jbe
subb
idivb
mov
subb
mov
inc
in
xor
fwait
dec
out
mov
clc
fisubs
aas
adc
out
inc
mov
ds
pop
sarb
fs
test
add
pop
pop
jb
sub
gs
adc
mov
mov
pop
pop
in
mov
fldl
sbb
pop
fs
mov
lcall
cltd
sarb
std
shl
stos
ja
test
in
icebp
mov
sti
aas
xchg
gs
imul
sub
pop
sti
add
mov
pop
adc
xchg
add
orl
sahf
ficomps
dec
les
add
divb
mov
out
sub
imul
cs
arpl
or
dec
adc
daa
loopne
daa
xor
dec
out
je
mov
mov
and
add
fcoms
repz
dec
outsl
adc
dec
outsl
xchg
rorb
testl
pop
lods
mov
fdivs
push
mov
and
arpl
ret
push
add
in
mov
test
or
xor
and
inc
jle
aaa
add
negl
notb
ret
int
sbb
test
fdivr
and
js
lahf
add
outsb
sub
into
jmp
ljmp
adc
ss
jae
jmp
outsb
imul
aaa
add
hlt
ret
scas
push
mov
rcrb
lea
mov
cmp
add
js
mov
mov
mov
mov
push
aad
lcall
sbb
std
pop
shl
xor
sbb
lcall
lock
scas
int3
aas
fidivl
xor
int
in
jmp
outsb
xor
mov
sub
loop
mov
in
inc
cmp
aaa
lods
ljmp
sbb
push
jo
adc
out
imul
cmp
dec
out
fs
mov
aas
sarb
sbb
pop
sub
dec
mov
xor
and
xchg
inc
daa
into
and
lret
mov
lds
shrb
mov
clc
xchg
push
cmp
or
ljmp
testb
cmpsl
sbb
add
in
mov
xchg
out
xor
inc
stc
mov
ljmp
and
and
mov
jecxz
mov
cmc
pop
ljmp
pop
xor
inc
jae
outsb
cmpsb
rolb
push
sbb
inc
cmpsb
sbb
jp
inc
outsl
cmpsl
fisubl
lds
rcl
adc
aad
fwait
cwtl
and
jp
jle
sbb
push
mov
call
ret
lret
jb
add
mov
inc
mov
inc
jmp
sbb
divl
or
sti
lods
adc
inc
add
lea
xorl
sbb
arpl
fisttpl
insb
mull
mov
fsubrl
xorl
mov
pop
add
bt
sbb
call
push
xchg
jp
pop
lea
mov
out
shll
xchg
sbb
repz
mov
jg
clc
mov
jb
xor
scas
es
es
inc
xchg
iret
sbb
les
mov
pusha
les
enter
pop
std
inc
int
sbb
pushf
cmc
cld
add
pop
das
call
sbb
incb
stos
sub
cwtl
xor
out
arpl
mov
pop
cs
enter
test
mov
notb
icebp
xlat
cltd
out
mov
icebp
cmp
ja
mov
sti
addl
and
outsl
inc
fwait
and
push
adc
and
sahf
jo
mov
mov
outsl
popf
jle
cmc
lea
imul
jbe
rcrb
dec
push
pop
adc
mov
insl
in
insb
fadds
sub
into
cmp
in
mov
das
aas
dec
fistpll
lcall
pop
das
pop
lock
mov
imul
test
xchg
test
sbb
add
bound
leave
xchg
test
les
ret
push
xchg
xchg
aam
cmp
mov
es
dec
popf
movsl
pop
aad
jle
jl
call
lock
pop
mov
int3
push
imulb
idivb
in
sti
jmp
sbb
mov
pop
and
aad
mov
lsl
and
jg
cmp
jae
call
mov
jno
jnp
mov
notl
divl
jne
sbb
push
push
negb
lret
insb
push
sbb
cwtl
add
sar
out
andl
cmp
mov
xor
cmpsl
inc
sub
mov
cmp
and
roll
xchg
cmpb
xchg
je
mov
in
loope
cmpb
xchg
sbb
mov
and
sti
push
mov
aaa
push
loopne
or
fidivrs
jle
inc
dec
jle
push
cmp
aas
pop
out
jle
jg
inc
cld
xchg
in
dec
std
scas
or
lock
mov
push
rcr
in
popa
cld
jl
andb
test
sbb
fucomip
jle
out
das
jmp
xchg
sbb
add
cli
xor
or
repnz
arpl
iret
sub
int
leave
and
sbb
ss
sub
lea
mov
test
lea
cmp
push
pop
nop
shl
pop
mov
jmp
negb
mov
mov
fbstp
bound
ja
sub
inc
test
xchg
ret
pushl
mov
repz
or
lahf
clc
or
aas
add
dec
push
lock
out
iret
aas
cmp
repnz
fsin
and
cmp
dec
xor
iret
scas
aad
pop
pop
mov
rcl
push
andb
fstl
sti
mov
inc
enter
in
stos
xor
mov
cs
pop
nop
fbstp
jg
dec
push
out
lret
mov
enter
aaa
push
sahf
xchg
in
sbb
and
cltd
jp
inc
loopne
jg
pop
lea
push
pop
outsl
mov
lret
insb
lock
repz
orb
test
jl
ret
clc
or
jp
cltd
notl
lcall
sarl
dec
pop
bnd
lret
fldt
jae
cld
sub
iret
shrl
ljmp
cld
je
call
cld
iret
nop
aas
cld
push
add
out
sar
jmp
sbb
fucomi
or
inc
sub
rcll
loopne
addr16
mov
fdivs
cmp
or
bound
jbe
sub
mov
cmp
test
jp
insb
call
push
lock
js
jb
jmp
xchg
pop
mov
add
mov
jp
pop
cmpsl
cli
decb
add
lock
dec
push
ljmp
bound
pop
call
or
cmp
pusha
insb
leave
das
andl
stos
movsb
out
fucomp
cmp
scas
out
out
ds
int
scas
or
xchg
xor
nop
insb
loop
mov
mov
mov
xchg
pop
insl
dec
sub
fcmovu
jo
sub
pop
xchg
test
int3
bnd
scas
sbb
or
jns
sahf
imull
jmp
and
pop
fiadds
xlat
icebp
push
cmp
fs
cmpsl
mov
adcl
sub
jo
mov
loop
imull
lahf
and
rcll
mov
or
leave
std
stc
mov
add
icebp
xor
cmc
jl
jo
dec
mov
pusha
jg
sbb
push
pop
sbb
push
mov
push
out
jae
sti
fstps
push
sub
xchg
dec
int3
out
jo
jl
jg
jg
jno
aas
inc
jecxz
xor
jl
sbb
sbb
mov
stos
fisttpll
shll
jnp
decb
es
out
pop
pushf
pmaddwd
push
and
sub
es
jne
jg
leave
dec
add
imul
dec
test
dec
and
fwait
mov
mov
fisttpll
jp
mov
xchg
xchg
adc
push
or
mov
jg
in
in
mov
stc
mov
nop
ljmp
das
repnz
fcmovu
inc
adc
cmp
iret
aas
mov
loopne
cmc
sbb
xor
pop
mov
sub
out
dec
cwtl
insb
fcomps
icebp
out
lcall
mov
inc
out
pop
insl
mov
fmuls
mov
dec
addb
sbb
mov
mov
movsb
cmp
pop
cli
imul
shr
xor
pop
xchg
outsl
scas
fidivrl
loopne
add
jmp
jl
xor
mov
test
scas
aad
or
and
xor
cmpsl
pop
xchg
mov
nop
fcomps
push
ljmp
push
fildll
mov
shl
mov
shrl
andl
adc
pop
adc
icebp
lret
iret
xlat
repnz
and
out
les
out
xor
fnsave
lahf
cmp
jle
icebp
cmpsl
mov
push
loop
mov
mov
mov
dec
andb
jo
outsb
ss
and
aas
fimuls
or
enter
or
ja
outsb
fs
dec
das
fmuls
mov
imul
inc
insl
cmc
call
dec
lcall
mov
mov
inc
stc
in
nop
jp
pop
sub
lds
lret
sub
jno
adc
test
push
leave
xchg
aad
xor
add
mov
jno
aam
fcmovne
icebp
aaa
roll
sar
and
sti
rcll
sbb
iret
xor
fbld
in
ret
cmpsb
std
sbb
mov
test
lods
mov
sti
pop
inc
jmp
idivb
or
adc
sar
rcrb
lock
inc
test
in
addr16
cli
loop
cmp
test
dec
add
jb
scas
sahf
call
xchg
clc
scas
pop
imul
out
cld
mov
scas
pusha
sbb
lods
std
icebp
jl
mov
icebp
jle
insl
fsubl
sti
inc
sub
sahf
mov
je
cmpsb
aaa
stos
or
push
mov
scas
push
outsl
in
xchg
and
int
cmp
pop
and
inc
push
mov
jp
movsb
sahf
mov
fwait
xor
xor
sub
pop
pop
lahf
out
inc
in
stos
cmp
xchg
iret
outsl
push
or
mov
cld
lcall
cmpsl
push
jae
lcall
pop
filds
test
mov
jns
mov
push
insb
or
out
daa
cli
jnp
mov
fistpll
rcrl
cltd
pop
adc
cli
in
in
and
iret
sub
pop
fisttps
mov
in
sahf
outsb
xchg
sub
mov
aad
mov
aam
stos
pop
mov
gs
fwait
mov
push
sbb
jnp
jno
fnstenv
std
xchg
cli
xchg
inc
or
daa
mov
fnstenv
jns
ja
sahf
mov
jo
icebp
sub
pop
jle
rclb
fstpl
mov
pop
cltd
cmp
sbb
repz
xor
ret
cwtl
popa
fs
out
push
loopne
pop
in
adc
cmp
xor
xchg
cmpsl
ret
mov
movsl
adc
xchg
add
cli
jle
jnp
push
pop
xor
jns
popf
push
inc
fidivs
outsl
in
and
ja
xchg
enter
jno
cld
adc
inc
push
sahf
ud0
lea
pop
dec
xchg
mov
sbb
ja
in
cmova
cld
pop
enter
iret
sbb
add
mov
pop
jmp
mov
scas
popf
and
aad
xor
ds
negb
fidivrl
push
jg
sbb
stc
jle
sub
mov
dec
mov
insb
and
pop
inc
mov
call
push
pop
jae
xor
js
mov
jl
adc
inc
in
std
iret
dec
pop
cmp
lock
test
cs
push
xchg
xor
gs
xchg
xlat
and
push
cmpsb
lret
into
imul
and
fsts
fidivs
hlt
aam
sub
fs
js
call
jb
aad
inc
dec
dec
adc
inc
js
call
shrl
fidivs
jp
adc
mov
sti
cmpsl
mov
push
push
jnp
xor
clc
sub
daa
stc
xchg
jb
add
inc
js
xor
stos
dec
rorb
pop
xor
dec
push
movsb
xchg
dec
fwait
add
incb
inc
xor
cld
sub
mov
fcom
mov
scas
cmpsl
add
in
jnp
jae
add
or
mov
hlt
roll
jo
lea
sarl
test
ficoms
ret
std
adc
cwtl
cmp
pusha
add
int3
xchg
push
outsl
test
nop
repz
repz
pop
testl
out
mov
rorb
fimuls
mov
cld
into
xor
jle
pop
cltd
mov
mov
cmc
xchg
inc
fidivrs
insb
sub
xchg
test
lods
adc
jbe
xor
dec
shl
xchg
ret
ja
shrb
mov
jbe
push
gs
cmp
mov
push
decl
and
ljmp
and
mov
cmpsl
mov
mov
xor
sub
jp
lret
inc
adc
aaa
stos
fwait
mov
mov
test
mov
fwait
imul
movsl
sub
fs
aas
mov
loopne
sbb
push
mov
inc
bnd
mov
jg
push
mov
shlb
push
push
aas
int
in
cltd
fimuls
test
loope
test
jecxz
sub
insl
adc
sub
xchg
fiadds
inc
mov
dec
ja
mov
mov
orb
xchg
insl
xchg
jmp
cmp
movzwl
push
js
aad
cmpsb
dec
or
fwait
dec
pop
push
ljmp
lods
es
sub
add
or
int
cmpsl
outsb
dec
sbb
mov
mov
pop
outsb
or
cmp
stos
pop
add
ret
sti
cmp
sub
outsb
jp
or
dec
push
lock
xchg
insb
imul
xchg
pop
das
bound
push
sub
lret
imul
out
xchg
hlt
jle
xchg
leave
push
out
loope
jae
sub
xor
pop
sbb
adc
cmp
aaa
loopne
out
movsb
mov
sbb
xchg
ret
mov
inc
jmp
sbb
add
mov
imul
mov
jg
add
cmp
test
adc
xor
push
fldenv
xor
jnp
cli
int3
adc
sbb
lds
xchg
aaa
add
nop
ja
sub
clc
orb
fcoml
mov
jbe
lahf
jecxz
cwtl
dec
js
ljmp
notl
aaa
xchg
jg
sbb
stc
ds
push
jge
scas
xchg
outsl
add
addr16
xor
lret
ffreep
push
iret
mov
push
pushf
rcrl
dec
data16
mov
push
push
fbld
xor
ja
pushf
out
mov
mov
xchg
and
or
dec
push
push
xchg
pop
pop
push
adc
xchg
rclb
pop
dec
js
lods
jne
push
and
cmc
leave
es
pop
out
jp
or
push
mov
mov
jnp
mull
adc
es
js
jmp
jae
outsl
adc
push
out
loope
pop
and
or
in
cmp
lret
push
xor
outsl
cld
fmul
test
popa
mov
mov
pop
cs
adc
popf
rcll
dec
sti
add
subb
inc
adc
into
mov
jns
imul
sbb
popl
inc
mov
xor
pop
test
das
pop
and
fnstcw
sbb
xchg
aas
icebp
mov
aaa
sbb
push
pop
push
xor
lea
pop
int3
mov
sbb
in
mov
sub
pop
flds
jle
or
sarb
dec
pop
dec
dec
repnz
fmuls
fildll
jle
scas
mov
adc
pop
fs
cld
test
scas
loopne
sub
xchg
std
mov
enter
add
in
mov
lcall
push
lret
jo
lret
adc
mov
clc
out
mov
fnstsw
lahf
xchg
push
aam
ret
pop
mov
aad
push
sbbb
sahf
das
add
decb
shll
pcmpeqd
cs
mov
ja
mov
xchg
xchg
cwtl
inc
or
mov
adc
jbe
mov
popf
mov
aam
clc
inc
lods
mov
cmp
jne
and
push
xchg
adc
cwtl
int
push
jb
dec
push
and
cld
mov
aam
popa
call
mov
push
popf
inc
add
shrl
rcll
mov
lret
fxtract
jbe
out
lahf
shrb
into
lods
sahf
and
fsubl
je
cmpsb
js
aas
fimull
xor
jnp
cltd
sbb
adc
cwtl
lods
push
scas
ficomps
jmp
or
push
push
or
sub
addr16
cmpsb
xor
add
push
mov
movsb
add
fildl
enter
cli
or
sub
xor
fcmovne
pushl
repz
arpl
xor
fisttpl
imul
clc
dec
iret
and
add
xchg
mov
sbbb
push
fiaddl
sbb
inc
cld
data16
inc
inc
imul
or
pop
icebp
iret
pop
lock
decb
loop
pop
lock
adc
mov
shr
lock
icebp
push
les
out
shl
je
icebp
leave
sti
mov
cld
cmpsl
data16
push
mov
filds
inc
or
ljmp
pop
mov
jg
les
ret
imul
movsb
jge
js
sarl
js
pop
out
cld
and
pusha
jo
pop
or
jl
inc
sub
clc
cmp
in
jae
aad
mov
mov
mov
jp
mov
pop
scas
adc
add
sbb
loope
jecxz
fwait
daa
mov
outsl
mov
push
mov
sarb
push
js
call
pushf
jno
adc
mov
mov
fwait
add
mov
mov
inc
jl
and
dec
ret
cmp
pop
xchg
stc
mov
or
das
add
cmc
cmc
fisttps
cmp
jb
cmp
pop
loope
mov
mov
dec
dec
cmp
outsl
lock
bnd
xor
test
lock
movsb
nop
mov
mov
ret
stos
mov
cmp
pop
push
xor
dec
mov
shl
mov
mov
mov
aas
xor
cltd
push
push
mov
mov
sbb
ja
push
dec
cmc
loope
in
or
jle
push
mov
inc
cmp
sub
push
in
insl
inc
xchg
lock
data16
xchg
cmp
ljmp
aaa
andb
sbb
rcr
in
cmpsl
pop
mov
fsubs
in
and
lods
dec
or
sub
xor
lods
pop
stc
inc
stos
pop
jb
inc
and
pop
and
ds
and
xor
outsl
pop
cwtl
cmp
pop
sub
push
mov
inc
int3
mov
lods
outsl
and
rcl
in
mov
ret
and
push
ds
push
or
add
mov
mov
loopne
lock
icebp
cld
mov
push
pop
jns
jmp
mov
test
es
sub
fucomp
inc
and
in
pop
xchg
and
daa
out
xchg
push
xor
scas
pop
or
in
int
mov
adc
xlat
push
int3
jle
jns
daa
popa
jns
jnp
jne
fidivrs
out
int
mov
lahf
loopne
notb
sub
bswap
in
stos
lret
aas
cmp
fwait
aad
fisubs
aas
mov
cli
mov
out
push
and
int3
jno
movsl
jl
shlb
movsb
repz
fwait
sbb
psubq
das
xor
add
std
loope
xchg
dec
imul
mov
jg
push
mov
negb
jbe
leave
jp
sbb
mov
xor
fildll
pop
pushf
das
jl
int3
mov
cmpl
sbb
pop
ja
mov
adc
add
pop
rorl
dec
mov
cmp
fsts
orl
insl
push
inc
xlat
mov
and
fidivrs
xchg
or
mov
popf
pop
ret
push
jae
insb
mov
push
fiadds
shrb
pop
add
nop
pop
xchg
repnz
xchg
fadds
psadbw
and
pusha
jg
lea
flds
sbb
rcrb
xor
sbb
and
out
jbe
ficomps
bound
gs
sub
gs
xor
jne
out
sub
and
jl,pn
adc
add
loopne
inc
shl
dec
cmpb
enter
xchg
pop
out
jge
test
clc
add
out
inc
pop
xchg
enter
pop
inc
ret
insl
adc
pop
adc
lahf
sub
cmp
jl
inc
jg
icebp
or
mov
shlb
mov
lea
xchg
addl
in
mov
ss
test
into
fwait
sub
inc
pop
mov
pop
cmp
mov
shl
orl
pop
add
add
pop
jle
lret
sbb
pop
xchg
mov
xor
mov
lods
leave
mov
dec
cmp
adc
cwtl
scas
mov
mov
mov
lods
in
dec
loopne
fcmovnb
push
jb
and
testl
lahf
scas
sarl
mov
pop
test
fs
fsubl
inc
test
adc
mov
es
pop
call
jmp
not
je
stos
test
mov
pop
inc
aas
inc
pop
or
cmpsb
insb
lcall
mov
je
insl
cld
sub
mov
shrl
xor
ljmp
rcr
jl
or
loope
or
pusha
push
and
sti
inc
and
dec
and
hlt
stos
xchg
push
sub
mov
enter
adcl
arpl
test
xor
or
cltd
mov
jbe
pop
inc
mov
jge
push
adc
inc
int
shl
xchg
xchg
adc
mov
pop
call
into
ret
sub
movsl
adc
add
sti
mov
adc
std
les
lock
divb
push
clc
add
pop
jo
sbb
xor
into
popf
cmp
pushl
sarb
inc
push
pop
addr16
cmovae
mov
es
mov
ja
cmp
mov
or
mov
push
cmp
pop
cld
pop
cld
insl
mov
ss
mov
jo
ret
xor
outsl
sub
mov
mov
jl
sub
or
or
clc
cmpl
movsb
push
incb
and
jo
cmp
and
iret
lret
jo
sbb
arpl
sbb
into
inc
mov
jecxz
mov
es
popf
mov
fidivrs
outsb
cwtl
insl
rorb
es
leave
xchg
sbb
pop
add
daa
iret
sub
ljmp
clc
jmp
daa
iret
sbb
pushf
xor
mov
xor
cmpl
add
cmp
add
inc
cmp
add
add
mov
add
shll
add
testl
xlat
adc
mov
adc
cmp
jb
xor
jae
jecxz
pop
mov
xchg
ds
shlb
pop
mov
popa
xchg
sbb
sbb
adc
out
xor
jge
outsl
xor
mov
out
ss
pop
xchg
fwait
loope
xchg
lahf
sbb
jp
adc
and
mov
adc
addr16
jl
sbb
pop
push
decl
pop
iret
stos
call
jae
pop
jae
popa
outsl
push
in
xor
int
daa
icebp
mov
sbb
mov
inc
xor
jo
sbb
rorl
fsub
ss
ja
mov
jne
cmp
fisubs
inc
aad
xchg
dec
daa
repz
xchg
mov
arpl
cld
push
jne
ds
ret
and
jo
ret
xchg
mov
ret
lock
fildl
xchg
not
pop
push
incb
cltd
gs
sti
nop
adc
arpl
popf
inc
mov
fdivrs
shlb
xchg
cmpsb
out
mov
inc
shll
int3
or
mov
loopne
push
into
loope
mov
inc
dec
mov
pushf
mov
lea
fbld
into
cmp
lock
dec
mov
inc
and
push
fistps
lods
in
cmp
xor
dec
add
lret
out
popa
cld
lds
movsl
push
or
ds
dec
scas
jnp
jbe
out
jmp
ljmp
icebp
aaa
sbb
sbb
sti
pop
inc
xchg
mov
sub
popf
lahf
negl
xor
arpl
bound
cs
inc
adc
dec
push
ljmp
push
aam
aaa
jg
mov
daa
out
xor
jo
sbb
arpl
rorl
mov
or
fmul
jo
sbb
mov
lds
adc
rorb
aas
lret
lock
sti
pop
mov
pusha
ficompl
aas
adc
js
sbb
cmp
arpl
fisubs
jmp
test
mov
int3
cld
xor
hlt
out
imul
pop
ror
fs
fisttps
mov
cmpsb
pop
push
rolb
insl
sbb
xor
mov
pop
inc
add
cmp
and
mov
insl
popa
fsubrs
sbb
push
outsb
xchg
sbb
adc
sti
or
in
cmp
cmp
or
adc
outsl
jl
loopne
and
mov
or
or
mov
mov
xchg
inc
cmp
jle
push
pop
loope
xchg
push
mov
adc
sub
popf
xor
hlt
sub
jbe
stos
mov
inc
jl
icebp
mov
cmpsl
jl
push
std
stc
sbb
push
xlat
scas
push
mov
dec
and
shrl
mov
loop
xor
iret
fcmovbe
ds
push
fbstp
xchg
mov
leave
inc
cmp
pop
movsb
inc
jg
aam
out
inc
leave
pop
dec
int3
pop
sub
xor
or
mov
icebp
mov
lcall
sub
mov
jb
sbb
bound
cmp
pop
cmp
dec
ret
add
adc
lock
mov
fsubl
mov
pop
mov
lcall
lock
sahf
popa
xchg
xchg
sahf
jo
xchg
out
pop
js
xchg
pop
fisubrs
inc
mov
lret
xchg
jg
das
xchg
xchg
das
or
out
pop
sti
scas
gs
inc
xor
add
sbb
repz
stc
dec
sbb
xlat
mov
jecxz
pusha
int
mov
mov
pushf
imul
sub
mov
fbld
imul
xor
mov
popf
or
xor
lcall
or
jle
sub
xchg
cwtl
loope
cmpsb
jnp
jo
xor
jmp
sbb
repz
fisubs
test
clc
cmp
sbb
mov
jmp
fbld
test
cld
outsb
xor
inc
mov
jo
sbb
cli
adc
pushf
hlt
shll
loope
xor
ret
sbb
cli
cbtw
loope
cmpsb
daa
mov
mov
mov
imul
insl
mov
cmp
mov
xor
bndstx
xor
mov
sarb
lock
inc
mov
js
aaa
xor
xchg
insl
xor
pop
xor
outsl
xchg
mov
adc
mov
mov
loope
adc
int
mov
xchg
lock
cltd
fisubs
das
addr16
adc
ficompl
iret
imul
jg
sti
sub
fs
jns
daa
sub
js
cmpsb
icebp
xlat
pop
xor
add
mov
sbb
in
jp
push
or
mov
xchg
dec
push
in
into
mov
imul
cmp
hlt
push
push
mov
mov
jp
jle
cmp
cmpsl
ja
std
and
sbb
addr16
insl
fisttpll
or
sahf
sar
aaa
popf
cmp
pop
lods
rcrl
mov
repz
xor
jb
cmp
inc
out
movsl
sbb
stc
call
pop
push
sub
ljmp
dec
aas
jae
inc
jnp
sbb
pop
jge
aas
clc
xor
xchg
jae
test
and
pop
ret
fldt
xchg
or
xlat
xchg
bound
call
cli
out
cmp
stos
rol
hlt
cmp
in
je
push
and
sbb
in
addr16
pop
push
daa
jne
in
jns
push
repnz
andl
loope
xchg
push
mov
mov
mov
mov
xchg
cmc
roll
pop
cmp
xchg
jne
jle
pusha
dec
push
xchg
mov
mov
mov
pushf
ret
jmp
data16
pop
add
jge
shlb
and
jbe
jns
xchg
imul
cmpsb
pop
adc
jb
test
insb
mov
jecxz
iret
je
gs
lods
cmp
enter
ss
xlat
call
in
addr16
scas
sti
dec
clc
imul
sbb
or
or
scas
fwait
sbb
cmc
in
in
cmp
cmp
sbb
jo
xor
lock
lcall
leave
mov
sbb
xchg
lock
lock
clc
outsl
or
mov
pop
add
sub
pusha
fisttpl
dec
and
sbb
jge
outsb
sarb
testl
out
or
sbb
lea
daa
call
pop
loop
adc
cmp
je
mov
fcmovnb
xchg
add
and
add
jg
sub
les
lret
push
lods
add
cmp
pop
ljmp
push
or
setp
lret
inc
jne
sti
inc
aas
add
add
xchg
andl
pop
rcrb
push
xor
sbb
popf
push
pop
fcoml
test
xor
mov
and
adc
cmc
cmp
cmp
sbb
lret
push
fisttpll
fiaddl
push
jne
mov
inc
out
xorb
in
push
subl
cmp
sbb
out
dec
mov
xor
je
sub
xor
xchg
or
add
orl
daa
jo
mov
adc
mov
add
adc
mov
hlt
adc
inc
rcr
mov
fistpll
mov
inc
mov
push
adc
xorl
mov
movsb
cmpl
je
call
mov
hlt
ss
cmpl
lods
add
subb
sbb
add
add
hlt
adc
push
add
enter
lret
subb
subl
popf
sbb
jle
daa
push
data16
shlb
adc
add
mov
sub
mov
add
or
push
push
jp
jns
and
jg
push
in
mov
and
testl
mov
or
pop
dec
add
cmp
call
shrb
sti
inc
dec
xorb
jp
faddl
aaa
sub
mov
xor
fiaddl
jp
je
push
add
add
add
or
pmuludq
adc
pop
add
outsb
shrb
add
enter
ljmp
jne
testb
mov
or
pop
inc
andl
push
mov
daa
inc
lods
mov
add
add
or
inc
lahf
mov
jge
sti
dec
in
inc
pop
mov
add
mov
sub
jne
or
test
hlt
cmp
sbb
and
pop
fsubrs
jg
subl
and
and
mov
ja
pusha
mov
in
mov
aaa
loope
xor
xchg
or
dec
cmp
mov
jge
repnz
add
push
sbb
loop
sbb
mov
bound
movsl
lcall
add
cmp
cmpb
fiaddl
mov
adc
jnp
mov
andl
stos
mov
adc
test
add
push
mov
xchg
inc
les
cmp
sub
call
fs
pushf
mov
lahf
lret
fisttps
cltd
in
mov
and
mov
mov
nop
adc
fists
call
jp
or
out
inc
fiadds
push
sub
aas
int
and
add
aam
ljmp
sbb
push
cli
dec
jne
mov
fwait
push
cmp
mov
xor
inc
int
push
push
cmp
aas
xchg
fstps
inc
mov
xor
or
push
add
jg
bnd
mov
incl
in
iret
pop
pop
fs
jp
mov
sub
sbb
out
fisttps
push
add
jg
repnz
incl
in
inc
inc
pop
test
aam
or
dec
lods
aas
or
push
sbb
push
jne
mov
nop
pop
sahf
cmpsl
scas
cmp
testb
mov
aas
jbe
insl
clc
push
out
es
push
push
cld
in
push
and
mov
lea
mov
popa
pop
pop
gs
rclb
fdivs
inc
test
push
clc
add
je
adc
inc
leave
mov
lcall
out
fmull
xchg
scas
sub
adc
inc
cmp
movsl
sub
jae
in
jl
leave
shlb
mov
pop
lock
xchg
push
xchg
adc
and
jge
in
stos
dec
lret
xchg
xchg
jp
aaa
dec
jo
add
pop
enter
cmpsb
or
cmp
and
sbb
cmpb
mov
and
jecxz
ss
jle
xchg
and
xor
fmull
es
or
dec
call
pop
mov
cmpsb
mov
lea
arpl
dec
shll
repnz
loope
imul
leave
adc
and
cmp
jmp
pushl
mov
jae
or
addr16
cltd
jmp
insb
and
aaa
ret
lods
fs
into
cmc
sub
jns
in
adcl
sahf
ret
dec
jne
popa
test
or
cmpsl
iret
addr16
les
insb
jl
clc
call
mov
dec
incb
je
int3
call
movsb
aam
xchg
cltd
dec
mov
js
lock
fstps
bound
xor
jae
mov
fdivrl
mov
gs
out
dec
dec
iret
lcall
dec
rcpps
ljmp
leave
in
inc
add
cmp
hlt
movsl
movsb
cmp
outsb
inc
gs
lock
in
jb
gs
and
and
jbe
fsubl
dec
dec
dec
dec
inc
add
dec
fwait
xor
xor
jns
mov
ja
cld
mov
push
xchg
mov
and
and
and
ja
jle
arpl
mov
fists
mov
sub
daa
dec
mov
cmp
dec
inc
xor
outsb
dec
fcoml
bound
in
push
arpl
outsb
ficoml
dec
mov
data16
out
jnp
mov
test
lds
fistps
mov
movsb
movsl
into
inc
gs
and
mov
cmp
leave
scas
je
inc
loopne
jmp
sub
push
idivb
mov
cmp
pushf
jmp
cld
rcrl
mov
int
mov
or
sub
shrl
jns
push
mov
pop
je
inc
rcrl
push
cmpsb
dec
repz
out
pop
jb
scas
mov
loope
and
push
push
push
or
ret
xchg
or
cltd
cmp
dec
or
mov
push
xor
into
into
jo
leave
jbe
pop
jno
popa
cltd
scas
test
dec
jno
stos
out
lock
and
cmp
jb
ficoml
sbb
stc
pop
lods
push
push
cltd
rcll
mov
cmp
mov
scas
mov
jp
cmpsl
stos
lret
pop
loop
outsb
andps
sub
in
in
lds
test
push
jecxz
lods
sub
pop
in
cmpsl
cmpsl
fisubl
xor
mov
xor
mov
mov
pop
mov
jp
inc
lds
comiss
fnstsw
pop
push
mov
jg
adcb
push
out
pop
mov
xor
test
int3
push
arpl
mov
arpl
mov
mov
jns
in
xchg
dec
sub
lahf
sbb
into
fdivrl
test
and
repz
xchg
lret
sub
xchg
push
push
mov
sub
mov
mov
leave
inc
xchg
int
cmp
call
insb
clc
inc
out
add
cltd
fwait
subl
xchg
sbb
sbb
sub
push
mov
loopne
or
icebp
xchg
and
cltd
xchg
sahf
xorl
jl
sbbl
xchg
pop
loop
inc
inc
dec
ss
mov
push
ss
xor
mov
push
daa
data16
test
fnstenv
into
jb
fs
rcll
shrb
pop
mov
xlat
jo
stos
push
sbb
imul
repz
lahf
jmp
adc
cmp
add
sub
sbb
xchg
and
fistl
jo
push
push
imul
out
mov
sub
fists
jno
ja
test
mov
or
sub
push
adc
cmp
scas
in
lcall
mov
pop
inc
in
aam
dec
adc
dec
fwait
xor
pop
in
mov
push
cmpsb
les
fwait
sbb
cmp
in
icebp
nop
sbb
sub
cld
les
cmpsl
dec
cltd
xor
cld
xor
inc
or
repz
es
mov
ds
mov
es
dec
inc
ret
sbb
test
daa
dec
mov
pop
push
cld
mov
or
sub
dec
jno
dec
int
pusha
xchg
mov
push
jp
int3
sbb
and
jnp
clc
sahf
dec
rcl
adc
int3
les
test
and
xorb
pop
jge
sbb
sub
push
pop
push
mov
cmp
sub
sub
orl
mov
repnz
dec
lret
xor
bound
int
stos
sub
add
ror
lret
rclb
inc
inc
cltd
jecxz
push
xchg
sti
loopne
cmpsl
sub
enter
pop
nop
mov
cmp
rorb
cwtl
lret
mov
xor
xchg
or
repnz
scas
push
xchg
add
push
cmpsb
add
cmp
movsb
movsl
sub
dec
outsb
dec
mov
dec
stos
mov
stc
shl
or
repz
hlt
adc
xchg
fwait
test
idivb
mov
and
shr
push
sub
adc
jle
sbb
cmp
xchg
and
xor
rclb
movsl
xchg
mov
add
adcb
call
and
dec
xchg
loop
js
jo
push
push
jnp
lret
call
stos
adc
xlat
movsl
clc
inc
cmp
xchg
cmpsl
push
mov
mov
bound
dec
push
pop
repnz
xor
adc
cmp
jno
sub
ja
jne
and
sub
shlb
dec
push
cld
test
je
movsl
bound
or
and
push
inc
jge
mov
mov
mov
jmp
inc
dec
lcall
push
mov
pop
push
adc
add
cmp
les
ret
movsb
xchg
add
and
aad
push
lret
ljmp
inc
mov
pop
test
xor
ljmp
in
enter
lret
daa
in
mov
add
repnz
inc
stc
das
test
movsb
pushf
fwait
xchg
dec
call
lret
push
sub
jmp
push
into
pop
gs
sahf
xchg
add
ret
pushf
xor
add
dec
lret
mov
xchg
xor
daa
or
push
sub
jb
xchg
cmp
sarl
jmp
sub
in
xchg
aaa
ja
or
daa
mov
jae
loop
cwtl
cmpsl
mov
ss
xchg
jmp
cmp
push
jb
pop
mov
arpl
je
mov
sub
repz
mov
cmp
push
rclb
dec
ret
push
pushf
xchg
xor
dec
xchg
dec
push
out
push
gs
sub
sbb
je
push
enter
cmp
cmp
sub
dec
adc
dec
shrb
cwtl
imul
aam
sub
and
xor
js
cltd
addb
popa
pop
leave
icebp
sub
icebp
popa
into
ret
test
out
stos
stos
in
mov
sbb
lds
testb
push
popa
aad
cwtl
jmp
mov
jge
sahf
xchg
stos
in
dec
sarl
pop
adc
aad
test
mov
lock
sti
add
in
aad
sub
test
in
sbb
movb
mov
mov
sub
sub
sahf
sbb
aas
popf
imul
loopne
sahf
ds
add
hlt
rcrl
push
add
gs
dec
add
sub
or
popf
in
pop
scas
mov
mov
icebp
xchg
cli
add
jp
pop
push
xchg
dec
dec
xchg
adc
mov
test
sbb
sub
mov
in
mov
xor
inc
mov
xchg
cmc
out
lret
adc
xor
adc
pop
push
pop
pop
pop
cmp
pop
push
cmp
sub
dec
mov
dec
dec
stos
lods
push
dec
mov
xchg
test
sub
ficoml
cs
inc
or
xor
and
jae
daa
dec
sbb
stos
out
test
jp
fisttps
mov
mov
insb
pop
insb
mov
pop
push
push
lock
or
sbb
cmp
arpl
add
pusha
ret
aam
enter
and
sbb
lds
aad
ror
shlb
pop
outsb
lods
adc
lahf
cmp
testb
inc
std
fmul
test
lret
aaa
xor
mov
dec
mov
and
mov
jge
gs
xor
jnp
mov
jp
xchg
sbb
pop
pop
xor
int
aaa
inc
push
inc
xchg
add
test
mulb
sbbl
push
xchg
push
mov
xor
push
mov
leave
add
jns
push
js
sub
ficompl
lods
lcall
stos
add
das
leave
cmp
insb
enter
push
push
xchg
stos
in
inc
lods
cltd
and
pop
gs
push
pop
lods
stos
sbb
negl
pop
ret
mov
jge
std
sbb
add
cs
in
mov
test
js
lcall
mov
inc
stos
xchg
xchg
jg
xchg
popa
cmp
mov
jmp
movsb
inc
mov
stos
mov
mov
mov
fmull
out
or
dec
mov
jecxz
sbb
inc
imul
push
lcall
dec
scas
push
gs
xchg
in
push
insb
dec
scas
rcrb
pop
cmp
pop
pop
push
sub
xor
dec
adc
mov
lahf
jge
push
fs
jg
or
mov
and
inc
shrl
inc
lds
jo
sub
sbb
mov
inc
pop
dec
into
or
push
das
scas
mov
pop
addr16
mov
inc
mov
outsl
jmp
mov
pop
fimull
mov
cld
mov
mov
daa
dec
enter
mov
out
pusha
out
not
cmp
lret
mov
mov
aad
sbb
cmp
dec
mov
mov
push
cwtl
or
cmc
mov
jae
scas
jnp
mov
dec
int3
mov
in
cmpsl
cmp
mov
xchg
in
add
xchg
aad
xor
outsl
loopne
int
mov
xor
int
or
ljmp
movsl
lret
pop
rcrl
sbb
mov
gs
xchg
stos
pusha
pop
mov
sti
or
push
jb
adc
and
xor
std
je
mov
pop
jecxz
pop
sahf
in
out
sub
xchg
in
mov
lods
andb
pop
pop
lcall
stos
sbb
xchg
rcl
fsubs
arpl
fcmovbe
xor
rorl
ds
into
aaa
into
je
lret
lahf
pop
testb
sub
xchg
fnsave
adc
inc
in
mov
cli
in
jg
in
dec
cmp
mov
push
test
jns
push
jle
lcall
loop
xchg
cld
jnp
sub
mov
mov
in
lret
pop
cld
loope
xacquire
lods
pop
scas
mov
scas
ret
ja
das
push
mov
daa
fidivrs
rolb
mov
jnp
or
jo
rol
and
push
decl
add
cmp
dec
aaa
daa
daa
dec
sahf
adc
adc
jne
sbb
popa
cmpsl
dec
lea
mov
dec
in
xchg
and
jmp
jmp
imul
mov
sub
and
test
das
stos
test
repnz
sub
les
push
and
fiadds
mov
movsl
cmp
jl
outsb
jle
push
andb
mov
sbb
pusha
pop
outsb
in
mov
sub
mov
pusha
dec
iret
lret
push
scas
mov
xchg
inc
mov
jle
cli
mov
repnz
dec
xchg
dec
iret
ret
insb
or
leave
sarl
xchg
out
loope
pop
shlb
pushf
lahf
fwait
xchg
stos
gs
arpl
test
std
loope
test
cmpsl
addr16
lret
int
jbe
jb
inc
add
dec
ja
and
jo
and
lahf
ret
sarl
aad
repz
cmp
mov
imull
imul
cmp
xor
daa
in
and
xchg
lahf
pushf
cld
mov
jno
addr16
dec
dec
jno
pop
stc
repz
cs
dec
fwait
jae
mov
imul
mov
sub
xchg
jns
jns
loop,pn
arpl
stos
test
mov
adc
icebp
fmuls
mov
or
mov
insl
sbb
cld
pop
jle
jnp
pop
insl
unpcklps
repnz
lret
cmp
aas
cmp
cld
shll
in
mov
clc
dec
dec
sub
call
add
dec
movsb
int
sbb
xchg
adc
pop
push
jns
cmpsb
mov
mov
sub
int3
jg
push
adc
add
adc
mov
mov
push
xchg
jnp
dec
or
fisubrl
jp
xchg
fistps
or
sub
sub
pop
cwtl
push
mov
jne
adc
sub
sbb
lds
cmpsl
sub
and
push
sub
mov
fwait
xchg
push
push
xchg
xchg
jns
repz
cld
pusha
out
stos
xchg
push
pop
xor
lret
pop
mov
loop
push
mov
pop
add
and
sub
and
push
push
test
xchg
cmpsl
pop
xor
and
push
jl
and
gs
cmp
xchg
mov
jge
jge
dec
cmp
enter
cld
insb
aas
aaa
mov
push
pop
cmp
loop
xchg
out
or
cmp
rclb
pop
cs
out
mov
insb
arpl
sub
sahf
jmp
fstps
add
push
fldlg2
stc
subl
mov
mulb
pop
fldl
jo
sub
push
cmp
xchg
out
cwtl
xchg
cltd
sub
movsl
pusha
clc
xchg
fcompl
pop
dec
mov
cmpsb
ffreep
jns
sub
lds
push
loop
inc
cld
clc
xchg
xor
les
sbb
repnz
dec
pop
fstl
adc
rolb
adc
xchg
xchg
sub
push
and
jecxz
in
iret
jne
or
xor
es
xchg
jno
mov
or
rcll
mov
add
iret
imul
sub
jbe
in
sbb
xor
mov
lea
cmp
pop
xchg
ret
lea
fs
stc
andl
and
jecxz
xor
rcrl
sbb
in
push
mov
mov
push
pop
popf
pop
push
mov
sarl
add
ss
imul
cld
dec
fmuls
pop
into
sbb
cmpl
dec
mov
sbb
sbb
mov
lods
lcall
jno
push
xorl
insl
mov
cltd
dec
pop
inc
adc
lret
imul
push
pop
enter
enter
inc
cltd
ret
jmp
sub
adc
xor
or
add
inc
dec
rolb
xor
xchg
cmp
cwtl
cs
cmp
stos
lods
lcall
loopne
sub
xorl
xchg
scas
loope
mov
into
xor
in
mov
adc
loope
push
daa
hlt
cmc
fiadds
jnp
sarl
sub
pminsw
repz
in
mov
or
adc
mov
lret
pop
xchg
push
mov
mov
repz
movsl
mov
add
es
inc
arpl
pop
mov
imul
jg
push
xchg
pop
cmpsl
inc
stos
push
mov
test
mov
fldenv
mov
stos
test
jl
loopne
test
mov
lret
xlat
in
jmp
mov
fadd
mov
or
sbbb
or
leave
and
and
mov
js
inc
fdiv
pop
iret
dec
mov
popa
repnz
fxch
and
mov
jne
jp
mov
push
mov
inc
mov
cwtl
sbb
mov
jmp
jo
pop
mov
jp
mov
mov
sbb
aam
pop
icebp
adc
dec
cmp
xor
adc
ret
lcall
sbb
loope
test
sarl
mov
rclb
and
xchg
cltd
mov
xchg
pop
sbb
cmp
dec
cmpsl
icebp
pop
es
daa
mov
aad
xchg
add
xchg
test
mov
psrld
addr16
loope
xchg
mov
xor
fiaddl
popa
stos
cmpsl
mov
xchg
mov
add
pushf
out
push
push
repz
les
adc
lret
vsqrtpd
in
cmp
cmp
xchg
pop
push
push
lret
pop
pop
sub
out
js
inc
or
cs
dec
ret
pop
adcl
mov
push
mov
pop
shrl
or
pushf
and
jae
mov
movsl
push
mov
out
or
or
mov
dec
addr16
loop
dec
cmpsb
and
repnz
out
dec
dec
sub
adc
aam
insl
shr
sbb
inc
mov
sbb
xchg
gs
dec
mov
lret
jo
lahf
pushl
fstl
jecxz
out
add
xchg
scas
push
or
ds
adc
fcomps
aam
gs
jne
mov
push
inc
cli
lret
push
std
cltd
fistpl
or
rcrb
mov
sub
mov
jb,pt
fadd
lret
fildll
mov
loope
adc
cmp
sbb
sub
fildl
jge
push
out
mov
fwait
adc
cmpsb
sbb
mov
shl
inc
push
in
or
outsb
push
dec
fsts
mov
jp
jle
pusha
mov
incl
jge
cmpsl
dec
frstor
lcall
mov
jg
sub
scas
js
pop
insb
pop
notl
mov
cmp
mov
mov
push
je
lock
adc
out
div
insl
jbe
jecxz
ljmp
out
sub
js
fwait
jne
sbb
aad
stc
loopne
and
pop
into
mov
pushf
sbb
sub
push
xor
cli
shlb
das
ss
mov
cli
jbe
das
out
cwtl
jns
jae
fsubr
mov
mov
sub
sbb
or
jg
fcmovb
ficomps
jp
loope
jno
jmp
xchg
pop
loop
lds
imul
jnp
xchg
sbb
add
fistl
jecxz
mov
repnz
fildl
jmp
jl
adc
movsb
and
into
dec
xchg
lcall
mov
jns
ja
and
or
sub
jne
jne
or
cmpsl
ficompl
dec
ljmp
in
lret
ljmp
mov
repz
mov
pop
ret
js
pushf
pop
es
xchg
mov
aad
mov
aad
pushl
pop
fs
fcomps
in
enter
jmp
jno
jp
xchg
mov
ret
cs
mov
fnstsw
scas
mov
ds
mov
imul
adc
lahf
sub
fstpl
rcr
outsb
pop
pushf
jbe
sub
in
shr
lret
ret
cli
mov
jmp
leave
sbb
pop
testb
jnp
mov
cmc
pop
jecxz
std
mov
cs
loopne
sahf
push
mov
arpl
loope
inc
jo
adc
ds
mov
sahf
jle
push
dec
pop
popa
dec
stos
iret
scas
loope
xchg
aas
loop
sti
mov
out
jnp
test
iret
arpl
fisubl
cld
mov
mov
pop
sbb
popl
mov
fisubrl
loop
js
mov
mov
or
or
ja
or
push
imul
aas
pop
neg
fisttpll
xchg
ja
mov
out
notl
ljmp
lods
fabs
fwait
mov
mov
imul
int3
mov
jecxz
sti
xchg
dec
sub
add
pushf
jo
mov
mov
pop
pop
mov
xchg
ja
idivb
sarl
imul
jbe
rorl
repz
popa
sub
pop
or
outsb
lahf
ds
loop
xlat
jecxz
daa
mov
mov
outsl
xchg
sbb
out
int3
sahf
mov
xlat
scas
pop
jg
repnz
mov
add
xchg
and
mov
mov
sbb
js
sti
dec
and
cmp
movsl
pop
xchg
es
ret
pop
push
ret
js
lds
test
out
add
scas
mov
das
inc
mov
push
movsl
cmpsb
lods
mov
dec
lea
pop
in
cmp
jmp
aaa
pop
cld
mov
bnd
xor
jecxz
jge
dec
mov
aad
test
xor
js
les
jo
lods
mov
ljmp
inc
loop
cltd
push
dec
aaa
xchg
fnsave
mov
jl
fimuls
in
and
sti
mov
mov
jg
adc
out
je
jmp
cmp
push
dec
pop
sbb
mov
icebp
mov
in
mov
imul
sahf
jae
mov
sahf
sub
mov
inc
mov
ljmp
popa
and
lea
jns
ljmp
inc
sub
pop
popf
mov
mov
pop
mov
pop
cmp
clc
insl
xchg
movsb
mov
je
fdivl
jbe
cli
mov
pop
stc
into
fcoms
shl
mov
lods
lock
mov
cmp
jnp
test
stc
xchg
popa
and
out
hlt
sub
in
cltd
push
push
jle
jmp
mov
movsb
pusha
hlt
cmpsb
mov
enter
movsb
call
pmovmskb
test
rcrl
xchg
imul
dec
inc
testl
outsb
mov
mov
out
hlt
cmp
mov
pop
mov
push
inc
pop
jl
outsl
addr16
sub
out
insb
dec
fdivl
shrb
lea
jbe
decb
inc
sbb
js
leave
lret
stc
loopne
loop
test
sub
lea
stc
icebp
adc
pop
mov
mov
mov
cli
lret
cmp
insl
not
out
pop
cli
pop
lret
in
jnp
imul
xlat
mov
inc
mov
dec
mov
clc
bound
cld
fs
inc
xchg
adc
out
xor
jbe
mov
movsl
mov
mov
cld
lahf
cli
stos
stos
in
xor
jno
popa
scas
add
or
out
stc
mov
iret
cmpsb
or
sbb
mov
jns
out
pop
lea
scas
push
aaa
push
dec
cmp
shlb
lret
mov
loope
jno
mov
enter
mov
pop
sbb
xchg
jae
outsb
sahf
adc
addr16
inc
sahf
cmp
adc
js
xor
aad
pushf
pop
adc
mov
scas
mov
or
mov
push
xchg
push
xchg
cltd
xchg
xchg
lcall
mov
pusha
popa
jno
mov
xchg
mov
xchg
sahf
sub
xchg
sub
xor
roll
mov
pop
aas
pushf
mov
or
test
jno
faddl
jle
jp
je
hlt
inc
out
or
pop
mov
imul
push
adc
clc
pop
inc
mov
or
insb
push
add
in
jo
jns
sbb
mov
cmpl
xchg
jno
fbstp
les
xor
test
loope
lahf
or
bound
divl
and
pushf
aas
sbb
out
inc
fmull
inc
insb
cmp
add
test
in
imul
pop
adc
mov
pushf
mov
mov
xchg
ja
xchg
push
push
jno
out
inc
sbb
popa
addr16
jno
cmpsl
cmpsl
popa
outsl
pop
xor
lahf
iret
mov
ret
inc
mov
push
pop
and
arpl
inc
cmp
loopne
xchg
in
loop
cmp
cwtl
outsb
aas
mov
mov
imul
dec
pusha
sub
loopne
sarl
adc
int3
push
cs
dec
adc
fdivs
in
pop
scas
dec
aam
gs
jo
pop
xorl
lret
push
push
push
dec
dec
push
cmp
lea
push
add
mov
mov
repnz
jnp
popl
mov
xchg
js
out
ret
lods
xor
loop
test
xchg
xlat
ret
pop
icebp
fnstsw
inc
mov
jl
leave
push
iret
lea
loopne
push
jg
and
mull
push
mov
faddl
fcoml
jnp
mov
cs
rcll
mov
or
out
stos
in
test
inc
pop
sub
push
cmpsb
push
push
pop
or
loop
call
ret
and
sahf
sub
out
lea
je
jne
arpl
decb
scas
bound
por
sub
mov
js
fdivrl
int
pop
xchg
shl
ret
add
mov
jno
orb
or
es
outsl
mov
in
mov
xchg
jns
lods
idiv
mov
ja
jno
loop
pop
cmp
add
cmp
or
ret
sahf
mov
xor
out
stc
xchg
loope
mov
imul
popf
std
cmpb
insl
sub
push
stc
push
and
mov
jno
sbb
sahf
push
ss
sub
sbb
out
subb
call
lret
aam
dec
andb
scas
ret
xor
int
xor
lret
and
xor
iret
adc
imul
ret
lret
shrl
daa
inc
mov
jo
push
out
sub
cmp
mov
gs
sbbb
cmp
jl
jecxz
fs
sub
lret
push
lods
rorb
mov
bound
xchg
les
jg
daa
push
sbb
out
xchg
js
mov
js
arpl
ljmp
mov
jle,pt
jle
lret
mov
push
pmaxsw
leave
jno
jnp
test
jnp
xor
mov
mov
jecxz
dec
fwait
pop
jns
dec
lahf
and
mov
xor
test
mov
push
mov
sub
ds
into
add
js
or
ret
mov
mov
gs
mov
xchg
jl
or
mov
jno
mov
ds
stos
pop
bound
aaa
add
xor
gs
fwait
adcb
scas
cmpsl
loop
push
mov
mov
cmpsl
jecxz
push
in
repnz
fmuls
hlt
mov
leave
jno
leave
mov
mov
pop
dec
jne
adc
mov
xchg
and
inc
pop
inc
scas
jnp
clc
and
mov
je
mov
stos
lods
and
dec
dec
popf
cmp
cmp
adc
cs
in
mov
xchg
xchg
adc
xchg
mov
mov
jae
xor
mov
popf
pop
out
inc
mov
mov
jo
cmp
push
xchg
xchg
pusha
cmp
push
jnp
gs
repnz
test
or
xchg
es
cmp
xchg
xchg
lods
push
mov
xchg
shrb
cmpsl
pop
cltd
jae
outsl
adc
xor
ret
fnstenv
sub
jecxz
cwtl
out
fldenv
adc
jo
pmaxsw
jecxz
cltd
out
dec
bnd
jl
pop
xor
push
jecxz
xor
mov
aas
lea
call
xor
dec
cmp
rol
xlat
mov
xchg
cmpsb
fnstsw
fistpll
or
jl
lds
out
cmp
mov
cli
ficoms
cmpsb
or
pop
lret
cwtl
dec
inc
das
jg
repnz
in
inc
pcmpgtd
pop
jae
gs
outsb
sarl
lret
xchg
imul
leave
int
sahf
dec
scas
jle
push
scas
mov
cld
dec
scas
sti
mov
lock
mov
push
addr16
repnz
adc
dec
imul
jge
and
or
cmp
addr16
mov
out
inc
dec
ja
inc
mov
loop
or
movsb
imul
jb
outsl
leave
pop
and
sahf
pop
clc
xchg
imul
xor
sbb
push
cmp
push
insb
cmp
jno
jmp
inc
mov
cs
insb
in
mov
bound
push
insb
mov
out
and
and
mov
dec
sbb
shr
enter
mov
lcall
push
rcrl
arpl
sub
push
out
pop
stc
scas
xchg
addr16
sahf
fsubrs
or
jg
pushf
mov
hlt
cmpsl
and
dec
subb
ds
jge
pop
and
push
lock
dec
pop
je
jge
push
adc
jnp
cs
sbb
jmp
push
test
mov
fdivl
cmp
cmp
mov
ja
push
add
xor
je
pushf
neg
push
add
cmp
daa
and
lret
loopne
push
lock
andl
imul
cmp
icebp
sub
dec
outsb
push
add
lret
notb
lods
xor
ja
les
cwtl
dec
cmp
loope
and
push
lds
push
push
dec
lds
adc
xchg
dec
loopne
insl
cli
cmp
or
jnp
mov
jge
cwtl
aad
pop
sub
cmpl
mov
mov
pop
lea
loopne
jmp
sub
popf
std
rcr
mov
sbb
cmp
das
pop
sub
jo
arpl
pop
cmc
rcl
imul
icebp
insl
mov
pop
adc
icebp
popf
mov
out
negb
addr16
pop
neg
pop
cmp
stos
pop
sbb
std
inc
dec
fildl
push
test
adc
std
inc
pop
sub
test
shlb
imul
imul
dec
fwait
inc
test
or
sub
mov
xchg
mov
push
lods
adc
mov
addb
pop
xor
push
mov
xor
out
mov
int3
sahf
jmp
ja
out
ds
jno
cmc
cmp
mov
mov
cltd
jae
adc
loop
pop
bound
mov
subl
iret
pop
xor
sub
lret
cmpsl
fcmovne
dec
icebp
inc
insb
mov
popa
addr16
mov
addr16
out
xchg
fdivrp
push
loope
ja
out
xchg
cltd
imul
insl
fnsave
xlat
addr16
pop
mov
les
dec
sahf
pop
xchg
leave
cmp
loop
cmpsl
lret
mov
mov
xor
inc
ja
testl
imull
arpl
clc
out
fdiv
mov
pop
lahf
iret
mov
aaa
jg
jp
scas
cltd
popa
in
dec
dec
out
iret
scas
mov
sahf
dec
mov
repz
xor
arpl
addb
xlat
loop
sub
rorl
and
stc
xlat
les
inc
cmc
add
pop
aas
mov
cmp
dec
fldt
scas
cltd
cltd
dec
iret
pop
push
mov
aam
jl
loop
pop
sti
shrl
scas
leave
lock
xchg
loope
mov
sbb
sub
outsb
mov
into
jbe
icebp
jl
icebp
icebp
or
cltd
mov
inc
fs
lcall
aad
aad
pop
jmp
ret
lret
aaa
xlat
mov
dec
std
loopew
fucomi
js
dec
pop
jmp
arpl
jl
jmp
pop
adc
pop
add
popa
jno
mov
xchg
mov
cmpsl
lret
pop
minps
leave
mov
andb
mov
lcall
cli
jmp
ret
les
xchg
jp
xchg
jp
jp
aad
mov
dec
arpl
cwtl
xchg
cmc
pop
cmp
icebp
out
push
test
ror
shll
sub
jbe
sti
cmpsl
std
mov
shll
mov
aas
in
ja
or
mov
pop
cli
test
fmuls
mov
loope
and
mov
xchg
jnp
loopne
fildll
push
pop
jae
and
repz
jae
lods
lock
data16
clc
xor
sbb
ret
sub
jl
mull
addr16
rep
out
clc
into
mov
js
out
mov
lods
lock
movl
push
push
clc
xor
ret
jmp
cmp
adc
mov
shrl
sub
fnstenv
loopne
lds
cmpsl
jge
and
jecxz
pop
hlt
cltd
les
ljmp
loope
pop
stos
sbb
in
imul
fstps
aas
stos
into
into
clc
jmp
jnp
mov
popf
popf
icebp
mov
pop
incb
in
xor
jle
sti
ficomps
push
daa
mov
iret
push
adc
pop
fsin
int
jns
pushf
mov
std
fdivl
scas
xchg
pop
ja
jns
dec
fsubrs
lock
aam
stos
mov
ss
adc
fldl
in
dec
fbstp
scas
fldt
negl
jle
jle
test
mov
testl
xor
cld
jg
jp
data16
loop
jmp
aaa
ja,pt
shll
mov
in
mov
ja
pop
rcl
enter
xor
cmpsb
pop
xlat
pushf
std
or
repz
sarl
iret
scas
sbb
xacquire
cmp
rcr
out
adc
jle
cwtl
outsl
mov
pop
pop
std
mov
jle
cwtl
jns
sub
icebp
mov
aam
ja
pushf
mov
data16
ja
pop
mov
pop
cld
jecxz
mov
rorb
cs
cmp
push
xchg
jmp
jb
mov
mov
mov
out
xchg
out
pop
cmpb
std
in
xchg
sbb
adcl
cmp
adc
movsb
sub
sarb
scas
insl
cli
icebp
mov
lahf
add
outsl
sub
or
push
mov
ret
xor
fwait
rcr
or
mov
ljmp
mov
cmc
cmp
mov
idivb
xchg
adc
xor
aad
mov
and
ljmp
or
ss
lahf
or
cmpsl
cmp
fnstenv
and
test
out
add
sub
outsl
mov
repnz
mov
push
in
jge
adc
out
aad
shrb
ret
fldl
mov
hlt
dec
outsb
cmp
xlat
jns
push
out
pop
mov
and
int3
test
mov
pop
mov
adc
xor
bound
fsub
loop
or
jmp
pushf
jl
daa
sub
xchg
xchg
lahf
jle
cmpsl
mov
fbstp
je
pop
addr16
int3
cld
loopne
jae
lcall
ja
aas
pop
les
into
scas
adc
pop
pop
mov
xor
sahf
rcl
adc
pop
mov
shll
out
test
hlt
push
dec
js
mov
jmp
push
mov
jns
shlb
mov
imul
jno
add
inc
mov
cmc
and
jnp
xchg
push
push
push
mov
and
ljmp
and
jmp
test
cmpsb
fnstsw
xchg
jns
std
mov
cmpb
cltd
out
stos
pusha
sahf
lods
sub
bound
pusha
mov
std
lret
jo
jb
and
add
cmc
jb
xchg
pop
js
xor
pop
leave
mov
cmpsl
sbb
movsb
mov
push
add
xor
mov
insb
cmp
pop
add
out
aad
rcll
xchg
push
inc
fidivrl
scas
dec
out
push
mov
pop
cmc
ret
xor
xchg
mov
stc
xchg
rep
ficoms
push
push
adc
ds
and
push
jle
mov
mov
push
js
fidivrs
fcompl
push
pop
outsl
sub
aaa
pop
xor
mov
mov
adc
data16
orl
repz
scas
loope
add
and
or
arpl
ss
pop
cmp
sbb
cld
cmpsb
repnz
add
mov
icebp
mov
js
ret
icebp
jecxz
inc
rolb
pop
cwtl
pop
scas
push
inc
mov
push
leave
lar
pop
and
test
lods
xchg
pop
adc
or
cli
repnz
pop
call
jl
cmp
jmp
jmp
fdivs
or
icebp
shlb
fnsave
sub
mov
mov
lret
dec
dec
into
dec
repz
outsb
sub
scas
pop
xor
daa
in
fs
jecxz
inc
ja
jns
out
mov
ljmp
insb
outsl
sbb
cmpl
fnsave
rcr
fmuls
loopne
cmp
mov
scas
mov
add
adc
cmovnp
push
in
dec
lods
push
out
jnp
stos
icebp
mov
outsb
insl
mov
lcall
out
inc
insb
push
xchg
repz
lcall
inc
xchg
inc
lret
popa
mov
shl
jmp
lcall
imul
ja
cmp
xor
inc
imul
or
mov
sbb
and
paddsw
fsubs
inc
sbb
fisttpl
cmpsl
scas
mov
lock
add
mov
ret
pop
dec
jae
mov
dec
insl
popa
dec
aam
fnsave
data16
mov
daa
pop
ss
cmp
sbb
jb
ss
mov
adc
outsb
lock
jae
push
int
insl
jmp
and
or
popf
fisttps
lret
bound
popa
xchg
dec
repnz
mov
and
jp
or
push
daa
push
repnz
push
sar
jmp
mov
xchg
iret
sub
shl
jl
and
notb
insb
pop
ret
or
pop
xor
sbb
pop
push
pop
sbb
cwtl
ret
jmp
stc
aam
jno
fsubrl
fadds
in
ret
and
fdivrs
aaa
pop
ja
add
arpl
stc
stc
push
test
push
pop
jb
popf
fmuls
rclb
addb
add
arpl
xchg
aad
addr16
and
lret
inc
in
das
pop
xchg
out
or
in
sbb
sub
dec
out
jecxz
cmp
sbb
xchg
pusha
out
shll
jle
in
jg
lcall
stos
or
outsb
subb
xlat
dec
lock
cmp
mov
sbb
popa
or
sahf
in
hlt
sahf
xchg
daa
mov
cmp
mov
cmpsl
mov
iret
cmp
in
mov
icebp
xchg
fwait
ss
int3
repz
fistpl
leave
mov
pusha
mov
outsb
mov
pop
xchg
adcb
shrl
or
fwait
pop
scas
pop
pop
imul
daa
cmp
outsl
call
fwait
jbe,pt
int
jle
je
fistpll
fmuls
dec
jecxz
xor
fnsave
pop
mov
push
pop
fxch
pop
lahf
jo
mov
pop
loope
push
cmp
lahf
jns
rorb
pop
and
pop
sub
mov
xchg
push
push
cmp
std
imul
stos
repnz
lock
dec
into
repnz
test
mov
fistpll
lock
sbbb
clc
int
test
pop
inc
cmpsl
push
fnstcw
into
pop
pop
inc
mov
or
stc
jecxz
fs
or
sub
mov
mov
xor
jg
inc
dec
fcomps
jg
ror
sti
pop
das
out
xor
mov
popa
xchg
lods
cwtl
outsb
loopne
dec
call
mov
jge
dec
fucomip
shrl
or
pop
xor
js
or
jecxz,pt
pop
push
jge
cmpb
xor
cmc
adc
mov
jle
push
mov
orb
hlt
push
loop
dec
add
jmp
jg
gs
sbb
fstps
or
xlat
inc
stc
fistpl
sub
dec
xor
rolb
adc
pop
lahf
fistps
mov
shll
out
xchg
fmull
cmp
jb
sbb
and
inc
cmp
out
fldcw
outsb
ret
mov
insb
scas
ret
test
gs
add
jbe
in
sub
jbe
adc
sub
fildll
cltd
jp
pop
ret
xchg
pushw
das
push
inc
xchg
xchg
iret
imull
clc
sahf
pop
mov
xchg
pop
fcomps
outsb
push
gs
cs
emms
jge
hlt
ds
cmp
sahf
repz
daa
jne
hlt
or
les
mov
pop
ja
sarb
add
adcb
rol
mov
mov
mov
or
int
icebp
dec
nop
fdivrl
int
and
insb
xlat
add
cltd
int3
xchg
test
pop
out
ret
shrl
fsubl
hlt
mov
mov
adc
or
cmp
sbb
cmp
js
sbb
mov
stos
jle
ret
ss
shll
jmp
out
cld
sbb
lea
arpl
cmp
or
enter
lret
dec
mov
scas
ds
jo
andb
nop
sahf
mov
rcrl
pusha
lods
inc
int3
imul
shll
push
loop
cmp
fdivl
out
sbb
shrl
inc
cmpsl
scas
or
pushf
xor
mov
outsl
scas
pop
in
xchg
arpl
cmpsl
jg
fbstp
xchg
notrack
xchg
mov
je
ds
addb
push
lahf
pop
xor
mov
jbe
mov
mov
fldt
imul
push
mov
roll
mov
aam
movsl
adc
pop
sub
test
push
dec
pop
inc
popa
sub
push
pop
pusha
popa
stos
dec
aas
mov
stos
cmp
inc
lret
fistpl
mov
mov
aaa
cs
mov
or
mov
jecxz
jb
std
neg
pop
cmc
push
dec
xor
clc
fdivrl
add
pop
push
repz
daa
mov
ds
aaa
pop
adc
fistps
mov
lds
jg
rep
fdivr
mov
pop
mov
cld
mov
sbb
push
xchg
stc
outsl
xchg
cli
xlat
mov
fsubrl
fildll
push
xor
jmp
sti
pop
sbb
lcall
push
add
ljmp
sbb
test
in
aas
mov
scas
in
sbb
xor
test
lret
in
imul
out
in
ret
or
cmc
mov
mov
icebp
icebp
scas
cmp
jno
xchg
mov
cmpsl
out
mov
pushl
add
std
ror
jl
or
in
clc
loop
pop
in
jl
xlat
xlat
push
stc
jp
mov
outsl
cmp
dec
ds
fcmovnu
stc
outsb
ljmp
aas
repz
ds
mov
dec
pop
sahf
jnp
test
das
mov
cld
fxch
paddd
xchg
pop
push
ljmp
out
shr
push
cli
loope
mov
jmp
scas
inc
jmp
mov
jg
std
out
out
test
fisttpll
cmpsl
xchg
das
mov
movsl
or
dec
xlat
mov
xlat
xchg
lret
cmc
test
pushl
mov
or
loope
je
adc
push
xchg
pop
xchg
loope
pop
jno
cmpsl
leave
jg
cs
push
xchg
loop
or
rcll
mull
pop
push
out
xchg
les
sarl
int3
outsl
xchg
inc
mov
sbb
xor
inc
icebp
pop
aam
cld
shlb
data16
popl
mov
mov
aad
aaa
call
pop
inc
jle
out
inc
in
push
or
push
mov
fldt
aaa
and
sbb
push
xchg
fcmovb
push
jl
mov
ds
shl
call
dec
jnp
mov
xlat
subb
outsb
clc
xchg
jl
nop
sbb
jmp
jecxz
sbb
cltd
mov
push
mov
sbb
iret
or
push
ds
mov
mov
test
roll
imul
xor
mov
mov
jmp
orl
jmp
mov
lea
cmp
jno
sbb
fsubrs
jp
dec
mov
insl
mov
lods
stos
pop
pop
dec
fisubl
loop
aas
mulb
pop
sbb
lds
dec
and
icebp
pop
or
sub
push
cld
addl
test
inc
sbb
cltd
sbb
dec
fsubrp
call
xchg
les
rcrl
inc
add
in
addl
cmp
rorl
shll
sbb
iret
fcmove
xchg
mov
js
fsubp
test
adc
sti
mov
mov
mov
pusha
xor
stos
ret
adc
lret
hlt
mov
cmp
mov
cld
hlt
jno
dec
mov
pushf
arpl
pop
cltd
jl
in
pop
xchg
dec
xor
js
faddp
push
das
mov
in
cmpsb
pushf
arpl
in
ret
loope
sbb
cltd
xor
pop
es
xchg
out
scas
cmpsb
mov
xchg
outsb
sahf
ds
test
imul
pop
popl
icebp
jmp
lods
mov
push
das
xor
lods
lret
mov
mov
pop
push
ss
lods
mov
outsl
mov
jne
cmp
das
lea
xchg
leave
test
jle
mov
scas
push
push
add
mull
stc
cmp
xchg
push
nop
fildll
daa
jge
enter
aad
sbb
inc
mov
arpl
jne
sub
dec
sbb
test
lea
push
stos
push
xchg
push
mov
paddsw
xchg
push
scas
or
pop
repnz
test
inc
arpl
int3
fwait
xor
test
mov
push
add
negl
in
jmp
mov
pop
lea
loope
clc
push
pop
mov
aaa
imul
sbb
push
mov
xor
xor
push
inc
lea
aad
lea
push
and
jne
inc
sti
xchg
ljmp
push
sub
jno
fisubrl
jno
ljmp
push
xor
push
adc
xor
hlt
or
add
xlat
add
pop
mov
add
push
xor
fildll
pusha
xor
lods
pop
jl
push
mov
aad
mov
jg
and
lsl
and
jp
bound
lods
jmp
jge
fisubs
ret
cmpsb
and
es
jmp
push
sahf
push
js
out
ret
add
mov
adc
mov
mulps
xchg
cmpsb
out
aas
pop
or
icebp
adc
xlat
loope
add
fmuls
cmp
cld
cli
stc
js
inc
or
out
pop
mov
cli
int
cmp
sbbb
test
xchg
inc
leave
into
lret
shlb
sbb
mov
repz
mov
sub
clc
popf
pop
out
popf
loope
adc
pusha
cmpsb
cmpxchg8b
jl
mov
hlt
dec
jae,pt
pop
dec
adc
shll
sbb
inc
or
repnz
fsubrs
mov
dec
js
dec
outsb
and
ds
mov
xlat
adc
xchg
jno
shll
outsb
cmp
lahf
lods
dec
shrb
outsb
adc
bound
fsubr
out
fdivl
in
mov
xor
jge
in
imul
xchg
outsl
outsl
pop
lret
jle
push
cmp
pop
mov
hlt
in
cli
xor
iret
movsl
stos
leave
out
iret
xchg
xlat
loopne
out
pop
pop
mov
pop
xor
cwtl
cmp
in
cwtl
call
xchg
fidivrs
insl
icebp
repnz
sub
in
fs
jbe
xor
xchg
ss
mov
mov
sbb
pop
fdiv
hlt
clc
int3
out
inc
inc
cmp
xchg
dec
enter
arpl
gs
mov
fsubrs
pop
ja
jge,pt
stc
sub
or
call
pop
sub
stc
insl
mov
sahf
mov
shll
push
jmp
orw
mov
mov
and
inc
out
sti
test
aas
pop
fbld
sbb
fwait
xorl
and
clc
sub
cli
or
ja
iret
inc
fimuls
or
cltd
xchg
or
daa
jp
inc
mov
fdivrs
cmp
test
cmp
sbb
ret
jp
xchg
push
pop
pop
sbb
clc
dec
ds
and
cmc
jl
adc
pop
fmull
pop
into
add
xchg
daa
ss
jae
loopne
and
push
pop
iret
lahf
leave
int3
jle,pt
dec
jae
inc
or
sbb
jg
mov
test
dec
lds
std
nop
cmp
enter
fs
cli
fimuls
hlt
cmc
inc
jbe
ss
lcall
sub
sbb
or
movsb
or
clc
inc
pop
add
int3
add
fwait
call
fsin
adc
decb
pushf
push
sub
test
adc
movsb
adc
sbb
push
nop
mov
and
inc
nop
ret
nop
inc
nop
xlat
and
dec
or
or
cltd
pop
cltd
or
jp
mov
mov
rorb
test
inc
movb
clc
push
fadds
hlt
inc
jp
fwait
and
jns
leave
nop
ret
push
push
daa
fs
and
pop
add
sbb
in
sbb
lock
aas
or
scas
and
pop
stc
outsb
and
jae
xchg
push
push
movsl
call
jns
sbb
jae
bnd
out
lret
ja
int3
adc
mov
mov
mov
xchg
push
iret
cltd
loop
in
in
jle
sti
lret
xchg
int3
fwait
mov
jg
inc
jne
sub
orb
pop
stc
cmpsb
adc
daa
popf
js
loope
mov
es
xchg
or
push
sub
outsb
imul
repz
aad
or
add
out
push
iret
sahf
jle
push
jl
fists
clc
stc
ret
add
dec
pop
mov
xchg
ljmp
and
jmp
jge
pop
jge
sub
std
std
cwtl
gs
int3
jle
leave
pop
adc
fidivs
outsl
inc
mov
jbe
cmp
in
lcall
jnp
adc
sar
jl
nop
sahf
adcl
add
and
rorl
loope
movsb
int
mov
icebp
out
loop
mov
arpl
mov
add
or
fbld
dec
cmpsb
ljmp
in
jp
iret
pop
icebp
in
pop
call
mov
cmp
int3
in
mov
into
push
cli
test
jb
ljmp
push
dec
mov
outsb
cmp
jne
lahf
out
fdiv
lock
rorl
dec
lock
loop
inc
lahf
popf
mul
lret
cmp
jmp
pop
xchg
aas
cltd
push
cltd
subl
mov
jp
es
jle
icebp
pushf
repnz
popf
mov
mov
lret
mov
cmp
mov
jle
rol
movsb
sahf
dec
mov
inc
dec
jp
xchg
jg
jp
jnp
filds
mov
jmp
cmp
ds
mov
pop
jge
cmc
or
aas
jmp
aas
cwtl
std
loopne
mov
idiv
lret
pop
outsb
sbb
std
push
scas
jl
in
jae
jno,pt
xchg
aaa
mov
jg
cmpsl
cmp
faddl
ds
jmp
aad
outsb
fnstenv
dec
stc
movsb
loope
test
mov
pop
jo
mov
int
mov
mov
xlat
cmp
adc
mov
inc
dec
clc
mov
fdivp
cld
movsb
outsl
mov
repz
outsl
pop
outsl
std
enter
icebp
negl
out
aas
cmp
jno
mov
shl
outsl
cs
rorb
aad
movswl
outsl
ds
ficoms
pop
cwtl
hlt
stc
test
cs
cli
out
ja
jle
imul
lods
jg
xlat
push
cmp
jo
jg
jle
xchg
sbb
lahf
mov
push
pushaw
roll
jp
stos
clc
pop
mov
popf
push
outsl
les
push
scas
aad
cmc
fistpll
fidivrs
cmpb
movsl
or
insl
mov
lock
xor
jle
mov
hlt
iret
mov
jecxz
and
sub
mov
les
push
jge
push
fmul
shl
jb
test
icebp
call
imul
push
ret
js
cmpsb
insl
and
and
jecxz
popf
loop
mov
hlt
mov
xchg
cmp
lock
cmp
pop
dec
hlt
adc
inc
and
push
iret
pushf
mov
cmp
ja
lods
fisubrl
fcomi
jae
cmp
cmpsl
call
cmp
sbb
pop
cld
sbb
jle
xchg
shl
fiaddl
std
fs
insl
iret
xchg
lahf
clc
icebp
cld
mov
rorb
pop
adc
hlt
mov
stos
sub
sbb
and
push
push
ret
push
in
jbe
jne
push
loopne
cs
or
sti
or
ja
lahf
incl
inc
xlat
gs
adc
sar
les
dec
loopne
pop
cmp
mov
jp
xchg
mov
lcall
rcll
stos
push
jg
adc
ds
stos
lahf
pop
dec
ja
imul
fmulp
cmp
xor
jecxz
jg
mull
dec
xorb
mov
adcl
imul
dec
pop
sarl
clc
imul
pop
cmpsb
xlat
mov
dec
cmp
shll
dec
aam
cmp
les
add
push
cld
std
aaa
xchg
push
lea
sbb
jl
inc
or
and
fildl
gs
fcmove
in
lods
lds
in
pop
mov
inc
pop
adc
xchg
push
jns
lea
mov
mov
in
enter
mov
popa
arpl
xchg
sub
aaa
jl
jle
xchg
std
loopne
loop
rolb
pop
or
mov
leave
pop
dec
pop
cli
xchg
stos
lret
mov
mov
bound
ds
mov
insl
stc
inc
lahf
loopne
xchg
arpl
shrb
enter
daa
lahf
sub
jbe
fldln2
pop
push
pop
out
mov
fisttps
mov
shrb
loop
test
inc
mov
es
jmp
ljmp
dec
rcl
fldl
mov
sti
pop
xchg
fnstcw
sti
pop
movsb
testl
cmp
dec
jbe
int3
arpl
and
push
test
push
cmp
out
aad
nop
scas
xorb
nop
in
adc
gs
fsin
push
fisttps
or
lea
cltd
negb
jg
sub
xor
clc
mov
imul
dec
pop
and
shl
aad
inc
cmp
aas
mov
imul
leave
daa
daa
mov
jecxz
push
je
xchg
mov
cltd
cli
ss
stc
adc
sbb
jle
cmovo
arpl
movsl
mov
push
mov
mov
add
les
in
mov
push
xchg
sbb
xor
inc
fidivl
mov
and
pushf
jl
fstpt
mov
mov
stos
clc
mov
das
pop
cmp
fidivrl
or
add
and
stos
and
data16
repz
mov
jl
sub
hlt
insl
cmp
mov
iret
aaa
pop
xchg
mul
xorl
popl
mov
xchg
iret
sahf
lods
dec
jnp
loopne
ja
mov
inc
mov
dec
jnp
lret
addr16
movsl
incb
js
jb
insl
inc
jp
mov
jne
outsl
sbb
jge
iret
test
je
pushf
push
xor
add
aam
xor
gs
je
add
and
and
cli
jbe
hlt
xchg
jbe
adc
and
mov
pusha
arpl
clc
fsubl
dec
testl
aaa
fs
jne
xor
or
mov
cmpsb
or
mov
and
and
jl
add
sub
fsubs
outsb
sbb
mov
negl
in
jbe
cltd
fildl
pop
ret
icebp
daa
clc
jbe
int3
pusha
push
and
jb
sbb
ja
ja
fcomps
add
push
cmp
insb
fnstcw
mov
mov
lea
inc
movsb
jmp
in
add
fdivs
mov
je
rorl
cs
push
sub
insb
cmp
subb
lods
xlat
nop
push
sbbb
sbb
out
add
jg
cmpsb
jge
xlat
adc
mov
lahf
ss
loopne
sub
insb
jmp
movsb
mov
in
iret
mov
clc
push
cmp
out
jb
fnstenv
pop
loope
cltd
mov
sub
mov
xchg
xchg
outsl
mov
imul
outsl
sbb
push
repnz
ljmp
inc
jp
dec
jb
cmc
test
push
jae
insl
cmpsb
dec
pop
rolb
pop
aas
leave
int
rcl
cmpsl
int
loopne
in
insb
inc
mov
repz
dec
lret
es
nop
out
xchg
jge
pop
mov
aaa
stc
cmp
test
xorb
inc
int3
mov
mov
push
mov
sbb
and
add
repz
stc
insb
fnstcw
lea
xlat
popf
arpl
jle
daa
daa
lahf
sub
jbe
fpatan
int
mov
mov
xor
insb
cmp
push
xchg
pushfw
std
dec
xchg
inc
stos
and
pop
repnz
imul
dec
sbb
cmpsb
mov
or
fldt
in
movsb
testl
jecxz
mov
lahf
xchg
and
mov
out
jae
mov
adc
testb
aas
repz
mov
sbb
dec
enter
daa
jns
loop
fnstsw
cltd
test
ss
sbb
sbb
jecxz
pop
sti
ds
cli
push
xchg
maskmovq
mov
and
jns
xlat
add
mov
lret
bswap
cmc
mov
and
pushf
jl
mov
push
jg
lods
fisttpll
and
jl
dec
ds
mov
insl
xor
arpl
ja
inc
dec
xor
jo
fldenv
ret
icebp
push
pop
inc
fstpl
movsb
push
dec
sahf
shll
dec
cmp
add
pop
sub
sbb
fistl
and
fistps
jne
outsl
or
jge
push
jns
in
fnstcw
jmp
cld
cmpsb
sarl
out
movsb
lret
and
fsubr
mov
in
repnz
or
in
les
xchg
mov
sub
and
hlt
mov
mov
cmpsl
adc
test
aam
daa
sub
pop
inc
mov
pop
jo
fsub
sbb
mov
mov
mov
and
cmc
es
xchg
rcr
jmp
stc
lea
add
add
pop
cli
jp
ret
inc
xor
rclb
cmp
div
mov
nop
cmc
out
adc
mov
sbb
pop
cli
jmp
sbb
outsl
dec
in
ud2
stos
aas
cmp
push
or
add
add
sti
sbb
popf
or
mov
aaa
dec
mov
and
jo
rol
jbe
dec
popf
in
add
xor
jbe
or
or
adc
sbb
push
inc
adc
inc
lahf
loopne
loopne
aam
pop
repnz
in
adc
and
push
xor
cmp
stc
mov
pushf
test
mov
push
dec
fisttps
lcall
inc
push
sub
movl
enter
sbb
cvtdq2ps
inc
fisubrl
push
rclb
nop
mov
add
std
ljmp
lods
and
add
sbb
movsb
sbb
cmp
insb
iret
std
mov
or
jle
mov
inc
mov
in
bound
cs
mov
ljmp
adc
ss
jbe
imul
cmp
pop
add
testl
and
popa
and
shlb
out
dec
and
in
fsub
push
cmpsl
aam
add
into
cmp
insl
xor
and
mov
imul
test
add
aas
xorl
addr16
icebp
xchg
movsb
inc
sbb
xchg
dec
jp
nop
shrb
push
rcrb
xchg
jb
dec
enter
scas
out
ret
mov
negl
push
mov
jbe
jmp
mov
dec
pop
mov
popl
testb
repz
xchg
out
add
hlt
xor
and
jo
lock
loopne
loopne
loopne
pushl
pushf
sub
nop
jecxz
or
sbb
loopne
divl
sar
mov
jns
shll
mov
sub
mov
arpl
je
icebp
icebp
mov
pop
pop
out
push
mov
shr
pop
es
or
fdecstp
out
push
fistpl
fwait
rorl
cli
mov
test
mov
fmull
ja
aas
add
test
or
stc
imul
mov
lock
sarl
mov
arpl
mov
sub
into
fcomp
in
rorl
std
pushf
or
es
jnp
test
add
mov
add
movsb
aas
das
mov
jno
jg
lock
jl
shrb
dec
inc
jp
pop
dec
stc
dec
andb
scas
add
push
loopne
xchg
pop
and
push
or
push
enter
imul
enter
sbb
sti
xchg
out
push
jl
enter
adc
add
es
pop
sarb
cmpsl
rorb
jg
cmp
clc
sbb
dec
stc
aas
xorb
add
std
fisttpll
pop
dec
pushf
or
enter
xchg
je
nop
jge
xor
sti
insb
sbb
sti
lods
pop
xor
fs
jne
cmc
jno
jmp
stc
popl
cmp
out
and
mov
xchg
test
clc
jg
lock
jns
add
dec
stos
lds
test
push
test
mov
dec
mov
pop
nop
cmc
jmp
jl
enter
xchg
mov
add
jmp
mov
aas
lods
lret
ja
imul
mov
or
mov
shll
and
jbe
movsb
out
add
jle
sarb
xchg
hlt
dec
inc
jmp
jle
jno
xchg
sbb
push
inc
movsl
jnp
cld
pushl
or
mov
push
and
dec
xchg
movsb
imul
mov
inc
in
aaa
adc
ljmp
push
ds
sbb
mov
inc
daa
and
mov
push
je
mov
mov
adcl
xor
or
inc
mov
out
lock
not
lahf
and
jg
loope
inc
lock
inc
mov
add
out
stc
xchg
scas
xchg
repnz
jmp
pop
mov
sbbl
xchg
incl
lock
sbb
sbb
lock
nop
cmp
cmpsl
add
hlt
scas
add
hlt
mov
out
adc
sbb
in
js
movsb
das
xchg
repnz
daa
push
add
lods
add
insb
xchg
je
nop
arpl
pop
imulb
out
mov
rcrb
repnz
jb
fwait
push
xor
adc
mov
jmp
popf
cmp
sbb
xlat
test
test
cmc
cmp
jmp
mov
leave
mov
mov
sbb
dec
and
outsl
dec
insb
jo
push
jno,pn
ja
jo
pop
hlt
loopne
or
mov
loopne
arpl
pop
fbld
bndstx
shrl
in
xchg
repnz
push
pop
xor
dec
lock
test
scas
jmp
arpl
and
push
fs
jle
clc
addr16
aas
or
add
add
jo
xlat
out
shr
jp
subb
mov
nop
jne
aas
into
shl
jmp
cltd
jnp
add
jle
sbbl
pop
jo
push
cmp
aas
adc
hlt
insl
lahf
xchg
pop
sarb
arpl
pop
aaa
push
hlt
fildll
jns
outsb
xor
mov
hlt
xchg
fwait
inc
roll
mov
loope
jne
lahf
ret
mov
insl
mov
inc
push
gs
mov
pop
xorl
icebp
and
data16
pop
scas
das
and
inc
push
jmp
inc
or
fwait
xchg
pop
push
ja
lds
mov
mov
clc
mov
hlt
fsts
inc
cmpsl
sbb
pop
jl
xchg
push
leave
cmp
pop
jbe
mov
stos
scas
inc
insb
rorl
inc
outsb
int3
loop
icebp
loopne
pop
fdivrl
pmaxsw
lret
loop
jne
cmc
mov
fs
movsl
lahf
stos
shr
or
cmc
fs
jne
nop
jge
or
sub
mov
loopne
cmpsb
ljmp
or
mov
and
add
mov
pop
mov
inc
cli
std
push
rol
xor
jnp
dec
or
jno
mov
stos
cmp
adcl
lret
test
jp
test
clc
clc
daa
cmp
es
pusha
test
loopne
shrl
add
push
mov
imulb
pop
roll
fidivs
es
into
add
or
sbb
jo
xor
ret
bound
jp
inc
mov
sub
mov
fsubrp
adc
mov
pop
add
out
and
add
cmp
and
or
jge
call
sub
add
icebp
sbbl
mov
push
fadds
dec
lods
xchg
jp
add
jnp
insl
lock
dec
out
adc
and
mov
pop
repz
xlat
mov
push
imul
inc
mov
insb
and
adc
mov
repz
pusha
xchg
enter
movsb
das
mov
dec
or
aas
nop
mov
scas
add
lret
outsl
xor
jns
enter
nop
jae
mov
and
popf
jbe
movsb
or
mov
mov
enter
dec
mov
mov
daa
subb
aad
xor
inc
inc
fstl
rcrl
add
pushf
mov
in
inc
pop
pop
scas
xor
sbb
dec
jb
mov
scas
dec
subb
rclb
xchg
cli
es
out
cmpsb
mov
cmp
loope
inc
mov
popf
cs
addl
subb
or
cmp
push
popa
inc
lds
jmp
in
imul
inc
test
ss
test
ss
inc
fimuls
hlt
loopne
pop
fcompl
cmp
ret
sbb
stos
pushf
xor
mov
inc
andb
in
fisttpll
mov
test
test
repnz
mov
cltd
mov
imull
push
je
repz
sbb
ret
mov
stos
into
jge
jne
ja
cld
ds
sbb
ret
push
cmp
mull
jge
jnp
adcb
into
sbbl
insb
div
in
cmp
subb
sti
lds
fistl
adc
mulps
imul
in
fldcw
dec
pop
rcrl
push
lods
aam
popf
jle
or
jne
cmpsl
insl
jne
mov
cmp
movsl
lea
cmc
jno
lret
cmpsl
sbbl
out
push
mov
aas
test
lods
push
shlb
mov
das
push
mov
imul
push
and
jae
popf
sbb
sbb
lret
test
orl
or
pop
mov
jnp
push
adc
in
push
aam
mov
lcall
cs
push
mov
sbb
jno
mov
or
shrl
daa
sarb
dec
pop
insb
cltd
cmp
arpl
cmpsl
nop
in
scas
popa
in
rolb
mov
repz
lret
clc
push
test
mov
jge
adc
lds
push
add
cmp
adc
jbe
xchg
jp
push
fcoml
push
xchg
cmc
or
push
pop
jno
in
rclb
dec
andb
ret
pop
fcmovbe
out
pop
push
jge
adc
out
xor
stc
sbb
aaa
and
aad
sub
scas
jbe
or
ds
jne
or
or
or
fsubs
cwtl
adc
dec
lock
iret
or
add
out
jecxz
addl
jne
repnz
ja
mov
jae
data16
lock
sbb
fistpl
out
xor
ret
add
decb
icebp
mov
into
imul
and
inc
sbb
jae
nop
icebp
mov
mov
cmpsb
inc
out
cmp
in
jp
insb
mov
xchg
negl
arpl
sbbl
mov
ret
jmp
cmp
int3
pusha
sub
add
ret
mov
fdivs
out
lcall
and
xor
sub
push
scas
movsl
jp
cmp
lahf
test
jmp
rorl
arpl
js
nop
jp
inc
inc
popf
add
jne
sub
fdivs
hlt
inc
mov
xadd
iret
sbb
and
movsl
dec
adc
outsb
int3
loop
repz
pop
fdivrl
cmp
rcll
bound
jne
jnp
dec
sub
test
mov
loop
cmp
fcmovnb
gs
jl
insb
mov
jnp
insb
push
push
pop
xor
push
scas
aad
pusha
pop
xchg
in
inc
divl
jg
adc
pop
out
add
mov
push
jle
nop
out
stc
inc
into
sub
repnz
cmp
bound
add
adc
mov
iret
lcall
jle
mov
call
paddusw
loope
into
ret
clc
clc
std
cltd
mov
xlat
test
push
jmp
aas
cwtl
mov
mov
sbb
out
test
repz
mov
xchg
adc
stc
mov
repz
into
jne
cmc
push
or
inc
mov
xchg
notb
mov
mov
int3
xor
cmpsb
xchg
cmp
insb
leave
push
jbe
shr
push
test
es
mov
cmp
hlt
jp
test
gs
add
dec
mov
xor
pop
fistps
pop
adc
jg
mov
cwtl
call
shrb
pop
push
test
shll
add
lahf
jnp
mov
jbe
sbbl
mov
dec
orb
inc
xchg
js
hlt
pop
divb
jns
pop
shll
pop
mov
outsl
mov
sti
arpl
cltd
ss
mov
ja
dec
lahf
mov
push
fstpt
inc
xchg
negl
mov
jo
das
add
or
enter
lock
inc
into
mov
sbbb
movsb
popf
and
cmp
xorb
sub
mov
int3
subl
mov
mov
cmp
mov
and
int
repnz
adc
pop
xor
fcoms
bound
pop
mov
in
fdivrs
xchg
sarl
push
fdivs
jae
popa
aam
xlat
push
mov
mov
notb
xor
inc
xchg
ret
sbb
pushf
repz
mov
dec
out
or
hlt
pop
cmc
or
cmp
mov
bound
push
inc
test
nop
push
dec
add
pusha
outsb
fucomi
hlt
dec
outsl
jb
mov
aad
call
in
insb
iret
arpl
mov
pop
out
inc
lcall
push
pop
daa
jb
sub
sti
dec
outsb
dec
ljmp
inc
addr16
je
sub
cli
ss
jae
sub
mov
in
inc
out
insl
das
push
mov
movsl
pusha
lea
nop
negb
add
out
jle
test
shlb
xchg
imull
clc
in
adc
cltd
xor
mov
mov
push
jnp
in
test
mov
fstpt
mov
xor
std
push
cmp
bound
inc
cmp
fistpll
dec
cmpsl
movsb
fnstsw
sub
jns
jnp
fistpl
call
je
xchg
setge
rcrl
jnp
sbb
pop
push
or
js
mov
stos
mov
fcmovnu
or
loopne
orb
sub
orb
mov
dec
in
push
das
cmp
shlb
adc
popa
movswl
mov
out
sbb
push
mov
repz
pop
push
jge
test
xchg
loopne
add
outsl
adc
mov
setnp
pop
scas
icebp
mov
std
enter
add
mov
jg
pusha
dec
xor
and
pop
lock
jbe
mov
imul
mov
pop
incl
movsb
int
rcrl
and
int
aam
mov
xchg
push
sbb
sbb
add
dec
loope
fwait
gs
loope
jge
in
mov
ret
jl
add
icebp
lahf
movl
jo
std
mov
call
enter
mov
scas
daa
add
add
pop
out
call
ret
movsb
fsubr
adc
push
fsubl
fsubs
cmp
js
dec
fldt
pop
adc
or
hlt
or
add
jns
mov
mov
pop
je
iret
std
cs
lods
push
in
testb
add
add
shlb
mov
jbe
jo
sahf
mov
pop
add
std
mov
cmp
dec
fld
loope
jg
jbe
into
mov
outsl
nop
insl
loopne
mov
jne
decl
mov
lods
ret
adc
jo
icebp
mov
in
inc
cmp
lahf
aad
aas
lret
ja
mov
and
mov
iret
inc
mov
andl
and
in
push
xlat
push
loop
sbb
mov
sbbl
mov
ss
fidivs
mov
inc
adc
adc
xor
cmpb
cmp
mov
sbb
popa
sti
push
lock
popa
nop
stc
std
loop
mov
sahf
jp
sbb
arpl
std
jnp
rorb
jge
jo
scas
adc
sti
xlat
loop
popf
xor
xor
aam
ss
xchg
mov
icebp
mov
cli
les
mov
sbb
cmp
aam
fstpl
jmp
ret
movsl
dec
outsb
aam
adc
in
push
cmc
loopne
cmp
sbb
xchg
add
mov
cmp
aam
or
mov
sbb
xchg
std
jge
pop
cli
lret
jnp
push
outsl
jbe
xlat
ja
rcl
sub
cld
adc
test
aad
lea
pop
and
mov
push
sub
aas
daa
arpl
pop
aaa
or
jge
adc
cmpsl
sbb
adc
mov
jb
cmp
inc
je
pop
rolb
lret
cli
jl
mov
fwait
cmp
addr16
shll
sub
ret
cmp
mov
fsubr
repnz
jge
stos
add
push
xchg
sbb
testb
sbb
cmpsl
les
lcall
test
push
idivb
and
imull
popa
lods
xchg
mov
subb
dec
mov
arpl
lea
ja
mov
cli
loop,pt
aaa
add
pop
jo
insl
cmc
rorb
mov
add
cmp
ret
arpl
outsl
movl
gs
pop
aaa
add
stos
push
mov
jle
jns
and
sti
jnp
mov
subl
mov
cmp
push
aaa
loopne
gs
mov
ficompl
xor
mov
repnz
add
mov
clc
filds
lahf
cli
fstl
mov
push
sahf
xchg
sbbb
jecxz
repnz
mov
or
push
sub
sti
xchg
jecxz
incb
mov
add
int3
incl
cmp
dec
inc
sahf
jp
ret
jg
cmpsb
cli
bnd
aas
ja
hlt
pop
out
mov
out
inc
les
push
cli
adc
icebp
test
xchg
xchg
mov
or
fistpl
repz
jno,pn
cmp
push
frstor
jmp
mov
adc
cmc
xchg
hlt
icebp
arpl
adc
in
mov
inc
pmaxsw
cmc
int
hlt
testl
cwtl
xchg
hlt
xor
jnp
or
popf
cmovp
push
inc
shll
xorb
fiadds
fs
jl
mov
lret
cmp
adc
out
push
sbb
lahf
cld
pop
int
jne
xchg
mov
mov
outsb
lret
mov
push
mov
test
pop
mov
fdivs
bound
sti
mov
xchg
aaa
jmp
insl
mov
mov
inc
in
push
lret
jge
xor
sbb
int
cmpsb
fildl
int
or
clc
hlt
or
pop
sub
ja
jecxz
imul
mov
jo
sahf
stos
inc
xchg
mov
dec
aaa
mov
xchg
push
jnp
push
test
fwait
cmp
xlat
xor
push
push
cmp
mov
out
bound
std
test
xor
in
int
movb
ljmp
push
ficomps
cltd
cmc
icebp
jecxz
ficomps
pop
mov
out
and
in
cmc
cmpsb
pusha
xchg
pop
jb
out
sbb
mov
jne
rcrb
jg
push
ja
pop
cmpsl
insl
das
add
pop
and
add
cmp
push
shll
or
add
sbb
mov
icebp
cmpsl
inc
lock
mov
outsb
push
mov
xlat
mov
js
cmpsl
mov
out
cmc
xor
out
shlb
mov
fsubl
xchg
loop
pop
nop
cmc
jbe
mov
imul
push
rcl
enter
cmpsl
shll
mov
and
test
sub
out
iret
sbb
int3
mov
push
call
bnd
sbb
imul
int3
jmp
mov
xchg
xchg
dec
jns
nop
mov
pop
and
sbb
aam
push
cs
cmc
js
push
incl
std
jge
cmp
mov
testb
cwtl
add
setg
adc
aas
pop
mov
dec
fwait
in
jns
in
mov
popf
push
fcoml
mov
add
pop
inc
mov
mov
sub
js
sub
xlat
loop
cmp
xchg
pop
xlat
mov
shll
lds
loopne
insb
je
push
jo
xchg
call
push
cmp
in
ret
jecxz
jg
test
jecxz
jg
sbb
inc
rclb
loopne
leave
scas
adc
inc
lock
shrl
sar
sti
fsubl
mov
push
cs
ja
mov
jo
pause
clc
xor
sbb
test
pushf
and
js
loopne
orb
addl
push
scas
add
cmc
xchg
fimuls
movsb
std
int
jle
cmc
push
and
sar
lods
loopne
cmp
lahf
add
sahf
xchg
hlt
jg
cli
xor
jbe
mov
scas
shl
mov
jbe
test
mov
loopne
add
enter
and
mov
clc
xchg
loopne
lret
popf
ja
dec
add
jge
shll
add
aaa
ds
clc
mov
pop
arpl
andb
mov
movsb
outsl
fildl
add
or
jg
es
sti
pop
jl
mov
out
out
outsl
add
andl
js
loopne
inc
sahf
das
aas
sub
nop
mov
mov
cltd
loopne
jbe
rcr
adc
andl
xchg
add
add
mov
mov
jg
mov
enter
jns
jl
in
or
sub
fwait
cmpl
rcrl
sbb
lds
pushl
jnp
enter
sub
push
repnz
pop
mov
mov
inc
jle
in
push
shll
mov
lds
stos
jno
nop
in
jbe
dec
pop
idiv
fcmovne
jge
push
jbe
mov
cmp
cld
mov
dec
popf
cli
dec
add
es
loopne
xor
cmp
adcb
dec
outsl
adc
and
bound
out
repz
adc
mov
xor
jecxz
or
in
mov
xor
cmp
push
xchg
std
sbb
cs
xor
inc
mov
ja
mov
mov
jno
xlat
pop
jge
mov
in
shll
jge
mov
clc
fldlg2
jp
sahf
cltd
pop
dec
xor
cmpsb
sahf
inc
push
iret
lock
xchg
add
mov
ret
sub
jmp
jle
dec
pop
out
adc
into
sub
jecxz
rolb
loope
pop
xchg
jp
add
stos
push
enter
add
dec
pop
and
sbb
scas
add
fwait
movsb
mov
pop
sbb
fwait
jo
shr
nop
fcomps
add
xor
das
ja
lahf
add
mov
cmp
pop
shlb
addb
test
insb
adc
sbb
fcomps
shll
call
shlb
pusha
dec
mov
lret
push
mov
push
and
mov
mov
jnp,pt
mov
mov
mov
adc
cltd
xlat
fwait
push
jge
dec
fnsave
repnz
fwait
jne
fisubrl
outsb
and
cmp
jecxz
mov
in
pop
adc
lods
cs
cmp
mov
imul
fs
aas
and
nop
repz
add
push
jo
inc
sbb
add
dec
fistpl
lcall
add
sti
adc
lock
inc
fidivrl
lock
adc
jo
mov
sbbb
dec
jle
dec
std
nop
pusha
or
mov
jle
test
push
cmovae
stc
pop
out
data16
cmpsl
out
es
stos
jmp
fdivl
lahf
xchg
outsb
adc
and
dec
mov
ja
pop
ficompl
add
cmpsl
add
mov
fsubrs
mov
call
shrb
in
jno
push
scas
call
setge
xor
cmp
add
adc
ss
lret
notb
out
shrl
cmp
dec
out
xchg
call
iret
sbb
jae
je
jo
push
dec
lods
xchg
xchg
icebp
fistl
cmp
lahf
add
js
or
push
repnz
shl
je
ret
clc
mov
mov
adc
fists
add
popa
and
and
pop
sbb
dec
cmp
mov
xchg
xchg
call
cmp
xchg
dec
addr16
xchg
push
rcrb
mov
cmp
leave
rcrb
cmp
add
mov
add
maskmovq
testl
xlat
xor
cmp
mov
shr
push
popf
pop
sub
arpl
and
scas
pop
cmp
jb
jecxz
lcall
out
std
cs
jbe
fsubrs
jb
mov
cli
roll
pop
jp
std
push
and
cmp
cld
inc
div
or
ss
mov
dec
pop
mov
mov
pop
rclb
pop
dec
and
scas
adc
out
push
faddl
inc
push
in
add
sti
mov
mov
es
sti
pop
jl
sub
in
pushf
and
inc
sti
sbb
mov
adc
and
sbb
cld
sub
sub
rorb
mov
or
out
cmp
mov
mov
stc
imull
aaa
jne
arpl
jns
push
cmpsl
stc
ds
pop
ss
jae
outsb
inc
mov
mov
jle,pn
cmpsl
inc
je
mov
movsl
jmp
ror
insl
mov
addr16
pop
xlat
push
out
clc
cmp
pmulhuw
fs
sbb
shrl
int
lea
ja
call
mov
jmp
jl
insb
adc
push
mov
adc
jbe
sar
bswap
in
jg
ja
shll
ret
decb
ds
hlt
mov
jo
sub
cmp
dec
push
sar
shl
loop
mov
or
fsin
cmp
push
bndstx
in
adc
push
sbb
sub
subl
imul
mov
cmpl
sbb
mov
add
pop
pop
pop
mov
nop
mov
xor
push
add
rcll
pop
insl
add
mov
xor
ss
ret
aam
ret
int
jge
mov
fs
in
push
test
fcmovnb
ss
ret
ds
jp
jmp
std
fidivs
jg
arpl
pop
or
xlat
nop
les
fimull
and
inc
xchg
cmp
aad
cld
imul
dec
jo
iret
cmpsl
inc
xchg
imul
movsb
cmpsl
jge
fdivrs
shll
sbb
test
xchg
repz
inc
aaa
shr
out
fisttpl
daa
pop
cli
jae
repz
and
inc
xchg
jge
ss
cmp
push
popf
add
cld
pop
sbb
ja
arpl
mov
mov
mov
pop
lock
out
cs
int
mov
inc
sbb
out
xchg
xchg
imul
and
mov
sbb
lods
sti
add
push
nop
jae
pop
andb
stc
xor
jmp
add
ljmp
outsl
lahf
clc
rorl
mov
rcrb
jmp
ljmp
ljmp
sub
out
jo
sub
les
xchg
test
xor
or
jno
cmp
call
push
fidivrs
pop
inc
andl
jne
add
add
add
test
and
xor
js
enter
wbinvd
push
add
mov
leave
fimull
icebp
test
shl
repnz
pop
fmul
mov
add
pop
movb
insl
or
je
add
adc
or
or
imul
push
fcompl
mov
in
out
xor
adc
or
mov
sti
mov
inc
pop
vpunpckhqdq
dec
into
std
pop
push
lret
mov
shlb
repz
jl
dec
pushf
cmpsb
or
add
lds
jns
stos
jp
fdivrs
lods
jp
fbstp
add
sbb
in
ss
lods
jp
decb
dec
jle
shlb
fidivl
lfence
mov
outsb
shl
icebp
loopne
sub
jg
mov
xor
mov
in
mov
or
loop
rcrl
rcll
lods
jae
dec
add
mov
xlat
insb
push
jge
aaa
fsubs
sbb
pop
mov
xchg
rol
xchg
fsubs
pop
adc
lret
and
jg
rcll
testl
loopne
sbb
sbb
repnz
lahf
add
aaa
sub
call
clc
jge
nop
insl
ds
enter
xor
dec
popf
cmpsb
das
dec
adc
adc
fldt
cld
jbe
push
adc
movsb
sahf
shr
fisttpll
aad
and
test
lea
cmpb
pop
nop
jp
add
mov
data16
push
pop
mov
cmp
add
sbb
mov
or
stc
inc
testb
cmp
loopne
and
add
in
add
fstps
in
shll
mov
pop
dec
mov
loopne
leave
lcall
push
xor
cmp
rcl
xchg
ss
jle
subb
dec
stc
xchg
xor
shll
lods
mov
xlat
xchg
push
mov
cmpsl
or
mov
xor
js
loopne
cmpb
cmp
push
pop
fsubl
mov
sbb
cmpsl
add
test
movsl
push
leave
scas
adc
fsubs
clc
push
rol
ficomps
ljmp
inc
xchg
idivb
xchg
pop
out
clc
jnp
nop
add
es
imull
sar
fnstsw
inc
je
add
stos
xchg
outsb
ret
pop
ja
jns
nop
mov
cmp
xor
add
test
jge
add
repnz
ss
sub
dec
push
jmp
cmpsl
fimuls
sub
pop
lock
or
add
pushl
shll
add
aaa
into
imul
sbb
dec
pop
cmp
dec
pop
jge
out
sbb
sahf
in
out
pop
cmp
fcomps
mov
jmp
and
xchg
loopne
add
add
aas
jbe
aam
cld
sbb
in
xchg
jge
pop
mov
cmpsb
dec
pop
mov
iret
push
rorb
shlb
sti
jle
mov
fcoms
fwait
pop
cmp
dec
mov
jmp
inc
lock
addl
ja
es
ljmp
andb
xchg
xorb
jmp
dec
aaa
mov
xchg
jl
cmp
add
push
inc
xchg
xor
loopne
aaa
add
cmpsl
mov
cmp
push
mov
in
adc
mov
icebp
jno
fildll
cmp
fs
mov
sub
popf
jecxz
sub
faddl
mov
jno
cmp
sub
enter
out
jno
outsl
int3
les
pop
aaa
push
dec
mov
jno
cs
imulb
imul
iret
jmp
outsl
or
add
cld
mov
xlat
scas
xor
add
mov
rclb
scas
add
rcrb
add
fsubs
adc
xchg
hlt
xchg
cmp
std
pop
and
ljmp
push
add
jge
add
jno
dec
je
mov
orb
ljmp
jae
gs
mov
ja
loop
mov
or
mov
dec
mov
es
sub
push
and
and
ljmp
nop
jne
scas
aad
mov
aam
mul
cli
aas
out
push
or
std
pop
add
jge
jns
movb
popa
pop
in
repnz
adc
call
pop
scas
ja
fbld
jp
jnp
cmp
lods
jp
out
mov
dec
fsubs
je
and
sbb
outsl
fmuls
cld
fwait
pushf
repnz
in
leave
xchg
add
mov
pusha
xor
hlt
rorl
imul
inc
xchg
mov
fnstenv
shll
outsb
mov
pop
add
xchg
and
sbb
lcall
fwait
js
jae
jp
mov
cmp
out
outsb
call
mov
cmp
call
or
jbe
sub
aaa
into
push
shll
jno
shr
lret
add
push
jmp
subb
cli
cli
es
jge
or
or
jb
stc
inc
fidivs
or
jp
sub
mov
mov
mov
nop
in
mov
push
rolb
lcall
fs
lock
loopne
shl
push
rorl
fsub
push
jl
arpl
shld
insl
jo
mov
dec
xor
inc
xchg
sbb
in
mov
jmp
es
cmc
xor
inc
sahf
cli
enter
enter
subl
cmc
in
pop
fs
arpl
pusha
negl
das
mov
pop
jns
jnp
jl
cmp
cmovns
outsb
add
and
mov
setge
imul
call
insb
sti
jmp
outsl
mov
fstpt
inc
xlat
jg
cmpsb
int
movd
jbe
fdivrl
pop
mov
push
imul
outsl
arpl
testb
inc
mov
add
movsb
jg
call
andl
aaa
sahf
pop
iret
sub
sub
jge
mov
scas
scas
push
out
sti
sbb
movsb
mov
js
cli
push
iret
repnz
jmp
loopne
pop
mov
push
div
shl
out
in
and
lret
das
jmp
cs
insl
fists
int3
cs
repz
sti
decb
popa
sbb
mov
pop
aaa
addr16
pop
enter
cmp
sti
mov
jb
aas
xlat
pmaddwd
lods
jg
xchg
in
repnz
std
fdivrs
cmp
test
out
icebp
mov
xchg
lods
lock
into
fbld
push
cmpsb
cmp
push
pop
pushf
aas
cmp
pusha
lahf
jns
jg
jge
xor
dec
sbb
out
jne
fisttpl
cmp
popf
shll
mov
fdivr
out
inc
pop
mov
fadds
xor
negl
sahf
jns
out
std
fwait
aas
xor
imul
orb
xchg
fstpt
out
hlt
inc
mov
in
jecxz
in
jg
mov
lods
in
jb
fst
mov
pop
sti
aaa
jle
sub
pop
imul
fxch
pop
outsl
jb
mov
pop
fstpt
pop
outsb
sti
jne
cwtl
or
notb
std
xchg
jecxz
lret
jae
in
popf
adc
jmp
in
jb
jle
sbb
cmp
jae
jae
jmp
sub
cli
mov
push
into
mov
cltd
imul
jg
popf
sub
xor
sbb
jmp
mov
stc
ret
jae
clc
jle
mov
insl
aas
iret
cmp
out
ret
adc
lahf
xchg
pop
sahf
jmp
mov
mov
insl
std
pop
out
lock
cmc
xor
push
jae
lret
jae
pop
jo
jnp
out
addr16
out
lahf
jbe
jbe
in
pop
jmp
ljmp
pop
jle
cmpsl
pushf
jb
out
in
push
mov
orb
out
mov
jns
iret
jne
addr16
jne
ror
jns
pop
popf
out
and
push
ja
movsl
sbb
in
enter
mov
mov
vpsubsw
std
das
jo
repz
inc
xchg
jle
popf
mov
ja
cmpsb
add
sbb
inc
lahf
add
insb
out
jo
push
mov
sbb
jno
jp
pop
shll
adc
and
xor
int
push
daa
clc
xchg
add
enter
addr16
leave
negb
cltd
mov
ret
out
add
lea
jnp
sbb
js
lret
mov
popa
push
dec
sbb
xor
sub
in
das
push
test
test
pop
int3
in
mov
dec
cltd
mov
pop
enter
es
scas
pop
stos
sbb
xchg
outsb
in
jo
push
outsl
xchg
daa
xchg
push
mov
ss
mov
mov
in
xchg
in
inc
imul
orl
jl
jbe
xor
or
adc
jnp
pop
and
fimuls
sbb
cmp
imul
sbb
loope
xor
dec
mov
pop
call
mov
add
pop
ret
pop
mov
sbb
in
nop
pop
nop
cmp
enter
and
and
and
and
nop
and
jle
ret
nop
out
inc
push
inc
xchg
ljmp
fs
mov
mov
mov
jb
jb
repnz
roll
fs
fstl
mov
adc
push
in
imull
adc
push
jb
cmp
pop
orl
test
out
xchg
inc
inc
cmp
ja
mov
push
andl
adc
into
adcl
stos
and
enter
divl
mov
repnz
and
xor
out
nop
or
enter
mov
jb
or
sbb
cld
add
jb
sti
pop
nop
fsts
sbb
fwait
and
inc
jbe
push
nop
lahf
inc
pop
subl
cmp
add
insb
enter
and
loopne
in
mov
nop
in
nop
sub
and
add
mov
sbb
repnz
or
adc
and
inc
adc
or
pop
rorb
flds
jns
mov
jb
in
enter
movsb
add
add
or
jns
repnz
pop
in
enter
repnz
push
les
lods
fmull
les
and
mov
loopne
mov
cmp
out
xchg
and
dec
sbb
jb
movsb
pop
mov
sbb
add
add
mov
repnz
jnp
fimuls
pop
add
inc
mov
cmpsl
inc
inc
inc
fdivrp
cmp
fs
in
nop
sti
and
sub
sub
and
int
rolb
jns
rolb
jmp
and
nop
mov
xor
xor
cmp
push
cmp
sbb
mov
cmp
dec
nop
sbb
add
sbb
adc
add
test
xor
jns
rolb
jmp
nop
push
dec
add
or
and
loopne
pop
int3
mov
jle
pop
jb
fs
cmp
pop
jge
or
movsb
or
in
nop
daa
and
and
pop
push
gs
and
or
lret
divb
test
sub
push
push
stos
mov
sbb
mov
sub
test
pop
push
or
in
push
mov
xchg
bound
and
popf
or
imul
fwait
and
push
mov
dec
pop
dec
aad
mov
inc
frstor
and
dec
mov
xchg
aad
ficoms
insl
push
jae
push
mov
or
mov
cwtl
mov
fistl
popl
mov
pop
fldenv
sbb
loope
sbb
jl
test
jecxz
cmp
push
sub
stos
popa
xor
cmp
push
pop
cmp
aaa
mov
pop
jbe
call
xor
test
cwtl
jmp
cmp
sbb
inc
imul
push
cwtl
ljmp
imul
inc
pop
add
sub
fidivrl
lods
mov
xchg
stos
mov
loope
cmc
sub
jge
movl
scas
cmp
dec
aad
fimull
dec
xor
std
cmp
aam
aaa
ret
xchg
popf
std
pusha
mov
mov
push
sar
xor
and
pop
aam
rcrl
es
mov
sub
cmp
or
jle
push
outsl
insb
dec
test
pop
pop
ret
push
sub
sub
inc
aad
fmuls
lds
add
push
jb
incl
imul
sti
dec
ret
popf
or
add
test
adc
mov
mov
aam
pop
inc
sub
xchg
mov
xor
icebp
lea
movsl
in
xor
insl
jl
cmp
push
movsl
or
sarb
cmp
sti
test
xor
mov
lods
sahf
into
aam
mov
inc
adc
les
sbb
test
xor
mov
mov
jmp
mov
cmp
and
push
subl
fidivs
lods
insb
or
mov
push
test
and
arpl
push
enter
mov
xor
rcll
mov
inc
xchg
test
jno
stos
mov
test
xor
and
orb
mov
sbb
and
mov
push
pop
dec
gs
mov
pop
mov
gs
mov
dec
inc
stos
push
push
icebp
adc
pop
stos
xchg
xor
xchg
sub
enter
aad
sarl
add
xor
jbe
gs
call
mov
stos
add
inc
and
scas
and
test
pop
jbe
rcrb
stos
mov
xchg
xor
push
xor
pop
dec
cmp
or
fdivs
aad
pusha
push
xor
xlat
lcall
arpl
pop
pop
ret
ret
hlt
pop
int3
daa
cmp
test
xchg
int
loope
test
pop
ja
xor
lds
push
int
sahf
dec
xchg
inc
inc
cmp
enter
mov
mov
dec
xor
cmp
pushf
adc
into
cltd
pop
ficoml
jl
pop
cmp
imul
jp
std
shll
cmp
ss
mov
cwtl
sbbl
addr16
jne
xchg
in
repz
cmp
sub
dec
data16
xchg
xchg
push
stos
outsb
and
jnp
addl
aad
jmp
insl
xorl
mov
push
int
xchg
mov
push
jns
dec
lahf
xchg
dec
xchg
mov
push
movsb
mov
pop
mov
fiadds
jecxz
adc
push
dec
frstor
sbb
sub
jp
xchg
fdivrl
je
cmp
ud2
mov
and
and
mov
sub
inc
cmp
lock
push
negb
ret
loope
ljmp
pop
int3
sahf
ja
fldt
ficoml
out
stc
fldt
int
hlt
fwait
pushf
pushf
pop
cmc
push
test
cmp
clc
and
cmp
sbb
adc
clc
pop
rol
mov
mov
and
push
or
push
hlt
enter
imul
mov
lds
lahf
or
std
dec
addr16
jmp
pop
jae
int
jns
ret
popa
addr16
bound
pop
cmp
dec
ljmp
sub
data16
push
das
push
scas
inc
into
loopne
in
es
xchg
cltd
jno
outsb
push
js
xor
xchg
sbb
jmp
jae
divb
pop
jae
sub
push
sub
imul
cmp
mov
pusha
sbb
imul
pop
fwait
pop
sbb
push
cmpsl
into
mov
sbb
in
test
adc
and
xchg
into
or
cmpsl
dec
cwtl
xchg
test
loope
ds
inc
jb
mov
and
nop
push
xchg
xor
pop
cmpsl
jno
sbb
std
xchg
mov
out
cmpsl
push
pop
das
pop
mov
cli
lret
push
xor
inc
xor
inc
push
inc
fldt
xlat
mov
imul
jno
inc
xchg
movl
push
adc
scas
mov
pushf
push
stos
pop
inc
jno
mov
lock
shl
popa
movl
lea
fcoml
sub
cmpsb
push
inc
dec
mov
repz
mov
and
mov
mov
in
pusha
movsl
sbb
xorl
cmp
pushf
sbb
clc
bound
jecxz
mov
and
xchg
adc
jno
data16
stos
dec
mov
je
pusha
std
test
popa
iret
call
fwait
push
fdivrl
sbb
push
xchg
fiaddl
xchg
jo
push
xchg
and
insl
dec
sbb
aas
sbb
mov
push
dec
iret
js
lea
les
movsl
test
mov
push
fld
shl
js
lahf
pop
push
mov
fwait
mov
mov
loope
sbb
lea
mov
pushf
add
pop
jg
popf
imul
ret
sbb
repnz
fmuls
or
jmp
push
cmc
jmp
sub
dec
aad
push
stos
push
cmp
mov
jno
rep
sub
mov
test
push
cmp
fstpt
dec
aad
sar
mov
inc
jp
sbb
sti
lods
push
lods
dec
jmp
cmp
pop
sahf
ds
sbb
mov
aaa
out
daa
xchg
xlat
pushf
icebp
lods
pop
pop
jp
and
cwtl
jns
push
and
ds
xchg
push
mov
push
mov
insl
fsts
mov
rclb
fisubrl
push
sub
cmc
fadds
out
inc
insb
jne
adc
stc
data16
movsb
shl
mov
mov
jne
cmp
push
jecxz
popf
jb
adc
jae
jecxz
ss
dec
inc
iret
in
cmc
jae
cld
mov
jns
clc
shrb
cmp
push
dec
pop
test
xchg
jno
xlat
and
call
add
mov
push
mov
hlt
inc
lods
out
enter
xchg
lahf
ret
lcall
cmp
jp
pop
stos
cmp
pop
aas
push
mov
fs
stos
ds
xchg
fcom
sbb
test
jnp
aad
pushf
or
insl
jae
in
ljmp
mov
mov
and
jecxz
cmp
fwait
aam
hlt
or
jo
ficoms
adc
sub
push
xchg
sub
push
xchg
pop
enter
push
aad
aam
cmpsb
les
mov
pop
insb
mov
test
jbe
ror
xlat
pop
cmp
fsubrl
cmp
in
mov
scas
out
stos
jo
js
fisttpll
in
in
aad
xchg
fwait
cmp
jnp
sbb
inc
aam
inc
cmc
jb
inc
int
jecxz
pop
xor
dec
test
scas
dec
int3
loopne
push
pop
adc
and
shll
and
pop
popf
sarb
in
push
pop
sub
outsl
push
jecxz
xorl
mov
scas
jg
or
and
into
xchg
mov
xchg
jno
pop
int3
sbb
es
pop
push
out
cmp
cwtl
mov
inc
lea
xor
cmpsl
cmp
push
sbb
push
xchg
mov
adc
rcrl
icebp
mov
cmp
dec
int3
aam
mov
pop
int3
mov
add
xchg
ss
iret
in
pop
mov
test
ret
pushf
fists
sti
and
shlb
lds
cmp
sbb
scas
pop
lods
xchg
in
pushf
pop
xor
movsl
in
dec
andl
int
dec
fs
daa
sbb
adc
mov
pop
dec
cmp
xor
sub
aaa
mov
dec
push
pop
aam
mov
push
shl
push
in
fldt
clc
in
sub
pushf
cmp
push
xchg
iret
push
daa
movsl
in
pop
roll
lret
and
sub
ficoms
leave
cwtl
push
rorl
xchg
mov
test
jp
hlt
repnz
fs
fildl
pushf
ljmp
jo
sbb
bound
out
das
lea
push
inc
mov
jbe
mov
adc
cmpsl
mull
xor
popa
mov
and
nop
cmp
test
in
sub
ljmp
mov
loope
hlt
pop
lcall
mov
xchg
xchg
mov
dec
cmp
lret
ret
dec
lds
inc
pop
xchg
jae
add
sbb
stos
mov
jl
cltd
stos
dec
xchg
ja
negl
pop
pusha
add
push
inc
mov
jecxz
js
sbbb
mov
cmp
cs
mov
stos
cs
into
mov
stc
call
int3
leave
pop
sub
dec
cmp
pop
push
pop
and
cmp
pushf
push
cltd
ret
mov
out
stos
push
xchg
jno
mov
push
pop
mov
cmp
es
dec
xchg
ljmp
mov
xor
aad
je
fidivs
inc
cmp
call
pop
movsl
jecxz,pt
hlt
lret
pushf
xchg
xchg
bound
gs
xchg
lds
dec
mov
xchg
in
sbb
jle
jge
inc
call
adc
push
inc
sti
movb
loope
call
notl
jnp
pop
or
mov
cwtl
mov
jnp
xor
add
mov
cmp
inc
fwait
mov
ret
push
adc
add
inc
loopne
or
outsb
add
sarb
inc
loopne
or
pop
pop
andl
pushl
es
testb
pop
loopne
dec
pop
and
pop
add
dec
adcl
sbb
insb
subl
and
pop
enter
pop
and
lods
mov
adc
iret
mov
push
push
cmp
add
mov
popa
jae
inc
lret
ret
adc
jge
nop
sub
sbb
scas
jne
scas
fistl
mov
push
sub
push
add
mov
ds
lods
or
xchg
push
lods
push
mov
xor
jecxz
sbb
es
sub
sub
cli
inc
sbb
pop
mov
lret
xchg
xchg
push
jmp
in
push
sbb
pop
adc
fisubrl
cmpsl
fstps
push
scas
out
call
loopne
mov
shll
imul
sbb
leave
jecxz
sub
adc
xor
inc
hlt
std
js
out
call
dec
mov
cmpsl
frstor
ljmp
mov
addr16
ljmp
dec
mov
push
pop
fwait
rcll
cmc
mov
inc
push
cmp
adc
push
pop
sbb
sbb
jl
rol
jmp
sbb
or
or
inc
push
jbe
sbb
adc
fcmove
pop
push
movl
inc
fsin
lods
shr
sbb
mov
pushf
xor
jle
ret
adc
shrb
inc
xor
dec
int
out
pop
mov
jmp
xchg
or
sbb
cmp
iret
or
jbe
xchg
cmpl
scas
inc
xor
mov
adc
fistpl
fisttpll
dec
int3
cltd
pop
das
outsb
leave
outsb
int3
push
mov
dec
push
das
mov
adc
jmp
aaa
ja
xor
mov
and
lret
sahf
push
mov
and
cld
test
sbb
sbb
sbb
ds
shrb
mov
fldenv
repz
push
add
xchg
ret
jns
cmp
movsb
jg
ja
decb
jge
sahf
jmp
inc
fucomp
mov
lahf
mov
mov
je
adc
loopne
int3
clc
push
mov
xor
cmc
mov
inc
jmp
lds
fdivr
ljmp
jge
and
lcall
fsubs
pop
pop
jo
loop
xchg
mov
inc
lods
jnp
cmp
xor
mov
imulb
shll
ja
dec
out
ficomps
jmp
xchg
mov
idiv
cs
jb
subl
inc
or
pop
cmp
in
push
popa
lahf
fildll
cmc
mov
sar
fdivrs
adc
lods
imul
lahf
push
lcall
pop
sub
dec
imul
mov
or
adc
test
mov
sbb
hlt
pop
push
idivl
ljmp
jb
fucomip
jnp
idivl
sub
pushf
dec
pop
cld
pop
in
lret
and
repnz
lret
jge
out
mov
fistl
push
mov
out
push
fisttps
cmpsl
push
scas
inc
xor
bound
out
divb
loop
sub
stos
push
into
imul
push
xchg
dec
push
mov
jmp
pop
mov
jmp
push
into
leave
dec
insl
movsb
pushf
inc
jns
mov
ljmp
xchg
imul
jns
fsubs
xor
jge
xlat
mov
lods
adc
push
movsb
fs
out
cmpsl
pop
xchg
mov
mov
fcoml
jnp
mov
xor
xchg
std
mov
ds
jg
dec
insb
jnp
stc
sti
xchg
pop
outsb
mov
cmc
inc
dec
insb
jns
pushf
dec
jns
mov
lcall
dec
push
bound
in
xchg
test
jl
adc
pushf
sahf
sub
cmp
adc
repnz
loop
mov
stc
dec
dec
insb
insl
sub
mov
jb
cs
fwait
sub
ljmp
and
mulb
shld
repz
xchg
or
xchg
pop
push
push
cmp
sbb
mov
icebp
cmp
inc
push
arpl
repnz
lds
fistl
arpl
in
adc
push
sahf
cltd
sub
das
cltd
sbb
lahf
pop
mov
xor
dec
lea
xor
repnz
dec
lret
push
dec
lea
aad
arpl
xchg
in
adc
in
fisubrl
jle
lret
xchg
gs
into
mov
aad
in
lret
pop
xchg
mov
in
xchg
jnp
lret
sti
sub
lret
cmp
push
arpl
sub
dec
aad
xchg
in
test
pop
xchg
aam
xchg
sub
xor
lea
pop
xchg
mov
lret
cmp
das
dec
xchg
repz
dec
xchg
in
test
in
leave
repnz
lret
jb
gs
pop
into
mov
push
sub
push
dec
dec
xchg
jae
pop
fistpl
lret
sti
sub
dec
xchg
arpl
push
arpl
xchg
leave
jb
in
leave
repnz
lret
in
dec
push
push
mov
and
cltd
xchg
mov
mov
fs
cmc
push
sub
in
mov
repnz
push
outsl
stc
fldt
pop
fstl
ja
lret
cwtl
add
jb
and
jecxz
cmpsb
daa
lret
jb
fidivl
pop
lret
in
xchg
mov
pop
leave
jb
and
cmp
xchg
sub
jno
and
outsb
jno
pop
cmp
mov
inc
scas
adc
and
push
in
cmpsl
rcll
xchg
in
sub
lret
mov
pop
pop
pushf
jle
xorb
dec
add
fistpll
inc
pop
or
xor
lahf
or
aam
sub
push
pushf
xchg
add
fcoms
fidivrs
inc
jmp
aas
jno
ret
fucomi
out
pop
ds
inc
cmpsl
lahf
das
lock
insb
pop
orl
inc
push
sahf
push
aas
pop
dec
mov
sub
mov
lcall
cmpb
sbb
lds
or
dec
sbb
cmpsl
dec
test
jno
mov
ljmp
sub
into
ret
fldt
loopne
xchg
test
jle
cwtl
stos
shrb
pop
bound
js
mov
fildl
bound
aas
jle
mov
ret
xchg
xchg
cmpsb
xchg
es
les
push
lock
sub
lds
sub
fcomps
jp
mov
sub
scas
test
stc
jmp
inc
movsl
mov
shll
inc
scas
cmpsb
dec
cmp
push
movsb
mov
shll
jne
mov
stc
mov
rclb
pop
movsb
dec
out
xchg
dec
xchg
scas
ficoml
sub
cli
sub
pop
jnp
inc
lcall
test
clc
xchg
push
test
lea
clc
dec
sub
jecxz
push
lret
push
rcr
js
mov
je
aam
dec
xchg
push
aam
xchg
sbb
xchg
out
sub
inc
sbb
cmpsl
dec
xchg
xor
das
sbb
xchg
into
sub
push
xchg
repnz
ljmp
ret
stc
mov
xor
fnstcw
or
push
mov
xor
or
rcll
pushf
jecxz
push
ds
stc
fldcw
xor
je
dec
and
cwtl
dec
in
pop
mov
xchg
decl
call
mov
daa
or
imull
imul
cmp
stos
inc
jp
je
stc
not
inc
lods
inc
dec
mov
xchg
jle
sub
daa
or
cltd
jnp
cmc
fbstp
mov
inc
popa
repz
in
push
and
dec
sbb
dec
mov
dec
loop
xor
push
adc
int
push
cld
sbb
mov
daa
rclb
out
shlb
pop
cmp
adc
sbb
mov
inc
ljmp
pop
jecxz
mov
dec
arpl
decl
mov
aad
sbb
or
gs
sub
xchg
jae
mov
std
aam
xchg
cs
lahf
pop
push
imul
jo
or
cmp
lcall
repnz
and
repz
repz
call
fistpll
repnz
dec
jo
lea
loop
add
insl
inc
dec
inc
lahf
int
icebp
mov
cmpsl
jno
notl
mov
cmpsb
inc
shll
xor
movsb
clc
push
loop
mov
sbb
js
repnz
mov
aas
jb
lods
sbb
push
mov
xchg
les
inc
xchg
jbe
jbe
jmp
jg
pushf
inc
shl
cmpsl
stc
mov
cmp
pop
out
popf
xchg
sbb
loop
loope
insb
out
xchg
cmp
mov
divb
int
out
shl
sahf
jbe
in
lods
xchg
and
add
push
popf
jg
into
mulb
fimuls
stc
mov
leave
imul
sbb
aaa
iret
xchg
decl
jbe
xlat
out
in
lcall
pcmpgtd
and
movsb
fcoms
out
adc
xor
outsl
les
fistpl
xchg
mov
lods
push
ljmp
mov
mov
xor
xchg
mov
and
dec
and
xor
push
rclb
rolb
rcrb
jbe
inc
sarb
dec
rorb
shlb
mov
movsb
mov
movsb
sbb
sarb
push
push
pop
rcl
and
jl
push
pop
push
xor
dec
adc
push
or
icebp
jno
push
or
push
js
loopne
adc
pop
pop
stc
jecxz
aam
sarl
jle
push
into
fldenv
das
mov
adc
adc
clc
xchg
inc
cltd
pop
dec
and
sub
and
int
dec
les
ret
jb
dec
in
ja
les
pop
pop
jg
adc
adc
scas
mov
dec
les
sub
and
jmp
mov
and
jle
jb
mov
and
dec
cs
jg
dec
fcompl
xchg
cmp
dec
sbb
jle
icebp
lods
loop
icebp
cmp
int3
xchg
xchg
stc
adc
mov
xchg
fdivrs
xchg
and
jae
test
jge
mov
loop
lret
dec
loop
out
loop
fisubs
mov
mov
sub
vpcomd
push
push
pop
adc
mov
mov
or
jb
faddp
jge
xor
xchg
jae
lock
mov
adc
xchg
jno
in
repz
mov
sti
cmc
pop
xor
loopne
inc
xchg
rorb
or
adc
shl
shlb
pop
mov
aad
int
insl
fistpl
inc
push
sti
push
sbb
mov
xchg
mov
pop
mov
mov
fs
iret
jns
decl
push
dec
xlat
dec
or
inc
shlb
test
aad
push
mov
xchg
inc
popa
icebp
xchg
inc
jns,pt
adc
xchg
das
out
push
push
fpatan
dec
inc
neg
cld
popf
cld
inc
bound
xor
dec
push
fbld
cld
sbb
xorps
ret
push
popf
std
cli
aaa
cs
push
out
cmp
xor
jg
cld
mov
imul
call
dec
cmpsb
js
call
push
stc
div
out
fistps
fsubs
pop
cmpsl
mov
cmp
mov
int3
addr16
dec
les
pop
stos
inc
dec
pusha
inc
mov
mov
inc
push
mov
js
in
jg
cld
cld
pop
fnstsw
repz
jbe
mov
lahf
mov
jmp
lock
fs
loop
jg
rcrl
inc
loopne
mov
and
enter
dec
cs
xchg
xchg
adc
xor
cmp
bound
lds
adc
adc
cmp
cs
dec
and
xchg
or
adc
adc
mov
xor
ds
mov
jle
xchg
aas
and
and
in
inc
sub
cli
push
jae
addr16
es
pushf
pop
mov
sti
push
mov
pop
dec
in
in
mov
les
loop
notl
inc
mov
stc
xor
dec
mov
jg
ret
ds
lods
and
and
inc
adc
imul
cmp
mov
cmpsb
mov
cmp
fcomip
pop
lret
std
test
fs
hlt
xor
pop
jp
jmp
daa
adc
xor
icebp
inc
pop
in
into
das
cs
pop
popa
inc
mov
mov
out
movsb
sub
sub
ja
repnz
add
mov
inc
stc
mov
test
in
or
inc
xchg
in
iret
inc
enter
or
mov
cmp
mov
fwait
push
mov
pop
into
and
sbb
xchg
les
in
mov
mov
loope
inc
cmpl
into
pushf
pop
loop
jb
imul
es
stc
cld
jb
cli
or
xchg
mov
mov
mov
push
ja
sahf
cltd
xchg
mov
jne
and
shlb
pop
sti
mov
ja
push
jmp
into
fnstcw
ja
jg
inc
out
das
das
push
int
xor
sahf
repnz
out
fdivrp
dec
fistpll
fnstcw
fs
mov
pop
pop
scas
mov
mov
jmp
xchg
in
std
xchg
lcall
ds
fcmovnbe
aaa
ds
rol
pop
jge
in
xchg
lea
pop
lods
ret
sahf
mov
imul
jecxz
pop
jg
data16
ja
neg
idiv
cmp
test
out
mov
fldcw
cmpsl
lea
outsb
dec
cvttps2pi
iret
jle
mov
mov
scas
icebp
aaa
pop
jecxz
mov
fsubrp
daa
scas
pop
lcall
sbb
ja
mov
aam
out
pop
aas
sbb
clc
in
arpl
jge
loope
xlat
jl
xor
mov
sbb
in
movsl
mov
mov
push
mov
mov
jle
pop
cld
cmp
jbe
jmp
jb
popf
testl
loope
cmp
hlt
stos
hlt
pop
mov
iret
mov
je
test
mov
fnstenv
addl
in
jmp
repz
aaa
popf
clc
pop
fdivp
gs
ljmp
stc
xlat
insl
jnp
inc
fdivrs
fstpt
pop
ret
jnp
jbe
ss
in
xchg
xchg
push
lods
fwait
gs
jg
mov
stos
mov
pop
movsl
xlat
sbb
scas
jl
cmp
repz
out
dec
sub
or
jnp
cmpsb
in
xchg
lods
pop
jl
jge
dec
sub
call
lcall
xchg
std
jnp
cmp
test
jle
mov
scas
xchg
jle
in
out
popf
fisubrs
ds
mov
mov
inc
xlat
cmp
cld
test
mov
int
aam
pop
iret
in
outsb
das
mov
cmp
js
cli
fld
addr16
pop
popa
popa
mov
lahf
xor
inc
and
cmpsl
ficomps
push
sti
out
sub
int
imul
or
roll
jp
divl
int
sub
pop
mov
not
imul
jle
dec
lret
aas
sub
push
fcompl
ds
daa
je
cmp
lahf
cld
repz
xchg
das
enter
pusha
loopne
mov
ljmp
cmp
push
mov
ss
repnz
push
sbb
sbb
loope
sti
cmc
adc
ds
mov
cwtl
neg
and
xor
mov
cmp
push
xor
mov
xor
sub
jg
les
mov
dec
cmp
mov
pusha
push
insb
and
cld
lds
cmp
adc
dec
sub
sbb
jae
jno
xor
addr16
cmpsl
scas
and
in
mov
fldt
out
packsswb
or
or
clc
jae
vhaddpd
lock
sti
rcl
loop
int
add
jle
lahf
sahf
mov
test
icebp
icebp
mov
hlt
int3
dec
push
add
call
sub
cmp
jl
lds
or
popa
leave
cmp
jns,pn
int
push
and
xchg
xor
aam
in
ljmp
adc
inc
fimull
dec
lcall
and
jne
outsl
inc
mov
cmc
dec
adc
mov
les
jb
repz
loop
sbb
arpl
dec
insl
dec
push
dec
es
dec
nop
les
jns
adc
pop
repnz
movsb
sbb
fdivrs
fistpll
push
pop
or
xor
aad
mov
out
loopne
fwait
sbb
inc
sub
jae
xchg
movsb
jmp
xor
add
rcll
pop
mov
mov
into
dec
jb
jb
mov
xchg
pop
pop
out
jb
pop
nop
inc
cs
out
in
dec
sbb
sub
enter
jno
push
adc
cltd
lds
xor
fwait
inc
in
repnz
push
xchg
dec
filds
test
sub
xchg
repz
inc
push
lret
xchg
xor
loope
clc
int
sub
scas
dec
lret
out
push
sbb
mov
and
cmpsl
movsb
in
in
xchg
pop
and
cli
sbb
nop
lret
in
xchg
mov
call
movsb
inc
jg
aam
mov
bound
es
cmp
js
jge
pop
mov
cmp
neg
mov
fistpll
in
sti
iret
mov
out
sub
and
jno
and
addr16
and
xchg
jecxz
mov
iret
cmp
imulb
in
fldenv
sahf
jae
in
xor
mov
rcrl
scas
cmp
neg
mov
fistpll
in
sti
iret
mov
out
sub
and
sahf
mov
testb
out
mov
popf
gs
mov
iret
ds
negb
inc
pop
dec
dec
cmc
and
and
ficoms
jne
jge
not
xlat
xor
aad
scas
iret
mov
xlat
sahf
mov
jmp
mov
cmpsl
sahf
cmpsl
inc
lahf
push
adc
popf
jl
pop
aaa
or
cli
mov
in
out
fstpt
call
add
cltd
cmpl
dec
dec
jne
idiv
xrelease
das
adc
std
sub
inc
push
out
sbb
lcall
xchg
clc
mov
iret
sbb
jp
sar
shll
fbstp
cli
fidivs
repz
pop
dec
sbb
stc
adc
jp
sbb
popf
into
pop
pop
enter
iret
push
jb
xchg
inc
sub
mov
call
dec
and
das
inc
sub
aaa
xchg
pop
in
cmp
std
mov
mov
fsubl
std
mov
dec
mov
cld
outsb
movaps
inc
xchg
push
and
in
daa
push
nop
iret
movsb
dec
daa
push
jns
jmp
xchg
mov
push
pushf
pop
dec
cmp
adc
dec
xchg
icebp
xchg
loop
xor
and
aaa
aas
std
adc
aad
sbb
daa
cli
leave
dec
bound
pop
sti
repz
cmp
adc
mov
test
xchg
fistps
jns
sub
mov
jne
jecxz
xchg
js
mov
push
std
fstl
mov
sbb
dec
lret
loop
mov
sahf
sahf
jg,pt
cli
adc
mov
aas
aaa
out
mov
mov
ret
jg
mov
mov
mov
mov
cmc
jno
out
loope
cmp
out
ds
scas
or
daa
mov
in
jno
scas
stc
out
xlat
stc
jecxz
dec
scas
lret
in
cmp
pop
icebp
scas
sti
test
mov
pushf
fisubrl
mov
dec
movsl
xchg
cmc
push
aad
pop
daa
rep
mov
pop
cmc
cld
inc
push
push
cs
jnp
jg
dec
shrb
leave
xchg
lods
daa
stos
and
and
inc
cmp
push
std
test
dec
mov
cmp
jb
in
lahf
cld
jno
lahf
push
dec
jg
and
jle
popf
stos
cmpsl
jg
mov
cli
adc
mov
mov
add
outsb
arpl
sub
sbb
xchg
adc
int3
sti
xor
rcrb
mov
shll
cmp
sbb
movsb
sarl
test
fwait
shlb
cmp
into
sbb
push
lret
repz
lods
rcl
xlat
sbb
xor
push
push
push
sbb
xchg
sub
lock
add
dec
add
lds
add
mov
or
xlat
sar
inc
push
sbb
mov
in
sbb
lea
in
pop
imul
mov
daa
out
sub
into
add
cltd
sbb
subl
fs
inc
sub
testb
popf
pop
sub
aas
push
aaa
mov
jle
call
das
and
dec
iret
inc
jle
mov
cwtl
sahf
clc
daa
jle
mov
scas
lahf
fdivrs
mov
notb
mov
call
push
jo
mov
dec
push
push
xchg
jnp
pusha
cmp
fs
aam
out
in
mov
movsl
in
adc
dec
addr16
push
sahf
inc
sbb
inc
ficompl
xlat
dec
xor
icebp
cmpsl
rcr
outsl
jge
mov
xchg
cltd
adc
inc
pushf
jge
mov
in
rorb
or
cmp
es
pop
dec
mov
push
mov
hlt
adc
mov
fmuls
pop
xchg
mov
and
fadds
in
jbe
sub
jbe
mov
xchg
xor
mov
pop
jge
ja
imul
dec
dec
mov
mov
aam
fdivrs
dec
lret
and
inc
addr16
push
jg
mov
lahf
cmc
sub
mov
ljmp
in
mov
sbb
cmc
mov
fists
dec
or
ja
xchg
cwtl
aaa
std
scas
xlat
int
data16
ljmp
push
sub
stc
and
ret
pop
xchg
mov
mov
cmp
and
ljmp
cmp
shrl
jecxz
inc
adc
pop
mov
jl
xchg
das
daa
into
jl
mov
xchg
cmpsl
lahf
ds
pop
cld
aad
insl
in
mov
xlat
dec
std
xchg
sti
iret
dec
cmpsl
imul
jne
sti
test
or
les
imul
mov
pop
pop
idiv
and
pop
mov
scas
loopne
mov
pop
push
sbb
add
aam
or
sbb
pop
pop
cmc
cmp
xchg
les
mov
outsl
and
inc
iret
and
pusha
mov
mov
push
lret
jne
sahf
imul
xchg
jne
movsl
mov
mov
jge
mov
sti
iret
push
jg
sarb
cmp
outsb
cwtl
sbb
pop
and
dec
inc
decl
test
mov
repz
aad
testl
push
fisubs
sbb
jne
xchg
aaa
pushf
jne
lahf
sbb
inc
stc
daa
fidivs
xchg
arpl
stc
aas
add
fiaddl
xchg
mov
int
imul
pop
push
das
xchg
mov
imul
stc
pop
xchg
mov
imull
rcrl
loop
loop
aad
addr16
or
xchg
clc
inc
sbb
in
movsl
cld
push
xor
out
out
stc
add
adc
sub
or
movsb
push
fucomip
dec
xchg
fcoms
das
ficoms
sub
mov
ljmp
mov
inc
jnp
lcall
xor
pop
mov
sbb
jae
xchg
repz
outsb
sub
dec
cli
cmp
mov
mov
cmp
mov
das
xchg
push
inc
out
push
and
cmp
imul
scas
leave
std
xor
into
lahf
cltd
fcompl
mov
jns
dec
sbb
xor
dec
sbb
std
ret
dec
pop
adc
ds
mov
rorb
or
xchg
fbld
and
test
out
insb
push
jle
mov
lcall
xor
test
daa
inc
jnp
lret
mov
dec
mov
push
stos
sahf
cs
add
lret
adcl
and
pop
out
out
sub
jmp
mov
loopne
push
push
cld
aam
lea
ljmp
sti
mov
adc
push
mov
cld
cmpsl
in
rclb
xlat
test
adc
xorl
and
subb
sub
aad
sbb
jno
fstpl
mov
pop
into
pop
arpl
out
cmp
xor
dec
fstps
jno
pop
xlat
adc
jne
jecxz
test
mov
scas
std
cmc
pop
jns
in
insb
sbb
mov
test
test
aam
inc
les
pop
xor
jmp
xchg
cmp
pusha
repnz
push
cmc
sub
shr
cmpsl
movsb
iret
test
stos
pop
dec
and
or
and
in
sub
mov
lcall
lods
nop
jmp
xchg
cmp
cld
ficoms
ret
aaa
into
jl
jg
fimull
sub
int
popf
jge
ljmp
cld
mov
and
loop
adc
out
push
shll
je
popf
mov
sub
cs
adc
jmp
into
mov
movsb
cmpsb
adc
adc
dec
aam
shlb
arpl
adc
idivl
xchg
stos
inc
adc
cmp
dec
fidivrs
cmp
push
rcl
stc
ja
lds
repz
clc
cmp
out
lcall
or
leave
push
and
mov
rclb
dec
xchg
mov
mov
dec
dec
insb
popa
rcrl
sub
mov
sbb
xor
ret
call
push
orl
sub
mov
cld
fldl
adc
mov
fmull
or
std
cmp
outsl
or
cld
cmp
adc
lcall
mov
std
jmp
inc
mov
lcall
enter
jmp
lds
xor
into
cmp
and
xor
insl
inc
cmp
xor
mov
leave
jmp
jp
aas
shll
inc
xabort
inc
xchg
xor
pusha
mov
sbb
test
test
mov
nop
cltd
add
scas
rol
sbb
shll
cli
negl
cmp
mov
xlat
push
sbb
xor
stc
xlat
or
int
pop
fidivs
fdivr
mov
into
lea
sbb
leave
ret
jae
lock
cmp
daa
bswap
leave
ret
jae
push
add
xor
add
hlt
sbb
jae
pop
fisttps
lret
stc
aas
sti
test
sub
add
pop
jb
jne
pop
pop
scas
lods
outsl
cltd
mov
mov
into
pop
addr16
jnp
cwtl
dec
push
or
or
cmpsb
xlat
mov
sbb
push
stos
lds
mov
cli
insb
jge
mov
call
mov
pop
pop
ljmp
test
mov
or
xchg
mov
aad
ljmp
scas
ljmp
cmpsl
inc
aas
imul
leave
sbb
push
jne
fnstsw
out
aam
jne
lahf
jnp
sub
jp
push
movl
scas
jne
pop
in
outsl
testl
in
push
pop
sbb
add
mov
sbb
dec
or
test
cmp
pushf
adc
mov
inc
ret
in
mov
mov
ret
loope
jo
mov
mov
cld
scas
movsb
cmp
aad
pushf
outsb
into
adc
cmpsb
mov
fchs
in
jb
mov
es
mov
test
inc
ljmp
dec
ds
lcall
lods
dec
sahf
rcl
insl
in
mov
jbe
jae
mov
or
jg
jg
clc
sub
popf
movsl
pop
out
jo
inc
movsl
andl
cmp
push
dec
push
aam
push
jne
cmp
test
adc
clc
mov
in
clc
cmp
push
jge
icebp
cmpsb
push
fnstcw
inc
jmp
stos
mov
cmp
out
out
out
jae
test
loope
hlt
mov
ret
pop
rcll
mov
out
push
fcomps
pop
aad
out
aam
xlat
por
mov
mov
xor
xor
cltd
xor
gs
pause
pop
fsubrs
gs
ja
gs
lea
adc
jecxz
imul
sub
push
pop
mov
ljmp
int
fsubl
adc
sahf
cs
xchg
test
push
aad
ljmp
and
imul
mov
js
clc
clc
inc
jp
arpl
dec
or
jo
out
xchg
ljmp
divb
movsl
xchg
mov
mov
mov
lea
lea
arpl
stc
xchg
cmc
scas
cmc
test
mov
into
sub
es
aas
sarb
ja
cmp
mov
popf
push
sub
std
xchg
pop
xchg
pop
push
mov
fmull
pushf
outsl
pop
insb
je
push
xor
pop
outsl
mov
fmuls
iret
fcomps
into
pop
into
cmp
jo
mov
fcoms
mov
loop
jb
test
push
xchg
imul
lret
xor
ja
xchg
xchg
fiaddl
mov
dec
mov
stc
jle
add
lds
movsl
dec
push
cmpsb
sub
sub
xchg
aaa
xchg
ja
lcall
clc
jbe
lahf
mov
push
js
cli
rcr
ljmp
push
cmp
arpl
xor
cmp
xor
scas
or
hlt
inc
outsb
es
xchg
fists
xor
pop
in
cli
push
dec
xor
jecxz
jecxz
jecxz
lds
or
xor
jnp
das
fisttps
dec
jae
mov
sar
shrl
lds
ss
fst
inc
loop,pn
jo
cmp
dec
sbb
xchg
xor
leave
jne
je
ja
mov
call
push
je
mov
cmp
popf
ja
dec
cmc
sub
std
std
and
inc
inc
sbb
pop
inc
mov
pop
js
sub
sbb
loop
fwait
sub
lret
inc
cmc
aad
aam
ljmp
push
lods
inc
jl
jl
cld
leave
clc
fwait
icebp
jecxz
lds
stos
mov
push
testb
jecxz
jecxz
push
leave
mov
mov
data16
fstp
mov
imul
and
pop
out
fsubr
int3
jb
cmp
std
dec
and
cmp
mov
stos
jmp
iret
add
push
jecxz
pop
inc
sti
gs
adc
push
fisubrl
mov
push
mov
jmp
mov
mov
dec
icebp
lret
xchg
jb
sbb
jno
push
sub
pop
sbb
adc
adc
fisubrl
pop
xchg
dec
enter
xor
hlt
and
add
push
jg
lret
imul
cmp
mov
mov
sbb
pop
inc
iret
rcrb
cmc
pop
sbb
hlt
pop
cli
pop
std
xor
inc
mov
cltd
pop
cltd
insl
lods
fldt
mov
nop
out
pop
in
jbe
inc
inc
jle
push
jbe
mov
lahf
fstp
pop
leave
dec
cmc
mov
mov
and
out
dec
mov
pop
icebp
mov
leave
mov
jne
dec
jle
pop
sub
rcrb
pop
mov
scas
push
cli
sub
lret
or
push
gs
jb
mov
push
fwait
scas
jne
dec
mov
mov
stos
ljmp
in
ret
sbb
mov
out
outsb
jg
aas
iret
pop
in
cmc
push
clc
iret
stc
jmp
push
cld
das
cld
sub
add
cld
loopne
loopne
nop
push
data16
in
das
sahf
imul
sub
jl
jl
cmp
jle
pop
and
and
xchg
lahf
xchg
lahf
xchg
aaa
lret
imull
dec
sub
xchg
out
xchg
xchg
push
cmc
bound
cs
mov
mov
adc
adc
xlat
rorl
cmp
jp
mov
xor
js
pop
sbb
sbb
ja
sbb
lea
cwtl
adc
jmp
fwait
iret
cwtl
sub
sti
ja
je
cmpsl
test
mov
insl
out
fucomp
dec
cmc
push
add
adcl
daa
mov
fcomps
adc
ja
jge
movsl
push
lcall
jo
ja
mov
out
mov
sti
enter
testb
jno
jl
data16
dec
or
loope
mov
mov
mov
fwait
mov
jns
stos
sbb
xchg
mov
negb
cmp
scas
dec
out
js
fildll
fwait
xor
mov
insb
addr16
push
aaa
pop
fwait
xchg
fwait
ror
cmp
pop
jae
stc
test
jno
ret
lcall
andb
sub
jnp
iret
pusha
dec
xor
cwtl
sbb
std
push
ficompl
adc
mov
pop
mov
mov
icebp
out
int
mul
jne
pop
lahf
mov
jb
and
sub
cmpb
je
out
xchg
pop
push
jbe
in
cli
fcmove
icebp
sti
jecxz
lods
jp
add
mov
jg
mov
pop
mov
out
mov
pop
inc
js
cmp
pop
and
cs
pop
sub
xchg
imul
popf
push
into
pop
addr16
vcvttpd2dqx
jg
in
gs
jo
mov
into
xor
call
xor
in
jbe
jo
jne
jno
je
mov
scas
mov
push
pop
mov
jecxz
out
je
inc
jns
inc
cli
jmp
pop
cmpsb
xlat
adc
jmp
or
mov
popf
fisubrs
inc
out
popa
out
xor
pop
dec
repnz
or
pop
jle
fcomip
fwait
cli
insl
std
jle,pn
jg
aas
mov
jmp
cmpsl
xchg
fcomip
aas
lock
repz
push
ss
adcl
out
inc
fbld
xor
cwtl
adc
or
shrb
orps
cmpb
xchg
adc
ret
adc
insl
shlb
andb
pop
cmpsb
sbbl
mov
out
ja
inc
mov
jmp
arpl
sbb
mov
repnz
xor
push
mov
cmp
mov
sub
inc
sub
jno
inc
pushl
push
cli
sub
lret
rcrb
lea
and
flds
mov
xor
test
notb
arpl
sbb
jmp
movsl
and
insl
cmc
add
xor
or
rorb
mov
dec
aas
dec
imul
fidivl
mov
inc
pop
movsb
cmp
xchg
lea
lahf
aaa
mov
out
sbb
iret
mov
push
lahf
adc
jg
mov
mov
insl
cld
pop
mov
movsb
mov
fimuls
cmpb
adc
jae
xchg
adc
or
nop
incb
sbb
xor
xor
lcall
scas
xor
xor
lods
dec
xor
mov
cmp
mov
mov
and
fnstcw
sbb
mov
fsqrt
stos
and
xlat
out
ud1
rcrb
lahf
mov
mov
push
das
outsl
nop
aaa
mov
sub
mov
jle
xlat
fiadds
arpl
jmp
mov
or
dec
mov
or
ret
lahf
ret
filds
adc
out
lock
in
dec
mov
lret
inc
outsb
and
jg
xchg
push
lret
xchg
push
mov
inc
push
push
dec
aad
fwait
test
aam
aam
mov
jp
std
add
mov
dec
pop
lods
cmp
pop
xor
mov
inc
pop
mov
icebp
insb
push
js
and
mov
inc
scas
test
test
inc
mov
fidivrl
jg
sub
test
add
inc
leave
xor
sbb
sub
xchg
xor
mov
iret
cwtl
imul
sbb
adc
jnp
in
test
mov
mov
pop
imul
out
data16
mov
cmp
pop
mov
lds
mov
cmp
push
mov
lods
rep
cwtl
push
into
stos
insb
xor
fistpl
nop
push
cmp
pusha
mov
mov
mov
push
pop
xchg
fcomps
mov
cmp
mov
bound
in
mov
mov
cmp
into
test
cmpsl
scas
rol
push
pushf
sub
inc
addr16
xor
mov
jns
jge
sbb
in
movsb
cli
jmp
xchg
ja
fnstsw
pushf
and
pop
adc
lods
ljmp
inc
xchg
int3
inc
xchg
int3
inc
lcall
cmc
nop
pop
int
push
pop
pop
das
lret
jmp
jne
push
inc
fisttps
ficoms
enter
xchg
outsl
and
stc
push
sti
xor
rorb
add
xchg
ret
xor
loope
loope
loope
loope
fsubs
test
and
das
xchg
fcmovne
fldcw
cmpsl
in
in
in
mov
scas
mov
push
sbb
pop
popf
cmpsl
push
shrb
clc
fs
xor
movl
aad
add
fsubrl
xor
jecxz
arpl
push
flds
pop
popa
mov
cltd
imul
outsb
aaa
stos
pop
outsl
pop
cmp
cmpsb
mov
sub
int3
shll
add
stc
mov
jnp
fucomi
jmp
iret
or
test
mov
js
jno
cmc
dec
mov
jb
jb
xor
inc
pop
mov
cld
cmpsb
adc
dec
test
mov
mov
adc
cmp
gs
mov
aad
imul
jp
mov
mov
fmul
cwtl
cmp
jl
sahf
sti
aad
ret
pop
imul
xor
lcall
mov
jno
cmc
xchg
cmc
pushf
mov
jp
jp
add
or
data16
pop
pop
or
sub
jnp
std
test
cwtl
std
xchg
std
sbb
in
imulb
xchg
jbe
hlt
icebp
in
aas
xchg
xor
jns
pop
in
jno
pop
aaa
lods
jb
les
xchg
pop
mov
mov
push
out
insl
out
pop
fsubrs
repz
ljmp
out
sub
notl
jns
jnp
jnp
jnp
sarb
call
pop
divb
icebp
push
ffree
mov
out
adc
stc
aam
jns
mov
pop
pop
test
sub
xor
mov
mov
scas
pop
mov
dec
in
mov
push
insl
push
mov
fidivrl
dec
mov
mov
outsl
mov
mov
fadds
adc
jns
cmp
scas
cmpsl
aaa
xlat
fucomi
push
call
imul
and
adc
or
push
xor
cmp
mov
push
sahf
rcl
push
mov
cmp
dec
or
xor
mov
ror
sbb
es
pusha
fsubrl
insb
int3
xor
int3
sub
mov
popf
xlat
sbb
push
push
lcall
push
stos
push
fsubrl
insl
xchg
mov
pop
pop
pop
xor
cwtl
mov
fisubrl
jge
sbb
mov
or
lock
sub
jnp
mov
mov
sbb
mov
leave
mov
test
nop
insl
add
popa
mov
out
cmpsl
xchg
pop
add
js
jg
jl
mov
xchg
xorl
filds
jg
pop
lock
rol
ret
cmp
sbbl
ret
cmpsl
mov
pop
or
test
or
push
sbb
out
das
punpcklwd
add
xchg
outsl
cmp
frstor
movsb
movsb
sub
aam
xchg
push
insl
xchg
in
stos
or
repz
movsl
ficompl
pushf
ds
aas
outsb
pop
insb
xor
adc
lret
icebp
add
pop
mov
mov
cli
js
fdivrl
outsb
cmp
mov
lcall
push
ja
ja
mov
sti
sarb
test
push
es
lods
test
ss
xor
mov
sub
push
call
push
pop
stos
xor
pop
mov
mov
ror
rsm
jnp
inc
jb
stos
out
push
aas
inc
daa
jmp
jmp
xor
aaa
ds
sub
sub
jl
jl
cli
ss
mov
sub
adc
ret
adc
stos
xor
push
int3
sbb
mov
push
ret
loope
jno
and
punpcklwd
icebp
stos
js
inc
push
xlat
jnp
mov
xor
scas
sub
xchg
loopne
pusha
imul
push
and
adc
orl
nop
movsb
or
lret
mov
push
jnp
iret
mov
pop
xchg
js
jp
lds
clc
cmp
clc
popf
lock
mov
adc
fisubrs
pop
mov
sub
mov
hlt
nop
popf
out
jae
cmp
mov
push
ja
xor
mov
stos
ret
enter
add
or
inc
push
repz
or
pop
int3
aaa
js
in
sbb
outsl
fs
lock
lock
jl
lock
inc
lock
lock
cmp
push
lcall
jmp
adc
enter
testl
lock
jno
fadd
sbbb
xchg
insl
stc
and
mov
push
lcall
iret
shr
push
push
aas
mov
mov
pop
mov
jnp
adc
adc
incb
push
ja
push
dec
ss
rolb
dec
cltd
xor
mov
pop
ret
sbb
sar
mov
lock
pushf
push
dec
das
cmp
dec
cmpsl
add
out
push
icebp
push
imul
mov
mov
out
mov
xchg
or
in
dec
test
cld
into
jle
jg
das
mov
jg
lcall
pop
mov
cmp
sub
push
movb
cmp
dec
mov
cltd
and
adcb
fsubl
add
push
ja
pop
test
loopne
imulb
bound
lea
xchg
and
inc
movsb
std
dec
mov
add
shll
sub
mov
das
mov
das
sub
sub
fcoml
add
mov
scas
mov
rcrb
add
inc
sti
cs
rcll
xchg
incb
pop
jge
mov
dec
mov
mov
push
adc
in
xor
sbb
loop
xor
out
xlat
add
jns
cld
popf
adc
into
ljmp
inc
iret
sbb
push
cmc
mov
pop
daa
cmp
add
or
test
jnp
sti
and
out
adc
pop
mov
jecxz
mov
push
pop
aas
out
push
outsl
mov
aas
loope
push
jae
pop
pop
push
cmp
addr16
mov
mov
cmp
std
inc
mov
xor
popf
lret
pop
mov
mov
push
in
push
lods
in
push
shll
sbb
int
mov
aaa
pop
jnp
xor
and
add
xlat
jo
vunpckhps
int
int3
in
cmp
add
jbe
insb
out
imul
add
nop
ja
lret
repz
push
sahf
shlb
and
fcomip
or
popa
xchg
outsb
or
or
cmp
mov
jmp
cs
data16
push
xchg
enter
sub
in
repnz
stc
insl
mov
mov
call
pop
repz
mov
jp
mov
nop
mov
sahf
decb
fildll
xor
push
jb
nop
std
popf
std
fwait
popf
adc
xor
pushf
sbb
push
clc
fidivrs
mov
out
in
and
sbb
cli
or
shrl
ds
rclb
and
xchg
stos
sub
cmp
aas
mov
dec
arpl
ret
fisubrl
stos
int3
sbb
outsl
cltd
jne
ret
mov
pop
push
push
push
cs
cmpl
in
fdivs
mov
fimull
dec
cmp
outsb
xor
pusha
add
inc
xchg
imul
out
inc
mull
mov
xlat
fistps
jmp
out
mov
and
addr16
xchg
in
andb
pop
pop
scas
or
call
fnstenv
rclb
push
call
jns
jmp
int
xchg
fistpll
pop
xor
insb
mov
sbb
add
push
sbb
fisubrs
mov
popa
aad
cli
pop
arpl
gs
aad
loope
adc
into
jmp
pop
fsts
add
pop
inc
and
nop
pop
popa
insl
pop
inc
mov
mov
inc
mov
sub
mov
enter
in
dec
in
pop
cld
cmp
icebp
cmpsb
icebp
sti
dec
adc
cmc
mov
ffree
jle
test
mov
movsl
jnp
popa
out
andb
ret
push
jne
int
iret
ds
cli
arpl
mov
cmp
sub
dec
aas
pop
das
not
or
fcoml
das
cmp
insl
outsb
pop
jno
dec
adc
mov
cmp
adc
jecxz
loopne
aas
push
dec
stos
jmp
inc
mov
jae
pop
fisubl
sub
je
and
pop
mov
rol
push
aas
sti
inc
subb
shl
loopne
lods
out
out
cmc
shrl
nop
out
mov
sub
sub
jge
inc
aam
and
ljmp
sub
pop
out
or
jle
mov
in
js
mov
cmpsl
jg
daa
ret
and
jle
xchg
cmpsl
sub
and
sbbb
mov
jmp
lods
push
lret
cmc
mov
loopne
test
imul
xlat
lret
test
aas
in
fidivrs
inc
or
insb
jns
arpl
das
jle
fdivl
paddusb
in
lock
dec
and
adc
jecxz
cmpsl
adc
sub
nop
jno
or
in
clc
push
popa
and
clc
xchg
es
mov
adc
add
inc
or
xchg
mov
adc
or
test
and
fistps
repnz
and
lock
imul
repnz
insb
movsb
and
ret
xor
jle
jmp
cmp
pop
xchg
mov
xor
inc
hlt
or
jecxz
cli
push
jl
lock
and
mov
xor
clc
insl
nop
sbb
mov
jp
mov
mov
aas
mov
aam
sub
dec
loope
std
lock
xor
loopne
push
mov
push
mov
pop
sbbl
jne
or
jbe
jbe
es
divl
or
out
fbld
cmp
push
jecxz
ret
adc
lods
mov
pop
add
lods
loopne
icebp
xchg
arpl
xor
adc
test
mov
rcll
sbb
jl
xchg
adcl
test
pop
sti
jno
je
mov
mov
pminub
push
pop
push
cmp
ret
jne
aaa
xlat
xchg
adc
ds
ficomps
add
xchg
cmp
adc
loope
mov
dec
pop
mov
aad
movsb
ja
lahf
pop
push
popf
arpl
aaa
movsl
dec
and
cmp
outsb
jp
lcall
jo
push
pop
cmc
sbb
pop
rcl
jmp
lods
xchg
mov
fidivl
gs
adc
jmp
lods
notb
sub
jae
cwtl
jp
pop
cmp
movsb
out
into
subb
call
mov
xor
mov
nop
aaa
jge
popa
neg
idivb
fldcw
imul
pop
adc
in
jp
outsl
insb
in
sub
fmull
pop
out
ds
mov
jl
fistpll
sbb
or
mov
fdivs
sbb
fimuls
or
fsubrl
push
jno
or
stos
push
inc
loopne
cwtl
mov
fimull
xchg
sti
cmp
stc
adc
insl
jp
pop
ss
cli
pop
mov
lcall
push
push
fsubs
push
jmp
imul
clc
and
into
xchg
cmp
ret
pop
or
sub
add
jns
imul
mov
add
sbb
mov
adc
pop
sti
jo
pop
jnp
dec
push
call
ret
pop
inc
xchg
cmp
mov
imul
iret
jmp
lods
cmpsl
mov
pop
xlat
fiadds
in
roll
mov
das
xlat
lahf
add
pop
pushfw
outsl
push
andb
mov
arpl
sub
mov
pop
rep
inc
cmp
xlat
notl
in
fcomps
add
jge
std
add
dec
call
js
xchg
cmp
and
imul
iret
stos
add
add
cmp
mov
mov
sbb
add
loope
test
out
dec
adc
das
andb
and
imul
cwtl
dec
das
jp
jle
cmp
jae
fisttps
ret
add
in
in
insb
cld
jecxz
in
movsb
inc
aam
aad
popa
movsb
mov
push
xlat
adc
std
adc
pusha
ror
or
loope
push
das
mov
std
xchg
adc
sub
sti
push
cmp
xchg
dec
stc
divb
jecxz
jecxz
mov
push
pop
aas
xchg
mov
pop
dec
pop
xchg
clc
ret
out
test
outsl
mov
fidivrl
sahf
loope
negb
lret
scas
ror
inc
pop
aam
xlat
xor
jns
test
jbe
out
pop
or
clc
fdivrl
pop
js
dec
nop
mov
dec
test
or
pop
xor
and
xchg
clc
adc
pop
xor
xor
push
arpl
mov
pop
dec
pop
jnp
sub
imul
pusha
add
sub
adcb
mov
imul
dec
pop
fs
mov
fs
mov
arpl
cmc
ss
jge
xchg
pushf
mov
cli
push
fiadds
adc
js
into
out
push
pop
das
mov
pop
jo
fdivrl
fldl
testl
pop
rorl
insl
fdivrp
js
ds
pop
movsb
insb
call
xor
nop
pop
or
cli
jecxz
mov
inc
rcll
fmul
mov
or
mov
mov
sub
iret
jecxz
jae
mov
xor
push
stc
and
mov
pop
mov
icebp
rcr
scas
cmp
cmp
pop
push
dec
sub
test
icebp
dec
fwait
clc
in
lcall
fisubs
test
int3
cs
pop
cwtl
fstl
loopne
mov
mov
pop
inc
ljmp
rcrl
sbb
incl
inc
jecxz
arpl
dec
sub
jnp
test
push
fisubrs
mov
ret
mov
cmpb
imul
inc
xchg
cli
mov
pop
andb
or
mov
fdiv
scas
sbb
pop
mov
out
icebp
fiadds
cmpsl
mov
lock
fdivrs
imul
mov
hlt
in
das
out
mov
stos
lret
cmp
ss
fld
test
push
mov
push
cmp
fwait
mov
js
pop
push
jns
fcoml
jle
cli
pop
outsb
mov
insl
in
sbb
mov
repnz
in
pusha
adc
stos
loop
sbb
out
mov
ret
pop
shl
js
test
mov
stos
outsl
test
add
cmp
repz
imul
insl
push
call
scas
icebp
repz
je
scas
inc
out
rol
rolb
add
pop
test
push
out
add
mov
add
jl
jns
sbb
sub
push
sbb
jns
push
xchg
lods
out
cmp
sti
xor
aad
mov
sarb
adc
and
push
mov
lock
hlt
cmp
push
pop
shll
cmp
sub
bound
pop
shrl
idivb
outsb
lds
lret
imul
add
or
pop
mov
or
mov
or
lock
cwtl
ret
outsl
mul
stc
daa
cwtl
cmp
outsl
mov
stos
adc
xor
adc
js
cmc
or
inc
outsb
hlt
mov
fidivl
jecxz
pop
or
sub
and
push
add
push
testb
sub
mov
aaa
add
aaa
lds
cmp
adc
xlat
pop
xchg
cmp
rcl
push
pop
jmp
aaa
imul
in
shrl
dec
xchg
scas
js
movb
mov
rorb
inc
fmuls
sub
int3
cmp
jl
iret
leave
jmp
push
loopne
mov
xor
sub
push
loope
jnp
stc
inc
stc
add
push
pop
orl
jno
stos
test
mov
mul
push
jl
das
shlb
inc
out
and
stc
dec
aad
mov
iret
loope
jle
cs
mov
adc
rcrl
repnz
mov
ror
mov
mov
pop
jle
cmp
pop
shrb
int
xor
das
cwtl
das
arpl
in
xorb
inc
inc
imul
add
sub
cmp
sbb
dec
dec
js
sub
sub
ffreep
adc
and
subl
inc
mov
jae
aad
loopne
jbe
jecxz
mov
jbe
xor
call
inc
bound
test
pop
les
sbb
incl
decl
lcall
jg
mov
int
lahf
lds
jp
shlb
popa
cmp
call
fwait
mov
and
das
inc
stos
inc
pop
pushf
das
aaa
mov
push
cs
sarb
mov
popa
push
xchg
lock
xchg
cmp
jg
popa
imul
aad
loope
out
test
mov
mov
adc
arpl
push
mov
js
lret
rol
inc
inc
aam
pusha
mov
icebp
jge
inc
and
dec
mov
outsl
scas
ja
jnp
xchg
outsl
adc
in
aaa
xchg
pop
mov
pop
lods
jmp
mov
ret
cmpsb
fisttps
inc
sub
xor
xor
leave
mov
pop
jl,pn
jg
ds
ljmp
popa
jmp
lods
mov
call
rcr
push
je
pop
cmp
mull
jmp
xchg
addb
stos
mov
fnstsw
out
out
jle
cwtl
mov
jle
cmp
sti
push
repnz
ret
xor
rolb
fwait
sbb
push
ja
cmp
push
stc
dec
lods
ret
test
mov
je
or
adc
sbb
ljmp
jbe
lahf
push
jmp
mov
aas
push
mov
mov
fisttps
imul
cli
divl
cmp
xchg
lock
ror
sti
int3
pop
int3
add
js
sahf
inc
cmpsl
outsb
xor
das
mov
pop
mov
adc
addr16
jno
adc
jne
jmp
test
pop
cli
or
mov
jle
fbstp
mov
les
cmove
setbe
fdivrp
aaa
mov
jno
std
mov
push
fsubs
sbb
dec
arpl
sbb
movsl
xchg
loopne
mov
xchg
jge
mov
js
cmp
or
sbb
mov
inc
lods
enter
or
inc
xchg
enter
mov
sub
hlt
push
jns
sahf
xchg
orl
in
mov
stos
mov
repz
lcall
pop
mov
and
data16
or
pop
cld
cmp
fcom
inc
sbb
ret
out
ljmp
imul
mov
addr16
add
cmp
jl
cmp
stos
leave
lods
lock
popa
pop
dec
addb
mov
fdivs
loopne
jns
decb
pop
xorl
and
jecxz
enter
test
mov
iret
repz
movsb
mov
cmc
adc
push
insb
loope
cmp
cwtl
lret
std
addr16
pop
cld
xlat
cld
push
rcl
inc
lret
mov
jbe
lahf
pop
mov
popa
mov
push
and
insl
jmp
out
nop
aas
lds
shr
cmp
fisubs
dec
sub
subb
push
ss
ficoms
push
push
mov
fimull
push
push
jnp
cli
sbb
adc
mov
pop
aas
mov
push
in
and
inc
cmp
sbb
pop
popa
movsb
insl
mov
push
jp
je
mov
xor
imul
inc
gs
jecxz
mov
in
dec
aad
mov
push
push
mov
test
jnp
jge
mov
jne
mov
or
out
addr16
nop
push
jno
mov
pop
sub
xor
xchg
jns
xchg
pop
xlat
mov
mov
fimuls
fimuls
cwtl
pop
ret
repnz
out
dec
pop
mov
cmp
ljmp
sbb
std
enter
sbb
or
jno
js
sub
js
aad
js
test
push
mov
dec
lds
mov
sbb
or
idivb
test
ret
repz
mov
gs
mov
lcall
scas
shll
fwait
mov
dec
push
mov
mov
xor
lock
icebp
scas
jecxz
loopne
aam
addr16
or
in
es
mov
mov
std
movsb
pop
shrl
insb
inc
sbb
sbb
fsubl
call
or
fiadds
mov
cld
enter
push
shrl
ds
loope
sbb
adc
ja
mov
adc
mov
test
or
mov
lock
into
jns
mov
jge
sub
lock
cmp
mov
add
iret
mov
push
and
rcrl
adc
mov
outsl
bsf
scas
xorb
mov
add
jge
popf
xchg
add
jge
add
lods
pusha
push
test
sbb
in
xchg
inc
movsl
dec
clc
add
sub
push
data16
or
scas
and
iret
lods
push
jbe
aas
push
and
jno
cld
cmp
sub
add
xor
lcall
push
icebp
push
and
sub
mov
push
ret
add
pop
fsubrl
cmc
pop
and
xor
sub
fmuls
scas
fnstsw
sti
pop
bound
mov
in
cmp
mov
pop
cmp
mov
test
and
push
sti
negl
add
pushf
xor
ljmp
cmp
xor
mov
fsts
sbb
mov
adc
mov
ss
rorl
hlt
imul
orps
push
sti
mov
mov
pop
sub
jmp
in
and
pop
loopne
daa
nop
pop
jmp
dec
fiadds
scas
push
stc
mov
mov
hlt
testb
test
leave
adc
int
xchg
mov
mov
call
adc
inc
mov
ds
fdivr
mov
pop
inc
scas
movsb
in
push
movups
push
adc
xor
rcl
fs
jns
out
dec
in
adc
cld
dec
pop
pusha
jne
lea
iret
iret
mov
mov
add
mov
lret
cmp
ss
cld
in
cmp
xchg
out
fsts
inc
push
bound
loopne
adc
adc
test
repz
push
fstpt
push
and
inc
imul
xor
dec
call
adc
sub
repz
in
jl
fimuls
lock
sbb
cli
scas
mov
mov
cld
outsb
les
int
push
push
cmpsl
pop
lock
inc
lods
mov
int
loopne
aam
outsb
shl
sbb
mov
cmpsl
loope
and
jle
test
sub
adc
cwtl
cmp
pop
scas
mov
mov
cmp
loop
cli
fistps
lcall
jno
fwait
daa
inc
daa
daa
hlt
xor
dec
dec
ja
daa
sub
adc
jle
imul
imul
jg
std
adc
xor
mov
mov
popa
dec
jl
std
mov
inc
data16
inc
mov
outsl
sub
aaa
xor
cmpsb
rolb
mov
xchg
repnz
mov
loope
jae
cmp
mov
pushf
jecxz
cmpsl
aaa
pop
mov
pusha
insb
or
mov
xor
pop
sbb
cmp
push
shll
or
in
mov
pop
aas
ret
xlat
xchg
out
push
mov
imul
pop
adc
push
daa
mov
imul
adc
mov
push
and
rcrb
xor
js
sbb
lock
repz
hlt
jns
ret
jecxz
dec
mov
xor
pushaw
push
ss
mov
bound
scas
stc
rcrl
gs
mov
or
dec
jnp
movsl
jnp
xchg
mov
jns
cwtl
shr
mov
adc
lret
pop
xor
adc
inc
in
sti
or
push
pop
mov
push
xchg
mov
pop
push
mov
inc
sub
subb
dec
fcomps
repz
and
or
xchg
jmp
mov
dec
hlt
inc
ljmp
mov
mov
cli
adc
adc
in
insl
adc
in
clc
sarl
fcoms
cli
push
mov
cli
xor
jmp
inc
cli
pop
mov
mov
xor
cmc
jno
imul
push
mov
adc
xchg
std
xor
jnp
jno
mov
adc
jge
mov
enter
out
pop
adc
cs
test
sub
xchg
push
adc
xor
inc
adcb
inc
dec
aam
or
ret
dec
sahf
mov
push
stc
imul
sub
add
push
pop
movsb
cmp
adc
push
imul
mov
push
stc
jl
sahf
lea
jns
mov
out
dec
fmul
adc
push
test
insl
mov
dec
mov
dec
mov
mov
xchg
mov
xor
dec
daa
nop
fcmovbe
clc
icebp
fwait
icebp
or
adc
cwtl
enter
lahf
loop
inc
icebp
mov
daa
cmc
push
mov
mov
test
xor
cmp
push
xchg
scas
insb
mov
xchg
mov
xor
cltd
xchg
mov
insb
mov
cmpsl
inc
inc
gs
add
xor
es
pop
mov
xchg
cltd
gs
dec
push
fnstenv
and
xorl
ljmp
aas
jno
mov
divl
ds
inc
xchg
jle
lods
movsb
mov
fsubrs
outsb
scas
push
pop
out
mov
in
cmc
add
push
sti
jmp
mov
clc
xchg
and
popa
pop
arpl
sub
ret
mov
sub
arpl
insb
xchg
jnp
dec
rcrb
insb
xchg
mov
push
cld
and
shr
cli
lods
pop
jno
insl
imul
push
jne
scas
jg
js
mov
and
repnz
push
in
mov
or
add
xchg
or
imul
sbb
push
fsubs
aad
shlb
jg
pushf
js
outsl
mov
inc
pop
sbb
sbbb
test
pop
mov
je
cs
or
sub
popa
jbe
pop
jl
rorl
pop
lahf
add
mov
mov
mov
jle
and
adc
xor
out
lret
scas
xor
mov
cvtpi2ps
aad
push
ljmp
and
pop
sbb
xor
arpl
jl
jl
mov
xchg
js
push
push
push
jno
fucom
sub
inc
fsubrs
xor
adc
loop
insb
out
les
movsl
cmp
popf
inc
mov
ja
repz
test
mov
in
mov
xlat
jbe
aas
sbb
mov
ljmp
popa
lock
ss
js
nop
ret
xchg
mov
nop
pop
lds
push
lock
or
lock
pushf
cmpsb
xchg
xchg
jmp
lds
stos
in
mov
stos
sbb
leave
xor
hlt
popa
cwtl
fstl
jp
rcrl
aam
adc
mov
inc
aam
inc
push
dec
imul
mov
enter
pop
lea
nop
sub
xchg
mov
ror
push
cld
shll
mul
test
fisubs
outsb
fisttpll
cld
and
fdivs
jbe
xor
jmp
data16
cmp
mov
xlat
ret
cmp
adc
shr
test
push
pop
les
pop
je
or
rorb
push
repz
jp
sahf
mov
sub
ljmp
xchg
out
and
rclb
imul
jmp
hlt
addl
jne
cli
cmp
cmc
add
test
pop
sub
push
outsb
or
bts
adc
jecxz
in
mov
mov
sahf
ret
push
xchg
in
push
insb
fmull
mov
mov
mov
sub
sbb
jle
dec
xor
or
xor
push
fimull
jge
mov
andb
sbb
lcall
sahf
mov
xor
or
xor
xor
push
xor
push
loope
xor
dec
ror
imull
dec
bound
std
or
cmp
mov
pop
fildll
push
out
out
sub
mov
popa
or
out
js
sbb
and
add
jl
lea
or
pop
inc
and
sbb
sub
mov
push
in
aam
inc
and
mov
lret
pusha
aam
mov
ss
nop
clc
mov
scas
push
pop
fisubrl
faddl
scas
xor
jo
cmp
or
out
loopne
inc
test
xchg
push
enter
nop
mov
jecxz
mov
pop
movl
push
das
dec
int3
push
hlt
push
ja
add
and
loopne
sbb
sub
shrl
xchg
adc
icebp
sbb
xchg
nop
mov
icebp
sbb
outsl
out
negl
dec
je
lret
call
and
xor
into
sahf
sbb
sbb
popf
scas
into
xor
clc
out
pushf
push
loopne
cmpsb
outsb
cmp
insb
pop
xchg
ficompl
mov
add
rcr
jmp
sub
call
add
loopne
ret
push
dec
shl
mov
insl
or
iret
mov
sbb
mov
call
xor
pop
adc
bswap
push
in
lods
mov
adc
push
test
aad
ljmp
arpl
lods
divl
bound
loop
imul
hlt
xor
pop
and
mov
adc
dec
loopne
stos
or
mov
incl
ss
mov
sub
mov
cmp
das
test
jbe
repz
cs
jp
inc
fldenv
cld
xor
movsl
inc
sbb
pusha
mov
cmp
jo
fists
es
stos
movsb
push
push
sti
movsl
or
pushf
mov
lahf
icebp
add
push
jl
push
sbb
and
xchg
ror
mov
adc
sti
subl
pop
add
ja
clc
or
iret
test
pop
inc
cmp
add
xchg
test
pusha
orl
xor
jo
enter
cmc
and
xlat
inc
mov
jns
xchg
repz
fiadds
dec
push
mov
aaa
cmpl
sti
push
mov
mov
mov
loopne
pop
fcomip
popf
lret
fldt
or
ds
mov
int3
sbb
enter
push
fs
sti
lods
pop
cmpb
imul
mov
or
psubusb
cmc
rolb
ds
pop
shr
repnz
push
repz
and
or
jl
cli
mov
cmp
pop
xor
adc
outsb
repnz
and
and
ljmp
sub
dec
pop
cmp
daa
mov
mov
flds
call
fmul
cs
lods
jmp
jg
out
popa
cmc
xor
xor
dec
sub
dec
dec
mov
mov
mov
jecxz
xchg
icebp
cmp
fnstcw
sbb
int3
xorl
xor
xor
cmp
cld
movsb
adc
pop
orl
sbb
mov
shl
outsb
imull
out
rclb
or
sub
mov
mov
mov
cmp
cmpsb
les
mov
into
xchg
int3
adc
fisubrs
xor
xor
xor
add
push
sub
lret
outsb
jb
sahf
loop
loopne
mov
fistpll
jmp
and
lret
outsb
popa
in
mov
scas
imul
lea
add
inc
dec
inc
pop
xor
lock
notb
decb
jns
jbe
iret
jb
pop
sbb
rcrl
pop
jo
mov
pop
fdivrl
sahf
into
int3
lea
hlt
jmp
imul
jb
pushaw
push
pop
mov
lahf
push
lea
mov
adc
orb
loopne
repnz
mov
mov
outsb
mov
mov
cmp
sbb
inc
fsub
int
push
mov
lods
dec
mov
pop
mov
mov
xchg
lcall
addb
aaa
sub
mov
mov
shlb
push
inc
loopne
imul
sbbb
and
mov
int
nop
cmp
in
int
sbb
ret
dec
mov
mov
popa
mov
fstpl
push
testb
mov
xor
frstor
dec
nop
mov
lock
adc
pop
arpl
por
aam
data16
lods
repnz
push
aas
mov
mov
jmp
cltd
mov
sub
dec
outsb
lret
xchg
mov
stos
pop
push
lods
pusha
data16
jo
jp
rorb
in
les
lods
enter
pop
shrb
data16
shlb
in
gs
xlat
xchg
fndisi(8087
imul
lods
dec
pop
cmp
xlat
jno
rclb
pop
aaa
push
sbb
cmp
les
jg
int3
movsl
out
and
cmp
dec
hlt
cmc
pop
fs
xor
mov
jne
repz
test
push
add
adc
testb
mov
cwtl
dec
push
adc
and
sub
add
jp
jg
fdivl
mov
pop
mov
cmpsb
ret
xchg
ds
outsl
fiaddl
mov
in
imul
xchg
xor
aam
test
dec
adc
stc
mov
shll
cmpsl
fiaddl
insb
mov
movb
std
push
call
push
push
pop
icebp
out
pop
mov
dec
xchg
xchg
lods
daa
mov
push
outsb
popl
mov
pop
xchg
add
scas
mov
icebp
mov
jecxz,pt
insl
sti
int3
or
aad
adcb
sub
out
adc
xlat
fdivrs
pop
outsl
fcmovnu
sarb
fistl
outsl
lea
mov
inc
or
push
mov
lret
mov
pop
lret
imul
xchg
bound
ja
push
lcall
es
mov
das
cld
push
aam
ss
sahf
lods
adc
pushf
inc
dec
sbb
ja
repz
sbb
cld
es
mov
xor
push
repnz
push
jno
fisubs
pop
fstl
dec
std
inc
adc
push
cli
cmc
mov
pop
rcl
mov
inc
in
ret
out
sbb
push
and
movsl
and
outsl
push
mov
aas
inc
xchg
pop
mov
popl
cmp
add
adc
jb
pop
xchg
mov
jb
dec
aam
or
ficomps
in
cmpsb
cld
push
popl
test
mov
imul
ret
sub
pop
push
xchg
xchg
repz
adc
pop
movsb
xorl
scas
jecxz
fldl
fwait
iret
fcompl
mov
xchg
mov
into
push
in
inc
cli
xchg
adc
pop
mov
out
sbbb
mov
decb
lret
cmc
enter
outsl
repz
in
test
out
or
xor
jmp
movb
ret
mov
cmp
push
jle
outsl
mov
sub
jecxz
xchg
push
and
mov
clc
jbe
arpl
inc
cmp
add
sahf
dec
pop
enter
pop
in
dec
cmp
push
shrl
loope
inc
mov
hlt
sbb
push
outsl
popa
insb
scas
xorl
or
out
or
daa
gs
ss
xor
mov
cmp
jl
pop
mov
mov
cmovne
stos
mov
cmp
sbb
cmpb
bswap
mov
mov
dec
jns
dec
repz
fisubrl
dec
mov
pop
lods
jns
sbb
lds
sub
nop
xchg
outsb
xchg
and
idivl
cmp
mov
mov
lahf
xorb
je
push
fsubrs
scas
adc
xchg
pop
xor
or
les
pushf
mov
xchg
add
xchg
jle
xchg
mov
jg
rorb
pminsw
and
cmp
cwtl
lea
loop
mov
jl
cmp
stos
push
or
out
xchg
das
pop
pop
loopne
sub
aaa
std
in
mov
out
push
dec
fs
enter
sbb
testl
ret
orl
ss
pop
pop
push
fwait
jp
pop
jo
inc
jl
push
arpl
push
outsb
test
sbb
mov
in
jbe
mov
mul
daa
cmp
in
push
imul
mov
aaa
add
outsl
mov
cmpps
shll
xchg
xor
jbe
dec
std
inc
mov
imul
mov
inc
push
push
aaa
sbb
adc
mov
cmpl
jns
dec
dec
scas
push
jl
pusha
xor
mov
pushf
xlat
shlb
icebp
and
imul
outsb
jno
mov
lods
in
in
call
mov
xor
icebp
push
sub
fxch
loop
dec
cld
lock
push
xor
push
out
sub
sbb
inc
int3
imul
mov
mov
and
repnz
mov
jle
cli
pop
das
lock
clc
out
inc
xor
adc
add
mov
or
addr16
mov
cmp
mov
inc
xchg
in
cltd
test
sbb
cld
push
cld
cmpsl
jnp
int
adc
aas
loop
pop
add
int3
pusha
cmpsb
jmp
mov
repnz
out
mov
xor
mov
jl
outsb
push
sbb
jle
lret
pushf
sub
arpl
fwait
int3
bound
ret
add
les
dec
lods
idivl
cwtl
incb
out
out
pop
push
cltd
mov
shl
add
les
pop
sarb
cmp
outsb
cmp
and
out
out
xchg
sub
test
jg
cmc
rcrb
mov
mov
mov
xchg
mov
jne
mov
pushf
addb
or
dec
gs
sub
jle
xchg
mov
test
and
enter
push
adc
mov
mov
call
dec
movsl
mov
mov
or
push
xor
aaa
in
mov
inc
mov
sub
je
outsb
fs
cmp
sub
cli
sbb
loope
int
out
or
flds
lahf
mov
mov
filds
lahf
mov
pop
cs
sbb
lods
cli
js
xor
push
pop
push
outsl
mov
jnp
not
push
insb
das
icebp
faddl
xchg
cwtl
leave
daa
xor
inc
and
push
bound
test
add
xchg
mov
adc
xorb
push
or
arpl
inc
arpl
jb
cmpsl
sbb
stos
cltd
mov
pop
iret
pop
ss
popa
cmpsl
or
mov
pop
fisubs
icebp
push
data16
adc
jecxz
loop
push
jp
push
jecxz
jg
mov
mov
and
addr16
aas
mov
enter
xor
gs
fidivrs
sahf
call
in
push
jno
cmp
adc
jns
icebp
cmpsb
cmc
mov
push
mov
mov
cmpsl
mov
out
push
insl
clc
cli
inc
daa
in
fldcw
sbb
inc
mov
fidivrl
inc
out
ret
lret
repnz
flds
mov
jecxz
les
bound
cld
sub
jle
sub
mov
addr16
shll
in
sbb
mov
pusha
sub
sbb
pushf
fldcw
repz
lods
icebp
and
inc
loop
pop
sub
fcomip
arpl
mov
sbb
add
add
dec
fadd
gs
dec
fwait
pop
fwait
jns
mov
xchg
imul
xchg
imul
out
loopne
les
jl
cli
push
mov
mov
mov
jnp
sbb
faddp
mov
adc
mov
cld
pusha
xlat
push
xchg
mov
push
fildll
int3
mov
in
loope
add
rcr
pop
mov
adc
aam
leave
sub
test
pop
add
mov
inc
insb
mov
loope
aas
jo
and
out
or
mov
or
inc
jl
xor
out
xchg
js
or
mov
cmp
cmp
cld
cli
and
aam
inc
jge
jge
mov
sti
pushf
mov
sub
arpl
out
hlt
fisubrs
and
bound
push
push
mov
and
jmp
or
adc
jmp
ds
adc
rorb
pop
push
mov
xor
push
xchg
popf
push
clc
clc
out
inc
dec
sub
addr16
int3
mov
mov
sub
lods
sti
dec
mov
rclb
movsb
cwtl
pop
xor
cld
test
and
or
push
pop
movsb
push
push
pop
pop
test
movsb
pop
cwtl
pop
push
push
push
inc
inc
movsl
movsb
push
jp
sub
shlb
out
mov
out
jle
fisttps
pop
iret
repz
loope
idivl
jnp
loope
mov
js
inc
inc
adc
sahf
mov
ror
sbb
push
insb
push
fisttpl
xor
ljmp
out
enter
out
inc
js
mov
jge
sub
or
push
or
xor
lea
adc
jg
mov
cmpl
mov
test
add
push
inc
or
mov
aaa
jno
jbe
ja
in
rcrl
mov
inc
mov
dec
iret
repz
push
pop
mov
push
pop
push
mov
fs
cld
cmp
cmp
bswap
popa
into
iret
push
push
es
fstpt
pop
sahf
push
cmp
in
aaa
jo
scas
inc
ja
xlat
pop
or
int
iret
arpl
jge
cmp
adc
fs
cmc
aad
lock
cs
xchg
setns
dec
sbbb
aas
pop
aas
push
incl
je
das
cmpsb
xor
mov
dec
ret
pop
ss
ss
xor
xorb
pushf
mov
jge
lret
mov
mov
icebp
pop
jo
add
inc
hlt
subb
data16
pop
cld
lods
out
lods
es
sbb
das
rcrl
sbb
push
iret
sub
leave
int3
cltd
fs
bound
call
addr16
dec
sti
stos
cmc
or
mov
movsl
test
jmp
or
loop
mov
cmp
xor
arpl
mov
pushf
or
adc
repnz
mov
adc
pop
das
inc
pop
out
insb
movsb
mov
push
hlt
mov
jge
out
shlb
pop
jb
sub
mov
inc
xor
insl
int
repz
adc
loopne
dec
orb
mov
cmp
sbb
mov
aam
adc
jnp
add
jno
outsl
dec
test
shlb
call
daa
mov
loope
ret
xchg
jo
sti
or
mov
divl
idivl
jecxz
cmp
int
dec
test
sbb
stc
int3
jno
cltd
loop
mov
loopne
mov
cld
add
jmp
out
xchg
arpl
lret
int
mov
addr16
push
imul
cwtl
jnp
out
jmp
dec
addr16
inc
mov
std
xchg
sahf
fidivl
add
add
mov
loope
pop
mov
xorb
pop
push
sub
ljmp
imulb
jo
sub
and
mov
addl
pop
fists
dec
iret
in
xor
inc
push
in
cmp
pop
shrb
lds
mov
daa
mov
stc
dec
hlt
bound
xchg
addr16
clc
jp
call
test
insl
int3
sub
jno
movsl
jnp
inc
mov
pop
mov
rorl
int
popa
dec
rol
and
jl
mov
daa
notl
test
cmpsb
xorl
out
adc
and
sub
or
xchg
push
enter
jo
xor
movsb
pop
data16
lret
idiv
xchg
lods
lret
add
inc
adc
outsl
jecxz
adc
ss
std
push
push
cmp
cmp
add
push
dec
mov
lock
sub
pushf
sub
mov
sbb
inc
in
and
inc
fwait
call
jge
std
cs
push
call
add
sub
mov
movb
xchg
jl
ja
fwait
push
daa
popf
es
jb
xor
push
push
pop
xchg
mov
lock
pop
in
pop
mov
and
ret
in
cmp
mov
lret
add
sub
lds
mov
pushf
mov
aam
xor
sbb
das
jo
movzbl
and
mov
and
ds
mov
mov
xor
jle
fstpt
mov
int
xorb
add
push
outsl
pop
stos
mov
popf
sbb
jno
mov
fwait
mov
jle
movsl
mov
mov
fnsave
into
negl
pop
mov
aaa
sti
add
and
cmp
ret
pushf
and
and
insb
ljmp
cmc
aad
repz
ffree
push
lcall
jle
cmp
test
loope
pop
cld
inc
insb
lret
mov
push
ljmp
shrb
rcrb
ret
icebp
sbb
fadd
lock
mov
ret
sbb
xor
fistl
idiv
xchg
add
into
shrl
loope
lods
jle
loop
xor
arpl
adc
addr16
pop
out
and
xchg
outsb
push
mov
jno
incl
into
adc
loope
jl
pop
and
mov
push
mov
mov
adc
dec
xchg
cmp
sahf
addb
jecxz
je
xchg
loop
push
or
fdivrs
outsl
and
addr16
push
repz
mov
repz
imul
cmp
daa
jae
lds
jmp
outsb
test
pop
sub
push
pop
mov
imul
cli
sbb
sahf
sub
mov
sahf
loopne
lock
scas
mov
jno
jno
cmp
sub
cmp
in
dec
lods
and
cmpsb
mov
fidivs
inc
ret
loop
mov
mov
mov
js
xlat
ja
sub
inc
jne
mov
mov
or
cmp
push
or
jae
fildll
ret
pop
out
cli
or
mov
std
icebp
sub
nop
cld
push
fdivl
jno
cltd
call
fsubrl
push
xchg
pop
stos
mov
mov
mov
rclb
pushf
push
out
les
loop
sbb
arpl
mov
jne
sub
loopne
xchg
push
fldcw
fmuls
mov
cld
push
jmp
imul
out
cmp
decb
movb
fldenv
sbb
push
outsb
mov
insl
dec
inc
xchg
out
jbe
cmp
and
cli
xchg
daa
adc
aam
dec
cmp
xchg
cmp
testl
inc
addb
inc
test
iret
sti
daa
jl
scas
xor
arpl
je
outsb
sbb
push
pop
leave
add
cltd
stc
jge
fucompp
xchg
mov
pop
imull
movsbl
lahf
test
test
push
mov
in
mov
int3
fidivs
cld
cmpsb
jp
push
imul
fisubrs
movsb
push
dec
add
xor
adc
jb
cmp
jne
and
std
pusha
add
xor
test
lahf
shll
mov
xchg
scas
add
cmp
lods
jecxz
ss
sarl
ret
add
paddsb
inc
into
mov
in
mov
data16
pop
mov
mov
bound
lock
shrl
jle
in
ret
fwait
out
sub
pop
fwait
js
out
sti
xchg
jae
sub
inc
lahf
inc
hlt
and
sahf
cmp
stc
movsb
and
mov
ror
jmp
repz
cmp
fisttps
jmp
in
insb
xchg
mov
stos
jno
aas
xchg
adc
push
int3
movsl
jmp
and
rcrl
movsb
out
xchg
xor
mov
sub
xor
inc
in
gs
or
insl
mov
dec
jb
adc
mov
testl
cmpsb
stos
sar
or
iret
jne
ret
std
dec
sbb
ret
push
dec
test
iret
loop
lcall
out
inc
gs
inc
jns
mov
adc
push
rcll
das
cmp
movsb
pop
jg
scas
fsubs
stos
jbe
adc
add
fildl
iret
shll
lahf
ret
mov
pop
repz
scas
aas
loopne
pop
mov
ret
jp
dec
mov
outsb
jae
movl
push
orb
les
or
cld
mov
and
mov
add
sahf
xor
es
es
mov
mov
push
xor
dec
cmc
mov
icebp
xchg
shl
pop
inc
or
fs
mov
pop
out
add
and
sbb
cli
popf
pushf
hlt
outsl
jp
fidivrs
and
jmp
inc
aas
jle
pop
ret
cmpb
cmp
daa
aaa
cs
jns
sahf
pop
cmp
cld
xor
cmp
push
cld
sub
sub
push
insb
adcb
mov
std
pop
xor
cmp
cmp
in
test
fidivl
mov
fisubrl
or
sub
inc
mulw
shl
push
cmp
cmp
rolb
mov
ret
or
lock
xor
mov
ds
mov
lock
jp
xchg
insb
xor
xor
call
adc
fstl
xchg
fst
xor
loop
pop
push
jns
mov
insb
jg
sub
add
lea
push
imull
mov
in
adc
aaa
loope
lahf
mov
nop
push
sbb
icebp
pop
xor
pop
sbb
lds
pop
jae
dec
push
cmp
xlat
lret
jp
push
jl
cmp
xchg
inc
jb
xchg
xchg
push
xlat
jecxz
sub
jne
sub
dec
xrelease
fstpl
cltd
out
add
data16
clc
mov
push
mov
inc
xor
stc
loope
xchg
ja
aaa
cmp
in
xchg
shrb
push
jp
dec
mov
lock
mov
data16
mov
jbe
mov
cwtl
xchg
jg
outsl
mov
pushf
or
push
cltd
sbb
adc
add
pop
or
mov
mov
fisttpll
mov
insl
xchg
lods
pop
push
lock
add
cmp
test
ret
sub
mov
sub
stos
dec
pop
scas
add
inc
mov
stos
push
fstps
clc
mov
cmp
inc
adc
inc
out
sbb
into
sbbb
fmull
outsl
jb
cli
inc
pop
les
pop
ljmp
xor
dec
fstps
in
pop
cli
ja
adc
aaa
cld
pop
jg
jg
mov
cmp
pop
je
std
in
mov
outsl
loop
mov
jbe
call
ret
lret
sahf
fsubrp
adc
rcll
popf
jle
imulb
jo
cmp
ret
xchg
jmp
pop
daa
loopne
fwait
loop
xchg
imul
cltd
cli
mov
mov
shll
push
mov
aaa
pop
jne
aaa
fistpl
popf
ja
dec
sbbl
js
into
add
in
and
jmp
dec
icebp
and
int
mov
loope
ret
outsl
mov
inc
lds
test
std
adc
les
jb
out
mov
inc
out
pop
mov
xchg
ds
lock
loopne
mov
lock
add
hlt
in
clc
xor
dec
aaa
pop
inc
ret
notb
loop
in
cmp
inc
or
insb
push
xor
and
fiadds
cmp
mov
subl
test
fcompl
mov
pop
push
jnp
das
mov
pop
sarb
sbb
rorl
sbb
cmp
movsl
insb
cmp
mov
ret
loopne
push
mov
add
and
lods
cmpsb
xchg
fwait
xor
jae
lods
fadds
push
jge
je
cmpsl
xorl
out
jne
jp
mov
fsubp
xchg
jbe
xor
adc
fwait
or
popa
cmp
test
mov
inc
mov
stc
xor
repnz
rclb
jp
dec
or
nop
outsl
xchg
lret
add
pop
aam
adc
cltd
stos
push
inc
inc
sahf
ret
insb
pop
add
popa
xchg
sbb
in
je
ficoms
mov
xor
xlat
xor
jmp
js
pop
cmpsl
lret
scas
es
mov
in
imul
divb
test
mov
mov
cmpsb
lds
cmp
loop
ds
outsl
sbb
pop
sub
dec
sbb
sbb
pop
out
fbld
and
lahf
in
incb
sbb
daa
cltd
sub
pusha
xor
fmul
sbb
test
mov
push
stos
mov
and
stos
aas
inc
cltd
cmp
mov
pop
ljmp
adcb
jo
outsl
out
incb
lret
pop
cltd
pop
iret
mov
mov
rolb
pop
in
in
pop
jg
mov
sbb
sbb
js
sub
jb
xorl
mov
pop
ljmp
mov
in
aaa
mov
incb
mov
nop
mov
repz
mov
es
push
stos
std
fdivs
ret
push
fabs
fldl
pop
mov
hlt
mov
aam
push
xchg
clc
jb
ret
jmp
adcl
mov
fadds
scas
rorl
mov
cmp
aaa
inc
dec
addl
push
mov
dec
lock
lods
inc
add
push
cmp
pop
shll
push
jnp
push
pop
mov
sub
sarb
push
jle
daa
dec
hlt
jge
vmovlps
cmpsl
sub
bnd
fwait
into
jo
es
insb
outsb
pop
loop
cs
pop
jb
das
bound
ret
add
ss
add
or
pushf
call
xor
sarl
insl
movb
cwtl
inc
icebp
ss
jge
mov
sub
push
adc
mov
add
mov
cmp
mov
adcl
sub
mov
cmp
push
repnz
adc
sahf
pop
and
mov
pop
call
or
call
inc
mov
mov
jne
mov
mov
icebp
adc
jne
stc
mov
xchg
out
cmp
imul
mov
push
jecxz
shrl
daa
xchg
in
pushf
test
cmc
imul
fbstp
pushf
movsb
fldt
int3
ficompl
mov
sbb
cs
sbb
add
cmp
cmp
pop
mov
clc
in
aaa
loope
fisubl
xchg
aam
dec
lock
mov
fwait
mov
add
aad
js
xor
fisubl
push
fxch
shlb
lret
xor
xor
lds
lret
loopne
rorb
inc
aas
shrb
and
push
inc
decb
jl
mov
xchg
scas
gs
gs
mov
hlt
inc
xor
outsl
xor
mov
cld
inc
add
jbe
enter
cmp
adc
cmp
fmul
dec
orb
push
jecxz
adc
test
sbb
into
ss
and
xchg
out
and
test
movl
rcll
dec
out
enter
jmp
mov
mov
add
cmpl
xchg
call
or
in
dec
std
xor
and
xchg
dec
cwtl
pop
clc
mov
ret
or
jecxz
mov
mov
movsb
movsl
ds
movsb
inc
loop
push
out
mov
cmp
mov
mov
in
push
loope
scas
xchg
inc
lcall
ret
push
stos
scas
test
fldpi
mov
mov
cmp
mov
fcoml
sbb
and
in
jle
push
out
sti
shr
ret
push
fwait
movsb
jl
lds
jb
out
add
inc
or
movsbl
mov
clc
dec
cld
jl
loopne
xlat
pusha
push
xor
movsb
lahf
push
out
mov
dec
enter
std
decb
shr
inc
pop
mov
lea
pop
cmp
jl
xor
mov
cmpsb
mov
data16
sub
mov
xchg
clc
fdivrs
lds
or
or
or
sbb
dec
stos
mov
pop
cmp
dec
mov
sbb
loop
cmp
jo
cs
insl
xor
xchg
mov
sbb
sbb
cmc
xor
filds
test
mov
stc
and
and
rcl
in
sub
mov
mov
adc
pop
das
into
adc
shlb
mov
pop
lea
push
insl
ljmp
xchg
rclb
dec
fcomp
adc
inc
cwtl
call
in
popa
push
pop
mov
clc
nop
lock
and
hlt
ret
icebp
mov
mov
adc
lret
mov
aaa
xchg
inc
push
push
inc
out
cmpsl
add
or
adc
ljmp
mov
jb
repz
fucom
cltd
push
jne
sti
aas
loop
jmp
xor
sbb
cmp
andl
jno
testb
mov
shr
xchg
lds
push
xchg
lods
or
lcall
jg
xchg
lahf
js
jecxz
mov
or
loope
cltd
inc
mov
adc
stos
btc
jmp
pusha
mov
xchg
jmp
and
iret
sbb
out
inc
dec
aam
push
ss
lcall
lock
lds
sbb
dec
cmc
add
add
ret
aam
mov
xchg
push
negb
add
nop
scas
cmp
push
arpl
scas
lds
pop
pusha
in
ss
fisubrl
inc
lods
pop
call
cwtl
test
mov
sub
mov
cmpsl
int
hlt
cmpsl
inc
mov
sub
fcmovnu
and
fs
xor
cmp
mov
xor
mov
loop
adc
dec
mov
aaa
ret
push
into
rolb
mov
push
roll
scas
loope
int
into
mov
out
xor
lds
sbb
xchg
jge
cmp
mov
pusha
add
orb
pop
rclb
test
inc
jae
out
sbb
fildl
loopne
add
mov
pushf
dec
dec
fiadds
filds
push
mov
clc
mov
hlt
cmp
xchg
mov
out
inc
cmpsl
repnz
sarl
cmp
cmp
pushf
icebp
jo
jmp
cmp
jnp
xchg
xchg
clc
movsl
decb
mov
sbb
pop
jo
mov
pop
shll
cmp
cmpsl
mov
aas
sub
mov
adc
ffreep
cmp
test
push
mov
imul
test
cmp
ret
cld
fisubl
lcall
mov
fmull
idivl
dec
push
nop
mov
imul
xchg
dec
cmp
popa
insl
mov
rcr
int
cmp
inc
pushf
imul
stc
movb
cmc
and
fchs
jecxz
jo
in
xchg
pop
mov
adc
adc
cs
rclb
pop
cli
pop
outsb
arpl
imul
fdivp
ret
mov
negl
imul
cmp
sub
test
ret
shlb
lcall
pop
sbb
fcomps
shll
and
jo
sar
jmp
subl
sti
aas
jns
mov
sbb
sti
rorl
hlt
mov
out
or
jp
addr16
aas
in
push
ror
mov
xchg
mov
push
jmp
cmpsl
daa
adc
sbb
cmc
in
adc
stc
popf
idivl
cwtl
pushf
nop
jp
repz
pusha
inc
jge
fwait
negl
pop
dec
cmc
cmp
mov
incb
mov
hlt
clc
in
cmpsb
cmp
dec
mov
outsb
and
mov
cmc
cs
out
jge
mov
rcrb
sub
sub
sub
jmp
xchg
gs
leave
inc
dec
mov
dec
jbe
cmpsl
or
ret
and
into
cmc
push
js
hlt
je
xchg
arpl
xchg
popa
xor
out
cmp
mov
mov
bnd
push
pop
fldcw
daa
fadds
jle
jbe
push
mov
fwait
insl
push
rol
cmpsb
shlb
daa
and
divl
popl
cld
test
in
lahf
les
cltd
cmp
jmp
sub
mov
aaa
shrb
push
pushf
shl
and
insl
and
add
sbb
out
push
jge
xor
cs
repz
adc
pop
jnp
or
dec
pop
xchg
cltd
sbb
movsb
inc
sarl
lock
js
addl
daa
in
popa
aaa
pop
leave
and
mov
enter
psubusb
or
xchg
pop
stos
pop
or
scas
insb
xor
addr16
dec
cmpsb
out
into
ss
cmpsl
xor
push
pop
cli
lahf
les
jae
and
lret
loopne
scas
sbbb
push
not
lods
leave
and
movsb
xchg
jecxz
gs
scas
loope
sbb
add
mov
popa
pop
out
sbb
xlat
testb
pop
cmp
aaa
fisttpl
loopne
mov
cli
je
pop
jno
mov
jmp
adc
mov
push
pushf
imul
mov
xchg
sub
ret
inc
out
iret
lret
mulb
lock
cmp
cs
push
test
das
rclb
lock
mov
popl
jmp
ja
sbb
cmp
cmp
out
aas
or
sub
add
mov
sahf
mov
and
scas
outsl
mov
dec
push
inc
xchg
mov
psrld
sahf
pushf
mov
dec
mov
loopne
sti
lea
add
aam
mov
jl
les
test
pop
stc
jo
inc
dec
push
pushf
sbb
or
cmc
inc
jbe
xchg
jg
out
jo
adc
lretw
and
adc
cmpl
adc
jno
js
aad
sbb
aam
jo
hlt
pop
xchg
test
repz
sub
in
or
sbb
dec
mov
xchg
jmp
rorl
mov
jnp
push
stc
pop
pop
std
and
into
mov
jns
repz
jge
adc
data16
jnp
jg
mov
movsb
inc
inc
xchg
push
mov
aaa
loope
push
mov
rorb
sbb
xchg
sti
aaa
mov
cld
xchg
cmp
push
cmpsb
stos
call
scas
andb
lds
dec
cmpsb
loop
int3
les
pop
imul
pop
arpl
cltd
inc
push
jmp
pop
inc
dec
fs
stos
cwtl
xchg
nop
pop
in
pop
sbb
mov
dec
cmp
clc
in
inc
mov
popf
sbb
xchg
jae
cli
xor
sub
out
test
jcxz
xor
test
in
and
or
sti
inc
aad
test
mov
inc
cld
addr16
cmpsl
scas
scas
gs
ljmp
push
pop
push
daa
cld
add
ljmp
lret
dec
rclb
fcomps
push
adc
jbe
jle
psrlw
repnz
jae
jno
stos
ss
lahf
xor
lock
cli
pop
inc
jge
out
test
cmp
jp
push
push
cmc
cld
sahf
outsl
xchg
pop
ja
jle
mov
inc
je
inc
cli
cmc
js
sbb
mov
xor
dec
jno
or
add
jae
jb
inc
adc
jae
loope
clc
orb
sub
jl
loop
mov
ss
xor
hlt
dec
xor
jo
mov
aas
cwtl
cmpsl
icebp
pushf
mov
flds
cltd
inc
pop
loopne
pushf
or
mov
loope
pop
in
pop
repnz
fidivrl
pop
lea
sbb
jg
aaa
and
shrl
push
loop
pop
iret
fdivl
ljmp
xor
inc
lock
dec
xor
xchg
mov
in
or
std
push
mov
mov
addr16
jmp
inc
pop
push
add
fsubrl
movsl
mov
pop
xchg
push
mov
xor
daa
cli
mov
push
fs
xor
lods
and
mov
ret
mov
mov
inc
clc
or
sub
imul
out
fisttpl
dec
insb
icebp
dec
xor
in
pop
dec
push
loope
shr
daa
pop
ds
mov
rdpmc
fnstenv
jmp
movsb
sbb
mov
bound
mov
mov
in
mov
mov
shll
mov
fiaddl
out
pop
ss
push
pusha
push
or
mov
jae
mov
adc
mulb
pop
shll
add
js
push
call
mov
mov
popa
lcall
sbbl
bnd
cld
insl
int3
shll
js
arpl
fucom
sbb
mov
push
scas
mov
mov
lret
mov
sti
test
gs
mov
lock
iret
mov
pop
adc
test
stc
bound
inc
mov
xor
dec
sbb
cmp
sub
mov
lcall
sahf
mov
mov
cmp
sbb
in
push
fucomi
repz
xchg
lods
mov
push
scas
xlat
fsubs
clc
sub
add
xor
xchg
xor
sbb
aad
rcpps
movsl
data16
outsb
out
repz
push
jl
es
negb
icebp
sbb
fbld
jo
mulb
cmpl
outsl
sub
pop
je
daa
inc
sub
adc
sbb
cmp
loop
push
ret
ret
pop
lret
inc
pop
inc
icebp
push
cltd
lods
out
mov
xchg
add
rclb
pop
incb
cmp
subb
cld
je
sbb
es
mov
ja
mov
pop
and
insl
push
mov
rcll
sbb
push
jo
cmp
xchg
push
lcall
enter
mov
jl
pop
pop
idiv
rclb
push
sbb
dec
jno
pop
push
adc
daa
jb
jecxz
test
and
sub
test
mov
xchg
js
out
addr16
xor
jp
dec
push
and
adc
add
insb
and
xor
popa
push
lcall
insb
out
inc
fadd
lods
and
pop
or
pop
and
inc
aaa
mov
stos
bound
sbb
xor
fidivrl
out
outsl
test
and
inc
in
push
aam
add
in
in
mov
shrb
iret
jge
rcll
imulb
mov
mov
repnz
jne
xor
scas
data16
nop
mov
mov
arpl
cmp
fidivl
add
pop
incl
jne
lcall
xchg
inc
into
mov
mov
pop
into
cltd
repz
scas
push
dec
mull
add
xor
xor
pop
lahf
in
cmp
mov
cmp
dec
pop
xchg
popf
out
dec
adc
stc
sti
pop
inc
lea
xchg
aaa
sbb
nop
adc
test
mov
arpl
fisttps
and
pop
jb
sub
and
dec
push
into
fwait
pusha
rorl
aaa
push
cmpl
dec
int
negb
add
clc
test
rcll
sarl
or
out
addr16
ljmp
sub
arpl
dec
dec
iret
add
call
or
dec
fcmovb
sub
mov
ret
jo
sub
leave
cmp
out
aaa
into
bound
push
sbb
mov
cld
into
push
fs
pop
adcl
push
jae
fldenv
fimull
xor
and
insb
pushf
aas
xchg
jp
testl
in
add
clc
sbb
mov
jb
sbb
xchg
addr16
bound
ja
inc
jno
orl
dec
and
cmp
cltd
sub
stc
test
sahf
mov
into
mov
loope
addb
popa
or
stos
pop
inc
sahf
mov
sub
fistpll
dec
insl
dec
pop
or
adc
enter
clc
add
dec
jae
mov
xchg
or
call
cmp
cmpsb
lahf
sub
push
popa
xchg
stc
dec
pop
dec
inc
mov
or
cmp
or
xor
in
es
out
adc
mov
loope
fwait
mov
or
stos
lock
std
sub
frstor
pop
mov
jmp
pop
movsb
mov
mov
and
subl
cltd
sarb
jae
cmp
sahf
repz
mov
arpl
sti
push
mov
mov
ud1
mov
or
jne
loopne
xor
add
addr16
inc
loope
xchg
jp
repnz
sbb
xor
sub
dec
jae
sbb
ficoms
cmp
push
popf
imulb
jmp
xor
inc
adc
fdivrs
pop
and
push
xchg
vdivsd
std
outsl
mov
sub
xchg
push
cmp
aad
rcr
mov
xor
jne
jno
push
push
mov
out
outsb
mov
pop
in
out
sbb
mov
mov
cmc
adc
lods
pusha
nop
aad
mov
outsb
loop
pop
adc
stc
inc
aaa
aaa
in
out
stos
cli
fstps
cmp
shll
cli
roll
rcrl
pop
cs
pop
imul
rcll
ja
loope
xor
pop
leave
xchg
xor
dec
mov
cmp
push
ret
cmp
pop
hlt
sbb
enter
jmp
sti
and
jmp
popa
mov
xchg
xchg
mov
push
lret
cmp
jo
cmpb
jge
jl
inc
mov
cmc
jl
xchg
mov
mov
ret
movsl
jl
outsl
cmpl
cmpsb
mov
mov
xor
int3
ret
xchg
lcall
sbb
mov
repz
popa
fwait
inc
outsl
jecxz
mov
call
dec
test
ds
jno
sti
mov
mov
xchg
idivl
dec
cmp
aas
and
cmpb
push
mov
das
lcall
ficoms
enter
mov
inc
jg
loope
nop
ja
stos
xor
ljmp
push
mov
push
mov
mull
in
sbb
push
ss
scas
loope
jge
sbb
cmp
out
and
lds
mov
cmp
cmp
xchg
movsb
jle
fnstenv
aad
andl
mov
adc
mov
xchg
rcl
out
inc
xchg
push
adc
stos
into
jo
adc
jb
std
xor
add
mov
sub
popl
cmp
aaa
cmp
cmpsb
or
sub
dec
mov
outsb
adc
lea
fwait
imul
sbb
fistl
movb
or
adc
xchg
outsb
insb
call
cmp
jno
loop
in
int
fidivrl
pushf
mov
mov
fs
inc
aas
fldcw
xor
mov
mov
nop
cltd
sub
adc
into
pushf
aas
subl
mov
jb
nop
popf
lea
das
push
andl
mov
test
lods
out
cmpb
stos
jnp
cmp
ret
lea
cli
outsb
scas
inc
and
sbb
pop
xchg
xchg
popf
in
stos
leave
out
xchg
imul
cwtl
jno
mov
jnp
push
rcrl
or
adc
sub
lods
enter
in
and
and
iret
gs
std
cwtl
insl
cmp
jo
int3
xor
repnz
xchg
addr16
pusha
pop
into
notl
inc
add
pop
push
xchg
out
scas
and
cmp
dec
in
adc
out
ret
stos
adc
les
fwait
enter
xchg
lods
and
fldcw
mov
arpl
cmpsb
idivl
gs
fidivl
loop
aas
enter
push
fisubrl
add
sbbb
mov
cs
jg
mov
cmp
add
xor
int
call
movsl
scas
roll
pop
loopne
xor
jne
mov
popf
jno
ds
rcll
mov
push
dec
xor
lds
mov
pop
dec
inc
test
sbb
mov
pusha
iret
in
into
push
in
das
aam
sbb
fwait
test
ss
xchg
jl
icebp
pop
ret
pop
mov
out
repnz
dec
or
cltd
fiaddl
ja
mov
repz
or
push
ret
sbb
mov
dec
xor
sub
in
cld
cwtl
mov
or
cwtl
mov
mov
pusha
ss
inc
mov
jge
insl
mov
xor
pop
ficoml
dec
sub
aad
push
popf
aas
mov
rclb
adc
punpcklbw
xorl
xor
out
and
pop
jnp
insb
mov
addr16
push
rorb
leave
sbb
lcallw
dec
xchg
inc
jl
cmp
mov
in
push
cmp
mov
shl
ljmp
inc
repz
test
dec
mov
pop
roll
jge
loope
pop
lea
pusha
adc
fxch
test
jno
jl
xor
addr16
mov
insb
das
out
fwait
test
imul
xlat
insb
mov
lret
cwtl
pop
lret
mov
imul
cld
inc
repnz
ds
and
lret
inc
rcrl
push
push
out
mov
mov
sbb
divl
jp
imul
mov
mov
fwait
gs
loope
fisubrs
xchg
rolb
mov
push
sub
fistl
mov
add
iret
pop
faddp
std
push
pop
xchg
jno
cmp
arpl
test
dec
fisttpl
dec
cmc
or
mov
enter
movsb
jb
ljmp
pop
addr16
scas
loop
xchg
lock
pop
lret
sub
pop
stos
adc
xor
sub
pop
push
loop
push
repz
jl
fs
adc
push
ss
movsb
scas
jl
addl
int
xchg
mov
movsl
sub
fldcw
in
enter
cld
pushf
xchg
push
push
pop
pop
or
pop
dec
pop
or
not
adc
ja
jne
cltd
add
xor
push
lret
xchg
and
mov
out
out
repz
sbb
leave
arpl
jecxz
jbe
fstpt
cmp
ja
fcomi
inc
je
xchg
adcl
xchg
xchg
xchg
cmpsl
subb
jl
scas
jl
jbe
out
jbe
shlb
sbb
sub
mov
lcall
mov
jae
cmpsb
addl
push
push
popa
or
icebp
insb
fwait
aaa
jb
aaa
jecxz
imul
lcall
aas
aaa
bound
jno
push
xor
int
out
mov
shll
jae
ds
fdivrl
addr16
scas
test
cmp
inc
and
inc
out
pop
sbb
xchg
cs
adc
cld
and
mov
jl
es
imul
jge
cmp
jns
xor
pop
cmc
fcmovne
lods
das
add
imul
push
and
fsubrs
inc
lods
push
dec
jno
dec
andb
cmp
testb
and
lcall
es
pop
lahf
fs
and
es
or
push
cmp
test
xlat
adcb
dec
pusha
xor
push
mov
icebp
cld
push
xchg
mov
ret
popa
js
jb
lcall
jne
stos
add
sbb
pushf
scas
jbe
cmp
shl
mov
mov
xor
jle
stos
daa
sub
jmp
aas
fwait
dec
push
imul
in
sub
cld
int3
pop
das
outsl
mov
adc
sbb
or
and
aas
mov
mov
pop
cmpsl
into
sahf
dec
outsb
xchg
int3
inc
test
inc
inc
dec
add
dec
sbb
mov
imul
jb
cld
push
aas
mov
pop
popf
dec
scas
dec
movsl
dec
fs
pushf
dec
cs
add
cmpsb
xchg
loopne
scas
and
inc
push
roll
jp
or
push
sarb
push
jg
dec
cmpb
xor
cld
xchg
leave
and
movsl
ret
add
mov
call
xchg
icebp
aam
lock
pop
xor
in
fstpt
ror
cld
rcrl
rcrb
lock
aam
cmp
fsubr
add
inc
fdivrs
push
and
add
jp
fwait
ja
mov
cmc
es
insb
sub
jae
pop
jbe
xchg
mov
lods
popa
dec
test
je
pop
into
mov
popa
mov
cmp
push
leave
cld
dec
addr16
pop
mov
frstor
bound
push
stos
jle
pop
dec
sub
mov
lret
cld
xchg
and
mov
fwait
and
cmpsb
or
adc
int
jns
enter
loope
out
pop
int3
or
jne
mov
cmp
add
pop
jecxz
mov
in
fstpt
inc
in
jp
jecxz
test
pop
mov
mov
add
push
cmp
cmp
cmp
popa
push
rorb
xchg
enter
lahf
hlt
insb
icebp
lahf
fcomi
add
inc
dec
push
xchg
pop
orb
pop
fisttpll
shr
pop
fidivl
in
mov
add
sub
sub
rcrl
loopne
and
and
inc
aad
xchg
dec
ljmp
out
xchg
sub
mov
dec
orl
xchg
xor
push
daa
subl
in
jp
movsl
fs
jecxz
imul
divl
sub
fmul
notl
iret
cmp
and
push
mov
add
inc
mov
add
mov
push
scas
int
cmp
ss
dec
jo
xchg
icebp
mov
mov
cmpsb
sahf
pop
or
adc
movsl
xchg
out
mov
jb
mov
dec
scas
mov
xchg
or
cltd
and
jno
mov
hlt
aas
jmp
push
xor
jle
ss
dec
jge,pn
inc
movsl
test
subb
popa
gs
mov
mov
adc
xchg
push
add
gs
das
xchg
popf
test
loopne
repz
ds
jo
push
xor
adc
push
outsb
pop
jg
or
and
inc
cmpsb
sub
cltd
je
and
into
pop
repnz
and
cmp
mov
imul
dec
stc
mov
jmp
push
sarb
mov
cmpsb
test
jmp
cmp
iret
gs
mov
imulb
cmpsb
push
xchg
shrb
aad
mov
cmp
popa
movsb
mov
sar
repnz
aaa
xchg
lods
push
dec
cmp
lcall
lock
aaa
rol
jle
jno
cs
dec
and
lock
fs
data16
test
sbb
xor
mov
cmp
mov
jb
push
adc
sbb
subb
sub
sbb
push
mov
sbb
mov
mov
movb
dec
movb
pop
inc
iret
outsl
adcb
testl
repz
sub
xchg
test
ljmp
xor
jecxz
fdivrl
lds
add
cmp
push
icebp
pusha
mov
ror
js
stos
icebp
inc
push
loope
and
cli
subl
inc
inc
loop
into
mov
ljmp
fnsave
push
rcrl
push
add
pop
push
jne
sub
sbb
xchg
push
xlat
push
aad
aam
clc
scas
mov
lar
push
mov
out
push
fxch
lock
and
adc
mov
mov
mov
push
lea
flds
rolb
ret
inc
or
push
sub
iret
push
stos
mov
int3
jge
jle
rcr
mov
fcoml
xor
adc
sub
sbb
fwait
dec
std
cmpsb
loope
sub
cld
stos
ss
add
xchg
push
sub
adc
and
pop
dec
pop
test
mov
sbb
int
inc
cmp
fmul
scas
mov
fldl
shlb
push
enter
jbe
rclb
push
push
out
addr16
cli
lea
dec
daa
mov
cmc
fwait
or
es
sbb
rcl
inc
pusha
lahf
loop
out
je
xor
push
mov
jno
lret
movsl
adc
or
outsb
gs
sub
mov
mov
stos
cli
dec
add
aas
das
cmpsb
jb
test
cmp
mov
add
mov
lahf
dec
ficoml
jge
mov
xchg
pop
fisubrs
pop
pushf
cmp
rcrl
and
rdmsr
cmovbe
shrl
mov
test
add
test
pop
inc
jne
adc
push
sti
mov
jae
pop
data16
jb
and
rorl
pop
flds
jne
daa
jnp
mov
push
popf
dec
out
into
mov
mov
repz
ss
shll
xor
fcomps
shlb
push
jo
mov
xor
jno
mov
or
push
rorb
hlt
loope
mov
pop
shrb
pop
push
push
pop
dec
stos
mov
push
xchg
or
mov
push
jge
je
cmp
scas
dec
jbe
pop
call
or
in
scas
shrl
pushf
pop
pop
dec
pop
insl
mov
add
stos
mov
cltd
fcmove
stos
repz
fnsave
or
scas
ljmp
call
lock
dec
sub
out
cwtl
or
xor
sbb
in
xchg
fs
mov
adc
mov
movsl
jae
xor
movsl
xor
gs
loop
sub
iret
cmp
dec
movsl
mov
sub
and
dec
leave
dec
jns
loopne
insb
lock
sub
popf
sub
or
mov
mov
mov
xor
jne
movl
nop
jno
ljmp
inc
pop
cmp
fdivl
push
inc
or
aaa
cld
roll
es
test
mov
xchg
jmp
iret
jmp
xchg
ljmp
sub
ds
sbb
mov
dec
sahf
jo
je
ja
dec
jbe
cmp
fnstcw
dec
cmp
popa
dec
cmp
mov
jmp
lahf
push
popf
sub
or
cmc
dec
cmpsb
xchg
aad
dec
dec
cmc
stos
in
outsb
and
inc
dec
test
mov
xorl
out
pop
stos
lds
faddl
test
push
iret
xlat
push
push
pop
and
or
pushf
xor
or
andb
hlt
cmpsl
adc
push
mov
dec
cmp
sub
dec
in
arpl
sub
mov
mov
xchg
scas
mov
sbb
subl
add
push
or
stos
or
push
adc
jno
dec
daa
jb
add
mov
push
dec
mov
jae,pt
xchg
mov
pop
xor
out
pop
mov
jae
loopne
int3
push
adc
sbb
or
add
std
xlat
cmp
xor
movsb
cs
inc
dec
ret
out
jb
shll
xchg
cltd
fcmovb
fsts
adc
fwait
adc
sbb
popf
push
sub
jecxz
data16
jp
add
pop
add
mov
xor
sub
jl
add
stos
cmc
addr16
xor
cmp
test
pop
cmp
pop
add
pop
std
and
push
es
call
data16
xor
adc
mov
scas
pop
dec
jb
jle
scas
out
pop
out
fsubrl
pop
and
pop
cmpsl
lahf
pop
test
sbb
out
leave
cmp
lock
mov
test
add
fcmovu
cmp
jle
gs
test
add
pusha
fwait
cmpl
push
fsubrs
jg
mov
push
mov
and
pushf
jns,pt
cmp
test
out
into
negl
out
cmp
xchg
dec
cli
inc
or
add
dec
xor
push
pop
mov
popf
and
stos
or
cmp
push
inc
cmp
orb
jns
mov
or
jne
and
addr16
push
test
jne
and
hlt
adc
cmp
push
test
push
and
cmpsl
inc
js
insb
popf
cmpsb
adc
xor
xor
sub
or
xchg
pop
ljmp
andl
dec
cmp
inc
or
mov
lret
movsb
roll
add
mov
jbe
in
nop
mov
adc
xchg
cmp
mov
push
int
xor
cld
cltd
aam
imul
iret
out
or
fwait
ret
fcmove
add
xchg
stc
cmp
dec
fmull
mov
movsb
jae
cmpl
jae
push
xor
add
in
test
jmp
outsb
or
sbb
inc
shr
jmp
adc
jge
rcl
cwtl
or
push
pop
shrb
xor
gs
pop
fmul
inc
out
mov
xchg
fiadds
add
nop
aam
ss
and
cmp
shr
stos
inc
or
inc
jne
shlb
gs
pop
adcb
shlb
mov
mov
mov
push
int
ffree
pop
push
movsb
adc
jnp
jl
mov
cmp
xlat
subl
or
es
add
push
adcb
ret
add
pop
sbb
jb
xlat
rol
fcomi
inc
js
dec
add
mov
outsb
les
mov
int3
pop
or
or
lahf
out
sti
out
shr
fyl2x
inc
pop
pop
jbe
cld
paddb
decl
add
cmpsb
loop
jo
sbbb
les
lock
gs
dec
adc
arpl
les
add
rolb
push
cmp
insl
loopne
adc
cmpsl
add
mov
inc
lret
push
insl
and
hlt
push
pop
frstor
flds
cmpsb
mov
push
xchg
addr16
cmp
lret
enter
insb
jo
jno
mov
push
dec
daa
sbb
and
push
dec
mov
pushf
sbb
popf
sbb
hlt
jo
sbbb
incl
mov
stos
push
mov
movsb
lahf
enter
pop
inc
dec
xchg
ss
ljmp
in
leave
ds
push
or
dec
adc
push
mov
sub
push
cmp
cmp
push
mov
sbb
xchg
mov
pop
aaa
mov
bound
add
sub
scas
pushf
mov
xor
fnstsw
je
cltd
xchg
jae
mov
sbb
cwtl
mov
jp
xchg
lcall
and
into
iret
lds
mov
test
lcall
imul
xchg
hlt
and
dec
cmp
xor
movsb
ret
pop
leave
jnp
jmp
mov
sbb
shrl
fs
ret
incb
adc
xor
pop
in
addr16
jne
mov
mov
test
dec
leave
xchg
cs
int
jne
mov
or
push
divl
cs
adc
and
les
inc
mov
push
daa
push
adc
int
sub
iret
or
push
es
data16
std
mov
sub
jle
xchg
jmp
mov
mov
mov
ja
rcll
jns
and
xor
test
mov
jb
or
cmc
loop
rclb
sbb
jae
adc
ret
fadd
cmp
inc
adc
cs
pop
clc
jecxz
ljmp
mov
pop
add
addb
mov
iret
cmp
dec
rol
push
jno
dec
test
stc
push
or
cmpsl
int
out
sbb
in
dec
scas
or
dec
cld
or
dec
lock
sub
test
push
push
or
pop
fldt
push
repz
loopne
pop
mov
add
dec
rorb
xchg
jb
inc
lret
jl
sahf
xchg
cmc
lock
cmpsl
data16
push
into
sub
das
in
inc
cmc
lret
repnz
insl
push
pop
cmp
xchg
pop
jp
jmp
and
cmpsl
imul
or
je
int
addr16
cmp
inc
sbb
sub
pushf
repz
scas
push
leave
hlt
and
addl
or
dec
sbb
shlb
inc
inc
mov
in
dec
into
jb
cmp
xchg
or
leave
std
mov
or
test
adc
stos
mov
gs
dec
clc
jg
imul
or
mov
xor
cmpsl
rol
shrl
in
xor
loope
cwtl
xchg
xor
cmpsl
fwait
sahf
sub
push
mov
jo
insb
mov
mov
je
je
jbe
adc
add
gs
shrl
mov
pop
daa
push
cmc
cwtl
adc
and
sahf
ja
popa
dec
sbb
mov
je
cmp
hlt
mov
push
shrl
stos
shrl
jmp
movsl
sti
mov
mov
testb
es
inc
adc
rorl
adc
sbb
into
adc
mov
jl
inc
add
inc
push
dec
xor
into
lcall
movsb
push
call
dec
ss
icebp
jb
adc
cmp
xor
cltd
xchg
xchg
fstpl
aad
mov
je
jmp
push
push
stos
pop
pop
jno
sub
or
je
push
pop
lods
out
and
cli
pusha
es
add
scas
or
push
arpl
scas
push
sbb
lods
pusha
imul
pop
ss
push
xchg
lods
pop
addr16
out
xlat
repz
lds
insb
inc
mov
mov
inc
shr
cmpsb
pop
mov
xlat
test
and
dec
xor
dec
sbb
pop
es
jmp
adc
nop
push
and
dec
les
push
leave
and
jno
sub
mov
popa
jmp
jo
mov
push
lret
xor
push
dec
js
fwait
shrb
cs
dec
lods
adc
and
inc
gs
push
pop
cmc
movsl
dec
cmc
mov
scas
nop
mov
sbb
adc
xchg
and
shl
mov
leave
fsts
shlb
test
dec
lods
adc
mov
cmpsb
adc
mov
cmc
dec
mov
fldenv
out
inc
hlt
cltd
push
jae
push
in
or
xchg
stos
cs
scas
repnz
mov
dec
leave
jmp
xorl
mov
dec
xor
push
in
jmp
rolb
lret
add
repz
ret
aaa
push
scas
push
sahf
push
mov
dec
outsl
hlt
cmpsl
cmp
sub
jl
sbbb
mov
gs
rcll
jecxz
std
xor
cld
lahf
sbb
pop
loope
ficoml
jne
dec
inc
adc
lods
jbe
lcall
in
inc
popa
mov
aam
sub
mov
sbb
fcomps
lcall
inc
push
ljmp
push
add
insl
jb
js
push
cli
inc
mov
inc
or
push
iret
mov
sub
mov
jno
cld
outsl
lcall
pop
pop
rcr
jecxz
jp
dec
aad
adc
fbstp
imul
adc
push
shrb
mov
test
enter
inc
jge
leave
ljmp
cli
push
or
sub
push
mov
or
outsl
inc
es
pop
pop
jae
mov
mov
sub
les
rcl
loopne
xor
sub
and
xchg
ja
sbbl
sub
cmp
sahf
xor
push
es
xchg
hlt
test
aad
push
mov
clc
xchg
inc
lock
sbb
pusha
sbb
stc
mov
cld
dec
iret
adc
jns
cmp
hlt
cmp
sahf
daa
shl
add
sahf
inc
iret
adc
jns
cmp
hlt
cmp
sahf
daa
shl
add
sahf
inc
iret
adc
jns
cmp
hlt
cmp
sahf
daa
shl
add
sahf
inc
iret
adc
jns
cmp
hlt
cmp
sahf
daa
shl
add
sahf
inc
iret
adc
jns
lcall
sar
jmp
add
add
add
add
add
stos
popa
add
sbb
add
pushf
dec
pop
jne
dec
push
andb
mov
inc
pusha
add
pop
adc
xorb
repnz
inc
xchg
adc
lret
inc
add
ss
push
and
xor
enter
orl
sub
mov
enter
push
aad
stos
into
mov
pusha
shrb
pop
out
in
fisubrl
ficoml
jg
fs
js
cmp
jbe
f2xm1
js
push
pushl
loope
mov
aaa
ja
das
loop
in
loope
cld
insb
cmp
sub
jns
mov
cmpsl
mov
dec
cld
ficomps
mov
aad
clc
jg
jl
mov
std
sub
jno
push
int3
xor
icebp
jnp
xor
mov
jno
lds
xlat
sbb
outsb
xchg
jbe
movsb
push
out
gs
fstl
out
cwtl
sti
jle
mov
xchg
dec
inc
add
dec
je
sbb
in
jmp
gs
out
and
jmp
jb
and
mov
test
arpl
cld
jle
ret
or
je
fwait
lds
sahf
mov
in
dec
jnp
mov
ds
mov
cltd
sbb
outsb
xchg
inc
lret
pop
cld
data16
in
dec
sub
sbb
pop
jecxz
popf
fcmovnb
sahf
mov
sub
jge
out
out
int3
jns
jle
adc
in
les
cmp
fistps
dec
xchg
mov
jmp
xchg
js
cmpsl
enter
fst
cwtl
jne
jle
lods
pop
fdivl
lea
ds
loopne
cmc
nop
jb
jle
push
aaa
loop
pop
in
out
sbb
jl
nop
or
mov
jp
jae
sub
mov
in
dec
fnstenv
lahf
push
in
arpl
sti
icebp
xorl
push
bound
push
scas
jns
repz
fs
shr
icebp
sahf
cmp
hlt
jae
xchg
scas
adc
push
nop
dec
inc
mov
loope
pop
icebp
fidivrl
mov
mov
and
mov
fisttps
pop
lock
pop
sbb
mov
popf
cmc
dec
int3
mov
xor
test
jl
pop
movsb
fldcw
adc
mov
pop
sahf
push
jl
pop
mov
xchg
das
jecxz
lods
clc
sbb
jle
aas
sbb
mov
dec
and
imul
es
stos
mov
jno
and
inc
mov
push
repz
out
pop
cmpsl
dec
xor
sbb
inc
mov
movsl
mov
adc
cmp
fimull
in
sub
mov
test
movsl
ret
jl
mov
repnz
push
pop
jo
lahf
lcall
mov
not
adc
push
lods
xchg
jne
adc
sbb
mov
idivl
cmp
jbe
out
pop
mov
xchg
shrl
movsb
loopne
fwait
pusha
cmpsl
sbb
lods
lock
or
push
pop
xchg
iret
int3
jmp
xchg
sub
mov
test
mov
call
inc
fstp
scas
xchg
loopne
gs
jmp
stc
lock
in
arpl
sbb
xor
cwtl
inc
mov
mov
sub
xor
jns
sub
arpl
cld
dec
inc
mov
mov
sbb
ja
jp
fdiv
pusha
cmp
fistps
ret
in
fcmovnb
jmp
mov
adc
pop
mov
shl
mov
imul
xchg
testb
and
dec
jle
pushf
sbb
stc
pop
push
cli
popf
loope
lock
sti
mov
mov
jae
mov
sbb
push
xchg
enter
ret
enter
stc
sub
fs
cmpsl
sbb
ret
inc
clc
repz
pop
jl
pushf
addr16
or
mov
fistl
lahf
sbb
mov
push
push
fs
repz
mov
adc
jo
enter
pop
xor
mov
sub
add
mov
pop
mov
pop
repz
pop
xchg
in
xchg
sahf
mov
call
and
das
cmp
and
in
xor
xchg
mov
mov
xchg
dec
out
int
in
cmpsb
mov
movsb
inc
jno
es
sahf
adc
cmpsl
xor
add
sbb
jl
jmp
xchg
mov
ss
push
addr16
mov
push
push
push
movsb
data16
pop
pop
and
or
imulb
lods
loope
outsb
arpl
jns
mov
mov
das
dec
add
pop
or
mov
or
jns
dec
outsb
jg
aas
cld
and
fisttpl
ljmp
and
adc
pop
xchg
ja
shll
fsubrs
sbb
int
jne
iret
xchg
test
stos
in
outsl
imulb
pop
mov
pop
jns
mov
addr16
test
xor
fxch
push
daa
xchg
sub
cmp
cld
js
into
jge
push
mov
pop
sbb
mov
push
das
jl
stos
mov
mov
jl
jno
sub
and
mov
inc
pop
inc
ret
or
ret
insb
inc
ss
aam
xor
jp
mov
sbb
bound
add
lock
push
js
mov
push
lret
outsl
xchg
call
mov
jge
sub
adc
les
insl
je
sub
lcall
jo
sub
leave
push
xchg
xchg
inc
fdiv
imul
jnp
insl
shl
add
mov
cmp
sbb
dec
js
pop
enter
push
pop
mov
jmp
lret
xchg
sbb
sti
scas
ja
lcall
stos
mov
xchg
imul
push
shl
repnz
pop
ja
lahf
push
scas
fwait
sbb
lret
xor
xlat
in
lods
jne
jl
xchg
mov
sbb
ljmp
fnsave
punpckhwd
stos
nop
ja
out
ror
test
scas
test
loop
ficompl
fsubr
lock
popf
inc
mov
mov
jge
lods
dec
lods
cmc
jle
jp
clc
adcl
in
xorl
mov
sub
jl
repz
out
dec
fcompl
push
mov
xchg
jmp
push
gs
stc
into
lock
cld
cmpsb
inc
mov
jp
les
push
pop
inc
jno
stos
imul
fcmovnb
xor
pop
mov
insl
dec
insb
adc
mov
jno
test
push
outsl
fmull
outsl
pop
mov
push
jb
pop
iret
loopne
and
inc
xor
jae
mov
and
cmc
mov
cld
push
push
repz
loope
fnstsw
cwtl
cmp
mov
es
xor
jno
movsb
xlat
xchg
icebp
test
out
bound
xchg
pushf
sub
pop
or
jecxz
mov
lcall
xchg
out
daa
xor
and
sbb
push
mov
sub
sub
pop
insl
out
jl
mov
sbb
hlt
cmpsb
in
push
lahf
xchg
push
mov
cwtl
pop
aas
aaa
jl
lds
cld
dec
and
imul
jg
pop
fdivp
push
les
inc
lret
js
scas
lods
xchg
sti
mov
jne
lock
cltd
add
pop
imul
push
icebp
fldenv
mov
pop
rorb
js
mov
lods
mov
add
adc
pusha
jns
dec
roll
fcmovnu
xor
sbb
fimuls
in
mov
jbe
out
push
mov
ffreep
push
mov
hlt
enter
sbb
imul
lret
inc
sub
fldt
push
leave
add
pop
fcmovbe
jae
pop
loope
clc
jne
jl
test
clc
pop
pop
pop
pop
mov
rcl
mov
clc
jecxz
fisubs
push
dec
out
jp
mov
lcall
into
call
dec
out
fdivl
adc
mov
imul
lcall
lea
das
lret
pop
jp
mov
cmc
enter
or
mov
shl
push
fidivrs
into
in
lahf
adc
inc
pop
push
rcll
loop
mov
cli
jno
push
jb
mov
jl
xchg
mov
pop
adc
push
rol
push
lods
popf
test
rol
jl
add
xchg
lods
outsb
mov
cmpl
add
dec
into
daa
cs
pop
sbb
pop
push
pop
stos
fnstenv
es
addb
push
out
and
xchg
mov
xlat
aad
or
cld
dec
loopne
lahf
outsl
xchg
cmp
mov
or
fsub
repz
pop
stos
and
sbb
lahf
push
aas
ficoms
jae
sub
jle
cmp
add
add
out
test
push
ja
or
sub
mov
lock
cmp
cld
call
popf
loop
jge
jecxz
scas
popw
aad
and
imul
inc
cmp
mov
jno
jecxz
cmp
add
ljmp
stc
pop
add
pop
mov
cmc
fdivrp
cmp
cmp
cli
js
sti
insb
sar
movsl
dec
testl
pusha
add
clc
insl
lods
test
test
add
cmpsl
sahf
xchg
mov
int
repz
mov
insb
add
pop
xor
arpl
jp
sahf
mov
jnp
xor
add
cmc
jno
mov
mov
scas
test
mov
jne
ret
inc
mov
sarb
jl
enter
inc
sub
push
ds
push
sbb
lcall
jg
jmp
in
mov
std
mov
sbb
xchg
pop
loopne
jp
loop
mov
pop
cmp
mov
jg
push
xchg
mov
jbe
in
pop
ret
lods
sbb
dec
push
sub
cmpsb
push
pop
outsl
sbb
mov
jecxz
jbe
testb
repz
sbb
cmpsb
bound
push
and
mov
in
ja
pop
mov
mov
adc
xchg
pop
popa
adc
std
ffreep
ljmp
mov
lods
push
imull
xor
sub
mov
ja
pop
enter
mov
xor
and
aaa
cld
lret
sub
mov
subl
popf
lods
mov
imul
xchg
cmp
add
jl
fucom
in
jne
push
push
hlt
aas
mov
inc
push
lea
jbe
push
cwtl
pushf
cmp
adc
inc
int3
dec
out
cmp
mov
jbe
push
or
loope
lea
ljmp
jae
cwtl
shlb
int
lcall
out
jle
xchg
push
ja
or
adc
bound
sbb
iret
mov
add
pop
push
adc
cmpsb
push
pop
es
enterw
mov
xchg
xor
xchg
sub
or
pop
push
mov
jb
pop
xor
stos
popf
inc
loope
out
daa
sbb
rol
push
dec
mov
imul
push
ljmp
xchg
mov
stc
and
mov
jp
pop
cmp
mov
rcll
jmp
cmp
pop
dec
jmp
xor
pop
xor
pop
dec
out
movsl
aas
in
test
aad
dec
test
xchg
fldenv
xlat
or
scas
pop
popa
outsb
lock
popf
mov
xor
jp
cmpb
push
cli
push
sub
xor
adc
jbe
aam
imul
push
fmull
lret
cmpsb
push
pop
or
iret
lock
mov
or
adc
push
ja
cwtl
dec
mov
pop
sti
xor
mov
stc
lock
loope
xchg
popa
pop
push
dec
popf
daa
loope
adc
push
inc
sbb
leave
cld
lock
mov
mov
cmpsl
push
ret
mov
pop
sarb
adc
inc
das
lds
adc
and
mov
cmpxchg
mov
mull
out
dec
insb
fadd
or
popf
sbb
cvtps2pd
jno
sbb
cmp
xor
bound
jns
imul
jne
pop
mov
stc
lock
jmp
out
popa
cmp
cmc
mov
aas
arpl
and
repnz
flds
fnsave
sbb
and
out
xchg
mov
neg
das
mov
mov
adc
insb
pop
mov
and
cmpsl
xchg
fimuls
imul
popa
fnstcw
adc
scas
xchg
jge
jns
mov
xchg
mov
mov
inc
xchg
add
orb
mov
cmp
dec
sbb
ljmp
sbb
cmp
sbb
pop
popa
adc
lea
loop
jmp
popf
push
es
inc
fmuls
inc
cmp
sub
xchg
in
cmp
movsl
cmp
aas
xchg
xor
pushf
lret
jne
pop
mov
adc
xchg
xchg
push
ret
adc
add
push
outsb
leave
fstpl
lods
mov
xchg
push
fstenv
inc
out
aad
pop
js
jmp
mov
scas
ds
xlat
cmp
dec
aam
ljmp
mov
or
mov
jl
sbb
into
imul
jge
int3
lods
lods
cmpsl
dec
je
sub
testl
jle
or
adc
adc
xor
mov
fdivrs
arpl
lret
cmp
lcall
xchg
adc
add
fstps
xchg
test
repz
cmpsl
scas
lock
into
mov
cs
pop
mov
les
jl
in
out
sub
sbb
flds
fldcw
push
outsl
mov
ja
insl
imul
sti
cs
jp
scas
or
subb
sbb
pushf
xlat
sbb
jg
test
push
mov
bound
in
mov
and
ret
mov
add
mov
lods
mov
popf
enter
pop
cltd
addl
adc
sub
in
cmp
or
adc
or
jbe
in
pop
lcall
lds
adc
or
mov
mov
cmc
fsubl
xchg
ja
pop
jae
lea
or
pop
sub
in
lods
cld
lods
cmp
test
or
maskmovq
testl
xchg
hlt
jb
pop
xor
call
loop
daa
pop
xchg
pop
shr
sub
daa
fdivrs
dec
stos
push
pop
jae
push
ja
and
mov
jecxz
sub
icebp
loopne
cmp
ds
mov
and
incb
movsl
cmp
vaddps
push
clc
pop
jns
dec
mov
retw
dec
jecxz
push
push
ja
fcoml
stos
mov
mov
rolb
push
push
ljmp
push
xor
mov
cld
dec
int3
out
or
into
mov
lret
mov
xor
fwait
mov
into
or
insb
lret
stos
scas
fsubrl
pop
ss
iret
xor
adc
sub
cmpl
in
xchg
imul
fldln2
dec
jnp
out
adc
inc
pop
in
js
dec
jb
out
outsl
lock
or
or
pop
aad
xlat
adc
pusha
adc
add
mov
xchg
cld
mov
lret
mov
adc
popf
pop
xor
fwait
jno
or
daa
push
into
push
fisttps
jne
sti
in
pop
jno
mov
test
rorb
pop
mov
lock
dec
jmp
xorl
stos
xlat
dec
xchg
lret
fadds
loop
psrad
jle
dec
addr16
mov
cmp
xchg
add
aad
mov
jb
lea
dec
push
xor
xlat
repnz
sarl
pop
push
and
jle
je
lds
dec
cmpsl
pop
repnz
push
aas
lods
pop
cmp
leave
dec
inc
mov
loop
cmp
aad
lret
ds
out
pop
idivb
stc
mov
jge
insb
cmpsl
jl
repz
enter
push
mulb
sub
mov
jg
filds
movsb
clc
pop
jmp
jl
push
movsl
in
jnp
mov
and
mov
inc
clc
push
jbe
iret
xor
aad
test
in
lods
fmull
out
dec
cmpsb
pop
inc
js
and
adc
and
mov
and
movsb
imul
adc
pop
jge
sahf
inc
dec
fstpt
lods
xor
dec
iret
jmp
dec
les
xor
dec
mov
and
pop
popf
cli
cltd
xchg
aas
ljmp
pop
cmp
sbb
dec
xor
mov
push
mov
sub
sbb
xchg
jno
push
rcl
mov
int3
mov
push
sti
inc
jb
insl
jns
xchg
je
xchg
ds
mov
jne
push
mov
enter
and
jmp
inc
mov
lcall
adc
out
push
adc
pushf
adc
dec
aas
push
dec
add
aaa
sbb
pop
adc
cmp
xchg
adc
pop
and
dec
xchg
dec
es
insl
ds
fidivl
sbb
mov
and
and
arpl
dec
mov
js
aas
scas
test
je
inc
aas
stc
ret
pop
pop
push
movsl
jmp
and
or
inc
jno
add
stos
repz
addr16
and
stos
fsubrp
bound
popa
outsl
in
jbe
scas
pop
push
cmpsl
dec
fisttpl
mov
push
arpl
mov
dec
xchg
cmp
shr
pop
das
sub
roll
and
mov
and
xlat
fs
pop
push
mov
or
sbb
sbb
test
in
es
xchg
loop
frstor
lds
push
and
inc
mov
xchg
fimuls
sti
mov
imul
pushf
fwait
xchg
jnp
lds
cli
insl
sbb
loop
inc
and
mov
scas
dec
sbb
iret
mov
scas
mov
shlb
or
xor
fnstenv
inc
stos
mov
pop
jecxz
call
sti
pop
and
gs
inc
subb
sbb
add
cmp
pop
jg
jge
jl
call
mov
rcrl
shll
lods
sub
jge
xchg
in
xchg
jcxz
jnp
fisttps
leave
out
fsin
xor
ret
std
bound
pusha
cmpl
enter
lock
mov
cld
lds
jbe
into
or
pop
mov
sahf
stos
dec
test
in
dec
fs
les
arpl
lahf
loop
mov
iret
ja
movsb
int
lret
das
loop
popf
inc
push
filds
out
vmovdqa
cmc
scas
lods
jnp
and
jmp
sti
rcrb
arpl
mov
pop
jge
xor
popf
ljmp
jge
inc
pushf
daa
xchg
add
stos
lods
and
xor
jg
arpl
out
cmpsb
and
mov
sti
push
pop
lea
push
jne
sahf
lret
ljmp
shl
icebp
cmp
pushf
loopne
loope
jg
xor
or
scas
imull
pop
cld
and
test
into
xchg
lock
out
loop
lods
xchg
jecxz
cmc
out
lock
cmp
adc
xor
hlt
bnd
sbb
lcall
fs
pop
outsl
scas
push
inc
mov
mov
push
push
cmpsl
jne
sbb
test
call
xchg
sbb
or
sbb
or
jg
fs
lahf
icebp
ret
fcomip
pop
pop
imul
mov
pushl
dec
enter
sub
inc
gs
mov
aaa
mov
xlat
lods
pushf
lods
cmp
out
scas
out
in
sub
mov
nop
inc
out
out
dec
push
js
loop
mov
adc
fisttpll
fwait
dec
in
insb
push
inc
imul
ror
sub
mov
fnstcw
idivl
fsubs
cmp
pop
pop
ds
aad
and
jae
mov
cmp
frstor
out
arpl
pop
jnp
out
cmp
mov
pop
mov
inc
je
pop
ljmp
pop
lods
mov
imul
jmp
ljmp
push
xchg
dec
cmp
mov
xlat
xor
fwait
xchg
mov
mov
sub
in
inc
in
mov
and
fwait
and
aas
adc
cmp
sbb
xor
shrb
addr16
testb
test
std
xchg
mov
insl
mov
add
cmp
sub
outsb
inc
stc
jle
repnz
scas
pop
sub
loope
sbb
cmp
lahf
cmc
out
aaa
cmp
lods
ffreep
mov
stos
inc
push
jmp
pushf
xlat
mov
mov
testb
cmp
stos
pop
sti
sbbb
jmp
sbb
sbb
xor
cmp
cltd
out
cmpsl
out
out
jmp
pop
test
pop
cmp
sbb
jne
push
in
jo
sub
lods
cmpsl
ds
push
jle
or
outsl
jns
xor
jae
xor
sub
mov
fmul
cmc
inc
lret
inc
mov
cmp
jne
pop
out
mov
xor
mov
mov
loop
jns
sti
jp
or
push
jmp
mov
xor
aam
jno
mov
popa
ljmp
ja
push
loop
mov
and
data16
xchg
mov
xlat
inc
pop
fsubs
cmp
jl
or
sub
and
sarl
pop
inc
lahf
add
lds
into
test
out
push
fs
adc
incb
scas
and
mov
or
pusha
mov
in
addb
jb
sbb
adc
outsl
ljmp
stos
push
ds
out
outsl
icebp
xchg
arpl
mov
outsb
shll
ucomiss
std
push
fcompl
adc
outsb
out
mov
popf
cmp
or
movsb
dec
iret
loope
in
xchg
ss
mov
inc
imul
pop
and
subb
es
test
pop
lea
mov
aaa
arpl
sahf
cli
insb
shrl
test
mov
shrl
test
aaa
ljmp
add
add
mov
push
xor
clc
movsb
push
mov
jge
int3
inc
mov
fdivrs
pop
dec
repnz
sarl
adc
pop
das
sbb
mov
sbb
aam
insb
into
push
pop
repz
rcrl
daa
das
hlt
cltd
stos
out
out
pop
pop
lea
out
ljmp
fcmovb
sub
xor
fs
es
stos
sahf
int3
jle
mov
xorb
stos
jb
cs
mov
xor
out
jno
cmp
mov
push
dec
and
cli
je
dec
in
cmp
stos
inc
cmp
hlt
cmp
and
ss
cli
xor
test
jnp
mov
scas
mull
gs
and
xor
jb
std
cwtl
stc
pop
lods
and
adc
ja
cmp
sbb
popl
and
lods
pop
pop
fidivl
decb
idivb
pop
mov
push
jae
mov
iret
divb
arpl
gs
jle
sbbl
jbe
faddp
out
cmp
xchg
mov
std
pop
add
popf
cmp
popa
call
mov
xor
mov
ds
inc
movb
clc
in
iret
leave
hlt
jmp
dec
aad
xchg
cmp
push
mov
dec
dec
scas
inc
sbb
xlat
pop
stos
shlb
push
data16
cmpl
stos
icebp
fcomi
std
incl
cmpl
add
jo
inc
adc
xor
dec
jae
je
andb
call
repz
mov
cmp
repz
out
jns
scas
jl
or
or
push
adc
push
lock
mov
lcall
popf
push
sbb
addr16
inc
push
mov
pop
sahf
push
push
loop
ret
sbb
pop
dec
sti
jns
in
mov
fcomps
das
cmp
das
or
fcomp
dec
cmp
mov
lret
dec
xor
push
ds
sub
nop
mov
lock
jecxz
pop
xchg
ja
adc
mov
pop
sbb
stos
ret
xchg
lods
cmp
jbe
cs
popa
in
in
cmpsb
adc
sub
stc
xlat
push
sub
cmpsl
cmpsb
jg
leave
std
cmp
mov
sbb
mov
mov
mov
sub
scas
das
stos
mov
bound
lock
push
int3
pop
fildl
and
xor
mov
and
jb
ja
ret
or
ss
aam
sub
sub
push
fs
repz
push
clc
push
cli
orb
stos
pop
adc
mov
push
shr
call
mov
inc
sarb
out
rorl
clc
roll
sbb
pusha
mov
add
stos
pusha
mov
sbb
hlt
xchg
cmp
aas
mov
imul
or
andb
cmc
cmp
lret
pushf
jns
push
fnstcw
xchg
mov
jmp
imul
adc
into
pop
les
movsl
ficompl
lods
shl
fnstsw
jb
fwait
out
in
call
xor
sub
lods
fildl
push
pop
jg
das
lret
add
fwait
rol
fwait
push
cmpsb
mov
bound
cmp
fadds
adc
mov
inc
std
xchg
les
or
push
imul
fwait
pop
pop
push
dec
sbb
popf
cmp
mov
dec
xchg
or
jecxz
outsl
xor
xchg
dec
movsb
aam
hlt
push
loopne
cld
fbld
ljmp
push
sub
pop
and
pop
jb
pop
scas
fldenv
in
add
into
mov
push
call
pop
push
movsl
add
fadds
les
mov
pop
fldenv
movsl
push
mov
pushf
fstpl
movsb
outsl
xor
cltd
or
insb
pop
aam
sub
xor
xchg
or
sub
adc
and
fistps
popa
or
push
or
sbb
mov
cmp
in
cmp
hlt
sbb
ljmp
sti
jne
xor
xchg
xor
int3
cmc
rolb
or
inc
outsb
lds
mov
jl
insl
mov
or
clc
rclb
bound
jbe
rcrl
push
cwtl
add
add
jl
stos
test
jno
lods
mov
shl
in
lcall
xor
cwtl
loop
pushf
cld
mov
dec
shrb
sbb
adc
mov
or
mov
adc
sbb
or
dec
vorpd
lcall
mov
into
loopne
mov
popw
and
mov
jo
dec
vandnps
mov
jne
xchg
push
xor
xchg
imul
adc
es
ljmp
sar
outsb
mov
add
out
jmp
or
jns
inc
in
test
dec
push
into
in
in
fisubrl
push
mov
ljmp
inc
neg
mov
push
xchg
pop
or
mov
in
int3
roll
addr16
loope
in
and
lds
insb
xchg
loopne,pt
iret
inc
cld
sub
mov
cmp
fstenv
lret
movsl
mov
out
cld
scas
mov
rcrb
mov
push
test
faddp
arpl
mov
mov
out
sub
xchg
neg
stc
ret
imul
shl
enter
push
insb
xchg
decb
xor
rolb
pop
xchg
orb
loope
jae
lock
movsl
lods
xor
dec
jae
insl
popa
cs
inc
dec
push
in
out
rcrl
xchg
jle
sbb
popf
cltd
repz
xchg
mov
dec
adc
pop
mov
lea
jb
iret
pushf
or
and
stc
fisubs
jb
rcl
shrb
xchg
shlb
pop
adc
push
pop
in
and
faddl
pop
jb
jmp
pop
push
and
mov
bound
mov
and
pushf
sbb
mov
jge
or
jno
lret
inc
mov
jl
stos
mul
mov
and
out
inc
mov
mov
inc
mov
test
pop
mov
push
testb
and
mov
cvtdq2ps
test
stc
cwtl
test
jle
fimuls
out
repnz
bound
mov
add
out
mov
inc
inc
xchg
push
notl
fwait
xchg
ret
sbb
fisttps
inc
inc
enter
les
cmp
ja
sub
add
cli
push
scas
push
pusha
mov
xchg
pop
xor
loope
xor
add
cmp
lret
push
and
inc
loop
lret
cmpb
shrl
mov
call
loope
sub
mov
hlt
pop
testl
or
jns
mov
dec
push
mov
pop
sarb
sub
das
inc
pop
mov
xor
jne
ljmp
push
test
lret
xchg
das
and
out
mov
lods
lock
or
sahf
or
leave
sahf
sbb
add
jle
lcall
in
dec
decl
sbb
mov
sahf
and
stos
mov
inc
jne
and
or
pop
lret
lods
mov
jae
fs
dec
popl
adc
arpl
mov
dec
out
or
and
cwtl
xchg
aas
mov
adc
ss
cli
inc
push
xor
shll
adc
mov
adc
jg
push
and
xchg
sti
pop
push
push
cmp
dec
pop
lds
in
jmp
and
xor
fdivr
xchg
outsl
fsubrs
cmp
push
mov
xor
repnz
fs
mov
aas
sub
push
adc
xchg
dec
popa
lret
les
js
add
or
addr16
mov
mov
out
xchg
call
cmpsb
inc
outsl
mov
sub
mov
mov
or
cs
lods
cmp
mov
dec
pop
mov
lds
adc
insb
shl
ja
arpl
mov
xlat
push
loopne
jg
fidivs
js
notl
loope
dec
xor
daa
cmp
leave
cmp
jmp
push
mov
ret
sub
arpl
insl
cmpsb
test
cld
and
iret
cmp
int3
mov
push
popf
inc
adc
cmp
arpl
lahf
inc
mov
int
fildll
pop
lret
hlt
int3
gs
in
xor
push
or
out
jb
sbb
sub
pop
inc
xor
cmpsl
add
push
mov
loopne
lock
pop
ja
bound
jecxz
fnsetpm(287
aam
test
mov
or
rorl
out
inc
mov
push
dec
sbb
out
adc
mov
out
aam
mov
repz
repnz
mov
ds
xchg
rcrl
mov
inc
pop
mov
and
icebp
mov
or
imul
stos
sub
xlat
cli
lret
xchg
pop
repnz
mov
insl
loopne
mov
add
xchg
inc
jbe
testb
cmp
das
call
adc
idivl
mov
and
xor
and
popa
test
iret
push
add
lea
lock
insl
cmp
loopne
adc
sbb
or
push
ret
sbb
ljmp
ret
xchg
ftst
sahf
mov
mov
inc
or
js
lock
adc
aas
int
dec
add
jb
out
fisubrs
ljmp
push
jns
rolb
mov
ds
xchg
mov
push
shrl
lods
lret
inc
xorl
lret
jbe
pop
dec
pop
jne
or
out
nop
mull
mov
inc
add
std
pop
lret
sub
lock
xor
xchg
mov
mov
sbb
and
xlat
cmpsb
jg
jle
cmc
push
shll
pop
and
xchg
lds
and
xchg
stos
xchg
xchg
xor
mov
dec
xor
sbb
leave
out
sarb
adcl
mov
lods
xor
mov
popf
lret
into
in
push
ja
enter
adc
daa
out
enter
push
inc
lods
cltd
pop
cs
outsb
jg
jp
into
shrl
xchg
das
mov
lea
cs
dec
leavew
hlt
jge
sti
push
bnd
ljmp
daa
ja
in
pop
aaa
mov
mov
pop
sub
sbb
lahf
or
sub
mov
fmul
repz
jle
cmp
push
xchg
xorl
loope
and
test
jp
orl
mov
cli
mov
hlt
repz
jg
sbb
xchg
sub
das
inc
jl
cmp
imull
loop
cmp
mov
lods
xchg
cmp
into
in
aaa
xchg
testb
je
cmpl
and
sbb
out
sub
pop
adc
aam
xchg
mov
mov
stc
clc
sub
insl
xor
xor
mov
sub
cmp
in
shll
adc
adc
mov
xor
popa
lret
lds
dec
mov
or
sbb
adc
arpl
pop
fwait
jge
pop
cli
pop
jne
repnz
pop
arpl
cwtl
sub
in
xchg
call
sbb
pop
paddsb
int3
pop
sar
xchg
cmpsl
adc
mov
sbbb
out
fnstsw
inc
inc
mov
pusha
dec
movsb
lds
int3
arpl
inc
int3
lea
aas
roll
push
cmp
jl
es
and
movsl
movl
xchg
arpl
sbb
shrb
mov
pop
jo
mov
into
fsubrl
adc
cltd
push
gs
xor
shrb
nop
cmp
push
insl
fldt
dec
mov
sbb
xor
lods
or
call
xor
mov
mov
mov
jbe
fnsave
xchg
adc
xor
inc
xchg
scas
lahf
leave
xchg
leave
dec
lods
mov
fisttpl
notb
outsb
rorl
ror
sub
sub
and
fdivl
push
lds
or
pop
or
ljmp
bound
cmpsb
aam
movsb
mov
or
dec
mov
push
jp
mov
daa
popf
adc
add
xchg
loope
push
repnz
cmc
push
movb
jge
and
and
mov
and
movsl
jle
jl
mov
rcll
in
sub
inc
mov
mov
pop
cmpsl
adc
popa
and
or
xchg
divl
in
into
aas
sbb
aad
adc
dec
xchg
decl
xchg
mov
mov
cltd
mov
mov
sahf
jg
fisttpll
dec
pop
movsb
stos
pop
test
pop
loope
inc
add
pop
or
fists
les
imul
jns
loope
cmp
jg
mov
fldenv
sarl
shl
repnz
out
pop
inc
rclb
stc
xor
sbb
mov
test
fdivrs
jmp
mov
jae
jmp
xchg
test
out
push
mov
pop
out
lcall
adc
into
das
addr16
sbb
gs
daa
test
popf
fldcw
pop
push
idiv
sbb
in
in
mov
clc
arpl
lahf
mov
rclb
adc
inc
or
aad
jle
xor
lods
cmp
and
push
pushf
pushf
lds
dec
inc
lret
and
mov
cvtpi2ps
xor
fsub
les
pop
rclb
fiadds
mov
xchg
cmp
cld
and
dec
add
aam
scas
jp
pusha
pop
xchg
pusha
xor
jle
ss
adc
sub
or
lock
mov
or
repnz
cmp
cld
ret
adc
fucomp
frstor
or
sub
insb
push
call
or
nop
pop
and
fldl
cmp
pop
stos
scas
jecxz
mov
lods
sub
add
or
repz
push
nop
adc
adc
arpl
scas
push
mov
and
xor
ret
enter
jecxz
mov
xor
ret
aad
xchg
pusha
jb
xchg
ret
mov
stc
add
add
sbb
add
bound
fdivrl
movsb
movsl
shlb
lret
and
cwtl
sti
addr16
scas
cmp
mov
les
sarb
pop
shrl
pop
popa
adc
xor
sbb
cmp
mov
out
pusha
cwtl
xchg
aas
insb
rcrl
inc
je
cmp
mov
fcompl
mov
xor
xchg
cli
addr16
ret
sub
fidivl
in
fnstenv
dec
jge
je
test
aas
sbb
test
aaa
daa
push
pop
and
pushf
jb
lods
mov
adc
xchg
ds
mov
dec
andb
xchg
lret
xlat
cmp
imul
sbb
enter
int
fcomps
jl
iret
adc
or
sbb
xor
dec
adc
jmp
mov
cld
mov
push
sti
arpl
ja
icebp
enter
sbb
jecxz
outsl
pop
mov
xchg
shlb
mov
mov
xor
js
jno
pop
lods
mov
pop
jp
sbbl
cld
or
outsl
jmp
clc
and
push
hlt
cmp
cmpb
cmp
xchg
add
loop
mov
out
mov
or
scas
dec
in
pop
sub
mov
mov
jl
ret
xchg
je
js
mov
cmp
enter
addl
js
clc
mov
loopne
inc
push
mov
in
loopne
dec
inc
sub
int3
mov
sbb
push
pop
notl
or
pop
scas
hlt
push
pop
fistpl
and
addr16
clc
pop
in
nop
pop
mov
jo
xchg
rol
jp
in
push
jle
push
lahf
sbb
data16
jo
cmp
mov
sti
adc
das
or
mov
fisttps
out
sub
push
daa
jnp
and
push
push
mov
bnd
cmpb
imull
iret
xchg
pop
leave
aam
push
ret
cmpsb
adc
mov
cmp
sbb
lret
xchg
push
push
subb
sub
mov
aaa
xor
int3
mov
and
cli
lods
push
cltd
inc
data16
jb
mov
xor
out
mov
pop
push
stos
jne
add
es
lds
sahf
pop
sahf
daa
or
jg
dec
mov
shrb
lret
pusha
lahf
cmp
mov
test
ret
sti
incl
std
cld
jns
imul
ja
stos
sbb
lods
lock
cmp
ljmp
sub
mov
pop
inc
dec
scas
mov
rcll
xchg
xor
and
cmp
xor
pop
pop
dec
cmp
push
dec
jp
sahf
clc
dec
adc
mov
cld
movsl
and
and
add
js
pop
xchg
push
leave
sub
jp
pop
loope
push
jle
bound
loope
xor
data16
lods
inc
pop
fmull
pop
add
repnz
loopne
leave
xorb
cmpsl
loop
pop
mov
test
sub
sti
inc
or
dec
test
ds
ret
ret
scas
sti
fcoms
fisubrs
sbb
clc
pop
jne
inc
orl
mov
dec
xchg
sahf
lret
or
out
std
cmp
add
mov
sub
pop
sahf
int3
std
dec
jl
sbb
mov
add
xor
push
das
mov
cmc
mov
pop
and
cmc
push
popa
stc
gs
ja
ds
add
repnz
push
addr16
outsb
xchg
cmpsb
icebp
and
lock
mov
je
lcall
icebp
mov
xchg
jge
jge
fs
cld
cmc
dec
cmp
test
lock
test
cmp
inc
xchg
or
add
call
or
push
jne
xchg
xchg
roll
xchg
popf
pushf
xchg
dec
iret
repz
sub
mov
lock
pop
push
jno
cmc
int
and
inc
mov
gs
fcomip
jge
dec
out
jmp
out
ljmp
aaa
pop
lret
push
dec
mov
aas
push
push
sbb
adc
jno
scas
mov
dec
int3
push
or
out
cmc
and
iret
pop
int3
pusha
dec
push
pop
mov
pop
jo
jno
rol
jmp
push
fwait
inc
icebp
xchg
gs
xor
mov
xchg
inc
nop
cmp
loopne
pop
mov
in
stos
fs
sbb
jbe
imulb
pop
adc
add
int3
std
fisubrl
adc
xchg
inc
daa
ret
iret
out
sbb
add
jecxz
fs
cmpsl
lea
mov
out
sahf
push
ljmp
ss
and
cli
and
push
pop
ds
insb
bound
orl
mov
pop
push
icebp
mov
sub
out
loope
adc
std
in
or
dec
or
repnz
mov
mov
mov
mov
ret
xor
lcall
push
ficoml
sub
adc
dec
adc
and
add
popa
stc
push
pop
mov
pop
xlat
sub
mov
dec
cmp
mov
shl
into
and
cmp
xor
sbb
inc
fdiv
scas
xor
imul
xchg
sub
insl
mov
mov
xchg
mov
sbb
sub
jno
rcrb
aam
or
inc
push
lock
js
insl
cmc
lods
push
or
cmp
jle
cltd
jno
loop
sahf
sarl
adc
mov
gs
cmp
and
pop
pop
stos
adc
pop
nop
fbstp
dec
call
ret
loopne
push
mov
jne
loopne
ds
sub
sub
repnz
arpl
xor
and
test
dec
lods
out
aaa
mov
fsubrs
dec
in
nop
lcall
ds
xor
push
test
xchg
pop
enter
push
jns
inc
subl
rorl
repnz
loopne,pt
js
cmpsb
dec
clc
push
xor
inc
call
lods
orb
or
xlat
leave
sub
mov
push
mov
out
jo
mov
push
pop
and
rol
div
adc
aad
adc
test
cld
xchg
inc
test
imul
sbb
and
inc
jbe
dec
int3
and
add
lods
push
sbb
cwtl
sub
aas
xchg
sbb
mov
outsl
dec
lods
mov
and
lods
out
mov
xchg
stc
in
sub
into
int
lret
xchg
or
outsl
and
push
rcll
js
jno
pop
xor
popa
pushf
out
jl
ror
cmp
cld
push
cmpb
hlt
inc
pop
push
mov
cmpsl
loop
nop
imul
mov
rclb
dec
xlat
stc
xchg
iret
out
push
into
sahf
mov
push
cmp
cmp
repnz
mov
jb
xchg
adc
cld
fistps
popf
and
idivb
jns
mov
xchg
push
adc
jle
mov
shlb
ret
adc
subl
stos
fcmovne
mov
inc
pop
sub
movsl
int3
into
imul
cmp
and
sbb
addr16
sub
and
cmp
push
jne
pop
and
jecxz
adc
ss
push
add
xchg
jle
mov
pop
and
data16
fs
int
gs
adc
xchg
js
mov
xor
test
mov
and
mov
fisttps
pop
mov
xlat
or
and
add
push
and
sub
jmp
jnp
insl
inc
cltd
sbb
daa
cmp
dec
arpl
imul
out
dec
rcl
xor
movsl
or
dec
xchg
lret
in
push
sbb
repnz
out
insb
pop
outsl
push
iret
lret
xor
cmp
outsb
jmp
pop
fistpll
cmpsl
loop
mov
insl
xchg
outsl
test
data16
push
and
sti
cld
mov
pushf
ljmp
adc
aaa
jmp
push
lret
pop
cs
mov
jnp
sub
jne
cld
std
divb
xor
mov
fs
and
hlt
out
adc
xchg
and
jecxz
int
loop
shrl
hlt
repz
clc
out
stc
sub
frstor
inc
push
test
imul
jg
gs
outsl
sbb
fdivs
cltd
or
add
loope
mov
pop
outsl
dec
fisubl
out
divb
les
fisubl
adc
rclb
cld
popa
ret
sub
xlat
adc
test
fucomp
rcll
into
out
iret
in
sub
cmp
push
dec
popa
mov
adc
pop
lods
fwait
mov
xchg
mov
scas
adc
add
cld
pop
shl
sub
pop
xor
mov
and
xchg
mov
adc
cmp
xor
sub
mov
mov
push
jne
scas
xor
inc
push
jle
adc
gs
int
mov
pop
add
dec
xchg
push
push
popa
pop
leave
sbb
imul
dec
pop
xchg
sti
lods
in
jo
leave
jo
ret
adc
stc
pop
ret
and
sbb
popf
sub
jne
xor
jne
test
xchg
push
sub
jmp
ficomps
cltd
mov
push
inc
xor
movsb
jp
push
cmp
sub
xor
std
cmpl
popf
add
loop
movsl
pop
xlat
cs
cmp
pop
pop
mov
push
jmp
mov
pusha
outsl
out
jo
int3
daa
dec
push
inc
fistpl
scas
jb
scas
out
call
cs
les
push
lds
lods
movsb
faddp
mov
push
out
std
enter
repz
fmull
xchg
mov
insb
or
xchg
pop
aam
cli
loopne
shrl
add
push
mov
mov
je
xchg
ret
jns
sahf
cmp
aas
sbb
xlat
nop
into
jg
lret
inc
cmc
inc
aad
mov
cmp
jae
mov
or
dec
inc
xor
pop
mov
neg
ret
jno
ja
into
dec
notb
xchg
out
daa
jb
fdivrs
pusha
addr16
fdivrs
push
mov
cmp
int
out
scas
push
std
xor
adc
cmpb
in
xor
cmpsl
sbb
add
push
push
sub
fistpll
or
aam
push
outsb
adc
pushf
ret
sarb
out
push
mov
adc
arpl
int
xchg
sarb
add
mov
jnp
xor
and
mov
repnz
loope
ljmp
add
ficompl
shlb
lods
add
jnp
negb
xchg
dec
and
xchg
test
jg
mov
fsts
xchg
imul
and
cmpsl
sbb
sti
pop
pop
mov
xchg
sub
sub
pop
movsl
fnsetpm(287
test
sbb
lcall
test
shlb
mov
iret
aas
and
mov
pop
jmp
jbe
cmp
shrl
aaa
call
cltd
cltd
inc
jmp
pop
fdivr
stos
mov
scas
shlb
loopne
or
sbb
jmp
pusha
fs
iret
pusha
add
mov
cli
loop
cli
outsl
add
adc
repnz
imul
jbe
inc
jno
xchg
lods
addr16
popa
pop
mov
dec
fnsetpm(287
notl
adc
cmc
jecxz
mov
scas
xor
gs
mov
shll
test
cld
test
mov
or
pop
xchg
fistps
jno
inc
mov
adc
push
ja
addr16
mull
fldt
inc
fisttpl
pop
pop
adc
cwtl
adc
outsb
js
mov
sbb
and
add
fmull
in
gs
fwait
push
cmpsl
jb
inc
dec
fnstcw
or
sbb
cmp
mov
mov
clc
lcall
adc
sbb
idiv
sbb
leave
push
inc
lods
or
jge
addb
cmp
jo
jp,pn
fsubp
stos
ss
dec
push
mov
bound
in
cmp
fistl
popa
dec
xchg
sub
fucom
dec
dec
popa
fidivrl
or
xchg
mov
and
or
test
test
jl
addr16
push
inc
jge
push
pop
push
mov
jp
imul
sbb
les
pop
xchg
daa
sbb
test
imul
dec
inc
ljmp
inc
jge
aad
cmpsb
stc
sbb
lods
fdivrp
imul
sbb
sti
mov
sub
mull
dec
ret
in
xchg
mov
adc
and
dec
repz
jno
cmp
push
pop
movsb
in
cmp
mov
pusha
lcall
loop
cmp
cmpsl
mov
adc
pop
jnp
repz
sbb
pop
push
add
xor
sahf
pushf
les
mov
sahf
lock
sub
adc
add
and
sub
aaa
insl
mov
sbb
and
and
inc
les
jnp
sahf
xchg
push
jecxz
add
testl
xchg
sub
or
pop
aaa
ja
lods
in
pusha
dec
rorl
mov
aam
sub
leave
loop
jle
push
jo
loope
addr16
mov
xor
aad
add
and
rclb
push
rol
movsb
pusha
cmp
cmpsb
sub
mov
mov
std
mov
faddl
add
fidivrs
cmp
dec
test
ss
push
orb
cmp
outsl
cmpsl
or
int3
cmpsl
hlt
sub
jp
bound
mov
cmp
inc
sub
push
pushf
or
fbld
adc
mov
into
gs
mov
mov
aaa
sub
xor
cmpsl
ja
gs
push
mov
mov
outsl
call
outsl
inc
xchg
push
cmp
add
and
leave
fs
repz
jb
pop
push
jo
mov
into
adc
jnp
fildl
sbb
push
add
mov
jmp
jl
mov
push
clc
mov
jg
inc
fildl
cmp
mov
mov
pop
cmp
test
and
mov
or
inc
fldenv
repnz
add
decb
gs
outsb
ljmp
enter
jo
ret
xchg
xchg
test
loope
fiaddl
push
jno
mov
pushf
mov
xchg
adc
out
mov
jb
lods
adc
inc
sar
mov
add
mov
rclb
push
xor
mov
and
pop
and
push
fisubl
call
cmp
jb
or
pushf
mov
inc
push
xor
add
mov
mov
gs
cmp
jno
cmc
cltd
popa
or
cmpsb
xor
ljmp
add
dec
push
cmp
xchg
int3
jecxz
outsb
je
cmp
lret
mov
pop
lcall
mov
dec
xor
bound
lret
sahf
js
and
push
test
mov
dec
test
cmc
mov
aaa
popa
adc
mov
lcall
ds
std
jb
add
lds
aam
jle
icebp
aaa
mov
int3
sub
out
sbb
push
add
mov
xor
mov
call
lret
jmp
cltd
inc
push
sbb
jne
imul
add
inc
mov
addr16
push
loop
daa
int
inc
push
cmpl
in
dec
mov
mov
adc
out
cmpsb
sbb
xor
dec
mov
int
sbbb
push
lods
push
xchg
jns
push
or
repz
lds
outsb
dec
std
rcrb
inc
sub
cmp
lock
cmpsb
and
scas
cmp
test
xchg
mov
mov
fimuls
mov
in
mov
mov
cwtl
lret
cmpb
movsb
mov
xchg
xchg
lea
lods
sti
shrl
imul
std
sti
push
add
adc
scas
pop
or
clc
pop
lahf
pushf
out
dec
movsb
sbb
int
jo
aad
jp
xchg
and
sbb
mov
ss
popf
stos
cs
mov
mov
push
lcall
test
mov
popa
aaa
xor
mov
loop
jno
arpl
or
mov
enter
cwtl
xor
imul
pop
imul
mov
sarl
fs
incb
xor
jo
sahf
pop
out
hlt
punpckhbw
sub
aad
mov
add
jns
xchg
outsb
test
icebp
js
mov
mov
pop
aaa
pushaw
sub
lock
push
cmp
dec
mov
cmp
fdivs
jecxz
xchg
push
xchg
arpl
sub
cld
lods
in
mov
jp
scas
shlb
inc
adcb
dec
repz
cmp
ret
outsl
xor
mov
mov
jmp
mov
stos
mov
test
jns
dec
movsb
adc
imul
aad
xor
jle
inc
xor
pop
xchg
mov
jbe
mov
adc
sti
dec
cmp
mov
jb
imul
adc
out
lret
mov
jno
mov
dec
dec
repnz
push
mov
sub
mov
mov
sbb
sbbl
pop
outsb
cli
sbb
popa
mov
pop
jo
fimull
add
rcll
testl
scas
pusha
sub
add
push
ret
xchg
mov
rolb
pop
or
mov
jecxz
hlt
push
lcall
fnsave
aam
lret
mov
xor
cld
daa
sub
adc
xchg
or
fdivr
jae
push
insb
xor
cmpsl
cmp
push
dec
lock
in
pop
mov
fyl2x
out
adc
push
inc
pop
out
inc
pop
inc
add
fimuls
adc
fcoms
loope
in
mov
addr16
mov
ds
das
or
daa
inc
loopne
xor
out
je
scas
pop
mov
inc
add
movsl
and
push
push
scas
adc
or
jnp
or
cltd
in
xchg
data16
sub
dec
pop
roll
pop
mov
xor
add
es
fsubl
xchg
fs
repnz
hlt
sbb
pop
fsubrp
inc
shl
out
lock
ja
adc
fdivs
cmpsl
xlat
adc
jb
cmc
lock
out
jnp
push
cmp
clc
lcall
nop
mov
fs
imul
nop
rcrb
jmp
add
fwait
in
scas
popf
push
sbb
das
mov
lret
jbe
cmp
jecxz
sti
int3
xchg
push
xchg
cltd
push
lret
out
inc
pop
test
dec
mov
and
sub
push
inc
daa
hlt
std
rcrb
jle
subb
aad
and
in
ja
mov
mov
xchg
dec
and
popf
into
inc
sub
sbb
stos
les
popa
fwait
and
or
dec
orl
in
mov
ret
sub
mov
outsb
push
out
mov
mov
and
sbb
fistpl
adc
adcl
shrl
cmpsl
dec
adcb
sbb
in
stos
and
fs
hlt
lock
data16
lret
cmp
cmp
incl
push
scas
mov
pop
popa
inc
addps
sub
jmp
push
aas
loop
add
lret
out
mov
add
sbb
sarl
pop
xor
pusha
mov
and
bnd
icebp
adcb
ficomps
jge
imul
or
in
aam
mov
in
jnp
mov
and
dec
fidivl
jle
sbb
sub
mov
sarb
cltd
lds
fwait
sub
jns
pop
adc
dec
sub
mov
je
hlt
adc
adc
xchg
lret
push
xor
pusha
fisubrs
jg
jb
bound
mov
into
hlt
outsl
loope
imul
sahf
xchg
dec
or
and
pop
pop
mov
movsl
repz
cmc
inc
ret
mov
or
loop
fcomps
lods
mov
repnz
out
cld
dec
pop
xchg
ds
inc
popf
and
push
test
hlt
in
pop
adc
mov
adc
sbbl
push
push
or
mov
xchg
js
and
mov
iret
cs
repnz
sbb
jnp
incl
daa
cmp
mov
xor
jl
pop
sub
push
cmpb
shl
lret
aas
pop
mov
pop
shll
push
call
mov
sub
xchg
mov
sbb
daa
imul
xor
cmp
out
scas
mov
push
mov
repnz
and
and
sti
popl
inc
and
cmp
inc
scas
fcompl
aam
imul
mov
lds
out
inc
jns
and
or
lahf
jmp
cltd
mov
lret
fisttpll
sub
icebp
xor
lret
dec
pop
sti
call
imul
inc
lcall
pop
fwait
enter
loopne
js
or
xchg
push
rorb
xor
popa
neg
daa
push
pushf
jno
adc
icebp
push
call
lret
fists
push
in
jo
and
adc
es
mov
hlt
cmp
pop
push
jmp
imul
mov
insb
test
pop
sbb
adc
push
lock
mov
adc
jb
ljmp
ja
in
in
jge
pusha
jl
movsl
and
jne
push
imul
push
push
hlt
mov
scas
push
cmpsb
ret
or
or
cltd
jns
dec
andl
pop
jge
cmp
mov
adc
out
xor
xor
cli
dec
sahf
mov
lock
jecxz
inc
inc
out
fldl
or
inc
adc
inc
popa
nop
fs
mov
bound
faddp
cmp
or
ret
dec
dec
lahf
and
adc
pop
mov
dec
mov
cmp
cmp
dec
sbb
jmp
lcall
dec
pop
mov
icebp
out
mov
cmp
push
and
cmp
pop
push
test
insb
stc
stos
mov
pop
enter
lcall
xorl
andb
scas
jecxz
daa
xor
inc
push
outsb
jo
cld
int3
sub
iret
test
cmpsb
jl
lods
sti
add
scas
inc
add
test
arpl
or
mov
test
out
ss
aas
cmp
ret
inc
xlat
arpl
or
pusha
adc
mov
ss
jmp
jbe
lret
xor
and
push
das
jnp
insl
jb
movsl
xor
bound
push
sti
mov
mov
fidivl
test
add
sbb
enter
sbb
jmp
push
or
minps
mov
dec
mov
lret
rcr
jmp
sahf
loopne
cmc
mov
shlb
inc
mov
test
mov
nop
out
iret
lods
adc
sarb
jno
xor
les
mov
mov
outsb
inc
in
push
call
repz
popa
std
jno
dec
imul
clc
pop
int
cmp
xchg
cmp
mov
jmp
lahf
arpl
test
bound
dec
dec
dec
scas
cs
lcall
repnz
mov
dec
jp
testl
sub
xor
cmc
insb
xor
and
cmp
outsb
adc
cwtl
push
mov
jnp
push
mov
sbb
lret
mull
decl
xchg
jmp
pushf
int3
cmp
stc
sbb
lods
outsl
movsl
and
dec
popf
mov
pop
outsb
cmp
les
stos
sti
sar
add
adc
xor
mov
leave
mov
nop
popa
int3
loop
pop
testl
filds
lds
stos
mov
or
cwtl
xchg
stos
shll
fmuls
xchg
mov
pop
nop
scas
push
mov
loopne
push
stos
push
mov
xchg
dec
lods
mov
sbb
xor
mov
mov
jge
in
or
sub
adc
xchg
adc
fcom
sub
push
data16
jne
movb
push
cli
or
aaa
mov
push
sbb
mov
imul
movsb
dec
stos
adcl
in
sahf
xchg
add
loopne
loope
les
sbb
and
jl
inc
test
das
mov
lahf
test
push
daa
ss
stc
inc
sub
in
sub
push
inc
ret
or
push
push
mov
shrl
mov
and
or
lret
jbe
shl
sbb
aad
mov
clc
cwtl
jno
aam
mov
xchg
inc
lret
stc
sti
insb
scas
and
je
jo
inc
or
into
adc
pushf
ret
push
dec
lret
out
jl
les
mov
xor
mov
or
jmp
jo
outsb
jg
mov
push
sbb
loopne
add
mov
stc
sarl
test
add
ret
mov
add
jg
data16
movsb
dec
outsl
and
rcll
adc
sbbl
adc
in
es
rol
adc
inc
mov
out
cld
push
jo
stc
cwtl
test
push
or
jno
push
xchg
fwait
or
aad
movsl
lds
clc
test
push
cmp
inc
mov
paddw
push
daa
popa
sbb
mov
fbld
lret
mov
xchg
push
adc
push
popf
clc
ret
add
push
cld
cld
adc
and
push
imul
add
clc
mov
addl
movsb
in
sti
mov
es
or
pop
cmp
add
fadds
daa
sbb
lcall
or
popa
ret
mov
dec
push
mov
and
or
out
into
push
fnstsw
std
das
cmp
push
pop
es
push
dec
les
aas
mov
and
or
fstps
adc
stc
mov
inc
mov
xchg
pop
xchg
ret
xchg
js,pn
mov
pavgb
fistpl
in
test
adc
pop
test
cmpsb
outsb
loopne
divl
jecxz
fisttpll
or
stos
loope
test
cmp
fs
imul
shl
mov
mov
popa
test
cwtd
cmpsb
ret
sar
dec
inc
inc
mov
jb
sti
stos
loop
mov
ret
jge
fwait
rclb
push
js
ror
or
fistl
jmp
bound
test
inc
sahf
mov
mov
js
data16
out
cmc
xchg
popf
scas
movsl
jle
in
into
mov
mov
mov
cmp
sarb
and
lret
data16
and
push
loopne
sub
je
mov
and
mov
or
movsl
mov
sti
stc
movsl
aas
adcl
mov
push
outsb
push
inc
push
fildll
aad
xor
dec
pop
inc
or
js
enter
xchg
cmp
and
jmp
sub
dec
loopne
out
xchg
mov
jge
cmp
imul
mov
ret
gs
lret
or
ret
push
dec
lock
in
loopne
cmp
sbb
notl
jno
push
scas
pop
subb
push
jnp
push
mov
fsubrl
mov
jp
xor
outsb
pop
fstps
in
xchg
dec
xchg
push
dec
dec
fwait
push
mov
ficomps
imul
push
push
xor
cmp
cmpsb
mov
cs
aad
lds
sahf
nop
mov
sahf
mov
xchg
mov
movsl
int
sahf
xor
ret
femms
inc
sbb
cwtl
nop
icebp
mov
ret
icebp
pop
cld
xchg
xor
push
sbb
popf
jmp
roll
mov
mov
xchg
or
pop
mov
ret
xchg
rclb
sub
test
cmpsl
daa
and
dec
inc
adc
in
fsubrs
arpl
xor
push
cmp
adcl
roll
pop
shll
mov
add
out
sbb
lret
lods
pushf
pop
jl
add
adc
adc
pop
push
cltd
ror
popa
repz
push
cld
jp
loope
ljmp
sbb
push
sub
mov
xchg
ljmp
aad
mov
pop
mov
mov
jnp
scas
mov
pop
icebp
add
sbb
movsl
stc
aaa
xchg
pusha
cmp
sbb
popa
ret
dec
mov
sub
xchg
jg,pn
mov
stos
pop
jg
jp
aas
subl
fistpll
xor
lods
loop
sbb
scas
push
or
jb
and
jmp
scas
xor
in
inc
sarb
mov
or
cltd
jmp
cltd
add
test
or
in
add
sub
cltd
imul
loopne
or
in
adc
fbstp
adcl
dec
cmpsb
sahf
fdivrs
mov
jp
outsb
mov
mov
stc
rclb
xchg
daa
adc
inc
mov
in
or
mov
mov
jmp
xor
mov
sar
mov
lea
mov
lods
cs
cltd
sbb
dec
gs
addl
mov
xlat
push
mov
ljmp
stc
stos
out
sub
xor
sub
xorb
mov
mov
loope
icebp
mov
arpl
pop
rorl
jl
pop
mov
fistl
add
or
mov
arpl
mov
rcrl
addl
fs
cmp
xorb
testl
push
repnz
clc
cmpsb
fwait
addr16
insl
push
decl
add
mov
mov
lss
cs
jae
lods
inc
xchg
cmpsl
sbb
insb
pop
pop
cwtl
add
lods
xchg
aad
mov
mov
mov
or
jbe
lret
into
and
fadds
push
nop
xchg
inc
mov
mov
mov
cmp
pop
push
outsl
mov
mov
in
test
sbb
adc
jp
xchg
leave
out
lds
les
sub
fsubs
cmpsb
push
mov
lret
cli
cmp
icebp
das
cs
push
loope
xchg
movq
xor
push
jecxz
sub
outsl
mov
js
into
ret
out
cmpb
leave
pusha
cmc
jne
push
in
inc
push
arpl
cmpsb
scas
ret
cmc
lods
cmpb
push
jle
ret
data16
aaa
inc
lds
punpckhdq
push
fwait
xor
xchg
popf
push
loopne
jl
xchg
outsb
xchg
sub
insl
pop
cli
dec
loopne
gs
ss
insb
out
or
popa
xchg
andl
popf
jmp
out
lods
bound
xor
out
mov
je
inc
fmull
xor
jecxz
dec
repz
sub
fadd
push
in
xchg
inc
std
mov
leave
or
lods
mov
dec
inc
adc
cmc
mov
xchg
and
cmp
stos
xchg
sbb
adc
test
add
pop
push
dec
jno
and
adc
adc
pusha
pop
leave
cmp
out
xchg
jne
lds
mov
mov
lret
pop
sbb
lods
jmp
cmc
test
in
in
jnp
stos
mov
in
mov
fldenv
fdivl
mov
sbb
repz
sub
or
shlb
mov
mov
in
xor
ret
xchg
lcall
sbb
jae
gs
iret
push
loopne
cwtl
sub
sbb
jo
jbe
fmul
pop
sbb
add
out
mov
jb
add
test
cmp
or
cwtl
test
add
add
push
negb
icebp
divl
stc
lahf
mov
pop
in
push
jle
inc
mov
or
mov
push
insl
jne
repnz
sub
shrl
jl
jecxz
pushf
inc
enter
jnp
pop
pop
outsl
cli
push
sbb
add
test
xor
pop
dec
sbb
push
lea
stos
fwait
sbb
in
cmc
lret
mov
repnz
xor
adcb
xlat
ds
idivb
data16
hlt
dec
cld
cmp
pop
aaa
sbb
cmc
mov
pop
xchg
movsl
dec
push
add
outsl
push
xor
mov
dec
jnp
adc
ja
les
fiaddl
push
rclb
mov
dec
jnp
xchg
and
stos
xlat
xchg
rclb
sbb
rcr
inc
mov
push
xchg
add
loope
cwtl
push
dec
adc
aas
xchg
xchg
repnz
xchg
jmp
jmp
loope
adcl
out
mov
mov
push
sbb
or
mov
xor
dec
aad
or
mov
xlat
out
std
outsb
inc
loopne
aad
mov
and
or
rcl
shrb
cmp
mov
jp,pn
pop
mov
int3
arpl
and
xchg
js
mov
and
inc
das
repz
out
push
icebp
mov
dec
cltd
lods
sub
in
cltd
mov
xchg
fisubs
in
repz
lods
jecxz
push
cmpl
pop
push
add
mov
aas
repnz
cmc
rol
sub
lret
xchg
mov
mov
add
push
inc
test
xor
test
xor
pop
sub
fsubr
inc
into
lcall
scas
loope
repnz
pushf
out
aam
out
push
int3
xchg
mov
nop
mov
push
loop
cmpsb
xorb
sbb
and
mov
out
mov
int3
jmp
lret
jl
and
mov
xor
dec
mov
push
adc
add
cli
pop
pop
and
pop
push
sbb
xchg
push
dec
not
in
or
das
idiv
pop
push
popf
cmp
mov
pushf
mov
movsl
inc
adc
push
test
sarb
xchg
push
dec
leave
bound
jns
ljmp
stos
rolb
in
mov
cli
mov
dec
xchg
and
ljmp
pop
popa
rcr
cmc
xchg
movsb
push
ljmp
imul
inc
idivb
adc
push
mov
leave
movsb
mov
shl
adc
jnp
cld
add
out
mov
inc
adc
jge
mov
pop
es
push
mov
push
add
mov
addr16
pop
and
fisubl
and
or
orb
mov
jne
or
jnp
aam
sbb
insb
jae
aaa
pop
mov
ljmp
inc
mov
adc
or
pop
xchg
adc
adc
das
and
push
sub
pop
or
sti
and
cmpsb
das
mov
ss
push
push
test
adc
loopne
lea
jnp
les
jl
inc
inc
aas
pushf
mov
mov
ja
in
sbb
xor
fsubr
int3
add
xchg
jne
xchg
pop
jle
mov
or
lahf
push
xor
lea
repz
das
jmp
cld
and
xor
shr
dec
movsb
xchg
sbb
fsubr
add
sub
dec
jl
dec
push
dec
aas
inc
inc
out
es
inc
test
mov
xchg
pop
inc
popa
xor
daa
test
xchg
cltd
or
sbb
pusha
ds
push
push
mov
xchg
mov
fcmovnu
cmpsb
imull
out
adc
jg
scas
pop
mov
sbb
jo
jns,pt
pop
sbb
push
stos
rol
pop
pop
mov
mov
xchg
in
fwait
push
imul
xor
in
sbb
pop
pop
movsb
ret
add
mov
push
std
xor
fs
lock
xchg
inc
popa
test
fisubl
add
subl
test
sub
arpl
dec
leave
pop
ficomps
cmp
mov
icebp
cmp
xchg
nop
out
cli
je
xor
pop
mov
jo
or
adc
rolb
repnz
mov
or
stc
mov
jl
sbb
mov
nop
out
mov
inc
xlat
adc
jno
iret
aad
and
sbb
xor
stos
mov
mov
inc
sub
cmp
in
repz
pop
pop
scas
test
rcrl
out
xor
ljmp
push
outsb
dec
push
fldt
fldl
arpl
ja
and
repnz
mov
xchg
sbb
xor
popa
lahf
fs
lds
popa
movsl
dec
sbb
in
push
pop
arpl
fdivl
fcmovnb
incb
in
xchg
shr
jae
cmp
push
popf
xor
pop
mov
add
jae
mov
arpl
or
xchg
mov
jle
sahf
jnp
push
sub
mov
insl
adc
jmp
mov
scas
lods
ret
stos
push
inc
jno
fildl
pop
les
adc
imul
mov
mov
pop
sub
jne
test
dec
mov
jp
iret
and
movsl
and
sub
enter
bound
mov
dec
es
push
push
xor
sarl
pop
push
outsb
out
lret
lock
sbb
icebp
inc
dec
xchg
mov
push
out
mov
add
sub
pop
fsubl
fistpl
mov
ret
fistpll
imul
cmp
ja
hlt
or
arpl
mov
rcl
or
sbb
mov
mov
cli
or
rorl
mov
test
push
push
dec
jne
and
icebp
xchg
mov
push
jmp
aaa
jge
inc
fnsave
jno
cmpsb
push
sbb
pop
xor
pop
inc
ljmp
mov
pusha
sub
and
fadd
and
jb
jno
xchg
or
cmpsb
xchg
call
test
aam
inc
iret
jae
in
jl
jns
fdivrl
pop
cli
jnp
dec
push
fwait
dec
mov
sbb
fwait
xchg
sub
or
aaa
std
enter
mov
and
popa
add
or
inc
aaa
xchg
lret
dec
dec
addl
xorl
jb,pt
loope
fidivrs
dec
sub
xor
and
das
lret
and
fcmovu
mov
dec
clc
add
out
adc
ja
mov
cmp
jbe
enter
mov
or
push
scas
xchg
xor
pop
dec
in
imul
pop
imul
ljmp
xor
jg
sbb
jecxz
push
movsb
dec
ds
fisttps
addr16
aad
and
fisubrs
fnstenv
push
mov
pop
xor
jae
sbb
or
ja
xchg
data16
sarl
mov
stos
xor
out
xchg
sahf
dec
lahf
pop
or
es
add
dec
mov
mov
sbb
xor
ss
call
clc
ljmp
repz
lds
inc
test
xchg
repz
roll
rorl
pop
aam
fdivl
mov
out
movsb
outsb
inc
lock
jle
insb
repnz
rclb
int
add
xchg
jmp
outsl
and
sub
jmp
push
cmp
icebp
icebp
icebp
getsec
dec
inc
test
sub
cmp
out
jb
popa
repnz
pop
or
mov
ror
and
xchg
lret
mov
cli
jno
add
mov
je
jno
push
inc
dec
scas
and
iret
shll
icebp
stos
sbb
ss
pop
sub
fcmovnbe
push
cmp
jle
push
lods
sbb
bound
or
call
pushf
addr16
bound
lcall
or
or
push
leave
out
stos
inc
dec
fwait
adc
ljmp
and
cmp
dec
xchg
mov
xchg
ljmpw
sub
fwait
mov
sub
cltd
lret
lds
adc
roll
sbb
cmp
and
imul
xchg
sbb
movsl
or
jno
lds
mov
lods
out
mov
loopne
mov
push
push
cmp
mov
rcrb
xor
iret
sub
cs
mov
mov
sti
fwait
in
fists
lods
and
loop
add
imul
gs
lret
icebp
std
popf
add
xchg
cmp
adc
pop
mov
jbe
xchg
loop
pop
mov
aad
jmp
ja
das
push
xor
push
mov
mov
inc
rcrb
xor
pop
push
cmp
aaa
ds
push
call
fwait
xchg
cmp
fcmove
xchg
sbbl
pusha
gs
mov
inc
mov
in
pop
push
fwait
jne
adc
and
fcomip
fdivr
add
loopne
cltd
out
test
sbb
inc
orl
cmp
cmp
es
in
pop
adc
add
and
test
mov
and
lret
adcb
inc
js
je
push
sub
mov
xchg
mov
jae
shll
ljmp
xor
add
inc
mov
pop
lods
xor
push
mov
jmp
das
dec
js
ljmp
int3
or
push
subb
roll
jmp
inc
sbb
fiaddl
push
mov
push
pop
pop
cmp
loope
push
fst
adc
pop
push
adc
arpl
outsl
lcall
out
inc
jmp
nop
jg
add
mov
inc
adc
xchg
push
ja
push
mov
xlat
bnd
insl
mov
sub
xor
add
sbb
sti
lods
faddl
adc
mov
roll
testl
add
xlat
lahf
mov
das
cmc
inc
neg
push
pusha
pop
insl
push
arpl
mov
decl
adc
inc
cmp
and
jg
scas
dec
cmp
addr16
dec
dec
sti
xchg
mov
sub
js
xlat
sbb
pop
pop
push
mov
shlb
adc
test
decl
add
dec
ljmp
mov
arpl
fs
jae
and
add
cltd
mov
pop
inc
jb
push
jl
jno
inc
vxorps
je
lea
ja
sbb
push
sbb
mov
clc
mov
int3
add
jle
in
sahf
push
xor
sbb
scas
pop
jae
mov
sub
outsb
das
repnz
lods
in
in
and
ss
and
sub
push
mov
dec
add
testl
adc
lods
fstpt
xchg
lock
xor
std
icebp
inc
mov
repz
mul
flds
jae
add
imul
pop
movsl
ss
filds
and
push
shlb
popf
in
cli
xchg
daa
and
pop
lret
fnstenv
mov
jge
cmpsb
sub
cmp
xchg
dec
cmp
and
adc
test
stc
mov
push
outsl
cmpsl
pop
pop
and
negl
lds
or
adc
cmp
shrb
mov
out
int
pusha
rolb
jne
push
fucomi
adc
or
ret
out
popf
adc
les
dec
push
sbb
fstl
stc
ja
adc
sbb
sbb
inc
push
sbb
xchg
ds
adc
add
dec
leave
mov
jbe
push
pop
xchg
jmp
inc
push
and
cmp
jge
fs
inc
lret
mov
lea
data16
xchg
cmpsb
and
cmp
mov
mov
push
sbb
cmpsl
jne
xor
incl
stos
fdivl
sub
sar
in
cmp
out
jl
imul
rcrl
aad
push
fimuls
dec
scas
hlt
inc
jo
pop
and
and
jl
and
jno
popf
loope
cld
call
xchg
mov
mov
nop
mov
jle
dec
mov
dec
add
mov
sbb
test
xorl
clc
sub
ss
sub
repz
push
xchg
jle
push
and
in
dec
loope
add
add
xor
sbb
icebp
das
cmp
das
popa
popa
jae
decb
add
adc
mov
and
test
add
cltd
and
dec
sbb
dec
pop
or
std
sub
fs
push
sbb
adc
js
and
in
pop
es
mov
clc
rcrl
out
jbe
adc
daa
insl
inc
in
pop
out
mov
xor
cmp
imul
fdivr
mov
popf
stc
pop
ficoms
aas
jp
mov
pop
xlat
lret
pop
fcmovne
divb
mov
or
pop
and
xchg
mov
and
push
jnp
into
jo
jecxz
enter
adc
fistps
sbb
call
scas
dec
jge
and
negl
xchg
pop
sbb
icebp
inc
into
fnstcw
jecxz
ret
fwait
mov
xor
xchg
xchg
ror
out
in
jecxz
xorl
add
push
lea
adc
sub
setno
mov
cltd
push
data16
dec
loope
ret
lret
test
mov
rcrl
rcll
jns
mov
in
jns
enter
jecxz
inc
cltd
daa
pop
fstp
repnz
mov
enter
movsl
shrl
dec
or
dec
and
js
adc
and
xchg
xchg
add
vpmaxsw
pop
jns
lods
cmp
xor
sbb
xor
bound
push
aas
out
jge
push
add
or
dec
and
clc
daa
std
daa
inc
test
jne
arpl
mov
dec
dec
adc
sub
es
lret
xchg
fldenv
sbb
cmp
jmp
scas
lahf
clc
xchg
mov
icebp
jae
xor
sbb
add
cmpsb
jae
sbb
push
jle
push
or
xor
jp
in
jge
pusha
mov
ficomps
nop
data16
cmpsl
imul
outsb
insl
pop
fidivs
out
or
fnsave
inc
stos
mov
jbe
add
mov
fsts
enter
pop
mov
adc
mov
mov
or
xchg
or
lret
or
idivb
mov
jae
fdivrl
das
add
test
addr16
xor
xchg
and
sub
scas
fnstenv
adc
js
add
jnp
pop
testb
lret
jmp
negb
and
gs
adc
or
sbb
add
pop
xlat
xchg
andl
mov
je
push
cmp
or
jmp
mov
fbld
fcmove
movsb
clc
ds
mov
dec
lret
or
jmp
out
sbb
rcll
fdiv
fistps
into
test
aas
adc
pop
xchg
ss
mov
aad
lret
jp
xchg
pop
push
mov
mov
mov
mov
sub
popa
xor
sub
dec
sub
cmpsb
jge
mov
into
lds
pusha
cmp
xchg
jno
jns
nop
loop
jae
clc
sub
pop
sbb
sub
pop
jl
lret
mov
push
xor
mov
out
dec
call
outsl
pop
jp
lds
cmc
out
push
xchg
push
icebp
mov
int3
mov
inc
test
jmp
lret
in
mov
inc
fidivs
addl
ret
dec
add
out
arpl
jle
dec
jne
mov
xor
mov
mov
pushf
sub
testb
push
cld
dec
push
jmp
outsb
bound
iret
imulb
sbb
and
xor
mov
mov
xlat
sub
decb
insl
loopne
leave
mov
mov
stc
jg
mov
jb
outsl
jb
out
push
xchg
aaa
testl
rcrb
add
lods
or
xchg
jnp
jecxz
sub
xor
mov
dec
sub
stos
ss
mov
jl
sub
dec
mov
push
mov
push
adc
out
scas
and
and
mov
js
pop
add
mov
cli
dec
out
lods
aaa
test
ljmp
stos
icebp
or
sbb
pop
adc
fdivs
ljmp
insb
sbb
add
pop
inc
loop
xor
dec
mov
movsl
jno
mov
pushf
lahf
mov
push
or
mov
jp
xchg
es
arpl
data16
loopne
push
or
aaa
je
mov
js
cld
flds
fisubl
lea
loop
sub
push
dec
ja
dec
hlt
push
xor
ljmp
repz
jmp
add
ret
pop
xchg
mov
dec
sbb
ljmp
inc
xchg
iret
mov
out
or
xor
jne
test
pop
mov
xchg
sub
lods
stc
mov
xchg
inc
mov
mov
test
in
cmpsl
pop
adc
test
repnz
dec
sub
mov
inc
pop
outsb
call
pop
inc
popa
fbstp
aaa
xor
out
aaa
clc
dec
mov
sarb
call
icebp
mov
adc
xchg
xchg
cmc
daa
rorl
xchg
imul
and
mul
xchg
lods
mov
push
and
sub
mov
inc
fcompl
stos
popf
sbb
hlt
jg
jecxz
mov
enter
add
bound
inc
fdivrp
xchg
add
and
out
ret
out
jne
xchg
lcall
pop
cld
push
call
and
bound
mov
xchg
xlat
rcrl
out
sti
sbbl
pop
outsl
hlt
xchg
loop
es
or
add
push
jle
mov
jns
cld
pop
mov
inc
test
loope
pop
xchg
push
incb
bound
jae
sbb
mov
mov
jbe
das
call
std
scas
rcrl
push
dec
movsb
shr
lods
push
mov
push
inc
and
jo
dec
rorb
repz
xchg
sub
cmp
outsl
xor
mov
dec
jne
mov
insb
mov
add
xlat
pop
and
sub
sbb
lret
xor
cmp
dec
icebp
pop
cmpsl
xchg
xor
dec
lcall
aaa
pop
aad
inc
sub
inc
cs
and
orb
xor
mov
adc
mov
fisttpl
pusha
mov
or
adc
lcall
pop
or
xchg
shll
cmp
cmpsl
data16
adcl
hlt
or
mov
push
sbb
std
adc
nop
js
xor
scas
inc
test
jb
dec
jecxz
lea
sub
adc
loope
jp
fmull
test
into
cmc
enter
ljmp
adc
in
loope
std
xchg
add
xor
les
add
sti
fsubl
mulb
cmc
pop
or
iret
push
pop
mov
add
push
subl
cmc
data16
aaa
sub
mov
aam
xor
shrb
clc
sarl
out
inc
xchg
sti
xchg
inc
into
imul
adc
and
lds
scas
out
fwait
shlb
test
push
cs
mov
push
pop
out
jmp
add
imul
mov
shrl
push
sti
push
in
push
scas
and
bnd
jl
push
mov
sarl
adc
adc
cld
xorb
out
stos
xor
mov
fmull
push
jl
jp
or
sarl
sbbl
scas
jecxz
movsl
nop
and
xor
sbb
aaa
pop
out
mov
addr16
fwait
sub
js
push
mov
jo
xchg
and
out
out
sub
sub
dec
mov
bound
and
in
out
xchg
rorb
in
jbe
sub
dec
add
popf
outsl
sub
iret
addr16
lea
pop
into
mov
sahf
dec
cwtl
and
sbb
lcall
data16
jns
fs
clc
ret
sub
loopne
decb
lahf
call
mov
fcmovnbe
and
insb
xor
jge
fdivs
cmp
xor
cmp
mov
pop
inc
jnp
aad
scas
cs
data16
loop
jmp
cmc
xchg
cmp
lods
outsb
mov
or
aaa
xchg
pop
lds
arpl
out
cwtl
xor
stos
pop
movsb
popa
adc
flds
inc
mov
dec
sub
stos
pop
xchg
daa
pop
imul
push
jae
mov
lock
mov
sub
into
mov
or
sub
xchg
xchg
mov
gs
test
add
js
popa
sti
jmp
fisubrs
imul
mov
add
fsub
pop
pop
outsl
loopne
pop
gs
xlat
sbb
mov
imul
sub
jo
cmc
popa
out
push
mov
repz
mov
stc
negl
or
in
and
push
mov
enter
cmovno
pop
ror
inc
jecxz
mov
sti
cmp
add
push
xchg
push
sbb
pop
cmpsl
std
mov
pop
fmull
imul
mov
adc
sub
lods
mov
push
cmp
dec
addr16
lods
nop
arpl
imul
fisttpll
ret
adc
sti
sub
sub
push
jge
inc
pop
mov
loop
mov
mov
mov
jbe
mov
inc
push
xchg
jecxz
leave
nop
addr16
ja
pushf
int3
mov
push
les
sub
sbb
outsl
or
and
cs
push
stos
sub
jnp
mov
inc
arpl
lods
sbb
xor
je
arpl
push
adc
cmp
daa
inc
ja
jmp
nop
push
es
mov
loope
mov
push
je
adc
sarl
scas
in
fistps
jae
xchg
mov
bound
popa
outsl
push
out
xor
jmp
outsb
loopne
or
jbe
xchg
movb
add
and
sbb
pop
mov
cmpl
cmpsl
loope
or
mov
jle
clc
dec
add
cltd
scas
pop
rep
pop
jb
sub
jbe
dec
cmp
lea
inc
je
add
add
scas
fnclex
xchg
mov
push
cmpsb
adc
aad
sub
xchg
and
insl
outsb
adc
test
cmp
push
cmc
bound
push
sbb
divb
out
push
jo
insl
jge
sbb
sbb
sarl
js
int3
push
int3
iret
in
push
xchg
das
sub
dec
aad
out
or
in
sbb
or
and
icebp
lret
add
lds
ds
nop
mov
scas
ret
mov
push
inc
mov
or
mov
mov
add
pop
popf
imul
mov
jo
jo
insl
or
mov
into
jle
movsl
repz
insb
pop
inc
hlt
stos
fcmovu
dec
or
out
mov
mov
lcall
lcall
jg
shlb
insl
cmp
stc
mov
aad
pop
mov
mov
nop
sbb
adc
dec
sub
jae
into
xor
or
inc
push
leave
loop
mov
stc
and
subl
mov
mov
fnstcw
sbb
xchg
jbe
arpl
scas
decb
jb,pn
into
repz
ret
movsl
mov
les
fadds
sbb
data16
mov
enter
add
jbe
cmp
push
and
loop
daa
pop
push
mov
jo
sub
push
and
add
bound
inc
xchg
pusha
lea
hlt
and
push
fdivrl
xchg
push
push
in
in
adc
dec
push
test
mov
or
loope
jo
push
adc
imul
aam
pop
aaa
mov
outsb
add
jo
push
jecxz
stc
xchg
in
in
stos
xchg
ret
orl
inc
sbb
push
rorb
xchg
pop
add
pop
cld
xchg
xchg
out
mov
rorl
imul
or
lds
mov
notb
sub
test
lock
jo
inc
push
in
xchg
sti
add
imul
adc
or
push
adc
outsb
adc
push
push
into
or
xchg
and
in
rol
inc
jl
outsl
xchg
outsb
rorl
xchg
xchg
xchg
int3
das
dec
in
mov
mov
ja
jae
add
je
outsb
mov
mov
fbld
xchg
in
jle
pop
scas
jmp
repz
sub
xchg
hlt
mov
mov
sti
fnsave
cmp
adc
mov
xchg
inc
jle
mov
out
xchg
cwtl
mov
mov
mov
test
lods
xor
movsl
jo
pop
sti
jbe
leave
sub
pop
adc
jp
push
push
cld
cwtl
jb
lods
arpl
inc
sub
inc
outsl
sub
movsl
xor
cmc
addb
push
lock
push
add
loope
dec
es
dec
lea
lret
rcrl
jne
lcall
push
pushf
test
mov
fistpl
push
shrb
cmpb
lret
call
add
and
lds
sbb
sbb
in
xor
sti
mov
mov
imul
adc
add
push
shrb
div
pop
jg
ret
out
ret
cmp
aas
jb
repnz
inc
add
sbb
popa
add
mov
outsl
mov
sbb
rorb
fsubrs
fisubrl
xchg
out
jecxz
push
sbb
cltd
js
or
sti
mov
pop
pop
mov
mov
pop
idivb
loope
add
inc
clc
es
xchg
pop
jno
mov
mov
mov
sahf
movsb
xor
push
sub
sbb
aad
imul
cmp
sbb
dec
jbe
ret
out
xchg
psubusb
or
ror
cwtl
mov
clc
jg
mov
ja
jae
sub
dec
in
xor
cmpsl
cmp
xor
pop
cmp
pop
cmc
fwait
in
mov
jo
mov
jle
popa
dec
adc
add
xor
imul
pop
or
gs
xor
in
mov
mov
enter
mov
lret
mov
in
int
outsl
out
filds
rcll
push
mov
xlat
cmp
xchg
fdiv
mov
lcall
rolb
adc
xchg
iret
jecxz
sub
sbb
jp
popa
mov
loopne
int3
pop
cmp
stos
jns
pop
popa
mov
add
xorb
test
ret
cmp
dec
add
dec
jno
mov
push
sbb
dec
cmpl
inc
mov
dec
xchg
movsl
sbb
test
fmull
movsb
xchg
lods
mov
test
in
jo
add
popf
arpl
scas
fs
iret
sarl
fisubrs
test
out
lahf
outsb
dec
in
in
and
nopl
sbb
scas
mov
test
inc
cli
adc
push
sbb
fsubl
addr16
ficompl
int
cmp
add
add
and
jno
pushf
xchg
push
mov
jb
and
gs
xchg
rolb
repnz
xchg
cli
jne
imul
mov
stos
addr16
stos
pop
das
cmc
mov
adc
popf
pop
xor
inc
js
subb
popa
xor
xor
test
xchg
int
mov
lahf
fstl
subb
aaa
sti
inc
bound
bound
push
sbb
fwait
push
ds
dec
xor
and
enter
clc
or
push
cmc
outsl
ret
and
sbb
push
mov
loop
add
mov
xchg
imul
jge
into
repnz
or
sub
adc
inc
stos
in
jmp
divb
je
je
inc
jns
lock
movsl
js
test
repz
in
cld
xchg
rcrl
outsl
and
or
std
lret
or
sbb
adc
xchg
cltd
das
iret
ficomps
inc
lods
and
dec
and
ss
pop
and
xor
or
jl
addl
imul
xor
add
lret
test
outsb
icebp
xor
bound
adc
stos
push
sti
aas
pop
repnz
popf
jmp
push
dec
cmp
insl
mov
cmp
push
test
test
inc
cmp
adc
push
stos
fs
jmp
loope
pop
lds
xor
cld
stos
or
add
push
in
ljmp
ficoml
pop
je
jmp
int3
in
clc
in
int
fwait
sti
jae
jns
xchg
or
adc
in
xchg
inc
cld
mov
adc
ficomps
mov
cli
cmp
adc
leave
adc
jg
sarb
imul
and
xchg
stos
mov
imul
nop
inc
sub
cld
data16
xor
enter
data16
or
fwait
adc
out
jns
fdivl
andl
fsub
pop
mov
imul
sub
imul
xlat
in
jl
lret
fcompl
add
jne
pop
enter
xor
pop
lds
mov
inc
mov
jp
inc
dec
pop
inc
mov
aad
lret
loopne
imul
mov
dec
mov
out
aam
or
std
sbb
jne
inc
cmc
dec
jb
or
decl
or
adc
push
je
mov
mov
jb
jle
xor
aam
decb
pop
push
xor
push
and
xchg
test
cwtl
push
add
mov
fstl
shll
xlat
mov
pushf
lods
sub
xchg
fs
stos
adc
mov
pop
and
add
adc
and
xor
pusha
xchg
scas
inc
pop
sbb
aaa
je
xchg
mov
jle
add
insl
dec
jno
out
shrb
pop
xchg
push
in
movsb
add
sbb
dec
jmp
xchg
cmpsb
pushf
cltd
mov
scas
and
mov
loope
das
mov
hlt
mul
sarl
lret
or
pop
mov
inc
js
fwait
test
mov
cmc
mov
xor
outsb
mov
push
fcoms
add
lahf
sti
lahf
std
mov
pop
fisubl
ja
cmp
jns
stc
aam
lcall
fstps
push
aas
imul
lock
leave
neg
jp
mov
xor
adc
lret
ss
scas
sub
repz
xlat
out
ret
loop
je
movsl
dec
in
push
cmp
aas
sti
inc
test
pop
loopne
lock
pop
and
inc
pop
out
adc
or
inc
dec
push
jne
pop
inc
fwait
int
or
mov
rol
sub
popf
pusha
add
inc
fistl
mov
xchg
xor
sub
push
mov
enter
nop
add
out
rol
inc
and
mov
lock
fstl
lea
mov
pop
mov
fcomps
cwtl
jecxz
in
int3
stc
push
mov
in
cmpsl
mov
andl
mov
push
or
mov
xchg
push
jmp
sub
xor
pop
pop
fistl
test
push
sub
test
pop
push
mov
push
xchg
jnp
xor
popa
mov
dec
add
mov
sub
sbb
push
test
lahf
movsb
fstpt
decl
push
inc
sbb
sub
adc
inc
sbbb
push
test
fwait
pop
push
sub
cmpsl
inc
sbb
jns
repnz
mov
gs
fcom
cmpsl
lea
fistl
jl
gs
push
aaa
lcall
jnp
or
ss
ret
test
icebp
pop
pop
outsl
je
dec
paddd
xchg
xor
iret
push
jg
fstpl
outsb
shll
std
push
xlat
ret
mov
jb
inc
mov
nop
sar
je
mov
pop
push
popf
pop
test
add
push
push
mov
sti
jl
loopne
lods
insl
mov
xchg
sub
or
cmp
loopne
mov
xchg
push
out
scas
push
push
mov
add
paddq
xchg
stc
xor
cmpsl
ja
sub
mov
gs
adcl
enter
pop
add
sub
jo
cmpsl
addr16
lcall
scas
add
sub
iret
pop
test
lds
divl
imull
adc
dec
jge
ss
jnp
cwtl
add
xlat
shrb
shrl
jb
sbb
dec
clc
push
aaa
push
inc
loope
and
test
pop
mov
xchg
mov
xor
xchg
lock
fwait
lret
push
lds
fs
sub
pop
pop
out
sbb
inc
xor
push
addr16
sub
dec
outsl
imul
in
aad
pop
stos
mov
mov
cmpsl
clc
adc
and
cmp
outsl
loopne
or
rcrb
mov
cmp
inc
in
push
repnz
cmp
mov
adc
out
lcall
in
add
xchg
test
sub
xchg
adc
mov
aad
fs
sub
ret
pop
nop
xor
cmp
cmp
mov
or
je
jae
lods
nop
sbb
xlat
push
or
leave
dec
dec
mov
pop
aaa
mov
sub
in
inc
ds
adc
scas
adc
mov
mov
inc
inc
mov
inc
cmp
adc
mov
or
roll
negb
and
pushf
mov
dec
and
xchg
insl
inc
testl
jnp
pop
mov
xchg
gs
dec
loop
inc
xlat
jne
xchg
test
pop
je
stc
iret
jl
fistps
movsb
sbb
sbb
mov
es
rorb
lods
sub
inc
pop
repz
sahf
pop
and
push
aam
loop
add
cmp
cmp
inc
rcrb
cli
pop
fcmovbe
pop
sub
sub
test
or
dec
das
or
movsb
inc
jge
ds
add
and
cs
lret
adc
test
add
data16
mov
or
lcall
mov
jbe
pop
fwait
xchg
add
lock
push
lods
jae
jge
ror
stos
or
pop
dec
jl
jecxz
xorl
push
or
xor
shlb
mov
out
enter
out
mov
add
xor
push
call
or
testb
inc
add
dec
imul
inc
dec
push
repz
popa
aam
adc
cltd
test
mov
jno
push
xchg
ficoms
push
pop
fstl
call
jmp
mov
pop
cld
fdivrp
scas
pop
ja
xchg
xlat
xor
fimull
push
movsl
fmull
mov
inc
addr16
inc
jle
je
jae
fnsave
inc
cwtl
or
cs
imul
incb
jg
adc
push
seta
mov
movsl
lods
lret
dec
lds
pop
xlat
fists
mov
loop
xor
jge
xlat
es
xchg
das
pushf
pusha
jg
shll
ja
das
or
mov
scas
jb
push
cmpsl
xchg
bound
imul
movsb
mov
and
pop
sub
or
mov
push
add
push
mov
jb
and
add
sub
ljmp
out
cs
sub
inc
adc
paddusb
dec
mov
data16
cmc
or
xor
jg
dec
lock
stos
pop
cmpsb
fimuls
sub
popf
rorl
in
xchg
jecxz
mov
ljmp
aas
mov
ficoms
mov
test
pop
sbb
sub
std
pop
xchg
jle
cld
push
stos
decl
jns
or
pop
fdivr
pusha
jge
add
add
cmpsb
sub
dec
mov
leave
mov
leave
inc
es
bound
pop
push
fsubp
jb
daa
push
xor
dec
cvttss2si
push
mov
push
outsb
adc
and
bound
mov
adc
cld
jae
ficomps
cwtl
icebp
cmc
pop
lret
jnp
xor
test
xchg
lods
gs
sbb
cmpsb
xor
mov
ret
movsb
imul
sti
push
push
or
and
ror
jp
pusha
adc
jae
sbb
push
pop
xchg
dec
adc
cmp
mov
cmp
inc
or
rclb
dec
cmp
sub
mov
mov
lods
popw
repz
ljmp
sbb
mov
lods
add
dec
xchg
inc
add
mov
inc
flds
enter
shlb
cmp
mov
or
mov
popf
xor
fimull
mov
ja
mov
sarl
or
fwait
mov
and
cld
inc
outsb
jl
pop
xchg
fcomps
cld
roll
out
loopne
pop
dec
dec
add
add
adc
adc
xor
cli
xchg
and
push
lds
in
in
lahf
cmp
std
mov
mov
inc
loop
and
dec
fwait
xorl
xorb
in
sub
lret
das
test
jnp
push
daa
jae
es
mov
jp
pop
faddp
test
push
adc
je
jg
test
adc
push
gs
stos
inc
test
popf
loop
sbbb
xchg
push
mov
push
mov
insl
jns
mov
adc
xchg
cmc
fisttpll
jb
adc
or
cmpl
jg
dec
nop
jnp
gs
push
sub
iret
xor
clc
hlt
sub
iret
jp
lcall
iret
dec
pop
cmp
push
aam
fimuls
clc
push
xor
scas
movsl
jg
xchg
int3
push
mov
andb
lds
sub
decl
iret
sbb
dec
clc
and
mov
mov
mov
adc
inc
clc
and
mov
test
cmpsb
das
or
scas
lock
icebp
ret
repz
insb
lcall
iret
sub
sahf
outsb
xchg
adc
jo
xor
mov
jge
cmpsb
dec
jns
adc
leave
negb
xor
xor
lds
add
sahf
mov
inc
mov
inc
xchg
sbb
shr
mov
imul
push
sbb
mov
and
and
jns
mov
in
ja
outsl
repnz
scas
dec
hlt
pop
stc
xor
adc
cwtl
lods
jns
push
call
notl
xchg
loopne
dec
fcoms
call
hlt
fmul
daa
loop
mov
cmp
mov
push
fwait
pop
cltd
dec
pop
in
shll
add
inc
mov
add
out
mov
cwtl
jae
or
sbb
repnz
add
enter
std
and
std
in
in
test
push
push
std
enter
lods
mov
mov
pop
jns
jge
mov
orb
cmp
mov
dec
daa
stos
mov
inc
inc
test
je
icebp
cmp
insl
xchg
cmp
jno
test
test
xchg
sbb
ficomps
arpl
xorl
and
popf
and
enter
imul
iret
dec
lds
mov
mov
mov
test
xchg
in
fs
push
sub
mov
out
pop
ss
loop
jae
xchg
adc
imul
adc
lea
inc
loope
mov
or
sarl
push
cld
stc
repz
dec
insl
rorl
hlt
lods
sbb
js
icebp
nop
pop
cmp
imul
popa
cld
xchg
pop
pop
jno
mov
clts
or
lods
flds
test
fdivr
out
mov
pop
mov
pop
or
mov
push
adc
push
add
add
inc
sub
pop
pop
cmp
movsb
sub
in
inc
jge
ficoml
mov
das
mov
arpl
lcall
xchg
add
xchg
and
fldl2e
pop
subb
pop
or
into
inc
bound
lock
inc
outsl
ljmp
scas
push
hlt
lret
push
mov
mov
cmp
xchg
mov
shr
mov
dec
out
nop
test
call
push
out
jne
jne
push
cmp
sub
jge
or
out
orl
inc
dec
lahf
mov
jg
shll
jl
lods
lods
fsubs
mov
xor
xchg
test
cmp
jne
pop
add
dec
or
iret
pusha
jecxz
add
stos
and
mov
mov
inc
int
lret
mov
ja
lahf
cmp
cmp
scas
aas
sbb
jb
cmc
roll
mov
mov
sbbl
dec
in
outsl
inc
adc
std
sbb
adc
xor
and
testb
or
sti
mov
or
add
mov
leave
test
cmp
jno
test
sbb
outsb
jns
inc
jno
cmp
mov
add
std
call
dec
mov
dec
pop
loop
jne
or
pop
inc
push
fidivs
pop
lcall
adcb
rcrl
cltd
xchg
adc
xchg
hlt
js
push
cltd
mov
push
cmp
inc
loop
xor
dec
aas
lahf
push
mov
mov
into
test
into
push
in
xor
imul
aam
mov
pop
mov
mov
imul
mov
ss
loop
mov
lret
shl
mov
push
adc
lea
mov
dec
movsb
add
shrl
add
imul
out
and
insb
insl
nop
lods
push
xchg
stos
xor
add
xchg
xchg
cld
inc
pop
adc
adc
outsl
test
ds
xor
mov
jmp
pop
inc
stos
loop
sub
insb
rclb
je
mov
and
add
in
xor
adc
cmp
mul
cmp
shll
js
into
aad
sub
test
xlat
fimuls
and
std
push
loope
div
stc
pop
repz
or
push
push
adc
mulb
mov
imul
xor
inc
sub
mov
mov
jle
mov
cmpsl
aad
push
cmp
test
xor
outsl
mov
andps
in
cmp
inc
jns
lock
inc
push
xor
xchg
sub
mov
mov
idivl
out
iret
cmpsl
adc
mov
mov
pop
jecxz
push
add
pop
repnz
pop
adc
cltd
imul
or
in
pushf
daa
mov
bound
imul
test
cmp
clc
out
cltd
jo
shll
lret
data16
stos
inc
orl
insb
aaa
cwtl
mov
je
add
lahf
in
insl
int
stc
test
xor
cmpsl
inc
dec
xchg
imul
inc
dec
push
mov
loop
loop
stos
xchg
push
out
adc
sahf
or
cmp
das
icebp
sub
or
sub
in
inc
scas
mov
adcl
inc
movsb
sub
scas
xor
in
push
flds
mov
and
or
xchg
popa
dec
rcrb
adc
bound
lret
pop
in
scas
cmpsb
sub
aaa
or
jns
pop
xchg
mov
sub
fwait
in
adc
stos
mov
sub
pop
and
enter
shrb
and
in
arpl
jle
outsl
call
sti
js
xchg
ds
lods
or
clc
leave
sub
mov
lret
repz
jnp
movsl
les
mov
mov
cmp
rcrb
stos
xor
stc
je
fisttpll
jo
faddl
fildll
inc
mov
push
push
cmpsl
jo
addr16
dec
xor
pop
ret
bound
xor
pop
fisttpll
aam
jnp
pop
pop
nop
push
dec
sub
cmp
int
pop
sub
in
add
sub
jle
mov
loop
push
std
xchg
cmpsl
jo
xor
wrmsr
push
mov
jae
sbb
inc
xor
add
mov
sub
test
xchg
out
sbb
inc
lods
ljmp
je
push
xor
pusha
add
xchg
jb
and
push
adc
jp
inc
cmp
in
xchg
insl
mov
mov
sbb
mov
or
mov
push
jbe
loop
cmc
push
lock
adc
xchg
addb
std
and
cmp
lret
sbb
data16
cmp
adc
sti
stos
jp
das
mov
cld
cmp
aad
mov
pop
mov
mov
int3
scas
in
add
movsl
in
mov
jo
pusha
dec
push
mov
xor
jo
mov
mov
insb
jnp
sub
or
sub
pushf
pusha
lret
xor
or
call
sub
test
or
popa
cwtl
mov
in
js
mov
insl
int3
dec
cltd
xchg
or
je
ficoms
pusha
adc
dec
add
lock
in
and
sti
jl
lcall
mov
pop
scas
xor
test
ja
push
in
ja
jbe
push
jae
stc
jp
jno
test
or
lds
xchg
jns
bound
ljmp
aam
dec
xchg
lods
pop
or
pop
test
gs
je
clc
cmpb
ss
in
pop
sti
and
int
cmp
push
inc
arpl
push
jo
jae
lods
js
cmpsb
imul
xchg
or
xchg
sbb
and
sti
addl
push
gs
xchg
and
sub
stos
pop
fidivrs
xor
bound
add
jno
jne
xor
fisubrs
ljmp
insb
movsl
jecxz
nop
pop
xchg
lcall
loopne
and
pop
sub
dec
ret
mov
xor
fs
sbb
lock
or
cmp
mov
dec
lret
mov
cmp
xor
js
movsb
iret
cmp
loop
dec
into
cmpsb
fwait
mov
testb
test
stos
mov
data16
enter
cltd
iret
ret
push
stc
mov
mulb
clc
mov
mov
movsb
sub
pop
leave
xchg
push
jge
cmc
hlt
ja
adc
sbb
pop
add
testb
or
mov
bound
cltd
lds
loopne
mov
mov
mov
lods
push
push
cmpl
adc
popf
or
lock
pushf
insl
enter
adc
cld
lret
or
fsubrl
lock
cmp
dec
ja
clc
inc
xchg
and
xchg
cld
out
fistpl
xchg
das
or
or
mul
jge
xor
out
pusha
dec
jo
push
popa
cmp
xor
dec
mov
nop
pop
aas
fisttpl
inc
cwtl
sbb
jns
lds
xchg
cmc
sti
ds
gs
sahf
xlat
add
imul
aaa
leave
loopne
mov
xor
mov
in
inc
inc
push
scas
out
shrb
inc
pop
jae
mov
lea
xor
pop
lods
cld
xlat
or
adc
pop
ret
adc
mov
push
scas
fadd
negb
jae
sbb
mov
cwtl
adc
scas
mov
dec
xor
mov
inc
pop
sahf
push
mov
jecxz
int
aad
data16
mov
push
pop
insl
idiv
mov
ljmp
pop
mov
sub
add
stos
mov
dec
das
test
lret
sbbb
add
aaa
nop
mov
test
test
movsb
pop
in
pusha
jmp
aad
cmp
les
cli
imul
mov
mov
cmp
imul
cld
aaa
dec
ret
les
jecxz,pt
bound
scas
adc
push
std
aam
aaa
imul
sti
rcll
dec
fidivs
int
clc
into
xor
inc
xchg
lret
sub
in
sarl
jb
adc
cmp
aas
fwait
pop
cmp
sbb
inc
jnp
pop
in
sub
test
int
mov
mov
mov
xor
add
sub
sbb
stc
sti
sub
pop
push
popa
and
push
dec
cld
jmp
roll
add
add
repz
addr16
pop
and
clc
push
hlt
fucomi
mov
mov
mov
loope
fwait
jp
test
pop
mov
popa
pop
jns
and
pop
js
dec
adc
fisttps
push
jg
xchg
lds
or
mulps
cmc
jge
pop
jp
mov
imul
inc
lds
pop
xor
popa
jbe
aad
clc
addr16
dec
add
and
dec
cld
test
imul
fldenv
ljmp
sbb
insl
or
aas
sbb
add
mov
jg
inc
aas
movsl
jl
and
rcl
out
jne
cli
clc
dec
loope
push
loop
xor
add
std
xor
clc
out
jmp
daa
in
xchg
scas
mov
push
out
std
push
out
xchg
sub
in
dec
adc
andb
adc
mov
movsl
ret
jl
and
push
shll
hlt
and
mov
jecxz
mov
xchg
mov
loop
mov
fcompl
icebp
imul
cmpb
push
ss
mov
je
mov
mov
pop
cwtl
xor
xchg
lock
pop
adcl
lds
cmpsl
or
jge
out
stos
mov
mov
dec
andb
dec
dec
lcall
fimuls
mov
es
movsb
mov
jne
push
xchg
pop
sarl
subl
fisubl
pop
test
nop
cmp
pop
mov
mov
add
movsl
gs
orb
fldt
daa
push
loope
idivb
xchg
add
sub
push
xchg
into
cltd
mov
divb
call
pusha
outsl
sub
push
xor
int
ficoml
stos
insl
dec
lcall
push
jnp
inc
repz
add
movsl
scas
sub
pushf
lds
inc
push
popf
ja
adc
pop
mov
int3
in
mov
mov
fs
lahf
jmp
cmp
mov
shll
mov
inc
push
movsb
sub
or
stc
or
xor
psubw
test
sbb
inc
repz
and
push
movsl
mov
and
xchg
pop
xor
testl
fstl
mov
sbb
mov
fcmovu
mov
int3
lcall
lret
icebp
ds
andl
lret
loop
popf
aam
xchg
sub
push
lahf
imul
popf
mov
pop
cmp
mov
mov
push
mov
cmpsb
loop
es
lret
mov
dec
imul
cmpsl
jnp
lock
jl
jl
mov
push
inc
in
popf
cmp
pop
xchg
lahf
int3
les
mov
lea
push
add
testb
repnz
pop
xchg
jl
fildll
sbb
mov
sbb
and
mov
mov
pop
das
addr16
mov
pop
cmp
out
repz
mov
pushl
jle
inc
fwait
add
cmp
xor
jmp
roll
test
stos
jecxz
out
out
movsl
popl
roll
stos
js
stos
mov
push
out
imul
stos
dec
adc
fstpt
dec
push
xchg
cmp
call
mov
jne
mov
jne
out
xlat
mov
imul
test
aad
shr
sbb
push
aam
lock
sub
inc
popa
dec
repz
ljmp
in
test
in
xchg
ds
inc
dec
pushf
pusha
insl
inc
adc
nop
inc
xchg
sub
test
out
aad
pop
loop
rcll
cmpsb
adc
xor
add
inc
es
mov
test
dec
inc
rcrl
movsl
shll
scas
dec
push
out
outsl
mov
stc
icebp
xorl
inc
jecxz
scas
pop
decb
xchg
movsl
dec
add
js
pop
jmp
and
inc
fsubs
inc
jl
cmp
sub
adc
and
mov
push
inc
movsb
add
enter
sahf
lds
or
rcrb
adc
xchg
lods
jg
mov
push
lods
xor
jnp
icebp
xchg
lret
add
je
sbb
push
cmpsl
int
jb
push
sahf
push
leave
mov
rcrl
aas
sub
jle
clc
jge
cmc
out
mov
cwtl
dec
xchg
mov
fisubrs
mov
imul
out
das
adc
and
lods
das
and
inc
stc
cmp
cmpsl
aam
add
bound
shl
dec
adc
idiv
adc
pop
adc
fimuls
mov
ja
cwtl
mov
jp
outsb
pushf
cmpl
and
add
outsb
sbb
bnd
rcll
cmpl
stos
and
xor
dec
pop
sub
pushl
out
sti
arpl
loope
fisubl
inc
cmp
adc
cltd
inc
in
sub
or
xor
mov
jns
pop
sub
push
repz
or
push
dec
mov
fcomip
and
and
rcr
push
and
ret
popa
xor
and
ljmp
push
adc
and
inc
jecxz
pop
jp
xor
xchg
inc
shlb
ljmp
pop
mov
xchg
push
jmp
mov
insb
gs
push
inc
cmp
xchg
daa
lea
sbb
xor
pop
xor
mov
or
push
add
test
shll
adc
xor
jg
and
push
mov
data16
bound
pop
inc
push
call
nop
das
mov
xlat
repz
xor
daa
xchg
std
pop
lret
and
jnp
rep
cmp
push
cli
xor
mov
jg
ss
mov
enter
mov
jmp
sub
mov
loope
cmp
enter
inc
outsb
ret
test
sahf
shrl
leave
push
cmp
ret
add
xchg
out
cld
nop
xor
lods
jo
sbb
sub
dec
jno
cmp
mov
jmp
popa
hlt
aas
mov
enter
lock
xchg
sub
xchg
push
xchg
push
and
sbb
inc
fnstenv
call
in
popa
mov
mov
cmc
mov
cmp
vdivpd
sahf
xchg
sbb
mov
mov
push
mov
outsb
jmp
dec
cli
ja
add
or
jno
jnp
inc
mov
popf
mov
faddl
xor
pop
mov
daa
push
mov
mov
and
pop
and
pop
push
pop
xor
add
movsl
pop
and
mov
in
stos
lock
mov
jg
mov
jns
cbtw
sbb
jg
out
inc
test
into
movsl
dec
adc
xchg
and
ljmp
repnz
xor
xchg
cs
mov
add
or
sub
mov
mov
dec
dec
push
add
jl
call
adc
mov
ljmp
add
jmp
lahf
adc
sti
imul
cld
push
fwait
jp
push
repnz
cs
outsl
mov
arpl
sub
push
and
cmc
sti
ja
sbb
dec
add
jg
arpl
fisubs
insb
add
pop
cmp
movsb
push
mov
ss
and
dec
loop
push
lcall
imul
push
test
les
je
sar
jb
or
repz
jle
fadd
lods
adc
xchg
adc
sbb
and
push
push
sbb
sub
dec
cmp
mov
dec
pand
out
fists
inc
jbe
mov
inc
loop
mov
in
xchg
and
dec
mov
aas
sub
mov
inc
leave
icebp
dec
punpckhbw
rcr
jl
movsb
mov
pusha
int
mov
scas
rorb
pop
sub
inc
pusha
enter
and
cmp
in
sbbb
dec
pop
movsl
mov
in
addr16
arpl
mov
sub
lods
inc
les
insb
and
jecxz
adc
addr16
scas
lods
std
sub
cmpb
in
testb
jns
outsb
mov
mov
repnz
push
movsl
loop
xchg
ss
movsb
inc
jmp
adc
pop
mov
dec
xor
cltd
pop
push
popf
repnz
jmp
in
push
adc
add
rorb
or
dec
loope
in
sar
dec
pop
test
xchg
inc
std
mov
adcb
xor
ja
lods
je
in
repnz
sbb
lcall
add
mov
push
int3
fcmovnbe
fwait
add
push
push
mov
shrb
sbb
pop
push
adcl
xor
imul
mov
push
test
mov
push
mov
fimuls
xlat
insb
inc
das
adc
xchg
inc
inc
mov
sub
fwait
dec
ds
ds
call
mov
sarb
cli
or
mov
pop
sbb
jnp
test
or
xchg
cmp
fbstp
rolb
call
sub
jmp
add
push
dec
xchg
fidivs
fiadds
jns
ret
call
arpl
sbb
push
mov
mov
cmp
stos
scas
inc
sbb
cmpb
lcall
popf
loope
adc
shlb
mov
mov
xor
out
clc
cmp
movsl
int3
cmp
in
scas
pop
push
jmp
or
jae
fs
loopne
or
pop
je
mov
pop
dec
cmp
and
dec
je
xchg
xchg
bound
inc
sbb
inc
jmp
mov
jae
push
push
inc
jmp
mov
enter
lds
test
inc
cmp
loope
jecxz
or
mov
repz
push
das
xor
mov
shl
decl
xchg
cmp
sbb
es
rclb
xor
or
jmp
jge
enter
xor
xor
mov
jne
fs
and
sbb
or
test
mov
add
mov
cltd
dec
mov
jl
into
jmp
jl
mov
xchg
icebp
jbe
lret
fcoml
out
lret
call
fldt
push
hlt
inc
jle
jg
leave
adcl
mov
inc
jp
test
fisubs
je
adc
outsb
cs
data16
adc
lods
shlb
data16
movsb
add
xor
jecxz
dec
pusha
js
lahf
dec
movsl
mov
sbb
adc
dec
cmp
inc
hlt
mov
aad
shrl
outsb
or
inc
pop
mov
ret
inc
stos
outsb
out
add
jecxz
jnp
sbb
ror
add
sarb
xor
ja
les
mov
xlat
mov
or
data16
cwtl
push
or
or
inc
mov
out
xor
cli
mov
adcl
fwait
mov
cltd
dec
sbb
negb
addr16
fmul
mov
pop
stc
iret
ljmp
push
lods
dec
xor
lods
das
dec
ret
sbb
sbb
inc
cmp
sbb
mov
je
jmp
fbstp
ficoms
aas
test
hlt
mov
xchg
adc
and
not
xor
aad
clc
inc
xchg
iret
int
sbb
adc
push
movsb
inc
mov
push
mov
mulb
imull
popf
jne
xor
outsb
cmp
das
pop
sti
nop
adc
sub
xor
scas
addl
xchg
sub
mov
repz
ljmp
mov
stc
cmc
fs
or
imul
inc
lret
bnd
adc
lock
push
or
or
outsb
das
push
mov
adc
sub
push
mov
jb
jecxz
in
mov
jns
push
dec
je
sub
stos
xchg
int3
push
andl
outsb
mov
push
and
ljmp
xor
pop
call
nop
jne
jp
jns
xchg
addr16
or
adc
sub
push
or
sbb
mulb
addr16
push
mov
jno
jns
je
scas
mov
arpl
gs
push
jne
enter
xor
pusha
add
stos
out
mov
int3
jge
cmc
jae
lds
repnz
pushf
inc
sbb
or
sti
pop
sbb
icebp
mov
adc
and
adc
arpl
jb
adc
pop
pop
ljmp
testl
das
in
mov
leave
pop
fimull
movsl
sub
pop
aas
xor
adc
bound
jg
push
test
pop
and
es
cmp
cmp
mov
or
xchg
add
les
sub
mov
popa
mov
in
mov
lret
lods
es
cmp
shll
fidivrl
imulw
clc
jl
aas
mov
sub
xor
andb
sti
fldl2e
xchg
insb
mov
fbstp
or
pop
sti
lret
daa
movsb
jg
cwtl
mov
jne
push
aam
mov
scas
sub
push
adc
std
imul
pop
add
push
adc
sub
hlt
arpl
mov
out
lods
and
dec
xchg
rcr
sub
sub
out
out
imul
inc
jp
cmp
out
mov
shll
dec
fsubr
cld
xor
adc
shl
push
dec
int
jl
sub
loopne
mov
mov
sub
pop
ret
leave
add
test
iret
push
jae
fisubs
cli
inc
std
jns
adc
jae
insl
jmp
push
cmpsb
jae
or
pop
mov
push
test
or
ja
out
fcmovu
dec
push
jg
jle
dec
outsl
mov
arpl
sti
not
lret
mov
cmp
or
fcoms
call
add
leave
mov
shl
mov
pop
mov
data16
mov
adc
mov
out
sbb
fiaddl
add
sahf
pop
jno
jb
lods
cmc
imul
mov
mov
sbb
cli
loopne
scas
mov
adc
das
jl
inc
imul
xchg
mov
fnstsw
xchg
insl
scas
xchg
insb
xchg
mov
rorl
pusha
mov
fs
es
sub
xchg
push
mov
fwait
or
or
sbb
repz
or
and
call
pop
jb
cmp
cld
cmp
popf
loope
bound
ds
push
sub
push
cmp
ret
mov
jb
lahf
fstl
aam
and
lcall
sub
in
pop
mov
bound
lret
ret
push
cmp
xor
push
js
aaa
add
dec
and
xchg
js
sbb
jle
push
or
pop
xor
xchg
arpl
cmp
sub
push
jo
popa
sbb
ds
fnstcw
xchg
in
out
xchg
mov
dec
aad
jg
jge
push
rcrb
popf
out
js
or
loope
dec
jns
sbb
mov
push
push
xor
jp
inc
adc
mov
add
mov
clc
sub
dec
test
insl
les
xor
addl
rorl
ret
sarl
jmp
dec
aaa
inc
pop
into
enter
xor
lea
test
sub
pop
lods
in
or
mov
cmp
push
rol
mov
lods
data16
xchg
dec
aad
and
out
nop
out
and
mov
pop
scas
lods
fnstenv
cmp
pop
pop
test
sub
loopne
sub
xor
cmp
pop
mov
adc
subb
mov
pop
les
xchg
scas
sahf
mov
ficoms
es
clc
cld
ss
jnp
loopne
inc
cwtl
outsl
je
cmp
loopne
cmp
aad
add
xchg
dec
rorl
xor
mov
filds
mov
daa
mov
push
jae
or
stos
gs
mov
pop
leave
test
movsl
es
lods
pop
jbe
dec
gs
inc
pop
sbb
out
in
flds
jae
cltd
pop
mov
leave
pop
dec
xchg
sti
fnstcw
js
lods
xchg
xchg
out
test
sbb
sbb
xor
fwait
add
hlt
mov
cld
sub
push
jae
orl
mov
adc
xor
hlt
and
push
sti
dec
xor
inc
sarl
dec
ret
icebp
stos
and
inc
aaa
fwait
test
daa
int
nop
pop
mov
pop
xlat
cmpsb
es
shl
mov
pop
adc
addr16
cld
popf
out
ljmp
fdivr
ret
cltd
ljmp
and
pusha
dec
mov
add
in
cmpsl
mov
add
sub
xchg
pop
mov
cs
stos
lods
ljmp
loop
pusha
pop
xchg
mov
add
movsl
xchg
mov
push
int3
pop
sbbb
adc
mov
cltd
les
jnp
or
mov
mov
inc
out
cmc
push
clc
xchg
inc
scas
or
pop
push
and
roll
jmp
ds
loope
jle
pop
mov
jb
mov
fdivl
loope
jae
pushf
or
xchg
in
cmp
and
sbb
mov
ret
shrl
mov
dec
das
fisttps
mov
jae
add
or
mov
inc
jp
sbb
pop
xchg
push
push
dec
sub
sahf
into
jecxz
mov
repz
les
fldenv
mov
fbld
jae
sub
push
xor
lods
ljmp
push
jae
loopne
or
fbstp
mov
push
cmpsl
pop
jbe
lcall
xchg
push
mov
arpl
add
inc
mov
dec
test
std
pop
dec
movsb
xchg
pop
cmc
ficoml
in
mov
sub
mov
call
xor
jecxz
add
pop
mov
push
ja
ds
ficomps
xor
aad
fbstp
jnp
test
add
mov
push
rcrb
mov
inc
xor
jb
std
aaa
stos
push
shlb
icebp
cmp
cmp
cmpsl
test
pop
loopne
outsl
das
pop
and
fs
push
fmuls
dec
dec
adc
jno
hlt
in
insl
mov
xchg
adc
dec
rolb
mov
pushf
cmpsl
popf
push
aam
mov
fld
sub
aam
mov
add
andnps
cmp
push
data16
shrl
test
xchg
out
and
imul
es
add
imul
scas
jbe
push
and
mov
cmpsl
inc
cmpsb
add
push
test
stos
sarl
insb
and
mov
bound
push
xlat
pop
jle
inc
pop
in
sub
inc
dec
pop
pop
iret
ja
jge
scas
mov
push
lock
sti
adc
pop
sbb
pop
imul
out
or
mov
jl
inc
popa
shlb
and
cmp
fisubs
mov
and
jmp
pop
sbb
cmc
xlat
js
aas
ret
lret
cmp
pop
lods
mov
mov
pop
cmp
cmp
mov
je
dec
mov
mov
dec
fmuls
mov
lret
cltd
add
shlb
sbb
sub
adc
mov
mov
testb
jge
enter
cli
mov
and
shlb
fs
sbb
add
insl
shlb
xchg
mov
push
inc
push
and
push
xchg
mov
xchg
insb
aaa
mov
cmp
cmpsb
push
jne
les
popf
js
stc
push
dec
aas
fildl
leave
leave
add
xchg
adc
mov
cmpsb
jmp
push
jle
pop
mov
ljmp
push
stos
cwtl
hlt
shl
mov
inc
mov
jmp
xchg
cmpsl
sbb
and
in
sub
nop
pop
push
fwait
push
mov
flds
addr16
xor
bound
xor
aad
ret
pop
out
lods
xor
sub
jbe
repnz
mov
icebp
stc
nop
insl
cmpsb
pop
add
dec
mov
mov
xlat
mov
sub
dec
enter
lret
stos
repnz
stos
cmc
aaa
fs
lods
test
dec
xor
xor
out
adc
pusha
mov
adc
sub
iret
push
cmpsl
das
jg
adc
xor
incb
loopne
sarl
iret
cmp
pop
movsb
es
inc
clc
and
inc
cmp
dec
ret
add
pop
adc
cmp
cmpsb
or
pop
push
out
lea
push
xor
into
xchg
sub
cmp
insb
xchg
cmpsb
lret
sbbl
hlt
enter
jnp
roll
and
xorb
pop
xor
std
mov
and
repz
xor
sub
jp
cmp
dec
fwait
dec
scas
repnz
out
cli
stos
in
int
stc
jmp
je
test
or
or
pop
popf
fisubrs
leave
push
mov
pop
lret
outsl
adc
loop
out
add
push
std
pop
cld
mov
insl
stos
inc
inc
lods
subb
push
xchg
incb
movl
push
xor
inc
xchg
mov
adc
jg
jae
or
test
push
add
js
mov
movsb
xor
adc
push
pop
or
cld
sbb
cmpsl
inc
xchg
pop
nop
loopne
push
mov
bound
or
push
sub
out
ret
ret
loopne
jo
pop
add
pop
pop
sahf
movsb
iret
push
les
sbb
lea
push
bound
lock
push
and
fistpl
dec
pop
adc
jl
jo
notb
cwtl
inc
adc
mov
push
dec
rolb
and
pop
sub
popa
push
jge
and
sub
and
outsl
sub
jbe
mov
imul
inc
xchg
push
cmp
dec
jge
pop
mov
or
clc
cld
mov
and
ja
por
mov
jg
xchg
and
fdivr
shlb
repnz
inc
push
xlat
fbstp
jl
jmp
cmp
fistpll
out
arpl
fidivl
cmp
mov
jge
bound
movsb
or
dec
push
pusha
call
mov
sub
fstps
pop
adc
nop
mov
xchg
in
mov
movsb
pushf
clc
lods
push
out
aaa
inc
sub
adc
xor
mov
add
js
in
ret
sub
test
adc
xchg
and
shr
in
or
or
mov
cld
lock
sub
cs
in
sbb
cmp
sti
adc
inc
cmp
imul
cmp
mov
stos
push
push
leave
fldenv
dec
cmp
push
xchg
inc
into
out
aas
stc
clc
ret
fnstsw
mov
out
and
mov
pop
cmp
ss
fsubl
testl
je
pop
dec
stos
add
call
out
in
inc
or
dec
sbb
adc
daa
xor
xchg
jo
rcrb
inc
ret
add
repnz
push
xor
sub
mov
fnstenv
sub
xchg
jo
dec
push
mov
sbb
jmp
daa
add
jle
or
or
call
push
cmp
xchg
push
mov
lock
mov
adcb
cmp
movsb
bound
dec
sahf
jecxz
popa
inc
cmp
dec
mov
stc
lods
sbb
nop
pop
cltd
into
or
push
lahf
pop
sub
mov
pop
enter
mov
inc
mov
fwait
xlat
inc
icebp
mov
insl
shlb
ss
popf
ret
jmp
add
std
orb
xchg
dec
sti
jmp
lret
push
push
les
clc
enter
sbb
scas
jp
ret
mov
stos
pop
jle
xorl
subb
popa
icebp
dec
out
xchg
inc
pusha
pop
add
pusha
cmpsb
cmp
mov
and
dec
mov
xchg
or
push
lock
lcall
cmc
outsb
lret
out
imul
jno
xor
lea
xchg
pop
test
or
out
fstpl
enter
push
test
adc
mov
mov
add
iret
in
mov
enter
repz
jecxz
es
fstl
hlt
dec
mov
test
fnstsw
inc
lock
inc
popa
inc
test
popa
add
push
aad
xorb
fistpl
or
cwtl
mov
stos
inc
test
mov
movsl
jo
xor
or
dec
out
dec
sub
jo,pn
push
rcll
pusha
and
mov
fisttps
xor
mov
mov
sub
mov
sbb
call
jb
mov
shll
dec
jb
add
cmp
cmp
push
inc
orb
pop
push
sub
push
mov
cmpsl
jge
sbb
and
jb
pusha
data16
std
xor
aas
fidivrs
lds
xor
adc
mov
mov
lahf
mov
shll
push
xor
lahf
and
xor
les
xlat
cs
push
push
mulb
loope
sarb
pop
add
shrb
xlat
test
or
ret
aam
fdivs
xlat
xor
and
pop
cmp
cmp
mov
sub
repnz
in
mov
pop
sbb
aad
sbb
dec
test
fwait
aas
lods
mov
inc
dec
stos
divb
mull
jo
sahf
mov
repnz
pop
adc
jl
stc
insb
pop
shrb
scas
stos
jbe
pop
fs
dec
pusha
popf
sub
outsb
loopne
xlat
das
mov
imul
jne
fcmovnbe
bound
icebp
cld
push
stos
call
out
mov
fcoms
loopne
jo
andl
xchg
jmp
stos
and
test
sub
lds
das
cmp
add
mov
cmp
in
pop
jns
pop
decb
test
mov
leave
mov
sub
sub
xchg
loop
or
pop
cld
lods
stos
mov
sub
pop
sti
fwait
outsb
ret
lcall
pop
loop
insl
mov
and
jmp
fmull
ficomps
xor
loopne
pushf
mov
adc
jno
fistpl
pop
jp
or
pop
push
idiv
jge
mov
jns
pusha
xor
mov
arpl
pop
data16
mov
add
or
ds
lcall
mov
cltd
imul
jmp
cmp
jl
xor
rorl
sbb
fistl
pop
xchg
sahf
mov
rol
fld
aas
out
es
dec
popf
addr16
out
or
xchg
inc
jmp
or
fsubrs
mov
ds
push
mov
cmp
fmull
in
aad
fstp
fisttpl
mov
repnz
cltd
sub
mov
out
pop
loop
dec
and
push
les
push
pop
push
xor
notb
sub
xchg
shrl
ja
enter
fisttps
lds
sub
loop
inc
cmp
push
movsl
insl
sbb
test
in
std
std
or
inc
arpl
shl
ret
flds
pop
lea
in
shr
fstl
in
mov
dec
xor
add
enter
testl
fistps
mov
lock
repnz
popf
cmc
or
mov
paddsb
loope
out
cmp
sti
mov
iret
mov
sti
fistpll
dec
sahf
not
add
and
ret
push
add
xor
xor
movsb
jno
sbb
cmp
leave
jge
insl
or
mov
jmp
and
js
shlb
cld
sbb
pop
lcall
pop
loope
sbb
pop
movsl
movsl
cmpl
mov
or
pop
in
xchg
pop
inc
xchg
mov
lret
repz
scas
pop
mov
mov
fisubrs
pop
mov
and
mov
jecxz
xchg
arpl
hlt
fstl
and
ret
jle
les
in
pop
ret
stos
imul
outsb
cmp
mov
ss
aaa
xor
lret
rcrl
sbb
ss
sbb
mov
shrb
mov
push
enter
fidivl
cld
mov
jno
insl
frstor
lea
sub
jle
lea
xor
pushf
push
sbb
mov
scas
addb
cmp
inc
xor
pop
inc
add
mov
sti
xor
fldl
call
xchg
or
les
mov
test
push
sbb
jb
mov
repz
stos
mov
add
int3
bnd
sbb
mov
xchg
inc
xorl
setb
out
andb
and
jae
jo
daa
or
ret
pop
std
pop
inc
xor
clc
gs
jne
adc
int
repz
mov
outsl
iret
jmp
jb
fcmovbe
mov
test
fwait
call
mov
inc
mov
ja
sahf
mov
jbe
cld
sahf
xchg
dec
inc
xchg
adc
in
je
ficompl
cld
add
sub
vmovsd
cmp
sbb
add
xor
xchg
pop
ret
mov
dec
fwait
insl
pop
test
push
jns
rclb
std
arpl
outsb
das
push
shrl
xor
js
push
repnz
pop
call
xchg
mov
xlat
push
add
sbb
loopne
ficoml
int3
inc
mov
outsb
xor
mov
mov
cmp
dec
fcomp
repnz
pop
sub
jmp
cmpsl
daa
aas
sbb
push
andl
mov
cmp
stos
adc
jb
or
pop
out
push
aam
stos
pop
dec
jnp
sar
repnz
fnstsw
mov
jb
or
jns
cwtl
inc
xchg
xor
int
movsl
dec
mov
mov
ljmp
and
adc
sub
push
test
mov
jbe
and
mov
jmp
mov
popa
imul
cmp
cmp
into
pushf
or
in
imul
or
vrsqrtps
mov
in
enter
daa
pop
adc
movsb
push
hlt
pop
lahf
or
fistps
hlt
faddl
fnsave
pop
leave
push
or
outsb
fildll
int
cmc
jmp
pop
and
negb
and
test
and
jp
xchg
xor
mov
fstps
sbb
stc
loope
cli
mov
mov
push
dec
push
fsubs
jae
imul
leave
xor
or
lea
jbe
push
add
leave
xchg
notb
clc
es
js
or
inc
gs
clc
inc
mov
cwtl
pop
notb
xor
add
mov
fstpt
fmul
xchg
xor
loopne
mov
add
imulb
pusha
aaa
and
xchg
ret
ss
sbb
xchg
out
or
ret
js
mov
cld
mov
mov
push
fidivrl
test
jb
cmp
pop
cli
inc
lcall
fstpl
in
lea
cmpb
sbb
jg
lds
fimull
and
dec
pop
dec
adc
lret
shll
xrelease
adc
sbb
sub
movsl
mov
sub
in
lahf
mov
mov
sub
iret
adc
fcmovne
cmp
add
inc
push
push
push
int3
int
mov
xorb
mov
add
sub
int3
and
enter
aad
pop
shl
dec
cmp
test
pop
sub
sbb
out
mov
arpl
mov
inc
and
mov
lret
or
mov
jae
pop
xor
mov
push
iret
fistpl
popfw
imul
lret
call
fldcw
movsl
shlb
ja
insl
in
aam
cwtl
leave
gs
inc
and
in
in
push
addr16
xchg
ss
int
imul
or
addr16
xchg
lret
and
mov
cmp
movsb
add
loope
xchg
test
cmp
ja
dec
mov
repz
rcrl
push
mov
in
push
test
pop
icebp
in
and
cmp
or
dec
xor
add
icebp
scas
or
pop
add
and
pop
pop
or
pop
cmpb
or
les
sbb
out
ret
mov
pushf
sub
pop
arpl
arpl
stos
dec
sbb
aaa
cmp
cltd
xor
adc
repnz
xor
jecxz
imul
jns
pop
popa
ljmp
ljmp
cmp
xchg
jno
test
sti
gs
fidivrl
out
inc
movsl
cmpsb
dec
sahf
and
insl
mov
jp
test
jbe
dec
dec
and
ret
repz
mov
push
stc
lret
shll
test
pop
outsl
movsb
sti
aaa
sbb
adc
out
test
sbb
mov
hlt
mov
into
cmp
jle
or
subb
mov
mov
in
cli
push
rol
imul
sar
adc
cltd
js
lcall
int3
lcall
add
mov
in
rcrb
sbb
ss
pop
adc
xor
sub
stos
jnp
mov
or
inc
and
sbb
test
aas
inc
cmp
xchg
push
adcl
mov
outsl
xor
mov
stos
dec
dec
sbb
pop
lods
sub
cs
movsb
xchg
xlat
rolb
mov
lods
lea
dec
cmp
dec
imul
jbe
mov
push
fucomp
xor
out
icebp
mov
popa
repnz
sbb
or
mov
stos
cs
addr16
dec
sar
inc
mov
insl
and
cld
enter
out
jae
fimull
xchg
dec
pop
jo
rorl
cmp
add
jecxz
pop
fnstsw
add
and
xlat
push
jnp
xor
cmc
adc
outsl
ret
sub
sbb
pop
adc
rcrb
cmpb
pop
pusha
fwait
xor
jne
repz
insl
sahf
divl
push
xchg
inc
pop
push
fnsave
inc
mov
inc
dec
cltd
cltd
aaa
cltd
add
mov
stos
sbb
jno
int3
repnz
insb
dec
mov
int
xchg
cmp
mov
and
adc
mov
int3
cmc
ss
adc
stos
mov
lea
out
ss
push
fidivl
call
and
xchg
dec
jge
sub
addr16
loope
push
and
xor
leave
xchg
xor
je
push
outsl
into
inc
lods
mov
outsb
push
mov
or
inc
pop
xchg
outsl
adc
inc
call
imul
stos
in
mov
les
roll
sbb
dec
push
rorl
or
shll
inc
iret
fidivl
jno
fs
push
xor
jno
repnz
sub
scas
mov
lods
cltd
and
or
clc
es
adc
mul
std
adc
inc
pop
mov
movsb
clc
jno
push
xchg
hlt
imulb
leave
and
imul
cltd
pop
xchg
aad
jne
jb
jmp
jge
sub
dec
sub
mov
add
es
clc
push
lret
into
outsb
adc
das
push
push
push
shl
add
pop
cmpsl
sbbb
movsl
mov
jns
xor
or
jb
cmp
add
sub
adc
jp
idiv
enter
mov
push
mov
outsb
pop
test
lret
cmc
sub
dec
aam
sbb
push
cmp
movsl
aad
test
adc
inc
ja
enter
and
fsubrp
or
xor
sbb
mov
subl
mov
cmp
jae
xor
aaa
jbe
clc
mov
idiv
fsts
addr16
pusha
loop
adc
inc
pop
inc
into
add
jg
cmp
mov
iret
dec
mov
jp
adc
lods
jl
not
jb
xor
push
pushf
mov
and
pop
adcb
cld
cld
pop
test
test
jge
or
loopne
pop
and
lret
jns
imul
push
jo
cld
cmp
rclb
sub
lret
or
sub
mov
sbb
lods
scas
jmp
mov
jecxz
fldcw
stos
repz
inc
std
icebp
sbb
cltd
mov
mov
xchg
test
pop
push
add
fsubrs
ljmp
sahf
sbb
adc
imul
cwtl
aas
or
scas
ffree
xchg
add
loop
mov
mov
xor
sbb
insb
fsubrl
jl
xchg
sarb
std
and
outsb
jo
mov
xlat
jmp
popa
mov
or
repnz
sbb
mov
repz
loopne
adc
jmp
sbb
mov
sub
loope
pusha
jge
pop
dec
int3
sbb
dec
cltd
dec
aam
out
sahf
int
fstpl
add
xchg
repz
xlat
jecxz
mov
out
idivb
shll
inc
adc
clc
sub
scas
cs
sbb
adc
mov
setne
sub
pop
pushf
mov
pushf
test
sub
cmp
mov
mov
push
mov
xchg
jge
bnd
fistps
stos
test
sub
pop
mov
rol
cld
cwtl
mov
orb
dec
sbb
mov
push
je
clc
fwait
pop
in
jnp
or
sbb
fistpl
arpl
pop
ret
cwtl
pop
jo
mov
xor
mov
jle
inc
sub
ret
add
mov
loope
int
shrb
mov
repnz
push
pushf
xor
sub
dec
sub
xchg
push
cmp
and
clc
ret
xor
pop
xor
mov
pop
fdivrs
push
scas
or
inc
je
mov
and
mov
rcll
lret
cmp
jecxz
test
fcomp
idivb
sbbb
es
aad
icebp
push
mov
fs
dec
dec
sbb
stos
lahf
xor
aam
cmc
dec
fmulp
cld
addl
popf
call
xchg
mov
inc
mov
xchg
enter
or
ret
sbb
nop
lds
mov
loope
mov
mov
mov
jae
sub
addr16
shlb
incb
pop
push
jge
cmc
in
lods
adc
fmul
inc
push
xchg
cmp
adc
cmp
dec
leave
mov
or
mov
pop
out
mov
adc
or
or
sahf
mov
pop
out
push
push
test
notb
xor
and
repnz
pop
outsl
mov
jae
jecxz
sarl
pop
mov
add
test
into
xchg
mov
lahf
sar
or
das
je
sub
adc
out
aaa
and
inc
shll
or
cmp
pop
aad
and
and
int3
push
in
popf
jl
orl
sub
mov
enter
loop
loope
std
pop
sub
popa
xor
ret
and
cmpsl
add
xchg
mov
mov
sub
ret
mov
jns
cmp
push
inc
mov
fdiv
sbb
rep
cli
bound
cmp
ficomps
popf
mov
mov
or
xlat
hlt
xchg
loope
jnp
xchg
pushf
scas
push
cmp
adc
xchg
xchg
inc
ror
aad
das
sub
lahf
std
sti
int
gs
fcoms
push
cmpl
iret
nop
and
push
stc
xlat
lret
mov
pop
mov
xchg
mov
push
jo
xor
sbb
jle
or
clc
stos
lods
xchg
and
mov
dec
shr
or
ds
mov
jle
xchg
jne
xor
lds
into
fistpl
jmp
xor
xchg
inc
ja
cmp
jnp
xchg
xor
pop
imulb
dec
repnz
xor
xlat
add
iret
mov
and
and
mov
inc
mov
mov
incb
push
pop
inc
sbb
dec
and
jo
adc
mov
daa
sbb
shl
fnstsw
cs
je,pt
dec
inc
mov
xor
jo
mov
cmp
insl
push
adc
sahf
add
aad
mov
xchg
pushf
imul
ret
mov
fsub
add
sub
push
push
and
pop
movsl
cmp
inc
adcb
mov
aam
jl
shll
ret
fiadds
hlt
jne
inc
daa
mov
fwait
adc
lcall
mov
pop
pop
bound
mov
loopne
xchg
cmpsb
or
mov
lahf
push
dec
call
int
adc
sub
loop
xchg
divl
into
lock
cltd
hlt
mov
adcl
adc
rcll
sub
jb
clc
aaa
lcall
pop
testl
jne
into
jae
outsb
cwtl
in
inc
or
add
pop
rcrb
adc
ja
mov
outsl
mov
fisubrl
test
pop
jp
in
add
mov
dec
mov
adc
mov
cmpsl
add
add
add
xor
enter
mov
cmp
xor
inc
xor
addr16
scas
xchg
lock
pop
mov
mov
stos
es
pop
jecxz
xchg
jb
and
push
dec
inc
xchg
clc
pop
mov
sbb
xlat
jp
pop
sub
adc
sbb
sarl
adc
movsb
push
dec
aad
dec
sbb
movsl
jne
jg
imul
xor
fidivl
fstpl
stc
xchg
das
sbb
sub
test
push
shll
addr16
mov
ficoml
movsb
sub
xchg
inc
sbb
xor
cmpsb
outsl
mov
dec
cltd
cmc
repz
fcoms
pop
cld
insb
js
push
daa
addb
mov
pop
cmp
roll
mov
cli
xor
sub
test
add
xchg
dec
push
arpl
test
iret
adc
sahf
pushf
push
out
daa
jb
lret
xor
subl
mov
pop
xor
dec
cmp
lret
pop
cltd
cs
fpatan
arpl
notl
lock
das
sahf
es
push
inc
ljmp
lds
pop
jnp
cld
cwtl
cltd
stc
or
cmp
mov
aad
add
jmp
pop
std
pop
inc
cmc
xor
fwait
xchg
pop
sahf
out
add
dec
mov
sbb
stos
fisubrl
mov
ljmp
js
inc
dec
jl
push
push
add
xchg
mov
pop
nop
mov
cmpsl
cwtl
jns
in
pop
es
decl
pop
sbb
gs
jecxz
jge
dec
cwtl
cmp
leave
repz
and
inc
cs
sub
lret
mov
in
repz
sbb
les
mov
xchg
adc
pusha
mov
fsubrs
jae
scas
int3
test
cltd
outsl
dec
jb
arpl
or
call
pop
mov
rcrl
mov
sbb
fistpll
dec
js
aad
rorb
push
testb
jmp
adc
inc
pop
cmc
pop
xchg
js
adc
pop
sbb
cmpsl
xchg
add
lock
pushf
jp
popf
insl
add
pop
sbbb
loope
pushf
test
or
push
shll
add
jno
in
es
mov
outsb
call
insl
push
leave
cmp
movsl
pop
leave
out
in
mov
ficoms
push
dec
fistpl
repnz
leave
iret
sbb
sub
jp
push
std
movsl
imul
cmp
mov
sahf
jae
push
pop
dec
inc
dec
mov
in
popf
adc
add
xchg
je
or
xchg
mov
mov
mov
jbe
dec
xor
scas
in
lods
or
ficoms
push
insl
jb
loop
ss
fldcw
inc
ficompl
arpl
or
inc
xchg
adc
sti
mov
fidivrs
mov
fstpt
and
add
adc
sbb
or
movsl
enter
aad
push
icebp
xchg
push
add
pop
pop
into
popa
mov
adc
cmp
aam
xor
or
add
test
adc
sbb
popaw
jmp
xor
pop
sti
adc
int
inc
add
scas
xor
push
cmp
pushf
test
pop
push
imul
jp
inc
xchg
popa
test
adc
or
arpl
jno
jbe
icebp
adc
ret
mov
mov
pop
inc
push
mov
leave
mov
inc
dec
jmp
xlat
pop
and
cmp
adc
cmc
fnstenv
ret
out
cmp
das
call
xor
mov
jo
jno
sbb
divb
pop
sbb
xor
sub
es
mov
mov
mov
cwtl
inc
into
in
sbb
mov
or
pushf
mov
fs
adc
shr
sbb
aaa
insl
rorb
fsubs
cld
push
ljmp
pop
mov
insl
test
loope
and
rcrl
nop
mov
adc
sbb
xchg
test
enter
jge
pop
mov
fcomip
hlt
bound
call
ljmp
out
test
loopne
imul
mov
shll
dec
mov
and
fisubs
mov
cmp
cmp
lcall
data16
decl
fstps
call
sub
int
adc
in
fwait
adc
andb
adc
and
xor
stos
and
in
add
mov
jl
sub
fyl2x
shl
outsb
adc
out
or
lcall
cmp
fiaddl
adc
fmul
dec
in
arpl
jns
adc
in
leave
imul
xor
mov
dec
mov
out
inc
lret
xor
inc
mov
jb
test
pop
push
int3
ret
push
lret
jo
ljmp
out
enter
int3
into
in
scas
lock
sti
mov
loop
js
iret
std
icebp
sbb
out
in
idiv
loope
xchg
loopne
daa
add
inc
std
mov
nop
pop
add
repz
sub
test
sub
inc
je
cmpsl
cmp
gs
dec
imul
lods
xor
rep
push
inc
cltd
jmp
fistpll
imul
xor
adc
dec
adc
adcb
scas
sbb
rcrb
xor
sbb
rcrb
and
fdivl
jnp
pop
jnp
bnd
add
mov
data16
push
clc
nop
lock
xchg
cwtl
pop
enter
shr
push
xchg
jnp
jle
fcomps
add
mov
add
std
testb
jmp
mov
dec
jl
inc
mov
jnp
jl
loope
sbb
leave
and
addr16
lock
mov
stos
push
int3
add
mov
arpl
aas
out
test
cs
dec
pusha
rclb
dec
stos
pop
filds
cltd
cmp
jecxz
ss
insl
in
arpl
lret
dec
cwtl
outsb
sub
xor
mov
pop
pop
adc
mov
shr
jge
pop
push
rcr
je
xor
jge
in
push
ret
mov
fldt
xor
test
jge
jl
cmp
jns
mulb
inc
fs
pop
mov
scas
cmp
mov
jne
imul
sbb
fldl2e
sub
mov
outsl
loope
fwait
dec
rcll
pop
add
or
and
sahf
xchg
js
repz
push
aam
fisubrs
rolb
mov
imul
dec
mov
or
sub
rorb
pop
ret
push
mov
pop
js
mov
clc
jns
jnp
mov
inc
pop
mov
xchg
out
inc
aam
fwait
xchg
jle
dec
fists
xchg
cld
push
xchg
mov
mov
push
sub
in
mov
and
xchg
mov
sub
in
and
pop
inc
pop
stc
mov
out
scas
lods
pushf
cwtl
popa
mov
jnp
lcall
cmp
out
xchg
jae
imul
int3
add
arpl
xchg
pusha
pop
mov
xchg
or
mov
clc
sub
pop
dec
pop
pop
data16
push
dec
sub
testl
icebp
hlt
jp
test
jns
divb
imul
cmp
dec
pop
pushf
mov
jnp
stos
aad
sbb
and
movb
mov
dec
jmp
jg
jb
push
mov
punpcklbw
test
bound
xchg
insb
enter
dec
hlt
lahf
cltd
sti
mov
adc
cli
cmp
xor
lds
imul
adc
sbb
jmp
ljmp
lcall
sub
cmpsb
ljmp
xor
jl
loope
pop
leave
inc
lcall
andb
mov
notb
jg
jge
jo
rol
popa
sub
mov
addb
pushf
xchg
outsb
clc
fnstcw
and
jb
cmp
loopne
sub
insl
cmpsb
sub
jl
cld
inc
lods
les
push
pop
jge
aaa
xchg
ja
pop
sbb
jecxz
jl
mov
cwtl
cmp
adc
sahf
rcrl
fldl
shl
test
and
push
fdiv
mov
pop
test
and
cmpsb
and
push
dec
emms
loop
in
fistpl
repz
dec
pop
sti
js
jl
jcxz
xchg
pop
hlt
and
cwtl
test
imul
out
mov
iret
ret
daa
xchg
js
sub
pop
lods
xchg
in
stos
and
and
es
decl
xor
xor
jle
or
je
inc
push
mov
inc
cmp
dec
jge
insl
aaa
adc
mov
sub
int3
ret
add
add
and
sti
dec
dec
mov
sbb
dec
popa
or
loopne
adc
es
xor
push
dec
mov
push
or
xchg
insl
sbb
out
into
bound
stos
sbb
pop
mov
push
xchg
ss
mov
xchg
jo
sub
or
and
fwait
cwtl
cltd
test
arpl
xchg
sbb
cs
push
shll
jb
jle
push
loop
test
mov
dec
enter
mov
inc
xchg
cli
xchg
stc
dec
xor
pushl
int3
pop
aam
testl
in
adc
add
add
lods
mov
loopne
and
data16
aam
xor
adc
sub
in
xchg
mov
jns
cmp
adc
lock
xchg
shl
int3
imul
jecxz
sbb
cmpsl
jp
jmp
push
dec
pop
push
call
xor
jbe
out
inc
sbb
imul
push
inc
insl
movsb
cmpsb
inc
lock
pushf
mov
add
cmp
mov
aaa
inc
arpl
cwtl
xor
shlb
xor
xchg
or
and
mov
loop
stc
inc
adc
pop
cld
jae
jo
dec
cli
in
movsl
je
add
and
jmp
xor
jns
stc
jmp
scas
adc
add
outsb
test
add
cmpl
insb
cs
out
sub
inc
add
test
or
out
loop
jg
fidivrl
popf
adc
or
cli
call
xor
cmpsb
psrld
notl
jne
sti
imul
mov
sub
add
lods
and
mov
out
mov
pop
xchg
fmul
lea
aaa
pop
lock
mov
xor
pop
and
add
xchg
cmp
or
int
jnp
rorl
mov
jle
and
mov
xor
out
jg
idivl
inc
cltd
and
jp
xchg
out
lods
jmp
push
pop
lds
gs
loopne
movsl
inc
lahf
sub
fwait
out
jecxz
in
xchg
jne,pt
out
mov
out
div
pushf
adc
jo
std
mulb
ds
xor
orb
pop
and
mov
sbb
cmp
xlat
mov
push
mov
adc
arpl
in
jecxz
mov
iret
sbb
jns
fcmove
sub
imul
jmp
inc
and
pushf
aam
push
in
daa
ss
bound
mov
aaa
adc
dec
lret
mov
mov
lock
add
in
inc
fadds
push
and
mov
inc
xchg
movsb
push
dec
xchg
mov
ljmp
xchg
movsb
insl
dec
sahf
push
sub
xchg
test
mov
fadd
inc
inc
cmp
out
push
fimuls
sahf
xor
mov
cmp
rol
sbb
xchg
jno
mov
bound
xorl
adc
add
dec
pusha
mov
lock
mov
shrl
aaa
ljmp
mov
push
push
pop
repz
lock
xchg
jp
aad
enter
stos
shll
ds
jo
mov
sub
mov
jmp
adc
push
or
subl
jns
hlt
push
xchg
mov
es
push
aad
hlt
mov
sub
mov
out
lods
lret
shrb
mov
sbb
mov
mov
sub
jns
call
mov
lret
imul
jp
cmp
xor
mov
jge
insl
or
cmp
popf
mov
movsb
dec
mov
adc
cld
inc
aam
dec
mov
nop
imul
ss
mov
outsl
pop
push
jmp
pop
in
mov
sub
inc
imul
xor
std
mov
inc
mov
dec
mov
and
cmpsb
and
scas
mov
cmp
jge
movsl
jecxz
lods
cli
push
loope
daa
insb
cmc
ljmp
mov
pushf
jg
push
mov
inc
aaa
xor
aaa
cmp
jge
cmp
adc
xchg
hlt
jl
hlt
mov
mov
sbb
xchg
in
cli
ret
iret
inc
dec
shr
xchg
xchg
mov
fldcw
js
sub
in
popa
sbbl
push
subl
inc
cmc
xchg
inc
pushf
repz
lret
inc
jnp
cwtl
es
sub
lcall
cmpsb
mov
cmovo
and
insl
xchg
outsb
bnd
mov
inc
pushf
cld
outsl
jmp
dec
fmuls
jbe
lea
lds
mov
clc
ljmp
cltd
lods
xorl
mov
cmp
mov
icebp
and
cmp
stos
jmp
and
mov
pop
jmp
cmpsl
ret
int
das
ja
fwait
or
add
lods
push
jb
dec
aam
in
jmp
mov
inc
adc
adc
mov
xchg
stos
mov
movsb
jnp
adc
xchg
ret
sub
aas
sbb
pop
lods
cli
movsb
std
adc
pusha
push
mov
fwait
xor
jnp
repz
andl
or
lea
push
aad
sub
xlat
cmp
jbe
adc
aad
lcall
lock
mov
mov
xchg
adc
mov
gs
sbbl
gs
imul
dec
xor
push
mov
mov
icebp
js
jge
jae
or
and
inc
into
scas
sub
add
xchg
stos
jne
movzbl
mov
incb
fwait
test
lock
xor
lds
int3
or
and
pop
cmp
in
test
aas
and
sahf
stc
jmp
mov
xchg
push
cmpsl
mov
dec
push
lahf
lret
rcr
mov
test
and
mov
je
fdivr
insb
test
pop
test
fwait
negb
dec
lret
lret
shlb
call
add
rclb
ds
pop
ficoms
jne
sbb
dec
fs
orl
jb
inc
mov
cmp
arpl
push
movsb
call
and
xchg
xchg
add
add
push
out
mov
ljmp
fwait
push
lret
cwtl
fists
sbb
testl
mov
test
sbb
icebp
cmp
mov
test
pop
and
or
hlt
xor
sub
pop
sub
and
rol
les
sub
mov
sbb
mov
xchg
in
rorb
jl
test
sub
divl
mov
cmp
push
xor
aaa
in
or
sbb
cmpsb
mov
pushf
inc
movsb
and
or
out
fnsave
test
or
vmread
leave
inc
push
imul
xchg
inc
push
scas
sbb
add
adc
cmc
fsubr
dec
mov
fwait
add
into
or
add
lahf
enter
push
sahf
aas
mov
mov
jecxz
xor
mov
das
or
jp
adcb
jae
ds
nop
call
movsb
nop
lods
push
mov
je
in
or
shr
lret
sbb
xor
push
mov
rclb
sbb
mov
jo
jo
data16
clc
fs
out
xchg
outsl
sbb
push
mov
dec
sbb
icebp
mov
add
mov
cmpb
test
add
lahf
pop
jl
fs
push
fisubrl
pushf
ds
stos
add
xchg
cltd
pusha
aad
inc
lcall
ret
out
fisttpll
sbb
shl
or
jg
ss
inc
or
mov
lods
fs
std
aaa
loope
jecxz
loopne
mov
xor
arpl
mov
aam
xor
pop
int3
cltd
add
flds
or
daa
jnp
push
out
jo
jmp
js
aad
xor
inc
lahf
jp
sub
xor
mov
enter
sub
test
push
cli
xor
jo,pt
out
test
cltd
adc
mov
lock
fsubrs
jmp
jae
mov
sub
sbb
add
and
leave
outsl
inc
pushf
jle
das
dec
sbb
push
push
mov
mov
outsb
push
adc
iret
adc
lret
lea
mov
pop
lret
add
lret
pushf
inc
call
sbb
cmpsl
mov
mov
push
mov
fdivrs
fwait
add
jae
pop
mov
mov
out
testl
add
adc
adc
add
dec
inc
mov
or
enter
pop
push
scas
pop
out
inc
loop
pusha
rclb
xor
and
clc
mov
mov
pop
hlt
out
jl
in
jb
dec
jmp
mov
std
adc
rcll
pop
sahf
cli
sbb
cmp
adc
cld
lock
jg
or
std
icebp
xchg
fs
xchg
push
daa
pushf
or
xchg
bound
mov
repz
cmp
sbb
cmpsb
out
addr16
loope
sbb
push
and
jg
sbb
mov
and
enter
jnp
jecxz
pop
das
sahf
shrl
cld
ss
or
je
mov
stos
add
or
xor
aas
inc
js
mov
pop
roll
or
int
xor
pop
in
cltd
in
rol
ja
push
int
pop
pusha
mov
push
int
xchg
xchg
arpl
nop
pusha
fstpl
jl
aam
jg
and
sub
adc
pop
cmpsl
or
sub
xlat
bound
push
testb
jbe
push
test
das
push
sbb
jmp
out
jmp
inc
fnstsw
ret
or
fcomps
xor
adc
jb
out
outsb
into
push
imul
inc
sub
or
sbb
or
sti
add
notb
lahf
into
mov
das
jne
out
lret
in
movsl
jb
lods
imul
lods
leave
mov
mov
xor
cltd
cmpsl
out
mov
push
dec
in
movsb
push
push
rcrb
notl
imul
dec
shlb
int
in
jae
mov
popa
jb
jns
out
xor
fcmovnb
add
pop
push
mov
int
pcmpeqb
pusha
xor
inc
sub
xchg
dec
sahf
dec
int
cmpsl
cltd
mov
call
and
daa
inc
push
pop
push
dec
inc
cmp
loopne
push
rcrl
subb
stc
jne
push
es
fwait
and
add
cltd
cli
xor
add
add
decb
out
sar
adc
mov
data16
out
scas
dec
xlat
mov
mov
mov
mov
xlat
loop
and
test
movsb
cltd
stos
mov
sbb
adc
cltd
mov
ret
sbb
add
mov
sbb
movsb
sub
out
dec
mov
sbb
xchg
loop
or
xchg
stos
in
sbb
cmp
lcall
cmp
xchg
add
and
imul
inc
pop
xor
jle
inc
mov
push
frstor
mov
lods
add
xchg
cwtl
cmpsl
shll
cld
xchg
and
mov
xchg
sub
cwtl
test
xchg
jo
fistpl
sub
cmpsl
inc
movb
faddp
pop
push
sub
xchg
pop
out
jb
xchg
xchg
xchg
test
movsl
std
push
loop
ljmp
loopne
cmp
hlt
jb
sahf
fwait
negb
lods
push
sahf
jbe
bndstx
mov
push
pop
pop
js
xchg
js
xorb
dec
pop
fisttps
jno
enter
or
push
adc
xlat
call
out
out
in
push
nop
push
std
je
sbb
and
sbb
push
adc
addr16
inc
lea
or
push
push
mov
xchg
fidivrs
sbb
cli
and
mov
loopne
jbe
xor
call
jne
mov
mov
nop
xor
pop
or
dec
out
push
cli
and
push
test
hlt
pusha
pop
add
add
sbb
jbe
adc
or
cmpsb
and
je
ret
inc
loopne
lds
shlb
jae
add
mov
std
push
push
les
jno
jbe
fsub
insb
mov
ja
mov
orl
xor
mov
test
lret
jmp
xchg
addr16
test
pop
mov
sub
mov
in
inc
cwtl
notl
outsl
inc
nop
mov
cmp
pop
roll
pop
sub
inc
mov
push
rorl
jns
nop
popa
cmp
pop
popa
sbb
call
xrelease
jne
jl
lea
fmulp
or
add
loope
xlat
or
sahf
xchg
dec
call
pop
ds
cmp
xor
outsb
enter
jb
in
cmpsb
and
dec
or
dec
testl
in
inc
jmp
repnz
mov
cmp
sub
into
ljmp
call
jbe
xchg
cmpsb
icebp
push
xor
test
lahf
or
or
pop
adcl
out
add
cmp
cmp
scas
rcrb
mov
fstl
data16
add
mov
out
js
aam
xlat
mov
stc
movsl
or
pop
into
aad
inc
or
sub
das
mov
popw
aaa
pop
push
cs
insl
adc
mov
pop
jnp
push
xor
bound
movsl
jmp
movsl
xor
push
sub
ret
cli
jg
lds
mov
dec
jb
jmp
icebp
jp
in
in
in
sub
adc
jne
pushf
inc
bound
xor
je
sub
fs
lods
pop
pop
loope
pop
xor
ret
fisttpll
inc
xor
fnsave
xchg
lret
pop
add
sbb
lods
mov
cli
cld
cmp
ds
adc
inc
sub
gs
fidivs
push
adc
sbbl
repnz
pop
jbe
push
xchg
aad
dec
jns
aaa
add
push
scas
lahf
add
xchg
out
call
add
or
jb
push
cmc
imul
addr16
xchg
ret
rcrl
nop
jle
adc
adc
or
mov
int
fidivs
inc
push
adc
scas
subl
lds
cli
stos
inc
mov
pop
inc
jno
pop
and
pusha
je
sti
hlt
aas
lock
or
jl
push
ficomps
jmp
pop
testb
imul
cld
jo
ret
int3
les
push
xchg
mov
int
jge
jne
or
jne
mov
das
xor
xchg
inc
outsl
andb
dec
or
xor
mov
jecxz
push
loopne
adc
int3
es
stos
adc
sbb
sub
cmp
or
aas
sbb
fisubrs
jne
and
xor
adcl
fs
loope
lret
adc
fsubrs
pop
cmp
mov
loop
nop
in
imul
lret
inc
pop
shl
je
sub
add
lret
nop
jecxz
mov
je
jnp
iret
dec
xchg
fldt
into
scas
cmpsl
roll
jnp
lret
jae
and
xchg
pop
in
hlt
lret
xchg
mov
push
sub
push
push
std
cld
xor
adc
divb
jne
adc
pop
add
and
and
xchg
outsb
mov
test
push
das
pop
fldenv
inc
cmp
mov
xor
int3
mov
xor
fwait
in
xor
push
mov
scas
xor
push
sub
mov
mov
and
xchg
mov
cmp
sbb
or
mov
pop
dec
xor
stos
xchg
arpl
inc
mov
fiaddl
loop
insl
sahf
cs
fisubs
mov
jb
into
bnd
loopne
lea
ror
outsb
and
add
and
mov
pop
stc
cld
adc
iret
fldenv
mov
dec
stos
lds
pop
ja
mov
fists
out
cmp
pop
rorl
icebp
hlt
xchg
xor
jg
pop
cmpb
push
cmp
stc
inc
jbe
dec
sbb
sbb
pushf
pop
loopne
int
add
or
repnz
cmp
int
cltd
push
rol
push
sub
sub
mov
xor
lds
xchg
and
mov
jo
jge
add
jns
ljmp
jg
and
xchg
movsl
adc
push
test
push
and
mov
jl
sbb
inc
scas
or
jne
or
xchg
fisttpl
cwtl
jl
popa
jecxz
adc
sbb
or
sti
dec
jge
fwait
ja
jge
outsb
mov
dec
sbb
push
pop
push
pop
dec
pop
mov
outsl
imul
mov
or
in
aam
sti
pop
insb
call
fld
push
enter
shrw
lds
xchg
iret
shlb
fsub
push
jmp
daa
lcall
sbb
cmpsb
fistpl
mov
jg
mov
sub
pop
pop
xchg
push
pop
xchg
ret
pop
in
pushf
popa
sbb
ss
adc
pop
pop
shrl
insl
out
sub
jo
shrb
movsl
mov
sbb
and
mov
test
adc
out
rol
xor
pushf
add
adc
or
inc
jl
adc
icebp
enter
sahf
cmp
das
xchg
inc
std
cmp
jle
mov
lret
sub
xor
out
mov
mulb
mov
fadds
inc
adc
push
or
test
lods
ljmp
rolb
dec
inc
fadd
fmull
dec
mov
mov
int
jmp
rcrl
xchg
shr
pusha
flds
enter
cmp
shrb
lods
xor
push
mov
mov
fcoml
mov
in
repz
enter
cmp
pop
leave
fsts
imul
and
xchg
leave
jg
sub
inc
aam
stos
loope
int
stc
mov
and
pop
cmp
xchg
sbb
int3
xchg
das
call
pop
jg
fstp
mov
xchg
inc
stos
dec
cld
pop
mov
xor
ja
mov
mov
push
scas
mov
jp
mov
mov
test
loop
pop
fs
cmp
xchg
nop
pop
outsl
outsb
iret
jg
inc
lods
jo
in
adc
jecxz
cwtl
push
not
dec
data16
jns
fwait
mov
sub
inc
jns
icebp
pop
mov
icebp
int3
es
sarb
pop
ret
ret
into
ja
insb
ljmp
or
mov
sbb
or
scas
push
inc
fwait
push
sub
mov
mov
pmaxub
inc
imul
jbe
push
cs
push
jmp
iret
push
or
xor
lret
in
out
pop
jns
mov
dec
lret
out
fdivl
dec
addr16
rorl
pushf
jle
xchg
xchg
hlt
es
in
xor
loop
jno
aas
lcall
push
or
popa
jge
cli
and
fisubs
jmp
enter
adc
add
xor
movsl
xchg
or
mov
add
sbbb
sbb
shrl
mov
dec
jecxz
inc
in
inc
gs
mov
pop
xchg
in
cmpb
or
js
scas
enter
lret
add
cltd
ret
sub
or
jo
push
js
aaa
or
inc
movsl
fstpt
mov
test
fs
fildl
cs
push
xlat
push
push
mov
subb
out
mov
fbld
adc
jbe
lahf
and
inc
btc
imul
jne
fcomi
les
mov
pop
mov
lret
dec
outsb
jno
pop
or
cli
dec
cwtl
inc
sbb
pop
xchg
and
xchg
leave
xor
data16
dec
jb
test
loop
inc
dec
dec
push
xlat
xlat
cmc
pusha
sub
add
mov
test
push
pop
push
mov
lea
aam
mov
mov
add
stos
inc
jno
xor
inc
rorb
sbb
adc
xor
push
jne
xor
scas
or
push
mov
setnp
xchg
loopne
stc
adc
out
sbb
fidivrl
mov
loopne
sbbb
push
jne
fiaddl
dec
sbb
leave
cmp
mov
in
inc
test
rcrl
sbb
fwait
xor
movsl
sub
stos
adc
cwtl
xchg
xchg
lock
out
outsl
cmp
jne
pop
cmpl
jno
sub
ja
ljmp
sarb
mov
enter
jle
sahf
push
pop
rclb
aaa
mov
aas
cwtl
mov
das
jnp
mov
jge
andb
cld
sbb
lret
add
push
daa
adc
dec
cli
aad
adc
movsb
inc
jbe
scas
pop
clc
fwait
shlb
mov
dec
adc
jns
mov
in
dec
fsubl
push
jecxz
fldenv
adc
pop
sub
cmpsb
dec
dec
out
repz
imull
ret
sbb
sbb
loopne
adc
inc
inc
cmp
add
and
push
lret
xor
stc
hlt
mov
inc
sub
inc
xor
cmp
enter
mov
nop
mov
in
sub
popf
frstor
cmpsb
mov
ret
mov
and
adc
dec
icebp
cmp
aam
add
sti
xor
push
push
pop
sub
flds
pop
push
in
bound
pop
cs
xchg
sbb
nop
mov
shrb
adc
jne
bound
adc
mov
or
fists
push
sti
xchg
testl
cmp
lock
mov
and
push
mov
mov
aad
ret
imul
mov
add
test
sbb
daa
mov
movsl
mov
mov
scas
push
xchg
cmpsl
push
lds
pop
into
pop
sub
gs
jo
repz
xor
fwait
and
push
mov
dec
xchg
add
jg
and
adc
loop
or
sub
xchg
mov
lods
daa
sbb
dec
cwtl
mov
dec
cwtl
incl
cli
imul
repnz
or
imul
pop
sbb
mov
mov
pop
lods
adc
sbb
mov
subb
aad
das
pop
jmp
popa
push
sbb
pop
xchg
cmpsl
cs
dec
mov
daa
lds
roll
ss
testb
sub
push
jae
fisttpl
mov
rcrl
jae
sub
icebp
cs
push
cmpsb
test
push
arpl
lret
xchg
mov
addb
or
jle
xchg
cld
push
je
sub
mov
sti
icebp
out
popa
rcrb
adcl
jne
scas
mov
bswap
sub
fisubrl
shl
sub
insb
or
dec
pop
dec
and
scas
adc
pop
inc
mov
lods
test
out
push
dec
mov
in
jne
ss
movsb
sbb
arpl
aaa
out
aas
dec
roll
dec
imul
push
in
sarb
dec
mov
push
out
xchg
inc
jp
cs
or
dec
xor
cmp
outsl
sub
shrl
out
pop
shrl
cld
aam
or
mov
andl
test
sbb
mov
adc
jmp
push
jo
cs
loope
xchg
repz
xor
cmp
or
dec
mov
jne
dec
loopne
sbb
scas
insl
jp
push
lods
add
or
cmp
cmp
and
mov
sahf
inc
orb
and
hlt
lea
xchg
jbe
aad
iret
icebp
dec
and
ficoml
xchg
es
mov
lahf
or
ja
mov
rorl
lcall
rolb
pushf
clc
mov
nop
sub
outsb
in
pop
sub
mov
mov
jp
jp
fdiv
xor
call
decb
mov
inc
mov
jne
lret
mov
push
pop
cmpsl
imul
pop
pusha
sbb
cmp
loop
mov
inc
lods
sarb
or
popf
out
cmp
push
xchg
bound
daa
pop
xor
dec
jne
jp
in
and
insb
or
fcmovbe
xor
fs
ja
cmc
fsubrp
test
je
jne
add
js
push
aam
jmp
jle
mov
sbb
pop
pop
mov
fistl
sub
ret
and
lods
test
ret
sahf
scas
adc
xchg
lret
cli
imul
icebp
lret
sub
add
mov
lock
and
int
push
test
sub
mov
test
popa
aad
les
push
jne
paddw
testb
enter
aam
push
mov
mov
sub
fs
les
cli
mov
lods
lods
notb
call
sub
fldcw
xchg
xor
xor
mov
sub
fildll
fistpll
add
test
adc
enter
mov
adc
xor
jge
mov
sbb
adc
push
adc
xchg
inc
in
pop
dec
xor
pandn
xor
lret
xchg
mov
or
sbb
popf
sbb
mov
les
fwait
test
mov
lret
xchg
or
fwait
adc
jp
fs
add
pushf
lods
mulb
mov
repz
outsl
mov
dec
lock
mov
lods
xor
nop
das
aam
mov
mov
jl
xchg
dec
and
or
int3
jb
mov
mov
inc
jecxz
gs
dec
jmp
mov
enter
mov
out
adc
jb
outsl
outsb
ljmp
dec
cmpsb
loop
out
push
mov
and
mov
movsl
bound
or
aam
iret
lahf
pop
or
hlt
xchg
pop
fnstsw
mov
pushl
divl
add
mov
int3
mov
mov
mov
pop
mov
add
xchg
std
mov
rorb
rolb
xor
xor
lahf
dec
and
cwtl
adc
je
scas
pop
loop
adc
push
in
arpl
dec
in
out
fxch
sub
cmpsl
out
sub
pop
es
add
push
pop
mov
xchg
dec
mov
mov
enter
pop
fldenv
add
stc
subl
popa
rorl
cmc
dec
sub
in
cli
movsl
cwtl
mov
test
jns
jo
or
std
add
nop
rclb
outsl
mov
aam
mov
aas
gs
push
nop
mov
hlt
cmp
scas
data16
xor
or
push
rclb
pop
addr16
mov
andb
les
aas
cmp
dec
adc
push
adc
rcll
scas
add
dec
push
inc
enter
jns
cwtl
xor
ljmp
bound
pop
movb
push
or
repnz
aam
cmpsb
fistpll
sarb
cmp
pop
sarb
repz
aad
jns
pop
jge
dec
lds
mov
call
inc
pop
outsb
imul
jge
and
ss
jecxz
mov
jns
data16
rcr
mov
push
lcall
popa
lods
das
in
es
pop
mov
add
dec
pop
jno
ljmp
mov
sti
shlb
cmp
aaa
add
std
insb
sub
push
mov
ret
test
js
int
fbstp
aad
and
fstpl
mov
sub
mov
cmp
int
loopne
inc
lds
inc
andl
iret
loopne
aam
std
push
stos
dec
js
sbb
xor
mov
xchg
xchg
fs
sub
decl
cli
fsubl
in
and
roll
cmpsl
and
add
xchg
je
stos
insl
lea
mov
int3
xchg
sarl
adc
xchg
lods
mov
stos
or
adc
fisubl
mov
jge
js
inc
or
pop
fs
nop
sbbb
jge
xor
cmp
inc
adc
cli
mov
in
sub
cmpl
xlat
xor
sbb
rclb
ds
pop
and
jne
ret
push
push
dec
dec
pop
or
aas
mov
ja
pushf
loopne
out
add
int3
inc
hlt
cmp
out
inc
pushf
arpl
dec
lahf
jo
mov
pop
or
mov
sub
sbb
sbb
mov
add
adc
pop
outsl
jne
cmpsl
and
mov
pop
scas
loopne
sbb
or
pop
dec
fs
stos
pop
ja
jmp
cmc
dec
out
mov
or
lahf
pop
test
jb
sahf
mov
and
mov
add
sub
pop
and
inc
cmpsl
inc
mov
pop
mov
push
shlb
enter
ds
lods
xchg
in
test
jle
in
jb
lock
ret
psubsb
cli
adc
and
mov
cwtl
sti
sbb
jp
mov
lret
inc
add
fwait
lret
xchg
mov
inc
mov
push
sbb
pusha
jecxz
cmp
mov
jle
sub
imul
add
xor
divb
stc
xchg
gs
test
adcl
xchg
xchg
in
das
and
cli
lar
repz
xor
cld
cmp
cld
push
leave
out
inc
data16
push
stos
out
out
ja
xchg
aam
cwtl
std
aam
sahf
test
ret
add
out
sbb
inc
lahf
push
mov
push
pushf
enter
in
stos
push
mov
in
mov
xor
scas
lret
dec
out
lea
cli
loop
fistpl
lock
repz
lret
out
imul
jp
pop
inc
and
ja
pop
or
lods
into
mov
je
add
xor
mov
arpl
iret
fldenv
call
cltd
push
fsts
loope
add
dec
popa
mov
mov
loop
shll
mov
test
sbb
pop
cmp
sbb
sbb
push
jbe
out
fiadds
rol
xor
movsl
and
xor
push
adc
cld
popa
dec
pop
jbe
mov
inc
repz
leave
add
lcall
xchg
dec
les
repnz
in
cld
out
inc
adc
cmpsb
insl
shrl
or
loopne
add
inc
adc
sbb
out
shrl
out
sub
lahf
fisttps
adc
aaa
jo
push
inc
mov
notl
or
xchg
clc
jno
jmp
in
pop
mov
sbb
insb
xor
aad
fwait
cmp
cmpb
mov
aas
push
inc
inc
int
pop
cli
mov
sub
inc
inc
shlb
and
cltd
jno
sub
xchg
pusha
add
int
test
ss
ret
pop
mov
addr16
pop
outsl
out
pop
test
sbb
pop
mov
cmc
pop
mov
mov
lea
dec
sub
call
and
daa
cli
cs
js
jl
bound
loopne
jp
aad
push
push
mov
inc
sub
iret
ss
jmp
adc
mov
jo
dec
push
mov
sbb
jl
mov
add
popa
test
push
sbb
add
iret
ret
ret
loopne
cs
lahf
pop
pop
movsb
sbb
lret
mov
pop
xor
and
test
and
xor
cmp
les
dec
scas
mull
nop
sbb
std
movsb
fnstenv
fsubrs
and
xchg
pop
jecxz
call
adc
pop
xlat
xchg
jb
jb
mov
jbe
stos
movsb
shll
loopne
iret
add
enter
lahf
dec
loop
mov
sti
cmpsl
lahf
inc
daa
push
sbb
xlat
lea
sub
adc
int3
adc
mov
dec
fcos
rcl
push
dec
insb
out
ja
adc
icebp
imul
out
and
cltd
push
dec
ret
ja
xchg
jg
sbb
xor
movsl
popf
sahf
stc
fwait
testb
adc
imul
push
fisttpl
dec
cli
dec
mov
fidivs
lea
push
daa
ret
sub
jno
push
xchg
jb
ficoms
test
pop
add
mov
aam
insl
jle
jp
cmp
xchg
popaw
aaa
cmp
mov
mov
jne
stos
pop
xchg
sub
add
pusha
sub
dec
adc
inc
mov
xor
hlt
pop
xor
cmpsb
fs
inc
loopne
mov
cmp
rclb
out
jmp
sub
cmc
dec
mov
cmc
jno
mov
jl
outsl
push
add
jg
xchg
rol
dec
lea
out
jb
out
insb
cmpsb
enter
fsts
gs
inc
ss
mov
ja
lcall
imul
rorl
xchg
stos
mov
test
and
or
in
xchg
rol
es
dec
ljmp
lods
inc
push
mov
ja
cmc
sub
ljmp
add
or
add
push
aaa
inc
xchg
roll
aam
loopne
pop
and
push
arpl
icebp
nop
push
dec
ss
push
or
mov
dec
cs
rol
mov
jae
or
xchg
cmp
jnp
test
std
pushf
rol
jmp
add
cmp
inc
enter
mov
ds
nop
mov
adc
lret
mov
fs
imul
lahf
xlat
add
ljmp
inc
inc
int
sbb
pushf
fs
dec
sub
ds
lds
push
repnz
mov
mov
add
jge
jp
mov
int
xchg
mov
repnz
jle
pop
stos
sub
in
ret
pop
xchg
mov
ret
and
mov
ss
xlat
in
ficompl
mov
jnp
es
sbb
push
orb
loop
bound
mov
xchg
xchg
fstps
notl
roll
mov
sti
lock
jle
loope
dec
mov
add
mov
pop
and
insl
es
outsl
pushf
pop
outsl
cvtdq2ps
movsb
and
into
jo
dec
mov
mov
stc
jp
test
popf
mov
fsubr
sbb
jp
pushf
popa
lret
nop
decl
sbb
inc
and
ret
cmp
aam
and
stc
mov
imul
lods
jne
push
add
inc
cwtl
or
cmp
jno
cmp
arpl
push
push
inc
rol
je
popa
rcl
xchg
icebp
fdiv
fcomp
rorl
in
fwait
mov
ljmp
dec
shlb
dec
add
std
addb
mov
aam
fs
fldt
jp
inc
aam
mov
or
mov
lds
rcr
jno
jbe
cmpsb
jmp
inc
pop
cmp
das
xlat
in
sub
aam
ret
cmp
aaa
mov
pop
mov
jns
jl
inc
rcrl
outsb
in
and
insl
xchg
pop
xchg
loope
in
idiv
jmp
lds
mov
dec
loope
pop
enter
push
mov
jp
dec
xchg
mov
add
pop
adc
in
xchg
dec
int3
or
cmpsl
testl
add
shlb
lods
hlt
xchg
push
pop
push
cmpsl
or
stos
xor
mov
fsubl
xchg
scas
cmp
dec
ljmp
push
outsb
das
add
cs
not
int
and
mov
incb
aam
fs
pop
xchg
enter
lea
test
push
call
dec
lret
call
loope
jo
out
mov
fisubs
clc
dec
repz
jno
ror
sbb
mov
jge
fs
test
push
mov
in
mov
mov
add
pusha
stc
jl
movsb
inc
dec
andl
lcall
push
sub
xchg
and
and
jns
and
leave
xlat
jge
push
lods
jmp
or
cltd
dec
movsb
inc
ror
jne
pop
sbbb
stos
mov
test
cmp
fsubrs
dec
sbb
decb
cld
js
arpl
or
repz
out
xor
loopne
movsb
and
arpl
pushf
xchg
fldcw
adc
push
test
lret
mov
lcall
xchg
mov
insl
clc
mov
fidivl
add
incl
outsl
xchg
sarb
sbb
insl
int3
std
mov
ss
mov
pop
mov
mov
xor
jae
stos
pop
dec
lods
push
leave
ss
mov
mov
and
cmp
das
loop
hlt
sbb
movsl
cmpsl
pop
push
shrl
lds
je
xchg
lds
xchg
xlat
in
cmp
and
pop
sbb
push
fstps
sbb
lds
inc
cmpsl
xchg
stc
sub
mov
mov
adc
push
and
mov
and
int
dec
mov
add
mov
in
bound
cmpsb
mov
mov
mull
jecxz
lcall
in
cltd
mov
dec
push
xor
mov
push
sub
outsb
js
cmpsb
xchg
push
lods
xor
sarb
cli
addr16
ret
hlt
int3
push
push
xchg
jb
inc
xor
mov
and
mov
jmpw
sub
loopne
ret
inc
in
pop
orb
dec
inc
jnp
insb
ja
rcrl
sbb
int3
outsl
sub
push
cld
out
pusha
dec
cmp
loopne
ja
push
and
or
sbb
mov
adc
cmp
das
xchg
nop
dec
sub
lock
push
pushf
add
loopne,pt
ret
aaa
out
imulb
push
out
adc
xor
jp
add
insl
popf
jae
sub
rcll
xor
push
inc
inc
adc
xor
dec
mov
sbb
fimull
lcall
mov
mov
pop
push
clc
xchg
imul
cmpsl
push
lahf
pop
push
aaa
add
mov
lods
push
mov
aas
test
ret
xor
mov
sbb
das
jmp
mov
into
cmp
xor
aas
xor
add
mov
mov
movsb
loop
mov
mov
mov
test
mov
subl
ds
adc
cld
cmp
aas
stc
in
mul
loopne
mov
sbb
mov
aaa
sub
inc
enter
imul
jb
push
xor
mov
mov
nop
cmpsb
jae
js
mov
mov
inc
jl
adc
pop
shll
repnz
cmpsb
lds
push
popa
test
lds
daa
mov
xchg
mov
ja
sar
xor
test
and
mov
cmp
push
sub
es
xorb
mov
jne
dec
inc
pop
lret
out
sbb
popa
jge
jb
js
insl
les
popa
push
xchg
cmpsl
les
lcall
sub
cld
lods
xchg
addl
mov
sbb
adc
jo
mov
mov
jle
fdivs
mov
jecxz
scas
sti
add
fxch
jmp
jo
sbb
dec
lcall
fdivrs
adcb
mov
in
xchg
pop
cli
int3
cli
pop
fdivl
cmp
stos
mov
dec
mov
adc
addl
loop
jnp
jae
push
pop
int3
mov
fildll
addb
rorb
out
mov
cs
mov
pop
sbb
repz
push
mov
jo
mov
inc
jne
inc
jmp
sbb
xchg
xor
mov
sub
imul
popf
jbe
adc
xor
test
aam
popf
add
jns
data16
repnz
push
mov
mov
popf
dec
jle
sbb
pusha
stos
ss
insb
inc
mov
add
shlb
pop
push
mov
inc
call
stos
movsl
sub
push
lret
xchg
test
ja
jo
test
sbbb
lods
lds
lock
in
or
adc
xchg
stos
jl
icebp
inc
sub
lods
inc
lods
mov
dec
jg
rorb
negb
sub
rcll
aam
movsb
mov
sub
outsl
dec
scas
sub
jmp
in
lcall
jns
mov
xor
xchg
sahf
push
bound
push
out
pop
sbb
mov
jle
pop
and
push
enter
xchg
ljmp
inc
jmp
aas
int
mov
shlb
les
xor
and
jae
push
push
in
int
mov
pop
scas
pop
jg
sti
call
loop
lea
hlt
inc
or
inc
subb
add
rcll
lea
xor
push
orb
std
cwtl
call
pop
lret
jno
mov
xchg
sub
adcl
sbb
pop
clc
or
cli
push
addb
push
cmpb
inc
push
ret
or
pop
cmpsl
xchg
jns
mov
pop
nop
arpl
lret
aas
test
adc
ret
add
lcall
outsl
data16
in
in
int
inc
lret
mov
ficoms
mov
insb
pusha
pop
mov
jl
xchg
sbb
lahf
fdivrp
xor
sub
xchg
pop
ret
adc
out
rsqrtps
pop
lock
add
or
push
daa
mov
mov
stos
shll
cmpb
imul
xchg
add
dec
lods
pop
xor
jb
fisubrl
inc
add
sbb
jl
push
xor
jb
jmp
pop
xor
int
sbb
out
out
out
clc
xor
addr16
jb
jl
and
push
sbb
pop
or
ss
stos
addb
movsl
mov
int
fs
mov
mov
adc
loop
mov
fbld
lret
jmp
xor
ja
outsb
mov
adc
cmc
jge
mov
hlt
shll
lods
mov
sbb
xchg
repz
stc
dec
adc
lahf
popf
cld
sub
jns
mov
mov
xchg
ds
pop
aaa
lret
lahf
lds
clc
js
and
in
push
lock
sub
jbe
std
fstps
sub
jp
rorb
jo
jmp
inc
movsb
sub
loopne
mov
in
dec
in
push
and
call
out
pop
mov
enter
pushf
push
outsl
mov
push
add
pusha
insb
fdivs
lea
sbb
mov
jae
cmp
cmp
xchg
add
stc
jo,pn
mov
jmp
dec
sub
fistl
repnz
aad
fs
movq
mov
insl
ret
jne
and
imul
and
cwtl
mov
add
cmpsl
dec
sbb
jle
fcmovnb
cmpsl
sbb
pop
mov
xor
pop
add
mov
lods
xchg
insb
insl
out
mov
divb
push
movsl
aaa
xchg
sub
adcl
adc
xchg
sub
mov
bound
int
xchg
mov
fsubl
fiaddl
in
jl
and
fisubl
js
loope
push
sub
cmp
dec
cmc
and
cli
mov
sub
adc
js
xor
gs
mov
jge
pusha
xor
cmp
stos
mov
ljmp
mov
out
test
cmpsb
loopne
mov
lods
inc
jg
xor
lods
divl
xorl
into
cli
jecxz
int3
jae
jns
dec
sub
xchg
xor
and
rcl
mov
js
inc
into
lods
or
push
jmp
xlat
mov
pop
push
sbb
nop
mov
cmp
jno
push
inc
roll
cmp
sub
inc
int3
mov
push
rorl
lret
enter
mov
lods
jo
cmp
pop
test
iret
jb
xchg
mov
cmp
mov
mov
push
rorl
or
data16
adcb
push
jl
in
xchg
and
xchg
inc
xlat
xchg
push
add
jno
and
mov
jge
sarl
push
xor
decl
dec
clc
dec
mov
xchg
push
xchg
jl
cmp
int
push
cltd
js
loope
mov
and
into
and
xchg
inc
xlat
add
mov
cmc
shlw
aam
cld
test
mov
push
cmp
sub
cmp
aam
adc
mov
xchg
scas
dec
stos
outsb
push
adc
cs
in
mov
ret
out
jg
cmc
test
add
fstps
stos
scas
das
xchg
std
js
jge
dec
std
pusha
pop
sahf
xor
jg
xor
mov
fimull
outsb
or
sub
iret
xor
push
lods
ret
ficomps
sbbl
inc
cmpsb
lahf
es
das
push
arpl
aam
bound
dec
sar
inc
rcll
sbb
push
mov
inc
dec
sub
mov
loop
aaa
or
and
fisubrs
sbb
std
cld
xor
push
jmp
insl
dec
cld
stos
popa
sbb
sub
jmp
into
repnz
ds
idiv
or
pop
dec
mov
out
and
sbb
pop
in
mov
cmp
js
mov
mov
add
and
insb
add
inc
outsb
or
add
cmpsl
das
xor
and
cmpsl
push
push
loopne
dec
mov
fdivrs
mov
addr16
inc
mov
xor
andb
add
xor
adc
push
movsl
mov
loope
dec
rcrb
psllw
cli
dec
inc
int
sub
pop
fbstp
lret
lock
xlat
mov
notl
sysenter
xor
andb
rorl
inc
xor
je
sub
test
fisubs
dec
mov
movsl
mov
test
mov
popa
jecxz
popa
aad
loop
add
push
inc
incl
and
or
or
sub
rcrl
inc
xchg
pop
in
fdivp
mov
scas
das
pop
clc
int
inc
movsl
jae
cwtl
in
outsl
roll
pop
fistl
scas
outsl
pushf
lahf
loopne
das
stc
stos
cmp
push
add
xchg
jge
mov
xchg
inc
or
andl
mov
push
call
xchg
aad
jnp
add
mov
xor
sub
pop
inc
shrb
rcrl
push
cmp
aad
inc
fildll
scas
sub
aaa
mov
inc
ret
ffreep
mov
mov
enter
xchg
adc
jle
icebp
xchg
in
xor
out
push
movsl
pop
mov
std
out
cmp
inc
js
popf
cmc
xchg
movsl
mov
cmpsb
test
mov
mov
jne
mov
jl
jl
push
mov
or
add
in
lods
or
xchg
fsubrl
lds
cmp
stos
aad
or
mov
movsl
jo
push
cmp
stos
shrl
ja
lods
push
xchg
or
inc
lods
mov
push
aas
aaa
pop
lods
out
fadd
je
ret
test
inc
or
stc
test
mov
pop
and
inc
cmp
cwtl
lret
stc
or
xchg
pushf
adcb
cli
adc
adc
pop
loopne
push
pushf
jl
push
push
or
inc
xchg
mov
clc
rorl
sarb
mov
xchg
pop
ficomps
xor
cmp
push
jno
fidivrl
and
pop
das
and
lret
mov
outsb
sbb
mov
scas
inc
or
mov
pop
enter
pop
clc
addr16
pop
or
sub
cld
sahf
push
bswap
int3
pop
das
sbb
and
sub
xor
es
out
dec
pop
sbb
jne
fwait
rcl
int
lock
int
lea
scas
xlat
cld
jno
ja
cmp
jbe
rcrl
jne
out
fldt
in
sub
xchg
aad
jg
das
cwtl
inc
je
mov
xchg
add
xor
out
push
movsb
pop
sub
add
les
into
or
adc
mov
mov
outsb
sbb
mov
test
sarb
orl
mov
dec
push
mov
mov
pop
imul
adc
popa
gs
mull
mov
jb
cmpsl
faddl
std
rcrl
gs
in
pop
lods
mov
mov
into
add
movl
mov
pusha
dec
paddw
fucomi
xchg
lahf
or
or
out
shr
lods
in
ja
out
inc
pop
shlb
inc
movsl
sub
fwait
loope
aas
cltd
shlb
push
hlt
cs
jg
xor
and
sbb
nop
jge
pop
ret
cli
cwtl
je
das
sub
pop
add
test
daa
cmp
clc
cltd
dec
push
inc
inc
cmp
jmp
clc
dec
lsl
daa
sub
mov
movsb
xchg
push
push
lea
mov
push
pop
jle
jbe
mov
inc
dec
jb
rcrl
faddp
mov
push
xor
out
jg
lods
leave
fcoms
sbb
aad
mov
scas
jb
push
ds
pop
pop
or
mov
adc
cmp
inc
adc
fs
or
nop
and
enter
push
jmp
sbb
and
out
cmp
popw
and
sbb
jl
xchg
mov
mov
popa
bound
addr16
stos
sbb
dec
repnz
xor
std
xchg
test
shlb
xor
mov
sbb
in
adc
push
mov
fcoms
cmp
mov
mov
cwtl
shlb
insl
pop
mov
push
lea
or
xchg
adc
or
add
pop
dec
push
mov
outsl
inc
push
shll
jl
outsl
dec
insl
mov
push
xchg
lea
movsl
push
clc
cld
push
pop
insb
mov
in
ss
insl
loope
stc
stos
push
imul
xchg
mov
out
data16
aad
and
sbb
push
or
mov
inc
add
dec
adc
cmp
and
je
pop
mov
mov
cltd
push
push
ficoms
jg
lcall
sub
es
movsl
sub
jl
jecxz,pn
fninit
test
cmp
add
push
and
stc
sub
or
and
xchg
jae
sbb
hlt
adc
popa
sub
les
cmp
xchg
imul
cltd
nop
mov
sbb
or
in
xlat
and
and
inc
mov
sub
aad
cmp
jg
pushf
push
lods
idiv
pop
mov
xchg
xlat
mov
add
repz
stos
pop
jp
mov
and
insl
fldenv
loop
jnp
sarb
imul
push
shl
push
cmc
inc
mov
pop
mov
popa
cmp
push
imul
cmp
mov
pop
mov
or
stos
xor
mov
cmpb
fwait
in
lds
xchg
into
mov
popa
dec
add
loop
push
sub
adc
mov
int
div
xbegin
repz
jmp
mov
sub
jg
xor
sbb
cltd
testb
stc
xor
xor
fcomps
cmp
push
mov
in
repnz
or
bound
xor
pop
out
adc
rcrl
cmp
push
or
jp
fsubl
sbb
cmp
xchg
xor
notb
push
dec
gs
jecxz
xchg
sbb
pop
dec
dec
mov
out
push
xchg
or
stos
insl
int
in
pushf
or
loopne
mov
pop
and
jne
cmp
push
pop
mov
das
testl
daa
and
pop
xchg
inc
sub
cwtl
pop
daa
jb
add
ret
in
cmp
das
movsl
test
in
cld
repnz
xorl
adc
shll
nop
dec
push
sbb
or
imul
add
dec
xchg
sti
inc
roll
mov
sub
push
adc
pop
aas
cmp
jne
scas
sbb
cli
dec
lods
adc
ja
movsb
pop
or
adc
arpl
jmp
or
fildl
hlt
ljmp
test
cmc
adc
rcrl
daa
shr
lret
out
or
stos
inc
movsl
test
lds
cltd
lcall
dec
jae
pop
jecxz
and
int3
or
push
arpl
mov
mov
mov
jo
sub
adc
mov
and
ret
lret
add
pusha
enter
sub
pop
shlb
pop
shll
clc
pop
inc
data16
stos
fiaddl
cmpsl
push
pop
insb
insl
add
pop
jne
pop
jmp
outsl
sub
push
sub
jnp
rcrb
pop
mov
cwtl
je
cmpsb
xor
insb
aaa
mov
or
je
dec
xchg
out
adc
jae
outsb
xchg
xor
subb
das
push
mov
push
ret
jne
and
jo
pop
fistpll
shl
adc
mov
cmp
icebp
jo
jns
lahf
mov
cwtl
out
out
cmp
sahf
lods
cmp
dec
mov
add
mov
ljmp
pop
push
add
pop
into
xor
fcoml
ret
mov
cmpsb
cmp
sbb
rorl
fisubl
mov
das
cmp
outsl
sub
xchg
pop
int
jae
push
jns
pusha
ds
loopne
mov
pop
cmp
push
xchg
dec
and
stos
pushf
cmovg
push
jne
daa
push
sub
cmpsl
pop
lret
in
clc
data16
jmp
ds
push
data16
insb
mov
idivb
gs
xchg
sti
push
in
adc
push
add
sbb
popa
loope
sub
add
and
push
push
jge
lret
imul
andb
inc
cmp
jmp
in
pop
push
add
aas
shll
popf
pusha
popf
dec
repnz
mov
xchg
or
setge
xchg
jl
popf
cmp
js
loopne
lcall
repnz
ss
mov
aam
mov
roll
fistpl
or
mov
stos
addl
js
or
aad
mov
adc
sbb
iret
or
add
aas
leave
jne
call
add
movsb
loop
xor
lea
dec
in
push
das
mov
xor
push
insl
in
test
negb
mov
xlat
xor
aad
in
inc
push
dec
mov
fstpt
and
sbb
xorb
out
jle
aam
test
pop
add
pushf
adc
mov
and
out
into
xchg
xchg
fsin
popf
popl
ret
fsubrp
sbb
loopne
push
pop
mov
dec
insl
mov
or
push
das
cmp
dec
xchg
dec
pop
dec
mov
pop
dec
lret
lods
cmp
sbbl
stos
push
sub
mov
add
and
mov
pop
outsb
sub
fbstp
push
and
jl
jge
cmpsl
daa
lahf
push
cs
add
and
mov
dec
mov
mov
sub
imul
jo
fwait
adc
or
leave
xchg
mov
cmc
push
jne
pop
or
jnp
and
cwtl
xlat
push
mov
mov
xor
add
enter
out
mov
clc
inc
xchg
insb
push
push
mov
cmp
mov
dec
inc
pop
or
adc
fcmove
xchg
dec
mov
jl
jg
test
cmpl
pop
insl
jecxz
push
fcompl
in
stos
or
nop
or
lods
jge
roll
lret
enter
into
sub
loop
mov
sub
bound
xchg
and
das
or
mov
push
add
scas
ja
dec
fbld
sub
idivb
mov
aas
or
in
repz
popf
pusha
add
or
xchg
sub
dec
push
testb
fnstenv
pop
nop
imul
mov
mov
xchg
xlat
iret
leave
ja
ja
inc
add
rcrl
lahf
sbb
aad
add
icebp
add
dec
xchg
outsb
cmp
dec
jo
pushf
mov
jmp
mov
jbe
adcl
inc
mov
mov
nop
aad
aad
mov
stos
and
inc
jnp
mov
mov
ret
rcrl
mov
in
pop
insl
das
mov
dec
xchg
aad
xchg
das
jecxz
mov
mov
pop
fsubrp
push
adc
cli
lahf
pop
sbbl
enter
adc
jecxz
ss
jge
mov
add
add
sar
int
lahf
pop
loope
cmpsl
imul
sub
popf
dec
jge
lock
icebp
jnp
mov
out
dec
test
insb
cmp
mov
sub
cmp
int3
inc
mov
aad
sub
lods
pop
sahf
sub
push
mov
shrl
sbb
movsl
mov
ljmp
cmp
in
lock
shrb
in
pop
adc
je
adc
and
xor
push
repz
in
xchg
lcall
imul
test
sub
mov
inc
in
adc
or
loopne
inc
xchg
or
in
lahf
mov
ljmp
dec
std
mov
cs
dec
jns
ret
push
mov
das
adc
imul
aas
mov
xchg
fmuls
daa
shl
stos
push
lcall
lahf
jo
sub
lea
or
iret
xor
mov
cmp
and
jmp
jb
cmpsb
or
mov
sarb
repnz
iret
inc
rorb
movsb
and
pop
mov
fnsave
test
mov
ds
inc
fwait
int3
mov
mov
or
fisubrs
ss
into
cwtl
test
pop
mov
sbb
pop
test
aaa
test
ds
cmpl
sarb
imul
jle
jp
lahf
cmp
push
cmp
inc
and
jmp
fadds
and
xor
scas
aam
out
adc
dec
outsb
test
daa
mov
xchg
mov
loop
gs
mov
lods
push
jl
jo
std
lret
clc
push
movsb
mov
sbb
data16
sbbb
aam
and
mov
cmp
inc
mov
jb
loope
lock
pop
inc
sub
or
xchg
sub
dec
xchg
pop
dec
sub
xor
lret
sbb
pop
lods
push
or
mov
cmp
and
lcall
cmp
andl
into
movsl
imul
inc
jb
pop
test
cmpsb
pop
dec
mov
xlat
enter
mov
adc
fnstsw
int
jge
movl
xchg
pushf
mov
icebp
mov
js
repz
push
leave
outsl
jae
cli
repnz
mov
or
lea
xchg
mov
sbb
jb
repz
enter
xchg
shlb
inc
div
and
mov
dec
push
lcall
aam
cmpsl
dec
or
orl
sub
dec
xchg
add
xchg
sub
xchg
je
cld
cmp
jmp
cltd
dec
int3
test
add
jp
cmc
pop
push
mov
ljmp
xchg
mov
gs
dec
repnz
push
fsubrl
int3
int3
fiadds
jne
add
sbb
out
ss
jecxz
gs
cltd
out
sti
arpl
cmp
mov
stos
jecxz
push
mov
lcall
dec
addr16
mov
shrb
sahf
fildl
xor
xchg
dec
scas
fnstsw
fldenv
test
jle
sarb
pop
shl
inc
arpl
pusha
stos
sqrtps
out
add
jne
psrlq
mov
mov
aaa
add
fidivrl
dec
jnp
out
push
in
cmp
inc
jae
ss
aam
jbe
xor
paddb
shll
add
jo
dec
cmp
jo
pop
lcall
jns
hlt
bound
enter
insl
loope
imul
in
xchg
test
push
in
call
mov
add
inc
iret
icebp
push
mov
gs
add
out
mov
aad
mov
out
push
jne
enter
lods
les
fldl
lock
inc
jnp
ret
mov
xchg
les
test
nop
cwtl
sahf
mov
sbb
movsl
or
jge
and
cs
out
mov
add
pop
test
iret
xchg
xor
invd
add
loopne
adc
xchg
sbb
enter
pop
stos
aaa
mov
rolb
pop
das
add
mov
hlt
push
jne
data16
inc
add
add
cmp
or
cmp
popa
push
mov
ja
pop
out
call
add
dec
xchg
outsb
sub
mov
sub
and
out
or
jmp
movsb
mov
pop
xchg
xor
cltd
cwtl
or
fdivl
inc
clc
mov
mov
xor
inc
aad
roll
xchg
mov
out
add
xor
dec
movsl
sbb
in
mov
xor
adc
bound
xchg
and
xchg
inc
insl
and
movl
xor
mov
stos
shlb
imul
sti
inc
cmp
pop
idivb
insb
push
push
xor
xchg
jb
popf
loopne
dec
add
daa
sub
das
test
adc
inc
mov
ficomps
sbb
push
insb
mov
sub
je
inc
pop
js
jae
dec
sub
sbb
adc
loope
mov
mov
and
shrl
notb
iret
inc
shrl
arpl
mov
inc
cltd
adc
push
pop
sarb
sub
dec
movsl
loopne
xlat
jp
fwait
test
jp
pushf
jl
test
test
sbb
lea
popl
dec
xor
and
mov
insb
movsb
inc
adc
push
pop
sbb
cmpb
rcll
pushf
lret
sub
add
std
jmp
pop
mov
mov
mov
pushf
je
addr16
lret
xchg
sbb
sbb
das
add
mov
mov
aaa
push
and
xchg
xchg
mov
push
sbb
movsb
xor
out
mov
inc
daa
and
aad
or
mov
iret
mov
sub
mov
xchg
test
sub
mov
repnz
pop
xchg
add
lret
movsb
ret
mov
iret
stos
jmp
mov
add
mov
ret
les
mov
cmp
add
scas
lods
repz
test
push
push
dec
out
xor
mov
test
lahf
jge
sub
add
arpl
mov
in
cwtl
cmp
add
das
jmp
ret
fwait
insb
dec
dec
xchg
pop
xchg
inc
cmp
sbb
xchg
mov
data16
roll
inc
in
cmp
aas
xchg
sbb
repz
sub
sbb
mov
sub
out
adc
push
outsb
jmp
stos
dec
into
notb
push
sub
shll
dec
mov
mov
aaa
jno
inc
mov
push
jmp
negl
andl
wrmsr
sti
cmp
or
js
cmp
fs
in
rcrl
mov
pop
sub
jnp
rcl
pop
pushf
or
addl
inc
xchg
push
cwtl
inc
or
ret
js
pop
xor
std
cli
repnz
leave
outsb
repnz
dec
sub
lea
into
push
xor
cmpsl
sub
test
montmul
cmpsb
test
fdivs
mov
insb
mov
test
insb
cmp
mov
fcomps
jae
xchg
mov
lods
call
cmpsl
jbe
pop
xor
popf
aas
mov
xor
mul
jg
dec
adc
test
gs
cmp
jl
call
jae
xlat
rorl
add
inc
xchg
insb
daa
lods
sbb
cli
adc
cmpsb
in
aas
in
xor
hlt
out
jle
xor
mov
sarl
incb
idiv
loope
xor
pushf
mov
inc
and
and
ret
dec
mov
fnstenv
sbb
cmp
test
scas
and
adc
dec
loop
xor
and
xor
shll
sbbl
cmpsb
sahf
mov
stos
int3
out
jl
inc
mov
mov
ret
mov
ja
stc
je
sub
mov
xchg
push
inc
add
stc
or
fwait
pop
jbe
add
je
mov
cmp
jecxz
rcrb
mov
lret
test
cmp
das
out
sbb
movsl
jae
add
lret
int3
data16
jae
imul
pop
mov
mov
push
pop
shlb
mov
rcrl
push
cmp
or
enter
mov
xorb
adc
push
cmp
jo
add
jnp
mov
inc
scas
clc
sub
xchg
sbb
movsb
clc
int
ja
mov
mov
lods
jl
ja
loopne
aam
xchg
push
xchg
xchg
xor
mov
lea
scas
clc
negl
es
mull
std
cmc
jb
jge
aam
mov
pshufd
pusha
int3
lcall
out
xchg
ret
jne
jnp
stos
popa
loop
into
jne
add
ds
xor
fcmovnb
push
sub
jle
sbb
daa
or
filds
insb
inc
cmp
xor
add
lds
mov
das
ss
jns
lcall
rcll
imul
mov
insl
rcll
xor
push
cli
add
cmp
mov
xor
out
inc
lds
xlat
imul
les
cmp
jmp
fsubl
jl
mov
cmp
out
loopne
jnp
fldcw
jnp
fildll
jb
and
cmpsl
adcb
mov
movsb
mov
sbb
lret
cmp
xor
ret
mov
movsl
fiadds
mov
fists
nop
aam
fwait
adc
mov
and
xlat
dec
sub
cmp
mov
and
mov
ljmp
sub
in
sahf
xchg
push
dec
pop
lock
out
pop
bound
stc
lock
cmp
nop
dec
mov
mov
stos
xor
popa
push
imul
bound
fucomip
xchg
pop
mov
pop
mov
xchg
xchg
dec
nop
sub
mov
sub
mov
jl
into
add
fimull
sti
xor
insb
mov
sbb
mov
sti
scas
outsl
inc
imul
xchg
mov
push
decl
aad
dec
sub
insl
out
outsb
rcr
and
jg
es
test
shrb
mov
mov
aam
sti
add
mov
punpckhdq
push
mov
cmc
dec
fistps
aam
cmpsb
dec
add
add
pop
bound
lahf
jmp
mov
ja
jb
sbb
or
cmpsb
xor
jp
or
mov
adc
ljmp
adc
pop
mov
divl
idiv
out
xor
adc
push
ja
fldl
push
mov
jp
xchg
loop
sbb
sub
jge
xor
test
pop
dec
dec
int
and
rorb
outsl
daa
mulb
dec
cltd
jae
add
gs
sti
mov
outsl
dec
in
out
jmp
inc
pusha
loop
xlat
outsl
add
cmp
dec
lods
shlb
pop
mov
jns
arpl
xchg
dec
lcall
imul
movsl
jb
loop
mov
je
inc
lods
and
jbe
jnp
test
hlt
mov
mov
xchg
mov
sub
cmpsl
push
fsubrs
cmpsb
push
pop
mov
cmp
rcrl
hlt
cli
sahf
pop
arpl
leave
notl
inc
push
inc
incb
fsubrl
cmp
jecxz
xchg
mov
xchg
xlat
jecxz
fidivrs
and
push
mov
mov
lret
repz
test
mov
or
adc
lret
and
adc
cmpsb
dec
mov
lock
mov
outsb
test
jo
sub
inc
jg
outsb
push
lahf
push
xchg
xor
mov
xchg
test
cmpsl
shll
std
cmc
cmp
push
inc
call
out
dec
sbb
movsl
xchg
dec
xor
jmp
mov
jae
add
add
sti
mov
test
jl
inc
insb
cmpsb
loope
rcrb
nop
inc
cmpb
jg
imul
mov
stos
int3
or
or
pop
add
jns
enter
pushf
adc
les
in
jno
scas
cmp
lret
js
pop
xchg
pushf
mov
aad
xchg
sub
popa
lods
outsb
xchg
cmp
divb
adcb
lods
xor
dec
cmp
int3
pop
out
sti
imull
rcr
stc
adc
jmp
push
cs
stc
test
lea
ljmp
mov
jl
movsl
mov
dec
inc
daa
push
gs
imul
lret
mov
xor
iret
or
mov
or
adcl
push
jnp
cmp
stos
and
pop
xchg
loope
repnz
arpl
mov
addb
test
add
xor
lret
push
mov
test
lret
add
call
add
std
inc
mov
pusha
sbb
xchg
cmp
cmpsl
cmp
sarl
add
or
push
xor
push
mov
gs
mov
pop
movups
ret
out
test
push
adc
cmp
lcall
loopne
mov
pop
sub
mulb
cmc
mov
cmp
jp
addr16
test
cwtl
ja
and
dec
mov
mov
mov
push
xor
popf
lds
test
fnstcw
andl
loope
imul
lahf
jo
mov
dec
jbe
ss
jae
and
xor
sub
and
mov
xchg
cmp
nop
mov
rcrl
mov
add
mov
sbb
or
cmp
shrl
adc
shlb
ret
insb
fdivrs
push
adc
push
mov
popf
je
sub
inc
mov
outsb
rcrl
cmp
iret
pop
sbb
mov
and
adc
and
pop
jbe
nop
xchg
xor
jle
in
adc
clc
popa
fsub
mov
dec
pop
lods
sub
fcomps
test
adc
popa
or
mov
add
mov
test
pop
or
and
push
or
xor
mov
std
stos
xchg
sbb
fstps
pop
cmp
mov
xor
in
out
mov
push
dec
lret
nop
test
jne
and
iret
sbb
aam
sub
mov
xor
mov
cmp
mov
adc
test
outsb
enter
pop
scas
lcall
adc
mov
shlb
jb
add
dec
and
sub
and
mov
sahf
cmpsl
aas
mov
out
popf
adc
cmp
fisttpll
in
aad
cmpsl
mov
lock
add
dec
es
and
test
lcall
xlat
cmp
in
cwtl
subl
mov
jl
cmp
pop
nop
ja
mov
mov
pop
inc
adc
idiv
inc
add
pop
push
push
decb
movsb
push
outsl
mov
out
rorl
ljmp
add
outsl
ret
lret
and
sub
adc
mov
daa
add
jg
and
and
je
repz
jmp
icebp
fsubs
mov
or
inc
sbb
mov
jl
dec
repz
test
out
hlt
icebp
fildll
inc
push
push
xor
sarb
dec
mov
and
mov
lret
test
sbb
add
test
xchg
push
subps
loopne
add
lret
ret
cli
pop
call
in
cld
jecxz
inc
add
inc
in
decl
fbstp
cmp
add
call
xchg
mov
loopne
jbe
insl
lds
adc
cltd
push
lods
push
popa
leave
push
out
dec
adc
inc
cwtl
dec
sbb
sarb
loope
or
icebp
pop
push
sub
sahf
and
iret
jmp
into
and
cmp
xchg
push
fwait
cmp
ret
mov
mov
xchg
inc
je
sbb
loope
add
mov
data16
inc
icebp
xchg
stos
outsl
xor
cmp
fucom
stos
rolb
mov
ds
int3
pop
jae
or
lds
enter
test
xchg
notb
arpl
dec
sbb
mov
pop
sub
mov
mov
push
push
in
xchg
sbb
out
daa
add
shll
push
inc
dec
pop
xchg
xchg
enter
out
aaa
ficompl
add
xchg
mov
in
push
mov
aad
stos
sub
jecxz
loope
es
push
dec
insl
ret
add
cmc
and
pop
jge
mov
jo
fcomps
push
mov
add
mov
mov
or
inc
cltd
in
fstpt
mov
push
or
push
xchg
das
ja
in
je
jne
and
add
test
out
pop
idivl
pop
rolb
or
fwait
push
sub
jl
in
fs
and
loopne
mov
xlat
lock
mov
lock
cld
adc
mov
movsl
xchg
sub
stos
jle
mov
loop
popf
push
xor
jge
cs
push
pop
or
add
dec
xchg
pop
int3
xor
fs
into
orb
adc
lea
mov
movsl
int
test
aaa
mov
sbb
mov
sbb
xchg
push
ret
shl
out
ficoml
and
sbb
xor
jecxz
in
and
aaa
insb
sbb
test
add
imul
out
in
push
push
insb
cmpsl
mov
mov
dec
push
notb
in
scas
fldl
cmpsb
mov
cwtl
rclb
inc
fistps
test
push
mov
lcall
cld
xchg
sbb
xchg
hlt
movsb
dec
xchg
sub
adc
sti
testl
jne
leave
paddb
xchg
mov
pop
mov
mov
movsl
cmpsl
negb
push
inc
cwtl
in
sub
jae
push
insl
stos
jmp
push
jae
jl
scas
pop
inc
int3
std
adc
and
imulb
adc
stos
lahf
xor
jecxz
lods
fistpl
pop
add
fdivr
push
lock
cmc
adc
inc
cmp
addr16
jo
jo
jns
stos
or
in
in
rcll
pusha
adc
lahf
sar
lret
lea
jp
iret
scas
mov
es
in
popa
fs
mov
adc
clc
inc
xchg
push
nop
jb
add
sub
lods
pop
dec
insb
mov
popa
add
push
pop
mov
xchg
lcall
les
rcll
lock
jle
out
adc
jnp
sbb
pop
xor
push
test
das
scas
add
push
cmc
xchg
xchg
jge
lods
sub
adc
test
dec
aas
sarb
cmpsl
lcall
dec
cmp
jmp
shrb
push
cmp
push
add
cmp
lcall
push
xchg
stc
dec
mov
enter
fiaddl
imul
jp
fisubl
mov
or
movsb
out
movsl
cmp
jp
scas
clc
sbb
mov
jnp
xchg
test
stc
dec
xchg
inc
push
shll
or
mov
xor
adc
hlt
and
xchg
shlb
testl
clc
xlat
es
mov
mov
mov
xchg
dec
push
add
push
mov
fimull
jmp
dec
dec
mov
movsl
cmc
jg
loope
stc
mov
std
push
stos
sbb
ret
xchg
mov
push
cmp
mov
arpl
pop
scas
imul
dec
push
pushf
mulb
in
jle
xor
mov
aam
cmp
in
adc
ja
pop
es
pop
mov
xorl
arpl
adc
inc
jnp
pop
adc
push
dec
xlat
decb
adc
cmpsb
pusha
lcall
xor
and
iret
ret
test
loope
adc
imul
jl
add
mov
loope
and
add
out
lock
fnstenv
xor
inc
xchg
incb
sub
mov
lods
lcall
mov
add
test
xor
pushf
iret
iret
add
sbbb
xor
dec
and
mov
clc
mov
imul
adc
outsb
push
lods
jb
and
or
hlt
stos
inc
aaa
sbb
fcomip
rcll
lcall
xchg
shl
cmpsb
in
iret
push
dec
cmp
negb
inc
pop
ss
xor
inc
inc
pop
xor
inc
movsb
sbb
movl
or
daa
clc
cmpsb
pop
mov
iret
lahf
ret
or
mov
mov
jecxz
mov
xor
push
cmp
sbb
mov
fiadds
sbb
jae
pop
sahf
dec
std
aas
jl
xchg
xchg
mov
shl
dec
insl
adc
negl
hlt
or
outsl
inc
dec
xchg
insb
mov
mov
cmp
xor
mov
dec
daa
mov
mov
or
call
or
lret
addr16
cmp
mov
loopne
std
add
stc
push
mov
popf
stos
neg
stc
jle
rcrb
mov
xor
mov
inc
cmp
pop
sbb
sahf
sub
in
push
cmp
fbld
repz
mov
loop
fisttpl
mov
jae
sbb
or
fdivrp
lret
sbb
inc
sti
clc
xchg
les
xor
lea
repz
and
ds
push
cmp
pop
aam
jae
sbb
lcall
inc
dec
aad
cs
std
iret
loop
in
ja
mov
push
adc
jae
int
jle
xchg
dec
or
je
mov
cltd
aaa
or
mov
je
adc
sbb
mov
mov
enter
repz
call
adc
sub
xchg
adc
or
push
fcoml
pop
pop
cs
in
lea
cmovp
mov
jl
and
xorb
cs
sub
fidivrl
lcall
mov
insl
sbb
xchg
nop
sbb
test
mov
sbb
testb
mov
lds
mov
mov
popf
mov
arpl
jg
mov
stc
push
shrl
clc
sbb
pop
add
aas
inc
movsb
cmp
fucom
jg
cmp
lea
leave
fldcw
mov
jg
xchg
lahf
popl
data16
mov
mov
ss
fcomip
jg
popa
pop
std
hlt
divb
imul
dec
adc
sbb
das
push
ret
sub
xchg
xor
dec
jecxz
push
push
jle
push
jns
push
enter
nop
pop
gs
jl
aas
lock
pop
fs
daa
or
mov
sti
lods
in
repnz
ja
sarb
mov
push
jp
cs
pop
or
outsl
mov
rclb
xor
sahf
jecxz
int3
inc
in
add
dec
push
fcoms
jns
or
sub
dec
test
add
jbe
adc
inc
cmp
jmp
pop
and
popa
sbbb
stc
loop
iret
xlat
outsl
jle
fs
loop
loopne
pop
adc
mov
xchg
imul
add
icebp
subb
iret
lcall
sub
push
and
pop
popf
sbb
ftst
and
inc
imulb
aam
psubb
mov
inc
in
movsl
xlat
sub
addr16
popl
loop
fcoml
pop
hlt
jbe
inc
jmp
cltd
adc
mov
iret
pop
shll
adc
cld
jnp
or
inc
pop
push
push
push
push
stos
outsl
dec
aaa
sub
roll
rcrl
push
push
add
or
outsl
xchg
xorb
inc
jmp
roll
gs
lods
add
mov
cld
jno
jbe
add
fmuls
std
lock
push
xor
jle
jmp
cmp
push
mov
sub
mov
lods
dec
int3
loop
or
scas
pop
push
fldl
pop
mov
adc
cmp
inc
out
pop
inc
lcallw
jnp
adc
aad
test
clc
in
data16
shll
push
dec
xchg
cwtl
scas
adc
push
mov
cmpsb
xchg
jne
scas
push
push
add
mov
aam
hlt
sub
inc
or
mov
rorb
imul
mov
xorl
fsubs
repnz
adc
cmp
js
and
cwtl
pop
fwait
pop
rorb
jl
pop
adc
shr
cmpsb
cmp
fidivrs
or
xchg
clc
mov
sbb
faddl
cmp
movsl
xchg
es
xorl
stc
data16
mov
and
or
nop
mov
scas
adc
or
out
in
idiv
int
add
mov
push
pop
ja
xchg
mov
test
xor
out
cmp
cmpsl
sub
sbb
mov
sbb
sub
sub
xchg
sbb
sbb
gs
push
sbbb
xlat
test
sbbl
popa
cmpb
arpl
mov
aaa
in
sub
jnp
and
int
lret
stc
cwtl
xlat
and
popf
nop
dec
mov
push
repz
add
mov
gs
lds
pop
les
dec
stos
xchg
or
xchg
out
mov
mov
nopl
xor
fs
loope
call
bound
sbb
jecxz
inc
mov
jg
aad
icebp
jge
push
adc
in
adc
out
sbb
xchg
xor
inc
adc
xchg
dec
xchg
push
fwait
jge
jbe
pushf
out
cs
push
mov
out
orl
in
filds
aam
sbb
idiv
pop
sbb
daa
test
cs
enter
fnstsw
and
pop
push
sub
or
jge
and
cs
fwait
push
sarb
dec
aam
in
daa
sti
push
adcb
insl
fwait
add
mov
pop
mov
test
add
rcl
aad
xor
lret
mov
adc
and
lahf
push
inc
out
add
jns
jp
push
lods
xor
mov
outsl
out
or
push
adc
mov
int3
pop
dec
loopne
enter
and
cmpsb
es
aad
int3
add
ds
pop
mov
mov
je
push
jge
sub
test
popf
insl
addr16
gs
aaa
adc
jle
push
sahf
pushf
aas
aaa
and
pop
fisubrl
ret
nop
pop
xchg
xchg
pop
shl
imul
sti
pop
xor
lds
shl
push
push
sahf
xchg
ss
insb
lcall
inc
inc
lcall
xor
lods
lock
cltd
jmp
mov
jp
or
and
pop
and
xor
imul
fcmovu
aam
rorl
int3
jo
hlt
lock
jl
jno
fbld
leave
xchg
cmp
jp
pop
sbb
sbb
push
xor
in
push
cli
xchg
add
ja
insb
je
testl
mov
pop
mov
in
aam
xchg
mov
xor
lcall
cli
push
cmp
sub
hlt
jg
aad
fnstsw
das
std
pop
arpl
insl
imull
inc
adcl
mov
jnp
sahf
push
int
ret
pop
inc
stos
push
stos
inc
insb
in
lahf
adc
adc
sbb
mov
loope
xchg
mov
mov
fstps
je
cmpsb
mov
repnz
jmp
or
rclb
pop
push
or
jnp
dec
mov
push
sub
add
push
or
fldl
xor
aad
or
pop
and
or
mov
out
jo
jns
dec
fidivrs
orb
xchg
mov
xchg
xchg
or
lds
xor
lcall
xchg
retw
popf
pushf
xchg
cld
and
jg
or
jmp
add
jnp
cs
out
fsubs
sub
pop
push
dec
xchg
push
lahf
test
inc
pop
ss
cmp
in
xor
cmp
adc
shlb
adc
push
push
sub
pop
xor
imull
mov
out
js
cwtl
test
adc
push
in
dec
inc
cmp
int3
cld
ljmp
rcll
pop
repz
sahf
dec
rcrb
xchg
sti
jecxz
dec
jl
dec
mov
pushf
clc
loop
repz
pop
iret
push
xor
cmp
push
fimuls
and
mov
adc
or
fs
jno
inc
jg
push
out
imul
mov
xor
pop
sbb
test
xchg
cld
pop
insb
inc
jp
repz
mov
jno
xchg
test
shlb
popf
pop
jo
cld
ljmp
add
or
int
insb
inc
das
push
push
jnp
and
push
mov
xchg
xor
stc
shl
scas
outsl
pop
mov
pop
loop
dec
stc
jg
xchg
clc
fimull
mov
shlb
sub
mov
push
xorl
lods
lahf
mov
dec
jo
stc
movsl
fstpl
or
push
mov
ljmp
movsl
mov
movsb
ja
ljmp
adcl
mov
jg
xchg
mov
xlat
rclb
sarl
push
cmp
das
xchg
cmp
cmpsl
out
sbb
outsl
shll
mov
mov
xchg
iret
lahf
movsb
add
mov
jne
adc
out
mov
mov
pop
aam
in
call
imul
add
mov
test
js
push
out
pop
xorl
pop
nop
sbb
int3
mov
mov
sub
pop
movsb
icebp
pop
lock
adc
dec
mov
push
mov
mov
mov
jmp
cmp
fcmovu
push
inc
shll
sbb
xlat
or
stos
xor
lods
xchg
xchg
mull
enter
jo
call
push
dec
or
rorb
dec
dec
daa
adc
popf
xor
add
xor
pop
popl
jo
jmp
or
sub
rclb
stos
loop
mov
mov
lcall
mov
push
xor
and
in
popa
stos
pop
and
xchg
mov
mov
in
jo
outsl
jno
push
divl
push
es
push
shlb
and
mov
roll
jno
or
std
sbb
loope
pop
dec
aas
aaa
adc
mov
jb
cmp
lret
fstpt
sahf
add
repnz
sub
pop
test
jnp
icebp
mov
jmp
cmpsl
cmc
xor
in
and
sbb
cmp
enter
mov
push
cltd
stc
mulb
shl
pop
push
jne
add
inc
xlat
aad
jle
aad
cmp
mulb
ret
das
mov
addr16
icebp
out
and
mov
shll
dec
or
xor
lret
sub
dec
scas
pop
out
dec
cli
add
xchg
cmp
stc
data16
es
inc
xor
add
adc
dec
rcrb
sbb
mov
and
xchg
jb
sub
cltd
push
xor
push
adc
xor
ret
out
lea
mov
repnz
add
fidivl
sbb
jne
scas
mov
and
iret
addr16
movsl
lods
loope
lret
mov
sub
add
lahf
xor
test
mov
jp
mov
add
jge
fisttpl
sub
cwtl
xchg
sti
stos
jmp
movsl
imull
xchg
jg
mov
in
jmp
dec
cli
xchg
lds
xor
add
xor
xor
outsl
mov
repnz
mov
inc
test
insl
shrb
mov
aas
fcomps
mov
ret
push
aam
mov
xchg
lods
cmpsb
inc
add
rcrb
out
jle
or
aas
and
bound
inc
fwait
cmp
add
sub
adc
pop
add
in
test
in
or
cmp
push
lret
hlt
mov
mov
xchg
loope
xchg
jne
xchg
retw
and
lret
in
or
je
lahf
out
cltd
shlb
and
movsl
push
scas
and
leave
push
or
sbb
loop
aam
inc
cmpl
ljmp
xlat
mov
sub
insl
xchg
int3
sbb
stc
xchg
and
jnp
xchg
les
adc
add
data16
inc
cmp
iret
icebp
orl
xchg
mov
cltd
inc
and
inc
inc
push
sarb
shr
jge
scas
outsb
dec
mov
fwait
fs
xor
stos
insl
daa
mov
jo
jp
inc
fwait
lret
mov
out
inc
jg
jo
ror
lods
int
lcall
stos
in
imul
or
xchg
jg
inc
daa
nop
pop
stos
xchg
subl
cmpl
scas
mov
jle
hlt
xchg
or
frstor
lods
pop
dec
mov
mov
nop
leave
push
inc
sub
int3
jne
fcoms
into
fldpi
jg
aad
pop
stos
jnp
lds
xchg
push
and
jae
rol
int3
inc
and
movsl
in
jecxz
jno
fldt
data16
push
adcl
leave
sti
push
lret
push
jl
xor
in
sbb
and
repnz
xor
shr
loope
nop
shll
pop
mov
mov
pusha
lret
push
jle
jae
xchg
lds
dec
rcrb
and
movsb
imul
mov
fwait
in
repnz
and
outsb
and
cmp
imul
setbe
push
fnstsw
mov
xchg
arpl
testl
mov
call
push
cwtl
sub
icebp
dec
je
or
jl
push
ljmp
call
or
popl
stos
pusha
lretw
dec
imull
jne
adc
adc
int
push
sub
lcall
ds
xor
pop
xor
aam
dec
icebp
push
jecxz
fwait
imull
call
in
nop
jo
add
movsb
addr16
or
xchg
rcrl
loop
out
adc
push
lock
jbe
push
ljmp
std
sahf
addl
sti
bound
repz
or
add
add
dec
xor
push
xchg
mov
mov
jae
ficompl
cmp
pushl
into
cmp
enter
aaa
sarl
popa
cmp
adc
out
adc
push
into
sbb
insl
sub
enter
fs
sbb
push
inc
lsl
stos
orb
rclb
push
xchg
inc
mov
cmp
and
pop
sbb
add
sub
repnz
xchg
mov
into
addr16
insb
push
xor
mov
add
push
push
mov
sti
mov
stos
dec
mov
jnp
ret
or
stc
xchg
out
adc
cmpl
in
push
or
dec
sarl
fiadds
ficoml
mov
sahf
dec
int3
int
leave
fcompl
std
mov
inc
push
popa
cmpb
mov
outsl
mov
lods
xor
je
in
pop
aad
jle
into
mov
es
aad
or
xchg
je
inc
lret
mov
pop
mov
mov
jmp
cmp
mov
rcll
cli
mov
outsl
fiadds
mov
cmpb
dec
push
lret
dec
jns
repz
outsl
pop
push
add
mov
js
push
fimuls
mov
es
push
cli
mov
cwtl
iret
mov
jecxz
imul
out
pop
mov
les
dec
jecxz
lods
sbb
add
shlb
imul
xlat
sysenter
mov
pop
leave
lret
mov
out
sub
clc
addr16
out
aaa
push
imul
sub
jbe
adc
cld
movsb
pop
mov
sub
push
pop
scas
movsb
add
addr16
out
dec
mov
sbb
fisubs
xchg
adc
sbb
clc
xchg
fs
lahf
in
cmp
rorl
inc
mov
push
jne
ja
cmp
jecxz
je
mulb
cmovbe
mov
mov
mov
sub
dec
xchg
sbb
and
add
dec
adc
mov
add
jge
in
xorb
dec
loop
subb
or
cmp
shll
fs
mov
out
ljmp
mov
inc
lods
mov
pop
mov
sbb
push
fwait
jo
rcrl
and
dec
ficomps
std
xor
mov
es
xor
pop
cmpsl
push
or
rcl
jns
jae
insl
lea
mov
aad
testl
pop
push
cli
lcall
stos
adc
shrb
in
aaa
push
rol
mov
pop
and
clc
and
aad
test
out
loopne
jb
nop
sbb
leave
xchg
in
cmc
js
mov
inc
dec
xor
lahf
mov
icebp
cmp
push
test
int3
lock
or
push
dec
xchg
fwait
push
pop
in
int3
shlb
jo
test
dec
test
cltd
cli
sub
mov
imulb
jb
arpl
add
lahf
push
gs
loope
int
adc
clc
stos
adc
mov
je
sbb
mov
add
mov
add
rorb
jae
mov
jno
push
xor
adc
pop
scas
adc
sbb
dec
xlat
test
outsb
xor
xlat
push
inc
cli
sub
and
inc
movsb
cmc
hlt
dec
mov
cs
pop
sub
shr
aaa
enter
push
push
dec
dec
sbb
cmp
and
out
adc
jge
addr16
xchg
sub
xchg
xchg
pusha
outsl
xor
cmp
test
xchg
jg
mov
adc
sub
cmpsl
subl
pop
pop
push
je
pop
movsl
mov
dec
loope
xchg
into
cmp
rcll
xor
sub
push
mov
add
in
pushf
stos
or
in
icebp
mov
addr16
fisubrl
test
lea
and
pop
jl
jle
stc
lcall
sub
mov
mov
je
xchg
xchg
push
push
ss
fiadds
inc
sub
mov
es
dec
clc
out
outsl
xchg
and
daa
adc
mov
popa
dec
cs
icebp
repnz
ss
outsl
push
adc
dec
inc
into
lcall
add
vmread
or
stos
mov
faddp
dec
rcrb
ret
pop
and
cmp
mov
sbb
xor
imul
jge
into
insb
test
jo
mov
ja
ds
and
notb
mov
fdivs
outsl
in
mov
in
pop
test
xchg
and
lcall
fldlg2
call
loope
push
add
ficomps
mov
sbb
lahf
sbb
jmp
dec
and
rcrb
and
leave
aad
xchg
inc
pop
inc
add
loopne
mov
call
iret
dec
mov
sub
pushf
out
jns
mov
adc
loope
mov
jp
mov
push
insb
sbb
inc
adc
and
pop
mov
xor
ljmp
or
lea
dec
cmp
stos
cld
popf
and
dec
popf
and
xor
outsb
pop
or
push
mov
insb
mov
pop
lret
lods
jo
xor
inc
mov
aad
test
adc
push
adc
test
push
nop
std
frstor
test
push
cmp
nop
mov
movsb
dec
adc
xchg
daa
insl
inc
cmp
or
xor
repnz
jne
test
sub
adc
ficoml
stc
push
mov
aam
sbb
stos
push
dec
mov
xor
addps
push
jl
aaa
in
shl
fsub
std
inc
popf
icebp
add
clc
call
insl
nop
gs
mov
jle
roll
lds
adc
lret
stos
call
scas
mov
jbe
add
jnp
or
dec
test
jmp
and
and
leave
or
xchg
call
cltd
jl
sahf
push
movlps
adc
dec
xchg
hlt
pop
xchg
jae
sub
xchg
ret
js
out
inc
dec
jb
or
dec
jbe
movsb
adc
mov
scas
into
fsts
cli
faddl
pushf
sbb
cmc
icebp
das
ja
jb
stos
mov
push
lret
insl
xorb
pop
call
dec
fs
mov
sti
ss
ljmp
jno
and
pop
inc
filds
sbb
enter
pop
cmp
xor
pop
pop
std
dec
in
inc
pop
sub
imul
cltd
mov
lods
mov
push
xor
test
lret
lods
dec
or
insb
pushf
and
dec
xlat
test
sbb
jae
adc
mov
and
outsb
loope
push
jg
jl
add
stc
pusha
cmpsb
sbb
pop
xchg
inc
movsl
pop
cli
sbb
rorl
mov
push
jbe
sahf
lret
stos
movsl
jp
jg
shrl
jo
les
mov
inc
movsl
mov
stc
popa
mov
mov
xchg
push
mov
add
pop
test
pop
dec
test
lods
cld
imull
int3
xchg
cmc
int3
loope
push
add
roll
vpsubsb
lds
in
cli
imul
rclb
inc
push
sub
lock
imul
xchg
test
adc
xchg
cmp
jne
cmp
mov
movsl
inc
xor
mov
mov
inc
jnp
lret
in
mov
mov
repz
push
ret
cmp
mov
fiadds
cmc
int
gs
lock
repnz
mov
sbb
inc
xor
cwtl
add
out
pop
mov
jns
test
jl
xor
push
lcall
and
jge
into
jbe
pop
andl
mov
out
or
ret
and
mov
push
adc
inc
adc
out
pmaddwd
pop
xor
inc
adc
or
adc
jp
add
mov
jns
jle
push
test
pop
push
test
mov
hlt
push
push
aaa
jle
in
xchg
subb
pop
dec
in
add
ja
or
hlt
test
stc
pop
xor
push
pop
and
xor
fldt
jo
jno
scas
in
xchg
daa
and
lds
jns
icebp
outsb
cmpsb
push
in
je
xchg
mov
out
lock
mov
fisttps
sbb
sub
xor
xor
les
dec
ret
xor
loope
sbb
int3
dec
lahf
imull
out
mov
in
and
mov
out
sbb
dec
mov
cmpsb
movsb
pop
adc
add
imul
mov
aaa
push
test
loop
in
cmp
popa
iret
in
pop
pop
dec
cwtl
fbld
jmp
idivb
pop
xor
test
std
push
clc
es
stos
ret
sub
push
mov
jle
test
or
loop
les
pop
leave
and
add
cmpsb
out
add
decb
and
jmp
fcmovb
jg
mov
inc
dec
dec
jl
sbb
adc
cmp
js
adc
ret
jle
jns
test
xchg
outsl
mov
adc
int
fildll
sbb
jmp
jge
fstp
sti
outsl
loop
outsb
and
pop
dec
nopl
inc
adc
insb
ror
xchg
bound
adc
cwtl
loopne
cmpsl
sahf
jp
inc
addb
mov
aam
jl
inc
xchg
iret
push
push
jne
pop
ss
jns
leave
xlat
add
lret
test
jl
or
xor
je
cmp
mov
vmovaps
cltd
pop
mov
test
cmpsl
mov
pop
lahf
jg
xor
test
adc
imul
movsl
jl
cmp
lods
cmc
sub
cmp
mov
into
jmp
vcvtdq2pd
jle
insb
mov
shrb
adc
pop
cmp
inc
call
jle
push
shll
inc
nop
rclb
mov
add
adc
repz
jmp
mov
sahf
pop
xchg
fisttpl
fwait
paddw
pop
mov
add
insl
lods
cmp
xchg
sbbl
fisttpll
les
and
pop
sub
or
test
sbb
push
loope
dec
movsb
imul
xchg
push
mov
lods
sar
ljmp
adc
inc
out
ret
fdivrl
inc
clc
jmp
in
cltd
shll
adc
pusha
xor
mov
xchg
out
movsl
sub
push
jae
divb
cmpsb
xor
jo
add
mov
xchg
test
jge
mov
xchg
js
mov
aaa
pushf
ret
stos
mov
pop
adc
lahf
mov
daa
jge
push
aam
jno
sub
dec
movsl
xchg
inc
dec
test
imul
or
xorl
rcll
shlb
mov
xchg
icebp
inc
rorb
and
push
test
in
mov
or
int
out
mov
jp
idiv
and
cmp
imul
mov
sub
imul
inc
std
mov
mov
fmull
dec
rcrl
aaa
stos
sub
cmpsl
mov
imul
shlb
into
adc
add
fucomip
enter
ss
aaa
arpl
sbb
xor
jb
inc
mov
repnz
pop
test
pusha
jne
push
lods
or
test
mov
add
gs
push
mov
es
adc
hlt
leave
rorl
aaa
xchg
push
pop
mov
clc
dec
xchg
dec
mov
mov
loope
dec
or
sbbl
push
pop
loopne
movsl
cmpl
test
or
jae
pop
xchg
adc
cmp
pop
fimuls
and
std
add
jg
mov
lods
lret
dec
aam
lret
add
mov
leave
jp
notl
or
ret
jg
insl
addr16
fcompl
and
pop
and
and
movsl
or
xchg
mov
mov
sbb
mov
xor
in
mov
lahf
mov
scas
aam
rcrl
mov
cwtl
out
fwait
out
jmp
je
add
ja
pop
out
lock
outsb
adc
inc
outsl
lods
movsb
shll
or
dec
vmulps
mov
stos
push
ss
sub
and
out
xchg
sbb
cmp
inc
mov
lcall
mov
mov
cltd
out
and
dec
in
push
mov
push
ja
leave
int3
sub
add
xchg
ja
add
add
pop
cltd
inc
rolb
sub
inc
jns
in
das
aaa
push
push
inc
or
shlb
imul
push
mov
ret
mov
outsl
ja
add
clc
add
lcall
pusha
pop
data16
iret
dec
cmc
shl
sar
inc
insl
lods
and
inc
ds
adc
ss
shlb
pop
aaa
ljmp
and
or
sbb
inc
cltd
cmpsl
pop
pop
ret
daa
pop
pushf
or
sbb
loope
xor
xlat
enter
cmp
ja
or
stos
fistpl
sbb
cmc
call
xor
rcr
push
sti
sub
cwtl
mov
xchg
pop
es
shll
rcrl
addr16
push
cld
adc
rcrb
add
cli
push
cld
scas
loope
sbb
add
arpl
scas
pusha
push
pop
inc
push
adc
xor
or
inc
cld
xchg
jbe
sub
bound
jo
jle
cltd
mov
imul
xchg
movsl
lock
mov
lds
aaa
push
sti
adc
lods
ja
jb
jmp
cld
mov
insb
push
xor
add
fcmovnb
push
mov
out
add
call
loope
shl
xor
cli
mov
outsl
mov
sbb
mov
out
sub
mov
push
in
pop
push
cmpl
inc
mov
lods
into
mov
push
pop
pop
aad
push
or
lret
push
das
data16
adc
ljmp
movsb
mov
jmp
pop
push
xchg
mov
sub
or
or
and
insl
stos
sbb
aas
pop
push
in
sub
sbbb
dec
dec
outsb
ljmp
jns
mov
ret
mov
rcll
test
jle
sbb
test
shlb
xor
ret
xor
lret
xchg
mov
cs
xchg
pop
cmpsl
jmp
lock
dec
pusha
test
adc
data16
push
jmp
xchg
add
mov
std
loop
arpl
loopne
push
cmpsb
mov
nop
lds
or
jmp
adc
cli
sub
testl
jle
call
jle
jb
sahf
add
jmp
dec
jne
scas
push
mov
cmc
loope
popf
sub
pop
imul
sti
jne
pop
cld
push
xchg
dec
lahf
inc
inc
add
movsb
cpuid
incb
rcrl
movsl
push
inc
mov
test
stc
les
mov
adc
decb
hlt
cs
sbb
imulb
sub
fdivrp
mov
es
or
mov
stos
xchg
stos
adc
sub
leave
jecxz
sub
inc
dec
adc
outsl
inc
add
mov
mov
sub
js
xor
xchg
jp
xor
jl
inc
dec
scas
adc
mov
mov
scas
sbb
std
push
daa
outsl
lea
ja
sub
in
rorb
lock
shrb
xchg
pusha
dec
mov
and
mov
repz
movl
and
in
enter
mov
xor
jg
add
fdivl
lock
ret
sbb
xchg
pop
cmpsb
inc
enter
icebp
xor
xchg
jo
sub
mov
stos
adc
mov
adc
int
add
adc
jns
imul
mov
js
in
jl
call
push
es
lret
roll
mov
xchg
loope
jno
cmp
sbb
add
jecxz
addb
or
loop
mov
push
mul
popf
mov
mov
aas
shlb
daa
inc
inc
fnsave
das
adc
xchg
mov
dec
cmpsl
inc
inc
addr16
sbb
dec
pop
xor
cmp
imul
sub
rcrb
in
fwait
mov
pushf
ja
les
gs
fdivl
push
jbe
test
jno
mov
and
xor
or
icebp
int
lcall
clc
mov
cmp
insb
insl
movsb
push
jno
ret
mov
into
adc
mov
cmp
jl
adc
test
rcrl
inc
fistl
push
call
and
jno
orl
sbb
mov
jmp
mov
leave
and
in
je
and
into
loopne
rcll
mov
fsts
js
cld
mov
outsb
addb
inc
sbb
int
xchg
cmp
and
int3
jo
push
xor
mov
aas
cmp
push
cwtl
out
cmp
mov
sahf
ds
mov
ret
or
pusha
sub
icebp
lods
ljmp
stos
sbb
stos
pop
fwait
pop
outsl
por
fiadds
popa
push
rclb
pop
or
add
fucom
mov
test
mov
movsl
int
nop
add
sahf
arpl
xlat
push
mov
pop
push
lret
call
arpl
test
jg
cmp
add
xchg
clc
inc
out
or
jl
mov
mov
push
push
mov
jno
mov
scas
cmpsb
dec
loope
fmuls
out
out
fistps
cmp
dec
jecxz
push
ret
and
jle
outsl
xchg
adc
inc
or
out
jp
aam
xchg
pop
xor
cmp
iret
mov
int3
insb
dec
pop
mov
pop
test
and
pop
movsb
inc
loopne
inc
mov
testl
hlt
xchg
call
imul
and
fcomps
sar
xchg
mov
cmp
jno
in
sub
adc
jne
jg
sub
ljmp
shrb
mov
push
mov
or
inc
cmp
scas
push
ljmp
push
jp,pn
adc
fcompl
arpl
je
mov
mov
or
inc
adc
outsl
adc
adc
stos
daa
jae
int
dec
jb
sub
clc
xchg
into
and
sarl
cli
shll
push
mov
xchg
push
les
bound
mov
inc
pushf
mov
enter
xchg
aam
xor
cmp
ljmp
cmp
jg
push
mov
jge
in
repnz
adc
xchg
gs
pop
loopne
sub
pop
mov
push
and
xchg
cmpsb
arpl
unpckhps
fwait
out
ljmp
mov
loope
xor
orb
adc
in
loop
sbb
or
es
mov
mov
push
inc
add
or
sbb
out
movsb
mov
dec
out
popl
jbe
add
jl
adc
mov
stos
xchg
cwtl
xchg
ss
fidivrs
pop
out
mov
nop
pusha
jge
lock
mov
cmc
add
push
mov
fstps
in
ret
and
les
push
mov
sbb
es
or
faddl
push
aaa
cmp
gs
mov
nop
test
ret
cmpsb
dec
arpl
add
pop
sti
bnd
ja
mov
push
and
mov
shl
mov
xor
lahf
sub
sub
outsl
imul
mov
xor
xchg
inc
xchg
sub
jmp
cs
popf
mov
addl
cmp
and
andb
jg
sub
and
xchg
cwtl
mov
lret
mov
sbb
fwait
jecxz
cmp
inc
xchg
xchg
rcr
mov
std
ds
pop
xchg
jmp
jle
pop
aaa
push
push
arpl
or
mov
or
xchg
adc
mov
jge
push
loopne
sbb
sub
sub
and
popf
mov
fnstcw
mov
jmp
xchg
fwait
and
mov
aas
push
pop
lahf
imul
aad
adc
aas
push
and
pop
sbb
mov
add
pop
pusha
mov
sbb
or
mov
nop
addr16
adc
jae
jno
test
push
outsl
sbb
in
fnstsw
into
sets
sub
add
lods
jecxz
pop
mov
push
jno
xor
push
add
push
fistl
arpl
test
aas
sub
dec
mov
push
pop
or
inc
sbb
mov
adc
cmp
outsl
xchg
adc
andl
xchg
nop
push
insb
add
dec
in
cmp
out
rcl
arpl
xchg
scas
mov
xchg
push
add
iret
or
fsub
mov
inc
cmp
xchg
dec
inc
test
jno
xchg
pop
inc
inc
popa
ret
inc
jnp
or
pop
into
or
or
imul
lret
mov
stc
mov
and
fnstcw
mov
pop
fnsave
dec
fldcw
jle
mov
sub
push
das
cs
ret
ljmp
shl
rol
sbb
sarl
in
jo
std
cmp
mov
scas
test
or
loopne
les
xor
ss
add
or
mov
in
in
in
mov
mov
dec
jmp
addb
shrl
movsl
add
pop
cmp
or
jae
mov
mov
jae
jns
xor
in
jl
push
lcall
fstpt
pop
xor
sbb
icebp
sbb
pop
jg
and
dec
out
sbb
je
repz
icebp
jl
inc
repz
add
pusha
cmp
adc
pushf
xchg
pop
cmp
jg
pop
fwait
loopne
mov
adc
sub
xchg
fs
dec
mov
cli
cmp
hlt
in
mov
sub
subb
pop
mov
push
dec
sahf
faddl
jno
mov
mov
push
rcll
sarb
mov
in
lcall
mov
aas
inc
ja
xchg
clc
or
aaa
and
push
sub
adc
icebp
jae
into
mov
sub
inc
adc
jae
dec
shlb
sub
fnsave
ret
ss
sub
mov
xchg
mov
cld
popf
cmc
in
push
fbstp
dec
in
pop
stos
sub
adc
and
fiaddl
mov
data16
mov
mov
sub
ficoml
cmp
nop
xchg
aaa
pop
push
int
cmp
inc
cmp
push
mov
and
or
out
sub
fildll
cmpsb
jbe
lock
outsl
nop
cmpb
jns
leave
cmpsb
hlt
or
jnp
xor
sub
xchg
stc
iret
outsl
repnz
aas
pop
int3
pop
bound
dec
xor
add
fdiv
adc
sub
iret
aaa
mov
or
jl
leave
movsb
dec
fwait
test
mov
jbe
out
hlt
mov
popf
sarb
cmpsl
lea
xchg
mov
sub
mull
mov
push
lahf
xchg
sub
shrl
cwtl
cmp
inc
jb
out
lods
in
mov
mov
js
adc
xchg
shlb
mov
xchg
enter
mulb
or
mov
sub
sti
movsl
jle
movsl
add
stos
xor
fsubl
dec
adc
cmc
mov
into
stc
mov
xor
repnz
xor
popa
push
add
std
lock
pop
dec
xchg
in
imul
pop
andb
adc
push
mov
stc
sbb
xchg
aad
fmuls
cltd
mov
adc
dec
mov
ljmp
out
test
sbb
push
cli
xchg
mov
iret
adc
lods
jle
aaa
aaa
jmp
xchg
push
adc
aaa
jb
xorl
xor
imulb
push
lahf
push
jae
push
aad
fiadds
cmp
lds
arpl
shlb
int
mov
xchg
clc
mov
mov
imul
lock
je
push
push
aam
popa
or
test
inc
int3
shlb
jo
add
or
movhps
mov
movq
lods
sub
cmc
rclb
add
loop,pn
sbb
cmp
cmpb
mov
xchg
xor
add
aas
sbb
pop
insl
out
xor
pop
mov
dec
scas
xor
icebp
mov
in
jmp
loop
loop,pt
sub
ret
cmpsb
xor
inc
dec
pop
cli
or
insb
sbb
push
xchg
xchg
push
clc
or
lock
aaa
add
or
xor
sub
push
enter
mov
enter
outsb
jmp
test
out
and
fcoml
sahf
or
inc
jno
data16
pop
mov
jo
mov
rcrb
imul
add
imul
out
xor
ret
and
mov
mov
arpl
ds
inc
fmul
add
and
shll
and
pushf
repnz
mov
xlat
push
sub
ljmp
sub
movsb
sbb
popa
movb
stc
sbb
movsb
subb
and
ret
fisttpl
pop
leave
push
cmp
loope
dec
out
xlat
lahf
movsb
rcl
lods
aad
sbb
mov
ficoml
jo
mov
fwait
adc
jmp
lret
imull
mov
enter
cmc
and
cmpsl
in
outsl
or
mov
movsl
lods
outsb
arpl
lea
xchg
popa
les
stos
mov
outsl
stc
movsl
xchg
add
xor
push
inc
jle
hlt
jno
dec
das
pop
push
mov
lcall
mov
mov
leave
out
add
pop
pusha
add
add
cmp
mov
scas
push
add
ljmp
mov
call
or
lea
xor
cmc
push
mov
shrb
imull
adc
cmpsl
popf
cmp
or
icebp
cmpsb
jl
mov
xor
inc
dec
cltd
pop
xchg
mul
movsl
pop
mov
push
sbb
into
out
mov
lret
xchg
sbb
fisttpll
inc
inc
pop
pop
or
call
mov
test
push
icebp
ficoml
mov
sahf
jae
or
add
push
mov
push
add
or
out
inc
fs
adc
sbbl
fcomps
xor
sarl
sarl
jnp
ret
and
inc
ror
repz
pop
xchg
mov
dec
xor
sub
repz
loopne
pushf
push
adc
incl
repz
outsl
loope
and
decb
push
shlb
mov
test
inc
dec
inc
mov
mov
push
and
stos
das
cwtl
inc
imul
ja
inc
pop
push
jnp
mov
mov
fidivrl
sbb
sub
fildll
fisttpl
pop
push
lahf
push
fnsave
push
jo
push
sub
sbb
mov
mov
addr16
inc
pop
fildl
inc
and
xorb
sub
add
add
in
movsb
dec
scas
shlb
push
rclb
mov
cmpb
adc
stos
pop
add
nop
orl
xlat
xchg
pushf
popa
adc
repnz
cmpb
insl
pop
sarb
out
sub
cwtl
pop
cld
xor
push
or
add
push
add
fnstsw
lods
loopne
fcompl
sbb
in
sbb
sbb
pushf
xchg
repz
mov
or
lret
or
pop
inc
pop
loopne
add
mov
sbbl
adc
ljmp
add
sbb
add
jg
and
mov
mov
in
insb
inc
test
mov
in
rcrl
scas
pop
lret
mov
lods
andl
sahf
ljmp
push
addr16
fs
aam
stc
sub
push
dec
xchg
in
adc
jmp
xchg
xchg
mov
lds
les
push
jns
bound
insb
std
dec
shld
dec
cmp
ds
orb
push
and
imul
inc
pop
insb
sub
int
es
inc
sub
cld
aaa
mov
movsb
or
jno
mov
mov
daa
wrmsr
xchg
mov
inc
xor
and
mov
jnp
sub
jmp
inc
add
rclb
popa
adc
pop
fsub
stos
dec
stos
lret
fistpll
pop
xlat
and
pop
loopne
inc
xchg
das
aas
outsb
orl
add
data16
pop
leave
inc
pop
in
xchg
pop
enter
inc
inc
or
mov
jae
mov
popa
ret
and
xchg
inc
push
mov
gs
inc
push
addl
and
fsub
sub
push
sarb
sbb
sub
call
cli
mov
inc
insl
enter
lret
pop
mov
mov
and
push
mov
xchg
out
mov
mov
les
push
xchg
stos
mov
mov
leave
rcrb
mov
loope
subl
jne
adc
adc
imul
jl
pop
incb
stos
mov
xchg
out
int3
adc
cmpsb
adc
mov
xchg
xchg
push
insb
sub
icebp
out
sbb
scas
loop
mov
icebp
mov
inc
out
lcall
ret
je
adc
mov
call
jmp
adc
insl
mov
mov
test
in
int
mov
movsb
mov
mov
cmp
loope
hlt
daa
movsb
inc
loopne
xor
cmp
ja
jecxz
xchg
push
iret
inc
orb
xor
decb
add
out
dec
imulb
xchg
push
mov
sarb
inc
xor
jl
jg
lock
aas
in
xchg
mov
pop
jns
inc
pop
and
mov
outsl
or
popf
jl
jg
xor
popf
mov
mov
dec
add
adc
lock
stos
and
mov
pop
inc
xor
pop
fdivr
push
add
lds
aas
jae
out
ficomps
pop
outsl
mov
pop
sti
ret
in
fwait
dec
add
mov
jbe
xchg
sbb
in
mov
loope
clc
loope
pusha
lahf
mov
addl
dec
inc
lock
arpl
rcl
enter
ret
int
int3
cwtl
pop
cmp
mov
mov
outsb
sbb
push
clc
inc
fucompp
ret
dec
xor
push
inc
ss
das
insl
mov
adc
movsb
sub
mov
mov
loopne
arpl
and
adc
movsb
insl
jecxz
stc
add
jnp
loopne
out
aas
psllq
lahf
fistps
js
lock
dec
jno
lods
rol
dec
test
pop
out
lock
inc
jg
mov
ret
cltd
cmpsb
es
mov
not
xor
and
cld
sbb
lock
fwait
and
scas
xchg
cmp
push
int3
xchg
adcl
stc
ss
jecxz
dec
cli
es
enter
fcompl
jle
cmp
ljmp
popl
arpl
jmp
and
lods
fwait
out
mov
in
sahf
push
iret
ljmp
xchg
imul
inc
in
xchg
add
movsl
fsts
cmp
add
nop/reserved
arpl
cmp
xchg
inc
cmp
rcll
dec
pop
or
call
inc
out
or
dec
inc
add
or
mov
or
insl
ret
or
std
mov
mov
add
lret
mov
sub
pop
and
in
xchg
cmp
enter
inc
addr16
and
xor
push
leave
lahf
jle
cmp
add
ss
pop
pop
xorb
add
fwait
test
mov
stos
movsl
mov
int
push
cmpsb
test
lods
fsts
pop
enter
add
and
repz
or
cwtl
stos
outsb
fcmovu
mov
sbb
les
in
push
cli
cmpsl
lods
jge
or
adc
in
jns
jg
pop
jg
movsl
add
sbbl
std
sub
cmpsb
imul
or
sub
lret
mov
pop
outsl
ljmp
andb
xchg
repz
add
xchg
hlt
fcomps
jg
iret
jae
pop
mov
test
fadds
in
aas
push
rorl
pop
das
mov
push
jp
mov
stc
and
clc
jnp
mov
jecxz
push
sub
fidivrs
pushl
cmpb
loop
into
or
gs
daa
xchg
movsb
cmp
fbld
sub
push
mov
movsb
cltd
push
mov
fisubrs
fcmovnu
cld
rorl
pop
inc
mov
xor
out
and
bound
movsl
xchg
xor
mov
pop
pop
jg
ljmp
in
fxch
jne
repz
jbe
adc
mov
jl
int
test
xchg
mov
xchg
leave
mov
pop
cmpl
or
mov
daa
fisttpl
mov
adc
imul
push
xchg
pop
ss
jb
shlb
sub
xlat
and
aam
cmpb
mov
or
xchg
dec
std
pop
jne
mov
lret
sbb
fcompl
mov
mov
rolb
and
mov
inc
in
mov
add
cmp
out
cli
scas
sub
adc
fldenv
ljmp
xor
lods
add
cltd
ja,pt
int3
sub
std
loop
shl
sbb
sbb
cmpsl
aam
and
test
cs
mov
inc
xchg
push
pop
cs
jge
and
push
xchg
das
pop
inc
shlb
shll
xor
sub
mov
bound
pop
xchg
xor
push
jnp
cld
sbb
ret
inc
push
je
int
iret
mov
xchg
pop
loopne
inc
adc
xchg
and
dec
and
stos
fnstsw
mov
pop
mov
sbb
jp
adc
pop
mov
aaa
jns
mov
sbb
std
cmc
stos
cltd
push
pop
jbe
jecxz
jl
out
int
fdivrl
dec
cmp
jge
mov
insb
and
stc
cmp
test
push
push
imul
mov
dec
add
daa
push
inc
sti
test
shll
pop
lret
stc
or
mov
ljmp
jns
xchg
sub
insb
xor
call
xor
push
xorl
stc
call
push
add
test
pop
ficomps
sbb
insl
pop
dec
xor
or
arpl
sbb
push
cli
sub
cmpsl
push
jno
nop
arpl
jmp
loopne
jae
sub
push
pusha
cmp
pop
cmp
movsb
mov
jle
mov
ss
imul
ds
mov
xchg
and
adc
rcrl
xlat
cmpsl
fwait
mov
jmp
aad
mov
pop
sbb
inc
dec
call
lahf
test
test
ds
pop
and
mov
or
push
push
aas
sti
add
mov
lret
mov
lret
ret
lret
nop
shll
jl
mov
and
ret
data16
xor
mov
fcoml
cmp
dec
outsb
add
mov
dec
fdivl
xor
cmp
popf
test
adc
inc
xlat
pop
cs
sbb
or
in
fisubrs
lahf
icebp
arpl
sub
or
xlat
outsb
xor
cwtl
sti
lds
sbb
mov
das
pop
cmpsb
xor
arpl
sub
ljmp
xchg
dec
ret
test
arpl
xor
jecxz
inc
cmpl
repnz
lds
adc
lea
aaa
xor
cmp
outsb
pop
orb
bound
sub
imul
cmpsl
aas
bound
nop
fstpl
inc
scas
adc
mov
scas
adc
nop
sub
mov
imul
cmp
and
mov
inc
xchg
sbb
ss
loop
adc
push
imul
aam
std
lods
inc
mov
push
push
sbb
inc
cmpsb
push
adc
inc
or
jl
scas
push
jge
add
ficoml
js
dec
mov
orl
cmp
rorl
repz
mov
sahf
incl
mov
leave
sub
inc
scas
movsl
in
rcrl
sti
arpl
inc
push
sbb
sbb
das
pop
rcl
subl
pop
or
cmp
lods
push
cltd
add
mov
mov
and
lahf
clc
sbb
in
lds
dec
and
xor
or
shl
rorl
aad
out
repz
test
dec
das
jle
or
pusha
jns
outsb
jnp
ja
xor
ljmp
mov
fmuls
push
dec
or
or
mov
js
pop
popf
inc
gs
mov
adc
push
cwtl
inc
jge
mov
or
movsl
push
sub
in
mov
push
mov
cwtl
cmpsb
mov
sbb
push
or
mov
mov
in
mov
rcrl
fsubp
cltd
out
pop
jmp
mov
jae
push
pop
xchg
push
xor
unpckhps
ror
scas
test
sti
lret
in
jle
xchg
repz
test
lret
sub
adc
ss
adc
inc
mov
cmpsb
inc
pop
lods
cmp
xlat
adc
inc
mov
push
and
scas
push
jb
mov
lret
cmc
test
rolb
nop
push
or
inc
xchg
or
mov
int
jecxz
mov
pop
out
adc
aam
sbb
das
cld
lcall
aam
cmp
aad
inc
scas
out
mov
aaa
sub
and
pop
out
inc
mov
leave
subb
dec
mov
push
call
loope
shlb
lahf
bnd
insb
pop
movsl
fidivs
pop
add
add
icebp
outsl
push
test
in
push
lahf
or
xor
xor
and
push
stos
shll
jg
sahf
jmp
dec
insb
sub
jle
dec
mov
notl
popa
xor
std
mov
insl
cwtl
leave
push
xor
popa
sti
inc
adc
lret
jo
push
xchg
dec
cmpb
or
fldl
jns
mov
clc
pop
icebp
pop
in
scas
sahf
stos
mov
jno
mov
and
push
mov
add
sbb
push
aaa
xchg
call
adc
cmp
xlat
xchg
lahf
cmp
sub
mov
pop
and
aam
xchg
dec
pop
cmpsl
daa
cmp
inc
es
mov
stmxcsr
das
fistl
xchg
fldcw
push
push
mov
push
stc
cld
in
es
add
lret
inc
mov
add
cltd
xchg
or
inc
mov
sub
adc
outsl
or
xchg
into
push
cmp
sbb
adc
stc
ficompl
inc
cmpsb
imul
jo
xor
dec
lret
cwtl
pop
inc
je
pushf
icebp
push
ret
dec
mov
push
mov
test
cmp
adc
pop
pop
mov
add
insl
mov
sahf
cmp
and
mov
pop
nop
cmpsl
and
mov
addr16
leave
sbb
cmp
jne
sub
jne
add
jmp
jmp
and
adc
dec
sub
mov
adc
lcall
insl
push
pushf
std
mov
aas
inc
pop
jl
cmpsl
jg
stc
push
dec
rorb
dec
mov
mov
addr16
mov
jbe
dec
jo
mov
push
out
or
int
ficoml
push
loope
movsb
inc
lods
xchg
les
sarl
loopne
sbb
pop
inc
int3
pop
shrb
mov
dec
mov
cld
enter
pop
movsl
inc
in
jnp
push
add
inc
jp
push
ret
cwtl
dec
lds
xlat
in
mov
aaa
or
fcmovnbe
cmp
mov
test
push
and
jo
leave
inc
add
movsl
cmp
dec
pop
push
or
jbe
sbb
or
pop
adc
loopne
mov
sbb
dec
push
nop
aad
je
sub
ret
sub
test
sbb
push
dec
lods
jecxz
dec
call
push
out
lret
dec
xchg
add
int
cmp
lock
lods
bnd
pcmpgtd
sbb
fwait
push
or
pop
xchg
test
enter
xor
das
inc
stc
jbe
push
push
sub
lea
rorb
dec
stos
xchg
cmc
and
stos
fdivr
jp
inc
fs
jl
outsb
adc
cmpsl
sub
rcr
int
out
insl
sbb
shrb
popa
test
pop
js
sbb
add
mov
pop
test
outsb
mov
xchg
lea
xor
dec
pop
ficoml
out
fbstp
adc
inc
adc
mov
adc
add
std
je
mov
out
outsb
pushf
std
cmpsb
dec
sar
loope
pop
xor
sar
rorb
jl
xor
pop
mov
call
cmpl
mov
ja
jo
dec
es
xchg
imull
cli
pop
pop
loop
push
xlat
xchg
inc
xor
or
test
repnz
aas
stc
push
mov
shll
push
das
sub
inc
xlat
sub
and
and
mov
jns
jmp
fs
aaa
int
addb
js
repnz
dec
loopne
adc
sub
pop
sub
test
lds
test
or
fwait
mov
xchg
lock
add
mov
idivb
fs
xchg
mov
fiadds
or
and
mov
sbb
aaa
sbb
xchg
cmp
xchg
aaa
push
imul
outsb
or
sti
lock
xchg
mov
and
push
loop
cmp
lret
mov
mov
outsl
addr16
js
add
dec
push
std
iret
sub
and
and
ret
mov
inc
std
inc
adc
dec
cmp
mov
mov
lret
outsl
pop
jne
cltd
int
adc
push
mov
repz
cmpsb
xchg
push
xchg
data16
cmp
es
jecxz
push
lcall
aad
adc
push
sub
mov
adc
movsb
adc
cltd
out
pop
jle
das
mov
lea
loop
arpl
sbb
repnz
call
imul
leave
sub
and
jmp
stc
adc
cmpsb
scas
stos
xchg
xchg
or
cmpsl
mov
movl
push
dec
jle
or
sahf
fs
sbb
stos
int3
mov
push
daa
sbb
dec
les
pop
xchg
scas
out
or
mov
mov
bound
or
mov
push
cmp
mov
in
dec
xlat
xchg
leave
jmp
lds
push
divb
in
push
es
xchg
push
xor
jae
lods
stos
mov
cmpsl
pop
lahf
ja
movsl
dec
je
and
mov
pop
xchg
test
and
out
xor
es
out
xchg
scas
push
into
mov
mov
lret
adc
and
jae
pop
imul
shrb
fcomps
into
leave
lods
xor
enter
add
sbb
push
pop
pop
popf
test
lods
nop
in
mov
into
push
ss
xor
sbb
ret
push
lcall
in
or
and
repnz
mov
jg
xor
add
dec
shl
in
aam
movsb
mov
jmp
popa
cmp
setnp
cmp
cmp
aaa
jg
or
stc
sar
mov
cwtl
cmp
cmp
xchg
jno
push
push
push
cld
incb
pop
lock
lret
fistps
mov
mov
out
sbb
mov
mov
sti
jo
ljmp
sub
sbb
mov
cwtl
push
movsb
jmp
dec
loope
jecxz
sti
or
test
test
inc
push
mov
sub
into
inc
mov
mulb
xchg
add
iret
insl
cmc
in
aad
mov
fwait
cmp
ret
adc
mov
jb
roll
lret
mov
mov
mov
or
pop
lcall
idivb
cmpsb
aad
int
sti
rorb
fidivrl
mov
rcll
push
sbb
add
ja
jmp
push
imul
roll
jns
orb
xchg
movsb
dec
pop
sub
xchg
outsb
in
add
outsl
adc
xchg
dec
fsubrp
jne
shlb
shll
test
inc
leave
sub
cmp
data16
pushf
mov
push
inc
jns
sti
std
jecxz
dec
push
test
inc
pop
arpl
or
push
mov
shrl
jp
sub
sbb
es
cli
push
jl
repz
inc
lret
mov
test
sbb
and
lcall
ud1
cwtl
out
xchg
lock
fldcw
jne
int3
cld
repz
insb
add
mov
iret
imul
pop
popa
jge
xchg
pop
mov
fs
ljmp
sbb
xor
in
cltd
sti
lds
shrb
fcomps
bound
pop
mov
jno
mov
cmp
les
xor
jmp
mov
mov
xor
mov
jle
lods
movsb
xor
test
add
add
xchg
filds
mov
adc
push
dec
in
push
mov
bound
sub
cmp
sbb
adc
shll
pop
scas
mov
iret
popf
jnp
jmp
push
out
les
pop
mov
push
sub
loopne
or
scas
xchg
aad
dec
out
xchg
adc
dec
adc
sti
int3
lods
imul
mov
insb
xchg
divb
daa
sbb
xchg
push
dec
mov
xbegin
jmp
out
jmp
xchg
xchg
mov
or
gs
or
sbb
pop
mull
les
cltd
jns
sbb
aam
push
loopne
lods
push
pop
cmpsb
cwtl
mov
mov
inc
inc
jp
add
ss
loope
fimuls
sub
mov
mov
pop
movsb
cld
xor
insb
xor
pop
or
stos
adc
add
jmp
je
call
ds
lods
cltd
mov
sbb
out
and
and
xchg
pop
in
shr
sub
pop
jmp
stos
cs
popa
nop
loopne
sti
jg
dec
mov
loop
lcall
push
leave
lea
push
into
adc
out
fwait
cmp
push
out
hlt
dec
mov
lret
xchg
lea
sub
test
sub
jae
movsb
fcmovb
int3
faddl
adc
movsl
mov
push
and
jo
sarb
loop
sbb
mov
sub
dec
xor
mov
arpl
jno
ret
mov
mov
daa
xor
jecxz
scas
and
xchg
add
and
xlat
mov
add
mov
shlb
or
xor
pusha
iret
imul
movsb
and
les
mov
imul
imull
repnz
mov
push
jno
cmp
int3
shll
test
incl
fistps
cmpsl
xor
and
push
lds
testl
ljmp
aad
je
sbb
outsb
dec
comiss
std
sti
lods
jne
dec
movsl
pop
jg
negb
arpl
add
push
int3
push
add
ret
push
add
jns
stos
inc
loope
or
arpl
sub
inc
nop
jl
or
sar
push
hlt
xchg
mov
fistl
ss
in
fildl
adc
adc
sbb
stos
pop
xchg
dec
inc
pop
or
mov
sbb
inc
scas
inc
dec
xor
inc
mov
xchg
xchg
testb
iret
test
pushf
and
mov
test
ja
cld
add
fxch
jp
dec
mov
mov
adc
ja
mov
adc
stos
or
cmp
and
push
xlat
addr16
outsl
xchg
lret
dec
or
push
jbe
sti
cwtl
mov
lods
incl
jne
das
jo
or
outsl
fists
add
aaa
pop
pop
test
movsl
out
mov
mov
adc
push
mov
adc
or
and
or
in
mov
push
fwait
pop
or
pop
fwait
repz
scas
add
mov
push
daa
cld
addl
dec
je
push
in
test
and
in
ret
cmp
in
dec
inc
pop
scas
mov
pop
dec
and
mov
sub
insb
mov
int
adc
inc
mov
jg
loope
hlt
pop
es
dec
mov
inc
mov
sub
aad
clc
xchg
add
push
cs
ds
fdivr
arpl
inc
scas
dec
int3
xor
add
jge
loope
dec
lea
pop
add
adc
test
xchg
dec
call
push
or
mov
imul
dec
add
push
adc
dec
xor
nop
jl
jge
hlt
cmp
in
enter
push
xchg
stc
mov
pop
mov
xor
cwtl
xchg
sbb
loopne
xchg
out
or
xchg
lret
jne
jmp
lock
xor
aaa
cmp
add
xchg
pop
mov
or
mov
imul
mov
xchg
bound
and
rolb
jg
jmp
cmp
cmp
sbb
test
cmp
mov
pop
mov
lods
mov
xor
add
sahf
adc
movl
fwait
cmp
dec
mov
xor
popl
adc
stc
insl
mov
cltd
or
inc
pop
addr16
push
into
xchg
out
hlt
push
popf
lret
lahf
pop
add
scas
jmp
inc
hlt
cmp
xor
push
pushf
mov
int3
lods
dec
adc
orb
scas
das
ss
lcall
setne
mov
adc
inc
pmuludq
mov
jmp
out
jmp
bound
sarl
imul
mov
pushf
insb
xchg
xor
imul
mov
and
xchg
cmp
mov
shll
lds
mov
sbb
and
sbb
imul
nop
xchg
or
inc
pop
sub
loop
inc
sbb
aam
into
xchg
xchg
and
shrb
sti
clc
jnp
mov
loopne
xchg
out
push
iret
aas
ds
cmp
adc
arpl
andb
mov
dec
stos
rorb
cltd
mov
test
lock
mov
cs
loop
aaa
xor
inc
insl
pusha
mov
shll
mov
or
dec
fstps
inc
mov
outsb
aaa
push
insb
pop
clc
cmp
mov
and
in
sub
jne
mov
sti
das
mov
or
pop
dec
mov
std
fistpll
mov
add
or
cmp
lea
mov
fwait
xchg
fs
jo
cmp
enter
jno
add
hlt
and
test
jb
iret
mov
orl
adc
aam
push
xor
xchg
pop
out
dec
roll
inc
nop
dec
rcll
push
enter
xor
adc
xchg
sub
or
data16
enter
fiaddl
cmp
arpl
cmp
cmc
sbb
repz
inc
mov
mov
inc
outsl
dec
xlat
inc
pmuludq
xor
jmp
imul
adc
ja
adc
cmpsl
cmp
mov
xor
pop
in
add
xchg
mov
scas
aas
and
out
sub
adc
fcoms
in
data16
repz
mov
xlat
popf
loope
aam
call
adc
rcrl
pop
xor
or
in
pop
cli
or
movsl
daa
aaa
sbb
ret
divl
icebp
movsl
aad
filds
cmpsb
dec
or
add
stos
push
push
sahf
and
fisttps
test
pop
mov
cmp
pop
add
mov
add
sub
addr16
adc
fwait
pop
xchg
jnp
bound
or
pop
xchg
lret
mov
dec
movsl
loopne
mov
ret
movsb
mov
repnz
enter
xor
mov
xchg
push
aas
movsb
ficoms
dec
mov
pop
mov
je
icebp
cltd
dec
sahf
lahf
jnp
cmpsl
in
cmp
sbb
loope
gs
data16
lcall
les
adc
or
test
mov
gs
fnstcw
and
mov
int
test
xor
test
cli
ret
dec
or
aad
sub
adc
pop
push
inc
push
mov
push
dec
mov
lret
jae
test
ljmp
lds
jl
push
cmp
adc
jg
stos
xchg
push
mov
lret
cmpsb
cltd
aam
rorb
push
or
bound
inc
lds
std
bound
lock
std
call
loope
stos
ja
rcr
ret
add
xlat
imul
popl
es
call
sbb
imul
push
sub
popf
lock
ret
stos
lods
xor
popf
and
dec
pop
inc
cld
les
xchg
xlat
pop
das
mov
or
jg
sbb
scas
xchg
mov
fdivrl
fstpl
cmc
xchg
in
sbb
jecxz
xor
cld
pop
jns
inc
mov
out
aad
xchg
sub
pop
sbb
lret
mov
sub
sbb
scas
nop
fimuls
sbb
inc
xchg
xchg
daa
js
dec
push
movsl
out
sti
mov
push
or
cwtl
dec
jo
jne
cwtl
xchg
mov
sbb
movsb
stos
cmp
dec
fbld
fldt
cltd
xor
lods
aam
sub
aas
fisubrl
push
ds
imul
pop
in
or
adcl
cmp
sbb
popa
sbb
mov
je
push
sub
shlb
addr16
jns
mov
jmp
movsb
dec
adc
sub
dec
pop
cwtl
and
mov
loope
fs
xchg
lods
das
inc
cmp
mov
or
popa
outsl
add
loope
add
mov
call
aas
insl
into
sahf
xchg
fwait
add
lock
xor
push
addb
fmulp
aam
aam
push
sbb
cld
inc
mov
out
sbb
das
ret
insl
sbb
in
insb
jo
xchg
mov
ficompl
test
ja
lret
movsl
mov
push
sub
dec
ljmp
rorl
and
mov
adc
mov
lods
cmpsb
push
sahf
pop
adc
cmp
testb
sbb
cmp
scas
in
adc
or
incb
jbe
push
add
push
je
divl
lea
and
idivl
ret
mov
repz
leave
pop
cmp
bound
inc
pop
dec
sahf
mov
cli
idiv
sub
addr16
xor
sub
inc
xchg
jmp
imul
add
add
mov
testl
out
das
push
cmp
add
add
dec
shl
sub
lahf
or
stc
pop
rcrl
dec
mov
arpl
fstl
mov
rcr
mov
int
fs
push
adc
loope
dec
lret
mov
jecxz
leave
push
and
or
or
test
mov
jg
shl
clc
push
nop
inc
das
xchg
mov
pop
movlps
xchg
fidivs
mov
add
mov
flds
inc
mov
lods
dec
movsl
sub
push
loop
daa
adc
dec
mov
cli
cmpsl
cld
cmc
jmp
outsb
pop
pusha
ljmp
jge
and
pop
push
cld
int
daa
mov
test
cli
ljmp
dec
fidivrl
out
cmc
jle
cmpsb
or
xor
mov
lret
pop
scas
mov
sar
test
push
push
repnz
jne
imul
popf
ja
outsb
test
enter
dec
xor
dec
shrb
je
std
push
cltd
sub
test
pop
dec
inc
popf
fs
lods
pop
sub
aam
xor
or
dec
hlt
sub
sahf
adc
pop
push
mov
bound
rclb
pop
imul
cld
dec
push
lret
icebp
dec
outsb
cs
xchg
jns
mov
fistpl
into
inc
stos
push
push
adcl
in
das
repz
lock
sub
push
pop
lret
outsl
dec
test
mov
cmpsl
mov
xor
dec
cmp
mov
pop
pop
add
pop
add
dec
adc
mov
xor
mov
adc
ss
xlat
lret
pusha
cmpl
imul
pop
jo
mov
xor
pop
xchg
insb
add
and
fmuls
hlt
pop
mov
push
jp
add
popf
mov
pop
mov
cmp
sub
cmp
inc
pop
dec
mov
lahf
or
fbstp
in
rcrl
jecxz
adc
cwtl
add
or
or
icebp
mov
inc
mov
push
leave
out
jle
mov
pusha
or
icebp
xor
into
rolb
fiaddl
cmc
scas
mov
arpl
out
and
lods
xchg
lods
cmpsb
jne
dec
ss
dec
aaa
movsl
fidivrs
mov
test
mov
or
jbe
mov
movsl
pop
ret
movsl
decl
scas
mov
mov
leave
mov
mov
push
scas
cmp
fistpl
mov
jnp
inc
sub
sub
or
stos
cmp
mov
insb
mov
jno
pop
lcall
in
pop
sub
js
mov
cmpsl
aad
xor
lds
rol
adc
sub
jbe
fldt
pop
cmp
test
jl
stos
fildl
adc
mov
test
arpl
jmp
jge
fsubl
sbb
fldcw
cmp
idivl
dec
fsubl
jg
xchg
cmp
cmp
in
mov
mov
dec
xor
jmp
insb
jno
mov
pushf
ljmp
xlat
cmpl
mov
sub
xchg
out
jo
mov
out
test
out
sahf
push
lcall
adc
sub
cltd
or
ss
loop
es
cmp
lods
cmpb
mov
cltd
pop
and
leave
or
cmc
rolb
jmp
xchg
jp
lcall
push
enter
jns
outsb
dec
mov
inc
xchg
ss
pop
jmp
repnz
aas
dec
rorl
and
arpl
mov
mov
dec
movsb
clc
mov
xlat
and
xor
inc
sub
pop
xchg
popa
xchg
pop
cmp
push
fldl
jl
cmp
xor
out
das
out
pop
notl
in
inc
sbb
jo
mov
adc
bound
or
jno
jmp
mov
clc
and
and
rcrl
cmp
das
cmp
xchg
xchg
mov
iret
int3
pop
cmpsl
inc
mov
aam
imul
jp
jbe
cld
mov
lahf
push
xor
test
sbb
mov
fnstenv
fsts
xchg
mov
fistpl
int
mov
ret
out
les
lahf
add
adc
mov
in
jp
in
xchg
inc
ss
add
test
sbb
jp
js
pusha
daa
push
int3
into
cmp
test
pushf
dec
popf
inc
std
int3
and
stc
outsl
xchg
clc
bound
dec
add
pushf
push
or
lods
fstl
adc
aaa
test
lods
lcall
jp
fistpll
xor
imul
pop
mov
xchg
addr16
inc
shll
cmp
lcall
add
adcl
or
xchg
shlb
jns
xchg
jno
test
pcmpgtb
nop
loop
out
je
mov
push
lods
ret
push
xor
and
push
and
aas
insl
inc
loopne
inc
mov
sbb
das
fucomip
bound
xchg
mov
shll
adc
and
jbe
jle
imul
xchg
xchg
ljmp
pop
mov
ror
incl
mov
jnp
sub
pop
adc
and
push
dec
cmp
mov
mov
pushf
movsb
add
nop
xorb
inc
dec
push
and
fldenv
arpl
sub
or
jnp
cltd
scas
int
cwtl
adc
bound
loopne
in
mov
stc
aam
loop
arpl
jp
popf
or
dec
cmp
loope
sbb
pop
call
pop
xchg
fnsave
sbb
mov
add
pop
cmpl
dec
xchg
cmp
jae
daa
jge
fidivl
or
xchg
aaa
cmpl
jl
add
cmp
cs
lret
out
mov
mov
jle
jns
push
loope
jnp
test
repnz
mov
insl
cmp
sub
lods
jl
push
add
sub
push
cmpsb
lret
hlt
push
ja
jg
movsl
jmp
ret
push
lds
sahf
pop
rolb
daa
inc
jmp
jo
je
inc
push
push
testl
out
jge
mov
sar
xor
mov
scas
rsm
les
es
and
cmp
mov
add
imul
rorb
or
repz
aaa
js
jl
in
push
imul
out
cmp
pop
inc
aam
inc
cmp
popf
mov
dec
push
cmp
mov
ficompl
adc
lods
inc
sbb
iret
jo
popf
push
out
enter
inc
aad
push
sub
pop
dec
out
js
add
add
jmp
insb
jle
not
mov
popa
mov
mov
push
repnz
hlt
inc
and
pop
push
iret
dec
fcom
or
lock
lret
dec
jo
stos
mov
in
mov
ret
xchg
mov
push
pop
jne
mov
add
imul
sbb
dec
sub
pop
mov
stos
out
and
sbb
xor
outsl
sub
push
or
and
aam
shl
xchg
mov
xor
push
xor
add
xchg
in
enter
inc
mov
or
rcrb
std
dec
xor
bound
in
scas
or
inc
xor
std
xchg
pusha
adc
das
popf
bound
scas
pop
aad
cmpsb
lret
xor
hlt
add
jmp
inc
jmp
inc
fcmovnbe
push
pop
in
ss
inc
push
rolb
stos
mov
ja
test
push
pop
mov
xchg
mov
add
xor
pop
loope
ret
jmp
adc
adc
mov
cmp
lret
inc
fdiv
in
cmpsl
pop
cltd
mov
jl
mov
adc
xchg
cmpsl
xor
in
subl
sub
mov
sbb
enter
jno
inc
ss
out
cmc
int3
rcrl
dec
xchg
sub
in
sub
cmpsb
xchg
mov
insb
mov
and
hlt
stos
inc
xchg
sub
and
daa
cwtl
ljmp
std
push
xor
fiaddl
jbe
cltd
inc
mov
cwtl
jp
adc
push
xchg
in
vxorps
mov
frstor
pop
fdivl
sub
inc
mov
fisttps
fdivrl
cmp
xchg
enter
fwait
pusha
ds
inc
lcall
pushf
out
out
adcb
mov
test
mov
or
test
call
pushf
mov
mov
pop
mov
push
dec
xor
adc
pop
sahf
mov
outsb
sbb
call
adc
test
pop
pop
xor
mov
cmpsl
nop
or
gs
inc
ret
or
jle
mov
and
std
mov
ds
dec
mov
sbb
lcall
lods
enter
lea
mov
hlt
loopne
cmpsb
xor
push
xor
icebp
shrl
sbb
inc
push
cwtl
stos
fdivs
ljmp
mov
ds
pop
xor
xlat
mov
jl
rcrb
jne
mov
cmp
xchg
inc
jge
jl
inc
test
ficoms
test
inc
lret
les
ds
divl
fidivl
pop
test
ss
mov
jae
arpl
addr16
test
mov
or
mov
or
push
lahf
jo
mov
sahf
jbe
repz
enter
cmc
sbb
es
fisttpl
sub
dec
jno
sub
pop
gs
mov
or
pop
sbb
xchg
sbb
add
sub
or
and
mov
jmp
mov
jg
ss
das
mov
iret
loop
loopne
cltd
jmp
adc
ja
insl
pop
inc
cmp
callw
imul
mov
or
xchg
movsl
mov
fistpl
ret
mov
js
lret
fidivl
lock
das
pop
sbb
lods
adc
repz
sbb
ds
xchg
fdivrl
out
push
stc
inc
sti
inc
rcll
mov
sbbl
mov
xchg
pop
lret
lods
in
mov
pushl
aam
in
enter
inc
mov
add
aaa
stc
xchg
sbb
test
jns
out
bound
and
inc
gs
test
leave
pop
xchg
out
lods
lcall
mov
pop
divb
inc
movsb
stc
push
sarb
pop
adc
icebp
add
mov
neg
cltd
in
xchg
in
xchg
das
pop
stos
dec
sti
mov
add
mov
xchg
dec
jno
mul
test
ds
xorl
add
fstpl
xchg
loope
jp
jmp
adc
je
xor
leave
andb
and
fs
xor
ja
pop
shll
mov
and
jge
push
dec
fdivl
push
mov
in
arpl
xchg
aaa
fs
sbb
jge
inc
dec
xchg
fisubrl
in
pop
cmp
aas
mov
cmpsl
xor
xor
lods
sub
subb
sahf
and
adc
jns
mov
lcall
xchg
shll
jns
and
xor
lds
cs
cwtl
lods
ljmp
and
or
xchg
mov
ffreep
cwtl
test
sbb
daa
in
xchg
popa
jle
xchg
mov
jmp
push
xor
add
or
cmpsb
mov
outsb
addr16
push
jecxz
mov
and
inc
test
fcomps
add
cmp
lret
test
cmc
lret
pop
mov
adc
jo
pop
xor
jmp
lea
cwtl
lahf
fwait
sbb
push
leave
loop
mov
mov
lcall
stc
xchg
jle
dec
mov
imul
jp
imul
mov
mov
cld
int
jl
lock
push
enter
and
mov
cmp
sahf
dec
scas
ret
jmp
pop
pop
lret
lea
sbb
repnz
imul
dec
add
out
in
cmc
cmp
int
xorl
dec
hlt
mov
cmpsl
dec
shrl
sub
test
sbb
and
sub
pop
ja
iret
cmp
inc
popa
dec
mov
les
pushf
cld
dec
cmp
mov
push
shll
pusha
or
mov
mov
add
mov
in
dec
push
ret
mov
mov
jo
test
adc
aam
aad
adc
aad
pushf
inc
repz
stos
aaa
lods
mov
cs
aaa
cwtl
insb
mov
add
pop
xchg
jbe
dec
mov
sub
pop
lret
push
imul
push
sahf
push
andb
movsb
sbb
lret
lods
cs
mov
cmp
sub
lcall
sbb
test
jp
repz
icebp
movsb
push
rol
push
and
jno
movsl
roll
ljmp
jle
aas
jb
out
mov
ss
mov
inc
movsl
stos
jae
iret
add
bound
and
xchg
or
pop
in
inc
out
xor
pop
push
pop
mov
jne
mov
cli
out
add
les
sub
mov
mov
xchg
enter
add
jge
outsb
jne
jge
fwait
pop
push
jne
adc
xor
push
mov
mov
clc
clc
mov
fwait
xor
jae
sbb
mov
js
insl
test
out
cmpsl
add
mov
in
dec
into
je
testb
add
fdivl
arpl
inc
fsubl
mov
push
jno
mov
cmp
add
cmp
negl
pop
add
cmp
jne
push
or
loop
int
and
shl
sbb
fiadds
mov
push
xchg
push
sbb
jno
adc
shll
jns
jge
xchg
sbb
push
sbbl
loope
or
xor
push
xchg
jg
outsl
mov
rcll
mov
sbb
sar
imull
jmp
dec
cwtl
cmpsl
fsubs
fnstsw
jg
lret
xchg
movsl
lret
jp
cmp
test
cwtl
jp
in
mov
gs
into
pop
or
and
dec
neg
push
lcall
xchg
push
inc
mov
add
xchg
int3
add
ss
lret
ds
jno
sub
or
clc
or
xchg
push
das
xchg
cmp
arpl
jg
mov
dec
mov
sbb
dec
sub
inc
ds
cmp
push
mulb
fmul
jbe
mov
cmpsl
xor
pushf
aam
push
data16
sub
aad
fisubrl
and
repnz
out
push
jbe
dec
stos
loopne
iret
js
repnz
inc
call
imul
pop
ss
or
push
jecxz
cmpsl
mov
js
sbbl
mov
dec
shll
dec
leave
stc
pop
dec
bound
out
int3
jb
or
ret
les
jge
mov
cmp
sub
rorb
pop
xor
mov
test
lret
xchg
xchg
js
xor
rcrl
bound
push
xor
aas
dec
push
dec
add
mov
enter
es
lock
adc
leave
les
popf
sbb
jmp
or
dec
and
jg
sbb
fs
stos
xchg
lret
rorb
sub
pushl
loopne,pn
jo
cs
pusha
add
pop
pop
sti
xchg
fucomip
bound
jecxz
push
sti
sbb
mov
inc
xor
imul
push
pushf
mov
lock
pop
adc
pop
and
sbb
sub
insb
xchg
xchg
out
mov
sbb
push
ret
ficompl
shl
xorl
ds
xchg
inc
jb
or
jge
or
xor
lock
mov
xchg
cmp
xchg
out
inc
xchg
or
cmpsl
add
cli
jno
clc
fimuls
xor
and
adc
lret
lods
mov
inc
xchg
bnd
adc
loope
mov
scas
push
das
pop
push
jmp
cmp
dec
aaa
pop
cmp
mov
cmpsl
jne
ljmp
pop
cmpsl
push
add
testl
mov
aaa
popa
push
jle
inc
push
push
cmc
dec
mov
mov
cmp
xchg
fndisi(8087
cwtl
jecxz
sub
push
rclb
mov
mov
push
jecxz
sarb
adc
jns
clc
sahf
rorb
mov
pushl
ret
cmpsl
test
mov
push
call
loop
jbe
pop
sti
or
add
cmp
test
mov
icebp
cmp
mov
or
jp
out
add
loopne
push
sub
repnz
imul
jg
stos
aas
pop
sbb
outsb
mov
loop
fidivrl
push
mov
dec
int
stos
xchg
or
inc
mov
sbb
nop
sub
aad
and
push
push
adc
push
popf
add
out
dec
adc
test
xor
repnz
mov
xchg
fstps
add
mov
sub
sub
int
jae
adc
hlt
out
icebp
test
add
sbb
pop
jnp
outsb
fsubl
jo
adc
inc
lahf
cmp
cltd
cld
in
cwtl
negl
repz
adc
fcom
imul
cmpsb
adc
pop
out
push
je
sbb
sub
addr16
lea
gs
fcmovnbe
mov
inc
pop
inc
cli
scas
adc
sahf
aam
sub
xor
test
in
sbb
push
or
sbb
sub
pop
xchg
lods
inc
ret
dec
or
bound
xchg
iret
pop
sub
test
addr16
dec
pop
fcomip
xchg
push
test
xchg
or
cmp
add
mov
fsubs
ret
and
test
lods
out
add
adc
rcl
pop
orb
pop
out
inc
insb
push
out
or
insl
cmpsl
jae
push
add
test
fwait
loop
xor
adc
add
or
add
mov
loope
in
sbb
out
jecxz
sbb
dec
icebp
rclb
test
pop
dec
ret
dec
rolb
and
add
movsb
push
and
or
int
push
xchg
in
movsl
mov
mov
mov
add
sahf
and
int3
ds
psubw
ds
jne
loop
jne
jle
fmulp
subb
or
mov
in
cli
popf
mov
shlb
fisttps
imul
sub
ljmp
pop
sbbb
ror
push
cli
filds
jno
dec
movsb
repz
adc
scas
out
adc
mov
or
int3
sbb
stos
xor
xchg
jle
adc
lods
xlat
dec
test
adc
das
mov
std
andb
xchg
repnz
mov
mov
das
mov
mov
mov
pop
jmp
dec
imul
adc
iret
aaa
pop
leave
inc
sub
jne
push
rorb
jno
lea
sahf
popf
roll
addr16
mov
dec
inc
cld
call
mov
scas
enter
sarb
push
xchg
adc
xor
pop
neg
scas
cmpb
and
mov
jae
inc
adc
dec
lods
test
xor
xchg
out
mov
in
inc
sub
jge
sub
mov
mov
aaa
dec
sbb
mov
xor
enter
enter
sbb
jae
jecxz
xor
mov
call
inc
jnp
nop
adc
sbb
adc
sbb
gs
fwait
sar
int
fcmovnbe
jbe
xchg
popa
add
mov
fcompl
mov
lret
push
repz
lods
adc
inc
mov
in
ljmp
xor
daa
xor
mov
inc
mov
inc
mov
pop
sbb
repz
pop
xchg
ja
add
inc
sub
xchg
or
and
push
es
ds
pop
stos
and
std
push
scas
andb
add
pop
stos
fidivl
aam
out
ljmp
adc
pop
and
push
clc
mov
test
and
int3
ss
cmpsl
xlat
xchg
sti
sbb
lea
iret
pop
movsl
mov
lds
cmpsb
cmp
jle
pop
xor
and
popa
sar
std
movsb
add
lods
cmp
jae
xchg
mov
or
ret
pusha
push
imul
and
xchg
addb
and
lods
lret
cmp
mov
imul
outsb
xor
mov
jo
mov
ret
push
pop
adc
adc
sub
push
adc
jg
call
arpl
fildl
icebp
ffree
insb
mov
lods
enter
ret
shl
pushf
in
movsb
push
ja
pop
sbb
cmc
xor
add
jl
dec
sbb
add
add
das
mov
pop
repnz
popf
in
ljmp
mov
jb
in
jnp
loope
fldenv
enter
movsl
push
pop
insb
movsb
dec
adc
jle
sub
jns
cmc
and
js
jge
xchg
popf
lahf
xchg
call
dec
cmp
jmp
in
mov
pavgw
call
sti
xchg
andb
adc
loope
pop
les
inc
popa
lock
sbb
mov
int3
leave
pop
xor
sarb
lret
leave
hlt
aas
adc
repnz
xchg
xor
pop
icebp
aas
push
add
lahf
lahf
mov
or
cmp
add
add
dec
popf
add
xchg
inc
push
xor
mov
vunpcklpd
adc
pop
mov
xchg
ret
dec
fdivrs
push
mov
xor
mov
mov
add
stos
hlt
pop
fwait
xchg
inc
jo
push
or
in
test
movsb
dec
sbb
addb
jbe
and
ret
into
add
ss
test
jno
iret
push
pop
dec
leave
add
jl
xor
push
push
push
mov
push
jle
lret
ror
addr16
add
aas
repnz
jnp
fwait
mov
int
jg
pop
imul
jle
arpl
cmp
movsl
jl
data16
mov
imul
movsb
push
pushf
fists
loopne
cs
mov
rolb
lcall
mov
or
int
or
lock
sbb
mov
pop
lahf
scas
xor
pop
add
sub
add
mov
jmp
orb
stos
xor
ret
adc
lock
lea
mov
inc
leave
mov
xor
dec
mov
daa
mov
pop
into
xchg
iret
mov
jbe
and
push
add
pop
mov
repz
shll
push
mov
sub
dec
cltd
push
fwait
sbb
int
psllw
fcomps
mov
cmpsb
xor
or
movl
js
enter
xchg
icebp
aad
or
loope
pop
outsl
mov
sbb
xor
les
dec
inc
rol
pop
bound
pop
pop
lds
bound
mov
mov
ror
orb
sbb
jmp
fstps
fwait
push
idivb
sarl
mov
inc
stos
lods
push
arpl
lock
xchg
aas
cmp
jbe
int
or
sahf
mov
shll
mov
xchg
jg
cmp
jle
mov
adc
fistpl
fsubp
ja
fisubl
imul
sub
mov
xchg
aaa
cmp
ret
inc
movsb
loope
xchg
data16
enter
test
xor
fdivs
loopne
add
mov
xchg
addr16
add
mov
out
out
adc
add
lods
repnz
mov
mov
jmp
cld
push
jle
cmp
enter
popa
inc
push
and
mov
xlat
adc
mov
fisttps
loop
xor
popa
ret
xchg
cmpsl
iret
shr
imul
sbb
mov
inc
or
inc
loop
sub
add
mov
pusha
imul
add
jnp
mov
push
hlt
ret
xor
xchg
icebp
pop
icebp
pop
adc
inc
xlat
enter
mov
pop
ja
pusha
mov
push
mov
fsubl
jge
push
das
and
jo
fwait
or
jno
shlb
inc
je
addr16
sahf
repz
daa
or
push
andb
cmc
iret
sahf
xchg
cmp
in
lods
cltd
xor
xor
cs
dec
stos
int
mov
add
push
or
sbb
xchg
mov
imul
rorl
enter
lret
pop
lahf
stos
mov
insl
es
sbb
cmc
jp
out
inc
xor
mov
dec
fdivrl
mov
fldt
data16
sub
fdivrp
mov
ljmp
jp
int
mov
pop
shlb
mov
mov
xchg
cmp
mov
push
aam
push
sbb
dec
sbb
inc
arpl
xchg
jp
es
sbb
rcl
push
dec
and
sbb
daa
xor
insl
aad
std
cmc
mov
mov
fcmovb
in
iret
movsl
iret
les
mov
sbb
cmp
push
pushl
push
cmp
fidivrl
ljmp
xor
fs
inc
sarl
pop
in
pop
fsts
jae
push
std
jg
push
sub
pop
pusha
add
pop
push
mov
or
xchg
adcb
push
daa
lods
pop
subl
xchg
mov
add
pop
je
aaa
mov
shr
mov
pop
inc
xchg
roll
mov
push
das
xchg
cmpb
inc
jno
mov
sti
adc
xchg
push
out
dec
cltd
test
rorl
fwait
dec
movq
pop
repnz
add
sub
cmpb
dec
sbb
fsubrs
popa
imul
in
xchg
jle
addr16
push
shll
and
stos
cmp
jp
cmc
stc
call
jno
jo
mov
decb
jg
add
xlat
push
push
sub
repz
movsl
or
out
add
lcall
cwtl
cld
shlb
or
dec
es
sub
sbb
cmp
into
ja
mov
movd
dec
xchg
pop
lcall
dec
ss
xlat
xchg
add
daa
cmp
xchg
sbb
sbb
and
in
add
shrb
xor
dec
cltd
and
lahf
addl
loop
fbld
mov
gs
test
movsl
mov
cmp
mov
or
pop
pushf
fdivrl
repz
imul
test
arpl
popf
pop
inc
xlat
cltd
mov
mov
cwtl
std
mov
iret
push
ss
adc
mov
stos
lret
adcl
lea
lock
push
cmp
jae
jb
das
lods
and
xlat
mov
pop
mov
insb
mov
jae
out
mov
and
xchg
add
jecxz
cs
mov
jl
loop
mov
orl
lods
add
lds
add
dec
jb
or
ja
lret
in
stos
or
and
mov
xor
loop
fistpl
imul
in
ds
mov
mov
addr16
ret
fistl
or
ja
mov
lret
into
push
and
xchg
inc
dec
test
pop
popa
movsb
xchg
sbb
iret
mov
cmpsl
xchg
sub
push
fisttps
daa
rcr
add
or
or
sti
in
les
call
sub
movsl
dec
sub
call
cmc
test
js
dec
adc
test
pop
adc
scas
add
xor
lret
jp
das
loop
ds
mov
pop
pop
repz
lods
pushf
push
orl
jp
and
mov
cltd
in
jp
lahf
pop
pop
addb
stc
repnz
or
out
add
ret
mov
or
rcrb
mov
push
scas
fimuls
fcoms
sahf
addr16
push
lods
lock
jnp
aad
adc
arpl
sub
mov
lcall
add
sub
xchg
and
mov
fs
xchg
es
leave
lret
psubq
rorb
xchg
lea
scas
xchg
mov
jl
inc
test
xchg
sub
push
or
dec
outsb
xor
fildll
dec
inc
push
gs
sbb
rclb
jl
lock
xlat
int
fcoms
roll
iret
lods
dec
jecxz
push
pop
aam
mov
fistpl
inc
inc
mov
loopne
leave
aad
push
inc
push
pop
test
fs
and
push
inc
ret
clc
ret
jle
jg
cmpsl
xor
pop
pop
mov
mov
inc
sub
cld
js
into
push
mov
orb
cmpsb
popa
and
roll
jo
sub
xchg
adc
xor
fcmove
outsl
das
pop
or
in
and
jnp
hlt
adc
rol
out
and
aad
inc
lds
std
lds
mov
push
push
xor
add
lea
lock
jmp
jnp
lret
jge
dec
pusha
jno
dec
cmp
xchg
stos
push
divl
xor
push
xor
xchg
and
cs
out
inc
fdivrs
imul
icebp
xor
xchg
xchg
rcrb
arpl
jnp
out
push
insb
xchg
lock
jbe
xchg
sub
cmp
pop
mov
mov
dec
in
inc
out
out
arpl
inc
xor
mov
adc
mov
mov
pop
sahf
add
iret
cmp
push
jmp
aas
loopne
xor
mov
ljmp
add
flds
jecxz
bound
jno
mov
mov
inc
push
test
lods
or
sbb
test
mov
xor
push
mov
test
push
loope
sub
xchg
pop
cmp
and
sub
mov
push
sbb
and
and
add
clc
adc
test
cmp
dec
nop
xchg
sub
in
pop
or
inc
jle
xor
adc
pop
lcall
invd
insl
adc
scas
mov
in
lods
sbb
pop
in
icebp
mov
pop
movsl
movsb
in
je
sbb
lds
dec
data16
aam
testl
inc
mov
mov
jmp
or
ret
jno
lock
fsts
mov
mov
pop
cmp
arpl
dec
xchg
xchg
in
into
roll
pop
int
mov
popf
in
popa
jae
leave
ret
mov
arpl
xchg
and
movsb
jge
jge
fsubrl
mov
mov
push
xchg
test
enter
xor
out
push
sbb
cmpsl
dec
aaa
push
mov
in
cmc
adc
ret
jecxz
mov
insl
jno
dec
bound
mov
or
daa
xchg
out
adc
repz
jmp
je
je
add
lcall
xor
dec
push
ret
add
call
or
push
push
jge
mov
rcrb
jne
subb
mov
div
repz
jg
mov
add
add
xchg
in
pop
mov
mov
loop
cmp
test
or
fimuls
sbb
mov
out
mov
idivb
mov
sbb
test
out
stc
ret
ds
sbb
popf
repnz
ja
in
jb
pop
xor
cmp
dec
xor
imul
loop
out
movsb
out
js
ret
add
in
or
pop
cli
and
ret
nop
out
xor
sub
mov
xlat
clc
push
xlat
push
data16
adc
adc
mov
mov
pop
fstp
lret
xchg
xor
insl
js
imul
sbb
jge
ret
inc
add
js
mov
inc
lds
cmp
jecxz
testb
pop
movsl
std
jb
mov
insb
insb
iret
lahf
out
popf
push
mov
shll
adc
mov
ret
dec
jmp
iret
lods
int
xor
jmp
lock
aad
pause
ljmp
jmp
sub
add
stos
fisubs
jne
int
ficompl
leave
out
aad
push
imul
jle
hlt
and
pop
pop
ss
cmpb
ljmp
jnp
repz
dec
movsl
xchg
mov
sub
ret
mov
mov
ss
xchg
int
or
sub
movsb
mov
cmpsb
push
sub
adc
push
jp
in
pop
push
adc
mov
fsubrs
sbb
movl
mov
xchg
fs
imul
sub
adc
dec
mov
cmp
in
sub
aam
leave
ja
mov
lcall
cmp
jge
sbb
outsl
push
xor
push
jno
dec
or
dec
xchg
or
push
jno
or
xor
sub
sbb
lods
cmpsb
push
sbb
mov
test
xor
hlt
xchg
sub
jns
xchg
jp
mov
clc
mov
iret
lea
xor
cmpb
push
dec
cmp
and
cmp
jp
dec
sar
aam
call
cmpsb
mov
mov
mov
or
jmp
pusha
push
in
mov
push
sub
mov
jmp
stos
outsb
out
sar
xchg
aad
pop
in
stc
addps
je
popa
jg
cmp
cmpsl
push
mov
sub
fwait
pop
cmc
je
imul
mov
mov
cltd
inc
out
add
jp
sbb
cmp
xchg
repnz
and
hlt
mov
enter
shll
sub
inc
jge
fprem1
leave
mov
jl
mov
dec
jo
gs
ret
push
mov
pushf
mov
push
mov
mov
mov
arpl
test
adc
clc
std
test
xchg
imul
mov
jbe
and
mulb
lret
push
jmp
insb
cmp
inc
bound
push
xor
dec
repnz
das
in
dec
mov
sahf
shlb
and
test
or
aas
jo
popf
lock
xchg
pop
xchg
ljmp
cmc
rcll
mov
mov
xorb
cmc
jmp
rcrl
divl
bound
fiaddl
or
mov
xchg
fimuls
dec
mov
pusha
arpl
cli
inc
dec
stc
not
or
filds
loope
cmpsl
out
mov
push
test
or
cmp
loopne
xor
mov
dec
or
jle
push
movsb
xchg
mov
insb
add
aam
inc
popl
dec
pop
inc
lods
faddl
sbb
imul
adc
shr
repnz
push
shll
mov
push
push
stos
je
jnp
jae
xchg
aad
enter
mov
outsb
ficoms
adcl
cmp
dec
jb
cmc
in
imul
xchg
push
mov
jecxz
std
loopne
or
add
aad
sbb
aam
mov
cmp
xchg
sub
out
adc
pop
pop
xchg
pop
sbb
ljmp
enter
adc
mov
mov
mov
and
mov
mov
mov
loope
lock
sub
jne
fisttpll
push
cli
fsubl
pop
ja
add
mov
in
jmp
nop
add
jecxz
lcall
stos
mov
in
push
fidivrs
cmp
sbb
sbb
push
mov
pusha
decb
dec
int
fstl
jne
gs
mov
add
add
inc
cld
subl
dec
xchg
jae
pushw
mov
and
push
add
mov
xchg
xor
jno
ss
mov
dec
out
sbb
pusha
inc
inc
xor
adc
mov
add
inc
mov
xchg
call
imul
mov
popf
pop
push
cmpb
mov
push
sti
push
test
jne
mov
mov
scas
test
inc
mov
adc
fwait
rcll
dec
pusha
sub
stos
shrb
shlb
pusha
and
dec
mov
repz
cmpb
gs
pop
hlt
stos
push
rcrl
lods
lret
in
dec
in
ret
cmp
mov
mov
sub
mov
and
icebp
xor
and
and
shl
and
mov
into
stc
mov
bsf
mov
imul
in
jmp
dec
cmp
cmp
jns
jg
xor
stos
gs
movsl
jnp
adc
mov
ss
sub
xchg
outsb
in
or
push
xor
frstor
mov
mov
adc
out
inc
clts
fisubl
sbb
jne
xchg
popa
cmpsb
mov
outsl
loope
jg
mov
push
lea
stos
cmc
adc
mov
call
loopne
cli
and
mov
inc
inc
test
add
rcrl
push
mov
incl
jg
xor
ljmp
sarb
sahf
icebp
dec
cli
loop
out
pusha
and
enter
lods
out
imul
mov
adc
push
push
cli
test
fidivl
mov
cmc
mov
lods
pop
hlt
test
xor
xchg
lret
xor
lds
sbb
pop
sbb
shl
test
in
mov
push
shrb
jg
add
pop
iret
loope
adcb
xlat
mov
arpl
jae
outsb
sahf
insl
dec
pushf
imul
or
mov
jbe
iret
cmpsl
mov
push
mov
aam
imul
inc
add
mov
and
fstpt
out
lock
mov
jmp
and
call
jno
add
push
test
cmp
int
aad
adc
loopne
or
push
dec
js
xorl
cmpsb
inc
idiv
cmp
xor
es
push
mov
lods
lock
mov
lds
pop
jp
mov
sub
hlt
xchg
arpl
in
cli
fidivrs
jg
fnstenv
imul
cltd
imul
pop
inc
lcall
or
xchg
add
xchg
sti
push
fists
pusha
add
add
add
sbb
stc
sarb
lret
dec
dec
dec
xchg
int
test
ss
outsb
xchg
cmp
ret
leave
xchg
or
xchg
stc
rcrb
in
pop
loopne
xor
loop
dec
gs
scas
mov
cmp
jbe
jge
add
lgs
test
out
mov
test
fiadds
mov
stos
jbe
aam
ss
fisttps
subb
lds
lret
dec
popl
test
je
ss
fstps
xlat
or
add
push
xchg
pop
sbb
daa
or
pop
jns
js
push
cmc
mov
or
arpl
pop
xchg
jmp
adc
popa
or
pusha
loop
push
jg
mov
ficompl
mov
mov
daa
ret
aaa
ljmp
mov
mov
cmp
mov
jle
enter
dec
ljmp
dec
mov
cmpsb
pop
test
push
pop
push
cmpsb
cmpsb
jae
mov
into
mov
popf
repnz
jecxz
pop
sti
fs
leave
mov
adc
mov
aaa
nop
pop
and
popf
jmp
orl
sub
push
test
mov
sbb
rcrl
jle
stc
jno
mov
out
xor
inc
mov
inc
ret
cmpsl
fistl
cmc
adc
pop
scas
sbb
sub
adc
cmpsl
test
xchg
and
sbb
cld
xchg
stc
xor
call
mov
fadd
rorl
popa
sbb
repz
mov
jbe
pop
aas
push
movsb
mov
test
frstor
fdivl
data16
mov
fidivrs
hlt
ds
scas
and
mov
cli
rcll
shrb
enter
cli
inc
jb
test
xlat
jno
inc
out
xor
or
push
pop
lods
jne
cmp
cmp
push
mov
mov
and
dec
pop
mov
pusha
mov
aaa
cmp
fldenv
aam
cs
stos
push
xchg
cltd
in
int
sub
inc
jne
xchg
hlt
xor
imul
xchg
sub
sub
adcl
xor
add
sbb
inc
arpl
dec
test
fidivrs
iret
adc
rcr
mov
sbb
rcrl
adc
add
xor
insl
data16
repz
and
lock
xchg
pop
push
loope
mov
cmpsl
mov
int3
fistpll
xor
lds
pop
ret
lods
js
and
mov
adc
imull
in
loop
stos
dec
mov
std
mov
add
sub
sbb
pop
bound
mov
inc
jge
outsb
xchg
es
and
jae
mov
push
mov
sahf
pop
jle
lods
aam
mov
fstpt
stc
xchg
stos
lods
inc
add
sahf
stos
xchg
cmpsl
cmp
mov
clc
adc
ds
xor
jb
pop
fidivs
jns
mov
add
pop
fmul
xchg
divl
or
filds
les
sbb
inc
inc
stos
xor
cltd
lcall
cmp
mov
mov
das
js
sub
fistl
xchg
sbb
add
out
and
clc
cmpb
xchg
cmp
mov
addr16
or
pusha
add
lods
repnz
int
adc
push
testl
cltd
ret
jle
add
pusha
mov
iret
or
inc
jbe
pop
fcomps
and
xor
xchg
mov
inc
shl
sbb
dec
arpl
filds
mov
sbb
inc
xor
call
int3
test
mov
fs
lahf
xor
repnz
btc
aad
mov
xchg
inc
outsl
scas
xor
jge
dec
les
loop
mov
xlat
outsl
cmpsl
sub
popf
out
mov
mov
scas
or
into
dec
inc
add
sub
aas
daa
outsb
sbb
ret
lods
std
dec
lretw
cmp
mov
std
fs
push
aam
outsl
cwtl
adc
aad
push
push
cmp
js
mov
xor
incb
rolb
jb
adc
mov
push
add
cs
and
jo
gs
cmpsb
cmc
rcrl
mov
mov
movsl
xorl
dec
fadd
dec
insb
loop
mov
mov
inc
and
xorb
adc
or
jmp
jmp
add
mov
cld
ret
cmp
mov
add
mov
add
mov
adc
pop
je
shl
lret
fwait
xlat
or
aas
pop
rcll
and
popa
into
test
cmp
loope
xchg
push
mov
push
mov
pushf
mov
repnz
push
sbb
sbb
cmp
daa
dec
out
jae
enter
std
lahf
cmc
ret
dec
inc
insl
xor
movups
daa
test
flds
ss
mov
push
in
std
push
lods
jbe
cmp
pop
xor
cwtl
jne
fidivl
pop
xor
pop
push
pop
mov
inc
dec
cmp
insb
dec
ficoms
jno
imul
mov
or
sahf
lret
cmp
lea
xchg
lods
sub
or
inc
insb
push
fnsave
rcl
aam
loope
into
pop
fwait
int
outsl
outsb
jle
cli
fbld
bound
fwait
stos
push
sarb
add
aas
cmp
mov
mov
sbb
iret
cmp
xchg
fwait
xor
push
xor
mov
icebp
mov
sarl
mov
sub
stos
movsb
sbb
jae
das
and
push
sbb
inc
pushf
push
mov
loop
stos
mov
int
push
and
inc
pop
fbld
scas
arpl
mov
out
jae
xchg
sbb
or
test
pusha
sub
pop
adc
push
dec
out
cld
iret
add
popa
fmuls
jp
mov
scas
and
inc
jp
dec
outsl
push
xor
jae
mov
pop
cmp
test
bound
push
test
mov
and
test
outsl
sub
fsts
loop
or
mov
push
push
leave
sub
sbb
loope
test
push
fwait
mov
pop
jmp
out
outsb
mov
sbb
adc
outsl
iret
cmp
scas
add
and
insl
das
sbb
out
jge
out
test
inc
mull
mov
add
out
mov
cld
cmp
decl
test
fdivr
pop
push
pop
pop
mov
sbb
mov
in
dec
pop
sbb
and
jo
mov
dec
shrl
jae
scas
pop
add
movsl
mov
xchg
dec
pop
ret
movsb
lods
std
call
sbb
jb
outsl
lahf
adc
push
out
jp
jne
sub
pop
stos
jmp
outsb
inc
adc
or
notb
jmp
add
lcall
xchg
int
push
cltd
jne
mov
mov
inc
pop
push
rclb
movb
adc
dec
xchg
xor
and
dec
push
xchg
andb
jne
fimull
dec
inc
dec
xchg
sub
mov
mov
sbb
xchg
jp
sbb
mov
mov
movsb
lcall
fcmovne
pop
fsubp
mov
mov
popl
icebp
dec
adc
stos
test
lea
jge
mov
in
jmp
rcrb
sub
pop
mov
sub
mov
jne
fadds
push
shrb
dec
or
sbb
pop
sbb
xchg
mov
dec
ss
xchg
insl
stos
mov
mov
dec
enter
xchg
int
jp
test
adc
add
inc
call
outsb
cltd
inc
xor
loop
call
add
push
loop
orl
dec
xor
sahf
movl
pop
aam
in
inc
mov
mov
mov
xor
call
mov
pop
push
cmp
pusha
pusha
mov
sub
xchg
into
xlat
push
sub
xchg
sbb
lcall
mov
pop
sbb
push
test
cmpsb
and
jns
and
repz
sub
cmp
sti
dec
int3
leave
imul
subl
outsb
xlat
sub
or
mov
dec
inc
scas
int3
mov
push
or
cmp
in
adc
insb
shrb
push
ss
arpl
push
leave
sbb
sti
aas
and
shl
stos
dec
das
dec
push
jle
bound
xchg
out
lods
dec
int3
aas
repz
rcrb
adc
mov
mov
inc
into
mov
jbe
jo
in
fcmovb
dec
cmc
in
jge
test
push
rcll
dec
jmp
popa
adc
xchg
fisubl
inc
lcall
int3
mov
push
push
and
jl
mov
mov
fwait
ss
cmp
shrb
sbb
fisubrs
xlat
into
xor
pop
insb
inc
mov
inc
loop
cmp
aas
dec
repz
mov
pop
sarl
mov
andl
and
xor
clc
cmpsl
roll
test
cmp
iret
jge
out
in
mov
mov
ficoms
int3
repz
push
enter
clc
xor
xchg
call
mov
mov
mov
or
cmp
inc
rcl
dec
sub
test
sub
inc
push
push
notb
mov
insb
into
xchg
xchg
out
push
jmp
shrb
push
inc
out
sub
into
dec
mov
negl
mov
ds
xchg
std
loopne
sbbb
repnz
mov
xchg
cmpsb
ds
ret
xchg
mov
insb
add
cmp
js
inc
pop
std
mov
mov
pop
outsb
inc
pop
mov
xchg
add
mov
mov
xor
pop
adc
cmp
aas
test
or
xchg
jg
cltd
lds
rorl
push
lret
mov
mov
add
rcr
icebp
ja
dec
stc
fs
lahf
mov
rcrl
inc
or
sub
push
cmp
movl
add
pop
daa
hlt
insb
add
lret
adc
daa
lods
inc
scas
mov
lahf
xchg
jmp
dec
test
add
scas
cs
inc
jmp
dec
les
es
jnp
lock
pop
fcoml
or
cmp
ja
popa
jp
ret
pop
loopne
pop
jno
mov
lds
jnp
addb
lea
jg
pushf
sub
scas
inc
xor
dec
out
sbb
or
sar
sbb
jbe
cmp
loopne
leave
jo
add
push
and
xchg
cmp
pop
or
cmpsl
les
push
rcl
sbb
in
mov
out
inc
les
and
imul
xchg
push
nop
and
scas
sub
shrb
and
jnp
lret
inc
cmpsb
ret
ret
xchg
das
mov
and
loop
pusha
xchg
out
jne
popf
cs
cmp
mov
sbb
jmp
push
cmpb
jno
xor
dec
imull
mov
sahf
lods
movsb
aam
mov
xor
rorb
mov
xchg
or
jnp
call
test
out
stos
and
xchg
dec
add
in
jno
nop
cmp
mov
push
jns
out
mov
add
aaa
push
insl
popf
pusha
mov
jge
iret
xlat
sar
mov
rclb
and
jecxz
lock
pusha
outsb
scas
repnz
pop
and
loopne
dec
das
adc
mov
out
js
add
pop
push
dec
sarb
jg
jp
test
xlat
std
pop
pop
mov
addr16
adc
mov
mov
xor
cmp
pop
push
andl
jle
ret
dec
add
add
insl
jne
push
xorb
and
and
lods
dec
xchg
mov
inc
mov
and
imul
stos
xchg
inc
bound
sbbl
mov
adc
xchg
in
fstpl
jne
mov
dec
clc
push
sub
xorb
pavgb
scas
testb
xorb
out
mov
add
push
ret
pop
cltd
mov
ss
mov
xor
jge
incb
divl
data16
and
scas
icebp
pop
add
sbb
cld
inc
xchg
mov
push
fidivrl
pop
popa
inc
pop
xchg
jb
iret
cmpsl
daa
mov
ss
xchg
mov
fs
push
cld
pop
add
nop
dec
popa
shrb
pop
fwait
cmp
inc
jecxz
rolb
inc
aad
inc
imul
pop
nop
dec
push
mulb
fisubl
aaa
fcomps
mov
jo
inc
pop
pop
add
add
lea
int
cli
int
xchg
loop
insb
push
xchg
mov
add
lcall
xor
mov
or
sarb
mov
cmp
xchg
mov
inc
scas
xor
fbld
pop
xchg
insb
xchg
adc
fs
or
hlt
and
fwait
or
inc
je
ds
sub
je
gs
fcoml
rorl
cmp
mov
jns
insl
lret
add
xor
push
repnz
sub
xchg
pop
xchg
jae
cmpsl
xlat
pushf
jnp
jbe
aam
inc
mov
out
dec
dec
data16
push
pop
mov
imul
push
pop
popa
aam
sbbb
fadds
dec
jg
jns
outsb
xchg
jne
out
xor
sbb
fdivrl
jle
cmpl
sub
sub
aaa
lret
arpl
push
daa
xor
push
xor
adc
mov
add
or
mov
cmc
test
mov
jp
mov
lock
rcl
mulb
sbb
aas
std
sbb
jmp
imul
inc
addr16
ds
and
cmp
insb
xor
cmp
xor
add
mov
or
ret
addr16
jno
shll
mov
data16
mov
push
lret
jnp
das
insl
bound
in
lahf
add
dec
xor
js
in
mov
loop
xor
ja
dec
xor
xchg
push
jns
xor
mov
jne
or
out
jbe
pop
cmp
incb
int
pushl
inc
jae
cltd
arpl
in
orl
das
ljmp
loop
mov
and
mov
testb
mov
das
in
jge
enter
fidivl
cld
mov
sahf
fldl
je
dec
mov
lods
not
push
xchg
sub
inc
push
lcall
out
fs
xlat
in
stos
in
sahf
xor
fcmovb
test
sub
dec
int3
out
lods
popf
inc
dec
addr16
iret
mov
enter
flds
xchg
add
rorl
test
les
push
jp
iret
cli
jns
add
xchg
jbe
jge
or
loope
es
or
enter
cmp
js
pop
test
mov
aam
fwait
repz
inc
mov
jno
dec
jmp
mov
fiaddl
add
sti
pavgb
jp
rcrl
out
lret
loope
mov
push
fucomip
jae
movsb
arpl
cmp
lods
mov
mov
pop
lret
or
cli
xor
sti
pop
repnz
stc
aaa
popa
sub
xchg
std
insl
sub
cmpsb
and
lock
inc
mov
inc
rol
std
or
mov
mov
lret
enter
push
dec
adc
repnz
pop
insl
mov
sti
cmp
call
cmp
ds
movsb
in
push
pop
mov
adc
dec
push
hlt
cmp
lahf
mov
jnp
aas
ja
in
sub
xchg
adc
aad
jae
movsb
lret
and
jmp
dec
nop
sarb
stos
std
inc
adc
pop
pushf
mov
sbb
adc
xchg
insl
es
add
ss
mov
outsb
idivl
add
incb
mov
mov
sbbb
cmp
sbb
and
jmp
pop
add
into
xor
cmp
sub
arpl
push
out
jmp
and
sub
and
jbe
add
jle
rorl
or
sti
aam
mov
in
xchg
or
push
rorb
push
jp
or
out
cmp
in
mov
push
push
mov
sbb
sbb
iret
push
xchg
sub
pop
jno
das
insl
test
in
cwtl
lds
push
mov
test
jp
sub
lods
decb
sbb
and
xchg
out
stos
mov
fsubs
ja
mov
inc
hlt
pushf
adc
mov
fwait
cltd
xor
mov
mov
or
pop
lahf
xchg
aas
jmp
in
cmp
sarb
repz
xchg
push
xchg
cmp
int3
push
js
movsb
ljmp
scas
add
cmc
mov
fsubs
insl
sub
test
fwait
sub
dec
cmp
jmp
xlat
and
mov
int3
push
or
jg
xchg
inc
les
mov
sub
push
sub
push
mov
out
sub
leave
push
and
fs
ja
mov
or
hlt
add
mov
popf
xchg
enter
in
pop
notl
lcall
push
int
mov
subl
paddsw
inc
nop
xchg
jge
cmp
push
outsb
mov
adc
mov
cmpsb
jecxz
fs
aaa
xchg
cmc
jo
arpl
xchg
xchg
xchg
dec
mov
and
xchg
xor
dec
sub
mov
fstps
test
adc
notl
xchg
xor
imul
mov
xorl
xor
sub
imul
lcall
int
andb
or
dec
pop
sbb
repnz
fadds
clc
mov
cmp
jp
in
xchg
subb
or
sub
andb
sbb
xchg
jmp
orb
popl
push
push
xor
sbb
dec
xor
xchg
add
xchg
mov
push
cmp
pop
inc
mov
mov
cltd
add
test
bnd
or
rcr
xchg
adc
mov
mov
push
rolb
pop
inc
sbb
mov
leave
xor
divl
stos
test
xchg
or
sbb
fwait
dec
mov
jmp
icebp
iret
xor
imul
cmp
hlt
jp
mov
hlt
and
mov
sbb
mov
cmpsl
inc
push
or
adc
push
xor
test
push
cmp
dec
inc
fs
cmp
jp
int
enter
mov
inc
test
out
sbb
sarb
add
jnp
pop
fsubs
pop
movsb
or
push
outsl
out
mov
lock
cmpsl
mov
jnp
push
enter
ss
cmp
loope
cld
jle
aad
sar
push
popf
adc
and
lea
lock
and
inc
sbb
mov
cwtl
jg
and
insl
xor
lock
adc
insl
scas
ret
push
mov
mov
int
test
scas
adc
fistps
in
jo
mov
shl
das
insl
stos
ja
in
mov
js
mov
sub
lret
cmp
sbb
call
ret
sub
sbb
jmp
sub
or
pop
push
cmpsb
cli
sub
mov
dec
mov
nop
fists
jmp
scas
hlt
repz
sbb
sub
jp
jns
add
add
sti
inc
xchg
and
popa
mov
rcl
pop
sub
adc
adc
xchg
xchg
dec
popf
pop
repnz
arpl
push
das
xchg
xlat
out
popa
imul
js
scas
in
mov
dec
add
mov
mov
popf
dec
cmpsb
xchg
cmp
rcrl
lods
fadds
cld
lds
ss
lods
push
jns
out
sub
stos
sbb
jmp
jp
sub
repz
iret
imul
mov
xchg
jmp
push
bound
jo
xor
cmc
mov
sub
insb
or
sbb
add
mov
scas
pop
loope
pop
into
iret
into
jb
adc
std
sub
mov
imul
jle
xchg
mov
addr16
popa
xchg
push
mov
xchg
into
das
mov
mov
add
cmpsb
fwait
xor
xlat
and
int3
and
loop
add
in
lea
add
inc
not
ficomps
rolb
lcall
repnz
push
shll
mov
pushf
inc
pop
xor
mov
pop
leave
movsl
add
jmp
leave
dec
add
mov
addr16
jne
mov
test
cmp
inc
pop
jb
jne
xlat
push
push
xchg
movsl
jecxz
dec
incb
ljmp
jmp
or
into
xor
dec
test
rclb
out
sub
add
popf
inc
ja
push
lret
sub
das
stos
fwait
add
sbb
fwait
or
subl
jp
sub
cmp
stc
mov
push
fucomi
pop
push
or
lret
fsubrs
mov
shll
cmpsl
xchg
dec
js
in
dec
fnstenv
test
test
xchg
xchg
xchg
inc
xor
jmp
aam
pushf
and
sub
shrl
cld
xchg
sbb
aad
out
and
adc
arpl
sub
and
negl
test
rcrb
dec
out
movsb
daa
and
test
and
clc
cmpb
je
rcrl
fisttpll
add
in
cmc
and
mov
rolb
int
in
jo
xchg
test
mov
mov
mov
scas
adc
negb
lahf
adc
jb
and
subl
js
aad
and
ljmp
dec
sub
cmpsb
xchg
jmp
fwait
push
je
add
stos
jecxz
aam
loopne
jmp
insb
cmpsb
jns
push
xor
lods
adc
adc
xchg
imul
in
jo
std
sub
xor
fwait
cwtl
jno
pcmpgtb
jecxz
xchg
cmp
stos
in
jle
sbb
mov
sarl
jg
jp
push
sub
xor
int3
aad
pop
mov
int3
jp
mov
in
pop
data16
ds
adc
js
mov
lock
in
mov
mov
ja
mov
and
out
imul
cmp
jne
xchg
dec
dec
jl
loope
pop
pop
or
push
out
je
jb
lds
mov
roll
dec
sub
sbb
mov
cmp
out
arpl
sub
jne
or
dec
xchg
sub
sar
mov
mov
fsubl
movsb
mov
lret
push
xchg
xor
inc
mov
loope
or
xchg
daa
dec
je
cmp
xor
pop
adc
mov
fs
adc
in
into
and
js
inc
mov
das
sbb
pop
sahf
sti
repz
lahf
test
xchg
xor
outsb
movl
push
repnz
jb
inc
shll
loope
cmp
bound
xchg
addb
push
test
stc
inc
daa
aas
and
or
push
inc
outsb
cmovo
mov
in
cmp
push
cmp
loope
lahf
dec
ss
xlat
sbb
xchg
lahf
sti
mov
add
pop
mov
jae
jae
ret
add
push
inc
jg
cmpsb
std
push
pop
sub
pop
mov
jle
cli
sbb
shlb
mov
fcmove
and
imul
cmp
icebp
jmp
clc
add
pop
out
adc
lea
and
xchg
xor
popa
mov
daa
xchg
ja
testl
iret
cli
fnsave
test
sub
aam
arpl
pop
arpl
and
dec
lock
mov
inc
jmp
xchg
push
test
jno
dec
popf
xchg
xchg
pop
xchg
adcb
jg
adc
sub
loope
dec
xor
jp
jb
jp
or
mov
dec
dec
into
push
test
push
cmc
inc
mov
and
sbb
cltd
inc
mov
cli
sahf
cld
add
pusha
loop
mov
dec
sub
add
cmp
jno
and
pusha
aas
enter
sbb
fwait
test
loopne
mov
fnstsw
cmp
mov
xor
push
jns
push
jg
bnd
add
dec
cpuid
ss
std
ss
das
outsl
cmpsb
adc
inc
xor
movsb
adc
cwtl
icebp
push
imul
gs
inc
cwtl
push
sbbb
out
rclb
ret
outsl
pop
push
mov
ret
aaa
pop
aaa
mov
les
cmpsl
enter
pop
lock
mov
ja
nop
pusha
dec
adcl
dec
xchg
cmp
sub
mov
dec
mov
ss
icebp
das
cltd
test
inc
es
stc
ret
loop
in
insl
push
adc
mov
js
sub
xorb
pop
sub
loopne
mov
mov
cmpsb
std
sbb
pop
lods
imul
and
jnp
dec
xchg
out
push
cmp
inc
dec
shll
mov
into
jl
push
movsb
mov
and
and
xlat
out
lods
dec
dec
cld
jl
adc
sbb
jne
sar
sbb
cs
mov
add
cmp
adc
or
xchg
lea
cmpsl
and
in
and
sbb
jne
cmp
es
pop
cmpsl
dec
cltd
jg
xchg
addl
lcall
fisubrs
into
sub
out
stos
or
mov
je
mov
outsb
mov
mov
sahf
jne
das
pop
dec
lret
mov
incb
ljmp
test
cmpsb
repnz
mov
ds
loope
and
stc
pop
arpl
leave
lock
mov
lcall
cmpsl
dec
inc
imul
inc
adc
rcrl
pop
and
jecxz
ret
jns
ret
or
xchg
jp
hlt
push
jcxz
cmp
int
pop
repnz
decl
pop
push
loop
mov
cmc
je
loopne
popa
xor
ror
jg,pt
lock
cwtl
ds
sub
jl
pusha
adc
mov
xchg
mov
lods
mov
or
int
mov
add
xor
cwtl
mov
mov
pop
fbld
sub
add
mov
loop
adcb
loopne
imul
mov
mov
aaa
cmpsb
mov
mov
and
rcrl
frstor
fstpl
insb
aam
xor
xor
cld
fdivs
add
jnp
mov
repnz
xchg
jbe
xor
lcall
adcb
in
leave
cmc
jl
dec
int
movsb
dec
in
adc
iret
dec
jne
inc
push
jecxz
fnstcw
adc
xchg
inc
xchg
inc
cld
orb
adc
cltd
pop
hlt
ret
or
scas
push
cltd
cmpsl
dec
jnp
popa
dec
and
and
ljmp
cld
lods
imul
dec
lcall
loope
das
insl
xchg
stos
add
mov
scas
push
jb
mov
pop
mov
jb
lahf
mov
sarl
cmp
hlt
jecxz
mov
or
mov
inc
cltd
push
jp
outsb
cld
and
lds
sub
fwait
rclb
pop
inc
mov
pop
inc
int
into
rorl
and
and
ficoms
cmp
cltd
push
popl
shll
lock
scas
mov
js
or
pushf
mov
pop
mov
jg
sahf
clc
xchg
outsb
loopne
xor
add
cmp
mov
gs
or
popf
lret
push
shlb
shl
mov
pop
inc
insl
xchg
mov
int3
stc
test
mov
and
pop
data16
xchg
inc
arpl
mov
xor
sahf
pop
movsl
rol
cli
cmp
xchg
xor
inc
mov
les
shll
ja
push
push
or
out
or
sbb
ljmp
add
int3
fincstp
pop
stos
sbb
pop
insb
leave
int3
mov
cmp
cli
sahf
fcos
cmpsb
clc
out
pop
inc
out
mov
mov
es
popf
jb
out
mov
aad
jnp
int
sub
lret
adc
je
inc
mov
popa
dec
sub
add
jecxz
sarb
add
xchg
shlb
pop
and
xchg
in
mov
xor
adc
adc
in
popf
and
iret
and
fdivrs
push
inc
sub
movsb
or
int
add
in
adc
mov
sub
and
add
xchg
or
mov
es
or
loop
xchg
sarb
mov
jne
push
pusha
cmp
pop
add
or
sub
push
ss
cmp
aam
cmpsl
ret
popa
xchg
add
test
xor
push
add
mov
insl
cmc
jne
dec
inc
lret
insl
out
stos
cmp
outsl
lea
aas
stc
mov
ljmp
jle
mov
test
xorb
cmc
inc
mov
es
insl
lret
ret
cs
pop
jg
sbbl
hlt
ret
mov
aaa
popf
adc
mov
add
inc
test
push
scas
sbb
push
cmp
stos
pushf
and
mov
pop
or
in
mov
mov
imul
xchg
out
pop
pop
call
push
push
inc
sarb
cmp
push
sub
ds
sub
push
cld
repnz
dec
jg
sbb
mov
mov
loopne
xchg
dec
mov
lret
add
mov
pusha
push
ficomps
mov
jo
add
test
pop
push
rolb
pop
xchg
jge
testl
and
dec
ds
xor
les
and
xchg
movsb
pushl
inc
jo
sub
adc
or
cbtw
in
movsb
mov
pop
adc
pop
ret
rorb
add
mov
jb
or
or
xchg
fmul
orl
mov
mov
les
inc
scas
ss
out
negb
ss
imul
cmp
fwait
sbb
stc
pop
xchg
daa
lods
iret
pop
ds
adc
dec
sbb
pop
lods
cmp
lahf
cwtl
mov
lods
mov
sub
sbb
jb
cmp
add
stos
adc
jbe
ss
pop
imul
fcmovnbe
arpl
or
into
movsl
and
and
push
sub
pop
cmp
or
xor
mov
mov
repnz
jecxz
pop
cmp
cltd
iret
xchg
out
cmp
cltd
loopne
mov
push
cs
fsubrp
or
test
dec
ficoms
and
out
sbb
jl
pusha
stos
outsl
pop
sub
or
mov
mov
inc
in
movsl
xor
cld
popa
lret
adc
aam
mov
test
mov
icebp
xor
cmp
mov
mov
xlat
cmovnp
mov
rol
jno
cs
xor
mov
pop
fdivp
xchg
outsl
lds
clc
mov
xor
pop
imul
and
out
js
jmp
pop
lods
xor
sahf
movsb
add
adc
or
fdivrs
sarb
jmp
push
xchg
stc
rcl
lcall
dec
mov
fnsave
aaa
pushf
ds
mov
outsb
hlt
and
loope
xor
pusha
and
mov
in
cmc
int3
cmpsl
cli
into
mov
mov
sub
in
pop
mov
cmp
dec
dec
pop
lock
sahf
add
add
lock
push
xchg
mov
test
imulb
xor
in
fwait
inc
fnstenv
mov
or
popf
add
add
fwait
clc
fcmovu
mov
or
jle
push
outsb
cli
jge
dec
leave
and
mov
push
nop
outsl
dec
sahf
mov
int
push
loopne
lret
xlat
lret
enter
cli
jbe
jne
lret
cmpxchg
sti
push
and
and
adc
mov
and
lcall
js
mov
jno
xchg
aad
add
imul
hlt
xor
out
int
jbe
cmc
data16
jno
add
jg
and
xchg
hlt
imul
outsb
sub
inc
push
test
or
pop
dec
cmpsb
in
lret
aas
lea
das
bound
xor
stos
sub
es
xor
push
mov
ja
jl
and
imul
lods
mov
jno
popa
int3
xchg
mov
lret
and
rcrb
addr16
dec
add
cmp
dec
xlat
lods
cld
pop
jp
jecxz
pop
mov
add
negb
and
stc
push
les
dec
bound
int
jp
pop
lds
ss
jmp
mov
loope
push
mov
xor
xchg
enter
fdivs
dec
dec
cmp
inc
or
ljmp
mov
pop
adc
jle
shll
jmp
inc
jno
sbb
mov
jb
popf
and
lret
cmp
je
inc
xchg
mov
imul
cmp
test
push
lret
adc
sub
jo
push
mov
leave
enter
mov
lret
bound
insb
jo
and
mov
inc
cltd
cs
insl
repnz
push
in
aaa
lock
jne
mov
sti
or
jge
add
jp
test
into
ja
addl
inc
stos
mov
sub
ljmp
nop
pop
pcmpeqd
scas
decl
xor
rcrl
in
jecxz
shr
loope
fbld
lahf
sub
iret
stos
divb
or
mov
sti
push
jge
std
adc
dec
and
sar
jnp
xchg
pop
sub
in
roll
lcall
loop
out
pmuludq
scas
stos
mov
gs
lret
xchg
int3
jg
mov
sbb
imul
add
mov
data16
jge
daa
xor
xchg
test
sub
cmpsl
pushf
lds
xchg
inc
inc
stos
das
xor
outsl
or
xchg
lods
mov
out
lahf
add
iret
ds
jmp
pop
push
xor
sub
lods
outsb
addr16
sub
sti
jg
js
mov
push
adc
lock
loopne
pop
dec
cmpl
stos
xchg
or
lea
or
test
mov
or
adc
sahf
or
or
bnd
mov
adc
push
bound
arpl
jle
icebp
jl
test
in
lret
and
call
adc
aam
sub
xchg
or
shll
addr16
push
mov
jae
loope
bound
test
jno
inc
add
mov
push
fsubrl
out
enter
mov
gs
pop
jo
mov
pop
xchg
stos
loopne
mov
sbb
mov
test
xchg
adc
jl
es
sbb
cwtl
push
push
xlat
cwtl
xor
and
push
loopne
lahf
ror
stc
mov
scas
cltd
lods
inc
and
stos
mov
sub
popa
out
repnz
ljmp
addr16
aas
jns
or
test
ret
jp
or
movsl
push
adc
sbb
mov
scas
es
add
push
push
mov
das
push
ret
dec
cli
sbb
add
lea
cwtl
push
cmp
jmp
inc
mov
adc
push
mov
mov
sub
cmc
pop
jbe
add
inc
into
jno
sub
jmp
mov
data16
or
dec
lea
pop
lret
push
test
movsb
and
out
aad
mov
hlt
aaa
push
push
cmp
mov
in
jl
pop
mov
mov
mov
das
aas
push
xor
push
sub
push
fldenv
xchg
faddp
fnstenv
pop
jae
jns
xchg
stos
mov
dec
jnp
mov
pop
gs
mov
out
mov
repnz
jp
pop
daa
pop
mov
cmpsb
jp
push
xchg
loope
call
lods
pushf
mov
jbe
outsl
stos
in
lret
or
out
xor
inc
out
arpl
mov
mov
stos
insl
inc
push
lcall
jb
aaa
stc
adc
push
jg
pop
xor
imulb
testl
popa
aaa
ja
mov
outsb
jae
or
enter
dec
pop
adc
pop
pop
add
nop
lret
mov
imul
inc
and
sub
in
movsb
loop
hlt
fisubrs
pop
mov
cmp
adc
xor
push
mov
mov
and
inc
mov
pusha
or
leave
cltd
xor
in
push
mov
mov
fdivs
in
lahf
push
xor
dec
xchg
sbb
lock
shl
test
dec
and
gs
inc
and
mov
pop
dec
and
ffree
pop
inc
lret
and
jge
out
and
lods
mov
in
pop
push
mov
and
or
adc
popf
adc
jmp
dec
scas
out
pop
xchg
jge
add
dec
sub
sbb
outsb
lods
sbbb
inc
mov
pop
cltd
cmp
mov
mov
jl
cmpsl
arpl
xor
adc
in
dec
jecxz
inc
xchg
and
out
outsl
push
sahf
pop
xchg
mov
dec
mov
xlat
pop
mov
push
xchg
repz
jnp
pop
iret
sbb
add
push
je
test
push
in
add
movsl
imul
aas
out
fidivrl
pop
lret
shlb
xlat
pop
idivl
mov
sub
enter
fbstp
push
ja
mov
iret
andl
cmp
sbb
out
pop
jmp
scas
pop
imull
sub
sarb
mov
out
mov
cli
mov
or
call
sbb
xchg
lret
mov
push
xchg
inc
mov
or
scas
push
sub
arpl
dec
push
and
mov
pop
and
mov
inc
or
pop
push
shl
push
sub
movsb
pop
testl
jns
cmp
mov
sub
and
pop
dec
leave
imul
es
mov
cmpb
rcll
stc
cmp
add
aam
leave
stos
lock
popl
popa
jl
aaa
push
aaa
out
js
or
stos
and
out
fstpt
jnp
xor
mov
add
out
sbb
pop
pop
jmp
jno
dec
test
outsl
cmp
jnp
out
mov
add
adc
inc
dec
in
dec
or
mulb
sbb
jmp
hlt
pop
aad
cmpsb
sub
lods
inc
inc
aas
in
mov
lods
stc
push
add
aaa
outsb
fwait
clc
xor
or
jns
mov
xor
sub
lcall
xlat
imul
dec
inc
and
mov
je
imul
insb
imul
mov
add
dec
add
jbe
outsl
xor
lods
and
mov
mov
adc
dec
push
std
cmp
jo
xor
out
addl
jg
jle
test
outsb
cmc
test
iret
rcll
add
dec
pusha
push
xor
xchg
dec
mov
push
and
adc
div
or
mov
lahf
icebp
in
cmpsb
push
imul
rolb
sbb
adc
clc
xchg
loop
cmpsl
dec
jno
shld
push
popl
mov
jmp
or
repz
lret
inc
dec
jne
mov
mov
ja
sbb
mov
xchg
out
cmpl
or
jnp
xchg
les
ja
aaa
push
pop
push
cld
mov
out
add
pop
repz
pushf
popf
inc
enter
test
dec
ja
jg
push
mov
outsl
add
xlat
cmovno
call
jne
cmpsl
mov
repz
pop
add
mov
inc
jl
push
call
insb
mov
pop
roll
fcom
push
lahf
dec
loope
push
mov
inc
scas
icebp
not
jle
mov
ljmp
movsb
sub
dec
je
adcl
jg
fimuls
ljmp
inc
mov
lock
cmp
loopne
aad
insl
add
dec
and
ds
stos
xor
stos
lods
sarb
in
icebp
mov
out
ss
sub
jle
xorb
mov
mov
or
inc
and
leave
sbb
mov
jno
pop
xor
shll
loopne
es
push
pop
jb
popf
xchg
outsl
iret
pusha
sub
xor
push
and
jnp
push
popa
addr16
adc
push
ud0
repz
not
shrl
or
movsl
dec
test
cmpb
rdmsr
jns
pop
rorb
mov
push
fwait
mov
dec
fs
hlt
call
sbb
in
inc
aad
es
imul
push
leave
clc
nop
cmpsl
sarb
adc
ret
sub
cmpsb
mov
test
rcrb
sub
push
mov
mov
into
enter
jb
jbe
cmp
shrl
xorb
sbb
pop
inc
sub
push
repnz
mov
xchg
or
cmpsb
loop
ret
and
sti
jg
mov
push
add
mov
sbb
std
inc
cmp
push
lret
adc
lea
dec
sub
lea
fldcw
jne
push
mov
mov
enter
jo
push
mov
mov
jecxz
dec
push
push
insl
pop
inc
outsb
xchg
push
pushf
dec
adc
sbb
lods
sbb
jp
icebp
add
fs
sbb
add
mov
pop
fs
mov
push
xchg
loop
pop
mov
xchg
xchg
out
sarl
xchg
add
mov
shrl
repz
lods
ret
jge
inc
xchg
rorb
push
inc
jge
mov
mov
mov
sti
test
dec
push
shrl
xchg
stos
mov
jnp
xchg
js
jns
movsl
cld
mov
sbb
lock
in
xlat
inc
jge
int3
jno
ret
fwait
mov
enter
pop
or
add
pop
fs
test
stos
out
push
icebp
cmp
sub
add
ret
movsl
popf
cmp
out
adc
xchg
mov
bound
mov
and
imul
fwait
or
sahf
repz
lret
adc
push
mov
aad
adc
out
jecxz
sub
or
or
out
scas
fstps
mov
call
sub
pop
push
enter
mov
lock
sub
dec
pushf
sbb
outsl
cmc
pop
pop
mov
xor
icebp
dec
bnd
dec
mov
bnd
arpl
icebp
lods
das
aad
push
or
jnp
push
sti
jns
cli
pop
pop
psubw
mov
outsb
add
leave
dec
sbb
fadds
cmp
fcmove
data16
adc
out
or
jl
cmp
pop
imul
cmp
insl
negl
dec
dec
aad
mov
cmpsl
dec
add
jo
dec
mov
dec
cmp
rep
mov
sbb
loope
popf
jbe
jg
sub
add
xchg
add
mov
sub
jge
ljmp
arpl
pop
mov
loope
popf
push
ss
adc
pop
rclb
pushf
mov
cmp
and
arpl
and
fcomps
loope
arpl
fcoml
fwait
sahf
ja
ret
inc
pop
lahf
jns
in
movsb
cli
push
int3
xchg
mov
sbb
stos
push
pop
loopne
enter
ret
lods
stos
enter
lea
mov
js
xlat
add
push
insl
mov
mov
jbe
pop
push
fists
pop
pop
cmpb
pop
mov
mov
mov
or
sbb
mov
cmpxchg
lret
and
mov
xchg
rcrb
icebp
lret
push
mov
cmp
pop
lods
imul
mov
fwait
es
fnstenv
cmpsw
pushf
stc
repz
push
mov
mov
pusha
fsts
mov
push
sub
outsb
jb
jns
lods
add
mov
mov
push
fdivrp
jp
push
rcrl
in
or
xorl
mov
pop
cltd
xor
fistps
imul
test
inc
adc
mov
push
xchg
push
xor
filds
pop
faddl
sti
fcmovu
xor
gs
xchg
mov
sbb
mov
inc
lret
inc
push
subb
rcl
and
clc
mov
out
cmp
in
mov
inc
pop
testl
lret
push
daa
xchg
pop
subb
arpl
leave
dec
in
enter
call
imul
scas
mov
aad
gs
lods
cltd
scas
push
add
xchg
ficomps
lods
imul
cmc
dec
jg
push
repnz
je
stos
mov
lea
jnp
inc
in
pop
fdivs
mov
test
popf
sub
fiadds
mov
push
jp
sub
ss
or
sahf
mov
int3
insl
repnz
imul
xchg
jp
stos
js
iret
and
rcll
sarl
adc
bound
ficoml
dec
jno
mov
mov
mov
vsubsd
clc
jno
iret
xchg
dec
shrb
and
clc
or
aam
cmp
out
aad
push
out
jns
push
or
cmpsl
fsubrl
inc
fdivrs
sbb
adc
fs
out
pusha
mov
sbb
std
lcall
loop
jge
jge
mov
addr16
adcl
pop
mov
or
and
inc
push
dec
movsl
ret
fisttpl
aad
sbb
inc
lock
rorl
sbb
je
lret
push
cs
out
push
jg
lahf
inc
icebp
and
js
out
mov
dec
movsb
dec
jne
loopne
sub
dec
cld
mov
jmp
add
jb
inc
mov
dec
jmp
popa
stos
sub
bound
cmpl
mov
cmpsl
jb
mov
pop
and
andl
in
jcxz
lcall
ja
dec
push
fnstcw
mov
gs
mov
adc
loop
and
jo
mov
and
xor
lcall
sub
jae
mov
add
pop
inc
mov
lahf
notl
push
sbb
push
xchg
xchg
dec
pop
pop
mov
arpl
shll
std
mov
or
pop
aam
add
sbb
sub
mov
inc
add
push
dec
mov
sub
loope
fdivrl
mov
enter
dec
xchg
push
aad
std
movsb
out
daa
pop
or
adc
outsl
or
stos
push
movd
fdivs
cwtl
push
jecxz
stos
sub
lods
sub
loope
cld
shlb
ret
rclb
shl
mov
mov
mov
into
cmc
xchg
jge
mov
dec
fs
sbbb
dec
xor
jo
push
fs
dec
ret
sub
mov
popa
adc
jns
add
stc
add
shr
scas
movsl
mov
adc
inc
push
addr16
mov
lds
roll
cwtl
xchg
adc
mov
jmp
mov
outsb
shll
icebp
int3
cmc
inc
push
lret
repnz
das
or
test
and
outsl
aam
jno
iret
out
nop
enter
loope
ret
xor
sbb
out
rcrl
lds
push
loopne
sarl
in
fs
cmpsl
stos
je
in
dec
jne
bound
fidivl
sar
pop
rep
xchg
in
enter
ss
mov
add
mov
je
add
je
and
sub
into
and
clc
push
pop
je
cmp
adc
imul
scas
pop
dec
sbb
scas
popa
loope
or
gs
cltd
lods
into
outsb
xchg
adc
adc
xor
xchg
loopne
mov
stc
mov
int
imul
scas
sbb
or
mov
sbb
push
or
adc
inc
pushf
loopne
mov
test
pop
stos
xor
mov
pop
cmp
insb
push
rcll
or
lds
dec
loop
pop
mov
outsl
sub
out
test
xor
aas
mov
mov
cmp
push
jg
add
push
out
xchg
fs
das
mov
lret
in
jge
add
mov
test
in
popf
sub
adc
push
mov
mov
aas
pop
adc
inc
pop
pop
rcrb
test
out
or
stc
jnp
jp
push
xor
jl
test
adc
ficomps
mov
out
pop
addl
out
in
inc
mov
ljmp
ljmp
or
pop
popf
cmc
sub
mov
jnp
xchg
pushf
rol
dec
mov
aas
add
jmp
popa
loop
mov
add
fwait
sbb
fnstenv
ds
das
js
fsubrl
test
push
xor
fsubrl
dec
adc
int
pop
dec
xchg
vucomiss
arpl
or
movsb
cltd
and
cwtl
cmp
inc
lock
lods
push
mov
xor
flds
or
clc
leave
pop
sbb
out
rorl
push
sbb
hlt
enter
inc
int
lcall
cmp
aad
and
pop
shrl
jecxz
insl
jge
add
rclb
dec
mov
push
add
xchg
adc
gs
xchg
sub
cwtl
jecxz
shll
lock
mov
stos
push
scas
dec
mov
push
es
fadd
dec
fmul
fisttpll
insl
cmp
in
mov
outsl
sbb
daa
inc
pop
dec
xchg
cltd
mov
es
enter
cmpsl
xor
pop
lds
pmovmskb
repnz
mov
cmpsl
idivl
xchg
insl
rolb
lcall
push
pusha
and
cmp
jg
sub
push
insl
icebp
or
out
std
xchg
and
push
mov
mov
or
lock
inc
mov
adc
xchg
and
in
sbb
les
xchg
enter
sub
rcrl
lods
cli
das
jne
mov
shlb
xor
sahf
add
fnstcw
popa
pop
xor
inc
xlat
ljmp
test
pop
jmp
sbb
add
xor
loopne
outsl
gs
add
push
lea
cli
fisttpll
or
mov
sbb
or
out
js
or
popa
pop
lret
pshufw
flds
mov
add
push
jb
jmp
xor
mov
rorb
push
mov
pop
or
mov
aaa
hlt
and
jg
loope
int3
and
sub
mov
push
lock
lods
and
movsl
test
xor
xchg
aad
dec
leave
repnz
cmpsb
jns
mov
cmpl
cld
aad
mov
mov
bound
and
pop
or
push
xchg
cmp
arpl
cld
movsl
rclb
sarl
popf
inc
fdivr
jecxz
inc
adcl
mov
pusha
mov
ss
stos
adc
stc
bound
inc
ljmp
lods
popa
sub
inc
inc
popf
je
sub
mov
cmp
mov
lods
ljmp
mov
inc
xchg
xchg
in
fwait
jmp
cli
mov
push
dec
cmp
push
dec
add
cmp
cmp
test
adc
icebp
ljmp
leave
out
fucomp
push
not
xchg
xor
sahf
stos
in
add
stos
inc
pop
pop
inc
add
mov
into
cli
aas
shrb
scas
insl
scas
js
shlb
mov
push
dec
sub
adc
pop
and
dec
mov
aaa
shll
mov
mov
scas
lret
out
xlat
xchg
xor
mov
adc
fildl
mov
push
pushf
inc
cmpsb
inc
xchg
lods
into
cwtl
mov
aam
jbe
inc
inc
cltd
push
movsl
mov
pop
fsts
mov
sub
mov
dec
pop
sub
mov
subb
mov
lods
inc
pop
and
ret
lock
xor
cwtl
xchg
and
pop
jnp
adc
sarb
fsubrp
sti
pop
les
imul
pop
lods
fbstp
push
mov
mov
push
lods
orb
insl
aam
pusha
out
testl
cmp
es
loopne
push
xchg
pop
xor
sbb
cmp
mov
addr16
xor
xor
into
mov
mov
cwtl
cmpsl
int
stc
arpl
push
cmp
dec
xchg
lea
push
outsl
push
cmp
xchg
xchg
scas
xor
mov
stos
aas
xchg
or
aam
mov
testl
dec
xchg
or
movb
dec
cmc
mov
fistpll
sub
rolb
xchg
mov
adc
cmp
out
adc
orl
mov
xchg
sub
jg
pop
arpl
stos
outsl
jge
in
ljmp
int3
xchg
push
lock
loop
sbb
push
insb
leave
stc
aam
out
loopne
jbe
out
scas
es
ds
rclb
aam
xlat
mov
sub
xchg
gs
sbb
enter
push
inc
push
pusha
and
xchg
push
in
mov
subb
insl
rcl
and
pop
or
mov
cmp
jge
sahf
pop
dec
enter
sub
int
iret
push
ds
adc
or
pop
mov
test
loop
repnz
flds
fisubl
mov
mov
out
sub
fwait
test
pop
dec
shll
or
cld
xor
mov
filds
cmp
cmc
cmpsb
mov
sbb
xlat
fcompl
xor
or
xchg
lret
imul
daa
adc
cmp
scas
sub
js
pop
inc
xor
mov
mov
xchg
push
sub
jge
clc
dec
push
sbb
loopw
into
nop
pop
mov
fistl
test
xor
ficomps
lret
mov
jne
and
je
push
mov
add
imul
dec
das
xchg
add
dec
push
cmp
jnp
ret
inc
icebp
test
pop
pop
add
xchg
loope
adc
add
push
mov
divb
hlt
mov
mov
je
lahf
xchg
and
std
dec
and
add
push
xchg
pusha
add
repnz
aad
dec
aas
cltd
xor
mov
jl
lret
jl
arpl
test
cmp
jge
mov
dec
add
lret
je
arpl
push
cmpsb
jno
ret
fistps
xchg
sbb
daa
jnp
sub
aaa
nop
mov
jbe
add
jns
in
add
sub
leave
push
dec
dec
and
mov
mov
adc
loope
jmp
pop
xlat
add
adc
jle
ds
lret
roll
and
lock
xchg
mov
cmp
lcall
mov
cld
push
xchg
mov
dec
jns
mov
aam
lds
fidivrl
push
jg
fnsave
inc
nop
clc
inc
pop
je
mov
nop
pop
cld
faddl
divb
addl
pop
call
inc
mov
sarl
xchg
adc
pop
or
or
lods
jge
std
sbb
pop
adc
pushf
packsswb
mov
pop
iret
xchg
jbe
shrb
dec
jns
jp
std
test
fs
jmp
xor
dec
cmp
mov
rcll
fnstenv
push
add
sub
es
je
mov
roll
jnp
cli
scas
push
movsl
push
push
jge
mov
or
imul
mov
leave
adc
aam
out
sbb
sub
popl
in
sub
dec
or
loope
jns
sub
push
mov
sub
push
inc
sbb
test
int
sbb
cli
push
movsb
idiv
or
dec
mov
mov
in
cmpsl
dec
sub
push
xor
lret
push
lretw
add
mov
call
ljmp
in
pop
lods
adc
jecxz
js
xlat
or
adc
jecxz
mov
sbb
mov
mov
std
push
push
add
aad
bnd
mov
lods
mov
xor
sbb
mov
dec
lret
mov
and
cwtl
jp
dec
sub
rcl
pusha
in
sub
loop
cmp
and
mull
scas
cmp
divb
fisttps
xorb
scas
adc
lret
mov
pop
les
loopne
jns
mov
test
mov
xor
add
jb
and
idivl
cmc
cmpsl
pop
fmull
xlat
sarl
push
fsubs
ret
movsb
sti
lods
popa
sbb
or
xchg
iret
roll
mov
xchg
adc
xchg
cwtl
sub
jl
push
jbe
sbb
ss
and
imul
jbe
mov
das
cmp
mov
and
bound
in
inc
mov
fidivrl
imul
mov
xor
dec
addr16
sub
push
add
cld
dec
jns
in
ds
sti
push
subl
ret
lret
or
push
jmp
pop
and
cmpb
mov
mov
shll
sub
adc
dec
xchg
xchg
repz
or
lds
dec
pusha
aad
and
std
sbb
out
lock
mov
xchg
xchg
pop
dec
cmp
clc
loope
iret
cmp
test
test
cld
les
lret
imul
dec
and
inc
dec
xchg
lds
push
call
push
outsl
sub
adc
inc
pop
in
fbstp
leave
jnp
inc
daa
outsb
dec
lods
push
imul
test
mov
loopne
sbb
loop
cmpsb
push
or
loopne
dec
ljmp
push
lods
pop
sub
cmp
add
add
push
lock
mov
inc
orl
adc
mov
dec
popa
outsl
dec
add
stos
jmp
sahf
popf
in
scas
popf
jmp
jl
insb
jae
push
inc
cmp
lret
xor
out
jl
insb
test
mov
push
ffreep
sub
ljmp
int
push
loop
push
in
cmp
ret
imul
shld
pop
fs
mov
and
shll
mov
leave
pop
push
mov
xchg
push
jmp
cld
xor
out
jne
leave
or
cld
adc
jne
add
xchg
std
int3
orl
mov
mov
cld
mov
lea
dec
lods
lea
movsl
loop
mov
flds
sbb
repz
ficoms
mov
xchg
addb
inc
xor
inc
roll
cltd
sahf
orl
pop
aam
mov
mov
xlat
xchg
mov
pop
push
mov
jae
fmuls
mov
xchg
dec
lcall
xchg
add
mov
stc
pop
mov
dec
dec
jnp
rolb
mov
lock
daa
push
mov
jl
pusha
pusha
mov
adc
mov
cmp
inc
jecxz
adc
push
mov
jno
xor
fwait
insl
in
fisubrs
aas
xchg
mov
fsts
jne
fs
push
xchg
loopne
icebp
rcrl
mov
xchg
daa
mov
mov
push
add
popa
cs
shrb
out
dec
adcb
mov
xchg
inc
or
loope
out
out
jmp
clc
mov
rcl
ljmp
notb
pop
xor
fcoms
cmpsl
or
in
imul
mov
and
icebp
jecxz
pop
push
mov
dec
addl
mov
cld
ficompl
js
xchg
pop
push
xchg
popa
push
popa
pop
scas
das
lods
adc
loopne
mov
dec
mov
cwtl
stos
xchg
mov
int
mov
mov
test
mov
insb
xchg
addl
sbb
dec
addr16
dec
push
pop
pop
pop
mov
pushf
xor
cwtl
or
rol
js
nop
fdivrl
shrb
std
insl
lret
mov
sub
aad
add
rcll
out
dec
mov
push
cld
cmp
dec
or
out
scas
push
dec
ds
icebp
out
in
mov
pop
addb
or
push
jb
xor
stc
clc
ret
sbbl
xor
stos
stos
mov
cmp
mov
arpl
mov
test
inc
bnd
and
push
or
cmp
jns
jmp
in
jne
test
or
jmp
into
in
icebp
inc
adc
add
ret
ret
dec
jns
xor
in
mov
hlt
mov
adc
arpl
fimull
into
js
shll
sti
mov
mov
dec
cmp
dec
aas
loop
xchg
xchg
rcpps
mov
and
ret
sub
mov
and
inc
push
gs
ljmp
pop
dec
call
aad
xchg
icebp
pop
es
lret
sbb
dec
push
test
pop
or
lcall
cld
dec
pop
cmp
addb
mov
jnp
mov
ljmp
adc
push
mov
ja
out
es
push
cmc
enter
xchg
push
addr16
sub
cmp
popa
stos
test
incb
jge
stc
xchg
jb
pop
mov
push
aaa
cmpsb
aaa
int
mov
sbb
jno
cmp
push
test
ficoms
sarl
dec
test
mov
mov
lret
mov
ds
lahf
lcall
pop
cmp
stos
pop
push
testb
xchg
insb
mov
sub
push
pushf
mov
adc
call
shr
scas
cmp
mov
hlt
shll
fs
push
xchg
jne
mov
xor
mov
xchg
sbb
mov
scas
stos
dec
bound
ret
push
subb
mov
sbb
dec
jb
mov
mov
mov
jns
ficoml
loopne
pop
ljmp
xchg
add
outsl
or
xchg
mov
imul
jnp
lea
scas
mov
mov
daa
sub
enter
push
mov
pop
cwtl
and
mov
add
cmp
cli
xchg
mov
jmp
lock
lods
es
pop
aam
aad
xor
shll
test
cmp
jmp
jbe
xchg
adc
pop
jbe
aam
mov
xchg
sbb
popf
aam
lods
sub
or
push
div
mov
fwait
enter
imul
out
adc
leave
cmovle
movsl
push
sahf
xor
insl
movsl
lahf
cmp
push
adc
gs
sub
jmp
arpl
or
push
out
dec
roll
pop
scas
test
stc
and
int3
xchg
insb
mov
arpl
pushf
ja
xchg
and
das
pop
xchg
mov
stos
sbb
bnd
pop
cmpl
out
inc
sti
cmpsb
int
jmp
and
adc
adc
mov
call
sub
jb
fildl
inc
push
mov
data16
mov
push
test
cmp
aam
inc
dec
sbb
mov
mov
outsb
xchg
inc
mov
insl
xchg
cmp
push
sub
mov
mov
dec
inc
stos
or
add
jo
lcall
out
jno
aad
sub
cli
nop
or
mov
imul
dec
adc
ja
iret
cmp
sbb
xor
xor
orb
or
aaa
push
dec
pusha
jecxz
cmp
sub
in
fwait
push
rorl
sti
dec
mov
cli
leave
sub
enter
mov
add
and
jne
sbb
shll
mov
jbe
out
push
jg
jle
push
cmp
and
pop
xor
adc
pop
and
mov
lahf
adc
jmp
mov
fistps
sub
in
sarl
sbb
jne
imul
adc
fsubl
jge
xchg
dec
mov
jbe
mov
enter
adc
lea
pop
mov
lahf
addr16
mov
sbb
cli
scas
cmp
stos
jl
jbe
adc
dec
ja
pushf
ffree
ss
push
cmpsl
mov
js
testl
lret
inc
inc
ret
mov
jns
out
insb
in
je
insb
dec
repz
movsl
dec
xchg
xor
jmp
sub
pop
sbb
aas
test
dec
mov
addl
cmpsb
xchg
fs
les
inc
push
add
add
mov
out
pop
hlt
or
add
pop
mov
pop
lret
jp
adc
repnz
pop
dec
mov
pop
stos
jo
xor
dec
aas
jo
jl
and
mov
sub
sbb
mov
mov
lahf
addr16
iret
xchg
insl
std
xchg
adc
push
fistl
in
dec
aad
dec
xor
adc
jl
xchg
cmp
push
testl
cmp
fisttpll
sbb
inc
pop
and
dec
xchg
sti
push
push
icebp
jb
sub
cli
cmp
dec
pop
jns
ss
jae
jle
or
cs
adc
jmp
dec
sub
mov
mov
pop
push
mov
imul
mov
push
lcall
mov
push
xchg
rep
adc
iret
arpl
mov
or
jmpw
jmp
ds
jne
mov
loope
pop
mov
std
or
mov
movsl
ror
mov
push
cmp
cwtl
pop
mov
pop
shl
mov
pop
or
das
psllq
inc
cmp
xor
in
cmp
arpl
shrb
ret
lock
cmp
xchg
hlt
negb
sub
cmp
xlat
aam
dec
add
and
cs
arpl
lds
nop
xchg
test
repnz
je
push
jae
cwtl
insl
adc
mov
in
jge
xlat
pop
dec
ret
xlat
loopne
cmp
add
stc
push
cmp
sub
or
add
iret
xchg
sbb
pop
push
jnp
mov
inc
gs
pushf
pop
push
jp
lods
adc
cmc
mov
jp
aad
jg
jp
cmp
inc
push
xchg
in
cmp
adc
loopne
call
sarb
jb
dec
mov
pop
test
ds
jnp
lret
mov
sti
ja
add
test
mov
mov
lahf
dec
jl
mov
sub
fs
xchg
insl
enter
sub
stos
xor
sub
js
xlat
loop
push
loopne
dec
xchg
mov
insb
nop
pop
push
mov
insl
out
lods
adc
sub
sbb
dec
mov
xor
sub
test
xchg
out
fucomi
inc
mov
and
xor
xchg
nop
mov
std
sub
int
ja
je
push
xchg
in
jns
jl
mov
lock
xchg
imul
inc
aam
adc
dec
mov
shlb
sub
pop
lret
addr16
xor
jmp
mov
sub
cs
out
shl
mov
pop
push
lock
push
dec
xorb
xchg
bound
cld
jmp
iret
mov
rorl
push
adc
ja
rcrl
inc
pop
dec
dec
add
clc
aaa
adc
popa
sub
push
sub
aaa
lock
jns
jge
fcoml
loopne
push
adc
sub
add
jno
add
std
xchg
xchg
shl
arpl
outsb
gs
or
cmp
pop
xorb
dec
test
pop
mov
outsl
sarb
inc
mov
jl
data16
push
sub
xchg
inc
loopne
adc
push
das
fsubrl
in
push
sub
in
add
or
jnp
mov
cmp
and
leave
in
fistps
mov
cmc
inc
fstl
out
inc
and
add
mov
jo
out
adc
inc
enter
test
shr
sub
ljmp
xchg
int3
cmp
ss
or
fsubrs
inc
cli
adc
sbb
out
jl
adc
loopne
xorl
iret
fidivrl
push
mov
xor
hlt
add
lods
inc
out
das
out
and
repnz
mov
mov
mov
mul
push
rorb
jmp
lds
dec
lcall
ss
repz
out
outsl
jnp
insb
lods
int3
push
test
daa
jge
jns
mov
jge
int
cli
dec
ss
cs
insl
cli
fildl
lret
pop
jp
sub
negl
imul
and
inc
add
mov
in
aaa
mov
sbb
pop
jmp
mov
roll
mov
outsl
and
inc
cmp
or
int
movl
out
or
and
mov
into
sub
xchg
in
pop
gs
jle
mov
insl
sbb
daa
cmpsl
nop
adc
jecxz
fidivrl
cli
imul
js
pop
jmp
pusha
xchg
orl
dec
aad
dec
pop
jle
mov
enter
sub
push
or
fnstenv
mov
lds
sbb
insb
ret
scas
loope
aas
jecxz
cmpsl
mov
jno
xchg
pop
adc
fdivrl
mov
dec
fstpt
sbb
or
daa
jnp
test
add
mov
mov
out
add
or
call
loopne
xchg
xchg
aad
jns
call
fs
lahf
fsubl
stc
xor
xchg
push
and
mov
jnp
mov
nop
jle
or
cmpl
xlat
insb
mov
daa
cli
and
xlat
mov
cs
pop
aam
jnp
add
sahf
lahf
outsb
dec
popf
div
or
sbb
lea
hlt
cmpsb
aaa
nop
and
js
mov
cmp
xor
pushf
stc
lea
jge
rcr
xor
sbbb
fdivp
incb
and
lock
mov
pop
pop
xor
mov
xor
das
out
in
cmp
jnp
fildl
or
cs
das
jo
test
adc
pop
rclb
mov
add
loope
dec
fcmovb
fs
int3
das
loop
into
lret
inc
out
orps
repnz
mov
jne
mov
dec
imul
adc
stos
xchg
xor
shrb
pop
or
sub
aad
push
pop
shl
std
mov
push
xchg
or
jg
gs
data16
aam
fsts
pop
es
push
sarb
dec
sbb
iret
adc
pop
mov
add
into
or
dec
imul
sbb
cld
ds
cltd
sbb
dec
ss
int3
mov
loop
sbb
mov
popf
xchg
test
dec
je
bswap
lahf
inc
mov
inc
in
add
xor
subb
ja
jge
insl
jnp
imulb
out
push
adc
jle
mov
mov
mov
bound
pop
xor
dec
imul
and
dec
dec
xor
jge
xchg
insb
jecxz
out
push
das
divl
inc
imul
sarl
fisttpl
lcall
scas
lea
dec
jge
xor
lret
mov
lods
out
ljmp
add
inc
insl
cli
and
in
push
cmpsb
popf
mov
shl
loope
popf
mov
pop
ljmp
cmpsb
adc
or
sub
sahf
cmp
and
cmc
ss
popa
push
mov
sbb
pusha
sub
sbb
out
mov
xor
stc
je
lods
dec
imul
leave
pop
dec
mov
mov
data16
inc
cmp
jg
lods
jle
lods
add
rcrl
test
pop
pop
mov
popa
scas
cmpsb
xlat
mov
mov
push
shlb
nop
rcrb
push
ljmp
push
addr16
add
into
jnp
into
pop
dec
adc
sbb
cwtl
cmc
aas
mov
shlb
hlt
cwtl
icebp
mov
movb
jl
mov
loop
jns
mov
testl
test
je
popa
das
xor
mov
adc
or
or
jmp
out
push
movsl
mov
out
xor
push
xor
sahf
lods
ss
jge
insb
and
jnp
adc
mov
sti
inc
sbb
aas
mov
add
ret
js
in
mov
cwtl
pop
pop
out
mov
lret
push
mov
push
jl,pn
adc
jnp
push
and
sahf
call
cmp
daa
shll
pop
filds
pmulhuw
pop
pushf
in
fdiv
dec
sub
outsl
and
jb
les
add
and
pop
xchg
ret
xchg
out
mov
mov
add
fnstenv
mov
aaa
fs
jl
pop
mov
lods
aaa
mov
and
cmp
add
sbb
push
xchg
in
ljmp
and
xor
dec
movsl
cwtl
pop
or
lahf
dec
outsl
ds
push
out
imul
test
sub
test
in
pop
in
outsl
lods
and
movsl
adc
mov
fucomp
loopne
addr16
xor
cmp
leave
dec
and
mov
enter
xlat
pop
xor
push
or
jle
pushl
sub
lcall
loop
pop
scas
stos
popl
pop
sbb
push
mov
sbb
sub
sbb
mov
adc
pop
mov
repnz
mov
or
mov
movsb
sub
mov
mov
ud1
pop
data16
jne
shl
fists
push
push
dec
ss
jmp
mov
fimuls
inc
cmpsl
cmpb
pop
cmp
mov
xor
in
sub
mov
scas
and
xor
lods
xchg
sub
testl
cli
mov
sub
jg
pop
xor
mov
ror
outsb
cmpsl
out
xchg
aad
push
push
cmp
leave
xor
leave
ret
cmpb
push
xchg
js
xchg
daa
aas
popf
push
inc
jge
sub
aad
nop
lcall
sub
xor
cs
pop
adc
andb
sti
stos
sbb
rorb
xor
fs
sbb
shll
sti
ss
mov
add
dec
pop
outsb
add
jge
sub
leave
jle
ja
mov
sbb
cltd
cli
push
xchg
rorb
add
sarl
mov
mov
pop
outsb
scas
sub
mov
ret
lret
add
fmuls
jle
movsl
fdivs
push
xchg
add
mov
jecxz
arpl
test
insb
js
pop
add
stc
cs
push
sub
mov
fsts
pop
movsb
xchg
push
mov
mov
fwait
mov
push
fstl
daa
push
cmp
popf
sarl
lea
sysexit
dec
lcall
pop
das
cmpsl
sub
xchg
xor
and
jae
loop
test
test
push
mov
add
push
xor
pop
pop
cmp
pop
cmpsl
or
mov
adc
cmc
lods
and
or
lods
dec
mov
push
jne
or
enter
jnp
push
mov
mov
cmp
sbb
push
xor
stc
xchg
fwait
push
xlat
xor
dec
xor
xor
adc
xchg
mov
and
outsl
or
stc
out
pop
sbb
sbb
and
aaa
pop
push
iret
push
movsl
loopne
jle
cmp
fldenv
xchg
pop
mov
test
fidivrl
or
movsb
dec
lcall
test
jne
adcl
icebp
insl
and
fisttpl
clc
sbb
out
test
scas
mov
cmp
aaa
inc
bswap
pop
cmp
icebp
mov
pop
sahf
pop
mov
ficomps
or
mov
inc
ss
cmc
adc
sti
push
daa
jg
mov
xchg
mov
mov
call
push
sub
add
iret
jecxz
mov
add
or
push
mov
inc
pop
xchg
jo
or
repz
inc
das
push
mov
sub
inc
lahf
jp
push
cltd
jmp
fucom
movsl
out
stos
mov
mov
aad
dec
jmp
leave
mov
test
lahf
je
push
add
cmp
xchg
sbb
test
mov
fcmovnbe
test
popf
adc
mov
cltd
les
sbb
ret
cli
jo
add
dec
pop
in
loop
ljmp
int3
dec
call
and
inc
xchg
dec
jns
in
ret
je
ds
lods
cli
inc
je
pop
dec
mov
push
divb
sbb
int3
scas
lods
inc
rolb
xchg
scas
pop
loop
mull
pop
test
adc
sub
dec
xchg
mov
mov
or
mov
mov
repz
mov
or
js
ss
xchg
andl
push
push
push
xor
jb
pushf
push
jmp
mov
std
inc
pusha
loopne
jne
xor
mov
test
clc
mov
in
or
mov
adc
sbb
ret
stos
into
in
jl
in
push
xchg
ja
pop
xchg
movsb
xor
add
sbb
outsb
mov
cmp
xchg
insl
cld
adc
mov
mov
bound
and
and
outsl
xchg
cmc
in
outsl
scas
xor
add
push
les
xchg
int3
mov
outsl
insb
cltd
arpl
pop
inc
lcall
jge
or
sarb
rcrb
push
cmp
mov
mov
fs
jecxz,pn
inc
int
lret
or
or
add
jb
mov
mov
jbe
fs
lock
dec
mov
arpl
fimuls
daa
pmuludq
sub
movsl
in
clc
pop
in
popa
popa
stos
jl
repnz
mov
inc
mov
test
or
jp
popf
stos
and
or
dec
adc
rolb
cmpsl
sbb
enter
push
pop
adcl
sbbb
sbb
pop
mov
pop
sbb
xchg
mov
aad
adc
movsl
sub
rorb
mov
push
push
data16
call
or
ret
call
pop
mov
add
arpl
mov
insl
xor
inc
movsl
aaa
cmp
push
sbb
daa
pop
cwtl
movsb
mov
aad
movb
add
pop
loope
mov
lds
hlt
ret
inc
dec
or
cmpsl
push
pop
mov
lds
cmpl
ja
push
mov
popf
shlb
mov
int
cmp
sub
cmc
inc
push
or
mov
fstpt
aam
sbb
ja
pop
or
movsl
jne
stos
test
cmp
dec
sti
pop
xor
popa
pop
inc
sbb
mov
mov
adc
lods
adc
outsb
dec
scas
lcall
cmpsb
outsb
gs
dec
lods
out
test
into
sti
pusha
adcb
aaa
inc
sbb
ds
jns
call
call
xchg
mov
dec
xchg
add
xchg
inc
xor
rorb
add
loop
or
mov
dec
inc
test
cmpsb
idivb
xchg
pop
push
fadd
imul
ds
mov
cmc
xor
adc
mov
push
arpl
inc
add
cli
in
xchg
inc
mov
pop
pop
ss
sub
cmp
cmpsl
scas
add
mov
xor
cmp
das
sbb
and
cmp
dec
icebp
out
sub
mov
movsl
push
loop
loopne
cmpxchg
cmpsb
jo
cli
aas
and
jno
adc
and
lods
mov
adc
inc
test
adc
sub
push
mov
jnp
inc
cmp
daa
rorb
es
test
pushl
jns
cwtl
ret
mov
xor
test
fwait
add
add
mov
dec
mov
jae
mov
in
stc
adc
or
sbb
and
jmp
sbb
xor
mov
mov
lcall
or
inc
inc
and
ret
test
hlt
addr16
pop
flds
das
push
and
mov
cmpsb
mov
dec
into
mov
ret
lret
jbe
and
imul
mov
fnstenv
xchg
loop
mov
add
mov
pusha
out
call
es
push
enter
mov
xchg
popf
push
add
loop
rcll
arpl
std
scas
into
sub
mov
in
movsb
data16
mov
pop
cmc
cmp
xchg
mov
loope
sbb
lock
pop
movsb
je
mov
paddsw
jb
xchg
or
cmp
inc
test
dec
xchg
push
jmp
pushf
fdivp
jae
push
in
dec
in
data16
jae
test
jne
push
add
std
nop
mov
adc
jmp
sahf
mov
push
arpl
cmovl
cmc
and
add
or
outsb
sbb
outsl
sbb
cmp
pop
mov
mov
push
mov
jnp
mov
xlat
leave
jl
int
adc
and
mov
lea
and
pop
cli
movsl
lret
push
addb
rcr
mov
lds
popa
xchg
les
xor
sub
add
dec
cmpsb
cmp
xchg
cld
stc
out
ss
testl
adc
jb
popf
sub
and
xchg
xor
push
std
movl
mov
xor
mov
mov
pusha
adc
mov
out
xchg
sbb
add
cmp
mull
bound
enter
mov
mov
adc
test
jo
mov
jmp
popf
mov
scas
fstp
pop
fwait
push
ljmp
mov
daa
cmp
push
jecxz
movb
test
lods
dec
scas
mov
outsl
cmp
lods
jno
pop
or
or
bound
pop
inc
pushf
jbe
fcoml
es
iret
mov
xchg
pop
arpl
outsb
ljmp
ror
jne
dec
orl
add
popa
adc
xchg
pop
pop
mov
aad
adcb
in
movsl
gs
fiaddl
pop
sub
xor
xor
cmpsl
pop
adc
dec
leave
int
mov
icebp
stos
and
test
fwait
dec
iret
jo
enter
bound
xchg
mov
loopne
push
jno
mov
fwait
xchg
pop
movsb
out
out
ret
popa
fstl
int3
sbb
pop
hlt
cmp
cmpsb
inc
popa
inc
stos
es
cmpsl
int3
aad
mov
test
ljmpw
jns
lret
pop
xchg
icebp
pop
sub
or
fdivrs
fsts
xor
push
sub
mov
sub
jns
push
dec
lret
sub
aaa
test
inc
movsl
lea
mov
outsb
imul
xor
mov
nop
jle
or
cmc
xor
jmp
or
into
fwait
out
dec
cmp
jl
movsb
jo
loop
and
cli
inc
out
jmp
lret
dec
and
mov
cmc
pop
mov
arpl
adc
and
jg
xor
sub
outsb
inc
pusha
dec
lret
push
insl
and
in
dec
or
dec
out
sub
dec
sahf
cmc
sti
clc
int
fcoml
lods
enter
outsb
cmp
dec
sahf
bound
xchg
mov
mov
outsb
fcompl
push
fisttps
lahf
mov
or
dec
dec
loope
mov
scas
xor
rcrl
mov
xor
repz
sbb
and
xchg
popa
mov
out
sbb
mov
jo
hlt
sbb
in
sub
pop
jae
insb
add
mov
adcl
sub
movsl
andb
enter
movsb
xlat
popa
je
or
aam
push
out
shl
add
inc
jge
insl
cmp
push
cld
push
clc
movsl
push
ffreep
pusha
jg
lret
cwtl
jmp
mov
jns
test
adc
daa
xorl
push
ljmp
xchg
or
mov
mov
sbb
and
jne
and
mov
iret
es
dec
in
mov
pop
mov
cmp
stos
sbb
insl
sbb
or
xchg
cmpsb
lcall
test
rcll
push
xor
cmc
repz
ret
xchg
enter
mov
nop
mov
sti
lcall
daa
push
cld
or
cmp
shlb
popf
pop
adc
fnstenv
inc
mov
xor
js
xchg
insb
outsl
fidivrl
adc
xchg
leave
mov
scas
inc
repz
es
inc
push
mov
sti
idivl
js
iret
sbbl
int3
loopne
insb
jge
in
jl
xor
addr16
cmpsl
leave
fsubrl
mov
incl
mov
shlb
shrb
sbb
pop
dec
iret
jns
push
push
jge
addr16
adc
enter
icebp
xor
loop
jne
negb
repz
fsub
inc
and
pop
fidivrs
cmp
scas
pop
cmp
push
insl
sub
sub
pop
or
fsubp
rclb
sahf
out
jmp
add
lcall
cmp
sub
shr
bound
adc
mov
mov
jae
aam
outsl
mov
in
mov
inc
push
inc
fidivs
out
mov
xchg
jle
mov
lods
gs
push
push
sarb
pop
lock
outsb
mov
push
and
frstor
in
lock
dec
mov
fs
inc
dec
mov
lods
ja
push
sub
ds
push
jmp
xor
dec
sub
mov
xchg
dec
ret
pop
sub
gs
ss
test
jbe
mov
inc
dec
mov
arpl
jl
ret
fcoms
insl
cmc
jnp
and
mov
ljmp
stos
add
xchg
enter
or
test
cmpsl
xchg
jae
ja
dec
sarl
xchg
stc
dec
mov
jp
xchg
fwait
xor
dec
or
lods
out
inc
push
mov
lds
lea
pop
cwtl
dec
lea
mov
and
sti
xor
sbb
jle
inc
xchg
cmp
inc
jns
jbe
add
lods
unpcklps
jo
inc
jmp
xchg
xor
pop
mov
es
fists
xor
cltd
daa
ja
into
cld
jnp
negb
aad
orl
mov
mov
shll
xor
and
nop
push
mov
icebp
xchg
mov
out
xchg
roll
jecxz
add
push
cmpl
out
repz
test
insl
xor
scas
jge
ss
fldcw
sahf
arpl
sar
dec
push
ds
sbb
fcomps
lret
dec
adc
cmpsb
fistpll
cli
scas
mov
cmp
addr16
fildl
stc
inc
repnz
or
and
or
clc
adc
push
lods
mov
or
leave
cmp
xchg
mov
push
sub
mov
inc
jno
out
mov
mov
in
cltd
jo
mov
sbb
sbb
jb
mov
hlt
jae
mov
movsl
pop
rcrb
sbb
and
pop
mov
imul
xor
xor
movsl
dec
data16
cmp
out
cmp
xchg
cmpsl
insb
jnp
lret
or
cmp
incb
in
popf
movsl
xor
es
lds
or
dec
push
pop
ret
into
decl
inc
jae
ret
aam
and
icebp
incb
out
cmpsl
jns
xchg
push
lahf
push
arpl
push
mov
pop
fmuls
add
xchg
lods
mov
sbb
jb
rcll
clc
push
pop
lods
in
rcrb
ljmp
scas
xchg
mov
jnp
stos
jp
aad
scas
or
and
nop
dec
cli
and
mov
cltd
mov
jne
inc
xor
xchg
cli
pop
rcrb
stos
imull
arpl
mov
cmpl
hlt
push
inc
dec
das
dec
mov
and
mov
bound
mov
cmp
sahf
addr16
xor
jb
mov
sbb
mov
stos
pop
jecxz
pop
sub
and
jnp
mov
int
mov
fadd
mov
xchg
testl
pop
jno
xor
mov
dec
mov
adc
push
xchg
mov
sub
dec
xlat
cltd
mov
int3
xor
fmull
dec
push
sub
jns
mov
into
mov
ficoms
test
cmp
push
sbb
into
out
roll
hlt
sahf
ds
push
movsl
add
mov
jge
sti
icebp
clc
je
sub
call
loop
pop
outsb
jae
inc
scas
pop
es
xchg
sahf
or
sbb
inc
push
out
sub
mov
ret
xorl
jbe
pushf
mov
add
push
cmp
es
movsl
push
lds
movsl
out
fdiv
rorb
icebp
lods
xchg
fwait
xor
mov
and
inc
das
or
leave
xor
enter
testl
pushf
je
ss
ret
mov
push
add
dec
jle
xchg
leave
mov
cmpsl
enter
xchg
std
decb
js
lahf
insl
ficoms
subb
in
add
ss
jo
pop
nop
testb
into
sar
jle
cld
jo
les
and
jae
movsb
inc
popf
push
lahf
cwtl
xchg
test
bound
jmp
mov
lock
mov
adc
xlat
daa
outsb
das
fstpl
xor
inc
out
sbb
xchg
pop
cmpsl
popa
inc
into
cwtl
enter
aas
xchg
into
shll
jl
das
popa
repnz
hlt
mov
hlt
or
sub
insb
test
shll
adcb
jmp
jl
sub
repnz
cwtl
les
dec
jle
mov
or
ds
out
dec
lods
lea
cmp
xor
jbe
inc
pop
test
lods
mov
mov
pop
mov
jmp
int
push
ret
pop
xchg
scas
mov
jns
ja
xor
movsl
clc
xchg
fcoml
mov
mov
add
movsb
dec
mov
xor
sbb
jb
mov
add
jecxz
push
or
add
inc
insb
lods
add
inc
jg
dec
add
popa
movsl
dec
pop
dec
lret
shlb
pushf
push
push
stos
fsts
pop
jmp
out
out
loop
or
aam
push
or
fmul
pop
xchg
adc
aas
adc
pop
test
sbb
fidivrs
shll
mov
mov
push
xor
sti
imul
push
or
or
cmpl
push
pop
aam
outsl
dec
and
pop
push
push
cmp
fstpl
int
icebp
and
dec
dec
std
add
inc
push
data16
ret
leave
and
mov
adc
push
dec
inc
rol
imul
push
dec
loop
movsb
test
cwtl
ficomps
jle
in
push
dec
sub
mov
pop
mov
mov
fcmovbe
jae
xor
test
jmp
mov
mov
push
daa
mov
mov
data16
push
sub
nop
sbb
sub
mov
repnz
add
cltd
pop
cs
sub
aad
push
incl
lock
nop
xor
loopne
or
lret
cmp
xchg
cld
mov
mov
and
and
mov
mov
push
lds
mov
inc
mul
lods
rorl
arpl
test
push
lea
and
leave
cmp
jecxz
int3
nop
movsl
aad
movsb
cmpsb
icebp
popa
scas
inc
push
dec
scas
or
hlt
mov
push
incb
cld
inc
push
add
add
aad
mov
xor
mov
fwait
jnp
std
lret
sahf
aam
pop
dec
lea
out
test
xchg
push
mov
aad
scas
sub
sbb
xchg
mov
push
dec
lds
sbb
dec
test
or
jne
scas
pop
movsb
or
sub
lods
cmp
pusha
daa
in
add
push
xchg
pop
and
inc
ret
xlat
cmp
stc
push
int
sub
test
ss
mov
xchg
in
inc
mov
iret
push
aad
or
or
sbbl
push
cli
ret
iret
push
fsub
mov
mov
popa
aas
pop
adc
aam
lods
sarb
inc
mov
outsl
mov
iret
or
xchg
pop
mov
jl
pop
cmp
fsubl
inc
or
enter
icebp
add
aam
stos
cmc
mov
pushf
cs
jnp
pop
xchg
push
xchg
add
icebp
mov
stos
jae
in
xchg
jmp
jl
scas
mov
push
gs
aas
cmp
adc
xchg
xchg
sub
jae
sbb
fcomi
icebp
ret
mov
out
xchg
cwtl
cmpsb
dec
push
data16
ficoml
lds
sub
aad
fadd
mov
or
push
push
dec
xchg
push
movsl
lock
shlb
pop
inc
pop
mov
insb
lock
insl
not
adc
aas
mov
loope
mov
lcall
pop
stc
jmp
pop
nop
cmp
xchg
mov
mov
jp
popf
mov
mov
sub
sub
cmp
lods
push
push
mov
push
pop
fidivrs
js
mov
jmp
mov
xchg
xor
fwait
idiv
jmp
xchg
jle
mov
and
mov
adc
pusha
ds
mov
xchg
dec
fisttpll
stos
cwtl
sub
and
outsb
test
push
inc
subb
callw
mov
and
js
add
dec
pop
mov
sub
ret
push
lret
add
les
mov
jmp
xchg
jl
imul
fdivl
sbb
cmpsl
imul
jg
push
out
pop
stos
pop
push
jne
dec
lcall
xlat
push
imul
sbb
mov
aas
cmc
aad
sub
lahf
decl
mov
aas
fs
or
aaa
movsb
cmp
movsl
les
jo
cmp
mov
xchg
mov
fdivl
lret
adc
push
mov
rcrb
mov
sti
das
test
das
inc
xchg
xchg
add
or
ret
jmp
arpl
adc
ds
dec
pop
in
and
inc
sub
test
mov
mov
shrb
punpcklbw
cmp
setb
and
xchg
mov
dec
jnp
aad
cmp
das
pusha
pop
mov
lds
jne
stos
ja
xor
inc
test
and
and
adc
rorl
inc
xchg
dec
cmp
lahf
push
xchg
test
push
mov
sar
fstpl
add
mov
rcl
sarb
mov
sub
ds
mov
sub
fdivrs
xor
enter
cmp
inc
icebp
ss
dec
fcomi
outsl
mov
std
rorb
into
xorb
adcb
lods
stos
icebp
and
xor
cmpl
test
out
mov
cmp
push
in
sub
mov
nop
push
jne
mov
pop
sbb
in
insl
pop
daa
mov
push
adc
add
push
mov
cmc
imul
stos
xchg
and
mov
add
mov
cmp
mov
mov
stos
cmp
mov
loope
dec
loope
and
jno
lock
in
clc
mov
push
enter
cmpsb
inc
out
sbb
sarl
mov
pusha
popl
sarb
jp
jns
sub
xor
imull
gs
xchg
push
loopnew
maxps
jb
lods
fistpl
jg
ss
les
pop
repz
lcall
inc
setl
into
ds
jp
pushf
mov
in
pop
mov
arpl
lcall
pop
std
cmp
sahf
add
rorl
adcl
and
add
mov
add
loop
aam
in
ja
out
push
xor
sbb
jle
loopne
jno
out
inc
imul
pop
push
repnz
in
aad
mov
out
mov
les
mov
inc
xchg
push
fmulp
mov
push
adc
jbe
popa
enter
mov
or
mov
enter
mov
mov
cmc
sbb
xor
pop
push
push
lea
push
outsb
leave
std
inc
in
mov
shrb
mov
aad
or
test
sub
cmp
fnsave
pop
in
clc
ds
jl
xlat
dec
leave
aad
dec
ljmp
jecxz
aas
adc
test
sbb
dec
aas
cli
shrb
test
mov
aad
sbb
lods
adc
scas
adc
js
mov
mov
imul
roll
mov
ja
push
inc
fcomi
push
jg
xchg
fs
pushf
jl
sti
mov
pop
xor
cmp
cmp
dec
fldl
push
out
xchg
rolb
push
lret
sbb
pop
stos
nop
push
jg
xchg
fists
xlat
stos
iret
outsl
xchg
std
push
lcall
rorl
arpl
sti
jb
repz
xchg
inc
jno
and
in
into
jb
lahf
aam
cld
popa
sub
ds
push
xchg
frstor
xchg
push
cwtl
pusha
inc
mov
in
rolb
or
or
lcall
push
pop
ljmp
call
jp
lock
enter
mov
rcrb
inc
fstpt
cld
mov
popl
jmp
aas
fucomp
or
pop
pop
test
mov
testb
sbb
mov
int3
inc
mov
xchg
aad
fldcw
aam
jae
es
fsts
lret
cmpsb
cmp
std
xchg
outsb
in
in
add
xor
daa
xor
add
lret
fcmovnb
cltd
push
dec
repnz
mov
dec
aam
into
xlat
cmp
mov
jmp
insl
inc
cmp
movsb
out
sub
sub
and
mov
mov
ja
bound
rorb
iret
lock
mov
repnz
aam
dec
and
cmp
fiadds
mov
adc
imul
push
arpl
jne
cwtl
mov
lods
dec
lock
call
lcall
test
ds
inc
inc
repnz
sub
test
leave
test
mov
decb
lahf
adc
bound
xor
aaa
ret
rorl
jno
in
mov
repz
push
sbb
cmpsl
jae
inc
test
push
and
mov
jecxz
loopne
dec
adc
dec
push
sbbl
mov
int3
popa
push
add
loope
push
leave
sub
push
jns
xchg
shlb
gs
pop
loop
ror
out
sub
arpl
push
ficompl
daa
and
aam
cmpsl
push
insl
xor
xor
lds
imul
add
fisttps
xor
out
dec
fcoml
xchg
mov
in
fists
ret
cmp
push
fdivr
dec
mov
mov
push
sub
loope
sbb
cmpb
add
mov
scas
pusha
gs
loopne
mov
xchg
cli
pusha
add
fcoms
jmp
add
loope
mov
sbb
sub
lahf
sub
in
xchg
dec
mov
dec
sub
andb
cltd
and
jmp
mov
popa
jmp
and
out
mov
pushf
pop
adc
lods
bnd
mov
mov
outsb
dec
sub
push
repnz
jg
adc
std
inc
scas
sub
pop
and
or
inc
inc
pop
jl
enter
out
inc
in
jecxz
popf
test
fadds
and
pop
stos
push
mov
shrl
out
sbb
scas
or
out
xor
pop
inc
int3
loopne
inc
xor
pusha
add
sbb
outsl
imul
pop
fnstcw
and
push
xchg
fwait
push
notl
xchg
xchg
test
std
daa
jbe
adc
into
dec
dec
or
test
xor
sub
aad
mov
push
stos
js
xchg
xchg
push
out
add
pop
ja
pop
and
mov
fcoml
sti
jle
mov
jp
xor
pop
call
mov
fisubs
int
sub
adc
and
movsl
dec
mov
movb
mov
call
xchg
and
call
and
mov
repnz
imul
imul
rcrb
dec
std
lods
add
fsubs
mov
xor
jno
rorb
dec
cmc
mov
and
pop
mov
mov
pop
xchg
adc
sahf
arpl
or
addr16
jne
push
cld
stos
push
mov
cmp
jne
insb
jns
cld
dec
ror
xor
scas
lcall
dec
popa
push
addr16
mov
mov
mov
rcl
sub
shlb
rclb
pop
pop
repz
xor
inc
add
stc
testb
xor
lahf
and
lret
adc
adc
subl
imul
sub
aaa
pusha
sbb
dec
mov
das
test
jg
aam
mov
ret
jbe
iret
mov
lock
add
xor
cltd
ljmp
adc
std
or
out
push
fdivr
insl
gs
lods
jp
push
pop
cmp
fmull
ja
inc
out
int
popa
inc
or
ljmp
inc
leave
out
mov
pop
imul
adc
xor
xchg
add
fistpl
pop
insb
sbb
std
or
inc
pushf
out
mov
outsl
sub
in
jg
xchg
sarl
mov
or
mov
outsb
and
push
test
cwtl
jb
add
sbb
cmp
in
mov
pop
or
adc
or
mov
sub
lahf
fldt
lcall
mov
testb
inc
xor
in
fisttpll
ds
push
int3
lret
jno
fldcw
dec
cli
ficomps
out
lea
shlb
jl
aam
jl
mov
mov
xor
and
ficomps
cmp
and
inc
cmp
in
xchg
and
jecxz
mov
pop
test
movsb
xchg
leave
jmp
insb
stc
xchg
roll
mov
ja
adc
mov
inc
mov
mov
roll
iret
clc
add
add
jmp
sub
jbe
cmp
ljmp
leave
nop
push
cmpsl
stc
aam
jle
sub
mov
lods
inc
push
int3
mov
and
xor
cwtl
je
dec
mov
push
xchg
ffree
fcompl
cld
in
test
pop
lea
cmp
cmp
aaa
setp
dec
ret
leave
add
cld
lock
out
xor
rcrb
std
push
data16
adc
mov
jp,pn
arpl
cwtl
and
fisubs
push
imul
or
stos
dec
pushf
call
or
sub
and
mov
inc
xchg
fldenv
and
dec
inc
and
add
out
adcb
rcrb
jge
test
test
mov
sbb
jae
jno
lret
shl
cmp
test
int
filds
cmc
js
into
dec
mov
cmc
jnp
ja
add
shll
push
mov
pop
push
scas
cltd
rclb
inc
out
mov
lods
jmp
jmp
loope
test
cmp
out
pusha
pop
mov
dec
dec
out
repnz
je
adc
add
cmc
or
cltd
test
and
jne
cmp
mov
sbb
adc
sub
ds
cld
and
lods
xor
inc
xchg
jp
and
jle
out
cmp
mov
shll
mov
push
lea
mov
jmp
mov
xchg
or
popfw
jnp
outsb
mov
sbb
leave
and
testb
test
ljmp
divb
stos
sahf
int3
sub
push
add
adcl
lahf
pushf
jae
fsts
in
cmc
and
and
mov
cs
add
add
mov
cmp
sbb
add
and
popa
jne
pop
repz
add
adc
and
and
loope
xlat
push
xchg
jle
imul
dec
inc
sbb
das
push
loopne
jns
or
pop
pop
lret
fdivr
mov
repnz
push
and
mov
out
mov
clc
sub
aad
popa
cmp
fisubrs
mov
cmp
jne
and
cmp
xchg
pop
jbe
das
icebp
pop
and
pmaddwd
inc
ret
stos
cld
jns
pop
aad
mov
gs
sbb
inc
repz
lods
and
imul
xorb
out
push
addr16
xor
lds
es
imul
jl
dec
dec
stos
imull
or
fidivrl
or
xor
sub
add
jle
jns
adc
jbe
mov
in
jle
cmp
or
mov
outsl
push
push
pop
mov
imul
pop
pop
or
jl
lock
sar
mov
dec
lea
xlat
cmp
orb
jns
rcr
in
push
jle,pt
mov
add
sbb
clc
cmp
or
out
jo
jmp
ss
repz
pop
push
mov
clc
in
loopne
dec
rolb
push
out
xor
pusha
add
sbb
xlat
pusha
push
and
dec
nop
mov
loopne
mov
mov
mov
push
mov
jge
xor
test
jae
or
rorl
repnz
mov
decl
cli
and
add
outsl
stc
sub
push
fwait
mov
sbb
stos
cmp
xchg
stc
aaa
sbb
mov
sbb
fisubrs
sub
push
push
cmp
jnp
lret
dec
out
sbb
cwtl
mov
jecxz
adc
mov
int
aas
rcll
cs
push
push
pop
jb
mov
mov
ss
aam
jb
testb
adc
ss
add
adc
popa
push
jecxz
bound
in
shlw
stos
jecxz
sub
aad
and
push
xrelease
add
es
pop
or
pop
cmp
inc
push
in
mov
push
aaa
mov
outsb
jo
xchg
int3
cmpsb
push
sbb
bound
xchg
insl
xor
push
das
add
int3
pop
mov
mov
cmc
aad
iret
adc
jb
out
jecxz
fistpll
popa
stos
les
pop
pop
ret
or
test
test
fs
add
leave
daa
jne
xlat
and
out
add
call
cs
scas
xchg
rol
loopne
negl
out
inc
add
stos
int
xlat
idiv
inc
push
adc
nop
push
sbb
or
out
cld
adc
imul
pop
adcb
sub
and
jb
push
int3
dec
dec
ljmp
inc
arpl
cltd
sar
es
mov
test
xlat
sbb
inc
outsb
inc
dec
mov
mov
add
dec
mov
xlat
push
sarb
pop
jl
ja
mov
into
mov
lret
xorps
jbe
imul
mov
ficoms
mov
fldcw
xchg
ret
add
loop
cmp
push
iret
in
adc
pop
add
pop
imul
pop
call
rolb
xchg
rcll
sbb
mov
addr16
pop
iret
rcll
xor
mov
js
pop
cli
icebp
mov
inc
mov
push
adc
mov
jmp
sbb
aam
test
push
add
rolb
add
mov
mov
insb
popa
mov
in
lcall
rcrb
pop
std
loope
mov
jecxz
push
dec
into
add
iret
aas
cmp
xchg
pop
push
and
xor
movsb
out
pop
cmpb
push
in
aam
xchg
daa
inc
push
out
int
iret
push
ja
sbb
fimull
andb
es
sbb
test
cmpsl
jle
popa
loope
ss
mov
lea
mov
push
call
pop
cmp
jg
mov
psadbw
leave
mov
add
into
jge
sub
ret
aad
test
cmp
arpl
fiaddl
inc
fldenv
and
scas
or
pop
clc
xor
sbb
jns
cmc
sub
or
inc
and
jp
mov
mov
push
mov
jg
or
inc
out
arpl
pushf
adc
scas
inc
xchg
scas
jae
mov
jb
xchg
das
test
add
or
std
out
ss
dec
jae
imul
inc
xorl
add
cld
push
and
mov
sbb
imul
or
nop
xor
cmc
xchg
lahf
jle
mov
popf
and
mov
xor
mov
mov
dec
pop
popa
xchg
icebp
push
cmpsb
cmp
repnz
movsl
cltd
incl
shll
mov
xchg
cs
inc
push
push
jno
adc
mov
movsb
cmc
clc
sub
rorl
lret
iret
stc
mov
jne
ret
xchg
xor
and
sti
push
xor
vrcpss
lahf
mov
or
pop
cmpsb
fucom
lret
test
aas
mov
fdivr
push
jmp
sbb
mov
movsl
lock
mov
push
pop
dec
add
mov
inc
and
push
inc
sbb
pushw
dec
or
mov
pop
xchg
mov
scas
fnstenv
test
and
xor
pop
pop
pusha
jg
fdivrl
cmp
inc
and
ret
fiaddl
scas
mov
dec
test
cli
mov
fidivrs
push
aas
mov
imul
sub
out
enter
mov
ja
pop
jbe,pn
mov
sub
std
sahf
mov
pop
xchg
mov
cld
fsub
leave
out
outsb
dec
cmpsb
repz
insb
mov
cmpsb
jl
xor
jbe
xor
nop
adc
or
in
test
mov
hlt
cli
jbe
pop
shl
shlb
mov
shrb
aaa
dec
cmp
into
jo
adc
inc
mov
call
insb
lcall
inc
or
imul
push
cmp
pop
and
add
jl
cmpl
lcall
lret
pop
repz
mov
cs
xor
insl
js
inc
pop
xor
sbb
out
into
jne
push
mov
mov
in
enter
mov
or
mov
fadds
mov
loope
pop
hlt
insl
int3
inc
es
movsl
fsubrs
loopne
mov
add
int
jp
xor
mov
test
in
leave
xlat
decl
push
mov
pop
and
mov
dec
inc
pop
outsb
xlat
in
dec
in
mov
push
jmp
and
jb
jne
jns
and
cmp
cmp
out
add
clc
jne
outsl
aas
leave
lret
push
outsl
mov
xchg
mov
jp
mov
bound
mov
cmpl
scas
rorb
test
cmpsb
push
aad
sahf
inc
data16
mov
push
push
fisubrl
mov
ja
pop
inc
arpl
insl
icebp
push
mov
call
pop
xchg
lea
fwait
call
pop
rcrb
push
mov
sbb
xchg
pushf
pop
scas
push
push
fsubrl
adc
inc
in
or
mov
mov
lcall
into
pop
int
pop
daa
sub
fnstenv
push
leave
cmpsb
rcl
js
shrl
stc
xor
insb
sbb
and
aas
dec
nop
inc
mov
add
pop
mov
add
aad
mov
out
jl
shrl
out
inc
pop
lds
test
jl
fcompl
outsl
pop
mov
aad
push
pop
mov
sub
xchg
aam
pop
xchg
cmp
xchg
pop
test
das
mov
pop
or
decb
xchg
pushf
cmp
shll
xchg
pop
int3
cmp
mov
ds
outsb
insl
loop
iret
add
es
sub
xor
push
mov
stos
adc
push
loope
push
and
or
sub
movsb
inc
mov
pop
test
push
rcl
adc
das
shr
add
mov
lcall
fdivl
movsb
inc
pop
scas
enter
push
lock
cmp
testb
pop
movsl
mov
add
jb
int3
out
add
gs
stos
jmp
xor
sub
mov
ret
hlt
dec
adc
stc
es
nop
lcall
aam
add
jmp
hlt
dec
loope
mov
fistpl
jg
xchg
xor
add
clc
pop
inc
ds
pop
lods
and
jbe
roll
pusha
jns
jae
jg
pop
aad
mov
sub
test
test
pop
js
mov
clc
sbb
stos
jle
leave
maskmovq
divl
fists
adc
adc
out
lahf
dec
and
stc
mov
fcmovne
lret
leave
jbe
loop
xor
call
xchg
aam
les
lea
add
sbbb
mov
jmp
xlat
xor
dec
inc
sbb
add
cmp
stos
jmp
lds
mov
inc
addb
sub
inc
imul
adc
repz
lcall
push
cmp
cmovl
ds
mov
setns
cmp
sbb
das
ljmp
stos
fadds
ja
int
jl
dec
xor
sbb
pop
and
mov
int
push
fildll
push
pop
mov
push
subb
ret
add
and
movsb
push
xor
cmp
dec
jg
aad
mov
jg
cli
pop
jg
inc
mov
or
scas
sbb
pop
fs
popf
mov
bound
push
int3
popf
cwtl
add
jbe
jb
outsb
xchg
cmp
lret
das
int
sbb
adc
imul
xchg
push
dec
xor
mov
push
xchg
pushl
clc
adc
add
enter
push
insb
mov
jmp
int3
hlt
jge
int
rcrb
imul
jne
bound
jns
sub
aad
sarl
js
add
fstpl
inc
clc
sub
ret
outsl
sbb
sbb
mov
in
and
dec
test
pop
xchg
push
sub
and
jb
js
mov
cli
in
mov
xchg
repz
out
imul
lahf
stc
sub
mull
fistps
js
jne
jl
lods
inc
loope
add
mov
fwait
push
xchg
imull
cmp
test
jns
add
insb
dec
inc
fistps
inc
sbb
sarb
adcl
scas
arpl
mov
lea
pop
clc
loop
repz
mov
xor
push
mov
cmc
xchg
test
dec
ficoms
clc
mov
inc
dec
jbe
cmpsb
imul
pop
sbb
jns
sbb
sahf
sbbb
fcmovnbe
in
sbb
sbb
out
xorb
xor
mov
pop
jae
dec
pop
mov
fstpt
sbb
dec
jg
out
or
iret
add
add
pop
aad
push
sub
sbb
addr16
xchg
xchg
lret
xchg
ljmp
cmp
fwait
ret
rcrl
cli
filds
push
and
sahf
jbe
mov
out
lods
fmull
lcall
jmp
mov
xor
push
data16
aam
and
inc
cmp
fnstsw
das
push
vpaddsb
jb
mov
lahf
popa
and
cld
mov
fs
shl
sbb
imul
fwait
pop
fisubrs
push
xchg
repz
test
imul
aas
js
nop
push
and
adc
sbb
and
xchg
popa
dec
jno
pop
lahf
xor
test
clc
repz
pop
mov
jbe
adc
jo
xchg
js
pop
inc
fsub
or
and
insb
sar
les
data16
mov
nop
jmp
sarl
inc
lock
lcall
ss
add
dec
outsl
call
lods
xchg
adc
int
sbb
push
iret
dec
xor
jmp
mov
outsl
ds
cmc
adcb
push
xchg
mov
adc
test
or
loopne
or
sbb
stc
mov
sbb
or
jnp
negb
fbstp
pop
or
dec
les
out
push
jae
arpl
repnz
xchg
pop
and
ret
cld
cwtl
dec
sti
addr16
sbb
adc
mov
icebp
aam
mov
inc
arpl
aas
mov
sbb
hlt
mov
lods
cltd
inc
hlt
fnsetpm(287
push
scas
sbb
inc
into
cmp
xchg
cld
mov
push
sub
out
adc
scas
and
loop
insb
xchg
xor
and
lods
and
mov
mov
gs
and
jp
jnp
push
mov
xchg
dec
xlat
mov
and
add
push
std
imul
sar
jmp
adc
out
out
dec
pop
aad
sub
mov
dec
mov
sti
call
sti
mov
add
jo
movsb
add
adc
pop
loopne
push
repz
inc
mov
movsl
jb
cld
call
ret
xchg
add
shll
sbb
mov
insb
mov
fiadds
xor
imul
int
sub
daa
mov
pop
jmp
add
dec
xlat
out
jmp
pusha
stc
push
xchg
cmpsb
faddl
and
shll
pop
stc
add
add
push
lahf
jns
mov
je
mov
movsb
dec
add
in
fcomip
incl
imul
popa
dec
inc
iret
sub
xchg
fcmovu
xchg
jmp
jge
cmp
lret
or
mov
rolb
mul
cwtl
mov
sbb
fistl
sbb
test
push
jnp
push
push
test
popw
repz
adc
add
movsl
incl
push
mov
repz
pop
mov
scas
jl
fmuls
mov
cwtl
inc
inc
jle
ficoml
nop
loope
lret
icebp
pusha
pop
sbb
push
or
pop
ret
stos
test
sub
sub
mov
mov
insl
xrelease
mov
xor
iret
mov
popf
inc
fnstsw
inc
aas
lea
push
xchg
movsl
xchg
push
insl
outsl
sbb
ret
xchg
mov
cmp
scas
sbb
mov
addl
sbb
dec
out
std
cmp
negl
loop
mov
mov
lret
es
fidivrl
aas
aam
mov
mov
ror
hlt
call
mov
mov
aad
popf
pop
xlat
pop
mov
iret
jl
outsb
outsl
test
loope
popf
ja
jns
push
nop
and
mov
jecxz
cld
leave
adc
fistpll
inc
dec
jge
je
shlb
lcall
ds
pop
in
inc
xor
or
das
and
xchg
add
iret
inc
xchg
xlat
notb
lods
cmp
push
popf
or
mov
xchg
sbb
repz
jns
add
or
das
mov
std
push
popa
shrb
pop
push
inc
in
jp
test
or
lods
ret
jne
shlb
mov
das
arpl
or
or
or
jp
loope
ja
pop
les
filds
in
pop
sbb
gs
insb
int3
jp
pop
or
pop
adc
push
cld
enter
test
lret
sbb
cld
lahf
jb
bound
sbb
mov
das
xchg
in
int3
mov
das
pushf
in
stos
ss
cmpsb
rorb
ja
test
lret
in
dec
cmp
sbb
shr
addr16
nop
adc
and
add
les
dec
mov
sar
outsb
movsb
daa
fildll
jnp
mov
out
push
imul
es
inc
mov
jg
or
pop
adc
je
hlt
xchg
xchg
scas
pop
or
sbb
pop
adc
test
xor
or
xchg
jne
pop
aam
mov
es
repz
sub
lods
repnz
sub
mov
fcmovu
add
mov
and
pop
cltd
into
lods
lea
jl
mov
jle
iret
clc
arpl
fs
mov
mov
loope
mov
or
cmpsb
repnz
jcxz
fistl
fwait
clc
in
sbb
pushf
stc
packsswb
test
in
nop
pop
inc
cmc
sbb
sahf
std
sub
mov
cmp
pop
xlat
push
testl
popf
sbb
pop
sbb
xor
repnz
loop
in
xor
dec
push
dec
lret
in
dec
mov
ret
insb
das
das
xchg
out
xchg
and
adc
or
insl
sbb
cmp
int3
cmpsl
outsl
or
cltd
into
jnp
adc
or
xchg
dec
xchg
inc
loop
lods
sarl
push
or
mov
xor
scas
fildll
xchg
xor
arpl
jne
xor
pop
jmp
mov
int3
and
sub
adc
bsr
pop
mov
sbb
add
adc
jmp
sub
xchg
cmpsb
sub
cmpsl
insl
xchg
cmpsl
addr16
xor
push
push
fstpt
imul
arpl
das
jne
cmp
jmp
daa
out
add
jno
imul
add
imulb
rol
add
and
imul
or
faddl
jae
pop
sub
rep
je
sub
clc
mov
pop
mov
fidivl
inc
inc
push
js
mov
cltd
xchg
or
mov
mov
dec
pop
sub
dec
push
mov
sub
pop
pop
push
jns
add
jp
dec
adc
jmp
jno
mov
push
lret
jno
lahf
inc
mov
jp
push
sahf
jns
stos
jmp
int3
into
jo
mov
and
in
push
lahf
inc
and
xchg
popa
cmc
and
pop
lock
inc
fucom
or
cltd
xlat
outsb
ljmp
inc
movsb
lds
adc
mov
sarb
inc
dec
stc
or
jge
lds
adc
add
stc
cmp
mov
mov
or
lea
jecxz
cmpsl
xchg
mov
or
mov
jns
stc
jno
std
and
push
cmpsl
pop
testb
cmp
push
cmp
mul
jl
cmp
ljmp
adc
push
fisttps
xchg
iret
xor
mov
sbb
dec
mov
icebp
andb
adc
rclb
cmc
pop
out
mov
mov
aaa
xchg
ret
mov
and
repnz
dec
loop
pop
nop
push
push
enter
cmp
int3
imul
xchg
push
sarl
sub
xchg
inc
jecxz
fisubrl
mov
lods
in
mov
add
hlt
pop
cmp
sub
mov
mov
push
test
jo
xor
outsl
add
mov
data16
mov
out
or
xor
incb
dec
leave
and
mov
addb
test
dec
mov
xchg
rolb
adc
push
sub
inc
xor
mov
mov
or
aad
push
cmc
adc
mov
daa
dec
notl
sbb
lods
inc
xlat
sub
aam
in
xor
rcl
ds
lahf
lods
cmp
fstl
enter
dec
dec
push
pop
stc
jns
mov
mov
pop
and
in
rcll
sbb
cmc
imul
sbb
inc
aaa
imul
xor
mov
ss
popf
mov
mov
out
cmp
test
movsb
out
xchg
mov
push
mov
jne
lcall
push
mov
jbe
mov
cmp
aas
push
pushf
add
jle
pop
call
cltd
push
pop
xchg
add
jmp
xchg
fs
scas
lds
push
push
cmc
dec
push
ficomps
xlat
mov
jno
or
test
out
aaa
sbb
mov
sbb
pusha
pop
mov
call
push
adc
pop
sbb
outsl
pop
mov
and
fisttps
cli
lods
pop
cmpsl
mov
fcomp
jnp
std
inc
xor
dec
mov
cmc
cmp
mov
mov
shll
ljmp
jmp
fdivl
hlt
aad
xchg
jae
jo
addl
cmpsb
pop
cmp
ficoms
nop
popf
jne
pop
push
or
lea
mov
adc
mov
nop
sbb
test
xchg
int
fisttpll
inc
push
bound
clc
push
inc
test
xor
rcrl
ret
int3
lock
bound
decb
mov
aas
mov
sub
iret
cwtl
adc
insl
sub
notb
xor
push
fildl
sti
stc
insb
sub
in
pop
cmpsb
daa
add
test
inc
mov
pop
inc
dec
testl
pop
fwait
pop
loop
imull
imul
leave
rcrb
or
sti
mov
xor
inc
bnd
daa
loope
mov
inc
add
sti
rcrb
xchg
mov
stos
adc
ficompl
sub
xchg
jnp
pop
repz
outsl
mov
sbbb
cmpsl
xchg
lds
jl
jbe
jmp
out
roll
and
outsl
daa
mov
xchg
sbb
push
jae
or
jl
jns
cwtl
pusha
mov
inc
in
cmp
adc
and
packsswb
sbbb
and
leave
pop
pop
lds
cltd
pop
inc
jecxz
je
ret
call
or
mov
cmp
cmp
aaa
pop
rclb
aad
jns
or
dec
sti
sbb
js
pop
dec
sbb
cs
or
mov
push
outsl
inc
and
inc
jle
mov
mov
loopne
je
sbb
jae
int
mov
cwtl
mov
into
push
push
ret
ret
cmp
nop
dec
xchg
pop
xchg
aam
xchg
cmpsl
sbb
sub
xchg
adc
xor
sub
or
mov
jp
sub
mov
mov
lahf
adc
pmovmskb
jno
xchg
push
inc
or
pushf
lret
repz
lds
loope
ss
sbb
xchg
mov
mov
cmp
daa
dec
out
out
inc
in
mov
mov
mov
and
cld
negb
mov
xchg
test
push
pop
xor
jl
jecxz
test
loop
xchg
inc
fbld
pop
sbb
dec
pop
xor
data16
jb
inc
dec
fidivl
es
push
gs
jg
jns
cmpsl
or
insl
test
mov
ljmp
pop
jne
jae
lods
popa
xchg
xchg
lret
cmp
sti
lods
insl
scas
outsl
fadd
int
aam
outsl
sbb
sbb
aaa
fs
mov
or
sub
mov
pop
mov
cs
pushf
loope
insb
sbb
inc
sbb
kxorw
es
xor
mov
push
xor
aad
sub
push
push
in
dec
roll
push
jno
xchg
insb
dec
daa
dec
dec
test
dec
jne
cltd
mov
xchg
lahf
add
jmp
clc
subb
inc
insb
sub
sub
jo
lods
fsubrl
xor
test
test
or
mov
mov
out
jnp
jmp
aas
add
stos
mov
inc
aad
mov
and
inc
leave
inc
xor
repnz
les
inc
xchg
test
sbb
sbb
or
cmp
xchg
test
rcll
and
stos
xchg
push
pop
add
lods
lods
mov
adc
lahf
mov
jne
mov
int
xor
push
adc
stos
xchg
sar
addr16
mov
clc
cmp
mov
test
inc
fisttpll
dec
dec
inc
mov
aad
clc
adc
jbe
add
inc
imul
push
jbe
xor
adc
adc
inc
dec
popf
mov
dec
jne
outsb
in
inc
jmp
mov
and
jg
filds
or
aaa
ds
mov
xlat
popl
inc
test
mov
shrb
push
imul
sub
sub
js
les
adc
xchg
jo
icebp
xchg
inc
popa
mov
cltd
jae
out
jo
jnp
jae
test
dec
jo
rclb
icebp
push
dec
xchg
mov
push
jmp
jle
fucomi
mov
loope
or
push
xchg
jecxz
pop
sub
add
imul
movsb
mov
repz
xchg
das
aaa
cmp
clc
out
adc
push
inc
clc
sbbb
push
fmuls
scas
imul
out
in
aas
roll
sub
pop
mov
dec
mov
test
sub
mov
scas
sub
add
xor
pop
std
inc
mov
fstpt
or
ret
add
roll
sbb
or
lock
push
dec
adc
lret
pop
jle
cmp
sbb
dec
jo
fwait
imul
jbe
rolb
dec
mov
mov
cmp
and
lahf
enter
cmp
loope
pop
ret
sahf
mov
fistl
mov
out
mov
daa
mov
or
push
inc
test
mov
mov
repz
xor
js
cmc
js
fidivs
ss
sub
mov
mov
adc
icebp
or
pusha
fwait
dec
out
sbbb
sbb
loop
rcrl
xchg
fs
xchg
lds
hlt
stos
jae
push
mov
aam
fadds
addl
and
jp
push
out
in
mov
in
push
jnp
xchg
ret
jp
pushf
mov
fnstsw
jae
sbb
sbb
jp
out
sbb
loopne
loope
into
xor
fadd
cld
mov
cld
pop
popa
leave
in
jmp
jbe
pop
push
sub
sbb
jbe
test
lret
mov
hlt
and
out
sub
mov
dec
mov
imul
sbb
adc
les
sti
cmp
stos
or
cmpb
rcr
jmp
xor
pop
scas
mov
cwtl
popa
out
outsb
xor
sub
repnz
stc
out
pushf
or
jnp
ret
mov
inc
cmp
lea
jb
aam
test
cmpsb
lds
jl
adc
fldt
xchg
mov
pop
test
mov
je
xor
adc
movsl
mov
cmp
mov
stos
sahf
sub
sbb
stos
int3
aaa
xchg
dec
test
loope
pop
xor
mov
daa
frstor
test
adc
jns
repnz
jb
xor
and
mov
xchg
fisttpll
lea
pop
push
mov
xchg
in
clc
fsub
movsb
fiadds
xchg
cltd
lock
fdivl
inc
shrl
sti
test
cmp
fnsave
jne
enter
out
pop
push
out
into
jbe
add
scas
insl
fstpt
jecxz
xchg
cli
adc
jp
cwtl
dec
mov
or
movsb
mov
push
loope
fwait
and
and
iret
call
mov
retw
jne
sbb
sub
jns
enter
lock
mov
bound
enter
mov
fadds
dec
idivl
jno
push
add
sbb
mov
xchg
cmpsb
loop
ss
inc
movsb
ficomps
mov
xchg
sub
and
xor
jae
mov
sahf
cld
std
insl
lock
adc
pop
adc
daa
and
mov
fwait
loop
push
lds
push
mov
xchg
out
mov
repz
outsb
loope
loope
mov
sub
sbb
adc
xchg
cwtl
jno
loope
rcr
cmp
sbb
add
xchg
and
add
push
lods
imul
sub
out
inc
xchg
mov
sbb
mov
iret
ret
or
push
arpl
jl
in
cmpsb
stc
dec
jp
push
or
cmp
shl
roll
cmp
mov
sbb
divl
daa
sub
inc
jne
dec
in
shlb
adc
loope
xchg
jmp
aam
fmuls
or
push
cmp
mov
mov
shrb
cmp
sbb
pop
inc
and
and
pop
in
lods
call
shll
iret
mov
cltd
je
frstor
and
push
dec
push
xchg
out
inc
mov
call
dec
cmp
jle
cmpsb
or
sub
out
lahf
xchg
dec
mov
jg
popa
test
or
lock
inc
jb
ficoml
cmp
out
es
mov
sub
lods
add
lods
xchg
mov
mov
inc
stos
mov
pop
dec
jae
orb
ret
rolb
mov
jecxz
lea
lahf
loopne
jp
repnz
out
sbb
sub
aam
in
jbe
imul
insl
add
pusha
test
jecxz
lds
inc
inc
push
pop
xchg
fadds
inc
je
fcoml
push
xor
push
adc
cmp
push
push
insb
xchg
sub
fldcw
lea
lods
xorl
outsb
pushf
push
iret
lods
inc
jns
pop
je
scas
or
dec
rorb
and
xor
call
lock
mov
jne
out
ljmp
adc
xlat
mov
push
jge
mov
loope
jnp
shll
xchg
push
jo
jne
sbb
pop
sbb
incb
mov
xchg
fstl
or
ja
popf
pop
adc
jmp
cmpsl
nop
shrl
punpckhdq
pop
mov
mov
ret
cmp
mov
mov
popf
test
daa
mov
sub
and
in
fisubl
daa
or
add
mov
mov
mov
outsl
or
ret
push
xor
cmp
push
cld
mov
add
fwait
imul
sub
xor
jnp
jle
dec
xchg
adc
dec
pop
aad
or
jg
dec
mov
mov
dec
mov
jnp
ret
sbb
dec
inc
aam
push
aaa
push
adc
mov
cmp
jne
xchg
or
nop
leave
cli
adc
leave
fidivs
cwtl
xor
inc
ss
xor
testl
or
sbbb
adc
pop
shlb
xchg
add
xor
stos
adc
fbstp
mov
mov
mov
bound
dec
sub
test
repnz
sbb
push
clc
and
fs
out
sbb
dec
test
movsb
mov
xor
and
fcmovne
aam
out
test
bnd
sub
add
xchg
add
les
adc
cmp
outsl
movsl
sar
sti
fcomps
cmpsb
mov
xchg
inc
pop
cmpl
fisubl
mov
mov
push
in
dec
sub
xchg
mov
sbb
mulb
pop
mov
push
or
js
mov
pop
inc
lret
mov
push
xor
pop
ljmp
pop
into
jmp
push
dec
sub
xchg
xchg
repz
fbstp
aad
push
cwtl
mov
sbb
mov
stos
pop
dec
outsl
hlt
loopne
sahf
xchg
add
cmp
sbb
pop
jle
icebp
or
cmp
test
mov
mov
shrb
fadd
jno
dec
inc
scas
mov
shlb
dec
mov
dec
adc
xor
scas
ficomps
test
ja
fnstcw
repz
mov
mov
call
inc
or
xor
cmp
jne
and
cmp
lds
imul
sbb
mov
inc
stos
xor
dec
pop
lock
push
pop
rdtsc
mov
iret
aad
jmp
sarl
lahf
jne
xchg
adcb
lahf
xor
hlt
ss
adc
xor
push
out
pop
mov
cmp
movsl
insl
into
jo
aad
gs
pushf
fwait
repnz
fldl
in
lea
mov
out
rcrl
cmpsl
mov
mov
hlt
inc
inc
dec
mov
jmp
adc
pop
push
jb
ret
subl
jp
pop
cs
dec
xchg
mov
push
mov
fs
loope
jb
aam
cld
jno
out
stos
xor
testb
cli
jp
pop
enter
aas
cmp
add
in
xor
scas
fisubl
lods
fwait
push
cmpsl
mov
cmpsl
rorl
sbb
add
add
out
cmp
imul
call
pop
test
mov
jle
sbb
fsts
outsb
and
xor
push
sub
out
mov
inc
jno
push
repnz
std
and
add
jbe
mov
or
pop
push
idivb
aad
enter
inc
mov
push
cmp
std
add
sar
mov
push
add
mov
sbb
push
push
inc
sahf
je
loop,pn
xor
imull
inc
xchg
aaa
mov
les
cld
pushf
movsb
inc
imul
scas
sub
push
and
pusha
int
in
mov
pop
pop
jg
xor
or
test
push
mov
mov
mov
loopne
sbb
out
lcall
add
loope
inc
mov
shl
fldt
fwait
push
mov
enter
cmp
nop
lock
in
pop
mov
into
inc
gs
cmp
pop
cld
shl
mov
in
mov
sbb
mov
adc
pop
cmp
subb
hlt
ss
jae
jg
fstl
add
insb
pop
lods
sbb
movl
pop
sub
mov
add
std
jo
add
mov
and
cmpsb
or
loop
incl
jge
mov
cmp
jmp
repz
xor
push
and
mov
nop
les
jg
push
xor
cmp
xor
cmpsl
andl
sub
xor
fwait
paddusb
dec
sub
aaa
inc
xor
inc
fs
fwait
testl
inc
jns
lret
aam
in
xor
inc
inc
xchg
clc
ss
mov
jo
or
push
movsb
out
xlat
ret
popf
dec
in
jg
gs
mov
ds
and
dec
and
dec
xor
xchg
or
push
popf
sub
fcomip
shr
jns
sub
dec
cmp
push
lock
xchg
in
aaa
and
sub
dec
dec
sbbl
push
ret
int3
cmp
sub
ret
sbb
or
cmp
sub
ret
nop
push
loop
push
ficoml
or
add
mov
scas
xor
dec
ja
jmp
cmp
cltd
lret
shrl
and
sub
xor
inc
shr
mov
mov
das
rolb
sahf
cs
sub
cmpsl
mov
inc
push
push
mov
lret
aam
rolb
inc
jb
testb
mov
inc
inc
ret
pop
xorb
pop
xorl
jp
dec
movswl
push
dec
cmp
fs
shr
lds
sub
cli
std
hlt
cmp
mov
mov
call
xor
lret
dec
ret
cmp
jl
jns
in
jle
or
xor
xchg
mov
inc
movsl
lcall
dec
scas
rorl
mov
call
cmp
loop
pop
or
xor
push
std
cmp
mov
sbb
stc
das
sar
mov
jle
mov
lcall
outsb
inc
pop
dec
dec
in
cli
cmpsb
xchg
fadds
popf
mov
add
sbb
xor
push
fld
sub
addr16
sbb
cmp
hlt
fsubl
repnz
addr16
aam
mov
xchg
arpl
cli
adc
sahf
ja
aaa
dec
cld
mov
movsb
loop
mov
add
outsl
arpl
mov
scas
pusha
inc
push
inc
ss
xchg
xchg
sub
sahf
stos
fimull
xchg
mov
in
or
xor
mov
leave
sbb
push
xchg
daa
iret
adc
ficoml
inc
jmp
jl
fnstcw
idiv
jecxz
sub
incb
fsubl
aad
xor
pop
mov
inc
mov
imul
scas
int
in
adc
cmc
push
pop
nop
cmp
js
shrb
shrl
sbb
sub
outsb
andl
loope
sbb
push
xor
mov
pop
rcl
jmp
loope
add
stos
cwtl
add
clc
out
dec
sbb
sti
or
dec
fldt
push
out
dec
xchg
les
jecxz
cmp
xor
loope
adc
and
add
outsl
fcmovne
mov
cmp
mov
je
hlt
pop
xor
xchg
and
popa
leave
scas
add
and
les
push
repnz
pop
int
inc
sub
data16
addr16
pop
and
xorl
insl
jmp
cmpsl
and
adcb
lds
jle
cltd
add
ljmp
movl
sub
fsubl
mov
push
sbb
in
insb
ds
out
aam
popa
jo
enter
jns
in
sbb
test
inc
mov
fisubl
pusha
pop
dec
mov
fnstsw
jno
sahf
sbb
mov
jle,pt
sbb
mov
push
mov
mov
outsl
ret
das
dec
or
dec
mov
in
jae
lods
inc
nop
roll
mov
mov
scas
ljmp
adc
mov
sub
sbb
sbb
push
cwtl
fwait
and
andb
mov
leave
xchg
adc
and
xor
stc
sbbl
into
je
stc
stos
jno
or
fnstenv
sbb
mov
xor
xor
xlat
add
add
xor
mov
mull
cmc
lods
clc
leave
notl
movsb
lods
jae
lods
pop
popf
outsl
mov
lods
aad
adc
icebp
fwait
cli
jp
or
inc
test
jo
mov
mov
loopne
or
push
inc
push
and
pop
or
jbe
sub
xchg
and
stos
lret
pop
cmpsb
inc
out
and
mov
pusha
lret
insb
jmp
mov
xor
das
dec
rolb
cmp
add
mov
in
adc
shll
int
jb
repnz
fwait
dec
xor
xor
lods
dec
testl
popa
sbb
out
jp
cmpsl
jns
fnstsw
lods
mov
scas
dec
pop
jns
lahf
mov
dec
cli
and
adc
push
xor
aad
xchg
hlt
lcall
fnsave
rclb
mov
and
lcall
pop
lock
dec
push
pop
dec
xor
jg
addr16
mov
out
sbb
pop
adc
mov
cmpsl
mov
repz
iret
test
arpl
sbb
lret
jecxz
repnz
jb
jmp
sub
add
pop
sub
push
bound
inc
xor
jnp
cmp
xchg
add
ss
ss
mov
pop
shll
and
cmpsl
jmp
xchg
jbe
popf
or
and
call
ljmp
mov
out
sbb
mov
mov
xchg
and
imul
clc
push
mov
call
lcall
xorb
sbb
and
data16
jnp
pop
pop
les
xchg
sub
pop
ret
mov
lcall
jo
and
aad
icebp
mov
xor
ss
aaa
jnp
lds
addl
xchg
or
xor
dec
lcall
push
inc
jae
or
pop
inc
and
mov
sahf
push
test
sbb
bound
divl
xchg
insl
movsl
jbe
mov
push
out
shrw
out
sbb
jl
and
fs
cmp
or
cmpsb
mov
lock
cmpsb
or
jecxz
icebp
and
cmc
or
adc
xor
xchg
rclb
mov
mov
popa
or
and
fwait
stos
xor
xchg
jae
xchg
jne
push
into
lahf
cld
jg
rolb
les
jl
call
add
mov
leave
sub
loope
xchg
dec
stc
aas
jnp
inc
jnp
jns
sarb
fsubl
js
jl
sbb
loopne
pop
ret
addl
dec
push
add
call
or
mov
xchg
lds
or
jmp
inc
fidivs
inc
and
das
punpckhbw
lret
ret
sbbb
int
shlb
xor
fs
mov
and
dec
cs
mov
xchg
cli
aad
and
in
xchg
sub
or
out
pop
xlat
in
fsubrp
fucomp
clc
and
inc
aad
lcall
jg
fmull
sti
nop
rcrl
xor
int
pop
dec
jp
sbb
jnp
ds
ds
push
in
sbb
fistpl
sti
xor
cmp
div
jp
xchg
push
in
popf
dec
lret
aas
cmp
and
jne
mov
pusha
sbb
rcrl
inc
out
push
int3
jmp
pop
jns
inc
or
shrb
add
push
outsl
dec
sub
mov
sub
adc
arpl
jnp
loope
mov
rclb
jle
push
pop
pop
ljmp
movsl
aas
cmp
adcl
adc
jl
pop
mov
sbb
scas
mov
cmp
mov
jne
movsb
fsubs
pop
mov
xchg
pavgw
xlat
pop
xorl
xor
push
pop
loop
xchg
in
outsb
pop
sahf
call
popf
adc
shrl
jne
fidivl
bound
clc
sbb
in
cmpl
xor
or
pushf
sbb
outsb
adc
test
movsl
lock
mov
dec
mov
scas
rclb
cmp
xchg
push
push
cli
test
xlat
pop
and
pop
sbb
stos
or
push
mov
inc
add
pop
lea
stos
jl
sbb
add
int
sarl
inc
or
xchg
pop
std
stos
and
data16
xchg
pop
imul
arpl
out
jmp
add
push
dec
and
inc
adc
add
les
rolb
lds
addr16
jnp
inc
shlb
and
or
inc
jno
testb
mov
jge
push
aas
clc
mov
cmp
cmp
cmp
test
xlat
int3
and
scas
pop
pop
scas
or
adc
aaa
je
inc
das
xor
in
cwtl
adc
loope
shll
push
je
aas
jmp
jb
cwtl
pop
pop
mov
lret
add
mov
xchg
in
xor
fsubrs
xchg
movsl
fisubrs
in
adcl
xchg
inc
inc
jle
int3
leave
das
fildl
test
xorb
fiadds
xchg
es
xchg
gs
int3
mov
in
xor
rorb
ljmp
out
mov
ds
rclb
jae
lock
adc
dec
xor
movb
out
sbb
cmp
add
shrl
add
adc
cltd
add
mov
sahf
and
and
cltd
jecxz
pop
imul
icebp
xchg
xchg
cmp
and
cmp
pop
outsl
outsl
inc
dec
push
loopne
mov
mov
push
add
sub
jecxz
stos
rorb
dec
mov
ss
pop
sub
insb
jg
sub
subb
sbb
or
mov
cmp
int
cld
push
xor
lret
aas
sub
sub
out
or
or
adc
imul
jmp
in
ret
movsb
push
and
mov
lahf
sub
mov
addr16
aam
rcrl
insl
and
movsb
push
xor
xchg
cmp
mov
pop
jae
mov
mov
cmc
xor
psubw
xchg
pop
or
add
adc
push
jl
sub
imul
and
sti
sub
add
sbb
loop
daa
sub
mov
mov
or
out
leave
pop
push
xchg
test
ds
lcall
rorl
pop
push
lds
stos
dec
mov
imul
jp
insb
or
and
pusha
sbb
cwtl
jge
cmc
push
xor
shrb
insl
test
cmp
push
push
or
mov
dec
pop
mov
lock
xchg
dec
fdivrs
fs
jo
faddp
and
ss
lret
push
cmp
test
leave
loopne
mov
add
adc
aad
mov
lcall
pushf
sub
and
outsl
push
repnz
adc
iret
add
bound
adc
mov
mov
sbbl
push
cld
inc
je
mov
stos
inc
lods
loope
sbb
fsubrs
ja
aam
xor
push
push
jnp
cmp
add
xchg
and
ljmp
adc
les
int
xor
mov
sub
pop
out
adc
aad
add
fcoml
cltd
push
in
imul
push
sbb
xor
in
sar
iret
shrb
xchg
jno
in
inc
dec
xchg
and
jo
and
push
push
sbb
cmpb
lret
cmpxchg
popf
shr
ret
adc
pop
js
in
fwait
pushf
loop
mov
clc
call
xchg
ds
out
or
push
into
mov
stc
xor
leave
sbb
popa
cwtl
aaa
mov
mov
sbb
cmc
imul
aad
sub
pop
or
jo
or
lds
hlt
icebp
int3
xchg
adc
sub
lahf
lods
lcall
pop
push
and
or
pop
aaa
jg
inc
cmp
sbb
pop
and
repz
stos
std
fs
out
mov
adc
popa
jmp
dec
pushf
or
stos
enter
or
mov
cli
das
test
adc
fcoms
fidivs
xchg
orl
or
movsb
fldl
sbb
sbb
ljmp
mov
pop
sbb
mov
jno
xchg
mov
insl
or
dec
movsl
lcall
pop
daa
adc
jmp
inc
add
movsl
xor
or
and
adc
nop
jmp
mov
sti
dec
movsl
gs
mov
sbb
cmp
jle
fs
push
mov
fistpll
inc
sbb
sar
shr
std
jb
mov
and
cmp
mov
shrb
mov
push
das
lret
out
mov
cwtl
mov
lea
lret
sbb
add
mov
cmp
enter
cmp
xchg
fnstsw
in
xor
mov
sbb
and
xchg
jno
sub
inc
popf
pop
mov
stos
mov
mov
inc
mov
insb
lret
push
jle
test
dec
sub
jge
pushf
jmp
xchg
add
inc
lret
inc
sbb
or
mov
mov
jle
pop
inc
mov
cmp
cli
outsl
push
mov
pop
nop
add
mov
clc
dec
outsl
xchg
or
inc
push
mov
lahf
ja
push
jne
pusha
fiadds
fistpl
cmp
inc
pop
movl
nop
test
js
repz
xchg
sbb
pop
lods
cltd
push
adc
idivl
mov
xor
lahf
mov
push
orl
xchg
loope
icebp
xor
shll
mov
pop
jne
divl
push
movsb
xor
cld
add
mov
lods
sbb
iret
push
mov
and
adc
xchg
ss
pusha
shll
or
xorl
cmp
int3
cmc
outsl
inc
cs
into
mov
add
orb
fcomps
mov
xor
jne
pop
mov
push
outsb
push
pop
push
pop
imul
push
out
popf
adc
or
xchg
mov
mov
shll
das
stos
jae
cmp
xchg
sub
out
into
push
mov
popf
fsub
int3
out
testl
repnz
ret
in
mov
cwtl
lods
or
and
rol
xchg
xchg
fisttps
pop
inc
xor
xor
jmp
loopne
adcb
mov
bound
and
cmp
popf
jb
je
adc
mov
aad
adc
cmp
xor
je
cwtl
lcall
in
mov
dec
mov
ffreep
sbb
movsb
push
inc
cmp
dec
cmp
fldl
mov
sub
les
js
push
jns
cmpsb
xor
out
cmpsl
mov
and
enter
mov
pushf
sarl
push
movsb
iret
shll
pushl
mov
dec
ficoml
fs
xchg
pop
lahf
cmpsb
push
push
cmpsb
cmp
bound
fidivl
adc
leave
cmpl
call
imul
enter
cli
inc
push
pop
jmp
iret
dec
mov
out
aad
lret
adcl
out
notl
and
push
jno
addl
jnp
jge
loope
and
push
or
sub
pop
mov
loopne
insl
xchg
in
sti
movsb
or
sbb
and
inc
mov
in
xchg
inc
cs
lcall
push
and
mov
clc
loop
mov
xor
jnp
cmp
bound
mov
sub
adc
xchg
or
enter
inc
sub
or
jl
sarb
dec
roll
in
arpl
rol
xor
sbb
jl
sbb
es
or
andb
jmp
mov
fsubp
loop
mov
paddb
sub
aam
dec
sub
fwait
and
inc
jmp
jmp
fcomip
fs
fsts
xor
xchg
push
jno
cwtl
inc
jne
jp
add
lods
sbb
int
sub
push
and
loop
adcl
pop
or
mov
int3
in
adc
addr16
int
sub
add
stos
sbb
inc
sub
psllw
ss
mov
jg
inc
add
outsl
mov
aas
mov
fcmove
or
addl
pushf
xchg
inc
insb
mov
xchg
xchg
mov
pop
outsb
jl
dec
aad
icebp
jecxz
xchg
add
cmp
sub
pusha
xchg
nop
icebp
movsl
ret
imul
out
pop
rorl
cmpsl
mov
push
fisubrl
xchg
mov
into
leave
cltd
or
push
cmpsl
pop
ja
movsl
adc
push
jmp
divl
pop
jmp
sub
ljmp
ss
sub
push
call
clc
xor
rcr
pop
inc
xchg
and
mov
cmp
pushf
pop
push
xchg
shrb
mov
mov
mov
mov
in
ljmp
xor
std
pop
movsb
dec
pop
pop
imul
movb
cmp
pop
pop
fbld
or
jne
imul
mov
movsl
es
into
mov
adc
cmpsl
sbb
lods
into
imull
fstpt
xor
and
pop
fists
fdecstp
es
push
lcall
out
sbb
push
faddp
xchg
cld
jg
and
pop
lds
arpl
jg
add
mov
idiv
hlt
aad
xchg
mov
leave
aad
aaa
and
add
dec
stos
int3
xchg
pushf
das
dec
mov
sbb
cs
jb
addr16
pop
inc
shll
stos
adc
xchg
dec
fstpt
dec
adc
pop
adc
xor
fsubrp
sub
jno
dec
popa
aam
mov
mov
stos
mov
les
dec
xchg
jle
add
in
pusha
cmpsl
jp
lods
mov
pop
jmp
out
or
or
aad
dec
imul
inc
sub
loopne
ret
fistpll
xchg
cmpsl
mov
sub
outsl
testb
jnp
mov
sub
adc
lods
mov
add
push
int3
xchg
add
fistl
mov
pop
test
jle
imul
pop
out
movsl
xchg
mov
movsb
cltd
inc
jns
push
orl
cmpsb
inc
add
iret
mov
sti
sbb
xchg
insb
pushf
xor
mov
push
push
inc
cmp
jo
push
pop
mov
ror
sarl
je
jl
ret
stos
loope
rclb
mov
jmp
in
cmp
jbe
xchg
scas
inc
out
xor
rclb
pop
adc
mov
out
pushf
int
rorb
mov
push
jl
mov
adc
pop
test
into
aad
imul
xor
pop
jge
pop
dec
std
push
mov
mov
mov
xchg
sub
pushf
andb
aam
add
push
adc
jnp
mov
mov
mov
inc
pop
ss
fs
or
loopne
cmp
push
adc
dec
aas
lock
jo
mov
xor
mov
fiaddl
xchg
frstpm(287
shll
popa
frstor
mov
mov
lods
test
mov
insl
test
pop
mov
push
lret
and
jne
aam
inc
sbbl
mov
faddl
ja
sub
cmp
aam
pop
push
mov
pusha
push
repz
inc
inc
pop
jg
out
stos
or
push
mov
in
mov
add
jae
push
test
nop
xorl
test
mov
adc
xor
iret
repz
mov
push
add
sbb
or
sbb
sbb
roll
rcrb
sub
fisttpll
xchg
mov
xchg
mov
push
ja
mov
inc
subl
les
push
movsl
add
inc
add
leave
nop
adc
xor
push
fcoml
adc
rcrl
subb
cmp
gs
sti
scas
pusha
data16
and
in
add
xchg
scas
cli
shl
out
sbb
inc
xor
jo
sbb
or
sahf
cmp
out
push
int3
sub
jmp
sub
dec
mov
pop
mov
jae
scas
xchg
icebp
arpl
inc
imul
and
mov
add
or
sbb
cmp
loop
sub
movsb
nop
xor
ljmp
rcrl
movsl
je
push
pop
cmp
push
gs
push
sub
xor
lods
xchg
cs
cld
pop
and
sub
xchg
sbb
xchg
push
cld
jge
jmp
test
push
or
outsl
out
icebp
rcrl
sub
jns
mov
fcomp
into
push
inc
sub
in
add
es
push
notb
cmp
and
mov
jo
cmp
inc
add
loop
in
std
pop
jp
lods
jne
enter
or
sub
xchg
push
and
enter
jp
sub
mov
scas
push
leave
daa
mov
aam
mov
out
mov
push
cwtl
ficompl
sub
lods
stos
cmc
ja
jae
mov
push
mov
mov
adc
adc
xor
inc
out
in
pop
in
dec
rclb
dec
movsb
loop
and
inc
push
push
adc
adc
cld
xor
or
adc
push
fnstsw
push
fdivrs
sub
jmp
mov
xchg
mov
adcb
lahf
out
das
mov
rolb
mov
aam
test
mov
daa
test
stc
push
in
push
mov
or
push
fdiv
stos
sub
jge
mov
pop
sbb
adc
inc
push
jg
inc
rcrl
push
mov
popf
vpsubb
jns
mov
in
sahf
out
dec
and
lock
mov
mov
mov
je
mov
jg
or
addl
test
mov
inc
movsb
sbb
gs
jne
pusha
sub
pushf
stc
pop
dec
fadds
test
or
loop
xchg
sub
je
mov
xchg
outsl
scas
test
stos
mov
add
je
in
std
or
fwait
mov
push
mov
inc
or
scas
jge
cmp
gs
mov
inc
xor
xchg
or
adc
cmp
out
or
icebp
enter
sub
lret
pop
js
adc
cmp
xor
mov
out
aas
cmp
pop
mov
mov
add
mov
mov
repnz
in
cmp
mov
sbb
leave
aad
push
pop
mul
mov
xor
jb
adc
out
adc
in
push
mov
jl
jle
push
push
rclb
pop
jo
mov
mov
dec
xor
daa
repnz
imulb
icebp
jle
add
icebp
lcall
shll
outsb
inc
jle
cmc
fidivl
mov
xchg
cmp
loopne
sbb
or
cmp
in
jo
sbb
cmpsl
or
nop
and
rcrb
sub
test
add
repz
dec
add
rcll
loope
imul
sub
ficompl
cmp
test
mov
jns
sbb
cmp
dec
add
imul
scas
xor
jae
je
add
inc
mov
stc
int3
jno
in
mov
jecxz
cmpsb
inc
add
mov
jmp
inc
in
mov
xchg
dec
lret
test
adc
rorl
lret
imul
fs
jl
outsb
lock
jp
xchg
cwtl
ret
clc
adc
mov
xchg
xchg
lds
jmp
sub
dec
leave
hlt
cmp
das
mov
cwtl
jae
xchg
aam
insl
jbe
mov
loopne
pusha
sbb
inc
fadds
data16
and
jbe
fldt
pop
push
cmpsb
and
sub
ljmp
push
leave
cltd
mov
push
xchg
mov
sbb
push
inc
in
jns
xor
mov
inc
stos
mov
sti
mov
out
lods
mov
xor
pop
jb
jb
push
mov
bound
jns
nop
out
fdivl
cmp
xlat
jae
push
clc
mov
xchg
pop
stos
fadd
aas
pop
inc
mov
std
shr
subb
test
pushf
hlt
adc
subl
pop
mov
mov
int
stos
ret
stos
sbb
shrl
faddp
fcompl
and
mov
pop
mov
xchg
fsubp
mov
xchg
repnz
rol
int3
mov
xor
add
sbb
dec
mov
repnz
lods
cltd
out
sarb
leave
mov
lahf
stc
stos
lahf
int3
mov
lods
push
cmpb
test
int3
ret
xor
add
mov
jno
push
mov
repz
jmp
outsb
push
sub
mov
add
xchg
dec
jmp
fsubl
les
imul
pop
aas
adc
fs
inc
js
scas
pop
in
mov
stos
ret
dec
sbb
das
xor
out
dec
xchg
ffree
jecxz
data16
loope
jne
add
shlb
mov
pushf
clc
add
cmp
xor
adc
add
push
les
add
and
xor
sub
xor
mov
xchg
sahf
or
cmp
mov
lret
rclb
cmp
roll
mov
inc
adcb
je
das
stos
sarl
out
push
dec
in
ds
mov
xchg
push
lret
adc
sub
mov
jb
test
mov
bound
push
lods
jge
scas
fwait
ss
jno
ss
xor
hlt
sbb
jo
add
je
sub
mov
mov
fidivrl
das
out
lret
cmp
stos
push
inc
cmp
ljmp
inc
add
fcoms
and
in
bound
js
adc
inc
ret
jno
pop
scas
sbb
out
add
sbb
sub
lret
push
adc
into
push
popl
or
sub
dec
dec
mov
pop
and
clc
mov
push
cmp
std
stc
lods
lds
mov
xor
bound
mov
ss
and
loop
in
adc
mov
out
iret
cmp
jp
pop
and
jmp
dec
repnz
cmp
inc
insl
pop
mov
js
pop
xchg
movsl
aas
jge
movsb
mov
cmpsb
sti
dec
shlb
pop
fstl
cmc
fsubrl
xor
scas
in
adc
lds
sub
mov
popa
iret
outsl
jns
aad
pop
popf
xor
and
movsl
jae
mov
xor
adc
outsb
movsl
das
fstl
xchg
jg
cwtl
lcall
out
inc
mov
mov
or
mov
pop
mov
add
sub
xchg
rorl
les
mov
mov
push
add
nop
sub
js
xchg
sbb
sbb
sub
shr
ret
or
jbe
push
js
out
mov
fisubrs
mov
mov
lret
push
pop
sub
pop
xor
jnp
dec
test
lret
xor
xor
mov
dec
cmp
xchg
push
ja
adc
ret
fsubl
sub
or
leave
inc
mov
loop
es
fisubl
cwtl
xchg
sbbl
adc
in
imul
mov
sub
sbb
cmc
enter
test
js
scas
outsl
je
mov
stos
or
xor
xchg
xor
pop
adc
dec
mov
or
int
ss
lods
xchg
orl
lcall
jmp
lock
outsb
inc
sarl
rclb
push
pop
sti
mov
outsb
xchg
vrcpps
test
fs
cmp
in
loopne
sbb
and
ds
or
add
in
mov
outsl
outsl
imul
mov
mov
jnp
adc
push
pop
adc
cmp
mov
aad
and
cmp
jg
mov
sbb
or
pushf
int
push
daa
mov
stc
or
cmc
push
cmp
mov
in
sub
xorb
cmp
mov
jmp
or
mov
or
mov
add
push
data16
cli
pop
enter
lods
std
fdivr
mov
pusha
adc
push
inc
es
pop
stc
aad
xchg
pusha
xor
iret
sbb
lea
adc
stc
mov
jecxz
repz
inc
inc
stos
xorb
dec
sbb
out
adc
inc
rcll
mov
mov
mov
jmp
pop
sarb
xchg
orl
mov
nop
and
xchg
pusha
pop
jl
data16
sub
shrl
and
add
pop
cwtl
mov
sub
cmp
xor
repnz
cld
inc
mov
dec
pop
hlt
mov
movsl
push
pop
int
cwtl
jmp
fdivs
push
jbe
leave
scas
fbld
cmpsl
lret
adc
movsl
scas
adc
fdivl
cmp
dec
mov
push
xchg
lcall
push
in
mov
mov
mov
out
xor
incb
push
cs
add
add
and
add
int3
ret
inc
sub
fs
adc
mov
pop
mov
ret
push
sub
enter
dec
out
xchg
push
cmp
jo
jg
xor
shlb
and
sbb
xlat
inc
xor
into
into
mov
push
pushf
jae
mov
lds
push
xchg
mov
and
ret
arpl
pop
scas
in
jne
fisttps
inc
xchg
push
and
xor
fldt
sahf
inc
std
xor
popf
pop
push
or
ss
pop
push
and
xchg
cmpsl
aad
test
sbb
cwtl
pusha
movsl
and
stos
or
mov
leave
in
lret
bound
into
xchg
cmp
mov
ljmp
add
xor
mov
fcompl
or
adc
mov
mov
pop
or
ds
mov
dec
cmp
xor
shll
mull
push
cltd
ss
push
mov
dec
mov
cwtl
add
sbb
shlb
and
in
into
cli
and
stos
shld
das
std
cmpsl
lret
sub
lods
stc
pushf
lock
add
iret
lret
ds
nop
or
pop
mov
adc
mov
movsb
sahf
sub
inc
xchg
dec
arpl
lret
push
fadds
jne
inc
dec
mov
aad
mov
lods
pop
mov
push
divb
adc
push
add
or
cmp
movl
adcb
enter
repnz
bound
mov
lock
outsb
xchg
jl
push
mov
add
hlt
stos
addr16
adcl
sub
push
aam
int3
jb
or
mov
mov
out
fsubs
lea
inc
inc
shr
ss
or
mulb
jae
cli
cmp
lcall
push
pop
test
xchg
or
adc
cs
rcll
pushf
xchg
insl
inc
sub
adc
cmpsb
imul
pusha
leave
mov
sahf
jb
popa
cmpsb
dec
movsb
hlt
movsl
pop
addl
enter
cld
push
jecxz
jecxz
mov
dec
or
inc
in
daa
insl
sub
les
sbb
clc
or
xchg
xchg
mov
fmuls
push
mov
xor
es
jne
and
sbb
adc
stos
rcr
mov
lock
xor
enter
sti
popf
and
bound
sub
sbb
stos
add
push
jae
stos
jno
jp
cmp
dec
pop
inc
andl
rorl
lret
xor
movsl
lds
hlt
bound
fwait
xchg
sbb
push
jg
xor
pop
int3
xchg
and
sbb
leave
bound
sbb
lret
adc
jae
dec
fsubl
movsb
push
imul
mov
das
loopne
icebp
fldl
dec
mov
sbb
orl
sub
jbe
negb
bound
push
and
add
mov
jl
sub
mov
dec
push
mov
stos
xchg
push
cmp
mov
out
cmp
xor
aas
rcr
cmp
test
xor
pop
incb
inc
subb
pop
mov
sti
loop
sbb
aad
sbb
lds
sahf
ds
shl
or
pop
or
sub
mov
adc
enter
xor
cltd
hlt
ret
andl
es
and
sub
aad
psubusb
out
sub
jle
aad
jecxz
mov
sbb
sbb
test
in
fimull
sbb
cmpb
sbb
lea
and
std
rorb
xchg
loope
push
add
hlt
pop
pop
inc
xchg
xor
out
out
rcl
inc
loop
out
add
and
js
sub
mov
movsl
scas
out
pop
xchg
push
adc
lret
loopne
mov
xor
inc
xor
in
data16
imul
xchg
mov
sbb
push
repnz
daa
nop
add
out
cmp
in
nop
dec
pop
int
jp
lods
out
loopne
jle
or
iret
stos
inc
mov
jge
xor
in
push
enter
dec
sar
ret
or
fdivrl
loopne
subb
jl
mov
xor
sub
ds
movsl
das
pop
cmp
jb
pop
mov
xor
pop
xchg
cli
mov
or
ret
jnp
add
les
loope
and
jb
adc
je
test
cmc
xor
outsl
mov
insb
add
popf
xlat
jge
mov
orb
add
or
cmc
mov
sub
push
cmp
jl
cmpsb
jbe
insb
pop
jl
inc
ret
push
mov
or
xchg
push
inc
scas
and
rorb
js
in
loopne
je
and
ds
jmp
mov
das
add
out
adc
sub
mov
or
popl
out
pop
iret
or
lea
scas
pop
lret
push
xchg
push
sbb
lret
int3
call
mov
pop
cmp
mov
leave
adc
outsl
lcall
pushf
jge
sub
mov
mov
and
ret
pop
mov
add
mov
int3
cmp
push
jl
push
imul
and
push
loopne
gs
fsubs
idivb
and
push
jo
jbe
imul
xchg
cli
sub
stos
mov
cwtl
jg
cli
cmp
push
mov
mov
loope
and
scas
in
or
nop
sbb
call
mov
xor
push
mov
or
je
pop
add
xor
pop
jle
mov
mov
jmp
arpl
dec
mov
scas
repnz
les
stos
fldl
aad
mov
dec
push
cmc
loope
dec
pop
lods
jg
lcall
mov
pop
cmp
sub
addr16
pop
push
xchg
sub
adc
mov
xchg
out
ret
daa
scas
jle
int3
mov
movsb
mov
orl
xor
les
push
cltd
adc
push
int
jle
in
out
aad
dec
cmp
pop
bound
sarb
xchg
call
cmc
ja
test
or
rcrb
repnz
nop
mov
add
jns
enter
pop
pusha
inc
les
xor
mov
stos
mov
add
nop
inc
push
mov
fcomps
movsb
inc
push
popa
and
cwtl
popa
out
pop
nop
fidivrs
jno
das
clc
mov
jbe
xor
mov
mov
int
pusha
sub
or
mov
jb
aaa
jae
inc
dec
jecxz
jmp
sub
lret
push
mov
aam
xor
stos
adc
sti
movsb
addl
sbb
cmc
xorl
jae
movsl
test
ss
cwtl
shlb
cmp
mov
sarb
push
outsb
dec
xchg
adc
out
pop
ljmp
jne
adc
adc
dec
ljmp
xchg
mov
in
cmpsb
mov
sbb
cmp
jg
nop
fcmove
lds
fcmovbe
push
jecxz
pop
dec
or
push
sti
pop
add
aaa
sbb
adc
pop
xor
add
xchg
out
mov
xchg
add
mov
cs
lds
fwait
jno
mov
inc
loop
jle
mov
xorl
xchg
add
test
rcll
inc
push
je
andl
dec
cmp
jecxz
test
test
adc
mov
jns
aaa
push
das
orl
xchg
out
in
sub
sub
or
push
popf
dec
push
dec
enter
lahf
cmp
mov
out
les
mov
rorl
sub
popa
mov
lock
lock
xchg
mov
xchg
xchg
dec
adc
dec
je
sti
inc
or
mov
js
and
ret
jmp
jmp
and
stos
jns
cs
pop
add
mov
lahf
scas
push
pop
cld
les
jp
loope
dec
test
js
sbb
push
sub
rcll
into
xchg
scas
push
pop
jg
push
insl
xchg
cli
sub
mov
push
xchg
sbb
ja
fcoml
jp
push
push
or
inc
jmp
xor
pop
mov
sbb
cmp
xor
ds
es
mov
int
and
mov
sti
add
lahf
fldenv
jno
and
icebp
int3
jp
mov
arpl
adc
dec
daa
jno
icebp
lea
fbstp
xor
mov
test
imul
std
inc
fwait
fs
test
mov
lsl
xor
cmpb
inc
mov
insb
jae
jle
les
sbbb
mov
mov
daa
nop
int
add
scas
mov
mov
sub
subb
dec
push
insl
dec
jb
xchg
or
mov
add
xor
mov
inc
lods
jecxz
inc
pop
jbe
sbb
mov
outsl
cmp
adc
mov
push
xchg
jle
push
movsl
out
fstpt
leave
mov
js
dec
daa
jbe
in
clc
xor
shrb
push
cmc
push
mov
aam
xchg
std
lock
cld
inc
adc
push
push
ss
pop
in
dec
pop
andb
popf
sbb
scas
mov
jg
push
outsl
ret
xchg
jmp
or
fisttpll
xchg
and
fiadds
or
jo
fwait
push
fbld
sahf
pop
mov
adc
and
cmpsl
adcb
out
mov
in
mov
test
xchg
shl
mov
fs
or
xchg
mov
push
mov
push
mov
pmaxsw
inc
pop
notrack
inc
nop
out
or
imul
pop
push
call
pop
push
mov
inc
push
pop
jns
pop
jge
stc
push
add
lret
sbb
in
mov
push
xchg
in
ret
mov
and
loopne
or
jmp
lahf
shlb
lock
test
popf
pop
pop
sub
or
xor
cmp
out
loope
xchg
push
loopne
mov
sahf
fwait
cwtl
jb
or
insb
sub
test
xor
cmp
in
pop
or
xacquire
push
mov
repz
insb
inc
movsb
mov
push
pop
cmp
and
cwtl
lock
push
cs
stos
xor
and
jmp
jns
pop
jno
shll
stc
movsl
fdiv
pop
aad
xchg
lds
call
mov
stos
push
mov
enter
out
std
mov
sub
sbb
jae
rcr
mov
xchg
divl
out
sub
push
subb
hlt
lods
xchg
sti
xchg
push
pop
push
arpl
dec
dec
orb
pop
scas
cmp
imul
aas
xchg
sub
adc
in
repz
sti
mov
push
pop
push
xchg
test
in
fsts
les
je
pop
jo
or
pop
mov
das
dec
xor
mov
dec
jmp
mov
xorb
jecxz
push
cmp
inc
mov
cmp
test
mov
outsl
sbbl
mov
pcmpgtw
sti
mov
jg
data16
jnp
rorb
cmp
out
ljmp
jge
sbb
ljmp
call
outsb
inc
popa
ss
or
pop
push
lods
push
jle
and
inc
and
stos
out
sub
int3
add
add
mov
xchg
jo
in
scas
adc
inc
push
sub
shlb
lahf
sti
mov
add
popa
sbbb
cwtl
leave
js
xchg
mov
xor
fmuls
add
loopne
and
xor
je
leave
fdivl
aaa
mov
xor
sbb
lret
mov
inc
pop
jg
adc
jp
and
ret
add
mov
ljmp
or
in
mov
inc
xchg
push
dec
xchg
aam
pop
pop
sub
mov
inc
fistps
popl
cmpl
fcmovnbe
shll
mov
pop
xor
mov
je
sbb
mov
jp
lahf
mov
xchg
push
xchg
out
lea
faddl
lret
repz
cmp
dec
sub
push
imul
sbb
mov
and
in
mov
lcall
sbb
fnstenv
jp
outsl
sarb
and
cs
mov
js
mov
dec
or
cmpsb
outsb
push
xor
rclb
fsubl
imul
jle
fdivrl
jp
mov
push
and
mov
and
dec
jb
push
push
sub
fmul
jle
stos
jbe
dec
mov
mov
adc
fsubs
into
mov
lcall
sbb
mov
in
adc
inc
jae
imul
mov
dec
ficompl
mov
outsb
daa
mov
push
mov
xor
cmp
xor
xor
arpl
xchg
cmp
mov
lock
sbb
xchg
push
dec
jbe
inc
xlat
jnp
push
popf
sbb
push
mov
sub
sbb
mov
mov
rcrb
dec
or
inc
xchg
loopne
cs
pusha
mov
cmp
pushf
or
xor
cmp
inc
cmp
mov
mov
jg
in
inc
js
pop
sbb
fs
imull
aad
mov
clc
mov
or
mov
xchg
add
push
mov
lods
hlt
lcall
adc
inc
cmc
jnp
es
inc
lods
xchg
jmp
mov
mov
add
subl
mov
stc
or
repz
lret
lds
fmull
adc
mov
fs
push
test
sbbb
and
iret
ja
push
popf
xor
fcomip
sbb
data16
push
aaa
cmp
fmul
or
addl
dec
xor
lods
lret
or
sub
mov
push
call
xor
add
jns
or
jno
pop
sub
jg
roll
xchg
gs
xor
pop
in
das
xchg
je
testb
mov
loopne
sbb
and
ficoml
xor
cmp
je
fisttps
xor
in
adc
bound
mov
aad
jmp
pop
push
pop
push
movsl
add
mov
cmpsb
adc
leave
fistpl
sub
push
dec
push
idiv
or
jb
pop
mov
mov
inc
xlat
in
xor
xchg
icebp
xchg
xorl
pop
sub
imul
insb
inc
dec
cmp
or
sub
neg
dec
in
push
pushf
and
sbb
and
lahf
xlat
int3
sub
daa
cmp
mov
lea
shrl
jae
and
pop
and
ficomps
inc
xor
cmpsl
jmp
lahf
fidivrs
mov
inc
jo
xchg
add
adc
pushf
repnz
adcl
repnz
mov
daa
movsb
xor
iret
jmp
or
sbb
push
mov
mov
jecxz
jmp
add
dec
in
xor
sub
pushf
pop
xchg
push
adc
cmp
sbb
lock
je
call
paddusb
cwtl
jp
rorb
sbb
movsl
fdivrs
adc
jnp
cmp
es
clc
int3
pop
sub
mov
rorb
mov
scas
inc
addr16
lcall
int3
sub
stos
mov
jo
mov
sahf
mov
ffree
mov
or
pop
cmp
push
cmp
or
in
pop
adc
dec
shrl
mov
popf
inc
fisttpl
aaa
popa
shl
cltd
fisttpll
and
jo
xor
sub
mov
push
in
or
pop
aas
pop
and
xchg
or
adc
fwait
cmpsl
mov
std
xchg
jge
test
mov
mov
xor
hlt
popf
inc
pop
mov
je
movsl
jb
in
test
idivl
bound
jmp
pop
repz
add
inc
sub
test
mov
popa
adc
pop
pop
popa
lds
jmp
outsl
xor
xchg
icebp
aad
add
scas
mov
sub
or
mov
sbb
xchg
test
cld
das
and
push
stc
mov
in
pop
or
mov
fistl
sbb
dec
rcrb
dec
pop
scas
out
mov
dec
dec
ljmp
ret
push
xor
addr16
jno
mov
in
ret
xchg
inc
cmp
out
mov
and
xchg
in
mov
cltd
or
or
pop
mov
inc
mov
jbe
js
test
lret
jae
clc
or
push
dec
pusha
push
xor
sbbb
sahf
or
xor
jp
push
shrb
imul
xlat
adc
dec
mov
and
mov
push
loopne
jmp
bound
push
jge
lods
add
aas
test
adc
jmp
pushf
jnp
fmull
sbb
cmpsl
aaa
cmp
cld
ret
cmp
popa
popw
jle
fimuls
xor
sbb
int
daa
sbb
dec
xor
inc
cmp
ja
adc
xor
lods
sbb
pop
fsubr
dec
cli
mov
add
scas
stos
movsb
xchg
xchg
mov
jecxz
lock
nop
aam
mov
mov
out
jmp
test
push
and
mov
xchg
adc
cltd
jnp
cs
or
push
leave
lahf
das
or
dec
push
xchg
aam
hlt
and
mov
inc
mov
xchg
push
sbb
pop
xchg
dec
push
mov
jns
mov
xchg
push
mov
notb
into
jl
mov
pop
fwait
xchg
add
or
mov
std
push
jge
jo
jb
pop
jecxz
push
cmp
mov
mov
iret
cmp
inc
aam
dec
sbbb
stc
pop
test
cmc
sar
leave
arpl
push
jmp
enter
cld
sub
push
mov
mov
test
adc
or
dec
xchg
rcrb
cli
fdivl
leave
lods
cli
inc
cmp
mov
sub
inc
sbb
sbb
inc
cltd
and
rcrb
xlat
outsb
mov
rol
push
movsb
jns
js
out
push
pop
cmp
les
outsb
add
sub
iret
jno
add
push
in
push
push
jb
aad
in
sbb
es
mov
cmp
adc
xor
in
out
js
out
int
jns
mov
jo
scas
pop
dec
int
or
mov
add
mov
jge
sbb
ljmp
in
mov
sub
btr
orl
popf
mov
fldenv
sub
aas
inc
lea
xchg
xor
je
push
sbb
inc
into
div
in
es
fmuls
adc
mov
push
mov
push
pop
sbb
into
shlb
fcoml
push
stos
adc
mov
dec
xchg
or
sub
mov
pushf
mul
lret
xor
icebp
jp
int
cmpsb
loop
pop
add
jl
mov
sub
dec
sub
xor
repz
mov
pushf
les
mov
jo
adc
scas
xchg
int
sub
mov
push
jbe
push
jae
pop
and
xor
fs
popl
xchg
dec
cmp
mov
xchg
insb
scas
push
inc
rclb
inc
gs
adc
xchg
or
cmp
sbb
fnsave
xchg
pop
in
and
pop
shrb
inc
cmp
rcr
adc
add
aaa
mov
or
cli
pop
stos
pop
cmp
stc
mov
cmp
and
ret
jmp
push
jnp
js
and
hlt
out
pop
mov
pop
xchg
push
push
dec
cmp
sub
stos
daa
movsb
xchg
mov
enter
xchg
sbb
test
sub
imul
fwait
ljmp
aad
mov
xlat
rolb
push
mov
std
addr16
mov
out
sbb
push
fists
movsb
test
adc
jge
and
mov
cltd
mov
inc
int3
or
movsb
sub
fsts
xorl
sbb
and
mov
mov
aad
dec
and
out
stc
loop
fdivrs
lds
or
jl
xor
sub
dec
ret
ss
push
dec
dec
mov
mov
mov
sub
hlt
hlt
and
jg
cmp
and
loop
sub
fstl
inc
add
mov
push
mov
in
pop
inc
push
bound
sbb
sbb
add
movsl
mul
aaa
sub
fcmove
hlt
push
out
mov
inc
aad
and
cmp
inc
ret
mov
insl
enter
fdivs
in
jb
dec
or
iret
xchg
mov
or
test
or
dec
js
sbb
mov
sbb
mov
xchg
loop
clc
mov
or
or
push
int
mov
std
les
xchg
aad
sbb
dec
ret
sub
and
sub
push
pushf
jbe
and
in
inc
clc
dec
adc
mov
mov
nop
dec
test
out
iret
adc
inc
insl
push
adc
mov
ss
jg
cmp
repnz
mov
adcl
xchg
lock
push
sbb
jl
aas
cmp
fmuls
sahf
mov
int
ss
aad
imul
flds
push
sti
dec
flds
or
stc
xchg
loope
out
mov
mov
nop
sbb
mov
cmpb
inc
sub
mov
add
xor
and
aaa
add
push
or
gs
enter
jnp
fnsave
aam
and
and
sub
insl
repz
pop
out
xor
mov
fdivrl
aaa
mov
pop
ja
lcall
aas
divb
std
iret
or
hlt
aam
popf
push
push
jmp
jne
popa
jnp
mov
out
lret
repnz
lea
xchg
dec
pop
mov
mov
fsubr
dec
dec
xchg
inc
loop
clc
or
imul
or
outsl
stc
js
sub
rolb
jo
in
push
sub
xchg
jb
jo
and
mov
pop
xor
sbb
enter
push
dec
je
and
xor
shrl
dec
mov
adc
cmp
xlat
cmp
repz
dec
jns
mov
adc
test
pop
repnz
push
dec
sti
push
and
cmpsl
and
test
js
ss
mov
lock
sub
stos
add
insb
shll
lret
dec
xor
stos
scas
pop
cmp
sbb
mov
sbb
addr16
repnz
rcr
mov
push
push
stos
ret
push
std
test
pop
mov
loop
test
xchg
out
aaa
mov
xor
outsl
xchg
int
mov
mov
xor
enter
mov
ret
flds
test
fmulp
lret
stos
dec
xor
xchg
add
repnz
rcr
cwtl
sbb
sbb
lret
cmp
daa
popa
loopne
mov
dec
jae
out
or
push
jp
mov
jbe
add
outsb
jae
cmpsb
nop
xchg
cmpsb
movsb
cs
lahf
mov
repnz
adc
mov
mov
sbb
aas
xor
mov
adc
cli
loop
sbb
adc
cli
fcomp
mov
dec
sub
sbb
inc
pop
jle
test
jmp
adc
iret
jmp
cmp
out
cmp
sbb
icebp
mov
cli
fstp
jp
push
pop
mov
add
inc
btc
mov
xchg
icebp
outsl
test
sarl
push
rcll
fbstp
xor
aam
push
cmc
xor
out
or
gs
push
and
fimuls
xor
std
dec
lds
ja
cmp
pop
sbb
mov
insl
cmp
adc
iret
sub
repz
mov
xchg
adc
mov
popa
pop
xchg
sub
pop
push
pop
popa
push
cmc
mov
pop
xor
inc
adc
pop
out
or
outsb
jo
test
sbb
decl
sbb
movsb
jae
inc
xor
leave
js
loop
mov
fcompl
repnz
mov
repnz
mov
mov
sub
lods
ret
in
ss
cmpsb
loope
push
int
subl
test
outsl
rolb
xchg
and
inc
ret
and
js
dec
pusha
cld
add
xor
test
push
ja
addl
dec
push
popa
shl
xchg
and
adc
in
fwait
aas
inc
pop
adc
xor
fdivr
sti
loopne
jmp
inc
or
test
sbb
jnp
cltd
sbb
loopne
out
bound
cmp
nop
and
push
and
xlat
lods
jge
add
xchg
out
loope
pop
inc
jb
add
sub
fistps
aam
mov
adc
mov
mov
mov
in
test
or
push
jmp
in
rorb
in
lahf
fmul
jnp
out
cmpsl
aad
jb
scas
loop
ret
inc
scas
ficompl
pop
in
ds
pop
mov
xor
out
adc
outsl
shrl
lods
mov
adc
and
jbe
cmp
inc
xchg
ljmp
ror
add
mov
adc
std
add
dec
ret
add
cmp
ja
pop
sbb
pop
popa
xchg
pop
lahf
rcr
pop
push
mov
sub
add
inc
dec
add
mov
leave
scas
push
movsb
es
daa
es
jae
push
stos
icebp
inc
out
aaa
call
xor
push
push
mov
sub
mov
enter
and
stos
push
shrl
aaa
sbb
lret
mov
enter
shrl
std
mov
mov
sbbb
loop
or
inc
scas
fdivs
shrb
fisubl
fidivrs
mov
popa
pusha
push
in
cmp
fsts
mov
pop
lret
mov
xchg
bound
gs
rcll
clc
mov
push
pushf
sub
mov
sbb
les
in
fistps
push
mov
dec
iret
dec
sub
mov
es
pop
push
inc
mov
cmpsl
scas
fdivs
inc
cmp
fs
xchg
shrb
dec
out
pop
nop
nopl
add
ret
sub
mov
popf
dec
icebp
mov
mov
dec
fsubs
xchg
sub
or
and
lea
and
es
sarl
rcr
sahf
int3
mov
lcall
xor
or
sbbb
or
outsb
add
jp
rcll
mov
pop
mov
jge
dec
out
pop
jmp
out
leave
int3
push
fs
nop
rol
pop
dec
xchg
arpl
xchg
xor
jns
xchg
lea
outsl
adc
push
inc
xchg
jp
dec
xchg
sbb
mov
mov
xor
push
cmp
insl
mov
fldenv
sbb
xor
push
ds
jo
out
lahf
ja
stos
or
mov
into
movq
xchg
and
sahf
int3
insb
jae
ret
mov
gs
push
dec
jge
out
pop
or
adc
add
leave
in
push
cmc
add
jne
inc
stos
xor
in
jge
add
cmpsb
arpl
out
mov
bndldx
sub
sbb
lods
ror
dec
scas
pop
push
xor
out
pop
test
push
shll
popl
lea
fcmove
stc
mov
cli
ss
aas
pusha
mov
sbb
sub
push
mov
dec
cmc
mov
sub
mov
cmpsl
xor
adc
in
cmp
adc
mov
dec
jnp
xchg
jo
mov
jo
sub
and
push
jp
inc
sbb
cmp
sbb
test
pop
and
sub
mov
fwait
mov
pop
and
out
push
aad
mov
sbb
lock
iret
adc
jp
fs
or
or
jmp
mov
inc
pushf
xchg
lret
aaa
insl
push
pop
push
inc
mov
mov
dec
mov
lods
fldl
sub
out
or
popf
cmp
adc
cmp
subb
push
subl
jae
jl
adc
fildl
add
lret
movsb
fistpl
jg
std
lods
sbb
cmp
out
add
stc
fwait
jno
dec
push
in
or
ret
jmp
outsb
pop
stos
lea
fistl
gs
popa
push
setl
mov
in
add
xor
loope
lods
lahf
xchg
daa
sub
xchg
xor
pop
xor
or
and
int3
aad
arpl
int3
push
xor
cld
inc
repnz
fisubl
sbb
popf
or
cmp
sbb
push
in
add
test
jg
pop
sbb
rclb
rcrb
inc
mov
xor
inc
mov
cwtl
hlt
pusha
or
push
dec
insb
das
jno
sahf
adc
out
shlb
push
in
xchg
jo
bound
sbb
dec
cmp
test
push
pop
leave
ljmp
mov
mov
aaa
xchg
pop
shll
sbb
into
and
std
mov
push
sbb
sub
sahf
aad
fsubr
call
je
lret
in
fs
jge
lock
cwtl
mov
mov
test
pop
xor
pop
mov
mov
xchg
sub
dec
mov
jmp
dec
jne
mul
imul
cld
push
mov
into
mov
cmp
dec
jmp
mov
xor
adcl
sbb
pop
pcmpgtb
jl
sbb
test
adc
call
movsl
sub
cmp
subb
popf
mov
sub
mov
ljmp
ss
adc
jecxz
int3
xchg
mov
mov
jg
push
cmp
les
sub
add
mov
jg
xor
mov
and
pop
repz
mov
lret
out
sbb
dec
enter
lods
push
dec
jno
pop
sahf
bound
popa
xchg
mov
mov
mov
arpl
push
ja
ss
lret
gs
shlb
lods
mov
je
and
cmpsl
xchg
in
xor
cmc
std
or
push
inc
sbb
jecxz
into
add
mov
mov
outsl
test
scas
sbb
xor
add
sub
cli
pop
outsb
and
popf
fsubrp
outsl
jge
xchg
jb
mov
or
xchg
pushf
call
dec
and
cld
test
test
rorb
push
fwait
inc
or
scas
mov
dec
dec
adc
push
lods
cs
sub
adc
mov
popf
xlat
pop
lret
idivl
popf
mov
mov
mov
pushf
scas
jg
rcrb
pop
rclb
xorb
mov
fldl
outsb
xor
cmp
xchg
sbb
repnz
jle
push
aad
das
data16
inc
std
or
jge
jo
popa
jp
add
jmp
aaa
jecxz
xchg
mov
es
jb
push
xchg
xlat
imul
and
mov
or
mov
add
shl
lret
pushf
lahf
out
jmp
dec
es
mov
popa
jbe
dec
push
pop
dec
aam
sbb
xor
mov
mov
clc
mov
bound
test
xchg
movsb
xor
out
lock
aaa
ret
xchg
xor
lods
jae
ljmp
pop
out
ret
mov
cwtl
sub
rcll
jg
push
xor
and
bound
push
jl
stos
lds
out
ret
mov
imull
iret
loope
jb
mov
mov
cmp
fs
sti
sub
ss
cmp
dec
pop
aam
inc
fwait
addr16
xor
push
or
mov
std
scas
mov
jnp
out
xchg
cmp
fwait
mov
push
jp
or
pop
mov
xor
in
fldcw
mov
mov
testl
adc
les
cli
jg
or
scas
pmaxsw
mov
adc
subl
sub
insl
lcall
gs
xchg
out
jge
mov
frstor
rclb
mov
xchg
push
das
jb
enter
mov
mov
jmp
repnz
lret
int3
iret
mov
outsl
frstor
mov
stos
mov
xor
ja
adc
cmp
mov
dec
lock
inc
or
fistpll
push
movsl
lods
xor
and
add
roll
mov
sbb
cmp
imul
std
or
in
scas
movsb
pop
lds
or
cmp
xchg
aaa
cmp
push
cmp
rorl
push
pusha
addl
and
sbb
shlb
jecxz
ficompl
or
jno
sub
repz
xchg
mov
dec
inc
lahf
imul
aad
ret
aam
pop
repz
inc
pop
xchg
aaa
mov
lahf
ret
outsl
sbb
movl
lods
testb
jb
or
lret
jb
test
dec
jg
lret
cmp
dec
pop
movd
mov
xchg
mov
fucomp
out
dec
push
fmull
pop
xchg
ret
subl
or
sbb
sub
insb
inc
test
shlb
and
cmp
shlb
bound
push
add
sbb
scas
movsl
and
movsl
dec
lret
jnp
int
jo
cltd
jns
adc
popa
xchg
pop
aaa
loope
mov
xchg
mov
mov
frstor
cmc
push
mov
imul
pusha
lret
pop
bswap
push
pavgw
test
subl
or
clc
adc
imul
rcr
xlat
pop
enter
std
mov
pop
push
jmp
add
xchg
add
ret
test
cltd
stos
stos
dec
pop
mov
cmp
jge
cmp
push
imul
repz
mov
clc
inc
test
ja
add
push
popa
sub
into
push
js
push
loope
dec
ja
dec
mov
xchg
call
int
negb
xchg
adc
sarb
lock
mov
rcrb
mov
movsl
fwait
jo
mov
cli
push
in
push
nop
sbb
stc
test
sahf
xchg
js
les
lret
sbb
pop
imull
add
xchg
sbb
imulb
inc
ret
and
push
adc
stos
jl
pusha
push
mov
pop
mov
sbb
pushf
test
rorl
sti
imul
cmpb
out
std
mov
mov
dec
shll
push
gs
add
mov
jno
repz
sbb
mov
into
fbld
pop
lret
jge
je
rclb
ljmp
je
cmpsb
jb
jne
and
and
ret
or
iret
jae
les
fsubs
shl
inc
xor
ret
insl
sbb
mov
inc
xchg
add
test
mov
mov
clc
jecxz
dec
xlat
mov
and
jbe
or
ret
sbb
pop
movsl
js
out
add
and
ret
orb
fiadds
fidivrs
lahf
lods
dec
in
sbb
mov
adc
mov
jns
xchg
fdivr
fisttpl
out
stc
xchg
shrl
jge
adc
sbb
iret
xchg
imul
or
test
add
and
inc
pop
push
jbe
push
push
aam
xor
sub
call
popf
cs
adc
sbb
aad
rcll
xchg
ljmp
dec
bound
xor
mov
mov
cs
imul
es
xchg
das
push
mov
test
push
out
pop
repz
inc
adc
shlb
incl
mov
jne
sti
fldt
aad
test
insb
into
std
mov
nop
gs
mov
or
lock
dec
outsb
out
shlb
lds
adc
rolb
sbb
testl
ret
test
sbb
aas
add
out
adc
cmpsl
js
leave
add
mov
push
cmp
sbb
mov
cmp
add
push
or
loope
scas
cmp
xchg
inc
mov
test
mov
sub
jle
add
mov
adc
mov
mov
jge
cmc
lret
idiv
mov
stc
mov
dec
popf
add
sub
add
adc
cmpsb
aas
inc
xchg
lret
sbb
imul
jo
stos
dec
jo
in
jae
test
mov
sub
mov
fucom
dec
icebp
ficomps
sbb
jne
or
xchg
xchg
hlt
iret
sbb
in
movsb
lods
sbb
js
add
arpl
pop
pop
mov
push
fcoml
push
daa
out
pop
dec
out
mov
mov
leave
push
fimull
mov
pop
cmp
scas
inc
mov
xor
fnstsw
lret
xchg
add
jb
out
xchg
fidivrl
add
or
push
test
dec
push
js
outsl
js
je
rcr
sbb
pop
stc
bound
mov
pop
mov
mov
pushf
jno
imul
xchg
sbbl
ss
push
xchg
xor
lods
mov
sub
ret
in
xchg
cld
sub
jo
jge
test
sbb
cmp
int3
inc
sbb
mov
adc
sbb
cli
cmpsb
dec
and
ss
add
test
sbb
cmp
pop
dec
dec
pusha
mov
fsts
inc
sub
push
icebp
dec
outsl
dec
sbb
insb
shrl
and
add
xor
push
aad
jg
imul
insl
das
lock
pop
icebp
lret
push
xor
in
dec
dec
push
hlt
mov
sbb
inc
dec
and
push
inc
push
mov
lcall
mov
stos
lcall
fcomps
push
int3
pop
push
int
or
or
daa
inc
cmpsl
negb
cmp
out
mov
xor
pop
push
mov
je
rclb
in
xchg
negb
xchg
jns
lods
mov
sub
and
inc
push
mov
out
fwait
imul
jnp
cwtl
xor
daa
sbb
pop
pop
dec
adc
jmp
inc
faddl
adc
sarb
push
insl
int3
std
fs
out
imul
popa
push
jmp
and
movsb
adc
push
and
dec
fisttps
out
mov
jecxz
imul
scas
cltd
nop
cmp
jp
and
push
loopne
push
lock
aaa
ljmp
lods
pushf
xchg
jns
in
inc
sub
dec
xchg
mov
test
mov
pop
jmp
rcrb
pop
xchg
fdivrl
cld
int
mov
jmp
xchg
cmp
push
xor
lock
jno
stos
jns
fwait
stos
scas
bt
lahf
sti
adc
loope
repz
jne
scas
push
daa
mov
in
rolb
cmp
adc
mov
cmp
enter
fistpl
xor
sbb
mov
ret
fsin
aad
push
add
jnp
or
add
fildll
sbb
pusha
loop
add
cwtl
dec
inc
test
mov
inc
push
pop
cmc
dec
rorb
subl
cmc
mov
inc
scas
sub
lea
mov
cltd
dec
xor
sub
push
inc
dec
faddl
repz
inc
mov
decl
cmp
sub
lret
cmpsb
sti
loopne
adc
dec
xchg
cwtl
adc
sub
xchg
pop
lock
scas
xor
sbb
lret
sub
cwtl
mov
data16
ss
stc
cmp
ret
adc
jbe
jge
imul
stos
mov
shlb
sbb
pop
sbb
fwait
stos
pushf
lcall
mov
mov
jns
int3
mov
cmp
repz
cmp
sub
out
mov
std
xchg
lock
iret
dec
sahf
add
pop
push
sar
push
push
aaa
pusha
test
mov
movsb
push
fwait
fwait
push
bound
jecxz
je
or
hlt
dec
jns
mov
add
mov
aad
push
pop
mov
pop
imul
dec
jmp
pushf
jp
std
lret
push
pop
int3
or
cmp
xor
xchg
in
test
dec
roll
idivl
fnsave
sub
cltd
ja
mov
les
sub
or
je
ret
subb
out
adc
mov
xchg
mov
cmp
pop
movb
sbb
popl
pop
jbe
fsubl
out
loope
inc
pop
inc
ds
insl
test
push
insb
fwait
inc
into
pop
rolb
in
mov
sub
dec
xor
sbb
subb
sarb
popa
inc
idivl
add
pusha
lods
popa
push
or
inc
sbb
incl
push
mov
or
orb
sub
mov
inc
hlt
je
aaa
cmpsb
push
pushf
mov
push
into
shrb
inc
jge
repz
inc
enter
jns
aad
xor
lret
repnz
push
and
lcall
adc
jle
fcmovnbe
xchg
xchg
lods
cmp
cmpsl
push
scas
mov
rcl
repz
loopne
lods
movsl
xchg
sub
gs
cmp
dec
add
xchg
cmp
fs
sarb
cmp
jmp
cmp
testl
stos
mov
cmp
jp
aad
dec
jecxz
jge
and
stos
and
pop
pop
push
mov
pop
std
inc
mov
fidivrl
into
pushf
sub
inc
adc
lds
fwait
or
add
push
repnz
cmp
sub
das
pop
addr16
sbb
mov
jl
jnp
data16
xchg
mov
ljmp
push
jne
or
loop
repnz
mov
cmp
es
inc
sbb
and
js
push
xchg
push
and
ja
lret
in
push
dec
lods
cmpsb
dec
add
movups
lea
cmp
ja
push
jmp
aaa
lcall
push
fldt
test
es
repnz
mov
sti
mov
orl
or
mov
sub
fadd
jbe
sar
inc
shr
sti
dec
lea
lcall
xchg
aam
shl
dec
lock
push
iret
push
je
push
clc
jmp
adc
in
ret
push
push
sbb
in
aaa
push
shlb
mov
push
popf
inc
push
int
jmp
sbb
fwait
jb
mov
ljmp
enter
pop
and
std
mov
inc
pop
outsl
cwtl
aad
adc
cmp
add
or
cmpsl
and
sbb
daa
xchg
scas
in
or
movsb
and
adc
sarl
dec
lock
shlb
pushf
pop
pop
xchg
test
mov
sub
jmp
push
mov
lret
sahf
mov
jge
subb
mov
addr16
cmp
cmp
mov
jmp
lea
mov
mov
xor
cld
push
rol
fmull
dec
adc
cmp
push
repnz
fidivl
ss
pop
sbb
jl
adc
xchg
lods
icebp
jns
out
xchg
sub
pop
add
std
ljmp
cmp
pusha
and
ja
sbb
addr16
inc
and
loope
cmpsb
mov
jns
mov
je
jb
lret
cmp
shll
xor
or
jecxz
lods
mov
inc
push
arpl
addr16
je
aas
ret
sti
and
mov
mov
mov
imul
push
adc
fildll
push
xchg
pop
cmp
ds
mov
sbb
jbe
fwait
out
test
nop
mov
scas
ss
movsl
mov
adc
xchg
inc
dec
push
test
insb
lcall
das
sbb
les
inc
out
in
push
sti
inc
enter
pop
lds
sbb
loop
sbb
inc
jecxz
shlb
adc
jmp
adc
fistps
js
lcall
jp
imul
xchg
add
aas
cmp
test
add
mov
dec
push
cli
rclb
sub
cs
add
mov
aam
or
loopne
mov
mov
mov
jmp
sahf
push
add
pop
push
mov
data16
cmc
add
mov
leave
popl
sbb
adc
ja
fisttpl
pop
mov
inc
and
mov
xchg
rorl
fwait
pop
das
ss
sbb
xchg
pop
lret
je
pop
or
adc
xchg
bnd
jo
sub
iret
cmp
mov
or
out
ja
push
inc
es
mov
mov
inc
lods
pop
das
mov
dec
lret
push
fcmovnu
ss
clc
test
or
mov
adc
stc
das
pop
lea
in
push
cmp
adc
adc
bound
add
call
loop
and
mov
cld
xor
test
repz
popf
mov
lds
fidivl
pop
mov
pop
mov
push
addb
jno
stc
sub
xlat
xchg
pop
inc
mov
fsubrs
aam
cmpsl
xchg
pop
int
imulb
sub
cmp
dec
or
rcrl
mov
cs
shll
push
sub
out
sub
out
fistps
cmp
fisttpl
arpl
pop
pushf
movsl
mov
xchg
mov
sahf
out
sahf
or
daa
mov
add
je
and
out
orb
mov
sbb
inc
sbb
cmp
test
pop
cmp
xchg
inc
les
push
xor
inc
mov
add
push
xchg
aas
addr16
xchg
aaa
loope
fwait
xor
std
and
roll
add
loope,pt
and
sti
test
dec
push
out
sub
fldcw
out
lret
popa
jl
movsb
aas
sub
faddl
xchg
mov
ja
push
jo
lret
push
sub
xchg
pusha
mov
sub
mov
mov
mov
shlb
daa
xchg
jae
shll
movsb
mov
cwtl
sub
jno
je
push
cmpsb
mov
int
pop
iret
insl
cli
mov
notl
xchg
or
or
jmp
cltd
arpl
push
push
adc
loop
dec
movsl
imul
dec
sahf
sbb
sub
imul
xchg
mov
shrb
adc
out
xor
mov
push
cld
pop
out
jg
xchg
inc
notb
popa
aaa
xlat
inc
fadds
insb
aaa
popa
adc
inc
mov
sub
push
sbb
shll
rorl
popf
cmpsl
adc
ds
lock
mov
xchg
add
or
dec
add
jne,pn
mov
fwait
push
imul
sti
nop
jne
arpl
int3
jbe
addl
cld
scas
test
jg
cmp
repz
push
adc
jmp
pop
inc
fs
test
sub
pop
daa
mov
sub
inc
adc
dec
mov
inc
repnz
imul
int3
ja
jle
jge
insb
jno
loopne
push
aad
jg
ss
inc
dec
loopne
sub
mov
imul
add
fstps
bound
inc
sahf
sbb
int
scas
scas
jle
mov
out
jge
cmp
shlb
push
divb
in
push
pop
or
mov
sti
fwait
fs
xor
pop
arpl
inc
in
cmpsb
and
adc
icebp
out
mov
jg,pt
xchg
jmp
out
decb
adc
fwait
mov
cmp
lods
xchg
insl
mov
lods
imul
jns
or
push
mov
adc
or
pop
adc
mov
mov
cmp
or
mov
adc
cmc
aas
shll
cld
cwtl
call
stc
cmp
rclb
pop
pop
inc
jno
cmpsl
aad
pop
fs
mov
xchg
ret
jge
stc
mov
leave
jle
push
clc
pusha
ja
pop
stos
das
cmp
jmp
insl
fwait
push
inc
sbb
mov
ror
mov
lds
ficoml
cmp
pop
mov
mov
cltd
dec
mov
add
aad
inc
loopne
fisubrl
fs
pop
and
jbe
shll
gs
addr16
in
faddl
and
fucom
clc
xor
sub
rcll
lods
ss
mov
loopne
jne
in
inc
jl
jno
fnstsw
mov
mov
push
lods
testb
inc
mov
jbe
sub
push
jecxz
lea
mov
mov
orl
xor
mov
out
jmp
nop
mov
popa
push
add
inc
in
adc
lahf
jge
sbb
pop
jno
push
fs
int3
pusha
sub
addl
ja
aad
aad
add
fcmovu
pop
xor
jge
push
pop
mov
push
pop
dec
xchg
lahf
stos
popa
pop
das
mov
add
sbb
sub
jmp
push
daa
xor
and
pop
adc
xchg
mov
cmp
mov
out
xchg
cmpsl
stos
sar
mov
out
iret
fwait
pop
kmovb
aaa
outsl
leave
and
mov
pop
jno
jb
addr16
xor
test
imul
pop
xchg
add
jmp
movsl
jo
shll
or
add
jns
and
jo
inc
into
mov
pop
adc
xchg
and
cmp
add
inc
imul
notb
nop
outsb
pushf
shrl
shll
stos
sub
int
pop
and
fs
fcmovbe
gs
ljmp
pop
jo
pusha
cwtl
cltd
inc
push
cmpsl
jo
cli
les
into
nop
mov
or
fwait
lods
mov
cmp
mov
ret
jns
cmp
mov
inc
pop
loope
adc
push
cmp
inc
mov
es
or
jg
cmp
stos
mov
or
addr16
leave
gs
cmp
or
push
sbbb
adc
lcall
decb
add
pop
or
inc
in
out
das
xchg
pop
ljmp
jb
cmp
stc
sub
aad
jbe
arpl
enter
mov
mov
jne
push
xchg
adc
cmpsl
cmp
adc
xor
shlb
mov
mov
cmp
arpl
mov
sbb
iret
xlat
cmp
cmp
pop
pop
mov
repnz
adc
sti
add
popa
pushf
lret
jp
outsl
or
jg
ja
ja
mov
andl
shl
or
icebp
fists
lret
imul
out
mov
mov
add
jns
cmpl
mov
setae
btcl
sub
fdivl
add
popa
outsl
aad
xlat
mov
xchg
aas
pop
shrb
sub
xor
mov
ficomps
mov
xor
adc
fists
leave
in
dec
jnp
mov
xorb
jl
dec
dec
lret
ds
sub
insl
cs
add
xlat
cmp
lock
test
rcl
lods
sub
pop
loopne
jle
ljmp
faddl
mov
xor
fidivl
hlt
xchg
jo
das
adc
sbb
fisttpll
test
cmp
nop
and
xchg
lahf
arpl
xchg
test
cli
mov
out
mov
push
cmpsl
inc
fsubl
xchg
pop
jns
sub
loop
inc
pushf
mov
pusha
ljmp
fs
jns
mov
jecxz
loop
fidivrl
jne
mov
xchg
xor
sub
icebp
cld
mov
mov
imul
inc
cmp
popf
cmp
cmp
cmp
xchg
mov
stc
popf
push
xorb
push
pop
and
clc
enter
mov
rcrl
jne
insb
imul
in
xchg
mov
addr16
dec
cs
and
test
xchg
loope
mov
mov
dec
test
push
test
popa
pop
bound
stc
mov
orb
inc
ljmp
enter
mov
push
inc
mov
xor
push
push
cmp
insb
ret
and
faddl
or
jb
push
arpl
jbe
inc
cmp
lock
fcomps
jne
mov
mov
lock
movsl
sbb
pop
in
xchg
jnp
mov
das
mov
pop
mov
or
pusha
mov
lret
pusha
sahf
fisttps
cmp
out
cld
jle
shll
stos
add
fsts
lcall
xlat
leave
bound
cmp
shlb
xchg
pop
lds
sub
pop
out
fildl
pop
pusha
jne
jo
xchg
or
jae
sarb
sti
jnp
cmp
jl
leave
hlt
cli
ljmp
mov
xchg
aas
bound
jbe
xor
cld
push
dec
popa
les
jp
pop
lods
jnp
sahf
test
add
mov
leave
mov
pop
insb
das
and
push
sti
push
pop
addr16
lret
pop
mov
ret
cmpsb
ds
xor
out
cmpb
sahf
xchg
mov
pop
jo
and
sti
or
mov
sti
in
xchg
clc
sbb
lods
in
loop
xor
jmp
pop
xor
int3
loop
pop
mov
xchg
mov
rol
in
jle
icebp
shr
clc
loop
sahf
aad
jp
add
stos
out
cmpsl
orb
jl
cli
or
cmpsl
loope
test
mov
pop
push
xchg
xchg
clc
jp
in
mov
insl
in
adc
es
sub
adc
lea
clc
rcrb
push
inc
or
cmp
pop
push
mov
hlt
or
xchg
add
sub
or
shl
add
imul
stos
clc
push
xlat
arpl
cltd
lea
jns
cmp
mov
popf
jo
pop
adc
lahf
pop
and
out
or
push
test
pop
cmp
push
movsb
sub
inc
cmpsl
pop
sbb
add
test
xchg
mov
arpl
dec
out
xor
addb
mov
icebp
icebp
adc
sbb
push
imul
dec
mov
js
stos
xor
push
jb
dec
cmc
and
add
jb
adc
push
rclb
shl
mov
sahf
subb
shlb
fiaddl
xchg
jno
inc
dec
jnp
addb
or
xchg
or
add
fwait
push
test
lock
add
or
mov
repz
idivb
sti
push
rcrb
mov
loope
rdtsc
repnz
push
adc
push
add
mov
mov
nop
dec
jl
aaa
aam
push
or
dec
sub
insb
je
unpcklps
mov
dec
mov
push
sahf
xor
mov
out
js
push
jle
lods
jns
int3
pop
add
cmpsb
addr16
mov
or
mov
jbe
xor
lods
or
loopne
push
adc
outsb
push
data16
cmp
dec
imul
shrl
push
clc
jns
or
jmp
mov
negl
cmp
ja
stos
std
inc
pop
pusha
cmp
sub
cwtl
dec
sbb
add
pusha
cmpsl
mov
test
jge
push
cltd
divl
stos
lret
aaa
out
sbb
add
mov
vmread
cmp
mov
inc
stos
int
mov
inc
adc
sub
imul
jecxz
mov
xchg
cmpsl
aam
rcll
cltd
push
fisubrs
sbbl
cmp
adc
stos
jge
push
pop
ficoms
scas
lods
ja
xchg
subl
out
idivb
scas
test
push
or
mov
imul
or
add
fbstp
inc
jno
sub
inc
js
add
js
icebp
mov
rolb
rorb
sahf
mov
imul
mov
data16
and
cwtl
push
inc
push
mov
and
sub
ret
cmp
fcoml
jle
mov
mov
add
or
testl
mov
mov
orb
bound
orb
movl
push
cld
arpl
adc
sti
xchg
sub
jae
int3
mov
imul
in
sub
pop
dec
pop
push
jnp
ficomps
ret
leave
icebp
jae
repnz
out
jp
ss
inc
sub
das
inc
mov
and
out
scas
push
xchg
xlat
lea
push
imul
icebp
mov
push
ss
push
push
test
cmpsb
sbb
fsubp
sub
mov
and
pop
mov
add
ja
cmp
cs
imul
adc
sub
pop
es
push
popa
call
push
xor
jnp
test
cs
lahf
jb
or
inc
fmuls
xor
mov
popa
ljmp
jl
jne
data16
dec
cmp
sbb
enter
repnz
in
or
inc
dec
push
sub
xlat
sub
imul
ja
cmpsb
pop
dec
aad
mov
lcall
popa
adc
fwait
dec
add
cli
push
add
scas
mov
push
jle
rcrl
outsb
scas
sbb
repnz
fistps
arpl
inc
mov
mov
out
data16
test
int3
or
dec
jns
lods
adc
gs
out
cltd
mov
stc
mov
sbb
mov
lea
ljmp
aas
out
ljmp
push
inc
cmpsb
movsb
fadds
incb
cwtl
push
loope
inc
fwait
scas
movsl
jecxz
sbb
leave
fstpl
fildl
loop
popa
insl
in
fimull
insl
inc
cmpsl
inc
int
mov
mov
loope
sbb
in
inc
pop
xchg
or
es
pop
inc
test
mov
scas
mov
mov
lret
push
gs
test
inc
mov
mov
add
sti
push
filds
enter
pushf
out
push
je
jmp
xchg
pop
js
decl
popa
sub
loopne
push
outsb
or
in
xor
inc
push
pop
les
aaa
stc
aam
mov
in
jmp
notl
js
inc
dec
mov
xlat
push
sub
cld
push
popa
fmull
mov
pushl
sti
cld
jecxz
loope
jno
mov
cmpb
test
dec
iret
inc
adc
imul
mov
test
cmp
outsl
xchg
pop
sub
ret
and
out
orb
sahf
push
test
lea
repz
cmp
xor
mov
in
call
out
xor
fwait
xchg
cwtl
sti
test
dec
icebp
mov
sub
enter
insb
das
hlt
lahf
push
mov
jnp
ret
and
sbb
icebp
insb
lcall
push
mov
push
xchg
scas
xchg
dec
lret
and
add
aam
inc
jge
in
pop
into
lea
cwtl
in
ss
jl
adc
sbb
mov
lahf
addl
sahf
xchg
cmp
cmp
xor
pushf
mov
pop
cltd
add
int
jle
mov
pop
cmp
xchg
push
xor
pop
push
cli
or
int
lock
lret
xor
mov
adc
cli
sub
xorb
jno
jne
jns
cmp
mov
xchg
jbe
sub
popa
push
push
int
loopne
std
xor
and
jbe
in
sub
sar
mov
jg
sub
in
lods
xchg
lods
jp
imul
and
movsb
pop
cs
mov
push
mov
adc
push
or
inc
repnz
lcall
pop
inc
mov
push
lods
xlat
sub
mov
sub
orb
pop
mov
jmp
ret
add
imul
outsl
ret
xor
jb
jno
frstor
add
xor
xor
xor
mov
or
xchg
daa
pop
ret
das
cld
cmpsb
je
mov
xchg
adc
cmp
pop
les
js
jle
and
inc
add
and
lret
and
inc
pop
or
mov
jo
or
mov
test
dec
xchg
int
negb
scas
adc
ja
dec
pop
fs
jmp
icebp
cli
push
sbb
ret
sbb
ja
add
loop
movsl
mov
mov
add
mov
ljmp
aam
or
pop
mov
adc
out
faddp
or
movsb
dec
dec
xor
aam
push
repz
icebp
pop
sbb
outsl
imul
repz
dec
lods
and
or
mov
mov
and
aaa
andb
sbb
and
jnp
adc
add
pop
ror
and
test
mov
aad
je
lret
or
dec
jl
cmp
lret
adc
pop
enter
pop
in
fstpl
in
repz
cmp
pop
bound
adc
test
movsl
xchg
fld
xor
popa
xchg
loop
adc
test
cmp
fstpl
outsb
push
sub
insb
mov
add
sub
jo
inc
pop
leave
dec
and
and
aaa
mov
xor
mov
sahf
int
mov
cmpxchg
push
aas
push
ret
cmpsl
insl
xchg
sub
ds
push
mov
push
in
xor
lock
mov
inc
and
sbb
mov
and
ja
pop
icebp
lods
loope
dec
and
arpl
flds
lds
mov
sti
fsubp
push
repz
jns
jb
adc
xchg
lcall
out
scas
cmp
cmpsb
and
dec
inc
pop
test
jp
add
xchg
cwtl
mov
adc
scas
jbe
mov
pop
fnsave
adc
in
cmp
nop
push
sbb
sub
test
fsubl
jmp
outsb
inc
push
std
cmpb
xchg
pop
int3
adc
jle
fnsave
movsl
outsb
fwait
sbb
and
pop
test
insb
fnstenv
xchg
ds
stos
in
jmp
pop
push
sbb
leave
scas
fbstp
mov
test
sub
js
into
inc
js
rcl
hlt
clc
negb
xor
data16
push
sub
push
sti
mov
inc
int
sti
out
xchg
cmpsl
and
imul
arpl
cli
mov
in
test
fcoml
cs
pushl
test
lcall
daa
repz
test
push
shll
inc
enter
inc
hlt
fcoml
cmp
push
xchg
mov
jne
lret
daa
mov
jg
outsl
loop
test
cmp
xor
inc
mov
push
mov
mov
dec
push
sbb
js
or
fadds
movsb
movsl
push
repnz
ds
sbb
inc
arpl
ret
adc
jbe
inc
xchg
fnstsw
test
sub
mov
dec
lahf
and
popa
jnp
lods
and
sahf
xchg
repz
push
and
cld
xor
std
shlb
push
mov
shll
fisttpll
mov
xchg
movsb
sahf
nop
inc
pop
enter
push
or
jmp
cmp
movsb
icebp
rcrb
cmp
dec
nop
add
cmpsl
mov
mov
js
jae
mov
sub
jbe
cltd
sbb
ss
sbb
sbb
jno
daa
sbb
jp
pop
fnstsw
aaa
xchg
pop
aas
push
xor
add
div
adc
sbb
stc
imul
and
les
int
sub
cmp
iret
addr16
mov
inc
or
pop
xor
push
jg
xor
pop
lock
add
or
inc
jns
dec
stos
hlt
xchg
test
pop
xor
negb
dec
stos
cld
xor
sbb
pushf
xor
pop
aas
adc
jbe
push
cmp
iret
xchg
leave
in
mov
dec
adc
movlps
mov
arpl
or
daa
lock
xchg
inc
pusha
or
rcrl
fdiv
xor
push
mov
sarl
ret
cmpsb
lret
or
pop
inc
xchg
leave
push
xor
cmp
xchg
cmp
popa
loope
pop
adc
int
mov
adc
jne
mov
sub
pop
iret
sub
push
ja
mov
nop
sti
mov
inc
push
xor
xor
roll
jo
xor
mov
pusha
ljmp
dec
js
push
arpl
xchg
or
scas
mov
xchg
mov
and
lock
sub
mov
popf
ja
shl
jb
mov
in
adc
rcr
sub
pop
xlat
ret
gs
jmp
pop
fs
out
movsl
and
cmp
std
sahf
sbb
jae
cmp
push
daa
mov
arpl
sub
adcl
jo
xchg
cmpl
add
xor
out
aad
adc
pusha
rol
cmp
movsb
pop
push
inc
rolb
or
add
xor
repnz
xchg
cmpsl
movsl
fstl
jo
xchg
dec
dec
dec
stc
xorb
loope
and
xchg
inc
test
cmp
imul
or
xchg
mov
cld
or
test
scas
in
and
sub
repz
mov
aam
cltd
loopne
sbb
jp
fdivl
cmpsb
aaa
ret
ffree
mov
rorl
ljmp
jno
xor
fistps
data16
dec
mov
sub
cmpl
das
repnz
xor
jno
loopne
push
inc
aas
aas
xchg
inc
jne
cmp
pop
xchg
inc
mov
in
mov
ss
lds
pop
stos
fstps
inc
xchg
pop
xor
cmc
mov
dec
cmp
inc
fistl
iret
xor
sub
jp
das
stos
addb
adc
sub
movsb
mov
mov
stc
mov
cmp
nopl
lret
stos
movsb
and
sub
xchg
scas
es
jge,pn
xchg
pop
andb
test
mov
xor
inc
jns
pusha
and
lock
jb
mov
bound
and
dec
iret
push
and
stos
cltd
mov
adc
repnz
mov
fiadds
inc
popf
adc
add
mov
aad
mov
outsl
push
sarb
call
xchg
aad
sub
and
cs
push
lock
push
popa
in
shl
add
cmp
add
in
mov
mov
pop
ret
pop
insb
push
ficoms
int3
pop
or
xor
shlb
arpl
sbb
jge
push
and
das
pushl
lea
jle
or
and
mov
mov
cli
adc
push
pop
rcll
push
add
xlat
mov
push
leave
in
cmpl
mov
leave
push
cltd
cmp
dec
pusha
or
pop
and
xor
sub
sar
add
mov
cli
dec
xor
out
or
sub
out
xchg
sbb
mov
stos
adc
lods
test
int
shlb
es
fs
in
sbb
or
dec
jbe
arpl
jo
cmpsl
push
mov
es
cmc
lods
add
int
insl
cli
mov
xchg
sub
lods
cwtl
aaa
push
sti
daa
sti
sti
ljmp
mov
addr16
or
pop
mov
xchg
imul
insb
inc
loop
jle
sbb
fs
sahf
popf
mov
xchg
mov
subb
sti
jae
adc
cmp
popf
dec
adc
insb
scas
dec
fcompl
cltd
mov
or
pop
push
xchg
pop
cmp
sub
push
jae
mov
xor
adc
in
sbb
or
lcall
repz
jle
xchg
inc
pop
repz
mov
sbbl
mov
mov
push
xor
imul
in
push
bswap
pop
sahf
into
sbb
pop
add
push
add
sti
pushl
outsb
lock
in
daa
inc
jle
jg
cs
lret
jb
test
fwait
outsl
fisubrs
mov
push
push
mov
mov
aaa
ds
pop
arpl
insb
mov
cmp
adc
push
insb
jmp
sub
jne
xchg
cmp
jns
and
add
mov
xor
lods
call
ret
gs
add
mov
pop
mov
push
ret
and
je
mov
dec
test
xor
adc
mov
xchg
push
fistps
push
jecxz
shll
shl
pop
pop
xchg
mov
jle
mov
or
enter
aaa
or
out
lods
cli
xlat
outsb
dec
icebp
or
inc
push
les
sti
popa
movsb
sbb
adc
sub
and
lea
aaa
cmc
add
dec
add
push
push
sahf
scas
add
sub
sbb
mov
out
adc
cltd
int3
inc
les
andl
push
in
push
add
mov
mov
scas
push
mov
sub
incb
xchg
add
movsl
lock
xchg
pop
pop
mov
add
mov
jns
pusha
pop
cs
or
arpl
add
arpl
xlat
mov
mov
out
out
ds
in
dec
cmpsb
add
add
scas
cmp
pop
pop
daa
loope
lret
cld
dec
jne
mov
sarl
pusha
xchg
in
inc
stos
sub
jne
dec
jge
adc
int3
mov
mov
mov
pop
dec
daa
xor
mov
cmpsl
pushl
mov
dec
cmpsl
jmp
jns
loope
cmpsb
imul
cmc
mov
insl
fstpt
push
lahf
popf
add
out
mov
cmp
xchg
fldl
adc
jbe
inc
test
jmp
xchg
das
inc
out
lds
ret
arpl
mov
movsb
mov
inc
push
lret
jmp
or
and
cmp
int3
push
leave
and
mov
fdivrl
cmc
loope
cli
stos
je
pop
cli
and
jp
cmp
push
fimull
aam
int3
loop
inc
repnz
lods
je
daa
cmpsl
add
mov
into
mov
mov
sbb
mov
cmp
mov
or
adc
adc
cmpsb
push
dec
push
mov
sbb
ss
sbb
inc
mov
mov
enter
mov
sub
cmp
lcall
pop
mov
and
fstps
pusha
lret
insl
mov
sbb
arpl
sub
or
sbb
cmp
push
cs
aam
repnz
gs
pop
push
pop
jnp
cli
push
cmpsb
cwtl
outsl
inc
pop
inc
jne
lods
call
int3
mov
fiaddl
shrd
xor
mov
mov
ljmp
outsl
je
jb
iret
sub
cmpsl
mov
cmp
std
pop
aam
push
shll
inc
fdivs
cmp
icebp
or
into
adc
mov
xchg
mov
aam
inc
sahf
stos
push
cld
sub
sbb
push
and
out
mov
fs
aam
mov
pop
popf
cs
leave
enter
cmp
add
test
fs
insb
stos
aas
fiadds
adcl
fcmovbe
int3
repz
test
sbb
cmp
dec
or
mov
sub
ret
movsl
cmp
xchg
inc
pop
xlat
call
rcll
jmp
orb
dec
mov
dec
push
add
rclb
jae
imul
add
clc
mov
fdivl
cmp
ljmp
push
mov
inc
daa
add
push
sbb
imul
jae
test
rcrb
mov
cmp
sbb
push
cld
call
outsl
pop
sti
push
test
push
pop
ds
mov
sbb
dec
fwait
iret
imul
push
pusha
pop
jl
aas
out
cs
push
int3
lret
dec
inc
mov
leave
push
xchg
xorb
pop
repnz
icebp
pop
xor
lea
push
xor
hlt
xor
stc
nop
adc
adc
sub
jecxz
fmull
or
lea
add
xor
fldenv
sarl
aaa
sbb
adc
es
insl
xor
pusha
loopnew
xchg
lcall
cmc
shlb
and
test
dec
mov
cltd
adc
mov
imul
fstpt
sub
dec
mulb
add
cs
cld
scas
popf
lods
add
outsl
xchg
idivl
movsl
sbb
pushf
jo
popf
xor
dec
pop
daa
icebp
arpl
sub
lea
jecxz
add
adc
shlb
outsl
lret
movsb
ds
sbb
sti
mov
push
repnz
pop
adc
jle
in
data16
popa
int
sbb
outsl
add
into
or
sti
mov
or
push
pushf
jb
ljmp
mov
cmpsl
xchg
jnp
call
add
lahf
cmpsb
xchg
sub
mov
int3
and
lock
push
pop
or
loopne
enter
inc
fadds
mov
cli
add
mov
mov
pop
out
and
xchg
push
fdivr
orb
xchg
pop
mov
outsb
pop
adc
cmp
mov
ja
xor
into
shrl
jg
lock
add
sbb
fists
cmp
push
fadd
movsl
es
mov
sti
fstps
push
cmpsl
xchg
xchg
arpl
mov
aas
decl
cmc
mov
cmp
fwait
sub
dec
cmp
pushf
stos
xor
sbb
divb
aad
mov
mov
int
sbb
int
nop
and
in
lock
ret
scas
test
adc
pop
or
pusha
out
lods
cmp
mov
cld
fimuls
lea
ljmp
out
sub
arpl
mov
scas
orb
cmp
jmp
jo
sub
outsl
dec
mull
js
imul
sbb
bound
lods
inc
push
sbb
mov
sub
push
out
mov
lods
push
or
outsb
outsl
ss
adc
add
inc
lret
inc
addr16
mov
mov
push
insb
jns
pop
and
mov
pop
add
mov
out
dec
lock
dec
jmp
mov
and
cmp
mov
mov
cmc
push
pop
imul
ja
pop
and
stos
in
mov
dec
ret
or
sbb
fisubl
and
mov
into
cmpl
outsl
lods
test
xchg
push
mov
inc
dec
aad
add
xchg
stos
in
scas
mov
mov
jmp
jne
fiadds
sub
fsub
mov
out
ret
lret
lds
xchg
imul
mov
sbb
mov
jb
fsubs
xchg
xchg
or
imul
lcall
push
jmp
shll
push
and
xchg
sub
adc
call
add
ror
out
test
enter
or
or
dec
add
fidivs
fldcw
mov
cmp
daa
dec
mov
xor
cli
xor
cld
les
jae
push
push
dec
sbb
lock
and
ljmp
dec
mov
mov
xor
push
xor
stc
pop
xchg
iret
mov
push
or
add
aad
mov
jecxz
fstps
mov
xor
xchg
jge
xor
das
jecxz
dec
cmpsb
fdivl
and
inc
insb
das
xchg
or
leave
and
hlt
je
in
jp
dec
stc
test
mov
add
push
adc
call
das
ret
pop
stc
xor
push
iret
mov
mov
cld
ljmp
leave
jb
inc
int3
jno
in
arpl
cmpsb
sub
dec
push
lcall
cmp
faddl
outsl
stc
push
imulb
add
adc
in
aad
shlb
rorl
pop
or
cwtl
out
cli
lret
in
outsb
cmpsb
lds
cmp
into
dec
inc
mov
jb
mov
xlat
mov
nop
popf
ret
int
jecxz
inc
sub
icebp
std
push
sbb
sub
fs
mov
and
mov
loope
jns
sti
in
out
daa
imul
jae
mov
pop
dec
cs
shll
and
xchg
into
mov
faddl
cwtl
mov
mov
adc
jb
cli
jns
jno
push
dec
daa
sbb
stos
mov
mov
mov
mov
loop
mov
sbb
loopne
addr16
adc
xchg
bound
sbb
pushf
imul
xchg
lcall
ret
cmc
add
popf
push
jmp
cmpsl
adc
inc
lods
scas
popf
mov
xor
sbb
inc
pop
xor
outsb
and
pop
add
js
popa
cmp
xlat
cwtl
es
sbbb
aaa
and
xchg
push
adc
sbb
mov
and
push
lods
movl
aaa
jne
int3
lret
stos
stos
sbb
push
insb
stos
pop
push
sbb
aad
out
mov
aad
scas
jb
adc
mull
mov
xor
in
xchg
cld
rolb
stos
stc
jnp
sbb
jnp
jp
mov
into
xorps
fcoms
gs
sub
loop
movsl
or
iret
pusha
cmpsb
gs
dec
pop
xchg
xchg
xchg
clc
sub
int
inc
std
jne
js
lcall
out
and
pusha
sahf
xchg
dec
hlt
out
push
lds
loope
das
xchg
pop
insb
cli
cwtl
jge
xchg
les
mov
adc
rorb
pop
ss
sub
insb
shlb
fistps
mov
or
stos
adc
into
mov
outsb
jg
dec
cmp
pop
mov
cmp
push
cmp
xchg
ffreep
mov
hlt
in
add
test
pusha
cltd
shlb
inc
push
ror
push
es
and
push
in
fdivrp
mov
loop
rorb
daa
sbb
shl
mov
add
jp
cmp
imul
inc
stos
cmp
test
mov
pop
imul
arpl
roll
into
jne
and
jo
lods
lds
hlt
stos
and
jle
les
adc
repz
into
jbe
clc
sbb
stc
xchg
sbb
out
fdivp
das
hlt
cld
data16
xor
rorl
mov
lcall
nop
movsb
sub
mov
aaa
syscall
mov
arpl
cmp
pop
adc
sub
jp
push
or
jl,pn
in
stos
cmp
pop
push
sahf
push
sbb
mov
xor
push
xlat
sub
pushl
jno
or
xor
clc
xchg
mov
jecxz
mov
jns
xor
push
out
mov
mov
scas
stos
push
repz
sub
push
mov
std
test
fwait
sahf
in
mov
out
dec
mov
icebp
cmp
adc
repnz
mov
sbb
pop
in
and
outsl
fisubs
inc
mov
out
adc
fwait
sub
sbb
into
mov
ficoml
or
mov
or
out
rorl
push
xchg
int
jno
outsb
repnz
test
adc
or
ja
repz
sbb
add
pop
arpl
bound
jecxz
into
jg
adc
mov
jmp
ret
jo
stos
mov
pop
xor
dec
pushf
pop
adc
je
dec
pop
fdivrs
xlat
jp
test
insl
shlb
inc
pop
lcall
push
jns
and
sub
add
and
icebp
sbb
cltd
or
or
and
fistl
clc
xlat
outsb
cmp
xchg
mov
flds
adc
and
adc
xor
xlat
pop
cmp
mov
scas
inc
xchg
cmp
enter
rcll
push
sub
inc
imul
rcrb
mov
in
mov
arpl
lock
xchg
ficoml
push
add
sahf
jno
and
leave
sub
test
sub
orl
popa
dec
decl
daa
lock
push
rclb
xchg
xor
sbb
lretw
cli
insl
pop
es
fldcw
mov
mov
lahf
sbb
popf
test
push
pop
subb
les
sbb
jno
in
jae
test
pop
pop
jecxz
imull
pop
dec
sub
lock
or
mov
and
cmc
and
aaa
movsb
cmp
js
or
hlt
sbb
mov
les
movsl
jg
stos
add
and
cmp
xor
pop
inc
jns
push
xor
pop
sahf
in
push
loop
add
or
test
rolb
pop
int
jle
inc
inc
add
pop
xor
lahf
jecxz
push
fnstcw
and
jg
rolb
mov
inc
fcoms
cltd
jg
sbb
push
fidivs
outsb
clc
lret
andb
lods
cmp
lods
or
ret
push
in
inc
repz
stos
out
ja
cmc
nop
les
inc
mov
cltd
pop
dec
xlat
adc
mov
mov
jecxz
xchg
lods
cmpsb
addr16
cltd
lcall
lods
and
popf
pushf
pop
out
clc
adcl
xchg
in
mov
dec
add
mov
cmc
rclb
jns
out
ja
pusha
cld
and
xchg
cmp
int
insb
push
scas
rorl
push
jle
push
xlat
cmp
fisubrs
mov
push
push
jbe
pop
cli
lods
loope
movsb
rep
xchg
lahf
push
sub
push
adc
pop
push
cli
inc
mov
xor
push
lock
out
xchg
fidivs
mov
ss
leave
sub
loope
ljmp
adc
outsl
fcoms
or
out
or
push
mov
pop
out
jg
ja
rclb
test
loopne
xchg
add
add
js
lcall
dec
mov
das
das
sub
jae
adc
lret
adc
and
fdiv
loopne
and
rclb
ja
mov
cs
fcmovne
pop
shll
outsl
cmc
iret
icebp
xchg
jge
sub
test
add
jae
pop
lea
mov
pop
cltd
or
seto
outsb
add
mov
addr16
in
cwtl
xchg
fistpll
es
pop
cmpsl
xchg
pushf
jg
incb
stc
and
cli
xor
mov
lcall
push
pop
scas
inc
mov
repnz
stos
clc
jp
test
cld
nop
xchg
lret
loop
or
and
dec
stc
add
cmp
mov
xor
fnstcw
adc
sub
inc
int
ret
mov
lcall
mov
pop
push
jge
lahf
fdivrl
je
and
subb
mov
outsb
enter
or
aas
xor
fidivl
fwait
adc
lods
aam
lods
cltd
lret
fstl
psraw
inc
mov
xchg
fwait
in
iret
pop
jl
ret
mov
adc
jno
inc
jbe
push
arpl
adc
pop
nop
and
test
mov
mov
cmp
and
cli
adc
pop
popf
rolb
mov
sub
lahf
pop
mov
pop
mov
addr16
fimull
pusha
rol
jo
xchg
inc
bound
push
push
mov
mov
xor
sbb
popa
mov
movsl
and
pop
xchg
call
fwait
mov
filds
daa
cmpsb
jbe
imul
sbb
cmp
stc
push
fisubs
dec
mov
shl
or
gs
lret
xor
add
jbe
push
and
sarl
fnstsw
jbe
dec
out
add
fsubr
or
decl
jp
or
fsubrl
push
jne
mov
fcoml
pop
and
inc
ffreep
mov
lret
sti
xor
lds
cmp
cmpsb
enter
imul
jp
jb
sub
pusha
lods
jge
daa
sub
fsts
add
aaa
and
fdiv
jns
push
dec
movsb
out
pop
jne
imul
mov
add
jmp
jno
mov
mov
xlat
mov
sbb
mov
jo
movsl
xorl
cmpsb
fnstsw
pop
outsb
fstpl
cmp
inc
xchg
aaa
sub
cmpsb
addr16
push
xchg
iret
shrl
xor
cs
es
clc
lret
or
test
testb
and
xchg
pop
loopne
push
shlb
xchg
fwait
call
mov
aaa
test
sbb
outsl
xchg
fstpl
mov
pop
adc
stc
sub
jmp
push
xor
pop
mov
pusha
insb
mov
into
cli
mov
es
add
and
dec
cmp
jl
mov
xchg
add
xor
sub
ret
fsubrl
add
inc
aaa
pop
stos
pop
mov
push
mov
jle
push
stos
xor
mov
push
push
jecxz
cmpsl
fists
sub
mov
jb
adc
sahf
jmp
cs
push
addr16
inc
mov
xchg
sbbb
into
mov
xchg
mov
adc
in
ja
add
xchg
les
daa
mov
scas
mov
add
push
jg
mov
into
mov
and
leave
out
inc
mov
out
cmp
xor
jmp
push
xchg
xchg
rolb
leave
addr16
mov
xor
inc
into
lods
mov
adcl
mov
add
insb
mov
shll
test
or
xchg
push
imul
data16
cld
enter
cmp
and
and
push
bound
and
inc
mov
in
fsts
and
out
scas
mov
cmp
xchg
jb
data16
jp
inc
sub
inc
sub
fiadds
and
inc
add
aaa
into
jno
sbbl
outsb
daa
scas
inc
mov
out
mov
xchg
into
iret
out
lds
jnp
add
dec
dec
or
dec
jns
lods
leave
pop
lahf
xchg
inc
inc
jge
into
outsl
loop
cli
and
push
xchg
mov
aad
pop
gs
and
test
pop
add
inc
mov
xchg
or
pop
inc
jecxz
cmp
ljmp
test
cs
cmp
pop
movsb
xor
mov
xor
pushf
mov
repnz
lret
fiadds
dec
iret
jge
lock
adc
iret
fisttpl
push
rcl
mov
push
in
push
jno
or
fdivl
xchg
das
add
pushf
add
incl
lahf
mov
mov
mov
lods
lods
iret
jmp
xchg
mov
mov
cmp
ss
pushf
xchg
and
sub
pop
pop
stos
dec
inc
mov
pop
xor
jecxz
mov
fsubl
cld
xor
mov
dec
mov
dec
pavgb
fidivrs
fstpt
mov
iret
sbb
push
mov
outsb
add
jo
mov
sbb
inc
cmpsb
inc
xchg
jmp
and
rcrl
lea
fbstp
mov
dec
lods
fs
cmp
mov
mov
sub
std
xchg
lret
repz
cmpsl
cli
es
into
xchg
ret
or
pop
xchg
push
adc
adc
push
mov
daa
or
iret
cmp
xor
jle
in
mov
sub
mov
jns
sub
jo
loope
cmp
jns
test
ss
fs
xchg
icebp
jo
pop
sbb
sahf
in
pop
sarl
ss
sbb
cld
outsb
aad
add
pop
sti
xchg
test
icebp
int
add
popa
pop
cmp
ret
stc
sarl
jb
xor
or
xchg
outsl
shrb
imul
int3
mov
inc
pop
push
jl
mov
xor
js
rcrb
mov
add
fstl
shlb
xor
dec
mov
jecxz
add
shrb
jo
jae
pop
mov
mov
std
arpl
mov
divl
outsl
pop
mov
out
cli
pusha
ret
in
or
push
into
mov
addl
sbb
push
call
lock
filds
cld
mov
or
jl
jno
pushf
pop
xchg
out
mov
pop
jmp
lcall
aad
cmp
out
pusha
inc
or
lahf
rclb
add
inc
out
mov
xchg
jg
xchg
and
pushf
movb
lcall
fisubl
inc
add
lods
jmp
xlat
jo
dec
stc
push
mov
jne
xchg
mov
jge
jne
ljmp
mov
jge
fstps
and
cmp
mov
dec
dec
loope
inc
add
jge
xchg
or
xchg
or
sbb
insb
push
xchg
sub
adc
sahf
cs
lahf
lahf
sub
aas
mov
mov
pop
and
std
mov
lcall
jp
jge
cmp
or
jbe
push
iret
notb
roll
push
ss
mov
pop
shll
leave
and
mov
leave
cmp
jo
orl
sub
jp
mov
dec
in
out
cmp
and
mov
sahf
mov
imul
into
pop
pop
xchg
std
scas
out
sahf
pop
jge
mov
or
add
ffree
pusha
scas
jne
cmpsl
je
mov
jne
lcall
dec
fwait
int3
push
pushf
mov
mov
sub
pop
popa
xchg
pusha
inc
mov
shlb
cmp
mov
movl
lahf
and
loope
push
lret
inc
popa
pop
pop
mov
mov
jp
mov
fildll
out
mov
fistpll
cli
cmp
dec
mov
push
pop
pop
scas
rcll
xor
sub
test
jbe
adc
jg
xchg
pop
js
mulb
jp
dec
jle
out
mov
xchg
inc
mov
pusha
stos
push
cmp
les
lret
stos
out
loope
divl
mov
repz
lret
jge
cmp
xor
out
popa
movsl
insl
popa
insl
dec
jnp
clc
xchg
add
cmp
cs
lcall
addr16
fwait
xlat
cwtl
divb
pop
inc
int
rolb
fdivl
fsub
cmpsb
xor
jo
mov
test
push
adc
ja
sub
shlb
mov
addr16
mov
xchg
aas
cmc
xor
insl
push
jbe
xchg
and
shl
out
imul
ret
jge
dec
repnz
fsubrs
xchg
xchg
xor
js
pop
xor
icebp
mov
addr16
mov
dec
mov
xor
cld
sub
cmpsl
jns
mov
cli
dec
jno
xchg
xor
aas
sbb
in
xchg
negb
cmp
add
frstor
mov
xor
mov
ds
jp
xor
out
sbb
adc
cwtl
imul
mov
bound
scas
shl
shll
je
insb
cmp
and
sub
popa
out
es
fnstenv
jmp
outsb
sahf
cwtl
cmp
inc
sub
mov
add
xchg
push
cltd
cmp
jae
mov
add
mov
mov
fdivr
inc
cmp
sub
jge
or
adc
aaa
xchg
add
iret
inc
cmp
and
outsl
or
dec
or
test
sbb
lock
roll
mov
and
cmc
or
popf
push
xchg
fdivr
jg
pop
add
and
dec
fisttps
xor
fs
mov
int3
jae
movsb
sub
outsb
scas
out
dec
sbb
push
push
fstpl
sbbl
clc
push
fucomp
sub
outsb
clc
sub
clc
sete
inc
sbb
push
push
cmp
push
in
mov
pop
out
push
xor
dec
in
mov
or
push
inc
jne
cmp
shll
fnstenv
xchg
out
pusha
fwait
cltd
push
mov
sbb
repz
inc
insb
mov
sub
push
sbb
js
xchg
scas
dec
and
xor
dec
pushf
sub
mov
adcl
add
rorl
das
out
repnz
push
outsb
push
mov
fisttps
xor
rol
test
adc
or
das
jmp
xchg
sbb
repz
js
xchg
lret
mov
and
std
aaa
fimull
inc
imul
cmpsl
in
mov
sub
cmp
cmp
or
hlt
xchg
adc
xor
repz
sbb
adc
in
in
mov
or
and
lods
iret
fstpt
notl
call
jns
and
xchg
dec
jmp
and
les
inc
xor
repz
and
xchg
cmp
adc
lcall
inc
loopne
imul
loopne
fmul
pop
ret
or
mov
int3
pop
das
add
movsl
jle
out
cmc
shrb
inc
addr16
pop
lahf
xchg
decl
arpl
or
push
idivb
aaa
int3
out
pusha
push
cs
adc
movaps
adc
jno
clc
and
test
test
insb
dec
into
push
dec
jo
jmp
cmp
lock
loopne
cmp
and
mov
xchg
pop
es
push
lret
fdivrp
pop
and
lea
push
scas
adc
lcall
imul
dec
repnz
aas
enter
iret
mov
outsb
std
das
sti
and
push
push
insl
mov
xor
stos
mov
and
inc
mov
push
pop
add
fcmovb
fnstsw
shll
push
push
flds
dec
add
push
add
sub
jmp
dec
mov
icebp
nop
daa
rcr
mov
ss
xchg
and
mov
imul
xor
mov
enter
sub
inc
push
sti
pop
push
sub
nop
sub
sti
pop
shlb
dec
mov
jl
xchg
cmpsl
stc
out
mov
test
jmp
xchg
fimuls
adc
mov
loop
cmc
mov
or
mov
inc
shll
jl
stc
sbb
dec
sub
aam
test
movsb
sbb
addb
xchg
ljmp
mov
adcl
dec
mov
out
loop
imul
jge
pusha
dec
push
jbe
dec
sahf
mov
cmpsb
xor
sbb
add
stos
movsb
mov
int3
loop
insb
dec
cltd
and
mov
sar
mov
bound
mov
and
clc
adc
arpl
xor
jle
ror
dec
and
xchg
gs
pop
mov
cmp
lods
pop
xor
outsb
aaa
sbb
sti
xor
push
subl
mov
lods
or
shll
idivl
icebp
pop
lock
sahf
hlt
in
jmp
jp
loope
ffree
sti
aas
mov
call
dec
and
into
cmpsb
mov
clc
xor
sbb
leave
cwtl
jle
xchg
test
nop
push
dec
push
push
add
jle
cmp
hlt
sbb
fmul
pop
mov
addr16
sahf
adc
fs
mov
push
cltd
icebp
xchg
fistpll
icebp
scas
mov
cs
int
sbb
rolb
inc
out
sbb
jp
insb
out
jecxz
jno
sbb
sahf
push
jmp
ret
or
repnz
inc
lret
cmpsl
xlat
stos
sub
mov
andl
and
jae
mov
sahf
outsb
lods
les
xchg
adcb
mov
pushf
jae
mov
xchg
and
aas
bound
fucomip
outsl
push
xchg
inc
pop
pusha
lahf
jae
push
fisubl
js
nop
mov
repnz
dec
lock
mov
nop
or
cmp
std
cmp
or
rcll
dec
data16
and
xchg
fmuls
lock
mov
dec
imul
bound
and
stc
cmp
aad
mov
addr16
loopne
jns
adc
ljmp
inc
pop
xchg
shr
jmp
fptan
mov
stos
fiaddl
mov
push
in
pop
js
addr16
int
sub
cmp
sbb
daa
out
stc
sub
pop
mov
ljmp
inc
dec
int
dec
push
mov
push
cmp
out
cmp
mov
jo
cld
scas
inc
es
and
int
jb
push
jmp
and
push
test
fs
mov
cli
mov
lahf
ja
movsb
add
or
sbb
jg
xchg
in
lret
hlt
sbb
push
xchg
outsl
std
dec
dec
jmp
add
cmpsl
fmuls
xchg
mov
or
jmp
insb
xorl
sti
aad
fucomp
adc
xchg
sub
faddl
pop
add
notl
cld
fsubs
imul
mov
addr16
data16
pop
pop
das
add
nop
lcall
pusha
cmp
aad
idivb
jp
shll
inc
notb
ja
inc
adc
aad
sub
pop
scas
jnp
lret
out
les
inc
gs
adc
es
sub
pop
pop
cli
ds
in
sub
mov
call
mov
testb
test
in
xor
or
repnz
fstl
outsb
mov
paddb
pop
cmpsl
and
push
xor
bound
add
inc
stc
sub
and
sarl
cmp
fmull
nop
add
sahf
add
scas
cltd
or
scas
mov
push
cld
in
mov
dec
cmp
add
pushf
mov
cmovne
mov
mov
jb
sub
popf
inc
sub
mov
fldl
push
mov
mov
pop
call
mov
in
test
and
mov
sub
cmpsl
and
les
insl
dec
ret
sbb
push
mov
orl
cltd
xor
dec
mov
lahf
fnstsw
aad
adc
mov
movsl
pop
mov
inc
imul
fsubs
ljmp
push
outsl
fcompl
jo
or
dec
data16
decb
push
jp
mov
idivl
sbb
mov
push
sbb
sbb
dec
fwait
pop
mov
nop
xchg
pop
enter
or
dec
fstpl
push
leave
mov
mov
aaa
mov
jg
adc
incl
adc
jg
add
add
cmp
fstpl
sub
call
inc
lret
xchg
jmp
dec
lea
sahf
cmpb
mov
xor
pop
shll
lret
mov
inc
fistps
sbb
mov
xorb
insb
jp
xlat
gs
cltd
leave
sub
test
iret
in
fsubrp
mov
or
pop
add
fcomp
cmp
ds
mov
popa
cmp
sub
call
imul
or
pop
mov
jne
push
in
cli
xchg
jp
lret
xor
movb
inc
jmp
ljmp
add
shrl
addl
das
pop
jp
pop
inc
adc
je
jno
aas
dec
fstps
adc
jle
mov
push
fidivl
pop
dec
loope
scas
stc
mov
cmpsb
notl
ret
in
scas
je
mov
lea
pop
cmpsl
mov
xchg
mov
add
push
cmc
pushf
inc
dec
jne
stos
mov
sbb
add
mov
inc
sub
stos
push
jl
adc
add
inc
insb
mov
das
xchg
sub
mov
cmp
lahf
jmp
push
and
jne
inc
out
incl
or
jo
sbb
xlat
and
loop
jl
mov
hlt
and
out
in
test
loop
inc
dec
daa
add
mov
lods
fistl
insl
sub
lret
sahf
adc
inc
leave
rorl
das
or
pop
popa
lcall
sub
out
xor
pop
mov
cmp
xorl
iret
in
mov
jns
jae
mov
popf
hlt
stc
ret
call
daa
or
loopne
ret
pop
sbb
mov
pop
cmp
dec
aas
sub
sbb
iret
xor
scas
add
lods
add
bnd
and
mov
aad
cmp
popf
push
stos
and
adc
sarl
inc
mov
js
fadd
std
pop
add
inc
insb
pop
scas
pop
jo
aaa
lods
adc
lcall
mov
xor
mov
push
pop
pop
shlb
nop
mov
mov
push
out
cltd
scas
xchg
xor
sbb
roll
xor
int
jae
popa
pop
negb
sub
cld
sti
decl
pushf
or
lahf
add
mov
daa
cmp
in
cmc
jge
xor
xor
adcl
xchg
repnz
ret
cmp
lret
lret
bound
je
repz
cmc
cmc
push
jne
popa
jo
adcb
test
and
adc
lret
mov
jg
fcompl
jg
mov
shrl
insl
mov
incl
repnz
mul
dec
outsl
andb
ss
inc
sarl
or
dec
movsl
sub
jge
xchg
cmp
xor
shlb
push
arpl
jg
orl
sbb
pop
mov
add
pushl
push
sbb
sub
mov
mov
push
pop
test
mov
jg
cltd
shll
cmc
test
insl
mov
loop
fcoml
enter
add
shlb
add
int3
xchg
fsubl
xor
or
in
cmp
scas
mov
nop
mov
cmp
push
lock
insb
sub
loopne
cmp
shrb
mov
and
add
jl
ret
push
popf
gs
fs
cmp
pop
stos
cmp
xchg
or
cld
std
outsb
sbb
ss
inc
repz
out
addb
fdiv
dec
loope
push
add
sub
loopne
or
out
jg
pop
mov
mov
addr16
sub
mov
cmp
mov
cmc
cmp
dec
push
sbb
movb
or
cmp
popa
cmpsl
mov
fwait
sbb
cmp
xchg
xor
mov
push
jle
mov
dec
inc
fdivrl
out
mov
pop
dec
repz
ret
ljmp
jo
xor
push
xchg
in
lock
bound
mov
xchg
add
pop
sbb
mov
andb
mov
cmp
test
mov
dec
hlt
dec
cmp
sahf
jb
daa
sbb
mov
js
sarb
shlb
or
popf
jg
jo
and
les
orb
jmp
sbb
outsl
push
or
mov
fsubrl
mov
nop
cmpsb
sub
inc
jmp
imul
inc
xchg
test
fwait
out
icebp
or
jb
xor
push
cmp
mov
add
icebp
add
dec
inc
ret
ret
shlb
call
fnstcw
nop
das
out
xchg
mov
mov
dec
dec
push
aaa
loope
or
lcall
xor
push
mov
adc
mov
xor
mov
scas
cwtl
clc
or
sbb
mov
fmuls
shrl
data16
and
jae
add
rolb
cli
addl
lcall
ss
sub
dec
add
jno
adcl
mov
inc
test
ret
jl
das
popf
je
fistps
push
mov
and
and
or
push
xchg
push
mov
xchg
in
dec
movb
arpl
push
push
push
aaa
cmpsb
popa
sub
cmp
scas
or
aas
rcr
push
ficoml
pushf
mov
pop
xor
ret
subl
dec
pop
push
sbb
lea
fsubrs
fldcw
daa
mov
jmp
sub
test
jne
into
or
mov
mov
shll
push
and
add
xlat
sub
lahf
pop
cli
clc
imul
push
cltd
xchg
dec
das
call
and
jp
bound
jle
je
sub
sub
leave
jmp
mov
inc
push
jmp
in
rcll
or
xchg
shlb
adc
lea
loop
and
push
movl
dec
data16
cmp
shrl
fmul
movd
mov
jnp
aas
pusha
cmpsl
fstpt
xor
movsb
push
xchg
or
sub
imul
clc
mov
fcmove
in
xor
xor
inc
data16
insl
push
pusha
or
in
test
jne
push
shl
scas
sahf
mov
sbb
push
xor
pop
push
xchg
insb
fisubrl
jne
jo
pop
fldcw
xor
not
adc
cmpsl
xor
enter
dec
add
xlat
or
jb
push
lahf
mov
movsb
leave
rorb
stos
xchg
adc
pop
xchg
rcrb
cmp
cmp
mov
inc
sti
in
cmc
cld
push
lcall
mov
test
adc
cli
loope
mov
and
push
in
xchg
stc
adc
push
mov
jo
ja
xchg
and
mov
push
ja
je
jnp
inc
or
out
imul
mov
fstps
imul
mov
decl
int3
or
out
sbb
and
test
rorl
mov
push
daa
inc
jo
mov
push
push
and
nop
clc
sbb
dec
or
dec
pandn
stc
or
pop
jl
dec
ss
mov
shrl
ljmp
sbb
jmp
int3
jno
mov
out
lods
or
inc
stos
in
fsubs
and
inc
clc
int
insl
cli
mov
ja
and
iret
loop
or
mov
cmpsb
lahf
jmp
dec
std
mov
sub
and
cmp
push
cmp
inc
clc
dec
xor
jnp
jb
ss
jne
je
mov
mov
pop
inc
and
mov
jg
xchg
aaa
das
mov
dec
mov
add
arpl
xchg
stc
loopne
scas
cmp
aas
sbb
out
inc
inc
push
lds
popa
sbb
jge
jle,pt
push
cwtl
popa
xor
std
inc
xchg
xchg
je
jecxz
add
dec
jl
mov
inc
xchg
arpl
jecxz
pop
mov
lret
cmpsb
insl
cli
adc
or
es
lahf
fs
cld
inc
dec
nop
punpckhdq
lret
add
rcrl
mov
dec
mov
test
xchg
or
scas
pop
or
sub
movb
out
arpl
pop
cli
push
mov
lcall
mov
pop
lahf
sub
mov
popa
repz
jmp
into
mov
xor
sub
adc
cmpsl
sub
vpslld
mov
sbb
sahf
xor
cmpl
or
mov
sahf
ffree
sub
mull
pop
rorl
push
lock
adc
ret
daa
test
icebp
push
loopne
sub
aam
ja
sbb
loopne
adc
jns
loopne
in
cmp
xchg
jnp
sbb
mov
inc
scas
test
pop
stos
fists
inc
sub
popa
paddusw
sub
clc
xchg
and
adc
inc
cmpsl
gs
jge
xor
adc
clc
stc
push
and
sub
pop
mov
jg
jle
scas
sub
mov
outsb
cmpsb
push
rorl
push
add
in
or
mov
and
mov
int3
and
scas
mov
xchg
insb
out
test
cltd
jnp
inc
or
and
jle
clc
and
lods
fimull
adc
and
add
aad
lahf
dec
repnz
lds
scas
xlat
lds
cmp
mov
cmpb
or
outsb
add
add
sahf
pop
pop
les
pop
inc
scas
incl
xor
push
cmp
in
dec
dec
shlb
mov
mov
sub
notb
xor
jo
mov
mov
jo
mov
mov
icebp
mov
lods
popa
push
pop
cmpb
inc
pop
addr16
push
or
lahf
stos
ss
lret
sub
xchg
pop
cmc
ret
sar
test
cltd
fcom
stos
scas
insl
mov
sub
sti
popf
ret
fs
in
dec
rolb
scas
dec
sbb
mov
xorb
aaa
movsl
cmp
std
push
xchg
cmp
inc
jnp
in
movsb
insl
or
clc
jle
lods
jns
lods
pop
jg
push
leave
nop
jns
jecxz
dec
xorb
mov
out
dec
int3
popf
mov
in
aaa
xlat
shlb
xor
mull
fidivrl
mov
jno
jmp
sbb
pop
mov
mov
jnp
gs
jae
pop
push
sarl
aas
mov
stos
fsubrs
dec
push
and
in
outsl
xlat
add
mov
scas
push
push
sahf
jmp
ljmp
ret
movsb
or
mov
sbb
adc
fidivl
cld
loop
test
rolb
xorb
inc
adc
dec
lahf
add
lods
push
std
and
dec
leave
adc
push
cmp
push
mov
imul
and
add
ds
xchg
mov
inc
dec
add
stc
adc
add
mov
xchg
insl
lds
pop
insl
inc
push
push
dec
cmp
test
xchg
sbb
lods
pop
gs
dec
sbb
mov
push
xor
xlat
push
push
fmull
push
sub
nop
scas
xchg
xlat
loope
add
fbld
pop
aaa
mov
jmp
mov
bswap
inc
in
push
pop
dec
stos
push
shlb
sbb
add
xor
stos
jae
pop
add
leave
adc
fsubr
repz
dec
and
xlat
imul
in
flds
movsb
or
jbe
xor
jo
jecxz
and
sti
mov
jle
into
ljmp
dec
pop
adc
jmp
sub
mov
ds
cmp
dec
jmp
mov
pushf
out
dec
subl
int3
rorb
out
orl
ss
adcl
xchg
es
cmp
into
test
sbb
push
add
adc
sahf
in
jnp
sti
test
dec
pop
pop
insb
lret
outsb
pop
aad
pushf
push
push
hlt
scas
sbb
push
inc
dec
jbe
pop
jb
imul
nop
add
icebp
push
adc
inc
mov
aas
inc
sub
xchg
inc
insl
in
and
movsb
or
xchg
push
and
xchg
out
fstpt
push
scas
xor
pop
movsb
inc
movsl
xor
inc
sbb
stos
push
fs
inc
sahf
or
jb
aas
into
stc
cmp
push
data16
jl
imul
mov
dec
jg
lock
popa
mov
enter
dec
loop
in
dec
or
pop
mov
bnd
mov
dec
mov
insw
cmpb
pop
popf
xchg
jns
jne
mov
mov
sbb
mov
sar
sbb
adc
icebp
xor
mov
push
sub
fisubs
mov
xor
add
clc
pop
cmp
jg
push
sbb
cmpsb
les
sahf
dec
mov
lret
stos
mov
sub
mov
imul
jo
test
or
iret
xor
inc
sbb
mov
mov
pop
imul
sahf
mov
ja
and
mov
mov
mov
test
addl
loopne
fwait
cmc
outsl
neg
cmp
or
or
inc
cld
xor
pop
add
mov
mov
fsubrl
pop
or
jnp
bound
and
xchg
jmp
cmpxchg
ja
lock
aaa
pop
adc
fnstenv
pop
out
adc
pop
xor
pop
xchg
mov
in
test
cmp
lahf
ljmp
inc
cmp
jge
movsl
lods
or
sub
or
adc
jb
cmp
adc
xchg
lock
or
js
and
mov
imul
or
cmp
dec
ret
daa
cmp
push
sub
sub
bnd
repnz
orb
jb
adc
mov
adcl
dec
shrl
jg
add
in
inc
stos
mov
adc
lods
ret
sbb
fwait
enter
pushf
aaa
sub
lcall
push
sbb
mov
xor
std
sbb
int3
bound
push
lcall
je
or
sub
rcl
jae
mov
aaa
outsb
in
fisubl
sbb
jle
pop
mov
add
mov
stos
push
fmull
mov
std
adc
call
outsl
out
jno
jg
pusha
lock
icebp
mov
movsbl
call
push
jno
add
cmpsl
scas
xchg
mov
push
inc
ja
ja
dec
into
inc
cmp
ficompl
push
jmp
push
enter
inc
cwtl
add
inc
jo
sbb
sbb
lds
pop
pop
arpl
jae
push
dec
and
orb
in
push
add
push
mov
pop
ds
gs
and
inc
popf
mov
in
fsubr
sbb
xor
pop
imul
lods
flds
inc
in
jle
jmp
inc
lret
bound
dec
fwait
rcr
pop
fildl
cmp
xor
pop
mov
xor
lock
jle
mov
push
xlat
push
iret
popa
xlat
push
and
mov
fldl
push
enter
and
inc
loopne
jle
inc
cld
imul
and
hlt
jle
jmp
adc
or
imul
ljmp
mov
xchg
fucomp
loopne
inc
and
xchg
testb
xor
idivb
jbe
xchg
and
stos
dec
roll
dec
out
scas
loopne
xchg
pop
jle
out
out
cmp
xchg
or
mov
add
sbb
push
pusha
push
jg
or
xchg
mov
jne
pause
sub
movsl
insl
imul
adcl
lods
xorb
daa
outsb
mov
xchg
push
jecxz
jb
jmp
mov
jmp
jne
cmp
pusha
mov
loope
in
cmp
arpl
cmpsl
fwait
mov
out
xchg
outsl
sbb
cwtl
roll
lret
mov
mov
cli
mov
xor
shr
push
cld
lcall
push
adc
ljmp
into
jge
js
add
xchg
fsubs
jb
mov
xor
popf
jle
notl
push
fistps
push
pop
imul
lods
dec
and
mov
inc
cmpsb
shrb
jne
dec
or
fsubl
cmp
dec
lcall
sbb
mov
sbb
adc
cmp
dec
addr16
test
test
scas
loop
sub
negb
add
xorb
or
js
mov
cmp
pop
ret
push
mov
jp
call
xor
cmp
out
cmp
lods
sbb
add
xor
in
loopne
lret
fstp
leave
addb
mulb
mov
jns
push
mov
inc
fs
xor
cmp
cs
nop
rolb
mov
lock
xor
pop
ss
lods
adc
test
sub
arpl
dec
sbb
clc
inc
push
fstpl
in
or
push
xchg
jae
pop
repnz
jbe
sub
lods
call
and
mov
dec
test
jae
nop
push
scas
jle
xor
lds
hlt
push
jmp
fucomp
test
adc
add
andl
inc
push
out
sub
ss
lea
test
mov
je
push
or
insb
out
add
aas
repz
enter
cmp
and
xchg
aaa
ljmp
add
jno
mov
insl
cmpsb
xor
js
out
sbb
mov
mov
js
xor
scas
test
mov
dec
push
mov
add
jnp
adc
pop
lret
outsb
mov
lahf
inc
rcrl
sbb
dec
xchg
iret
push
inc
mov
add
cmp
imul
cmpl
pop
insb
fidivrs
or
sti
ficoml
xor
dec
mov
shrl
push
jno
mov
mov
subl
or
mov
push
add
fstpt
mov
push
mov
push
jecxz
sti
andb
cmc
mov
mov
std
and
outsl
lret
mov
mov
es
arpl
inc
out
xor
movsb
xchg
cli
inc
in
call
enter
imul
xchg
inc
fwait
aaa
or
mov
sub
daa
cld
add
mov
sbb
sbb
sbb
shlb
fcoml
stos
xchg
pop
andb
cmpsl
sub
shll
pop
push
imul
outsl
ljmp
loope
lock
imul
push
fidivrs
mov
into
loope
xor
enter
sbb
mov
cmpsl
xlat
mov
punpcklwd
jmp
cld
mov
sub
mov
mov
inc
pop
fstl
ret
shll
mov
and
jle
jl
pop
mov
out
aaa
in
xlat
mov
pop
aad
pop
jb
lret
push
jmp
pop
jle
sti
or
call
repnz
inc
add
mov
popf
dec
xchg
fisttpll
aaa
icebp
loop
cmpsl
xor
cmp
mov
int3
mov
mov
cmp
add
jns
shlb
xor
out
loopne
jecxz
movsb
mov
jecxz
xchg
test
roll
int
insb
cmp
aad
mov
dec
mov
aad
ja
cmp
repz
jle
cmp
cmp
cmc
mov
inc
sbb
jl
dec
adc
or
stos
xorb
rorl
push
add
in
mov
sbb
sbb
inc
call
cmp
xor
xchg
xchg
lcall
orb
mov
jae
jle
out
add
mov
mov
lcall
mov
test
pop
sbb
push
mov
cwtl
mov
push
ret
jl
adc
int3
xor
jno
or
in
pand
repz
xchg
push
or
mov
mov
in
xor
mov
mov
and
adc
pop
pop
bound
mov
and
xchg
addr16
dec
mov
add
jecxz
mov
lcall
hlt
xchg
xchg
mov
and
lea
sbb
adc
and
leave
in
pop
fs
add
sbbb
std
lcall
daa
cmpl
and
inc
adc
ss
fld
in
scas
inc
pop
lcall
out
ret
mov
push
push
sti
ret
imul
sbb
cltd
jno
add
addr16
push
pop
push
aam
fnsave
fcmovb
inc
jns
ret
fimuls
xchg
cmpsl
adc
rdmsr
mov
cmp
mov
dec
fstpl
dec
out
jecxz
dec
ljmp
pop
sbbl
in
jbe
enter
mov
pop
fldt
inc
iret
shrl
sub
mov
lea
fdiv
loop
or
loope
test
cmpsb
jecxz
mov
mov
and
shll
ss
gs
mov
and
xlat
addl
loop
adc
or
mov
or
ret
leave
ja
xchg
movsb
das
xor
fs
and
fdivrs
je
or
in
pusha
push
fdivrl
loope
jne
ret
ja
mov
fcompl
and
rol
aaa
add
adc
stc
push
movsb
jo
cmp
inc
inc
scas
mov
mov
or
test
mov
repnz
push
dec
mov
stos
fistps
outsb
into
enter
add
js
cld
pop
outsb
mov
stos
adc
cld
cmp
stc
jl
fstl
cmp
ja
jnp
rcr
jecxz
cmp
cli
or
fildll
pop
mov
popf
mov
inc
repnz
bound
scas
cwtl
clc
fucomi
push
frstor
xchg
jnp
imul
cmp
sub
mov
sahf
out
aad
mov
fs
mov
xor
fisubrs
imul
lret
data16
mov
inc
inc
dec
inc
sbb
mov
xor
push
js
cltd
pop
leave
iret
scas
mov
sbb
popf
jge
xchg
rclb
iret
push
pop
cs
mov
ror
movsb
repnz
and
push
test
xor
bswap
and
mov
lahf
cmp
mov
std
push
mov
ds
ja
pop
jl
addb
jo
or
sub
push
lods
or
jmpw
scas
sub
arpl
fcoms
mov
pusha
pop
test
xorb
cld
aad
and
xorb
or
mov
lcall
js
xchg
cmpsl
pop
sahf
icebp
fldl
std
pop
imul
call
outsb
add
jno
inc
ja
rolb
sub
outsl
xchg
outsl
mov
pop
sub
cld
cmp
lahf
xchg
repnz
jg
mov
cmp
inc
in
push
sbb
repnz
sub
jne
jbe
fisubs
arpl
cmp
push
inc
pop
xlat
fsts
mov
and
cli
cltd
sbb
gs
daa
xchg
cmp
mov
dec
clc
mov
int3
les
mov
jns
cld
cmp
int3
ljmp
add
cmpb
xchg
aaa
xlat
push
les
mov
das
mov
fcmovnbe
push
xor
push
daa
nop
orb
xchg
outsl
pop
cmc
insb
imul
int
in
xchg
daa
ss
push
cmpsb
cmp
cmp
ja
lds
sbb
pushf
pop
push
stos
mov
add
aaa
jp
sbb
ret
lds
cmp
scas
inc
in
cwtl
das
dec
in
dec
ds
divl
mov
gs
ret
push
fnstenv
test
je
cltd
jae
jmp
lods
jae
jg
push
mov
push
mov
push
push
cmp
outsl
jo
mov
xchg
push
sub
cmp
popa
sti
push
inc
in
jl
push
pop
loopne
pop
push
push
pop
dec
adc
jg
pop
cmp
pushf
movsb
dec
pop
mov
jbe
jb
push
popa
push
cmpsb
cmp
cmp
bound
pop
test
int3
clc
mov
cmp
pop
dec
iret
dec
aad
cmp
mov
dec
icebp
pop
push
out
in
push
les
mov
mov
shlb
cmp
and
lret
pop
xchg
mov
cmp
jno
sti
adc
jb
dec
cmp
into
insb
pusha
inc
mov
insb
mov
fists
cmpsl
scas
aas
fisttps
dec
lods
mov
in
or
push
cmp
pushf
sti
xchg
fisubrl
push
or
sbb
dec
leave
ds
cmp
je
invd
sbb
cs
and
in
das
aaa
fisubs
mov
add
cwtl
and
flds
cmc
inc
lock
add
mov
outsb
jns
movnti
mov
cmc
mov
push
mov
adc
mov
test
movsb
push
push
fimull
jle
sub
pop
xor
cltd
loope
sub
xchg
push
mov
sahf
push
lea
sub
popf
idivl
cmp
cmp
cmp
add
into
dec
mov
cmp
cmpsb
cmc
jle
imul
push
sub
cld
inc
xor
jecxz
lods
mov
add
imul
push
mov
int3
lea
mov
or
or
dec
ror
pop
sbb
enter
aas
minps
daa
cmpsl
int3
int
shrl
in
pop
sarb
jmp
mov
das
mov
inc
lret
jp
adc
jbe
push
push
lock
popa
mov
xchg
push
int3
outsl
std
xor
addr16
lret
sar
cmp
inc
sub
mov
cs
lret
inc
add
and
insl
pop
inc
mov
xchg
xchg
imul
xorl
in
xchg
pop
adc
sub
popf
and
adc
mov
cli
xor
out
mov
and
mov
fstpl
or
cmp
out
bnd
or
mov
jle
cmc
xor
stc
roll
dec
bound
fmul
fs
push
pop
fdivrp
ja
mov
shrl
and
add
mov
dec
dec
dec
inc
ja
lret
hlt
and
xor
lock
rclb
loope
mov
mov
imul
movsb
mov
mov
fdivrs
jp
dec
subl
cmp
jle
or
ret
inc
es
mov
cld
sub
inc
cmpsb
fcmove
fdivr
xor
pop
inc
call
dec
xchg
pusha
int
mov
inc
shlb
dec
outsl
push
mov
cmpsl
icebp
sbb
and
mov
popa
and
out
or
lea
pop
xor
in
cmp
fisubl
pop
loope
xchg
cwtl
pop
cmp
std
in
fistpll
es
rorl
icebp
or
pop
or
dec
cmp
pop
sbb
and
aaa
repz
icebp
in
xor
bound
xchg
sub
push
xor
and
int3
or
in
sub
cmp
cltd
mov
out
jnp
sub
fmull
push
bound
daa
cmpsb
add
xor
push
sti
movsb
les
imulb
jg
sbb
cmp
iret
push
cs
pop
lods
fstl
dec
jne
std
adc
test
pop
bound
pop
insl
mov
push
mov
insb
loope
sbb
mov
or
movsl
cmp
scas
in
out
push
js
push
mov
push
repz
push
pop
push
add
mov
cs
and
outsb
dec
outsl
iret
fbld
stc
sti
decb
dec
xchg
in
sbb
xor
push
pop
pusha
jg
mov
in
jg
loope
leave
sbb
xchg
cs
sub
das
push
ret
cmp
fs
cmp
out
pop
pop
or
mov
add
mov
xchg
enter
lret
jg
movsb
mov
jge
and
push
xor
inc
jns
dec
sub
and
fldcw
xchg
cmp
or
jecxz
fldt
shlb
mov
rcr
sbbl
pop
outsb
ljmp
jecxz
movsl
ja
xchg
out
in
test
imul
sub
lock
call
xor
add
cwtl
jbe
cmp
sub
ja
sub
sub
adc
mov
sbb
lods
push
cmp
pop
dec
dec
cmpsb
jl
fnstenv
sbbb
mov
mov
cmp
and
fidivrl
into
or
push
jnp
mov
inc
mov
xor
or
push
add
and
js
ss
dec
ss
jno
xchg
jnp
sub
enter
enter
loop
push
cld
mov
sub
aaa
or
pop
jns
loop
je
into
into
adc
lods
leave
jle
jb
cld
fisttps
incb
in
add
mov
std
mov
orb
rcll
push
outsb
fsubs
arpl
scas
scas
pop
ret
fs
aad
and
xor
scas
pop
stc
in
ja
push
cmp
sbb
mov
pushf
dec
add
lret
hlt
mov
mov
sbb
cltd
outsl
dec
mov
push
andb
mov
in
cwtl
hlt
push
jne
aad
sbb
sub
loop
fidivs
jecxz
orb
mov
mov
rcrb
adc
inc
sbb
dec
arpl
es
adc
pushf
sub
pop
sbb
xor
push
mov
xchg
jno
shrl
out
cmp
clc
lret
das
shrb
ja
fwait
xor
push
or
sbb
jmp
pop
bound
sbb
inc
dec
fisttpl
jnp
pop
lcall
ja
ret
fisubs
jae
push
sbb
mov
iret
pop
mov
cmp
dec
aam
jne
repnz
out
xor
cwtl
shrl
pop
das
mov
mov
aam
inc
imulb
mov
ja
test
and
mov
inc
into
daa
pop
jecxz
sbb
lahf
out
mov
shl
inc
stc
mov
outsb
test
daa
xorl
int3
in
dec
idivb
pop
scas
xor
aam
jo
mov
push
ss
int3
adc
cwtl
push
sbb
rcl
loopne
fwait
add
dec
mov
call
mov
mov
roll
std
jno
dec
xor
sbb
les
xchg
sarb
fmull
aad
xchg
or
data16
aas
jbe
cmp
jmp
and
jecxz
mov
pop
xlat
daa
xchg
enter
sbb
ret
or
adc
jae
shl
push
push
cli
lock
mov
arpl
fwait
mov
and
mov
fsubrs
cli
addr16
std
mov
stos
xchg
pop
jp
pmullw
dec
fadd
dec
test
mov
sub
add
cmc
mov
outsb
out
dec
cmpsl
outsb
dec
dec
fmuls
cmp
inc
stc
in
inc
filds
into
xchg
mov
add
mov
adcl
fadds
outsb
dec
decl
dec
shll
mov
mov
cli
sub
sbb
dec
pop
mov
out
aam
adc
sub
lods
adc
pop
sbb
sbb
loop
lret
outsb
sub
loope
pop
sbb
loopne
ficoms
xorl
ja
lock
cmp
or
pop
mov
or
je
add
sbb
shlb
xchg
sti
jae
pop
iret
jmp
or
les
lds
fists
xor
xlat
movl
loop
mov
add
xchg
pop
mov
test
xchg
pop
xor
sbb
in
sbb
rcll
dec
ja
mov
inc
into
cwtl
or
clc
inc
lods
shl
mov
out
inc
loop
mov
jl
mov
mov
loop
push
es
lods
push
data16
sbb
cwtl
push
shrb
out
int
fcompl
pop
cmp
xor
rdmsr
in
dec
inc
std
mov
cmp
xor
scas
hlt
pushf
dec
add
xchg
into
xor
movsl
cmpb
test
xchg
rcrb
xchg
and
scas
adc
and
jo
and
xchg
pop
jg
ret
cwtl
pop
sbbl
inc
xchg
popl
ret
fmul
lock
mov
hlt
jmp
enter
dec
popa
sbb
cltd
fincstp
in
cmpsb
xor
push
cmp
pop
sbb
cmpsl
testb
aam
lret
test
insl
sub
push
inc
ret
int3
mov
xchg
pop
and
adc
and
add
lea
lea
test
movsl
mov
add
sub
jbe
stos
jp
pop
or
adc
pop
pushl
adc
rolb
scas
push
sub
loopne
xor
push
jp
xor
lea
jge
mov
aaa
adc
clc
lret
sbb
stos
jnp
mov
jo
adc
lahf
popl
test
cmp
pop
sub
cmp
out
jmp
xchg
mov
fmuls
cmp
jne
in
dec
or
cmp
insl
inc
mov
pop
cwtl
sbb
dec
add
push
jmp
fwait
adc
popf
insl
cwtl
cmp
mov
ja
fsub
hlt
mulb
mov
cltd
jno
lret
inc
imul
dec
out
sub
add
mov
adc
movsb
sub
ret
cmp
jbe
lds
sbb
loop
cmpsl
outsl
jae
fstpl
xchg
push
mov
out
fldenv
mov
lods
inc
roll
lods
fldl
pushf
xor
shll
cmp
cli
dec
push
adcl
fisubrs
fcomp
pop
lret
cld
adc
loopne
roll
pop
movsl
mull
adc
mov
dec
es
lea
shrb
shrl
inc
leave
jns
negb
push
cmpsl
jmp
mov
sarl
mov
mov
stc
jp
mov
cmpsl
scas
mov
cmp
cli
ror
sarb
ja
int3
lcall
inc
push
addr16
mov
fwait
hlt
cmp
jle
and
leave
lret
push
aam
inc
pop
xchg
pop
mov
das
repnz
cmpb
cld
loope
pushf
ljmp
hlt
enter
mov
pop
es
insb
sub
pop
push
gs
jl
cmpsb
pop
scas
sbb
out
add
stc
js
pop
out
stc
mov
aam
inc
inc
push
test
repz
push
test
test
cmp
clc
add
jnp
fimull
clc
dec
roll
add
hlt
jbe
jno
push
push
pop
insb
and
in
and
inc
sahf
pop
and
dec
mov
inc
dec
sahf
enter
add
dec
fcomps
into
jae
xchg
jo
mov
push
xchg
in
jmp
rcrl
fdivs
sbb
jge
fwait
loop
jbe
inc
cmp
mov
shl
cmp
mov
movsb
inc
xor
ljmp
bound
lods
jmp
cltd
out
mov
cmp
les
jns
push
and
arpl
punpckhdq
mov
int
xchg
push
mov
sub
fs
movsb
ss
in
sub
pop
sbb
dec
xchg
jb
cmc
mov
ss
and
test
lahf
dec
in
mov
ss
negl
xor
add
dec
jmp
inc
cmp
scas
gs
xor
adc
ss
stos
sti
dec
dec
stc
orl
or
mov
pop
test
mov
cmp
or
xchg
push
push
cld
add
pop
insb
fcompl
add
rorl
stos
lods
dec
in
outsl
nop
out
inc
push
pusha
mov
iret
or
inc
push
in
ret
hlt
repz
rclb
jno
mov
inc
orb
daa
lret
adc
ljmp
loope
and
adcl
aad
cmp
inc
mov
push
sti
pop
fistpl
sub
xor
adc
andb
xor
push
jae
dec
sub
mov
pop
mov
je
adc
inc
sbbl
sahf
mov
lods
mov
pushf
repnz
xchg
filds
pop
sahf
sbb
scas
sarb
xchg
insl
xor
leave
in
mov
xor
mov
ss
adc
add
mov
inc
loopne
lods
adc
loopne
inc
pusha
jmp
gs
fs
mov
xor
mov
stos
dec
stc
adc
adc
pop
adc
xor
sbb
or
fiaddl
loope
jbe
sbb
stos
adc
sbb
xor
jns
xor
fst
ja
imul
sbb
es
lods
movsb
cltd
gs
mov
out
or
sbb
mov
fisttpll
jl
test
or
add
mov
loop
and
fwait
push
mov
pop
in
imul
push
outsl
pusha
jnp
movsl
insb
and
adc
rolb
push
pusha
pusha
mov
js
int3
inc
stc
cli
sbbb
lahf
fdivs
xchg
cmp
mov
cmpsl
mov
daa
fs
mull
xchg
lahf
and
faddl
jle
frstor
pop
sub
and
cli
es
pop
push
and
icebp
scas
pop
jle
cwtl
push
int3
hlt
xorb
xor
push
xchg
dec
or
dec
lock
js
cmp
push
cmpsb
sbb
lret
cli
or
loope
sarb
lods
mov
out
dec
in
inc
ljmp
inc
or
stos
pop
lock
xor
icebp
sbb
jg
into
pop
imul
or
push
jmp
cmp
arpl
mulb
mov
ret
xor
pop
out
scas
int3
fwait
loop
jne
lret
sbb
ds
xlat
xchg
lcall
add
fs
scas
mov
cmc
dec
cwtl
add
incl
shlb
movsb
xor
dec
scas
xchg
xchg
in
pop
adc
cli
pop
cmpsl
pop
stc
inc
jmp
inc
sub
dec
mov
aaa
jbe
and
popa
sti
movsb
push
push
outsb
sbb
fwait
test
iret
rcll
shl
lods
push
mov
jp
out
pop
arpl
sbb
add
or
icebp
nop
or
ficoml
push
inc
pop
inc
mov
in
leave
and
insb
ds
push
popa
pop
test
shrl
fistpl
pop
jmp
fwait
inc
out
arpl
lret
push
push
pushf
push
add
xlat
inc
fwait
mov
fstl
inc
pop
in
jae
pop
cmp
or
into
fldl
mov
cmpsb
cld
mov
push
xchg
leave
cld
mov
and
dec
jb
popf
pop
add
xchg
mov
push
aaa
sbb
lods
fwait
jb
das
pop
push
fidivs
dec
jnp
mov
fldenv
inc
mov
pop
leave
mov
xchg
ss
sub
cmpsb
pop
ret
hlt
ror
lods
in
sbb
cltd
inc
insl
mov
aas
rcrl
dec
stos
cmp
mov
jle
cs
test
fildll
fptan
adc
mov
mov
test
cmpsl
jp
scas
ja
mov
lods
sarl
sarl
jmp
pop
popf
sub
adc
pusha
icebp
inc
jnp
lret
shrb
lea
gs
loop
inc
mov
leave
adc
adc
inc
inc
arpl
add
add
iret
mov
or
es
sub
lea
mov
adc
mov
pop
fbstp
rcrb
data16
xchg
js
pop
ror
in
imul
xchg
adc
or
pop
dec
shlb
mov
imul
cmp
cs
andb
xchg
fwait
sub
jmp
gs
stos
les
rcrl
jg
or
inc
and
xlat
push
ss
mov
data16
cmp
addl
cld
stos
mov
xor
xor
lods
jne
pop
scas
movsl
sbb
push
cmpsb
cmp
rcl
lcall
movsb
or
cmc
fidivl
or
aaa
sbb
cmp
stos
outsl
cmp
mov
and
cmc
jno
fucomp
inc
or
adc
or
xor
divl
stc
rcr
cmpsl
cmp
xlat
filds
scas
decb
sub
push
iret
jnp
cmp
or
mov
mov
mov
lret
add
jmp
das
add
and
cwtl
insb
dec
inc
pop
loope
fcoms
xor
test
out
mov
insb
arpl
mov
jge
insl
xlat
cmpsl
loopne
xor
sahf
pop
stc
mov
cmp
je
xchg
xor
mov
fwait
adc
fisttps
or
js
mov
sbb
mov
fwait
mov
mov
sub
in
gs
ss
aas
iret
push
aad
add
out
cmp
popf
cli
inc
and
inc
iret
int
sbb
cli
lcall
push
shll
sub
mov
sbb
addr16
mov
and
push
into
cmc
fistps
xchg
mov
add
push
iret
inc
xchg
mov
and
sbb
ss
cmpsb
and
jo
dec
push
fbstp
xor
aad
add
adcb
and
push
out
mov
fs
add
stos
jl
outsl
sub
and
cmpl
add
cmp
inc
xchg
or
inc
popa
and
decl
es
mov
pop
sub
fnstcw
rcrl
into
mov
jge
rorb
push
cmp
ja
jnp
pop
push
dec
fsubp
mov
in
aad
or
frstor
push
lods
pop
mov
ret
jle
or
adc
pop
mov
cmp
mov
cwtl
cmc
into
inc
sbb
inc
fidivs
shrb
iret
hlt
jno
jmp
sbb
xor
pop
rcll
je
push
or
mov
xchg
iret
mov
out
f2xm1
stos
jl
xor
loopne
outsb
loope
xchg
jp
clc
pop
jl
xchg
and
les
popa
out
and
xor
jbe
xlat
jge
mov
aam
xchg
in
mov
imul
and
jnp
lret
lahf
jle
outsl
das
push
mov
orl
jne
sub
inc
xchg
add
dec
and
pop
fwait
in
rcrl
pop
inc
fst
sahf
leave
sub
push
enter
sbb
stc
fcoms
call
leave
or
jbe
jecxz
xchg
in
pop
out
jns
xor
mov
addr16
cmp
pop
addr16
cs
cld
cmp
les
adc
lods
in
sarl
xchg
pushf
mov
rcr
push
fcomp
loop
mov
scas
adc
xchg
mov
jns
xchg
les
daa
or
xchg
mov
nop
adc
or
popf
xor
outsb
stc
adc
mov
pop
sub
xchg
rolb
xor
movsl
lea
lret
out
iret
mov
rcrb
nop
fdivr
ds
sbb
pop
ficomps
or
cmp
or
loope
or
setnp
jnp
dec
push
lods
xor
lahf
jl
lods
loopne
jp
mov
cmp
shll
xor
push
out
cli
aam
push
lcall
add
icebp
or
mov
clc
adc
push
insl
push
popf
push
sub
lret
jae
mov
fimull
jae
mov
mov
mov
daa
into
jl
sbb
cltd
cmovns
add
xlat
add
adc
sub
loope
xchg
push
pop
leave
xchg
fisttpl
call
ja
pop
packsswb
pop
jg
mov
repnz
inc
sbb
pop
lds
inc
mov
mov
jne
xchg
or
xchg
or
xor
push
out
xor
jne
rcll
jle
or
add
nop
in
leave
mov
data16
in
mov
lock
lahf
in
dec
fs
xlat
push
cmp
jae
push
out
lahf
pop
lret
insb
add
and
daa
loope
pop
in
add
jg
or
fsubrs
mov
out
mov
jge
lds
sbb
imul
mov
shrb
xor
test
xor
bound
or
repnz
and
filds
xor
mov
cmp
ss
scas
pusha
add
xchg
insb
pop
cmp
cmpsl
sbb
xor
lahf
pop
cmpl
xor
adc
imul
sub
fildll
pop
jl
mov
int3
stc
pop
ss
xor
cmp
dec
dec
mov
add
hlt
cmpsb
cmp
aaa
and
xor
pop
jnp
cmpsl
mov
test
push
jno
add
mov
movsb
jne
lcallw
stos
jle
fsubl
cmp
rorl
sbb
add
jg
pusha
rorl
push
popf
jb
jnp
pop
fs
cmp
lcall
int3
mov
aaa
and
sbb
inc
stos
inc
jg
test
iret
xchg
sahf
in
xchg
scas
insl
dec
out
loop
gs
xchg
loop
pop
xchg
and
ds
enter
test
sbb
pop
fmuls
sbb
fwait
test
jno
jno
dec
movsl
pop
add
dec
mov
repnz
xor
inc
leave
shl
ja
adc
or
mov
rclb
out
pop
jmp
into
clc
stos
cltd
xchg
sbb
push
jae
ret
lret
ja
mov
mov
cmpsb
mov
scas
or
xchg
and
adc
mov
aad
pop
xchg
ja
incl
scas
cmp
cmpsl
pop
adc
mov
inc
lock
cmp
mov
push
clc
jge
xchg
hlt
push
mov
inc
cmp
nop
push
add
or
push
out
inc
mov
test
jmp
sti
iret
dec
xor
xor
imul
leave
fistl
ljmp
mov
mov
xor
push
lock
sahf
inc
lcall
dec
in
jbe
add
inc
inc
mov
mov
ret
sarl
sub
popa
sbb
mul
mov
jno
mov
inc
push
gs
scas
cmp
pop
cltd
int3
insb
pop
shr
ror
shrl
xor
pop
pop
imul
es
push
or
insl
test
jo
push
xor
aaa
rcrl
xchg
jno
adc
out
sub
and
mov
inc
test
outsb
mov
test
nop
or
hlt
xchg
xlat
pop
cmp
shll
mov
dec
aam
adc
mov
push
xchg
fimuls
fstps
cmp
xchg
lock
push
adc
inc
dec
shlb
popa
xorb
loope
mov
sbb
push
xchg
cmp
sub
and
mov
jo
imul
jp
sbb
pusha
stos
hlt
jns
stos
lret
mov
scas
xchg
mov
cltd
mov
insl
insl
pushf
insl
cltd
mov
fwait
das
fnstsw
jp
ror
push
nop
push
dec
sub
nop
cmp
and
mov
and
les
push
add
sbb
insl
je
dec
mov
dec
adc
push
iret
push
cmc
jl
dec
add
sti
test
and
inc
jbe
xor
in
jo
sbb
shr
jbe
test
mov
xchg
mov
into
push
rdpmc
imul
dec
hlt
inc
fmull
or
inc
add
pop
dec
or
sub
pop
icebp
mov
iret
xchg
in
sbb
add
pop
pop
int
test
stos
or
add
fiaddl
sbb
imul
pop
pop
xor
or
xlat
popa
outsl
add
xchg
lea
test
sbb
dec
aaa
dec
jns
hlt
rcrl
aam
loopne
or
pop
lret
lahf
and
xor
inc
push
xchg
ret
ret
enter
lods
loop
xchg
dec
out
and
push
shlb
sbb
mov
arpl
push
leave
stc
xor
sbb
mov
ja
loopne
adc
test
pop
repnz
or
ja
mov
mov
add
add
out
inc
ss
push
pop
push
or
and
jnp
pushf
sbb
push
cld
cmp
div
xor
or
daa
mov
imul
jl
jo
push
movsl
addr16
ror
and
scas
jbe
dec
insl
hlt
xchg
xchg
ret
push
jbe
dec
cwtl
adc
das
mov
popa
das
je
dec
dec
aam
inc
inc
imul
fcmove
jmp
jecxz
pop
jecxz
mov
or
cmpsb
jg
in
int
std
jg
and
push
icebp
xor
mov
test
xor
in
and
jns
sbbb
mov
mov
xor
sub
or
ljmp
in
mov
mov
add
push
jno
repnz
push
ret
adc
sub
mov
fdivl
sahf
cmp
imul
fimuls
gs
sbb
mov
sub
out
dec
andb
jb
dec
sbb
inc
lods
js
lods
xchg
out
mov
pcmpeqd
and
xchg
call
jne
dec
aas
inc
stos
inc
stos
mov
lea
pop
pop
in
scas
repz
lock
push
dec
and
lea
cwtl
add
into
out
ljmp
cltd
aad
xlat
fdivr
icebp
loop
cmp
test
inc
push
das
or
jae
hlt
push
add
orl
inc
inc
pop
stos
xorl
sti
int
ret
mov
cs
movsl
fstps
mov
push
lahf
mov
fstpt
stos
jbe
sub
xchg
ror
sarl
shrb
push
sbb
lahf
fsubl
out
jae
inc
sub
test
loop
jno
or
jo
mov
movsb
insb
es
andl
jno
aam
lock
xchg
cmp
inc
rcll
lock
sbb
sub
mov
scas
in
in
mov
cmp
jp
icebp
mov
adcl
sub
jb
jne
dec
xchg
int
xorb
jbe
sbb
nop
decl
mov
bound
test
ja
cmp
enter
mov
adc
mov
xchg
xchg
sarl
mov
jle
push
mov
scas
int
mov
fmull
jb
ja
mov
shl
call
add
lods
es
aas
in
xchg
icebp
sub
outsl
mov
mov
xchg
pushf
outsl
outsb
sub
subb
mov
std
xchg
push
subl
cwtl
push
dec
adc
mov
push
sub
or
or
mov
lahf
imul
iret
cmp
push
or
jne
ret
int3
sub
pop
stos
ret
push
ja
xchg
hlt
insl
iret
mov
add
std
sbb
cmp
pushf
cmpsl
ret
lcall
das
out
outsb
or
inc
lcall
cmp
mov
mov
pop
lahf
popa
pop
push
mov
xchg
in
jnp
in
or
push
hlt
mov
xchg
out
lret
adc
or
inc
shll
mov
push
mov
sbb
sub
jne
hlt
js
dec
imul
addr16
mov
shll
mov
cmp
push
sbb
cmp
das
shll
mov
es
push
xchg
xchg
repz
dec
or
mov
jg
adc
jnp
ljmp
jbe
pop
and
fisttpll
lods
dec
inc
xor
mov
xor
mov
test
rorb
jg
and
xchg
enter
ret
pop
arpl
addr16
movsb
push
stos
rorl
leave
cmpsb
test
stos
cmpsl
push
les
pop
test
jnp
lcall
shlb
and
sbbb
or
idivl
pushw
cmpsl
mov
push
mov
xor
pop
stc
xor
mov
mov
inc
or
test
adc
jl
adc
jns
jmp
adc
jg
push
pop
jecxz
jle
dec
nop
add
sub
jns
adc
jge
mov
pushf
dec
aas
push
mov
push
jp
cmp
jle
fs
cmp
test
jae
mov
mov
daa
shlb
sbbl
sti
cwtl
or
ficoms
idivb
xchg
inc
or
mov
jmp
inc
dec
repnz
xchg
loop
and
pop
jl
clc
mov
ja
aad
pop
mov
push
adc
stos
daa
pop
mov
jp
inc
les
mov
mov
pop
fiadds
aaa
sub
loop
push
pop
call
push
pushaw
push
ja
lds
leave
jnp
gs
lods
inc
mov
cmc
jp
and
out
xlat
ja
loopne
les
les
jp
movsl
leave
and
mov
dec
and
lods
sbb
sbb
fwait
test
outsb
aam
lcall
or
add
inc
fidivrs
push
sub
sahf
xchg
addb
sbb
fldl
push
fdiv
fnstcw
mov
add
xchg
push
je
jo
in
adc
loopne
mov
jbe
sub
mov
call
ret
imul
inc
mov
lods
sti
xor
pop
adcb
cmp
inc
cmpsb
cmpsl
ja
mov
mov
jmp
pop
xchg
adc
cmp
lcall
mov
inc
pop
cmp
jecxz
xchg
adc
sub
xor
and
xor
aad
push
js
mov
test
or
pop
int
mov
mov
mov
into
ret
xchg
push
cmpsl
push
xchg
inc
mov
negb
pop
jnp
in
cli
dec
inc
pmulhw
mov
dec
and
pop
icebp
xor
pop
bound
shll
test
fistps
insb
out
bound
xchg
pop
xchg
movsl
push
je
xchg
stos
sbb
sub
mov
jbe
or
je
and
mov
or
mov
popf
jae
aam
sub
loope
test
inc
ficoms
xchg
or
xchg
jl
sub
mov
cld
sbb
mov
rorb
mov
mov
lahf
xchg
inc
insl
push
loop
dec
mov
push
lods
scas
fnstsw
mov
std
fldcw
xchg
in
popa
jne
scas
cmp
les
fistpl
adc
popa
push
push
inc
or
imull
mov
std
xchg
and
jb
ret
cmpsb
sti
movsb
cmp
movsb
push
loope
add
adc
popf
jno
jg
pop
cld
in
xor
xchg
sub
sbb
jl
xor
jb
pop
arpl
negb
scas
xor
shrb
mov
add
jg
push
ljmp
cmp
movsb
mov
imul
dec
push
movsb
clc
dec
push
packsswb
dec
insl
or
pop
stos
sbb
int3
cmp
scas
push
jp
addr16
roll
enter
test
je
lret
cld
mov
mov
jecxz
test
jbe
sbb
cmc
jmp
mov
popa
jo
lock
mov
mov
jmp
fnstenv
jns
sahf
cli
push
jg
stos
int3
call
repnz
jb
imul
scas
mov
out
hlt
adc
cltd
shll
ljmp
cmp
aaa
jge
push
mov
stos
cmp
cs
cmp
dec
mov
dec
add
push
inc
mov
mov
mov
mov
stos
fsubrs
test
mov
jecxz
fwait
popa
stc
mov
shlb
aam
adc
out
out
fstl
inc
pop
add
and
imul
pop
mov
data16
xchg
xchg
test
mov
outsb
movb
aas
test
hlt
xchg
cmp
test
or
fsubl
lods
add
insb
insl
or
mov
pop
mov
popf
dec
in
ret
xor
dec
inc
ja
mov
mov
sub
stos
dec
inc
inc
leave
mov
data16
add
or
call
test
test
stos
out
addb
popf
ret
push
fwait
xchg
sbb
stos
sbb
xlat
xor
xchg
cltd
mov
mov
fldenv
and
pop
int3
ret
pop
inc
fbstp
dec
into
sarb
shrl
and
fs
leave
or
or
cs
rcr
push
out
pop
out
pop
rorl
aam
cmp
sub
aaa
fidivs
ja
sbb
push
repnz
and
sub
xchg
push
cmpsl
mov
arpl
adc
dec
fnsave
notb
lods
cmp
bound
add
movsb
inc
dec
xchg
pusha
popa
mov
imul
pop
cmp
cld
imull
cmpsb
push
and
or
std
mov
lods
js
stc
icebp
cmpsb
sbb
adcl
movsb
inc
pop
push
dec
xchg
inc
cmp
push
cli
and
inc
loopne
mov
jnp
xor
jl
sbb
ljmp
outsb
cli
mov
orl
pop
fstp
inc
push
jl
push
jg
or
mov
and
jns
movups
insb
loope
push
cmp
adc
std
pop
sub
dec
mov
sub
xor
out
testl
sub
jmp
cs
in
jg
dec
scas
or
cltd
jae
imul
fidivrl
out
inc
push
je
jno
in
lret
mov
cmp
gs
call
sbb
movsb
pop
mov
or
and
sub
inc
into
in
sarl
pushf
jl
xor
cmp
rcll
cmp
pushf
in
xchg
je
aaa
inc
mov
push
into
pop
sub
iret
cmp
sub
inc
or
adc
test
dec
mov
lcall
sub
das
mov
or
scas
les
sar
jo
cwtl
or
mov
scas
jg
mov
fistpll
sar
orl
sbb
push
das
inc
scas
jo
pop
gs
xchg
int
dec
pop
test
and
sbb
push
fisubrl
in
jbe
sbb
cmp
push
aaa
push
insl
fistpll
in
mov
and
xor
sub
ret
lret
ja
nop
mov
pushf
std
mov
loop
fldcw
pushf
enter
push
rcrb
movsl
addb
cwtl
stos
sbb
aam
jb
les
int
mov
add
in
out
or
adc
pop
lock
mov
mov
pop
out
lock
mull
mov
cmpl
push
mov
add
dec
or
jbe
test
ss
mov
shll
sub
or
scas
dec
inc
pusha
xchg
in
data16
jge
addr16
shlb
rcl
cmp
out
fsts
inc
imul
cmpsl
fcmovne
mov
lahf
out
faddp
fdivl
aaa
sbb
fsubp
jnp
jecxz
leave
mov
sbb
mov
lods
repnz
dec
insb
pop
mov
or
sahf
jle
imul
jp
dec
pop
popa
and
dec
cs
xchg
jg
in
push
ficoms
cmp
cs
and
les
mov
sbb
fcomi
jl
nop
ljmp
dec
push
lret
pop
sub
xor
mov
mov
mov
inc
out
ss
scas
xor
add
insl
adc
mulb
push
icebp
in
addl
add
frstor
inc
dec
addb
mov
mov
lds
adc
int3
mov
ljmp
int
sub
pop
xor
xchg
sahf
dec
adc
test
leave
or
mov
rcrl
and
or
mov
sub
mov
mov
and
loop
and
sbb
dec
daa
cwtl
jnp
repz
jbe
fldl
bound
pop
arpl
or
aad
fidivl
push
jo
jle
jo
sbb
imul
loope
daa
dec
subb
cmp
in
es
cmc
adc
add
jb
bound
dec
fiaddl
addl
or
dec
adc
ds
xlat
sub
or
neg
inc
js
rcrl
fwait
dec
jo
and
xchg
in
push
lock
jne
ds
dec
cmp
xlat
pop
dec
in
std
push
cmovnp
push
bound
fidivrs
enter
test
outsl
mov
mov
fdivs
int3
fisubs
inc
in
lds
inc
adc
in
shl
jecxz
adc
outsl
jo
pop
ret
and
mov
sub
rolb
cmovle
fidivs
rcr
jl
scas
enter
in
xchg
loope
in
rolb
pop
xor
pcmpeqw
cmp
loopne
mov
lods
mov
cltd
sahf
adc
rcll
mov
lahf
or
jge
lret
lods
in
push
and
or
xlat
loopne
lret
mov
jg
inc
in
jnp
adc
cmp
out
pushf
jo
jbe
fsub
shrl
shl
loopne
ret
popf
or
jne
adc
je
rcrb
pop
mov
js
mov
pop
pushf
lahf
mov
nop
adc
push
loop
add
mov
push
roll
iret
es
push
scas
sbb
cld
aad
mov
inc
es
or
jb
xchg
jl
or
add
stos
int3
iret
mov
lods
es
xor
repz
sbb
outsl
jmp
movsl
mov
mov
negb
mov
mov
mov
lea
rorb
enter
fsubl
pop
lret
push
std
andb
mov
sub
or
adcl
dec
pushl
clc
push
sbb
mov
cli
fucomi
daa
gs
imul
pop
adc
mov
mov
fs
icebp
add
cld
lods
push
stos
lahf
repz
jbe
ror
push
aad
add
pop
rdtsc
mov
test
dec
sbb
mov
sbb
std
lds
inc
mov
mov
lea
xchg
int3
lea
xchg
insl
jl
push
and
idivl
imul
mov
xor
loope
in
in
xor
xchg
dec
in
frstor
push
js
mov
and
pop
sub
xor
out
pop
lock
loope
sahf
ret
and
shll
clc
pushf
sub
enter
sbb
call
cmp
out
dec
sbb
ljmp
inc
out
mov
loop
jo
or
clc
bound
out
jns
mov
pusha
mov
scas
push
int3
lods
inc
rcrb
ss
push
inc
es
sbbl
dec
add
in
xchg
dec
cmp
lock
cs
enter
es
ret
add
aas
and
clc
clc
add
sbb
push
or
loope
repz
iret
ds
sti
push
xchg
clc
stos
ret
push
push
shrb
sahf
lock
pop
push
add
cmp
fwait
sub
lret
insl
push
or
add
movsb
notb
icebp
out
mov
or
int3
icebp
scas
pop
mov
pop
ljmp
xchg
dec
insl
cmpsb
cmp
stos
inc
pop
out
out
and
adc
dec
cmc
mov
sbb
jo
fpatan
out
cmp
sbb
mov
int3
pop
call
cli
push
shll
addr16
test
xor
inc
fwait
je
jae
pop
or
cld
mov
movsb
loop
lea
mov
cltd
inc
lea
mov
ja
test
push
adc
push
or
je
shll
mov
xchg
dec
lock
inc
pop
pop
mov
test
nop
xlat
out
outsl
subb
dec
xchg
scas
lea
push
jo
icebp
inc
addl
sub
outsb
mov
shrb
inc
cltd
sbb
lcall
or
dec
jno
aas
clc
jg
in
movsb
cwtl
xor
mov
push
gs
cltd
jns
fs
or
lods
ret
lret
push
and
xor
pop
mov
icebp
xchg
int
aas
mov
hlt
or
xor
push
clc
jge
inc
dec
adc
out
jno
iret
fstpl
jg
xchg
adc
mov
mov
testb
scas
xchg
lahf
xorb
mov
push
flds
stc
pop
cmp
cmp
jb
inc
fucomi
aad
push
out
push
fisubrs
jno
mov
mov
sbb
jge
stc
push
jne
pop
inc
imul
inc
mov
mov
xor
and
lcall
add
pop
jg
push
mov
stos
cmpsl
cmp
aaa
push
sub
inc
sarb
sbb
cltd
aad
sub
xchg
mov
jl
fwait
cmp
inc
out
xchg
mov
mov
or
mov
insl
int
push
cmp
ja
cli
inc
mov
gs
xor
inc
test
xchg
fldcw
mov
xchg
xchg
mov
dec
cmp
cs
lods
inc
xor
and
mov
mov
clc
and
push
cmp
iret
push
shl
or
adc
cld
xlat
int3
sbb
mov
cmpsl
out
add
and
inc
popf
clc
fistl
roll
dec
mov
push
adcl
mov
aas
cmp
test
test
sub
pop
incl
movsl
xor
add
pop
adc
in
in
lock
aad
sbb
les
dec
stos
push
lea
js
push
pop
lods
add
subb
ljmp
mov
sub
adc
xchg
lds
jae
retw
loope
xor
sbb
les
rorl
and
lahf
sbb
or
cs
mov
stos
gs
shll
shlb
mov
cmp
or
mov
mov
fildll
sbbl
lods
cs
push
je
mov
cwtl
and
dec
sti
push
xchg
mov
test
sti
inc
or
and
adc
push
adc
bound
test
and
pop
sub
pop
inc
addr16
pop
or
outsl
scas
pop
scas
sti
gs
cmpsl
js
mov
in
cmp
fiadds
stos
movsb
mov
lock
shll
lds
fwait
jl
push
sbb
rorl
mov
nop
repz
in
jge
stos
fstl
cvttps2pi
mov
insl
test
mov
idivb
cmp
jecxz
add
fildl
mov
mov
cltd
mov
addb
fwait
dec
pop
push
fstps
push
mov
loop
xchg
bound
in
mov
addb
cmp
pop
xor
leave
sbb
cmpsb
pop
enter
test
push
lock
push
pop
shll
aas
mov
repnz
mov
cmp
add
sti
pop
sahf
and
fwait
inc
cmp
inc
out
lahf
mov
or
sti
repz
orb
pop
lods
add
xor
mov
pop
jnp
cmp
sub
or
and
imul
push
arpl
mov
sbb
inc
into
push
loop
adc
sub
jmp
xor
mov
jp
lea
je
movl
fimuls
push
jo
rcr
xchg
shlb
pop
notb
std
inc
pop
cmp
and
test
and
jg
push
sbb
cmpsl
cmp
rclb
testl
fwait
bound
lock
pusha
xchg
xchg
mov
arpl
popf
pop
imul
pop
lea
jecxz
add
xchg
push
test
cwtl
sub
loopne
dec
ss
or
and
xor
mov
call
sbb
mov
sub
or
cmp
sar
js
mov
xchg
pop
mov
ljmp
lods
dec
ja
fisttpl
incb
cmp
scas
mov
dec
jnp
or
mov
pop
inc
negb
xor
test
and
sub
adc
mov
adcb
mov
mov
and
test
mov
lock
inc
mov
loopne
jle
fistl
sahf
mov
or
jp
jecxz
clc
popa
movsl
aad
cmp
mov
cmp
scas
aas
insb
sub
push
lret
push
leave
les
pop
test
leave
mov
sub
sbb
adc
mov
xor
sbb
sbb
mov
dec
jo
arpl
or
mulb
addr16
loopne
int
fdivs
mov
cmp
xor
jmp
sbb
sub
jo
lcall
add
cmc
cld
inc
inc
or
mov
jb
xchg
addl
jb
mov
xlat
mov
pop
rcrl
cs
jb
popa
mov
push
iret
imul
pop
inc
dec
pop
fdivrl
imulb
xchg
push
cmp
xchg
sbb
int3
cpuid
push
xchg
add
pop
fistpl
or
iret
movsl
mov
mov
fsts
scas
sbb
sub
loope
mov
mov
jl
cmp
jle
mov
adc
jae
pop
push
add
or
push
pop
test
add
cmp
inc
dec
aam
dec
inc
dec
mov
popa
enter
ss
add
lock
cld
adc
jns
andl
pop
jl
sti
xchg
or
cmp
rcl
mov
aad
insl
mov
or
pop
or
xchg
jnp
jne
or
aas
ret
iret
mov
inc
cmp
mov
cwtl
cmp
push
ret
scas
fstpt
dec
rclb
mov
movsb
arpl
dec
mov
movsb
jl
loope
hlt
push
push
insb
cmpl
xor
repz
push
jnp
jno
jle
dec
outsl
add
pop
int3
mov
lahf
mov
dec
mov
mov
cld
lods
rcrb
mov
push
mov
aad
push
pop
jl
or
sbb
and
loopne
xor
dec
int3
jnp
cli
jge
xor
mov
and
push
add
andl
aaa
sbb
cmp
dec
xchg
mov
aam
test
mov
dec
shr
scas
in
xchg
mov
jl
subl
and
loop
pop
out
ljmp
clc
add
sbb
add
dec
mov
dec
mov
addr16
pop
push
addr16
js
mov
add
cmp
or
mov
dec
roll
pop
insb
mov
inc
clc
and
push
adc
ss
jge
push
jae
movsl
dec
imul
dec
or
movsl
sbb
fsubs
adc
lret
fcomps
clc
andl
ss
clc
idivl
jp
je
rorb
mov
call
jle
mov
adc
mov
out
sub
jmp
into
jno
cmp
aam
leave
fcomps
sub
stos
or
lret
cmp
jbe
cmp
ret
adc
imul
adc
je
add
arpl
push
out
fistpl
sahf
jp
fwait
push
and
in
lods
mov
neg
fsubr
aad
mov
enter
jl
mov
jmp
mull
cli
dec
cmpl
dec
pop
sbb
jecxz
inc
dec
cmp
sbb
movb
push
and
jae
pop
dec
das
push
dec
out
and
pop
xlat
daa
pop
outsb
xchg
xor
je
jns
lea
and
inc
and
repz
mov
addr16
jp
xor
fists
test
int
stc
and
or
push
fidivl
adc
arpl
out
push
mov
mov
rcrb
mov
pop
push
cmpsl
sub
rorb
les
cmp
xor
jecxz
pop
add
cmc
inc
dec
cmc
out
dec
jns
sbb
push
mov
stc
int3
dec
movsl
filds
call
cs
rorb
ja,pt
int3
lock
aad
xor
xor
daa
clc
cmp
pop
mov
pop
stc
sub
push
sar
pusha
addr16
pop
mov
popa
inc
jecxz
jb
mov
lahf
xchg
inc
fmuls
mov
call
mov
stos
sub
lret
push
sub
or
adc
stc
jno
das
ss
cli
icebp
adc
or
jl
inc
lret
push
sbb
inc
loope
mov
sbb
dec
cmp
or
in
roll
cltd
push
xchg
sbb
into
sub
enter
adc
sbb
push
sbbb
js
or
xlat
ss
pop
dec
add
pop
jg
dec
and
into
xchg
es
lret
push
rcrb
sub
xchg
les
and
mov
push
scas
xchg
pop
push
mov
cmpsb
lcall
sahf
das
add
jle
std
stos
mov
inc
sbb
outsb
imul
nop
data16
mov
in
dec
sub
cmc
cmp
add
stos
aas
arpl
cmp
cltd
mov
out
stc
repnz
sub
jg
imul
lods
pop
xchg
inc
cmp
add
test
mov
push
fimuls
out
push
movsl
sbb
adc
lods
pop
inc
push
cmc
and
std
jno
mov
mov
cmp
xor
adcl
int
mov
into
or
push
jns
out
push
xlat
int3
jno
es
pop
fld
cld
mov
mov
insl
jge
xlat
insl
mov
sbb
jecxz
xchg
xlat
mov
sbb
pop
cld
mov
ret
scas
in
sbb
inc
and
xchg
mov
sahf
test
arpl
sbb
add
xchg
mov
fwait
mov
stos
adcl
int
cwtl
jne
sub
rclb
aam
setne
add
sbb
dec
daa
cmp
aaa
mov
ja
mov
icebp
cmpsb
mov
popf
scas
test
pop
pushf
jno
sub
sub
in
xor
outsl
popf
cmpsl
pop
mov
xor
test
push
jmp
push
stos
dec
inc
pop
aad
xchg
fldenv
xor
test
dec
roll
daa
fs
cltd
sub
aam
pop
add
dec
sub
jl
ss
dec
insb
daa
cwtl
outsl
ds
mov
pop
xchg
xor
pop
cld
out
fcoms
sti
int3
sub
push
mov
mov
mov
mov
stc
jp
stos
mov
push
rcrl
loopne
sub
int
push
stc
mov
scas
push
insb
push
leave
xchg
wrmsr
jecxz
add
enter
add
cmp
push
into
and
xor
push
popa
dec
pop
xor
xchg
and
push
xchg
insb
push
into
outsl
movsl
sti
lods
mov
inc
gs
loopne
or
pop
fwait
mov
xchg
insb
sar
xchg
rcr
mov
pusha
adc
cmp
scas
outsl
cmc
scas
popa
sub
fstps
adcl
adc
add
sti
add
mov
jbe
inc
cmp
lcall
pusha
dec
loopne
xchg
loopne
push
fildll
test
dec
xchg
xchg
or
ljmp
inc
sbb
pop
pop
mov
dec
sub
cmpsl
sbb
push
cmp
iret
xchg
inc
leave
xor
add
sub
cwtl
sbb
addr16
ljmp
add
rcl
popa
mov
add
add
inc
sub
test
xlat
mov
jmp
icebp
cltd
dec
das
fwait
mov
pop
aad
mov
pop
loope
sub
test
mov
sub
scas
insb
mov
popf
ss
jnp
aaa
kaddw
adc
xor
adc
pusha
xorb
pop
arpl
jecxz
push
cmp
or
jns
stos
mov
stc
ss
sub
ss
std
xchg
bound
sbb
push
cmp
outsl
xchg
and
mov
mov
roll
or
cmp
or
pop
sbb
push
stos
icebp
cmp
xor
and
fbstp
sub
add
dec
cmp
insl
mov
insb
xchg
push
pushl
push
pop
sbb
gs
int
inc
jecxz
push
test
or
stc
jo
addr16
in
pop
sub
push
ljmp
inc
and
scas
fildl
ds
aaa
jb
xor
sti
adc
in
shll
push
inc
dec
mov
testb
out
pushl
xchg
add
adc
test
mov
pusha
sbb
insb
push
mov
inc
negb
stos
dec
jnp
mov
stos
sub
jns
mov
clc
adc
pop
jno
mov
jb
jbe
daa
jnp
and
loope
fcomps
dec
or
add
sbb
or
inc
sti
test
mov
nop
xchg
mov
xchg
push
out
and
frstor
fistpl
ja
das
xor
cmpb
aas
mov
fdivp
je
cld
andl
movsl
xchg
add
xor
sbb
outsl
and
add
pop
sbb
xchg
pop
adc
and
ss
stos
push
xorb
scas
insb
sbb
rolb
dec
shlb
cmpsb
xchg
mov
outsl
adc
dec
pop
cwtl
mov
insb
or
mov
mov
out
add
sub
mov
lods
adc
mov
cmpsb
adcl
fsts
xor
mov
mov
aaa
enter
stc
in
cs
xor
gs
call
pusha
jnp
loopne
xchg
out
add
gs
push
and
call
outsl
mov
cmp
xchg
divb
lret
pop
sbb
mov
stos
insl
adc
cmc
inc
push
push
inc
ds
bnd
adc
outsb
cmpsb
ss
jp
test
mov
dec
stos
sub
push
test
dec
sti
mov
push
scas
sti
mov
mov
mov
push
outsb
adc
cs
test
or
fnsave
sahf
pop
aad
test
jmp
pop
in
mov
lods
leave
in
clc
jno
add
fsubr
js
in
fwait
push
cs
add
test
int3
das
sub
aam
call
fucomip
hlt
dec
sub
out
repz
cltd
in
add
popf
cs
fbld
mov
and
push
or
xor
std
pop
movsl
push
pusha
stc
aaa
cltd
sbb
mov
mov
jbe
jns
mov
ds
cmc
fwait
testb
jns
mov
push
or
pop
sbb
mov
push
push
jne
dec
push
outsl
or
into
mov
scas
lret
mov
add
mov
inc
dec
mov
loop
call
clc
hlt
push
or
clc
lahf
cmp
andb
sti
sbb
mov
xor
sbb
inc
sub
sub
cli
repnz
adc
mov
mov
dec
push
jo
in
rcrl
inc
cmp
adc
sub
test
or
arpl
ljmp
mov
and
inc
sub
addr16
xchg
mov
jbe
nop
inc
xchg
sbb
xchg
cmpsb
data16
cmp
enter
out
ret
popf
sarb
or
pusha
mov
jnp
dec
add
in
jecxz
pop
sbb
mov
jno
es
xchg
shrb
movsl
push
mov
mov
ja
repz
or
std
shl
xor
adc
pop
je
xor
in
inc
leave
pushl
cmp
sub
fisubl
leave
rol
jo
nop
jp
rorb
mov
jnp
cmp
cwtl
mov
xor
jmp
dec
in
fwait
sbb
mov
xchg
mov
cmc
jle
andb
icebp
dec
and
sahf
cmp
add
gs
in
inc
dec
repz
lret
adcb
lea
xor
mov
outsb
or
mov
and
aam
rcr
cmp
mov
xchg
inc
into
aad
push
fld
daa
cmp
fs
sbb
mov
xchg
stc
outsb
jns
jecxz
popa
popa
lcall
sub
cs
lahf
inc
lahf
test
pop
sub
std
add
inc
push
inc
jb
ret
in
push
jnp
ret
pop
add
test
mov
scas
inc
das
sub
jge
cmp
aam
out
sub
call
outsb
inc
push
cwtl
mov
out
rcrl
pop
ja
push
adc
lcall
pop
jns
dec
push
adc
test
cmpsl
aas
outsl
mov
in
out
sbb
insl
inc
cs
jecxz
pushf
push
repnz
inc
scas
dec
aad
sub
popa
ljmp
cmp
outsb
push
or
dec
test
scas
xor
mov
inc
and
push
add
push
fnstenv
cmpsb
xlat
add
push
sub
loop
neg
push
push
inc
inc
inc
scas
into
hlt
fwait
pop
sahf
in
dec
push
ret
push
add
pop
add
xchg
cmc
inc
hlt
mov
cwtl
xchg
mov
sub
and
cmp
mov
push
cmp
ds
pusha
inc
aad
cmpsb
dec
imul
fdivl
repnz
gs
cmp
mov
dec
xchg
adc
and
icebp
jns
stc
mov
jge
push
adc
not
mov
sub
jge
mov
pop
mull
and
mov
loop
insb
packuswb
or
sbb
add
rcr
sbb
std
in
inc
add
push
add
jae
es
movsb
lret
fisubs
pushf
sbb
xchg
push
push
insl
jle
call
test
div
mov
test
dec
sub
push
shll
add
scas
pop
addb
loopne
cmp
add
int
ljmp
push
and
add
mov
sub
jecxz
jle
mov
pushf
push
jcxz
neg
fnstenv
cwtl
jno
pop
sbb
mov
cmp
pop
outsl
and
push
ret
mov
les
jle
mov
dec
sahf
addb
xchg
inc
movsl
insb
pop
jae
lret
cs
add
sbb
jle
add
mov
je
xor
dec
mov
bound
repnz
insb
pop
push
sub
mov
fbstp
incb
sbb
popf
xorb
test
and
mov
cltd
shl
pop
outsl
xchg
fs
insb
rcl
mov
and
adc
inc
jle
aad
pop
jae
and
orl
mov
das
push
jl
sub
mov
jae
push
mov
jge
repnz
cs
adc
pop
sub
push
mov
sub
xor
outsb
mov
lods
pop
and
andl
jmp
push
adcb
or
inc
fs
out
fldl
fcmovne
out
lcall
dec
sbb
into
enter
push
and
xchg
inc
push
imul
dec
test
sarb
dec
cwtl
mov
fldenv
test
cmp
dec
mov
add
outsb
add
xor
bound
mov
rolb
pop
jno
repz
pop
and
xor
jp
inc
insb
fstps
mov
aad
shlb
jno
inc
loop
in
ljmp
sbb
xchg
xchg
xchg
jo
out
mov
sarl
arpl
mov
mov
mov
mov
adc
mov
jno
out
insl
pusha
leave
mov
test
test
or
test
es
orb
ljmp
cmp
mov
mov
or
cmp
loop
dec
xor
or
out
rcrl
iret
clc
clc
call
xchg
and
mov
ret
mov
roll
movsb
add
adc
imul
pop
lcall
xchg
idivl
mov
inc
mov
in
jecxz
inc
test
and
mov
ljmp
mov
xchg
pop
test
loope
repnz
sti
bound
mov
add
add
jns
into
fsubl
mov
push
pusha
fdivp
sbb
mov
pop
or
in
mov
jo
jmp
push
sti
xor
in
add
push
dec
cmp
test
pop
sahf
and
and
push
sbb
lret
adc
jmp
inc
dec
ss
nop
inc
mov
add
mov
cmp
xchg
cmc
fwait
cmc
pushf
mov
rclb
xor
mov
mov
push
in
mov
xchg
jne
jno
into
sbb
rcll
loope
jno
lock
adc
mov
push
fdivs
xchg
dec
das
lock
push
pop
add
cli
mov
aam
sbb
mov
std
out
decb
mov
pop
cld
push
xlat
cwtl
and
ss
pushf
sbb
idiv
pushf
sbb
loop
aad
aas
pop
add
adc
xlat
negl
mov
sbb
outsb
stos
inc
sti
cli
std
cmpsb
xchg
push
add
popf
not
mov
cmp
or
push
push
adc
stos
movsl
xor
fiadds
jb
jle
inc
mov
arpl
mov
dec
cmp
call
lahf
push
or
mov
stos
xlat
cmp
pop
out
sub
jb
int3
mul
cmp
arpl
sarl
mov
enter
push
push
jb
js
mov
xlat
jge
or
ljmp
popa
jns
je
stos
repnz
test
fs
outsl
ds
pop
adc
mov
or
mov
and
cltd
mov
lret
mov
mov
sub
inc
std
or
ljmp
leave
movsl
xchg
mov
fiadds
test
jmp
cld
dec
jbe
push
imul
ss
ss
stos
dec
xchg
mov
jne
in
cmp
push
lret
mov
into
push
cmpsl
clc
pop
ret
add
jno
pop
cmp
das
fisubl
pop
lahf
fcoms
testb
pop
jae
jl
xor
adc
push
adc
jne
sub
pop
or
loopne
inc
adc
stos
ret
subb
fld
xchg
mov
mov
aad
pop
pop
ret
mov
jae
repnz
and
sbb
les
xchg
in
sarb
pushf
sahf
cli
out
jb
jns
mov
or
mov
adc
sub
aaa
sbb
notb
gs
push
or
or
cmp
aad
int3
stos
enter
xchg
aas
mov
cmpsb
dec
aam
mov
adc
fsts
syscall
cmpsl
jae
xchg
cmp
mov
push
sbb
xchg
subl
lods
shl
aas
aas
add
jo
ljmp
push
adc
sbb
lret
aad
mov
sahf
pop
lret
add
mov
lods
pop
push
adc
push
mov
pop
push
and
mov
sub
lock
sub
add
pushf
aas
mov
cld
fildll
xchg
adc
aad
sti
add
hlt
mulb
cmp
xlat
cmp
ljmp
jnp
sub
adc
clc
stos
dec
adc
dec
jno
cmp
outsb
cmp
leave
sub
sbb
inc
jo
jmp
lret
movsl
daa
dec
lahf
xchg
test
test
repnz
ja
pop
imul
push
ja
aad
cs
and
push
or
dec
icebp
and
cld
lret
test
sti
or
fidivs
pushf
shl
sbb
mov
scas
cmp
jp
pop
push
pop
add
mov
xchg
adc
imul
in
cmp
push
popl
push
lods
push
mov
mov
clc
jmp
and
out
std
mov
insb
mov
lahf
imul
lods
ljmp
ror
fisubs
mov
push
sar
sarb
sub
jmp
or
daa
push
or
pop
repz
cmp
inc
loope
mov
stc
inc
mov
popl
adc
mov
gs
enter
cwtl
sbb
jbe
sbb
ljmp
dec
xchg
mov
push
xor
sub
sub
outsb
fmuls
cmp
pop
cmc
popf
aaa
xchg
adc
dec
add
xchg
into
mov
push
imul
addr16
add
mov
in
std
fwait
dec
sti
pop
push
repnz
ret
dec
adc
push
xor
dec
pop
dec
push
jge
xchg
test
mov
mov
dec
std
sub
inc
mov
stos
push
mov
xor
out
je
sar
repnz
fiaddl
fs
adc
imul
push
jecxz
addr16
pop
shl
mov
repnz
xor
repz
adc
fstps
sbb
popa
out
mulb
mov
add
sub
mov
xor
je
mov
push
xor
adcl
cmp
outsl
mov
movsl
mulb
into
cli
cmp
fistpll
sbbl
sub
mov
loopne
les
out
leave
push
lret
andl
js
add
mov
lods
inc
js
pop
aam
bound
movsb
je
adc
and
out
mov
fldl
cmpsl
in
mov
add
out
or
fimuls
loope
bound
cwtl
dec
ss
out
pop
fs
cld
dec
jno
pop
lods
js
roll
jne
jno
lret
enter
jo
fs
sbb
ret
data16
inc
and
mov
and
dec
enter
adc
adc
mov
dec
loopne
pop
push
orb
cmp
xchg
mov
cwtl
mov
lcall
iret
lods
inc
cmpsb
and
enter
xor
test
mov
inc
je
dec
cmpsb
outsl
push
lret
lea
leave
fnsave
outsl
shlb
movsb
in
mov
jb
ret
add
pop
jb
xor
and
xchg
sti
sbb
cmp
sti
pop
movsb
xchg
push
mov
sbb
incl
push
jecxz
dec
xor
ret
adc
fiaddl
xchg
fmull
xor
rcr
test
mov
jno
xchg
inc
adc
clc
fiadds
jmp
push
popa
test
btc
push
std
test
dec
or
inc
stc
ljmp
add
lcall
jb
cmp
pop
nop
jae
sar
mov
jmp
arpl
mov
test
test
mov
pop
xchg
insl
xchg
cli
call
xor
in
aas
cs
mov
jle
pop
ficoms
sub
push
jno
xchg
push
mov
push
inc
loope
or
int3
pop
cs
repz
jne,pn
repz
roll
push
mov
fstps
ret
popf
mov
rcrl
sub
aaa
xor
lods
mov
pop
add
sbb
adc
xor
or
jp
ljmp
push
fistl
pusha
lods
enter
cltd
jl
adc
jae
pop
lcall
in
xor
cmp
movntps
outsl
into
shl
and
cmpsb
out
jae
xchg
test
push
jae
add
movsb
add
ljmp
jecxz
mov
mov
jnp
jo
sti
insl
hlt
ja
ret
cmp
test
clc
pop
add
adc
or
add
inc
xor
push
sub
cmp
sbbb
jae
pop
in
xchg
push
mov
rolb
daa
add
into
lea
mov
cmp
clc
xor
mov
inc
jl
arpl
inc
js
outsl
xchg
fdivl
cltd
shr
mov
mov
call
imul
push
scas
pop
in
pop
shlb
cmp
in
das
test
out
sbb
or
repnz
push
inc
mov
jae,pn
dec
inc
adc
cmp
sete
add
cld
js
sbb
cmpb
push
dec
jno
sarl
xchg
sbb
fsubrp
lods
in
mov
sbb
gs
mov
jp
mov
lea
ja
adc
mov
jbe
add
dec
test
movl
sub
cltd
cwtl
adc
xchg
adc
cmc
lahf
cltd
mov
adc
mov
sub
dec
mov
loopne
adc
push
neg
dec
mov
push
dec
stos
ret
jle
movsl
pop
xchg
sub
xchg
mov
pop
and
mov
bound
xchg
pop
subb
aaa
lahf
sbb
lock
jmp
outsb
pop
test
xor
sub
mov
push
cwtl
jb
aaa
dec
outsb
mov
add
aam
fsts
js
cs
sub
cmp
adc
shll
imul
jge
lret
div
fdivrl
mov
mov
out
adc
inc
add
add
push
mov
sub
into
sbb
sub
std
mov
cmc
jge
mov
pop
and
test
mov
pop
cmp
cmp
push
imul
jge
ds
adc
enter
popf
xlat
push
aaa
jp
sub
dec
push
mov
fnstsw
in
jmp
mov
cmp
push
fwait
or
pop
or
xchg
shr
leave
push
lcall
sbb
es
dec
sbb
test
sti
add
push
roll
pop
push
lahf
bnd
lods
xor
cs
push
fs
out
rorl
sub
insb
or
gs
xor
mov
flds
sahf
or
outsl
out
sub
loop
es
xchg
push
cmp
bound
and
fisubrl
incb
sbb
jo
push
dec
shl
push
shlb
rclb
or
dec
and
imulb
pusha
mov
mov
xlat
adc
rcrl
mov
jle
cld
xchg
push
xor
sub
mov
in
mov
mov
lods
enter
xlat
test
je
jg
mov
inc
xor
inc
shlb
cld
add
sti
or
adc
cs
std
bnd
pushf
sbb
stos
sbb
rolb
out
lock
lods
insb
fdivr
or
les
add
icebp
dec
es
dec
push
adc
dec
js
cmp
loope
pushf
jno
xchg
jge
ljmp
pop
xchg
mov
mov
pop
ja
jns
in
and
cmp
cmp
pusha
lcall
or
mov
je
jl
xchg
push
arpl
insb
adc
jno
call
push
cmpsb
loopne
add
call
test
and
pop
lahf
ds
sti
enter
lret
pop
mov
lods
xchg
xchg
nop
mov
dec
lret
push
es
test
rcll
and
mov
rclb
jl
mov
dec
sub
dec
fldcw
rolb
rolb
cmp
aad
rclb
out
pop
cmpb
in
negb
jb
mov
int3
fwait
xchg
push
lods
add
xor
ficoms
sahf
inc
aas
add
jo
lock
shlb
int3
pop
shrb
mov
js
dec
sar
push
mov
dec
lock
add
xor
pop
push
rcl
test
loope
push
loope
push
jmp
in
dec
xor
xor
push
jne
dec
out
cwtl
push
and
inc
xor
pop
mov
in
mov
mov
call
push
xor
dec
mov
adc
cmp
mov
fucomp
push
pop
push
add
insl
ret
pop
bound
dec
fs
int3
jge
je
adc
lret
jo
inc
in
push
sahf
pop
mov
repnz
xchg
inc
mov
push
mov
test
pop
adc
add
lret
gs
sbb
fimull
cltd
adc
lock
insl
jno
sbb
es
or
pop
xor
pmaddwd
jae
iret
gs
dec
xchg
jae
call
pusha
jp
stos
jg
mov
cmp
test
add
cwtl
daa
fdivs
or
out
mov
jbe
repz
pop
dec
rolb
sbb
int
xor
pop
xlat
vhaddps
movsl
pop
mov
jecxz
pop
xchg
les
je
mov
test
push
cs
ret
push
popa
rclb
hlt
or
jge
adcl
jmp
out
clc
or
jg
stos
mov
mov
outsb
fs
aaa
and
jle
or
sub
push
mov
fs
mov
test
movsb
xchg
dec
ficompl
das
loope
enterw
lret
xchg
mov
add
loope
jnp
pop
cwtl
mov
inc
loopne
dec
outsl
aaa
ficoms
divb
out
scas
aad
pop
movsb
out
jp
and
inc
js
outsl
pop
shll
push
repnz
push
jbe
mov
int
fiaddl
imul
ss
xchg
out
mov
std
mov
mov
gs
das
shlb
adc
dec
data16
jae
mov
jecxz
inc
and
shrl
jnp
sarb
push
lock
cmpsl
dec
sub
pop
mov
test
outsb
cmpsl
enter
and
cmp
pop
mov
gs
dec
loopne
jecxz
pop
cmc
xor
mov
mov
inc
xchg
inc
test
div
popa
test
dec
shr
lcall
dec
test
mov
jmp
pop
fcomip
pop
imul
sti
and
in
or
mov
jne
push
vpackuswb
jns
data16
sbb
repnz
mov
mov
lea
aaa
cmp
jmp
test
inc
movsb
lret
and
stos
fdivrp
seto
xchg
inc
fptan
movsb
xchg
mov
push
repnz
push
mov
mov
and
dec
adc
mov
ret
lock
pop
out
lcall
ret
clc
dec
ss
add
pusha
pushf
es
and
out
repz
xchg
sbb
lea
loope
xor
hlt
into
loope
insb
jns
push
es
or
call
fstpl
sbb
mov
pop
jl
sub
adc
iret
jo
or
shl
pushf
mov
sbb
push
mov
mov
call
push
pop
pop
adc
insl
pop
xor
xchg
and
subb
movsb
xchg
out
arpl
cmp
paddusw
push
pusha
mov
jge
mov
dec
jmp
jae
mov
aas
es
ja
push
fisubl
mov
dec
pop
imul
ret
adc
pop
xlat
xor
pop
in
lcall
add
cld
call
ret
leave
leave
cmp
jecxz
shlb
flds
inc
ds
sbb
jbe
push
out
out
rolb
pop
popf
lret
mov
stos
pop
jnp
out
call
cmp
lret
in
xchg
push
pushw
rcrb
adc
out
sahf
fs
cli
shl
mov
jno
push
jmp
xchg
and
in
ljmp
pop
mov
outsb
repnz
mov
push
jmp
movsl
ret
idivl
in
push
jl
cmp
repz
loope
add
cmp
daa
mov
andb
subb
mov
xchg
adc
adc
lds
cmp
insb
popf
lea
xchg
mov
and
pop
fsubl
dec
xorb
jge
adc
test
fwait
xor
sbb
push
jle
into
por
popl
xchg
sahf
mov
stos
add
out
inc
scas
xor
pminub
fwait
sbb
xchg
cmp
je
pop
and
jmp
and
xor
arpl
xlat
add
push
mov
xor
hlt
dec
in
mov
shl
shll
xchg
lret
add
aad
mov
push
popa
adc
into
and
loopne
lods
jb
mov
xchg
es
mov
subb
fisttpl
data16
mov
test
mov
nop
fsts
mov
rolb
sub
mov
loope
push
pop
les
or
jnp
call
cmp
push
sar
movsb
push
into
add
push
insb
mov
sbb
aas
pop
add
ffreep
cmpsl
xchg
std
jb
fisttpl
outsl
jo
mov
pusha
mov
mov
fsub
lret
sahf
insl
stos
push
fcmovbe
rcll
stos
fiaddl
mov
or
aaa
jns
pop
jg
mov
and
mov
push
and
push
je
cmp
cmp
adcl
mov
idivl
jns
xchg
fdivrs
mov
push
or
pop
xor
sbb
pop
rorl
mov
loopne
inc
pushf
xlat
mov
pop
cmp
and
pop
xor
add
and
out
xor
xor
sbb
inc
mov
cmp
jne
push
dec
pop
jo
lahf
pop
or
pop
into
insl
lock
jecxz
add
inc
push
scas
arpl
rcrb
sbb
lret
scas
popf
xchg
mov
hlt
bound
testl
insl
or
lahf
or
movsb
adc
sub
inc
add
xor
inc
xor
push
sub
inc
pop
mov
mov
add
sub
cmp
mov
scas
dec
pop
push
ljmp
jno
sbb
mov
repnz
in
popf
sbb
dec
sub
sbbb
mov
je
das
cmp
sbb
jg
cmp
xchg
cwtl
cmp
test
push
add
imul
sub
xchg
xor
les
lods
notb
inc
insb
int3
mov
jecxz
mov
mov
adc
jns
pop
fs
sbb
jp
fstl
lods
add
mov
ret
xlat
xchg
jecxz
gs
stos
xchg
dec
cmp
imul
out
or
hlt
out
cs
dec
int3
cmp
ja
cmpsl
mov
cs
das
repnz
pusha
inc
lds
sub
lea
imul
cmp
scas
aaa
mov
dec
loope
sub
pop
xchg
dec
jo
bound
mov
xor
mov
and
jg
push
jb
cmp
sbb
rclb
add
xor
or
adc
mov
dec
xchg
add
mov
mov
out
mov
sub
test
bound
pushf
push
cmp
dec
pusha
add
and
push
mov
pop
pop
cmp
sub
test
xor
push
mov
sub
push
xor
ss
fisttpl
add
outsl
sub
and
call
int
out
push
sbb
int
in
aaa
repnz
clc
jge
mov
dec
mov
xor
mov
test
mov
mov
xor
js
aaa
movsb
test
cmp
ljmp
dec
mov
inc
outsl
mov
jnp
mov
sub
andl
fimull
lret
aas
adc
lahf
mov
xlat
mov
dec
push
push
and
addr16
test
mov
jbe
out
sti
sub
shll
and
mov
ds
pop
test
xchg
pop
rcrl
mov
stos
ljmp
push
bound
add
sarb
popl
push
lods
stc
mov
xchg
lcall
jae
dec
in
test
mov
dec
add
or
dec
xchg
hlt
cmp
jnp
into
jb
push
insb
pop
jns
add
scas
cld
ret
or
mov
outsl
sarb
loope
mov
sbb
repz
dec
out
inc
xlat
and
rclb
mov
pop
test
cmp
mul
lret
aas
dec
sbb
sahf
mov
lret
imul
mov
inc
mov
je
movsb
mov
cs
pop
andb
or
cmpsb
mov
cltd
or
pop
mov
in
cwtl
pop
imul
pop
mov
repz
push
cmp
mov
add
push
mov
sbb
jnp,pn
push
mov
sahf
test
push
sbb
add
popa
test
je
dec
jecxz
xlat
inc
and
xlat
bound
in
in
adc
jno
orl
mov
sub
sarl
pop
xor
das
cs
mov
rcll
mov
stos
cmp
sbb
testl
mov
add
mov
int
movsl
jecxz
sbb
fsubrl
push
lahf
pop
push
lahf
sbb
call
jl
push
ret
fs
aaa
loopne
cmp
push
daa
mov
push
xor
cltd
std
push
mov
aad
cmp
mov
into
cmc
divb
jo
icebp
sub
fildl
sub
pusha
xchg
mov
mov
insl
jg
and
rcrl
pusha
in
bound
xchg
xlat
in
fisubs
sub
pop
inc
push
jns
push
xor
and
jne,pt
jno
dec
in
int3
xchg
xchg
mov
xchg
or
inc
or
adc
mov
test
or
test
jp
inc
jne
mov
pop
dec
push
mov
mov
js
xor
aam
inc
loop
sbb
jne
mov
sbb
mov
std
lcall
mov
mov
push
pop
pop
ja
test
push
out
scas
aad
and
adc
push
fsts
mov
lea
mov
dec
xor
test
push
iret
shrl
jnp
xor
stc
ja
mov
into
lock
inc
cmc
xorb
test
or
adc
sbb
sbb
hlt
xchg
shll
and
pop
stos
mov
negb
mov
push
inc
pusha
fidivrs
std
mov
dec
in
lret
sub
in
bound
fsubs
and
fimull
das
adc
add
sar
ret
push
jecxz
dec
adc
push
decl
movsl
jb
popa
mov
ja
fisubl
and
pop
cmpsl
lods
popf
loopne
or
xchg
xor
jmp
fldl
xchg
loope
dec
jo
mov
divb
or
ds
cmp
jns
push
pop
les
dec
rclb
mov
int3
inc
dec
imul
leave
push
sti
sbb
std
pushf
add
hlt
and
mov
adc
mov
sbb
insl
inc
push
loop
xor
mov
xchg
addl
mov
cmp
jbe
mov
mov
cwtl
sbb
arpl
xchg
mov
ret
lods
mov
fbstp
mov
sti
rorb
mov
in
mov
into
inc
das
call
inc
movsb
mov
gs
ds
cmp
mov
ja
jbe
jbe
or
sub
fs
or
out
xor
cmc
adc
push
inc
add
lahf
out
mov
stc
cmp
imul
stos
xchg
iret
in
decl
aam
cli
or
and
pop
jg
dec
sub
pop
pop
adc
fcompl
mov
or
aam
xchg
outsb
es
es
mov
cltd
rclb
lahf
std
mov
into
mov
jbe
fs
leave
test
fnsave
arpl
lret
xor
pop
mov
das
xchg
arpl
mov
cmpsb
je
das
out
jbe
xor
imul
out
cmpb
pop
repnz
fcmove
fwait
cmovno
dec
cmp
mov
mov
fmull
shrl
and
out
aas
fwait
xor
in
mov
sbb
ror
lret
jne
inc
lret
mov
incb
push
addl
jecxz
adc
mov
jnp
xchg
pop
jbe
adc
mov
inc
inc
xor
xor
loop
or
nop
push
and
or
push
leave
mov
mov
inc
or
mov
popf
sti
push
push
cltd
pop
insl
lods
lcall
push
popf
jo
fwait
add
lock
xor
out
push
cmp
xor
sbb
mov
cld
rorl
pushf
rolb
fcoms
popf
sbb
pop
aas
mov
xor
mov
out
cmp
movsb
scas
shlb
gs
push
fmuls
sbb
and
xchg
jl
xchg
mov
adc
loope
adc
mov
sbb
stos
dec
insb
push
pop
sbb
push
inc
inc
push
fwait
shl
cli
subl
mov
cmp
sub
xchg
repnz
fdivs
pop
popa
pop
or
cmp
lcall
jae
mov
mov
gs
orps
popf
test
push
hlt
and
mov
adc
or
std
adc
rolb
jno
pop
repz
icebp
sbb
sbb
mov
jle
out
xor
xchg
jmp
push
cmp
bswap
pop
sti
cmpsb
frstor
enter
repnz
out
rcll
shll
cmp
sahf
in
adc
sbb
and
ljmp
shrl
loopne
loop
dec
mov
mov
jmp
or
scas
aad
notb
xor
and
rcrb
out
jne
mov
mov
add
xchg
test
mov
push
shlb
fldt
mov
pop
arpl
mov
sarb
push
adc
stos
inc
or
inc
mov
or
daa
test
mov
in
in
pushw
mov
hlt
cli
enter
sti
push
movsl
jl
rorb
fistps
nop
test
dec
inc
in
lds
mov
out
sbb
les
sahf
cld
les
dec
scas
jo
movl
fwait
push
mov
es
cmp
mov
in
fs
fildll
in
lcall
or
add
mov
and
push
or
adc
ret
push
aaa
push
stc
inc
pushf
lret
lahf
test
sbb
adc
das
inc
daa
ss
test
mov
imul
dec
jp
sub
mov
dec
or
or
in
movsb
adc
jae
pop
sub
pop
mov
aas
sti
shld
fldl
push
enter
clc
inc
xor
test
das
mov
cmp
sahf
add
sarl
add
ret
and
orb
into
fildl
add
nop
icebp
cmp
fstps
cmpsb
test
adcl
fcmovnu
out
aad
cmp
xor
shr
or
stos
add
inc
sahf
adc
lret
inc
mov
xchg
xorl
jbe
cld
pop
into
test
icebp
pop
dec
pop
sahf
out
stos
cwtl
adc
into
dec
outsb
sbb
aaa
push
js
nop
aas
mov
or
jnp
out
outsb
push
std
mov
lea
loope
cld
sub
in
push
jns
jae
jg
mov
sti
ficompl
dec
cmp
sbbb
mov
dec
inc
fists
callw
add
data16
std
in
xorb
je
jo
imul
mov
lcall
lea
xchg
cmc
and
sarl
sub
psrlw
mov
pushf
dec
leave
inc
jmp
pop
pop
cmp
adc
pop
jle
cmp
fwait
loope
dec
pop
dec
psubb
inc
stos
inc
adc
cmpsl
int
fisubrs
fnstcw
insl
clc
mov
aad
pushf
testl
or
dec
mov
movsb
incb
or
movsb
sub
scas
inc
repz
iret
sbb
das
sbb
add
lea
aaa
mov
xchg
push
adc
mov
add
mov
push
inc
leave
xor
push
out
iret
das
or
fxch
xor
loope
mul
cmp
sub
test
fdivrl
out
int3
jp
stos
insl
cli
js
sub
hlt
out
lock
xor
adc
cmpl
add
pop
lahf
xor
mov
lds
fwait
divb
mov
fwait
repnz
sub
push
sub
cmp
in
dec
pop
insl
push
pop
and
xor
and
adc
in
stos
ja
mov
mov
filds
sarl
dec
incb
in
stos
and
push
ret
negl
and
mov
add
pop
add
mov
ss
inc
add
lret
pop
jge
out
mov
arpl
movsb
add
inc
shl
daa
test
shll
xor
and
js
mov
or
xchg
jl
in
rolb
xor
fwait
hlt
clc
cs
inc
jne
mov
cmp
fsub
dec
test
add
orb
mov
fistl
add
adc
xchg
push
and
in
das
adc
push
std
mov
mov
rolb
dec
and
sbb
test
lret
jbe
lret
stc
repz
pushf
leave
dec
and
movsb
push
adc
movsl
or
push
lret
mov
into
fstpt
test
mov
sbb
sub
mov
lock
sbb
cld
dec
lods
out
out
stos
out
adc
push
push
ret
dec
addr16
iret
ret
lods
sub
jno
mov
or
sbb
mov
icebp
clc
rol
xor
dec
sub
in
aad
lods
int
subl
popf
aaa
push
enter
and
lcall
mov
test
xchg
test
ret
loop
xchg
and
repnz
jbe
gs
jle
in
xor
pop
in
push
outsl
icebp
mov
data16
mov
shlb
sbb
pop
subb
pop
inc
inc
lahf
cli
jno
adc
fwait
dec
mulb
ja
into
sub
push
add
adc
movsl
xlat
xchg
xchg
xor
xor
sub
add
add
mov
pop
insl
and
sbb
lock
int3
pop
mov
sbb
dec
scas
dec
sub
push
mov
fmuls
cmp
jge
mov
push
jbe
push
cld
lret
js
icebp
jb
dec
cli
sarb
sqrtps
fisttps
iret
lret
lret
mov
out
sub
cmp
imul
mov
hlt
xor
adc
lcall
mov
sub
sub
inc
sub
sbb
loope
adc
aam
pop
and
test
and
stos
mov
push
inc
dec
mov
or
xor
les
pushf
iret
sarl
gs
cmc
sub
mov
and
dec
daa
xor
mov
xchg
or
sbb
dec
fxtract
cmp
ljmp
dec
adc
sbb
or
mov
jge
jo
ljmp
push
push
xor
xlat
jmp
insb
lock
pop
js
mov
xor
jg
xchg
in
int
dec
sub
add
jp
sahf
fdivrs
in
stc
xchg
adc
push
in
xchg
push
rcrl
into
cmp
sub
in
inc
and
int3
aam
dec
js
lcall
call
scas
negb
mov
lcall
shrl
push
mov
cli
mov
cs
cmp
addr16
in
fcmovbe
mov
arpl
cmovb
loope
jb
test
fcmovnb
sub
fdivl
int3
and
xchg
push
xchg
push
fwait
xlat
adc
pop
or
in
fsubl
and
push
dec
push
adc
inc
and
nop
push
xlat
push
jl
inc
jl
mov
out
ret
adc
xorb
mov
sub
sub
xlat
lods
sarl
dec
mov
xchg
hlt
stos
scas
add
sbb
imul
ss
jns
mov
addr16
xor
int3
fisubrl
pop
fwait
pop
lods
fisttpll
sub
dec
repz
add
int3
sarl
test
insb
dec
xchg
pop
test
lret
adc
subb
fadds
sahf
push
ljmp
mov
jb
jmp
sub
lods
jo
daa
ds
pusha
jno
orb
dec
icebp
pop
cld
mov
dec
fadds
int3
add
lds
clc
dec
cmpl
add
jg
idivb
pop
pop
xor
dec
stc
bound
or
dec
ja
div
push
out
idivb
test
rclb
outsb
dec
out
or
pop
inc
fistl
push
cmp
mov
rclb
gs
jle
mov
ficompl
sbb
jno
adc
dec
mov
leave
fs
data16
xor
mov
addl
fdivrl
divb
leave
mov
adc
mov
xchg
cmp
test
jnp
dec
pop
cmp
int
mov
mov
pop
movsb
fnsave
cmp
xchg
sbb
ja
lea
pop
mov
sub
fcmovne
cmp
mov
mov
mov
aad
jg
mov
lock
add
insb
jmp
fbstp
daa
popa
movsb
bound
es
adc
out
xor
sti
pop
ja
dec
mov
pop
sbb
inc
rolb
fld
aad
jmp
pop
loopne
or
orl
jb
cmp
mov
arpl
push
xchg
dec
rclb
cmpsb
mov
or
iret
mov
cmp
call
push
insl
cmp
fnstsw
testl
cmp
sub
mov
cmpxchg
les
and
jb
jecxz
fldcw
nop
pop
cmp
lock
in
ret
mov
and
ret
popa
ja
das
inc
shrl
inc
mov
bound
decb
push
mov
fildl
fcoms
sub
pop
sub
roll
fwait
shll
repz
pop
loope
pop
mov
mov
inc
ret
xchg
daa
xor
insl
clc
or
frndint
in
mov
stc
int3
in
test
andl
jge
testb
lds
fildll
adc
dec
in
mov
and
imul
popf
pop
lcall
cmc
sub
jae
mov
ljmp
lock
es
sub
daa
inc
mov
sbb
cmp
int3
aam
push
xor
stc
add
out
test
into
orl
ret
push
adc
loope
aaa
out
sub
and
xchg
cmp
xchg
nop
mov
xchg
jne
es
icebp
pop
cmp
sub
ret
pop
dec
xchg
popa
aas
dec
mov
mov
lds
mov
ss
cli
sub
and
push
cmp
inc
jo
pop
sub
ja
shr
or
dec
push
fisubrl
dec
jle
repz
pop
sub
pop
out
bnd
and
mov
and
sbb
test
rcrl
xchg
and
cmpl
dec
popa
adc
cwtl
scas
int
scas
jbe
mov
sarb
fwait
out
sarb
or
lahf
aam
inc
jg
cld
mov
xor
pop
dec
or
enter
aaa
push
pop
xchg
jne
ds
into
xlat
mov
aam
xchg
fdivrs
in
mov
aam
sub
adc
jae
test
lds
adc
cmpsl
imul
xor
lock
adc
popa
mov
push
inc
add
adcb
xor
or
xchg
mov
sarb
scas
stos
sbb
or
in
leave
dec
mov
xchg
rolb
lret
fsubs
movsl
fs
xor
aas
std
mov
in
outsl
fisubl
adc
and
dec
popa
xchg
dec
sbb
dec
insl
or
hlt
push
add
daa
pop
out
shr
repz
hlt
jb
lahf
mov
inc
cltd
ljmp
decb
push
std
cmpsl
xor
jnp
xlat
pop
dec
mov
daa
pushf
jbe
loop
cmp
mov
cld
and
fsubp
jb
call
aam
int3
or
xlat
leave
stos
inc
xor
sbb
mov
fadds
not
jo
lds
cs
les
pop
xor
mov
push
mov
enter
mov
mov
push
stos
pusha
repnz
sbb
xlat
sbb
mov
shlb
rcr
pop
and
mov
jl
mov
mov
mov
lods
mov
sbb
or
test
aaa
mov
pusha
pop
shrb
movsb
fsubs
pusha
fstpl
in
or
adc
lret
mov
outsb
sar
test
cmp
jl
aam
mov
or
jg
lret
test
push
push
lcall
push
mov
sub
test
sub
bound
rcrl
out
aas
and
repz
daa
push
fbstp
aad
inc
in
jl
xchg
pop
jp
leave
cld
in
add
aas
jl
in
in
adcl
dec
inc
mov
cmp
pop
or
push
test
or
cltd
test
and
add
fsts
nop
test
sub
adc
xchg
nop
and
out
jle
in
out
mov
cld
xchg
xchg
fldenv
xor
scas
fildll
push
lea
adcb
or
out
mov
push
xchg
and
or
stc
adc
mov
cwtl
mov
inc
adc
inc
call
mov
or
cmp
push
cmp
fsubrp
dec
in
xlat
fnop
and
jmp
lahf
mov
pop
and
pop
enter
jb
pushf
mov
paddsb
pushf
pop
nop
xlat
not
rcll
fmull
inc
inc
inc
sar
icebp
movsb
sbb
mov
out
xchg
inc
xchg
xor
jo
xor
adc
out
dec
cmpl
cmp
fs
or
lcall
enter
push
xchg
push
repnz
mov
dec
in
xor
fstpt
fisttpll
je
je
xor
xor
outsl
scas
jg
dec
cmp
je
mov
jp
mov
add
sbb
fdivl
imul
stos
xchg
mov
aas
popf
flds
sbb
lock
mov
repnz
int
xchg
cmp
mov
inc
cmp
sbb
pop
and
mov
fimull
std
lods
xor
hlt
adc
xchg
adc
nop
mov
xor
lcall
xor
ret
in
into
scas
jo
subl
outsb
sub
mov
fldl
push
adc
cmpsb
and
xchg
bound
jg
xchg
in
lock
add
dec
lea
cltd
cmpsb
push
mov
cwtl
mov
mov
inc
addr16
add
ljmp
xchg
dec
xor
push
cltd
push
adc
sbb
cld
mov
xchg
mov
sbb
cwtl
je
sbb
mov
sbb
out
mov
sahf
out
inc
adc
loop
les
ret
or
mov
jbe
sub
dec
mov
xchg
das
inc
ljmp
pop
stc
pushf
mov
mov
fcom
adc
je
xor
push
lds
pop
add
in
out
lds
inc
pop
cmp
clc
lcall
push
cmp
jle
jle
add
scas
push
scas
pusha
cmp
inc
mov
jge
fiadds
lock
push
aaa
dec
inc
fidivrl
adc
dec
jne
addl
sarb
mov
test
pop
adc
scas
ds
sahf
cmc
bound
aam
add
movsl
insb
jb
mov
movsl
pop
mov
and
cmpsl
ljmp
sub
pop
mov
lea
cmp
xchg
mov
inc
daa
aam
cmp
mov
movsl
sbb
lea
xchg
aaa
stos
jno
lods
inc
pop
dec
and
mov
enter
jg
lret
jns
enter
xorb
sti
jle
ja
bound
push
stos
mov
push
mov
nop
fwait
add
cmp
push
xlat
sbb
jp
movsb
popa
mov
jg
pop
in
add
out
iret
mov
push
sub
jnp
ds
pop
dec
out
das
pop
sub
inc
out
or
mov
pop
insb
lds
push
inc
cld
lods
inc
push
sti
repz
test
sub
jno
xlat
shlb
and
pop
and
pop
in
or
out
out
sub
fdivs
sbb
cwtl
ret
push
and
or
mov
arpl
or
in
je
les
jns
cmp
pop
dec
add
mov
add
jge
dec
jmp
inc
jnp
dec
mov
daa
xchg
sub
cmp
ja
cmp
insb
daa
add
dec
ret
cwtl
fsubl
mov
and
filds
in
outsl
sbb
xor
jp
fadds
popf
setbe
aas
mov
add
fists
test
mov
inc
stos
xchg
sub
pop
jno
or
add
add
test
lahf
mov
pop
out
aas
pop
sub
or
std
lds
push
test
sbb
lods
sahf
hlt
cmpsl
subb
cli
jp
lods
jge
movsl
mov
mov
cltd
test
addr16
lock
sets
sbb
movq
push
xchg
mov
jge
lcall
mov
jecxz
js
leave
pop
dec
xor
xchg
scas
mov
mov
outsb
push
fcoml
mov
sub
jns
out
add
fsubrl
adcb
add
jmp
xchg
push
sub
adcb
add
xchg
into
rcr
mov
into
add
push
pop
xchg
jns
pushf
cltd
hlt
outsb
mov
jns
mov
or
mov
fildl
push
movsl
lret
mov
sbb
pop
add
into
jne
adc
and
adc
imul
sbb
push
aad
mov
std
mov
and
sti
rol
sub
push
inc
testb
pop
into
data16
sub
dec
es
dec
pop
out
movsl
int
in
jp
cs
push
pop
out
sbb
pop
cmc
jae
sub
push
xchg
sub
mov
adc
mov
pop
dec
add
test
lret
sti
cmp
jg
jge
xchg
mov
dec
adc
mov
pop
bound
in
push
mov
xchg
push
mov
in
lahf
ss
push
push
add
iret
sub
jle
mov
fs
jp
dec
pop
std
cmp
outsb
pop
shrl
push
jno
jg
ss
mov
inc
ret
stos
mov
mov
mov
inc
fwait
mov
adc
negb
scas
pop
pop
jg
jo
pop
inc
xchg
mov
repz
mov
sub
rorl
movsb
add
adc
pop
fcmovbe
mov
push
loope
call
or
mov
iret
nop
inc
adc
sarb
mov
adcl
xchg
jle
sbb
inc
dec
cmp
arpl
pop
cwtl
enter
push
inc
xchg
lods
sbb
pop
lock
test
js
addb
xor
call
mov
das
inc
cmp
xor
out
inc
into
adc
xor
mov
imul
mov
lods
ret
out
sub
aam
es
nop
scas
pop
sub
mov
jge
jne
test
jp
inc
cli
sahf
dec
jl
sbb
push
fisttpll
or
stc
mov
xchg
xchg
add
outsb
mov
lret
push
movsl
xchg
addr16
mov
inc
fists
or
mov
add
fwait
icebp
fistpl
mov
mov
and
fwait
mov
das
or
lret
adc
sbb
ficompl
bound
add
sub
out
mov
hlt
int
sub
sbb
addl
popa
adcl
or
stc
shrb
test
jp
xor
sbb
sbb
insl
push
hlt
shlb
psrad
mov
mov
cwtl
icebp
lock
rclb
mov
inc
push
or
push
and
shlb
rcrl
cmpsl
pop
ss
lea
pop
mov
test
test
xor
sbb
and
or
test
sub
dec
inc
in
stos
fwait
inc
jb
push
test
scas
xchg
call
outsb
xchg
pop
into
fwait
adc
jecxz
mov
dec
jnp
xchg
test
sub
out
enter
sub
dec
jne
dec
fiadds
lcall
or
pushf
push
fidivrs
jne
or
jnp
stos
dec
fisttpl
or
test
inc
push
mov
shlb
loope
mov
sub
clc
and
cmp
inc
stos
sbb
xchg
jle
and
jle
sbb
push
iret
cmc
bound
mov
stos
into
adc
leave
sbb
flds
cmp
insb
push
xlat
aaa
and
popa
aam
neg
dec
leave
adcb
mov
inc
xor
ret
int
call
jnp
ficompl
aas
in
or
add
lret
jg
jo
cmp
dec
insl
or
loopne
pop
pushf
and
xor
aam
add
sahf
das
inc
jle
adc
or
hlt
pop
dec
in
loopne
scas
rcll
sbb
icebp
addl
xor
call
aam
mov
add
mov
and
jg
dec
sub
mov
aad
sbb
cmpsl
rcrb
adc
repnz
ja
jne
das
jmp
arpl
push
bound
stos
dec
popa
pop
pop
xor
in
inc
sbb
inc
adc
xorl
lods
xchg
sub
push
fdivp
pop
dec
daa
nop
test
jle
je
jno
lock
jne
push
cmpsb
test
insb
cmp
cmp
mov
mov
stos
dec
lret
xchg
popf
es
jge
add
sbb
aas
jae
xor
inc
sub
push
jecxz
jmp
insb
sub
inc
int3
in
test
inc
pop
rol
repnz
rcrl
rolb
jmp
and
enter
shll
inc
imul
mov
sbb
jg
xor
pop
dec
int
fucomip
or
adc
ret
rorl
pop
mov
pavgw
xor
cmp
xchg
push
lds
imul
pop
xchg
cld
movsb
xchg
jns
lock
push
or
lret
rclb
adcb
fbstp
sarb
sub
inc
outsl
xchg
mov
or
sarl
mov
mov
int
xlat
idivb
dec
or
xchg
fnstcw
js
add
sbb
mov
mov
xchg
mov
jno
sbb
sbb
pop
insl
dec
pop
mov
push
jns
cmp
pop
mov
push
insb
js
rcll
rcrb
adc
add
jbe
repz
ret
jg
clc
xor
ja
sbb
mov
xchg
jg
fsubrl
stos
out
sbb
icebp
sub
incl
mov
mov
es
loop
mov
or
pop
mov
dec
and
test
lea
dec
loop
test
dec
push
fsts
test
push
jnp
outsb
adc
out
jb
leave
pop
jg
stos
movl
outsl
js
jp
mov
subl
jmp
dec
into
add
xor
pop
mov
fildll
jbe
outsl
jbe
xor
jmp
stos
cmpb
adc
into
adc
aam
jl
cld
xchg
push
and
dec
jp
jo
lahf
test
xchg
push
loop
xor
sti
dec
repnz
int3
push
add
adcb
cwtl
rclb
loopne
mov
fdivs
or
andb
or
mov
xor
lods
mov
jmp
sbb
cmpsl
sbb
adc
xchg
pop
jl
adc
adc
adc
lds
dec
sub
push
mov
stos
or
or
in
mov
mov
sbb
movsb
pop
test
inc
out
scas
push
in
icebp
loopne
and
je
dec
cmpsb
inc
push
into
sbb
mov
daa
enter
imulb
sub
andl
lds
adc
out
mov
stc
fistpl
and
imul
lahf
aam
scas
nop
cmpsl
gs
cmc
cmp
xchg
mov
xchg
cmpsb
ljmp
or
push
xchg
negl
push
add
jae
sbb
cmovbe
fimuls
cwtl
icebp
cmp
mov
mov
es
cwtl
push
lss
loopne
sbbl
adc
adc
hlt
test
mov
or
aad
dec
cmpsb
or
pop
test
int3
mov
icebp
sbb
arpl
push
dec
and
jae
mov
jecxz
jl
int
call
mov
mov
jno
sub
lock
and
adc
inc
pop
ret
das
clc
mov
enter
lret
pop
push
les
loop
xor
scas
mov
pop
in
sahf
mov
inc
arpl
pop
push
sar
xor
subb
data16
aas
in
js
jns
push
lds
imul
mov
repz
inc
std
in
ljmp
push
sahf
push
les
or
stc
jo
and
stos
test
mov
inc
add
out
push
icebp
push
mov
push
rol
add
sti
sarb
outsb
test
jmp
mov
xor
js
push
mov
dec
lahf
int3
arpl
jnp
dec
ret
sbb
jo
or
test
mov
push
xor
fistps
fwait
testl
out
jo
cmp
fwait
xchg
push
inc
test
xchg
and
sbb
ljmp
jle
inc
cmc
mov
fstpt
cld
push
sub
jno
push
pop
pusha
xor
leave
and
sbb
std
cmp
jecxz
int3
xchg
inc
push
mov
test
scas
adc
and
and
cmp
gs
cld
in
mov
ss
adc
lret
xchg
cmpsb
cli
int3
shl
lret
xchg
and
pop
mov
sub
lcall
xorb
jns
jns
aad
xor
lahf
mov
and
jne
dec
rolb
push
ficoml
pop
sub
data16
addl
dec
xor
xor
mov
arpl
mov
pop
mov
lret
cli
pop
push
xor
loope
cmp
call
push
lret
ret
push
ss
out
imul
cmc
sbb
xchg
insl
or
jl
aad
subb
imul
or
adc
aas
sbb
sahf
fs
dec
lret
fstps
jne
aaa
fnsave
sahf
in
mov
inc
sbb
add
js
pop
arpl
add
push
in
and
inc
stc
lea
lock
outsb
push
stos
xchg
data16
fisttps
repz
daa
mov
or
and
pop
sbb
fldt
jns
mov
mov
mov
push
int
add
aas
pop
and
mov
push
mov
cmp
std
adc
jb
sbb
add
in
es
enter
sar
call
sbb
mov
cmp
lods
xlat
dec
sbb
aas
mov
pop
cmp
cmp
mov
jb
loope
mov
jno
out
or
stos
push
ja
push
rorl
ficoml
cs
enter
and
mov
mov
test
jno
pop
je
cwtl
sbb
insb
fcomps
ljmp
mov
push
movaps
test
xorl
push
lcall
data16
movsl
stos
push
pop
jo
mov
cmp
sbb
mov
mov
scas
mov
decl
pop
add
out
stc
sbb
gs
inc
push
sub
dec
stc
stos
int3
adc
xor
xchg
ds
jae
or
jg
sub
imul
int
insl
cmc
inc
stos
pop
jne
and
pop
in
fimuls
subl
shlb
or
and
or
cmp
pop
pop
jb
imul
and
cmp
repz
testb
jae
cmp
sub
sbb
xchg
push
fsubrl
imulb
inc
sar
push
xchg
mov
xchg
pop
dec
fwait
adc
jno
push
sub
inc
add
sub
cmp
pop
hlt
fmull
stc
sub
in
jge
sub
jnp
sbb
push
mov
cltd
jmp
push
ret
lds
inc
cmp
and
sbb
sub
cmp
mov
call
ds
flds
mov
in
sub
dec
cltd
pop
add
sub
adc
out
hlt
mov
xorl
inc
and
cmpl
push
push
lods
pop
std
mov
xchg
push
js
pop
cmpsb
mov
add
mull
test
fmuls
sub
sahf
enter
lods
jp
clc
sbb
pop
or
push
ret
sti
lahf
or
frstor
lock
out
lret
es
add
sub
add
loope
dec
in
movsl
jns
pop
sbb
es
or
cmpsb
jne
push
stos
fisubrl
incb
in
fistpl
out
jecxz
push
out
fisttps
in
in
les
or
ljmp
inc
lcall
and
sub
dec
rep
or
or
cli
sub
dec
sub
cmp
xor
add
xchg
xor
jp
sbb
mov
pop
into
rcll
lock
and
and
lcall
jp
inc
sbb
out
or
cmpb
add
clc
je
jo
loopne
xchg
adc
xchg
orl
inc
add
clc
mov
sbb
xorb
call
sbb
and
xchg
jno
jns
sub
mov
cmc
mov
sub
jmp
push
pop
push
add
push
sbb
out
jle
andl
stos
div
sub
xlat
shl
popf
rclb
sub
pop
pop
cld
mov
iret
inc
lock
fidivrs
xchg
xorb
jp
popf
fbld
push
mov
mov
mov
cmp
lahf
mov
lret
aaa
mov
fcomp
lds
jb
out
xor
jecxz
sub
aas
xchg
pop
xor
insl
fsts
scas
add
gs
jnp
mov
sub
inc
repz
aam
or
arpl
lahf
adc
shlb
mov
mov
jecxz
repnz
jp
pop
je
cli
ret
push
addl
jp
push
js,pt
or
pop
cmp
and
and
xor
pop
gs
sahf
outsl
jmp
xchg
cmp
inc
mov
data16
pop
in
add
out
cwtl
das
into
sbb
add
mov
add
out
xorb
mov
add
test
sti
stc
mov
inc
push
lahf
mov
enter
fiadds
push
frstor
sub
gs
adc
mov
inc
dec
cmpb
lods
iret
mov
iret
xchg
sbb
and
jne
jl
cmp
and
popf
sti
hlt
insb
loop
cld
pop
pop
pop
pop
fldcw
int3
pop
dec
sbb
lock
repz
mov
adc
ss
inc
mov
push
inc
or
xor
arpl
mov
inc
pop
out
cld
or
popf
mov
pushf
mov
xchg
push
add
sbb
stos
das
lret
xlat
xchg
mov
sbb
push
repz
lret
test
jmp
xor
shll
xlat
cli
idiv
xchg
sbb
not
jnp
xor
mov
fisubl
pop
fldcw
mov
ret
push
inc
mov
push
and
xchg
jg
loop
sub
das
push
xor
aas
cmp
push
dec
xchg
movsl
push
mov
cmp
test
leave
insb
mov
fcompl
cli
fsubp
pop
ret
arpl
je
scas
cmp
inc
icebp
lods
popf
sub
lock
iret
mov
in
gs
filds
or
pop
test
push
into
cmp
sbb
loope
ljmp
inc
mov
pop
xchg
push
mov
jo
or
sub
je
xchg
int3
scas
out
cli
cltd
pop
bound
js
and
xchg
pop
sub
pushf
xor
ret
jl
adc
popw
mov
cld
mov
pop
cmp
mov
adc
push
xor
cwtl
cmp
lahf
dec
xor
pop
lcall
fisubl
jg
pop
or
jns
scas
mov
mov
cmp
xor
jecxz
sbb
pop
inc
lahf
mov
cmpsb
pushf
jbe
inc
int
push
mov
mov
jb
ret
shl
aad
mov
mov
addr16
loop
lret
stc
test
add
mov
mov
fists
sbb
pushf
mov
movsl
add
inc
mov
push
mov
mov
dec
mov
popf
clc
mov
outsl
in
frstor
aaa
push
dec
jp
pop
ficoms
int3
pop
fstps
cmpl
dec
sub
mov
and
sbb
or
xor
cmp
jno
and
xor
adc
rorb
lea
scas
hlt
test
jmp
jmp
sbb
lock
cli
nop
mov
insl
push
scas
cmp
pop
in
cmp
sbb
push
mov
or
enter
or
cwtl
xchg
and
xchg
pusha
cwtl
xchg
push
mov
and
jo
inc
enter
fcmovbe
pop
adc
sbb
push
or
sbb
fnstenv
daa
mov
and
push
jne
fnstcw
and
mov
mov
out
imul
repnz
xchg
out
call
xchg
aam
cmpb
test
call
fldt
inc
xor
pop
subb
sub
nop
mov
push
fidivrs
ja
es
sti
fmul
lea
loopne
insb
mov
out
and
mov
mov
push
mov
int3
sub
sbb
cwtl
fstps
sub
call
shlb
enter
out
lea
into
leave
imul
xor
inc
call
sarb
cmp
ss
shrb
shll
sbb
push
xchg
add
out
xor
cmp
adc
xchg
pop
cmpsl
popa
sub
dec
cmpsl
fcomps
xchg
mov
adc
inc
gs
xlat
mov
lret
add
jnp
js
mov
in
xor
push
pop
out
nop
in
jne
cmc
fsubl
jne
notl
mov
stc
dec
mov
lds
xchg
xor
das
or
pop
push
pop
cmpsb
push
cmp
imul
aas
lcall
pop
les
or
into
pop
jne
push
addb
xchg
aaa
cltd
push
mov
mov
aad
xor
sub
xor
pop
daa
push
sub
outsl
mov
loope
sbb
in
std
and
jns
xchg
mov
cltd
inc
xchg
sahf
mov
enter
in
cli
cld
pop
lea
mov
push
aaa
stos
sub
sbb
adc
das
sbb
imul
jne
aam
ficompl
outsl
pop
cmp
pop
sub
push
ja
out
fwait
popa
pop
or
int
fdivrl
or
push
mov
js
xor
inc
clc
or
in
fsts
adc
out
outsb
inc
inc
rcrb
std
push
push
mov
aas
inc
xor
push
inc
pop
inc
jae
sbb
inc
lcall
mov
dec
cmpsl
xchg
push
incb
les
dec
ljmp
push
xchg
hlt
and
js
cli
sbb
clc
fs
mov
xor
aaa
xor
xchg
stos
mov
cmp
mov
mov
mov
xchg
jecxz
cmp
sbbl
cltd
mov
or
mov
push
push
sbb
adc
xchg
xorl
push
inc
movsb
insb
push
loopne
shll
lret
mov
inc
cmp
xlat
push
sarb
sbb
notb
in
pop
fldcw
int3
out
adc
or
fdivrs
pop
pop
loope,pt
mov
sub
fisubrl
cmc
cmp
xor
mov
loope
mov
inc
enter
cmp
sub
xchg
dec
push
mov
push
out
push
cmp
loop
pop
in
jl
cmp
nop
mov
adc
xchg
ret
out
mov
pop
mov
cwtl
add
inc
ret
outsl
dec
jmp
cltd
dec
jo
mov
pop
sahf
jns
ss
fs
test
enter
mov
dec
jne
xchg
and
push
dec
enter
sbb
xchg
xor
adc
push
repz
arpl
and
ja
icebp
int3
scas
pop
xor
movsl
imul
inc
dec
sbb
lods
dec
shrl
fbld
mov
jge
ja
pop
loopne
stos
cmp
push
into
mov
push
outsl
insl
add
ja
pop
int3
int
bound
negl
repz
in
int
pop
out
lcall
enter
not
pop
jno
add
cmp
xor
test
push
movsb
add
xor
cwtl
sbb
mov
clc
int
adc
sti
push
rolb
test
push
ret
pushf
mov
mov
add
dec
shl
xchg
sbb
pop
mov
add
add
psubd
movsl
bound
out
mov
test
push
pushf
mov
or
loopne
insb
and
sub
and
add
mov
ja
push
inc
aad
call
sbb
push
lret
mov
and
mov
stc
int3
mov
and
test
push
push
in
stos
jge
int
addb
leave
and
inc
xchg
push
sbb
dec
pop
jne
fsubl
int3
lods
jae
mov
jo
call
mov
inc
int
dec
and
jmp
dec
adc
lcall
or
xor
add
jge
sub
or
shll
mov
jne
adc
sti
mov
adc
lods
mov
fsubrl
shl
dec
hlt
push
adc
mov
inc
movsb
xorb
mov
xlat
mov
inc
icebp
into
push
cmp
push
pop
push
pop
inc
mov
push
shrb
push
mov
stos
sbb
test
jl
or
call
iret
cmp
arpl
dec
ja
mov
or
test
add
cmc
daa
fsubl
popa
inc
pop
iret
call
dec
or
cli
push
cwtl
cmpsb
insl
je
mov
orl
mov
jns
pop
pop
negb
xchg
out
outsb
insb
mov
pop
addr16
divb
int3
insb
inc
sbb
jo
test
add
push
jle
loope
push
aam
pop
aaa
sub
aaa
mov
mov
pop
inc
sahf
lds
cmc
outsl
daa
fucomp
and
cmp
dec
jb
outsb
jmp
dec
jne
sub
cmp
inc
mov
inc
sbb
mull
inc
mov
jno
adc
xchg
xor
pop
add
repz
jo
jo
inc
sarb
cmp
movsb
dec
loop,pn
adc
aas
bound
outsb
fdivs
clc
lock
insb
sbb
test
cmp
leave
scas
cltd
xor
xor
sub
sbb
dec
add
mov
mov
ds
pop
out
pop
icebp
xchg
lcall
repz
test
mov
push
sub
push
xor
sbb
push
sbb
xchg
stos
mov
ffreep
sub
pushf
test
adc
pop
jmp
add
ja
inc
pop
daa
cmp
lret
mov
leave
lods
es
dec
jns
in
add
stos
fstpl
jae
xor
sahf
and
jecxz
jmp
ljmp
cwtl
inc
and
cmpsb
add
loop
popa
jb
sbb
inc
hlt
pop
stc
test
outsl
fdivrp
sahf
pop
in
mov
mov
rcl
push
das
in
pop
push
pop
mov
ljmp
dec
leave
dec
in
and
inc
push
sub
rorb
xchg
push
jnp
xor
push
xchg
shll
cmp
cmp
mov
jle
mov
xchg
mov
imul
test
lahf
jo
orb
fsub
lods
out
adc
nop
jecxz
or
imul
fs
add
rorl
jbe
cmpl
adc
mov
js
dec
shrb
jle
repz
cmp
jae
sbb
rcrb
cltd
mov
fildll
cmp
fwait
repz
dec
fistl
dec
push
pusha
leave
in
push
mov
sub
jo
test
arpl
and
push
pop
repz
lret
xor
icebp
jbe
jp
test
push
mov
pushf
scas
mov
stos
stc
sbb
mov
fldcw
aam
inc
lret
xchg
arpl
xchg
dec
repnz
or
pop
jne
dec
push
rorb
mov
lods
xchg
mov
test
mov
cmp
pop
rclb
aad
jb
gs
and
pushf
ret
outsb
cmp
das
mov
mov
mov
lret
dec
push
call
sbb
out
mov
repnz
inc
add
fisttpll
into
fidivs
jle
cmpsb
ds
dec
loop
sub
xor
test
loope
jno
js
xchg
std
fsts
xor
aas
testl
shrb
scas
daa
int
push
lahf
mov
popf
cmp
popa
mov
bound
cmp
les
movsb
outsl
jnp
and
lods
push
mov
add
xchg
add
add
xchg
add
push
dec
push
enter
inc
sub
call
test
enter
clc
adc
repz
mov
dec
out
sbb
fs
sbb
mov
shrb
adc
push
rorl
gs
xor
hlt
dec
into
mov
mov
pop
push
std
mov
mov
test
mov
xchg
hlt
jg
loope
add
test
pop
aam
adc
inc
xchg
and
ljmp
push
rorb
out
fildll
mov
jg
fcmovnu
test
insb
sub
jo
popa
jbe
push
adc
sbb
mov
sub
in
insl
sbb
je
mov
cs
testl
mov
push
movsl
mov
loope
sbbl
call
and
lcall
outsl
sbbl
pop
pop
jmp
mov
test
xchg
pop
mov
mov
mov
lock
fsubp
mov
aas
jge
les
inc
shrl
cmpsb
fwait
iret
sub
lds
mov
pop
ja
arpl
jnp
pop
pop
enter
pop
fptan
cmp
in
test
sub
mov
movsb
ret
ljmp
sub
xchg
loop
mov
mov
mov
add
mov
mov
xchg
popa
lcall
xor
cmp
push
sti
cltd
adc
into
idivb
push
ds
cltd
jno
xor
imul
out
jge
jns
fldt
cmp
iret
jnp
scas
jl
jecxz
inc
repnz
adc
cwtl
cld
stc
or
popf
inc
int
inc
in
popa
lcall
cli
pop
cmc
sub
push
clc
repnz
aas
or
movsb
js
cli
push
jg,pt
sub
mov
jge
stos
in
addr16
ds
dec
add
jnp
and
js
movsl
inc
fdivl
xlat
fiadds
xchg
or
pop
mov
xchg
mov
or
jb
or
jp
bound
orl
sahf
xchg
movl
test
or
jp
xor
hlt
cmp
shll
add
stos
stc
imul
imulb
aad
in
std
bound
outsb
loopne
xor
mov
push
pop
pusha
call
mov
out
aaa
gs
xchg
dec
sub
add
mov
movsb
dec
jns
sbbl
sbb
shl
and
dec
mov
mov
test
push
mov
int
dec
lods
mov
push
imul
jmp
dec
cmp
in
sti
ljmp
fbstp
sub
cmp
out
dec
inc
lea
loope
iret
test
sbb
fs
mov
int
mov
fwait
pusha
jo
jge
add
call
dec
push
out
fs
test
cmpsl
movl
movsl
sub
in
and
out
add
outsb
mov
cs
push
outsb
sahf
ss
push
aaa
mov
ret
sub
test
mov
xor
push
ds
mov
dec
test
push
mov
ja
jb
pushf
cmpsl
bnd
pop
movsl
shrl
mov
jle
lret
mov
iret
inc
testl
das
cmpsl
dec
out
pop
push
subl
lods
dec
dec
xchg
cwtl
pop
imul
dec
pop
sub
aaa
dec
pop
aad
fsubrp
mov
lea
push
test
fistps
xchg
int3
inc
pop
add
adc
cmp
xlat
xchg
fsubl
fisttps
in
out
in
stc
dec
je
xor
das
pop
xor
out
mov
and
mov
dec
sub
in
cmp
push
jo
imul
fnstsw
xchg
insb
mov
jmp
mov
push
sti
push
in
push
test
jg
jne
inc
jge
fidivrs
xchg
pop
jo
repnz
xor
cmp
sbb
shrb
addl
popa
push
mov
dec
cmpb
sbb
xchg
bnd
xor
sbb
dec
stc
arpl
pop
insb
cld
or
pop
mov
mov
lock
je
xor
adcb
js
lods
inc
sahf
adc
test
andb
loop
dec
and
sub
and
aaa
mov
rclb
mov
sub
js
push
cmp
cmp
push
popa
and
pop
fldt
mov
stos
mov
dec
inc
xor
in
mov
and
cmp
push
cmp
call
lea
lods
loop
pop
test
xchg
xchg
shr
mov
mov
cmp
and
jne
mov
pushl
mov
and
outsl
rol
pop
nop
pusha
cmp
xor
cmp
fisttps
into
or
out
sub
out
xor
loope
mov
dec
xchg
xrelease
xchg
fsubr
xor
popf
sbb
or
cli
adc
test
aaa
je
push
xor
mov
or
inc
xchg
repnz
pop
and
les
push
lahf
push
xor
rclb
xor
xor
clc
xor
cmpl
stos
mov
into
mov
push
outsb
adc
pop
aad
scas
nop
mov
or
push
xchg
call
xor
lods
jns
xchg
movsb
ljmp
cli
pop
nop
shl
add
je
jl
sbb
adc
iret
inc
sbb
cmp
mov
sub
cmpsl
rclb
scas
jecxz
ljmp
jle
popa
in
pop
lock
cmc
add
in
inc
hlt
sbb
in
and
inc
fldcw
push
scas
pop
test
jg
xchg
jns
int3
das
mov
and
scas
push
stos
imul
sub
out
inc
mov
js
stos
ret
out
dec
jns
jg
test
mov
es
adc
xor
pop
mov
push
cmp
cmpsl
xchg
xchg
cld
enter
cmpsb
xchg
and
sub
inc
outsb
cmp
cmpsl
mov
jecxz
insl
add
pop
mov
sbbl
in
or
ja
mov
dec
mov
cwtl
div
add
cld
mov
cld
or
outsl
or
lea
cs
dec
jae
dec
or
xchg
insb
mov
sub
xor
mov
repnz
sub
mov
inc
xchg
imul
lea
sti
sahf
ljmp
mov
cmp
xor
les
add
ss
inc
scas
pop
jmp
or
popf
sub
outsl
jns
hlt
mov
or
jnp
adc
in
and
bound
nop
push
sbb
daa
fsubs
out
lods
push
inc
cwtl
push
jae
push
add
add
aam
scas
sbb
stos
push
mov
mov
push
popa
cmp
xor
sbb
pop
sbb
add
add
add
and
fwait
mov
push
add
pop
int3
insb
fst
mov
pop
mov
popa
scas
punpckldq
jg
xor
push
mov
stc
ret
xor
dec
lods
xor
pop
ds
stos
jge
push
ja
xchg
pop
subb
jo
or
shr
subb
jmp
test
in
dec
test
in
repz
sbb
xchg
sub
sahf
dec
fldt
std
dec
add
push
sub
and
push
mov
fbstp
inc
push
outsl
mov
popf
mov
out
adc
mov
mov
sbbl
test
jle
mov
jns
xchg
ds
dec
and
mov
push
mov
xchg
xor
lret
mov
pop
push
xchg
les
mov
mov
fildl
mov
cmpsl
cmpl
mov
sti
mov
pop
dec
movl
je,pt
in
dec
mov
mov
imul
sbb
dec
pop
cmp
arpl
mov
mov
adc
insl
icebp
mov
dec
pop
mov
mull
dec
jb
xchg
subb
pop
cmpsl
cmp
ret
xchg
shlb
test
mov
int3
addr16
mov
or
aad
rorl
mov
cmp
lea
mov
outsl
jo
inc
fwait
mov
insl
dec
loopne
push
loopne
and
iret
sub
xor
icebp
or
test
insl
pushf
std
fwait
cmp
sahf
dec
jp
dec
and
lret
inc
pop
rol
outsl
push
lcall
out
pop
fidivl
push
or
or
movb
sub
adc
ss
mov
or
sbb
pop
in
outsb
xor
and
pop
sub
shufps
clc
push
cmp
push
xchg
and
test
or
pop
dec
dec
cmc
jle
xchg
xchg
test
xor
loopne
cs
xor
je
xchg
in
inc
jmp
dec
jmp
leave
fimull
sbb
push
fisttpll
or
push
pusha
xor
jnp
adc
and
gs
outsb
mov
dec
push
loope
adc
cmpl
xor
out
std
push
orb
aas
sbb
adc
xor
push
xchg
mov
shrl
xor
and
push
adc
xor
cmpb
mov
pop
dec
xchg
shll
pop
int
dec
test
aas
orb
icebp
nop
pop
lods
mov
jns
add
std
dec
push
xor
int3
sub
jle
loopne
mov
or
push
fcomi
push
xor
mov
mov
pop
jns
jno
popa
push
leave
ljmp
cld
mov
dec
pusha
mov
xor
addr16
xor
adc
adc
scas
sub
jl
mov
lcall
std
scas
adc
das
sub
out
lods
pushf
int3
dec
jg,pn
jmp
xchg
movsb
jne
rcrl
jbe
cltd
or
mov
ret
call
cmp
inc
insl
out
test
fbstp
aas
gs
dec
pop
mov
mov
xchg
or
inc
xchg
and
cmpl
inc
mov
int
push
pop
pop
dec
inc
pop
push
or
es
xchg
imul
push
mov
pop
mov
sti
fsts
and
loope,pn
aad
out
add
mov
mov
shrb
fnstcw
scas
push
push
mov
jecxz
pusha
pop
jo
addr16
push
call
popf
jne
fisttpll
lock
scas
cwtl
push
jmp
add
ss
incb
mov
or
and
incb
mov
movsl
call
xchg
aas
mov
pop
xchg
mov
cs
ds
mov
fwait
lds
outsl
pop
mov
popa
fsubs
cld
xor
aad
sbb
xchg
cmc
sbb
lahf
lds
mov
xchg
popa
in
sahf
sbb
insb
stos
pop
pop
mov
popf
lods
aas
nop
cmp
test
jle
in
inc
leave
sahf
nop
add
movsb
and
sbb
sub
mov
cli
ja
sub
xor
inc
mov
repz
fs
xor
adc
out
sarl
dec
jp
fwait
stc
loopne
clc
fbstp
pop
dec
push
sub
add
jp
repz
jb
mov
bound
jle
adc
pop
repnz
mov
out
jg
lret
xorl
add
int
pop
sbb
dec
jbe
lcall
or
je
shl
pop
jmp
cltd
and
aas
mov
dec
punpcklbw
js
xchg
outsb
push
cmp
cmp
popa
int
rep
scas
push
adc
xor
test
decb
cmp
cmp
cmp
jbe
push
scas
xchg
add
or
or
xchg
mov
lds
neg
jp
dec
ficoms
mov
and
in
sahf
movsl
pop
jbe
sbb
sbb
scas
js
loope
and
push
icebp
loop
fistl
mov
xor
ja
sbb
movsb
sbb
jbe
and
sbb
or
push
js
int
mov
adc
or
jg
icebp
or
stc
add
int
mov
ret
xor
sbb
sbb
lret
int
inc
dec
xchg
jp
push
mov
pop
mov
jbe
movl
xor
addr16
inc
inc
fldcw
ja
aas
push
aam
pop
movsb
pop
jno
ret
out
dec
sub
aas
pop
lea
shl
push
add
push
call
xchg
inc
stos
mov
lods
fimuls
mov
aas
bound
or
dec
xor
fcmovb
out
jecxz
mov
ljmp
jae
js
add
push
call
lahf
out
adc
mov
inc
iret
lods
in
or
pop
rcr
xor
cmpsl
jae
cld
mov
mov
mov
mov
push
jbe
outsb
ret
and
data16
push
out
pmaddwd
icebp
or
mov
stc
push
mov
inc
lds
loopne
xchg
adc
add
sbb
popa
cld
je
mov
repnz
push
mov
shll
jne
lahf
in
call
inc
and
es
xchg
sbb
loopne
clc
dec
bound
lods
add
lock
xchg
sub
loopne
mov
data16
lret
cmp
mov
cld
in
add
aaa
inc
mov
cmc
mov
leave
inc
push
fwait
bound
xor
mov
repnz
push
cli
sbb
pop
jo
lds
jns
js
push
shr
inc
cmp
pop
dec
popf
imul
fwait
xor
cmpsl
lods
sbb
into
shrl
add
lret
jmp
or
js
imul
jbe
push
cmp
lahf
mov
dec
dec
sbb
mov
es
out
sbb
push
xor
shlb
sbbl
imul
adc
xchg
dec
pop
mov
out
jg
jns
xchg
adc
pop
cmp
je
mov
sbb
xchg
dec
aam
std
hlt
out
lret
mov
sbbb
xchg
xchg
mov
push
ret
movsl
sub
fsubrl
in
fmuls
xor
xchg
sahf
jno
fistpll
repz
or
add
mov
cmp
sbb
mov
mov
mov
pop
jl
mov
aam
mov
out
or
dec
popf
and
or
mov
adc
lods
mov
sub
mov
push
add
mov
inc
push
cmpsl
cmp
push
cmpsb
dec
jns
and
stc
js
or
fsubrs
mov
fcoms
jl
jle
out
outsb
push
sbbl
jo
out
ret
fiaddl
lret
inc
cmp
pushf
dec
imul
inc
dec
shll
icebp
out
fs
inc
jns
mov
inc
jmp
mov
xchg
xchg
pushf
sti
fndisi(8087
push
test
mov
out
mov
mov
sbb
stos
add
enter
into
jmp
xchg
movsl
dec
ficompl
mov
cmp
xor
add
stc
add
cmp
pop
cmp
popa
shll
loope
xchg
outsb
fiadds
pop
push
jbe
popa
pop
cltd
mov
mov
int3
cmpl
cmpsl
mov
sbb
in
cmp
js
clc
pop
inc
fisubl
rcrl
scas
ret
cmp
xchg
mov
jmp
test
repz
lods
or
imul
ffreep
addr16
movsl
mov
cmp
xchg
loopne
mov
loopne
adc
push
scas
loop
scas
push
leave
pop
jo
and
add
and
loopne
cld
sbb
adc
fisubrl
push
inc
mov
test
and
sbb
cmp
call
inc
inc
repz
icebp
jmp
lea
adc
adc
mov
jl
jp
cs
jmp
sti
outsb
xchg
jg
xchg
test
and
lret
mov
dec
cmc
jno
sub
add
clc
das
lret
mov
std
stos
add
xor
add
mov
mov
push
shl
mov
fs
cmp
mov
inc
mov
pop
pop
sub
mov
test
lods
add
mov
mov
jne
loope
jg
dec
or
sbbl
shll
jnp
cli
adc
stos
loopne
xchg
out
xchg
aaa
pusha
or
insb
or
daa
je
mov
popf
enter
lds
dec
ffree
sbb
sbb
inc
mov
test
mov
mov
movsl
mov
out
push
lahf
jmp
cli
and
repnz
cmpsb
mov
bound
jmp
mov
daa
and
pop
and
push
ja
test
sbb
mov
and
jo
fwait
loop
pusha
or
push
rol
mov
inc
mov
xor
jne
xor
jne
mov
dec
sbb
pushl
xor
jne
xor
jne
adc
add
add
subb
fistps
jmp
push
pop
dec
inc
and
cmp
jle
out
pop
das
adc
pop
daa
pop
fisttpl
cmp
cltd
in
push
xlat
pop
xchg
xchg
pop
lock
test
and
repz
inc
das
xchg
xchg
aam
pop
cmpsl
sub
adc
xor
push
icebp
inc
scas
mov
dec
lods
add
arpl
cmp
cwtl
je
lret
add
rorb
ja
pop
repnz
mov
mov
pop
data16
xchg
push
xchg
pop
loop
push
lds
and
xchg
out
xlat
lds
fwait
nop
cmp
bound
mov
push
adc
jns
test
negb
clc
lahf
and
lret
loop
xor
mov
pop
mov
rorb
imul
popa
popf
sbb
fldl
adc
out
or
ljmp
rorb
ds
push
sub
mov
stc
pop
lret
inc
and
jno
xor
out
pop
cli
les
sbb
addr16
pop
sub
push
cmpsl
cmp
icebp
mov
mov
pop
adc
pop
aam
mov
insl
nop
jne
cmp
je
arpl
lods
imul
nop
inc
jg
aam
jp
push
jo
shrl
iret
push
push
in
test
pushf
sbb
add
push
insb
and
inc
lcall
push
inc
not
or
imul
out
xchg
xor
js
imul
popa
mov
jl
mov
cli
sahf
add
outsb
add
mov
push
lahf
dec
adc
inc
nop
lcall
pop
lret
popa
pop
add
loope
rorl
call
and
fsubs
push
xchg
xor
pushf
xchg
push
rcll
mov
pop
in
fucomp
out
das
ss
xchg
mov
inc
loope
out
sbb
sbb
shll
and
cmp
and
and
aaa
mov
dec
jl
rcrl
dec
jmp
push
and
in
popa
pop
and
jl
shl
mov
enter
or
xchg
xchg
pop
in
jge
je
pop
sub
pop
rcrb
dec
int3
xchg
pop
mov
jns
aad
xor
daa
fbld
dec
clc
mov
xor
sub
in
mov
add
sbb
push
dec
pop
sbb
ret
dec
das
xor
fwait
pop
icebp
cmp
rcl
iret
cmpsl
or
fmulp
sub
ja
insb
test
push
mov
cmc
mov
lret
xchg
sub
aas
lea
or
adc
inc
imul
iret
inc
and
test
push
sbb
cmp
mov
xor
mov
or
lods
inc
adcb
lods
int3
sahf
sbb
mov
test
dec
stos
test
mov
mov
insb
mov
leave
lret
not
dec
sbbb
pop
sbb
push
mov
cmpsl
das
out
and
into
cmp
xchg
xor
inc
ret
pop
data16
and
xchg
sahf
leave
cwtl
mov
pop
sahf
roll
pusha
test
les
add
mov
and
sbb
out
mov
xor
sub
mov
or
lret
arpl
rcrl
and
pop
arpl
pop
add
sbb
cmpl
and
jecxz
orps
inc
push
shlb
aas
jmp
mov
mov
xor
xor
sub
push
adc
test
sbb
sti
cmp
cmc
or
movsb
xchg
xchg
lret
cmpsb
aas
cmp
fwait
mov
jo
arpl
int3
push
pop
dec
rolb
stos
pop
std
ret
in
daa
loop
inc
mov
call
leave
xchg
xlat
push
fldt
cld
and
add
jnp
xor
jb
jmp
jge
rorl
and
mov
mov
dec
push
sbb
ss
das
xchg
outsl
sarb
jo
mov
xchg
mov
cmpsl
xchg
cmpl
cmc
inc
into
daa
loopne
and
shl
sub
imul
loopne
dec
mov
pop
daa
xchg
adc
test
ss
ja
inc
fsubl
cmp
push
push
jge
mov
mov
mov
cmpsl
cld
cmc
jmp
lods
icebp
push
or
and
aam
cld
lods
xorl
jno
shlb
rcr
shll
pop
aas
adcb
inc
add
inc
adc
les
xchg
enter
or
movsb
jno
jle
push
movsb
dec
outsb
xlat
fistpll
lret
mov
ss
lods
mov
mov
and
fsubr
dec
cmp
sub
int
inc
mov
jl
scas
addr16
mov
sbb
or
shll
aaa
cli
add
and
jecxz
lcall
int3
fnstsw
sbbl
mov
push
jmp
jecxz
shrb
scas
and
jns
call
push
dec
add
xchg
into
jbe
add
test
pop
mov
shrl
mov
xchg
jno
dec
jno
jne
add
aam
add
ljmp
xchg
jg
loopne
and
out
mov
push
or
mov
rcr
push
cmp
xchg
iret
lods
adc
mov
in
mov
pop
add
xchg
loope
fimuls
mov
stos
sbb
cmp
jne
mov
push
push
add
xchg
int3
or
sbb
clc
hlt
xor
sub
and
repz
xchg
xchg
push
hlt
adc
xchg
or
mov
add
dec
push
lret
ljmp
loop
test
sub
add
orb
lock
jecxz
mov
sub
das
pusha
mov
sbb
fcmovnbe
out
fxam
jle
xor
mov
popf
mov
jb
std
idiv
jb
mov
mov
jns
sahf
inc
jno
cmc
out
mov
pop
iret
lds
je
ljmp
and
push
add
pop
clc
sub
pusha
or
jb
dec
mov
or
test
ss
addr16
jle
xchg
cld
jnp
mov
add
enter
cmp
lret
sbb
loope
icebp
adc
pushf
ficoml
cmp
xchg
push
insl
rolb
mov
paddsb
cmpsb
rorl
in
mov
jl
mov
xchg
repnz
push
shr
jle
cmp
cmp
sbb
jp
mov
aaa
adc
dec
mov
je
inc
xor
mov
out
dec
lret
out
ja
testl
arpl
and
or
lcall
push
cli
aas
shlb
in
mov
fmuls
pushl
add
push
dec
or
jo
test
fisttpll
dec
call
and
add
or
mov
imul
pop
ljmp
leave
jl
mov
loope
mov
mov
jmpw
les
jmp
adc
lret
shrb
fs
test
clc
or
adc
fs
pop
jb
sub
sub
fsts
les
cmp
xchg
pusha
mov
push
adc
in
jecxz
aad
cmc
test
cmp
enter
lds
adc
push
mov
mov
cmp
je
dec
mov
lods
leave
xorl
aaa
fidivrs
add
mov
add
add
sub
pop
mov
inc
out
in
cmp
in
adc
inc
lahf
sti
push
pusha
std
mov
loop
adcl
divl
ss
push
jmp
jecxz
adc
ret
mov
mov
sbb
enter
cld
dec
dec
mov
cmp
add
jg
xor
sbb
test
das
mov
sti
sub
mov
pop
xor
jmp
imul
loop
stc
out
inc
push
fistpll
cmpb
subl
mov
and
enter
shrb
lahf
push
push
xor
inc
cmp
or
cmpb
mov
std
or
xchg
clc
out
imul
xor
mov
insl
movsl
sbb
jmp
push
mov
adc
push
sbb
jp
mov
mov
stos
and
int3
es
push
cmpl
jno
pop
inc
sahf
push
jo
pusha
rol
cmp
les
xor
nop
push
dec
sbb
mov
cmpl
mov
data16
push
mov
shlb
mov
mov
or
inc
fwait
lret
pusha
pop
jne
sub
out
aaa
clc
scas
lds
ds
pop
nop
js
scas
shrb
xor
je
dec
push
mov
ds
fs
test
xor
xor
loop
hlt
je
cmp
enter
in
imul
nop
loope
xlat
stc
sbb
pop
stos
jae
xchg
cmp
xor
in
movsb
or
cltd
scas
bound
dec
aam
cmpsl
dec
fdivrl
adc
mov
decl
mov
mov
aas
ret
fcoms
pop
fs
je
pop
push
mov
mov
pop
mov
xlat
push
aas
mov
and
sahf
sbb
adc
fsubrl
xorl
das
out
mov
and
adc
sbb
ret
inc
cmpsl
cli
jmp
sub
sub
jmp
imulb
add
push
mov
ficoml
push
repnz
and
addr16
adc
mov
popa
jnp
xor
mov
ja
dec
imul
divl
mov
fs
jg
stc
outsb
jb
jbe
xor
adc
outsl
cli
dec
jae
sbb
ds
jae
fwait
enter
fmull
fld
xchg
lods
mov
cltd
bound
cld
inc
or
xchg
int3
adc
mov
push
pop
sbb
decb
jl
xchg
add
ja
pop
lret
pop
or
js
mov
fsubrs
jnp
data16
cli
xor
stos
pop
xchg
scas
cltd
lods
ret
call
aaa
mov
push
cs
insb
pop
out
push
mov
cmpsl
jmp
cwtl
xchg
sahf
sti
das
mov
xlat
jno
loopne
fildl
jl
sub
shrl
mov
push
and
lahf
push
in
lahf
js
push
jmp
add
pop
in
jae
js
push
stc
movsl
fsts
fnsave
cmp
or
out
loope
push
shr
loopne
jo
loop
mov
sbb
mov
mov
dec
imul
adc
jmp
rcl
sti
push
mov
mov
jbe
andb
push
lds
js
xlat
mov
lock
out
jle
loope
lock
pop
fnstcw
and
ss
adc
dec
out
mov
insb
aas
addb
jp
mov
push
rcll
xchg
iret
push
add
clc
xchg
mov
cmp
push
push
xchg
popa
lods
cmpsb
mov
xlat
cmc
fisubrl
mov
xlat
jnp
jo
mov
or
sbb
mov
stos
mov
jns
push
fstpl
mov
lock
test
out
sahf
inc
push
sbb
pop
out
enter
je
fcmovnbe
jle
jle
xchg
or
xchg
jno
sbb
cltd
jb
sti
push
int
and
dec
fs
xor
out
xchg
or
xor
mov
clc
jecxz
je
cld
mov
xor
add
cltd
and
sbb
aaa
xchg
repnz
gs
addr16
sbb
pop
repz
pop
xor
loop
filds
xor
ret
lahf
mov
adc
aaa
test
or
je
adc
sahf
sub
je
xchg
push
and
inc
mov
push
add
xorl
inc
rol
out
push
push
xchg
int
test
data16
and
lret
addl
jmp
in
jge
fidivrs
or
cltd
movsb
loope
pop
push
jecxz
test
xlat
pop
int
sbb
jge
pop
test
dec
outsl
stos
and
fldenv
shrl
push
mov
or
popa
and
loope
mov
and
sti
ljmp
push
ret
jle
adc
xor
push
call
and
sti
push
sbb
xchg
mov
pusha
imulb
repz
repnz
dec
push
push
stos
in
flds
sub
aad
push
adc
jg
daa
adc
inc
cmp
test
mov
mov
out
sub
cmp
mov
fwait
lds
cs
jmp
sbb
pop
lret
xor
cmc
bound
pushf
cmp
xchg
xor
xacquire
adc
inc
inc
jge
add
cmp
mov
out
or
enter
mov
outsl
jl
add
push
clc
fstps
into
lods
push
mov
pushl
jmp
jns
loop
ja
addl
push
fldcw
dec
pop
pop
or
loope
xor
sbb
fstl
xor
push
stc
andb
out
out
aaa
imul
add
jecxz
xor
cld
cmpsb
pusha
push
negl
inc
push
mov
mov
sub
imul
addr16
push
adc
jg
insb
inc
pop
pop
pop
cmpl
in
push
jecxz
shl
pushf
ljmp
jg
adc
jle
cmpsb
insl
negb
cmp
adc
pop
pushf
sbb
jmp
scas
movsb
fs
push
dec
push
mov
adc
insl
fstpl
test
cmp
jmp
aas
lds
xchg
inc
pop
push
sbb
pop
jb
popa
push
pop
jne
xor
sbb
fs
loope
inc
pop
jg
pop
cs
dec
mov
mov
dec
inc
btcl
mov
enter
ja
xor
xchg
shlb
insb
aam
mov
adc
clc
or
out
dec
sti
call
cmpsl
bound
pop
and
push
mov
add
test
out
rcrl
test
leave
sub
add
xchg
imulb
fsts
insb
les
cmp
rolb
sbbb
cmpsl
xorl
jg
jnp
loop,pn
sbb
inc
scas
pop
in
lds
mov
arpl
in
pop
stc
lcall
mov
shlb
jae
xor
and
test
or
movsb
push
sub
pop
outsb
jns
stc
adc
sbb
std
in
sub
lods
incl
add
sub
xlat
insb
scas
add
cs
sbb
lods
push
repz
out
sti
mov
pop
test
push
push
and
cmp
scas
and
add
out
pop
pop
in
ljmp
mov
rorb
sub
rcll
pop
testb
dec
adc
inc
xchg
dec
int3
cmp
fidivs
les
movlhps
inc
pop
push
sbb
jecxz
sub
xor
gs
js
add
xor
pop
or
mov
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
inc
add
adcb
add
sub
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jne
add
add
xorb
add
enter
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
mov
add
add
add
lods
in
add
add
add
add
add
add
mov
add
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
inc
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
add
sub
or
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
popa
add
popa
add
add
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
add
add
add
add
add
push
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
je
jb
jne
add
add
add
add
js
add
add
add
add
add
add
and
add
add
add
add
add
jne
and
add
add
call
jne
adc
add
add
sub
add
xor
add
add
add
add
add
add
add
add
add
rolb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
or
ja
add
or
push
ja
add
push
jo
add
push
add
add
push
add
add
incl
jo
add
add
out
loopne
add
add
loopne
incl
add
incl
add
popl
add
add
add
add
add
pop
add
rorb
add
sldt
rorb
add
sldt
rorb
add
jg
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
ja
add
add
add
or
incl
ja
jo
add
add
incl
ja
add
add
add
incl
jo
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
decl
add
add
add
decl
add
add
add
add
decl
out
mov
out
out
out
out
add
add
inc
cld
add
addb
clc
add
pop
clc
add
pop
clc
add
jg
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
aas
sti
ljmp
add
add
add
add
add
add
add
add
add
add
add
incl
inc
cld
cmp
inc
cld
pop
clc
aas
cld
pop
sti
cld
pop
sti
cld
jg
std
sti
std
sti
std
sti
std
sti
std
sti
std
sti
std
sti
std
sti
inc
sti
cld
cmp
clc
cmp
sti
ret
clc
aas
sti
inc
cld
add
rolb
clc
add
pop
clc
add
pop
clc
add
jg
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
aas
sti
incl
