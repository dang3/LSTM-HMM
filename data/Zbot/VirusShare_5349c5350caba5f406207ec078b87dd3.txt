mov
pop
or
iret
sbb
fdivs
mov
dec
pop
adc
jmp
pop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
add
add
mov
mov
sub
mov
mov
pusha
call
add
sub
mov
push
mov
sub
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
in
sub
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
xchg
cmp
push
cs
cmp
or
cmc
bsr
lods
add
adc
cmc
aam
das
rcl
addb
xor
add
mov
rep
fdivrs
std
mov
xchg
inc
dec
mov
cmp
int3
enter
or
je
cmp
adc
lds
in
sub
push
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
xor
xor
fildl
cmp
mov
dec
add
jp
clc
fisttpl
xchg
pop
add
mov
in
sub
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
sbb
test
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
add
add
and
and
popa
push
push
mov
sub
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
xor
sub
mov
pop
sub
addl
cmpsl
icebp
pushf
orl
sbb
ds
xchg
cltd
mov
mov
imul
mov
sub
hlt
push
sahf
pop
push
pop
hlt
shll
stos
or
sub
neg
ficoms
dec
cmpsb
sbb
push
mov
sub
push
push
lea
push
subl
lea
push
subl
lea
push
lea
push
mov
push
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
lea
mov
mov
add
push
pop
xor
add
lea
push
popl
pushl
pop
dec
lea
and
pushl
lea
pop
repz
sub
test
jne
mov
pop
ret
add
dec
push
mov
push
mov
sub
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
dec
mov
daa
andb
shll
pop
sbb
jmp
ret
push
pop
clc
sbb
sub
mov
dec
and
add
add
ret
add
and
add
add
data16
add
and
add
and
add
and
add
add
mov
and
add
and
add
and
add
and
add
and
add
add
add
add
pop
and
add
add
and
add
and
add
and
add
add
adc
add
andb
add
and
add
add
push
and
add
add
add
add
mov
and
add
and
add
add
add
and
add
and
add
and
add
add
and
add
add
add
add
fisubs
add
nop
and
add
add
push
and
add
and
add
and
add
add
data16
add
and
add
and
add
and
add
add
mov
and
add
and
add
and
add
and
add
and
add
add
add
add
pop
and
add
add
and
add
and
add
and
add
add
adc
add
andb
add
and
add
add
push
and
add
add
add
add
mov
and
add
and
add
add
add
insb
jae
jb
outsb
inc
add
imul
je
imul
push
add
add
fs
imul
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
gs
inc
imul
insb
gs
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
imul
jb
je
arpl
add
inc
add
outsl
jae
dec
popa
outsb
fs
gs
add
insb
jae
gs
popa
insb
jne
add
add
outsb
fs
je
insl
push
add
fs
outsl
outsb
jae
insb
gs
add
mov
push
gs
fs
outsl
outsb
jae
insb
gs
add
roll
dec
gs
jo
imul
inc
outsl
jo
inc
imul
gs
outsl
imul
jbe
jae
add
fs
outsl
outsb
jae
insb
gs
add
aam
inc
gs
jb
jbe
push
jns
gs
add
jae
inc
jbe
outsb
je
add
add
insb
gs
jae
dec
jne
gs
add
push
dec
inc
dec
xor
cs
insb
add
pop
add
addr16
outsl
js
add
add
jo
jb
inc
jb
outsl
jb
push
add
outsb
fs
push
add
inc
jb
dec
jae
add
add
inc
push
inc
jae
jb
outsl
jb
pop
add
addr16
outsl
js
add
inc
jb
dec
jae
add
add
inc
jb
dec
jae
add
or
push
gs
jb
inc
jb
outsl
jb
push
add
outsb
fs
push
push
add
outsb
fs
push
add
inc
push
inc
jae
jb
outsl
jb
pop
add
addr16
outsl
js
add
push
dec
push
cs
insb
add
outsl
add
jo
jb
push
push
outsl
push
inc
popa
je
add
insl
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
outsb
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
outsl
ja
gs
outsl
jb
push
dec
add
inc
push
inc
inc
dec
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
inc
add
test
add
cmp
add
add
add
add
add
ja
add
add
add
add
add
add
add
add
add
xor
add
cwtl
roll
or
add
add
add
add
add
add
add
and
add
add
andb
add
imul
xchg
xchg
xchg
add
scas
scas
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
fwait
pop
xchg
xchg
xchg
or
jle
jp
jl
stos
lods
lods
add
test
mov
mov
mov
ret
ret
leave
lret
lret
into
rcl
in
rcl
shl
iret
rcl
hlt
int3
int3
int3
hlt
leave
mov
out
vpmulhuw
mov
mov
lods
stos
lea
fwait
fwait
and
jne
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
and
mov
mov
lret
not
rcl
cld
fcom
xlat
std
xlat
fcom
fcomp
xlat
aam
aam
ror
sar
into
int
aam
dec
rcl
inc
ret
mov
mov
scas
iret
mov
mov
and
add
push
add
add
add
add
add
add
add
add
stos
lods
stos
add
scas
scas
sbb
mov
jnp
mov
mov
dec
lret
ror
sar
aad
aam
fcom
xlat
call
fcom
call
aad
dec
into
int
into
into
into
call
aad
dec
int
inc
mov
mov
ljmp
cmpsb
cmpsb
ljmp
pop
or
or
add
add
add
add
add
pop
add
add
add
add
add
add
push
push
push
add
inc
add
pop
add
or
inc
or
sbb
push
add
add
add
or
or
or
add
add
add
mov
add
mov
inc
mov
mov
mov
mov
ret
leave
dec
into
int
rcl
sar
xlat
xlat
xlat
call
xlat
xlat
call
aad
int
int
lret
dec
int3
int
inc
mov
mov
jmp
mov
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
imul
bound
pop
fs
ds
sbb
sbb
or
sbb
aaa
aaa
cmp
cmp
adc
pop
pop
pop
add
add
add
add
gs
mov
pop
mov
mov
mov
mov
mov
rol
enter
ror
sar
aam
aad
aad
dec
rcl
inc
enter
inc
ret
mov
mov
ljmp
movsb
movsb
popf
popf
popf
xchg
xchg
xchg
lcall
addl
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
add
jno
jge
jl
jle
jle
jo
jno
bound
mov
cmp
cmp
mov
jo
outsl
nop
popa
bound
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
inc
enter
lret
lret
leave
leave
inc
enter
mov
mov
ljmp
movsb
movsl
lcall
xchg
xchg
xchg
xchg
xchg
cwtl
cwtl
xchg
lcall
lahf
ds
push
or
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
outsb
outsl
add
pop
or
jp
xchg
mov
incb
jnp
jl
jnp
outsb
outsb
outsl
out
push
push
ret
jle
jns
js
fs
inc
cmp
pop
sbb
adc
prefetch
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
cmpsb
test
popf
pushf
popf
call
xchg
decl
xchg
xchg
lahf
lahf
mov
ficoms
xchg
nop
jle
js
pop
das
xor
das
add
add
add
add
add
add
add
add
add
add
mov
pop
push
addl
in
mov
mov
addb
decb
mov
jge
jg
jo
jno
jne
jne
jle
jge
addl
xchg
data16
cmp
and
jge
cmp
movsl
movsb
movsl
shrb
stos
lods
sti
lods
lods
stos
stos
stos
lods
test
stos
std
movsb
movsl
mov
xchg
xchg
xchg
decl
jge
jp
jp
jl
jp
mov
xchg
movsl
movsb
movsb
scas
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
sbb
add
add
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
xchg
incl
test
std
xchg
xchg
xchg
std
cwtl
cwtl
cwtl
stc
xchg
xchg
xchg
in
mov
or
addb
mov
pop
push
or
inc
inc
dec
insb
insb
insb
jl
test
leave
fwait
fwait
cltd
fistps
fwait
lcall
mov
mov
mov
lea
fwait
jmp
lods
scas
mov
mov
mov
mov
mov
std
mov
mov
movsb
mov
jnp
scas
cmpsl
stos
add
pop
adc
test
mov
incl
xchg
decb
xchg
xchg
sahf
popf
pushf
std
mov
mov
xchg
in
xchg
nop
in
test
push
jne
or
add
inc
daa
daa
es
dec
dec
dec
outsw
jb
test
xchg
xchg
rclb
xchg
xchg
std
nop
nop
decb
xchg
xchg
lcall
movsl
cmpsl
ljmp
test
lods
mov
xchg
test
std
ret
mov
mov
ljmp
sahf
adc
add
add
pop
pop
adc
mov
jmp
popf
xchg
pushf
decl
mov
call
nop
nop
xchg
xchg
xchg
sahf
sahf
popf
movsl
movsb
mov
movsb
movsb
movsl
negl
jp
movsl
push
push
push
outsl
dec
dec
dec
pushaw
pusha
popa
jne
je
mov
jg
test
mov
lea
xchg
testl
mov
jmp
mov
mov
pop
mov
mov
xor
js
mov
movsb
mov
mov
mov
mov
mov
add
mov
pop
pop
adc
mov
jmp
lea
call
xchg
xchg
call
xchg
lcall
lahf
sahf
mov
std
mov
lcall
nop
nop
xchg
les
cltd
lcall
xchg
cmc
xchg
test
std
xchg
jae
lcall
jmp
inc
jge
mov
jnp
mov
je
mov
insl
ljmp
adc
lods
or
ljmp
inc
jle
mov
mov
stos
pushf
movsl
movsl
movsl
and
add
shll
adc
mov
ljmp
sahf
call
xchg
xchg
lcall
pushf
sahf
lcall
popf
popf
call
xchg
xchg
decl
xchg
xchg
call
xchg
lcall
cltd
mov
cld
sahf
mov
xchg
imul
xchg
dec
js
lcall
pushf
and
mov
adc
jmp
adc
stos
adc
lods
adc
scas
adc
mov
imul
mov
imul
ds
cltd
scas
mov
lods
lods
scas
mov
movsl
mov
add
pop
pop
adc
mov
lds
popf
call
pushf
lcall
mov
movsb
jmp
cwtl
cwtl
decl
mov
decl
mov
cltd
jb
cltd
bound
call
sub
decl
adc
xchg
or
pop
call
add
mov
adc
stos
sbb
mov
insl
pushl
outsb
mov
and
and
shlb
mov
xchg
lods
mov
scas
scas
mov
mov
movsb
movsl
add
pop
pop
adc
lods
mov
mov
lcall
movsl
mov
test
cmpsb
cmpsb
cmpsb
ljmp
cmpsb
cmpsb
lcall
jle
decl
jno
mov
push
mov
decl
pop
incl
push
push
incl
add
mov
pop
decl
add
fwait
add
mov
or
mov
outsl
pushl
sub
mov
sub
sub
sub
cmp
cs
enter
sarb
mov
mov
mov
add
add
add
push
adc
test
mov
sahf
cltd
popf
jmp
stos
test
ljmp
mov
ljmp
mov
mov
mov
incl
or
incl
add
push
incl
add
xchg
push
decl
add
xchg
add
lcall
jmp
adc
mov
aaa
cmp
cmp
int3
cmp
call
cmp
mov
rorl
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
mov
mov
lahf
fwait
lahf
jmp
lods
lods
pushl
mov
pushl
mov
ljmp
js
decl
or
mov
pop
incl
or
xchg
push
incl
add
mov
push
decl
add
pushf
add
mov
add
lods
add
mov
jo
les
xchg
lret
dec
inc
call
inc
mov
roll
call
dec
xchg
call
dec
xchg
fimull
fmull
ficoml
call
test
std
mov
mov
movsl
mov
lahf
or
add
add
add
add
dec
dec
adc
jl
movsl
lahf
mov
jmp
stos
stos
pushl
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
mov
pop
call
sbb
mov
pop
decl
add
add
xchg
add
popf
add
add
add
test
pusha
pushl
es
into
dec
mov
aad
cwtl
fcoms
fistl
fcoml
ficomps
jmp
pop
sahf
jmp
pop
mov
jmp
pop
lahf
call
test
mov
mov
cmpsl
cmpsl
cmpsb
jne
lahf
sahf
or
xchg
xchg
cwtl
add
inc
adc
ja
lahf
lcall
sahf
lcall
mov
mov
mov
mov
mov
mov
mov
ljmp
inc
jne
xchg
and
xchg
and
push
call
or
call
add
cltd
add
mov
add
lods
add
mov
gs
mov
xor
fstps
fbld
fbld
jmp
cmpsb
jmp
cmpsl
jmp
cmpsl
ljmp
jmp
test
mov
cmpsl
cmpsl
mov
lahf
mov
add
add
add
inc
inc
adc
jae
fwait
xchg
cltd
call
mov
scas
scas
pushl
mov
mov
mov
mov
ljmp
push
cmp
sub
cltd
xor
fwait
jo,pn
xchg
sub
xchg
sbb
pop
call
add
mov
add
lods
add
mov
pushw
movd
roll
jmp
outsb
lods
jmp
jno
jmp
jo
call
jne
in
je
in
jbe
out
jbe
in
je
jmp
mov
mov
cmpsb
test
sahf
sahf
lahf
pop
sahf
mov
add
add
add
jle
jg
cmp
insl
outsb
js
lea
pushf
fwait
pushf
pushl
mov
mov
mov
mov
mov
cmpsb
scas
lcall
outsb
lcall
cmp
xor
fwait
sbb
call
pop
lcall
add
stos
add
mov
popa
pushl
add
enter
fsts
jmp
jbe
call
jg
in
xorb
repnz
xrelease
push
cmpb
mov
inc
mov
stos
cmpsl
pushf
sahf
sahf
daa
mov
lahf
lahf
add
add
add
pop
add
ss
pop
pop
pop
jne
jg
out
test
xchg
xchg
xchg
pushl
mov
mov
inc
sarl
rol
pushl
insb
mov
fwait
cmp
mov
inc
jle
movsl
aaa
js
fwait
pop
call
add
mov
add
lods
add
mov
gs
mov
add
shll
cmp
ljmp
out
mov
push
xchg
ret
pop
push
nop
ret
push
xchg
ret
clc
xchg
clc
ret
out
mov
clc
stos
lods
test
xor
sahf
pushf
add
add
add
inc
aas
add
xor
push
inc
dec
inc
jb
pop
dec
in
push
decl
mov
mov
mov
sar
ret
ret
ret
ret
mov
jl
lcall
dec
cmp
movsb
xor
lcall
add
mov
add
lods
add
mov
mov
add
leave
push
insl
call
xor
in
xchg
vlddqu
push
fwait
push
pushf
enter
lret
pushf
lret
sahf
int3
cld
sahf
int3
cli
cltd
lret
xchg
ret
mov
dec
mov
shlb
popl
lcall
add
xor
or
cmp
outsb
push
dec
dec
jecxz
pop
decl
mov
mov
mov
sar
inc
mov
enter
mov
mov
ljmp
dec
xchg
movsl
sub
cltd
or
pushf
add
movsb
add
lods
add
mov
mov
add
movl
je
filds
out
mov
push
movsb
into
push
movsl
int3
push
cmpsb
into
sti
test
iret
cld
test
std
stos
sar
stos
sar
cmpsl
iret
push
sahf
jmp
mov
dec
enter
mov
into
lahf
mov
xchg
add
cltd
lcall
xor
sub
inc
inc
inc
bound
pop
xlat
je
jno
mov
sarb
mov
dec
leave
enter
ret
pushl
push
xchg
scas
push
mov
lods
dec
test
lahf
sbb
sahf
add
movsl
add
lods
add
mov
arpl
mov
add
int3
add
add
ficoms
jge
out
pop
cmpsl
push
lahf
leave
sti
lods
aam
cld
scas
sti
mov
sti
scas
sar
std
mov
std
mov
std
mov
std
mov
std
mov
cld
mov
push
cmpsb
jmp
mov
dec
lret
mov
mov
lahf
sahf
sahf
pusha
xchg
xchg
xchg
or
add
add
xor
add
sbb
ss
outsl
mov
mov
aam
xlat
jmp
fdiv
rcl
sar
lret
dec
lret
lret
dec
leave
lret
lret
enter
mov
mov
scas
push
mov
stos
cmp
lcall
add
add
mov
arpl
mov
add
iret
add
add
loopne
jne
jmp
jb
cld
scas
sar
cld
mov
mov
fcos
std
mov
std
mov
xlat
inc
std
mov
int
out
call
leave
into
mov
mov
xchg
or
add
add
xor
xor
add
add
pop
pop
pop
or
enter
in
pop
call
out
test
jecxz
leave
fsubp
fucom
xlat
fcmovu
cli
aad
fdivr
int
iret
mov
imul
jmp
add
mov
mov
add
leave
add
aam
jb
fildl
jbe
jecxz
jbe
in
xor
cld
mov
loope
inc
inc
loop
inc
inc
fdivrp
std
inc
fdivrp
std
fdivrp
inc
fdivrp
std
lret
cld
mov
leave
call
leave
sar
mov
mov
xchg
adc
add
add
incb
incb
incl
repnz
or
out
in
pop
in
in
in
sub
out
out
dec
call
call
out
jecxz
out
fcmovu
fucomi
ret
mov
xchg
cmpsb
cmp
movsb
adc
pop
ljmp
add
add
movb
dec
add
add
add
ljmp
cld
mov
in
std
int3
loop
dec
out
dec
jecxz
dec
in
std
int
std
int3
loope
call
jecxz
shl
call
in
call
in
sti
ret
fcos
out
mov
fdivr
ret
test
mov
xchg
xchg
add
add
add
std
incl
incl
cmc
div
add
repnz
repnz
push
out
lock
in
icebp
icebp
cmp
in
out
pop
fsubp
loopne
les
sti
mov
pop
pop
jmp
add
mov
gs
mov
add
add
flds
je
jecxz
jnp
in
adc
negl
cli
mov
shl
cld
iret
jecxz
std
shr
std
shl
std
shl
aad
fsubr
std
jmp
fldl2t
fldl2t
cld
iret
loop
hlt
aam
in
leave
leave
leave
repz
xchg
xchg
and
xchg
cwtl
add
cld
add
std
clc
add
cli
stc
add
cmc
repz
aad
xor
jae
negb
add
add
scas
add
mov
add
lret
add
roll
jo
fldl
ja
call
sbb
cli
fdivrp
std
fsubr
fldl2e
fucomi
fucompp
std
fldl2e
fucomp
fsubr
fucomp
std
loopne
std
fucomip
jmp
jmp
std
shl
push
ret
aad
out
ror
iret
clc
lods
lods
lods
lods
xchg
xchg
xchg
jo,pn
outsl
add
add
add
loopne
add
mov
xchg
lods
jge
repnz
pop
lcallw
add
mov
mov
add
int
outsb
call
add
filds
je
ljmp
sti
mov
cld
aam
jmp
lock
std
fucomp
fldl2t
fsubr
cld
aad
std
aam
cli
iret
loop
sti
shl
stc
into
fdivrp
test
in
mov
fcos
xlat
xlat
sti
mov
mov
cltd
lcall
fwait
cltd
lcall
add
add
fcom
add
rol
lods
xchg
lcall
add
mov
arpl
mov
add
roll
jo
add
loope
js
ljmp
sti
xchg
cld
leave
sti
lret
loope
sti
fdivrp
idivl
aam
repnz
iret
push
mov
into
call
mov
sar
call
jmp
in
mov
mov
xchg
add
add
add
int
add
shrb
loopne
ss
mov
add
mov
addr16
mov
add
into
pop
jb
rorb
jmp
sbb
call
scas
lret
mov
out
leave
std
loop
ret
cld
fildll
neg
mov
lret
ret
into
in
lret
aad
loopne
fadd
call
in
test
out
out
popf
call
leave
leave
push
stos
stos
stos
adc
test
cmpsl
add
ret
rol
pop
mov
stos
aam
dec
cmp
sbb
cmpsb
sbb
jno
mov
ja
mov
dec
test
ret
push
mov
leave
fs
mov
out
mov
rcl
ror
aad
int3
rcl
int
aad
shlb
aam
jg
fcmovnu
jb
loopne
gs
in
out
out
jmp
div
sub
div
and
lock
sbb
or
mov
into
add
add
add
rol
mov
mov
les
imul
mov
popf
in
mov
sarb
test
mov
mov
cmpsl
enter
lret
rol
into
lret
iret
into
into
addr16
iret
iret
push
rcl
rorl
xlat
inc
rcr
xor
fcmovnbe
daa
fcomp
fcompl
ficoms
fucom
jecxz
loopne
jecxz
call
icebp
in
add
cli
testb
std
sti
add
std
add
std
std
add
mov
shrb
mov
mov
mov
scas
xchg
mov
mov
mov
mov
rcll
lds
mov
daa
int
into
and
aad
sbb
aad
adc
aam
or
fcom
push
aam
xlat
add
fcmovnu
add
add
in
add
in
jmp
leave
add
incl
mov
mov
add
rol
ret
sub
mov
mov
push
rol
or
leave
enter
movl
leave
aad
add
xlat
aam
rcr
aad
fcom
add
aam
add
xlat
loopne
flds
fsubp
loope
fstp
filds
in
out
repnz
std
std
add
std
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
ret
mov
ret
mov
mov
ja
test
dec
cmpsl
test
xchg
pop
add
add
add
add
add
add
mov
mov
mov
mov
mov
into
iret
shr
rcl
aad
rcl
sar
iret
into
sar
int
int3
stc
int3
lret
mov
mov
iret
lods
lods
stos
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
addl
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
sarb
into
ror
aad
call
aad
call
rcl
dec
iret
iret
dec
lret
lret
rol
mov
stos
lods
icebp
cltd
cwtl
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
jae
jne
je
gs
inc
dec
dec
cmp
sub
sub
xor
dec
sub
inc
adc
sub
add
add
mov
mov
mov
mov
mov
mov
ret
dec
lret
rcl
sar
aam
aam
int3
lret
lret
mov
pushl
test
popf
cwtl
cwtl
xchg
jmp
jno
xchg
push
push
adc
xor
add
add
add
add
jg
jg
jp
jp
addl
aam
imul
push
push
push
stos
push
insl
insb
push
pop
pop
cmp
aaa
aaa
pop
outsl
jno
adc
mov
mov
ret
mov
mov
mov
ljmp
fwait
fwait
call
xchg
xchg
lcall
xchg
dec
dec
dec
dec
movups
xor
add
and
add
adc
add
pop
fwait
cltd
cltd
add
pushf
xchg
lcall
addl
jmp
jns
sarb
jns
jp
jns
jae
je
push
push
push
cmp
aaa
popf
pushf
popf
mov
scas
scas
repz
scas
scas
sti
lods
scas
scas
std
test
pushf
pushf
call
xchg
call
mov
lods
jmp
scas
scas
leave
cmpsb
movsl
movsl
cltd
je
je
adc
adc
add
add
add
add
outsl
outsb
outsb
pop
lods
movsl
stos
loop
cwtl
sahf
incl
mov
sti
xchg
xchg
xchg
lock
nop
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsl
outsb
jo
lea
cltd
cltd
cwtl
repnz
xchg
xchg
std
lea
call
lahf
ljmp
mov
mov
scas
mov
xlat
cmpsl
mov
jg
pusha
pop
popa
or
lods
mov
cmpsl
lahf
mov
decl
nop
call
popf
mov
negl
jle
stos
push
push
push
jo
pop
push
outsl
insb
outsl
outsl
xchg
subb
nop
xchg
lock
lcall
mov
pushl
pop
mov
jnp
mov
scas
stos
insl
test
add
add
add
add
pop
or
mov
in
mov
xchg
call
xchg
cwtl
lcall
cltd
fwait
lcall
cli
xchg
xchg
xchg
jmp
xchg
lea
popl
mov
xchg
insb
xchg
xchg
pop
jg
pushf
dec
jl
movsb
inc
js
lods
ss
scas
sub
mov
outsl
ljmp
sbb
mov
mov
mov
scas
scas
jle
movsl
mov
add
add
add
pusha
or
mov
in
mov
cltd
lcall
mov
lahf
call
mov
call
jae
cld
cwtl
popa
cmp
dec
jns
xchg
cmp
xchg
daa
push
lcall
or
ljmp
pushl
sbb
mov
and
mov
test
scas
xchg
popf
sahf
lahf
adc
add
add
pusha
popa
pusha
or
lods
mov
stos
movsb
test
mov
cmpsb
cmpsb
ljmp
cmpsl
test
lcall
decl
sub
mov
pop
incl
push
push
call
add
pushf
add
cmpsl
or
pushl
sub
jl
les
jg
xor
dec
pop
xchg
inc
stos
mov
scas
mov
movsb
cmpsl
test
sbb
add
add
popa
popa
popa
or
cmpsb
stos
in
mov
cmpsl
ljmp
mov
pushl
xchg
mov
decl
push
push
incl
add
decl
add
xchg
add
lahf
add
cmpsb
add
mov
outsb
inc
aaa
test
lret
inc
mov
rolb
rolb
call
inc
xchg
fimull
call
arpl
stc
mov
mov
movsl
movsb
movsl
daa
incb
add
add
pusha
popa
pusha
or
mov
ljmp
mov
pushl
mov
stos
call
sbb
pusha
decl
or
push
call
pop
ljmp
add
mov
dec
xchg
call
pop
lcall
pop
sahf
jmp
pop
mov
fildll
dec
cmpsl
mov
ret
cmpsl
xor
add
add
dec
pop
jl
jl
fwait
cwtl
lcall
lods
scas
pushl
mov
mov
lcall
sub
insl
call
subps
xchg
add
lahf
add
cmpsb
add
scas
add
mov
addr16
xor
jmp
insl
test
call
jo
in
jb
jmp
js
call
cmpsl
mov
shrl
addb
dec
dec
dec
pop
outsb
outsl
imul
test
lcall
mov
mov
sar
mov
xchg
lcall
ja
popf
sub
xchg
or
lcall
ljmp
gs
or
call
inc
xchg
jmp
jp
jmp
mov
push
xchg
xrelease
fldenv
mov
push
cltd
lcall
sub
sub
push
push
dec
pop
imul
xchg
mov
mov
mov
mov
ret
mov
sahf
jmp
inc
cmp
sub
fwait
or
mov
add
mov
fs
mov
push
jbe
loope
mov
push
xchg
cltd
push
xchg
enter
lret
fwait
leave
clc
xchg
stos
mov
stos
popa
mov
add
add
xor
inc
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
ret
inc
ret
mov
cmpsl
jmp
dec
cmp
pop
push
lahf
add
popa
pushl
push
fldenv
cmp
jnp
push
movsb
int3
clc
test
iret
cld
stos
sar
cld
stos
iret
stos
sar
sti
test
jmp
mov
inc
rol
stos
stos
test
or
add
add
dec
dec
push
aaa
je
jae
stos
stos
stos
ror
into
int3
out
into
lret
cmc
lret
sti
enter
leave
mov
mov
test
inc
jg
mov
add
mov
gs
add
into
add
fildl
je
ljmp
cld
mov
cld
mov
fcos
std
mov
mov
sar
jmp
lret
rol
scas
scas
lods
mov
add
add
add
add
pop
or
aad
dec
loopne
loop
loopne
fistps
fcom
out
shlb
test
jb
movsl
pop
pusha
pushl
add
enter
add
loop
jp
icebp
push
mov
sti
loop
inc
std
enter
enter
leave
sti
out
mov
lret
divb
pushf
sbb
add
add
std
incb
incb
ljmp
jmp
in
xor
loope
loop
mov
mov
mov
add
mov
inc
add
iret
add
faddl
jne
call
insl
mov
std
ret
std
shl
shl
std
shl
call
out
std
xlat
out
call
call
push
enter
int3
sar
mov
mov
add
incb
std
std
add
incb
aad
aam
mov
pop
mov
sahf
or
pop
pushl
add
rolb
outsl
fiadds
jbe
out
and
cld
shl
fsubr
std
cld
xlat
jmp
std
fld1
xlat
out
cld
aad
push
sti
mov
lahf
sahf
das
add
add
int3
into
int
mov
arpl
ljmp
add
movb
call
add
loope
jns
out
xor
stc
int3
loope
stc
leave
fdivrp
test
repnz
xlat
repnz
out
aam
in
in
shl
jmp
aam
in
fsubr
enter
test
test
add
add
add
aad
mov
je
or
imul
sbb
int3
and
sub
sti
fists
clc
loop
mov
out
in
lret
mov
loope
mov
lret
sarb
jecxz
fistpl
out
jmp
rorb
mov
add
stos
lods
stos
add
xchg
movsb
les
pop
xchg
mov
xchg
fidivrl
jg
rol
lods
mov
mov
ret
ror
aam
int
ror
into
pop
rcl
iret
dec
fcomp
xlat
cmp
fnstsw
das
in
frstor
loop
repnz
in
in
or
std
incl
std
incl
mov
mov
outsb
mov
lods
jns
mov
mov
mov
mov
xor
enter
aam
rcll
mov
rcl
or
loope
or
int3
int
stos
lods
lods
add
std
std
add
incb
cltd
lcall
mov
or
int
int
stos
lods
stos
add
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
fwait
fwait
add
ret
mov
xchg
enter
enter
ret
mov
scas
mov
insb
stos
lods
stos
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
stos
stos
lods
add
mov
jmp
aad
std
rcl
sar
into
iret
iret
std
vshufpd
mov
test
gs
sbb
add
add
add
add
add
add
add
add
jno
jno
push
inc
inc
das
cs
daa
inc
inc
inc
and
add
add
mov
mov
cmpl
dec
int
call
aam
dec
int
inc
mov
mov
scas
scas
lcall
mov
push
add
add
add
add
jae
jae
xchg
adc
arpl
mov
addr16
jb
bound
pop
pop
pop
sbb
mov
in
mov
mov
mov
stos
lods
lcall
xchg
lcall
cltd
xchg
lds
jae
and
add
pop
add
add
jae
jae
popf
xchg
lcall
test
xchg
or
addl
push
push
push
inc
mov
fwait
into
movsb
movsb
movsb
in
mov
xchg
xchg
decb
lcall
stos
cld
mov
mov
ret
xchg
aas
sub
sub
add
add
jg
adcb
movsb
test
test
mov
xchg
xchg
xchg
cld
sahf
pushf
popf
cmc
cwtl
lcall
push
push
push
imul
jge
lea
xchg
testl
mov
pushl
jb
mov
mov
stos
lods
lods
push
lods
stos
stos
add
add
add
scas
test
xchg
xchg
xchg
call
lcall
cltd
lcall
xchg
mov
loope
jbe
out
nop
arpl
std
fwait
inc
ja
movsl
ss
scas
sub
pushl
sbb
mov
jl
mov
mov
imul
int3
add
test
pop
scas
movsl
stos
test
popf
pushf
sahf
jmp
movsl
cmpsb
call
imul
xchg
inc
jb
lea
imul
nop
adc
cwtl
or
or
scas
push
outsl
pushl
and
jp
lds
inc
fwait
scas
divb
stos
test
add
jae
movsb
pushf
mov
cld
test
mov
ljmp
xchg
decl
or
mov
decl
pop
jmp
adc
shlb
dec
inc
mov
iret
inc
mov
aad
mov
push
xchg
dec
cwtl
mov
mov
mov
movsl
movsb
mov
add
push
xchg
xchg
xchg
test
mov
scas
pushl
mov
movsb
call
arpl
sbb
nop
push
push
call
add
stos
add
mov
push
xchg
fcompl
jmp
pop
mov
jmp
movsw
call
pushf
mov
mov
cmpsb
cmpsl
pop
add
add
popa
arpl
mov
pushf
cld
mov
scas
mov
mov
scas
lcall
xor
cwtl
and
call
add
add
mov
xor
jmp
js
in
jp
push
jle
push
jg
fstps
mov
and
add
add
dec
adc
push
cmp
mov
ret
mov
bound
lcall
add
test
add
les
insb
fisttpl
in
mov
push
xchg
cwtl
leave
clc
xchg
jmp
cmpsl
mov
cmpsb
sub
inc
aas
inc
adc
push
xchg
mov
mov
inc
ret
inc
mov
xchg
ljmp
sbb
cmpsb
add
mov
gs
add
adc
ljmp
clc
lods
sar
sti
lods
sar
cld
scas
sar
std
scas
iret
jmp
enter
mov
ds
std
add
jno
inc
scas
mov
mov
aad
mov
fnop
rcl
out
lret
cli
mov
mov
jmp
arpl
les
imul
add
out
test
clc
pop
mov
std
ret
inc
std
rcr
out
mov
shl
test
dec
jg
addb
add
add
jmp
or
jmp
out
outsb
fisubl
mov
add
mov
add
faddl
ja
out
cmp
dec
in
dec
in
shl
call
in
std
shl
push
leave
aad
into
in
scas
scas
scas
popa
addb
add
incl
incl
int3
int
sub
sahf
sbb
stos
add
mov
add
jecxz
jp
hlt
push
cmpsl
inc
loope
call
cld
aad
std
aam
stc
aam
push
leave
xlat
fcmove
shl
mov
mov
xchg
xchg
xchg
pop
scas
mov
cld
lods
push
fs
mov
push
jae
fistps
cmp
out
mov
shl
call
ror
jmp
leave
aad
ljmp
scas
push
lcall
add
sahf
stos
xchg
dec
and
shll
int3
jbe
mov
fdivrs
lret
into
outsl
fmul
rcrb
rcl
dec
in
loope
out
call
sbb
mov
mov
cmp
movsb
lods
arpl
lods
mov
ret
mov
les
int
fisttpll
int
int
aam
std
incb
cmpb
std
add
add
add
mov
incl
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
and
inc
repz
test
arpl
pop
mov
das
push
fsub
jnp
cmp
imul
imul
jge
mov
fisttpll
aad
xor
repz
test
pop
mov
push
movsl
xlat
jecxz
or
mov
stc
sub
cwtl
pop
sbb
mov
insl
lds
cmp
jp
and
adc
cltd
inc
jb
adc
cwtl
das
divl
mov
dec
or
cmp
insb
popf
pop
jnp
lea
cltd
xor
adc
test
xor
xchg
push
insl
xchg
hlt
mov
pop
insl
add
cli
adc
lea
jge
test
in
add
pop
xor
insb
add
push
out
xchg
and
add
fsts
and
sbb
inc
xlat
jle
in
outsl
lahf
pop
cmc
rclb
jl
and
and
ja
ds
cwtl
mov
repz
fidivrl
or
les
cs
mov
push
inc
fidivs
xor
test
lcall
out
and
aaa
dec
insl
add
dec
insb
add
mov
add
test
aas
and
lds
in
test
jecxz
les
add
xor
and
test
cmpsb
cmpsb
out
fcom
pop
hlt
or
add
add
mov
mov
adc
data16
xor
cmp
push
jmp
test
lret
mov
jecxz
das
adc
cwtl
andl
mov
mov
cmp
lahf
cmp
lret
sti
cwtl
cmp
leave
sbb
in
ljmp
mov
add
add
pop
mov
and
cmp
pop
stos
ss
mov
xor
add
sbb
pop
mov
cmp
aam
mov
rcl
fucomip
xor
rolb
jo
inc
popf
xor
jne
mov
adc
jo
sbb
dec
cmp
into
insb
imul
inc
aas
addr16
jo
add
xchg
push
pop
mov
int
loop
mov
push
dec
hlt
pop
repnz
inc
cmp
ja
call
out
leave
adc
jne
sbb
and
sub
inc
nop
mov
ret
stc
cmp
pop
adcb
ss
test
sahf
xor
mov
fldt
rorb
jb
sub
stc
nop
fidivrs
cld
mov
pop
scas
xor
sbbl
push
xor
cmp
push
ljmp
jno
sub
fnsave
es
cld
xchg
push
pushf
lods
inc
into
jb
mov
out
lret
bound
lds
iret
testb
je
push
out
dec
xchg
pop
sahf
imul
sbb
inc
fisubrl
mov
inc
mov
mov
fnstsw
movzwl
test
xor
movsb
cmp
sub
fnstenv
scas
dec
loopne
sub
mov
push
lods
lods
push
xchg
jmp
push
jmp
sub
pop
movsl
dec
loopne
jle
mov
rcrl
lods
inc
dec
repnz
and
bound
shr
repnz
pop
out
adc
lahf
inc
call
es
insl
mov
mov
rorb
cli
cmp
shlb
pop
sbbl
data16
ss
or
mov
fldcw
rorl
fdivl
sub
pop
stos
cli
xchg
fdivrl
std
scas
std
sbb
add
int
and
jmp
jbe
push
test
jb
es
add
jb
fdivl
xchg
stc
jno
mov
adc
testb
pop
scas
inc
inc
xchg
loopne
fadd
pop
push
mov
movsb
cmp
adc
mov
dec
loope
aad
pop
add
adc
push
or
jbe,pt
in
mov
ret
imull
jnp
inc
out
xchg
dec
leave
pusha
jnp
shrl
fwait
jg
roll
jo
xor
call
test
lock
lret
xchg
pop
bnd
repz
xchg
sub
jnp
push
dec
sbb
jbe
lock
mov
cmpsl
ds
std
arpl
sub
test
leave
xor
cli
xchg
popa
clc
push
mov
dec
loope
inc
pop
insl
push
movsl
lcall
sub
orl
data16
scas
inc
add
in
test
stos
or
lock
mov
xchg
pop
scas
imul
repnz
insl
add
sub
sahf
pusha
lods
xchg
sub
mov
mov
or
jecxz
in
std
xchg
jmp
xor
pop
imul
test
outsb
bound
std
xchg
jmp
aad
imul
mov
loop
sbb
imul
dec
fs
in
rcrb
cmp
data16
xor
in
mov
mov
lret
shrl
mov
scas
inc
jne
fnsave
test
push
out
dec
dec
loop
xor
popa
cmpsb
sbb
cmp
dec
out
jp
pop
lock
mov
push
out
aas
jnp
ret
pop
push
sbb
xor
dec
outsl
push
jl
iret
data16
dec
in
push
lea
cltd
outsl
push
int3
mov
mov
cmpl
outsb
sahf
mov
adc
push
lea
cmp
pop
push
int
iret
mov
inc
call
aaa
jnp
data16
pop
repnz
mov
movsl
cmp
ss
ss
cmpsl
sarl
stc
nop
jle
pop
imul
jecxz
jp
adc
pop
fnstenv
sti
xchg
je
sbb
fidivrs
fnstenv
ss
scas
push
in
fnstsw
testl
in
aad
out
ds
outsw
aaa
lods
inc
data16
hlt
call
xor
fs
jmp
aas
pop
hlt
insl
xor
fbstp
mov
outsb
in
test
xor
cmp
add
mov
cmp
aas
push
imul
out
cmp
cs
mov
jne
ljmp
ret
push
ljmp
adc
outsl
mov
sbb
inc
imul
push
ljmp
pop
jne
std
xchg
lock
mov
test
jl
lock
int
hlt
out
sub
sbb
fs
add
pop
call
or
repz
mov
xchg
mov
sbb
adc
sub
sub
push
ljmp
jmp
mov
fildll
dec
and
inc
or
jbe
addr16
mov
and
rcl
cs
lret
cmpsl
ds
xor
push
mov
mov
fisubrl
mov
sbb
pop
jae
pop
test
into
shlb
leave
sbbb
sbb
aam
imul
mov
lds
and
adc
push
sub
pushf
pop
insb
add
mov
fisttpl
das
cmp
sbb
mov
inc
subb
xlat
sti
dec
loop
stc
inc
icebp
stos
inc
and
in
andl
cmp
or
testl
lea
sub
adc
into
cld
and
es
push
ljmp
sti
xchg
leave
popf
mov
lret
in
insb
adc
pusha
negl
cmp
outsl
xor
mov
stc
nop
mov
xchg
or
sub
imul
push
mov
into
and
sbb
sub
cmp
testb
mov
cmpsb
call
or
and
sub
adcb
movsb
loopne
pop
sbb
lock
cmp
lock
cmp
addb
into
gs
ljmp
inc
lock
jmp
das
lret
mov
in
loop
sbb
jne,pt
jo
cmpsl
mov
fnstsw
push
psubsb
inc
sbb
fcomi
bound
insb
subl
mov
push
or
xor
sub
cmp
outsl
push
scas
cmpl
repz
or
cwtl
das
push
and
push
jge
dec
stos
jl
sub
enter
es
adc
push
dec
push
xchg
nop
pop
test
jmp
mov
or
dec
loopne
sub
shlb
adc
popa
clc
adc
adc
outsb
es
scas
push
mov
mov
loopne
clc
adc
dec
push
jne
test
mov
or
sbb
xchg
aaa
loop
test
aas
stos
subb
mov
inc
pop
mov
lcall
repnz
jmp
push
sti
test
cmpsl
dec
push
jae
les
push
mov
out
jbe
adc
xchg
sbb
sub
fxch
dec
clc
sub
push
sub
cmpsb
mov
mov
out
xchg
out
outsb
add
iret
fiadds
jno
stc
shlb
dec
es
cmp
mov
lahf
sub
sbb
pushf
add
leave
mov
jno
jle
js
mov
popf
loopne
pusha
add
loop
fnsave
xor
mov
push
stc
jge
push
test
mov
shll
sbb
movsl
sbb
dec
push
test
inc
lahf
sub
cmp
pop
shrb
imul
iret
jbe
out
je
out
dec
xchg
inc
cld
push
cmpsb
pop
xor
nop
inc
ret
icebp
sbb
movsl
fmul
jae
idiv
out
sub
cmpb
mov
in
scas
fadd
add
add
pop
pop
data16
pop
out
or
faddl
inc
sub
jmp
push
jbe
push
mov
cltd
cmpsl
test
out
xchg
mov
adc
inc
ret
push
lods
jnp
icebp
aam
push
push
xchg
out
xchg
sub
pop
incl
les
mov
dec
aad
and
inc
add
and
pop
xchg
sub
add
insb
dec
cli
or
ja
xchg
sub
cli
hlt
push
push
cmpsb
mov
push
daa
sbb
out
out
xchg
push
subl
jb
stc
aad
xor
push
sub
mov
sarl
pop
js
push
cmpsb
or
in
inc
lahf
inc
cmp
pop
dec
test
mov
mov
inc
pop
out
mov
and
movsl
xchg
mov
inc
fistl
aas
xchg
lock
scas
outsl
scas
mov
shrl
scas
testl
int3
decl
into
outsl
orl
jl
jns
cmc
xchg
fdivrl
std
jp
insl
inc
jp
xlat
mov
out
in
ficompl
xor
scas
scas
inc
loopne
mov
or
lret
cld
fidivs
shr
cwtl
je
dec
and
lret
push
push
jp
popf
lock
inc
jmp
pop
mov
mov
sub
lds
inc
and
add
imul
imul
sub
cmp
mov
lods
jp
fbstp
movsl
xor
fbld
shrl
xchg
push
or
nop
jecxz
or
sahf
hlt
mull
and
fistpl
fwait
push
sbb
push
out
imul
dec
mov
dec
sahf
pushf
rcr
nop
daa
fidivl
aam
mov
pop
repnz
fcoms
jp
adc
cs
lahf
clc
jmp
das
rorl
mov
cmp
jbe
fnstenv
xor
shlb
xchg
loop
push
out
cld
test
outsb
add
andl
push
movsl
push
mov
popa
std
pop
mov
lods
push
icebp
xchg
sub
mov
loope
add
cs
gs
lcall
bnd
pop
icebp
ljmp
adc
dec
and
jns
inc
fadds
rcrl
push
call
sbb
fidivs
xor
cltd
sbb
ja
cmp
xor
pop
pop
out
dec
jnp
mov
addr16
xchg
jmp
mov
or
mov
insl
ljmp
lock
insl
add
sbb
xchg
push
push
movsl
mov
mov
ret
add
fsubrs
sub
loope
lods
testb
stos
and
das
add
push
inc
dec
inc
imul
mov
shrb
dec
or
data16
sahf
xor
lods
push
mov
mov
hlt
sbb
rorl
dec
inc
pop
sahf
dec
hlt
data16
sbb
mov
xchg
inc
das
insb
mov
dec
in
fadd
push
std
stos
jge
clc
push
fbstp
adc
mov
aad
mov
ret
fsubrs
in
rcrb
mov
popf
rdmsr
push
out
push
sub
mov
fsubrl
fbld
in
loop
push
sbb
jae
dec
lcall
cmp
scas
sub
xlat
outsb
adc
ss
xor
pushf
lahf
pushf
push
jmp
mov
jb
into
jnp
int3
xor
nop
daa
subps
mov
fistpll
out
int3
arpl
adc
andl
push
or
push
arpl
mov
push
rolb
pop
sahf
mov
and
fistps
xlat
pushf
clc
xor
gs
cmc
ljmp
adc
aas
jge
lds
xor
ret
mov
push
xchg
outsb
or
cmc
mov
in
fisttps
out
xchg
fisttps
out
push
cmp
add
test
imul
jns
ds
stos
inc
dec
push
xchg
frstor
pop
xchg
sti
aad
fdivrl
repz
rcrl
mov
xor
aam
pop
sub
orb
loopne
cmp
int3
fsubs
or
xchg
cltd
and
cmp
mov
mov
xor
pop
dec
pop
shrl
loopnew
mov
add
shlb
sbb
sbb
xor
or
es
in
jp
out
movsb
out
insb
add
mov
and
xchg
sub
xchg
mov
dec
pop
sbb
loopne
nop
ja
pushf
xor
and
push
loop
leave
mov
rcll
lods
push
pop
out
xchg
outsb
add
daa
pushf
mov
test
xchg
sub
mov
dec
rcr
outsl
je
shlb
xchg
add
insl
xor
mov
xchg
ret
test
sub
imull
dec
loope
popa
push
call
xchg
lods
sbb
cmp
xchg
mov
mov
mov
xor
loopne
cmc
pop
shrl
push
call
repnz
movsl
jle
adc
bound
dec
loope
fmull
push
push
add
add
push
xchg
dec
mov
test
cmpsb
cmp
xor
pop
movsb
pop
fnsave
loop
pminub
test
sub
xchg
xor
or
jmp
push
mov
add
ret
cmp
adc
cmp
ja
outsb
cmpb
xchg
insl
cmc
ffreep
pop
ficompl
cmc
mov
in
outsl
jae
stos
lods
mov
mov
xor
adc
cmpsb
adc
ds
add
add
sbb
jp
xchg
outsl
stos
inc
mov
int3
enter
ret
or
jle
adc
js
popl
mov
rclb
cmpsl
lahf
sbb
flds
lds
pusha
notl
dec
jecxz
jnp
adc
mov
shrl
mov
jo
xor
mov
rcll
inc
repz
inc
or
and
es
decl
inc
fdivrl
xchg
arpl
lds
addb
sbb
jno
sahf
adc
ss
aaa
adc
add
push
sub
inc
int3
pop
not
scas
stc
nop
mov
rcll
scas
or
xor
push
shll
pop
in
jb
dec
push
out
pop
mov
mov
rcrl
adc
sub
std
xchg
cwtl
sbb
sbb
mov
aad
xor
mov
dec
and
popa
ljmp
xchg
movsb
xchg
mov
push
shrb
arpl
mov
jb
inc
faddl
popf
push
movsl
ret
cli
xlat
jmp
ret
fadds
sbbb
repz
loope
dec
nop
daa
dec
dec
push
inc
mulb
fidivs
fmull
xchg
stos
dec
lods
inc
jae
or
lock
mov
dec
testb
arpl
lahf
push
into
fs
pop
jl
mov
pop
lds
jb
daa
sbb
stc
test
ret
sub
sahf
xor
fldenv
and
adc
clc
movsl
bound
enter
stc
lock
add
adc
and
pop
adc
gs
enter
outsb
jne
dec
out
xchg
push
popf
and
insl
add
dec
and
adc
and
mov
popa
clc
push
inc
pop
jg
outsl
push
sahf
cwtl
in
mov
rolb
lcall
and
mov
inc
xlat
mov
aad
cmc
sub
and
out
inc
jl
jp
inc
fidivl
loope
clc
dec
daa
mov
mov
jb
insl
xchg
test
xchg
shll
in
cld
sbb
add
sbb
inc
cltd
xor
insb
pop
icebp
jle
mov
mov
aad
push
in
sub
xchg
pushl
push
inc
shrb
aaa
aas
aad
lock
repz
jecxz
out
push
movsl
or
push
cmp
sub
fs
xchg
cmp
mov
sbb
push
push
inc
xchg
sub
cmp
lods
ret
pop
ds
mov
push
adc
push
and
push
movsl
inc
inc
xchg
cs
jo
ret
xchg
or
shrl
push
imul
dec
xchg
xchg
iret
insl
pop
mov
call
cmp
pop
dec
addr16
fimuls
loope
mov
lock
call
cmpsl
or
mov
rclb
mov
lret
pop
icebp
mov
shlb
fistpll
push
lret
lret
daa
xchg
sub
pop
mov
mov
std
dec
inc
fdivrl
fstl
jns
mov
or
loope
cmp
rorl
xchg
sub
aam
inc
gs
or
sbb
or
sub
cld
xchg
out
mov
adc
ds
data16
ret
inc
pop
in
test
pop
hlt
cmp
jnp
push
push
sub
ds
cltd
xor
push
dec
fisttps
mov
std
xchg
dec
out
dec
mov
add
xchg
cmc
loop
clc
mov
cmpsb
cmc
adc
cwtl
push
push
lds
sbbb
shlb
bnd
cmp
adc
pop
repz
xchg
cmp
adc
mov
out
ja
das
mov
in
xchg
mov
clc
mov
cltd
pusha
adc
insb
mov
int
mov
xor
into
dec
adc
mov
das
mov
adcb
pop
mov
imul
mov
or
lret
xor
adcb
insb
movsb
jbe
mov
ret
mov
sub
lods
add
fwait
xor
cmp
cmp
and
int3
mov
inc
jge
jae
enter
imul
subl
add
jno
pop
mov
xchg
sub
lds
pop
rcll
push
out
jnp
dec
loop
lahf
jge
loopne
jge
mov
nop
daa
cmp
pop
les
and
cmp
jne
dec
cmpsl
dec
mov
jle
leave
pusha
add
icebp
mov
fdivl
jns
mov
or
lret
sbb
push
repz
and
jo
movsb
inc
push
in
jbe
mov
leave
sbb
sub
int3
arpl
mov
into
gs
mov
adc
ss
movsl
addr16
loopne
mov
add
fimull
or
and
sub
lcall
cmpsl
loop,pt
sbbb
add
pop
xor
push
out
mov
pop
push
stos
add
jmp
bndstx
in
push
inc
fmuls
stos
pop
neg
popa
pop
scas
xchg
cld
jge
cs
int3
in
pushf
xor
mov
jne
mov
shrl
lods
xchg
sub
jp
mov
xor
pusha
test
sub
fadds
jno
or
les
jl
jl
pop
sahf
push
in
iret
cmp
add
mov
pop
mov
je
xchg
test
leave
xor
xchg
arpl
mov
mov
cmp
cmp
or
pop
icebp
pop
in
stos
adc
ss
addr16
xchg
sub
mov
fldt
or
mov
pusha
leave
lock
subl
popa
push
outsl
sub
mov
rcll
jp
mov
frstor
data16
mov
shr
sti
andb
mov
fdivl
jmp
rorl
adcl
out
add
es
mov
and
addr16
fmull
gs
sahf
mov
pusha
mov
adc
mov
fildl
xchg
add
shrl
and
lahf
ss
cmp
mov
fcmove
arpl
cwtl
das
andb
and
jg
mov
lret
call
fwait
jb
insl
add
xchg
dec
jno
cld
stos
in
insb
add
int3
int
idivb
add
push
sbbb
mov
fdivl
push
int
mov
popa
pop
mov
ja
jb
cli
stos
fucomp
jg
int
mov
sub
jnp
jae
lods
arpl
into
adcb
mov
mov
aam
fs
xchg
sahf
push
mov
fsubr
lods
sbb
aad
mul
js
push
push
jmp
mov
popa
clc
clc
jb
and
int
and
jle
and
enter
jmp
sbb
dec
outsl
xor
lret
lock
jecxz
adc
aaa
mov
jno
xor
xchg
int3
jle
fwait
cmpsl
in
outsb
add
repz
and
ljmp
fisubrs
movb
xor
int
add
pop
repnz
pusha
fs
cltd
int3
xor
cmc
mov
js
push
add
std
xchg
stos
pusha
push
scas
cmc
mov
jb
push
add
jl
jno
dec
stos
pop
pusha
testl
pop
loopne
push
hlt
sub
sub
dec
popf
xor
into
cld
xchg
clc
cltd
or
inc
jecxz
mov
mov
push
mov
mov
sub
inc
aam
mov
lahf
fnstenv
rcrb
jns
or
les
std
fs
sahf
push
shrl
mov
sbb
xchg
or
movsl
xor
daa
mov
mov
mov
xor
cmpsb
cmp
and
scas
inc
jl
pop
xor
jge
push
je
xchg
out
test
mov
xchg
in
inc
std
xchg
jp
in
test
fwait
es
and
push
pop
movsl
lods
inc
fiadds
cmp
cmp
add
scas
inc
loopne
jge
outsl
add
cmp
pop
out
test
test
push
lods
insl
hlt
push
mov
mov
dec
mov
xchg
sub
xlat
and
pop
divl
xor
dec
test
lret
cmc
lods
jne
push
testl
lods
inc
cmc
mov
mov
sahf
adc
push
ljmp
lods
xor
jge
notb
mov
dec
adc
jl
lods
ss
jno
sti
xchg
stc
xchg
repnz
sbb
xchg
inc
in
cmc
mov
or
and
sti
mov
mov
fisubl
adc
mov
inc
in
add
mov
add
ljmp
movsb
std
xchg
filds
and
add
and
mov
and
fdivl
pop
push
ret
pop
mov
stos
inc
pusha
stos
jl
aam
jne
mov
fsubrp
orl
sub
mov
adc
scas
loop
push
sbb
aas
xchg
sub
lcall
ja
or
shll
push
or
jl
pop
jne,pn
pop
jp
mov
cld
xchg
add
cmc
mov
and
mov
adc
sbb
xchg
ret
divb
jne
inc
add
mov
xchg
push
push
in
xorl
mov
ss
sbbl
xchg
inc
out
je
sbb
les
adc
adc
inc
faddl
cmpsb
outsl
push
roll
mov
loope,pn
adc
push
out
mov
out
gs
in
aad
aam
shl
ss
sbb
push
mov
cmp
jp
mov
mov
fldl
scas
nop
sub
lret
in
xchg
sub
xlat
mov
add
insl
add
and
xchg
sub
jae
xchg
lret
add
insb
je
xor
push
xchg
lock
jbe
std
movsb
jecxz
test
addr16
hlt
cmp
leave
outsb
adc
dec
loopne
arpl
add
ljmp
bound
xchg
jnp
fcmovnbe
outsl
add
sub
or
test
les
xchg
ljmp
and
dec
add
cmp
push
negb
mov
and
stos
mov
flds
mov
cmp
push
out
xchg
inc
cli
lea
adc
jecxz
or
call
cmp
sahf
cmp
mov
ljmp
in
ss
fstpl
pop
push
test
pop
jmp
lods
jl
aam
insb
stc
mov
mov
daa
fstpt
pop
dec
mov
xor
jns
arpl
leave
hlt
xchg
stc
aaa
ss
push
daa
rolb
fnstsw
pop
in
or
test
out
imul
aaa
je
or
mov
mov
fcoms
lcall
bound
adc
mov
inc
lret
pop
popa
out
pop
sub
rcrl
mull
int
mov
pop
shlb
bound
in
pop
and
mov
arpl
ficompl
mov
mov
ds
xor
adc
add
adc
xor
mov
enter
jne
fsubs
fisttpl
repnz
out
mov
fstpl
lcall
or
push
jle
mov
outsl
scas
sub
out
mov
fnsave
std
lods
inc
adc
jmp
xor
xchg
pop
cmpl
arpl
mov
and
inc
icebp
add
push
scas
inc
je
aam
arpl
mov
or
dec
sbb
xor
xor
arpl
lret
push
nop
and
mul
xchg
sbb
shlb
mov
ljmp
shll
cli
jbe
sbb
filds
mov
bound
int3
push
mov
pop
jno
mov
aad
lods
xchg
xor
jl
push
test
xchg
xor
dec
hlt
xchg
jbe
lds
lcall
mov
shl
jnp
aas
lahf
and
or
jp
outsb
mov
jp
fstp
pusha
sti
repnz
js
adc
jg
sub
bnd
lahf
bnd
mov
jle
lret
adc
bnd
sub
nop
jno
hlt
jns
mov
js
stc
sub
pop
add
ja
sub
and
lret
add
int3
lahf
push
push
es
repnz
aas
lea
cwtl
jno
mov
mov
sbb
add
mov
pop
cmp
pop
push
bound
push
aad
xchg
loopne
jp
or
mov
jp
inc
out
xchg
adcl
lock
adc
or
and
popf
sbb
ret
sub
adc
mov
mov
dec
scas
dec
test
fidivs
aam
loope
adc
xchg
inc
es
pop
addr16
scas
cwtl
jns
and
int3
lods
inc
decb
push
in
cmp
shrl
pop
outsb
add
movsb
mov
sub
lds
mov
add
pop
xor
push
pop
mov
pop
fwait
test
mov
lret
popf
xor
dec
and
xchg
mov
jns
call
or
cmp
mov
mov
xchg
sub
jmp
mov
xor
push
shrl
lea
sbb
popf
xor
std
pop
scas
cs
dec
dec
adc
cwtl
mov
fnstcw
or
adc
pop
dec
das
jns
sti
xchg
mov
dec
in
rcrb
mov
jmp
add
mov
push
cltd
cmpsl
ds
fbstp
adc
xchg
sub
jnp
xor
add
jns
push
test
sbb
cmpsb
ja
mov
inc
or
and
xor
pusha
or
lock
imul
pop
mov
enter
lret
imulb
jl
je
pushw
mov
mov
xor
rcrl
inc
mov
inc
cltd
xchg
pop
lea
enter
or
movsb
pusha
lcall
andl
sub
mov
in
xor
jae
ret
test
enter
sbb
loopne
xchg
insl
jle
or
fadds
xchg
into
mov
dec
sbb
inc
divb
adc
xchg
out
subb
xor
fs
outsl
addr16
or
ret
bound
add
outsb
cmp
mov
mov
in
pop
lods
add
lods
sbb
add
pushf
adcb
mull
mov
cmp
ds
push
sbb
mov
shl
cs
cltd
or
lcall
push
test
lcall
test
lock
sub
mov
xlat
push
outsb
bound
aas
xor
out
andl
sub
es
mov
repz
sbb
es
scas
loope
dec
aam
clc
aas
sbb
andb
out
psubusw
add
repnz
mov
sahf
aas
call
jnp
cld
mov
fdivrl
repnz
and
mov
mov
dec
adc
mov
mov
and
jo
popf
mov
daa
fcoml
push
adc
and
mov
xchg
xchg
mov
in
add
jp
or
out
enter
dec
cmp
inc
jae
push
adc
or
mov
shll
pop
mov
mov
mov
nop
xorl
adc
sbb
setl
lds
out
fistpl
mov
lods
jmp
nop
and
outsb
lock
pop
imul
push
jo
pop
push
test
lock
pop
push
pop
mov
mov
fcoms
push
enter
push
rcll
scas
cs
loopne
cmp
jnp
das
stc
add
jp
ret
cmc
xchg
loope
or
cltd
sbbl
gs
xchg
daa
lods
call
out
mov
daa
add
les
adc
sbb
cli
cmovnp
inc
cmp
test
pop
std
loopne
dec
pop
stc
imul
loopne
int
stos
std
fildll
push
fistl
mov
cltd
cs
sub
mov
sub
dec
in
loope
fcomps
sub
outsb
mov
push
shrl
add
push
icebp
in
jo
xchg
cltd
lods
jne
neg
inc
mov
enter
lea
mov
aaa
lcall
movl
and
dec
mov
inc
lea
cmp
pop
sub
icebp
mov
mov
pop
pop
jns
lods
rcrl
xorl
pop
cs
orb
or
lahf
iret
jnp
out
daa
mov
mov
xchg
fisttpll
jb
xor
dec
pop
mov
xchg
sbb
cld
shl
sbb
insl
rcrb
aad
das
xchg
movq
cmpl
xor
cmpsl
into
test
mov
inc
inc
shlb
arpl
mov
pop
dec
xchg
push
push
xchg
leave
adc
or
cmp
xchg
push
arpl
cmp
pop
insb
or
add
push
pop
cmp
pop
mov
adc
shll
push
mov
sub
mov
in
dec
jmp
popf
js
dec
sub
push
or
rorl
into
sub
hlt
sub
mov
fs
sbb
testl
xor
jmp
sbb
repnz
xchg
sub
test
sbb
jb
xchg
jnp
mov
pop
ljmp
stos
mov
jp
pushf
jmp
jae
out
or
popa
shr
lds
jp
sbb
xchg
inc
hlt
xchg
xchg
dec
in
iret
xor
stc
add
sub
hlt
repnz
rcll
idivl
sqrtps
xchg
out
jbe
and
test
adc
push
loopne
cwtl
cmp
in
mov
dec
inc
dec
stos
leave
mov
mov
test
jae
jge
push
fs
fcomps
mov
xlat
ss
or
jne
inc
add
notl
xchg
loope
lea
mov
dec
pop
sub
es
jnp
pushf
or
mov
xlat
repz
in
jb
push
pusha
jb
dec
cmp
test
movb
mov
pop
cmp
push
fisubrs
data16
jne
cmp
inc
dec
ret
push
fidivrl
enter
cli
dec
push
cmp
outsl
fcompl
jo
shll
cs
sub
inc
inc
sar
lods
mov
ds
pop
jb
mov
cmpsl
icebp
jge
inc
pusha
add
cmc
scas
push
cld
xor
hlt
dec
filds
push
fdivrl
add
xchg
imul
jecxz
pop
mov
js
stos
iret
lods
cmpsl
lock
loopne
xor
fs
daa
adc
call
fstp
push
lods
sub
int3
test
xchg
xor
push
rcrl
mov
popf
jb
push
loopne
adc
inc
leave
and
jae
push
adc
adc
ficompl
jno
cmpb
into
or
xchg
jge
push
fwait
mov
cltd
pop
adc
jnp
pop
jg
pop
adc
movsl
into
dec
lea
fisubl
cmpsb
xor
fcompl
stos
or
cld
sub
and
mov
push
adc
mov
es
fisubl
add
dec
jo
and
lds
loopne
jecxz
call
mov
ljmp
aad
or
sahf
dec
test
loope
aas
dec
jge
arpl
mov
repz
xor
and
add
loop
inc
dec
jge
xorb
out
or
sbb
fwait
or
xchg
insb
stos
addr16
xor
adc
cwtl
in
stos
loope
sub
inc
mov
enter
pushf
sti
cmp
test
pushf
cwtl
jno
jo
je
cwtl
xor
mov
pop
loop
sub
aas
fdivrl
add
andl
add
out
xor
xor
mov
mov
std
add
pop
test
sbb
inc
adc
xchg
aaa
movl
repz
and
cmp
push
sarl
inc
adcl
pop
pavgw
xchg
sbb
mov
movq
call
in
mov
mov
push
xor
add
and
fmulp
mov
mov
inc
icebp
gs
cmp
xchg
mov
xchg
and
adc
lahf
sub
adc
or
ds
movsl
bound
push
popf
sub
nop
jo
sub
dec
push
sub
insl
pop
dec
xlat
insl
rorl
pop
mov
sub
adc
decb
add
xchg
mov
cmp
lods
aaa
in
ds
adc
fisubrl
mov
ljmp
mov
inc
repnz
mov
adc
sbb
sbb
sub
je
xlat
es
xchg
pop
pop
loopne
cld
out
repnz
jnp
or
xor
or
insb
rolb
data16
inc
aad
sub
lret
cmp
movl
lahf
sbb
jbe
and
adc
js
sub
fistl
rep
popf
aam
mov
shl
pop
ja
add
jae
and
mov
das
pushf
xor
or
mov
loopne
sahf
test
roll
les
mov
or
addr16
lock
nop
negb
xor
or
sub
sub
rcrl
jbe
js
orl
adc
clc
cmp
or
or
imul
outsl
push
rorb
fsubrs
test
cltd
xchg
mov
xor
or
adc
std
call
cmpsl
nop
jmp
mov
call
xchg
jg
fstpl
scas
jl
dec
sub
lds
xchg
jmp
push
mov
mov
push
cmpsl
jns
xchg
and
test
adc
pop
inc
in
inc
aas
fistpl
dec
push
or
sub
mov
xor
add
inc
cs
lahf
pop
cmpsb
test
sub
inc
mov
push
mov
adc
aas
cmpsb
mov
adc
je
inc
arpl
pop
bound
cmp
cmp
mov
dec
add
enter
cmp
imul
ja
dec
cmp
js
dec
or
icebp
mov
sbb
int
adc
mov
repz
rol
mov
repnz
xchg
add
pop
jnp
cmp
iret
rcrb
push
xchg
lret
pop
sbb
adc
icebp
jle
insb
pop
cmp
sbb
xchg
dec
sti
aam
jb
pop
sbb
pushf
test
pop
ret
shlb
mov
or
in
popf
loop
repnz
pop
xchg
fsubrl
xorl
adc
sbb
fldcw
xor
xchg
xchg
ljmp
cwtl
lock
add
loopne
cmpsb
in
mov
mov
test
fs
dec
adc
xor
and
mov
test
movsl
mov
xor
jnp
insb
xchg
test
inc
outsb
xor
jns
jl
mov
incb
mov
aam
mov
mov
inc
mov
scas
jb
into
mov
divl
mov
dec
insb
fsubrs
mov
lods
shll
das
pop
lods
xor
push
inc
jp
loop
sti
imul
les
mul
js
leave
push
adc
call
sysret
rcr
in
cmp
test
lds
mov
insl
pop
movl
rorb
insl
pop
inc
mov
sub
xor
insl
xor
mov
adc
leave
add
gs
pop
add
int3
add
repz
sarl
ja
pop
in
addr16
sbb
pop
sbbl
rcr
call
jb
divb
in
in
mov
les
and
filds
push
lds
jmp
cmp
sahf
sub
cmpsl
loope
lea
int3
adc
mov
mov
outsl
xchg
insl
jns
sbb
mov
hlt
rorb
dec
or
mov
mov
xor
insb
mov
mov
call
sub
cmp
stos
mov
call
bound
and
les
orl
js
mov
and
data16
test
lock
mov
cmp
xor
decb
fdivrl
cmp
inc
mov
mov
bound
iretw
pop
sub
pusha
or
mov
dec
les
mov
iret
gs
cmp
outsb
ja
mov
in
pop
mov
jp
insb
pop
scas
sub
dec
jbe
pushf
shll
pop
jg
adc
xlat
xor
mov
add
fs
jl
mov
nop
insl
ja
jmp
mov
icebp
mov
cmp
ds
fucom
in
xor
pop
adc
jle
cli
sub
lea
push
arpl
or
sbb
jo
jo
mov
pop
outsl
adc
xor
push
dec
xor
cwtl
push
mov
loope
pop
cs
mov
es
and
ljmp
nop
pop
mov
sarl
pop
stos
mov
xorb
add
inc
add
pop
cmp
dec
int
mov
incl
add
ret
jnp
push
jno
pop
call
or
mov
shll
inc
fbld
or
sahf
cmpsl
insl
mov
mov
js
fmuls
into
mov
in
cmp
jbe
scas
sub
cmp
dec
or
notl
adc
cld
jmp
and
roll
out
cmp
roll
stos
lret
pop
and
and
lods
lcall
push
das
addr16
pop
and
insl
nop
xchg
fisttps
push
ss
mov
stos
jecxz
cmp
cmp
ss
adc
decl
cmp
aad
int3
cmp
in
sbb
ljmp
insb
cmp
lds
movsb
fcmovu
rorb
dec
lret
cli
rcl
iret
imul
cwtl
mov
and
fstpl
sub
jecxz
rcr
add
cs
cs
pop
pop
add
roll
pop
xor
xchg
dec
rol
dec
xchg
les
repnz
cld
pop
rclb
outsl
sub
repnz
jl
or
ss
xchg
cwtl
cltd
sar
shl
fcmovu
das
je
sbb
jg,pt
data16
loop
mov
popa
jnp
xchg
out
sub
push
repnz
adc
pop
adc
sub
and
jg
out
inc
xor
int3
inc
dec
pushf
inc
ljmp
mov
lock
stos
and
fistpll
cmp
mov
daa
xor
insb
test
add
lret
mov
push
std
adc
aam
shl
sbb
pop
adc
cmp
pop
xor
add
xor
mov
andl
pop
and
call
dec
and
fiadds
push
ja
push
push
fwait
out
addr16
push
je
inc
jne
dec
xor
push
add
and
pop
mov
xchg
fiaddl
test
mov
les
jecxz
sbb
pop
mov
and
jp
cmp
imul
cmpl
mov
pop
je
pop
call
test
repnz
push
sarb
hlt
out
xchg
ret
ja
dec
dec
adc
and
leave
das
aad
inc
pop
xchg
popf
mov
ret
jle
and
ret
push
and
and
push
sbb
lret
les
fstpl
mov
scas
fcmovne
jg
or
xchg
lds
scas
push
les
fimull
shrb
adc
fucom
add
xchg
test
out
lock
add
push
cmp
fimull
xor
out
das
dec
and
pop
add
not
mov
stos
mov
jp
push
xor
xlat
cltd
jne
mov
sarb
sarl
jmp
in
aaa
adc
js
cmp
adc
das
sarb
add
out
test
rcrb
in
repnz
cwtl
mov
test
mov
mov
out
jne
jo
push
test
shlb
pop
dec
sub
cmpsb
pop
aas
mov
int3
add
in
out
add
add
das
pop
pop
test
xlat
pop
test
xlat
adc
and
pop
inc
sub
aaa
cmpsb
dec
loop
push
pop
sti
add
sbb
cltd
cmpsl
pop
into
cmp
xor
push
xchg
xor
nop/reserved
sbb
jbe
fisttpl
cmpb
sahf
andl
imul
and
rcpps
push
cmc
les
arpl
xor
sbb
movsl
adc
stc
lret
mov
inc
lods
xor
mov
pop
sub
sub
lret
mov
mov
adc
pusha
sbb
mov
xor
test
mov
jb
cwtl
or
mov
adc
cmc
movsb
outsb
or
lcall
ss
and
shl
clc
jmp
cmp
fsubrp
cmp
fstpl
jae
and
xchg
test
outsl
and
cmp
repnz
jnp
rcrb
jmp
cmp
aaa
arpl
dec
push
mov
and
rcrl
sbb
aam
xor
movsl
std
lds
mov
mov
js
int3
fbld
ds
test
mov
inc
out
repz
mov
mov
mov
int3
jne
outsl
push
pop
nop
enter
push
int3
out
mov
in
shrl
or
and
pop
push
mov
in
dec
mov
ret
cmp
es
sub
mov
mov
jbe
fstps
in
rorl
mov
mov
movsl
xchg
jle
out
leave
je
add
sbb
jg
xorb
inc
sbb
in
insb
pushf
lea
push
mov
es
and
shl
out
inc
cmp
and
sarb
daa
lahf
fs
push
inc
sar
loope
es
jl
std
mov
insl
or
pop
sar
sahf
arpl
jb
cmp
adc
xchg
sbb
inc
hlt
xchg
add
nop
inc
dec
jae
ret
mov
arpl
xor
sub
or
mov
mov
ljmp
push
fucom
pop
sub
pop
cmp
adc
dec
and
out
dec
sub
stos
jae
imul
arpl
mov
and
rorb
jnp
aad
lcall
xchg
mov
sub
es
outsb
aam
sub
adc
lock
ljmp
adc
and
sbb
ds
popf
je
xor
test
push
mov
or
dec
mov
jo
xchg
mov
jo
xlat
lods
aad
faddl
std
or
test
shll
add
sbb
dec
adc
ja
sub
repz
fstps
std
pop
rolb
mov
lret
fldt
add
popa
jle
idivl
xchg
inc
mov
fimuls
in
cs
aam
fldcw
fcomps
cmp
xchg
xchg
or
mov
inc
out
orl
or
jns
pop
xor
jnp
cwtl
jmp
mov
fdivrl
cmpl
adc
subl
add
cld
out
and
jle
enter
cmp
scas
fisubs
fisubl
aad
clc
push
icebp
lods
mov
imul
imul
sbb
cmp
mov
mov
mov
rclb
jo
xchg
pop
pop
jns
cmpl
rolb
adcl
xor
stos
adc
lcall
movsb
cmp
and
cmp
ja
mov
sbb
rclb
jecxz
das
sub
jo
ds
mov
ror
xor
sub
iret
es
cs
xchg
dec
pop
pop
ret
int
cmp
cwtl
ss
mov
mov
pop
xlat
ss
sti
jle
lret
xchg
lods
add
fistps
pop
insl
mov
and
popl
add
mov
popl
daa
pop
pop
sbb
mov
leave
sub
js
push
lea
scas
or
cld
enter
call
das
push
or
xchg
lea
int3
push
cmp
adc
mov
cmp
cmc
pop
mov
or
in
push
sub
push
gs
cmp
xchg
std
dec
mov
xchg
movsl
sbb
gs
aaa
loopne
dec
pop
xor
in
cmp
xchg
jge
movsl
push
cld
jnp
movsb
icebp
xlat
mov
xchg
orl
aam
nopl
dec
mov
pop
cli
test
and
jne
dec
fsts
shrd
lds
inc
test
mov
out
repnz
call
lret
mov
pop
add
and
inc
mov
ss
push
sub
mov
sub
cmp
adc
inc
pop
out
or
daa
insl
adc
pop
lahf
aaa
inc
test
out
push
fstpt
adc
push
loopne
push
inc
mov
cmp
xor
mov
pusha
or
xor
stc
mov
xor
or
test
ret
push
mov
and
int3
jns
xor
out
cmpsb
popf
flds
inc
push
push
or
and
cld
xchg
int
sbb
inc
mov
inc
out
out
and
fwait
cmp
push
jg
xchg
insl
mov
push
sbb
and
daa
cs
xchg
cld
stos
push
mov
mov
xchg
cmpsl
stos
cmpsl
xchg
orb
orb
std
and
mov
cli
pop
jb
sub
jne
mov
dec
cmpsl
inc
pushf
fisubrs
dec
pop
mov
je
pop
xchg
adc
jbe
daa
sub
ds
pop
sahf
fcomp
lods
ret
inc
fistpl
dec
popf
leave
cs
int3
call
push
outsl
leave
imul
dec
sbb
dec
pop
pop
loope
int3
cltd
data16
cmp
movsb
pop
jp
lods
push
inc
sbb
adc
out
xchg
sahf
or
sbb
push
or
das
gs
fstp
push
movsl
mov
aam
xor
cmpsl
inc
lods
lahf
ds
pop
pop
rol
jl
cmc
imul
or
dec
mov
push
leave
inc
imul
pop
sub
sub
push
add
pushf
jns
les
cwtl
nop
mov
jns
aad
dec
adc
push
jnp
sti
push
dec
test
and
and
sub
push
shll
aam
cld
push
adc
mov
dec
adc
and
jnp
loope
pop
dec
mov
push
ljmp
imul
scas
adc
std
mov
inc
mov
test
cltd
aas
sub
ja
cmp
cmc
sub
out
addr16
aaa
and
fsubrs
push
cmp
sub
les
negl
fidivs
aad
inc
jns
add
dec
sahf
aaa
fwait
adc
setl
dec
gs
xor
out
sti
pop
xchg
ret
cmpsl
inc
jns
out
fiaddl
cli
mov
push
push
shrb
outsb
push
jo
jmp
movsb
into
xchg
mov
push
jo
bound
in
xor
pop
sub
in
nop
cmp
lds
cmp
roll
adc
data16
aam
push
cmpsl
cmpsb
outsb
fisttps
adc
push
repz
inc
adc
cmp
scas
enter
push
sbb
jmp
hlt
mov
jg
addr16
shrl
rcrl
inc
cwtl
fsubrl
pusha
sub
lock
mov
xchg
push
mov
jbe
rcr
mov
pop
fs
jecxz
stc
repnz
rclb
lcall
js
shlb
pop
push
outsb
jnp
xchg
loop
imul
imul
dec
das
stc
sarb
out
mov
pop
adc
and
ljmp
gs
and
fucomip
mov
push
inc
pop
jae
mov
fimull
call
pushf
outsl
mov
cmpsl
mov
jae
mov
aas
mov
mov
inc
lcall
or
and
fs
incb
inc
sub
adc
cmpsb
lcall
xor
pop
lret
jmp
pop
inc
mov
arpl
imul
mov
outsl
push
sbb
inc
sbb
mov
dec
mul
jae
nop
imul
out
cwtl
nop
ret
es
add
mov
jae
xor
dec
lcall
xchg
stos
pop
sbb
pop
out
fisttpll
mov
dec
add
lods
xchg
mov
add
jl
test
cltd
adc
sub
cmp
out
inc
sub
je
out
mov
add
pop
fs
pop
call
xchg
cwtl
mov
aas
into
dec
leave
mov
pop
imul
in
jnp
push
insl
cltd
out
xchg
jp
jl
cld
imul
mov
dec
add
or
push
cs
pushf
lahf
imul
push
sbb
mov
idiv
add
jle
push
popa
sub
add
pop
ret
and
jg
xchg
and
je
bound
int3
ljmp
xchg
cld
outsb
ja
cmpb
pusha
pop
popf
push
pop
fs
push
and
jns
int3
sbb
xchg
int3
jns
out
cltd
push
fs
add
xor
mov
mov
mov
xchg
ss
cwtl
lcall
mov
fxch
imul
jmp
xor
jmp
movsb
xor
in
sbb
in
aam
and
data16
push
fsubrl
movsl
in
pop
call
jb
enter
inc
mov
es
icebp
cmpsb
test
fwait
mov
es
aam
or
dec
add
test
mov
inc
jb
out
movsl
or
popf
dec
inc
mov
aas
sbb
jle
or
aaa
shl
loop
popl
in
lds
mov
mov
adc
or
shrl
int
lcall
lods
call
xorl
push
in
mov
jnp
xor
shr
dec
mov
rolb
outsb
stc
pusha
repnz
dec
jp
cltd
pop
scas
mov
test
pop
hlt
fsubs
inc
das
sub
mov
cmp
xorb
jecxz
in
aad
jecxz
popa
push
xor
inc
ret
add
jo
imull
loopne
mov
roll
mov
xchg
adc
jmp
std
call
cmp
addr16
sub
inc
adc
jno
dec
aam
jp
dec
mov
inc
pop
mov
sbb
shr
fstps
pop
and
adcb
xchg
adc
inc
fisttpll
repnz
jnp
push
sub
call
or
mov
cmpb
jmp
xor
int
sbb
jns
or
cmp
test
sbb
in
cltd
int3
inc
lds
push
stos
insl
movsb
xchg
clc
add
add
lret
and
movsb
lods
add
dec
out
lock
fsin
xor
pcmpgtw
testl
call
adc
jle
imul
sbb
lret
jl
cld
mov
sbb
pop
dec
lock
sub
sbb
insb
adc
shlb
orl
add
jb
hlt
push
data16
subl
push
dec
test
enter
push
jnp
adc
or
mov
aaa
pop
sub
sub
das
cs
fstps
add
mov
arpl
sub
jle
jnp
and
or
and
testb
adc
rep
cld
cmp
xchg
orl
push
fldl
out
inc
fwait
push
mov
adc
mov
mov
ret
pop
push
cmpsl
testb
rorl
ret
pushf
lret
pushf
in
cmp
jo
jl
aad
cmp
jne
mov
test
cmc
ss
xchg
loope
loop
lcall
xchg
lea
inc
xor
xlat
push
je
fmull
rcll
dec
add
insl
in
push
addb
mov
mov
aad
sub
xor
push
jg
mov
leave
ljmp
xchg
cwtl
js
lret
mov
outsl
add
or
cmpsb
jnp
pusha
in
roll
cwtl
inc
jns
insb
dec
push
lcall
outsb
push
scas
mov
fcoml
sbb
jg
cwtl
jge,pt
jbe
or
push
fwait
lcall
mov
idivl
dec
dec
stc
lret
inc
out
bound
or
dec
mov
into
push
pushf
pop
or
fisubl
imul
fwait
lds
aas
xchg
inc
and
imul
adc
sub
cwtl
lods
or
push
cwtl
pushf
repnz
mov
test
mov
arpl
sti
rep
mov
add
adc
push
orb
xchg
sbb
jmp
jmp
aad
cltd
hlt
cmp
loope
jecxz
mov
ljmp
mov
stc
xorb
mov
add
jl
aam
movsb
call
fwait
movsb
or
sub
fidivrl
jbe
pop
xorb
out
adc
xchg
push
jae
test
sbb
sbb
mov
and
dec
jae
cmpsl
mov
xchg
sbb
rcrb
sbb
push
es
mov
cs
jne
dec
es
scas
shrl
rolb
cwtl
sub
lock
imul
fs
xchg
call
mov
xor
xor
mov
loop
jno
xchg
add
sub
pop
mov
inc
dec
movsl
mov
insb
stos
pop
lret
bound
xchg
adc
mov
sub
cmp
mov
lds
inc
xlat
add
and
and
mov
inc
fdivs
xchg
stc
fnstenv
mov
out
pop
sti
lds
testb
out
mov
roll
test
adc
in
cmp
mov
inc
fsubp
and
gs
add
aaa
jbe
test
les
push
test
adc
pop
mov
or
movsl
aad
rolb
dec
punpckhbw
add
xchg
sub
xchg
mov
mov
ret
pop
mov
imul
and
cltd
gs
shrl
xchg
stos
rcrl
sub
or
xchg
inc
xlat
xor
push
jmp
jns
xor
push
cmp
push
sbb
mov
sub
mov
out
nop
loope
xor
mov
dec
and
mov
bound
xor
lahf
mov
push
fnstcw
lea
cli
fdiv
stos
or
cld
adc
enter
sbb
dec
cmpsl
push
outsb
push
sub
jb
and
rorb
arpl
test
movsl
les
loope
bound
mov
clc
xchg
xchg
daa
rolb
loope
jo
stos
add
enter
sub
inc
xorb
repnz
in
push
lods
mov
lret
bndldx
add
lock
movsl
cmp
pop
and
data16
pop
div
dec
xchg
imul
js
cmp
or
add
aaa
cmp
dec
cmpsl
xchg
in
sbb
test
enter
and
mov
iret
and
jl
pop
jp
mov
push
and
insb
xchg
stos
jg
sbb
stos
outsl
push
sbb
enter
ja
adc
movsl
cmp
fwait
call
jmp
dec
jecxz
loopne
mov
pop
das
add
out
jl
scas
inc
xchg
push
jge
test
mov
pop
dec
out
pop
inc
clc
push
jg
dec
popa
jbe
or
rcrl
add
inc
ds
sbb
mov
nop
daa
push
xor
inc
ja
cmp
or
sbb
aam
das
rclb
popf
xchg
bound
xchg
mov
pop
push
hlt
cld
xchg
lret
aaa
mov
sbb
xchg
or
nop
bound
xchg
sbb
xchg
xchg
jno
ret
mov
mov
scas
out
xchg
mov
or
fidivl
xor
mov
lock
into
testl
imul
or
shlb
ss
daa
lret
bound
insb
sbbl
cli
inc
fucomp
scas
lods
inc
and
jb
adc
push
out
ljmp
or
sub
pop
jge
nop
jnp
lea
movsl
sub
inc
jnp
cmp
cmp
in
push
pushf
xor
data16
ds
xchg
out
lret
mov
cmp
inc
out
je
or
sbb
pop
or
sbb
and
sub
fbstp
dec
jmp
jg
push
out
lahf
mov
shrl
dec
loopne
repnz
and
jle
inc
stc
jne
inc
cwtl
add
push
ljmp
mov
fidivs
rcrl
xchg
outsb
int3
xchg
cmp
add
sbb
cmp
and
and
and
xchg
lods
repz
pop
dec
dec
xchg
shlb
addr16
mov
bound
fistpll
fnstsw
xor
sbb
cmp
xchg
daa
fadds
in
or
dec
test
sub
xor
jl
add
xchg
cli
fdivr
loop
inc
imul
jns
ss
and
ljmp
add
adc
jl
cwtl
mov
es
rorb
popf
popf
das
xchg
sub
xor
dec
sbb
inc
dec
inc
add
iret
subl
sub
ss
mov
lock
xchg
data16
repnz
stos
scas
ljmp
cwtl
out
push
enter
sbbl
adcl
jae
rcl
fsts
out
cld
bound
dec
idivl
fnstcw
or
into
gs
and
xchg
ret
or
jnp
and
xchg
pop
inc
fmull
in
add
imull
inc
fisttpll
fsubrs
xchg
add
lret
mov
xor
int
adc
int3
arpl
aam
xchg
dec
jecxz
or
jp
testb
pop
aad
popl
out
xlat
decb
xor
mov
mov
daa
and
mov
push
xchg
pop
cmp
jbe
or
jge
sbbl
repz
cld
repnz
pop
sbb
pusha
neg
inc
push
out
jno
imul
lcall
sub
mov
sub
jo
cmp
mov
ja
add
push
sbb
in
xor
inc
xor
pop
lock
or
or
sub
xor
daa
fbstp
xor
xor
aaa
cbtw
das
push
das
int
pusha
xchg
xchg
sub
jnp
push
lods
dec
es
mov
test
jb
and
repnz
xchg
mov
or
shrl
cmp
movsl
fisttpll
sub
adc
sub
int3
xchg
rolb
jns
mov
xchg
jb
xchg
leave
stc
nop
cli
popa
inc
fcoms
cmp
cwtl
jl
or
cmp
pop
aas
jbe
aas
sti
xchg
scas
push
sbbl
sbb
popa
js
push
pop
lds
les
push
out
pop
push
out
xchg
adcb
xchg
sub
cmc
insb
add
jecxz
les
mov
and
xor
insl
add
inc
inc
xlat
xor
in
inc
jne
cmp
lods
inc
push
dec
mov
movsl
dec
testb
dec
cmp
aas
pop
into
gs
dec
jns
aas
aad
les
push
mov
inc
pop
mov
data16
insl
add
gs
out
pop
out
cmpsb
pop
pushf
xor
dec
orl
cmp
inc
jbe
xor
cmp
lods
fiadds
inc
and
sbb
xchg
retw
pop
cltd
ljmp
add
call
outsl
inc
mov
adc
cmp
lahf
popf
fbstp
enter
push
rcrl
ja
adc
pushf
xor
dec
or
xor
dec
cwtl
xor
movsb
ret
hlt
cmpsl
sub
push
out
out
xchg
push
sbb
insl
mov
movsl
dec
out
mov
mov
sub
lea
xor
nop
addr16
nop
sarl
mov
dec
out
stos
cmp
fsubl
loopne
cmp
mov
push
lcall
mov
movsl
pop
inc
mov
lock
aaa
nop
daa
cmpsl
pushf
add
adc
pop
dec
out
xchg
inc
xlat
mov
jp
cld
dec
jecxz
mov
mov
cmpsb
pop
mov
and
xor
sub
adcb
test
popf
mov
clc
jo
cwtl
das
fidivs
push
arpl
sub
cmp
mov
aad
push
xchg
insb
add
dec
lock
cli
xchg
dec
aas
jae
scas
xchg
movsb
cmp
scas
in
test
adc
inc
pop
jo
push
fwait
loope
int3
xchg
lock
pop
jl
dec
dec
outsl
push
cmp
std
xchg
popf
push
mov
add
lods
clc
and
sbbl
or
cmc
mov
sub
pop
push
adcb
and
jg
lods
js
fdivrp
es
or
mov
and
jg
mov
inc
fcmovb
pop
fbstp
sbb
sub
sbbb
lahf
fidivs
adc
stc
inc
aas
es
lahf
rcrl
fbstp
or
pop
nop
daa
push
and
popf
test
cwtl
das
mov
mov
push
insb
inc
imul
pop
popf
addr16
mov
test
inc
xlat
inc
repz
outsl
push
dec
cmp
push
dec
xlat
fbstp
sahf
adc
sbb
lods
inc
dec
sbb
adc
repz
adc
out
xor
sub
xor
mov
xchg
sub
ret
add
push
aas
pop
shlb
ds
or
mov
inc
and
sub
fidivs
lcall
xchg
sub
xchg
cmpb
repz
test
push
pop
loop
push
mov
loop
out
dec
rclb
pop
sahf
xchg
stc
or
mov
mov
cmpsb
cmp
popf
pop
cmp
loopne
push
aam
lret
sbb
stos
mov
or
lret
push
movsl
sti
mov
mov
push
xor
imul
in
orl
bound
xchg
sub
clc
shrl
rolb
add
mov
ret
pop
rcl
insl
add
in
sbb
pop
dec
in
ljmp
pop
sbb
dec
out
aam
pop
enter
cld
or
jnp
mov
sbb
xlat
push
xor
cltd
imul
push
pusha
les
mull
sbb
adc
add
inc
jnp
ljmp
cmp
jg
scas
sbbl
out
adc
pop
xor
dec
inc
and
je
cli
xchg
add
push
mov
mov
jnp
stos
testb
sub
pushf
xor
add
mov
cmpsl
ds
lods
push
in
fimuls
mov
cmp
jp
push
repnz
shl
xor
sbb
stos
mov
fwait
xor
sarb
cwtl
cmpsb
cmp
es
rolb
mov
cltd
mov
xsha1
cmpsb
iret
or
cmp
ljmp
ret
lret
bound
mov
pop
hlt
loopne
mov
inc
cli
call
divl
mov
fsubp
jb
shlb
mov
sbbl
daa
iret
pop
repnz
mov
mov
popf
xor
mov
lds
mulb
out
xchg
shrl
cmp
arpl
inc
fxch
je
or
jnp
or
push
lcall
xor
pushf
mov
jne
push
or
fldl
and
in
sub
aaa
into
fimuls
pushf
xor
aam
push
enter
inc
or
jp
inc
jns
inc
insl
adc
jo
jo
mov
shll
adcl
mov
xchg
ljmp
dec
out
cmp
stc
mov
movsl
cld
xchg
lods
loopne
and
cmpsl
ds
and
mov
pushf
cmp
into
sbb
jnp
add
jle
les
jb
push
and
pop
mov
outsl
adc
or
inc
add
xor
sub
adc
mov
movsb
into
xlat
sbb
or
lret
lcall
mov
mov
xchg
sub
xor
lods
cmpsl
sbb
lds
out
push
xchg
shlb
push
adc
push
mov
jo
mov
movsb
jmp
in
fidivl
push
push
jmp
rcrb
out
test
push
movsl
mov
mov
aam
sub
sahf
pushf
sub
pop
fucomip
or
push
pop
sahf
jge
mov
fisttpll
adc
push
pop
xor
mov
movsl
rcrb
add
inc
fprem
inc
insb
add
popa
clc
dec
jge
xor
lods
test
fidivrs
mov
dec
adc
mov
mov
clc
mov
or
scas
cmp
ds
jbe
ss
nop
cwtl
pop
icebp
lret
out
in
jp
pop
pop
ja
cmp
xchg
sub
lea
scas
inc
fsubp
shrl
add
xor
repnz
in
test
movsb
pop
lcall
and
out
inc
inc
fidivs
push
rclb
sbb
out
jg
sbb
cmpsb
cmp
popf
xor
ret
pop
mov
jge
loopne
je
sub
xchg
pop
aaa
sti
xchg
imul
mov
sarb
rolb
fnsave
into
push
and
push
das
push
in
pusha
jne
push
cmpsl
xorl
cli
aam
sub
sbb
dec
dec
daa
scas
inc
pop
outsl
shrb
jp
lods
ret
cmc
scas
jmp
pop
out
xchg
sub
pop
or
imul
dec
loopne
mov
imul
clc
cli
xchg
sub
movsb
cmp
stos
inc
dec
jg
aad
jp
fs
loopne
mov
sbbl
mov
sbb
leave
inc
jns
push
stos
test
divl
or
std
sti
xchg
das
cmc
mov
imul
aaa
into
mov
mov
cli
xchg
test
ss
lods
pop
sahf
pop
xor
pop
fs
adc
mov
inc
xlat
add
dec
loope
push
lahf
cmp
inc
fcoms
mov
sbb
sub
test
movsb
shrb
add
scas
ss
testl
stc
jnp
jmp
cld
xor
out
mov
test
out
stc
nop
daa
das
or
aaa
xor
push
jae
arpl
mov
jmp
lahf
sub
mov
bound
inc
fldt
mov
sbb
es
sbb
in
inc
and
lea
popf
mov
out
xchg
xor
mov
loope
sub
mov
sub
jge
sbb
insb
xchg
xchg
mov
add
sbb
mov
or
add
pusha
int3
arpl
int
or
sahf
call
es
ja
pop
scas
subl
lahf
ret
mov
fidivs
mov
lods
daa
loop
pop
adc
pop
mov
dec
and
dec
in
clc
xor
jmp
out
xchg
jmp
sbb
lea
lods
inc
mov
sub
add
pop
aad
mov
decb
das
jge
lahf
push
stc
nop
xchg
mov
mov
int3
add
jnp
das
mov
rorb
lahf
rep
add
call
leave
pusha
mov
jne
stos
inc
sub
jne
pop
mov
push
mov
in
test
and
pop
aas
mov
lds
data16
lcall
imulb
add
mov
and
push
insl
xchg
stos
inc
or
gs
xchg
sub
fucomp
test
adc
shll
lods
inc
imul
push
in
mov
mov
imul
sub
fnstenv
xor
mov
loopne
mov
xor
mov
imul
mov
jg
repz
dec
ds
xor
xchg
imul
fwait
fwait
std
xchg
or
fsubrs
cmp
lock
and
cmp
sarb
stos
insl
loop
mov
jne
inc
cmpsl
loope
or
mov
fsubrs
ljmp
fiaddl
and
xchg
loopne,pn
ss
adc
insl
or
pop
std
mov
sub
out
icebp
sbb
data16
mov
sahf
xor
xchg
mov
xchg
adc
sahf
xor
cwtl
xor
js
sbb
jl
push
out
test
or
and
xchg
repnz
jle
cmp
xor
jbe
out
mov
jbe
shl
repnz
mov
and
jle
jne
dec
ss
mov
enter
iret
inc
mov
sahf
xor
sbb
dec
cmc
mov
rol
push
repz
pop
nop
ljmp
enter
pop
or
pop
jnp
in
test
jp
dec
push
mov
dec
pop
jns
add
ret
cmp
dec
dec
pop
call
push
fcoml
std
scas
inc
out
call
ret
xor
push
sbb
loopne
lret
aam
push
enter
inc
sbb
testb
xchg
fimull
mov
cmp
lahf
lea
ss
push
fistpll
into
mov
pusha
mov
cmpsb
jae
fld
jp
mov
mov
mov
pop
sub
jmp
shrl
pop
sahf
orl
fwait
xor
mov
shrl
sub
jns
cmpsl
insl
add
loopne
adc
add
cmpsl
xor
and
xchg
mov
popa
lds
jecxz
leave
dec
loopne
mov
out
clc
mov
shlb
pop
imulb
in
int
mov
fidivl
scas
outsl
push
loope
imul
cli
adc
dec
xor
inc
jno
push
in
scas
andl
ljmp
add
inc
insb
add
inc
adc
xor
inc
fwait
inc
mov
cmp
dec
out
dec
pop
repz
icebp
mov
dec
hlt
mov
cmp
xor
xor
mov
shlb
inc
in
sbb
sbb
inc
jecxz
js
es
bound
xchg
jns
mov
std
sahf
mov
push
out
cmp
inc
or
xor
cmp
jae
mov
ss
popf
xor
ja
idivl
or
push
cmp
xchg
push
jae
in
push
out
xchg
outsb
jl
pop
ljmp
fs
sub
ja
sti
xchg
push
jo
insb
mov
mov
js
mov
stc
nop
daa
mov
inc
mov
xchg
aad
push
leave
testl
shlb
mov
test
jne
fsubl
rcl
repnz
imul
mov
adc
push
arpl
pop
cmp
dec
out
cs
add
call
inc
fadd
inc
mov
jbe
out
xchg
int
mov
sub
or
fmuls
mov
out
jl
dec
scas
in
dec
fnstsw
mov
fsubp
jecxz
cmp
fldcw
add
add
dec
test
cmpsl
mov
mov
mov
rorl
movsl
cld
dec
repz
xor
int3
arpl
subl
icebp
fdivl
xchg
cmpsl
push
add
out
das
cmpsl
dec
popa
clc
test
in
jns
loopne
out
jbe
fbstp
fs
cld
lea
shll
or
mov
jg
push
push
imul
imul
lods
xor
aas
pusha
xor
mov
mov
add
push
scas
inc
dec
in
mov
ret
pop
cmpsl
hlt
ret
pop
daa
cmpsl
pop
sahf
push
inc
pop
hlt
jb
int3
arpl
call
inc
mov
push
out
loop
rclb
inc
dec
in
andl
ja
cli
xlat
inc
faddp
in
and
push
pop
jbe
xor
xorb
push
imul
pop
call
cmp
or
shll
push
cmp
inc
cmp
xor
push
mov
mov
mov
test
mov
stos
fimuls
pop
sub
mov
popf
js
scas
inc
shll
xchg
icebp
xor
in
push
call
xchg
jmp
sbb
xchg
sub
pop
scas
inc
dec
outsl
daa
mov
repz
stos
inc
jae
mov
shl
xor
arpl
stos
inc
ja
mov
shl
mov
aam
or
jbe
sahf
cmp
or
lods
inc
sahf
jle
repz
mov
fisubl
mov
stos
inc
inc
icebp
cwtl
das
and
cmp
shrl
pop
ja
imul
outsb
add
int3
sti
adc
xorl
dec
movsb
lods
inc
sbb
icebp
lods
cmp
popa
imul
adc
mov
and
in
nop
mov
call
in
dec
addb
push
repnz
adcb
das
xchg
ss
jno
sub
and
rcl
jg
adc
repnz
jecxz
scas
jg
push
repz
adc
push
scas
inc
mov
jb
jge
cmpsl
cmp
fists
movsl
xchg
or
fwait
mov
xchg
cs
pop
int
pusha
inc
sub
lahf
enter
inc
shrl
mov
mov
sti
mov
adc
jno
lods
inc
outsb
dec
out
lret
cmc
push
in
fnstenv
jb
test
andb
out
sahf
nop
sub
ja
sub
jmp
fnop
or
fildll
test
xchg
sub
orb
mov
mov
test
sub
fldenv
xlat
pusha
cli
fsubrs
add
inc
or
leave
pusha
adc
mov
sub
jl
mov
ficompl
cs
xor
add
pop
decb
out
cld
jb
adc
add
mov
mov
push
cmpsl
ja
adc
dec
dec
in
xchg
int
mov
xor
pop
cmc
pop
repnz
fs
jb
sbbl
add
les
pop
mov
push
sub
jmp
imul
dec
pop
mov
push
jmp
sbb
fs
add
test
jl
mov
cmpl
jle
lods
stos
fwait
xor
lock
test
scas
sbb
stos
shl
or
jecxz
aam
inc
cmc
movsb
cmp
popf
in
test
or
arpl
pop
xchg
fwait
out
or
cs
lock
icebp
sti
xchg
sub
int
xor
xchg
sub
xchg
add
fldcw
mov
cli
or
test
mov
jns
push
lahf
fdivl
clc
mov
and
cmpsl
movsl
ret
add
mov
mov
fimull
sbb
pop
repz
xor
adc
adc
or
ds
in
pop
sbb
xchg
sub
loop
cwtl
das
mov
fnstsw
mov
mov
inc
jle
jle
cld
xchg
je
jge
inc
xchg
mov
pop
jecxz
add
cmpsb
cmp
cld
mov
mov
xlat
dec
out
test
fnstenv
jp
or
outsl
aaa
jne
add
xchg
sub
mov
mov
jnp
sbb
mov
shrl
push
sbb
je
dec
fbstp
sbb
pop
inc
fimull
pusha
pop
fwait
repz
pop
fnsave
fsubrs
sbb
cmp
ret
pop
nop
loopne
lds
addr16
and
fs
add
iret
cmpsl
pop
cmc
out
push
xor
dec
mov
mov
enter
push
lods
mov
insl
sub
jo
push
ret
jl
xchg
xlat
fnsave
xor
and
pop
divb
mov
push
dec
push
adc
cmp
sbb
pop
jns
jge
arpl
clc
xor
xchg
cmp
leave
and
cwtl
mov
pop
sub
push
aas
dec
sbb
subps
rorl
jb
fldcw
pop
pusha
jge
scas
mov
mov
test
filds
cmpsb
inc
fistl
or
jle
out
add
int3
xor
mov
fisubs
iret
lea
loop
dec
loop
add
shll
push
adc
jno
loope
sub
sub
dec
pusha
idivl
lcall
pop
nop
daa
xchg
cld
arpl
ljmp
lcall
sub
jbe
mov
ds
stos
lock
cmp
lret
cmp
ds
sar
xchg
ret
xlat
jno
fidivl
sbb
jb
idivb
add
or
cmpb
into
pushf
cmpsl
ds
jb
nop
subl
fbstp
rcrl
stc
add
out
mov
mov
or
push
pop
nop
or
and
arpl
aam
xor
int3
arpl
lds
mov
rcl
cli
xchg
leave
jbe
xor
xor
iret
cmp
fnclex
jns
adc
lret
aam
aas
adc
ss
test
sub
mov
fsubr
or
lock
loop
cmp
sbb
and
dec
loopne
xchg
mov
cmpsb
int
leave
pusha
pushf
pop
hlt
lcall
lcall
mov
push
popa
lods
inc
push
cli
or
addr16
fnsave
and
lds
mov
lea
jns
scas
loope
and
stos
push
add
jbe
push
add
dec
out
ret
jns,pn
push
imul
test
std
xchg
push
jmp
push
jmp
mov
and
mov
xchg
xor
test
inc
push
test
in
push
in
sbb
ret
pop
mov
sub
jnp
sub
dec
loope
mov
pop
add
das
andb
lods
xchg
sub
xchg
and
inc
xchg
cmp
fidivl
pop
cwtl
das
dec
lahf
int3
arpl
pop
mov
popf
addb
arpl
repz
cmpsb
lea
fcomip
mov
mov
dec
jmp
test
xlat
shrl
lcall
cwtl
add
jbe
lock
xchg
int
or
push
popf
push
sub
jo
scas
and
sarl
cmp
lods
push
lret
inc
push
out
movsl
cmp
and
push
ja
shrl
in
and
arpl
add
scas
inc
fsub
scas
icebp
mov
mov
fiadds
mov
test
inc
xor
sbbb
add
shrl
jp
nop
insb
into
adc
lcall
pusha
lods
and
into
xchg
inc
fbstp
mov
mov
bound
xor
push
dec
jecxz
loop
xchg
sub
inc
pop
vcvtdq2ps
mov
lea
sahf
loopne
lock
mov
sahf
xchg
sub
inc
inc
fdivl
xchg
shrb
pop
iret
dec
jle
vmwrite
test
xor
dec
sbbb
icebp
call
or
shlb
hlt
stos
cmp
ljmp
ss
ficomps
iret
out
or
loop
dec
loope
add
je
adc
pop
pop
pop
icebp
xchg
push
lcall
ja
clc
mov
es
jle
inc
leave
inc
fisttpl
movsb
xchg
jbe
jbe
outsl
cltd
mov
mov
sbb
push
inc
lods
lods
inc
pop
ljmp
xor
add
pop
repnz
addr16
popa
dec
in
jp
adc
jno
jne
lcall
outsb
add
xchg
out
mov
mov
mov
or
mov
push
jmp
xchg
imul
pop
aas
push
out
jle
bound
mov
sbb
cmp
loop
clc
xchg
xchg
pop
cmc
les
jl
pop
or
xor
push
ljmp
jno
loopne
insl
adc
nop
daa
xor
hlt
outsb
arpl
scas
and
rcll
jg
sbb
jb
xchg
cmp
rorl
adc
jb
cs
mov
and
jne
push
push
insl
xchg
pop
gs
mov
and
pop
int
cmp
sub
push
adc
or
pop
movsl
xchg
pop
test
in
clc
jecxz
adc
sbb
dec
ss
xor
and
mov
outsb
push
adc
inc
das
cmc
mov
jge
xchg
adcb
mov
fwait
xor
aam
enter
push
cmp
dec
out
pop
fsubrs
js
add
mov
loop
mov
std
add
inc
push
push
xor
xchg
pop
mov
out
idiv
outsl
push
sub
add
and
push
mov
sarl
push
loop
xor
ds
repz
add
adc
adc
or
nop
es
movsl
cli
mulb
mov
mov
mov
xchg
andl
ss
loopne
or
icebp
fdivr
popf
pop
das
push
addb
jmp
adc
negl
and
fnstcw
test
leave
int
fwait
iret
xchg
fidivrs
in
call
or
cmp
sub
mov
dec
loop
xor
pop
add
addr16
push
out
test
test
mov
push
sti
sub
sub
stos
inc
cmpsb
dec
dec
fistpll
enter
data16
rcrb
out
dec
icebp
test
and
pushf
lahf
inc
mov
mov
leave
adc
inc
ljmp
xchg
cmp
jle
jmp
or
fimuls
dec
dec
dec
shrb
rolb
cmc
mov
aam
stos
add
jle
shrb
jb
ds
pop
int
push
cld
shlb
mov
rolb
fisttps
std
sub
pop
push
pop
je
xor
push
scas
shr
xor
fists
call
mov
iret
aam
das
enter
push
mov
test
imul
add
stc
add
inc
xor
push
movb
pop
sahf
add
out
lock
nop
daa
js
sbb
sarb
test
jbe
inc
dec
popa
clc
cmp
adc
add
sub
inc
add
movsl
cmp
enter
insl
xor
les
push
pusha
incl
out
fs
or
add
in
test
inc
ficompl
scas
nop
aaa
pop
js
incl
dec
xor
sahf
jbe
out
aam
pop
leave
rolb
inc
add
loope
movsb
lret
dec
fsubp
fsubs
lods
mov
test
pop
cwtl
and
jne
aam
daa
xor
jns
fadds
xchg
gs
mov
arpl
pop
jo
lret
cmc
cmp
inc
popf
or
lahf
mov
mov
sbb
mov
nop
push
ret
std
or
pop
clc
loop
adc
pop
lret
xor
push
and
sub
aaa
cli
xchg
inc
pop
sub
imul
test
push
sub
cs
sub
cmpl
or
xlat
pop
aam
inc
inc
mov
iret
scas
dec
scas
add
shr
cmp
in
mov
jp
outsb
xchg
test
xchg
sti
jl
into
dec
mov
cmpsl
push
aam
jnp
daa
inc
jmp
into
imul
mov
fwait
loop
cmpsl
outsb
jns
lahf
scas
ret
dec
fcoml
add
shrb
xor
sbb
call
push
repnz
std
out
cmpsb
mov
xor
je
mov
int
cld
mov
cli
and
xor
out
out
sub
outsl
sbb
hlt
xor
rorl
pop
outsb
ja
addb
add
or
out
xor
add
inc
mov
ss
fiadds
jecxz
mov
and
sub
scas
rcll
dec
inc
fdivrl
int3
inc
movsl
into
sbb
mov
cmp
cmp
int
and
mov
loopne
add
push
clc
popf
jmp
ja
jl
imul
flds
dec
mov
mov
fwait
data16
in
jecxz
addr16
arpl
subb
xchg
mov
lret
or
jge
mov
imul
jge
rolb
cmp
lret
imul
jle
cmovs
bound
jmp
and
xchg
mov
add
ret
xlat
push
jecxz
push
add
adc
cmpb
cli
adc
xchg
adc
mov
test
mov
cmp
out
add
ja
clc
push
addr16
nop
loop
dec
pop
in
xor
or
imul
stc
pop
sub
ss
and
test
pop
cmp
push
add
jo
mov
ret
adc
inc
loopne
or
jno
mov
push
xor
les
into
arpl
and
fstpt
cmp
mov
mov
das
gs
jg
loopne
inc
lock
daa
popl
pop
ret
ds
loop
daa
pop
cld
cmp
dec
or
xchg
and
out
icebp
clc
mov
roll
lds
bound
push
pop
stos
rolb
cmpsb
aam
xchg
mov
ljmp
dec
repz
outsl
insl
cltd
roll
mov
into
fs
pop
idivb
test
aaa
inc
adc
flds
cmp
dec
cmp
in
pushf
scas
sbb
scas
push
inc
and
jns
mov
mov
popf
sbb
push
iret
loopne
xchg
mov
hlt
stos
inc
lds
pop
rorb
sub
xchg
pop
call
adc
aaa
xchg
inc
or
push
cmp
mov
adc
movsb
addr16
ds
jmp
add
imul
push
dec
cmp
cmp
movsb
add
fisubs
lcall
rcll
sbb
and
xor
and
add
stc
or
adc
push
xor
repz
pop
shrl
enter
rcl
inc
shll
stos
xchg
or
insl
mov
dec
outsb
inc
mov
sbb
sbb
cmp
ja
arpl
les
and
sbb
inc
or
inc
jae
push
jl
fcompl
scas
xor
add
scas
test
int
sub
inc
or
fs
or
ljmp
pop
fdivr
ret
pusha
jae
mov
lds
dec
xor
mov
cmpl
out
cs
cli
fs
out
jns
imul
movsl
int3
jnp
or
push
pop
push
subb
je
ss
or
fildll
sbb
movsb
cmpsl
dec
test
out
mov
js
daa
fs
pop
imul
test
orl
fwait
cmp
cmp
ret
or
lock
cltd
in
js
push
cli
inc
insb
nop
cmp
xchg
in
pop
loop
mov
orb
and
mov
xchg
cmc
mov
ds
dec
adc
inc
lret
xchg
pusha
test
xchg
sub
hlt
sub
ret
out
inc
lret
rol
clc
pop
sahf
xchg
sub
add
ret
pop
push
decb
fidivs
and
pop
shll
jbe
inc
mov
xchg
sub
cld
rclb
outsl
js
mov
clc
loopne
int
cmp
and
inc
stc
hlt
push
xchg
ds
lds
xchg
adc
pop
inc
sub
loope
fcoms
add
pop
jns
pop
insb
cmp
das
pop
repz
jbe
dec
loopne
xchg
out
jne
sbb
xor
push
rolb
jle
cmp
or
jg
dec
cmpsl
repnz
sarb
adc
dec
add
in
fstps
popf
pushf
cmp
adc
filds
enter
jmp
mov
dec
ret
xchg
xor
or
subl
lds
stos
aaa
fbstp
repnz
repz
std
daa
add
dec
xchg
cmp
fucom
sbb
cli
adc
jb
sti
jge
xchg
jae
push
inc
adc
or
push
pushf
sub
jb
movb
bound
mov
out
sub
sbb
pop
lods
addr16
sti
pop
sti
daa
data16
orb
sarb
xchg
lahf
ja
sbb
aam
scas
test
sub
rcr
lret
cmpsl
mov
dec
in
negb
ffreep
pushf
adc
inc
ja
fcoms
notl
lahf
lods
out
arpl
inc
jns
jecxz
or
fs
jmp
pop
addl
sbb
clc
push
xchg
das
mov
xorl
mov
pop
pop
inc
xchg
pop
xchg
jno
out
outsl
pop
outsl
jecxz
sarl
xor
out
fistps
sarb
xlat
or
and
out
rcrl
aaa
aaa
push
in
mov
lock
pop
aam
adc
push
and
cli
mov
addr16
gs
aas
nop
inc
pop
push
cli
lcall
add
pusha
inc
sarb
and
jne
in
fs
sarb
mov
push
mov
and
and
or
mov
call
ljmp
mov
xchg
outsl
sub
test
jnp
sub
dec
dec
int
enter
pop
cmp
mov
cmp
mov
insl
outsb
xlat
aaa
dec
mov
xchg
enter
fistpll
scas
adc
stos
mov
clc
xor
xlat
cmove
ljmp
jno
pop
std
mov
adc
sbb
push
daa
xor
arpl
sub
add
add
mov
jb
push
lods
xlat
lahf
mov
arpl
js
sarb
pop
jg
pop
rorb
push
push
push
mov
enter
dec
negl
in
std
es
aas
dec
inc
fildl
mov
dec
out
repz
add
sahf
xor
pop
mov
mov
imul
pop
lock
mov
movsl
in
and
sub
dec
jecxz
cmc
pop
repz
push
roll
adc
mov
and
cwtl
das
int
cmpsb
cmp
inc
test
iret
xchg
sti
push
test
dec
xchg
cmp
movsb
cmp
pop
sub
mov
ret
xchg
pop
les
jp
in
jnp
mov
cwtl
in
add
sub
lret
arpl
inc
fisubrs
int3
gs
std
mov
lahf
loope
test
push
add
outsl
das
shrl
icebp
pop
aas
rcrb
xchg
inc
mov
cmp
gs
xor
mov
cmpsl
divb
lret
fs
cld
scas
or
dec
add
jb
shrl
add
sbb
test
aaa
fidivl
addr16
lret
out
test
repz
and
das
mov
or
imul
in
or
mov
test
ds
and
in
sbb
jnp
cmp
lcall
and
iret
pop
rclb
aas
mov
pop
and
pop
lcall
and
fstpt
sti
and
and
xlat
pop
mov
mov
pop
js
fcomps
and
lret
in
outsl
sub
and
sbb
jg
pop
in
mov
into
lahf
jge
shr
fs
and
fwait
xor
inc
mov
aaa
cltd
xlat
outsb
lret
call
cmc
mov
cmp
jae
inc
adc
rcll
scas
adc
dec
out
xor
insl
add
xchg
mov
or
fisubrs
daa
pop
xor
pop
arpl
in
mov
int3
arpl
daa
ljmp
jp
lahf
stos
jl
lods
int3
es
lcall
inc
fmull
jg
push
jo
mull
adc
inc
movb
mull
adc
dec
add
fstpl
mov
pop
lods
in
sbbb
add
mov
in
test
push
fmull
jecxz
inc
stc
xchg
cs
push
mov
xchg
shrl
or
cmp
out
test
pop
fs
mov
mov
shll
push
adc
dec
loop
xor
jne
inc
push
xchg
mov
mov
int3
rcrl
scas
add
stos
inc
and
xor
popa
mov
lock
add
out
or
and
dec
xor
mov
in
pop
xchg
int
cmp
cld
xchg
dec
add
je
xchg
sub
add
iret
imul
push
lods
rcrl
jns
mov
pop
jb
or
stc
inc
push
and
push
jmp
add
mov
fmull
ret
fiadds
cltd
in
or
out
lcall
xlat
outsb
pusha
pop
or
push
jmp
mov
icebp
lret
cli
inc
fiadds
mov
aaa
pop
jo
lods
mov
add
movsb
sub
aam
mov
sbb
xor
fwait
push
or
cwtl
das
mov
ljmp
push
jb
mov
lds
lret
sti
sahf
cmpsb
cmp
divl
les
mov
push
fisubrl
pop
push
out
xor
bound
xlat
jo
mov
lock
xchg
inc
sbb
call
pop
push
daa
stos
gs
or
ljmp
or
lods
daa
mov
xchg
sbb
cltd
or
mov
cli
enter
pusha
je
pandn
stos
ja
inc
push
call
lods
mov
decl
sbb
jo
ficomps
syscall
es
stc
jae
out
sbb
mov
adc
aaa
shrb
adc
outsl
inc
stos
dec
loope
add
cs
cwtl
das
orl
mov
adc
mov
int
daa
sub
test
clc
mov
sub
lahf
mov
ljmp
adc
push
xchg
cld
lods
iret
sbb
push
jmp
mov
dec
jecxz
test
pusha
xchg
push
or
into
gs
sub
push
mov
loope
pop
shrb
popa
jb
mov
xchg
mov
mov
ftst
jnp
lret
mov
jns
fdiv
mov
hlt
rcrl
xchg
rol
xchg
loop
pop
mov
fidivrs
insl
push
loop
inc
mov
fidivs
adc
rclb
data16
subl
dec
pop
xor
shrb
xor
fidivl
dec
inc
sti
and
cwtl
in
lock
jecxz
push
js
jb
or
dec
rorl
aas
sbb
out
mov
pop
clc
sbb
sub
cmp
and
cmp
mov
xchg
mov
or
aam
and
movsl
mov
repnz
inc
fisubs
ret
aas
enter
fucomip
sub
lret
add
int3
mov
dec
out
fsubrs
rorl
insl
add
sub
mov
pop
lock
sub
pop
jb
and
daa
leave
pusha
test
out
lock
rclb
pop
repz
fdivl
int
mov
jbe
ds
ljmp
inc
sub
xchg
cwtl
fbstp
mov
jmp
adc
repnz
or
and
cs
push
cmp
mov
and
mov
xlat
cld
jge
inc
inc
stos
inc
mov
cmp
addb
sbb
jl
pop
mov
push
cs
inc
shl
pop
and
hlt
push
insl
lds
pop
repnz
out
sbb
xchg
js
ret
popa
psllw
sub
cltd
dec
ss
aaa
test
insb
ja
clc
test
mov
and
pop
cmc
sbb
mov
push
out
imul
xor
mov
inc
fldenv
xor
sbb
shlb
cwtl
jecxz
or
dec
loope
scas
sbb
js
ja
xchg
jnp
inc
insb
jl
leave
outsl
int
pop
in
adc
imul
push
jbe
adc
pop
sbb
std
xchg
xchg
mov
movaps
xchg
sub
movhps
pop
mov
jmp
push
fmuls
in
mov
test
in
filds
in
sub
inc
and
inc
fimull
cmp
in
add
adc
rcll
mov
xor
add
fnstenv
push
in
testl
jns
mov
test
push
in
test
jbe
jmp
pop
mov
xor
into
pop
push
repz
enter
iret
add
in
and
inc
cwtl
movsb
cmc
sub
sbb
in
mov
in
stos
mov
clc
add
sbb
mull
mov
mov
shr
inc
popa
clc
ja
cmpsb
test
inc
sarl
push
ret
xor
into
popa
in
in
enter
push
or
lods
jns
out
hlt
outsl
push
or
rcrl
xchg
pop
push
insl
es
das
add
in
adcb
push
outsb
add
push
mov
pop
icebp
inc
xor
test
mov
pop
push
and
pop
cmp
jmp
xor
mov
fs
push
out
test
mov
mov
mov
int3
cmc
adc
pop
sbb
mov
mov
lods
je
enter
mov
loopne
insl
loopne
add
cmpl
pop
hlt
shr
xchg
loop
sti
shr
xchg
sub
enter
sarb
aad
rcrl
ret
out
ret
test
mov
fisubrl
mov
scas
or
push
ds
dec
in
cs
pop
pusha
ficoml
stos
or
push
test
loope
inc
lds
mov
cli
scas
hlt
out
xor
ja
pop
fisubrs
adc
lock
insb
mov
test
aad
xchg
cwtl
aam
mov
xor
fidivs
fbstp
lret
mov
icebp
sti
xchg
in
loop
mov
cmp
cld
xchg
jb
std
xchg
sub
scas
push
add
mov
push
loop
dec
gs
pop
outsb
insb
add
pop
mov
lcall
out
adc
arpl
mov
xor
adc
add
mov
pop
adc
jmp
dec
out
or
push
lods
xchg
lret
cmp
cld
mov
pop
and
int
faddp
lock
in
outsl
push
pop
and
push
xchg
scas
push
lods
push
inc
sbb
sub
push
jmp
dec
loop
ds
xchg
loopne
decb
cmp
mov
xchg
push
popf
add
pop
mov
and
pop
xchg
cltd
mov
shll
push
ljmp
push
movsl
xchg
mov
repz
cmp
mov
scas
mov
roll
lcall
jl
cmp
cmp
or
xchg
insl
sub
aad
mov
mov
push
out
lock
jbe
jbe
out
mov
sahf
jecxz
mov
push
aad
out
in
pushf
xor
or
inc
mov
xchg
sub
aam
clc
movsb
ljmp
sub
lahf
jl
loop
cmp
loopne
dec
push
popf
bound
and
and
pop
in
push
in
push
add
or
cmc
lret
lock
ret
adc
mov
into
mov
stc
rcrl
adc
cmc
out
clc
push
lds
pop
scas
mov
fldl
sahf
jmp
or
mov
pop
mov
in
icebp
jge
inc
adcl
cmc
mov
leave
or
cli
sbb
lahf
sbb
rorb
fs
fdiv
and
mov
xchg
ljmp
add
sar
repz
sub
add
mov
das
mov
jg
push
xor
sub
out
jle
pusha
cmp
sbb
dec
pop
lcall
ja
jb
mov
shrl
sub
scas
dec
clc
in
sti
insl
fs
sahf
sbb
lcall
jle
icebp
xor
jae
clc
out
lret
jle
std
inc
insl
add
push
sti
xchg
pushf
jne
xchg
dec
mov
jge
lahf
out
or
repz
daa
mov
inc
xchg
sub
xlat
push
mov
pop
sahf
sahf
jge
roll
iret
jo
sbb
sbb
pop
push
test
jnp
or
ret
pop
inc
ja
mov
mov
sbb
jg
cmpsl
ds
sub
cmp
mov
pop
test
xchg
je
lods
pop
push
daa
pusha
mov
dec
mov
lds
xchg
pop
enter
pop
push
leave
pop
sarb
out
ljmp
mov
subb
shrl
mov
rclb
cmpsl
add
sbb
add
xorb
mov
idivl
mov
lds
lds
push
sbb
loopne
jp
push
add
fistps
or
mov
idivl
clc
lods
rolb
andb
adc
adc
dec
jae
dec
lret
bound
ja
imul
sbb
xchg
mov
jb
jae
adc
std
push
xchg
mov
and
fwait
xor
dec
and
outsl
inc
xor
cltd
or
sti
xor
movsl
jmp
jne
aas
xchg
sub
pusha
xchg
sbb
add
icebp
stc
shr
sahf
test
popl
and
mov
cmp
and
test
mov
xchg
lahf
mov
imul
orl
test
test
sbbb
imul
pop
leave
inc
fdivr
lret
cmc
adc
js
xchg
or
cld
xchg
mov
jo
in
mov
into
pop
jbe
loope
or
cltd
xor
xchg
and
adc
cmpl
xchg
cmp
ret
xor
fstpl
ljmp
rcr
popa
mov
in
jmp
enter
imul
sub
push
mov
lods
sbb
cmp
cmp
jmp
js
stos
test
test
jns
pop
ljmp
jns
pop
push
mov
in
cld
xchg
pop
jle
dec
pushf
es
dec
loopne
mov
insl
pop
add
nop
push
test
push
xor
jae
test
stc
fldlg2
cli
mov
call
sub
test
mov
inc
pop
mov
aaa
imul
lret
fdivs
fmul
cmc
push
call
aam
cltd
test
mov
jle
test
in
jns
rcrl
iret
lcall
xchg
cmp
lcall
ret
xchg
in
xchg
pop
sbbl
fsubp
test
inc
inc
mov
loope
aad
or
pusha
rolb
testl
xor
pop
enter
jge
jno
add
cltd
xor
mov
push
add
call
imul
sub
fsubrp
fisubs
outsb
mov
mov
imul
orl
fucomp
mov
scas
inc
mov
xchg
lds
lock
adc
add
hlt
jecxz
test
add
inc
mov
push
stos
inc
push
pusha
adc
mov
jo
inc
dec
add
mov
xchg
push
push
mov
xchg
xchg
das
xabort
sbb
cmc
xchg
int
cmpsl
daa
lds
cltd
adc
in
adc
out
les
dec
mov
and
nop
jb
mov
sbb
stos
aam
loopne
loope
mov
stos
ljmp
mov
outsl
shrl
ds
mov
sub
fisubs
cmp
inc
jecxz
sbb
mov
mov
xor
jno
push
jne
test
xchg
inc
lods
jnp
cli
nop
scas
fcoml
or
inc
push
testl
stos
and
push
mov
xchg
sub
mov
xchg
shll
outsb
jle
lock
int3
dec
insl
test
loope
ds
imul
ja
shlb
jb
mov
adc
std
mov
call
sbb
adc
sub
mov
adc
daa
cs
mov
jae
push
stos
cmp
xchg
and
call
scas
outsb
int3
xchg
push
push
addr16
loop
dec
sarb
lret
pop
add
push
mov
orb
ljmp
test
andl
jp
scas
sbb
lea
andl
ret
test
mov
repz
push
or
rcrl
adc
in
gs
or
and
inc
jo
insb
xchg
mov
jo
mov
hlt
int3
inc
sti
and
das
arpl
adc
data16
dec
xor
fwait
repz
mov
sub
sub
xor
xchg
add
push
das
jne
cmp
add
sub
mov
aas
dec
arpl
fsubrs
repnz
aam
mov
dec
sbb
and
fwait
mov
aaa
pop
cltd
xor
mov
aad
xor
loopne
test
loope
js
jne
or
xorb
pop
lods
call
or
jno
fs
nop
mov
xchg
and
adc
lret
lea
pop
test
xchg
jmp
mov
push
push
mov
ss
mov
loop
jne
repz
cli
insl
add
push
js
mov
fidivl
mov
adc
pop
mov
loope
cmc
stos
out
inc
js
loop
xchg
push
jp
mov
add
bound
mov
or
push
xchg
insb
inc
loopne
adc
repz
fwait
out
xchg
xor
rcll
rolb
sbb
cltd
sub
pop
lcall
sbb
scas
inc
sub
push
inc
mov
js
dec
cmp
dec
cmp
jne
fs
jno
pop
push
pushf
sbb
int
in
and
clc
sbb
xchg
jmp
cmc
lret
mov
xchg
scas
inc
vpunpcklbw
sub
jmp
xor
mov
mov
inc
dec
cli
cmp
cmp
adc
in
loop
xor
stc
fsts
lea
jb
loopne
stc
insl
add
ljmp
mov
shll
and
xchg
sub
adc
imulb
lret
jno
add
idivl
sub
inc
sub
out
push
dec
iret
pop
repnz
repz
lock
shrb
lahf
and
push
jmp
push
jecxz
mov
gs
mov
xor
sub
cmp
cwtl
insb
movlps
rolb
sub
test
icebp
ror
add
in
xor
push
jmp
inc
fincstp
hlt
xchg
or
aam
gs
call
je
popf
add
jmp
das
push
cmp
inc
jb
adc
addl
dec
cmp
xchg
repz
inc
fdivl
sahf
add
pop
mov
push
scas
repnz
jnp
add
mov
adc
ss
stos
push
test
lock
mov
or
mov
and
rolb
popa
fsubrs
in
and
scas
pop
xor
push
lock
push
rcrl
jg
in
xchg
push
jge
inc
xlat
push
mov
mov
xor
rcrb
ret
push
aam
push
add
cmc
xor
fistl
cmp
das
dec
sbb
arpl
pop
std
xchg
dec
pop
mov
jne
sub
pushf
xchg
xchg
fdivl
adc
adc
inc
mov
fistps
loopne
daa
out
mov
mov
mov
xor
lahf
lret
data16
insl
add
ja
std
stos
sahf
movsb
inc
mov
imul
fsubp
sbb
in
test
nop
xchg
adc
adc
repnz
push
sub
fisubl
outsb
sbb
loopne
xor
sub
xor
pop
ficompl
sbb
lods
add
and
jno
jo
sarb
lcall
pop
adc
in
mov
jno
and
shl
or
aas
sub
test
loopne
daa
jnp
push
or
test
mov
jecxz
nop
adc
mov
pushf
inc
sub
out
or
xchg
enter
shrb
mov
hlt
cmc
mov
sub
std
in
xchg
mov
or
and
adcb
popa
out
dec
dec
rcrl
mov
jns
insb
shlb
das
in
sbb
inc
fwait
jbe
in
xorl
jbe
lock
rolb
xor
push
lret
test
dec
cltd
sub
xchg
and
sub
mov
push
hlt
cmpsl
xchg
dec
in
or
sbb
in
jno
insl
or
cmp
jo
fnsave
lret
aad
jle
std
lret
sti
push
sub
fsubrs
mov
lahf
adc
jo
test
push
inc
fmuls
mov
faddl
fidivl
hlt
incl
test
pop
js
inc
sbb
clc
lods
fs
fstpl
mov
cld
ss
or
std
mov
jae
das
movsl
loope
mov
repz
xchg
mov
pop
int
mov
xor
out
jae
mov
shlb
enter
jmp
mov
negb
repz
sti
aad
and
sub
inc
and
jg
adc
xchg
lret
dec
mov
adc
jmp
jmp
lods
insb
and
xchg
push
lea
xchg
addl
lcall
pop
mov
xlat
sbb
push
jbe
test
mov
lea
es
loop
mov
sti
gs
std
add
call
sbb
nop
inc
and
movsl
rolb
cmpsl
push
sbb
xchg
dec
jae
data16
repz
in
and
cmp
mov
test
mov
push
cmp
jno
fsubs
leave
push
in
cli
jmp
pop
mov
fidivs
xchg
sub
imul
mov
cmp
mov
add
pushl
adc
pusha
dec
mov
jne
cmp
sahf
dec
jo
mov
sub
das
ficomps
jp
mov
mov
roll
outsb
cwtl
fisubrl
test
xchg
jb
loope
rolb
mov
lods
inc
inc
imul
dec
xchg
adcl
inc
cs
jo
insb
mov
and
inc
sar
pop
push
mov
inc
sub
and
leave
sbb
jmp
adc
into
insl
mov
shll
mov
add
lret
lret
cltd
scas
jmp
lods
imul
sub
pushf
lret
fnstcw
in
sarb
nop
aad
int3
in
jp
aam
dec
cmp
mov
xor
pop
and
in
adc
mov
mov
inc
xor
nop
addr16
adc
add
jno
lret
xchg
dec
xor
mov
in
jl
xor
adc
dec
addps
mov
adc
ljmp
mov
jae
cltd
mov
or
jno
mov
in
shrb
adc
lds
adc
adc
sub
mov
cmc
fisttpll
cmp
or
xchg
cmpb
movsb
cmp
adc
mov
or
pop
out
into
rclb
inc
mov
lcall
xchg
jo
movsl
jno
loop
jno
int
cmp
mov
addl
cld
aaa
cmpsl
test
xchg
or
push
popf
imul
in
mov
fwait
call
jp
out
nop
fisttpl
xor
rorb
pop
mov
dec
loop
add
stos
add
jle
test
shr
dec
rcrb
push
pop
std
pusha
fs
lret
jbe
mov
pop
inc
ficoml
int
out
adc
inc
push
cmp
filds
ljmp
out
fnstenv
in
sbb
cmc
sub
push
add
ret
push
je
mov
sahf
cltd
enter
call
push
ljmp
cld
testb
je
idivl
sti
dec
iret
data16
add
test
ljmp
mul
and
mov
call
mov
fdivr
je
stos
adc
jl
pop
stos
js
test
push
int
stos
xchg
aam
shrl
cmc
xor
mov
in
or
mov
fwait
jbe
fisubs
or
mov
lret
bound
ss
mov
aas
xchg
lods
fcomi
js
test
shrb
das
cmpsb
mov
gs
mov
mov
cmpsb
mov
sub
mov
adc
mul
and
add
fwait
cmc
sbb
xor
loop
call
add
jl
xor
fstpt
or
cmp
ret
mov
repnz
cmp
jno
mov
daa
daa
aam
cmpsb
add
mov
lock
leave
inc
add
jmp
loop
add
bound
cld
mov
mov
enter
add
mov
cld
mov
mov
add
dec
addb
mov
mov
lcall
out
pop
dec
test
lret
test
inc
inc
imull
stos
rcrl
pop
stos
std
xchg
movsl
in
sbb
jecxz
mov
leave
out
mov
add
rclb
shr
xor
mov
into
xor
jb
aaa
movl
or
movsl
or
lods
mov
fistpll
inc
sbb
xchg
jbe
je
jnp
stc
mov
in
push
movsb
cmp
je
dec
loopne
mov
mov
or
popa
push
in
xchg
mov
in
mov
rcl
jmp
or
ror
cmp
repz
dec
icebp
pop
dec
mov
xchg
mov
inc
std
add
mov
mov
inc
dec
pop
mov
shrb
pushf
sbb
jbe
cmp
adc
outsb
aam
popf
ficoml
cmp
call
xor
jnp
cmpsb
mov
mov
sahf
xor
pop
ret
xor
aaa
aas
adc
mov
adc
cmp
mov
sbb
push
push
pop
cs
jg
sarb
xlat
sbb
fsubs
and
sub
cmp
and
ficoml
push
call
shll
leave
mov
or
movsl
mov
out
pop
js
xor
lcall
shrl
jl
fs
lods
inc
icebp
xchg
jmp
add
nop
daa
push
and
icebp
mov
pop
mov
adc
test
cmp
out
pop
mov
enter
mov
les
fwait
mov
or
sub
arpl
fs
adcl
push
mov
sub
and
imul
xchg
jmp
test
mov
xor
jnp
add
mov
xchg
sub
ss
subb
pop
mov
mov
std
loope
jl
sbb
das
adc
imul
pop
cmpsl
in
and
inc
std
push
inc
dec
in
jp
fwait
mov
cmpsb
data16
jo
stos
cmp
sub
int3
lea
fcmovnbe
js
add
mov
jne
int
outsb
aad
mov
data16
test
lds
jmp
pop
mov
lock
sbb
shrb
out
cli
and
movsb
icebp
das
cli
stos
xchg
sub
shl
loope
shlb
add
outsb
jae
mov
cmpsb
xchg
pop
push
enter
aaa
in
cmpsl
aas
pop
repnz
popa
pop
repz
or
rcl
dec
loope
pop
lea
outsb
fwait
xor
mov
pop
icebp
jl
test
inc
popf
js
into
pop
push
pop
mov
dec
mov
xor
aad
mov
call
xchg
sub
sbb
mov
mov
ss
daa
or
sbb
aad
cmp
xor
scas
mov
dec
loope
stc
push
mov
int3
aad
fmul
call
loope
test
pop
jmp
mov
aad
pop
fwait
cld
sub
pop
dec
outsl
xchg
dec
sbb
xchg
pop
test
mov
pop
or
inc
inc
sbb
mov
in
shrl
test
sbb
pushf
mov
sbb
xchg
gs
dec
jbe
mov
jb
sub
push
cs
xrelease
pop
mov
cltd
pusha
cmpsl
and
mov
popa
jnp
xor
inc
xchg
adc
mov
out
lahf
nop
adc
out
xchg
or
sub
and
or
dec
jl
arpl
jg
jg
loopne
loope
cli
add
test
shrb
jl
sub
inc
jmp
pop
push
lcall
mov
or
shlb
hlt
mov
cmp
pop
mov
loopne
xchg
cmpsb
test
mov
iret
popa
clc
leave
iret
je
fucomp
and
enter
and
das
mov
loopne
enter
pop
cmc
cs
out
inc
adc
xchg
pop
or
nop
jle
lock
sbbl
fmuls
adc
scas
jmp
or
mov
lods
adc
in
enter
mov
scas
inc
mov
es
outsb
pop
hlt
cmp
cld
xchg
add
lds
insl
add
jl
mov
pop
gs
inc
inc
jg
pop
data16
xor
xchg
mov
outsb
add
mov
pop
in
pop
js
dec
out
icebp
push
mov
div
mov
mov
and
cs
mov
je
push
lock
fsubrl
dec
jecxz
mov
out
and
push
mov
inc
add
fldcw
fidivs
inc
adc
or
ret
addb
jns
push
mov
pop
dec
and
fstpt
test
fs
aam
mov
cmpsb
mov
sub
inc
sti
pop
repnz
sbb
imul
sub
or
int3
arpl
pusha
out
test
mov
mov
xchg
add
out
xchg
push
dec
loopne
push
push
movsl
aaa
test
sub
mov
test
dec
mov
ljmp
mov
xchg
pop
pop
movsb
cmp
jae
pop
mov
push
fldl
scas
fs
pop
rolb
insb
adc
fwait
loope
pop
mov
sti
filds
mov
in
ljmp
or
pop
out
fs
dec
sbb
jbe
ja
int
aam
ret
xor
mov
mov
sub
xor
sub
stos
inc
mov
add
fdivrs
jmp
fstpt
adc
sbb
imul
pop
push
notl
repz
sbb
or
mov
stos
popa
fcoml
xchg
cmp
nop
mov
xor
pushf
popa
faddl
dec
mov
sbb
pusha
enter
dec
jmp
lret
loopne
xor
mov
imul
mov
mov
xchg
pop
pusha
sbbl
push
mov
rcr
scas
add
xchg
add
jno
lods
mov
ja
inc
push
aaa
into
inc
data16
sub
popf
and
into
mov
mov
shrb
sbb
repnz
mov
cmpsl
cmp
mov
xor
mov
jbe
lea
notl
pop
out
mov
mov
test
dec
or
and
sub
mov
sub
pop
cmpsl
pop
aas
push
int3
adc
js
shrl
and
or
lods
mov
inc
xchg
sub
in
add
cmp
decb
and
push
push
addr16
and
push
mov
imul
xlat
imul
dec
call
add
ret
icebp
insb
jmp
aaa
in
xor
test
or
aas
mov
mov
inc
in
sub
insl
sti
pop
insb
stc
fwait
sbb
and
or
popa
dec
sbb
shll
outsb
jns
fsubrs
lret
lahf
lcall
sub
daa
fucomi
dec
int3
lahf
pand
inc
mov
jne
jl
push
push
imul
pop
mov
jmp
pop
mov
jmp
inc
mov
xchg
nop
dec
icebp
movsl
in
add
cli
lahf
dec
leavew
call
les
lahf
jo
mov
aam
sub
in
mul
sub
dec
cmpsb
lock
ret
or
xchg
and
in
test
shld
shll
ss
xor
push
les
xor
test
roll
xchg
ds
sti
je
dec
loope
xchg
add
cld
push
cs
dec
pushf
mov
test
inc
adc
clc
nop
mov
cli
jle
sti
push
jle
push
pop
in
cmp
cmp
cli
xchg
cmp
imul
pushf
hlt
testl
dec
xor
setae
idiv
cwtl
pushf
out
dec
mov
push
xchg
mov
xor
add
push
or
dec
dec
push
hlt
xchg
jge
pop
sub
fists
mov
inc
jg
jae
sub
xchg
mov
push
popf
stos
mov
gs
aas
int
testb
pop
mov
dec
push
mov
mov
sub
sbb
popf
dec
jecxz
adc
pop
inc
add
ljmp
loope
jns
dec
jnp
subb
cltd
imul
cli
push
jp
add
mov
mov
jge
xor
cmpsl
inc
dec
xor
and
dec
xor
jbe
mov
mov
sub
adc
sub
mov
pop
out
mov
lahf
sub
cs
aam
aam
xchg
mov
inc
mov
movsl
or
pop
pop
adc
aam
xor
ds
inc
les
and
test
ja
dec
insl
inc
stc
sahf
and
call
loope
inc
mov
js
push
mov
pop
repnz
mov
mov
jge
xchg
mov
std
xchg
orps
push
enter
sahf
sbb
add
aas
xor
out
jmp
adc
push
je
aas
loop
cltd
rolb
dec
ret
ja
ret
shlb
fsubrs
rorb
int3
shr
js
pushf
xor
inc
mov
mov
outsl
push
push
jno
mov
dec
in
mov
pop
or
dec
pushf
adc
pop
pop
push
in
js
incb
aaa
dec
ljmp
pop
adc
pop
inc
cwtl
xor
ret
insl
jecxz
jo
nop
cmp
sarb
fistpl
fistpll
or
out
dec
cmp
imulb
test
insb
outsb
shrl
mov
sub
movsl
cmp
sbb
inc
cli
xchg
pop
movsb
cmp
sub
jb
adc
js
sahf
icebp
addl
mov
mov
out
adc
push
inc
jns
sbb
lods
mov
or
scas
call
loope
sahf
call
mov
fs
mov
insb
imul
ds
push
out
dec
jo
hlt
push
mov
dec
mov
jmp
shrl
jg
dec
sub
test
sbb
mov
insl
mov
jg
add
dec
rclb
dec
xchg
add
iret
push
mov
test
rorb
jmp
lods
sbb
cmp
adc
jae
aas
mov
xor
inc
fisubl
add
mov
imul
pushf
lds
inc
rol
jp
pop
mov
iret
pop
dec
add
iret
mov
pop
cs
in
es
cwtl
mov
scas
aad
jbe
stc
add
xchg
push
xchg
movl
movsl
cli
push
in
imul
ja
xor
sbb
or
cmp
adc
xchg
add
inc
and
xchg
sahf
ja
and
dec
mov
stos
daa
pop
daa
mov
fwait
imul
int3
lret
ret
push
mov
and
xchg
aam
inc
xchg
stc
ret
push
cwtl
cs
cs
ja
push
jae
dec
loope
push
xchg
add
lret
ljmp
jecxz
push
aad
xchg
pop
jno
and
in
les
xchg
enter
popf
stos
popa
dec
ds
lret
sbb
sbb
sub
sbb
mov
repnz
sub
dec
dec
inc
jge
out
cld
lods
mov
cmp
fisttpll
aam
adc
jae
cmpsb
mov
pushf
fiaddl
fiaddl
pop
call
inc
stc
pop
mov
inc
jmp
push
sub
pop
popf
loope
in
imul
and
repz
mov
add
dec
sti
push
mov
loope
int3
adc
sbb
or
pusha
ret
sub
gs
std
sub
mov
dec
enter
rclb
leave
pop
into
call
out
das
cmp
cmp
pop
rolb
les
cwtl
fwait
popf
dec
loop
int
sbb
push
int
stc
arpl
cwtl
xor
mov
or
jl
adc
fnsave
jecxz
xor
ds
xchg
xor
push
stos
ficoml
in
hlt
shrl
dec
mov
nop
out
aam
pop
pop
mov
mov
jns
test
adc
adc
int3
imul
subb
mov
enter
pusha
fs
xchg
push
cltd
and
out
gs
jp
push
shlb
lahf
sub
int3
cmpsb
push
fst
in
lahf
and
jecxz
jle
fs
sbb
std
xchg
and
mov
jnp
sub
pop
xchg
push
pop
out
xchg
mov
lock
cli
sbb
les
lds
xsha256
cmpsb
push
out
mov
stos
in
inc
pushf
xchg
int3
sahf
mov
jge
push
sbb
mov
lds
sbb
int
pop
int
mov
int3
pushf
fwait
mov
test
fiadds
xor
sbb
add
sub
lock
and
sbb
mov
dec
fwait
xor
mov
mov
std
lahf
add
xor
imul
add
adc
add
sub
ss
push
jg
nop
cmp
dec
add
fidivl
sub
or
or
cmp
inc
out
lahf
add
xchg
xchg
icebp
and
or
out
jmp
sub
dec
mov
pop
aaa
jg
add
inc
shlb
sbb
aas
enter
sbb
jns
dec
outsb
sub
mov
mov
xor
fcomp
clc
xchg
filds
add
bound
xor
push
mov
mov
cmpsb
std
das
movsb
aas
pushf
xchg
shl
shr
cmp
sbb
xchg
push
insb
mov
mov
and
jns
xor
pop
data16
sbb
loopne
mov
sahf
gs
ret
aad
sbb
scas
rcl
insb
sub
mov
and
or
sbb
pop
adc
adc
cmp
invd
rcll
sbb
aad
xlat
mov
add
cmpsl
mov
xchg
jns
cwtl
clc
fbstp
movsl
add
add
xor
and
and
or
xchg
mov
mov
mov
dec
add
sahf
jb
cmp
adc
push
xor
lret
dec
mov
test
and
push
cs
fcoms
jp
adc
pop
ds
mov
xchg
cmpsl
push
cmp
adc
test
ljmp
and
xor
ss
pop
cmp
push
mov
push
in
pop
idiv
shrb
xchg
xchg
aas
popa
pop
enter
pop
mov
inc
inc
popf
lods
or
xchg
xor
mov
pop
jbe
bound
jmp
mov
sbb
cwtl
fs
pop
jo
rol
and
add
mov
int
push
push
popa
out
cmp
pop
jae
and
mov
sub
mov
imul
test
lahf
xchg
mov
sub
sbb
mov
push
movsb
cmp
leave
push
cmp
fsubp
outsb
or
leave
and
jmp
lcall
mulb
in
push
xor
ss
sub
ret
out
cld
mov
xor
inc
jge
dec
enter
aaa
and
lds
int
mov
aaa
lret
adc
jl
cmpb
fsubrs
test
das
push
jg
jae
cltd
and
xchg
cmp
add
data16
js
hlt
jae
test
in
inc
in
inc
sbb
enter
sahf
jno
sahf
push
cmpb
sbb
jo
mov
inc
xchg
jl
loope
push
fisubrl
lods
push
test
jle
jp
jns
adc
and
test
and
mov
xor
sbb
xchg
inc
rcrb
clc
jle
js
lock
pop
popa
sti
fsubl
fistps
xchg
adc
gs
in
bnd
inc
cmp
in
sbb
pop
punpcklbw
mov
rorl
out
scas
inc
pop
stos
ljmp
bswap
ljmp
mov
pop
dec
mov
in
sub
inc
push
popl
jno
mov
in
clc
push
mov
popf
out
addr16
cltd
inc
in
or
xchg
inc
dec
pop
mov
mov
lods
mov
int3
ja
shll
hlt
ss
inc
aam
jnp
gs
mov
scas
lea
imul
and
mov
pop
fwait
test
scas
mov
and
push
cmpsl
push
mov
in
subl
cmc
in
sbb
bound
and
cmp
je
cli
xor
shll
jno
jno
pop
sub
icebp
cmp
and
out
jp
jb
mov
cmpsb
add
jg
dec
xchg
in
test
xor
add
inc
stc
into
cld
pop
mov
pop
mov
loop
aad
push
nop
punpckhbw
and
add
cltd
cmc
lret
xlat
les
push
pop
mov
xchg
pop
mov
pop
ret
adc
hlt
cld
and
leave
rcll
and
js
push
lods
int3
cmp
jmp
fcmovu
dec
cmp
pop
repz
iret
fisttpl
sub
mov
inc
fsubrs
or
rclb
sub
mov
jle
mov
or
jbe
sub
out
pop
insl
add
xchg
dec
jno
mov
pusha
arpl
cld
push
add
hlt
or
or
mov
push
imul
mov
fimull
out
xorb
or
test
sar
addl
cmpsb
loope
popa
or
xchg
fsubl
mov
pop
xor
rcrl
ds
std
push
pop
mov
add
pop
push
or
pop
int3
ficoml
jge
xchg
arpl
icebp
mov
cld
ja
ret
sub
and
jno
xor
mov
dec
js
movsb
test
mov
xchg
mov
xlat
aas
insl
or
push
lods
inc
sub
push
rep
lods
xchg
fists
cmpsl
sbb
cltd
xchg
jo
cltd
pop
sub
ret
adc
xor
cmp
aaa
cmp
shl
add
enter
ret
jae
and
add
pop
stos
cwtl
xor
repz
and
xor
mov
dec
add
pop
adc
stc
or
lcall
and
xor
xchg
sahf
or
inc
ds
mov
pop
stos
lods
push
xlat
mov
mov
inc
lods
aaa
sahf
cmc
arpl
js
andl
dec
lret
shrl
cmp
inc
repnz
and
push
loopne
jae
xchg
lret
mov
je
out
push
push
or
dec
fxch
push
dec
ljmp
pop
mov
fidivs
xchg
int
and
mov
daa
and
fmull
dec
jle
adc
jmp
jo
sarb
lea
mov
jno
aas
jns
lods
jp
fwait
push
popf
int3
jo
loopne
out
imul
dec
rcrw
aad
lods
mov
xor
dec
stos
lds
les
sahf
repnz
fsubl
sbb
dec
dec
mov
jp
loope
rcrb
or
sub
sub
dec
pop
push
insl
adcb
ja
shlb
xor
ret
fistpl
sbb
addr16
mov
or
out
sub
out
mov
int
mov
lods
fisttpl
cwtl
stc
push
mov
ret
sbb
xor
sbb
mov
cmp
xchg
sti
stos
mov
outsb
iret
mov
jp
ret
les
or
pushf
dec
mov
dec
loopne
mov
mov
mov
mov
leave
int
adc
sub
inc
scas
and
sub
and
jb
je
mov
stc
out
movsb
adc
data16
pop
in
xchg
fwait
adc
lcall
popa
jl
scas
int3
arpl
jmp
and
pop
pusha
enter
mov
mov
in
aam
movsb
jno
ja
ja
push
mov
shrl
dec
push
fildll
xor
dec
rolb
pop
jo
mov
popf
rolb
in
mov
and
or
call
pop
lds
repnz
and
mov
xchg
pop
mov
dec
mov
adc
sub
xorb
repnz
out
sti
push
pop
jp
cmpsb
fnstsw
xchg
call
sti
sbb
rorb
xor
adc
xchg
push
push
sahf
jns
enter
std
sub
or
xchg
sub
push
lods
mov
fisttpll
scas
jp
jmp
or
mov
xchg
sub
or
cld
jge
mov
sub
inc
lods
push
dec
cld
or
pmaddwd
lret
or
rolb
cmp
xor
leave
cmp
rorb
and
jge
repnz
and
fdivs
ss
cmc
jp
ds
mov
movb
jnp
cmpb
inc
jp
gs
rcll
xor
and
mov
inc
mov
adc
dec
pop
push
add
or
lcall
fstpl
add
jmp
test
repnz
lcall
sbb
cltd
orl
jmp
movsb
repnz
dec
push
or
xchg
adc
in
xor
and
fdivs
arpl
add
mov
sbb
push
or
and
xchg
je
inc
popf
sbb
add
daa
jo
push
sbb
in
dec
es
xchg
loop
stos
adc
sub
xchg
fcmovne
pop
push
xor
dec
ss
lahf
xchg
xchg
add
mov
jg
cmp
and
das
jl
inc
mov
lods
clc
decb
sarl
ficompl
lret
cmp
xor
out
jg
xlat
pop
int
mov
sub
mov
add
jne
dec
jno
or
xor
push
test
dec
xchg
arpl
stc
jecxz
pop
popa
xor
in
and
cmp
pcmpeqb
dec
push
or
mov
outsb
xor
out
mov
xchg
inc
lret
insl
mov
cmpsb
xor
mov
mov
ret
sbb
test
xorl
aad
mov
popa
icebp
inc
aam
in
test
cmp
arpl
push
data16
iret
out
mov
mov
fsubrl
sahf
leave
test
inc
jae
push
and
int
stc
push
out
xchg
pop
clc
dec
into
cs
mov
mov
jns
test
xor
insl
add
iret
fcompl
sub
test
jnp
clc
jmp
aad
rorb
jns
ds
pop
clc
push
subl
lahf
outsb
jp
mov
mov
xor
stos
lahf
push
push
in
mov
mov
dec
aad
xchg
and
xchg
ss
std
dec
jecxz
jnp
data16
fwait
cmpsl
divl
sti
jbe
lret
ror
imul
je
lock
fwait
popa
jmp
mov
jl
mov
adc
loope
or
or
or
cmpb
adc
cmp
js
inc
pop
mov
sahf
sub
mov
fistpl
cwtl
lahf
mov
sarb
pop
adc
adc
test
sbb
push
fldlg2
jns
imul
pop
mov
dec
repnz
sbb
fnsave
jae
lock
or
sub
fnstsw
mov
fstl
mov
add
add
mov
bound
inc
inc
daa
sub
mov
dec
adc
push
sbb
ficoms
sahf
xor
jbe
inc
cld
cmp
inc
cltd
cwtl
jge
push
dec
cmp
into
mov
sbb
or
sub
fisubs
mov
cmp
xor
sqrtps
dec
xchg
xchg
inc
test
in
fs
pop
jbe
cmp
and
gs
pop
rcrl
push
mov
pop
xchg
xchg
fimuls
dec
repz
dec
pop
dec
pop
nop
push
mov
push
push
movsb
xchg
inc
out
mov
in
push
popf
sbb
or
xlat
and
cmp
pop
insb
mov
lock
repz
mov
add
cld
cmpsl
or
insb
cld
insl
stos
stc
ss
mov
cmp
lcall
neg
mov
push
ds
adc
lret
cmp
add
pop
lahf
or
xor
inc
pusha
outsb
jg
mov
into
xor
fcoms
hlt
mov
data16
cmpsl
xchg
imul
push
leave
push
mov
daa
fnsave
les
xor
add
iret
mov
pop
out
xchg
mov
adc
aaa
pop
imul
pop
sbbb
inc
mov
inc
push
inc
cli
lret
sbb
ret
lds
push
sub
ret
fnstsw
xchg
push
aam
cli
aam
and
sbb
jne
lret
into
add
mov
dec
pop
jge
jecxz
sub
lret
fnstsw
inc
xor
and
xchg
imul
mov
push
shll
notl
pushf
sbb
mov
jl
cmpsl
insl
add
and
add
dec
dec
adc
add
push
test
jns
sti
gs
push
push
jg
push
scas
es
xchg
fmulp
ret
jbe
imul
loop
rolb
test
imul
sahf
lods
test
sbb
sub
lahf
mov
andb
shlb
lods
addr16
cli
and
rcll
daa
ja
test
mov
cmp
pusha
add
pop
push
sahf
stos
inc
cmpsl
je
bound
xchg
ret
inc
mov
sub
int
inc
xor
xlat
jge
xchg
enter
adc
mov
stos
adc
push
inc
repz
adc
pop
imul
les
cltd
sbb
outsl
pusha
xchg
mov
pop
mov
loopne
mov
pop
and
push
pop
pop
add
fwait
std
push
ljmp
jno
adc
xchg
fldl
stos
into
mov
hlt
jge
pusha
inc
xlat
push
fwait
stc
and
iret
imul
mov
icebp
int
mov
fadd
cli
adc
adc
dec
add
sub
cmc
inc
enter
mov
add
das
pop
jae
or
inc
push
pop
das
adc
mov
cltd
sub
dec
mov
cltd
fistps
pushf
xlat
or
ljmp
pop
xor
mov
in
imul
enter
mov
out
mov
push
cwtl
sub
dec
in
cmpsb
sub
pop
cs
rcrl
inc
out
mov
mov
sbb
xor
and
mov
push
decb
inc
mov
mov
jecxz
cmp
or
std
push
insl
add
mov
imul
and
repnz
popf
mov
or
aas
mov
push
mov
inc
leave
pusha
or
mov
adc
inc
inc
out
mov
sub
mov
push
mov
fists
cld
dec
std
fsubl
aad
or
dec
mov
test
push
add
int
das
jmp
insl
stos
cld
jb
sub
adc
jo
xchg
xchg
or
cmpsl
sbbb
push
mov
movsl
mov
sbb
pop
sbbb
in
sbb
adc
pop
lods
xor
mov
xchg
bound
insb
xor
add
xchg
mov
adc
sahf
sub
movb
int3
fsubrs
mov
out
and
xchg
mov
pushf
shr
mov
fistpl
sub
stos
inc
xlat
push
cmpsl
mov
aam
in
fwait
pusha
and
adc
xchg
insb
test
push
pop
lea
jle
loopne
inc
inc
dec
loope
cmpsl
pop
jbe
sub
rcrb
and
pop
lret
fisttpl
push
imul
jmp
lods
pop
rep
jno
lahf
sub
adc
negb
in
xchg
mov
dec
fdivl
and
mov
dec
gs
add
or
push
lods
out
loope
mov
adc
cmp
lods
sbb
aas
mov
jbe
push
outsl
push
dec
sbb
shl
lea
sub
xchg
fwait
call
dec
in
jnp
mov
sbb
adc
ficomps
cmp
xchg
pop
stos
xor
imul
mov
jb
outsb
fnstsw
jg
stos
pop
push
pushf
xchg
ljmp
jecxz
adc
pop
dec
pop
stos
sub
cmp
sub
hlt
xor
mov
icebp
xchg
int
push
push
inc
push
cld
fsubr
rcrl
test
sbb
psubq
add
push
rorl
decb
into
add
int3
sbb
movb
pushf
jo
divl
push
or
pop
lods
inc
mov
insl
mov
fwait
push
aaa
push
mov
gs
fwait
popa
add
xlat
cmc
adc
aam
iret
dec
pop
sbb
jnp
fcoml
jmp
jmp
jmp
xorb
lods
addr16
sarl
dec
cmpsb
mov
frstor
push
lods
pushf
call
popf
mov
push
outsl
fisubrl
stos
pop
sahf
pop
decb
jmp
enter
mov
arpl
scas
jp
lds
adc
sub
out
mov
lea
mov
stc
test
xlat
pop
cmc
or
arpl
add
jl
xor
nop
popf
pop
add
fnsave
cli
sbb
and
pop
xor
movsb
mov
insl
filds
add
mov
lea
sbb
outsl
lea
and
int
ljmp
fwait
adc
pushf
mov
or
lret
xchg
jb
lods
es
mov
scas
pop
push
jl
andl
xchg
jle
mov
push
and
and
scas
addr16
jmp
leave
add
mov
leave
mov
jne
vpsrlvd
sub
aam
or
mov
test
cmp
xchg
data16
mov
cmpsl
shlb
pop
je
xor
dec
data16
ljmp
sub
push
push
lret
cld
xor
push
aas
add
popa
fcomi
lahf
out
adc
rcll
mov
lds
and
dec
cmpl
xor
dec
cmp
push
and
push
add
shlb
jno
pusha
aaa
in
push
or
cmpsb
xchg
insl
pop
hlt
bound
int3
adc
popf
push
pop
xchg
dec
pushf
push
dec
dec
enter
and
pop
push
jne
dec
test
in
cmpsb
adc
and
movsb
decb
in
lds
js
inc
cli
xchg
dec
dec
or
sbb
repnz
imul
cmpsl
xorb
sub
cmp
add
fs
mov
pop
mov
ja
sti
sub
data16
cmp
or
inc
setbe
aaa
adc
jecxz
pushf
pop
lcall
jae
lahf
mov
ljmp
addb
fs
jns
and
je
sbb
cld
leave
cwtl
sarl
push
pusha
xorb
andl
dec
jp
push
jbe
cmpsb
aaa
push
loop
mov
jle
cmpsb
cmp
add
lock
ja
mov
ret
insl
xor
enter
jno
ss
icebp
xchg
ret
pushf
sub
sbb
addr16
pushf
ljmp
mov
sti
jnp
cmp
roll
insl
js
xor
inc
xorl
xchg
aas
adc
scas
nop
lcall
cmp
sub
jnp
xchg
push
or
push
loop
ret
cmpsl
mov
mov
fimull
push
fs
test
mov
xchg
mov
in
push
sbb
add
dec
cmc
or
adc
lret
xchg
sbb
inc
push
add
mov
xchg
pop
stc
sbb
mov
test
jecxz
sub
jg
scas
sub
loopne
pop
jb
in
daa
and
adc
mov
mov
cmpsl
ds
call
test
sbb
in
insb
scas
push
popf
adc
mov
and
push
pop
ja
sub
and
das
xchg
jo
xorb
mov
mov
and
pop
aaa
push
cmpsl
test
cmp
dec
sub
outsb
daa
mov
or
jmp
jb
pushf
sub
mov
adc
es
push
sbb
fnstsw
scas
cli
jp
xor
push
lods
mov
mov
test
sbb
sarl
popa
data16
fsubr
cli
stc
mov
aas
pop
lods
wrmsr
inc
inc
data16
xchg
mov
das
cmpsl
cmpsl
jo
add
shlb
dec
cld
jge
fnsave
and
push
ss
arpl
add
sbb
push
popa
or
fcmovnb
test
fisubs
mov
pop
insl
xlat
lods
iret
push
test
mov
adc
data16
xchg
iret
push
aas
cmc
sbb
das
sti
adc
xchg
inc
push
push
jne
sub
sbb
out
push
inc
into
hlt
push
add
xchg
cmpsl
movsl
mov
push
mov
test
cltd
mov
pop
dec
xor
mov
and
push
aas
add
cmp
lret
insb
fsts
cmp
imulb
movsl
dec
iret
fcomi
jo
movsl
cwtl
xchg
pop
rorb
jne
xchg
inc
mov
mov
push
daa
mov
arpl
insl
rcr
jno
push
lds
fists
mov
addb
scas
std
imul
or
mov
xor
movsb
call
in
imul
test
push
mov
icebp
and
mov
xlat
cmp
pop
leave
int
lret
mov
and
mov
mov
push
leave
mov
jl
inc
shr
lds
fisttpl
mov
cwtl
div
adc
sbb
xor
sbb
xchg
xchg
jns
das
repz
mov
hlt
jne
add
or
or
xchg
pop
add
cmp
rcrb
push
outsb
bound
jne
shlb
sahf
in
mov
push
push
sub
fnsave
add
add
push
lcall
push
xchg
xchg
lret
je
sbb
mov
lret
add
jno
inc
icebp
xchg
mov
dec
cwtl
push
cmp
jno
sub
jl
adc
xchg
fisubrl
call
inc
cld
or
push
lcall
sub
cmp
inc
scas
fisubl
dec
in
mov
insb
scas
das
lret
mov
adc
lahf
sub
jns
stos
call
movsl
dec
mov
repnz
mov
pushf
popa
mov
mov
push
ja
mov
daa
cmp
mov
adc
mov
mov
jae
out
mov
icebp
sbb
dec
push
enter
popf
pop
popf
inc
cmpsb
mov
test
and
lods
jo
xchg
push
cltd
sahf
sub
ds
inc
fs
mov
add
aaa
mov
in
mov
fsubrp
add
cld
in
jp
sub
adcb
jno
fwait
jbe
jmp
jno
mov
inc
aas
mov
jbe
mov
rcrl
ljmp
lods
pushf
push
mov
push
xchg
pop
negb
cmpsb
sub
ret
pushf
bound
jecxz
mov
repz
je
sbb
scas
xchg
scas
popl
imul
mov
xchg
sbb
sbb
push
je
mov
test
stos
cmp
sub
mov
cwtl
sbb
mov
shlb
mov
clc
call
daa
aas
jno
jl
xchg
sub
daa
scas
and
rorb
sbb
push
insl
stos
push
in
movsl
lcall
int3
or
daa
lcall
cmp
dec
sbb
loop
adc
jno
repz
test
dec
cld
xor
push
inc
dec
mov
lock
and
sub
imul
xchg
mov
mov
add
push
xchg
xchg
or
fwait
jge
fdivrs
in
xchg
int3
xor
and
popa
lods
test
bound
push
outsl
mov
filds
adc
xor
xchg
fcoml
xchg
clc
xchg
xchg
push
cmc
sbb
xor
sarl
sarl
mov
cmp
rcrb
ret
les
pop
mov
mov
jge
stos
xchg
and
and
rcrl
aaa
aam
inc
stos
out
adc
pop
adc
syscall
and
into
mov
sub
inc
stc
shl
stos
mov
pop
push
sub
dec
dec
insb
fildll
into
enter
push
push
xchg
inc
fcmovb
mov
in
enter
mov
pop
dec
pusha
shrl
ljmp
shr
divl
mov
add
add
int
mulb
ret
je
daa
push
outsl
jno
dec
cld
ret
fildl
adc
sti
imul
gs
adc
add
or
insb
mov
xor
call
insl
test
push
sub
mov
inc
jnp
stc
out
cwtl
mov
jg
aad
cmp
movsb
adc
mov
loop
mov
out
aam
dec
fsts
ret
pop
out
imulb
pushl
mov
jb
mov
add
les
fidivrl
iret
or
inc
inc
or
push
pop
mov
frstor
in
pop
icebp
push
scas
jle
fbstp
testb
je
xchg
and
nop
and
leave
in
sbb
outsl
fists
mov
testb
add
xor
adc
rolb
jle
dec
mov
push
call
pop
pop
xchg
int
mov
jecxz
cs
inc
loopne
andl
or
mov
xorl
pushf
popa
jns
int
sub
mov
xlat
jmp
cs
jl
sub
mov
mov
imul
jle
data16
inc
push
xor
adc
mov
mov
out
pop
clc
push
jae
subl
push
sti
xchg
clc
cmc
int3
lods
adc
push
int3
scas
aas
or
mul
push
xchg
mov
je
in
xor
lods
cmp
mov
les
sub
leave
mov
and
xor
repz
loopne
mov
fsubs
in
dec
and
pop
xchg
push
adc
stos
mov
inc
push
in
in
gs
gs
inc
push
popa
cmc
test
xor
pop
int
sub
dec
gs
out
sahf
ret
ds
push
mov
out
insb
xor
stos
mov
das
lcall
push
insl
mov
xor
pusha
loopne
rcl
adc
mov
add
and
add
loop
xor
sub
cmp
daa
push
outsl
pop
mov
insb
mov
push
in
xchg
inc
pop
and
test
cmp
mov
push
filds
mov
push
add
lahf
inc
sub
leave
pop
sub
sbb
nop
inc
fiaddl
sbb
dec
mov
sub
cs
test
je
lds
pushf
jmp
cmpsl
pushf
or
lods
inc
mov
gs
pop
xchg
in
push
shlb
leave
stc
std
fs
inc
test
sti
jle
dec
sub
iret
push
rcrl
pop
pusha
jbe
mov
or
loop
cwtl
mov
pusha
sub
sub
push
sub
popa
dec
sub
jg
insb
das
call
stos
out
cmpsl
pop
fwait
mov
stc
sbb
jno
ss
roll
add
cmp
movsl
gs
mov
in
cmpsl
ret
push
rorl
pop
pushl
cs
nop
daa
loop
cmpsb
and
pop
imul
not
es
pop
shl
mov
pushf
cmp
fsubs
and
shr
xor
jmp
rcl
mov
pop
lock
loop
seto
orl
shrb
jg
or
inc
fidivrl
pop
sahf
pop
sbb
push
dec
cmp
push
add
mov
out
mov
push
cltd
cmp
cmp
call
lods
and
adc
fistpl
jo
leave
dec
cmp
sub
insb
icebp
lahf
out
and
jbe
mov
sbb
push
movsl
xor
insb
cli
jle
mov
or
xor
imul
popf
inc
cmp
mov
mov
cwtl
cwtl
incb
xchg
test
xor
pop
faddl
outsb
sub
fadds
sti
aam
sarb
push
mov
adc
bnd
shrl
mov
xchg
push
push
je
mov
mov
push
fcomip
mov
movsb
inc
fwait
sbb
fistps
int3
in
daa
lds
pop
pop
jns
jge
inc
cmp
rolb
jecxz
pop
fdivs
inc
push
add
jns
dec
ds
gs
insb
cmp
mov
stos
pop
xchg
sub
xchg
add
push
mov
jg
inc
in
lock
fs
add
jg
fisubrl
mov
out
inc
or
mov
fsubrs
or
ds
jo
int
lds
inc
pop
pusha
sub
push
std
xor
lret
fistpll
add
stos
test
pusha
cmp
ss
lea
mov
sub
pop
sbbl
jnp
shlb
pop
adc
push
insl
add
lret
adc
pop
cmp
add
mov
scas
es
mov
xchg
insb
mov
or
push
cmp
fnsave
dec
push
lock
add
sub
xor
outsl
push
mov
dec
ret
addr16
xor
push
xor
dec
enter
xor
pop
xor
out
std
push
fsts
sbb
imul
cmp
loope
ja
stos
ret
xor
mov
mov
and
movsl
mov
enter
hlt
stos
push
jg
add
roll
aaa
or
mov
mov
stos
in
fsubrl
enter
jge
cmp
pop
add
mov
xchg
gs
adc
inc
movsb
ret
push
mov
or
add
pop
pop
cwtl
ja
lcall
call
mov
sbb
out
and
add
push
shll
ret
repz
and
xchg
lds
aas
pop
sbb
jg
rorl
jg
mov
addr16
cld
dec
or
repnz
sub
hlt
add
or
or
jbe
add
mov
movsl
inc
pop
out
cli
ret
mov
aam
pop
add
sub
lret
test
movl
push
inc
lcall
mov
mov
fcoms
lods
push
pop
in
push
in
cmp
mov
std
lods
inc
adc
pop
xchg
lock
lea
adc
pop
cmp
xchg
aaa
ret
divl
xchg
imul
and
test
mov
scas
jecxz
mov
mov
cmpsl
mov
mov
or
mov
mov
das
jo
or
push
fstpt
das
flds
in
sbb
clc
outsl
inc
adc
sbb
xchg
test
arpl
les
inc
inc
adc
lds
push
rcll
xchg
add
lds
jle
outsb
outsb
fnstenv
out
gs
fcomps
xor
in
push
les
test
lahf
subb
xor
jae
push
mov
xor
test
les
dec
inc
adc
push
pop
jp
sub
daa
lret
adc
lea
push
push
cmp
pop
test
pop
aas
mov
inc
mov
xchg
mov
pop
clc
mov
add
xchg
ljmp
inc
cmp
push
add
clc
outsb
std
push
daa
push
fdivrp
dec
movsw
push
nop
and
ds
mov
and
int
into
or
cltd
cmp
jge
push
pop
cmovbe
sub
imul
or
lret
fs
jmp
and
push
ss
divl
adc
flds
imul
sbb
lcall
outsb
jnp
cmp
xchg
lds
xchg
lret
in
lods
bound
xchg
lods
xchg
sub
imul
dec
lds
push
mov
pop
loopne
rclb
leave
lret
dec
stc
in
inc
fdivrs
outsl
into
or
lds
ljmp
jb
dec
jp
mov
inc
fcmovnb
aam
jmp
mov
jg
fwait
mov
xchg
in
out
cmp
dec
test
enter
push
mov
out
dec
clc
icebp
or
lea
nop
fcomp
sub
xchg
test
mov
lods
out
pop
push
or
scas
push
jl
insb
into
loope
sahf
dec
push
sbb
lret
shl
push
fnstenv
jbe
dec
xchg
stos
adc
leave
inc
add
mov
popa
clc
and
and
mov
test
sub
fmull
ljmp
fmul
jl
iret
and
movsb
lea
in
and
dec
stos
mov
inc
jns
or
movsb
ficoml
push
xlat
mov
mov
inc
jg
ja
fsts
dec
pop
sahf
jge
adc
cmp
and
xor
fwait
inc
adc
mov
sub
mov
xchg
enter
out
fildl
test
movsb
sarb
lret
lret
pushf
and
jle
call
loope
or
or
outsl
and
orb
fildl
cs
cmpsl
dec
sub
clc
xor
js
mov
dec
mov
mov
imul
sahf
cmc
and
inc
push
js
sbb
mov
fisttpl
cli
adc
dec
fwait
sub
insb
fs
popf
call
test
inc
xchg
jp
in
push
lcall
nop
and
andb
lods
or
loop
push
out
adc
leave
xchg
repz
sbb
addr16
fsubr
mov
jne
cmp
xchg
adc
lds
add
call
cmp
mov
mov
xchg
enter
movsb
movsl
movsb
mov
mov
mov
sbb
andb
or
mov
scas
inc
or
jo
aam
lret
pop
fbstp
xchg
mov
mov
jae
sub
sbbl
icebp
dec
sbb
jns
rcl
dec
cmp
jle
pop
cmc
mov
dec
jmp
enter
mov
mov
clc
popl
mov
adc
inc
lea
shrb
mov
loopne
aad
enter
stos
inc
ja
sbb
xor
fdivrs
adc
push
fcoml
stos
mov
les
loopne
pop
cmpsb
jecxz
das
ljmp
fidivrl
iret
rcrl
in
rcrb
fnstenv
ret
gs
mov
dec
inc
inc
lahf
aaa
bound
addl
pop
repz
jecxz
push
and
add
insb
add
sbb
notw
and
fwait
or
ret
dec
sti
mov
inc
or
int
in
jne
inc
pop
popf
dec
push
cmp
and
iret
adc
shl
xchg
and
arpl
mov
adc
int
mov
out
push
repnz
xor
xor
mov
mov
ret
xchg
test
push
sub
aam
stc
or
pop
jp
test
shrl
cmp
xchg
jns
scas
outsb
cmp
cwtl
mov
push
outsl
xchg
pop
pop
cmpsl
dec
push
outsl
insl
cs
lahf
mov
lcall
xor
cli
or
test
ret
outsl
fnstenv
lret
popf
push
push
jmp
push
jge
or
jo
mov
scas
and
popf
xchg
andb
repnz
cltd
mov
add
xchg
xchg
pop
sahf
jns
fbld
test
outsb
mov
xor
mov
dec
or
leave
lods
outsl
sub
in
pop
mov
jae
push
cmp
jmp
adc
jp
mov
push
and
dec
cld
divl
push
mov
js
gs
xchg
aam
mov
stos
jmp
xchg
pop
push
mov
dec
in
stos
cmp
pop
stos
inc
mov
or
fstp
mov
mov
ret
pop
addr16
dec
cld
xchg
shl
jb
dec
icebp
sbb
and
mov
ja
mov
mov
sub
out
dec
lcall
or
mov
inc
sbb
lret
mov
mov
push
sub
test
ljmp
hlt
rorb
add
and
jne
or
out
dec
pop
mov
shlb
cs
pop
cli
jge
and
xchg
adc
ja
jle
enter
mov
imul
ret
pop
mov
dec
xor
dec
loope
pusha
lock
inc
jne
jle
bound
jne
arpl
negb
xor
in
jecxz
leave
add
lahf
xor
xor
mov
rcll
jo
mov
adc
fldpi
cmp
pop
cmp
sub
add
incb
or
in
stos
incl
push
xchg
xchg
cmp
mov
and
sbb
daa
jmp
lods
xchg
stc
jae
cmp
out
mov
aaa
adc
mov
stos
inc
fcomps
pusha
mov
fsubrl
xor
cmpsb
xlat
outsb
aam
mov
pop
mov
push
xchg
cs
popa
xor
sahf
inc
dec
lret
dec
fimuls
stos
gs
fdivl
inc
and
push
mov
cld
push
call
ss
push
adc
loopne
cmp
add
inc
insb
pop
xchg
mov
leave
pop
xchg
fneni(8087
dec
popa
lcall
mov
sub
repz
jbe
daa
push
test
xchg
pop
mov
fldenv
insb
add
call
sbb
push
ret
pop
mov
mov
and
int
out
rcr
pusha
fstps
test
cmp
scas
mov
xor
cld
xchg
push
cmpl
jno
sbb
rol
daa
outsl
mov
dec
and
jl
int3
lret
out
push
cltd
or
arpl
push
fbstp
push
mov
icebp
push
add
jno
xchg
test
and
lock
push
lea
subb
jb
inc
xchg
sub
fidivl
or
mov
ja
sub
pop
outsl
add
dec
popf
sbb
insl
xor
int
mov
jo
les
stc
sub
cmpsl
mov
fs
jge
shl
sahf
inc
gs
fs
inc
test
mov
imul
cltd
pop
push
xchg
push
ljmp
std
xchg
mov
int3
add
ret
pop
fisubrs
stos
lret
insb
dec
dec
inc
push
aad
repz
ret
inc
fdiv
cmp
js
mov
stc
adc
insl
insb
scas
insl
mov
or
inc
ds
jne
dec
fmul
fistpll
xlat
jnp
or
inc
scas
dec
or
pushf
adc
clc
pop
mov
xchg
cmp
mov
inc
out
mov
stc
insl
push
adcb
sub
xor
xchg
out
push
and
inc
sbb
xchg
jge
clc
test
test
popa
cli
popf
mov
or
scas
dec
scas
out
loopne
decb
mov
pop
mov
incl
shlb
xchg
loope
popf
lret
loope
and
imul
inc
sub
fstpt
lea
adcb
push
sub
notl
lcall
sbb
cmp
or
fdivrs
in
scas
inc
scas
add
mov
popa
and
dec
dec
pop
adcl
pop
cmp
andl
dec
ljmp
data16
cmp
mov
decl
ror
cmp
sub
add
aad
mov
mov
jbe
xor
and
xlat
push
push
lahf
cmp
mov
jmp
dec
loopne
or
xchg
inc
fcomps
adc
cmc
lds
push
jae
jnp
add
lcall
xchg
adc
into
sub
mov
cwtl
or
cli
xchg
sbbb
cld
mov
mov
xchg
adc
repz
fdivl
push
subl
ljmp
scas
xor
mov
pusha
and
jbe
xchg
mov
add
or
pop
call
jge
cmp
inc
clc
ret
xlat
aas
adc
mov
cmpsl
lock
imul
scas
and
adc
fldl
inc
std
pop
jne
cmc
push
mov
jge
shr
aam
hlt
stc
in
sub
fistps
mov
xchg
test
inc
pop
negb
dec
cmp
sbb
or
mov
fs
adc
into
sbb
je
inc
addb
lret
or
xchg
sbb
dec
mov
xchg
mov
icebp
or
lcall
pop
add
mov
sbb
dec
lret
or
lock
ljmp
and
jb
xchg
testl
jbe
sbbb
ss
xor
loopne
add
xchg
xchg
es
push
lods
mov
je
out
fwait
xsha1
cmpsb
iret
nop
loope
repz
lret
cmpsl
fcmovnbe
push
mov
pop
xor
mov
sti
insb
mov
lcall
adc
cmp
es
fwait
xchg
dec
dec
cmc
mov
xor
repz
sbb
cmp
mov
cmp
popa
mov
adc
test
std
and
aas
lret
shlb
push
cltd
or
push
mov
push
ret
pusha
and
sub
jg
scas
negl
sub
mov
rcrl
iret
mov
xlat
inc
push
inc
dec
sbb
lock
fucomp
sahf
fidivl
adc
dec
ds
test
add
xor
adc
out
lock
and
jl
test
pop
cmp
pop
fdivl
shr
xchg
in
and
inc
cmp
pop
loopne
adc
mov
adc
jge
mov
in
dec
hlt
xor
repz
sbb
sbb
int
xchg
pop
pop
mov
push
in
fwait
stos
and
fwait
inc
je
lock
dec
loop
add
pop
mov
scas
and
out
inc
push
mov
int
repnz
std
out
dec
dec
icebp
cltd
in
sbbl
cmp
xchg
sub
mov
sub
jle
mov
vpshufd
jg
cmp
and
movsl
mov
adc
adc
rcrl
out
inc
pop
outsb
ja
shl
sub
push
jecxz
inc
add
shlb
cmp
arpl
or
cli
cld
mov
jg
xor
cmp
ret
xchg
mov
mov
loope
sti
loopne
cmp
adc
aad
sahf
repnz
fldl
jecxz
fwait
dec
or
mov
popa
jl
push
ja
mov
and
xor
inc
inc
popa
jbe
insb
lret
popf
sbb
imul
hlt
leave
popa
push
inc
pop
xor
adc
std
xor
fnsave
pop
popa
clc
mov
mov
shll
push
loop
je
stc
fwait
xchg
iret
sub
shlb
negl
andb
aam
lahf
add
fbld
cltd
fcmovb
and
adc
cltd
push
add
repz
fldenv
mov
andb
mov
adc
mov
mov
push
insb
add
mov
and
mov
jo
dec
pop
dec
dec
cmp
movsb
enter
icebp
stc
mov
rolb
mov
arpl
lock
clc
cmp
adc
jbe
call
fsubr
dec
pushf
xor
test
mov
jo
ss
aad
insl
divl
mov
mov
outsb
adcb
mov
pop
insb
insb
adc
movsb
test
stos
pop
jns
sbb
movsl
in
shrl
outsl
nop
or
push
frndint
inc
xor
pushf
jbe
mov
or
xor
int3
mov
or
pop
mov
cld
data16
cmc
xor
cmpsl
jmp
dec
sbb
mov
adc
cmp
int
xchg
aaa
jecxz
jne
mov
sub
mov
enter
les
adc
xchg
scas
xor
repnz
inc
jge
test
inc
cltd
xor
lret
xchg
mov
mov
or
hlt
imul
sahf
fidivrl
shrl
inc
inc
out
ljmp
sub
bound
cwtl
mov
sub
dec
in
nop
nop
cmp
pop
dec
sub
in
pop
outsl
pop
mov
jg
pop
mov
xlat
scas
neg
and
stc
xchg
mov
adcb
or
mov
push
enter
xor
or
add
mov
pop
out
bound
cmpb
imul
jns
pop
cmp
xchg
cmc
test
movsb
jae
gs
fnstsw
rclb
and
xchg
out
fiaddl
in
xchg
ljmp
dec
fwait
adc
xor
pop
mov
push
mov
adc
imul
in
in
sbb
adc
dec
mov
das
and
clc
ret
add
dec
sahf
dec
jmp
mov
xchg
cmp
lahf
jo
mov
hlt
mov
faddp
xchg
push
lea
pop
cli
lods
shlb
shlb
xchg
fldt
arpl
lcall
and
mov
push
js
mov
fcmovne
jno
jecxz
imul
daa
push
out
popf
xor
or
or
mov
shlb
mov
dec
mov
call
cwtl
and
xchg
test
pop
mov
aam
jmp
pop
inc
bound
mov
dec
lret
scas
jg
cltd
std
std
mov
and
fwait
adc
inc
clc
std
and
lret
orb
test
pop
jmp
ret
sbb
mov
sbb
sbb
stos
pushf
aaa
jp
sub
xor
sub
xchg
sbb
dec
aas
dec
inc
push
cmc
aaa
adc
imul
mov
ret
pop
push
daa
inc
dec
or
test
cmpsb
lea
pandn
std
in
sbb
mov
sbbb
push
xor
inc
cmp
lcall
mov
push
out
xorb
or
clc
sub
push
jne
pop
xor
xchg
fdivl
test
mov
cli
push
push
sub
sarl
sub
sub
sub
scas
inc
ror
sub
imul
popa
pop
fwait
xor
add
push
push
sub
icebp
adc
ds
sbb
sbbl
dec
lcall
shl
leave
aam
inc
sub
lcall
mov
cwtl
and
sub
ss
icebp
pusha
fstpt
push
push
fsubs
mov
sti
mov
into
ret
es
push
insl
jle
mov
lcall
mov
int
dec
subb
push
rcrl
pusha
fstpt
pusha
dec
add
jne
mov
out
cli
add
outsb
and
mul
movsb
mov
sub
insb
lcall
cmp
repz
dec
in
fsubrs
xor
mov
fadds
bound
popa
aad
test
imul
cmc
adc
mov
pop
cmp
jp
jnp
insb
mov
popf
xor
push
xor
adc
jb
jge
xchg
adc
fs
das
jmp
jae
dec
xor
inc
xchg
and
push
stos
clc
mov
insb
fdivl
sbb
test
mulps
insl
inc
and
cmpsb
mov
push
test
fadd
mov
sub
and
pop
jg
outsl
dec
and
repnz
pop
leave
xchg
mov
test
int
in
mov
fidivrs
sub
lock
cmp
shrl
xchg
push
cld
lods
push
jmp
pop
lret
mov
call
daa
or
ficoms
pop
mov
jo
pop
jmp
xchg
jnp
push
leave
cmp
aaa
into
orl
icebp
cmpsb
adc
movsb
jecxz
sub
stc
mov
dec
add
xchg
mov
les
lea
vpacksswb
mov
fstps
inc
scas
mov
jecxz
xchg
push
push
push
fildll
leave
pop
inc
dec
into
ljmp
push
xchg
mov
call
out
inc
xlat
fmulp
mov
data16
pop
xlat
ss
mov
sahf
gs
mov
adc
inc
jae
jnp
popa
inc
fdivs
pusha
daa
jo,pn
imull
ja
jl
sub
mov
pop
xor
xchg
push
gs
loope
xor
mov
jns
jne
lock
loopne
adc
outsb
std
push
cltd
mov
adc
or
cmc
stos
cmp
mov
in
mov
sbb
push
xor
mov
mov
rcrb
xchg
xor
hlt
adc
cs
cli
jle
aad
fisttpll
sbb
insb
dec
xor
testl
mov
dec
xlat
mov
cmp
lea
adc
bound
push
jnp
leave
stos
inc
pop
mov
push
loope
aaa
imul
icebp
xor
dec
adc
test
out
push
movsb
pop
out
aam
int
cli
incb
ds
rcrl
push
decl
jecxz
icebp
xor
into
stos
popf
das
lds
dec
aas
in
icebp
and
aaa
sub
push
add
or
mov
pop
ret
mov
pop
xchg
cmpsl
clc
sub
movsl
movsb
ljmp
jno
sub
dec
push
and
xchg
xor
xor
jnp
aaa
aas
nop
outsb
pop
pushf
cs
xorb
add
add
push
and
in
lds
cmpsl
mov
or
xchg
dec
sbb
xchg
arpl
mov
dec
xor
inc
xlat
insl
gs
test
mov
lret
adc
hlt
inc
gs
cwtl
mov
fsubrs
mov
jbe
nop
add
mov
js
and
pop
lret
and
es
pusha
sahf
pop
mov
test
cmp
divb
inc
sub
or
dec
push
jb
mov
test
repnz
push
sub
test
mov
test
mov
adc
push
pop
ret
jb
jo
push
mov
mov
pop
mov
in
inc
mov
ret
pushf
test
pop
imul
push
mov
pop
add
or
lds
pop
inc
push
scas
fs
aas
call
rcrb
loop
and
insl
add
lcall
fidivrl
push
mov
aam
mov
sbb
jmp
and
nop
loop
ret
sub
pop
int
jne
mov
inc
inc
pop
jo
xorb
lea
mov
inc
mov
mov
js
xchg
cmpsl
xchg
pop
pop
loop
mov
popa
add
pop
dec
jecxz
mov
fadd
xor
pop
test
leave
in
xchg
jns
dec
loope
sahf
ljmp
xlat
fs
clc
inc
mov
shr
fsubrl
xchg
jbe
clc
jns
pop
addr16
jns
femms
notl
or
mov
pop
iret
and
cmpsl
test
xor
fwait
stos
movsb
lods
mov
loopne
mov
xchg
push
jge
inc
mov
xor
fs
adc
jnp
push
xor
addl
adc
out
test
jnp
jmp
jnp
repz
std
shll
repz
movsb
inc
sbb
nop
jp
shll
std
push
ljmp
inc
or
add
xor
iret
lahf
jnp
cs
lea
sbb
mov
xor
popa
add
pop
push
testl
js
cmp
dec
add
mov
popf
sbb
in
push
insl
push
cmpsb
fsts
sub
adc
xchg
push
fwait
out
and
mov
aad
test
mull
inc
ljmp
and
test
pop
cwtl
dec
rorl
gs
mov
cwtl
mov
add
push
mov
xor
movsl
mov
xor
mov
mov
pop
flds
jp
stos
popa
inc
inc
push
add
loopne
lcall
jbe
sbb
sbbb
and
pusha
je
out
ss
insl
dec
inc
notb
ds
mov
xrelease
out
sbb
aas
mov
mov
push
pop
pusha
shl
mov
sti
push
aaa
fldl2t
xchg
mov
sbb
aam
mov
pushf
inc
inc
fnsave
bound
shl
ja
inc
adc
xor
decl
dec
sub
pop
insb
or
adc
push
xor
rclb
jge
dec
into
mov
or
stos
cltd
popf
or
aam
add
mov
mov
call
cli
xchg
cmp
lret
cmp
and
movsb
sar
mov
in
push
sahf
fimull
test
mov
stos
dec
sti
add
call
ret
xorl
arpl
das
out
xchg
fidivrl
pushf
jo
or
icebp
adc
fsub
push
mov
jae
popf
sub
jo
test
sbb
mov
mov
jecxz
test
xchg
roll
push
adc
push
jae
pushf
push
jno
scas
push
jno
add
repnz
iret
jmp
cwtl
pop
adc
lahf
ss
push
cmp
dec
aas
dec
test
xor
daa
xor
mov
lcall
xchg
xor
xchg
inc
idiv
sahf
insl
sub
lret
mov
out
jno
ret
pop
test
and
cmp
add
jbe
jb
cmp
xchg
frstor
out
and
bound
xchg
add
mov
aad
call
or
out
stc
mov
cmpsl
add
sub
inc
lods
cs
les
fldcw
cmovl
cmp
push
dec
sub
jae
or
ret
dec
pop
movl
pop
push
in
jg
aas
mov
sbb
scas
adc
aas
fnstenv
jno
popa
movsb
cmp
mov
int
push
mov
arpl
fwait
ljmp
lods
loopne
sahf
pop
jmp
shlb
into
pop
jbe
jbe
decl
lods
stc
std
adc
sarl
gs
stc
int3
push
sbb
mov
popa
push
mov
mov
test
and
cmp
xor
shrl
andl
dec
and
cmc
push
mov
push
popa
test
mov
arpl
and
dec
dec
out
sahf
stos
sub
lds
imull
or
push
adc
mov
jnp
cmp
adc
lret
xor
jne
sbb
push
rcrl
add
repz
lahf
sub
mov
sub
mov
sbb
ss
lock
rcl
cltd
std
jmp
or
mov
mov
into
jmp
incl
mov
dec
cltd
mov
loop
or
mov
dec
iret
pop
fsubrp
sbb
dec
imul
sbb
sub
icebp
xchg
lds
jmp
jecxz
or
pusha
jle
cmp
dec
fwait
xor
clc
test
dec
mov
dec
cmp
adc
mov
and
lods
fdivl
test
sti
adc
out
push
mov
aad
mov
js
arpl
popl
push
mov
sub
gs
cli
add
pop
xor
push
sahf
stc
inc
pop
sub
xlat
insb
divb
bound
shr
and
adc
addb
push
xor
in
mov
pop
out
xchg
jae
shll
add
mov
dec
stos
inc
sbbb
fstpl
mov
push
xchg
sbb
inc
scas
pop
lret
sbb
rcl
cmp
pop
enter
jo
fwait
lods
sahf
les
push
call
faddp
jae
movsl
repnz
daa
add
jae
mov
pop
cld
lods
sbb
lods
fwait
mov
shlb
mov
shr
push
fsts
inc
das
decl
cmc
push
and
xchg
clc
aam
insb
xchg
test
pop
stos
loop
cmp
daa
rclb
lods
rcll
and
lock
or
out
or
push
aam
aas
mov
nop
pop
fs
and
stc
call
aaa
nop
loope
pop
adc
mov
and
jp
sti
dec
leave
test
cwtl
cwtl
das
lret
insb
stc
and
inc
push
sbb
jnp
sbb
loopne
fcomps
shl
mov
xchg
loop
or
fbld
jge
nop
push
out
lcall
sbbb
cmp
push
adc
xchg
inc
inc
nop
push
sahf
fwait
push
out
inc
pop
in
dec
leavew
cmp
aas
inc
xchg
fnstenv
adc
mov
ret
adcb
push
jg
jns
lcall
imul
xchg
mov
adc
sti
jnp
mov
loope
pop
outsb
jge
jecxz
movsl
jp
int3
and
add
imul
imul
push
mov
fwait
and
fcoms
out
adc
or
add
stos
std
sbb
fucom
push
orl
jge
jge
fs
les
cmpb
test
push
testl
and
pop
shr
or
push
fmull
mov
add
cmpsb
clc
rclb
gs
xor
push
cmpsl
test
mov
add
or
add
pop
je
inc
in
jg
adc
mov
sbb
hlt
aam
and
cmpsl
addr16
cwtl
push
call
dec
or
push
fildll
dec
pop
mov
push
lods
cmp
xchg
lds
ja
jl
mov
xchg
pop
mov
ficomps
sub
dec
out
add
gs
data16
jbe
mov
xchg
pop
mov
sbb
outsl
shrb
in
mov
adc
data16
pop
out
lea
jnp
mov
mov
and
icebp
cmp
add
push
les
add
xor
fsubrs
movsl
mov
mov
outsl
mov
push
loopne
jns
pusha
cmp
rcrb
out
out
inc
aam
jae
in
nop
fcmovnu
repnz
movsb
movsb
pop
adc
push
in
pusha
pop
mov
jmp
aad
add
lods
push
push
call
add
outsl
sbbl
ss
scas
mov
or
adc
push
mov
int
mov
pop
add
fsubs
pop
mov
imul
add
mov
cmp
fldl
shld
dec
test
rcrl
pop
jg
mov
rcrb
cmpsb
push
mov
icebp
xchg
push
dec
add
loop
push
in
jnp
sub
xor
mov
fld
push
jbe
xor
pop
add
into
pop
flds
or
stos
inc
mov
lock
stos
mov
aaa
pop
imul
mov
inc
sti
and
adc
adc
adc
ret
rcl
psubq
add
adc
pop
inc
shl
inc
add
shrb
xchg
addr16
std
xchg
rorl
cmpsb
sbb
ljmp
mov
cmp
cli
lock
jl
movsl
addb
xor
inc
sub
loopne
push
lea
xbegin
xchg
dec
pop
add
xlat
jo
or
stc
and
les
cmp
xchg
insl
or
dec
cmp
sahf
push
sub
into
mov
cld
lahf
pop
cmp
adc
cmp
xor
ret
cld
push
ss
iret
and
xchg
movsb
testb
mov
lea
into
xor
bound
imul
mov
data16
shll
shl
aas
ja
dec
int
movsl
mov
inc
ret
into
arpl
and
popf
pcmpgtd
notb
cmp
test
lds
sbb
cwtl
mov
jnp
mov
mov
mov
jo
push
test
push
dec
mov
insl
imul
push
mov
pop
mov
mov
outsb
sub
xchg
stc
mov
mov
or
movl
mov
or
jg
sti
out
cmpsb
loope
or
cmp
pop
mov
out
scas
inc
xor
int
ror
mov
sbb
in
push
jl
imull
push
arpl
popf
nop
or
cmp
adc
mov
bound
add
jnp
iret
nop
test
ret
scas
jb
nop
dec
lods
orl
int3
add
dec
outsl
push
popf
mov
das
push
or
scas
mov
dec
pop
xor
test
xor
and
push
jne
lds
shll
pusha
hlt
out
jge
cltd
scas
setb
mov
sbb
inc
sub
xchg
mov
dec
mov
xchg
outsb
add
or
mov
sahf
inc
push
xchg
jne
imul
inc
pop
pop
aam
mov
rolb
rcl
ljmp
adcl
mov
inc
loop
or
pop
fadd
inc
test
daa
jmp
insb
xor
ret
test
inc
sti
out
popa
mov
lea
cmp
daa
popa
xlat
mov
jae
mov
shlb
jecxz
fsin
sub
xlat
rcrb
mov
bound
cmp
cmc
int
arpl
popl
or
fnstenv
push
cwtl
cmc
mov
cmpsb
cmp
mov
gs
cwtl
loopne
out
test
psubb
push
jecxz
hlt
dec
movsb
in
sbb
xchg
inc
mov
out
sbb
scas
enter
aad
cltd
mov
iret
jmp
and
mov
lds
lcall
cltd
stos
jae
psadbw
jbe
cmpsb
mov
stos
mov
gs
rclb
and
mov
mov
or
ss
repnz
sub
jecxz
leave
add
jmp
cmp
sbb
add
es
clc
mov
stos
and
and
push
sub
pop
int
cltd
outsl
cmp
scas
das
movsb
in
mov
inc
clc
lock
les
adc
lret
addr16
icebp
pop
sbb
pop
outsb
jg
push
jo
mov
stos
sbb
mov
lods
sub
sti
cmp
cmp
mov
cmpsl
aas
cwtl
vminps
dec
out
jmp
aad
imul
jae
js
cli
lret
arpl
rcrl
stos
inc
or
loope
push
stos
aad
pop
int3
shlb
gs
int3
and
sbb
inc
inc
imulb
shlb
xchg
insl
inc
stos
leave
dec
pop
int
sbb
and
nop
jl
dec
cmp
sti
mov
int
lods
dec
adc
jno
sub
cmp
test
imul
lret
pop
repnz
xchg
cmp
and
in
push
test
dec
addr16
aaa
das
icebp
stc
mov
pop
mov
int
lret
inc
dec
inc
popa
xchg
dec
inc
mov
push
jmp
mov
ja
sbb
pop
adc
push
push
mov
cmpsl
bound
push
push
push
dec
jg
orl
inc
outsl
mov
xor
push
add
insb
mov
inc
sub
adc
arpl
and
and
scas
push
loop
les
fidivl
push
cli
and
scas
iret
in
push
in
mov
jno
sbbb
test
xchg
leavew
xor
cld
scas
pop
or
xchg
out
add
stos
mov
aad
arpl
push
xchg
pop
mov
push
xor
sbb
mov
push
loop
mov
inc
les
ret
loope
inc
pushf
lods
add
push
hlt
dec
inc
mov
cmp
cmp
out
stos
int
and
pushf
and
inc
sub
scas
push
out
xchg
rcr
push
jns
pop
add
nop
daa
push
or
add
push
cmp
inc
gs
aam
or
movsb
jnp
jnp
out
add
sub
dec
push
push
ljmp
xchg
add
cs
sub
dec
cmp
or
cmovo
out
jle
or
adcb
jle
jmp
loopne
xchg
sbb
enter
sbb
or
insl
sti
lea
test
sub
inc
int
negb
jl
pop
std
and
sbb
adc
repnz
in
cmpsl
cmp
mov
aad
je
dec
pop
out
or
ror
sub
pop
jmp
xor
add
fnstsw
or
pop
outsb
push
out
or
or
mov
mov
jp
jb
xchg
movb
int
push
mov
fsub
and
inc
pop
jp
cmp
cmp
mov
shll
mov
cmp
mov
push
dec
pop
aaa
pushl
and
stc
data16
mov
data16
push
and
lock
mov
mov
or
push
cltd
jmp
sub
rcrb
lcall
bound
mov
add
add
jnp
orl
loop
xor
add
jmp
sbb
xor
push
insb
mov
inc
lret
movsl
and
in
int3
ss
mov
cmp
jle
sbb
mov
add
or
je
arpl
outsl
je
or
mov
mov
pop
inc
and
in
sub
sbb
and
mov
inc
lods
mov
mov
test
or
jp
imul
notl
sbb
jp
sub
lahf
mov
sahf
xchg
xlat
and
lds
mov
lods
xchg
push
gs
aaa
or
out
movsl
jne
icebp
inc
aaa
fnstenv
pop
sbb
out
mov
jo
sub
push
cmpsl
dec
jno
push
xchg
jo
out
xlat
jle
push
jmp
add
mov
nop
cmpsl
dec
jae
int3
dec
and
nop
popf
jecxz
sbb
xor
jmp
sub
push
mov
mov
lahf
hlt
or
orl
es
push
adc
xor
push
js
xor
movsb
cli
pop
popa
arpl
enter
inc
dec
movsb
mov
jno
xor
bound
inc
dec
loopne
push
addr16
xor
dec
movsl
push
mov
jle
mov
and
sti
xchg
das
xor
jmp
popa
loop
out
jno
aad
rol
pushf
and
push
int3
mov
movsl
mov
or
nop
cmc
push
test
dec
add
scas
stc
outsl
and
mov
or
xor
xor
fisttpll
xchg
fsubs
and
les
pop
pop
sbb
cmp
sub
loopne
lret
jne
sub
aas
dec
mov
addr16
xchg
push
fcompl
divl
out
jbe
cmc
lock
out
stc
fadds
inc
mov
aad
scas
push
xchg
add
sbb
jno
and
mov
mov
mov
pop
test
es
cmp
push
add
dec
or
inc
inc
mov
mov
pop
rorl
pop
scas
cmp
pop
adc
shlb
js
or
jmp
ficoms
pushf
addr16
call
or
sbb
dec
es
inc
mov
cwtl
xor
cmp
mov
sub
xchg
shr
jnp
cmp
loop
pop
int3
shll
xor
mov
icebp
xchg
xor
lea
pop
movsl
lds
pop
out
inc
sahf
sbb
subb
pop
fadd
and
movsl
push
aaa
pop
adc
aaa
out
out
and
in
sti
dec
iret
stos
jnp
gs
pop
xchg
mov
inc
mov
push
call
jmp
mov
mov
mov
fmul
arpl
loope
xchg
imul
pop
int3
push
sahf
jno
mov
pushf
call
mov
outsb
cld
mov
test
add
shr
call
rcrl
sbb
fdiv
add
fsubrp
xchg
xchg
mov
mov
lahf
cmp
mov
jp
push
out
sbb
ret
int
outsb
cmp
cmpsl
dec
filds
dec
dec
cmp
daa
mov
cmpsl
xchg
call
xorl
push
fsubrs
add
xchg
dec
cmc
xchg
fs
sub
cmp
cs
push
ficoms
xor
sbb
aas
dec
jbe
and
arpl
cmp
cli
mov
mov
dec
clc
adc
mov
mov
jae
mov
adcb
cwtl
sbb
inc
jb
dec
pop
cmp
mov
loop
imul
mov
xor
aad
mov
add
mov
outsb
xchg
pop
stos
sar
dec
mov
xchg
add
and
push
popf
adc
inc
fcompl
orl
mov
daa
lcall
and
add
mov
push
test
inc
outsb
push
test
cmp
fcomi
das
sub
dec
in
lea
cld
mov
loop
sbb
je
xor
mov
sbb
mov
jnp
rolb
mov
and
lahf
inc
fsubrp
icebp
out
xor
fcompl
stos
add
loopne
movsb
cmp
int
in
test
cmpsb
or
mov
sub
inc
cli
xchg
push
adc
mov
jbe
inc
sbb
xchg
cli
pop
and
lea
mov
sbb
sub
add
in
and
cli
test
iret
and
xor
mov
pusha
mov
jecxz
lds
add
cli
mov
and
roll
adc
mov
push
test
scas
stc
das
sub
inc
push
push
lret
push
add
out
mov
ret
sbb
lock
in
adc
dec
mov
cmp
repz
vprotw
jmp
ss
sub
iret
lretw
int3
sbb
add
dec
pandn
mov
add
enter
pop
cmpsl
cmp
mov
dec
xor
and
repnz
and
push
inc
cwtl
or
lods
mov
in
sbb
loopne
push
bound
dec
jle
lret
cltd
push
and
cmp
jb
dec
sub
andl
mov
es
xor
push
mov
cmc
fldlg2
fbld
jle
pop
mov
out
push
loope
lea
mov
inc
cmp
mov
jmp
mov
adc
mov
xor
mov
sbb
neg
lods
call
mov
sahf
out
in
push
inc
stc
inc
inc
and
lods
inc
push
cwtl
or
test
pop
call
or
adc
mov
mov
icebp
lea
and
cmp
outsl
lretw
cmc
xor
jl
adc
xchg
mov
and
and
imul
orl
sarb
outsb
iret
pop
dec
xchg
stos
sub
lahf
cli
and
pop
das
lds
rorb
or
xor
cwtl
popa
lock
je
mov
push
and
mov
lret
xchg
inc
mov
mov
test
les
inc
jne
sbb
fsts
nop
pop
loopne
inc
mulb
movsb
lods
cmp
push
jecxz
xchg
xchg
outsl
push
scas
add
faddl
cld
or
loopne
shrb
test
inc
cs
or
sbb
jbe
loopne
mov
cmpsl
mov
adc
ss
mov
and
pop
cmp
push
shlb
and
stos
mov
inc
ffree
rcll
inc
fcmovnu
das
mov
fldt
add
stc
xchg
repz
std
int
cs
mov
fwait
mov
arpl
xor
dec
lods
test
subl
push
mov
addr16
mov
sub
pop
lret
jle
or
push
ljmp
movsl
adc
imul
and
movsl
inc
sbb
lea
mov
aas
pop
add
push
pop
push
outsl
mov
cmp
ret
sub
mov
inc
jmp
jne
mov
and
sub
fimuls
push
and
cltd
and
pop
jp
push
mov
movsb
and
pushf
jne
mov
inc
cld
mov
pop
adc
and
and
std
mov
mov
push
push
movsl
xor
das
mov
test
mull
sbb
hlt
shlb
ret
jge
pop
or
jmp
fsubrs
mov
cmp
xchg
and
push
test
mov
pushf
mov
rorl
push
adc
push
jmp
dec
loope
pop
mov
cmp
mov
or
stos
lea
jl
sbb
sub
cmp
rorl
mov
out
ret
bnd
cltd
lods
loopne
iret
into
jp
xor
cli
mov
fbld
ficomps
pop
jbe
mov
dec
pusha
xor
adc
les
inc
jb
jne
fstl
daa
mov
rol
fdivrl
adc
popf
arpl
or
push
pop
dec
adc
jge
or
iret
sub
imul
outsl
xor
dec
cltd
mov
sub
lds
mov
bound
in
out
pushf
call
sahf
pop
std
push
ja
lea
sbb
xor
ret
leave
pusha
nop
aaa
repnz
mov
in
mov
push
shrl
mov
sub
pop
ss
lock
dec
add
or
push
xchg
lock
push
dec
fcomp
inc
or
pop
jmp
out
mov
mov
in
lock
lret
cli
pop
xor
jmp
movsl
fimull
sbb
push
lds
mov
sub
pop
cli
dec
push
sar
sbb
jl
xor
ljmp
jb
sbb
nop
mov
inc
push
lea
mov
and
loopne
jbe
enter
jl
xchg
inc
sbb
pop
push
ja
mov
mov
icebp
adc
pusha
incl
getsec
int
jmp
push
jmp
cmp
sbb
ja
and
movsb
lcall
inc
xor
mov
decb
jp
fisubl
data16
mov
in
and
add
je
repnz
movsl
cmp
adc
ret
sub
in
std
adc
mov
shl
shll
mov
outsb
ja
cmp
fdivrs
jp
test
push
xchg
pop
xchg
xchg
mov
fmulp
rcr
jo
repz
es
adc
dec
and
adc
push
mov
fisttps
pop
popf
mov
xchg
jle
jecxz
fsubrs
les
mov
push
sbb
push
clc
jge
dec
fsubr
jns
mov
mov
cld
imul
push
lahf
add
aaa
jmp
out
mov
dec
add
shll
push
jge
xlat
mov
inc
push
les
pop
scas
repnz
mov
test
jb
subl
dec
jnp
hlt
jne
je
std
jno
xor
adc
ret
test
jo
adc
mov
es
cmp
mov
adc
test
sub
rcrl
imul
inc
shlb
mov
scas
pop
adc
loope
jg
lret
aas
loope
mov
movsb
cmp
mov
or
push
jns
popa
fwait
jno
stc
sub
es
xchg
push
push
lds
fs
icebp
xor
cmpsb
cmc
dec
pop
sub
pop
xchg
adc
jne
enter
pop
cmp
pop
int3
mov
or
cmpsl
sbb
pop
arpl
repnz
and
and
and
inc
push
fmuls
sti
popf
stos
adc
ret
sbb
xchg
sbb
out
mov
in
outsb
outsl
xor
jl
push
loopne
pop
jg
mov
ficompl
insl
or
hlt
int3
push
mov
icebp
mov
pop
test
add
or
repnz
pop
cli
jge
dec
pop
testb
mov
or
xchg
mov
mov
sbb
lock
std
dec
in
std
adc
fiadds
xchg
mov
jmp
and
fsubrs
push
add
cmpsb
sub
iret
pop
pop
fwait
repnz
sbb
iret
jecxz
inc
mov
mov
rcll
pushf
add
push
in
ficomps
je
jno
xchg
xor
adc
xor
push
int
movsl
loopne
orb
sbb
fwait
lahf
sbb
add
cmp
xor
xchg
clc
mov
fidivrs
inc
pop
jb
data16
inc
pop
adc
mov
int
sbb
pop
fstpl
bound
push
in
mov
inc
ds
add
dec
pop
jg
cmc
out
and
jl
frstor
outsb
fwait
sbb
aas
out
insb
push
pushf
out
jle
cmp
cmp
imul
inc
pop
in
add
xor
ds
insb
loop
shl
mov
loope
cmpsl
adc
cs
jo
add
mov
fpatan
sysret
cmp
fldenv
mov
add
mov
aaa
lds
mov
mov
in
std
dec
mov
test
dec
xor
clc
jmp
ja
in
loop
lret
dec
cmp
jle
shr
loop
push
cli
pop
iret
sbb
adc
sti
cmp
jmpw
mov
in
xor
iret
mov
push
ss
outsl
icebp
mov
subl
pop
or
push
add
xchg
push
and
cmpsl
push
pop
xchg
pop
test
cs
ljmp
inc
pop
mov
add
enter
push
rol
les
shll
dec
dec
jbe
push
and
push
mov
adc
sub
mov
int3
dec
pop
lock
out
mov
sbb
adc
xchg
imul
sbb
dec
les
pop
pop
fdecstp
or
adc
ss
out
dec
cld
pop
sahf
or
cs
fwait
adc
lods
jbe
inc
push
ss
imul
xor
add
add
pop
aas
sbb
add
nop
jo
mov
aam
jp
cmc
jb
es
cmp
shrd
xor
ss
mov
jns
mov
pop
cli
jne
pop
sbb
sahf
iret
hlt
mov
mov
xchg
dec
lcall
inc
sbb
push
sahf
push
push
dec
shll
cmp
xchg
stos
adc
pop
out
movsb
call
in
outsl
push
push
and
stos
pusha
and
jae
or
ja
mov
push
mov
mov
mov
mov
sbb
or
jo
outsb
xchg
ljmp
addr16
gs
mov
pop
adc
inc
in
push
adc
orl
mov
ja
mov
setle
test
cmp
add
or
xor
lcall
sbb
pop
push
mov
lods
es
shrl
ds
clc
inc
mov
loop
push
jmp
mov
out
lret
or
mov
dec
dec
xchg
cmp
movsl
dec
cmp
iret
xchg
scas
cmp
aad
xchg
add
ljmp
jb
icebp
cmpsb
fwait
stos
fiaddl
inc
cld
popa
negl
jle
imul
lods
inc
loop
push
mov
add
xor
out
cmp
xchg
jns
add
inc
ss
pop
pushw
jecxz
shl
out
cmp
nop
or
mov
das
outsb
in
shlb
push
jae
mov
aaa
iret
xor
adc
decl
jle
xchg
adc
insl
mov
push
or
push
mov
lods
lods
sahf
dec
test
cmp
faddl
pop
xor
mov
out
stc
cmp
call
mov
pop
pop
js
inc
loop
jns
incl
push
jg
cli
mov
adcl
mov
sahf
mov
mov
inc
arpl
push
or
frstor
add
cmpsb
js
inc
lods
ds
push
push
aas
mov
cmpsl
mov
push
push
push
cmpl
ret
movsl
mov
cmp
out
lahf
fwait
cmc
or
ret
fcomip
mov
adc
fstps
cmp
mov
mov
repnz
pushf
pop
scas
or
push
xchg
repnz
cmp
and
movsb
pop
inc
sbb
jge
in
jle
pop
push
or
and
sub
sbb
shl
cmp
xchg
pusha
test
sbb
insl
sbb
popa
sti
xchg
xchg
fs
ja
jmp
gs
loopne
add
in
mov
stos
inc
sahf
fdivrs
ds
or
out
push
mov
jo
filds
fisubl
lahf
daa
jns
push
mov
mov
cmp
mov
or
cmp
orl
int3
or
inc
inc
stos
je
nop
push
push
shll
mov
lods
xchg
mov
lret
xlat
mov
arpl
rorl
cmp
push
in
cmpsl
shl
sub
les
sbb
pushf
and
lock
sbb
in
loope,pt
cltd
enter
dec
lock
xchg
lret
ret
add
popf
lods
cmpsb
xchg
inc
data16
push
sub
and
and
dec
arpl
repz
inc
in
outsb
push
test
adc
scas
dec
pop
mov
mov
ret
jle
xor
arpl
inc
in
je
stc
pop
cmp
adc
adc
rclb
stos
pop
movsb
cmp
sbb
loope
cmpsl
sbb
cwtl
adc
push
cmp
les
and
dec
rcrl
imul
mov
fildll
sub
cmpsb
cmp
roll
jecxz
push
ret
fbld
iret
dec
pop
sub
sub
lret
loope
fdivrp
lret
mov
ret
sarl
mov
out
popa
mov
push
mov
cmp
cmc
push
mov
mov
lods
push
lret
cld
jb
xor
lods
decb
jmp
inc
pusha
xorb
inc
push
push
int3
pop
ja
ss
mov
push
lds
data16
xchg
inc
pop
mov
shlb
xlat
loope
or
cmp
cmp
push
ds
fsubrs
repz
fildl
idivb
or
fidivs
pop
sahf
dec
push
gs
xor
orb
add
shrb
add
or
or
out
cwtl
icebp
push
movsb
imul
subb
sbb
mov
icebp
pop
xchg
into
cmc
outsl
in
jne
outsl
addl
xlat
lds
adc
outsb
cmpsl
xor
xlat
inc
or
add
out
jns
cwtl
mov
mov
cmp
lret
xchg
dec
dec
loopne
jnp
movsl
nop
in
pop
ret
out
outsl
push
push
mov
fcoms
jne
xlat
cmpsb
dec
xor
repz
clc
dec
add
sbb
jg
mov
test
test
idivl
aam
xchg
xchg
loop
cmp
stos
mov
mov
rcrl
insl
daa
jl
push
mov
into
pushw
push
jnp
cli
xchg
dec
dec
mov
pop
nop
popa
nop
out
or
pusha
adc
inc
pop
call
or
std
mov
sbb
iret
push
cmp
sbb
xchg
sub
mov
and
adc
jno
sub
mov
rolb
mov
in
stos
jne
iret
push
mov
cmp
cltd
push
xchg
lahf
ds
ds
jnp
mov
stos
sbb
inc
push
ss
inc
lods
fisttpll
and
daa
ljmp
dec
loopne
and
or
sub
stos
push
mov
adc
out
daa
xchg
push
pop
push
ret
mov
sbb
push
jae
xor
in
or
xorl
nop
mov
adc
push
pop
mov
cmpsb
std
das
mov
std
lcall
in
pop
jge
popf
cmp
push
push
aas
mov
inc
data16
into
cli
mov
pushl
setp
mov
je
push
and
mov
mov
test
sbb
rcll
cmp
scas
imul
clc
mov
sbb
ret
pop
lock
stos
lret
push
push
dec
cmpsb
out
jl
rcrl
lea
cwtl
fbstp
ds
out
cld
arpl
sbb
mov
cmp
adc
xor
repz
loope
fcmovbe
int3
fdivrp
pop
inc
fimull
mov
ljmp
fcoml
leave
dec
jg
lea
inc
bound
jmp
lock
pop
mov
inc
pop
mov
loop
jbe
pop
add
addr16
xorb
adc
adc
fstpt
bound
mov
mov
das
cli
inc
mov
int3
bndstx
jns
imul
sub
movsb
sub
popa
jne
ja
or
sbb
sbb
adc
js
daa
imul
dec
divl
push
fs
test
sbb
add
sbbl
das
jecxz
ss
pop
inc
inc
mov
test
popf
dec
push
jmp
stos
test
or
adc
pop
push
jp
hlt
mov
push
ja
data16
xchg
sbb
sub
push
sub
sub
test
loope
jge
or
pop
push
sbb
fsubrl
inc
je
cmp
aad
sbb
xlat
pop
call
insb
test
cmp
mov
cmpsl
sbb
sbbl
orl
cli
sahf
mov
jmp
dec
in
push
in
out
inc
push
mov
mov
cs
imul
iret
push
inc
stos
int
mov
shrl
dec
test
pop
jge
xchg
jae
cmc
lea
mov
sub
rcpps
sbb
jge
enter
inc
add
inc
fcomps
adc
add
mov
cmpsl
inc
incb
shll
sahf
xor
mov
addr16
es
mov
pop
enter
dec
loop
hlt
imul
shlb
js
sub
lret
jl
inc
xchg
into
enter
and
aaa
mov
xor
cmp
mov
xchg
sub
mov
ds
add
mov
imul
sbb
pop
loopne
cmp
in
sbb
mov
loope
sbb
test
out
iret
and
mov
jl
sub
gs
mov
and
jl
or
pop
aaa
xchg
sub
push
loope
mov
outsb
movq
pop
xor
sbb
testb
stos
cmp
arpl
pop
cmp
xor
in
ret
loop,pt
inc
sub
dec
aam
rorl
arpl
mov
les
fstpt
cmp
out
es
insb
mov
mov
xchg
mov
sub
xchg
rclb
adc
addr16
pop
sub
jo
clc
push
cltd
insl
cmp
cltd
push
mov
mov
jmp
pop
sub
push
aam
nop
jmp
adc
outsb
add
push
add
inc
mov
sub
push
fnstcw
shll
sub
fisttpl
push
jb
mov
xor
mov
loop
repz
cmp
in
idivl
out
in
and
dec
shr
addb
inc
or
lods
or
nop
fcompl
cmc
ss
icebp
out
stc
or
mov
pop
lods
aad
cmc
fidivrl
popf
imul
aaa
test
imul
jno
es
mov
mov
dec
jno
lods
xor
dec
inc
jne
sti
cmp
inc
dec
enter
add
mov
or
jae
out
popa
dec
push
jg
push
in
xchg
lret
push
cmc
sbbb
push
loop
xchg
or
jl
lock
inc
jle
jbe
mov
jmp
and
dec
mov
rorl
stos
pop
inc
loopne
sti
push
es
or
inc
inc
dec
fnstcw
cmpsl
ds
out
push
mov
popa
ljmp
lret
das
test
lods
daa
stc
aam
or
xlat
js
lahf
test
push
fldl
jge
mov
push
cmp
xor
pop
repnz
das
sti
xchg
xor
test
test
mov
out
mov
sub
pop
pop
ljmp
push
or
stc
or
push
dec
and
push
fcmovu
ljmp
sub
xor
dec
add
sti
fdivrs
lods
insb
adc
add
xor
mov
mov
mov
mov
arpl
out
cld
cmc
hlt
cmp
lock
jne
cmpsb
jnp
js
dec
xchg
cmpsl
iret
jmp
adc
inc
or
test
mov
mov
fxch
jg
loop
lock
pop
loop
mov
push
lock
fldl
cltd
jecxz
ret
hlt
mov
jne
lea
outsl
testl
add
mov
cmp
fxch
repz
mov
cs
inc
popa
sbb
dec
jns
lock
gs
lret
xor
out
popa
aad
mov
test
movsb
mov
stos
mov
mov
or
mov
std
aam
rorb
jnp
jl
adc
sub
movsb
sub
lahf
fcoms
mov
or
sub
lret
add
enter
int
outsl
mov
mov
and
aam
and
and
test
lods
or
push
sbb
ljmp
jne
jl
outsl
fnstsw
push
mov
cmpsl
mov
lods
lods
dec
nop
push
in
xchg
test
leave
add
pop
incl
test
mov
adc
rclb
pushf
pop
pavgw
sub
xchg
andb
xchg
adc
movsl
rclb
lret
sub
icebp
int3
dec
scas
jb
shll
into
mov
sbb
and
pusha
popa
jg
repz
inc
adc
cld
xchg
insb
push
cmp
xor
mov
mov
pop
arpl
fwait
ljmp
outsl
add
xor
in
dec
shl
or
ss
xchg
or
les
insl
push
mov
ret
lea
pop
cmp
sbbb
fisubs
add
xor
hlt
mov
mov
push
dec
in
seta
out
xlat
outsb
push
jp
jne
jno
ss
sub
xchg
cwtl
mov
rorl
add
add
xchg
repnz
inc
jge
fisubrs
xchg
push
cmp
cmp
xchg
clc
dec
inc
pop
ja
cwtl
das
mov
sub
dec
cmp
scas
xchg
adc
cmp
inc
fwait
sbbb
test
lret
mov
adc
lock
mov
inc
mov
pop
sub
jp
mov
xor
push
loope
adc
adc
ret
jecxz
cmc
dec
ds
jb
xchg
loope
pop
out
or
in
test
lea
dec
sahf
or
mov
sub
test
dec
iret
or
mov
mov
xor
mov
bound
rclb
das
sub
xor
add
jg
and
popa
add
testl
jecxz
pop
mov
sub
cmp
push
jmp
test
add
inc
jbe
xlat
pop
aas
push
or
lock
pop
fidivs
and
xchg
testb
pop
int
push
cmp
popf
test
iret
lret
enter
iret
mov
jb
int
ret
add
jmp
scas
ficompl
adc
stos
int3
sbb
into
lret
aad
and
jb
sbb
ret
dec
cli
sar
ljmp
cmpsb
adc
xchg
dec
lret
inc
adc
dec
add
dec
scas
cwtl
pop
and
add
mov
out
lret
fnstcw
shl
pop
cmp
mov
mov
fstpt
xor
clc
inc
xchg
add
es
stos
xor
jge
xor
mov
push
cld
outsl
jl
and
std
arpl
jmpw
or
xor
mov
push
mov
mov
aad
xor
push
std
int
mov
shlb
add
mov
jle
dec
out
lahf
pop
inc
dec
mov
mov
out
call
lret
push
sbb
xchg
cmpsb
enter
sbb
dec
adc
stos
sahf
cmp
gs
push
in
pop
mov
xchg
loope
incl
mov
and
out
lods
dec
movsl
mov
fldt
insb
lret
sahf
cmpl
xchg
out
pop
push
icebp
lods
inc
mov
lret
test
imul
in
out
into
sbb
imull
mov
icebp
mov
pushw
mov
test
push
jb
nop
jno
arpl
fcoml
stos
mov
pop
push
cmp
pop
stos
jmp
cmp
dec
shrb
sahf
mov
aas
cmp
xor
jae
shl
push
push
ficoms
shld
mov
iret
mov
sar
xorl
fcomp
loopne
or
mov
or
xchg
xlat
daa
cmp
stc
or
mov
or
pop
fnsave
dec
sub
jmp
into
data16
mov
sub
cmp
jbe
pop
mov
mov
mov
push
cmp
jmp
leave
pop
hlt
mov
mov
jmp
rorb
mul
xchg
xor
dec
in
push
sub
mov
cmpsl
mov
fists
add
or
add
cmp
je
mov
mov
add
data16
sbb
aas
add
push
mov
cmp
add
movsl
cmp
std
or
or
cmp
sub
dec
push
or
xchg
push
movsb
jns
pop
xchg
mov
pushf
in
cld
sbb
pop
inc
icebp
out
ja
jge
add
or
pop
ret
repnz
sbb
or
fdivrs
cmpb
dec
dec
mov
iret
test
insl
cltd
dec
sub
dec
xchg
xchg
test
and
js
lods
pop
mov
push
mov
fisubl
int
push
jbe
rclb
pop
sub
test
stc
jnp
mov
dec
ds
jg
imul
aam
int3
ss
movsb
dec
inc
loop
sub
sbb
dec
hlt
adc
push
and
nop
fbstp
std
jno
add
cmp
js
inc
stos
jg
data16
dec
orl
js
stos
cmp
pushf
test
sbb
sti
xlat
sub
xchg
mov
push
dec
idivb
addr16
inc
pop
cmp
mov
xor
ss
xchg
lea
and
push
pop
std
adc
mov
sbb
stos
inc
pop
aaa
jno
int3
jmp
rcrb
in
jp
inc
lods
sbb
jae
sbb
xor
or
jmp
icebp
sbb
jbe
add
jb
dec
in
mov
gs
scas
arpl
shrb
mov
stos
dec
jecxz
or
lahf
mov
dec
dec
cld
outsl
mov
mov
sbbl
outsl
jl
push
icebp
movsl
mov
addr16
lock
xor
push
xchg
lds
fisttpl
xchg
cmpl
push
pop
cltd
mov
test
daa
jb
movsb
inc
mov
hlt
int3
in
std
adc
sbb
xor
aaa
hlt
sbb
jle
daa
in
lods
cltd
dec
sbb
or
popf
xor
mov
int
aaa
imul
jl
mov
pop
decb
xor
pusha
pop
in
in
test
push
or
sti
in
mov
sbb
lods
pop
mov
es
cmp
jmp
push
dec
hlt
push
fisubrl
sbb
test
rcl
jge
ja
addr16
mov
jbe
or
into
pushf
and
jecxz
pop
dec
sti
pusha
jnp
add
mov
cltd
mov
lcall
mov
dec
cmp
shrb
inc
icebp
xchg
cltd
roll
nop
nop
cmp
xlat
imul
mov
jmp
push
sbb
pop
loopne
js
sbbb
das
xor
cmpsl
jno
into
inc
pop
scas
sbb
lret
imul
icebp
movsl
or
push
aas
cld
jle
jo
cltd
inc
inc
xchg
inc
stc
sti
lods
xchg
sbb
int3
lcall
add
cli
xchg
push
lock
xor
sub
in
js
mov
adc
mov
fadds
mov
jp
xchg
or
or
adc
mov
xchg
mov
lahf
inc
dec
and
shrl
scas
aas
mov
call
cmp
mov
loop
aaa
pop
andl
dec
xchg
lods
add
pop
mov
or
mov
sbb
mov
dec
mov
and
xchg
sbb
mov
pop
rolb
mov
adc
hlt
adc
push
pop
insl
xchg
sub
shll
push
outsb
pusha
jno
ficoms
adc
aam
or
fiadds
lcall
cwtl
adc
imull
jp
stos
aas
jmp
cltd
sbb
push
jmp
pcmpgtw
stos
xchg
test
fildl
fidivrs
jne
jno
push
adc
adc
aad
push
jne
dec
jle
pop
jbe
and
cmp
xchg
and
sub
inc
cmp
jg
sbb
dec
jne
lret
lcall
cwtl
addr16
sub
cli
ljmp
sbb
jg
stc
jo
add
xchg
jmp
ss
jp
push
add
xchg
popa
jb
sbb
cmp
mov
push
in
rclb
adc
mov
movsl
dec
cmp
dec
outsl
jge
js
adc
mov
mov
xchg
std
push
adc
imul
shll
rcrb
mov
adc
adc
fisttpll
dec
test
andl
cmc
lock
movsl
adc
push
push
sti
xchg
xchg
outsl
mov
push
scas
insl
or
sahf
or
lret
pop
xchg
dec
movsl
push
push
jns
ljmp
adc
mov
jnp
out
or
hlt
cmp
out
mov
jg
inc
rcr
inc
setl
adcl
mov
mov
add
ret
div
inc
fisubrl
or
sub
jmp
or
jle
mov
push
je
pop
ja
cmp
mov
or
sub
movsb
pusha
repz
xor
xchg
insb
jmp
leave
das
cli
mov
jg
stos
jbe
push
add
mov
test
lea
sarl
inc
in
sbbl
aas
incl
or
dec
mov
push
jg
ss
sbb
jecxz
icebp
adc
xorb
sbb
dec
jecxz
push
mov
addr16
mov
std
mov
out
mov
in
gs
fdivl
add
dec
add
pop
mov
adc
pop
add
mov
jbe
fstpl
in
or
imul
nop
lods
cmpl
nop
rcr
int3
mov
out
movsb
aaa
rclb
inc
pushf
cmpsb
pop
lcall
cwtl
jne
arpl
push
fld
icebp
lret
ljmp
in
pushf
fisubl
sub
inc
pop
cmp
mov
vmovlps
fsubr
ja
testl
test
mov
and
push
add
out
mov
divb
inc
divb
push
cmp
in
out
or
lahf
or
stos
pop
mov
dec
and
dec
rcr
dec
mov
jg
pusha
pop
sub
decl
dec
jae
jg
pop
dec
loope
aam
rorl
shll
movsb
xor
aad
push
ja
mov
test
fsubrs
jnp
and
xor
insb
das
jmp
test
jae
cwtl
push
ds
xor
mov
iret
mov
sbb
fwait
sub
aad
out
push
xor
in
lahf
jg
into
push
in
test
mov
mulb
fwait
xor
xchg
xchg
sbb
cli
es
in
fwait
sbb
mov
cs
popa
jne
push
or
xor
push
add
and
mov
and
dec
xchg
jg
pop
push
in
add
pop
xchg
arpl
push
cmpps
dec
pushf
in
rorb
jb
cmp
stos
minps
mov
jnp
cld
cld
mov
cmpsl
add
jl
push
and
test
in
mov
mov
adc
data16
mov
pop
mov
rorl
je
cmp
sub
aam
dec
and
cwtl
in
or
inc
jo
xchg
cld
fwait
push
inc
lret
jnp
cld
or
dec
push
mov
ret
sahf
adc
repnz
shll
push
add
imul
jno
mov
std
xchg
push
loope
shll
xchg
cmp
outsb
lea
xor
cmc
mov
outsb
inc
adc
cmp
jl
fidivs
pop
push
sarl
push
push
popa
adc
pop
jmp
push
std
cltd
jg
add
mov
mov
mov
movsb
jmp
or
arpl
mov
ret
shrl
or
mov
inc
sub
ret
out
add
hlt
in
cmp
sbb
subb
mov
rcl
sbb
xchg
pop
cwtl
and
sahf
or
jge
xor
sub
cmp
jp
mov
or
popf
ljmp
sbb
sub
pop
jno
xchg
dec
pop
sbb
aas
jmp
jmp
in
pop
daa
rcrl
xor
pop
pop
shl
cmp
push
mov
aad
mov
sub
xchg
adc
push
jae
lock
xchg
mov
loope
shrb
out
test
jo
jo
or
xor
pop
ds
and
hlt
sbb
ds
das
jns
mov
out
data16
rcr
jmp
mov
adc
loopne
mov
dec
pushl
pusha
mov
ret
mov
loop
int3
loope
lds
pop
xor
mov
lcall
das
mov
sub
loope
stos
out
jle
push
mov
cmp
lods
fnsave
inc
arpl
cmp
rol
jmp
fstl
aas
pop
cmp
push
lcall
sbb
movsb
addr16
mov
cli
mov
shr
adc
push
divl
les
aam
inc
scas
out
popf
lock
inc
and
aam
inc
int3
fs
xchg
loopne
dec
in
jmp
or
or
adc
rcrb
pop
mov
les
lock
fwait
xor
popf
pop
popa
fisubl
cmp
loopne
insl
in
iret
and
ret
repnz
pop
out
shl
je
addb
repnz
das
stos
add
popa
inc
push
jae
mov
jle
outsl
shlb
out
test
test
stos
or
shll
mov
jg
mov
lock
cmp
mov
insl
add
js
and
out
mov
arpl
xor
xor
rcrb
stc
cli
fstpl
push
out
pop
mov
push
arpl
adc
xor
adcl
lods
int
sub
mov
mov
popf
xchg
jg
add
lret
jb
cld
xchg
in
mov
std
dec
xor
repz
call
in
setg
mov
lods
ja
or
mov
scas
adc
idivb
shlb
mov
cmp
mov
int
xchg
cmpsl
lea
hlt
gs
mov
push
test
xchg
jl
cmp
pusha
ret
xchg
mov
fidivs
addr16
rolb
pushf
ja
into
int3
and
add
mov
out
jge
mov
mov
ret
js
stos
sti
in
jne
test
pop
pop
sbbl
xorl
push
pop
jae
pop
add
xchg
jle
jmp
and
mov
xor
popa
mov
push
mov
pop
and
adc
pop
cwtl
in
fsubl
push
clc
sbb
fs
sbb
mov
stc
les
push
sahf
xchg
mov
out
popf
inc
fdivrl
shl
ljmp
push
stos
adc
xchg
lcall
jmp
sub
or
call
out
add
sub
sub
push
pop
notl
aaa
lods
iret
push
cwtl
lret
int
push
mov
negl
outsb
pop
fstl
cltd
testb
lds
jmp
mov
mov
test
mov
fisttpll
loop
xor
adc
test
lcall
mov
dec
jbe
scas
lret
out
rcll
and
xor
xchg
xchg
leave
fcomi
sarl
mov
sub
rolb
shlb
push
mov
sbb
or
or
add
les
ds
loope
fistl
xor
test
out
scas
mov
jle
out
pushf
addr16
enter
and
in
jae
dec
lods
cwtl
daa
imul
pop
and
aam
ret
pop
xor
addr16
pop
popa
mov
fisubrs
pop
inc
cmpsb
inc
aas
loop
les
ljmp
push
in
loop
notl
push
lods
ljmp
push
ds
gs
fsubr
xchg
xchg
enter
imul
das
mov
push
adc
jns
xor
std
fisubrs
pop
sti
fwait
add
push
aam
inc
out
mov
fsubr
fistpl
inc
push
sbb
rorl
pop
push
adc
push
dec
jmp
mov
dec
mov
mov
mov
jo
popf
or
push
xchg
push
mov
lods
ss
out
fmuls
imul
daa
rcrl
cltd
xorb
mov
ds
rol
cmp
jbe
xor
out
or
xor
pop
daa
mov
push
add
ds
loop
andb
push
lcall
data16
pop
scas
in
cmpb
clc
mov
fs
in
cwtl
fbstp
sbb
std
loopne
mov
inc
stc
pusha
pop
sub
jg
lods
xchg
or
mov
add
dec
loopne
stos
xchg
push
sarl
pop
repz
daa
push
xlat
pop
xchg
and
inc
sbb
adc
inc
add
jno
xchg
xchg
movsl
fwait
test
mov
loopne
mov
mov
and
adc
sub
aas
sar
out
aam
mov
pop
push
daa
ljmp
std
mov
and
dec
inc
nop
dec
and
push
call
lahf
movsl
ljmp
mull
sub
shlb
pushf
test
mov
stos
inc
pop
inc
mov
or
inc
push
dec
push
cs
out
cmp
add
stos
movsb
dec
pop
xlat
mov
imul
outsb
out
cmpsl
ret
add
mov
mov
fadds
dec
subb
dec
add
outsb
dec
xlat
jne
or
add
rclb
or
jns
rep
jmp
ffree
fsubs
loop
fs
mov
cltd
je
aad
cmpsl
addr16
fmuls
lret
test
das
mov
stos
es
sbb
jg
mov
pop
data16
add
clc
cld
outsl
les
gs
imul
aas
cmpsb
ret
sbb
int3
jne
sub
pop
mov
cmpsl
add
cmp
mov
ds
insb
ffreep
aam
push
out
stos
aas
sub
pop
pop
insb
sbb
rolb
daa
movsl
out
xchg
fsubl
jl
cld
pop
hlt
cs
dec
and
icebp
es
pop
dec
push
nop
pop
pop
or
cli
and
cmpsl
scas
es
prefetchwt1
push
pushf
test
test
or
mov
or
mov
aam
roll
sbb
adc
and
sarl
jns
mov
adcl
mov
sub
aam
cmpsl
rorb
jnp
es
dec
xorb
cmpsl
push
mov
mov
xor
loope
push
pushf
mov
lret
jno
stos
aas
les
lds
cli
enter
test
xor
icebp
movsl
test
jg
inc
std
aaa
mov
adc
add
inc
cmp
cmpxchg
mov
mov
loope
adc
push
ljmp
dec
xchg
ret
ret
xor
out
xor
outsb
aam
mov
imul
fistl
outsl
daa
int3
and
pushf
xor
shlb
test
push
push
stos
shrl
inc
cltd
pop
fcomip
dec
ss
int
lahf
cli
push
mov
call
nop
mov
mov
cmpsb
inc
test
push
pop
popa
imul
cmp
jle
push
adc
and
jb
fs
inc
cli
or
sarl
adc
into
add
adc
lock
mov
ret
std
nop
test
dec
push
dec
add
lock
add
xlat
sbb
ja
call
add
push
sbb
mov
pop
aad
push
scas
testl
dec
cmpsb
imul
ret
pop
mov
lds
jl
and
repz
jecxz
pop
inc
dec
sar
xor
test
es
xor
movsl
jp
sub
sbb
xchg
cmp
fisubl
jns
insb
push
mov
xor
mov
test
and
pop
xor
sti
cmc
sbbl
inc
sbb
sub
add
adc
daa
mov
test
je
pop
daa
fucomi
jb
push
out
xor
or
sub
xchg
lods
add
sub
cld
and
aad
or
data16
cmp
popa
cmpsb
test
xlat
add
mov
inc
or
xchg
sbb
call
shrl
mov
loope
dec
adc
mov
rcll
mov
jbe
and
push
data16
inc
mov
test
outsb
mov
fwait
push
mov
cmc
mov
push
stc
push
or
jg
lcall
push
ss
gs
pop
hlt
xchg
mov
sub
mov
aad
call
lret
add
jns
testb
lret
leave
cmpsb
stc
ret
hlt
mov
out
mov
mov
aad
sbb
int
lea
dec
repz
ljmp
loop
inc
jmp
sbb
and
pop
cs
je
mov
sub
add
add
or
jne
in
push
add
mov
out
push
dec
fiadds
push
dec
mov
loope
lods
push
mov
shlb
cmp
add
cmpsl
push
dec
mov
or
daa
dec
or
mov
xor
call
sbb
flds
cmp
mov
rolb
sub
gs
jne
repz
frstor
inc
cld
inc
movsb
jae
mov
or
aas
fdivr
pushf
add
aas
stos
pop
adc
iret
dec
shll
gs
xchg
sahf
jno
roll
inc
jne
scas
out
xchg
lret
es
pop
ds
push
mov
data16
mov
jae
test
cmpsb
in
lods
cmp
out
xchg
fnstcw
push
add
daa
xor
pop
loopne
pop
mov
pop
pop
pusha
sbb
fdivrs
pcmpeqd
shll
push
or
ret
outsb
mov
cmpsl
jno
pop
cwtl
inc
jb
jp
loope
dec
mov
lods
mov
fisubrs
mov
in
aad
jecxz
jnp
add
test
test
mov
cmpsb
add
in
mov
sub
adc
pop
adcl
pop
cmp
push
sub
mov
push
jg
push
xchg
inc
movsl
dec
fstl
out
mov
cld
js
in
movsl
fcoml
icebp
mov
mov
lock
mov
sub
lahf
es
sbb
into
and
addr16
mov
pop
leave
or
jno
sub
cmc
sbb
lea
cld
push
sbb
scas
mov
pop
sbbl
or
adc
mov
xchg
jp
mov
xor
sub
add
f2xm1
cwtl
arpl
sbb
aad
scas
int3
and
fs
imul
fdivrs
push
insl
xor
stos
add
ret
fidivrs
dec
test
jge
stos
mov
jmp
xchg
adc
ss
icebp
rcl
std
je
xor
mov
push
stos
push
mov
add
push
pushf
xchg
or
sahf
ja
test
popf
ljmp
outsl
dec
bnd
lcall
orl
scas
xor
mov
pushf
inc
sub
arpl
cwtl
xchg
or
dec
out
test
pop
ss
addr16
int
mov
xor
inc
xchg
sub
sbb
xchg
jecxz
push
sahf
and
mov
fiaddl
lods
ret
xchg
push
and
std
or
and
outsb
popf
pop
inc
pop
loop
jp
mov
xchg
or
fidivrl
dec
leave
jecxz
cltd
shrb
stos
sbb
xor
je
adc
leave
lea
aad
add
dec
sbb
xor
fsubrs
ljmp
sbb
fucomip
hlt
ficompl
jmp
stc
and
mov
or
js
in
jecxz
stos
inc
and
je
daa
mov
enter
jnp
add
mov
call
lahf
test
mov
mov
sahf
out
jne
outsl
inc
xchg
jnp
xchg
aas
add
sti
pop
aad
pop
in
adcb
repnz
dec
dec
push
lret
jle
shll
mov
into
out
fwait
hlt
lret
xchg
xorl
dec
jp
push
push
les
cmpsb
add
dec
sbb
lock
sahf
dec
pop
enter
xchg
in
and
sbb
loop
in
mov
mov
xor
andl
imull
rorb
test
int
shlb
stos
sbb
mov
sub
stos
and
or
xchg
insl
sbb
and
insb
lds
test
hlt
shrl
cmp
idivl
das
jecxz
rcrl
xchg
pushw
lcall
pop
notb
pop
push
pushf
in
inc
leave
idivb
sub
mov
inc
inc
push
ret
pop
in
rcll
mov
push
adc
fs
mov
mov
jne
rolb
fldt
ja
pop
mov
add
enter
mov
jecxz
xchg
jl
les
call
jo
and
mov
sbb
xchg
fmull
clc
lods
mov
sahf
sub
push
push
sbb
lds
push
cmp
cmp
push
loop
add
add
push
imul
pop
test
shrb
dec
movsl
inc
outsl
push
adc
out
mov
mov
gs
add
sbb
aad
filds
int
lret
inc
adc
cmpsb
shrb
dec
inc
or
call
xor
mov
add
xor
xchg
addr16
loopne
out
scas
sbb
push
adc
leave
je
push
test
and
push
pop
xor
push
loop
hlt
mov
xchg
ss
inc
mov
push
mov
lods
jnp
inc
push
hlt
mov
push
push
outsl
xor
pop
lahf
jbe
dec
push
sub
push
jo
push
in
or
addr16
inc
ds
dec
cmp
aas
push
pop
pop
iret
xchg
aas
insb
cmovge
je
repnz
scas
aaa
xlat
fnsave
jno
test
pop
rcr
bnd
stos
xchg
divl
fidivrl
mov
push
je
jge
xlat
outsb
ss
dec
mov
aad
jne
jle
pop
jmp
js
dec
mov
or
push
sbb
jbe
in
cmpsl
scas
aaa
repnz
mov
sub
shll
push
sbb
xchg
sarb
test
mov
sbb
insl
and
xor
and
in
sbb
lret
imul
imul
iret
scas
dec
rcrl
or
and
jno
roll
repz
dec
pop
fldl2t
rcl
cltd
cmpsl
sbb
sub
out
pop
test
lods
adc
mov
lock
sub
lea
imul
test
fimuls
adc
fwait
jbe
xor
fldl2t
inc
shll
dec
in
mov
push
pop
out
inc
adc
dec
cli
sti
stc
mov
mov
sbb
insb
mov
notl
xchg
call
fstpt
dec
dec
push
ficompl
mov
std
sbb
aam
mov
push
js
xchg
ljmp
movsb
into
cmp
dec
sbb
dec
cmp
arpl
jle
cmp
lcall
xor
xchg
dec
jb
xchg
push
in
xchg
pmullw
push
out
push
dec
arpl
xchg
mov
sbb
jmp
aad
mov
mov
sti
pop
add
lret
daa
pop
add
jge
gs
xchg
nop
dec
test
and
jns
or
push
jb
jnp
pop
ds
loope
loop
cmp
jp
rol
push
out
adc
mov
push
jecxz
push
pusha
ds
repnz
cmpsl
jno
out
inc
gs
lock
rcr
jmp
gs
pop
cmp
jp
rcll
dec
fistpll
je
lds
cmpl
outsl
les
xchg
xor
js
mov
aas
xchg
xchg
ja
lret
jbe
push
addl
in
daa
jmp
cmp
cld
xchg
and
push
imul
mov
pop
fwait
mov
bound
sbb
mov
scas
lea
data16
dec
test
testl
incb
lea
je
jl
pop
jae
cmc
mov
int3
dec
fsubp
cmp
fiaddl
pushf
in
jg
adc
mov
jnp
daa
pop
dec
or
rcl
outsl
data16
xchg
pop
add
add
lds
push
push
ljmp
call
repnz
pop
pop
nop
dec
arpl
mov
inc
adcb
ds
shl
lret
mov
pusha
add
adc
mov
adc
movsl
fldl
adc
mov
lcall
fdivl
loope
sub
movsl
lds
pop
addl
push
push
out
fldcw
mov
inc
jle
stos
outsb
fs
xchg
cltd
jecxz
sti
movsl
cpuid
adc
cmpsl
sub
cmp
jae
dec
pop
jbe
mov
fstpt
fwait
lods
fmuls
data16
push
cmpsb
cltd
cmp
lahf
fimull
push
sbb
mov
setne
lret
in
add
add
push
jge
mov
and
lret
xor
ret
aad
mov
punpckhbw
jns
cmp
sub
mov
dec
pop
pop
sti
ja
mov
dec
loopne
data16
adc
xorb
sbb
aaa
cmp
cmp
cltd
pop
mov
and
mov
test
divl
scas
fistpl
cmp
mov
pop
mov
mov
and
pop
scas
rcrb
popa
push
cld
daa
push
sahf
cwtl
sub
mov
jp
cld
scas
imul
sub
movsb
cmp
call
mov
sbb
dec
test
sti
dec
xchg
repz
pop
xor
xor
ss
test
pop
jmp
out
pop
outsb
cwtl
mov
jnp
mov
inc
out
sbb
rorb
andb
push
sub
test
outsb
jae
mov
fstps
or
and
inc
addr16
jno
scas
xchg
mov
push
push
push
popf
or
lea
sub
inc
test
test
into
scas
out
aad
js
cmp
shrl
mov
enter
and
pusha
call
xchg
cmp
js
push
sbb
and
cmp
cmp
shlb
aaa
jo
push
pusha
cmp
inc
xor
jmp
leave
or
xchg
adc
fidivrl
pop
push
cmc
jmp
inc
inc
mov
adc
rorl
iret
cmpsb
fcmovnbe
push
adc
add
xor
daa
cltd
and
xchg
cmpsl
inc
mov
inc
add
cmc
cwtl
fdivrs
shll
out
fadds
fisubrl
jne
mov
fildl
fidivrs
add
into
pop
adc
leave
push
shl
and
lods
push
clc
xchg
pop
data16
xchg
loope
int
pop
int
or
cmp
sbb
pop
enter
xchg
in
sbb
mov
add
in
lcall
pop
add
add
dec
dec
mov
dec
mull
test
mov
mov
push
sub
pop
test
movsb
dec
negb
sarb
mov
pop
int3
rcrb
inc
outsb
shll
dec
sbb
insb
jns
xor
adc
mov
mov
sub
setne
cmp
jl
out
ja
pop
es
adc
loopne
lcall
cli
imul
imul
ljmp
mov
cwtl
push
movsb
inc
sti
jbe
push
cli
and
mov
test
inc
push
sbb
lods
dec
lods
lds
iret
insb
into
ret
lds
fmull
aad
int3
push
pushf
lret
dec
dec
pop
sahf
push
cmp
mov
adc
lret
lahf
mov
xor
pop
out
aam
mov
inc
shr
pop
xor
mov
mov
gs
inc
andb
pusha
mov
cmp
mov
mov
mov
xor
fiaddl
fists
pop
les
rorb
sub
sub
dec
cmpsl
sbb
lea
xchg
nop
cld
mov
sub
bound
addb
add
dec
cmp
sbb
iret
lock
sbb
or
push
lods
mov
mov
mov
pop
adc
filds
mov
dec
xchg
pop
sub
fs
add
pop
push
xrelease
cmp
mov
push
inc
daa
mov
push
sbb
pop
pop
dec
xchg
mov
xchg
ss
scas
clc
mov
cmp
fadd
pop
bound
pusha
mov
mov
icebp
das
das
mov
dec
mov
jmp
fsubr
je
mov
into
test
cmp
sbb
int
out
or
jno
or
leave
mov
add
rcrb
xchg
and
cmp
dec
divl
rcr
call
push
xlat
cmpsb
mov
add
fists
call
fs
mov
lods
xchg
jb
shlb
push
pop
lods
and
js
test
xor
jno
push
mov
push
pop
inc
cmp
bound
jmp
push
fld
ret
aad
std
mov
fsincos
xor
std
or
sbb
aad
push
xchg
cmpsb
testl
xchg
in
sbb
cmp
test
xor
dec
std
pop
mov
dec
add
loopne
adc
cs
es
xchg
pop
mov
fbstp
adc
ds
push
sub
rorb
adc
adcb
sub
mov
inc
dec
xchg
jg
aam
fnstcw
dec
mov
add
mov
les
cli
sbb
pop
icebp
or
cmpsl
andb
sub
mov
enter
jmp
daa
add
int3
lods
jo
mov
cmpsb
out
xchg
sub
jecxz
xor
xchg
int
lock
test
testl
mov
and
pusha
push
popa
mov
xor
sub
iret
jae
dec
inc
cli
scas
test
ljmp
xor
loope
inc
mov
adc
sbb
push
enter
sub
or
xchg
loop
pop
push
aaa
mov
inc
sahf
bnd
out
data16
clc
xchg
fsubr
stc
or
mov
test
dec
pop
fildl
jle
jmp
fbstp
jp
call
pop
push
int3
add
cs
es
mov
cld
les
inc
out
jb
pop
jo
or
stc
test
push
hlt
xchg
sub
or
add
mov
mov
or
xor
cmp
adc
fcomp
push
pop
cmpsb
jle
pop
imul
mov
sbb
mov
sarl
push
lahf
mov
cmc
movsb
mov
movsb
dec
add
out
imul
scas
cmp
or
pop
jo
xlat
cmp
push
fldl
jno
xlat
ss
jp
popa
in
sbb
add
out
xchg
sbb
call
push
cmpsl
push
dec
jle
mov
popf
xor
mov
out
ret
inc
inc
pop
adcb
mov
mov
das
das
and
mov
sarl
add
xor
push
fxch
popa
shrb
and
sub
clc
add
push
stc
test
cmpb
loope
push
sahf
pop
lock
add
sbb
in
sahf
cmp
bound
and
mov
jns
enter
cmp
add
hlt
mov
clc
xchg
add
sbb
dec
ficomps
lret
cmpl
mov
ljmp
jecxz
stos
pop
adc
cmpb
sbb
das
push
dec
add
jb
jbe
fwait
mov
mov
dec
xchg
ljmp
int
xor
lock
fisubrs
xchg
sbb
das
pop
cmp
out
addl
mov
loopne
sbb
mov
divb
loope
sbb
out
dec
inc
push
add
pop
xchg
dec
shll
ret
sub
into
loope
mov
adc
sub
fwait
xor
dec
popa
jnp
pop
push
xor
mov
test
mov
and
dec
adc
sbb
outsl
daa
pop
sbb
nop
or
mov
inc
orl
jmp
xchg
std
mov
pusha
cmc
mov
or
sub
or
push
add
jnp
jne
into
cmpsb
push
mov
add
es
jp
add
repnz
js
adc
sahf
cmpl
push
sub
mov
call
pusha
push
sub
test
mov
pop
mov
cli
pop
jae
adc
lret
and
cmp
push
mov
xchg
pop
outsl
push
mov
ret
rcrb
mov
jno
cmp
cwtl
insl
add
mull
cmpsb
add
es
jl
jecxz
mov
mov
cmp
xchg
cmp
jp
push
scas
insl
stos
mov
shrb
pushf
lods
pop
mov
les
fucom
subb
cmp
jbe
mov
push
lret
push
out
sbb
mov
or
jb
mov
or
lods
nop
sub
or
cmc
or
ss
rcrb
xchg
out
clc
enter
imul
lcall
pop
out
repnz
xchg
or
pop
icebp
icebp
add
jns
inc
lahf
fs
xor
jmp
shlb
pushf
fcomp
out
jmp
aaa
out
shlb
cli
clc
jmp
sbb
ret
repz
jle
push
out
ss
xor
push
jmp
and
xchg
mov
push
pause
mov
shl
leave
dec
outsb
iret
cmp
adc
xchg
sub
out
push
imul
dec
out
scas
push
mov
pop
inc
lods
pusha
ret
push
add
mov
outsl
leave
xchg
mov
sbb
rcll
xchg
addb
push
add
xor
xchg
jl
sahf
fwait
lcall
fcompl
inc
out
jbe
mov
ljmp
test
ret
lahf
mov
mov
leave
icebp
pop
flds
lods
lret
bound
push
mov
test
xor
xchg
bound
mov
loopne
ffree
pop
lret
ret
ja
out
enter
lcall
mov
in
xorl
stos
aaa
sbb
ds
mov
cli
pop
sub
addr16
jge
add
mov
sbb
or
sub
sub
lcall
popf
push
pop
imul
pushf
pushf
sbb
mov
sbb
mov
loop
enter
jecxz
jge
iret
xchg
and
pop
orl
sbb
jp
dec
daa
call
aam
std
std
arpl
and
sbb
iret
into
mov
pop
inc
mov
cld
jmp
pop
loopne
pop
shrl
xchg
sahf
or
or
lret
pop
mov
jg
and
shrb
fs
jl
push
jle
stos
pop
jle
aam
push
push
adc
stc
and
add
mov
fisubrl
iret
sbb
mov
xor
mov
clc
js
mov
int
stos
les
and
movl
orl
adc
and
or
and
adc
cwtl
clc
mov
or
inc
outsl
ss
into
push
aas
push
stc
test
sbb
enter
int3
inc
out
lret
push
xor
lock
inc
stos
data16
pop
jp
adc
jno
call
lods
dec
push
mov
and
inc
lcall
sbb
xchg
out
xchg
mov
mov
outsb
testl
outsb
pop
jl
loope
xor
add
xchg
push
or
mov
lahf
pop
mov
int
mov
adc
cmpsb
dec
push
loopne
and
out
jne
sub
xlat
lods
fcomps
mov
dec
dec
loop
test
fcmovnu
fsubrl
push
shll
repnz
je
fstps
xchg
mov
leave
iret
data16
adc
aam
xor
pop
cmp
arpl
imulb
lods
adcb
cmp
pop
cmp
add
sbb
push
lret
fcmovnu
cmp
push
sub
pusha
retw
jnp
out
in
adc
mov
xchg
inc
push
dec
insl
fisttpl
pop
int3
test
sub
add
add
das
es
jnp
xor
jne
stos
loopne
fwait
cmp
cmp
fidivs
pop
sub
add
fmull
cmp
pushf
xchg
fmull
pop
mov
loope
dec
inc
adc
jno
das
pop
xor
mov
mov
cwtl
int
cli
push
test
jo
or
or
sbb
ds
mov
mov
cmp
adc
fwait
xor
mov
jle
mov
lods
hlt
or
mov
xchg
scas
gs
mov
iret
out
movsl
icebp
out
aaa
ds
roll
adcl
jae
iret
jae
std
xor
push
je
push
fucomp
sbb
sub
pusha
sub
test
daa
xchg
jbe
cmp
add
adc
sbb
inc
jle
adc
sbb
add
sub
fwait
popa
shl
loopne
into
std
jno
lea
pop
sub
pop
cmp
das
mov
sbb
add
dec
shrl
mov
mov
dec
pusha
push
mov
sahf
xor
insl
add
push
dec
jge
lahf
popa
loope
lahf
imul
lret
jne
push
popf
rsqrtps
mov
loopne
xor
adc
insb
mov
jns
jns
les
lcall
jmp
or
dec
and
adcl
mov
rcll
stc
inc
mov
test
aaa
repnz
in
xchg
xchg
jbe
frstor
pop
lret
mov
gs
mov
scas
cs
adc
sbb
add
add
loopne
push
xchg
imul
mov
add
data16
sub
lret
mov
pop
or
popa
into
enter
clc
pop
int3
gs
sbb
xchg
pop
dec
jecxz
out
hlt
pop
les
clc
and
jg
sbb
lcall
mov
push
lea
fcmovnb
mov
cmpsb
jl
adc
mov
mov
addr16
movsl
nop
or
inc
into
mov
std
repnz
jle
mov
cmc
mov
addr16
fchs
sahf
in
pushf
das
pop
movsl
stos
adc
cmpsl
pushl
enter
inc
cmc
cmc
dec
dec
ljmp
mov
mov
dec
or
shl
and
push
jge
add
call
jne
xlat
in
shlb
or
mov
sub
sub
adc
pop
and
into
movsl
xchg
pop
repz
xchg
adc
adc
mov
repnz
lock
and
js
out
xor
inc
bound
lcall
jbe
fwait
andl
insl
outsb
stc
jmp
jmp
int3
outsl
ljmp
fsubs
dec
adc
or
lea
pop
in
cmpsb
jns
je
jmp
in
jne
fwait
push
xlat
stos
inc
pusha
fnstsw
pop
scas
sbb
aas
fwait
push
movsl
push
cwtl
pusha
enter
mov
push
cltd
pop
dec
mov
push
xor
dec
aaa
dec
cli
cmp
call
jl
xor
jno
fwait
test
dec
leave
dec
mov
inc
mov
movsl
adc
mov
in
insb
and
sahf
mov
nop
dec
cmp
jge
mov
jge
loopne
add
pop
ja
dec
pushf
xlat
sub
inc
pop
lahf
xor
pop
stos
fsubl
push
push
leave
pop
adc
shll
and
dec
test
push
not
outsl
push
addl
push
jmp
inc
jb
sbb
mov
adc
mov
into
mov
mov
cmp
fsubrs
ja
hlt
push
call
jmp
into
mov
jbe
dec
loop
mov
add
dec
idivb
out
shlb
adc
mov
push
xchg
sbb
dec
push
sbb
fwait
xchg
dec
sub
movsb
pop
cmp
push
fsubs
ss
adc
inc
flds
cmp
mov
loop
in
cmc
in
dec
movsl
or
cmp
push
adc
lahf
dec
mov
mov
mov
ja
adc
rcll
int3
xchg
ror
or
pop
sahf
testb
dec
mov
popf
cmpsb
jp
stos
ljmp
inc
adc
out
sbb
mov
jmp
jl
int3
sbb
push
cmp
es
lcall
cmc
jmp
or
cmp
push
pusha
cmp
into
mov
cltd
jne
testb
and
adc
sbb
or
inc
push
ss
dec
sub
enter
sti
fwait
bound
adc
stos
idivb
pop
out
mov
ret
cmpsb
rcl
mov
and
and
xlat
pushf
xchg
pop
push
je
popa
je
mov
sbb
lods
lock
fisubrl
lcall
sub
jae
mov
cmp
iret
lods
jmp
jge
cmpl
push
fildl
movsb
mov
xchg
pop
leave
pusha
mov
xchg
sub
cmp
rcr
jl
xorl
popa
les
popf
in
jg
in
aaa
into
push
test
jp
stc
lods
push
into
jp
enter
ljmp
in
test
add
add
or
ljmp
jb
adc
dec
popa
and
in
mov
mov
inc
je
or
or
hlt
cmp
sbb
pop
pop
pop
divb
sarl
mov
pop
xchg
inc
mov
sub
add
lods
imul
and
lods
mov
xchg
rcl
pushf
std
adc
mov
cld
punpcklwd
jl
mov
xchg
adc
xor
loope
lea
lock
inc
mov
pop
jo
pcmpgtd
les
test
subb
push
insb
dec
cmpsb
fistl
or
push
aad
js
test
sti
pop
data16
xchg
sub
bound
dec
add
sub
push
aam
imull
sub
pop
mov
push
mov
pop
test
mov
das
dec
dec
push
mov
test
pop
xchg
mov
add
out
test
arpl
in
pop
leave
bound
inc
adc
adc
lea
jg
sub
xchg
pop
test
int
sub
add
push
or
imul
sub
outsb
repz
ret
dec
add
push
mov
jl
xchg
mov
dec
pop
enter
cmp
es
cmp
and
out
mov
dec
out
ds
xchg
fwait
xchg
xor
add
inc
add
xor
mov
lods
inc
mov
mov
int
es
sbb
sbb
mov
popf
jo
add
mov
jp
ret
nop
fstps
fstl
jb
cltd
cs
push
out
scas
xchg
adc
and
add
adc
mov
out
lea
ret
xlat
mov
cs
ljmp
jmp
insl
sub
nop
testb
cmpsl
lea
cwtl
pop
lret
or
sub
sub
cmp
ja
sahf
sub
sar
sbb
pop
mov
pop
jbe
jle
imull
into
and
loope
and
inc
cld
inc
fdivs
rcrl
add
cld
xchg
mov
ret
sbb
cmc
into
lods
jg
out
xchg
xor
daa
push
sbb
fdivl
ds
push
mov
mov
mov
cmp
jns
push
mov
mov
add
jge
imul
cwtl
test
sarl
xchg
xchg
cli
xchg
lods
hlt
pop
imul
repz
inc
mov
xor
negb
pop
sbb
loopne
mov
jmp
jl
jne
or
or
jle
push
pushf
mov
es
fstps
and
inc
xor
push
in
inc
dec
loope
stc
pop
punpcklbw
dec
sbb
cmp
jl
pop
adc
std
mov
or
xchg
mov
and
ja
jns
je
adc
cmp
pushf
push
mov
adc
dec
inc
pop
inc
cmp
push
ja
sub
daa
cmp
fdivrs
mov
int
pop
ljmp
out
repnz
loop
jecxz
jp
xorb
inc
inc
mov
aaa
cmp
enter
jl,pt
push
insb
cli
aaa
lods
ljmp
and
cmp
jns
sti
mov
popf
sub
das
inc
sub
insb
daa
in
repz
add
mov
mov
cli
xchg
mov
ret
xchg
adc
cmp
xchg
in
pop
rorl
add
cmpsl
fldt
cmc
std
cltd
mov
cli
cmp
into
cmpb
sbb
cmp
push
cmp
lret
push
out
loope
loop
rorl
gs
scas
pop
out
movsl
lods
int3
fdivrl
jae
and
jp
lret
lods
or
mov
fcoms
insb
cmpsl
xor
std
pop
xchg
mov
add
dec
sarb
dec
and
outsb
xchg
sub
in
pop
xorl
jbe
sbb
push
inc
mov
pop
shl
test
bound
in
mov
pop
mov
fists
adc
lods
or
jb
jp
mov
addr16
push
loopne
loopne
fsts
clc
loopne
adc
ss
lret
aaa
test
lret
add
lcall
imul
pop
dec
inc
inc
cmp
stos
cmp
imul
es
cmpb
push
adc
mov
mov
rcrl
push
sub
hlt
dec
test
mov
jo
add
test
or
add
cmc
add
push
pop
sbb
pop
subl
pop
push
cmp
shl
ficomps
fistl
shl
cmp
and
cmpsb
aas
dec
and
jae
outsb
scas
mov
out
jg
xchg
dec
xor
adc
stos
mov
sti
xor
jl
push
daa
push
test
mov
or
push
cmp
add
mov
pop
outsl
mov
add
sbb
ja
adc
cli
cmpsb
repz
orl
fiadds
cmpsb
cmc
mov
imul
test
mov
cmpsb
sbb
popf
icebp
mov
mov
push
loopne
lret
mov
push
xor
xchg
mov
scas
int3
sub
push
icebp
adc
test
stos
dec
mov
into
xchg
or
jle
dec
and
out
pop
rol
xor
sbb
mov
ret
fldt
pop
mov
mov
cmp
ficomps
mov
sbb
pop
jp
fstpl
xor
inc
cwtl
lods
dec
mov
into
mov
adc
and
imul
stos
jo
mov
push
shlb
dec
push
inc
dec
inc
mov
sub
xchg
xchg
in
das
add
clc
xchg
xlat
xchg
out
xor
add
inc
imul
data16
sbb
mov
add
lcall
sti
mov
mov
rcl
fs
jbe
mov
and
pop
mov
popa
pop
fildll
or
inc
es
cmpsl
jae
stc
pushf
movsb
add
mov
sbb
mov
arpl
icebp
mov
mov
or
mov
outsb
cmp
shrb
xchg
sahf
bnd
ret
push
hlt
mov
add
sub
inc
fnstenv
sarl
adc
lock
pop
mov
pop
int
lret
sub
push
test
movsl
dec
outsl
mov
xchg
imul
mov
xor
ja
or
xor
lahf
xor
jecxz
or
push
mov
dec
pop
sub
add
fs
adc
lods
xchg
dec
inc
push
sti
jecxz
sti
cmp
sahf
or
add
cwtl
std
mov
push
push
stos
fsubl
push
xor
and
sbb
dec
lds
xchg
addr16
xorb
mov
pop
clc
mov
cmc
xchg
jb
fwait
das
pop
push
scas
test
ja
sarl
insl
loop
mov
dec
aam
aad
jg
or
xchg
or
mov
dec
fstpl
hlt
test
cli
mov
mov
scas
xor
add
loope
cmpsl
lods
dec
push
sbb
test
stos
je,pt
orb
lds
sbb
xchg
mov
jne
icebp
jg
inc
imul
mov
bound
sub
shrl
push
repz
leave
xchg
jmp
bndstx
dec
orl
das
mov
popa
inc
dec
mov
add
and
mov
fadd
or
ret
leave
das
imul
in
das
shlb
inc
cs
push
jecxz
push
xchg
and
mov
add
lcall
push
orl
ja
cli
leave
push
push
cmp
pop
add
fcompl
pop
fidivl
jae
inc
in
int3
pop
cmc
push
mov
div
mov
sub
jno
push
outsb
shll
xchg
sti
js
adc
cmp
insb
or
mov
scas
add
sbb
mov
mov
shlb
inc
ret
jmp
cmp
das
jg
jge
pop
pop
mov
jbe
xor
fstpt
add
push
xor
notl
xchg
int
mov
loopne
jg
inc
fmull
mov
dec
push
ljmp
aas
or
mov
mov
and
xor
pusha
or
into
shlb
ljmp
sbb
incb
push
mov
push
fidivl
sbbb
fincstp
mov
sbb
dec
xchg
dec
pop
cmp
xchg
sub
mov
mov
xor
or
or
out
test
dec
add
inc
push
inc
push
adc
addr16
mov
shrl
mov
icebp
pop
jp
popl
ss
out
mov
cmp
stc
adc
cmpsl
add
dec
inc
stc
out
sbb
dec
out
sub
insl
mov
jl
inc
loopne
pop
adc
scas
push
cld
mov
dec
outsb
test
xor
hlt
and
in
and
negl
fdivp
aam
negl
push
jne
stc
adc
lret
sub
dec
push
sub
out
jl
jnp
push
push
lock
adc
into
xchg
sbb
inc
stos
test
mov
aad
outsb
ror
mov
fs
stc
fnclex
and
orl
pop
andb
mov
ror
mov
pop
loope
xchg
or
inc
out
mov
rorb
aas
movsb
jns
and
aad
or
jo
dec
adc
push
popa
lret
iret
pop
movsb
iret
dec
sbb
xchg
mov
shlb
or
sarb
insb
adc
mov
xchg
jecxz
jne
fstpt
in
mov
hlt
dec
xor
cwtl
scas
les
cmp
or
xor
add
mov
push
out
in
mov
in
sbb
in
decb
mov
push
aad
or
push
icebp
mov
jle
push
mov
dec
dec
outsl
mov
inc
stos
icebp
test
test
ret
lahf
sbb
mov
rol
out
jb
je
cmovle
insl
inc
fsts
cmp
pusha
xor
mov
outsl
daa
insl
adc
or
enter
enter
js
mov
ss
add
in
fs
sbb
xor
clc
adc
xchg
loope
aas
fildll
sbb
shlb
es
lcall
sub
add
dec
jg
iret
sbb
stos
mov
add
adc
cs
xor
jo
add
add
popf
lret
or
shrb
and
pop
adc
mov
xchg
dec
out
loop
out
movb
mov
push
mov
jns
jmp
cwtl
stos
cs
cld
into
sub
xor
xor
or
sub
and
adc
roll
sti
loop
mov
ss
xchg
mov
jle
sub
dec
adc
fldcw
lahf
into
sbb
jl
popa
nop
jne
xor
iret
push
shl
ja
mov
mov
push
adc
popf
push
xor
nop
add
pop
and
sti
addr16
ret
lods
cmpb
sbb
push
fwait
test
int
xchg
cmp
fs
xor
fstl
push
cmp
cmp
lcall
flds
bound
mov
ljmp
shll
adcl
pushf
jmp
mov
flds
movsl
inc
stc
and
jnp
in
lret
mov
sbb
dec
push
stos
loop
xchg
daa
stos
jb
xchg
mov
mov
movsl
scas
push
add
xchg
nop
pop
jo
mov
stos
aaa
mov
mov
enter
fcomps
or
dec
dec
gs
sub
dec
nop
cmp
push
dec
jnp
popf
xor
adc
in
push
fs
jge
lret
shll
fsubl
mov
stos
andl
jbe
dec
test
icebp
clc
nop
js
push
loopne
xor
cmp
jns
add
subb
inc
mov
xor
add
and
or
adc
xchg
sbb
ja
fdivrs
int3
out
mov
and
mov
gs
dec
inc
in
in
xchg
xchg
js
xchg
and
lahf
push
in
lcall
cmp
aad
and
faddl
jno
cmc
lcall
lea
int3
mov
roll
xchg
ret
pop
or
scas
xorl
orb
repz
dec
dec
and
fmull
jecxz
add
lahf
sub
lea
mov
sub
mov
cld
lret
pop
loop
lret
sti
xchg
mov
lcall
jecxz
mov
push
or
mov
push
dec
and
ds
cmpsl
in
xchg
add
xorb
dec
push
fnstcw
cltd
mov
movsl
mov
jmp
lods
mov
jb
xor
andl
xchg
pop
jecxz
lahf
divb
pop
dec
add
sbb
dec
adc
inc
inc
push
popf
mov
jmp
ficoml
mov
push
scas
push
gs
test
push
mov
nop
mov
push
sub
inc
pop
inc
mov
mov
fsts
or
or
out
pop
icebp
mov
xchg
jns
push
sub
sub
in
adc
mov
inc
dec
xor
fiaddl
mov
xchg
fsubs
jmp
es
cmp
aad
fadds
jmp
int
sets
sbb
adcb
add
leave
lret
dec
add
arpl
movsl
mov
cmpb
mov
push
xchg
or
nop
stos
jg
les
sti
sub
jne
mov
movsl
adc
xchg
mov
fdivrs
dec
fistpl
clc
add
sarl
es
data16
shl
imul
loop
push
pop
dec
xor
cmp
add
push
cltd
or
mov
in
dec
aad
jbe
fdivs
inc
push
mov
cmpsl
std
jg
xor
hlt
sub
in
sub
pop
mov
mov
ret
mov
in
jmp
cld
add
adc
pusha
or
push
dec
cmp
mov
dec
out
pop
out
hlt
push
mov
mov
adc
out
adc
cld
push
fdivrs
cmp
mov
adc
add
mov
mov
or
sub
stos
call
inc
mov
add
pop
mov
mov
js
pop
rdmsr
rorb
push
sub
and
xchg
sbb
imul
rcl
shlb
test
jne
push
pop
sbb
ret
bound
pop
loope
aaa
jmp
loopne
loope
loopne
mov
and
dec
dec
pushf
repz
mov
add
fistps
jmp
dec
mov
inc
stos
inc
jb
adc
jmp
mull
mov
lret
xchg
je
popa
xor
jbe
shr
mov
add
mov
mov
mov
into
pushf
inc
arpl
mov
push
push
fsubrl
shrl
shll
xchg
icebp
repnz
sahf
and
push
jno
into
ret
add
idivb
lods
loopne
lret
dec
in
subl
pusha
imul
and
push
int
dec
mov
push
stc
xlat
push
ja
xchg
subb
or
repz
ja
ret
dec
hlt
and
popa
mov
scas
fstl
mov
push
in
sahf
lock
sti
fisttpl
cli
add
sbbb
shll
out
loopne
lcall
adc
sbb
inc
mov
pushf
xor
ss
inc
bound
pop
pop
add
and
push
xchg
and
lret
bound
push
adc
js
mov
orb
mov
lea
iret
mov
pop
lahf
xchg
cmovl
pop
hlt
cltd
push
loop
lds
lods
iret
sub
dec
mov
hlt
jle
es
sub
lock
repz
idivb
ljmp
sub
outsb
clc
jo
mov
adc
test
inc
cmp
cmp
roll
pop
sahf
mov
aam
push
test
fisubrl
pop
int3
jo
sub
das
aas
push
mov
cmc
je
or
testb
mov
popa
out
cltd
push
addr16
rol
insl
inc
add
pop
mov
push
xchg
push
mov
pop
out
sahf
aam
lret
jmp
enter
sbb
sub
sbbb
push
push
inc
add
in
cmp
add
daa
stos
add
dec
pop
std
mov
call
mov
cli
insl
add
shll
les
inc
aas
jo
push
int
push
lret
gs
push
or
sbb
int3
ss
flds
test
loope
jb
imul
mov
sub
neg
xor
xor
jp
sbb
sbb
aad
aaa
into
sbb
jg
enter
outsb
cmpsb
add
sub
xorb
cmp
add
or
movsl
mov
scas
dec
jge
mov
pop
mov
jnp
or
xchg
inc
add
sti
push
and
ss
cmp
test
clc
sbb
fisttpl
lahf
lds
dec
sbb
add
clc
adc
sub
sarl
mov
frstor
inc
loop
jbe
in
pop
xor
ja
pop
cltd
ljmp
faddl
mov
push
in
mov
pop
inc
inc
jmp
jge
cmp
arpl
dec
jp
negb
inc
xlat
push
cmp
sbb
pop
pop
sahf
xor
pop
jecxz
stc
stos
lods
inc
test
mov
les
mov
xchg
decb
lahf
xor
nop
mov
fisubl
jo
pop
jb
push
sahf
jne
fucomip
sti
jnp
lret
or
cmpb
mov
mov
jle
jge
fdivrl
insb
outsl
js
aam
lea
add
enter
inc
imul
xchg
mov
js
mov
insl
scas
inc
adc
leave
xor
add
mov
pop
push
std
jp
inc
pop
push
inc
sti
es
stos
sub
mov
lds
xor
xor
sbb
xorl
out
cmp
cs
dec
mov
in
jns
sub
es
out
cld
lcall
pop
out
and
sub
enter
push
fs
jecxz
js
mov
push
mov
fsubrs
pop
icebp
sbb
mov
pop
bnd
stos
into
jp
stc
mov
fimull
or
icebp
out
scas
lock
or
xor
adc
mov
mov
inc
pop
mov
adc
nop
es
xor
pop
sub
pop
inc
xchg
mov
stos
sbb
daa
mov
fwait
sub
cmp
jp
popa
aaa
or
or
push
push
xchg
sahf
nop
sub
jne
pop
subl
cmp
pop
les
dec
call
in
lds
jb
xor
sbb
pop
mov
fsubr
and
sti
popf
stc
jmp
sbb
clc
adc
push
jl
int3
imul
daa
and
dec
psubd
int3
or
aas
out
test
push
popf
in
jne
jg
jg
sub
fnstenv
fs
mov
ret
jns
pop
inc
fidivs
push
ds
nop
xor
nop
lahf
and
fstpt
mov
add
cli
xchg
add
negb
loope
dec
or
rcll
enter
push
jge
add
mov
into
xchg
jbe
inc
out
ret
daa
shrb
bound
cmp
cs
in
mov
pop
jb
cwtl
inc
dec
scas
nop
push
loopne
loopne
imul
inc
dec
push
push
divb
sahf
cmp
xlat
outsb
mov
lret
and
cld
xor
in
jne
in
mov
dec
hlt
pop
xlat
push
jg
inc
nop
pop
pusha
pushf
xor
cmp
subl
call
xor
ds
pop
inc
inc
in
push
lea
call
xchg
pop
fwait
mov
movsb
mov
bound
push
push
sbb
mov
rolb
in
lcall
push
xchg
mov
rcrl
mov
jle
test
mov
enter
addb
mov
jge
dec
arpl
clc
xchg
pop
lahf
clc
std
jne
loopne
push
cmpsl
pmaxsw
or
daa
cmc
nop
test
aam
and
in
fs
push
jno
and
ficoml
inc
inc
xlat
jbe
test
cli
mov
pop
jb
sbb
mov
cmp
iret
data16
clc
nop
pop
jecxz
add
cmp
push
cs
push
out
sub
pop
roll
jbe
add
mov
mov
push
adc
xor
pop
mov
leave
cmpsl
adc
mov
sarl
sub
int
ret
mov
hlt
out
xlat
add
dec
xor
xchg
test
inc
movsl
cmp
add
pop
cld
jle
arpl
pop
repnz
push
mov
test
inc
in
ja
jg
js
mov
dec
loop
or
in
shll
mov
out
add
pusha
lock
cmp
aam
jmp
push
in
sub
lea
enter
xchg
jae
mov
adc
pop
pop
int
mov
cmpsl
pop
pushf
add
and
stc
jo
mov
ret
sbbb
push
adc
out
adc
sbbl
fimuls
pop
cmc
movsl
xlat
cli
sar
sahf
mov
and
cmpsb
arpl
inc
xchg
stos
cli
lods
jmp
clc
aad
pop
test
subl
jl
std
xchg
push
out
mov
xchg
xchg
jle
icebp
pop
popf
and
push
imul
aad
xor
jae
adc
sahf
pop
mov
fstps
roll
test
jl
mov
fsts
lea
adc
push
imul
lret
xchg
lea
dec
adc
fwait
ss
in
cs
stos
mov
ds
cmp
call
xor
sti
cs
popa
mov
lods
jne
mov
cmp
pop
fwait
es
lods
pop
in
cmpsb
repz
rcll
inc
out
outsb
in
in
xor
in
inc
addb
pop
mov
xor
lds
mov
inc
push
cmpsb
shl
test
dec
adc
cmp
sarl
adc
push
pusha
pop
sbb
sub
ret
jb
mulb
mov
mov
bound
push
scas
call
adc
xchg
jno
lock
shl
mov
mov
shll
adc
movsb
pop
dec
lea
popa
out
dec
push
jmp
add
add
das
jmp
cmc
cmp
or
cmp
jae
mov
out
iret
add
or
loop
mov
ret
arpl
or
push
test
cs
out
sarb
and
xchg
add
sub
ds
and
xor
inc
cmp
in
mov
or
fsubr
clc
xchg
xchg
pop
stc
lret
jnp
pop
lock
pop
xchg
incl
sbb
inc
inc
pop
jp
xchg
lods
mov
fldenv
movsb
inc
daa
jl
lret
mov
dec
mov
adc
imul
jae
pop
inc
icebp
adc
inc
xchg
pop
icebp
and
jbe
fwait
leave
mov
sahf
sub
lea
pop
cli
inc
adc
lahf
cli
jl
sarb
lods
sbb
mov
pushf
movsl
cmp
sbb
dec
pop
adc
sbb
xchg
cmp
mov
mov
push
or
shr
gs
xor
cmp
and
lret
lods
inc
shll
push
mov
or
sbb
jecxz
jo
jbe
loope
mov
idivb
es
aad
andb
adc
stos
jecxz
insb
stc
add
mov
outsl
inc
xlat
fldenv
movsl
fidivs
push
mov
imul
mov
loopne
fidivrs
push
sub
pop
mov
data16
cmc
adc
pop
xchg
cmpps
adc
mov
xchg
mov
add
dec
jge
lods
loopne
add
dec
sub
or
jns
dec
mov
in
lock
xchg
leave
xor
dec
out
in
cltd
mov
test
lret
iret
xor
testb
xchg
push
inc
pushf
xor
sbb
inc
or
fucomp
movsl
dec
dec
jbe
cmpsl
testb
sti
inc
cmpl
inc
dec
stos
aas
dec
arpl
cmp
lahf
aam
mov
outsl
mov
lret
lds
fisubl
insb
mulb
aam
cli
stos
sbb
lret
mov
aaa
or
sbb
mov
stos
idivl
jo
pop
mov
dec
outsb
add
xlat
and
mov
stos
mov
in
sahf
sub
add
push
mov
bound
inc
test
fisubrl
push
mov
mov
pop
jecxz
aad
adc
sub
xchg
push
es
jbe
icebp
mov
pop
lret
test
xlat
hlt
mov
mov
xchg
or
repnz
outsl
les
cmp
ficoml
sbb
lcall
jecxz
aaa
sbb
mov
filds
mov
aad
xor
push
mov
push
scas
adc
movsb
fidivs
adc
sub
call
push
enter
lret
jle
iret
dec
push
sub
bound
ret
pushf
sub
push
out
cmp
mov
in
in
nop
inc
adc
lods
xlat
xor
and
and
mov
lret
daa
orl
dec
or
sahf
inc
movsl
sub
cmp
mov
and
fwait
cmp
inc
call
cli
or
mov
test
sbbl
pop
adc
shll
int
mov
gs
add
push
sub
fildll
pop
mov
cmpsb
popf
xor
pop
lea
cld
in
sub
sub
cld
stc
je
pop
pop
push
movsl
insb
cmpsl
sbb
dec
aad
push
fmul
adc
fsubrl
mov
lcall
adc
iret
inc
mov
mov
ja
push
jnp
psrad
sbb
lret
addr16
gs
cwtl
test
jne
pop
push
mov
or
stos
test
cmp
jge
mov
lods
sbb
pop
mov
sbb
pop
sub
pop
mov
cmp
push
push
xchg
mov
mov
push
clc
scas
jns
inc
xlat
sbb
and
pop
sbb
xchg
insl
inc
scas
mov
imul
xchg
sbb
push
push
imul
cmp
mov
roll
lds
push
jecxz
fisubrs
idivl
data16
repnz
dec
xchg
testl
jmp
sahf
xor
pop
movsb
cmp
mov
push
test
icebp
fcoms
adc
add
leave
imul
mov
xchg
sbb
ljmp
mov
dec
adc
fidivl
or
fwait
push
mov
in
fmull
push
xor
mov
add
xchg
je
push
jl
in
hlt
xlat
ljmp
mov
cmpsb
stos
fwait
test
sub
scas
ret
pop
test
dec
mov
adc
mov
pop
test
sub
mov
mov
add
xchg
mov
jns
inc
sbb
pop
stos
out
sahf
je
jns
lods
lods
mull
jp
das
pop
mov
shl
jmp
leave
test
jp
sbbl
pushl
outsb
shlb
jl
adc
xchg
je
lcall
in
aaa
dec
cmpb
lea
insl
sbb
push
rep
add
inc
cmpsb
cmp
fiaddl
adcl
popa
aam
outsl
mov
mov
fiadds
test
mov
call
and
scas
test
cmp
pop
insb
mov
aas
arpl
mov
push
xor
mov
xchg
push
or
sahf
cmpsb
dec
inc
ret
mov
push
enter
fldt
cmp
loopne
fcompl
aaa
jb
in
cmp
mulb
inc
fsubr
sbb
cli
sbb
repz
add
mov
mov
mov
sub
sbb
mov
fisubrs
add
mov
clc
icebp
cmc
and
jnp
leave
je
nop
push
pop
mov
adc
repnz
daa
lcall
or
jge
loopne
jns
jg
ja
mov
mov
test
loope
sub
outsb
dec
push
adc
shlb
jge
and
aad
lock
popa
fs
xchg
sbb
lahf
mov
andb
fsubrl
out
and
sub
int3
fsubs
dec
dec
mov
clc
adc
pusha
cmp
pop
dec
pop
aaa
fisubrl
in
cwtl
lahf
lods
les
inc
popa
cltd
jp
lds
mov
mov
test
mov
xchg
cltd
sbb
inc
es
dec
adc
xchg
pop
jb
cmp
stos
push
out
fsubrl
mov
mov
ss
inc
pop
sahf
leave
lods
and
sahf
outsb
and
rolb
testl
imul
xchg
add
sub
mov
sub
mov
and
rcr
mov
or
mov
push
adc
add
mov
shl
popf
stc
and
sbb
jo
movsb
cmp
aas
ret
shrl
and
push
push
and
das
out
fldt
push
mov
es
jmp
fcompl
jp
mov
add
pop
ret
out
pusha
or
cmp
stos
inc
jecxz
popa
jge
gs
mov
xor
popa
int
pop
addb
add
pop
adc
pop
inc
int3
xor
mov
loopne
push
sub
nop
daa
push
mov
xor
mov
push
dec
pop
loopne
es
mov
mov
data16
movsl
out
adc
scas
push
or
mov
les
pop
mov
bound
xchg
js
imul
push
sbbl
inc
push
in
test
aaa
cli
int
out
outsl
mov
adc
lods
popa
stc
jne
pop
sub
stos
cli
jge
insb
inc
xor
xorl
push
cmp
addr16
jo
sbb
cmp
call
jnp
loopne
xchg
jp
xchg
hlt
mov
mov
xor
pop
and
das
and
dec
pop
andl
rol
mov
push
mov
in
subl
or
push
and
mov
gs
hlt
mov
inc
mov
or
dec
mov
jp
daa
mov
imull
mov
push
add
xchg
js
je
inc
pop
dec
loop
icebp
xchg
jp
xor
add
fwait
inc
xor
jno
jmp
clc
or
in
dec
addr16
repnz
cmpsb
xor
pop
or
cmp
leave
inc
int
lret
push
in
xchg
popf
test
addr16
scas
mov
jne
jmp
jmp
pop
inc
push
adc
out
data16
pop
xor
loopne
sub
rcll
repz
adc
mov
xchg
pop
dec
inc
pop
mov
int
mov
sbb
dec
scas
lock
or
push
scas
ret
jo
and
cmpsl
test
add
gs
mov
or
cmp
xchg
pop
pop
adc
inc
sbbb
xchg
mov
xor
scas
stos
mov
loope
repnz
popa
cli
mov
push
adcl
mov
loopne
std
xchg
call
out
inc
jne
jbe
stos
mov
pop
mov
fs
push
xchg
pop
aaa
cmpsl
jnp
add
ja
popa
add
xchg
dec
jno
mov
fbstp
clc
addb
imul
adc
sub
adc
popa
push
jb
xchg
sbb
xchg
lcall
in
cmp
imul
inc
popf
pop
in
jb
xor
pushf
das
jge
es
dec
and
dec
pop
jmp
dec
rcr
and
mov
repnz
mov
cli
ret
stos
lcall
inc
outsl
pop
notb
bound
mov
and
sub
daa
in
lods
xchg
mov
jecxz
and
mov
insl
gs
scas
shlb
pop
iret
cmpsb
or
pop
mov
insl
out
sahf
outsb
push
pop
scas
sbb
aas
xor
scas
dec
push
mov
xchg
jmp
dec
mov
loopne
jns
push
les
dec
movsb
subb
xor
mov
aad
pop
mov
jle
dec
mov
pushf
int
push
xchg
fiaddl
and
idivb
dec
jns
fisubrs
jbe
or
int
scas
jg
iret
fldl
ret
mov
mov
push
pop
sub
enter
add
mov
cltd
jl
stos
ret
mov
jmp
xchg
cmc
not
push
cmp
bound
lods
and
add
xor
test
ja
dec
pop
hlt
inc
xor
xchg
es
shll
mov
or
bound
push
mov
jp
cmp
cmc
cmpsb
dec
fadds
shrl
sbb
repz
mov
pop
nopl
sahf
out
loopne
jecxz
nop
stc
shrl
loope
adc
imul
leave
mov
and
insl
add
mov
pop
stos
xchg
jno
int
loope
mov
faddl
push
ja
and
popa
xchg
or
stos
fidivl
ret
shlb
sahf
cmp
jg
decb
lcall
jmp
cmp
pushf
adc
aad
or
call
int3
jno
frstor
jle
cmpsl
mov
movsl
daa
mov
loop
je
sub
or
sub
mov
xor
aad
push
ja
mov
imul
sti
jb
mov
imul
dec
and
lcall
add
sti
jbe
movsb
xchg
push
sar
push
ret
popa
mov
fistl
xor
insl
push
dec
mov
or
xchg
cmc
xchg
dec
out
fdiv
add
add
aas
push
inc
push
inc
test
loope
jg
push
push
sub
jns
add
test
call
icebp
test
mov
sub
xor
or
rorb
sbb
xor
inc
fisubrl
int
popf
jl
or
or
mov
loopne
hlt
lret
mov
loope
mov
cmp
icebp
xchg
cmp
pop
pop
cwtl
lods
in
fists
ja
push
jp
dec
and
pop
jg,pn
lcall
cmpsb
mov
add
popf
or
xchg
mov
pop
sub
sbb
out
push
lds
es
loopne
mov
inc
cmp
or
setle
inc
jmp
sub
xor
in
sbbb
and
push
cli
loop
dec
adc
inc
fisttpl
ds
mov
stos
inc
sti
rorl
dec
dec
inc
sub
nop
xchg
mov
int
lock
cld
add
mov
push
sub
je
jae
cli
mov
pop
mov
outsb
sub
daa
or
inc
gs
sahf
pop
dec
lret
cmp
fucomp
push
jbe
das
adc
push
push
repnz
pop
and
into
pop
dec
in
ja
movsl
dec
cmp
add
loope
pop
sbb
testl
cmp
pop
hlt
inc
jae
mov
scas
push
sub
fsubrs
test
daa
dec
stos
mov
enter
sub
or
mov
movsl
mov
sbb
loopne
loop
imul
std
mov
das
insb
ljmp
mov
jno,pn
mov
aad
es
lret
cli
mov
cwtl
mov
je
insl
mov
mov
rcrl
pop
mov
jl
mov
lock
dec
push
pop
call
push
sbb
test
imul
jo
jg
and
inc
testl
or
je
test
sub
mov
ret
je
in
in
sbb
and
pop
mov
push
in
mov
outsb
mov
mov
daa
inc
pop
jecxz
lret
test
lret
push
jno
xchg
or
or
movsl
insl
mov
lock
mov
rep
xchg
shlb
dec
dec
pop
dec
jl
mov
mov
adcb
popf
divb
iret
mov
ret
rorl
sbb
popf
pop
pop
pop
lods
sub
jl
out
sti
out
aas
shrb
pop
hlt
lods
and
xchg
test
push
push
fwait
inc
and
jmp
sti
push
or
mov
stos
lret
fnstsw
adc
pusha
test
xchg
mov
push
pop
dec
icebp
mov
mov
jno
add
pop
test
jnp
pushf
mov
mov
movsb
and
aad
fdivrs
addr16
loopne
inc
cmp
dec
sarb
in
mov
jae
and
js
dec
add
roll
das
jp
push
jg
xchg
or
add
int
xor
imul
jnp
mov
imul
mov
call
or
arpl
into
push
mov
dec
sub
aad
push
lret
imul
or
fxch
movsb
bound
outsl
cmp
stc
xchg
mov
jb
jmp
xchg
push
insl
jge
mov
inc
inc
mov
ljmp
call
inc
jnp
cmpsb
and
pusha
push
call
inc
adc
cmp
jbe
inc
mov
or
mov
xchg
repz
enter
jb
ret
inc
cmp
shl
push
in
jne
fld
sbb
out
jbe
repz
sbb
adc
xor
test
push
data16
ss
fwait
jmp
pop
arpl
mov
push
xorb
mov
jns
arpl
sbb
pop
aas
inc
push
push
loop
sbb
add
xor
or
dec
shrb
sbb
das
in
cmp
fwait
mov
out
repz
push
fwait
and
idivb
inc
mov
pop
loop
addr16
subl
stos
cmp
rcrb
and
dec
sbb
push
test
iret
ljmp
mov
pop
dec
mov
dec
push
or
mov
xchg
sbb
outsl
ljmp
shrl
ret
ret
sbb
scas
les
int
jb
notb
xor
jecxz
add
ret
dec
icebp
cmp
mov
loop
incl
sbb
sub
popa
arpl
ja
jo
dec
inc
mov
ds
push
cmc
addl
sub
cld
lret
fwait
add
jae
sub
sub
push
repz
movsb
adc
rdtsc
je
mov
aam
or
rcll
xchg
and
inc
cmpsl
fldl
fbstp
hlt
or
push
insl
mov
push
lret
xlat
ds
dec
sbb
xchg
mov
aad
push
pop
mov
fistl
dec
pusha
cmp
pop
pop
lret
add
shlb
and
iret
or
bnd
in
imul
sbb
and
sub
mov
jns
hlt
xor
push
mov
call
enter
dec
orps
xlat
mov
mov
movsl
sbb
xchg
mov
lret
and
xor
rcl
lds
icebp
sub
mov
cmc
loop
pop
fwait
jno
mov
ds
and
inc
test
test
stos
push
fcompp
xchg
decb
lods
adc
pop
into
push
cmp
sub
mov
in
mov
test
or
int
push
daa
adc
in
jo
pushf
mov
jl
out
rcrl
and
outsb
inc
pop
push
add
adc
or
jmp
mov
enter
and
pop
xchg
jbe
imul
pop
lock
idivl
hlt
push
adc
aas
mov
jmp
mov
pop
pushf
or
xchg
cmc
rcl
icebp
idivb
lods
push
cmp
pop
push
xor
std
xchg
xchg
push
out
jns
icebp
aas
test
lock
sub
jl
clc
and
scas
ja
insb
cs
or
add
mov
jmp
jmp
jecxz,pn
imul
fcompl
cmpsb
adc
movsl
pop
push
orl
mov
loopne
mov
xchg
or
mov
add
sub
xorb
pop
mov
sti
mov
xchg
addb
outsl
and
scas
filds
mov
add
ljmp
subl
inc
push
dec
out
outsb
mov
lret
xlat
cmp
jns
cld
inc
pushf
mov
inc
sti
xchg
add
and
out
lahf
pusha
out
cmp
sar
jb
xor
push
mov
add
in
xor
cmp
cmpsb
jge
mov
inc
sub
dec
or
mov
add
mov
push
push
xor
fisubrl
dec
test
out
aam
iret
shl
push
aad
lds
shll
gs
shl
jecxz
movsl
sbb
adc
imul
jbe
or
and
mov
jl
add
incl
outsl
push
sbb
sbb
cld
dec
inc
cs
sbb
popf
dec
aam
and
xchg
inc
repnz
add
jb
xchg
mov
lods
mov
aad
addr16
cli
adc
data16
mov
mov
rcl
xor
outsl
shr
cmp
sub
sub
jle
cmpsb
inc
imul
mov
jno
dec
stos
jae
xchg
popf
push
adc
xor
or
sub
or
cltd
pop
in
rcll
jb
notb
xchg
das
jle
cmp
rcrb
fcomps
int
inc
lcall
inc
lods
sbbl
sbb
xchg
xchg
jbe
inc
cwtl
or
loop
out
inc
dec
test
lret
ret
lock
rclb
pop
cmp
pop
add
cmp
mov
mov
pop
cmpsl
xchg
pop
sub
mov
in
sub
inc
sub
jae
dec
jns
in
and
and
xor
icebp
push
jb
or
xchg
lret
adc
sbb
dec
jne
imulb
andl
jp
popa
ret
bound
std
xlat
pop
lret
fsubr
cld
jge
je
lcall
sti
in
mov
xor
insl
xor
jecxz
loop
vpaddusw
loopne
mov
add
or
outsl
daa
xor
arpl
or
sahf
xchg
fisttpl
mov
mov
stc
dec
cmpsb
sub
shrb
in
fs
ja
cltd
sti
dec
pop
xchg
lcall
cmpsb
pop
rclb
pop
pop
cli
rcr
jne
cmpsl
ds
sub
or
sub
dec
mov
pop
xor
push
out
xchg
dec
push
call
nop
mov
cs
pop
stos
rolb
jg
arpl
rclb
mulb
or
jnp
insb
scas
int
in
mov
dec
rcr
adc
and
push
in
fwait
xor
movsb
daa
outsl
xchg
stos
push
inc
fsubl
sbb
sbb
jl
cmpsl
jne
add
mov
pusha
xchg
jbe
push
or
gs
pop
les
rcrl
push
jo
jge
int3
xchg
test
iret
pop
mov
push
je
es
js
push
inc
shrb
add
arpl
mov
sub
pop
int3
fisubs
stc
cmpsl
les
stc
pop
shlb
jl
imul
xchg
enter
cmp
insb
idivl
outsl
imull
sti
jle
adc
movsb
lea
pop
cmp
ds
mov
jo
call
int3
outsb
adc
sahf
inc
call
sbb
in
fdecstp
ds
sub
es
out
test
mov
adc
andl
inc
add
std
or
outsl
sub
ds
enter
test
imul
orb
pop
inc
add
sub
ds
cmp
cwtl
or
mov
or
mov
gs
xchg
js
fucomip
data16
jl
jbe
add
fiadds
sub
cmp
sbb
xchg
mov
jb
sub
gs
and
adc
cmp
dec
mov
test
outsb
fiaddl
orb
jl
sarl
in
xor
negl
mov
in
add
hlt
xlat
outsb
add
jne
fdivl
inc
push
das
mov
das
sarl
js
push
jecxz
bound
dec
mov
cwtl
add
and
sub
push
xchg
aaa
fsubp
adc
fs
mov
push
mov
lock
xchg
add
pop
dec
add
into
gs
mov
or
jne
push
add
mov
in
movsl
icebp
xor
xlat
mov
inc
dec
cmp
cs
das
lahf
mov
divb
sub
cmpsb
pop
push
add
adcb
xor
sbb
push
push
jb
pop
rcl
imul
fdivrl
lods
cld
inc
sub
jbe
xor
idivl
std
xchg
in
push
ss
js
test
out
test
ret
or
adc
rcrb
mov
mov
nop
inc
fadd
jecxz
or
and
test
mov
xor
out
cwtl
jg
hlt
push
sub
icebp
dec
dec
inc
adc
repnz
push
push
jmp
xor
in
mov
and
mov
xchg
mov
xchg
jns
push
push
or
addr16
movsl
jp
stos
add
shrl
enter
push
stos
in
fdivrl
pop
jmp
into
leave
pusha
add
out
mov
insl
add
hlt
pop
pop
lcall
dec
pushf
pushf
outsl
dec
jae
cmp
shrb
mov
in
mov
mov
imul
xlat
mov
movsl
adc
std
out
ss
sub
paddusw
lahf
ret
sub
sbbl
test
mov
push
out
mov
xchg
cmc
test
sub
loope
adc
js
inc
push
ja
aas
pop
sub
push
insl
sbb
addr16
gs
ljmp
rolb
push
data16
mov
push
stc
outsl
test
pushf
sub
mov
dec
test
test
lods
jo
int
push
mov
sahf
or
fldt
js
adc
add
dec
jle
hlt
mov
dec
mov
icebp
lret
adc
bound
nop
shlb
add
call
test
in
aas
xchg
lahf
test
dec
mov
sub
repz
dec
jae
lret
icebp
sbb
or
es
mov
popf
xor
push
in
leave
sti
inc
iret
jmp
push
jno
out
xor
cmpsb
or
dec
adc
inc
add
sbb
push
lcall
push
stos
pop
out
out
std
cltd
or
push
push
bound
iret
pop
sti
fwait
lea
insb
testb
jmp
shl
xor
add
bnd
aam
cs
inc
mov
jnp
cmp
fldenv
inc
scas
dec
aam
xor
test
xchg
stos
ss
call
fsts
iret
cltd
push
inc
std
mov
pop
lcall
ret
stos
lods
call
add
sahf
or
loop
pop
js
ficoms
mov
add
cmp
rcl
mov
adc
inc
push
ret
enter
out
mov
les
cmp
leavew
iret
scas
inc
fimull
xor
out
push
fsubr
sub
add
rol
mov
leave
cmp
mov
gs
insb
add
xor
ljmp
int3
mov
xorl
imul
xchg
xchg
out
sub
addr16
add
stos
in
in
or
xchg
lcall
mov
es
shrl
jb
xor
push
and
into
mov
mov
aas
mov
hlt
popa
mov
mov
sbb
cmpl
gs
insl
scas
jae
fnstcw
int
adc
ss
insl
sub
push
sbb
das
xchg
lods
dec
outsb
sbb
rcrb
cmp
idivb
lods
pushf
stos
jmp
sbb
mov
cli
adc
jns
imul
fcoms
outsb
mov
out
andl
cmp
xchg
pop
cmp
nop
out
push
repz
and
jo
or
in
cmpsl
xrelease
add
cmpsl
xor
popa
scas
popa
jmp
stos
out
inc
pop
arpl
data16
sahf
adc
push
jg
jns
iret
push
fwait
jae
fwait
shrb
cli
push
jle
insb
rorb
shrb
jo
mov
scas
push
out
cmpsl
sbb
cld
in
mov
sbb
jmp
lods
lahf
rorb
and
sti
cmp
push
stc
std
pop
cmpsb
push
pop
mov
pop
pop
lock
jae
popa
insb
xchg
std
push
jnp
ja
sub
add
mov
fsubs
cld
inc
cld
out
inc
add
aaa
push
clc
pop
mov
je
or
mov
mov
stos
mov
fxch
outsl
push
add
cmpsl
mov
data16
out
popa
cmp
pop
mov
dec
xor
mov
pushf
loope
pop
xor
mov
nop
sbb
sbb
xchg
push
dec
divb
popf
outsl
in
in
test
sarl
xchg
idivb
in
adc
ficomps
adc
insb
shlb
xorl
inc
ret
bound
int3
lret
std
sbb
fisubl
incb
dec
xchg
lods
push
cltd
cmp
mov
inc
xchg
push
cmp
les
dec
stos
mov
jo
orl
pop
sub
jmp
pop
lock
pop
scas
jbe
ja
inc
mov
imul
xchg
mov
mov
cmp
mov
insb
inc
aad
fdivl
mov
idivl
xlat
mov
aam
add
lahf
sbb
xlat
repnz
push
int3
adc
push
sub
fisubs
ds
push
ds
cmp
adc
jo
sbb
dec
cmpsl
cltd
imul
cmp
test
dec
xor
outsl
enter
jl
sahf
lods
add
mov
push
adc
loopne
int3
dec
mov
or
cmp
pop
or
push
stos
stc
icebp
mov
icebp
push
insl
xor
je
repz
jnp
rol
pop
ret
pop
data16
lcall
out
call
into
daa
data16
pushf
cltd
test
les
add
xchg
xor
stos
inc
sbb
int
stc
dec
pop
daa
repz
jnp
lcall
sti
sbb
xchg
dec
and
xor
mov
sahf
mov
popf
mov
push
loope
movd
rol
repnz
out
or
add
jmp
lret
cld
fbld
pop
loopne
push
je
push
inc
fadds
or
pop
pop
cwtl
xor
stos
sub
pop
gs
or
out
pop
inc
fwait
cmp
and
add
push
jno
sbb
mov
cltd
cmp
inc
pop
push
ljmp
mov
clc
aam
adcl
mov
repnz
addr16
js
iret
push
cli
push
fisubs
jge
movl
or
scas
pop
add
inc
xchg
stos
mov
out
int
and
inc
pop
int3
jmp
push
test
outsl
mov
xchg
jnp
negl
bound
das
pusha
jae
xchg
push
push
std
xor
or
sub
cld
fsubs
xchg
jns
and
rcl
repz
mov
sti
pop
jnp
jnp
sti
lcall
outsb
enter
sub
scas
scas
jae
mov
dec
loop
inc
sub
fs
mov
push
mov
hlt
mov
jp
cwtl
mov
add
movsb
inc
xorb
cmpsb
sub
sbb
aad
push
enter
div
xchg
dec
fiaddl
pop
fwait
andl
test
lea
mov
push
pop
push
cmp
xor
fstl
imul
mov
mov
stos
mov
xchg
push
cmpsb
add
clc
aas
push
bound
inc
cltd
repnz
fisttpll
pop
repz
or
sub
mov
sbb
xor
xor
addb
push
add
mov
dec
in
adc
les
inc
pop
pusha
xchg
lea
fstpl
mov
cmp
pop
icebp
cmp
and
sub
xchg
xchg
popf
or
sbb
adcl
dec
cltd
aaa
xor
lock
inc
ss
or
lret
ljmp
lea
add
aas
pop
push
lods
jbe
sub
xchg
push
jnp
out
lock
lods
pop
pop
nop
jns
jg
mov
shrl
cmp
jne
push
mov
sbb
xchg
sahf
cmp
sub
jmp
repnz
loopne
push
adc
leave
mov
or
mov
jg
push
fistpll
shlb
in
aas
imul
div
cmc
imulb
mov
aam
fcomps
pop
inc
scas
mov
dec
dec
dec
loopne
and
cmp
aam
add
into
cmc
shrb
push
xor
cld
push
adc
sub
fs
insl
dec
je
xor
xchg
adc
gs
jecxz
add
jb
xchg
and
pop
nop
cmp
add
xchg
sub
add
mov
loope
les
mov
test
inc
aam
pop
push
pushf
push
sti
pop
cmp
dec
or
fnsave
decb
gs
jb
jne
jbe
xorl
outsl
inc
pop
xor
dec
adc
inc
hlt
xchg
shrl
inc
sbb
jmp
fwait
ljmp
movsb
stos
push
and
fmull
sbb
stc
jl
cld
stos
sbb
mov
xchg
str
mov
scas
mov
dec
sbb
xchg
mov
mov
data16
or
aad
rcrb
jg
imul
add
xchg
dec
xchg
inc
xlat
cs
insl
jg
lahf
push
sbb
daa
pop
nop
lcall
jo
cld
outsb
sbb
dec
mov
lret
push
push
add
dec
xor
push
das
dec
call
aad
sbb
std
push
lcall
inc
pop
pusha
dec
shrl
cmp
mov
push
lds
lds
out
jge
add
push
in
mov
cmpb
nop
pop
fsubl
mov
mov
and
cli
xor
sbb
xor
mov
mov
push
roll
rorl
push
sbb
cltd
adc
adc
fdivp
adc
sbb
out
push
add
int3
pop
jno
inc
jecxz
dec
pop
cmp
cmp
gs
test
jne
xor
fists
xor
adc
cli
sahf
stos
stos
inc
sub
jo
dec
cltd
push
jo
inc
cwtl
hlt
out
mov
pop
jmp
scas
mov
add
ds
lods
fst
pop
decb
pop
popa
daa
jle
shll
mov
add
repz
popa
or
outsb
xlat
mov
jb
movsb
xchg
sbb
addl
push
int
loope
and
push
in
and
inc
lea
test
mov
pop
pop
orl
or
shl
jle
sti
int
push
jp
mov
jbe
shlb
pop
mov
xchg
bound
out
int3
faddl
shr
pop
xchg
mov
jo
movsl
gs
subl
cmp
adc
pop
test
xor
popf
fsubrp
jmp
out
inc
inc
pusha
mov
xlat
fbstp
xchg
mov
jge
cmp
in
lock
sti
jo
in
xchg
adc
cmpb
jns
mov
add
repz
or
inc
xor
fsubrp
sub
pop
jmp
lahf
dec
dec
xchg
cmp
adc
fidivrl
mov
pop
sub
push
lods
hlt
out
xchg
adc
iret
and
and
mov
mov
cmc
adc
fisubrl
leave
inc
std
repnz
out
xchg
lret
xor
movsb
movsl
bound
andl
cmp
das
shrb
int3
fstp
cld
cmpsl
test
popa
cmp
test
rorb
aad
jecxz
add
mov
mov
pop
adc
add
lock
in
pop
xchg
out
shrl
es
xchg
pop
sub
addr16
pop
jg
xchg
in
test
in
cmp
sub
lret
cld
aas
jo
jno
adc
dec
push
adc
aam
lods
mov
sub
out
cli
and
adc
ds
pop
nop
pusha
push
cmp
ljmp
jne
mov
mov
xchg
lahf
ss
dec
adc
xor
pop
gs
push
jae
sub
fs
jge
iret
movl
mov
hlt
mov
mov
out
cmp
pushf
dec
shl
outsl
cwtl
enter
inc
xlat
pop
sbb
or
jnp
jle
mov
adc
scas
jp
in
jns
add
add
fwait
pop
sbb
lea
adc
nop
push
in
out
aaa
insb
daa
cmpsb
imul
movsb
jecxz
jp
aad
fs
test
and
add
mov
es
test
mov
jnp
rcrl
jnp
mov
pop
adc
push
xchg
xchg
je
jg
icebp
and
mov
cmc
cwtl
movsl
add
mov
and
lods
mov
daa
sahf
out
lahf
int
sub
push
pop
mov
test
scas
clc
xchg
fwait
dec
loop
xchg
pop
cmp
imul
insb
inc
xchg
mov
pop
cmp
mov
add
faddp
jb
adc
add
adc
jbe
jmp
adc
dec
and
adc
sahf
xchg
jmp
outsl
rorl
ljmp
loopne
mov
and
and
sub
movl
jb
pop
rcrl
rclb
mov
lea
mov
out
leave
pusha
jb
imul
push
test
ret
scas
mov
jmp
sbb
mov
xchg
fdivs
push
in
mov
sbbl
cmpsl
push
mov
push
fmull
mov
inc
loope
cmp
lret
mov
push
leave
dec
or
dec
sub
insb
add
subl
sbb
hlt
and
repnz
push
mov
jns
fbld
mov
mov
fwait
loopne
aaa
nop
jb
fdivl
cli
ss
out
sbb
jg
iret
inc
pop
jno
push
out
jno
das
addr16
bound
xchg
xor
mov
and
js
add
push
iret
repz
es
adc
inc
xchg
inc
mov
mov
loopne
xchg
sub
in
inc
and
aas
adc
pop
cwtl
ja
mov
cli
lods
sub
mov
mov
adc
orb
push
sti
mov
lods
and
hlt
test
sbb
scas
repz
ja
and
nop
dec
adc
push
adcl
cmp
pop
icebp
jle
dec
loop
cmp
or
ja,pt
sub
push
outsl
jno
sbb
push
xor
or
fwait
jge
fcomps
pop
hlt
lcall
lret
rol
fstl
test
or
xchg
aas
sbb
jbe
out
xor
cmp
push
mov
fadds
inc
or
pusha
test
data16
mov
dec
movsb
ja
jge
lcall
lods
notl
fs
pop
scas
fstps
pushf
imul
xchg
pop
jbe
enter
cmp
jo
call
or
mov
rcl
imul
lock
pop
pop
rorl
xchg
or
inc
sub
adcb
adc
sete
repnz
xchg
push
aas
shll
xchg
repz
into
int3
cltd
sbb
iret
lods
into
and
ljmp
nop
lcall
xor
fwait
cli
cltd
add
mov
mov
push
mov
mov
sti
les
mov
adc
mov
and
or
addb
movsb
je
push
lods
mov
dec
xor
repnz
fwait
cs
pushf
push
out
daa
outsb
sub
pop
iret
inc
fsincos
sbb
push
xchg
pusha
dec
dec
stos
lret
and
setae
std
in
dec
fsubs
test
out
and
incl
sahf
in
jmp
dec
xchg
add
fs
push
mov
stc
sar
fsubrs
sub
pop
mov
sarb
mov
dec
jb
ret
lahf
inc
fsts
mov
test
jl
int
sub
lods
and
sbb
pop
sub
pop
adc
mov
int
mov
movsl
ljmp
nop
fs
inc
dec
sbb
repz
and
ret
lcall
sub
rcr
xchg
xor
in
mov
pop
mov
pop
dec
aas
pop
jecxz
lea
ret
das
mov
decl
xchg
stc
mov
mov
mov
out
push
shrb
sub
jmp
fadds
scas
data16
in
cmp
pop
push
sti
xchg
push
mov
mov
and
push
add
push
aam
pop
add
jmp
cmp
push
incl
mov
add
cmp
or
adc
sti
shll
movsb
pop
add
xor
cmpsl
inc
xor
fldl
sub
adc
shrb
xlat
or
and
cld
jbe
push
mov
xchg
daa
pushf
sub
pop
mov
dec
adc
cli
jmp
test
fcoml
push
or
inc
mov
cli
mull
xor
or
adc
ljmp
mov
in
fistpl
fcmove
xchg
adc
pop
cli
shll
jnp
les
add
pop
and
xchg
xchg
insb
lods
xor
lret
lahf
in
das
sbbl
cmp
rorl
inc
mov
cmp
in
xor
stos
xor
hlt
hlt
inc
scas
and
cmpsl
lods
dec
movsl
hlt
cmpsb
mov
mov
mov
repnz
inc
call
sbb
data16
subl
or
jnp
mov
cmp
mov
or
push
push
push
lret
cmp
shl
shrb
cmp
mov
rcrl
pop
pop
mov
in
pop
lahf
xchg
push
jbe
cmp
inc
lea
mov
and
mov
dec
int3
mov
nop
mov
push
call
mov
js
jne
sub
shrl
inc
filds
aas
adc
jno
adc
mov
das
pop
popa
pop
jle
mov
enter
inc
xchg
es
mov
les
std
push
inc
test
cwtl
sub
xchg
sub
cli
pop
lds
pop
push
and
pop
das
lods
insb
test
jns
xor
lock
test
cmp
sbb
sbb
mov
rcl
test
mov
or
shr
popf
lods
and
inc
and
fwait
push
lods
inc
test
pop
shlb
popa
and
cmp
or
outsb
pop
sub
sbbl
push
enter
mov
test
jne
nop
and
es
js
test
push
dec
jle
xchg
call
mov
mov
xor
js
mov
std
adc
xchg
add
test
insb
inc
cmp
jb
cmc
xchg
pop
imul
jnp
subl
sub
subps
pop
mov
lret
js
std
test
or
mov
ret
or
push
outsl
or
mov
mov
ffreep
dec
push
insb
out
mov
hlt
or
add
data16
loopne
push
mov
je
jl
mov
movsbl
adc
push
and
and
aaa
test
popf
sub
repz
fxam
inc
mov
fnsave
xchg
pop
or
or
out
sbb
dec
sbb
je
mov
cli
jecxz
pop
outsb
test
mov
jbe
loop
and
cld
or
xor
dec
mov
xor
dec
jge
jg
cs
xchg
and
sarl
mov
sbb
out
test
inc
adc
fs
or
mov
flds
jne
test
mov
sub
mov
hlt
pop
xchg
sarl
mov
sub
jo
stos
and
jne
mov
jnp
jbe
pop
mov
pop
outsb
mov
shrl
lods
dec
add
jle
xchg
out
inc
xor
ss
fimull
mov
fildl
sub
fwait
scas
pusha
inc
fcompl
jns
push
movsb
lds
cmp
and
in
lds
fs
add
out
and
outsb
loope
dec
cmc
pop
mov
jle
out
movsb
mov
pop
pop
aad
sbb
andb
sbb
ja
mov
lea
lret
repz
push
mov
xlat
jae
fidivrl
je
enter
insb
adc
xchg
call
cs
sbb
mov
cmpsl
mov
pop
data16
sub
inc
movzbl
int3
into
cmp
xor
xchg
orl
or
mov
xchg
sub
jbe
into
mov
push
dec
dec
fildll
testb
cmp
fwait
and
lds
jl
jecxz
xchg
cs
push
sub
orl
add
cwtl
mov
clc
out
test
aas
les
pop
call
les
popa
mov
lahf
mov
vminss
mov
das
adc
xchg
es
pop
pop
js
sub
mov
in
imul
iret
sbb
repz
push
xchg
xor
xchg
leave
pop
lret
negb
cmp
js
push
push
scas
in
std
cmc
cli
mov
mov
ret
and
push
and
out
mov
push
enter
inc
cmp
jae
sub
pop
push
cmp
mov
mov
fildll
insl
mov
adc
repz
cmp
push
arpl
in
mov
int
cmpsb
and
dec
mov
loope
stos
push
out
std
ljmp
aas
mov
jge
add
push
xchg
mov
sbb
and
push
aam
lock
add
xchg
inc
push
hlt
add
inc
jno
rclb
adcb
lock
mov
mov
out
jle
and
call
pop
fwait
hlt
fs
xchg
mov
mov
inc
stos
pusha
mov
cmp
pop
scas
sub
aam
sbb
lret
lock
adc
mov
daa
jne
xchg
push
cmp
subl
pop
push
xor
jp
repnz
push
inc
rolb
adc
or
cwtl
daa
push
test
xor
int
add
and
movsb
loopne
into
leave
and
shrl
loop
aad
lods
imul
ja
cmp
mov
mov
xor
icebp
xor
add
in
xor
js
jp
test
and
xchg
push
in
jns
es
inc
sub
add
fldt
push
dec
xchg
inc
idivl
and
pop
xor
lods
dec
in
popf
and
or
sbb
push
inc
shll
mov
js
sti
dec
xchg
sub
sbb
loope
in
ja
mov
and
aam
jo
ficoms
daa
fwait
sub
adc
dec
and
xchg
xchg
jle
out
dec
fwait
sbb
pop
sub
rcr
repz
and
xor
in
js
xor
inc
mov
mov
fistps
xchg
pop
idiv
inc
pop
cmpsl
iret
add
leave
xchg
pop
mov
jmp
ret
dec
pop
in
sbb
xchg
xchg
icebp
dec
push
aam
xchg
popl
aaa
jno
pop
popa
add
ss
mov
push
fdivl
cmp
mov
lahf
push
cli
push
mov
lahf
outsl
and
pushf
pop
fs
fsts
pushl
cmp
jmp
pusha
adc
pop
and
cmpsl
call
xor
pop
dec
mov
xor
xor
dec
iret
lds
mov
fstpl
lds
negw
cmpb
iret
addb
xchg
sub
cs
je
int3
mov
jle
hlt
xor
and
shlb
mov
lds
cltd
lods
sarl
scas
repnz
stos
stos
inc
popa
add
das
or
aaa
pusha
or
pop
xor
inc
push
jno
or
test
add
sub
ret
mov
dec
ss
jl
fisubrs
ljmp
or
pushf
outsl
jo
mov
mov
dec
and
shrl
push
add
xor
icebp
ds
xchg
xchg
pusha
jecxz
dec
pop
add
hlt
sub
sbb
push
dec
ss
ja
sbb
cmpsl
mov
push
je
dec
mov
iret
aaa
pop
mov
push
mov
mov
and
sub
cmp
ret
cmpsb
or
add
sub
jmp
mov
sarb
pop
jecxz
push
xor
testl
xchg
sub
mov
mov
push
movsl
pop
jbe
or
icebp
sub
or
aad
push
push
notl
shrl
adcl
inc
sub
xlat
mov
cmp
push
sar
test
add
mov
test
fidivrs
in
or
imulw
or
sbb
mov
xorl
lock
mov
dec
mov
sbb
cmp
ljmp
cli
push
inc
insl
shll
cmp
pop
dec
cmpsb
pop
jp
xchg
sbbb
loopne
and
fadds
dec
scas
imul
pop
and
push
jl
es
push
pushf
repz
or
cmp
inc
jecxz
cmpsl
jg
jmp
out
jle
jae
jo
shrl
push
nop
sub
or
filds
xchg
rclb
adc
stos
push
jmp
scas
movsb
ja
test
mov
rcr
imul
cmp
jns
pop
stos
cmp
arpl
mov
push
and
jno
mov
mov
or
aam
enter
insl
jge
push
and
ret
add
xchg
jp
dec
clc
rcll
lea
jge
pop
xor
xorl
sbb
fimull
and
pop
mov
xor
sub
add
mov
cltd
lahf
aad
neg
je
add
and
push
jne
xorb
pop
mov
sbb
pushf
add
call
cmpb
out
push
daa
jp
pop
inc
cmp
stos
pop
jl
mov
jmp
cmpsl
sbb
jnp
mov
add
mov
dec
or
jnp
mov
sbb
test
sbb
and
dec
retw
cmp
mov
bound
or
test
mov
sbb
push
stos
movd
sahf
push
sbb
ljmp
jno
sub
xor
ret
jg
stos
and
sub
inc
stc
ljmp
or
in
pop
mov
addb
mov
push
aad
fidivl
fidivrs
jb
out
inc
push
pop
repnz
mov
jae
loopne
adc
push
mov
inc
mov
shrb
out
int
cwtl
mov
sbb
or
cltd
call
mov
inc
mov
in
pop
add
cmp
movsb
cmp
scas
ret
add
js
scas
push
mov
xor
movsb
lret
insl
fs
jns
sbb
fisubl
inc
nop
cmc
dec
dec
and
jp
dec
xlat
arpl
into
xor
ret
jnp
popf
mov
push
xchg
scas
pop
push
pushf
cpuid
cmp
lret
sti
cltd
xor
leave
inc
shlb
gs
call
push
inc
outsl
xorl
repz
rolb
fwait
xor
inc
adc
jbe
inc
xlat
mov
cmp
ja
pop
movsl
xchg
mov
loop
sub
lcall
cwtl
mov
shlb
shll
pusha
lahf
or
xor
insb
add
sub
and
pop
loop
lea
mov
sub
mov
mov
std
sarb
stc
daa
imul
dec
jg
push
mov
sub
imul
mulb
xchg
or
jbe
js
stos
mov
shr
sbb
fstpt
nop
mov
mov
inc
jne
jnp
adc
fwait
sahf
push
mov
movsl
cmp
cmp
or
out
test
es
js
push
cmp
sub
lret
lock
in
dec
fsubr
add
xchg
fcomi
ret
pop
es
push
out
faddl
std
rep
jb
push
aam
adc
push
mov
pop
inc
data16
cmp
jecxz
repnz
repnz
leave
xchg
push
out
jle
subl
rcrl
fldcw
lret
pop
aaa
into
fimull
mov
or
fldcw
or
adc
mov
inc
fsubrs
sbb
insb
mov
outsl
jmp
add
xchg
shll
or
rdmsr
lcall
cmpsb
lock
iret
xchg
xor
and
arpl
lret
jl
faddl
dec
xchg
imul
out
stc
subl
jg
xorb
andl
mov
ret
bound
int
popa
cmp
mov
pushf
dec
add
xor
mov
push
pop
cmp
xchg
stos
ret
mov
pop
pop
cmp
pop
jge
mov
mov
pop
stc
dec
or
sub
sub
lret
sti
lret
std
fisttps
leave
mov
dec
dec
jecxz
insl
or
adc
call
dec
lods
movsb
fisubrs
mov
stos
aas
mov
jp
xor
fnsave
xchg
mov
cmpsl
pushf
rcr
add
fwait
fs
cli
or
inc
mov
sub
dec
ror
sarb
out
dec
in
subl
enter
mov
mov
pop
jnp
xchg
ss
cmp
jmp
pop
push
xor
jle
mov
jmp
rol
or
jo
arpl
lret
adc
fs
hlt
aas
cmp
into
inc
pop
lds
dec
into
jne
adc
fsubl
test
sub
stos
mov
xor
insb
xchg
push
mov
dec
push
js
ret
in
adc
push
outsl
pop
repnz
mov
sbb
mov
mov
cmpsl
jecxz,pt
and
fdivl
push
mov
enter
jle,pn
xchg
inc
push
pop
scas
xchg
pop
jae
lods
xchg
mov
dec
imul
xchg
popf
jb
into
repz
xchg
call
ss
or
lcall
inc
pop
in
mov
es
fists
enter
pop
jae
cmp
adc
jo
mov
aas
nop
add
add
ljmp
repnz
clc
push
xchg
push
out
mov
mov
pcmpgtb
mov
fimuls
jmp
add
outsl
iret
jle
jg
push
xchg
es
les
cli
xchg
sbbb
or
imul
imul
and
pushf
frstpm(287
fcoml
aas
xor
jo
adc
or
icebp
pmullw
inc
fs
or
jge
scas
add
addl
xor
stos
mov
fisubs
and
jae
or
or
jo
ficoms
jae
adc
xchg
mov
test
lret
and
xchg
pop
push
inc
mov
outsl
dec
inc
ljmp
adc
cmp
das
and
jno
dec
test
test
pop
movl
and
sbbl
adc
mov
pop
or
fs
jo
test
lods
loopne
adc
fdivl
mov
xor
xlat
adc
or
mov
pop
mov
push
rol
sahf
xor
clc
aaa
push
push
imul
and
mov
sbb
sar
insb
jp
cmpsl
mov
jb
test
cwtl
pop
loop
pop
cmp
scas
dec
shrl
andl
mov
push
xchg
dec
cmp
ljmp
ja
sub
adc
fnstenv
sub
in
or
arpl
push
sub
xchg
dec
or
addr16
fdivl
mov
mov
jl
sub
aam
sub
push
rcrl
cmp
test
lret
repz
call
or
add
cmp
or
lahf
out
iret
cmp
mov
pop
in
nop
dec
push
and
gs
push
xor
push
in
xchg
cmp
pop
lahf
mov
fnsave
lahf
pop
mov
push
or
cmp
cmpsl
cmpsb
xchg
push
aam
lods
and
bswap
pop
inc
and
shrl
sbb
lods
cmp
jo
inc
lock
cld
sti
not
scas
or
inc
bound
sub
jge
enter
shl
adc
add
repnz
push
xor
add
push
fnsave
jns
jae
aas
jle
in
cli
sub
test
sbb
pop
pop
shrb
mov
cmp
aaa
or
mov
mov
arpl
cmp
outsb
dec
fnstsw
xor
push
xor
add
mov
xchg
ja
xor
pop
loop
xchg
mov
cmpsb
cmp
pop
jp
pop
lods
jo
sub
je
sub
adc
cmp
mov
idivb
sub
sti
jbe
negl
add
es
or
fcomip
pop
in
xchg
sub
js
sub
nop
dec
repz
and
and
push
int3
inc
test
dec
sbb
repnz
pop
aad
mov
pop
enter
pop
stc
push
lret
scas
or
cmc
mov
pop
push
aam
je
cmp
xchg
pop
mov
xchg
mov
pop
dec
push
and
push
ljmp
out
fsubs
aam
out
xchg
and
push
ss
fistpl
and
inc
in
cmc
cmc
loop
ds
jb
pop
jne
pop
xor
gs
xchg
mov
fistps
push
lods
jle
imull
enter
adc
lahf
inc
out
ljmp
stc
cmc
shr
mov
stc
shll
imul
stos
jbe
mov
mov
ret
aaa
inc
and
fs
pop
stos
out
ja
inc
xchg
sub
jecxz
sbb
movsb
xchg
mov
lds
xor
negl
pusha
aaa
fwait
xchg
mov
loop
stos
out
push
cmp
inc
adc
xor
aas
inc
in
imul
test
cmp
and
mov
dec
ss
jbe
into
enter
into
in
lret
mov
out
fwait
xlat
sbb
test
mov
sub
icebp
cmpsb
push
add
jbe
movsl
adc
cwtl
or
cmpsb
xor
mov
pushf
fnsave
push
cmpsl
inc
pop
mov
inc
jecxz
dec
popa
out
mov
and
xor
xor
cli
cld
popf
adc
fisttps
addr16
adc
xor
xor
xchg
and
xchg
or
flds
mov
pusha
xchg
out
sbb
outsb
add
dec
repz
add
and
xor
aas
les
inc
mov
divb
or
repz
add
movsl
lret
in
cmp
bound
add
and
aam
dec
lds
in
arpl
push
mov
push
xor
mov
cmp
pop
jecxz
test
adc
leave
and
out
jbe
adc
and
push
ficoms
movsl
dec
mov
pop
xabort
ljmp
insl
stc
out
hlt
mov
fwait
std
lods
xchg
inc
loopne
xor
mov
jo
into
iret
fdivl
cmp
and
fldenv
cmp
in
and
in
testb
jns
test
xor
lret
lret
imul
push
bound
push
movsb
mov
add
out
sbbb
jecxz
addl
in
lock
xchg
push
lds
nop
es
sbbb
lds
adc
mov
mov
or
shrl
xlat
repz
push
xor
mov
xor
or
bswap
daa
jno
pop
pushl
jb
in
loop
repz
iret
push
jmp
cltd
daa
pop
in
inc
add
pusha
into
test
les
mov
cmc
adc
andb
daa
cmpsl
adc
xor
mov
inc
inc
push
aas
imul
shrb
sub
popf
adc
pop
in
or
fistpll
mull
into
pop
xlat
jbe
enter
push
mov
ljmp
jns
sbb
mov
popf
pop
icebp
pop
xorb
repnz
jno
mov
sar
cltd
pop
orb
and
mov
cmp
into
fwait
cmpsl
aaa
inc
lret
mov
sub
ret
aas
sti
out
cmp
pop
enter
dec
sub
repz
in
or
cmp
shlb
pop
pop
adc
fsubrs
shrl
pop
scas
jno
pop
jno
je
jnp
rclb
decb
jmp
pop
loope
mov
arpl
inc
loope
or
test
xchg
push
cmpsl
dec
jnp
fwait
cmpl
push
test
les
jns
jae
into
pop
in
adc
sub
sti
jae
cmp
jne
mov
cs
test
jle
mov
je
cs
pushf
scas
das
aas
rcrl
sti
mov
adcb
orb
movsb
mov
xchg
or
push
movsl
mov
xchg
mov
add
rcrl
xchg
add
rorb
or
shll
xor
and
ret
xor
xor
and
test
repz
xor
test
call
sub
lea
dec
arpl
mov
cmp
xor
jmp
mov
mov
fmul
leave
pop
pop
pop
jecxz
xchg
out
add
jne
mov
rorl
jne
and
xchg
stc
and
lea
inc
ds
fdivrs
aas
adc
movl
pop
aad
dec
mov
xorb
inc
pop
scas
inc
adc
mov
mov
or
push
imul
inc
mov
jle
out
push
or
shlb
sar
aam
mov
xchg
sbbb
cltd
sub
add
leave
add
nop
andb
or
add
push
xor
and
scas
daa
outsl
xchg
in
cmp
mov
jb
loopne
fucomi
xchg
inc
pop
push
call
mov
iret
cld
test
mov
mov
inc
test
faddp
scas
es
test
fimuls
daa
fwait
pop
cmp
mov
cmp
imul
and
lods
inc
mov
dec
mov
inc
or
mov
pop
lods
cmp
pop
mov
jg
orl
sarb
sbb
xchg
pop
jmp
in
notl
icebp
in
stos
inc
sahf
mov
add
sbbl
call
jle
jb
pushf
pop
adc
and
jecxz
jo
inc
ret
jp
mov
dec
or
jno
lods
add
xchg
ds
mov
dec
and
in
rol
jbe
dec
ja
lret
lret
ret
xor
mov
enter
jbe
ret
mov
inc
mov
pop
xchg
std
or
std
adc
in
call
inc
imul
out
pop
xor
push
in
or
push
loop
movsl
test
sub
xchg
je
addr16
out
sub
aaa
cld
in
iret
push
pop
pop
pusha
adc
cmp
xor
xor
cld
sub
leave
test
je
scas
in
roll
pusha
dec
inc
adc
sbb
xorl
xchg
inc
test
jle
nop
mov
cltd
xchg
sub
pop
int3
mov
loope
push
or
mov
stc
jns
jg
xchg
push
xchg
fisubrs
cmpsb
jne
fcoms
push
lret
in
ss
into
push
addr16
rorl
add
cmp
dec
shl
test
adc
inc
pop
sbb
pop
mull
push
push
imul
or
cmpxchg
mulb
mov
repz
int
add
enter
repz
repz
sbb
jns
mov
fs
pop
shl
rorb
lahf
imul
je
fs
xchg
test
test
push
jg
sarl
jl
add
daa
inc
adc
cltd
outsl
fs
xchg
aam
mov
jmp
or
out
popf
aad
into
lret
sub
cmp
mov
loop
or
and
mov
sti
out
mov
testl
call
fstps
and
inc
or
test
scas
sbb
loopne
aas
outsb
sbb
xchg
add
mov
iret
jp
pop
push
loopne
adc
leave
and
push
int
dec
xor
dec
rorl
lds
dec
fildl
sarl
inc
jcxz
inc
cli
mov
imul
icebp
sti
fwait
aas
push
cmpb
xlat
imul
pop
lcall
shl
jnp
push
push
bswap
sarb
outsb
inc
pop
xor
arpl
in
inc
jecxz
cmp
fisubl
sbb
lret
cwtl
xor
fdivs
adc
cmp
lahf
mov
push
in
das
into
stc
int
loope
imul
repz
fcomps
jmp
lods
fnsave
bound
fwait
out
jge
xchg
cltd
inc
icebp
jo
in
dec
iret
add
mov
mov
push
pop
push
cmp
cmp
lods
dec
cwtl
mov
jg
sub
mov
cmpsl
xor
push
adcb
jns
and
sti
test
adc
fwait
out
outsl
in
pop
repz
in
divl
test
inc
frstor
leave
js
mov
add
cmp
loope
idivb
ret
or
pop
push
xchg
sbb
dec
ja
xor
lea
mov
es
xchg
xor
mov
lds
inc
lahf
mov
aaa
jmp
popf
add
mov
sub
pop
in
jno
stc
adc
mov
sbb
ja
mov
add
icebp
jnp
outsl
cld
add
jns
xchg
add
and
mov
popa
rclb
xchg
add
mov
or
jmp
xchg
test
jle
mov
or
jae
call
push
sbb
xchg
xor
loopne
loopne
dec
pop
out
inc
xlat
outsb
jae
add
mov
push
adc
lret
ror
rcll
stos
cmp
je
mov
dec
adc
inc
push
mov
pop
mov
sbb
nop
sub
cmp
mov
jge
loopne
call
and
mov
cmc
icebp
mov
pusha
xlat
bound
adc
inc
in
xor
fidivl
ds
ss
push
mov
or
shrb
insl
jge
pop
imul
addr16
cli
lret
out
push
imul
sub
sti
sbb
js
stc
in
dec
push
mov
adc
notl
adcl
pop
sbb
dec
fs
repz
cwtl
incb
mull
sbb
inc
jge
in
cmp
loopne
scas
aad
sarb
and
mov
mov
out
push
popf
adc
mov
scas
jecxz
js
ret
daa
jno
jg
fcomi
push
or
ror
pop
in
jbe
in
mov
mov
stos
adc
and
or
data16
imull
jle
or
repz
pop
and
add
dec
adc
jns
mov
cwtl
inc
jae
pop
imul
mov
pusha
xchg
in
jecxz
das
sarb
enter
loopne
jnp
aam
stos
add
jno
stc
movsb
in
lods
adc
into
mov
cmpsl
mov
or
clc
push
xchg
jg
pop
fsubr
lcall
es
fidivl
test
mov
inc
jg
add
minps
inc
add
pop
xor
ds
mov
clc
mov
jp
cmpsl
lods
mov
lock
cmp
into
movb
cmpsl
fs
fimuls
fisubl
sbb
fxch
ret
mov
mov
lea
out
adc
sub
negl
xor
sbb
pop
insb
cli
js
xor
lea
int3
arpl
push
int3
jae
mov
jg
adc
fucomi
icebp
dec
push
bswap
xor
das
xchg
dec
gs
adcb
loop
jae
inc
lahf
jae
pop
xchg
inc
mov
out
push
push
add
ret
into
gs
mov
in
aas
pop
nop
sbb
xchg
mov
push
mov
imul
push
inc
sbb
mov
mov
hlt
data16
mov
ficomps
xchg
pop
insl
movsl
jne
dec
imul
imul
mov
adc
mov
rep
sbbl
mov
mov
push
int
pop
mov
out
sahf
inc
cld
lret
or
cwtl
das
cld
pop
mov
mov
mov
outsb
jbe
xchg
mov
xchg
cmc
mov
lods
sbb
mov
or
pop
fbld
mov
mov
mov
icebp
cmp
dec
aad
addr16
cmp
sub
sbb
cmp
popa
cltd
jle
sub
sub
mov
xchg
mov
pop
iret
data16
or
add
out
hlt
adc
push
lret
les
mov
push
jb
in
enter
cmp
xor
jmp
inc
arpl
in
push
or
mov
int
push
decl
sbb
pop
inc
lods
pop
dec
dec
rcrl
fdivrp
adc
loopne
xchg
dec
adcl
add
sti
push
test
cmp
int
push
and
or
push
push
push
sbb
int3
jp
test
mov
arpl
ficomps
pop
lock
or
add
pusha
std
and
sbb
ds
aas
jmp
and
loope
rcrl
ret
xchg
sub
aaa
add
inc
lcall
orb
cmpsl
pop
incl
jbe
push
nop
sub
xchg
mov
jle
ret
push
ss
sbb
push
in
and
jl
jo
andl
les
js
inc
inc
jne
mov
dec
xor
sbb
cmpsl
lret
push
loope
bound
add
pop
adc
sbb
and
arpl
cmc
jns
lods
shl
pop
and
and
iret
and
mov
loope
cmpsb
ret
inc
dec
jg
mov
sbb
mov
dec
or
scas
push
mov
mov
jecxz
lret
in
xor
sub
mov
add
shr
out
add
nop
lds
jo
xorl
repz
lahf
or
and
cmpb
mov
cmpb
roll
mov
imul
lret
xchg
jb
jo
stos
fwait
xor
cmpl
cmp
jmp
ret
test
sub
push
hlt
mov
inc
cmp
jecxz
jne
sbb
sub
rol
cmp
repz
xchg
xlat
pop
or
andb
cmp
mov
push
test
push
jbe
mov
in
pushf
sbbb
and
push
scas
sbb
shl
add
scas
push
sahf
adc
test
add
fcoms
or
jmp
add
xor
pop
dec
in
daa
or
fwait
bswap
dec
stos
daa
xor
ret
dec
fsub
cmp
imulb
mov
insl
dec
in
lods
decb
daa
cwtl
push
in
aas
push
movsl
sub
push
cmp
xchg
insb
jae
in
lods
sub
mov
jbe
mov
jmp
jnp
je
and
lds
sub
sub
xor
lcall
mov
fbstp
fs
out
or
je
and
adc
int
mov
hlt
dec
inc
pop
jae
cmp
inc
andb
and
pop
cltd
jb
dec
loop
iret
and
jmp
xor
cmpsb
inc
pop
sub
nop
pop
mov
pop
jl
aad
insl
or
or
xchg
aam
cwtl
rcl
jl
add
sub
lret
lods
cltd
jae
out
or
mov
dec
dec
jecxz
imul
adc
out
mov
add
cmp
xchg
cmp
mov
int
jnp
in
in
xchg
mov
ljmp
jl
cmp
add
cmp
in
pushf
mov
loopne
leave
sarl
sahf
popf
push
adc
test
in
test
xor
xor
gs
jmp
adc
xchg
test
and
movl
xchg
mov
xor
jbe
mov
pop
push
sbb
cmp
push
jne
mov
cmp
sbbl
sub
cmpsb
cmp
aaa
inc
les
cld
cwtl
sub
aad
mov
dec
popa
xor
jbe
sbb
rolb
add
movsb
popa
pop
rclb
int
popa
mov
into
aam
mov
or
mov
pusha
mov
adc
mov
shlb
xchg
jo
dec
cwtl
xchg
jle
or
jl
xchg
fisubrl
xchg
cmc
jp
dec
cmpsl
sub
jb
dec
lret
mov
loopne
adc
sub
push
jle
pushf
mov
subl
idivb
push
pop
and
pop
repnz
adc
dec
popa
aaa
pop
aad
aad
xchg
mov
test
inc
inc
jle
mov
mov
sbb
dec
ja
adc
dec
inc
mov
imull
inc
sub
cwtl
mov
out
dec
in
insl
jno
cwtl
mov
xchg
es
pop
in
dec
sbb
int
push
sub
nop
xchg
jo
mov
ljmp
pop
cs
mov
jbe
and
xchg
dec
pop
hlt
jle
into
pop
loop
jnp
xlat
pop
adc
hlt
int3
xor
ret
stos
orl
outsb
out
inc
aas
ret
jb
es
inc
xor
adcb
leave
pop
test
lea
loop
pusha
fstpt
fiaddl
jns
in
and
ret
dec
jecxz
ljmp
movsb
add
test
jmp
das
out
cmpsb
xchg
es
xchg
je
sti
cltd
shlb
dec
xor
enter
inc
mov
pop
adc
xlat
sub
inc
out
out
push
into
movsl
dec
fs
outsb
ficoml
rorl
scas
insb
inc
or
mov
mov
push
mov
cs
popa
sbb
lahf
pop
sub
add
xchg
pop
sub
jne
sbbb
aad
or
movsb
sbb
push
jle
iret
push
xchg
sbb
je
out
pop
clc
push
jl
jp
or
xchg
stos
ds
lret
test
sub
lahf
ss
mov
jbe
jmp
xor
in
mov
mov
ja
or
mov
and
in
xor
adc
cwtl
jle
cltd
js
cltd
movsl
pop
jmp
gs
cmp
pop
iret
or
imul
pop
cmp
and
dec
xchg
pop
fsave
testl
imulb
das
jb
test
bound
rorb
into
sub
cmc
pop
pop
shll
inc
gs
sti
push
add
add
push
mov
rep
int3
push
adc
cmp
das
cli
jge
sub
inc
hlt
sub
cmp
mov
mov
lret
mov
in
scas
cmpsb
cmpsb
cmp
push
outsb
sub
mov
dec
sbb
scas
inc
push
lea
mov
outsb
clc
int3
daa
jbe
out
in
daa
pop
pop
mov
pop
push
and
nop
mov
mov
lea
mov
add
cmp
test
fistps
cmp
inc
out
lea
pop
adc
or
out
xchg
mov
enter
jg
or
push
subb
xchg
addr16
fs
out
lods
jmp
in
and
pusha
mov
add
mov
repz
mov
pop
mov
pmaddwd
pop
popf
lea
insl
mov
and
lods
mov
fsts
mov
xor
jecxz
mov
sub
sbbl
aas
ds
mov
and
loope
inc
push
and
lods
cmp
inc
loop
mov
lock
xchg
xor
insl
cltd
cmp
and
inc
data16
mov
sbb
xor
std
push
add
sbb
pop
dec
sbb
in
iret
push
aam
xor
push
push
cmpb
fiaddl
lret
and
outsb
push
add
xor
loope
xchg
dec
lret
cmp
jnp
pushf
pop
inc
movsl
mov
mov
push
jne
xchg
adc
xchg
insl
repz
das
mov
fmuls
lea
inc
leave
or
cmp
inc
dec
test
iret
mov
push
mov
imul
aas
xlat
imul
xor
xchg
insl
push
dec
jbe
jg
repz
sbb
xor
aad
push
push
add
aad
mov
in
mov
lcall
clc
fadd
lcall
and
ljmp
out
xchg
jmp
dec
cmc
outsl
push
daa
jno
pop
inc
repz
xchg
cmpxchg
inc
mov
xorl
push
xlat
adc
testl
dec
addr16
cmp
movsl
inc
in
mov
dec
push
int3
sbbb
inc
mov
dec
jmp
int
fsubrs
pop
fmull
cmc
and
popf
xor
sub
aas
shll
push
pusha
inc
pop
shll
and
xor
or
mov
inc
sbb
pop
xchg
testb
inc
popa
and
aam
xchg
mov
aam
cmp
xchg
inc
ret
pop
inc
inc
out
push
mov
pop
lods
sub
jle
int
jnp
xor
cmc
pop
adc
mov
sbb
shr
xchg
pop
scas
push
or
xor
xlat
fs
mov
cltd
icebp
scas
aaa
and
or
into
iret
add
incb
and
dec
xor
rorb
arpl
pop
cltd
dec
clc
mov
ja
push
rclb
test
sub
sbb
mov
shrl
mov
jb
sahf
lock
test
inc
push
les
push
mov
imul
sahf
add
clc
mov
loope
mov
jne
or
fs
insb
out
aam
add
inc
icebp
xor
mov
and
jg
shr
or
lods
cmp
adc
xchg
xor
add
outsb
mov
pop
and
scas
cmc
inc
mov
fmulp
sub
mov
sub
add
inc
pushf
mov
lret
sub
inc
in
jo
jge
add
and
xor
cs
fcoms
inc
xchg
inc
stc
add
lret
and
shl
xchg
mov
testl
lods
movsb
mov
xor
pushf
pop
inc
out
je
int
pop
aad
sub
mov
dec
or
add
imul
gs
aam
xchg
add
mov
imul
push
jmp
std
mov
ret
call
mov
lcall
or
popf
xor
xor
mov
jmp
mov
sub
xor
pop
ret
outsl
out
jle
adc
adc
inc
jg
add
scas
mov
push
jl
fstl
mov
xchg
test
scas
cmpsl
add
imulb
leave
adc
andb
mov
xor
ljmp
sarb
ficoml
lods
mov
xchg
ja
sub
cmp
imull
sub
push
or
push
mov
sbb
shll
jge
push
aad
addr16
out
les
push
stc
adc
rclb
test
fisttps
in
arpl
cwtl
jg
repnz
xchg
xorb
mov
push
cld
pop
push
push
jno
sub
sub
jle
mov
sarl
clc
and
rorl
xor
fst
add
popf
sub
inc
pop
xor
pusha
mov
jge
inc
mov
adcb
mov
push
aas
mov
out
js
aad
cpuid
cmp
pop
jmp
imul
cmpsb
cs
divl
mov
inc
push
inc
inc
test
fstps
xor
lret
inc
paddw
lret
xlat
jnp
adc
inc
sub
lods
or
adc
xor
cmp
stos
add
mov
leave
insb
xchg
je
repz
pusha
rcrl
mov
es
xchg
xor
add
in
and
push
mov
jno
add
mov
gs
ret
shll
les
cmp
outsl
mov
jbe
and
mov
ja
int3
pop
jne
push
cmp
jg
cmp
push
rclb
push
lret
fwait
add
scas
xchg
mov
or
outsb
out
ljmp
data16
dec
out
call
mov
xor
in
cmp
mov
xchg
xlat
pop
push
rcrl
dec
lret
bound
sbbb
mov
or
leave
sbb
jne
or
sar
pop
adc
movl
imul
leave
mov
aam
add
loope
test
lret
je
sub
dec
mov
and
add
aas
call
fnstsw
ret
push
in
icebp
enter
adc
ret
icebp
in
repz
pop
adc
adc
add
lea
mov
into
adcb
lret
pop
pushf
and
and
xchg
movsb
clc
sahf
and
sbb
aam
cmp
push
orl
jnp
add
out
add
pop
int
pushf
jg
adc
xchg
push
js
xchg
cmpb
dec
push
movsl
jl
out
cld
cmpb
iret
or
sub
inc
and
cmp
fwait
dec
dec
mov
cmp
push
daa
cmp
stos
push
movsb
shlb
lret
idivb
adc
add
shl
add
rcrb
jne
out
data16
add
scas
and
add
cmp
or
fisttpl
sub
cmp
xor
dec
incl
push
popf
shlb
cmp
aad
xchg
jp
shrb
inc
push
pop
movsl
not
fcmovnb
xor
clc
fbld
int3
loop
xchg
cwtl
in
mov
pop
push
lods
mov
pop
xchg
stos
sub
add
jnp
icebp
lods
stos
std
add
cmpsb
pushf
push
xlat
or
xchg
js
test
mov
pop
rol
adc
ljmp
xor
ss
cld
push
scas
clc
sbb
adc
cmp
shrb
int3
or
mov
xlat
push
or
aad
mov
mov
jmp
je
lods
fisubs
fwait
clc
mov
mov
cmpsl
cmp
nop
sarb
stos
loop
cmpsb
testl
lds
dec
jb
xchg
dec
pusha
fwait
dec
sub
adc
outsb
and
xorb
clc
shll
cmp
test
int3
idivl
lahf
xchg
dec
in
outsl
int3
pusha
and
lret
inc
out
into
and
lahf
push
mov
adcb
jle
mov
or
jmp
add
sti
jmp
fcomps
in
das
jecxz
push
stc
pushf
ja
call
cmc
pop
mull
mov
aaa
movsl
sahf
call
imul
insl
mov
sub
popa
cmp
xchg
setnp
pop
test
mov
clc
cmpsb
mov
sahf
clc
pop
jo
fcmovnb
fimuls
dec
popa
push
daa
scas
inc
pop
jb
fstpl
mov
push
out
clc
push
movsl
scas
push
out
add
lods
test
lcall
cs
lahf
push
movsl
jmp
jge
lret
ret
mov
push
dec
pop
inc
fmul
ror
jae
pop
es
popf
push
insl
iret
mov
sbb
inc
or
pop
fs
test
fdivs
or
push
pushf
xor
push
add
rcrl
mov
mov
cmp
cmp
test
dec
aad
jecxz
int
lahf
leave
mov
sub
arpl
int3
lods
movsb
repnz
inc
test
sbb
adc
pop
sub
push
repz
test
je
push
cmp
push
rcl
jne
mov
push
cmpsb
jecxz
call
clc
mov
int
stos
shlb
stc
pop
mov
lahf
xchg
insl
orl
mov
inc
icebp
fsubr
sbb
rorb
jg
xchg
push
out
pop
mov
popa
xchg
testl
jae
xor
into
pop
sbbb
imul
sbb
mov
adc
jge
push
sub
es
lcall
movsl
fsub
or
push
jae
in
mov
imul
xchg
xchg
std
test
add
movsb
aad
inc
adc
movsl
inc
fs
repnz
adc
xchg
xor
test
mov
xchg
pop
icebp
cld
or
test
sbb
fucomip
inc
mov
fisubl
fs
pop
outsl
mov
in
inc
push
inc
je
pop
push
xor
xchg
int3
mov
scas
mov
ret
aad
cmp
enter
inc
jmp
inc
mov
cld
mov
pushf
mov
pop
rclb
fildll
cwtl
icebp
adc
adc
inc
pop
js
cmp
or
mov
lcall
out
and
aad
ret
xchg
cmp
push
pop
jae
jmp
ficoms
in
pop
orb
jns
outsb
dec
out
mov
insl
les
inc
jo
and
dec
loop
inc
ds
inc
sbb
js
jae
cmp
xchg
pop
in
aaa
push
sub
test
mov
loope
int3
mov
cmp
dec
lret
hlt
dec
std
outsb
sub
sub
mov
xor
jmp
ljmp
jg
xchg
sahf
xor
roll
mov
pop
mov
xchg
pop
into
loope
hlt
push
out
out
xchg
cmpsb
jle
cmpsl
mov
cs
dec
outsb
loope
test
aam
daa
pop
adc
cmp
std
pop
mov
call
aas
in
jecxz
xor
adc
rcl
mov
jbe
xor
adc
lea
jmp
sahf
mov
xchg
add
leave
sub
pop
adc
dec
jno
daa
neg
inc
xlat
or
add
cmc
pop
in
jp
push
and
pop
aas
push
jle
sub
lret
loope
dec
jp
movsb
sbb
pop
dec
mov
les
ds
xor
cmp
mov
inc
push
aaa
or
adc
push
fdivl
inc
xchg
sahf
jg
iret
mov
push
push
or
push
inc
push
xor
dec
les
out
aaa
push
pop
xacquire
mov
nop
roll
aad
stos
mov
arpl
jg
mov
xchg
cmp
cwtl
jle
fs
les
rclb
adc
hlt
sub
cli
das
xchg
sbbl
mov
insb
cli
pslld
incb
std
popa
int
inc
mov
mov
mov
lock
ror
inc
data16
dec
loop
xchg
ljmp
inc
xchg
jae
cltd
les
inc
in
jbe
addr16
pop
iret
inc
xlat
add
pop
aaa
or
jbe
lret
ficoml
rcl
push
mov
mov
xchg
lods
mov
in
mov
es
dec
out
xor
addb
mov
cmpl
pop
pop
fimuls
cwtl
adc
ljmp
cmp
jl
or
ret
pop
pushf
cltd
mov
push
push
pop
pop
fwait
lea
fmull
vcvtpd2psy
outsl
mov
sbb
and
mov
subb
adc
mov
push
or
popa
mov
add
inc
fcomps
dec
scas
cmp
xor
xchg
ja
mov
fsubp
sbb
lcall
mov
adc
cmpsb
std
int
fwait
push
cwtl
imul
cmpsl
sbb
rcrl
inc
loope
in
dec
push
jo
pop
mov
adc
and
mov
add
add
xchg
fldcw
mov
call
cmp
pop
mov
pushf
sbb
push
xor
inc
pop
jo
lea
shlb
outsl
xchg
dec
add
mov
cmp
movsb
mov
xchg
sub
mov
outsl
pop
and
je
jmp
mov
mov
pop
sub
scas
test
push
fwait
shll
push
popa
cld
jne
out
jnp
mov
ja
mov
mov
fadds
call
mov
hlt
sbb
mov
repnz
mov
push
mull
ret
mov
testb
inc
pop
aas
mov
inc
sbbl
subl
push
inc
imul
sbb
fisttps
int3
pop
push
out
sbb
pop
xchg
xchg
add
pop
sarl
loop
sub
rcrl
leave
loope
push
ljmp
scas
inc
cltd
lds
inc
xchg
pop
mov
cmp
fldcw
cmp
add
imull
mov
mov
mov
mov
fst
mov
mov
int3
arpl
ljmp
xchg
mov
jmp
jb
push
cmp
cmp
adc
repz
sbb
outsl
popa
andl
cwtl
cmpl
fs
sbb
fs
ret
sbb
shll
in
mov
jg
xor
jl
into
in
push
out
pop
cmp
std
dec
es
or
fwait
push
cmpsl
mov
mov
test
pop
insb
imul
aad
mov
mov
lea
call
push
jbe
cld
dec
in
es
rol
imul
hlt
mov
shl
xchg
sbb
aas
std
loopne
xor
xchg
mov
xor
fldt
pop
jecxz
adc
mov
mov
fisttpl
std
stos
shlb
dec
lods
adc
test
loop
pop
out
in
jns
cmp
fisubrl
aas
pop
incl
pusha
cltd
mov
push
cltd
push
repz
cmp
adc
pop
xchg
mov
fwait
dec
js
sarb
jb
jg
add
inc
mov
out
popf
add
xor
pop
or
das
int
fnstcw
out
adc
pop
pop
and
inc
in
add
daa
inc
fs
lea
sbb
ds
jmp
inc
jbe
dec
xorl
pop
pop
xorl
cmp
xchg
pop
out
ja
lea
ds
inc
jno
or
xor
mov
mov
pop
jg
out
inc
pop
filds
lods
mov
push
addb
gs
gs
loop
mov
lds
pop
dec
dec
imul
pop
mov
push
jnp
fs
lds
xchg
test
lret
repnz
mov
adc
adc
gs
mov
mov
fcoml
or
lea
add
inc
out
outsl
pushf
and
loope
testb
ss
pop
dec
mov
or
sti
jo
jl
and
into
mov
sbb
dec
lods
mov
or
or
cli
gs
jb
ljmp
adc
nop
cltd
dec
cmp
xor
xor
or
inc
pushf
ja
xor
shll
repnz
hlt
adc
xor
nop
enter
add
and
shll
enter
out
fsincos
loopne
or
clc
dec
and
jbe
cmc
popa
pop
sub
mov
fwait
insb
pushl
xchg
lea
xorb
cwtl
fldt
pusha
pop
pop
out
test
jne
outsl
pop
out
xchg
adc
bt
negb
or
pop
test
and
inc
push
xchg
call
pop
mov
rcll
pushf
lret
add
mov
mov
xchg
dec
xchg
int
pop
mov
out
pop
inc
or
push
xchg
jge
xchg
jp
pop
dec
push
fwait
pop
sahf
int3
jno
push
xchg
scas
lcall
and
aaa
testb
xchg
mov
movl
mov
addl
cwtl
loope
test
inc
pusha
or
sub
sbb
ret
loope
pop
in
sti
stos
aam
adc
pop
aas
sub
add
or
or
out
adc
xor
pop
outsl
inc
or
mov
repz
jecxz
addr16
pop
adc
dec
out
test
test
dec
sbb
inc
ds
push
mov
and
shl
jecxz
scas
mov
fbld
sbb
in
ret
xor
ljmp
and
imul
mov
fbld
cld
xchg
pop
push
mov
pop
adc
mov
rcr
sar
stos
push
jbe
out
test
sub
popf
adc
xor
insl
in
cmp
ret
in
cld
xchg
xor
mov
sbb
inc
lcall
sbb
adc
push
sbb
mov
jl
popa
mov
not
loope
popa
pop
cltd
jg
mov
pop
imul
arpl
scas
xor
sbbl
ja
lahf
fistl
inc
fs
int
test
ljmp
sarl
mov
sub
push
mov
lock
fcoms
in
fdivl
pop
mov
inc
je
dec
mov
filds
and
loopne
or
dec
or
and
add
jge
orl
mov
fimull
and
push
sub
lods
dec
and
mov
aam
or
push
mov
pop
out
cmp
cmp
pop
lods
stc
push
pushf
pop
repz
aad
fisubrs
cmp
sarl
push
xor
inc
shll
gs
in
loope
sub
sub
or
push
add
jb
adc
jns
pop
fsubr
nop
mov
ja
aaa
pop
adc
xchg
insb
dec
add
lds
xlat
shrl
inc
js
addr16
jge
mov
sbb
add
and
mov
fisubs
ret
gs
in
hlt
mov
push
add
loopne
pop
rorl
or
xorl
or
mov
loopne
mov
inc
cmp
mov
fsubrl
imul
push
jno
cmp
test
loop
pushw
rol
or
inc
cmp
pop
hlt
adc
jb
cmpsb
inc
mov
mov
cmp
stos
lret
lahf
shll
mov
lds
enter
aam
add
mov
fidivrs
addr16
out
jae
push
cld
xchg
mov
mov
lahf
cld
dec
test
pop
dec
xchg
dec
lock
lods
jns
out
test
mov
stos
jle
aas
ja
cmp
es
sbb
sub
outsb
aas
lahf
stos
jo
pop
adc
lret
push
sub
lret
mov
xchg
push
mov
cmpsl
jmp
inc
add
movl
xchg
fsubrl
mov
sti
cmp
es
aam
pop
push
in
mov
xchg
es
or
or
or
lret
mov
je
daa
daa
cmovp
in
test
or
shrb
mov
addr16
xor
dec
fs
inc
adc
adc
inc
mov
jnp
push
test
enter
mov
nop
inc
cmp
and
inc
inc
sbb
mov
mov
addl
mov
rcll
jle
sahf
jno
inc
ss
cmp
sbb
jmp
dec
stc
sbb
sub
andb
push
imul
dec
mov
outsl
and
ds
adc
and
mov
mov
inc
jns
cwtl
jnp
xchg
call
push
sbb
push
mov
movsl
push
jno
sub
rcl
sbb
icebp
pop
mov
scas
ficompl
xor
mov
sbb
sbb
mov
xchg
nop
jmp
xchg
mov
loopne
jecxz
ljmp
dec
pop
mov
mov
insb
sub
jnp
push
inc
mov
icebp
mov
adc
push
sub
aas
dec
std
dec
stos
pop
cli
sahf
lods
sti
dec
lea
add
jns
dec
stos
lcallw
jns
stc
aas
xchg
sti
push
loope
cli
mov
stc
and
enter
test
xor
stc
mov
jns
push
jne
jg
aad
dec
push
repz
in
pop
aam
dec
subl
test
mov
adc
popa
mov
pop
subl
jo
nop
push
repnz
std
mov
std
mov
mov
fsub
js
repz
or
mov
xchg
mov
and
and
cmp
fwait
cmpsl
ds
clc
jae
lock
mov
jle
out
test
hlt
inc
add
sub
dec
pop
cs
mov
mov
mov
outsl
jb
push
fbstp
rcr
in
xor
std
and
cli
stos
lea
in
mov
mov
loop
in
loop
in
add
test
dec
or
shrl
sti
push
lods
mov
mov
jmp
jns
mov
adc
pop
call
cmp
in
test
mov
fidivl
in
dec
ret
jge
stos
push
imul
xchg
leave
xchg
mov
cmc
xor
hlt
mov
mov
mov
or
jnp
push
sbb
lds
push
sbb
sbbb
imul
cmp
dec
movsb
addr16
lahf
daa
dec
bound
xchg
xchg
cld
sub
daa
loopne
in
push
cmp
push
mov
pop
mov
add
int3
cmp
mov
enter
aaa
adc
dec
mov
orb
pop
cmc
stos
pop
test
adc
jmp
jle
xchg
mov
cmp
bound
pop
or
or
or
push
lods
inc
test
xor
adc
popa
inc
mov
in
xlat
pop
cmp
dec
hlt
pop
js
sub
fstpl
lret
insb
jae
ret
iret
lahf
sbb
mov
jbe
out
jmp
push
adc
cmp
push
pop
inc
xchg
pusha
ljmp
fcoml
fldl2e
test
sti
adc
push
jnp
test
xor
scas
stos
cwtl
popa
sub
int
xchg
and
cmpl
popl
scas
and
sbb
shlb
xchg
imul
adc
jo
ja
sbb
mov
call
jnp
outsl
ret
or
mov
add
out
cwtl
rdpmc
push
sub
inc
ficoml
neg
imulb
push
dec
in
dec
aad
out
in
pushf
push
out
mov
call
sti
jb
jl
test
mov
sbb
sbb
test
xchg
es
mov
out
and
sub
dec
push
inc
mov
pop
aaa
pushf
lock
stos
out
mov
jns
in
fldcw
and
pop
pushf
jmp
sbb
cmp
cmp
sbb
call
shrb
jg
movsb
sub
pop
mov
mov
in
mov
test
cmp
or
mov
mov
outsl
jnp
aad
call
xchg
xchg
cs
jl
push
pop
dec
or
xor
in
daa
adc
push
dec
ret
and
cltd
arpl
sbb
lret
jp
es
sub
add
push
shrb
xor
jmp
add
mov
std
in
fsubl
scas
loopne
out
adc
out
and
xor
mov
mov
test
cltd
mov
pusha
testl
fs
in
xchg
xchg
push
in
cmpsl
sarl
adc
cmp
test
movsl
jle
pop
int3
mov
aas
xchg
mov
dec
mov
push
leave
pusha
mov
shl
push
or
mov
jne
negl
bound
and
push
filds
clc
mov
ffree
fstp
pop
cmp
push
insl
leave
ljmp
adc
pushf
xor
cmp
push
cmc
data16
out
sarb
mov
push
jnp
stc
jo
mov
ror
pop
adc
add
ret
mov
ret
insl
inc
jecxz
out
out
repnz
dec
ljmp
cmp
mov
shl
adc
adc
dec
cwtl
pop
mov
pushf
xor
adc
aas
mov
pop
cmpsb
test
repnz
sahf
dec
test
dec
xlat
into
jns
ret
lock
cld
xor
xchg
mov
shlb
out
ficoml
xor
and
in
push
lods
sbb
jg
xchg
mov
mov
lods
shrl
cmp
jmp
call
add
and
adc
dec
add
stos
pop
sahf
xor
jle
into
add
lret
das
add
mov
fcoms
inc
test
push
shlb
insb
add
sbb
dec
add
push
add
jbe
aaa
js
adc
mov
mov
jb
mov
call
sub
mov
cmp
rorl
pop
into
gs
add
pusha
inc
ret
pop
lret
loope
or
lcall
dec
lahf
loopne
test
je
mov
out
add
out
and
imul
cmp
add
testl
xchg
cld
add
or
adc
fwait
loop
arpl
roll
sbb
cmpsl
mov
adc
mov
pop
call
int
pusha
scas
mov
in
mov
je
xchg
sbbb
inc
scas
or
jne
ss
icebp
push
cld
sub
rcrl
dec
inc
je
imul
imul
xor
lds
stos
dec
mov
add
or
cmp
push
add
loopne
lret
pop
movb
jb
cmp
pop
das
jb
lock
and
das
add
pop
pop
push
je
jb
mov
rorb
adc
aaa
pop
xor
sub
or
mov
jne
repz
ss
cmp
bound
idiv
es
fsubrs
xchg
loope
sub
mov
push
mov
sbb
addr16
icebp
dec
push
in
pop
lcall
addr16
insb
inc
cld
dec
scas
add
sbb
wrmsr
fisttpl
popf
pop
jl
xchg
push
stc
popf
das
and
popa
push
push
cmp
lds
and
adc
sahf
ret
xor
mov
xor
test
fisttps
out
mov
jbe
es
dec
sbb
xlat
cld
adc
push
ljmp
sti
cmp
or
cmp
roll
loopne
lret
or
adc
mov
dec
bound
mov
cltd
inc
lcall
and
pop
push
jmp
mov
in
jo
pop
loop
sub
jp
movsl
out
imul
mov
mov
mov
jmp
pop
inc
pop
mov
xlat
inc
and
xchg
pop
push
xor
fwait
xchg
pop
pop
scas
jl
adc
clc
movsb
inc
adc
sub
xor
shll
mov
dec
roll
push
jl
sbb
je
icebp
mov
or
and
fmulp
lret
addr16
stos
sub
jmp
xor
pop
loope
sub
lcall
mov
xor
shlb
stos
out
jl
push
mov
int3
lret
inc
mov
adc
adc
add
icebp
pop
dec
sahf
mov
sar
jb
frstor
mov
adc
mov
inc
es
mov
stc
pminsw
inc
faddp
mov
adc
out
div
jp
sbb
cld
lock
jb
das
daa
mov
jge
ja
sbb
icebp
nop
pop
cmc
rcrl
cwtl
mov
or
mov
pop
adc
in
jp
stos
inc
inc
sbb
dec
int
loope
mov
xlat
idivl
push
insl
push
subb
ret
mov
outsb
pusha
inc
pushl
dec
xor
and
nop
lods
mov
roll
mov
mov
sarb
lret
test
dec
loope
mov
movsl
cld
sbb
lret
mov
call
sub
fs
mov
pop
adc
sub
xor
repz
out
call
push
or
sbbl
ds
loop
stos
insb
jns
mov
aaa
add
xchg
sub
icebp
sub
and
mov
rclb
xchg
and
into
pop
sub
xchg
mov
rol
aam
jle
jg
mov
fistl
notl
stc
shl
jns
rolb
xor
jmp
push
out
jb
stc
xchg
je
add
mov
push
xor
or
mov
fcomip
jl
mov
sti
fwait
lods
and
mov
push
cltd
jl
data16
stos
push
inc
lods
dec
lret
shll
dec
pop
adc
mov
mov
ja
aas
cltd
or
mov
pop
add
push
movsl
dec
mov
test
test
scas
adc
mov
gs
push
outsb
mov
fstl
dec
sub
aam
aaa
leave
shl
pop
lret
pop
cmpsb
and
pop
mov
dec
push
outsl
dec
jae
inc
lea
test
test
lret
sbb
ret
mov
jo
dec
sub
rep
pop
adc
out
mov
push
cmpsb
pop
insl
jg
jp
or
ja
jb
imul
push
mov
jg
scas
insb
xor
mov
test
retw
mov
jbe
in
dec
jmp
and
sub
into
inc
clc
sbb
orl
jmp
jle
lods
ret
repz
ret
push
aas
pusha
xchg
xchg
mov
jg
inc
sbb
xlat
pop
ds
or
xchg
iret
jno
pop
jp
add
cmp
cmp
push
inc
add
mov
scas
lods
repnz
xor
sub
mov
in
mov
sahf
cmp
jns
mov
sti
sti
lods
lcall
xchg
jl
dec
arpl
into
shr
sahf
push
rol
lret
mov
test
sbb
sbb
ljmp
popf
mov
std
and
and
mull
data16
js
cmp
jo
mov
dec
xchg
ret
cmc
shrb
ja
lret
test
jmp
mov
loope
jmp
add
stos
js
xchg
and
jno
fildl
xchg
js
loope
cmp
jo
test
punpckhbw
lods
adc
mov
jb
lret
push
gs
movsl
jl
js
mov
sub
jae
inc
jne
idivl
add
jae
push
call
aaa
stc
outsl
jbe
cmp
add
shlb
inc
decb
mov
ficomps
sarb
nop
sbb
jb
fidivl
mov
jb
push
jl
jae
mov
push
mov
adc
sahf
sbb
orb
pop
mov
ret
lahf
sub
inc
mov
pusha
andb
stc
es
ret
outsb
call
mov
mov
cmp
dec
mov
mov
lds
notb
addr16
pop
cltd
or
ret
aam
stos
cwtl
dec
icebp
in
or
mov
mov
push
lahf
or
mov
mov
test
pop
repz
jge
out
ret
jnp
jecxz
inc
fwait
out
jl
xchg
mov
bound
adc
jp
xor
sbbl
adc
add
pop
jae
and
out
push
adc
shll
pop
ret
inc
pop
icebp
jae
gs
lcall
sbb
int3
arpl
push
ljmp
stc
into
cld
xor
and
or
adc
fdivrl
lahf
scas
std
xor
ljmp
addl
inc
push
jp
bnd
cld
xor
xchg
bound
add
divb
cmpsl
jmp
dec
sbb
dec
imul
pop
jo
jbe
dec
cmp
mov
sahf
pop
test
outsb
sub
xchg
out
lods
jp
ret
in
mov
push
dec
ficompl
je
sub
push
jmp
movsb
pop
repnz
fadd
add
lea
pop
dec
pushf
xchg
rcl
sub
mov
stc
jl
js
bound
sarl
call
and
mov
add
orl
xchg
loopne
adc
lahf
loopne
inc
xor
pop
sub
xor
add
xor
mov
mov
je
lods
pop
ret
push
shlb
sti
jp
sub
mov
aas
or
ret
shll
pop
push
stos
jp
dec
rorb
xor
adc
into
jne
test
ljmp
or
jno
cmp
adc
or
xor
push
or
mov
pop
mov
and
pop
pop
int3
cmp
adc
or
stos
mov
hlt
cmp
inc
adc
sub
jns
mov
jne
iret
es
jge
test
or
push
dec
out
movsl
lret
lret
sbb
cltd
cmp
add
or
in
dec
pop
insb
jae
loopne
fwait
jmp
arpl
jmp
sarb
mov
fdivs
test
lret
cmp
adc
fadd
rcll
clc
add
inc
mov
adc
subl
push
jns
pop
test
aaa
sarb
or
sub
nop
cwtl
cmpl
leave
cmc
adc
or
or
jmp
push
gs
cld
leave
adc
push
pusha
pushw
or
outsl
jl
ds
gs
push
sub
ja
dec
iret
notb
pop
inc
mov
movsb
ja
cld
lahf
sar
xchg
lret
cmp
outsb
add
push
mov
shl
stos
bound
xchg
mov
xlat
mov
pop
or
dec
xor
mov
lea
fimull
dec
mov
pop
adc
mov
mov
jb
das
xchg
scas
gs
popf
xchg
and
dec
mov
mov
ret
imul
jnp
xchg
stos
imul
add
adc
mov
sub
jne
in
sub
outsl
jmp
inc
adc
mov
mov
mov
xchg
push
add
arpl
sub
cwtl
xor
xor
add
mov
cltd
pusha
pusha
mov
mov
pushl
cmp
push
jmp
sti
nop
lds
pop
scas
xlat
aam
push
push
sbbb
mov
shll
mov
pop
or
mov
ret
test
cwtl
stos
sub
or
shlb
add
bound
aaa
mov
addr16
lret
test
mov
inc
jbe
rorl
cmp
pop
add
jb
jne
lea
and
fistpll
push
dec
mov
sbb
dec
sbb
add
call
lret
test
xlat
imul
pop
pop
movl
ret
shrl
mov
inc
pop
sbb
cmp
lret
or
or
push
fdivl
xlat
and
aam
mov
in
dec
pusha
or
add
lret
push
shrb
push
and
mov
stc
scas
out
push
dec
jge
push
out
jmp
dec
add
outsb
inc
xor
cmpsl
aam
push
push
sub
mov
dec
loopne
cmp
pop
add
jp
jns
ret
ljmp
add
popf
push
neg
sbb
cli
cli
shlb
or
outsl
mov
jecxz
aad
push
shr
shrb
and
popf
dec
lret
icebp
jb
jp
in
jmp
scas
lods
mov
mov
pushf
push
shlb
ret
mov
call
cmp
cmpsb
adc
pop
sub
mov
es
enter
pop
mov
popl
xchg
cli
pop
ret
hlt
sub
shll
sbb
sub
ret
in
adc
stc
xor
daa
adcb
addr16
out
shrb
mov
loope
cmp
jno
addb
lea
inc
adc
popf
push
add
jle
fstps
mov
aad
int3
in
into
push
js
cmp
cli
adc
cmc
dec
mov
sti
fimull
mov
add
dec
mov
jge
loop
jmp
jns
lret
inc
xchg
je
xor
add
cmpsl
xchg
cmp
mov
ljmp
cmp
sbb
stos
push
repnz
sbb
test
aas
lods
ljmp
xor
mov
notb
mov
stos
push
xor
jle
push
mov
xchg
and
ret
inc
sahf
or
mov
add
push
aas
sti
pop
sti
arpl
cmp
arpl
aaa
dec
ja
jp
pop
in
nop
js
dec
out
xchg
inc
scas
push
out
call
inc
loope
and
cld
or
js
cmpsb
push
ss
or
lret
out
dec
and
sub
addl
dec
rclb
xor
inc
jmp
leave
int3
xor
push
sub
negl
fsubrs
rorb
lock
xor
data16
cwtl
cld
cmp
xchg
mov
je
rcll
insl
or
lret
xor
push
lods
das
enter
in
test
ja
aad
and
outsl
xlat
repnz
cmp
cmpsb
ret
outsl
jp
sti
and
add
movb
out
jbe
imul
dec
adc
out
and
push
insl
movb
push
ret
arpl
outsl
scas
dec
jge
lea
enter
scas
fstpl
mov
js
jne
or
jo
inc
and
in
or
cmp
stos
frstor
adc
fcos
and
or
jp
sbb
loop
sub
mov
add
dec
mov
fisttps
pop
subb
jg
mov
add
jb
inc
call
jo
arpl
or
push
js
push
lds
inc
lods
add
xchg
jecxz
add
aam
pop
or
adc
lcall
adc
mov
mov
and
add
cwtl
pusha
inc
xor
mov
int
inc
icebp
xchg
hlt
cmpsl
push
andb
pop
out
mov
insl
push
xchg
orb
into
sub
loop
lock
sub
xor
mov
sbb
mov
dec
imul
stos
dec
mov
out
dec
fisttpl
xlat
mov
pop
fdiv
lret
lahf
out
nop
jnp
incl
stos
es
xchg
adc
subl
scas
mov
add
inc
mov
lock
add
sahf
push
mov
mul
call
cld
cmp
cmp
mov
pop
jmp
inc
shrb
dec
jecxz
sbb
iret
shr
jne
fdivr
repz
in
data16
mov
test
fwait
mov
imul
push
mov
loopne
xchg
in
mov
push
outsb
aam
mov
test
or
adc
mov
push
jmp
lea
std
lds
lods
jge,pn
loope
mov
pop
fistps
sti
mov
ret
pop
sub
mov
push
daa
es
fldenv
lcall
jp
xor
stc
ret
call
xor
push
push
mov
sub
shl
stos
daa
mov
jne
xor
pop
ds
shr
xor
repz
insb
mov
scas
rolb
scas
sbb
sub
out
pop
movsb
testl
xlat
outsb
inc
test
dec
and
mulb
fldcw
das
pop
xor
push
pop
call
lods
cs
fisubs
jns
stc
or
pop
mov
mov
sbb
lods
les
adc
ds
lret
repnz
cmpb
cmp
and
ljmp
testb
jecxz
lods
xchg
jg
push
lock
lret
and
dec
and
mov
fninit
jp
mov
add
cmpl
pop
mov
mov
xor
cmp
mov
clc
iret
scas
cmp
jle
rol
xchg
gs
orl
rclb
xor
ret
push
jbe
test
lret
xor
fs
pop
movsl
lahf
das
xlat
das
leave
xchg
mov
rclb
inc
aas
imul
andb
repz
in
ficompl
fnsave
mov
shlb
testb
sub
pop
sub
mov
cwtl
scas
jnp
and
mov
xlat
cmp
fisubrs
movsb
pop
pop
rol
test
loopne
mov
fmull
je
mov
push
movsl
jo
and
enter
sub
push
fistpl
sub
fists
daa
dec
and
cmp
lods
mov
cmp
out
pop
repz
inc
sub
getsec
shr
jo
sbbl
cli
insl
rorb
clc
xchg
push
rol
je
ret
out
sbb
lods
mov
and
pop
push
mov
xor
push
lods
mov
pop
in
cwtl
add
aam
jae
push
xor
jp
xchg
fimuls
test
mov
adc
mov
subb
xor
sub
sbb
int
mov
cmp
into
out
outsl
movsl
icebp
rcrl
dec
fcoms
sbb
xchg
mov
or
and
mov
test
pop
adc
out
mov
dec
inc
mov
mov
loop
orl
lcall
leave
xorl
mov
out
outsb
add
ja
iret
arpl
add
push
js,pn
add
add
rcl
push
sub
aaa
shll
or
pop
inc
pusha
cmp
rclb
push
lods
pop
out
adc
xchg
sbb
daa
mov
xor
push
popa
fsubrl
orb
xor
lret
shlb
inc
mov
xor
int
mov
adc
pop
ja
mov
mov
pushf
aam
fidivl
jb
mov
inc
cwtl
jp
arpl
xchg
lock
lods
cmp
push
outsb
int
imul
leave
int
les
imul
rclb
daa
or
xor
sub
mov
mov
ja
fisubrs
jae
push
mov
push
cwtl
and
gs
mov
cmpps
pop
adc
dec
aas
push
lret
mov
stos
test
cmpsb
cmpsb
mov
dec
push
leave
loopne
pop
inc
fdivrs
divb
mov
xchg
dec
pop
in
push
cmp
xchg
add
adc
ret
xchg
mov
push
insb
iret
fsts
mov
jne
and
mov
or
mov
out
mov
popa
and
divb
jg
push
test
cmpsl
andb
out
insl
add
ljmp
repnz
pop
punpckhbw
jnp
ret
shrl
sub
jmp
push
jmp
shr
cltd
pusha
mov
xchg
mov
pop
les
shl
lds
and
jae
add
and
cmp
mov
cs
jmp
scas
mov
mov
pop
sub
lods
ss
add
mulb
jnp
cmp
lods
inc
rcll
cmpsb
push
into
lods
cmp
aad
stos
lods
cmp
xchg
js
scas
aaa
mov
mulb
and
jae
pop
pop
addr16
push
sarl
scas
in
inc
fsubs
xlat
jl
jb
xor
xor
xor
sub
add
mov
and
fidivs
arpl
xchg
push
xchg
cmpb
shll
loope
xchg
jb
daa
movsb
mov
je
adc
addb
rclb
imul
mov
push
out
add
scas
xor
dec
cmpsb
lock
push
fwait
jb
xchg
insb
testl
mov
loope
mov
xor
in
jp
les
fnstenv
push
jno
dec
pop
inc
lcall
aam
sub
bound
lea
ret
pop
sbb
fs
adc
xchg
in
shll
push
loopne
mov
clc
xor
dec
mov
cmpsl
mov
gs
fs
jno
push
stc
je
add
push
xchg
fs
rorb
pop
shl
fwait
pushf
or
shll
aad
cmp
js
test
adc
movsl
pop
xor
mov
negl
mov
adc
cli
jg
inc
mov
lahf
jno
xchg
push
scas
fld
xor
jb
das
mov
xchg
mov
xor
mov
adcb
out
inc
adc
jl
loop
roll
movsb
mov
fimull
mov
mov
mov
outsl
xor
mov
adcl
test
push
cmp
xchg
sub
cld
sbbb
fadd
mov
pusha
notl
rorb
lods
popf
dec
out
movsb
stc
insl
lods
test
mov
push
data16
icebp
fsubl
push
mov
je
les
enter
and
or
sarb
loop
sub
cmp
lea
in
push
jg
pop
mov
jbe
jle
clc
dec
push
test
or
sti
jg
mov
dec
pop
repnz
cmp
sahf
push
mov
mov
jg
test
pop
movsl
in
pushf
repnz
inc
pop
cmp
out
or
dec
faddl
mov
jne
loopne
data16
dec
or
push
adc
testl
mov
scas
lahf
mov
fstpl
rcl
cltd
sbb
shlb
mov
mov
mov
daa
mov
pushf
in
jecxz
sahf
les
mov
pop
add
xchg
ds
push
adc
sbb
mov
cmpsb
loop
psrad
inc
sub
decl
hlt
pop
nop
dec
adc
in
outsb
push
scas
jle
inc
mov
lock
xor
out
sub
mov
adc
mov
nop
mov
mov
sahf
imul
test
fisubrl
dec
mov
enter
xor
andb
cli
std
jl
jne
mov
adc
insl
add
insl
pop
leave
xor
sahf
push
lods
dec
push
jg
mov
imulb
scas
clc
cmp
orl
sbb
lea
adc
sbb
adc
loopne
pop
lahf
xchg
cs
aad
xchg
stc
mov
and
or
jmp
cwtl
adc
pop
push
int
fisubrl
fidivrs
mov
int
in
ljmp
add
cwtl
inc
sbb
dec
push
xor
aas
mov
in
movl
or
fcmovnbe
stos
popl
insl
and
in
sub
inc
push
mov
jae
cmpsb
push
ds
push
outsl
dec
cmp
mov
mov
or
loopne
pop
sub
fstps
push
jae
sub
data16
xchg
jns
dec
mov
mov
psraw
cs
jns
cli
add
and
xchg
in
shrl
outsb
adc
xlat
and
outsl
mov
jmp
pop
and
orb
cmp
and
sbb
add
adc
bound
sbb
push
jmp
sbb
sbbl
ljmp
out
shll
jbe
add
adc
stos
nop
mov
data16
dec
or
xchg
outsl
test
leave
ss
inc
out
fmuls
push
inc
std
inc
and
sub
cmp
xchg
addr16
inc
push
pop
sub
lea
cmp
push
cmp
cld
imul
adc
mov
call
ficoml
inc
gs
ja
jge
or
and
jnp
sti
aas
mov
lret
loope
xchg
adc
adc
xchg
lahf
inc
imul
mov
push
sub
jno
add
rcrl
inc
sbb
mov
clc
or
daa
stos
xchg
sbb
xchg
and
inc
xchg
addl
and
test
inc
stos
sti
sbb
std
add
ljmp
add
cmpsb
ja
mov
nop
outsb
inc
inc
insl
ds
and
mov
lods
mov
cli
in
jl
pop
sbb
cwtl
dec
mov
dec
fsts
xchg
sti
cmp
pop
ret
repz
ja
pop
pop
loopne
inc
popf
jecxz
inc
addr16
sub
xorb
or
js
sbb
mov
jne
jle
imul
cmpsb
xlat
in
add
adc
shll
jecxz
std
cmp
adc
mov
subb
sbb
pmaxub
mov
xchg
in
out
sbb
addr16
insl
cmc
cwtl
push
jae
fildll
in
mov
cmc
in
fsubrs
repz
nop
cmp
in
scas
mov
out
sbb
pop
iret
bound
push
inc
bnd
shll
inc
or
jns
ja
mov
cmp
das
mov
push
ss
and
xchg
sbb
or
jecxz
and
mov
xchg
adc
add
outsl
xchg
dec
push
repnz
cs
out
test
loopne
in
push
jmp
cmpsb
inc
adc
sahf
loope
aam
sbb
jno
test
fists
cmpsb
xor
and
sub
xchg
sub
sarb
mov
mov
inc
pop
popf
or
js
cmc
test
xchg
imul
cmp
push
adc
jmp
iret
test
shll
adc
pusha
adc
lods
cmp
fbstp
dec
icebp
push
push
cmp
inc
jmp
dec
xor
jmp
xor
pop
or
cltd
mov
sub
cmpsb
adc
fmulp
in
cmp
xor
or
xlat
add
dec
test
xor
adc
pop
adc
shrb
rcrb
cmp
push
sbb
push
xchg
insl
ja
and
add
xor
clc
mov
fs
and
in
cmp
add
decl
lods
arpl
fidivs
xor
das
pop
iret
data16
inc
scas
inc
movsb
cs
ja
pop
jns
pop
movsb
pop
adc
xchg
mov
jb
lahf
push
loop
and
stc
cltd
les
fs
gs
mov
loopne
fstl
inc
lahf
cli
shll
mov
mov
icebp
mov
insl
into
or
arpl
adcl
subb
sahf
inc
push
rcrb
or
cs
push
daa
xchg
adc
inc
sarb
ljmp
fldenv
test
mov
dec
jp
les
add
dec
aam
xchg
cmc
push
rorl
pop
out
iret
adcl
fdivrs
fnstcw
xchg
fdiv
jl
push
movsl
pop
shll
jne
sub
ds
out
xchg
xchg
inc
pop
jmp
decl
xor
in
jne
cmp
jg
jg
sub
rcll
dec
icebp
and
sbb
leave
and
subb
dec
jle
inc
dec
popa
int3
mov
int3
ficoms
out
data16
lea
xchg
or
xchg
imulb
pop
push
test
xlat
mov
sub
pushf
cli
pop
cmp
mov
mov
jb
mov
sti
and
shrl
dec
lds
loop
shrb
pop
mov
cmp
xor
rol
jmp
scas
pop
push
add
sub
repnz
imul
into
rcl
xor
mov
push
in
enter
loopne
jae
adc
mov
mov
adc
ja
and
stos
pushf
and
cs
das
pop
jg
loope
scas
icebp
movsl
sub
aaa
xchg
fadd
fwait
imul
mov
pop
pop
jl
cmp
negb
in
xor
shrl
dec
pop
push
push
cwtl
insb
add
lds
sbb
pop
fwait
inc
and
pusha
scas
daa
scas
dec
adcl
mov
inc
cmp
push
jmp
or
and
fs
inc
in
and
jb
mov
fiaddl
mov
jb
sbb
xchg
jbe
iret
push
mov
in
call
push
or
scas
loop
cmp
lahf
outsb
inc
push
cltd
sub
pop
pop
fsubl
dec
sbb
je
cmp
xor
data16
popf
stc
addr16
loope
mov
mov
xlat
jl
test
divl
aad
xchg
xchg
or
xor
cmp
dec
or
in
jbe
nop
pop
imul
ret
ds
test
pop
test
mov
mov
movsb
imul
mov
jne
cmc
mov
xchg
lds
xchg
jge
stos
cmp
mov
xchg
ficompl
adc
hlt
fadds
out
jl
std
repz
jp
add
add
aas
cmp
jb
addr16
mov
in
jmp
lds
lds
sarl
xor
imul
idiv
mov
sub
out
and
imull
mov
cmp
jg
outsb
fistps
pop
pop
das
push
out
fistpll
aaa
mov
lahf
mov
sub
sar
add
in
mov
mov
loope
cmpsb
push
pop
les
cmp
push
stos
insb
dec
jb
jge
inc
fstpt
jmp
cwtl
adc
subl
jecxz
insl
sbb
mov
aas
inc
xchg
in
shll
cmp
fmul
xor
mov
cmpsb
xchg
test
in
add
gs
xor
mov
shrd
mov
jecxz
pop
shll
sarl
adc
scas
repz
push
pop
jae
jnp
pop
mov
loopne
sub
cmp
movsb
out
add
cmp
addr16
pop
mov
push
mov
pop
ret
adc
dec
fisubrs
xchg
and
inc
not
mov
aaa
xor
pop
dec
ljmp
sahf
or
mov
xor
cltd
fistps
out
dec
outsb
add
dec
mov
push
in
and
out
cmpsl
stos
push
sbb
dec
fists
jle
cmp
pop
pop
lods
pop
cmp
fcomi
mov
xchg
jl
pop
push
sub
fxch
pop
mov
fmulp
jnp
jne
mov
push
vpshab
stc
adc
mov
pop
inc
dec
sub
shrb
dec
icebp
dec
inc
movsb
inc
pop
sahf
idiv
push
and
je
les
xor
mov
mov
push
movsl
pop
sub
pop
test
std
iret
loop
adc
in
push
jp
mov
orb
hlt
pop
and
stc
je
leave
jmp
shl
repz
cmc
mov
rcll
loop
sarb
sbb
push
jp
xor
push
ljmp
fidivrl
mov
lea
dec
in
push
inc
es
inc
std
mov
lret
pushf
dec
mov
push
testb
imul
stc
adc
cli
cmp
mov
fldcw
into
xor
xchg
hlt
repz
jmp
xor
fidivrs
mov
inc
jno
movsb
mov
ret
mov
xor
in
sub
dec
ret
mov
adc
pusha
jmp
test
inc
mov
cmpsl
xchg
test
lods
test
sbb
insl
sub
pop
sub
sti
xor
and
es
fs
mov
flds
int
jge
les
xchg
lret
xchg
repz
push
dec
sbb
addr16
sahf
xchg
pop
fs
out
mov
cmpl
lea
iret
loope
outsb
xchg
sub
ret
leave
add
ret
jge
hlt
lcall
jbe
pop
shrl
popa
pusha
cmp
push
cwtl
ret
pop
int
imul
inc
loope
repz
pushf
shll
inc
push
or
mov
pusha
movl
sbb
ret
dec
daa
ljmp
mov
cmpsl
ds
and
cmpb
pusha
add
rorb
fisttpll
dec
fiadds
adc
and
shr
addl
xor
and
popf
adc
lods
pop
xchg
test
mov
xchg
add
and
pop
pop
sti
or
cmp
push
fwait
repz
lcall
mov
fsubrp
mov
sahf
xor
dec
fstpt
lods
or
ret
mov
cmp
loope
lret
leave
aaa
add
cmpl
push
inc
das
adc
aas
loopne
stc
xor
sub
repz
das
jl
push
sub
shlb
rcrb
mov
inc
sbb
jp
add
mov
mov
test
das
push
xchg
push
push
mov
cltd
lea
mov
insb
mov
int
bound
lds
imul
hlt
mov
into
call
add
pop
inc
mov
mov
fwait
xchg
sub
stc
jns
add
fwait
pop
movsl
and
or
inc
xchg
ja
xchg
lock
mov
inc
mov
std
movsl
push
in
mov
je
mov
jns
add
sub
stos
sub
adc
pop
inc
push
mov
out
sub
mov
arpl
jge
cmp
mov
bound
adc
loope
in
movsb
cmp
mov
shrl
in
lods
repnz
sub
cmp
sbb
cvtpi2ps
xchg
mov
test
push
out
push
dec
push
ss
insl
nop
pop
stos
dec
pop
jle
call
cmp
xchg
inc
iret
xchg
scas
adc
movsb
mov
rolb
pop
faddl
and
mov
sbb
lods
outsl
and
mov
xchg
mov
test
inc
jg
and
dec
fildl
lahf
ret
jle
out
push
test
loop
xchg
pop
mov
fcmove
ss
mov
js
ljmp
mov
stc
mov
rcll
mov
mov
decl
push
arpl
mov
in
scas
icebp
loopne
adc
into
scas
dec
sbb
and
sbb
lcall
lcall
lea
inc
add
pop
mov
pop
jne
jmp
clc
adc
aaa
and
test
and
pushf
xor
push
and
pop
mov
repnz
sub
and
jne
mov
js
mov
inc
sti
sbb
cs
adc
sahf
and
jns
or
sbb
dec
inc
sub
loopne
stc
pop
fstpt
scas
scas
cld
in
loop
jg
pop
sub
rcr
jl
pusha
cmp
nop
dec
mov
fisttps
push
mov
mov
jp
cwtl
cmpsl
fdiv
mov
les
adc
mov
push
mov
lret
xchg
sbb
leave
pusha
shl
mov
out
mov
lock
fldl2t
cmp
fistl
ret
sarl
and
movsb
out
test
jle
adc
lea
adc
inc
imul
adc
dec
pop
mov
xchg
std
and
mov
sub
or
fnsave
stos
and
jnp
rorb
sbb
fdivrs
inc
inc
bound
add
mov
les
push
adc
sbb
pop
ficompl
push
imul
jns
and
pushf
test
test
and
dec
jbe
hlt
lahf
mov
add
pop
pop
or
push
andb
or
push
xor
inc
clc
sbb
push
xchg
mov
ljmp
sahf
ljmp
jb
fwait
jmp
popa
cmp
dec
arpl
add
scas
sub
cmp
jo
sub
pop
iret
mov
subl
outsb
fidivs
fisubl
mov
mov
sbb
push
sub
scas
div
mov
cmpsb
inc
cmp
dec
xchg
push
aas
ret
cmp
nop
sub
adc
fcompl
adcl
mov
enter
sbb
imul
push
mov
pushf
scas
and
pop
lea
adc
jecxz
add
sbb
das
rorl
mov
pop
mov
shrl
xchg
pop
pop
xchg
pop
sub
xchg
enter
xor
jae
and
int
adc
jns
stc
adc
aaa
in
inc
arpl
call
fldpi
dec
or
and
js
or
call
cmc
and
or
jle
mov
movsl
fnsave
std
xchg
inc
jp
jne
jbe
pop
jae
lret
mov
out
cmp
fcomip
and
dec
arpl
push
lcall
xchg
add
dec
cmp
imul
mov
xchg
popa
xor
arpl
add
push
in
sub
lea
stos
cmpb
sti
shlb
mov
call
dec
dec
push
cld
addb
scas
adc
std
shl
mov
mov
pushf
jl
pop
rorb
push
shrb
pusha
aas
into
jmp
lods
mov
pop
or
cmp
cmpsb
sbb
out
insl
int3
movsb
aam
pop
scas
rorb
mov
movsb
push
sbb
loopne
add
and
mov
imul
xchg
iret
xor
les
rorl
pushw
push
or
clc
loopne
mov
das
iret
imul
mov
scas
cs
es
xor
pop
movsb
push
nop
xchg
out
loop
xchg
fistpl
xchg
push
shl
clc
adc
pop
aaa
sbb
jb
ficompl
ljmp
mov
xchg
jnp
pusha
mov
int3
jno
xor
sahf
cmpsl
les
jge
lea
fwait
mov
pop
cmc
pop
jo
push
jl
inc
inc
mov
inc
mov
push
cwtl
outsl
jae
stos
and
in
repnz
stos
push
adc
dec
ret
or
sbb
dec
adc
xchg
jmp
hlt
push
xor
arpl
sar
cmp
mov
lret
inc
cmp
inc
bound
aam
out
add
mov
or
pusha
push
fsubl
dec
pop
out
xchg
lods
sub
test
icebp
adc
mov
jo
fwait
sbb
sbb
cmp
jb
sub
pop
sbb
jg
insb
add
pop
adc
mov
movsl
xlat
in
subb
push
pop
inc
jl
pushl
inc
aas
xor
mov
insb
cmp
out
sti
adc
mov
dec
scas
sti
fnsave
push
or
sbb
pop
std
jnp
das
popf
jg
iret
dec
outsl
leave
pushf
dec
lret
pop
cmc
mov
cmp
mov
add
test
mov
add
dec
lahf
jmp
shl
aaa
aam
subl
push
dec
movsb
in
push
push
outsb
ret
xor
inc
fwait
push
xor
in
jne
cmpsl
or
icebp
movsl
mov
jne
shll
xchg
ss
pop
das
loope
cwtl
mov
push
push
jg
sub
int
pop
jle
xor
fcmovnu
hlt
add
es
xchg
push
jl
ja
xor
sbb
mulb
bound
ret
pop
dec
sub
addr16
sahf
lods
ficomps
leave
jnp
jno
dec
pushf
into
je
sub
lcall
rcl
sbb
fisttpl
sbb
ds
mov
push
fs
pop
in
lcall
sahf
xor
adc
repnz
sahf
repnz
xchg
fimull
or
push
xchg
mov
pop
xchg
dec
loopne
mov
push
mov
sub
mov
sahf
inc
fwait
jb
cmp
ja
jmp
sub
test
xor
and
xor
push
mov
or
cmp
dec
out
push
aad
adc
insl
lret
imul
dec
test
jno
push
inc
pop
jae
lds
cmp
and
ret
jno
jne
stos
mov
pop
and
pop
mov
popa
or
push
jl
nop
sub
mov
cmp
pop
cmpsl
add
inc
fdivrs
rorb
jp
pop
rcl
in
hlt
xchg
lret
cmp
jb
in
andl
outsl
adcb
ljmp
loop
inc
aas
std
mov
jnp
lds
xchg
movb
jmp
nop
push
frstor
rorl
sbb
ss
in
mov
cli
push
mov
mov
jmp
je
push
ds
dec
jnp
aad
push
dec
iret
mov
jmp
das
lods
jmp
and
sahf
repnz
sbb
out
mov
data16
rcr
jno
adc
pop
pop
scas
scas
test
in
loopne
sbb
mov
std
push
popf
hlt
in
jbe
out
lds
jbe
pop
pop
outsl
and
sbb
dec
and
or
lret
cmp
mov
and
pop
xor
rcrb
aas
xchg
aam
aad
xor
inc
call
fdivl
mov
xchg
test
test
addr16
inc
inc
xchg
mov
sub
mov
or
scas
cs
in
movsb
pop
hlt
cmp
mov
out
lret
push
lock
pusha
add
jg
and
shll
aas
dec
xchg
xor
add
dec
pop
fdivl
dec
push
insb
adc
jo
sub
pusha
leave
pop
pop
xor
and
mov
rcrb
mov
sub
push
cmp
daa
lcall
or
fcmove
gs
gs
std
dec
mov
int
jle
mov
pop
aas
xchg
adc
cld
jbe
inc
fucomi
pop
int3
jnp
test
ret
scas
mov
sbb
je
or
adc
in
das
dec
in
pop
xor
ds
cmp
sbb
dec
xor
or
mov
arpl
lahf
stos
inc
test
das
js
mov
and
in
inc
xor
mov
xor
jmp
dec
mov
mov
xor
sahf
xchg
adc
adc
ss
jle
cmp
js
mov
je
inc
xor
lock
ret
mov
dec
ds
push
pop
imul
and
jo
dec
cmp
filds
in
pop
movsb
inc
pushl
shrb
and
lahf
inc
fmul
pusha
push
ljmp
jno
sub
dec
mov
dec
mov
ret
xchg
inc
hlt
aad
je
imul
sub
add
popl
aad
fildll
sar
sbb
and
aad
fmul
mov
fistpl
adc
and
dec
icebp
adc
je
push
and
sahf
scas
jmp
or
inc
ss
sub
push
je
iret
movsl
ja
clc
and
adc
popl
stos
inc
gs
mov
xchg
sub
je
cmp
sbb
icebp
xlat
sub
mov
sub
pop
into
cmp
jbe
sbb
sbb
xchg
pushf
jmp
fstpt
and
xchg
adc
mov
rclb
push
and
ss
jbe
xor
pop
lret
jmp
sarl
inc
idiv
mov
inc
mov
jnp
jb
out
out
loope
outsl
or
mov
cmp
jecxz
les
sbb
mov
gs
test
fldl2e
movsb
xchg
mov
or
dec
adc
into
arpl
xlat
sub
fs
sub
push
aam
inc
sahf
iret
sbb
sarl
add
fnstenv
loope
pop
lret
fcmovnb
fidivl
jl
data16
mov
int3
out
sbb
popf
sahf
adc
repnz
in
inc
xchg
pusha
in
fidivs
dec
mov
data16
adc
or
mov
cli
xchg
add
inc
ss
jmp
inc
test
out
fucomp
testl
xor
push
clc
push
adc
testl
test
ja
dec
mov
sbb
and
cmp
cld
inc
dec
in
std
push
cmp
and
jae
fstl
mov
insl
into
test
and
lahf
ljmp
mov
jle
xlat
push
sti
pop
dec
mov
testl
popf
inc
jbe
mov
pop
rcr
idivb
dec
adc
push
mov
in
orb
pop
pop
fidivl
das
lcall
mov
lahf
mov
adc
stc
nop
inc
movsl
mov
push
seta
ret
iret
jno
stos
in
movlps
push
mov
mov
and
insl
sbb
mov
jae
int
test
das
sub
add
or
out
mov
mov
mov
adc
sbb
fdivl
and
or
push
xchg
dec
mov
adc
jae
popf
cmp
push
xor
ja
dec
and
rcll
hlt
adc
xor
mov
mov
sarb
rclb
push
out
sbb
pop
mov
push
js
or
add
adc
les
inc
outsl
dec
ret
hlt
imul
add
pop
cwtl
das
fstpl
dec
lods
nop/reserved
call
lock
ljmp
push
sbb
cld
out
dec
jl
adc
xchg
inc
mov
lods
sbb
movsb
push
and
push
cmp
lods
inc
cmpsl
popf
cmpsl
pop
xor
mov
sbb
in
call
ret
add
xor
lods
sbbl
insl
aad
loop
add
int3
add
popf
xchg
in
stos
fdivrl
in
fwait
inc
fdivr
fnsave
ljmp
out
dec
outsl
sbb
into
mov
jle
pusha
loop
sub
test
or
subb
xor
mov
popf
jae
iret
or
xchg
mov
jecxz
insl
pop
mov
add
push
cmp
lods
inc
mov
lahf
cs
es
test
mov
sbb
mov
loopne
jbe
push
add
add
mov
push
flds
lcall
clc
and
and
sbb
push
fwait
mov
cmp
mov
scas
dec
mov
into
ficompl
arpl
sbb
outsb
push
ljmp
jno
sbb
add
xor
mov
pop
int3
sbb
or
sahf
stc
or
jno
pushf
imul
pop
jno
movsl
lods
ret
dec
shl
mov
ds
dec
fnsave
cmp
cmp
imul
adc
ret
ficoms
sbb
xchg
pop
std
das
nop
push
mov
dec
loop
push
rol
pop
add
sub
repz
out
inc
cli
and
lea
xchg
cli
cmpsb
and
xchg
ja
jmp
or
arpl
cmpl
pop
or
add
dec
scas
fldt
int
popf
into
xchg
shlb
push
into
jl
sti
lods
out
fnstsw
add
xor
lods
jns
aad
or
dec
repnz
stos
and
push
scas
xchg
add
popa
mov
xor
xchg
push
aam
push
aas
jae
daa
negb
mov
into
pop
lcall
stc
je
lea
cmc
out
adc
pop
jp
stos
aaa
arpl
out
push
cmp
ret
mov
xchg
in
pop
addb
dec
mov
pop
sti
jge
mov
mov
mov
xchg
cmp
xor
gs
fisttpl
push
pop
adc
sub
mov
in
stc
loope
cmp
adc
mov
sub
dec
cld
inc
dec
pop
lret
xchg
lods
cmp
mov
gs
test
sbb
xlat
fidivs
in
jecxz
lcall
mov
add
xor
mulb
mov
jnp
shrb
ret
pop
jg
fidivs
pop
movsb
and
mov
in
mov
stos
sarb
lret
cld
pop
pop
repnz
dec
add
call
mov
jge
or
inc
ror
shll
mov
jp
or
mov
or
mov
mul
push
loope
jp
sbb
mov
daa
push
mov
outsl
adc
pusha
mov
mov
es
pop
xor
jnp
inc
lods
adc
stos
xchg
push
mov
jne
and
inc
dec
pop
jns
gs
mov
push
movzbl
mov
sbb
pop
icebp
mov
xor
mov
ja
cmp
mov
mulb
test
and
push
cwtl
aas
jmp
push
pusha
pop
jno
cmp
test
add
loopne
xchg
cmp
mov
adcl
inc
cmp
sub
xchg
pop
nop
es
inc
mov
call
cli
add
xor
shlb
mov
test
fstps
xchg
cs
movsb
cmp
pop
call
mov
adc
loop
xchg
push
int3
out
cmp
add
jge
in
daa
mov
mov
fs
bound
dec
stos
and
lods
ds
int
inc
jmp
dec
cmp
mov
push
repnz
xchg
xchg
daa
push
test
cmpsl
stos
jb
insl
lret
mov
fmull
das
insl
clc
push
ja
jge
insl
jg
popf
mov
scas
aaa
push
loopne
rorb
into
add
adc
or
mov
push
clc
or
into
into
cmp
pop
push
add
and
cmp
aam
stos
jge
dec
not
cmp
repz
add
xlat
scas
push
and
mov
js
and
or
add
mov
inc
rcr
out
in
pushf
cli
sbb
leave
ja
rorl
sahf
pop
lcall
push
sub
scas
mov
or
imul
shll
mov
insl
adc
inc
loopne
add
cmp
fimull
mov
mov
pop
add
jns
loope
adcb
or
sbb
int3
daa
aad
lock
and
mov
pop
push
testb
or
xchg
pop
add
sbb
js
leave
test
or
mov
cmp
mov
dec
pop
aad
jge
adc
push
out
jge
mov
adc
mov
repz
jae
test
push
fiadds
add
pop
mov
leave
mov
nop
leave
pop
fisubrs
xor
sub
hlt
popf
test
or
mov
adcb
sub
and
inc
lcall
dec
adc
test
mov
icebp
jge
mov
xchg
xchg
out
dec
nop
cmp
ds
mov
fists
enter
cwtl
out
add
mov
cmpsl
mov
push
movsl
cmpsl
jb
je
outsl
push
push
add
inc
mov
pop
fnstenv
icebp
add
and
dec
pop
dec
or
jl
sub
mov
daa
enter
adc
inc
sbb
cwtl
dec
cmpsl
clc
jbe
testb
inc
imul
repnz
jne
inc
pop
aaa
xchg
jl
adc
xor
ja
loop
sub
inc
roll
into
stc
addr16
add
inc
in
popf
jp
stc
pop
xor
testl
loopne
xor
cli
mov
pop
adcl
pop
mov
xchg
xor
jmp
add
mov
and
jbe
push
mov
mov
adc
pop
add
pop
cmp
xchg
addr16
mov
push
movsl
inc
rcll
mov
cmp
jge
push
ss
leave
icebp
mov
pop
outsb
inc
xchg
push
loopne
gs
xchg
xlat
in
ja
push
dec
pushf
lods
pusha
inc
xchg
sub
jno
mov
fbstp
and
out
in
aas
xchg
insb
js
stos
mov
adc
js
inc
stos
add
out
jbe
out
daa
jns
aam
lods
mov
cmc
jmp
pop
dec
mov
xor
popa
js
inc
lret
push
pop
inc
mov
lods
mov
push
pop
pop
ljmp
pop
pop
push
mov
xchg
dec
adc
lret
pop
xor
mov
add
stos
ret
cmp
mov
ljmp
mov
add
imul
add
fs
add
arpl
cmp
sub
out
pop
mov
inc
test
sahf
imul
subl
dec
pop
sbb
ficompl
movsl
dec
sahf
or
hlt
xchg
mov
sub
xchg
ljmp
and
push
or
jno
call
rcll
dec
mov
fstpl
push
ljmp
scas
xchg
inc
repz
shrl
sbb
sub
out
sahf
and
mov
and
cwtl
test
cmp
xchg
lods
mov
fcmovne
mov
sub
clc
rorl
ds
push
sbb
data16
into
movsl
xchg
cmpsb
gs
test
xchg
mulb
dec
scas
test
test
imul
out
scas
mov
push
push
dec
pop
mov
clc
jbe
movsl
inc
fs
mov
ret
mov
cltd
and
mov
xor
or
mov
lcall
dec
pop
andl
js
cmp
rcrl
dec
cld
inc
push
inc
pop
cmp
popf
arpl
je
mov
rep
push
rorl
daa
fwait
daa
pusha
shrb
xchg
bound
push
dec
push
or
xor
in
adc
push
sahf
cmp
mov
cs
mov
xor
ja
in
ja
mov
xchg
pop
cmp
mov
ljmp
mov
push
aam
dec
xchg
pop
sbb
mov
sub
fisttpll
imul
lret
add
cmp
inc
rcr
movsl
sbb
out
push
sub
rcrl
jle
imul
mov
dec
stos
cltd
mov
jo
jecxz
xchg
inc
and
in
push
lods
or
cmpsl
addl
and
xchg
push
cmp
adc
shll
cmp
ja
sub
call
outsl
daa
test
or
notb
mov
dec
mov
xor
lock
mov
push
jg
adc
ficompl
rclb
idivb
push
cmp
imul
cmp
sub
aam
jge
mov
xor
scas
hlt
jb
pop
std
pop
popf
outsl
mov
dec
mov
inc
push
fisubrl
loope
test
mov
mov
dec
jae
xor
insb
outsl
orl
mov
mov
mov
clc
xchg
insb
sbb
cmp
xchg
shl
jge
sub
pop
sbb
out
jae
xor
inc
dec
dec
ss
jmp
repnz
or
cld
push
movsl
in
cli
jmp
rorb
jecxz
pop
mov
adc
xchg
mov
mov
cmp
add
add
and
movsb
popl
repz
mov
cmp
or
cld
inc
fisubrl
lcall
das
and
push
mov
sbb
fdivrl
cmp
xchg
xchg
or
jl
cli
imul
jno
pop
adcl
test
mov
adc
add
imul
cmp
and
pop
rcrb
adc
scas
or
leave
jecxz
insl
inc
push
mov
stos
jne
rolb
and
mov
out
sub
and
inc
jle
xchg
mov
dec
add
les
pop
in
pop
dec
aad
inc
or
into
sub
ja
popa
popa
das
xor
xor
push
pop
inc
push
mov
mov
add
mov
sbb
jno
ss
sub
push
dec
inc
and
clc
imul
fstpl
scas
call
enter
dec
inc
notb
rclb
int3
leave
xor
adc
pop
movsl
adc
push
aam
pop
lret
test
cmp
icebp
ret
xchg
inc
iret
xchg
mov
in
stos
arpl
test
or
xchg
aas
add
pop
mov
pop
call
mov
repz
outsb
xor
mov
sahf
push
lret
or
xor
lret
push
mov
pop
adc
and
mov
sbb
and
daa
arpl
cmp
out
ret
cmp
movsb
cli
push
pop
cmp
aas
jp
push
jp
mov
call
cwtl
or
push
mov
sub
or
fbld
das
subb
pop
xor
int3
or
stos
insl
bound
shlb
cmpsl
out
popl
xchg
idivl
pshufw
ret
jb
mov
add
lods
outsl
push
mov
push
fsts
dec
test
je
adc
stos
add
mov
jne
xchg
dec
in
inc
adc
jl
mov
out
shrb
rep
addb
dec
add
dec
icebp
or
and
mov
lock
jmp
mov
push
add
movswl
mov
or
cmp
into
lea
aam
mov
inc
daa
add
dec
add
pop
dec
pop
and
repnz
pusha
adc
movntps
divb
or
mov
aaa
dec
arpl
in
lea
daa
sub
cs
mov
pop
dec
out
loope
hlt
adc
cmp
mov
insb
push
add
or
fcomi
push
out
test
movd
inc
stos
inc
mov
fcomi
sub
int3
lret
fdivl
cmpsb
popf
and
ret
cmp
jecxz
iret
adc
and
test
lret
jb
dec
dec
fsub
test
pminub
cmp
das
iret
push
inc
lret
cld
cld
push
and
fidivrl
scas
inc
mov
pop
sub
insl
ljmp
mov
mov
jmp
idivb
mov
sub
mov
and
add
jbe
push
dec
test
push
into
cltd
push
add
out
loop
dec
dec
xchg
mov
xor
decb
mov
jbe
xchg
movsl
js
pop
mov
lods
jmp
lahf
cmc
andl
cmp
pushf
test
jb
in
push
test
out
add
sub
pusha
push
inc
fiaddl
popa
jnp
mov
inc
push
and
repz
scas
jno
insl
dec
rorl
sub
divps
popa
and
xor
out
cmp
mov
aaa
adc
push
mov
in
and
inc
push
inc
mov
inc
fwait
mov
loope
mov
fs
jl
cmpsl
mov
cmc
jbe
jecxz
adc
ja
mov
stc
xchg
scas
jecxz
push
sbb
pop
rdpmc
fisubrs
cld
stos
inc
ffreep
test
sbb
push
fistl
data16
adc
inc
addr16
jbe
mov
dec
fwait
adc
shrb
fldenv
cmp
outsb
ret
pop
pop
loop
pop
out
or
jns
movsl
pop
xchg
outsb
jp
sub
rol
cmp
enter
and
mov
ljmp
push
fwait
bound
je
cwtl
movsl
cmp
scas
stos
outsl
and
fstps
pop
aas
mov
jg
fsubl
add
in
xor
mov
xchg
cs
push
sbb
or
fidivs
ss
mov
adc
enter
sbb
rorl
jnp
ret
pop
fbld
hlt
adc
call
fcoms
clc
add
cmp
fs
sub
dec
jmp
aas
xchg
sbb
jbe
stos
mov
adc
dec
or
and
movsl
das
lock
negb
in
push
nop
mov
sahf
xor
mov
fs
xchg
test
sbb
cmpsb
fdivs
cli
jl
fcmovnb
test
pop
and
xchg
sub
cld
lahf
push
out
mov
popf
pop
sbb
shll
dec
add
es
mov
ja
xchg
imul
out
inc
fcom
leave
pop
mov
ljmp
or
cmpb
or
jnp
stos
push
lcall
popf
mov
outsl
jns
sbb
push
push
adc
mov
popa
adc
test
mov
fmulp
leave
sub
movsbl
scas
mov
cmp
in
test
pop
lds
sar
mov
in
ss
fsubs
pop
cmpsl
idivl
dec
adc
nop
pop
jb
mov
shll
mov
pop
mov
fsubrl
nop
cmp
push
add
aam
sub
jg
push
xor
xor
idivl
sub
stc
xchg
and
movswl
rcrb
nop
cmp
shll
sbb
lahf
dec
mov
jae
stos
add
xchg
adc
stc
int
jae
lods
mov
xchg
jp
pushf
jo
sbb
mov
ret
div
mov
bound
push
divb
pop
jge
mov
pop
xchg
adc
mov
ss
jle
gs
push
push
notb
ja
dec
cld
stc
std
hlt
lahf
and
and
rclb
jae
pop
sbb
push
cld
aaa
into
sub
or
jge
out
loope
and
pop
inc
mov
cmpb
mov
orl
dec
dec
or
lret
xor
inc
iret
sbb
nop
imul
icebp
push
out
stos
xlat
outsb
mov
dec
cmc
shl
add
cmp
mov
mov
arpl
les
push
les
icebp
push
jle
in
or
cmp
sbb
pop
push
popf
mov
xor
and
jge
mov
out
aam
sub
jmp
movsl
aaa
xor
sub
fsubrl
hlt
sbb
mov
or
int3
mov
mov
mov
iret
cli
or
sub
cmp
adc
aaa
pop
lock
addr16
xchg
ja
pop
pop
fdivrs
sahf
aaa
xor
and
fwait
lods
mov
push
jns
pop
fisubrl
fucomip
sbb
arpl
loopne
push
dec
sarb
cmpsb
enter
push
jmp
xchg
push
shlb
jo
arpl
shrb
mov
inc
popf
xchg
test
mov
lock
mov
out
add
mov
inc
or
push
jmp
outsb
inc
ss
mov
in
in
hlt
pop
jae
insb
imul
cmp
outsl
or
test
and
add
add
mov
jmp
jmp
jns
arpl
outsb
jl
or
adc
and
mov
insb
pop
repnz
xchg
scas
out
dec
das
jp
scas
pushf
and
jecxz
jb
dec
les
and
movsl
dec
rolb
out
in
hlt
push
mov
cmp
sbb
jle
loopne
popa
and
repz
mov
rcrb
daa
les
fs
mov
adcb
adc
add
ja
out
mov
mov
fdivl
adc
jle
pushf
dec
jae
push
jmp
and
mov
xor
stos
mulb
pushf
xchg
cmp
lds
out
clc
jnp
fdivp
movsl
lea
dec
imul
mov
push
mov
into
lahf
out
lahf
imul
dec
jg
jp
inc
xlat
xchg
cltd
add
stos
jns
ret
lcall
mov
inc
test
sub
cmp
insb
and
adc
mov
pop
jle
inc
inc
mov
push
jmp
push
cmp
ljmp
and
sbb
popf
pop
sbb
sbb
bound
adc
bound
mov
jmp
in
loope
inc
popa
sbb
in
test
orl
cmp
pusha
mov
movsb
cmp
std
int3
pop
mov
fcmovnb
pop
rcr
and
rcrb
jno
fnstenv
shll
cli
popl
inc
sbb
and
inc
dec
cmp
dec
mov
in
lea
rclb
pop
add
pushf
lods
dec
add
dec
push
out
bound
int
cs
and
adc
test
inc
cmpsl
aas
jecxz
push
jg
inc
xor
lds
mul
out
and
enter
stos
sahf
repz
test
js
mov
loopne
scas
push
fs
test
je
mov
into
xchg
mov
fisubs
lret
sub
ja
and
das
sbb
les
enter
mov
inc
jmp
sbbb
dec
sub
aam
jg
mov
into
xchg
fmulp
test
aam
cmp
jb
xchg
add
jo
mov
mov
in
mov
push
mov
cli
cmpsl
push
jl
js
and
mov
cli
mov
call
shl
jo
idivb
jb
pause
leave
jecxz
clc
popa
sbbl
pushf
arpl
pop
dec
cmc
lods
xchg
jne
add
pushl
inc
push
lock
stc
and
cli
and
stc
clc
dec
push
gs
insl
jl
inc
adc
and
sbbl
bound
cmc
arpl
and
add
xchg
mov
xchg
fidivs
lods
inc
sbb
sarl
xor
ja
xor
inc
cwtl
dec
leave
inc
jns
movsl
and
pop
int
or
sub
lahf
push
fwait
xchg
sub
mov
ljmp
xor
jmp
push
fsubrp
stos
jmp
shrl
mov
lcall
cltd
or
mov
mov
pusha
sbb
scas
mov
cwtl
je
lods
out
sbb
sti
xor
inc
rcl
adc
cltd
hlt
mov
mov
push
movsl
daa
fwait
addb
int
pop
aaa
and
insl
cmp
addb
sbb
fidivrs
pop
cmp
loop
mov
add
pusha
paddsb
mov
cld
movsl
pop
test
outsb
mov
scas
js
sub
aaa
sub
dec
mov
clc
std
test
sbb
push
dec
rcl
rclb
mov
dec
into
popa
in
stos
adc
fwait
fs
int
sub
mov
das
lcall
cwtl
ds
into
repnz
mov
jns
pop
mov
jae
adc
movsb
cmp
cltd
inc
aam
dec
in
fsubs
mulw
push
adc
in
mov
mov
outsb
das
call
cmp
ljmp
insb
fistps
push
xchg
leave
push
inc
pop
mov
sbb
cmpsb
es
fs
inc
push
inc
pop
ds
inc
int3
mov
dec
into
add
sahf
adc
test
das
cmp
pop
push
or
test
mov
dec
out
test
mov
scas
inc
mov
dec
int3
sub
cmpsl
repnz
mov
push
addr16
imul
mov
adcb
int3
mov
jl
sbb
imul
out
test
popf
call
adc
int
cwtl
mov
inc
xor
jl
mov
sub
aas
mov
jmp
jg
mov
or
gs
out
enter
lea
push
xchg
sbb
xlat
scas
mov
ret
mov
dec
gs
mov
stos
xchg
mov
jb
lods
sbb
test
push
movsb
sbb
test
icebp
xchg
movsb
push
xchg
js
inc
lods
xchg
cwtl
idivb
or
dec
and
cs
out
enter
test
scas
fisubs
mov
push
jno
fwait
imul
sbb
std
cmp
sub
xchg
stc
push
xchg
int
sub
out
push
xchg
loop
int
movsl
jo
dec
mov
pushf
outsb
imul
daa
sbb
scas
call
fsubrl
in
adc
jb
stos
mov
push
jbe
imul
jle
fnsave
xchg
loopne
lods
lahf
add
adc
pop
imul
mov
std
pop
dec
pop
test
jbe
in
and
mov
lock
cmc
cmpsb
es
sub
ficoms
sahf
push
rolb
lods
inc
and
in
add
xchg
mov
hlt
jae
out
sub
and
mov
pop
adc
outsb
test
insb
addr16
std
xchg
in
inc
mov
loop
test
mov
mov
call
enter
push
sub
sbb
stc
pushw
xor
push
xor
aad
adc
jmp
mov
repz
pop
hlt
mov
arpl
shl
es
mov
pop
cmp
push
sbb
mov
rcrl
icebp
push
mov
sub
push
jle
mov
jmp
orl
inc
fildll
testl
sbb
sbb
jmp
xchg
outsb
xor
test
push
add
adc
lret
push
aad
cld
pop
int3
es
sahf
mov
mov
test
andb
mov
out
mov
fnsave
lds
adc
roll
and
popf
jg
out
adc
and
jge
mov
lahf
scas
and
add
cmc
and
test
mov
insl
sbb
int3
push
inc
gs
cmp
push
sub
in
xchg
jmp
fisttpl
vmaxps
movsb
mov
or
into
jnp
sbb
movsb
int3
mov
jo
iret
addr16
rorb
sarb
das
mov
pop
mov
or
pop
and
aaa
cmp
xchg
out
mov
dec
rolb
push
ja
or
xlat
mov
push
xchg
dec
cld
outsl
xor
xchg
add
push
lea
jg
and
adc
das
push
loopne
push
xor
fidivrs
dec
sbb
and
xchg
aaa
idivl
out
adc
mov
jmp
mov
or
in
adc
mov
sub
insl
add
lahf
in
ljmp
pop
js
jnp
dec
lods
dec
jbe
fwait
or
and
iret
cmp
dec
xchg
imul
jmp
mov
sbb
jne
sbb
pushf
stc
repz
test
into
fisubl
loopne
out
xor
out
scas
sti
cmp
xor
inc
jae
jg
adc
pop
sub
cld
xor
cld
or
fiadds
inc
enter
lret
jb
imul
ja
adc
popa
mov
jae
mov
cld
or
fsubrp
push
push
das
cmp
xchg
jnp
pop
lods
ret
push
lcall
cwtl
xchg
aad
sbb
cmpsl
stos
dec
pop
ljmp
and
popf
inc
lods
mov
pushl
dec
imul
and
ljmp
fcmovnbe
out
leave
test
jg
popf
cwtl
fistps
test
cmpb
adc
or
mov
jb
xorb
ja
repnz
adc
dec
test
cmp
out
aas
sbb
mov
jmp
add
jmp
inc
movsl
nop
or
test
orl
push
xchg
popa
in
push
xchg
pop
cmpsb
pop
mov
pop
adc
pop
jae
add
dec
jno
out
pop
add
stc
jno
and
xor
out
jo
das
out
rolb
sbb
jno
or
leave
xor
jae
mov
in
les
xchg
mov
aaa
fsub
test
vcomiss
test
cmp
in
xchg
mov
imul
js
cltd
cmp
mov
and
loope
stc
jg
sub
pop
rcll
cli
test
inc
dec
xor
cmp
sahf
push
adc
mov
or
aam
xor
loope
inc
jge
jae
add
fwait
icebp
mov
movsb
xor
and
insb
shl
sti
testl
jl
xchg
jge
sbb
xchg
addr16
mov
xchg
cltd
xor
pop
cs
dec
mov
js
inc
push
fwait
mov
lods
idivb
push
cld
movsb
xlat
cli
insl
aad
add
xchg
inc
lea
mov
imul
loop
inc
repz
and
xor
outsb
inc
out
cmpsl
ds
mov
nop
cmp
jb
inc
lret
ja
jae
movsl
lds
in
mov
inc
pop
xchg
mov
push
sub
mov
ret
push
ds
pop
mov
lock
sti
push
cmpsl
lds
test
aad
loope
sahf
negb
lds
sbb
aas
aaa
cmpl
mov
xchg
ss
push
mov
popa
mov
xchg
scas
mov
push
shlb
mov
push
jnp
test
push
mov
mov
ss
pop
shll
pop
das
test
popa
movl
sbb
negb
and
jle
lret
mov
shlb
fs
mov
sarb
mov
or
add
cmp
aas
add
in
or
mov
pop
jne
imul
adc
das
xor
add
and
xor
and
or
mov
jns
mov
lcall
cmp
jmp
inc
lcall
xlat
jbe
test
push
cmp
iret
ljmp
lahf
pop
aaa
dec
mov
push
lock
mov
sbb
mov
mov
jns
jo
add
lods
out
divb
xchg
cmp
push
jno
js
test
pop
sbb
xchg
lret
cmp
fs
sub
nop
inc
lret
or
arpl
pushf
jg
jg
hlt
lds
cmp
mov
push
cwtl
lea
inc
push
jae
fwait
adc
stc
push
test
mov
bound
lods
mov
xchg
mov
push
outsl
inc
push
roll
out
int
fsubr
daa
imul
jno
cmp
xor
jae
ljmp
adc
xor
xor
pusha
idivl
and
xchg
add
jne
jmp
int
lock
jno
call
aam
fadds
std
hlt
xchg
mov
leave
repz
adc
cmp
adc
adc
mov
movsb
bound
loop
push
ss
adc
pushf
pushf
mov
jmp
fisubrl
leave
jb
xchg
add
icebp
push
jo
fsubrl
and
test
out
pop
fnsave
add
mov
dec
dec
pop
dec
outsb
lds
ret
dec
jecxz
aad
test
leave
jle
in
cmp
fildll
xchg
add
and
in
ljmp
jno
les
cmpsb
xchg
xchg
dec
mov
ret
scas
ret
hlt
or
xchg
test
pop
cltd
and
xor
xchg
push
xorb
js
mov
adc
hlt
sub
hlt
dec
fcomi
jnp
inc
scas
shrb
je
add
mov
popa
xlat
insl
call
aas
sbb
insb
pop
pop
sub
sub
sbb
push
stos
loopne
les
push
cli
ja
sub
mov
movsl
xchg
jmp
jb
mov
ret
inc
test
loopne
aam
ds
jmp
push
pop
lcall
out
mov
test
and
lock
adc
mov
dec
addr16
out
inc
frndint
cmpl
sbb
pop
xor
inc
popf
jbe
mov
call
mov
push
dec
or
les
xchg
fdivs
fnstcw
sbb
xor
popf
cmpsb
cmc
popf
jg
andb
outsb
lods
and
sti
mov
or
or
mov
mov
cmp
sbb
outsb
out
rcrb
dec
out
pop
rcr
js
punpckhbw
nop
cmp
push
sub
cmp
jecxz
lock
mov
dec
push
inc
fldl2e
lods
push
mov
jle
shrb
mov
jnp
xchg
inc
pop
popf
push
jmp
lods
in
push
in
dec
aam
push
lret
fs
cli
mull
imul
xor
arpl
mov
icebp
sbb
fldcw
xchg
and
sbb
jns
lahf
or
test
test
lock
sub
fcompl
jnp
lods
lods
movsb
ja
mov
push
rcll
xor
cmc
repnz
inc
or
xor
push
shrb
xor
ja
or
push
push
push
sahf
dec
sub
xor
cld
pushf
scas
fadd
out
dec
adc
push
inc
and
filds
dec
in
add
add
test
into
gs
and
and
mov
adc
je
jbe
push
mov
and
inc
push
and
enter
xchg
inc
mov
icebp
jp
fs
push
mov
dec
jno
mov
xchg
push
dec
cltd
xor
fcmovnu
xor
xor
push
push
fsub
lds
or
movsl
jge
xor
inc
fwait
mov
int
jg
adc
shl
xor
adc
push
daa
shll
and
jmp
fiaddl
aaa
xchg
cmpsb
cli
iret
mov
stc
mov
dec
repz
mov
bound
dec
mov
dec
dec
in
pushf
imul
addr16
inc
push
idivl
int3
xor
inc
fcompl
inc
push
lods
call
inc
and
and
jmp
pushf
test
inc
sbb
xchg
fcmovnb
fisttps
fistpl
test
fwait
lock
adc
fnsave
adcl
pop
sub
lcall
inc
dec
nop
daa
xchg
cmp
scas
aas
jne
mov
mov
fadd
pop
and
pushf
fbstp
stc
hlt
or
adc
icebp
and
sti
dec
sbbl
lahf
std
or
test
xchg
repnz
or
negl
xor
sti
adc
pop
xchg
push
xchg
cmp
mov
adc
inc
mov
stos
mov
xchg
xchg
aaa
lcall
pop
dec
mov
or
repz
jecxz
sbb
jno
xchg
mov
add
inc
pop
nop
pop
or
mov
jmp
sub
sbbb
icebp
cmp
test
push
ficompl
push
xor
xor
inc
inc
add
test
and
sub
scas
cmp
or
xor
clc
dec
aas
mov
xchg
or
scas
cli
adc
push
xchg
stc
out
sahf
addr16
ja
jb
je
scas
mov
popf
jo
stc
cld
addl
jle
lods
repnz
dec
fisubs
push
aad
push
and
sbb
repnz
cmpsb
mov
jmp
or
lcall
mov
xchg
nop
lret
shrb
adc
rcrb
stos
nop
sbb
movsl
daa
add
jecxz
sub
negb
dec
out
stc
push
jmp
lret
fstl
push
inc
inc
inc
neg
mov
adc
sub
or
push
cmpsb
cs
scas
push
pop
out
fdivrl
mov
mov
shlb
test
adc
lods
pop
les
mov
repz
stos
inc
shrl
mov
call
dec
pushf
ljmp
repnz
cmp
fildll
jge
enter
out
dec
dec
lea
repz
les
mov
loope
aaa
mov
sub
mov
adc
xchg
sub
pop
dec
sub
daa
daa
push
leave
pusha
gs
push
push
psubsb
push
mov
adc
lds
jg
and
int
xlat
pop
adc
mov
insb
jo
in
pop
dec
mov
fildll
aam
int
mov
test
sti
loopne
rorl
mov
loop
call
mov
adc
into
scas
inc
pop
mov
xchg
inc
mov
mov
and
mov
adc
inc
jo
bound
repnz
rolb
or
out
and
xchg
jno
add
mov
push
sub
jge
cmp
stos
das
mov
add
adcl
mov
rcrl
out
inc
or
cmp
and
lock
out
cli
arpl
icebp
adcl
lock
push
sbb
mov
les
out
xchg
inc
cs
xchg
adc
mov
mov
jle
repnz
insl
mov
inc
pop
movsb
push
int3
pusha
pushf
sbb
ss
leave
lods
jo
inc
inc
add
push
dec
pop
inc
push
mov
das
aam
in
push
xor
jo
and
push
test
clc
or
fidivl
decl
call
fnstenv
daa
cli
jmp
xchg
mov
fidivrs
jle
loop
sub
in
jle
cli
lds
rcll
loopne
pop
and
outsl
push
cs
orl
inc
sub
mov
push
sbbb
int
jb
cmp
jp
andb
loop
lea
mov
pop
mov
jmpw
xchg
mov
pop
jmp
aam
je
xor
in
push
rorl
arpl
mov
lods
and
sub
xor
cmpsl
jmp
adc
push
jecxz
fdivrl
cli
jno
int
mov
add
insb
xchg
add
inc
mov
sti
shrb
sbb
jecxz
cmc
popa
dec
in
pusha
cltd
outsl
push
imul
divb
adc
inc
fcomps
mov
push
adc
mov
notb
lea
mov
gs
inc
mov
cmpsb
and
call
add
sahf
lea
jp
mov
ret
test
adc
enter
inc
xor
push
pop
lret
aaa
xchg
jbe
and
test
into
and
repnz
pop
iret
xchg
pop
lret
mov
pop
jne
pop
xor
inc
or
sbb
outsl
adc
xorl
repnz
mov
out
insl
and
xor
xor
imul
mov
sbb
movsb
loopne
pop
sub
or
and
mov
cmp
aad
mov
sub
movsb
scas
dec
and
outsl
fnclex
cs
nop
adc
push
lret
xchg
and
or
jo
cmpsb
data16
mov
sbb
sub
inc
jmp
push
mov
lahf
lahf
cmpsl
ja
sub
fwait
push
dec
dec
repz
pop
insl
push
pusha
mov
mov
inc
push
push
xlat
sub
mov
sbb
cmp
ljmp
ljmp
in
jp
jnp
rorb
cltd
xor
push
push
inc
xchg
insb
sbb
jnp
jae
xrelease
in
lds
mov
lds
icebp
sbb
mov
dec
mov
int3
ds
add
pop
repz
pop
jmp
jmp
cwtl
das
ja
incb
push
inc
lods
sarb
mov
pushf
xchg
out
cs
mov
es
es
pop
movsb
inc
data16
jle
inc
pushf
adc
cmp
jge
mov
rcrb
add
mov
lret
ljmp
pop
adc
sub
xchg
cmp
mov
push
mov
shlb
mov
fiaddl
push
pop
mov
mov
in
iret
dec
and
scas
jmp
xchg
dec
repz
inc
jp
xlat
lcall
and
pop
push
cwtl
lods
sbb
ss
push
ljmp
pushf
and
rcll
lcall
in
xchg
lock
nop
aaa
gs
movsl
xchg
pop
sbb
pop
sahf
aaa
loop
cmc
sbb
jle
cmpsb
pop
add
or
imul
ja
shl
inc
push
test
add
cmp
mov
in
popa
clc
sbb
xor
lret
arpl
xor
iret
pop
xor
pop
mov
testl
int
adc
cmp
test
inc
cmp
sbb
movsl
cmp
adc
push
sub
testl
clc
push
fldl2t
add
push
jno
and
or
nop
je
stc
pop
nop
sub
lret
lret
test
fidivl
inc
adc
bound
arpl
dec
loope
lahf
pop
and
xchg
mov
sahf
mov
ret
and
lret
stos
loope
sbb
test
sub
xor
ss
lods
movsl
icebp
sub
in
test
xor
mov
sub
aas
int3
ret
lock
xchg
lods
sub
dec
push
icebp
repz
pop
dec
cmp
pop
cmp
dec
adc
pop
xor
sarb
ret
mov
fidivl
subl
jge
and
aam
aaa
xchg
pop
fwait
mov
mov
insb
rclb
xor
lea
fwait
pop
pop
jae
cwtl
sub
ror
je
adc
jecxz
xor
stos
push
sbb
add
popf
sub
push
dec
mov
and
scas
mov
dec
cmc
test
jnp
add
sbb
test
subl
mov
jge
add
push
rol
jno
loope
or
and
test
int3
push
loope
dec
xorb
xlat
mov
mov
aas
xchg
adc
testl
and
mov
js
icebp
and
iret
cs
cmp
or
cmp
movsb
and
cmpb
xor
sbb
call
sub
sub
jbe
dec
iret
sar
ja
sub
push
in
bound
jp
push
jge
orb
pop
sahf
pop
push
sti
cmp
mov
call
sbb
push
jge
jmp
incb
nop
out
push
lods
aas
xchg
push
out
std
mov
fs
loop
push
stos
jbe
cld
insl
cmp
sti
fldcw
sub
lock
pop
mov
in
mov
mov
sti
jp
push
mov
mov
insl
inc
stc
xchg
popf
mov
sbb
jb
stos
in
shlb
mov
pushl
dec
push
stos
rclb
jno
dec
mov
pop
daa
adc
scas
push
inc
scas
push
or
sbb
cmp
mov
adc
repnz
push
outsb
push
outsb
mov
movsl
test
pop
sub
mov
mov
imul
cmp
xrelease
sbb
and
push
ds
in
in
fcompl
arpl
jae
andl
sahf
mov
arpl
adc
lcall
jno
jbe
push
jge
cmp
cmp
enter
cs
ret
jae
outsb
xchg
mov
cmp
aam
and
cs
sbb
or
pop
push
roll
push
rcr
sarb
inc
mov
xchg
loope
jns
inc
push
push
rcrl
out
push
test
inc
pop
outsl
lea
iret
data16
jmp
popf
jb
sbb
sub
xchg
cwtl
push
popf
leave
mov
clc
xor
jno
hlt
in
add
addl
sub
xchg
xor
ret
aam
mov
push
push
ljmp
inc
stos
enter
sbbb
mov
lahf
xchg
pop
lret
jmp
push
scas
jbe
adc
and
xorl
xor
xchg
and
push
outsl
in
push
mov
push
cmc
push
jl
ljmp
ja
dec
pop
icebp
jns
mov
adc
cmp
mov
hlt
mov
divl
icebp
aas
ljmp
xchg
push
xchg
out
mov
lock
mov
jg
and
cmp
das
mov
leave
in
popf
mov
ja
and
mov
sti
adc
out
adc
mov
fildll
shlb
rcrl
out
sbb
jne
pusha
pop
in
cmpsl
lock
adc
fdivs
xor
add
mov
jecxz
into
clc
inc
sarb
push
test
push
mov
push
out
stos
cmp
outsb
sub
ret
xor
xchg
xchg
dec
inc
xchg
hlt
adc
movsl
inc
push
test
sbb
arpl
dec
push
gs
and
pop
push
aas
mov
mov
fcmovnu
pop
adc
pop
mov
sub
les
cmpsb
adc
mov
movl
xor
movsb
lods
iret
fdivrl
cmp
sub
xchg
cmp
sbb
add
xor
clc
mov
dec
mov
mov
rcrb
sbb
sbb
movsb
jl
in
imul
pop
out
mov
cli
jg
lds
sub
movsl
dec
daa
mov
jnp
enter
scas
icebp
pop
dec
cmp
das
fnstenv
icebp
xchg
jp
add
or
or
nop
fldenv
push
sbb
pop
addl
packuswb
stos
mov
mov
je
mov
inc
aaa
ja
cmpsb
shlb
clc
xchg
icebp
fcom
stos
jmp
pop
and
cmp
mov
sbb
repnz
sbb
xor
stc
out
jmp
cmpl
enter
aad
daa
pushf
xor
dec
mov
jl
dec
mov
je
sub
filds
lea
cmc
insb
repz
shr
fisubs
jae
and
lret
cltd
cs
jle
jmp
loop
clc
nop
dec
loop
add
imul
mov
inc
arpl
ud0
inc
fldenv
and
sahf
or
aas
leave
mov
sbb
and
dec
xor
in
jp
inc
add
js
es
notl
cmp
stc
insl
and
out
mov
xor
sbb
cmp
pop
sbb
sbb
std
and
mov
lahf
out
pop
or
mov
xchg
out
es
adcl
scas
xchg
push
ljmp
ret
or
das
cmp
jnp
add
and
xchg
imul
cltd
vpsrad
sub
dec
scas
jmp
and
aas
inc
add
mov
stos
ds
jbe
or
inc
minps
xor
ljmp
mov
aam
ljmp
iret
pop
mov
lret
push
arpl
inc
jne
cmp
mov
fiaddl
fdivrp
cli
enter
gs
rorb
pusha
ss
xchg
lock
fcoms
cwtl
inc
inc
cmc
adc
xchg
push
pop
lds
xor
insb
sub
sbb
cmp
dec
std
fidivrl
mov
and
ret
and
and
adc
js
popf
mov
inc
pushf
das
mov
clc
mov
xor
aad
lds
fldt
jns
cld
popf
xor
inc
dec
faddl
pop
xorl
sub
fnstenv
cmp
je
faddl
fimull
dec
adcb
fs
arpl
int
rclb
and
repnz
aas
jns
jg
divl
leave
call
dec
shrl
push
movsl
cs
das
jo
dec
shlb
stc
xor
xor
popa
push
mov
faddl
push
push
cmc
xchg
mov
inc
fbstp
lock
xchg
sub
das
pop
or
xor
push
call
mov
mov
pop
data16
pop
in
sbb
push
push
xorb
clc
dec
add
jmp
xchg
adc
mov
dec
mov
pop
or
std
aam
sub
cli
mov
jecxz
xchg
pop
cmpsb
add
lret
add
loopne
lahf
adc
sub
xchg
sub
mov
push
xchg
clc
xchg
or
shrb
jle
add
js
sbb
out
addr16
mov
cmp
insl
or
pop
int
mov
jecxz
shl
mov
jle
test
add
xchg
cmp
in
js
cmp
mov
xchg
jb
inc
jmp
pop
mov
mov
jnp
jb
sbbb
adc
and
data16
shl
arpl
xchg
pop
pop
mov
lahf
jecxz
dec
sbb
cltd
or
lods
or
movsl
xor
xchg
inc
popa
and
jmp
jo
lcall
daa
mov
ljmp
nop
adc
mov
add
out
or
mov
pusha
enter
shrl
movsl
adc
ljmp
dec
mov
xchg
ds
or
push
jge
enter
adc
aad
pop
outsl
and
das
psubusw
inc
pushf
cmpxchg8b
xchg
std
packsswb
mov
add
xor
add
pop
cld
ret
add
outsb
and
shlb
pop
fdivrs
iret
popf
insb
jle
jle
cmp
lret
into
mov
xchg
aad
mov
xchg
scas
sbb
ds
jecxz
mov
push
mov
leave
sbb
stos
outsb
push
mov
je
or
push
push
scas
sub
dec
inc
mov
bnd
dec
inc
shll
clc
jae
or
xor
and
cltd
sbb
mov
mov
addr16
adc
cmp
sub
xor
je
pop
stc
sbb
mov
dec
xchg
imul
dec
sbb
idivb
xchg
leave
and
arpl
adc
pop
inc
cld
out
ret
mov
out
mov
scas
jp
or
adc
push
adc
xor
adc
div
imul
xchg
insl
inc
or
xchg
pop
icebp
adc
xchg
sub
xor
xchg
xchg
sbb
fwait
mov
lds
push
rcll
sub
xchg
pop
hlt
mov
ret
pop
shll
sub
mov
mov
mov
sti
or
cmp
jnp
xchg
or
or
cltd
push
in
and
fistps
jmp
jne
push
mov
mov
icebp
lret
fnstenv
push
mov
das
mov
hlt
rolb
es
xor
nop
jnp
ja
sub
aad
lods
bnd
sub
adc
adc
leave
xor
adc
popa
aaa
into
sahf
xor
and
xchg
inc
mov
xchg
mov
xchg
aas
xor
push
pop
pop
movb
iret
fld
popf
mov
lret
jo
mov
inc
lret
adc
fs
dec
shll
push
mov
mov
fistps
jbe
jno
mov
sbb
mov
add
fstpl
iret
popa
xor
jl
imul
sbb
inc
jecxz
cmp
lcall
mov
mov
mov
cltd
aam
cmc
ja
or
test
push
and
xchg
mov
das
adc
or
js
dec
sub
mov
add
loope
cmp
lret
cmp
hlt
dec
imul
gs
or
lahf
imul
decb
push
fwait
dec
aas
cmpsb
popf
outsl
js
mov
inc
xchg
insl
andb
pop
add
mov
add
push
mov
push
inc
xor
ljmp
test
call
in
lock
add
mov
dec
repz
lock
mov
lock
stos
mov
pop
icebp
add
xchg
and
pop
stc
rcr
out
or
nop
cmp
stos
add
inc
push
jns
aas
pop
jae
xor
jnp
mov
adc
faddl
test
repnz
lds
popa
shrl
jbe
mov
xchg
pop
jmp
stc
nop
jo
pop
sub
cmp
jecxz
add
mov
cmpl
mov
adc
fs
cli
outsb
adc
and
aaa
mov
iret
jp
popa
fistps
mov
lahf
mov
adc
int
add
inc
arpl
js
ret
sahf
mov
sub
jno
iret
jno
push
jl
sarl
mov
dec
dec
jne
jle
fnsave
mov
jge
jns
ret
mov
lret
cmp
dec
aaa
cli
mov
jbe
cmp
sbbl
add
mov
push
jbe
js
bound
test
or
mov
adc
ds
cs
dec
mov
xchg
push
pop
test
jecxz
fadds
adc
lea
cmp
jbe
cmp
rcrl
popf
scas
and
mov
mov
jb
call
pusha
icebp
call
lcall
add
pop
test
pop
out
je
mull
ret
call
dec
into
imul
div
into
mov
stos
inc
cmpsl
in
inc
push
ss
into
clc
sub
push
sbb
mov
mov
push
in
adc
cwtl
lret
sti
mov
add
push
or
rorl
sti
push
push
mov
xor
loope
lret
stos
jmp
ss
mov
xchg
test
lret
outsl
mov
xor
mov
int3
sbb
out
and
adc
add
add
repnz
push
adc
push
and
neg
inc
push
xor
jecxz
jmp
sti
xchg
sub
xchg
dec
mov
cmp
adc
inc
inc
sbbb
sub
adc
xchg
sub
mov
xor
fdivr
cmp
and
mov
andb
lahf
push
push
pop
push
in
movsb
mov
testl
cmp
test
fldcw
sub
lea
out
mov
mov
test
mov
pop
inc
cld
lods
adc
sbb
mov
and
and
mov
inc
or
sar
jo
leave
mov
shrl
out
jns
inc
sahf
sbb
jns
jae
ret
xor
mov
lea
fsubs
rcr
and
daa
inc
les
iret
or
push
jo
iret
mov
sbb
push
mov
or
icebp
loopne
adc
cmpsb
xor
mov
jg
or
int3
fnsave
cwtl
xchg
repnz
adc
outsb
inc
outsl
outsl
xor
insb
cltd
aas
repnz
xchg
imul
loope
int
xchg
aam
dec
push
inc
xchg
pushf
out
mov
repnz
cmp
cld
xchg
and
aaa
data16
push
test
sub
pop
imul
cmp
or
add
push
out
mov
in
sub
pushf
inc
sbb
jne
ficoms
xchg
in
test
or
cmpsl
jl
and
pop
int3
movsb
repz
adc
orl
cmpsb
jns
loope
hlt
ljmp
mov
mov
mov
notl
stos
add
jns
test
movsl
mov
jl
xor
popa
mov
adc
popf
aaa
mov
fnsave
mov
fcomps
fidivrs
test
pop
test
push
dec
sti
out
push
jp
cld
pop
jb
outsl
mov
or
stc
dec
aas
mov
gs
jns
dec
adc
call
pop
fwait
or
movsl
sbb
scas
adc
jno
outsl
jae
jmp
jne
pop
xchg
hlt
je
es
rcrb
popa
out
out
push
or
sbb
push
dec
cmc
cmp
mov
aad
aad
in
mov
push
push
rorl
mov
mov
pop
and
dec
push
scas
push
xchg
lock
lods
cmpsb
mov
cmc
popa
mov
cmp
nop
lock
in
cmp
pop
xchg
clc
pop
fscale
aad
and
adc
les
or
push
out
loope
ret
jo
cmp
mov
xchg
xchg
sub
sahf
mov
ds
or
adc
push
inc
ret
into
xor
push
in
mov
pop
adc
das
xchg
jbe
inc
fsubr
jno
pushl
fs
in
es
aas
cmpsb
aaa
mov
jmp
cmpsb
aam
cmp
repnz
and
dec
xchg
push
in
and
mov
lods
insb
push
inc
and
loopne
and
jno
add
xchg
jbe
adc
xchg
and
dec
int3
ficomps
fcoml
sti
stc
and
fcmovnb
int3
jg
jae
mov
repnz
pusha
lahf
pop
mov
ljmp
pop
imul
xor
mov
fcoml
mov
push
add
lods
or
pop
xor
stos
mov
test
je
cmpsb
dec
xchg
repz
mov
inc
popf
xor
xchg
xor
les
pop
push
movsl
mov
cmp
mov
ja
lods
mov
mov
jae
paddsb
scas
in
pmulhw
lea
repnz
push
mov
inc
inc
xor
jp
jns
jno
xchg
add
inc
mov
cmpsb
jns
loopne
call
int3
fsubl
lcall
jbe
adc
ss
mov
fdiv
push
mov
or
dec
cmp
cmp
dec
pop
jmp
mov
pop
in
pop
cmc
dec
js
pop
and
adc
push
and
cwtl
fucomi
in
pop
and
cmp
je
enter
jne
outsb
sbb
sub
or
sbb
or
clc
jp
loope
aam
fistps
pop
or
mov
sbbb
mov
sbb
test
or
popa
inc
dec
fistpll
imul
pop
fnsave
mov
scas
fwait
jbe
hlt
cld
aad
test
xorl
sbb
popf
adc
mov
pop
test
lock
xchg
int3
jecxz
adc
cmpsb
mov
dec
loop
pushf
aaa
cld
mov
rcrl
cmc
jae
inc
push
and
or
dec
cmp
lds
jnp
shlb
pop
outsb
jg
test
push
jl
push
jno
add
or
cmpsb
cmpsl
xchg
pop
es
push
fbstp
adc
xchg
cwtl
daa
mov
loop
jge
xor
jnp
and
leave
mov
shll
in
mov
movups
push
add
add
sub
cmp
xchg
sub
mov
les
dec
loopne
push
lahf
popa
mov
js
fnsave
mov
fsubrp
mov
in
test
xor
jnp
test
je
sub
lcall
mov
sub
adc
or
mov
dec
repnz
push
cs
jb
pushf
xor
rclb
xor
subl
lret
shrl
in
dec
ds
daa
cmp
loop
dec
lock
andl
ds
loop
xchg
dec
or
ds
cmp
cmpsb
lock
sbb
mov
subb
push
jl
or
mov
inc
out
lea
test
data16
xchg
inc
vpsubd
xor
sub
add
dec
adc
or
adc
arpl
sub
lods
push
cmp
lcall
iret
icebp
adc
push
clc
xor
mov
or
loop
pushf
test
or
in
aas
sbb
add
sbb
fbstp
xchg
mov
int
inc
cmpsb
xchg
dec
mov
mov
cmpsl
cwtl
daa
add
push
push
inc
push
icebp
xor
mov
push
add
test
call
fdivl
mov
enter
jmp
add
rcl
cmp
rcrb
xchg
mov
in
jne
jecxz
cld
imul
inc
addr16
jg
lea
mov
mov
mov
jnp
sbb
push
or
pop
jecxz
iret
out
adc
add
xor
mov
pop
xchg
adc
lret
add
icebp
sbb
sahf
and
icebp
js
xorl
jae
out
xchg
jb
jge
jbe
add
pop
or
insl
not
ret
cmp
ret
push
mov
fcmovb
pop
or
pop
repnz
sbb
bound
repz
outsl
push
cmp
or
iret
fildl
push
xchg
sub
lahf
or
cmc
mov
in
xchg
add
fucomp
xchg
xor
repnz
into
aam
rcll
fdivl
jecxz
adc
cmp
in
fucomip
jmp
pop
icebp
aam
and
repnz
pop
hlt
mov
dec
dec
js
ljmp
xorl
jecxz
sub
mov
out
push
pop
hlt
orl
and
lret
push
push
test
mov
pop
pop
out
sub
and
inc
popa
fsubrs
fdivl
aad
jl
mov
hlt
mov
push
mov
dec
mov
dec
lcall
inc
fcompl
sti
pusha
cmp
cmp
clc
fildl
xlat
aad
fistpl
loop
out
lcall
jge
lock
add
cwtl
lret
pop
lods
mov
testl
repnz
add
pop
mov
sti
push
jge
outsb
and
adc
mov
fwait
cmpsl
sbb
mov
and
lods
cli
addl
addl
mov
push
stos
and
scas
lcall
aam
xchg
pop
push
or
mov
and
adc
in
cmpsb
xchg
dec
push
imul
jne
inc
orl
jg
addb
lock
or
mov
sbb
and
cwtl
xchg
lcall
sbb
ds
outsl
add
xchg
push
mov
cmp
sbb
inc
push
or
inc
fdivs
fisttps
push
or
dec
sbb
pop
adc
xor
or
addb
and
xlat
jne
mov
fistl
sub
lret
les
push
in
cwtl
test
or
jne
dec
popf
rolb
dec
sbb
pop
mov
aaa
out
in
pop
cmp
push
pop
sub
sbb
testl
jnp
cli
shlb
daa
xchg
sub
xor
lcall
scas
xor
jge
mov
xchg
ds
sbb
adc
mov
and
xchg
sub
dec
jl
jg
fiaddl
dec
int3
fsubrp
frstor
sbb
das
popa
in
cwtl
jnp
adc
xchg
xor
inc
cmp
jle
adc
mov
jnp
sbb
dec
dec
int
mov
gs
mov
mov
inc
insl
add
xchg
lock
fs
inc
sbb
js
lret
xor
push
push
or
fdivrl
add
cli
push
xorl
push
mov
cmpsl
fsts
insl
nop
sub
out
mov
cmp
mov
add
mov
icebp
cld
xchg
js
out
xchg
adc
mov
mov
pop
leave
sub
pop
xchg
xchg
ds
add
stos
xor
stc
mov
imul
dec
adc
ja
das
jle
sbb
cmpsb
adc
out
dec
pushf
xchg
xor
sub
inc
stos
divb
xchg
js
mov
jge
leave
mov
out
xor
vmread
xchg
xchg
push
adc
mov
imul
mov
jg
sbb
push
cmpl
loop
cmp
mov
enter
insb
sub
sub
xchg
loopne
mov
movsb
add
aad
and
fadd
jae
insb
loope
int3
iret
xchg
mov
loop
das
mov
aad
cmc
sbb
out
xchg
ja
fmuls
or
movsb
cmp
es
adc
jb
scas
or
dec
sub
mov
push
dec
imul
int
popa
das
idivb
cmp
inc
mov
mov
stos
test
push
lock
dec
pop
xor
js
adc
pop
lock
clc
push
mov
call
mov
xorb
stos
movsl
cs
iret
add
xchg
dec
jno
cmp
sbb
mov
clc
push
inc
sbb
lcall
adc
cltd
inc
mov
hlt
or
stc
cmpb
test
fistps
xchg
and
dec
pop
std
jecxz
scas
push
xchg
xor
push
jo
and
pop
sahf
sti
inc
cli
imul
adc
out
hlt
mov
add
ljmp
or
lret
sub
sub
mov
ss
mov
cmpb
jo
jge
cwtl
cmp
sbb
rcrl
in
sbb
mov
and
loope
pushf
dec
mov
sbb
and
mov
lcall
mov
test
push
movsl
arpl
mov
je
pop
xor
lods
pop
xchg
out
stc
je
mov
add
rorb
ja
dec
pop
mov
mov
bound
add
mull
push
and
popf
test
aaa
mov
loope
fld
test
mov
fnstenv
push
gs
cli
notl
sbb
fstpl
xor
mov
popa
pusha
fildl
lods
push
xchg
nop
shll
add
mov
popa
jo
rolb
dec
sbb
rcrb
repnz
movsl
mov
adc
inc
inc
test
mov
lock
cmp
mov
popa
push
out
in
lahf
int3
gs
xorl
test
lods
or
push
shrb
mov
mov
fidivrs
adc
add
inc
xchg
add
mov
mov
inc
fisttpll
jge
es
mov
into
fwait
cmpsl
dec
push
outsl
shlb
lea
fisubrl
mov
je
sub
xchg
lea
sub
adc
jl
jbe
mov
jle
dec
xchg
or
cs
stos
mov
pusha
xor
dec
popf
dec
rolb
insl
and
add
ret
xchg
add
push
popf
mov
loopne
jb
dec
sub
data16
fwait
enter
inc
or
xchg
out
push
cld
pop
fnsave
sahf
clc
stc
jge
outsl
scas
sbb
mov
inc
aad
jns
clc
test
repz
xchg
cmp
xor
add
push
out
mov
cmp
negl
fstpt
add
cmpsl
fnstsw
pop
ljmp
cmpl
lods
cmp
fistpl
andb
adc
sub
push
sub
cmc
pop
and
nop
adc
lret
pop
xchg
sub
inc
mov
sbb
jp
inc
mov
shll
xor
cmp
dec
ret
and
popa
jno
enter
push
jmp
mov
movsb
adc
test
subb
test
xchg
sub
push
in
jns
xchg
js
inc
stos
rolb
jecxz
add
movsl
cmp
add
adc
lret
and
cs
imul
aas
pop
fistpll
sub
inc
movl
imul
aas
mov
mov
mov
dec
add
cli
sahf
dec
clc
cmp
dec
in
rcl
mov
sbb
fbld
out
dec
cwtl
call
inc
sbb
add
js
push
xor
out
repz
scas
push
mov
addb
xchg
stc
adc
inc
test
mov
test
test
js
test
in
cmpl
or
sub
mov
rcrb
mov
xor
fisubl
jne
sahf
cmp
cmp
sbb
in
aas
mov
ficoml
xchg
jl
mov
js
push
es
or
call
in
cmp
sbb
sarb
adcl
fisttpl
stc
pop
insb
lret
xor
lret
jne
xlat
adc
adc
movsl
pop
jb
adc
testb
test
sub
add
pop
lcall
lret
push
or
cltd
adc
xchg
test
loop
lock
cld
push
dec
jg
mov
ret
jp
shll
addl
pop
jle
add
in
imul
lods
inc
mov
xor
iret
inc
adc
sbb
das
push
cmp
sahf
mov
iret
movsl
or
enter
test
sub
xchg
push
adc
cmp
pop
mov
mov
and
adc
cmpl
sbb
inc
dec
aaa
out
test
repz
xor
inc
push
lea
out
jnp
fs
into
int3
in
mov
push
jge
xchg
jnp
mov
pop
cmp
iret
jns
or
xchg
stos
insl
insl
loopne
stos
cmp
mov
or
loope
adc
pop
sbb
push
push
or
cmp
inc
mov
adc
aaa
inc
mov
cld
out
gs
test
scas
mov
inc
pop
movsb
call
dec
lcall
inc
mov
addr16
test
jg
adc
jg
cmpsl
cld
sbb
jg
daa
or
lods
lret
stc
cmp
je
mov
jno
sub
mov
filds
psubsb
mov
das
and
cli
pusha
fiadds
in
repz
cwtl
sub
fs
jl
sbb
xor
ret
stos
push
subl
pop
fcmovu
xchg
enter
out
adc
mov
jnp
mov
ret
sbb
push
pushf
hlt
stc
das
iret
icebp
fnsave
push
sahf
fwait
pop
adc
fiadds
xchg
mov
mov
sub
sbb
and
pop
jae
scas
das
shl
xchg
add
adc
test
xchg
ds
inc
ret
movsl
insb
outsb
xchg
sbb
jb
cmp
dec
pop
adc
stos
mov
or
jp
adcl
cmp
mov
rcrb
xchg
jle
std
arpl
in
lds
leave
insb
std
in
lods
sbbl
cld
mov
in
mov
out
movsl
loop
pop
adc
daa
pop
mov
sbb
xlat
dec
test
push
out
xchg
in
into
mov
add
adc
pushl
jg
fldt
push
cmc
addl
and
notb
cmp
xchg
push
arpl
push
outsb
jne
xchg
out
inc
addr16
pop
mov
rcrb
and
fs
xchg
aam
ret
lret
jae
test
xchg
or
call
shlb
imul
inc
aam
xchg
popf
mov
xchg
sub
shll
jne
xor
pop
out
sti
or
gs
push
mov
jmp
cmp
rcl
movsl
ss
xchg
cmp
xor
add
inc
mov
in
push
pop
sahf
jb
in
mov
lahf
inc
int3
arpl
scas
arpl
repz
cli
fsts
xor
and
pop
xchg
jb
inc
jl
xchg
mov
les
sarl
idivb
call
out
jo
bound
inc
inc
inc
jmp
notl
int3
cld
push
ljmp
jno
pushf
inc
in
xor
leave
fmull
sbb
jb
pop
outsb
dec
xchg
ret
lea
cmc
into
test
add
lret
push
inc
faddl
mov
xor
je
sti
les
push
push
xor
mov
adc
jl
sub
shrl
in
cmpsb
mov
lcall
add
enter
adc
rorb
inc
test
movhps
sub
push
or
mov
in
test
jne
ficoms
xchg
test
sub
inc
loopne
or
cmc
mov
icebp
loop
aas
and
addr16
pop
lret
sub
mov
out
push
mov
fbld
mov
mov
push
mov
or
cmpsl
and
leave
fists
sbb
push
int3
cmpsb
sbb
cmp
mov
pop
hlt
cld
fcompl
mov
pusha
jnp
jbe
fmuls
cwtl
fisubs
mov
scas
and
push
mov
mov
js
xor
push
testl
lcall
out
leave
fs
cli
dec
mov
mov
fdivl
outsb
xchg
push
test
imul
xchg
mov
or
cld
cmp
out
js
jo
sub
out
jmp
sub
xchg
subl
bound
or
xchg
cmp
pop
push
lea
fidivrl
adc
xchg
cs
imul
ja
loope
test
jl
scas
ja
hlt
test
out
std
fadd
pop
out
clc
mov
cltd
and
mov
stc
or
pushf
add
testb
std
pop
or
mov
sub
push
inc
cmpsb
in
lahf
addr16
arpl
pop
add
leave
cmp
sti
mov
xchg
jne
xor
insl
push
inc
xchg
lea
icebp
mov
test
add
push
xor
inc
lods
loope
cld
lcall
push
leave
fnstcw
ja
add
push
or
cltd
popa
shll
mov
and
outsb
decl
movsb
jb
lods
dec
jnp
std
into
repz
scas
inc
dec
clc
stos
inc
out
out
insb
hlt
les
mov
lds
xor
outsl
push
sub
out
sub
test
sub
sub
cli
add
pop
dec
push
cmp
mov
add
test
pusha
mov
loopne
mov
dec
and
mov
push
adcb
addr16
sub
xchg
jmp
push
jg
jecxz
pop
sub
sub
stos
fidivl
scas
inc
sub
jb
movsb
or
ss
mov
out
aas
sbbl
xor
lock
sub
or
cmp
push
int
mov
inc
push
jo
push
xor
xchg
push
sub
scas
inc
sbb
xor
inc
mov
int
xchg
fsubrs
mov
or
sub
cwtl
sub
push
pop
ret
xor
adc
insb
inc
jmp
mov
mov
mov
jns
cmp
lock
stc
testl
xchg
sub
and
inc
cmp
mov
sbbl
lahf
pop
icebp
pop
insl
mov
push
out
pop
cmc
shll
sbb
mov
in
fnstsw
mov
out
dec
ja
test
push
push
fisttpll
cwtl
jp
adc
in
push
data16
imul
xchg
add
inc
pop
jnp
sbb
clc
inc
dec
xchg
and
pop
and
jnp
hlt
and
mov
push
mov
mov
dec
xor
testb
xlat
and
sbb
mov
scas
loop
sbb
aas
push
js
or
fnstenv
inc
call
ret
ret
mov
repnz
test
popa
outsb
stc
shl
out
add
sub
add
fbstp
adc
xchg
inc
sub
test
cmpsl
push
aaa
fsts
out
test
push
jg
outsb
mov
lret
pop
push
or
mov
mov
lahf
test
insl
lock
popf
loop
data16
out
xchg
adc
sub
jae
and
icebp
xchg
or
fisubs
daa
iret
mov
jle
mov
or
stc
push
daa
or
jl
sahf
lds
or
push
pop
call
mov
add
es
or
sbb
sbb
inc
sub
jmp
dec
xor
mov
pop
xchg
in
clc
cs
adc
cmpsl
cmp
mov
jmp
clc
nop
push
in
and
ss
sbbb
xchg
pop
fidivs
jge
cld
dec
add
mov
ficoms
iret
mov
lock
or
sbb
lahf
in
test
dec
mov
pushl
jg
fisttpll
scas
hlt
sbb
fdivrl
sub
jl
jb
jno
test
inc
mov
enter
xor
mov
das
shll
shll
incl
inc
scas
nop
pusha
dec
iret
fidivl
repz
fdivr
adcb
leave
addr16
stos
fs
xchg
fisttps
shlb
sub
nop
sub
adc
mov
mov
cmp
jb
add
or
sbb
xor
dec
mov
mov
std
mov
xor
push
idivl
mov
int
pop
add
dec
xchg
xor
popa
jp
outsl
and
insl
pop
into
addr16
sbb
or
hlt
dec
repz
mov
mov
mov
test
mov
lcall
scas
xchg
jns
mov
in
popf
cmpsb
sub
or
push
fs
mov
int
sbb
pop
cmp
cmp
shrl
adc
jmp
xorl
mov
cs
nop
daa
push
or
sub
ret
std
loopne
mov
push
sti
pop
xor
xor
adc
mov
mov
inc
xor
pop
insl
lock
push
mov
adc
fs
pusha
sub
mov
out
xor
and
cld
std
inc
lods
inc
in
pushf
bswap
lods
mov
mov
push
test
cld
jg
or
popf
jns
mov
sbb
and
pop
lcall
sbb
cli
xchg
ds
sub
lahf
arpl
lea
push
or
jns
loop
inc
fwait
push
cmp
test
ror
in
mov
lods
and
dec
mov
xor
iret
lcall
push
cwtl
repz
push
push
and
mov
mov
xlat
mov
outsl
out
fwait
ljmp
aaa
bnd
adc
aam
es
sbb
add
xor
clc
dec
test
or
mov
int3
jge
push
pusha
test
jo
jb
das
stos
jbe
adc
mov
outsb
icebp
fsub
mov
clc
or
out
jo
lods
and
dec
loope
inc
xor
inc
pop
cs
mov
scas
pop
sbb
or
lods
cmp
shl
insb
sbb
rol
mull
cltd
jae
ret
pop
call
xchg
cmc
and
push
push
rcrl
xchg
jp
cltd
jae
jns
push
rol
pop
ljmp
daa
pop
imull
pop
cmc
daa
xor
insb
add
sbb
pusha
popa
push
jle
sbbb
jbe
mov
pushf
lea
out
cmpb
push
scas
pop
jnp
cmp
inc
push
or
imul
inc
shrb
mov
loop
push
pop
lods
roll
add
cld
mov
pusha
decl
mov
inc
xchg
test
test
jae
add
inc
push
fnstenv
inc
sti
popa
scas
add
icebp
xlat
movsb
cmp
int
dec
testl
stos
insl
cmc
sbb
jns
pop
inc
jae
rcrl
test
pop
push
xor
pop
mov
adc
lret
sbb
mov
mov
rcll
fidivl
pop
call
cld
out
outsb
out
rclb
fs
jp
fwait
arpl
repz
sti
dec
xchg
inc
jle
movsb
adc
jne
ds
xchg
sub
jg
into
mov
rolb
in
lds
and
inc
xor
je
sub
orb
adc
dec
loope
pop
outsb
cmpsl
or
push
andb
add
decl
xor
enter
pextrw
outsl
adc
pushf
add
lahf
xor
aad
jns
leave
cmp
jecxz
add
aaa
fidivl
cwtl
or
inc
add
in
jbe
sub
mov
xchg
cmc
divl
pop
leave
and
cmp
filds
jmp
mov
jge
adc
aad
das
jmp
cmpsl
xchg
mov
xchg
scas
pop
mov
cmc
aam
or
movsb
bound
xor
sarb
test
imul
dec
mov
inc
sub
mov
cmp
cmp
cmp
cld
sbb
aad
jge
mov
pushf
push
lods
xchg
sub
mov
and
pop
ss
cmp
adc
push
mov
jecxz
cmp
ffree
xchg
out
shl
push
call
jno
inc
push
aaa
scas
sahf
xor
out
mov
xchg
or
fdivp
mov
xor
adc
cmp
adc
jl
inc
mov
sbb
rcrl
test
mov
jno
or
adc
dec
das
lea
pop
daa
bound
xor
mov
push
xchg
xchg
push
or
sarb
ret
jmp
sbb
fnsave
lret
jg
push
out
pushf
pop
adc
and
jmp
inc
xor
xchg
inc
scas
jns
sbb
dec
ss
insb
inc
cmc
pop
in
xlat
dec
adc
std
fs
jns
shrl
push
shlb
imul
rep
or
or
mulb
or
push
fldcw
push
or
push
cmp
cs
push
sti
or
aad
mov
aam
fisttpll
mov
movsl
pop
sub
into
shll
cmp
data16
enter
stos
sti
fcmovnbe
jbe
loope
cmp
adc
jle
ret
popa
jns
stos
repnz
loopne
xor
mov
ds
fdiv
jbe
in
push
push
ficoms
out
or
adc
inc
shrl
icebp
cli
xchg
pop
popf
push
popf
mov
sbb
call
leave
pusha
aaa
jle
xor
jne
ss
or
add
iret
xchg
in
jl
es
ja
mov
or
mov
ret
lods
inc
adc
inc
pop
mov
test
movsb
mov
pop
mov
mov
or
lret
mov
push
jb
subb
xlat
add
xchg
adc
jecxz
mov
shr
shll
stos
mov
mov
or
fstl
mov
dec
jecxz
mov
out
mov
std
mov
push
dec
roll
outsl
int
mov
xchg
jno
inc
inc
cwtl
std
dec
fdivrl
mov
jp
pop
or
mov
inc
push
or
mov
sub
out
jb
lret
lahf
in
les
bound
arpl
shl
xchg
sub
xor
xor
faddl
andb
lret
rclb
push
mov
pop
stos
mov
mov
lahf
and
mov
xor
imul
int3
test
mov
add
lret
add
bound
popa
vmovd
sbb
push
mov
scas
pop
pop
mov
add
jnp
ds
pop
xchg
sbb
or
mov
mov
mov
mov
inc
mov
rcll
pop
pop
nop
stos
xor
daa
cmc
mov
mov
into
iret
orl
jle
sti
xlat
and
dec
cltd
adc
jge
stos
cmp
jae
cmp
push
popf
add
sbb
mov
mov
and
xor
insl
mov
aad
sub
and
push
ss
sbb
dec
bound
int
js
fs
fmuls
inc
inc
enter
scas
push
dec
adc
inc
and
aaa
xor
shr
jl
das
fisttpl
cmp
aam
pop
lds
mov
push
dec
sbb
xor
pusha
out
cs
and
push
sbb
inc
dec
das
lcall
push
imul
repnz
dec
mov
fs
ret
insb
das
popf
loop
dec
clc
repnz
dec
iret
movsl
sub
outsl
arpl
mov
les
push
sbb
cld
xchg
inc
jl
and
xor
out
and
push
shlw
leave
add
jmp
or
mov
dec
or
fsubrs
aaa
iret
aad
adc
popf
movsb
and
jno
sahf
inc
ret
jmp
cmp
mov
fsubrl
movsb
mov
xchg
stos
ret
sub
cmpsl
or
mov
pop
xor
aas
pop
sarb
mov
enter
in
test
dec
lods
cmc
push
mov
xor
movsb
mov
loopne
je
sbb
sub
jl
pusha
mov
pop
dec
add
pop
inc
pop
loop
rcr
stc
mov
xor
stos
push
add
push
pop
scas
sub
xor
pop
mov
cmp
lret
lret
pop
fisttps
rolb
inc
pop
not
test
mov
xchg
jp
out
sub
dec
push
divl
mulb
nop
xor
dec
mov
ret
jle
aad
mov
inc
dec
jg
dec
cwtl
rcrb
mov
xlat
notb
xchg
subb
lret
ficoms
fsubs
adc
xchg
repz
add
shld
hlt
and
pop
fbstp
hlt
xchg
out
mov
pop
iret
imul
push
testb
ja
aaa
dec
or
push
lock
push
jmp
aam
sub
jne
bnd
in
lret
lret
in
cmp
stc
clc
sbb
fmull
jle
jno
nop
orl
cs
or
mov
mov
jg
ss
pop
sub
es
push
pop
sbb
ret
in
inc
ret
inc
repnz
push
jge
inc
lods
push
in
fisubs
fsubr
int
nop
int
pusha
cmc
sti
out
xchg
sub
pop
insl
push
add
push
ss
and
sbb
cltd
stos
push
jl
cwtl
int
aad
jl
sub
or
cmp
mov
dec
mov
addr16
push
aaa
sbb
stc
pusha
cmp
fneni(8087
aam
popf
add
push
sahf
incl
shrl
test
inc
popf
movsb
repnz
jb
mov
gs
cs
pop
mulb
add
movsb
ljmp
imul
in
pop
add
xor
push
pusha
adc
enter
xchg
in
out
xor
hlt
dec
jecxz
rorb
les
ljmp
push
mov
pop
cmp
dec
push
cmp
xor
inc
pop
xchg
or
icebp
or
lds
iret
arpl
leave
ds
sti
sbb
pop
daa
sbb
clc
ss
sub
mov
and
lret
and
movups
cs
ds
or
rcl
mov
adc
and
pop
add
pop
jl
dec
inc
test
cmp
and
inc
pop
fwait
dec
movsl
add
data16
imul
imul
test
and
movsb
inc
jle
notl
insb
stos
lods
inc
jb
ja
dec
xorl
dec
adc
shrb
rol
mov
popa
or
jmp
jl
inc
cmp
push
mov
dec
insl
add
fs
sub
or
or
sbb
test
or
movsl
xlat
mov
xor
popa
ret
leave
inc
cmpsl
leave
and
mov
mov
enter
call
mov
mov
pop
xor
jmp
adcb
fidivs
cmpsb
cmpsb
sti
in
fists
pop
mov
xor
lahf
ljmp
cmpsb
shrb
jge
imul
lret
leave
or
ret
jmp
ret
push
jg
outsb
sub
push
xchg
fdivs
fwait
jle
push
inc
fcompl
sti
xchg
cmpsb
stc
mov
iret
lock
xchg
sahf
xlat
scas
cmp
sbb
fisttps
cmp
sbb
fidivrl
cmpsb
in
cltd
adc
out
or
popa
or
dec
xchg
dec
in
jmp
scas
ficoms
js
lret
xor
sub
clc
adc
lcall
insb
push
dec
mov
or
inc
sbb
xchg
jle
adc
cmp
rclb
push
lods
out
dec
mov
ret
icebp
sbb
push
outsl
add
ss
sbbl
or
jnp
test
fs
adc
mov
mov
xchg
push
in
repz
mov
push
rcrb
aad
aad
adc
repz
pop
dec
fstpt
aam
sbb
lea
loopne
jae
fs
push
sbb
mov
arpl
xchg
add
or
mov
addr16
xor
push
adc
data16
push
sbbl
popa
sub
lock
inc
fisubs
jo
in
sub
lods
lea
xchg
cmp
std
xchg
outsb
push
pop
adc
fwait
es
cli
out
movsl
rcll
dec
mov
addl
push
pop
add
xor
fidivs
cmpsb
movb
pop
cmc
int3
xor
mov
out
push
iret
sbb
call
rcrl
cmp
stc
mov
out
fmulp
mov
rorl
cli
push
adc
mov
fimull
adc
push
sti
jl
xor
and
inc
aas
mov
xchg
inc
dec
xor
cmpsl
out
xchg
mov
and
add
pushl
jmp
jg
insl
cmp
mov
mov
in
mov
jge
fcmove
or
cmp
iret
xchg
addr16
xor
mov
ret
scas
mov
loop
int
cld
xor
mov
xchg
mov
push
xor
dec
adc
iret
xchg
cs
pop
pop
inc
arpl
pop
insl
dec
enter
aad
out
pop
jns
add
sbb
dec
or
inc
pop
lods
jo
rcrl
rorb
out
dec
pop
sbb
add
mov
pusha
xchg
sbb
xor
addr16
fs
mov
or
mov
dec
mov
loopne
add
loop,pt
jmp
inc
test
xor
sbb
xchg
xorl
push
mov
sbb
jle
fcomi
insb
js
shr
stos
mov
lds
outsl
gs
ret
gs
repnz
mov
sti
pop
and
es
inc
mov
addr16
xor
fsubl
cmp
xchg
cmp
mov
xchg
ljmp
mov
call
jb
mov
mov
sarb
cs
jge
out
scas
fisttps
std
mov
filds
xor
inc
pop
adc
sub
movsl
icebp
les
mov
stc
mov
xor
aad
clc
pop
inc
nop
push
in
cld
stos
push
mov
enter
inc
aas
dec
jmp
xor
xchg
mov
insl
add
xlat
insl
mov
pusha
mov
ret
xor
sbb
mov
adc
clc
inc
or
add
pop
icebp
xorl
jae
inc
sbb
inc
push
stos
test
xchg
lcall
pusha
or
mov
cwtl
cmp
scas
mov
aad
mov
xorb
pop
push
rcll
sbb
jmp
iret
out
pop
jns
out
stos
nop
rorl
lds
insb
dec
rcrb
cmp
ret
in
test
sub
dec
std
and
and
mov
adc
jns
push
gs
fcoml
nop
xchg
in
push
pop
mov
adc
xor
outsl
stos
mov
cmp
arpl
and
mov
jmp
pop
push
dec
repz
stos
mov
push
pop
je
dec
cld
mov
cmp
cmpsl
dec
iret
mov
ja
std
stos
test
dec
mulb
stc
nop
dec
xchg
pop
clc
lods
mov
mov
ljmp
cmp
jmp
stos
cmc
push
pop
xchg
pinsrw
pop
shlb
imul
popf
pop
lock
xchg
fcmovb
mov
add
data16
add
xchg
pop
mov
mov
push
popf
xchg
xchg
xchg
xlat
jle
xor
xchg
sub
xchg
scas
add
push
outsl
mov
and
lds
jae
loopne
mov
imul
jbe
jl
lea
mov
mov
push
sbbb
xchg
add
shr
pop
and
add
cmc
jno
ficoml
into
push
mov
and
sub
dec
xchg
scas
loop
jmp
adc
xchg
ljmp
xor
scas
push
test
int
pusha
scas
jno
adc
and
ljmp
cli
cmc
cltd
jo
inc
push
sbb
jo
mov
pusha
pop
or
in
jp
pushf
cmp
in
xor
push
cmpsl
mov
pop
push
aad
fmull
mov
pop
sub
out
xor
sbb
sbb
lods
aaa
lret
pop
jmp
push
loope
loopne
outsl
aaa
loop
nop
push
push
inc
data16
loopne
sbbb
xchg
or
movsb
stc
xorl
lds
adc
pop
sub
pop
xchg
jns
push
xlat
dec
xor
jle
mov
fwait
xchg
sbb
sub
cwtl
xor
jae
xor
mov
shll
in
add
mov
mov
sbb
mov
daa
mov
pop
sbb
xchg
cs
mov
les
mov
aaa
rol
jp
fcmovnbe
cltd
pop
dec
icebp
enter
test
rorb
push
inc
push
mov
fcomps
sub
test
xchg
dec
in
test
jmp
test
cmp
pop
fmuls
mov
lcall
cmp
xchg
adc
pop
add
mov
in
push
xchg
pop
sbb
pop
mov
fisttpl
xchg
mov
sbb
gs
or
lods
cmp
adc
js
lahf
push
int3
lds
and
sub
xchg
xchg
dec
add
mov
repnz
or
cli
test
fistpll
fldl
popa
aas
mov
in
xor
push
std
inc
imul
dec
push
fistps
mov
jne
push
mov
cmpsb
xor
sahf
mov
push
push
cmp
imul
dec
mov
mov
arpl
addr16
movsb
xchg
lea
mov
cli
and
add
ret
jns
mov
enter
sbb
dec
pop
sbb
add
imul
xor
mov
into
dec
jns
int
xor
daa
cmp
pop
mov
xor
popa
xlat
divb
pop
mov
hlt
inc
or
or
stc
adc
rol
pop
andb
mov
call
mov
fcompp
test
dec
cmpsb
jns
pop
icebp
sti
lcall
add
mov
mov
mov
pop
movsl
repz
pop
lods
call
loopne
popf
inc
sbb
addr16
pop
lock
ja
jnp
xor
out
cld
pop
insb
push
icebp
dec
sbb
pop
dec
inc
insl
je
adc
pop
scas
cmp
lds
outsb
lds
push
pop
out
mov
jb
jge
mov
int
es
sbb
mov
cmp
xchg
jae
jb
sub
mov
mov
mov
pop
jge
pop
add
or
sub
push
xchg
cmp
stos
dec
sbb
sbb
push
dec
loope
sbb
call
scas
mov
in
sub
inc
push
xchg
leave
sbb
mov
xchg
mov
sti
fwait
cltd
out
inc
and
std
sbb
mov
and
enter
xor
outsb
es
push
push
movsb
fisttps
or
pop
add
dec
mov
outsb
stos
and
out
scas
out
add
fwait
lahf
stos
push
dec
dec
jns
insl
add
lcall
xchg
shrl
lret
iret
fcmovne
lcall
pushf
ss
or
mov
inc
in
push
sbb
mov
lock
out
gs
insl
sub
mov
adc
daa
roll
cmpb
jp
cwtl
das
js
mov
aaa
push
add
xchg
jmp
mov
cmp
into
loop
in
insb
adc
mov
arpl
addl
add
push
lea
cmpsb
ret
adc
out
jmp
dec
cmp
xchg
pop
pop
test
fwait
add
lods
xchg
js
jno
popf
pop
out
cld
add
nop
push
fs
jg
xchg
mov
in
dec
dec
leave
ss
jle
insl
mov
or
pop
or
pop
adc
in
and
jb
loopne
pop
cmp
cltd
out
jno
rcrl
adc
arpl
std
and
cld
mov
fmuls
xor
cmp
pushf
pop
scas
div
mov
into
lcall
push
ss
lea
cmp
mov
dec
xchg
mov
xor
sbb
mov
lret
jno
loopne
inc
and
in
xlat
cmpsb
std
push
or
stc
out
popf
stos
flds
dec
ljmp
call
and
stos
xchg
xor
ljmp
loopne
imul
push
mov
add
or
mov
mov
cwtl
jnp
xor
xchg
testl
mov
mov
std
xchg
sbb
in
into
or
rcr
stos
xor
add
stos
sbbb
sub
sti
pop
sub
repz
xor
lcall
jl
jns
sbb
push
add
xor
lahf
idivb
push
dec
add
movsb
repz
stos
lret
mov
mov
sub
pop
adc
sub
aas
subl
or
cwtl
je
xchg
push
inc
and
xor
mov
ljmp
hlt
pop
ret
call
mov
and
scas
lea
shlb
sahf
sahf
popa
repnz
jmp
xchg
jle
xor
loope
and
push
frstor
jp
jecxz
fucomi
stos
ret
sbb
dec
pop
mov
rcrl
fwait
mov
or
adcb
bound
sub
adc
add
pop
adc
push
mov
fcompl
movsl
adc
mov
sub
out
loopne
or
cwtl
jnp
inc
jg
je
sbb
into
dec
jnp
fisubrs
adc
dec
lret
push
or
mov
pusha
lds
imul
cli
push
xor
cmpsb
addr16
dec
nop
mov
jae
in
test
mov
push
jl
addl
fiadds
pusha
aad
xor
or
add
faddl
sub
xchg
mov
les
sub
jl
int3
mov
add
gs
and
cmp
push
fstps
cmp
enter
inc
or
and
enter
mov
mov
rolb
pop
inc
sbb
fsubrs
cmpb
mov
cmpsb
call
cld
jp
mov
andb
xor
jne
jle
inc
pop
adcb
inc
cwtl
movsl
push
mov
or
inc
loope
sbb
pop
mov
in
sub
mov
add
imul
cmp
ds
xor
shrl
pushf
int3
jo
xchg
pop
xor
mov
in
pop
push
cmpsb
aaa
dec
xor
jp
jmp
adc
mov
dec
mov
mov
xor
dec
pop
inc
pop
lret
xor
cmc
inc
push
cmp
xor
pop
dec
xchg
scas
je
popf
out
popf
cmp
and
push
mov
jnp
add
mov
add
xorl
cli
iret
insl
popf
gs
in
mov
fsubl
push
addr16
das
jo
stos
nop
cmpsb
cmp
cmp
repnz
pop
fstpl
mov
dec
push
add
jbe
pop
or
xor
aaa
adc
stc
subl
movsl
adc
pop
mov
inc
shll
clc
repz
frstor
add
mov
ja
jno
cwtl
xorl
mov
mov
popf
pushf
mov
pusha
ljmp
je
mov
loop
movsb
add
call
pop
clc
mov
popf
add
movsl
xor
lods
jae
mov
stos
or
stc
xchg
mov
fisubrl
pop
jno
aad
mov
push
enter
insb
shr
mov
sub
shlb
inc
dec
fxch
arpl
outsl
bound
outsb
out
xchg
imul
mov
mov
or
pop
push
in
add
test
xchg
and
sbb
ret
mov
or
lahf
mov
jg
mov
rorb
push
fidivrs
xlat
and
insb
ret
dec
loop
jb
lds
jg
adc
xlat
stos
jne
iret
js
pop
jecxz
dec
into
gs
cs
sbb
adc
loop
jno
loopne
loope
jmp
pop
add
fistps
push
js
js
outsl
stos
hlt
jl
mov
fisubl
test
call
mov
les
repnz
pop
and
popa
sub
push
js
aas
xchg
aas
test
cmp
push
outsb
cmpsb
std
rorl
adc
addl
jne
xor
outsl
and
jl
or
sbb
iret
xor
scas
popf
cmp
and
dec
idiv
cld
outsl
loop
sbb
xchg
mov
inc
pop
xor
popa
cmp
hlt
mov
and
push
negl
adc
mov
pushf
mov
mov
mov
movswl
fisttpll
scas
mov
div
shl
xchg
ds
adc
aam
cmp
aas
jne
or
lret
lock
push
pop
sti
push
outsb
addb
rcrl
pop
inc
fisubl
jo
xor
jecxz
push
jne
pop
lock
push
add
orb
lods
sub
pop
or
pop
cmp
jg
ja
pop
jmp
mov
hlt
mov
push
orb
push
push
mov
add
or
lods
jmp
dec
shl
push
test
cmp
pop
das
aam
xchg
sub
mov
or
shlb
lods
sbb
ret
into
pop
in
cmp
inc
dec
xchg
lcall
or
test
xchg
xor
fdivr
adc
add
call
xchg
or
jmp
cmp
and
push
jo
into
outsb
sarb
cwtl
popf
push
mov
icebp
mov
gs
movsb
mov
sub
fisubrl
aam
gs
inc
push
adc
add
fidivrs
enter
or
mov
xchg
out
aam
shlb
pop
cmpsl
push
jb
dec
decl
jmp
gs
add
aad
mov
movsb
inc
fcoml
inc
xchg
sub
repz
int
push
lods
mov
push
rol
add
lret
jae
scas
mov
mov
daa
xchg
cmc
xchg
push
shrb
cs
insb
lock
scas
and
adc
cwtl
iret
jge
data16
inc
cli
or
and
push
inc
push
xchg
jne
mov
sub
movsl
mov
jnp
mov
cwtl
jl
push
in
icebp
dec
lock
addr16
lcall
push
add
xchg
jne
insb
arpl
mov
mov
add
dec
das
add
pop
test
daa
cmp
jmp
lea
mov
scas
sub
stos
inc
pushl
cvttps2pi
cmp
pop
sub
pop
jle
call
sbb
add
mov
xlat
mov
loopne
and
adc
rcrb
hlt
pop
insl
outsb
lcall
test
xor
jns
fisttpll
mov
or
xchg
inc
imul
adc
mov
xor
dec
aas
ret
pushf
in
xchg
sub
jmp
add
pop
dec
notb
dec
fnop
leave
mov
outsb
push
mov
test
out
outsb
das
mov
das
lahf
mov
fidivrl
push
add
fwait
jbe
mov
stos
daa
or
leave
inc
sbb
or
pusha
mov
or
pop
mov
mov
mov
dec
add
negl
xor
movsl
adc
mov
jl
enter
mov
mov
loop
xchg
icebp
cmp
dec
scas
dec
aam
aam
mov
mov
xchg
in
mov
pop
cmp
imul
jo
push
js
inc
mov
push
mov
fsubrp
fwait
xor
int3
mov
xor
arpl
fwait
mov
int
fisubl
cltd
fcmovbe
sub
mov
je
jb
lods
xlat
mov
xor
push
fpatan
std
andl
cmp
pop
push
jo
jge
into
mov
fildll
aam
es
cld
ja
cs
xlat
cltd
inc
std
lods
jae
pop
cmp
push
repz
inc
inc
pop
in
mov
jp
sub
xchg
dec
shrb
pop
std
or
lock
popa
sahf
pop
sbb
mov
pop
sbb
lock
jns
jb
aas
les
or
mov
inc
fwait
xchg
jb
popf
xor
or
add
jge
sub
rorb
pop
clc
clc
pop
hlt
sbb
dec
or
pushf
pop
sbb
pop
push
outsl
daa
xchg
xchg
jae,pt
add
mov
pusha
push
roll
sub
cmpsl
cmpb
outsb
xchg
sub
cmc
daa
push
inc
sbb
sub
mov
cmpsb
push
xor
cmpsl
push
test
cmp
mov
pop
mov
jp
out
jne
fwait
push
and
or
sbb
dec
cmpsb
xor
mov
mov
cmp
movsl
out
test
fiadds
lods
popa
fmull
mov
push
push
or
push
xchg
icebp
aaa
pop
stos
push
outsl
xor
mov
add
leave
add
enter
sub
test
movsb
mov
or
rorb
xchg
aas
loop
cmp
aad
dec
pop
pop
mov
arpl
out
pushl
mov
cmpsb
xchg
mov
test
leave
mov
int3
mov
and
xchg
mov
ja
push
push
and
push
testl
push
jbe
loope
cmp
lahf
push
icebp
push
mov
out
add
ss
fsubrs
shlb
negl
sti
fwait
add
sub
push
fisttpl
mov
push
sub
xchg
jbe
stos
stc
push
pop
jbe
mov
mov
aad
mov
pop
call
cmpsb
sbb
mov
roll
push
cli
pop
lds
flds
pushf
jle
add
sbb
jle
mov
jo
mov
add
xchg
in
dec
dec
or
out
jnp
in
fistpl
and
shrl
js
addr16
pop
lods
jecxz
mov
mov
cmp
iret
ja
mov
in
sub
adc
cmp
je
cmp
mov
sbb
cwtl
leave
pop
jns
mov
or
divb
pop
outsl
jo
js
enter
stos
lods
shlb
inc
sub
je
ja
iret
cmpsb
and
adc
sub
jnp
cmpsb
mov
push
push
lods
je
scas
inc
add
pop
mov
aas
mov
lds
mov
test
lock
scas
mov
jl
test
xchg
push
jecxz
push
in
add
xchg
mov
loop
or
icebp
or
insb
mov
xor
das
dec
sub
mov
mov
cmc
fstpt
test
sub
repz
arpl
and
loope
repz
sub
imul
test
shlb
mov
xchg
cmp
push
ss
fcomps
mov
cmpsl
lret
xchg
je
roll
into
sub
pop
lahf
sbb
and
adc
mov
ds
adc
test
mov
dec
inc
subl
sbb
out
into
push
test
sub
adc
sbb
fstp
sub
popf
xchg
xchg
pop
mov
sbb
lods
inc
shll
add
mov
mov
cmc
jbe
jp
out
xchg
mov
jle
lea
push
mov
jl
sub
jne
stos
gs
dec
ucomiss
push
mov
outsb
mov
insb
divb
or
pop
xchg
jge
shlb
addb
outsl
enter
scas
inc
notb
maxps
jb
mov
aas
lea
cmc
inc
mov
clc
jo
sti
dec
pop
aam
jecxz
sbb
call
or
mov
fs
inc
bound
cwtl
mov
mov
adc
mull
cld
dec
sub
or
mov
or
pop
inc
loope
xor
cs
cmc
in
xor
push
loop
fidivl
jl
mov
popa
test
jno
or
xchg
jecxz
sbb
dec
test
aas
pop
sbb
push
daa
fadds
scas
call
dec
sbb
lahf
in
int
rorl
push
int
xchg
jnp
dec
int
repnz
cmp
fcoms
adc
aaa
pop
jbe
mov
mov
jnp
xchg
jle
jns
sbb
cli
pop
jg
pop
je
dec
xor
imul
jg
repz
fs
push
and
mov
imul
inc
xchg
add
dec
inc
pop
mov
dec
jmp
cmp
fwait
shlb
push
popa
dec
and
in
stos
mov
movb
mov
insl
sahf
cltd
lock
imul
inc
pop
mov
bound
sti
out
pop
push
xchg
mov
out
call
dec
sbb
insl
adc
xor
jb
icebp
fcoml
push
insb
jbe
sahf
adc
pushf
xchg
xchg
cwtl
sub
nop
mov
rcrb
adc
adc
mov
fabs
mov
or
rorl
sbb
mov
pop
sub
sarl
in
mov
shrl
lods
movsl
test
cltd
mov
push
lea
in
test
add
data16
mov
mov
adc
cmp
push
add
or
mov
inc
push
sub
push
movsl
cmp
ret
mov
dec
ret
orb
ret
dec
popf
and
mov
pop
lret
repz
iret
xchg
cmp
pop
iret
sbb
mov
stos
add
or
mov
sub
fistps
mov
arpl
mov
enter
icebp
mull
in
popf
lods
lcall
and
inc
sub
mov
xchg
bound
or
rep
cmp
loop
movsb
mov
dec
imul
jne
mov
jno
popa
jg
sbb
clc
push
nop
dec
and
and
stos
xor
fwait
mov
push
pusha
test
ss
jns
inc
mov
pop
idivl
add
fwait
test
pop
mov
add
ss
mov
dec
cmp
sub
shrb
pusha
lret
cs
outsb
fnsave
call
mov
test
jecxz
pop
mov
test
int
std
push
addr16
cwtl
jmp
lret
inc
xchg
in
outsl
daa
in
mov
mov
and
push
pop
mov
fs
imul
daa
jge
jl
sub
sbb
cmpsb
inc
xor
push
scas
push
fsubp
sbb
iret
sub
imul
sbb
call
add
call
and
jge
negb
cmc
movsl
push
fimull
aad
jb
pop
sub
bound
dec
push
and
outsl
repz
ljmp
lcall
push
mov
xchg
mov
loop
aad
fdivl
mov
bswap
in
fcmovnu
jns
shll
add
mov
cvtpi2ps
or
mov
jl
mov
cwtl
sub
dec
pop
mov
xor
dec
push
xchg
js
xchg
xor
mov
xchg
adc
mov
pop
sub
mov
jne
push
jno
and
imul
nop
or
add
sub
sub
icebp
pop
lock
ljmp
and
not
shr
daa
xchg
cld
dec
dec
outsl
cmpl
sbb
mov
insl
jno
popf
xor
xchg
jbe
xchg
jmp
orb
nop
lds
loop
xor
inc
or
lahf
cmpl
adc
inc
lods
push
pop
insb
jmp
in
daa
mov
dec
popa
dec
jo
icebp
lcall
inc
in
imul
inc
pop
mov
movsb
sti
inc
lahf
in
cmp
sbb
lret
stos
jns
sbbb
mov
jmp
rcll
hlt
ret
les
mov
jle
push
lret
sar
jmp
mov
lock
push
adc
add
cltd
jle
pop
sbb
sbb
push
push
inc
jo
xor
xchg
test
dec
lahf
adc
in
xorl
in
pop
and
add
inc
lods
repnz
orl
subb
mov
loopne
sub
ret
dec
shll
aam
add
test
adc
lcall
int3
aam
lds
das
pop
fstpl
sbb
repnz
aas
js
mov
scas
out
sbbb
push
push
ss
lret
mov
cwtl
mov
fsubl
mov
sub
ds
dec
xor
arpl
lea
add
mov
mov
xor
cwtl
mov
or
xor
cli
xchg
pop
jne
jmp
sbb
lods
add
xchg
xor
push
in
std
sub
jae
scas
mov
pop
cs
push
popl
int3
inc
lock
orl
sbb
idivl
aam
xchg
xchg
jg
xor
push
mov
inc
dec
inc
and
scas
aas
xchg
cs
mov
sbb
pop
lods
sbb
cmp
inc
cmp
inc
mov
js
jb
lcall
dec
loopne
sub
test
pop
xor
lret
or
sarb
push
call
mov
rorb
sub
lahf
pop
popf
cmc
insb
jmp
popf
xor
outsb
shll
insb
add
outsl
into
cmpsl
mov
and
fs
cld
hlt
xchg
cs
pop
lock
fwait
data16
ja
cli
test
xchg
lods
mov
xchg
pop
enter
fucompp
in
jg
dec
and
mov
mov
int
sbb
iret
repz
scas
insb
lcall
jnp
aad
dec
xchg
cld
mov
outsl
dec
scas
xchg
mov
stos
lds
fisttps
stos
arpl
lods
mov
mov
dec
out
jmp
fcmovb
dec
dec
xor
lret
lahf
jmp
js
sbb
dec
ds
imul
sub
jg
movsl
mov
pop
dec
imul
lret
cmp
shr
xor
adc
xchg
xchg
xor
push
das
push
sbb
daa
mov
lret
jg
inc
push
cmc
mov
bound
push
ficomps
frstor
call
jbe
in
loop
xchg
adc
lcall
mov
lea
xor
mov
push
bound
mov
repnz
test
addl
dec
sub
hlt
and
dec
cmc
imul
loope
or
pop
aam
fisubl
insb
mov
sbb
pop
stos
in
sub
repnz
push
imul
pop
in
push
xchg
test
aad
fisubl
movsl
mov
fdivl
jp
rcrb
fnsave
jnp
arpl
add
sub
rep
inc
and
pop
ret
leave
xor
ljmp
xchg
aaa
mov
lahf
sbb
jno
test
dec
push
repz
icebp
cmc
add
pop
push
jb
repnz
mov
add
test
jg
loop
sub
sub
lds
shl
shl
incl
add
mov
sahf
add
xor
das
cmp
in
pop
xchg
sub
mov
pop
cmpl
hlt
push
cltd
gs
mov
dec
xchg
jp
hlt
je
repnz
stc
nop
xor
jns
jns
cmp
mov
adc
mov
adc
outsl
adc
enter
push
pop
add
imul
jbe
jle
pop
mov
xchg
xor
jo
jb
inc
ds
std
fcoml
mov
or
mov
sub
xlat
xchg
inc
or
in
andl
icebp
or
ja,pn
adc
cwtl
das
pop
xor
notb
add
and
aas
mov
out
add
push
mov
fcompl
loopne
sub
test
in
inc
adc
shrb
inc
inc
mov
cmp
dec
pop
pushf
dec
mov
add
dec
and
dec
add
int
outsb
mov
fisubl
ret
xor
inc
fisubs
mov
sahf
xor
mov
adc
je
lret
adc
ret
lret
xor
ja
cmp
aaa
lcall
pop
mov
stos
sub
repnz
fwait
xor
jge
addb
into
pop
inc
push
mov
adc
lahf
xor
das
movsb
andl
iret
pop
or
push
or
sub
or
aas
xlat
sub
pop
loope
mov
out
stos
incb
or
ds
dec
out
movsl
dec
push
daa
dec
insl
add
xchg
dec
scas
cmp
mov
cmp
cwtl
sbb
cli
xchg
dec
jp
incb
push
rorl
imul
test
scas
enter
inc
xlat
movsl
lret
popa
imul
mov
inc
jge
in
lcall
out
xor
rolb
punpckhbw
lods
mov
cmp
cli
rcrl
adc
or
notb
ja
dec
sub
cli
pop
lahf
in
lret
push
or
movl
lret
lret
out
pushf
jns
sbb
outsb
push
test
lea
mov
ficoms
adc
xchg
ret
mov
jno
lcall
in
or
mov
inc
shlb
lret
xor
into
bnd
push
push
imul
sub
and
scas
mov
inc
xor
push
enter
andl
dec
lods
mov
ficoml
repnz
mov
sbb
cld
roll
es
test
rol
into
cli
dec
out
shrb
cwtl
aad
or
testl
inc
shlb
ror
sti
mov
rorb
hlt
mov
movsb
icebp
dec
xchg
xchg
jmp
inc
in
aas
xor
xchg
dec
xor
rcrb
out
loop
shr
pop
insl
mov
sbb
dec
cmp
adc
repz
push
rclb
incb
xor
mov
pushw
jle
jmp
pop
or
repz
inc
ss
dec
ret
mov
outsb
jo
in
popa
popf
inc
in
ljmp
lret
ja
mov
push
cmpsb
decb
mov
push
cmp
jecxz
mov
dec
dec
mov
movsl
mov
jno
xor
push
stos
mov
fidivs
mov
fsts
lea
loope
jno
stos
mov
jge
mov
imul
jno
push
dec
adc
fiaddl
sbb
in
ficoml
sub
into
pop
xor
outsl
js
mov
arpl
xlat
outsl
push
or
adc
xor
test
push
xor
and
loop
push
imul
fldl
cltd
std
das
inc
into
data16
negl
repnz
lret
mov
cmpsl
out
adc
adc
es
lret
adc
jo
lahf
jae
fildl
jno
jno
inc
popa
pop
rcrb
inc
or
pop
dec
xchg
dec
jnp
and
jmp
push
and
loope
cmp
scas
inc
outsb
lahf
in
in
cmp
cmc
inc
dec
lock
mov
dec
inc
adc
jo
inc
sbbb
xlat
fwait
push
inc
ret
cltd
sbb
inc
sub
dec
lods
jg
repnz
mov
pushf
xchg
lods
lock
popa
inc
adc
xchg
sub
sub
js
push
ja
test
test
cli
aad
popf
js
mov
push
loope
cmp
ss
pop
test
xor
fiadds
xchg
sahf
lcall
jns
cltd
mov
push
rol
mov
mov
fistpl
repz
and
mov
roll
inc
cltd
jg
sub
js
test
xchg
xchg
dec
loope
das
push
mov
dec
data16
loope
cltd
je
inc
inc
and
mov
mov
cld
aad
sbb
or
mov
leave
mov
pop
shlb
add
push
and
int
popf
or
test
xchg
adc
rcll
test
or
cmpsl
rcl
sar
mov
cmp
cld
cs
leave
sbb
xchg
shrb
fdivs
scas
stos
pop
in
adc
rorl
adc
fwait
adc
xor
ficompl
repz
adcb
inc
icebp
dec
test
iret
xor
out
adc
popa
jnp
repz
fsts
sbb
dec
xlat
jmp
add
xchg
es
js
call
push
xor
push
sbb
push
out
xor
rol
mov
or
imul
sub
arpl
mov
inc
or
sub
xchg
test
test
pop
loopne
and
addb
pop
cmc
mov
fimull
or
mov
jo
push
push
pop
cmpsl
mov
gs
push
sbb
cmpsl
mov
pop
xchg
lea
dec
dec
or
bound
jmp
aaa
mov
jo
add
test
fsubl
mov
jo
sbb
stos
shrl
push
in
sbb
stc
nop
xchg
movsb
push
sbb
outsl
pop
push
flds
mov
movsl
xor
dec
xchg
fisubrl
xchg
setl
dec
adc
mov
roll
push
cltd
mov
fsubr
jmp
arpl
and
stos
add
aas
add
and
dec
xlat
pop
aas
push
clc
shrl
mov
fcoml
cmp
xchg
sub
xor
loop
adc
pop
mov
adc
js
mov
push
gs
add
pop
jg
cli
mov
mov
add
iret
mov
stc
lock
mov
lea
daa
in
scas
pushl
repz
aad
cmc
dec
mov
scas
cmp
push
shrl
fidivrs
pop
mov
pop
stos
xchg
mov
cltd
rclb
nop
jnp
ret
jle
pop
sbb
pop
mov
push
mov
ffree
push
adc
mov
dec
pop
pop
mov
xor
mov
push
xor
xor
clc
or
shlb
pusha
gs
or
cmp
sbb
out
xchg
cmp
mov
and
jb
add
call
cmp
jecxz
push
aad
or
cmp
arpl
loopne
movsl
xchg
inc
int
mov
test
jmp
mov
push
test
inc
cmp
xchg
dec
add
or
ror
repz
mov
adc
enter
test
mov
lcall
ljmp
jb
jl
jo
mov
push
or
sbb
mov
das
outsb
outsl
push
dec
fimuls
lods
gs
mull
lea
dec
jg
es
mov
push
or
into
out
add
sub
or
xlat
push
xchg
testb
bound
stos
hlt
sub
cmp
fdivl
out
leave
mov
jg
insl
add
mov
adc
mov
push
sbb
arpl
nop
jo
mov
leave
popa
jmp
dec
popa
movsb
or
cmpb
int3
xor
pop
sbb
lret
inc
js
pop
es
mov
sub
ja
dec
lods
xchg
dec
out
push
pushf
insl
test
push
push
ret
xchg
stos
mov
ret
repz
inc
lahf
dec
bound
xor
mov
loopne
lods
nop
cmp
pop
fisttpll
in
and
mov
and
xor
mov
jne
dec
dec
ficoms
adc
movsb
xor
mov
xor
repnz
aam
das
jns
and
ret
test
adc
outsl
loop
jl
adc
rorl
ficomps
cmp
sbb
movsl
pop
or
sbb
add
xchg
stos
mov
xchg
jmp
loop
dec
lret
or
mov
insl
pop
or
mov
outsl
sub
jnp
test
negb
add
ja
mov
pusha
cli
jno
insb
bound
push
clc
nop
pop
ds
xchg
adc
test
cmc
sub
pushf
jae
lcall
outsb
cmpsl
loop
lods
inc
sub
push
adc
xor
inc
fcmovnbe
push
pop
sub
mull
cmp
and
aaa
lcall
push
in
adc
jg
gs
out
pop
xor
mov
add
jp
ja
xor
cmp
cmp
ret
xchg
xchg
mov
stos
repz
fstpt
lods
xchg
inc
fcmovne
int
mov
lahf
pop
icebp
enter
mov
js
add
es
repnz
jns
fcompl
dec
loop
mov
xor
imul
pop
call
mov
jbe
lods
add
xlat
dec
fistps
xchg
dec
insb
jle
pop
or
xchg
cmp
cmp
xchg
pushl
push
xchg
sbb
push
inc
pop
int
adc
movhps
leave
lods
push
adc
inc
push
cmp
stos
mov
out
lret
js
std
lahf
xchg
sub
inc
pushl
flds
jecxz
add
xor
and
je
fwait
inc
xchg
je
mov
inc
idivl
clc
cmp
dec
std
and
mov
sti
sahf
outsb
decl
jno
cmp
sbbl
lret
mov
in
jmp
pop
leave
xor
ja
mov
cmpsb
sbb
iret
lret
fwait
bound
fcoml
sti
dec
mov
and
jp
cli
mov
ja
push
les
cmp
adc
cmp
jno
pop
sbb
mov
clc
mov
push
add
sbb
add
mov
adc
scas
sub
ret
roll
enter
pop
adc
pop
add
loop
fmull
cmp
or
jbe
out
add
scas
movsb
inc
mov
and
inc
push
mov
push
or
cltd
inc
adc
mov
test
mov
ds
fs
movsl
xchg
movb
adc
scas
fisubrs
cmp
outsl
xchg
push
add
sbb
mov
shlb
xlat
in
nopl
cmp
bound
jb
adcl
or
dec
ja
mov
adc
fstpt
cmp
test
insb
dec
aas
mov
sar
add
out
int
pop
cmp
test
xchg
mov
push
lods
jecxz
pop
mov
add
mov
loop
xor
or
stos
jmp
mov
dec
xor
jg
cmc
mov
inc
xchg
addr16
xchg
push
xor
xchg
lret
jno
dec
cmpsl
imul
lcall
cwtl
das
jmp
fdiv
mov
mov
insl
nop
pop
jo
xchg
mov
mov
jge
mov
setnp
or
xchg
imul
sbb
dec
loopne
mov
push
or
pushf
les
cmp
lods
mov
push
inc
jg
inc
std
dec
mov
jo
nop
jmp
push
gs
jnp
sbb
fbld
stos
in
dec
ret
dec
shl
push
leave
mov
rclb
int3
push
jne
jns,pn
inc
popf
out
dec
jecxz
push
push
or
mov
mov
idivb
pop
sub
sub
lret
cld
dec
jno
popf
test
and
mov
ret
enter
jecxz
out
sub
loopne
insl
ret
xor
xor
push
fwait
or
cwtl
add
aad
enter
cmpsb
lock
cld
cmp
xchg
pop
aas
mov
pop
sbb
mov
jmp
mov
das
jmp
shl
mov
push
sbb
xor
cmc
xchg
inc
orb
push
sbb
test
mov
dec
clc
push
shl
mov
mov
pop
in
mov
inc
lcall
mov
jmp
xor
xor
shr
mov
sub
shll
mov
dec
mov
es
fcom
rol
popa
jl
mov
mov
pop
dec
gs
cmp
dec
push
iret
subb
add
pop
notb
cmpsb
dec
iret
lcall
and
or
push
movsb
outsb
inc
dec
xchg
jle
loop
bound
jns
aaa
insb
subb
sahf
or
fcmovnu
sub
mov
test
mov
inc
fidivrl
xchg
lcall
and
out
and
shrl
je
ret
repz
ret
jb
push
xlat
repz
cmpb
sbb
mov
xchg
add
dec
leave
xor
sub
jg
and
push
mov
xor
xor
rorl
hlt
push
iret
stc
and
cmp
insl
xlat
outsb
lahf
xchg
lock
xorl
imull
push
mov
dec
sarl
jmp
clc
int
mov
iret
mov
sbb
test
lahf
adc
jmp
inc
mov
mov
rcrl
cmpl
mov
jp
adc
cwtl
xchg
mov
loopne
push
cmpsl
xchg
inc
push
push
das
xor
push
push
adc
nop
nop
imulb
outsl
scas
out
mov
mov
les
imul
movsb
mov
sbb
mov
xchg
sti
pop
leave
adc
or
ljmp
xor
fnsave
push
mov
pop
out
pop
call
nop
fnstsw
and
adc
gs
ficoms
jno
fiaddl
cli
jbe
cwtl
cmc
add
fiaddl
xor
push
sub
pusha
into
jae
add
and
xlat
push
sub
fdivl
cmp
in
adc
dec
add
loop
icebp
adc
jns
ret
jne
dec
jne
mov
loope
pop
loop
jge
dec
mov
dec
divl
cmp
push
inc
imul
dec
pop
push
push
sahf
push
aam
out
and
fsubs
dec
scas
and
adc
inc
arpl
pushf
out
les
mov
xor
mov
mov
add
mov
cli
adc
sbb
pushl
mov
std
xchg
aad
das
fwait
add
fdivrl
scas
xor
or
scas
fnsave
push
inc
lret
xchg
add
out
sbbl
arpl
xlat
mov
cltd
mov
adc
pop
inc
iret
add
out
xchg
das
jb
add
inc
push
popf
dec
ret
mov
mov
fisttpll
ret
pop
mov
mov
xor
cmpb
mov
lea
jge
cmp
jge
dec
addr16
pop
fstps
and
pop
inc
push
fwait
lret
lret
inc
mov
adc
arpl
cmpsl
nop
push
aas
ds
sbb
subb
std
mov
daa
push
int3
and
and
pop
adc
js
fwait
in
mov
or
sub
dec
aad
iret
pop
mov
call
or
outsb
rol
rorb
fidivs
pop
ret
push
mov
push
gs
add
shrb
lds
sbb
lea
or
in
mov
push
push
rcrl
sub
lea
adc
ss
ds
xchg
popa
in
cld
test
sbb
jge
mov
in
and
ljmp
pop
in
or
ljmp
sti
xor
mov
sbb
cmp
mov
adc
leave
pop
call
gs
in
mov
or
pop
cmpsb
fstps
mov
and
iret
shlb
dec
sbb
dec
ss
test
lcall
or
inc
push
xchg
xor
loope
push
xlat
xchg
adc
push
icebp
insb
clc
lds
xchg
push
cmpsl
dec
pop
sahf
fucom
xchg
or
push
or
inc
xchg
sub
mov
mov
into
enter
jge
pop
loopne
dec
cli
add
mov
adc
mov
fs
push
test
inc
popf
pop
jmp
inc
fcomi
sbb
mov
ja
or
fnstenv
jae
mov
ja
ja
int3
and
stos
fisubrl
movsb
cmpsl
mov
lds
pop
push
xchg
dec
push
stos
adc
inc
sbb
daa
sbb
mov
test
in
adc
int
insl
shll
subl
loope
push
fstpl
cmp
int
or
mov
pop
mov
fidivrl
and
ljmp
sarb
popf
outsl
dec
pop
rcrb
or
inc
in
sbb
adc
testl
insb
roll
adc
mov
rcll
sahf
xor
sbb
aaa
cs
sub
push
sub
rol
fbstp
add
jo
xchg
fnstcw
ficomps
fdivrl
and
insb
cmp
push
ret
aad
test
sbb
adc
push
aaa
popf
jecxz
jmp
popf
or
cld
lcall
push
or
sti
sahf
pushf
addr16
sbb
lret
andl
sub
pop
pop
adc
sub
pop
loope
insl
repnz
mov
hlt
or
mov
test
test
and
xorl
mov
int3
and
fnstcw
dec
mov
into
mov
inc
or
push
jno
jle
push
mov
or
js
test
cltd
mov
sub
data16
sub
out
icebp
cli
xchg
or
outsl
cmpl
and
mov
sub
scas
inc
aam
push
ffree
movsl
pushf
xor
clc
adcb
and
ja
inc
pop
xchg
jmp
es
xlat
outsb
sarl
push
and
sub
in
lret
pushf
cmp
and
dec
sahf
mov
das
sub
jge
pop
mov
pop
outsl
sub
movsb
js
hlt
sub
and
out
dec
sahf
xchg
sub
sbb
mov
mov
xchg
mov
je
push
and
loope
mov
push
cmp
and
loop
vmovddup
arpl
mov
imul
ds
insl
mov
mov
xchg
out
cmp
mov
jg
int3
mov
xchg
xor
add
cwtl
inc
sub
pop
fwait
pop
xchg
or
cmp
sahf
ds
movsb
inc
arpl
push
inc
fincstp
push
xchg
inc
aas
notl
push
jle
dec
movsb
shll
les
cwtl
mov
insb
je
les
adc
mov
jge
pusha
xchg
sbb
and
outsb
sbb
cmpsb
cmp
cmp
or
sarl
enter
xor
test
rcrb
dec
push
mov
frndint
imul
mov
adc
fs
xchg
add
inc
out
xchg
incb
imul
fcompl
mov
fldenv
sbbl
xlat
xchg
dec
daa
pop
cltd
ja
xlat
movsb
or
rolb
cmpsb
hlt
push
push
push
lods
mov
push
les
das
push
cmpsl
ret
dec
subb
imul
addb
or
adc
pushl
nop
pop
rcrb
stc
mov
xchg
ja
adc
mov
sbb
dec
rcll
push
jnp
fwait
jnp
mov
scas
bound
pop
xchg
xchg
test
cmpps
loope
mov
fcmovnbe
addr16
push
mov
mov
push
iret
fwait
in
or
mov
mov
adc
push
les
ss
and
negb
mov
pop
sub
cltd
mov
push
jmp
push
test
or
jb
sub
adc
push
inc
mov
neg
fadd
test
data16
ret
sbb
fs
adc
or
mov
pop
mov
dec
repnz
add
pop
es
fisubrs
sbb
mov
loop
dec
pop
sub
and
es
cmp
inc
xor
je
ret
sbb
gs
inc
or
ds
push
stc
sbb
out
mov
cld
add
jmp
push
sbb
iret
and
in
dec
idivl
sahf
jno
loop
mov
fcmovbe
sub
jbe
rolb
test
cli
lcall
mov
mov
fdivp
jnp
push
gs
mov
in
test
out
sub
inc
xlat
test
sar
scas
mov
lahf
sahf
jns
insb
ret
nop
fwait
add
pop
sbb
pop
mov
iret
sub
loop
call
push
jno
add
cld
pop
ljmp
lret
shll
aad
jg
mov
or
aas
shlb
adc
shll
stc
nop
dec
cwtl
push
xchg
mov
mov
popa
push
inc
cmp
arpl
sbb
xchg
enter
sahf
ds
adc
cmp
adc
sub
imul
cmpsl
imul
cmc
adc
out
inc
test
lret
dec
loop
jno
lods
stos
xor
bound
mov
inc
and
outsl
ds
into
mov
sub
loopne
xor
sahf
popf
jge
iret
mov
cld
xchg
push
xchg
mov
leave
or
out
xchg
mov
sub
add
pop
ficoms
loopne
mov
push
scas
jbe
fadds
stos
inc
add
xor
js
fucomp
icebp
insb
fnstenv
mov
or
leave
fsts
jmp
mov
das
and
jno
mov
mov
test
xor
sub
ljmp
mov
mov
fucomip
lret
pop
imul
inc
inc
sbb
pop
fcomps
fdivrl
xchg
push
xchg
dec
pop
add
cmp
and
and
int3
or
mov
bound
imull
push
shll
daa
lock
cmp
cmp
mov
cmp
imull
add
inc
add
mov
sbb
ret
dec
out
push
inc
push
pop
cmpsb
shr
mov
icebp
and
inc
loop
xchg
add
xor
outsl
rclb
pop
inc
cmpsl
pop
ljmp
push
mov
mov
add
jge
jge
dec
outsl
cmc
in
ja
dec
int
jne
scas
sbbb
cmp
mov
ds
add
mov
fdivl
cltd
mov
mov
rol
data16
jbe
nop
fisubrl
hlt
mov
cmp
xor
test
pop
adc
xor
lcall
rclb
cltd
xor
mov
lods
negb
fistpll
pop
mov
mov
fcoml
mov
jnp
or
pushf
add
into
pop
leave
loope
fmul
and
add
push
lods
push
cld
data16
mov
lock
subb
subl
icebp
test
sbb
add
xor
add
jo
inc
shrl
and
and
mov
js
in
fs
jbe
push
xchg
cmpsb
dec
jne
lret
cmp
pop
mov
fisubl
aaa
cmp
inc
and
mov
sub
mov
or
sbbl
cwtl
pop
movsl
cwtl
or
loope
push
or
andb
popf
bound
lods
jo
cmc
jg
in
insb
mov
icebp
cs
scas
fcompl
cmp
push
std
xor
nop
jmp
or
push
push
movsl
inc
push
rclb
or
outsl
lds
insb
mov
stos
jo
push
rcl
jge
jno
add
or
inc
rolb
sarb
sbb
pop
cmp
jecxz
sbb
mov
das
sub
das
icebp
dec
repnz
ja
xor
sbbl
jbe
or
mov
iret
call
orl
mov
aam
mov
sti
loopne
or
xor
or
shrl
sub
pop
jb
divb
jmp
mov
push
fcmovu
movsb
into
scas
mov
cmp
mov
lahf
bound
stc
dec
enter
roll
jge
inc
adc
adc
fidivl
arpl
add
mov
xchg
addb
pop
cmp
pop
pusha
lahf
popa
aad
mov
aas
xchg
sbb
adc
xchg
sbb
in
mov
sub
negl
pop
cmp
inc
xor
lea
mov
bound
test
mov
mov
lods
outsl
lahf
mov
je
incb
sbb
idivl
jg
les
sbb
mov
dec
test
mov
rcl
into
fldt
and
cli
mov
mov
push
lods
lods
pop
js
loop
imul
popf
pop
push
sbb
test
adc
mov
xchg
push
ss
dec
pop
jae
stos
mov
mov
shll
arpl
sbb
nop
mov
jo
xor
sub
cmp
xor
pop
cmp
mov
shrb
or
adc
mov
shlb
mov
pavgb
push
dec
jb
jecxz
mov
int3
arpl
xchg
scas
lret
mov
mov
pop
add
pop
popa
lahf
push
fs
pop
xchg
pop
cmc
insl
fwait
xor
shrl
jno
repnz
and
idivl
xchg
das
movb
and
inc
xchg
push
iret
mov
test
jns
xor
fdivrs
das
or
into
mov
es
pop
push
cli
subl
je
or
adc
inc
into
imul
adc
clc
lahf
xor
mov
xchg
dec
loope
and
jns
cmp
and
sti
mov
mov
lods
lods
or
sbb
xchg
int3
test
xchg
sbb
sahf
xor
and
iret
jecxz
in
xor
leave
pop
mov
mov
repnz
add
push
in
xchg
sub
pop
stos
jmp
aas
mov
pop
cmp
lret
sbb
add
sbb
pop
inc
cmp
jg,pt
sub
adc
je
ret
sbb
stc
repz
mov
inc
movhlps
xor
popf
idivb
js
test
cmp
ds
fidivrs
mov
sbb
xor
pop
cmc
aas
sbb
test
dec
xor
stos
jge
and
shll
mov
ljmp
fmull
sub
call
push
cld
jecxz
into
adc
and
fnsave
adcl
add
insl
push
sbb
add
jp
dec
out
sub
pusha
aam
cltd
mov
rcr
add
gs
fistpll
int
sbb
hlt
les
loopne
negl
in
adc
cmpsb
ja
loop
into
or
xacquire
inc
push
xchg
clc
cmp
sbb
into
fsub
fs
xor
fisubl
roll
adc
das
roll
or
subl
add
aas
shl
cli
mov
sub
pop
repnz
xchg
dec
and
jno
xor
pop
icebp
pop
rep
test
shrb
sub
lock
push
inc
push
cmpsb
xor
aad
jne
out
cmc
pop
cmp
push
add
xor
in
dec
enter
cmp
pop
sub
sub
daa
dec
bnd
pop
push
or
js
mov
call
ds
stos
and
dec
gs
xchg
push
imul
enter
push
inc
mov
xchg
dec
dec
mov
jge
mov
jge
add
cmp
or
adc
ret
dec
mov
or
mov
sub
sbb
call
lea
cmpsb
jge
adc
out
xchg
cmp
dec
call
cmp
pop
jno
imul
and
aas
movsb
inc
mov
sbb
lcall
in
mov
cld
mov
fists
or
or
push
aad
loope
dec
out
xchg
fwait
xchg
jmp
or
aam
fstpt
xor
scas
mov
pop
or
ljmp
daa
test
pop
mov
sbb
scas
mov
imul
dec
faddp
mov
in
aad
popf
popa
adc
xchg
push
pop
and
in
cmp
jbe
fisubrl
jecxz
leave
les
imul
sbb
ret
mov
repz
add
lods
and
fnstsw
add
arpl
les
cmp
iret
fistl
das
inc
push
rcrb
lods
jp
xor
call
xorl
repz
sti
cmp
jecxz
xor
call
call
dec
push
jmp
pop
jecxz
and
xchg
rorb
imul
repnz
js
add
mov
and
or
mov
inc
jnp
sub
out
add
lds
or
mov
movsl
popf
and
test
repnz
sahf
mov
shlb
cmp
ret
loop
xor
mov
cmc
jb
outsl
pop
or
lds
pop
mov
fucom
adc
das
lock
or
mov
pop
jns
lock
xlat
inc
mov
jge
shrb
pop
jnp
in
add
das
rcl
cmc
mov
adc
cmp
idivb
pop
dec
fdivr
xchg
test
negb
lea
and
lahf
or
adcb
incl
mov
cld
jb
inc
sub
sub
mov
sbb
rcr
out
xchg
popf
mov
outsl
or
push
sub
outsl
jmp
sub
push
ja
test
inc
pop
and
adc
ss
clc
or
mov
push
jp
leave
imul
test
gs
aas
lea
inc
fsubrl
test
inc
sub
test
sub
insb
loopne
jne
rcr
outsl
addb
jl
out
add
mov
dec
ret
lds
fildll
or
sub
addr16
pop
cmp
xchg
and
mov
pop
or
jno
xchg
xchg
clc
xchg
xor
pop
or
pop
add
ret
mov
push
cmpsb
mov
data16
cwtl
out
mov
jb
and
in
in
push
hlt
lcall
cmp
ret
scas
xchg
sti
dec
dec
dec
clc
int
cmp
pop
imul
xor
cmpsb
addr16
loop
or
lock
and
test
adcb
pop
fwait
cmp
jnp
push
popf
cmp
js
jg
divps
push
negl
outsl
outsl
rolb
ret
sbb
pop
outsl
rcll
cmpsl
fiaddl
les
adc
adc
mov
cld
and
hlt
sbb
aas
xchg
ds
in
and
pop
cmc
dec
jp
mov
hlt
lods
mov
ja
jo
call
cld
add
xor
and
lea
inc
mov
sahf
decl
rcll
adc
xchg
addb
mov
fs
cli
xchg
int3
hlt
out
add
dec
pushf
mov
pop
ljmp
int3
xor
addr16
or
out
cmp
or
xor
jecxz
mov
pop
shlb
idiv
lcall
aam
push
hlt
cmpsl
stos
shrl
adc
mov
addr16
jnp
iret
fsubrl
shll
movsb
pop
loopne
xchg
jecxz
inc
xchg
mov
adc
xor
xchg
ljmp
and
fwait
sti
push
cwtl
shlb
push
jmp
outsb
push
loopne
je
cmp
addr16
jnp
pop
ret
jae
sbb
mov
mov
mov
and
add
fisttpl
or
addr16
call
push
nop
not
decb
lds
out
in
adc
pop
add
sbb
jae
push
mov
into
sub
jb
leave
pop
mov
pop
mov
jge
xor
sbb
mov
push
xchg
mov
jle
mov
es
cmp
iret
xor
sub
loope
add
sbb
fdivrl
xchg
repz
inc
fs
repz
scas
inc
addr16
sbb
xchg
je
mov
jg
test
sub
push
subl
mov
dec
dec
pusha
sub
fsubrp
adc
ret
xor
sub
stc
sahf
shl
cmc
aam
call
pop
enter
test
in
jl
sahf
loope
dec
filds
jmp
lds
or
push
xor
cmp
mov
mov
cmp
adc
jae
sub
bound
arpl
out
pop
ret
mov
mov
xchg
xchg
rcrb
in
jmp
xchg
mov
push
and
push
enter
pushf
sub
mov
btc
add
push
fwait
push
jno
jnp
out
daa
stos
mov
fldl
xchg
push
cmpsb
std
add
adc
sub
loopne
cmp
pop
cmc
jl
stos
es
sbb
xchg
and
leave
cmp
shll
pop
sub
dec
inc
add
inc
cwtl
xor
jns
adc
loopne
push
or
dec
and
test
mov
es
xchg
loope
or
adc
lods
loop
xlat
xlat
inc
aad
inc
movsl
data16
lock
sub
lods
ja
pop
arpl
test
rcrl
clc
addl
inc
in
aam
adc
jno
xchg
addr16
push
mov
mov
iret
aad
xor
mov
mov
inc
dec
in
into
jns
jbe
sub
cmp
push
mull
pushf
push
in
int
and
popa
pop
ret
dec
sqrtps
loope
pop
loope
call
ret
insb
mov
xor
flds
mov
leave
pusha
xchg
xorb
lods
movb
sbb
dec
test
cli
add
mov
cmp
test
inc
pop
and
mov
out
lock
cmp
jg
and
xor
push
stos
sbb
sti
and
jb
dec
enter
lds
outsb
js
xchg
mov
mov
fcompl
pop
stc
mov
fs
lods
mov
push
xchg
mov
or
cmp
je
ljmp
inc
sbb
test
jp
xchg
sti
fucomp
sub
in
insl
fsubrs
inc
hlt
pop
scas
sub
jl
int3
dec
lahf
nop
mov
movsb
cmp
imul
sbb
dec
inc
out
sahf
xchg
test
ljmp
mov
mov
jmp
out
nop
ljmp
dec
movsb
ja
jmp
dec
pop
sti
in
sub
movsl
cmpsl
dec
aad
mov
jle
and
add
inc
jbe
les
in
mov
jecxz
imul
pop
test
cmc
xchg
dec
cmpsl
pop
mov
gs
fists
bnd
lock
popa
push
cli
ss
cmp
int
repnz
add
cld
popa
adc
out
cmpsb
in
pop
loop
and
mov
cmp
repz
inc
ficoml
imul
jbe
call
sti
pop
test
ljmp
dec
or
dec
adc
mov
fs
pop
imul
mov
pop
scas
imul
pop
pop
stos
icebp
cmp
sbb
ret
arpl
loop
rclb
out
inc
sahf
pop
xor
ss
std
sub
jle
dec
jl
dec
mov
sarl
mov
aaa
lahf
movsb
push
ss
add
inc
dec
mov
ret
jnp
push
sarl
ficomps
cwtl
pushaw
dec
aam
jle
adc
sarb
add
push
mov
adc
shr
push
lcall
inc
dec
loopne
add
lods
into
mov
lret
jb
js
mov
adc
pop
lock
xor
add
add
add
or
test
adc
mov
xor
in
add
and
push
mov
mov
aaa
out
outsl
cmc
insb
iret
cmp
mov
movsl
sub
pop
fdivl
test
cmp
fs
lods
mov
cmp
add
ret
icebp
call
cmp
dec
sbb
jmp
add
cmc
mov
mov
xchg
jl
test
or
or
jbe
pop
test
push
stos
cli
push
and
popa
leave
pop
xchg
ja
or
hlt
pop
pushf
arpl
sub
fildl
daa
sbb
lods
ltr
ret
cmpsl
or
lret
jae
mov
jo
aad
inc
fsubr
inc
sbb
inc
xchg
and
jo
sbb
cli
gs
sub
add
xchg
fildl
and
cmp
mov
and
push
jbe
or
inc
es
out
aas
push
cmp
xor
test
xchg
inc
sbb
dec
mov
inc
xchg
rolb
xor
shl
jge
mov
in
jo
aaa
add
push
sahf
lcall
in
outsb
jmp
aaa
mov
arpl
fildl
mov
or
aam
orb
out
sub
cmp
mov
fistl
cwtl
stc
sar
lods
pop
aad
cli
pop
leave
and
int3
clc
dec
jns
cltd
enter
mov
mov
jl
pop
adc
jne
mov
xchg
inc
mov
nop
inc
or
adc
dec
or
and
jbe
cs
cmpsb
or
xor
cmp
mov
mov
jae
or
lods
shlb
sub
int3
testb
icebp
mov
jo
ret
pop
dec
mov
fcmovbe
sbb
or
sbb
es
sbbl
mov
mov
fidivrl
fstl
add
cld
outsl
jns
mov
pop
mov
or
rcrl
js
mov
stos
cli
and
ret
hlt
sarb
lea
hlt
sbb
sbb
aad
loopne
mov
xor
test
aam
xchg
repz
lods
xchg
add
into
push
ss
and
xchg
mov
div
jge
sbb
mov
jne
ret
enter
jns
mov
push
jns
and
sub
repnz
icebp
popa
into
and
int
inc
bound
sbb
or
mov
push
adc
mov
pusha
xor
jns
int
cmpsb
sub
inc
call
xor
outsl
lea
dec
add
xor
mov
push
mov
inc
pop
mov
leave
mov
test
sbb
ja
inc
fidivs
pop
movsb
dec
dec
in
jecxz
test
dec
nop
jge
movsl
mov
loop
add
inc
adc
int
and
xchg
aaa
lods
push
movw
pop
push
scas
sbb
ljmp
or
in
mov
mov
cmp
rcrl
pop
pop
cwtl
test
mov
jmp
dec
sub
lock
ss
push
jne
sub
fidivrl
push
xor
sub
mov
fnsave
or
push
pop
dec
pop
mov
repz
mov
jno
xchg
mov
outsb
adc
loopne
mov
neg
and
daa
dec
cmc
xor
xor
cli
icebp
sub
mov
pop
repnz
pop
jne
sbb
movsl
push
sub
push
mov
cltd
pusha
push
mov
test
add
fstl
es
into
cltd
pop
jge
add
push
movsb
outsl
sbb
inc
sbb
je
mov
or
lea
imul
mov
mov
jle
idivl
dec
mov
in
addr16
jbe
mov
ret
sbb
cmp
imul
lods
and
or
push
sub
ret
xor
mov
lcall
scas
mov
popf
jg
nopl
loop
lock
out
push
mov
cmp
mov
test
sub
mov
mov
stos
repz
jns
hlt
mov
push
mov
imul
cmp
sbb
mov
scas
data16
dec
inc
mov
sti
pushf
cmp
jecxz
scas
cltd
jmp
mov
and
iret
negl
jbe
out
and
jae
inc
in
cwtl
pop
in
sbb
nop
xchg
test
shl
out
add
lods
add
jae
mov
push
das
cmp
mov
jb
leave
cmc
mov
xor
cmp
mov
adc
jl
adc
dec
jae
icebp
xor
jecxz
popf
cmpsl
sbb
lds
les
lock
orl
and
jo
cmp
iret
iret
push
fcoms
sahf
or
mov
negb
xchg
mov
adc
mov
mov
test
arpl
iret
xor
mov
sarl
adc
out
pushf
pop
je
fdiv
xor
insb
and
dec
stos
push
push
xlat
shll
xor
mov
push
push
mov
int3
pop
jo
movsb
stos
push
cltd
cmp
cmp
or
sub
mov
lods
ljmp
cmp
movsb
push
lods
aaa
cmp
or
ljmp
sbb
or
dec
loopne
movsb
jge
scas
shlb
mov
scas
cmp
fs
insl
pop
inc
popf
das
push
addr16
movsl
fildl
push
adc
add
xor
pop
and
loopne
hlt
inc
sub
sbb
jp
mov
cmpsl
cld
adc
jbe
add
sahf
dec
or
fidivs
ret
outsl
enter
jbe
mov
dec
pop
mov
jg
mov
subb
fldenv
dec
ds
fbld
gs
and
add
fidivl
mov
jg
mov
addr16
je
xchg
dec
adc
subps
jb
sub
negl
xchg
mov
dec
cmpsl
cmp
lcall
cmpsb
lcall
push
out
js
push
push
adc
neg
xchg
rcrb
cmp
jno
and
pop
xchg
push
lahf
inc
jecxz
data16
mov
in
loop
mov
loopne
ss
sbb
je
dec
add
sbb
ret
in
adc
push
lret
subb
pop
icebp
xchg
daa
inc
test
jb
xchg
bound
cltd
mov
push
in
xor
xchg
xchg
xchg
enter
mov
sbb
sbb
out
dec
xchg
loopne
mov
mov
daa
cli
sti
xchg
andl
add
rcrb
xor
das
imul
xor
push
call
lock
adc
jecxz
cmp
add
loope
push
aas
xchg
jg
enter
pop
rcrl
xor
jo
or
mov
clc
or
add
stos
scas
fists
int
or
adc
sub
xchg
mov
add
lcall
sub
icebp
movsl
lea
dec
pop
repnz
js
mull
ret
xchg
fs
lret
test
cmpb
mov
adc
xchg
inc
push
hlt
pop
sub
cli
inc
ljmp
test
inc
mov
add
in
stos
repnz
inc
call
fxtract
cmp
mov
mov
cmp
scas
mov
cmp
xor
jp
pop
ja
sti
cmpsb
sbb
rcrb
xor
xor
imul
add
dec
mov
lret
out
mov
nop
in
mov
lcall
jae
sub
mov
sbb
js
outsb
loop
mov
pop
mov
out
adc
adcb
mov
sbb
mov
jnp
scas
test
imul
cmp
loope
mov
test
ret
in
xchg
call
aad
negl
inc
mov
push
shlb
loop
jae
dec
pop
insb
pop
mov
mov
jo
les
es
and
mov
aaa
imul
push
cmp
stos
push
pop
addr16
mov
cmp
roll
adc
shr
dec
icebp
sbb
imul
jb
aas
sarl
fcompl
pop
xchg
sub
cmp
mov
iret
fsubrs
js
xchg
xor
push
scas
daa
dec
sub
and
or
test
dec
dec
loop
lret
js
cpuid
outsl
mov
std
gs
sub
sub
daa
push
in
jnp
add
test
test
add
test
pop
test
mov
loop
addr16
iret
movl
aad
or
mov
inc
mov
bound
jne
scas
and
cmp
sahf
mov
pop
push
fs
or
out
xor
out
push
mov
testb
popa
shrb
inc
cmpb
mov
push
out
adc
xchg
xchg
iret
outsb
std
jecxz
or
push
mov
push
ret
adc
mov
shl
sbb
sub
sub
fs
xor
mov
adc
dec
repz
fldcw
cs
iret
dec
xor
mov
in
subps
fmull
mov
test
inc
mov
adc
push
xchg
jo
jmp
add
mov
test
pop
pop
outsl
nop
pop
dec
enter
daa
and
xchg
jg
adc
push
stos
mov
pop
imul
jle
icebp
mov
and
outsb
mov
sbbb
jge
cld
lcall
xchg
pop
adcl
out
pop
scas
std
inc
jle,pn
jl
pushf
jne
or
sub
pop
jmp
ja
hlt
inc
xchg
ds
cwtl
ror
xor
jnp
cld
cwtl
cmp
cs
fldenv
test
mov
enter
dec
jmp
fldl
xor
cli
mov
fsts
aad
adc
lret
mov
cs
clc
or
xchg
or
ret
sub
lret
mov
mov
shr
unpcklps
xchg
in
orb
inc
adc
jo
shll
xchg
lods
inc
add
lret
out
inc
dec
stos
xchg
pop
rcrl
scas
pop
out
mov
pop
sub
lret
test
sbb
dec
and
lods
ss
sbbb
jecxz
jl
enter
movhlps
shrl
data16
aaa
rcll
push
adc
or
dec
sub
mov
int
scas
stos
in
xor
pop
dec
dec
push
jmp
sbb
stos
rolb
imul
repz
sbb
mov
mov
pop
fs
xor
xor
jbe
ds
cmp
bound
jg
and
inc
or
movsb
mov
shr
int
in
mov
shll
sbb
sub
xchg
or
xchg
lods
adc
aam
push
cmp
pop
push
add
xchg
push
lods
fnstenv
push
jl
pop
jns
xor
mov
xchg
pusha
ds
cmp
bound
call
push
les
sarb
and
cmp
mov
inc
fcoml
lret
cmp
jne
faddl
nop
sub
or
sub
lret
ds
mov
cli
jne
cmp
stos
popf
dec
leavew
cltd
popf
test
sub
sbb
or
aas
test
xor
repnz
pop
lcall
lods
pushf
mov
sbb
sub
pop
ljmp
adc
mov
pop
jl
sbb
add
mov
loop
push
xchg
push
jge
insl
test
adcb
xchg
hlt
incl
xchg
insb
xor
mov
inc
ss
pop
push
lea
stos
sbb
hlt
inc
push
xchg
cmc
sbb
and
inc
es
orb
dec
int
inc
je
bound
outsl
pushf
push
push
jecxz
pusha
cwtl
and
out
popf
adc
mov
mov
lret
lock
nop
lods
xor
cmp
add
stos
lret
mov
test
lea
imul
addr16
pop
loop
pop
push
mov
add
add
mov
adc
test
or
lret
test
or
in
xchg
dec
mov
mov
sub
jns
ja
push
or
cld
adc
fwait
push
out
shlb
jae,pt
cmpsl
ret
mov
mov
ds
xchg
dec
rcr
fcoms
scas
test
scas
dec
scas
in
pop
es
ja
dec
mov
je
inc
dec
fstps
jecxz
pop
loopne
adc
jno
xor
test
push
sub
cmp
push
lds
adc
mov
faddl
sbb
orl
cmc
sbb
or
adc
jmp
repz
mov
push
imull
dec
inc
lods
fs
test
arpl
test
cli
test
or
push
inc
adc
and
lea
mov
push
pop
xor
jbe
and
push
jecxz
lods
sbb
push
cmp
pop
cmp
mov
jge
inc
std
adc
cld
ljmp
inc
xchg
jle
sub
loopne
xchg
test
rolb
insb
daa
lcall
and
mov
jmp
jns
loop
nop
std
xor
rorb
inc
sahf
or
fidivrs
fbstp
cmc
mov
outsb
stc
pop
xlat
jae
aad
dec
mov
cli
test
mov
int3
xor
cmp
out
push
int3
enter
push
into
enter
dec
adc
adcb
xchg
stos
or
push
cld
jle
into
fdivl
jg
jmp
hlt
add
rcll
fwait
push
fs
xor
das
pop
in
imul
iret
add
push
nop
sub
jp
sbb
xchg
xchg
sbbl
push
mov
add
and
jo
daa
icebp
mov
cmpsl
lods
addr16
jo
jnp
in
pop
xor
or
mov
mul
xor
ljmp
pop
sbb
repz
subl
and
mov
mov
cmpl
inc
ror
pop
notb
cmpsb
cld
stc
popa
xchg
adc
stc
mov
popf
fwait
mov
jg
subb
pop
xor
adc
or
mov
cld
xchg
fbstp
lret
movd
mov
dec
jbe
cwtl
nop
ljmp
inc
mov
or
dec
jp
scas
lods
inc
js
in
fdivs
mull
les
sub
push
mov
lock
cli
pop
cmpsb
in
test
push
std
pop
outsb
sbb
pop
je
jnp
pop
notw
add
or
or
mov
mov
aad
sub
xlat
scas
add
sub
mov
mov
and
jge
xchg
sub
lret
dec
cmpb
pop
into
mov
dec
aaa
dec
and
in
inc
push
pop
in
xchg
pop
fbstp
adc
sub
mov
mov
xchg
std
push
adc
inc
hlt
mov
imul
push
mov
int3
fbstp
int3
out
sti
inc
and
enter
push
inc
mov
orl
out
and
test
add
scas
js
push
inc
shll
fisubl
in
popa
sub
dec
inc
sahf
add
inc
fcmovnu
pop
push
in
pop
aaa
cmp
push
sahf
cmpsl
pop
jmp
add
push
lret
pop
sbb
in
ljmp
pushf
cmc
jo
xorl
xchg
test
mov
push
lods
int
fnsave
pop
mov
add
and
das
cmp
insb
icebp
jecxz
and
jns
loop
jle
dec
pusha
sub
mov
je
xor
int3
lret
bound
or
and
dec
out
lea
cmp
idiv
movsl
stos
inc
sbbl
mov
xchg
jb
pop
scas
mov
inc
loopne
ss
imul
stos
insl
xor
jno
fnstenv
xchg
and
mov
dec
out
add
pop
lcall
into
cltd
insb
add
mov
sub
std
inc
test
inc
cmpsb
jp
ficoms
jno
cld
sub
gs
cmp
jo
or
icebp
xchg
mov
js
jb
sarb
xchg
add
rolb
mov
popf
cltd
lret
xchg
in
dec
lret
mov
jg
or
insb
jge
xchg
loop
movsb
divb
sub
test
push
addr16
sbb
and
ret
sbb
cld
pusha
xchg
lahf
xchg
add
iret
scas
mov
mov
fs
xchg
adc
shl
aas
orl
gs
jecxz
in
sub
push
cld
cmpsb
mov
inc
jecxz
add
mov
icebp
mov
ret
stos
inc
and
cmp
mov
pop
fstpl
insb
fcomip
xchg
sbb
inc
lcall
fbstp
cli
data16
sahf
aad
jle
pop
jne
mov
add
push
fisttpll
mov
xchg
int
lahf
and
mov
mov
pop
xchg
add
xor
and
or
add
or
into
shlb
enter
out
and
add
movsl
inc
pop
or
mov
jp
ljmp
xchg
fcmovnb
pop
mov
xor
rorb
stos
xor
mov
jbe
rorb
cmpsb
ret
pop
xchg
incl
jmp
loope
sbb
mov
push
fcoms
pop
notl
xchg
mov
shrb
mov
adc
stc
je
xchg
outsl
les
and
inc
xor
and
sub
lcall
imul
inc
sti
iret
aam
mov
int3
xorl
xchg
sbb
hlt
jge
push
add
pop
dec
and
pop
sarb
sbb
add
cmp
pop
mov
mov
mov
test
ds
cmp
call
insl
cmp
test
fisubs
inc
sbb
adc
sbb
mov
mov
pop
fisttpll
gs
addr16
je
xchg
cmp
mov
sbb
incl
sbbl
dec
add
adcl
xor
rorl
in
mov
stc
jl
into
dec
pop
gs
bound
cmp
aam
lret
cmc
imul
jne
lods
xor
fisttpll
in
cmp
jmp
stc
mov
hlt
xchg
aas
lods
cmp
xchg
mov
pop
sbb
ljmp
maskmovq
divl
ja
ret
into
mov
add
mov
emms
out
jl
xchg
shlb
out
sbb
or
mov
pusha
cmp
cmc
out
sub
jle
xor
andl
cmp
mov
cmp
xchg
scas
dec
out
divb
icebp
orb
sahf
scas
xchg
repz
cmpsl
xor
lret
repnz
adc
push
shll
cmp
insb
enter
inc
jecxz
andl
pusha
and
imul
push
mov
mov
mov
lock
mov
fidivrs
jb
jle
notl
sbb
into
cmp
cli
inc
mov
sahf
inc
mov
and
push
xchg
jle
popf
js
dec
push
xor
push
lret
cmp
jmp
mov
ljmp
adc
subb
nopl
xor
es
fnstcw
dec
dec
leave
push
imull
pop
fstpl
and
mov
imul
pop
lds
cmpsl
inc
int
sub
push
or
aaa
iret
jno
lahf
out
push
cmpsl
adc
sbb
adc
inc
data16
push
jae
int
mov
int
jns
outsl
out
mov
xlat
xchg
dec
fnstsw
sbbb
fdiv
and
loope
incb
xor
pop
sub
jne
cmp
or
dec
dec
mov
adc
xchg
xlat
test
lret
cmp
pop
rorb
pop
dec
ss
pop
pop
pop
ljmp
int
std
jg
pop
and
pusha
and
pushf
rclb
in
lea
cmp
pop
mov
je
inc
daa
mov
aad
ror
jecxz
mov
inc
ss
in
cmpl
adc
dec
popl
push
fiaddl
movsb
sbb
push
mov
shl
mov
scas
insb
pop
jg
inc
out
xor
pop
ret
add
push
int
mov
mov
imulb
pop
rorl
pusha
cmc
and
fimuls
lods
mov
adc
scas
shl
pop
sub
test
movsb
mov
fisubrl
iret
int
loopne
movsl
jecxz
push
adc
push
sahf
mov
inc
mov
stos
mov
mov
push
xchg
add
imul
loope
add
push
scas
daa
sbb
or
mov
xchg
mov
mov
ja
xor
dec
jbe
ss
loop
dec
gs
and
pop
sub
mov
mov
aad
rcr
cli
cmp
mov
jnp
ss
lahf
pop
lods
cmp
loopne
mov
sbb
inc
xchg
sub
pushf
fnsave
frstor
adc
adc
jmp
inc
pop
test
pcmpeqw
xchg
lods
frstor
fadds
int3
dec
daa
shl
adc
mov
push
mov
cs
mov
xor
jge
movsb
in
aas
and
or
jg,pn
sbb
dec
inc
rcl
aad
testb
cmpsb
ja
mov
fwait
dec
fistpl
inc
xchg
es
dec
popa
inc
push
adc
or
sar
mov
or
pop
jge
push
and
loope
inc
imul
cmp
jmp
jg
pop
fstl
mov
test
mov
cmp
push
mov
jnp
stos
repnz
into
sahf
lods
mov
movd
sti
xchg
push
and
scas
in
sub
mov
and
lahf
jns
enter
cmp
call
xor
xchg
xor
jp
ret
xor
fs
orl
or
xchg
pop
negb
pop
inc
test
xchg
dec
leave
mov
scas
adc
mov
test
outsb
jl
loope
mov
cli
cltd
clc
xor
mov
data16
adc
or
jb
push
dec
loope
fdivr
adc
sub
sbb
ds
in
pushf
mov
loop
inc
lcall
stos
xchg
sbb
push
fwait
shrb
shl
sti
add
imul
adc
dec
mov
popa
addl
pop
sub
mov
sub
or
xorl
int3
int3
movsl
pop
fwait
hlt
mov
dec
cmp
lods
cmp
add
outsl
lahf
ds
lret
repz
lds
sbb
xchg
inc
adc
adc
sub
jecxz
mov
mov
dec
mov
nop
xor
fistpll
outsb
jb
test
andl
fcomi
daa
movb
imul
and
dec
mov
jne
ss
lcall
out
stos
mov
fildl
add
mov
jb
out
imul
jae
pop
pop
push
xchg
jecxz
fmul
leave
pop
test
sbb
lahf
shr
xchg
rcr
lock
mov
xchg
add
inc
mov
mov
dec
dec
xchg
out
sti
xchg
test
lock
push
out
xchg
js
lcall
xchg
and
cmpsl
mov
mov
pop
inc
lret
push
or
repnz
inc
insb
cs
jae
pop
inc
jmp
in
out
xor
adc
adc
pop
rol
cmovo
jle
rcr
cwtl
mov
xchg
mov
mov
mov
mov
shlb
popf
xchg
arpl
cld
insl
sub
push
adc
xchg
je
push
popf
fsubrs
mov
xchg
mov
push
imul
xor
add
call
cmpsb
adc
test
adc
jae
push
into
iret
xchg
adc
int
jl
pop
out
push
cmc
aaa
and
jnp
sub
adc
int
sahf
xor
mov
ficoml
out
xchg
call
add
cmp
fsubr
mov
fsubs
add
dec
stos
lds
mov
ds
scas
outsl
mov
mov
daa
mov
shll
pop
test
mov
stos
shl
in
xchg
inc
or
mov
jle
cld
fildl
mov
xchg
aad
ja
movsb
sub
das
ljmp
insl
inc
pop
out
daa
imul
pushf
dec
arpl
cmpsb
insl
inc
fs
dec
mov
pop
adc
mov
push
test
cs
ljmp
ja
sbb
add
cmpl
loopne
test
push
pusha
sub
mov
movsl
leave
dec
inc
lret
push
hlt
xchg
nop
push
dec
dec
fstl
ss
cmp
pop
mov
sub
sahf
test
iret
xor
in
dec
out
and
addr16
leave
loop
and
push
mov
push
inc
test
jb
into
lret
les
pop
or
inc
dec
enter
sarb
stos
mov
aad
out
es
lret
fisttps
sarl
jl
xchg
inc
in
push
dec
es
adc
int
xor
or
lds
dec
adc
sub
sub
jmp
mov
mulb
sbb
or
jbe
xlat
pusha
dec
lahf
or
push
sub
cmp
jge
pop
sbb
cld
idivl
dec
rorl
fdivr
and
inc
scas
shll
push
iret
pop
mov
shl
pop
or
mov
cmp
sub
enter
jle
shrl
fwait
xchg
or
or
cmp
xlat
in
jns
or
movsl
xor
sub
sub
dec
pop
scas
push
mov
mov
mov
cmc
dec
xchg
sub
bound
push
int
test
inc
nop
adc
test
fisttpll
test
out
iret
inc
push
add
gs
and
jmp
mov
pop
xchg
xor
jnp
add
rcrl
jno
fidivs
mov
std
inc
cmp
push
sbb
jp
fiaddl
add
lea
cltd
out
call
inc
xchg
fcomps
in
pop
mov
mov
imul
data16
or
ret
fwait
hlt
inc
jmp
cmp
cmpsl
push
and
cmpl
movsl
pop
enter
cmc
xchg
and
inc
sbb
ret
aam
insb
int3
or
inc
xchg
adc
les
addr16
mov
jnp
loopne
mov
addr16
test
xor
hlt
add
sbb
pop
or
xchg
cmp
je
imul
lods
cmpsl
sub
je
sti
cli
pop
dec
adc
xchg
sub
mov
add
loopne
pop
mov
cs
and
sbb
addr16
push
sbb
movsb
mov
xor
out
xchg
cmp
mov
sbb
pop
das
mov
fwait
mov
mov
aad
jg
sbb
jnp
xchg
xchg
clc
icebp
dec
sub
and
lret
mov
in
jo
sub
test
insb
mov
jg
lods
scas
fcomps
ds
sbb
outsl
mov
or
cmp
fucomi
incl
dec
add
sub
jno
cmp
scas
in
inc
mov
popa
les
mov
decl
push
cwtl
push
leave
xchg
scas
stc
sub
addr16
pop
inc
push
out
dec
xorb
subb
sub
clc
inc
dec
or
cmc
outsb
adc
out
cmp
ror
adc
jae
cmp
sbbl
addr16
in
pop
push
and
loope
fucom
mov
dec
movsl
outsl
sti
mov
pop
xor
out
jl
lret
scas
subb
dec
dec
cwtl
xor
pop
cmp
xchg
sbb
sub
adc
mov
mov
rcrb
cmp
dec
pusha
loopne
jb
adc
adc
or
insl
push
inc
int3
push
repz
inc
pop
lahf
popa
jbe
xchg
mov
repnz
sub
clc
jg
xchg
nop
inc
fldt
jbe
int
or
movsb
dec
dec
stos
insb
jo
popa
inc
cmp
mov
lds
inc
rolb
dec
adc
push
aam
mov
mov
xchg
push
and
pop
aaa
dec
mov
dec
dec
or
je
cs
insl
subb
das
addr16
div
imul
je
es
test
inc
repz
pop
cmpsl
push
data16
cltd
hlt
stos
xorl
pop
or
adc
jns
inc
sub
in
add
inc
das
mov
rorl
dec
in
sub
ficompl
mov
and
cld
pop
lods
sbb
mov
push
jnp
mov
inc
sbbl
test
insb
jle
adc
loop
cwtl
jne
ds
lcall
dec
stos
and
ds
pop
insl
pop
jne
jl
or
sbb
leave
jae
xchg
fstps
mov
aam
push
dec
dec
in
pop
sbb
xor
idivl
pusha
fcmovnu
sar
pop
inc
es
pop
pusha
xchg
popa
insb
sub
mov
pop
ljmp
call
call
push
add
or
mov
pop
sbb
adc
pop
lahf
adc
mov
push
clc
mov
jne
sbb
daa
popf
jb
mov
nop
xchg
cmp
mov
aaa
push
outsb
int
jle
cmc
mov
ja
mov
mov
mov
lret
push
mov
cmpsb
leave
xor
xchg
inc
insl
and
mov
adc
dec
test
dec
cs
rolb
mov
mov
das
xlat
inc
pusha
pop
icebp
mov
jle
ss
shrl
mov
shrb
cli
pushf
test
cmpsb
sbb
ljmp
lcall
bound
pop
lcall
jecxz
sub
loope
jmp
fcompl
mov
jno
xchg
in
jmp
or
xor
fld
inc
dec
cmpsb
std
in
loop
cwtl
cmp
pop
jmp
mov
lret
stos
into
push
idivb
cmp
ret
inc
dec
incl
dec
push
repz
outsb
inc
adc
lds
and
mov
icebp
std
lret
sub
mov
dec
push
and
int3
jecxz
int
push
add
arpl
jo
in
or
push
push
adc
sbb
ret
push
push
movsb
out
icebp
push
scas
stos
out
notb
clc
sbb
xor
loopne
and
arpl
xchg
xor
rcrb
lods
dec
das
rorb
push
inc
sbb
xchg
xchg
bound
loop
add
jle
pop
fwait
scas
adc
fisubs
stc
sbb
push
xchg
sbb
pop
mov
icebp
fmull
jns
or
es
adc
shr
mov
sbbb
repz
lea
ret
pop
lds
xchg
call
icebp
xchg
pop
sahf
add
xchg
cmp
fldcw
pop
fildll
add
mov
dec
testb
jp
aam
add
data16
pop
lock
and
outsl
test
jg
pop
inc
or
shrb
and
xor
and
fdiv
sbb
nop
jg
popf
mov
addr16
daa
clc
cmp
sbbb
and
pop
mov
lods
xor
outsl
outsl
dec
mov
pushf
js
xchg
add
push
adcb
in
jle
jb
adc
clc
xor
cmc
int3
mov
enterw
into
divl
daa
dec
cli
or
lcall
mov
mov
xor
stos
sar
sub
mov
stos
mov
loopne
dec
inc
or
xchg
jp
shll
xchg
pop
aas
shll
shr
pop
inc
arpl
pop
lock
ja
lret
lea
jno
mov
int3
int
mov
ficoml
cltd
mov
popf
sarb
sub
arpl
adc
fmulp
pop
into
mov
cmp
mov
inc
lods
mov
imul
sbb
xlat
cmp
insb
mov
ror
pop
rol
mov
out
push
push
push
mov
mov
sysexit
ds
cltd
into
pushf
ds
jmp
rcl
cmp
pop
inc
lahf
push
add
mov
aad
push
or
in
add
pop
stos
scas
lods
push
sahf
rorl
imul
rcrl
push
movsl
ja
lret
sbb
lret
mov
cmp
jmp
fsubl
stos
repnz
lcall
jns
fisubrs
inc
gs
js
aad
out
pop
jle
orb
cmp
xchg
mov
mov
xchg
je
cwtl
test
add
pop
push
or
scas
push
or
push
sbbl
add
or
inc
jp
xchg
xchg
shr
fcom
imul
mov
mov
cli
lea
mov
jmp
insl
mov
ret
adc
xor
push
or
lret
push
dec
cmp
jmp
pop
aam
js
cltd
lcall
js
pop
mov
iret
pop
test
aaa
and
pop
sbb
insl
insb
add
mov
icebp
sub
enter
xchg
popl
lcall
mov
and
sub
cltd
sub
add
subb
dec
shrl
sbb
mov
in
add
scas
mov
push
or
pusha
mov
es
lods
cmp
lret
sub
mov
andb
cld
outsb
mov
ljmp
pop
inc
test
aad
push
mov
pusha
adc
pop
testb
push
push
cmpsl
sbb
or
pop
xchg
sub
mov
xchg
xchg
jg
dec
mov
dec
in
push
inc
dec
add
inc
loopne
cltd
daa
outsl
xchg
adc
pop
mov
cs
shr
mov
cmp
int3
loop
add
mov
lret
in
pushf
jle
mov
lret
push
inc
xlat
xor
out
inc
dec
inc
mov
mov
leave
and
fmuls
jg
fldt
popf
mov
pop
dec
mov
fwait
lahf
sub
pop
dec
adc
mov
lcall
add
dec
ljmp
sub
sbb
mov
std
jbe
js
or
inc
adc
fdivrl
add
add
aaa
mov
and
add
pop
sub
sbb
mov
jge
xchg
sbb
cltd
xor
mov
xor
xchg
fs
clc
movl
mov
out
jmp
test
mov
in
jmp
mov
push
mov
std
movsl
jle
nop
sub
inc
mov
mov
gs
movsb
push
inc
fwait
std
xchg
push
push
and
clc
adc
fwait
mov
jg
mov
dec
pop
mov
sub
mov
or
dec
pop
scas
and
lahf
or
out
inc
sub
xchg
addr16
int3
and
push
inc
lods
mov
insl
jmp
xchg
sbb
cltd
stos
pop
mov
ret
shr
leave
int3
or
mov
dec
shll
negb
adc
jnp
cmp
rcrl
int
xor
test
mov
js
dec
gs
jmp
dec
sbb
imul
fldl
xor
gs
mov
mov
lock
loopne
out
sub
cwtl
pop
xor
and
outsl
mov
xchg
mov
push
cmp
push
movsl
test
sub
rcrb
mov
stos
aaa
inc
add
std
int3
clc
lgs
jl
int
nop
test
outsl
popa
xor
test
lock
inc
xor
cld
pop
add
inc
add
push
xor
cmovs
jmp
jl
fistpll
or
les
movl
jns
push
outsl
push
mov
fmull
aad
sbb
out
adc
push
add
cmp
ljmp
rolb
jl
and
lcall
and
or
mov
mov
test
cmp
xor
jecxz
ret
mov
stos
add
loopne
jl
pop
into
xchg
cmp
rorl
and
repnz
mov
cmpsb
rcl
ss
cmp
mov
out
sub
sub
dec
mov
pop
mov
incl
lods
xchg
cmpsl
jo
xchg
fsub
aaa
push
lock
test
scas
push
xor
sbb
std
flds
dec
dec
stc
mov
inc
pop
dec
push
out
mov
fwait
in
dec
lds
hlt
mov
inc
lcall
inc
fsubl
out
mov
andl
or
mov
push
mov
daa
and
push
mov
ss
shrl
and
loope
idivl
or
es
fnstsw
int3
icebp
pop
int
mov
pop
sahf
sbb
xor
dec
gs
pop
out
aaa
and
xchg
xchg
call
jnp
call
sbb
hlt
scas
xor
adc
fsubrs
shrl
out
imul
mov
jo
push
mov
jns
pop
clc
popa
mov
je
mov
pop
add
out
sub
dec
in
shll
inc
enter
fsub
mov
mov
add
fnclex
xor
pop
shll
mov
xor
decl
decl
ljmp
jb
ret
arpl
mov
inc
push
lret
lret
das
xchg
hlt
addl
lock
hlt
and
rol
jnp
out
sbbb
and
shll
or
xor
push
aad
iret
negb
mov
and
add
icebp
ja
dec
push
inc
pusha
andl
lods
inc
or
sahf
xor
xor
lahf
lds
les
sbb
fists
jl
lret
ljmp
adc
subb
sti
inc
push
les
stc
push
ret
pop
xor
fcomi
idivl
adc
in
pop
dec
in
jp
pop
ljmp
aaa
xchg
outsl
add
or
sub
sbb
push
in
or
push
ljmp
ljmp
in
sbb
out
enter
pushf
sbb
pop
pop
dec
push
push
jl
and
fstl
addl
and
data16
pusha
push
adcb
mov
insb
ljmp
outsl
out
cmp
out
cmp
xor
push
xor
cmpsb
stc
cmp
les
sbb
mov
and
fists
jg
scas
mov
popf
js
xor
mov
andb
jns
int3
and
cmpb
ss
push
movsb
fsubl
xor
rcrb
popl
data16
push
test
fstl
push
adc
push
pop
imulb
leave
loop
sti
test
divb
mov
mov
add
jecxz
outsb
pop
mov
dec
dec
fdivrs
sbb
in
test
or
cld
cmpsb
rol
mov
mov
inc
jecxz
jecxz
arpl
xchg
jns
out
push
add
popa
jl
jl
pop
mov
jle
add
out
lods
jmp
mov
push
leave
clc
cwtl
jae
xor
sbb
sbb
mov
cltd
or
mov
pop
scas
cmp
mov
or
dec
out
mov
mov
pop
mov
ja
xchg
int
arpl
jae
mov
insl
push
mov
hlt
insb
daa
out
test
ja
mov
ds
data16
xchg
pop
dec
rcl
cltd
in
orb
mov
or
add
lea
lcall
and
in
cmp
or
adc
and
lods
jmp
cld
xchg
and
fs
lcall
cmp
jl
rcrb
stos
adcb
pop
jmp
ficompl
push
jo
push
shrl
fdivp
cmp
pusha
test
xor
push
jecxz
pop
enter
das
and
xchg
orl
and
cmp
mov
les
pop
mov
dec
fsubrl
mov
sbb
inc
adc
stos
push
rolb
xor
test
lcall
inc
jbe
dec
out
pop
in
xchg
icebp
add
xlat
hlt
ja
sub
dec
in
sub
out
loopne
stc
push
jne
add
fstp
sbbl
mov
and
cmp
mov
pop
jno
adc
test
test
xor
sti
push
in
ljmp
sub
mov
das
aaa
lret
testl
jmp
aaa
xchg
ds
mov
pop
and
mov
jb
dec
pop
jecxz
xchg
adc
mov
test
outsb
xchg
mov
pop
in
jo
subl
jmp
sbbb
test
xchg
pop
mul
push
dec
xlat
in
test
xor
test
push
out
mov
push
imul
repz
jge
arpl
sub
mov
ja
xchg
aad
adc
jns
mov
ss
jns
and
outsl
lods
adc
sbb
je
arpl
inc
jnp
js
add
mov
mov
adc
or
js
subb
arpl
mov
and
mov
xor
aad
mov
jmp
std
push
cmp
adc
add
push
jp
or
add
rolb
pop
fucomip
inc
aaa
ss
flds
mov
xor
rcll
sbb
adc
test
pop
mov
iret
push
int
jge
int3
mov
imulb
inc
lds
pop
adc
sbb
jno
fsubr
mov
jmp
sub
sbb
das
cmp
dec
bound
sbb
push
pop
lret
mov
cmpsb
movsl
jmp
repnz
jns
cmp
loopne
ds
gs
outsl
adc
and
sbb
add
mov
add
and
mov
test
les
jge
out
dec
hlt
dec
test
pop
out
insb
divl
push
push
ljmp
call
ds
pop
movsl
mov
in
mov
bound
sub
xor
sbb
test
adc
adc
or
xchg
add
xor
shlb
loope
arpl
mov
push
cmp
adc
dec
in
std
mov
xchg
das
and
push
push
test
fldl
adc
pop
xchg
dec
aam
push
add
int
sbb
sahf
or
lcall
ds
scas
push
loop
dec
in
adc
xchg
xor
fcompl
adc
mov
cld
rclb
mov
fisubrl
mov
xchg
insl
sbb
push
inc
nop
mov
lret
dec
int3
movsl
mov
fwait
outsb
mov
das
movb
dec
lret
mov
sarl
push
pop
fstl
call
jne
add
push
dec
cmp
cmpsb
mov
mov
pop
addr16
jne
imul
fnstenv
jge
mov
inc
repz
lret
mov
add
movsb
mov
pop
rcll
fwait
rclb
xlat
or
je
or
sub
inc
and
sbb
sbb
adc
mov
gs
call
aad
mov
mov
jne
push
rorl
jnp
inc
fldenv
cmpsb
xor
pop
lock
dec
add
sahf
sbb
aas
add
fnsave
or
insb
shll
inc
push
mov
jnp
sbb
xor
and
nop
and
pop
mul
or
jg
rolb
adc
arpl
mov
sarl
ljmp
adc
ja
pop
in
jp
cs
pop
xchg
testb
dec
insl
sub
pop
inc
xchg
xor
fldenv
in
subb
test
add
cmp
mov
movb
pop
mov
jmp
fs
mov
sub
fidivrs
in
stos
aaa
into
enter
shr
test
mov
lea
ret
fsubp
adc
ds
push
test
aad
stos
xchg
add
dec
divb
sarl
adc
mov
fmull
jmp
ds
mov
fistps
mov
int
cmp
and
mov
in
mov
xlat
mov
adcl
and
sbb
jge
imul
lahf
and
shrb
inc
fstp
jle
adc
cs
pushf
test
push
call
mov
fbld
sub
insl
inc
jmp
rorb
int
and
nop
push
shr
test
fisttpll
cmpsl
lods
mov
fmulp
xchg
ja
sbb
mov
ficompl
pop
lahf
fisttps
or
push
adc
or
or
es
inc
fdivr
pop
rcrl
inc
shl
shlb
arpl
cmpsl
mov
mov
repz
fidivl
addl
cmpsb
push
or
mov
mov
jg
movsl
ret
insl
testb
insl
xchg
adc
jnp
repz
in
in
add
popa
cmovns
dec
jecxz
test
mov
xchg
fcomps
stos
xor
sbb
sbb
test
insl
psllq
das
orb
adc
jb
imul
and
out
push
je
xchg
cmpsb
test
stos
push
pop
icebp
jnp
sub
xor
ret
ret
jnp
int3
je
jae
icebp
xchg
cmp
enter
push
mov
dec
or
mov
push
adc
in
xor
loop
cwtl
adc
jg
int
jmp
push
shr
jns
xor
cmp
int3
fs
mov
daa
mov
loop
mov
fdivrs
shrl
dec
pop
jp
or
xchg
and
adc
outsb
and
cmp
iret
cmp
bnd
xchg
sub
shr
mov
scas
xor
popa
pop
inc
lahf
or
shll
into
and
test
mov
cmc
or
sbb
or
insb
push
in
loop
add
loopne
movsb
xor
xor
adc
xchg
test
sub
shll
jno
imul
cmpsl
das
in
sbb
sbb
arpl
xor
jns
sahf
sbbl
sub
jae
clc
cmpsl
inc
push
xchg
test
cmpsl
cltd
sub
aad
and
in
add
ret
and
jge,pn
sbb
xor
lret
mov
bound
cwtl
xlat
jne
pop
xor
push
adc
pop
iret
ljmp
xchg
pop
test
cli
lods
lcall
mov
int
ja
pop
iret
call
cmp
call
adcb
insb
pop
test
pop
lret
jmp
int3
cmpsb
test
xchg
daa
xor
scas
inc
inc
xlat
sub
mov
add
repnz
cs
lock
mov
std
dec
out
fidivrl
sbb
in
xorb
lahf
inc
pop
dec
movsb
jmp
sub
xor
std
pop
inc
push
dec
dec
addb
pop
pop
loope
call
shll
iret
push
test
dec
push
jns
mov
jno
push
mov
sbb
sbb
cmpsl
les
pop
pop
bound
jbe
inc
fdivrs
nop
pop
jae
test
int
in
sbb
cwtl
hlt
lret
in
mov
int
dec
mov
add
cmp
cmpsb
insl
inc
dec
mov
fldt
jo
sbb
ja
sbb
xchg
cmpsl
cmp
out
sti
jl
out
inc
mov
inc
enter
gs
or
xlat
cmp
dec
repz
lods
ja
out
or
addl
ret
repz
push
push
xchg
xor
rcr
push
xchg
cs
and
mov
stc
aaa
sbb
dec
push
push
loope
sub
icebp
insb
scas
ret
mov
cmc
sarb
dec
lea
js
cmc
pop
xchg
insb
out
jns
sbb
xchg
mov
sbb
xorb
sbb
ret
in
cmpsb
pop
negl
jge,pt
daa
pop
sub
mov
addr16
pop
inc
insb
shrl
add
fucomip
add
push
int
leave
jns
lock
add
movl
std
cmpsl
lret
push
sbbl
sbb
insl
enter
jno
adc
in
dec
jno
out
mov
pop
into
insb
xor
cmp
sti
push
mov
mov
andl
fcoms
push
stos
xchg
push
cmp
out
int
nop
stos
and
shll
inc
xchg
inc
andb
lret
sbb
xchg
scas
adc
inc
shr
add
push
outsb
movsl
daa
lea
enter
mov
jae
cmp
push
or
jb
jle
lcall
inc
push
jns
in
scas
push
jbe
pop
lahf
stos
cmpsl
mov
int
push
out
adc
adc
movsl
dec
movsl
test
test
fildl
xor
shll
and
sbb
push
mov
mov
rcl
cmpsb
pop
xor
fadds
jb
cli
aaa
push
push
lcall
in
mov
push
adc
cmpl
mov
popf
push
mov
dec
sub
data16
movsl
sub
pop
cld
push
add
shll
sti
xchg
mov
mov
xchg
inc
gs
dec
fucomp
test
inc
inc
sub
xchg
xor
jl
je
mov
pushf
xchg
inc
repnz
inc
dec
xor
xchg
mov
fs
sub
mov
arpl
repz
mov
adc
fimuls
add
ja
pushl
pop
fwait
xor
add
into
xor
dec
lahf
xor
jl
cmpl
ljmp
mov
adc
xchg
pop
inc
stc
stos
and
and
add
mov
arpl
outsb
jno
dec
add
mov
lds
popf
inc
add
mul
jmp
pop
test
lods
in
sub
push
in
mov
pop
scas
shl
std
xchg
addr16
test
cmp
mov
and
ljmp
jno
ja
fsubl
push
push
mov
stc
das
lea
xchg
je
mov
xchg
push
aaa
cli
xlat
aaa
push
popa
xchg
mov
subl
xchg
sub
push
aas
push
pushf
outsl
jo
mov
xchg
lahf
xor
imul
int3
jg
dec
and
cmp
shr
fnsave
sbb
out
add
xchg
jae
insl
ror
mov
lcall
and
pop
out
hlt
push
pop
test
or
push
dec
cmp
cwtl
je
push
movsb
dec
out
in
test
pop
jecxz
mov
sub
lahf
fisttpl
cmp
jle
lock
dec
bound
fsubrl
push
clc
and
sbb
fdivs
jnp
sarb
mov
sub
scas
fisubrs
xchg
add
lock
lock
push
push
adc
push
pop
loop
aas
fs
jb
roll
lcall
outsb
sub
std
out
xchg
in
dec
jbe
out
lods
dec
jmp
repz
xor
sahf
movsb
pop
add
mov
cmp
mov
rcrb
insb
fcomps
fstpl
and
out
xchg
xor
sub
pop
mov
nop
mov
mov
adc
mov
adc
in
push
sub
mov
pop
fwait
subl
pop
addr16
adc
fcoms
loopne
sbbl
sbb
shrl
mov
push
inc
lret
pop
data16
lahf
sub
out
mov
xchg
xor
mov
mov
mov
inc
mov
or
mov
hlt
inc
mov
inc
enter
jne
adc
shl
cmpsl
mov
add
loopne
movsb
inc
ljmp
pushf
call
mov
xor
push
lods
je
rol
inc
mov
ret
les
xchg
fldt
mov
ljmp
inc
add
aas
dec
mov
push
sbb
pop
ss
mov
in
notb
xchg
and
aam
inc
lret
xor
and
push
adc
dec
and
imul
xor
jp
in
test
adc
add
mov
aas
rolb
mov
movsl
mov
test
lahf
add
sbb
rolb
mov
and
xor
out
pop
movsb
jmp
mov
push
and
scas
push
fdivs
mov
insl
lahf
mov
outsl
notb
imul
dec
mov
pop
nop
mov
fwait
bound
sahf
xchg
dec
sbb
mov
push
sub
test
jne
scas
add
lret
pop
lods
jmp
test
jbe
add
inc
out
sbb
hlt
push
lret
cli
pop
outsb
and
loop
and
and
and
adc
mov
out
cmp
xchg
or
xor
and
mov
mov
sti
push
mov
gs
aam
bound
push
cmp
mov
or
fdivl
bswap
push
icebp
mov
pop
adc
mov
ret
jp
lock
cmpsl
mov
in
dec
sti
repz
fistps
pusha
nop
hlt
imul
mov
mov
roll
and
jecxz
inc
or
cmp
loope
mov
stos
push
or
daa
lods
mov
inc
jle
jne
ds
xchg
mov
int
mov
fcmovne
push
dec
mov
loop
pop
ss
loope
ss
adc
popf
cmp
xchg
sahf
das
add
mov
outsb
in
mov
lods
add
xor
add
ja
and
xchg
fcoml
dec
dec
mov
push
adc
in
ja
push
fcmovbe
ret
push
pop
lods
jo
enter
xor
jno
sbb
ret
test
inc
mov
sbb
ret
repnz
call
or
xchg
inc
mov
jmp
test
call
call
cmp
xchg
xchg
scas
mov
xor
fsubrs
jb
sub
xlat
scas
jo
and
mov
xor
xchg
gs
in
or
iret
jb
das
out
sti
test
bound
lds
out
aad
andb
pop
adc
mov
mov
xor
and
mov
sbb
mov
cmp
ret
pop
sbb
and
pop
movsl
ret
xor
scas
scas
and
fisubrs
cmp
stos
pushf
xor
aas
lcall
inc
sbb
lahf
pusha
sub
xorb
mov
cmc
loope
cld
adc
xchg
cmp
idiv
scas
stc
pop
cmp
sub
dec
bound
cld
lds
sbbl
push
sbb
addl
mov
js
dec
fsubrs
mov
lds
scas
leave
daa
shrl
cmp
push
push
pop
sub
cmp
pop
dec
int
or
ljmp
test
fstps
add
mov
out
fsubs
sbb
mov
sub
jge
push
mov
jl
stos
jmp
fstl
push
push
push
jae
test
gs
loop
xor
repz
and
dec
out
insl
xor
mov
ljmp
sbb
ret
sub
mov
xchg
out
push
leave
in
dec
daa
hlt
or
xlat
cltd
std
pop
or
subb
xor
out
cmp
adc
push
das
xchg
lods
cwtl
pushf
xchg
imul
cmp
mov
pop
cmc
cltd
mov
xchg
mov
dec
mov
adc
lret
mov
mov
in
rcrl
jno
pop
or
jl
push
mov
pop
fmuls
or
int
ds
xchg
dec
sbb
jge
mov
cltd
fisubrs
gs
ret
repnz
ret
xor
aaa
gs
pop
xchg
push
dec
int3
or
arpl
lcall
enter
jge
mov
push
mov
cmp
xchg
cli
loopne
and
sub
jae
in
xchg
enter
sahf
jmp
testb
call
adcb
sbb
dec
dec
xlat
push
mov
fmuls
xchg
out
adc
mov
mov
mov
or
test
adc
fcmovb
mov
ret
jno
faddl
loopne
jae
lds
pop
add
mov
xchg
sbb
cmp
lock
adc
adc
xchg
and
jmp
ja
push
shrl
add
dec
xor
nop
or
insb
ds
xor
sub
out
in
sbb
or
lds
fs
adcl
pop
in
mov
mov
push
imul
popa
mov
jecxz
sub
out
adc
test
mov
inc
push
hlt
jb
sub
push
sub
loopne
cs
cmp
push
jae
andb
inc
push
test
cmp
hlt
push
push
pop
add
stos
add
stos
mov
int
and
js
movsl
scas
adc
je
icebp
xchg
push
push
xlat
pop
loope
sbb
adc
sbb
ds
or
adc
int
ljmp
jge
add
hlt
dec
or
adc
xchg
cld
test
loop
lock
sbb
push
fnstenv
sahf
out
add
cmp
xchg
pop
scas
sbb
addl
int
mov
aas
loope
lds
fisttpl
in
xor
cmc
aas
loop
xchg
ret
jle
in
adc
jl
jmp
mov
outsb
push
xor
shr
int
jne
pop
or
inc
cmp
sbb
mov
push
cmpsl
inc
push
cmp
fldcw
push
jle
pop
xor
sbb
xor
out
push
push
movsb
cmp
mov
es
rcrl
fdivl
mov
fistl
scas
rorb
xchg
hlt
sub
inc
repnz
dec
sahf
push
icebp
scas
pop
mov
push
mov
std
pop
fcomp
mov
or
ljmp
testb
int3
call
out
sub
push
imul
shl
mov
in
imul
pop
jb,pt
aam
roll
fcomp
fsubr
or
lcall
or
nop
es
mov
jo
sub
nop
int
xchg
mov
pop
repz
scas
xor
int
adc
mov
loope
sbb
inc
shrb
sti
sbb
cmp
sub
test
fisubrs
aam
fisttpl
jp
dec
sbb
push
scas
clc
adc
mov
scas
jge
loopne
les
xlat
into
add
into
sbb
rcl
lcall
sahf
clc
jnp
out
mov
insb
js
add
mov
mov
push
sbb
add
mov
es
mov
pop
cmp
mov
push
lods
sub
into
xlat
icebp
bound
ret
pop
mov
or
loopne
mov
mov
test
test
dec
xorb
rcl
lock
pusha
push
pop
lods
jne
cmpsl
push
fwait
pop
out
in
testb
hlt
pop
push
and
in
inc
clc
sahf
ljmp
repz
std
xor
sub
scas
xchg
std
add
aam
or
and
xor
adc
cmp
xchg
nop
push
adc
rolb
mov
pop
iret
pop
sub
fcomi
outsl
dec
shl
movsl
mov
loope
lods
inc
in
adc
inc
or
cltd
jo
inc
dec
div
lods
out
outsl
dec
je
sbb
adcl
mov
mov
xor
shrl
inc
insl
clc
and
out
arpl
or
outsb
jp
scas
call
in
js
adc
mov
pushf
divl
adc
imul
pushf
lock
inc
pop
sbb
and
mov
in
sbb
mov
add
inc
jge
nop
adc
lcall
call
lds
xchg
sub
dec
cmp
mov
jo
jg
push
cmp
scas
sub
movsb
mov
loopne
adcl
jns
dec
push
call
je
outsl
adc
ljmp
xor
out
stc
dec
or
push
popf
mov
fucom
jl
sbb
inc
jg
lcall
and
bnd
shrl
cmpsl
push
mov
xchg
inc
ffree
adc
inc
into
loope
sti
adc
jmp
fisttpll
ss
adc
mov
mul
fnsave
xchg
push
rorl
test
icebp
mov
or
add
sub
push
mov
fwait
push
fcmovnb
pushf
aaa
and
push
mov
xchg
inc
mov
out
cmp
out
loope
xchg
jbe
shrl
sbb
or
loop
outsl
add
mov
aad
push
dec
addr16
in
push
sub
add
stc
cltd
enter
testl
jne
mov
fnop
push
sub
pop
lods
sub
cmp
pop
jnp
nop
sahf
fwait
push
add
leave
cmp
mov
lods
cmp
mov
pop
sbb
jo
mov
iret
sub
movsb
aad
cld
jae
test
cltd
lds
inc
aad
daa
mov
ret
ret
repnz
jl
dec
fucomp
frstor
mov
jg
pop
es
rcl
pop
cmp
dec
daa
outsl
mov
push
pop
repnz
push
pop
fildll
inc
test
push
stos
es
or
rclb
or
stc
loopne
int3
xchg
mov
test
es
notl
jge
mov
call
mov
cmp
in
lock
mov
jbe
sti
inc
fwait
pop
xor
fnstsw
sbbl
jb
dec
pop
dec
xchg
cmpsl
out
lahf
or
cmp
add
cmp
inc
dec
mov
cmp
sti
cmp
lret
imul
negb
mov
pop
pop
cmp
leave
clc
adcb
sub
outsl
cli
nop
jo
in
mov
and
notl
xchg
xchg
out
pop
out
mov
mov
dec
aam
add
mov
popf
cmp
sar
sub
pop
push
xchg
daa
test
sub
add
test
jmp
movsl
xor
rcl
pusha
pop
mov
and
inc
dec
pop
jge
testb
into
adc
jg
aad
add
dec
lret
hlt
dec
push
add
xor
mov
dec
jnp
cwtl
enter
xchg
push
add
cmpsl
sahf
xor
and
mov
iret
jbe
rcrl
dec
in
std
push
movsb
mov
mov
mov
in
cmp
xlat
imul
iret
mov
jb
add
sbb
aad
inc
xchg
and
rcrb
and
insb
add
in
out
fnstsw
adc
imul
dec
xchg
addl
jmp
les
sub
addr16
jne
pop
imul
shrl
mov
jp
sbb
pop
cmp
ja
int
fcmove
es
dec
dec
cltd
gs
sub
dec
pop
pop
mov
xchg
cmpsl
cmp
fnstenv
fndisi(8087
dec
mov
sub
enter
pop
loope
loop
cs
add
popl
push
aad
jmp
cmp
push
es
add
jae
rcll
into
popa
mov
rcrl
cmp
xor
aas
sti
gs
mov
lcall
lds
mov
sbb
push
sbb
sbb
jo
or
and
fucomip
mov
or
dec
fisubrl
jge
xor
fadds
push
lds
sbb
mov
lock
inc
fs
pop
lods
addl
or
mov
xor
outsb
or
sbb
xchg
push
sti
js
cmp
dec
aad
push
jae
inc
pusha
call
daa
dec
cmp
test
mov
popa
mov
lock
dec
xor
mov
mov
add
scas
push
adc
ds
out
xor
jge
or
cmp
in
pop
push
pop
repz
js
mov
and
imul
enter
cld
icebp
inc
push
daa
lods
mov
bound
and
pop
call
mov
jecxz
cs
rorl
mov
jecxz
sub
xor
lret
cwtl
test
xchg
or
cs
pop
aam
ja
shl
push
and
and
dec
mov
mov
dec
in
mov
std
pop
push
out
push
hlt
xlat
je
outsb
jl
aas
or
xchg
and
out
inc
jecxz
fcmovb
shlb
or
shll
movb
pop
aam
div
pmovmskb
les
jge
and
inc
in
fnstsw
enter
jae
js
addr16
iret
adc
add
xchg
pop
jne
mov
push
movsb
scas
shlb
mov
test
mov
sbbl
adc
or
inc
outsl
bound
rcl
divl
ds
or
rcll
gs
lock
pushf
je
adc
and
sbb
pop
cli
loop
subl
jle
dec
xchg
stos
push
fucomp
pop
adc
fbld
xor
icebp
push
jae
gs
int3
clc
mov
shlb
push
pop
cmp
cld
push
pushl
aam
sub
or
loop
fcoml
pop
notb
popa
jge
sbb
mov
iret
lods
push
jmp
stc
scas
popf
pop
andl
lahf
xchg
mov
lret
mov
idiv
jle
xor
stos
xorb
push
fstp
arpl
filds
inc
fs
popa
xor
push
les
mov
hlt
faddl
mov
and
sub
add
adc
push
mov
jge
push
movsl
pop
sar
cld
orb
test
int
push
xor
or
mov
push
faddp
cmp
test
clc
ret
test
shll
outsb
add
add
stc
and
sub
mov
arpl
push
cmpsl
sti
arpl
stc
mov
arpl
imul
pushf
je
mov
adcb
push
xor
push
or
jge
push
push
pop
sub
xchg
in
mov
jmp
add
mov
jl
mov
mov
pop
xchg
daa
rcrl
inc
push
adc
cmp
js
adcb
mov
ja
inc
jo
incl
aam
adc
mov
cmpsl
cmp
cli
push
and
gs
or
test
testb
nop
aas
orb
rcrb
cmc
sub
xchg
pop
aas
mov
jne
dec
push
test
out
mov
in
iret
xchg
lcall
cmc
cmp
enter
pop
dec
and
sub
mov
pop
add
and
inc
xor
push
mov
inc
in
cmp
or
and
std
mov
scas
movb
daa
push
scas
cs
sbb
daa
push
imul
ret
or
push
es
cmpsl
jg,pt
adc
mov
lret
es
call
pop
cmc
popf
dec
pop
iret
push
sub
into
push
adc
test
push
or
imulb
xchg
adc
outsb
cmp
mov
mov
push
pop
xor
xchg
and
or
jmp
push
cmp
push
push
fcomps
xchg
fbstp
fildl
add
cwtl
add
push
sahf
xor
jg
mov
aas
sarl
mov
or
push
js
ss
repz
inc
and
inc
dec
cmpsl
icebp
mov
adcl
push
pop
push
scas
ds
ret
clc
inc
dec
lahf
test
iret
xor
movsl
outsl
dec
loop
out
sbb
ret
loope
pop
sub
push
lods
ljmp
mov
nop
cmp
cmp
push
sub
iret
jno
inc
icebp
mov
inc
mov
add
mov
arpl
popf
mov
out
adc
stc
inc
test
jl
xchg
outsl
out
les
xchg
in
pusha
adc
cld
outsl
xchg
or
ljmp
xlat
pop
or
adc
dec
dec
adc
and
dec
dec
pavgb
leave
mov
dec
or
mov
in
xor
cmp
ret
iret
movsb
push
pop
test
inc
mov
cmpsb
in
mov
aam
mov
ficoml
idivb
icebp
mov
fwait
push
int
cmp
mov
mov
cmp
mov
push
jmp
out
mov
pushf
or
add
sub
jne
mov
fmuls
bound
inc
lcall
and
pushf
pop
push
mov
cli
cli
push
sbb
sub
sahf
inc
insl
cld
data16
sub
sub
das
or
pop
mulb
mov
pop
mov
add
leave
in
push
rorb
call
fmull
xor
ret
dec
pop
sti
fnstsw
pop
cmpsl
mov
cmp
cmp
out
mov
mov
popf
out
out
clc
dec
xchg
repnz
outsl
xor
cmp
xchg
or
hlt
lret
popa
adc
cmp
cmp
and
dec
and
pop
data16
and
push
xchg
fwait
pop
loopne
xor
pop
inc
sub
adc
and
sbb
jg
popa
pop
adc
dec
sti
jne
test
add
sbb
add
mov
push
int
push
cmp
add
mov
das
inc
lea
mov
fbld
mov
fidivl
push
mov
pop
mov
shlb
mov
and
jb
scas
jno
cld
sub
mov
idivl
sbb
push
push
inc
and
xchg
mov
pusha
push
enter
mov
xor
mov
or
dec
daa
out
dec
jo
lret
pop
lock
pop
out
sub
loop
sarl
mov
push
movsl
adc
orl
xchg
xchg
cwtl
std
int3
add
lahf
out
ret
rcrl
cs
into
dec
lds
subb
dec
xchg
and
cltd
imul
adc
mov
mov
dec
cmp
pop
pop
ds
fldcw
daa
or
repnz
stc
push
xchg
mov
xor
cwtl
out
xchg
cltd
rclb
xor
sbb
or
xorb
scas
cmpsb
xchg
and
in
push
push
les
aam
xchg
movsl
psraw
mov
sub
inc
ja
cs
enter
dec
mov
add
fbstp
push
sub
imul
pushf
or
and
cmp
xchg
std
jno
mov
rcrb
fs
mov
mov
dec
aam
pop
fmulp
push
add
cs
pop
mov
inc
cltd
adc
jg
stos
sbb
or
jp
fdiv
xchg
dec
jmp
jmp
inc
push
push
mov
into
sti
aad
stc
push
andl
or
cmp
mov
pushl
fadds
mov
es
sbb
sti
or
adc
rcrb
gs
xor
in
mov
inc
sub
mov
fcoml
lret
pop
jno
mov
into
ja
pop
mov
popf
xorb
dec
jg
sub
nop
jl
and
add
dec
xor
mov
in
adc
sarl
xor
test
cli
sbb
mov
jmp
jl
repz
mov
ret
mov
in
into
xor
movsb
pushf
and
inc
push
or
bound
movsl
sbb
icebp
xchg
pop
adc
sub
and
sbb
jp
mov
xchg
xor
shl
jl
jg
into
inc
add
add
in
xchg
pop
int
add
sub
mov
fbstp
sbb
pop
push
sub
push
mov
xchg
xor
push
mov
sub
add
pop
and
shrb
sbb
in
xchg
or
les
mov
inc
pop
dec
mov
xor
aad
test
and
add
mov
hlt
arpl
push
mov
in
mov
xchg
mov
ja
test
jns
pop
test
sahf
fisubrs
fwait
sbb
data16
dec
push
fdivrs
lods
add
inc
pop
fstpl
push
mov
pop
adc
or
adcl
lahf
stc
mov
push
addr16
mov
sub
imul
or
insl
loopne
xor
mov
inc
cmpsl
inc
adc
mov
jno
mov
mov
mov
loopne
lods
xchg
inc
cmp
pop
mov
push
xor
adc
fcoml
xchg
test
stos
cs
mov
add
xchg
scas
push
mov
shll
int
jecxz
push
adc
or
xchg
arpl
pop
lahf
mov
sbb
add
daa
mov
std
fcmove
lahf
push
mov
jo
in
stc
aaa
mov
inc
cld
sti
stos
mov
push
movsl
imul
mov
fs
or
cmpsl
adc
imul
jno,pt
jno
repz
nop
mov
sub
cwtl
outsb
outsb
ja
pop
add
xchg
jns
test
in
aaa
std
dec
stos
xchg
mov
inc
sbb
inc
mov
push
popf
sbb
jle
push
sub
mov
rorl
shll
xchg
add
decb
rclb
jo
hlt
push
arpl
test
test
or
sbb
fldcw
dec
int
cmp
ret
add
rorl
imul
push
xchg
xchg
mov
sub
aad
xchg
mov
popa
repnz
loope
jb
daa
adc
push
pop
sbbb
jecxz
outsb
sbb
sub
pop
pop
fisubrs
mov
xchg
insb
rolb
mov
fiadds
movsl
insb
cltd
dec
dec
lret
xchg
or
mov
dec
jl
pop
jno
fwait
adc
and
arpl
pop
pop
insb
fbstp
fcmovbe
dec
jbe
xchg
adc
or
pop
sub
dec
sbb
mov
xlat
lret
enter
adc
lds
dec
dec
mov
fnstcw
mov
push
add
mov
popf
and
and
add
jae
mov
shrb
in
pop
lea
xchg
and
stos
pop
mov
inc
push
mov
xor
or
lea
mov
sahf
int
out
cmp
pop
mov
dec
adc
fld
xchg
push
mov
xchg
fistpl
idivl
loope
jno
mov
add
int3
data16
rcrl
mov
xor
inc
cltd
incb
ja
lret
mov
fmull
sub
test
cmc
int3
inc
push
mov
xchg
cs
sub
dec
in
fnstcw
mov
pop
xchg
push
cltd
xchg
out
xchg
mov
mov
out
cmp
fistpl
enter
cmpsb
pop
jnp
or
and
push
stos
xor
mov
jns
xchg
xor
roll
sbbb
xchg
jecxz
jo
mov
clc
adc
mulb
mulb
lret
es
sbbb
and
mov
xchg
sub
addl
and
lock
std
cltd
push
xor
js
inc
int
jne
cmpl
stos
jmp
fnstsw
xchg
sub
mov
cmp
paddusw
push
xor
mov
test
inc
in
aam
or
sbb
stos
inc
cmp
fimuls
add
ret
das
sbbl
lds
dec
insl
fs
aaa
int
xchg
sbb
xlat
mov
negl
xchg
mov
popf
adc
jmp
test
ja
out
rorb
movsb
and
pop
cmpsl
cmp
hlt
and
add
insl
into
fisubs
test
pmaxsw
cmpsl
scas
ret
or
pop
cltd
mov
xchg
les
pop
xchg
cmp
scas
sub
lahf
push
add
sbb
aad
cld
mov
xchg
pop
pop
push
leave
push
mov
and
mov
push
lcall
loope
mov
xchg
cli
inc
je
jge
xchg
call
movsb
loop
mov
sti
adc
pop
mov
shrb
subl
aad
mov
hlt
sbb
addr16
cwtl
data16
loope
out
mov
icebp
xor
pop
mov
fmull
repnz
insl
xchg
clc
fwait
cld
repz
mov
pushl
loope
pop
mov
jns
mov
jmp
inc
pop
sub
mov
in
mov
adc
js
adcl
shl
jnp
scas
lods
dec
movsl
pop
lret
push
je
repnz
mov
les
insb
std
mov
daa
dec
out
jmp
or
mov
cli
imulb
and
sti
lcall
mov
mov
mov
loop
add
int
lods
add
xchg
mov
add
mov
xchg
and
adc
jbe
xchg
and
push
push
jmp
lcall
lcall
xor
or
jge
scas
mov
pop
sub
fcmovnbe
aad
or
pop
data16
jmp
mov
mov
jae
dec
movsb
lock
adc
jo
sub
cli
push
scas
dec
jbe
cmp
xlat
test
and
subb
negl
cmp
mov
fsts
xchg
add
test
pop
push
in
add
clc
inc
out
cmp
outsb
mov
fs
in
add
cmc
mov
push
xor
fdivrp
mov
or
mov
repz
sub
mov
test
adc
vcvtpd2dqx
jmp
adcl
xor
jae
cmp
jg
bound
cmp
out
notl
jg
pop
scas
ficoml
fsts
xchg
mov
inc
xlat
push
fcoml
dec
push
push
inc
repz
dec
bound
jno
cmp
xchg
popf
cld
cmpsl
jae
clc
nop
insb
push
xor
fcomp
jae
xor
mov
cltd
fs
inc
cmovns
imul
aam
push
pop
insb
lds
fdivl
mov
scas
rorb
mov
mov
inc
test
or
pop
filds
xor
mov
shl
fsts
or
adc
sub
pop
xor
leave
add
aaa
stc
ljmp
ds
cmp
inc
lcall
rcrb
jle
rcrb
lahf
test
gs
xlat
outsb
jae
imul
cmc
mov
or
lea
int
daa
sbb
or
pop
mov
or
lds
and
dec
jo
mov
jb
dec
fs
fists
rclb
nop
and
mov
jg
and
mov
pop
test
insl
arpl
sahf
stos
mov
push
mov
dec
in
mov
cli
andb
sbb
ds
pop
pop
iret
and
arpl
push
inc
adc
loopne
jmp
push
jl
pop
fwait
pop
lea
add
lods
and
mov
cmp
fsubs
or
mov
bound
mov
cmp
mov
mov
int
cltd
mov
xchg
xor
fs
mov
add
test
adc
xor
jmp
sub
pop
dec
mov
mov
jae
inc
push
je
adc
addr16
push
pop
in
outsb
pop
fsubs
sub
out
cmp
dec
xlat
cwtl
sub
imul
pop
pop
dec
adc
xchg
add
dec
xchg
adc
stc
adc
sbb
sbb
pop
inc
nop
mov
lds
fs
leave
test
adc
xor
dec
pop
xor
mov
cli
cmp
mov
stos
loope
push
add
scas
xor
dec
sbb
sbb
xor
shll
pusha
adc
and
jl
add
out
lea
cmp
ja
mov
pop
adc
dec
rcrb
lahf
push
out
call
fdivrs
push
aad
jl
sub
call
xlat
js
jno
scas
lock
mov
int3
popa
cmp
dec
jmp
mov
ficoml
mov
inc
inc
fcmove
stc
xor
lret
and
xchg
insb
jae
dec
test
xor
repnz
inc
in
jo
scas
cltd
imul
push
mov
gs
cmc
xchg
xchg
inc
out
xor
out
pushf
ja
cmp
iret
jae
aas
inc
out
dec
mov
or
add
dec
int
mov
xor
sahf
inc
shrb
mov
lds
xchg
pushf
and
pushl
pop
mov
pop
rcrb
push
jmp
cmp
push
xor
sbb
int3
inc
cltd
push
imul
sub
cwtl
jne
stos
shll
inc
in
jg
lahf
loop
cmpsb
mov
sbb
add
dec
pop
insl
sub
inc
popf
stos
dec
ret
pushf
icebp
sbb
and
mov
stc
and
mov
dec
cmpsl
cld
xlat
dec
mov
pop
jecxz
andl
inc
and
and
jl
xor
in
push
sti
pop
nop
test
pop
push
fnstenv
mov
jmp
sub
jo
imul
mov
ret
ss
ficoms
faddl
mov
rcr
lds
sbb
adc
mov
dec
sub
sarb
fsubs
pop
in
lock
mov
add
mov
loop
les
test
xchg
fiadds
not
push
push
popa
in
dec
iret
xor
gs
lods
jb
incb
cltd
das
mov
dec
add
leave
cmpsl
xlat
fwait
push
aad
insb
fistps
add
inc
and
push
xchg
xor
int
adc
jp
push
in
mov
pushf
push
pop
test
cli
xchg
lret
stc
scas
push
ud1
push
lods
cwtl
bound
js
add
data16
arpl
adc
and
ss
inc
jg
loop
adcl
cmpl
cmpl
es
jae
add
jno
dec
mov
add
jnp
mov
lcall
icebp
ja
push
out
mov
gs
or
std
pop
cmp
xor
or
dec
fsubr
jnp
and
dec
sbb
mov
push
adc
xor
pusha
adc
jo
test
flds
pop
test
in
xor
mov
in
aaa
fwait
xchg
ja
dec
push
repz
cltd
shll
fcomip
dec
pop
arpl
cmc
xchg
xor
jns
add
outsb
adc
jo
push
push
lods
inc
popa
fcmovnb
sbb
pop
mov
bound
sti
jl
sarb
repz
cmp
xlat
xor
inc
and
out
mov
ficomps
test
scas
sub
andb
out
lret
testl
into
bound
fistl
adc
test
jne
push
cmpsl
inc
cltd
xor
in
dec
push
int3
mov
int3
cmpsl
ss
sub
dec
pop
scas
dec
pop
jmp
les
orl
insl
jge
inc
push
outsl
inc
and
mov
lock
or
js
pop
movsb
jnp
bound
xchg
add
test
mov
ffree
push
jmp
inc
test
outsl
mov
inc
push
pop
jg
jecxz
lcall
inc
push
mov
lcall
add
cld
jne
pop
mov
mov
fsubrs
sbb
push
or
divb
std
adc
pop
push
imull
cmp
sub
dec
fcomip
js
push
fistps
xchg
lods
imul
out
in
mov
sbb
adc
jl
out
mov
fimull
int3
jecxz
test
or
cmp
jg
add
cmp
lods
jp
lcall
and
jp
inc
ljmp
outsb
popf
addl
clc
mov
dec
rclb
push
gs
sub
loope
pop
adc
adc
add
cmp
jb
jl
aas
xchg
push
shrl
aaa
xor
xchg
testl
lret
jo
jo
insl
stos
pusha
rcrl
cmp
cmp
pop
call
jecxz
inc
mov
dec
outsl
inc
mov
jbe
push
aad
out
push
pop
shll
fnstenv
sahf
daa
dec
mov
push
adc
sub
dec
xchg
pop
stos
stc
jp
in
in
xchg
ret
xor
sub
inc
push
mov
jecxz
xchg
mov
sahf
dec
out
sub
mov
push
imul
push
mov
inc
repz
cltd
cmp
or
decb
push
test
scas
test
pop
sbb
and
or
in
adc
imul
add
mov
push
pop
ja
dec
ja
jns
mov
cmpsl
out
inc
push
push
mov
inc
inc
js
xor
jmp
sbb
ljmp
fsubr
fs
es
std
lods
xor
push
icebp
push
mov
mov
pop
jo
xchg
dec
pop
leave
pop
popf
addr16
jle
loope
sub
xchg
mov
rorl
pop
jge
shrl
lcall
insb
mov
or
jl
mov
fdivl
jl
pop
mov
aad
nop
push
xor
hlt
addr16
fmul
or
sbb
jne
in
popa
cmpsl
outsb
xor
mov
test
ret
push
fdivrl
xchg
loopne
mov
ret
pop
cld
add
jmp
cmpsb
arpl
pop
jmp
and
dec
aam
ret
sub
arpl
add
scas
rcll
dec
push
mov
leave
sbb
mov
movb
dec
movsl
push
push
xlat
ljmp
mov
out
xor
pop
adc
popf
rorb
cli
test
push
test
xchg
das
lods
add
call
cmp
clc
out
insb
cmc
xchg
mov
jo
cmp
aas
imul
call
imul
fidivl
fidivl
popa
and
jecxz
test
icebp
push
push
sbb
fnstenv
shll
mov
adc
xor
mov
popa
call
aaa
jbe
jne
xor
cs
loopne
push
jae
cmp
enter
push
aas
mov
jne
push
fadd
sahf
adc
lcall
jge
sub
lret
dec
out
push
dec
stos
sbb
mov
jle
pop
fs
jecxz
sti
loope
test
push
or
ja
roll
cmp
movsb
stc
adc
mov
push
out
scas
mov
or
dec
push
push
jle
xor
or
cmp
pusha
repnz
lret
pop
xchg
sbb
cld
jp
mov
jge
mov
xchg
xchg
or
xchg
loope
ljmp
inc
inc
add
ss
pop
xor
std
push
jb
aam
leave
jo
mov
sbb
cmp
loop
dec
push
cmpsl
hlt
test
sub
stos
jbe
aam
push
insb
incl
pop
notl
ret
in
out
fsubrl
aam
mov
xchg
jle
mov
xchg
add
fildl
xor
push
jmp
xchg
enter
sbb
call
test
hlt
popf
bound
jae
push
or
sbb
sub
sbb
dec
cmc
jno
or
cld
and
fwait
arpl
and
push
pop
lods
outsl
adc
jg
ficoml
add
int3
andl
sahf
in
sti
sti
dec
mov
dec
sbb
adc
jg
lea
mov
mov
pop
cmp
jecxz
inc
add
sarb
mov
loope
pop
dec
mov
js
or
or
pop
insb
je
jns
push
and
js
int3
jmp
and
lret
push
out
clc
daa
and
into
aam
dec
subl
sti
pop
adc
out
iret
mov
mov
jmp
incl
inc
inc
lahf
bound
xchg
lods
jle
mov
mov
inc
jbe
andl
or
sub
adc
mov
ret
into
aad
mov
inc
jns
cmp
movsl
testb
jle
subb
shlb
fnstsw
inc
arpl
jg
hlt
mov
out
test
mov
int
rcrl
testb
es
les
mov
sub
dec
roll
cmpl
cmc
addr16
sbb
jle
jle
add
adc
push
sub
das
pop
inc
cmp
je
cmp
push
mov
js
nop
negl
jno
push
mov
ja
scas
and
sub
orl
inc
adc
cwtl
decb
mov
add
mov
out
jno
pop
mov
js
cmc
sbb
sahf
pop
cld
test
xchg
ds
dec
jo
jo
cmp
xchg
jo
sbb
lret
loopne
addl
add
idivb
xchg
push
stos
rcrl
add
in
ja
dec
inc
fstpt
sub
pop
push
neg
jno
aas
sahf
or
aam
cmpsb
dec
out
mov
lcall
lcall
adc
in
add
dec
push
call
sub
cmp
movsl
std
insl
sbb
lods
add
lret
or
lods
inc
xchg
or
mov
push
cmpsb
sbb
fdivl
call
pop
mov
push
nop
xor
inc
test
or
sub
xchg
outsl
inc
ficomps
jl
fdivrs
fistpl
loopne
sub
dec
iret
repz
pop
mov
insb
push
cmc
nop
data16
inc
fiaddl
jae
jns
repz
and
jbe
pop
cld
mov
in
in
xchg
add
in
mov
mov
mov
fildll
stos
and
cs
xchg
xchg
imul
popf
adc
sub
dec
jl
rcl
in
lcall
xchg
test
xchg
push
fisubs
in
cli
push
imul
cmpl
adc
jmp
sbb
cltd
std
push
xchg
dec
pop
mov
push
hlt
int
push
in
add
dec
mov
jb
jecxz
lods
in
dec
pop
mov
push
ds
xor
jl
pusha
dec
sub
mov
cltd
fldl
push
mov
or
pushf
push
xchg
mov
pop
scas
sub
jo
dec
fidivrs
mov
aaa
mov
adc
and
mov
adc
jb
mov
sub
cmp
out
fcoml
out
lods
hlt
jl
icebp
movsb
pop
mov
nop
pusha
or
add
mov
dec
xlat
pushf
xchg
aas
ret
mov
inc
jge
pop
sarb
shlb
shl
jbe
fadd
std
push
dec
hlt
mov
mov
lea
mov
and
xor
fidivs
jg,pn
cli
mov
lret
loop
nop
push
test
scas
imul
mov
or
dec
add
lcall
xor
jbe
ss
ret
fninit
jecxz
lret
xchg
movsb
or
adc
insb
jle
xor
rcr
dec
cmc
mov
cli
xchg
xchg
ljmp
das
es
cmp
imulb
and
mov
jp
xorb
or
es
adc
adc
mov
and
jge
xchg
test
mov
lods
ja
pop
add
jg
fimull
sub
repnz
cmp
cmpsl
in
mov
mov
jle
pop
das
lock
sets
xchg
dec
jmp
outsl
sbb
push
out
subl
cmpb
mov
mov
cmp
or
sbb
xlat
insl
mov
cmpl
ret
mov
sub
dec
pop
sub
into
mov
mov
mov
xlat
dec
mov
outsl
xchg
adc
mov
sbb
inc
sarb
jp
incb
das
shlb
mov
push
add
ficoml
into
scas
add
inc
mov
lret
jne
push
scas
mov
in
mov
adc
xchg
arpl
inc
xor
jbe
out
popf
mov
insb
jnp
or
leave
fwait
mov
sbb
xchg
das
mov
int
cmc
or
cmc
pop
cmp
jno
pop
push
lcall
sbb
adc
jmp
insl
xadd
ret
loop
cmp
inc
xorl
cltd
sbb
or
adc
cld
xchg
popf
hlt
push
nop
dec
and
in
cmpsb
push
call
add
mov
std
std
das
insl
jge
mov
cs
shll
mul
jno
ljmp
xchg
push
push
mov
mov
xor
pop
pop
dec
add
cmp
out
loopne
cwtl
daa
cmp
test
in
jp
adc
dec
inc
insl
add
icebp
cmc
shll
mov
shrb
cltd
movsb
lea
movhps
lret
arpl
loopne
test
sahf
lods
loopne
or
loopne
push
cmp
dec
int
rcrl
data16
je
pop
repnz
imul
jo
enter
sbb
dec
out
orb
pop
gs
inc
xlat
or
sub
push
pop
les
cs
jle
lea
push
cmp
add
out
fistl
push
mov
out
cmp
nop
rcrl
mov
outsb
cwtl
imul
jl
in
pop
test
stos
jno
and
add
popf
pop
test
into
and
ror
icebp
call
adc
inc
aad
lods
shll
push
sub
test
mov
lock
jge
cmp
pop
int3
push
sbb
pusha
ss
mov
lods
xchg
ja
pop
sub
and
add
push
xor
out
pop
ljmp
es
addb
jne
ret
nop
xchg
rcrl
rolb
int
jne
push
std
dec
shll
lret
push
xor
jp
dec
mov
or
aad
cmp
mov
cmpsl
fucomp
fdivs
call
sbb
jno
sub
cld
outsl
ds
imul
xor
daa
cmp
testl
adc
pop
std
out
shlb
or
mov
jmp
aad
jne
xchg
sub
cltd
pop
rorb
movb
push
gs
jo
add
xor
mov
iret
mov
adc
or
imul
lret
imul
xchg
into
fisubl
jnp
fstl
out
ja
lods
mov
mov
insb
adc
push
or
mov
mov
stc
cli
xor
xchg
int
stos
adc
sbb
pop
jae
popa
lcall
popf
add
sub
test
xor
addr16
xchg
mov
xor
in
aas
or
pop
call
xchg
addr16
psubsw
pop
xchg
insb
or
test
pop
jmp
push
xor
xchg
jns
ret
outsb
pop
in
sbb
mov
add
xorl
xlat
pop
out
or
repz
fwait
xor
push
ljmp
fimull
iret
xor
fcomip
adc
gs
add
movsb
xchg
pusha
pop
sub
sbb
popa
and
call
movsl
mov
inc
jmp
hlt
xorl
fdivrl
cmp
add
xor
xor
repnz
fistpll
mov
or
sub
pushf
add
mov
pop
mov
lea
mov
xor
push
fists
test
data16
je
js
fcoms
icebp
or
les
jnp
fistps
xchg
mov
sbb
lods
cmp
mov
imul
sub
or
sbb
push
cmp
hlt
sub
xchg
push
inc
lods
cli
add
sub
sub
mov
mov
gs
int3
and
pop
sbb
ret
sub
push
mov
lret
movsb
rcll
enter
xchg
push
or
fbstp
out
add
stos
mov
lret
cs
sub
push
jle
and
push
xorl
ljmp
sbbb
rcl
mov
adc
mov
mov
shlb
jb
lret
pop
sar
cld
fwait
sub
fsubp
clc
sbb
and
add
xlat
lahf
add
arpl
lea
push
cltd
nop
jmp
das
cmp
sub
cmp
adc
xchg
pop
insb
cmc
or
outsb
xlat
pop
xor
push
sbb
jg
pop
lcall
cwtl
and
cwtl
mov
push
arpl
push
repnz
push
add
outsl
aaa
fiadds
push
mov
cmp
add
push
in
cmpsb
cmp
cmpsb
int3
sbb
mov
in
daa
in
add
pop
xor
add
cs
push
push
nop
cmp
imul
xchg
int3
lock
mov
ret
inc
pusha
xlat
push
scas
xor
sbb
sbb
jbe
pop
subl
into
sbb
leave
mov
jg
lcall
push
sbb
pop
rolb
shll
mov
ds
insb
adc
sbb
loope
stos
sbb
cmpps
mov
push
pop
add
cld
xchg
test
scas
imul
cmpsb
jg
push
nop
bound
nop
sub
shrb
inc
stc
scas
and
enter
in
and
pop
loope
or
popa
inc
aaa
hlt
mov
cwtl
add
andb
ljmp
aam
test
pusha
pop
scas
mov
ror
sahf
adc
adc
jge
scas
mov
lret
sti
jne
out
sbb
pop
jno
cmc
sub
addr16
xchg
repz
loope
inc
cmc
sbb
jae
adc
jmp
and
inc
add
mov
push
push
hlt
sbb
repz
fs
jae
dec
and
lret
pusha
lret
cmp
pop
cmpsb
dec
ja
dec
push
sub
cmp
mov
sub
pop
scas
pop
ds
push
in
fsubp
adc
lcall
sub
xor
and
pop
or
cltd
mov
das
lods
pop
out
aam
or
fcmovnb
pop
iret
fcmovnbe
pop
add
popa
jecxz
jge
pop
sbb
xchg
and
dec
fadds
out
call
adc
push
mov
mov
out
cmpsl
inc
add
fbstp
lea
fnstenv
enter
sbb
or
rcll
jp
mov
rorb
fistps
pushf
cwtl
xchg
in
cmpsl
cwtl
adc
popf
mulb
or
addb
push
test
repnz
lcall
insb
cmp
inc
int
loope
daa
into
icebp
dec
adc
fistps
xchg
outsl
or
fildll
mov
xor
xlat
shl
and
push
fidivl
fsubrs
dec
scas
inc
push
cmp
push
inc
push
subl
repz
add
stos
rolb
arpl
sbb
mov
cld
mov
inc
mov
cmp
mov
dec
popf
daa
loopne
adc
or
lods
xlat
je
inc
gs
mov
mov
xchg
sub
cld
ja
mov
mov
popa
push
and
int
xchg
or
inc
push
pop
jnp
loop
xor
pop
mov
lahf
jns
mov
mov
leave
or
mov
ljmp
pop
shl
testb
jg
movsb
insb
pop
popa
mov
sbb
icebp
mov
mov
int
pushf
imul
loope
movsl
mov
lods
sub
adc
mov
sahf
and
fldt
movsb
filds
xor
test
sti
or
sub
sub
pusha
pop
insl
cmc
push
add
inc
or
in
enter
lret
rcrl
xor
jb
scas
mov
stc
mov
jp
lds
mov
movsb
mov
aad
mov
mov
in
outsb
scas
jp
push
mov
mov
and
sbb
dec
dec
cmp
stos
out
stos
arpl
ror
cmp
jbe
push
push
adc
xor
std
or
adc
push
xor
mov
int3
es
fstl
sub
std
hlt
mov
pop
push
xchg
roll
or
mov
dec
mov
aas
cmp
lods
fadds
push
or
dec
shll
mov
pop
fwait
inc
push
or
aaa
mov
jo
xor
fwait
push
pop
mov
or
out
xchg
sub
std
adcb
stos
inc
loope
mov
mov
or
subb
outsb
inc
rorl
fmull
test
jb
xor
lea
push
jl
popf
cmpsb
pop
jp
xchg
out
cmp
push
aaa
push
std
outsl
mov
mov
fsubrl
sub
in
mov
pop
hlt
add
outsl
jbe
sti
mov
push
in
xchg
mov
or
jo
pop
xchg
sbb
push
push
mov
push
mov
add
mov
lret
sahf
xor
cmpsl
test
stos
and
jns
mov
scas
and
fcmove
shrb
mov
stc
sbb
orb
gs
in
mov
dec
dec
jge
xorb
insl
in
lods
fsubrs
mov
jmp
xchg
inc
mov
js
push
aaa
push
push
mov
cmpb
adcb
add
mov
inc
pusha
xorb
les
sarb
jge
ret
cmp
ds
lcall
aaa
push
mov
mov
cmp
mov
les
push
or
fstps
xor
test
out
push
mov
jp
cmp
dec
inc
mov
mov
or
das
insl
mov
dec
push
xor
push
push
add
dec
shrb
push
xchg
lods
add
fs
and
xchg
test
or
imul
xor
mov
les
ret
test
movq
add
cs
subl
push
sub
test
xchg
into
in
mov
sbbl
enter
and
lds
sbb
sbb
pop
es
mov
out
lods
js
rolb
push
iret
negl
mov
outsb
sbb
inc
daa
push
js
icebp
mov
sbb
mov
adc
jmp
das
nop
or
rol
ds
xor
mov
mov
jp
imulb
loopne
and
dec
mov
mov
stc
nop
in
aam
mov
and
inc
fldenv
push
hlt
push
adc
aas
adc
fucomi
inc
dec
dec
loop
je
shll
dec
imul
rcl
push
add
push
out
xor
xchg
sarb
sahf
xor
xor
or
mov
mov
insl
cld
emms
xchg
mov
xor
adc
pop
mov
sbb
jge
dec
sbb
js
xchg
xor
cmpsb
ljmp
arpl
xor
std
test
and
pop
xlat
std
adc
mov
jno
orb
js
cmp
fstl
fs
cmpb
or
pop
out
outsl
popf
push
test
es
addb
mov
and
js
xor
sub
jp
out
pop
add
es
pusha
dec
add
mov
adc
je
iret
jp
and
sub
rolb
mov
imul
ret
roll
xchg
lahf
pushl
lea
clc
rcl
push
add
mov
lock
fwait
out
jmp
or
xlat
mov
sti
inc
dec
movsb
push
and
imul
pop
filds
ss
push
shlb
sub
fdivs
ds
cmp
cli
fimull
mov
mov
cmp
inc
inc
cs
add
lock
sub
mov
pusha
lahf
jle
outsb
shrb
fcmovnu
and
pop
xor
ds
les
in
fst
lods
ljmp
and
gs
fwait
jb
dec
cmp
dec
stos
xchg
ret
xor
inc
pop
cmc
or
lock
outsl
cs
jecxz
jo
push
out
fistl
jg
je
jne
xor
mov
ficoms
pop
push
hlt
lret
lret
cmp
outsl
daa
dec
push
gs
push
hlt
int
aas
ss
pushf
jmp
dec
inc
inc
aas
rcr
into
push
jno
push
or
mov
jo
inc
nop
stos
sti
or
xchg
cmp
push
icebp
jns
push
xchg
xchg
xchg
pop
movsb
lcall
mov
push
fwait
push
je
arpl
adc
icebp
cmp
insl
fwait
stc
pop
into
idivb
jge
and
ja
push
inc
push
sub
lret
mov
jno
sbb
fidivrs
add
int
shll
test
popa
movsb
jl
lea
jmp
cmc
clc
adc
adc
adcb
cmp
pop
xchg
sahf
xor
xchg
sti
and
int3
rcrb
pop
dec
addl
sahf
movsb
aas
mov
aaa
inc
and
fmuls
cmp
rcl
mov
faddl
pop
adc
fists
cmpl
push
testl
push
dec
mov
mov
and
inc
adc
jne
fistpll
rcrl
add
movsb
mov
cmp
loop
sbb
push
iret
xor
sub
xchg
fiaddl
cmpsl
bound
fldl
jae
sub
mov
cmpl
and
pop
push
mov
xchg
inc
xchg
sbb
pop
mov
jmp
test
inc
repz
repnz
inc
fs
sbb
out
gs
mov
fisttpl
jne
pop
jle
mov
cmp
xor
fstpl
and
mov
xor
scas
cltd
addr16
xchg
xchg
cmc
cmp
mov
mov
adc
int
sub
cmpsb
cpuid
push
adc
mov
mov
adc
inc
push
pop
jp
je
stc
movsl
add
add
rorl
fdivl
aas
xchg
and
mov
cmpb
sbb
mov
mov
insl
push
int
mov
fisttps
leave
pop
ss
push
dec
out
dec
sahf
xlat
pop
add
out
xor
cmpsb
decb
and
sahf
lcall
hlt
out
jo
xchg
lods
or
stc
cmp
lcall
mov
mov
test
inc
mov
fsts
js
xchg
in
push
pop
xor
daa
fldl
cli
fwait
aam
int3
cmp
cmc
mov
fdivr
pushf
push
dec
jmp
jl
ljmp
fmul
sbb
mov
dec
pop
shrl
orb
gs
sbb
aad
and
int3
push
inc
sbb
dec
mov
cs
sub
cmp
cmp
xor
adc
cmpsb
mov
xchg
cs
clc
imul
stc
and
adc
das
roll
imul
cli
cltd
xor
push
outsl
add
icebp
adc
repnz
in
aas
cmpsb
stos
mov
into
push
inc
lock
pop
in
pop
pusha
cmp
arpl
and
mov
dec
cmp
test
mov
ljmp
imul
jg
mov
mov
and
xchg
arpl
scas
ffreep
adc
and
shlb
xchg
scas
jp
or
fildll
adc
mov
and
out
xor
cmp
sub
notl
psubb
mov
iret
and
popa
ficomps
mov
xchg
push
mov
pop
jg
stos
inc
jmp
sbb
jnp
dec
in
scas
pop
imul
into
mov
dec
mov
loope
cmc
fnsave
movsb
mov
cmp
dec
out
imul
jo
mov
aaa
and
pusha
or
arpl
outsl
mov
xlat
adc
ret
mov
pop
adc
clc
out
sub
mov
scas
sub
loope
and
push
xor
jb
pop
push
inc
xlat
lods
xchg
lcall
push
xor
call
mov
push
mov
push
cltd
std
cmp
aad
mov
xchg
shlb
push
push
cmp
xor
enter
xchg
inc
pusha
sub
mov
cli
mov
jno
and
inc
pop
mov
fiadds
xchg
das
cmp
cltd
adc
add
aam
js
and
push
lahf
inc
xchg
pop
cmc
leave
pop
fwait
and
mov
rcrl
leave
or
imulb
aad
mov
and
enter
mov
mov
ret
mov
add
std
xchg
mov
lahf
nop
xor
xor
cmpsl
imul
jp
notb
inc
pop
test
xchg
filds
les
ja
and
inc
mov
imul
lret
out
das
aad
cmp
pop
shll
fs
pop
outsb
enter
fnstsw
or
push
sub
std
pop
stos
les
mov
push
ja
outsl
mov
mov
cmp
adc
mov
adc
sbb
mov
fnstcw
shrl
lea
dec
or
dec
jg
pop
es
xchg
ja
outsb
mov
fwait
scas
int3
pop
ret
loop
leave
mov
pop
push
das
or
mov
jge
lret
scas
aad
jg
add
enter
movsb
jb
lret
popf
pop
aaa
sbb
in
sub
dec
push
in
dec
push
push
out
bound
cmp
xchg
lret
cld
ror
push
push
lret
inc
cmpsl
ret
jecxz
in
out
push
mov
pop
and
sti
xchg
leave
sub
cmp
xchg
and
test
jecxz
repz
jns
aad
push
mov
call
cmp
push
inc
mov
je
jae
mov
aas
repz
xchg
sub
andl
sbb
inc
cmpsl
setnp
mov
into
out
jecxz
int3
inc
xlat
mov
fwait
jae
xchg
xchg
dec
add
cmp
cmp
cmp
ds
aas
adc
fwait
adc
jne
mov
fsubs
jmp
and
outsl
adc
les
mov
aad
ja
es
push
arpl
cmpxchg
shlb
or
dec
ja
ljmp
fnstcw
out
popf
cmpsl
out
lea
fcom
jmp
shr
mov
loop
cmc
imul
lcall
cmpsl
sbb
outsl
stos
ret
push
bound
sarl
xorl
rolb
xor
addr16
jnp
fcmovnb
inc
test
rol
sti
jg
inc
test
clc
mov
cwtl
aam
cwtl
mov
lea
sub
fucomi
shll
jg
xor
add
xor
jno
popf
scas
stos
sbb
jno
inc
jle
js
adc
dec
mov
mov
or
rorl
and
test
mov
sbb
xorl
dec
loope
sar
mov
push
aaa
pop
pop
and
inc
negl
jae
out
lret
aad
push
cmp
ds
in
dec
xchg
ret
daa
or
jb
mov
adcl
dec
jo
or
mov
add
xlat
mov
adc
pop
cltd
push
or
jns
addr16
pop
sub
lret
pop
scas
add
jae
and
lock
adc
inc
or
fs
xchg
and
mov
xor
stos
jno
xchg
xor
pop
lods
or
scas
xor
popf
jmp
sub
xor
xchg
pop
leave
pusha
dec
mov
add
push
mov
xor
sub
push
xlat
xlat
mov
test
inc
ds
adc
rcll
pop
lock
mov
adc
xchg
mov
fsubr
in
movsl
icebp
inc
ds
popf
cmp
xchg
in
xchg
jmp
cmpsb
les
push
jae
das
or
aam
out
test
dec
push
testb
push
clc
xchg
pop
loopne
cld
sub
pop
push
mov
pusha
xchg
sbb
or
into
fwait
sub
sahf
cmpsl
in
notl
shl
lods
imul
mov
lods
mov
repnz
inc
loop
das
sub
xchg
inc
scas
cltd
out
push
test
mov
daa
inc
mov
je
push
xor
push
push
xor
push
mov
jecxz
gs
push
push
insb
incl
sbb
or
loopne
sahf
cmc
and
push
es
mov
xor
pop
pop
repnz
and
mov
mov
hlt
jnp
sti
insl
cmpsl
fdivr
mov
or
mov
sub
pushf
inc
fimull
arpl
and
lret
arpl
or
adc
int3
mov
push
popf
inc
cwtl
sbb
movsb
fs
out
mov
sahf
add
xor
cmp
lcall
out
int3
mov
cli
lret
call
divb
loope
and
or
pusha
in
andb
mov
xchg
add
orb
cs
icebp
aam
out
xchg
std
pop
scas
movsl
movsb
in
imul
jecxz
aam
insl
xchg
lea
and
mov
stc
push
mov
jle,pt
shrb
cmp
aas
sub
js
dec
inc
pop
mov
cmp
or
xor
jnp
adc
and
mov
jl
push
or
test
xchg
jmp
inc
std
mov
sbb
repnz
sarl
mov
add
cmp
rolb
push
fnstsw
les
dec
das
adc
aam
jno
inc
loop
adc
bound
inc
dec
sbb
hlt
arpl
inc
xchg
inc
arpl
test
add
mov
mov
mov
mov
jmp
add
add
mov
cmp
inc
loop
and
je
mov
inc
icebp
inc
add
je
dec
adc
daa
test
adc
insb
push
call
sbb
outsl
or
int
jmp
insb
arpl
stc
xchg
ljmp
popf
sbb
fwait
scas
inc
lret
pop
fwait
pop
int
xchg
adc
add
jmp
scas
test
stc
adc
xlat
dec
mov
inc
jp
fs
es
push
adc
cmp
sbb
fldenv
dec
push
call
inc
in
cmp
dec
push
fsub
fs
xchg
pop
in
mov
jmp
and
push
notl
push
push
sub
sub
es
sub
fs
pop
loope
xchg
jbe
fldenv
je
sub
sbb
pushf
in
les
notl
outsl
mov
jge
jecxz
decl
addr16
mov
flds
jnp
subb
leave
je
xor
arpl
scas
mov
fadd
mov
sbb
and
mov
or
mov
jns
jne
cmp
mov
pop
cwtl
sbb
sbb
call
mov
mov
mov
ljmp
shrb
pop
pop
insl
jle
sub
mov
push
inc
out
les
xor
sbb
inc
xor
ret
push
rcll
clc
ret
lods
iret
jecxz
outsb
mov
dec
xor
subb
out
sub
test
push
jb
orl
mov
cmp
xor
in
andb
outsl
movb
fdivp
adc
xchg
sub
dec
mov
loope
xor
jae
push
mov
dec
mov
adc
sbb
add
jb
jno
pop
sbb
jmp
leave
int
or
adc
pop
aaa
sub
pusha
call
mov
adc
int
mov
sbb
ja
sbb
dec
add
aam
sub
xor
cmp
das
jb
aaa
stos
data16
mov
xchg
cmp
inc
mov
jns
or
xchg
push
dec
mov
mov
cli
and
insb
sti
push
std
popa
subl
int
and
sbb
xchg
test
mov
inc
dec
loope
and
icebp
movsl
mov
inc
aaa
fnstenv
push
jg
xchg
mov
cmp
add
rolb
push
arpl
xchg
js
loopne
or
pop
bnd
imul
push
xchg
repz
jp
lods
dec
sub
cli
sub
add
dec
nop
push
lcall
ljmp
pushf
cli
pop
sbb
mov
xchg
fcmovne
dec
shlb
das
movsb
aas
mov
fdivs
cmp
stos
scas
test
test
or
repz
mov
xchg
loopne
scas
es
xchg
lods
inc
or
inc
and
addr16
cs
jge
mov
das
push
or
jl
dec
or
add
emms
std
fwait
or
xchg
js
dec
cmp
mov
in
sbb
in
push
xor
decb
idivb
xchg
aas
push
aas
scas
pop
movsb
dec
dec
jge
movsb
lcall
jno
ficoml
push
mov
mov
lret
rcl
aam
das
repnz
int
sub
cld
push
clc
test
dec
cmpsl
ds
sub
test
sarb
and
ficomps
pop
dec
scas
jg
xchg
pop
sub
aam
rcrl
ret
pusha
mov
pop
mov
hlt
and
mov
pop
dec
dec
mov
mov
clc
adc
inc
add
into
pop
lcall
enter
xchg
rclb
imul
fnstcw
mov
mov
pop
xor
mov
and
push
fdivs
ja
xchg
std
inc
fsubrl
nop
jne
push
arpl
cmpsb
adcl
and
and
emms
test
xor
and
or
cltd
pop
lock
and
pop
jae
sub
mov
dec
mov
outsl
inc
push
pop
and
and
sub
cmp
adc
mov
js
leave
dec
xor
jg
movl
divb
fsubp
dec
sub
aas
dec
test
sbb
test
sti
or
dec
test
inc
sub
imul
xchg
lret
push
sub
dec
pop
dec
xor
insb
arpl
cmpsb
pop
cmpb
push
xor
lcall
mov
inc
and
push
and
cmpsb
fildl
ja
adc
pop
sub
xor
jp
cmpsb
pop
movsb
xlat
mov
lret
mov
ljmp
das
dec
mov
or
xchg
lock
out
addps
dec
fbstp
cmp
jbe
shrb
mov
sub
dec
out
jbe
dec
daa
movsb
cmp
ljmp
cmpsl
shr
addl
push
push
xor
scas
stc
xchg
mov
lcall
or
jmp
cmp
cmp
arpl
fwait
xor
sbbb
add
faddl
scas
xor
dec
fcomp
push
add
gs
dec
add
aam
out
jge
adc
jbe
addr16
test
popf
sti
xchg
inc
leave
xchg
in
and
js
push
sbb
mov
neg
imul
xchg
mov
gs
cmp
and
icebp
adc
shlb
mov
or
in
lcall
mov
das
subl
fdivrl
jne
inc
pop
inc
jb
rolb
and
pop
mov
loope
xchg
lods
and
enter
pop
test
decb
das
test
push
clc
jl
sbb
adc
add
bound
nop
bound
in
pop
mov
jae
jp
and
sbb
cs
mov
je
inc
notl
inc
push
sti
mov
lret
fs
adc
sbb
sar
cmpsl
imul
enter
insb
imul
icebp
insb
jg
pop
mov
jp
inc
xlat
outsb
jns
adcl
cmp
loop
js
ljmp
sbb
push
bound
ret
dec
out
mov
movsl
mov
pop
mov
mov
xchg
aad
enter
scas
lods
inc
dec
in
int
int
jecxz
mov
lahf
push
in
shrb
pop
mov
pop
ljmp
call
pop
testb
xchg
jecxz
or
push
movsb
mov
fcomp
inc
in
sub
fs
sbb
and
add
fcoms
mov
mov
mov
or
decl
sbb
cwtl
pop
fiaddl
mov
push
loopne
or
sbb
mov
sarl
jbe
mov
jle
jmp
cmpsl
xchg
or
dec
inc
sub
out
rcrb
mov
jne
mov
cld
pop
test
mov
jg
sub
loop
xor
in
icebp
push
jae
fwait
out
scas
xchg
add
in
inc
shrl
pusha
ficompl
sub
int
enter
pop
pop
mov
daa
cli
adc
fsubrs
lret
std
or
jnp
aad
add
ret
iret
lds
jle
not
push
popf
mov
loopne
pmullw
jo
out
mov
lahf
xchg
cmp
inc
out
dec
les
in
sub
inc
jns
cld
pop
xor
adc
repnz
outsb
mov
and
push
inc
pop
push
fistl
xorl
dec
loop
mulb
lea
inc
xor
out
and
jg
pop
out
in
loope
or
orb
hlt
icebp
jne
sub
lds
mov
pop
mov
sbb
fcmove
ss
in
push
jo
lods
adc
add
dec
or
mov
cli
sbb
repz
arpl
imul
rorb
lret
es
jg
sbb
mov
xor
fidivrs
jecxz
mov
fisubrs
popf
loop
pop
data16
call
aaa
enter
push
inc
pop
xchg
ret
insl
fwait
xor
push
cmpsb
test
push
mov
stc
pop
addl
mov
out
jns
sbb
sub
jmp
bound
and
xchg
stos
orb
sub
mov
out
mov
cmp
es
mov
xlat
and
xchg
cmp
push
mov
fs
mov
pop
mov
push
mov
adc
add
lret
sub
xor
clc
inc
add
mov
inc
adc
and
add
push
sub
xor
into
mov
mov
mov
rcll
sbb
sub
xor
push
iret
loopne
je
lds
sbb
cmp
push
sbb
test
mov
clc
sahf
orb
js
mov
mov
lea
xor
pop
scas
orb
rol
loop
pop
ja
rcrl
xchg
shl
aas
mov
loop
outsb
aad
push
jne
mov
cmpsl
jns
adc
mov
sbb
jns
decb
mov
jp
mov
in
sbb
pop
jne
mov
into
gs
addr16
mov
sahf
sbb
mov
cld
stos
pusha
cmp
cmp
jno
lahf
out
mov
test
push
fmull
jl
mov
mov
push
push
mov
jmp
aaa
cmp
mov
jbe
jp
xchg
fiadds
lahf
int
pop
xor
push
leave
ljmp
pop
mov
mov
imul
ljmp
cwtl
scas
lods
mov
sti
xchg
push
sahf
dec
push
mov
mov
scas
scas
fisubrs
orb
dec
lret
xchg
fdivl
imul
mov
adc
mov
cmp
push
sahf
dec
cli
xchg
push
inc
mov
das
sbb
pop
iret
lret
std
mov
mov
jecxz
or
mov
inc
jp
dec
int
std
insb
cmpsl
sbb
std
fwait
xlat
mov
cmpsl
push
lea
cmp
repnz
pop
jns
scas
popf
mov
lahf
add
adc
stos
cmp
lea
je
sbb
push
fwait
stc
pop
movsb
cmp
or
pop
xor
cmp
and
les
lret
faddl
test
add
cs
pop
add
mov
les
sub
loope
data16
jae
icebp
sbb
pop
decb
adc
das
inc
js
outsl
lods
cmpsb
sub
sub
adc
sub
or
jb
and
std
mov
test
enter
mov
and
scas
lret
push
int3
mov
jmp
jp
test
mov
gs
jb
cmp
in
sub
outsl
ret
pop
xchg
lea
xchg
cmp
mov
and
outsl
mov
ret
jbe
fldpi
mov
mov
or
mov
hlt
mov
pop
js
jnp
std
pop
pop
inc
xor
ljmp
inc
pusha
push
pop
scas
inc
pop
call
mov
scas
push
ret
daa
cmpsb
stos
adc
shl
aaa
cmp
dec
jmp
subl
sbb
lret
push
adc
pop
cmc
imul
push
mov
ficoml
or
cs
mov
jp
leave
mov
movsb
and
mov
push
mov
xchg
sub
xor
inc
dec
pushf
lret
adc
pushl
dec
adc
ss
aam
add
das
div
sbb
out
fwait
xor
xchg
clc
mov
fistl
aad
push
daa
inc
jne
xor
mov
popf
adcb
lret
mov
lock
fmull
push
lods
mov
pop
cld
mov
pusha
cli
cmpb
iret
inc
xlat
add
sub
dec
fcmovne
cmp
mov
fistpll
adc
mov
in
adcb
out
xchg
jp
sahf
inc
push
pushf
sbb
push
ffreep
pop
adc
mov
adc
daa
mov
push
push
inc
stos
test
mov
lds
xchg
dec
insl
roll
in
or
aam
dec
dec
pop
test
mov
es
lea
popa
xchg
movsb
cmp
jp
sub
int
mov
fmuls
dec
lcall
je
insl
lds
jge
push
dec
mov
aam
or
xlat
clc
sahf
pop
lret
jae
jmp
xchg
sbb
cwtl
imul
adc
repnz
inc
bound
ret
lods
shlb
pop
imul
cmp
mov
mov
inc
or
and
sahf
popa
aaa
mov
je
and
inc
stos
jo
pop
gs
clc
or
scas
and
adc
mov
jg
push
and
stos
das
das
push
cmpsl
xchg
sub
jne
fsts
cwtl
daa
cli
inc
aaa
pusha
out
andl
ss
push
movsl
rorb
orl
scas
xor
clc
mov
add
jg
in
fwait
scas
pusha
je
rcll
sarl
out
push
hlt
mov
inc
push
in
and
lea
adc
jle
sti
inc
pop
ljmp
stos
jge
cmpsb
adc
sub
mov
js
sub
cli
cltd
push
imul
xchg
repnz
mov
or
inc
out
fisttpll
jae
iret
sub
add
sub
nop
daa
jne
jl
jo
stc
nop
push
xchg
gs
in
std
bound
adc
cld
xchg
mov
aam
jno
dec
loope
inc
aas
aaa
jg
xor
cmp
jbe
sahf
in
adc
subb
pop
or
add
out
or
mov
xchg
call
mov
enter
sub
lret
bound
nop
xor
arpl
jg
les
push
cltd
aam
int
out
test
stos
mov
loop,pt
xor
and
mov
mov
cs
push
sub
add
mov
fwait
pop
xchg
xchg
ja
dec
xor
xchg
mov
push
inc
dec
pusha
movups
dec
mov
mov
sbb
sub
out
nop
and
push
mov
pop
shrl
cmc
pop
insl
cmp
or
in
in
test
push
popf
dec
loopne
std
pop
in
call
pop
xchg
repnz
jnp
mov
dec
test
fadd
in
inc
jl
cmp
pushf
cli
jae
fists
mov
and
scas
ljmp
cmp
mov
pop
test
mov
stos
xchg
cmpl
mov
cmpsl
inc
sahf
cltd
in
incl
push
ljmp
fldcw
dec
loope
inc
sbb
inc
fwait
xchg
in
xor
rorl
ret
inc
popa
xor
xor
push
push
into
xchg
jg
outsl
mov
dec
out
push
in
adc
inc
int3
add
xchg
dec
dec
mov
daa
adc
ror
iret
jecxz
jns
and
cld
cmc
push
xor
rclb
lret
push
addr16
gs
loopne
jle
test
cmpsb
ds
sub
xchg
push
outsb
mov
push
in
rorb
mov
fsts
xchg
mov
adc
scas
movsl
outsb
test
scas
or
cs
test
push
dec
cmp
cmp
mov
sarb
lods
popf
inc
ljmp
and
cmpsl
xchg
mov
mov
and
into
jns
arpl
mov
lds
jnp
jmp
cmp
cltd
imul
lock
sub
std
cmp
aaa
pop
adc
dec
adc
xor
rcrb
leave
push
mov
push
adc
xchg
cmp
xchg
add
add
pop
jle
cmp
fstpl
gs
jp
stos
shl
loope
jmp
cmp
sub
enter
into
dec
pop
sub
test
sbb
pusha
add
jns
movsb
stos
daa
add
mov
push
or
push
out
jne
fs
or
push
or
sbb
cmp
repnz
rorl
ret
jp
cmpsl
shrb
pusha
movsl
add
jle
xchg
mov
mov
jecxz
lea
bound
add
sub
jb
pop
push
add
lret
aas
or
stos
or
ds
data16
xchg
in
mov
adc
add
data16
cmp
fdivrp
cwtl
xor
stos
bound
je
dec
jb
in
xorb
ljmp
sahf
jne
mov
cmp
decl
cmpsl
ret
test
push
imul
jecxz
add
adc
xchg
decb
ljmp
mov
inc
or
repz
add
xchg
or
insl
imul
sbb
cli
or
enter
xor
cmpsl
out
jp
push
rol
aaa
mull
sub
adc
lret
and
fdivl
xchg
insb
test
adc
inc
xrelease
inc
fisttpll
dec
or
pop
cmp
jl
mov
js
enter
lods
dec
loop
sub
inc
xor
imul
mov
jae
lahf
test
movsl
xor
dec
inc
dec
mov
out
aad
stc
addr16
and
xchg
push
rcll
mov
push
adc
pushf
add
es
fadd
mov
pop
cmpsb
lahf
test
leave
lahf
jae
xchg
push
test
ljmp
dec
rcrb
xorb
and
pop
sub
mov
sub
repnz
mov
pop
clc
pop
push
test
ret
sub
leave
loopne
shrl
ret
les
mov
xchg
ss
stos
mov
int3
xchg
pop
lods
stos
mov
xor
push
mov
mov
pushf
int3
loopne
pop
lds
and
fs
mov
pushf
jo
pusha
xor
rclb
and
pop
adc
stos
mov
sbb
test
pop
pop
xlat
addl
xlat
sub
popa
out
iret
inc
jmp
rclb
scas
xchg
cmp
jae
add
pavgb
shlb
pop
mov
bnd
mov
and
sbb
inc
das
out
test
mov
insl
dec
popf
hlt
sub
mov
xchg
adc
repnz
insl
xor
push
stos
cmpsb
mov
xor
jge
dec
jecxz
adc
inc
xor
mov
jg
jne
and
cmp
xchg
push
icebp
lcall
xchg
lock
xchg
pop
xor
loop
orl
fcomps
test
fcomip
int3
roll
add
pxor
dec
pushf
sbb
pop
jmp
push
or
jns
xor
lea
scas
test
cmp
shrb
mov
negb
loope
test
pushf
inc
aad
dec
aam
sti
and
insl
inc
test
add
cltd
or
add
inc
xchg
testb
inc
or
add
andl
test
mov
xchg
xchg
rol
lahf
mov
xchg
cmp
loope,pt
adc
jg
mov
jnp
rcrl
cmp
cmp
sahf
ret
in
repnz
push
cmp
out
push
loope
jmp
lock
dec
aaa
xchg
or
scas
cmp
or
jbe
daa
data16
inc
dec
dec
out
jnp
stos
inc
push
push
loop
outsb
cmpsl
ds
mov
pop
xor
enter
sbb
dec
cmp
pop
lret
dec
iret
gs
insl
pop
cmp
in
xchg
pop
pop
imul
mov
xchg
ja
test
lods
movsl
jnp
xor
add
popa
testl
jno
pop
xor
sti
adc
ficoms
push
cwtl
insl
rol
mov
mov
sbb
inc
inc
fwait
jo
pop
aaa
xor
cli
cli
sbb
addl
mov
pushf
jne
cwtl
sahf
sbb
mov
aam
sbb
xor
std
push
test
testb
inc
mull
dec
in
in
mov
ss
cmp
ljmp
cmpsl
stos
xor
lea
dec
shr
ja
xchg
mov
pop
xor
pop
xor
jb
jae
mov
stc
lods
or
shrl
xchg
gs
or
mov
ficomps
stc
and
xor
cwtl
cmp
dec
ss
shll
in
adc
je
gs
fsubrp
push
lods
testl
jg
mov
pusha
adc
and
sbb
pop
push
in
stos
and
mov
imul
dec
mov
mov
inc
pop
dec
imul
andb
lea
inc
or
in
mov
popf
loope
push
add
mov
orb
icebp
into
insl
pop
imul
xor
mov
mov
fldenv
test
outsb
fcmove
lds
inc
shl
sub
mov
mov
jmp
dec
cmp
movsl
cmp
mov
xor
xor
in
or
cmpsb
push
call
movsb
or
mov
dec
shr
dec
inc
sti
xchg
out
mov
xchg
lods
push
mov
mov
sub
and
mov
adc
test
aad
mov
aas
dec
xchg
or
loope
aas
pop
xchg
sbb
sbb
clc
lret
nop
xor
out
data16
jns
mov
and
stos
icebp
xchg
and
xchg
or
enter
inc
leave
jmp
jmp
or
mov
out
mov
dec
jne
mov
std
xchg
cmp
xor
dec
inc
bound
mov
decb
test
mov
rorl
bound
add
sti
xchg
sub
daa
popf
sbb
stc
or
lods
cmp
mov
cmpsl
sbb
pop
ss
cmpsl
gs
subb
adc
mov
lods
push
push
mov
popf
hlt
xor
pop
jg
dec
or
jnp
fisubrs
pop
adc
lret
dec
add
in
aas
rclb
testb
push
or
fwait
dec
adc
fcmovbe
add
dec
and
mov
adc
in
je
dec
adc
inc
stos
sti
mov
cli
xchg
mov
push
mov
test
in
cmp
mov
mov
xor
popa
call
cmc
pop
sbb
subl
repz
mov
push
lock
lcall
push
xor
and
push
fnstenv
dec
dec
ret
and
push
addr16
loop
xchg
add
inc
stos
xchg
jp
or
test
out
inc
andb
add
xchg
jge
sub
push
or
pop
mov
mov
cwtl
imul
out
push
outsl
aaa
stos
pop
stc
inc
lods
and
mov
in
outsl
push
xchg
clc
adc
mov
or
jmp
popa
add
aas
loope
and
mov
sub
cli
std
pushf
mov
jle
cmp
or
sub
pop
sbb
mov
adc
add
cmp
rcrb
inc
mov
push
inc
subl
pushf
xor
sbb
ljmp
inc
ljmp
testb
cwtl
lcall
stc
pop
pushf
cwtl
xor
fmulp
arpl
dec
adc
mov
sarb
or
flds
pop
adc
and
pop
push
inc
adc
std
jbe
aad
xchg
sahf
outsl
jne
pop
repz
out
and
cmpsb
hlt
in
cs
or
mov
or
out
and
pop
jb
inc
cmp
jg
cmp
inc
imul
sarl
dec
mov
pusha
dec
pop
xchg
jle
sub
mov
xchg
jo
aaa
cmp
adc
roll
call
pop
fnsave
scas
lret
int3
shrb
or
add
test
std
mov
out
into
inc
aas
add
lea
sub
popf
lods
jmp
call
leave
dec
or
sbb
mov
lods
mov
call
loopne
xchg
fwait
test
push
jge
insl
mov
outsb
jp
lods
hlt
mov
dec
mov
outsb
cld
inc
in
fistpl
in
ret
jno
repz
pop
ds
jb
stos
andb
adc
outsb
iret
push
test
lock
jl
dec
mov
lea
sbb
sbbb
popa
cmc
nop
xlat
insb
movsb
dec
sub
mov
push
pop
mov
push
jae
add
addr16
mov
rcll
nop
mov
pop
loopne
sub
add
mov
xchg
roll
xchg
outsl
test
sub
iret
mov
push
in
sub
fistpl
mov
or
lcall
repz
sbb
test
xor
and
adc
frstor
dec
mov
iret
adc
jb
mov
int3
pop
sub
insb
arpl
insb
dec
cmp
mov
out
scas
adc
sub
insb
mov
out
movsl
test
mov
xor
jne
mov
xor
or
mov
sahf
imul
mov
sbb
jmp
cli
xor
call
lret
in
rol
xchg
insb
mov
fldpi
jle
and
pop
cs
enter
sub
in
rclb
pop
aaa
jb
push
js
aad
mov
clc
scas
dec
aas
lcall
cltd
test
notb
enter
jno
rorl
xchg
fbstp
xchg
mov
jno
mov
push
out
sub
jl
cmpsl
mov
sbb
push
out
pop
and
or
out
pushf
xor
adc
push
xor
or
repnz
aas
adc
fiaddl
call
hlt
push
loope
mov
and
sbb
jmp
pop
ljmp
xchg
daa
loope
orl
popa
dec
jns
jo
adcl
add
mov
and
fucomi
xchg
or
push
sbbb
jno
icebp
shrb
mov
adc
xlat
cld
jp
test
outsb
xor
lea
cli
mov
mov
clc
mov
dec
popf
adc
dec
pop
aas
ljmp
stos
push
push
movsb
into
fxch
imul
pop
sbb
pop
inc
scas
mov
pop
repz
mov
sub
push
push
lcall
test
scas
sub
out
mov
cmp
mov
shl
in
cwtl
push
push
in
das
fs
mov
inc
mov
in
andb
mov
daa
cld
aas
push
mov
xchg
xchg
outsl
sbbb
lret
push
sub
imul
xchg
or
lea
sub
outsl
lods
adc
push
mov
rcr
mov
inc
mov
pop
pop
push
pop
jg
std
inc
xlat
lds
fisttpl
and
push
dec
aaa
xchg
mov
test
mov
test
scas
mov
adcl
mov
lcall
push
rcl
hlt
pop
cmpsl
in
call
pop
repnz
sarl
lea
push
sbb
fdivp
cmp
jecxz
inc
std
jb
pop
sub
pop
mov
cli
sub
inc
rcrl
sub
add
jae
test
and
jp
mov
sbb
mov
lcall
xchg
in
ljmp
pop
stos
inc
cmpsl
add
nop
dec
popf
mov
push
pop
mov
stos
push
push
inc
sbb
push
lds
in
cmp
inc
inc
or
insl
adc
cmp
cmp
int3
pop
jmp
hlt
jg
rcrb
movsl
lahf
mov
inc
jnp
cmpsl
les
ss
clc
jl
insb
mov
dec
or
xchg
adc
jl
and
lods
int3
sub
in
pop
pop
int
mov
push
shrb
mov
inc
jmp
fstl
xlat
mov
out
testl
push
or
and
xlat
sbb
std
and
inc
dec
adc
lds
sbb
push
leave
mov
sti
ja
daa
test
ja
test
aas
or
jo
call
out
cmp
push
cwtl
mov
fwait
cmp
xchg
cmp
stos
mov
or
insl
push
jmp
repnz
mov
scas
push
sub
jno
and
icebp
jg
sbb
pop
lcall
mov
pop
movsb
or
insb
sbb
in
inc
gs
adc
fcmovne
mov
lret
into
popa
mov
adc
push
jg
sub
mov
leave
pop
sub
jg
cmp
cmc
ja
insl
dec
and
int3
jno
mov
cli
jbe
sbb
outsb
jle
xchg
je
cmpsl
jno
jp
and
push
pop
loopne
mov
add
mov
shlb
mov
int3
add
push
inc
leave
sbb
push
xlat
sbb
push
cmp
fsubrl
add
addr16
xchg
or
dec
out
add
and
inc
fcoms
fildll
fldt
add
add
into
jbe
les
pop
jns
js
jmp
xchg
mov
sub
cmp
push
test
dec
push
ja
mov
mov
xor
mov
and
mov
loopne
js
jb
cmp
sahf
mov
jg
mov
adc
out
or
push
stos
dec
loop
aaa
jbe
push
jge
sub
aaa
std
imul
pushf
sbb
cmp
insb
or
lock
sub
data16
jl
fstps
or
test
jge
xchg
popa
xchg
push
mov
cmp
incl
push
mov
movsb
jnp
cltd
test
cltd
pop
imul
ljmp
mov
jns
sub
xchg
les
lods
and
and
push
mov
fcmovb
rcll
stos
dec
sbb
adc
pop
dec
jle
pop
jo
dec
in
pusha
push
mov
gs
das
cmp
cmp
cmp
test
pop
mov
les
inc
cwtl
mov
pop
lods
jecxz
inc
sub
mov
add
inc
add
mov
push
aad
mov
popa
cld
dec
enter
repz
push
or
mov
ret
jle
int3
jb
dec
push
fsts
push
daa
mov
jl
mov
repnz
fmul
stos
lea
movsb
in
nop
adc
jns
push
lahf
pop
mov
pop
cld
icebp
mov
sub
in
sar
jmp
es
or
popf
ljmp
in
cli
inc
jns
or
fisubrl
lret
and
push
adc
mov
sbb
pop
lcall
mov
sub
or
xchg
cmp
lods
and
mov
xchg
push
call
mov
sbb
push
loope
imul
shll
repz
arpl
sub
andb
sbb
inc
push
push
add
mov
mov
jne
xchg
jne
pop
fcmovnb
cwtl
nop
jecxz
imul
cmp
mov
jecxz
sti
rcrl
sub
aaa
jp
lods
adc
dec
rcll
in
dec
dec
shrl
xchg
xor
shll
clc
xchg
mov
xchg
adc
in
cs
and
aas
imul
loopne
addl
sti
adc
call
mov
adc
mov
push
pop
cmp
push
adc
and
ss
pop
cld
scas
idiv
push
outsl
and
cld
xchg
sub
addr16
mov
popa
popf
je,pt
adcb
fcoml
rcr
mov
add
mov
movb
or
loop
mov
and
fstl
imul
add
adc
mov
rol
mov
push
ljmp
movsl
cld
es
or
cmp
add
cmp
aam
and
cli
pushf
jg
sbb
or
adc
test
cmpsl
call
hlt
imul
je
in
lods
push
adc
inc
stos
movsb
pop
add
pop
rcr
sbb
jg
das
es
subl
pop
cltd
pop
xchg
sbb
clc
bound
fwait
xor
clc
push
pop
and
ss
insl
cmc
cli
arpl
mov
lcall
sub
sahf
or
mov
iret
imul
shl
mov
aaa
jbe
out
dec
dec
inc
add
repnz
xor
add
mov
mov
cli
fsubrl
test
add
sub
push
test
out
mov
pusha
std
push
inc
pushf
sbb
lret
bound
push
or
clc
test
das
jns
popa
lods
jmp
mov
popf
hlt
icebp
insl
jge
adc
mov
or
add
out
idivl
out
pop
jo
push
mov
sub
ljmp
push
in
push
mov
or
movsl
pop
jmp
mov
stc
cmpsl
sub
out
cmp
dec
cmp
push
adc
cmp
in
dec
push
adc
cmp
mov
mov
pop
mov
and
lahf
or
es
out
pop
das
stc
decb
pop
setne
pushf
imul
data16
inc
mov
sbb
icebp
xchg
sub
jae
int3
test
movsb
in
ds
shlb
push
fwait
push
roll
movsb
ljmp
xchg
loopne
xchg
xor
inc
flds
mov
sub
insb
cmc
adc
je
call
iret
xlat
in
test
lret
cmp
inc
cmpsb
push
push
push
and
add
ficoml
dec
pop
jne
notl
xor
fwait
subl
add
sbb
inc
inc
out
jne
inc
lea
pop
xor
lea
loop
xor
xlat
add
repnz
mov
jo
push
add
nop
lahf
fistpl
int
lcall
cs
or
pushf
push
xchg
sub
sbb
pop
jbe
insb
aam
mov
cmpsl
cmp
inc
or
mov
loopne
adc
mov
lods
push
lock
inc
jmp
out
mov
clc
insl
rclb
fcmovb
ret
ds
into
mov
sub
loopne
mov
sahf
mov
cmpsb
pop
pop
mov
cmp
sub
rorl
mov
int3
out
mov
push
mov
aam
incb
pop
mov
mov
pop
cmpsl
sbb
mov
push
dec
adc
or
mov
shr
jne
dec
mov
dec
mov
pop
outsb
out
ret
cmpsl
js
addr16
test
dec
push
add
jecxz
push
push
sub
jne
dec
push
adc
bound
mov
mov
ja
movsb
call
test
push
in
shrl
sub
xor
out
lahf
ss
add
adc
or
fadd
fptan
cmp
mov
movsl
scas
cmp
loopne
movsl
rcrb
imul
js
cmpsl
mov
xchg
pop
in
xor
mov
shl
sub
out
fwait
jecxz
rclb
pop
lock
shlb
mov
mov
cmpsl
mov
xor
jne
xchg
push
mov
out
or
xrelease
ret
xchg
adc
fstpl
nop
xchg
in
inc
xchg
aad
add
jbe
adc
pop
lea
movl
inc
ss
cmc
mov
int
fsubs
mov
test
lods
ljmp
inc
daa
pop
xchg
ds
sub
fs
push
outsl
mov
mov
pushf
popa
gs
sub
adc
lods
je
cld
mov
adc
loop
and
dec
jb
adc
inc
xchg
stc
popf
popf
cmp
jnp
ljmp
push
push
mov
into
sbb
jb
xchg
adc
pushf
in
imul
aam
mov
xor
jne
aas
sub
addr16
dec
sbb
adc
xchg
cmp
pop
outsb
insl
fisttpl
cmp
or
scas
jns
pop
aaa
push
push
xchg
in
mov
jmp
into
enter
add
ror
jno
test
dec
fbstp
arpl
lods
push
xchg
push
jb
jp
jb
cmp
pusha
ss
push
push
insb
test
jno
jl
sbb
cli
popf
pop
dec
mov
mov
iret
push
push
sub
mov
jae
cmpsl
scas
inc
pop
call
push
lcall
in
jp
call
fs
in
bound
or
xchg
push
stos
jno
mov
sbb
cmp
enter
popa
fildl
push
dec
sbb
popa
lds
call
push
rcl
dec
fmuls
cmp
and
pop
mov
inc
leave
push
sbb
inc
pop
mov
in
xlat
ss
inc
ljmp
or
mov
es
push
and
xchg
lock
pop
aam
and
push
push
mov
mov
popf
push
leave
fstpt
dec
pusha
jo
cmp
insb
sub
jecxz
dec
inc
fistps
inc
in
sub
adc
outsl
lea
mov
inc
loopne
sub
mov
jle
push
sub
xchg
sub
pop
imull
xchg
pop
leave
and
pushf
std
sub
fistps
fs
push
add
repz
stc
test
cmpb
mov
int3
imul
fbstp
insb
ret
xchg
dec
sbb
lahf
ss
shlb
mov
push
test
xchg
sub
cmc
adcb
dec
pop
mov
inc
fidivl
popa
dec
pop
dec
pop
xchg
sbb
mov
faddl
adc
add
pushf
cmc
dec
ficoml
sub
adc
inc
fimull
repnz
pop
mov
xchg
mov
hlt
or
and
aad
in
push
push
pop
je
inc
push
dec
mov
xor
scas
xchg
xchg
push
dec
mov
cli
test
fdivrl
rcrl
xor
nop
clc
xchg
cli
shll
sub
add
outsl
xor
lret
pop
push
jl
in
imul
pop
lcall
jl
mov
mov
sub
les
inc
pop
out
mov
xchg
movsb
ljmp
adc
stc
addr16
xor
icebp
push
repnz
adc
inc
xor
adc
loop
into
adc
mov
mov
jecxz
push
fldl
push
stc
xchg
pop
cmpsb
jg
xchg
mov
and
addr16
lcall
enter
inc
insb
mov
icebp
pop
sbb
sbb
out
sub
cmpsl
dec
and
push
addr16
rol
call
or
dec
bound
js
pop
xor
cwtl
sub
mov
dec
pop
mov
mov
cmp
int
or
xchg
outsb
add
inc
push
cli
insl
fwait
inc
popf
in
std
xchg
fucomp
cmpb
bswap
cltd
or
sbb
inc
cmp
std
xchg
pop
pop
gs
mov
lock
push
shr
adc
cs
mov
jo
sbb
das
les
xchg
sub
rcl
ret
adc
mov
movsl
add
mov
jl
cmp
xor
out
jmp
repnz
fcomi
cltd
or
notl
lods
sub
dec
dec
subl
mov
test
xor
enter
or
dec
repz
es
jae
fists
movsb
push
data16
test
js
inc
sbb
push
leave
mov
pop
out
popa
je
dec
out
add
dec
mov
sub
fyl2xp1
adc
test
mov
xchg
dec
xchg
sbb
and
add
adc
push
jb
int3
cmp
or
push
lds
js
mov
push
push
add
fdivs
and
mov
pushf
rcll
and
and
sub
jle
ret
xchg
in
pushl
xor
js
cmc
sub
mov
mov
adc
inc
mov
xchg
testb
inc
adc
mov
test
mov
in
inc
lret
iret
xchg
cmpsl
aas
popa
lret
mov
sar
dec
in
out
stos
and
movsl
jns
jg
mov
push
or
scas
or
push
cs
add
shl
pop
cli
pushf
cmp
jl
or
xor
sbb
test
ss
test
sbbb
pushf
dec
rcl
jo
iret
or
lock
cld
mov
and
lds
inc
mov
push
sub
outsb
pushf
pop
scas
inc
testb
adc
dec
test
aas
dec
shr
jl
pop
lahf
in
lret
push
int
divl
push
in
ret
or
js
or
lock
out
dec
adc
cwtl
fcoml
out
test
sbb
push
out
aas
sub
jmp
fldl
cmp
mov
lock
sahf
lods
jp
push
mov
jo
add
mov
add
mov
and
pop
mov
cmp
sub
xchg
xor
add
cli
push
jne
std
push
gs
push
dec
dec
adc
mov
popf
adc
inc
inc
push
out
push
mov
mov
test
je
mov
jge
sbb
adc
pop
inc
or
repnz
pop
mov
push
push
push
mov
int
adc
cmpsl
pop
add
jl
mov
lods
enter
addr16
test
lret
lahf
bound
sbb
sahf
jns
cld
jle
dec
push
in
or
sarl
pop
sub
scas
test
dec
loop
in
test
push
jnp
mov
data16
or
iret
jge
adc
icebp
mov
inc
in
inc
fsubl
add
les
mov
or
adc
or
mov
xor
pushf
cwtl
xchg
sbb
into
or
cltd
jo
or
adc
rcrl
es
sub
loopw
stc
testl
cmp
or
ret
xchg
add
lcall
sbb
testl
cltd
aad
or
cld
loope
in
out
inc
xchg
mov
inc
scas
push
in
arpl
xchg
test
outsl
fcom
aam
xchg
or
mov
xchg
sti
out
icebp
insb
int
add
jbe
and
loope
sbb
imul
ret
pushf
push
out
xor
jne
fidivrs
popf
sbb
jo
xchg
push
pusha
pop
mulb
inc
loop
jmp
fidivrs
rcrl
ss
pop
dec
inc
inc
negl
test
and
repz
shlb
mov
push
enter
mov
add
iret
test
push
push
push
mov
aad
and
loop
test
jo
inc
shll
test
iret
cmpsb
popa
addr16
aad
jmp
jge
lea
outsl
mov
ret
adc
mov
hlt
or
xchg
push
mov
mov
popf
dec
inc
xchg
decb
pusha
loop
call
or
adc
cmp
aad
add
sbb
sti
ret
xchg
jle
sbb
cmp
xor
pop
fs
pop
testb
je
in
sbb
fdiv
and
mov
xchg
mov
mov
mov
clc
popl
sub
negb
add
enter
jne
xchg
push
xor
ficoml
mov
mov
sar
daa
push
mov
mov
xchg
lea
sub
inc
push
test
out
adc
mov
adc
ljmp
xor
jne
xchg
fildl
inc
push
cs
outsb
mov
inc
fsubl
push
mov
mov
dec
outsl
inc
or
rorl
cmp
test
shrb
out
rcl
lret
xor
mov
jmp
repz
mov
repnz
sarb
xchg
cmpsb
ja
stos
scas
sub
test
inc
pop
hlt
je
in
inc
dec
adc
jmp
cwtl
fs
mov
mov
adc
in
pop
push
popa
xchg
das
cmpsl
push
xchg
addl
cmp
rol
enter
psllw
popa
fsub
cltd
outsb
clc
movsl
andl
mov
or
pop
imul
inc
mov
adcb
addl
enter
fwait
push
sub
call
cltd
cld
loop
inc
push
lcall
lret
popa
gs
loope
pop
out
and
cs
aaa
add
fidivl
pop
and
aas
add
sti
lret
sahf
adc
mov
in
lods
xchg
cli
mov
dec
pop
add
mov
mov
mov
stc
or
cmp
aad
cmp
imul
hlt
mov
fdivrl
shl
jmp
fnstsw
mov
out
adc
push
xor
fidivrs
pop
mov
mov
aas
shrl
leave
pop
addr16
and
rcll
jae
xorb
add
mov
jb
repnz
xchg
cmp
sub
fwait
mov
subl
push
cmpsl
adc
mov
loop
xchg
jp
leave
add
mov
mov
fcmovb
lret
mov
jne
cmp
pushf
mov
dec
dec
dec
and
imul
adc
fidivrs
mov
ficomps
adcb
push
shrl
push
push
xor
fsubs
int
outsl
mov
push
sbbl
xchg
dec
cmp
and
ret
jle
xor
cwtl
mov
mov
jg
cmp
pop
dec
adc
shll
cmp
lods
int3
mov
ljmp
lods
lret
push
fsubr
pop
adc
imul
popl
or
out
push
inc
pusha
jle
int
fdivrl
pop
xchg
sbb
jne
mov
stos
mov
xchg
sbb
negb
inc
push
jno
cmpsl
out
or
out
leave
and
movsb
inc
stos
push
jae
aaa
jbe
push
test
pop
in
fistps
rcll
mov
xchg
push
mov
jp
inc
jno
jmp
or
cmpsb
sbb
sbb
dec
call
lret
cmc
mov
pop
lahf
sbb
lods
sti
inc
push
cmpsb
in
or
mov
push
and
sub
dec
jns
push
dec
inc
inc
dec
imul
mov
popa
sbb
mov
sbb
ljmp
push
test
mov
mov
adc
xor
mov
out
cmp
lret
out
push
iret
mov
pop
mov
scas
jo
push
loop
sbb
pushf
sbb
dec
sbb
push
inc
in
imul
xor
mov
mov
scas
adc
outsl
mov
data16
adc
clc
loop
ss
mov
push
in
adc
sarl
fnstsw
dec
int
std
enter
and
adc
ret
shlb
out
jmp
xlat
subl
inc
mov
lret
inc
ds
stos
sbb
int
popa
outsl
sub
push
inc
jnp
inc
mov
xchg
push
loope
shll
or
mov
jmp
push
aas
inc
out
jecxz
ds
shrl
mov
clc
push
push
ret
ret
cld
lcall
stc
adc
jnp
jle
jo
sub
addb
xchg
add
scas
mov
pop
lods
xchg
sub
and
stc
shl
or
data16
aad
clc
shl
lds
insb
das
rcrb
push
lods
xor
push
mov
rcrl
pop
xchg
roll
ds
popf
inc
push
stos
xchg
pop
ds
jge
sahf
jno
dec
jecxz
push
pop
gs
pop
sbb
inc
adc
scas
pusha
or
mov
clc
lcall
in
hlt
jae
fistpll
mov
hlt
cmp
pop
xor
jmp
cmp
mov
out
or
icebp
and
rcrl
mov
push
sbb
xchg
js
bnd
mov
int3
in
outsl
rcll
scas
xchg
inc
ss
cltd
shlb
aam
push
add
outsb
movb
add
adc
sub
outsb
mov
lea
iret
cwtl
outsl
cmpsl
sbb
mov
test
cmp
push
dec
or
into
and
pushf
subb
dec
push
negb
mov
fs
in
inc
test
call
into
loope
cmp
in
sbb
adc
je
xor
mov
and
mov
loop
out
ffreep
faddl
push
enter
aaa
pop
mov
movsb
jle
repnz
push
addr16
xchg
or
mov
adc
out
ret
xor
sbb
std
cmp
or
mov
into
push
add
or
sbb
jg
jg
mov
cmpsl
lea
call
cmc
add
lea
mov
dec
xchg
aas
aas
shlb
jle
pop
decb
and
es
arpl
or
xor
lods
dec
mov
repnz
pushf
pushf
push
stos
inc
std
add
insb
ja
xor
push
mov
lods
idivl
adc
push
inc
fistpl
icebp
xlat
loope
fs
test
mull
and
push
ds
cmc
push
aad
test
xor
fwait
lods
push
push
push
aam
ljmp
jmp
jp
pop
add
or
repnz
adc
mov
push
lcall
xor
ljmp
mov
int
jno
sub
cmpsl
sub
fildll
scas
ficoml
mov
pop
mov
arpl
pop
adc
pcmpeqw
xchg
mov
repnz
cmp
ja
jo
shll
sbb
cmpsb
mov
mov
push
jbe
pop
dec
sub
jnp
fldlg2
mov
lock
xchg
sub
mov
cmc
lock
push
aam
xor
in
repnz
xor
mov
mov
int
push
mov
mov
xchg
push
divl
mov
cs
mov
jl
jns
dec
pop
adc
inc
nop
mov
push
push
xlat
ret
imul
mov
xlat
lret
das
inc
testb
jnp
jae
fs
dec
add
or
mov
inc
sbb
mov
bnd
fsubr
repnz
xchg
push
adc
test
xchg
push
call
aaa
push
loopne
sub
jae
pop
cmp
xchg
dec
mov
stc
pop
sub
cmc
insl
in
pop
pop
mov
sarb
push
xchg
mov
callw
pop
dec
or
pushf
sub
add
lods
push
jl
push
call
sub
mov
testb
and
subb
add
sub
ja
cmc
push
ud2
add
aam
dec
dec
cmp
or
sarl
popa
and
push
and
xchg
push
mov
mov
fdivrs
inc
adc
xchg
cmpsl
adc
loope
cmp
adc
jo
sbb
or
bound
sub
add
ss
cli
sub
fiaddl
loop
dec
push
xchg
xchg
mov
mov
mov
shll
add
push
mov
inc
and
mov
mov
fnsave
insb
in
xlat
adc
pop
mov
ficomps
xchg
jo
dec
cmp
mov
fs
xchg
pop
mov
and
cmpsb
xchg
icebp
mov
push
push
gs
cmpsb
xchg
rcrb
lea
rolb
jp
or
pop
cmp
mov
inc
fsts
mov
ret
pop
mov
push
sbb
adc
in
test
mov
or
mov
aad
loope
sahf
lret
repz
mov
pop
cmp
add
mov
shrb
mov
push
inc
mov
insl
shll
ja
mov
mov
xchg
add
mov
push
pop
adc
mov
fnstsw
cmp
add
ret
jo
push
lret
clc
inc
push
jg
add
mov
dec
xlat
ljmp
shll
out
inc
xchg
test
pop
inc
inc
andb
pop
fidivrl
mov
adc
push
insl
mov
sub
out
dec
fcompl
leave
pusha
imul
jp
sahf
cmp
jmp
lds
rorb
repz
ss
adc
mov
xor
aas
test
lret
xor
ss
std
adc
sbb
pushf
sub
leave
jae
sub
pusha
fwait
pop
fmulp
shll
push
movsl
dec
cmp
xchg
inc
xor
popa
jno
js
push
inc
fadds
xchg
pop
mov
sbb
lock
sbb
adc
mov
cs
in
clc
dec
jne
loop
in
adcl
xchg
pushf
jge
adc
cmp
pushf
ficoms
in
dec
lcall
jb
adc
enter
sub
test
stos
dec
ror
dec
ja
push
mov
out
cmp
xchg
cmc
xor
jns
push
ret
icebp
jl
fists
inc
xor
movsl
add
add
imul
cmp
das
add
aam
lods
loop
mov
push
mov
xchg
sub
shll
pop
sbb
inc
add
lods
jmp
lods
sbb
cmpsl
jl
mov
adc
dec
test
lahf
jbe
xchg
ja
std
jo
adc
out
cmpsl
sbb
jmp
jmp
sub
jne
dec
or
xchg
imul
lods
add
sub
or
lods
aad
mov
xorl
dec
insl
daa
jle
jo
or
adcl
icebp
adc
shl
push
fsubs
inc
aas
jle
cmp
loope
cmp
dec
pop
jnp
jg
sbb
pop
popf
xchg
mov
out
jb
dec
loopne
shl
int3
mov
xchg
or
mov
push
xor
scas
xor
pop
jnp
cmp
bound
inc
xchg
adc
push
rcrl
pushf
xchg
add
add
push
mov
aas
das
mov
sbb
xchg
pusha
mov
adc
pop
leave
pusha
scas
mov
imul
arpl
push
jb
and
test
push
call
xor
dec
data16
cmp
pop
imul
cmp
cli
pusha
clc
jae
andb
cld
jg
xor
outsb
jl
bound
xchg
add
jns
pushf
jnp
in
movsb
jg
adc
outsb
push
jo
loope
sub
and
in
pop
inc
sahf
gs
and
xchg
int
sarl
xchg
out
push
out
and
pmuludq
test
aaa
lret
cld
xchg
mov
fstpl
mov
adc
shrl
fsts
pop
inc
ja
ja
dec
push
hlt
stos
mov
lds
aaa
pop
loope
inc
or
xor
movsb
jnp
js
mov
int3
push
inc
jne
fwait
cwtl
pop
xlat
or
add
jmp
pop
out
adc
push
shll
add
jb
xchg
sahf
enter
cmp
imul
xchg
pop
xchg
xchg
or
adc
inc
mov
lcall
mov
xor
cli
push
mov
sbb
mov
mov
sub
jp
mov
xor
jle
inc
clc
push
cli
jne
add
jecxz
loopne
outsb
mov
shl
je
jecxz
in
sub
sub
sbb
xchg
dec
mov
mov
std
adc
lret
sub
into
lcall
sbb
add
cs
ds
and
in
stos
add
xchg
mov
mov
neg
sbb
int
push
xor
nop
inc
pushf
loopne
popa
mov
call
xor
pop
aas
mov
or
push
nop
outsl
or
jp
add
mov
addr16
pop
or
xchg
das
add
sbb
lret
push
pop
sub
int3
addb
cli
sbb
adc
sbb
or
ret
insl
movsl
cmp
movsb
xor
ja
pop
imul
outsb
push
loop
cmp
dec
add
sbb
push
and
xchg
lret
cld
mov
or
and
fsubs
popf
icebp
cmp
fsin
mov
popa
clc
push
or
xchg
outsl
mov
jae
test
jnp
rcll
xchg
add
add
in
pop
jle
cmp
shll
mov
dec
mov
adc
sub
sbb
mov
int3
cmpsb
inc
mov
mov
and
mov
ret
hlt
icebp
out
inc
push
sbb
repz
aas
popa
xorl
inc
mov
dec
pop
outsl
fldenv
push
jne
cli
testb
sar
loope
aam
xchg
inc
out
iret
fdivrl
xchg
lock
fs
lret
sti
fdivp
mov
outsb
jecxz
pop
stos
in
sbbl
dec
bound
dec
inc
push
testl
in
cmp
lds
notb
adc
or
lock
dec
movsl
shlb
cltd
pop
sub
jp
cmpb
mov
inc
or
outsb
fcompl
mov
cs
add
sbb
jne
loop
cmp
xor
jle
movsb
mov
adc
jmp
int
xor
cmp
push
addr16
mov
rclb
sbb
data16
mov
push
push
dec
pop
cmc
inc
xor
insl
scas
sbb
mov
aas
xor
mov
lock
aaa
mov
add
arpl
jne
adc
push
aas
jo
jnp
orl
stos
mov
or
roll
cld
mov
icebp
mov
rcrb
les
mov
fwait
gs
aad
jbe
mov
push
iret
je
sbb
cmpsl
and
aad
pop
mov
int
in
xchg
out
in
test
je
mov
inc
mov
xchg
push
jmp
daa
inc
lds
and
lahf
xchg
dec
dec
icebp
inc
movsb
out
enter
lcall
popf
repnz
jb
push
and
lods
lea
fidivrl
add
fdivs
inc
test
jb
das
cmp
xor
jmp
sbb
fldenv
sti
lods
cmp
out
ret
cmp
pop
iret
sub
inc
mov
mov
mov
xor
cwtl
das
adc
add
clc
cwtl
mov
daa
sbb
push
push
pop
cmpsl
out
xlat
hlt
fdivrl
cmp
aaa
fxtract
filds
scas
adc
cmpsl
pop
dec
inc
cmp
fisubrs
popa
std
push
or
xchg
mov
repz
mov
daa
mov
pushf
mov
lret
repz
imul
push
subl
pop
loope
adcb
jno
daa
adc
sbb
sbb
ss
mov
sbb
jp
inc
popf
popa
or
fs
adc
shrl
adc
aam
pop
in
pushf
mov
fdivrl
repz
lods
int3
fimuls
fisttpl
jp
dec
movsl
shll
pop
push
ret
orb
int3
popa
or
sbb
lret
mov
jae
jns
pop
shlb
movsb
ficoml
hlt
or
pop
cmp
ja
mov
mull
popa
fidivl
pop
pop
or
ljmp
mov
in
jge
js
or
sub
lods
xchg
int3
pop
hlt
ret
dec
lock
mov
add
jnp
lahf
mov
push
xchg
les
mov
repnz
lea
mov
fwait
pop
push
in
push
push
insb
sbb
insl
in
rcrl
popf
das
jmp
scas
lahf
add
add
aaa
mov
in
test
notl
out
cmp
sub
lock
pop
loope
cmp
ficoml
cmp
fistl
mov
adc
sbb
aas
lahf
imul
inc
cmpsl
mov
dec
push
call
sti
fwait
aas
lods
lds
andl
aaa
rcrl
sub
mov
lea
add
shl
and
nop
out
dec
aaa
adc
negb
repz
lret
addr16
arpl
les
loop
jbe
pop
call
test
mov
xor
adc
arpl
xlat
cmp
push
icebp
cmp
add
out
iret
and
jle
sahf
sbb
pop
sbb
sbb
js
pusha
adcb
dec
ficoml
add
adc
fsubrs
rcll
xchg
jo
imul
fldcw
or
xchg
or
arpl
rcr
js
pop
mov
cli
push
leave
push
or
pop
jle
mov
rol
dec
or
movsb
mov
fwait
push
fmul
loope
and
mov
aad
or
stos
mov
fldenv
push
lods
dec
push
sbb
xchg
jp
mov
jp
add
adc
xchg
xchg
pop
cmc
clc
test
mov
mov
imul
je
mov
add
pop
int
jae
xor
pop
es
mov
test
pop
add
push
rorl
pusha
jns
sub
insl
adcb
mov
fisttpll
pushf
mov
aaa
in
sub
dec
loope
lret
adc
scas
cmp
ljmp
pop
std
loope
lods
cmp
out
lock
xchg
xor
stc
jle
test
push
popa
and
inc
xchg
cmp
lock
sbb
push
popa
hlt
pop
pop
mov
es
mov
push
push
push
outsb
inc
push
arpl
inc
fildll
pop
adc
pushf
cli
int
push
es
repz
out
fldpi
jne
mov
lahf
push
out
jp
std
inc
cmp
test
les
cli
jae
pop
mov
add
jl
iret
xor
add
dec
jno
adcb
jg
mov
jno
popf
inc
pop
mov
or
adc
fcomp
pop
cmpsb
out
push
or
cli
aas
outsl
or
mov
not
imul
and
sub
adc
xchg
mov
xor
insb
xlat
xchg
and
sub
stos
je
push
xor
fnstsw
ficoml
mov
push
les
ret
daa
cs
xchg
insl
lods
adcl
out
call
mov
arpl
sbbb
pusha
xchg
into
fcoml
cmp
imul
adc
xor
xchg
mov
fs
lock
inc
xlat
cs
lock
sbb
call
and
jb
arpl
xchg
les
sub
mov
push
jge
ret
inc
je
iret
xor
aad
mov
dec
mov
xchg
lcall
adc
sahf
leave
jns
sub
je
fmuls
popa
insl
aas
sbb
shll
ds
icebp
jns
out
xchg
roll
loope
or
xchg
pop
sub
xor
enter
das
popa
rcrb
out
xor
pop
out
dec
mov
lds
out
mov
fadd
sbb
inc
outsb
jbe
aad
pop
adc
mov
dec
stos
outsl
cmp
push
shll
scas
push
dec
mov
arpl
xchg
mov
icebp
mov
loope
add
leave
popf
mov
mov
xchg
notl
aad
sub
mov
andl
in
jno
sahf
pop
cmc
sbb
sbb
rcrb
inc
xchg
shrl
addr16
fists
xor
fcoms
fidivrs
mov
mov
int3
cmp
fsubl
pop
xor
popf
jle
inc
rolb
hlt
movsb
fucomi
jge
icebp
adc
cltd
and
or
cmpsl
mov
pop
pop
cmp
imul
mov
inc
sub
jge
ret
or
int
or
js
iret
ss
dec
pushf
jns
inc
and
dec
gs
mov
mov
sub
test
inc
insl
sbb
scas
pop
cli
pushf
dec
dec
inc
pop
inc
shr
cmpsb
mov
mov
fmull
add
mov
fdiv
daa
test
or
scas
shrl
in
mov
lods
lret
inc
in
dec
pop
pop
bound
movsl
sbb
lods
fisttpl
bndstx
fldcw
sub
jl
cmp
js
scas
and
out
dec
mov
dec
adc
outsl
clc
xchg
dec
push
sbb
cs
cwtl
push
leave
push
outsb
iret
aaa
mov
scas
pop
add
pop
pushf
cmp
popf
stc
aaa
sar
clc
fisttpll
xchg
es
and
pop
lcall
pop
dec
dec
sbb
lods
xchg
pop
sub
and
stos
push
mov
mov
xchg
dec
sub
not
dec
dec
pop
lcall
sub
mov
push
jl
jmp
jle
into
lods
push
testl
dec
and
inc
loope
cmp
sbb
bound
xchg
jmp
fucom
sbb
roll
in
imul
mov
orb
fimull
lds
pop
push
pop
push
mov
aaa
daa
xchg
scas
imul
and
icebp
sbb
add
cwtl
das
cmp
xor
iret
cmc
inc
pop
sub
or
xor
ljmp
in
sbb
and
xor
lret
rorb
jge
pop
hlt
clc
mov
mov
jl
inc
fnstenv
fwait
xor
test
jno
mov
out
sbb
jns
mov
jbe
fcom
add
pop
mov
xchg
sub
hlt
mov
add
pushf
stos
sub
fdivl
or
es
pop
scas
insl
sbb
int3
cld
daa
fsubrs
shlb
add
dec
jecxz
mov
push
jp
jnp
out
fwait
incb
scas
dec
rcrl
adc
lret
add
divl
aam
adc
loop
outsl
fsubrl
in
dec
popa
fnsave
mov
rorl
sub
in
cmpsb
push
dec
pop
add
scas
aas
dec
pop
cmp
xchg
movsb
adc
mov
lret
and
aas
fnsave
stc
ret
mov
sbb
jecxz
mov
mov
ss
mov
jg
in
xlat
fistpl
xchg
das
icebp
dec
mov
lds
nop
cli
inc
or
hlt
outsl
outsl
push
push
xor
dec
in
clc
mov
je
movaps
fdivl
adc
pop
scas
repnz
jg
test
add
test
mov
pushf
xor
gs
mov
js
data16
outsl
sub
jnp
rorb
lea
xchg
push
jmp
repnz
cmpsl
and
in
cli
add
fiaddl
xchg
add
in
test
mov
push
sbb
lret
dec
or
repz
pushf
test
ja
popa
es
jnp
inc
sar
sahf
pop
insl
xchg
repz
orl
add
add
xor
cmp
adc
enter
add
sarb
ret
and
dec
inc
inc
mov
ret
daa
fisubs
xchg
arpl
stos
ljmp
clc
dec
push
andb
adc
aaa
push
pop
push
mov
cmp
movsb
orb
jle
shlb
sub
push
inc
lcall
add
sub
lds
jmp
sti
addb
add
mov
or
sub
mov
jb
dec
fdivrs
rcr
enter
aad
cwtl
mov
add
jb
xchg
cmpl
icebp
data16
jbe
in
dec
add
popa
sub
jge
stos
jl
push
jns
cmpsb
mov
inc
into
and
dec
je
inc
pop
and
sbb
jle
jne
iret
push
mov
cmpsl
push
cmc
sbb
lods
xor
jl
sub
inc
fistpll
add
loop
loop,pt
jp
divb
popl
aas
xor
fnstsw
xor
fs
scas
and
in
adc
jne
dec
jge
into
push
out
mov
and
scas
and
add
or
call
repz
call
adc
icebp
lret
jae
test
lahf
jns
arpl
mov
cltd
adc
xchg
test
lret
push
xchg
push
mov
test
loop
and
push
outsb
out
subl
das
inc
add
mov
sub
push
lds
pusha
std
fmul
or
jmp
orl
push
fisttpll
sahf
push
and
jg
andl
test
das
cmp
pop
xor
or
sbb
movsb
and
loope
sub
dec
movsl
es
pop
loopne
imul
xor
xchg
mov
add
dec
insb
xor
mov
mov
or
jecxz
mov
scas
ficoml
in
test
lahf
pop
xchg
push
testl
sti
mov
mov
mov
mov
imul
pop
or
mov
dec
lcall
sbb
cmp
rcrb
sub
mov
lds
jns
sub
push
pop
mov
xchg
jbe
hlt
cs
and
lods
inc
ret
or
mov
pop
mov
sbb
aam
int
push
lds
xor
adc
dec
test
int3
mov
jns
shl
jbe
sahf
jecxz
dec
sub
pusha
icebp
adc
or
jmp
fldt
mov
test
mov
push
scas
mov
and
jne
jecxz
push
movsl
pop
icebp
es
mov
les
movsl
cmc
or
mov
nop
pop
sahf
roll
cli
je
scas
xchg
jbe
and
mov
movsl
ret
push
out
iret
jmp
lea
push
sbb
mov
push
outsb
adc
sub
push
jno
dec
sahf
xor
dec
enter
or
fisubrl
aam
pop
dec
xbegin
shrl
es
movsl
or
int
fbstp
add
stos
mov
mov
dec
and
or
pop
sub
repz
cmpsl
bnd
sbb
pushf
pop
cmp
lds
xor
cmpsb
mov
xchg
loope,pn
mov
push
shrl
ret
cmpl
pop
fsubrp
jl
sub
push
gs
enter
cmp
int3
cmp
loop
cmp
mov
xchg
sbb
into
inc
pop
cmp
mov
mov
repnz
add
or
movsl
imul
mov
out
mov
or
stos
aam
leave
aas
cmp
das
add
int
fsubr
int3
ds
cmp
inc
rolb
cmp
mov
jp
mov
mov
fcmovne
addps
fsubp
jge
out
push
int
mov
xchg
mov
cltd
cs
sti
mulb
sbb
aaa
push
sub
pushf
sti
push
inc
dec
outsl
xor
sbb
push
and
insb
leave
sub
out
or
popf
divl
fsubrs
subb
push
hlt
sub
push
pop
jo
test
adcl
lds
xchg
inc
popa
out
dec
push
push
mov
and
mov
pop
insl
push
or
ja
outsb
sub
std
shll
cmc
push
js
dec
inc
jle
leave
add
sti
and
test
fisubl
daa
orl
test
jmp
mov
push
ss
pop
leave
mov
out
xchg
aas
jl
das
mov
sub
pop
movsb
mov
sarb
stos
sub
ss
dec
xor
inc
fmull
dec
cltd
pmaxsw
pop
jae
inc
jbe
and
dec
shlb
or
mov
cmp
out
and
enter
cmc
test
pop
mov
sub
testl
sar
jecxz
cwtl
xor
inc
jnp
jne
mov
sub
push
add
dec
aam
jb
dec
out
xor
test
in
mov
xor
rcrb
test
js
mov
imul
mov
shll
mov
lret
mov
dec
outsl
in
inc
ja
int3
pop
rol
cmc
sti
xor
dec
and
stc
push
dec
push
call
popf
outsl
push
pusha
mov
nop
lea
shrl
cmp
test
sub
and
fwait
loopne
jl
loop
sub
jp
mov
xor
pop
cmpsl
cmp
fisubrs
add
lods
aas
sahf
sbb
xor
inc
fwait
xor
fnstsw
push
jnp
into
in
fsts
fucomp
inc
cli
xorb
pop
lcall
inc
sbb
jne
and
rorl
sub
push
jnp
lock
xchg
lcall
loop
popa
lock
int3
mov
pop
or
lds
xchg
stos
or
icebp
push
pop
movsb
xor
jns
cmpsb
add
inc
sahf
clc
sahf
iret
aad
xor
ljmp
mov
ror
xchg
sarb
outsl
out
mov
jmp
das
mov
mov
pop
roll
inc
xor
sbb
fimuls
pop
jecxz
cmp
and
xchg
cld
push
dec
mov
dec
mov
int3
adc
xchg
int3
pop
dec
mov
in
mov
sti
lock
jge
mov
ret
or
jne
add
insb
cmpsl
jo
adc
outsl
jnp
inc
pusha
cmp
les
sub
pop
pop
and
cld
push
scas
fwait
sbb
jno
cmp
or
xchg
stos
and
sti
jmp
mov
outsb
mov
roll
cwtl
data16
insb
sub
jle
hlt
dec
sarl
aad
push
test
inc
stos
add
insb
inc
fcomps
mov
repz
mov
ljmp
mov
lds
ljmp
insb
add
inc
mov
push
les
jmp
movsb
fildl
adc
xor
fnstcw
cwtl
adc
rcll
repnz
mov
ljmp
je
add
mov
sub
addb
inc
daa
add
frstor
xchg
ror
push
stc
aam
movsb
int
popa
ud0
out
cmc
int3
leave
cmp
sub
sbb
inc
ret
fdivl
out
xchg
add
mov
insl
rorl
insl
cmc
in
inc
ret
mov
pop
mov
fnsave
ljmp
cmp
sub
popf
aaa
mov
iret
addr16
adc
ds
xor
pop
sbb
dec
sub
aaa
rcrb
adc
mov
in
sbb
pop
dec
xor
adc
addb
jmp
and
aaa
or
pop
jg
add
sbb
fistl
adc
inc
sbb
add
iret
das
sub
add
mov
lock
xor
sbb
lods
add
jmp
ret
mov
sbb
push
cli
scas
insb
mov
lds
adc
pop
fildl
and
jge
mov
xchg
push
shll
add
aas
mov
pop
pusha
testb
es
mov
lret
sti
adc
cs
sbb
sarl
movsl
notb
daa
les
push
jp
inc
out
xor
adc
sbb
sbb
dec
les
lods
pop
mov
lods
inc
cli
jg
push
mov
int3
loopne
mov
enter
jge
out
insb
push
cli
xchg
cmpsb
lea
sbb
pop
sti
bound
mov
or
enter
lahf
jg
leave
mov
fldt
lcall
je
in
push
xchg
data16
push
sbb
insl
adc
popf
xor
cmpsl
aaa
jns
jno
lock
fnstenv
inc
dec
pop
in
push
jmp
mov
xchg
xchg
enter
push
lods
xor
sbb
sbb
xchg
sub
aas
arpl
adc
push
jp
data16
aas
adc
outsl
addr16
rorl
mov
orb
insb
pop
aad
repnz
sbb
pushf
push
lret
out
dec
cld
sbb
mov
sbb
insb
nop
insb
xor
inc
in
enter
adc
movsl
fldt
lret
outsl
sahf
ror
dec
shl
inc
outsb
inc
xor
sub
int3
es
ret
and
inc
jnp
add
mov
cmc
xlat
jbe
jno
and
movsl
in
cmp
cmp
andl
inc
xchg
push
and
fld1
hlt
bound
xchg
sbb
xor
cmp
jno
into
pop
inc
lcall
lods
les
popf
faddl
imul
xchg
cmp
shlb
sbb
mov
or
lea
mov
lods
jp
fnstenv
dec
inc
loop
je
jp
adc
frstor
mov
mov
out
and
sti
gs
inc
sub
loop
mov
pop
mov
mov
pop
adc
sub
out
jns
enter
mov
repnz
add
adc
cmc
xor
adc
ja
sub
imul
inc
mov
mov
das
jp
jno
push
or
dec
add
pusha
xor
xchg
cs
mov
push
push
push
and
lahf
adc
cmp
es
mov
iret
xchg
mov
cmp
shrl
mov
repz
lods
and
into
pop
call
dec
push
jp
inc
fadd
push
xchg
xor
jbe
lds
loopne
aam
sbb
push
add
in
sbb
loop
cltd
xor
xchg
mov
fnstenv
iret
jecxz
nop
gs
jnp
add
out
inc
inc
xorl
xchg
imul
repz
fs
pop
fisubl
aad
ds
push
jns
sub
push
push
imul
inc
mov
fisubrl
push
adc
jno
xlat
cmp
fiadds
lahf
push
mov
adc
inc
add
sub
jmp
cli
pop
xchg
xchg
sub
dec
pop
shlb
fwait
mov
testb
stc
insb
push
pop
outsb
iret
add
mov
xchg
ljmp
mov
xor
push
push
andb
les
gs
jno
sub
add
test
sbb
mov
scas
mov
shrl
mov
push
add
mov
mov
int
test
dec
and
inc
or
cmp
in
sub
pushl
test
mov
test
out
das
and
dec
lock
cmp
aaa
sahf
ret
int
and
addr16
pop
pop
mov
pop
xchg
mov
jle
aam
adc
xchg
int3
orl
mov
lock
shrb
push
mov
jg
movsb
xchg
pop
inc
pop
xor
popa
or
or
sub
pop
loopne
repnz
fisubrl
or
mov
hlt
xchg
mov
in
iret
and
xchg
in
sub
push
cmp
movsb
fstps
cmp
out
sbb
xor
mov
inc
fisttpl
adc
jge
or
lods
in
mov
xchg
dec
inc
pop
xor
mov
or
lea
in
push
jns
fdivs
les
js
xchg
dec
pop
rcll
fs
push
mov
and
in
xchg
leave
repz
pop
xchg
imul
lock
xor
std
or
sub
mov
out
in
cmp
or
push
shrb
dec
pop
sub
and
sbb
scas
push
fwait
mov
lods
in
pop
repz
adc
mov
clc
jmp
push
ss
push
andl
sub
add
mov
push
mov
lea
or
dec
jne
testb
xchg
sub
cmp
out
push
jb
lcall
mov
pop
insl
leave
faddl
push
mov
mov
sbb
fdivp
call
or
mov
cmp
mov
xor
mov
add
mov
mov
cltd
jmp
mov
stos
jne
dec
cmpsl
or
sub
lcall
cmp
sahf
push
pop
pop
mov
sub
mov
inc
clc
dec
mov
inc
pusha
mov
mov
or
cld
sbbl
je
add
pmulhw
ret
dec
pop
mov
mov
jb
mov
mov
daa
mov
inc
cmpsb
inc
lods
xlat
popa
cmp
xchg
dec
mov
out
jo
push
cmp
jae
je
shlb
push
mov
or
fnsave
fsubr
xchg
inc
subb
sub
mov
notb
mov
sahf
xor
sub
enter
andl
sub
add
in
pushf
ljmp
insl
xor
push
fs
aam
or
cltd
xor
sahf
or
movsl
cmp
mov
lret
in
rol
xchg
jbe
dec
sbb
mov
adcl
dec
popf
sub
outsl
xchg
cli
inc
arpl
cld
imul
int
xchg
sarl
std
pop
inc
add
cmpsb
jmp
add
lret
fsubrs
sub
fsubs
and
xor
lret
adc
mov
pushf
inc
push
xchg
xorb
ja
ja
je
cmpsl
jge
sbb
leave
push
sub
push
popf
stc
lret
mov
lods
mov
mov
sbb
test
sahf
imul
das
lds
daa
fldl
pop
sub
sti
aam
fsubrl
xorb
add
inc
iret
xlat
sub
stos
cmp
pop
les
cmp
daa
js
mov
stc
negl
pop
mov
in
es
sub
sbb
xor
lock
jecxz
add
xor
mov
movsl
cmp
sti
call
adc
imul
jmp
loop
sbb
aas
mov
stos
dec
push
cmpsb
push
jb
fdivl
rcll
mov
push
into
and
aaa
pushl
inc
ja
dec
dec
ljmp
push
rclb
nop
out
inc
mov
xchg
xchg
out
dec
mov
add
lea
jnp
fnstenv
add
mov
mov
xor
in
push
fiadds
daa
stos
loope
fdivl
jns
cmp
int3
fdiv
hlt
and
push
push
xchg
inc
fs
add
xchg
and
scas
sbb
push
mov
lock
push
push
inc
sbb
sahf
lods
popf
push
inc
stc
cmc
loope
jae
xchg
sbb
fcoml
stos
or
and
sub
jg
sbb
stc
in
or
push
push
inc
xchg
mov
lcall
pop
jo
xchg
sbb
jmp
lea
push
shr
out
jle
repnz
and
push
cmp
xchg
adc
or
push
ds
mov
pop
lret
push
mov
mov
jle
js
xchg
in
jmp
in
xchg
icebp
iret
push
cmp
add
pop
dec
fwait
add
pop
imulb
or
and
sti
in
sub
push
out
add
xchg
das
test
cmpsb
pusha
mov
jmp
gs
adc
add
pop
outsb
rep
incl
add
mov
clc
xor
mov
cmp
mov
sbb
ret
mov
jns
int
sub
adc
and
rolb
notl
jmp
out
add
iret
testb
lret
add
hlt
jno
jbe
adc
xchg
mov
push
adcb
bound
push
xchg
mov
test
nop
daa
inc
jbe
pop
jmp
pop
mov
mov
xlat
and
in
mov
fstpt
sub
sub
aad
lds
push
push
jecxz
and
push
cmpsl
inc
adc
adc
inc
or
mov
fistps
adc
mov
and
scas
add
lods
xor
popf
cmpsb
stos
inc
sub
and
pop
cld
scas
out
test
jnp
xlat
mov
push
lret
sbb
xor
sahf
lret
test
pushf
fwait
mov
xchg
jg
and
mov
xchg
pop
cltd
int3
xchg
xchg
dec
adc
mov
or
add
lret
popa
cmpsl
ljmp
movsb
mov
ljmp
xor
xchg
mov
push
shrl
add
push
cmp
mov
cmp
pusha
jge
adc
mov
cs
aad
xchg
mov
dec
ljmp
jno
das
jnp
lret
rol
pop
cmp
data16
jns
push
mov
push
xchg
idiv
mov
mov
loope
and
inc
push
xor
stos
mov
pop
fimuls
push
dec
lret
pop
sub
out
add
ss
pop
xor
add
jl
popf
in
into
mov
xchg
data16
arpl
scas
mov
out
sbb
jp
jmp
and
jl
cltd
sarb
xor
int
mov
loopne
add
in
inc
mov
cltd
jle
sub
and
jl
add
sahf
dec
adc
sbb
pop
cli
cli
lea
mov
jecxz
ss
ds
and
movsb
pop
or
mov
push
shll
daa
inc
mov
cmp
or
bnd
aas
sbb
int
test
lcall
fucomp
imul
leave
ficomps
xor
xor
inc
mov
lahf
pusha
mov
in
jb
adc
ret
xor
push
pop
rol
mov
cmp
dec
mov
jo
and
jbe
sbb
xchg
sub
xchg
repz
imul
mov
cmp
adc
jmp
dec
inc
cmpsl
jb
cmp
mov
push
adc
adc
push
xor
mov
pop
xor
ret
sar
shl
shll
data16
das
mov
add
mov
xchg
mov
add
into
and
and
lods
inc
inc
inc
inc
and
push
sti
jle
push
sub
icebp
icebp
outsl
loop
fwait
sub
in
lock
push
mov
mov
push
mov
and
in
out
test
fsubrl
or
or
and
mov
test
nop
fcmovbe
mov
lds
mov
xchg
jo
pop
scas
and
nop
bndstx
into
gs
insb
xchg
lcall
fnsave
mov
subl
mov
push
sub
xchg
outsb
stos
dec
sub
lcall
xor
mov
movsb
fistpll
lcall
loop
mov
push
jb
fisubrl
mov
adc
std
js
xlat
in
xchg
shrb
sahf
mov
hlt
ret
sbb
lock
pop
dec
scas
add
add
mov
fisubs
call
ret
pop
je
xor
sbb
add
imul
push
mov
int
jg
dec
push
mov
outsb
mov
mov
mov
xchg
pop
stos
sbb
sub
aaa
xor
dec
shll
clc
pop
xor
pop
iret
push
add
loop
pop
jp
inc
pop
imul
fistl
out
movsl
xor
pop
xchg
adc
out
loope
sub
mov
sub
out
rcrb
push
push
out
xchg
sbb
cwtl
stos
cmc
mov
jne
or
mov
outsl
es
test
push
stos
insl
mov
loopne
scas
adc
xorb
rcll
fisubl
jno
pushf
mov
xchg
gs
adc
iret
fs
jbe
sub
je,pn
call
cmp
sbbl
jne
xchg
arpl
test
jne
test
adc
pop
addr16
xchg
in
rol
mov
jns
in
pop
dec
push
add
cwtl
xor
xchg
lcall
out
push
dec
lock
loope
inc
in
cmp
or
imul
adc
lods
pop
test
int3
push
sub
and
sbb
iret
repz
cltd
adc
mov
and
mov
pushf
mov
or
xchg
ss
repz
test
addr16
clc
iret
mov
mov
inc
fcomp
adc
xchg
test
insb
lret
xor
ljmp
mov
shlb
cmpsb
mov
dec
out
push
cld
or
pop
in
inc
pop
mov
sti
test
cmp
push
cmp
pushl
cmc
leave
imul
adc
dec
es
es
lods
ljmp
andl
dec
and
movaps
push
sti
std
sub
daa
pop
and
mov
ljmp
in
js
pop
sbb
adc
sbb
shll
mov
out
outsb
sbb
sub
ds
mov
dec
mov
xchg
mov
jbe
xlat
bound
pop
lcall
incb
gs
dec
push
xor
cltd
jns
xor
iret
or
clc
sbbl
inc
mov
fisttps
imul
lahf
lret
pop
rorl
jae
cmc
je
insl
iret
push
addr16
gs
sbb
mov
filds
pop
mov
adc
mov
outsl
outsb
add
divb
sbb
test
pusha
cmp
arpl
mov
clc
pop
imul
stos
fcmovnb
loop
or
xlat
xor
loopne
mov
dec
cmp
mov
and
sub
push
inc
test
loop
ficompl
aas
cmc
sbb
cmp
rol
rcrl
fsubs
sub
daa
loope
arpl
mov
adc
movsl
xchg
call
lock
mov
mov
inc
test
enter
mov
push
add
pop
aam
pop
mov
les
push
ret
inc
jl
movsl
cmp
mov
dec
in
xor
movsb
loope
pop
sub
sbb
mov
sar
pop
pusha
repz
inc
aam
jo
movsb
cli
mov
cmp
js
shrl
inc
lds
or
push
int3
push
out
pushl
mov
cwtl
pop
insb
int3
push
lds
rolb
inc
dec
jl
jnp
cmp
nop
mov
mov
sbb
xchg
pushf
repz
in
jecxz
pop
addr16
movsl
cwtl
jge
dec
lods
subb
int
insl
inc
mov
mov
loopne
nop
mov
aaa
jle
sbb
adc
leave
in
test
bound
psubw
mov
movsb
test
icebp
adc
out
adc
ljmp
in
sbb
or
addr16
bound
es
xor
ds
mov
cmp
aad
jp
test
or
imul
outsb
nop
mov
dec
push
in
xchg
fidivl
sub
jb
daa
pushf
ljmp
pop
mov
push
mov
xchg
outsb
les
jmp
in
cmc
leave
push
dec
insb
add
mov
aaa
into
dec
mov
jmp
popf
xor
xor
repnz
pusha
lods
xchg
push
test
xchg
cmp
fwait
push
aas
or
loop
cltd
adc
dec
fnstenv
adc
comiss
mov
rcrl
mov
mov
inc
outsl
cmp
cmpsl
lods
mov
ljmp
push
subl
inc
call
add
jo
ss
dec
xchg
outsb
cmpsl
lea
sbb
dec
insl
adc
adc
mov
lock
push
sbb
jg
xor
ss
pop
and
outsl
stos
xchg
mov
ss
shl
inc
dec
push
push
jmp
imul
dec
repz
insl
inc
clc
cld
xchg
ss
jne
paddq
jp
xor
add
mov
fdivrl
add
out
cmpsl
scas
adc
dec
repz
push
mov
lods
lock
push
sbb
stos
lds
aad
cmpsl
push
push
and
mov
xor
jno
stos
mov
xor
push
lcall
dec
pop
imul
clc
mov
clc
and
pop
push
daa
cmp
xchg
mov
inc
and
ficomps
shrl
insl
jmp
or
outsl
push
sarb
mov
ret
outsb
jnp
push
sub
inc
lcall
fisttpll
test
dec
mov
fs
call
mov
inc
pop
inc
cld
loop
cmpsl
mov
stos
imul
pushf
xchg
ja
lret
gs
es
mov
subb
ret
es
cwtl
inc
inc
jbe
out
aaa
mov
lret
inc
dec
lcall
int3
mov
jp
loope
or
add
aas
xchg
add
loop
enter
fdivrp
push
or
pop
call
or
lea
pushf
lea
je
leave
flds
inc
loopne
cmpsl
mov
aas
xchg
aas
mov
jb
dec
adc
pop
popf
pushf
js
loope
repz
rclb
add
daa
mov
ja
pop
popf
repnz
popa
or
jecxz
add
arpl
int
adc
lret
jl
mov
out
xor
dec
or
jo
mov
adc
mov
pop
xchg
sub
mov
lods
lds
rcl
xor
sbb
push
movzbl
inc
jecxz
imul
add
or
adc
dec
adc
cmc
cmpsb
xchg
mov
inc
xor
arpl
enter
pushf
push
mov
imul
or
xchg
mov
push
call
and
mov
fs
movsl
les
test
loope
mov
ret
pop
cmp
imul
dec
pop
addb
ds
pop
fisubrs
movb
dec
in
fnstcw
dec
scas
mov
aad
push
dec
cmp
je
xlat
xchg
adc
inc
cmp
imul
adc
lahf
lahf
pop
adc
inc
pop
add
or
xor
lods
mov
xchg
pop
jmp
xchg
lods
cmp
jecxz
xchg
aam
mov
dec
add
leave
test
repnz
and
or
sbb
fs
lahf
mov
jns
jns
jno
add
fstpt
pop
mov
mov
push
aas
jl
aam
mov
mov
imul
xchg
into
pop
fiaddl
daa
mov
data16
inc
gs
push
sub
aaa
test
int
mov
fnsave
push
mov
ds
enter
mov
sbb
cmp
stos
and
popa
dec
in
adc
enter
jnp
lds
cld
mov
adc
sub
inc
cld
int3
push
ljmp
mov
arpl
adcb
xor
adc
or
mov
jp
mov
fldenv
pop
xor
and
aas
sti
dec
leave
stos
push
pop
cmc
test
xor
ret
or
adc
jb
fnstenv
add
iret
add
in
std
push
jbe
bnd
cmp
cs
sbb
xchg
shrl
ret
inc
dec
fidivs
mov
rorl
in
mov
mov
mov
stc
dec
add
lret
idivl
loope
push
jno
out
aaa
lods
lds
aad
in
mov
and
cmp
ja
pusha
xlat
mov
mov
mov
push
lea
out
inc
cmpsl
cwtl
mov
in
or
jg
adc
jg
fs
jmp
mov
dec
mov
inc
fisubs
dec
pop
dec
test
add
es
pop
jle
les
sub
dec
enter
cwtl
repz
push
gs
popa
jb
mov
leave
mov
rcll
xchg
xlat
arpl
mov
lock
sbb
adc
js
pop
mov
cltd
or
inc
repz
movb
push
sub
cs
clc
inc
je
mov
add
pusha
mov
imul
pop
add
mov
jge
loope
pop
roll
mov
jo
jg
mov
rcrb
cmp
sarb
ja
outsb
xor
jnp
sub
ja
push
fwait
adc
es
xchg
scas
mov
ror
jl
pop
mov
icebp
ja
jle
test
push
sub
into
lds
je
pop
add
imul
sub
push
out
jb
aam
xchg
mov
jmp
dec
testl
push
sub
adc
pop
fldt
subl
inc
pop
call
jae
xchg
sub
fbstp
pop
and
xchg
sbb
jg
lahf
sbbb
std
insb
mov
mov
jmp
sti
stos
sbb
repz
filds
test
jecxz
push
js
add
add
flds
gs
lahf
adc
jp
xor
std
clc
jp
push
mov
xchg
movsl
stc
xor
mov
adc
jge
lods
mov
inc
pushf
push
adc
push
adc
cli
std
addr16
mov
andl
inc
es
inc
pop
iret
pop
add
pop
mov
cld
in
fidivl
cmp
jne
packsswb
mov
addr16
and
in
cltd
xor
out
dec
loopne
lds
inc
bound
push
xor
dec
ret
push
sti
xchg
jecxz
sbb
movsb
cmp
loope
loopne
aaa
push
push
xor
cwtl
jl
inc
xlat
shlb
adc
lods
out
add
mov
call
lahf
bound
jno
cmp
inc
out
clc
fadds
cld
or
mov
xchg
sub
or
les
xor
and
lcall
stos
shrb
xor
cld
add
xor
sub
push
push
rcll
loop
and
jo
add
dec
and
insb
mov
arpl
cs
jl
dec
cs
addb
mov
int3
addr16
cmpsb
fs
push
sbb
test
add
jmp
or
outsb
cmp
sub
mov
scas
aaa
xlat
repz
scas
cmpsb
lods
cmp
fdivl
adc
lods
sbb
jg
pop
loope
nop
incl
cmp
jge
xor
sti
inc
jmp
cmp
js
xor
fwait
ds
sbb
xchg
lods
xor
sub
pop
sbb
mov
js
push
stc
or
add
roll
andb
sbb
add
jne
cmp
mov
test
das
push
mov
or
pop
push
xchg
pop
outsb
dec
jb
ljmp
insb
cmp
addl
xor
pop
ljmp
fistpll
ds
fnsave
dec
xchg
sub
loop
out
movsl
js
pop
imul
ljmp
iret
jae
nop
mov
out
in
pushf
mov
mov
push
hlt
cmp
les
add
sub
std
mov
ja
mov
adc
xchg
pop
mov
data16
sbb
jecxz
into
xlat
mov
mov
pusha
xchg
out
xchg
dec
mov
jae
pop
xor
in
scas
inc
xor
jecxz
push
leave
mov
dec
push
xor
pushf
cmp
insl
push
sbb
dec
mov
dec
mov
mov
aad
sub
jns
cmp
xchg
lret
movaps
jo
out
pop
popa
pushw
push
cmpsb
mov
jns
sub
hlt
dec
adc
hlt
sahf
cltd
test
sub
mov
xchg
push
sub
lds
push
ss
movsl
push
into
pop
lret
test
add
and
push
pop
xor
fists
pop
mov
fcmovnu
jbe
push
stos
cmp
cmp
inc
mov
aad
xchg
lcall
add
fdivl
sub
cmp
mov
cld
es
jmp
sub
rcll
ss
test
cmp
js
mov
addb
push
mov
lahf
push
out
pop
push
push
incb
out
add
and
adcb
ss
lds
pop
jnp
dec
adc
inc
imul
outsl
es
aaa
dec
mov
and
xor
mov
and
mov
xor
adc
scas
inc
and
sar
sti
mov
xor
es
add
mov
mov
enter
int
or
xor
andl
jne
xor
aad
fiadds
sub
or
sbb
aam
in
mov
dec
out
aas
aad
mov
inc
call
test
mov
mov
dec
adc
jg
lds
aas
fiadds
xchg
xlat
mov
sub
test
testl
adc
sbb
xor
test
inc
gs
mov
and
mov
incl
fbld
cs
jb
push
movsb
dec
pop
es
movsb
and
jecxz
push
add
jb
push
adc
lahf
outsb
out
js
aam
or
adc
xchg
jg
les
lret
fimull
mov
pop
inc
sub
mov
cmc
and
pop
rcll
out
cli
fs
mov
loopne
mov
movsl
out
cmp
pop
scas
mov
fcomi
dec
adcb
in
or
lea
pop
test
in
jns
or
mov
push
sbb
pop
insl
inc
or
sarl
cld
xchg
scas
lods
insb
push
sbb
outsl
adc
push
call
fbstp
adc
adc
mov
lcall
lahf
pop
xor
or
lret
outsb
loope
dec
adcl
push
mov
dec
xchg
imul
adc
mov
adc
popa
loope
jb
ds
cmp
or
das
xchg
jne
not
sub
fxch
sub
psrlw
adc
push
jle
pop
sbb
add
aad
insl
mov
mov
sarb
movb
cmp
out
adc
sub
loope
cltd
iret
lahf
or
xchg
mov
or
pushf
jae
dec
cmpsb
sbb
repz
cwtl
or
mov
aam
fwait
shld
cld
xor
sub
daa
push
outsl
push
test
fdivrs
lea
and
cmpsb
inc
mov
jnp
leave
xlat
lock
cli
xchg
ret
mov
jecxz
sahf
adc
sub
cmp
sbb
mov
add
sub
mov
ret
roll
std
daa
and
mov
pushf
mov
inc
insl
arpl
shll
pop
jle
add
mov
mov
cmpsl
scas
push
mov
push
iret
pushw
push
sub
push
inc
out
xchg
jns
add
popa
xor
lods
xor
push
in
fdivrl
lods
jmp
jl
jo
andl
ds
pusha
addb
scas
test
sub
movsl
xchg
and
cmpsl
mov
cld
xchg
out
or
cld
test
sub
adc
aaa
inc
push
mov
xchg
test
push
cmovl
daa
add
pop
jb
stc
push
xchg
and
push
jle
mov
sbbb
cmp
aad
movsb
adc
into
push
cmp
mov
popf
fmuls
das
aam
addb
adc
scas
or
sarl
or
lods
and
scas
jge
and
es
xchg
inc
in
cmp
jns
fs
mov
dec
mov
pop
jnp
aaa
loope
cwtl
cmp
in
xor
xchg
mov
pop
or
inc
push
and
andb
repnz
movsl
clc
hlt
jns
pop
fsubrp
stc
push
ret
jp
inc
out
adc
jmp
dec
hlt
lahf
dec
mov
popf
jns
add
fdivrs
push
or
movnti
pop
adc
popa
adc
mov
insl
fs
inc
insl
neg
rol
fstps
mov
aaa
jle
adc
inc
mov
jg
xchg
sbb
aaa
inc
cwtl
in
shl
mov
out
jnp
mov
lods
dec
inc
psubusb
inc
cmp
repz
dec
fdivrl
push
aam
stos
mov
ret
jnp
push
aad
stc
or
or
pushf
out
xor
mov
mov
les
jno
or
pop
xor
loopne
pop
add
bound
push
and
xchg
mov
xlat
aaa
fsubrl
les
cmpl
mov
scas
loope
mov
aad
mov
pop
mov
cmp
inc
shlb
sub
rep
cmp
and
mov
sbb
les
repnz
or
aad
in
ja
jns
push
and
inc
out
movsb
aad
out
xchg
ja
add
mov
push
jb
cmp
loop
sbb
stos
inc
lcall
and
dec
rcrl
adcb
stos
inc
imul
outsl
cltd
xor
xchg
loope
sub
add
mov
sub
mov
cmp
lret
fmull
sarb
int3
push
sbbb
sbb
mov
jmp
fisubrl
shrl
cmp
push
andl
outsl
dec
mov
and
int
pop
js
mov
arpl
dec
jo
xchg
push
mov
sbb
notl
or
gs
mov
cmpsb
cmp
inc
faddp
pop
or
push
inc
mov
imul
inc
and
sahf
fidivs
inc
jae
lods
lock
andb
jnp
pop
inc
mov
jmp
sbb
outsb
push
add
pop
add
push
cmp
push
jno
xor
call
pop
pop
inc
push
cmp
loopne
pop
sub
jmp
lcall
lods
xlat
cmpsl
sub
mov
repz
shll
jle
push
xchg
sub
xchg
xchg
jb
insl
adc
sbb
add
mov
pop
mov
and
or
cmpsl
sbb
negl
popf
push
das
jge
mov
add
addr16
dec
add
aam
mov
push
sbb
addr16
cmp
ss
pop
test
rorl
add
fmul
mov
jl
jo
pushw
and
sbb
add
inc
scas
jno
mov
xor
add
ds
mov
dec
fstps
sarb
stc
xchg
out
lahf
clc
or
adc
imul
or
jmp
sub
cmp
adc
ja
ret
into
arpl
and
inc
push
push
ljmp
dec
adc
xlat
or
sti
mov
dec
pop
and
pop
fsubr
movsl
lock
daa
outsb
add
xor
push
je
fsubrl
ja
mov
fistps
or
mov
ret
je
shlb
insl
inc
decl
je
or
xor
pushf
mov
sub
xchg
js
sub
repnz
cwtl
push
sub
jo
mov
mov
pop
mov
lcall
loop
shrb
pop
xchg
outsb
cmpsl
lock
xchg
mov
add
lret
dec
inc
push
sbb
punpckhdq
je
jle
mov
insb
adc
fdivr
push
jge
and
sub
aas
stos
pop
jne,pt
inc
pop
mov
and
cmp
cmpsl
pop
lods
sbb
ret
orb
fdivrl
lea
push
fst
dec
imul
mov
push
jno
mov
jno
cmp
arpl
pop
or
and
leave
mov
aad
stos
pop
imul
pop
dec
shrb
in
sbb
loope
cmpsl
add
add
mov
jno
js
cmp
adcb
mov
es
cmp
gs
sbb
mov
mov
dec
jmp
push
lahf
xlat
jl
fsubr
add
xchg
pop
mov
movsl
cmp
out
cmp
inc
ret
mov
outsl
sbb
aam
sub
je
pop
enter
arpl
insl
sbb
mov
movsl
adc
add
loop
lret
punpckldq
and
cmp
subb
pushf
mov
rcrb
das
pmaxub
loope
add
icebp
cmp
sub
insb
sbb
mov
sub
mov
shll
sbb
or
cmpb
mov
push
xchg
scas
fcomps
fs
jno
call
adc
push
cmpsb
scas
and
iret
rol
pop
out
clc
notl
jge
and
sahf
jo
jb
ljmp
dec
mov
adc
sub
push
jo
push
sub
es
fisubrs
jg
dec
das
dec
mov
xchg
lret
push
pop
loope
mov
or
add
sbb
mov
jg
stos
sarl
jmp
iret
add
daa
dec
enter
dec
jae
popf
loope
iret
pop
fs
out
sahf
cld
push
and
mov
jae
je
mov
pop
popf
sub
add
inc
inc
pop
push
js
dec
push
cmpsl
jp
mov
inc
fs
push
sub
or
or
pop
jo
call
xor
cmp
mov
jmp
daa
outsl
inc
inc
imul
lods
push
cmpsl
test
int
dec
bound
pop
cmpsb
sub
lret
jae
test
shl
mov
jmp
adc
push
das
rorl
roll
in
xor
icebp
negl
cmp
adc
hlt
jl
sahf
jno
icebp
push
adc
inc
stc
popa
and
pop
repnz
mov
jp
push
push
push
adc
cmp
mov
fbstp
jp
mov
jmp
push
cmp
or
cmpsl
sub
into
pusha
enter
add
out
cmpsl
cmpsb
shrl
out
sub
sbb
push
loopne
repnz
jle
out
ret
xor
add
outsb
xor
push
mov
ret
adc
lret
inc
adc
lret
jmp
ret
fstpl
mov
in
mov
popa
xlat
push
gs
jge
popl
jecxz
mov
xor
or
cmp
or
pop
xchg
pop
cmp
aam
mov
je
imul
xchg
loop
push
adc
adc
je
xchg
popl
cmp
andl
js
push
pop
adcl
xchg
rcr
fwait
mov
and
je
lods
das
cmc
mov
stos
popf
mov
add
loop
pop
cli
or
jl
mov
dec
cmpsl
or
push
sbb
xchg
and
cmc
mov
lock
xchg
std
and
push
jne
xlat
test
push
leave
int
outsb
mov
and
mov
scas
jnp
test
pop
leave
int
cmpl
xor
sub
xlat
pop
lds
pop
outsl
movb
imul
fiadds
aas
mov
ds
push
pop
cmp
nop
movsb
mov
jp
lss
xchg
push
ja
cmp
or
fnstsw
pop
loope
inc
pop
jb
mov
cmpb
add
pop
sahf
clc
aam
lahf
cli
adc
pushf
in
mov
fnstenv
je
pop
mov
pop
daa
mov
int
ds
push
sub
aas
cmpsl
push
inc
pop
test
jnp
mov
outsl
je
adc
shll
imul
cmp
pop
xor
pop
in
mov
popa
test
sahf
mov
jae
push
mov
mov
jbe
xchg
ret
push
into
icebp
xchg
or
call
cli
shlb
adc
cmp
xlat
fwait
cli
lods
mov
js
mov
daa
xor
stos
inc
sub
mov
or
push
xchg
mov
inc
in
xchg
out
pop
loope
mov
hlt
test
lret
mov
pop
pop
es
inc
push
scas
xor
jmp
andl
jne
cmp
cmp
sarl
cmpsl
aas
dec
call
aad
push
mov
ljmp
and
sti
fsub
jmp
push
jle
and
clc
mov
stos
lods
sbb
cltd
pop
dec
and
popa
jnp
dec
jle
jp
inc
jecxz
cmpsb
out
test
jmp
or
mov
mov
ret
lds
insb
out
xchg
or
cmp
cltd
or
mov
inc
add
jns
or
dec
cmpsl
fs
and
adc
sub
lea
daa
aam
add
lret
out
ss
fdivrl
sbb
mov
or
rcrl
inc
outsl
push
inc
ret
out
adc
dec
pop
test
push
lds
popf
mov
add
push
pop
sub
mov
jo
mov
pop
stos
lahf
mov
cld
movsl
jne
xchg
sub
hlt
mov
and
in
jns
cmc
adc
mov
xlat
or
and
or
or
lods
or
cmp
and
or
daa
xor
popf
xchg
mov
jecxz
bound
fisttps
pushf
jecxz
iret
cmpsb
cmc
or
ret
pop
add
lock
std
cs
xor
and
arpl
push
and
bound
adc
pop
pop
jno
jae
cmp
mov
xor
inc
or
cmp
or
xchg
xchg
imul
es
add
fsubrl
int3
lahf
jmp
arpl
pusha
push
and
mov
stc
jb
cmp
push
pop
fstps
scas
paddb
jle
cmpl
popf
cli
jl
aaa
andl
fldcw
inc
movsb
fucomp
jge
iret
sbb
jmp
or
test
adc
push
aaa
addr16
xchg
mov
cmpsl
insb
daa
or
movsb
addb
mov
push
cmpsb
es
sti
lcall
int3
pop
mov
cmpsl
daa
jp
dec
fmul
fisttps
mov
mov
dec
es
lock
in
imul
jnp
cs
lcall
cltd
das
stos
aas
idivl
lea
int
scas
pop
add
dec
mov
sti
aad
jle
cltd
scas
ret
in
add
cmc
jge
mov
pop
add
or
mov
push
nop
fildll
add
out
cs
mov
pop
cs
or
movsl
stos
iret
insb
jle
and
sub
inc
pop
clc
shlb
add
bound
in
rolb
leave
mov
std
mov
xor
dec
cmp
adc
mov
pop
xor
jne
mov
sub
je
cmp
xchg
dec
cltd
dec
push
xchg
out
mov
lock
add
mov
dec
movsb
loopne
add
jns
mov
lds
sahf
int
int
movsl
std
outsl
mov
test
ret
xchg
aad
dec
in
mov
dec
inc
push
in
mov
and
jae
js
ret
xor
and
shrb
lock
daa
inc
dec
out
sti
lds
and
mov
lret
icebp
inc
push
ljmp
daa
pop
jg
push
push
addr16
mov
call
mov
dec
movsb
jmp
fcmove
mov
out
stc
test
cmp
pop
mov
pusha
or
cmp
add
dec
fistpl
rcl
xchg
push
dec
jl
repz
stos
jmp
shrl
clc
fwait
xor
mov
pop
cmc
ljmp
int
es
rcrb
loopne
adc
mov
aaa
jo
adcb
xlat
pushf
lea
repz
aam
jbe
divb
loop
xchg
cs
dec
in
add
in
jmp
mov
dec
orl
add
mov
fdivs
ficoms
movlps
push
xor
incl
sub
xchg
push
jo
das
or
mov
call
dec
pusha
outsl
sub
dec
push
cmp
add
shll
lds
sbb
das
jne
aad
pop
dec
push
xor
mov
data16
pushf
jg
mov
cmpsl
push
loopne
xchg
xor
mov
and
cli
inc
lret
shlb
shll
cmpsb
shlb
mov
jle
push
mov
mov
push
aad
jb
push
jne
xchg
rorl
addr16
inc
lds
out
fbstp
jecxz
test
mov
ret
repz
insl
loop
jnp
lret
add
mov
mov
push
iret
lods
in
dec
fldt
hlt
andb
fsubrl
pop
imul
movsb
mov
xchg
mov
xchg
mov
xchg
in
mov
js
es
pusha
les
ss
cltd
test
mov
mov
mov
mov
sbb
jno
lret
sbb
test
mov
repz
xchg
cmp
inc
mov
sbb
das
and
cmp
xor
pop
outsl
repz
lea
imul
roll
bnd
or
sub
mov
js
jne
imul
hlt
or
sti
movaps
inc
pushf
lds
sti
jl
popa
out
aaa
scas
xchg
mov
sbb
sbb
rcrb
sahf
cltd
push
pop
fdivs
lods
jmp
push
sub
addb
cli
fsincos
or
pop
ljmp
ljmp
fidivl
push
mov
dec
in
push
dec
ficoms
rcr
mov
js
inc
lret
js
or
dec
scas
and
hlt
cmp
mov
gs
and
mov
outsb
cmp
addr16
sbb
fnstcw
xor
pusha
out
lahf
xor
test
js
xor
sub
fisttpl
xchg
cmp
xchg
lahf
lods
stos
xchg
loopne
fwait
jbe
mov
jae
push
idivl
sbb
dec
pop
mov
pop
xchg
cli
inc
pop
aaa
mov
push
orb
scas
ret
pop
and
les
in
rorl
aas
cltd
clc
scas
push
push
outsb
sti
jnp
shll
outsb
daa
or
rcrb
out
mov
mov
pop
xchg
in
jae
jg,pn
add
sbb
call
into
idivb
movsl
jmp
sub
xchg
pop
insb
mov
rclb
push
pop
inc
mov
fstpt
cli
sarb
lret
in
push
jb
movl
jmp
and
pushf
cli
insb
and
push
lods
cmp
daa
rcrb
lret
clc
ja
and
inc
pop
pop
cmp
push
inc
popf
pusha
dec
dec
pop
insb
xor
aam
cmpsb
lock
adc
sti
xorps
pop
or
leave
inc
pop
xlat
or
aam
sub
std
dec
lret
fsubrl
leave
add
mov
aas
xchg
in
jp
xor
and
dec
pop
push
call
xchg
sti
cmpsb
and
inc
loope
mov
lock
push
sub
or
daa
sub
adc
mov
xor
fdivrp
loopne
mov
ret
mov
aaa
push
adc
data16
xchg
mov
xchg
hlt
jbe
pop
mov
fabs
jns
pop
cli
xchg
lea
sbb
icebp
mov
cwtl
cmp
jns
cmp
pop
icebp
mov
cmc
inc
es
sub
add
repz
rcr
push
dec
leave
xor
mov
fs
and
loop
pop
xor
fbstp
push
mov
push
xor
inc
push
clc
mov
or
jns
jp
sahf
pop
mov
in
push
fcomi
inc
push
lret
jbe
enter
mov
lret
mov
ret
pop
sarl
shr
outsl
enter
mov
insb
mov
mov
xorb
movsl
xor
push
jmp
loopne
sbb
jae
inc
mov
xchg
xor
leave
je
je
mov
pop
fcomps
xchg
test
sti
movd
enter
fdivr
clc
dec
jecxz
lret
into
pop
mov
add
mov
cmpsb
in
in
rcrl
jns
xor
std
xor
add
mov
push
inc
addb
fimull
or
pop
bound
dec
adc
fwait
push
test
sti
arpl
dec
cmc
push
test
fldenv
cmp
packuswb
inc
xchg
shlb
push
lods
push
movb
pop
fucom
pop
mov
xchg
test
push
movsb
mov
pop
pop
out
add
mov
and
adc
aaa
fs
movsb
push
aad
bound
out
test
mov
sub
repz
mov
xchg
dec
in
pusha
adc
lea
adc
insl
scas
pop
lock
xchg
notl
pop
test
into
sbb
xchg
imul
rcr
ljmp
rcll
pop
fprem1
inc
test
add
xor
loope
inc
fs
aas
scas
mov
iret
sbb
nop
ljmp
and
lods
mov
pop
sub
arpl
imulb
xchg
js
call
cmp
jae
cmp
and
gs
inc
iret
pop
imul
aam
jecxz
loope
push
jl
add
mov
xchg
push
add
out
adc
rcrb
cmp
jb
inc
movsb
stos
and
xor
int
stc
adc
pop
js
jg
push
mov
rorl
mov
jp
enter
pop
cltd
rolb
xor
and
popa
lahf
pop
addr16
or
xor
outsl
fbld
mov
lds
sti
fwait
push
repnz
fiadds
mov
xchg
imul
clc
sti
xchg
pop
fwait
jge
call
in
xlat
jnp
push
mov
add
das
xchg
mov
dec
push
push
pop
dec
iret
cs
orb
mov
stc
add
mov
loop
mov
fadd
iret
push
in
xchg
ljmp
xor
daa
rclb
pop
scas
sub
push
cltd
add
jecxz
das
popa
scas
test
xchg
into
push
xor
mov
xchg
in
shrl
inc
sub
jb
test
xor
push
adc
mov
inc
jge
out
and
or
push
jl
faddl
inc
movsl
sub
or
fdivrl
loop
or
mov
push
cld
push
popa
pop
in
gs
lahf
sbb
xor
and
sbb
arpl
addr16
or
es
test
outsb
sbb
xchg
movsb
pop
je
ja
mov
outsb
jnp
lahf
mov
clc
inc
sbbb
sti
push
das
push
sar
mov
fimuls
mov
lods
xchg
int
popf
je
xlat
push
xchg
or
pop
xchg
stc
aam
aaa
loope
aas
pop
aad
jnp
cmp
pop
push
repz
mov
sub
outsl
in
stos
mov
or
dec
pop
fdivl
lods
mov
sbb
lret
shlb
pop
or
push
push
inc
fstpl
pop
nop
cmp
imul
gs
mov
sub
jo
and
xor
add
daa
add
aaa
xchg
sub
lds
aaa
sbb
cli
cmc
sbb
das
sub
push
or
and
repnz
shlb
mov
fadds
test
add
sub
dec
stos
lds
nop
insb
jne
cmp
fists
popf
in
inc
xchg
lods
out
xor
into
loop
icebp
rol
add
jns
mov
jno
bnd
scas
movsl
xor
cmp
aas
popf
or
sbb
sbb
cld
sarl
or
repnz
repnz
loop
add
and
or
scas
shl
jmp
xor
pop
jo
popf
jnp
jnp
andl
lcall
in
xlat
jge
pop
and
and
and
out
dec
imul
sub
jge
lea
xor
add
cmp
nop
add
rcl
adcl
mul
aad
xlat
lahf
xchg
lock
cmc
inc
notl
cltd
push
cmp
add
sbb
add
es
push
sbb
mov
rclb
fmull
movsl
sub
mov
cs
or
in
cmp
push
jmp
test
pop
cmp
pop
mov
jno
mov
mov
mov
repz
push
mov
enter
das
xor
push
out
jno
cmp
mov
adc
sbb
xor
in
shl
push
add
fbstp
out
imul
sub
xchg
dec
mov
out
dec
pop
jmp
out
pusha
sub
mov
aad
mov
loope
into
enter
sbbb
call
mulb
sub
out
xor
xor
inc
shlb
scas
sub
out
iret
xlat
cmp
push
pop
jmp
ficoml
popl
pop
fmull
sub
inc
sub
dec
dec
pop
cli
or
cmpsb
adcb
mov
repz
inc
sub
mov
pop
into
mov
sub
mov
or
and
mov
pop
sbb
adc
ds
xchg
mov
mov
sub
jnp
adc
pop
cmp
mov
and
sahf
subl
int3
or
lret
popf
loop
ja
xor
call
or
adc
movsl
xchg
add
mov
addr16
out
imul
cmp
ret
cmc
jl
loop
adc
or
pop
mov
lods
mov
insl
das
fucomip
es
les
xchg
ljmp
mov
jne
js
imul
add
js
mov
cmc
insb
push
push
push
xchg
jae
or
jecxz
mov
mov
mov
cmp
test
push
pop
adc
imul
adc
inc
mov
cwtl
adc
fimuls
and
mov
mov
push
adc
popf
xchg
cs
jle
dec
and
mull
lods
adc
xchg
sub
subl
mov
adc
or
inc
mov
push
int3
arpl
cmpsl
ljmp
das
ficompl
cld
lcall
or
movsl
add
jmp
fdiv
out
iret
fstps
sub
cmp
cmp
push
or
aaa
push
ja
or
aas
mov
out
mov
mov
mov
pushf
adc
bound
ss
clc
out
add
in
ljmp
sbb
hlt
test
push
into
gs
loopne
or
call
mov
arpl
pushf
cli
in
or
mov
or
pop
pop
or
add
ds
repnz
test
scas
adc
xor
push
rorb
scas
cmc
scas
push
adc
fistpl
inc
push
fsubl
dec
icebp
and
mov
les
fcomps
mov
inc
movsl
jg
sbb
adcb
add
mov
mov
pop
or
xchg
sahf
inc
mov
sbb
dec
pop
add
xchg
imul
jmp
or
push
sti
xchg
and
stos
xchg
scas
or
mov
test
loop
popa
scas
testl
inc
dec
out
mov
call
sub
jbe
mov
adc
in
aas
ret
mov
sbb
jecxz
or
add
push
out
pop
rclb
test
mov
fidivs
rcr
call
jg
sbb
int
adc
and
dec
adc
lods
mov
leave
mov
push
push
out
fidivrl
add
fbld
mov
mov
les
push
mov
fucomip
jbe
dec
loope
sbb
jle
subb
fwait
xchg
test
mov
out
loopne
pop
lahf
mov
shl
sbb
dec
or
xchg
lahf
les
inc
insl
sub
dec
push
jo
jmp
negl
push
adcb
cmpb
sbb
ds
mov
inc
inc
mov
lock
dec
jecxz
test
or
jae
call
addb
inc
add
adc
pusha
data16
mov
mov
dec
clc
mov
adc
out
xor
mov
jno
mov
cmc
xchg
adc
je
aam
add
insb
insl
out
sbb
mov
rclb
xchg
push
add
xchg
inc
push
out
jecxz
outsb
cmp
xchg
xchg
mov
int
fsubs
or
sbb
in
sub
jle
imul
lahf
xor
cmp
scas
cwtl
jmp
jns,pn
mov
mov
bound
aad
pop
sbbl
pop
and
rcll
scas
inc
jo
js
push
jg
lods
mov
sahf
xor
or
das
push
mov
cmp
outsl
xchg
cmpb
jne
mov
xchg
pop
ss
ds
cmpsl
mov
out
mov
test
pop
push
lds
les
cli
fisubrl
out
enter
add
pop
sub
xrelease
xchg
sub
jo
aad
out
or
cmc
cld
mov
xor
lods
dec
test
mov
jb
sbbb
loope
test
mov
imul
mov
mov
inc
test
in
rclb
sub
xchg
xor
and
loop
mov
repz
add
xor
int3
jmp
inc
push
lods
mov
aaa
xchg
or
lods
fsub
in
pop
xor
ret
xchg
pop
xchg
push
test
flds
in
in
sbb
xchg
repnz
ja
sbb
jl
mov
sub
rcrl
add
xchg
cmp
mov
dec
add
pop
cltd
lock
daa
clc
or
add
xlat
lret
cmp
add
movsb
int3
cmpsl
mov
rcll
out
es
mov
lret
sahf
lods
repnz
andl
loopne
and
int3
rcll
fildl
sub
lcall
ja
mov
mov
fdivs
jmp
test
add
adc
adc
mov
stc
scas
mov
movsl
idivl
dec
sub
mov
add
jnp
cmp
mov
jb
imul
inc
push
xor
rorl
push
cmp
mov
pcmpgtb
mov
sub
push
inc
jnp
xlat
mov
fldenv
pusha
xor
sbb
daa
cmp
jl
jae
popf
in
or
lret
mov
lahf
imul
cmp
std
xchg
mov
adc
mov
or
sub
insl
add
data16
leave
push
pop
push
movsl
inc
cli
pop
out
and
aad
ds
and
mov
mov
pop
mov
pop
imul
lret
fildll
xor
and
lods
push
lret
sub
add
inc
mov
lds
add
lcall
add
and
pop
outsb
inc
xor
fistps
push
xchg
sub
test
call
inc
movsb
mov
push
xor
or
mov
adcl
cmp
lahf
sub
outsb
les
sbb
in
jg
pop
popf
into
lods
add
add
push
and
leave
and
inc
in
jbe
ret
pop
les
mov
in
push
mov
xchg
imulb
out
sbb
mov
cmp
imul
aam
xor
stc
xchg
outsb
add
iret
popfw
stos
jge
out
in
mov
or
aaa
mov
sbb
xor
pop
inc
arpl
inc
in
iret
data16
subb
xor
test
inc
lock
sub
pop
lcall
lahf
mov
rolb
xchg
not
mov
stos
test
inc
test
inc
mov
cld
push
push
decb
sub
xchg
mov
negl
aad
shl
mov
leave
xor
movaps
fstps
xchg
push
into
arpl
push
in
rcrb
std
sbb
or
push
jge
add
into
andl
gs
inc
xchg
jns
test
sbb
xchg
mov
ds
mov
fsubs
mov
es
ds
cmpsb
jo
mov
addr16
nop
ret
mov
push
push
add
xor
sub
push
pop
popf
mov
daa
out
sbb
jbe
pushf
icebp
xchg
out
outsb
jno
jg
ret
stos
shlb
ja
imul
xlat
es
in
hlt
fsubl
xor
mov
outsl
in
pushf
sbb
or
mov
or
xor
pusha
sub
insb
jbe
xlat
cmpsl
mov
cmc
push
in
or
pop
cmc
dec
and
cmpsl
loope
and
mov
lods
pop
xchg
xchg
cwtl
push
cmp
lret
xchg
mov
jns
ljmp
call
stc
push
push
jnp
loopne
mull
imul
mov
mov
or
hlt
xchg
aam
xorb
jnp
mov
sbb
cmp
dec
add
sub
mov
insl
dec
shrl
addb
imulb
inc
aaa
push
push
sub
pop
out
jle
aad
in
xlat
jl
rolb
fwait
aas
cmp
arpl
add
inc
cmp
mov
aam
insb
mov
or
loop
pop
mov
cmp
mov
push
aam
xor
sbbl
xchg
cmp
lahf
mov
jmp
xor
adc
aas
dec
cmc
xor
push
lods
sub
out
arpl
jmp
dec
push
or
inc
sbb
movsl
jbe
dec
loopne
push
dec
pop
mov
or
jo
inc
lds
push
cmc
movsl
lcall
fisubl
shrl
jp
jo
sub
pop
test
dec
pop
sub
stos
dec
test
push
cmpsb
es
lods
dec
insl
hlt
int
pop
call
pop
dec
orb
stos
sub
inc
testb
sbb
sbb
sbb
add
jns
in
sbb
xchg
xchg
push
dec
addr16
icebp
xor
jmp
xor
mov
in
mov
mov
jne
mull
mov
and
test
xchg
mov
ret
mov
loope
xchg
lods
add
mov
mov
icebp
add
aam
hlt
mov
sbb
int
out
jae
addr16
or
mov
push
add
xlat
jno
dec
call
adcb
adc
jns
in
sar
add
pop
and
arpl
pop
jecxz
xchg
or
cmp
hlt
cmp
add
push
ficoms
imull
dec
lea
addr16
lret
inc
push
sahf
xor
enter
pushl
xor
fcoms
addb
fldcw
push
sub
xchg
pop
lock
dec
and
mov
in
lcall
mov
xchg
push
inc
idivl
loop
mov
jmp
fiadds
xchg
out
push
jmp
inc
stos
test
ljmp
cmp
mov
pop
xchg
pop
outsb
shrb
ljmp
push
or
xchg
xor
mov
mov
in
inc
sti
adc
inc
popf
jno
iret
data16
push
ljmp
testl
daa
sbb
pop
xor
cs
rolb
popa
add
mov
mov
xor
pop
arpl
jmp
sub
lret
mov
test
sbb
mov
ret
roll
lahf
pop
sbb
mov
xchg
ljmp
sub
lods
xchg
in
xorl
or
add
or
mov
and
add
cmp
ljmp
jae
in
or
pop
fiaddl
arpl
push
adc
bound
loope
ss
or
ljmp
mov
sbb
pop
dec
cmc
mov
and
dec
rcll
inc
in
adc
adcl
xor
dec
fiaddl
adc
sbb
lods
cmp
add
mov
fisubs
sub
or
clc
aad
out
cmpsl
mov
call
cmp
xlat
add
mov
jl
iret
imul
cltd
ds
and
test
dec
pop
dec
jl
jle
push
dec
pop
subb
push
push
sbbb
sub
push
ljmp
cltd
mov
push
push
xor
int
mov
bnd
add
ds
fldcw
push
or
pop
jl
pop
aaa
lret
mov
or
std
dec
xor
xor
xchg
rcll
test
adcb
or
cmp
mov
and
pop
add
mov
das
or
mov
jbe
popa
push
or
inc
cmp
cmp
and
addl
pop
fnstsw
or
imul
adc
and
push
sbb
push
mov
fstpl
xor
pop
rorl
or
addr16
cld
add
mov
xor
inc
xchg
xor
inc
mov
in
or
cli
sub
int3
out
dec
jae
add
stos
mov
sub
adc
movsl
pop
pop
sub
lret
jmp
push
adcl
adcb
xchg
jo
sahf
lds
notl
mov
cmp
xchg
mov
dec
add
mov
orl
mov
sbb
ds
sahf
inc
mov
shrb
xlat
push
in
addl
dec
and
mov
dec
sub
pop
dec
ljmp
jb
push
insl
push
inc
js
xchg
mov
push
push
jmp
and
or
sub
out
cmc
negl
lods
cmp
mov
pop
leave
pop
imul
rcr
adc
pop
inc
out
add
push
int
enter
insb
mov
daa
mov
jno
mov
push
cld
cmpl
jl
xor
out
or
cmp
jo
add
imul
jae
push
adc
xchg
adc
adc
popa
inc
adc
pop
fsubrl
and
std
cwtl
cmpsl
movsl
mov
xchg
push
xchg
call
ja
pushf
pusha
pop
dec
popl
pop
adc
test
sti
xchg
lods
push
mov
pop
popa
cld
add
sub
xchg
out
call
jbe
dec
mov
or
jbe
ljmp
cli
inc
test
push
push
mov
xor
inc
mov
sbbb
and
mov
mov
int3
divl
sti
and
test
insl
xchg
push
lahf
std
adc
mov
loope
inc
mov
adc
in
jnp
dec
lret
push
or
pmulhw
and
push
xor
dec
repnz
out
mov
ss
inc
in
ficomps
cwtl
idivb
mov
std
or
scas
shl
je
aas
stos
fcompl
jno
out
mov
xchg
sub
pop
mov
sbb
sub
in
xchg
sub
sbbl
sahf
mov
mov
lea
rcrb
or
adc
jns
repnz
xor
loop
daa
xchg
jns
popa
fcomps
int3
xor
sti
or
popa
mov
pushl
out
pop
test
mov
add
stos
jnp
cmp
nop
test
and
push
or
outsl
jns
std
sub
xchg
mov
test
xor
nop
movsl
pop
movsb
test
outsw
push
fidivl
dec
scas
cmp
loope
test
mov
mov
inc
lahf
testb
mov
shl
in
or
sub
mov
or
or
push
xchg
sub
mov
insl
movsl
int
inc
hlt
je
xor
jno
mov
rep
inc
sub
inc
and
xchg
or
adc
xor
fwait
pop
xchg
mov
stc
ds
and
jecxz
and
fidivl
inc
cmp
add
leave
xchg
pusha
fnsave
out
dec
inc
sti
test
out
xchg
sub
mov
ret
push
mov
dec
pop
out
xor
jns
xor
cwtl
xchg
mov
or
test
or
xor
mov
pop
out
xchg
jmp
pop
jns
push
cmpsl
into
cmpsb
push
aaa
enter
cmp
or
jg
inc
add
jne
dec
fcomps
pop
addr16
data16
ds
and
cli
xchg
sub
bound
cwtl
gs
cmp
mov
loopne
push
mov
jne
mov
fldt
popa
cmp
xchg
sub
fbstp
pop
mov
jl
das
shll
fs
adc
rcrb
adc
xlat
movsl
and
jg
jl
dec
int
aad
lock
xchg
movsl
pop
ja
dec
pop
xor
call
xchg
ret
loop
and
pop
cmp
jp
dec
sbb
outsb
or
xchg
and
popa
mov
loop
xchg
imul
mov
aam
jno
es
es
test
push
das
sub
cwtl
sub
imul
mov
pop
jnp
mov
pop
mov
push
mov
mov
xchg
rep
inc
xlat
stos
jo
xor
mov
shrl
or
sub
mov
mov
pop
insl
jno
push
in
jge
inc
jl
pop
jge
jge
pop
in
jge
jge
test
lret
push
scas
loope
sub
rorb
push
aad
push
add
pop
arpl
xor
pusha
gs
inc
sti
xchg
pop
jp
dec
lods
inc
jnp
add
testl
clc
fs
cld
int
addb
out
jno
mov
ds
leave
xor
or
ja
cmpsb
mov
fiaddl
add
sti
lods
test
pop
loopne
nop
movl
loopne
push
xor
clc
add
iret
and
jmp
sub
add
sub
addr16
cmp
test
negl
scas
mov
js
xchg
lock
or
imul
cmp
loope
out
add
subb
loop
xor
mov
xor
cmp
pop
ucomiss
lcall
mov
adc
rol
fimuls
aaa
test
imul
mov
and
mov
outsb
rorb
push
sbb
sahf
pop
mov
mov
jecxz
or
pop
sahf
push
cmp
or
sbb
xor
lods
ss
mov
cmp
and
fsub
loope
jge
mov
loopnew
aam
mov
push
std
inc
and
cmp
testb
leave
inc
ds
inc
out
pop
mov
fisttpll
inc
mov
dec
mov
shrl
pop
imul
rorl
jnp
mov
cmp
fcomi
pop
push
cmpsb
cmp
mov
fisttpl
fisttpl
je
xchg
sub
push
sub
xor
pop
imul
popf
outsl
out
in
sub
out
dec
xorb
sub
push
jne
pop
inc
scas
mov
push
sub
lds
dec
pop
dec
int
inc
dec
xchg
mov
cwtl
xchg
outsl
jge
mov
add
jl
movsb
repz
jmp
sbb
popa
mov
clc
fcmovu
rolb
fwait
cmpsb
mov
and
stc
fcmovu
divb
cmp
dec
cwtl
inc
call
xlat
daa
inc
pop
scas
jae
mul
sti
out
cmp
sbb
icebp
jl
pop
jbe
hlt
dec
cli
or
aas
rorb
mov
and
push
cld
mov
orb
push
pop
dec
je
pop
cmpsb
jge
insl
pop
push
movb
gs
xor
pop
xchg
add
rclb
sub
adc
dec
pop
jecxz
jecxz
stc
push
outsb
jne
push
jns
cmp
arpl
imul
push
bound
iret
sldt
test
xor
bound
xor
jbe
and
add
sarl
scas
int
std
stos
inc
das
sar
or
js
cmpsl
mov
fdivrs
rorl
mov
loope
sbb
push
cmpb
sbb
stos
push
xchg
pop
inc
outsl
ss
mov
lret
cs
cmp
push
rcrb
and
and
jmp
or
cs
mov
sbb
push
hlt
push
push
je
adcb
jge
shll
in
xchg
jne
mov
leave
jmp
popf
xchg
inc
das
jnp
push
aaa
cmpsb
push
mov
inc
daa
push
andb
mov
mov
in
jp
jns
leave
repnz
push
lcall
adc
mov
mov
fwait
rolb
mov
mov
inc
popf
mov
in
inc
push
fidivl
dec
insb
cmp
frstor
dec
sbb
or
or
cmp
lock
je
arpl
cmpb
ret
jge
sarl
sbb
jne
lea
jmp
xor
mov
inc
and
cltd
push
outsb
dec
lcall
rolb
inc
cli
repz
and
adcb
push
lahf
cmp
mov
mov
in
sub
loope
std
fcompl
or
fidivs
aam
jmp
sbb
cmp
mov
jg
stos
cmp
push
loop
dec
dec
cmp
mov
and
mov
incb
incb
dec
call
push
loopne
lret
mov
das
dec
xor
push
xor
imull
push
hlt
jp
les
jecxz
dec
pop
jb
cmc
sub
pushf
pop
sub
inc
inc
out
pop
daa
push
scas
adc
mov
inc
push
in
clc
jbe
push
lds
pop
movsb
cmp
insb
push
add
lea
cld
jne
icebp
mov
inc
mov
push
test
mov
cmpsb
dec
dec
mov
sahf
cmp
push
test
xchg
pop
pop
push
rorl
stos
push
out
ret
int
push
mov
fstl
push
es
xchg
sbb
dec
xchg
cmp
mov
add
or
frstor
idivl
cs
pop
push
call
mov
push
sub
cmpsl
cmpsb
addr16
data16
cs
xchg
lock
inc
fs
push
scas
sbb
mov
mov
popf
push
je
mov
out
fcompl
insl
lahf
jmp
xchg
mov
mov
xchg
aam
rcr
mov
std
nop
cmpsl
ret
leave
into
in
jbe
adc
mov
dec
jmp
div
xchg
mov
mov
arpl
nop
aad
pusha
dec
jge
mul
test
xchg
xchg
dec
shll
mov
aas
sbb
lret
xchg
pop
mov
push
jbe
adc
shll
lahf
test
push
xchg
push
pop
pop
popf
xchg
mov
pop
enter
push
jno
pop
lods
push
fsts
fsubs
push
scas
mov
xor
cwtl
stos
sub
inc
pop
lret
adc
pop
mov
inc
pop
or
sbb
movsb
test
icebp
mov
imul
mov
or
pop
popf
mov
push
cld
adc
mov
out
cmpsl
aas
jmp
pop
cs
mov
adc
ds
push
inc
xor
mov
dec
out
loope
dec
mov
lea
stos
pop
fwait
push
testl
rdtsc
mov
push
jg
call
mov
lret
xorl
xchg
pop
and
les
icebp
jnp
xor
sbb
lock
push
cmc
fwait
dec
fsts
cmpsb
inc
pushf
jl
fsubr
mov
test
jle
jmp
or
pop
add
or
insl
and
push
dec
xor
cmp
sbb
sub
inc
enter
ds
mov
mov
jne
xlat
cmpsb
and
insb
sti
mov
xor
aad
mov
mov
mov
and
sub
push
dec
andb
shr
push
mov
stc
cli
dec
out
daa
out
loop
cmp
jns
add
out
or
in
mov
fbstp
fdivs
push
inc
test
icebp
test
arpl
cltd
pushf
xor
dec
ljmp
int3
fidivs
cmp
ja
mov
clc
push
movsl
sbb
mov
mov
adc
into
xchg
xchg
push
push
lods
jns
mov
mov
mov
and
popf
and
push
outsb
cmp
mov
pop
push
mov
in
sbb
push
lods
cmp
and
lock
add
cmpsb
inc
xorb
inc
rcrl
dec
push
jmp
push
inc
pop
add
inc
adc
mov
in
rolb
mov
ja
pop
mov
mov
push
mov
lret
es
jb
and
jbe
mov
sbb
stos
push
out
mov
or
pop
inc
int
jb
xor
sbb
jb
pop
jae
in
mov
jbe
mov
adcb
mov
insl
mov
call
add
sbb
inc
lret
sti
imul
mov
push
ret
ds
xor
test
add
pop
and
mov
and
inc
data16
add
mov
aam
outsb
repnz
adc
jp
imul
mov
movsl
pop
xchg
add
cmpsl
fildl
inc
andb
pop
cmpsl
jb
sbb
xor
inc
mov
add
in
inc
sub
je
inc
adc
out
mov
cmp
frstor
push
adc
lret
pop
das
cmp
jg
push
mov
repz
pop
popa
mov
das
jne
pop
cwtl
popf
sub
mov
test
inc
daa
mov
int3
sub
cwtl
xor
scas
cmp
addb
rcl
bound
mov
push
xor
cmpb
pop
push
dec
cwtl
inc
ljmp
aam
pop
mov
xchg
cs
add
pop
jno
pop
cs
sub
adc
jns
pop
mov
adc
inc
mov
push
lcall
scas
mov
push
scas
inc
xchg
pop
xchg
push
movsl
int3
inc
mov
in
sub
xchg
icebp
leave
inc
and
push
pop
test
dec
jecxz
leave
xchg
mov
repnz
adc
cld
mov
mov
je
cmp
jne
cwtl
sub
popa
cli
sti
iret
aad
pop
mov
jns
cmp
push
dec
mov
aam
push
fninit
mov
popa
cmp
fs
or
dec
cli
mov
cmpsl
mull
stos
ficomps
shll
cld
adc
sbb
inc
xlat
imul
imulb
push
pop
es
imul
xchg
and
sbb
pop
mov
cmpsl
push
xchg
imul
imul
out
push
sbb
pushf
pop
adc
sbb
mov
sbb
and
mov
sub
xor
push
add
cmp
fistpll
cmp
loope
push
adc
xchg
add
nop
mov
xchg
mov
xor
push
mov
push
add
roll
mov
cmovae
adc
xchg
aaa
xchg
test
mov
in
sahf
cmpsb
add
fcmovne
popf
and
adc
jo
inc
sbb
pop
cmc
popf
repnz
mov
lret
inc
arpl
stos
push
aaa
pop
adc
xor
lret
loope
aad
push
lahf
outsl
fisubs
mov
enter
push
test
xor
mov
add
ret
fdivs
adcb
out
push
call
dec
pop
loopne
insl
fmul
out
or
or
mov
repz
adc
ror
pop
imul
pop
and
into
adc
xchg
xchg
mov
push
and
js
sahf
add
inc
js
aam
out
shld
lahf
jecxz
rcrl
cltd
sti
xchg
adc
dec
je
jnp
jle
cmp
dec
neg
jg
mov
jmp
mov
mov
jbe
mov
or
and
mov
sub
adc
into
fsubr
test
mov
icebp
scas
mov
les
jbe
fisubl
insb
push
push
jne
stc
mov
xor
test
repz
or
lea
sub
dec
ret
test
sbbl
rcrb
adc
inc
inc
jo
mov
dec
push
lret
xor
pusha
incl
sbb
mov
bound
dec
cli
dec
aam
jg
in
leave
xchg
mov
scas
sub
dec
pop
push
xchg
cs
mov
sub
lods
jnp
sub
popl
cmp
iret
int3
adc
rsqrtps
jo
pop
arpl
xchg
sbbb
ds
jo
ja
or
mov
push
xchg
mov
lea
adc
xor
xorb
insl
sti
adc
movsb
cmp
into
add
stos
dec
ret
fstl
das
pop
call
mov
rcrb
shll
cmp
out
push
cmc
mov
shll
fstpt
dec
leave
mov
or
xchg
sbb
out
adc
imul
lea
or
push
in
loop
cld
jecxz
add
outsl
inc
pop
in
decl
ja
mov
je
push
cmp
add
mov
sbb
pop
sub
lret
ja
ret
les
xchg
fldl
push
xor
pop
sub
test
insl
les
mov
lret
and
movsl
lahf
xor
ret
data16
cld
enter
cs
addr16
sub
fcos
jg
mov
daa
mov
aas
lock
cli
mull
cmpb
push
fcompl
mov
push
rorl
out
stc
nop
fidivl
in
sahf
or
mov
test
cltd
xchg
shr
lods
xchg
aaa
xchg
orb
cmc
ja
jbe
or
sub
jg
pusha
andb
add
int3
sbb
xor
bound
lret
stc
nop
push
lea
sti
xchg
shl
mov
jae
mov
xchg
js
mov
inc
jb
dec
add
mov
xor
aas
pusha
pop
mov
pushf
pop
pop
pop
std
xchg
xchg
xorl
sbb
pop
sbb
push
push
cmp
ss
ljmp
fdivs
fcomi
fcmovnbe
cmp
movsl
repz
xor
test
mov
lcall
shlb
inc
repnz
cmp
adc
pusha
inc
xchg
or
jo
pusha
cmp
test
pop
orb
mov
mov
dec
jo
sahf
pop
lds
dec
jo
xchg
push
mov
push
clc
inc
pop
mov
popf
jge
into
das
mov
fidivs
mov
xchg
mov
fnstsw
incl
xchg
sahf
xor
pop
int3
xor
mov
sbb
mov
inc
fwait
mov
pop
cmpb
mov
arpl
sub
lahf
and
fidivs
or
adcb
rolb
xor
addr16
cltd
add
sbb
vdivsd
inc
out
imul
popa
pop
popa
xor
rorb
subb
pop
mov
or
jb
pop
mov
ret
sub
arpl
aam
arpl
push
ffreep
pop
push
add
outsl
daa
es
fcmovbe
stc
pop
scas
pop
jno
ds
xor
aad
dec
mov
xor
shll
mulb
sub
sbb
pop
adc
mov
int3
cmp
mov
lock
ja
push
pushf
adc
jbe
push
cmp
jne
jae
add
sbb
adc
mov
aas
cwtl
xor
repnz
adc
push
jmp
jno
xchg
stc
sbb
or
cmp
test
add
adcb
shrl
pmulhw
sbb
mov
out
cmp
xchg
cmc
push
daa
ljmp
aaa
adc
mov
mov
in
sub
nop
mov
insb
imul
mov
aad
loop
aaa
lret
dec
je
jecxz
in
test
dec
addl
cltd
xchg
lret
cmp
mov
adc
fsubl
pop
xchg
mov
push
or
leave
fldenv
pop
or
push
dec
stos
cli
repz
rclb
mulb
xchg
fs
fwait
xor
outsb
mov
fnstsw
call
jne
jge
mov
cmpsb
fst
imul
sbb
mov
fisttpll
addr16
mov
stos
imul
jno
cmpsl
out
xor
mov
fsubr
jbe
xorl
js
sbb
sbb
inc
mov
mov
xchg
mov
xchg
out
lahf
dec
in
xor
mull
insl
add
jbe
in
int
and
cld
sbbl
icebp
push
call
dec
pusha
outsl
mov
scas
ds
mov
xchg
mov
xchg
scas
push
popf
loopne
cltd
xor
mov
mov
push
bound
call
push
scas
lret
and
inc
mov
and
lods
pop
shrb
jnp
xor
ret
outsb
in
fwait
cmovnp
adc
in
jnp
cmpsb
leave
in
xlat
push
jmp
mov
lods
pop
pop
pop
push
jl
jle
pop
or
mov
aam
rcr
es
filds
sbb
dec
pop
imul
inc
sub
or
xchg
test
std
fistpl
test
lret
push
push
loope
or
add
add
pushl
cmp
cmp
xchg
or
jle
push
nop
call
outsl
push
mov
test
lret
hlt
mov
jne
sub
push
pop
mov
xchg
and
mov
inc
bound
dec
out
int3
loope
sub
iret
mov
mov
imul
pusha
add
pop
repz
adc
pop
jnp
imul
add
jecxz
mov
jge
test
mov
and
mov
imul
cmp
loop
push
stos
mov
push
or
stos
fcompl
data16
jp
mov
add
push
lods
lcall
adc
xchg
push
cmp
movsb
inc
aas
sbb
cmp
mov
sbb
sub
jle
or
pop
shll
pop
idiv
mov
insb
pop
cmc
popf
enter
ret
hlt
pop
test
push
push
test
ficompl
sub
cli
xlat
mov
inc
xchg
add
sarb
les
enter
clc
repz
add
adc
xchg
shrb
mov
icebp
sti
pop
adc
push
outsb
out
sbbl
push
adc
dec
xor
mov
mov
in
mov
gs
mov
fsubrp
pushw
sbb
loopne
nop
cmp
loopne
jo
hlt
iret
pop
sahf
sbb
cmp
div
adc
int
test
xor
add
jle
rcrl
or
add
xchg
idivb
aad
mov
adc
in
inc
dec
test
jnp
or
fdivrs
mov
je
jecxz
ljmp
cmc
jp
inc
and
push
stos
add
push
lods
es
je
aad
cmc
in
sti
pop
push
dec
data16
outsb
add
fnstsw
mov
rolb
scas
inc
mov
adc
push
jb
xchg
adc
xor
mov
cmp
sub
imul
aaa
jno
das
nopl
iret
loopne
in
scas
jo
dec
add
bound
push
lds
rcrl
das
jmp
cmp
sbb
cvtdq2ps
imul
jmp
in
insl
pop
pop
and
out
and
cmp
mov
xchg
inc
jg
mov
inc
fwait
mov
push
push
data16
shrl
mov
xchg
mov
in
test
outsl
xchg
mov
imul
imul
adc
jne
inc
pop
and
repnz
dec
es
sbb
mov
ja
xchg
xor
cmp
adc
cwtl
add
jns
test
sbb
icebp
mov
mov
add
inc
cmp
mov
sbb
fbstp
sti
fxch
and
mov
popl
inc
xor
and
pop
pop
out
ret
sub
fwait
sahf
out
loopne
push
cmp
cwtl
stos
das
out
push
adc
cltd
cmpsl
xchg
ror
xor
inc
repnz
icebp
xor
cmp
loope
lahf
adc
mov
dec
loop
sub
add
mov
jno
xchg
xchg
xchg
aam
les
mov
or
imul
ljmp
pushf
xor
sub
pop
pop
sti
xchg
mov
xchg
aad
mov
or
sbb
xchg
dec
in
xor
xlat
repz
or
cmp
std
xchg
xor
lcall
pop
push
in
sbb
xchg
roll
lcall
notb
cmp
xchg
inc
dec
sub
or
sbb
mov
sbb
and
rdmsr
mov
fildl
mov
enter
jbe
cmpsb
adc
je
les
add
cmpsl
repnz
fstl
test
sbb
xchg
out
sub
adc
sub
pop
sbb
ret
jle
neg
mov
cmp
and
into
xchg
xor
dec
jmp
add
xor
inc
xchg
push
xchg
inc
adc
xchg
jmp
mov
cltd
in
movl
mov
add
mov
jp
mov
out
cli
test
mov
testb
dec
andb
in
scas
and
inc
shr
jmp
jle
call
or
inc
popa
mov
push
pop
aam
xor
jle
jg
rolb
dec
adc
out
xchg
jne
push
jg
repnz
clc
leave
inc
enter
mov
xchg
sub
stos
movsb
jecxz
shrl
sahf
ja
inc
fldcw
dec
pusha
je,pt
lcall
lcall
iret
mov
ret
stos
jl
pop
cs
das
push
lds
sarb
in
mov
loope
rcrl
push
lods
xor
mov
test
outsl
ljmp
jo
or
cli
data16
lret
gs
enter
push
and
pushf
outsl
add
shrl
out
and
movsl
outsl
mov
inc
mov
dec
sub
pop
fstpl
daa
in
xchg
lcall
pop
ret
push
and
inc
loopne
jecxz
cmp
out
je
insl
daa
inc
repnz
cmp
mov
push
xchg
lret
xor
out
aas
rclb
inc
lret
sub
lds
add
jb
mov
inc
imul
fsubl
push
pop
repz
shl
lcall
mov
sub
or
xchg
cli
imul
adc
sti
jne
push
push
fadds
or
test
addr16
jge
inc
fs
mov
fsubp
loop
push
lcall
ljmp
inc
pop
xchg
popf
or
lcall
bound
pop
lods
sti
ja
cmpsb
test
scas
fimuls
adcl
and
cmp
repz
jae
sahf
int3
arpl
insl
add
sahf
repnz
inc
outsb
and
cmpsl
imul
mov
jg
pop
mov
roll
xchg
jno
movsl
inc
popa
cmp
jp
xlat
dec
cmp
hlt
or
push
loope
mov
adc
pop
add
call
data16
icebp
push
adc
loope
mov
sub
push
insb
lds
sub
jl
pop
loopne
out
inc
data16
test
dec
js
shrl
sbb
pop
ja
in
jg
xor
pop
pop
push
or
inc
pop
mov
pop
push
push
jo
lret
and
mov
and
jo
or
jmp
and
add
xchg
mov
pop
ret
pusha
pop
ffree
les
xor
jo
lods
xchg
fs
mull
mov
dec
mov
jg
lds
mov
add
ss
outsb
push
hlt
fwait
cmp
movsl
fs
adc
call
hlt
sti
inc
xor
jnp
mulb
and
add
xor
xchg
xlat
cmp
xor
push
mov
mov
test
outsl
out
lds
or
es
loop
es
xchg
jp
and
dec
jge
nop
pop
fstp
mov
frstor
and
in
arpl
out
cmp
push
jge
pop
pop
shrb
gs
int3
mov
ja
mov
gs
push
sahf
add
aaa
inc
stc
and
andl
mov
pop
es
fildl
cmpsb
mov
xchg
push
test
leave
xchg
cld
enter
or
js
inc
add
add
mov
ret
loope
push
ljmp
mov
aam
mov
icebp
cmp
pop
js
fld
in
test
mov
mov
test
xchg
cmp
insb
add
rcrb
xor
mov
jp
aaa
push
dec
fsubl
in
test
pop
dec
fnstsw
jge
push
or
gs
fmuls
shrb
adc
xor
outsl
dec
adc
dec
sbb
or
cmp
scas
inc
dec
pop
sbb
imull
sbb
gs
loop
inc
mov
mov
addr16
scas
xchg
sub
mov
das
call
jl
mov
adc
into
pop
es
out
psrad
sub
mov
ljmp
cmp
adc
cmpsl
cmp
fildl
push
cmp
scas
not
jae
int
add
pop
adc
ja
adc
mov
roll
pop
divl
mov
pusha
jne
cmp
xchg
inc
xchg
cwtl
adc
inc
mov
popa
loope
rcr
inc
xor
xchg
sti
jg
rorl
adc
dec
adc
sbb
sbb
cwtl
push
or
mov
push
and
or
xorl
fdivr
push
das
jo
popa
jno
mov
xchg
jae
pop
sub
jno
scas
andl
fwait
sub
inc
gs
out
push
jmp
out
xchg
pop
sub
adc
pop
push
repnz
stos
fistpl
mov
xorb
movsb
mov
fwait
pushf
xchg
loope
data16
mov
cwtl
mov
xor
cs
sbb
outsb
ret
lret
sub
cltd
sub
cld
scas
inc
jns
aaa
jnp
lcall
out
jl
xlat
movsl
mov
mov
and
mov
out
out
ffreep
out
ds
cmp
mov
fldcw
cwtl
xor
or
pop
ret
aas
leave
out
popa
cmp
add
adc
dec
loop
cmp
mov
push
es
xor
adc
rorb
ja
mov
jecxz
mov
cmp
das
arpl
sub
push
jg
add
jns
lods
cld
or
sub
shll
add
clc
jae
aam
pop
call
test
movsl
test
stc
jp
adc
js
dec
data16
jb
cld
inc
jo
std
xor
pusha
mov
das
in
and
cs
insl
das
push
loope
fcmove
lods
xorb
xchg
mov
repz
pop
pop
sbb
mov
mov
mov
mov
cmp
mov
jne
cmpsl
push
ljmp
jb
push
mov
adc
les
fstpt
into
sbb
jle
pop
mov
repnz
and
imul
sbb
mov
mov
and
cmp
add
jle
popf
addb
orl
decb
lea
std
push
sbb
mov
mov
push
out
add
add
inc
and
adc
add
out
imul
sbb
mov
push
mov
dec
lea
test
cld
cwtl
mov
mov
adc
sbb
sbb
pop
xchg
mov
dec
loopne
std
pop
push
mov
movsb
arpl
rcrb
jae
popf
stc
push
jmp
jno
leave
loope
mov
add
cmp
pop
jmp
cli
jnp
sub
jbe
enter
and
aam
inc
and
xor
mov
cmp
mov
int3
jmp
xchg
mov
xchg
sbb
jg
push
out
add
cli
stos
mov
imul
push
inc
hlt
xchg
or
popf
lods
mov
push
fsubr
mov
lea
xor
mov
movb
xchg
js,pn
rcrl
rcll
ss
dec
mov
dec
int
in
outsb
aas
daa
mov
add
mov
sbb
lcall
ret
mov
xchg
jg
mov
or
ret
pop
testl
jmp
mov
ljmp
andl
pop
cmp
fwait
cmp
out
xchg
mov
subps
jnp
cmc
stos
sub
jnp
int
inc
imul
push
sti
roll
add
out
lods
les
cmpsl
rcll
mov
das
into
and
sub
and
mov
loop
sub
push
mov
addr16
cli
test
sub
ss
sub
mov
test
dec
xor
adc
jl
mov
bnd
test
sbb
mov
imul
in
jns
int3
add
ret
enter
daa
pop
jae
push
ret
rcr
out
fs
filds
in
ffreep
outsb
or
sahf
push
cltd
push
cmp
cmpl
setno
adc
dec
sahf
jb
hlt
xchg
daa
outsl
and
movsb
lahf
fucomi
mov
xchg
lcall
sbb
int3
adc
add
scas
jl
fisubs
out
ret
shl
adc
jno
sub
dec
xchg
out
std
jbe
clc
inc
adc
mov
jo
xchg
mov
aam
mov
push
outsl
push
xchg
or
xchg
in
bound
in
cmp
scas
aas
jmp
push
les
enter
icebp
xchg
mov
loopne
cli
inc
mov
lock
jl
sbb
mov
imul
stc
mov
sub
mov
sti
mov
cmp
mov
pop
andl
pop
sub
cmp
ljmp
jns
dec
std
aaa
fsubrl
jnp
cmovno
sar
sub
lea
in
je
add
fisttpll
sti
mov
sbb
pop
test
insl
cmp
sbbb
ret
outsl
test
out
sub
enter
xor
mov
or
jp
jle
andb
xchg
cmpsl
not
sbb
add
outsl
inc
sbb
out
pop
divps
jb
cmp
stc
or
fst
ret
sarb
lock
ss
sub
xchg
repnz
mov
in
imul
out
in
test
push
nop
push
adc
jbe
mov
cmc
inc
xchg
jmp
imul
mov
xor
pop
inc
push
into
popf
mov
mov
xchg
mov
or
add
adc
mov
add
pop
push
sahf
enter
addr16
call
lea
aam
mov
cli
xor
outsb
fnstcw
cmc
pop
lret
lret
aad
jae
call
ss
in
inc
mov
sub
hlt
rol
cmp
icebp
or
xchg
andb
dec
scas
inc
inc
iret
leave
out
out
movsb
sbb
mov
push
aaa
ret
fldcw
lret
fs
mov
fiadds
repz
in
test
mov
cmpsb
add
or
add
add
clc
cld
xchg
into
mov
dec
in
in
rcrl
inc
clc
pushf
jg
in
cmp
xor
jp
fidivrl
xchg
jp
in
mov
out
sub
add
call
xor
ljmp
pop
out
fwait
out
out
clc
sbb
fnsave
imul
cmp
imul
into
scas
cmpsl
movsb
mov
add
das
cs
pop
ljmp
negb
fstps
mov
xorb
stos
imulb
test
nop
aaa
std
or
cld
xchg
dec
lock
add
js
daa
in
sbb
repnz
das
mov
js
dec
sub
jno
lret
dec
dec
mov
xchg
fmuls
push
lods
inc
imul
int3
xor
inc
pop
hlt
sub
sub
mov
ret
inc
insl
lods
mov
sub
xchg
pop
add
leave
adc
jb
push
bndstx
mov
test
cmp
call
inc
lea
cltd
mov
dec
and
adc
rcrb
ficomps
mov
cmove
mov
jne
in
outsb
ss
shrb
repnz
or
sbb
jecxz
add
adc
dec
push
cwtl
adc
imul
cli
mov
mov
mov
xchg
jg
push
in
dec
add
or
inc
sub
pop
xchg
add
rolb
mov
sub
jo
jne
in
inc
and
mov
lcall
mov
sti
fists
idivl
jbe
inc
push
mov
lcall
and
push
inc
sbb
push
sahf
mov
pop
adc
daa
mov
repnz
repnz
es
adc
cmp
xchg
push
mov
in
in
sub
or
push
pop
aaa
push
addb
inc
mov
xchg
scas
or
sub
xchg
cmc
mov
in
loop
das
cs
jp
fstps
clc
xor
mov
push
xchg
lahf
push
imul
adc
xchg
cmpsb
push
jge
pop
movsb
pop
sbb
enter
mov
fdivs
dec
add
scas
out
scas
repz
inc
jl
push
push
ret
sbb
sbb
sub
rcll
stc
mov
add
or
aaa
dec
xchg
rcr
lods
cmp
hlt
and
arpl
add
mov
sbb
push
xchg
add
test
mov
pop
in
or
lods
and
add
lret
out
sbb
out
jmp
sub
jmp
in
mov
aas
mov
xor
jecxz
jmp
jns
sahf
lods
and
cs
xorb
ds
stos
pop
mov
stc
push
lahf
mov
pop
pushf
js
inc
iret
test
ja
fisubl
mov
call
pop
or
rorl
sahf
ljmp
lcall
movsl
xchg
iret
fdivs
insb
add
lods
test
inc
lods
inc
mov
dec
bound
ret
in
repnz
test
addr16
cmc
adc
add
add
jl
lcall
push
into
jecxz
test
frstpm(287
mov
std
arpl
cwtl
bound
push
cld
dec
add
jno
stc
push
fstpl
jg
mov
push
jns
les
sub
in
push
insl
mov
sbb
in
mov
dec
or
fnstenv
shll
dec
add
jmp
adcb
jne
inc
push
sahf
sbb
icebp
xchg
rcrl
insl
jl
lds
std
mov
xor
loope
xlat
sub
mov
loopne
jmp
xor
mov
dec
test
andb
cld
cmp
sbb
repz
xchg
sub
shl
ret
sub
fcmovnu
pop
in
inc
repz
int3
mov
insb
pop
enter
icebp
rorb
mov
repz
pusha
shl
ja
faddl
negb
repnz
or
dec
gs
jecxz
std
ret
pop
add
xor
cmp
dec
dec
add
aam
in
xchg
push
fldl2t
pop
insb
jge
andl
mov
mov
or
push
mov
push
jae
mov
dec
aam
cmpsl
mov
mov
pop
fucomip
or
scas
add
push
xlat
fldcw
push
add
fdivr
insb
daa
loop
and
add
dec
inc
dec
or
sub
jne
sub
xor
mov
mov
sbb
push
fisubrl
xchg
mov
jno
inc
sub
sub
scas
ret
mov
loop
jp
xchg
inc
push
inc
jmp
cltd
pop
popf
mov
pop
dec
into
xchg
test
lahf
push
andb
dec
jmp
jle
xor
bound
jecxz
sub
clc
mov
sti
pop
fwait
xor
pop
dec
pop
jb
insb
jle
ja
fwait
xchg
sbb
cs
pop
cmpsb
mov
add
xchg
notb
cmp
testb
sarl
out
pop
jno
shrl
mov
cmp
cmpsb
dec
scas
pop
jle
push
imulb
xchg
sub
aam
movsl
jns
pop
jg
sub
pop
mov
xchg
jbe
test
cmp
in
adcl
mov
in
push
aas
sub
push
push
xchg
or
push
jge
popf
push
ljmp
mov
rcrl
jecxz
or
je
out
dec
decb
adc
dec
mov
movb
jl
push
push
inc
sbb
pop
cmpsb
xorb
sub
and
push
jmp
add
mov
sbb
popf
movsl
jp
pop
scas
inc
jle
dec
pop
cmp
xchg
sbb
lea
sbb
scas
add
inc
sti
inc
inc
sub
fdivs
xor
push
cmp
ljmp
test
je
fwait
repnz
test
dec
inc
and
cmp
test
ret
cmp
mov
cmpsl
sti
push
or
ss
and
jbe
leave
fwait
sti
addr16
dec
stos
daa
notb
ror
pop
fmul
and
pop
out
scas
xchg
jbe
pop
cmpsb
add
inc
ja
mov
dec
inc
cli
xchg
lock
scas
cmc
fucom
pop
pop
ss
cmp
aas
shll
test
cmp
in
das
ds
add
mov
xor
outsl
mov
pop
lahf
pop
pop
aas
aaa
insl
mov
insl
pop
cmp
dec
in
mov
aas
scas
inc
cmp
data16
sbbb
out
cld
inc
roll
cmc
aaa
push
pop
mov
inc
push
cwtl
mov
push
push
jb
jbe
xchg
mov
sub
cmp
lret
es
xchg
ds
cmc
xor
aaa
xchg
sbb
dec
push
leave
adcb
or
xchg
mov
mov
mov
rolb
out
inc
lret
pop
inc
and
inc
stos
loopne
xor
mov
pop
xchg
popl
dec
sub
and
aad
mov
into
aaa
outsb
aad
cmp
mov
or
and
pop
xchg
aam
and
aam
stos
test
dec
cmpb
mov
iret
callw
dec
fisttpll
pop
xlat
ljmp
mov
testl
adc
jmp
vpcmpeqd
cltd
jl
or
add
in
out
lret
inc
and
or
cltd
jae
xchg
xlat
sar
xchg
cmp
out
out
xchg
sbb
imul
aad
add
xor
hlt
push
loop
imul
and
insb
test
mov
inc
xor
adc
pop
dec
incl
jb
fwait
sti
sbb
imul
fists
and
lds
push
daa
lcall
or
xchg
in
mov
clc
cmp
push
lret
divl
daa
loope
or
out
shlb
and
inc
ret
addr16
mov
aam
adc
int3
sub
pop
test
movntps
sbb
push
jne,pt
mov
cmc
mov
adc
out
mov
aaa
pusha
mull
jge
push
out
or
aad
add
xlat
popa
dec
or
idivb
lahf
mov
frstor
lret
and
xlat
cwtl
aad
inc
or
mov
or
cmp
cs
test
imul
and
mov
out
inc
out
sbb
sub
aam
push
enter
jle
fisubrl
test
dec
mov
mov
sbb
test
push
or
aam
jno
xchg
mov
lds
scas
repnz
testb
test
call
jnp
xchg
fucomi
sub
movsb
add
mov
shrl
pop
movsb
fcmovb
insb
push
mov
testl
mov
lret
push
xor
xor
test
rcrl
xor
cmp
xchg
mov
lret
push
imul
dec
add
xor
rorb
loope
xchg
loop
sub
shl
push
adc
inc
pop
push
leave
scas
mov
nop
int3
rclb
aas
test
pop
cmp
clc
stc
xchg
push
jnp
push
cmpsl
inc
movl
adc
cmp
lahf
jb
and
popf
fcomps
cmp
mov
in
movsl
xchg
mov
or
jnp
into
cltd
in
xor
add
movb
shlb
or
outsb
jle
or
or
sub
xchg
cld
xchg
ret
outsb
inc
fbstp
sub
mov
inc
and
int3
mov
xchg
sub
notl
negb
in
les
push
leave
call
mov
xchg
lods
inc
repnz
push
push
imul
out
dec
xchg
aad
mov
mov
pop
arpl
mov
sbb
lahf
jo
lods
xor
cmp
xchg
push
mov
ror
test
mov
xlat
inc
add
cld
xchg
aam
cmc
push
inc
fimuls
xchg
inc
inc
or
ret
mov
xor
repnz
test
movsl
cmp
cld
test
xor
inc
popf
or
sub
in
jnp
adc
xor
lret
inc
inc
cmp
jecxz
xor
aam
push
jae
fisubl
loopne
outsl
xlat
pop
arpl
sub
hlt
repnz
pop
lcall
shlb
mov
imul
xchg
xchg
mov
je
in
adc
ja
std
aad
or
int3
mov
or
pop
pop
rcll
fmull
imul
jbe
push
cmpsl
cmc
sbbl
xchg
arpl
cmpsl
ljmp
cli
lahf
adc
lods
dec
adc
pop
push
test
es
subl
or
test
sbb
das
xchg
mov
jo
push
inc
sbb
dec
xlat
mov
sbb
aas
jbe
xchg
fwait
pop
cwtl
sbb
xchg
sbb
mov
out
sbb
jo
or
jb,pt
mulb
ficomps
mov
fsub
test
mov
arpl
lcall
push
mov
xlat
push
xor
movsb
jbe
sbb
loop
mov
push
scas
mov
rcll
jnp
into
push
push
jmp
mov
bound
clc
popl
shl
adc
xor
inc
ret
mov
adc
lock
jnp
gs
add
or
jb
fnstenv
xor
or
xor
lcall
dec
and
cmp
loopne
dec
lea
mov
xor
mov
xchg
clc
mov
insl
xchg
and
not
xor
mov
movsl
lock
adc
scas
xchg
faddl
in
dec
fistpl
mov
cltd
test
test
sbb
fmull
stos
xchg
adc
jne
add
adc
fistpll
mov
jbe
hlt
mov
repz
sub
pushf
notb
ljmp
xabort
push
in
test
mov
jnp
xabort
push
or
into
mov
in
js
sbb
test
mov
push
xchg
sub
movsl
sbb
mov
js
mov
ret
xchg
add
addr16
sbb
aaa
into
in
shrl
push
push
inc
sub
push
mov
sbb
pop
mov
sahf
scas
in
addl
rclb
add
adc
test
inc
xlat
sub
scas
inc
jmp
push
push
popf
addl
orb
ret
stc
mov
sub
loopne
pop
mulb
call
push
sub
mov
mov
and
xor
sbb
mov
inc
jg
outsb
add
mov
in
stos
insb
dec
pop
repnz
sub
fwait
jne
add
jns
sbb
jg
stos
and
push
lret
popf
stc
gs
and
sub
xchg
lcall
jp
and
in
lods
pop
jge
push
into
je
arpl
jb
mov
cmc
add
mov
ljmp
in
int3
mov
gs
mov
mull
les
insl
mov
pop
cmc
mov
push
in
xor
jl
pop
out
cltd
xor
jg
dec
outsb
add
fsubr
push
les
or
pusha
test
pusha
push
popf
xchg
lcall
loop
enter
fbstp
xchg
pop
cmc
arpl
xchg
xchg
out
adc
daa
xchg
pop
ja
cmp
into
mov
repz
inc
inc
adc
mov
lret
bound
cmpsl
lea
xor
inc
sub
adc
add
sub
xchg
in
ret
test
adc
sbb
pop
pop
inc
fmuls
out
lods
imul
lods
and
popa
add
xor
scas
inc
mov
out
std
popf
in
or
push
popf
dec
lock
cltd
push
lods
inc
orl
popa
fsubrl
mov
xor
stos
inc
imul
push
adc
enter
fnstenv
xor
pop
cltd
ret
pop
int3
push
popf
xor
in
loope
pop
push
push
mov
aam
xor
mov
js
sub
xchg
aas
js
sub
jnp
enter
jecxz
int
out
sti
adc
inc
add
nop
xor
aas
xchg
push
pop
scas
mov
push
movsl
icebp
mov
movsb
cmp
cmp
inc
jns
pop
scas
outsb
adc
or
cs
orl
add
mov
fsubrs
or
push
lods
stos
pop
mov
nop
leave
lcall
sbb
fbstp
push
rcrb
mov
repz
or
or
jnp
pop
call
decl
lods
adc
ss
jo
das
push
daa
mov
jl
cmp
xlat
sahf
cmp
lret
testl
stos
jae
cmp
imul
cltd
xor
loope
sbb
inc
mov
jbe
les
cwtl
mov
jnp
out
xlat
outsb
sbb
ss
arpl
inc
jbe
in
shll
inc
pop
add
mov
mov
mov
fcmovnb
pop
adc
lahf
xor
ja
outsb
pop
das
lea
aad
fucom
add
pop
sub
and
sub
fnsave
sbbl
sub
test
xor
loope
cs
mov
fdivp
mov
bound
scas
inc
and
jae
sub
das
jbe
pop
mulb
add
bound
mov
fadds
add
inc
jns
push
call
flds
lock
inc
push
in
jno
movsb
cmp
lods
pop
loope
adcb
cmp
scas
jo
push
out
lods
in
loopne
insl
add
cmp
mov
and
mov
fdivrs
aad
sub
push
ljmp
mov
sub
daa
mov
stc
cmp
cs
testl
jo
mov
mov
imul
cmpsb
xorl
sub
sahf
mov
sub
mov
stc
nop
es
sbb
sub
and
mov
jg
xchg
scas
mul
jl
jb
jp
cli
sub
mov
cmc
rcrl
das
test
repz
repz
and
repnz
and
mov
arpl
sub
or
es
stos
test
jno
int3
mov
jge
dec
mov
pop
lock
jge
pushf
in
je
xchg
cmpsb
mov
insb
add
popa
clc
popf
in
testb
stc
dec
in
imul
sub
sbb
das
movsb
hlt
js
sub
cmp
call
sub
sti
clc
inc
xchg
incb
mov
shrb
mov
xchg
cld
loopne
xor
cli
xchg
push
addr16
xchg
add
nop
xor
xchg
sub
jecxz
outsb
adc
mov
add
stos
inc
cmpsl
loop
mov
mov
jne
and
adcb
cmp
test
sbbl
cmp
jl
insb
movsl
cmp
rcll
add
mov
inc
lret
rcrl
insb
add
into
in
cld
jno
lcall
inc
fdivr
bound
cmc
inc
mov
sbbl
mov
xchg
sub
cmp
aam
mov
mov
push
cmp
addl
std
xchg
rcll
xor
icebp
mov
inc
xchg
sub
cmp
in
inc
mov
je
jno
sbb
xlat
outsb
insb
out
movsl
cmp
mov
xor
in
outsb
adc
adc
push
mov
sarl
sub
pop
hlt
adc
repz
stos
inc
pop
cmc
mov
fcoml
stos
or
dec
in
sarb
rolb
test
nop
mov
pop
lock
fcomp
je
jg
pusha
lods
das
pop
lock
into
jg
cld
jge
lcall
aad
add
lea
cmpb
xlat
les
mov
pop
scas
dec
xor
jbe
xchg
mov
sub
mov
leave
stos
inc
jp
add
push
pusha
div
jge
lds
shl
imull
or
mov
mov
repz
iret
aas
shlb
sbbl
xor
insb
fsubrs
divb
mov
push
outsb
test
mov
fdivp
notb
out
loop
xchg
jp
inc
scas
les
outsl
push
jmp
negb
xor
jmp
push
movsl
jbe
out
xor
add
sub
push
movsl
js
out
cmp
jb
in
lods
ret
sbb
ds
jb
add
in
xchg
ljmp
call
adc
loop
lods
ret
insb
add
pop
cmp
mov
push
out
shrd
fisubl
pop
push
repnz
sub
mov
inc
insl
add
je
fwait
outsl
push
shll
or
sub
xor
stos
inc
mov
or
pushf
out
lret
dec
dec
jmp
pushf
sbb
push
popf
or
dec
loope
sbb
cmp
sbb
pop
out
fdivrs
or
ss
xchg
mov
neg
sub
sub
xor
push
dec
lds
pop
vcvtss2si
or
add
repz
and
sahf
repz
or
int
ja
repz
or
mov
jmp
imulb
push
sar
call
cmp
add
dec
jecxz
cltd
or
push
inc
push
push
pop
imul
inc
stc
and
pop
xchg
dec
push
and
insb
lcall
outsl
mov
ret
flds
testb
adc
clts
sahf
test
loope
sarl
repz
les
icebp
mov
scas
xchg
mov
push
test
xchg
xor
test
xor
pop
cmpsb
add
push
adc
push
daa
ds
and
lods
mov
dec
push
es
jno
daa
in
in
lods
pop
mov
mov
mov
mov
xor
jo
lret
jnp
subb
xlat
jl
push
ljmp
ret
cmp
pop
inc
add
and
popa
jl
xchg
mov
fldenv
fwait
mov
adc
leave
bound
jmp
jmp
jbe
jns
popf
xchg
mov
adc
fwait
xchg
lea
icebp
fidivs
mov
xchg
dec
mov
cmpb
addl
test
mov
fdivl
xor
cs
cmp
jl
mov
fcom
cmp
int3
cs
loopne
aam
out
adc
in
add
mov
rcll
inc
mov
fnstenv
or
filds
jbe
push
and
sbb
or
insl
lahf
sahf
inc
out
xor
fs
popf
pop
filds
sbb
and
shr
loop
mov
or
add
adc
mov
sbb
mov
mov
scas
xchg
sarl
in
test
mov
faddl
xlat
int3
xor
outsl
movsl
xlat
outsb
xlat
lea
repz
shlb
xor
fwait
or
mov
dec
mov
inc
int
pop
repz
out
cmp
push
inc
lret
leave
std
push
loop
xor
cld
add
inc
pushf
scas
and
push
out
stos
jo
mov
call
int3
les
mov
std
sbb
add
rcll
xor
add
enter
test
dec
call
mov
dec
in
nop
xchg
les
insl
mov
fisttpll
dec
ret
sub
mov
sub
mov
push
mov
xchg
scas
arpl
cwtl
cmpsl
dec
mov
sti
ja
aad
int3
pop
cli
loopne
sub
dec
add
push
outsb
or
stos
ds
sti
fnstenv
into
sahf
xchg
mov
or
xchg
pop
add
imul
ret
mov
push
cs
sbb
pop
cmpsb
sbb
sbb
push
pop
xchg
jmp
outsl
jle
and
cmp
shrl
int3
push
in
mov
test
mov
rclb
xchg
rclb
push
xchg
xor
adc
adc
xlat
cmp
or
int3
inc
jecxz
jl
pusha
enter
es
clc
mov
rcll
loopne
mov
das
clc
scas
inc
sub
dec
mov
shrb
lret
stos
out
ret
inc
out
out
mov
sbb
push
cld
sbb
shld
mov
das
loope
popf
mov
pop
shlb
add
lahf
jnp
iret
shlb
or
shr
idiv
js
test
lret
mov
repz
sub
jl
es
orl
aas
mov
stc
daa
cmp
fsubl
xor
mov
jo
test
gs
sub
mov
scas
push
int3
aaa
leave
xchg
test
ljmp
or
cltd
xor
sub
sbb
sbb
mov
dec
lret
mov
jmp
mov
arpl
sub
jmp
xchg
lods
jmp
sub
jns
dec
pop
mov
roll
cs
dec
je
or
pop
xchg
scas
popa
sbb
enter
xor
roll
or
rclb
push
cli
mov
add
or
int
lret
daa
rcl
test
jmp
int
jecxz
xchg
jne
cmpsl
test
cli
mov
pop
les
cmp
movsb
jbe
rclb
call
push
and
adc
sub
pop
push
stc
jo
xor
lahf
xchg
or
cs
and
ret
dec
cmp
sbb
dec
cltd
cld
imul
call
movsl
cmp
sbb
clc
sbb
xchg
and
daa
rcl
inc
enter
cltd
jmp
jle
mov
out
or
leave
lds
fldenv
shrl
adc
mov
and
rcrb
cltd
push
lock
movsb
sub
cld
es
cltd
je
xor
scas
jno
cmp
clc
inc
dec
aam
sbb
cmp
push
es
xchg
and
test
push
mov
cmpsb
push
mov
repz
inc
rcrb
roll
aad
repnz
sahf
mov
push
loop
in
mov
adc
cmpl
icebp
cltd
xchg
iret
icebp
enter
dec
in
lock
ss
sub
adc
out
lret
xor
into
scas
pop
in
data16
cwtl
mov
mov
jle
mov
jg
push
fcoml
pop
pop
aad
and
pop
sarl
and
loope
imul
pop
test
xchg
dec
test
cmp
pop
mov
and
dec
cmp
xor
pop
adc
daa
dec
call
dec
xor
add
mov
aas
pop
aad
push
sahf
mov
cmp
adc
cmp
cmpsl
cmp
or
add
mov
scas
js
add
xor
push
int3
push
pushf
sbb
stos
inc
inc
or
leave
push
cmp
jge
xor
xchg
sahf
dec
mov
xchg
popf
pop
int3
sub
bound
loope
in
es
ss
mov
and
lock
adc
lcall
adc
mov
ja
mov
inc
stc
pop
ret
mov
leave
arpl
adc
pop
add
fildl
push
into
incb
mov
adc
test
nop
mov
add
jl
lret
aad
xchg
sub
out
and
jl
fiaddl
fcoms
adc
jo
lahf
jne
and
jl
jno
movsl
push
pop
cwtl
mov
jp
outsl
pop
jo
stos
nop
push
inc
mov
jecxz,pt
loop
pop
mov
fidivl
mov
or
dec
mov
jle
push
push
outsb
xchg
sub
fimull
imul
cmp
gs
pop
cmpsl
and
adc
xchg
adc
sub
orb
xchg
inc
rclb
ljmp
mov
add
into
mov
xor
out
mov
dec
imulb
rclb
cli
inc
repnz
mov
outsl
mov
cmp
pusha
pushf
les
add
mov
ret
push
sub
and
mov
lret
in
jae
std
sub
inc
repz
imul
in
scas
xor
sbb
mov
cmp
xor
dec
cmp
pop
sub
outsb
fcomp
jne
cmp
pushf
xor
add
add
addl
dec
movsb
xchg
into
and
in
add
cmpsb
mov
das
loope
or
xchg
loope
or
fcomi
sub
mov
hlt
and
pop
adc
mov
push
dec
in
and
cwtl
nop
orb
push
or
movsb
jne
xchg
mov
push
jmp
adc
cmp
mov
or
int3
jle
and
adc
leave
dec
fmull
stos
in
xor
jne
xlat
dec
das
cwtl
mov
push
push
mov
cmp
mov
or
or
xchg
adc
xchg
xchg
aad
cltd
mov
cmc
push
in
or
mov
add
sti
int
jp
fbstp
fmul
enter
fidivrl
hlt
mov
out
push
mov
fdivl
lods
adc
push
rorl
add
sbb
pop
insl
push
lcall
dec
jbe
mov
cmp
dec
mov
inc
insl
pop
enter
fildl
sbb
fisubrl
into
popa
mov
sarb
dec
daa
mov
ret
and
enter
scas
aad
ja
add
lds
mov
jne
aas
or
xor
mov
add
cmpsb
mov
sbb
xor
xchg
andb
sbb
std
xchg
adc
xchg
cwtl
and
imul
adc
imul
xor
ds
popa
lea
popf
mov
or
sub
xor
dec
pop
ret
out
jb
cmp
sub
in
cmp
push
imul
pop
push
sub
sub
jno
stc
inc
in
in
mov
sti
add
sbb
push
mov
pop
cmp
cltd
imul
push
ss
addb
imul
xor
clc
inc
mov
rcrl
lret
xchg
mov
xor
lcallw
stos
ret
ror
add
iret
pop
shr
mov
cmp
in
lret
mov
adc
sub
add
int3
cmp
add
pop
mov
or
and
outsl
jecxz
dec
mov
in
test
nop
rol
cmpsb
mov
enter
movsb
insl
mov
sub
pop
lods
mov
es
ret
cli
test
in
cmp
add
daa
in
lahf
mov
or
fwait
add
or
pop
cltd
out
sbb
aas
into
push
jle
aas
out
and
pop
xchg
sub
xor
pop
scas
push
fwait
xchg
xchg
js
sub
jle
mov
loope
jbe
sbb
sbb
or
add
jb
stc
xchg
push
xchg
jg
and
data16
outsl
cmpsl
push
pop
pop
dec
push
aaa
xchg
xor
and
push
inc
ss
push
cmp
ljmp
ds
jl
les
loope
cmc
mov
fnstcw
aaa
rorl
test
test
mov
pop
sbb
mov
xchg
lds
loop
mov
fcomip
ljmp
mov
pop
lock
add
les
sbb
aam
mov
pop
cli
imul
add
mov
push
or
push
inc
fwait
mov
inc
mov
ljmp
lea
xor
pushf
inc
mov
add
inc
jne
jne
std
sub
xor
cmp
sbb
imul
push
aam
jmp
popf
mov
dec
shll
push
adc
popf
sbb
add
in
inc
rol
pop
fcom
mov
mov
push
cmp
test
cmp
jae
into
mov
inc
adc
movl
shll
nop
popa
and
imul
daa
xchg
cs
push
sub
inc
push
pop
ds
and
sub
js
cwtl
mov
rcll
in
sbb
inc
and
sbb
dec
aas
call
adc
sarl
xchg
pop
shl
inc
int3
cmp
sub
fdivs
ret
sub
mov
icebp
sbb
ret
mov
aam
pop
mov
mov
dec
shlb
std
inc
jne
stos
mov
ljmp
fildl
fistl
clc
insl
shr
jg
mov
dec
mov
loop
xchg
ret
nop
into
xor
addr16
xchg
xor
cmp
jnp
mov
cs
jl
mov
fcomps
xchg
jnp
pop
and
cmp
jbe
jge
adc
repz
jge
iret
into
pop
mov
or
jle
fimuls
bound
jp
gs
xchg
xor
aad
sbb
adc
iret
add
sub
jmp
fisttpll
add
ss
imulb
dec
pop
pop
das
add
adc
and
ret
shlb
in
aam
push
fdivs
mov
xor
ljmp
clc
int3
dec
lret
popf
fbstp
in
mov
mov
ret
inc
push
idivl
inc
push
les
imul
mov
cmp
aaa
adc
cmp
mov
jmp
adc
out
inc
rolb
pop
roll
mov
push
fidivrs
mov
mov
sbb
and
adc
test
gs
xlat
cltd
xlat
sbb
xchg
stos
movsl
xchg
jge
cli
imul
ret
push
fwait
loop
insl
add
add
pop
test
in
jmp
dec
sub
test
aam
cmpsl
pop
dec
test
dec
subl
push
pop
testl
mov
pop
xor
jmp
mov
enter
adc
sub
loope
adc
sbb
or
and
mov
fldcw
shll
mov
mov
gs
pop
test
movsb
sbb
ret
lea
imul
push
je
loop
je
xor
push
inc
dec
pusha
cwtl
cmp
inc
mov
or
jno
lea
jp
subb
stos
dec
sbb
pop
out
xchg
sbb
lcall
sub
repnz
dec
mov
cmp
insb
push
dec
jns
xor
dec
out
push
std
das
aaa
les
fsts
and
jge
insb
mov
sahf
mov
testl
in
sahf
pop
mov
push
montmul
cmpsb
xchg
je
xchg
aas
mov
xor
into
das
mov
or
ljmp
inc
les
adc
cmp
jne
jge
push
jl
pushf
dec
mov
popf
sti
lea
mov
xchg
std
repz
fcom
mov
orl
lods
dec
shrl
out
and
hlt
rorl
fs
loop,pt
inc
adc
or
or
xchg
xor
cli
mov
jno
mov
pop
adc
pop
leave
ret
pushf
mov
and
xchg
shrb
ficomps
lea
lds
addr16
xchg
mov
or
aad
inc
cmc
xor
int
mov
mov
push
enter
loope
bound
xor
xor
mov
pop
adc
mov
sbb
movsb
out
sbb
cmc
push
push
mov
rorb
and
je
add
xchg
adc
sbb
xlat
xchg
rorl
cmpsb
jmp
inc
out
fdivl
mov
jp
dec
ljmp
cmp
outsb
imul
cmp
mov
sbb
rcl
dec
in
pushl
adc
dec
shrl
cmp
mov
fmull
aas
js
movsb
jl
sub
jnp
and
adcl
dec
adc
rorl
and
hlt
lcall
lahf
push
inc
mov
xchg
jbe
hlt
pop
xchg
jns
push
std
es
dec
sahf
insl
pop
xlat
insl
pop
mov
sub
data16
jne
mov
clc
pushf
push
xor
mov
out
test
xchg
inc
int
cld
xor
ret
fdivrp
jecxz
fcmovnb
test
cmp
mov
mov
stc
fisttps
and
out
imul
sub
das
sar
out
mov
dec
pushl
mov
fs
stos
pop
mov
repz
pusha
inc
mov
cltd
das
mov
in
add
lds
sbb
and
jl
sbb
cmp
insl
aad
mov
call
icebp
dec
jecxz
jns
hlt
aad
jbe
adc
mov
mov
rcrb
lcall
xor
imul
scas
arpl
out
out
mov
daa
jmp
cmp
xlat
imull
rcrl
sub
sahf
pop
or
push
adc
sbb
inc
loope
dec
aam
testb
mov
imul
xchg
xchg
sub
sarl
cmp
jno
jae
cmp
scas
adc
fwait
xchg
rorb
jnp
jecxz
push
out
mov
es
xchg
or
sub
imul
fwait
call
scas
jbe
add
imul
mov
insb
mov
push
std
daa
loopne
adcb
mov
or
xchg
cs
out
pop
sahf
jo
mov
pushf
pop
adc
ja
xchg
push
cld
rorb
jmp
in
pusha
ret
fnstenv
xor
sub
repnz
iret
lods
leave
cmp
enter
pushf
loope
adc
adc
mov
lock
jnp
aaa
jno
mov
cmp
fwait
nop
bound
cmpl
adcl
addr16
fimull
and
and
inc
lods
inc
test
std
xchg
outsb
pushf
xor
or
stos
repz
xor
std
mov
in
push
mov
mov
sbb
pop
lock
adc
jg
cmp
lret
mov
std
fsts
test
push
in
pop
lods
xor
test
add
test
mov
out
fisubrl
out
in
push
das
or
sub
jecxz
cmp
dec
pushw
push
mov
inc
outsb
mov
xchg
inc
pop
mov
push
dec
loop
pop
xchg
pop
aas
bound
inc
popf
mov
test
jo
sub
in
push
mov
sti
in
sub
dec
xlat
cmp
ljmp
movsb
leave
repz
sbb
insb
mov
inc
sub
sahf
nop
cmp
dec
sahf
dec
fimuls
dec
js
mov
shrb
out
fists
stos
int
add
fwait
xor
and
sub
aam
lahf
dec
fistl
adc
dec
xchg
mov
pop
add
dec
push
fwait
xchg
imul
dec
pop
pop
subb
lea
nop
mov
or
mov
cs
lahf
pop
mov
push
sbb
addl
inc
or
push
stc
dec
arpl
mov
inc
sbb
aaa
mov
adc
gs
and
out
pusha
inc
shrb
pop
xor
loopne
push
pop
and
outsb
cmp
xchg
push
add
sbbl
enter
xor
je
clc
dec
arpl
das
dec
inc
and
jno
in
inc
xchg
push
pop
or
sub
stc
ss
push
loopne
data16
out
or
aad
mov
loop
or
lock
nop
mov
add
outsl
movsl
push
dec
test
sub
inc
fwait
xor
daa
and
push
fsubrl
addb
jae
sub
push
cwtl
jecxz
ja
xorl
add
les
add
mov
hlt
sbb
inc
add
lahf
dec
xchg
out
mov
and
inc
mov
inc
xchg
push
pop
inc
mov
sbb
ds
push
jl
sarb
movsl
sub
pop
jbe
enter
ljmp
inc
pusha
push
inc
inc
jecxz
ss
cmp
outsb
jns
imul
addl
push
xchg
cmp
dec
pop
insb
xor
jbe
sub
movsb
pop
jg
pushw
sub
cs
xchg
scas
imul
dec
add
mov
rorl
scas
jno
test
lods
pop
adc
or
ja
pop
mov
ficomps
js
test
jnp
mov
rep
mov
int3
in
ret
fucomp
movsl
pop
fmulp
ds
lods
ret
dec
adc
sbb
pop
shl
scas
cmp
es
dec
sarl
jmp
xchg
mov
mov
fwait
mov
jae
dec
cli
xchg
outsb
push
aad
mov
aaa
andps
fs
inc
push
popf
jb
xchg
outsl
xchg
pop
push
push
cmp
test
shlb
dec
fs
mov
nop
bound
gs
bndldx
add
xlat
dec
popa
rorb
pop
sbb
dec
insb
scas
inc
sahf
dec
out
ss
hlt
sbb
or
lds
ds
mov
icebp
and
out
das
in
xor
shll
sbb
js
xor
icebp
ds
outsl
mov
pop
cmpsl
bound
mov
inc
adc
and
push
add
cmp
jl
cmc
mov
adc
xchg
imul
stc
loope
ss
popa
mov
mov
cmpb
test
insb
inc
rclb
fstl
fwait
inc
fscale
and
xlat
mov
mov
lret
mov
mov
mov
js
pop
icebp
pop
and
fiaddl
adc
shrb
outsl
lock
inc
fstpl
mov
mov
mov
ljmp
and
imul
notb
jbe
mov
out
test
add
call
dec
icebp
or
fisttps
call
aad
das
lods
outsl
jne
adc
sub
push
mov
orb
lock
out
or
mov
or
lcall
cmp
enter
stc
push
shlb
inc
adc
push
aam
lcall
jp
rcll
push
fstps
mov
or
sub
pop
jne
in
push
xor
xor
sub
dec
popf
cmp
push
nop
or
and
or
dec
xlat
adc
mov
mull
iret
into
sbbl
lret
push
leave
lds
lret
cmp
loopne
lods
pop
cmpsl
movsl
and
dec
out
inc
fisubrl
or
push
dec
popa
clc
jp
icebp
mov
scas
loopne
popf
xor
add
lds
inc
mov
jecxz
xchg
fnstenv
cmpsb
push
fsub
testl
insb
dec
cmpsb
cmp
mov
fists
adc
loop
xor
fs
add
mov
push
mov
fsubrs
rcrl
ds
icebp
outsl
jg
jle
nop
js
ret
pushf
add
xchg
sub
push
aaa
mov
imul
imul
jle
dec
xor
movsl
popa
outsl
pushf
xor
ret
hlt
aam
loope
push
fnstenv
es
mov
mov
movsb
cmp
push
xor
aas
push
ret
pop
push
pusha
push
jmp
mov
call
aaa
pop
push
mov
pop
lods
inc
mov
rcrl
mov
jmp
adc
pop
sahf
andb
xchg
mov
mov
out
inc
fisubl
or
imul
clc
xchg
jl
stc
lods
mov
pop
jmp
or
mov
mov
sub
cmp
mov
jmp
and
loop
add
icebp
mov
adc
movsl
pop
das
sub
outsl
ret
and
out
mov
outsl
push
inc
or
aad
arpl
cmp
mov
sub
iret
data16
jle
and
xchg
mov
mov
jnp
push
mov
and
mov
sub
fidivs
or
lahf
cmp
daa
mov
pop
inc
pushf
lahf
push
stc
nop
cmp
and
xchg
jne
fabs
lahf
jbe
cmp
jp
inc
std
xchg
jae
add
into
test
into
pop
jbe
sti
push
lods
push
or
xor
lock
xor
mov
shrl
xchg
movsl
pop
bound
sbb
mov
jecxz
fwait
mov
cld
cwtl
sbb
sbb
mov
fwait
and
loope
xchg
adc
js
pop
xor
lahf
jb
cmpsb
push
jo
enter
test
cmpb
cwtl
jge
popf
test
fnstsw
inc
mov
icebp
cmp
jecxz
imul
mov
cmp
fnsave
mov
jge
push
xchg
cli
push
add
ss
pop
incl
fnstenv
mov
mov
lcall
xchg
ds
sub
sub
push
mov
push
fsts
hlt
dec
or
inc
mov
aas
fwait
cli
xchg
push
repz
xchg
pop
jg
out
aam
xorl
push
mov
and
fdivs
xchg
fwait
clc
push
xor
mov
outsl
cs
cld
dec
not
mov
ja
iret
mov
and
push
push
xor
outsl
pop
mov
cmpsl
das
cmp
test
jne
sti
pop
add
popf
and
shr
ret
dec
aam
cmp
mov
outsb
push
mov
lods
mov
in
cltd
fsubs
dec
aas
popf
into
mov
sarl
pop
pusha
js
insl
xor
shlb
lods
cs
adc
jae
and
je
mov
push
inc
sti
xor
xchg
mov
loope
xchg
or
xchg
inc
cmp
test
push
mov
and
sub
test
jp
cmp
lret
add
js
imul
mov
add
loope
les
frstor
ja
sub
shll
or
fdivrs
in
popf
cmp
outsb
loope
sub
adc
shrb
dec
mov
xchg
inc
mov
pop
pop
or
cmp
mov
nop
push
pop
nop
xchg
insb
adc
sub
enter
aad
out
mov
icebp
adc
xor
cmp
or
sahf
xchg
cmpsl
js
aad
cwtl
jl
sub
mov
nop
sbb
inc
repnz
cmpb
inc
addl
mov
repz
pop
mov
outsl
jne
imul
hlt
cmp
and
inc
push
subb
loop
add
pop
repz
mov
mov
mov
enter
vmovmskps
shll
scas
bound
push
sbb
mov
aad
test
inc
fsts
shrl
call
xchg
sub
jp
pop
add
jo
in
sbb
js
pop
popa
or
stos
jp
jge
test
mov
cmpsb
push
test
push
popf
xor
xor
mov
add
jb
pop
hlt
sub
mov
shlb
sahf
xor
lods
lods
add
in
dec
loope
mov
inc
fistpl
js
cmp
lret
rcrl
adcb
push
int3
mov
stos
sub
int3
js
popa
sahf
cmp
iret
inc
pop
cmc
jae
adc
in
pop
ret
xor
add
aas
jmp
mov
and
pop
pop
inc
cmp
mov
mov
lret
les
push
sti
repnz
rolb
xchg
leave
add
dec
inc
adc
loop
cmc
mul
mov
jmp
add
or
call
stos
test
lret
lds
insl
adc
movsl
stos
inc
call
or
jecxz
mov
mov
xor
jmp
jecxz
test
leave
nop
cmp
iret
sbb
cmp
movsl
sub
das
xchg
cmp
push
jle
xlat
in
push
cld
sbb
mov
fcompl
int
fdivrl
test
fildl
lcall
pop
lahf
leave
pop
add
mov
xchg
cmp
rcrb
push
push
push
sti
mov
jle
sub
jecxz
pop
cmp
mov
loop
or
pop
pusha
loop
dec
cwtl
je
jo
int
adc
inc
jae
daa
lret
aas
xor
negb
or
out
aaa
lcall
sbb
mov
mov
sbb
xor
and
mov
add
dec
add
mov
sahf
cwtl
inc
pop
pop
lods
xor
mov
dec
cmp
sbb
pop
sub
lret
nop
inc
or
sbb
mov
loop
or
adc
ljmp
sbb
unpckhps
sub
or
lret
adc
imul
jecxz
cmpsb
daa
testw
mov
mov
mov
mov
lret
fildl
mov
inc
or
jg
int3
or
sbb
push
sbb
sub
sub
inc
ds
insb
add
inc
jl
jno
xchg
fwait
inc
xlat
fsubp
push
add
movl
mov
pop
push
jl
lock
and
add
scas
sub
lods
xlat
aas
lret
add
js
jbe
lret
andl
in
leave
pop
fidivrs
adc
test
data16
inc
rorb
popf
loop
cmp
int3
cld
and
jecxz
in
jbe
sbb
jne
mov
cmpsl
cwtl
loop
mov
add
ljmp
mov
ja
push
in
je
stos
daa
outsl
cwtl
cmp
fidivl
mov
push
lods
jne
cltd
cli
mov
ja
loope
jne
mov
sbb
push
mov
repz
pushf
in
mov
pusha
mov
in
cmp
cltd
cmp
rolb
int
dec
xchg
fdivrl
cltd
xchg
leave
adcb
in
dec
sub
sbb
sbb
nop
inc
fwait
or
pop
mov
jmp
aas
stc
rolb
fadd
cwtl
cmp
mov
ljmp
adcb
scas
fimull
or
xor
mov
jge
addr16
movsl
das
je
mov
imul
sbb
push
add
inc
imul
in
dec
out
mov
hlt
pusha
pusha
lods
sub
int
insl
fidivrl
scas
push
add
adc
test
repnz
repnz
in
lock
mov
dec
mov
ljmp
dec
xchg
jle
lods
repz
adcb
lock
push
jns
or
mov
test
push
out
popl
sti
test
pop
ss
in
sub
dec
shrl
push
and
out
dec
pop
repz
mov
icebp
outsb
test
or
mov
add
xor
jo
outsl
notb
loope
pop
xchg
cmp
sub
aam
negb
push
pop
push
lods
cmp
rclb
or
xchg
in
jae
bound
mov
add
jg
mov
add
testb
or
jne
adc
inc
inc
es
push
xchg
daa
lods
adcl
inc
pusha
call
lock
loop
adc
ret
inc
xchg
push
jg
pop
add
movsb
jle
fsts
and
pop
cs
add
jmp
fadds
ret
adc
in
adc
test
jmp
sti
pop
add
jbe
pop
add
data16
lret
sbb
dec
and
lods
insl
popf
jl
loop
adc
in
xchg
stc
adc
xor
and
negb
cld
call
fmuls
pop
xchg
ds
std
push
sti
and
jbe
inc
stos
and
push
adc
fnstcw
or
popa
insl
inc
or
sub
xor
and
iret
mov
jo
or
mov
out
xchg
add
xor
orl
aaa
add
lods
add
scas
or
mov
out
popa
out
add
cmpsl
mov
mov
add
sbb
push
mov
sarb
loop
clc
add
negb
das
jg
xor
add
cmpsl
and
fcompl
rorb
iret
in
dec
arpl
addr16
inc
or
jno
pop
pop
rcrb
popf
dec
orl
xchg
cmp
xor
mov
cld
dec
jecxz
call
repnz
dec
lods
sub
lret
cmpsb
xor
sahf
mov
hlt
arpl
pop
lcall
pusha
xor
std
push
rolb
pop
add
jo
fwait
push
out
outsb
fcmovb
mov
cli
add
bound
mov
mov
in
fiaddl
add
lcall
or
mov
cmp
jp
int
jno
insl
call
mov
imul
scas
into
mov
inc
dec
or
adc
xchg
jg
dec
push
dec
test
pop
xchg
sub
mov
jmp
out
js
repnz
sub
fildl
add
xchg
cmp
stos
and
xor
pushf
les
in
insb
dec
into
out
outsb
jo
jmp
shrl
mov
or
rorb
fmuls
inc
pop
repz
das
mov
std
bound
add
sbb
test
inc
int
js
into
aad
fnstsw
adc
mov
xor
push
lahf
push
mov
pop
and
and
adcb
aad
cmpsb
xor
inc
adc
jae
lret
add
xor
les
rcrw
es
adc
lret
loope
repnz
xchg
push
adc
and
cmp
add
sbb
aam
or
push
or
je
imul
test
pop
icebp
test
jnp
leave
pop
js
mov
jne
out
fsubl
push
sar
mov
add
mov
mov
push
dec
and
ja
mov
push
cld
fcompl
les
aas
call
lea
jne
mov
jbe
sub
mov
scas
scas
fcompl
ret
sbb
daa
and
aam
xor
pop
lret
add
imul
xor
mov
adc
ja
add
add
push
ds
sti
and
push
lock
fs
jno
inc
jle
in
or
fistpll
push
enter
ljmp
add
ljmp
xchg
push
mov
push
mov
cmpsl
or
pop
mov
in
push
jne
std
out
fdivrl
cmp
mov
dec
daa
aam
ret
xchg
mov
mov
ret
xchg
test
mov
nop
fidivrl
pushf
xor
jno
fisubs
mov
add
insb
fwait
inc
imul
fs
arpl
jne
popa
push
repz
inc
inc
stos
daa
scas
cmp
lea
in
lods
dec
faddl
iret
ss
test
mov
hlt
push
xor
dec
cmp
sub
inc
push
mov
mov
stc
pushf
ds
and
jno
xor
jo
jae
out
xor
ja
cs
push
fadd
nop
sub
xor
cld
fsubrl
sbbl
xchg
cmp
sbb
mov
dec
lods
ss
ret
xchg
cli
pusha
or
xchg
cmp
lret
jne
dec
adc
bound
lods
das
movsl
aam
outsl
cmp
mov
ja
inc
repnz
xor
inc
bound
jmp
hlt
rcll
and
fs
adcb
pop
incb
adc
fistpl
sbb
jb
pop
xchg
outsl
jbe
sbb
stos
sub
ljmp
lea
mov
inc
adc
jecxz
dec
into
dec
int3
arpl
ljmp
lds
lock
aam
xchg
cwtl
nop
mov
leave
test
shl
pushf
inc
je
int
inc
data16
mov
jns
test
mov
cltd
inc
outsl
pushf
lret
xchg
push
jl
push
roll
fs
or
insb
xlat
sub
sbb
sahf
cmp
lahf
jg
and
enter
daa
gs
pop
fidivrl
xchg
or
gs
dec
ljmp
js
test
jbe
gs
mov
test
adcb
cmpsb
das
cld
push
js
mul
jae
adc
ss
xchg
insb
push
testl
inc
or
lock
stc
lods
call
add
cltd
cmp
mov
push
mov
jns
jl
data16
cli
popa
push
mov
mov
leave
mov
mov
in
scas
inc
mov
fdivl
icebp
mov
xchg
in
sbb
xchg
cmc
outsb
hlt
and
aaa
sub
mov
mov
je
nop
pop
jmp
insb
push
leave
test
push
jmp
jle
in
add
movsl
mov
stos
aad
mov
out
dec
mov
jmp
into
or
add
popa
add
dec
out
push
or
stc
inc
or
push
mov
or
jae
jnp
ret
in
or
jle
dec
pop
imull
add
imul
dec
or
add
sbb
mov
dec
shll
sahf
aaa
inc
push
fidivs
sahf
mov
ja
mov
jnp
stos
lods
inc
nop
cmp
sarb
inc
add
lea
jo
addr16
icebp
popa
sbb
fdivl
dec
add
push
mov
ficomps
rcrb
or
pop
int
mov
xor
and
xchg
jmp
mov
xchg
mov
fstps
push
ret
test
mov
push
enter
cwtl
cmpsb
aaa
dec
out
imul
jp
mov
loop
mov
xor
fadds
pop
mov
mov
sub
pushf
adc
xor
xor
push
pop
sub
repz
repnz
daa
add
pusha
lahf
cmp
stos
inc
adc
leave
mov
xchg
mov
mov
jo
adc
int
xchg
push
int
jns
std
pop
daa
data16
mov
inc
insl
lods
inc
lahf
popa
push
int
rcrb
mov
aas
popf
inc
mov
scas
xor
sub
leave
jl
dec
cwtl
adc
or
ds
test
xchg
inc
and
cmp
filds
fsubs
or
sbb
pop
push
cli
lods
xor
ja
mov
mov
iret
daa
lods
jo
cmp
std
fs
in
call
cmp
sub
stos
mov
in
jl
lods
das
sub
jne
inc
in
or
jg
test
pop
cs
test
mov
jl
pop
test
sub
out
lea
std
in
push
fs
pusha
cmp
push
mov
cmpsl
xor
stos
push
cmp
or
push
aas
pop
mulb
and
ror
dec
push
mov
cmpsb
pop
sti
xorb
shrb
lea
dec
push
out
jnp
orl
jno
pusha
mov
sbb
xor
nop
aaa
out
and
outsb
ljmp
mov
xorl
jae
push
ret
xchg
sbb
popa
loop
fdivrs
xor
pop
jbe
aas
mov
lods
pushf
aas
push
push
add
xchg
test
loopne
cli
out
jb
add
mov
mov
int
add
lret
xchg
inc
cmc
leave
xchg
mov
lods
test
mov
mov
shll
aaa
xor
mov
xor
or
mov
mov
push
add
mov
jp
xor
inc
cli
call
movsl
push
cld
jns
clc
mov
movsb
pop
out
mov
test
movsb
pminsw
pop
push
push
add
mov
xor
pop
fsubrs
rorb
dec
in
sub
ja
adc
je
int3
xchg
jne
leave
xchg
outsb
addr16
pop
jl
jno
inc
pop
add
mov
push
push
fldcw
pushf
cmp
outsb
in
stc
jns
inc
loopw
test
adc
sar
sahf
pop
aad
in
sub
mov
adcl
mov
dec
adc
filds
and
mov
and
call
fildl
aam
or
lods
fidivrs
add
add
sbb
xor
mov
in
push
rolb
fidivrl
mov
mov
jns
dec
adc
ss
std
outsl
adc
jns
adcl
gs
pushl
xchg
cmp
inc
pop
movsl
sub
movsl
mov
ds
mov
push
xlat
pop
mov
aaa
sub
mov
mov
inc
adc
mov
loope
add
add
jno
cmp
xor
movsb
xor
adc
arpl
push
push
lods
adcl
xor
push
arpl
outsb
test
insl
mov
lods
in
je
adc
or
mov
into
push
pop
flds
orl
jb
jle
mov
insb
lods
xor
sarl
sbb
out
inc
cmpsl
cmp
fsubs
push
out
lret
add
add
pop
mov
rcrl
mov
subb
sti
movsl
mov
fsubr
mov
push
arpl
nop
add
adc
add
aaa
out
cld
pop
mov
stos
rorb
pusha
test
lahf
jmp
inc
dec
adc
push
or
and
lock
mov
stos
repz
psrld
cwtl
inc
inc
mov
mov
insb
mov
imul
es
and
mov
mov
xchg
aad
xchg
cmp
or
push
sub
loopne
sub
call
incl
fbld
push
insb
or
outsb
fwait
jp
cmp
push
out
cwtl
fildl
mov
orb
cmp
or
fwait
inc
shl
adc
or
ljmp
inc
stc
mov
andl
add
in
xor
sti
or
rol
into
fadds
jno
scas
mov
add
mov
add
xchg
jnp
and
leave
mov
aad
inc
mov
mov
test
addr16
xchg
jmp
bswap
rcl
repnz
sub
pop
jno
xor
mov
inc
ror
sti
popa
rolb
cmp
mov
scas
push
cli
jb
dec
adc
jg
pop
daa
test
lahf
inc
ret
cmp
lahf
int3
mov
lods
in
cli
pusha
cmp
mov
mov
inc
mov
or
pop
add
fildll
mov
sbb
int
xchg
out
jno
push
cwtl
inc
test
adc
adc
flds
push
adc
cltd
in
in
fistpl
jmp
add
dec
push
mov
add
aas
test
orl
stos
imul
test
inc
ret
xchg
add
xchg
inc
es
mov
call
icebp
imul
js
adc
data16
add
jnp
add
cmp
lret
jnp
add
cmp
dec
xchg
and
sbb
dec
sbb
pop
mov
jnp
pop
clc
and
repz
fidivrs
dec
xor
imul
repnz
das
mov
xchg
cltd
pop
pop
sti
jb
or
jecxz
aas
cwtl
adc
iret
mov
fnstcw
mov
fwait
movsl
fiaddl
adc
lret
fmull
ret
daa
adc
mov
pop
add
xchg
mov
mov
loop
sub
mov
dec
xchg
aaa
mov
push
repnz
xchg
lods
stos
sub
into
dec
or
mov
ljmp
mov
mov
shlb
js
pop
stos
aam
and
mov
sarb
sub
movaps
lods
loope
cmc
ljmp
loope
pusha
sarl
or
insl
inc
sub
sub
mov
push
jns
mov
dec
jbe
nop
test
sbbb
xchg
pop
rorb
mov
or
sbb
dec
or
inc
pop
adc
enter
push
es
push
add
and
dec
mov
out
ds
leave
mov
fdivrp
push
clc
mov
nop
mul
cmc
pop
shr
or
mov
lcall
or
icebp
xchg
inc
or
out
push
push
cld
pop
inc
nop
sub
shll
push
and
jno
imul
in
repnz
jns
in
lcall
sub
das
loop
mov
nop
hlt
je
inc
xchg
loope
cmpsb
or
clc
arpl
cmpsl
mov
int3
xchg
shlb
push
sbb
xor
cmpsl
je
dec
cmp
mov
aad
sarl
add
imul
mov
and
jmp
dec
or
push
xchg
daa
mov
dec
sub
das
xor
clc
movsl
xor
jl
mov
add
nop
pop
jne
jecxz
out
dec
icebp
in
jo
mov
cmc
pop
stos
adc
jnp
xchg
cmp
jno
or
push
aam
divl
or
int3
in
xlat
mov
call
sub
es
das
cmp
fdivrs
fildl
jl
movsl
daa
inc
push
cli
ficoml
mov
jge
cmp
sbb
int
je
xor
pop
add
xchg
cmp
add
int
sub
xor
xor
cltd
jae
mov
pop
inc
xchg
inc
mov
cmpsb
sbb
sbb
and
add
test
push
jp
sub
pop
das
dec
adc
inc
pop
push
jle
sbb
pop
xor
in
push
movsl
sub
mov
jge
cmp
sbb
adc
fs
sbb
dec
negb
les
jno
cmp
arpl
stos
xor
sub
bound
ja
popf
push
add
inc
lret
outsl
out
iret
xchg
push
shlb
sbb
mov
lock
add
rol
test
mov
jp
call
ja
fimuls
mov
pop
fcmovnbe
xor
push
add
xchg
cmp
outsl
xchg
add
mov
mov
fdivr
jo
ja
jmp
adc
or
jo
addr16
out
xchg
jp
nop
popa
iret
cli
pop
jecxz
imul
popa
cmc
jbe
rolb
popf
dec
call
add
call
popa
and
push
decb
cmp
jne
pop
and
into
insl
add
mov
mov
jo
mov
sbb
inc
lret
mov
out
push
in
lahf
cmp
std
jecxz
aam
movsl
xor
or
ss
xor
pop
jb
push
movsb
inc
fiadds
xchg
bound
inc
xor
sub
test
add
push
push
and
lret
mov
lods
push
lret
mov
mov
stos
jne
lock
inc
or
insl
sub
pop
test
jae
bound
and
mov
push
repz
ret
push
ljmp
pop
xchg
sub
sub
cmp
nop
jbe
add
shrb
push
ljmp
mov
jnp
rorb
outsl
cmpsb
xor
movl
ret
add
push
dec
sqrtps
loope
aam
jmp
mov
jl
sub
inc
fs
pop
mov
dec
adc
cmp
mov
ret
jge
mov
scas
jle
add
aam
das
push
mov
test
push
cmp
fwait
inc
ja
int3
cmpsb
inc
and
sbb
adc
fimuls
push
mov
sub
cmp
xor
xchg
mov
adc
mov
aaa
ljmp
int3
inc
push
std
sbb
mov
gs
xor
and
in
loop
inc
cmp
dec
js
ss
jnp
push
and
cmp
mov
rcll
test
mov
les
dec
or
mov
outsb
adc
adc
in
jne
aaa
or
mov
xchg
ds
movsl
outsb
icebp
aam
orb
dec
push
push
jl
sarl
jmp
add
inc
push
mov
pop
js
push
lods
and
mov
mov
scas
mov
clc
sbb
jmp
imulb
enter
jl
into
gs
fs
cwtl
jmp
sub
into
insl
sbb
in
jle
into
mov
filds
lods
int
cmp
mov
ret
ljmp
imul
mov
cmpsl
sub
push
test
cmpsl
daa
cmp
daa
mov
and
scas
fs
out
mov
jecxz
mov
cmpsl
test
jae
dec
mov
movsl
jg
lret
sbb
inc
xor
sbb
mov
int3
cmp
jl
es
pop
div
ss
xor
cmp
insl
inc
dec
adc
lods
sahf
roll
add
pop
cmp
dec
pop
xchg
inc
and
cmc
popa
pop
cmp
fsubl
test
lods
mov
iret
pushw
loop
iret
adc
sarb
sti
or
sahf
js
push
add
push
addr16
fsubrl
jno
out
lahf
mov
add
pop
mov
lods
stc
popa
dec
push
push
leave
lods
fwait
xor
cltd
pop
ss
inc
sub
pop
rcrl
sarl
dec
adc
pop
movl
punpcklwd
push
sbb
and
or
enter
repnz
jg
jnp
cmp
cli
xchg
xor
mull
mov
mov
arpl
mov
ficoms
add
jecxz
pop
cmp
mov
add
cmp
mov
jno
js
stos
push
mov
adc
sub
xor
and
lahf
mov
mov
call
fbstp
mov
inc
push
ret
or
sbb
mov
int3
xchg
fcoml
xchg
mov
addr16
mov
mov
int
inc
push
outsl
push
test
cs
xchg
cmp
leave
nop
jg
jg
shll
xlat
add
or
inc
or
loop
imul
hlt
dec
adc
adc
test
sbb
cltd
ficoml
or
stc
pop
jmp
clc
jle
sub
xchg
sub
push
int3
negl
pop
js
enter
sub
aas
jmp
out
adc
out
jg
sahf
mulb
sub
ds
popa
in
lods
das
es
mov
mov
sub
aad
lahf
inc
cmp
mov
sub
cs
cli
gs
inc
mov
push
adc
daa
dec
mov
repz
dec
xlat
call
fs
mov
insl
push
add
xchg
in
inc
or
cmpsl
sub
mov
xlat
clc
repz
movl
mov
mov
mov
fwait
cmp
jg
out
or
lcall
push
sarb
or
pop
and
fildl
cwtl
mov
push
xchg
scas
push
cmp
cmp
xchg
adc
xchg
push
popf
pushf
mov
mov
cld
iret
sub
mov
push
aas
movsl
pushf
mov
pmullw
adc
cmpsb
xor
sarb
pop
add
out
pop
add
fistl
adc
jne
inc
lahf
inc
cmp
xor
push
leave
add
adc
dec
daa
stos
popf
xchg
mov
fimull
fdivl
mov
dec
push
ret
xchg
iret
xchg
xchg
inc
jbe
mov
fwait
insb
aad
rol
mov
lret
inc
test
push
jecxz
cmpsb
stos
inc
adc
mov
inc
fstl
pop
pop
jne
sub
xchg
xchg
cmp
cmp
dec
inc
sarb
popf
in
repnz
mov
popa
loop
dec
nop
jae
mov
pop
hlt
in
and
jne
mov
mov
hlt
test
push
std
out
adc
cs
mov
add
cld
jle
xchg
sub
xor
inc
adc
mov
ss
push
aad
das
es
hlt
cli
push
out
inc
adc
std
xchg
inc
mov
pop
cmp
daa
dec
pop
in
insl
cld
pop
fistpll
loope
ds
test
subb
leave
cld
aam
rcrb
lods
sub
push
test
or
fnstenv
popa
repz
outsb
fucomi
jo
sub
xchg
cmc
push
int
popa
inc
or
inc
pop
int3
pusha
jbe
jo
jae
sbbl
call
les
lock
sbb
movsl
sub
dec
loopne
jne
pop
xor
paddq
cli
xlat
ja
les
adc
sub
lcall
cmpsl
inc
adc
mov
or
or
mov
pushf
mov
test
xlat
xor
sarl
sub
insb
adc
dec
or
push
sub
enter
lods
adc
mov
fdivl
ret
lcall
jmp
mov
mov
fsubrl
or
pop
xchg
cmp
leave
xchg
aaa
popf
jg
push
jl
push
std
leave
outsl
lret
nop
dec
sbb
mov
cltd
inc
insb
adc
add
mov
mov
xor
inc
or
and
dec
insb
push
dec
setae
jb
enter
out
xor
or
nop
pop
jg
rcll
pop
dec
push
insb
icebp
inc
lcall
adc
les
pop
fnsave
xchg
push
mov
lods
xor
cmpsl
xchg
cmp
dec
push
push
mov
dec
inc
mov
pop
mov
mov
pop
mov
xchg
sbb
ja
int3
and
mov
cltd
cmp
faddp
dec
out
out
push
out
and
add
insl
xor
dec
dec
mov
arpl
ja
das
mov
addr16
mov
ret
sahf
inc
xchg
adc
mov
sub
ds
push
cmp
lods
bound
dec
pop
in
jbe
and
jg
add
adc
in
inc
jmp
inc
adc
negl
mov
jp
dec
pop
jno
rolb
cld
mov
xchg
inc
add
test
pop
mull
daa
clc
pop
inc
stos
add
sub
jecxz
push
insl
lcall
and
pop
lods
xor
mov
in
fisttps
cld
arpl
pop
cmp
aad
or
addl
inc
pop
jmp
cld
sbb
xchg
add
xor
pop
fnstcw
inc
cmp
mov
scas
cli
xchg
loope
jo
gs
xorb
in
rcrb
insb
inc
xchg
popa
out
xchg
and
shrl
ss
inc
jge
dec
sbb
js
xchg
outsl
orb
cmp
adc
and
mov
or
mov
push
pop
je
scas
orb
sti
push
mov
imul
inc
xorb
fcmovnbe
jg
pop
pop
clc
clc
inc
ds
and
int
outsl
call
gs
movsl
cmp
jnp
jg
out
ret
pop
and
scas
xor
pop
or
jg
in
jne
outsl
sahf
inc
adcl
cmp
mov
je
dec
adc
arpl
and
push
inc
adc
scas
sub
xchg
ja
fdivl
mov
adcb
das
test
out
shl
inc
adc
xor
push
stc
test
fwait
adc
movsb
sub
sub
add
mov
mov
ja
or
adc
mov
dec
adc
loopne
fmuls
imul
mov
orl
ret
mov
lcall
adc
cli
je
cmp
aaa
xchg
vcvttss2si
mov
dec
pop
nop
mov
shl
lret
jb
mov
into
mov
jg
mov
movsl
and
xor
and
lds
adc
mov
mov
fstpt
stos
inc
push
dec
cmp
divl
scas
rclb
inc
shrd
cmp
mov
lea
cmpsb
xor
shrl
stos
popa
in
filds
into
xchg
das
test
pop
fdivrl
adc
add
rorb
mov
std
jmp
adcb
pop
std
dec
dec
roll
push
ljmp
dec
repnz
test
aad
shr
dec
mov
adc
cmc
popa
pop
cmp
jmp
dec
add
shrl
std
pop
out
jno
sar
bnd
arpl
cmc
popa
pusha
jge
sub
xorb
add
xor
xlat
outsb
add
das
cmpsl
and
sbb
mov
in
xchg
outsb
cmc
mov
push
int
fbstp
mov
xchg
cmp
mov
orb
xor
and
xchg
mov
xchg
aam
or
sbb
add
out
pop
ja
inc
pop
popa
cmc
pop
pushf
or
cs
or
hlt
jno
ret
addr16
sarb
mov
pop
int
xchg
cmp
je
test
popa
outsl
bnd
sub
sub
aam
and
test
fstp
xchg
fcomps
lcall
mov
insb
sbb
scas
in
xor
pop
sbb
jns
lea
mov
in
and
pop
or
addb
call
lcall
fistpll
subl
jno
out
call
clc
rclb
jge
popa
dec
ljmp
jl
fstl
les
dec
imul
xchg
sti
pusha
or
jmp
jae
imul
cltd
jnp
cld
lods
mov
sub
nop
cld
cltd
inc
mov
test
pusha
repnz
fs
push
mov
mov
cld
js
cmc
or
mov
pop
loopne
ljmp
mov
xchg
lahf
loop
and
mov
cmpsb
adc
inc
es
negb
mov
pushf
cmp
andb
repnz
sbb
push
out
pop
add
enter
les
mov
jl
push
jecxz
icebp
out
mov
adcl
xchg
jp
push
cmp
rcrl
fidivl
jl
and
mov
cld
xor
sub
push
and
sub
and
pop
test
sbb
jne
movsb
sub
inc
push
aad
out
aam
jnp
daa
popf
xchg
pop
cli
jmp
ret
xchg
and
pop
stc
jecxz
xor
cmp
mov
popa
push
aam
jb
jmp
pop
xchg
inc
in
lods
sub
cli
cmp
pop
cmp
dec
mov
xlat
or
mov
push
push
lret
mov
movsl
jb
adc
mov
or
mov
cltd
cmp
add
push
fcmovne
cmpsb
xor
ds
and
mov
movsl
mov
rol
cmp
repnz
lret
xchg
and
pop
add
xor
aad
aas
mov
xchg
iret
adc
in
pop
add
negl
arpl
inc
or
jbe
sub
aas
mov
jae
push
cmc
sbb
out
pop
pop
pop
mov
push
fs
scas
aas
mov
shlb
xchg
adc
roll
hlt
mov
pop
icebp
xchg
or
stos
cmp
js
ljmp
cs
pop
mov
nop
add
xor
mov
xchg
mov
cmpsl
stos
inc
fsts
cmpsl
mov
enter
cs
out
jg
dec
jecxz
mov
push
xor
mov
aam
inc
xlat
jbe
cmpsb
cmp
leave
dec
les
ljmp
into
cmp
add
ret
inc
push
mov
in
insl
push
xchg
cmp
lds
hlt
mov
pop
icebp
pop
mov
test
push
xor
push
mov
in
fbstp
mov
shrb
aad
and
xchg
xchg
movsl
or
scas
sub
pop
iret
in
add
loope
and
cltd
push
shrb
add
mov
and
aad
jne
cmp
enter
imul
sbb
js
mov
call
inc
rcrl
xchg
adc
inc
mov
mov
gs
icebp
xchg
or
stos
cmp
xor
lea
xchg
cs
dec
out
pop
mov
popl
outsb
add
loop
mov
test
repnz
push
adc
sub
out
jle
dec
jecxz
mov
push
jg
and
roll
jne
cmpsb
cmp
enter
jns
jl
sbb
lcall
nop
mov
mov
jecxz
insl
adc
ss
mov
pop
icebp
push
mov
test
imul
xchg
sub
pop
fidivs
mov
shrb
aam
and
test
xchg
fmuls
movsl
or
pop
lods
sub
pop
into
in
add
loope
and
cltd
push
iret
push
mov
and
aad
je
cmp
mov
adc
cltd
xor
insl
call
inc
rcrb
xchg
adc
inc
mov
mov
fs
icebp
xchg
or
stos
cmp
xor
mov
xchg
cmp
mov
mov
insl
add
mov
push
push
mov
test
repnz
push
adc
sub
in
jge
dec
jecxz
lahf
add
jg
and
roll
je
cmpsb
cmp
movl
adc
fwait
loop
int
cltd
xor
add
roll
jno
aad
adc
cmp
les
pop
icebp
push
mov
test
aaa
js
imul
xchg
sub
pop
fidivs
mov
shrb
rorl
xchg
fmuls
movsl
or
pop
lods
sub
pop
int
jp
jl
loope
and
cltd
push
into
push
mov
and
aad
jae
cmp
push
pop
hlt
inc
mov
clc
push
loop
dec
mov
add
inc
mov
insl
xchg
adc
mov
bound
xchg
pop
adc
out
xor
mov
cwtl
das
cmp
mov
mov
insl
add
scas
aam
loopne
mov
addb
mov
mov
adc
sub
in
jnp
dec
in
popf
add
jge
and
roll
jb
cmpsl
ds
pop
hlt
lds
pop
ja
jnp
sbb
cltd
xor
add
mov
loopne
insb
adc
repz
pop
repnz
adc
fldcw
or
dec
in
fdivl
add
rorl
mov
montmul
cmpsb
pop
js
pop
stos
sub
jp
jp
loop
push
add
jo
mov
pop
mov
push
ret
repz
cmp
inc
vcvtdq2ps
data16
cwtl
sbb
jp
mov
add
ds
insl
xchg
aad
mov
mov
popa
pop
repz
add
jp
in
xor
mov
cltd
xor
test
mov
mov
insl
add
lods
aad
fisttps
and
mov
adc
cmpsb
xor
xlat
inc
in
jns
dec
in
fwait
add
jl
and
sarb
aas
jo
test
and
pop
jbe
jnp
push
cwtl
in
lret
xor
add
mov
insb
adc
repz
pop
repz
jp
data16
das
or
dec
in
add
iret
mov
add
cmpsl
ds
aad
cmpsl
push
jbe
pop
test
lds
jecxz
sti
jns
jecxz
sbb
cltd
dec
lret
push
std
outsb
and
push
sarb
icebp
jno
mov
lds
jnp
xchg
pop
in
dec
mov
xor
push
cltd
fwait
or
mov
pop
insl
push
aas
aas
mov
mov
pusha
pop
hlt
xchg
add
stos
xor
jnp
in
xor
xchg
dec
out
pop
mov
add
lods
insl
fimuls
jle
hlt
mov
mov
adc
and
inc
in
js
dec
in
lcall
jnp
and
iret
ds
outsl
lock
and
pop
jne
jnp
adc
ss
xor
add
mov
fst
insb
jg
repz
pop
repz
adc
das
movb
cwtl
das
mov
fidivl
add
into
mov
add
cmpsl
ds
aam
cmpsl
add
es
jecxz
cli
js
jecxz
sbb
cltd
dec
lret
cld
insl
and
dec
mov
cmpsl
mov
ret
lds
jnp
xchg
push
in
dec
mov
xor
imul
dec
cmp
insl
mov
hlt
mov
pop
pop
hlt
nop
add
stos
xor
xor
test
xor
cmpsb
dec
out
push
mov
add
stos
insl
fisttpll
and
hlt
mov
lahf
test
test
and
xor
aad
in
ja
dec
in
cltd
add
jp
and
into
cmp
test
and
pop
je
jnp
adc
in
enter
addr16
mov
mov
insb
push
mov
aad
das
repz
pop
repz
jp
fs
movb
cwtl
das
mov
fnstenv
add
mov
jg
mov
rclb
cmpsl
add
cmpsb
and
lds
in
stc
jbe
jecxz
sbb
lcall
and
dec
mov
cmpsl
mov
rol
repz
adc
jnp
mov
xor
add
mov
mov
pop
xlat
outsb
lea
aas
cmp
cmc
mov
pop
pop
hlt
mov
adc
xor
xor
test
lcall
push
mov
add
fisttpl
and
mov
sahf
stos
inc
rorb
test
and
out
jbe
dec
in
cwtl
add
leave
inc
insb
add
and
int3
cmp
xlat
insl
in
test
pop
pop
cmc
rolb
jb
jl
adc
xor
add
mov
fcmovnbe
insl
or
cs
mov
pop
repz
jp
aam
movl
xlat
mov
or
add
int3
mov
jge
mov
rclb
cmpsl
add
pop
movsl
and
lds
in
clc
je
jecxz
sbb
dec
push
clc
imul
pushf
sbb
xlat
out
insb
cmpsl
ds
maxps
inc
mov
jge
xchg
adc
jnp
mov
xor
add
cmp
fsubrs
or
cmp
pop
hlt
mov
adc
adc
push
xor
addl
xor
movsb
push
call
test
outsl
push
sub
lea
cli
hlt
mov
adc
and
out
jne
dec
in
xchg
add
add
and
lret
fsubrs
aas
sbb
ds
pop
jo
jge
adc
fwait
xor
add
mov
fcmovbe
outsb
or
ds
sub
pop
repz
jp,pn
pusha
shll
enter
das
mov
dec
out
aad
dec
pop
js
add
sub
imul
and
jnp
mov
into
adc
mov
out
divb
in
pop
add
add
imul
and
inc
fsubr
push
aas
pushf
or
pop
out
pop
jle
xchg
adc
jl
mov
xor
arpl
lcall
and
mov
inc
xlat
cmp
pop
cmc
mov
adc
adc
push
xor
cmp
push
call
test
outsl
push
daa
cmpsb
insl
fmuls
and
stc
hlt
mov
pushf
stos
inc
into
dec
adc
and
out
je
dec
in
xchg
add
add
and
leave
cmp
imul
aas
sbb
pop
idivb
fistpll
adc
fwait
xor
cltd
adc
and
or
cmc
mov
pop
repz
adc
pop
shlb
enter
das
mov
dec
out
aam
dec
push
ja
add
daa
aam
pop
lret
cld
jp
mov
adc
mov
ret
out
cmc
jno
in
push
add
add
push
mov
dec
mov
test
fwait
or
idivl
pop
jle
nop
pmulhw
pushf
xor
bound
lcall
and
mov
inc
xlat
aaa
stos
testl
cs
jl
fisttpll
lret
lcall
push
mov
push
movsl
insl
xlat
inc
lea
clc
hlt
mov
fwait
stos
inc
int
adc
and
out
jae
dec
in
xchg
add
add
mov
enter
push
test
sbb
pop
outsb
fidivrs
adc
fwait
xor
add
mov
and
or
cmc
mov
pop
repz
stos
mov
jp
pop
shll
enter
das
mov
dec
out
shll
add
es
pop
leave
mov
sti
jns
mov
int3
adc
mov
ret
hlt
jo
in
adc
imul
and
mov
inc
mov
test
lcall
pop
in
pop
jle
push
in
inc
mov
xor
popa
add
xor
push
fnstenv
add
testl
sub
dec
xor
jg
lcall
push
mov
push
and
inc
lea
div
mov
lcall
jnp
leave
pusha
pop
popf
xor
into
inc
out
jb
dec
in
xchg
add
add
and
cmp
imul
pop
idivb
jge
jg
fwait
xor
add
mov
and
or
cmc
mov
repz
stos
scas
sub
pop
shlb
enter
das
mov
dec
out
shlb
add
and
mov
cli
js
mov
lret
adc
mov
shl
rep
dec
in
adc
pushf
inc
shrl
and
inc
mov
test
cltd
or
cmp
jle
mov
pushf
xor
pusha
add
xor
and
xchg
xlat
xor
push
pop
cmc
xchg
adc
adc
dec
xor
jle
lcall
dec
mov
push
and
insl
aad
lea
div
mov
cltd
stos
inc
lret
dec
adc
push
pushf
xor
int
out
jno
dec
in
xchg
add
add
and
aaa
inc
fsubrs
test
sbb
pop
insb
fdivrl
push
mov
jnp
das
fwait
xor
add
mov
and
or
cmc
mov
pop
repz
stos
scas
sub
pop
iret
xor
add
das
mov
dec
out
shll
add
and
imul
and
ja
mov
lret
sti
insl
enter
das
dec
shl
repnz
dec
in
adc
add
and
inc
mov
fsubr
data16
cwtl
or
cmp
jle
lea
xor
pop
add
xor
fnstenv
add
xor
testl
sub
xor
jge
lcall
dec
mov
push
and
lea
cmc
hlt
mov
cwtl
stos
inc
lret
test
sbb
ds
jo
dec
in
xchg
add
add
and
lds
inc
fsubs
test
sbb
pop
imul
adc
in
mov
loopne
cltd
adc
and
pop
test
aad
sub
mov
pop
repz
lods
sub
pop
into
xor
jl
das
scas
and
push
iret
mov
add
add
push
mov
clc
jne
mov
enter
insb
leave
pusha
sahf
sbb
dec
mov
dec
in
adc
popf
inc
mov
and
xchg
adc
fs
xchg
or
cmp
jg
mov
in
cmp
popf
xor
pop
add
xor
fidivl
add
xor
pop
cmc
test
push
lods
sub
xor
jl
lcall
dec
mov
pop
and
mov
and
inc
adc
sbb
xor
lret
jg
jmp
in
xchg
push
popf
ret
add
and
adc
mov
ret
xor
test
push
mov
mov
fidivrl
or
in
mov
fiadds
cltd
jno
and
push
cmpl
mov
testb
jnp
stos
lods
daa
jp
pop
int
leave
jp
das
lods
pop
push
call
pushl
push
mov
les
mov
adc
pushf
sbb
dec
mov
dec
in
adc
sahf
inc
mov
and
and
inc
bound
stc
aaa
mov
pop
out
adcb
or
jge
stos
sahf
xor
mov
mov
mov
addl
fdivs
movsb
clc
push
pop
testb
jge
xlat
dec
xor
jp
fwait
xor
pushf
push
jmp
jge
jo
and
mov
and
lods
inc
movl
popa
sbb
call
out
popl
popf
sarb
adc
inc
fldenv
inc
adc
ss
pop
push
mov
jl
sub
push
jg
push
mov
and
add
aas
mov
testb
jns
stos
stos
es
pop
lret
xor
cld
jns
xor
int3
mov
outsl
outsl
push
mov
ret
hlt
jb
mov
adc
lcall
jg
imul
aas
mov
and
and
inc
popa
stos
inc
xchg
add
stc
xor
push
adcb
pop
out
cmp
add
push
lods
and
cmp
clc
aad
pop
testb
jge
dec
xor
jns
fwait
xor
fwait
push
jmp
jl
jo
pop
sahf
xlat
outsb
rolb
and
and
stos
jne
lret
xchg
xor
enter
insb
jmp
push
popf
mov
loopne
mov
shll
fldenv
test
divl
xlat
jle
or
pushf
xor
lcall
and
add
testb
js
stos
test
lret
sti
js
xor
lret
mov
std
outsb
outsl
push
mov
rorl
mov
les
test
cltd
push
xor
inc
mov
dec
out
or
insl
add
pop
and
and
mov
pusha
stos
inc
xchg
add
xor
enter
adcb
push
out
cmp
add
push
sub
dec
fidivl
incb
das
mov
pop
testb
jge
aad
xor
js
fwait
xor
lcall
jnp
jo
push
popf
xlat
outsb
iret
aas
mov
and
adc
sbb
call
out
lea
popf
mov
fbld
adc
inc
fldenv
test
divl
jle
or
pushf
xor
add
scas
sub
fsubrs
cmpb
mov
testb
ja
stos
test
jnp
push
leave
xor
cli
ja
xor
lret
cld
insl
outsl
push
lahf
sbb
lea
jo
mov
ret
adc
cwtl
adc
call
out
or
sahf
cmp
pop
and
and
mov
pop
stos
inc
xchg
add
xor
adcb
add
sahf
xor
mov
mov
mov
jg
inc
fsubrs
mov
pop
testb
jge
aam
xor
ja
fwait
xor
cltd
push
jmp
jp
jo
sbb
mov
and
adc
pop
xchg
xor
cmp
jg
out
out
mov
popf
mov
fisubs
jge
inc
fldenv
test
divl
jle
pop
xchg
jl
sub
or
scas
sub
mov
add
mov
testb
jbe
stos
cmpsl
and
push
enter
jbe
xor
leave
mov
sti
insb
outsl
push
sahf
sbb
insl
dec
mov
hlt
mov
ret
repz
adc
enter
jg
dec
out
or
sahf
cmp
insl
add
pop
and
and
pop
stos
inc
nop
add
xor
adcb
add
jle
cmpsb
sahf
xor
mov
mov
mov
jle
inc
fsubrs
dec
pop
idivb
push
lods
and
jge
roll
lret
jbe
fwait
xor
cwtl
push
jmp
jns
jo
sbb
xlat
outsb
int
mov
and
ja
push
ffree
push
nop
ja
mov
inc
mov
dec
fists
lea
mov
mov
sub
pop
dec
stos
lcall
mov
adc
push
xchg
leave
or
mov
mov
fsubl
outsb
cmpb
pop
mov
rolb
jnp
mov
sub
cmc
mov
push
add
and
cmp
and
das
dec
sti
jge
dec
jbe
mov
nop
call
sub
out
cmp
movd
sbb
push
aaa
pop
sub
cmp
das
add
dec
push
fcomi
cmp
sahf
xchg
and
testl
xor
repz
fbstp
in
cmp
adc
fldt
and
mov
jnp
pop
lea
pop
es
and
aas
sbb
cli
xchg
add
and
movsb
ljmp
fs
repz
data16
or
outsb
rorb
data16
add
aad
dec
mov
sub
pinsrw
jb
out
insl
nop
dec
insb
xchg
pop
mov
sbb
cld
out
mov
fildll
fldt
repz
mov
mov
inc
sti
dec
shl
cmp
mov
fdivr
sbb
cmpb
lret
cmp
jle
test
fs
cmp
pop
scas
dec
cmpsb
jmp
push
sub
movl
mov
nop
cwtl
cltd
faddl
pop
out
jg
lret
or
dec
leave
mov
sbbl
mov
inc
xor
outsb
add
lahf
es
stc
test
add
push
or
into
ljmp
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
add
mov
push
aam
arpl
ss
cmc
dec
ficoml
gs
jb
test
or
mov
scas
stc
xchg
les
outsb
xchg
int3
and
dec
lock
call
out
sbb
lods
sarb
data16
testl
lahf
cmp
loopne
stos
lret
or
repz
divl
mov
and
mov
dec
mov
ja
fldl
sti
jmp
nop
lds
jns
push
stos
je
fdivp
sub
mov
jbe
and
push
mov
ja
test
mov
fwait
inc
je
adc
dec
sbb
and
int3
iret
push
nop
jno
aad
repz
push
xchg
mov
mov
bound
iret
sub
das
inc
xchg
lcall
jne
flds
xchg
leave
sub
in
cld
pop
lahf
fs
jmp
aas
dec
sbb
enter
mov
js
or
sti
lahf
in
pop
out
sbb
jns
inc
mov
int
xchg
jnp
scas
movsl
lods
movsb
orl
daa
mov
inc
int3
fstps
insl
cmc
pand
ficompl
icebp
and
cwtl
xor
push
repnz
rclb
cmp
mov
cs
cmp
aaa
adc
add
scas
dec
mov
aaa
adc
inc
mov
or
mov
sub
adc
push
fnstcw
jo
add
xor
ret
rcrl
xor
cmp
mov
psllq
addr16
add
cmp
paddw
dec
pop
jnp
push
jne
or
jo
or
incl
xchg
stos
pop
dec
inc
int3
out
clc
insl
or
xor
test
orb
mov
or
stos
or
sbbb
and
mov
push
mov
and
push
and
add
or
dec
xchg
js
imul
sti
jb
insb
mov
fwait
cmpsb
push
jno
sub
in
xchg
enter
sbb
loop
popa
into
aaa
and
jge
xor
lret
leave
fiadds
clc
mov
sahf
test
mov
mov
addr16
cwtl
imul
addl
cmp
movsl
pop
mov
out
and
mov
sub
popa
negl
sub
insl
xchg
pop
or
mov
sbb
push
ret
leave
repnz
mov
mov
sbb
jbe
push
fildll
cmp
cli
repz
or
pop
sub
xchg
add
scas
je
mov
mov
cmc
pop
xchg
add
add
in
jge
xor
pop
in
aad
cmp
test
orl
repz
sbb
bound
xchg
insl
in
adcb
jge
sbb
repnz
adc
decl
out
sbb
cmpsl
popa
icebp
stos
les
out
push
push
jecxz
mov
dec
push
movsl
xchg
scas
ret
xchg
add
scas
shlb
push
outsb
push
mov
push
sbb
dec
mov
or
mov
pusha
push
push
stos
shll
lea
popf
xchg
mov
pop
sahf
inc
adc
cs
push
scas
rorl
rclb
into
add
push
mov
add
cmc
insb
lea
enter
sbb
cs
js
sub
shr
daa
xlat
mov
mov
inc
lds
inc
cmp
inc
mov
jle
jae
mov
outsl
jae
dec
mov
jle
je
dec
mov
dec
je
cmc
rcl
iret
movsb
das
arpl
enter
imul
pop
inc
cmc
insb
xchg
repnz
call
in
cmp
adc
and
jge
sarb
cli
xchg
das
jl
inc
pop
xchg
int
or
adc
scas
test
andps
push
jb
aaa
xchg
mov
mov
xchg
mov
pop
pop
sbb
repz
or
sub
lods
cmc
or
inc
std
js
aaa
mov
mov
inc
jae
mov
pop
cmp
dec
jp
sub
jns
adc
sub
pop
sub
and
fdivs
jp
jge
or
sarb
adc
shr
sbb
mov
mov
inc
roll
lods
push
std
fmull
push
push
adc
lods
mov
push
cmp
adc
xchg
not
sbb
stc
mov
xchg
pushf
pop
or
sbb
gs
cmp
xchg
popa
movsb
xchg
ja
mov
dec
js
mov
mov
push
xor
cli
out
addr16
push
cwtl
mov
dec
incb
jbe
out
jae
jmp
jle
push
mov
sub
out
int3
lea
js
xchg
jne
mov
pop
mov
adc
mov
jp
fcoml
shlb
mov
mov
das
dec
inc
and
sbb
in
sarl
dec
jl
and
aam
test
jb
adc
icebp
jmp
add
jns
clc
stc
dec
out
addr16
or
mov
test
iret
xor
ror
cwtl
or
lcall
mov
or
insl
call
sbbl
fisubrl
or
sub
shlb
jae
xchg
cwtl
imul
jno
cmpsb
cmp
add
jge
cmp
fdivs
lret
pop
jbe
neg
and
push
out
in
outsb
popa
pusha
xchg
fwait
fwait
mov
bound
mov
je
sahf
arpl
mov
xor
mov
jp
or
pop
dec
jae
inc
add
xor
adc
jns
or
xlat
jge
pop
lahf
pop
cmpsl
aad
mov
int3
ss
inc
cmp
sbb
vmptrld
dec
jbe
sar
pop
into
fwait
loopne
roll
fs
lret
iret
mov
mov
push
lods
sbb
cmpsb
pop
sbb
xor
data16
pop
cltd
dec
rcrb
das
dec
fs
mov
out
dec
dec
xor
cmp
int3
xor
jle
insl
pushf
pusha
fcmovnb
repz
je
in
bound
or
sub
ret
fs
pop
cli
aaa
adc
pop
shll
mov
pop
loopne
nop
jns
sub
and
sbb
add
or
cltd
push
stc
xchg
mov
sahf
and
jno
out
pop
mov
sbb
pop
mov
pop
jno
jecxz
pop
mov
and
loope
pop
mov
mov
mov
je
pusha
fst
dec
aad
xchg
push
sbb
clc
cmpsb
jecxz
and
int3
inc
mov
sbb
into
rclb
in
xor
jl
je
and
cmpl
mov
jmp
jb
adc
mov
mulb
scas
dec
add
lods
xor
jmp
enter
lret
cmp
sbb
and
mov
inc
scas
sbb
ret
les
adc
sahf
sub
add
ficoms
or
fldenv
jmp
call
cltd
dec
adc
ror
jg
repz
outsb
aam
cmpsb
mov
pop
aaa
in
push
xor
movsb
nop
mov
je
sbb
add
imulb
push
in
les
insb
js
push
inc
cmpsb
jp
fisubs
inc
jmp
mov
mov
