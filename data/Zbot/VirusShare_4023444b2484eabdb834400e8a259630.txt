mov
sub
sarb
mov
xor
jp,pn
xchg
mov
sub
mov
mov
pusha
call
add
mov
fistpl
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
add
add
xor
mov
out
stc
js
mov
sub
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
fwait
movsl
sahf
mov
jmp
and
pushf
mov
pop
imul
scas
cmp
in
sub
push
push
lea
push
subl
lea
push
subl
lea
push
mov
push
subl
mov
add
call
pop
mov
xor
adc
sub
mov
popl
mov
mov
mov
mov
sub
push
pop
push
pop
lea
pushl
pop
dec
lea
push
popl
pushl
lea
pop
repz
sub
test
jne
mov
pop
ret
orb
jg
in
notl
jg
mov
pop
sub
xchg
and
xor
mov
sub
push
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
sbb
rol
sbb
arpl
nop
lahf
mov
inc
push
add
test
popa
imul
pop
lods
insl
fisttpl
push
rcrb
in
dec
push
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
add
add
add
inc
and
cmpsl
testl
sub
idiv
push
mov
sub
push
push
push
push
call
add
pop
lea
pop
mov
ret
add
mov
inc
jns
imul
xchg
lret
stos
mov
pop
sbb
hlt
mov
loop
cli
dec
out
cwtl
mov
ja
lret
pop
push
push
dec
fiadds
lret
xlat
jns
pop
jle
ror
outsb
js
push
mov
sub
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
popf
add
xor
lea
inc
rsqrtps
scas
xor
inc
aam
pop
movsl
mov
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
test
sub
xor
test
inc
fcomps
lcall
not
insb
lahf
dec
lcall
scas
jo
push
jmp
ret
push
pop
clc
sbb
sub
lods
mov
shl
pushl
pop
.byte
.byte
cwtl
and
add
add
and
add
and
add
and
add
and
add
add
aam
add
pop
and
add
and
add
and
add
and
add
and
add
and
add
add
cmpsb
and
add
and
add
add
add
add
repnz
add
and
add
add
or
add
jp
add
sbb
add
and
add
add
xor
add
pusha
and
add
add
add
add
ret
add
and
add
and
add
add
add
and
add
and
add
and
add
add
and
add
add
add
add
out
and
add
add
add
and
add
and
add
and
add
and
add
and
add
add
aam
add
pop
and
add
and
add
and
add
and
add
and
add
and
add
add
cmpsb
and
add
and
add
add
add
add
repnz
add
and
add
add
or
add
jp
add
sbb
add
and
add
add
xor
add
pusha
and
add
add
add
add
ret
add
and
add
and
add
add
add
add
imul
jb
je
arpl
add
add
fs
imul
add
dec
add
arpl
inc
add
dec
add
insb
outsb
push
add
add
inc
gs
outsl
imul
jbe
jae
add
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
je
imul
bound
gs
add
roll
dec
gs
jo
imul
inc
imul
insl
gs
insb
outsl
jae
add
add
gs
outsl
outsb
jae
insb
gs
add
add
popa
jo
gs
jb
jns
mov
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
outsl
jo
inc
imul
gs
jb
jbe
je
push
jb
imul
je
outsl
outsb
push
add
add
fs
je
insl
inc
add
mov
push
insb
gs
fwait
add
je
jbe
outsb
je
add
add
gs
outsl
outsb
jae
insb
gs
add
add
gs
inc
je
insl
add
sbb
gs
outsl
outsb
jae
insb
gs
add
add
je
jb
jbe
push
jns
gs
add
push
dec
inc
dec
xor
cs
insb
add
push
add
outsb
fs
push
add
inc
jb
dec
jae
add
add
inc
push
inc
jae
jb
outsl
jb
or
push
gs
jb
inc
jb
outsl
jb
or
push
gs
jb
inc
jb
outsl
jb
add
inc
jb
dec
jae
add
push
add
outsb
fs
push
push
add
outsb
fs
push
pop
add
addr16
outsl
js
add
add
arpl
inc
jae
jb
outsl
jb
pop
add
addr16
outsl
js
add
inc
jb
dec
jae
add
pop
add
addr16
outsl
js
add
push
dec
push
cs
insb
add
add
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
add
push
imul
jb
gs
add
inc
jb
popa
je
inc
js
arpl
imul
outsw
jb
add
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
dec
dec
inc
dec
inc
dec
inc
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
inc
add
test
add
cmp
add
add
add
add
add
ja
add
add
add
add
add
inc
add
push
add
add
enter
add
add
add
add
add
add
add
add
and
add
add
andb
add
imul
sub
add
movsb
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
stos
lods
mov
mov
cltd
pop
xchg
xchg
xchg
or
jge
jnp
jp
lods
stos
lods
add
cmpsl
cmpsb
push
mov
mov
mov
lret
lret
lret
int
rcl
shr
rcl
shl
iret
ror
hlt
int
int
leave
enter
leave
out
vshufps
mov
mov
lods
lods
lods
lea
cltd
cltd
and
jae
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
lahf
add
mov
jae
mov
out
lret
rcl
sar
xlat
xlat
std
fcom
xlat
xlat
aad
aam
rcl
sar
int3
int
aam
aam
iret
rcl
inc
ret
mov
mov
scas
iret
mov
mov
and
add
push
add
add
add
add
add
add
add
add
lods
lods
stos
add
scas
scas
sbb
mov
jnp
mov
sar
dec
lret
leave
call
ror
aam
xlat
fdivr
xlat
xlat
call
aam
dec
int3
int
int
into
call
aad
dec
int3
into
mov
mov
mov
std
cmpsl
test
ljmp
push
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
push
add
dec
add
pop
add
push
or
inc
or
sbb
add
add
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
dec
leave
enter
int3
call
rcl
call
fcomp
xlat
call
dec
into
int
leave
lret
into
int3
int3
inc
mov
sarl
pushl
test
jmp
lcall
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
push
push
imul
pop
pop
pop
fs
aas
inc
push
sbb
das
movntps
sbb
xor
aaa
cmp
cmp
cmp
and
and
pop
add
add
add
add
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
leave
enter
sar
aad
aam
aad
iret
iret
iret
inc
leave
enter
vcmpsd
mov
mov
ljmp
movsb
movsb
popf
pushf
pushf
cwtl
xchg
xchg
lcall
addb
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
arpl
push
push
push
add
jno
jge
jle
jg
jge
jb
jno
popa
bound
dec
push
push
xchg
cmp
cmp
mov
outsb
jo
nop
arpl
pusha
inc
inc
inc
xor
add
add
add
add
movsb
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
enter
leave
leave
dec
leave
leave
inc
mov
mov
mov
ljmp
mov
fwait
call
xchg
xchg
cwtl
cwtl
xchg
lcall
lahf
ds
ds
push
push
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
jo
outsl
add
pop
or
pusha
xchg
mov
xchg
xchg
xchg
incb
jp
idivb
jnp
outsl
jo
out
addr16
jne
je
jg
jle
jp
jp
gs
inc
inc
cmp
pop
sbb
adc
prefetch
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
cmpsl
test
pushf
pushf
sahf
decl
xchg
decl
xchg
xchg
sahf
lahf
mov
ficoms
nop
jle
jp
pop
das
das
cs
add
add
add
add
add
add
add
add
add
add
mov
push
push
cmpb
lahf
fwait
lahf
in
mov
mov
addb
decb
mov
loope
jb
enter
mov
addb
push
cmp
ss
jge
cmp
movsl
movsl
movsl
shrb
stos
stos
sti
stos
lods
lods
lods
lods
stos
stos
test
std
movsl
movsl
movsl
std
fwait
cltd
cltd
xchg
xchg
xchg
decl
jle
jns
jns
jp
jns
mov
xchg
movsb
movsb
mov
sti
mov
mov
mov
mov
mov
lods
lods
stos
xchg
sbb
add
add
add
add
add
add
add
add
push
pop
adc
movsb
test
mov
mov
xchg
nop
xchg
incl
test
std
xchg
xchg
xchg
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
addl
mov
pop
pop
push
push
or
inc
dec
insl
insl
imul
test
cltd
cltd
cltd
fistps
lcall
mov
xchg
mov
mov
lea
cltd
jmp
lods
scas
mov
mov
mov
mov
mov
std
mov
mov
mov
jp
or
add
add
pop
pop
adc
test
mov
incl
test
decb
xchg
sahf
pushf
pushf
std
mov
mov
xchg
in
xchg
in
xchg
push
jne
or
add
inc
sub
sub
dec
dec
data16
jo
mov
xchg
rclb
xchg
xchg
std
nop
decb
xchg
xchg
lcall
movsl
cmpsb
ljmp
test
pushl
sahf
scas
mov
xchg
mov
mov
ljmp
sahf
adc
add
add
pop
adc
mov
jmp
sahf
xchg
lcall
mov
nop
xchg
call
xchg
xchg
sahf
pushf
sahf
movsb
movsb
movsl
stos
test
movsb
movsb
movsb
notl
jnp
movsl
push
push
push
outsl
dec
dec
dec
pushaw
pusha
popa
jne
jb
mov
jge
orl
int
xchg
xchg
in
xchg
xchg
testl
mov
jmp
mov
mov
pop
mov
aaa
jge
mov
jbe
mov
movsb
mov
mov
lods
lods
mov
movsl
movsl
add
mov
add
pop
adc
mov
ljmp
sahf
decl
nop
xchg
call
xchg
xchg
call
xchg
xchg
cltd
lcall
sahf
sahf
lahf
mov
movsb
movsb
stc
cltd
lcall
nop
xchg
xchg
les
xchg
lcall
xchg
cmc
mov
xchg
cld
xchg
orb
fwait
imul
ljmp
jns
mov
jb
mov
outsb
ljmp
adc
stos
or
or
pushl
mov
mov
pushf
movsb
movsb
mov
add
pop
pop
adc
mov
ljmp
lahf
call
xchg
xchg
lcall
sahf
popf
jmp
sahf
sahf
lcall
xchg
cwtl
call
cwtl
xchg
call
cltd
cld
xchg
xchg
pushf
stc
sahf
fwait
lahf
stc
lahf
xchg
pushf
cld
pushf
xchg
xchg
insb
xchg
xchg
pop
jge
xchg
dec
js
fwait
cmp
insb
pushf
push
imul
movsl
push
jmpw
adc
lods
adc
stos
pcmpgtd
scas
adc
mov
push
mov
imul
mov
cltd
lods
mov
scas
scas
scas
movsb
movsb
movsl
sub
mov
add
add
add
add
pop
pop
adc
mov
ljmp
pushf
call
popf
lcall
movsb
movsb
jmp
mov
cwtl
decl
mov
xchg
xchg
xchg
ja
fwait
jno
cltd
fs
xchg
dec
jp
xchg
jb,pt
nop
sub
decl
pop
call
add
pop
lcall
push
pop
ljmp
sbb
mov
outsl
pushl
pop
outsb
mov
and
mov
and
mov
xchg
scas
mov
lods
scas
mov
mov
mov
add
add
add
mov
lods
add
pop
adc
scas
mov
shlb
lcall
movsb
movsb
jmp
test
ljmp
cmpsl
cmpsb
lcall
orb
mov
decl
sub
mov
pop
incl
push
push
incl
add
mov
pop
decl
add
cltd
add
lahf
add
cmpsl
or
mov
outsl
pushl
sub
mov
sub
les
jnp
lds
inc
xor
dec
inc
mov
lea
cld
mov
mov
mov
mov
movsl
add
push
push
adc
test
ljmp
lahf
jmp
test
lods
ljmp
mov
scas
scas
lods
jmp
mov
mov
push
incl
pop
push
incl
add
addl
incl
add
mov
push
decl
add
lcall
jmp
addr16
mov
aaa
cmp
cmp
dec
cmp
call
cmp
call
dec
xchg
dec
mov
std
mov
mov
movsb
movsb
movsl
push
mov
mov
add
add
add
mov
dec
dec
adc
mov
mov
mov
cmpsb
cmpsb
ljmp
mov
pushl
mov
pushl
stos
lods
lcall
and
push
decl
adc
xchg
push
incl
add
push
decl
push
call
pop
jmp
add
lods
add
mov
jo
ret
dec
inc
mov
int
mov
rolb
call
dec
mov
xlat
dec
xchg
call
dec
xchg
fimull
fisttpll
fsts
call
xchg
std
mov
mov
mov
sahf
sahf
or
add
add
add
add
dec
dec
adc
jl
lahf
mov
lcall
test
mov
mov
mov
mov
mov
mov
mov
mov
scas
mov
mov
outsl
decl
sbb
nop
pop
popa
decl
adc
mov
push
decl
add
xchg
add
sahf
add
add
test
pusha
ljmp
add
jns
into
dec
nop
call
push
cwtl
call
push
fwait
fistl
fstl
jmp
pop
pushf
ficomps
jmp
pop
mov
jmp
pop
lahf
call
xchg
mov
mov
cmpsb
cmpsb
cmpsl
jne
mov
lahf
add
inc
inc
adc
ja
lahf
cltd
sahf
jmp
lahf
lcall
mov
mov
mov
mov
mov
mov
mov
ljmp
inc
jbe
xchg
and
and
xchg
and
xchg
and
xchg
sbb
or
call
add
fwait
add
mov
add
lods
add
mov
fs
mov
xor
fisubl
jmp
movsb
fisubs
in
cmpsb
jmp
data16
jmp
gs
call
cmpsl
ljmp
dec
mov
mov
mov
sahf
mov
add
add
add
inc
aas
adc
jb
cltd
xchg
cltd
call
mov
lods
scas
pushl
mov
mov
mov
mov
ljmp
push
jg
xchg
sub
lcall
call
push
call
add
fwait
add
mov
add
stos
add
mov
pushw
adc
roll
fldt
jmp
outsb
lods
jmp
outsl
stos
call
je
jmp
scas
in
jae
out
jne
out
je
out
je
jmp
xchg
mov
cmpsb
test
mov
mov
add
add
add
jl
jle
ds
outsb
js
lea
lcall
mov
mov
mov
mov
mov
mov
mov
movsl
scas
lcall
outsb
lcall
cmp
mov
push
call
pop
lcall
add
test
pusha
pushl
add
add
sbb
ficoml
jmp
jbe
call
jle
jmp
mov
out
cmpb
lock
push
cmpl
ljmp
mov
stos
test
daa
mov
sahf
lahf
add
add
add
add
ss
jne
jg
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
mov
ret
mov
lcall
cmp
movsl
inc
jge
movsb
inc
jge
movsl
ss
fwait
sbb
add
popf
add
movsl
add
stos
add
scas
add
mov
fs
mov
add
call
es
movsw
jmp
mov
lock
push
nop
ret
push
xchg
ret
xchg
push
xchg
ret
push
xchg
in
mov
fnstenv
lods
test
xor
sahf
add
add
add
inc
aas
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
sar
mov
jle
lcall
dec
cmp
movsl
xor
lcall
add
mov
add
stos
add
mov
mov
add
leave
push
insl
fdivs
jmp
ja
out
xchg
ret
push
lcall
hlt
lcall
negb
int3
sti
popf
int3
sti
sahf
into
cli
cwtl
lret
xchg
ret
mov
dec
mov
mov
mov
sahf
sahf
sahf
aas
nop
add
add
add
xor
or
cmp
outsb
dec
dec
dec
jecxz
pop
pusha
call
mov
mov
mov
sar
ret
ret
inc
enter
mov
mov
ljmp
push
xchg
movsb
sub
cltd
pop
pop
lcall
pop
ljmp
mov
add
movl
jbe
fiadds
in
mov
push
movsl
int3
push
movsb
into
push
cmpsb
int
cld
test
sar
cld
cmpsl
iret
cld
stos
sar
test
iret
push
sahf
jmp
mov
int3
std
mov
mov
mov
xchg
xchg
add
lcall
xor
xor
daa
sub
or
bound
pop
xlat
jne
jno
mov
mov
mov
inc
inc
mov
enter
rol
pushl
push
test
scas
push
mov
scas
dec
test
mov
add
movsb
add
lods
add
mov
fs
mov
add
int3
add
add
adc
out
pop
test
negl
aam
sti
mov
sti
scas
sar
cli
mov
cld
mov
std
mov
mov
cld
mov
mov
mov
push
cmpsb
jmp
mov
call
lret
mov
mov
lahf
mov
xchg
or
add
add
xor
sbb
sbb
dec
dec
dec
ss
outsl
mov
fcom
xlat
xlat
jmp
fcom
not
rcl
std
lret
dec
leave
lret
dec
lret
leave
lret
lret
inc
leave
mov
lods
ljmp
push
mov
stos
cmp
lcall
add
lods
add
mov
arpl
mov
add
rolb
jo
add
fiadds
je
jmp
jb
cli
lods
aad
cld
mov
mov
std
mov
fdivr
std
mov
fdivr
mov
fcos
stc
mov
call
lret
int
mov
sahf
mov
or
add
add
xor
xor
add
add
pop
pop
pop
or
enter
jecxz
pop
out
jmp
test
jecxz
leave
fsubp
fdivr
aam
xlat
std
into
ror
mov
push
cmp
sub
mov
add
mov
arpl
mov
add
lret
add
aam
jb
fildl
jbe
in
jbe
out
das
xchg
stc
mov
sti
mov
loopne
std
ret
loope
inc
loop
inc
inc
loopne
inc
fdivrp
dec
fdivrp
dec
std
enter
lret
sti
mov
lret
leave
into
mov
mov
xchg
adc
add
add
incb
incl
std
incl
repnz
testb
out
in
pop
jmp
out
sub
in
in
dec
jmp
ljmp
jecxz
out
fcmovu
fsubr
les
xchg
cmpsb
cmp
movsl
adc
pop
ljmp
add
mov
add
int
insl
fadds
je
loopne
js
call
inc
pushf
cld
mov
in
std
lret
dec
in
dec
jecxz
std
int
std
into
jecxz
std
int3
loopne
std
shl
std
iret
loop
call
in
shl
sti
out
mov
xlat
inc
ret
ret
out
cmpsl
cmpsl
cmpsl
mov
xchg
xchg
add
add
add
std
incl
incl
div
testl
icebp
hlt
repnz
out
repnz
out
repnz
cmp
in
out
pop
loopne
loopne
lds
sti
lahf
and
lcall
add
lods
add
mov
inc
add
leave
add
roll
jb
flds
jne
in
jnp
jmp
jle
cmc
pop
test
cld
iret
in
std
iret
jecxz
std
shr
std
shl
call
in
call
out
fsubr
call
call
std
fldl2e
fucomi
cld
shl
push
ret
jecxz
leave
leave
lret
test
fwait
xchg
xchg
xchg
and
cwtl
xchg
add
std
cld
add
cld
stc
add
sti
cli
add
div
or
shll
sarb
fwait
sbb
lcall
add
scas
add
mov
add
lret
call
add
faddl
jne
out
js
out
sbb
cli
cld
fsubr
fldl2e
fldl2t
fldl2e
std
fucomp
fucomi
fucomp
fsubrp
std
fsubrp
std
fsubrp
cld
aam
push
ret
call
rcl
clc
lods
lods
lods
lods
xchg
xchg
xchg
outsb
outsl
outsl
add
add
mov
loope
add
mov
xchg
lods
jl
repnz
and
mov
add
mov
mov
add
into
add
add
fiadds
jae
jmp
sub
shr
jmp
out
fsubr
fucomi
fucomi
std
xlat
call
cld
aam
cld
shl
cli
shl
clc
iret
fdivrp
test
xlat
out
mov
fcos
xlat
fcom
sti
mov
mov
fwait
fwait
lcall
lcall
mov
mov
add
leave
lds
scas
xchg
jmp
add
mov
mov
add
roll
outsl
call
add
loope
js
ljmp
cli
cwtl
sti
leave
loopne
cli
int3
loop
cli
clc
mov
aam
hlt
mov
iret
push
mov
into
jmp
mov
sar
ljmp
imul
fsub
cmc
fucomip
mov
mov
xchg
add
add
add
int
add
shrb
loopne
xor
pop
ljmp
add
mov
add
into
pop
jb
rorl
jbe
fsts
ja
loopne
cmp
dec
xchg
jmp
scas
int3
ljmp
std
loope
cld
fidivs
neg
mov
leave
ljmp
into
into
xlat
shl
aad
call
in
test
in
out
popf
call
lret
leave
push
lods
stos
stos
adc
cmpsl
cmpsl
test
lahf
mov
ret
ret
roll
ret
mov
stos
aam
dec
jg
pushf
sbb
test
insb
scas
and
mov
jns
mov
dec
xchg
ret
push
stc
lret
test
mov
out
mov
mov
lret
ret
int3
rcl
int3
mov
int
mov
xlat
aam
jg
fcmovu
jb
loopne
gs
jecxz
out
jmp
xor
cmc
div
and
repnz
fcmovnu
or
mov
into
add
add
add
roll
roll
mov
test
pushf
cmc
mov
jbe
ljmp
mov
sarb
stos
mov
ret
cmpsl
mov
mov
leave
int
iret
int3
into
addr16
iret
push
rcl
rorl
aad
rcr
aam
aad
fsubs
xlat
sbb
adc
in
push
loopne
jecxz
out
jmp
add
cli
testl
std
std
std
add
incl
mov
mov
shrl
mov
mov
mov
mov
mov
mov
mov
mov
rcll
lds
leave
xor
int
daa
lret
ror
and
rcrl
iret
rcll
rcl
rorl
aam
aam
rcr
xlat
add
add
add
in
add
in
ljmp
std
incl
mov
mov
add
ret
les
mov
mov
mov
push
rol
or
mov
add
int
add
rolb
rcl
add
aad
aam
aad
add
fsub
add
aad
add
loopne
add
fucom
add
out
add
icebp
lock
std
incl
std
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
ret
ret
mov
ret
ret
mov
mov
mov
test
cmpsl
test
pop
add
add
add
add
add
add
scas
scas
mov
mov
mov
mov
iret
ror
jmp
aam
cmc
rcl
aam
into
rcl
cli
int3
int
stc
int3
lret
mov
mov
lods
fwait
xchg
xchg
xchg
dec
ds
add
add
add
add
add
add
add
cmpb
inc
inc
inc
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
leave
cld
into
into
into
aad
call
aad
dec
iret
sar
into
iret
int
lret
mov
mov
cld
stos
lods
stos
icebp
xchg
cltd
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
jne
jae
je
jae
gs
dec
inc
dec
cmp
sub
sub
xor
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
dec
lret
lret
call
rcl
call
aam
dec
int3
lret
inc
mov
rol
pushl
test
lahf
lahf
lahf
cwtl
xchg
xchg
jmp
outsl
jo
pop
pop
push
dec
add
add
add
add
add
add
cmpl
test
jnp
imul
movsb
push
push
push
stos
push
push
insb
insl
insb
push
pop
pop
cmp
aaa
aaa
pop
jno
jno
scas
mov
pop
mov
mov
mov
mov
mov
rol
mov
mov
mov
jmp
fwait
pushf
call
xchg
xchg
lcall
xchg
dec
dec
dec
dec
adc
adc
add
add
add
add
add
pop
fwait
lcall
popf
xchg
lcall
addb
jnp
jl
jns
jns
jns
jns
jp
jp
jb
jae
push
push
push
cmp
jne
pushf
sahf
pushf
mov
scas
scas
repz
lods
lods
sti
scas
lods
scas
std
test
cmpsl
std
pushf
sahf
popf
call
test
call
mov
lods
jmp
scas
lods
leave
cmpsb
cmpsb
cmpsb
cltd
jb
jb
adc
adc
add
add
add
add
insl
insl
outsb
pop
nop
mov
loop
cwtl
popf
incl
mov
sti
xchg
xchg
xchg
lock
nop
nop
fimuls
mov
jp
pop
pop
inc
inc
inc
inc
dec
outsb
jo
orl
cltd
cwtl
repnz
xchg
xchg
std
mov
mov
xchg
xchg
xchg
lcall
movsb
test
mov
mov
mov
mov
stc
mov
mov
cmpsl
mov
addl
add
add
pop
pop
popa
or
scas
mov
cmpsb
lahf
movsl
decl
mov
xchg
xchg
xchg
std
lahf
sahf
lahf
sti
lahf
mov
cwtl
call
push
push
push
jo
push
pop
outsl
insl
insl
outsl
xchg
subl
mov
lcall
mov
pushl
pop
mov
mov
mov
mov
out
lods
stos
insl
stos
stos
test
add
add
add
pusha
or
mov
in
movsb
test
call
cwtl
cwtl
lcall
cltd
lcall
sahf
pushf
cli
xchg
xchg
xchg
jmp
xchg
mov
nop
orb
xchg
push
cld
xchg
pop
cmp
dec
jl
movsb
inc
jns
lods
aaa
js
mov
je
mov
insl
ljmp
sbb
mov
mov
scas
scas
jle
movsl
movsb
push
pop
pusha
pusha
or
mov
lcall
sahf
popf
jmp
lahf
mov
decl
orl
xchg
jb
cld
xchg
pop
cmp
dec
jns
nop
cmp
xchg
sub
xchg
sbb
lcall
push
pusha
ljmp
sbb
sbb
mov
jno
mov
and
pop
mov
scas
scas
xchg
sahf
lahf
sahf
adc
add
add
pop
popa
pusha
or
lods
mov
stos
movsb
cmpsb
jmp
cmpsb
cmpsl
ljmp
test
lcall
pop
jns
mov
imul
mov
pusha
decl
or
mov
push
decl
add
fwait
add
cmpsb
or
je
mov
das
jle
lds
jle
xor
leave
xor
ret
stos
mov
mov
mov
test
add
add
add
add
popa
or
movsl
test
jmp
scas
scas
pushl
mov
jmp
jb
mov
pop
decl
or
test
push
decl
add
xchg
add
mov
add
mov
outsb
inc
cmp
dec
inc
mov
rolb
call
inc
nop
fmuls
call
popa
lahf
inc
cmpsb
mov
mov
mov
incb
add
add
pusha
popa
pop
or
lahf
mov
ljmp
mov
mov
mov
ljmp
jnp
nop
pop
popa
call
push
pop
decl
push
call
add
test
pop
ljmp
and
iret
dec
nop
fcomps
fistpl
jmp
pop
lahf
jmp
pop
mov
fisubrs
int
mov
ret
cmpsb
xor
add
add
dec
pop
jge
jl
fwait
xchg
cltd
jecxz
lahf
mov
pushl
mov
mov
lcall
sub
lcall
and
xchg
cvtdq2ps
xchg
add
popf
add
cmpsb
add
scas
add
push
imul
fsubl
jmp
outsb
stos
jmp
jo
ljmp
in
jno
jmp
cmpsl
mov
shll
addl
pop
outsb
insl
insb
bound
lcall
mov
mov
sar
mov
xchg
lcall
cmp
pushf
sub
call
add
movsl
add
lods
add
mov
gs
or
xlat
inc
xchg
jmp
jns
jmp
mov
out
cmpl
xrelease
push
mov
mov
cmpsl
test
cltd
lcall
sub
sub
push
push
dec
pop
pushw
loopne
mov
mov
mov
ret
mov
popf
jmp
inc
jg
mov
pop
pop
jmp
add
mov
gs
mov
adc
jmp
pusha
mov
push
xchg
xchg
push
cltd
clc
lcall
clc
cwtl
jmp
lods
vcmpss
popa
mov
add
add
inc
inc
pop
pop
pop
push
fisttpl
mov
mov
rol
inc
ret
mov
cmpsl
jmp
dec
test
mov
add
test
add
mov
add
and
push
mov
sar
stc
stos
sar
cli
stos
iret
std
lods
iret
std
lods
sar
sti
test
jmp
mov
dec
rol
stos
stos
stos
jne
pushf
popf
or
add
add
dec
dec
dec
aaa
jae
jb
test
into
int
int3
int
cmc
lret
sti
leave
lret
lret
enter
mov
ljmp
adc
add
mov
gs
add
into
add
fiaddl
xchg
push
xchg
cld
mov
mov
xlat
mov
mov
sar
jmp
rol
mov
scas
mov
add
add
add
add
pop
or
aad
dec
loope
fsubp
loope
fstp
fadd
fcmovu
aam
xlat
out
mov
gs
cmpsl
jae,pn
cmpsb
pop
pop
ljmp
add
leave
add
xlat
add
jecxz
jl
lock
mov
std
ret
loopne
std
inc
std
enter
enter
lret
std
lock
lret
divb
sahf
sbb
add
add
incl
incb
ljmp
in
in
jmp
ljmp
xchg
mov
mov
mov
add
mov
inc
add
iret
add
faddl
jbe
jmp
outsb
mov
sti
ret
std
iret
out
shl
call
in
std
shl
aad
xlat
out
std
shl
push
enter
lret
sar
mov
mov
mov
add
add
std
add
incl
std
cld
pop
aad
aam
mov
pop
xchg
popf
or
pop
pushl
add
roll
jno
fiadds
jbe
in
and
shl
fldpi
std
fsubr
fsubr
xlat
jmp
std
fsub
sti
aam
push
xlat
jmp
rcl
sti
mov
lahf
sahf
das
add
add
int
int3
or
bound
stos
add
mov
add
add
loopne
ja
in
xor
sti
int3
loopne
cli
lret
test
repnz
icebp
rcl
out
aam
in
out
aad
jmp
aam
in
fsubr
enter
test
test
std
add
add
add
aam
push
mov
jae
or
mov
insb
inc
pop
jae
lret
and
sub
sti
ficoms
clc
jecxz
mov
out
jecxz
lret
jmp
fdivrl
int3
leave
loopne
iret
mov
jecxz
ficompl
in
out
jns
rcl
dec
mov
add
add
mov
scas
xchg
movsb
les
push
xchg
mov
fidivrl
jle
rol
stos
mov
mov
les
aam
lret
insl
ror
int
rcl
rorl
xlat
fnstcw
loopne
fildll
in
fisubs
loop
lock
in
in
or
std
add
add
add
incl
mov
mov
outsb
mov
stos
jns
mov
mov
mov
mov
xor
leave
enter
rcl
pop
sarl
or
loope
or
int
add
std
std
add
std
std
add
add
add
into
int
or
int3
int3
into
add
std
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
lcall
ret
enter
enter
mov
rol
mov
scas
scas
scas
insb
stos
stos
lods
xor
jne
add
add
add
add
add
add
add
add
add
add
add
add
stos
lods
stos
add
mov
enter
sar
aam
std
rcl
sar
int
into
std
mov
stc
mov
mov
roll
pop
add
add
add
add
add
add
add
add
jae
jno
push
dec
inc
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
into
int
aad
sar
iret
into
into
inc
mov
ljmp
mov
mov
add
xor
add
sbb
jae
jae
xchg
aad
outsl
outsl
ret
bound
outsl
insl
outsb
jb
popa
pusha
cmp
pusha
sbb
mov
in
mov
mov
mov
lods
lods
lcall
xchg
lcall
cltd
xchg
lds
jb
and
add
pop
add
add
jae
jae
fwait
xchg
lcall
test
clc
mov
test
addl
push
push
dec
inc
mov
fwait
into
movsb
mov
mov
decb
mov
pushf
lcall
mov
mov
ret
xchg
aas
sub
sub
add
add
xorb
lods
movsb
test
test
cmpsl
cld
mov
mov
xchg
xchg
xchg
cld
sahf
sahf
sahf
cmc
cltd
cltd
lcall
push
push
imul
jg
xchg
aam
mov
lcall
pushl
imul
stos
scas
lods
push
lods
stos
lods
add
add
add
cmpsl
mov
scas
test
cld
xchg
xchg
xchg
call
fwait
fwait
lcall
fwait
lcall
mov
loope
jne
out
xchg
bound
std
lcall
ljmp
pop
jno
mov
outsb
pushl
sahf
lods
lock
mov
imul
into
add
test
pop
scas
movsl
stos
test
popf
pushf
lahf
jmp
movsl
call
push
decl
inc
je
mov
push
mov
pop
call
or
scas
sbb
jne
mov
daa
jns
lds
test
rcrb
subl
jne
push
mov
mov
cmpsb
ljmp
mov
lcall
sub
adc
xchg
push
decl
add
add
mov
adc
ret
dec
aas
mov
iret
inc
mov
aam
mov
aam
xchg
dec
cltd
mov
mov
mov
movsb
movsb
movsl
push
add
add
push
push
test
mov
scas
pushl
mov
ljmp
aaa
outsb
call
pop
pop
decl
add
mov
add
mov
push
xchg
fcompl
jmp
pop
mov
jmp
cmpsl
call
pushf
mov
mov
cmpsl
cmpsb
pop
add
add
bound
adc
popf
pushf
lcall
mov
mov
lcall
xor
cwtl
and
xchg
or
mov
add
mov
dec
xor
jmp
jnp
out
jge
out
jg
fistpl
mov
and
add
add
dec
adc
imul
mov
mov
mov
rol
mov
arpl
lcall
add
ljmp
add
or
dec
cwtl
in
lea
push
xchg
push
xchg
enter
enter
inc
mov
cmpsb
sub
inc
aas
aas
adc
push
xchg
mov
cld
rol
inc
ret
ret
inc
mov
cwtl
ljmp
sbb
movsl
add
mov
arpl
ret
add
aam
jns
in
outsb
scas
push
test
cli
lods
sar
cld
lods
sar
cld
scas
sar
cld
lods
sar
in
mov
inc
mov
movsl
ds
incl
xor
xor
mov
mov
rcl
mov
aam
aam
out
leave
lret
mov
mov
jmp
inc
add
aam
jno
call
nop
mov
fdivr
inc
cld
ret
std
ret
lock
ret
test
addl
stos
stos
stos
add
in
in
or
out
jmp
outsb
fcomp
movsb
daa
outsb
ljmp
add
lret
faddl
out
cmp
cld
int
std
shl
std
shl
shl
call
in
cmc
aam
int3
in
scas
scas
scas
popa
jg
addb
add
std
add
std
std
push
lret
int3
shrb
sahf
sbb
stos
add
mov
add
jecxz
js
repz
cmpsb
std
loope
std
xlat
call
std
aad
sti
aam
cli
shl
push
enter
int3
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
add
mov
or
fistps
jg
ljmp
cli
out
mov
iret
bnd
ret
shl
out
rcl
call
scas
push
lcall
add
mov
lods
xchg
dec
and
push
mov
ret
int3
lret
jbe
mov
fdivrs
adc
int
fmul
rcrb
rcl
dec
in
loopne
call
in
in
sbb
rol
add
mov
cmp
mov
scas
push
mov
mov
ret
and
ret
int
fstp
fisttpll
into
into
into
or
aam
incl
cmpl
add
add
add
mov
incl
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
and
inc
repz
test
arpl
pop
mov
das
push
fsub
jnp
cmp
imul
imul
jge
mov
fisttpll
aad
xor
repz
test
pop
mov
push
movsl
xlat
jecxz
or
mov
stc
sub
cwtl
pop
sbb
mov
insl
lds
cmp
jp
and
adc
cltd
inc
jb
adc
cwtl
das
divl
mov
dec
or
cmp
insb
popf
pop
jnp
lea
cltd
xor
adc
test
xor
xchg
push
insl
xchg
hlt
mov
pop
insl
add
cli
adc
lea
jge
test
in
add
pop
xor
insb
add
push
out
xchg
and
add
fsts
and
sbb
inc
xlat
jle
in
outsl
lahf
pop
cmc
rclb
jl
and
and
ja
ds
cwtl
mov
repz
fidivrl
or
les
cs
mov
push
inc
fidivs
xor
test
lcall
out
and
aaa
dec
insl
add
dec
insb
add
mov
add
test
aas
and
lds
in
test
jecxz
les
add
xor
and
test
cmpsb
cmpsb
out
fcom
pop
hlt
or
add
add
mov
mov
adc
data16
xor
cmp
push
jmp
test
lret
mov
jecxz
das
adc
cwtl
andl
mov
mov
cmp
lahf
cmp
lret
sti
cwtl
cmp
leave
sbb
in
ljmp
mov
add
add
pop
mov
and
cmp
pop
stos
ss
mov
xor
add
sbb
pop
mov
cmp
aam
mov
rcl
fucomip
xor
rolb
jo
inc
popf
xor
jne
mov
adc
jo
sbb
dec
cmp
into
insb
imul
inc
aas
addr16
jo
add
xchg
push
pop
mov
int
loop
mov
push
dec
hlt
pop
repnz
inc
cmp
ja
call
out
leave
adc
jne
sbb
and
sub
inc
nop
mov
ret
stc
cmp
pop
adcb
ss
test
sahf
xor
mov
fldt
rorb
jb
sub
stc
nop
fidivrs
cld
mov
pop
scas
xor
sbbl
push
xor
cmp
push
ljmp
jno
sub
fnsave
es
cld
xchg
push
pushf
lods
inc
into
jb
mov
out
lret
bound
lds
iret
testb
je
push
out
dec
xchg
pop
sahf
imul
sbb
inc
fisubrl
mov
inc
mov
mov
fnstsw
movzwl
test
xor
movsb
cmp
sub
fnstenv
scas
dec
loopne
sub
mov
push
lods
lods
push
xchg
jmp
push
jmp
sub
pop
movsl
dec
loopne
jle
mov
rcrl
lods
inc
dec
repnz
and
bound
shr
repnz
pop
out
adc
lahf
inc
call
es
insl
mov
mov
rorb
cli
cmp
shlb
pop
sbbl
data16
ss
or
mov
fldcw
rorl
fdivl
sub
pop
stos
cli
xchg
fdivrl
std
scas
std
sbb
add
int
and
jmp
jbe
push
test
jb
es
add
jb
fdivl
xchg
stc
jno
mov
adc
testb
pop
scas
inc
inc
xchg
loopne
fadd
pop
push
mov
movsb
cmp
adc
mov
dec
loope
aad
pop
add
adc
push
or
jbe,pt
in
mov
ret
imull
jnp
inc
out
xchg
dec
leave
pusha
jnp
shrl
fwait
jg
roll
jo
xor
call
test
lock
lret
xchg
pop
bnd
repz
xchg
sub
jnp
push
dec
sbb
jbe
lock
mov
cmpsl
ds
std
arpl
sub
test
leave
xor
cli
xchg
popa
clc
push
mov
dec
loope
inc
pop
insl
push
movsl
lcall
sub
orl
data16
scas
inc
add
in
test
stos
or
lock
mov
xchg
pop
scas
imul
repnz
insl
add
sub
sahf
pusha
lods
xchg
sub
mov
mov
or
jecxz
in
std
xchg
jmp
xor
pop
imul
test
outsb
bound
std
xchg
jmp
aad
imul
mov
loop
sbb
imul
dec
fs
in
rcrb
cmp
data16
xor
in
mov
mov
lret
shrl
mov
scas
inc
jne
fnsave
test
push
out
dec
dec
loop
xor
popa
cmpsb
sbb
cmp
dec
out
jp
pop
lock
mov
push
out
aas
jnp
ret
pop
push
sbb
xor
dec
outsl
push
jl
iret
data16
dec
in
push
lea
cltd
outsl
push
int3
mov
mov
cmpl
outsb
sahf
mov
adc
push
lea
cmp
pop
push
int
iret
mov
inc
call
aaa
jnp
data16
pop
repnz
mov
movsl
cmp
ss
ss
cmpsl
sarl
stc
nop
jle
pop
imul
jecxz
jp
adc
pop
fnstenv
sti
xchg
je
sbb
fidivrs
fnstenv
ss
scas
push
in
fnstsw
testl
in
aad
out
ds
outsw
aaa
lods
inc
data16
hlt
call
xor
fs
jmp
aas
pop
hlt
insl
xor
fbstp
mov
outsb
in
test
xor
cmp
add
mov
cmp
aas
push
imul
out
cmp
cs
mov
jne
ljmp
ret
push
ljmp
adc
outsl
mov
sbb
inc
imul
push
ljmp
pop
jne
std
xchg
lock
mov
test
jl
lock
int
hlt
out
sub
sbb
fs
add
pop
call
or
repz
mov
xchg
mov
sbb
adc
sub
sub
push
ljmp
jmp
mov
fildll
dec
and
inc
or
jbe
addr16
mov
and
rcl
cs
lret
cmpsl
ds
xor
push
mov
mov
fisubrl
mov
sbb
pop
jae
pop
test
into
shlb
leave
sbbb
sbb
aam
imul
mov
lds
and
adc
push
sub
pushf
pop
insb
add
mov
fisttpl
das
cmp
sbb
mov
inc
subb
xlat
sti
dec
loop
stc
inc
icebp
stos
inc
and
in
andl
cmp
or
testl
lea
sub
adc
into
cld
and
es
push
ljmp
sti
xchg
leave
popf
mov
lret
in
insb
adc
pusha
negl
cmp
outsl
xor
mov
stc
nop
mov
xchg
or
sub
imul
push
mov
into
and
sbb
sub
cmp
testb
mov
cmpsb
call
or
and
sub
adcb
movsb
loopne
pop
sbb
lock
cmp
lock
cmp
addb
into
gs
ljmp
inc
lock
jmp
das
lret
mov
in
loop
sbb
jne,pt
jo
cmpsl
mov
fnstsw
push
psubsb
inc
sbb
fcomi
bound
insb
subl
mov
push
or
xor
sub
cmp
outsl
push
scas
cmpl
repz
or
cwtl
das
push
and
push
jge
dec
stos
jl
sub
enter
es
adc
push
dec
push
xchg
nop
pop
test
jmp
mov
or
dec
loopne
sub
shlb
adc
popa
clc
adc
adc
outsb
es
scas
push
mov
mov
loopne
clc
adc
dec
push
jne
test
mov
or
sbb
xchg
aaa
loop
test
aas
stos
subb
mov
inc
pop
mov
lcall
repnz
jmp
push
sti
test
cmpsl
dec
push
jae
les
push
mov
out
jbe
adc
xchg
sbb
sub
fxch
dec
clc
sub
push
sub
cmpsb
mov
mov
out
xchg
out
outsb
add
iret
fiadds
jno
stc
shlb
dec
es
cmp
mov
lahf
sub
sbb
pushf
add
leave
mov
jno
jle
js
mov
popf
loopne
pusha
add
loop
fnsave
xor
mov
push
stc
jge
push
test
mov
shll
sbb
movsl
sbb
dec
push
test
inc
lahf
sub
cmp
pop
shrb
imul
iret
jbe
out
je
out
dec
xchg
inc
cld
push
cmpsb
pop
xor
nop
inc
ret
icebp
sbb
movsl
fmul
jae
idiv
out
sub
cmpb
mov
in
scas
fadd
add
add
pop
pop
data16
pop
out
or
faddl
inc
sub
jmp
push
jbe
push
mov
cltd
cmpsl
test
out
xchg
mov
adc
inc
ret
push
lods
jnp
icebp
aam
push
push
xchg
out
xchg
sub
pop
incl
les
mov
dec
aad
and
inc
add
and
pop
xchg
sub
add
insb
dec
cli
or
ja
xchg
sub
cli
hlt
push
push
cmpsb
mov
push
daa
sbb
out
out
xchg
push
subl
jb
stc
aad
xor
push
sub
mov
sarl
pop
js
push
cmpsb
or
in
inc
lahf
inc
cmp
pop
dec
test
mov
mov
inc
pop
out
mov
and
movsl
xchg
mov
inc
fistl
aas
xchg
lock
scas
outsl
scas
mov
shrl
scas
testl
int3
decl
into
outsl
orl
jl
jns
cmc
xchg
fdivrl
std
jp
insl
inc
jp
xlat
mov
out
in
ficompl
xor
scas
scas
inc
loopne
mov
or
lret
cld
fidivs
shr
cwtl
je
dec
and
lret
push
push
jp
popf
lock
inc
jmp
pop
mov
mov
sub
lds
inc
and
add
imul
imul
sub
cmp
mov
lods
jp
fbstp
movsl
xor
fbld
shrl
xchg
push
or
nop
jecxz
or
sahf
hlt
mull
and
fistpl
fwait
push
sbb
push
out
imul
dec
mov
dec
sahf
pushf
rcr
nop
daa
fidivl
aam
mov
pop
repnz
fcoms
jp
adc
cs
lahf
clc
jmp
das
rorl
mov
cmp
jbe
fnstenv
xor
shlb
xchg
loop
push
out
cld
test
outsb
add
andl
push
movsl
push
mov
popa
std
pop
mov
lods
push
icebp
xchg
sub
mov
loope
add
cs
gs
lcall
bnd
pop
icebp
ljmp
adc
dec
and
jns
inc
fadds
rcrl
push
call
sbb
fidivs
xor
cltd
sbb
ja
cmp
xor
pop
pop
out
dec
jnp
mov
addr16
xchg
jmp
mov
or
mov
insl
ljmp
lock
insl
add
sbb
xchg
push
push
movsl
mov
mov
ret
add
fsubrs
sub
loope
lods
testb
stos
and
das
add
push
inc
dec
inc
imul
mov
shrb
dec
or
data16
sahf
xor
lods
push
mov
mov
hlt
sbb
rorl
dec
inc
pop
sahf
dec
hlt
data16
sbb
mov
xchg
inc
das
insb
mov
dec
in
fadd
push
std
stos
jge
clc
push
fbstp
adc
mov
aad
mov
ret
fsubrs
in
rcrb
mov
popf
rdmsr
push
out
push
sub
mov
fsubrl
fbld
in
loop
push
sbb
jae
dec
lcall
cmp
scas
sub
xlat
outsb
adc
ss
xor
pushf
lahf
pushf
push
jmp
mov
jb
into
jnp
int3
xor
nop
daa
subps
mov
fistpll
out
int3
arpl
adc
andl
push
or
push
arpl
mov
push
rolb
pop
sahf
mov
and
fistps
xlat
pushf
clc
xor
gs
cmc
ljmp
adc
aas
jge
lds
xor
ret
mov
push
xchg
outsb
or
cmc
mov
in
fisttps
out
xchg
fisttps
out
push
cmp
add
test
imul
jns
ds
stos
inc
dec
push
xchg
frstor
pop
xchg
sti
aad
fdivrl
repz
rcrl
mov
xor
aam
pop
sub
orb
loopne
cmp
int3
fsubs
or
xchg
cltd
and
cmp
mov
mov
xor
pop
dec
pop
shrl
loopnew
mov
add
shlb
sbb
sbb
xor
or
es
in
jp
out
movsb
out
insb
add
mov
and
xchg
sub
xchg
mov
dec
pop
sbb
loopne
nop
ja
pushf
xor
and
push
loop
leave
mov
rcll
lods
push
pop
out
xchg
outsb
add
daa
pushf
mov
test
xchg
sub
mov
dec
rcr
outsl
je
shlb
xchg
add
insl
xor
mov
xchg
ret
test
sub
imull
dec
loope
popa
push
call
xchg
lods
sbb
cmp
xchg
mov
mov
mov
xor
loopne
cmc
pop
shrl
push
call
repnz
movsl
jle
adc
bound
dec
loope
fmull
push
push
add
add
push
xchg
dec
mov
test
cmpsb
cmp
xor
pop
movsb
pop
fnsave
loop
pminub
test
sub
xchg
xor
or
jmp
push
mov
add
ret
cmp
adc
cmp
ja
outsb
cmpb
xchg
insl
cmc
ffreep
pop
ficompl
cmc
mov
in
outsl
jae
stos
lods
mov
mov
xor
adc
cmpsb
adc
ds
add
add
sbb
jp
xchg
outsl
stos
inc
mov
int3
enter
ret
or
jle
adc
js
popl
mov
rclb
cmpsl
lahf
sbb
flds
lds
pusha
notl
dec
jecxz
jnp
adc
mov
shrl
mov
jo
xor
mov
rcll
inc
repz
inc
or
and
es
decl
inc
fdivrl
xchg
arpl
lds
addb
sbb
jno
sahf
adc
ss
aaa
adc
add
push
sub
inc
int3
pop
not
scas
stc
nop
mov
rcll
scas
or
xor
push
shll
pop
in
jb
dec
push
out
pop
mov
mov
rcrl
adc
sub
std
xchg
cwtl
sbb
sbb
mov
aad
xor
mov
dec
and
popa
ljmp
xchg
movsb
xchg
mov
push
shrb
arpl
mov
jb
inc
faddl
popf
push
movsl
ret
cli
xlat
jmp
ret
fadds
sbbb
repz
loope
dec
nop
daa
dec
dec
push
inc
mulb
fidivs
fmull
xchg
stos
dec
lods
inc
jae
or
lock
mov
dec
testb
arpl
lahf
push
into
fs
pop
jl
mov
pop
lds
jb
daa
sbb
stc
test
ret
sub
sahf
xor
fldenv
and
adc
clc
movsl
bound
enter
stc
lock
add
adc
and
pop
adc
gs
enter
outsb
jne
dec
out
xchg
push
popf
and
insl
add
dec
and
adc
and
mov
popa
clc
push
inc
pop
jg
outsl
push
sahf
cwtl
in
mov
rolb
lcall
and
mov
inc
xlat
mov
aad
cmc
sub
and
out
inc
jl
jp
inc
fidivl
loope
clc
dec
daa
mov
mov
jb
insl
xchg
test
xchg
shll
in
cld
sbb
add
sbb
inc
cltd
xor
insb
pop
icebp
jle
mov
mov
aad
push
in
sub
xchg
pushl
push
inc
shrb
aaa
aas
aad
lock
repz
jecxz
out
push
movsl
or
push
cmp
sub
fs
xchg
cmp
mov
sbb
push
push
inc
xchg
sub
cmp
lods
ret
pop
ds
mov
push
adc
push
and
push
movsl
inc
inc
xchg
cs
jo
ret
xchg
or
shrl
push
imul
dec
xchg
xchg
iret
insl
pop
mov
call
cmp
pop
dec
addr16
fimuls
loope
mov
lock
call
cmpsl
or
mov
rclb
mov
lret
pop
icebp
mov
shlb
fistpll
push
lret
lret
daa
xchg
sub
pop
mov
mov
std
dec
inc
fdivrl
fstl
jns
mov
or
loope
cmp
rorl
xchg
sub
aam
inc
gs
or
sbb
or
sub
cld
xchg
out
mov
adc
ds
data16
ret
inc
pop
in
test
pop
hlt
cmp
jnp
push
push
sub
ds
cltd
xor
push
dec
fisttps
mov
std
xchg
dec
out
dec
mov
add
xchg
cmc
loop
clc
mov
cmpsb
cmc
adc
cwtl
push
push
lds
sbbb
shlb
bnd
cmp
adc
pop
repz
xchg
cmp
adc
mov
out
ja
das
mov
in
xchg
mov
clc
mov
cltd
pusha
adc
insb
mov
int
mov
xor
into
dec
adc
mov
das
mov
adcb
pop
mov
imul
mov
or
lret
xor
adcb
insb
movsb
jbe
mov
ret
mov
sub
lods
add
fwait
xor
cmp
cmp
and
int3
mov
inc
jge
jae
enter
imul
subl
add
jno
pop
mov
xchg
sub
lds
pop
rcll
push
out
jnp
dec
loop
lahf
jge
loopne
jge
mov
nop
daa
cmp
pop
les
and
cmp
jne
dec
cmpsl
dec
mov
jle
leave
pusha
add
icebp
mov
fdivl
jns
mov
or
lret
sbb
push
repz
and
jo
movsb
inc
push
in
jbe
mov
leave
sbb
sub
int3
arpl
mov
into
gs
mov
adc
ss
movsl
addr16
loopne
mov
add
fimull
or
and
sub
lcall
cmpsl
loop,pt
sbbb
add
pop
xor
push
out
mov
pop
push
stos
add
jmp
bndstx
in
push
inc
fmuls
stos
pop
neg
popa
pop
scas
xchg
cld
jge
cs
int3
in
pushf
xor
mov
jne
mov
shrl
lods
xchg
sub
jp
mov
xor
pusha
test
sub
fadds
jno
or
les
jl
jl
pop
sahf
push
in
iret
cmp
add
mov
pop
mov
je
xchg
test
leave
xor
xchg
arpl
mov
mov
cmp
cmp
or
pop
icebp
pop
in
stos
adc
ss
addr16
xchg
sub
mov
fldt
or
mov
pusha
leave
lock
subl
popa
push
outsl
sub
mov
rcll
jp
mov
frstor
data16
mov
shr
sti
andb
mov
fdivl
jmp
rorl
adcl
out
add
es
mov
and
addr16
fmull
gs
sahf
mov
pusha
mov
adc
mov
fildl
xchg
add
shrl
and
lahf
ss
cmp
mov
fcmove
arpl
cwtl
das
andb
and
jg
mov
lret
call
fwait
jb
insl
add
xchg
dec
jno
cld
stos
in
insb
add
int3
int
idivb
add
push
sbbb
mov
fdivl
push
int
mov
popa
pop
mov
ja
jb
cli
stos
fucomp
jg
int
mov
sub
jnp
jae
lods
arpl
into
adcb
mov
mov
aam
fs
xchg
sahf
push
mov
fsubr
lods
sbb
aad
mul
js
push
push
jmp
mov
popa
clc
clc
jb
and
int
and
jle
and
enter
jmp
sbb
dec
outsl
xor
lret
lock
jecxz
adc
aaa
mov
jno
xor
xchg
int3
jle
fwait
cmpsl
in
outsb
add
repz
and
ljmp
fisubrs
movb
xor
int
add
pop
repnz
pusha
fs
cltd
int3
xor
cmc
mov
js
push
add
std
xchg
stos
pusha
push
scas
cmc
mov
jb
push
add
jl
jno
dec
stos
pop
pusha
testl
pop
loopne
push
hlt
sub
sub
dec
popf
xor
into
cld
xchg
clc
cltd
or
inc
jecxz
mov
mov
push
mov
mov
sub
inc
aam
mov
lahf
fnstenv
rcrb
jns
or
les
std
fs
sahf
push
shrl
mov
sbb
xchg
or
movsl
xor
daa
mov
mov
mov
xor
cmpsb
cmp
and
scas
inc
jl
pop
xor
jge
push
je
xchg
out
test
mov
xchg
in
inc
std
xchg
jp
in
test
fwait
es
and
push
pop
movsl
lods
inc
fiadds
cmp
cmp
add
scas
inc
loopne
jge
outsl
add
cmp
pop
out
test
test
push
lods
insl
hlt
push
mov
mov
dec
mov
xchg
sub
xlat
and
pop
divl
xor
dec
test
lret
cmc
lods
jne
push
testl
lods
inc
cmc
mov
mov
sahf
adc
push
ljmp
lods
xor
jge
notb
mov
dec
adc
jl
lods
ss
jno
sti
xchg
stc
xchg
repnz
sbb
xchg
inc
in
cmc
mov
or
and
sti
mov
mov
fisubl
adc
mov
inc
in
add
mov
add
ljmp
movsb
std
xchg
filds
and
add
and
mov
and
fdivl
pop
push
ret
pop
mov
stos
inc
pusha
stos
jl
aam
jne
mov
fsubrp
orl
sub
mov
adc
scas
loop
push
sbb
aas
xchg
sub
lcall
ja
or
shll
push
or
jl
pop
jne,pn
pop
jp
mov
cld
xchg
add
cmc
mov
and
mov
adc
sbb
xchg
ret
divb
jne
inc
add
mov
xchg
push
push
in
xorl
mov
ss
sbbl
xchg
inc
out
je
sbb
les
adc
adc
inc
faddl
cmpsb
outsl
push
roll
mov
loope,pn
adc
push
out
mov
out
gs
in
aad
aam
shl
ss
sbb
push
mov
cmp
jp
mov
mov
fldl
scas
nop
sub
lret
in
xchg
sub
xlat
mov
add
insl
add
and
xchg
sub
jae
xchg
lret
add
insb
je
xor
push
xchg
lock
jbe
std
movsb
jecxz
test
addr16
hlt
cmp
leave
outsb
adc
dec
loopne
arpl
add
ljmp
bound
xchg
jnp
fcmovnbe
outsl
add
sub
or
test
les
xchg
ljmp
and
dec
add
cmp
push
negb
mov
and
stos
mov
flds
mov
cmp
push
out
xchg
inc
cli
lea
adc
jecxz
or
call
cmp
sahf
cmp
mov
ljmp
in
ss
fstpl
pop
push
test
pop
jmp
lods
jl
aam
insb
stc
mov
mov
daa
fstpt
pop
dec
mov
xor
jns
arpl
leave
hlt
xchg
stc
aaa
ss
push
daa
rolb
fnstsw
pop
in
or
test
out
imul
aaa
je
or
mov
mov
fcoms
lcall
bound
adc
mov
inc
lret
pop
popa
out
pop
sub
rcrl
mull
int
mov
pop
shlb
bound
in
pop
and
mov
arpl
ficompl
mov
mov
ds
xor
adc
add
adc
xor
mov
enter
jne
fsubs
fisttpl
repnz
out
mov
fstpl
lcall
or
push
jle
mov
outsl
scas
sub
out
mov
fnsave
std
lods
inc
adc
jmp
xor
xchg
pop
cmpl
arpl
mov
and
inc
icebp
add
push
scas
inc
je
aam
arpl
mov
or
dec
sbb
xor
xor
arpl
lret
push
nop
and
mul
xchg
sbb
shlb
mov
ljmp
shll
cli
jbe
sbb
filds
mov
bound
int3
push
mov
pop
jno
mov
aad
lods
xchg
xor
jl
push
test
xchg
xor
dec
hlt
xchg
jbe
lds
lcall
mov
shl
jnp
aas
lahf
and
or
jp
outsb
mov
jp
fstp
pusha
sti
repnz
js
adc
jg
sub
bnd
lahf
bnd
mov
jle
lret
adc
bnd
sub
nop
jno
hlt
jns
mov
js
stc
sub
pop
add
ja
sub
and
lret
add
int3
lahf
push
push
es
repnz
aas
lea
cwtl
jno
mov
mov
sbb
add
mov
pop
cmp
pop
push
bound
push
aad
xchg
loopne
jp
or
mov
jp
inc
out
xchg
adcl
lock
adc
or
and
popf
sbb
ret
sub
adc
mov
mov
dec
scas
dec
test
fidivs
aam
loope
adc
xchg
inc
es
pop
addr16
scas
cwtl
jns
and
int3
lods
inc
decb
push
in
cmp
shrl
pop
outsb
add
movsb
mov
sub
lds
mov
add
pop
xor
push
pop
mov
pop
fwait
test
mov
lret
popf
xor
dec
and
xchg
mov
jns
call
or
cmp
mov
mov
xchg
sub
jmp
mov
xor
push
shrl
lea
sbb
popf
xor
std
pop
scas
cs
dec
dec
adc
cwtl
mov
fnstcw
or
adc
pop
dec
das
jns
sti
xchg
mov
dec
in
rcrb
mov
jmp
add
mov
push
cltd
cmpsl
ds
fbstp
adc
xchg
sub
jnp
xor
add
jns
push
test
sbb
cmpsb
ja
mov
inc
or
and
xor
pusha
or
lock
imul
pop
mov
enter
lret
imulb
jl
je
pushw
mov
mov
xor
rcrl
inc
mov
inc
cltd
xchg
pop
lea
enter
or
movsb
pusha
lcall
andl
sub
mov
in
xor
jae
ret
test
enter
sbb
loopne
xchg
insl
jle
or
fadds
xchg
into
mov
dec
sbb
inc
divb
adc
xchg
out
subb
xor
fs
outsl
addr16
or
ret
bound
add
outsb
cmp
mov
mov
in
pop
lods
add
lods
sbb
add
pushf
adcb
mull
mov
cmp
ds
push
sbb
mov
shl
cs
cltd
or
lcall
push
test
lcall
test
lock
sub
mov
xlat
push
outsb
bound
aas
xor
out
andl
sub
es
mov
repz
sbb
es
scas
loope
dec
aam
clc
aas
sbb
andb
out
psubusw
add
repnz
mov
sahf
aas
call
jnp
cld
mov
fdivrl
repnz
and
mov
mov
dec
adc
mov
mov
and
jo
popf
mov
daa
fcoml
push
adc
and
mov
xchg
xchg
mov
in
add
jp
or
out
enter
dec
cmp
inc
jae
push
adc
or
mov
shll
pop
mov
mov
mov
nop
xorl
adc
sbb
setl
lds
out
fistpl
mov
lods
jmp
nop
and
outsb
lock
pop
imul
push
jo
pop
push
test
lock
pop
push
pop
mov
mov
fcoms
push
enter
push
rcll
scas
cs
loopne
cmp
jnp
das
stc
add
jp
ret
cmc
xchg
loope
or
cltd
sbbl
gs
xchg
daa
lods
call
out
mov
daa
add
les
adc
sbb
cli
cmovnp
inc
cmp
test
pop
std
loopne
dec
pop
stc
imul
loopne
int
stos
std
fildll
push
fistl
mov
cltd
cs
sub
mov
sub
dec
in
loope
fcomps
sub
outsb
mov
push
shrl
add
push
icebp
in
jo
xchg
cltd
lods
jne
neg
inc
mov
enter
lea
mov
aaa
lcall
movl
and
dec
mov
inc
lea
cmp
pop
sub
icebp
mov
mov
pop
pop
jns
lods
rcrl
xorl
pop
cs
orb
or
lahf
iret
jnp
out
daa
mov
mov
xchg
fisttpll
jb
xor
dec
pop
mov
xchg
sbb
cld
shl
sbb
insl
rcrb
aad
das
xchg
movq
cmpl
xor
cmpsl
into
test
mov
inc
inc
shlb
arpl
mov
pop
dec
xchg
push
push
xchg
leave
adc
or
cmp
xchg
push
arpl
cmp
pop
insb
or
add
push
pop
cmp
pop
mov
adc
shll
push
mov
sub
mov
in
dec
jmp
popf
js
dec
sub
push
or
rorl
into
sub
hlt
sub
mov
fs
sbb
testl
xor
jmp
sbb
repnz
xchg
sub
test
sbb
jb
xchg
jnp
mov
pop
ljmp
stos
mov
jp
pushf
jmp
jae
out
or
popa
shr
lds
jp
sbb
xchg
inc
hlt
xchg
xchg
dec
in
iret
xor
stc
add
sub
hlt
repnz
rcll
idivl
sqrtps
xchg
out
jbe
and
test
adc
push
loopne
cwtl
cmp
in
mov
dec
inc
dec
stos
leave
mov
mov
test
jae
jge
push
fs
fcomps
mov
xlat
ss
or
jne
inc
add
notl
xchg
loope
lea
mov
dec
pop
sub
es
jnp
pushf
or
mov
xlat
repz
in
jb
push
pusha
jb
dec
cmp
test
movb
mov
pop
cmp
push
fisubrs
data16
jne
cmp
inc
dec
ret
push
fidivrl
enter
cli
dec
push
cmp
outsl
fcompl
jo
shll
cs
sub
inc
inc
sar
lods
mov
ds
pop
jb
mov
cmpsl
icebp
jge
inc
pusha
add
cmc
scas
push
cld
xor
hlt
dec
filds
push
fdivrl
add
xchg
imul
jecxz
pop
mov
js
stos
iret
lods
cmpsl
lock
loopne
xor
fs
daa
adc
call
fstp
push
lods
sub
int3
test
xchg
xor
push
rcrl
mov
popf
jb
push
loopne
adc
inc
leave
and
jae
push
adc
adc
ficompl
jno
cmpb
into
or
xchg
jge
push
fwait
mov
cltd
pop
adc
jnp
pop
jg
pop
adc
movsl
into
dec
lea
fisubl
cmpsb
xor
fcompl
stos
or
cld
sub
and
mov
push
adc
mov
es
fisubl
add
dec
jo
and
lds
loopne
jecxz
call
mov
ljmp
aad
or
sahf
dec
test
loope
aas
dec
jge
arpl
mov
repz
xor
and
add
loop
inc
dec
jge
xorb
out
or
sbb
fwait
or
xchg
insb
stos
addr16
xor
adc
cwtl
in
stos
loope
sub
inc
mov
enter
pushf
sti
cmp
test
pushf
cwtl
jno
jo
je
cwtl
xor
mov
pop
loop
sub
aas
fdivrl
add
andl
add
out
xor
xor
mov
mov
std
add
pop
test
sbb
inc
adc
xchg
aaa
movl
repz
and
cmp
push
sarl
inc
adcl
pop
pavgw
xchg
sbb
mov
movq
call
in
mov
mov
push
xor
add
and
fmulp
mov
mov
inc
icebp
gs
cmp
xchg
mov
xchg
and
adc
lahf
sub
adc
or
ds
movsl
bound
push
popf
sub
nop
jo
sub
dec
push
sub
insl
pop
dec
xlat
insl
rorl
pop
mov
sub
adc
decb
add
xchg
mov
cmp
lods
aaa
in
ds
adc
fisubrl
mov
ljmp
mov
inc
repnz
mov
adc
sbb
sbb
sub
je
xlat
es
xchg
pop
pop
loopne
cld
out
repnz
jnp
or
xor
or
insb
rolb
data16
inc
aad
sub
lret
cmp
movl
lahf
sbb
jbe
and
adc
js
sub
fistl
rep
popf
aam
mov
shl
pop
ja
add
jae
and
mov
das
pushf
xor
or
mov
loopne
sahf
test
roll
les
mov
or
addr16
lock
nop
negb
xor
or
sub
sub
rcrl
jbe
js
orl
adc
clc
cmp
or
or
imul
outsl
push
rorb
fsubrs
test
cltd
xchg
mov
xor
or
adc
std
call
cmpsl
nop
jmp
mov
call
xchg
jg
fstpl
scas
jl
dec
sub
lds
xchg
jmp
push
mov
mov
push
cmpsl
jns
xchg
and
test
adc
pop
inc
in
inc
aas
fistpl
dec
push
or
sub
mov
xor
add
inc
cs
lahf
pop
cmpsb
test
sub
inc
mov
push
mov
adc
aas
cmpsb
mov
adc
je
inc
arpl
pop
bound
cmp
cmp
mov
dec
add
enter
cmp
imul
ja
dec
cmp
js
dec
or
icebp
mov
sbb
int
adc
mov
repz
rol
mov
repnz
xchg
add
pop
jnp
cmp
iret
rcrb
push
xchg
lret
pop
sbb
adc
icebp
jle
insb
pop
cmp
sbb
xchg
dec
sti
aam
jb
pop
sbb
pushf
test
pop
ret
shlb
mov
or
in
popf
loop
repnz
pop
xchg
fsubrl
xorl
adc
sbb
fldcw
xor
xchg
xchg
ljmp
cwtl
lock
add
loopne
cmpsb
in
mov
mov
test
fs
dec
adc
xor
and
mov
test
movsl
mov
xor
jnp
insb
xchg
test
inc
outsb
xor
jns
jl
mov
incb
mov
aam
mov
mov
inc
mov
scas
jb
into
mov
divl
mov
dec
insb
fsubrs
mov
lods
shll
das
pop
lods
xor
push
inc
jp
loop
sti
imul
les
mul
js
leave
push
adc
call
sysret
rcr
in
cmp
test
lds
mov
insl
pop
movl
rorb
insl
pop
inc
mov
sub
xor
insl
xor
mov
adc
leave
add
gs
pop
add
int3
add
repz
sarl
ja
pop
in
addr16
sbb
pop
sbbl
rcr
call
jb
divb
in
in
mov
les
and
filds
push
lds
jmp
cmp
sahf
sub
cmpsl
loope
lea
int3
adc
mov
mov
outsl
xchg
insl
jns
sbb
mov
hlt
rorb
dec
or
mov
mov
xor
insb
mov
mov
call
sub
cmp
stos
mov
call
bound
and
les
orl
js
mov
and
data16
test
lock
mov
cmp
xor
decb
fdivrl
cmp
inc
mov
mov
bound
iretw
pop
sub
pusha
or
mov
dec
les
mov
iret
gs
cmp
outsb
ja
mov
in
pop
mov
jp
insb
pop
scas
sub
dec
jbe
pushf
shll
pop
jg
adc
xlat
xor
mov
add
fs
jl
mov
nop
insl
ja
jmp
mov
icebp
mov
cmp
ds
fucom
in
xor
pop
adc
jle
cli
sub
lea
push
arpl
or
sbb
jo
jo
mov
pop
outsl
adc
xor
push
dec
xor
cwtl
push
mov
loope
pop
cs
mov
es
and
ljmp
nop
pop
mov
sarl
pop
stos
mov
xorb
add
inc
add
pop
cmp
dec
int
mov
incl
add
ret
jnp
push
jno
pop
call
or
mov
shll
inc
fbld
or
sahf
cmpsl
insl
mov
mov
js
fmuls
into
mov
in
cmp
jbe
scas
sub
cmp
dec
or
notl
adc
cld
jmp
and
roll
out
cmp
roll
stos
lret
pop
and
and
lods
lcall
push
das
addr16
pop
and
insl
nop
xchg
fisttps
push
ss
mov
stos
jecxz
cmp
cmp
ss
adc
decl
cmp
aad
int3
cmp
in
sbb
ljmp
insb
cmp
lds
movsb
fcmovu
rorb
dec
lret
cli
rcl
iret
imul
cwtl
mov
and
fstpl
sub
jecxz
rcr
add
cs
cs
pop
pop
add
roll
pop
xor
xchg
dec
rol
dec
xchg
les
repnz
cld
pop
rclb
outsl
sub
repnz
jl
or
ss
xchg
cwtl
cltd
sar
shl
fcmovu
das
je
sbb
jg,pt
data16
loop
mov
popa
jnp
xchg
out
sub
push
repnz
adc
pop
adc
sub
and
jg
out
inc
xor
int3
inc
dec
pushf
inc
ljmp
mov
lock
stos
and
fistpll
cmp
mov
daa
xor
insb
test
add
lret
mov
push
std
adc
aam
shl
sbb
pop
adc
cmp
pop
xor
add
xor
mov
andl
pop
and
call
dec
and
fiadds
push
ja
push
push
fwait
out
addr16
push
je
inc
jne
dec
xor
push
add
and
pop
mov
xchg
fiaddl
test
mov
les
jecxz
sbb
pop
mov
and
jp
cmp
imul
cmpl
mov
pop
je
pop
call
test
repnz
push
sarb
hlt
out
xchg
ret
ja
dec
dec
adc
and
leave
das
aad
inc
pop
xchg
popf
mov
ret
jle
and
ret
push
and
and
push
sbb
lret
les
fstpl
mov
scas
fcmovne
jg
or
xchg
lds
scas
push
les
fimull
shrb
adc
fucom
add
xchg
test
out
lock
add
push
cmp
fimull
xor
out
das
dec
and
pop
add
not
mov
stos
mov
jp
push
xor
xlat
cltd
jne
mov
sarb
sarl
jmp
in
aaa
adc
js
cmp
adc
das
sarb
add
out
test
rcrb
in
repnz
cwtl
mov
test
mov
mov
out
jne
jo
push
test
shlb
pop
dec
sub
cmpsb
pop
aas
mov
int3
add
in
out
add
add
das
pop
pop
test
xlat
pop
test
xlat
adc
and
pop
inc
sub
aaa
cmpsb
dec
loop
push
pop
sti
add
sbb
cltd
cmpsl
pop
into
cmp
xor
push
xchg
xor
nop/reserved
sbb
jbe
fisttpl
cmpb
sahf
andl
imul
and
rcpps
push
cmc
les
arpl
xor
sbb
movsl
adc
stc
lret
mov
inc
lods
xor
mov
pop
sub
sub
lret
mov
mov
adc
pusha
sbb
mov
xor
test
mov
jb
cwtl
or
mov
adc
cmc
movsb
outsb
or
lcall
ss
and
shl
clc
jmp
cmp
fsubrp
cmp
fstpl
jae
and
xchg
test
outsl
and
cmp
repnz
jnp
rcrb
jmp
cmp
aaa
arpl
dec
push
mov
and
rcrl
sbb
aam
xor
movsl
std
lds
mov
mov
js
int3
fbld
ds
test
mov
inc
out
repz
mov
mov
mov
int3
jne
outsl
push
pop
nop
enter
push
int3
out
mov
in
shrl
or
and
pop
push
mov
in
dec
mov
ret
cmp
es
sub
mov
mov
jbe
fstps
in
rorl
mov
mov
movsl
xchg
jle
out
leave
je
add
sbb
jg
xorb
inc
sbb
in
insb
pushf
lea
push
mov
es
and
shl
out
inc
cmp
and
sarb
daa
lahf
fs
push
inc
sar
loope
es
jl
std
mov
insl
or
pop
sar
sahf
arpl
jb
cmp
adc
xchg
sbb
inc
hlt
xchg
add
nop
inc
dec
jae
ret
mov
arpl
xor
sub
or
mov
mov
ljmp
push
fucom
pop
sub
pop
cmp
adc
dec
and
out
dec
sub
stos
jae
imul
arpl
mov
and
rorb
jnp
aad
lcall
xchg
mov
sub
es
outsb
aam
sub
adc
lock
ljmp
adc
and
sbb
ds
popf
je
xor
test
push
mov
or
dec
mov
jo
xchg
mov
jo
xlat
lods
aad
faddl
std
or
test
shll
add
sbb
dec
adc
ja
sub
repz
fstps
std
pop
rolb
mov
lret
fldt
add
popa
jle
idivl
xchg
inc
mov
fimuls
in
cs
aam
fldcw
fcomps
cmp
xchg
xchg
or
mov
inc
out
orl
or
jns
pop
xor
jnp
cwtl
jmp
mov
fdivrl
cmpl
adc
subl
add
cld
out
and
jle
enter
cmp
scas
fisubs
fisubl
aad
clc
push
icebp
lods
mov
imul
imul
sbb
cmp
mov
mov
mov
rclb
jo
xchg
pop
pop
jns
cmpl
rolb
adcl
xor
stos
adc
lcall
movsb
cmp
and
cmp
ja
mov
sbb
rclb
jecxz
das
sub
jo
ds
mov
ror
xor
sub
iret
es
cs
xchg
dec
pop
pop
ret
int
cmp
cwtl
ss
mov
mov
pop
xlat
ss
sti
jle
lret
xchg
lods
add
fistps
pop
insl
mov
and
popl
add
mov
popl
daa
pop
pop
sbb
mov
leave
sub
js
push
lea
scas
or
cld
enter
call
das
push
or
xchg
lea
int3
push
cmp
adc
mov
cmp
cmc
pop
mov
or
in
push
sub
push
gs
cmp
xchg
std
dec
mov
xchg
movsl
sbb
gs
aaa
loopne
dec
pop
xor
in
cmp
xchg
jge
movsl
push
cld
jnp
movsb
icebp
xlat
mov
xchg
orl
aam
nopl
dec
mov
pop
cli
test
and
jne
dec
fsts
shrd
lds
inc
test
mov
out
repnz
call
lret
mov
pop
add
and
inc
mov
ss
push
sub
mov
sub
cmp
adc
inc
pop
out
or
daa
insl
adc
pop
lahf
aaa
inc
test
out
push
fstpt
adc
push
loopne
push
inc
mov
cmp
xor
mov
pusha
or
xor
stc
mov
xor
or
test
ret
push
mov
and
int3
jns
xor
out
cmpsb
popf
flds
inc
push
push
or
and
cld
xchg
int
sbb
inc
mov
inc
out
out
and
fwait
cmp
push
jg
xchg
insl
mov
push
sbb
and
daa
cs
xchg
cld
stos
push
mov
mov
xchg
cmpsl
stos
cmpsl
xchg
orb
orb
std
and
mov
cli
pop
jb
sub
jne
mov
dec
cmpsl
inc
pushf
fisubrs
dec
pop
mov
je
pop
xchg
adc
jbe
daa
sub
ds
pop
sahf
fcomp
lods
ret
inc
fistpl
dec
popf
leave
cs
int3
call
push
outsl
leave
imul
dec
sbb
dec
pop
pop
loope
int3
cltd
data16
cmp
movsb
pop
jp
lods
push
inc
sbb
adc
out
xchg
sahf
or
sbb
push
or
das
gs
fstp
push
movsl
mov
aam
xor
cmpsl
inc
lods
lahf
ds
pop
pop
rol
jl
cmc
imul
or
dec
mov
push
leave
inc
imul
pop
sub
sub
push
add
pushf
jns
les
cwtl
nop
mov
jns
aad
dec
adc
push
jnp
sti
push
dec
test
and
and
sub
push
shll
aam
cld
push
adc
mov
dec
adc
and
jnp
loope
pop
dec
mov
push
ljmp
imul
scas
adc
std
mov
inc
mov
test
cltd
aas
sub
ja
cmp
cmc
sub
out
addr16
aaa
and
fsubrs
push
cmp
sub
les
negl
fidivs
aad
inc
jns
add
dec
sahf
aaa
fwait
adc
setl
dec
gs
xor
out
sti
pop
xchg
ret
cmpsl
inc
jns
out
fiaddl
cli
mov
push
push
shrb
outsb
push
jo
jmp
movsb
into
xchg
mov
push
jo
bound
in
xor
pop
sub
in
nop
cmp
lds
cmp
roll
adc
data16
aam
push
cmpsl
cmpsb
outsb
fisttps
adc
push
repz
inc
adc
cmp
scas
enter
push
sbb
jmp
hlt
mov
jg
addr16
shrl
rcrl
inc
cwtl
fsubrl
pusha
sub
lock
mov
xchg
push
mov
jbe
rcr
mov
pop
fs
jecxz
stc
repnz
rclb
lcall
js
shlb
pop
push
outsb
jnp
xchg
loop
imul
imul
dec
das
stc
sarb
out
mov
pop
adc
and
ljmp
gs
and
fucomip
mov
push
inc
pop
jae
mov
fimull
call
pushf
outsl
mov
cmpsl
mov
jae
mov
aas
mov
mov
inc
lcall
or
and
fs
incb
inc
sub
adc
cmpsb
lcall
xor
pop
lret
jmp
pop
inc
mov
arpl
imul
mov
outsl
push
sbb
inc
sbb
mov
dec
mul
jae
nop
imul
out
cwtl
nop
ret
es
add
mov
jae
xor
dec
lcall
xchg
stos
pop
sbb
pop
out
fisttpll
mov
dec
add
lods
xchg
mov
add
jl
test
cltd
adc
sub
cmp
out
inc
sub
je
out
mov
add
pop
fs
pop
call
xchg
cwtl
mov
aas
into
dec
leave
mov
pop
imul
in
jnp
push
insl
cltd
out
xchg
jp
jl
cld
imul
mov
dec
add
or
push
cs
pushf
lahf
imul
push
sbb
mov
idiv
add
jle
push
popa
sub
add
pop
ret
and
jg
xchg
and
je
bound
int3
ljmp
xchg
cld
outsb
ja
cmpb
pusha
pop
popf
push
pop
fs
push
and
jns
int3
sbb
xchg
int3
jns
out
cltd
push
fs
add
xor
mov
mov
mov
xchg
ss
cwtl
lcall
mov
fxch
imul
jmp
xor
jmp
movsb
xor
in
sbb
in
aam
and
data16
push
fsubrl
movsl
in
pop
call
jb
enter
inc
mov
es
icebp
cmpsb
test
fwait
mov
es
aam
or
dec
add
test
mov
inc
jb
out
movsl
or
popf
dec
inc
mov
aas
sbb
jle
or
aaa
shl
loop
popl
in
lds
mov
mov
adc
or
shrl
int
lcall
lods
call
xorl
push
in
mov
jnp
xor
shr
dec
mov
rolb
outsb
stc
pusha
repnz
dec
jp
cltd
pop
scas
mov
test
pop
hlt
fsubs
inc
das
sub
mov
cmp
xorb
jecxz
in
aad
jecxz
popa
push
xor
inc
ret
add
jo
imull
loopne
mov
roll
mov
xchg
adc
jmp
std
call
cmp
addr16
sub
inc
adc
jno
dec
aam
jp
dec
mov
inc
pop
mov
sbb
shr
fstps
pop
and
adcb
xchg
adc
inc
fisttpll
repnz
jnp
push
sub
call
or
mov
cmpb
jmp
xor
int
sbb
jns
or
cmp
test
sbb
in
cltd
int3
inc
lds
push
stos
insl
movsb
xchg
clc
add
add
lret
and
movsb
lods
add
dec
out
lock
fsin
xor
pcmpgtw
testl
call
adc
jle
imul
sbb
lret
jl
cld
mov
sbb
pop
dec
lock
sub
sbb
insb
adc
shlb
orl
add
jb
hlt
push
data16
subl
push
dec
test
enter
push
jnp
adc
or
mov
aaa
pop
sub
sub
das
cs
fstps
add
mov
arpl
sub
jle
jnp
and
or
and
testb
adc
rep
cld
cmp
xchg
orl
push
fldl
out
inc
fwait
push
mov
adc
mov
mov
ret
pop
push
cmpsl
testb
rorl
ret
pushf
lret
pushf
in
cmp
jo
jl
aad
cmp
jne
mov
test
cmc
ss
xchg
loope
loop
lcall
xchg
lea
inc
xor
xlat
push
je
fmull
rcll
dec
add
insl
in
push
addb
mov
mov
aad
sub
xor
push
jg
mov
leave
ljmp
xchg
cwtl
js
lret
mov
outsl
add
or
cmpsb
jnp
pusha
in
roll
cwtl
inc
jns
insb
dec
push
lcall
outsb
push
scas
mov
fcoml
sbb
jg
cwtl
jge,pt
jbe
or
push
fwait
lcall
mov
idivl
dec
dec
stc
lret
inc
out
bound
or
dec
mov
into
push
pushf
pop
or
fisubl
imul
fwait
lds
aas
xchg
inc
and
imul
adc
sub
cwtl
lods
or
push
cwtl
pushf
repnz
mov
test
mov
arpl
sti
rep
mov
add
adc
push
orb
xchg
sbb
jmp
jmp
aad
cltd
hlt
cmp
loope
jecxz
mov
ljmp
mov
stc
xorb
mov
add
jl
aam
movsb
call
fwait
movsb
or
sub
fidivrl
jbe
pop
xorb
out
adc
xchg
push
jae
test
sbb
sbb
mov
and
dec
jae
cmpsl
mov
xchg
sbb
rcrb
sbb
push
es
mov
cs
jne
dec
es
scas
shrl
rolb
cwtl
sub
lock
imul
fs
xchg
call
mov
xor
xor
mov
loop
jno
xchg
add
sub
pop
mov
inc
dec
movsl
mov
insb
stos
pop
lret
bound
xchg
adc
mov
sub
cmp
mov
lds
inc
xlat
add
and
and
mov
inc
fdivs
xchg
stc
fnstenv
mov
out
pop
sti
lds
testb
out
mov
roll
test
adc
in
cmp
mov
inc
fsubp
and
gs
add
aaa
jbe
test
les
push
test
adc
pop
mov
or
movsl
aad
rolb
dec
punpckhbw
add
xchg
sub
xchg
mov
mov
ret
pop
mov
imul
and
cltd
gs
shrl
xchg
stos
rcrl
sub
or
xchg
inc
xlat
xor
push
jmp
jns
xor
push
cmp
push
sbb
mov
sub
mov
out
nop
loope
xor
mov
dec
and
mov
bound
xor
lahf
mov
push
fnstcw
lea
cli
fdiv
stos
or
cld
adc
enter
sbb
dec
cmpsl
push
outsb
push
sub
jb
and
rorb
arpl
test
movsl
les
loope
bound
mov
clc
xchg
xchg
daa
rolb
loope
jo
stos
add
enter
sub
inc
xorb
repnz
in
push
lods
mov
lret
bndldx
add
lock
movsl
cmp
pop
and
data16
pop
div
dec
xchg
imul
js
cmp
or
add
aaa
cmp
dec
cmpsl
xchg
in
sbb
test
enter
and
mov
iret
and
jl
pop
jp
mov
push
and
insb
xchg
stos
jg
sbb
stos
outsl
push
sbb
enter
ja
adc
movsl
cmp
fwait
call
jmp
dec
jecxz
loopne
mov
pop
das
add
out
jl
scas
inc
xchg
push
jge
test
mov
pop
dec
out
pop
inc
clc
push
jg
dec
popa
jbe
or
rcrl
add
inc
ds
sbb
mov
nop
daa
push
xor
inc
ja
cmp
or
sbb
aam
das
rclb
popf
xchg
bound
xchg
mov
pop
push
hlt
cld
xchg
lret
aaa
mov
sbb
xchg
or
nop
bound
xchg
sbb
xchg
xchg
jno
ret
mov
mov
scas
out
xchg
mov
or
fidivl
xor
mov
lock
into
testl
imul
or
shlb
ss
daa
lret
bound
insb
sbbl
cli
inc
fucomp
scas
lods
inc
and
jb
adc
push
out
ljmp
or
sub
pop
jge
nop
jnp
lea
movsl
sub
inc
jnp
cmp
cmp
in
push
pushf
xor
data16
ds
xchg
out
lret
mov
cmp
inc
out
je
or
sbb
pop
or
sbb
and
sub
fbstp
dec
jmp
jg
push
out
lahf
mov
shrl
dec
loopne
repnz
and
jle
inc
stc
jne
inc
cwtl
add
push
ljmp
mov
fidivs
rcrl
xchg
outsb
int3
xchg
cmp
add
sbb
cmp
and
and
and
xchg
lods
repz
pop
dec
dec
xchg
shlb
addr16
mov
bound
fistpll
fnstsw
xor
sbb
cmp
xchg
daa
fadds
in
or
dec
test
sub
xor
jl
add
xchg
cli
fdivr
loop
inc
imul
jns
ss
and
ljmp
add
adc
jl
cwtl
mov
es
rorb
popf
popf
das
xchg
sub
xor
dec
sbb
inc
dec
inc
add
iret
subl
sub
ss
mov
lock
xchg
data16
repnz
stos
scas
ljmp
cwtl
out
push
enter
sbbl
adcl
jae
rcl
fsts
out
cld
bound
dec
idivl
fnstcw
or
into
gs
and
xchg
ret
or
jnp
and
xchg
pop
inc
fmull
in
add
imull
inc
fisttpll
fsubrs
xchg
add
lret
mov
xor
int
adc
int3
arpl
aam
xchg
dec
jecxz
or
jp
testb
pop
aad
popl
out
xlat
decb
xor
mov
mov
daa
and
mov
push
xchg
pop
cmp
jbe
or
jge
sbbl
repz
cld
repnz
pop
sbb
pusha
neg
inc
push
out
jno
imul
lcall
sub
mov
sub
jo
cmp
mov
ja
add
push
sbb
in
xor
inc
xor
pop
lock
or
or
sub
xor
daa
fbstp
xor
xor
aaa
cbtw
das
push
das
int
pusha
xchg
xchg
sub
jnp
push
lods
dec
es
mov
test
jb
and
repnz
xchg
mov
or
shrl
cmp
movsl
fisttpll
sub
adc
sub
int3
xchg
rolb
jns
mov
xchg
jb
xchg
leave
stc
nop
cli
popa
inc
fcoms
cmp
cwtl
jl
or
cmp
pop
aas
jbe
aas
sti
xchg
scas
push
sbbl
sbb
popa
js
push
pop
lds
les
push
out
pop
push
out
xchg
adcb
xchg
sub
cmc
insb
add
jecxz
les
mov
and
xor
insl
add
inc
inc
xlat
xor
in
inc
jne
cmp
lods
inc
push
dec
mov
movsl
dec
testb
dec
cmp
aas
pop
into
gs
dec
jns
aas
aad
les
push
mov
inc
pop
mov
data16
insl
add
gs
out
pop
out
cmpsb
pop
pushf
xor
dec
orl
cmp
inc
jbe
xor
cmp
lods
fiadds
inc
and
sbb
xchg
retw
pop
cltd
ljmp
add
call
outsl
inc
mov
adc
cmp
lahf
popf
fbstp
enter
push
rcrl
ja
adc
pushf
xor
dec
or
xor
dec
cwtl
xor
movsb
ret
hlt
cmpsl
sub
push
out
out
xchg
push
sbb
insl
mov
movsl
dec
out
mov
mov
sub
lea
xor
nop
addr16
nop
sarl
mov
dec
out
stos
cmp
fsubl
loopne
cmp
mov
push
lcall
mov
movsl
pop
inc
mov
lock
aaa
nop
daa
cmpsl
pushf
add
adc
pop
dec
out
xchg
inc
xlat
mov
jp
cld
dec
jecxz
mov
mov
cmpsb
pop
mov
and
xor
sub
adcb
test
popf
mov
clc
jo
cwtl
das
fidivs
push
arpl
sub
cmp
mov
aad
push
xchg
insb
add
dec
lock
cli
xchg
dec
aas
jae
scas
xchg
movsb
cmp
scas
in
test
adc
inc
pop
jo
push
fwait
loope
int3
xchg
lock
pop
jl
dec
dec
outsl
push
cmp
std
xchg
popf
push
mov
add
lods
clc
and
sbbl
or
cmc
mov
sub
pop
push
adcb
and
jg
lods
js
fdivrp
es
or
mov
and
jg
mov
inc
fcmovb
pop
fbstp
sbb
sub
sbbb
lahf
fidivs
adc
stc
inc
aas
es
lahf
rcrl
fbstp
or
pop
nop
daa
push
and
popf
test
cwtl
das
mov
mov
push
insb
inc
imul
pop
popf
addr16
mov
test
inc
xlat
inc
repz
outsl
push
dec
cmp
push
dec
xlat
fbstp
sahf
adc
sbb
lods
inc
dec
sbb
adc
repz
adc
out
xor
sub
xor
mov
xchg
sub
ret
add
push
aas
pop
shlb
ds
or
mov
inc
and
sub
fidivs
lcall
xchg
sub
xchg
cmpb
repz
test
push
pop
loop
push
mov
loop
out
dec
rclb
pop
sahf
xchg
stc
or
mov
mov
cmpsb
cmp
popf
pop
cmp
loopne
push
aam
lret
sbb
stos
mov
or
lret
push
movsl
sti
mov
mov
push
xor
imul
in
orl
bound
xchg
sub
clc
shrl
rolb
add
mov
ret
pop
rcl
insl
add
in
sbb
pop
dec
in
ljmp
pop
sbb
dec
out
aam
pop
enter
cld
or
jnp
mov
sbb
xlat
push
xor
cltd
imul
push
pusha
les
mull
sbb
adc
add
inc
jnp
ljmp
cmp
jg
scas
sbbl
out
adc
pop
xor
dec
inc
and
je
cli
xchg
add
push
mov
mov
jnp
stos
testb
sub
pushf
xor
add
mov
cmpsl
ds
lods
push
in
fimuls
mov
cmp
jp
push
repnz
shl
xor
sbb
stos
mov
fwait
xor
sarb
cwtl
cmpsb
cmp
es
rolb
mov
cltd
mov
xsha1
cmpsb
iret
or
cmp
ljmp
ret
lret
bound
mov
pop
hlt
loopne
mov
inc
cli
call
divl
mov
fsubp
jb
shlb
mov
sbbl
daa
iret
pop
repnz
mov
mov
popf
xor
mov
lds
mulb
out
xchg
shrl
cmp
arpl
inc
fxch
je
or
jnp
or
push
lcall
xor
pushf
mov
jne
push
or
fldl
and
in
sub
aaa
into
fimuls
pushf
xor
aam
push
enter
inc
or
jp
inc
jns
inc
insl
adc
jo
jo
mov
shll
adcl
mov
xchg
ljmp
dec
out
cmp
stc
mov
movsl
cld
xchg
lods
loopne
and
cmpsl
ds
and
mov
pushf
cmp
into
sbb
jnp
add
jle
les
jb
push
and
pop
mov
outsl
adc
or
inc
add
xor
sub
adc
mov
movsb
into
xlat
sbb
or
lret
lcall
mov
mov
xchg
sub
xor
lods
cmpsl
sbb
lds
out
push
xchg
shlb
push
adc
push
mov
jo
mov
movsb
jmp
in
fidivl
push
push
jmp
rcrb
out
test
push
movsl
mov
mov
aam
sub
sahf
pushf
sub
pop
fucomip
or
push
pop
sahf
jge
mov
fisttpll
adc
push
pop
xor
mov
movsl
rcrb
add
inc
fprem
inc
insb
add
popa
clc
dec
jge
xor
lods
test
fidivrs
mov
dec
adc
mov
mov
clc
mov
or
scas
cmp
ds
jbe
ss
nop
cwtl
pop
icebp
lret
out
in
jp
pop
pop
ja
cmp
xchg
sub
lea
scas
inc
fsubp
shrl
add
xor
repnz
in
test
movsb
pop
lcall
and
out
inc
inc
fidivs
push
rclb
sbb
out
jg
sbb
cmpsb
cmp
popf
xor
ret
pop
mov
jge
loopne
je
sub
xchg
pop
aaa
sti
xchg
imul
mov
sarb
rolb
fnsave
into
push
and
push
das
push
in
pusha
jne
push
cmpsl
xorl
cli
aam
sub
sbb
dec
dec
daa
scas
inc
pop
outsl
shrb
jp
lods
ret
cmc
scas
jmp
pop
out
xchg
sub
pop
or
imul
dec
loopne
mov
imul
clc
cli
xchg
sub
movsb
cmp
stos
inc
dec
jg
aad
jp
fs
loopne
mov
sbbl
mov
sbb
leave
inc
jns
push
stos
test
divl
or
std
sti
xchg
das
cmc
mov
imul
aaa
into
mov
mov
cli
xchg
test
ss
lods
pop
sahf
pop
xor
pop
fs
adc
mov
inc
xlat
add
dec
loope
push
lahf
cmp
inc
fcoms
mov
sbb
sub
test
movsb
shrb
add
scas
ss
testl
stc
jnp
jmp
cld
xor
out
mov
test
out
stc
nop
daa
das
or
aaa
xor
push
jae
arpl
mov
jmp
lahf
sub
mov
bound
inc
fldt
mov
sbb
es
sbb
in
inc
and
lea
popf
mov
out
xchg
xor
mov
loope
sub
mov
sub
jge
sbb
insb
xchg
xchg
mov
add
sbb
mov
or
add
pusha
int3
arpl
int
or
sahf
call
es
ja
pop
scas
subl
lahf
ret
mov
fidivs
mov
lods
daa
loop
pop
adc
pop
mov
dec
and
dec
in
clc
xor
jmp
out
xchg
jmp
sbb
lea
lods
inc
mov
sub
add
pop
aad
mov
decb
das
jge
lahf
push
stc
nop
xchg
mov
mov
int3
add
jnp
das
mov
rorb
lahf
rep
add
call
leave
pusha
mov
jne
stos
inc
sub
jne
pop
mov
push
mov
in
test
and
pop
aas
mov
lds
data16
lcall
imulb
add
mov
and
push
insl
xchg
stos
inc
or
gs
xchg
sub
fucomp
test
adc
shll
lods
inc
imul
push
in
mov
mov
imul
sub
fnstenv
xor
mov
loopne
mov
xor
mov
imul
mov
jg
repz
dec
ds
xor
xchg
imul
fwait
fwait
std
xchg
or
fsubrs
cmp
lock
and
cmp
sarb
stos
insl
loop
mov
jne
inc
cmpsl
loope
or
mov
fsubrs
ljmp
fiaddl
and
xchg
loopne,pn
ss
adc
insl
or
pop
std
mov
sub
out
icebp
sbb
data16
mov
sahf
xor
xchg
mov
xchg
adc
sahf
xor
cwtl
xor
js
sbb
jl
push
out
test
or
and
xchg
repnz
jle
cmp
xor
jbe
out
mov
jbe
shl
repnz
mov
and
jle
jne
dec
ss
mov
enter
iret
inc
mov
sahf
xor
sbb
dec
cmc
mov
rol
push
repz
pop
nop
ljmp
enter
pop
or
pop
jnp
in
test
jp
dec
push
mov
dec
pop
jns
add
ret
cmp
dec
dec
pop
call
push
fcoml
std
scas
inc
out
call
ret
xor
push
sbb
loopne
lret
aam
push
enter
inc
sbb
testb
xchg
fimull
mov
cmp
lahf
lea
ss
push
fistpll
into
mov
pusha
mov
cmpsb
jae
fld
jp
mov
mov
mov
pop
sub
jmp
shrl
pop
sahf
orl
fwait
xor
mov
shrl
sub
jns
cmpsl
insl
add
loopne
adc
add
cmpsl
xor
and
xchg
mov
popa
lds
jecxz
leave
dec
loopne
mov
out
clc
mov
shlb
pop
imulb
in
int
mov
fidivl
scas
outsl
push
loope
imul
cli
adc
dec
xor
inc
jno
push
in
scas
andl
ljmp
add
inc
insb
add
inc
adc
xor
inc
fwait
inc
mov
cmp
dec
out
dec
pop
repz
icebp
mov
dec
hlt
mov
cmp
xor
xor
mov
shlb
inc
in
sbb
sbb
inc
jecxz
js
es
bound
xchg
jns
mov
std
sahf
mov
push
out
cmp
inc
or
xor
cmp
jae
mov
ss
popf
xor
ja
idivl
or
push
cmp
xchg
push
jae
in
push
out
xchg
outsb
jl
pop
ljmp
fs
sub
ja
sti
xchg
push
jo
insb
mov
mov
js
mov
stc
nop
daa
mov
inc
mov
xchg
aad
push
leave
testl
shlb
mov
test
jne
fsubl
rcl
repnz
imul
mov
adc
push
arpl
pop
cmp
dec
out
cs
add
call
inc
fadd
inc
mov
jbe
out
xchg
int
mov
sub
or
fmuls
mov
out
jl
dec
scas
in
dec
fnstsw
mov
fsubp
jecxz
cmp
fldcw
add
add
dec
test
cmpsl
mov
mov
mov
rorl
movsl
cld
dec
repz
xor
int3
arpl
subl
icebp
fdivl
xchg
cmpsl
push
add
out
das
cmpsl
dec
popa
clc
test
in
jns
loopne
out
jbe
fbstp
fs
cld
lea
shll
or
mov
jg
push
push
imul
imul
lods
xor
aas
pusha
xor
mov
mov
add
push
scas
inc
dec
in
mov
ret
pop
cmpsl
hlt
ret
pop
daa
cmpsl
pop
sahf
push
inc
pop
hlt
jb
int3
arpl
call
inc
mov
push
out
loop
rclb
inc
dec
in
andl
ja
cli
xlat
inc
faddp
in
and
push
pop
jbe
xor
xorb
push
imul
pop
call
cmp
or
shll
push
cmp
inc
cmp
xor
push
mov
mov
mov
test
mov
stos
fimuls
pop
sub
mov
popf
js
scas
inc
shll
xchg
icebp
xor
in
push
call
xchg
jmp
sbb
xchg
sub
pop
scas
inc
dec
outsl
daa
mov
repz
stos
inc
jae
mov
shl
xor
arpl
stos
inc
ja
mov
shl
mov
aam
or
jbe
sahf
cmp
or
lods
inc
sahf
jle
repz
mov
fisubl
mov
stos
inc
inc
icebp
cwtl
das
and
cmp
shrl
pop
ja
imul
outsb
add
int3
sti
adc
xorl
dec
movsb
lods
inc
sbb
icebp
lods
cmp
popa
imul
adc
mov
and
in
nop
mov
call
in
dec
addb
push
repnz
adcb
das
xchg
ss
jno
sub
and
rcl
jg
adc
repnz
jecxz
scas
jg
push
repz
adc
push
scas
inc
mov
jb
jge
cmpsl
cmp
fists
movsl
xchg
or
fwait
mov
xchg
cs
pop
int
pusha
inc
sub
lahf
enter
inc
shrl
mov
mov
sti
mov
adc
jno
lods
inc
outsb
dec
out
lret
cmc
push
in
fnstenv
jb
test
andb
out
sahf
nop
sub
ja
sub
jmp
fnop
or
fildll
test
xchg
sub
orb
mov
mov
test
sub
fldenv
xlat
pusha
cli
fsubrs
add
inc
or
leave
pusha
adc
mov
sub
jl
mov
ficompl
cs
xor
add
pop
decb
out
cld
jb
adc
add
mov
mov
push
cmpsl
ja
adc
dec
dec
in
xchg
int
mov
xor
pop
cmc
pop
repnz
fs
jb
sbbl
add
les
pop
mov
push
sub
jmp
imul
dec
pop
mov
push
jmp
sbb
fs
add
test
jl
mov
cmpl
jle
lods
stos
fwait
xor
lock
test
scas
sbb
stos
shl
or
jecxz
aam
inc
cmc
movsb
cmp
popf
in
test
or
arpl
pop
xchg
fwait
out
or
cs
lock
icebp
sti
xchg
sub
int
xor
xchg
sub
xchg
add
fldcw
mov
cli
or
test
mov
jns
push
lahf
fdivl
clc
mov
and
cmpsl
movsl
ret
add
mov
mov
fimull
sbb
pop
repz
xor
adc
adc
or
ds
in
pop
sbb
xchg
sub
loop
cwtl
das
mov
fnstsw
mov
mov
inc
jle
jle
cld
xchg
je
jge
inc
xchg
mov
pop
jecxz
add
cmpsb
cmp
cld
mov
mov
xlat
dec
out
test
fnstenv
jp
or
outsl
aaa
jne
add
xchg
sub
mov
mov
jnp
sbb
mov
shrl
push
sbb
je
dec
fbstp
sbb
pop
inc
fimull
pusha
pop
fwait
repz
pop
fnsave
fsubrs
sbb
cmp
ret
pop
nop
loopne
lds
addr16
and
fs
add
iret
cmpsl
pop
cmc
out
push
xor
dec
mov
mov
enter
push
lods
mov
insl
sub
jo
push
ret
jl
xchg
xlat
fnsave
xor
and
pop
divb
mov
push
dec
push
adc
cmp
sbb
pop
jns
jge
arpl
clc
xor
xchg
cmp
leave
and
cwtl
mov
pop
sub
push
aas
dec
sbb
subps
rorl
jb
fldcw
pop
pusha
jge
scas
mov
mov
test
filds
cmpsb
inc
fistl
or
jle
out
add
int3
xor
mov
fisubs
iret
lea
loop
dec
loop
add
shll
push
adc
jno
loope
sub
sub
dec
pusha
idivl
lcall
pop
nop
daa
xchg
cld
arpl
ljmp
lcall
sub
jbe
mov
ds
stos
lock
cmp
lret
cmp
ds
sar
xchg
ret
xlat
jno
fidivl
sbb
jb
idivb
add
or
cmpb
into
pushf
cmpsl
ds
jb
nop
subl
fbstp
rcrl
stc
add
out
mov
mov
or
push
pop
nop
or
and
arpl
aam
xor
int3
arpl
lds
mov
rcl
cli
xchg
leave
jbe
xor
xor
iret
cmp
fnclex
jns
adc
lret
aam
aas
adc
ss
test
sub
mov
fsubr
or
lock
loop
cmp
sbb
and
dec
loopne
xchg
mov
cmpsb
int
leave
pusha
pushf
pop
hlt
lcall
lcall
mov
push
popa
lods
inc
push
cli
or
addr16
fnsave
and
lds
mov
lea
jns
scas
loope
and
stos
push
add
jbe
push
add
dec
out
ret
jns,pn
push
imul
test
std
xchg
push
jmp
push
jmp
mov
and
mov
xchg
xor
test
inc
push
test
in
push
in
sbb
ret
pop
mov
sub
jnp
sub
dec
loope
mov
pop
add
das
andb
lods
xchg
sub
xchg
and
inc
xchg
cmp
fidivl
pop
cwtl
das
dec
lahf
int3
arpl
pop
mov
popf
addb
arpl
repz
cmpsb
lea
fcomip
mov
mov
dec
jmp
test
xlat
shrl
lcall
cwtl
add
jbe
lock
xchg
int
or
push
popf
push
sub
jo
scas
and
sarl
cmp
lods
push
lret
inc
push
out
movsl
cmp
and
push
ja
shrl
in
and
arpl
add
scas
inc
fsub
scas
icebp
mov
mov
fiadds
mov
test
inc
xor
sbbb
add
shrl
jp
nop
insb
into
adc
lcall
pusha
lods
and
into
xchg
inc
fbstp
mov
mov
bound
xor
push
dec
jecxz
loop
xchg
sub
inc
pop
vcvtdq2ps
mov
lea
sahf
loopne
lock
mov
sahf
xchg
sub
inc
inc
fdivl
xchg
shrb
pop
iret
dec
jle
vmwrite
test
xor
dec
sbbb
icebp
call
or
shlb
hlt
stos
cmp
ljmp
ss
ficomps
iret
out
or
loop
dec
loope
add
je
adc
pop
pop
pop
icebp
xchg
push
lcall
ja
clc
mov
es
jle
inc
leave
inc
fisttpl
movsb
xchg
jbe
jbe
outsl
cltd
mov
mov
sbb
push
inc
lods
lods
inc
pop
ljmp
xor
add
pop
repnz
addr16
popa
dec
in
jp
adc
jno
jne
lcall
outsb
add
xchg
out
mov
mov
mov
or
mov
push
jmp
xchg
imul
pop
aas
push
out
jle
bound
mov
sbb
cmp
loop
clc
xchg
xchg
pop
cmc
les
jl
pop
or
xor
push
ljmp
jno
loopne
insl
adc
nop
daa
xor
hlt
outsb
arpl
scas
and
rcll
jg
sbb
jb
xchg
cmp
rorl
adc
jb
cs
mov
and
jne
push
push
insl
xchg
pop
gs
mov
and
pop
int
cmp
sub
push
adc
or
pop
movsl
xchg
pop
test
in
clc
jecxz
adc
sbb
dec
ss
xor
and
mov
outsb
push
adc
inc
das
cmc
mov
jge
xchg
adcb
mov
fwait
xor
aam
enter
push
cmp
dec
out
pop
fsubrs
js
add
mov
loop
mov
std
add
inc
push
push
xor
xchg
pop
mov
out
idiv
outsl
push
sub
add
and
push
mov
sarl
push
loop
xor
ds
repz
add
adc
adc
or
nop
es
movsl
cli
mulb
mov
mov
mov
xchg
andl
ss
loopne
or
icebp
fdivr
popf
pop
das
push
addb
jmp
adc
negl
and
fnstcw
test
leave
int
fwait
iret
xchg
fidivrs
in
call
or
cmp
sub
mov
dec
loop
xor
pop
add
addr16
push
out
test
test
mov
push
sti
sub
sub
stos
inc
cmpsb
dec
dec
fistpll
enter
data16
rcrb
out
dec
icebp
test
and
pushf
lahf
inc
mov
mov
leave
adc
inc
ljmp
xchg
cmp
jle
jmp
or
fimuls
dec
dec
dec
shrb
rolb
cmc
mov
aam
stos
add
jle
shrb
jb
ds
pop
int
push
cld
shlb
mov
rolb
fisttps
std
sub
pop
push
pop
je
xor
push
scas
shr
xor
fists
call
mov
iret
aam
das
enter
push
mov
test
imul
add
stc
add
inc
xor
push
movb
pop
sahf
add
out
lock
nop
daa
js
sbb
sarb
test
jbe
inc
dec
popa
clc
cmp
adc
add
sub
inc
add
movsl
cmp
enter
insl
xor
les
push
pusha
incl
out
fs
or
add
in
test
inc
ficompl
scas
nop
aaa
pop
js
incl
dec
xor
sahf
jbe
out
aam
pop
leave
rolb
inc
add
loope
movsb
lret
dec
fsubp
fsubs
lods
mov
test
pop
cwtl
and
jne
aam
daa
xor
jns
fadds
xchg
gs
mov
arpl
pop
jo
lret
cmc
cmp
inc
popf
or
lahf
mov
mov
sbb
mov
nop
push
ret
std
or
pop
clc
loop
adc
pop
lret
xor
push
and
sub
aaa
cli
xchg
inc
pop
sub
imul
test
push
sub
cs
sub
cmpl
or
xlat
pop
aam
inc
inc
mov
iret
scas
dec
scas
add
shr
cmp
in
mov
jp
outsb
xchg
test
xchg
sti
jl
into
dec
mov
cmpsl
push
aam
jnp
daa
inc
jmp
into
imul
mov
fwait
loop
cmpsl
outsb
jns
lahf
scas
ret
dec
fcoml
add
shrb
xor
sbb
call
push
repnz
std
out
cmpsb
mov
xor
je
mov
int
cld
mov
cli
and
xor
out
out
sub
outsl
sbb
hlt
xor
rorl
pop
outsb
ja
addb
add
or
out
xor
add
inc
mov
ss
fiadds
jecxz
mov
and
sub
scas
rcll
dec
inc
fdivrl
int3
inc
movsl
into
sbb
mov
cmp
cmp
ja
mov
je
jns
cld
cmc
xchg
dec
cmpsl
popf
push
test
push
cmp
cs
int3
lea
mov
incb
push
sub
mov
lahf
xor
adc
push
adc
cmp
sub
sub
cs
test
popa
out
jnp
mov
outsb
and
loope
mov
cwtl
mov
dec
mov
test
mov
addr16
mov
adc
test
inc
cmc
mov
lods
push
arpl
jb
jbe
add
aam
mov
push
imul
lds
bound
cmpsb
xor
xchg
jb
adc
sub
jge
in
or
xor
xchg
in
mov
jnp
mov
lods
cmp
fwait
or
mov
sub
enter
mov
or
aaa
fsubrl
sub
lcall
sub
sbb
dec
aas
sbb
xor
mov
cmp
and
stc
popa
mov
icebp
fcoml
sbb
xorb
pushf
fldcw
sub
sbbl
arpl
xchg
xchg
dec
leave
test
xorb
xchg
inc
sub
sub
xor
int3
sbb
xchg
inc
scas
sub
cmp
jmp
shlb
out
sti
adcl
jb
shl
insb
out
jmp
sahf
cwtl
lods
ljmp
jg
inc
cmc
enter
sbb
hlt
iret
decl
movsl
mov
mov
push
repz
scas
sbb
ret
sub
bound
int3
mov
test
hlt
sub
jne
cwtl
jle
xor
sbb
xchg
bound
and
xchg
les
and
sbb
push
and
and
scas
mov
adc
add
push
mov
nop
inc
faddl
pop
loopne
cmp
gs
sbb
jl
loop
dec
aaa
mov
mov
cmpsl
xor
addb
lahf
fnstsw
pusha
into
mov
jmp
xor
and
in
or
js
lcall
in
push
gs
push
dec
push
popf
xchg
xor
push
cmp
out
xchg
pop
test
rclb
xlat
stos
test
sbb
mov
rorl
jbe
add
xor
mov
mov
xchg
push
and
subb
mov
jns
mov
sbb
xor
xor
shll
aas
movsl
xchg
out
cmp
lock
jg
mov
mov
xchg
sub
cmpsl
pusha
stc
pop
dec
dec
sub
test
fbld
std
add
ficoml
cmp
ret
mov
and
sti
and
dec
lahf
mov
sub
inc
mov
pop
fst
or
jnp
push
aad
repnz
pop
or
cmc
push
and
cmp
test
jecxz
xor
pop
sub
cmpsb
mov
adc
loop
lods
mov
dec
out
jb
dec
fs
xchg
popf
inc
and
dec
push
fistl
cmp
jle
jmp
fbstp
cmpsb
mov
fmull
inc
or
xchg
ds
xchg
mov
fimull
fisubrl
dec
bound
cld
jge
pop
mov
andb
xor
push
jp
mov
xor
jo
in
add
mov
fiaddl
fcmovnb
mov
sub
loop
or
mov
push
cmpsb
pop
lahf
jp
cmp
lds
cmp
sub
pop
dec
test
adc
fst
movsb
cmpsb
lahf
xor
leave
jo
test
ds
shll
pushf
fsts
jmp
lcall
out
add
sbb
mov
mov
daa
cmpsl
sbb
sbb
jmp
sbb
repnz
js
jge
lds
inc
lcall
push
or
cmp
lahf
das
mov
adc
push
scas
inc
out
cmp
divl
ficomps
dec
jb
cltd
mov
push
movaps
iret
ja
and
into
nop
jae
mov
imul
xchg
outsl
lahf
lahf
push
sbb
cmpsb
pop
jg
stos
in
repnz
cld
pop
sarb
aas
imul
aam
and
mov
adc
scas
lret
aaa
testl
fiadds
xchg
jecxz
pop
cmpb
aaa
rcrb
mov
sti
pop
mov
jg
fisubs
adc
out
sahf
mov
inc
scas
mov
inc
mov
sahf
shlb
imul
jmp
adc
enter
add
inc
add
sarb
pop
mov
sbbb
mov
addr16
jg
pusha
loopne
js
rcrb
pusha
shlb
jg
adc
add
sub
add
pop
sbb
and
inc
inc
add
pop
inc
xor
loop
push
dec
adc
jbe
fnstenv
enter
xchg
ja
push
out
push
lahf
and
ret
adc
mov
sub
ja
addr16
push
jae
fimull
xchg
sub
and
xchg
cmp
xor
jne
icebp
inc
fucomip
sbb
dec
and
push
stos
sti
pop
or
add
repnz
pop
inc
add
push
imul
movsl
aas
mov
movsl
je
dec
mov
inc
jl
inc
add
mov
and
js
pop
jbe
sbb
adc
arpl
sbb
inc
sbb
pop
popa
jno
test
mov
pop
fcoml
xor
cmp
dec
sbb
inc
call
jp
arpl
jle
push
push
pop
xor
pop
inc
js
sarl
jne
cwtl
fwait
jecxz
add
ret
in
inc
fcmovnbe
push
mov
les
mov
push
mov
jecxz
shrl
mov
hlt
jg
pop
repz
jnp
xchg
add
xor
push
cwtl
das
mov
mov
dec
fistpl
insl
cld
aam
cs
hlt
mov
mov
jle
aam
xchg
sub
negb
jl
mov
imul
testb
inc
adc
jae
sub
leave
lds
push
out
dec
inc
mov
or
xchg
rcrl
xchg
sub
call
mov
inc
cmp
xchg
insl
shlb
mov
mov
mov
mov
ret
cmp
hlt
fstpt
aad
push
pop
lock
sub
ja
leave
jg
xchg
mov
jl
fisubrl
mov
ret
repz
mov
adcb
inc
mov
ret
xchg
lds
lret
mov
std
rcr
repz
shrl
adc
mov
out
xchg
jge
xchg
mov
add
xchg
rorb
icebp
dec
mov
adcl
aam
rcr
rcl
cmc
inc
aam
xor
popa
inc
pop
bnd
jbe
mov
jns
lret
aad
add
or
scas
test
stos
fnop
cmpsl
ds
xor
sub
lds
push
out
ja
jp
lahf
out
test
lret
cld
icebp
or
and
and
je
aas
mov
ret
pop
hlt
hlt
out
cld
sbb
cld
adc
mov
lcall
pop
mov
mov
cmp
scas
cmpsb
push
out
ficompl
push
rcrl
jle
pop
sahf
dec
iret
je
lods
pop
icebp
movsb
in
add
add
pop
mov
or
inc
int
or
std
xchg
pop
loope
xchg
sbb
push
mov
out
dec
fdivl
or
popa
mov
repnz
adc
xchg
daa
lds
out
xchg
jns
jecxz
or
movsl
cmp
push
std
pop
sub
mov
mov
push
scas
dec
loope
jno
mov
lds
xchg
xchg
in
dec
cmpsl
movsl
cmp
push
cltd
fwait
cli
ret
pop
sub
and
jg
aas
inc
mov
pop
hlt
xchg
repz
adc
inc
ds
pop
lahf
cmp
popf
xor
jmp
mov
out
insl
mov
cmpl
jecxz
and
jno
stos
aas
imul
cwtl
xor
fcmovu
je
aaa
mov
nop
pop
test
push
jle
mov
fucomi
adcb
aaa
int3
add
or
loop
mov
sarb
dec
fisttps
mov
sbb
pusha
cmp
pop
jno
test
mov
adc
and
mov
fildl
popf
call
push
out
and
mov
outsb
jle
sahf
jo
xchg
negl
scas
inc
dec
icebp
or
imul
add
add
and
imul
gs
fcompl
and
arpl
jmp
loopne
aam
cmpsl
es
xor
fnstcw
lret
pop
mov
cli
xchg
jp
jecxz
adc
insl
add
pop
fnstenv
and
and
cltd
xor
fbstp
pop
fsubrs
test
gs
loope
or
cmp
cmp
pusha
mov
push
mov
lret
dec
outsl
xchg
push
in
lock
jmp
ficoml
xchg
jb
jbe
or
xchg
mov
testl
repnz
test
stos
sbb
aam
fdivl
cmc
xchg
int
sarb
ficoms
ud0
out
js
mov
or
jg
push
fsts
addr16
mov
mov
stos
cmp
lods
popa
mov
dec
mov
ret
xchg
pop
ret
pop
aad
adc
int3
jge
das
inc
pop
add
mov
pop
jecxz
xchg
sub
add
pop
push
rcl
cmp
inc
test
push
xor
mov
jmp
lds
fisubrl
ret
inc
adc
aas
scas
jmp
das
nop
sub
icebp
std
mov
xor
lods
test
sub
mov
aam
or
test
pop
mov
loop
adc
insb
or
call
sub
sahf
scas
dec
xor
jnp
and
into
and
xchg
adc
out
ret
mov
mov
ret
les
test
cwtl
or
xorl
add
rolb
sbb
dec
and
fwait
mov
cmp
or
xchg
jae
pop
icebp
xchg
xchg
dec
jecxz
mov
aad
adc
xchg
movsl
xor
push
push
ljmp
and
ret
push
jb
jno
data16
mov
ficoms
test
xor
leave
cltd
loop
sbb
mov
out
xchg
xlat
jns
xlat
sahf
adc
leave
dec
dec
out
ljmp
xor
and
jecxz
gs
outsb
add
push
mov
ret
shrl
cld
gs
mov
loopne
mov
ret
lds
pop
repnz
mov
or
fdivp
mov
jae
test
adc
out
sbb
xchg
sub
mov
xchg
sub
nop
sti
sbb
loop
aaa
into
int
cmp
sahf
jp
insb
insl
xchg
mov
cmc
mov
dec
mov
es
shrl
lea
inc
js
pop
out
xor
push
or
xchg
mov
fidivrl
nop
daa
pushf
sti
cwtl
das
mov
fs
popf
xor
out
xchg
sub
popf
fsubrs
sti
int3
arpl
dec
xchg
mov
int
mov
mov
adc
enter
add
xor
pop
js
xchg
test
sti
xchg
lret
leave
movsl
cmp
in
aaa
into
add
insl
xchg
and
push
mov
add
adcb
jg
icebp
ss
and
inc
jns
in
sbb
pop
add
or
jb
ljmp
sar
call
push
fbstp
imul
jmp
insb
pushf
cmp
ja
lcallw
adc
cmp
cmpsl
cmp
js
pop
sarb
mov
inc
dec
mov
jno
cmovno
xor
mov
cmp
imul
ds
nop
daa
decb
push
pop
in
cmpl
jne
lahf
jp
shll
xor
adc
cmp
sbb
adcl
pushl
mov
mov
pushl
iret
cwtl
or
je
mov
je
adc
je
inc
xor
mov
sbb
mov
ficomps
sbb
fbstp
cmp
lcall
hlt
cmpsb
cmp
inc
jmp
sub
inc
into
push
push
fnstsw
and
jbe
lret
xchg
add
jle
stos
inc
jb
adc
testb
addb
ret
shrl
mov
push
add
sbbl
pop
mov
sub
inc
cmp
js
cld
xchg
sahf
cltd
pop
mov
mov
or
subb
pop
xchg
xor
push
adc
das
xchg
mov
enter
fidivrl
add
daa
rcrb
or
and
push
sbb
inc
mov
popf
bound
nop
daa
inc
sub
pop
imul
imul
inc
scas
inc
jb
xchg
xchg
and
es
cltd
mov
cli
iret
imulb
loopne
adc
hlt
aaa
out
jg
mov
setg
cwtl
sarl
aad
fdivl
testb
rcrl
add
loopne
xchg
imul
xor
push
lds
xchg
push
loop
mov
aam
leave
in
ret
fisttpll
mov
adc
pop
xor
imul
push
in
dec
cmpb
mov
fsubrs
shlb
mov
lret
adc
jmp
jl
adc
gs
mov
cmc
scas
les
push
cli
xchg
jae
sahf
xor
push
in
inc
fcmovu
xchg
rolb
sarb
lds
fs
imul
and
xlat
inc
dec
loope
aam
repz
or
push
and
stos
sub
pop
mov
pop
mov
out
adc
mov
jmp
jno
add
sub
sbb
xor
sub
mov
mov
loopne
adc
subb
icebp
push
inc
xlat
inc
mov
jmp
xor
std
pusha
jne
pop
imul
sbb
mov
clc
hlt
xchg
mov
jge,pn
dec
jno
les
cs
pop
pusha
fs
jno
aaa
mov
cmpsl
adc
test
pop
repz
and
inc
ss
mull
inc
xor
xor
xlat
call
cli
push
mov
or
cmp
pop
nop
push
mov
in
cmp
add
adc
stos
or
aad
mov
jmp
lods
cmp
out
cmp
out
test
pop
imul
fdivr
stos
inc
lock
jnp
fwait
jno
or
fdivl
das
xor
sahf
adc
xorb
pop
mov
les
loopne
cld
stos
inc
ret
scas
xchg
mov
int3
stc
ss
xchg
sub
movsb
test
inc
inc
ss
and
pop
jnp
xor
mov
lds
dec
jp
dec
jecxz
fwait
lods
inc
sbb
mov
adc
fdivl
jnp
nop
inc
push
movsb
cmp
test
xchg
xchg
jae
mov
mov
cmp
dec
lahf
ret
push
orb
dec
arpl
sahf
test
insb
pop
sar
fnstsw
xchg
sub
shll
fistl
in
test
scas
js
cld
scas
sub
cld
sbb
aas
sahf
jo
add
add
xchg
bound
xlat
push
addl
dec
xor
inc
fdivrs
mov
sbb
pop
inc
fisubrl
stc
nop
lods
mov
inc
xor
jno
arpl
lds
montmul
cmpsb
les
mov
mov
pop
scas
xlat
rclb
add
xor
mov
jmp
sbb
ds
aaa
into
popa
pop
lds
mov
adc
push
call
subb
and
add
test
insl
mov
ret
fsqrt
arpl
sub
cmpsb
cmp
insb
jmp
insb
testl
and
cmp
or
sahf
dec
sbb
test
lret
fists
fnstenv
add
mov
out
inc
pop
xchg
cs
cmc
sub
es
dec
or
ret
pop
ja
sub
pop
lret
jb
jmp
lcall
pop
sahf
outsb
pushw
mov
push
loop
jmp
mov
lret
int3
ficoms
or
pop
pop
imul
xchg
jle
movsb
pop
icebp
aad
add
hlt
idiv
push
or
out
dec
add
dec
mov
jg
ret
in
popa
clc
push
ja
es
xlat
add
pusha
mov
clc
scas
ja
xchg
adc
loopne
lock
scas
leave
mov
inc
mov
lret
fidivs
ret
push
in
adc
and
mov
dec
stc
lret
cld
aad
jo
fdivrp
jb
or
outsb
cmp
and
insl
inc
gs
leave
pushf
cwtl
pop
scas
leave
mov
adcb
inc
aad
mov
inc
mov
cld
mov
mov
dec
push
dec
out
push
fiaddl
popa
xchg
sbb
and
call
push
push
mov
inc
clc
xor
xchg
cmpsb
jne
and
or
jle
jns
jge
xchg
test
xchg
test
mov
fcoms
aas
lahf
cmp
shlb
data16
and
ljmp
clc
testb
popf
aaa
pop
push
je
add
jno
push
mov
and
rorl
ds
xor
sbb
ret
hlt
dec
sub
xchg
lea
ret
jns
sub
or
xor
sbb
mov
ret
es
call
mov
fs
pop
pop
add
sarb
sbb
sub
leave
sbb
dec
mov
mov
push
sahf
bound
insb
add
and
xchg
gs
clc
adc
sbb
adc
or
sub
pop
xor
xor
lods
xor
dec
pop
aam
les
hlt
shrb
dec
call
pop
loopne
hlt
push
arpl
cwtl
jmp
cmp
mov
dec
pop
add
push
pop
pop
or
mov
pop
cmpb
inc
lods
cmc
rorl
cmp
aam
push
inc
fildl
lds
and
inc
inc
cmp
dec
js
cmp
dec
push
sahf
mov
sub
lea
cltd
mov
inc
fimull
addr16
sbb
push
mov
imul
xchg
mov
dec
pop
insl
popa
push
inc
mov
pop
add
mov
inc
pop
insl
nop
xchg
rcrb
cltd
dec
loope
fstl
pop
in
test
repz
in
push
popf
fimull
ret
sub
pop
cmp
mov
add
fadds
lock
mov
push
je
inc
fsubrp
clc
stos
out
xor
mov
push
push
and
arpl
lea
ds
pop
xchg
and
pop
push
mov
sbb
xchg
sti
xchg
leave
and
test
jmp
inc
outsl
ss
mov
hlt
jbe
dec
add
pushf
mov
xchg
test
cltd
pop
movsl
loopne
xchg
and
mov
std
add
call
push
pop
xchg
sub
pushf
pop
lods
cpuid
jmp
mov
ss
std
lret
cmp
xchg
sar
push
lahf
sbb
lret
repz
pop
sar
pushf
add
mov
add
mov
push
cmp
mov
test
mov
ficoml
pop
ret
pop
int
push
pop
fiaddl
dec
dec
xchg
inc
and
mov
jne
jne
and
mov
fsubrl
mov
movsb
pop
cmp
adc
xor
fwait
insl
sbb
mov
imul
testb
stos
out
aad
or
insb
adc
sbb
addl
jp
cmp
sbb
mov
cmpsl
mov
ret
rolb
sub
sbbl
inc
icebp
sahf
ja
mov
lds
imull
mov
pop
sub
pop
push
and
inc
faddl
aas
add
sub
sarb
sbb
movd
jmp
fmull
lods
arpl
sbbl
xor
js
inc
movsl
ss
int
loopne
mov
xchg
test
jl
lea
mov
adc
cmp
cmp
add
pop
push
push
les
dec
xor
lahf
rol
ds
stos
add
xor
stc
cmc
call
out
lock
mov
in
out
mov
sub
push
dec
pop
or
mov
aas
pop
and
fstps
push
js
subb
xlat
dec
jnp
fistpll
adc
mov
dec
jge
in
aas
inc
jmp
pop
imul
pushf
jg
xor
or
int3
sub
lea
aaa
inc
mov
xchg
mov
xor
ret
icebp
pop
test
jbe
ror
or
xor
jl
jge
dec
add
pop
jb
test
xor
push
mov
sbb
pop
dec
call
cs
dec
sub
sub
fcompl
or
sub
lcall
icebp
push
fnstsw
pop
fnstenv
dec
xlat
jns
mov
mov
mov
sbb
mov
push
cmp
mov
xor
out
xchg
jmp
out
std
push
scas
rolb
xchg
adc
int
push
dec
ficoms
cmp
enter
repnz
or
aas
ljmp
mov
mov
daa
es
sub
jbe
out
shll
add
fistpll
repz
xchg
pop
mov
mov
pop
mov
jecxz
pop
adc
js
dec
test
stc
push
lret
nop
mov
ret
jb
ljmp
inc
pop
popa
cmc
xchg
cmpl
fldcw
imul
cmp
mov
sub
mov
scas
inc
mov
movsb
pushf
sbb
js
mov
shr
sub
lea
cmc
and
fistpll
fbld
xor
in
pop
push
mov
xor
rcrb
mov
and
out
adc
fwait
or
int
push
repnz
mov
add
mov
lods
fsubs
jno
out
mov
in
cwtl
mov
sbb
sbb
pop
cmp
inc
lret
rorb
sub
xchg
sub
add
push
add
inc
clc
sub
xchg
inc
mov
mov
dec
ja
and
mov
jge
shll
repz
fwait
daa
add
mov
jmp
mov
inc
movsb
sbb
imul
pop
getsec
out
ljmp
lds
xor
sub
adc
fld1
int
jbe
dec
outsl
sbb
fsubs
mov
inc
inc
xchg
scas
mov
fs
stos
loop
or
scas
cli
out
mov
xchg
stos
adc
xchg
ret
cmpsl
rclb
stos
repz
jmp
test
movsl
dec
jmp
cmpxchg
mov
xor
stos
lods
push
mov
add
repnz
xchg
and
mov
or
insb
cmp
andl
call
aad
in
stc
inc
pop
imul
ja
cli
mov
shl
sbb
cmp
pusha
sub
outsb
cmp
jp
sbb
in
icebp
arpl
jle
mov
sub
pop
pop
push
mov
test
pop
loope
lret
adc
js
and
repz
mov
pusha
add
sub
mov
mov
mov
pop
cmc
or
push
stos
inc
in
nop
sarl
ret
scas
dec
inc
into
pusha
add
pushf
mov
mov
sahf
ret
out
inc
jge
jno
stos
cld
mov
push
jae
mov
push
out
mov
sub
sahf
ror
bound
das
pusha
popa
mov
adc
minps
je
sbb
cmp
addl
adc
mov
mov
das
scas
cvtps2pd
addr16
or
sahf
xchg
sbb
pop
loopne
pop
and
shlb
pop
xchg
sub
jmpw
sbb
cmp
mov
jp
sub
jnp
in
popa
and
inc
inc
dec
fucomp
pop
sbb
popf
push
xchg
pop
imul
push
cs
mov
cmpsb
push
cmp
fwait
cmp
inc
aad
add
cltd
jl
bound
cmp
jge
xchg
pop
stc
and
xchg
cmp
aas
js
aaa
in
xor
cmp
std
or
cmp
or
xchg
and
pop
cmp
inc
adc
fxch
scas
jmp
fidivl
scas
pop
sarb
push
xlat
cmp
push
mov
lret
mov
ds
leave
and
adc
bound
sbb
push
mov
adc
inc
and
mov
cmp
sub
jae
jg
pop
mov
mov
adc
jmp
das
js
push
scas
inc
test
add
push
inc
fimull
adc
lret
dec
test
jg
sub
cld
push
mov
xchg
lret
or
pop
sahf
ret
fldl
repnz
xchg
and
pop
xlat
or
subb
sarb
dec
adcb
stc
sub
loope
adc
add
add
repz
xchg
push
cmpsb
push
popf
xlat
cmp
sub
iret
aaa
mov
dec
incb
test
daa
nop
mov
rclb
int
xchg
mov
shrl
lods
push
in
pushf
inc
rcl
dec
mov
cli
and
xor
cmp
shrl
adc
cmpl
call
cmp
pop
shll
jne
leave
iret
in
push
icebp
push
add
sub
dec
push
popf
into
gs
pop
in
ja
es
push
jle
rolb
movsb
dec
pop
pop
outsb
shl
push
sbb
cmc
leave
push
loop
mov
je
imul
fidivs
in
stos
inc
jecxz
lods
adc
xor
xor
fcomps
pop
shll
sub
dec
das
push
lods
pusha
imul
das
jnp
andb
lea
jno
and
rcrl
addr16
mov
jns
push
sub
test
jnp
shrb
cltd
jp
pop
mov
mov
sub
mov
icebp
sbb
jmp
inc
mov
push
flds
adc
add
sub
cld
and
mov
fnstcw
dec
xchg
movsb
cmp
sub
cli
jl
clc
push
and
push
clc
andl
loop
sar
and
mov
in
ret
add
xor
insb
stc
rorl
fistpl
jb
stos
pop
mov
fstl
sti
xlat
xor
mov
and
leave
mov
addr16
jmp
int
lret
mov
xchg
mov
out
fs
sub
add
adc
and
cwtl
fnstcw
pop
sbb
inc
or
or
in
xor
ljmp
mov
nop
cld
sbb
pop
mov
orl
out
inc
jae
xor
fstps
mov
test
xor
mov
lret
pop
or
test
icebp
dec
mov
test
mov
mov
pusha
jnp
fbstp
dec
in
jne
hlt
mov
cld
gs
or
outsb
mov
test
lcall
lock
push
enter
xchg
jo,pn
dec
sub
leave
push
cmp
int
and
mov
gs
icebp
cmpsb
push
jp
gs
jecxz
push
js
jle
sar
dec
arpl
sahf
pop
xorl
imul
subl
sti
in
or
les
pop
and
popl
mov
mov
sub
adc
adc
push
and
insl
pop
add
mov
pop
lret
cmp
pop
inc
push
mov
push
push
mov
enter
add
jg
xchg
mov
fcmovbe
js
push
mov
jb
fwait
icebp
push
clc
or
cltd
je
test
imul
xchg
cmpsb
and
mov
jle
xor
mov
aas
fdivrs
rorb
mov
dec
pop
dec
addb
mov
adc
cmp
mov
sbb
cli
pop
addl
adc
mov
fbstp
push
nop
dec
mov
jnp
cmp
repz
mov
out
das
stos
in
mov
push
int
mov
sbb
jae
rcrl
jp
pop
xchg
insl
pop
push
and
jbe
xchg
lahf
movsl
dec
sbb
mov
fs
fisttpl
and
jo
mov
dec
insl
add
out
stc
stos
inc
sub
mov
mov
mov
aam
and
lahf
xchg
adc
xchg
addl
addr16
cli
jl
or
sahf
xor
pop
in
ja
jge
movsb
arpl
shll
push
push
mov
sti
sbb
mov
pop
adc
add
sbb
inc
push
mov
into
ret
mov
cmpsl
test
xchg
dec
xchg
sub
test
ja
out
jo
rcll
push
les
adc
push
lret
outsb
and
ret
pop
icebp
mov
imul
pop
pusha
rcl
mov
mov
mov
out
jno
push
call
lock
fldlg2
mov
nopl
daa
das
nop
xor
inc
and
sbb
jnp
push
aad
cmp
sub
adc
imulb
sbb
dec
pop
jmp
data16
shl
jns
mov
add
in
xchg
inc
xlat
lds
pop
mov
mov
push
pushf
or
in
push
bound
push
arpl
aaa
test
sar
cmp
int3
mov
fsts
or
cli
mov
ret
pusha
mov
dec
mov
lods
inc
xor
xor
in
inc
sub
fidivl
sub
and
stos
sti
outsl
in
je
int3
stos
fists
sub
push
int
push
mov
hlt
sahf
sbb
jae
push
sbb
scas
xchg
jg
movsl
inc
fs
out
xchg
jb
and
rclb
out
push
and
mov
mov
xchg
sbb
test
pop
in
mov
lods
inc
test
cs
dec
add
aas
icebp
mov
fnsave
add
inc
fiadds
repz
sub
into
ds
int3
cld
ljmp
aad
repz
ss
dec
cwtl
push
into
fwait
mov
or
aas
lea
pusha
dec
lahf
addr16
gs
mov
or
scas
rcl
imul
jb
sbb
adc
jecxz
fldenv
push
jg
stc
inc
call
popa
or
loop
jo
push
mov
or
pop
stc
push
stos
in
subb
cmc
sub
imulb
int
push
rclb
add
fidivs
mov
mov
cwtl
bound
xchg
push
cmp
mov
loop
icebp
cmp
sarb
push
clc
test
mov
xchg
loope
ret
mov
test
bound
int
or
pusha
adc
jns
sub
mov
rclb
jecxz
sub
pop
push
lods
mov
popa
stos
test
out
push
idivl
fsts
cld
out
loopne
inc
mov
and
or
lods
inc
xchg
nop
adc
es
jo
push
lea
inc
bnd
loop
push
ljmp
xsha1
cmpsb
dec
mov
mov
movsl
cmp
jb
adc
insl
aas
stos
pop
sbb
mov
movb
jge
aam
pop
cmc
test
lods
inc
inc
movsl
jl
xlat
lret
clc
lcall
add
jecxz
hlt
mov
add
out
scas
xchg
cmp
add
pop
repnz
pop
cmc
jmp
or
cmp
pop
xchg
cs
mov
xchg
xchg
andl
in
and
push
mov
bound
mov
loop
sarb
inc
mov
xchg
fstps
loope
pop
or
sub
add
shll
cmp
enter
addr16
cli
scas
add
std
mov
sbb
or
push
mov
xor
mov
lods
adc
cltd
in
add
mov
lret
sbb
mov
or
xchg
sti
sub
jno
cmp
lahf
push
les
sbb
outsb
pushf
xor
xchg
scas
divl
ret
outsb
add
out
cmc
aaa
or
aaa
xor
pushf
clc
sbb
push
mov
mov
cmc
or
popf
mov
outsl
clc
sbb
testl
sub
cmpsb
test
lret
sti
jns
push
insb
adc
addb
ds
or
lcall
subl
and
cmp
jp
push
push
mov
sbb
mov
add
mov
std
xchg
mov
cmpsl
ds
push
xchg
cs
sbb
mov
add
gs
dec
jecxz
xlat
add
dec
jge
xchg
fs
lea
popf
sbb
mov
test
xchg
jns
adc
rolb
jecxz
sbb
addb
jns
xchg
shl
xchg
cmpsl
ds
mov
icebp
sbb
aaa
lods
shlb
mov
aam
pusha
test
ljmp
call
or
int
pop
mov
sbb
enter
xor
outsl
ds
lods
and
sub
scas
hlt
mov
movsl
test
cmpsl
or
test
lret
or
lcall
jne
inc
or
adc
sbb
mov
and
arpl
mov
pushf
repz
jle
mov
ds
dec
and
adcb
loopne
cmpsb
aam
xlat
cwtl
jmp
fwait
cwtl
mov
jae
pusha
idiv
iret
gs
fnstsw
outsb
mov
leave
lock
pop
icebp
or
leave
pusha
xor
divps
inc
test
sub
fcom
mov
add
jmp
sub
shrb
dec
or
stos
lahf
daa
mov
std
icebp
inc
fsubl
pop
sub
cli
je
dec
loop
xchg
sbbl
add
es
scas
push
mov
adcb
cmpsb
les
adc
insb
sub
inc
out
leave
pop
dec
decb
xor
push
pop
mov
jnp
addr16
pop
adc
jnp
imul
cmp
test
sbb
jge
pop
cmp
cli
jne
lds
fwait
rcrl
push
mov
push
fistpll
and
cmp
mov
fdivs
lea
pop
movsl
outsl
stos
sahf
das
lahf
mov
dec
pop
dec
push
mov
enter
inc
out
dec
shll
lret
arpl
add
rorb
dec
jl
ficomps
out
sbb
and
sarl
dec
rcll
xchg
dec
pop
cli
dec
iret
imul
push
push
rcll
push
inc
push
jne
jne
dec
cli
cltd
and
push
out
out
xchg
scas
lret
sahf
pop
or
les
add
ja
je
insl
incb
mov
mov
cmp
das
dec
jno
out
lret
insb
int3
mov
sbb
aam
cmp
mov
lods
cmp
push
stc
cmpsl
mov
roll
lea
mov
xor
cmp
or
leave
mov
adc
jae
add
in
mov
jno
sbb
jo
cmc
cmp
xorl
pop
outsl
pop
mov
inc
subb
fidivs
xchg
daa
xor
mov
adc
inc
lahf
xor
loope
sub
pop
sti
push
push
cmp
lds
rcr
pop
pop
cmp
mov
cmp
repnz
bound
sbb
shrl
mov
push
outsb
les
loope
pop
lock
adc
mov
xor
or
test
arpl
xchg
mov
arpl
push
ljmp
or
mov
fstps
or
sbb
cmpsb
dec
fldenv
das
das
outsb
lods
es
nop
inc
test
adc
add
rclb
or
mov
sbb
outsb
jnp
push
movsl
imul
sahf
repnz
mov
jmp
inc
push
sarl
jle
out
pusha
inc
adc
dec
mov
ss
push
inc
inc
push
add
loop
push
jp
xor
xchg
mov
xchg
sub
sbb
mov
mov
and
loop
adc
into
sti
add
jb
xor
inc
leave
or
out
lcall
dec
add
das
jg
mov
out
mov
sbb
fstps
idivl
test
das
cmp
jbe
aas
and
gs
push
bound
test
and
lock
sub
inc
ret
leave
fs
movsl
in
sbb
dec
shll
loopne
pop
mov
in
mov
push
imul
cmp
rorb
or
push
xchg
xchg
dec
xchg
xor
xchg
in
and
sub
int3
fidivs
fbld
mov
dec
push
ret
fidivs
and
stos
repz
call
sbb
xchg
bound
push
xor
popl
shl
cld
addr16
fnstenv
and
mov
or
jo
cmp
stc
int3
daa
leave
int
push
add
mov
add
push
test
sarl
jg
testl
mov
mov
cmp
mov
sbb
loope
pop
test
mov
movsl
inc
lods
push
sub
push
stc
inc
loope
inc
lret
lret
lock
nop
jnp
push
mov
sub
cs
mov
or
daa
sub
mov
xchg
cmp
loope
mov
cmpl
nop
rep
push
sbb
xchg
inc
nop
mov
test
hlt
push
popf
mov
cwtl
cmp
xchg
add
jp
adcl
popa
and
stos
ficoml
fldcw
inc
dec
shlb
mov
pushf
pop
ljmp
pop
xchg
add
mov
mov
gs
shrb
es
jne
push
push
in
push
and
pop
incb
add
or
aaa
inc
fld
jecxz
pop
mov
cmc
fdivl
fwait
xchg
in
out
push
push
arpl
inc
mov
dec
in
mov
xchg
mov
sbb
aad
lock
loope
ljmp
out
dec
cmpsb
cmp
lea
dec
pop
pop
jno
stos
mov
xor
mov
mov
xlat
fwait
xchg
aaa
fcom
xchg
pop
mov
test
add
rcr
and
stc
jle,pt
mov
rol
dec
es
cli
mov
ja
fsubrs
hlt
pop
cmpsl
dec
adc
mov
mov
hlt
fcoml
push
mov
inc
imul
and
test
mov
xchg
ja
movsl
enter
notb
fwait
push
add
vminps
adc
push
sub
scas
lret
lret
rcrb
push
fnstsw
xor
and
fs
lret
push
dec
pop
xor
int3
out
aas
pop
cmp
add
fsubrs
and
cmp
call
mov
cmpsb
lret
daa
lret
clc
aam
loope
sbb
sahf
test
popa
dec
xchg
dec
push
stc
adc
cmpsb
testb
jp
loop
lods
dec
and
cmp
cmp
ds
sbb
xor
aas
into
insb
loopne
mov
movsl
jg
inc
jnp
pusha
xchg
push
fcomps
mov
out
mov
sub
push
mov
mov
mov
inc
xchg
fucomp
pusha
cmp
inc
dec
fcomip
jae
mov
xchg
into
dec
adcb
cmpl
das
push
jo
xor
mov
sub
push
push
in
inc
loope
lret
je
std
cmpl
mov
pop
adc
stc
addr16
nop
rol
outsb
xchg
jno
cmp
dec
mov
jns
das
pusha
xchg
mov
pop
xor
xlat
sbb
xchg
loope
pop
and
fisttpll
xchg
pop
test
xchg
ljmp
xor
mulb
lock
inc
movsl
aam
pop
je
jmp
in
insl
shrb
shlb
add
add
es
call
test
mov
and
iret
or
sub
les
faddl
mov
cltd
xlat
jbe
fnsetpm(287
cmp
cmc
movsl
inc
out
ret
repnz
scas
sub
lods
mov
or
push
lcall
sub
mov
shrb
add
inc
xchg
aam
js
sahf
ficompl
xor
xchg
aaa
xlat
fwait
jb
lock
and
xchg
pop
or
mov
push
pop
or
inc
lret
iret
sub
test
dec
mov
mov
fists
dec
in
dec
cld
xchg
jle
adc
dec
jecxz
ss
shrb
call
cmp
rorl
mov
mov
xlat
mov
lock
jg
pop
mov
jge
in
mov
cmpsb
inc
cmp
pop
loope
xor
jle
and
ds
sub
sbb
movsl
test
sbb
ja
roll
or
out
mov
scas
and
xor
je
repnz
xlat
push
repnz
stc
loopne
js
sbb
jl
jns
push
and
fadd
xchg
xchg
sub
loope
cmpb
add
pop
dec
mov
sub
sbb
jecxz
push
std
loope
fisttps
ret
mov
fdivl
mov
mov
call
aad
das
clc
js
lods
xor
js
enter
jl
dec
outsl
inc
dec
nop
jmp
lahf
push
sub
addr16
adc
xor
out
push
insl
call
or
sbb
incl
jge
sbb
leave
jnp
shl
imul
sbb
dec
xchg
mov
adc
pop
or
comiss
aas
adc
xchg
sub
scas
jg
movhlps
mov
mov
sbb
stos
lahf
push
rorl
imull
mov
cmp
cmpsb
inc
inc
fsubrs
jne
mov
je
cs
insb
xchg
cmp
out
jle
lret
inc
pop
add
adc
cmp
push
in
push
pop
pop
loopne
inc
push
push
rcrl
sbb
xor
jecxz
xor
sti
adc
nop
cmc
sbb
flds
adc
add
jecxz
add
imul
mov
xlat
out
dec
daa
leave
pop
in
fisttpll
lret
lcall
jns
mov
push
inc
pop
shr
push
ret
mov
and
decb
push
aas
push
icebp
push
insl
hlt
jl
lahf
out
pop
mov
or
fcmove
scas
in
mul
push
test
cmpsb
pop
dec
mov
add
push
xor
push
xor
sub
inc
mov
mov
cmpsl
rorl
mov
cli
adc
stc
mov
pushf
or
jae
push
cmp
cmp
andl
add
push
add
imul
testl
mov
pop
out
in
sarb
fld
dec
pop
mov
fsubrs
xchg
into
testl
inc
mov
pop
jg
mov
add
ret
cwtl
xchg
pushf
dec
sahf
jns
cld
and
fwait
jno
or
xchg
mov
int
aaa
jecxz
lahf
dec
or
sub
cmp
cmpsb
mov
ucomiss
mov
jo
cmpsl
and
push
add
xor
mov
cmp
pop
and
cmp
sbb
shrb
mov
push
jo
icebp
adc
xor
cmp
cmc
jb
mov
pop
mov
lods
adc
out
popa
int3
mov
cld
movsl
jge
or
mov
popf
push
push
std
mov
mov
add
mov
call
repnz
or
ljmp
das
mov
mov
and
xchg
add
aad
lahf
lret
adc
pop
sarl
jle
mov
mov
mov
mov
cmp
and
pop
or
scas
mul
jp
nop
test
mov
jbe
sarb
ret
bound
adc
xor
xchg
ficoml
stos
inc
jmp
dec
mov
cmc
jmp
inc
sbb
jg
mov
jge
cmp
orb
and
mov
push
adc
arpl
dec
flds
and
sub
pop
mov
inc
pop
loope
idivl
add
push
cmpsb
fcoml
cmp
sti
xlat
sbb
push
cmc
inc
enter
and
iret
jmp
push
jmp
out
dec
in
enter
shrb
popa
sbb
ss
mov
ja
loopne
and
shl
push
fstpt
test
push
sbb
loope
jg
sbb
sar
cmpsl
pop
mov
push
pop
fdiv
aam
sbb
xchg
rorb
outsb
inc
ret
aam
sahf
lret
sub
testl
inc
add
cmp
pop
adc
test
dec
cld
or
jno
cs
rol
into
lahf
gs
icebp
insl
aas
xchg
sbb
fisubs
push
push
push
mov
mov
adc
addr16
mov
sbb
out
push
jae
enter
sti
aaa
push
loopne
out
lods
repnz
sarl
bound
mov
pusha
ss
xor
push
inc
pop
shrl
lret
dec
and
sti
test
lahf
sbb
inc
pop
fwait
add
mov
out
sub
out
outsb
insl
add
cli
xchg
push
pop
cld
xchg
arpl
push
ja
out
dec
inc
popa
aaa
mov
pop
ds
and
into
and
scas
push
shr
sub
subb
push
push
lahf
insl
add
pop
dec
cmp
and
lret
jns
push
psrlq
xchg
xor
fidivrs
ret
dec
sbb
mov
scas
sub
ss
lahf
or
fxch
cmp
rol
in
sbb
mov
mov
push
add
pop
js
and
test
or
xor
lods
jno
clc
je
mov
and
and
xchg
inc
cmp
lea
xchg
lret
hlt
outsl
fstpt
add
andl
sar
outsb
lcall
cwtl
in
mov
jns
int3
arpl
cmp
and
outsl
jnp
dec
negl
aaa
add
jns
lea
push
mov
out
lcall
mov
mov
iret
out
mov
outsb
jle
pop
daa
nop
insl
jle
xor
push
push
mov
stos
mov
stc
enter
add
ja
mov
mov
sbb
dec
out
mov
cmp
adc
call
decl
testb
fisttpll
push
xchg
ds
jl
enter
imul
inc
xor
movsl
jecxz
push
int3
arpl
outsl
outsl
aad
and
rcrl
xchg
dec
cltd
push
shlb
push
inc
pusha
push
mov
ficompl
mov
femms
mov
testl
cmc
xor
jnp
adc
mov
push
in
fsubl
jae
fnsave
pusha
divl
inc
sti
xchg
sbb
dec
jae
bound
and
outsb
add
dec
push
imulb
out
mov
xbegin
insl
cmp
pop
pop
fucompp
jo
jns
and
xchg
mov
xlat
idiv
shll
cmpsl
cs
cmp
xlat
je
add
test
lods
inc
pop
inc
mov
jg
xlat
xchg
out
xor
movsl
adc
inc
dec
out
cmp
mov
push
mov
data16
jl
fstpl
std
das
sbb
daa
in
addr16
shl
vpcomuq
into
jno
out
pop
add
aaa
cmp
out
das
fbstp
and
or
mov
pop
std
ljmp
movsb
gs
jle
add
in
jg
push
or
es
movsl
mov
lock
sbb
clc
nop
dec
or
inc
rcrl
sub
push
es
movsl
fistpll
mov
add
inc
fsubl
scas
nop
out
mov
inc
push
cltd
xchg
mov
repnz
inc
popf
mov
jge
rcl
std
jp
ja
and
fiadds
je
pusha
push
and
cmp
mov
outsb
imul
sarb
out
das
pop
fsubs
pop
shrb
das
test
mov
xchg
aaa
ficompl
and
loope
cmpl
outsl
lahf
cmp
out
loopne
xchg
add
in
xor
test
ds
hlt
add
jecxz
ja
insb
xchg
sbbb
mov
mov
jb
stc
addr16
jecxz
dec
xchg
in
dec
insl
dec
bound
jbe
adcb
dec
pop
mov
aad
mov
dec
in
ret
jns
cmc
cmp
jns
cmpsl
and
xor
test
movb
popa
pop
daa
rcrb
push
jae,pt
out
insl
clc
xchg
xchg
mov
psadbw
jo
mov
mov
ja
fwait
aad
pop
std
pop
mov
mov
test
mov
add
loop
inc
cwtl
loopne
int
vpcmpeqb
arpl
mov
xorb
pop
sbb
stos
scas
xchg
lcall
pusha
lods
or
lea
mov
inc
lods
xlat
cmp
hlt
jmp
jae
xchg
or
enter
fcmove
nop
push
imul
lcall
and
mov
xlat
outsl
push
push
ds
jb,pt
inc
sbbb
xchg
mov
dec
inc
stos
test
mov
test
sahf
fsubrs
idivl
and
inc
sub
std
icebp
xchg
pop
and
cmp
jmp
cmp
aaa
pop
inc
insl
sub
nop
ret
jp
cmpsl
mov
pop
push
xchg
dec
sub
mov
loopne
data16
xor
push
jne
loop
and
push
mov
cmpl
jg
xor
mov
popf
mov
jl
jmp
push
mov
sub
aam
and
mov
mov
mov
push
test
stos
fldcw
jae
popa
mov
sbb
push
insl
sbb
add
xor
lock
mov
fwait
push
lahf
daa
movsl
adc
jae
scas
sub
sbb
inc
leave
stc
xchg
imul
stos
lock
ljmp
and
ss
pushf
call
add
scas
or
mov
cmpsl
inc
out
cltd
lods
decl
mov
in
inc
or
xor
cmp
fists
push
mov
lods
mov
stos
fldenv
add
xchg
out
or
or
push
cs
roll
or
mov
psubw
jge
out
repz
push
dec
fistl
fcomp
or
and
data16
adc
xchg
js
das
mov
pop
xchg
inc
xor
jns
cld
dec
out
push
or
jmp
sbb
sub
dec
adc
mov
outsb
sbb
call
dec
mov
sarb
push
sub
lret
xlat
mov
add
push
rcrl
add
pop
lds
cwtl
aad
aam
es
lea
lcall
xor
xor
fisubl
bound
daa
nop
and
dec
repnz
ss
inc
mov
xor
and
push
popf
xor
add
cmpsb
cltd
xchg
sub
repz
mov
add
enter
xchg
adc
xor
add
in
mov
fucom
dec
lods
fsubr
loope
xor
mov
fstpl
add
cwtl
das
cwtl
es
xor
sub
add
ss
inc
inc
clc
in
xchg
xor
mov
cs
and
icebp
pop
nop
inc
and
test
push
loopne
inc
mov
sti
movsl
nop
mov
test
mov
icebp
pop
pop
notb
add
sub
sub
bound
jb
mov
adc
cmp
das
mov
or
sub
mov
dec
imulb
dec
les
adc
stos
shlb
lret
jecxz
jo
imull
add
lods
in
jmp
lret
sbb
push
daa
xor
inc
dec
xor
lret
bound
jnp
clc
cmp
sahf
sbb
cli
test
pop
adc
loope
push
shlb
out
xor
insl
sbb
nop
scas
and
cmp
roll
mov
scas
sahf
sub
jno
sub
sub
fucomi
imul
insl
lods
outsl
jge
push
xor
enter
mov
loope
outsb
orl
or
test
dec
test
bound
and
cmc
mov
out
addr16
push
jl
cli
in
mov
test
add
aad
pusha
pop
add
mov
sub
pop
or
push
pusha
push
loope
jbe
xlat
jne
mov
cmp
pusha
mov
mov
cmpsl
test
lcall
sbb
stos
in
out
pop
in
popa
jle
shll
lods
and
xchg
paddsw
xchg
mov
addr16
mov
fiadds
scas
push
int3
ja
ss
scas
rcl
push
std
lds
dec
clc
into
mov
rcrl
je
push
ja
ds
jmp
xchg
ss
jle
cmp
aaa
or
shrl
enter
mov
movsl
jp
imul
mov
and
mov
add
hlt
or
push
and
stos
insl
cmc
fcompl
sub
and
stos
out
push
sub
mov
cmp
xlat
into
daa
insl
inc
push
push
stos
imul
ja
fs
cmp
orb
xchg
fwait
jecxz
sahf
push
negl
imulb
mov
mov
ret
shlb
pop
leave
cli
repnz
inc
jecxz
mov
push
in
fsts
pop
movsl
jns
adc
cmpsb
subl
js
aam
xlat
outsb
or
das
adc
pop
dec
jno
idivl
mov
sahf
loopne
insl
dec
inc
mov
jmp
push
dec
pop
mov
jb
add
leave
xchg
add
in
add
or
mov
inc
inc
sub
lahf
and
pop
pop
lret
lret
xor
pop
je
jne
icebp
xchg
mov
js
xchg
comiss
and
mov
call
push
es
and
or
mov
loopne
push
inc
inc
into
cmp
aam
add
mov
aam
jns
cmp
add
add
sbb
sub
mov
sub
dec
sbbl
out
out
loope
shrb
out
add
inc
out
add
mov
mov
test
fsubrs
jns
and
or
inc
fmulp
sub
loop
cmp
leave
loop
sub
shr
test
jg
fmull
adc
pushf
pusha
mov
je
int3
fdivrl
mov
cmc
mov
lds
mov
enter
inc
jmp
imul
push
sbbb
mov
pop
sub
ret
insl
ret
fucomip
adc
nop
lea
mov
mov
test
rdpmc
dec
xor
sbb
sub
xchg
popf
clc
outsb
sbb
aaa
repz
or
stos
inc
enter
cmp
leave
sbb
das
mov
push
sub
lods
divb
cmpsb
int3
dec
dec
int3
adc
je
or
cmp
sti
push
mov
jno
dec
and
shrb
mov
in
xchg
sbb
clc
cmp
mov
fildll
jbe
inc
iret
out
in
popf
lock
jo
xor
popf
and
dec
iret
data16
push
mov
or
mov
xor
add
inc
mov
xor
pop
or
lcall
pop
lret
cmpsl
jle
popf
xchg
scas
loop
add
icebp
xor
push
xor
stc
xor
sbb
inc
notl
lahf
movsb
aam
dec
mov
jl
clc
lods
pushf
stos
mov
leave
jl
pop
inc
mov
inc
in
pusha
cmp
loope
aad
pop
pop
aas
hlt
addr16
fs
mov
imul
pushf
ret
inc
call
pop
mov
jp
adc
in
pop
dec
js
cmp
ss
test
ret
or
mov
mov
in
adc
xchg
icebp
in
push
adc
push
add
sbb
es
mov
jbe
jp
cmp
out
mov
adc
pop
scas
inc
jl
add
fcomps
cwtl
das
dec
sbb
mov
out
testl
xor
jl
mov
call
stos
repnz
sahf
call
fidivrl
xchg
jl
loopne
repnz
jbe
sbb
pop
stos
push
insb
lcall
sub
loopne
out
icebp
cmpsl
add
pop
mov
and
cmp
and
or
out
clc
into
repnz
std
scas
mov
pop
mov
jp
popl
iret
or
fdivrl
mov
or
repz
lods
out
outsb
or
shl
push
jo
and
cmp
jecxz
jnp
iret
dec
fldcw
mov
cltd
jmp
mov
stos
fcmovne
pushf
adc
rolb
or
mov
cmpsb
dec
test
cltd
bound
scas
mov
gs
push
dec
andb
xchg
add
jge
rcl
cmpsb
pop
imul
mov
flds
hlt
lahf
pusha
test
push
inc
arpl
push
in
jo
mov
fwait
jl
inc
xchg
mov
inc
lahf
sub
roll
dec
cmp
mov
push
ret
mov
xorl
push
call
pop
icebp
int3
xchg
sub
dec
pop
add
cmp
sbb
dec
shrb
iret
ret
shl
hlt
out
mov
int
mov
and
sub
sub
lock
xchg
iret
mov
adc
inc
mov
cld
enter
test
inc
jl
lret
int3
inc
cmp
jbe
pop
outsb
mov
mov
sahf
xor
xor
dec
lcall
hlt
mov
jl
add
adc
push
insb
jg
sahf
jbe
adc
push
and
xorl
andl
push
or
or
jmp
lret
jp
sarb
xor
push
jbe
fiaddl
insl
subl
jg
addr16
xchg
test
fidivs
test
js
aam
xlat
mov
repnz
jo
or
jl
js
fcomps
push
les
shl
jo
dec
mov
jle
insb
and
xchg
mov
or
sub
push
shlb
push
out
out
je
stos
hlt
xchg
adc
js
aam
add
sub
aam
sbb
add
into
xchg
aaa
and
sti
int
lret
sbb
lods
mov
push
movsl
sub
jnp
cmpsl
ds
fucomip
xlat
xchg
imul
loope
fcomps
test
pop
fidivrl
pop
adc
outsl
mov
adc
out
add
aad
cltd
mov
and
fstpt
add
xor
aas
cmp
jl
subl
rorb
mov
xlat
push
or
mov
daa
inc
in
shlb
loope
mov
lods
mov
mov
jb
outsl
dec
inc
ret
jmp
jnp
cmp
pop
insl
xchg
add
mov
push
ljmp
and
inc
ja
lds
dec
repz
xor
stos
clc
imul
mov
or
and
xor
testb
clc
vpmacssdqh
test
sti
test
push
cmpsl
fwait
pavgb
add
lcall
xchg
mov
shrl
and
sub
outsl
repnz
pop
xsha256
cmpsb
push
jns
add
mov
xor
push
xor
testb
addl
pop
fwait
xor
pop
cmc
push
movl
mov
cmp
add
fwait
push
push
in
mov
cmp
popa
push
pop
sub
scas
sarb
cmpb
pop
jg
push
out
and
fwait
and
sbb
in
dec
adc
sbb
push
mov
in
ret
pusha
mov
mov
add
dec
sbbl
adc
lahf
mov
push
or
mov
jae
nop
gs
push
lods
repz
ds
ret
inc
pop
jecxz
sub
xor
sbb
add
repnz
sub
and
push
sub
push
add
mov
jb
cmpsl
xchg
mov
shrl
adcl
add
dec
xor
adc
pop
aaa
xchg
xchg
outsl
dec
jb
mov
mov
jmp
sub
push
fstps
shl
inc
jmp
inc
jne
je
into
lahf
xorb
push
fadds
xchg
mov
es
mov
sbb
icebp
addb
test
inc
cmp
loop
jg
and
js
fcoms
add
dec
adc
push
cmpsb
or
add
push
nop
shll
jnp
push
dec
lcall
mov
int
jae
xchg
out
out
dec
sbbl
dec
test
and
hlt
test
rcrl
dec
jl
jae
adc
pop
push
rclb
mov
push
andb
test
movsb
repnz
sahf
xchg
fwait
or
ljmp
das
jge
push
inc
jg
pop
cmp
lahf
jbe
jns
loope
add
and
mov
scas
imul
mov
xrelease
inc
inc
outsl
cli
cmp
push
ljmp
inc
xlat
jnp
mov
sub
and
loopne
xchg
xchg
jl
aaa
mov
insl
sti
test
lcall
lahf
cld
lcall
rcl
out
roll
add
dec
mov
and
sbb
and
lods
stos
mov
je
addl
sahf
jno
test
clc
xchg
push
clc
jae
mov
fiadds
pop
mov
scas
adc
and
cltd
cld
mov
dec
out
mov
sbb
dec
test
scas
and
rclb
aas
aas
pop
je
int
in
adc
mov
sbb
dec
iret
push
hlt
lahf
cli
loop
imul
sarl
mov
jns
call
or
rcrb
aad
sbb
jb
test
fidivrl
test
aad
test
xchg
loop
dec
jmp
enter
adc
push
jl
lcall
aad
aam
inc
lods
push
pop
jae
mov
mov
cmp
mov
lahf
in
or
ds
and
fadd
rorb
dec
sub
ljmp
cmp
out
rcrb
xchg
mov
pop
ja
cmp
or
pop
iret
fstpt
push
jbe
sahf
pop
inc
lret
sarl
data16
mov
jae
push
insl
sub
cmc
mov
push
mov
int3
sbbb
jecxz
xlat
jmp
mov
push
ja,pn
xchg
out
scas
popf
or
out
cld
dec
mov
adc
mov
and
sbb
dec
arpl
and
mov
jb
je
insb
sbb
mov
push
rorl
es
andl
cmp
dec
loop
nop
sbbb
in
fdivs
xor
mov
cmc
dec
mov
mov
int
mov
dec
inc
lea
je
lret
mov
push
cmp
inc
xor
pop
insb
shld
jnp
and
rcrl
movsb
sub
lea
sub
gs
xor
scas
dec
cmp
negb
das
push
fprem
inc
rcrb
cmp
notl
lds
jp
test
mov
in
cmpsl
adc
pop
fildll
adc
lcall
lret
pop
popf
pop
lcall
ror
push
es
lds
inc
jmp
jmp
aam
and
add
mov
imul
outsb
out
dec
mov
fistpll
movsl
xor
push
xor
in
xchg
lret
in
outsl
fistps
push
out
imul
int3
mov
fmull
aaa
mov
lods
push
and
adc
insb
not
lcall
addr16
addb
xchg
dec
lret
in
xchg
icebp
lods
xchg
xor
xor
mov
inc
rcrl
dec
das
push
jg
xchg
sbb
sub
ljmp
mov
call
or
push
std
ret
xor
fcoms
iret
int
leave
arpl
je
test
jge
inc
adc
stc
pop
outsb
loop
cltd
test
cmp
rolb
pusha
add
jne
hlt
addr16
imul
mov
xchg
xchg
inc
ss
sbb
adc
lock
mov
aad
cmp
clc
sarb
cmc
je
aad
push
lock
fidivs
sbb
in
push
ds
adc
pusha
out
pop
mov
inc
push
adc
adc
test
sub
leave
aad
out
cwtl
push
mov
mov
test
cmp
jnp
fiaddl
mov
movsl
imul
out
mov
mov
sbb
and
rcll
ja
pop
int
mov
inc
rclb
xchg
push
sbb
ficoms
mov
cmp
mov
enter
addr16
jno
addr16
out
hlt
xchg
rol
adc
jb
xchg
cmp
lahf
out
jo
adc
and
or
pushf
nop
imul
sbb
adc
cmpps
push
jbe
negb
and
andb
test
int3
cmp
adc
push
inc
jmp
movsl
push
dec
sub
test
mov
repnz
pop
aad
cltd
jp
ja
loopne
es
mov
jns
test
outsb
add
mov
cltd
imul
fnstenv
push
in
mov
fidivs
mov
enter
mov
imul
push
sub
mov
icebp
sti
mov
jg
adc
pushf
aaa
movsb
out
subb
ds
adc
cmpsb
sbb
gs
ljmp
jmp
lahf
push
inc
xlat
mov
aas
adc
leave
push
pop
nop
mov
mov
or
fimuls
repz
int
pop
int
daa
lds
adc
sbb
cmp
imul
nop
rcpps
mov
cld
lds
xchg
les
stos
loope
sbb
inc
addb
outsb
leave
pusha
mov
cltd
jb
into
movsl
cmp
sbb
jnp
dec
insl
mov
adc
lods
inc
push
sbb
mov
les
inc
add
daa
cmpsl
dec
mov
sahf
adc
fs
pop
xor
andb
cmp
jp
mov
inc
jecxz
mov
dec
mov
xchg
std
pop
pushf
xchg
call
jno
ds
and
out
cltd
inc
and
mov
test
mov
mov
push
cmp
ljmp
xor
in
cs
out
mov
pop
ktestb
push
xchg
cwtl
cmpb
je
mov
cmp
pop
ret
movl
lret
bound
aaa
dec
push
insl
add
cmp
es
mov
mov
test
fisubs
cld
pop
sub
fnstsw
movsb
or
in
flds
pop
test
inc
mov
and
icebp
mov
ja
inc
jmp
and
dec
lea
sbb
push
aad
scas
xchg
jnp
cmpsl
fdivl
gs
mov
jge
shll
rcll
das
jnp
dec
stos
jl
loop
inc
adc
mov
push
jl
lds
insl
sbb
push
xchg
sub
shl
jge
test
stc
ret
test
sbb
enter
sub
dec
out
imul
insb
sbb
add
and
mov
lret
push
cmpsb
pop
daa
and
cmp
xchg
cmp
mov
fidivrl
add
dec
mov
lahf
sub
out
jb
mov
in
adc
jecxz
jmp
leave
sbb
push
sub
outsb
add
sahf
movsl
mov
pop
out
call
xchg
jmp
cmpsl
lahf
push
cmp
or
mov
divl
pop
gs
xor
loope
adc
mov
mov
mov
lods
lods
hlt
push
fidivs
jb
shrl
pop
mov
cs
mov
add
xchg
and
cmp
test
fcmovnu
in
or
or
lret
fwait
and
xchg
xor
inc
add
sub
pop
pop
cwtl
mov
mov
fcomip
xor
notb
filds
xor
xor
xchg
data16
out
outsl
in
dec
movq
mov
lret
mov
lret
mov
test
xchg
stos
push
cmc
fwait
xor
fs
clc
iret
inc
in
mov
push
pop
pop
es
es
mov
and
jecxz
mov
push
pop
leave
jmp
mov
and
mov
sti
or
shll
mov
sbb
jno
and
imul
mov
jl
in
sub
push
add
addl
pushf
mov
fs
mov
ja
lock
rolb
mov
jns
loopne
leave
fldl
aam
cmpsb
cmp
inc
mov
pop
jge
or
int3
sahf
mov
adc
xchg
cmpsb
and
sub
andl
outsl
mov
pop
sbb
scas
test
inc
push
push
jb
addb
sbb
dec
addr16
fsts
mov
xor
negl
in
cmpsl
shrb
jmp
dec
inc
or
cmp
outsb
mov
rclb
shrb
sbb
jl
push
add
pop
in
xchg
int
pusha
push
xchg
adc
mov
lahf
data16
sub
mov
and
sbb
mov
lahf
xor
enter
negb
push
mov
add
cmpsl
cmpsl
fbld
lea
cltd
das
lds
popa
enter
push
fstpl
mov
inc
addr16
sahf
adc
sub
inc
jno
sti
loopne
cld
xchg
out
pop
lcall
mov
into
mov
push
sub
fidivs
add
mov
fiaddl
mov
lret
call
and
enter
push
sub
inc
test
fwait
add
xchg
jle
mov
jge
push
sti
sarb
and
stos
push
rcrl
inc
in
call
sbb
notl
cmp
ds
jg
test
adc
inc
cmp
add
movsl
jne,pt
sub
or
cmp
pop
outsb
bound
jmp
addr16
cwtl
jo
xor
std
dec
xor
jmp
lods
std
inc
push
jbe
cli
or
movsl
in
cmp
test
shrb
stos
dec
nop
fucom
sbb
scas
outsb
mov
rclb
xchg
imul
fldt
xchg
sbb
int3
jbe
insb
bound
rcll
dec
pop
aam
test
data16
jno
adc
mov
je
jp
push
xor
adc
pop
xchg
inc
jb
dec
mov
inc
lea
lock
xchg
out
jae
loope
cmp
js
dec
lahf
pop
hlt
push
xchg
add
repnz
mov
insb
mov
pop
pop
aam
out
test
jecxz
loop
stc
dec
jp
sbb
jae
xchg
mov
enter
adcb
nop
or
push
gs
or
pushl
cmpsl
and
sub
stc
add
in
mov
cmpsl
ja
dec
mov
sarl
mov
outsb
sub
pop
int
stos
lret
rclb
sahf
test
or
jmp
add
cmp
cld
insl
les
push
cmpsl
jmp
sub
mov
cmc
mov
or
jno
mov
jge
add
repnz
sbb
push
sbb
add
iret
lods
jle
mov
aam
imul
lea
iret
cli
fmuls
mov
andb
jne
out
xchg
add
or
dec
stc
stos
push
enter
bsf
mov
dec
lock
insl
push
xchg
in
inc
in
mov
push
xorl
sub
add
les
shll
out
hlt
sub
cli
lcall
pmaddwd
xor
addb
inc
sti
out
dec
mov
xlat
jo
push
mov
sbb
xor
aaa
arpl
push
rcrl
dec
pop
fmuls
ret
inc
adc
negl
mov
cltd
jge
xor
lahf
mov
push
aad
outsb
cmpsl
xor
xchg
sbb
cli
and
push
insb
mov
ljmp
inc
fcoms
aas
push
leave
mov
xor
pop
mov
push
clc
mov
sarb
icebp
and
inc
jp
xchg
notb
xchg
push
cmpsl
lea
inc
je
lds
mov
lret
xchg
in
mov
mov
xor
ljmp
inc
fisttpll
jmp
bnd
lret
xorb
mov
enter
mov
dec
mov
aam
cmp
mov
or
dec
jb
push
mov
sbb
mov
jge
fidivrs
push
dec
jno
into
lret
inc
push
in
arpl
add
cmp
jbe
fnstcw
or
call
push
out
outsl
lret
xor
daa
add
add
fists
xchg
lods
or
popa
or
jnp
dec
addr16
pop
sahf
mov
mov
jg
mov
out
lods
push
das
rorb
sti
xchg
pop
pop
adcl
sbb
inc
cmp
fxch
fisttpl
pop
dec
jbe
lahf
scas
mov
ds
insb
lods
push
mov
aam
mov
fsubr
mov
roll
popa
mov
jecxz
dec
cmc
xlat
enter
pusha
jl
push
scas
xchg
add
pop
jb
jnp
popf
scas
outsl
adc
movb
xor
mov
sbbb
jecxz
cltd
fsub
mov
mov
and
call
mov
pop
adc
int3
popf
lret
mov
mov
jg
outsb
in
jle
arpl
jle
dec
mov
dec
inc
pushf
nop
pop
ja
shlb
and
jl
popa
scas
sahf
sti
nop
sub
lret
test
nop
gs
xor
jbe
adcb
push
in
mov
mov
adc
cld
xchg
in
jp
or
and
sbb
in
mov
ficoml
lret
pop
xchg
and
xor
xchg
mov
mov
sub
ret
loopne
cltd
add
sbb
pusha
xlat
aaa
cmp
pushf
aad
mov
scas
nopl
lret
sbb
adc
in
inc
jno
xadd
jne
add
cmpsb
dec
jno
xchg
mov
add
jp
push
insb
add
das
xchg
jbe
and
jo
jle
insb
jg
testl
sub
cli
daa
lcall
cmp
fimull
mov
daa
ret
xchg
rcr
sbb
iret
fldcw
sub
mov
sub
jecxz
xchg
cmp
adc
sbb
dec
add
cmp
and
sub
and
pusha
shl
mov
lahf
rcrl
iret
std
push
mov
in
movsl
adc
xor
call
shlb
inc
movsl
fs
pop
lock
test
lret
add
mov
call
in
and
add
decb
sahf
aas
push
push
adc
aas
retw
arpl
xchg
pop
pushw
mov
mov
repz
mov
sub
ja
jecxz
mov
add
movsl
pop
call
mov
rep
popf
and
ljmp
pop
lret
rcr
xor
imul
sti
dec
add
xlat
sub
pushf
fnstenv
leave
jmp
xchg
adc
std
call
mov
or
or
sub
rcrl
jne
adc
inc
test
xor
push
or
cmp
repnz
jns
pextrw
pop
inc
data16
gs
js
xor
mov
adc
rclb
push
js,pn
fwait
aam
into
sbb
stos
push
shl
ja
add
mov
idivl
push
xlat
and
xor
out
and
xchg
mov
xor
or
adcb
mov
and
std
push
mov
lods
hlt
inc
add
mov
inc
scas
aas
fnstenv
nop
shrl
mov
mov
cmp
push
push
sub
inc
fwait
and
add
ds
loopne
xor
pop
mov
pop
xor
popa
aas
lods
cwtl
sub
inc
loopne
xor
rcrb
shl
mov
enter
add
jmp
adc
dec
xlat
inc
lret
push
fbld
xor
stos
xchg
aad
movsb
cmp
xor
push
mov
jmp
int3
arpl
stos
xchg
movsb
adc
mov
sub
ds
push
xor
inc
scas
outsl
call
xor
jg
bswap
xchg
scas
cld
sbb
inc
dec
ss
andb
imul
lds
in
negb
mov
dec
arpl
dec
cmp
or
jbe
push
outsl
enter
sbb
jbe
add
test
dec
or
hlt
std
jle
pop
loopw
cmpsl
mov
out
mov
mov
inc
jecxz
mov
sbb
scas
loopne
insb
stos
int
adc
mov
xchg
adc
insl
test
lret
adc
push
xor
xchg
das
pop
negb
int3
outsl
repz
xor
dec
inc
push
mov
insb
arpl
js
or
lcall
pop
jp
xchg
sub
pop
hlt
sarb
add
mov
push
lds
lods
xchg
fucomi
xrelease
int3
mov
lock
aad
call
cmpl
cmp
movb
pop
movsl
inc
cmpsl
int3
bound
cli
divb
enter
adc
mov
push
fmulp
subl
das
sub
cmp
dec
bnd
lahf
ret
pop
jp
dec
and
aad
cwtl
das
sbb
push
out
or
roll
cmovno
dec
pop
in
pop
cmc
mov
cmp
inc
inc
sub
loope
adc
sbbl
pop
pop
dec
js
sar
jg
cmp
ljmp
fimull
or
stos
popl
je
leave
loope
and
sbb
add
lret
mov
mov
pop
xor
fimull
cwtl
pusha
icebp
xor
sbbl
inc
lret
inc
popa
mov
adc
sub
repz
clc
pop
fsubrs
xlat
xchg
adc
imul
outsl
mov
jp
inc
pop
cmc
je
lea
aad
lcall
and
stos
stos
inc
or
or
add
ja
inc
jo
stc
into
sbbl
gs
mov
mov
ljmp
inc
lret
nop
jge
int
mov
jmp
cld
xchg
xor
gs
sbb
or
insl
or
pop
jp
addr16
pop
xrelease
lods
int3
insl
and
sti
fdivrs
xchg
and
sbb
ficoms
xchg
jmp
hlt
fnsave
mov
xchg
add
sti
xchg
sbb
sbb
mov
lret
jp
data16
jae
aam
or
ljmp
jae
addr16
inc
push
inc
fs
and
loop
jl
push
outsb
int
lds
pop
sahf
lods
push
imul
or
imul
xchg
pop
pop
dec
movsb
dec
fwait
cmp
hlt
mov
fisubrl
mov
out
push
imul
and
scas
fdiv
dec
xor
sahf
stc
shr
lea
dec
test
rcrb
pop
lcall
dec
jecxz
add
push
pop
les
das
les
mov
dec
add
jns
outsb
test
mov
mov
jle
sbbl
jnp
push
mov
xchg
adc
rclb
xchg
dec
aas
ljmp
stos
jge
shrb
dec
mov
jle
mov
push
shlb
movsl
in
push
out
inc
out
mov
add
pop
insb
iret
mov
test
mov
lcall
ja
sub
push
cmp
movsl
or
in
pop
push
pop
out
xchg
scas
shll
and
xor
int
sub
mov
add
dec
inc
data16
pop
outsb
cmp
lahf
mov
fwait
xor
shl
jae
inc
push
dec
daa
loopne
addr16
lret
add
int3
push
mov
es
jmp
and
bound
jmp
gs
fs
push
int
lods
sub
imul
aas
mov
insb
or
test
in
out
adc
sub
and
jo
repnz
pop
and
cmp
sbb
inc
inc
cmp
mov
subb
mov
pushf
ja
jno
cmp
lods
stc
je
movsl
mov
movsl
in
insb
adc
push
push
cmp
xor
mov
sbbl
pop
sahf
jecxz
subb
enter
fwait
cltd
sub
xor
xchg
sub
aad
inc
sbb
cmp
push
or
add
subb
int3
xor
sub
jg
xlat
inc
clc
fdivs
jae
lds
pop
mov
add
andb
cmc
add
sti
push
repnz
pop
es
pop
mov
mov
fdiv
jo
mov
mov
mov
dec
xchg
lods
inc
pop
ja
mov
inc
pushf
out
gs
mov
leave
in
in
xor
push
movsb
insl
sub
push
clc
aam
arpl
in
punpckhwd
imul
fbstp
dec
jb
fcoms
mov
mov
jmp
or
lods
mov
sbb
push
outsb
sub
cmpsb
sbbb
fsub
mov
fstpl
xchg
sbb
pop
insl
imul
pop
push
add
in
and
ljmp
push
xlat
setg
inc
or
lret
lret
cli
popl
and
dec
mov
sti
fisttps
into
xchg
imul
inc
or
stos
in
stc
jmp
loope
fwait
lcall
dec
rorb
xor
xchg
cmp
mov
test
into
push
cltd
and
clc
xchg
xor
pop
fbstp
push
jge
cmp
fcomps
and
pop
push
sub
dec
scas
fldcw
sbb
or
jnp
or
xor
add
mov
ds
in
pop
mov
ja
les
sbb
push
xchg
jnp
ret
leave
sub
sahf
and
lret
mov
jmp
testb
mov
add
cs
popa
mov
sti
push
inc
aaa
in
xor
mov
pop
xor
push
loop
movsb
jmp
cmp
xchg
out
push
rol
aaa
cmp
stos
xor
pop
jbe
mov
loope
mov
daa
in
cs
fwait
cmpb
imul
cmp
lcall
into
jecxz
sub
xor
lods
jmp
mov
imul
stos
inc
cmp
xchg
push
out
cli
cmp
jne
cmpl
dec
xchg
jmp
mov
out
or
loop
jno
pusha
lds
cltd
hlt
mov
inc
or
outsl
test
push
je
sub
aaa
xchg
sbb
jle
fstl
loope
jb
sbb
in
jmp
scas
es
std
push
sarb
mov
loopne
cs
fisttps
xchg
les
xchg
outsl
stos
cmp
aad
movsl
jns
cli
lcall
scas
clc
push
push
jmp
lret
in
leave
xlat
push
fmul
sub
mov
bound
push
dec
imul
out
and
sub
inc
add
mov
xchg
mov
ret
out
cmc
adc
std
jl
jge
aaa
loopne
les
inc
dec
ja
jp
rcrl
dec
mov
fcmovne
das
pop
movb
les
or
popf
jae
ret
lret
push
int
and
daa
push
xchg
jo
inc
or
movsl
js
xor
lahf
mov
mov
jae
pop
cli
xchg
push
les
popa
or
dec
cmp
mov
idiv
nop
aam
mov
inc
fmull
pop
mov
mov
adc
insl
int
stc
jns
pop
stos
and
stos
pop
push
pop
gs
jle
rol
lods
mov
mov
and
mov
dec
or
jge
push
mov
std
insl
mov
fildll
mov
xchg
leave
mov
stos
movsl
jge
xchg
mov
push
mov
jge
pop
pop
loopne
pop
in
pop
aaa
xor
xchg
mov
stos
cmc
inc
dec
mov
fld
pop
adc
push
lea
out
mov
fbld
dec
add
inc
sahf
lds
jge
jmp
jge
loop
pop
hlt
loope
imul
add
aas
pusha
es
test
pop
mov
shl
repz
stos
lret
lahf
xor
cmpl
ret
mov
mov
jne
fwait
in
cmp
das
mov
mov
adc
cltd
mov
sub
xor
sub
push
cmp
dec
in
ss
xchg
push
push
sbb
pusha
jmp
je
push
adc
inc
xor
sbb
sahf
imul
loopne
aam
pop
adc
sbb
hlt
sbb
aad
or
aaa
incb
and
repnz
xor
push
jp
lods
stos
das
xchg
push
insb
jne
cmp
int3
andl
pop
cmc
sahf
sahf
push
ljmp
lock
bound
in
push
lcall
push
adc
rolb
xchg
mov
sbb
divl
in
mov
jecxz
fstps
scas
mov
es
lret
jnp
test
test
dec
mov
dec
lds
fwait
cmpsl
or
lock
push
sbb
mov
xlat
mov
and
or
jle
lds
mov
aad
fldt
addr16
iret
add
fdivrs
enter
loop
out
push
pop
into
les
xchg
adc
inc
sbb
in
dec
arpl
pop
in
dec
dec
pop
and
mov
push
mov
repz
fcompl
mov
xor
imul
insb
in
lret
mov
pop
cld
sub
out
sbb
fstpt
test
test
lea
mov
mov
out
iret
jbe
int
xchg
in
jp
or
pop
bound
pop
mov
mov
xchg
push
test
add
push
inc
ss
dec
bound
test
or
jl
loopne
pop
lahf
scas
jl
xchg
pop
nop
or
dec
js
xor
sbbb
js
scas
jmp
test
cmp
add
data16
xchg
xchg
pop
dec
push
bound
enter
mov
mov
dec
popf
xor
mov
pop
or
add
das
dec
jnp
mov
js
inc
jl
push
call
dec
push
outsl
orl
or
mov
sub
mov
sub
mov
imul
pop
inc
fimuls
and
xor
andl
cmp
mov
imul
mov
out
push
sbbl
testb
aad
and
lock
sub
xor
gs
sbb
and
ss
jo
pushf
mov
xchg
xchg
cmp
fildll
mov
mov
dec
jbe
hlt
pop
and
out
jl
cmp
lret
push
fsubs
mov
iret
popf
push
adc
dec
mov
xor
inc
jb
jl
xchg
xor
pop
cmpb
imul
cmp
mov
lock
jo
js
cmpsb
push
pop
jnp
test
out
popf
cmc
jno
cmp
sbb
int
insb
or
push
dec
push
data16
push
and
cmpsb
fldl
scas
mov
ljmp
inc
jle
fwait
mov
aaa
mov
movsl
mov
jbe
ret
xchg
push
dec
pop
lods
mov
shl
mov
in
popa
in
inc
int
add
dec
scas
movsl
fucomp
adcb
stos
lret
fwait
cmp
mov
pushf
cltd
orl
mov
push
repnz
aaa
or
test
jns
pop
pop
jg
js
xor
pusha
xchg
mov
pop
push
cmp
icebp
xchg
push
je
dec
push
arpl
fptan
jle
mov
test
mov
test
push
movsl
push
pop
insb
out
scas
les
sbb
xchg
jecxz
pop
mov
xchg
add
in
mov
mov
inc
fs
adc
lds
and
add
inc
lods
mov
and
imul
push
cmp
scas
jl
fnstenv
pop
and
mov
dec
cmp
enter
popa
mov
out
cmp
nop
movsl
jae
movsl
cmp
mov
mov
pop
pop
repz
add
jle
or
cmp
mov
fsubrp
adcb
daa
repnz
pop
pop
cmpsl
ret
inc
dec
push
in
cmp
push
test
adc
xchg
cmpsl
dec
push
sub
push
push
out
cmp
ret
mov
mov
call
or
fisttps
int
je
test
add
cmp
sti
lods
fsubl
std
rorb
xor
pop
hlt
fisubl
inc
add
adc
push
scas
mov
or
mov
pop
lret
ret
lret
adc
push
int3
cmp
leave
int3
pop
cli
xchg
sbb
pop
cmc
out
inc
in
dec
std
dec
repz
aam
nop
outsb
ss
call
inc
fbstp
cld
cld
dec
test
into
repnz
shr
rcrl
loope
mov
mov
jmp
push
mov
aas
xchg
mov
subl
sbb
sbb
jb
and
xchg
ss
push
jmp
punpcklwd
bound
testb
test
jle
cmp
adcb
inc
gs
push
in
pop
addr16
pop
mov
cwtl
test
adc
aas
dec
mov
push
inc
daa
xchg
adc
jl
cmp
data16
sbb
sbb
xchg
call
push
adcl
subl
addr16
sub
dec
mov
mov
mov
mov
push
in
dec
nop
lea
cmpsl
mov
repz
movsl
rolb
mov
daa
jno
fisubrs
mov
pop
sahf
lock
mov
jmp
inc
rorl
jnp
mov
push
mov
dec
sub
lods
cmp
ljmp
push
movsl
lret
cmp
fidivs
or
aad
scas
add
fiadds
rcr
out
mov
shl
push
sahf
xor
xchg
sbb
xor
and
cltd
sbb
repz
ds
ret
pop
das
mov
and
fs
cwtl
xor
dec
jle
scas
pop
xchg
jmp
shlb
aam
adc
stos
jno
repz
inc
fmuls
ret
int
lcall
mov
xor
lds
faddl
arpl
mov
and
cmpsl
jp
sub
cld
in
test
ret
jle
sub
inc
push
xor
outsb
andl
fidivrl
movsl
lcall
hlt
sahf
das
andl
push
add
jae
pop
fs
out
jbe
popa
test
dec
fisttpll
jmp
sbb
cmp
rclb
jb
xor
push
inc
inc
gs
mov
and
in
aas
lcall
fwait
inc
add
fcmovnbe
aaa
andb
push
imul
inc
scas
push
ja
cltd
sub
mov
xor
les
dec
es
mov
inc
addr16
aaa
testl
jo
sahf
xchg
nop
sub
mov
iret
adcb
ljmp
les
aam
out
test
dec
inc
ljmp
lods
jae
test
shlb
mov
cltd
stos
mov
mov
into
or
adc
sub
mov
dec
mov
dec
push
int3
xor
jge
push
stos
xor
mov
mov
cmp
cs
rcrb
fstpt
addl
inc
enter
test
outsb
dec
in
mov
outsb
mov
cltd
stos
inc
adc
mov
in
fwait
cs
lods
inc
rclb
add
jge
in
scas
lea
data16
ja
adc
fisubl
mov
mov
mov
dec
pop
enter
jnp
pop
xchg
sub
cmp
dec
mov
js
xor
mov
in
adc
in
mov
fstl
addr16
nop
outsb
inc
arpl
mov
push
arpl
in
test
daa
cld
stc
xor
test
lret
add
jle
adc
lods
inc
gs
outsb
hlt
dec
in
push
xchg
adc
adc
out
lods
icebp
fwait
pop
jae
cmp
pop
nop
stos
add
sti
xchg
pusha
or
xor
dec
dec
mov
sbb
push
rcrb
je
pop
pop
cmc
dec
adc
jl
pop
inc
int
xor
lcall
loopne
mov
push
cmp
mov
lea
bound
xchg
push
jmp
scas
dec
movsl
sbb
cmp
and
inc
nop
imul
mov
pusha
push
mov
lgs
or
cmp
mov
sbbb
insl
jne
mov
pusha
ss
enter
inc
push
lret
leave
xchg
jg
in
repnz
lea
sti
xor
test
movsl
lds
cmp
cmp
push
das
or
dec
dec
shr
xor
aaa
std
sarl
or
sub
rcrb
fs
in
fcomip
or
ja
and
mov
lock
mov
int
xor
shl
std
addl
mov
push
cs
arpl
cmp
loope
cmp
shrl
jbe
outsb
xor
ss
shll
in
lret
mov
push
lahf
mov
sbb
ret
fwait
outsl
cli
nop
jns
xor
fbstp
xchg
push
test
icebp
and
sbb
add
jns
lea
jnp
stos
add
mov
dec
jb
iret
iret
lock
mov
lock
roll
or
into
popf
inc
rorl
out
cmp
or
das
ja
push
into
repz
xorl
arpl
in
sbb
outsb
adc
mov
imull
hlt
aaa
hlt
ds
xchg
xor
in
incl
decl
mov
test
subb
rol
test
jge
insb
xor
and
pop
repz
xchg
icebp
dec
dec
jp
fimull
out
xor
cmp
pop
sub
jb
mov
fistpl
inc
mov
mov
xor
filds
ljmp
fnstcw
mov
push
jecxz
push
lahf
ss
jecxz
xor
pop
movl
cmp
mov
mov
mov
outsl
dec
or
add
lcall
int3
cmpb
in
popf
arpl
mov
jno
add
jb
add
pop
jmp
mov
jno
int3
js
pop
stos
in
xchg
inc
roll
cmp
sbb
jmp
enter
out
or
jns
ds
push
pop
push
mov
inc
movsb
dec
fcomi
jp
mov
mov
jecxz
stos
lods
cmp
lea
push
mov
rcrl
add
inc
es
fwait
int3
jg
shrb
add
xchg
fcomps
cmp
xor
mov
or
rcl
scas
xchg
push
loopne
mov
sub
mov
add
xor
xor
dec
arpl
shll
cmp
mov
loopne
or
mov
and
out
fmuls
adc
lock
test
lret
push
and
mov
int3
xchg
ret
jle
arpl
jns
sub
mov
xchg
stc
adc
insb
dec
or
in
jno
cmp
xchg
sub
popa
sbb
sarl
int
cmc
mov
daa
jo
adc
sbb
hlt
test
push
in
jecxz
cmpsb
lock
je
inc
mov
mull
mov
xchg
jmp
push
bound
insb
jmpw
lea
push
xchg
fdivl
iret
push
leave
xor
cli
mov
add
inc
int
lods
sbbl
xor
jecxz
mov
into
ds
inc
sbb
icebp
mov
std
jo
nop
push
pop
shrl
dec
lcall
xchg
loope
cmpsl
jbe
cmpsb
sbb
mov
jb
lret
jne
daa
fidivs
jecxz
dec
and
adc
ljmp
mov
sarb
push
sbb
inc
mov
hlt
pushl
add
push
in
xchg
sub
push
les
loope
sbb
mov
fdivrl
cmpsl
mov
xchg
cmp
int3
arpl
add
test
outsb
mov
dec
cmpsb
and
fstpt
mov
jno
or
add
mov
and
int
roll
mov
bnd
data16
xor
sbb
push
ljmp
jmp
ficomps
push
mov
mov
ljmp
js
pop
out
pusha
mov
cmp
repnz
dec
mov
enter
out
out
das
shr
cmpsl
lcall
pop
imul
mov
sbb
lahf
outsl
call
test
xchg
jae
loopne
adc
mov
xchg
sub
mov
subl
shrl
popa
clc
cmpb
push
data16
xor
data16
inc
arpl
ja
jbe
das
outsb
rcl
std
and
fsubrl
cld
mov
out
popa
mov
jecxz
gs
fisubs
loopne
es
adc
fnstcw
dec
rdpmc
cli
cmp
flds
jno
fistl
sub
and
fstpt
test
insl
sub
mov
dec
mov
fbld
fidivl
lea
dec
out
loop
mov
insl
add
jl
movsb
imul
in
lea
mov
add
arpl
and
and
dec
int
xchg
or
ss
movsb
cmp
push
dec
out
movsb
into
mov
rorl
pushl
scas
aas
mov
jecxz
and
cmp
mov
lock
pop
fldt
rorb
xchg
insb
sub
mov
mov
rclb
aas
dec
mov
xchg
dec
or
rcrl
sbb
and
or
inc
in
dec
les
in
in
lret
xor
push
daa
jp
push
lahf
imul
push
stos
mov
adc
fldl
jecxz
pop
xor
pop
ficoms
mov
fsubs
dec
pop
pushf
aaa
scas
rcrl
cmp
mov
sub
mov
shl
inc
scas
jp
fimull
sbb
in
cmp
sub
lcall
mov
in
sbb
int
pop
jbe
mov
jge
adc
xor
lods
call
xor
mov
cmpsb
outsb
adc
or
mov
movsl
lds
ret
sub
stos
sub
push
xchg
lds
icebp
insb
mov
jne
adc
js
and
mov
cmp
pop
movsb
cmpsl
test
mov
das
icebp
je
lahf
pop
out
aas
outsb
aad
xchg
pop
sub
sub
xor
js
fldt
adc
dec
sbbl
and
mov
movsb
dec
push
js
call
fcomp
ljmp
mov
inc
scas
fmull
adc
test
push
dec
pop
mov
cld
out
test
cld
push
sub
in
lret
and
add
orb
pop
cmp
push
jp
mov
inc
stc
mov
push
je
mov
pop
mov
out
fnstsw
jmp
cmp
jo
test
lret
lods
xor
jbe
dec
sbb
aas
movsb
ret
imul
mov
add
push
add
and
sbb
lcall
mov
xchg
outsb
and
adc
mov
dec
push
int3
jle
ja
add
xchg
insl
or
in
mov
testb
push
push
fs
mov
inc
test
cmpsb
ljmp
int3
cwtl
add
fsubrs
inc
lds
jbe
lret
shl
adc
mov
jl
fsubrs
jno
mov
cmp
mov
mov
or
cmpb
add
mov
push
ljmp
ja
aad
movsb
inc
pop
cmp
fidivs
mov
cmp
push
cwtl
mov
cmp
pop
dec
push
dec
pop
mov
sub
sub
dec
fdivs
inc
push
faddl
outsl
movb
mov
test
xchg
jmp
dec
lahf
push
lods
shlb
std
push
cmpsb
test
mov
sti
nop
insb
mov
pop
insl
inc
mov
movups
push
jle
or
pop
mov
pusha
jno
fidivl
adc
xor
lods
gs
jo
unpcklps
inc
jmp
addl
fisubrl
js
push
ljmp
lcall
out
mov
ret
xor
in
mov
and
xchg
pop
jg
and
jb
push
movsb
in
and
xor
pop
fsubs
into
sbb
in
jb
aam
pop
xchg
cltd
xor
jmp
mov
sbb
loope
popf
scas
fidivs
scas
mov
or
fisubs
imul
or
mov
xchg
cmp
xor
xchg
and
inc
cmp
aam
in
rcrb
push
fnstenvs
add
aam
lods
mov
jle
gs
sbb
mov
ror
push
mov
jbe
mov
cmpsb
lret
cmpsl
jle
aam
sub
stos
mov
adc
insl
jge
mov
xor
lods
rcl
jecxz
into
daa
inc
dec
aad
ret
push
or
cmpsl
xchg
mov
mov
add
xchg
jb
and
setp
sahf
push
xchg
sbb
xchg
inc
sti
call
mov
jp
jl
jbe
cmc
sbbl
cli
outsb
lock
pusha
stos
push
sub
enter
jg
outsl
daa
sbb
or
adc
rcll
js
inc
push
pusha
mov
cmp
es
push
icebp
mov
xchg
outsl
lds
inc
dec
xchg
xchg
jecxz
cmc
out
sub
das
ss
scas
pop
xchg
int
jecxz
lods
xchg
push
cmp
pop
mov
inc
xchg
scas
test
in
mov
dec
mov
and
inc
mov
and
mov
jge
lds
divl
mov
cmpsb
sbb
add
dec
lock
inc
push
mov
dec
fwait
add
pushf
dec
hlt
enter
mov
inc
push
and
arpl
inc
sbb
mov
or
xor
ds
jl
dec
loop
sbb
shrb
fnsave
push
jmp
xchg
jae
orb
das
aaa
push
gs
or
jbe
dec
dec
scas
mov
insl
jb
mov
sbb
mov
add
loop
repz
lret
sbb
das
and
sahf
fcoms
stc
push
imul
imul
faddl
cmp
std
and
shlb
imul
cmp
test
lock
mov
cmp
fadd
shr
ja
pop
outsl
jmp
or
cmp
sbbb
inc
jge
data16
push
or
imul
js
repz
je
pushf
add
lcall
mov
stc
lret
push
imul
lock
lret
cmp
pushf
pop
jmp
jecxz
or
add
clc
aaa
xor
pop
jns
mov
into
popa
add
cld
test
cmpsb
mov
mov
roll
pop
dec
jecxz
std
in
fwait
aad
adc
insl
mov
insb
iret
xchg
lret
mov
in
fiaddl
es
sbb
jbe
std
jg
test
mov
dec
add
jg
push
inc
mov
fstpl
pop
push
mov
xor
xchg
popa
cmp
imul
jbe
adc
jg
in
daa
loope
aas
push
ret
push
mov
scas
xor
xchg
adcl
std
xchg
out
xchg
xchg
xchg
call
or
lcall
cmp
xchg
arpl
insb
pop
leave
mov
jg
fidivl
push
test
jle
xor
sub
sub
jne
or
ja
aad
pop
xor
cmpb
push
jns
or
dec
xor
fldt
mov
or
sub
sahf
mov
push
lret
xchg
lock
rol
movb
sbbl
sti
sub
ss
test
fwait
out
mov
mov
das
clc
iret
fsubl
sarb
pop
aas
mov
mov
fldcw
arpl
pop
mov
es
cli
xchg
popa
ljmp
mov
cmpsb
shrb
cmp
push
add
loopne
mov
cmp
mov
pusha
dec
cmp
mov
mov
pop
mov
fucomp
out
stc
and
cmpl
popf
add
shlb
outsb
jl
dec
add
push
inc
je
fs
and
test
inc
add
in
push
jbe
int3
jg
sbb
fsubrp
lret
add
mov
sub
jge
and
test
inc
test
into
add
cld
add
dec
cmp
jp
push
shll
test
decb
add
daa
pop
add
aaa
dec
arpl
add
cmp
in
andl
or
xor
rcrl
mov
cli
push
mov
shrl
jo
mov
into
inc
jne
xor
test
jns
inc
mov
iret
out
stos
inc
xchg
les
adc
push
add
lahf
clc
sbbb
mov
push
mov
xchg
sti
fsts
andl
mov
ja
ret
rcl
sbb
mov
cwtl
pop
adc
push
int3
jb
or
imul
sbb
lahf
andb
inc
aas
cmpb
or
pop
outsb
lock
cmc
xor
and
sti
sub
jg
jno
push
sbb
mov
cmpsl
mov
daa
mov
ret
push
icebp
out
fldcw
add
lret
ja
mov
jno
sbbl
mov
pop
mov
push
std
jp
cwtl
imul
add
cmp
loop
lret
mov
repnz
pop
lock
mov
lret
pop
divb
imul
jge
pushf
cmp
loopne
movsl
sbb
add
mov
shll
jns
mov
nop
and
lods
sbb
lock
sub
fldenv
fbstp
pop
loop
fwait
xchg
mov
mov
xor
mov
mov
fsubr
fnstsw
lahf
xchg
cld
sbb
sbb
aam
dec
pusha
sarb
repnz
fisttps
jl
mov
les
or
ret
sti
push
pusha
cli
or
dec
into
fwait
jno
addb
adc
cvtdq2ps
add
mov
mov
sbb
addr16
pop
test
and
ret
loop,pn
jo
pop
mov
xchg
dec
inc
add
cmp
repnz
add
es
adc
out
mov
and
xchg
dec
pop
jmp
shll
xor
jns
je
jno
xchg
inc
imul
repz
dec
xor
subl
mov
dec
sub
out
cmpsl
negl
orl
mov
test
jnp
push
cli
xchg
sub
adc
movsb
std
cmc
cmp
add
ljmp
les
mov
inc
xchg
fcoms
xor
xor
push
roll
inc
movsl
sub
test
push
fldenv
cmp
or
in
jmp
mov
aad
inc
lahf
push
out
jl
lahf
push
pushf
push
mov
add
jns
std
dec
fistpl
aam
pusha
subb
push
cs
xlat
push
sahf
mov
jge
mov
mov
ss
or
mov
push
adc
in
int3
jae
or
insb
ss
jg
cmp
cmp
mov
scas
xchg
imul
lret
mull
aad
popf
add
in
test
ja
in
sahf
jle
add
add
xor
sahf
or
push
adc
sub
dec
shll
rcr
and
out
dec
ljmp
fidivs
rclb
fbld
cltd
mov
jne
xor
jmp
int
ljmp
mov
mov
shl
movsb
pop
fcomps
add
fimuls
jne
or
adc
cmpsl
lods
hlt
mov
sbb
rcrl
sbb
mov
in
mov
shrb
cmp
pop
dec
push
ss
xchg
imul
mov
and
and
and
jp
out
lret
ds
aam
or
xor
and
push
mov
mov
jno
push
daa
test
cmpsb
mov
cltd
fldenv
out
mov
movsb
mov
jle
jo
fstl
mov
mov
ds
jo
xchg
xor
pushf
in
aam
mov
mov
pop
jno
or
js
jbe
jo
pop
xchg
and
jge
js
xlat
pop
push
dec
call
jp
push
mov
lcall
loope
movsl
cmp
jmp
inc
rcl
cmpsb
cmp
mov
adcb
or
out
sub
inc
jno
rcll
mov
xchg
pop
push
push
iret
je
arpl
jg
jle
sbb
mov
or
cltd
je
jb
mov
push
mov
lahf
xchg
adc
sbb
jbe
ret
aad
js
test
inc
or
mov
stc
nop
sbb
sub
sub
lock
adc
inc
inc
out
notb
test
dec
push
mov
clc
lock
popa
in
fstps
push
call
js
push
lea
ljmp
sarb
scas
leave
xor
cmp
add
jno
cmp
push
and
pop
push
sahf
and
in
aaa
mov
enter
outsb
lock
scas
pop
outsb
roll
and
inc
je
adc
sbb
fimuls
jecxz
push
cltd
cmpsl
sub
adc
ja
dec
stc
loope
ds
sbb
icebp
jnp
mov
or
jnp
out
xchg
inc
lret
bound
xlat
outsb
mov
mov
andl
shl
sbb
lahf
push
ds
inc
sbb
jecxz
jo
cs
pop
sub
cmp
or
add
xor
pop
test
shll
ficoms
lods
add
cmp
mov
sti
xchg
jbe
and
repnz
insl
or
jns
loope
ss
cmp
push
mov
ljmp
fsubrl
call
fmuls
adc
repz
jne
mov
dec
xchg
xlat
push
inc
popa
scas
lock
fdivrl
xchg
mov
sar
xor
push
fsubp
mov
xor
data16
aaa
outsb
out
lret
dec
adc
sub
das
adc
mov
rorl
push
jp
mov
cli
or
add
add
xchg
dec
xor
arpl
push
shll
add
ret
out
cmpl
jb
les
mov
xchg
xchg
sbb
push
xchg
sbb
fwait
xchg
push
dec
fs
mov
and
aam
popf
test
push
stos
fs
xchg
and
stos
roll
scas
pop
inc
lds
stos
ret
sub
xchg
outsb
ljmp
xchg
jb
mov
push
test
xlat
dec
sub
cmc
adc
jae
lret
xor
inc
adcb
jl
push
and
push
add
inc
test
add
repz
mov
fs
inc
fdivrl
loopne
inc
inc
and
inc
fwait
mov
rcrl
push
pop
insb
and
mov
mov
inc
cltd
pusha
push
ja
ret
or
and
xchg
mov
push
adc
inc
jg
ljmp
jge
stos
push
inc
lods
test
adc
sbb
test
arpl
push
in
imul
adc
mov
dec
std
outsb
adc
inc
fchs
inc
aad
dec
fisttps
push
arpl
sbb
rol
lods
mov
pop
jp
or
test
cmp
dec
in
adc
mov
movsb
addr16
dec
out
xchg
cltd
mov
lret
enter
movsb
arpl
pop
sbb
adc
pop
add
scas
cld
xchg
icebp
sub
cmp
dec
dec
ret
ds
xor
leave
push
or
gs
repz
sbb
mov
pop
or
mov
stc
outsl
ss
insb
mov
push
inc
das
add
icebp
mov
xchg
movswl
cmp
push
rcrl
jne
sbb
divl
fucomi
lods
or
in
inc
aaa
jno
mov
ror
mov
and
sbbb
icebp
push
repnz
inc
test
add
ror
lret
mov
les
inc
ficoms
push
lret
gs
xlat
dec
pop
or
mov
notb
inc
dec
jmp
ds
aad
jg
rol
out
gs
out
scas
jo
or
clc
or
inc
xor
ja
icebp
dec
loop
push
into
loope
add
test
movsb
adc
adc
lods
and
push
push
int
sub
inc
xor
cmp
lds
subb
in
jge
jmp
hlt
xlat
arpl
fdivl
mov
pop
out
out
cli
ja
jecxz
jmp
aad
xchg
mov
ret
mov
jns
jae
dec
xchg
repz
hlt
inc
push
dec
das
repnz
mov
push
out
mov
mov
scas
loopne
sub
addl
pop
mov
or
push
loopne
or
roll
dec
filds
jns
fldenv
mov
mov
incb
clc
sahf
mov
xchg
popa
jg
sbb
ja
push
ja
out
aas
or
jnp
out
xor
cmp
xchg
push
pusha
inc
fldenv
dec
out
add
insl
add
fs
sub
testb
sub
push
mov
cmpsb
int
das
or
es
adc
mov
cmp
and
dec
mov
mov
fldt
js
and
mov
push
sbb
std
mov
pop
jns
add
xchg
mov
in
mov
stc
rcl
xchg
push
in
loop
mov
je
xchg
ret
dec
sub
lret
mov
clc
mov
pop
adc
notb
mov
mov
pop
adc
dec
jo
adc
or
cmp
imull
adc
jmp
sbb
divl
insl
add
cmp
pop
pop
lret
push
push
ds
daa
lods
js
adc
and
cmp
xor
cltd
adc
cs
pop
inc
ljmp
push
in
lods
mov
mov
pushf
cmp
add
jl
aas
inc
fs
adc
xorb
mov
mov
in
pop
rcrl
push
push
imul
cmpsb
xchg
dec
adc
dec
add
sar
mov
lahf
stos
cltd
jle
leave
mov
outsb
add
push
xchg
or
mov
shlb
cmp
test
jb
movaps
gs
lds
in
out
mov
inc
xor
push
add
fdivl
into
cmc
mov
push
and
cmp
and
dec
dec
in
jae
or
cs
inc
jns
lock
into
sbb
add
sbb
inc
push
insl
rclb
movb
daa
xchg
inc
insl
jns
push
loope
sbb
mov
sti
push
pop
out
mov
cmp
gs
push
out
or
xor
fldl2e
incb
jge
jb
inc
cmp
xchg
sbb
fisttpl
mov
js
sub
imul
cld
incb
push
daa
test
xor
ja
mov
inc
sbb
sahf
sub
stos
xchg
push
push
stos
fidivl
xchg
rol
inc
adc
and
insl
dec
or
mov
jns
ror
jnp
mov
cmpsl
jne
mov
pop
adc
mov
cmp
cmpsb
sbb
jp
cmp
cmp
shrb
sbb
mov
sub
pusha
mov
dec
repz
arpl
gs
decl
cs
cwtl
in
rol
lret
mov
aad
xchg
idivl
lods
cltd
popf
and
and
add
push
xchg
pushf
cmp
mov
out
inc
sti
xchg
mov
xchg
xor
push
iret
icebp
pop
repz
or
mov
push
jo
jb
pop
sub
aaa
adc
inc
fldenv
dec
cmp
into
rclb
ss
stos
cmp
lea
push
test
ficoms
fnsave
not
sub
pop
and
lcall
sub
pop
or
xor
push
add
jecxz
loopne
shl
dec
out
jo
sbb
cmp
andb
mov
push
jl
sub
jbe
xor
movsb
and
sbb
or
xor
pop
dec
push
mov
sahf
in
std
inc
int3
xor
icebp
cmp
push
sti
cmp
addb
lock
dec
pop
and
xchg
xor
push
add
fisubs
or
js
fwait
test
loopne
bound
repz
stc
and
xor
xchg
mov
ret
adc
mov
dec
icebp
fistpl
mov
mov
das
leave
sbb
sbb
mov
iret
shll
push
iret
xlat
in
aam
lock
xchg
imul
push
inc
loop
xchg
mov
inc
int3
push
sti
adc
in
push
in
shl
mov
xor
pop
int3
inc
int
mov
sbb
in
ljmp
add
cmp
lods
mov
jb
xchg
add
sbb
lahf
mov
cmp
push
adc
mov
testb
adc
xor
jmp
mov
and
pop
movsl
pop
sahf
rolb
or
icebp
push
ljmp
imul
sahf
mov
sarb
mov
xchg
les
sbb
or
popf
pop
adc
xchg
lds
xchg
adc
mov
xor
sbb
sahf
adc
add
aad
shr
xchg
xor
repz
or
inc
mov
add
lods
out
loop
in
adc
imul
loopne
or
jmp
pop
aam
int
push
jp
jge
pop
mov
sahf
dec
add
imul
mov
jno
jg
lods
stos
and
mov
lds
xor
inc
dec
pop
inc
xchg
stos
fld
sbbl
fnsave
jle
and
xlat
mov
push
mov
rorl
repnz
pop
mov
adc
mov
bound
mov
stos
ss
inc
inc
pop
ja
mov
mov
pop
xor
xor
add
adc
sarl
sti
add
adc
push
push
shrb
and
repnz
out
rcll
jmp
inc
fstpt
adc
xchg
add
xor
bound
jge
in
popl
dec
mov
adc
cmp
adc
dec
dec
push
cmp
out
shrb
mov
addr16
idivl
add
jl
push
vcmpss
inc
jge,pt
cmp
leave
test
lcall
xor
arpl
in
sub
xor
daa
dec
loope
repz
out
loope
repz
or
inc
push
jns
mov
add
je
xchg
dec
mov
jbe
cltd
andl
out
push
push
pop
mov
inc
or
adc
lods
inc
inc
fstl
int3
loopne
stc
fs
inc
rcrb
pop
and
aad
into
dec
das
mov
push
mov
vmaxsd
loop
into
dec
mov
movsl
jmp
gs
jb
fs
mov
je
adc
dec
mov
dec
stos
popf
testl
adc
repnz
push
lret
sti
jno
dec
sub
dec
aam
push
idiv
fiadds
in
mov
and
in
data16
fwait
pop
cmp
xchg
pop
push
push
repz
cs
push
xchg
fisubrl
mov
mov
ret
insb
push
push
addr16
nop
pop
xchg
lds
into
rolb
popf
add
pusha
mov
add
cmp
xlat
popa
cmp
outsl
sbb
push
xchg
pop
mov
xchg
sub
add
pop
hlt
sub
add
jge
mov
outsb
inc
mov
lea
lahf
incb
arpl
dec
movb
aas
xchg
sub
cmp
ret
inc
cld
call
test
mov
push
add
rcl
shl
or
jne
fildl
xor
movsb
jecxz
mov
inc
stos
in
rcrb
mov
enter
lcall
mov
mov
aaa
xchg
xchg
icebp
cld
xchg
dec
xor
sti
ljmp
aad
pop
scas
inc
pop
arpl
js
fldcw
sbb
pop
fldenv
scas
pop
lcall
pop
insb
adc
notb
or
ss
push
mov
cmp
test
cmp
jecxz
daa
cwtl
ficompl
outsl
cli
xchg
dec
iret
fwait
repnz
jmp
stos
xchg
notb
stos
inc
sub
push
std
arpl
inc
into
push
clc
test
adc
addb
mov
aaa
xchg
pop
std
cltd
cmp
xchg
xor
cmp
ss
pop
pop
mov
mov
insb
mov
clc
or
shl
out
xchg
into
mov
orb
fsubs
mov
or
mov
lock
test
ret
decb
outsb
jne
xlat
xchg
imul
popa
jbe
push
call
mov
call
push
push
inc
clc
jnp
inc
stos
jp
pop
cmpsb
fdivrl
xor
mov
arpl
sahf
aad
nop
sub
std
loopne
cmc
adc
or
add
and
cmp
lahf
in
jnp
jmp
pop
in
dec
scas
mov
flds
rcll
push
repz
jb
pushf
movsl
sbb
movsb
sarl
xchg
repz
mov
lret
or
sarb
mov
fsubrl
stos
pop
cmpsl
xchg
dec
add
out
dec
pop
and
es
jae
cmp
or
arpl
xchg
xchg
and
mov
pop
loope
lea
mov
addl
and
jmp
sahf
in
sar
hlt
xchg
adc
mov
popf
mov
jmp
mov
add
aam
in
nop
hlt
mov
test
jge
daa
mov
hlt
inc
sbbb
divl
dec
sub
jnp
lods
pop
push
icebp
or
scas
add
pop
outsb
mov
push
cmp
popa
xor
pop
repz
mov
add
fnstenv
fwait
xor
lret
sti
test
fsubs
xor
js
push
fcoms
clc
push
push
push
xchg
xchg
aad
lods
inc
shrl
into
ljmp
std
inc
inc
or
ljmp
popa
push
mov
mov
pop
popf
mov
jo
push
jmp
sbb
cld
adc
adc
and
jecxz
jmp
or
out
xor
in
divl
repnz
jb
cltd
pop
push
adc
arpl
loope,pt
cld
lret
es
pusha
test
sub
mov
shr
insb
mov
js
ja
sbb
iret
jecxz
dec
pop
pop
jp
andl
cwtl
sub
leave
jge
sub
add
cmc
mov
add
movsb
cmp
rol
jge
lret
mov
and
xor
sarl
scas
cmp
add
adc
jmp
cwtl
push
insl
icebp
nop
mov
jg
jno
xor
fcoms
push
adc
insb
add
cld
nop
jo
loop
mov
fsubrp
mov
dec
aam
ret
dec
pop
cmp
aaa
in
out
movsb
adc
dec
sbb
sub
aaa
push
mov
test
fs
sub
pop
outsl
clc
and
jb
xor
add
push
mov
add
orb
cmp
inc
cltd
inc
xchg
push
ja
mov
shrb
xchg
in
js
in
iret
cmc
mov
cmp
adc
enter
jp
jecxz
shrb
leave
imul
das
imul
add
push
fsubrl
mov
in
dec
addr16
je
fwait
xor
sub
xchg
xor
cmp
pop
mov
lcall
enter
iret
imul
jecxz
jnp
movsl
mov
imul
add
xchg
sub
add
xlat
fwait
call
push
enter
sub
mov
mov
pop
jp
int3
cmp
lahf
push
sbb
pushf
push
jae
pop
cmp
push
add
and
mov
cli
dec
xor
orl
sti
mov
adc
das
mov
dec
sub
jp
cmp
lret
fisttpl
ss
and
lds
cmp
xchg
sbb
dec
push
lret
push
iret
jo
aaa
lea
scas
shlb
pop
imul
hlt
das
fdivrs
mov
scas
ss
sbb
test
mov
int
xchg
sub
sub
pop
xchg
inc
dec
rcrl
xor
sbb
mov
mov
xchg
lods
in
lret
xchg
ja
not
jl
adc
push
xchg
cli
inc
dec
jae
dec
sub
adcb
pop
pop
jno
xchg
pop
lahf
sub
pop
out
or
push
mov
jne
xor
outsl
call
dec
imul
in
test
mov
andl
pusha
or
lret
jnp
jecxz
adc
mov
loope
sahf
xor
loope
mov
scas
dec
xor
rorb
shrb
aam
pop
rcrb
mov
in
arpl
jmp
cmpsb
and
jbe
outsb
mov
iret
js
push
mov
sti
iret
and
fdivs
popf
cmc
jmp
and
std
add
dec
mov
dec
sub
push
test
or
cmc
adc
mov
jne
std
in
adc
ret
sub
and
push
fdivrl
call
push
inc
and
pop
adc
adc
clc
add
inc
push
lahf
adc
out
push
mov
pushf
sti
inc
mov
xchg
pop
fimull
mov
test
sahf
adc
push
pop
sub
push
outsl
xor
sub
sbbl
lock
rorb
enter
loop
cmp
inc
pop
ljmp
aas
xor
int3
xchg
push
mov
outsl
mov
mov
push
or
insl
mov
aad
mov
sar
pop
xor
xchg
stc
insl
jmp
mov
sub
xor
mov
scas
sub
or
dec
pop
out
or
iret
das
sbb
inc
cmpsl
adc
inc
sarl
jnp
pop
xchg
lea
mov
mov
push
add
dec
push
add
mov
mov
dec
xlat
jb
inc
scas
inc
mov
pop
push
lods
inc
lcall
out
jae
xchg
sub
mov
stos
nop
xlat
xchg
inc
mov
cwtl
insb
xchg
outsl
sbb
shlb
add
ds
pop
fldenv
stos
insl
enter
mov
insb
add
cli
mov
push
or
mov
mov
jb
iret
subb
repz
aas
lds
clc
pop
dec
mov
mov
andb
jb
sarb
int3
jge
jns
pop
fwait
add
sbb
pop
test
jne
outsb
mov
mov
push
and
je
popf
mov
lahf
xchg
cmp
push
ljmp
cmp
sub
aad
xchg
mov
je
ljmp
sub
enter
repnz
dec
fisubrl
pop
aaa
dec
shrl
sbbb
adc
xor
add
jbe
test
xor
mov
in
in
mov
lods
bound
xor
cmp
in
jp
pop
jb
nop
imul
mov
add
shll
pop
mov
lret
sub
movsb
cld
inc
add
sarl
repnz
jg
lods
pop
adc
xor
xchg
inc
lock
fisttpl
fcoms
fldenv
iret
sbb
ljmp
in
daa
inc
dec
lret
andb
mov
mov
addl
loop
xchg
lods
adc
add
out
mov
fs
insb
mulb
inc
xor
add
lods
ljmp
out
jle
aaa
or
std
xchg
jno
mov
lcall
and
enter
cmc
or
sub
and
sub
sub
repnz
cmp
dec
mov
push
imul
cltd
roll
push
push
sahf
adc
mov
add
sub
sbb
and
enter
or
popf
fnstcw
fcomps
xchg
mov
cld
sub
cs
jmp
orl
inc
test
mov
push
repnz
jg
je
enter
mov
mov
sarb
dec
fmuls
xor
adc
pop
ret
cli
fbld
imul
sub
fistpl
jb
ds
dec
xchg
ss
push
cmp
xchg
insb
jle
data16
pop
rclb
js
and
dec
fwait
insb
idivb
push
stos
cmpb
xor
mov
xchg
jo
and
sub
cltd
repnz
clc
pop
lahf
call
and
push
leave
pusha
out
mov
jb
jae
sbb
sbb
js
hlt
push
jmp
repnz
push
adc
mov
xlat
cmpsl
aad
fs
push
mov
push
jnp
mov
push
inc
pushf
ret
jl
enter
dec
inc
cmp
push
push
out
rcrl
out
mov
pop
icebp
outsb
push
test
shlb
mov
jb
in
in
mov
hlt
pop
and
xchg
sub
icebp
xchg
xlat
je
xorl
pop
scas
inc
xchg
push
jbe
insb
loop
cmp
add
xchg
testb
jno
cwtl
push
punpckhdq
fwait
xor
mov
pop
outsb
fwait
sarl
mov
test
xor
mov
adc
mov
mov
mov
lahf
iret
enter
pop
xor
ss
add
mov
shrl
inc
pushf
adcb
xor
aas
mov
fildll
mov
jae
or
push
or
inc
cmp
push
push
push
rcrb
and
lds
sbbb
enter
pop
sub
cmp
sbb
xchg
and
sbb
repnz
dec
jne
aaa
push
jmp
out
nop
daa
and
mov
xor
idivl
cs
inc
sahf
pop
mov
push
fs
movl
xlat
lret
or
xchg
shr
mulb
and
mov
cmp
in
push
push
int3
xor
pop
loopne
cmp
pop
int3
loopne
fdivrp
xchg
adc
jge
mov
push
push
out
sbb
out
mov
je
mov
test
lret
and
push
jmp
lret
fdivs
or
pop
scas
pop
push
in
inc
cmp
pop
mov
mov
add
cld
adc
ret
jp
xor
or
xlat
push
adc
push
pusha
ror
sbb
outsl
subb
push
imul
imul
adc
mov
pop
fcoms
cmp
cld
cmp
and
xchg
push
or
lods
inc
aaa
xor
mov
lea
fimuls
mov
sahf
ret
add
jecxz
cmpsb
inc
adc
sti
fstpt
insb
add
and
jl
repz
mov
sbb
test
jecxz
aas
cwtl
clc
cli
frstor
cmpb
test
lods
or
sub
mov
xor
es
faddl
or
jle
xor
movsb
jecxz
add
inc
xor
dec
test
scas
jns
pop
nopl
xor
cmp
or
mov
pop
in
push
popf
push
loop
sbb
stos
xchg
aam
xchg
rcrl
ss
out
addl
cmp
inc
test
cmp
dec
mov
lods
shll
test
lea
mov
dec
jge
jns
sbb
idivb
push
dec
pop
ficomps
pop
fadds
cmpsl
jp
push
cmp
gs
fnsave
add
xchg
add
cli
xchg
sub
hlt
popf
mov
or
mov
jbe
pop
in
mov
mov
insl
sub
cmp
aad
pop
adc
pop
stos
mov
add
pop
and
cmpsl
jnp
sub
test
pop
or
sti
std
je
and
fisttps
push
jg
inc
pop
daa
sub
addr16
popl
and
pop
rcr
incl
test
aam
mov
imul
out
push
push
shrl
mov
repnz
and
mov
inc
push
mov
ja
push
fdivs
mov
testl
shlb
inc
pop
nop
bswap
jmp
pop
cmc
rcr
aas
pusha
mov
jecxz
sub
dec
fldcw
push
shr
hlt
jnp
mov
jns
out
mov
loope
mov
bound
sbb
pushf
dec
ret
lods
pop
insl
mov
dec
xor
addr16
xor
in
push
pop
adc
sbb
jg
fildll
xchg
xor
js
ljmp
jno
push
mov
leave
fcomi
into
inc
mov
lret
shrb
fimuls
in
sahf
sbb
shr
or
inc
sbb
push
push
jo
sub
mov
ret
movsl
je
sbb
in
adc
repnz
shl
or
sub
daa
mov
js
scas
les
sub
push
jmp
test
pop
and
pop
pushf
xchg
in
jg
mov
mov
push
jmp
dec
mov
mov
pop
xor
jmp
push
out
and
jp
cmp
xchg
push
cmp
add
aad
imulb
lret
inc
fisttpll
loop
jmp
cmp
dec
add
jb
cltd
div
insb
loop
loope
fwait
sbb
or
mov
movsb
fisttpl
xchg
stos
out
popa
xor
adc
dec
mov
xchg
xor
test
leave
mov
lret
mov
imul
pushf
bound
lods
pusha
ja
jo
push
test
jecxz
adc
aas
nop
fiadds
scas
std
jmp
cs
stc
jb
mov
xor
aad
cmp
jmp
nop
adc
jae
push
push
sti
int
mov
xlat
repz
aad
sbb
repnz
xchg
test
push
std
test
aaa
ljmp
test
je
jg
insb
lods
xchg
outsb
stos
jne
test
push
cmc
js
or
or
mov
adc
xor
shll
push
push
cmp
call
sub
icebp
addl
cmp
jnp
lcall
xlat
mov
push
ret
dec
fildll
mov
lret
nop
sbb
mov
pop
xor
fwait
jns
faddl
cltd
mov
pop
pop
fmul
lcall
dec
test
sbb
mov
and
idiv
lods
scas
or
xor
nop
andl
dec
dec
add
sub
mov
or
sahf
icebp
sidtl
mov
sahf
leave
cmp
pop
hlt
push
dec
aam
mov
es
pop
pop
inc
dec
fdivs
icebp
mov
inc
paddb
icebp
xchg
cltd
cmp
out
mov
mov
and
ss
pop
inc
int
xlat
push
jo
leave
xor
push
lods
inc
push
jns
inc
outsb
std
pushf
add
add
adc
aad
test
stos
addr16
scas
adc
add
test
daa
adc
cltd
inc
test
ljmp
cs
xchg
out
mov
xor
mov
movsb
push
dec
xchg
pop
icebp
ret
gs
cwtl
dec
js
dec
call
cli
inc
sub
testb
mov
je
pusha
lds
gs
cmc
pop
outsb
dec
test
cmp
pop
xchg
mov
daa
enter
xlat
pop
imul
push
dec
std
loop
pushf
pushf
push
aad
xchg
xor
jl
aaa
push
int
pusha
mov
push
mov
adc
sbb
lcall
les
push
and
mov
sub
and
lods
aam
leave
sbb
adc
inc
subb
jl
push
fstl
or
divl
jge
push
sub
sub
add
mov
pop
cwtl
xchg
cltd
sbb
shr
jbe
pop
testl
jp
lcall
rolb
adc
jp
fs
inc
pop
add
fdivl
inc
test
shlb
pop
pop
movsl
mov
push
mov
and
stos
jle
stos
test
stc
lods
push
cmp
adc
cmp
mov
cmp
outsb
fidivrl
adc
leave
add
rorb
xor
add
ret
popa
jge
dec
scas
repnz
das
mov
aam
lahf
mov
jg
fwait
push
fs
pop
fwait
xor
int3
arpl
mov
int3
cmp
pop
cmp
shrl
pop
scas
cltd
jns
js
insl
and
xchg
xor
xchg
jp
xor
jp
icebp
pop
adc
pop
icebp
js
xchg
adc
mov
mov
jno
movsb
mov
or
add
mov
lret
std
in
mov
sbb
lret
push
inc
cs
roll
fmuls
ficompl
cmp
in
lds
loop
and
xor
les
lret
jp
pop
lret
jb
add
inc
imul
and
orb
lahf
jge
jecxz
jmp
xchg
xor
push
mov
stos
inc
bound
cwtl
test
divb
pcmpgtd
jge
int3
das
or
push
sbb
lods
dec
adc
je
xorb
rorb
mov
mov
bnd
cpuid
fwait
push
xor
or
bound
fstpt
mov
nop
sub
jp
std
cmpsb
push
mov
push
sbb
testl
gs
ds
xor
shrb
ficoml
dec
add
shl
push
mov
sub
dec
xor
adc
dec
and
hlt
sbb
js
mov
xlat
cmc
push
push
add
dec
jbe
test
cmc
jg
subb
jle
rol
jmp
repnz
je
mov
test
push
in
idivl
xchg
inc
push
add
xchg
lahf
mov
mov
xor
pop
push
cmpsl
push
mov
jle
in
das
ficomps
stc
addr16
adc
xor
je
sahf
shlb
sahf
test
adc
mov
add
movb
mov
jp
and
in
mov
mov
sub
nop
sbb
mov
shrb
mov
cmp
pop
imul
inc
loopne
pop
push
fdiv
mov
and
and
add
dec
shll
stc
sbb
jmp
dec
cmp
adc
dec
mulb
mov
add
ljmp
mov
adc
sub
lds
sti
ss
mov
adc
cmp
jno
push
pop
test
movsb
cmc
push
imul
ds
out
insb
cmc
pushf
pop
cs
xor
sub
lret
scas
sub
and
mov
sbb
mov
sub
lods
sbb
mov
in
nop
mov
sbb
jp
xchg
sbb
xchg
mov
sti
arpl
push
popf
cmp
popa
stos
arpl
movsb
xchg
adc
sub
inc
js
out
sub
sbb
mov
xchg
inc
mov
ret
inc
add
shl
and
mov
pop
cli
push
in
inc
sub
xlat
push
sahf
dec
pop
jnp
outsb
xorl
leave
loope
mov
mov
mov
mov
push
aad
stos
cmp
repnz
and
inc
mov
inc
mov
incb
ds
xor
jae
pop
cmp
xchg
std
pop
sbb
inc
fsubrl
mov
mov
jg
mov
jbe
sbb
dec
sub
push
dec
mov
xor
pushf
popf
roll
rcr
xor
in
int3
mov
dec
int3
int3
aam
adc
pop
jge
out
lret
inc
cmc
ss
fwait
orl
mov
imul
outsl
cmp
movsb
cli
push
jg
into
xor
test
out
data16
sbb
bound
jg
push
leave
stos
adc
dec
cwtl
divb
pop
cli
aas
push
div
sbb
sub
adc
sti
mov
mov
pop
gs
iret
data16
mov
mov
mov
or
add
pop
add
dec
outsb
mov
sub
fwait
push
jbe
add
xchg
mov
jne
mov
rolb
cmp
mov
jg
std
xchg
cmp
sbb
std
add
cs
pop
mov
xor
xor
popa
mov
fsubl
std
xor
push
mov
out
jb
cmp
lret
pop
in
dec
jg
xchg
test
lea
movsl
sbb
pop
jle
lea
fiadds
mov
add
out
rcrb
popf
and
mov
pop
subl
inc
cs
into
into
loope
jns
dec
dec
push
sbbl
pop
xchg
into
mov
fsubl
mov
lods
ret
daa
and
xor
inc
inc
test
leave
aam
out
outsb
sbb
jmp
daa
fmuls
dec
aad
movsb
cmp
shll
sahf
sub
xor
xchg
mov
aam
aas
mov
cmc
bound
rorl
sbb
je
inc
xchg
push
xlat
outsb
mov
mov
clc
inc
push
rorl
and
fwait
iret
std
jmp
pop
adc
pop
jb
pop
rcrb
push
cmp
sbb
mov
push
pushl
insl
mov
inc
stc
mov
inc
push
shr
adc
cltd
or
jmp
pop
dec
stos
mov
scas
nop
add
jae
cmpl
pop
adc
inc
push
and
cltd
int
inc
cmpsl
adc
in
push
sub
mov
das
push
lock
in
insb
pop
and
mov
mov
inc
sbb
mov
dec
dec
rorb
inc
sti
shlb
addr16
pop
mov
mov
mov
dec
je
sub
arpl
xor
mov
jnp
test
int
pushf
out
add
push
mov
lock
insl
xchg
test
notb
test
fsts
imul
movsb
dec
nop
or
and
mov
xchg
mov
dec
or
addr16
repz
shll
aam
adcl
or
clc
xor
outsb
pusha
popf
xor
mov
push
pushf
idivb
scas
mov
sub
sbb
test
lods
test
inc
mov
nop
cpuid
pop
and
ret
in
pop
inc
imul
loop
sbbb
mov
pop
mov
inc
nop
mov
out
mov
or
ja
mov
aad
testl
inc
cmp
loop
xor
jb
push
or
imul
rcrl
xchg
jae
enter
adc
adc
jmp
roll
ss
and
push
movsb
push
rcrl
arpl
aad
or
mov
rcll
sub
and
fwait
in
jg
pop
repz
mov
jge
add
test
int3
sub
out
add
xchg
add
mov
cmp
int
loope
imull
push
negl
shll
jge
ret
popa
xchg
out
out
xchg
pop
nop
in
dec
sub
sub
ds
inc
les
xor
mov
cmpsb
insb
xor
mov
aad
mov
ret
xor
push
mov
dec
pop
repnz
xchg
xchg
sbb
movsb
cmp
test
loopne
repz
orb
inc
rolb
adcl
dec
loopne
in
add
add
ss
in
mov
mov
cld
xchg
lods
test
add
pop
mov
lds
mov
xorl
pop
jae
sub
jle
sub
fld
inc
in
rcrl
mulb
dec
mov
sbb
mov
pop
adc
cmp
cmp
inc
push
jnp
lods
faddl
lods
sub
jbe
cltd
add
xor
dec
mov
mov
add
popa
jbe
shl
push
mov
push
or
push
dec
pop
xor
fbld
daa
add
into
shrb
xchg
or
loopne
jmp
xchg
xchg
pop
xchg
mov
jecxz
xchg
sarb
add
mov
jne
cmp
jecxz
inc
dec
or
rcrb
lods
cld
adc
cmp
push
call
fsts
out
add
fists
in
or
idivl
daa
push
xor
xchg
cmc
psadbw
mov
lret
xchg
les
jno
lods
mov
repz
jp
or
jno
inc
cld
enter
nop
mov
dec
pop
scas
mov
mov
sbb
inc
push
and
inc
shll
pop
add
cmp
gs
mov
pop
test
adc
pop
cwtl
pop
hlt
je
mov
pop
push
ja
add
jbe
sahf
cs
scas
pop
inc
pop
inc
fcoms
fs
mov
fisttpll
push
outsb
xor
iret
loopne
push
vpavgb
cmp
js
sbb
nop
pop
int3
add
shr
out
mov
dec
mov
fistps
subl
iret
into
pop
test
test
sti
cmp
cmp
dec
shrl
repz
xor
in
fnstenv
int
xchg
cmp
push
add
dec
inc
mov
pop
sub
stos
mov
hlt
mov
andb
mov
fiaddl
daa
add
mov
movsb
fs
xor
std
sti
mov
gs
mov
cmp
addr16
sub
xor
gs
call
jmp
les
enter
cmpb
in
xchg
ljmp
fdivr
scas
or
sbb
push
or
pop
divb
loope
jecxz
jb
std
jbe
inc
ficoms
xchg
leave
andb
ljmp
xor
pop
jecxz
add
lret
inc
mov
incb
rolb
xchg
xor
xor
aaa
push
rcll
mov
and
dec
mov
iret
stos
imul
pop
mov
leave
cmp
je
sbb
jns
mov
out
sahf
add
push
nop
push
sub
fidivl
adc
jae
ss
pop
dec
shrb
fdiv
pop
dec
lock
xchg
mov
jns
add
call
xor
mov
adc
loope
pushf
test
lods
inc
scas
and
test
jg
loopne
inc
xchg
mov
gs
sbb
mov
jne
lea
fdivrl
rorl
push
pop
mov
in
add
mov
xor
in
sti
sbb
xchg
xchg
inc
stc
push
ds
dec
outsb
and
aad
aaa
push
xchg
or
into
cs
and
daa
repz
dec
lods
jp
imulb
ljmp
inc
inc
push
inc
push
rcrl
add
jns
lahf
outsb
std
push
jbe
aad
or
sub
pop
sub
sbb
dec
ds
out
test
outsl
push
cmp
ret
xor
mov
sub
fwait
xor
out
xchg
mov
idivl
jo
test
pusha
or
or
inc
lahf
cmp
stos
inc
push
das
sub
icebp
insb
jl
sub
cmpb
xchg
pushf
adc
loopne
cmp
sbb
inc
addr16
inc
xchg
jg
data16
enter
sbb
ja
mov
popf
aam
pop
mov
add
das
jb
cmpb
xor
sbb
xchg
xchg
push
push
sti
aaa
cmc
or
roll
add
add
lods
sub
andl
std
xchg
test
ret
sti
inc
call
scas
std
das
addr16
ja
or
stc
sar
fsts
dec
pop
push
bswap
mov
leave
pop
sahf
add
jbe
and
in
mov
mov
test
cli
push
pop
mov
cmc
push
icebp
mov
mov
and
inc
pop
es
and
dec
xor
out
ljmp
xor
lcall
in
clc
mov
xchg
outsb
repnz
sbb
inc
pop
push
add
nop
test
je
push
test
lret
xlat
ss
fnsave
fidivs
adc
negl
cmpsl
outsl
add
stos
cmp
ret
ret
test
jne
xlat
adc
cli
and
inc
pop
loope
int3
pop
pop
mov
out
cmp
adc
subps
mov
fimuls
dec
loopne
repz
dec
xor
data16
xchg
mov
sub
jb
test
mov
or
pop
test
dec
push
jae
or
movb
dec
sbb
lods
inc
fcomi
xchg
jnp
mov
xor
ljmp
cltd
xchg
lahf
mov
xchg
jp
pop
push
jae
and
inc
std
test
xchg
push
out
push
and
into
mov
xor
jmp
cld
xor
sub
dec
sub
nop
pmaxub
pop
push
jo
jmp
adc
mov
fildl
nop
mov
es
adc
jecxz
push
adc
mov
mov
in
sub
and
scas
mov
movsl
fmulp
xchg
pop
lret
sub
and
push
sti
add
and
ret
xor
out
jmp
sbb
mov
cmp
pusha
out
or
adc
jns
xchg
jno
sbb
test
cmp
mov
adc
push
repz
add
cltd
sub
mov
das
mov
nop
jo
int3
cmp
div
lea
sahf
jge
xchg
sub
aas
movsb
out
pop
nop
inc
movsb
dec
sub
cmc
ja
and
scas
cmp
push
jg
xchg
leave
data16
lds
mov
testl
jns
aas
aad
mov
insl
sub
mov
xor
sbb
addr16
cmpsl
out
mov
push
jbe
adc
inc
dec
in
dec
cmpsl
jle
xor
rep
shl
sub
add
and
cwtl
out
push
xor
and
imul
sbb
mov
and
fcoml
movsl
sub
loopne
popa
and
xlat
sub
pusha
lret
outsb
fbstp
mov
dec
addr16
std
jg
mov
fisubs
in
push
sub
sbb
sub
pop
movsb
xor
jnp
and
fsubl
aas
ljmp
push
insb
ds
push
jbe
sbb
add
imul
adc
scas
roll
mov
scas
push
mov
sbb
mov
sub
sbb
jnp
std
mul
mov
push
sbb
cmp
or
adc
in
dec
sub
mov
sub
mov
aas
add
mov
cmp
outsl
pop
lods
xchg
jge
inc
cwtl
daa
push
sahf
pop
xor
mov
pop
sbb
dec
jnp
xor
aam
mov
insl
fiadds
sbb
and
pop
pusha
fisubrs
cwtl
stos
xchg
das
mov
arpl
shl
aaa
add
stc
orb
pop
sub
mull
sub
and
dec
dec
movsl
mov
loope
xchg
mov
sub
jae
or
loope
lds
xor
xlat
movsb
ret
sbb
in
inc
andb
hlt
push
push
mov
das
cmp
sbb
pop
aad
cmp
push
lods
add
pop
push
stos
xor
sbb
jp
xlat
cmpsl
xor
pop
movsb
sbb
pusha
push
pop
fistpll
mov
pop
and
cmp
in
inc
pop
lret
or
in
mov
mov
pop
popa
mov
sbb
xchg
jge
mov
iret
cmc
mov
and
es
add
lea
inc
lahf
aaa
pop
inc
xor
addb
pop
fsubrs
adc
add
cmp
or
fwait
cmpsb
in
les
push
or
scas
cmpsb
adcb
mov
add
and
sbb
xor
jecxz
mov
or
xor
mov
negb
xlat
mov
hlt
inc
jge
sbb
push
cld
fs
das
loopne
xchg
push
xchg
mov
dec
and
daa
cmpsl
cmp
pop
jne
cmp
pushf
js
jmp
aad
xor
enter
decb
addl
adc
and
push
cmp
xchg
sbb
in
mov
add
insb
cld
lcall
clc
je
sub
fstps
das
loope
pusha
and
xchg
add
mov
push
cmp
fsts
lds
repnz
pop
jp
imul
bound
adc
and
cmp
jbe
daa
in
ret
aad
es
jns
fidivrl
adc
imul
mov
hlt
mov
jns
jg
or
mov
pop
outsb
add
aaa
cmp
jle
sbbl
and
iret
loope
fidivrl
and
loope
inc
cwtl
jbe
xchg
sbb
pop
mov
jmp
loopne
inc
xchg
loope
jmp
loope
loope
adc
icebp
dec
xchg
jecxz
sbb
sbb
inc
mov
jle
sahf
xchg
jo
xor
pop
xor
mov
clc
pop
dec
xor
arpl
inc
add
cmpsl
mov
mov
sub
mov
fmul
pop
stos
jp
or
insl
cmp
mov
push
mov
scas
xchg
and
test
inc
imul
pop
xchg
mov
icebp
jnp
mov
mov
fldt
cmp
adc
arpl
stos
pop
ficoml
daa
rclb
push
movsb
mov
pmaddwd
mov
jl
pop
icebp
fnstsw
icebp
inc
and
loope
sub
aad
push
loopne
je
push
enter
xor
or
adc
pop
inc
or
jmp
cmpsl
sub
aam
movsb
push
jbe
cmp
dec
and
and
mov
and
sbb
mov
test
lret
or
sahf
test
jp
cmp
and
inc
stos
add
imul
dec
fadd
arpl
fdivp
or
out
lea
add
adc
into
call
testb
jae
jno
enter
test
bound
subb
aam
or
pusha
shrl
inc
gs
fbstp
jns
cltd
mov
loopne
add
push
scas
ljmp
call
add
inc
mul
lods
add
xchg
xor
mov
push
orl
cmp
nop
xor
pop
mov
sub
push
mov
fnstenv
mov
and
sub
mov
xlat
rcll
mov
mov
and
push
push
popa
jl
js
popf
test
push
sahf
inc
insb
stos
fstpl
dec
dec
movsl
sarb
loop
cld
cwtl
jmp
add
push
inc
das
pop
enter
pop
imul
and
dec
inc
aad
int
lret
jae
push
xor
imul
lcall
sub
jae
rcrb
mov
jge
call
jne
scas
sarl
daa
aaa
xlat
xlat
mov
fstpt
sarb
gs
jb
jp
add
inc
ret
pop
test
xor
shll
or
lahf
outsb
mov
icebp
sbb
mov
pop
stc
jae
sbb
sbb
dec
xchg
fwait
cmpsl
fadds
push
loope
adc
mov
jg
enter
popl
nop
mov
cmpsl
imul
cs
mov
xchg
and
cmp
std
aam
sub
inc
scas
mov
jno
jb
scas
scas
popf
jo
adc
jb
push
js
xlat
call
or
cld
mov
inc
push
or
popf
scas
pop
jle
icebp
xchg
dec
add
lods
push
movsb
shlb
les
fstps
xchg
insb
jo
lahf
and
icebp
mov
add
shrl
cli
iret
xor
sub
out
repz
sbb
cmpsb
std
cmp
inc
cwtl
cmpl
int3
mov
sub
dec
enter
mov
dec
lods
inc
jge
imul
rorb
push
shl
lcall
xchg
sbb
clc
repz
push
pop
jp
add
pop
in
dec
push
and
add
mov
stos
xor
sbb
or
outsb
pop
pop
pop
mov
leave
test
enter
xchg
sahf
adc
lods
inc
decl
leave
pop
jmp
imul
and
or
mov
je
jg
notb
ds
adc
lcall
stos
inc
addr16
inc
sbb
cmp
shl
test
js
test
add
lahf
push
adc
test
mov
fisubrl
push
push
leave
xchg
inc
frstor
enter
mov
stos
adc
fmuls
mov
or
cld
addl
lods
adcl
jge
in
xor
fwait
out
add
xchg
lea
cmp
mov
dec
inc
shll
mov
inc
pop
into
and
fsubl
xchg
out
rorl
mov
jge
out
xchg
ret
lahf
lret
lret
in
jmp
std
sbb
sub
fucom
popa
repz
adc
and
jne
mov
mov
in
mov
push
call
mov
inc
mov
add
mov
movsb
out
pop
movsl
cltd
add
cld
test
inc
pop
jmp
sbb
jge
xor
sub
sti
enter
push
add
insb
push
popf
lods
clc
mov
xor
adc
xchg
loopne
push
push
lock
lods
and
insl
xchg
jnp
in
cmp
push
addr16
jno
dec
mov
inc
loop
out
int3
ds
stos
outsl
jmp
test
outsl
push
push
dec
dec
mov
jne
jg
lods
add
testl
cmp
andl
xchg
sbb
aam
out
daa
mov
pop
dec
lods
dec
and
decb
cld
int3
sbb
mov
inc
jmp
and
divl
xchg
cs
cmp
mov
aad
adc
in
ss
and
mov
stos
inc
int3
mov
leave
out
cltd
fidivrs
out
pop
mov
jle
rcrb
aam
test
rcrb
jns
push
addr16
int
jl
add
iret
aad
jbe
and
aas
xchg
les
sub
gs
or
stos
iret
in
jnp
jge
fisubl
les
inc
sarl
jl
lahf
jp
pop
in
mov
mov
popa
and
sti
addr16
mov
cmpsl
clc
fdivs
add
pop
dec
movsb
dec
fxch
in
and
test
rep
pop
outsl
pushf
scas
xlat
push
leave
cmpsb
popa
add
movsl
shl
adc
ja
popf
xor
fsubr
adcl
loop
leave
mov
jae
ljmp
or
xchg
mov
and
pushf
sbb
dec
push
push
mov
test
mov
roll
mov
xor
adc
mov
js
jno
fldcw
add
inc
cli
les
mov
xor
and
push
clc
and
out
mov
mov
ret
mov
mov
mov
inc
gs
das
loopne
mov
jl
sbb
mov
sub
or
mov
sub
js
popa
lea
add
xchg
mov
scas
mov
pop
sahf
jge
rclb
or
shrl
mov
aaa
xchg
push
loope
jmp
leave
add
cmpsb
and
dec
loope
sbb
cwtl
fcompl
mov
xchg
in
mov
jae
mov
out
jb
int
out
pop
lods
pop
mov
mov
push
inc
xlat
pop
out
daa
mov
jg
xchg
cmp
stc
out
in
scas
std
in
xor
movb
cld
shlb
mov
mov
fisubl
add
int3
aaa
xchg
cs
pop
mov
add
xor
jne
sub
mov
sbb
dec
lcall
inc
enter
loope
js
rolb
loop
fistpl
push
fimuls
jl
xor
loop
cmpsb
mov
push
enter
or
sub
mov
push
mov
out
mov
mov
inc
gs
add
mov
in
inc
sbb
pop
sub
mov
pop
mov
cmp
mov
xchg
mov
std
mov
push
insb
sub
xchg
or
and
xchg
jmp
popl
int3
test
jle
push
ret
jnp
cmp
pop
inc
lds
imul
mov
mov
sahf
push
adc
lret
adc
std
cmp
cmp
rcrb
mov
arpl
bnd
mull
mov
jmp
inc
fcmovnu
sbb
out
bound
cmp
adc
sysenter
sbb
dec
stos
and
mov
or
ret
jle
movsb
clc
pop
cmp
leave
insb
testl
fcoml
cmp
adc
rorb
or
es
daa
sahf
jno
and
or
fnsave
stos
inc
fstpt
and
cltd
cmpsl
out
out
mov
call
cmp
mov
pop
stos
aas
lret
movsl
push
mov
dec
je
hlt
sub
pop
push
sub
sbb
int
xor
stc
outsl
outsb
clc
popf
cmp
push
add
inc
fsubl
loopne
std
mov
and
cmp
cwtl
ss
scas
movsl
arpl
push
pop
int3
xor
pop
movsl
in
push
mov
lods
subl
test
rclb
test
add
scas
push
adcb
je
jne
adc
cmp
in
pop
add
and
aas
sti
rolb
mov
cli
in
call
dec
xor
ljmp
lds
mov
negb
fstl
cmpsl
sbb
nop
mov
ret
cmp
mov
les
imul
xlat
pop
inc
enter
fsubl
inc
ja
mov
mov
mov
push
std
subl
jb
int
push
or
or
fisubs
scas
mov
jge
xchg
push
gs
sbb
je
into
das
stos
jge
out
pop
ficoms
aaa
pop
call
mov
mov
mov
sbb
ret
imul
sahf
imul
shll
test
mov
dec
adc
pusha
pop
or
ror
jb
jbe
mov
jl
sbb
outsb
dec
ljmp
push
xchg
scas
stos
dec
lret
in
xor
xchg
add
movsl
cmp
push
cmpsl
pop
nop
lcall
daa
cmp
inc
jmp
add
mov
adc
shlb
xor
cltd
mov
lret
aad
jb
xor
ret
jg
xchg
pop
sbbl
push
pop
jbe
mov
ljmp
jbe
pop
sub
pop
mov
add
arpl
std
imul
lret
cmp
repnz
test
aas
lods
fwait
test
repnz
push
mov
sbb
insb
pop
leave
jae
pop
cld
xchg
dec
loop
sub
rclb
cmpsl
test
adc
push
pop
or
dec
ret
popa
sbb
pop
stc
in
cld
push
into
add
cli
dec
sarl
adc
mov
sbb
mov
pop
cmpsb
push
lahf
push
inc
nop
daa
clc
lahf
loope
sbb
setle
mulb
or
repnz
int
mov
xchg
mov
push
testb
jo
cmp
lcall
movsbl
cltd
test
imul
lcall
lods
pop
xchg
adc
test
enter
mov
jp
cli
mov
sbb
cli
pop
mov
sub
pusha
mov
dec
loop
shrb
daa
or
scas
fbld
ss
mov
mov
fldl
test
or
das
xchg
sub
shrl
rorb
daa
jp
jns
inc
dec
movb
iret
int
jbe
mov
cmp
cmp
into
fiadds
mov
test
inc
dec
cmp
cmp
lahf
push
or
shr
scas
sbb
dec
iret
sbb
sbb
push
popf
imul
mov
je
arpl
adcb
inc
int
xchg
lods
and
fbstp
and
ret
dec
inc
xlat
jns
dec
out
in
push
into
in
insl
fdivr
stos
arpl
lret
adc
lcall
and
pushf
xlat
out
movsb
push
jne
dec
lods
mov
inc
lea
push
sub
scas
pop
loopne
xchg
sub
in
arpl
arpl
mov
dec
clc
psrad
lcall
outsl
in
popa
mov
fldenv
outsl
sub
xor
pop
mov
jge
cltd
out
pop
xchg
loopne
into
sub
pop
lds
xchg
push
cmp
sub
xor
dec
or
xchg
adc
fdivl
or
xlat
lods
fistl
xor
cmc
jp
cld
cmp
jl
mov
xchg
add
call
sti
adc
or
iret
pop
jecxz
mov
addl
sub
mov
in
sub
pop
mov
add
nop
popa
jg
sbb
jae
lret
je
cli
xchg
adc
mov
xrelease
into
loop
sbb
xor
cmp
dec
inc
repz
and
mov
outsl
insb
push
jne
clc
sti
ja
xchg
inc
xor
std
push
lahf
or
call
push
lret
sub
sti
out
out
ret
pop
into
mov
fcmovnbe
push
pop
jo
pop
je
xchg
mov
cmp
mov
inc
add
lret
cmp
lds
mov
xchg
dec
lcall
inc
sub
iret
lret
adcb
xchg
stos
add
pop
dec
testb
jbe
mov
mov
cmp
cmp
push
inc
call
inc
daa
pop
lock
gs
mov
jp
inc
lods
aam
sahf
and
movsl
lea
pop
and
std
int
insl
add
pusha
or
test
cli
xchg
xchg
outsl
inc
xor
adc
in
xchg
fisubrs
lret
lret
test
jo
loopne
mov
lcall
push
jmp
arpl
mov
push
test
es
and
sbb
shlb
jb
push
mov
push
xor
in
and
ja
sub
out
jmp
gs
push
or
jmp
das
lds
lcall
shr
add
sbb
or
and
inc
pop
xor
repnz
adc
rclb
cli
jg
and
cmp
js
fldenv
repz
xchg
mov
test
mov
decl
jns
add
jae
dec
push
je
sbb
xchg
mov
pop
adc
mov
das
mov
jmp
push
scas
inc
js
push
cltd
mov
push
jmp
adcb
mov
pop
inc
jo
fistps
into
sub
xor
shll
cs
jns
pusha
divl
add
xor
mov
mov
sbb
popf
cmc
leave
test
inc
pop
hlt
je
push
loope
xchg
push
ret
dec
incl
sbbl
cld
inc
hlt
or
mov
pop
mov
iret
jmp
movsb
mov
inc
adc
clc
out
jbe
fsub
and
iret
xchg
out
stc
ret
lahf
sbb
inc
pusha
mov
fwait
xor
ror
mov
js
or
fisubrl
popa
shll
adc
jb
movsl
in
sbb
mov
pushf
test
push
mov
mov
dec
aas
jo
lcall
push
mov
in
dec
and
adcb
arpl
scas
xlat
dec
push
sbb
push
sbbl
add
shlb
mov
pop
andl
enter
std
loop
sbb
xchg
adc
stos
cmp
call
arpl
imul
mov
stos
lea
mov
xor
dec
aaa
in
add
scas
inc
cmp
dec
iret
je
aas
movsl
daa
insl
pusha
mov
add
loope
ljmp
and
lea
andl
popa
popw
into
movsb
mov
arpl
mov
push
mov
inc
jmp
or
jp
push
mov
lcall
jbe
ss
dec
rol
pop
or
pop
pop
popa
or
jo
mov
add
aas
pop
dec
iret
repnz
shll
dec
mov
pop
stos
ss
mov
pop
push
mov
or
sarb
push
stc
inc
and
pop
pop
inc
std
xchg
jbe
loop
mov
fcomip
inc
mov
into
and
cmc
sub
cs
insb
add
mov
pusha
clc
xchg
jg
lods
int3
in
sub
pushf
mov
js
cmc
stos
fcmovnb
pop
or
jns
mov
push
loop
int3
or
in
sbbl
sbb
lcall
jae
into
sub
jno
leave
add
sarb
and
sbb
mov
xrelease
out
int3
pop
pop
push
adc
inc
js
shrl
dec
popf
and
lods
jmp
xchg
jno
cli
pop
lahf
dec
mov
dec
mov
in
push
outsl
jnp
dec
insb
adc
cmp
mov
lcall
dec
jmp
enter
sub
pop
and
lret
loopne
jp
fwait
add
imul
sbb
pushf
cmpsb
cmp
dec
data16
roll
lahf
xlat
and
xchg
mov
xchg
xlat
std
mov
inc
pop
xor
xor
stos
or
sub
push
js
push
aam
sub
cmpsl
fistps
ret
rclb
add
xchg
adc
sub
insb
notl
sub
ss
pushf
loopne
pop
ret
pop
xor
inc
cmp
adc
xor
pop
push
pop
lret
roll
loopne
popf
scas
cld
add
xor
inc
inc
dec
ss
test
fadd
fwait
or
stos
xorl
or
jge
outsb
add
and
imul
jae
mov
in
inc
fstps
cmp
lock
call
or
aas
xchg
dec
mov
fsts
movsb
cmc
mov
or
ds
fcoml
mov
aad
sub
insb
inc
mov
je
stos
out
lahf
adc
cwtl
sbbl
add
mov
mov
sbb
inc
ret
mov
ljmp
inc
mov
test
fiaddl
dec
add
sbb
adc
inc
xor
adc
rcll
mov
mov
jb
pop
call
testb
data16
and
sti
loopne
xor
into
cmp
hlt
lods
and
push
add
dec
mov
sub
icebp
jno
sbb
cmp
test
mov
jae
and
pusha
sbb
iret
mov
push
je
repz
mov
cmp
adc
pop
dec
lods
add
dec
dec
iret
mov
and
cmp
xchg
xchg
insl
call
xchg
mov
outsl
fdivrs
aad
gs
insl
adc
lret
pop
push
fistpll
push
mov
lods
aas
int
out
testl
push
inc
roll
xor
mov
fldenv
xchg
jg
aam
loop
xchg
mov
dec
pusha
cwtl
loopne
ret
add
sub
pop
pop
xor
jae
push
sub
fcoms
mov
push
cs
xor
pop
out
cmp
jmp
dec
inc
les
lret
ja
jmp
subl
jno
out
pop
movl
inc
or
inc
fisttpl
xor
loope
bound
mov
dec
pop
cmc
loope
mov
push
pop
xor
sahf
incb
push
jmp
popa
xadd
mov
sbbb
add
xchg
mov
pop
dec
ret
jns
jecxz
sbb
push
ljmp
call
mov
xchg
sub
lods
xchg
pop
xor
dec
and
dec
cltd
pop
test
lret
mov
push
or
rorl
sub
je
cmp
sub
test
shrl
push
mov
push
push
cmp
popa
add
inc
fwait
sti
pop
lock
cmp
inc
sbb
jnp
scas
lods
sub
ds
cmp
push
dec
add
js
cld
push
mov
shll
aad
repnz
rcrl
jmp
jb
fists
mov
jmp
sub
xor
lds
pop
adc
push
pop
mov
test
jle
lock
push
nop
jbe
lret
push
iret
cs
push
or
or
fnstcw
or
in
sub
je
pop
std
sub
push
sub
call
movsl
and
sbb
lret
decb
and
lret
cmp
mov
iret
mov
xchg
lret
cmp
cld
cmp
out
leave
pop
adc
adc
jmp
daa
xchg
cltd
and
int
and
stos
ret
gs
pop
lock
pop
xchg
push
sbb
xchg
sub
hlt
sub
and
mov
inc
loope
push
mov
fists
les
mov
fsubs
mov
adc
lcall
pushl
and
push
push
dec
lahf
and
mov
add
ja
cmp
push
or
push
pop
lret
lcall
push
or
sub
add
aas
xchg
clc
or
scas
mov
inc
es
pop
dec
mulb
ds
call
test
or
fwait
lods
fs
inc
out
pop
xor
inc
mov
xchg
popa
sbb
cmp
mov
xchg
push
sbb
movsl
dec
das
fwait
jbe
xchg
mov
std
mov
jge
inc
jae
sahf
pop
aaa
shrb
test
sub
mov
jp
mov
push
xchg
lods
popa
jl
mov
lahf
andb
xchg
cmc
data16
dec
test
xlat
mov
cmp
jge
repz
sub
hlt
mov
aam
pop
mov
sub
mov
jo
jae
jb
les
pop
lahf
inc
in
sbb
xor
dec
loope
xor
inc
xlat
mov
sarl
sbbb
inc
outsb
jle
or
in
or
out
daa
stos
push
mov
jmp
add
fwait
push
out
int3
mov
inc
loop
inc
or
enter
and
and
cltd
push
lods
inc
andl
dec
pmaddwd
popa
out
imul
movsb
jmp
adc
out
fsubs
pop
push
jmp
sub
and
push
into
pop
adc
lods
xchg
cmp
fcomps
ror
je
add
sbb
mov
fmuls
mov
mov
hlt
push
enter
xor
xor
enter
mov
cmp
sub
pop
inc
pop
outsl
jp
daa
and
and
mov
or
inc
xchg
mov
adc
cwtl
cwtl
inc
test
les
xchg
dec
shrb
imul
push
pop
ss
jmp
mov
rcrl
inc
add
bswap
popa
dec
sbbl
cmc
aam
gs
ja
shrl
xchg
sbb
inc
int3
out
xchg
push
xchg
mov
into
out
push
lods
push
pushf
ret
mov
clc
ljmp
out
cmp
fwait
mov
xchg
movsl
iret
arpl
shl
iret
sub
dec
push
mov
and
out
sub
inc
call
sub
cmpsl
mov
call
push
adc
inc
mov
cli
lods
fdivs
sbb
fucomi
mov
mov
xchg
jae
push
fisubrl
xor
xchg
add
mov
mov
sbb
push
sub
lcall
fidivrl
dec
lahf
mov
dec
and
cmp
fwait
shll
adcl
outsl
jmp
fsubr
inc
es
mov
int
and
lret
xchg
push
mov
and
in
pop
push
mov
mov
push
cmp
cmp
xor
cmp
fistps
out
mov
loopne
notl
rcll
pop
add
add
xchg
scas
xchg
scas
pop
out
fbld
sbb
movsb
jmp
fstp
pop
mov
add
cmpl
inc
jge
pop
sahf
adc
xor
mov
aam
leave
mov
sbb
loopne
or
std
mov
addb
stos
and
nop
fadd
aaa
dec
idiv
sbb
or
ss
sub
insb
jle
mov
add
xor
push
mov
test
inc
or
lret
mov
inc
and
sti
out
sub
push
jne
test
add
jl
and
sub
add
je
jns
inc
sub
jne
jns
or
inc
fcom
jmp
xorb
mov
adc
mov
cmp
cli
dec
or
add
and
punpckhwd
xchg
mov
imul
add
cmc
aas
cmc
sub
pop
adc
or
movsl
cmp
adc
ret
push
psubusb
mov
into
in
pop
mov
and
inc
mov
scas
inc
mov
pop
rorl
mov
jge
ljmp
mov
mov
cld
out
in
test
ret
sbb
iret
in
xor
imul
daa
lret
pop
aaa
sbb
rcrb
xor
sahf
or
or
cmc
movsb
lret
push
jo
rep
scas
fs
cmp
adc
mov
mov
stos
inc
mov
jb
sub
aas
mov
mov
mov
je
inc
into
cmp
shll
push
sub
sti
or
xchg
xorl
xchg
add
jmp
mov
cli
fs
adc
jns
or
outsl
orl
stos
daa
cmp
daa
inc
dec
xchg
xor
enter
pusha
mov
and
ljmp
dec
lock
pop
and
sub
aas
and
popa
push
cmc
xchg
xor
lds
int
jno
repnz
lds
push
jp
mov
and
push
arpl
shl
test
imulb
call
or
out
push
fsubrl
aaa
cmpsb
ds
bound
stc
test
cwtl
cmpsb
push
ljmp
mov
cmp
cld
or
xchg
pop
aaa
clc
add
sub
and
fwait
adc
call
xchg
jmp
mov
sbb
shlb
mov
cltd
push
repz
mov
add
add
outsb
dec
mov
sbb
mov
and
cltd
inc
xlat
leave
mov
sub
jecxz
fimuls
pop
idivb
mov
adc
sbb
cmpsl
adc
jae
jnp
dec
cmpsb
sbb
shll
xrelease
dec
and
cmp
add
ds
fstpl
push
ret
fadds
pop
sahf
mov
cld
dec
outsb
fidivrs
push
jns
xchg
aam
sub
dec
subb
test
jo
inc
sub
adc
jg
out
dec
sti
push
hlt
aas
xchg
jae
ljmp
push
mov
sub
or
lock
test
push
mov
rol
shll
jl
ficompl
dec
xor
es
push
shrl
or
rorb
jne
sub
add
out
bound
pop
ret
inc
adc
mov
loopne
or
add
xlat
roll
or
bound
mov
xlat
push
xchg
lods
jns
push
adc
push
iret
xorb
hlt
cld
dec
scas
popf
jne
inc
mov
dec
imul
into
fdivs
dec
sub
jno
mov
test
pop
stc
ret
hlt
sbb
pop
leave
sbb
cmpsb
dec
xor
push
jb
in
jg
mov
bound
push
sbbb
clc
or
lods
dec
loope
orb
add
push
pop
lea
daa
cmpsb
les
xor
and
jo
lea
mov
mov
or
fldl
push
aam
sbb
push
lahf
out
loop
lods
add
lock
out
popa
lods
xchg
subl
pop
cmpsb
pop
mov
cs
xor
popf
cmc
arpl
sub
pop
xchg
xchg
adc
test
out
je
mov
mov
div
mov
xor
ja
sarl
dec
jge
jg
mov
out
jecxz
inc
pop
imul
lock
jp
cld
imul
mov
or
out
mov
ds
and
adc
aad
mov
adc
jge
insb
mov
xchg
mov
cltd
or
xor
push
lods
cmp
out
and
xchg
sahf
test
gs
call
outsl
adc
push
es
pop
fwait
jbe
inc
nop
pop
cli
add
imul
lds
mov
jb
mov
mov
sub
pop
push
gs
adc
loope
notl
xchg
cmp
jbe
and
jge
or
inc
test
xchg
and
scas
inc
stos
dec
bound
add
ja
ret
xchg
mov
cwtl
pusha
arpl
aam
rorb
out
jmp
adc
daa
flds
mov
add
call
mov
mov
repz
or
dec
dec
sub
pop
lret
cmc
iret
mov
mov
les
ss
ss
lods
jmp
test
pop
roll
test
or
ja
xor
mov
jg
setno
adc
sub
dec
pop
inc
dec
lock
mov
or
cmp
cmpsb
clc
nop
ljmp
call
mov
cwtl
inc
inc
and
mov
or
cmp
xchg
mov
adc
pop
sub
xor
mov
inc
lods
or
js
xchg
jns
movsb
bnd
cli
cwtl
inc
mov
mov
push
mov
or
fstpt
mov
outsl
je
dec
out
jl
ja
rcrb
outsb
rcrb
es
xchg
mov
pushf
pop
push
in
fnstenv
dec
scas
arpl
jp
inc
repnz
lcall
mov
stos
push
sub
push
out
mov
mov
mov
jmp
xchg
adc
add
mov
fs
loope
lods
inc
push
test
ret
cmp
les
inc
inc
add
das
pop
pop
stos
shlb
jne
sub
jb
mov
addb
cmc
pop
shl
lea
movsl
mov
xlat
in
ja
jecxz
mov
xchg
fbstp
call
jns
sub
sbb
dec
xor
xchg
bound
push
sbb
fcomps
jl
ret
dec
gs
movsl
pop
lcall
stos
loopne
aas
mov
push
loope
paddsw
inc
scas
mov
cli
push
dec
pop
rsm
push
pusha
js
shrd
push
push
lret
nop
sub
mov
aas
lahf
mov
ret
ret
push
out
dec
add
xor
jo
push
in
test
jp
and
mov
mov
jecxz
mov
cmp
mov
push
out
movsl
popa
filds
jmp
mov
add
jae
data16
in
nop
lods
ret
add
lret
bound
fnstcw
in
movsb
cwtl
mov
repnz
jge
push
lods
inc
inc
mov
dec
jge
jmp
movsb
cli
cmp
fiaddl
jne
inc
stos
jns
fcoms
cs
cli
xlat
stc
daa
mov
push
daa
and
mov
daa
scas
dec
fistpl
adc
test
test
or
hlt
add
lods
jp
xchg
jne
lods
in
fists
mov
add
dec
stos
test
xchg
or
ret
dec
lret
lret
dec
pop
in
jg
cmpsl
loop
ret
push
ds
jo
add
push
mov
neg
arpl
arpl
sarb
jno
pop
call
mov
push
xor
push
sarl
pusha
sbb
lcall
cwtl
stos
sub
cli
push
ret
testl
sub
push
push
fcmovb
mov
jmp
mov
mov
inc
mov
jo
jge
push
mov
adc
push
sbb
xor
mov
pop
inc
push
shlb
mov
lcall
push
loope
movsl
mov
punpcklwd
pop
lahf
data16
push
cmpsb
cmpsb
faddl
sub
dec
dec
mov
xchg
jnp
mov
ret
pusha
sahf
xor
out
aaa
jns
test
mov
outsl
jge
xlat
adc
jg
dec
pop
imul
lods
stc
push
sub
jo
mov
mov
fmuls
push
jge
rep
out
fcmovne
and
push
cmp
loopne
or
in
push
push
push
mov
xchg
xor
stos
jmp
adc
lret
loope
jb
and
cmp
cmc
xchg
loope
insl
stos
add
loope
adc
lret
test
jmp
and
sub
inc
push
cmpsl
cmpsb
jbe
add
and
push
push
roll
das
lock
fs
imul
jecxz
sub
mov
mov
push
aas
test
lds
push
xorl
ret
cli
daa
or
js
stc
dec
fisubrs
sbb
lret
and
mov
or
cmp
rclb
shlb
mov
lock
iret
dec
ret
and
lods
andb
xchg
mov
inc
fmull
jmp
inc
xchg
mov
xchg
sub
jo
cmp
mov
sarb
sub
in
mov
jle
add
adc
jmp
enter
xchg
outsb
dec
dec
and
fs
or
lea
mov
add
repz
bound
pop
sbb
sahf
mov
aaa
cmpsb
cmp
mov
cmp
lods
test
lods
xchg
addl
lock
xor
sbb
mov
mov
mov
ret
fstpl
push
dec
mov
nop
movsb
mov
dec
lds
lds
cmp
into
clc
and
rclb
cmp
lock
dec
pop
out
cld
mov
dec
ljmp
xor
cmp
dec
stc
in
fldenv
sub
in
adcb
ret
cmpsb
sub
xchg
add
jecxz,pt
and
add
mov
cltd
sarl
mov
addr16
popf
mov
xchg
jno
test
call
outsl
aaa
aaa
lret
aad
xchg
pop
and
mov
pop
xor
dec
dec
aad
xchg
out
bnd
in
inc
jno
mov
and
mov
imul
in
ja
adc
fs
cmpsb
popf
mov
push
pop
cmp
mov
pushf
push
adc
xor
jle
jmp
jge
mov
push
add
aas
inc
outsl
and
aas
adc
dec
es
xor
loope
clc
test
shrb
dec
push
inc
inc
jnp
xor
in
push
jp
inc
pop
rcrb
lea
clc
xchg
xchg
dec
and
mov
cmp
mov
cmc
jo
sbb
or
pushf
xor
cwtl
in
mov
cwtl
das
incl
sbb
inc
leave
sub
js
testl
mov
aam
sti
daa
pop
repnz
and
imul
jne
out
sbb
pop
and
mov
dec
xor
mov
dec
and
rcr
enter
push
mov
cmpsl
hlt
popa
dec
mov
xor
rolb
lcall
push
or
sub
mov
cmpsb
les
pop
ret
mov
and
iret
test
sti
pop
gs
out
xchg
xor
imul
jns
cld
mov
aaa
dec
xchg
adc
popa
mov
in
jmp
or
xor
sub
or
mov
aaa
add
mov
add
sub
pop
outsl
sub
add
lock
inc
pop
inc
sti
add
fisubrs
mov
bound
push
scas
jns
or
outsb
cmp
lea
or
insb
lods
push
repz
imul
out
pop
push
or
hlt
pop
mov
stos
sbbl
mov
push
xlat
inc
bound
aam
mov
sbb
lds
xchg
adc
dec
push
inc
push
inc
call
iret
push
stos
jne
push
ljmp
xchg
clc
mov
dec
xor
xchg
push
fcompl
daa
ljmp
addr16
test
cmc
fsub
nop
push
mov
repz
icebp
cmp
dec
inc
xchg
loopne
inc
es
fstps
repnz
pop
mov
or
adc
test
repnz
push
dec
ret
test
mov
dec
in
insb
jne
xchg
dec
out
sarb
pusha
mov
mov
sub
insl
add
adc
jp
lahf
fcmove
or
jmp
adc
mov
out
xor
sub
jbe
pushf
xor
push
inc
fsts
cmp
mov
aaa
and
mov
pop
mov
xchg
or
movsb
xor
push
mov
cld
negb
fadds
cmp
inc
sbb
lahf
inc
mov
push
push
fisubrl
int
cld
ja
aad
testb
repz
adc
add
jl
pop
cmp
repz
jle
rclb
pop
rclb
aas
lahf
outsb
adc
mov
pop
mov
mov
call
ret
push
jnp
xchg
mov
divb
add
jnp
dec
in
fidivl
jb
imul
les
scas
sti
aas
in
push
mov
fdiv
or
adcl
sub
rol
out
stc
je
nop
ror
dec
jecxz
pop
bound
pop
fwait
repnz
cmp
mov
leave
push
clc
shl
sub
bound
or
xchg
jl
idivb
xchg
jg
pop
lods
in
push
add
xchg
adc
push
push
inc
push
xor
xor
js
sti
jp
xchg
push
mov
out
sub
or
rolb
loop
inc
cwtl
fsubrp
or
xlat
jp
das
cmp
lods
decb
cwtl
lahf
arpl
mov
in
stos
inc
inc
int
sub
ror
jg
add
scas
inc
sub
mov
inc
or
mov
mov
les
movsl
sti
addr16
fs
xchg
jmp
and
mov
mov
push
frstor
aam
mov
popf
jne
inc
fisubl
or
lds
negb
inc
lcall
es
rcl
jle
lods
pop
fistl
repnz
cld
cs
add
or
movsl
push
jecxz
fidivl
aaa
fldenv
sarl
xor
mov
mov
fiaddl
aas
stos
push
sub
aaa
je
xchg
push
inc
add
xchg
popf
out
popa
ret
fisttps
jo
hlt
jnp
inc
jo
adc
stos
rol
mov
jnp
cmpsb
ljmp
adc
loop
lret
nop
in
dec
ret
mov
and
fidivs
add
sub
std
push
inc
ljmp
cs
popf
bnd
sbb
xchg
dec
pop
jno
jne
imul
or
mov
fiadds
mov
lds
hlt
mov
xlat
in
shlb
xchg
jo
fildl
clc
lds
push
stos
rorb
add
test
jae
or
sub
sbb
or
jnp
fwait
lahf
icebp
aam
and
adc
movsl
jns
and
or
xor
xchg
cmpsb
adcb
repnz
adc
cmpb
rcll
inc
ljmp
mov
nop
dec
dec
icebp
xchg
outsl
inc
add
les
imul
pop
adc
or
add
push
lds
and
xor
cmp
pop
loopne
ljmp
sub
xor
dec
jecxz
sbb
jns
out
mov
mov
or
and
popa
cmp
lods
add
pop
test
add
pushf
push
pop
jecxz
fiaddl
les
sbb
mov
or
imul
pop
clc
fstpt
test
pop
repnz
pusha
lea
adc
pop
mov
push
out
fs
mov
addr16
adc
sahf
inc
xchg
add
add
out
push
mov
js
cmp
addr16
mov
xchg
fsts
and
sub
mov
popa
dec
jne
clc
xchg
js
lahf
leave
mov
pop
nop
pop
pusha
testl
vcvtsd2si
jbe
mulb
setg
hlt
inc
xor
mov
enter
inc
jo
or
inc
lahf
cs
push
out
mov
xor
sbbl
add
mov
adc
mov
push
jp
pushf
imul
xchg
or
lret
mov
sahf
xor
xchg
sub
pop
mov
push
adc
cwtl
mov
add
fistps
mov
add
jae
scas
icebp
inc
pushf
fisubrs
pushf
stc
nop
into
jbe
out
fs
xchg
movsb
xchg
aas
add
sub
lods
cltd
mov
cli
push
lods
push
fwait
es
je
clc
popa
loopne
lcall
sbb
mov
cmpxchg
insb
outsl
out
jge
daa
outsl
jg
gs
cwtl
mov
mov
push
add
mov
orl
pop
pop
testb
roll
stos
mov
hlt
rorb
pop
pop
repnz
inc
aam
popa
pop
xor
inc
mov
jg
jns
idivb
mov
or
jl
fldenv
test
stos
mov
xlat
xlat
in
mov
aaa
pop
xor
xchg
pop
sahf
incb
push
pop
movsb
jecxz
test
pop
lock
or
pop
bound
inc
clc
fsubrl
xor
stc
inc
scas
loop
and
fwait
xchg
add
cmpsl
and
sti
jnp
sub
pop
xchg
sub
lods
mov
cmp
sarb
shrl
arpl
pop
test
lret
leave
int3
lea
push
sub
out
cmp
pop
lea
lret
push
imull
fxch
or
jecxz
scas
aaa
sub
ja
lret
rcl
iret
add
or
dec
jecxz
mov
adc
repz
inc
fwait
pop
mov
ror
out
in
push
dec
je
pop
data16
xor
in
std
scas
jno
cmpsb
adc
fmull
and
pop
lea
push
mov
cmpsl
or
cltd
mov
sbb
mov
std
xchg
les
push
or
dec
lea
movsb
jnp
std
dec
int
mov
xchg
into
cmp
or
cmpl
cld
sub
ret
fists
and
iret
orb
adc
jl
xor
cmp
mov
adc
js
jnp
push
mov
mov
pop
dec
fsubrs
out
push
popl
testb
fdivp
mov
out
cmp
adc
mov
and
cmp
fldcw
xor
movsl
or
jns
jp,pn
add
div
repnz
and
jle
push
lret
sti
outsl
cltd
jecxz
ljmp
mov
movsb
cmp
lods
mov
mov
mov
movsl
pop
cmc
mov
mov
imul
add
dec
fidivs
gs
mov
adc
int3
insb
jecxz
popa
sbb
push
sarb
add
loop
mov
cmp
push
clc
jae
lods
call
xor
int
jge
inc
fmuls
popf
mov
mov
sbb
and
stos
inc
aaa
cld
dec
in
sti
arpl
repnz
cwtl
addr16
adc
sbb
aaa
ljmp
scas
gs
mov
jno
push
mov
xchg
and
xchg
leave
fcomi
fwait
loop
imul
add
cmp
dec
pop
test
imul
sub
imul
sbb
leave
insl
fsubrl
mov
mov
fisubl
push
cmp
mov
cmpsl
mov
mov
mov
mulb
inc
out
je
and
aas
sbb
mov
out
lds
pop
mov
mov
mov
rcpps
lock
out
ds
cmp
notl
movsl
push
notb
fwait
mov
repnz
decb
cmpsl
pop
dec
jecxz
insl
inc
arpl
es
or
push
and
inc
sbb
ss
les
xchg
push
shl
sti
sub
fcmovbe
or
cmpsb
dec
jns
pop
mov
fs
aas
adc
xor
addr16
rclb
mov
jmp
or
sub
out
popl
pop
out
icebp
sbb
cmpsb
mov
adc
leave
adcl
dec
sbb
es
das
in
xor
cmp
divb
lods
jmp
setne
popa
inc
mov
adc
push
ret
xor
int3
iret
dec
mov
in
sub
cmp
enter
movsb
sub
push
xchg
out
stc
div
and
rolb
fistl
ja
mov
fdivrl
xchg
push
jns
mov
sbb
or
and
xor
push
rol
rclb
push
sub
mov
mov
js
test
mov
jg
sub
xchg
inc
dec
jecxz
aam
mov
sbb
test
icebp
ret
cmp
xchg
jg
dec
lds
lods
into
in
pop
out
enter
pop
cmc
gs
int
scas
test
arpl
xor
push
sbb
mov
pop
xchg
mov
add
jecxz
sbb
je
repz
mov
js
dec
sbb
loope
pop
in
cmp
push
psllq
pop
xor
ret
arpl
push
inc
mov
jb
out
fldl
in
lods
mov
mov
push
pop
fisttpll
testb
inc
adc
xchg
out
mov
shll
adc
and
or
fdiv
loop
dec
out
cwtl
das
dec
adc
inc
cmp
sbb
into
stos
push
hlt
inc
xchg
jge
lea
mov
sbb
lods
in
das
test
mov
mov
je
xchg
popa
lock
push
xor
into
mov
xlat
fs
rcrb
in
je
pushf
pop
xor
cmc
stos
inc
mov
enter
mov
xchg
mov
adc
inc
pushf
inc
pop
mov
mov
xchg
mov
pusha
ss
and
fsubrl
inc
cmpl
loop
dec
inc
fnsave
pushf
das
sub
pop
mov
xor
inc
sbb
mov
sub
push
pop
das
mov
mov
cmp
es
dec
setae
mov
mov
loopne
popa
cmpsb
incl
xchg
loopne
adc
pop
in
xlat
repnz
scas
call
add
mov
fbld
mov
addr16
sub
js
shll
pop
inc
out
movsl
or
inc
sbb
pop
loopne
pop
pop
jg
cs
push
mov
jecxz,pt
inc
in
xchg
mov
or
jns
daa
gs
jb
push
xor
fs
add
jge
sbb
dec
push
jle
andb
mov
dec
and
movsb
jnp
cmpsl
ret
sbb
test
adc
sub
pop
stos
out
mov
adc
jmp
aas
sbb
in
dec
popa
shl
xchg
imul
loop
scas
jb
int
mov
fidivs
test
orb
aad
das
pop
rorl
cli
add
or
rorl
outsl
jns
lcall
out
or
clc
imul
out
pop
mov
pop
in
mov
les
fists
fistl
loopne
cs
out
sbb
mov
or
rorb
push
mov
rcr
pop
adc
mov
stos
mov
bound
cs
insb
or
pusha
addl
int
inc
in
imul
mov
subb
dec
mov
jl
jg
stc
lret
sub
test
ja
ret
mov
and
lcall
fstl
xor
inc
xor
push
inc
mov
imul
imul
aad
adc
or
dec
dec
add
push
insb
test
mov
pop
xor
inc
into
mov
push
inc
movsl
mov
or
or
pushf
mov
outsb
xchg
push
mov
jmp
out
push
mov
fistps
iret
arpl
pop
dec
or
rcrb
xchg
cmp
scas
imul
aam
je
imul
arpl
sbbl
cmp
call
cmc
bound
pop
lock
in
aaa
xor
jg
lock
mov
mov
cmpsb
jbe
xor
push
fst
mov
cmp
push
cmp
push
call
sar
repz
adc
xchg
adc
cmp
bswap
push
or
sbb
test
call
pop
xor
loopne
mov
jle
cmc
cmp
movsl
dec
dec
mov
or
lret
popf
push
mov
loope
pop
jbe
inc
loope
jecxz
shlb
mov
retw
je
xlat
out
cli
std
cwtl
xor
and
inc
pop
loopne
xor
jmp
lcall
clc
cmp
or
cmc
arpl
xchg
add
mov
icebp
mov
stc
xchg
sub
xchg
das
and
cmpsl
jecxz
in
sub
cli
xor
inc
mov
enter
cmp
rcll
push
aad
lds
andb
fwait
xchg
lahf
into
ljmp
mov
cmpsb
xchg
pop
mov
mov
out
and
cld
lods
jmp
ret
loope
call
loop
and
mov
sbb
jbe
out
jo
mov
sti
mov
sahf
xor
sub
loopne
aam
scas
jecxz
or
aaa
dec
aam
test
sti
pusha
daa
outsb
xor
or
mov
stos
jo
add
sub
scas
in
cmpsl
xchg
shll
mov
mov
dec
ljmp
sbb
cmpsb
jge
pop
scas
xor
or
es
jge
jge
pop
xor
leave
jb
jae
into
es
adc
inc
xlat
xchg
xor
add
lods
or
dec
cld
test
jae
add
pop
int
xor
mov
fbld
aaa
mov
dec
lds
push
inc
mov
jg
nop
cmc
lds
add
push
and
call
xchg
sbb
out
pop
cmp
dec
xor
pop
test
mov
test
shl
scas
scas
lcall
cmp
in
jecxz
add
scas
lods
xchg
rcrb
sub
movsl
in
sbb
xchg
push
mov
cmp
mov
mov
jb
sbbl
sub
add
lods
int3
mov
pop
int
iret
xchg
push
dec
cmp
or
xor
dec
bound
fldcw
leave
jp
push
sub
pusha
popa
and
sub
pop
or
bndldx
jb
mov
stos
icebp
popf
mov
test
push
dec
enter
icebp
mov
xor
cmpsl
int
sbb
add
aaa
lret
leave
add
mov
adc
sahf
mov
sub
adc
in
out
sub
jmp
notl
xchg
rorl
xchg
inc
push
subl
cmpl
and
rcll
sahf
add
iret
lcall
js
mov
in
sub
mov
inc
pop
cld
orb
ljmp
out
cmp
fdivr
rorl
dec
dec
jb
loope
dec
pop
dec
mov
sbb
jo
adc
jbe
cltd
testl
jecxz
inc
fs
add
mov
and
pop
shlb
mov
xchg
and
mov
mov
adc
jmp
mov
jae
push
push
cltd
test
fs
jae
push
adc
or
xchg
inc
cmpsb
cmp
add
testb
loopne
leave
enter
jl
dec
adc
sahf
rcll
push
push
dec
mov
jbe
push
fistps
std
xchg
xor
mov
jecxz
bswap
mov
rcrb
xchg
dec
xchg
cld
adcb
outsb
in
add
push
nop
ds
mov
sub
scas
xor
pop
into
orl
inc
aas
dec
jle
mov
inc
jmp
push
nop
inc
sbb
push
lret
shll
ja
mov
push
xlat
clc
andb
jno
lret
cli
inc
jns
inc
les
insb
lds
push
lods
push
adc
pushf
test
xor
mov
sahf
shll
xchg
push
outsl
lahf
js
mov
cwtl
sub
repnz
loopne
cmpsl
call
push
ss
je
adc
sub
pop
out
movsb
adc
out
rorl
repnz
syscall
pushf
jl
xor
mov
adc
into
xchg
icebp
mov
xchg
insb
mov
dec
flds
lret
cld
pop
sub
inc
arpl
xchg
sub
pop
negb
aaa
cmc
jno
jle
push
mov
nop
adc
je
xor
sbb
cmpl
outsb
cmp
cmc
mov
nopl
mov
stos
push
arpl
fcmovb
inc
popa
idivl
outsb
mov
mov
aam
xlat
repz
loopne
outsl
xchg
adc
fwait
mov
or
xchg
xchg
xchg
xchg
ja
mov
testl
push
test
xchg
mov
and
inc
pop
xor
clc
into
xchg
movsl
ljmp
es
mov
stc
imul
loopne
mov
popf
subl
inc
inc
and
stc
inc
lret
aad
jno
xor
imul
gs
sbbl
roll
push
fnsave
adc
and
arpl
ret
in
push
push
add
fxch
cmc
dec
dec
in
adc
mov
iret
cli
in
rcll
aad
fsubrs
addr16
bound
mov
test
mov
lods
pop
xchg
xor
xchg
cmp
add
mov
xor
jle
pop
pop
sahf
sub
imul
hlt
cwtl
inc
mov
fucomip
add
scas
popf
add
in
shrl
adc
dec
loope
inc
rcll
add
jp
mov
scas
mov
sbb
push
jnp
jno
rcrb
xchg
pop
jp
mov
or
out
mov
js
mov
pop
or
flds
mov
arpl
cmp
push
adc
push
js
ret
bound
pop
dec
dec
ds
xor
in
sbb
std
jo
call
jmp
movsb
xchg
mov
pop
mov
sti
repnz
fistpl
jbe
mov
jno
rcl
scas
insl
or
adc
out
xchg
xor
mov
or
push
fadds
xor
movsb
sti
sbbl
popf
or
roll
cwtl
add
cwtl
sbb
pop
xlat
int
ret
xlat
mov
jecxz
shll
aas
scas
adc
xchg
and
push
jecxz
in
stos
mov
leave
jae
stc
mov
fimuls
outsb
jmp
lret
xor
in
xor
cltd
inc
push
ljmp
xchg
mov
aad
cmc
cs
ja
and
bndstx
shl
fst
add
arpl
ss
or
push
shrl
fs
xchg
lds
xchg
sub
or
jl
add
mov
push
outsl
lea
jnp
movsl
ja
pop
movsb
or
sub
es
mov
aad
sbb
and
gs
mov
mov
mov
mov
mov
push
cwtl
stos
jb
ret
aaa
andl
mov
shrb
movsb
cmp
xchg
push
out
or
scas
or
aam
cmp
insb
jne
test
xlat
insl
shll
dec
mov
xchg
dec
push
lds
adc
roll
sbb
mov
cmp
lods
mov
xrelease
int3
adcb
xchg
and
arpl
xor
cmpsl
aam
or
pop
inc
cmc
lods
lock
shl
sub
pop
js
ret
mov
jecxz
je
bound
sub
dec
push
scas
icebp
push
test
mov
sub
pushf
jecxz
int
mov
add
sub
enter
add
add
insb
dec
fsubr
jle
cmpsl
lea
or
jp
lea
rcrl
das
adc
and
sbb
fdivl
shll
mov
fsubr
sub
cmp
mov
pop
sub
add
cli
lahf
jecxz
mov
mov
and
mov
sbb
sahf
stos
pop
adc
cmp
jnp
inc
rclb
test
push
and
cmp
cmp
jg
ss
addr16
or
push
cmp
jnp
pop
cmpsl
jle
pop
ja
pop
jno
sub
push
or
lret
xchg
stc
inc
push
dec
mov
aas
inc
push
fwait
cld
insb
shl
loopne
xlat
jmp
inc
push
adc
out
gs
xchg
push
rcrl
xor
mov
jbe
xchg
cmpsl
rcll
test
and
mov
xchg
push
insl
push
cmc
mov
and
mov
in
addr16
pop
shrl
shlb
outsb
add
out
cld
pop
inc
xchg
addr16
lods
inc
adc
cmpl
cmc
fwait
sbb
add
sbb
fcmovne
movsb
and
cli
xor
shll
sbb
cltd
ficoms
lcall
cmc
add
pop
add
insb
lods
sysenter
push
inc
stos
repz
lock
cmp
into
out
xchg
push
aam
std
fcomip
pop
pop
xchg
repz
jae
jae
sbb
and
jl
xor
and
nop
mov
adcl
jo
xchg
roll
push
dec
xor
push
push
push
sbb
xlat
insl
shll
pop
aas
pop
hlt
inc
in
sub
xchg
insl
cmp
dec
pop
push
push
subb
enter
dec
sbb
dec
lcall
inc
fwait
in
mov
ljmp
outsl
es
or
mov
or
pop
mov
push
in
int
xor
sub
xor
testl
xor
mov
bound
test
ficoms
roll
add
dec
aas
loop
cmp
jmp
lret
out
inc
inc
and
mov
push
adc
ljmp
jmp
pushf
mov
pop
and
and
insb
jae
jbe
aad
dec
lcall
mov
lret
push
loope
mov
ja
xor
mov
jp
pop
stos
sbb
inc
jnp
loope
and
mov
push
cmp
mov
jnp
jnp
call
adcb
jle
sbb
sub
xor
add
mov
stc
add
mov
bound
push
sar
test
jb
mov
sub
push
shll
cmp
out
xchg
and
int
ffree
pop
loope
bndstx
push
xor
add
inc
aad
cmc
adc
ja
push
insb
into
cmp
xchg
dec
cmp
fldenv
xchg
mov
loopne
stc
sub
mov
daa
jge
int3
cmp
jmp
inc
sbb
popa
xchg
mov
cli
lods
aas
call
lcall
in
das
xor
or
pop
sbb
repnz
sbb
adc
dec
xor
xchg
mov
sbb
push
inc
in
loope
in
dec
jecxz
jnp
cmpsl
stos
pop
imul
inc
rep
cmp
dec
pop
pop
aam
mov
clc
fnsave
push
push
adc
sbbl
xor
scas
adc
stos
es
inc
in
xchg
xor
loop
notb
jle
mov
ds
lcall
imul
push
scas
pop
xchg
lcall
cmp
sub
add
cltd
stc
pop
mov
jge
ffree
inc
repnz
and
inc
je
xor
push
es
pop
and
jle
cmp
sbb
lock
push
inc
faddl
sbb
mov
cmpsl
mov
xchg
mov
lahf
stos
sub
fs
dec
jmp
jecxz
xor
cmpsl
push
fisubrl
adc
stc
sub
dec
cmpsb
int3
arpl
or
pop
divb
mov
loopne
lods
jmp
outsl
pop
inc
lds
dec
sub
cmp
mov
repz
roll
ret
sub
xor
mov
sbb
push
xchg
jne
cmc
push
push
mov
fsubs
push
arpl
pop
pusha
outsl
js
mov
jmp
pop
mov
nop
ret
lcall
inc
mov
dec
arpl
ds
sbbl
incl
xchg
xchg
insb
in
push
jo
rol
aam
inc
inc
std
std
mov
test
push
mov
iret
shll
mov
sub
and
aas
and
cmpsl
lret
mov
or
jae
in
popa
xor
daa
enter
addr16
ret
pop
or
sub
dec
scas
out
mov
pop
dec
mov
outsl
jnp
scas
popf
mov
sub
jle
test
push
out
dec
push
rep
push
cli
dec
ret
sar
and
and
test
mov
mov
or
xchg
jmp
xor
mov
ja
or
daa
inc
testl
sbb
sti
pop
repnz
test
and
mov
sarl
stc
add
outsl
mov
sub
sbb
jp
in
fidivrs
adc
fwait
lods
push
cld
mov
hlt
jno
inc
and
mov
xchg
les
mov
scas
ds
pop
aaa
movsl
pop
mov
iret
push
and
data16
out
pop
or
int3
push
pusha
pop
pop
pop
pop
outsl
xor
push
ljmp
cmpxchg
aaa
pop
push
jns
dec
jg
lcall
sbb
pop
add
and
jbe
cwtl
decb
iret
adc
sub
pop
ds
push
ficoml
cmp
test
jbe
ret
iret
es
mov
out
les
in
stc
js
fcomip
mov
jo
adc
mov
jp
or
mov
fcmovb
gs
outsl
adc
loopne
clc
jnp
inc
je
mov
mov
fisubs
jb
test
mov
mov
bound
pop
cmpsb
imul
xor
fcoml
mov
inc
ss
jbe
cs
into
cmp
outsb
scas
xor
push
xor
jp
ja
dec
cs
addr16
fnstenv
mov
in
sarl
inc
aam
adc
and
fbstp
loope
dec
aam
push
xor
sbb
js
sub
pop
cmp
mov
mov
push
mov
fs
mov
bound
in
imul
in
mov
mov
mov
stos
push
push
repnz
jbe
and
inc
xchg
add
stos
iret
data16
dec
out
rcrl
dec
dec
push
push
sub
fildll
popa
nop
inc
push
jnp
es
and
push
int3
add
add
ljmp
lea
stos
push
nop
fcomps
insb
sub
xor
movsl
pop
insl
and
dec
push
decb
jecxz
adc
notl
or
cmp
idiv
fwait
cmp
pop
out
mov
sahf
xor
insl
test
icebp
movsb
mov
or
jge
add
aam
nop
adc
mov
mov
aaa
mov
cmp
sub
stc
dec
out
xor
nop
imulb
xor
and
pop
add
flds
cmpsb
gs
cmp
xor
cmpsb
fcomps
shll
outsl
cli
cmpsl
fcomps
sub
roll
inc
int
inc
push
inc
out
out
inc
dec
jbe
clc
stos
lods
push
push
sbb
sbb
or
mov
and
jmp
xor
repz
lcall
push
in
sbbb
sbb
sahf
aaa
aas
ljmp
cwtl
or
push
mov
lock
jo
out
cmpsl
movsl
stos
pminsw
mov
sti
push
cwtl
movsl
mov
mov
movsb
push
adc
xchg
xor
add
out
jno
cmp
mov
sar
lods
push
mov
push
pop
stos
or
ds
std
lahf
inc
xor
in
mov
inc
or
dec
xchg
inc
lock
cmp
add
xor
in
lock
iret
adc
mov
jecxz
mov
jns
mov
mov
je
inc
clc
add
jo
fwait
push
pusha
xorl
lock
out
shlb
mov
push
push
inc
lock
sbb
dec
jecxz
repz
cmp
insb
add
xor
inc
or
mov
pop
cmp
mov
push
repz
add
mov
pop
jecxz
xor
sub
mov
sbb
clc
or
jbe
movsl
fisubrl
or
andl
fidivs
add
jecxz
and
pop
mov
cmpsl
loop
sarl
sarb
inc
incb
lods
outsb
pcmpgtd
xlat
xchg
repz
adc
gs
sbbb
mov
mov
xchg
mov
mov
adc
sbb
sbb
inc
and
mov
es
shr
and
mov
pop
lahf
stos
andl
dec
icebp
add
add
fwait
jno
shll
jg
loop
lock
ss
push
xor
shl
cmpsl
ret
into
add
mov
notl
mov
sub
dec
mov
loopne
sbb
add
pop
arpl
pop
popa
hlt
inc
fcom
stos
testb
pop
sbb
ret
hlt
call
cld
icebp
xlat
jmp
adc
addb
nop
test
or
loop
cwtl
cld
lret
push
arpl
or
call
lock
in
iret
fstps
pop
sbb
push
repz
xchg
and
inc
sbb
js
je
shrl
ljmp
inc
push
std
mov
das
pop
pop
in
lods
je
fcompl
fsubrs
adc
mov
push
rcl
mov
in
xor
mov
lcall
mov
scas
push
mov
xchg
mov
in
shrb
nop
pop
jge
lret
xor
pushf
andl
ret
dec
mov
mov
inc
jmp
push
mov
call
pop
imul
imul
and
and
jb
and
push
rorb
scas
inc
sbb
data16
insb
nop
out
xchg
out
push
insl
xor
mov
loopne
shlb
lods
sub
xor
cmp
mov
dec
das
daa
inc
insl
lea
jg
cmp
negl
inc
popf
dec
test
mov
jb
add
lret
or
std
mov
push
sub
fs
cwtl
es
cmp
push
nop
inc
divl
or
push
add
lahf
mov
clc
out
inc
inc
jmp
push
pushf
fistps
or
lea
mov
aas
leave
mov
adc
jae
cs
shlb
push
scas
xor
xchg
push
stos
add
push
addr16
dec
mov
mov
mov
mov
icebp
dec
mov
testl
call
or
pop
ja
cs
cli
xor
cwtl
loope
lret
mov
xor
fnsave
mov
sbb
shrb
pop
push
mov
bound
lret
mov
push
enter
fwait
mov
movsb
inc
fcom
mov
das
shl
ss
loope
mov
pop
repz
push
scas
lds
or
mov
out
sub
hlt
cwtl
xor
mov
adc
mov
enter
jae
dec
loopne
adc
roll
pop
int3
cwtl
add
clc
cmpsl
sub
sti
movsb
xchg
outsl
jo
scas
push
push
call
push
int3
or
inc
jecxz
in
shlb
dec
dec
enter
pop
push
pop
dec
cwtl
pop
scas
inc
ds
xorb
and
add
xor
and
sub
flds
and
xchg
mov
ficoms
fidivs
adc
pop
out
shl
cmp
sub
in
xor
xor
or
hlt
and
aaa
lret
bound
pop
adc
jne
in
push
jno
jne
push
sbb
fdivs
cmp
lds
int
sahf
jo
add
ja
loopne
or
and
mov
or
sbb
lds
dec
in
adcb
mov
push
adc
inc
sbb
add
add
lock
dec
dec
inc
in
mov
mov
cmpl
insb
jmp
dec
adc
mov
fldcw
xchg
adc
add
cmpsl
xchg
pusha
gs
mov
xor
pop
xchg
or
xor
ss
sub
push
mov
popf
xchg
out
or
int
jne
scas
addr16
pop
or
call
test
movsb
in
data16
fmuls
inc
fldt
gs
lea
movsb
stc
pop
scas
mov
or
repnz
cld
jmp
mov
outsl
adc
jae
dec
lahf
jbe
decb
jb
mov
jns
pop
and
push
and
aaa
xlat
fdivl
push
es
fistps
xor
adc
mov
in
xor
inc
int
lret
into
cmp
popf
or
adc
aad
mov
push
mov
mov
push
cwtl
xor
in
dec
add
pop
ljmp
out
add
sub
cmpsl
out
jb
pop
mov
shlb
test
push
das
lock
mov
out
mov
out
mov
repz
sub
mov
jns
mov
sahf
xor
push
es
shrl
and
push
arpl
repnz
shll
sub
push
loope
imul
stos
es
sub
xor
bound
frstor
jp
das
push
jo
or
sbb
ret
rclb
dec
inc
lods
pop
jle
push
adc
stos
dec
movups
imul
xor
popa
fcomp
in
sub
mov
call
adc
ss
popf
mov
push
mov
or
roll
sub
rcrb
dec
push
aas
test
mov
gs
pop
pop
mov
loopne
adc
shr
lods
xor
ja
mov
hlt
icebp
jl
mov
stos
lret
out
push
dec
call
movsl
icebp
out
inc
or
xor
jp
mov
cmp
mov
ret
test
sub
lcall
loope
xchg
adc
aas
ja
xor
lahf
cs
sbbl
es
mov
sbb
push
xchg
xchg
xchg
fcomps
fadds
ja
enter
push
mulb
push
cmpsb
loope
pop
test
fadds
mov
negl
mov
ds
pop
pop
mov
insb
jl
insl
jb
je
add
js
jnp
into
push
pop
inc
scas
mov
pop
mov
xor
lahf
or
cld
pushw
std
lods
subb
inc
insb
mov
xchg
out
xor
es
inc
mov
push
int3
mov
call
push
insb
repz
ds
je
aad
jle
sbb
xchg
mov
repnz
and
push
pop
cmp
cmp
out
xlat
or
loopne
repnz
aas
adc
jmp
jecxz
into
test
adc
int
int
jo
fbld
and
nop
mov
clc
iret
test
dec
inc
pushf
push
enter
and
rolb
inc
xor
sub
mov
repnz
inc
and
pushf
int3
inc
cltd
jb
outsb
sub
lock
xor
sbbb
ss
in
jns
add
mov
add
sbb
in
push
xchg
enter
enter
cwtl
ret
das
pop
int3
xchg
out
xchg
sbb
push
and
xchg
mov
cld
shlb
jae
das
add
push
jbe
adc
dec
mov
xor
popa
mov
sub
push
int3
inc
jnp
call
jno
jo
fildl
bound
jae
scas
pop
outsl
daa
sbb
insl
xor
into
mov
mov
je
cmp
and
cmpsb
adc
fdivrl
pop
sub
mov
pop
mov
xchg
mov
sbb
xchg
dec
and
in
mov
gs
mov
pusha
push
push
push
push
shrl
or
fldcw
lods
icebp
aam
xor
xchg
mov
pushf
dec
js
in
outsl
and
cld
mov
xchg
inc
sbb
imul
sub
jecxz
leave
push
dec
dec
out
shll
push
cmpsl
cli
jp
scas
leave
sub
add
dec
pop
das
push
ljmp
sbb
pop
xlat
jmp
inc
imul
cmp
cmp
insb
add
adc
sub
mov
sub
fdivp
xchg
movsl
mov
mov
sbb
xchg
dec
subb
stos
xchg
cs
xor
push
xor
sbb
lahf
push
insb
jnp
pop
lods
sub
push
pop
lea
mov
jae
jno
mov
cltd
xor
inc
pop
aad
cmp
push
testl
xor
cld
cmp
push
add
jl
fwait
mov
pop
push
push
mov
bnd
push
xchg
or
popf
pop
mulps
mov
push
push
lcall
pop
dec
pop
cmp
push
outsl
test
push
psllw
jl
xlat
mov
dec
loope
imulb
mov
jmp
scas
jns
cli
hlt
sbb
push
sbb
jo
mov
push
mov
and
mov
out
jnp
es
pop
dec
jg
and
xor
xorl
mov
dec
adcb
push
js
scas
shll
ficomps
inc
pop
mov
aam
repnz
mov
mov
pop
ret
loope
push
sub
out
es
xchg
jae
shlb
jg
ja
or
mov
fcmovu
mov
adc
addr16
loop
or
sbb
mov
loopne
stos
aas
push
xchg
inc
ret
pop
inc
fstpt
cmp
popa
sahf
aam
add
enter
jno
pop
and
sbb
inc
inc
loope
adc
jle
shr
divb
es
fistpll
cmpsl
pop
and
cmp
pop
adc
add
nop
hlt
loope
lds
in
cmp
mov
std
out
ret
push
cmp
es
and
hlt
insl
sbb
pop
or
icebp
xor
sub
sarb
add
or
loop
or
push
in
out
in
pop
xor
fbstp
push
notb
adc
gs
call
cli
mov
ret
mull
inc
fsubrl
aaa
add
mov
in
fistl
bound
std
mov
push
xor
mov
push
in
js
pop
shll
cmp
pop
mov
inc
out
sub
mov
cs
insb
sbb
in
xlat
adc
or
cltd
jae
or
push
stos
fiadds
mov
xchg
js
popf
dec
out
push
adc
test
out
shlb
mov
aad
and
outsl
push
inc
xchg
in
std
out
fsubl
ljmp
jb
mov
add
cmpb
xchg
cs
fcoml
test
pop
lret
in
mov
jo
mov
add
rolb
xchg
loope
enter
cmp
addb
popf
loope
aas
push
sub
les
dec
cltd
push
inc
into
sahf
clc
mov
iret
es
je
rclb
scas
dec
movsl
push
or
in
pop
fstpt
mov
outsl
iret
int
sti
movsl
pusha
not
dec
rcll
clc
sbbb
shrl
and
mov
test
cmp
pop
test
aam
iret
push
daa
dec
lock
movsl
decl
xor
xchg
sbbl
loope
pop
xor
mov
push
roll
add
and
sbb
test
pop
sti
add
out
adcb
sarl
sbb
fwait
pop
jecxz
fdivrs
lret
stos
or
cmpsl
sub
sub
xchg
into
pop
imul
mov
aas
mov
loop
add
add
sti
push
add
push
aaa
xchg
aam
pop
ficoms
jbe
lcall
xchg
addr16
jae
sbb
xchg
add
pop
push
mov
jg
cmp
pusha
ljmp
xor
xor
sub
fisttpll
popf
xor
call
clc
cmp
repnz
push
inc
cld
lahf
hlt
fdivrs
enter
andl
incl
sbb
sbb
lods
xchg
pop
scas
mov
fldt
xchg
testl
das
pop
bound
inc
ret
imul
mov
roll
mov
inc
test
loop
in
adc
test
fbstp
dec
and
sub
mov
mov
or
int3
int3
push
clc
fldenv
enter
inc
popa
jle
xchg
mov
fmull
cltd
xchg
and
lods
cmc
or
addl
jmp
jns
mov
out
leave
mov
jne
dec
jb
aam
fsub
nop
sub
add
dec
leave
enter
rorb
mov
jns
movsb
dec
es
cmpsb
sub
cmp
and
test
adc
mov
arpl
adc
fsubs
daa
or
sbb
xchg
lods
mov
mov
fcoms
adc
jl
icebp
xchg
adc
adc
stos
and
test
mov
sarl
pusha
pusha
popf
shrl
fwait
sub
sbb
mov
and
clc
fsubs
push
inc
es
mov
cmc
jo
sbb
sub
adc
bound
mov
pop
and
cmpsl
sti
cmp
xor
and
xchg
push
mov
rcrl
cmpsl
clc
mov
dec
iret
and
cmpsb
in
fadds
jle
scas
cld
jge
sbb
aam
adc
daa
jle
ret
sbb
lods
jmp
push
shl
jae
clc
into
cmp
icebp
xchg
jns
xchg
andb
inc
mov
out
cwtl
fs
idiv
mov
imul
xchg
pop
daa
xchg
xor
cmp
loopne
add
inc
rclb
xchg
jge
xor
xchg
clc
pop
mov
into
rorb
xchg
pop
and
mov
out
jle
std
into
andl
pop
jnp
int3
cs
jo
call
mov
mov
aas
inc
sbb
or
xchg
mov
pop
loope
scas
push
mov
pop
test
lods
fisubs
push
call
out
mov
mov
add
mov
lock
sahf
mulb
mov
xchg
mov
inc
out
cltd
xchg
js
ficompl
mov
std
mov
sbb
push
into
imul
insb
sub
aas
popf
dec
push
nop
jno
mov
and
jb
dec
jecxz
leave
push
dec
hlt
iret
movsb
daa
notl
adc
das
push
inc
std
push
mov
stos
xchg
xor
mov
sbb
jl
lods
sub
xor
mov
test
sbb
sti
nop
sub
and
mov
cli
cmp
pop
incl
cli
pop
int3
sub
push
pushf
sbbb
leave
imul
adc
pop
repz
mov
dec
clc
dec
imul
mov
or
sarb
xchg
xor
sub
call
cli
push
mov
jnp
stos
mov
add
add
push
rolb
jbe
dec
loope
aad
ret
cmp
and
dec
je
lods
dec
pop
or
lcall
push
jecxz
dec
pop
xchg
shrb
cmp
xor
dec
sub
xchg
repz
bound
aad
std
and
cmp
and
cwtl
icebp
rcll
xchg
imul
imul
inc
inc
sbb
inc
popa
or
fidivs
pop
popa
and
lahf
movl
pop
movsl
adc
mov
pop
ds
mov
sub
mov
cs
data16
test
or
xor
mov
and
or
push
or
dec
pop
hlt
adc
fcmovu
mov
lahf
adcl
fstpt
pop
jb
jle
inc
jmp
test
pop
testb
and
jge
cli
dec
push
pop
stc
sbb
jns
fnstcw
push
push
lods
add
jg
xor
enter
add
fidivrs
jge
into
sbb
arpl
dec
les
mov
adc
test
sbb
int3
mov
imul
xor
xlat
cmp
call
and
xchg
lret
sub
mov
inc
fdivrl
add
je
mov
adc
and
das
cmpsb
daa
add
fmulp
loop
das
inc
bound
push
movsl
sti
sub
add
movsl
inc
mov
jl
add
lret
lea
jge
inc
je
filds
lret
hlt
jg
dec
inc
fs
pop
or
negb
xchg
add
cwtl
sbb
adc
push
dec
leave
push
mov
jg
fnsave
pop
push
sahf
nop
mov
pushf
cli
xor
loopne
and
in
pop
in
notl
mov
add
push
push
push
jno
test
sbb
sar
leave
popf
test
pop
cmc
push
std
cvtps2pi
jge
sbb
push
pop
outsl
sbb
sbbl
fldl2t
sbb
js
pop
sub
xchg
adc
imul
movsb
sub
cmp
push
data16
pop
ss
lahf
lcall
in
jne
aaa
outsl
push
mov
cs
add
jo
cmp
sbb
dec
add
mov
imul
sub
mov
inc
test
sbb
dec
clc
and
fnstenv
mov
sbb
mov
jg
dec
xchg
mov
aad
jno
pop
test
xchg
pop
repz
xchg
pop
loop
jp
pop
movsl
xchg
insl
mov
push
pop
sub
mov
pop
xchg
insb
enter
pop
mov
jle
fldcw
push
pop
ss
dec
hlt
and
inc
inc
adc
stos
jno
es
cmp
cmp
and
mov
insl
scas
mov
out
mov
mov
inc
and
test
jl
test
add
fcmovnbe
repz
cld
xor
xor
lret
out
xor
mov
repnz
fisttpll
sti
push
sub
pop
shlb
sub
test
popf
loope
cltd
data16
gs
aaa
xchg
fsts
xor
add
inc
scas
je
lahf
xchg
cmc
mov
jle
cmp
pop
ljmp
inc
mov
mov
dec
sbb
scas
dec
int3
cs
jecxz
fcmovnbe
pop
stos
mov
mov
and
push
lahf
jno
xor
ljmp
lcall
movsl
leave
mov
aam
and
pusha
sbb
add
aad
idivl
js
adc
cld
sbb
fstl
xchg
dec
lret
pushf
mov
xchg
push
cmp
addl
pushf
scas
cmp
jb
dec
aad
int3
lahf
and
or
arpl
jae
aam
test
sub
rcll
outsl
push
jp
xor
and
add
repnz
pop
cmp
sti
fdivr
or
clc
clc
jg
push
sub
lret
xchg
and
insl
pop
sub
sub
sbb
xchg
in
adcl
fs
push
out
xchg
push
lock
aad
xor
add
aam
mov
out
outsl
xchg
sub
fisubl
sub
scas
xor
leave
sti
jb
pop
dec
mov
out
mov
dec
mov
xor
dec
loop
cltd
lahf
ss
xchg
push
xor
out
ss
or
jmp
push
cmpsl
add
test
sub
jbe
mov
jle
cs
add
leave
loopne
fisttpl
sub
xor
mov
and
mov
lods
xchg
std
stos
push
cwtl
cs
pop
je
lea
sbb
test
pusha
xor
test
push
push
ss
les
orl
sbb
add
aam
rcrl
in
cltd
push
jecxz
negl
ds
out
mov
push
adc
stos
mov
aad
xchg
mov
mov
cli
mov
and
inc
sbb
inc
sbb
fwait
mov
repnz
subb
leave
pop
jb
inc
fcomp
xchg
filds
xor
inc
xchg
cltd
xor
jge
or
fs
xchg
repz
std
xchg
aam
cmpsb
div
cmp
insb
lods
jg
fimull
fnstcw
sub
pop
adc
push
add
mov
mov
shlb
hlt
push
or
fdivl
mov
xchg
xor
lods
xor
sub
test
dec
lods
cmpsl
dec
mov
pushf
push
jmp
jge
jl
outsl
jb
mov
or
fwait
outsl
notl
setnp
outsb
push
sbb
das
adc
mov
es
xchg
sbb
pop
xor
mov
sub
sbbl
loop
cmp
fnsave
scas
push
out
cltd
adc
inc
popa
or
dec
les
sbb
push
pop
dec
nop
inc
ja
ja
andb
movsl
mov
outsb
mov
call
loop
fdivl
shrb
inc
mov
sahf
aaa
insl
mov
rcrb
push
cltd
test
adc
pusha
adc
adc
xchg
in
mov
and
cmp
xchg
ljmp
in
negb
lcall
mov
pop
pop
xor
or
push
loopne
or
mov
sbbb
xchg
adc
or
lods
mov
mov
adc
aas
adc
sub
aad
loop
push
repz
and
or
ljmp
pusha
enter
sbb
aad
iret
sub
jge
ret
jle
movsb
xor
loope
lret
mov
pop
cwtl
fs
mov
in
and
mov
arpl
repnz
jle
imul
movsl
mov
push
fdivrl
scas
lahf
fiaddl
lods
sub
fstpl
pop
push
mov
jbe
push
sub
push
test
pop
xlat
xchg
std
insl
mov
and
ss
scas
push
lret
jb
push
movsb
xchg
pop
sub
mov
ja
repz
sub
add
mov
lods
fldcw
xchg
js
mov
pusha
test
dec
jmp
nop
sub
xchg
aam
out
push
repz
xor
ja
cmp
ljmp
lcall
pusha
jmp
loop
sub
stc
test
nop
arpl
pop
xchg
jns
pop
aam
insl
add
inc
arpl
xor
pop
test
or
daa
inc
fs
pop
sub
lods
jo
fidivs
inc
fdivl
popf
sub
cmp
jnp
test
cmp
stos
xor
rolb
pop
and
mov
xor
sub
inc
push
icebp
insb
pop
jmp
lret
jb
in
stos
mov
rcr
je
adc
push
push
cmpsb
pushl
push
lahf
cmp
push
mov
les
jge
pop
cmc
subl
pop
nop
and
mov
push
push
inc
push
out
std
jbe
insl
pop
iret
jno
sbb
pop
mov
dec
push
push
popf
inc
in
inc
sbb
lret
sub
sbb
hlt
nop
jl
out
in
xor
fimull
push
fldt
int3
gs
in
xor
push
or
lahf
mov
int
and
shl
stos
mov
sub
addr16
lcall
fmuls
in
xor
push
ljmp
test
and
mov
xor
inc
add
dec
add
fidivl
ret
mov
ja
xchg
inc
cmp
jmp
loop
push
fcmovb
shlb
fmull
mov
pop
arpl
ss
adc
push
push
arpl
mov
mov
mov
fcomip
icebp
int
adc
add
cmc
shl
sub
mov
push
push
add
cli
aad
xor
fwait
dec
xchg
ss
iret
sub
int3
pop
jl
push
push
sub
repnz
xor
pop
xor
adc
xor
pop
shlb
sbb
hlt
fwait
lea
gs
movsl
cmp
cmp
inc
dec
add
stos
ds
aaa
xlat
fldenv
jecxz
in
imulb
cmc
in
push
shl
xor
lea
mov
inc
loop
shrl
mov
loopne
shlb
jns
enter
cmp
mov
leave
pop
pop
pop
rcrl
mov
in
enter
ljmp
pop
jne
or
int3
sbbl
mov
sbb
mov
xlat
adc
dec
aam
push
gs
push
xor
rcll
es
popa
pop
shl
jns
add
rcll
mov
dec
test
sub
cli
jbe
hlt
mov
test
int3
or
add
daa
xor
jle
jg
adc
fdivrs
call
or
call
add
or
dec
jb
dec
stos
xchg
hlt
push
ror
sub
insl
mov
repz
mov
sbb
adc
loopne
pushf
pop
ss
or
push
sbb
insl
xor
sub
pop
and
push
add
out
dec
adc
out
mov
ds
movsb
hlt
add
mov
aam
adc
mov
push
aas
lcall
inc
mov
jnp
cli
andl
dec
jno
fsubrl
push
pop
out
mov
and
add
jnp
push
out
sbb
in
das
jmp
sub
push
mov
lcall
push
jmp
add
inc
cwtl
ret
ljmp
jmp
inc
pop
mov
test
and
js
inc
lret
popa
nop
mov
test
fcompl
cli
ret
cmc
sbb
pop
cld
fisubs
sub
icebp
shrl
inc
cwtl
rol
insl
scas
cmp
scas
or
in
inc
dec
pop
in
xor
out
push
cmp
orl
pushf
testl
lods
xchg
int
arpl
mov
ret
adc
jecxz
mov
mov
cmp
sbb
in
lret
jbe
hlt
cmpsl
sbb
push
lea
jecxz
testl
jl
pushf
xchg
iret
fists
scas
mov
shrb
push
aas
dec
test
xlat
fcoml
xchg
mov
mov
xchg
mov
pop
mov
fdivp
add
sub
scas
test
iret
mov
cmpsb
lods
adc
inc
lds
jp
fdivr
roll
fdivrs
inc
shr
arpl
out
ficoml
pop
pop
dec
loopne
sub
addr16
adc
cmp
add
mov
aad
mov
sahf
out
js
cmp
push
jne
jo
iret
sub
xchg
repz
aam
andb
mov
jge
mov
adc
es
fs
lcall
fsts
test
sub
jmp
insb
add
or
cli
in
and
jb
test
mov
imul
sub
add
call
jae
or
fisttps
mov
adc
decb
lods
mov
and
movl
sbb
xchg
cmpsl
imul
jle
xor
sub
and
jge
fidivrl
sahf
lock
scas
inc
arpl
mov
stos
xor
push
mov
sarb
sbb
jnp
cmp
lock
and
mov
jmp
pop
fnstenv
stc
ds
push
pusha
push
xchg
xchg
das
jg
add
stos
pop
fwait
xor
call
xor
das
fcmovbe
xchg
xchg
fisubrl
lret
aas
sbb
lahf
add
and
idivb
ja
arpl
lret
jmp
mov
cmc
mov
or
mov
add
inc
fs
inc
loopne
xchg
fsubrl
sbb
sub
cs
cmpsl
xor
loopne
mov
sub
jmp
sti
cs
les
lret
push
js
sarb
out
push
sbbb
loope
mov
and
xchg
test
mov
loope
mov
and
push
fcmovnbe
sbb
lods
fidivs
xor
mov
fidivrs
and
mov
xrelease
leave
aad
sti
lea
aaa
sbb
loope
repnz
lods
xor
cmp
pop
outsb
or
dec
test
mov
aam
bound
int3
int
jae
lods
mov
xchg
nop
jae
dec
xchg
sbb
stc
sub
cwtl
sbb
out
mov
inc
fdivp
std
test
test
addr16
mov
notb
fstpt
mov
stos
test
inc
cs
jl
mov
aaa
ret
insl
pop
hlt
lcall
xor
out
sub
pop
jl
jl
call
or
ret
mov
les
sar
idiv
pop
and
and
fs
in
xor
adc
jmp
icebp
ss
aam
nop
push
fdivp
push
enter
ljmp
and
mov
jp
pop
mov
mov
adc
mov
ret
mov
push
xlat
jb
test
stc
test
in
fs
adc
sti
jbe
cmp
mov
mov
mov
insb
jno
out
sub
adc
in
mov
pop
scas
add
xchg
mov
pop
cmc
fisttps
mulps
lahf
jb
iret
sbb
ja
lods
sub
vpavgb
gs
add
mov
xchg
cmp
aas
lcall
shlb
mov
adc
xchg
mov
xor
addr16
in
jae
in
shrl
mov
sbb
push
pop
mov
fbstp
mov
xchg
pop
popf
sbb
push
arpl
mov
stc
adc
lret
adc
out
cmp
adc
mov
xchg
jp
mov
xchg
fsts
and
dec
shlb
loope
cli
adc
out
lods
push
inc
adc
xor
scas
mov
add
lods
lods
inc
jecxz
mov
repz
popf
push
jne
test
push
ljmp
insb
dec
lret
gs
fs
xchg
scas
call
test
lods
les
gs
fnstcw
jb
lea
xlat
ds
ljmp
push
pop
shll
sub
sub
out
ficomps
gs
dec
bound
mov
or
fucomip
adcb
push
add
sbb
fadds
jl
xor
out
daa
pop
xor
mov
mov
in
shrl
inc
mov
cmp
testl
bnd
sbbl
into
xchg
sbb
sbb
cwtl
push
mov
shll
gs
lret
cld
cltd
cmp
or
stos
int
fcompl
ret
jbe
enter
sub
and
jmp
fidivl
das
data16
loop
push
dec
dec
cmp
xchg
icebp
cmp
imul
push
ja
jnp
roll
insb
jmp
fbld
outsl
push
loopne
outsl
add
sarl
pusha
cltd
cmpsb
psrlq
xchg
mov
test
push
ja
jns
mov
pop
jg
je
mov
cli
jno
popa
sub
shl
sub
fcompl
testb
and
pop
mov
fsubrs
jns
frstor
push
or
inc
inc
or
xor
lcall
jae
mov
and
movsb
sub
aad
dec
add
jge
loopne
pop
iret
data16
nop
dec
xlat
sub
test
sahf
push
in
dec
mov
int3
daa
and
shl
mov
fisubrl
ret
in
test
dec
loopne
push
dec
pop
iret
jl
das
mov
xchg
movsl
push
push
jp
jle
sbb
test
mov
cmpsb
cld
lcall
jne
pop
imul
lods
sub
push
mov
and
inc
decb
inc
jg
loope
push
push
ja
xorl
or
xor
pop
cmpsl
xchg
dec
add
insb
ret
inc
test
dec
cmp
leave
inc
pushf
mov
or
ret
adc
in
fildll
rcrb
scas
add
cmp
lds
loop
test
jmp
scas
adcb
aaa
adc
orb
lea
jb
aam
iret
scas
and
fwait
lods
dec
lock
xchg
in
stos
and
push
or
jns
pop
pusha
pop
bound
loopne
cs
jmp
dec
dec
psubq
imul
and
jge
inc
xchg
push
pusha
cmc
jge
mov
ret
xlat
cs
roll
mov
adc
insb
mov
cmpsl
aas
jp
ss
hlt
pop
adc
das
inc
cs
dec
fdivl
adc
es
lea
adc
xchg
sbb
lods
adc
into
jns
xor
leave
xchg
sub
mov
push
loop
dec
pop
roll
nop
xor
ficoms
scas
cmovns
stc
sahf
movsb
stos
mov
cmp
pop
sahf
cmc
or
xchg
dec
push
movsl
andl
sbb
mov
push
dec
ss
xorl
mov
add
adcb
or
push
jns
dec
pop
cli
ja
cmp
lods
inc
stos
test
frstor
leave
imul
cmp
dec
mov
dec
mov
dec
rorl
xchg
jl
out
imul
pop
icebp
das
or
mov
xor
xor
jge
cmp
adc
clc
les
mov
mov
pushf
xchg
mov
les
push
call
ds
dec
fs
shlb
les
mov
push
pop
add
popf
test
lret
jne
sub
inc
or
dec
pop
leave
adc
jecxz
push
jecxz
and
test
int
xchg
sbb
outsl
daa
shl
insl
test
repnz
lret
sbbb
nop
push
mov
mov
out
or
mov
inc
cmpsl
push
inc
sbb
xchg
add
mov
mov
repz
mov
dec
roll
pop
jo
xor
adc
nop
cmc
or
adc
ljmp
or
mov
push
stc
sub
sub
xchg
out
lea
xchg
orb
mov
dec
add
lea
push
mov
or
sub
inc
sti
cmpl
mov
jl
or
fidivl
fs
ljmp
mov
xchg
mov
lahf
mov
and
out
stc
aad
or
into
jne
gs
gs
cld
cltd
inc
fiadds
iret
fs
rcrl
or
sub
movsb
xor
hlt
data16
ss
xchg
xor
test
xchg
push
or
pop
shr
sti
add
insl
jo
je
dec
cmpsl
push
fmull
stos
push
pop
sahf
pop
inc
sbb
mov
into
loop
xchg
jl
enter
inc
adc
fwait
pop
outsl
or
std
out
adc
xchg
testl
sbb
rsm
sbb
inc
sti
inc
dec
add
sbb
shll
icebp
lods
jnp
xlat
cmpl
inc
push
mov
cltd
sbb
les
cmp
sub
inc
in
mov
mov
lret
push
mov
inc
xor
into
popa
popa
xchg
pop
pop
nop
sbb
sarl
xor
out
jno
and
mov
dec
jne
mov
addr16
pop
cltd
inc
adc
jb
jne
js,pn
fldt
int
mov
mov
movsb
xchg
jmp
xchg
bound
push
sbb
mov
sub
lret
push
ret
in
repnz
clc
or
cmp
outsb
mov
js
je
pop
lods
or
movsl
ss
lcall
and
push
ret
sub
mov
mov
fistpll
jbe
push
push
loopne
sti
mov
mov
lret
push
xor
push
sbb
out
ss
adc
sub
or
sti
sub
jp
hlt
mov
data16
sub
jg
add
jne
mov
stos
call
std
sahf
push
mov
push
cmpsl
movsb
xchg
mov
fcomi
fs
scas
xchg
hlt
pop
mov
mov
inc
fiaddl
cld
adc
xor
clc
gs
xchg
dec
push
mov
xchg
ljmp
fcmove
imul
das
in
mov
sbb
xor
sub
lret
scas
out
icebp
jmp
cmp
popf
pop
lahf
mov
out
roll
pop
add
cli
xchg
jp
jno
and
das
fisubs
inc
pop
jae
jnp
icebp
stos
rcr
dec
fxch
js
shll
mov
leave
or
cmc
inc
mov
scas
loopne
call
xor
insl
push
fcmovne
test
les
cmp
add
data16
inc
lcall
pop
xor
lahf
ss
pop
insb
xchg
fildl
mov
cmp
mov
or
push
adc
int3
push
sbb
icebp
movsl
out
decb
cmc
loopne
xor
roll
pusha
in
out
or
jle
outsb
and
enter
in
leave
adc
pop
push
out
in
icebp
sbb
mov
fnstcw
call
jge
or
fists
aas
adc
mov
inc
bswap
out
mov
pop
scas
cmpsb
or
mov
fiadds
xchg
jle
mov
xor
mov
shll
ret
dec
push
push
xchg
mov
and
clc
xor
lea
xchg
pop
in
ljmp
loopne
and
jg
scas
cmp
pop
cmpsl
inc
xchg
mov
sti
jl
pop
sbbb
pop
add
lods
xchg
pusha
out
inc
adc
sti
add
jno
push
lods
sbb
jle
mov
sbb
pop
dec
out
xchg
shll
mov
jg
bound
pop
and
pop
popf
inc
pop
les
mov
jnp
sbb
dec
fwait
xor
lods
or
mov
push
xlat
das
or
dec
mov
jne
and
mov
imul
cmp
ljmp
push
out
add
scas
jne
xlat
insl
jecxz
gs
mov
arpl
jg
test
push
or
outsl
popa
outsb
xchg
es
fimuls
xchg
arpl
lea
outsb
or
xor
mov
sub
add
pop
xor
ficomps
fs
push
jmp
adc
shlb
addl
dec
in
push
sbb
sub
jbe
in
mov
out
cld
mov
inc
faddl
jbe
xlat
dec
nop
mov
sub
mov
xchg
sub
and
xchg
es
rolb
fadds
shr
gs
mov
mov
sbb
rol
subl
rcr
sti
and
sub
or
pop
roll
lahf
add
cld
mov
jae
roll
sbb
xor
addb
xchg
fldcw
iret
cmp
cmp
inc
dec
movsb
mov
sbb
roll
and
fiaddl
adc
inc
fisubs
push
push
in
cli
pusha
sahf
clc
shrb
montmul
cmpsb
test
add
jnp
mov
paddusw
lret
push
mov
cmp
jecxz
and
out
lock
sbb
orb
dec
dec
outsb
jecxz
xchg
or
test
roll
and
or
sbb
pop
leave
aad
xor
repz
add
hlt
mov
sub
lret
jnp
fdivr
jmp
leave
outsb
cmp
mov
push
int3
lock
jne
inc
jmp
jmp
repz
xor
xchg
inc
je
xlat
pop
jns
in
push
cmp
sub
in
xor
outsl
call
pop
xor
pop
std
pusha
sub
push
lret
sbbb
mov
cmp
push
fnstsw
addr16
testl
jg
aaa
jnp
in
cmpsb
out
add
out
js
xchg
push
inc
fwait
or
push
test
mov
jne
ss
xchg
stos
and
imul
loop
inc
cmp
shrb
aam
inc
and
icebp
or
xor
call
rol
repz
jae
stc
jmp
in
in
or
and
xchg
mov
mov
adc
sbb
inc
movsb
jg
lahf
divl
movsb
cmp
mov
push
pusha
or
push
add
sub
pushf
pop
dec
mov
hlt
cli
sbb
clc
adc
test
cmp
pusha
out
mov
clc
test
push
inc
outsb
or
xchg
out
addb
add
jl
bound
xchg
iret
inc
xor
jle
pushf
cli
aam
fstl
push
and
insl
daa
js
pop
mov
fwait
mov
loopne
mov
cltd
pusha
test
imul
aas
cmpsl
mov
int3
jmp
mov
stc
push
mov
je
fnsave
lods
mov
fidivrs
push
aam
outsl
out
stos
lret
imul
fdivrl
pop
sub
push
add
sub
enter
aad
add
mov
pop
clc
aas
or
xor
mov
mov
loopne
xor
inc
cld
sahf
cltd
out
jl
mov
lock
xchg
das
pmulhw
push
fnsave
and
sbb
gs
lcall
mov
or
andl
lods
xchg
cmp
lret
nop
dec
loopne
negl
aas
push
nop
je
push
dec
movsb
adc
imulb
and
dec
push
lock
push
jmp
xor
xchg
dec
test
shll
loope
fistps
rcr
sub
sbb
or
xchg
dec
daa
cmpsl
xchg
sarl
mov
push
pop
add
add
cmpsl
jp
popf
call
fs
pop
lock
and
cmpsl
cmp
cmp
popa
cmpsl
adc
test
into
ljmp
sbb
xchg
rclb
mov
jnp
inc
in
mov
mov
lds
cmp
or
and
jae
rorb
add
mov
in
les
ljmp
outsl
loopne
push
dec
movsb
pop
push
std
cli
mov
xchg
add
stos
pushfw
mov
jbe
mov
mov
and
inc
inc
xchg
jnp
je
sahf
clc
inc
mov
add
rcrb
push
push
xchg
dec
mov
gs
sbb
mov
in
js
cmpsb
les
xor
xor
xchg
stos
cmp
scas
js
pop
cli
jnp
mov
and
adc
adc
and
loop
add
push
insl
inc
cmpsl
les
jo
into
mov
cmpsb
sbb
popl
lret
out
addr16
xchg
mov
test
pushf
pop
insb
push
add
imul
jo
cmp
dec
lcall
sbb
cmp
push
sbb
inc
shl
test
jb
shrl
mov
insl
jge
inc
cltd
xchg
and
aam
cmp
andl
out
ret
mov
jp
test
push
xor
sub
inc
cmpsb
pop
call
mov
fucomp
outsb
shll
add
scas
inc
lahf
mov
stos
loope
in
stc
sbb
dec
sbbl
loop
inc
clc
mov
push
test
ret
popl
stos
rolb
out
jg
cmp
xchg
ljmp
scas
jbe
gs
inc
mov
movsl
sti
jnp
push
jo
xor
sahf
scas
mov
dec
andb
mov
lcall
std
xchg
iret
stos
lret
insb
and
mov
add
mov
push
push
out
lahf
xchg
aas
mov
sbb
jecxz
ja
xor
push
std
cld
and
adc
mov
daa
repz
and
jnp
xchg
push
ljmp
and
test
addl
adc
jo
addr16
es
sahf
stos
clc
inc
insl
outsl
sbb
mov
imul
xlat
insl
fsts
jmp
loopne
sbb
scas
pop
mull
dec
sub
adc
mov
jl
je
jge
mov
fisubl
loopne
inc
mov
pop
inc
mov
adc
into
adc
mov
pop
adc
mov
dec
loope
sahf
js
aas
stc
lea
dec
push
jp
ret
pop
sub
push
hlt
scas
push
add
aam
xor
data16
add
xor
jno
test
jae
jmp
out
popa
xor
and
dec
push
movsb
aas
stos
mov
dec
adc
daa
inc
mov
mov
and
rcrl
jns
filds
shll
faddp
loop
pop
mov
fnsave
push
clc
or
push
sarl
sub
loopne
cmp
stc
inc
adcb
mov
sbb
sarl
and
cmpsb
into
fcoms
and
stos
test
jl
dec
int
xor
add
lret
cmp
cmovns
pusha
cmp
aam
inc
pop
outsb
lret
rep
cmp
adc
int3
push
ret
push
mov
imul
pop
mov
jmp
aas
mov
shr
mov
xor
fmull
mov
push
fmuls
pop
scas
call
dec
lret
jecxz
lret
insb
fxch
popf
inc
mov
dec
cmp
scas
mov
cmpsb
test
dec
mov
xchg
inc
pop
mov
push
add
xor
jne
sbb
mov
mov
hlt
stc
jmp
add
jne
testb
adc
out
std
mov
addr16
push
aad
jge
pop
aam
popa
outsb
adc
js
or
sarb
test
inc
iret
jo
aas
popf
push
out
mov
repnz
pop
lahf
lock
cmp
addr16
clc
push
scas
lret
and
xchg
or
push
mov
ret
arpl
xchg
jg
pop
icebp
push
cmpl
dec
adc
jbe
bound
push
rorl
push
cmp
add
inc
xor
movsb
lahf
rclb
mov
xchg
negl
and
mov
inc
sbb
loopne
cmp
pusha
outsl
xlat
dec
pop
mov
scas
call
xlat
jb
lock
insb
lods
mov
nop
rorl
mov
lret
inc
inc
pop
cmp
enter
add
inc
add
push
mov
mov
xchg
inc
jae
cmp
hlt
das
mov
lcall
dec
jle
pop
inc
lock
into
cmovae
inc
lcall
pusha
fistpl
loope
fistpll
fsubl
loop
jne
dec
jae
jp
sti
or
add
sub
pop
push
jmp
js
xchg
cwtl
xlat
insb
vprotq
insl
adc
das
pop
and
cmpsb
mov
xor
aad
test
shrl
rorb
test
push
mov
lcall
xor
inc
or
sahf
std
addr16
xchg
fnstsw
fs
ds
mov
test
cmp
and
insb
gs
xchg
pop
cld
dec
add
dec
repnz
mov
push
ss
sub
cwtl
push
pop
xchg
jecxz
popa
sub
mov
dec
loope
popf
test
ss
repnz
fcmovnb
cmp
jmp
loop
jnp
seto
xor
test
inc
pop
insl
jnp
test
mov
mov
jbe
call
cld
jg
test
or
and
iret
mov
push
pop
repnz
test
in
scas
adc
stos
sub
or
hlt
mov
das
adc
xlat
shrl
xor
add
ja
les
test
repnz
andl
leave
jbe
dec
sub
dec
aad
jno
fwait
xor
xchg
add
ret
mov
loop
bound
pop
hlt
andb
mov
inc
and
fsubrp
adc
in
sbb
pop
fs
mov
cmp
push
js
add
inc
lock
js
inc
mov
jno
clc
scas
leave
xchg
mov
or
jecxz
sub
add
fimuls
roll
insb
mov
xor
and
cwtl
mov
shrb
mov
in
cld
fcmove
jb
jnp
jbe
cld
xchg
sub
out
inc
lret
lahf
cmp
jne
jmp
sti
movsl
xor
aas
push
fwait
push
popl
jge
stc
je
sbb
inc
test
stos
push
sti
adc
mov
and
xor
jb
mov
stc
sub
mov
dec
mov
mov
and
rclb
fs
in
and
outsb
push
pop
dec
fsubrp
jge
mov
adc
fidivl
fisttps
mov
clc
jae
cmp
mov
jnp
xchg
jo
mov
jl
shrb
sbb
imul
fmuls
outsl
leave
loop
pop
sti
lret
push
out
out
mov
jle
ret
loope
lahf
out
fldl
lahf
ss
dec
xchg
stos
roll
cmp
enter
xchg
add
and
int
cmp
fiaddl
aam
dec
insl
push
jnp
adcl
fistl
cmc
test
mov
and
lds
jne
test
adc
xchg
ss
add
test
test
mov
add
add
xlat
cmpsb
out
loop
in
sbb
scas
jle
jb
mov
sub
addb
xchg
lds
cmp
clc
push
call
xor
outsb
jle
repnz
xor
ret
bound
jae
lods
and
sahf
pusha
lcall
add
mov
mov
sti
sti
push
pushf
repz
lret
dec
cmp
xor
pop
mov
xchg
aas
ljmp
push
mov
push
jbe
push
hlt
xchg
cltd
out
cmc
cld
push
stos
cli
xchg
scas
pop
inc
sbb
cld
jnp
add
stc
inc
sahf
out
sbb
jecxz
es
aas
and
ss
jnp
scas
inc
negl
repnz
int
jbe
xchg
imul
jbe
inc
push
mov
icebp
jl
cs
mov
xor
sub
pushf
inc
mov
mov
push
sbb
mov
or
xchg
adc
sbb
xchg
inc
popf
fs
repz
push
outsb
add
pop
hlt
add
push
cmpsl
jne
loopne
mov
adcl
pop
fldt
sahf
ds
iret
outsl
xor
add
xor
movsb
mov
cmp
imul
inc
repz
ljmp
xor
nop
dec
lcall
fs
pop
xchg
dec
enter
insl
push
icebp
adc
and
mov
loop
inc
jl
repnz
pushf
sahf
jg
inc
cmp
aam
les
pop
push
or
add
mov
call
or
pusha
ss
dec
out
mov
dec
push
lds
pushl
jg
cmp
addr16
out
jae
andl
add
subb
mov
fs
aas
xor
adc
movsb
fisttpl
lret
cmpsb
clc
in
mov
or
popa
pop
push
mov
add
fcomi
int3
mov
clc
orl
dec
lret
xchg
aaa
aas
aam
popf
mov
fists
push
inc
ja
mov
iret
sbb
outsb
jne
test
adcb
testb
add
sub
inc
xchg
ss
jmp
adc
add
push
fldl
scas
ret
iret
es
xchg
ss
iret
cmp
cmp
mov
ja
rol
aam
movsb
addr16
dec
mov
cld
dec
decl
inc
push
and
inc
data16
xchg
int
cmp
mov
mov
mov
stos
stc
fdivrl
ret
push
push
add
push
cs
ss
push
sub
inc
mov
in
jns
sub
insl
mov
or
stos
std
mov
test
dec
cli
outsb
pop
mov
fsub
mov
stc
testb
sbb
sbb
aad
cltd
pop
in
repz
or
dec
ds
push
sbbb
dec
mov
inc
subl
sbb
in
mov
jmp
push
std
sbb
les
pop
adc
push
xor
push
test
ljmp
sahf
outsl
push
stc
ror
mov
lea
sbb
mov
loopne
inc
fwait
pushf
rcrl
sub
inc
frstor
ret
fs
int
sbb
xchg
pop
push
leave
dec
cmp
jg
dec
jo
cli
popl
rcrl
xchg
inc
push
test
push
mov
outsb
lds
sbb
xor
adc
pop
push
cld
sbbb
cmc
ja
xor
pop
mov
xchg
stos
cmp
pop
inc
stc
dec
dec
xchg
push
sub
dec
dec
add
push
sbb
in
insl
sbb
inc
pop
mov
loopne
mov
dec
push
fstps
cmp
loope
in
push
pop
sbb
xor
mov
fsubrl
fimull
adc
cmp
decb
pop
mov
pop
xchg
inc
mov
and
sbb
mov
mov
mov
les
sub
dec
dec
dec
jb
outsb
inc
jmp
push
push
push
clc
jne
mov
mov
jmp
or
fistpll
push
insl
int3
arpl
mov
pop
data16
xchg
call
aas
outsb
movsl
into
xchg
sub
push
sarb
loope
mov
inc
or
inc
add
fldenv
add
fisubl
mov
jns
scas
jbe
or
jo
and
mov
xchg
mov
out
mov
pop
stc
cmp
add
ds
push
sub
test
lret
and
lcall
pushf
push
cmp
and
xchg
ret
dec
dec
xchg
jecxz
loop
push
loopne
mov
leave
jmp
jge
lock
sbb
ret
xor
test
adc
xor
push
inc
xlat
inc
inc
xchg
cs
pop
scas
add
arpl
sub
fcomps
sub
jle
out
mov
insl
xchg
add
push
addb
lds
test
xlat
lret
ljmp
aas
fstp
imul
fs
sbb
loop
test
mov
jl
and
imul
lods
sbb
dec
int
sub
es
popl
cmp
mov
inc
int3
mov
mov
push
aas
stos
lock
pop
scas
xor
pop
jg
mov
lahf
mov
dec
dec
jg
mov
pop
stc
pop
popf
aam
daa
sub
cmp
les
shll
mov
adc
sub
push
or
nop
into
pop
mov
ret
jne
add
inc
cld
xchg
js
lcall
jmp
xor
pop
mov
sub
sbb
adc
jg
seta
mov
xchg
lcall
movsl
scas
in
push
cmpsl
xchg
xchg
push
sbb
add
pop
ljmp
adc
mov
test
or
pop
mov
in
sbb
mov
int
les
jecxz
rcrb
push
fs
fdivrl
stc
adc
shrl
inc
jo
je
fisubl
pushf
mov
pop
cli
ljmp
jp
sub
mov
add
fisubl
mov
loopne
inc
cltd
cmovno
push
bound
mov
bound
aas
stos
mov
test
mov
xor
inc
ret
cmp
xor
push
aas
cmp
cmc
inc
mul
inc
stc
xchg
sbb
pusha
xor
push
out
adc
mov
mov
dec
dec
movsb
mov
pop
adc
addr16
aas
out
scas
cmp
seta
pop
xor
lcall
pop
rep
pop
inc
mov
lods
ja
jo
insl
test
daa
mov
js
xor
push
test
out
sub
jb
inc
mov
add
lahf
in
jp
stos
ret
fwait
sub
push
movsb
inc
inc
sahf
jns
xchg
fistps
gs
outsl
adc
in
outsl
xchg
adc
or
or
fs
icebp
and
pop
xchg
sub
cli
dec
out
and
and
xlat
jbe
add
add
daa
or
out
sbb
ret
mov
sbb
dec
arpl
pop
pop
shll
lret
aaa
xchg
pop
dec
enter
mov
sahf
gs
or
mov
fidivl
jge
test
mov
xchg
lods
xor
int
cmp
pop
loopne
mov
pop
jmp
push
shlb
adc
imul
inc
out
push
fs
xlat
mov
pushf
repz
pop
sahf
leave
adc
push
mov
movl
sub
or
mov
inc
pop
loopne
mov
mov
loopne
pop
sbb
push
stos
jns
hlt
mov
daa
mov
stos
add
dec
jnp
jle
test
or
das
or
inc
jnp
pop
repz
les
outsb
dec
sub
push
push
pop
sahf
dec
js
bound
push
lahf
ss
sub
mov
lret
xchg
leave
mov
sbb
fbstp
and
es
std
cmp
mov
fsub
inc
jnp
cmp
xor
scas
mov
sti
push
push
sub
adc
or
test
jnp
mov
das
cmp
sbb
jno
aaa
insl
or
in
cmp
movsb
cwtl
je
jmp
std
push
pop
adc
ja
insb
sti
or
mov
imul
mov
sub
jae
das
xchg
out
in
sbb
mov
jge
sti
add
push
push
dec
js
inc
sub
inc
sbb
icebp
stc
cmp
subl
or
int
shrl
cmpsl
fstps
lods
imul
cmp
xchg
popl
repz
sti
fwait
xor
fcompl
pop
jo
push
add
mov
das
fsubl
test
sub
pop
push
mov
mov
xor
fcoml
cmp
out
jecxz
out
test
push
gs
in
xor
int
xor
jns
repnz
ds
adc
push
inc
jb
adc
fsub
rclb
push
cwtl
cs
aaa
pop
cmp
lock
lcall
mov
iret
frstor
lret
loop
mov
push
call
shll
or
mulb
jecxz
or
inc
xchg
dec
and
inc
fdivrl
inc
lahf
sbb
mov
rorl
fdivp
test
lret
pop
ja
mov
out
movsl
inc
xchg
mov
or
cmp
loop
pop
aam
add
fmull
rorl
mov
loop
jmp
scas
call
or
dec
sub
xchg
xchg
bound
ds
jo
rcrl
shlb
adc
jl
mov
das
mov
sub
mov
sarb
push
jge
movsb
or
cmp
xlat
daa
cmpsl
rorb
dec
in
das
jge
push
jne
ret
sub
xor
out
dec
mov
fprem1
mov
cmp
push
push
mov
gs
fdivrl
jae
push
mov
and
iret
aam
lds
outsb
test
mov
fldt
lods
negb
push
stos
enter
test
shlb
push
mov
xor
mov
mov
or
cmp
mov
outsl
or
cltd
xor
and
int
xor
gs
or
push
pop
test
mov
stc
insl
in
js
cs
scas
xor
push
jp
inc
les
out
daa
mov
lret
push
xchg
outsl
and
push
mov
sub
imul
cltd
inc
xchg
cbtw
dec
or
cmpb
jmp
pop
sarb
cmp
jge
ds
lock
pop
push
lods
xor
mov
inc
inc
fadds
loope
rcr
jnp
popf
and
adc
adc
jno
bound
insl
add
xor
cmp
xchg
inc
cmc
out
sbbb
jns
mov
xor
xchg
out
or
add
dec
dec
int
cmp
adc
push
lea
insb
lods
pop
insl
jns
repnz
ds
xor
rorb
and
mov
push
xor
stos
xchg
push
and
aaa
aaa
add
push
xor
mov
loope
inc
repz
faddl
movsl
sub
repz
and
inc
push
push
cmpsb
mov
cwtl
clc
xor
push
pop
adc
and
pop
sub
push
push
push
aad
pusha
not
movsb
nop
xchg
ret
mov
and
scas
fistps
sub
cmpsl
ds
add
addr16
imul
test
push
inc
push
out
clc
add
jmp
out
out
adc
push
jo
xchg
sub
in
call
push
loope
outsl
push
subb
shlb
inc
mov
mov
cmp
pextrw
mov
adc
cmpsl
inc
ret
cmpsb
xchg
sbb
loopne
dec
cmp
jg
mov
adcl
mov
inc
hsubpd
mov
aam
in
cmpsb
pop
lret
insb
sub
pop
mov
aad
xor
sbb
inc
dec
rcrb
popa
cmp
in
inc
sbbb
ljmp
jl
imul
loop
xchg
dec
inc
fiaddl
mov
ficomps
out
xchg
mulb
addb
sub
sti
fwait
sub
pusha
fisttpl
scas
push
sbb
aas
dec
or
shlb
data16
xchg
repnz
jge
movsb
cltd
lock
adc
dec
sbb
push
aaa
inc
aad
negl
or
jbe
adc
les
in
out
das
adc
inc
jae
mov
call
or
mov
sti
mov
sub
mov
and
xor
aas
push
or
ror
stos
lahf
sbb
jno
aam
aaa
jl
push
jnp
mov
or
xchg
mov
sbb
and
xor
sbbb
pop
dec
pop
mov
test
dec
xchg
js
shlb
inc
cmp
xchg
add
mov
mov
cltd
dec
and
lahf
dec
data16
lds
xor
mov
sbb
push
xchg
add
xchg
inc
je
dec
icebp
adc
jo
stos
pop
in
mov
jle
leave
scas
clc
jge
push
sbb
pop
sbb
push
lock
loope
adc
lea
adc
fbstp
sbb
ds
pop
nop
and
mov
push
loope
mov
dec
subl
fwait
cmpsl
stos
push
mov
pop
out
or
inc
int
pop
jp
mov
jne
jg
pop
lds
rorb
mov
ja
mov
popf
jnp
adc
or
cmp
cltd
jge
or
sbbl
mov
sbb
fisubs
andl
or
or
xlat
cmp
pusha
not
out
out
sbb
jle
sub
das
push
xorb
cmpsl
adc
in
enter
add
call
ret
pop
pop
icebp
nop
in
fidivl
shll
xchg
std
xchg
test
out
fcom
mov
or
mov
nop
adc
out
mov
push
in
repz
cmp
mov
aas
insb
popf
xor
pusha
lret
leave
adc
data16
xchg
mov
filds
xchg
mov
popa
cltd
xor
xor
xor
dec
push
call
cmp
inc
adc
jmp
rclb
sbb
pusha
dec
es
out
ja
push
mov
inc
pop
ja
stc
sub
dec
test
jnp
cmpsl
sbb
adc
and
incl
les
loop
jnp
lods
xor
mov
cmp
movsb
xlat
inc
push
mov
lret
popa
mov
je
pop
jmp
mov
inc
pop
cmp
hlt
std
mov
dec
dec
into
dec
xchg
add
dec
cmp
ds
lahf
xchg
lods
std
cltd
xor
mov
inc
add
mov
push
outsl
and
and
add
aam
and
fisttpll
scas
popl
std
faddl
push
jne
cmpl
pop
sbb
in
jno
sti
loope
outsb
incl
dec
push
out
lds
loop
jg
fistpl
push
in
or
addr16
or
movsl
pop
test
loop
cmp
lods
and
test
mov
cltd
pop
cmpb
dec
in
sti
stos
sbb
push
add
pop
data16
add
imul
loop
push
adc
js
pop
nop
pop
mov
daa
cmp
sub
adc
or
xor
mov
push
mov
loop
push
sub
mov
adc
enter
adc
push
adc
stc
lcall
or
shr
xchg
sub
mov
cmc
bound
and
pop
jno
cmpsb
fs
fcom
fmull
cmpsb
mov
loope
jbe
pop
xchg
aad
cmpsl
in
add
les
lea
jne
push
fildll
mov
test
aam
fdivrl
push
jnp
in
pop
adc
cmc
lcall
repnz
icebp
pop
mov
inc
jecxz
ja
int
cltd
xor
cmp
xor
mov
shll
pop
and
je
inc
lahf
ss
xlat
insb
sbb
xor
or
pop
cmp
hlt
outsl
or
les
out
loopne
push
sbb
insb
xcrypt-ctr
cmpsl
sbb
dec
dec
dec
popa
mov
inc
sarl
add
push
pop
in
loope
jno
shrb
dec
jnp
insl
fidivrl
leave
jbe
mov
mov
scas
sti
inc
push
aas
andb
popa
xlat
xor
sbb
lods
and
xchg
jl
pusha
fistl
movsl
dec
loope
xor
movsl
cmpsl
xorl
testw
mov
mov
or
in
cmp
cmc
jno
add
jl
cmp
sahf
mov
pop
xchg
loopne
pop
lods
aaa
xlat
fs
gs
mov
loopne
in
xor
sbb
insl
loopne
mov
inc
jl
dec
mov
cmpsb
stos
sarb
fidivrl
mov
push
bound
stc
popf
bound
mov
push
mov
notl
orb
inc
jns
ljmp
out
pop
jno
shll
sbb
fidivs
movsl
add
pop
ja
cmp
inc
in
mov
aam
xchg
mov
es
and
mov
sub
adc
cli
jne
ret
repz
mov
leave
cltd
cmp
cmp
stos
xchg
movsb
arpl
fiadds
repz
lds
dec
jecxz
dec
sub
outsl
jge
gs
push
bound
mov
arpl
sub
stc
pop
cmc
jmp
adc
inc
jo
xchg
pop
push
lcall
and
inc
lret
cs
fwait
jns
int
mov
out
inc
std
cmp
pusha
sub
or
pop
ss
sbb
ds
movsl
jo
frstor
adc
ret
repz
inc
loop
mov
pop
add
in
mulb
jae
sbb
sahf
adc
mov
push
std
addb
mov
imul
fstl
jb
je
andl
out
icebp
clc
add
add
pushf
mov
push
sub
or
js
mov
cmpsb
jp
fsubrs
xor
inc
pop
and
mov
ja
push
gs
in
js
cmp
or
lods
sub
mov
pop
mov
push
out
int3
js
adc
leave
int
pop
mov
pop
mov
sbb
or
flds
stos
xchg
xchg
push
push
lock
mov
jae
and
lods
dec
dec
xor
sbb
push
xchg
and
xchg
jl
or
int
dec
in
pushf
sbb
xchg
outsb
cli
xchg
mov
add
dec
mov
dec
xchg
outsb
sub
cmp
jo
hlt
cmp
inc
cli
jmp
push
mov
cs
and
adc
lds
lret
ficoms
push
jp
insb
lods
jno
dec
arpl
nop
daa
fwait
scas
rcrl
scas
jge
jns
jne
sub
lods
loopne
dec
rcl
hlt
lret
sub
pop
mov
push
push
aaa
mov
icebp
scas
jns
into
xchg
cs
xchg
sub
inc
sbb
sbb
leave
sbb
pop
arpl
xor
rorb
pop
adc
mov
add
sbb
inc
out
rorb
in
add
mov
insb
fisttps
adc
pop
cmp
lahf
icebp
js
shr
jge
in
xor
dec
add
popa
clc
or
jmp
adc
pop
not
xchg
dec
xchg
sub
cmpsl
pop
mov
sarb
dec
in
imul
shrl
shr
jne
pop
or
js
and
jmp
out
movsl
sbb
cmpsl
out
aaa
pop
inc
arpl
xchg
mov
mov
xor
push
int3
gs
aaa
mov
aas
rorl
inc
pop
lods
dec
mov
sub
mov
mov
sub
lret
es
cs
test
and
fnstcw
sbb
daa
inc
inc
push
ljmp
pop
fldl
shlb
sbb
pop
jp
dec
jle
leave
scas
std
xchg
inc
stos
inc
push
out
int3
push
and
frstor
push
sub
sbb
arpl
push
push
out
xchg
mov
in
pop
xchg
push
insb
pushf
mov
mov
pop
push
leave
mov
mov
mov
icebp
jo
sub
cld
add
or
test
nop
cmp
andl
fisubrl
std
fisubs
pusha
nop
dec
push
sbb
rorl
data16
sbb
pop
sbb
ljmp
dec
into
sahf
iret
repz
out
nop
lcall
bound
jo
push
pop
pushf
xchg
jbe
das
mov
pop
imul
or
test
mov
push
movsl
sti
mov
subl
xor
cmp
pop
ret
jmp
clc
subl
pop
mov
xor
dec
imul
scas
int3
or
adc
sbb
jmp
loopne
clc
cld
sti
add
loopne
sbb
outsl
or
sub
sub
xchg
sahf
testl
insb
lahf
nop
jo
mov
loope
jno
dec
adc
enter
or
test
xor
scas
imul
jge
in
sub
das
cmp
dec
xor
sbb
ds
mov
ss
push
sbb
push
mov
aaa
push
jb
dec
stos
jbe
jmp
insb
aam
aas
lcall
dec
sbb
aas
nop
sub
xchg
pop
mov
dec
insl
adc
mov
sahf
imul
jp
fnsave
rcrb
loope
addr16
testl
cmc
inc
cmpsl
and
or
xchg
push
sub
sub
andl
adc
cmp
pusha
sbb
mov
cmpsb
push
ret
pop
in
adc
xor
adc
notb
or
pusha
push
add
es
rcrl
mov
and
dec
out
sub
int3
mov
ret
adc
inc
fcomp
and
out
sbb
push
mov
aad
addr16
cwtl
sarl
ficompl
push
jns
int
ret
lcall
and
adc
add
lret
jmp
adc
inc
jnp
sub
mov
aas
xor
stos
stc
jmp
bound
push
sbb
xor
cmp
stc
jmp
out
adc
xor
mov
stc
in
enter
mov
xor
insb
lods
cltd
lret
in
cmc
out
out
adc
pop
xor
mov
mov
sarl
fsubl
jne
ss
notl
xchg
mov
inc
cmpsl
mov
sub
mov
scas
push
in
lods
stos
ljmp
and
loope
mov
rcrb
lret
push
jmp
je
nop
outsb
sub
sti
mov
scas
add
cmp
xchg
mov
pop
aaa
into
mov
push
in
or
and
mov
mov
add
lahf
lods
ljmp
nop
and
and
push
or
mov
xchg
push
push
lock
ficoms
or
test
sub
add
push
lcall
rcll
gs
hlt
inc
fldenv
iret
pusha
idiv
mov
add
test
xchg
lods
out
or
xor
xchg
dec
add
xchg
sub
pop
jg
sub
in
movsb
sub
rep
jnp
sub
mov
adcl
into
mov
mov
add
or
pop
jmp
xchg
and
add
mov
and
push
and
insb
stos
inc
lahf
push
aas
sbb
enter
idivb
aas
jo
fcoml
outsl
inc
jno
arpl
push
push
je
movsl
cmc
adc
lea
cli
lods
nop
aad
stos
mov
cli
jbe
xchg
and
mov
jmp
mov
mov
pop
cmp
push
outsl
mov
rcl
js
mov
dec
jl
in
sbb
je
add
scas
ror
scas
inc
push
subb
int3
mov
loop
mov
pushf
add
jne
jg
mov
cld
fnsave
pop
insl
inc
sti
rcll
jno
daa
xchg
scas
dec
jb
dec
gs
icebp
mov
or
jnp
xorps
pushf
arpl
ds
adc
mov
stc
xor
sub
std
sbb
lret
mov
mov
dec
sbb
ret
insl
stos
inc
lahf
inc
lcall
out
dec
cltd
dec
popl
jns
or
mov
xchg
sub
aam
mov
outsb
jg
sub
jle
inc
mov
pop
popf
lods
lret
cmp
cmpsl
jge
arpl
outsl
sbb
dec
mov
sbb
cltd
negl
dec
jns
push
jmp
lcall
mov
dec
ds
and
jle
aas
out
in
inc
pop
outsb
lds
arpl
jbe
insl
dec
jecxz
mov
push
shll
push
pop
push
imul
cmpsb
mov
fidivl
mov
bound
xchg
test
shll
rol
arpl
and
push
sub
sub
jo
or
notl
ror
outsl
std
loop
div
fisubrl
das
fldl
loopne
ljmp
in
sbb
in
add
jg
xor
stos
es
popf
xor
ror
sub
mov
lret
out
cld
int
push
imul
push
daa
jae
loope
inc
xchg
aam
fcmovnu
sub
orl
sub
or
dec
dec
and
xchg
mov
rorb
cmp
dec
shrb
cs
cmp
fcoms
mov
pop
repz
into
cmpl
pop
fwait
inc
mov
repz
adc
shrl
jns
pop
mov
inc
push
jns
in
sbb
push
ret
out
data16
jne
mov
xor
cmp
mov
fildll
cmp
movl
sub
sub
pusha
jg
dec
cs
imul
mov
jae
movsl
xor
jge
arpl
stos
jge
cmp
mov
xchg
and
push
xchg
sbb
mov
popa
lods
or
test
lret
movsb
pop
inc
out
add
rorb
pop
or
xor
xor
add
insb
xchg
enter
sub
jns
test
push
out
pop
push
mov
popf
iret
sub
std
mov
xor
mov
loopne
push
xchg
aaa
loopne
in
ret
stc
nop
cmc
es
cltd
pop
scas
lret
jg
sub
xor
adc
lock
cmp
push
or
in
pop
pusha
add
jmp
cld
sbb
aam
mov
pop
sahf
xchg
mov
jle
in
jno
sarb
ret
jle
xchg
pop
push
jecxz
jp
pop
rcr
out
mov
jo
mov
xor
jecxz
iret
add
jns
imul
fmull
cmp
cmp
mov
test
jl
ret
lret
push
sbb
int
jecxz
test
mov
mov
pop
fs
test
cltd
out
popa
clc
inc
mov
out
add
daa
push
mov
xor
mov
pop
lcall
and
push
inc
sbb
mov
push
jne
jle
dec
xchg
xchg
adc
mov
push
call
mov
ret
hlt
sub
cmp
add
dec
pop
dec
pop
sbb
mov
pop
push
or
push
or
adc
popf
in
or
sti
out
jge
pop
scas
loopne
pop
gs
in
ds
push
fsts
mov
or
test
pop
push
dec
lods
adcb
aam
fdivl
aaa
mov
sbb
jns
cmpsb
jmp
pop
fwait
test
sbb
and
mov
adc
cmpsl
ret
hlt
enter
icebp
mov
cs
aas
aad
into
iret
lret
jle
sub
pop
outsl
in
dec
ja
pop
pop
call
sarb
pop
test
insl
inc
adc
sti
sbb
movsb
or
and
cld
stos
cli
push
lahf
jns
sbb
mov
imul
jge
sub
mov
mov
mov
and
decl
lret
push
push
bound
ficoml
mov
jne
and
dec
or
jo
push
dec
sbb
inc
sahf
imul
lock
and
daa
shlb
mov
nop
call
xchg
lods
sbb
insb
sub
inc
mov
or
das
into
xchg
push
pop
push
push
rcll
mov
dec
outsl
ja
sti
and
insl
daa
mov
mov
and
jbe
xorl
in
mov
sbb
mov
lcall
es
add
adc
sub
outsb
arpl
add
scas
inc
cmp
fdivs
clc
add
mov
mov
mov
mov
push
lahf
push
cmp
sahf
lds
movsl
shrl
fdiv
cmp
mov
rcll
mov
out
in
push
or
nop
jbe
xor
push
in
call
jmp
mov
sbb
xlat
rcrb
pop
imul
sbb
jl
mov
mov
push
jmp
iret
jmp
jl
adc
push
mov
scas
cmp
mov
inc
imul
imul
in
arpl
and
bound
nop
jne
aad
imull
lcall
jl
stc
lods
jno
sbb
adcb
aad
and
jl
and
mov
cmp
testl
cli
sub
xchg
ficoms
fidivrl
gs
dec
pop
repnz
out
pop
movsb
add
ljmp
xor
xchg
mov
jecxz
jge
jbe
lcall
ljmpw
sub
mov
shr
out
jecxz
fildl
xchg
test
loopne
push
pop
imul
clc
sbb
lods
test
inc
push
cltd
nop
and
mov
add
mov
aas
outsl
push
in
movsb
frndint
pop
jmp
ds
pop
rcll
lds
out
mov
outsb
mov
inc
pop
mov
xchg
sbb
dec
or
mov
loop
or
mov
shld
xor
je
xorl
stc
cs
mov
pop
jns
in
and
mov
enter
imul
mov
xlat
mov
fisubl
mov
repnz
mov
repz
ss
out
dec
inc
es
pop
aad
dec
in
nop
cli
out
xor
in
test
loop
inc
dec
idivb
inc
pop
dec
dec
loop
aad
out
shrl
sbb
aas
into
jmp
out
xchg
sbb
jecxz
sub
pop
xor
in
jno
mov
jnp
loop
inc
and
push
inc
imul
mov
mov
mov
xchg
inc
push
mov
loope
test
scas
mov
lahf
enter
je
popf
sub
pop
jae
es
aas
pop
iret
add
jbe
leave
cmpsl
xlat
fwait
outsb
mov
nop
cs
test
jno
out
cmpsb
lret
into
adc
xor
xor
dec
inc
xchg
mov
inc
ds
push
fwait
adc
mov
shl
cmp
push
js
lds
inc
dec
jecxz
aas
jns
fwait
lret
or
xchg
shrl
sbb
push
mov
lea
imul
aas
xlat
addr16
mov
sbb
mov
mov
aas
ret
ja
movsb
dec
shlb
lds
sub
jle
inc
stc
ret
shrb
insb
and
std
mov
jmp
int
jo
xchg
dec
push
stc
cmpsb
mov
jb
sub
fdivs
lahf
jb
outsb
add
push
dec
stc
xlat
jl
repz
mov
dec
xor
xchg
testl
pop
xor
mov
stos
mov
in
addl
xlat
jae
repnz
ret
hlt
inc
cmpsl
push
mov
mov
rcrb
clc
shrb
aaa
cmp
mov
mov
shrl
lret
ret
adc
test
insl
inc
scas
add
fstpt
push
push
pop
inc
cli
xchg
jae
fidivl
aam
testb
and
imul
push
sti
outsb
inc
mov
or
lods
jno
imul
sbb
cmp
pop
sub
sub
pop
dec
pop
jae
addb
daa
int3
icebp
cmp
push
jns
into
aaa
into
jmp
sub
jg
or
fwait
mov
test
lods
inc
or
mov
fsubs
adc
xor
loope
inc
and
cld
or
shr
mov
dec
mov
pop
ds
dec
xchg
fs
xchg
jb
icebp
decb
adc
aad
pop
inc
push
aad
repz
sbb
inc
dec
inc
mov
jecxz
pushf
je
dec
pop
imul
xlat
xchg
push
in
scas
repnz
nop
mov
repnz
fidivs
aam
jo
ljmp
lret
inc
inc
scas
and
push
into
gs
stos
xchg
pop
dec
jecxz
bound
inc
mov
lahf
xor
out
pop
imul
adc
test
xor
xorb
pushf
imul
push
test
add
cmp
and
add
sbb
mov
and
sbb
ljmp
adc
pop
outsb
stos
mov
sbb
nop
mov
into
es
movsl
rol
into
mov
dec
loope
jg
cmp
in
adc
fstpl
pushf
xor
or
test
bound
xchg
icebp
inc
scas
and
dec
pop
cmc
movl
lret
leave
lea
ret
push
fsts
cld
lret
test
and
pushl
and
dec
shll
fs
dec
or
jl
xlat
inc
adc
sti
mov
sub
mov
inc
xchg
push
in
mov
mov
and
sbb
cmc
pop
mov
cli
pop
jbe
stos
sub
and
imul
lods
pop
mov
fnstenv
ja
imul
xchg
lods
loope
add
mov
and
inc
mov
adc
sbb
lcall
scas
pop
xchg
pop
je
cmp
adc
sbb
pop
in
jnp
ja
sub
outsl
out
js
or
mov
ljmp
xchg
jne
aam
outsb
and
addb
in
sub
push
mov
les
push
lea
addl
dec
sbb
addr16
dec
iret
out
xchg
stos
xchg
inc
lret
mov
jae
mov
subl
mov
xor
andnps
and
push
xchg
pop
int
push
mov
jl
mov
add
out
mov
mov
rorl
test
mov
cmc
jle
in
dec
mov
aas
xor
inc
ficoms
jae
dec
add
mov
xlat
popa
fbstp
loope
cs
jbe
int3
cs
fimull
jbe
jmp
test
jne
aad
pushf
out
jg
lret
ja
sti
jbe
jnp
pop
and
rcll
and
adc
adc
push
sbb
cmpsb
xor
hlt
out
cmp
test
cmc
pusha
lret
pop
rclb
push
mov
lahf
aaa
adcb
pop
aas
insb
mov
jno
sub
cs
push
out
and
adc
cwtl
sbb
cmpsb
xchg
adc
jno
subb
test
sbb
addb
xor
fidivs
sti
ds
pusha
cld
inc
in
or
addb
stc
ds
xchg
sub
sub
inc
sbb
mov
iret
jae
inc
xor
cltd
in
ficoms
and
ds
dec
pushf
push
xchg
mov
push
inc
xor
xlat
jle
ljmp
fidivs
mov
mov
aaa
mov
xchg
insl
shlb
inc
pop
xor
adcl
pop
insb
add
inc
mov
movsl
sbb
gs
push
out
xor
jmp
or
pop
jecxz
push
pop
dec
xchg
call
cmp
mov
xor
ljmp
int3
mov
sbb
dec
xchg
insb
push
icebp
scas
aaa
dec
pop
in
or
into
sarl
xor
popa
push
jl
jnp
out
aam
inc
ss
movsb
aas
call
jp
pop
inc
inc
sti
inc
ja
mov
out
push
xchg
inc
dec
dec
cmc
mov
movsb
mull
cmp
xor
mov
mov
pop
adc
aaa
cmpsb
out
add
cmp
and
leave
bound
push
dec
mov
mov
in
cmp
push
jecxz
mulb
and
ja
jo
and
dec
mov
leave
int
mov
and
or
mov
sbb
ja
jp
xor
out
push
in
insb
add
dec
cli
shrl
push
push
cs
popf
xor
inc
dec
dec
cmc
scas
mov
dec
or
pop
sbb
scas
jecxz
ss
call
xor
adc
push
xor
rorb
mov
push
inc
push
fisttps
aam
mov
cld
mov
out
xor
xchg
cs
pop
movsl
jne
sahf
and
sarl
subl
out
push
stos
xchg
faddl
fcompp
adc
mov
addr16
in
andb
add
lea
loop
int
loopne
cmpsl
push
sub
xor
mov
sbb
and
fadd
or
mov
lds
sbb
xor
lea
push
sbb
lcall
jne
pop
into
pop
imul
xchg
mov
movsl
sub
ret
dec
push
shll
faddl
dec
movsl
cld
add
arpl
movsb
aas
psadbw
enter
add
and
leave
movsl
dec
mov
adc
xlat
rclb
jecxz
pop
sub
loope
push
adc
xchg
insb
cltd
jg
or
cmp
inc
xchg
dec
push
popa
out
mov
mov
repz
sub
mov
cld
mov
mov
int3
arpl
sub
mov
movsb
das
shr
inc
sub
pop
jle
scas
or
xchg
cmp
cmpsl
ds
scas
inc
sbb
int3
arpl
icebp
or
std
movsl
pop
sub
lods
cli
or
xor
enter
mov
jo
pop
add
mov
jne
mov
orl
jmp
imul
adc
daa
push
add
scas
out
loope
sbbl
pushf
fists
aad
xor
jmp
lcall
push
cmp
shlb
mov
mov
popa
mov
cmpsb
call
or
xchg
imul
pop
out
bound
movsl
jle
jbe
xchg
aam
push
and
repnz
arpl
mov
icebp
mov
pop
inc
fisttpll
push
add
les
xor
push
outsl
insl
imull
add
addb
dec
mov
mov
xor
dec
xor
fdivp
xchg
icebp
fdivl
insl
mov
cmp
mov
jle
inc
inc
lods
mov
add
inc
scas
xchg
pop
fistpl
lock
pop
fiadds
fdivrp
push
add
cmpsl
xchg
dec
add
cmp
and
ss
iret
cld
inc
dec
cmp
mov
mov
xor
pop
push
sarl
into
js
add
mov
enter
pop
pop
sti
xchg
dec
inc
push
ljmp
jno
shll
and
repnz
adc
in
cli
or
lds
jne,pn
decl
adc
pushf
and
pop
cmp
shll
mov
cld
cmp
and
mov
rclb
sbb
pusha
and
test
hlt
mov
in
in
mov
stos
push
mov
sbb
movsl
mov
test
xor
push
in
les
or
pusha
push
fisubs
andb
lcall
adc
or
mov
inc
mov
or
sbb
mov
cli
xchg
lret
pop
sahf
bound
bound
jnp
scas
fimull
leave
add
mov
inc
mov
data16
pop
imul
jb
and
adc
mov
pop
nop/reserved
call
sar
je
das
loope
test
sti
add
iret
jp
mov
mov
mov
or
sub
inc
aad
xchg
lods
mov
idiv
xchg
iret
mov
dec
or
pop
and
cmp
mov
push
data16
xchg
outsl
shrl
pop
ljmp
push
cwtl
lods
ja
shrb
fiaddl
arpl
aad
loopne
fistl
sbbl
sbb
test
or
loope
sub
cld
adc
xchg
fnstenv
fnstcw
or
iret
cmpsb
mov
dec
in
push
xor
xchg
in
dec
out
imul
cmpsb
arpl
mov
rclb
dec
cmc
xor
gs
sub
mov
pop
negb
loope
mov
int3
xor
mov
push
mov
insb
sbb
outsl
pop
dec
cmp
nop
cmp
ret
mov
repnz
xor
mov
adc
push
in
mov
bound
jno
scas
push
notb
jmp
lock
lcall
cltd
call
cltd
adc
push
shll
jne
jbe
cmpsl
mov
xlat
xchg
sub
xor
js
dec
jne
out
pop
sbb
ds
lods
lea
stc
repz
rcll
pop
pusha
out
push
push
or
add
outsb
dec
inc
pop
mov
cwtl
lea
xchg
into
and
je
mov
hlt
push
push
xchg
adc
fsubrs
adc
cmp
mov
imul
inc
mov
jmp
adc
or
pop
repz
fistpll
inc
test
addr16
sti
or
xchg
pop
int3
fcoms
scas
ficoms
jbe
ret
repnz
in
ljmp
jno
rclb
insl
add
xchg
sub
leave
das
add
cmp
shrw
insb
add
xchg
cmpsl
inc
sbb
das
mov
aam
cmp
fs
int
mov
data16
lahf
adc
xchg
push
sbb
xchg
or
cmpsb
in
in
movsl
cmp
in
lret
push
pop
jno
ljmp
and
mov
add
lock
sti
mov
adc
pop
dec
push
jb
imul
insl
sbb
pop
into
enter
into
in
mov
jnp
orl
es
int3
dec
and
mov
mov
ja
cmp
int
pop
nop
sbb
addb
xor
xchg
cmp
xchg
cwtl
repz
ja
mov
addl
jp
xchg
pushf
push
movsl
or
inc
call
adc
jo
xor
cmpsb
inc
mov
popa
sahf
or
cltd
dec
mov
shll
and
dec
push
sbb
jne
cmp
xor
leave
lret
mov
jmp
mov
xor
rcrl
sbb
popf
cmp
pop
pop
movb
mov
out
push
push
and
sub
push
add
int
das
movntq
adc
fwait
push
inc
lods
enter
out
scas
xor
cmc
jns
dec
les
jmp
mov
jmp
sbb
and
jo
in
inc
xor
pushf
fcmove
pop
aam
ror
int
incb
leave
cmc
pushf
jno
push
mov
ljmp
in
repnz
sbb
pop
jg
into
xor
cmp
mov
aas
lea
lret
mov
mov
inc
xlat
aam
fldl
sub
icebp
jecxz
mov
mov
push
mov
mov
sub
sub
jb
add
xchg
movsl
popa
clc
and
sbb
les
mov
xchg
push
out
adc
mov
mov
mov
lret
test
or
mov
das
jl
icebp
adc
mov
je
ret
dec
jb
adc
mov
xchg
and
sbb
lds
dec
pop
es
aad
sbb
sbb
lods
cmp
mov
aas
or
mov
or
adc
inc
jne
sarb
and
jmp
cld
adc
mov
push
jmp
sbb
jnp
pop
mov
andb
inc
or
jo
loope
cli
pushf
jecxz
in
daa
hlt
pop
jno
pushf
or
lock
shll
out
push
repz
cmp
fwait
sbb
xor
jg
cmp
mov
push
push
xlat
rcr
stc
rorl
sahf
out
sub
repnz
or
mov
fs
pop
inc
jmp
jbe
add
icebp
add
aas
pop
mov
les
push
dec
mov
push
loop
inc
in
iret
fs
add
add
or
adc
sbb
adc
xlat
sbb
sub
and
aaa
mov
icebp
fsubrs
dec
sbbl
pop
xchg
rol
sahf
push
xor
ret
xor
rcl
mov
out
mov
pop
jbe
adc
adc
sbb
ss
rcrl
jp
jo
xor
out
adcb
fidivrs
iret
iret
mov
mov
lods
inc
pop
mov
xor
test
push
jne
pop
jnp
mov
mov
std
icebp
xor
sti
add
fcompl
inc
popf
xor
xlat
and
or
dec
lahf
jg
repz
out
cmp
fidivrl
push
cmpsb
xchg
pop
mov
xchg
sub
cltd
and
push
xor
stos
out
fnsave
mov
jp
add
inc
sbb
je
nop
lock
xchg
ret
cs
cmpsb
xchg
sbb
adc
jmp
out
test
jae
jno
sbbl
fldenv
jb
ja
sti
adc
mov
push
push
test
mov
mov
cli
lods
and
push
sti
cli
inc
fisubs
xchg
sbb
fbstp
cmp
lret
mov
aaa
jns
adc
dec
adc
sub
pusha
or
dec
ss
pop
mov
out
dec
fdiv
jne
test
and
loope
ja
cmp
aas
hlt
mov
inc
fwait
mull
bound
xchg
dec
mov
inc
xlat
xor
daa
outsl
cmp
jle
jno
mov
mov
pop
test
inc
loopne
jns
jae
push
dec
test
pop
les
inc
hlt
push
cwtl
test
mov
les
add
rorb
pop
inc
push
or
cmp
div
lret
adc
cld
push
icebp
mov
movsb
testl
ret
pop
mov
push
cmc
enter
push
outsb
jl
sahf
stc
lods
add
mov
or
and
mov
and
popa
leave
aaa
push
mov
pop
xchg
out
lea
insl
cmc
sub
and
mov
pop
fwait
idiv
or
lods
mov
mov
adcl
fimull
mov
ror
mov
pop
xor
dec
mov
fst
xor
shll
xchg
cmp
int3
mov
movsb
adc
stos
sub
lahf
or
jo
test
jno
xor
in
outsb
insb
mov
mov
mov
mov
out
orl
push
or
movsl
cmp
pop
inc
inc
sub
mov
mov
and
xchg
or
mov
mov
mov
mov
push
mov
movl
pop
pop
xor
std
fnstenv
and
insl
cmp
rolb
mov
sbb
sub
mov
jb
mov
push
fcomi
or
and
jmp
xchg
jmp
pusha
lds
mov
add
loop
popa
jnp
push
jae
xor
cmp
out
into
xchg
cmp
ret
lds
adc
inc
xchg
js
or
xchg
js
and
push
add
xor
es
xchg
sub
jge
pop
out
xor
ljmp
dec
push
mov
iret
inc
sbb
iretw
cs
jmp
mov
jb
push
lret
sti
push
inc
pusha
adc
dec
add
cs
shrl
ljmp
xor
add
ss
in
shrl
icebp
in
rol
jl
aaa
bound
cld
and
inc
mov
cmp
ret
ljmp
es
mov
adc
push
and
pop
mov
push
divl
enter
gs
jae
je
aaa
in
push
popa
mov
inc
pop
dec
daa
scas
scas
push
push
xor
jb
xlat
jb
sub
imul
jns
inc
pop
jb
xchg
push
test
outsl
cmpsl
out
inc
in
mov
dec
jae
pushf
data16
dec
adc
adcb
sbbb
sub
dec
mov
in
xchg
test
mov
in
dec
in
cmp
adc
pop
pop
push
call
cmp
imul
ret
jnp,pt
or
jmp
test
dec
pop
jo
jmp
and
and
andb
incl
mov
stc
and
outsb
mov
stos
jmp
xchg
cli
mov
scas
fs
and
lret
into
fidivrs
in
mov
and
addr16
inc
seto
out
cmpsl
rclb
fbstp
sti
dec
gs
in
jne
ss
dec
push
add
enter
add
cs
fwait
cmp
aam
jmp
inc
sbb
out
pop
lret
dec
aam
pop
ret
inc
hlt
iret
cmpb
sbb
mov
jo
push
push
fwait
rcrl
in
push
out
mov
mov
adc
push
cmp
add
push
popa
fdivl
jne
inc
imul
push
rolb
iret
push
sub
std
aad
movsb
cld
mov
pop
mov
insl
sbb
push
nop
fcoml
divb
adc
js
mov
dec
iret
loope
adc
inc
test
push
and
enter
xor
stos
and
xchg
or
mov
stos
push
popf
outsl
xor
push
testb
in
mov
dec
pop
and
and
int
and
test
sbb
dec
mov
cmp
imul
dec
or
jne
mov
fistl
cmp
inc
jns
adcb
jbe
and
int3
orb
mov
sbb
jg
std
fdivrs
pop
leave
je
scas
pop
hlt
out
jle
pop
pop
sbb
mov
pop
call
mov
fstpt
adc
mov
cltd
add
cltd
out
sbb
and
pushl
testb
add
add
daa
cmpsb
nopl
push
push
jo
push
sub
enter
jle
xchg
popf
xlat
jns
or
or
movsl
xor
inc
jmp
mov
jge
xorl
pushf
mov
pextrw
push
cld
dec
inc
push
cld
sbb
cwtl
popf
aam
clc
insl
cmc
movsb
fsubs
sbbl
ret
cmp
and
jmp
fld
mov
mov
xchg
das
xchg
or
push
daa
adc
movsb
and
mov
mov
or
or
dec
xchg
sub
outsl
mov
add
repnz
cmpsb
sahf
add
lret
xor
cld
std
dec
sub
xor
stos
or
lcall
lods
xchg
cmpsb
jge
int
adc
nop
out
lahf
xchg
out
add
in
dec
fidivrl
jmp
pop
rorl
out
cmp
popa
mov
insl
xchg
scas
jl
pop
fiadds
jno
dec
pop
loop
or
xor
sub
pop
adcb
dec
mov
dec
mov
push
jg
or
cmp
or
xor
sahf
mov
push
sub
adc
aas
test
cmpsb
in
das
xorl
pop
cmp
sbb
dec
fdivl
jo
mov
shr
out
nop
dec
or
mov
data16
mov
xchg
mov
stos
mov
pop
stos
dec
fnsave
mov
pop
inc
dec
clc
mov
sub
insl
sub
ja
mov
sti
dec
cmp
sub
mov
sub
mov
mov
aam
cmpsl
mov
mov
mov
test
aas
cmp
dec
pushf
fimuls
sbb
add
mov
test
test
outsb
sub
sub
mov
test
sbb
mov
cmpsb
or
xor
out
push
jecxz
les
ret
dec
pop
lret
jge
shld
mov
mov
pop
pop
std
rcrb
leave
pop
jl
into
js
adc
push
loopne
loop
lea
mov
notl
pop
js
cmp
mov
outsl
inc
gs
cmp
sub
out
sbb
push
cld
xchg
or
scas
popa
lods
sbb
scas
jae
insb
int
add
lock
xchg
push
jo
xchg
sub
stc
sub
sbb
mov
arpl
cld
cs
into
mov
jne
xlat
xchg
test
insl
pop
pushf
cmpl
test
stc
lahf
push
fldcw
out
lds
push
push
jbe
pop
int
enter
xor
fwait
push
jmp
or
mov
shl
add
sub
cmp
cmp
icebp
sbb
btr
jp
dec
xlat
std
adc
repz
pop
lahf
or
pop
xor
inc
movsl
divb
das
or
movsb
cld
int
cli
pop
scas
jb
mov
sub
xor
cmpl
fwait
add
adcl
or
scas
push
jns
lcall
add
add
clc
pop
adc
cli
jno
pop
pop
mov
imul
sbb
push
pushf
sbb
mov
pop
aad
mov
sbbb
adc
idivb
add
data16
push
daa
jb
dec
inc
mov
mov
cwtl
add
leave
out
cwtl
fsubrl
pop
and
cmp
aad
les
inc
scas
xlat
sub
test
ret
and
push
out
cld
fistpl
je,pn
jae
jmp
sbb
test
mov
sbb
insl
pop
pop
mov
ret
dec
mov
or
sub
pop
loopne
lea
pop
imul
shll
cmpsl
add
mov
or
je
rolb
fstps
cmp
dec
cli
lahf
and
cmp
or
xchg
subl
mov
jge
cwtl
test
adc
fbstp
or
adc
mov
mov
loopne
pop
out
fmull
dec
xchg
sub
mov
and
mov
daa
mov
mov
dec
add
cwtl
test
movd
fstpt
movsb
sbb
adc
scas
call
push
push
push
insb
pushf
jne
in
scas
fldcw
mov
mov
cmp
fs
sti
push
mov
and
fldl
jmp
xor
inc
popa
jbe
stc
pop
adc
push
loop
push
movl
cli
fs
inc
adc
fnstenv
movsl
mov
shll
gs
jbe
scas
imul
fnstenv
xchg
mov
mov
mov
jbe
pop
inc
jmp
loope
lret
ljmp
mov
sub
ljmp
int3
arpl
fwait
and
cs
sbb
fsts
sub
push
cs
lock
pop
fcompl
lds
dec
adc
xor
pop
dec
mov
lock
shll
inc
push
ljmp
adc
leave
test
jns
inc
mov
fadd
iret
in
mov
push
lcall
mov
add
dec
das
jne
mov
inc
ret
cmp
xorb
push
in
icebp
add
sub
mov
jl
faddp
ficomps
sbbb
daa
shrl
aam
xor
ja
add
ret
ds
push
stc
nop
mov
pushl
loop
ror
out
cmc
push
fimuls
add
jecxz
inc
lret
sub
scas
and
sarb
stos
rcl
pop
and
jl
addr16
pop
test
xor
in
rcrl
push
data16
shlb
mov
test
outsl
shll
dec
pop
cmpsb
outsl
jno
rorb
stos
sbb
test
outsb
js
lock
outsb
add
ja
jmp
sub
pop
jle
hlt
imul
std
divb
call
iret
lcall
sub
vmovdqu
mov
shl
mov
pop
mov
or
adc
in
xchg
cs
scas
js
xor
inc
push
add
clc
int3
jne
pop
lds
fistpll
gs
mov
push
mov
xor
cmpsb
fsubs
inc
int3
in
std
arpl
xchg
push
dec
mov
in
shlb
sti
and
fdivl
ljmp
inc
bound
mov
test
jmp
or
inc
xor
jmp
fistpl
adc
fdivs
cmpsb
dec
or
xchg
in
cmp
add
test
aad
fisttpll
cmp
inc
outsb
shrl
mov
jns
sub
imul
inc
push
and
idivl
push
mov
lock
lds
mov
or
icebp
and
fwait
push
and
xchg
dec
arpl
xlat
mov
jg
jbe
js
nop
stos
loope
fistps
mov
pop
or
aaa
jo
stc
jge
xlat
outsb
or
sbb
xor
push
sbb
pop
cli
push
mov
push
sub
push
pop
mov
loop
sbbb
push
jnp
sbb
pop
clc
push
jle
dec
push
cmp
pushf
test
loopne
and
jo
push
jb
fwait
mov
arpl
mov
inc
inc
xchg
neg
testl
pop
paddd
cmc
pop
sbb
pop
mov
dec
jecxz
add
mov
cmpsb
sub
inc
xchg
repnz
out
loop
cli
jge
adc
out
cmpsl
repz
and
clc
cmp
popa
jno
adc
pop
int
insb
jb
in
stos
mov
dec
int3
jecxz
sbb
cmp
mov
push
dec
adc
xlat
rcl
xor
push
xchg
sbb
or
outsl
shrl
shlb
push
lods
and
xor
inc
xchg
adcb
push
mov
jp
sbb
rcll
int
push
fldl
inc
push
dec
imul
rcrl
movsb
sti
xchg
pop
mov
and
adc
shlb
sub
lods
mov
dec
icebp
mov
mov
imull
scas
jecxz
cmc
cmp
outsl
mov
or
mov
mov
mov
fstl
inc
mov
pushf
cmp
push
inc
pop
xchg
js
mov
xor
mov
pop
dec
xor
int
xchg
push
test
add
push
scas
inc
in
sahf
cmp
int3
mov
lret
and
je
ret
lods
lret
push
add
into
mov
pop
pop
and
nop
and
mov
dec
xchg
cmc
cmp
lcall
mov
je
aad
mov
and
add
adc
popa
adc
xchg
pusha
loope
mov
sbb
push
je
xchg
arpl
jno
shll
daa
punpcklwd
ret
enter
daa
add
jge
xchg
add
lds
mov
push
enter
xchg
xor
xchg
sahf
daa
loopne
or
push
aam
lds
xchg
cmp
fstl
pop
out
sub
std
ficoms
cli
into
test
mov
or
movsb
jmp
xchg
fimull
or
push
push
cmp
jmp
jne
inc
orb
outsl
push
pop
sbb
imul
shlb
cs
lods
mov
sub
lods
je
mov
insl
add
or
fistpll
xchg
std
aam
mov
int3
push
sub
pop
fwait
outsl
hlt
xchg
ret
sarb
in
dec
in
hlt
nop
mov
pushl
roll
mov
ftst
jnp
sub
xchg
mov
jmp
sbb
leave
jge
jb
out
lret
shrb
and
dec
icebp
out
cmp
mov
and
nop
fstpt
lods
jecxz
lock
fcmovnu
xchg
xchg
push
cmp
xchg
es
dec
or
jp
dec
popa
cmpsl
fneni(8087
mov
jns
push
popl
pop
cwtl
in
ss
sarb
xor
push
or
mov
sahf
mov
shrl
xorl
lret
pushf
stc
or
cmp
ljmp
fcmovb
je
xchg
scas
xchg
leave
mov
gs
dec
mov
fs
inc
and
dec
popa
and
dec
sub
mov
imul
mov
mov
jne
sbb
push
jno
lea
in
xor
andl
pushf
xchg
nop
stos
iret
or
aaa
sbb
push
fwait
test
mov
imul
test
int
mov
adc
inc
pop
frstor
rolb
lock
out
push
mov
aas
leave
or
cmc
gs
cs
in
push
sahf
ds
aas
loope
mov
test
dec
dec
aam
sub
aaa
pop
out
dec
dec
sub
dec
lods
add
xchg
addb
lret
sub
rcrb
fistpll
add
popf
inc
inc
mov
iret
data16
stc
xchg
xor
jae
xlat
adc
add
and
aas
cmp
mov
out
sti
push
add
cld
adc
mov
scas
ret
lret
sub
rcrl
es
es
xor
scas
push
xchg
jmp
add
ret
movsl
mov
shrb
imulb
pushf
gs
cmpsl
aad
adc
sbb
xor
out
mov
fidivs
shlb
push
ljmp
jno
sub
dec
es
loopne
loopne
lods
mov
inc
insl
ja
mov
repnz
hlt
adc
aad
inc
mov
repz
insb
adcb
test
jb
cltd
sub
dec
pop
ja
loopne
cmc
and
adc
mov
xchg
add
mov
aas
dec
cmp
popf
or
mov
jo
mov
rcl
lds
hlt
jmp
fabs
and
push
cmp
mov
nop
lret
xchg
cmp
outsb
xorl
imul
inc
test
xlat
cmp
adc
or
or
repz
lret
mov
das
mov
mov
js
into
add
fwait
in
vcvtss2sd
jmp
mov
push
rclb
xor
pop
mov
or
cmp
xchg
dec
inc
rorb
mov
outsl
jmp
push
cmp
xchg
test
push
dec
scas
or
rcrl
pop
sbb
or
pop
mov
outsb
push
dec
movsb
scas
push
cmp
mulb
add
sbb
jl
and
push
imul
push
scas
mov
push
push
enter
sbb
mov
hlt
loope
xchg
sub
fistl
inc
dec
add
pop
cmp
shl
xchg
pop
inc
push
dec
mov
pop
aam
add
sub
push
xchg
dec
out
sbb
xrelease
repz
test
jp
sarl
or
and
adc
dec
repnz
popf
xor
insb
mov
push
sub
or
xchg
mov
dec
out
aas
in
imul
jb
push
xchg
sub
shlb
test
and
popf
jo
fwait
cmpsl
mov
rcr
pop
fisttpll
cs
je
imul
out
dec
xor
shll
jns
ficoms
pushf
pop
sub
or
adc
sub
subb
dec
push
mov
push
insl
stc
enter
in
add
insl
mov
push
cmpsb
sbb
iret
in
bound
das
popf
inc
imul
js
sbb
dec
mov
fdivrs
xlat
clc
dec
or
pop
lods
sahf
lods
ljmp
das
inc
and
aaa
das
sub
xlat
and
lcall
insb
push
jno
in
mov
jne
repnz
ficoml
push
cld
or
rorb
push
sub
fucom
sub
fsubrl
mov
cwtl
jae
imul
mov
rorb
iret
add
dec
repz
outsl
iret
pushf
mov
push
mov
fwait
loop
mov
in
add
or
out
cmp
out
pop
or
jb
push
mov
mov
fldl
ja
das
test
xor
cmp
out
jnp
dec
arpl
xor
pop
fwait
and
int3
jl
rorl
stos
pop
adc
cmp
sub
cmc
push
rorb
jns
cmpsl
test
adc
mov
out
add
jns
out
and
fnstcw
add
add
cmp
icebp
xor
pop
mov
push
add
shl
ja
mov
mov
inc
sti
sbb
jg
adc
ret
lea
mov
xor
adc
mov
jge
jns
orl
xchg
ja
pop
sbb
shl
sub
mov
xchg
cmp
push
out
aas
add
push
scas
outsb
jle
inc
ljmp
dec
add
aas
loope
into
or
lret
shll
jbe
popa
xchg
cs
lods
cmp
sub
pop
xchg
cmp
push
cmp
sub
xchg
xor
adc
or
jmp
incb
lods
push
into
lods
and
call
xor
popf
out
push
pop
imul
sarl
jo
out
std
lea
aas
sub
mov
jne
push
and
addb
adc
mov
pop
cmp
fcomp
arpl
stos
adc
inc
stos
jne
call
push
add
scas
jo
hlt
sahf
mov
pop
lahf
cltd
jae
lret
shl
bnd
int
pop
add
push
dec
push
jne
xchg
fldpi
xlat
mov
lds
mov
push
lods
cmc
popa
lahf
push
push
lahf
test
jne
jnp
mov
ret
dec
add
stc
sub
dec
push
jae
pop
loop
jp
shll
xchg
hlt
xor
lret
in
adc
stos
cmp
dec
cmp
mov
xlat
in
push
and
stc
push
iret
lods
xor
fs
push
sarb
inc
shlb
cmp
pop
pop
xor
pop
xchg
push
lods
ljmp
xor
sti
jbe
fmull
outsl
sbb
negb
leave
pop
cmp
jnp
pop
in
scas
scas
jge
pop
mov
fldenv
jnp
jae
jmp
push
inc
dec
cli
xchg
into
ljmp
cmp
mov
inc
loopne
lahf
push
test
scas
cld
add
xor
orl
mov
cmpsb
addr16
sbb
xchg
insl
mov
sbb
in
imul
lds
std
cmpsl
add
or
sti
shr
xor
out
cli
gs
jae
pop
xor
xchg
sub
lret
addb
shl
mov
es
stos
icebp
mov
daa
adc
stc
xor
fnstenv
xor
dec
jecxz
popw
mov
pop
jae
fidivrs
repz
loope
lahf
push
push
lea
fcoml
lcall
push
arpl
xchg
imul
jg
mov
adc
out
popa
fisubrl
lret
dec
je
xor
es
push
lcall
lea
iret
xchg
pop
mov
in
lret
fs
decl
mov
or
or
pop
repnz
jae
xor
cmc
xchg
sub
outsl
lcall
fdiv
inc
pusha
rcrl
pushf
add
mov
cmp
adc
add
loopne
mov
es
mov
sub
mov
insb
jle
mov
mov
mov
sbb
ret
fistl
scas
push
push
movsl
cmp
in
xor
mov
in
xor
ljmp
or
lods
clc
jae
insb
and
jne
lods
xchg
or
rcrl
cmp
leave
cmp
mov
pop
cmc
add
inc
sub
jns
pop
stos
mov
call
adc
sahf
cmc
dec
pop
mov
imul
mov
test
cmpsl
push
loopne
cmpsl
les
scas
decl
xor
inc
loopne
push
in
hlt
lret
jo
pop
cmc
jge
cmp
jmp
mov
fstpl
jmp
pushf
xor
dec
mov
dec
inc
out
inc
sbb
push
or
mov
pop
scas
xchg
testl
xchg
mov
mov
pop
lods
outsl
rclb
in
add
iret
xor
dec
in
iret
jbe
pop
push
pop
imul
ja
jo
or
pop
dec
std
and
loope
popa
push
cmc
mov
shr
lea
adc
mov
fbld
mov
rcl
mov
add
inc
ss
cli
lds
lret
xchg
ror
sub
fucom
push
jne
jmp
loope
std
xchg
addr16
jne
lret
sti
cmp
dec
pusha
add
pop
push
xor
sub
mov
sbb
les
fucomi
subb
or
or
mov
pop
jecxz
aaa
dec
lahf
inc
pusha
divl
or
xchg
add
or
ret
nop
and
and
mov
cmpsl
ss
xchg
pop
push
faddl
dec
jne
stc
orl
mov
lods
add
je
stos
mov
add
sbb
inc
jno
mov
rclb
in
dec
xlat
jo
sbb
xchg
pop
mov
add
sbb
mov
in
sub
and
pop
mov
out
cmp
stc
cmp
movsl
mov
jl
cld
xlat
dec
ds
stc
cmpl
jne
out
cs
cmp
hlt
pop
dec
sahf
lahf
jne
das
and
push
push
jmp
ja
negl
and
cmp
repnz
lds
pop
jb
adc
adc
scas
test
lcall
in
xadd
cmp
js
outsl
cmp
add
jg
nop
lahf
arpl
int
fsubl
mov
mov
push
testl
mov
ret
insl
mov
ds
cld
mov
push
mov
cld
clc
shll
fcompl
push
lods
and
mov
xor
or
jg
mov
das
inc
sarl
test
fists
arpl
cld
xchg
xor
jno
loopne
and
or
or
mov
dec
mov
push
pop
jg
cmc
ret
nop
icebp
xchg
cmpb
mov
rclb
inc
sub
mov
and
je
adc
aas
aad
push
in
rcr
or
cs
inc
pop
aam
incl
in
leave
xchg
int3
lods
xor
cmc
cli
inc
mov
sub
cld
xchg
mov
pop
mov
iret
inc
mov
cwtl
lods
mov
or
push
and
add
ret
xor
xchg
lock
cmp
push
out
ror
test
fisttps
push
imul
mov
les
xor
push
mov
push
push
clc
jg
xor
add
sub
xchg
test
adc
adc
mov
push
daa
scas
mov
insb
sbb
loop
push
lcall
adc
jb
cmp
sbb
out
shll
push
sub
cmp
js
xchg
shrl
xor
dec
pop
dec
cmp
bound
add
int3
adcb
xchg
lods
push
adc
in
xor
jecxz
pop
insb
mov
ljmp
jmp
repnz
sbb
lock
sarl
sahf
and
lock
iret
lea
sub
xchg
fwait
adc
ror
hlt
mov
sbb
sbb
push
lds
in
in
cmp
adc
aaa
pop
inc
xchg
imul
aam
cmpsb
ja
aad
add
mov
paddb
push
fisubrs
shrl
pop
xlat
sub
dec
pop
xor
cmp
pop
loopne
mov
aam
es
add
mov
dec
stos
sbb
xchg
cmp
shr
test
jnp
lcall
icebp
insb
gs
inc
stos
scas
call
jbe
scas
pop
cmp
xor
jns
pop
adc
adc
sbb
mov
xchg
adc
mov
sbb
inc
inc
inc
shll
mov
inc
xchg
call
in
mov
cs
pop
out
test
das
push
dec
insl
subb
dec
fwait
enter
cwtl
cmp
jl
mov
mov
xor
push
les
push
jne
addr16
or
lahf
push
jge
jmp
rcrl
dec
ficoml
jge
xor
andb
dec
cmpsl
and
cli
rorb
sbb
pop
jmp
lods
sub
jnp
out
xchg
mov
aad
adc
sbb
cs
and
dec
pop
push
repnz
ss
pop
ds
scas
inc
rcrb
xor
subb
push
or
movsl
mov
push
cli
je
out
fisttps
jp
popl
aad
aaa
mov
enter
push
push
adc
fwait
lret
shll
leave
push
dec
cmp
xor
xchg
sub
push
lahf
repz
sub
push
adc
and
inc
in
mov
push
ss
test
into
gs
fbstp
xchg
add
dec
and
adc
push
mov
aaa
out
sahf
outsl
dec
jmp
mov
cmp
out
in
mov
pop
ss
fwait
add
add
insb
xor
jmp
inc
xor
push
mov
add
ret
sbb
jecxz
ljmp
pop
and
out
xchg
movsb
pop
mov
jecxz
mov
stc
adc
or
inc
sbb
ror
mov
std
push
in
je
add
dec
pop
mov
xor
fwait
jl
scas
inc
loop
inc
add
dec
movsl
in
pop
xlat
mov
mov
fisubrs
xchg
xchg
push
arpl
pop
ds
jmp
mov
push
dec
filds
data16
push
mov
xor
cmp
sub
orb
push
into
dec
push
sbb
cmpsb
std
aad
lret
pop
push
cmpsl
sbbb
jl
push
mov
jmp
adc
shrb
inc
es
jae
or
sbb
test
or
test
popf
inc
inc
fisttpll
dec
loope
lret
add
push
mov
or
dec
ret
adc
std
jge
mov
adc
loopne
jo
and
mov
ret
xchg
pop
pop
repz
jp
cltd
mov
push
loop
ja
pop
xchg
mov
jb
test
jge
leave
int
mov
sbb
push
pop
xchg
scas
jbe,pt
push
push
push
popa
xor
sub
aaa
lds
jle
inc
enter
xchg
jmp
icebp
xor
shrb
adc
and
mov
jbe
mov
aad
testb
xor
mov
mov
lods
fidivl
repz
mov
cltd
sub
inc
mov
push
in
mov
pop
je
xchg
pop
fldpi
nop
sbb
mov
test
into
daa
inc
sti
pcmpeqb
push
inc
gs
xor
mov
adc
jne
adc
inc
adc
inc
pushf
clc
or
xor
sar
fidivrs
adc
pop
lcall
push
push
ljmp
jb
jp
cmp
adc
mov
dec
dec
mov
pop
pop
in
sbb
loopne
jbe
push
mov
imul
mov
adc
jne
inc
add
in
pop
aam
adc
xchg
stos
cmp
js
add
mov
mov
push
cwtl
xor
mov
push
les
cmc
das
xlat
imul
clc
fs
jmp
test
ss
mov
mov
push
cwtl
das
mov
fdivl
bound
test
xchg
xor
testb
pop
sbbb
xchg
js
fsub
int3
adc
or
imul
dec
push
xchg
loopne
and
shll
push
rclb
mov
rcl
inc
outsl
inc
fisubs
and
xchg
shrl
pop
imul
hlt
out
inc
scas
jp
std
lods
inc
xor
bnd
push
mov
xchg
push
push
cwtl
outsl
sbb
not
jmp
or
push
adc
popa
gs
xchg
orb
enter
xchg
push
cmp
or
mov
ret
pop
xor
sahf
inc
cld
xchg
jae
push
xor
lahf
xor
addr16
xchg
mov
int
pusha
push
mov
into
or
push
ds
pop
notb
push
push
movsb
testl
aam
outsl
fldcw
out
xchg
mov
rcrl
lods
ret
cmp
dec
test
int3
xchg
push
lods
mov
fs
pop
xor
cmpb
jne
inc
push
out
jne
jge
sahf
mov
xchg
call
mov
jo
push
pop
or
ret
add
imul
xchg
jo
pop
push
je
std
xor
out
xor
jo
and
pushf
jae
dec
jne
sbb
or
sti
push
mov
clc
fcoms
outsb
arpl
mov
and
add
int3
in
jl
mov
add
leave
mov
jmp
add
cmp
lcall
add
insl
imul
xor
mov
inc
and
lock
inc
xor
mov
dec
jge
xor
sahf
mov
rcrb
and
dec
sbb
sti
insl
out
lahf
add
xchg
test
outsb
imul
push
lret
lret
sbb
mov
movsb
mov
jb
mov
shrb
test
out
pop
and
adc
cld
cmp
hlt
in
test
jmp
clc
mov
dec
xor
xor
sbb
ds
mov
loopne
xchg
aas
xchg
jg
jmp
or
pop
xchg
pushw
inc
mov
aad
jnp
shrl
lea
cltd
inc
nop
mov
addr16
inc
inc
pop
mov
cli
mov
fstl
outsb
sbb
cmp
jo
jbe
cmc
adc
movsb
rcr
stc
and
pop
idivb
aaa
mov
push
out
add
cmc
jmp
fucomp
into
push
rclb
les
in
hlt
lock
negb
clc
dec
movsb
lahf
stos
xchg
call
outsb
aas
add
dec
jp
testl
sbb
dec
ret
mov
aad
inc
test
cmc
push
cmp
pinsrw
inc
jp
adcl
or
out
push
in
int3
ds
or
data16
pop
sub
stos
aam
mov
shlb
movsb
pusha
sub
repz
adcl
pop
push
xchg
adc
mov
mov
jo
in
sbb
je
sbbl
xchg
sub
lret
shll
jg
cmpsb
test
mov
jl
xchg
dec
mov
addr16
or
xor
push
or
mov
repz
test
mov
les
ret
pop
sub
ficoms
test
ficomps
pop
add
mov
mov
das
dec
shrl
insb
mov
dec
mov
pop
inc
push
aas
sbb
ror
in
cwtl
cmp
pop
icebp
adc
mov
lock
jmp
subl
mov
adc
adcl
test
xchg
xchg
loope
mov
mov
adcb
insb
inc
and
or
rcl
out
mov
icebp
nop
aaa
pop
movsl
cmp
mov
mov
ret
pop
xlat
shr
js
jne
test
incl
cmp
xchg
mov
adc
xchg
add
sub
ja
lret
test
int3
mov
leave
icebp
add
fidivrl
test
mov
xchg
push
jno
adc
inc
jns
or
cltd
ret
dec
adc
cltd
sub
cmp
xor
fdivs
push
xchg
loope,pt
je
aad
jmp
or
xor
mov
lea
cmp
dec
xor
jb
fcompl
cli
int
outsb
adc
cmp
mov
mov
jg
test
dec
adcb
pop
clc
sbb
fisubl
inc
pop
cmpsb
xrelease
dec
mov
hlt
push
xchg
jg
jecxz
addr16
shll
mov
aam
mov
mov
ret
test
xor
popa
jbe
mov
or
or
jbe
cli
lea
push
xor
std
add
fldt
pusha
out
inc
flds
sub
push
xor
aam
cld
sbb
adc
movsb
aaa
lahf
jb
sti
fnsave
mov
sarb
cltd
call
mov
jmp
mov
cmpsb
lret
inc
das
add
bound
sbb
sbb
jns
sbb
stc
sarl
out
mov
lret
mov
data16
mov
ret
cmp
adc
mov
jne
or
fwait
pop
scas
int3
jecxz
mov
icebp
daa
andb
ret
pop
enter
insb
loope
ds
jmp
pusha
pop
test
lock
lods
jo
je
cmp
dec
shrl
mov
outsb
sub
lock
mov
jg
jo
mov
ja
inc
push
pop
xor
mov
mulb
stos
test
push
stc
add
scas
xor
xchg
sub
mov
xchg
in
andb
pop
scas
jbe
jle
dec
imul
xchg
jb
or
repz
mov
pop
adc
add
scas
in
fwait
rorb
cmp
or
scas
mov
mov
test
lret
sti
imul
dec
inc
cmp
push
jns
cli
pop
pop
dec
stos
cmpsb
popf
xor
pop
dec
push
push
xchg
mov
mov
push
out
xchg
pop
xor
add
add
int3
jno
mov
or
mov
lods
ss
xor
pop
push
out
bound
fnstenv
jnp
pop
and
not
insb
ljmp
mov
outsb
aas
ret
ss
dec
dec
das
nop
shr
push
add
test
out
aam
pop
mov
dec
stos
in
sbb
mov
dec
add
stc
pop
dec
ret
adc
or
cmp
mov
les
mov
add
sub
push
xchg
test
mov
xorl
lret
mov
cld
xlat
jnp
mov
test
sub
movsl
ret
fdivl
mov
dec
inc
lcall
adc
jbe
mov
and
pop
mov
xchg
adc
add
mov
mov
mov
lds
sbb
xchg
mov
sub
lret
filds
fs
xchg
iret
and
jae
dec
jo
in
pop
punpckldq
lcall
fldt
push
mov
and
test
xor
pop
testl
xor
stos
xor
out
lcall
xor
xchg
cmpsl
fisubl
scas
xorl
nop
push
or
push
sub
addr16
push
scas
mov
jae
xlat
ret
pop
movsl
dec
rcrb
and
push
add
cld
add
test
stos
mov
adc
rorl
ljmp
or
fwait
mov
fldpi
ret
dec
sbb
cmpsb
ds
jae
sbb
insb
cmc
mov
sbb
add
pop
push
aas
js
iret
pusha
mov
xchg
adc
insb
fldlg2
lahf
ss
and
inc
inc
lock
add
cmpsb
xor
mov
pop
push
mov
sub
dec
shl
inc
cmp
dec
sahf
lds
mov
pop
fwait
test
shrl
hlt
stos
mov
mov
mov
push
out
dec
shrb
fidivs
stc
ss
add
lahf
xor
fwait
push
push
mov
adc
push
pusha
jae
jb
mov
adc
jge
das
lds
mov
xchg
insl
icebp
cmp
hlt
int
aam
xchg
adc
mov
fstps
lock
sub
mov
into
xchg
pop
gs
scas
add
stos
sub
popf
fnstenv
dec
xor
pop
outsl
cmp
shlb
out
xchg
pop
fbstp
nop
or
lods
iret
lahf
jno
pop
sub
test
pop
loopne
fisubs
lea
mov
fstps
inc
lods
jge
xor
xchg
stos
das
addr16
loopne
arpl
ljmp
adc
sub
adc
jmp
mov
outsb
and
sub
outsl
mov
cmp
repz
mov
mov
clc
and
mov
mov
mov
out
shl
pop
push
pop
jae
push
cmp
cmpsb
roll
jo
movmskps
jo
iret
fld
mov
xor
or
andl
fdivrs
lods
mov
es
loop
mov
lods
mov
imulb
dec
andl
pop
lcall
mov
mov
cli
push
ficoml
cmp
test
bound
sub
jb
sahf
add
lret
xchg
stc
popf
inc
mov
sbb
outsl
ja
pushf
test
cwtl
cmp
rcr
in
hlt
idivb
filds
addb
xlat
xor
and
jge
push
fidivs
sbb
and
mov
add
mov
filds
mov
cld
test
xchg
xor
pop
dec
and
data16
xchg
xchg
push
add
add
jno
and
cmp
sti
pusha
pop
mov
cmc
movsb
push
out
cmpsl
fists
push
or
cmc
pop
cmp
decl
inc
jo
shlb
shr
mov
push
mov
mov
arpl
dec
ljmp
bound
in
enter
add
icebp
xor
fildll
fstl
mov
clc
or
shrl
js
mov
push
jne
push
out
testb
rclb
add
out
bound
xor
push
stc
aas
jle
mov
jl
or
ret
out
lds
bound
push
test
sub
popf
dec
ljmp
cmp
pop
push
mov
inc
mov
push
lahf
ss
sarb
add
mov
lods
xor
hlt
cmp
xor
pop
repz
lcall
movsb
jo
sub
xor
push
cwtl
and
repz
insl
in
rcrl
outsl
or
or
std
push
movsl
or
loope
mov
cmpsl
push
xchg
dec
in
hlt
add
dec
lods
xchg
sbb
js
scas
add
scas
mov
aas
or
outsl
xchg
nop
adc
jle
les
in
push
sub
sbb
mov
pop
mov
sub
insl
adc
sahf
dec
inc
inc
cld
xchg
fidivl
and
imul
das
push
push
xchg
fcmovbe
pop
sbb
out
test
outsb
pop
repz
fmulp
mov
pusha
and
arpl
sub
push
sub
dec
mov
dec
loope
rol
popf
adc
mov
ja
fstpt
push
pop
fmull
ret
rcrl
das
jmp
add
jnp
sti
mov
sub
rolb
jns
mov
or
push
xlat
jmp
arpl
rorb
fwait
jno
add
pop
push
xor
ljmp
ret
hlt
outsb
lret
mov
int3
cmp
shlb
mov
pusha
test
rcr
mov
push
xor
in
pop
rcll
push
stos
pushf
jg
lods
jge
sbb
movsb
xor
pop
std
push
push
cmp
sub
cmp
std
mov
sarl
dec
adcb
scas
pop
iret
push
fucom
xchg
dec
popa
inc
mov
fisubl
mov
push
ds
nop
jo
pop
cli
adc
mov
pop
mov
pop
pop
int
outsl
push
popf
pusha
addr16
dec
xchg
jmp
pop
mov
add
cli
fidivs
ja
add
out
mov
adc
adcb
mov
jbe
sub
xor
scas
mov
dec
bound
push
je
dec
es
mov
test
jl
shrl
ja
sub
out
insb
add
push
fistps
mov
fdivrp
arpl
and
sub
jno
xchg
mov
insl
jno
xor
loop
insl
add
push
movsb
jnp
loop
jle
add
test
outsb
xchg
mov
or
push
mov
dec
iret
xchg
jle
jmp
add
lods
push
and
xchg
lds
dec
fwait
mov
dec
hlt
pop
and
divb
xor
sub
dec
popa
cld
mov
lcall
xchg
push
xorl
out
xor
xchg
ds
dec
out
in
add
rcl
adc
lods
not
jnp
shld
mov
xchg
insb
rcrb
ja
mov
sti
xchg
inc
pop
ret
sbb
mov
fsubs
addb
add
loop
cmc
loop
sub
and
fdivp
push
or
push
testb
push
xchg
mov
push
insl
outsb
push
loopne
pop
fldenv
jnp
leave
xor
dec
pop
aaa
sub
fiadds
and
ret
mov
jge
push
out
mov
outsb
aad
cmp
cmp
dec
sti
iret
jecxz
cmp
lret
lret
xlat
add
mov
pusha
jae
jo
je
rcll
add
jecxz
xor
iret
imul
dec
and
push
testl
lds
xchg
gs
xchg
jbe
ja
sti
js
fldl
mov
and
sti
pop
cli
xor
push
gs
sub
ficomps
scas
mov
loope
subb
mov
inc
xchg
mov
ret
or
and
inc
mov
jnp
test
mov
repnz
mov
push
rcrb
push
sbb
stos
out
test
int
mov
ret
dec
cmp
sbb
sub
fwait
test
mov
test
or
jbe
cld
arpl
xor
test
arpl
repz
add
add
jle
inc
cmp
sbbl
div
arpl
movsl
lea
push
lret
jnp
inc
lods
dec
sbb
arpl
push
jle
xorl
scas
cmp
mov
mov
push
xchg
push
inc
repz
fnstenv
ds
test
in
xchg
adc
insl
fcoms
scas
mov
test
jb
push
sub
nop
xor
lcall
or
pop
xor
mov
pop
ret
aam
lea
clc
popl
cld
push
mov
jmp
cmp
sbb
inc
fisttpl
jge
mov
andl
mov
pop
sub
dec
push
inc
out
js
aam
push
jge
lods
das
addb
push
pop
sub
mov
lds
movsb
bound
test
and
scas
push
icebp
pop
pop
das
cmovno
fidivs
or
scas
and
fs
xchg
jo
sbb
xchg
in
ds
aam
cmp
and
dec
xchg
rol
inc
xor
jmp
or
ja
pop
sub
inc
or
cmpl
in
nop
aaa
mov
push
mov
xchg
xchg
and
enter
jno
mov
sbb
arpl
aad
adc
push
in
cli
add
sbb
ret
insb
into
iret
mov
mov
and
inc
inc
test
aaa
jbe
lds
iret
adc
xchg
data16
rcrb
mov
lahf
cmp
sub
adc
jns
push
scas
call
pinsrw
push
cld
lcall
ss
mov
int
out
test
loope
sub
dec
or
out
shlb
xor
dec
stos
push
mov
mov
shlb
add
sub
mov
in
inc
xor
fcompl
inc
mov
sub
in
xchg
nop
neg
idivb
fucomp
mov
enter
mov
add
cwtl
push
in
test
cltd
pop
sahf
leave
pop
les
lret
pop
call
ljmp
jb
lcall
int3
pop
lea
enter
fcmove
arpl
aaa
into
fsts
push
test
popf
testb
adc
mov
clc
test
test
dec
or
in
out
dec
in
xchg
push
adc
dec
push
fsubrs
js
ds
nop
inc
mov
jbe
repnz
adc
cmpsb
mov
or
and
imul
inc
fmuls
fst
lcall
mov
int3
cmpsl
push
jno
or
cmc
cltd
pop
mov
push
gs
test
movsl
or
test
mov
sahf
xlat
mov
and
cmpsl
push
test
lods
int3
loopne
repz
das
add
data16
and
sbb
xlat
push
xchg
neg
sub
and
inc
cmp
js
stos
jge
dec
push
mov
push
and
int3
cmp
fs
mov
push
dec
adc
std
pop
scas
loope
xchg
lahf
ss
nop
push
roll
dec
xor
dec
test
adc
rcr
or
pop
xchg
dec
pop
lods
mov
inc
fldenv
movsb
loope
fiaddl
pop
jmp
sti
push
and
test
jne
sbb
add
xchg
ss
mov
adc
sub
sub
fimuls
div
sbb
xchg
push
push
cmp
cmp
and
sbb
mov
inc
jb
aas
loop
sbb
adc
jae
cmc
mov
xchg
vprotb
xor
addl
out
cmpsl
imul
gs
jge
xor
pop
ds
jnp
mov
into
adc
push
mov
ret
xorl
arpl
sub
dec
fnstenv
sahf
xor
mov
mov
aad
mov
add
add
cmp
pop
icebp
lret
ds
mov
addr16
ss
sub
outsl
das
lock
aaa
and
cmp
sti
or
into
in
dec
inc
push
push
insb
js
pop
mov
pop
cmp
xchg
lea
push
push
lcall
in
faddp
addr16
sub
jbe
imul
push
test
stos
and
or
inc
inc
push
xchg
adc
lret
ljmp
leave
insl
cmp
rolb
fwait
icebp
mov
lcall
in
clc
or
nop
pushf
xor
mov
xchg
popl
cltd
shl
xor
push
mov
mov
jecxz
jnp
adcl
ret
adc
add
xchg
pop
cmpsb
mov
and
int
out
cld
call
or
and
leave
shr
cli
dec
mov
fs
mov
inc
into
aam
and
mov
outsb
lcall
inc
imul
fcompl
test
mov
add
int3
dec
jns
mov
inc
push
xor
lock
dec
nop
lods
into
inc
mov
push
int3
arpl
and
push
fildll
and
popl
or
scas
lods
mov
js
fxch
cmp
push
out
bound
and
imul
xchg
cmc
cmpsl
dec
cmpsl
jb
and
sbb
cmc
popa
adc
in
cmp
adc
pop
leave
pop
pushf
push
ja
iret
int
out
and
inc
inc
and
jne
xor
sub
jo
pop
loopne
push
adc
jns
mov
addr16
lods
xor
inc
stos
add
int3
test
dec
scas
pop
inc
mov
fidivl
cli
push
testl
xchg
xchg
popa
fmul
or
cmp
mov
icebp
add
fsubl
lret
push
inc
data16
add
mov
push
int
out
pop
ds
sub
sti
push
icebp
inc
aas
cld
cmpl
bound
es
iret
jb
add
dec
and
inc
imul
or
out
add
mov
xchg
stos
shrd
mov
add
dec
mov
fistl
data16
inc
negb
loop
sti
jbe
mov
push
lods
data16
movsl
jae
cmpsb
movsb
push
aam
mov
test
push
mov
pop
pop
or
cli
push
cmp
lcall
out
loope
adc
inc
insl
jge
in
fwait
inc
mov
or
or
and
test
std
into
mov
jo
pushf
or
loopne
es
mov
xchg
cmp
dec
adc
dec
outsl
cwtl
add
es
jecxz
cltd
mov
push
addr16
lods
nop
inc
rcll
xor
mov
lret
mov
rolb
dec
repnz
xor
inc
sbb
out
enter
sbb
add
jo
scas
sub
out
test
mov
sub
or
shll
inc
pop
mov
pop
ss
cwtl
test
punpckhbw
dec
cltd
in
mov
in
ljmp
int3
and
and
mov
mov
sbb
xor
jl
sub
and
repnz
andb
xlat
dec
dec
and
stc
adc
mov
ja
xchg
fistpl
stos
pusha
cmp
sub
out
push
loop
adc
and
ljmp
adc
pop
dec
int
test
jns
dec
jae
int3
arpl
into
sbb
hlt
xlat
cmp
push
dec
xor
push
rol
sbb
ret
mov
fwait
sbb
jecxz
sbb
insl
cmpsl
mov
cld
stos
mov
repnz
sbb
sbb
inc
cmp
push
rorl
out
pop
push
nop
mov
sahf
or
call
in
int
hlt
mov
push
fucomip
movsl
xchg
pop
roll
inc
sub
int
jns
sbb
int3
mov
jnp
sub
imul
push
sbb
push
loopne
cwtl
push
mov
pop
dec
in
outsl
sbb
pop
jg
add
jp
clc
cltd
in
push
pop
imul
shrl
push
insl
inc
push
xor
jmp
add
in
lds
dec
or
xchg
or
shll
or
dec
cli
jne
mov
pop
cmc
lea
jb
aam
xchg
test
mov
jecxz
clc
or
and
mov
mov
and
pop
mov
adc
sub
adc
sbb
dec
push
sbb
mov
sub
sahf
push
adc
push
in
lret
fs
daa
push
jno
jno
aaa
scas
call
mov
push
adc
or
dec
push
out
mov
jnp
clc
loope
or
out
enter
dec
pop
mov
stos
nop
xchg
adc
xchg
ret
dec
jmp
xor
call
test
inc
in
inc
lret
arpl
or
jl
jmp
arpl
jae
dec
pop
mov
jne
out
mov
pop
add
pop
psraw
and
daa
out
cmpsl
or
mov
dec
xchg
add
lahf
mov
movsl
push
sub
in
test
mov
insl
adc
insb
leave
iret
lods
xchg
int3
mov
dec
pop
mov
loope
sahf
push
xor
fsubrp
clc
sahf
cltd
inc
push
daa
cmpsl
mov
push
inc
dec
fistps
out
inc
pusha
push
scas
call
shrl
lods
push
inc
sub
adc
in
cmp
jbe
lahf
xchg
jle
sahf
adc
call
loope
jmp
std
pusha
inc
test
out
insl
and
mov
dec
inc
shlb
inc
cs
mov
dec
repz
imul
adc
fcomps
data16
bound
sti
mov
sbb
jne
or
jo
push
adcl
or
jae
movsb
ror
fcomi
out
xchg
pop
adc
es
pop
adc
ffree
outsb
ljmp
pop
xor
cmp
iret
xchg
dec
xor
out
aas
mov
jge
jno
sub
xchg
jnp
cmpsl
bound
loop
and
icebp
or
repnz
and
pusha
adcl
jg
ret
xchg
lahf
cmp
adc
jge
mov
pop
fdivr
pop
out
lock
adc
pop
jg
cmp
add
xor
push
pop
adc
lds
pop
add
loopne
adc
inc
pusha
leave
push
pop
insl
pop
push
mov
xlat
out
mov
into
mov
lcall
push
xor
jne
or
mov
fnstenv
sbb
inc
dec
sti
pop
std
lcall
sahf
adc
pusha
jno
arpl
adc
in
push
lret
stc
js
xor
push
popa
or
stos
lea
fdivs
push
mov
movsb
repnz
inc
decb
xorl
popf
shlb
aam
inc
sahf
dec
pop
call
and
sbb
dec
js
iret
xchg
shrb
lock
inc
cmp
or
inc
roll
lcall
test
pop
loope
push
sub
idivl
push
and
andl
add
xor
rol
mov
dec
ret
dec
in
cld
jns
mov
popa
ret
inc
lcall
lods
dec
sub
loopne
xchg
cmp
xchg
shlb
mov
aad
push
mov
jle
hlt
aam
lods
pop
inc
enter
xor
ficoms
jp
jns
xor
inc
jmp
dec
mov
scas
js
popa
cmp
lahf
add
jg
xor
sbb
push
jg
adc
lret
cltd
sub
pusha
dec
ss
sub
scas
insb
jp
sahf
iret
cmp
push
xorb
sub
cmp
stc
bound
in
mov
xor
sahf
ljmp
xor
fisubrs
rolb
addb
cmc
sbb
add
cli
dec
xchg
ret
cmpsl
sub
repnz
out
shl
cmpsb
sub
mov
adc
or
jbe
xor
mov
jl
add
pop
outsb
gs
insb
lock
ja
inc
xchg
xor
xchg
pop
push
push
and
je
es
xchg
push
fcomip
and
or
cvttps2pi
scas
fldl
mov
mov
imul
adc
inc
or
mov
mov
or
lods
lahf
add
shlb
cmp
aas
jne
push
and
lock
jne
repz
sbb
das
lahf
ss
push
push
mov
add
sub
jnp
mov
daa
popa
testb
movsb
in
push
dec
arpl
pop
xchg
jo
add
sbbl
xchg
in
sahf
xor
out
xchg
cmp
dec
mov
lret
insb
rcr
pusha
fnstcw
jb
mov
jae
mov
jb
das
sti
pop
pop
scas
cld
pop
outsb
rcll
adc
out
mov
jmp
repnz
mov
sub
movsl
mov
and
mov
rcll
out
jae
outsb
cmp
mov
aaa
cmp
and
outsb
jne
cli
mov
fisubs
inc
mov
cmp
xchg
cli
test
aad
stos
iret
adc
sahf
jb
pop
cmp
pushf
fmulp
je
push
push
bsr
add
daa
pop
into
scas
xor
xlat
xchg
outsb
adc
jne
cld
stos
pop
test
leave
lods
adc
nop
jge
lret
fbld
pop
stc
mov
std
mov
outsl
fdivs
dec
inc
jge
pop
cmp
xchg
arpl
push
mov
inc
inc
movsl
sarl
pop
jo
popf
movsb
or
arpl
ja
or
test
mov
mov
ds
test
xor
and
xchg
mov
loope
mov
aas
mov
add
incl
push
ss
pusha
cltd
cs
insl
xchg
neg
loop
dec
xchg
or
xlat
cld
or
pop
sbb
mov
mov
push
add
es
dec
cmp
and
sub
push
imulb
int3
bound
hlt
adc
xlat
inc
lahf
xor
lret
cmc
xor
push
mov
aas
add
sub
pop
scas
jno
mov
clc
in
ljmp
xchg
popa
pop
add
and
enter
and
mov
jmp
push
xchg
jle
int3
mov
sub
mov
adc
and
jns
into
lea
repz
sbb
orb
pop
push
push
inc
out
lret
push
fcmovu
addr16
cli
and
ss
fdivl
inc
dec
in
mov
mul
dec
mov
stc
sbb
cs
xor
push
pop
adc
or
imul
mov
jo
lock
xor
int
pop
push
cmp
fnsave
inc
test
ja
and
and
lret
stos
inc
mov
lahf
mov
aam
adc
insb
xorb
mov
adc
lret
mov
mov
xor
mov
xchg
push
aad
jp
add
out
test
out
cmpsl
cmp
fcoms
shr
inc
mov
cltd
je
rcll
inc
dec
sti
pop
jnp
cmp
bound
xor
sarl
stos
inc
outsl
loopne
fistps
test
cmp
and
inc
stos
ja
popa
ds
and
push
cmp
clc
adc
jb
inc
jnp
pop
idivb
ds
lods
inc
push
add
into
mov
or
test
mov
mov
icebp
stos
es
xor
jo
popa
xor
test
mov
loop,pt
insb
pop
lcall
cmp
sub
ret
push
adc
xor
xor
fiaddl
add
mov
movsb
ja
leave
out
cmpsb
cmp
xchg
push
cmpsl
inc
faddl
call
jbe
pop
movsb
add
aad
push
test
and
mov
and
push
jbe
xor
sub
xchg
mov
pop
pop
ret
xchg
sub
xor
push
ja
iret
shrb
jnp
push
dec
mov
enter
mov
mov
or
mov
movsb
add
mov
fsubl
fisttpl
push
ljmp
arpl
xchg
push
add
cmp
fildl
stos
push
xor
inc
mov
loopne
xlat
stos
addr16
repz
inc
mov
xor
push
es
dec
ds
movsb
inc
adc
adc
popf
and
lcall
and
ret
jg
jo
aaa
rcll
aaa
cwtl
call
dec
mov
push
xchg
mov
jo
dec
ficoml
outsl
push
in
into
xor
add
inc
cmp
and
rcrb
sti
outsb
xchg
jp
or
inc
aam
je
lret
jne
sti
xor
adc
xchg
ds
cwtl
bound
loopne
inc
push
add
or
rclb
movsl
lcall
lahf
cwtl
fdivl
shl
bnd
xchg
stos
pop
cmpsl
scas
out
arpl
outsl
sbb
aaa
ror
outsl
mov
and
mov
cmpsb
jecxz
cmpsl
sbb
inc
cmp
inc
fadd
push
push
lcall
push
jl
ret
hlt
xchg
dec
pop
lock
mov
and
add
or
ss
test
inc
lahf
dec
push
addr16
mov
pop
or
push
ss
ret
fistps
lea
inc
stos
and
pop
stos
ss
cmp
mov
clc
mov
cld
bndldx
ret
jecxz
es
inc
push
dec
inc
lcall
aam
addb
pop
in
cmp
andb
cmp
pop
rcrl
repnz
into
addr16
push
test
idivb
enter
add
adc
dec
fiadds
ljmp
pop
and
ja
cli
cmp
ljmp
push
mov
sti
pop
or
incb
scas
inc
push
jmp
int3
mov
loop
sub
lods
ds
pop
test
add
cmp
movsl
sbb
int3
sub
adcb
push
repz
scas
ja
ror
aaa
push
push
icebp
pop
push
sbb
aaa
into
popf
xlat
cmc
sarl
cmp
pop
mov
gs
pop
xchg
pop
cmp
dec
mov
sub
adc
sub
pop
or
out
pop
adc
cwtl
fdivs
xor
add
jmp
orb
cld
xchg
shl
lcall
mov
out
cmp
add
movsb
pavgw
xchg
cmp
loope
cli
ljmp
adcb
les
lret
mov
or
call
and
shr
mov
frstpm(287
fnsave
loope
icebp
mov
mov
or
or
mov
sarb
pop
sub
push
sbb
ficompl
inc
sahf
add
aas
lahf
mov
rcl
or
mov
mov
adc
cltd
add
popl
notl
icebp
inc
arpl
inc
test
mov
mov
ds
and
mov
lods
popl
ss
loopne
jbe
out
push
jmp
jmp
fisttpll
sbb
out
mov
imul
lret
xor
repz
ffreep
stc
test
mov
ss
xor
cmp
xlat
xchg
js
xchg
adc
xchg
jo
sbbb
mov
mov
sbb
inc
out
add
js
daa
test
lret
sbb
jnp
push
xchg
fsubr
ret
mov
pop
mov
mov
dec
aam
push
enter
daa
icebp
rcr
push
movsb
cmp
mov
pop
out
ljmp
enter
jae
test
dec
nop
mov
aad
testl
adc
scas
pop
xchg
cmp
idivl
cmp
pop
es
jo
xor
mov
int3
icebp
xchg
jp
addb
xor
and
dec
mov
inc
repnz
fidivrs
lods
pop
fcompl
xor
push
in
loop
mov
push
mov
sbb
inc
aaa
out
stc
pop
outsb
loope
fisubrs
movsl
sub
ja
jmp
xchg
jne
lcall
sub
loopne
mov
movsl
lds
lret
orb
or
fidivl
cmp
arpl
mov
sub
or
cmpsl
inc
fsts
aam
dec
adc
and
mov
ret
pushf
int3
xor
das
lods
pop
mov
popf
jnp
out
imul
push
add
mov
flds
outsl
test
mov
cmp
cmpb
xlat
push
push
inc
jg
jae
jp
fiadds
mov
dec
xchg
push
fcoms
int
dec
xor
pop
adc
dec
sbb
stos
dec
sbb
xor
or
and
xor
mov
pop
das
es
pop
pop
adc
mov
loope
aam
addl
jmp
push
sahf
jmp
sub
cltd
xor
cmpsl
addr16
adc
dec
mov
lock
xchg
add
fwait
mov
sub
loopne
stos
dec
bound
xchg
cli
add
in
js
je
daa
dec
push
shrb
sti
pop
pusha
mov
push
addb
pop
mov
sub
cs
mov
idivb
adc
jne
cld
shll
outsb
cld
iret
push
clc
scas
pop
cmc
out
pop
lock
fisubs
mov
push
lods
mov
jnp
push
popf
adc
outsl
ret
mov
in
pop
pop
pop
inc
adc
cs
push
fistps
xor
sub
xchg
sbb
mov
push
test
and
call
test
faddp
jp
xchg
mov
mov
iret
loopne
notb
xor
mov
sbb
scas
das
imul
adc
out
cmc
push
mov
ret
sub
imul
fdivp
mov
andb
push
jne
sar
call
mov
mov
test
cmp
fidivs
mov
push
stc
or
dec
mov
dec
xchg
lods
aam
or
movsb
sbb
xchg
aam
mov
cltd
subl
push
mov
test
adc
ror
in
dec
ss
pushf
inc
dec
aaa
idivl
ja
jb
sub
fwait
mov
sub
or
dec
mov
mov
stc
repz
push
inc
cld
jmp
adc
pop
or
jg
popf
cmp
xor
add
out
mov
adc
aaa
pop
sub
sub
mov
dec
in
int
and
shrb
push
push
push
sbb
inc
movsl
or
push
or
jg
daa
mov
leave
imul
ljmp
mov
aaa
dec
imul
jbe
sbb
mov
cs
enter
rcrb
lods
jnp
inc
push
mov
ljmp
pusha
push
roll
mov
imul
ljmp
jecxz
or
cmp
jp
and
lds
push
xor
adcb
sbb
out
and
cwtl
out
push
arpl
mov
sbb
jnp
out
scas
add
or
sbb
loop
das
add
add
mov
add
sub
mov
clc
lds
or
add
and
jb
pop
mov
mov
adc
add
scas
push
inc
mov
mov
fwait
cwtl
leave
int
mov
add
cld
ret
in
insb
scas
sbb
push
xor
jnp
xlat
and
fisttps
movsb
cmp
sub
outsl
and
subb
bound
test
xor
ljmp
addr16
adc
jmp
outsb
lods
mov
jecxz
pop
sti
fwait
nop
js
jns
aad
and
fists
lret
lcall
cwtl
mov
inc
mov
push
test
xor
lock
sti
fisubs
add
sbb
icebp
sbbl
mov
mov
call
hlt
add
push
xchg
cmp
push
shr
and
testl
out
push
stc
fs
xor
sahf
ds
mov
loope
sbb
call
mov
and
stc
popf
mov
lea
jmp
ret
dec
cmc
xor
lds
sar
les
dec
lock
jmp
cli
icebp
ret
movsb
outsl
fiadds
das
push
rcll
xlat
xor
push
ljmp
push
or
outsb
push
mov
sbb
mov
xchg
clc
mov
std
ljmp
sti
mov
or
data16
jge
fsubr
jmp
in
std
int
dec
nop
mov
insl
add
fs
push
js
mov
dec
push
and
scas
jl
cli
pushf
stc
mov
lahf
pop
xchg
adc
je
lods
pop
lret
xchg
shlb
pop
mov
xchg
push
es
cmp
sub
outsb
sbb
aad
daa
call
stos
and
call
sbb
and
sbb
mov
pop
xchg
push
pop
testb
faddl
inc
and
inc
lods
into
push
jmp
lods
jns
aas
add
fwait
xor
and
and
outsl
push
add
pop
sub
sbb
mov
mov
daa
inc
in
sub
push
mov
jb
and
out
std
lcall
in
popa
cmp
call
mov
pop
push
popf
lea
push
aas
outsl
sahf
hlt
addr16
jne
cmp
and
jp
cmpsl
lods
mov
pop
xor
xchg
lods
leave
popf
jp
lret
push
pop
out
and
dec
xchg
and
dec
push
insb
aaa
iret
popf
xor
test
inc
mov
es
orb
dec
push
jno
sub
pushf
add
push
xor
and
pusha
stc
push
inc
xchg
js
pop
aaa
out
mov
cwtl
out
jnp
flds
and
mov
xor
or
dec
dec
push
inc
subl
cmp
cs
lea
jno
js
aam
pop
clc
push
or
and
rorl
xchg
dec
jp
xor
fdiv
loopne
push
pop
out
sbb
cmp
xlat
lcall
aad
dec
inc
fnstcw
les
adc
std
jmp
test
out
pop
sbb
in
jbe
mov
add
cmp
jae
dec
jne
mov
adc
pop
into
pop
ret
rcl
adc
leave
stos
mov
sub
xchg
lret
adc
sub
xor
xchg
jb
pop
mov
clc
repnz
in
and
popa
cmpl
inc
clc
shlb
in
mov
ret
das
adc
push
imul
mov
addr16
insl
pop
stos
jp
inc
push
mov
leave
mov
mov
lret
rclb
pop
into
cmp
jmp
cld
stos
jmp
daa
iret
jne
mov
in
jg
roll
sbb
mov
and
call
cmp
sbb
dec
cmp
or
push
movsl
cmc
lds
testb
jmp
into
in
or
and
sub
in
push
addr16
iret
leave
repnz
sbb
ret
and
mov
cmp
jg
in
cltd
push
jno
lock
and
fidivl
jno
cmpsb
and
cmpsl
out
lcall
sahf
sub
shrb
sbb
adc
pmaddwd
pop
cs
and
insl
sub
cld
sub
pop
pop
add
pop
cmp
jg
and
sbb
sbb
push
cmp
out
xchg
pop
sbb
sub
sub
cltd
inc
out
xchg
daa
scas
jne
push
dec
pop
push
outsl
leave
sub
addr16
mov
stc
outsb
sbb
xor
mov
enter
fstpt
ss
pop
pop
arpl
test
repz
add
loope
lds
lods
mov
test
and
pop
adc
xor
or
mov
pop
fwait
lods
jg
ds
int3
jp
xor
inc
mov
stos
mov
jge
sahf
dec
lret
test
stos
jne
and
aad
push
stos
shl
add
jle
jno
outsl
sbb
scas
cmpl
cmpsb
loop
and
aas
loopne
jno
stos
in
hlt
mov
popf
lcall
add
add
bound
dec
fstps
xchg
mov
dec
pop
std
pop
dec
jns
orl
daa
jo
fsubl
push
push
mov
test
fisubs
pop
popa
fbstp
xor
popf
out
mov
and
jle
xor
push
out
pop
mov
inc
lahf
xchg
js
scas
inc
pop
loope
push
xchg
add
and
out
out
sbb
nop
jae
and
xchg
std
aad
jmp
pop
out
mov
lods
sub
mov
movsl
push
inc
adc
shll
cltd
and
sub
loope
popf
rolb
and
inc
adcl
pop
aaa
leave
pusha
imul
xor
mov
or
popa
insl
xchg
in
cmp
adc
mov
xchg
lds
in
add
cltd
xor
mov
cmp
mov
arpl
sahf
int
mov
ljmp
cmpsl
pop
fucomip
mov
ret
sub
push
outsl
mov
imul
dec
loop
jne
outsb
mov
enter
fsubr
call
popf
jmp
sub
ror
call
movsl
sbb
or
lret
rcl
adc
data16
enter
sub
arpl
clc
sbb
mov
xlat
std
push
les
into
push
inc
iret
out
ljmp
fcmovne
xor
jmp
out
jnp
addr16
or
xchg
jno
sahf
clc
fwait
inc
inc
dec
mov
cmpsb
ret
rcll
mov
xor
cmp
into
mov
in
pop
inc
push
stos
shrl
or
dec
in
mov
into
push
out
mov
or
test
scas
dec
scas
mov
inc
fisubrs
inc
gs
cwtl
mov
ljmp
xor
fistpl
dec
notb
mov
and
mov
push
xor
mull
jp
sub
filds
jp
ja
mov
push
out
and
aad
and
es
sub
out
dec
xchg
lea
call
xor
lcall
in
push
outsb
add
jnp
mov
mov
adc
push
int3
cltd
xor
mov
subl
xchg
push
inc
cmp
cld
push
adc
dec
dec
fs
jns
mov
pop
sti
pop
mov
cmc
xchg
sub
lahf
ljmp
mov
xor
call
xor
pop
jns
orl
mov
call
lcall
push
jne
enter
clc
adc
push
lea
into
cmp
mov
mov
test
add
pop
popf
fcmovne
sbb
cmpsl
dec
popf
pop
jecxz
cmp
insb
inc
lods
imul
mov
add
jns
pop
mov
pushf
adc
shrl
xchg
jge
cld
mov
cmpsb
mov
popf
daa
ret
inc
test
in
int3
and
aas
push
bound
sahf
orl
adc
adc
movl
inc
lods
repnz
and
mov
pop
sbb
js
enter
sahf
push
and
stos
inc
je
pop
xor
and
mov
fidivl
ljmp
dec
shll
mov
aas
insb
mov
mov
jmp
rorb
adc
mov
movsb
pop
neg
jp
lret
bound
popf
bound
mov
sbb
cmp
push
in
test
lret
mov
ret
lea
adc
leave
int
sbb
adc
test
push
lock
enter
loope
insb
push
fwait
mov
inc
shrl
int3
mov
ja
in
xchg
inc
test
imul
test
in
movsl
sub
inc
aad
seta
clc
mov
sbb
enter
push
push
fisubs
icebp
dec
fisubrl
adc
shr
out
dec
xchg
sbb
std
cmc
push
mov
into
mov
xchg
int3
cld
pop
pushf
and
inc
and
dec
mov
or
js
stc
adc
das
sbb
cmp
sub
xchg
add
pop
mov
mov
les
cmp
mov
sbbl
movsb
daa
outsl
and
and
orb
sbb
aas
dec
shl
cmp
xchg
test
jl
inc
cmpsb
sbb
cs
mov
adc
ljmp
cltd
xor
adc
loop
mov
cmp
loope
not
xchg
lods
jmp
test
cltd
repnz
pusha
adc
insl
ja
cmpsl
cmc
mov
iret
clc
pop
sub
mov
cmp
xorb
sub
data16
sub
sub
dec
pop
xor
push
pop
inc
add
rorb
mov
mov
jl
adc
cld
xchg
push
pop
loop
cmc
lcall
pop
out
jbe
subb
movl
lret
xchg
xchg
sbb
add
sbb
cmp
jp
repnz
sbb
push
orb
hlt
jge
out
cmp
xchg
adc
rorl
aaa
jnp
imul
movsb
mov
mov
rorl
out
gs
xchg
xchg
cmpsb
js
mov
lcall
aad
mov
cmp
cmp
fcomp
mov
into
lods
outsl
imul
pop
fstps
pop
popf
cli
cmpsb
fisttpll
mov
push
push
mov
inc
dec
stc
push
arpl
sub
scas
pop
fisubl
movsl
loope
popa
or
cmpsl
jmp
push
stos
out
and
shrl
mov
daa
xor
js
or
pop
push
cmc
aam
test
scas
inc
push
fdivrs
add
xchg
inc
cmpsl
jl
adc
arpl
cmpsl
xor
cmp
sbb
stc
and
jae
in
fdivs
pop
test
icebp
test
inc
xchg
xor
fstpt
pop
pop
movsb
or
lret
pop
call
mov
fistpll
or
sarl
jl
repnz
lods
add
int
mov
hlt
les
inc
add
xor
subl
movsl
cld
mov
mov
imul
fstpl
mov
jns
leave
lcall
pop
lret
mov
adc
clc
insl
sub
mov
jecxz
xchg
in
test
aaa
js
rcll
pushf
sbb
movsb
outsb
cmp
scas
jne
popa
bound
jp
mov
in
test
mov
mov
dec
int3
sbb
cltd
mov
leave
iret
out
clc
stos
pop
mov
daa
outsl
jp
mov
mov
add
mov
sub
divb
lds
add
xchg
lods
pop
and
add
dec
ja
orl
scas
inc
scas
repnz
scas
aam
int3
xor
adc
mov
jge
stc
push
xchg
push
ret
orb
call
sarb
movsl
or
mull
xchg
xor
jbe
cs
mov
icebp
pop
loop
bound
sub
lret
mov
mov
adc
inc
inc
mov
sbb
mov
sbb
jb
sbb
adc
orl
add
gs
int3
xor
inc
sar
xchg
dec
push
xchg
jo
xor
leave
jae
sub
sahf
ss
imul
icebp
adc
mov
nop
loop
jp
testb
cmp
pmulhw
xchg
add
xor
add
std
mov
enter
and
std
push
aad
sub
lahf
add
jae
hlt
js
inc
int
cmp
xor
bts
add
ficomps
xorb
ss
inc
and
inc
int
jbe
and
les
lock
xchg
jg
pop
roll
addl
mov
out
jle
mov
fsubs
arpl
xor
test
jno
sbb
lods
int3
mov
xor
add
aas
bound
jp
sbb
cmp
roll
fs
mov
fists
mov
cmpsb
mov
push
mov
mov
and
ds
mov
sub
and
push
filds
adc
stc
nop
in
ss
popa
mov
xchg
lods
mov
lret
pop
movsl
lock
sub
push
pop
or
popa
aad
lret
push
lea
daa
cmp
dec
cltd
jecxz
or
lret
mov
sbb
fisubrl
xor
pop
jno
push
cmp
xchg
out
mov
adc
aas
sub
test
and
mov
or
mov
mov
jle
mov
mov
ja
stc
dec
lcall
mov
test
movsb
cmp
and
js
push
push
pop
adc
in
add
mov
cwtl
jb
stc
pop
repnz
lds
add
push
jmp
jb
bound
pusha
out
test
lcall
cmp
aas
cltd
imul
xchg
mov
sub
mov
daa
out
and
mov
push
flds
sbb
test
mov
cmpl
shrl
lret
and
imul
xchg
push
jmp
sti
hlt
imul
outsb
fistpl
fldl
mov
add
rcll
scas
enter
scas
das
stos
icebp
aad
xor
icebp
popa
push
xchg
mov
shlb
js
rol
cwtl
out
cli
leave
loop
inc
in
inc
lcall
and
sub
push
dec
jno
inc
popa
mov
adc
inc
lods
dec
xor
test
xor
sub
or
pop
into
push
pop
xchg
rcrb
popf
pushw
and
outsb
rclb
cs
call
cmc
in
cmp
xchg
aas
orl
push
adc
and
dec
shlb
cmc
mov
and
jmp
adc
jb
pop
mov
add
xchg
sub
in
dec
icebp
frstor
push
jecxz
notb
inc
mov
jp
push
pop
loop
pushf
add
push
shrl
mov
stc
mov
movsl
incb
or
mov
scas
xchg
mov
lret
icebp
cmpsb
mov
mov
push
in
add
add
in
in
nop
inc
ljmp
xor
xchg
sbb
inc
sub
mov
jb
adcb
stos
pop
inc
sbb
test
xor
mov
sbb
arpl
sub
add
insb
and
jb
shlb
mov
or
mov
mov
mov
ja
cmp
out
mov
adc
mov
push
inc
enter
sub
shrl
mov
mov
lcall
push
fcmovnu
sbb
lods
mov
mov
cld
je
rolb
xor
inc
cmp
mov
bound
mov
mov
add
dec
inc
or
cld
pop
jecxz
adc
and
pop
add
ljmp
jne
popf
xor
adc
fwait
xchg
aam
push
stos
xor
mov
sub
cmp
or
jg
scas
inc
mov
cmpsb
fnstenv
iret
cli
insl
jge
icebp
adc
cmp
dec
xchg
mov
and
mov
sub
lock
push
imul
test
fsubl
add
xor
jecxz
scas
mov
mov
dec
add
gs
push
lcall
jg
aad
sbb
push
mov
je
hlt
addr16
and
icebp
dec
iret
cli
jne
jecxz
sub
pop
call
insl
pop
sub
cmp
mov
push
dec
dec
lods
out
sub
ret
outsl
out
cmp
lock
dec
adc
fs
stos
xchg
call
hlt
cmpsb
mov
iret
sub
cli
inc
jae
ja
adc
sub
sub
lahf
xchg
inc
xor
int
xor
lods
inc
push
pop
fbstp
inc
mov
das
idivl
sub
movb
mov
sbb
sub
dec
mov
faddp
push
adc
mov
mov
xor
dec
es
pushf
cmc
fidivrs
push
jne
push
insl
stos
or
xor
stos
adc
xor
inc
or
xor
xchg
mov
xchg
mov
add
jmp
mov
xchg
adc
inc
add
cmpsl
mov
xchg
pop
cmc
inc
cmpsl
xor
repnz
jmp
test
xchg
pop
mov
shlb
out
mov
pop
inc
xchg
ss
in
xchg
dec
or
jo
imul
xchg
shl
adc
push
ss
inc
add
dec
sbb
lds
jbe
mov
push
sbbb
jl
hlt
sub
xorb
testb
push
stos
jbe
push
pop
xor
mov
push
ret
add
xor
jmp
roll
sub
pop
push
inc
sub
push
cwtl
xor
leave
mov
mov
imul
mov
xor
dec
ljmp
sbb
or
pop
fiaddl
stos
cmpb
push
adc
nop
sub
dec
pop
lods
fiaddl
push
add
jns
mov
mov
ljmp
dec
nop
lret
adc
inc
sbb
inc
sahf
jb
add
bound
mov
pop
mov
in
or
add
xchg
adc
inc
mov
bound
add
pop
stos
mov
xor
inc
pop
or
pop
cmp
mov
loop
pop
dec
fbld
test
cmp
scas
js
lcall
movsl
jo
dec
dec
dec
add
mov
mov
sub
lahf
inc
shr
ret
or
lcall
popa
testb
xlat
inc
test
mov
test
out
rorl
or
inc
stos
sbb
lods
sub
fildl
nop
or
dec
imul
ds
dec
jne
insb
add
fwait
pop
cmc
and
inc
push
add
sahf
mov
ljmp
xchg
pop
lret
test
leave
jb
faddl
push
sub
movsl
insb
repz
fmuls
outsl
sarb
arpl
sahf
cmp
cmp
rolb
dec
or
jo
dec
sub
pop
call
in
cs
inc
adc
fsubrs
jno
jg
mov
mov
sarb
shll
xchg
jbe
addb
mov
rcl
rorb
cli
test
nop
popf
inc
pop
ja
imul
fstl
lods
cmp
or
push
cmp
inc
mov
pop
hlt
pop
bound
push
decb
cmp
pop
and
icebp
or
xchg
mov
outsl
push
push
add
jecxz
mov
mull
inc
mov
mov
fwait
xor
in
push
add
mov
aam
out
mov
add
cmp
push
ljmp
pushf
sbbb
je
fisubrl
sub
cmc
dec
cmp
xor
mov
test
push
mov
lret
mov
es
ret
add
sbb
or
call
adc
shrb
cld
dec
loop
jp
shlb
adc
lods
cwtl
daa
inc
cltd
arpl
inc
jecxz
add
aas
aas
es
mov
cmp
push
out
dec
sub
jge
outsb
mov
mov
mov
pop
xor
stc
mov
popf
cmc
lcall
mov
test
mov
je
ror
das
cmp
repz
sbb
iret
fdivrs
aas
nop
daa
jno
in
rcrl
aam
pop
xchg
out
xor
and
dec
loopne
mov
xor
xlat
icebp
or
inc
std
inc
and
scas
dec
jb
mov
insb
pop
jle
xchg
push
call
in
mov
sbb
cmpsb
lods
aad
sahf
mov
jl
or
inc
fdivr
dec
jb
fstps
pusha
adcb
xchg
jle
mov
inc
mov
lret
inc
dec
jb
cwtl
jne
scas
push
fdivrl
jle
test
add
adc
test
adc
daa
jno
into
call
or
jnp
push
test
and
pop
pop
adc
lret
cs
sahf
jp
push
push
jo
inc
out
mov
roll
or
adc
xchg
loop
das
jmp
out
pop
and
pop
incb
outsl
fcoms
fidivrs
adc
adc
xorb
inc
sub
int
push
sti
in
adc
and
xor
test
lcall
ja
cltd
jb
out
jo
adc
dec
test
orl
pop
test
sarb
push
popf
mov
fwait
lahf
lds
jno
push
mov
popl
adc
mov
push
sub
movsl
imul
jne
cld
repz
mov
cwtl
mov
inc
dec
sbb
mulb
mov
add
dec
pop
ds
dec
push
and
movsb
das
push
add
jmp
mov
jno
mov
mov
or
fdivrl
shr
mov
das
adcl
lds
push
aaa
sbb
dec
in
fadd
daa
adc
xor
cli
out
fmull
xchg
push
outsb
fsubrl
sub
in
cmp
push
jg
adc
outsl
jnp
jl
loopne
pushl
mov
xchg
nop
iret
rclb
cs
push
cmc
pop
mov
and
sbb
jmp
mov
sahf
inc
dec
int
inc
es
push
add
decb
iret
cwtl
mov
lods
stos
jmp
jb
hlt
xor
jmp
jg
je
frstor
push
dec
pushf
mov
mov
push
mov
aaa
jbe
pusha
movsl
cmp
cmp
cwtl
add
ds
mov
sbb
sbb
jae
mov
mov
sub
add
gs
mov
pop
pop
fists
jo
push
mov
xchg
xchg
cmp
xchg
ljmp
lahf
mov
addr16
xchg
bound
pushf
or
mov
sbb
xor
mov
pop
sub
outsl
jge
mov
xchg
mov
mov
pushl
pandn
jae
ss
xchg
es
sub
xchg
dec
cmpsl
out
xorb
fs
cltd
inc
daa
sbb
popf
iret
or
imul
in
jp
add
rcrl
xor
push
push
repz
sub
jecxz
pop
adc
inc
jge
mov
lods
dec
and
mov
rcll
data16
arpl
and
mov
outsl
int
jl
ss
jno
fimuls
cmpsb
xlat
push
add
adc
scas
xchg
adc
fsubr
shll
test
jp
cmc
int3
data16
mov
mov
aad
push
mov
cmp
popa
aad
xchg
xor
mov
aam
popf
or
mov
adc
inc
cli
xor
icebp
out
jne
nop
aad
or
push
das
add
jo
jbe
sti
add
mov
pop
xchg
pop
inc
das
jge
mov
imul
cs
and
mov
adc
mov
shrl
lret
xlat
pushf
lds
mov
inc
xchg
outsl
subb
fwait
cmpsl
in
rcrb
lahf
sarl
cwtl
outsl
sbb
push
pop
mov
leave
and
orl
push
push
repnz
jae
test
mov
mov
push
mov
fdivl
stc
xchg
sbb
fisubl
add
push
test
xor
adc
cmp
mov
in
mov
jo
xchg
testb
jecxz
or
out
int3
hlt
test
inc
inc
cltd
in
cmpsb
xchg
int3
pop
xor
sub
dec
std
pop
push
mov
lds
dec
in
jp
cmc
or
sub
push
jb
push
repz
add
aam
dec
xchg
lds
out
lea
das
jo
cmp
lea
adcb
cli
add
clc
xchg
xor
add
push
mov
cli
mov
inc
cmp
adc
mov
dec
leave
mov
mov
shll
adc
nopl
or
xchg
mov
xchg
in
call
sub
fnsave
push
lods
fldl2t
sub
fwait
arpl
and
mov
repz
test
mov
xchg
mov
mov
mov
jecxz
fnsave
aas
std
or
and
cmpsb
dec
shrl
xorb
lahf
lock
rclb
mov
mov
pop
call
pop
cmp
push
scas
fidivs
jno
popf
pop
std
cld
ds
enter
lahf
push
inc
and
mov
or
dec
icebp
insb
out
mov
xor
adc
sub
movsl
lea
cmp
mov
jl
test
lea
fdiv
pusha
mov
pop
pusha
push
adc
pop
or
xor
xorb
push
cltd
mov
mov
ljmp
jnp
mov
cli
sbb
xchg
cmp
pop
jl
in
outsl
push
dec
xchg
aam
sahf
fmuls
push
jb
jge
push
mov
xchg
imul
test
sahf
add
and
jmp
mov
jb
or
cmp
lods
pop
xchg
movsb
and
adcl
mov
aad
pop
cmpsb
pop
es
inc
and
inc
jo
mov
ss
sbb
cmpsl
mov
pushf
pop
insb
inc
decb
mov
test
test
mov
mov
pop
lods
mov
sbb
in
cmc
mov
in
cmp
ljmp
repz
into
out
pushf
jo
pop
lods
inc
addr16
pop
mov
ror
mov
lea
je
and
or
mov
dec
gs
xor
push
out
xchg
dec
xchg
sbb
and
dec
data16
lahf
add
inc
xor
sbb
ret
shrl
fcmovu
pusha
daa
sarb
pop
pop
rol
pusha
notl
loopw
in
xchg
adc
jp
push
fcompl
fmul
je
mov
scas
loope
xchg
cmp
arpl
addr16
shrl
pop
xchg
push
js
movsl
lods
andb
lods
out
or
scas
push
adc
sub
outsb
cmp
outsl
sub
shrl
xor
push
xor
push
out
inc
cwtl
mov
jbe
ficoms
dec
dec
std
aas
dec
orb
inc
cmp
mov
push
stos
inc
aaa
mov
lods
test
outsl
push
icebp
inc
xor
jne
fwait
xchg
cmpsb
enter
sub
lahf
sub
es
push
js
out
cmc
push
fwait
jns
mov
xchg
pop
sub
cmc
insb
orb
mov
je
scas
jle
mov
ljmp
add
or
mov
push
sub
adc
push
mov
inc
popa
fbstp
lods
sbb
cld
lret
xlat
sub
sub
das
push
ss
pusha
push
fidivl
test
andl
fwait
mov
jb
dec
outsb
cmpl
enter
push
sub
add
pop
jle
imul
pop
xchg
ja
jns
push
sarl
push
pop
insl
jecxz
pushf
adc
sbb
jbe
push
cmp
ret
call
imul
add
jecxz
mov
scas
andb
sub
outsl
sbb
mov
xchg
mov
ror
icebp
xor
add
xor
jns
push
and
lea
call
xor
jg
sub
out
push
lock
sub
lcall
adcl
dec
adc
jbe
js
and
push
loopne
xchg
add
in
or
push
mov
mov
bound
mov
mov
mov
jmp
in
imul
pushf
mov
loopne
and
mov
add
cmpsb
lock
sub
pusha
scas
movsl
jno
enter
testb
sub
hlt
ds
stos
outsl
adc
in
rcll
fs
cs
aam
xchg
add
clc
and
mov
mov
jl
lret
adc
lds
lret
in
jno
xor
or
xor
sbb
popfw
cmc
imul
cld
jmp
subl
add
cli
ljmp
sub
xchg
or
jae
int
cli
push
loopne
cwtl
adc
xlat
ss
adc
test
jg
ficompl
sub
sti
sub
pop
int
push
movsl
mov
sbb
xchg
enter
insl
mov
testb
sub
sti
fwait
inc
jmp
psubw
mov
xor
mov
rcr
mov
jmp
ljmp
into
aaa
pop
xchg
dec
scas
xor
inc
inc
lods
scas
mov
les
cmpsb
push
testl
arpl
cmp
add
mov
ficoms
cltd
mov
and
cmp
out
xchg
inc
inc
loopne
cmp
jmp
xchg
mov
shrb
imul
popf
add
inc
das
test
int
data16
and
or
fdivl
add
cmpb
or
mov
aad
cmp
mov
inc
inc
mov
or
xchg
pop
movsl
xchg
subl
std
sbb
xchg
out
cmc
dec
pop
rcr
jbe
jno
cmp
xchg
mov
xor
push
lods
ret
mov
push
movsl
aas
fsub
xchg
cs
mov
mov
lock
call
pop
mov
push
mov
cmp
sub
push
fsubr
xchg
or
push
test
shlb
pop
add
cld
sub
cld
cmp
adc
sbb
and
imulb
xchg
movsb
addr16
out
mov
pop
sub
jg
lea
call
jmp
inc
fldcw
or
xchg
mov
in
roll
sub
mov
and
stos
pop
dec
lret
jno
push
jp
xorb
fisttpll
xchg
imull
imul
pop
or
arpl
insl
mov
loop
loopne
xor
xor
sar
jb
pop
pop
jns
cmp
aad
dec
mov
xchg
mov
test
movsl
sbb
mov
push
adc
mov
sbb
icebp
sbb
arpl
pushf
cmp
jno
loope
aas
pop
shlb
and
mov
dec
lcall
lock
lods
sub
test
jge
cs
sbb
inc
les
adc
fimull
jmp
loope
or
mov
xchg
sub
mov
fwait
sub
push
inc
insl
jg
add
dec
ss
cmpsl
cmpsl
lahf
cmp
subb
pop
mov
outsl
loop
pop
loop
or
add
push
dec
push
test
pop
cs
cmc
mov
add
addr16
leave
mov
aam
jo
fbld
loop
sbb
rol
pop
or
ljmp
add
adc
or
push
dec
shll
mov
push
call
add
mov
mov
jge
xor
sbb
rcrl
shr
sbb
ret
cmpsl
jp
sbbb
mov
icebp
cmp
cmc
push
push
dec
aaa
cmp
jo
or
sbb
dec
ss
xlat
jae
xor
bound
leave
xchg
gs
fcmovnbe
test
leave
ja
sahf
sub
inc
fcom
pop
sub
fcoml
mov
pop
mov
mov
arpl
mov
lods
push
mov
mov
lea
fld
mov
jo
clc
fwait
scas
cmpsb
sarl
mov
fldcw
or
pop
jl
and
fwait
das
mov
test
ret
and
pop
les
in
xor
out
and
adc
mov
popl
loope
cmp
dec
dec
sub
icebp
cmp
cmc
jns
inc
cmpsl
mov
jl
aam
ja
jns
xchg
dec
fwait
adc
inc
mov
jmp
push
stos
imul
out
mov
xchg
jae
mov
out
xchg
sbb
lods
aam
and
iret
jge
sbb
jnp
sub
xor
add
pushf
lea
mov
push
xchg
shll
pop
mov
enter
rorb
push
push
push
mov
cmp
dec
adc
das
addb
aad
clc
sahf
jno
pop
inc
fs
fmul
insb
fdivrs
rorl
sbb
loop
lret
ficoms
xchg
mov
stos
mov
xchg
dec
cmp
and
jecxz
icebp
adc
nop
mov
lds
mov
adcb
add
fsubs
jle
inc
xchg
sbb
add
clc
xor
sub
arpl
adc
adc
ja
adc
and
dec
jecxz
add
or
cmpsb
cmp
test
pop
fsubl
pop
sahf
popf
js
pop
incb
shrl
pop
out
call
cmp
hlt
out
adc
or
shrb
sbb
mov
adc
pop
xchg
push
push
int3
sahf
cli
xchg
shr
mov
frstor
pop
mov
repz
mov
cmpsl
ret
and
out
icebp
pop
sub
iret
cmp
lahf
mov
movsl
cmp
in
sbb
sub
inc
sbb
mov
mov
pop
xor
mov
or
in
push
in
jl
pushf
lds
push
les
cmp
addr16
adc
mov
mov
sbb
sbb
and
pop
decb
pop
insb
fcom
insl
or
cmp
aam
add
rcrb
mov
aad
pop
inc
stos
test
shrl
popf
orb
and
pop
scas
mov
mov
inc
out
push
add
pushf
dec
out
xchg
rcrl
jae
cmpsl
mov
xchg
sbb
push
js
mov
je
sbb
xchg
pop
daa
lret
scas
sbb
or
mov
inc
sub
push
mov
pop
imul
fs
mov
add
add
fldcw
cld
dec
cmp
movsl
pop
push
push
ds
popf
dec
notb
mov
mov
sbb
outsb
dec
xchg
lahf
jbe
sub
push
adc
std
jns
fsubs
or
mov
into
xchg
or
hlt
adc
or
push
in
fimull
es
jg
leave
mov
adcb
ficompl
aad
add
subl
and
push
jae
xchg
cmpsl
ds
add
sub
mov
dec
call
add
adc
andl
fisubs
sub
imul
push
cmp
jne
pop
leave
pusha
dec
lret
out
scas
insb
cmp
ficompl
xchg
nop
mov
repnz
jno
insb
iret
fistl
fwait
pop
stc
jmp
xor
shll
jne
into
xchg
mov
dec
add
orb
lock
inc
mov
stos
nop
imul
mov
sahf
mov
cmpsb
icebp
testl
xchg
mov
or
xchg
sub
pop
inc
stos
jb
mov
cmp
mov
jge
sbb
lea
push
add
xor
lock
and
andl
stos
cmp
cmp
bnd
out
xor
cmp
push
sbb
call
pusha
subb
cmp
push
dec
mov
xor
scas
dec
and
mov
aas
adc
lock
int
imul
add
sarl
imul
pop
pop
lock
push
dec
pop
cmpl
icebp
push
sahf
or
jp
out
aaa
sti
lods
or
shrl
pop
or
fs
xchg
jo
sti
es
push
mov
xor
cs
inc
mov
or
imul
jb
insb
add
sub
je
scas
les
adc
adc
or
data16
sbb
es
call
scas
xor
adc
dec
lret
jmp
subb
mov
rcrb
inc
cwtl
pop
jl
test
jp
mov
jns
inc
mov
mov
lahf
and
cmp
daa
dec
pop
gs
fbld
out
cmp
jecxz
xlat
dec
fiaddl
incb
cs
pop
mov
or
outsl
es
jnp
and
xchg
cmp
in
fwait
daa
xor
mov
mov
stos
and
add
sarb
icebp
mov
mov
out
xor
sbb
cld
inc
push
mov
xchg
push
push
stos
shrl
nop
shll
int3
je
dec
and
insb
test
pop
loope
dec
aaa
jno
testb
mov
mov
sbb
mov
cmpsb
sti
clc
and
inc
add
adc
xchg
gs
mov
sub
cmp
lcall
and
subl
movsl
xchg
cmp
xchg
push
mov
andb
movl
shl
and
cmpl
jg
gs
cwtl
data16
adc
xchg
xchg
adc
mov
mov
jne
cmpsb
lret
lock
out
mov
std
hlt
cwtl
xchg
sub
and
outsb
add
lahf
mov
fldl
inc
fs
mov
jmp
jne
fidivl
or
inc
scas
es
push
fistpl
lods
shlb
testl
and
pop
jl
fistpll
call
fldlg2
sbb
das
jo
mov
iret
sbb
jb
push
jne
jo
test
stos
cli
or
mov
jp
push
pop
dec
dec
xchg
pop
push
movsb
mov
pusha
rcrl
dec
dec
dec
stc
ret
aad
dec
iret
pusha
repz
fs
xor
xchg
xor
adc
ljmp
nop
iret
cmpsb
inc
outsb
sbb
pop
push
nop
sub
jbe
sbb
cmp
cmp
cmp
repnz
rorl
mov
jmp
fnstcw
test
jmp
or
je
and
mov
aad
sbb
adc
gs
fbstp
or
adc
mov
call
jae
sub
cmpsl
sbb
push
adc
pop
xchg
add
cmpsb
xor
dec
and
pop
lods
cmp
ss
dec
cmp
push
add
mov
jns
jecxz
das
pop
or
jne
pop
stos
dec
dec
icebp
lahf
sbb
sbb
cs
inc
mov
incl
inc
xchg
mov
xor
cmpsl
jle
inc
mov
int3
pop
shll
lret
xchg
lret
sbb
jne
lret
into
push
flds
pusha
aad
adc
cs
pop
adc
imulb
mov
and
mov
mov
pop
outsb
mov
lods
mov
sub
imul
shrl
push
mov
xchg
mov
xchg
sub
mov
lods
andl
stc
or
sub
shrl
ljmp
test
add
cli
imul
imul
xchg
jns
add
iret
jp
push
mov
push
mov
pop
loop
xchg
or
pop
mov
push
sub
cmp
fs
lods
into
fildll
sub
sbb
sbb
xor
ret
cltd
sub
inc
mov
outsl
or
mov
pop
or
mov
add
out
movsb
fdivl
jo
dec
mov
push
sahf
cld
inc
adc
lcall
icebp
in
dec
and
pop
out
push
add
xor
pop
mov
pop
xor
or
and
enter
sbb
add
sub
adc
push
jmp
push
popa
scas
sbb
loope
daa
stc
mov
push
mov
nop
add
test
pop
and
jo
pop
push
int
rcrb
push
mov
ss
arpl
jl
je
or
mov
xor
fbld
add
sub
mov
xlat
sub
aam
movzbl
xchg
add
dec
lods
push
lret
jp
js
popa
fldenv
test
mov
pop
xlat
pop
jno
mov
sub
ret
shll
sbb
fld
fnstenv
cmp
jo
jmp
lds
in
adc
mov
and
xchg
mov
mov
mov
sarl
sbb
js
add
stos
xchg
aaa
mov
cld
jle
fmull
xor
ss
lahf
aas
inc
lcall
xor
cmp
dec
jmp
adc
jecxz
ret
sub
inc
lret
cmp
icebp
enter
leave
leave
roll
cli
inc
lods
pop
into
loope
or
outsb
shrb
pop
loopne
push
fldz
rorl
cwtl
test
pop
xor
and
subl
fmuls
sbb
mov
or
bound
xor
pop
sbb
cwtl
mov
dec
popa
mov
add
ja
stc
push
int
out
jo
push
mov
sti
int3
das
or
fbld
mov
or
pop
ficompl
push
je
test
mov
adc
mov
paddusw
stc
inc
fldenv
pop
mov
lods
push
push
xchg
hlt
cmp
rclb
mov
js
and
lods
mov
call
dec
add
xchg
pop
sarl
push
stos
pop
mov
mov
jg
xor
add
lods
add
mov
inc
cli
or
into
xor
or
out
jb
bt
roll
clc
add
inc
inc
fdivrp
inc
xlat
divb
pop
lods
ficomps
mov
jl
rsm
push
pop
mov
subl
xor
jns
loopne
ds
inc
push
int3
dec
xchg
loop
fisttps
mov
mov
divl
mov
jns
lret
scas
mov
je
mov
int
mov
out
sub
enter
test
pop
cmc
mov
xor
fs
inc
fucomp
clc
lods
repnz
dec
frstor
cmpsb
mov
scas
jb
mov
imul
aad
sbb
outsl
sub
adc
and
jb
stos
inc
inc
in
jb
mov
adc
dec
dec
arpl
leave
js
dec
add
xor
sbb
or
pop
cmp
daa
out
faddl
cmpsl
pop
in
in
mov
fstps
adc
subb
int3
insb
or
mov
push
mov
mov
cmpsl
stos
loope
in
push
mov
sub
mov
dec
out
xchg
lret
and
cmp
aad
xor
sbb
movsl
andb
fwait
lds
idivl
adc
aam
loopne
repz
aad
dec
cmp
xor
dec
shlb
sub
push
popf
std
sub
stos
push
and
cmp
arpl
mov
ficoml
or
inc
sti
or
adc
mov
mov
xchg
mov
cmpsb
cmp
mov
fisubs
ret
sub
popa
movd
mov
ss
mov
cmp
pop
or
or
or
pop
les
lcall
pop
cmp
nop
ljmp
addb
jnp
sub
jne
adc
insb
cwtl
jmp
jbe
adc
xor
cs
push
xchg
and
in
lds
jecxz
push
sbb
cltd
mov
mov
iret
and
jns
shrb
lds
adc
push
jp
dec
lret
dec
js
out
inc
adc
repz
or
mov
gs
cmpb
sub
cmc
sbb
dec
cli
notb
sarl
icebp
insb
sbb
xchg
xor
sbb
jmp
xchg
xchg
out
enter
xor
mov
push
ret
outsb
scas
lds
loop
loopew
push
mov
or
add
cs
imul
sub
cmp
std
popa
out
dec
inc
ret
sub
outsl
out
dec
sti
jns
pusha
sbb
cltd
aas
pop
dec
cltd
jne
and
push
cmp
xchg
fildl
add
sub
mov
mov
addr16
mov
jle
or
xchg
fidivl
mov
mov
add
imul
aaa
cli
adc
leave
jb
inc
into
loop
lret
js
jecxz
sub
jns
hlt
adc
push
ror
cmp
jp
mov
stos
inc
scas
psllq
outsb
leave
jmp
divb
test
adc
shr
in
mov
test
push
xor
add
jne
cmp
ja
pop
test
scas
mov
xor
jae
push
cltd
adc
lea
cmc
rclb
mov
add
add
cmc
test
int
stos
mov
and
add
subl
add
mov
mov
push
mov
mov
add
sbb
mov
les
push
fistpl
stos
mov
mov
dec
inc
sbb
push
rorl
mov
push
lock
xor
aam
js
push
jbe
inc
std
xor
sbb
dec
dec
adc
push
lock
push
fwait
lea
cmpsb
sbb
inc
cmp
fcmove
sbb
xlat
cmp
mov
or
test
mov
jo
iret
jbe
adcl
std
jge
xchg
out
pop
sub
rcll
add
cltd
mov
inc
mov
aas
mov
and
jno
jne
addr16
in
lret
jp
pop
xor
and
cmp
out
push
insb
sub
stos
loop
sbb
aam
cs
jg
jge
arpl
stc
xchg
out
adc
scas
push
xchg
xor
mov
mov
stc
pop
mov
dec
jns
nop
push
cmp
adc
fwait
cmpsb
and
xchg
jge
inc
jb
ficoms
out
cmp
mov
dec
push
mov
test
push
in
stos
movhlps
aad
adc
mov
mov
xchg
sub
pop
test
xor
adc
cwtl
stos
adc
ja
lcall
and
inc
cli
xchg
jns
arpl
clc
ficompl
xchg
rclb
sub
dec
fcmove
mov
push
and
mov
mov
insl
add
roll
adc
jb
cmp
sbbb
fwait
xchg
xor
addr16
fwait
mov
loopne
icebp
call
or
fbstp
dec
lock
out
mov
mov
pop
testl
sbb
mov
dec
mov
fcmovnbe
icebp
sti
mov
nop
adc
xchg
rolb
rcll
push
and
dec
out
mov
bound
ret
mov
dec
stos
xchg
inc
pop
aam
repz
add
test
movl
ja
loop
mov
int
mov
addr16
mov
cmp
inc
add
gs
mov
testb
and
roll
mov
cld
inc
add
fsubrl
sbb
and
add
mov
adc
add
jg
fdivrs
mov
mov
dec
lahf
xchg
adc
inc
adc
sbbl
dec
cmp
jp
lahf
pusha
sbb
test
lret
leave
cmpsl
stos
inc
xor
jne
pop
push
int3
jg
mov
xchg
cmpsl
in
add
pop
adc
pop
test
test
mov
pop
fistpll
scas
adc
fcomip
dec
aam
shll
push
cmp
rclb
sub
jno
out
push
out
daa
and
shlb
iret
mov
fld
jge
jecxz
hlt
pop
scas
shrl
fiadds
push
push
jp
mov
test
pop
push
mov
lock
mov
and
push
and
xchg
fisttpll
xor
push
or
xrelease
and
loope
decl
sbb
js
clc
jge
std
sahf
scas
mov
push
jle
pop
les
sbb
mov
jecxz
cmp
push
pop
xchg
mov
jno
mov
jne
cmpsb
jae
in
mov
iret
sbb
scas
test
jp
lods
jmp
or
jae
dec
in
inc
mov
push
mov
sbb
xor
ds
test
dec
mov
test
xchg
lds
adc
jns
bnd
or
insl
push
loope
orl
data16
mov
and
fwait
adc
jle
sbbb
out
inc
cmpsl
dec
into
pop
push
push
sub
mov
test
push
inc
jg
inc
rorb
pop
add
sti
orb
loop
aaa
inc
in
stc
jg
mov
or
jnp
test
rclb
inc
cmc
add
aaa
jmp
je
data16
cmp
mov
push
je
mov
adc
clc
sbb
add
sbb
es
and
inc
push
ja
loop
pop
cli
sub
inc
sar
push
add
xor
sub
cmpsb
dec
xor
pop
gs
out
daa
mov
add
mov
repz
pop
cs
pop
mov
and
outsl
pop
mov
lret
rcrl
jbe
cmc
dec
dec
mov
mov
into
lret
dec
mov
shll
in
push
sub
insl
mov
mov
sub
sbb
and
pop
lods
mov
popf
sbb
push
inc
into
loopne
push
fldenv
dec
lock
dec
mov
jge
fsubrp
xor
insl
clc
add
inc
aam
mov
insb
rorl
lcall
mov
push
add
cmpsb
std
stc
pop
repnz
ljmp
rclb
or
lret
sub
jno
inc
push
push
xor
push
xor
fdivrs
std
inc
enter
and
ror
xor
fsubrp
idivl
mov
push
mov
gs
fcomip
xchg
mov
jl
scas
nop
cltd
mov
fst
mov
xor
or
psadbw
arpl
pop
inc
sub
pusha
mull
or
push
cmp
pop
mov
sbb
mov
cmp
sbb
outsl
daa
mov
dec
pop
in
jo
or
in
clc
enter
mov
adc
inc
leave
and
loop
jg
int
push
movsl
cmp
shll
ds
ret
adc
cltd
jbe
iret
push
mov
jbe
adc
sub
jae
xchg
lret
push
sahf
jo
push
hlt
popl
scas
lcall
mov
std
inc
inc
push
imul
adc
adc
ss
push
shld
sahf
sbb
dec
jmp
add
inc
jge
xor
imul
loop
pop
mov
enter
cmp
or
cltd
filds
popa
xor
popa
fs
loopne
or
clc
es
addr16
adc
jno
cld
sbb
inc
loope
ficoms
mov
cmp
test
cmc
sbb
mov
nop
ds
mov
imul
imul
ror
xlat
add
mov
cmp
mov
sub
out
xchg
sub
or
out
fwait
pushf
arpl
jecxz
adc
shlb
int3
dec
jmp
and
push
mov
nop
jnp
stc
bound
out
arpl
cmp
or
lcall
insb
add
inc
popa
push
dec
and
inc
pushf
jg
sbb
decb
jl
pop
out
sbb
xchg
and
cmp
test
xor
adc
jmp
jno
pop
pinsrw
add
mov
in
hlt
insb
add
push
xor
lret
jp
xor
xchg
dec
ja
in
xor
fdivr
pop
jno
xchg
push
loope
sbb
call
inc
xchg
add
fisubl
and
jnp
push
fnstcw
pop
sbb
mov
push
mov
add
mov
ficomps
push
jne
pusha
xlat
mov
sub
mov
mov
pop
sbb
and
stos
arpl
into
loope
enter
sub
jmp
nop
cmp
sbb
test
adc
fldcw
aas
stc
mov
mov
cwtl
sbb
dec
shufps
push
mov
or
rorl
iret
ljmp
mov
push
lahf
or
xor
mov
in
add
jmp
pop
cmc
cmpsl
push
xchg
jg
adc
stos
or
sbb
lds
jns
jp
insb
mov
push
xlat
jno
sub
scas
push
dec
cltd
or
jo
sub
lods
sub
pop
call
and
aaa
jae
adc
loop
xchg
adc
ret
jecxz
loope,pt
mov
into
lahf
scas
movl
jle
ret
push
ljmp
jg
adc
push
scas
das
cmp
shlb
call
mov
dec
test
xor
cmp
out
lea
xchg
ljmp
mov
out
jle
and
jl
test
mov
enter
inc
movsl
sbb
cltd
nop
dec
cmovg
adc
stos
ficoml
loopne
adc
sahf
cmpsl
xor
fadds
push
lods
push
mov
and
xchg
push
out
inc
lods
mov
fs
scas
dec
dec
cmpb
out
add
popf
mov
adc
mov
jmp
jl
pop
cmp
mov
jbe
or
inc
aas
fwait
std
inc
mov
xchg
mov
shll
mov
adc
testl
lret
push
loopne
add
call
dec
fistpll
int3
sbbb
adc
xchg
cmp
xchg
cmpsl
mov
inc
or
dec
pop
incb
lahf
mov
notl
scas
push
push
sub
rorl
sbb
loop
cmp
sti
jbe
or
pop
cmp
jmp
les
xchg
jge
scas
scas
inc
mov
nop
jge
test
daa
sbb
and
cmpsb
fistps
pop
xor
pop
repz
adc
mov
movsl
cmp
mov
scas
mov
lcall
push
inc
std
xor
lcall
adc
xchg
ds
inc
sub
dec
pusha
test
aam
fs
out
mov
and
enter
inc
loop
cli
or
into
mov
das
pop
xor
jnp
or
ss
xchg
push
fxtract
xor
dec
mov
jle
rcrl
xor
ss
aam
push
call
es
sahf
clc
ja
idivl
test
pusha
testl
inc
push
jmp
js
not
xor
int3
outsl
pop
stos
mov
movsb
cmp
push
out
xchg
push
aaa
notb
add
cmpsb
cs
out
adc
loopne
pop
xchg
loop
xlat
xor
sub
pop
jg
ja
fstpl
mov
ficompl
test
jle
incb
xchg
dec
push
sbb
fwait
int3
fs
stc
cltd
mov
adc
jne
stc
or
mov
fsubs
and
sbb
cs
icebp
enter
jns
nop
push
push
fnstcw
testl
cld
ljmp
inc
jbe
aad
xchg
mov
fwait
jo
gs
mov
scas
shlb
loopne
aaa
stc
xor
cli
xchg
xor
inc
push
push
mov
mov
aam
or
arpl
test
movsl
cmova
jl
imul
sbb
push
sarl
pop
add
mov
pop
xchg
mov
add
rol
cmp
mov
rcl
insl
sbb
es
cmp
xor
lcall
push
lods
pop
fwait
or
inc
js
ljmp
mov
out
outsl
push
sahf
push
inc
in
and
dec
addr16
les
adc
mov
ljmp
lcall
mov
data16
bound
in
pop
mov
loope
cmpsb
inc
testb
movsl
pop
mov
add
sub
fwait
rep
lods
jne
imul
mov
jle
ret
mov
cmp
loope
jae
shlb
push
icebp
enter
push
stc
stos
jmp
shl
mov
dec
les
xor
sti
mov
cmp
push
loop
fisubs
xor
mov
push
fst
rorb
hlt
mov
adc
xchg
sub
hlt
addr16
cltd
leave
push
cwtl
xor
jo
shl
cmp
movsl
lds
ror
scas
mov
and
inc
dec
mov
lahf
and
in
xor
iret
push
insl
sbb
mov
push
mov
enter
andl
rolb
add
cmp
fs
push
jo
push
cmpb
mov
fwait
adc
stos
and
add
push
test
or
test
adc
aad
pop
cmp
sbb
mov
jmp
ss
jg
adc
pushf
dec
mov
push
dec
pop
adcb
jecxz
rcrb
lret
dec
stc
and
out
pop
aam
lds
or
mov
repz
daa
adc
popa
pop
jl
stos
mov
or
add
shll
push
and
mov
push
push
xchg
test
enter
xchg
in
cmp
nop
data16
xchg
lods
inc
xchg
push
mov
mov
or
sbb
jmp
int
test
stc
lcall
sbb
xchg
es
pop
stos
ss
lock
sbb
sbb
and
fbld
addl
scas
int
out
ds
ret
loopne
cmpb
fwait
mov
mov
repnz
lods
ljmp
xchg
and
push
mov
and
sar
ja
outsl
stos
or
xor
stc
dec
ficomps
test
xor
mov
inc
pop
mov
fldl
jae
out
and
pop
lahf
repz
into
jno
add
pop
lods
clc
test
fmull
lret
mov
pop
sub
dec
pop
cmpsl
icebp
pop
mov
sahf
add
and
std
in
push
adc
mov
cmp
pop
xchg
add
data16
jne
mov
hlt
add
mov
mov
dec
adcl
push
add
cmpsl
and
daa
sbb
cmp
leave
iret
pop
dec
std
sub
movl
and
sti
xor
inc
dec
scas
popa
shrl
adc
sub
stos
je
xchg
daa
ljmp
adcl
test
pop
xchg
imul
das
scas
rcll
cmc
jl
pop
mov
mov
sbb
cmp
cwtl
xor
repz
test
sbb
adc
cmp
in
jno
les
xchg
pop
sahf
sti
aaa
mov
jle
cmp
icebp
sub
push
add
pushl
daa
mov
mov
out
movsl
pop
imul
fsubs
dec
imul
adc
dec
in
int
mov
lcall
inc
or
fsubrs
adc
out
sub
push
test
xchg
std
cmpsl
xlat
xor
sbb
mov
lods
inc
stos
scas
cmp
push
inc
aas
jbe
push
popf
add
sahf
std
aam
push
jo
testb
inc
pop
lahf
add
pop
lock
ja
pop
sbb
mov
pop
imul
add
hlt
dec
cmpsl
cmp
into
jb
dec
inc
lret
ss
das
lret
shlb
cmpsl
xchg
ret
mov
adc
pop
divb
lock
jno
cli
stc
aam
in
add
sbb
mov
ret
pop
test
mov
cmp
mov
mov
add
mov
popf
cmp
xlat
mov
sub
stc
aad
sub
lods
add
mov
out
in
sti
jg
ret
jecxz
lret
rcll
sahf
push
les
inc
aad
loop
jno
fscale
dec
test
rep
popa
push
push
mov
std
add
lods
rol
ljmp
mov
dec
sti
add
xor
inc
fs
mov
insl
jge
adc
lods
xor
fdiv
mov
dec
mov
jge
mov
mov
sahf
test
scas
pop
pop
pop
mov
mov
pop
stos
out
push
fucomi
icebp
and
inc
pop
rcrb
shrl
pop
pop
and
mov
jae
into
scas
or
pop
cmp
xchg
aaa
shlb
xchg
mov
out
test
mov
add
dec
pusha
pop
pop
cltd
cmp
inc
stos
clc
pop
loop
cltd
xchg
test
decb
lahf
das
pop
inc
xor
sbb
jecxz
inc
xchg
lea
jbe
or
adc
mov
dec
pop
lret
cmp
mov
rcrb
xchg
pop
xor
notb
leave
std
push
sbb
xchg
rolb
popa
sub
xor
pushf
mov
push
loope
inc
push
pushf
movsb
cmp
inc
mov
data16
rolb
inc
fsubl
mov
pop
call
adcl
add
xchg
in
cmp
mov
cmc
mov
out
test
pusha
inc
pop
xor
push
pop
cmp
inc
or
dec
movnti
dec
dec
imul
or
mov
cwtl
data16
xlat
ds
xrelease
int3
insb
in
sub
aam
sbb
test
jl
cmp
push
mov
icebp
arpl
add
movsl
jbe
stos
inc
and
iret
leave
in
sbbb
into
pop
mov
fisttpl
push
mov
sub
fisubs
mov
xchg
xor
fwait
scas
mov
push
insl
lea
dec
scas
fidivl
jg
dec
es
clc
xchg
jno
cwtl
or
sbb
pushl
fbstp
add
lods
sub
cmp
enter
mov
lahf
push
cmp
arpl
and
cltd
std
and
mov
push
push
call
stc
cmp
repz
fadds
loope
cmp
shlb
jmp
inc
xor
pop
or
push
rep
lds
cmpsl
and
add
xchg
ret
cmp
in
notb
popf
pop
repnz
jge
jo
mov
lea
and
mov
inc
call
or
fisubs
addr16
ficoml
xor
aam
mov
test
fiaddl
lods
int
add
jl
inc
mov
jae
adc
das
inc
cld
jg
mov
or
shrb
lods
cmp
inc
mov
sahf
mov
shr
jl
pop
lret
mov
or
fwait
jle
rorl
data16
jnp
popa
stos
jmp
jp
mov
xchg
mov
xorb
test
jle
es
clc
or
dec
pop
loopne
dec
fnsave
mov
addr16
scas
sub
fwait
hlt
adc
das
inc
pop
hlt
addr16
ljmp
pop
add
addb
out
sbb
out
push
cmp
pop
outsb
loope
inc
fdivrs
or
popl
outsl
push
sbb
fs
es
jecxz
js
jmp
cmpsb
push
push
pushf
rcrb
enter
leave
sti
cmpsl
js
mov
stos
mov
and
xor
mov
ss
ja
arpl
test
dec
enter
xor
out
pop
repnz
and
push
cmp
cmp
xchg
repz
clc
mov
mov
sub
xlat
outsl
fnsetpm(287
arpl
jmp
pop
insb
push
dec
fucomip
push
jno
clc
mov
fistl
fptan
shl
mull
cmpl
or
vmwrite
mov
mov
adc
push
and
xor
mov
push
std
jns
js
xor
pop
xor
pop
mov
sub
pop
add
popa
cli
imul
sti
mov
mov
repz
mov
mov
cltd
adcb
les
push
insl
mov
stc
popf
clc
cmp
dec
std
jo
xor
cmpsb
xchg
aad
add
out
addr16
pop
jecxz
push
push
bound
pop
sbb
fisttpl
inc
add
fwait
push
push
sub
add
xchg
test
cmpsl
in
xchg
leave
leave
xor
lret
pop
jne
aaa
ret
loopne
dec
or
rclb
or
pusha
shll
sub
lcall
and
test
fisubrl
or
mov
out
rorb
push
xchg
jns
cmp
das
loop
lret
fcompl
call
add
dec
scas
inc
jae
jo
jg
push
pop
sub
nop
orl
pop
in
movsb
pop
cmp
ja
adc
push
cmpb
int3
push
lds
pop
mov
jo
lods
mov
xchg
xor
sbb
xor
sub
sbb
push
fwait
xor
mov
test
adc
and
adc
pop
addr16
xorb
enter
sub
mov
xor
andb
in
outsl
enter
add
jbe
test
call
cmpsl
mov
sub
and
in
ret
inc
insl
nop
std
cltd
nop
pop
enter
push
mov
les
pop
outsb
aam
pop
ret
mov
push
adc
repnz
in
movsl
int
adc
and
mov
push
cld
mov
stos
push
out
or
hlt
mov
jne
icebp
sub
jbe
enter
cld
push
or
mov
lret
dec
inc
fiaddl
lods
pop
movsb
loopne
sub
push
xchg
arpl
aas
je
stos
daa
xchg
pop
int3
mov
mov
mov
mov
sub
and
addr16
addr16
or
mov
adc
test
xorb
pop
adc
ret
imul
call
out
hlt
aaa
push
push
cmp
and
sbb
dec
aam
jb
xor
and
mov
mov
lods
dec
fwait
cmpl
andb
xor
mov
out
enter
dec
out
cmp
ret
and
cmpsb
cmp
sub
or
sbb
jne
sub
insb
adc
jg
adc
mov
sbb
test
inc
jno
mov
dec
push
inc
add
movsl
push
ss
xchg
push
cli
adc
push
xor
lret
outsb
add
jbe
adc
mov
jge
jge
push
xchg
or
popf
repz
jae
ds
jle
test
iret
add
adc
or
es
mov
add
jne
ret
subl
imul
fcomps
mov
cmp
movsl
sbb
call
cli
sarl
push
sub
mov
lret
test
lret
or
sbb
cmpsb
imul
ja
inc
rcll
mov
shll
out
cmp
std
add
das
and
enter
mov
cld
loopne
cli
mull
add
loope
sbb
mov
stc
stos
cld
mov
jge
push
mov
or
jg
mov
jl
mov
pushf
scas
lock
jp
cmp
jecxz
or
xor
jbe
adc
inc
cs
mov
xchg
cltd
inc
or
mov
xlat
mov
imul
jns
insb
in
adc
scas
and
and
test
js
ret
inc
xchg
das
add
jns
xchg
sarb
dec
add
jl
push
sub
pop
add
imul
movsl
cs
gs
loope
in
inc
or
push
into
iret
imul
xor
xor
jmp
cmp
pop
repnz
subb
mov
movsl
repz
jo
mov
repz
leave
jecxz
push
enter
call
jg
pop
imul
repnz
mov
in
rcrl
cmp
or
jae
arpl
jo
mov
repnz
adc
popa
lret
fadds
scas
outsl
mov
xchg
pop
mov
add
xor
popf
test
cmp
adc
mov
in
bound
pop
in
cltd
jae
pop
push
lock
dec
movsl
fmull
cwtl
je
jne
imulb
insb
push
cmpsl
push
cli
fwait
repnz
add
jno
fisubrs
lahf
jne
add
js
and
call
mov
cmc
in
dec
rclb
mov
jg
lea
fucomi
pop
subb
xchg
pop
inc
cs
in
add
std
ss
push
push
mov
scas
in
pop
jns
or
outsl
cltd
cmpsl
out
lret
mov
inc
gs
ficompl
adc
cmp
lret
pop
gs
outsb
mov
divb
xor
adcl
inc
jb
in
mov
stos
mov
mov
mov
lret
push
jnp
dec
xchg
out
sbb
ud2
mov
out
and
nop
push
and
jle
les
add
in
pop
lahf
mov
or
xchg
jno
jp
repz
push
adc
negl
sti
mov
movsb
stos
sbb
fs
or
pop
cmp
std
jecxz
clc
decb
push
negl
jmp
push
cltd
das
mov
jl
lods
mov
push
push
inc
fimull
clc
popa
and
test
mov
int3
push
xchg
lret
add
fs
mov
out
sahf
push
inc
push
lds
ss
popa
sbb
xchg
fdivs
repz
inc
mov
std
inc
ja
adcb
inc
jno
adc
ss
push
add
mov
stos
push
mov
scas
sbb
dec
xchg
stos
mov
pop
or
mov
add
or
xchg
sar
cmp
idivl
add
hlt
jns
xlat
ljmp
sti
mov
mov
inc
jecxz
ljmp
add
add
adcl
mov
in
push
repz
popf
roll
jle
in
mov
xchg
cmc
dec
cmc
dec
xchg
cmp
imul
movsb
push
fst
int
or
lahf
inc
add
or
cmp
int3
hlt
out
or
add
insb
cmpsb
and
in
xchg
adc
stos
pop
mov
mov
add
inc
adc
push
mov
std
xchg
adc
push
stc
jbe
call
cli
lea
insl
push
inc
lahf
roll
out
push
cmpsb
mov
mov
add
jnp
jno
jl
sti
daa
inc
sub
sub
cmpsb
insl
arpl
insl
stos
push
int
mov
mov
jo
daa
mov
dec
and
push
fcom
mov
shrb
dec
or
in
out
icebp
and
mov
test
and
push
leave
insl
insb
add
pushf
jp
jecxz
xchg
bound
stos
and
inc
pop
jo
jecxz
mov
jnp
mov
jne
inc
popa
add
mov
subb
pop
sbb
das
lds
sbb
imul
dec
inc
adc
std
inc
push
cmp
push
lods
xchg
dec
dec
add
jecxz
imul
adc
test
enter
ja
es
lea
mov
jo
xlat
cld
jne
mov
or
xchg
mov
add
idivb
scas
pop
jae
sub
lcall
pop
repz
inc
pushf
inc
fisttpll
cmpsb
hlt
fldt
xchg
add
dec
adc
outsb
into
js
and
add
pop
mov
les
push
cwtl
cmp
fs
sub
inc
cltd
jne
cld
xchg
inc
add
pop
xor
xchg
shlb
and
jl
jbe
push
inc
pop
jbe
iret
and
xchg
inc
push
cltd
mov
gs
pop
add
sahf
adcl
adc
shlb
shrb
test
jo
or
jp
xor
cmpsb
in
pop
mov
outsl
subb
int
aad
cld
mov
adc
mov
lds
sub
popa
mov
in
xorb
mov
xchg
jle
pop
dec
push
and
testb
jb
lods
movsb
push
stos
sub
jl
lock
sub
adc
sbb
insl
pop
inc
xchg
cmc
mov
pop
add
xlat
lcall
push
push
mov
addb
adc
les
jns
popf
push
adc
int
dec
lahf
jge
ss
sti
ja
xor
rol
das
rcl
and
fwait
sub
mov
pop
mov
pop
mov
pop
adc
and
addl
popa
pop
dec
loope
ret
int
pop
xor
in
and
roll
testl
mov
rcll
test
xchg
cmpsl
cmp
in
mov
sbb
ret
or
cmp
inc
push
pop
pop
repz
cmc
dec
mov
daa
jp
pop
les
aad
lahf
sahf
mov
cmp
push
ljmp
ja
jae
aaa
sub
call
xor
adc
or
and
mov
into
push
repnz
add
sbb
sub
xchg
xor
xchg
push
sbb
jb
sub
xor
mov
push
pop
and
push
sbb
stos
mov
push
xor
aam
push
repnz
sub
mov
sub
subb
sahf
pop
mov
nop
adc
ds
mov
xchg
sub
adc
mov
scas
call
jg
aaa
push
mov
call
sub
jae
cmpsb
or
xchg
arpl
sbb
or
mov
lahf
icebp
mov
cmpsb
call
imul
mov
jbe
cmpsl
xchg
xor
mov
jge
cwtl
push
dec
pop
xor
addr16
lea
jmp
cmpb
add
mov
lods
cld
cmp
mov
or
nop
js
xlat
rolb
mov
addr16
daa
jl
xchg
scas
push
jecxz
jnp
push
xchg
aas
fildl
les
mov
pop
push
add
cmpsl
add
sar
cld
xchg
repnz
mov
or
inc
and
pop
hlt
sub
sarl
add
xor
repz
aam
pop
mov
mov
push
or
daa
and
cmpsb
jmp
inc
sub
add
mov
cltd
dec
add
aas
lds
test
pop
or
pop
cmp
cld
xchg
insb
test
cmp
mov
popa
and
testl
cwtl
mov
mov
jg
and
daa
outsb
popf
cmpsl
scas
mov
fisubrl
iret
pop
fnsave
insl
ja
outsl
cld
mov
mov
adc
pop
pop
cmp
pop
call
int
dec
fisubrl
loopne
imul
mov
test
xchg
or
cli
scas
sarb
loope
shll
aas
mov
add
xchg
xor
test
add
sti
jne
jno
inc
push
incb
push
rol
out
test
pop
int3
push
lods
std
jge
xchg
lcall
push
insl
icebp
lcall
sti
lods
mov
adc
mov
add
inc
imul
sbb
pop
and
adc
imul
jp
orps
mov
in
xor
mov
or
rcrl
gs
mov
test
into
fcoml
lret
daa
mov
cmc
dec
sahf
pop
pop
notb
xchg
jle
xor
mov
mulb
loop
arpl
shrl
cmpsb
cmc
flds
mov
scas
scas
mov
cmp
int3
pop
out
fcoms
cmp
in
rclb
xchg
mov
fidivrs
mov
ret
cmp
adc
add
cmp
jb
mov
cmpsb
shll
in
aad
in
int
call
cmp
lret
in
dec
loop
icebp
rcrl
fstps
sbb
ror
jmp
push
popf
adc
loop
inc
or
inc
dec
or
mov
dec
andb
or
out
cltd
sub
lret
xor
jbe
out
in
mov
xchg
mov
montmul
cmpsb
inc
jge
pop
pop
cli
mov
cmp
fwait
inc
jl
dec
mov
loope
test
jnp
lods
movsb
or
lds
loopne
pop
adc
faddl
sbb
xlat
sbb
fistl
bound
fidivs
mov
stos
enter
into
sbb
ret
mov
sub
push
loope
imul
pop
xchg
into
push
cld
mov
movsb
xchg
ja
lds
int3
push
jb
test
leave
jmp
xlat
xorb
sbb
mov
rclb
fisubrl
enter
mov
push
mov
call
scas
adc
das
and
fstpt
cld
push
daa
or
sub
ret
dec
and
sub
mov
ret
fistpll
jb
out
sub
rolb
pop
and
test
pop
cmp
cmp
and
aam
xor
and
sub
cli
data16
mov
popa
negb
xor
shl
xchg
and
add
pop
mov
xchg
mov
add
sbb
stos
imul
jmp
mov
in
cmp
xor
cmp
out
fcmovnb
pop
or
ror
je
in
mov
add
fldcw
test
stos
add
push
cli
movsl
cmp
jne
and
push
movsl
cmp
lret
and
jmp
test
ret
ret
pop
push
mov
mov
cwtl
push
jne
repz
sub
mov
test
es
push
mov
xor
std
mov
imul
dec
lds
dec
jno
sti
xor
shll
mov
out
xor
pop
xchg
je,pt
rcrl
outsb
jae
stos
or
loopne
mov
and
lahf
popa
testl
mov
push
outsl
jge
pop
lock
popf
ret
adc
lcall
cwtl
xor
cmp
stos
fdivl
mov
xchg
in
push
mov
sub
add
xor
popf
inc
inc
push
mov
jmp
mov
test
jp
add
mov
loopne
push
adc
mov
push
jmp
mov
mov
push
pop
add
adc
mov
sub
cltd
adc
cwtl
sbb
pop
jmp
mov
dec
or
adc
stos
jbe
cli
pop
ret
fxch
sbb
lret
mov
leave
hlt
fwait
xchg
and
fxch
into
add
stc
dec
loop
mov
dec
adc
xchg
push
lock
mov
ja
jge
adc
pop
cltd
mov
push
cwtl
mov
es
mov
lret
push
or
mov
aaa
into
sbb
and
dec
lock
and
push
or
sbb
lcall
mull
or
mov
push
xor
jl
dec
pop
ljmp
add
cmp
in
jp
sub
insl
sub
lods
rcl
or
dec
mov
fucom
xchg
adc
add
xchg
clc
std
cltd
aaa
inc
xor
jno
pop
inc
jae
push
lcall
cwtl
out
iret
outsl
test
pop
xor
pushl
and
les
lret
cld
mov
push
push
pop
scas
out
jns
subb
mov
addb
jb
add
push
aam
sub
pop
dec
and
push
insl
sbb
pop
shrb
mov
xchg
cmp
insb
and
push
cmp
add
lret
pop
lahf
cmp
fisubl
mov
andl
cmpb
cmp
lods
or
clc
popf
push
xor
jae
daa
or
push
hlt
int
lea
cmp
inc
mov
cs
lcall
in
fwait
cli
shll
lock
outsl
xor
mov
sahf
xor
adcl
inc
ljmp
mov
pop
out
bound
pop
iret
and
sub
xchg
stc
lahf
and
mov
jmp
stos
sahf
jae
ror
push
jge
jl
mov
add
fsubrs
jle
js
dec
fidivl
pop
add
jns
dec
sub
push
inc
push
xor
add
sbb
cltd
inc
jae
icebp
mov
adc
mov
testl
jl
mov
fbld
cwtl
mov
pop
jecxz
xchg
leave
pop
and
out
mov
testl
gs
rorb
jbe
sub
negl
push
insl
mov
cld
xchg
or
das
lahf
daa
lret
testl
lret
push
std
ret
int3
cli
mov
push
ja
mov
icebp
call
or
add
sub
adc
push
shll
mov
push
xchg
xor
out
fmull
pop
out
jne
cld
lcall
push
mov
and
rcll
in
dec
pop
out
dec
cmpsl
or
xor
addr16
cmp
lahf
mov
sbb
ss
movsb
ret
sbb
lea
movsl
push
out
add
stos
inc
or
xchg
mov
test
test
pushf
pop
pop
pop
psadbw
add
into
pop
push
rcl
gs
add
and
adc
mov
mov
mov
loop
pop
lock
mov
ja
ljmp
mov
sbb
shl
push
andb
sub
cmpl
xor
ret
es
pop
pusha
push
and
and
xchg
xor
inc
stc
negl
push
mov
mov
test
ja
cmp
adc
dec
mov
into
mov
push
shr
or
test
pusha
cli
xchg
out
mov
out
imul
jo
or
fmull
call
xor
xchg
sub
and
sbb
xor
xor
fildll
pop
mov
cmp
adc
cltd
lods
stos
aas
ja
jnp
ja
adc
in
aam
mov
nop
jb
ret
sbb
mov
les
inc
insb
test
mov
push
addr16
adc
push
out
lds
out
lahf
int3
push
dec
pop
mov
es
jb
ljmp
stos
pop
sahf
fsubrl
add
outsb
test
sub
cmp
mov
rcrl
aad
sbb
xor
movsl
rcrl
jns
mov
cmp
cmp
das
push
push
push
dec
data16
sbb
fsubrs
cmp
push
shll
xor
mov
lods
lock
jle
inc
mov
pause
loope
ret
movsb
push
pop
iret
jp
sub
aas
cmp
cmpsb
andl
jb
ja
cld
inc
fcoml
outsl
in
mov
insb
mov
clc
cmpsb
adc
gs
jo
or
fwait
mov
push
int3
out
addr16
pop
gs
inc
mov
add
sbb
xorb
adc
setge
pop
aam
ja
jle
jmp
cmova
mov
fdiv
movsb
push
cmpl
je
loop
xchg
sbb
jne
lock
mov
por
in
jnp
mov
adc
cwtl
iret
sub
ja
lret
mov
jmp
sar
aad
inc
lock
xchg
cs
ss
cli
shrb
jbe
shrb
cwtl
daa
mov
test
inc
fildl
and
adc
arpl
sbb
aas
movsb
cmp
hlt
int3
xchg
inc
fsubs
xor
loop
adc
test
and
and
xchg
cmp
cmpsl
inc
mov
cs
mov
mov
cmpsl
scas
dec
sbb
ficomps
mov
jmp
dec
incb
sahf
das
pop
pop
sbb
jl
mov
aas
cs
test
mov
pop
dec
and
jge
push
jg
das
inc
cmp
movsb
dec
in
adc
outsl
sub
sbb
sbb
adc
cs
xchg
jp
bound
mov
lcall
stc
adc
sarl
fdivrl
sub
dec
add
inc
jo
xor
jo
loop
clc
ds
rolb
sub
orl
shrl
sbb
nop
pop
cwtl
pop
mov
out
jne
orl
pushf
fnstenv
dec
inc
loope,pt
in
lods
dec
frstor
xchg
jb
shl
icebp
daa
fidivrl
or
mov
xchg
sub
pop
mov
out
push
pusha
aas
jno
sub
es
sbb
sub
mov
dec
cmp
pusha
leave
pusha
xchg
jne
lock
mov
mov
inc
xchg
rclb
xorl
adcl
outsb
sub
pop
add
out
push
push
inc
mov
int
cmpl
cwtl
outsl
movsb
mov
inc
jbe
push
out
sub
dec
lods
loopne
test
mov
push
fldt
adcl
fidivs
lods
jnp
insl
fistpll
sub
jno
into
hlt
cmp
mov
addr16
cmp
mov
cmp
cli
test
mov
es
xor
push
pop
push
aam
add
xor
fmull
fs
clc
nop
mov
fcoml
lret
fs
popa
mov
les
fcoms
xchg
in
gs
cmp
xchg
outsb
sbb
stos
adc
dec
call
aam
dec
adc
or
jns
ror
fisubrl
lcall
pop
cmp
mov
jns
jecxz
mov
in
outsb
dec
in
out
test
add
sbb
lea
iret
outsb
mov
xchg
daa
cmp
shrl
inc
loop
add
add
sbb
sub
std
mov
jle
imul
sbb
dec
cli
jle
push
ret
fwait
xor
xchg
adc
inc
aaa
loop
jae
inc
insl
or
cmp
call
xacquire
xchg
insl
xchg
repz
insb
fildl
fstl
nop
dec
or
xlat
lahf
stos
leave
push
jp
shrl
pusha
sarb
inc
lods
lods
in
notb
ret
fildl
cld
or
fmul
sbb
ds
sub
pop
adc
rolb
fidivrl
xchg
in
pusha
cltd
popa
cmp
test
lock
pop
icebp
adc
jns
jb
sbb
pop
loope
jae
aaa
loopne
and
cmp
sti
dec
push
lods
lahf
mov
jge
lods
pop
mov
shl
cmpsl
pop
out
or
arpl
cmpsl
mov
fsts
or
je
sarl
out
cmpsb
push
ljmp
and
fimull
lods
lahf
push
or
ret
ret
ss
pop
push
or
loop
test
jg
out
xchg
add
xchg
mov
sahf
mov
adc
enter
fiaddl
ret
and
mov
sbb
jno
or
js
call
jp
push
or
mov
xor
xchg
cmp
leave
mov
repnz
inc
in
and
je
cmpl
push
jne
stc
test
cld
inc
xchg
sbb
pop
adc
int
sbb
lahf
xor
stos
mov
mov
xchg
cli
lahf
test
sti
sub
add
jg
push
test
aaa
dec
test
idivb
ja
mov
xor
dec
pusha
lcall
scas
leave
mov
dec
testb
fimull
dec
mov
aas
inc
adc
mov
dec
xor
loopne
xor
test
test
and
mov
iret
or
add
add
adc
mov
and
jecxz
push
imul
sub
in
test
je
ret
mov
adc
insl
shll
outsl
jnp
scas
add
sbbb
clc
cld
mov
mov
repz
lods
inc
clc
mov
mov
adc
inc
mov
fcoml
sbb
jp
test
adcl
leave
fldenv
out
sahf
popa
xchg
sub
enter
lret
dec
and
inc
gs
push
mov
cmp
movsl
call
mov
iret
cmc
fcompl
in
push
adc
lcall
push
test
sysret
xorb
pop
mov
mov
mov
dec
outsl
xlat
shl
adc
into
cld
jecxz
xor
jo
test
int
stos
pop
in
sahf
push
jo
pushf
repz
mov
add
push
sahf
mov
sub
mov
xor
xlat
call
xchg
rcrb
scas
sub
xor
scas
dec
pop
xor
jle
repnz
lahf
mov
ret
loop
fadds
or
push
hlt
mov
xchg
jmp
aam
jecxz
pop
jbe
inc
pop
cltd
jnp
clc
ret
gs
xor
mov
fnsave
push
loope
rorw
popf
dec
xor
mov
pop
push
mov
fists
xor
adc
ljmp
rcrb
in
cmc
xchg
ljmp
xchg
ja
or
mov
pop
xchg
add
push
jbe
stos
xchg
cmc
int3
xor
push
icebp
push
inc
fdivrs
sbb
jbe
xor
cli
xchg
test
nop
test
cld
mov
mov
data16
cwtl
dec
lds
mov
dec
mov
in
cmp
data16
push
mov
mov
cmpsb
inc
scas
sbb
lret
js
jno
loope
mov
aad
mov
inc
mov
loope
aam
adc
mov
sti
outsb
mov
mov
cmp
ret
clc
dec
cmp
sahf
dec
addb
loop
fsub
mov
lock
rorl
push
scas
outsb
fwait
repnz
int3
sbbl
lds
seto
sub
mov
stos
dec
cmp
aaa
push
in
loop
popa
lods
ss
repz
sub
dec
repz
je
std
pop
imul
outsb
notb
mov
and
or
mov
ja
dec
mov
inc
add
enter
dec
mov
cmpsb
jo
hlt
ss
addl
xchg
data16
cmpsl
push
xor
lods
test
test
adc
xor
pop
stos
xchg
js
pop
mov
cs
nop
xor
pop
and
cmp
mov
dec
loopne
mov
cmp
movl
adc
ficoml
jg
push
push
test
dec
lahf
ss
xchg
jae
inc
enter
stos
push
adcl
je
or
pop
ljmp
daa
jecxz
adc
xchg
mov
dec
mov
fld1
push
popa
leave
aaa
into
fnstcw
xchg
add
dec
inc
dec
mov
pop
jb
inc
xchg
repnz
lret
hlt
pop
pminub
and
mov
shll
jae
inc
jb
jae
imul
jne
jge,pn
clc
add
hlt
sub
popa
subl
dec
fistl
movsb
stos
jne
or
inc
mov
sbb
cmpsl
in
adc
rolb
xor
mov
ss
xchg
add
push
xchg
xchg
dec
add
ja
xor
inc
cmp
dec
movsl
pop
std
mov
loopne
jmp
mov
lock
jle
fcomps
jle
inc
clc
push
add
or
fldcw
pop
push
push
cmp
push
into
sbb
and
jo
addr16
adc
stc
and
shrl
xorl
stc
ds
shrl
ljmp
xor
cmc
mov
cmpsl
mov
push
fistpll
pop
pop
adc
inc
jge
lcall
in
dec
cmp
jb
fistpl
or
inc
and
loopne
iret
es
cmpl
add
sub
push
lods
mov
jp
sub
or
out
test
add
push
fnsave
int
cmp
mov
and
adc
adc
das
mov
icebp
add
imul
xchg
pop
shrb
out
pop
xchg
push
pop
ljmp
pop
outsl
mov
rolb
xlat
mov
mov
daa
cmp
movsb
imul
dec
push
inc
adc
movsb
gs
or
call
lret
mov
lods
in
cmpsb
xchg
sub
icebp
test
stos
les
xchg
push
call
cmp
push
cmpsb
movsl
push
mov
adc
jbe
fmuls
test
shrl
ja
mov
cld
call
inc
sbb
movsb
adc
push
cmp
scas
dec
fistl
pop
xchg
push
data16
pusha
push
xchg
sbb
sahf
cld
xchg
ljmp
add
add
addb
or
mov
dec
inc
test
or
lods
sti
or
xchg
cmp
fidivs
and
and
xor
loope
addr16
jmp
push
mov
mov
loopne
push
push
jae
lds
fcompp
mov
loope
dec
mov
imul
pop
add
jmp
test
xchg
xor
jecxz
cmpsb
mov
pop
insl
fidivrs
add
mov
or
rorl
mov
dec
jb
scas
mov
clc
sti
lret
xchg
mov
add
push
mov
ja
and
inc
xchg
dec
fs
jmp
jecxz
dec
mov
ret
ret
push
fwait
pop
pop
xchg
mov
cmp
push
push
repnz
add
das
jno
stc
jecxz
testb
dec
add
inc
pop
popw
jle
jb
dec
in
sar
push
outsl
adc
add
pop
lods
fnstenv
lcall
jl
fst
les
xlat
mov
mov
loope
sar
ja
xor
mov
sahf
popa
sub
dec
or
mov
mov
dec
pop
inc
cwtl
into
mov
inc
pop
push
push
in
mov
push
jp
adc
jp
pop
ljmp
test
testl
push
mov
cwtl
or
pop
mov
dec
loopne
ret
aas
mov
dec
movsl
cmc
mov
sub
add
in
nop
pop
cmp
in
jns
divb
int
mov
add
aaa
loopne
loope
push
mov
dec
mov
repnz
add
cmp
jp
mov
movsb
jecxz
sti
rol
xor
pop
scas
push
pop
cltd
je
ret
xor
jns
in
inc
inc
push
sub
mov
sti
ja
jecxz
xchg
sbb
dec
and
and
and
add
test
sbb
and
or
lods
sbb
dec
shlb
mov
lahf
test
lock
ja
repz
cli
mov
pushl
insl
xor
pushf
jb
test
xor
sti
ja
in
xchg
outsb
notrack
xchg
js
pop
hlt
push
push
dec
cltd
jnp
mov
insb
pop
outsb
sbb
mov
inc
mov
inc
xor
rorl
jnp
sahf
lods
or
jl
into
std
jge
addb
mov
inc
test
mov
stos
icebp
sub
test
aam
jecxz
int3
cmpsb
cmp
sbb
dec
loopne
test
cmpsb
and
fildll
loopne
dec
xor
add
jge
or
inc
xchg
adc
mov
cltd
cld
nop
test
shl
xor
cmp
stc
pushf
mov
mov
pop
mov
ret
outsl
stos
mov
jns
cmpsb
mov
and
lods
andb
inc
lea
repz
bound
aam
push
repnz
rcr
icebp
out
mov
mov
icebp
out
les
cmp
adcl
sub
fcoms
mov
sub
inc
mov
icebp
fimull
xchg
pop
mov
inc
or
mov
cmp
mov
push
das
int
outsb
sub
scas
dec
cmpsl
cltd
mov
mov
je
arpl
push
out
cmpsl
mov
pop
imul
add
scas
cmp
sub
jge
hlt
adc
inc
pop
mov
mov
dec
sbb
mov
cmp
pop
in
sub
lret
sbb
xchg
push
les
testl
jbe
push
inc
data16
adc
cwtl
cmp
cmp
addr16
cld
xor
ret
adc
pusha
lods
cwtl
xor
mov
jns
popa
orl
mov
rcll
xchg
dec
xor
jnp
data16
out
push
nopl
outsb
mov
popa
loop
xchg
xchg
xor
mov
add
jge
xor
pop
push
insl
push
mov
jle
dec
incl
cmpsl
jbe
sub
and
fbstp
inc
cs
mov
bound
popf
xchg
jmp
sti
sbb
mov
push
movb
lds
shlb
mov
nop
out
imul
pop
push
fnstsw
lret
loop
in
add
arpl
inc
mov
pop
cltd
sub
xchg
daa
scas
ds
xorb
cmp
dec
cmp
sub
pop
mov
addr16
mov
adc
jne
into
aaa
lods
ljmp
es
pop
pushf
or
adcl
scas
lahf
xor
add
lcall
dec
scas
aas
push
inc
sbb
dec
fdivl
pop
jecxz
push
and
into
jge
xor
aas
mov
push
outsl
loope
xor
cmp
add
and
fsubl
ss
sub
sub
jnp
loop
cs
sbb
dec
scas
scas
in
xchg
gs
cmp
push
jnp
pop
icebp
cmpsb
pushf
int
inc
pop
loope
int3
xor
outsb
push
mov
scas
add
jmp
clc
push
xchg
loope
arpl
push
mov
int3
out
movsb
push
jge
sbb
sub
enter
cmp
jle
hlt
addr16
or
mov
in
dec
xchg
hlt
xchg
sub
fists
scas
addb
imul
cmc
pop
loopne
int
or
es
cltd
je
jle
adc
jno
pop
outsb
sbb
mov
imul
inc
lahf
or
addr16
sbb
xlat
dec
loopne
dec
repnz
inc
and
push
cwtl
das
and
push
push
arpl
call
aaa
xor
xchg
dec
mov
aad
fildl
test
fisubl
cltd
adc
add
adc
xchg
sub
sbb
or
stos
mov
jge
jge
mov
rorb
movsb
jmp
mov
outsl
pop
cmp
mov
sbb
dec
pushf
adc
inc
std
mov
mov
mov
add
mov
arpl
les
pop
xchg
and
repnz
xchg
xor
test
mov
push
mov
adc
scas
inc
sbb
out
and
ss
stos
out
pusha
or
xor
add
sub
mov
fdivs
xchg
fnsave
pop
outsl
cmp
gs
nop
mov
decb
test
jmp
cmp
pop
push
and
push
inc
sub
outsb
fbstp
popl
dec
dec
add
ja
popa
sbb
sbb
mov
mov
pop
push
mov
in
ljmp
cmpsb
fnsave
mov
repz
imul
mov
leave
mov
notb
cmp
outsl
dec
dec
mov
cld
rclb
fisubrl
add
fldl
call
pop
aam
inc
movb
lock
cs
xor
mov
push
inc
xchg
insl
nop
push
lahf
neg
inc
imul
xchg
aaa
push
push
xchg
icebp
mov
fbstp
scas
add
es
jae
pop
xchg
call
push
sub
xor
out
jb
cmc
dec
out
lahf
or
ret
arpl
popf
pop
stc
mov
and
fimuls
mov
insb
or
sbb
push
popa
adc
jge
imul
jp
mov
mov
pop
xchg
cs
cli
gs
push
mov
mov
sbb
addr16
xor
and
shl
jle
adc
mov
je
loop
subb
push
stc
push
xlat
fsub
push
pop
add
inc
mov
scas
push
jmp
or
outsb
popa
cwtl
and
lret
pop
mov
fiadds
bound
pop
stc
das
or
sti
test
insb
mov
iret
dec
push
int3
push
jne
inc
fnstcw
adc
xor
pusha
and
push
sub
faddp
mov
mov
adc
ss
xor
ljmp
cli
outsl
stos
subb
or
call
mov
fisubs
lret
add
pop
stc
andb
push
subb
cmp
fisttpl
or
pop
pushf
and
adc
clc
dec
jge
mov
push
add
mov
movd
cmp
int3
cmc
mov
sarl
mov
mov
fistpl
jl
cmpl
fiaddl
push
pop
test
add
inc
add
fdivrl
sub
mov
pop
sub
dec
inc
mov
cmpsb
mov
cltd
cs
xchg
out
popa
ret
es
mov
push
push
fs
nop
mov
mov
imul
mov
adc
inc
into
or
outsl
loope
pop
aam
and
sub
insl
xchg
dec
dec
cltd
mov
xchg
and
pop
addl
add
mov
cmp
orl
loop
testl
test
push
sub
mov
jae
mov
lds
or
cmpsb
test
xchg
shr
and
jne
inc
jno
adc
andb
cmp
sub
or
add
xlat
adc
jecxz
ja
movsl
xor
fstpl
sti
xor
push
push
mov
mov
call
lret
push
fwait
aaa
pop
ljmp
shl
lret
sar
popl
mov
add
dec
stos
dec
fcoms
sarl
mov
cwtl
dec
ret
pop
data16
test
jge
or
mov
aad
cmp
daa
mov
mov
cmpsb
mov
subb
push
adc
push
andb
test
cmp
jmp
int
ret
mov
sbb
in
mov
xlat
outsl
xor
ds
fs
aam
pushf
push
adc
push
cli
jle
fstpt
cmp
leave
test
les
int
pop
push
loop
movsb
leave
mov
rcrb
cli
push
stos
ja
cmp
adc
sar
pusha
ss
dec
push
div
in
mov
xchg
mov
fadds
mov
push
mov
hlt
test
daa
int
push
fdivl
insl
lcall
sbb
or
mov
aas
int
rcrl
es
jp
int
test
sub
mov
rcr
add
pop
jne
imul
fwait
adc
les
jle
out
dec
cmp
mov
orl
jl
fisubl
nop
dec
pop
repnz
test
test
sbb
ja
pop
mov
test
mov
fucomip
lret
lret
mov
pop
adc
incb
add
sahf
out
cmp
push
fcomps
lods
scas
or
stos
mov
mov
mov
je
ds
push
stos
das
jns
xor
jecxz
insl
add
dec
test
icebp
mov
mov
pushf
dec
frstor
stos
test
mov
cmpsb
sahf
notl
cli
jp
jg
xor
sub
mov
loopne
push
add
mov
addr16
push
jl
mov
jmp
mov
es
test
cmpl
dec
fstpl
add
in
ds
stos
in
rorb
nop
scas
subb
iret
inc
stos
or
mov
mov
xor
cmpsl
mov
sbb
dec
imul
xlat
int3
test
mov
adc
lret
ljmp
mov
pop
loop
mov
push
jo
jmp
dec
or
cmp
loop
stos
mov
jge
dec
jmp
rcrl
dec
in
addr16
fsubrs
cmp
xchg
add
pop
loop
fwait
add
inc
data16
mov
jns
push
xor
pop
mov
pop
sbb
fisttps
jbe
cmp
lret
jp
dec
sti
test
jmp
jg
jo
jp
jmp
mov
sub
hlt
dec
or
sarb
mov
cld
in
es
sbbl
fsub
jge
fmul
push
push
pop
add
xlat
lcall
jb
sti
mov
nop
sarb
stc
stos
orb
mov
xor
les
outsb
sarl
cmp
test
inc
mov
push
and
fimull
inc
cli
sub
ret
sti
xor
call
test
repnz
jmp
mov
jle
das
mov
mov
or
jb
lcall
lods
mov
pop
mov
jle
xor
or
loop
sbb
sub
push
sbb
or
popf
mov
push
dec
fists
aad
xor
inc
pop
push
movsl
mov
rcl
cmp
mov
iret
test
jge
divb
xlat
cmp
mov
fistps
ja
adc
cmpsl
ret
lret
xchg
xchg
xor
cmp
lahf
adc
mov
mov
mov
cmpl
daa
push
add
or
stc
roll
jge
push
ja
loope
lea
lock
std
xlat
cmp
xlat
cmp
fsub
dec
add
lfs
faddl
mov
sub
push
movsl
js
sarl
jecxz
and
sti
dec
and
and
jl
xchg
in
add
mov
mov
in
pop
addr16
out
imul
mov
jmp
push
testb
repz
and
cmpsl
add
sbb
ffree
test
insl
add
aad
into
es
push
cmp
dec
int
sub
scas
mov
sub
lea
pop
fmul
pushf
imul
push
cmpsb
dec
ret
call
add
mov
xor
frstor
xchg
arpl
sbb
fisubrl
ret
sbb
xor
faddl
lret
out
cmp
and
sub
mov
mov
aad
push
push
bound
mov
mov
stos
mov
mov
sub
loope
insl
lcall
add
jnp
push
mov
shl
mov
mov
push
bound
sub
ljmp
push
fadds
xor
mov
in
xor
dec
jmp
dec
out
ljmp
mov
add
fadd
push
sub
fisubrl
jns
push
mov
mov
lds
clc
xor
xor
or
pop
rol
pop
mov
lea
sub
js
cmpsl
ret
or
sbb
icebp
and
fisttps
rorb
scas
sbb
mov
notb
adc
subb
test
xlat
repnz
pop
dec
inc
hlt
push
movsl
scas
push
xor
imul
lcall
aad
mov
mov
cmp
lret
aaa
rclb
mov
scas
sbb
fldl2t
fstps
mov
xchg
ret
inc
cmp
ja
jle
out
push
jo
xor
adc
mov
pop
decb
cmpb
xchg
cmp
popf
add
mov
xchg
xor
shrb
jnp
cwtl
inc
call
test
or
xchg
pop
inc
jg
pop
mov
call
or
lods
push
xchg
orl
lret
cmc
adc
xchg
inc
in
js
test
outsb
ret
pop
lods
ds
daa
add
out
adc
push
and
clc
fs
jbe
lods
push
insl
pop
xchg
adc
inc
cmp
push
cmp
rolb
fisttpl
movl
aad
push
dec
loope
mov
stc
ja
inc
stos
adc
xchg
pop
mov
les
iret
lret
fwait
shl
ret
fisttps
jmp
inc
ss
hlt
mov
sarl
adc
cmp
push
or
in
sbb
ret
pop
movsl
push
in
stc
dec
cmpsb
jns
loopne
mov
sbb
imul
in
subl
frstor
aad
jae
add
mov
jnp
add
or
xchg
loopne
mov
stc
inc
sbb
inc
mov
mov
or
xor
mov
loop
in
lahf
jmp
cmp
or
and
nop
aas
scas
add
mov
std
ljmp
mov
subb
mov
insl
fstpl
xchg
mov
inc
sub
sbb
icebp
in
sbb
mov
call
inc
mov
xchg
mov
in
mov
push
adc
je
mov
insb
and
xchg
ja
je
aas
inc
xlat
or
bound
sub
pop
or
rcll
mov
movsb
adc
nop
add
push
push
cld
test
adc
rolb
xchg
cmpsl
cli
cmp
inc
sub
cmp
mov
sbb
aad
jne
in
cmpsb
out
or
movsb
inc
repnz
inc
jle
jns
jp
push
lahf
inc
mov
inc
mov
into
or
movsl
mov
lods
add
test
jb
lods
cwtl
es
repnz
push
test
in
fnstenv
je
inc
pop
sub
adc
push
mov
fcompl
mov
ss
sub
fsubrl
clc
pop
jg
popf
lods
jp
divl
jg
and
lock
cld
dec
mov
lock
lret
push
jno
pop
inc
outsl
jle
data16
mov
add
js
arpl
fscale
mov
cli
push
jb
aas
mov
ret
stos
pop
mov
pop
or
lahf
push
test
cmpsb
gs
add
pop
xlat
lret
adc
scas
jae
pop
fwait
jmp
mov
insb
jae
aad
scas
inc
cmp
bound
ja
inc
fnstsw
fdivp
mov
test
or
xor
or
jnp
cwtl
out
cmpsb
lods
and
inc
and
aam
xor
test
ret
shrl
int3
mov
lcall
sbb
hlt
pop
ret
or
xor
nop
idivb
mov
in
sbb
aaa
sahf
les
adc
sbb
pushf
pushf
xchg
int3
mov
in
push
cltd
xor
jbe
fadds
mov
and
test
inc
xchg
call
sub
and
lahf
mov
sahf
sbb
mov
int3
movsl
mov
mov
sbb
and
sti
es
lret
mov
rcl
adc
inc
dec
ret
aad
call
leave
add
xlat
aam
outsb
shll
daa
inc
sbb
mov
add
enter
mov
pop
outsb
mov
mov
imul
aam
cmp
imul
popf
mov
add
and
xchg
test
cwtl
aas
inc
jp
push
mov
inc
inc
and
scas
enter
push
xor
and
std
mov
je
jno
xchg
mov
lods
arpl
outsl
dec
inc
loope
or
and
test
stos
subl
add
dec
mov
mov
xchg
jge
fcomps
sti
dec
sbb
dec
sbb
fnstcw
arpl
jb
setno
das
fnsave
scas
push
dec
test
xchg
insl
testl
inc
and
mov
adc
or
sbb
inc
inc
or
pop
out
int3
sub
pop
xor
cs
jbe
sub
sub
adc
test
in
repz
call
xchg
sbb
xchg
fwait
fs
mov
and
aad
push
ret
inc
clc
inc
inc
mov
cmp
ficoms
dec
jl
xor
fisubs
pop
repnz
mov
mov
jno
enter
push
xchg
inc
mov
scas
ret
je
mov
in
andb
push
xchg
in
aaa
dec
cmp
push
icebp
pusha
xor
push
add
sbb
mov
push
fnstcw
mov
push
push
xor
loope
outsl
std
je
xor
xchg
lret
xchg
outsl
aaa
testb
ja
movsb
jle
mov
jb
mov
fcoml
jp
jb
popf
mov
mov
cld
sub
jb
or
cli
mov
fnsave
lods
gs
ret
hlt
fldcw
ret
or
call
outsb
xlat
cmp
sbb
inc
in
jbe
pop
cmp
push
jle
in
arpl
test
jge
sub
jle
mov
sti
pop
mov
testl
mov
push
sbb
pop
jno
xor
mov
push
ds
fdivrs
arpl
faddl
stc
mov
push
mulb
ss
popa
xor
mov
push
jp
xchg
jp
iret
fiadds
adc
in
mov
pop
addr16
pop
outsb
push
fistps
push
lret
push
popf
jno
sbb
xchg
cs
hlt
fdivl
pop
test
test
psrlq
addr16
imul
and
mov
rorb
sbb
fdivrl
js
add
mov
jmp
test
push
imul
pop
mov
jmp
pop
push
out
les
mov
sbb
das
das
fsts
fcomp
inc
push
stos
test
lahf
test
std
pop
lcall
lcall
push
mov
sarb
and
mov
fadds
pop
inc
rolb
xor
sbbl
push
sbb
adc
pop
outsb
sahf
inc
mov
mov
jmp
mov
push
mov
in
test
mov
in
inc
lods
addb
jg
mov
adc
loopne
test
sbbl
adc
sub
mov
popf
sub
fnstsw
or
jns
inc
cmpsb
lea
stc
fdivrp
je
mov
sbb
dec
aas
loope
out
scas
adc
xchg
repz
and
inc
push
lock
lret
leave
ja
xor
inc
and
xchg
ret
jle
out
push
dec
jg
out
andl
lea
out
movsl
icebp
ljmp
push
call
or
lods
inc
fnstcw
lods
movsl
or
cwtl
mov
or
insl
and
and
jnp
sbb
imul
imul
out
xchg
or
mov
movsl
cmp
cltd
test
mov
cltd
jbe
adc
js
outsb
enter
jnp
dec
sbb
lahf
sub
nop
and
sub
cmp
sub
outsl
daa
outsb
int3
jo
push
es
mov
xorb
mov
call
add
pop
pop
xchg
ljmp
ljmp
mov
aad
ret
or
mov
fsubp
mov
xchg
repnz
outsb
aas
mov
mov
inc
mov
jnp
fdivrl
dec
jns
mov
push
push
movsl
xchg
repz
xchg
xchg
stos
int
push
loope
dec
out
ret
push
push
out
and
into
ret
ffree
jecxz
lods
loop
imul
test
pop
mov
mov
cmpsb
popf
sub
lret
hlt
in
test
test
or
or
add
aad
imul
fcmovbe
out
aam
mov
jne
in
mov
push
nop
xor
mov
xor
rcr
jg
mov
inc
cmpsb
not
push
gs
dec
pop
fisubrs
pop
cld
inc
adc
and
sub
push
cs
mov
mov
ja
sub
lods
sar
stos
add
add
ljmp
mov
mov
stos
dec
in
jge
in
xor
sbb
orl
movsw
xchg
in
movsw
in
inc
cmp
push
sub
movsl
jle
mov
add
out
mov
insl
sbb
sahf
sub
pop
int3
and
push
inc
das
test
decb
call
mov
test
mov
testl
inc
nop
shlb
jge
addr16
xchg
mov
inc
popl
adc
push
jge
out
mov
pushf
icebp
jg
push
push
adc
jne
sbb
mov
hlt
dec
sahf
popf
repz
push
rorl
dec
xchg
mov
inc
cmp
fldt
push
leave
in
data16
or
adc
nop
stos
inc
ret
xor
vsubpd
sti
pop
daa
cmp
sar
sbb
into
sbb
jle
in
push
mov
in
xchg
and
loop
gs
aad
faddl
sub
insb
popa
add
xor
in
push
xor
pop
push
adc
xorl
mov
lods
mov
mov
push
shlb
push
scas
shrb
addr16
push
pop
sub
out
lock
in
cli
icebp
adc
incb
and
ja
add
lods
push
sub
dec
xchg
loop
jp
cmpsb
outsl
lods
movsb
addr16
or
inc
adc
dec
movsl
xchg
hlt
add
scas
scas
loope
repz
iret
jbe
jae
push
sbb
xchg
je
mov
je
shrl
pop
repz
sbb
lds
neg
lea
or
jl
xchg
mov
inc
sbb
mov
fcmovbe
add
mov
sarl
scas
mov
inc
and
out
gs
or
xor
cmpsl
and
add
mov
rcrl
in
add
push
lret
jns
dec
mov
stos
cmp
pop
lea
sbb
push
in
das
pop
out
pusha
push
je
mov
and
int3
les
stos
mov
mov
push
and
loop
xor
push
push
popf
mov
pop
mov
imul
cmp
xor
ret
lret
scas
xchg
jg
lret
pop
imul
hlt
push
movsl
and
leave
jl
jne
and
sub
and
stos
imul
mov
push
jne
mov
nop
sbb
jmp
jecxz
imul
and
inc
push
and
mov
xchg
bound
xchg
xlat
lock
repz
and
movsb
jg
and
adc
pusha
dec
sub
or
push
mov
or
test
inc
loope,pt
gs
rcll
ja
and
inc
xchg
lret
lret
pushf
jno
push
js
xchg
stos
jp
push
mov
cld
cs
aad
mov
and
mov
xor
jg
fdivl
test
push
add
sbb
out
ret
or
cmpsl
xchg
mov
jae
inc
lds
push
inc
adc
or
sub
mov
loopne
jle
push
enter
or
test
jne
cwtl
pushf
and
call
or
inc
mov
in
ljmp
jle
in
arpl
inc
pop
push
mov
ljmp
jnp
lock
cmp
pushf
loop
jmp
mov
inc
scas
fnstenv
fdivrs
push
push
jb
fwait
sti
pusha
je
out
xchg
inc
stc
popa
out
je
jp
sub
lods
lods
sbb
ss
or
mov
sbb
es
movsb
dec
xchg
jmp
dec
cmp
enter
into
push
jle
jae
pop
push
mov
mov
push
inc
int3
mov
out
dec
sub
ds
jmp
in
sbb
xchg
xchg
out
xchg
push
sbb
mov
roll
addr16
arpl
sti
pop
mov
test
push
lea
arpl
jg
jecxz
jns
push
out
or
in
filds
jmp
and
pusha
aaa
sbb
icebp
adc
out
adc
jnp
in
or
xor
pop
mul
test
cs
adc
jae
lods
lds
or
pop
xchg
bound
imul
push
ds
fwait
repnz
inc
push
push
cmpsb
les
sahf
and
shl
push
mov
filds
sub
xor
lret
and
sub
rorl
or
repnz
inc
pop
lds
mov
adc
mov
int3
mov
cli
loop
xor
push
or
movsb
cmp
js
imul
jp
cmp
js
repz
in
sbb
les
add
daa
ja
cli
test
in
xor
cmc
jg
sub
xor
sbb
mov
or
sbb
lret
out
cld
push
roll
repz
fstpt
out
lds
stos
mov
xlat
lock
aaa
and
cmp
jnp
mov
pop
dec
into
cmpl
mov
loope
xchg
adc
cli
mov
test
dec
vpminsw
jb
push
out
cltd
lahf
inc
mov
out
pusha
add
shlb
mov
sbb
cmpsl
dec
dec
cmp
sbb
fistl
xor
or
mov
sub
pop
enter
mov
jbe
call
or
repnz
fwait
popa
insl
push
rcl
out
adc
das
rcrl
rolb
mov
sub
jno
ljmp
ret
outsl
scas
call
subb
and
sbb
sbb
dec
and
lret
xchg
sub
jmp
frstor
cmpsl
loope
lahf
sub
je
loope
and
int
enter
xchg
iret
and
inc
mov
loopne
xchg
inc
stos
push
lods
adc
pop
add
clc
call
sub
pop
pop
ja
fldl
jae
sarb
and
pop
add
and
jb
pop
mov
orl
mov
lcall
leave
mov
add
imull
inc
scas
and
inc
je
int3
jno
outsb
inc
pop
xchg
popf
mov
xor
cltd
jl
enter
imul
lods
inc
or
sub
pop
insb
iret
jle
stos
test
sarb
rcrl
std
mov
pop
cwtl
out
test
xor
in
bnd
insb
xor
test
aaa
inc
data16
pop
cmp
push
add
xchg
mov
lea
sub
jl
and
out
loopne
mov
shl
add
cmpsl
rcrb
repz
xor
pop
push
jae
adc
popf
fsubr
repz
js
inc
into
bound
or
push
loopne
sub
int
mov
inc
lahf
bound
xor
pop
cltd
movsl
mov
cmp
xchg
pop
hlt
mov
sub
cmpsl
adc
mov
mov
inc
icebp
das
divl
xchg
stos
pop
push
jae
jnp
testl
scas
mov
outsl
sub
repnz
imul
push
lods
mov
xlat
repz
or
push
lods
mov
jo
jge
jg
cmp
scas
or
mov
imul
outsl
aas
ja
mov
pop
jne
xorb
fldl
cmpsb
lea
and
push
or
and
ja
cmp
outsb
rorl
out
dec
inc
cmp
jae
mov
jmp
inc
cmp
add
and
dec
mov
into
nop
sub
push
pop
mov
or
dec
pop
lcall
dec
and
sbb
sti
repz
sbb
or
les
loope
add
mov
popf
xchg
push
fdivs
je
mov
hlt
xchg
or
adc
mov
div
stc
nop
sub
insb
push
add
or
jmp
push
and
mov
xor
jg
subl
icebp
ds
dec
bound
or
cltd
push
sbb
jmp
in
mov
xlat
fcoms
mov
out
sub
stos
insb
fisttps
push
lods
ljmp
xchg
xchg
inc
xlat
mov
rol
adc
pop
cmp
cld
sahf
jb
push
inc
aaa
cmp
mov
loope
pop
jmp
push
adc
add
loop
mov
xchg
mov
test
cmp
clc
popf
movsb
test
add
gs
loope
pmaxsw
mov
notrack
xchg
and
mov
pop
sub
add
dec
insl
xor
xlat
push
stos
cmp
test
shlb
nop
outsb
jle
add
mov
mov
inc
mov
xchg
add
fwait
mov
js
inc
xor
add
dec
cld
icebp
cmp
pop
ds
mov
lahf
stos
pop
adc
xor
lock
orl
aam
adc
pop
mov
push
test
jecxz
negb
sub
dec
stos
bound
loopne
addr16
push
mov
movsl
cmpsb
in
sbb
jl
or
int3
sbb
push
cwtl
je
adc
jb
in
mov
and
gs
clc
xchg
sbb
divb
or
inc
std
add
pusha
mov
orb
push
cmpsl
lods
inc
or
ss
test
push
inc
sub
jg
xor
out
aas
xchg
jecxz
pop
inc
xchg
inc
mov
jno
inc
xchg
jbe
add
fiadds
xor
dec
mov
mov
pop
jecxz
mov
cs
jle
andl
mov
mov
out
aas
dec
imul
dec
and
imul
scas
sbb
mov
cmpsl
jmp
hlt
push
roll
rcrl
or
jl
and
push
jno
add
dec
sbb
sbb
cs
or
jge
jmp
call
push
cli
xor
cmp
lret
sarb
mov
dec
movsl
popa
mov
cmp
xchg
subb
shrb
mov
pusha
lea
ljmp
in
xor
mov
and
dec
sub
test
cmc
xchg
movsb
sti
in
cltd
xchg
sbb
adc
xorb
test
sub
js
mov
mov
pop
xchg
adc
out
fisttps
or
loope
or
xlat
daa
scas
jo
imul
push
mov
test
loopne
fists
leave
aad
mov
imul
mov
jmp
add
dec
rcrb
stos
movsl
cmp
dec
out
xor
pop
add
inc
mov
inc
jbe
cltd
jecxz
mov
pushf
ds
or
jae
in
inc
inc
fisubl
dec
scas
cmp
inc
pextrw
cmp
imul
add
adc
or
sbb
pop
inc
pop
call
test
pop
sbb
movsl
fildl
imul
sti
mov
fwait
push
push
imull
adc
jne
int3
xor
cld
insl
xchg
sub
pushf
push
fsubs
and
push
movzbl
dec
outsb
jl
adcl
push
cmpsb
jno
fldenv
and
js
lods
out
push
les
jae
dec
mov
mov
ss
adc
fnsave
fwait
repnz
cmpsb
inc
adcb
xchg
inc
clc
dec
sti
xor
sbb
movsl
push
adc
push
int
fcomps
and
cmpsb
popf
subl
xchg
popa
sahf
xor
inc
lahf
pusha
xchg
jg
test
mov
hlt
jl
fadd
inc
mov
movsb
out
xor
in
lods
push
fxch
loop
fwait
pop
mov
adc
sub
or
inc
lock
mov
xchg
ja
outsl
add
mov
add
inc
push
pop
sbb
int3
aad
sahf
push
outsb
jbe
aaa
sub
mov
inc
sbb
dec
loopne
cli
dec
aaa
adc
addr16
xchg
or
stos
adc
aaa
aad
call
pop
bound
arpl
jmp
ret
xor
test
pop
stos
adc
and
xor
outsl
cld
xor
mov
inc
pop
and
mov
shrl
test
and
sbbl
jnp
test
addr16
xchg
ja
lock
cmpb
ret
cmpsb
stos
cmp
inc
mov
pop
fcoms
jae
sti
adc
xor
mov
push
push
les
jno
ret
cmp
dec
pop
fadds
jmp
jno
int
mov
jns
and
mov
daa
scas
push
sbb
ja
lea
orps
cmp
test
mov
jbe
std
das
add
and
push
mov
cld
fnsave
test
xchg
pop
sub
sbb
test
pop
jle
sbb
or
and
push
sub
adc
int
cmc
adc
mov
shrb
xchg
call
scas
xor
mov
push
adc
sub
out
mov
add
frstpm(287
loop
mov
inc
mov
mov
pop
mov
or
out
pushf
and
or
xchg
jnp
xchg
sti
xchg
cmpsb
imul
mov
inc
popa
jl
mov
push
sub
stc
pop
push
push
or
stos
das
sbb
jnp
scas
mov
mov
push
jo
inc
mov
mov
ds
pop
mov
sbb
jle
in
mov
sub
inc
inc
inc
loopne
data16
or
xchg
jmp
dec
fld
gs
xlat
mov
pop
das
push
cmp
mov
ret
icebp
js
icebp
andb
pushf
jnp
lds
dec
fists
mov
ror
mov
xor
lock
es
lods
inc
scas
jge
pop
in
ror
jmp
and
lock
jns
lds
push
push
les
aas
stos
inc
inc
dec
lock
ljmp
daa
cmpsb
inc
cwtl
mov
movl
lahf
push
and
cmpsl
test
mov
mov
mov
loopne
rolb
jge
xor
add
add
test
mov
in
popa
fisttps
xorl
xor
test
inc
lcall
and
xchg
into
pop
fdivs
mov
iret
adc
mov
imul
pop
mov
mov
insl
jl
lods
imul
sbbl
or
push
mov
cltd
pop
cmpsb
ficoml
loop
cld
sub
xchg
adc
adc
lea
stc
sbb
lret
inc
inc
orl
fwait
pop
mov
out
xor
in
sub
mov
daa
mov
lods
cmp
push
ret
pop
add
or
bound
jle
jnp
loop
cmp
into
or
mov
mov
insl
flds
push
sahf
fwait
mov
pusha
and
and
push
jnp
adcb
int3
loopne
mov
inc
mov
xchg
mov
mov
stc
push
add
fucomp
inc
sbb
cltd
inc
pop
mov
lods
jno
mov
int3
dec
repz
daa
inc
lock
and
mov
push
call
test
mov
pop
push
fidivl
push
or
ljmp
out
xor
fld
fwait
bnd
leave
sahf
test
or
inc
inc
inc
xchg
xor
xchg
gs
mov
roll
mov
adc
cmp
pop
rcl
xchg
jl
dec
incb
inc
sub
je
inc
jle
popa
sub
xor
outsl
mov
out
or
adc
pop
dec
sbb
xlat
cmp
push
mov
dec
sbb
pop
sbb
stos
lods
mov
in
movsb
ds
mov
enter
cwtl
mov
arpl
out
lcall
add
push
flds
rcrb
cmp
in
add
loope
push
sbb
mov
push
addr16
fdivrs
mov
rcrb
popa
mov
dec
imul
sub
cmpl
insb
scas
and
das
test
xchg
cmpsl
jne
jl
sub
out
add
pop
push
stos
add
adc
mov
js
imull
scas
cmp
jae
adc
daa
sbb
or
insb
inc
adc
dec
xlat
repnz
outsb
adc
enter
loope
fwait
pop
push
pop
loopne
lret
xchg
add
mov
ret
data16
imulb
mov
sbb
jnp
lret
in
push
popf
xor
into
stos
cmp
loope
sbb
inc
mov
jb
inc
je
js
push
sub
sub
movsb
inc
popf
push
clc
int
jmp
jne
inc
f2xm1
les
lcall
mov
push
mov
dec
dec
pop
and
jo
ret
xor
mov
arpl
pop
inc
dec
mov
xchg
es
pop
mov
es
sub
sub
lods
fisttpl
inc
pop
sbb
std
decl
hlt
fcoml
adc
cmpsb
cmpsb
cld
dec
arpl
int
sbb
pop
rolb
xchg
push
sbb
pop
sahf
lods
dec
aad
mov
jne
cmp
enter
xchg
test
popa
pop
repnz
rorb
adc
push
push
cmp
fiadds
dec
fsts
popl
adc
dec
movsb
jbe
adc
leave
mov
push
sbbl
pop
inc
mov
pop
je,pt
and
addl
fstpt
mov
xchg
hlt
jo
dec
insb
mov
cmp
out
in
sbb
ds
push
pop
loop
pop
pop
icebp
mov
xchg
sub
xchg
js
loopne
nop
leave
in
pop
push
mov
push
jne
cmp
in
jnp
add
jge
stos
mov
lock
mov
data16
xchg
mov
xchg
inc
scas
imul
insb
mov
lret
cmp
mov
push
sarb
lea
push
pop
xor
cli
xchg
xor
scas
inc
rcrb
cmc
inc
push
jnp
mov
loope
std
dec
out
outsb
mov
aam
ss
mov
push
jmp
out
xlat
cmp
int3
sahf
jne
pushf
lock
mov
push
jp
outsb
push
rcrb
mov
xchg
ss
rcrb
xor
ljmp
ss
dec
fistpll
jl
ds
sbb
xor
mov
add
cmp
or
pop
imul
xchg
add
testb
rcll
xchg
ss
test
pop
mov
popa
jns
pop
dec
data16
and
lock
adc
xchg
sub
sbb
inc
mov
or
push
outsl
sbbb
imul
out
insl
add
shl
outsb
loopne
mov
shr
cmp
pop
icebp
cli
dec
dec
jp
mov
cmp
insl
cmp
mov
push
popf
xor
inc
add
dec
xchg
ss
stos
inc
fstpl
std
cmc
mov
dec
loopne
stc
and
pop
lcall
ds
mov
push
gs
mov
mov
adc
jl
repz
aaa
mov
testb
mov
ljmp
mov
cmp
pop
xor
bound
call
inc
ret
lods
ja
ja
int
loopne
adc
mov
jno
outsb
sbb
adc
xchg
mov
imul
jecxz
in
and
mov
insl
movsb
repnz
dec
leave
repz
dec
fst
imul
jp
insl
int3
xor
loopne
adc
xchg
lock
xor
pusha
sbb
mov
faddp
inc
pop
data16
movsb
pop
ret
mov
sub
or
inc
xchg
rorb
push
rcr
dec
inc
imul
cli
inc
mov
xor
dec
mov
jg
test
insb
hlt
fldpi
add
outsb
jp
sub
sub
push
shlb
rorl
hlt
inc
jae
jns
fdivrl
inc
stos
add
jg
lods
jb
adc
daa
pushf
add
call
push
imul
xchg
push
ja
pop
mov
mov
mov
mov
xchg
lcall
ret
ret
push
push
mov
jp
jecxz
and
ss
pushf
jmp
popf
pop
cmp
jecxz
mov
jb
xor
pop
pop
mov
les
shll
addr16
mov
pop
stc
aas
lahf
int3
jecxz
loope
movsl
pop
mov
pop
jno
jbe
adc
pusha
jecxz
fsub
je
cmpsl
cmpsl
lods
inc
pushf
aaa
js
xor
jb
pushf
mov
lods
sbb
cmp
dec
mov
xor
fmuls
rcll
out
arpl
pop
add
idivb
cld
sub
and
jmp
adc
cmpl
push
test
mov
xor
arpl
lcall
aam
fadds
in
pop
popf
rorl
jmp
jo
xchg
fidivrs
add
pusha
add
stos
xchg
jb
ds
push
jnp
jmp
dec
lock
xchg
ss
test
cwtl
xor
mov
dec
push
icebp
enter
and
cld
sbb
mov
test
sbb
std
jbe
jle
adc
nop
daa
data16
mov
dec
insb
ss
sahf
outsb
cwtl
dec
dec
mov
push
mov
jb
jp
dec
loop
mov
in
push
adc
sbb
inc
mov
cmp
cmpsl
lret
lock
cli
cmc
push
cli
mov
mov
pop
fs
mov
inc
pop
pop
and
popl
loop
addr16
les
out
lods
jmpw
adc
shrb
je
ljmp
testb
mov
das
ja
dec
arpl
scas
inc
cli
adc
aad
pushf
int
dec
daa
daa
push
aam
dec
fs
cmc
loope
sub
es
test
sbb
outsl
outsb
push
rorb
mov
shl
aas
push
fistpl
mov
xor
ljmp
outsb
xchg
sbb
imul
popf
fstpt
dec
mov
pusha
xor
mov
lock
and
pop
lahf
push
push
dec
ss
xchg
inc
lods
and
cmp
daa
clc
pop
mov
or
cs
scas
push
addr16
jbe
xchg
pop
andl
add
lea
mov
or
rcl
add
lcall
adc
sbb
pushf
icebp
or
data16
ds
popa
inc
cmp
lock
inc
and
je
js
pushf
aaa
push
outsb
enter
gs
movsl
push
lods
out
ja
das
popa
sub
or
dec
orb
js
and
clc
and
fs
xor
cmpsb
and
ljmp
cmpsb
pop
cli
dec
cmpsl
mov
dec
sub
push
out
pop
sahf
and
sub
push
cli
scas
cmp
inc
rcr
sub
push
aam
rcr
call
xchg
sbb
outsl
fnstsw
push
push
mov
test
add
outsb
xor
das
addr16
cli
inc
lods
xor
mov
fsubrs
push
push
out
add
sahf
loopne
xchg
and
in
push
dec
mov
push
rcrb
popa
xor
dec
je
or
outsb
push
idivl
push
jecxz
mov
sbb
movsb
add
mov
dec
out
clc
lds
stos
jmp
inc
sarl
negl
ret
lods
pushf
jno
hlt
icebp
xchg
testl
adc
xchg
dec
aas
add
repnz
mov
push
push
or
sarl
out
rcll
inc
add
xchg
movsb
dec
movsb
xchg
movsl
test
jge
sub
pop
mov
aas
scas
mov
cmp
pusha
xor
xchg
push
imul
pop
jg
je
ss
pop
jl
cmpb
or
invd
sahf
imul
xor
sbb
xor
loop
add
push
rol
and
cmpl
or
add
imul
or
lea
arpl
std
pop
mov
mov
popa
popf
inc
dec
dec
mov
pop
ja
mov
fcom
cmp
ret
aas
test
mov
stos
pushf
ss
into
mov
cmp
stos
ljmp
sub
push
mull
cmpl
lods
cmp
pop
adc
out
push
ds
ja
into
mov
inc
sbb
mov
pop
xchg
outsb
add
or
inc
push
push
inc
test
mov
movsb
inc
testl
icebp
cmpsb
adc
aaa
addr16
dec
stc
movsl
aad
xchg
mov
dec
loope
cmc
push
std
mov
pushf
cli
push
mov
dec
cs
mov
xor
in
sbb
mov
add
fldt
push
mov
movsl
jo
out
dec
cltd
cmp
fwait
mov
frstor
adc
xchg
outsb
test
ret
push
sbb
cli
sbb
aaa
sub
pop
pusha
xchg
inc
push
cltd
push
cmp
inc
mov
dec
mov
pop
push
mov
fsubrs
ret
aas
insl
out
mov
inc
mov
data16
and
in
mov
jmp
push
xor
icebp
inc
dec
xor
jecxz
ss
cmp
aaa
push
jmp
scas
sbb
test
pop
mov
pop
pop
int3
scas
mov
into
xor
movsb
popa
cmp
xchg
les
add
pop
testb
iret
leave
es
mov
rclb
enter
in
sbb
lds
add
mov
sbb
test
and
push
xchg
push
lds
ja
or
lcall
mov
push
pop
push
fldt
mov
aad
clc
sub
outsl
pop
cmp
fs
into
adc
mov
cmpps
add
mov
ret
inc
fs
iret
xor
add
jne
lods
xor
pop
cmp
pop
ror
popa
lods
mov
mov
cwtl
pop
xor
mov
mov
and
cs
xor
shlb
in
mov
shlb
testl
mov
xchg
and
or
orb
scas
jp
pop
dec
pop
xchg
andl
xor
push
test
inc
cs
lret
cmpl
lahf
mov
mov
clc
cmp
mov
inc
pop
aas
mov
addr16
dec
or
cmp
mov
sbb
loopne
stos
push
lret
cmp
and
outsl
push
loope
mov
mov
add
movb
sbb
les
mov
jb
jp
and
jp
test
lcall
in
test
subb
mov
lods
lea
addr16
data16
mov
pop
stos
in
out
xchg
adc
jae
mov
xchg
mov
insl
out
xor
or
fstps
jl
lods
xchg
scas
roll
mov
stos
lret
cld
jmp
arpl
cmpsb
scas
push
in
adc
sbb
xor
popf
cmc
arpl
outsb
xor
stos
jge
xor
pop
out
mov
pop
das
cmp
cmp
mov
sub
xor
mov
fidivs
in
dec
sub
aad
nop
hlt
cmp
in
loop
or
add
cli
popf
mov
inc
addr16
lret
cmpl
aad
aad
jle,pn
shrb
popa
cmp
fs
mov
lods
sbb
adc
dec
repnz
cmpsl
cmp
popa
lock
jb
jmp
sbb
rcl
fcomps
pushf
dec
dec
leave
cmpsb
jb
jp
sbb
decb
sti
dec
cmpsl
jle
movsb
adc
mov
jo
fbstp
mov
and
daa
outsl
in
and
jo
imul
call
imul
notb
hlt
inc
and
sbb
jp
es
adc
jle
sarb
pop
add
aas
sbb
shlb
inc
dec
xchg
add
lcall
incb
outsl
je
inc
fadd
xor
jo
pop
adc
adc
adc
imul
movzbl
outsl
movsl
movsl
cmpps
das
mov
adcl
or
inc
fcompl
sub
in
pushf
dec
mov
jge
cmp
test
lock
cmp
pushf
sbb
rclb
and
cwtl
in
add
pop
push
pop
and
or
adc
push
sbb
cltd
stc
adc
out
jae
adc
pop
inc
mov
psubsb
push
xchg
adc
out
sti
xor
in
cmp
daa
mov
mov
dec
or
dec
pop
sub
push
scas
aam
cmpsb
jo
jne
ret
andb
adc
outsl
jae
sbb
and
test
pop
mov
aas
push
lea
mov
insl
cmpsl
js
pop
mov
pop
testb
cmp
scas
fisttpl
mov
aaa
adc
mov
sbbl
push
cmpsb
lahf
sub
fwait
xor
les
push
imul
cmp
and
push
popa
sbb
adc
and
addr16
xchg
xor
lahf
xchg
imul
add
add
jae
mov
rol
xor
jmp
cmp
cmp
jge
inc
add
cmp
aad
and
add
in
cmp
mov
dec
dec
lods
aas
rol
and
lret
popf
stc
fs
pop
scas
jle
test
mov
push
in
loopne
mov
dec
pop
scas
aaa
fistps
cmp
push
cmp
push
ret
sbb
jo
test
fnstenv
rol
push
test
cmp
xor
adc
repnz
inc
nop
imul
push
icebp
dec
jmp
pop
mov
repz
jge
cmp
je
mov
lock
jb
add
in
push
xchg
stos
imul
mov
inc
pushf
jge
mov
clc
scas
fistpl
repnz
xchg
jg
pop
pushf
jns
pop
fcomps
xchg
rcrl
cltd
lahf
aaa
or
xchg
cmp
popa
fstl
jb
sbb
dec
fldenv
push
push
js
sub
rcr
xor
jge
xchg
repz
ljmp
jb
xlat
adc
aam
dec
movsb
out
mov
sub
cmp
arpl
arpl
jecxz
mov
jno
xchg
loop
sbb
sbb
xchg
fisubs
int3
inc
push
push
leave
mov
test
in
fisubrl
pop
lcall
jmp
mov
xchg
adc
pop
aad
cmp
or
leave
loop
ret
sbb
push
test
into
cmp
or
xchg
nop
imul
lock
mov
push
icebp
repnz
dec
out
addr16
hlt
xlat
xchg
xchg
jb
movsl
mov
mov
dec
and
faddl
imul
fcmovb
fsubrl
sub
test
outsb
dec
inc
lcall
clc
bound
sbb
mov
sub
mov
addr16
out
or
daa
jle
dec
add
add
es
adc
lds
call
or
xchg
out
jge
mov
push
in
fisubs
daa
inc
arpl
repz
js
and
jmp
mov
cmc
notb
mov
fldcw
mov
sub
push
insl
lret
test
push
pop
add
mov
dec
stc
mov
jmp
jns
mov
addr16
jbe
or
jb
clc
mov
mov
loope
scas
insl
jbe
enter
repnz
test
les
int
inc
rcrb
daa
inc
cmp
insb
out
pop
jnp
jl
and
mov
fs
ljmp
dec
pop
aas
mov
and
sbb
xchg
jbe
jno
nop
bnd
and
jnp
sahf
mov
out
out
arpl
cltd
test
ret
mov
aas
pop
rcrb
in
addr16
out
roll
mov
addr16
xor
add
sbb
mov
sub
add
push
dec
movsb
ret
push
xchg
ret
sub
cmp
loop
insb
and
xchg
addl
out
ds
sbb
test
or
mov
pop
sarl
mov
leave
imul
fucomp
daa
mov
mov
scas
test
shll
push
sub
addl
adc
mov
out
js
lret
into
mov
jl
imul
repnz
ret
lret
out
and
outsl
xor
mov
cmp
and
jp
mov
pop
cli
xchg
mov
mov
sbb
sub
in
into
movsl
inc
in
or
push
dec
push
cmc
ds
add
or
shrl
lea
or
pop
out
loop
xlat
xchg
jno
dec
iret
mov
lcall
sub
push
mov
dec
pop
and
dec
aad
andl
sub
nop
jle
lret
or
inc
test
mov
fsubr
push
imul
test
xchg
push
jno
lds
mov
cld
or
adc
scas
adc
das
popa
pop
test
cmp
jg
inc
adc
repz
bound
sbb
xor
push
push
leave
pop
fsubs
mov
sbb
dec
pop
mov
mov
jns
or
orb
mov
or
jle
inc
xchg
sub
xchg
not
cmpsb
sbb
in
dec
out
fwait
jp
rep
js
or
int3
aas
xor
cmp
or
xchg
movsl
out
or
xchg
adc
gs
xor
js
ljmp
jo
cwtl
notb
stc
inc
int3
push
inc
fwait
push
jp
and
popf
es
icebp
push
adc
cmp
rcrb
mov
pop
and
lea
or
cmp
inc
pusha
cwtl
push
adc
mov
mov
fidivrs
or
sub
rcrl
adcb
cmp
pushl
das
test
cmp
and
mov
push
inc
incb
xchg
test
push
call
roll
lds
push
mov
add
xchg
imul
lock
test
push
or
sub
js
test
xor
insl
add
mov
fildl
mov
sarb
flds
lahf
and
cld
aas
shrl
mov
das
inc
jne
fwait
sub
cs
or
pop
cltd
fnstenv
jle
xor
xchg
sbb
repz
pmulhuw
mov
jmp
or
cmp
cmp
push
dec
mov
mov
add
je
icebp
movsl
subl
jl
fdivr
mov
pop
shlb
mov
or
and
sub
sbb
xor
dec
and
sbb
pop
xchg
pop
inc
inc
sar
mov
daa
sti
mov
cmp
adcl
or
hlt
jmp
sbb
push
mov
jle
loopne
cmpsb
push
mov
pop
outsb
and
arpl
jne
dec
ret
mov
push
jo
lods
subb
mov
loope
out
ret
push
into
xor
fmull
sbb
std
pop
hlt
mov
lcall
mov
inc
mov
subb
shrl
aam
sub
cmp
in
dec
dec
aam
lds
jb
mov
je
adc
xor
jb
xchg
bound
adc
jno
dec
shl
push
mov
push
in
in
pop
hlt
mov
and
scas
adc
xchg
cwtl
jno
fwait
mov
mov
inc
pop
mov
sbb
adc
push
xchg
das
into
mov
sub
loope
ja
loop
jge
icebp
mov
aam
andb
ss
cs
test
adcl
inc
xchg
loope
js
cmp
outsl
add
cltd
pop
call
push
xchg
call
out
xchg
call
mov
and
mov
adc
cs
dec
and
rcll
shll
gs
xchg
pusha
push
scas
roll
and
inc
or
call
push
mov
pop
jp
add
cltd
xor
mov
inc
rorb
jmp
sbb
push
cmpsl
or
pop
aaa
fxch
adc
push
mov
or
loope
push
pushf
add
jecxz
das
lock
jg
hlt
push
dec
sub
lcall
jbe
test
imul
popf
ffreep
es
ficompl
jnp
movsb
inc
stos
scas
jae
sbbb
lret
sub
cmp
fidivl
mov
mov
dec
dec
sahf
xor
in
mov
sarb
xor
or
mov
push
adc
sbb
push
mov
loope
pop
inc
fs
cmp
jmp
mov
jnp
lods
fincstp
push
inc
lods
loope
rcl
jo
inc
gs
mov
in
jns
pop
lret
bound
xchg
jmp
mov
rcll
mov
inc
sub
pop
cmp
call
movsb
fstl
lret
mov
test
inc
mov
pop
fs
ret
cli
dec
out
in
in
mov
in
decb
sbb
push
xor
pop
adc
bound
cmpsl
movsb
fadd
lock
into
cli
or
cmpsl
mov
sti
jne
les
and
push
inc
dec
arpl
setle
jle
mov
scas
mov
loopne
push
mov
dec
pop
cmp
inc
daa
jo
xor
stos
fldl
push
repz
js
fisubs
jnp
inc
lods
sbb
jge
pop
lcall
cmc
inc
divl
push
pop
or
cmp
add
adc
dec
lea
in
pop
push
jae
mov
movl
jnp
aaa
xchg
lods
dec
stc
and
cmpsb
lock
in
mov
jmp
mov
pop
loop
fistpll
lds
jge
js
lcall
dec
std
pop
andb
sbb
mov
out
dec
cs
insl
out
or
adc
lea
lods
sbb
ret
int
mov
lret
lret
addb
test
xor
mov
or
enter
dec
fadd
fcoms
push
popa
inc
out
jns
fildll
push
add
sahf
xor
rcrb
and
aaa
mov
add
pushf
roll
je
lret
sub
movsl
mov
test
and
bound
lret
lret
hlt
sub
pushf
mov
out
arpl
mov
repz
mov
scas
cli
mov
arpl
imul
ljmp
sbb
mov
imul
incb
sbb
dec
in
daa
sbb
aam
mul
outsb
adc
inc
imul
and
or
xor
inc
push
mov
pop
push
das
pop
push
push
and
mov
mov
inc
mov
inc
test
lods
jecxz
mov
test
lds
cmp
insb
inc
in
std
pop
push
sbbl
and
jmp
add
testb
mov
push
inc
bound
lods
scas
sti
jg
pop
jbe
adc
lret
fldt
lret
popa
sub
dec
mov
aad
add
dec
pop
sbb
dec
scas
pushl
xor
push
in
or
sti
cltd
lret
scas
imul
shll
mov
shrl
lods
pop
cmpsb
out
sbbb
sub
scas
xlat
mov
jns
and
adc
jb
ds
mov
mov
sbb
push
jp
bound
lods
and
mov
pop
rorb
add
clc
xchg
repz
lahf
gs
es
out
dec
xor
or
mov
outsl
out
add
imul
outsb
sbb
ljmp
out
scas
sbb
add
dec
lea
int
rclb
cmp
pop
or
pop
mov
sarl
xor
dec
xchg
divb
cmp
push
fldl
mov
pop
mov
loope
adc
mov
mov
adc
adc
andl
mov
jns
adc
fisubl
inc
cmpsb
je
in
add
add
mov
rcrb
lret
push
mov
bndldx
push
cmpsw
test
dec
or
testb
or
mov
fwait
sub
cwtl
add
cmp
xor
adc
aam
xchg
xchg
outsl
dec
adc
fiaddl
cmpsb
popf
xor
adc
sub
mov
jge
xchg
cmpsl
bound
movsb
mov
ljmp
fmulp
scas
std
push
nop
xor
push
fisubrl
inc
testb
and
mov
sbb
and
sub
dec
push
mov
out
fstpt
xchg
leave
fucomip
cld
in
push
lea
mov
jl
jns
pop
in
or
andl
sub
and
pop
lock
lret
lret
mov
xchg
jmp
movsl
pop
lea
test
repz
into
or
jns
pop
adc
mov
lret
inc
fnsave
push
out
sbb
cmp
out
mov
xchg
push
and
psubsw
add
add
mov
aas
sub
xchg
sbb
pop
int3
movsl
cmp
jp
int3
mov
ret
jno
pop
xor
mov
enter
jnp
sarl
pop
adc
xor
imul
into
push
gs
mov
insb
mov
xor
mov
add
inc
pop
push
stos
inc
icebp
and
mov
filds
cli
mov
jno
shlb
scas
jge
lret
addb
stc
mov
shlb
jl
add
cmpsl
ret
dec
sbb
sub
hlt
test
fsub
pop
popf
int3
out
cmp
aaa
jp
mov
faddl
push
scas
mov
les
or
rcrb
xlat
mov
lret
inc
icebp
idivb
jp
jl
cmp
fiadds
pop
std
mov
movl
jns
mov
push
loope
lea
cld
sub
in
std
xchg
pop
mov
xchg
pop
aaa
mov
xchg
sbb
fcmove
pop
int3
xor
pop
add
push
adc
mov
mov
and
scas
adcl
cmp
and
outsl
repz
sbb
mov
rorl
mov
scas
inc
cli
jl
mov
out
xor
stos
imul
cmp
in
dec
mov
cmpsb
and
inc
inc
je
cmp
in
inc
cmp
cmp
push
mov
stos
push
stc
or
dec
out
js
dec
xchg
paddq
add
and
jns
repz
and
mov
sub
int
nop
jle
fs
cltd
push
stc
ret
out
add
call
jbe
sbb
mov
das
dec
push
aad
cmp
out
negb
scas
pop
mov
popl
lock
sahf
sub
push
inc
loopne
xor
push
inc
inc
fs
loope
pop
repz
pop
clc
ret
in
dec
mov
in
outsb
es
or
xor
pop
or
cmp
fwait
bound
sub
ret
pop
and
hlt
divl
adc
cmp
je
je
cmpsb
mov
into
push
stc
push
in
lret
xlat
inc
leave
adc
jo
mov
sti
sbb
rorb
aas
push
push
shlb
jnp
arpl
popf
or
xchg
aam
sbb
mov
sbb
jg
jge
cmp
jmp
call
cmp
lds
std
xchg
call
mov
inc
dec
loop
inc
clc
stos
icebp
aad
inc
nop
ret
push
ror
xchg
dec
cwtl
bound
iret
int3
cmc
dec
punpcklwd
add
rep
dec
pusha
push
mov
or
int
inc
hlt
fdivrl
mov
mov
out
push
mov
pop
mov
bound
leave
popa
mov
outsb
cmove
testl
xchg
inc
loope
popf
push
cli
mov
popa
lock
cs
xor
and
dec
mov
cmp
sbb
addr16
cmp
mov
xchg
cwtl
js
cltd
lea
inc
sbb
shrb
fstpl
inc
outsl
lock
rcr
mov
cmpsl
mov
add
mov
pop
pop
movsl
cmp
push
repz
call
test
add
mov
lods
ja
sub
or
rcrb
dec
pop
adc
push
mov
xchg
addr16
addr16
fs
fistpl
xor
repz
dec
ds
dec
ficoms
sub
inc
lret
fldenv
sbb
push
xor
push
sbb
pusha
lret
xorl
mov
insb
lahf
jbe
inc
pop
mov
jge
jb
je
add
mov
or
dec
in
pusha
inc
xor
pop
mov
testl
movl
mov
or
es
and
mov
add
or
cwtl
test
movsl
pop
bnd
aas
sub
adc
adc
cmp
sub
and
out
mov
sub
jmp
or
shl
sysenter
cmc
dec
mov
sbbl
outsb
mov
sarb
lock
mov
sbb
and
mov
jns
mov
iret
cmp
mov
movsb
adc
mov
xor
xchg
dec
add
xor
jecxz
aaa
dec
dec
xor
fucomip
xor
or
inc
ss
pop
push
mov
sub
addl
insl
sbb
ja
xlat
mov
jo
sbbl
mov
out
in
jg
lahf
insb
xchg
and
cmp
jnp
pop
fstpl
popa
enter
fstpt
and
cmp
cmp
sub
jmp
sti
push
push
pop
fs
pop
ss
mov
ja
jbe
cmpsb
jp
lahf
mov
mov
icebp
xchg
ret
xor
or
leave
daa
in
dec
mov
cmp
addr16
fcom
out
pop
mov
xorb
rcrb
mov
inc
lret
dec
sarb
out
inc
call
data16
sbb
or
fcoml
ret
shll
shl
inc
xchg
push
movsl
sbb
push
fstl
mov
mov
hlt
test
ss
scas
inc
sub
js
icebp
mov
lods
insb
lcall
dec
sub
movsb
fnsave
shrb
add
ret
test
fidivrs
dec
push
add
lods
aaa
flds
push
dec
push
data16
insb
cmp
dec
cs
repz
jg
aad
movsl
call
jl
sub
mov
int3
push
jno
fbld
int
les
lcall
sub
imul
jmp
addr16
sbb
cmp
push
xlat
xor
popa
scas
ds
push
xor
adc
js
les
xchg
aam
xor
stc
or
imul
sti
aam
out
data16
in
pop
inc
mov
adc
mov
inc
xor
jl
out
gs
push
jge
adc
or
inc
mov
shld
pop
in
mov
sub
and
sbb
push
xchg
popa
popf
int3
outsb
ds
jg
pushl
mov
push
flds
fadds
jp
leave
pop
mov
sbb
dec
cmpsb
pusha
inc
pop
arpl
scas
repz
xchg
out
add
pop
jo
jmp
dec
or
and
jmp
cli
in
data16
dec
lret
cmc
mov
popf
inc
repz
push
sti
sahf
sbb
les
sbb
pop
cmp
adc
pop
stc
push
mov
mov
sbb
cmp
shr
sbb
add
arpl
and
adc
jle
mov
sub
enter
cwtl
jbe
jmp
rcll
pop
daa
mov
int
inc
add
out
fneni(8087
pop
loope
sahf
andl
dec
shll
iret
and
mov
push
adc
sub
repnz
push
icebp
xchg
scas
icebp
icebp
js
add
leave
cmpsl
xlat
repz
cmc
das
pop
mov
filds
pop
dec
cmp
xlat
repz
or
test
add
imul
fucom
lret
lods
adc
jbe
cmpsb
les
mov
mov
sub
dec
rcrb
dec
loopne
mov
cmp
movsl
lods
ds
push
data16
mov
dec
sbb
in
data16
aad
js
out
stc
ficompl
int
jb
hlt
gs
mov
push
out
test
mov
add
xor
and
fs
sub
push
inc
in
imul
mov
push
xchg
ret
rep
jnp
jbe
in
sub
mov
sarb
push
dec
in
jecxz
lret
push
loopne
scas
rol
inc
fdivrp
hlt
ss
or
push
mov
call
out
insb
sbb
jmp
add
loope
push
jecxz
mov
and
scas
sbb
xchg
into
sti
fwait
bound
xchg
ds
pop
dec
dec
mov
loop
mov
xchg
daa
cmp
test
mov
sbb
mov
cmp
dec
out
sub
xchg
ror
test
mov
xchg
mov
cmc
and
dec
xchg
stos
sub
push
aas
add
insl
adc
cmp
test
iret
fcomi
sbb
mov
enter
pop
cmp
int3
xor
cltd
push
fldz
push
push
daa
mov
fbstp
adc
jae
icebp
sub
je
mov
sti
pop
adc
ss
out
repz
xlat
repnz
mov
lahf
fnstenv
push
push
xchg
cmpsl
cmpsl
out
mov
sub
mov
mov
mov
cmpb
sbb
pop
adc
push
inc
pushf
inc
ret
jbe
icebp
push
in
sbb
pop
insl
add
ljmp
mov
mov
lock
xchg
ss
mov
ret
push
sub
fdiv
mov
dec
or
mov
push
imul
imul
icebp
sbb
add
dec
gs
filds
sub
in
cmpsl
imull
pop
movl
in
out
xchg
adc
scas
imull
cmpsb
nop
pop
shl
ret
mov
movsl
lea
aas
bound
in
lcall
ss
xchg
xchg
sub
hlt
push
mov
sub
jne
loope
fsubrl
mov
flds
fucomp
sub
and
mov
jne
dec
fstl
lods
mov
incl
scas
call
cmpsb
mov
mov
jns
fnstcw
jno
mov
add
fidivs
and
fiaddl
dec
scas
fucom
sbb
out
call
lea
inc
push
xor
insb
popa
lods
fucomp
test
mov
insb
add
stos
loopne
cmp
jo
aas
outsb
and
sub
dec
jl
and
mov
scas
ret
push
sbb
pop
mov
xor
and
aaa
popf
in
enter
inc
dec
mov
mov
insl
sub
sub
mov
ljmp
jge
inc
mov
dec
mov
add
gs
push
pop
outsl
iret
shl
cmpsb
lods
dec
dec
lret
out
rcrl
and
mov
ds
subb
sub
lret
xchg
xor
pop
rcrl
pop
adc
stos
fld
jge
jbe
test
inc
call
mov
mov
dec
loope
xor
inc
fsubs
mov
sub
jl
roll
add
lods
pop
mov
jge
bound
movsb
test
cmp
jg
dec
mov
out
shrl
mov
push
or
pusha
subb
sti
sbb
gs
pop
nop
stos
mov
or
jnp
dec
stc
js
cmp
mov
adcl
inc
gs
sub
inc
add
inc
xor
push
test
xor
push
repnz
and
aas
imul
fs
pop
jle
xor
jns
push
inc
out
ret
xor
filds
add
fildl
test
add
pop
popa
sbb
adc
lcall
cltd
mov
add
mov
cmp
sbb
sbb
pop
repz
inc
mov
insl
lock
sub
cmp
jne
int
xor
cmp
je
or
cwtl
sbb
or
mov
cmpsl
out
iret
adc
lock
les
push
mov
pop
aaa
cmp
pop
scas
imul
int
ficoml
loope
lds
pxor
insb
dec
cmc
int
cwtl
pushl
std
and
ret
jle
sarb
clc
outsl
lds
popf
shll
add
jmp
test
sbb
xchg
std
or
dec
mulb
mov
cmp
dec
xchg
add
mov
orb
fwait
pushl
pop
gs
aad
clc
cmc
enter
popf
cmc
popf
pop
movsl
into
push
out
into
inc
mov
inc
mov
lcall
scas
mov
cli
push
repz
leave
fcmovne
push
cmc
shr
cmp
test
xchg
fwait
xchg
xor
fldl
dec
pop
loope
setns
das
popf
scas
add
xor
stos
xchg
notb
outsb
enter
test
rcl
out
pop
pop
mov
mov
je
repz
dec
cmp
cs
add
out
adc
addb
xchg
cmc
nop
adc
cmp
and
jns
outsl
repnz
xor
add
ficoml
movsb
lods
add
sub
inc
jnp
push
pushf
mov
sbb
push
fsubr
loopne
fdivrs
and
adcl
lods
lret
jmp
lret
fcomip
or
jne
das
ret
fistl
adc
push
mov
jb
fbstp
mov
push
aam
mov
mov
arpl
imul
orb
mov
pop
bound
xchg
out
mov
test
adc
jp
jae
mov
mov
ficoms
xor
mov
mov
ret
aad
sbb
xchg
adc
push
adc
sahf
out
mov
stos
cltd
insb
pop
fsubrs
das
bound
inc
lahf
fimull
imul
push
lcall
dec
xchg
mov
sub
mov
lock
test
clc
cmp
mov
lods
add
addr16
dec
mull
or
sbb
mov
and
orl
push
aam
xchg
adc
sub
cmp
fs
data16
inc
mov
test
or
jge
inc
mov
mov
adc
fnstenv
and
adc
mov
test
fstps
jno
std
mulb
cmp
adc
call
or
sahf
mov
iret
popf
fstp
xor
jae
mov
pop
jne
and
stos
mov
push
xchg
jg
mov
movsl
addr16
das
ljmp
scas
lea
testl
inc
fld
inc
mov
ljmp
mov
add
ds
out
xchg
xor
sbb
out
leave
and
mov
out
push
push
jge
bound
leave
popa
fdivl
pusha
ja
inc
data16
and
mov
jge
lret
add
mov
aam
pushw
pop
loop
and
mov
sub
xor
daa
dec
testl
sub
mov
or
je
pop
clc
test
orb
arpl
stos
sub
outsb
ror
mov
cld
add
sbb
mov
stc
add
or
cmp
shlb
or
xor
ss
popf
mov
rclb
and
insl
imul
xlat
push
movsb
lods
add
pop
mov
pushf
jns
mov
icebp
stos
and
aaa
fdivrs
xchg
mov
mov
adc
call
push
jp
cmpl
loope
in
dec
lcall
stos
fisubrl
nop
pushf
roll
push
das
mov
test
enter
movsl
inc
xor
fdivl
mov
scas
in
add
mov
sub
dec
int3
jg
loop
or
bnd
adc
in
or
and
fwait
mov
push
mov
push
arpl
mov
test
out
into
mov
pop
mov
ja
pop
ds
pushf
mov
testb
fldt
rcll
stos
out
lock
xor
fchs
push
or
xchg
aas
mov
lret
or
ja
popa
in
into
insb
jg
lds
es
add
push
dec
xor
ret
addr16
sbb
adc
stos
lds
cmc
addb
fisttpl
lea
or
mov
stc
cs
jl
ret
pop
xor
es
pop
push
add
adc
xchg
inc
push
pop
pop
scas
inc
push
inc
push
inc
andl
xor
adc
cwtl
testb
sbb
push
out
scas
push
sub
dec
in
stos
adc
aaa
lock
test
scas
pop
hlt
out
inc
sbb
int
gs
lods
inc
mov
inc
mov
mov
mov
jmp
inc
add
inc
into
fldt
jno
inc
cmpsl
dec
pop
and
int
mov
sbb
decb
adcb
mov
jl
and
sbb
pop
lods
xor
jo
int
lods
ja
mov
outsl
adc
fstl
push
jle
add
ds
and
jns
add
das
imul
fistl
sbb
repz
mov
add
rcll
and
ret
loope
call
cmp
lcall
push
cli
sbb
lods
into
jle
loop
pop
iret
data16
inc
test
jb
scas
push
adc
jae
mov
mov
std
std
inc
andl
push
pop
scas
aaa
imulb
push
adc
jmp
sub
mov
insl
cli
movsb
mov
sbb
fldenv
ljmp
daa
into
inc
sub
xchg
fld
push
je
cmp
outsb
and
push
dec
loope
loope
int3
pop
sbb
shl
jbe
imulb
or
and
mov
ljmp
cmp
mov
adc
pop
push
mov
cs
push
mov
fisubs
jnp
scas
cmp
push
sahf
iret
fstpt
push
inc
subl
sbb
in
scas
loopne
sub
shlb
popa
out
mov
mov
rolb
test
or
js
sahf
test
inc
push
faddl
test
inc
sub
movl
loopne
fnstenv
pop
aas
rcl
xor
jecxz
sub
ds
and
popa
add
insl
push
cltd
sub
mov
lock
lods
jp
fildll
lea
or
xchg
cld
fucomip
sub
sub
aam
jo
ja
and
pop
adc
mov
test
movsl
stc
dec
pop
out
cld
mov
test
sub
xchg
pop
and
pop
and
push
jb
sahf
gs
sbb
mov
sub
jne
out
test
add
movsb
jmp
pop
cmc
add
xor
add
adc
daa
sub
icebp
jl
pop
pop
rorb
cs
repnz
insl
jns
fwait
xchg
pop
repz
xchg
push
das
cmp
mov
mov
jne
ret
push
sub
dec
jecxz
js
out
sub
xorl
inc
jle
adc
call
cmp
sbb
in
jne
aas
bound
test
push
sbb
dec
sbb
and
push
push
mov
movsl
xlat
mov
push
out
or
mov
xchg
mov
xorl
dec
in
mov
sub
dec
dec
jmp
jb
xchg
mov
enter
rcll
xor
repnz
cmc
pop
imul
icebp
and
je
sbb
jnp
mov
ja
pop
push
pop
xlat
push
cmp
cltd
mov
test
mov
sahf
and
jmp
lea
in
jne
into
aam
aas
js
fbld
dec
out
dec
pop
int
jge
int
add
icebp
fcoms
add
xor
and
and
jmp
ret
stos
xor
pushf
inc
repnz
push
ja
push
xor
lret
mov
movsb
dec
scas
push
sbb
int
xor
sbb
sub
mov
ret
add
test
repnz
cmp
jne
dec
push
sub
jge
lods
stos
notb
xchg
repz
fwait
lcall
mull
data16
push
test
adc
xchg
add
push
cli
das
andl
lds
mov
xchg
mov
xchg
or
stc
pop
subl
pushf
inc
cwtl
lea
shlb
add
pop
in
jo
mov
or
lcall
sar
xor
sbb
mov
adc
jbe
push
repnz
rcrl
xchg
lcall
cltd
shrb
aam
ss
daa
in
cmp
inc
push
cmpsl
outsb
clc
loope
dec
scas
lret
push
jne
xlat
cs
fmulp
dec
push
lahf
mov
iret
add
pop
xor
mov
jmp
jg
int3
aaa
lret
pop
jne
jbe
aaa
fcompl
push
jmp
loopne
push
jne
mov
mov
imul
movsb
into
leave
dec
add
push
aas
push
xchg
stos
xchg
add
ss
pusha
add
mov
fcoms
or
push
mov
fstpl
mov
fucomi
sbb
xchg
or
daa
and
push
out
pop
andb
clc
hlt
lret
lods
cli
or
mov
iret
pop
repnz
adc
out
orl
mov
hlt
fwait
sub
cmc
mulb
leave
jmp
loopne
insl
shlb
adcb
cld
lcall
je
add
cwtl
xor
in
movsb
inc
jecxz
mov
jbe
les
data16
sar
pop
xor
adc
dec
outsl
inc
lods
ret
fldt
adc
mov
push
inc
lock
pop
nop
jne
push
dec
fadd
mov
mov
pop
or
call
hlt
push
cwtl
pop
out
push
add
jmp
aaa
mov
jae
mov
sti
sbb
push
test
popa
das
adc
clc
fnstcw
or
xchg
out
sub
inc
jb
das
sahf
ds
rclb
stos
jno
and
xchg
xor
pop
mov
xlat
add
adc
adc
repnz
ds
hlt
dec
jne
dec
lock
imul
rorl
mov
inc
int3
aad
pop
and
xor
fdivrl
sub
dec
dec
adc
divb
sbb
in
mov
es
inc
gs
fnstcw
test
pop
and
fmuls
jge
inc
out
ret
xor
or
sbb
out
inc
ss
or
int
fsubl
cld
mov
sub
ss
xchg
mov
jge
or
inc
adc
jge
xor
rolb
and
and
in
outsl
inc
lcall
inc
jb
arpl
int3
xchg
rcrb
cld
clc
mov
icebp
loopne
dec
fcmovne
cmp
gs
push
pop
js
pop
xchg
push
test
push
mov
out
sub
inc
lret
jno
lahf
mov
jle
cltd
cmp
aad
in
mov
je
loopw
sbb
ljmp
and
jns
in
xchg
cmpl
mov
subl
rclb
or
test
leave
add
inc
pop
or
xlat
push
mov
scas
ss
dec
lret
pop
test
add
fcomip
add
in
push
insl
xor
xchg
loop
iret
mov
sbb
mov
pop
rclb
add
mov
push
clc
cwtl
icebp
add
es
mov
stos
mov
and
aas
push
xor
cs
lds
popf
or
mov
mov
mov
or
outsl
stos
pop
mov
dec
clc
les
notb
pop
fistpll
push
movsl
arpl
repz
outsl
aad
jne
test
inc
lods
jno
fistl
notb
cmpsl
lds
ffreep
adc
fistl
add
xchg
stc
ret
jnp
iret
and
stc
push
das
idivb
shll
shrl
mov
dec
add
xor
es
adc
cmpsl
inc
or
dec
jb
pop
mov
sub
lahf
lods
bnd
out
cmp
ret
add
mov
daa
jp
movsl
clc
inc
inc
add
mov
leave
lods
add
out
dec
cmp
pop
shlb
push
mov
enter
fistl
mov
dec
or
dec
ret
pusha
lock
xor
inc
dec
in
fwait
cmp
pop
pop
xchg
ja
cmp
lea
or
fnstsw
or
pop
sbb
loop
stc
sub
or
and
add
mov
decb
mov
fs
leave
mov
add
sbb
adc
mov
lcall
ret
pop
jbe
pop
add
rclb
jg
stos
scas
mov
cli
mov
pop
negl
jp
shll
push
xor
jns
stos
inc
test
inc
push
mov
sahf
sub
mov
push
fucomi
rclb
cmp
mov
sahf
sub
punpcklbw
lods
add
and
sahf
ss
xlat
fisubl
or
subl
cmp
sbb
pop
cmpb
adcb
inc
mov
addr16
inc
out
cld
sub
jo
mov
inc
pop
cmpsb
ja
mov
xlat
cmp
rorl
jp
mov
adc
cld
rcrl
fnstenv
push
loope
leave
push
aaa
ret
add
scas
sti
sub
xchg
cmp
push
out
fadds
sbb
jns
lds
jp
out
sbb
or
cmp
lea
xchg
xchg
lods
mov
pop
jbe
push
je
fcoms
sarb
fsubrs
mov
popa
mov
lods
in
sbb
xchg
aam
scas
mov
dec
push
sbb
cld
adc
or
das
fcomi
fidivrl
pop
xor
sub
loope
jno
sub
out
or
push
or
cmpsb
dec
rcrb
adc
cmp
popf
aaa
jnp
cmp
es
cli
pop
stos
mov
mov
mov
mov
xor
imul
andl
ret
inc
sbb
xchg
cmp
cmc
sbb
jnp
orb
dec
jecxz
fsts
ficomps
movsl
imul
dec
rcll
lods
xchg
cmp
xor
inc
pushf
xor
subl
iret
jbe
sbb
jg
and
mov
add
lret
js
push
or
push
mov
sub
out
ss
mov
movsb
cmc
jne
rorl
rcl
jmp
data16
fnsave
popa
push
mov
call
inc
push
xor
fisubs
lcall
cwtl
xor
cmp
push
aas
adc
sub
stc
in
sub
mov
das
jne
xchg
and
cltd
pop
and
dec
xor
and
jno
popf
xor
xchg
cmp
add
and
cwtl
lods
xchg
mov
les
cmc
in
fwait
popf
ret
adc
iret
lcall
arpl
and
cmp
ljmp
pop
and
mov
mov
xor
pop
nop
add
dec
loopne
add
or
insl
adc
cli
sub
and
dec
daa
push
cmp
dec
adc
xchg
fst
insl
inc
adc
imul
jae
and
fists
jns
jmp
push
lcall
cmp
sub
and
fistps
or
push
mov
aas
outsl
jo
sub
push
jmp
cmp
push
push
icebp
xor
cmp
cs
in
dec
dec
dec
jmp
out
cmp
scas
mov
in
and
mov
xor
cmpsl
and
dec
cmp
jne
xor
mov
push
mov
push
imull
pop
movhlps
lock
and
sbbl
mov
sbb
rol
andb
mov
rcrb
and
xchg
adc
jge
pusha
mov
and
aad
retw
out
insl
fsubrl
je
jbe
and
imul
push
cmp
fnstenv
push
xchg
pusha
pop
clc
adc
xorb
mov
jge
dec
push
sbb
xchg
das
gs
loope
enter
pop
loop
adc
popa
mov
add
pop
pop
mov
loope
inc
adc
and
ja
dec
or
cld
ljmp
xchg
inc
pop
mov
mov
adc
cmc
lock
bound
fadd
cmp
pop
mov
shrl
lret
push
lcall
aaa
mov
jecxz
inc
testb
cmp
cltd
add
mov
imul
mov
jns
pop
stos
inc
jnp
ds
shrb
mov
jae
and
mov
or
pop
repz
aas
cld
xor
adc
fwait
jnp
shll
and
jmp
sbb
dec
pop
add
cmpsl
out
aam
push
mov
adc
dec
mov
add
dec
add
adc
adc
add
jo
jnp
lret
dec
mov
adc
pop
push
out
daa
lcall
push
out
cmp
in
ja
scas
test
dec
mov
popa
out
adc
xor
add
in
mov
loopne
bound
mov
or
cmp
jbe
insl
jge
xchg
mov
sbb
adc
aad
cltd
jae
cld
popa
adc
xchg
push
aas
push
loope
lds
rolb
jmp
mov
jbe
sub
hlt
xor
insl
mov
jbe
outsb
cwtl
sbb
cmpl
jnp
shrl
mov
xchg
inc
pusha
div
mov
sbb
jle
outsb
dec
imul
popf
cmp
mov
sbb
or
cld
xchg
shlb
imul
sbb
xor
dec
mov
add
and
sub
cmpsl
out
dec
push
or
xchg
pop
cmp
mov
mov
fimuls
out
and
inc
fnstenv
jmp
jl
pusha
lea
xor
pop
data16
adc
sbb
lea
mov
pop
mov
adc
mov
push
jae
and
cmp
sbb
xorl
push
mov
lahf
pop
lret
cmp
rclb
jb
mov
ret
inc
pop
js
lret
jno
insb
push
iret
daa
lds
and
fidivl
pop
jg
dec
inc
xor
mov
pushf
fs
int3
shrl
pusha
scas
mov
mov
outsb
and
inc
fmull
jle
sub
call
lock
pushf
pop
hlt
or
ljmp
xchg
notl
add
pop
mov
fimuls
push
mov
mov
in
fstl
or
addr16
or
adc
sub
xchg
jae
scas
sub
cmp
jae
sbb
lods
push
negb
js
aad
jae
jecxz
fxam
jp
fs
sti
int3
mov
das
mov
xor
inc
jmp
test
mov
pop
xor
outsl
pop
jae
xchg
test
notl
and
icebp
mov
xchg
xchg
iret
and
lds
pop
lea
lea
in
sbb
jp
test
pop
or
mov
or
andl
icebp
cs
rolb
fcmovne
pop
out
mov
adc
sbb
ja
jecxz
mov
xor
add
movsb
in
popa
stos
jne
das
pop
in
data16
push
movsb
sbb
xlat
popf
dec
mov
and
xor
movsb
dec
adc
lds
imul
je
lret
push
mov
dec
sub
or
es
mov
push
in
vunpckhps
pop
jb
push
inc
das
adc
cmp
dec
mov
inc
jle
test
imul
cmp
enter
inc
pop
push
sbbb
jl
rcll
leave
xlat
jle
shlb
ss
jecxz
inc
shrb
out
xor
jns
cmovp
sbbb
daa
adc
ret
add
test
pop
nopl
sub
insb
lahf
and
ficompl
jbe
cmpl
xorl
mov
cmpsl
add
push
loopne
mov
push
fsubrl
jp
cwtl
je
xchg
xchg
dec
add
scas
loopne
mov
sbb
sbb
loope
xor
je
push
add
fsubrs
mov
jg
pop
lret
inc
lahf
mov
fnsave
push
push
mov
or
push
or
imul
cmpsl
xchg
adc
add
addl
sbb
add
out
test
cmpsb
push
xor
sub
cs
add
scas
ret
push
mov
outsl
adc
mov
fcoms
cli
mov
mov
mov
xlat
mov
ss
mov
add
xor
xchg
js
add
sarb
xchg
mul
mov
cmp
mov
adcl
test
cwtl
xchg
adc
mov
jns
aad
lahf
push
or
inc
mov
mov
and
jo
cmpb
jge
cmp
push
out
popf
mov
sbb
fnsave
mov
xchg
and
rolb
shll
cmp
pop
dec
jb
mov
enter
jne
scas
lret
mov
sub
cmpsb
sub
cltd
test
fsubl
mov
jno
inc
fisttpl
fcomp
daa
test
frstor
inc
dec
mov
lahf
loop
add
sub
test
lods
pop
mov
push
mov
add
cmp
filds
mov
push
jl
cmpsl
xchg
test
std
sub
mov
pop
mov
gs
sub
mov
push
adc
mov
or
jns
xor
out
jl
decl
jmp
and
fidivrl
shr
sbb
sahf
in
inc
ret
xor
fcoms
das
lods
insb
mov
bound
xor
sbb
fcoms
sbb
fcom
mov
fidivl
mov
in
mov
dec
mov
fsubr
test
sub
mov
xchg
xorl
pop
pop
bound
pop
mov
pop
dec
lret
lods
cli
jno
mov
mov
cltd
sub
sub
cmp
pushl
fisttpll
mov
mov
mov
pop
cmpsb
das
addr16
mov
push
inc
jbe
repnz
fldt
cld
sbb
data16
dec
es
mov
jmp
jmp
sub
mov
adc
test
mov
mov
sub
enter
xchg
mov
rclb
push
fwait
ss
js
lea
jecxz
cli
mov
mov
mov
out
cmpsl
pushf
idivb
scas
adc
cwtl
ja
mov
stc
dec
fistpl
imull
push
loope
int
ja
fsubp
jmp
or
mov
fdivl
cmp
mov
mov
sbb
lds
dec
xor
jbe
loope
jne
cs
xchg
pop
pop
mov
sub
push
insb
leave
ret
xor
out
imul
cmp
in
loopne
scas
xlat
pushf
xor
shr
jle
outsl
in
je
inc
orb
enter
decb
cmpsb
out
fwait
adc
int3
cmpsb
jle
pop
lock
pop
mov
mov
cwtl
popf
sbb
xchg
decb
repz
ret
fistpll
mov
add
jne
imul
inc
and
loop
movsl
mov
cs
cmp
jb
xchg
out
fidivrs
dec
jb
mov
jmp
push
pop
test
in
fadd
cmp
jl
add
fildll
cmp
push
jmp
clc
cmp
xchg
stc
mov
repz
cmp
sarl
sar
sarb
loopne
loopne
shrb
cld
stc
lods
xchg
or
imul
les
and
jae
andl
gs
int3
shr
add
sbb
and
cmpsl
cmp
sub
inc
mov
push
pop
in
sub
cmpsl
lods
stc
sbb
enter
xchg
mov
lret
popf
push
xchg
jae
dec
sbb
imull
loope
or
in
stos
jbe
xor
cltd
jp
mov
aas
outsl
mov
lds
xor
mov
adcb
shrl
negb
inc
ret
pop
imul
out
dec
ljmp
pushf
dec
inc
add
test
ja
sub
jmp
inc
icebp
mov
icebp
cmp
push
dec
rclb
jbe
or
fistpll
dec
scas
add
mov
xor
cmp
ds
out
test
gs
stc
pop
imul
sbb
push
out
sahf
arpl
mov
out
mov
inc
fistl
movsb
dec
shlb
lret
lret
xchg
sbb
adc
jg
lret
pop
rorb
sbb
mov
mov
call
in
dec
dec
push
jnp
mov
ja
add
cltd
je
and
mov
mov
cmp
aaa
push
es
mov
xorl
in
pop
sbb
dec
pushf
mov
leave
pop
push
xlat
jl
push
fs
push
add
lods
outsl
push
fwait
fs
popf
rol
out
int
push
in
insb
icebp
jl
push
mov
frndint
xchg
push
aad
call
cmp
and
dec
in
pop
pop
xor
or
das
jecxz
fwait
popf
out
mov
sbb
adc
aad
mov
mov
and
jns
sub
lods
fistpl
inc
int3
lds
daa
daa
cwtl
xsha1
cmpsb
or
fldcw
daa
pusha
imul
scas
loopne
sti
xchg
mov
sub
ja
ret
push
in
rorl
add
lods
movsl
sti
fs
push
icebp
pushf
push
push
iret
int
add
jg
pop
jno
pushf
loop
lds
mov
sbb
dec
pop
decb
pop
sub
jp,pn
cld
and
and
sbb
mov
jo
lock
fidivs
jmp
cld
xchg
out
cli
push
jne
adc
add
dec
ja
icebp
jae
and
lock
jae
cld
lcall
clc
cmpl
adc
rep
mov
jmp
mov
lock
push
aam
jns
flds
mov
imul
cwtl
xor
imul
jnp
lret
stos
and
jno
ficoml
mov
in
int3
stos
sbb
sub
push
pushf
int
mov
add
sahf
lods
or
ljmp
jecxz
mov
cmp
inc
scas
divl
inc
pop
push
ret
fcomps
ljmp
ljmp
in
add
pop
shrb
popf
hlt
imul
jge
ljmp
adc
or
scas
int
sahf
leave
jno
push
scas
movsb
repnz
gs
movsl
enter
pushf
jmp
push
push
cmp
stc
int
jle
push
dec
dec
adc
adc
pushf
xorb
lcall
mov
js
fnstenv
rcrl
in
jp
push
xor
imul
incl
js
clc
roll
pop
xor
pop
mov
xor
mov
push
cwtl
xchg
add
inc
cwtl
incb
adc
stos
sbb
add
sbb
ret
mov
sbbb
leave
or
int3
dec
loop
inc
jge
scas
ljmp
in
xor
cmp
add
sub
jns
ljmp
out
insl
inc
dec
mov
push
dec
dec
mov
mov
cmp
cmp
jecxz
fstp
mov
fdivr
cld
xchg
pop
aaa
xlat
imul
inc
gs
lret
adc
pushf
inc
xchg
cmp
add
loop
push
pop
cmp
roll
lock
and
mov
ret
mov
sbbl
in
sbb
repz
test
jl
and
bound
lcall
cwtl
jno
cltd
adc
dec
or
test
inc
psrlw
int
ret
js
pop
xchg
dec
dec
jb
push
inc
pop
and
addr16
cwtl
pop
cmc
dec
pop
dec
add
addr16
fistps
add
jns
jnp
inc
push
inc
sub
jbe
xchg
xor
sbb
mov
xor
rclb
jmp
negb
hlt
ds
mov
stos
insl
shll
fdivs
lock
clc
push
sub
xor
clc
xor
mov
xchg
in
pushf
out
inc
push
sbb
int3
nop
jg
sub
xchg
xchg
loope
out
mov
enter
mov
loopne
std
mov
mov
xchg
and
cmp
push
ror
jl
mov
mov
stos
decl
pop
or
xchg
sbb
dec
imul
fisttpll
xor
syscall
out
pop
hlt
mov
loopne
ss
sub
mov
aaa
out
outsb
dec
mov
insl
and
mov
lret
push
add
addl
inc
pop
rcll
int
xchg
hlt
out
and
icebp
dec
pop
insl
cmpsl
std
xchg
jns
je
inc
lret
cmpsl
ror
push
lcall
cwtl
test
push
je
lds
je
test
lret
xchg
scas
int
js
cmp
scas
out
inc
sbb
mov
pop
cmp
lods
sbb
dec
pop
outsb
dec
fdivl
nop
jmp
aas
jnp
or
jle
jecxz
xchg
pop
mov
xchg
rclb
add
ds
jge
lret
cmc
lea
pop
stc
push
hlt
push
repz
cmc
lret
push
movsl
mov
loopne
jmp
pop
adc
push
pop
in
push
clc
mov
out
inc
push
or
mov
pop
test
dec
fidivrs
xchg
mov
stc
xlat
xor
mov
jl
std
popa
mov
or
arpl
push
cmpsl
ds
in
pop
lcall
cltd
test
imul
fld
shlb
in
and
lods
test
repz
js
mov
pop
in
and
imul
mov
out
cmp
ss
sbb
xchg
or
push
mov
cmc
shll
pop
imul
jne
add
clc
adc
aas
arpl
cmp
lods
adc
or
mov
popa
or
xchg
pop
les
popf
addr16
pop
scas
in
xor
add
xor
sub
repz
ja
sub
and
test
mov
stos
jae
les
inc
cwtl
lock
shrb
roll
mov
mov
arpl
or
loop
imul
xchg
adc
dec
in
jbe
out
push
lret
jno
cmpb
jmp
pop
hlt
jmp
xchg
fsubl
mov
dec
aaa
or
push
jns
push
test
push
out
negb
push
dec
cltd
lahf
sbb
mov
cmp
in
insl
sub
mov
push
movsb
lea
xchg
sbb
les
aaa
neg
dec
inc
ret
pushf
pop
fistps
and
mov
das
in
je
and
es
lods
pushl
xor
add
jns
xchg
lret
scas
pop
in
aas
mov
pop
and
test
inc
push
stos
mov
imul
dec
mov
jno
ret
push
movsb
js
xchg
sub
add
stc
pop
pop
adc
pop
stos
xchg
add
sbb
arpl
pop
inc
jns
jnp
add
dec
pop
pop
lahf
or
pop
lea
adc
jno
pop
in
les
addr16
imulb
xor
cmp
rorb
pop
sbb
dec
mov
and
dec
sub
push
jb
pusha
rorl
insb
popf
dec
out
add
jmp
mov
mov
leave
int
es
lods
test
addr16
scas
fstps
stos
jns
cmc
pop
mov
xchg
fdiv
cmp
test
test
lret
fnstsw
pop
fists
mov
jne
mov
shlb
data16
xchg
add
inc
dec
push
insb
mov
test
jge
jns
imul
pop
jl
sti
in
mov
pop
push
in
shrl
jb
cmpsl
shrl
jb
iret
push
call
mov
dec
cli
mov
jnp
loopne
sbb
mov
fwait
or
jmp
scas
inc
mov
mov
jle
test
je
xchg
iret
dec
dec
jnp
mov
cmc
adc
or
mov
push
ret
ja
inc
mov
out
lds
dec
mov
sbbb
add
inc
xchg
repnz
mov
jge
inc
push
out
sbb
mov
xor
pop
sbb
fnstsw
data16
insl
aad
pop
add
add
pop
sahf
fdivl
mov
and
out
sar
lds
lahf
jbe
arpl
addb
add
sbb
mov
in
push
lcall
push
insl
push
add
jo
inc
xor
xchg
pop
push
stc
aad
mov
ljmp
cs
int
mov
lcall
pop
push
push
xlat
je
jg
add
jmp
lret
lock
lea
data16
mov
push
xor
jno,pn
les
dec
jp
pusha
adc
imul
call
mov
sub
pop
lods
lret
rolb
int3
test
fdivr
push
jmp
jg
jno
bound
stos
inc
adc
pop
icebp
mov
out
das
xchg
aas
fdivs
xor
test
inc
inc
aas
push
subl
js
adc
in
xor
aam
fwait
shrb
adc
inc
push
mov
out
aam
mov
push
sbb
mov
lods
push
fnstsw
mov
fs
test
mov
xchg
or
int
jo
cwtl
xor
imul
lcall
lahf
loope
enter
jmp
in
add
in
add
leave
xchg
xchg
push
insl
dec
movsl
adc
push
sub
stc
scas
xor
inc
pop
jb
pushf
mov
int
decb
jns
dec
sti
inc
pop
pop
fidivl
add
ja
or
cmpsl
jg
jno
adc
inc
mov
ret
mov
hlt
mov
inc
das
or
push
mov
xchg
xchg
push
adc
hlt
aas
mov
addr16
out
in
add
mov
or
push
pop
and
dec
mov
xchg
xchg
call
in
and
xchg
xchg
test
lods
imull
in
sbb
ja
hlt
stc
sub
les
xor
jl
mov
enter
sbb
pop
jg
cmp
fnsave
xlat
das
lods
pop
adc
xor
adc
lods
xchg
jno
push
dec
cmp
lahf
lods
aaa
outsb
jecxz
push
jno
enter
scas
repz
mov
xor
adc
or
xchg
add
pop
popf
sbbb
cmpsl
in
dec
divl
int3
sbb
add
pop
xor
mov
mov
ficompl
add
gs
xchg
rorl
pop
icebp
aas
lock
mov
clc
inc
sbb
xor
insl
insb
je
mov
jg
cli
fldt
dec
out
aas
fcmovu
xor
in
mov
adc
pop
icebp
mov
out
sbb
aaa
jge
jecxz
jmp
adcl
gs
imul
sub
outsl
adc
sub
sbb
fadds
jle
inc
cmp
push
push
add
push
xchg
mov
or
mov
jmp
push
imul
ljmp
lcall
or
or
stc
mov
cmpsb
mov
lods
out
popa
inc
mov
push
test
dec
aas
jp
dec
in
ror
mov
jecxz
adc
jne
insl
mov
nop
fistpll
sbb
add
aad
out
mov
decb
in
cmc
push
lock
or
jl
push
mov
mov
add
lea
cli
popl
or
fcmovne
dec
xchg
pop
in
push
jmp
adc
inc
das
jb
jp
sbb
mov
pop
movsb
mov
into
call
xor
cmp
jno
xchg
jb
xchg
cltd
and
aam
mov
std
push
stos
mov
fistl
cmp
cmp
pop
and
pushf
fstps
push
icebp
movsl
add
and
pop
fwait
testb
push
idivb
sbb
test
ret
add
repnz
lds
push
aaa
dec
cmpb
rcll
test
or
fsts
add
cwtl
movsb
stos
mov
inc
enter
inc
loope
mov
stos
scas
rcll
inc
dec
rcr
and
inc
mov
pop
inc
jecxz
lock
movsb
pop
fistl
outsl
in
mov
pop
das
xchg
outsb
out
cli
cltd
cmp
cmc
addb
scas
mov
mov
popa
pop
insl
xchg
pop
stc
popf
rorb
adcb
mov
nop
cld
in
add
mov
xchg
mov
ds
mov
fs
xchg
dec
mov
scas
xchg
cmp
mov
rolb
lea
push
bound
mov
push
enter
sbb
jge
insl
mov
pop
out
xor
inc
ljmp
rcl
addr16
bound
loop
rorb
in
and
hlt
jle
mov
and
mov
fwait
movsl
xchg
flds
xchg
dec
loope
push
jno
insb
js
popf
sbb
xchg
sbb
pop
repz
clc
and
in
or
jp
cmpsl
nop
iret
xbegin
dec
pop
lock
push
or
add
int3
mov
sti
pop
jae
js
mov
negb
dec
movsb
aaa
fwait
imul
jge
cltd
stos
jae
jne
les
aaa
adc
or
mov
cltd
loope
mov
xor
frstor
cmp
std
or
fucom
cmp
mov
mov
movsl
popa
lods
mov
cmp
arpl
ffreep
xchg
rcrl
lods
jl
roll
dec
fildll
lret
sub
mov
insl
push
mov
or
mov
xchg
inc
and
bound
aam
pop
inc
lock
lock
mov
adcl
pop
cltd
push
push
iret
fwait
ja
stos
movsb
seta
push
aaa
mov
gs
sub
jns
das
insl
sti
dec
pop
clc
js
adc
js
xlat
insb
xor
mov
mov
subl
out
sub
int3
imull
lods
add
sub
aas
das
test
mov
pop
mov
xor
enter
mov
aam
ficoms
cld
and
push
fdivp
dec
mov
and
clc
int3
sbb
xor
mov
aas
outsb
jl
dec
dec
dec
lods
push
push
ja
dec
push
ror
cwtl
in
js
inc
push
cld
jne
imul
add
cld
addb
gs
xor
xchg
fnstsw
inc
ret
outsb
ja
jle
mov
insl
xchg
sub
push
push
or
data16
js
or
or
loopne
xor
in
std
xchg
shrl
adc
pop
int3
insl
mov
jl
test
pop
scas
arpl
scas
mov
stos
outsb
mov
shrb
push
fdivrl
lcall
jg
adc
inc
sbb
out
inc
out
inc
es
popa
xlat
dec
xchg
adc
sbb
xchg
adc
mov
mov
mov
rol
movsb
je
ds
adc
dec
xor
push
in
mov
and
sub
roll
fisubrs
cmp
or
push
jae
clc
xor
xchg
mov
mov
inc
jmp
outsb
clc
sub
jo
rcl
xchg
xchg
mov
mov
xor
inc
fsubrs
cmp
jb
inc
testb
dec
lret
fstl
imul
imul
lahf
mov
rcll
mov
movsl
lock
dec
or
loop
add
imul
push
mov
add
les
sub
shrb
mov
xchg
loop
repnz
jl
cmp
sbb
xor
mov
aaa
mov
es
xor
shlb
sahf
lret
mov
std
mov
mov
xorl
adc
repz
lcall
jno
dec
sub
push
pusha
in
dec
stos
add
adc
jle
rcrb
cwtl
inc
popa
add
mov
inc
jg
jb
xchg
jle
push
sbb
lret
jne
out
popa
and
js
push
test
mov
xor
add
pop
call
mov
mov
div
jle
and
out
ret
les
sub
inc
lods
sbb
iret
movsl
mov
dec
dec
aad
inc
add
movsb
jnp
sbb
jge
sahf
sahf
sbb
dec
mov
mov
jnp
pop
mov
inc
loopne
mov
test
lock
sub
popa
sbb
push
dec
cmpsl
push
hlt
push
cwtl
sbb
in
push
lret
jg
out
sub
enter
adc
test
lret
movnti
pop
pushf
mov
xchg
push
popa
pop
adc
sti
cli
push
shll
jo
jns
jns
mov
xchg
sub
add
dec
pop
push
push
sbb
movsl
data16
lret
add
testl
xor
push
jns
adcl
dec
in
in
jo
xorl
pop
sti
dec
call
std
aaa
xchg
adc
gs
lret
push
mov
mov
xlat
pop
lcall
loopne
in
dec
xchg
adc
push
pop
rorb
les
pop
jecxz
sbb
mov
stos
xchg
cmpsb
cmpsb
in
and
xchg
jno
dec
dec
xor
je
xor
mov
push
mov
ljmp
pop
scas
mov
and
dec
push
imul
lods
int3
fs
jns
pop
mov
sbb
xchg
cltd
xchg
dec
sbb
sub
jns
leave
pop
lock
and
xchg
add
nop
lret
mov
xor
jmp
mov
sub
mov
and
dec
pusha
shlb
and
pushf
mov
mov
into
dec
int3
fimuls
in
fs
ud0
adc
lock
jg,pn
cwtl
fnsave
adc
and
jno
jno
cmpsl
out
lret
cmc
imul
xchg
mov
cmc
call
inc
sbb
ss
push
fwait
bound
dec
pop
mov
adc
cmpsl
ds
xor
ds
lds
int
mov
mov
mov
insb
ret
out
jle
cs
xlat
stos
loope
jb
divb
in
xchg
dec
jne
inc
pop
imul
push
xor
movsl
cmp
imul
js
pcmpgtd
mov
std
aam
jle
mov
xor
jg
je
leave
mov
lds
int3
mov
scas
mov
into
and
pop
xchg
lods
jl
or
out
jo
clc
adc
sbb
insl
mov
adc
jno
test
add
mov
jecxz
mov
xchg
pop
cmp
push
xlat
pop
xor
ljmp
jecxz
pop
lcall
stos
and
jmp
rclb
cmp
xchg
add
shrl
sbb
push
inc
sti
inc
add
mov
xchg
inc
inc
xchg
mov
inc
into
test
adc
xchg
inc
daa
popf
xor
popa
push
fnsave
inc
add
cmp
rol
dec
or
or
sbb
mov
stos
out
xchg
fsubs
out
dec
sbb
outsb
add
cmp
adc
rcrl
loop
idivb
jecxz
popa
les
aad
lret
inc
and
jbe
adcb
or
xchg
pop
enter
js
sub
sbb
add
dec
repz
sub
mov
mov
sahf
adc
mov
fnsave
lods
int
ficoms
cwtl
fcompl
out
les
cmp
and
mov
lret
rolb
xor
loop
nop
aam
test
push
hlt
imul
xchg
data16
pop
movsb
shll
push
rol
jp
loopne
jge
sbb
insb
cmp
or
mov
jno
popf
call
mov
dec
mov
or
sub
das
call
scas
push
mov
ss
fdivr
out
es
call
inc
sub
into
fdivrp
or
lods
adc
or
cmpl
or
daa
pop
inc
inc
push
and
and
mov
das
cmp
pop
lret
popa
je
cmp
push
xchg
call
jb
sub
stc
push
dec
push
xchg
sub
das
out
push
xchg
sti
dec
xchg
es
xor
into
jmp
pop
outsb
and
cmp
pop
mov
cltd
inc
movsb
push
out
aad
cltd
jg
mov
dec
sub
hlt
popa
arpl
mov
mov
ret
into
adc
adc
les
std
xchg
jge
subb
add
addb
mov
lahf
imul
inc
xchg
jecxz
mov
mov
fbld
inc
or
mov
xchg
sub
jno
bound
mov
mov
add
adc
mov
test
rorl
sahf
adc
sub
movsb
ss
mov
orb
jbe
call
lret
fisubrs
das
lcall
cmp
mov
adc
inc
mov
imul
jl
ret
lret
mov
imul
jns
std
sarb
lret
mov
mov
sbb
lcall
insl
in
fs
andl
hlt
mov
add
pop
loop
sbb
fldl
call
dec
cmp
shlb
and
xchg
sbb
xor
fbstp
popa
mov
test
cmp
aas
daa
xchg
js
cmp
lcall
out
arpl
fadds
or
leave
pop
push
das
int3
repnz
fnsave
jg
mov
fpatan
cltd
or
push
xor
pop
sbb
xchg
test
rcl
dec
dec
lock
adc
inc
insl
sbb
shlb
and
lahf
push
aas
cwtl
lods
push
out
mov
xchg
cli
inc
fldt
mov
sub
cmc
adc
daa
mov
jae
jle
xlat
imul
repnz
pop
push
cld
sub
in
js
mov
and
inc
fnstsw
cld
inc
mov
push
outsl
mov
into
push
push
pop
and
lahf
stos
jl
adc
push
xchg
xor
pop
cmpsl
fdivl
sub
movsl
rcl
les
mov
jmp
test
ret
stos
dec
in
or
int3
dec
loope
pop
movsl
repnz
jg
jne
sub
lods
fisubl
xor
mov
dec
xlat
xor
imul
cmp
setnp
aad
sbb
pop
add
dec
fsub
arpl
mov
rorl
mov
xchg
adc
cmc
mov
add
stos
inc
dec
icebp
mov
call
ja
xor
call
xchg
mov
dec
inc
mov
mov
sub
fstl
xor
adc
out
pop
pop
lock
or
mov
xchg
sub
mov
pop
jbe
sub
sub
fldcw
xor
jne
sbb
cmpsl
dec
lea
cmp
mov
push
imul
mov
mov
jbe
loop
data16
es
idiv
out
inc
cmpsl
mov
stos
mov
add
sbb
lds
data16
cmp
sahf
lods
mov
cmp
les
xchg
adc
cli
jge
push
jne
mov
add
or
fdivl
into
sub
sar
xchg
ret
ljmp
ljmp
stos
push
cmpsb
fsave
push
loope
mov
fidivl
mov
je
adc
repnz
test
test
shlb
xlat
mov
in
xor
insl
sub
outsl
mov
add
or
das
mov
jecxz
and
adc
push
push
dec
loop
clc
rorl
push
nop
push
adc
xchg
sarl
xchg
sub
xor
loop
repnz
shrb
repz
aas
mov
pop
dec
lock
insl
add
out
leave
jno
mov
ret
idivb
lea
mov
loopne
loop
das
int3
ficomps
cli
imul
xor
xlat
pop
xchg
jmp
cmpsb
test
imul
repz
lea
jns
fwait
stos
and
dec
dec
add
mov
and
jne
add
sub
mov
add
int3
pop
cmp
test
shll
lcall
mov
negl
xor
out
sahf
movsb
inc
test
scas
lods
inc
push
mov
lcall
loop
sbb
jg
pop
pop
stos
cwtl
mov
or
fstpt
dec
adc
xor
stos
pop
lods
dec
dec
cmp
dec
and
mov
ljmp
insb
sbb
loopne
push
xor
scas
outsl
add
jg
daa
pushw
xchg
in
dec
push
lret
xchg
addr16
and
xor
mov
test
stos
ja
sbb
mov
inc
icebp
mov
hlt
adcl
add
repnz
xchg
mov
add
xchg
cmp
or
pop
fbstp
push
mov
push
sub
sbb
loope
imul
sub
mov
ret
sbb
jmp
xor
and
mov
adc
insb
add
popf
xor
in
out
scas
int3
mov
loop
jo
adc
or
pusha
ds
roll
push
pushf
inc
orb
lret
jae
cmp
das
xchg
xor
stos
sbb
adc
daa
js
enter
daa
push
mov
jo
jmp
jae
inc
jl
test
or
fbstp
out
stos
jl
push
fisubrl
clc
jb
js
xchg
pusha
cld
push
arpl
ret
cmpsl
lods
xor
mov
out
mov
je
mov
inc
aad
in
imulb
push
sub
lret
sarl
mov
mov
mov
cmc
mov
mov
mov
dec
insb
xlat
jmp
das
fisubl
dec
pop
leave
add
bound
push
movsl
jno
ja
jb
enter
fs
add
sbb
in
lock
pop
dec
add
roll
jge
adc
lods
fdivrs
pop
dec
dec
jno
addr16
mov
aaa
cld
jns
xchg
or
testb
sub
andl
jle
pop
rcrb
cmpsl
fcomps
fnstsw
xchg
mov
inc
fs
jge
orb
cmp
pop
inc
pop
lret
shl
mov
sbb
lock
rorb
push
sub
mov
cmpsb
in
inc
lcall
xor
adcl
mov
repz
jae
fisubl
or
es
adcb
sbb
xchg
sub
dec
cmp
sub
dec
and
adc
sub
cli
or
cmpsb
pop
into
pusha
pop
aam
xlat
inc
int3
cmp
call
iret
or
jne
jge
inc
pop
jg
jns
scas
push
xchg
shrl
mov
faddl
sti
aad
mov
add
jbe
xor
fists
inc
jae
std
fsts
mov
push
cwtl
mov
imul
imul
adc
pop
mov
xchg
pop
inc
pop
xchg
add
sbb
add
mov
inc
xor
shlb
xchg
iret
cmpsb
fcomps
pop
mov
loope
insb
mulb
enter
dec
call
xlat
rcll
pop
pushf
jne
loopne
adc
dec
repnz
xor
dec
psubw
mov
dec
pop
lret
or
cmpsl
fisttpl
mov
gs
idiv
popf
aas
mov
movsl
push
outsl
daa
dec
outsb
inc
inc
pop
fcomps
push
jnp
inc
mov
mov
mov
shlb
repz
outsl
sbbl
fidivs
xchg
add
fisubrl
mov
sub
or
shr
inc
in
aaa
mov
inc
ret
fists
jno
jp
xor
divl
xchg
mov
dec
cmp
scas
mov
shrb
pop
mov
add
fnstsw
sub
mov
dec
lahf
jnp
rcrl
hlt
jle
or
sub
sub
xchg
idivb
mov
cld
icebp
pop
ficoms
and
rcll
repz
pop
lock
aam
inc
push
sub
push
daa
xchg
sub
outsl
lahf
mov
xor
dec
shll
inc
xchg
dec
iret
ss
fldenv
mov
inc
push
scas
inc
xchg
in
outsl
les
pop
shl
jb
cmc
stos
cmp
adc
fisubrl
testb
in
dec
xchg
add
ja
mov
enter
jle
pop
and
dec
pop
daa
mov
pop
pushf
scas
mov
gs
ret
adc
fmuls
mov
inc
into
cmp
jle
dec
enter
pop
cmp
int3
xchg
sub
pop
stos
call
int3
xor
mov
inc
mov
jge
scas
scas
loopne
dec
dec
dec
in
jle
push
or
push
add
int
lahf
jb
push
mov
insl
fcmovu
inc
or
shrb
mov
jae
out
in
jmp
jno
lcall
and
cltd
sbb
and
mov
pop
sub
dec
sahf
cmp
cmp
mov
subl
scas
test
loopne
sbb
mov
jecxz
jecxz
leave
mov
mov
mov
jle
jmp
xor
mov
mov
pop
push
xor
ret
loopne
sbbl
dec
xacquire
mov
push
inc
cmp
xlat
inc
aas
std
adc
test
adc
inc
int
lcall
cwtl
xor
push
fldt
push
cmpsl
xchg
pusha
xchg
mov
adc
sub
pop
popf
cmpl
sub
adc
sbb
pop
inc
iret
outsb
jecxz
pushf
rorb
hlt
mov
mov
mov
test
add
push
cmp
popa
dec
fiaddl
inc
out
scas
push
subl
mov
cmp
cmp
mov
add
popa
imul
sbb
scas
fnstcw
xor
mov
xlat
in
dec
sbb
popa
mov
pop
movsl
push
add
xchg
hlt
jecxz
cmp
adc
mov
or
mov
stos
subl
and
xor
cmc
mov
inc
loop
mov
int
ror
aaa
gs
xor
pop
cmpsb
jns
pop
mov
jnp
add
int
fnsave
jmp
movsl
sbb
ror
jge
stos
cmpsb
mov
fadds
and
mov
rcrl
leave
mov
jo
push
int
ss
and
adc
push
or
mov
inc
aaa
std
or
fst
sub
es
rclb
xchg
or
or
push
pop
lods
ljmp
mov
mov
xchg
daa
sub
jbe
cmp
repnz
addr16
idivl
adc
subb
jmp
push
pop
out
xor
icebp
leave
jae
xlat
mov
leave
je
lods
cmpsl
dec
mov
fst
ret
push
sub
pop
addb
fdivr
shrl
xchg
jmp
xor
pusha
rorl
xor
push
dec
xor
popl
gs
daa
lea
cltd
and
iret
xchg
push
or
or
out
mov
sbb
test
mov
shll
adc
divl
fidivrs
inc
out
inc
decl
fs
sbb
inc
ret
add
mov
jmp
aaa
add
fidivl
scas
ljmp
push
sub
pusha
repz
out
mov
or
mov
inc
hlt
dec
lods
jg
mov
int
fnstenv
mov
aaa
or
sahf
clc
mov
mov
stos
jp
insl
lcall
test
icebp
int3
es
pop
cmp
test
jmp
add
lret
hlt
push
xchg
mov
dec
fwait
sub
and
jge
mov
mov
imul
mov
iret
adc
movl
mov
fildll
nop
sub
pop
mov
in
stos
xchg
pop
pushf
loop
xchg
loop
push
push
or
pop
mov
sbb
mov
fimuls
pop
js
loop
hlt
fs
or
sub
pop
pop
pop
out
fisttpll
fstpt
add
xor
xorb
ret
hlt
repz
sbb
hlt
cmp
movsb
mov
and
cld
xchg
es
mov
and
cmc
push
leave
push
decl
rcrl
das
inc
cmp
jecxz
test
dec
enter
cmp
imul
jg
fwait
aam
cltd
push
test
mov
inc
in
mov
xlat
imul
fistpl
arpl
cmpsl
call
ss
enter
fisubrl
lds
out
and
movsb
imul
shll
sbb
inc
ja
es
pop
jb
test
jecxz
adc
ss
mov
inc
mov
testl
cmp
inc
pop
insb
cltd
lods
xchg
lds
and
lret
shll
sbb
mov
add
scas
stos
xchg
sub
movsl
sarb
add
cmpb
mov
xor
imul
bswap
sbb
orb
movsb
dec
imul
cmc
pop
imul
out
adc
and
push
in
leave
jle
out
lods
call
out
fbld
jp
rolb
xor
fidivs
xchg
or
stc
fs
pop
ljmp
call
or
sub
adc
insb
inc
or
inc
and
pushf
or
nop
leave
ljmp
cmp
les
xor
xchg
es
xchg
push
sti
hlt
idivl
outsl
ret
pop
out
adcl
inc
mov
or
mov
mov
dec
adc
sarl
xchg
push
dec
dec
out
xchg
and
ret
pop
inc
pop
mov
insl
pop
cmp
daa
aaa
add
dec
dec
mov
sub
dec
insb
js
aas
mov
xchg
ret
rorl
jg
and
dec
pop
adc
sub
lds
and
xchg
dec
leave
sbb
arpl
xchg
shlb
jge
push
lods
outsb
push
mov
ss
push
jmp
stos
xchg
lret
sarb
and
fcoms
xor
inc
mov
push
lcall
insb
inc
push
outsl
fadds
push
add
fbstp
add
push
das
add
aas
mov
mov
push
inc
fdivs
leave
movsl
and
insl
fdivrs
xor
ds
jno
mov
adc
shrl
in
push
aam
hlt
cmp
idivb
adc
das
cmp
stos
test
fdivrl
xchg
or
dec
ljmpw
rclb
push
ljmp
std
jbe
popf
push
and
addr16
setp
cwtl
xor
sub
shlb
stc
sbb
dec
fiaddl
add
pop
lds
shll
push
out
mov
mov
xchg
mov
sahf
dec
sarb
arpl
inc
ljmp
sbb
loope
xchg
hlt
mov
movsb
sbb
sub
scas
add
jg
or
inc
test
les
js
and
push
ds
dec
dec
shl
les
lods
inc
ljmp
xor
or
mov
or
pusha
mov
fadd
outsb
pop
jl
dec
outsb
outsb
or
adc
clc
jnp
sub
test
stos
in
pop
imul
adc
pop
xchg
dec
cli
icebp
mov
ljmpw
add
mov
test
sti
mov
cltd
push
test
sbb
loopne
ss
rcrl
jno
aaa
aad
rolb
test
pop
stos
in
cmp
push
mov
call
mov
push
cmp
addr16
pop
xchg
jl
pop
icebp
fistps
and
mov
pop
cmp
ljmp
push
mov
icebp
mov
sub
subb
adc
leave
int
push
out
pop
jp
jmp
jnp
inc
inc
xor
pop
push
movsb
inc
ficoms
sbb
scas
cld
lcall
addps
dec
aas
ja
aaa
bound
pop
dec
pop
or
mov
sbb
mov
xlat
mov
or
jne
int
mov
cmp
ret
mov
jo
rep
jle
repnz
test
shl
sbb
clc
jae
rcrl
mov
std
lea
jbe
cmp
adc
dec
pusha
xor
cwtd
fisubrl
xor
xchg
addl
aam
dec
sbb
fisubrs
daa
je
es
mov
aam
loopne
adc
leave
mov
rcrb
icebp
cmp
pop
testb
and
call
gs
jg
jge
jmp
inc
loope
cmp
movsb
push
inc
mov
push
dec
inc
gs
lods
add
rclb
push
movsl
sub
fsubrp
add
sub
jmp
xor
push
mov
inc
loope
es
test
pop
fbstp
enter
push
popf
mov
lea
xchg
stc
add
sub
pop
and
cld
xor
xor
pop
xchg
and
outsb
cs
in
pop
mov
xchg
data16
out
pop
push
and
aaa
jle
mov
sbb
xlat
sbb
sbb
inc
fucomp
stos
cmpsb
cld
ret
xor
call
mov
inc
insl
mov
inc
add
xchg
imul
pop
addl
xor
sar
incl
pop
inc
push
sbb
or
jl
mov
cmp
jg
jb
pop
lock
aaa
dec
ret
xorb
or
and
loopne
insl
push
fstps
and
mov
cmp
pop
jecxz
pop
imulb
add
or
add
sub
pop
movsl
aas
dec
decb
jge
push
mov
shlb
addr16
faddl
jno
std
lods
in
sbb
pop
push
call
sub
sbb
mov
and
xor
int3
dec
push
call
outsl
push
or
mov
es
inc
and
pop
dec
add
stc
and
mov
clc
mov
sub
in
test
mov
addb
out
push
push
jnp
repnz
fisubrl
xchg
add
out
sbb
push
xchg
aaa
jbe
ss
mov
and
data16
adc
das
adc
cs
push
iret
dec
sub
add
xchg
push
test
imul
insl
mov
pop
outsb
daa
lcall
repz
mov
jle
xlat
push
ficoms
aaa
fdivrl
cmp
outsl
daa
pop
fmul
popf
mov
pushl
sub
jp
mov
in
pop
iret
dec
push
aas
ja
insb
push
add
orl
cmc
in
mov
or
sahf
sbbb
add
cmp
mov
adc
xor
orl
xchg
adc
sbb
push
dec
aaa
push
ret
ret
add
xchg
sbb
int3
push
xlat
add
mov
xchg
xor
pop
xchg
sub
shl
mov
inc
pop
pop
lock
fs
mov
icebp
das
and
cmp
out
decl
push
sbb
add
pop
andl
push
test
js
popa
pop
lret
or
scas
jns
xor
negb
addl
adc
call
or
je
and
cmp
iret
subb
mov
jecxz
mov
cmc
dec
cmpsb
mov
repz
sub
mov
xor
xchg
adc
sbb
or
mov
and
adc
adcb
push
stos
in
out
test
inc
movsb
xchg
mov
mov
sbb
push
sub
in
test
in
jb
mov
xlat
dec
mov
mov
sub
out
xlat
outsb
das
lahf
testl
sbb
pop
jmp
mov
jbe
dec
sbb
shll
inc
pop
or
xchg
add
sbb
adc
div
and
mov
ficoml
xchg
ljmp
cmp
shrl
sbb
xorb
mov
dec
dec
dec
jle
fucomp
push
cmp
pop
rcll
repnz
and
mov
out
add
dec
popf
pop
scas
adc
mov
xor
mov
add
inc
aam
push
push
push
shr
or
sarb
shrl
fwait
std
lods
cld
jne
sub
sbb
push
inc
sahf
xor
iret
pushw
pop
xchg
adc
pop
jmp
je
outsb
cmp
jno
inc
cmp
mov
dec
fisttps
mov
or
cmpsl
nop
xchg
fiadds
xlat
inc
fs
out
cwtl
inc
mov
xchg
imull
and
inc
cmp
adc
add
add
fmul
lret
das
lds
xor
lods
jecxz
xlat
out
adcb
pusha
hlt
cmp
out
lods
faddl
cmp
adcb
push
lahf
xor
mov
mov
dec
mov
fcompl
jge
ds
int
pop
outsl
cmp
imul
dec
mov
ja
daa
fs
call
sbb
out
sti
push
cmp
add
cmp
rcrb
inc
or
sub
scas
jae
in
adc
xor
rclb
jle
pushf
pop
in
inc
inc
data16
push
mov
push
adc
or
lahf
sub
stos
adc
aad
lea
jecxz
ss
adc
fstpl
inc
out
test
imul
dec
jo
pop
push
aas
arpl
pop
mov
jmp
pop
rorl
mov
mov
pop
cmp
lods
lock
loop
leave
leave
divb
nop
daa
jbe
jmp
pop
ja
nop
pop
cmpsl
push
adc
clc
push
xor
jp
test
xchg
mov
cmc
mov
scas
mov
sbb
mov
cmpsl
incb
mov
xchg
mov
sar
fnsave
push
adc
push
xchg
pop
test
in
sbb
sub
sbb
fcoml
and
jmp
jmp
out
imul
incb
jecxz
mov
data16
aam
push
leave
lcall
lock
and
jp
popa
inc
movsb
jg
xchg
pop
add
bnd
sarl
jno
in
lods
fimull
ds
ficoml
xchg
mov
sti
hlt
fisubl
in
xchg
sti
repz
add
pop
push
test
sbb
xlat
jbe
ret
cwtl
addr16
adc
sahf
push
sub
popa
mov
jl
mov
ret
and
jecxz
imul
or
push
jmp
lahf
add
call
jle
cwtl
mov
test
idivl
sub
add
xchg
mov
pop
aaa
mov
mov
mov
pop
les
lods
cmpsb
in
lahf
int3
jno
inc
sbb
faddl
in
pop
icebp
push
mov
sub
push
push
adcb
jns
xchg
dec
mov
mov
sbb
pop
inc
fimuls
insb
mov
push
mov
movsl
cmp
pop
adc
ds
shrl
call
push
jne
push
popf
push
adc
sub
call
jecxz
push
ret
fwait
xor
popf
xorb
popa
mov
mov
data16
xchg
cwtl
and
jae
dec
jns
jp
cli
xchg
xor
rcrb
dec
xchg
insl
fisubrl
shlb
jnp
js
repz
and
inc
jp
ja
into
fdivrl
pop
xchg
sub
mov
pop
cmc
xlat
outsl
pop
add
mov
faddl
sub
xchg
mov
mov
jno
cmp
push
jge
in
cmp
cmp
cmp
jg
loopne
in
repz
xor
jmp
cmp
jnp
cmp
fmul
fistpl
loop
ret
dec
in
lods
sarb
add
xchg
dec
dec
xchg
or
cltd
cmc
cmp
xlat
outsb
filds
js
cmpsb
inc
cmc
jge
sbb
jl
xor
cmpsb
loop
or
icebp
cli
push
cld
cmp
popf
lea
scas
jne
jo
adc
jno
pop
dec
pop
das
clc
push
int3
lahf
mov
sbb
xchg
cltd
add
int3
test
es
and
inc
cmp
jnp
mov
inc
lds
adc
clc
sbb
ret
pop
fdivrs
pushf
adc
jae
mov
pop
add
loopne
jno
xor
sub
sbb
sbb
enter
xor
cld
idiv
xchg
filds
push
or
stos
test
lcall
and
mov
mov
pop
scas
pop
push
adc
test
loopne
or
mov
test
mov
cmp
cmpsl
mov
enter
sub
das
xor
daa
inc
stc
push
mov
jne
test
jb
addr16
or
sti
stc
nop
sub
lds
shl
clc
mov
scas
pop
pop
xchg
adc
sbb
cmp
mov
outsl
inc
mov
pop
lock
movsl
in
jg
les
adc
sahf
sbb
js
imul
pop
stos
fnsave
sub
das
sahf
sub
dec
frstor
in
cmp
imul
andl
aam
push
out
shll
lcall
adc
push
fisubl
pushf
das
ret
data16
pop
insb
popa
jbe
mov
test
subl
mov
xchg
repz
adc
int3
adc
mov
inc
adcl
mov
outsb
sub
pop
fdivr
or
jnp
sahf
mov
rcr
add
jae
lds
cmp
pop
dec
jo
cmp
push
mov
mov
call
ds
xor
outsl
add
arpl
loop
std
mov
cwtl
icebp
leave
pop
out
cli
adc
test
decb
lods
ljmp
loope
push
stos
test
std
ja
sbb
pop
mov
cmp
cmpsl
pop
in
mov
push
fisttps
in
std
inc
data16
mov
xor
push
cmp
outsl
add
sub
add
pusha
movsl
and
mov
iret
or
mov
aas
adc
leave
sarb
ret
cmpsb
jle
xlat
lret
xchg
int
cltd
cmpsl
loop
cmpsl
push
repz
cmp
enter
dec
scas
sarl
sbbl
fistpl
push
xor
out
cmp
popa
clc
outsb
push
pop
jae
push
ss
cmp
pushf
loope
imul
adcb
testl
loopne
adc
pushf
xor
mov
and
mov
and
ds
jo
lods
inc
lods
pop
jl
jnp
lret
pushf
in
sti
dec
sub
bound
aaa
push
cmp
dec
nop
call
and
mov
lcall
test
xchg
sub
lret
jnp
lcall
dec
es
rcll
es
sbb
jns
pusha
lea
shl
mov
out
mov
repnz
jne
adc
dec
and
push
xor
xchg
mov
fsts
push
icebp
xchg
out
aaa
incb
xor
xchg
mov
mov
push
xchg
js
push
cmp
fcomip
inc
stc
lds
add
mov
fdiv
mov
lds
aad
push
enter
js
pop
sbb
or
pushaw
loop
cmpsl
imul
loope
rcr
inc
popf
xor
pushf
mov
notb
jp
xor
jmp
jecxz
sbb
inc
jnp
scas
scas
rorb
push
cmp
xchg
sub
pop
and
add
sub
subl
xchg
pop
outsl
cmp
mov
add
js
and
inc
insb
sbb
jns
add
xchg
call
repz
daa
mov
loopne
icebp
mov
jmp
shl
sbb
mov
aam
sub
shrl
enter
jns
fisubrs
add
scas
fstl
xlat
and
cs
mov
je
movsl
adc
add
int3
loopne
int
jae
sub
or
cmp
fdivl
sbb
adc
jns
cmp
add
jge
loopne
cwtl
cmp
inc
data16
dec
push
jecxz
insb
cmp
push
xchg
adc
clc
sub
rcrb
scas
lods
mov
js
negb
or
jbe
test
cmp
test
dec
mov
aad
sbb
nop
mull
pop
or
out
xchg
cs
cmp
std
rclb
leave
cwtl
jae
fstpl
dec
xor
xchg
cmpsl
adc
inc
inc
insb
push
xlat
les
leave
pusha
movsb
notl
xor
mov
je
js
int3
mov
push
gs
test
cmpsb
pop
inc
adc
or
cmp
push
mov
pop
in
mov
in
and
outsb
sub
lods
in
lret
pop
and
mov
test
aas
adc
pushf
and
xchg
movsl
insb
jl
mov
cmp
fcompl
push
xchg
jmp
dec
xchg
cmc
std
push
scas
faddl
dec
icebp
adc
int
mov
pop
int3
lret
mov
shlb
xor
cmpl
hlt
popf
in
test
hlt
repz
rcll
or
and
leave
sbb
sbb
or
jmp
xchg
cmp
xor
and
mov
ljmp
inc
sub
test
xor
mov
push
hlt
in
cmp
div
adc
bound
push
insl
add
lret
sub
enter
xchg
fwait
jae
lret
pop
sub
adc
addr16
sbb
mov
jns
xchg
mov
lock
aam
lahf
shlb
jo,pt
cli
xchg
js
jle
insb
dec
dec
dec
orl
or
out
mov
arpl
into
jnp
insb
lock
sbb
jne
ds
out
inc
vorps
or
inc
notb
cmpl
lock
sub
jo
das
sti
fwait
pusha
sbb
mov
jne
jne
movsl
xor
ljmp
and
add
dec
inc
bound
int3
daa
cwtl
mov
leave
ljmp
pop
lock
rol
fadd
incl
dec
ss
cmc
mov
test
int3
frstor
xchg
imul
imul
sahf
aam
jmp
xchg
adc
data16
and
out
push
cmc
mov
mov
inc
and
cmp
repnz
xchg
dec
jmp
xchg
js
lcall
add
or
bound
lret
fbld
int3
popa
mov
pop
out
enter
push
xchg
into
push
cltd
cmp
mov
mov
mov
rcrl
mov
inc
cmpsl
and
mov
inc
mov
xlat
dec
out
std
pop
into
fmull
adc
mov
jg
int3
cmp
dec
pop
xor
xchg
cmpsl
jecxz
imul
sbb
and
sub
cmp
pop
sbb
fwait
sub
sbb
xchg
mov
addl
fdivrs
sahf
addb
and
xchg
jne
mov
ss
loopne
xor
jge
inc
fmuls
test
and
or
stc
xchg
movsb
hlt
lcall
xor
jle
xor
push
jg
cmp
lret
and
cmp
sti
es
jge
sbb
jl
sub
jo
push
ret
ds
pop
shrb
movsl
inc
mov
cmp
adc
js
ret
pop
into
gs
mov
popa
adc
push
daa
sub
or
mov
lret
data16
or
in
stos
test
mov
sbb
in
aad
push
out
rorl
das
daa
lahf
pop
stos
inc
bound
cmp
sub
and
mov
cli
ljmp
lahf
aaa
lret
jne
lret
mov
enter
add
or
cwtl
idivl
insb
cmp
pop
dec
dec
sbb
in
push
mov
xor
inc
rdmsr
inc
dec
cmp
dec
mov
and
aas
xchg
xchg
addr16
mov
pushl
cli
jne
xchg
xchg
xchg
add
lds
lds
test
out
dec
frstor
sbb
lret
jo
cli
ss
lea
leave
xor
loope
or
dec
cmp
vucomiss
push
mov
dec
mov
or
mov
lret
dec
cmpsl
movb
and
outsl
test
add
dec
dec
pop
xorb
out
lds
movsl
add
jmp
jle
cltd
je
cmc
or
xchg
and
sbb
sahf
bound
adc
cmp
shrl
pop
repz
adc
fidivl
xor
sbb
lret
mov
xor
test
and
lahf
shlb
or
cwtl
outsl
stos
fs
dec
inc
notb
xchg
jg
xor
mov
adc
cmp
pop
mov
sub
jb
jo
cs
notl
cltd
loopne
ja
mov
aad
je
out
sub
daa
stos
jmp
rclb
pushf
shl
lahf
sub
sbb
dec
lods
bound
js
icebp
mov
gs
xlat
aas
adc
push
fwait
repnz
mov
sarb
psadbw
cmpsl
adc
out
sbb
xchg
add
xchg
xor
pop
pop
bound
xor
shll
mov
mov
cmp
mov
ret
and
mov
je
loop
pusha
jecxz
mov
mov
push
mov
adc
mov
unpckhps
jae
mov
clc
and
lods
or
lcall
and
inc
test
mov
cli
push
and
xchg
mov
gs
adc
les
lret
iret
int3
add
out
cltd
popa
xor
cmc
cmp
cs
push
mov
jno
push
inc
sub
inc
popa
movl
ja
loop
inc
sbb
ret
out
cld
mov
xchg
mov
jo
mov
sbb
jp
cs
xor
ljmp
or
inc
fdiv
sub
cmp
lret
sbb
push
cld
or
nop
sub
dec
and
daa
enter
je
sub
dec
gs
inc
sti
mov
jb
mov
ret
lock
je
sahf
sbb
inc
rcr
rcll
fincstp
pop
and
mov
iret
loop
mov
xor
inc
or
push
popa
mov
push
mov
push
cmpsl
mov
call
cmp
stos
aam
dec
mov
xchg
out
loope
cmp
or
stc
push
pop
setle
inc
mov
add
sbb
mov
xchg
ret
mov
clc
dec
xchg
push
adc
sbb
stos
lods
outsb
hlt
test
or
loopne
jecxz
inc
cltd
xor
aad
fidivrl
dec
movsl
lds
movsl
hlt
outsl
hlt
mov
pop
movsb
cld
inc
sub
jp
popf
cmpsl
adc
sbb
imul
xchg
and
xchg
add
adc
push
in
pusha
dec
jmp
notl
cmp
jl
sub
sub
push
mov
data16
mov
fiadds
loopne
sub
mov
jmp
movsl
das
imul
in
mov
xor
fdivs
scas
insl
aam
mov
sahf
pop
mov
outsb
mov
xorl
dec
xchg
mov
cli
mov
or
adc
cwtl
sbb
xor
inc
or
jmp
lea
pop
das
mov
jb
notl
xchg
fisubs
imul
and
ds
lds
push
xchg
movsl
js
add
scas
mov
outsb
mov
in
repz
cmpsb
sbb
lret
icebp
shll
mov
adc
xor
xchg
lret
mov
push
js
data16
je
out
mov
xor
or
cmovge
xchg
sub
outsl
push
lods
jl
sub
dec
cmp
sbb
lods
in
fadd
fstl
les
inc
inc
push
inc
subb
mov
ret
das
sub
bound
xor
push
jno
inc
dec
add
inc
xor
pop
in
mov
inc
jae
jae
adc
je
push
cltd
sub
jnp
and
adc
ret
loop
call
mulb
cmp
cmp
xchg
loopne
xor
jmp
jmp
ret
mov
pop
inc
mov
dec
sub
shl
dec
cmc
pop
mov
pop
dec
rcll
xchg
js
fwait
sti
fnstenv
scas
mov
aad
jp
repz
xor
stc
out
cmpsb
ja
unpcklps
out
mov
fisubrs
out
sbb
dec
lahf
jno
add
lcall
cmp
jne
jae
lea
jmp
inc
roll
push
pop
insb
mov
sbb
jle
movsl
xchg
adc
jl
and
and
fdivl
mov
xchg
mov
out
gs
sbb
push
mov
or
into
jb
xor
int3
fisttpl
cwtl
das
fs
loop
pop
fimull
dec
movsb
rol
add
push
pop
out
aam
int
aad
clc
push
jle
lods
scas
mov
mov
push
and
mov
bound
int3
add
pop
popf
xor
sbb
popa
jns
dec
inc
sub
scas
sbb
xchg
loopne
mov
shl
scas
and
test
cli
cli
mov
neg
pop
hlt
push
inc
push
fdivr
ja
ret
ja
sti
mov
stc
sub
es
repz
je
ljmp
adc
mov
and
add
or
cmc
xor
addl
aaa
dec
jecxz
adc
pop
push
daa
imul
jb
pop
lods
dec
sti
jbe
mov
cmc
shr
jmp
mov
stc
hlt
add
lds
mov
leave
cld
pop
xchg
dec
testl
push
mov
cmp
push
iret
dec
jbe
in
and
jnp
rol
cs
adc
shll
xchg
iret
sub
pop
cmpxchg
xchg
mov
cmp
popf
mov
loop
sbb
mov
mov
pop
pop
imul
xor
dec
cli
das
mov
xor
cmp
mov
jmp
mov
mov
or
cwtl
gs
cmp
mov
and
adc
inc
adc
sub
jno
fistpl
pop
lcall
xor
les
jp
data16
scas
adc
in
inc
and
js
repz
push
pop
or
ds
call
and
inc
std
sbb
push
test
stos
test
scas
sub
xorb
stos
mov
lds
es
out
jo
out
iret
cmpsb
dec
cmp
mov
pusha
fsts
mov
aaa
imul
mov
inc
fsubrs
out
cmpsl
push
test
orl
sbbb
mov
add
jb
sub
int3
inc
inc
push
push
sub
sub
shll
enter
mov
xchg
bt
incl
fistps
mov
xor
out
xchg
aaa
cld
push
movsl
cmp
jae
shll
inc
xchg
sub
leave
hlt
mov
das
rclb
insl
ret
mov
xrelease
sub
js
jne
aas
cmp
sub
sbb
sbb
insl
jb
stos
cmp
xor
push
test
sub
int3
dec
cwtl
mov
jo
push
add
roll
or
jnp
xchg
xor
jle
push
push
sbb
cmpsb
bound
ja
xchg
cwtl
or
sub
sub
mov
or
je
sbb
push
jl
cs
std
sbb
in
push
shl
jbe
insb
jno
push
daa
pop
ret
mov
fsubrl
mov
out
xor
push
std
cmp
aad
cltd
push
inc
cwtl
fimull
loopne
jmp
es
stc
daa
mov
call
add
mov
fldcw
es
out
stos
ja
xor
mov
push
es
add
or
popa
jp
cmp
test
lahf
sub
in
add
mov
sub
in
pushf
jle
xchg
add
mov
fs
push
or
int
in
cwtl
dec
and
xor
iret
xchg
ret
xor
sbb
cltd
xor
cwtl
adc
fmull
mov
sarb
rcll
popa
movl
jge
adc
push
inc
push
test
test
call
cmp
push
pusha
in
mov
pop
out
jl
mov
add
je
inc
lods
dec
xchg
jecxz,pt
test
xchg
mov
mov
cmpsb
lock
or
jae
std
xchg
das
xchg
jl
sub
movhps
adc
mov
add
lcall
cmpsb
sbb
or
sbb
icebp
mov
aas
xlat
lea
subl
adcl
shrl
test
aam
aad
ret
sbbb
dec
mov
xchg
mov
mov
mov
cs
insl
sub
mov
popa
and
cmpsb
dec
sub
cmp
or
enter
jbe
scas
out
test
push
pop
xchg
test
leave
insb
lods
addr16
mov
push
mov
cs
pop
mov
sbb
jle
xchg
ret
daa
sub
icebp
dec
cmc
mov
sahf
inc
leave
int
lods
lds
add
data16
add
add
dec
dec
inc
push
mov
mov
add
xchg
clc
xor
xchg
xor
call
pop
inc
adc
jbe
push
xchg
mov
movsb
jecxz
pop
stos
in
aam
test
xchg
adcb
push
dec
iretw
inc
js
subb
es
adc
sarl
push
and
in
xor
jns
lea
mov
pop
cmpsb
sbb
push
mov
das
loopne
frstor
jns
popf
jno
insl
mov
fwait
lods
inc
and
andb
jo
push
sub
imul
fwait
in
pushf
pop
mov
jns
sti
and
jmp
mov
lods
or
adc
leave
into
mov
sbb
push
or
data16
push
xchg
daa
loope
jmp
mull
inc
mov
mov
add
pop
push
fucomip
pop
sub
add
add
or
mov
stc
and
popf
imul
iret
in
lea
cmc
jmp
mov
pushf
or
sbb
adc
or
lret
xlat
int
int
repnz
ret
adc
inc
movsl
mov
mov
inc
inc
lods
sarb
aad
aad
cmpsb
movsb
xor
jns
push
mov
int
punpckhdq
dec
mov
sbb
stos
push
pop
xchg
cmp
pusha
cmc
test
clc
sub
add
nop
xor
popf
or
adc
mov
fildll
xchg
mov
dec
jecxz
ds
push
sub
pop
inc
insb
push
lret
jle
dec
or
inc
jp
icebp
pop
jnp
addb
cmp
cltd
or
fwait
sub
and
aad
mov
adc
push
xchg
pop
cmp
loope
mov
xchg
mov
cmp
lret
jg
int
and
clc
mov
ljmp
xchg
inc
pop
xchg
push
fmull
or
leave
cmp
in
out
cmp
add
sbb
adc
movsb
xchg
test
sbb
arpl
add
push
inc
mov
jg
ficomps
test
fcomi
cmc
ljmp
rcrb
dec
popa
push
pop
retw
jnp
es
mov
add
lods
mov
dec
rcrb
jmp
cltd
cmc
mov
mov
mov
add
adc
dec
ljmp
dec
cmp
iret
and
enter
std
xor
push
inc
xor
ja
cmc
push
lret
cld
lods
cmpsb
sbb
pop
sbb
sub
ja
insl
push
push
mov
and
or
inc
aam
in
repnz
and
or
cli
jbe
aaa
dec
imul
in
dec
arpl
pop
movsl
cld
sahf
push
shr
mov
sub
orl
pop
jle
fwait
gs
add
pushf
cmp
jne
cmc
cmp
stos
dec
gs
jns
xlat
stos
notl
cmc
stos
int
and
loopne
out
sarl
out
lds
mov
fs
sub
sub
fucomp
jae
icebp
push
inc
mov
in
pop
cmpsl
mov
arpl
into
lds
xor
and
jmp
subl
xlat
mov
cmc
je
push
fldcw
xchg
out
dec
or
mov
in
cmp
test
sub
cmpsb
mov
rol
pop
push
add
pop
add
and
push
adc
enter
sahf
pop
lods
ja
mov
inc
or
fidivl
cli
mov
mov
js
aam
aas
mov
sarl
push
repz
popf
lods
mov
dec
xor
inc
jno
std
test
mov
dec
scas
jg
or
icebp
push
xlat
insl
insb
lds
in
or
call
push
sti
loope
mov
shll
mov
lods
xchg
push
pop
in
cmp
cmc
arpl
mov
jle
data16
jo
dec
cmpsb
aas
sbb
mov
ds
mov
ja
das
sarl
scas
fidivrl
fdiv
pop
fists
loopne
jl
fcomps
lahf
lret
dec
push
out
cmp
lock
jnp
xchg
add
cltd
mov
div
or
adc
jle
mov
jb
inc
xchg
pop
ljmp
and
out
push
jbe
and
xor
mull
shrl
or
aam
loop
scas
inc
insl
xchg
jnp
jbe
xor
xchg
int3
cmpsb
cmp
xchg
mov
mov
mov
andl
lret
test
int3
dec
sarl
test
das
inc
cwtl
lock
leave
and
push
or
push
pusha
mov
lcall
push
repnz
daa
jbe
cs
imul
fidivrs
sarb
into
lret
and
sbb
in
dec
mov
cmp
inc
sub
mov
add
nop
pop
cmp
call
jb
mov
jbe
push
cmp
jne
cmp
push
sub
jp
repz
pop
mov
adc
ss
insl
in
and
sar
xchg
daa
in
adcl
or
or
xor
insb
jle
cwtl
mov
mov
arpl
std
sub
mov
cli
pop
xor
add
add
mov
mov
loope
ja
jno
add
or
repz
mov
cmp
test
rol
inc
jl
dec
loop
or
icebp
arpl
xchg
stos
pop
movsb
test
xchg
jge
and
or
cmp
fldenv
push
aas
mov
in
aas
mov
cmp
mov
pop
subb
sahf
mov
xor
ret
dec
pop
xchg
iret
adc
shlb
fisubrl
push
jge
pop
fwait
shrb
hlt
out
add
push
adc
fistps
in
test
enter
mov
lds
xchg
or
cmp
mov
fsubl
push
stos
and
hlt
dec
int
xchg
inc
bound
xor
out
or
jns
lea
add
test
xor
fucomip
jecxz
xchg
pop
sbb
xor
inc
dec
sub
iret
aaa
jbe
cli
push
jno
or
rol
xor
rcl
mov
in
je
repnz
dec
xchg
sub
stc
fnstenv
xchg
clc
aam
jae
cmc
jecxz
push
es
mov
push
jbe
inc
jp
xchg
and
lock
hlt
sti
pop
daa
mov
xor
and
mov
mov
cmpsb
es
mov
lods
mov
or
fbld
inc
cmc
adc
call
roll
xor
ficoms
pop
push
fldcw
sbb
and
push
imul
jmp
repnz
insb
pop
arpl
jmp
dec
loope
adcl
push
js
test
sbb
mov
clc
mov
dec
adcl
sub
dec
inc
in
and
pop
imul
fwait
int
in
fisubl
imul
mov
ds
cmpb
rcrb
pop
push
cltd
cmp
xchg
cs
push
movsb
dec
daa
sbb
cmp
push
sub
push
mov
sub
sbb
incb
mov
cld
pop
dec
shl
jae
dec
xchg
mov
cmp
inc
testl
push
inc
mov
jns
xchg
jnp
orb
push
push
int3
jecxz
into
and
xchg
std
cmp
and
cmp
add
xlat
jecxz
inc
sbb
cmc
test
sbb
das
xchg
add
test
adc
and
dec
fidivs
movsl
fldt
sbb
loop
sub
movsl
sub
xor
jnp
shll
in
mov
push
jl
add
add
ss
lea
subb
movsw
pop
in
xchg
rcl
inc
lock
lock
jge
pushf
loopne
lret
pop
mov
popf
xor
sub
fwait
hlt
dec
mov
pop
outsb
in
sbb
sub
mov
jmp
divb
test
mov
or
mov
dec
add
cmpsl
inc
mov
mov
mov
push
fcmovbe
fisubl
mov
loop
xorl
fcomp
mov
cld
adc
xchg
outsb
and
mov
mov
adc
sarb
movb
loope
call
int
pushf
fists
dec
xchg
or
push
mov
lret
popa
fcoml
inc
iret
mov
and
and
add
fstpl
pop
sub
cmpsb
and
pop
adc
sbb
mov
mov
repz
lret
cmpsl
aas
adc
push
push
mov
dec
dec
adc
cmp
sti
test
cmp
cmp
test
sbb
sub
aaa
aam
mov
jne
sbb
scas
adc
cmp
mov
addb
je
dec
pop
daa
inc
sbb
loope
ss
stos
lcall
mov
inc
pusha
ret
divl
pop
arpl
jle
or
inc
inc
data16
jmp
mov
pop
mov
inc
xchg
jmp
in
push
xorl
and
xorl
cmpl
lock
pop
ret
lahf
inc
pop
lcall
dec
cmp
sti
rcrb
jae
jp
fs
fwait
nop
addl
aam
cs
cmp
jbe
xchg
push
mov
bts
sub
outsb
loope
les
jmp
mov
jle
xchg
in
sbb
fadds
sub
jge
lcall
arpl
sub
fwait
mov
imulb
mov
lods
ljmp
xchg
xor
or
pop
fldcw
rcll
jns
dec
inc
fnstsw
jg
add
test
sahf
cli
cltd
adcb
mov
and
jle
xchg
add
repnz
in
sbb
in
lea
push
sub
jmp
in
cs
mov
ljmp
call
stos
fidivl
in
cmp
mov
out
jbe
test
push
push
rcll
daa
fisubl
lret
push
jbe
xchg
jmp
xor
push
dec
sbb
mov
ja
nop
jge
inc
and
jmp
jo
outsb
sub
add
add
aaa
dec
xchg
pop
mov
cmpl
sahf
shll
xor
arpl
push
pop
icebp
mov
fstpt
push
lahf
add
inc
orb
scas
pop
jg
fdivrs
js
add
mov
cmp
std
je
mov
dec
cmp
pop
ljmp
shrb
in
adc
fwait
push
lret
or
push
pop
and
in
std
cmp
std
aam
xlat
out
test
sahf
or
pop
inc
dec
jno
jl
ret
scas
arpl
in
aam
dec
gs
cmc
enter
mov
cmc
dec
jns
icebp
cltd
shlb
adc
lret
pop
scas
pop
jle
push
scas
dec
mov
negl
push
stc
test
jo
aaa
sarl
nop
inc
pop
or
add
fld
adc
cmp
lods
add
lcall
jle
fbld
jns
shll
sahf
lea
aas
test
lea
inc
stos
les
sbb
cmp
movsb
repnz
mov
shl
lret
js
pop
stos
imul
les
les
cmp
dec
pusha
adc
pop
inc
inc
in
imull
cmpsl
fwait
sbb
adc
sbb
and
fwait
or
jmp
mov
push
test
push
nopl
jge
fdivrl
add
cmpsb
adc
ror
je
adc
and
dec
inc
aad
add
sbb
cld
popf
and
cmpsb
sbb
and
push
inc
test
cltd
stos
shlb
push
jg
insl
leave
aas
adc
ljmp
adc
repnz
push
xlat
icebp
lcall
sub
cs
iret
fisttpl
sti
pop
aas
lea
cltd
gs
int
lea
add
push
cmp
fsqrt
jnp
sub
cmp
inc
ret
mov
pop
xchg
das
cs
pop
pop
les
je
inc
jb
mov
pop
scas
aas
push
mov
stos
orl
jnp
lahf
insb
and
mov
pop
test
push
int
mov
push
mov
insb
sbb
insl
cli
pushf
ret
rclb
daa
je
stos
xor
cld
mov
pop
arpl
scas
dec
and
fdivrl
mov
fwait
btc
inc
xchg
loop
in
jmp
inc
cmp
addl
iret
lret
outsl
mov
mov
lds
inc
add
daa
icebp
daa
cli
lods
stc
cwtl
fcmovu
gs
pop
adc
push
mov
lds
jmp
sbb
data16
inc
and
push
mov
dec
xor
jg
mov
ret
mov
stos
cmp
add
cmp
push
or
pop
jecxz
pop
mov
ret
popa
test
sbb
jmp
jl
or
push
test
mov
int3
cmp
xchg
mov
ficoms
adc
cmp
sub
out
out
pop
cmc
rorl
jmp
lea
movsl
lock
and
jb
mov
xor
stc
popf
or
push
mov
fs
loop
test
pop
stos
ret
repz
fbstp
xchg
mov
jbe
dec
adc
mov
lahf
ss
andb
push
aaa
or
lret
add
int3
jnp
mov
pop
dec
mov
mov
lret
jnp
sar
inc
les
mov
mov
mov
sti
lea
inc
mov
call
or
sub
push
or
sbb
cltd
loopne
mov
testl
push
nop
incl
std
cltd
push
aad
mov
xchg
outsl
clc
mov
add
outsl
push
fdiv
jb
dec
std
lea
aam
enter
sbb
mov
fsubrs
je
loop
out
push
fs
push
movsl
ds
insb
shlb
add
es
call
mov
in
xorl
or
cmp
repnz
dec
cmpsb
inc
cmpsl
adc
mov
adcb
pop
stc
lea
sbb
or
cmp
iret
sub
pop
and
sub
idiv
rclb
imull
fstp
jne
subb
jg
pop
fdivrp
jl
lret
adc
push
sti
pop
cmp
rol
jnp
inc
jne
std
mov
jnp
popa
ret
cmc
stos
adc
les
iret
sbbl
mov
jne
int
insb
aas
addr16
das
cwtl
mov
mov
xchg
les
std
cmp
gs
mov
xchg
cltd
and
out
add
arpl
insw
add
add
push
jns
and
in
push
mov
insb
push
je
test
out
xchg
lret
and
ret
cmpsl
rorl
sbb
fwait
dec
sbb
dec
ljmp
in
adc
dec
xchg
loope
inc
push
push
aad
xlat
mov
test
cmp
mov
mov
loopne
repnz
into
push
sub
xor
xchg
sti
jbe
pop
add
je
loop
lret
pushf
dec
pop
into
in
data16
push
sbbb
or
push
xchg
push
or
ja
cltd
xor
jp
mov
fucomp
rclb
adc
ror
pop
mov
mov
mov
in
shrb
sbb
add
cmp
sub
ret
shrb
pop
mov
xchg
stc
or
cmp
pop
adc
mov
frstor
rolb
imul
and
add
test
mov
sbb
push
pushf
dec
test
ljmp
int
iret
adc
lds
pop
adc
jae
int3
cmp
test
aad
arpl
jno
daa
ja
scas
test
jne
ljmp
xor
lock
xor
sbb
out
xor
add
pop
jmp
add
jmp
hlt
add
jnp
cmp
sarl
xchg
test
dec
mov
out
bound
out
dec
dec
xor
mov
ret
aaa
repz
lock
xchg
repz
dec
addr16
mov
punpckhbw
sbbb
mov
ret
lds
jbe
jmp
pop
rorb
sub
mov
ss
sbb
mov
data16
inc
mov
xchg
sub
mov
xor
cltd
mov
xchg
call
and
mov
xchg
cwtl
pusha
scas
mov
sub
jg
data16
jne
xchg
pop
icebp
mov
and
lock
adc
in
ljmp
fsubs
xchg
push
cli
stc
pop
xor
mov
out
pop
fidivs
push
or
cmpl
rorl
sbb
xor
and
push
and
inc
xlat
mov
shrb
testl
sahf
ja
push
jge
xchg
sbb
in
insl
sub
enter
repnz
scas
cs
cmp
gs
and
xchg
mov
scas
jae
push
inc
jle
inc
mov
mov
fwait
repnz
mov
xchg
outsl
daa
dec
hlt
call
cmc
mov
out
cs
add
cwtl
inc
lods
ret
negl
xor
mov
clc
jnp
pop
insl
mov
jge
add
push
xor
in
rol
jb
aas
and
mov
xlat
dec
loop
in
adc
dec
xor
pop
xchg
aad
daa
push
icebp
push
popf
aas
xorb
not
sbb
setle
in
ljmp
push
cmp
rcrl
jmp
repz
lods
scas
ret
cmp
pusha
mov
daa
sbb
ds
jne
push
push
pop
cmp
enter
lea
mov
rcrl
jnp
xorl
outsb
xor
repz
mov
pop
or
in
and
inc
push
mov
jge
push
pop
jl
inc
cmpsb
lcall
jo
in
lods
xchg
xchg
mov
repz
or
mull
jno
jbe
test
sub
cmp
jmp
or
mov
ljmp
push
cmp
pop
fmuls
int
lods
adc
fisttpl
stos
sbb
lret
fcmove
testb
sti
inc
pop
mov
and
push
pop
mov
pop
pop
or
les
xor
xchg
sub
adc
lea
fistpl
loope
inc
jge
idiv
sbb
cmpsb
sbb
mov
adc
ss
les
movsl
pop
jmp
mov
push
aam
jae
test
lret
inc
rclb
sub
pop
jmp
lods
enter
leave
repz
gs
xor
xchg
pop
dec
mov
mov
scas
and
call
gs
sub
aas
pop
mov
pushf
cmp
rorl
cmp
subb
mov
stc
loop
mov
add
cmp
jb
shl
add
pushf
stc
adc
xlat
xchg
jmp
or
push
orb
cmp
xchg
sub
push
push
pop
sub
xchg
mov
imull
test
inc
sub
xchg
mov
in
adc
push
jg
inc
jbe
in
jne
adc
rorb
sbb
adc
sbbl
pop
pop
out
mov
mov
sbb
out
adc
lods
or
mov
fldt
cmp
ljmp
lret
cld
sbbb
xlat
sahf
int
es
in
test
mov
ja
or
stos
pop
scas
push
icebp
jg
dec
insl
adc
out
insl
bound
xchg
cmp
adc
fidivl
lods
jno
gs
mov
loopne
dec
push
dec
cld
sbb
cmc
sbb
and
pop
repnz
sti
xchg
out
fidivrl
mov
daa
adc
adc
cwtl
loope
aaa
daa
xor
jge
cwtl
sbb
or
fwait
cmp
pop
data16
lea
test
xor
xchg
cmpsl
and
jno
add
mov
lods
pop
xor
neg
jb
mov
lcall
into
push
mov
push
test
xchg
dec
rcrb
cmpsl
jge
sbb
clc
xor
ror
pop
jb
mov
cmp
mov
iret
mul
in
dec
hlt
ror
test
mov
mov
xchg
or
push
orb
or
mov
out
dec
jbe
push
push
cmp
adc
fstpt
pop
xorb
mov
into
mulb
loope
jl
imul
loope
jg
mov
stos
lahf
das
sub
out
in
test
inc
fnstenv
ja
daa
xor
xchg
push
inc
pop
mov
rcrb
iret
loope
xchg
push
mov
fsubl
loopne
sbb
push
or
lahf
xor
gs
adc
lods
sbb
fs
testb
sbb
inc
push
sbb
mov
fwait
daa
rol
rcl
mov
add
adc
push
sub
xchg
repnz
icebp
cmp
adc
inc
jne
repz
push
sahf
sub
adc
mov
inc
arpl
imul
xlat
movsl
xor
push
das
shl
insb
pop
xor
xchg
imul
outsb
cmp
push
cmc
jge
into
inc
lahf
sbb
push
sbb
mov
jns
mov
push
cmp
sbb
leave
lahf
stos
jne
out
jl
adc
pop
bound
faddl
mov
out
inc
xchg
pop
in
adcl
mov
add
cmp
jecxz
arpl
push
sub
rorl
jns
test
fs
sbb
movsl
jmp
cmc
pop
outsb
loop
push
enter
mov
xchg
insl
mov
std
shrb
cltd
push
xchg
in
loop
or
data16
cmp
lock
cld
ret
pop
sub
mov
push
loope
lret
pcmpeqw
and
scas
pop
or
ss
jecxz
xchg
lods
out
jne
inc
jecxz
push
out
cli
sbb
hlt
pop
jno
decb
fists
push
cmp
cli
pop
xchg
rorb
movsl
adcl
movb
dec
loope
and
jg
repz
pop
shlb
ds
stos
jmp
fisubs
loope
mov
inc
sub
sub
je
mov
fidivl
xlat
mov
cmc
mov
clc
jae
push
adc
jne
mov
mov
mov
dec
dec
mov
repnz
xor
aad
push
mov
sbb
mov
mov
cmpsl
insl
pusha
or
adc
xchg
xor
fstpt
insb
xchg
mov
mov
les
adc
sub
mov
flds
jne
xor
pop
xchg
sti
xchg
outsb
mov
sub
xor
jo
andb
cmpsl
push
icebp
push
data16
add
mov
iret
push
movsl
cld
jo
in
js
sub
loop
cltd
insb
push
icebp
andb
iret
fxch
das
rorb
inc
in
cltd
mov
xor
popf
or
iret
adc
mov
notl
cwtl
lret
inc
ljmp
mov
cltd
idivb
add
fdivrl
and
int
lret
nop
ljmp
cmp
pop
fldenv
xor
and
popa
iret
lock
mov
outsb
dec
ret
and
std
inc
divb
sahf
jne
jb
scas
jecxz
cld
outsl
incb
call
xchg
pop
push
stc
ja
stos
xlat
inc
test
cmpsb
pop
cwtl
sub
fisubl
and
and
clc
sahf
dec
test
xchg
and
ljmp
or
test
xchg
pusha
mov
in
or
data16
jne
out
daa
push
adcb
roll
mov
xchg
cltd
jle
jle
pop
flds
mov
scas
mov
ljmp
arpl
shll
inc
or
push
push
xor
lods
lock
adc
icebp
xor
aad
aad
inc
int
push
daa
roll
jne
das
cmpl
pop
hlt
call
push
or
adc
sahf
push
jg
lahf
nop
nop
and
lds
test
roll
out
test
adc
in
push
dec
cmp
cmp
popa
cmp
xchg
stc
sbb
adcl
push
mov
sub
arpl
call
or
mov
bound
cmp
sub
imul
scas
xor
mov
adc
pop
push
movsl
cmp
mov
roll
mov
push
or
xchg
jl
shlb
lret
pop
or
jns
lods
cwtl
xor
shrb
and
cwtl
fs
mov
clc
push
test
xor
xchg
movsl
pop
sarb
push
test
pop
jne
mov
push
in
lods
lods
xor
fisubrs
je
jns
jbe
xor
test
mov
sbb
or
mov
hlt
or
in
mov
and
xchg
insb
jl
sbb
push
cmp
fistpll
ret
add
lcall
and
cmp
cwtl
xchg
enter
xchg
pop
xchg
adc
sub
lock
push
xchg
xchg
imul
inc
sahf
add
sbb
mov
fs
mov
int3
jae
jmp
push
rcl
dec
inc
mov
sahf
sbb
cmp
sbb
andl
mov
add
xchg
add
ret
xor
fisttpll
mov
and
mov
ljmp
pop
add
cmpsl
fildll
adc
push
insb
les
sbb
push
std
xchg
pop
mov
hlt
sub
sbb
push
lock
loopne
js
out
inc
sarl
xchg
cmpsl
jp
cli
push
movsl
bound
add
flds
inc
push
or
sbb
push
adc
and
imul
div
xchg
daa
sahf
jae
mov
cli
pop
popa
daa
fbstp
xchg
mov
inc
dec
in
jne
imul
insb
add
adc
inc
fsubr
fcompl
sti
jg
popa
mov
lret
pop
inc
push
mov
into
push
scas
fdivrl
xchg
push
jmp
sbb
add
jl
fwait
push
push
aas
sbb
fs
xor
xor
ds
nop
mov
out
in
push
or
repnz
stos
and
enter
movsb
icebp
aad
out
gs
xchg
test
mov
xor
test
ja
cmp
mov
cmp
in
sbb
dec
movsl
fs
or
sub
inc
nop
shl
shll
mov
sbb
xchg
sub
pop
lock
dec
jle
mov
mov
or
das
and
clc
push
popf
lods
xchg
mov
cmp
mov
add
add
imul
add
call
outsb
ljmp
imul
jb
inc
sahf
call
ja
mov
jmp
jne
ret
xchg
aad
mov
outsb
addr16
xchg
jmp
movsl
das
mov
mov
out
scas
mov
push
or
decb
lret
xchg
cld
pop
pop
idivb
xchg
add
inc
addb
in
adc
mov
fwait
jmp
loop
stc
mov
lea
and
mov
push
ret
jge
jp
push
ljmp
jne
or
lahf
inc
js
cmpsb
insb
cmp
push
mov
mov
mov
lods
inc
fnstenv
adc
add
testl
lds
mov
sub
jbe
scas
xchg
rclb
in
cmpl
push
pop
imul
push
fnstenv
rcl
imul
mov
les
cwtl
mov
or
jae
pop
fsubl
adc
fwait
aas
and
adc
stc
adc
js
jno
pop
fistps
shlb
mov
andl
dec
cmp
inc
scas
sub
and
jl
inc
sbb
sub
or
or
inc
in
in
fs
popf
cmp
sub
in
mov
insb
aaa
adc
out
outsb
xchg
cmp
hlt
pop
adc
pop
and
stos
jmp
sbb
mov
out
xlat
jle
test
hlt
push
sub
andb
sub
arpl
mov
outsb
sub
mov
pop
cmp
jmp
cmpsl
in
in
adcl
subl
sbb
and
cld
add
or
sbb
mov
add
mov
repnz
push
gs
popa
xor
add
enter
rsm
data16
and
roll
adc
adc
gs
rorb
cmp
push
dec
in
lret
out
aam
mov
mov
inc
pop
popl
scas
xchg
and
xor
cmpsb
dec
popa
xlat
mov
shrl
push
loopne
jns
pop
inc
in
mov
jl
and
pop
inc
ret
add
push
or
cmc
dec
aam
jne
scas
xor
jae
cmpsl
jno
inc
xor
and
fsub
lods
sbb
pusha
lock
dec
sarb
sub
push
push
cmp
adc
add
pop
push
lea
in
aaa
popa
sub
jo
jl
aam
outsl
rorb
pop
sbb
es
jecxz
xchg
shll
adc
jns
and
cltd
push
pop
jnp
out
stc
pop
pop
pop
aam
orb
dec
std
mov
adc
lret
sub
sbb
sbb
mov
jmp
sub
jo
mov
lret
out
mov
sbb
rsqrtps
mov
cmpsl
dec
cmp
xchg
bnd
pushf
out
aad
mov
fs
xchg
cmp
lcall
mov
pop
repz
dec
push
sub
lods
cmp
in
cmc
mov
sub
mov
mov
mov
mov
repz
cli
xchg
add
ja
pop
pop
insb
shlb
cmpsb
ds
add
fidivrl
in
movb
leave
gs
and
notl
cmpsl
jno
mov
adc
das
inc
dec
push
leave
test
inc
into
xchg
lret
lea
cmp
in
pushf
mov
outsl
add
int3
gs
and
xchg
in
stos
bound
xor
imul
lfs
mov
stc
sub
xlat
int3
jmp
popa
pop
push
aad
div
jb
decl
pusha
cmp
imul
and
xor
inc
sbb
push
lcall
adc
or
or
shll
sub
andb
xor
insl
dec
into
pop
mov
lahf
cmc
int3
cmp
mov
sbb
lret
ret
jae
pop
ljmp
rcr
adc
loop
lret
jnp
cmp
leave
int3
pop
testb
mov
adc
dec
push
and
cmp
das
insb
cmp
sbb
xchg
call
xchg
mov
push
or
xchg
cmp
jnp
inc
lods
sbb
nop
inc
shrl
lods
shll
pop
dec
mov
insl
out
outsb
stos
ret
in
int3
xlat
stos
les
lret
mov
xchg
mov
mov
cld
push
or
fldenv
xchg
data16
in
mov
shlb
sub
lcall
push
iret
sbb
pop
std
cmp
imul
lahf
nop
out
pop
mov
mov
cmp
mov
jp
sbb
pop
leave
bnd
das
jmp
cmp
jge
les
sahf
add
inc
bound
aam
scas
inc
leave
cmc
out
mov
idivl
loop
adc
add
repz
loope
xchg
movsb
push
lret
cld
jne
xchg
lret
test
bound
jno
pop
cmp
xchg
sub
fwait
xor
loopne
enter
loop
sub
jl
inc
inc
cmp
out
push
popa
test
stos
jnp
sbb
pop
push
movsb
ja
mov
repnz
in
in
mov
cmp
cmp
sahf
lods
jg
xchg
dec
xchg
mov
fucomp
popf
lods
add
pop
sub
jne
sub
out
mov
out
movsb
sbb
js
jg
adc
imul
adc
dec
mov
cmpsl
test
jmp
inc
jb
push
test
dec
je
xor
or
push
pop
jns
push
pop
ss
scas
or
shll
fsubrl
fistpll
mov
pop
pop
jbe
pop
iret
out
cld
mov
add
push
jmp
or
pushf
sbb
int3
mov
push
popf
or
inc
push
cmpsb
cmp
inc
xor
call
or
lret
jbe
decl
in
ret
add
scas
addr16
sarl
push
jp
pop
icebp
jno
pop
ret
ja
mov
push
icebp
cs
push
pop
push
cld
shll
aam
and
aaa
mov
dec
inc
push
sahf
inc
scas
movsl
stc
mov
xor
mov
mov
cmpsl
add
jl
jg
cs
loope
test
fiaddl
cmpsl
ds
lock
adc
or
outsl
loope
and
mov
int3
icebp
inc
dec
cld
and
les
shlb
mov
sbb
dec
and
mov
mov
out
repz
xor
jns
and
test
fs
dec
dec
sbb
cmp
and
fadds
test
dec
jb
fwait
ja
cmp
mov
filds
sub
xchg
sub
cltd
pop
mov
dec
jmp
push
scas
push
jecxz
mov
and
sahf
jle
or
fidivrs
push
in
jp
repz
fs
pop
shrb
lret
sub
sbb
js
dec
xor
xchg
scas
pop
pop
sbb
fistl
fwait
int
ja
xlat
out
and
popf
stc
mov
mov
jo
movsb
scas
jl
iret
pushf
arpl
lock
push
mov
ficompl
stos
movsl
cmc
sbb
insb
adc
sbb
lods
xor
push
fstpt
mov
lods
movsl
and
jecxz
mov
call
sub
add
rorl
mov
fsubr
ljmp
mov
mov
push
adc
mov
pop
fcmovnu
in
test
jno
inc
adc
andl
and
jl
and
pop
adc
stc
lea
lahf
mov
rcrb
push
jbe
shll
jno
mov
popa
xchg
daa
mov
je
mov
repnz
add
push
cwtl
test
add
int
cmp
inc
pop
out
dec
sbb
jle
stos
jmp
inc
mov
sub
pop
mov
push
jmp
xchg
cmp
jp
inc
enter
call
je
loopne
mov
repnz
pop
cmpsb
out
lds
adcb
mov
hlt
jnp
inc
mov
rol
pop
add
cmp
movsl
mov
shrl
jae
push
sub
xchg
pop
ret
fildll
mov
fbld
fisubrl
dec
lock
lcall
jmp
movsb
xor
push
lods
mov
push
push
or
lods
xchg
pusha
gs
popa
add
pop
test
mov
imul
stos
arpl
jp
jns
sub
data16
inc
lods
in
sub
adc
xor
es
adcb
jns
filds
fptan
popaw
inc
fstl
cmp
movsl
std
ss
push
leave
adc
int
out
popa
scas
mov
cmc
nop
cmp
roll
mov
lcall
xorb
push
decl
xor
xchg
jle
lods
add
lahf
push
sbb
into
popf
cli
xchg
mov
mov
jecxz
test
adc
cmc
mov
mov
incl
xchg
sub
xor
aaa
fsubrs
mov
fwait
bound
sub
dec
sarb
fs
adc
fidivl
xlat
adc
ror
out
dec
add
stc
sub
stos
stos
mov
or
add
fistpll
push
xchg
incl
cmpsl
xor
jnp
jle
scas
popf
fidivrs
or
imul
into
popa
sbb
or
sbb
cmp
addr16
sbb
dec
dec
cwtl
mov
or
stos
inc
mov
lret
pop
mov
les
arpl
pop
xchg
cmp
es
loop
push
loope
out
lock
aam
cmp
aaa
arpl
xchg
sub
adc
loopne
pushf
xor
sbb
fsts
dec
es
pusha
jge
pop
pop
xchg
ss
fildl
outsl
cld
test
lea
nop
mov
data16
add
lock
jns
int3
or
inc
adc
lret
dec
pop
jo
lret
addr16
aad
dec
dec
mov
lods
in
fistpll
arpl
cltd
scas
ds
dec
stos
pop
inc
lret
jnp
pop
xchg
or
iret
sbb
mov
dec
jmp
fwait
push
stc
idivb
shl
jae
pop
mov
fnstenv
repnz
daa
cmp
bound
add
pop
cmp
out
and
push
fmull
jmp
hlt
add
cmp
call
cwtl
pop
outsb
and
push
fisttpl
icebp
sub
int
jecxz
xchg
je
inc
lods
sbb
inc
jae
or
xchg
mov
fs
mov
xchg
stos
div
test
or
pop
or
subl
cmp
lds
shlb
add
movsl
shrl
mov
rcl
out
pop
test
jno
cmp
mov
or
xor
fdivp
out
dec
jbe
dec
xor
mov
icebp
insb
ss
cwtl
jae
mov
jecxz
pop
jge
sub
fldcw
cmpsb
jns
mov
dec
pop
ret
inc
pop
sbb
dec
xor
idivl
pop
mov
push
sahf
lods
imul
add
jmp
loop
pop
insb
and
push
mov
pop
stos
mov
push
push
rolb
sbb
mov
pop
lahf
xchg
push
into
sub
in
jnp
into
das
out
cmp
imul
lock
test
test
mov
pop
gs
out
xchg
sub
add
sbb
jbe
inc
test
shl
jo
dec
dec
inc
xor
insb
mov
lea
pushf
imul
sbb
mov
pop
lcall
sti
sub
in
push
xor
sbb
mov
mov
je
and
outsb
jl
sub
gs
imul
mov
stos
inc
jp
sbb
cmp
shl
mov
pop
jmp
pop
mov
xchg
xchg
lahf
nop
or
push
dec
xorl
xor
imul
dec
sbb
lods
cmpsl
cmp
and
data16
mov
cld
lods
or
add
ss
xchg
out
xchg
mov
movl
xchg
hlt
mov
adc
icebp
fldl2t
and
ss
insl
dec
shrb
stc
cmp
fsubrs
popa
inc
fstpl
lods
mov
inc
out
outsl
rclb
cmp
xlat
sbb
and
std
fcoml
jecxz
jbe
cwtl
mov
lcall
cltd
insb
push
fstl
mov
std
popf
into
sbbl
mov
insb
xchg
bound
pop
inc
inc
fwait
repz
es
hlt
push
push
cmp
ret
js
adc
cltd
test
cmp
pop
push
sbb
sbb
mov
insl
lcall
mov
scas
test
lods
jb
ret
cmp
and
pop
dec
lods
fcomps
data16
or
adc
pop
loope
adc
cmp
dec
xchg
cld
sub
repz
and
int3
and
pop
lods
xchg
xchg
fsts
mov
pop
cmpsl
cmp
adc
xchg
mov
cli
jnp
sub
lahf
mov
sti
push
sub
dec
mov
jge
dec
ffreep
decb
sbb
aad
inc
addb
lds
int3
dec
in
fldl
mov
repz
cmp
sbbb
xchg
adc
mov
scas
dec
mov
and
jg
frstor
mov
cmp
xor
inc
ds
fmuls
test
out
test
das
and
shrl
and
pop
cmp
shll
or
lcall
and
lea
bound
lcall
ret
sbb
cmc
fidivrl
adcb
sbb
ds
xchg
repnz
sub
out
cmp
loop
data16
add
repz
sbb
push
rep
push
and
je
mov
repz
cmp
jb
xor
jnp
sbbl
push
jbe
jmp
out
hlt
imul
push
jno
mov
sti
repnz
sub
push
pop
lret
imul
xchg
and
sub
inc
fidivrl
push
idivl
inc
std
repnz
test
inc
pop
xchg
inc
scas
jg
mov
stos
cmp
sbb
push
or
das
or
ret
loopne
xor
xor
shll
mov
dec
stos
sbb
cmpsb
cmp
xchg
les
xchg
cs
dec
pop
push
popf
jne
add
sbb
push
in
movhps
push
ja
mov
arpl
jle
xor
iret
lahf
pop
push
into
xchg
in
in
arpl
and
adc
jl
cs
nop
sub
push
mov
lock
call
push
sbb
mov
arpl
addb
mov
mov
or
lahf
cmp
scas
mov
mov
cmp
bound
add
pop
xchg
test
mov
out
cmc
sbbl
jnp
pop
arpl
push
aas
ret
arpl
test
pop
out
pop
filds
fistpll
cmp
jns
loop
add
bound
xchg
mov
xor
push
jmp
jge
jo
or
arpl
pushf
in
or
sub
es
int3
ja
adc
dec
subb
and
inc
mov
jp
inc
sahf
fisubl
and
repnz
icebp
mov
mov
inc
push
jae
sbb
test
mov
pop
test
lret
cld
int
and
out
xchg
out
xchg
push
gs
mov
outsb
xor
ficomps
pop
bound
dec
setp
dec
adc
adc
cmp
cmp
imul
js
mov
call
and
lods
push
mov
pusha
xor
roll
mov
mov
xor
in
fisubrl
sbb
mov
add
popf
leave
sub
push
scas
ret
cltd
sti
dec
lahf
mov
insl
dec
fistl
pop
jno
dec
fistpll
in
into
movsb
insb
loopne
mov
xor
repnz
and
pop
sub
sbb
dec
push
jge
xchg
imul
int
or
fldt
and
sar
and
hlt
jnp
out
and
test
in
cmp
xchg
cli
jp
hlt
js
subl
test
je
cmp
fstps
add
inc
pushf
push
mov
xchg
imul
mov
loopne
inc
popf
sbb
dec
js
orl
scas
pop
movzbl
mov
stc
mov
sub
xchg
stc
int3
mov
xchg
xor
xorb
sub
mov
lods
pop
dec
push
push
outsb
popa
push
jle
insl
mov
call
test
cmpsl
mov
sub
xchg
pcmpgtw
cmp
push
aad
sub
pop
push
cmc
pop
hlt
adc
andl
mov
mov
in
fbld
mov
imul
stos
insb
mov
insb
inc
pop
pop
add
or
jge
rcll
mov
mov
pop
mov
pop
mov
mov
push
fbstp
push
jmp
inc
mov
mov
into
out
ja
cmp
jge
fdivl
mov
lea
cmp
les
es
cmc
mov
mov
arpl
cld
xchg
xchg
rorb
mov
push
in
in
inc
xchg
pop
pop
sub
pop
push
les
cmpsl
bound
enter
call
pop
or
out
popf
and
adc
imul
fistps
int3
xor
lods
cmp
mov
stos
das
ja
and
jno
xor
nop
in
or
fwait
dec
jnp
mov
test
mov
lock
push
cmp
sbb
push
insl
sbb
push
inc
testb
cmp
xchg
jbe
mov
pushf
push
adc
inc
or
lcall
jmp
mov
push
and
lods
inc
rol
push
popa
cmp
cvtps2pd
xor
out
mov
aaa
iret
iret
add
cmp
shlb
fsubs
or
addr16
bound
shl
pop
push
cld
adc
mov
inc
in
mov
jns
cmp
add
mov
push
sahf
xor
add
mov
or
rclb
adc
mov
test
pop
movsb
mov
outsl
inc
push
mov
jmp
je
test
pop
dec
pop
fstps
pushf
mov
jae
int
mov
insb
mov
loopne
fsub
pop
adc
sbb
cs
and
cltd
aas
inc
bound
push
mov
jbe
mov
inc
pop
jo
jg
jge
nop
sti
push
dec
push
stos
cmp
and
movsb
stos
mov
imul
sub
cmc
jne
xchg
pusha
pop
test
cmc
repnz
aam
fisttpll
movsl
push
inc
push
test
cmp
fidivl
or
mov
shll
push
fdivrp
cmp
fsubrl
je
sbb
dec
xchg
mov
cmp
mov
fistl
test
sti
xchg
jns
inc
lods
call
xchg
sbb
mov
mov
in
loope
testl
xor
jb
mov
and
xchg
xchg
fst
xchg
shll
xor
pop
sbb
xchg
or
fisttpll
jmp
add
jp
pop
and
sub
jnp
xchg
adc
bndmov
in
cltd
pop
mov
pop
push
push
dec
mov
arpl
mov
xlat
add
daa
sbb
mov
push
scas
mov
pop
popf
je
hlt
jg
xor
ret
add
imul
or
xchg
add
orb
insl
pop
cmp
lahf
imul
daa
jmp
mov
pop
inc
fldcw
mov
mov
pushf
xchg
aas
mov
sub
je
cli
das
fsubl
pop
rclb
mov
pop
jle
rcll
cmp
mov
mov
test
ficomps
fs
aad
lea
add
dec
pop
shrb
cmp
out
xor
gs
inc
lods
int3
dec
je
dec
inc
test
imul
pop
icebp
mov
sbb
in
orl
lret
popl
lret
js
inc
stos
in
mov
push
inc
pop
insl
xchg
test
imul
repnz
scas
jge
iret
xchg
add
sub
rcrb
imul
loopne
repnz
or
xchg
imulb
out
xorl
fmulp
jns
aaa
xchg
cmpsl
cmp
pop
pop
dec
sbb
sub
or
jle
jo
cltd
insl
arpl
out
aam
push
inc
push
das
fsubrl
mov
icebp
call
and
fldcw
out
jnp
inc
xor
sahf
push
int3
dec
add
push
sbb
and
cmp
push
inc
ret
sub
jg
inc
popf
xor
int3
jbe
lea
jae
addr16
push
fisttpll
fidivs
inc
or
xchg
loop
enter
rcrl
int
pop
dec
or
mull
mov
fistpl
loope
jge
mov
rorl
push
xor
push
add
sub
shl
push
aad
or
movsl
in
jecxz
in
mov
mov
add
daa
xor
loop
or
push
inc
repz
js
fbld
sbbl
push
xor
jae
icebp
dec
fnsave
adc
cld
inc
mov
inc
adc
jge
pop
lock
sahf
xor
add
mov
push
mov
sbb
lahf
fadd
xlat
icebp
bnd
fisubrl
mov
inc
push
push
jae
movsb
mov
mov
fistpl
leave
fldenv
xor
jmp
adc
push
jb
outsl
xchg
mov
add
les
ljmp
test
dec
mov
sqrtps
pushf
cld
aad
mov
adc
pxor
mov
or
fisubl
or
loope
insl
sti
or
fcmovnu
jne
jnp
cmp
scas
cld
negb
jmp
pushf
xor
aas
orb
dec
push
cmc
in
out
test
ja
lock
pop
inc
adc
loopne
and
movsl
adc
out
popf
push
aaa
test
jns
js
pop
movsl
or
into
lds
popa
mov
sti
in
pusha
inc
mov
lret
sbb
xor
push
inc
xchg
push
push
insb
push
in
mov
fidivl
movsl
stos
add
add
aam
cwtl
dec
and
push
fisubl
push
bound
sbb
test
lcall
sti
std
shrl
dec
push
idiv
fstp
sbb
aam
sbb
sti
mov
call
jno
add
dec
fisubrl
jecxz
test
xor
and
inc
icebp
jl
dec
insb
jge
popf
jle
sub
test
test
jae
dec
pop
mov
cmp
push
movsl
dec
lcall
and
adc
ljmp
cmp
out
sbb
les
cmp
shr
dec
xor
xor
push
inc
push
xchg
gs
fdivrl
cmp
dec
jnp
fildll
sbb
int3
sbb
mov
ret
jmp
outsb
mov
scas
loope
repz
stos
mov
das
add
sbb
cmp
xchg
xorl
push
call
sub
aas
dec
mov
jle
insb
hlt
xor
lods
cmp
dec
rcrl
jno
in
loop
dec
jecxz
aaa
out
or
xchg
push
les
xchg
sub
dec
decl
cmc
stc
mov
sub
xchg
jp
repz
shl
lret
js
repnz
push
notb
adc
mov
mov
int3
pop
icebp
std
xchg
pop
and
or
int3
shrb
pop
gs
test
mov
mov
pop
sbbl
fdivl
lahf
xor
hlt
scas
mov
mov
pcmpgtw
or
inc
imul
sbb
inc
or
mov
mov
in
addr16
pop
mov
sbb
jle
cmp
pop
xchg
mov
popa
daa
sbb
jg
ret
stos
dec
cmpsl
shl
daa
cmpsl
mov
jns
adc
or
inc
out
mov
test
push
outsl
mov
mov
cmp
sub
lahf
sbb
push
push
jg
mov
xchg
divb
xchg
xchg
fwait
jge
call
clc
sahf
arpl
loope
inc
inc
pushf
scas
jle
ret
inc
hlt
int
clc
aas
pop
lods
insl
dec
fs
jecxz
cmc
cmp
inc
jecxz
xor
jge
cli
xchg
lret
add
call
movsl
pop
fildll
dec
aas
aad
shrb
mov
jmp
push
lods
cmp
push
or
and
mov
mov
pop
mov
xchg
decb
scas
or
dec
daa
cmpsb
cmpsl
pop
jnp
jg
jb
push
outsb
lret
hlt
fwait
and
mov
in
add
aam
sub
mov
mov
pop
shlb
jl
push
repnz
sbb
inc
flds
lods
arpl
subb
jle
int
xor
rcrl
mov
dec
or
sub
ret
jle
sub
mov
xchg
out
lret
xchg
lods
fmulp
dec
int
jbe
mov
mov
sub
and
add
cmp
and
aaa
stos
xor
adc
int
sbb
or
jg
jl
mov
dec
mov
pop
dec
dec
je
aam
in
xchg
shr
lret
dec
xlat
outsb
sub
mov
stos
fnsave
cli
pop
inc
ret
arpl
fucomp
out
popf
sti
lock
test
pop
cmpsb
mov
andb
sub
imul
dec
add
xor
jno
or
cmp
in
aaa
call
push
hlt
jle
mov
test
adc
jle
push
jle
or
daa
hlt
mov
and
insl
adc
add
mov
push
inc
aam
sub
dec
sti
adc
cli
xchg
cld
xchg
xchg
shll
jne
dec
mov
jp
add
xor
and
fstps
push
jno
movsb
jmp
ret
add
inc
bound
inc
sbb
inc
nop
mov
dec
loope
xlat
sbb
lea
push
les
jnp
mov
arpl
or
xchg
shll
imul
adcl
mov
cld
pop
inc
xlat
jae
scas
mov
dec
inc
push
aas
out
mov
or
inc
bsr
or
enter
in
ret
pop
addr16
xor
jo
and
pop
popf
fwait
ret
inc
in
jmp
jae
fmulp
push
movsb
push
outsl
dec
outsl
xchg
pushf
inc
push
lods
test
outsl
scas
cmpsb
xor
push
inc
notb
jae
rclb
mov
popf
sbb
inc
icebp
in
push
and
lea
xor
cmp
push
add
aas
dec
mov
fstl
sub
xor
adc
fldl
pop
fsubs
push
stos
shrl
jne
js
mov
jns
insl
push
push
jecxz
ja
xlat
mov
add
clc
xchg
sub
pop
adc
stos
pop
loope
cmp
gs
lret
adc
push
mov
pop
jp
in
sbb
jecxz
or
icebp
inc
out
cld
iret
cld
xchg
and
dec
sarb
cmp
ret
popf
cmp
pop
xor
adc
jbe
jg
sub
movsb
stos
in
fs
mov
pop
and
lea
add
imul
aas
inc
adc
mov
ds
mov
out
mov
ret
in
scas
mov
insl
rclb
add
mov
xchg
or
sub
xchg
cs
leave
arpl
sbb
inc
push
mov
cmp
rclb
dec
pop
popf
xor
aaa
cvtps2pd
add
sub
int3
into
mov
dec
call
ret
mov
insl
xchg
std
jnp
sbb
imul
insb
sub
jge
sub
inc
add
inc
iret
pusha
sub
pop
ds
adc
jmp
sub
pop
jmp
mov
dec
add
mov
jl
inc
push
adc
add
imul
jbe
dec
pop
cs
dec
add
cmp
xor
inc
push
dec
ljmp
pop
mov
xchg
dec
add
or
inc
or
es
aaa
xchg
and
lds
dec
sbb
mov
movsl
adc
jge
popf
mov
lcall
push
push
test
and
xchg
mov
stos
lds
mov
dec
es
sbb
mov
push
int3
adc
notl
pusha
test
das
ds
fdivrl
aam
mov
adc
sahf
jbe
lea
dec
daa
test
sbb
ds
or
mov
mov
xchg
lahf
pop
insb
lcall
cmc
or
add
lret
cmp
mov
add
pusha
cli
xor
pushf
mov
iret
mov
add
cmp
push
lods
dec
hlt
inc
dec
into
fistpl
data16
inc
add
jp
das
mov
lea
lds
mov
lret
cmp
shrl
wbinvd
mov
mov
rclb
sahf
adcb
xor
push
jp
iret
stos
jno
test
xor
out
bound
std
ficoml
scas
xchg
ret
jl
hlt
mov
lea
xor
and
fildl
daa
mov
pop
and
xchg
repnz
xor
dec
jo
inc
mov
pop
or
leave
push
pop
mov
pop
push
xor
hlt
lock
hlt
cmp
jge
inc
movsb
cmp
daa
add
addb
ljmp
gs
nop
adc
and
div
xchg
fs
inc
data16
add
sub
scas
lcall
mov
shrl
into
loopne
push
out
dec
lcall
enter
jae
fbld
data16
inc
push
sub
mov
xor
gs
loope
lret
jge
pop
popa
sbb
and
inc
call
jnp
outsl
testl
sar
fildl
ljmp
push
icebp
aam
popf
xor
int
orl
lds
mov
repz
pop
dec
push
js
xchg
jbe
sbb
sti
or
imul
xlat
mov
sbb
or
pop
push
movsb
mov
cmp
iret
rcr
cltd
dec
loop
add
xor
push
sub
movsl
fucomip
js
and
xor
inc
mov
dec
leave
xchg
jno
add
ret
xchg
add
sub
iret
jecxz
ljmp
inc
mov
xchg
divl
push
mov
out
xorl
shrb
xchg
daa
mov
fsubs
push
mov
imul
mov
clc
xchg
jne
mov
lcall
insb
sti
sub
ds
and
mov
fnstsw
add
int
mov
ret
jp
xor
int
cmp
rcrb
call
in
xor
shll
mov
lret
insb
xor
xor
mov
fstps
insb
dec
movsl
mov
out
or
lret
lea
mov
nop
pusha
test
scas
fs
cld
xchg
cmp
sbb
std
sbb
mov
fimull
roll
cmpsb
fldenv
lahf
xor
jmp
sti
cmp
sub
dec
and
das
mov
sub
mov
loopne
mov
fidivs
daa
adc
mov
cld
loopne
push
mov
decb
cwtl
aaa
or
hlt
dec
push
mov
gs
arpl
outsb
mov
jae
mov
mov
enter
inc
cmp
jb
jnp
dec
sbb
xor
push
push
pusha
xchg
aam
xchg
repnz
jecxz
addr16
push
hlt
cmpb
test
mov
or
sahf
sub
xchg
pop
loope
jnp
inc
mov
add
and
fldenv
clc
jne
xor
sub
loopne
and
jae
dec
xor
adc
push
xchg
invd
sahf
inc
mov
outsl
jge
scas
adc
pop
sbb
jp
sbb
out
shrl
xchg
and
or
adc
add
xor
fwait
pop
sbb
mov
arpl
dec
mov
push
sub
fiaddl
popf
fs
push
mov
inc
jge
push
xchg
testl
cmp
gs
mov
mov
lods
out
test
inc
sbb
pop
cmp
sub
out
xchg
jg
dec
sub
lret
pop
mov
jg
neg
xchg
ljmp
inc
cmp
pushf
cmp
cmp
xchg
addl
lds
fcmove
out
xlat
outsb
aad
mov
pop
cltd
mov
mov
lret
or
mov
pop
daa
inc
dec
pusha
cmp
cmp
scas
inc
fadd
mov
mov
packuswb
pop
mov
ljmp
fmul
fucomp
mov
out
mov
dec
out
mov
movsl
mov
lcall
imul
sarl
sub
lods
and
adc
stos
sahf
mov
test
sbb
or
cmp
std
out
pop
in
test
clc
xchg
push
lahf
in
nop
mov
mov
jmp
xchg
sub
nop
mov
pop
mov
enter
shll
loope
test
mov
mov
pop
and
int3
jne
xorl
mov
mov
jge
cld
inc
imul
int
push
add
and
loop
inc
cmc
adc
push
xor
sbb
imul
dec
jne
repz
mov
scas
xchg
pop
pop
pushf
push
stos
adc
sub
cmp
mov
mov
in
mov
fidivl
cld
cmp
mov
dec
mov
int
add
daa
xchg
dec
repz
mov
mov
je
mov
pop
insb
xchg
iret
sti
push
leave
jne
push
roll
mov
push
jno
add
mov
pop
int3
into
mov
hlt
inc
lods
ljmp
xchg
pop
scas
mov
shrb
xor
add
mov
rclb
mov
jmp
sub
ror
aam
movsl
pop
inc
loopne
testl
repnz
mov
fildll
adc
xor
dec
testl
xchg
popa
clc
repnz
out
test
sub
push
fcoms
adc
sub
ljmp
cs
cmpsb
lret
addr16
mov
xchg
push
add
cmp
jns
shl
lret
xor
dec
cmp
cmp
rcr
xchg
pop
add
pop
das
jb
imul
jecxz
data16
pop
mov
jge
mov
lret
fbstp
into
mov
inc
loop
pushf
jb
cmp
mov
push
mov
pushf
lcall
cmpsb
daa
sarb
scas
pop
shrb
lret
jae
ds
adc
and
mov
xchg
mov
stc
into
sub
arpl
push
ja
fs
mov
xchg
sub
xor
mov
jle
or
add
arpl
lods
sbb
xchg
jns
subb
add
or
sbb
jmp
jo
popa
jb
mov
mov
clc
notl
mov
mov
mov
stos
testl
inc
syscall
movsbl
adc
shlb
add
movsl
add
or
test
insb
mov
movsb
sbb
push
out
inc
mov
mov
hlt
ja
add
jmp
dec
xlat
data16
das
decl
and
das
dec
xchg
pop
int
outsl
cmpsl
sbb
aas
xor
jo
int
adcl
mov
int3
shrl
in
pop
mov
orl
sub
or
xchg
mov
movb
rcll
addl
jnp
xor
jb
jno
dec
push
test
mov
push
mul
shrd
and
int
sub
iret
or
push
out
call
add
add
sbb
jns
bound
lret
pop
in
inc
movsb
testb
fisubs
xchg
daa
lcall
cmpsb
cmp
fldl
push
lcall
inc
ljmp
push
xor
xchg
push
testl
maxps
js
sub
jae
leave
xchg
sub
push
mov
mov
cwtl
lret
xchg
sub
cmpsb
outsb
add
mov
mov
sahf
jecxz
loope
push
dec
pushf
out
sahf
pop
into
xchg
xchg
xchg
orb
push
or
sub
arpl
imul
xor
jmp
xchg
test
or
pushf
lods
aaa
fnsave
ficomps
lahf
mov
mov
cmc
mov
jo
aam
call
push
cld
sbb
popf
sub
pop
xor
jg
add
adc
push
add
iret
dec
cmp
in
jg
test
and
mov
jb
into
cmc
int3
jge
mov
sub
clc
xchg
das
add
lds
jl
ret
int
push
xor
sub
sub
xor
cmpsl
sbb
lea
and
adc
cs
in
xlat
inc
push
int3
xor
mov
and
add
mov
adc
int
mov
and
adc
out
and
push
fmull
mov
sbb
xor
cli
mov
cmp
daa
fidivl
push
mov
mov
adc
jo
mov
mov
roll
neg
call
inc
jo
pop
push
pop
ja
inc
cli
out
sub
adc
aam
xchg
sarb
mov
nop
push
popf
in
cmp
mov
sub
push
nop
mov
pop
repnz
jecxz
sub
pushf
das
testb
and
icebp
mov
xchg
cmp
mov
mov
push
and
cmpl
iret
out
popa
shlb
push
in
pop
add
in
lcall
sub
pop
outsl
mov
jbe
pop
lods
out
repz
loop
fwait
mov
popf
adc
adc
stos
xchg
and
je
inc
fsubl
xchg
sti
inc
sbb
xor
cmp
push
mov
inc
and
dec
loopne
fcom
test
xchg
lock
adc
ljmp
jo
sbb
cmp
mov
cmp
pop
jae
dec
adc
cld
and
sti
pop
jle
shrb
in
inc
dec
into
neg
sbb
dec
xor
mov
fs
repz
cmc
inc
cli
fnop
pop
dec
jecxz
icebp
pop
cmpsl
stos
leave
mov
int
jb
mov
mov
jg
xor
outsl
cld
and
xor
and
jb
sub
push
inc
or
cltd
out
cmpsl
mov
lea
dec
pop
push
mov
in
ljmp
mov
push
out
cli
pop
add
icebp
daa
jl
test
out
mov
rolb
xlat
ret
push
dec
loop
shrb
call
push
xor
pop
stc
push
hlt
les
out
addb
es
xchg
int3
out
cmc
or
cs
clc
vpunpcklqdq
dec
pause
les
push
aam
call
cmp
shr
dec
ljmp
cltd
add
fidivl
mov
je
outsl
pop
scas
les
adc
popa
sub
jns
mov
dec
ss
test
jmp
sbb
stos
inc
test
xor
and
jb
dec
dec
xor
sub
xchg
mov
pop
out
dec
out
jl
out
and
inc
xor
pop
stc
dec
add
iret
lods
movhps
iret
add
cmp
or
arpl
push
jmp
sub
cmp
pop
inc
std
fcoms
scas
insl
sbb
xor
je
sbb
dec
notb
popa
test
mov
aam
or
icebp
aaa
pop
lret
mov
cltd
std
inc
xlat
in
xchg
inc
jno
clc
hlt
push
push
test
mov
repnz
mov
jmp
lock
cmpsl
outsb
loop
imul
add
mov
arpl
adc
jnp
xchg
outsb
sub
pop
push
sbb
cmp
cmp
mov
mov
push
insl
cmpsb
adc
inc
mov
push
jo
push
mov
xor
mov
mov
xlat
add
pop
push
mov
fcmovnu
push
into
dec
add
push
mov
inc
and
lahf
cmp
fildll
cmp
mov
pop
cmp
jecxz
push
pop
pop
shrb
adc
cltd
xchg
mov
popa
test
mov
and
mov
mov
xor
lods
ja
dec
lcall
and
nop
mov
mov
pusha
insb
add
iret
mov
adc
cltd
mov
jne
fbstp
adc
inc
adc
and
and
nop
int3
dec
popa
divb
lea
pop
out
jnp
add
gs
ret
pop
mov
scas
add
shlb
mov
leave
or
sbb
dec
adc
pop
out
add
lock
xchg
adc
push
mov
shl
jns
shll
mov
iret
mov
add
fsubrs
adc
and
iret
pop
jg
sub
jnp
jp
cmp
xorl
mull
push
sub
addl
pop
jae
lods
mov
dec
sub
dec
xorw
out
sub
mov
pcmpeqb
outsb
mov
lret
sbb
imul
lahf
es
xchg
sub
sbb
dec
dec
inc
mov
aas
out
xchg
push
cmp
add
xlat
mov
jnp
mov
jp
not
inc
loopne
inc
imul
fstpl
mov
fistpll
adc
adc
pop
xor
xchg
in
or
sti
daa
les
sti
xchg
xchg
cmc
lea
dec
int3
ret
lret
mov
test
xor
aam
cmp
in
fstpt
inc
sti
push
repnz
cmp
int3
es
dec
dec
sbb
js
ss
xchg
dec
pop
xor
fsubr
testl
sbb
xor
repz
idivl
in
orl
cmp
repz
popf
sbb
aaa
aaa
mov
mov
pop
loop
adc
aaa
ljmp
cmp
jo
mov
mov
stos
mov
clc
mov
pop
call
pop
push
in
dec
cmc
jge
adc
in
xor
xchg
mov
xlat
jbe
dec
add
sbb
sbb
inc
push
and
lcall
and
mov
pushf
mov
push
popf
shll
mov
xchg
push
and
mov
add
push
inc
int3
fidivl
nop
daa
adc
xor
xchg
jmp
push
jno
inc
jecxz
sub
lods
push
dec
add
cmp
sub
mov
rorb
push
rcll
pop
data16
pop
xchg
cs
lret
testb
or
jne,pt
rorl
loop
test
jg
sub
out
push
lock
sub
adc
inc
inc
mov
aam
mov
nop
iret
sbb
shl
iret
cmp
in
lock
dec
leave
mov
dec
daa
or
fbld
shl
das
mov
xchg
in
ljmp
jne
setb
mov
call
xchg
inc
adc
int
fdecstp
jg
adc
mov
iret
aas
inc
int
jge
push
sbb
pop
cwtl
fisttpl
out
mov
pushf
loop
or
sbb
adc
jns
data16
adc
sub
mov
testl
lods
jp
jbe
movsb
ds
sti
add
ret
sbb
jns
mov
int3
mov
je
push
jbe
xchg
test
scas
fildl
inc
cmp
xchg
ror
push
push
decb
mov
mov
or
push
xor
jb
cmc
mov
adc
cmp
jnp
aam
sbb
mov
cmp
pop
push
test
insl
sub
and
xchg
ja
push
in
xchg
stos
jp
jmp
xor
mov
data16
push
xchg
push
test
daa
test
inc
cmp
mov
adc
int3
cwtl
decb
xor
push
mov
movsb
lret
mov
jo
mov
andb
aaa
ret
in
cs
cmp
mov
aam
std
rcrl
cmp
ret
or
loop
orl
shrb
push
nop
xor
mov
adc
pop
cmp
push
jo
repz
sub
mov
in
outsl
add
pop
xor
gs
jae
pop
insb
and
mov
adc
push
pop
arpl
push
xchg
mov
mov
ljmp
cltd
pop
dec
fidivs
repnz
cltd
test
jp
sub
in
inc
dec
or
mov
stos
inc
mov
push
in
add
imul
in
fwait
adc
mov
mov
pop
aaa
cltd
push
in
ret
push
inc
mov
xor
std
lret
std
push
adc
dec
into
ss
add
dec
dec
inc
cmp
xchg
dec
dec
loop
or
jno
lea
mov
fwait
cs
loop
out
add
clc
cmpsb
int
lods
fs
cmpsl
jns
shl
and
lock
xor
lcall
mov
in
cld
lods
add
xor
adc
sahf
cli
xchg
sub
mov
dec
adc
ds
jmp
imul
mov
ljmp
int3
clc
push
je
lock
dec
lret
inc
push
std
int3
rol
ds
fsubr
adc
in
repnz
sti
inc
insl
jge
mov
cld
test
mov
out
mov
push
jo
cmpsb
mov
lea
fldz
sub
movsl
dec
jne
jl
fsubrs
sbb
and
cs
mov
push
inc
fisubl
mov
fstps
push
mov
mov
mov
jp
jge
xchg
pop
sbb
idivl
shrl
mov
adc
les
std
sbb
push
xor
and
movsl
int3
andb
cmp
xor
rcl
jp
adc
pop
das
push
sub
punpcklwd
cmp
jecxz
adcl
xor
insl
cmc
ljmp
in
lea
mov
enter
fidivrs
pop
cmp
mov
xchg
pop
add
mov
std
adc
mov
xchg
test
repz
popl
add
aam
jno
pop
adc
add
fbld
adc
inc
clc
sarb
adc
cmpsl
cli
mov
mov
mov
int3
sbb
mov
rol
jge
cld
cmp
aas
dec
popf
sbbl
test
rclb
cmpsb
adc
push
iret
xchg
and
call
mov
xorb
mov
arpl
add
pop
sti
out
nop
mov
sbbl
dec
dec
fmul
decb
stc
inc
sahf
mov
dec
xor
das
scas
push
sahf
mov
iret
mov
in
stos
shrl
lret
cld
cmc
bnd
add
sbb
fidivs
add
inc
pop
repnz
loop
jbe
mov
or
jl
rcr
fsubs
pop
insb
xchg
les
jae
mov
or
cwtl
pop
js
mov
and
xchg
sub
clc
sub
xor
insl
mov
shrl
sbb
inc
leave
jecxz
rcl
insb
add
imul
scas
jns
push
ljmp
add
fwait
inc
fnsave
hlt
mov
pop
pop
lock
imul
pop
in
mov
loop
sti
xchg
cmc
mov
popf
add
mov
pop
shl
mov
push
movsl
and
mov
ret
mov
pop
imulb
mov
stos
mov
push
cmp
xor
ds
sbbb
fimull
lret
ds
daa
mov
sbb
mov
sti
lock
idivb
movsl
xchg
jmp
inc
aaa
adc
mov
jmp
adc
dec
dec
adc
iret
cmp
loop
jae
out
mov
clc
add
dec
inc
xor
mov
fstps
sbb
stos
mov
sub
subb
or
pop
cmp
add
pop
in
stos
mov
mov
jb
idivb
fwait
cld
mov
xlat
mov
icebp
stos
or
push
loop
rcrb
out
dec
ficomps
aaa
mov
mov
sub
mov
out
enter
cltd
sbb
mov
cmpb
pop
and
outsl
inc
dec
lret
cmp
int
rcl
stos
in
jno
and
mov
xchg
dec
sbb
je
mov
dec
jo
sbb
adc
movsb
cmp
ja
les
pop
sbb
jp
mov
test
pop
lahf
stos
cmp
mov
mov
jge
outsl
scas
jo
aam
shl
adc
push
mov
push
mov
nop
mov
add
ret
orl
loop
jp
xchg
shlb
lea
aam
orb
fcoms
cmpsb
and
scas
inc
aas
xchg
or
add
adc
dec
and
sub
out
xchg
cli
cmp
or
mov
test
ds
or
test
scas
mov
shll
push
push
xchg
fdivrs
inc
test
cmpsb
adc
push
mov
icebp
movsb
stc
xchg
in
leave
sbb
push
pushf
sbb
xchg
jmp
xchg
mov
out
loope
lock
jle
das
mov
rsqrtps
mov
lea
jl
movsl
pop
in
inc
enter
ficomps
dec
dec
ret
outsb
sbbb
enter
in
xchg
xor
mov
add
adc
jae
outsl
daa
pop
scas
lea
jmp
fdivl
test
data16
orb
jae
sub
xlat
stos
jo
sbb
dec
sbb
mov
hlt
aam
outsl
sbb
adc
mov
or
jmp
xor
aaa
push
sahf
jo
jl
subl
leave
loope
cwtl
mov
inc
das
lods
int3
add
or
mov
arpl
bound
shl
mov
mov
daa
jae
aam
xorl
cmp
out
stc
sub
rcl
cmpsl
lds
fcompl
push
pop
ljmp
cmp
push
sbb
pop
dec
xor
cmpsl
outsl
loopne
adc
testl
das
ret
pop
sub
mov
icebp
pop
rcrl
cmp
lret
push
in
roll
orl
or
lcall
mov
mov
xchg
lods
jmp
fwait
jp
sub
fimull
int
adcl
xchg
jg
dec
dec
adc
push
lods
in
ret
inc
mov
fs
pop
imul
daa
lret
cmp
mov
sar
push
inc
fwait
or
lahf
orb
out
jmp
pop
mov
lret
jbe
mulb
xchg
pop
add
adc
dec
xchg
cs
mov
mov
pusha
int3
jb
daa
outsb
push
sbb
inc
inc
stc
xchg
xchg
sbb
call
pop
lahf
jae
or
in
jno
inc
inc
add
sub
sbb
dec
push
pop
push
pop
and
jmp
lods
add
inc
dec
shll
pop
shrb
push
add
dec
xor
adc
test
fnstsw
xor
and
pop
dec
pop
push
std
xchg
mov
sahf
lods
push
push
add
or
andb
pop
insb
mov
stos
adc
inc
adc
int3
cmp
icebp
push
hlt
push
or
roll
ljmp
lahf
xchg
mov
cs
or
lret
shll
dec
fildl
mov
rcrl
lods
mov
je
orl
movsl
jge
sti
pop
jmp
es
sti
or
idivl
rorb
push
jb
adc
enter
mov
jns
movsb
mov
rcrb
test
das
mov
sbb
mov
repnz
cmp
jecxz
xchg
rcl
shrb
lahf
ss
adc
ss
bound
imul
mov
scas
cmp
insb
cmp
popf
test
ret
hlt
xchg
insb
enter
xchg
jp
ret
pop
mov
fsubp
mov
shr
inc
test
ret
enter
sarb
adc
arpl
popa
rolb
call
or
mov
std
xchg
xor
dec
sbb
inc
stc
xchg
sub
gs
nop
out
mov
icebp
dec
xor
push
stos
xchg
int
std
jmp
adc
insb
pop
adc
jl
fbstp
mov
sti
imul
incb
mov
shll
add
dec
movsb
xor
xchg
pop
cmpsb
mov
xchg
sub
push
imul
or
xchg
add
scas
dec
pop
and
pop
dec
or
sub
dec
push
push
sub
sar
dec
mov
jns
in
rol
clc
nop
movsb
faddp
fiadds
repz
sti
and
sub
faddl
clc
jb
insb
stos
icebp
sbb
rcrb
into
jl
ror
cltd
push
xchg
push
adc
sbb
mov
pop
idivl
jb
mov
mov
notb
sub
pslld
cmpsb
xlat
lahf
imul
push
dec
dec
mov
push
or
in
clc
jecxz
ss
ret
or
aad
mov
fsubr
or
pop
push
adc
and
sbb
push
dec
adc
mov
iret
pop
into
faddl
out
lret
in
mov
stos
xchg
repnz
xchg
scas
call
sub
in
mov
sbb
mov
jge
cmpl
out
or
mov
subb
xor
lahf
dec
ja
repz
test
std
pushf
or
adc
inc
sbb
xor
std
and
in
lcall
dec
dec
out
dec
repnz
xor
int3
and
rol
movsb
das
inc
fstpl
sbb
add
pop
mov
sbb
repnz
mov
popf
jp
mov
int3
dec
mov
insb
and
pop
shlb
add
adc
sbb
xor
cli
xchg
mov
fbld
adc
nop
xor
push
outsb
stc
jle
jo
mov
inc
xchg
in
dec
insb
push
call
inc
sbb
test
int
mov
sbb
les
sahf
push
mov
idivb
add
cmp
adc
xor
aas
add
gs
jb
jl
push
mov
dec
iret
adc
sar
fimull
aas
pop
out
ret
test
movsb
adc
fistl
mov
or
inc
sahf
and
movsb
jns
xchg
icebp
mov
cmp
xabort
ja
leave
pop
int3
out
jne
xchg
mov
xchg
cmp
push
mov
pop
repnz
stos
ret
cmpsl
ret
mov
jl
arpl
hlt
cwtl
cmp
xchg
mov
push
sub
mov
jle
adc
js
sbb
ss
push
cmp
mov
stos
jmp
jno
imul
ret
dec
outsb
rcrb
les
les
push
mov
push
and
out
fmul
ret
jb
and
into
aaa
and
sub
pop
xor
ljmp
fsubl
adc
add
push
std
lret
bound
mov
push
call
movsb
pop
repz
outsl
mov
fwait
and
rcrl
je
sub
repz
out
pop
cmpsb
and
inc
jl
mov
xorb
insl
nop
push
rol
divb
test
shll
in
popa
mov
jle
mov
enter
cltd
jmp
scas
sub
mov
outsl
addl
lret
mov
pop
add
js
dec
divb
dec
pop
fcoms
and
pop
pop
push
int
icebp
cmpsb
into
dec
test
in
rclb
test
icebp
pop
testb
lret
xchg
sbb
xor
push
pushf
fcmovnu
and
sbb
lods
xor
in
or
fwait
mov
sahf
stc
sub
xor
popa
fidivrl
and
and
xchg
mov
xchg
mov
inc
mov
testb
mov
mov
sbb
out
mov
sub
imul
data16
scas
lret
cmp
jo
adcb
xchg
mov
xchg
pop
pop
std
mov
jno
cmc
pop
mov
repz
and
and
mov
inc
int3
pop
jno
leave
inc
sub
movl
mov
dec
adc
call
shll
test
rcrl
aad
movsb
pop
iret
adc
or
xor
mov
aas
int
and
pop
mul
push
and
js
dec
insl
mov
jge
sub
push
sub
cmp
jmp
and
orb
sbb
cmp
aam
add
inc
push
xor
clc
mov
or
cs
call
je
jo
cmp
cmp
mov
inc
popf
cmp
into
dec
orb
xlat
mov
cmp
je
sahf
add
test
ret
jb
mov
mov
mov
vandps
out
aad
inc
mov
cli
jmp
ljmp
pushf
xor
xchg
xor
cwtl
aas
push
push
and
sub
pop
adc
mov
xchg
inc
sub
test
fwait
push
dec
and
jno
pop
push
lods
pop
and
lods
and
test
cmp
js
xchg
mov
cmp
mov
fsubr
sahf
mov
mov
cli
inc
fdivr
and
jo
scas
dec
lds
push
lods
cmpl
arpl
mov
mov
jb,pt
push
cld
ja
fsubrp
cwtl
inc
push
cltd
inc
cltd
or
pop
aaa
gs
movsb
gs
push
inc
test
hlt
hlt
sbbb
push
jecxz
or
mov
das
fcomps
dec
rcll
fcmove
lret
clc
fisubl
push
out
mov
inc
movsl
or
in
out
push
aas
hlt
jecxz
cld
cltd
sbb
pop
dec
andb
call
dec
inc
bound
push
je
aaa
into
cmp
les
cs
adc
pop
push
dec
lock
movsl
sub
adc
nop
lret
fucomip
popf
jbe
into
in
sub
inc
fs
xchg
imul
popa
aas
xchg
insl
mov
and
inc
pop
test
inc
sarl
mov
stos
cwtl
push
imul
jecxz
popf
iret
cmp
lret
xlat
cli
dec
sbbl
jnp
sub
add
xchg
pop
jbe
push
imul
ret
and
sbb
mov
test
cmp
sub
push
test
mov
sbbb
pop
int
sarl
cmc
in
jno
push
orl
aad
mov
dec
fstps
dec
addb
pop
in
insb
popf
push
lahf
inc
rcl
and
fisttpl
loop
mov
dec
xchg
fldpi
clc
imul
inc
out
lds
pusha
aam
mov
and
daa
jmp
cmp
in
or
insl
cmc
mov
insl
adc
int
mov
pop
jb
pop
jb
les
stos
ret
cltd
test
testb
andl
xlat
jns
push
mov
push
xchg
inc
adcb
pop
sub
fsubp
daa
xorl
cmp
add
lock
push
cmp
test
mov
insb
stc
rcrl
jl
bound
sbb
mov
mov
loopne
adcl
fistpl
xchg
mov
aas
clc
cmp
test
shl
mov
int
movsl
cmp
mov
cmp
jo
call
fisttpl
add
outsb
loop
outsl
pop
leave
notl
sbb
sbb
mov
mov
push
enter
add
mov
push
xchg
jae
pop
xor
and
ljmp
adc
xchg
mov
gs
pop
cwtl
sbb
dec
mov
push
lods
pop
sbb
fdivr
sti
push
rclb
add
fiadds
mov
shlb
cmp
rorl
inc
add
cmpsb
fcomip
mov
jp
mov
mov
les
xlat
jle
mov
fstl
push
and
scas
cwtl
cli
inc
or
or
adc
test
or
cmp
aam
dec
scas
les
stos
mov
dec
and
shll
lods
addr16
pop
mov
test
in
lcall
call
push
pushf
mov
mov
insl
jnp
gs
arpl
lret
pop
pop
int
int
inc
pop
fiaddl
fisttps
in
test
dec
sbb
cmp
jg
inc
adc
cli
rorl
sub
daa
mov
daa
jbe
or
xor
addr16
sbbl
pop
ljmp
jg
fs
out
repz
lds
iret
aam
shlb
pop
jmp
adcb
sahf
loop
inc
pop
test
shl
inc
push
xchg
adc
lds
cmpsl
ds
lds
cmpsb
inc
pop
imul
pop
push
dec
scas
cmp
sub
mov
aaa
jbe
pop
mov
adc
xor
stc
fcompl
imul
mov
or
cld
xchg
sbb
aaa
insl
add
aas
inc
sbb
test
fbstp
outsb
int
in
cwtl
or
fdivp
testl
outsb
adc
cwtl
sbb
lea
in
push
scas
out
pop
sahf
jb
push
pushf
rcr
roll
pusha
adc
mov
aas
dec
sub
adc
sub
jne
cmp
xchg
repz
mov
adc
dec
sbb
and
lods
mov
shll
adc
ss
ss
inc
xchg
dec
movsl
dec
jno
inc
aad
xor
fmuls
insb
stc
bnd
dec
xchg
jge
les
cltd
mov
sarb
mov
jg
mov
aaa
cmc
jne
sub
sbb
sub
and
mov
sub
jb
stos
pop
sbb
mov
jo
shrb
or
push
mov
pop
outsl
inc
stos
leave
push
fsubrl
fs
int3
shlb
xor
test
mov
or
add
sub
dec
out
cltd
iret
and
dec
aam
stc
aam
js
cmp
dec
loopne
rorl
cmp
jno
fisubs
sbb
stc
out
dec
xchg
sbb
jmp
shlb
xchg
add
test
dec
mov
jmp
lods
in
mov
push
mov
fdiv
and
xchg
pop
inc
cld
xchg
mov
sbb
cs
jne
cmp
imull
adc
pop
es
data16
fcomps
sub
in
test
data16
aam
or
data16
add
mov
push
cltd
cmp
lock
cltd
pusha
mov
ja
decb
loope
sbb
int3
xchg
mov
push
jmp
fsubrp
push
lret
or
pop
push
xor
mov
cmp
outsb
les
adc
jns
add
mov
xchg
or
fcoml
xor
add
or
in
sti
roll
ss
clc
xlat
sub
inc
test
imul
xchg
and
in
dec
push
mov
and
aas
xor
xchg
test
pop
cld
adc
ss
dec
loop
pop
cmp
das
popf
jo
cli
xchg
adc
cwtl
xchg
test
xchg
clc
scas
iret
and
mov
out
and
push
enter
xchg
xor
pop
jmp
add
mov
cmc
xchg
xchg
sub
sub
mov
dec
jne
mov
push
clc
inc
pop
lret
cmc
and
movsb
cld
test
into
ror
push
insb
popa
fistps
ds
and
push
mov
push
lahf
test
outsl
ljmp
cld
mov
incb
loopne
mov
inc
dec
mov
les
lret
aas
dec
pop
xchg
daa
sbb
push
inc
sbb
mov
cmp
test
enter
cmp
mov
push
fdivrs
cmp
push
cmpsb
movsl
shll
push
lea
adc
out
cmp
dec
xchg
xchg
add
sub
mov
dec
mov
jnp
mov
push
mov
fsubrs
das
lcall
sar
mov
adc
sahf
testb
adc
enter
imul
cli
push
push
jmp
sbb
mov
and
sbb
pop
cmp
leave
xchg
daa
sub
mov
das
lods
repnz
push
mov
int
cmp
andb
pusha
cmp
fisubl
lea
sub
jge
dec
sbb
mov
xchg
cwtl
test
xchg
testl
mov
mov
or
mov
mov
subb
push
dec
lcall
das
test
sar
std
pop
cmp
dec
push
xor
push
shr
into
bound
push
in
mov
int3
loopne
xchg
testb
cmpsl
mov
aam
and
dec
or
cmp
dec
jge
sbb
lahf
ret
jle
push
sbb
sbb
lock
popf
aas
outsb
sbb
outsb
cli
and
mov
lods
xchg
cmpsb
pop
dec
dec
gs
cmpsb
ret
cmp
mov
aas
lcall
prefetchw
and
jmp
popa
jns
push
jo
fstps
pshufw
pushf
cmp
jnp
mov
xlat
incb
add
notb
dec
cli
mov
rorl
cmc
add
xchg
dec
pop
mov
sarl
cmp
in
subl
sub
sub
lea
dec
pusha
inc
dec
pop
jmp
cmp
xchg
stos
hlt
adc
repnz
pop
fdivrs
pop
pop
les
cmp
add
dec
sbb
nop
out
inc
sub
aad
jns
lahf
or
jae
cmp
pop
stc
and
push
jmp
add
sbb
add
sub
xchg
cmpsl
imul
out
mov
mov
out
adc
sbb
and
mov
add
push
fsubs
pusha
andb
xor
sbb
push
push
jo
ja
sub
or
cmp
jl
dec
mov
jnp
mov
bound
test
imul
lds
sarb
push
push
or
adcb
xor
mov
xchg
lahf
jns
mov
fldt
dec
in
sub
pop
lock
push
ljmp
mov
adc
into
sbb
sti
lods
inc
jno
cmp
sub
pop
fstpt
sti
jns
add
mov
jmp
sahf
fnsave
or
cmp
adcb
out
sbb
insl
fsubrl
push
mov
cmpsl
addr16
sahf
and
call
xchg
in
mov
movsl
in
shrb
jne
mov
xchg
notb
in
xchg
scas
pop
cmp
mov
pop
pushf
into
ficoms
sarb
or
mov
test
or
push
jl
add
je
fs
insb
sub
adc
xchg
data16
imul
xchg
repz
fmul
mov
gs
dec
je
jge
adc
jns
mov
fisubrl
in
cmpsl
ljmp
insb
fidivrl
jb
cwtl
sub
pop
cmp
cmc
ja
push
in
repz
repz
mov
xchg
call
push
mov
mov
fnsetpm(287
hlt
lods
ljmp
aas
dec
pop
cmp
ja
pushf
cmp
push
mov
mov
inc
push
lods
cmp
movsb
call
cmp
jp
jb
or
rol
dec
cmp
lahf
outsl
pusha
cmp
shlb
mov
add
push
mov
jns
dec
push
loope
adc
xchg
and
add
dec
or
std
ss
pop
push
clc
sub
sahf
es
xchg
dec
xor
mov
and
clc
mov
mov
pop
push
insl
stc
je
jge
xor
sub
fldt
cmp
lcall
pop
jbe
data16
insl
xor
inc
in
std
jmp
fisttpl
adc
pusha
jge
sbb
add
int
hlt
insl
cmp
mov
xchg
aad
or
mov
aam
push
mov
repz
or
inc
sub
xor
jmp
cmp
mov
arpl
lods
stos
mov
fucomip
jge
lahf
fldcw
out
fwait
sbb
shrb
sahf
enter
adc
movsl
sub
lahf
pop
into
stos
xor
mov
xchg
jnp
cltd
aad
out
dec
mov
enter
arpl
dec
sbb
imul
aaa
or
sahf
inc
sbb
daa
ds
popa
sbb
std
jg
cmp
cld
fwait
mov
mov
out
cmpsb
pop
and
jo
mov
aam
testl
cltd
pop
sti
pop
xorb
testl
sub
add
fwait
les
setns
imul
pop
push
sti
stc
test
inc
aaa
jae
push
movsl
call
cwtl
lods
sbb
inc
popa
lock
mov
mov
lahf
fcompl
incl
fs
jbe
int
rcrl
in
fildll
fisttps
outsb
inc
mov
jb
movsb
aas
rcll
jae
aas
mov
mov
mov
push
andb
dec
frstor
inc
bound
add
cmp
inc
pusha
add
lods
ljmp
mov
test
aad
lret
rclb
out
pop
fwait
cmpsl
jns
sub
and
leave
pop
xor
outsl
pop
outsb
cltd
faddp
pop
adc
xorl
ret
push
jmp
cmpsl
cmp
or
out
sub
iret
and
clc
es
xchg
mov
ss
fldt
mov
lret
mov
rcll
nop
data16
mov
jb
test
cmp
xchg
repnz
ret
pop
xchg
jno
cmp
daa
jmp
jbe
decl
insb
add
addr16
enter
lcall
cwtl
imul
call
ja
push
vmovdqa
sbb
adc
nop
pop
cmp
xchg
test
insb
fcmovbe
and
jp
outsb
mov
rorl
pop
cld
or
mov
sub
daa
xor
fmuls
push
out
push
jb
fmull
mov
xor
or
dec
or
pusha
push
subb
jecxz
or
and
lcall
inc
cmp
shrl
pop
dec
aam
xchg
xor
xchg
lret
mov
xchg
imul
jmp
notl
adc
jo
sarl
pop
sub
fwait
mov
sbb
nop
rolb
adcl
inc
mov
mov
sti
into
or
loop
fcompl
pop
push
scas
sbb
dec
test
test
jl
lods
out
mov
stos
sbb
sub
lods
xchg
into
les
loopne
or
popa
mov
fildll
pop
out
in
test
and
and
xchg
test
pop
ret
pop
pushf
jecxz
jl
mov
add
repnz
ss
xor
jbe
pop
aas
dec
dec
fisubrl
test
and
mov
mov
or
not
lock
cltd
xchg
push
imul
int3
cwtl
outsl
ror
popa
or
mov
cltd
fistps
mov
dec
cmc
repz
mov
adc
addr16
and
adc
and
mulps
enter
in
mov
and
stos
popf
cld
xchg
add
push
rcrb
sub
adc
mov
aas
cli
and
or
shll
xchg
pop
inc
xlat
orb
pusha
out
fidivl
mov
inc
jl
adc
push
inc
cmp
jae
cli
xchg
pop
jge
and
and
xor
mov
fdivrl
lahf
repz
pop
das
ss
mov
jl
sub
sbbl
cmp
outsb
dec
or
push
mov
cmpsl
cmp
push
test
mov
xor
fs
enter
mov
ss
sub
add
sbb
mov
xchg
outsl
dec
or
or
loope
dec
pop
pushw
ja
js
lahf
sbb
mov
imul
pop
add
hlt
push
jb
sbb
fidivs
mov
movsl
mov
xchg
lock
les
les
xor
std
push
push
loopne
xchg
sti
or
dec
pop
iret
into
push
in
jbe
dec
into
and
sti
and
jo
and
xlat
mov
sbb
out
std
flds
cmp
xchg
js
dec
adc
lret
mov
sbb
addr16
imul
jo
dec
pop
mov
push
leave
mov
xor
call
test
test
add
xor
and
push
dec
fsts
rcrl
dec
mov
mov
scas
jnp
outsb
add
cmpsl
jle
sbbb
sbb
rclb
mov
mov
mov
outsb
jge
popa
jnp
aad
xchg
add
sbb
mov
xchg
mov
xor
xor
pop
cmp
fimull
mov
xor
xor
movsl
mov
fwait
subb
cmpb
out
aaa
xchg
rorl
das
fnstcw
in
repnz
mov
popa
pushf
arpl
cmc
pop
addl
sbb
mov
inc
sbb
dec
mov
xor
loope
push
in
aas
add
jp
pusha
js
aam
add
lcall
or
aam
fwait
clc
jge
xchg
mov
std
mov
int3
xchg
xor
xchg
xorl
sbb
jbe
shrl
jns
aaa
mov
or
movsl
cmp
fnstenv
jg
mov
add
adc
push
xchg
mov
leave
jno
hlt
and
mov
xchg
inc
ja
stc
ds
insl
jo
in
cmpl
jbe
lods
fmuls
sbb
iret
shrb
int3
pop
push
jbe
shr
scas
sub
add
pop
js
ficomps
std
lcall
jnp
imul
repnz
shlb
mov
lods
push
dec
loop
out
adc
movsb
and
neg
cmc
add
ret
loope
andb
fstpt
jge
sahf
das
pushf
push
decb
mov
aas
add
jmp
mov
test
pop
fisttpl
mov
shrb
push
movsb
jecxz
cmp
fnstenv
jne
fisttps
adc
fidivl
cmp
lds
xor
sar
nop
fucomip
jg
mov
test
adc
mov
mov
out
pop
pop
int
mov
or
es
or
popf
or
shll
adc
cwtl
scas
imul
test
out
cltd
jae
inc
sub
mov
mov
sub
mov
push
loope
jno
jmp
sahf
mov
fildll
loopne
push
jp
js
rcr
mov
dec
xor
js
mov
mov
jecxz
and
mov
sub
push
jno
int
adc
stos
test
xor
rcrl
std
xorb
fcoms
je
popf
sbb
mov
fcoms
cwtl
stc
shll
add
mov
jl
mov
cld
mul
loop
pushf
pop
test
dec
loope
out
mov
push
pop
pop
rol
clc
and
xchg
shl
xchg
cwtl
dec
fwait
pusha
mov
gs
mov
es
in
or
mov
pushf
std
pop
shrb
iret
inc
pop
popl
inc
mov
int3
mov
cmpsl
roll
cs
mov
xor
fwait
rcrl
mov
xchg
call
mov
mov
mov
andb
sbb
dec
pop
and
ret
fxtract
std
mov
mov
push
mov
leave
mov
xchg
sub
xchg
push
leave
or
dec
add
push
imul
loop
pop
adc
faddl
outsb
popf
pop
xchg
mov
iret
data16
test
xor
adc
sbb
sub
mov
dec
js
mov
rclb
mov
shlb
pusha
shl
push
mov
push
stc
js
ljmp
jmp
hlt
lea
cli
mov
xchg
mov
lds
cmpb
mov
imul
scas
sahf
nop
push
mov
outsl
ror
dec
xchg
push
test
mov
mov
cmp
xchg
jbe
jle
sbb
push
shll
push
mov
mov
fidivrl
mov
negl
adc
pusha
aam
fwait
iret
push
and
ficomps
sbb
push
pop
mov
out
pop
mov
push
out
cmp
into
out
jg
sub
loope
pop
add
int
inc
data16
rcrl
sti
push
sub
sbbb
mov
jl
or
andb
or
push
leave
adc
push
xor
repnz
adc
mov
adc
in
insb
cmp
ds
sub
inc
sbb
xchg
loop
pop
cmpsb
and
add
js
lahf
stc
rcll
jbe
cmpsb
add
test
loop
cld
adc
f2xm1
roll
sub
stos
cmpsb
mov
aaa
test
idivl
mov
movsb
sbb
cmpsb
sbbl
inc
pop
mov
testb
js
jo
sub
mov
negl
fildl
add
sub
xor
or
xchg
cmp
popa
xor
fisubs
push
add
pop
call
xorb
xor
push
stos
call
andb
jo
push
mov
push
xlat
outsb
orb
jg
or
xchg
call
or
cmp
mov
jp
icebp
mov
call
hlt
xchg
inc
push
dec
loopne
pop
mov
int
lcall
pop
cmp
sbb
into
shrl
or
jno
jne
fs
inc
pop
pushf
xor
scas
mov
insb
cmp
daa
inc
cs
fnsave
jl
inc
sti
pop
or
frstor
ret
fs
xchg
or
push
sub
sub
das
cmc
ret
imul
pop
xor
mov
jecxz
or
mov
adc
addr16
shrb
in
inc
fcomps
add
mov
push
mov
dec
test
xchg
ss
and
push
cmpsl
popf
mov
xchg
jo
cs
dec
xchg
ret
jge
inc
push
outsb
andl
idivl
push
data16
scas
inc
sti
outsl
sbb
add
jbe
ss
mov
jae
inc
adc
ss
xorl
xor
and
pop
shlb
xchg
cld
movsb
mov
or
arpl
add
mov
sbb
out
out
std
mov
popa
pushl
cmp
jmp
sti
adc
lret
inc
mov
sub
icebp
pop
rcrl
sub
leave
movsl
mov
pop
and
or
lret
aad
cld
inc
cmpsb
jp
vmread
mov
and
pop
lret
sub
std
xor
rcrl
dec
aaa
stc
mov
nop
rol
mov
fadd
imulb
mov
adc
lods
xor
dec
xchg
lds
lahf
dec
fstl
test
scas
std
aad
das
ficoml
push
xor
or
cs
rorl
addb
mov
push
dec
fildl
jecxz
lea
dec
adc
out
in
addl
arpl
jp
loopne
test
mov
daa
sub
shrl
les
js
daa
stos
pop
jne
fdivs
xor
jle
sub
xor
sub
cmp
push
lret
stc
nop
lods
inc
mov
jo
push
aam
imul
add
add
jns
daa
mov
pop
roll
xchg
jbe
scas
cmpsl
mov
scas
jle
add
fsubl
inc
push
push
xchg
or
dec
mov
out
jecxz
mov
jmp
ret
add
scas
push
fadds
inc
aad
fs
loop
ljmp
mov
jnp
push
and
inc
fldenv
jbe
loopne
fldenv
jp
sub
xor
les
push
je
popf
and
into
mov
fs
sbb
cs
cmp
xor
sbb
loope
mov
sub
push
dec
pop
shlb
or
dec
xlat
sbb
dec
in
ror
ret
out
adc
sbbb
mov
scas
aam
sahf
movsl
dec
loope
cmc
adc
movsl
jnp
sub
int3
pop
hlt
std
push
pop
lods
ljmp
inc
stos
lods
push
xchg
mov
push
movsb
les
inc
faddl
lea
sbb
pushf
sub
int
xchg
cltd
sub
sahf
out
bound
add
idivl
test
les
roll
cmpsb
les
adc
adc
int
jge
pop
cld
sub
sbb
inc
out
add
repz
cs
and
lods
mov
mov
mov
rorl
jnp
call
ja
pushf
imul
pop
inc
pop
sbb
adc
aaa
mov
in
gs
fcoms
addr16
fsubl
in
cli
push
adc
adcb
ret
push
push
jge
sahf
mov
sahf
into
into
dec
mov
dec
xor
push
out
nop
push
pop
iret
sbb
xchg
sbb
lods
dec
mov
mov
daa
inc
and
push
leave
je
push
push
sbb
fsubrl
movsb
push
jmp
fmulp
cmpsl
fsubrl
cli
and
sbb
stos
add
dec
jle
jl
cs
mov
rcll
mov
inc
ds
sub
xor
pop
dec
mov
and
sbb
dec
movsb
push
ljmp
jno
nop
adc
lock
fisttps
cmpsb
cmp
call
icebp
pop
inc
into
loop
aad
arpl
in
and
cmpsb
sbb
icebp
aaa
dec
and
inc
fisubrl
dec
dec
xor
int
in
cmp
push
stc
std
lea
mov
jp
xchg
sub
jg
mov
mov
inc
data16
call
shlb
jo
lret
cmp
in
test
aam
mov
popa
mov
push
imul
pop
mov
mov
test
sub
in
inc
dec
lahf
and
call
cmpsl
pop
test
loop
fdivs
mov
loopne
dec
popf
cmp
jle
xchg
stc
mov
sbb
pusha
fstl
test
push
jge
xor
or
ficompl
cmp
cmp
xlat
inc
cltd
pop
dec
fildl
fucomi
add
test
ljmp
es
inc
or
fldenv
pop
add
in
in
and
pop
dec
lock
mov
xchg
xor
out
ds
mov
paddb
mov
js
rol
cmp
outsl
xor
fdivrl
ss
push
inc
mov
push
inc
bound
xchg
stos
or
mov
xor
mov
repz
push
mov
in
or
push
ficomps
sti
pop
rcl
inc
pusha
mov
jne
lcall
shll
mov
loope
adc
inc
fsubrs
sub
jae
repnz
cltd
sub
xchg
mov
pop
imul
ds
push
mov
adc
in
adc
sbb
mov
jl
xchg
dec
xchg
cmp
jbe
enter
test
adc
sar
push
xor
dec
push
adc
jns
add
movb
gs
subb
in
sub
jbe
scas
jne
mov
dec
mov
mov
mov
adc
mov
jb
or
inc
xchg
adc
push
insb
popf
mov
in
ret
movsl
mov
adc
and
mov
or
dec
shll
and
je
pop
xor
mov
movsb
andb
dec
add
decl
mov
push
es
loopne
sbb
dec
sbb
in
mov
iret
cltd
out
test
cmp
int3
cmc
jbe
subb
mov
xchg
sub
sbb
mov
cmp
fdivs
or
ljmp
xchg
push
jmp
or
mov
movsl
rcpps
mov
fsubs
mov
and
repnz
shll
mov
test
push
repz
fucom
mov
in
in
push
out
adc
arpl
sub
dec
iret
idivl
lds
gs
cmpsl
lret
outsl
icebp
nop
fs
cmp
lods
iret
push
clc
inc
loope
cmp
jg
cmpsl
fsub
sbb
xchg
mov
pop
sbb
mov
inc
xchg
int3
add
iret
cmp
add
cli
aad
iret
or
sub
scas
ljmp
dec
dec
js
jl
out
hlt
dec
xchg
xchg
sub
jmp
shlb
pop
sub
adc
les
and
dec
mov
in
jecxz
lods
stos
loope
imul
fnstsw
aam
test
stos
inc
pop
or
pop
dec
push
outsl
ja
xchg
or
cwtl
sbb
jae
loop
and
inc
add
xchg
pushf
mov
fsts
testl
mov
fisttpll
lahf
push
ja
adc
sub
je
jo
andb
adc
addr16
sbb
push
fcoml
inc
jbe
es
add
xchg
sbb
popf
and
test
pavgb
insb
jle
push
lock
das
mov
push
dec
loop
push
lods
call
int3
out
jbe
jge
xchg
jno
fwait
mov
lret
push
dec
push
and
test
pop
clc
mov
add
xorl
xchg
inc
push
icebp
mov
mov
push
mov
xchg
mov
xchg
mov
mov
push
or
sbb
sarl
cmp
mov
sbb
lods
cmp
test
mov
fucom
fwait
cmpsl
sbb
data16
sbb
pop
dec
sti
out
xchg
jl
mov
dec
in
xor
lods
inc
xchg
dec
lret
sti
jo
js
mov
movsl
cmp
sbb
jge
stc
cmp
into
gs
adc
bound
stos
test
push
fdivs
or
in
test
inc
out
add
sbb
je
movsl
in
mov
mov
mov
nop
lea
lea
xchg
mov
xor
add
push
jnp
popa
and
repz
lret
cld
push
adc
xchg
mov
arpl
stos
cmp
or
decb
cmp
pop
pop
idivb
add
pop
mov
sbb
movsb
inc
lds
nop
mov
and
push
add
jne
repz
fwait
call
test
pop
xor
push
xor
gs
or
cmp
mov
ficoms
cmp
mov
xchg
enter
jge
fsubs
pop
rcll
and
std
push
outsb
clc
inc
sub
js
add
cmp
sub
mov
jne
and
gs
push
hlt
lcall
pusha
addb
inc
pop
jg
push
frstor
subb
cmp
mov
dec
add
div
xchg
bound
inc
icebp
scas
js
negl
gs
cmpb
pushw
adc
sbb
jg
fisttps
in
adc
lret
out
mov
in
std
enter
sti
mov
test
or
xor
lods
jo
pop
fnstsw
out
std
push
fcmovnbe
add
cmp
fdiv
mov
sub
scas
dec
xchg
dec
mov
push
out
adcb
xor
shll
mov
jnp
jns
pop
stos
mov
cwtl
jecxz
rcr
push
jne
gs
lahf
jp
xchg
hlt
xchg
popa
jmp
push
or
divb
push
imul
flds
dec
ljmp
lahf
mov
add
cmp
popf
pop
mov
scas
adc
push
in
inc
mov
sub
jne
arpl
cld
and
jbe
adc
inc
xchg
push
repnz
in
outsb
sub
push
add
pop
out
out
add
es
bound
pushf
mov
pop
popf
push
pop
daa
hlt
pusha
sub
rclb
scas
aaa
and
fldenv
rorb
fistps
in
call
xor
aam
fldt
sbb
loop
mov
cltd
push
xor
insb
test
add
dec
and
cmp
pop
lods
mov
clc
mov
pop
sub
ljmp
shll
xchg
mov
cli
dec
cmpl
jns
out
jg
shr
fdivs
shrl
cmp
inc
and
ret
pop
push
xor
cs
loop
movb
push
sarl
pop
jae
je
mov
das
cmp
adc
jbe
cmp
cmp
data16
mov
fcoms
mov
xor
push
mov
push
stos
ret
imul
push
pop
lret
push
and
push
fdivl
jns
gs
loope
fdivrl
push
jae
lcall
in
repnz
rcrb
aas
push
jbe
mov
and
stos
inc
pusha
mov
into
xor
push
insl
mov
push
in
xchg
cld
mov
sub
push
mov
out
mov
shr
jb
punpckhbw
pop
jmp
push
test
jno,pt
mov
push
inc
loop
inc
std
test
mov
test
cmp
gs
movsb
pop
pusha
ss
lods
clc
jne
push
push
pop
xor
pop
push
mov
insl
ja
call
lret
stos
es
push
adc
cs
cld
dec
dec
mov
push
std
inc
lock
in
pop
test
mov
fcoms
jb
scas
mov
inc
push
int
mov
aaa
add
jne
sub
xchg
add
mov
and
cmp
fmuls
xchg
lods
ljmp
pusha
xor
pop
loop
idivb
sub
xor
pop
lock
cld
adc
out
lds
xor
test
mov
mov
add
sub
sahf
pop
repnz
inc
addb
gs
call
ffree
aad
sub
xor
push
inc
inc
pop
dec
dec
dec
loopne
imul
fmull
sub
adc
jns
jb
mov
adc
xor
pushf
cmpsl
sub
dec
mov
dec
and
jbe
sub
xchg
adc
stos
fs
xor
and
adc
jne
jo
loop
scas
push
add
push
jnp
pop
insl
hlt
dec
and
notb
scas
inc
inc
add
adc
mov
movsb
inc
push
fdivs
push
jge
sbb
adcl
dec
leave
out
stos
jmp
cmpsb
jmp
pop
lea
jge
loope
xor
adc
pop
and
adc
xchg
pop
pusha
mulb
mov
cmp
push
pop
push
dec
dec
icebp
or
mov
fidivrs
inc
adc
test
sahf
and
test
add
in
lea
lret
push
fisubs
xchg
not
in
adc
cmp
in
cmp
adc
mov
lods
pop
insl
pop
lcall
pop
pop
pop
addl
fldcw
lret
in
and
push
pop
in
js
pop
test
icebp
dec
pop
leave
cmp
sub
jns
mov
lret
loopne
add
test
xchg
pop
cmc
cmc
push
nop
jmp
aaa
testb
adc
and
jmp
xor
push
mov
inc
outsb
daa
pop
cmp
rcll
pop
ret
xor
or
fsts
inc
inc
push
xor
lods
sub
sub
mov
bound
cmpsl
lret
rcrl
inc
rsqrtps
jle
mov
fildll
or
mov
mov
or
andb
dec
insb
push
jnp
scas
inc
imul
sbb
rorl
mov
push
outsl
lods
push
jmp
nop
jecxz
rcr
and
dec
enter
xchg
xlat
pusha
out
shll
addr16
mov
mov
cmp
flds
push
shrl
loope
sbb
dec
aam
xor
jecxz
fsubs
dec
xor
cmpsl
dec
inc
fcmovnbe
test
iretw
es
pop
addr16
mov
mov
push
cmp
inc
aam
xor
out
mov
mov
fimuls
mov
or
sub
icebp
aam
sbb
dec
and
or
stos
dec
xchg
sub
add
xor
xor
cmpsl
fdivl
push
fbld
xor
jle
stc
popa
or
lret
add
mov
mov
jne
mov
jmp
fistpl
jb
add
test
push
xor
mov
push
cltd
outsb
push
push
jge
sub
pop
daa
dec
in
and
daa
xchg
cs
clc
cli
ror
pop
lock
push
add
add
andb
adc
insb
jecxz
xchg
sbbl
add
push
adc
mov
adc
and
std
leave
shl
push
xchg
inc
inc
cld
jg
pop
mov
xchg
repnz
sbb
jle
cs
leave
xchg
or
jo
es
js
inc
ljmp
jno
mov
inc
sub
add
mov
and
fdivl
add
or
dec
cmp
idivb
pushf
xor
xchg
and
hlt
test
lock
xor
stos
mov
and
sahf
cld
add
cmpsl
mov
and
lahf
cltd
lahf
in
rclb
sub
mov
in
dec
cltd
jecxz
leave
fisttps
int
loop
push
in
adc
cli
mov
sbbb
test
xchg
aam
mov
adc
dec
mov
or
inc
mov
sub
dec
and
scas
sub
int
out
sub
je
daa
lret
mov
push
xchg
fidivrs
jmp
inc
mov
cmpsl
mov
push
jns
cmp
outsb
std
fs
je
sti
add
xchg
jle
mov
mov
pop
mov
repz
ds
jo
aam
push
push
adc
xchg
sbb
testl
das
adcl
loop
out
cmpsb
jae
jg
movdqu
and
test
mov
adc
fistps
ret
push
mov
dec
mov
fadd
in
test
aaa
adc
or
sbb
subb
push
scas
fldcw
dec
xor
dec
lret
push
jnp
dec
lock
insl
stos
lds
mov
nop
cmp
adcl
pusha
in
or
xchg
notb
dec
mov
inc
fstpl
fnsave
xor
lods
inc
nop
gs
sbb
notl
mov
frndint
jnp
jo
mov
lret
push
mov
test
inc
dec
dec
pop
pop
fdivl
push
push
int3
inc
outsl
cli
mov
lds
aaa
xchg
cmpsl
les
cmp
jecxz
lock
adc
jmp
push
or
js
mov
mov
test
push
jno
cmpsb
fsubrs
cs
stos
mulb
lock
jge
fwait
pop
push
inc
clc
add
sub
and
pusha
loop
lret
mov
mov
lcall
out
jns
scas
cmpsl
lahf
outsb
add
dec
push
mov
jb
push
ja
xchg
push
ss
test
and
add
aad
inc
mov
mov
shll
jns
int3
and
pushl
pop
std
test
dec
xchg
mov
push
push
and
bound
inc
lcall
pop
xor
nop
repz
cmc
add
jl
xchg
jmp
arpl
pop
mov
rcrb
push
xchg
cmp
inc
jmp
sub
inc
bound
das
mov
test
mov
out
imul
inc
ret
fnstcw
push
mov
mov
loopne
loope
jne
stos
movsb
inc
push
mov
or
mov
push
fwait
xor
imul
mov
push
xchg
icebp
mov
mov
xchg
jge
jge
jmp
push
testb
push
or
add
push
jmp
adc
inc
mov
cmpsb
fdivs
fstpt
nop
push
cli
jl
out
movsb
xor
add
dec
lock
ss
push
pop
or
shr
ret
jns
jecxz
inc
jl
dec
pop
and
lahf
popa
push
push
jl
in
clc
hlt
jecxz
paddd
sahf
inc
lahf
xor
scas
sbbb
push
push
pushf
adc
and
inc
mov
nop
pop
lahf
test
mov
cmp
pop
iret
xor
test
pop
cmpl
add
sbb
xchg
subb
loopne
xchg
push
push
stos
aaa
lret
test
in
ret
and
test
shrb
bound
cmp
scas
js
mov
test
adc
fbstp
daa
sub
mov
add
add
jl
nop
movsl
fxch
xchg
cwtl
jmp
jl
dec
in
movsl
add
mov
push
xchg
cs
movhps
rcrb
daa
add
rcrl
sbb
xchg
pop
pop
push
cmp
fisubs
mov
cmp
push
jae
fsubl
push
out
ds
insb
rorl
push
stos
aas
fsubrl
pop
movsb
shl
jl
aas
hlt
sub
je
arpl
fstps
les
test
cmp
scas
mov
in
xchg
stc
inc
push
shll
js
sbb
leave
xor
popa
and
popa
les
repz
enter
mov
xchg
ret
push
test
dec
and
cli
sbb
pop
mov
stos
inc
shrl
mov
jne
jg
cmp
call
call
in
test
bound
aad
push
popa
fwait
adc
add
adc
pop
movsb
ljmp
sarl
or
add
arpl
add
jp,pt
mov
mov
mov
fbstp
add
scas
or
aas
movsb
repnz
adc
pop
add
and
outsl
cmpsl
or
pop
stos
es
sbb
mov
fadd
fistpll
ret
and
pop
cmp
int3
hlt
pop
decb
pop
aad
rcll
loope
out
mov
in
movl
jo
and
lahf
gs
sahf
sbb
add
inc
cli
fs
mov
lds
fnstenv
mov
idivl
jno
js
fcmovbe
dec
sarl
cmp
push
inc
xlat
xchg
pusha
aas
xchg
pop
mov
clc
jl
push
cli
cmp
xchg
rcll
adc
stos
test
sbb
lahf
ss
dec
pop
aam
lea
aaa
and
aaa
add
fdivs
loop
sub
fidivrl
test
sahf
mov
jnp
mov
inc
add
pop
mov
imul
popf
aaa
cli
test
in
mov
mov
sahf
lods
ds
cld
xchg
adc
sbb
dec
icebp
sbb
lock
and
int
fnstsw
mov
adc
sub
xor
rorl
fstl
mov
jmp
lahf
outsb
jl
lods
jb
jbe
mov
ret
fwait
push
pop
cmp
lea
mov
push
push
mov
outsb
divb
fnsave
jbe
aaa
and
push
dec
add
repnz
fyl2x
inc
aam
xchg
xchg
xchg
inc
mov
jp
push
jb
hlt
sub
outsl
mov
call
pop
pop
push
xor
scas
lcall
je
stc
adcb
into
mov
inc
or
mov
sbb
imul
jbe
cli
es
mov
imul
rcrl
mov
orb
mov
adc
aam
mov
mov
stos
xlat
lods
scas
outsb
mov
pop
into
into
cmpsb
jle
ret
pop
sub
cld
xchg
arpl
and
sbbb
ds
cli
xchg
mov
rcrl
and
shll
sub
shrl
xor
add
cmp
imulb
ret
dec
sub
push
in
sub
bound
jmp
aam
rcrb
aam
dec
xor
lcall
jp
mov
lea
cmp
adc
xorl
xchg
notl
push
mov
jle
add
mov
adc
imul
test
scas
in
pop
bound
fidivrl
push
test
aas
jns
cwtl
popa
shll
or
xchg
enter
adc
arpl
and
dec
stos
mov
sbb
stc
rolb
push
pushf
xchg
push
ret
call
cmp
sbbl
lea
mov
loop
mov
jb
dec
push
div
xor
jb
xchg
in
inc
dec
adc
mov
js
iret
and
jb
cmpl
xchg
insb
shrd
mov
dec
scas
and
lret
xchg
jmp
test
jb
mov
adcb
pop
bound
mov
jle
fisttpl
pushf
lea
inc
pop
lret
lahf
cmp
xchg
les
testb
mov
jns
mov
inc
popf
fimuls
ljmp
fwait
xor
lahf
pop
addb
jp
cmp
pop
mov
mov
jmp
mov
sub
xchg
or
scas
test
cmp
mov
insb
pop
sub
aam
out
mov
inc
mov
cwtl
stos
xchg
sub
xchg
jge
repnz
fisubs
xorb
sub
add
fidivrs
mov
into
and
int3
and
ja
mov
dec
mov
decb
jb
in
sub
out
push
int
clc
push
xchg
andb
fstpt
stc
and
cmp
cltd
fs
inc
cli
cmp
enter
sbb
sti
cmp
inc
mov
mov
or
mov
stc
xor
adcb
or
pop
cmp
pop
out
nop
clc
les
mov
and
jmp
jge
xchg
aaa
sahf
add
iret
push
push
sbbb
xchg
jecxz
add
bound
jmp
mov
xchg
mov
jle
subb
add
fwait
vphsubwd
xchg
cmp
imul
dec
sbb
add
rolb
xchg
pushl
das
push
lcall
xor
xchg
cmc
adc
lret
jmp
jne
loope
add
scas
stos
jl
stc
notb
cmp
aas
add
dec
in
and
outsl
lcall
inc
cwtl
mov
push
pop
ljmp
jmp
aaa
mov
dec
stc
fisttpll
pop
cmp
cmpsl
xor
mov
sti
sar
addr16
shrl
mov
mov
jno
aas
movsb
cmp
pusha
sub
mov
pop
std
mov
ret
ljmp
arpl
pop
mov
ret
out
sbb
jmp
punpckhbw
popa
mov
ficoml
test
push
jmp
jg
jns
jo
push
cmp
sub
or
ss
call
cmc
xchg
jno
enter
ja
jge
fs
push
push
mov
inc
add
push
std
rcrl
les
dec
push
outsb
cmpsb
loopne
jne
jmp
mov
sbb
pushf
xor
decb
jns
push
arpl
addr16
fcom
mov
fldenv
or
push
mov
adc
cmp
push
xchg
lahf
dec
jae
cltd
xchg
jns
sarb
inc
sbb
adc
jmp
fsubrl
push
mov
test
loopne
sub
mov
pop
lcall
and
or
dec
ret
daa
ljmp
push
in
xchg
popl
xchg
aas
jae
out
jle
fistps
sbbb
add
xor
and
inc
pushf
pushf
inc
cmpsl
in
sbbb
adc
lret
dec
shr
xchg
mov
fxch
xchg
and
xor
arpl
adc
test
fcomps
or
cmp
or
test
jp
xchg
or
push
inc
push
mov
or
lds
dec
xor
test
mov
adc
xor
addr16
aam
pop
jge
push
je
ja
aaa
fisubrs
adcl
imul
sbb
mov
das
repnz
jno
mov
dec
nop
sbb
shrl
sub
pop
mov
cs
adc
cmc
inc
inc
xor
jbe
jp
xchg
cwtl
lcall
clc
aas
lods
test
xchg
test
or
addl
sarb
fistl
mov
call
dec
inc
pop
aaa
jne
xlat
rol
pop
cld
and
and
inc
mov
mov
jnp
rcll
mov
mov
movsb
call
fstpl
mov
jnp
xor
lcall
xchg
cltd
ss
ss
cltd
ljmp
mov
test
push
imul
ds
add
cli
xor
test
push
cmp
scas
jne
jo
inc
dec
test
inc
jbe
inc
ja
test
push
lods
mov
data16
clc
enter
sbb
fwait
sbb
pop
icebp
popa
jb
mov
inc
mov
jbe
jmp
mov
or
out
xchg
push
cmp
push
pop
int3
jg
push
and
les
imul
xor
pop
repz
add
fsubr
pop
fmuls
rcrb
ljmp
cmp
sbb
fmul
repz
push
imul
sbb
mov
into
andb
push
and
or
test
dec
pop
repz
enter
in
sub
in
xor
arpl
lock
bound
js
inc
jmp
jecxz
and
lea
cwtl
cmc
jnp
sub
out
fmull
and
fstpt
repnz
dec
or
add
sub
mov
pop
xor
jne
sub
inc
cmp
test
lock
jmp
sbb
popf
sub
pusha
xor
mov
rclb
and
or
pop
xlat
ljmp
into
push
inc
stos
lds
aam
sbb
jecxz
xor
pop
rorl
jno
hlt
data16
jbe
shll
inc
pop
or
enter
addb
test
int3
shrb
jecxz
adc
or
xor
pop
or
je
or
sbb
std
pop
lds
das
mul
mov
add
jp
and
xchg
jmp
aas
jmp
and
xor
mov
je
ja
xchg
adcl
pop
add
cmp
mov
jae
lret
sub
aad
cmc
mov
cmpl
sub
insl
sbb
jp
add
adc
xchg
jnp
loope
mov
xchg
ljmp
pop
cmp
ljmp
push
in
insl
jmp
movsb
out
xlat
arpl
xchg
lds
andl
xlat
repz
jge
or
pop
fistl
pop
rolb
aad
or
scas
push
stos
mov
das
xchg
out
lock
mov
loop
mov
pushf
dec
scas
mov
inc
dec
xchg
mov
mov
outsl
xor
adc
mov
ret
cmp
ja
dec
pusha
aas
and
cmovl
mov
and
xchg
mov
shlb
add
test
and
jle
in
scas
adc
mov
leave
pushf
jp
mul
in
pop
aad
mov
xchg
lods
push
pop
pop
adc
inc
insb
bound
fisttpl
test
in
fldt
es
and
jne
pop
and
gs
or
ret
pop
jle
add
movsl
nop
adc
and
andb
mov
loope
mov
es
add
adc
inc
cmc
inc
mov
jb
into
mov
pop
movsl
cmp
clc
push
cmc
and
push
jp
scas
and
xchg
push
mov
cwtl
xchg
mov
inc
sbb
mov
mov
mov
pop
add
jo
sbb
rcrb
addr16
stos
test
add
xchg
push
test
adc
pop
jmp
mov
ljmp
sar
push
repnz
into
jl
inc
mov
aas
jo
inc
out
mov
push
insl
mov
lods
fwait
jne
mov
sti
add
out
fists
sub
mov
div
scas
xor
adc
and
mov
push
mov
push
dec
inc
lret
icebp
filds
and
pushf
pop
in
push
and
push
jbe
int
repz
mov
pop
lock
push
jg
or
push
iret
inc
push
insb
and
mov
push
out
inc
cmpsb
inc
pop
fdiv
ds
jns
or
fwait
xor
mov
cmp
sahf
push
mov
fwait
or
in
pusha
xchg
loope
lcall
pop
icebp
shlb
add
test
dec
adc
into
loopne
es
mov
mov
out
ja
xchg
jns
pop
outsl
sarl
cli
or
out
enter
xchg
sub
aad
add
cltd
enter
mov
dec
fwait
enter
adc
xor
fimuls
cltd
cltd
push
adc
cmpl
mov
popf
xchg
adc
cmp
js
push
sub
push
mov
shll
sti
jge
jno
js
aam
push
loop
sbb
int3
les
call
or
push
ja
loop
mov
fxch
fcomp
std
addr16
xor
jmp
shrb
loope
loope
lods
aad
push
or
pop
fwait
pop
lock
cmpsl
mov
push
or
ja
and
pop
pop
sahf
scas
sbb
andl
jae
pop
sarb
mov
adc
cmp
cmp
dec
mov
mov
inc
out
cmp
incb
das
mov
or
ds
fadd
rcrl
aad
testb
jnp
aas
and
nop
or
lret
adc
mov
jns
mov
push
decb
popa
dec
fcompl
mov
enter
and
dec
pop
mov
jl
das
loopne
xchg
faddp
pop
out
bnd
add
minps
nop
jno
mov
and
mov
xchg
roll
test
adc
hlt
xlat
bound
fidivrl
leave
ljmp
cmp
imul
push
add
sub
sbb
push
dec
inc
mov
lcall
inc
insb
outsl
cmc
mov
out
aad
fisubrl
inc
stos
int3
popa
aaa
jnp
sbb
mov
mov
ret
fs
inc
arpl
iret
fldl
mov
inc
push
inc
cld
lret
cmp
mov
dec
xor
push
jmp
in
or
imul
add
ret
sub
xchg
adc
iret
inc
enter
fnsave
mov
push
mov
out
ret
jp
push
mov
and
outsl
dec
shrl
xor
int3
push
push
and
lds
ret
mov
in
sub
cmp
data16
xchg
scas
or
std
and
push
push
popf
cli
jno
sub
std
fxch
cmpsb
repz
and
aam
jb
testb
sbb
add
incl
sti
and
push
loope
cmpsb
and
into
adc
push
pop
stos
inc
add
ret
test
pop
repz
pop
in
fadd
sarl
fwait
ds
pop
sbb
or
out
daa
mov
mov
ret
imul
pop
lcall
movsb
add
sbb
xchg
popa
mov
cmp
iret
notb
out
loopne
mov
jmp
pop
jp
cmp
or
fwait
gs
xor
int
icebp
cmp
or
lds
fildll
xchg
call
sub
fcmove
test
mov
imul
mov
ret
push
icebp
cmp
repnz
shlb
lret
jg
xor
and
jecxz
stos
fucomp
sub
dec
jbe
inc
pop
cmp
movsl
dec
sub
cltd
in
icebp
imul
pop
cmpsl
add
cmp
push
jno
cmp
in
inc
mov
inc
mov
sub
mov
nop
jl
stc
push
int
push
outsb
bound
lcall
in
stos
nop
pusha
cwtl
loope
je
sbb
imul
or
repnz
sub
nopl
mov
enter
xchg
mov
mov
mov
imull
lds
mov
add
lods
cmpsl
pop
test
int
pop
outsb
xchg
test
mov
cmp
fidivrs
xchg
sti
gs
popf
test
mov
mov
xchg
xlat
cmc
fsub
mov
dec
testl
adc
rcr
xor
movsl
cld
test
jne
fnsave
jo
imul
push
lods
shl
pop
add
notb
jno
lret
xlat
fildll
ret
test
loope
ss
jge
pop
xchg
jmp
rcrb
rcll
stos
jne
cmpl
jmp
rcrl
shlb
jecxz
add
and
loop
cmp
push
cmc
aaa
or
pop
cmp
cmp
xchg
cmp
out
sbb
xchg
mov
xor
mov
pop
icebp
movd
stos
arpl
jmp
sbb
adc
pop
inc
icebp
add
shlb
push
add
scas
cmp
xlat
in
stc
sub
arpl
je
adc
in
and
jge
fimuls
fsubr
ja
aaa
gs
inc
jns
aas
in
xchg
jae
stc
loope
addr16
outsb
dec
mov
jo
cltd
push
jo
filds
pop
rolb
adc
sub
adc
cltd
or
xchg
ds
mov
jne
jb
push
cmp
adc
push
sub
mov
les
ja
cmpsb
mov
push
stc
sarl
mov
add
xor
outsb
adc
mov
mov
lret
pusha
sub
mov
sbb
mov
pop
fiaddl
push
adc
scas
inc
in
jle
nop
fsts
xchg
out
mov
nop
push
mov
inc
mov
std
mov
es
outsb
sub
dec
push
subl
ss
cmc
inc
mov
mov
dec
mov
sahf
push
je
mov
inc
push
lds
out
mov
cmp
push
sub
shl
fptan
in
pushf
bound
sarb
adc
dec
and
loopne
in
orb
ret
decb
pop
cmp
aam
push
mov
scas
popa
sub
push
pop
fbstp
dec
mov
std
push
lods
adc
and
imul
fprem
mov
loope
out
into
and
aad
mov
fnstcw
ret
clc
adc
lcall
push
repz
pop
lods
dec
pop
sbb
adc
das
or
cmp
push
popa
cmp
pushf
jl
inc
pop
cmp
cs
mov
sub
inc
call
test
lods
bound
enter
fsubp
test
jl
mov
push
fst
push
rcr
xor
jne
jno
loopne
lahf
or
push
fwait
adc
jb
jle
out
mov
xchg
subb
sub
call
jo
mov
mov
rcrb
add
dec
and
pop
cmp
rclb
mov
dec
fsubrs
out
lea
mov
cmp
xchg
mov
ret
lock
pop
or
out
xlat
mov
test
iret
pop
pushf
jnp
add
movsb
dec
lret
jne
cmp
mov
sub
push
push
jae
pop
jge
dec
mov
add
sahf
test
shl
hlt
cmp
cmp
in
ss
jb
sub
jl
and
lods
push
cmp
xchg
shl
sub
cli
icebp
sbb
test
lret
leave
xchg
sbb
iret
clc
dec
cmpsb
repnz
sbb
cmpsb
xor
xor
add
xchg
mov
sub
jns
es
int3
jmp
push
sbb
aad
dec
mov
shrb
adc
imul
inc
pop
test
push
and
mov
pop
mov
dec
test
xchg
xor
in
popf
ret
xor
jno
xchg
dec
scas
arpl
out
clc
sub
jb
lcall
popaw
cmp
jne
stos
adc
fstps
outsl
adc
in
lea
fcmovnb
pop
std
mov
aaa
adc
scas
jne
or
aad
rorb
and
mov
jb
stc
ficompl
adc
mov
push
mov
test
es
je
dec
mov
inc
dec
cmp
jns
add
or
xchg
lcall
dec
sbb
sub
out
fs
ds
jnp
les
push
lods
sbb
pusha
sbb
sub
fidivs
mov
out
popf
jns
sbb
clc
and
fdivrl
dec
out
fisttpl
push
rorl
xor
xlat
es
push
jne
addb
sub
xor
or
mov
sahf
xchg
jle
test
and
insl
aas
in
jnp
aaa
scas
mov
movsl
jbe
test
outsb
lods
scas
out
ja
mov
xchg
sbb
mov
push
rcrb
add
loope
adc
movsl
sub
pop
cmp
inc
fimull
mov
or
daa
and
pop
bound
xchg
xchg
pop
pop
sub
sti
pop
loop
mulb
mov
out
adc
in
dec
cld
lret
cmp
lods
push
insl
jg
stos
adc
dec
mov
xchg
fbstp
cmpsb
xchg
gs
jecxz
push
adc
jb
xchg
call
in
pop
out
push
mov
daa
aaa
aas
jbe
in
mov
push
jbe
lock
jbe
lea
inc
dec
push
jmp
loopne
ds
cld
sbb
mov
push
shrl
xor
mov
cmpsb
les
scas
outsl
pop
js
push
dec
cwtd
fbstp
xchg
aad
test
lock
mov
ja
mov
pop
xchg
in
ss
in
adc
push
cmp
and
push
xor
ljmp
insl
aaa
bound
xlat
add
lret
ret
push
cli
loope
icebp
fwait
enter
mov
cmc
outsb
xchg
jns
mov
testb
hlt
imul
push
add
push
mov
imul
xchg
int
dec
vmwrite
outsb
stos
adc
lret
fstl
and
xlat
movsb
inc
xchg
gs
adcl
aaa
pop
cmc
cmc
add
pop
xchg
mov
hlt
dec
test
pop
aaa
sub
dec
mov
mov
rcrl
dec
sbb
sahf
fwait
add
mov
test
xchg
mov
faddl
dec
push
jnp
mov
out
dec
loope
push
adc
and
pop
jno
inc
movsb
jl
pop
jbe
incb
fwait
xchg
xor
and
jbe
push
mov
mov
and
test
dec
push
jecxz
push
loope
rorb
mov
arpl
rcll
in
add
jns
test
rcll
dec
inc
out
out
clc
mov
lea
pop
jbe
ljmp
lods
call
lea
sbbl
sub
mov
xchg
mov
mov
sub
dec
adc
adc
cmp
aas
or
cmp
push
inc
cmp
lahf
fildll
test
andl
xor
xlat
xor
sbb
adc
mov
pushf
mov
or
cld
xchg
std
xchg
push
jmp
lahf
sbb
jb
push
mov
scas
loope
fnstenv
mov
out
shr
inc
push
sti
cmp
adc
fisubrl
xchg
add
stc
mov
mov
jg
jo
in
test
xchg
mov
mov
clc
or
fidivs
xor
mov
test
or
and
pusha
jmp
mov
dec
dec
lret
data16
or
mov
mov
fnstcw
stos
or
popa
jle
push
fstps
and
les
mov
xorl
out
or
sub
sbb
fidivrs
pop
push
and
or
jle
loope
adc
push
add
jge
pop
daa
lcall
or
int3
add
mov
or
or
lret
test
aam
lahf
sbb
mov
mov
push
pushf
repz
rorb
int
mov
inc
movsb
xlat
outsb
xor
cwtl
add
js
add
and
mov
xchg
adc
cmpsl
dec
js
cmc
enter
lahf
shrb
sahf
ret
mov
xchg
cmp
mov
out
out
xchg
call
or
jle
cmpsl
dec
and
aad
inc
xchg
sub
and
outsl
imul
add
lea
enter
push
out
dec
pop
jle
vprotw
jl
or
mov
dec
jecxz
sbb
jg
jnp
popa
cwtl
xor
push
push
pop
mov
cmp
mov
call
shrl
push
cmp
mov
ja
aaa
mov
cmp
jns
cli
aam
pop
pop
mov
and
out
push
xchg
cmp
les
inc
jge
or
insl
and
shrl
imul
sbb
fstpt
mov
hlt
subb
mov
jge
mov
aam
cmp
shl
stos
add
or
mov
push
sub
xchg
ja
inc
mov
pop
or
pop
fsubr
mov
mov
xchg
dec
lcall
in
and
iret
fstpt
mov
fisubl
push
shlb
mov
shl
shl
sbb
mov
test
xchg
int3
pop
or
pusha
mov
cs
cmc
in
dec
and
loope
push
repnz
mov
sbb
popa
and
push
add
mov
lcall
mov
mov
int
sub
xor
add
fisubrl
mov
das
or
jne
xchg
mov
xchg
icebp
aam
sub
sbb
ljmp
call
icebp
push
xchg
push
out
fists
dec
xchg
cld
and
test
cltd
scas
ljmp
les
jo
sub
dec
mov
repz
arpl
clc
lret
pop
roll
push
mov
fldcw
int
pop
and
push
test
test
mov
cmpsb
jns
add
inc
mov
clc
sbb
leave
mov
xor
xchg
mov
mov
add
addr16
loopne
pop
les
pop
jnp
ficomps
imul
test
jmp
sbb
pop
and
inc
arpl
andb
scas
mov
jge
jge
and
rcr
cs
xor
loopne
jnp
jae
mov
es
stc
aaa
mov
push
ds
leave
loopne
add
sub
mov
orb
lcall
das
shrl
sub
xchg
or
adc
and
loopne
lods
jg
pop
or
loopne
loop
jmp
scas
ds
loope
add
push
out
out
icebp
cmp
jp
shrd
mov
ret
sbb
cmp
sub
mov
push
in
stos
stos
jmp
pop
hlt
dec
lods
and
pop
push
pop
push
xor
insl
pop
xchg
cmp
xchg
adc
sbb
rcr
in
mov
ds
push
pushf
jo
cmp
mov
jb
cltd
cmp
outsb
in
xor
push
sub
sbbb
sbbb
or
loope
cmp
mov
mov
dec
jmp
sbb
pop
cmpsb
pop
cmp
scas
add
pop
jecxz
pop
stc
push
int
cmp
stc
cwtl
mov
in
push
outsb
negb
aaa
in
cmp
xchg
cmp
mov
jne
jno
mov
mov
cli
or
inc
xchg
sub
scas
pop
aam
movb
inc
sar
mov
and
pop
push
flds
scas
cmpsb
or
aaa
test
in
pusha
andl
lret
jb
pop
daa
push
push
scas
push
mov
pop
popa
add
pushf
mov
sbb
mov
inc
cmp
imul
dec
push
pop
outsl
pop
call
pop
mov
gs
iret
xchg
aam
stos
mov
enter
push
xor
sbb
lods
test
adc
ret
ja
je
stos
loope
inc
push
fnstenv
xor
jno
repnz
pushf
shl
jnp
mov
out
fwait
jecxz
pop
cmp
subl
sub
repnz
add
mov
cmc
dec
fidivrs
pop
add
push
sub
call
sbb
xor
xlat
outsb
outsb
shlb
mov
dec
loope
roll
pop
or
fadds
test
aaa
mov
fwait
xor
push
push
movsl
inc
je
movsb
movsl
push
loop
insl
cmp
adc
mov
push
orl
adc
jno
mov
inc
fldenv
pusha
imul
mov
push
into
fwait
call
mov
lea
inc
adc
jmp
sahf
xor
inc
lock
mov
imul
icebp
cmp
stos
dec
mov
cmp
xor
push
sub
dec
loopne
ret
outsb
imul
xchg
push
mov
xorl
aad
cmp
test
popf
cwtl
das
iret
int
addr16
push
out
inc
sub
popf
dec
add
jae
in
adcl
inc
fldt
lret
addr16
lds
into
mov
ret
outsb
cmpsb
mov
push
daa
jo
xchg
sahf
xchg
sub
mov
pop
cmc
inc
xor
std
cmpsl
dec
mov
jl
test
imul
and
repz
loope
lds
pop
repnz
jns
xchg
push
call
pop
inc
fimull
stos
popa
clc
fsubrl
fnstenv
in
pop
mov
cmpsl
jg
flds
aam
cli
popf
xor
xchg
mov
movb
dec
push
out
jnp
jge
lret
pushf
jne
lret
inc
and
xchg
sub
repz
and
inc
jmp
je
pop
mov
mov
fimuls
ljmp
inc
fsubrl
dec
arpl
jg
movsb
cmp
dec
push
jle
call
shrl
add
and
dec
jecxz
inc
jge
ja
push
jp
imul
mov
mov
fisubl
or
sbb
popa
clc
sbb
jg,pt
jo
leave
pusha
push
lcall
xchg
pop
xchg
mov
movsl
cmp
push
push
jmp
out
testl
jno
fdivl
fwait
xor
int3
mov
and
loop
outsl
adc
stos
inc
jmp
sbb
xchg
dec
mov
sbb
and
push
mov
les
stos
mov
fmull
lds
ror
arpl
add
xor
ljmp
jne
in
mov
ret
in
insb
add
push
dec
loop
sbb
add
scas
xchg
sub
shl
idiv
pop
lock
push
lods
inc
push
xchg
xchg
sbbl
icebp
mov
in
inc
inc
stos
inc
jae
cmp
xchg
xchg
mov
mov
sbb
in
dec
adc
push
in
xor
ja
push
mov
mov
fsubp
dec
in
insl
sub
pop
lock
sbb
fmull
or
add
pusha
cmp
sub
mov
jp
imul
sti
xchg
mov
loopne
mov
fnsave
or
std
xchg
insb
and
cltd
push
xchg
or
or
shrb
es
fcoml
icebp
mov
rcrl
fnstenv
rcrl
test
in
hlt
adc
xchg
inc
jo
jno
data16
cmc
mov
test
push
pop
scas
inc
inc
mov
adc
or
repnz
jb
or
es
dec
sbb
jle
fwait
xor
cmpsb
test
xlat
adc
jne
dec
out
test
push
or
inc
fiaddl
es
or
enter
loopne
dec
dec
into
gs
fidivl
cmpsb
fidivs
push
mov
inc
adc
push
or
pusha
testl
loop
or
aas
inc
pop
call
inc
or
in
inc
arpl
rcll
push
movsl
mov
bound
xchg
fistpl
or
or
mov
shrb
cwtl
stos
inc
int
sbb
test
xor
sbb
aam
lret
test
lock
and
stc
es
xchg
negl
repz
imul
addr16
imul
and
mov
popa
sub
push
pushf
cmc
sbbb
test
negl
and
cld
mov
xor
les
imul
xor
shrl
push
sbb
test
popf
mov
arpl
lds
mov
jmp
jle
cwtl
add
dec
loope
lock
mov
jp
adc
jne
popf
cmpsl
add
pop
cmc
mov
sbbl
sahf
add
or
arpl
xchg
adc
pop
mov
jne
add
fists
xchg
mov
dec
filds
and
inc
nop
adc
add
roll
test
ret
fbld
mov
xchg
rol
enter
push
xor
xchg
inc
fcomps
es
add
push
movsl
test
sbb
enter
or
pop
repz
sbb
push
mov
sub
or
sbb
orl
and
or
cmpsb
cmp
cmp
pop
mov
leave
testb
and
test
je
int3
movsl
push
or
add
loop
mov
push
jmp
bound
xchg
push
shrl
mov
cltd
in
jns
xlat
add
pop
cmp
sub
sub
mov
jl
dec
loop
lcall
xor
push
push
mov
and
mov
push
int
stc
nop
sub
dec
or
jb
lret
lret
sub
out
ret
pop
sbb
cmp
mov
ds
insb
xchg
mov
ret
mov
mov
fsubl
mov
arpl
cmpsb
mov
lea
mov
or
stos
inc
sti
sub
cmpsb
pop
sbb
cmovp
push
lods
imul
mov
rcll
sbb
orl
and
int3
arpl
fistpl
mov
sub
pop
pop
xor
data16
jmp
push
jmp
xor
je
lock
adc
pop
inc
fnstenv
punpckhdq
movsb
push
int3
pop
hlt
std
jae
ret
mov
dec
ret
mov
stc
gs
xchg
adc
fldl
or
out
insb
xor
cltd
push
dec
loopne
mov
mov
or
cmpsb
cmp
fbstp
jae
xor
cltd
mov
add
cmp
push
or
mov
rcl
stos
mov
fisttpl
bound
push
out
xchg
sbb
js
jnp
and
gs
call
push
in
ret
outsl
fs
sbb
ss
ss
and
mov
fyl2x
or
jg
xchg
mov
add
pop
rcrl
add
jecxz
push
rolb
pop
jg
mov
rorb
es
add
scas
and
addr16
je
ret
add
repz
push
sbb
call
add
aas
xor
push
out
sbb
jb
shrb
movsb
popf
pushl
call
or
cmp
adc
sbb
xor
mov
test
ja
xlat
test
add
and
adc
lret
jbe
pop
movsb
in
lds
lds
fildll
scas
bound
out
xchg
jbe
imul
inc
cld
sahf
ss
inc
into
popa
out
dec
shll
xlat
mov
stos
pop
fimuls
inc
sarl
cmp
popf
popl
or
rdpmc
adc
pop
rorb
xor
push
xchg
cltd
mov
sub
rcrl
mov
sti
pop
push
push
mov
jle
and
mov
rcrb
mov
pop
push
hlt
push
and
sub
push
mov
cltd
xor
aas
out
rcrb
loope
testb
imul
adc
xchg
jmp
sbb
xchg
sbb
test
js
imul
pop
nop
sub
jmp
enter
shrl
movsl
add
icebp
gs
cmp
roll
xchg
xchg
xchg
push
stos
jo
add
adc
push
push
dec
push
push
mov
cwtl
je
xchg
jp
sub
js
popf
xor
push
call
push
xchg
sub
dec
push
jmp
sarb
adc
shll
nopl
mov
js
jg
inc
fisttpl
ss
sbb
mov
pop
adc
inc
jl
sarl
inc
xor
push
jbe
in
xor
popa
push
lods
xchg
push
adc
enter
cmpsl
outsb
jno
loop
mov
fistps
pop
sbb
cmc
dec
stos
das
loope
pop
or
ret
in
mov
sbb
jp
insb
cmc
xor
cmpsl
pop
xchg
inc
loop
jo
mov
pop
je
xchg
ja
xor
push
clc
movsl
pusha
cmpb
jl
movsl
cmp
mov
cmp
lds
pop
aam
adc
stos
rcrl
or
ljmp
clc
negb
lock
outsl
stos
mov
imul
xchg
sub
pushf
cmpsb
data16
cmp
push
subb
mov
imul
iret
and
xchg
sbbl
cmc
sub
or
aaa
sbb
daa
xchg
data16
ror
scas
jno
loope
or
jge
jg
shl
fiadds
push
js
into
inc
rcrl
orb
or
mov
add
fs
outsb
pop
scas
cmp
cwtl
mov
jae
in
movsb
xorb
lret
cmpsl
dec
aad
mov
sub
mov
mov
inc
mov
xor
sbb
or
dec
loope
add
sbb
push
lock
ds
sbb
bound
std
scas
les
mov
sbb
dec
cmp
orb
dec
sbbl
je
mov
jae
add
out
popf
jno
aad
mov
ds
mov
dec
fstps
fistpl
inc
das
shl
inc
lret
xor
add
mulb
sub
cld
or
scas
arpl
out
and
mov
in
xor
fldl
in
movsb
rol
push
mov
std
cmpsl
pop
in
push
mov
rcrb
je
mov
repz
mov
inc
aad
sbb
scas
mov
cmp
std
and
andb
and
into
inc
shrl
call
add
mov
xchg
addl
push
jge
xchg
or
sub
sub
mov
add
sub
incb
or
mov
fnstenv
js
iret
pop
test
mov
pop
sub
pop
fcomps
or
push
xor
and
sub
and
mov
cmp
lds
and
scas
adc
sbb
test
out
movsl
std
and
loop
jmp
fxch
pop
mov
adc
mov
test
outsb
das
out
pavgb
imul
aad
lcall
insb
out
xor
cli
xor
jg
je
in
mov
shll
pop
addr16
imul
cltd
icebp
or
jmp
cmpl
push
nop
mov
punpckhdq
cwtl
cmp
mov
jecxz
popa
popa
mov
xlat
jg
movl
pop
lock
pop
ret
pop
sbb
push
adc
xchg
stos
push
std
xchg
insl
out
jg
ficoml
dec
lahf
negl
sbbl
lcall
jmp
sbb
jae
pop
sbb
push
cmovbe
pop
xor
ljmp
inc
xlat
xor
test
jne
push
sbb
push
sub
in
test
adc
ret
aas
sahf
mulb
push
jb
fadds
sbb
pop
xor
jne
mov
jmp
add
repz
add
mov
loop
incb
ret
inc
fwait
call
mov
jbe
mov
iret
push
js
stos
jo
jo
jb
gs
push
inc
dec
pusha
push
xor
push
and
cmpsb
pop
and
inc
ret
insb
shr
push
adc
mov
in
sbb
icebp
xrelease
add
fwait
xor
and
ds
xor
bound
imul
int
stos
roll
lcall
xor
mov
idivb
out
dec
and
push
fldt
in
pusha
adc
lods
out
je
mov
repz
int
sbb
mov
ds
std
ljmp
rcr
lock
and
mov
mov
stc
cmp
cli
loop
in
xchg
pop
mov
push
mov
cmpsl
adc
cmp
mov
jle
sahf
out
movsl
fnstcw
je
in
sahf
sbbl
stos
pop
int
testl
imul
dec
loope
cltd
das
add
ret
cmp
fisttpll
ss
mov
incl
adc
hlt
cmpsb
std
mov
lret
mov
mov
mov
dec
shl
push
dec
aad
scas
cmp
or
aaa
int
sub
adc
ds
and
cmpsl
test
add
call
std
xor
sub
imul
syscall
mov
sbb
mov
mov
mov
flds
loope
aam
mov
mov
lock
pop
mov
imul
outsl
pop
xor
sub
arpl
shl
add
sbb
and
push
xor
mov
push
or
sbb
lahf
lods
pop
pop
je
insl
cmpsb
pushf
lds
or
imul
dec
fnstcw
dec
fldenv
dec
nop
or
xchg
add
xchg
fnsave
pop
mov
enter
insl
add
jge
pop
pop
and
std
je
mov
dec
addr16
in
inc
pop
mov
popl
pop
xor
mov
jmp
cmpsl
outsb
dec
repz
push
ret
dec
loope
mov
push
ficoml
pushf
stos
sbb
lds
fwait
xchg
cmc
aas
push
or
add
mov
sbb
cld
or
sbb
adc
mov
call
fdivl
cltd
xlat
sub
jb
mov
xchg
fs
lds
mov
xchg
in
mov
sahf
xchg
sahf
out
and
fstps
data16
dec
fstl
or
dec
cmpsl
add
cli
cmp
scas
cmc
mov
sbb
jl
or
popf
pop
dec
mov
aad
gs
jmp
mov
das
mov
movsl
push
mov
sbb
pop
cmpsl
xchg
push
leave
mov
movl
xchg
out
icebp
fdivr
sub
out
iret
inc
fdivs
mov
ljmp
jno
imul
xlat
outsb
fnsave
push
lret
mov
stos
add
popf
or
mov
fnsave
leave
jge
sub
in
and
push
subb
xor
jmp
or
cmp
test
cli
cwtl
mov
xor
pop
lods
stos
insl
fwait
push
cli
test
mov
frstor
iret
aad
lcall
addb
jb
mov
out
dec
in
cmc
and
jecxz
sub
push
mov
xsha1
cmpsb
mov
cmp
cltd
or
and
aam
push
inc
lds
adc
in
test
and
adc
adc
icebp
xor
jno
clc
and
cmpsb
lods
dec
mov
adc
cmp
push
idivb
dec
js
sarl
xor
cmpb
nop
sbbl
leave
scas
xchg
push
cli
and
xor
sahf
mov
ljmp
push
cmc
push
and
xor
mov
test
mov
sbb
insl
mov
sub
jge
inc
mov
out
mov
lods
mov
dec
fistps
xchg
or
jle
mov
rol
jnp
in
adc
fdiv
mull
mov
es
inc
stos
arpl
inc
fsubl
pop
cmp
mov
sub
je
cmp
les
dec
out
aaa
add
cs
out
pop
mov
pushl
pop
stos
push
stos
pop
push
lock
int
mov
stc
and
push
push
scas
push
sub
arpl
inc
jnp
mov
xor
mov
jle
cmpsb
stos
add
or
dec
ret
std
xor
adc
loopne
fwait
loop
and
sbb
add
movsl
arpl
mov
xchg
jne
stos
jns
cmp
lahf
outsb
sahf
adcb
pop
push
inc
jne
push
xchg
stos
gs
pop
jnp
xchg
popf
sub
or
lea
push
jmp
xor
mov
bnd
shrb
mov
rorl
mov
mov
adc
and
or
orl
mov
cwtl
repnz
out
mov
sbb
adc
jmp
mov
cmp
in
adc
rcrl
pop
jle
test
rolb
adc
fidivl
fistps
jecxz
fcomps
int
out
sbb
pop
bts
pop
jge
lret
xor
out
leave
mov
das
std
jmp
mov
or
jo
xor
add
xor
clc
in
xchg
jnp
adc
inc
leave
push
jb
push
insl
aas
push
mov
sub
icebp
mov
mov
lods
cmp
arpl
cltd
fimull
mov
sub
mov
sbb
mov
in
xchg
xchg
lcall
sbb
xchg
xor
and
fwait
adc
inc
xchg
sbb
scas
popa
mov
je
lea
popa
fcmovnbe
mov
scas
pop
mov
pop
daa
test
mov
mov
imul
mov
mov
jl
rcl
aad
sbb
xlat
insl
mov
ljmp
leave
jmp
or
cmpsl
mov
mov
scas
cmpsb
pop
xor
nop
mov
cmp
push
inc
fnstsw
sbb
mov
lcall
out
imul
aas
std
aas
out
pusha
xor
ss
xor
add
mov
sbb
shlb
cmp
scas
arpl
sbb
fwait
ret
lea
adc
stos
stc
add
mov
sti
pop
or
sar
sub
shr
addb
out
mov
push
or
into
jecxz
cli
mov
ficompl
cmpsb
sti
and
flds
maskmovq
jg
push
mov
mov
ljmp
jl
mov
push
and
ds
shr
xor
repnz
mov
rcrl
mov
data16
test
adc
movsl
sbb
sahf
ljmp
fsubl
out
leave
test
adc
mov
mov
pushf
cmc
or
test
cmpsl
shrb
out
aas
pop
add
mov
pop
adc
xchg
push
add
insb
sbb
repnz
mov
push
aam
lds
hlt
out
cmp
pop
test
or
jne
push
sbb
xchg
add
hlt
adc
test
lock
mov
fwait
aam
icebp
fimuls
inc
leave
pushf
mov
invd
cli
sub
test
cmc
sbb
adc
mov
stc
icebp
das
mov
in
and
cmp
jb
test
test
mov
mov
pushf
xor
jne
dec
xchg
sahf
jg
inc
sbb
jp
inc
aaa
out
and
fiadds
jno
int
scas
xchg
mov
jae
xlat
add
pop
rcl
ja
ret
sub
fimuls
popf
gs
fadd
dec
fucomi
xchg
shrb
loope
mov
push
gs
sub
adc
sub
or
addr16
ret
sbb
movsl
int
mov
divb
mov
mov
into
icebp
pop
dec
fistpll
in
and
mov
add
mov
pop
push
mov
fsts
testb
sbb
jmp
scas
inc
fnsetpm(287
jge
gs
mov
jnp
pop
mov
jne
popa
cli
jmp
incb
mov
in
repz
adc
ja
inc
dec
sbb
sbbl
jp
ss
push
js
mov
in
fildl
stos
imul
add
mov
or
rorl
inc
lret
repnz
in
and
mov
or
cmp
xchg
aas
aam
aaa
idivb
and
add
testb
inc
movsl
pop
popa
sbb
cmp
mov
jb
iret
push
mov
test
jle
mov
jne
loop
inc
add
mov
mov
dec
stc
mov
popl
adc
push
in
xor
or
ret
xor
loop
jmp
mov
dec
or
ljmp
jl
xchg
pusha
fistpl
adc
and
xchg
incb
lods
arpl
and
xchg
lea
sbb
dec
push
daa
fnsave
jle
fildl
and
jle
inc
test
inc
xchg
xor
adc
hlt
dec
test
test
insl
sub
dec
mov
fisubl
adc
fs
add
repnz
push
or
aas
push
mov
shrl
push
mov
fisubl
push
cmpl
jno
bound
out
cli
sub
mov
loope
add
ja
and
ds
push
ds
mov
ja
popa
testl
sub
dec
mov
mov
dec
gs
popa
pop
inc
fimuls
stos
jno
sbb
cld
inc
jp
lds
push
mov
push
cmp
je
jp
hlt
inc
inc
xchg
inc
or
inc
cmp
jl
ret
sbb
push
jmp
jns
jp
jo
or
push
xchg
rcll
adc
mov
andb
flds
jbe
test
dec
push
fs
dec
inc
dec
mov
stos
mov
push
movsl
data16
jbe
fldt
out
cmpsb
mov
pavgw
lret
iret
xchg
adc
icebp
out
lea
aad
mov
sbb
dec
or
cltd
cmp
lds
sbb
iret
out
fcmovnu
sarb
fst
inc
movsl
mov
imul
in
mov
jle
mov
imul
int3
xorl
xor
ret
pusha
jns
ljmp
adc
insb
test
inc
xor
push
cmc
ret
pop
sbb
loope
mov
sbb
push
mov
mov
fdivl
fstps
ss
jnp
lret
push
leave
popa
clc
rcl
mov
movsl
mov
adc
shll
pop
mov
fmul
dec
ret
in
ror
pusha
add
mov
movsl
mov
ficompl
fists
je
in
dec
out
mov
jno
lods
jns
in
jecxz
les
mov
add
mov
sarl
neg
out
and
mov
sbb
lret
clc
sub
or
in
test
rolb
add
sbb
mov
cmpsl
nop
xchg
and
dec
mov
cmpsl
cmp
lods
enter
jecxz
lods
mov
repz
add
and
out
mov
loopne
or
mov
iret
or
mov
jp
or
sbb
roll
fldl
xchg
lock
mov
pop
add
sbb
sbb
sbb
out
test
sarl
out
cmc
ret
shl
cmp
sub
test
vmread
scas
xor
cld
in
sub
sti
fwait
rclb
stos
adc
jo
notl
and
daa
mov
and
bound
fiaddl
lods
test
xorb
inc
int3
adc
mov
out
orl
inc
adc
cmpsb
push
inc
int3
arpl
addl
fisubrs
out
in
ds
push
lods
jne
ret
xlat
jmp
pop
shll
dec
or
movsb
jl
jnp
pop
cmp
mov
jb
and
dec
mov
xor
cs
lahf
jl
fiaddl
cmp
inc
adc
pop
test
xlat
cmp
adc
mov
iret
xor
arpl
idivb
mov
and
xchg
and
adc
sub
mov
fcoml
jmp
lods
aas
loop
inc
rorl
addr16
scas
mov
jg
incb
cs
fisttpll
loopne
das
add
ret
adc
sbb
fcomps
out
ljmp
dec
add
xchg
dec
pop
sbb
dec
test
and
aad
imul
fsubrs
fisttpl
pop
mov
mov
js
shrl
dec
mov
cmp
clc
in
jecxz
fbstp
scas
lret
sub
mov
mov
mov
jo
data16
mov
and
mov
fdivrs
loop
fs
or
push
int
test
adc
aad
and
mov
adc
ss
fidivl
loopne
arpl
and
jg
insl
cmpl
adc
adc
out
and
iret
inc
sub
fiaddl
insb
mov
push
sub
inc
xchg
lcall
lcall
xorb
jnp
rcrb
adc
jb
lds
xchg
jns
aaa
and
je
popf
shlb
and
xchg
cwtl
das
adc
and
xchg
xor
jbe
sbb
jne
add
lret
sti
inc
jmp
int
and
xlat
jg
daa
in
add
fcompl
pop
mov
pop
xor
ljmp
adc
mov
cmp
add
inc
push
rorb
pusha
cmpsl
dec
pop
and
outsl
pop
jge
push
dec
mov
sbb
mov
cmp
xor
ret
aad
cli
sbb
and
lods
jbe
js
jge
clc
sahf
xor
xor
jno
jle
cld
dec
mov
test
jbe
add
xchg
push
mov
call
or
int3
mov
in
and
mov
cmp
adc
push
aam
and
scas
vandps
in
cmp
lret
dec
or
cwtl
jg
mov
sarl
test
xor
mov
in
scas
jae
jae
sbb
lea
xor
add
not
cmp
rcrl
testl
xchg
sti
cmp
lds
jo
test
out
int
sbb
inc
int3
sub
incl
jnp
testb
push
pop
and
in
fwait
outsl
mov
insl
ljmp
rol
loope
cltd
test
jmp
scas
push
aad
rcll
push
xlat
test
jne
imul
rcrb
cmpl
test
into
divl
aaa
pushf
lcall
out
stc
inc
dec
sti
sbb
loope
adc
das
in
jno
sbb
sbb
jmp
lods
add
ficomps
fisubrs
mov
add
xlat
xchg
adc
mov
repnz
mov
xor
mov
pop
sahf
push
adc
cld
adc
sbb
mov
clc
scas
aam
es
dec
mov
push
fsubrp
pop
leave
rcl
rolb
ss
repnz
sbb
out
add
dec
les
adc
ficoms
inc
fisubrl
int
data16
out
in
and
aad
iret
inc
out
or
int3
cmpsb
mov
mov
pushf
test
sbb
addr16
push
iret
insl
xchg
rcll
mov
jg
out
sub
pop
cmpsl
push
jmp
inc
jbe
fs
pop
testb
dec
or
inc
dec
and
cmp
mov
popf
test
sbb
cmpsb
push
aas
shl
xor
add
int
mov
mov
pop
lcall
inc
js
imul
cmpsb
jns
add
pusha
imul
inc
int3
sub
aaa
inc
lcall
push
cmp
xchg
test
cmpl
mov
push
dec
mov
fisubs
aaa
add
ss
pop
jl
and
xchg
xchg
sub
dec
pusha
mov
jno
push
dec
addr16
addr16
insl
add
jbe
addr16
mov
jbe
out
test
xchg
test
movsb
dec
ljmp
mov
rorl
nop
add
inc
loop
mov
cwtl
xor
gs
pop
hlt
mov
ret
pop
fdivrs
or
js
sub
xchg
in
mov
mov
push
mov
rcl
insb
add
rorl
stos
pop
icebp
fdivl
test
std
js
das
lret
sti
push
xchg
sub
dec
mov
insb
add
ret
hlt
dec
lock
test
movsl
int
pop
lcall
jl
inc
dec
loope
fwait
inc
xchg
push
mov
push
mov
xlat
in
movsb
cmp
pop
divb
mov
pop
mov
fucom
ja
lods
fwait
xor
xor
xchg
mov
mov
push
xlat
outsb
test
cmp
pop
cmpsb
cmc
mov
sub
pop
stc
adc
lods
dec
xor
jl
xchg
sub
sahf
dec
out
and
add
jne
cmpsl
inc
mov
jne
out
test
mov
enter
aad
inc
outsb
into
xchg
clc
or
xchg
sub
repnz
mov
cmpsl
and
jnp
adc
lds
mov
arpl
cmpsb
cmp
fdivl
push
add
stc
sbb
fcompl
pusha
imull
in
ss
jle
ret
cltd
mov
pushf
cli
dec
xchg
pop
mov
push
in
fwait
out
fistpl
mov
stos
inc
outsb
psrlq
and
stc
jae
jno
aaa
xchg
pusha
test
out
adc
pushf
xor
add
xor
xchg
pop
sbb
xor
sbb
cltd
js
int
mov
push
stos
negl
xor
dec
jmp
imul
aaa
lock
aas
push
push
mov
popf
mov
adc
cmp
stos
inc
cmp
sahf
mov
ja
test
push
pop
movsb
push
ret
pushf
sub
movsl
push
pop
push
stc
push
jp
push
inc
pusha
stos
div
xor
mov
xor
aaa
xchg
push
scas
dec
std
lea
sub
jae
sbb
mov
mov
scas
iret
mov
mov
fucomp
lods
ss
lods
xor
pusha
sbb
popf
pop
loopne
arpl
gs
call
loop
pop
xchg
scas
in
mov
es
cmpsb
andl
icebp
dec
in
sbb
adc
inc
cltd
mov
cmp
dec
or
mov
aaa
add
adc
mov
adc
xchg
xor
inc
movsl
addr16
sbb
cwtl
lock
lret
ljmp
fdivrl
leave
sub
scas
loop
cmp
popl
lock
sbb
ret
and
jg
js
ljmp
ds
sahf
outsl
mov
xor
xchg
cs
arpl
cmp
out
js
xchg
sti
or
xor
mov
adc
cmpb
push
in
push
in
push
pop
push
mov
inc
test
int3
dec
or
unpcklps
incl
fstpt
in
movsb
mov
gs
test
aam
mov
mov
in
push
das
gs
push
pop
scas
pop
mov
or
add
in
cmp
push
push
clc
pop
xor
incl
mov
mov
out
ret
in
add
aaa
popf
mov
pop
sbb
ljmp
sub
mov
mov
push
sbb
jns
push
push
fwait
arpl
out
int3
mov
sbb
cltd
cli
aad
cmp
mov
jo
pusha
mov
jmp
or
popf
sbb
adc
call
jmp
cmp
pusha
and
into
inc
aaa
pop
jae
xchg
mov
inc
xlat
cmp
pop
pushf
cmp
and
xchg
adc
sbb
mov
loop
jne
pushf
popa
mov
add
js
movsb
cltd
sub
or
out
lock
cld
int3
inc
jecxz
ja
cli
push
cmpsb
lret
outsl
insb
int
sti
push
cmp
and
mov
adc
and
int
aas
loop
lods
leave
aad
std
imul
cmpsl
and
jbe
vhsubps
insl
add
mov
jmp
pop
mov
sbb
dec
jp
pop
insb
pop
mov
dec
sbb
out
out
inc
icebp
mov
lahf
int
adc
dec
out
mov
cmp
xor
lret
mov
dec
xor
ds
sbbl
ret
cmpsb
pop
je
loopne
mov
sub
pop
fsubrs
rcll
scas
les
xor
stos
jne
pushf
pop
pushf
xor
add
inc
push
aaa
into
xchg
dec
sbb
lods
mov
inc
adc
test
dec
sbb
jae
push
ss
adc
scas
push
sbb
int
insl
shlb
aam
jmp
roll
mov
rcrl
fadds
iret
inc
inc
cwtl
aaa
rcrb
dec
out
cmc
les
pop
inc
adc
scas
push
mov
cmp
ja
daa
cmp
inc
xchg
scas
fcompl
mull
shlb
cwtl
in
lahf
push
add
mov
pop
mov
outsl
addr16
xchg
xchg
aam
xchg
or
out
movsb
jne
int3
cmpsb
adc
filds
scas
xchg
loope
xchg
mov
sbb
add
dec
adc
push
fs
xchg
pop
mov
std
les
sub
xlat
pop
add
and
and
dec
out
fdivs
cltd
and
pop
shl
testb
in
movl
push
addb
lock
jmp
cld
mov
addr16
xor
push
sahf
mov
inc
mov
stos
and
lods
fsubp
push
int
sti
pop
negb
mov
jo
fcomip
pop
in
clc
mov
mov
scas
repnz
insb
mov
dec
pcmpgtd
cmp
push
add
cmpb
push
lods
mov
mov
mov
and
cmc
movsl
sub
xor
jb
or
pop
scas
fisubs
xor
scas
jbe
fwait
repz
scas
xor
addr16
lea
adc
lret
sub
or
out
jno
xchg
into
xchg
and
mov
mov
test
mov
push
decb
fstp
orl
imul
cmp
mov
mov
insb
sar
push
cli
push
pop
clc
gs
pop
add
loopne
push
lcall
and
popf
inc
fidivs
loopne
push
neg
adc
aad
jecxz
incl
imul
daa
test
push
ds
rclb
jmp
inc
adc
cmpsl
push
adcb
cmc
add
ja
mov
mov
or
add
pop
movl
push
repnz
movl
xor
shll
mov
addr16
mov
pushf
clc
push
fimull
xchg
inc
jge
repz
rol
xchg
fsubrs
jo
movb
fisttpll
clc
push
add
mov
lret
orl
add
adcb
lret
sub
mov
mov
or
mov
mov
mov
test
and
inc
or
fldl
lea
or
xchg
aaa
cmp
adcl
sub
jecxz
outsb
in
xchg
stc
jno
int
fwait
rorb
or
jecxz
mov
pop
xor
outsl
jmp
jp
loop
dec
xchg
aam
mov
call
mov
shll
out
cmp
cmp
in
jno
sar
xchg
xchg
or
mov
loop
shlb
push
mov
cmp
in
jae
adc
js
lods
or
addr16
jmp
push
xor
adc
fldpi
insl
xchg
or
adcb
xchg
shll
inc
lret
and
sub
adc
popw
jmp
jmp
lock
rcl
xchg
lret
mov
cmpsl
fistpll
xchg
icebp
data16
xchg
inc
fwait
aas
imul
pushf
or
sub
cmp
lahf
iret
mov
mov
mulb
decl
add
pop
ret
xchg
dec
js
add
dec
or
xor
shr
aaa
jne
fdiv
into
mov
rol
xchg
push
not
sbbb
xchg
test
imul
and
roll
aam
jecxz
pop
out
jge
cs
outsb
rorl
orl
add
or
in
rcrl
adc
lods
shr
inc
or
add
js
and
dec
pop
aas
add
push
mov
outsb
rolb
loop
jp
pop
lds
cmpsl
and
dec
fidivl
ljmp
out
pushl
sti
lock
xor
inc
jb
into
mov
lods
push
stc
loop
push
cli
push
jl
std
popa
in
xor
push
repnz
test
cmp
clc
mov
stos
jecxz
dec
stos
push
std
cwtl
fwait
sub
push
insb
fstpt
xorb
pop
add
cmp
push
mov
jno
inc
cmpsb
push
cld
sbb
mov
out
sub
adc
sbb
ret
or
or
pop
sub
js
into
xchg
sub
sbb
mov
lea
stos
push
cld
sub
shll
push
addr16
nop
sub
cmp
out
mov
mov
cmp
les
lret
lock
std
push
ja
sub
jmp
jmp
adc
mov
dec
adc
or
push
jge
sbb
xchg
push
imul
jle
cmp
les
push
xor
clc
cli
in
ljmp
adc
fcomps
les
push
jge
sbb
test
jns
fs
xchg
cmp
les
push
std
ds
repnz
push
inc
jmp
out
call
repnz
mov
test
mov
orb
mov
cmc
rolb
out
mov
xchg
jl
dec
mov
xchg
cmc
lods
aam
loop
or
repnz
daa
mov
in
jp
shr
js
out
push
xchg
add
into
loope
lods
push
inc
adc
mov
arpl
cmp
daa
mov
jns
aas
lahf
mov
mov
les
test
popf
clc
insb
out
ret
call
mov
xor
js
dec
cmp
sbb
fwait
rorl
clc
nop
ds
popf
mov
mov
pop
mov
and
into
mov
cmp
cmpsl
sti
xor
ja
jns
cmc
pop
xor
nop
popf
subb
adc
push
call
dec
push
add
movsb
jno
pop
and
push
add
gs
fisubl
mov
or
mull
push
cmp
in
cli
stc
pop
mov
mov
popf
aaa
in
nop
inc
adc
cmpsb
xor
mov
stos
pop
push
dec
or
cmp
mov
jge
xlat
repnz
nop
inc
xchg
lock
cmp
adc
cmp
and
sbb
pop
stc
dec
inc
cmp
je
adcb
sbb
mulb
rorl
int
add
mov
flds
call
clc
adc
jp
dec
xlat
jge
pop
icebp
push
arpl
ret
xor
imul
icebp
push
clc
mov
iret
xchg
mov
dec
adc
loopne
test
pop
add
aam
orl
mov
imul
repnz
je
mul
sbb
add
jns
adc
loope
inc
fs
cmp
das
sub
mov
je
test
mov
fldl
not
mov
fs
stc
fnsave
inc
prefetch
lds
mov
repz
leave
loop
rolb
add
dec
repz
test
and
adcl
pop
pushf
ds
xlat
sbb
scas
imul
testl
int3
xchg
aam
mov
aaa
rcll
cs
int3
movsl
dec
pop
call
cmc
loop
mov
sbb
outsl
scas
inc
lahf
ss
testb
jae
aad
lods
cwtl
aas
iret
into
ja
and
nop
aaa
mov
mov
jo
ret
test
loop
xlat
cld
arpl
pop
add
aas
add
dec
cld
movsb
sub
ret
adc
pop
sarl
adc
jl
lds
mov
stos
js
test
push
pop
fbld
or
or
outsl
pop
fs
out
or
xor
push
cmp
loope
jle
mov
das
dec
incl
push
stos
js
xchg
mov
jno
push
cld
cwtl
inc
jbe
fstpt
adc
jnp
outsb
repnz
jp
sbb
dec
xchg
inc
bnd
jecxz
in
pop
testl
xchg
add
cmpsb
and
add
lods
add
inc
or
mov
push
es
hlt
aam
repnz
xchg
lret
cmp
lock
out
in
std
pop
inc
hlt
mov
mov
hlt
pusha
loopne
rolb
xor
mov
sub
sub
or
inc
icebp
into
xchg
loop
int3
lret
push
outsl
sbb
jl
addl
or
mov
in
xor
leave
jge
mov
add
lcall
mov
mov
push
fs
push
insb
lock
fs
mov
lods
nop
cmpsb
orl
push
les
mov
cmp
xchg
and
sahf
es
adc
lds
pop
or
addr16
std
push
aam
push
loop
pop
xor
imulb
test
mov
inc
adc
adcb
xchg
inc
pop
inc
push
in
outsl
jb
jns
xor
aaa
icebp
es
push
ljmp
clc
jle
and
jecxz
movsb
mov
movsl
mov
outsl
push
xor
add
or
pop
pop
hlt
popa
inc
xchg
mov
jns
push
stos
jmp
ja
mov
roll
std
mov
add
fisubs
push
cmp
in
mov
xchg
aaa
inc
loopne
insl
aam
nop
cmp
add
ja
adc
lock
or
add
pop
push
incb
jno
inc
inc
out
ficoml
and
push
pop
xor
pop
push
adc
xor
and
cld
dec
mov
out
ja
int3
cld
test
mov
add
lods
xor
fwait
cmp
or
mov
movsb
fwait
jmp
inc
fcomi
loope
mov
sub
pop
xor
mov
mov
mov
push
jg
aaa
iret
test
inc
pop
cli
mov
cmc
adc
out
ffreep
xchg
and
inc
sbb
imul
out
jns
imul
add
pop
dec
adc
cmp
ffreep
xor
pushf
sbb
xchg
cmp
imul
pop
std
adc
mov
aad
inc
push
std
or
cld
pop
in
ret
sbbl
aaa
inc
or
repz
push
lcall
or
push
sti
mov
mov
outsb
add
pop
sub
into
in
cmp
sahf
cmp
sbb
push
add
push
lea
xchg
inc
jns
cmp
adc
push
sub
daa
xor
pop
sarb
mov
or
fists
iret
out
stos
repnz
xor
mov
mov
in
imul
das
sbb
test
stos
idiv
mov
jb
push
sti
les
imul
popa
push
add
mov
inc
test
adc
dec
or
shll
cmc
inc
rep
mul
xchg
dec
adc
repnz
divb
subb
mov
mov
stos
xchg
test
pusha
or
orb
pop
add
push
shll
mov
xchg
int
dec
jnp
jge
mov
scas
gs
mov
push
jno
push
push
dec
insb
mov
sub
push
leave
dec
mov
xchg
push
xchg
xor
xchg
std
pop
push
fldcw
lods
mov
mov
xlat
lods
aas
xchg
ret
or
add
or
mov
data16
lea
cli
mov
aas
fdivrl
or
outsb
pop
hlt
lahf
jne
sbb
shlb
ret
lret
leave
inc
or
mov
mov
pop
loope
pop
xchg
mov
pop
int
pop
add
inc
or
lret
in
aam
add
xor
movsl
sub
shrb
xor
mov
fisttpl
fildll
jmp
std
and
pop
je
lahf
jne
fildl
cwtl
flds
std
pop
imul
jmp
pop
inc
and
sbb
sahf
ljmp
pusha
arpl
outsl
bound
shr
pop
adcl
testl
inc
pop
in
adc
dec
ljmp
aas
in
push
jg
inc
out
lret
iret
repnz
scas
pop
adc
inc
adc
mov
lea
aad
and
ja
jp
sti
sub
push
aas
mov
ja
daa
cmpsl
leave
popa
ljmp
pop
cli
pop
cmp
es
inc
cld
cmp
sbb
jg
cltd
inc
lock
lret
ret
lea
mov
fisttpll
call
add
xchg
aaa
dec
fidivs
pop
dec
rcr
xor
xchg
cmp
out
sub
inc
lea
sbb
or
or
popf
push
fdivl
xchg
inc
test
mov
popf
fistpl
ret
test
mov
mov
sbb
cvtdq2ps
jl
mov
mov
add
insb
repz
xchg
outsb
enter
pop
sbb
stos
push
nop
mov
or
cltd
inc
push
fistpll
dec
mov
lea
cli
pop
pop
aad
pop
sbb
cmp
aam
es
adc
test
mov
or
fistpll
pop
ljmp
shrl
addr16
pop
std
int3
jns
mov
inc
icebp
add
sbb
scas
dec
dec
inc
or
lahf
mov
repnz
xchg
ja
adc
xor
in
xchg
and
insb
repz
out
shrl
call
push
sbb
in
jmp
and
or
inc
arpl
lret
mov
jg
gs
dec
out
xor
andl
sbb
outsb
ljmp
dec
imul
shrb
and
cmpl
mov
jae
lods
les
aaa
fwait
sbb
daa
push
push
or
arpl
xor
bound
je
fdivl
add
or
test
cmp
mov
pop
lcall
cld
push
jg
cmp
aad
sub
cmc
fiaddl
lea
mov
lret
ljmp
orb
mov
mov
stc
out
lods
das
dec
hlt
jbe
pop
pushf
mov
dec
xchg
xchg
cmp
movl
push
loopne
psrlw
mull
rolb
fdivrs
movsl
fcmovne
sub
jecxz
pop
add
lods
or
xlat
xor
ljmp
jnp
mov
scas
push
inc
jp
jnp
adc
adc
popa
loop
iret
js
out
sbb
aad
mov
jl
dec
sub
xchg
ljmp
nop
mov
and
lea
mov
ret
mov
out
xor
jnp
ret
pop
add
cmp
cs
shlb
mov
jge
jmp
stc
mov
or
adc
push
mov
fstpl
and
test
movsl
sub
repz
sti
pop
jbe
out
inc
psrld
mov
btc
fcompl
iret
int
scas
xchg
dec
adc
inc
or
sub
fistps
lret
cmp
pushf
test
push
jno
int
sbb
dec
adc
dec
fwait
pop
add
cmp
and
inc
das
mov
push
scas
push
lcall
jl
repz
pop
jl
out
cmp
leave
xchg
and
jo
dec
or
push
xlat
dec
sbb
imul
out
lds
adc
fidivrs
or
mov
push
and
pop
mov
and
jmp
aam
mov
mov
or
push
or
xor
lret
pop
inc
mov
repnz
hlt
in
rorb
sub
cmc
stos
outsb
call
pop
sub
mov
cs
in
cld
aas
jle
out
push
pop
add
imul
push
mov
aam
fildl
hlt
xorl
out
jl
jne
sub
out
push
xchg
mov
mov
out
cmp
sub
repnz
mov
fadds
imul
jb
jbe
mov
lea
fcompl
lret
insb
repz
sbb
mov
in
popa
ficoms
mov
xchg
int
aad
jecxz
jb
stc
out
ljmp
int
mov
mov
movsb
lds
cli
dec
push
inc
sti
rep
call
push
outsl
push
push
jns
mov
xchg
lcall
push
mov
or
dec
mov
mov
cmp
inc
and
sub
sti
out
shr
test
cmpl
sbb
aas
jo
popf
mov
cmpsl
inc
adc
shrl
sub
lods
xor
movsb
xor
sub
mov
out
sarl
mov
mov
pop
push
iret
inc
jp
add
add
sub
sarb
cmp
adc
pop
add
fmull
mov
push
pushf
inc
popa
sub
icebp
pop
mov
in
outsl
jb
iret
xchg
shlb
nop
adc
les
dec
adc
pushf
inc
add
mov
pushf
push
dec
adc
stos
jmp
mov
fists
push
shlb
add
out
pop
or
add
fdivrl
mov
movsl
in
mov
inc
int
roll
inc
sbb
fs
jbe
shll
mov
sbb
out
sahf
xchg
cmp
mov
std
sbb
and
ljmp
hlt
mov
scas
add
test
mov
stos
xor
mov
xchg
aaa
mov
cwtl
inc
push
mov
inc
or
ja
push
subl
jb
addr16
ret
pop
test
dec
adc
rorl
ret
cmp
jl
xor
insb
in
cmp
dec
or
and
jae
loop
mov
push
mov
mov
jnp
sub
xor
fcmove
das
loop
dec
adc
push
lahf
cwtl
mov
loopne
fstl
xor
idivb
inc
or
aam
cmc
mull
pop
push
imul
fldenv
mov
lret
xchg
add
jmp
popf
jge
iret
xchg
imul
mov
inc
lcall
cmp
pop
add
cli
outsb
dec
push
mov
push
rcr
fidivs
stos
fwait
stos
leave
xchg
test
addr16
bound
and
cli
cmp
shrb
nop
mov
cmpsb
mov
and
rorb
xor
das
inc
outsb
in
push
xor
es
push
lds
mov
ds
cs
dec
push
jo
jns
lcall
mov
cmp
arpl
mov
mov
push
enter
mov
pop
mov
cmp
pop
mov
xchg
xor
cmp
cmpsl
mov
mov
xchg
inc
xor
push
das
sub
insl
push
xor
lods
daa
cwtl
push
mov
lds
mov
movsl
cmp
cmpl
pop
mov
cltd
xor
push
in
dec
inc
daa
scas
jo
int3
xchg
jnp
mov
jmp
inc
mov
xlat
or
push
xor
adc
fisubl
add
mov
mov
jae
jae
ja
data16
inc
fistpl
xchg
xchg
out
push
aam
cmp
pop
mov
movsl
stc
cs
sarb
int3
mov
and
mov
movsl
jo
push
nop
mov
cmpsl
outsl
sub
cmc
mov
jle
inc
lods
xchg
sub
cmp
cmp
pop
mov
jae
fnstsw
pop
add
lret
push
je
jne
cmc
pop
dec
gs
adc
add
sbb
fmull
call
sti
in
inc
mov
xchg
ds
and
cmpl
not
fwait
inc
ss
sbb
and
xchg
aaa
pop
mov
std
push
mov
dec
push
add
xor
je
pop
adc
lahf
sbb
cmc
sub
rcrb
dec
adc
pop
add
out
jne
xchg
dec
adc
fadds
lret
test
xor
jle
xchg
cmp
outsb
pop
lret
push
fmulp
pop
add
cmpsl
xor
ljmp
push
stos
mov
push
mov
pop
pop
xchg
sub
xor
push
xor
cld
sbb
push
decl
shrl
lods
inc
or
lea
mov
pop
out
mov
cmp
push
stos
mov
out
xlat
inc
cmp
mov
mov
push
mov
mov
fidivrs
push
add
ds
rolb
adcl
scas
sub
mov
and
jge
xchg
inc
aas
lock
in
xlat
xchg
loopne
inc
inc
fdivs
fdivl
pop
pusha
testl
jnp
sbb
in
xchg
dec
fiaddl
jg
fwait
aas
jecxz
xchg
icebp
jo
es
jo
xor
incb
adc
dec
int3
sarl
call
and
mov
pop
push
and
jecxz
xor
xlat
mov
js
rcrb
dec
fdivrs
sub
inc
push
add
dec
adcl
push
fidivs
filds
in
sub
imul
stc
xor
dec
lcall
rol
jge
adc
sbb
push
dec
test
mov
dec
popl
mov
jl
mov
andl
pop
push
pop
stc
mov
movsl
mov
int
push
sarl
lret
loopne
cltd
mov
loopne
adc
out
mov
test
push
stc
fwait
xchg
cmp
pop
push
lcall
mov
xchg
push
xchg
aad
add
enter
in
rclb
push
push
adcb
mov
cwtl
jg
jbe
loopne
sub
pushf
rorb
movl
push
adc
sahf
xor
sub
mov
lods
sub
push
mov
cld
mov
dec
adc
mov
xor
shll
xor
pop
repnz
fcoms
mov
lret
in
pop
call
popa
jmp
or
aas
mov
sbb
dec
and
sbb
mov
movb
test
push
adc
mov
adc
fwait
add
aas
xchg
es
and
test
repz
int
incl
pop
arpl
pop
stc
push
jg
jmp
stos
ficoml
push
outsb
sub
cltd
jg
push
pop
lret
and
mov
call
pop
cmpsl
dec
cmp
or
fsubs
mov
test
xchg
inc
aad
xor
sbb
sub
pop
sbb
adc
xorl
inc
xor
loop
loope
fwait
repnz
cmp
xchg
cmp
lods
vcvtdq2ps
shlb
cli
jecxz
push
sbb
add
inc
dec
das
mov
xchg
imul
cs
dec
adc
cmp
mov
mov
pop
add
addr16
push
shll
xor
sahf
in
jmp
fwait
stos
stc
lcall
pop
add
mov
cltd
cmp
sub
shrl
mov
rorl
and
movl
cli
mov
insl
test
test
dec
insl
lret
movsb
xor
je
xor
pop
or
mov
shlb
test
mov
mov
shrl
or
std
fs
out
jbe
mov
add
data16
idivb
lock
pop
add
push
mov
adc
pop
push
xchg
mov
jp
adc
scas
pop
inc
or
orl
xlat
jl
cltd
test
or
cltd
scas
pop
mov
sub
aaa
sbb
add
mov
mov
mov
sub
nop
fiadds
mov
movsl
adc
addr16
xlat
add
add
xor
adc
sub
lcall
xor
mov
rcr
popa
cmc
lods
adc
enter
jbe
ret
repz
movsl
mov
stos
ret
mov
mov
jo
lcall
and
pop
mov
and
add
jo
jae
popa
fs
pushl
mov
pop
adc
cmp
sbb
fsubs
dec
adc
arpl
out
and
xor
xor
dec
sbb
inc
nopl
jae
dec
push
add
push
sbb
stos
faddl
cwtl
dec
pop
jp
mov
test
lods
popf
cmp
cmp
and
jae
loope
or
out
sub
adc
xchg
pop
loope
jge
dec
sbb
inc
loopne
push
dec
lock
pop
mov
faddl
mov
sbb
or
mov
jae
faddl
mov
aaa
out
dec
adc
cmc
xor
nop
xor
mov
les
fxch
pop
add
add
adc
inc
mov
sub
rcl
loopne
negb
clc
gs
pop
clc
sbb
add
cmc
pop
cld
jne
or
shrl
jle
rclb
rol
sub
aaa
adcb
jmp
cmp
call
sub
scas
sub
xor
sub
push
ficoml
scas
lea
rorl
mov
mov
iret
cmp
pop
scas
inc
pop
out
shlb
adc
inc
icebp
mov
cltd
mov
aas
movsb
in
pop
incl
pop
add
xor
add
sub
mov
cmpsb
fstps
repz
outsb
cmpsb
sbb
dec
jnp
sub
sbb
jbe
jge
push
data16
lret
xor
stos
ret
mov
sub
push
std
jp
jmp
scas
pop
jg
push
inc
std
and
cmp
shl
mov
std
fdivs
loope
fimull
push
sbb
cmc
push
fistpll
out
mov
jo
and
adc
xchg
loop
adc
jo
push
jae
jg
into
xchg
sub
inc
or
mov
popa
inc
or
inc
orb
xor
adc
mov
pop
in
in
fistpll
cld
in
ja
xchg
inc
jmp
ret
fsubr
inc
adc
add
push
lods
fidivs
mov
add
cli
sub
inc
push
loop
or
aam
pop
ret
daa
adc
arpl
cmp
push
incl
out
jmp
mov
mov
lds
outsb
repz
cmpb
fldt
mov
mov
sbbl
dec
xlat
sarb
js
mov
mov
imul
push
movsl
mov
mov
mov
dec
psubusb
adc
or
psubq
mov
mov
rclb
scas
sbb
loopne
xchg
repnz
pop
pop
add
inc
adc
add
xchg
cmp
in
loopne
les
je
inc
xchg
daa
stos
xor
and
lods
dec
sub
xor
mov
jae
mov
push
sti
adc
dec
adc
push
jle
in
push
mov
repnz
lds
xchg
jae
iret
mov
outsl
sbb
xchg
mov
jecxz
mov
xor
pop
jmp
add
jle
and
sbbl
dec
aad
movsb
cmpsb
sahf
inc
sub
cmp
mov
push
xchg
cmp
ljmp
pop
leave
mov
mov
push
add
out
insb
sub
or
cmpsb
pop
stc
nop
lea
or
add
jle
insl
push
sbb
or
push
add
pop
mov
inc
or
test
sub
fs
out
in
jno
out
cli
pop
shrl
lahf
inc
mov
stos
pushf
inc
push
leave
cld
pusha
xchg
push
push
clc
loop
inc
or
rclb
xlat
and
lods
int3
add
jb
sbb
fs
movsl
out
aad
js
inc
adc
test
les
mov
cmc
loope
in
jge
dec
stc
xchg
ret
cwtl
inc
adc
and
arpl
or
ret
pop
ja
sub
out
push
rolb
cld
mov
mov
test
mov
pop
clc
jbe
push
add
insb
fstpt
sahf
aas
cltd
addb
fwait
adc
int3
mov
push
mov
arpl
lcall
jle
mov
push
popf
push
add
fwait
cmp
cwtl
sbb
mov
jle
dec
in
fistl
int3
pop
and
scas
stc
xorl
sub
inc
add
sbb
pop
out
jbe
mov
mov
cs
jge
push
jl
jnp
adc
mulb
jl
sub
and
and
outsb
call
jno
mov
lods
arpl
add
adc
xchg
pushf
inc
pop
add
into
mov
xchg
enter
mov
xlat
jge
fnstcw
mov
stos
and
and
lea
adc
scas
lret
push
mov
ds
inc
mov
inc
adc
mov
xchg
mov
lret
mov
mov
pop
mov
lcall
adc
fistpll
je
jle
lods
das
outsb
imul
cmp
xchg
inc
sub
jo
inc
fmuls
aad
cwtl
fiaddl
subb
daa
rcl
sbb
shlb
lods
or
insl
test
and
jo
inc
pop
xchg
gs
leave
mov
outsb
out
mov
adcl
neg
jo
add
int
aas
jnp
mov
mov
sub
push
mov
leave
pop
xlat
or
inc
xor
xchg
lahf
inc
add
rorb
mov
aas
movsb
mov
lods
adc
cwtl
inc
xchg
sub
jl
std
mov
or
sti
bound
mov
shll
insb
out
fisubl
xor
xchg
psllw
ret
aam
stos
sub
adc
outsb
movsl
inc
push
jno
xchg
jo
cmc
cli
xchg
adcl
and
mov
scas
daa
fmuls
inc
adc
fldl
aam
mov
std
outsb
add
mov
movsb
les
repz
inc
and
aaa
sarb
pop
mov
xchg
mov
clc
rcrl
stc
sarl
mov
dec
mov
mov
popf
cmp
mov
aad
add
sub
aaa
pop
repz
jp
cwtl
rclb
jge
and
add
das
aaa
pop
outsl
out
add
xor
pop
out
xor
rorb
or
clc
push
mov
jo
out
test
push
into
mov
cmpsl
pop
cld
les
fdivrl
dec
or
push
mov
pop
pop
test
adcb
push
rcrl
test
dec
or
popf
sbb
loop
mov
arpl
adc
jge
out
push
popa
sbb
daa
and
inc
adc
faddl
xchg
inc
add
fidivrs
pop
pop
shl
and
and
cmp
inc
inc
or
fidivrl
dec
popa
clc
jg
jb
sbb
out
dec
push
incb
push
stc
fcoml
and
out
jae
pusha
ljmp
cmc
pop
and
aam
add
push
imul
frstor
outsb
into
punpcklbw
add
pop
add
push
mov
mov
push
divl
mov
jb
movsl
sub
xchg
sbb
clc
dec
mov
xor
outsb
jg
mov
rcrl
lea
push
inc
scas
hlt
mov
fidivl
add
stos
xor
xor
test
dec
out
pop
xor
add
mov
ljmp
jb
ss
test
daa
mov
pop
and
in
jne
int3
arpl
xchg
add
sub
mov
cmp
insb
mull
mov
mov
loopne
adc
pushf
stc
int
cltd
xor
adcb
xchg
xor
or
mov
mov
fidivl
adcl
insl
shrl
movb
lods
shlb
lret
adc
add
lret
mov
std
test
mov
test
push
fmuls
pop
movsb
sub
idivl
popa
mov
add
add
mov
push
mov
and
cmpsl
divps
inc
enter
popa
jl
xchg
sbb
dec
mov
xor
insb
jg
sahf
pop
mov
xor
pop
xlat
outsb
mov
mov
mov
fidivl
add
xor
xor
orl
scas
cmp
push
out
pop
xor
add
loope
mov
jnp
jb
xor
stos
inc
into
push
nop
daa
xchg
enter
scas
inc
fildl
jge
cld
int3
arpl
xchg
add
dec
ljmp
mov
inc
xlat
imul
mov
mov
fistpll
lcall
fs
adcb
xchg
xor
or
hlt
mov
fidivl
adcb
mov
clc
imul
movl
and
in
fbstp
adc
add
lret
cld
xorl
sbb
mov
mov
in
idivb
scas
pop
add
dec
iret
call
mov
push
mov
and
movsl
push
pop
idivb
movb
pusha
jge
xchg
sbb
dec
mov
xor
push
push
pushf
push
mov
xor
pop
fsubrs
adc
fisubs
jno
call
xor
xor
orb
scas
cmp
xor
add
loopne
mov
jp
jb
xor
nop
daa
xchg
enter
scas
inc
fiaddl
jge
sti
int3
arpl
dec
ljmp
mov
inc
xlat
push
es
mov
fidivrs
cltd
stc
lret
xor
adcb
test
xor
or
hlt
mov
fidivl
jg
test
push
xor
add
in
fidivs
pcmpeqd
xor
popa
leave
mov
sti
xorb
sbb
inc
dec
aad
and
mov
ret
in
cmc
jnp
popa
lods
push
add
inc
into
call
mov
push
mov
and
movsb
or
inc
fdecstp
pop
jge
xchg
pop
popa
clc
dec
mov
xor
imul
aaa
mov
fsubrs
bsf
stos
testb
adc
das
mov
leave
orl
push
out
pop
xor
add
filds
and
jb
xor
nop
daa
test
enter
scas
inc
flds
jge
cli
int3
arpl
add
lds
cmpl
or
imul
pop
cmc
mov
fnstsw
cwtl
stc
leave
xor
pop
sbb
mov
xor
or
hlt
mov
jno
jle
test
imul
push
lods
mov
fnsave
push
jne
add
enter
xorl
dec
aam
and
mov
ret
hlt
jp
popa
lods
adc
call
mov
push
mov
and
idivb
inc
pop
jge
push
stc
inc
mov
xor
push
mov
xor
mov
mov
jb
cld
adc
sub
dec
xor
jg
sbb
rcrl
int
repnz
add
fiadds
and
jb
xor
nop
daa
test
enter
scas
inc
fdivrs
out
jno
int3
arpl
xchg
add
les
jle
and
shll
inc
xlat
push
mov
mov
fdivrl
xchg
stc
enter
popa
jmp
mov
xor
or
hlt
mov
fidivl
jge
test
push
mov
lods
mov
fdivl
or
cs
jmp
stc
xorb
sbb
and
mov
shl
repz
popa
stos
adc
fwait
inc
int3
call
mov
push
mov
and
idivb
ret
inc
pop
jge
mov
fwait
xor
adcb
add
xor
xchg
testb
sti
adc
sub
stc
nop
out
xor
jle
sbb
rcrb
int
icebp
outsb
add
fldl
jbe
jb
xor
nop
daa
sub
pop
sbb
ds
jo
int3
arpl
xchg
add
ret
dec
ljmp
lahf
or
addr16
es
mov
fstpt
xchg
stc
cs
cmpb
insl
aad
insl
pop
mov
mov
fidivl
jl
test
addr16
xor
decl
dec
out
fidivl
or
add
sub
jmp
clc
jle
pop
mov
stos
inc
dec
rorl
pop
lahf
and
inc
push
shl
bnd
popa
test
lret
cld
and
dec
mov
fsubr
outsl
and
idivl
roll
pop
jle
lea
stc
inc
scas
pushf
xor
adcb
add
xor
xchg
mov
mov
pop
cli
adc
nop
in
xor
jge
sbb
iret
push
ss
lock
push
and
lea
xchg
stos
inc
leave
dec
nop
daa
sub
scas
inc
aad
out
outsl
test
sub
ljmp
popf
or
out
es
mov
fidivrl
or
stc
lds
adcb
cmpl
outsb
push
lea
pop
loopne
jno
jnp
stos
lods
xor
gs
enter
lods
mov
push
out
fdivs
or
add
pop
lds
scas
sbb
and
sahf
and
icebp
jne
popa
cmpsl
adc
popf
inc
enter
fs
xchg
sbb
sahf
dec
mov
insl
and
clc
cmp
jg
mov
stc
inc
lods
popf
xor
arpl
push
xor
fidivl
or
fcomps
mov
push
lods
sub
xor
jl
sbb
into
push
ss
out
jo
and
mov
sub
lods
inc
enter
jg
lret
mov
call
arpl
nop
push
popf
roll
jns
and
adc
inc
fldenv
es
mov
fnstcw
or
pushf
xor
adcb
cmpb
imul
mov
lea
fidivl
jp
stos
stos
xor
arpl
xor
std
test
lods
mov
push
call
pop
jno
push
mov
les
pop
lods
pop
lods
inc
dec
int
and
pushf
and
jg
jae
bound
jmp
mov
dec
mov
imul
pushf
push
stc
aaa
mov
adcb
packsswb
inc
stos
sahf
xor
xchg
mov
ss
fidivl
or
pop
fdivl
notl
lods
sub
xor
jp
sbb
int3
push
aaa
into
test
jo
pop
cmpsl
push
in
fadds
and
sub
sub
lret
mov
call
fs
inc
jmp
js
and
adc
inc
fldenv
daa
mov
mov
inc
fsubrl
jle
or
pushf
xor
sbb
ss
ss
mov
lea
js
stos
test
lret
sti
adcl
mov
push
call
push
outsl
outsl
push
mov
ret
hlt
jns
or
int3
es
push
scas
inc
push
mov
int3
arpl
ljmp
sbb
mov
jecxz
daa
mov
xor
push
adcb
push
fs
aas
test
sbbb
cld
mov
aaa
out
fidivl
pop
mov
aam
fnsave
push
lods
es
sti
xchg
loopne
xor
js
sbb
lret
iret
test
jo
sbb
mov
sub
xchg
sub
lret
lahf
mov
sarl
call
gs
push
popf
mov
fisubs
setns
mov
popa
jmp
mov
mov
inc
jle
pop
nop
fs
shrl
xor
sbbb
jl
push
scas
xor
fsubrs
mov
lea
jae
jbe
stos
cmpsl
das
cli
xchg
popa
enter
sbbb
mov
push
call
add
es
jmp
rorb
stos
adc
std
lretw
push
scas
inc
push
mov
int
mov
jmp
negb
mov
dec
mov
imul
stc
xor
adcb
or
sahf
xor
xchg
cli
mov
cmp
dec
fidivl
push
rclb
clc
rcrb
jne
repz
lods
and
cld
xchg
filds
lret
jbe
sbb
enter
sub
pop
sbb
mov
sub
xchg
sub
popa
adc
ss
and
in
test
and
or
cs
fstps
sub
sbb
inc
fisubrs
jle
add
es
xor
sbbl
jp
push
lods
xor
cmp
fsubrs
xchg
mov
fnsave
adc
xchg
pop
xor
testl
aaa
into
add
pop
popf
and
in
push
mov
jae
test
lods
inc
inc
leave
xchg
sub
fs
bound
mov
sub
into
mov
ret
hlt
pop
es
inc
scas
inc
fcmovnu
addr16
cwtl
add
xor
sbbl
cmp
lahf
xlat
pop
test
clc
mov
cmp
dec
add
pop
ss
stc
nop
rclb
jbe
icebp
pop
scas
and
xor
mov
xchg
push
ljmp
jno
sbb
es
cmc
jne
daa
lods
inc
rorl
jp
lret
bound
mov
into
xor
iret
and
in
test
mov
sub
sub
sbb
inc
fisubrs
jg
add
gs
mov
filds
push
stos
xor
jo
test
push
fcomp
je
jae
lods
movsb
sub
xchg
pop
lds
idivb
mov
pop
push
ljmp
jno
pushf
and
push
mov
jae
cmpsb
adc
sub
arpl
arpl
mov
sub
or
mov
repnz
daa
mov
inc
lods
inc
gs
xchg
jmp
xor
sbbl
cmp
sbb
mov
cmp
dec
add
pop
xor
push
fbstp
lock
scas
and
xor
mov
xchg
push
ljmp
jno
sbb
es
hlt
jne
mov
sub
lret
bound
fwait
mov
int
jmp
data16
in
test
and
mov
pop
out
rcrb
popa
clc
mov
inc
fisubrs
jg
add
xor
fiadds
push
stos
xor
jo
test
push
xlat
fnsave
push
lods
mov
les
cmc
jge
mov
push
push
ljmp
jno
fwait
and
push
mov
jae
movsl
fxsave
xchg
sub
int3
arpl
ljmp
or
mov
icebp
pop
daa
mov
inc
lods
inc
fs
xchg
arpl
das
mov
fsubrp
push
sbbl
cmp
test
idivb
cmp
dec
add
pop
xor
stc
nop
into
push
fbstp
out
pop
scas
and
xor
mov
xchg
push
ljmp
jno
sbb
es
or
lea
sub
lret
bound
lcall
gs
iret
popw
xchg
sahf
mov
fldenv
mov
pop
out
rclb
popa
clc
scas
cmp
imul
gs
mov
fldl
push
test
lret
cld
cmpl
dec
fnsave
push
lods
mov
ret
xor
hlt
jl
mov
adc
aaa
into
jmp
or
mov
je
movsb
or
xchg
sub
pusha
int3
arpl
mov
and
push
or
lock
daa
mov
inc
stos
inc
arpl
rcll
dec
sbbl
cmp
test
hlt
mov
cmp
inc
add
pop
xor
loopne
xchg
pop
scas
push
test
xchg
fidivrl
xor
mov
xchg
push
ljmp
jno
push
mov
es
lods
inc
mov
fmulp
bound
cltd
mov
lret
xor
andb
addr16
test
sahf
mov
out
test
and
mov
pop
in
rcll
popa
clc
lods
aaa
dec
fildll
jg
add
popf
xor
faddl
cmpsl
das
mov
jo
add
mov
clc
dec
aad
jne
outsl
push
lods
mov
shll
jnp
mov
adc
inc
int
iret
gs
xchg
pop
push
out
push
mov
jne
mov
les
arpl
mov
and
add
mov
out
push
daa
mov
inc
test
bound
ret
arpl
sub
sbbl
cmp
xchg
and
movsb
cmp
inc
add
pop
xor
loope
test
pop
scas
sbb
call
outsb
cli
sbb
ljmp
jno
adc
pop
lock
ja
and
xchg
sub
fmul
bound
cwtl
mov
lret
andb
push
mov
out
xchg
and
movsb
ret
daa
inc
ficompl
sub
adc
ss
loopne
int3
jg
decb
sahf
xor
or
mov
cmp
fidivl
add
mov
stc
nop
dec
rcr
jbe
insl
pop
scas
sahf
es
xchg
pop
mov
sbb
inc
lret
cmp
cld
arpl
xchg
sbb
nop
daa
call
or
sub
pop
int
mov
jmp
loope
shrl
add
mov
in
push
sub
aas
cmpsb
inc
fst
pusha
sub
xchg
clc
fs
sub
sbbb
add
mov
push
mov
mov
cmp
inc
fdivl
inc
pop
xor
loope
test
sbb
fdivrs
int
stc
sbb
jmp
dec
cmp
jl
jb
adc
nop
daa
data16
and
xchg
sub
fcmovne
arpl
cs
orb
mov
out
xchg
es
ret
fistl
sub
adc
stc
stos
xor
adcb
xchg
mov
flds
push
movsb
sub
cmp
jg
pop
mov
cli
xchg
dec
rcr
jbe
insb
sbb
push
mov
sbb
inc
lret
sti
bound
xchg
sbb
out
dec
mov
sub
outsb
jbe
mov
rcll
adc
dec
inc
scas
in
and
shrl
add
mov
in
push
sub
test
inc
pop
sub
nop
mull
sub
sbbl
add
add
pushf
mov
push
mov
mov
cmp
inc
fnsave
ret
pop
xor
loope
sub
mov
movsl
call
insb
clc
sbb
in
mov
loopne
or
popf
pop
lock
xor
push
and
xchg
sub
fcmove
fs
mov
enter
pop
jmp
or
outsb
shll
mov
shll
ret
arpl
test
lret
cld
xchg
mov
mov
sbb
jno
push
mov
fdivl
jle
pop
mov
sti
xchg
dec
rcr
jbe
imul
pushf
and
xchg
push
mov
sbb
inc
leave
cmp
cli
popa
je
xchg
sbb
dec
mov
sub
insl
jbe
lahf
pop
mov
cmp
xchg
sub
pop
iret
data16
mov
inc
lods
in
test
shrw
add
xor
sub
orl
cmp
pop
sub
mulb
daa
mov
loope
dec
test
jp
imul
int
xchg
mov
rclb
movsl
cmp
inc
fidivs
std
ret
pop
das
xchg
cld
xchg
push
loope
sub
mov
movsb
call
imul
mov
lea
mov
fbstp
pushf
pop
lock
xchg
sub
push
and
xchg
sub
fxch
or
in
sbbl
push
mov
out
xchg
sub
shlb
push
loope
ret
fs
test
dec
loopne
leave
sbbb
test
mov
mov
sbb
jo
push
mov
ret
fnsave
rcrl
cld
xchg
dec
rcr
jbe
push
mov
and
xchg
push
mov
sbb
aas
enter
pusha
jne
xchg
sbb
dec
mov
sub
insb
jbe
sahf
push
mov
cmp
shlb
adc
test
shrl
decl
xor
sub
orb
cmp
pop
sub
cmc
data16
es
loope
inc
test
jns
imul
int3
push
xchg
mov
rclb
movsl
cmp
inc
fidivs
std
ret
pop
das
xchg
cld
xchg
push
loope
and
mov
movsb
call
push
sbb
or
push
dec
leave
test
add
mov
mov
test
xchg
or
adc
or
int3
xchg
pop
push
arpl
inc
adc
test
mov
mov
push
lahf
test
scas
jge
push
ljmp
das
lret
jmp
in
sti
iret
mov
cmpsl
xor
adc
pop
addr16
movsl
iret
and
jno
into
xor
push
fidivrl
jns
sbb
test
jbe
inc
mov
inc
pop
and
sbb
push
xor
lea
pop
pop
pop
fnstenv
jae
jle
jecxz
xchg
outsl
mov
rolb
inc
sbb
dec
xchg
adc
lcall
pop
out
mov
mov
inc
fists
mov
scas
sub
or
sbb
xor
cwtl
push
and
cld
and
inc
xchg
mov
mov
adcl
cltd
ret
aaa
inc
mov
in
xor
inc
xchg
xchg
sub
pop
lcall
xchg
call
dec
loopne
loop
insl
xor
aam
mov
push
jne
aad
inc
push
mov
sub
leave
fidivl
lret
and
add
jp
rcrb
test
mov
push
sub
push
mov
dec
daa
pop
xor
scas
jno
pushf
push
lcall
jbe
push
jb
dec
inc
push
hlt
loopne
int3
cwtl
outsb
test
pop
adc
cmp
xchg
and
sub
adc
mov
xor
into
lret
and
and
subb
ja
scas
das
imul
lahf
push
aam
push
lret
fdivl
into
scas
out
push
jns
inc
fstl
arpl
es
xor
in
and
add
sbbl
sahf
test
or
mov
scas
stc
xchg
les
outsb
xchg
leave
and
dec
lock
insb
sbb
mov
enter
decl
and
pop
mov
adc
xchg
lahf
movsb
fstpl
push
call
testl
or
inc
jo
js
adc
mov
or
icebp
pop
stos
xchg
jns
jno
jb
test
jl,pt
sub
jl
xchg
add
jge
sarb
adc
loop
add
cmp
xchg
call
imul
out
xor
data16
xchg
sbbl
push
jl
jns
add
arpl
mov
adc
lcall
inc
fwait
inc
mov
das
inc
inc
dec
add
stos
xchg
mov
movsb
rorb
mov
je
add
fiaddl
lock
push
push
outsb
push
sub
in
fdivrl
sbb
push
sub
ja
mov
aad
int
cmp
into
inc
fnstcw
cmp
jb
test
mov
cmp
push
add
mov
mov
loope
fisubl
out
in
jmp
and
cltd
je
xlat
into
xorl
int
scas
fdivrl
test
mov
mov
out
mov
xchg
bound
jge
jp
sbb
pop
lds
cmp
and
fxch
xor
cmp
int
jle
sbb
repz
xchg
and
andl
jno
cmpsb
mov
pop
push
popa
xchg
clc
push
or
inc
adc
inc
vpandn
popa
loope
and
into
int3
lods
cmp
push
lods
fcoms
cmpsb
sub
pop
add
dec
mov
push
fmuls
out
scas
lods
push
push
adc
mov
mov
pop
add
adc
xor
inc
mov
fwait
data16
cmp
lods
or
shlb
outsb
xchg
jnp
fsubrp
jge
hlt
in
fs
mov
xlat
xchg
out
fbld
sbb
loope
arpl
lds
jge
push
and
js
fbld
add
pop
stc
js
scas
bound
xchg
insl
xor
sbb
clc
mov
outsb
cmp
out
add
sbb
cmp
push
mov
jl
arpl
cmpsl
pop
mov
sub
mov
add
jne
push
negl
jo
or
sbb
add
pop
dec
xchg
jge
fs
and
or
xchg
test
sub
insb
mov
cwtl
imul
and
dec
sti
popf
xchg
insl
mull
add
and
nop
arpl
and
rorb
dec
dec
mov
je
push
stos
mov
adc
je
popa
cli
mov
xor
adc
mov
lods
popa
dec
mov
dec
xlat
sub
insb
sbb
cmpsl
inc
mov
lret
sbb
les
sahf
arpl
cmp
popl
mov
sub
in
dec
or
cmc
or
fincstp
pop
xor
or
push
push
das
js
stos
jb
mov
jnp
movsw
out
adc
in
mov
xchg
daa
or
aam
sub
jecxz
ds
xlat
adc
jecxz
aas
test
jns
push
adc
aaa
out
test
enter
sub
lds
aaa
xchg
cs
out
or
outsb
jp
pop
dec
and
test
gs
movsl
ucomiss
fdiv
jo
getsec
jecxz
push
dec
sar
loope
sub
int
sti
xor
les
js
or
cmp
xchg
mov
jmp
pop
push
int3
fbstp
in
cwtl
aaa
lret
push
addr16
push
jbe
lods
stc
loopne
push
or
hlt
jmp
mov
cmp
test
push
dec
ja
jae
xchg
in
adc
adc
add
cli
arpl
subl
out
dec
test
cmc
fs
dec
fwait
mov
xor
ds
mov
dec
dec
aaa
xchg
stc
or
mov
adcl
mov
loop
rcrb
xchg
pop
pusha
hlt
mov
pop
fwait
cmp
ss
ds
out
leave
cmp
and
in
adc
pop
addr16
ficompl
inc
dec
xchg
js
pop
lods
inc
add
jle
jnp
in
cmpl
int3
adc
inc
sub
pop
cld
call
pop
add
dec
add
jne
push
mov
incb
enter
je
pushl
pop
cmp
outsb
fwait
std
sbb
xlat
push
inc
jecxz
out
jmp
push
ds
mov
mov
dec
ja
adc
aaa
and
fwait
jne
test
repnz
mov
mov
dec
mov
lds
push
arpl
icebp
rcr
lock
dec
pop
push
mov
icebp
jle
mov
push
ret
popa
pop
cmp
stos
loope
or
xor
and
es
jge
dec
mov
ret
jne
fcmovb
dec
sbb
xor
stos
dec
gs
scas
sbb
xchg
enter
lods
xlat
jg
push
add
pop
add
push
jmp
pop
in
je
inc
mov
lcall
gs
sbb
dec
fs
mov
lds
or
ljmp
add
fwait
and
int
pop
mov
pop
in
iret
aad
inc
dec
aas
dec
xchg
sbb
hlt
test
jmp
cmp
and
cmp
or
test
cs
cmpsb
mov
pop
or
xor
push
and
hlt
or
in
jl
xchg
xbegin
call
xor
push
cld
jmp
mov
jl
pop
or
in
push
mov
push
rcll
push
jo
loope
jnp
insb
mov
and
fidivs
push
pop
sahf
mov
inc
scas
mov
pop
es
gs
inc
pushf
xchg
add
ror
push
push
shr
iret
repz
or
sub
in
das
jnp
cmp
push
mov
pop
inc
dec
stc
fldl2t
stos
adc
into
leave
jl
xchg
sti
fistps
inc
scas
mov
mov
jno
lret
mov
outsl
xchg
lret
mov
insl
xchg
int
mov
sub
shll
sub
adc
jb
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
jl
je
jne
push
jge
add
outsb
xor
lcall
inc
icebp
mov
jl
sub
pop
clc
lahf
lds
cmc
jae
xor
inc
mov
cmp
xchg
and
into
xchg
lret
data16
mov
