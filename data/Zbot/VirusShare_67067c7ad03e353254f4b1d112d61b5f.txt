push
mov
sub
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
sub
mov
mov
pusha
call
add
push
mov
sub
push
push
lea
push
lea
push
addl
lea
push
pushl
subl
pop
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
mov
mov
push
mov
addl
pop
push
pop
mov
xor
push
popl
add
and
addl
clc
adc
pushl
lea
lea
pop
repz
sub
cmp
jne
mov
pop
ret
pop
push
mov
sub
push
push
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
add
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
out
inc
mov
and
sub
lods
mov
mov
shl
lea
mov
mov
add
stos
mov
push
pop
cmp
je
sub
sub
je
sub
mov
add
mov
cmp
je
mov
sub
jne
lea
jge
popf
pushl
pop
dec
call
jmp
add
bound
in
sub
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
in
sub
push
pushl
push
push
push
call
add
pop
lea
pop
mov
ret
push
mov
sub
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
in
sub
push
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
push
mov
sub
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
push
mov
sub
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
in
sub
push
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
push
mov
sub
push
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
push
mov
sub
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
push
push
push
push
call
add
pop
lea
pop
mov
ret
add
in
sub
push
push
push
push
call
add
pop
lea
pop
mov
ret
fsubl
add
mov
and
add
and
add
and
add
and
add
add
and
add
and
add
add
and
add
add
nop
and
add
and
add
and
add
and
add
add
add
add
fisubl
add
xchg
and
add
and
add
add
push
and
add
add
mov
add
xor
add
xchg
add
sbb
add
and
add
add
add
add
and
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
add
and
add
add
test
add
inc
and
add
add
add
and
add
and
add
and
add
and
add
and
add
add
and
add
and
add
add
and
add
add
nop
and
add
and
add
and
add
and
add
add
add
add
fisubl
add
xchg
and
add
and
add
add
push
and
add
add
mov
add
xor
add
xchg
add
sbb
add
and
add
add
add
add
and
add
and
add
and
add
and
add
add
add
popa
je
inc
jbe
outsb
je
add
add
fs
imul
add
mov
jo
outsb
fs
push
add
add
je
jne
jb
outsb
je
push
add
imul
je
imul
push
add
roll
dec
gs
jo
jb
add
aad
inc
gs
gs
inc
imul
jb
popa
je
inc
jbe
outsb
je
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
imul
jb
je
arpl
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
outsb
fs
je
insl
push
add
add
je
jb
jbe
push
jns
gs
add
push
gs
insl
gs
push
add
dec
add
insb
outsb
inc
add
je
push
gs
popa
jae
inc
jb
outsl
jb
add
gs
jb
arpl
jae
gs
jo
add
add
insb
jae
gs
popa
insb
jne
add
popa
je
inc
jbe
outsb
je
add
push
add
je
jb
arpl
jae
gs
imul
gs
outsl
insb
jne
gs
popa
je
dec
popa
insl
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
or
inc
push
gs
outsl
jb
inc
popa
je
jae
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
insl
push
insb
jne
dec
imul
add
add
insl
push
insb
jne
dec
imul
add
add
insl
push
insb
jne
dec
imul
add
add
je
jo
jo
outsb
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
je
jo
jo
outsb
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
je
jo
jo
outsb
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
inc
inc
inc
push
push
cs
insb
add
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
add
jo
jb
push
push
outsl
push
inc
popa
je
add
imul
jae
inc
outsl
jb
push
dec
add
insl
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
push
inc
inc
dec
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
popa
add
test
add
cmp
add
loopne
add
mov
add
push
inc
add
push
add
add
add
add
add
add
add
add
add
add
and
add
add
andb
add
push
sub
sub
xchg
xchg
xchg
add
scas
lods
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
cltd
pop
xchg
xchg
xchg
or
jg
jnp
jp
lods
lods
lods
add
cmpsb
push
mov
mov
mov
les
int3
int
rcl
in
rcl
shl
iret
iret
shl
int
int
leave
leave
repz
in
mov
mov
lods
lods
stos
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
lahf
add
mov
mov
lret
lret
not
rcl
cld
xlat
fdivr
fcom
fcom
xlat
aad
dec
iret
sar
into
int
aam
aam
rcl
sar
ret
ret
std
mov
mov
scas
iret
movsb
movsb
mov
dec
cs
add
add
add
add
add
add
add
add
add
add
lods
lods
lods
add
lods
scas
sbb
mov
jnp
mov
sar
vpaddd
lret
lret
call
rcl
aad
fcom
fcom
xlat
call
aad
into
int
dec
into
int3
call
aam
dec
int3
int3
inc
rol
mov
mov
scas
std
cmpsl
cmpsb
cmpsb
ljmp
pop
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
dec
add
push
add
push
or
or
sbb
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
leave
dec
int3
int
rcl
sar
fdivr
xlat
call
aam
dec
int
dec
lret
lret
dec
into
int
mov
mov
mov
mov
cmpsl
test
jmp
fwait
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
bound
fs
sbb
push
push
movntps
cmp
cmp
cmp
and
and
pop
push
push
pop
add
add
add
add
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
mov
call
aam
aam
aad
ror
sar
mov
mov
mov
scas
lods
lods
jmp
pushf
pushf
xchg
xchg
xchg
lcall
test
pop
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
jo
jg
jl
jge
jge
jb
jb
bound
mov
cmp
inc
mov
jo
jo
bound
pusha
inc
inc
inc
xor
add
add
add
add
movsl
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
lret
dec
leave
lret
enter
mov
mov
scas
scas
scas
jmp
lcall
xchg
xchg
xchg
cwtl
xchg
xchg
lcall
lahf
cmp
or
add
add
add
add
add
add
add
add
add
add
add
outsl
outsl
jo
pop
pop
pop
or
jl
nop
lea
incb
jl
idivb
jmp
outsl
outsl
out
data16
data16
ret
jge
jp
js
arpl
inc
inc
inc
cmp
pop
pop
sbb
adc
or
lods
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
cmpsb
cmpsb
lcall
incl
test
xchg
xchg
xchg
sahf
mov
mov
mov
js
jp
cs
add
add
add
add
add
add
add
add
add
add
mov
push
push
cmpl
lahf
cltd
lahf
in
mov
mov
addb
decb
mov
jge
jle
jb
jb
je
jae
jg
jge
test
jp
addr16
cmp
and
and
jg
jge
lcall
shrb
lods
lods
sti
lods
lods
stos
stos
stos
lods
test
test
std
fwait
lcall
xchg
jle
js
jns
jl
jp
mov
xchg
movsb
movsb
movsl
scas
mov
sti
mov
mov
mov
mov
mov
lods
lods
stos
test
sbb
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
nop
xchg
incl
test
std
xchg
xchg
xchg
std
xchg
xchg
cwtl
stc
xchg
xchg
xchg
in
mov
or
mov
mov
or
rdmsr
inc
inc
inc
dec
insl
insb
insl
jl
xchg
leave
lcall
out
lcall
std
mov
mov
mov
mov
nop
lcall
test
ljmp
mov
std
mov
mov
mov
std
mov
mov
movsl
mov
jp
scas
test
add
pop
adc
test
mov
incl
test
decb
xchg
xchg
sahf
pushf
popf
std
movsb
mov
mov
in
xchg
in
test
push
jne
femms
dec
add
add
or
or
sub
daa
push
dec
dec
dec
data16
jb
mov
xchg
rclb
xchg
xchg
std
lea
call
lahf
mov
ljmp
lods
pushl
mov
test
std
ret
mov
mov
ljmp
lahf
adc
add
add
pop
pop
adc
mov
jmp
pushf
cltd
fwait
decl
mov
call
nop
xchg
xchg
xchg
pushf
sahf
pushf
mov
test
mov
cwtl
cwtl
fstpt
movsl
push
push
push
outsl
dec
dec
dec
pushaw
bound
jb
je
jp
jg
test
int
xchg
xchg
in
xchg
xchg
testl
mov
jmp
mov
mov
pop
mov
aaa
jge
mov
js
mov
movsb
mov
mov
mov
lods
stos
lods
mov
mov
add
mov
add
pusha
adc
mov
jmp
lea
call
xchg
xchg
call
xchg
cwtl
fwait
cltd
fwait
lcall
mov
mov
lcall
xchg
xchg
les
xchg
cltd
in
xchg
xchg
out
lea
stc
xchg
test
std
xchg
jb
fwait
addr16
lahf
pop
cmp
dec
cmp
inc
jnp
mov
jp
mov
je
mov
outsl
ljmp
adc
stos
or
or
pushl
mov
mov
pushf
mov
mov
add
shlb
adc
mov
lcall
xchg
xchg
call
cltd
lcall
mov
pushf
lcall
xchg
xchg
decl
xchg
xchg
call
cwtl
cltd
cld
cltd
xchg
pushf
stc
sahf
lcall
popf
mov
xchg
imul
xchg
dec
jp
lcall
pushf
pop
addr16
lahf
push
jmp
adc
test
ljmpw
pcmpgtd
scas
adc
mov
imul
mov
insl
mov
lcall
lods
scas
lods
scas
movsb
mov
movsb
add
add
add
add
add
pop
pop
adc
mov
ljmp
popf
call
pushf
lcall
movsb
movsl
jmp
mov
cwtl
decl
mov
decl
jbe
cltd
jo
cltd
arpl
call
sub
decl
adc
or
xchg
add
pop
lcall
pop
pop
ljmp
sbb
mov
insl
pushl
sbb
jb
mov
and
mov
aas
test
ret
mov
scas
lods
mov
lahf
mov
movsb
add
pop
pop
adc
lods
mov
shll
lcall
movsl
mov
jmp
test
jmp
lcall
mov
decl
imul
sub
mov
incl
or
addl
decl
add
nop
add
xchg
add
fwait
add
lahf
add
or
mov
outsl
pushl
sub
mov
sub
ret
sub
inc
sub
inc
das
cmp
leave
inc
mov
mov
cld
scas
mov
lret
movsl
dec
mov
movsl
movsb
add
push
push
adc
test
mov
sahf
fwait
lahf
jmp
stos
stos
ljmp
lods
stos
pushl
scas
scas
jmp
jb
incl
push
push
incl
pop
push
incl
add
addb
incl
add
mov
push
call
add
lcall
jmp
adc
mov
cmp
dec
cmp
dec
cmp
call
cmp
call
cmp
dec
mov
std
mov
mov
movsl
movsl
movsl
push
mov
mov
add
add
add
mov
dec
dec
adc
mov
mov
mov
cmpsb
cmpsl
ljmp
mov
pushl
mov
mov
mov
lods
stos
stos
lcall
and
push
decl
xorps
mov
push
incl
add
mov
push
decl
push
call
add
mov
add
lods
add
pushl
cmp
dec
inc
call
inc
call
dec
fmuls
fmuls
fimull
fmull
fistl
call
xchg
std
mov
mov
movsl
mov
sahf
or
add
add
add
add
dec
dec
adc
jp
movsl
sahf
mov
lcall
test
mov
mov
mov
mov
mov
mov
mov
mov
scas
mov
movsb
mov
decl
pusha
call
adc
decl
or
mov
push
decl
add
popf
add
mov
add
test
pop
gs
and
nop
call
push
xchg
call
push
lcall
push
popf
jmp
pop
pushf
fists
jmp
pop
lahf
jmp
pop
mov
fadds
mov
test
sahf
sahf
mov
add
inc
inc
adc
ja
sahf
lcall
sahf
cltd
popf
ljmp
mov
mov
mov
mov
mov
mov
ljmp
inc
jbe
nop
pop
call
and
xchg
pop
call
or
call
add
cltd
add
mov
add
lods
add
mov
fs
mov
xor
fldenv
fbld
fisubs
jmp
cmpsb
jmp
cmpsb
jmp
cmpsw
ljmp
call
test
mov
cmpsl
test
mov
lahf
mov
add
add
add
inc
aas
adc
jp
xchg
cwtl
call
lahf
pushf
lahf
ljmp
mov
pushl
mov
mov
mov
mov
jle
xchg
sub
lcall
call
push
call
add
lcall
ljmp
add
mov
pushl
adc
rolb
fsubrl
jmp
jo
jmp
jno
call
je
in
jae
in
jne
out
jbe
in
jbe
in
je
jmp
mov
mov
test
lcall
sahf
add
jle
cmp
cmp
js
mov
sahf
pushf
lcall
mov
mov
mov
mov
mov
movsl
lods
lcall
jo
mov
cmp
xor
fwait
sbb
call
pop
jmp
add
test
add
mov
data16
mov
sbb
fsts
jmp
ja
jmp
jle
jmp
mov
in
cmpb
lock
push
cmpl
ljmp
mov
test
cmpsl
pushf
sahf
popf
daa
sahf
mov
lahf
add
add
add
add
cmp
pop
pop
pop
jne
jg
out
test
xchg
xchg
xchg
pushl
mov
mov
inc
rol
ret
inc
mov
jmp
cmp
movsb
inc
jl
mov
ss
lcall
lcall
add
stos
add
scas
add
mov
data16
mov
add
iret
daa
cmp
movsl
jmp
mov
repnz
sar
pop
push
pop
push
xchg
push
nop
push
xchg
push
ret
out
mov
inc
ret
lods
stos
mov
sahf
popf
xor
sahf
add
add
add
cmp
push
inc
dec
inc
jb
pop
dec
in
push
decl
mov
mov
mov
sar
ret
ret
ret
ret
mov
jle
lcall
dec
cmp
dec
test
movsb
xor
pop
lcall
add
add
lods
add
mov
arpl
mov
add
leave
push
insl
call
xor
mov
out
xchg
ret
push
fwait
push
fwait
push
fwait
push
lcall
stc
pushf
int3
sti
sahf
int
cld
popf
into
cli
cwtl
lret
xchg
sar
mov
dec
mov
mov
sahf
mov
xchg
add
add
add
cs
cmp
jecxz
pop
popa
decl
mov
mov
mov
sar
ret
inc
mov
mov
sar
mov
ljmp
dec
mov
mov
push
pop
lcall
add
stos
add
mov
arpl
mov
add
enter
rorl
jbe
loopne
xchg
out
lea
push
cmpsb
into
push
movsb
into
clc
cmpsb
iret
sti
cmpsl
sar
sti
cmpsl
sar
sti
test
std
stos
iret
stos
sar
cld
test
jmp
mov
int3
std
mov
mov
sahf
sahf
mov
add
lcall
xor
xor
sub
or
inc
bound
push
xlat
jne
jno
mov
sarl
mov
ret
ret
ret
vpaddd
enter
ret
mov
cmpsb
jmp
push
mov
lods
dec
xchg
mov
add
movsl
add
lods
add
mov
fs
mov
add
into
add
add
adc
in
pop
cmpsb
push
sahf
leave
cld
lods
sar
sti
mov
sti
mov
cld
mov
std
mov
mov
mov
cld
mov
mov
mov
push
movsb
jmp
mov
call
lret
mov
mov
mov
xchg
xchg
or
add
add
xor
add
dec
dec
outsl
outsl
jo
xchg
cltd
cltd
rol
fcom
xlat
jmp
fcom
test
int
dec
lret
lret
lret
leave
dec
lret
enter
mov
mov
scas
push
mov
stos
jge,pt
sahf
or
pop
ljmp
add
mov
add
roll
outsb
call
add
filds
jne
jmp
jae
cld
scas
aad
std
mov
mov
std
mov
xlat
cld
mov
xlat
std
mov
xlat
stc
mov
jmp
mov
call
lret
mov
mov
xchg
or
add
add
xor
add
add
pop
or
leave
enter
loop
out
out
in
out
loope
loop
fstp
fsub
fcmovnu
fcomi
xlat
cli
aam
xlat
std
into
ror
mov
push
ljmp
sub
mov
add
mov
arpl
mov
add
lret
call
add
fldl
jbe
in
ja
out
xor
cli
mov
loope
inc
loopne
std
inc
std
dec
inc
fdivrp
dec
loopne
dec
dec
loope
cld
mov
enter
sar
mov
mov
xchg
adc
add
add
std
incl
incl
std
std
add
cmc
cmc
or
out
jmp
in
out
in
sub
in
in
dec
call
jmp
call
aad
jmp
mov
xchg
test
jns
mov
add
ljmp
add
mov
add
int3
add
fadds
jb
filds
js
ljmp
cld
mov
loop
std
lret
loop
dec
in
dec
in
dec
loop
dec
jecxz
dec
loope
call
loop
std
shl
shl
call
in
sti
ret
fdivr
out
mov
xlat
inc
test
mov
xchg
xchg
add
add
add
incl
incl
idiv
testb
repnz
add
hlt
repz
out
repnz
pop
in
repnz
cmp
in
out
pop
loop
lds
sti
sahf
and
pop
jmp
add
mov
gs
mov
add
roll
jno
fiaddl
jne
in
jnp
in
push
jl
negb
cli
mov
std
iret
in
cld
shl
call
jmp
call
in
aad
call
jmp
std
fucomi
dec
loopne
hlt
ret
in
fcos
lret
rep
test
fwait
xchg
xchg
xchg
and
xchg
xchg
add
cld
add
std
testl
repz
or
aad
xor
mov
xchg
negb
add
cmpsb
add
scas
add
mov
add
leave
add
roll
jb
faddl
jbe
out
js
in
sbb
cld
ret
xlat
jmp
fldlg2
std
fldpi
fucomi
std
fucomi
fucomi
fsubr
jmp
in
fucomip
fsubrp
cld
shl
push
ret
out
rcl
iret
clc
lods
stos
stos
lods
xchg
xchg
xchg
outsb
outsl
jo
xchg
xchg
xchg
add
loop
add
mov
xchg
lods
jl
repnz
jmp
add
mov
add
int
insl
call
add
filds
jne
jmp
sub
shr
fcomip
std
fsubr
fucomi
fucomi
call
jmp
cld
shl
sti
shl
cld
shl
stc
int
stc
int3
fdivr
cmc
ret
out
mov
fcomp
fdivr
mov
mov
cltd
cltd
fwait
cmp
fwait
add
add
leave
adc
scas
mov
lcall
add
mov
arpl
mov
add
iret
add
fadds
jae
loopne
jns
call
aaa
xchg
sti
xchg
cld
lret
sti
lret
loope
sti
test
aad
hlt
mov
into
push
mov
int
jmp
mov
iret
std
jmp
ljmp
in
mov
mov
xchg
add
add
add
lret
add
rol
mov
cmpsl
loopne
ss
mov
add
mov
addr16
mov
add
dec
push
jb
rorl
je
fisttpl
js
loopne
cmp
dec
xchg
call
scas
lret
jmp
mov
std
loope
ret
cld
loopne
ret
mov
neg
mov
enter
int
fmul
into
fsubp
into
shl
fcmovnb
call
in
test
in
out
popf
jmp
leave
lret
push
lods
lods
stos
adc
test
test
sahf
mov
ret
ret
rolb
ret
ret
pop
mov
stos
aam
dec
cmp
sbb
cmpsb
sbb
lods
and
mov
js
mov
inc
xchg
ret
stc
lret
gs
test
mov
out
mov
rcl
mov
int
rol
int
aad
shll
fcom
jg
fcmovnu
jb
fnstsw
gs
in
out
jmp
xor
div
mulb
lock
fcmovnu
or
mov
int3
add
add
add
rolb
mov
stos
xchg
lock
xchg
ljmp
mov
sarb
test
mov
pushf
lret
mov
lret
ror
iret
addr16
rclb
rcl
dec
aad
xlat
inc
aam
aam
aam
fldenv
xlat
fstp
sbb
adc
jecxz
push
loopne
jecxz
call
icebp
out
add
sti
testb
sti
add
std
std
add
std
add
mov
mov
mov
lods
scas
xchg
mov
mov
mov
mov
ret
mov
ror
xor
int3
lret
daa
int
into
and
aam
sbb
rclb
rcl
rorb
rcr
aam
rcr
fadds
fcmovnu
add
add
in
add
in
jmp
leave
xlat
add
incl
mov
mov
add
ret
ret
sub
mov
mov
push
ret
or
enter
enter
leave
add
aam
add
fcom
add
xlat
aad
fcom
add
fadds
fcmovnbe
loopne
aad
add
loop
add
fsubp
add
out
add
repnz
add
incb
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
les
mov
mov
mov
stos
test
test
pop
add
add
add
add
add
add
mov
scas
adc
mov
aam
rcl
jmp
aad
cmc
aam
sar
into
into
into
cli
lret
lret
lret
stc
lret
lret
mov
mov
iret
lods
stos
lods
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
addb
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
sarb
iret
iret
into
aad
call
xlat
xlat
dec
iret
iret
dec
int
dec
lret
mov
mov
cld
stos
stos
lods
icebp
cltd
cltd
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
jne
je
je
gs
inc
inc
dec
cmp
sub
sub
aaa
xor
sub
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
dec
int3
lret
call
rcl
call
rcl
dec
int3
lret
inc
mov
sarb
ljmp
lahf
sahf
xchg
xchg
xchg
jmp
jo
xchg
push
adc
add
add
add
add
add
addl
test
imul
pop
pop
pop
movsb
push
push
push
stos
push
push
push
pop
pop
cmp
cmp
pop
jo
jno
mov
scas
pop
mov
mov
mov
mov
sar
mov
mov
mov
jmp
lcall
xchg
xchg
xchg
fwait
cltd
fwait
out
addb
adc
adc
add
add
add
add
add
pop
lcall
pop
pushf
xchg
cltd
fcoml
addb
jnp
jl
js
jp
jnp
jp
jns
jns
je
jb
push
push
push
cmp
jae
popf
sahf
pushf
mov
scas
lods
repz
scas
scas
sti
scas
scas
scas
std
test
test
call
xchg
call
mov
lods
jmp
scas
scas
leave
cmpsb
movsl
movsb
cltd
jae
jb
adc
adc
add
add
add
add
outsl
outsb
outsb
pop
xchg
mov
loop
cwtl
sahf
incl
mov
sti
xchg
xchg
xchg
lock
xchg
nop
fimuls
mov
jp
and
inc
inc
inc
inc
dec
jo
outsb
orl
cwtl
repnz
xchg
xchg
std
mov
call
popf
ljmp
scas
std
mov
scas
mov
xlat
cmpsb
movsb
cmpsl
pop
cmpb
pop
popa
popa
or
lods
mov
cmpsb
mov
mov
mov
lcall
lahf
sahf
sti
lahf
mov
lcall
push
push
jo
pop
pop
outsl
imul
jg
subl
nop
xchg
lock
mov
lcall
mov
pushl
pop
mov
mov
mov
mov
out
lods
stos
insl
test
add
add
add
add
pusha
or
mov
in
mov
xchg
call
xchg
cwtl
call
cwtl
fwait
fwait
popf
fwait
fwait
lahf
popf
cli
xchg
xchg
cltd
jmp
xchg
lea
jecxz
orb
xchg
imul
pushf
dec
jl
mov
aaa
jbe
scas
sub
mov
insl
ljmp
sbb
pop
mov
scas
scas
jle
movsl
movsl
push
popa
popa
pusha
or
mov
in
mov
xchg
lcall
mov
lahf
call
mov
lea
mov
xchg
jno
cld
xchg
pusha
test
xchg
dec
jp
nop
cmp
xchg
daa
imul
cwtl
adc
mov
adc
insl
pushl
sbb
mov
and
mov
stos
mov
scas
scas
scas
xchg
sahf
popf
popf
adc
add
add
popa
pusha
pop
or
mov
stos
mov
lahf
jmp
test
cmpsl
lcall
pop
jns
mov
imul
mov
pop
incl
or
mov
push
call
add
popf
add
cmpsl
or
pushl
sub
inc
sub
jge
enter
lret
xor
cwtl
inc
stos
mov
mov
mov
cmpsl
test
add
add
add
pop
popa
pusha
or
cmpsb
test
ljmp
scas
mov
mov
mov
mov
mov
movsl
xchg
mov
decl
push
pop
incl
push
push
decl
add
xchg
add
sahf
add
cmpsb
add
mov
insb
inc
cmp
dec
inc
mov
rolb
call
inc
nop
fimull
call
bound
stc
mov
mov
mov
std
incb
add
add
popa
pusha
popa
or
popf
mov
ljmp
mov
mov
mov
mov
mov
jl
nop
sbb
decl
or
mov
push
call
add
cmpsb
add
lods
add
mov
dec
xchg
fcomps
ficompl
ficomps
loope
mov
fisubrs
dec
cmpsb
mov
ret
cmpsl
xor
add
add
dec
pop
jge
jnp
pushf
xchg
cwtl
jecxz
lahf
mov
pushl
mov
mov
lcall
sub
insl
call
subps
xchg
add
popf
add
cmpsl
add
scas
add
mov
xor
jmp
insl
test
in
stos
jmp
jb
in
jno
jmp
test
std
mov
test
addl
dec
dec
pop
outsl
insl
imul
test
cltd
lcall
mov
mov
mov
jmp
cmp
jmp
sub
cwtl
or
lcall
ljmp
gs
or
inc
xchg
jmp
jp
ljmp
push
xchg
cmc
xchg
fldt
mov
push
lcall
add
sub
push
push
dec
pop
gs
loopne
mov
mov
mov
mov
xchg
test
sub
cltd
pop
pop
jmp
add
mov
gs
mov
push
ja
loope
mov
push
xchg
push
xchg
xchg
stc
lcall
negb
vcmpss
popa
mov
add
add
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
ret
inc
ret
mov
cmpsl
jmp
dec
cmp
and
mov
add
mov
fs
mov
add
fldenv
cmp
mulb
stc
stos
iret
sti
test
sar
std
lods
sar
sti
cmpsl
int
call
rol
stos
stos
stos
jne
pushf
sahf
or
add
add
dec
dec
push
aaa
jae
jb
stos
stos
stos
ror
int3
int
int3
int
cmc
lret
lret
lret
sti
leave
lret
enter
mov
mov
stos
bound
jmp
add
mov
arpl
ret
dec
add
fildl
xchg
clc
xchg
mov
cld
mov
fdivr
std
mov
xlat
mov
sar
ljmp
repz
lods
mov
add
add
add
add
pop
or
rcl
dec
loopne
loop
fsubp
fistps
fcmovnu
fcom
out
mov
data16
test
jae
cmpsb
or
scas
add
mov
add
xlat
add
loop
jnp
repnz
mov
sti
ret
loope
inc
loope
inc
std
loopne
dec
std
leave
loopne
cld
out
mov
lret
mov
xchg
pushf
popf
pushf
sbb
add
add
incl
std
add
ljmp
in
in
jmp
jmp
in
xchg
mov
mov
mov
add
mov
arpl
roll
dec
add
fildl
jbe
jmp
outsb
mov
cld
ret
fdivrp
sti
iret
out
call
out
call
in
call
out
std
out
call
jmp
push
fcos
fcmovne
sar
mov
mov
and
add
add
std
add
incl
cld
std
pop
aam
aam
mov
pop
mov
sahf
or
stos
add
mov
gs
add
roll
jo
fiadds
jne
in
and
cld
shl
fldpi
fucompp
cld
xlat
jmp
std
fsub
cld
std
shl
push
jmp
rcl
sti
mov
sahf
sahf
das
add
add
int3
int
or
bound
stos
add
mov
add
aad
jno
loop
js
out
xor
cli
int3
loopne
stc
lret
loopne
cmc
repz
icebp
ret
out
ret
out
in
aam
jmp
shl
in
fsubrp
leave
mov
das
incb
aad
push
mov
jb
or
insl
inc
sbb
lret
and
sub
fwait
clc
loop
mov
out
in
lret
jmp
fidivrs
lret
leave
faddp
sarb
in
fcompl
in
call
rorb
mov
add
stos
lods
stos
add
xchg
movsb
les
xchg
mov
xchg
fidivrl
andb
into
mov
les
rol
lret
insl
aam
into
pop
aam
rorl
cmp
loopne
das
in
fsubl
jecxz
repnz
in
jmp
fcmovnu
faddl
std
add
add
add
std
incb
mov
mov
outsb
scas
mov
lods
mov
push
mov
mov
xor
leave
enter
rcl
pop
rol
adc
rcl
or
loope
or
into
into
add
std
std
incl
std
incl
lcall
pinsrw
or
int3
int3
int3
add
std
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
lcall
daa
rol
mov
enter
mov
mov
scas
scas
insb
stos
stos
lods
xor
jae
add
add
add
add
add
add
add
add
add
add
add
add
stos
lods
lods
add
mov
enter
sar
aam
aad
rcl
sar
iret
int
std
mov
stc
mov
cmpsl
test
cmpb
push
push
pop
add
add
add
add
add
add
add
add
jae
jb
push
inc
inc
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
into
int3
call
aam
dec
int
inc
mov
mov
scas
lods
jmp
mov
push
add
add
add
add
jae
jae
xchg
aad
outsb
jo
popa
bound
data16
outsb
outsl
outsl
jb
popa
bound
pop
pusha
pusha
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
xchg
lcall
cwtl
cltd
lds
jb
es
es
add
add
add
add
jb
jae
pushf
xchg
pushf
mov
test
mov
xchg
or
addl
dec
push
inc
mov
pushf
into
mov
lahf
mov
decb
mov
fwait
pushf
popf
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
push
add
add
xorb
lods
movsb
test
stos
mov
mov
mov
xchg
cld
sahf
sahf
pushf
cmc
cwtl
lcall
push
push
push
imul
jg
lea
xchg
notl
mov
pushl
push
mov
stos
mov
stos
lods
scas
push
stos
stos
lods
add
add
add
test
test
xchg
xchg
xchg
lcall
fwait
cltd
lcall
fwait
cltd
std
xchg
xchg
xchg
out
xchg
mov
loope
jbe
out
nop
arpl
std
lcall
ljmp
and
mov
outsb
pushl
pushf
scas
lock
mov
imul
int3
add
test
pop
scas
movsl
stos
test
popf
sahf
popf
jmp
mov
xchg
decl
jbe
xchg
inc
jae
lea
imul
xchg
adc
xchg
or
mov
push
insl
pushl
es
ret
inc
aas
xchg
rcrl
subl
je
push
mov
movsb
test
pushl
mov
lcall
sub
adc
mov
push
decl
add
xchg
add
mov
adc
ret
dec
inc
mov
iret
inc
mov
inc
mov
aam
xchg
dec
cwtl
mov
mov
mov
movsb
movsl
movsl
push
add
add
imul
test
mov
scas
pushl
mov
ljmp
outsb
call
sbb
popl
pop
call
add
add
mov
push
xchg
fistpl
fistps
jmp
popa
mov
call
pushf
mov
mov
test
pop
add
add
bound
adc
popf
lcall
mov
mov
scas
lcall
jb
cwtl
and
call
add
add
mov
xor
jmp
outsl
stos
jmp
jnp
out
jle
out
jg
fstps
mov
and
add
add
adc
addr16
mov
mov
mov
mov
ret
ret
mov
jmp
inc
jle
sahf
and
pop
ljmp
add
les
outsb
fmull
in
mov
push
xchg
push
cwtl
enter
jmp
cmpsb
mov
movsb
movsb
sub
aas
inc
inc
adc
push
xchg
xchg
mov
inc
ret
inc
mov
xchg
ljmp
sbb
movsl
add
mov
gs
add
adc
in
insb
scas
push
cmpsb
into
cli
stos
sar
cli
scas
sar
std
scas
sar
cld
lods
sar
jmp
lret
mov
movsl
ds
std
add
jno
inc
scas
mov
mov
aad
aam
aam
rcl
shr
lret
enter
xchg
jmp
add
add
aam
jb
out
xchg
notl
cld
mov
cld
ret
inc
lock
ret
test
dec
jg
addb
add
add
in
in
or
call
out
outsb
fldenv
mov
add
mov
add
add
out
cmp
dec
in
call
in
call
out
call
out
call
in
cmc
aad
int
scas
scas
lods
popa
cmpl
add
std
add
std
push
int3
int3
shrl
mov
add
mov
add
loop
jp
hlt
push
movsl
inc
loope
std
xlat
call
aad
cld
aam
stc
shl
push
leave
xlat
fcmove
shl
mov
mov
xchg
xchg
xchg
pop
mov
mov
cld
scas
push
gs
mov
or
jg
in
insl
lods
cld
lock
shl
ljmp
jmp
out
aam
ljmp
scas
push
lcall
add
popf
lods
xchg
dec
and
push
mov
shlb
int3
jbe
mov
fdivrs
lret
into
outsl
fmul
into
pop
fst
xlat
dec
in
loopne
out
out
out
out
out
sbb
rol
add
mov
cmp
mov
lods
push
mov
mov
ret
mov
les
int3
sbb
fstp
bswap
into
int3
or
aad
push
std
std
std
add
incl
lods
incb
rol
add
std
incb
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
call
mov
rcll
sub
stos
inc
jl
into
gs
sub
out
and
or
je
sub
xchg
xchg
and
in
and
aaa
cmp
imul
mov
cmp
fidivrs
adc
rclb
cltd
xor
jne
test
xchg
xlat
fcom
insb
or
sbb
pop
dec
cmp
jl
adc
into
shrl
movb
je
and
sub
imul
xchg
mov
enter
sti
jmp
test
dec
cmp
subl
pop
mov
ret
in
cmc
loope
mov
dec
xor
imul
sti
mov
aas
in
xlat
sbbb
push
pop
cmc
aas
sub
adc
mov
xor
rcr
jae
pop
mov
xchg
push
pop
xlat
outsb
mov
scas
cmpsl
lods
cmc
mov
enter
add
xor
push
in
dec
push
xor
subl
movsb
push
out
mov
outsb
add
pop
dec
rcrb
add
push
movsl
stos
and
sub
js
hlt
movsb
pop
push
out
dec
jnp
adc
into
cltd
xor
pop
xor
dec
inc
mov
insl
lcall
mov
xchg
xchg
sub
or
test
sbb
mov
dec
in
or
outsl
push
inc
pusha
xchg
sub
mov
inc
in
stos
inc
flds
into
gs
fnstenv
pop
in
orl
adc
aam
pushf
xor
testb
pop
dec
test
outsl
scas
pushf
pop
lret
mov
push
jmp
xchg
pop
jo
mov
and
aaa
add
pop
mov
bound
test
inc
ficoml
pop
sub
dec
push
call
js
outsl
push
into
cltd
jbe
lret
out
lea
in
xchg
sub
inc
stos
push
mov
lods
arpl
pop
adc
loope
loopnew
adc
in
and
cmp
sub
mov
les
mov
pop
ret
repz
test
fs
inc
mov
mov
lock
and
enter
outsl
arpl
push
out
jl
lea
lret
adc
cld
scas
mov
loopne
xor
dec
add
xorb
mov
ret
lods
inc
cmc
cmpsb
daa
mov
dec
clc
inc
fsubrl
push
sbbl
sbbl
inc
out
lahf
and
fcoml
mov
cli
in
push
sbbb
call
mov
scas
insb
lods
mov
int3
mov
fists
adc
xchg
jno
arpl
es
aaa
into
sub
lods
inc
or
jge
lret
bound
jae
sarb
xorb
pop
sahf
add
inc
ja
and
fs
fisubl
leave
popa
clc
cli
or
dec
nop
daa
mov
mov
ret
hlt
xor
cli
gs
sbbl
lcall
scas
in
sub
push
pop
push
ss
jg
jb
pusha
push
jmp
sar
nop
add
jb
in
pop
scas
push
push
xchg
sub
ja
int3
test
scas
inc
mov
push
ljmp
jb
dec
jmp
xor
daa
mov
ret
hlt
movsb
daa
mov
inc
testb
imul
cli
jns
or
int3
push
sub
pop
popa
inc
fstl
mov
sti
in
add
stc
nop
sbb
cmp
lods
mov
int3
mov
ficoms
or
subb
cmpsb
pop
mov
or
sub
sub
outsb
jp
scas
inc
dec
cltd
inc
fcmove
outsl
sbbb
in
testl
jo
pop
repnz
xchg
add
rclb
mov
sbb
inc
gs
js
push
xor
movsl
cmp
push
xor
xor
shlb
movsb
cs
adc
es
and
cmpsl
jge
cmp
jae
xor
sub
out
cmp
sbb
jnp
shlb
das
mov
fcomi
xchg
es
jmp
adc
ds
nop
insb
les
test
mov
mov
push
fmul
pushw
jb
push
sub
pop
pusha
shl
mov
mov
jb
and
mov
and
test
shrb
push
mov
outsb
or
push
call
inc
and
stos
inc
adc
or
pop
repnz
fcmove
or
mov
inc
xor
shlb
ret
mov
dec
out
sub
pop
jecxz
inc
adc
cmpsl
ds
or
lds
inc
ficoms
data16
or
jne
cli
adc
aam
and
js
shll
into
add
xchg
sub
and
lret
dec
in
iret
ljmp
and
pop
cmc
clc
ret
or
pop
sub
ret
test
bnd
and
pop
sub
roll
repnz
fs
push
pop
shlb
repz
dec
in
xor
fs
repnz
inc
fstps
lds
lret
repnz
insl
in
fsubrs
cmp
ret
xor
icebp
mov
mov
aaa
fs
in
repnz
fdivl
aaa
nop
daa
mov
in
mov
test
arpl
mov
pop
mov
es
arpl
lock
mov
sub
fs
mov
xchg
bound
xchg
sub
out
and
imul
cmp
and
or
mov
pop
lock
popf
pop
aam
dec
or
ljmp
sub
jg
fistpl
jmp
dec
sub
cltd
pop
ficoml
or
sbbb
push
inc
fisttpl
dec
loope
fisubl
or
pop
cmc
repnz
and
add
or
push
repnz
inc
fistl
adc
repz
aas
pop
mov
jns
ret
call
push
dec
and
add
imul
or
sbbl
sbb
push
dec
out
push
in
sbb
or
mov
sbb
pop
icebp
sbb
or
cmp
addr16
and
pop
icebp
push
repnz
pop
cmp
sbb
or
or
lods
rcrl
inc
fcomps
std
fbstp
xor
addr16
mov
js
pop
mov
cltd
cmpsl
mov
adc
ds
push
xor
ljmp
jno
mov
lcall
call
add
jo
sbb
repz
push
or
testb
cmp
imul
scas
xchg
xchg
int3
and
mov
dec
xor
push
lea
lahf
mov
filds
or
imul
pop
pop
sbbl
lods
lods
sbb
add
sub
gs
push
inc
fmull
lods
icebp
mov
shrl
push
std
shrl
and
ja
jge
loop
test
lret
sti
push
dec
loopne
and
mov
int
pop
out
cld
push
insl
add
sbb
test
xor
inc
aas
jne
inc
xlat
dec
stos
shrl
aam
rorl
add
add
stos
xor
rcrl
pop
mov
push
pop
push
popf
cmp
or
fstpl
push
cmp
pop
push
xchg
jo
jnp
cmpxchg
xor
or
dec
jecxz
and
lcall
popf
xor
jge
inc
stos
xlat
outsb
cmc
ret
pushf
xor
sbb
mov
lea
mov
push
jmp
cmp
sbbl
lea
xchg
sub
cmp
ret
push
test
inc
fidivs
movsl
jno
rcll
movsb
cmp
icebp
test
jb
scas
inc
je
sbbl
call
pop
jbe
cmp
fldt
stc
adc
das
inc
rorb
push
push
fldl
cwtl
or
mov
mov
mov
fists
push
xor
fs
jne
pop
test
xorb
or
pop
daa
inc
fcoms
xchg
pop
cmpb
jno
enter
je
iret
or
pop
sbb
dec
jbe
dec
movsb
addr16
cwtl
clc
lea
mov
insb
insl
lcall
or
loope
lret
ret
xor
popa
jo
cmp
mov
sbb
ret
rolb
pop
out
out
and
jb
xor
shll
lods
test
inc
jns
lock
pusha
pop
sbbl
mov
cmp
xlat
xor
and
out
jg
jecxz
mov
es
mov
and
lock
xlat
jl
add
dec
or
insl
lahf
popf
push
nop
inc
call
enter
cmp
adc
out
arpl
divb
cmpsl
icebp
ja
jle
sahf
scas
lret
and
lret
js
dec
jbe
xor
fsts
sbb
fstps
mov
stos
mov
test
jbe
pushf
mov
aaa
jns
enter
dec
mov
insb
fmull
in
insb
ficomps
jecxz
dec
adc
xor
iret
es
inc
in
pop
cmp
icebp
mov
push
adc
and
and
clc
pop
add
out
xor
push
test
mov
mov
clc
sub
loope
inc
jne
jb
lea
pop
adc
stc
add
sub
lods
pop
jecxz
ljmp
pop
jb
fldt
repnz
andl
lock
adc
flds
test
pop
bound
dec
pop
push
iret
cmpsb
jge
xor
jo
and
xchg
xor
pop
mov
sub
sbb
rcrb
pop
push
dec
rcrb
dec
mov
mov
nop
aam
test
sbb
xchg
or
mov
push
int
add
rcll
inc
and
push
cmp
pop
inc
out
pop
mov
mov
int
les
or
xlat
in
imul
add
std
ret
imul
dec
add
dec
testb
push
xor
out
adc
dec
aaa
and
mov
sbb
les
aas
in
dec
mov
daa
shrb
test
push
jbe
push
xor
sbb
movsl
into
mov
cmp
pop
xor
pop
adc
and
cmp
inc
mov
sub
sbb
push
outsb
mov
mov
popf
or
mov
nop
ss
lcall
daa
and
mov
cltd
leave
ja
push
sbb
adc
cli
testb
in
test
pop
stos
sbb
dec
repz
push
inc
mov
mov
or
leave
mov
dec
fs
adc
dec
mov
jns
jns
lock
negl
xchg
inc
jmp
clc
jp
jp
jo
pop
xchg
mov
test
cmp
sub
push
ljmp
cmp
mov
and
mov
adc
jl
push
scas
movsl
xchg
sub
iret
fidivl
jbe
sub
test
mov
stos
inc
ret
fsubrs
mov
repz
scas
inc
out
ret
pop
leave
pusha
dec
pop
shlb
lock
sahf
adc
lea
daa
hlt
mov
pop
bnd
xchg
sub
adc
aas
dec
xchg
iret
imul
data16
lcall
sbb
and
inc
mov
cmp
test
mov
cmpsl
lods
test
das
rorl
repnz
pop
insl
sbb
ss
insl
sub
inc
hlt
mov
loopne
mov
add
inc
xlat
lods
sub
mov
pop
cmc
jbe
addr16
jl
mov
sub
and
rorl
cld
ljmp
pop
int3
mov
out
mov
jb
shrb
popf
cmpsb
cmp
xchg
xlat
les
mov
loop
adcl
push
lods
add
or
mov
das
addr16
lods
lahf
cmp
mov
aad
in
adcl
dec
lret
and
out
loope
mov
aad
xchg
scas
mov
pop
ror
mov
ljmp
scas
or
lcall
and
test
aas
sti
shlb
ficoms
cmc
pop
testl
push
sbb
fnstenv
cli
mov
mov
mov
lods
jp
hlt
mov
scas
adc
out
inc
fistl
jb
mov
lret
nop
daa
inc
xchg
adcb
addr16
xor
mull
cli
xchg
aam
fidivl
std
sbb
mov
push
lods
std
mov
adc
jbe
dec
mov
ljmp
jno
repnz
pop
lods
sbb
jbe
mov
xchg
js
int3
arpl
xchg
sbb
sbb
or
jo
data16
jge
push
jmp
xchg
test
sarl
jb
es
mov
ss
dec
rclb
mov
jne
ja
jb
push
std
xchg
jp
stc
nop
rclb
sahf
cmp
sub
and
out
pop
enter
jno
or
adc
std
test
jg
cmpsl
or
popf
xor
jge
movsl
mov
push
imul
test
fmull
or
es
push
sbbl
out
call
add
cld
and
stos
scas
je
dec
xchg
xor
xchg
scas
shrl
mov
repnz
insl
add
xchg
adc
pop
in
lds
dec
dec
jecxz
and
popa
mov
push
sub
mov
test
cmc
mov
scas
cmpsb
cmp
jne
les
lahf
xor
inc
and
jns
jo
out
mov
xchg
jecxz
jge
mov
pop
mov
fistpl
les
test
pop
fwait
in
add
mov
xchg
inc
es
mov
xlat
adc
mov
fsub
js
xchg
pop
cmc
add
xchg
arpl
jl
in
sbb
es
and
rclb
lods
inc
push
jp
lock
js
je
mov
push
int3
jo
xchg
cld
out
sub
push
sbb
lods
in
iret
push
vpunpckhbw
js
std
pop
adc
xchg
sbb
xchg
enter
mov
push
in
jle
xchg
jae
out
cli
xchg
loope
xchg
sub
sbb
pop
shll
into
data16
mov
int3
in
orl
sbbl
and
mov
mov
sub
rolb
repnz
loopne
arpl
gs
popa
mov
xchg
insb
mov
mov
frstor
rcr
loop
push
sbb
dec
xor
je
mull
sub
jne
pop
or
xchg
sub
xchg
mov
aam
lods
and
loope
dec
dec
xor
jp
call
add
sbb
pop
pop
or
mov
and
jo
lods
inc
push
cltd
jl
sbb
lret
xor
jg
inc
stos
inc
pop
int3
push
popf
adc
enter
and
bound
inc
fprem1
in
pushf
dec
sbb
sbbl
addr16
test
ret
mov
push
inc
mov
gs
cmpsl
ds
mov
andw
cmpsl
std
xchg
stc
mov
jp
adc
in
add
mov
fcomps
push
cmp
incb
push
pop
repz
xor
adc
mov
mov
cmp
mov
repnz
loope
addr16
insb
gs
call
mov
sbb
test
dec
cmp
lock
das
and
dec
loope
dec
dec
in
xchg
push
ret
jae
jmp
add
dec
insl
sbb
push
stos
xchg
imul
lock
cld
xchg
fs
push
movsl
xor
sub
test
dec
loope
dec
inc
fldl
punpckhwd
mov
push
out
cmpsl
xchg
int
outsb
add
and
sahf
xor
xchg
repnz
js
xchg
fidivl
add
xchg
jg
clc
into
xchg
push
mov
ljmp
sub
inc
dec
in
notl
mov
imul
fbstp
xlat
mov
push
insl
mov
ds
push
push
add
pop
xchg
sub
je
mov
sti
xchg
inc
pop
add
jo
pop
mov
cltd
daa
mov
jns
xor
push
xchg
pop
repz
out
icebp
jp
adc
jnp
ret
das
dec
jmp
xor
mov
aam
cs
aad
lods
dec
repnz
add
mov
fldcw
sbb
xor
jae
mov
xor
pop
stos
inc
test
enter
pushf
xor
aad
jge
add
fwait
cltd
jo
mov
mov
or
inc
fmuls
add
idivb
adc
popf
lret
lds
fwait
xor
popa
pop
cmc
inc
or
adc
jb
outsl
scas
das
lcall
cld
mov
stos
add
mov
cmp
aam
add
add
add
sub
sub
or
push
test
loope
scas
shrl
orl
xchg
les
ss
and
jmp
add
js
shlb
sbb
call
push
popa
push
movsl
cmp
inc
xchg
ret
adc
dec
loope
add
cmpb
xor
xchg
cs
daa
mov
mov
int3
lcall
ljmp
jno
add
mov
inc
jge
roll
lods
inc
mov
leave
lret
bound
fldl2t
addb
jne
fwait
sub
sahf
bound
mov
daa
cmp
cmp
jp
push
popa
clc
jbe
out
xchg
lahf
jg
in
push
movsl
jmp
sahf
xor
mov
rorl
pop
insl
fidivl
jg
adc
clc
or
xchg
cs
and
lds
aas
test
jecxz
ss
pop
hlt
push
repnz
jnp
push
lea
cmpsl
pop
sub
lds
ja
dec
inc
dec
jecxz
nop
aad
leave
icebp
jp
fsub
repz
negb
test
mov
pop
add
xchg
sub
ja
mov
in
andl
add
and
and
sub
repz
inc
fst
sbb
pop
push
repz
jmp
jns
jnp
jb
xor
ret
pop
mov
ja
mov
xchg
hlt
mov
sbb
test
cmpl
mov
or
rcr
lock
shll
ja
pop
push
pop
out
cmp
or
inc
push
mov
push
xchg
scas
out
xchg
mov
bound
adc
movsl
outsl
daa
jmp
ret
mov
rorb
into
mov
mov
sbb
outsl
push
xor
or
test
cmp
inc
mov
inc
in
xchg
mov
les
in
cmp
and
jae
xor
iret
cmpb
mov
sub
testb
or
fcoms
cmp
xor
mov
dec
xchg
loope
xlat
sbb
and
mov
and
fcoms
add
sbb
hlt
mov
jno
adc
mov
imul
fwait
xor
fcmovnb
pop
or
je
mov
fsts
sbb
xchg
xlat
in
mov
orl
icebp
inc
outsl
adc
outsl
std
jo
xor
push
dec
in
mov
mov
sbb
neg
sub
jg
cwtl
mov
pop
bound
or
insl
jo
jmp
das
jno
sub
leave
bound
xlat
cmc
std
xor
mov
shl
pusha
pop
sub
nop
pop
inc
mov
inc
shlb
jo
inc
push
dec
iret
sbb
mov
mov
xchg
xchg
notb
sbb
xor
lahf
dec
xchg
cmp
pop
pop
mov
fcomp
pushf
xchg
mul
loop
mov
xchg
mov
and
pop
xor
pop
adc
scas
scas
stos
mov
outsl
in
mov
push
dec
sbb
and
icebp
int
popf
dec
clc
xchg
testb
lret
movsb
into
cmp
pop
mov
mov
mov
loop
arpl
mov
leave
daa
in
test
cmp
add
inc
mov
scas
cmp
idiv
xchg
mov
jae
xor
mov
push
out
popf
xlat
or
in
add
fidivl
movsb
mov
sahf
mov
mov
test
sub
movsl
dec
addr16
mov
dec
popa
add
stos
loopne
int3
mov
adc
lcall
or
pmullw
insl
insb
jmp
mov
xchg
cmp
roll
push
int
cmp
faddp
fiadds
xorl
test
mov
rcll
jmp
fs
inc
mov
repz
add
dec
out
push
push
jg
test
push
mov
je
inc
jl
int3
adc
ret
test
daa
xchg
xorl
and
jecxz
stc
mov
pusha
xchg
movl
and
sub
inc
mov
out
je
addr16
jmp
and
andb
adc
stc
lods
std
adc
cmpl
aam
push
pop
sub
iret
aas
mov
hlt
pop
int
insl
les
dec
jns
inc
rcrl
ds
test
movzbl
adc
xchg
fneni(8087
andl
outsb
movsl
adc
xor
fcom
or
xor
mov
or
incl
cmc
popa
xchg
addr16
add
dec
sub
cmp
push
nop
iret
sbb
lret
xchg
fwait
mov
outsl
cmp
jnp
jmp
pop
test
dec
cltd
in
jne
adc
push
jbe
sbbb
and
loope
xchg
push
mov
in
fnstenv
add
add
iret
add
dec
xchg
cs
repz
les
jno
pop
adc
repz
cltd
cmp
lret
mov
mov
and
push
addb
ss
pop
push
or
fidivrl
push
mov
cmpsb
out
pop
lcall
add
mov
xor
pop
int
ljmp
out
cmc
mov
sub
pushf
and
cli
pop
imul
arpl
mov
mov
outsl
push
clc
mov
hlt
mov
mov
jne
mulb
pop
jne
or
test
push
cmpsb
les
mov
lea
mov
dec
jo
test
rcll
inc
push
xlat
dec
mov
and
ljmp
popa
fcompl
into
pusha
inc
dec
or
or
hlt
outsb
sbb
lcall
pop
int3
nop
push
dec
xchg
dec
sbb
and
call
jl
or
xchg
insb
pop
flds
xor
leave
inc
mov
sub
xchg
data16
push
repnz
dec
sbb
mov
jecxz
leave
push
push
push
mov
lret
and
jge
xor
add
jp,pt
fcoms
push
mov
in
dec
mov
inc
daa
mul
aaa
in
and
jmp
fwait
clc
data16
iret
push
jmp
sbbl
jg
dec
test
test
sub
pop
push
cmp
iret
mov
xor
xchg
pushf
xchg
enter
fldenv
push
outsl
push
ret
push
dec
xor
popa
pop
out
test
lds
testb
or
xor
sbb
push
cmp
aad
ret
mov
add
mov
insb
incl
jg
push
push
cmp
sub
fcompl
loop
xchg
add
cmp
enter
sahf
test
sub
sub
or
sbb
cmp
loopne
cs
xchg
cmp
int3
cltd
mov
insl
xlat
xor
jo
lea
iret
daa
repnz
mov
outsb
mov
sub
and
mov
pushl
fmull
jb
test
cmovae
or
icebp
mov
sbb
lret
cli
aam
mov
and
mov
mov
dec
daa
testb
sub
pusha
or
test
das
mov
push
sahf
imul
stos
add
iret
and
aaa
clc
and
in
dec
pusha
xchg
lea
sbb
and
fiadds
repnz
adc
test
loope
movsl
dec
sub
adc
and
loope
sbb
fnstenv
pop
jns
loope
aam
add
out
inc
movl
jno
mov
sbb
fmuls
fnstcw
adc
ret
rcrl
mov
mov
dec
pop
dec
lea
push
int3
cmp
aad
pop
rcrl
mov
sbb
ret
in
push
jb
cmp
imul
sbb
inc
mov
loope
movsl
fisubrl
out
add
xor
cmc
jne
cld
pop
jo
scas
lods
inc
xchg
rorb
inc
xchg
test
and
sti
mov
push
dec
jno
mov
dec
addr16
jl
mov
arpl
push
push
fcmovnbe
mov
std
push
je
lret
enter
mov
gs
shrl
mov
cs
testb
push
testb
stos
fmuls
xchg
xor
sbb
out
jne
jns
pop
push
pusha
inc
clc
loope
mov
repnz
push
and
xchg
mov
fcomps
adc
lds
mov
sar
inc
ljmp
xor
cmp
addr16
test
jnp
xor
and
sub
xor
lret
out
dec
pop
lret
aaa
inc
lock
in
jbe
mov
jp
xor
ds
sbb
stos
pop
or
cwtl
nop
push
in
add
arpl
pop
inc
enter
xchg
mov
daa
std
sub
xchg
mov
cmpsb
sbb
cmp
cli
dec
pop
pusha
xor
dec
and
inc
and
pop
bnd
or
lods
test
enter
sahf
xor
fwait
cmp
in
imul
insb
mov
test
sbb
push
pop
push
and
xchg
mov
adc
mov
dec
sub
mov
sbb
dec
mov
sub
xchg
xchg
add
fs
lret
mov
cmp
push
or
jne
lea
and
movsb
push
cmp
jp
lret
stos
jge
pop
icebp
loop
pop
cwtl
inc
mov
imul
decl
cmp
ss
lret
pop
aad
daa
mov
mov
xor
mov
mov
fisubrl
in
stos
dec
std
bound
es
mov
ret
push
xchg
and
jmp
inc
cmc
jbe
in
xchg
in
sub
mov
mov
mov
cli
xchg
enter
repnz
jnp
mov
scas
shlb
mov
mov
outsb
lods
inc
lcall
pop
clc
bound
jnp
clc
and
or
data16
fs
jmp
ds
test
mov
mov
adc
sub
push
pop
stos
and
mov
mov
in
cmpsb
xchg
inc
mulb
ret
jp
into
adc
sbb
divb
shrb
fwait
pusha
repz
sbb
cmpsb
push
in
inc
jo
mov
rorl
mov
fwait
sbb
clc
mov
sbb
inc
clc
rolb
je
out
loope
push
jl
faddl
or
mov
mov
mov
push
and
push
xor
movsl
cmpsl
cmp
adc
mulb
je
lods
das
sbb
arpl
daa
jecxz
cmp
fildl
repz
mov
cwtl
outsl
das
jecxz
scas
das
in
mov
cmp
outsl
jbe
roll
popf
xchg
add
sub
mov
jno
push
sbb
xor
and
bound
out
in
cli
pop
test
push
lods
ja
rol
mov
loope
inc
pushf
xor
dec
add
data16
ja
orl
incb
xor
ja
add
test
inc
test
xchg
loop
pusha
shlb
cmp
pop
xchg
lcall
das
gs
push
mov
rclb
or
out
movsl
jae
jbe
mov
cmp
cmp
in
ljmp
mov
loop
ja
or
or
pushf
and
cmp
aaa
je
adc
mov
ss
pop
jnp
lcall
lods
out
das
jno
cmp
jbe
sbb
inc
add
push
enter
cmpsb
insb
xor
scas
xchg
and
hlt
pop
cmc
ret
xchg
faddp
dec
sbb
or
or
js
push
icebp
rcll
lods
lret
lds
test
lods
pop
mov
daa
xchg
iret
sbb
mov
out
sub
sbb
xor
fstps
loope
adc
and
test
or
sbb
xlat
fs
insb
flds
std
aam
push
and
or
mov
sub
ret
mov
divb
dec
jb
in
mov
and
cld
cmp
or
pusha
mov
inc
sub
add
dec
cmp
push
mov
aaa
pop
pop
inc
xor
xorl
test
sub
lcall
push
stos
add
mov
outsb
in
repz
addr16
jmp
and
mov
mov
fcomip
adc
sub
or
inc
push
mov
aam
shrl
jle
or
push
pushf
aam
push
push
xchg
lods
xor
cmc
dec
fbld
loop
outsl
pop
xlat
inc
enter
leave
push
jbe
mov
mov
and
jno
pop
cs
inc
cmp
cwtl
add
sahf
sarl
xor
jno
sbb
lret
lret
psadbw
add
sbb
fadd
pop
movsb
mov
add
mov
mov
loopne
sbb
lret
ljmp
pusha
mov
xchg
pop
inc
xchg
sbb
add
push
repnz
dec
jns
pop
insl
je
mov
pop
jge
sbb
adc
push
rcll
cmp
and
nop
stc
out
pushl
add
push
lds
mov
mov
insl
xor
xchg
adc
and
std
xlat
xchg
push
sbb
icebp
or
les
call
xor
mov
xchg
and
inc
insb
pop
cmp
gs
inc
fsub
fistpl
jns
dec
xchg
ret
test
jge
jno
mov
mov
xchg
bound
lret
mov
dec
mov
orb
xchg
jbe
xor
es
jmp
cmpsl
xchg
ljmp
push
or
ret
lahf
inc
mov
mov
icebp
add
adc
jae
jbe
rcr
pop
push
or
pop
jbe
das
dec
es
in
sub
lcall
rcrb
mov
jg
xor
lcall
fs
xchg
xor
mov
rcl
pushf
inc
sub
punpcklbw
out
vpor
lock
adc
call
sub
sbb
and
sub
jo
cmc
not
and
cwtl
sbb
mov
fnsave
mov
jg
adc
cmp
sub
stos
mov
fnstsw
icebp
xchg
sahf
ret
aam
or
inc
outsl
outsl
jae
jp
int3
push
loop
adc
push
out
adc
repnz
aas
jmp
imul
sbb
es
xchg
push
push
dec
lea
cmpsl
mov
daa
add
outsb
das
lret
cltd
lcall
test
or
scas
xchg
or
or
xchg
lret
inc
inc
idivl
dec
cmpsb
js
push
adc
lret
inc
popf
lods
imul
xchg
sub
dec
cmpb
sahf
repz
aad
mov
ret
or
inc
enter
daa
shr
in
out
jecxz
xor
adc
insb
adc
lock
ss
cwtl
dec
pop
push
or
mov
sahf
inc
icebp
lods
adc
push
jns
push
and
shll
sarl
adc
adc
push
cs
lahf
sub
xchg
cltd
pop
hlt
hlt
repz
sbbl
test
aas
loope
mov
rcr
cmpsb
test
xchg
pop
xor
dec
jmp
sbbb
neg
pcmpgtw
cmp
sub
mov
and
mov
mov
sbb
pop
pusha
jno
cmpb
lock
push
sbb
mov
jp
jmp
jg
sbb
popf
insl
imul
call
jge
and
in
scas
push
addr16
cmp
lods
push
invd
mov
test
inc
cmpsl
jns
or
ret
pop
rcrl
cmpsl
lds
gs
in
dec
test
cwtl
jmp
fdivl
dec
jo
xchg
aaa
mulb
dec
repz
insb
and
lret
pop
xchg
mov
fwait
dec
mov
gs
pop
mov
or
outsb
add
and
pop
jge
or
into
mov
mov
cmp
mov
jae
jl
push
icebp
cli
mov
mov
jno
sti
popf
je
aam
dec
js
mov
mov
ret
push
sub
push
int3
lret
imul
and
adc
hlt
hlt
decl
cmp
pop
and
aaa
mov
and
hlt
xchg
icebp
and
int
mov
movsw
cmpsl
push
inc
imul
sub
and
mov
jecxz
test
mov
stc
cli
mov
rorb
mov
les
fisttps
dec
into
shl
imul
sub
jl
dec
and
es
mov
js
andl
imul
pushf
xor
stos
xchg
mov
stc
stc
mov
aas
aam
popf
mov
push
jl
xchg
test
outsb
mov
xchg
pop
cld
add
xchg
mov
pop
add
aam
jg
push
leave
dec
xchg
in
int
lret
lcall
pop
push
scas
xchg
daa
jmp
aas
inc
inc
je
ret
popf
adc
lahf
mov
mov
shrb
mov
in
stc
sarb
xlat
fldenv
jg
and
dec
clc
pop
mov
mov
jmp
inc
pusha
test
xor
sti
outsl
sahf
out
insb
movsb
inc
daa
mov
mov
push
lods
in
rorl
outsb
sbb
xchg
enter
enter
cmp
push
jno
push
xchg
bound
test
into
jmp
jp
lock
sar
loopne
pop
data16
fwait
shrb
stos
lods
data16
lds
mov
xor
imul
test
fdivp
fistl
shrl
adc
cwtl
inc
inc
aas
and
mov
fbstp
dec
hlt
cwtl
pop
push
add
in
out
sub
cli
mov
adc
pop
inc
loop
mov
mov
and
adc
int3
lds
lret
sbb
lahf
ljmp
fldl
mov
out
rol
addr16
repnz
cmp
test
and
inc
dec
fldenv
dec
cmpl
insl
repz
and
xor
cmp
das
out
sbb
mov
or
xlat
mov
insl
rcrb
push
jl,pn
stc
pop
cmp
test
xchg
pop
cltd
push
jge
add
xor
or
xor
lret
lret
mov
lea
add
frstor
and
dec
pusha
jns
cmp
dec
inc
jb
mov
imul
or
stos
add
cmp
nop
fsts
mov
xor
insl
out
aaa
xchg
mov
notl
lea
pop
add
sbb
mov
lret
or
loop
sub
adc
mov
and
add
cmc
mov
imul
shl
js
mov
test
cmp
inc
dec
sbb
jb
pusha
pop
imulb
fwait
pop
jns
mov
cltd
or
jne
shl
scas
xor
rolb
push
cmp
jnp
fsub
test
loop
xlat
xor
mov
repz
cli
sbb
insl
inc
push
into
popa
movsb
clc
add
cmp
das
jbe
iret
or
sti
loop
fistl
out
stc
cmpsb
mov
pop
in
in
push
or
lahf
and
and
sub
rcll
inc
adc
jns
fwait
clc
mov
or
ja
repz
cmp
cmp
and
or
icebp
fisttpl
sahf
ljmp
movsb
fsubrl
cmp
xchg
mov
inc
pop
mov
ficoml
sahf
adc
sub
fwait
xchg
mov
xchg
xchg
int3
das
pop
iret
movsb
xchg
jp
xchg
mov
mov
ss
sbb
sub
stos
ja
sbb
jb
jns
ljmp
fs
fs
cwtl
jle
push
jae
sub
aad
push
mov
xor
xor
inc
fcomp
cmp
or
pushf
dec
lods
iret
in
fsts
leave
or
mov
movsl
je
dec
inc
repnz
cmp
pop
sahf
inc
inc
shrl
cmpsb
jg
and
mov
and
and
test
xor
lret
sbb
jne
inc
fisubs
fsubl
mov
and
outsb
lods
rcl
push
push
jo
jbe
andb
shll
rcll
loopne
mov
sub
insb
rcrl
lock
sbb
aas
bound
pop
dec
insb
enter
icebp
loopne
movsb
mov
sbb
xor
pusha
loope
mov
cwtl
mov
mov
mov
xor
jne
idiv
xor
xor
dec
hlt
mov
jg
insl
in
pusha
mov
push
mov
pushw
inc
or
xor
ss
mov
add
ljmp
cmpsb
call
pop
inc
sarl
add
sbb
and
xchg
ret
cmp
cmc
and
mov
in
mov
lock
and
pop
jecxz
pusha
sti
loop
into
fisubs
scas
shlb
add
lds
repnz
fs
mov
cmpsl
jb
xchg
pminub
push
mov
xor
bound
std
shl
and
pop
cli
ret
mov
mov
mov
lret
dec
je
into
loop
mov
mov
adc
loop
or
xor
in
out
cmc
ret
jp
nop
in
adc
shl
adc
dec
loop
inc
arpl
mov
add
cmp
fcom
insl
sub
jnp
std
call
jne
mov
rolb
lret
inc
and
mov
leave
ret
hlt
je
fcoms
cmpb
out
add
xor
stc
out
pop
stos
lods
xor
aad
in
mov
jnp
xor
push
aad
xor
jb
push
movsb
mov
lret
outsl
scas
shlb
lea
cwtl
cld
lea
push
data16
or
outsb
out
std
dec
in
int3
pop
add
xchg
repnz
and
in
mov
xchg
jmp
cli
and
in
xor
leave
dec
push
mov
push
sbb
into
imul
push
hlt
neg
mov
lods
jp,pn
xchg
mov
jle
sbb
ds
jae
sbb
inc
pop
adc
bound
ja,pt
sub
dec
mov
in
out
je
in
sub
lahf
or
hlt
fiaddl
xor
inc
lret
mov
imul
xor
outsl
fsubrs
xchg
inc
jl
adc
and
movsl
les
clc
dec
sub
setle
aad
mov
adcl
fadds
xchg
xchg
test
mov
lods
mov
ret
sub
sbbb
jg
xchg
adc
test
inc
rorb
arpl
fucom
outsb
nop
leave
push
test
xchg
jno
jae
rol
sub
sub
add
out
cmp
pop
rclb
sbb
push
push
pop
sub
aad
jle
cmpsl
dec
sub
mov
jmp
lods
enter
add
jmp
dec
mov
sti
and
les
push
pop
pushf
mov
jmp
dec
icebp
dec
xchg
and
dec
je
test
pusha
or
lods
sub
insl
mov
jno
das
push
mov
fldl
mov
shll
cmp
mov
mov
cmp
add
out
daa
sbb
inc
mov
rcll
dec
push
inc
int
adc
push
adc
std
in
sbb
adc
jle
mov
sar
aad
iret
rolb
test
dec
subl
jo
test
scas
shlb
push
jnp
outsb
inc
in
sbb
or
out
lahf
fimull
push
push
add
arpl
stos
fdivp
out
data16
jecxz
push
test
xchg
loop
outsb
aas
in
push
inc
out
push
pop
mov
in
das
mov
cli
push
adc
fcom
xchg
not
mov
adc
adc
int
xor
arpl
pusha
and
scas
cs
js
call
aaa
sahf
jnp
scas
popf
addr16
rep
and
lret
sbb
mov
cwtl
cmp
sub
or
cs
cld
sub
dec
mov
cmp
test
xchg
mov
pop
adc
rcll
rorl
mov
mov
add
mov
and
int3
xchg
sahf
or
dec
subl
mov
enter
popa
es
fstpt
pop
mov
or
jg
or
add
orb
mov
insl
clc
test
in
mov
mov
decb
call
scas
es
push
mov
and
mov
std
xchg
jg
mov
pushf
shll
jnp
int3
mov
leave
sub
mov
mov
fstps
mov
stos
xchg
aas
add
in
out
sub
test
rol
outsl
sets
ja
sub
lret
dec
lret
je
xor
ret
pop
sbb
xor
xchg
cltd
int
pop
mov
inc
testb
add
shrb
in
hlt
jne
int
inc
jae
mov
xchg
fadds
std
sub
mov
adc
mov
cwtl
in
sbb
xor
sbb
cmp
cmc
push
mov
xor
imul
ja
mov
pop
inc
repnz
das
in
xchg
popa
mov
bound
push
cmp
sbb
inc
loope
fidivrs
jno
xchg
mov
xor
enter
insb
test
adc
daa
cli
mov
sbb
in
subl
pop
fmul
out
xchg
addr16
js
je
and
add
fcompl
out
xchg
jns
add
call
inc
aad
orb
outsb
stos
popa
gs
mov
test
andl
jae
inc
ss
cmp
jo
mov
sub
test
xlat
cmp
mov
cwtl
pop
test
mov
cltd
xchg
add
sub
jb
jbe
push
or
mov
into
das
push
xchg
push
loop
ret
cmp
arpl
insb
xchg
test
push
shll
mov
push
inc
or
or
cmovge
and
and
dec
jl
ret
test
mov
fadd
add
fidivl
hlt
call
lods
shr
jo
inc
cmp
mov
sbb
stc
adc
loope
mov
cmc
inc
and
fs
mov
scas
cmpsl
bound
int
jge
or
roll
out
in
cmp
mov
in
test
pop
inc
ficoms
clc
js
jmp
sar
out
adc
inc
cmp
les
icebp
push
shrl
cmpl
movsl
popa
jle
cmp
xor
and
inc
dec
fmuls
outsl
mov
ret
mov
insb
or
and
sbb
sbb
outsb
dec
sub
lcall
stos
xor
mov
or
setae
test
jbe
mov
pop
mov
sub
adc
pop
adc
sbb
xchg
pop
call
sbb
push
test
aas
dec
sbb
xchg
stos
inc
or
mov
test
xchg
mov
push
mov
pop
pop
orw
int
pop
pushf
jecxz
inc
sbb
hlt
adc
mov
into
popa
xor
aam
mov
pop
add
inc
lcall
or
or
or
ret
dec
out
adc
in
clc
sub
xchg
decb
cs
xchg
stos
in
mov
pushf
sub
cld
mov
mov
stos
jns
in
sub
mov
aad
fnstsw
test
insb
nop
lods
movsb
cltd
push
jae
xor
jb
lods
rcrb
aaa
aas
and
imul
shrl
les
cmp
mov
cli
mov
add
mov
sbb
subb
adcb
add
inc
sbb
pop
test
add
js
add
jecxz
mov
into
movsb
mov
push
inc
pop
in
fwait
mov
mov
xor
push
movsb
pop
or
add
inc
or
inc
aad
out
mov
inc
fdivrl
cmpsl
int
out
sarb
arpl
cltd
mov
mov
cwtl
outsl
in
scas
mov
test
dec
pop
enter
outsl
jl
inc
dec
dec
push
stc
jl
iret
cmpsl
mov
outsb
imul
mov
out
jle
sub
loope
mov
daa
and
std
fwait
clc
insb
dec
or
mov
out
adc
in
loope
adc
xor
push
pop
mov
ljmp
cmp
gs
push
push
fucomi
sub
insl
lcall
adc
cmp
pusha
jp
push
fbld
in
insl
inc
cmp
inc
sbb
mov
mulb
mov
cmp
cmp
add
add
pop
int3
and
push
cmpsb
sbb
mov
aaa
pushf
add
lea
pop
add
lcall
push
inc
xchg
jbe
cltd
pop
inc
and
lret
hlt
pusha
loopne
mov
out
es
xor
dec
and
shlb
and
out
jns
mov
cmp
test
or
cmp
cltd
cli
add
jecxz
das
sub
lods
popf
push
mov
mov
sahf
int3
out
hlt
dec
push
jg
add
fists
fistps
mov
inc
inc
movsl
add
sbb
hlt
pop
popf
mov
test
imul
enter
pop
lret
mov
xchg
xorb
fcmovu
andb
inc
push
call
imul
and
adc
jp
or
sbb
xor
jge
sbb
and
inc
mov
push
mov
pop
repnz
pop
push
and
lcall
addr16
jmp
dec
stos
in
xor
int
add
rclb
scas
cld
pop
sahf
jo
icebp
mov
and
in
jg
jae,pt
or
or
push
fwait
enter
dec
sub
ds
nop
jne
adc
adc
sub
add
stc
adc
ret
sub
inc
fisubrs
and
jbe
mov
add
das
push
in
and
arpl
je
out
lods
add
mov
mov
and
and
loopne
sbb
ja
pusha
into
mov
and
lret
insl
sti
iret
int3
test
dec
inc
int3
and
or
mov
cmc
fwait
add
scas
pop
and
mov
scas
jbe
xlat
cmpsl
rclb
leave
pop
cmc
cli
and
push
sbb
dec
jne
daa
cmpsl
outsb
pushf
xor
sarl
dec
adc
jno
outsb
in
test
rorl
jmp
das
movb
cmp
pop
pop
hlt
mov
add
loop
mov
cmp
xchg
sub
push
mov
mov
aam
in
adc
xchg
dec
or
xchg
imul
xchg
push
adc
call
or
cmp
dec
in
pop
jge
lea
add
cmpsb
xchg
fadds
mov
cmp
push
fidivl
dec
pop
jle
cld
xchg
ficompl
sbb
mov
inc
adc
rcrl
test
and
dec
loop
inc
cltd
xor
outsl
push
outsl
cltd
rcrl
xchg
sub
in
fidivl
in
inc
push
inc
add
jno
iret
imul
mov
fimuls
mov
push
mov
mov
fcoml
cld
push
xor
sbb
shrl
jp
cmp
mov
movsb
pop
and
jb
jl
lds
into
dec
jecxz
es
inc
and
pop
fs
pusha
sahf
jl
inc
cmpsb
mov
mov
add
mov
pop
push
inc
xlat
mov
inc
cmpsl
scas
xchg
sub
enter
cli
sbb
and
insl
add
inc
insl
jle
lea
lahf
jbe
leave
mov
push
in
adc
insl
outsb
pop
lds
test
pop
add
lds
dec
jle
js
cmpsb
cmp
ret
lret
repz
lods
sbb
outsb
add
stos
mov
fdivp
aam
inc
push
push
mov
jge
jno
out
jp
inc
movsb
lret
les
lds
popf
push
imul
dec
jno
sbb
int3
and
jbe
push
add
dec
jo
pop
stos
imul
hlt
mov
dec
lock
mov
test
lret
hlt
mov
js
adc
xchg
dec
outsl
mov
cltd
insl
stc
xchg
mov
pop
cmc
lock
sub
adc
mov
mov
ret
add
out
repz
sub
dec
popa
clc
ja
fs
xchg
cwtl
lea
mov
sbb
jecxz
ret
sbb
loope
dec
cmp
loopne
xchg
mov
lahf
mov
popf
xor
rolb
inc
dec
sub
sub
pushf
xor
mov
xor
or
jo
sub
push
push
pop
add
mov
gs
rcl
mov
repz
dec
and
mov
ret
or
cld
loop
add
push
add
addr16
test
in
ror
arpl
lods
inc
pop
pop
inc
fadds
mov
mov
pushf
and
daa
cmpl
adc
mov
add
sub
daa
and
jae
dec
mov
pushf
cmpsb
xchg
pusha
test
out
rcrl
dec
loopne
cmp
jl
stos
movsl
test
aam
fisttps
lahf
or
adc
push
jnp
mov
je
sti
lods
lds
dec
lea
pop
xchg
dec
sbb
stos
xchg
fs
jecxz
mov
push
in
shlb
cli
push
dec
in
sbb
cmp
pop
pop
cmc
andl
fs
and
xor
inc
dec
dec
in
movsb
cmp
ret
std
out
or
in
cmp
arpl
int
test
mov
fists
pop
adc
fs
insl
or
xchg
je
sub
in
rorb
or
xchg
sub
sub
push
xorb
lods
movsb
push
in
fmulp
xchg
cmp
dec
in
pop
xchg
sub
cmpsl
xchg
loopne,pn
into
gs
or
in
mov
in
stos
popf
xor
mov
add
cmc
mov
movsl
ss
pop
hlt
mov
add
mov
in
clc
popf
xor
or
xor
xor
fs
sahf
sbb
and
ljmp
xor
push
jns
xchg
xchg
stos
inc
lret
movsl
in
in
pop
hlt
push
push
jp
cmp
sub
bound
in
test
icebp
fstp
mov
or
int
sub
sbb
xor
dec
loope
xchg
dec
in
lret
popf
xor
in
jb
pop
pop
ret
pop
push
cmp
rep
xorl
into
inc
fisttpll
add
es
jmp
mov
rcrl
add
arpl
inc
and
pushf
xor
shll
hlt
sbb
hlt
inc
adc
xor
xchg
outsl
dec
jecxz
mov
xor
mov
xchg
sub
add
fs
sbb
test
cmp
cmpsl
dec
in
add
add
pop
sti
xchg
xchg
pop
stos
inc
mov
adc
mov
outsl
jmp
or
jle
bound
xchg
cltd
mov
inc
adc
push
cmovp
cmp
push
mov
ret
imull
mov
push
sti
mov
arpl
mov
outsl
into
adc
mov
outsl
dec
loope
cmp
arpl
dec
loop
add
add
fimuls
lahf
pop
pusha
push
mov
in
cmp
stos
add
pop
cmc
cli
push
cmpsl
mov
sbbl
fidivs
cmp
enter
dec
icebp
mov
fidivs
fwait
and
cltd
scas
lock
rcrb
mov
dec
pop
out
jle
inc
fstl
jge
int3
je
mulb
les
and
mov
push
fs
push
loop
push
pushf
push
lea
mov
push
adc
add
cs
fcompl
cmp
and
push
dec
fimuls
mov
jns
dec
repz
sub
sbb
mov
sub
xchg
mov
int
test
aas
loop
sub
push
mov
inc
jae
int3
push
mov
loop
sub
add
sub
mov
inc
xor
jns
inc
out
xchg
fs
out
push
sbb
xchg
xor
xor
bound
aam
mov
roll
lahf
adc
and
pop
inc
sbb
push
xchg
sub
mov
iret
imul
ss
xlat
imul
mov
xchg
xlat
xchg
xor
mov
ret
or
cmp
pop
mov
cld
stos
into
pop
xlat
adc
repz
stc
fisubrs
andl
dec
out
js
mov
push
in
xchg
decb
ds
cwtl
sbb
pushf
je
pop
mov
les
ret
adc
adc
and
cwtl
fs
push
movsl
mov
movb
rcrb
cmp
push
sbb
outsb
xor
mov
jle
pop
divb
outsb
dec
sbb
xchg
xor
mov
fucomi
mov
mov
sbb
daa
jnp
stos
xchg
pop
xchg
and
cmp
rcrl
sub
xor
cmpsl
push
and
sbbl
repnz
jne
push
std
cmp
push
sub
fs
shll
pop
fnstenv
int3
dec
out
cs
mov
xor
mov
mov
cmpsl
lret
or
repz
sahf
inc
imul
cmpsl
jg
scas
xchg
clc
scas
cmp
dec
pop
sub
xor
cs
dec
push
loope
movsb
mov
xor
cmp
scas
dec
sub
imul
outsb
adcl
and
sub
stc
mov
inc
push
repz
or
xchg
subl
rclb
add
shll
adc
pop
adc
sbb
neg
adc
dec
movlps
lcall
mov
test
sub
sahf
cmp
dec
cmpxchg
mov
jecxz
adc
and
lret
fs
insl
or
popf
pop
fnstenv
iret
dec
out
testb
pop
pop
mov
jae
mov
scas
mov
xchg
xlat
loope
add
adc
push
je
repnz
outsb
or
jecxz
inc
repz
sbb
add
shll
jbe
sbb
mov
lea
icebp
lock
mov
sbb
lcall
pop
jmp
or
cmp
inc
out
pop
inc
jns
addr16
cltd
lods
add
in
lcall
xor
mov
aad
popa
mov
cld
xchg
out
adcb
or
mov
jp
cmp
inc
int
inc
out
out
and
dec
loopne
inc
in
je
dec
out
xchg
shrb
mov
mov
sbb
xor
daa
cmp
inc
outsb
dec
inc
fdivrs
dec
jecxz
lcall
adc
std
xchg
and
sbb
mov
fildl
popf
or
pop
lock
and
push
inc
fnsave
rclb
fbstp
jmp
arpl
test
sbbl
sti
xlat
pop
testb
in
test
std
xchg
pop
insl
or
mov
sub
in
fdivrs
rorb
push
dec
fbstp
es
out
push
dec
data16
jns
jne
mov
mov
sub
or
mov
aam
rclb
aam
das
mov
jmp
test
lods
fsubs
mov
stc
cmp
mov
and
jle
insl
leave
in
test
into
gs
sarb
xor
dec
jecxz
push
sbb
jbe
sub
mov
xchg
mov
fsts
sbb
push
rcrl
xchg
sub
cmpsb
lahf
rclb
push
popf
add
leave
pusha
inc
and
stos
push
push
xor
mov
les
or
sbbb
fidivs
jge
jbe
pop
jnp
or
call
pop
sbb
mov
movsb
test
fisubl
and
sbb
xor
dec
cmp
push
xchg
jle
cwtl
sahf
mov
add
fcomi
xchg
cs
std
inc
ficompl
cmp
push
push
cmp
loopne
je
insb
mov
sar
xadd
cmpsb
mov
in
jbe
mov
cld
and
mov
mov
hlt
imul
mov
inc
jge
dec
test
inc
and
mov
lahf
roll
lods
shrl
hlt
adc
out
xor
sub
mov
cmp
xor
xchg
pop
add
insb
sub
sbb
out
jecxz
insl
mov
jbe
or
and
cs
les
mov
sbb
inc
xchg
shlb
adc
push
pop
test
data16
popf
xor
aam
push
movsl
repz
jb
cwtl
popa
push
xchg
sub
mov
xchg
icebp
inc
insl
add
mov
js
mov
cld
xchg
outsb
xor
pop
test
jno
lret
push
popf
insl
mov
adc
inc
fdivrl
rorl
mov
stc
stc
cmpsl
ds
jle
mov
ret
cmp
jl
mov
mov
lcall
and
fistpl
sarb
lods
inc
jl
stc
insl
jns
outsb
stos
popf
jp
lods
inc
push
dec
mov
jbe
jb
push
fs
out
pop
mov
cli
xchg
push
outsl
stc
nop
lahf
pop
and
mov
decl
aam
stc
out
incb
xor
jb
loope
push
call
bound
dec
xchg
xchg
in
mov
mov
leave
pusha
xor
mov
shlb
or
clc
xchg
nop
jbe
ret
add
mov
fs
aaa
mov
imul
in
sahf
fdivp
lea
mov
andb
dec
in
and
mov
cld
xlat
and
enter
lods
or
mov
pop
jg
mov
dec
jae
mov
cmp
mov
loope
aaa
es
xchg
fisubl
mov
mov
and
or
sbb
and
and
sbb
mov
xchg
fbstp
int3
and
mov
and
popa
mov
mov
jmp
and
adc
sbb
lret
aad
sbb
or
mov
hlt
jg
mov
jae
pop
movsl
jae
mov
push
sbb
cli
xchg
inc
fwait
or
cmp
mov
mov
or
stos
xchg
sbb
push
push
adc
push
xlat
sbb
dec
cli
adc
aaa
sbb
mov
shr
repnz
push
in
lods
pop
sbb
lds
adc
push
arpl
mov
sbb
dec
xchg
jl
or
fnstenv
mov
mov
je
scas
lcall
and
xchg
xchg
dec
icebp
mov
pop
hlt
leave
cli
and
jle
xor
mov
sahf
pop
not
insl
sbbl
xchg
imul
adc
ret
xchg
xor
inc
xlat
outsb
jae
add
sub
pop
cmc
fldt
inc
fimull
lret
mov
mov
jns
jo
xlat
outsb
mov
movsl
ret
pop
pop
mov
push
jecxz
nop
daa
dec
data16
pop
cltd
mov
xchg
std
pusha
shrl
add
push
add
gs
adc
mov
sub
sbbl
fimuls
pop
inc
cltd
jnp
lret
and
lea
xchg
ljmp
call
push
sbb
mov
lret
adc
std
mov
das
lods
xor
xchg
cmpsb
sub
lock
movsl
jns
pop
sbb
push
stc
nop
dec
or
ss
mov
std
mov
std
xchg
jb
jno
packsswb
test
dec
pop
scas
jle
decb
cli
inc
fsubrs
sbb
ljmp
test
xor
scas
movsl
cwtl
es
test
loop
mov
lods
dec
xchg
bound
inc
std
xchg
jae
cmp
xor
cmp
mov
fistpll
cmp
lret
cmp
stos
mov
sarb
push
mov
mov
jno
dec
in
stc
mov
scas
dec
lods
int
fimuls
testl
mov
cmp
push
add
push
popa
addr16
push
fistpll
mov
or
data16
pop
imull
pop
andb
mov
jae
imul
adc
scas
inc
clc
push
inc
fiaddl
fnstenv
xchg
fbstp
sub
subb
adc
sbb
mov
stos
daa
mov
dec
imul
lods
lahf
dec
out
sub
cli
insl
inc
call
or
das
jle
mov
mov
mov
mov
mov
cmpsb
cmp
jb
mov
jecxz
push
out
test
testb
mov
push
sub
sub
xor
pop
cmc
fnstcw
call
sub
jb
lret
fucom
jp
mov
orb
mov
loopne,pt
jno
lods
inc
sub
ljmp
lods
sbb
fstp
add
into
or
pop
out
mov
inc
sbbb
outsb
ret
pop
pusha
notb
push
mov
pop
jecxz
int3
arpl
shlb
dec
xchg
nop
cmp
sahf
stos
push
or
xchg
ds
pop
or
daa
xchg
pop
push
mov
sbbl
xchg
test
lds
aas
cmpsl
test
xchg
sbb
rcrb
mov
push
ja,pt
mov
add
mov
pop
cmc
inc
call
fsubrl
xor
popa
das
jecxz
mov
movsl
push
out
push
fimuls
arpl
mov
in
push
iret
into
add
pop
inc
xbegin
push
cmc
jg
mov
jmp
in
xchg
sub
dec
sbb
jb
inc
int
daa
mov
mov
scas
inc
lock
ja
jo
mov
jmp
arpl
aaa
dec
out
mov
lea
sahf
fbld
mov
sbb
adc
mov
sbb
divb
daa
mov
mov
repnz
es
push
popl
dec
inc
daa
mov
aas
cmp
add
test
xchg
cs
pop
ret
pop
dec
pop
rcrl
pop
mov
dec
shrl
cli
cld
xchg
in
stc
add
jbe
mov
scas
loop
cmp
push
gs
xlat
xchg
sbbb
xchg
jns
jmp
in
pop
neg
testb
xchg
scas
mov
mov
push
add
jb
jb
dec
es
pop
xor
das
pushf
lcall
dec
test
fwait
insb
add
dec
push
ljmp
ret
inc
stc
nop
jae
adc
sub
add
fistps
inc
fmulp
into
inc
fdivrl
mov
sbbl
xor
sub
test
mov
pop
dec
leavew
pusha
cltd
mov
mov
xchg
cli
add
mov
int3
arpl
dec
aaa
into
jg
inc
fstl
aam
and
stos
jae
faddl
movsl
cmp
jbe
sbb
scas
inc
mov
cmp
jo
mov
jmp
pop
push
sbbb
ficompl
sbb
lret
daa
mov
jmp
xor
mov
sbbl
addr16
xchg
xchg
loop
or
aad
adc
aam
ss
pop
test
ret
cmc
jl
adc
je
jb
insl
xchg
push
sahf
js
adc
imul
mov
cli
mov
in
loope
push
jmp
jg
lcall
jnp
shrb
roll
je
xchg
sub
repz
cmpsb
sub
fsubs
daa
pop
lahf
pop
repz
fwait
pop
lock
outsb
add
inc
cmp
icebp
cmc
jmp
pop
sbb
nop
daa
jmp
aam
or
gs
fmul
push
popf
sti
pop
mov
mov
gs
lds
cmp
or
loop
jecxz
jp
add
adc
mov
cmc
xchg
push
push
jg
jb
daa
mov
pop
sar
nop
add
cmpsb
cmp
jb
les
js
lods
test
scas
inc
fcmovnu
je
xchg
movsl
sbb
jmp
testl
mov
fwait
lock
adc
daa
lret
setns
inc
jp
jge
bound
sahf
std
mov
addr16
and
dec
or
xchg
insl
inc
fistpl
mov
cs
fisttpl
dec
out
popa
lahf
xor
jl
mov
and
pop
fsubrl
in
cmpsl
cmp
push
icebp
mov
scas
adc
rolb
leave
xor
push
push
out
mov
pop
mov
lods
jb
fildl
nop
sub
rcrl
or
xchg
jge
pop
cmpsl
shrl
jl
xor
sarb
cmpsb
jg
xlat
outsb
push
mov
cmc
mov
lret
sti
inc
imul
dec
xchg
xchg
leave
outsb
push
out
ljmp
rcr
scas
inc
unpckhps
std
test
mov
mov
sbb
jl
sbb
mov
sub
lret
sbb
in
jl
insl
insb
outsl
push
lahf
jo
in
popa
pop
cltd
xor
dec
stos
inc
jg
nop
daa
pop
sti
fnsave
mov
cmp
int
scas
pushf
icebp
mov
mov
and
push
ds
push
call
pop
hlt
add
xor
adc
add
cmp
add
stos
ret
pop
sbb
sahf
xor
push
and
xchg
notb
mov
inc
or
mov
mov
aad
mov
xchg
stc
push
jmp
sbb
fistl
xchg
xchg
sub
mov
ljmp
add
jb
loop
std
xchg
push
movsb
cmp
push
mov
test
aad
inc
loopne
je
jl
push
hlt
ljmp
mov
stc
nop
cmc
xchg
cs
cmp
jmp
in
jl
fidivs
sbbb
or
push
jle
xchg
sub
aam
dec
push
xor
aam
shl
repnz
sbb
jbe
xchg
xor
mov
mov
cltd
sti
in
ret
cmp
in
aam
hlt
add
les
cmc
clc
mov
or
and
shrl
adc
pop
inc
sub
aam
xor
mov
popf
out
add
test
cmpsl
xchg
das
mov
mov
dec
jecxz
cmp
ja
cld
xchg
int
cltd
xor
sub
out
cmpsb
stos
inc
fldz
sbbl
shl
test
aad
out
leave
sbb
mov
leave
cmpsb
cmp
mov
mov
sub
xor
inc
lods
jecxz
notb
add
clts
jecxz
rcl
mov
lahf
xlat
jbe
dec
test
gs
fsubrs
out
popa
ljmp
sbb
es
push
out
adcb
leave
sub
cli
adc
jno
jge
cmc
scas
mov
push
sub
push
xor
or
call
dec
andb
adc
je
in
aaa
xchg
divl
jg
jns
and
sti
push
sub
test
mov
repz
mov
add
andb
and
push
lds
aam
mov
sbb
popf
gs
decb
in
cmpsl
push
cmp
cmp
add
es
mul
jno
jno
adc
fisubl
mov
pop
in
mov
sub
xchg
sub
dec
adc
xchg
xchg
push
out
mov
inc
fmuls
adc
movsb
insl
pop
aas
mov
dec
loopne
aas
add
cs
jge
mov
lea
mov
mov
shrl
jle
fwait
cwtl
loope
lret
sbb
sub
and
and
mov
or
stc
pop
cwtl
call
pop
or
popf
xor
lret
lcall
jl
inc
scas
xchg
outsb
pop
or
js
sbb
cltd
dec
mov
cmp
in
jg
aas
in
lcall
inc
enter
fs
insb
xor
dec
in
cmpsl
lds
pusha
imul
pop
mov
dec
imul
rclb
pop
rep
test
in
sub
mov
out
in
in
inc
xlat
imul
push
rcrl
push
jmp
lret
test
mov
ror
mov
push
out
mov
ss
popa
clc
lods
daa
shrl
sub
fcompl
sub
stos
dec
fucomip
ret
lcall
cmpsl
cmp
sbb
or
jno
mov
or
stc
stos
inc
sub
lods
push
imul
lret
loopne
mov
mov
push
in
test
and
idivl
xor
out
pop
negb
out
insb
imul
int
xor
into
adc
inc
stos
mov
xlat
outsb
popa
xor
shll
out
sbb
adc
dec
xlat
inc
fmull
jg
sahf
jo
dec
out
adcl
stc
add
mov
mov
aam
cli
xor
xchg
jle
pop
adc
adc
push
xor
add
enter
cmpsb
cli
testl
nop
adc
xor
flds
insl
add
jmp
xchg
cs
outsl
rcrl
adc
pop
lock
popf
dec
adc
in
test
adc
cmp
shrl
mov
push
ljmp
iret
data16
push
nop
push
dec
in
push
leave
pusha
mov
sti
xchg
orb
sbb
or
icebp
aaa
into
and
add
clc
ret
mov
or
mov
movsl
cmp
and
rcll
add
sub
mov
and
xchg
lcall
mov
ret
enter
dec
jae
arpl
jae,pn
sbb
jne
fldt
enter
rcrb
inc
lret
dec
inc
addl
enter
scas
sbb
push
popf
aam
inc
pop
or
int3
shrl
popa
test
push
jns
pushf
stos
xchg
mov
pop
out
mov
loopne
cmp
dec
mulb
in
xrelease
in
ja
jmp
sub
mov
daa
mov
pop
cli
gs
jmp
in
push
stc
les
pop
testl
inc
sbb
xchg
mov
xor
jne
mov
aaa
into
das
insl
imul
scas
pop
jb
jl
mov
out
sti
stos
inc
sub
lods
fsubl
jge
movsl
outsb
cltd
incb
adc
pop
xchg
xchg
cltd
mov
aas
adc
jo
push
popf
jmp
sbb
jno
scas
adc
rcrb
lea
dec
jecxz
js
jge
jle,pt
jno
xor
pop
sub
xchg
sub
dec
push
inc
les
jno
cmc
bound
test
pop
ja
pop
mov
repnz
testb
stos
fidivs
xchg
montmul
cmpsb
les
int3
push
cmpl
mov
xchg
cs
aaa
dec
loop
inc
jp
aaa
loop
adc
aaa
push
in
test
xchg
pop
lods
mov
push
dec
les
fiaddl
lds
push
inc
ss
sarl
add
mov
test
jb
clc
stos
das
sbb
movsb
cmp
xor
lds
dec
test
xor
jno
mov
mov
dec
sub
aad
mov
dec
filds
imul
imul
fidivl
cmpsl
lods
inc
fnstcw
es
rcr
fnstenv
xchg
add
rolb
testb
call
lcall
fdivrl
xchg
loope
pop
sti
adc
addb
sti
xchg
push
cmp
imul
subl
add
add
out
out
loop
clc
and
xchg
jg
mov
cmp
mov
xchg
in
xor
push
cmpsl
fdivl
ficompl
or
adc
dec
lret
insb
add
outsl
jne
aas
cmpsl
cmp
mov
jnp
stos
adc
loop
fisttps
rorl
pop
push
in
rolb
push
sarb
shlb
add
mov
call
dec
and
test
xor
ret
dec
xchg
inc
jl
jnp
mov
inc
pop
push
sub
dec
xchg
sub
out
fstpt
push
add
push
mov
push
add
inc
push
adc
push
pop
sub
addr16
aam
add
jbe
xlat
and
mov
das
icebp
fidivrs
xor
fwait
dec
xchg
xchg
roll
inc
mov
mov
mov
daa
hlt
in
pop
sti
ss
test
sub
js
loopne
loop
inc
cmp
xlat
xchg
int3
outsl
mov
cld
test
call
cmpsl
iret
xchg
in
inc
jmp
mov
mov
stos
dec
add
cmp
cmp
pushf
lret
add
push
rolb
and
xor
mov
sbb
adc
in
jle
inc
pop
movlhps
sub
adc
test
std
xor
clc
int3
nop
jno
cmp
call
cli
mov
mov
ss
dec
fwait
jge
jmp
mov
dec
xorl
bound
xor
mov
gs
movsb
add
stc
ja
mov
xchg
or
lahf
jne
dec
cli
lods
loopne
leave
nop
push
push
fwait
outsb
repz
lahf
inc
lods
mov
mov
cld
mov
pop
mov
aaa
dec
fdivrl
pusha
push
aaa
movsb
cmp
lret
scas
sub
aas
xchg
cmp
cmpsl
addl
xchg
mov
mov
lock
mov
xor
adcl
xchg
pop
sbb
sub
cmp
ret
push
or
sub
pop
cld
mov
xchg
adc
pop
jp
and
sub
cmp
jbe
mov
insb
jnp
rcll
mul
and
popl
and
push
jb
or
sahf
aas
in
mov
sub
pop
add
arpl
sub
ja
and
mov
jns
bound
push
ret
aam
mov
sub
rcr
mov
or
fidivl
mov
push
add
out
cmpsb
not
ret
or
pop
jo
inc
lcall
sbb
aas
sahf
inc
inc
dec
or
dec
xor
in
jo
pop
jl
mov
mov
push
icebp
int
fs
mov
sub
movsb
dec
or
arpl
dec
pop
mov
or
subl
inc
sar
je
mov
or
pop
xchg
bound
iret
inc
adc
mov
aas
popf
xor
inc
sub
pop
and
xchg
imul
inc
shrb
cmovle
out
nop
inc
sbb
dec
mov
cmpsl
mov
adc
mov
sbb
jbe
dec
test
dec
jnp
cmpsb
inc
insl
or
lcall
sbb
int3
and
sbb
inc
ja
out
inc
rcrl
sub
pop
or
mov
cli
scas
lea
loop
out
cwtl
js
jge
mov
fwait
lea
rcll
clc
sbb
push
and
test
lock
lea
out
mov
into
popf
cmp
ds
mov
int3
cltd
mov
push
pop
cmc
sbb
mov
jbe
rcll
cmp
into
fistl
cwtl
xor
mov
push
imul
ja
repnz
push
push
scas
loopne
bound
in
enter
testb
mov
call
int3
adc
and
pop
and
push
push
je
xor
push
push
loopne
incb
dec
stc
outsb
pusha
outsb
dec
xor
sbb
cmp
outsl
sub
sub
sub
lcall
and
xchg
or
test
pop
das
test
pop
add
mov
push
mov
movsb
pop
push
pop
mov
and
cwtl
pop
ljmp
xchg
lods
int
fwait
push
ja
adc
repz
mov
pop
adc
loope
imul
ljmp
sbb
push
xchg
cmp
mov
mov
std
push
mov
addb
rolb
sti
xor
mov
inc
xor
lcall
out
push
or
cmp
sbb
sbb
cmp
frstor
ret
pop
pop
lcall
xchg
repz
jb
aam
lock
cmpsl
je
aam
adc
xchg
inc
pusha
add
mov
out
xchg
pop
xchg
repnz
fistl
mov
loop
sti
cli
sub
xor
negl
push
and
lret
xchg
mov
es
incb
xor
into
push
aad
mov
lret
jns
xlat
in
inc
push
lds
inc
adc
jecxz
mov
daa
jno
or
xchg
rcll
mull
pop
sar
inc
mov
jae
pop
out
fldl
mov
repz
xchg
fists
bound
dec
jl
imul
sbb
iret
inc
pop
pushf
lret
int3
xchg
mov
xchg
fisttpll
sbb
jmp
repnz
scas
push
test
std
dec
shll
sbb
stc
sub
sub
jle
dec
loopne
mov
push
leave
and
test
es
push
jmp
jp
je
leave
pushf
rcrl
xchg
cs
fildll
inc
mov
jge
out
js
xchg
in
mov
out
fld
and
or
push
cwtl
sub
sub
mov
fbstp
push
mov
push
cltd
bswap
loopne
mov
fdiv
repz
ret
mov
syscall
enter
out
sbb
test
das
and
jge
sbb
adc
das
gs
into
cmp
in
das
and
loopne
xor
aad
push
ss
jo
mov
jg
xor
es
mov
mov
and
mov
test
sub
mov
jno
xchg
mov
mov
lret
mov
sub
aam
add
idiv
xchg
repz
outsb
cmp
int3
lods
dec
push
outsl
dec
mov
mov
xorb
ret
cmpb
xchg
inc
mov
adcb
xchg
jg
ljmp
xor
mov
mov
mov
das
mov
loopne
mov
rorb
mov
out
test
fsubs
dec
pushl
push
push
or
jge
mov
pop
cli
adc
scas
daa
pusha
dec
dec
lds
out
and
sub
jge
iret
aaa
pusha
xor
push
jbe
sbb
mov
scas
xchg
add
jne
sub
mov
jle
inc
sbb
add
ss
fists
jmp
fmull
nopl
stos
fucomip
push
mov
out
adc
sbb
mov
dec
jge
or
pusha
pop
mov
sub
mov
sub
sarl
push
repnz
imul
push
inc
inc
adc
sub
imul
stc
lds
mov
adc
loope
orb
xor
adc
or
push
adcb
mov
sahf
xor
and
inc
leave
pusha
jns
fidivl
lcall
nop
in
add
or
aas
imul
aaa
xchg
xchg
les
inc
mov
movsl
cmp
lods
into
test
ret
pop
push
jmp
fmuls
or
adc
jge
sbb
fmul
test
shrl
pop
icebp
movsb
pop
pop
jns
push
mul
jl
jae
movsl
dec
add
clc
pushf
and
pop
mov
jp
out
stos
pop
arpl
cmp
jne
pop
sbbl
adc
add
paddusb
or
xchg
xchg
pop
cmpsb
cmp
out
rolb
lahf
mov
xchg
sub
pop
pop
mov
and
out
scas
push
or
add
jo
pop
in
stos
adc
add
paddusw
mov
cmp
xchg
xchg
pop
cmpsb
cmp
out
iret
loopne
aad
imul
lds
mov
push
dec
jecxz
fisubrs
adc
mov
add
sbb
and
mov
cmpsb
out
inc
fcomps
enter
inc
pop
divb
lock
std
xchg
les
movsl
mov
ret
sub
hlt
cmp
shrb
dec
loope
mov
mov
fdivl
push
mov
adc
pusha
lea
mov
iret
sub
add
cmpb
pop
mov
add
stos
ljmp
stc
pop
arpl
or
sub
lds
cmp
push
mov
je
jmp
mov
lret
sti
out
popa
sbb
call
frstor
shll
and
adc
sbb
inc
fldenv
mov
divl
jle
pop
push
fidivs
sub
xchg
jnp
push
lods
mov
mov
into
fsubrs
pop
cmp
cmp
testb
je
stos
movsl
stos
jne
ffree
xor
idiv
xchg
sub
sbb
dec
push
mov
subl
popf
movsb
iret
data16
mov
in
test
adc
jnp
fnsave
aaa
into
int
clc
fldz
push
ljmp
lds
push
jmp
xchg
dec
loope
push
stc
fwait
in
add
adc
dec
aaa
outsb
add
js
sbb
mov
fsubr
or
cmpsl
jl,pt
fidivs
daa
xchg
sub
add
nop
je
xchg
jg,pn
mov
sub
rcrb
mov
or
aas
adc
data16
push
dec
pop
icebp
jns
nop
daa
fs
outsl
pop
test
in
sbb
jnp
stos
shrl
xor
lock
shrb
push
dec
in
jecxz
dec
aad
insl
add
testb
orb
jmp
cmp
push
les
or
mov
mov
in
mov
sti
mov
or
cwtl
mov
ret
fsubrp
fcmovu
jb
push
cmp
jg
jns
ret
mov
pop
mov
xor
movsb
xchg
lods
inc
rol
mov
std
fadds
leave
cmpsl
in
in
testl
out
mov
push
out
add
mov
mov
fnsave
movsl
cmp
stos
or
mov
fimull
mul
in
or
or
jmp
adc
test
mov
xchg
cmp
scas
test
lret
mov
fnstsw
iret
xchg
xor
psrad
aaa
into
push
add
fdivl
int
mov
inc
fildl
icebp
ja
sub
gs
lcall
lcall
sbbl
lods
popa
movsl
cmp
repnz
fisubrl
jne
pop
addr16
pop
movsb
mov
stc
stc
cmp
in
sbb
mov
mov
push
scas
sti
xchg
xlat
aas
into
gs
gs
icebp
rolb
ret
lods
sub
out
in
push
mov
aam
jo
jmp
or
je
sahf
in
adc
pop
repnz
xor
mov
les
lret
dec
xlat
mov
xor
fsubrl
jecxz
std
xor
out
das
outsb
add
cmpb
cmp
cmc
mov
cmp
mull
jae
mov
fprem1
mov
sbb
lods
push
mov
pop
lock
push
in
sub
pop
out
xorl
xchg
movsb
mov
shrl
jo
test
lret
mov
fmull
mov
data16
push
out
cmp
leave
cmp
cltd
xor
test
xchg
xchg
es
adc
mov
add
lahf
ss
mov
cmp
mov
movsl
dec
cli
cmp
das
jo
frstor
push
popf
cmpsl
cmpb
stc
mov
sub
sbbb
cmpsl
mov
sbb
pop
hlt
cmp
cs
int
sbb
or
insl
shlb
pop
xchg
repz
hlt
in
cmpsb
cmp
jbe
mov
in
or
lret
bound
sub
lea
ds
cmpb
mov
outsl
push
inc
pop
imul
push
sub
in
data16
icebp
mov
mov
ljmp
cmp
mov
outsb
aas
lcall
js
push
loop
inc
add
or
push
lret
popa
clc
push
mov
mov
xchg
sub
js
push
sbb
gs
sbb
xor
aad
jmp
imul
in
jae
mov
push
sub
ds
addr16
out
test
mov
incb
xchg
pop
pop
fs
test
outsl
insl
and
cli
xchg
add
or
sub
int
popf
leave
mov
jnp
push
xchg
mov
inc
pop
icebp
test
lods
dec
sub
pop
insl
pop
negb
ds
orb
or
roll
cmpsb
xor
pop
mov
sarb
push
movsb
lret
cmp
mov
fstpl
movb
clc
loope
cltd
xor
add
push
out
dec
in
xchg
adc
insl
xchg
sub
popf
xor
dec
xchg
sub
std
call
push
mov
or
xchg
xchg
cmp
sbb
mov
pop
or
xor
in
sbb
ljmp
movsl
shlb
roll
cltd
ret
fnstsw
pop
mov
aam
sub
shrl
inc
fstpt
gs
inc
lcall
or
inc
fcom
rcl
mov
xor
test
dec
shrl
in
rcl
adcb
imull
call
or
fwait
cld
popf
popa
clc
push
lcall
mov
ret
mov
cmpsb
cmp
lds
insl
add
out
xchg
fsub
imul
cli
jmp
in
mov
adc
or
outsl
push
mov
nop
daa
adc
and
xor
pop
movsl
sbb
mov
fidivs
fadds
leave
cltd
aam
in
ljmp
loope
push
inc
rorb
push
lods
jg
push
cmpsl
mov
inc
fstpt
xor
mov
frstor
leave
mov
mov
sub
test
lret
xchg
std
jmp
jmp
sar
jle
push
pop
orb
mov
sub
push
mov
cmpsl
or
popf
xor
stc
pop
rcr
cmp
int3
js
jl
in
push
fisttps
xor
lds
lret
xchg
sbb
and
jb
cwtl
lds
mov
sub
cmp
jge
pop
inc
fisttpll
hlt
mov
je
popa
or
mov
adcb
ficompl
mov
adc
or
sbb
add
dec
shrl
int
lods
mov
fistpll
rcl
stc
mov
fninit
shrb
add
dec
xchg
and
popa
fwait
sub
lcall
test
dec
loopne
inc
loopne
movsb
sbb
push
push
mov
data16
xchg
addr16
mov
stc
push
aaa
into
jae
stc
nop
mov
pop
icebp
dec
lods
pop
mov
jecxz
fistps
rclb
es
inc
lcall
pop
insb
fidivs
jns
imul
js
xchg
sub
adc
data16
nop
daa
xchg
sbb
cmp
sbb
push
aaa
shl
mov
pop
push
in
dec
mov
mov
imul
add
push
cmp
loope
xchg
sahf
xor
adc
jno
clc
xor
adc
mov
aad
sti
lds
mov
frstor
lahf
adc
rep
sub
enter
inc
repz
imul
cmp
push
xchg
pmaxub
js
jp,pn
jl
xchg
into
gs
xor
gs
mov
push
loop
fnstsw
or
pop
loop
sti
cmp
out
cwtl
in
popa
mov
sahf
outsl
push
adc
pop
call
adc
jmp
sub
pop
pushf
rcrb
xor
es
je
test
pop
popa
clc
jne
idivl
fs
adc
jg
das
xor
lea
mov
sbb
gs
int
out
xor
sub
jecxz
andb
cmpsb
les
cmp
sub
xchg
fnstcw
fsubrl
push
rorb
enter
cmpsb
sub
pop
aam
ljmp
xor
iret
clc
pop
shlb
ljmp
xor
popf
fiaddl
mov
cmc
lds
mov
mov
mov
xchg
inc
cld
daa
je
lcall
mov
iret
in
sub
pop
sarl
inc
mov
or
pmulhuw
mov
push
in
out
out
and
sbb
push
add
daa
incl
iret
out
fnstsw
popf
xor
insb
cmp
xlat
add
pop
cli
jl
mov
mov
ret
test
cli
mov
enter
sbbl
fwait
lcall
fwait
out
push
mov
pushf
pop
ret
cwtl
dec
sbb
and
xchg
sub
mov
cmc
xchg
or
push
repz
cmpsb
enter
in
cmp
xlat
adc
jmp
fstpt
out
mov
shrb
cmpsl
shll
sub
icebp
sub
lock
int3
ja
jae
ret
loop
mov
inc
jae
imul
sub
fildll
sub
int
fs
mov
mov
sub
or
mov
aaa
jl
fsubrl
into
arpl
ljmp
sbbb
mov
aaa
cmpsb
push
fnsave
mov
xchg
sbb
je
negl
mov
outsb
sti
xchg
mov
rcrl
repnz
push
in
int3
adc
iret
inc
in
jae
pop
push
in
xchg
inc
xchg
add
cmpsl
das
adcl
adc
sbb
and
imul
call
cmp
stc
fidivl
or
aad
dec
sub
call
into
dec
out
fdivrs
leave
push
leave
int
pop
cmp
mov
insb
ljmp
lods
outsb
imul
or
sarl
mov
imul
sub
dec
sbb
shrb
hlt
xor
and
inc
push
call
push
cltd
outsl
push
lret
aaa
sub
push
mov
mov
fsubrl
or
xchg
sbb
add
pop
pop
mov
mov
pop
fiadds
xchg
scas
xor
popa
iret
sbb
add
cmp
push
fwait
xor
je
out
movsl
sub
or
scas
sbb
ja
or
adc
arpl
cmpsb
xchg
dec
xchg
jl,pn
sub
dec
iret
pop
dec
jecxz
lock
and
mov
dec
jne
ret
pop
loope
xor
int3
add
sahf
xor
add
aas
cmp
jo
stos
inc
loop
xlat
outsb
lds
in
xorl
mov
mov
jo
push
addr16
fisttpll
stc
das
fsubr
test
inc
mov
mov
pop
daa
mov
sub
aam
xchg
rcrl
bound
insb
repz
mov
call
out
dec
and
ficompl
les
cmc
mov
mov
int
je
xor
mov
pop
stc
push
pop
loope
sti
xor
repnz
xchg
add
shll
mov
push
jp
push
add
and
cmp
sub
xchg
dec
enter
mov
sti
xor
push
cld
dec
jmp
sti
pop
push
jo
jmp
pop
sbb
mov
in
dec
mov
mov
enter
repnz
jge
xlat
mov
mov
lret
insb
daa
ja
arpl
sub
stc
cmp
jge
dec
out
aad
addb
mov
and
jp
jl
es
cmp
das
or
daa
loopne
scas
push
js
jg
sti
fwait
xor
clc
pop
ret
sbb
in
xchg
lahf
pop
cmpsl
add
imul
stc
sbb
pop
dec
aaa
int
jle
dec
mov
push
out
rcl
imul
and
xchg
jne
mov
lret
ret
add
rcrl
dec
jecxz
cmp
je
je
add
lret
mov
sti
loope
stos
adc
stos
inc
push
xor
cmpsl
inc
js
lods
arpl
les
mov
loop
push
bt
add
jo
mov
xchg
inc
xlat
hlt
movsl
mov
cmc
dec
divl
add
dec
jecxz
jl
cwtl
das
lock
repz
adc
push
inc
lock
jo
inc
xor
xor
mov
push
stos
mov
sbb
xlat
outsb
mov
fdiv
xchg
and
jo
jnp
imul
jo
push
adcl
inc
cmp
jle
cmp
and
cld
jmp
iret
inc
das
js
fidivl
jmp
pop
add
loop
lock
xor
popa
test
xor
jb
nop
insl
imul
jno
fwait
xor
in
jno
stos
mov
clc
iret
cmpsb
cmp
pop
xchg
es
or
lcall
sbbl
xchg
mov
or
mov
das
rol
pop
ret
fisubrl
lret
jbe
xchg
data16
bound
and
jg
or
and
pop
in
add
jns
test
imul
es
jb
int3
outsb
add
xchg
push
mov
outsl
mov
sub
nop
rclb
mov
test
inc
sub
sahf
xor
lcall
lahf
iret
mov
jae
pop
aad
bound
sub
or
sahf
inc
adc
lcall
jb
popf
mov
cmp
loopne
jne
cwtl
dec
jmp
orb
das
xchg
and
imul
jmp
stc
xor
icebp
mov
push
sbb
test
lret
sti
test
enter
or
fcomps
push
mov
jmp
sub
add
push
call
adc
adc
cmpb
inc
ret
clc
je
outsl
push
int
pop
aaa
imul
clc
mov
mov
pop
lock
sub
movsl
mov
pop
repz
aaa
into
inc
push
push
out
arpl
xchg
lds
mov
aaa
int3
pop
cli
xchg
dec
cwtl
xsha1
cmpsb
or
push
sub
cs
mov
mov
sar
mov
nop
repnz
xor
dec
push
dec
mov
fs
dec
stos
inc
add
xchg
lock
das
and
lds
mov
stos
popa
repnz
out
push
jne
inc
int3
hlt
mov
adc
pop
xor
int3
out
ret
leave
mov
fldt
mov
push
leave
inc
fcom
xor
xlat
leave
xchg
cltd
xor
inc
add
mov
push
jmp
xlat
insb
push
movsl
ds
sub
test
or
cmp
jne
add
add
inc
fcompl
mov
insl
add
xor
lahf
mov
loope
mov
cltd
push
cmp
or
xlat
outsb
stos
outsb
mov
mov
sarl
lret
add
pop
jl
jmp
mov
ret
pop
iret
aam
add
and
adc
imul
push
jno
jne
mov
xor
mov
pusha
shrl
mov
nop
daa
loopne
sub
ret
pop
adc
pop
sahf
mov
pop
leave
dec
test
xchg
ljmp
lock
pop
jo
cmpsl
js
ss
insl
test
andb
jbe
fsubr
popf
nop
mov
jne
shl
sbbl
repnz
shlb
xor
hlt
sbb
cmp
mull
dec
add
mov
dec
test
scas
nop
dec
lcall
pop
outsb
add
ljmp
lcall
roll
das
ds
loope
out
mov
mov
imul
mov
mov
and
dec
add
imul
movsb
cmp
xchg
sub
xchg
sub
xlat
ret
pop
or
shrl
sub
ja
outsl
xor
pop
push
or
sbb
xchg
sub
mov
or
insl
adc
testb
loope
rcll
test
pop
stos
add
pop
loope
rolb
and
mov
lods
repz
dec
or
push
sbb
leave
pusha
sbb
int
rclb
fidivl
sbb
out
push
negl
mov
js
add
jne
push
ret
sub
jns
xor
sbb
ret
ljmp
fnstsw
mov
sub
xorl
inc
add
mov
mov
dec
lods
pop
ret
adc
mov
fimuls
inc
es
adc
pop
arpl
stc
mov
sub
add
xlat
xchg
xchg
aad
shl
push
movsl
adc
imul
fistpl
out
cmpsl
sub
scas
xor
fists
jg
inc
incl
sub
insb
add
lcall
dec
loop
pop
adc
add
lea
movsl
ret
cli
cli
mov
cmpl
add
enter
aas
repz
icebp
jp
imul
stos
int
or
fdivrl
sbb
or
cmp
xor
mov
or
jl
jne
call
ja
inc
add
mov
pusha
adc
test
and
jle
jne
mov
mov
dec
xlat
ds
jbe
iret
jp
insl
add
fwait
push
fadd
push
cltd
xor
xor
sbbb
or
mov
or
lret
stos
xor
rolb
push
mov
mov
push
addr16
or
mov
pop
out
mov
fiadds
pop
movsb
test
adc
scas
inc
sub
adc
xor
sub
inc
je
mov
inc
xlat
and
or
pop
imulb
add
adc
pop
dec
loopne
test
mov
std
inc
dec
loop
push
pop
inc
sub
xchg
cmovae
adc
sub
test
dec
sbb
aad
imul
sarl
repnz
mov
mov
cmpsb
ja
sahf
daa
out
das
outsb
lcall
std
aad
int3
andb
add
es
stos
mov
das
lahf
mov
jge
ror
mov
movsl
cmp
lret
jbe
sub
xchg
xor
pop
jno
xchg
inc
in
push
nop
mov
xor
sub
lods
test
jnp
dec
cmp
jl
pop
repnz
inc
xchg
jae
mov
pop
xor
push
mov
xor
sbb
call
mov
jb
aam
adc
xlat
icebp
inc
hlt
sbb
movsl
dec
insb
bound
inc
xchg
lcall
jne
jno
ss
adc
aaa
push
inc
fistl
pop
in
insb
add
dec
adc
movsl
cmp
lahf
aam
xor
cmp
sbb
mov
shlb
clc
xor
arpl
popa
inc
add
mov
mov
adc
cmpsb
lret
mov
add
aad
push
jbe
sbb
sub
adcb
cltd
push
gs
daa
and
ja
adc
fwait
and
loop
add
push
sahf
cmp
mov
in
popl
lods
and
lret
and
dec
stos
and
ret
add
lea
xor
mov
dec
add
mov
nop
outsl
stc
pop
xchg
dec
xchg
sti
data16
pop
ficoms
leave
cmp
inc
movsl
mov
enter
cmp
lock
loop
inc
aad
mov
sbb
stos
sub
xor
jae
mov
js
jle
adc
lahf
arpl
inc
cmp
fwait
jg
or
cwtl
orl
cmp
orb
ljmp
sbb
add
mov
dec
mov
int
adc
inc
cli
sub
push
sti
call
rcrb
out
shrl
pop
je
inc
pusha
into
jo
imul
cmp
push
or
push
pop
les
clc
push
pushf
sub
mov
cmp
or
jne
jge
outsb
andl
adc
cwtl
lods
mov
and
icebp
pushf
add
cltd
adc
repz
push
cmp
jb
loopne
outsl
js
jge
cmp
bound
pop
int
push
fwait
pop
xchg
popf
pop
pop
repnz
repnz
out
fmulp
movsb
ds
sahf
cmc
psrlw
mov
fsts
cmp
fisubrl
aam
scas
lahf
lods
pop
dec
lea
pop
icebp
push
mov
inc
cmc
cwtl
jno
cld
test
outsl
push
fmul
adc
adc
or
xor
push
or
insl
jnp
mov
popa
pop
cmp
inc
call
lahf
or
inc
cmp
pop
jle
rolb
mov
xchg
je
xor
dec
loopne
pop
sahf
popf
fsubs
pop
mov
inc
dec
xor
push
sbb
pop
pop
adc
fisubl
add
aas
js
jg
sub
sub
xor
out
push
test
aas
jns
adc
add
xchg
ss
cmpl
sub
mov
in
inc
lahf
add
sub
inc
jbe
adc
fnstenv
mov
ret
pop
popf
sub
popf
add
adc
mov
mov
ja
mov
lea
jo
lock
sub
xor
loope
aad
arpl
sub
jo
or
xchg
loopne
and
xchg
jb
or
in
inc
lods
out
xor
jne
sysenter
lret
inc
lods
or
addr16
fidivs
mov
xchg
inc
adc
inc
dec
xchg
addb
add
je
movsl
mov
int
mov
icebp
in
js
xchg
mov
and
fcom
xchg
xlat
stos
jns
cmp
xchg
nop
cwtl
je
jl
mov
les
cli
push
sub
js
shr
xchg
ds
dec
cwtl
or
inc
lods
mov
xchg
insb
and
xchg
mov
jle
dec
mov
jl
jnp
fld
out
sub
inc
sub
mov
or
and
or
dec
loop
xor
cmp
xor
sub
out
xchg
jne
xchg
nop
add
sub
add
inc
cmp
rolb
jae
jbe
enter
sahf
cmpsb
lods
shrl
dec
cltd
and
jecxz
add
out
insl
adc
stc
pop
cmp
or
repz
inc
fyl2x
hlt
rcrb
dec
loop
pop
es
jp
rcll
hlt
pop
lds
test
loop
sub
jns
ret
pushf
pop
sub
xchg
das
xchg
in
stc
adc
test
adc
pop
outsb
into
ljmp
jno
test
fldt
mov
cs
sar
cmpsb
test
aas
scas
push
and
mov
fwait
pop
sahf
int3
push
aad
fwait
mov
dec
dec
data16
inc
dec
ret
aaa
hlt
fisubs
int3
and
fwait
sub
jecxz
subl
pop
push
into
leave
in
hlt
pop
and
leave
test
mov
stc
sahf
mov
inc
jg
pop
sbb
stos
jp
sbb
dec
outsb
or
insl
dec
cld
mov
inc
popf
std
xor
lock
jmp
mov
sub
insb
adc
jb
inc
daa
fnsave
fwait
inc
stos
fs
sarl
cld
jb
call
or
bound
inc
fnstenv
dec
jmp
outsb
popa
push
shrl
mov
leave
mov
scas
inc
mov
sti
inc
adcb
add
adc
xlat
adc
jp
cwtl
leave
fcoml
xchg
push
push
int
lock
mov
cmp
imul
push
xor
scas
and
mov
or
movsl
lahf
ss
xchg
cmp
adc
push
inc
and
push
lock
ja
or
push
std
dec
xorl
mov
dec
test
dec
inc
fcmovb
sbb
push
mov
out
push
sarb
inc
int3
shl
adc
fistps
idivl
adc
mov
es
bnd
ja
xor
jae
ljmp
dec
popa
dec
testb
jo
stc
inc
shll
in
inc
sub
lahf
repz
jle
imul
ds
pop
dec
cmp
aas
cmp
add
dec
and
mov
push
aam
pop
dec
aam
stc
cmp
arpl
mov
mov
add
les
int3
insl
lds
or
mov
ds
and
aaa
or
jmp
divl
xchg
popf
test
mov
jns
lcall
mov
or
ficomps
sbb
cwtl
out
mov
and
xchg
mov
jp
test
stos
mov
add
repz
jns
sbb
int
and
dec
lret
imul
fisttpll
pop
int
fsubrs
pop
add
add
subb
dec
jne
fldenv
mov
ds
jle
sbb
cmp
jae
lahf
xchg
cmpsl
and
in
jp
mov
repnz
scas
sbb
lds
xchg
mov
rcrb
frstor
std
xor
inc
dec
lcall
out
or
dec
iret
fistps
inc
ret
mov
sub
adc
notb
xor
mov
subb
ljmp
inc
ror
jecxz
movsl
mov
or
xchg
insw
adc
loopne
cwtl
das
or
cmp
lea
sti
std
inc
add
in
in
or
pop
mov
xor
daa
mov
test
lret
scas
insl
adc
popf
push
mov
mov
mov
sahf
and
es
lods
mov
stos
mov
inc
push
or
scas
dec
mov
ja
mov
test
mov
movsl
dec
mov
data16
mov
inc
fisubrs
push
push
sub
movsb
xchg
movsb
imul
jne
pextrw
out
push
xchg
call
in
scas
xor
jmp
add
jnp
sub
sbbb
jg
pop
repz
pop
in
stc
sbb
ret
cmc
mov
imul
rcll
out
cmp
pop
les
mov
jle
cs
xchg
addr16
xchg
inc
pushl
stos
pop
mov
push
adc
aad
inc
pop
nop
stos
dec
mov
fcmovu
pusha
arpl
sub
fildll
lret
add
ljmp
jp
push
test
aas
mov
mov
dec
jmp
mov
leave
cld
sub
inc
sbb
fwait
mov
jne
xchg
insl
or
add
cli
imul
into
stos
xchg
xchg
mov
adc
add
outsl
jle
arpl
xchg
pop
rclb
das
enter
cmpsl
lcall
mov
mov
sub
mov
or
xchg
mov
dec
inc
fwait
scas
testb
cli
leave
xorl
or
rcr
add
sarl
pop
fwait
jp
int
rorb
xrelease
fldt
push
negl
scas
jbe
mov
rcrb
xor
mov
pop
jl
sti
test
lea
dec
imul
mov
aad
jae
dec
out
add
in
aam
mov
test
push
bound
sti
pop
call
xchg
nopl
push
mov
add
fnstsw
sub
movsb
jbe
mov
mov
shll
mov
jp
inc
fstpl
pushf
mov
jge
xchg
xor
in
dec
lock
adc
stos
mov
hlt
ret
xchg
cmp
fimull
nop
cld
adc
gs
loopne
jmp
aad
xor
adc
imul
out
sbb
push
aas
xor
xor
negb
adc
xchg
nop
and
cmc
into
gs
repnz
lods
loopne
mov
popa
mov
outsl
aaa
cmc
sti
xchg
daa
mov
pusha
add
sbb
repnz
ret
aad
ret
mov
cmp
xor
lret
pop
xor
jbe
test
dec
imul
sbb
outsb
scas
dec
cmp
mov
out
out
adc
js
stc
or
jns
jge
fsubrs
sahf
pop
loopne
jbe
sahf
popf
jmp
sub
scas
hlt
es
clc
leave
lock
adc
mov
cmp
sub
mov
cmc
mov
push
loop
sbb
insb
add
sub
inc
scas
lock
and
shll
mov
or
mov
stos
add
test
pop
or
or
pop
repnz
cwtl
enter
xchg
into
bound
mov
jnp
pop
clc
test
xor
and
cltd
test
test
out
xor
mov
out
std
dec
xchg
loopne
adc
jb
das
mov
les
inc
shlb
or
jp
je
sub
fidivrl
lea
cmpsb
mov
xchg
cmc
mov
pop
add
rolb
sbb
cs
lret
inc
fmull
xchg
mov
jl
lret
les
jb
lahf
fmuls
push
iret
push
xchg
aas
ss
mov
cmp
mov
mov
je
sarb
dec
out
loopne
push
mov
lret
adc
and
sub
add
push
test
push
mov
jle
rol
pop
add
lods
push
cmp
xchg
montmul
cmpsb
inc
sub
dec
xchg
pop
repnz
mov
mov
lds
ret
mov
icebp
mov
stos
inc
ficompl
mov
xchg
sbb
xchg
fwait
xor
mov
and
pop
mov
test
xor
inc
dec
movsb
dec
shr
es
jge
xchg
aad
push
std
cli
jp
mov
jmp
int3
mov
ljmp
jno
jp
fwait
inc
mov
and
pusha
aam
adc
into
cwtl
jne
cli
imul
pop
mov
das
cmp
jbe
std
xor
sahf
or
xor
aad
mov
xor
sahf
xor
fisubrl
data16
push
mov
nop
dec
or
insl
cmp
pop
into
gs
mov
mov
push
push
xchg
dec
aas
lcall
fwait
pop
cmp
fbld
mov
in
inc
pop
cmc
xor
test
and
rclb
cs
insb
add
jg
sbb
fnsave
xchg
cs
mov
test
dec
insl
add
aas
xlat
dec
mov
xorl
push
sub
enter
aam
das
fidivrs
add
mov
jle
mov
mov
fmul
adc
dec
cmpsb
sarl
shrl
or
je
mov
sub
cmp
mov
cmp
jbe
pop
mov
and
jge
pop
inc
and
insb
js
std
xchg
cmp
xchg
lret
pop
sbb
pop
lret
rcll
das
dec
les
push
push
mov
loop
mov
pushf
cli
or
loop
pusha
lcall
std
sub
and
sub
js
outsl
jmp
cs
push
rcrl
sbb
mov
or
sbbb
test
cmpsl
cmc
pop
mov
test
mov
sti
orb
cli
add
jmp
in
shrb
je
into
addr16
and
sbb
shrl
cmp
lahf
ss
fabs
js
adc
add
aas
mov
fidivs
je
cltd
addr16
rorb
call
jno
adcb
xchg
and
jecxz
jmp
scas
add
sbb
fidivrs
cmc
mov
cmp
xchg
inc
xor
aaa
into
jns
push
addr16
stos
sbb
cmpsb
lret
ffreep
cmp
sbb
pop
repz
cmp
sti
mov
dec
loop
sbb
mov
xchg
lea
xchg
dec
pop
inc
fcoml
push
movsl
xchg
add
int
dec
jmp
das
test
add
jecxz
pop
std
add
jmp
xor
push
mov
add
or
jb
sub
in
push
lods
push
and
push
das
xor
pusha
jb
add
xchg
mov
add
test
inc
xchg
sub
cmp
add
repz
cmovns
inc
inc
push
popf
dec
addr16
test
stos
inc
fcmovnb
gs
xchg
loope
mov
mov
add
fcomi
xchg
fdivp
mov
je
xchg
data16
jmp
mov
jmp
jmp
test
cmpsb
cmc
sub
out
movsl
stc
nop
pop
cmp
aas
mov
mov
cli
test
in
dec
sahf
or
leave
cmp
adc
xor
jmp
adc
xchg
flds
insl
nop
inc
mov
mov
aas
dec
popf
xor
aam
adc
nop
sub
out
xchg
add
mov
stc
and
clc
cli
daa
addr16
xchg
mov
cld
and
xchg
nop
mov
add
outsl
push
xchg
mov
and
cmp
fwait
rclb
stos
shrl
push
lcall
and
push
lea
fnsave
roll
sbb
push
call
xchg
sub
cmpsl
mov
cmc
mov
jp
enter
loop
lea
or
cmp
data16
arpl
adc
sti
xchg
adc
out
dec
lahf
cwtl
push
daa
mov
push
sahf
xor
sbb
jle
add
movsb
dec
dec
cmpsb
xor
xor
aas
push
sub
clc
or
lret
bound
aaa
cld
sahf
inc
mov
mov
mov
push
leave
ljmp
das
jns
pushf
pusha
xchg
mov
pop
dec
mov
jne
outsl
push
jb
inc
cwtl
cmc
pop
shrb
push
gs
enter
inc
jge
ja
add
mov
add
or
mov
call
or
mov
sub
out
sub
aas
scas
ror
pusha
add
push
mov
mov
stos
pushf
mov
out
je
stos
jae
fmul
mov
add
stos
shl
xor
jecxz
sbb
adc
ret
mov
divl
movl
dec
rcr
insb
cltd
lods
fidivl
int
into
test
sub
jbe
lds
sarl
rorl
jle
in
inc
aad
sbb
pop
mov
stos
insb
xchg
repz
lds
pop
jb
fisubs
arpl
pusha
or
cld
mov
cmp
lods
mov
cmp
lock
fbld
mov
mov
insb
outsb
jno
pop
dec
loop
sti
mov
notb
dec
mull
sbb
and
cltd
adc
out
mov
imul
push
out
test
push
jne
sbb
rcrl
adc
mov
jmp
das
cmp
mov
push
push
out
mov
ret
movsb
test
notl
test
in
inc
fstpt
jae
arpl
je
push
sub
xchg
mov
jno
jp
jecxz
mov
lock
arpl
inc
popa
push
mov
addb
in
mov
sbb
cwtl
pop
mov
pop
mov
aad
push
push
mov
dec
hlt
dec
cmp
mov
xor
shlb
mov
mov
cwtl
addl
xchg
jns
pop
pop
mov
dec
xor
add
mov
push
pop
dec
push
push
xchg
in
adc
adc
fsts
sub
lahf
inc
aas
int
scas
and
xchg
or
cmp
js
jg
cld
inc
aas
dec
and
push
loope
mov
cli
out
inc
in
ret
rcl
cmpsb
pop
loop
addb
mov
mov
out
push
mov
ja
lods
lods
int3
arpl
sahf
and
ret
shrl
pop
ja
dec
aad
ljmp
adc
sahf
addr16
out
or
sbb
cmp
pop
repz
cs
pusha
mov
mov
cmpsb
hlt
pop
out
and
xor
movsl
gs
mov
movaps
pop
pushf
mov
mov
test
loopne
sub
cmp
cmp
sbb
inc
pop
cmc
jno
xchg
sub
xchg
xchg
xor
cwtl
das
sbb
aas
insl
popf
iret
js
cmp
jno
insl
mov
test
bnd
and
insb
mov
popa
rcrb
inc
xor
ja
stc
nop
outsb
and
jns
pop
jg
outsb
sahf
lahf
cmp
lock
jb
lods
sbb
add
in
cmp
clc
add
inc
jae
adc
push
xchg
and
sahf
xchg
cmp
inc
shlb
pop
les
je
in
jl
mov
pusha
insb
mov
ljmp
sbb
xor
in
ja
push
mov
and
shrl
fmuls
inc
mov
ljmp
jl
mov
testl
or
pop
mov
mov
inc
movsl
cmp
inc
fs
gs
addr16
xchg
mov
inc
cmp
push
jmp
push
mov
add
aam
mov
pop
call
push
scas
or
sbb
add
dec
xlat
int
call
mov
sub
jp
lock
inc
fiadds
daa
pop
mov
sub
sahf
mov
es
pop
cmc
push
in
lret
jp
sbb
adc
inc
or
lea
mov
sub
and
sbb
xor
cmp
xor
mov
push
in
jo
dec
fbld
xchg
fwait
xor
dec
or
scas
jns
in
iret
mov
dec
stc
test
mov
mov
lds
cmc
mov
mov
incl
movsl
mov
mulb
int
pop
ret
sahf
push
in
pop
loopne
lcall
or
scas
inc
jnp
sbb
sub
out
fmulp
data16
mov
xchg
add
stos
inc
or
outsb
insb
sub
and
xchg
stos
inc
leave
cmp
inc
shll
inc
int
xchg
sub
into
gs
fimull
xor
cmp
push
dec
pop
mov
bound
aas
adc
mov
mov
cmp
push
les
cmc
fsubrs
jbe
jns
dec
xchg
sub
xchg
cs
mov
outsl
sarb
dec
loope
and
mov
in
scas
inc
push
push
jbe
fs
cwtl
das
bound
das
fs
sbb
xchg
sub
fnstcw
pop
and
lods
inc
fwait
inc
pop
jbe
mov
sets
pop
mov
dec
pop
lods
mov
adc
dec
xor
cmp
int
daa
mov
xorb
pop
or
stc
nop
inc
sub
mov
inc
fdivrl
lahf
jnp
rcrl
cli
pop
repnz
add
sbb
mov
fists
fidivrs
movsl
cwtl
and
js
push
out
or
das
sbb
adc
sub
sahf
pop
push
sbbb
jge
adc
shr
sbb
stc
jns
mov
mov
adc
xor
aaa
es
sbbl
imul
dec
push
sub
jae
das
rclb
popf
xor
mov
xchg
add
es
mov
jne
sub
cltd
dec
in
push
aad
xchg
movsl
jns
sbbl
lcall
dec
in
inc
xlat
sbb
ds
in
scas
pop
xor
lea
jae
inc
scas
push
lods
fbld
sub
mov
push
ljmp
jno
pop
in
adcl
or
jl
sub
xor
push
inc
fiadds
mov
or
cmp
mov
loop
outsl
andl
cmpsb
out
mov
sbb
int
repnz
push
movsl
sub
add
pop
sahf
movsl
repz
cmpsl
mov
repz
push
enter
mov
and
xchg
insb
add
cmp
int
imul
paddw
scas
ret
lds
xchg
jp
out
adc
loop
sarl
imul
pushf
pop
mov
adc
mov
jns
push
movsl
adc
sarb
inc
add
test
sbb
adc
repnz
insb
sysret
mov
cld
sub
pusha
outsl
in
mov
and
mov
inc
lods
cmp
incb
pop
mov
fucomi
or
jbe
or
dec
dec
add
jns
shrl
or
testl
aad
push
jmp
push
adc
roll
sub
cmpsb
insl
xor
pop
push
gs
inc
in
inc
icebp
or
pop
cwtl
mov
or
mov
jmp
xor
sbb
mov
pop
fildll
add
call
fdivrl
xor
adc
push
jmp
faddl
inc
pusha
aad
pushf
shlb
imul
jmp
add
mov
jecxz
fdivl
cs
lods
and
iret
push
div
scas
ds
xor
inc
or
cld
out
cmp
out
dec
and
fdivrp
inc
mov
jae
fidivl
xchg
iret
gs
shlb
jp
add
push
and
mov
sti
adcl
inc
push
mov
scas
add
dec
jnp
mov
jl
daa
adc
push
out
ret
out
daa
xor
cmpsb
sbbl
stos
and
lds
sub
dec
sub
cmp
into
add
mov
and
fidivrl
push
mov
cmp
sub
rcll
leave
add
sti
pop
cmp
xor
lahf
xchg
push
movsl
lret
aas
cmp
jp
sbb
inc
bound
stos
vucomisd
rcr
repz
sub
dec
push
cmpsb
aam
enter
adc
xor
pop
stos
in
pop
jns
jmp
loopne
add
mov
and
add
jnp
xlat
shll
movsl
hlt
popa
jb
call
lock
and
fwait
insl
dec
lret
leave
pusha
cli
push
mov
pop
lea
dec
cli
dec
ret
cmp
outsl
jb
pop
in
fsubrp
ret
fcomi
or
or
shrl
xchg
jo
sub
test
lcall
inc
pop
lods
mov
jbe
adc
xchg
cld
xchg
cmpsl
and
mov
pop
int
jl
jge
cmpsl
sbb
mov
fs
out
rcll
aad
inc
sti
push
out
sub
outsb
mov
pop
cmpsl
ret
sbb
popa
or
add
movb
insl
lock
rol
imul
jnp
mov
jb
sub
sbb
sub
cli
sub
mov
jp
adc
xchg
sub
xor
sub
xor
das
mov
test
loope
xchg
xchg
icebp
or
push
jno
stc
jg
popf
mov
cmpsl
push
dec
stc
popf
shrl
sbb
inc
fcomi
mov
das
fdivl
std
xor
aam
aad
les
jns
xor
sub
data16
xor
xchg
sub
or
sub
jmp
popa
mov
lock
push
push
push
loop
cli
imul
fldt
dec
cltd
unpcklps
xchg
aam
cld
xchg
push
mulb
lahf
stc
into
js
push
add
insb
jp
jnp
bound
add
lret
mov
inc
xor
leave
push
or
dec
push
rclb
and
aam
fidivs
push
ret
filds
dec
fsts
in
lret
into
into
fdivs
jae
ror
jge
mov
add
stos
mov
pop
dec
imul
xor
shl
jbe
daa
imul
test
dec
pop
fisubrl
iret
push
hlt
sub
shll
and
hlt
repnz
popa
je
xchg
lcall
iret
repnz
and
iret
data16
out
ds
in
std
dec
mov
int3
add
test
out
push
jno
lds
out
inc
mov
int
movsl
divl
mov
mov
scas
and
iret
rorl
hlt
insb
lock
in
push
pop
cld
int
xor
stos
popa
lods
fcompl
cwtl
into
inc
leave
mov
outsb
rcrl
pop
mov
mov
jge
push
pop
lret
pop
std
push
lds
cmp
out
inc
sbb
and
dec
mov
mov
pushf
fdivrs
add
mov
pop
insb
out
fildll
or
dec
out
outsb
bound
mov
or
push
add
or
pusha
push
lret
adc
cmp
mov
mov
testl
sbb
mov
jmp
call
sub
movsl
sbb
ss
mov
stc
test
mov
xchg
dec
les
add
fildl
inc
cltd
mov
xor
inc
mov
hlt
pop
inc
dec
stos
mov
fs
stos
fsub
call
test
loop
sbb
ljmp
mov
cmpsl
shlb
lret
xor
aad
fnsave
mov
cmp
xchg
mov
mov
fistpll
and
mov
ret
ljmp
mov
scas
mov
push
cmc
inc
fisubl
and
cld
push
fldl2t
aas
pop
out
stos
mov
test
fcoml
dec
add
push
pop
push
xor
scas
fstpl
mov
and
mov
fwait
jo
fwait
leave
into
mov
push
clc
int3
mov
mov
inc
xchg
hlt
sbb
xchg
fwait
enter
jle
pop
dec
jmp
out
insb
xchg
stc
in
adc
mov
sub
fistpl
iret
cmp
mov
sbb
stos
in
xchg
push
int
inc
push
loope
dec
in
jmp
ja
daa
mov
inc
iret
ret
cwtl
sub
pop
jl
dec
scas
jns
dec
cmp
dec
mov
adc
mov
dec
in
pushl
popa
clc
rclb
cld
or
les
shll
adc
mulb
lret
mov
inc
aas
lcall
jecxz
pop
push
addr16
adc
mov
in
xchg
pop
fwait
add
mov
cmp
and
push
push
xor
les
add
lock
sub
xchg
add
or
or
rol
mov
insl
ja
add
test
roll
call
addl
rclb
scas
jb
xchg
xchg
sub
push
adc
and
ds
insl
pop
das
dec
xchg
add
testb
lea
sub
add
xor
inc
push
popa
out
test
scas
fidivs
mov
push
sahf
add
rcl
adc
js
cmp
and
sub
jae
jle
rcll
inc
movl
stos
aam
testl
lahf
loopne
xor
out
das
jmp
adc
or
bound
jnp
push
sub
xchg
pop
bnd
cmp
add
xchg
sbb
lods
or
cmp
clc
shlw
xor
insb
fbstp
jge
mov
rorl
hlt
xchg
push
and
push
dec
fs
pop
xor
aas
stos
imull
sub
xor
mov
cmp
lret
dec
cmp
fxch
out
mov
adc
or
in
xchg
adc
sbb
pop
push
pop
addr16
ret
dec
jno
jns
sbb
mov
rol
add
cltd
insl
iret
push
xrelease
ret
push
daa
data16
iret
sbb
dec
cmc
jecxz
sbb
inc
mov
cmpb
iret
aam
push
and
adc
pop
jmp
aaa
sub
call
adc
fldl
int
ret
jmp
push
mov
cmp
xchg
xchg
pop
icebp
hlt
push
jns
popa
hlt
xlat
outsb
andl
mov
lret
adc
je
stc
nop
xchg
xchg
cmp
lret
outsl
arpl
or
and
ja
dec
jo
stc
out
ucomiss
mov
shrl
inc
aaa
gs
cmp
lcall
push
loope
es
push
pop
mov
loop
outsb
cwtl
out
sbb
movsb
jg
xor
mov
dec
loop
xlat
dec
or
jle
sub
out
into
dec
push
roll
pushf
icebp
cltd
add
push
ljmp
jno
idivb
add
scas
leave
movsb
pop
adc
call
es
dec
pop
pop
lcall
insl
push
test
dec
mov
cmp
pushf
stc
into
inc
pop
arpl
icebp
addb
ljmp
and
mov
aad
and
pusha
repnz
std
pop
mov
cmp
push
cltd
and
pop
push
and
adc
repnz
daa
mov
test
or
das
mov
jb
mulb
add
rcll
xor
sbb
ret
mov
loope
mov
xor
pop
dec
jp
mov
mov
xchg
pop
insb
andb
cltd
inc
jp
push
xor
loop
daa
add
in
repz
mov
and
xchg
icebp
mov
sub
xchg
jns
adc
into
ret
inc
pop
cmp
lret
cltd
idivb
push
jmp
sarl
in
out
lods
sub
cmp
aaa
xchg
sbb
xor
mov
dec
sbb
mov
jne
in
mov
cmp
xlat
clc
in
bswap
cltd
sbb
mov
sub
stc
push
xchg
sbb
push
fstpl
test
es
popf
mov
xchg
mov
pop
xchg
stos
or
lds
repnz
lods
and
mov
enter
dec
jmp
sub
ret
leave
ljmp
test
push
mov
fldl
mov
jl
add
push
dec
cmpsl
jo
in
enter
jmp
add
stc
jo
sahf
mov
cmpsb
popa
fidivrs
push
movsb
dec
jg
inc
pop
cmp
in
mov
imul
xor
pop
ret
je
icebp
gs
data16
aas
sub
popa
daa
jle
push
push
lock
jae
je
ret
fidivs
inc
int
shl
jmp
mov
pop
xor
push
mov
sbb
cmp
and
inc
push
out
ja
jns
test
dec
and
pop
xchg
sub
insl
xchg
ss
mov
hlt
loopne
pop
adc
xor
inc
stos
pop
xchg
push
out
dec
pop
and
cmpsl
in
mov
lds
or
pusha
sbb
mov
icebp
adc
mov
pop
inc
jge
sti
sarl
push
stos
dec
and
xchg
ret
xor
jno
arpl
xchg
jb
cmp
mov
lds
cmpsb
dec
jg
cld
enter
sub
imul
inc
add
mov
pop
mov
pop
cmp
cmpsl
insl
mov
cs
pop
imul
icebp
hlt
mov
popf
es
xchg
mov
pop
mov
or
in
pushf
orb
mov
lods
push
in
and
adcb
mov
push
mov
pop
fdivl
cmp
loope
sub
and
dec
and
xor
insl
sub
mov
data16
sbb
push
mov
jmp
fdivrs
mov
rcrl
add
dec
lcall
push
test
inc
fwait
xchg
stc
les
in
jle
push
or
cmp
ljmp
inc
cmc
ljmp
cmc
movsl
xchg
mov
movsb
cmp
cmpsb
sub
scas
scas
es
loopne
sti
xchg
cli
in
pop
mov
mov
pop
pop
cmp
cld
aad
out
cmp
sub
pop
mov
jmp
aaa
or
sbb
mov
sbb
popa
fadd
sbb
sbb
mov
loopne
cmc
xchg
sub
mov
jno
bound
mov
mov
inc
lea
mov
popa
cli
adc
loop
pushf
repnz
sub
or
mov
lock
sbb
or
pop
jno
and
out
daa
adc
push
jmp
movsl
jmp
push
sub
sbbb
lcall
jp
test
andl
or
lret
pop
lret
outsb
mov
jae
outsb
push
rclb
addr16
mov
aaa
push
jmp
cmp
test
pop
push
and
jmp
adc
lds
leave
push
jecxz
test
pop
inc
popf
lret
jmp
inc
add
aam
pusha
sub
in
jl
xlat
sub
iret
add
sbb
test
xor
stos
mov
xlat
sub
xchg
xor
xlat
add
dec
mov
faddp
mov
xor
mov
daa
psrlw
xor
dec
pushf
sub
jae
add
mov
fmull
push
inc
xchg
pusha
mov
mov
jb
cmc
jecxz
sub
or
dec
loop
lcall
pop
or
jg
or
jnp
pop
std
sbb
mov
fnstenv
push
and
adc
pop
ljmp
mov
imul
lods
inc
pop
lcall
cmpsb
in
shll
mov
addr16
cmc
ds
and
fwait
gs
popf
or
dec
cmp
cltd
inc
lcall
sub
gs
cmp
push
inc
xor
mov
fbstp
iret
loop
dec
lret
iret
mov
mov
mov
pop
sahf
inc
fs
aad
and
out
out
imul
data16
ds
dec
leave
pusha
or
jne
jecxz
mov
xchg
xchg
or
cmp
rorl
in
cmp
sbb
out
mov
adc
rcrb
movaps
jne
insb
mov
sbb
pop
out
gs
sub
sbb
jl
sub
mov
dec
pop
inc
and
enter
ficoml
mov
icebp
data16
int3
stc
xchg
mov
inc
xor
insb
cmp
dec
pop
fs
out
add
cmpsb
int3
lahf
jecxz
call
frstor
mov
out
sbb
aad
shlb
pop
xchg
sub
mov
sar
xchg
jmp
jp
aas
in
aaa
das
or
stos
xchg
stc
das
cmpsb
add
sbb
jg
shlb
cmp
push
js
mov
fcmovnbe
ja
push
and
bound
shl
add
sub
cwtl
enter
pop
mov
push
jne
xor
jne
cmp
sub
mov
xlat
ja
mov
adcl
shll
mov
cld
cmpsl
mov
insb
rcl
mov
insb
xor
insb
ror
inc
and
stc
or
push
xor
fsubl
mov
test
and
movsl
add
xor
std
test
fsubl
inc
dec
mov
jmp
shrb
and
mov
dec
pop
lock
mov
sub
dec
into
xlat
pop
lret
hlt
out
and
fs
fcoms
mov
negb
aas
dec
fbld
fnsave
pop
pop
sub
mov
add
inc
das
mul
stc
adc
xchg
jae
cmp
sbb
sbb
test
pop
push
push
push
mov
lcall
cwtl
xor
or
outsl
mov
lret
sub
inc
inc
jnp
jecxz
push
mov
out
jne
mov
sub
mov
adc
mov
stc
ror
mov
hlt
adc
sub
adc
add
lretw
xchg
push
or
push
mov
jo
mov
pop
cmp
daa
mov
dec
inc
inc
dec
xchg
dec
in
xchg
fadds
jge
imull
int3
fcom
mov
cmp
and
jae
push
movsl
popf
push
in
mov
mov
xor
pop
loope
cmp
mov
dec
fsubr
mov
jle
or
leave
jp
mov
push
cmpsb
sti
aad
or
jg
leave
cmp
sbb
mov
lret
into
out
daa
mov
jns
mov
mov
jp
jmp
mov
or
cmp
std
lods
add
clc
nop
out
iret
repz
dec
jno
dec
dec
add
cs
in
pop
fldenv
dec
cltd
cli
and
mov
xchg
cmp
js
lds
or
inc
mov
adcl
ja
icebp
xor
mov
popa
inc
pop
xchg
shll
fdivs
adc
adc
jl
mov
push
out
dec
pop
pop
jecxz
mov
jle
mov
xchg
ja
add
popf
iret
push
lret
jbe
and
push
out
mov
outsb
sub
adc
or
xor
in
nop
xor
pop
testb
loopne
adc
cwtl
pop
cli
outsl
test
inc
outsb
adc
hlt
push
pop
out
adc
testb
mov
cli
mov
pop
popf
jp
xorl
pop
cmp
test
mov
jae
fistpll
jbe
in
or
adc
mov
jae
jo
int
out
in
mov
orl
dec
test
dec
loope
push
adc
popf
stc
std
inc
ljmp
xchg
or
das
cmp
in
pusha
add
cmc
and
test
scas
xor
mov
mov
stos
int
sbb
pop
std
pop
adc
lea
mov
cmp
sbb
and
pop
int3
insl
sbb
dec
pop
push
pop
sbb
fsubl
pop
gs
mov
mov
ret
pop
push
or
jmp
fwait
sub
std
xchg
mov
sbbl
jle
into
loope
cmp
aad
out
lock
pusha
int
shll
arpl
mov
out
gs
inc
in
test
pop
sub
sub
or
mov
push
cmp
mov
les
int3
leave
pop
mov
and
data16
rol
out
test
sub
int
in
dec
loop
xor
add
out
clc
gs
stc
cmpb
icebp
or
test
std
pop
mov
pop
mov
mov
mov
sbbb
lods
push
push
pushf
mov
sti
or
orb
mov
or
fmuls
mov
call
xchg
push
aaa
inc
out
lods
stc
sbbl
xchg
sub
fcomip
mov
shrl
bswap
rclb
jbe
pop
cmc
popa
lahf
lds
scas
idivl
and
out
xchg
inc
fdivl
mov
or
add
cmpsl
fldl2t
lock
fisttpll
mov
aas
out
inc
gs
or
jns
mov
pop
ret
fdivp
add
inc
or
scas
pop
insl
mov
cmc
mov
pop
push
jecxz
mov
dec
xchg
repz
pminsw
or
ss
clc
push
movsl
sub
mov
movsb
cmp
or
push
sbb
daa
movsb
cmc
sbb
pop
test
addr16
movsb
nop
ffree
js
stc
imul
loopne
mov
push
add
xchg
lret
sub
jmp
mull
mov
ret
cmp
push
psrad
adc
sbb
push
adc
rorb
imul
push
jb,pt
sbb
mov
and
add
or
lods
add
aad
icebp
sbb
scas
xchg
test
pop
int3
lock
xor
xchg
inc
arpl
mov
ret
or
pop
jb
mov
push
jo
ds
fwait
xchg
movsl
dec
repz
or
movsb
cmp
mov
fmul
mov
pop
daa
cltd
xorl
add
inc
cmp
out
jne
and
inc
mov
addl
lds
dec
mov
pop
mov
jnp
dec
mov
mov
xor
cmpb
scas
std
jl
mov
jb
nop
lods
fiadds
rorb
mov
clc
loop
mov
pushf
sub
aam
ret
add
pop
loope
enter
xor
test
dec
add
pop
hlt
xor
jecxz
jmp
js
pop
cmpsl
jbe
jb
adc
sub
mov
xor
jmp
ret
and
or
pusha
sbbb
addr16
jmp
sbb
adc
jb
jecxz
jmp
pop
inc
sub
xchg
in
fnsave
xchg
xor
adc
imul
mov
movb
jle
add
daa
mov
and
jbe
xchg
add
sahf
adc
mov
pop
shlb
loop
mov
and
mov
test
scas
aaa
rorb
pop
cmc
mov
in
imul
leave
inc
mov
jae
out
push
outsl
and
scas
and
inc
arpl
repz
or
xchg
sub
sbb
xor
dec
insl
sub
mov
push
scas
mov
or
cmc
sbb
pusha
or
push
ret
pop
and
sbb
cmp
and
push
fs
aaa
mov
test
cmovns
daa
mov
out
sub
xor
sbb
jnp
ljmp
aaa
test
pop
arpl
pop
das
mov
dec
stos
and
test
mov
incl
test
adc
imulb
dec
repnz
xor
dec
out
outsb
lock
daa
cltd
adc
jmp
fiadds
jo
call
push
dec
test
addb
push
orb
pushf
out
das
sbb
xlat
scas
cmp
adc
shrb
shl
sbb
sbb
pusha
ss
lock
stc
or
lret
sub
jnp
outsb
and
dec
scas
cmpsb
fstpt
pop
sbb
jne
loopne
fcmovb
outsb
in
sub
push
rcl
or
imul
sbb
xor
add
inc
popa
addb
testl
lods
mov
int
pop
push
cli
out
pop
negb
adc
dec
ss
and
iret
call
in
and
and
roll
or
sbb
and
xor
aam
push
add
mov
dec
scas
popf
xlat
sub
test
xchg
sbb
pop
insb
fbld
pop
cmp
test
dec
pop
test
inc
mov
hlt
mov
xchg
lcall
and
data16
mov
adc
sahf
pop
mov
xchg
and
lcall
stos
fs
push
sbb
jns
dec
jnp
push
mov
repnz
cmpsb
cmp
cltd
or
mov
pop
add
pushf
mov
jg
shlb
cld
pop
cs
pop
dec
rcll
lret
jb
mov
xchg
rolb
xchg
imul
sbb
jl
out
sbb
pop
add
shlb
cmc
imul
pop
ds
shl
sbb
cmp
or
sbb
xchg
test
dec
cmp
dec
push
xchg
jmp
cmp
inc
stos
mov
push
pop
ss
sbb
and
loop
inc
xor
pop
sbbl
pop
xchg
mov
add
push
pop
out
std
mov
sbb
mov
add
push
cmpsb
jb
adc
mov
jno
pop
push
xchg
jg
or
test
adc
or
push
mov
lods
pop
imul
repnz
into
mov
cmp
pop
in
mov
cs
cli
push
jne
cld
js
dec
jo
sti
mov
cs
mov
les
insl
sub
or
sbbb
pop
xor
jl,pt
fwait
andl
push
xchg
or
insl
aas
sahf
sbb
addr16
push
mov
push
add
orl
mov
sbb
outsb
aam
idivl
mov
mov
cmp
add
mov
xchg
adc
mov
shl
pop
jle
std
pop
popf
or
xchg
arpl
mov
shlb
je
cld
xchg
cmp
sarl
andl
es
push
fistps
cltd
sub
xchg
shl
sbb
push
jbe
xchg
test
in
stos
lods
pop
xor
dec
fwait
dec
inc
mov
loop
icebp
and
add
sahf
mov
or
das
sbb
cmp
push
loop
les
in
pop
xchg
xchg
and
test
movsb
sbb
mov
aas
pop
inc
jl
test
sbb
push
jmp
repnz
repz
into
cmp
or
into
outsl
nop
cmc
adc
push
push
mov
out
push
nop
mov
loopne
adc
cmp
movsb
aaa
les
data16
loop
imul
mov
out
mov
lahf
ss
xchg
or
or
adc
dec
loopne
add
leave
xchg
je
inc
fmull
push
fisttps
push
or
adc
in
sub
mov
aam
mov
jno
fnstcw
xchg
mov
stos
sbb
cmpb
test
aad
stos
mov
jne
and
pop
mov
push
jb
add
lods
xchg
sahf
outsl
dec
lahf
adc
mov
dec
cmpsb
test
or
cmc
insb
add
push
psubsb
decl
xchg
push
loop
xor
sbb
mov
fistps
xchg
xchg
pop
out
cs
pop
pop
fdiv
xor
and
mov
jp
push
stos
lods
jo
dec
sbb
xor
shlb
cmpb
test
in
mov
xor
mov
test
roll
mov
lds
pop
jle
into
pop
loopne
lahf
out
loop
adc
jb
jle
std
leave
push
xlat
dec
inc
fsubrl
popf
xor
mov
enter
push
sub
or
pop
jle
cld
enter
in
ljmp
sbb
insl
into
xor
adc
jmp
pop
or
sahf
mov
mov
stc
nop
sbb
in
test
jmp
jne
ror
popf
in
iret
lock
loopne
inc
ret
fidivl
addr16
xlat
fcoms
adc
cmpl
leave
push
pop
pop
shrl
mov
pop
lods
lock
dec
jmp
movsl
mov
movsl
out
hlt
fistps
pop
rep
cli
in
test
lahf
cmp
dec
popa
clc
jl
rclb
adc
stos
rcr
inc
inc
mov
out
icebp
loopne
arpl
test
lds
das
sub
call
mov
lahf
stos
jle
or
insl
testb
mov
mov
lret
fisttpll
xor
pop
jo
lock
aaa
xchg
jmp
ret
mov
jo
xchg
pop
cld
mov
imul
das
sub
mov
jae
sbb
mov
pop
movsl
popf
inc
fmul
fidivl
test
mov
mov
jnp
push
test
enter
add
inc
add
test
jle
cmpsl
push
mov
dec
subb
xor
insl
in
mov
insl
cmp
pop
pop
inc
leave
push
setge
into
xlat
je
pop
cmpsb
divl
sahf
push
cmpsl
gs
jge
divl
adc
lods
xchg
aaa
or
mov
xchg
cmp
iret
pop
cmp
pop
mov
cwtl
rol
push
cmp
iret
sbb
jbe
cld
rclb
lret
or
lahf
test
dec
cmp
aas
adc
lods
lret
cmp
dec
mov
sbb
stc
dec
pushf
cmp
sarl
push
mov
dec
mov
ds
cmp
loop
xchg
pop
roll
mov
push
subl
adc
xchg
push
addr16
and
xchg
xchg
and
lcall
mov
xchg
popf
or
and
test
sti
xchg
push
adc
xchg
mov
or
imul
jp
in
orl
cmp
pop
inc
xchg
mov
dec
sub
dec
shrb
inc
adc
dec
dec
aad
mov
dec
arpl
push
lds
enter
jae
ds
jecxz
aaa
clc
or
sbb
jl
icebp
mov
and
divb
int
and
das
jne
lahf
stos
ja
jbe
cli
mov
xchg
mov
stos
fdivrs
inc
inc
xor
jno
fcmovnbe
insl
loope
jnp
movb
xchg
mov
cltd
repnz
push
notb
addb
lods
pop
int
mov
and
or
push
adc
cltd
and
iret
and
inc
pusha
or
in
or
adc
xchg
pusha
ja
jge
lock
sub
fisubrs
rorl
dec
scas
int3
and
sbb
outsl
dec
adc
jb
in
pop
add
mov
dec
dec
cs
xor
out
xchg
pusha
jp
cmp
cmc
sbbb
dec
adcb
lds
leave
dec
popf
cmp
movsb
sbb
mov
ds
mov
out
mov
ret
cld
mov
ret
es
cmp
or
sub
loope
inc
das
imul
scas
int3
das
pop
jns
mov
mov
cltd
add
jbe
or
leave
pusha
iret
push
imul
es
je
pop
and
shlb
loopne
push
mov
mov
sub
rcrb
into
aam
out
mov
cmp
sub
xor
xchg
jle
jge
inc
out
jle
cmpsb
mov
push
bndldx
mov
bound
xchg
js
xchg
mov
dec
mov
push
shrb
push
aad
or
push
test
add
ret
lock
jnp
jno
jl
gs
test
shlb
dec
fstpt
rep
out
fwait
testb
and
mov
ja
jmp
incb
mov
clc
aam
mov
mov
into
sbb
scas
xchg
outsl
ja
dec
mov
pop
std
scas
mov
ficompl
daa
mov
sub
repnz
popf
jae
cli
mov
shrl
rolb
xchg
lcall
addb
popf
ficomps
aaa
or
ret
mov
mov
loope
pop
lahf
mov
cld
sahf
lea
lea
cltd
arpl
sbb
mov
cmp
xchg
lods
gs
push
int3
xchg
mov
bound
inc
mov
pop
fidivrl
jno
repz
in
sub
push
imul
add
dec
mov
outsl
in
arpl
stos
mov
xor
testb
dec
shrb
dec
jns
jle
push
jmp
adc
sarl
or
push
fs
cmp
push
mov
test
adc
stos
fnstenv
mov
arpl
aad
lahf
mov
stos
jne
push
shll
stos
add
out
cmpsl
js
cmpsb
in
sbb
jge,pn
or
or
sub
push
ljmp
jno
xchg
xchg
cmp
mov
lods
mov
or
pop
idivl
cmpsb
ss
xor
fwait
xchg
ljmp
dec
and
push
lahf
sub
sub
inc
stos
push
or
inc
filds
loope
adc
inc
xor
test
inc
pop
hlt
dec
or
js
lock
lods
fidivl
lock
es
lcall
xchg
jo
out
mov
xchg
xor
aas
in
jge
cmp
pop
cld
sub
hlt
mov
pusha
xchg
xlat
rclb
cld
sub
jecxz
mov
mov
xchg
xchg
dec
or
push
nop
add
mov
cwtl
mov
jecxz
sub
push
jns
shrl
rolb
out
pusha
stos
test
mov
mov
leave
fwait
repz
sub
and
cmp
fiaddl
mov
and
in
jno
dec
inc
jmp
cld
pushl
add
pop
sbb
adc
pop
hlt
sbb
add
cwtl
inc
int3
mov
bnd
jo
lcall
pop
push
cmp
or
lret
repnz
add
mov
adc
sub
adc
iret
clc
or
je
jo
sbb
xchg
mov
push
or
ret
lds
leave
repnz
xlat
and
or
jle
pop
out
inc
pop
aaa
dec
lock
out
cwtl
das
sbb
pusha
mov
mov
xlat
pop
out
sti
mov
sbb
shlb
sub
pop
mov
sbbb
pop
pop
jl
jp
mov
add
aaa
jno
imul
aam
mov
sub
add
mov
das
shrb
int3
stos
push
push
xchg
lds
mov
mov
mov
std
lea
jmp
cmp
imul
dec
mov
mov
or
mov
movsl
push
adc
xchg
into
hlt
xchg
lods
fstps
and
dec
arpl
fistpll
dec
std
cmpsb
ds
push
push
xchg
add
lret
inc
aam
js
and
xor
andb
mov
ret
jg
sbb
cmp
sub
das
popa
fsubl
dec
popf
xor
sbb
addl
add
aaa
cmp
iret
imul
or
scas
jb
mov
sbb
lret
push
sbb
pop
dec
jbe
arpl
push
sub
inc
sub
and
dec
add
xlat
pop
test
xor
rcrb
adc
fidivrs
lock
hlt
jae
cmp
sbb
loope
push
shll
and
aad
test
daa
out
cmovp
mov
cs
mov
adc
pop
push
clc
cmpsl
shlb
jns
testl
into
inc
fwait
cs
cmp
subl
loope
cmpsb
mov
xor
and
aad
fsubp
cmpsb
push
inc
scas
inc
jb
push
mov
or
pop
mov
inc
mov
pop
out
adc
add
jmp
fcomps
lock
mov
adc
push
roll
int
xor
xchg
cwtl
ja
sub
outsl
nop
jne
cmpsb
loop
notb
push
shll
out
adc
mov
cld
fwait
mov
cwtl
lds
adc
imul
out
pushf
cltd
cmpsl
int
sbb
ja
imul
pop
loope
or
sbb
push
and
adc
pop
sti
jg
je
xchg
dec
out
ret
xchg
add
pop
mov
cmp
sub
ljmp
pushf
and
jbe
jmp
sbbl
fcompl
pop
fs
sub
out
jb
adc
mov
jmp
mov
mov
movsb
jge
sbb
mov
fdivrl
iret
gs
jg
xchg
adc
ja
je
xor
cli
xchg
jbe
in
shll
addl
ja
arpl
inc
or
sbb
and
mov
jo
hlt
mov
push
imul
call
lock
test
test
lret
xchg
out
dec
and
adc
xchg
push
mov
scas
sbb
or
mov
sarb
ljmp
add
stos
adc
movsb
xchg
js
sbb
out
jp
sahf
inc
fadds
es
adc
xchg
call
dec
andb
inc
xorb
sbb
pop
mov
push
sbb
loope
das
push
jge
inc
push
scas
mov
loope
xor
adc
mov
push
push
xor
mov
sbb
or
pop
xchg
mov
out
add
mov
imul
subb
lea
dec
sub
mov
jmp
mov
mov
clc
mov
or
sub
setle
mov
xchg
pushf
sub
xor
mov
cmpb
and
lret
das
pop
filds
dec
or
adc
push
test
scas
jno
add
xchg
lret
cwtl
push
jne
out
fnsave
sarl
push
mov
mov
out
cltd
rorl
out
mov
mov
idivb
loop
sbb
dec
and
dec
mov
jne
inc
push
sbb
dec
test
cmc
loop
jmp
mov
jl
mov
mov
out
inc
fbstp
loopne
int3
pop
mov
pop
subl
std
mov
cli
jns
adc
inc
inc
push
mov
push
lret
xor
lock
iret
sub
cmp
test
adc
mov
sub
call
jnp
push
pop
mov
or
cs
enter
sub
call
add
sbb
xchg
sub
jl
sbb
sub
cmp
test
cltd
and
xor
enter
fidivl
mov
push
or
orb
adc
mov
pop
ret
lods
pop
in
jnp
mov
pop
xor
add
out
daa
inc
mov
xor
mov
push
push
sub
xchg
repnz
lahf
fstpl
out
pop
aad
sub
cmp
xchg
scas
push
inc
adc
ffreep
nop
mov
or
inc
xor
icebp
adc
mov
jnp
pop
outsb
orl
mov
lods
or
outsb
test
loopne
notb
mov
mov
fidivrl
push
mov
pop
nop
mov
outsl
mov
sbb
adc
or
sub
pop
hlt
idivl
pop
dec
xchg
add
imul
pushf
shrl
clc
aaa
jecxz
shll
lcall
orb
push
fimuls
xor
pop
dec
sbb
fidivrs
xlat
push
ljmp
repz
or
ja
pop
sub
sarb
ss
cmpsl
cli
jnp
insb
es
and
inc
hlt
paddd
scas
inc
cmp
mov
cmp
mov
add
movsl
mov
cltd
jg
push
xchg
mov
popf
jmp
or
add
sbbl
gs
mov
pop
shll
mov
xor
fwait
fwait
inc
push
repnz
imul
jl
xchg
mov
enter
pop
repnz
cmp
sbb
add
xor
xlat
shll
enter
dec
dec
mov
xchg
push
push
xchg
pop
mov
dec
mov
fstl
bound
sub
adc
repnz
fisubrl
sub
cltd
lock
inc
add
cmp
or
push
cwtl
add
in
inc
xchg
pop
xor
sarb
gs
jne
mov
clc
dec
lahf
clc
sbb
pop
xchg
shll
dec
push
pop
mov
js
cltd
jae
rcrl
xchg
movsl
jns
adc
mov
loop
scas
cmp
or
arpl
ror
xor
mov
jbe
call
pop
inc
lock
cltd
pop
cwtl
xchg
sub
inc
js
out
data16
cmpsb
jl
scas
mov
ljmp
mov
lods
andb
arpl
add
xor
xchg
les
aaa
lods
jno
sub
insl
lds
dec
mov
pop
scas
xor
int3
ss
jecxz
sbbb
adc
and
adc
ss
push
push
pushf
cmp
sbb
mov
add
xor
outsl
add
adc
lahf
jae
mov
inc
out
into
into
inc
negl
fmull
sub
jmp
repnz
or
cmp
jg
and
inc
inc
test
dec
mov
push
ret
mov
xchg
push
mov
pop
sub
repz
mov
rcrl
adc
test
in
jge
jno
mov
ret
ljmp
or
out
sub
mov
cltd
insb
cli
mov
add
xor
scas
movsb
mov
scas
andl
dec
sarl
dec
sbb
mov
imul
mov
push
movsl
mov
movzbl
and
and
data16
push
sub
mov
filds
adc
shrl
cwtl
inc
arpl
xor
rcll
test
or
das
cmp
cmp
inc
dec
pusha
hlt
xchg
sbb
inc
mov
rcr
inc
lods
nopl
fs
daa
mov
bound
scas
xchg
ljmp
bnd
lods
sbb
cld
daa
xorl
jl
cmp
xchg
xchg
mov
jbe
cmp
cmc
lahf
in
test
or
sbb
sub
push
idivl
pop
mov
or
xchg
pop
loop
pushf
adc
and
repnz
cmp
and
incl
scas
es
movsl
push
jmp
dec
lock
and
movsl
js
xor
jge
mov
popf
mov
mulb
xchg
adc
mov
cld
jo
test
sbb
mov
aad
in
aaa
pusha
or
mov
popa
loop
mov
ficompl
int
lea
pop
mov
int
jg
hlt
sbb
movsb
pop
clc
sbb
lds
in
test
lock
call
pop
xchg
lahf
aas
adc
lods
loopne
pop
loop
std
add
repnz
sbb
rcl
addr16
xlat
or
jae
mov
in
ficoms
mov
cld
push
add
int
sahf
xchg
nop
jge
or
test
dec
pop
inc
jl
test
fdivrl
or
in
or
pop
loope
xlat
xchg
adc
add
jnp
shrl
addr16
jb
out
sahf
das
sbb
mov
cltd
lods
lds
rolb
shll
sbb
push
int
jno
popf
stc
or
mov
leave
and
pop
fisubrs
inc
neg
aad
cmp
adc
pop
daa
mov
call
scas
xchg
jmp
jg
mov
or
ret
es
adc
sub
stc
pop
cmp
ljmp
cmp
pcmpgtd
mov
sub
pop
mov
lea
mov
push
xchg
sub
xchg
add
into
mov
jne
or
movsb
cmp
imul
call
cmp
loopne
ss
or
sub
negl
jmp
iret
cmp
clc
xor
bound
adc
shll
add
mov
dec
and
lret
andl
leave
or
les
dec
mov
pop
shrb
enter
ja
ss
cwtl
jl
xor
jle
mov
dec
insl
xchg
fwait
sti
icebp
pop
in
shrl
adc
testl
outsb
les
or
cmp
xchg
sub
pop
loopne
cmp
or
daa
sub
cmp
loope
testl
pop
and
xchg
out
pusha
jp
inc
jmp
loope
out
mov
push
inc
inc
lcall
inc
stc
ja
ja
dec
pop
loopne
dec
pcmpgtd
data16
repnz
loope
adcl
pop
adc
mov
dec
leave
jbe
and
out
or
std
jo
sub
leave
cwtl
leave
xrelease
jo
cmp
and
inc
rcrl
inc
es
movsl
pop
int3
xor
ds
lea
jns
call
sub
mov
push
lret
or
mov
insl
xchg
and
or
lods
mov
icebp
aaa
add
andl
addr16
jle
mov
enter
sbb
mov
push
push
xor
inc
push
push
rcl
aaa
fmulp
xor
imul
add
mov
or
mov
shlb
and
or
push
fildll
and
inc
cmpsl
mov
in
xchg
sub
mov
mov
popf
xchg
sub
push
jg
test
cld
roll
xor
mov
xchg
xor
or
xor
sbb
addb
ds
icebp
push
adc
adc
shl
dec
das
stos
cmp
jmp
lods
sbb
aas
mov
dec
xor
out
sbb
mov
add
mov
push
sbb
xchg
imul
mov
push
fnstenv
js
aam
xchg
movsb
ret
insl
lea
repnz
test
lods
sbb
cmpsb
sub
pop
push
inc
inc
xor
xchg
in
loopne
rolb
pop
mov
shlb
xor
and
lods
mov
in
scas
jbe
xchg
div
popa
xchg
add
or
fadd
popa
jbe
data16
pop
inc
mov
xchg
sbb
or
cmp
imul
fwait
dec
lahf
or
out
int
xor
adc
stc
fucomi
inc
sub
cld
lcall
sbb
mov
gs
adc
addr16
inc
cwtl
xchg
add
jmp
mov
xchg
mov
adc
adc
dec
pop
pusha
outsb
mov
sarl
imull
dec
in
jb
xchg
pushf
jno
cmp
sahf
pop
jns
jne
ret
jge
test
inc
mov
sbb
mov
hlt
xor
sub
mov
dec
pop
pop
push
mov
ljmp
addr16
stos
inc
push
pop
mov
pusha
and
sbb
inc
cmpsl
movsb
in
push
pop
and
adc
mov
cwtl
cs
pop
jle
aam
and
test
xchg
mov
mov
jnp
call
dec
sub
stos
in
jo
les
arpl
jp
imul
ret
sahf
dec
xor
je
out
or
inc
pushf
mull
mov
jmp
out
push
lods
sub
es
xor
aad
lret
and
xor
fidivs
dec
jecxz
dec
call
popf
or
push
icebp
test
pop
mov
stos
push
cmp
xrelease
addr16
lahf
sbb
jmp
or
mov
subl
sub
xchg
lahf
or
inc
cld
cmp
dec
cs
fbld
mov
lahf
es
repnz
mov
add
subl
sub
rol
in
mul
fs
flds
xchg
or
cmp
push
or
sti
lcall
push
mov
jp
lret
pop
aas
dec
test
stc
jle
or
lock
jg
xchg
cmpsb
cmc
dec
out
mov
push
fcmovnbe
sbb
popf
sbb
cs
pop
cmp
lds
scas
ret
hlt
outsl
jle
rcl
sbb
jmp
or
jnp
mov
mov
sbb
sub
pop
jo
lock
pop
jl
in
ss
arpl
fimull
bound
loopne
clc
aas
xchg
rcrl
push
pushf
in
aas
inc
popa
repnz
or
sub
push
mov
add
jb
in
inc
add
stos
sub
mov
pop
dec
xor
popl
mov
stos
add
out
pop
adc
xchg
add
movsb
dec
and
xor
jo
inc
push
jb
add
sahf
push
js
rcll
add
hlt
inc
scas
outsl
inc
cwtl
mov
popf
outsl
jmp
pop
out
int3
fcompl
pop
and
mov
push
sub
mov
loopne
in
mov
cmpsl
cmp
push
xor
ds
sbb
jns
jp
aam
negl
pop
lods
ret
pop
cmpsl
push
jecxz
aam
push
push
out
std
sar
xchg
add
dec
xor
xchg
fstpl
lahf
sahf
xor
adc
aaa
mov
xor
push
aaa
mov
lea
adc
sbb
cmp
mov
and
fidivs
or
test
test
loope
push
jg
cmp
pop
lock
imul
sbb
or
ja
mov
dec
mov
in
mov
pop
xchg
xor
xor
push
or
jp
movsb
mov
enter
ljmp
push
cmp
inc
cs
scas
sbb
lahf
fsqrt
mov
test
test
in
mov
sub
jg
int3
int
dec
mov
xor
fdivp
fcmovnbe
repz
dec
mov
push
aas
cmpsb
xor
push
cmp
push
lret
bound
mov
add
ds
or
jg
sbb
jne
mov
inc
fisubs
les
jae
lahf
pop
push
les
jmp
mov
push
sbb
sbb
xor
fisubl
sub
jne
test
addr16
push
xchg
call
fidivrl
gs
pop
cltd
stos
jne
and
add
out
add
gs
xchg
add
sub
mov
or
mov
fdivl
lock
dec
cs
js
nop
popf
in
invd
shrl
adc
mov
mov
pop
movsl
dec
pusha
stc
lret
lret
ss
dec
rcr
pop
inc
push
jae
popa
ret
or
pop
aam
mov
jne
jp
cltd
pop
pop
and
pop
js
mov
mov
pop
aam
xchg
test
and
xor
push
push
push
xchg
xor
sub
ss
lcall
mov
into
xlat
std
jo
repz
fsubs
adcb
or
js
sub
push
inc
stos
jge
imull
and
repz
out
icebp
add
bound
inc
test
mov
lods
mov
and
pop
js
nop
mov
add
loopne
ja
xchg
lds
mov
jae
lds
scas
notb
call
sbb
cli
dec
xchg
hlt
add
xor
aas
inc
aaa
cmp
mov
sbb
jl
shrb
rclb
push
fldenv
fsubrs
fldl
cwtl
sbb
mov
pushf
test
pop
lods
mov
cs
lock
jmp
add
jge
jl
incl
in
adc
inc
xor
mov
sub
test
dec
adcb
rolb
mov
iret
in
add
jne
adc
test
xchg
punpckldq
push
mov
adc
xchg
jo
jp
movsl
lods
rcrb
aad
enter
dec
or
xorb
mov
mov
gs
cmp
ds
subb
cs
dec
or
pop
adc
in
jb
and
xchg
pushf
inc
cmpsl
imul
mov
mov
jbe
out
test
mov
movsl
push
xchg
mov
out
enter
mov
fmul
push
add
or
stos
fiaddl
addr16
sti
xlat
ja
shrl
push
loopne
fdivr
test
pop
mov
lds
cmp
jne
or
lock
lret
push
pop
cwtl
lods
mov
mov
fs
iret
data16
shr
or
xor
push
jnp
out
jg
sub
lcall
pop
loope
sti
rorl
aaa
push
scas
inc
or
popa
push
sub
pop
xor
shlb
jb
lret
sub
or
ret
repz
cltd
cmp
jmp
push
inc
outsl
push
je
sub
in
jnp
sbb
fdivrl
or
pop
imul
fucomip
insl
jge
js
push
add
lds
add
clc
dec
push
cmp
out
pop
mov
mov
mov
js
fs
pop
or
imul
lret
subb
mov
mov
and
xor
data16
not
jmp
push
sarb
xor
xor
jmp
cmc
mov
adc
sbb
xchg
dec
dec
call
aad
jb
push
fstpl
push
cli
cwtl
das
sub
pop
fidivl
and
add
stc
jg
sbb
jo
mov
sbb
cmc
dec
mov
mov
sbb
clc
aas
xor
lds
jmp
fnstenv
mov
jns
dec
test
mov
insl
rorb
insl
hlt
sahf
sub
lcall
ds
lods
fadds
jns
xchg
cmp
lods
jae
lret
ss
push
jp
shr
jnp
lea
fwait
outsl
push
push
dec
bound
xor
insl
gs
cmp
jnp
cmc
cmp
xor
cmp
and
jnp
mov
or
es
daa
jle
adc
xchg
pop
sbb
lcall
test
xchg
sbb
mov
add
xor
adc
jne
stc
int
mov
sti
mov
insb
outsl
iret
push
push
or
xchg
fdecstp
popf
jge
pop
hlt
in
lahf
sub
aaa
ds
jne
js
aaa
stos
nop
adc
pop
in
inc
lahf
jl
data16
xor
pusha
stos
inc
in
pusha
repnz
xchg
jbe
insb
adc
push
mov
je
lcall
xchg
inc
push
dec
aas
xchg
test
lahf
xor
sub
rclb
test
mov
mov
gs
int
and
lods
outsl
adcl
add
dec
mov
jmp
rcl
cmpsl
adc
mov
loopne
in
adc
adc
call
cld
pushf
mov
mov
push
xor
lret
mov
xor
ljmp
out
clc
enter
sbb
popa
and
imul
push
sbb
shl
or
aas
pop
shrb
pop
scas
adc
cmc
xor
push
mov
dec
adc
cmpsb
adc
aad
pop
adc
mov
mov
or
jne
sub
vminss
out
cmpsb
inc
sub
inc
pop
outsl
xchg
or
in
lea
and
sub
inc
xorb
inc
ret
sub
dec
cvttps2pi
xchg
aam
mov
mov
daa
lcall
fwait
bound
gs
mov
scas
or
and
inc
inc
nop
sub
cmc
jo
insl
jo
pop
push
cmc
nop
dec
mov
jo
das
mov
bound
jae
push
push
mov
loop
sub
xor
xchg
imul
outsb
addr16
jg
or
fdivp
sub
shll
addb
testb
nop
pusha
sbb
int
sub
dec
int
pushf
xchg
seta
dec
cli
sarb
test
aad
mov
adc
jo
divl
inc
aas
sbb
jae
push
push
outsl
and
push
repnz
test
fstpt
sbb
dec
icebp
leave
test
loope
cmp
lea
dec
inc
push
pushf
xor
and
es
sub
cmc
fisttps
adc
lock
and
cwtl
lcall
xor
ljmp
mov
pop
sub
test
push
shll
notl
adc
jb
stc
je
sbb
and
filds
daa
dec
fwait
adc
mov
mov
dec
hlt
stos
gs
stos
dec
inc
pop
hlt
lods
and
jbe
push
in
jg
jle
jnp
mov
cmp
arpl
sbb
jbe
xor
jle
out
mov
sub
xchg
cmpsb
xchg
or
dec
cli
arpl
popa
xchg
add
adc
or
dec
or
mov
dec
sub
cmpsb
inc
loopne
sbb
add
cmp
sbb
leavew
movsb
pop
insb
jl
lods
je
mov
mov
xchg
daa
mov
sti
inc
scas
leave
testl
aad
cmp
push
xchg
divl
lods
pop
mull
sub
andb
mov
pop
out
lret
inc
add
cmp
ja
dec
add
arpl
adc
push
add
lea
iret
dec
js
cmp
shll
lea
ret
pop
dec
sahf
scas
cmp
jno
outsb
cmpsb
push
fnstenv
frstor
mov
sub
push
out
dec
xlat
scas
mov
outsb
jne
xchg
sub
mov
xchg
xor
addr16
pop
pusha
inc
outsl
stos
orl
pop
sbb
inc
fsubr
cmpl
sub
mov
loopne
and
aaa
mov
lock
cmp
mov
inc
dec
cmpsb
psubw
rcrl
or
in
inc
cmpsl
js,pt
ds
pop
xor
xor
xchg
adc
call
and
sub
stos
loop
outsl
sbb
ret
add
pop
xchg
sbb
mov
lret
mov
mov
xchg
int
xchg
sub
cmp
imul
pop
imulb
xchg
sbb
andl
imul
xor
daa
repnz
popf
shl
testb
sub
rclb
movb
shrb
sub
mov
sub
add
mov
inc
nop
add
xchg
sbbl
dec
dec
in
lahf
pushf
xor
fimuls
jl
sbb
pusha
lods
fdivrl
jne
out
cmp
test
push
loopne
mov
xlat
mov
ret
and
scas
jno
js
dec
xchg
adc
mov
das
dec
into
outsb
push
mov
push
ljmp
mov
xchg
jle
mov
push
clc
out
sub
inc
stc
pop
notl
push
sbb
data16
push
or
icebp
fsub
mov
and
loopne
adc
xchg
bound
int
aam
and
jl
sbb
rclb
rorb
cmp
icebp
jg
pop
shlb
or
push
pop
sub
sbb
mov
movsb
xchg
sub
mov
arpl
mov
pop
adc
loop
cmp
push
jns
and
mov
out
xor
jo
cwtl
push
in
sbb
cmp
pop
movsb
adc
jne,pt
addr16
adc
mov
sbb
push
jmp
repz
pop
pop
icebp
lret
xchg
movsb
ror
call
ss
inc
push
mov
stos
sbb
jae
push
js
sub
add
and
sbb
xchg
pop
xlat
pop
lods
in
movsl
mov
shlb
adc
lock
and
cmp
cmpsb
sbb
rclb
mov
out
pop
ss
enter
inc
jmp
scas
mov
sub
jecxz
dec
fnstenv
mov
clc
dec
rol
les
jnp
insb
lods
xchg
data16
pop
cmp
lds
jecxz
aaa
stos
mov
xor
sub
fs
into
jl
jnp
xor
das
pushf
cs
nop
and
cmc
mov
push
mov
ret
fidivs
daa
or
or
repz
adcl
shrl
jle
jns
jg
xchg
push
add
lods
cmp
cli
cmc
and
push
adc
push
xchg
into
sub
mov
push
outsl
adc
cmp
loope
cmp
xchg
les
popf
xor
mov
stos
mov
push
adc
mov
ficoml
xchg
inc
arpl
dec
sub
jmp
rcll
or
in
push
pusha
adc
ficompl
adc
and
mov
repnz
dec
hlt
mov
adc
fnop
pop
adc
sbb
ss
rcr
mov
lods
push
sbb
dec
daa
xor
dec
imul
sti
outsl
dec
cs
sub
not
mov
in
movsb
jecxz
sbb
movsl
in
fcomip
aaa
repnz
fstps
test
push
and
repz
and
xor
inc
mov
gs
lahf
sbb
push
inc
in
cmp
pop
fldcw
xlat
jge
popa
pop
testb
pop
adc
adcb
xor
shlb
sahf
lods
enter
sbb
mov
adc
inc
fildl
aaa
add
shlb
and
and
add
inc
fistpll
and
pop
stc
or
xchg
iret
retw
or
push
repnz
cmpsl
adc
jp
sti
repnz
and
je
jg
pop
enter
mov
test
test
push
dec
xchg
fisubrl
repz
cmpsl
ds
movsb
cmp
xchg
mov
cltd
das
push
cs
inc
add
mov
imul
ret
jl
pop
cwtl
std
jae
jl
loop
inc
xchg
pop
ljmp
push
sbb
cs
mov
push
ret
stos
adc
xlat
aaa
or
push
clc
mov
mov
add
adc
test
es
xchg
pop
scas
daa
or
cmp
ficoms
jle
xlat
jno
imul
mov
sti
ds
insb
sub
pop
xchg
fs
jl
mov
std
lods
xor
pop
out
mov
faddl
scas
xorb
lods
cli
mov
sub
xor
std
cwtl
into
push
jns
inc
push
out
out
mov
ljmp
imul
lahf
stos
outsl
xor
mov
insl
push
mov
insl
jge
out
sbb
and
or
jge
inc
cmp
out
cmp
xchg
filds
mov
and
and
fdivs
test
xor
inc
sub
dec
mov
outsb
add
pushf
jmp
bound
or
mov
xor
xchg
cltd
addl
popa
xor
push
jae
pusha
sbb
test
pop
fadd
jecxz
cmp
push
dec
push
xor
ss
sbb
shl
mov
cmp
jle
mov
pop
ror
push
out
sbb
test
outsb
jle
jp
dec
fs
andl
jo
imul
sbb
stos
es
jle
add
add
arpl
dec
xchg
xor
aam
fwait
jne
push
into
arpl
pushl
mov
fdivr
jnp
or
jns
add
loopne
push
pop
fbld
repz
dec
lahf
cmp
and
lea
es
mov
in
dec
or
in
lock
arpl
push
cmp
pop
adc
ss
fisubs
mov
mov
rcl
fdivs
sbb
and
loope
push
pop
cmpsl
xchg
insl
mov
jnp
call
icebp
pop
stos
mov
adc
mov
into
int3
inc
sbb
js
lcall
mov
push
in
cmpsb
push
mov
cli
fsubs
adcl
insb
xchg
sub
inc
ja
xchg
cmp
insb
mov
mov
sub
pop
xor
enter
add
mov
ret
dec
movsb
repnz
dec
pop
test
lods
push
inc
sbb
daa
xor
es
push
int
inc
dec
pop
lea
into
lods
push
mov
sub
rcrb
mov
adc
out
xor
js
test
pop
jecxz
xchg
cltd
xor
mov
cld
cmp
rcl
jae
fnstenv
xchg
sbbb
shll
pop
jbe
das
sbb
mov
sti
jnp
xor
sahf
jl
cmc
lods
shl
sar
ds
daa
js
aam
jno
pop
lds
mov
js
cld
sub
xchg
cwtl
les
cmpsb
pusha
push
lret
xor
jmp
xor
pop
cmp
jb
cmp
push
cmp
inc
cltd
mov
jo
pmulhw
dec
les
push
ja
enter
popf
lods
and
mov
push
imul
lods
jecxz
lods
bound
bnd
lods
xchg
push
clc
dec
adc
xor
popa
fsts
out
sbb
xor
inc
push
icebp
aad
or
xchg
lods
xchg
cmc
xlat
outsb
daa
mov
inc
mov
shl
pop
add
data16
sbb
dec
xorb
add
cmp
mov
mov
movsb
inc
scas
shlb
dec
cmp
jne
sbb
out
rcll
repnz
push
cli
mov
xchg
or
or
add
fldcw
lock
jbe
xchg
dec
xor
cmp
jo
mov
test
push
ret
pop
sub
mov
loopne
das
jno
stc
das
inc
adc
negb
test
adc
incl
adc
xchg
imul
fwait
pusha
cmp
dec
xchg
jl
ret
ret
js
aas
pop
cmp
call
or
cli
jo
pop
jbe
int
adc
jle
movsb
leave
insl
or
aas
dec
cwtl
jne
aad
shrb
mov
cmp
sti
lock
hlt
roll
enter
aaa
aad
lea
decl
fwait
jp
fdivl
test
jnp
repz
push
shll
test
stc
aad
sahf
xor
lods
xor
into
repnz
pop
cmpsl
adc
test
pop
push
adcb
sub
pop
imul
xchg
or
aaa
cwtl
mov
mov
mov
jg
ja
mov
cli
sbb
pop
repnz
jp
ret
jns
scas
dec
imul
dec
int3
pop
clc
push
cmp
adc
lea
flds
fdivrs
mov
sbb
pusha
or
stc
adc
xor
inc
out
dec
popa
sub
and
ret
jp
push
rcll
jns
gs
adc
xchg
aaa
jo
push
push
out
mov
add
pop
xchg
fs
xor
insl
dec
out
imul
stos
sbbl
in
ss
adc
pop
mov
mov
repz
jns
inc
repnz
lcall
and
mov
sub
xchg
xor
lahf
mov
and
mov
call
lea
out
lret
mov
push
jo
jno
movsb
push
shll
aad
inc
pop
xor
jo
mov
lods
in
mov
xor
sbb
xchg
jne
xor
sub
fldenv
mov
mov
jnp
jmp
add
fstpt
mov
sbb
dec
adc
jg
test
je
and
sbb
cld
xchg
xor
xor
stos
pop
daa
jb
fs
cmpsl
nop
push
push
imul
fnstcw
mov
arpl
adc
movsb
inc
cmp
push
in
jnp
lea
imul
jo
cld
faddl
ss
sub
sbb
fisttpl
jge
testb
cmp
add
lcall
push
shrb
mov
adc
ds
pushf
cmp
loop
mov
pop
rcl
mov
loope
in
push
pop
loop
fildll
xor
jo
lcall
popf
xchg
test
push
lcall
xchg
lds
fdivrl
inc
cs
in
cmp
inc
loop
pusha
mov
inc
pop
jb
push
aad
rol
jo
das
jle
mov
or
jg
fisubl
mov
cwtl
and
jbe
mov
imul
in
pop
sbb
sbb
dec
sub
dec
ds
sbb
popf
xor
pop
xor
xor
pop
and
mov
fwait
sti
repnz
mov
dec
push
mov
imul
dec
dec
incb
mov
pop
pushf
test
xchg
incb
dec
xor
or
pop
pop
hlt
je
shufps
jnp
xchg
cmovle
mov
leave
fildll
aad
icebp
push
push
and
dec
inc
xor
push
mov
mov
int
nop
addr16
sub
mov
mov
mov
jle
fisubrs
dec
pop
and
mov
cmp
xchg
std
popf
xchg
shll
mov
mov
pop
xor
adc
xchg
dec
push
push
sub
movsb
sbb
sub
mov
add
mov
xchg
mov
daa
lret
inc
leave
fs
xor
jmp
adc
ljmp
test
cwtl
test
adc
jae
rorl
fsubl
mov
cmp
repz
jne
imul
ljmp
icebp
enter
inc
push
nop
ss
outsl
mov
lahf
aad
fsts
popa
or
mov
push
inc
stc
jnp
adc
dec
fmul
and
jbe
rdtsc
mov
cmp
inc
mov
push
jecxz
push
jl
cmpsl
insl
or
mov
into
test
mov
mov
xchg
dec
arpl
sarl
mov
jecxz
jmp
popa
dec
rorb
ds
jg
lcall
adc
or
xchg
xchg
mov
icebp
xor
sbb
xor
gs
sbb
xor
xor
iret
test
cmp
pop
ror
lahf
in
addr16
push
adc
aam
jg
call
sbb
mov
xor
imul
imul
xchg
or
mov
jns
pop
and
push
fistps
pop
adc
jle
pop
mov
inc
popf
loop
adc
movsb
sbb
mov
outsl
or
mov
iret
and
add
frstor
movsb
les
mov
cmp
mov
repz
movsb
fwait
jnp
push
movsl
ret
ljmp
add
push
fldcw
jno
jl
xlat
outsl
xchg
mov
pusha
mov
shr
and
push
pop
mov
lea
gs
call
fdivrs
sarl
incl
pop
cmp
jge
fisubrl
fwait
jo
in
adc
cmpsb
fists
int3
push
cmp
aas
sbb
mov
add
cmp
pop
out
jmp
or
fs
mov
notb
sbbl
cmc
flds
or
lret
fsts
xchg
mov
add
lock
lock
jbe
out
adc
jno
and
fidivl
jmp
pop
sbb
xchg
cmp
add
sbb
addr16
mov
jae
inc
out
push
testl
fs
xchg
cmc
js
gs
frstor
sbb
fildl
in
jae
out
pop
cmc
shll
push
mov
pop
hlt
lods
mov
xchg
xchg
les
jno
dec
mov
or
inc
cmp
in
jne
repz
sbb
lds
fcompl
mov
call
jl
out
std
int3
add
or
std
push
mov
movsl
cli
mov
out
ds
mov
imul
in
or
mov
sbb
jle
imul
mov
fucomi
dec
inc
arpl
xchg
sub
cmpb
stos
mov
adc
insb
adc
jmp
mov
adc
insl
iret
push
pop
roll
sub
cli
add
mov
or
and
jl
negb
mov
orb
sub
pop
adc
or
mov
xchg
daa
aaa
xchg
mov
fst
je
xor
pop
cmp
dec
fucomip
cmp
add
xor
mov
inc
cmp
mov
test
mov
jne
iret
loope
xchg
cs
sbbb
aad
dec
and
popf
int3
in
mov
out
and
lahf
inc
popa
add
jge
cmp
push
xchg
lahf
push
stc
decl
loope
and
mov
out
add
mov
mov
aaa
mov
es
loope
sbb
add
dec
push
mov
adc
push
fdivs
stc
sbb
add
into
xor
sti
out
add
fs
sub
mov
aaa
stos
stos
insb
or
xor
js
cli
stc
mov
imul
adc
cli
xchg
mov
sbb
jno
in
cmc
or
xor
inc
jne
pop
sub
je
jle
add
xor
push
inc
int
jecxz
fisubs
cmp
xor
jmp
cli
das
stos
sysexit
stos
shrb
adc
and
aam
fwait
jbe
cmc
repz
fnstcw
in
jle
test
data16
push
lods
sti
test
sub
xor
and
push
xchg
outsl
popa
mov
imulb
cltd
push
lods
or
lahf
push
mov
sbb
push
xchg
sbb
cmp
loope
xor
xor
mov
aad
cmp
insb
add
push
testl
inc
cmc
inc
xchg
ficoml
das
or
enter
sbbb
push
data16
fcmovnbe
insb
or
ficompl
loop
fs
das
mov
bound
lahf
mov
cmc
loop
and
rorl
push
or
jmp
and
add
mov
lds
and
xchg
repnz
jae
cmc
and
imul
stos
roll
ja
pushf
mov
cmpsl
mov
pop
test
adc
test
mov
subb
sbb
lds
fs
iret
xor
pop
ja
andl
inc
pop
insl
jb
sbb
xchg
xor
and
stc
jg
cmp
adc
clc
scas
adc
pop
lahf
aaa
bswap
jecxz
xchg
mov
dec
pop
lods
adcb
sub
push
or
leave
ffreep
pop
fwait
out
or
jnp
in
and
mov
cmp
psraw
ret
bound
imull
notb
icebp
pop
stos
dec
ficoms
ja
movsb
int
lock
shll
sahf
push
jl
jae
clc
in
mov
or
inc
fs
xchg
call
xor
inc
lods
int3
inc
pusha
imulb
jp
push
ss
popf
pusha
adcb
shll
push
rorl
push
mov
out
xchg
les
lea
out
sbb
rcrl
mov
cmpsl
push
insb
jge
sti
mov
pop
mov
push
iret
and
int3
jg
dec
adc
pop
std
out
stos
js
insb
stos
int3
idivl
ja
ret
test
push
jp
mov
mov
fisubrs
mov
jge
pop
push
pop
orb
or
dec
fdiv
testb
shrl
mov
test
jae
into
movsb
jbe
frstor
lds
cwtl
test
or
outsl
mov
mov
loope
cmp
mov
add
mov
mov
inc
jp
sub
adc
lcall
push
lret
push
test
roll
inc
sbbl
pop
enter
or
cltd
fs
into
outsl
mov
push
xor
add
fld
test
lods
mov
xchg
xchg
xchg
pop
out
jo
lea
cmpsl
adc
cs
outsl
add
ss
pop
js
xor
pop
mov
mov
add
jp
aas
xlat
and
inc
xor
js
mov
cli
fcmovb
dec
mov
cs
inc
shl
pop
fnsave
push
sub
mov
lahf
mov
jbe
push
xor
pop
sub
inc
cmp
rcr
repz
push
jbe
add
xor
mov
in
xor
pop
aam
das
jnp
call
out
mov
sub
test
and
jae
sbb
scas
jge
pop
sahf
leave
sahf
mov
iret
mov
out
imul
popf
sub
cwtl
jae
mov
shlb
fbld
outsb
jge
mov
mov
push
mov
mov
insb
fists
jecxz
or
aas
mov
gs
mov
dec
fbstp
ret
add
insl
mov
add
hlt
test
mov
fisubrs
hlt
mov
mov
cmc
mov
adc
xchg
out
out
dec
xchg
xchg
ret
pushf
cmc
and
shlb
ss
shrl
jno
idivl
mov
add
xor
sti
xchg
xchg
inc
dec
das
cmp
inc
push
mov
outsb
mov
mov
pop
xor
les
dec
pop
push
ror
adc
push
or
mov
mov
in
push
sub
insl
gs
jmp
aam
cmc
cmp
mov
movsb
cltd
mov
pushf
das
xor
fisttps
mov
jmp
xlat
aaa
ss
add
cwtl
sahf
filds
add
sarb
and
cmp
stos
and
cltd
push
in
or
push
xchg
mov
daa
inc
ret
adc
aad
xchg
inc
sbb
ljmp
test
stc
push
adc
dec
neg
jbe
test
and
mov
mov
mov
call
pop
cmc
scas
out
mov
les
out
inc
jb
mov
mov
pop
adc
test
cmpsb
roll
xorb
pop
adc
mov
repnz
fsubs
xlat
gs
and
cmp
push
xor
popf
jae
mov
xor
jno
jo
out
sbb
lret
enter
push
fsubs
mov
dec
jo
pop
mov
test
jnp
mov
pop
imul
pop
mov
out
imul
jbe
bound
stos
out
fcmovb
sub
test
shlb
test
rcr
adc
jb
lahf
mov
shlb
jo
mov
sub
mov
push
daa
cmp
rol
add
in
sti
pop
fisubs
lahf
fwait
jbe
aam
cli
lds
jns
add
icebp
or
cmp
mov
in
dec
fmulp
cmp
adc
sbb
mov
inc
sub
shlb
lods
rcr
pop
xchg
sbb
pusha
sahf
std
adc
mov
lock
mov
xlat
pop
cmp
jecxz
dec
dec
jl
lea
movsb
cmp
adc
dec
out
inc
je
add
scas
xor
adc
xorb
mov
sub
push
xor
call
inc
push
jo
sub
lds
pop
xor
cmpsb
int3
mov
jns
inc
popf
pop
pop
inc
sub
inc
lods
mov
ret
insl
stc
insl
mov
push
sub
dec
push
pop
stc
inc
jl
in
popf
sbbb
repz
nop
or
ret
push
rclb
jmp
jbe
cmc
arpl
aam
jns
ljmp
mov
push
xchg
adc
adc
js
cmp
cwtl
cmc
aam
movsb
mov
mov
pop
push
jle
hlt
jmp
and
and
lds
ds
sbb
dec
xor
shlb
and
mov
push
sub
inc
inc
pushf
test
and
jp
and
fwait
testb
lea
ret
sub
and
mov
aad
scas
mov
pop
cld
xor
shrl
inc
push
xlat
jae
jle
and
cmp
cltd
xor
mov
adc
sbb
and
cmpsl
js
xor
fsub
and
jmp
or
sbb
into
enter
pop
or
lahf
jne
jb
jmp
add
add
wrmsr
mov
xchg
int3
jnp
jle
add
stos
adc
and
das
ficoml
pop
subl
adc
jg
clc
fwait
cmpsl
ret
cmpsl
stos
pop
imul
adc
or
push
rolb
movl
pop
aam
xchg
sbb
jns
pop
jmp
mov
lahf
sub
add
aad
test
repnz
cmp
testl
cmc
inc
call
or
iret
test
outsb
add
or
xchg
xchg
inc
mov
in
cmp
fists
in
int3
sub
aad
lcall
aas
mov
xor
xor
dec
repnz
out
pop
xor
in
imull
aaa
push
icebp
add
test
mov
sub
mov
sub
mov
xchg
outsb
mov
adc
inc
div
test
cmpsl
sbb
lds
cltd
cmp
loopw
aaa
sbb
ss
lcall
jne
push
sbb
in
and
popa
sar
jbe
push
js
push
movsl
xchg
sub
outsl
ss
stos
or
xorl
push
call
test
jo
nop
rorb
fnstenv
jo
sub
dec
ds
inc
add
jbe
je
cltd
jecxz
push
adc
jmp
xor
int3
arpl
fwait
clc
jmp
and
cmpsb
pushf
jae
or
das
lcall
mov
ret
xchg
cmp
jl
mov
add
push
int
jp
or
push
sbb
xchg
loopne
fisubl
push
jmp
mov
mov
jmp
xchg
imul
fdivs
cmp
js
inc
push
pop
jo
add
jmp
imul
push
movsb
pop
jg
iret
cli
and
mov
int3
fldcw
std
push
aas
xor
jo
mov
mov
stc
sbb
xlat
pop
jg
cltd
pop
or
adc
imul
out
out
inc
mov
loope
orl
addr16
mov
cmp
mov
cwtl
mov
jg
fs
repz
sarl
popf
xor
lds
mov
addr16
mov
cs
mov
in
outsb
dec
mov
insb
lret
jns
ret
gs
xor
mov
orb
adc
aad
lahf
or
jge
push
leave
loope
mov
mov
mov
sub
jns
in
xor
mov
fs
or
push
adc
mov
rclb
mov
jmp
je
test
stos
lods
in
daa
sbb
push
sarb
aas
push
xlat
pop
cmp
mov
incb
xor
les
sti
fwait
movsb
pushf
int3
jmp
sub
clc
mov
dec
aaa
pop
jmp
lret
daa
repnz
fwait
std
inc
push
mov
pop
fimull
adc
xchg
add
sub
sbb
mov
cmpsb
stc
mov
imul
jne
repz
push
push
inc
sub
pusha
sub
mov
mov
cmp
mov
popf
scas
jne
push
mov
push
mov
mov
mov
push
lea
add
push
jbe
test
cmc
das
loope
cmp
pop
cmp
add
out
popa
jns
xchg
test
cmp
cld
pop
lock
inc
sub
fsub
test
insl
out
sbb
mov
push
mov
arpl
lcall
aaa
into
or
dec
pop
push
imul
fcoms
fnstcw
jl
pushf
sahf
and
cwtl
fisubrl
cld
aam
scas
popa
inc
repz
mov
inc
mov
or
rcrb
xor
jge
out
lods
xchg
pushf
xor
data16
and
je
je
icebp
imul
rorb
ljmp
gs
mov
add
and
pop
pop
stc
lret
or
js
in
jg
repnz
scas
mov
xor
pop
aam
movsb
pop
mov
pop
popf
xchg
and
and
jmp
aaa
inc
fldcw
in
sub
leave
aam
sti
jb
call
mov
mov
loop
mov
out
pop
push
and
mov
test
pop
xchg
dec
insb
sub
cwtl
sarb
repnz
mov
adc
ds
inc
dec
add
fs
xchg
sub
movsb
mov
mov
test
andb
stc
mov
xorb
jl
push
xchg
push
movsb
sub
jle
gs
int3
repz
mov
fsubp
test
xor
out
mov
aam
xor
add
mov
push
and
test
shll
adc
cmp
iret
sub
add
inc
push
or
and
incl
jle
in
imul
lcall
pop
leave
sub
dec
push
mov
loopne
shlb
ret
jmp
or
lods
rcll
int3
xor
fwait
push
ss
inc
out
mov
mov
test
idivb
stc
add
subl
leave
jne
sti
cmpsb
stc
mov
movsl
jg
cmp
ret
jns
lret
adc
cmpb
mov
push
sub
pop
xchg
loop
pop
fsubl
jp
cmp
insb
add
adc
xchg
orb
fstps
pop
addr16
pop
insb
mov
shrb
sbb
popa
dec
pushf
xchg
lock
and
ja
fisttps
ret
and
pop
cmp
or
dec
pop
out
sub
sub
jg
inc
lea
fwait
jb
scas
lret
das
test
xor
or
subl
dec
popa
and
lahf
ss
int3
jecxz
into
mov
add
shlb
cmpsl
jb
nop
addr16
fnstenv
or
clc
jae
xor
cmp
pushf
adc
xor
stc
push
and
pop
mov
adc
adc
imul
lock
fdivr
xchg
or
sub
sbb
imul
adc
icebp
insb
add
mov
movsb
adc
repnz
hlt
cmpb
push
jl
xchg
lea
sbb
mov
pushf
cmp
popf
xor
addr16
mov
push
test
cli
icebp
std
aam
es
cli
mov
xchg
fdivs
lods
ja
mov
cwtl
jnp
push
xchg
inc
jnp
add
dec
mov
out
add
loope
js
fcmovb
xlat
out
stc
es
xor
inc
push
shlb
in
fwait
lahf
xchg
nop
mov
sbb
in
lret
inc
scas
and
mov
test
add
inc
sbb
ja
sbb
pop
lds
push
jge
mov
stos
jmp
mov
fwait
sti
cmp
mov
mov
sbb
pop
lock
out
mov
testl
in
adc
or
sbb
xchg
xor
mov
mov
lods
lret
repz
jno
xor
push
je
and
mov
add
mov
andl
out
rcr
or
icebp
inc
test
mov
or
int3
and
dec
sub
xchg
adc
xchg
pushl
sbb
ljmp
add
and
adcl
pop
jno
adc
mov
cmp
outsl
repz
pop
pop
popf
push
int3
push
in
das
sub
shrw
les
insb
mov
ficomps
test
testb
xchg
loopne
je
idivl
pop
jno
fdivl
das
arpl
add
cmp
push
cmp
sub
pusha
stos
mov
mov
adc
xor
imul
test
xor
negb
in
xchg
aam
dec
or
aad
incl
adc
out
rolw
push
push
inc
inc
jp
daa
xchg
cmpsl
or
repz
out
cld
or
addr16
dec
dec
aas
ret
jg
add
push
jns
loop
push
es
push
pop
mov
adc
pop
cli
mov
or
fwait
es
insb
cli
ret
xchg
outsb
cmc
sbb
shr
out
pop
sti
sbb
cmp
push
xor
pop
push
pop
cmp
jbe
dec
mov
mov
lods
ja
rcrb
sub
fucom
jl
mov
add
pop
pushf
imull
ret
repz
mov
js
or
repz
inc
bound
add
loopne
and
jmp
repz
sbb
inc
cld
cli
roll
cmpl
in
stos
cmp
mov
fsubr
sub
xchg
or
and
out
push
xor
cmp
cmp
or
push
xor
push
out
shll
pop
mov
mov
and
sbb
test
in
iret
outsb
sub
hlt
insb
add
inc
and
jmp
mov
sub
xchg
fstl
nop
test
pop
pop
ja
dec
pop
inc
or
jle
mov
cmpl
mov
pop
shr
xchg
std
or
mov
enter
orb
addb
pop
imul
push
jb
xor
sub
push
pop
insb
addb
loop
inc
xlat
iret
add
flds
hlt
xlat
outsl
int3
add
adc
push
mov
xor
data16
and
mov
adc
jae
clc
popa
out
xor
and
or
sub
movsl
adc
or
jo
or
cltd
pop
jg
push
stos
jp
pop
xor
jo
push
rorb
xorb
cmova
and
lcall
cwtl
sub
stc
push
movb
xor
sub
pop
aad
test
roll
mov
jle
lahf
mov
push
or
xchg
pop
fdivs
cltd
lds
inc
je
cmp
ret
hlt
iret
scas
sub
fdivrl
xor
push
outsb
leave
xor
out
mov
sub
xchg
adc
adc
xchg
int3
cmp
fdivs
push
icebp
stc
pop
adc
add
pop
push
sub
jecxz
dec
or
fidivrl
loopne
add
lcall
and
shll
pop
mov
outsl
ja
sub
adc
arpl
mov
insl
xor
or
or
xchg
sub
das
pop
or
rolb
mov
les
push
push
mov
inc
mov
and
cli
xchg
xchg
push
sbb
push
mov
lcall
mov
mov
jnp
movsl
mov
push
mov
pop
out
fstl
sub
lea
jb
and
push
sub
cld
push
scas
xlat
push
mov
icebp
mov
or
cld
mov
fdivrl
fldt
shr
fnstcw
cld
jnp
out
in
fwait
jg
xchg
xor
sub
repnz
push
scas
xor
xchg
mull
dec
shlb
shrl
ffreep
push
or
add
mov
and
daa
scas
inc
lods
dec
fucomp
inc
into
int
adc
sti
xchg
cwtl
sbb
scas
cltd
cld
pop
cs
ja
xchg
test
jl
lods
cmp
cmp
loop
jecxz
jbe
insb
mov
imul
call
xchg
mov
jp
cmp
inc
and
add
pop
sbb
add
mov
pushaw
stos
ss
add
cltd
inc
fs
adc
out
hlt
push
inc
push
push
sti
inc
mov
sar
imul
aad
stc
ds
fstpt
push
and
jae
ret
mov
xchg
out
rcrl
xlat
xor
sub
loopne
mov
mov
dec
shrl
test
xchg
sbb
subb
lds
cmp
cmpsl
cwtl
mov
in
jg
jae
int3
mov
pop
add
fsts
mov
jmp
testb
pop
sbb
xor
xor
into
movsb
fcoml
sbb
fistpl
stc
push
push
dec
add
xchg
loopne
cli
jbe
imul
dec
jae
push
adc
adc
enter
enter
fcmovbe
inc
push
out
push
movsb
fldt
sub
dec
testb
sub
mov
cmpsb
adc
pop
dec
in
cmp
pop
push
in
inc
pop
lret
fisubrl
ret
repz
jecxz
in
cli
sub
add
add
test
lods
inc
test
and
pop
cmpsb
lret
in
mov
mov
fidivs
xchg
cld
jae
flds
mov
loope
test
pop
ret
shlb
or
call
mov
ljmp
dec
and
test
scas
xor
pop
xchg
xchg
pusha
cli
enter
test
jbe
test
cmp
test
call
fnsave
adc
test
mov
movsb
arpl
and
or
fdivl
sbb
std
sbb
or
and
fiaddl
outsb
nop
popl
cwtl
shrb
xor
es
pop
rcrb
in
mov
stc
ljmp
fstpt
inc
rcr
and
stc
inc
js
fisttpl
scas
popa
insb
xorl
pcmpgtw
rorb
in
or
cmc
xchg
xchg
stos
dec
gs
mov
and
into
cmpw
aad
loope
cmp
mov
jg
sub
cmc
mov
sahf
movsl
lods
xor
mov
scas
das
inc
mov
sbb
scas
cld
aam
ret
jp
push
mov
jl
cmc
pushf
mov
arpl
sbb
das
outsb
andl
inc
push
inc
mov
pop
inc
mov
mov
stos
inc
cwtl
in
xchg
repz
inc
fnstsw
sbb
dec
lahf
ss
out
test
mov
mov
mov
fadds
jl
jge
and
mov
pop
test
scas
and
and
mov
out
inc
push
add
inc
fmulp
inc
outsb
outsl
jnp
gs
adc
fiaddl
js
clc
push
shll
push
test
sbb
cwtl
test
movsb
imul
pop
repz
push
jp
mov
sub
stos
cmpsl
cwtl
sub
das
subb
cltd
lea
cmpsb
repnz
pop
jbe
pusha
idivl
xor
out
fstl
add
mov
mov
sub
test
scas
out
enter
jbe
bound
pop
jmp
sub
xchg
lcall
pop
mov
sbb
and
sbb
test
adc
fidivl
mov
scas
sbb
sahf
fbstp
fisubl
dec
adc
dec
mov
out
ljmp
rcr
repnz
mov
rcrl
push
lea
ja
push
pop
mov
sbb
inc
fwait
add
stc
pop
and
lret
pop
cmp
xor
aas
je
outsb
inc
mov
cmp
out
lds
test
mov
jecxz
pop
sbb
xor
add
ret
cmp
pop
add
shll
cmp
mov
fidivs
sbb
xchg
rorl
loope
arpl
inc
in
es
xor
add
mov
dec
mov
stos
jmp
push
xor
gs
testl
lods
dec
push
jae
enter
mov
jo
inc
lcall
lcall
pop
or
mov
mov
xlat
aam
in
testl
ret
dec
pop
adc
cmc
sbb
ficompl
imul
xchg
pop
sub
movsl
mulb
loope
pop
mov
out
adc
and
push
les
push
mov
push
xor
sbb
js
icebp
cmc
fdivrl
andl
insb
enter
lea
fucomip
dec
add
jb
loopne
popf
in
adc
fimull
jo
outsl
int
ret
push
mov
push
scas
pusha
loopne
aam
xorl
push
cmp
sub
leave
adc
xchg
outsl
push
add
mov
rclb
jmp
sbb
or
addr16
fsts
je
cmpsb
fildll
in
and
insl
sub
and
mov
jg
or
cmpsl
ljmp
imul
lock
mov
jg
xlat
lock
mov
xchg
pop
fcomi
inc
fs
or
inc
pop
and
das
dec
lahf
in
mov
jmp
dec
inc
jns
push
test
lock
movsb
insb
pushf
pop
adc
shrb
push
sbb
push
push
jae
pusha
fbld
inc
es
call
test
pop
iret
xchg
out
cli
js
add
imul
das
cld
fisubs
test
cmc
sub
xchg
add
mov
adc
jb
jle
out
in
cmp
add
jns
or
mov
test
repnz
dec
aaa
into
cmp
stos
inc
rolb
mov
cmp
lahf
shrl
mov
test
test
mov
sbb
adcb
loope
push
sar
int3
arpl
sub
fwait
sub
pop
fwait
cltd
xchg
or
daa
mov
xchg
xor
idivl
pop
repz
imul
push
fcmovnbe
insl
int
mov
lds
imul
fidivl
hlt
arpl
in
movsb
cmp
xchg
pop
out
add
adc
adc
inc
dec
xlat
outsb
ds
mov
clc
sub
data16
pop
cmc
pop
add
jae
or
mov
pop
repz
push
xor
mov
push
and
inc
scas
cli
adc
gs
aas
test
testl
out
mov
scas
cmc
iret
out
push
out
or
movsb
cmp
scas
inc
popa
jae
pop
test
into
pop
rol
inc
out
xlat
pop
adc
xchg
sbb
rclb
in
cmp
push
jp
rorl
xchg
ja
mov
fldl2t
pop
and
and
adc
pop
adc
sub
sub
dec
out
in
outsl
or
pop
loopne
xchg
or
mov
in
push
mov
xlat
and
mov
ja
sbb
add
stos
push
or
ss
mov
fs
jmp
and
inc
inc
adc
mov
fs
adcl
mov
xchg
clc
xchg
push
push
xchg
sub
rcr
mov
dec
fistps
fs
enter
mov
mov
imul
pop
loope
test
pop
cmp
lods
adc
mov
sub
add
aam
into
adc
cmp
push
jmp
lret
mov
bound
push
xchg
cmpsb
cmp
mov
addr16
pop
mov
jno
and
mov
imul
inc
jg
mov
or
test
fs
aad
outsb
loope
jg
sbb
pop
and
push
pushf
xor
xchg
mov
xor
adc
ret
push
and
inc
sti
xchg
cs
push
pop
mov
push
mov
cmp
fcoms
int3
out
cmp
fs
mov
push
push
cmp
push
out
das
push
xchg
and
xchg
sub
repnz
inc
or
daa
mov
sub
pop
jl
mov
jno
in
fsts
or
pop
xchg
enter
aas
pop
test
mov
inc
stos
in
sbb
les
mov
or
or
movsb
das
incl
es
insb
add
dec
or
imul
jae
lds
pop
outsb
or
push
cmp
js
add
ljmp
fs
dec
xchg
cs
mov
pop
jns
xor
clc
addl
jo
adc
mov
dec
push
add
dec
sahf
repz
xchg
ss
pushf
jnp
iret
arpl
sub
loope
stc
xchg
push
dec
add
outsb
sub
sahf
cli
mov
mov
addr16
pop
jmp
mov
icebp
and
cmp
pushf
roll
repz
xor
mov
xchg
ljmp
imul
icebp
mov
sti
jbe
pop
je
lea
and
test
dec
out
movsl
jge
pop
sbb
and
dec
mov
mov
push
in
dec
pop
sub
ja
out
xchg
jb
ret
ljmp
ljmp
test
bound
jmp
arpl
loope
out
adc
jmp
sti
hlt
mov
scas
pop
loop
push
push
ret
and
xor
push
fstpl
vmread
xchg
mov
or
push
and
jb
fsubrp
cltd
xchg
jmp
inc
mov
call
jno
loop
popf
adc
sbb
test
xor
adc
mov
mov
mov
cmp
stos
hlt
xchg
int3
push
jle
jl
sbb
cmovns
inc
stos
test
aam
xor
mov
sub
adc
int
nop
daa
popa
xchg
mov
push
pop
add
dec
or
mov
outsb
arpl
adc
pop
jmp
mov
mov
fdivrl
mov
leave
push
out
sub
and
push
rclb
insl
nop
sub
inc
fs
orl
data16
inc
push
fidivs
daa
into
jle
mov
int
scas
cmp
lret
rcrl
in
mov
mov
push
pop
pusha
fdivs
mov
xor
jb
mov
sahf
jno
aam
jae
mov
add
out
dec
jecxz
mov
inc
fimull
xor
aam
inc
jecxz
dec
pop
icebp
pop
jno
sbb
cmpl
push
inc
cwtl
xchg
xchg
or
mov
mov
jo
jle
scas
es
pop
dec
add
jl
pop
aas
es
ficomps
xlat
nop
pusha
mov
in
dec
push
aaa
dec
call
aas
gs
jo
std
lods
dec
cmpsl
push
push
xchg
or
mov
loope
sub
mov
loopne
jg
movsl
lea
cli
add
scas
mov
mov
arpl
sbb
jo
sub
push
mov
pop
cmpsb
arpl
xchg
cmpsb
ds
or
js
test
cmp
pop
mov
int3
jmp
dec
loope
and
mov
mov
in
mov
jmp
shrl
push
mov
sbb
es
jle
and
jbe
inc
cltd
mov
cmpsl
rcrl
push
lods
push
mov
cmpsl
mov
lret
test
inc
and
sahf
push
lcall
fisubrs
inc
ffreep
outsb
and
mov
lock
adc
repnz
mov
shll
dec
or
xor
rclb
movsb
jg
jecxz
sahf
sbb
mov
cmp
and
mov
jo
jmp
pop
sbb
sbbb
fs
jb
pop
loope
mov
andb
das
jns
and
sti
mov
leave
lahf
xchg
push
jae
mov
cltd
stos
sti
adc
xor
loop
jbe
mov
loop,pn
fsts
decl
in
mov
arpl
int
adc
cli
push
push
inc
fwait
or
cmp
bswap
fs
jmp
inc
test
fs
in
mov
push
fs
mov
pop
dec
and
sbb
out
sub
cld
cltd
divl
out
rorb
cltd
jnp
xchg
jp
sti
inc
inc
cwtl
push
push
out
ss
sub
data16
xchg
push
jnp
fisubrl
sarl
and
mov
push
mov
xor
pop
sbb
aam
add
shl
loopne
mov
fwait
std
xchg
pop
cltd
mov
lock
or
mov
xchg
push
fimull
imul
pop
icebp
cmp
jbe
or
scas
cltd
add
ror
std
loopne
pop
sbb
sub
push
sahf
sub
popf
mov
pop
push
inc
inc
into
mov
jge
mov
test
mov
adc
mov
cmp
out
out
cld
shr
cmpb
lret
lock
in
insl
mov
xchg
sbb
adc
jge
xor
or
cmpsl
push
inc
or
mov
dec
lahf
iret
popa
sbb
pop
push
and
cmc
xchg
cs
cmp
jp
mov
mov
ja
sub
inc
shll
loop
inc
rorl
out
mov
add
or
lods
lcall
pop
sub
inc
mov
int3
icebp
cwtl
sbb
in
scas
test
mov
xlat
repz
mov
test
cmp
les
sti
lea
inc
data16
mov
push
xor
fadds
pop
and
push
int
dec
push
pop
jae
mov
mov
mov
ds
inc
sbb
ja
mov
inc
mov
cwtl
orl
mov
insl
aam
mov
dec
sbb
inc
mov
testl
ret
push
cmc
xor
ja
cmpsl
pop
call
add
aam
addr16
inc
lcall
cmpsb
xchg
lea
inc
fcomps
or
pop
push
cltd
pop
ror
jno
in
jns
testl
aaa
mov
sahf
xor
or
mov
sbb
imulb
inc
aam
add
daa
mov
jg
pop
cmp
or
lods
add
addr16
cmp
pusha
enter
nop
jmp
out
cld
icebp
mov
daa
mov
out
xchg
inc
mov
and
cmp
in
aas
cli
cmpb
sub
int
and
inc
fstl
jmp
sbb
mov
mov
jns,pt
sub
jecxz
cwtl
dec
xchg
push
test
mov
je
gs
int
lret
pushf
sub
roll
aaa
and
mov
push
push
cmp
dec
cmpsl
sub
sub
shll
mov
mov
popf
pop
rcl
xor
lcall
push
test
sti
jns
dec
xchg
ja
insl
or
and
xchg
int
push
cmp
sub
push
xchg
add
scas
mov
das
or
xor
stos
cmp
sbb
mov
push
jp
pop
sub
inc
jae
dec
loopne
jg
ficoms
mov
dec
arpl
xor
mov
xor
inc
pop
pop
sub
mov
lods
add
or
mov
les
add
cmp
movsb
outsb
push
hlt
xchg
push
mov
inc
clc
shrb
icebp
insb
pusha
dec
push
jbe
add
adc
mov
jbe
inc
test
inc
lret
add
push
or
repnz
and
shrl
orb
cmp
dec
in
cmp
rcll
push
mov
pop
jle
sub
sub
pop
fwait
sub
jge
mov
jnp
inc
fsubrs
addl
idivb
and
push
jle
scas
sbb
jbe
xlat
orb
xchg
dec
sub
sbb
inc
jnp
adc
addr16
xchg
push
shll
add
jns
outsl
pop
push
jae
jns
cs
fiaddl
pop
xor
push
decl
xorb
dec
lods
shl
dec
jg
push
mov
jmp
jl
das
xchg
movsl
mov
xor
loop
imul
movsb
cmp
andl
in
dec
push
out
inc
adc
dec
movsl
lods
fstl
stos
jl
adc
scas
ds
jnp
scas
in
cmp
inc
enter
dec
xchg
mov
hlt
mov
jp
add
rcl
imul
mov
or
dec
pop
ja
jnp
mov
adc
xchg
sub
shr
add
cmpsl
cmp
mov
les
aam
jle
hlt
jns
and
out
int
xchg
icebp
dec
loopne
jbe
adc
xchg
cmp
mov
andb
repnz
movsb
sti
lcall
pop
rol
cmp
insb
ret
sub
push
divb
pop
daa
jbe
cmp
xor
mov
jmp
pop
push
ds
inc
adc
sub
and
push
pop
push
rcrl
aas
sar
jns
ljmp
out
add
pop
jb
test
adc
mov
std
addr16
jno
xor
xchg
and
add
mov
stos
jmp
xchg
mov
or
jl
decb
xor
and
clc
std
shl
or
subps
aad
pushf
mov
mov
addr16
sbbl
jecxz
mov
test
bound
lret
fs
pop
inc
fisttpll
fwait
cwtl
sub
and
call
cli
and
push
mov
sub
dec
or
popa
mov
sbb
add
pop
adc
movsl
inc
mov
xchg
xor
jg
rol
adc
mov
xlat
test
pusha
xor
lahf
inc
push
and
fiadds
push
jmp
lock
in
imul
or
sahf
mov
add
sub
cmpsl
lds
cmp
icebp
ja
ja
neg
daa
scas
sub
xor
stos
adcb
aas
in
dec
dec
es
cmpb
dec
cmp
aad
mov
enter
lahf
aad
inc
mov
adc
xchg
lret
lret
or
es
jne
cmp
push
filds
cs
stc
pop
mov
cwtl
cmpl
leave
fimuls
fsubrs
push
pop
push
mov
mov
leave
aas
insb
cmp
xchg
inc
movsb
mov
pusha
lret
push
cld
mov
popa
sbb
xor
or
dec
xchg
cmp
pop
xchg
push
cs
into
lahf
lods
push
dec
sahf
stos
int3
pop
push
xor
ds
sbb
in
inc
repnz
jne
ja
int
cld
or
iret
adc
push
mov
in
or
out
cmpsl
jle
les
lea
cmp
xchg
xchg
mov
lods
mov
lods
rep
or
and
push
xchg
xor
stc
ljmp
jle
dec
pop
cmp
test
sbb
inc
mov
mov
pop
add
xor
cltd
inc
andb
in
clc
daa
cmp
imul
xor
inc
hlt
pop
js
mov
sbb
aad
scas
push
ret
int
lret
test
nop
inc
fmull
mov
add
scas
ljmp
call
mov
lds
icebp
or
push
push
inc
jno
lods
pop
jp
int3
ret
pop
div
in
fistl
ret
repz
adc
scas
xchg
fs
into
faddl
iret
std
shl
scas
stos
sarl
hlt
mov
lahf
daa
pop
mov
fcompl
add
sub
idivb
jne
inc
addr16
test
mov
cmp
cmpsb
sub
out
inc
jg
cltd
jbe
cmp
xchg
xchg
idivl
dec
sbb
testb
mov
sbb
push
inc
sbb
push
hlt
sbb
jmp
cld
cmpsl
dec
fsubl
dec
stos
dec
mov
pusha
add
jne
add
icebp
add
std
jo
sbb
inc
dec
xlat
in
inc
mov
adc
lock
xor
mov
push
imul
push
and
jae
subl
das
add
enter
imul
mov
add
insb
xor
dec
dec
adc
pop
inc
push
cwtl
adc
adc
int
lret
std
inc
jecxz
adc
cmp
sub
pop
jp
int
js
sub
inc
cmpsb
jmp
xorl
sub
push
mov
sbb
cwtl
add
ljmp
ja
and
ret
and
shrl
lods
mov
nop
jb
pusha
inc
sub
imul
inc
rcr
fadd
fisttpll
and
xor
bound
adc
sub
or
mov
int3
fimuls
mov
or
add
sbb
dec
dec
mov
in
outsb
ret
rol
std
xor
pop
ret
adc
pop
imul
adc
lods
sbb
jl
inc
lods
sbb
fld
mov
rorl
flds
out
in
cwtl
pop
xchg
push
sti
sahf
dec
ss
sbb
iret
and
ljmp
dec
inc
mov
lods
cmpsb
gs
sbb
enter
sbb
sub
in
in
fsubs
or
bound
js
mov
jbe
fdivs
inc
or
xchg
inc
sub
aas
sub
das
ret
add
and
sub
int3
adc
sarl
xor
aad
das
add
mov
fwait
dec
fsubl
add
icebp
dec
lock
fdiv
adc
inc
mull
sub
adc
fmuls
add
rolb
mov
push
sbb
lock
and
jb
rcrl
xor
xchg
pusha
fwait
repz
push
jb
clc
data16
out
lods
mov
stc
xchg
test
lods
dec
mov
data16
lods
adc
in
xchg
add
or
ficompl
out
pop
pop
loop
mov
outsl
xor
aad
rorl
out
xchg
lods
punpcklbw
bound
sbb
add
adc
add
and
fdiv
jp
mov
lcall
cs
sti
xchg
push
pop
adc
ds
sbb
mov
jns
mov
adc
and
xor
xor
mov
sbb
mov
test
mov
aam
cmp
mov
aas
outsb
mov
mov
add
xchg
fcomps
xor
inc
fs
cs
dec
idivl
pop
adc
das
fisubs
arpl
mov
pop
addr16
sbb
push
lds
mov
das
out
bound
jbe
add
call
popaw
testl
jp
ret
sbb
and
sbb
out
stc
add
push
pop
lea
mov
dec
jns
fisubs
dec
mov
jnp
or
test
in
inc
mov
fldln2
loopne
adc
sub
shll
and
pop
outsl
dec
es
mov
push
or
pop
adc
lea
mov
xor
jns
or
xor
and
pop
lock
or
sub
mov
push
out
rcll
into
into
nop
mov
mov
jmp
xor
popf
cld
punpckhbw
jbe
xchg
pop
insl
movsb
fildll
mov
fstl
enter
mov
outsl
hlt
inc
fabs
dec
mov
mov
sub
outsl
hlt
mov
mov
push
stos
mov
lret
add
clc
sub
and
cs
clc
div
jmp
iret
cmp
mov
adc
xchg
mov
pop
stos
dec
gs
xchg
imul
adcb
or
cmpsl
xlat
jns
ja
ret
lds
dec
in
outsb
jecxz
enter
inc
fs
xor
nop
push
movsl
lcall
mov
lods
popf
rep
cs
xor
jecxz
jnp
push
add
push
enter
cmpsl
push
push
icebp
sbb
ret
outsl
or
mov
imul
rclb
ss
outsl
loope
insl
pop
cmp
xchg
scas
sbbl
test
out
jnp
mov
ss
out
mov
repz
cmp
push
sti
fwait
or
jg
cmpb
push
addr16
cli
icebp
mov
adc
mov
cli
imul
mov
add
jne
cmp
pop
inc
test
repz
test
std
inc
out
incb
or
cmpsb
test
adc
in
mov
xchg
gs
sbb
test
repnz
in
js
inc
cli
js
inc
test
fdivrs
into
or
fisubrl
xchg
leave
add
cmpl
or
sub
xorl
insl
lods
ret
jo
cmp
adc
sbb
data16
int3
insb
jle
mov
pop
scas
fsts
push
mov
xor
icebp
mov
mov
add
jmp
pop
add
jecxz
lods
fsubs
fcomi
testl
lret
out
jmp
roll
dec
gs
test
js
sub
push
inc
inc
fdivl
js
pop
cmp
std
and
lea
repz
adc
aad
sbb
xchg
dec
call
pop
push
mov
shrl
mov
cmpsb
ds
fdiv
inc
or
inc
or
sbb
jnp
push
out
flds
dec
pusha
adc
ss
or
push
mov
add
ror
mov
testb
test
test
lret
and
mov
dec
aad
push
in
pop
and
mov
mov
add
push
mov
repz
aas
loopne
shl
cmp
es
sbb
xchg
dec
dec
jp
mov
xchg
out
rol
and
push
hlt
push
dec
and
pop
pop
mov
in
test
add
fidivrl
jg
jo
inc
adc
jo
imul
fwait
pop
das
cld
add
lcall
push
out
cmp
sbb
ret
sbb
xor
and
inc
push
mov
xchg
subb
lahf
jecxz
or
sub
je
push
push
leave
mov
jno
sub
inc
cmpsb
xor
daa
push
mov
shrl
ret
sub
xor
stc
push
sbb
fisubs
outsl
mov
pop
out
pushf
mov
add
insb
rcrl
out
sahf
test
lea
lret
stc
jno
loopne
push
rorl
loop
mov
sub
push
cmp
loopne
push
orb
xor
xor
xor
scas
jb
add
cld
push
push
jle
call
sub
fistpll
sahf
inc
sti
fwait
and
pop
inc
mov
jl
or
mov
mov
push
lret
pusha
outsl
es
test
lahf
rdtsc
cltd
sbb
adc
cltd
lret
adc
inc
inc
outsb
pop
sahf
lahf
jbe
or
dec
adc
das
pop
mov
jne
ljmp
mov
add
icebp
jbe
loop
xchg
xor
xchg
jae
movsl
jnp
jp
jmp
sbb
and
xchg
mov
cld
callw
jne
aad
ljmp
pop
lea
dec
ds
int3
fcoms
mov
iret
mov
push
mov
or
outsb
sbb
lret
adcl
addr16
lret
out
ret
mov
xchg
cli
inc
popf
sbb
mulb
inc
and
jae
stc
addb
pop
sbb
pop
fdivs
orl
mov
repnz
mov
add
lods
enter
xor
stc
sbbb
sbbl
sbb
mov
fwait
cs
popl
mov
xor
es
std
or
dec
ret
int3
mov
inc
imulb
shl
in
ja
sbb
mov
mov
ljmp
cltd
inc
int3
fidivrs
hlt
mov
sub
rolb
and
lock
add
push
psrad
cmp
cs
pop
sahf
test
mov
cmpsb
es
mov
mov
hlt
push
sbb
es
sahf
xchg
mov
loopne
or
mov
push
andl
pushf
fwait
mov
fildll
mov
mov
rcrb
jnp
in
dec
pop
sti
mov
jo
das
mov
and
mov
jg
mov
lods
out
fbstp
push
fadds
pushf
mov
fbld
sbb
push
lock
or
xor
mov
add
aam
pop
rolb
and
and
mov
add
push
add
pop
jmp
stos
inc
psllw
aas
popf
outsl
shlb
into
mov
loope
push
aas
sbb
popa
pop
ret
ret
cmpsl
ds
jp
mov
cmp
fwait
pop
fnsave
pop
ja
push
and
push
cld
cmp
mov
out
lret
and
mov
test
mov
sbb
mov
std
xchg
push
cmpsb
pop
jbe
sar
jg
ret
sarl
add
push
mov
or
or
adc
jbe
loop
and
inc
xchg
test
and
push
fmulp
xor
adc
jecxz
inc
in
mov
mov
pop
xchg
bound
adc
std
sub
cltd
movntq
out
fsubrs
pop
cmp
cmp
sub
add
push
add
jle
inc
in
cld
jmp
out
aas
popf
xor
xchg
outsb
xor
cmc
mov
push
bound
flds
xor
fnstenv
sbb
into
cmpl
cltd
std
inc
push
sub
popa
daa
ds
pusha
sub
mov
mov
inc
stos
mov
stc
push
ja
push
bound
cmp
dec
movsl
mov
push
je
cld
fdivs
jp
dec
and
outsl
out
mov
mov
sbb
sub
fstl
pop
or
mov
test
mov
das
xor
sar
push
icebp
ja
cmp
gs
outsb
mov
rorl
add
dec
fwait
jo
fsubr
inc
mov
es
scas
pusha
out
push
pop
xchg
rcr
push
hlt
and
push
pop
xor
push
in
mov
adc
popa
out
inc
sahf
faddl
sub
ljmp
dec
scas
outsl
mov
push
xor
add
cmp
pop
shll
call
pop
outsb
push
xchg
pushf
push
xchg
mov
pusha
mov
xchg
mov
rorl
test
ret
mov
mov
cmp
dec
sbb
addr16
cltd
sbb
inc
les
push
flds
loopne
add
sub
push
lods
and
pop
insl
out
loopne
sti
xchg
maskmovq
imull
cmp
orl
test
int3
dec
js
outsl
sub
mov
add
rcll
jnp
mov
xchg
add
xor
fisttpl
not
push
add
es
adc
mov
inc
data16
stos
mov
notb
stos
or
outsl
lret
je
rcrb
arpl
jae
es
pop
icebp
jo
lret
bound
popa
ljmp
inc
int3
arpl
mov
adc
mov
xchg
push
mov
mov
fisubs
lret
ss
pop
test
sub
push
adcl
test
in
ljmp
push
lock
shr
out
popa
dec
loope
mov
push
fmul
cmp
pop
add
je
into
jb
jnp
lock
pop
loopne
repnz
jns
ss
cmpsl
mov
out
mov
xor
les
mov
inc
imul
xor
push
repz
divl
jmp
jb
dec
pop
adc
les
sub
outsl
into
and
add
mov
mov
and
hlt
lret
data16
pop
ss
popl
mov
roll
sbb
pop
push
outsb
lds
lods
imul
fistps
mov
rcrb
mov
xchg
xor
sbb
repnz
shrl
ja
pop
shll
test
pause
xchg
testb
daa
mov
test
mov
fnsave
notl
scas
aas
lods
inc
lods
scas
and
jmp
sahf
pop
movsl
int3
test
adc
fidivrs
dec
stc
xor
push
xchg
adc
data16
xor
into
iret
pop
in
popa
sahf
jp
xlat
ret
popf
shlb
insb
pop
fisubl
sbb
cmpsl
lods
ss
sub
jge
bound
add
cmp
sahf
push
f2xm1
out
imul
popa
xor
fistpll
mov
in
std
ret
inc
scas
repz
xor
lahf
mov
incl
fs
mov
pop
lods
fsubrl
xor
dec
mov
add
nop
cmpb
push
bnd
add
inc
gs
and
in
and
rsm
int3
iret
imul
pop
in
mov
adc
addb
sub
and
dec
pop
lock
jmp
jnp
mov
in
shufps
and
insl
push
pop
cld
cmp
rcrl
inc
ljmp
inc
xlat
sbb
ds
insb
repz
jp
in
clc
pop
inc
scas
or
mov
adc
adc
imul
inc
pop
lret
jle
es
adc
leave
inc
xchg
scas
inc
inc
ret
adcl
adc
fsubs
jno
push
cwtl
mov
adc
out
mov
mov
jmp
mov
sub
nop
imul
mov
push
insl
in
leave
pop
add
add
sub
pmaddwd
out
mov
nop
pop
fiadds
in
lock
mov
adc
xor
faddl
fcom
int
inc
outsb
xor
aas
ret
stos
inc
call
imul
clc
lea
lods
jo
sub
aam
out
jecxz
std
mov
add
inc
add
mov
jne
push
daa
sbb
cmc
jg
lret
scas
stc
int
push
outsl
add
fadds
fcomip
xchg
sti
xchg
xor
mov
sub
movsb
mov
fistpll
outsl
scas
dec
iret
sbbb
pop
out
mov
shrl
pop
icebp
mov
outsl
adc
or
aas
mov
push
adc
adc
inc
test
jle
sub
enter
dec
push
fs
cltd
pusha
popa
lcall
sbb
push
enter
sub
clc
dec
and
in
fimuls
pop
sbb
mov
dec
les
stos
rorb
inc
sahf
mov
xor
lcall
xchg
call
cmpsb
dec
ror
pusha
add
dec
mov
out
push
xlat
inc
popa
or
pop
and
mov
ret
jl
add
sbb
mov
int
jns
js
test
das
push
dec
scas
hlt
mov
rcrl
scas
jl
sub
rcl
mov
outsl
out
jg
movsl
out
addl
aaa
push
sarb
dec
inc
pop
pop
hlt
add
cmp
jnp
aad
dec
inc
scas
scas
insb
jle
mov
jl
sbb
xorl
int
dec
sbb
lahf
imul
shll
mov
call
imul
jmp
mov
rcl
shlb
dec
push
add
iret
mov
fld
inc
je
sbb
cmpl
jb
and
stos
xchg
insl
mov
stos
sbb
xchg
mov
inc
flds
jno
xchg
repz
lret
sbb
sahf
lahf
cli
cmp
into
and
movsb
push
hlt
adc
es
or
mov
dec
popa
cmp
popa
nop
insl
sub
aad
dec
or
test
mov
mov
jbe
and
inc
mov
dec
hlt
lret
cltd
cmp
dec
test
jae
test
add
aad
pop
inc
insl
fdivrs
push
jl
aad
icebp
mov
pop
into
mov
int3
lret
mov
jg
and
and
xchg
dec
push
mov
cs
add
outsl
jnp
add
aad
mov
aam
xor
sahf
mov
push
cmp
out
fwait
xchg
add
mov
out
mov
adc
out
popa
stos
xchg
sbb
xchg
sub
int3
enter
in
incl
adc
push
sub
sbb
pop
insl
push
addr16
imul
shll
jnp
dec
mov
clc
xor
scas
mov
clc
je
scas
dec
gs
add
test
sub
fisubs
gs
repnz
cwtl
stos
popf
call
cmp
cli
test
sub
lods
addr16
add
scas
or
cmp
jl
sub
ret
jne
adc
mov
insl
sub
or
sub
xchg
xchg
mov
lahf
pop
adc
xchg
sbb
sti
xchg
lcall
jo
jb
cmc
stos
mov
xor
inc
adc
dec
push
aam
mov
insw
xor
or
fwait
pop
push
push
bound
dec
cmp
ss
out
jae
inc
or
sub
adc
fdivs
sub
sbb
call
bnd
in
xor
mov
movsb
jecxz
lea
movsb
inc
pop
jo
test
sahf
pop
jl
cltd
out
cwtl
js
sbb
cmp
inc
lea
add
adc
aam
test
icebp
sub
mov
pop
into
mov
sbb
xchg
dec
ds
sub
sbb
and
xchg
add
lahf
xor
dec
jecxz
push
dec
xlat
jo
pop
popf
lret
int3
jmp
xor
inc
add
sub
jle
call
lret
xchg
shrl
add
pop
inc
sbb
inc
and
cmp
mov
cwtl
aaa
ss
xlat
cwtl
xchg
sub
mov
mov
loop
cltd
push
loop
jl
and
pushf
inc
add
sbb
inc
ret
fwait
ret
add
sti
sub
lds
gs
call
push
pop
add
js
rorl
iret
cmp
add
loopne
push
adc
int3
cmp
out
mov
lods
pop
mov
push
cmpsb
outsl
ret
in
hlt
jno
mov
loope
push
adc
adc
fwait
cmp
scas
dec
lret
cmp
add
push
mov
mov
jmp
icebp
inc
test
jmp
xor
ljmp
dec
clc
outsl
lahf
addr16
push
ljmp
popf
popa
in
push
in
insl
aaa
aaa
push
mov
lea
cmc
shl
aam
das
pop
lahf
adc
inc
mov
fnstenv
ror
cmp
iret
cmpsb
imul
aam
adc
test
lahf
push
mov
lds
adc
imul
push
fdivrl
sbb
insb
jae
popa
push
cltd
popa
mov
es
jg
push
out
ss
lea
inc
pop
xor
imul
cmp
cmp
dec
icebp
subb
jge,pn
cmpsl
rorb
in
mov
loope
enter
mov
repz
or
les
xorl
es
mov
insl
std
aam
inc
push
mov
sub
imul
pop
sub
pop
negl
adc
bound
sbb
mov
mov
loopne
mov
push
out
adc
jmp
xor
mov
dec
cmpps
fcoms
shlb
xchg
scas
inc
lea
mov
xchg
mov
or
pop
dec
sbb
in
test
mov
nop
daa
scas
jg
jne
dec
scas
out
shlb
cwtl
orl
dec
rcll
inc
cs
dec
sub
loope
cmp
add
int3
dec
call
rclb
adc
js
mov
imul
subb
inc
xor
xor
inc
rcrl
mov
inc
mov
lret
testl
test
das
ret
mov
frstor
jno
cmpb
cmp
in
pop
pop
mov
ret
adc
rorb
int
int
outsl
add
jae
mov
or
rol
push
mov
jno
jnp
in
rcrl
pop
mov
loopne
add
adc
dec
inc
daa
mov
hlt
lea
mov
aas
jno
xor
loope
inc
mov
xchg
xor
mov
fidivrs
test
mov
addr16
mov
adc
inc
and
inc
int
xchg
sbb
xchg
inc
outsl
mov
pop
add
sub
push
mov
inc
decl
dec
sbb
sbb
sbb
scas
sub
lret
or
mov
or
insb
adc
jb
insl
cmpsl
pop
cmp
nop
negl
dec
push
andl
cmp
aad
push
jno
rcrl
mov
pop
sub
mov
mov
data16
sar
jmp
popf
and
fsubrs
pop
adc
sub
sub
fistpll
aas
pop
cmp
out
add
xchg
cmpsl
out
xchg
mov
bound
lret
push
mov
imul
insb
mov
lahf
push
stos
jb
jb
pushf
in
xchg
add
sub
repz
xlat
mov
mov
fwait
lahf
dec
sarl
pop
hlt
movsl
in
aas
pusha
add
outsl
inc
sub
push
ds
in
std
pop
ret
xor
es
dec
cmp
pop
dec
or
inc
leave
add
push
test
add
sbb
pop
sbb
mov
je
pop
outsb
sbb
mov
xor
jecxz
ret
adc
dec
push
insb
sbb
ss
xor
mov
adc
fisubrs
and
xchg
add
cld
or
xchg
fwait
pop
mov
test
movsl
icebp
add
xchg
mov
adc
push
push
in
mov
lods
inc
lcall
or
adc
fsubl
loopne
and
imul
outsl
xlat
out
gs
ret
xor
in
in
sbb
mov
or
outsb
and
xchg
mov
mov
fcompl
les
adc
inc
and
addb
mov
hlt
sahf
fnstenv
add
xchg
sub
and
sarb
fisubrl
lahf
lret
and
pop
dec
or
xchg
int
scas
inc
or
fiadds
lret
or
test
fs
cwtl
rol
sub
negl
cmp
jbe
push
sahf
jecxz
push
movsb
mov
mov
arpl
push
mov
xchg
arpl
ficomps
fs
jo
push
imul
test
push
out
nop
xrelease
shlb
mov
fwait
cmp
aad
and
push
sub
jae
add
sbb
addb
cmp
popa
in
icebp
movsl
mov
push
loope
jb
xchg
popa
inc
popa
js
or
scas
or
mov
xor
pop
int
inc
popl
in
xchg
lret
and
jo
bound
and
lcall
psrld
mov
push
pop
adc
push
popf
out
sbb
das
adc
pushf
inc
dec
jl
shl
and
and
imul
xchg
cmpsb
std
shll
mov
fdivl
inc
dec
mov
or
mov
test
les
dec
cmp
scas
ret
dec
adc
pop
pusha
scas
or
frstor
sub
test
add
jbe
sub
mov
addr16
xchg
ds
ljmp
jnp
inc
inc
loop
pop
cli
inc
cwtl
aas
nop
mov
or
sub
insb
jp
in
and
push
mov
xchg
inc
add
sbb
xchg
lret
cmp
int
mov
aad
xchg
mov
test
in
inc
push
lods
ja
insb
cmpsl
mov
jg
not
or
mov
not
ret
clc
aad
rol
jg
xchg
icebp
movsl
pop
outsb
pop
pop
notb
jle
or
xchg
jmp
enter
and
add
lods
ss
jmp
push
andb
out
lods
in
popf
popf
xor
add
es
fsts
clc
cmp
test
fwait
pop
jmp
push
cltd
into
xorl
dec
jo
test
insl
js
pop
jecxz
in
lret
and
and
push
push
stos
mov
repnz
jge
xchg
pop
test
inc
divb
scas
popa
jnp
xchg
int3
push
jl
cmc
je
sub
add
lahf
cwtl
movsb
cmp
jle
dec
mov
cmp
inc
idivb
jns
out
in
ret
adc
fnop
int
das
loop
xchg
xchg
ljmp
loope
ret
mov
nop
cs
fdivrl
cmpsb
xadd
cmp
xchg
test
sbb
popa
sahf
mov
jno
call
or
push
inc
xchg
out
dec
leave
and
leave
outsb
jne
fs
nop
in
mov
xlat
mov
cmp
gs
mov
add
mov
inc
adc
ja
popf
mov
lret
in
aas
and
sub
les
add
aam
adc
jl
push
data16
out
pop
movsb
mov
xor
fisttpll
scas
fstl
pop
out
push
sbb
mov
xlat
inc
lock
loopne
add
ffree
or
inc
arpl
movsb
and
fdivs
or
pop
dec
popf
mov
movsl
cli
jle
or
ljmp
mov
dec
pop
inc
out
or
icebp
mov
aaa
xchg
xor
into
ja
movsl
sub
mov
dec
sub
jl
mov
push
dec
add
and
movsb
pop
lret
hlt
cs
sbb
dec
cmp
les
scas
fcoms
andl
dec
jo
loop
lcall
popa
push
movsl
xchg
sahf
mov
inc
rcrb
out
mov
pop
ds
outsl
sub
mov
cmp
testb
pop
adc
jmp
pop
adc
insb
jle
cmpsb
mov
mov
xchg
push
aad
mov
pop
out
cmc
push
out
jp
xchg
pop
repz
or
lahf
xchg
add
jl
jle
cld
xchg
or
fidivs
or
push
dec
mov
aas
in
js
loop
mov
test
xchg
push
int
shll
pop
int3
and
push
mov
adc
movsl
xchg
xor
test
sbb
stos
fldcw
call
jne
out
add
loope
xchg
add
js
sbb
cmp
mov
pop
add
not
fcmovnu
je
ja
shlb
sti
lods
lods
sub
sarl
push
inc
pop
xchg
jle
inc
pop
xchg
cmc
or
cmpsl
sub
xchg
pushf
mov
sub
jp
incl
pop
out
push
pop
or
pop
mov
outsb
jmp
jo
fsubs
sar
shll
jecxz
pop
sbb
jp
mov
mov
repz
push
push
fstpl
mov
int
adc
dec
cld
dec
loope
fst
testb
jecxz
in
and
push
jmp
pop
pop
cld
ror
jle
in
mov
cmpsl
out
ds
dec
cmp
inc
shll
add
sbb
cld
mov
js
and
int3
inc
or
mov
sahf
dec
jmp
inc
jmp
adc
or
fcmovnbe
rorb
sub
mov
aam
aas
push
push
cmpsb
lods
push
sahf
mov
dec
outsb
pop
stos
mov
shll
adc
xor
test
mov
cltd
lret
test
pcmpgtw
fcoms
fidivrl
shlb
push
hlt
push
jmp
orb
fs
mov
fstpt
add
jle
hlt
imul
and
or
push
into
sub
loope
in
and
pop
xchg
cmp
call
xchg
dec
imul
jo
dec
mov
dec
into
xor
adc
pop
ds
jne
pushf
repz
mov
add
xor
xor
mov
xor
and
xchg
adc
inc
sbb
in
repz
xor
xchg
sar
popf
fistpl
out
cmp
dec
loopne
or
mov
repnz
pusha
aad
inc
testl
mov
jmp
scas
enter
hlt
adc
mov
jge
out
mov
movsl
push
push
xchg
arpl
sub
xchg
lea
xchg
lock
mov
imul
scas
adc
fsubl
mov
adcl
roll
add
dec
push
pop
stos
sti
in
pop
pushf
stc
shrb
daa
enter
ficompl
mov
in
lods
les
mov
aad
pop
cmp
jo
and
pushf
pop
stos
cmpl
or
dec
pop
insb
cmc
mov
jno
icebp
mov
sub
shrl
mov
mov
and
shl
icebp
paddw
shrb
jge
fsubrs
lock
mov
pop
dec
mov
dec
and
pop
push
or
pop
cmp
loopne
jg
shll
cmp
xchg
mov
sti
outsb
mov
push
jecxz
lcall
inc
xor
stos
mov
ljmp
call
insb
mov
cmp
insl
fidivl
add
movsb
cmp
clc
or
push
imul
push
test
test
lret
jb
adc
ret
lods
pop
pop
pop
mov
jmp
inc
cltd
and
add
mov
mov
sbb
push
movzbl
out
and
or
cmp
pop
leave
fneni(8087
xchg
cmpsb
mov
cmpl
cmp
ret
push
outsl
or
and
movsw
mov
outsb
cmpsl
orb
cltd
mov
xchg
cmpl
or
lcall
cld
mov
xor
sbb
bound
into
cli
pushf
stc
lds
add
daa
mov
mov
sub
mov
push
jl
movsl
je
rcrb
xchg
sub
pop
inc
xor
scas
xchg
sub
cmpsb
ja
or
mov
add
and
dec
mov
cmc
sbb
pop
push
jae
jbe
stc
imull
add
bound
jge
lods
lahf
loope
inc
cmp
dec
jns
mov
loopne
sar
adc
lods
lret
bound
out
add
test
imul
cmp
xlat
pop
scas
or
stos
in
adc
insb
ret
pop
popl
in
xlat
mov
mov
xor
xor
popl
in
adc
jb
aas
push
dec
push
adc
pop
repz
pop
clc
addr16
xchg
push
stos
mov
dec
addr16
or
cmpsl
lea
jge
pop
or
jmp
movsl
insb
scas
or
push
jae
adc
sbb
icebp
or
push
lods
lahf
pop
mov
je
inc
in
push
hlt
xor
fdivr
test
cmp
add
and
test
dec
or
dec
fimull
shll
dec
xchg
and
ret
out
mov
fisttpl
test
nop
outsb
jb
imul
pop
xor
fidivl
clc
nop
cmc
mov
xchg
mov
lahf
bound
adc
test
dec
jno
test
lret
push
and
jne
xchg
addr16
jmp
mov
ljmp
clc
scas
mov
sbb
pop
push
loope
addr16
xchg
cmp
imul
xor
push
into
sub
add
mov
cmp
push
sub
adc
cltd
xor
fs
and
mov
cmc
adc
inc
pop
mov
in
sub
loope
cmpsl
cmp
and
les
inc
std
jo
das
addr16
outsb
inc
push
hlt
std
sub
push
jb
es
dec
inc
push
stos
mov
xor
call
or
jnp
aaa
aas
daa
dec
inc
fdivrs
out
push
add
cmpsb
ja,pn
sbb
push
ljmp
inc
pop
stc
sbb
mov
sbb
je
dec
std
imul
pop
cmc
cltd
or
jge
jl
sub
sub
repz
add
fwait
int3
arpl
mov
mov
mov
sub
outsl
pop
in
add
loop
mov
mov
addr16
cwtl
adc
push
outsl
stos
mov
test
inc
scas
mov
adc
mov
out
aad
fiaddl
lods
popa
jg
xchg
push
in
shrl
lock
je
xor
lret
xor
pop
mov
loop
inc
dec
inc
add
hlt
cmp
aas
imul
sub
cmpsl
ffree
pop
test
jae
xor
imul
icebp
fidivrs
add
jl
xchg
jno
adc
jge
addb
push
out
cmp
and
popa
mov
push
stc
leave
js
mov
cs
push
pushl
rorl
scas
push
test
push
jns
sbb
popa
cmp
xchg
or
xchg
mov
fldt
cli
fidivl
scas
leave
scas
cld
adc
outsb
jno
cmp
scas
lds
dec
rcrl
inc
sahf
and
pushf
and
aad
gs
sub
mov
dec
push
into
fs
jb
dec
mov
lods
test
pop
fcmove
dec
mov
push
stos
inc
fcmovu
xor
adc
cmp
jle
sbb
add
dec
pop
psubsw
outsb
xor
pop
arpl
mov
mov
in
adc
cmp
scas
push
lret
ljmp
aam
dec
dec
scas
cmc
iret
xor
inc
pop
xchg
movl
or
xchg
xchg
inc
adcl
push
adc
sub
lcall
xor
shl
repz
sbb
adc
mov
cs
rcll
and
and
call
inc
xlat
sbb
mov
add
pop
inc
cmp
mov
push
add
mov
mov
icebp
adc
clc
bound
mov
xor
fsubs
outsb
add
pushf
xchg
add
lcall
stos
cld
cld
andb
mov
push
push
aaa
dec
mov
popf
pushf
stos
loopne
repnz
sbb
push
adc
dec
xor
push
lcall
popa
stos
xor
cmp
pop
test
jecxz
int
add
call
clc
mov
cmp
xchg
mov
sub
pop
fs
xor
sub
out
cmp
pop
adc
mov
bound
pop
inc
pop
cmp
sarb
fwait
add
addr16
jne
mov
std
push
and
push
and
lea
and
mulb
and
pop
std
cli
jge
jge
scas
fistps
aam
out
stc
cli
sbbb
sbb
inc
imul
push
sub
jg
js
sbb
mov
mov
jecxz
pop
cmp
pop
out
add
or
mov
pop
push
and
jmp
jbe
mov
bound
fidivs
mov
pop
insl
push
sti
ficomps
mov
ret
mov
xchg
xchg
gs
mov
inc
xchg
add
cmc
into
movsb
adc
les
jns
lret
xlat
dec
lcall
push
out
cmp
orl
popf
fcoms
add
out
inc
cmc
sub
inc
stos
les
add
nop
test
pop
xor
fxch
xor
shrb
fwait
dec
rclb
in
push
fdivs
pop
add
shlb
sub
and
call
inc
ljmp
mov
movsl
dec
sub
rorl
mov
pop
jp
cmp
out
lds
adcl
in
aaa
ljmp
and
fldcw
orb
stos
popa
sbb
sbb
test
push
push
xchg
inc
test
push
mov
movsb
adc
loopne
loope
test
push
mov
xor
popf
repz
and
repnz
arpl
aad
aas
loopne
cli
add
fsubr
cwtl
sbb
leave
or
pusha
scas
stos
and
imul
outsb
xchg
xchg
pop
dec
testl
inc
psubsb
leave
pop
xlat
sbb
mov
test
fs
lcall
std
sbb
pop
jne
push
sub
clc
jnp
mov
mov
aam
adc
inc
mov
jns
sbb
bnd
jns
movsb
ret
mov
in
jbe
call
decb
out
repz
das
xor
inc
cs
sbb
cmpsb
sbb
xor
jo
xchg
add
or
ja
push
sbb
rorl
jnp
in
jnp
scas
add
shr
mov
popa
xorl
fwait
test
icebp
mov
aaa
xor
mov
push
or
in
cmp
ffreep
fiadds
mov
pop
xchg
loope
adc
shlb
pop
pop
cs
mov
pusha
test
inc
push
cmp
jo
xor
push
ret
pop
in
add
xor
jo
into
loopne
cmp
insb
mov
jle
or
dec
in
std
subb
negl
enter
jle
arpl
out
insb
pop
and
mov
pop
scas
inc
jno
stc
mov
sbb
pop
add
repnz
rcrb
pop
jp
aaa
hlt
jns
ret
test
inc
cli
ja
sub
lcall
push
test
scas
or
mov
or
mov
inc
push
and
mov
jle
sub
add
sti
cmp
mov
cmp
fstpl
insl
adc
or
mov
sbb
adc
mov
push
out
hlt
adc
add
int
mov
punpckldq
shr
jmp
add
int
and
outsl
out
daa
pop
add
ljmp
inc
sbb
hlt
jne
cmp
outsb
and
and
stc
sub
xor
stos
movsb
jmp
jbe
mov
adc
jns
push
insl
add
cld
mov
push
inc
xchg
iret
pop
lds
mov
popa
and
mov
jg
jecxz
into
daa
int3
jecxz
mov
out
mov
in
xorl
inc
add
add
xchg
jle
pop
xchg
outsl
xor
fidivs
pop
jl
xchg
adc
dec
es
sbb
mov
cmp
mov
iret
dec
lds
push
and
subb
bswap
addr16
mov
jno
and
outsl
push
sub
nop
mov
mov
mov
in
mov
mov
fwait
pop
cs
stos
pusha
pop
mov
int3
xlat
out
push
mov
pop
push
cs
jnp
adc
add
cltd
addr16
out
mov
push
lret
adcb
call
push
mov
jecxz
mov
push
mov
test
push
and
push
cmpsl
jo
push
add
xor
enter
add
movsl
popl
lahf
xchg
cmc
mov
jl
sahf
shrl
loop
es
fcmovnbe
repnz
mov
arpl
adc
loop
mov
lds
jle
lds
pop
adc
push
pop
repnz
in
sti
mov
imul
mov
sti
xchg
xchg
xchg
mov
adc
sub
xor
lret
mov
cmp
ret
and
dec
pop
mov
xchg
lds
dec
mov
xlat
mov
xchg
and
xor
aas
dec
push
arpl
lods
aaa
pop
cmpsb
mov
out
xchg
xor
and
dec
pushf
dec
cmp
xor
out
and
rcrl
add
push
loopne
xchg
or
sti
cld
aaa
ror
sub
hlt
sub
mov
and
push
jno
pop
inc
aam
imul
cmpsb
dec
int
sub
roll
scas
jno
dec
leave
pop
jnp
ljmp
pop
pop
nop
push
pop
mov
and
jbe
aaa
and
lods
mov
fsts
cmp
scas
mov
shlb
push
add
pop
ret
std
and
xchg
jg
mov
lahf
lods
mov
pop
cmp
lahf
xor
or
mov
push
jo
adc
sbb
pop
repnz
pusha
ret
mov
or
push
stos
scas
inc
fnstsw
sub
test
push
loopne
jmp
shl
and
or
inc
cmpsl
jne,pt
jge
ficoms
push
out
inc
dec
or
xchg
mov
int
inc
out
push
xchg
pushf
lods
ljmp
inc
cli
push
jbe
cmp
outsb
jae
nop
push
pop
out
shlb
or
popf
adc
into
std
and
mov
les
cmp
lcall
rolb
pop
insl
vmovddup
lods
hlt
mov
sbb
es
adc
jle
mov
repnz
jne
les
dec
loopne
int
sub
add
xchg
mov
jno
sbb
call
jo
adc
mov
jl
decl
scas
or
in
cmp
xchg
sub
or
ret
dec
push
pop
lods
push
dec
cmpsb
xchg
pop
add
pop
lock
push
loope
xor
aaa
xor
mov
mov
adc
stc
nop
add
mov
xor
loop
inc
cmp
sbb
ret
jae
sbb
dec
mov
pop
cmc
and
lods
hlt
dec
jl
jb
mov
fldt
mov
mov
imul
addr16
outsl
leave
cld
jl
jno
lret
popf
adcl
and
sbb
inc
or
push
push
adc
mov
call
adcb
fwait
and
fldt
arpl
loopne
jns
mov
les
mov
fisubs
cli
insb
mov
ret
out
xchg
cmpsl
or
jecxz
sub
mov
sub
inc
and
fcompl
pop
repnz
or
adc
mov
fucomi
jecxz
in
xorl
call
sbb
out
insl
inc
and
fdivrl
push
xchg
mov
xor
adc
mov
orb
xor
jne
mov
xchg
push
jg
inc
mov
ljmp
repz
std
outsb
ds
jo
add
mov
insb
sbb
mov
xchg
lret
insb
xchg
mov
sbb
and
aaa
int3
sub
jp
fildll
bound
sbb
ss
fisubl
insb
leave
dec
notl
in
pop
push
movsb
xor
lods
xchg
addr16
ds
xchg
jne
ja
loopne
sbb
fwait
enter
call
test
popa
push
mov
xor
popa
jno
xchg
stos
rol
jge
sub
lods
xor
test
and
movsl
cli
pop
ja
adc
daa
sub
rcrl
sub
mov
jl
cmp
adc
add
cmp
insl
sbb
lods
ss
test
mov
dec
adc
jmp
cmp
insl
xor
or
jp
mov
into
es
data16
push
fdivrl
mov
xor
push
jmp
push
xor
stos
mov
adc
jns
repnz
testl
xchg
je
jns
inc
mov
testb
xor
fcomi
movsl
ret
or
jns
dec
pop
dec
pop
stos
or
cs
mov
push
jne
das
cmp
in
popa
mov
jne
inc
arpl
pop
lods
add
in
sbbb
or
sahf
add
adc
iret
ljmp
and
add
je
adc
cmp
and
push
fxtract
aaa
and
test
jb
sub
add
jne
mov
push
stos
test
fdivl
lds
cmp
lea
pop
dec
dec
cmpsl
inc
imul
dec
xor
push
fs
std
xchg
mov
pushf
xchg
ss
rolb
push
insb
inc
mov
xchg
jbe
inc
das
xchg
xor
aad
loop
push
lahf
out
int
cld
ja
fwait
or
fsin
adc
std
jecxz
sub
std
nop
mov
ss
dec
mov
mov
mov
into
sub
push
pushw
mov
and
dec
fistpll
sbb
leave
in
push
cli
push
mov
jecxz
stos
lea
lock
and
adc
adc
movsb
call
sub
icebp
sub
push
test
xchg
popa
cmpsl
push
xchg
stos
xor
out
adc
sbb
or
in
jle
adc
inc
sbb
les
adc
sbb
cmpsl
orl
mov
mov
mov
sbbl
cmp
mov
push
je
sbb
add
fisttps
jbe
aam
in
shr
push
mov
inc
xor
gs
clc
xchg
popa
jge
xchg
mov
cld
mov
popa
add
pop
mov
scas
es
popa
mov
sarl
or
pop
out
mov
inc
jle
and
xor
subb
repnz
or
cmp
add
leave
hlt
insl
jp
push
nop
daa
mov
lds
and
sub
pop
sti
or
out
push
mov
fdivrs
sub
fs
test
mov
stos
mov
daa
cmpsb
les
fmuls
repnz
sub
jnp
insl
lods
inc
sahf
mov
test
jae
xchg
leave
cltd
xor
mov
shr
insl
icebp
mov
dec
out
xor
adcl
jg
mov
popf
xor
xor
xor
mov
ret
ret
xor
in
pushf
inc
pop
mov
loope
mov
cmp
insl
cmc
ret
aad
push
dec
pop
and
aas
fbstp
divl
cmpsb
xlat
pop
jecxz
mov
adc
mov
xorl
cli
xchg
or
xlat
mov
push
or
mov
lcall
fistps
inc
sbb
xor
fbstp
jmp
pop
dec
pop
cmpl
cld
xchg
inc
int
add
mov
inc
adc
cmp
and
rcr
mov
outsl
add
movsb
in
add
lea
ja
outsl
test
cmp
int
pop
sti
gs
dec
dec
mov
lret
das
int
in
out
cwtl
jge
or
popf
xor
xchg
sub
or
xchg
and
sti
push
mov
sbb
jl
sbb
decl
sub
lods
repz
lret
dec
adc
mov
popa
cmp
pop
ja
and
jnp
xor
test
and
push
cmp
jl
inc
jae
fldt
lcallw
lret
mov
gs
add
push
aam
xchg
sub
push
aad
icebp
mov
mov
iret
orb
aad
scas
fsubl
inc
jbe
jne
popf
push
and
xchg
or
cwtl
cmpb
or
add
push
sub
cmc
addb
test
mov
ja
cmp
push
mov
das
loop
in
cmp
push
sub
dec
lods
push
adc
mov
movsl
mov
orl
jbe
clc
fisubrl
inc
rolb
clc
gs
rdmsr
inc
movsl
ljmp
popf
pop
dec
pop
jge
mov
aaa
jno
adc
jbe
xor
jno
xor
and
dec
or
ret
jg
jmp
add
jno
mov
xor
pusha
sub
dec
mov
inc
sub
and
add
cltd
hlt
ja
popf
das
mulb
scas
xor
xor
lret
cltd
xchg
pop
add
sub
push
pop
je
dec
daa
outsl
dec
js
lds
lret
xor
xchg
jae
xchg
pop
dec
repnz
lcall
push
aam
inc
mov
movb
lret
or
ret
aad
daa
rorb
dec
repnz
jmp
ret
push
and
int3
faddl
and
add
pop
adc
jb
fwait
cmc
mov
nop
xchg
test
leave
dec
stos
enter
sbb
rcrb
sbb
rcrb
mov
fsubrs
aad
and
jg
jns
leave
js
int3
stos
andl
dec
inc
jecxz
mov
and
xchg
loop
loope
and
fldenv
xchg
in
dec
add
jp
fnsave
mov
mov
cs
imul
mov
cmp
mov
scas
push
add
ret
out
jmp
movsl
xor
mov
subl
cltd
nop
mov
xchg
mov
fldenv
test
or
dec
sbb
push
cmpl
inc
pusha
push
push
or
cmp
ret
lcall
popf
push
cs
jmp
and
adc
inc
ficoms
xor
fmull
pushf
mov
xor
mov
cmpsl
je
jno
les
inc
cli
mov
andb
sbb
add
cmp
ja
arpl
adc
mov
dec
ror
push
xor
mov
ja
cmp
xchg
cwtl
shld
jb
pop
xchg
lea
ja
add
jns
in
mov
aaa
jns
loope
pop
and
sti
jns
fsubl
testb
call
dec
cwtl
adc
push
add
cmc
andb
iret
dec
jno
pop
cwtl
cs
fbstp
subb
lock
pop
loope
out
sti
nop
stos
icebp
adc
cmp
shrl
inc
push
in
sub
gs
adc
cli
cmpsb
js
fstps
cmp
inc
into
xchg
stos
repnz
mov
leave
test
fldenv
dec
pop
scas
cmp
mov
mov
pop
ljmp
xchg
push
inc
std
inc
cmp
cmpsb
dec
and
mov
sub
shl
mov
mov
popa
jecxz
inc
adc
adc
gs
das
jmp
dec
sub
sub
stos
aaa
xor
clc
es
sti
pop
test
push
or
sbb
inc
pop
add
inc
cmp
and
sbb
dec
sub
xchg
add
cmpsb
mov
jge
mov
dec
inc
bound
mov
mov
div
inc
data16
add
xchg
fistl
andb
sbbb
loope
insl
sub
xor
mov
add
mov
leave
data16
xlat
into
push
shll
xor
daa
mov
out
int
and
or
jp
loop
sub
sbb
imul
repnz
lahf
stos
pop
filds
adc
inc
jo
insl
push
mov
in
sub
loop
jge
les
je
inc
cltd
pop
stc
mov
cmp
aad
or
pusha
or
fwait
or
lret
or
jl
scas
pop
rol
stos
dec
loop
rcrl
cmp
inc
jecxz
lock
andl
outsl
fnstenv
dec
imul
ret
aam
pop
leave
popa
fsubrs
sahf
cmc
dec
jge
pop
push
xor
shlb
dec
add
xchg
sbb
aas
lods
mov
push
jbe
daa
mov
cmpsb
inc
pop
pusha
jo
jmp
or
mov
cmpsb
test
fadds
push
sahf
jns
pop
push
xor
adc
movsl
cmpb
mov
sbb
loopne
jne
shlb
xchg
nop
hlt
clc
dec
aad
fldl
adcw
andb
testl
add
mov
or
add
test
jle
push
push
mov
scas
rorb
call
push
inc
pop
lds
daa
outsb
ljmp
xchg
arpl
hlt
pop
lret
pushf
push
std
cmp
shl
mov
add
pop
mov
mov
cmpsb
mov
test
jnp
je
stos
xorl
pop
insb
mov
jno
rorb
inc
sub
movsl
sbb
stc
ret
push
push
scas
sti
jp
cmp
test
cmpb
shrd
mov
fld
test
fnstsw
fisttps
lds
mov
data16
adc
mov
mov
inc
mov
or
jecxz
jg
insb
stos
jo
inc
mov
loope
sbb
xchg
mov
scas
and
push
jae
pop
movsl
aaa
mov
adc
scas
xor
sbb
jp
adc
ret
jae
addl
sbb
ljmp
inc
push
pusha
jns
xchg
js
cmp
adc
sahf
es
pusha
pop
adc
imul
scas
fidivs
daa
mov
gs
mov
mov
sub
arpl
idiv
xchg
sub
sbb
div
dec
loop
push
mov
popf
mov
xchg
popf
scas
les
imul
jge
dec
mov
mov
lea
xchg
pop
push
xchg
sbb
sub
test
lods
out
xchg
lds
xchg
cs
mov
lock
movsl
pop
inc
push
mov
push
push
push
testl
lea
jge
lods
jbe
pop
add
sbb
inc
fpatan
push
test
mov
add
sub
aad
dec
shl
dec
and
sbb
scas
fidivrs
arpl
sbb
or
xchg
loop
sbb
lcall
cli
dec
xorl
movsb
xchg
neg
cmpsl
movsb
adc
ja
call
cltd
cmpl
arpl
in
stc
fistl
stc
aad
stos
and
jo
pop
jne
dec
lods
test
xchg
xchg
push
iret
or
popa
xchg
in
pushf
sbb
cmp
call
stc
fwait
mov
inc
cmpsl
jmp
sbb
daa
xor
pop
cmp
mov
cs
push
jo
int
rolb
push
or
xchg
ds
pop
icebp
loop
call
ds
dec
lods
icebp
xor
ret
xor
das
gs
fsubs
les
ljmp
push
out
sub
lods
sti
mov
shlb
mov
cmp
sub
in
jg
xchg
ror
mov
push
popf
pusha
in
sub
mov
jb
and
and
and
scas
add
pop
adc
or
jmp
mov
cwtl
mov
xchg
xor
pushf
gs
icebp
cmp
xchg
sub
or
and
pop
cmp
mov
rcr
into
gs
scas
and
cmp
push
dec
adc
adc
jle
fcoml
mov
lods
mov
mov
je
outsb
xlat
adcb
pop
test
jecxz
aas
adc
cmp
insl
sub
add
popa
out
xchg
pop
mov
pushf
ror
rol
or
gs
xchg
and
les
stc
push
cmpsb
fdivr
xlat
cmp
lahf
imul
sbb
push
sar
lahf
mov
push
test
jp
stc
popf
and
cmp
xchg
push
jno
xorb
mov
and
inc
pop
xchg
jns
add
movsb
into
jno
shlb
fs
mov
iret
push
divb
add
mov
jl,pn
stc
cli
test
imul
or
jns
lcall
mov
ds
push
hlt
jno
test
loop
loop
pop
adc
lcall
in
adc
fldl
es
cli
js
in
stos
sbb
mov
ret
push
das
mov
fstl
jbe
jb
sub
notl
andb
jle
mov
in
push
cltd
pusha
ja
sti
pop
cli
and
mov
push
int
adc
lock
and
mov
push
mov
jle
mov
loope
loope
lea
add
and
psubd
cld
adc
inc
sbbl
stos
enter
pop
imul
dec
jl
mov
mov
mov
xchg
pop
push
mov
or
lret
jle
mov
in
xor
or
cmp
mov
mov
sbb
inc
andl
orb
mov
sbb
cmpsl
lcall
and
mulb
data16
aas
mov
dec
sbb
add
cmpsl
xchg
mov
add
inc
cmp
or
pop
push
les
or
xor
fsubr
test
lods
mov
sub
cli
shr
scas
xchg
push
mov
icebp
imul
call
in
mov
outsb
sub
or
test
lods
je
mov
push
leave
popf
dec
mov
jmp
stos
pushf
lea
enter
xchg
and
stos
cmpsl
dec
ljmp
outsb
jp
in
ret
and
or
pusha
aam
mov
test
loopne
out
sub
je
jo
dec
dec
out
imul
lea
iret
mov
pusha
push
popf
xchg
sbb
repz
jle
shll
movsb
loopw
stc
nop
shrb
pop
fwait
rolb
or
mov
les
dec
int3
mov
inc
pusha
xor
ljmp
pop
sbb
out
push
xchg
mov
push
ret
imul
divl
adc
pusha
mov
out
sbb
scas
sub
out
inc
cmp
inc
xchg
mov
jo
xor
outsb
push
pop
cmpl
pusha
jl
rorl
sbb
jnp
xor
test
movsl
movups
add
arpl
loope
aas
imul
sub
cwtl
sbb
and
lahf
test
addr16
xor
bound
jmp
int
sub
in
xor
sub
jae
jns
and
adc
rorl
sub
adcb
or
or
daa
mov
aaa
cmp
je
fbld
sbb
sti
xchg
mov
jmp
sbb
fsubrl
icebp
movsl
pop
iret
sbb
adc
add
mov
jo
ljmp
shlb
mov
xor
jne
call
add
cmpsl
xchg
insl
or
and
mov
pop
loopne
lcall
and
and
adcb
and
fs
stos
cmc
xchg
fwait
stos
in
push
out
sbb
popf
and
aam
mov
scas
pop
dec
cmpsb
mov
adc
mov
imul
andl
dec
fs
out
ja
sbb
add
dec
pop
jae
pop
cmp
add
mov
push
test
push
sar
scas
adc
rclb
test
fcomps
xchg
lahf
loopne
and
mov
push
dec
xchg
popf
add
les
lods
jne
std
ret
sbb
mov
icebp
dec
inc
in
insb
mov
loope
xlat
adc
pop
jo
xchg
sbb
scas
xchg
adc
out
mov
inc
test
sub
or
test
pop
push
jge
shl
cmc
int
xchg
xchg
jle
lds
movsl
fldl
mov
ret
das
inc
push
shll
dec
add
or
adc
in
std
push
xor
xchg
movsl
lret
ss
and
jne
rcr
dec
notb
je
jle
dec
push
mov
lret
shlb
push
in
push
cmpsb
pop
jno
jne
cmpsl
xchg
int
jecxz
mov
jg
xchg
je
add
adc
xor
ficoms
cmpsb
nop
sbb
mov
mov
in
mov
dec
inc
xlat
jl
jae
pop
adc
jne
aam
int
cmp
int
push
and
popa
push
push
rclb
add
dec
mull
mov
out
aas
in
xchg
mov
jg
dec
xchg
repnz
fcoms
sub
adc
jo
jo
add
cmp
lods
ss
mov
xchg
mov
sbb
cmp
xor
call
sahf
aad
int
movsb
cmp
inc
rolb
jo
xchg
bound
ud0
imul
mov
mov
ret
mov
popa
sahf
in
sub
sahf
out
ljmp
jle
mov
jb
cmpsl
ljmp
mov
cmp
iret
or
dec
push
in
jl
mov
movsb
sub
js
nop
mov
out
inc
clc
xlat
nop
in
jge
orl
inc
push
stos
imul
fiadds
xor
xor
push
xchg
cmpsl
shll
leave
mov
lods
push
jb
cmp
push
cmc
xor
popa
sbb
leave
fldt
orl
jns
fisttps
xchg
push
jg
shlb
rorl
adc
inc
or
add
enter
movsb
inc
inc
popf
xchg
mov
jb
sbb
enter
rcll
inc
inc
fisubs
or
jg
sbb
pop
jb
scas
aaa
cs
adc
cmp
insb
in
les
rorl
test
or
adc
lahf
in
stos
or
inc
adc
cld
jb
ret
fwait
scas
ja
loop
lods
data16
dec
hlt
adc
sbb
jns
iret
data16
fcomi
cmp
mov
mov
adc
mov
push
arpl
xchg
mov
and
inc
pop
xor
hlt
and
cmp
inc
jnp
jbe
je
sbb
mov
js
int3
adc
jb
ljmp
jg
add
xlat
mov
or
dec
mov
cmpsb
xor
aam
xor
sub
mov
sarl
push
mov
pop
arpl
bnd
fisttps
sar
aad
and
jmp
movsl
xchg
nop
nop
jne
out
xchg
mov
clc
and
sbb
sbb
push
xchg
and
loope
stos
fistpl
in
dec
add
sub
lea
or
and
cmp
add
lret
sti
iret
repz
inc
in
lcall
in
push
sbb
sub
pop
push
in
dec
mov
js
sub
dec
aaa
push
insl
dec
add
push
repnz
xor
std
xchg
pop
mov
cmc
dec
xchg
xor
in
pop
call
test
mov
cmpsb
je
mov
ret
ficoms
xchg
add
push
js
mov
testl
test
sub
faddl
jns
js
das
stos
fistpl
add
fildll
adc
cmp
mov
mov
and
mov
loop
xchg
and
cmpb
lock
ja
stos
pop
lea
sbb
jg
xor
ljmp
mov
loopne
sub
int
pop
lret
xor
lss
hlt
push
mov
scas
add
sti
xchg
bound
icebp
add
xorb
and
stc
aaa
repnz
and
xchg
lock
les
adc
add
repnz
dec
fstp
jno
outsl
xchg
inc
jge
sbbl
xchg
out
std
push
add
adc
jmp
pop
popa
das
inc
rol
jge
sub
or
das
dec
dec
add
push
cld
icebp
test
adc
stc
fs
loope
mov
test
jnp
mov
cmp
icebp
notb
xor
cmc
mov
mov
cltd
inc
into
or
cmpsl
ds
insb
fwait
in
enter
or
fistps
and
leave
mov
sbb
roll
fistl
mov
repz
mov
push
inc
int
push
iret
cmp
mov
add
rolb
sarl
movsl
sahf
sbb
je
in
jge
lods
mov
push
sub
cmp
cmp
sbb
test
inc
addr16
xchg
sub
or
xor
mov
push
mov
ljmp
dec
add
scas
cmp
scas
pop
lahf
mov
mov
test
mov
lret
bound
adc
jbe
fwait
arpl
inc
mov
xor
loop
xor
jmp
mov
rorl
push
in
repz
jne
push
insb
and
fs
push
xchg
sub
push
push
out
std
cmc
xor
in
repnz
add
xchg
stos
dec
scas
es
jne
cmpsl
lock
adc
ss
cltd
imul
dec
in
mov
ss
mov
leave
int
pop
data16
mov
stos
stc
cwtl
arpl
pop
fildl
jae
loope
stos
repnz
inc
shrl
pop
or
xchg
cwtl
cmc
mov
mov
popf
call
adc
adcb
popf
mov
xor
out
mov
test
aad
pop
nop
pop
mov
sbb
push
in
xchg
pop
cwtl
icebp
xor
inc
pop
call
push
mov
lcall
adc
mov
pop
dec
jae
hlt
jnp
test
out
subl
gs
clc
sbb
lods
subl
mov
push
divb
sbb
inc
push
popf
xor
test
pop
sahf
cmc
ret
rolb
flds
lock
inc
xchg
in
cmc
mov
and
mov
cmp
int
push
sub
mov
fidivl
jl
stos
adc
pop
std
mov
mov
fistpll
mov
mov
in
adc
xchg
mov
cmpb
repz
mov
cmc
es
pushf
dec
xchg
ret
jmp
and
jne
pop
mov
push
divl
fnstenv
push
cmc
mov
mov
sub
xlat
xchg
xchg
or
js
movsl
sbb
enter
paddq
pop
or
adc
add
nop
push
mov
adc
mov
lret
mov
ret
sbb
sbb
dec
mov
xchg
in
out
nop
lock
mov
subl
fs
jle
and
xor
sbb
fldpi
sahf
cmpl
jb
mov
xor
scas
inc
and
dec
mov
sub
lods
dec
das
out
arpl
lods
sub
pushf
pusha
sbb
cwtl
pop
adc
dec
sbb
sub
and
sbb
rcrl
imul
repz
stc
sbb
subb
in
lret
repnz
cs
dec
adc
in
stos
push
pop
dec
xchg
js
adcb
cmp
gs
lret
sub
inc
lock
xchg
push
scas
dec
lods
sbb
or
xlat
insl
jb
aam
inc
test
mov
aam
popf
outsl
jnp
push
pop
call
pop
outsl
jge
inc
test
pop
outsb
ud2
and
cmp
fcompl
xchg
dec
sub
sub
sti
add
repnz
inc
jl
cmpsb
test
lret
mov
sbb
pop
add
loopne
xchg
push
add
mov
icebp
leave
adc
test
imul
pop
sbb
add
inc
cld
test
mov
dec
adc
pop
and
scas
mov
loopne
outsb
jnp
and
mov
push
in
aam
repnz
inc
lods
mov
mov
lahf
shl
sbbb
out
xchg
mov
ret
mov
xchg
dec
std
jno
in
mov
xchg
push
mov
dec
jecxz
test
nop
adc
js
dec
mov
fidivrs
mov
cmp
fildl
add
loope
or
imul
aaa
int3
pop
mov
in
shrl
outsl
lock
sbb
mov
popa
xor
jmp
fisttps
jecxz
mov
push
pop
or
mov
fstpt
jne
inc
cmpsl
push
dec
repz
inc
fcoml
mov
lret
popf
scas
cld
mov
lahf
sbb
hlt
push
ret
mov
test
and
jecxz
inc
jle
xor
lods
push
outsb
sub
dec
in
cmp
mov
mov
test
mov
es
push
push
mov
das
fdivrl
andb
in
imul
shl
mov
jo,pn
fsubrs
es
pop
mov
frstor
xor
inc
cmp
inc
fcomps
xlat
frstor
shll
mov
add
xchg
xor
jo
jl
insl
push
call
cmpsb
mov
aam
in
test
push
push
add
lret
repz
int3
or
test
push
sub
sbb
mov
lahf
xor
hlt
or
sarb
cltd
mov
jmp
pop
outsb
ja
cmp
mov
mov
push
sbb
bound
movsb
jecxz
ljmp
in
jmp
ret
push
push
clc
adc
aas
push
insl
pop
std
xchg
xchg
sub
lret
out
test
jge
fcmove
jbe
out
mov
sbb
jnp
add
pop
sub
push
test
scas
mov
js
push
and
cltd
xchg
hlt
pop
jbe
xor
adc
pop
call
jae
inc
mov
stos
xor
sub
fistps
push
dec
ljmp
in
sbb
jge
scas
sub
fucomp
push
dec
xor
or
mov
movsl
pop
test
mov
lret
std
or
repnz
jns
imul
xchg
cmp
xlat
push
in
lock
test
movsl
js
mov
decl
inc
fnsave
dec
lods
loopne
sti
test
xor
jg
dec
sbb
xor
and
rcl
hlt
loope
fnstcw
push
jno
pop
jmp
enter
dec
sidtl
xor
mov
pop
es
in
andl
pop
mov
pop
insl
xor
pushf
jecxz
sbb
jnp
cmp
adc
outsb
inc
fprem1
mov
int
adc
sahf
enter
jno
out
call
iret
lods
cmp
mov
test
and
cmp
mov
sbb
loopne
push
adc
lock
imul
mov
in
sbb
and
mov
fnstenvs
mov
push
xor
bound
test
dec
xor
sbb
cmp
sbb
adc
scas
dec
pop
idivb
or
mov
push
es
mov
pop
sub
sbb
cmpsb
les
aas
ret
jle
mov
in
in
in
push
sub
mov
rcrb
add
cmp
daa
in
decl
and
push
popf
xchg
cmp
inc
movsb
test
and
mov
mov
jge
push
mov
dec
in
loopne
bound
pop
xor
outsl
push
pop
rorb
lea
add
ja
lea
int
push
incl
mov
push
call
cwtl
mov
cs
and
roll
loope
pop
xchg
push
ljmp
pusha
stc
gs
divl
icebp
stos
xlat
pusha
arpl
fnstsw
pop
scas
pop
mov
jecxz
xchg
ljmp
push
inc
rol
pop
sub
repz
push
test
gs
imul
mov
rol
loop
adc
dec
icebp
call
fs
dec
mov
jp
push
insb
imul
popa
add
dec
sahf
cmp
in
push
lahf
lcall
mov
in
xchg
loop
or
mov
cmpsb
mov
daa
addb
pop
adc
test
fsts
jmp
jmp
or
aas
shlb
inc
icebp
sti
mov
test
mov
sbb
aas
mov
je
cmp
pop
cld
js
push
or
push
inc
int
mov
movsb
push
mov
lods
sbb
xor
repz
sahf
imull
scas
stos
cmp
call
enter
sbb
dec
pop
lret
push
cs
pop
pop
inc
ret
in
and
and
mov
mov
rolb
mov
pusha
loopne
mov
push
and
and
xor
xor
rorl
push
jmp
fbstp
jbe
or
ds
pop
adc
insl
sub
dec
add
jae
mov
inc
mov
idiv
mov
mov
ffree
sub
cmpsb
sub
push
sub
push
stc
inc
arpl
add
sub
sahf
clc
dec
fcomp
xor
enter
lcall
cmp
sbb
cltd
push
inc
stos
inc
data16
lret
iret
push
scas
adc
enter
sbb
in
or
push
xchg
sub
rorl
add
mov
jns
sbb
mov
lods
inc
clc
sbb
push
jmp
and
std
mov
paddd
test
push
int3
lret
inc
testl
jbe
push
test
and
inc
sti
push
repnz
in
jno
data16
jno
loope
je
aad
fwait
cmp
in
jg
movsl
push
lock
insl
xorb
iret
in
insl
sahf
scas
in
in
rolb
jne
dec
in
arpl
mov
cs
out
cmp
or
cmp
adc
ljmp
push
sub
fldcw
jmp
test
xchg
or
leave
cmp
out
data16
sub
inc
cmp
mov
imul
xlat
lahf
push
jae
rcrb
pop
pushf
cmc
cmp
add
lds
rorl
inc
pop
sbb
sub
cmp
enter
ljmp
test
push
lods
loopne
push
lds
int3
stos
cmc
mov
xchg
clc
imul
addr16
ret
xor
dec
sbb
pop
cmpsb
lock
xor
xor
lods
jns
dec
xchg
mov
adcl
pop
cmova
jmp
push
call
and
sub
arpl
mov
dec
in
scas
sbbl
sub
rol
in
jg
pop
cmp
xor
cmp
enter
add
outsl
in
dec
aad
mov
add
lcall
and
arpl
cmp
jbe
pop
xlat
xchg
pop
adc
mov
pop
and
cmpsb
pusha
cmp
mov
mov
test
mov
push
jmp
sub
sti
sarl
push
adc
popa
add
movq
pushf
sub
sbb
cmp
xor
cmpsb
push
inc
ret
jle
jnp
shlb
stos
and
push
lods
and
xchg
mov
ds
fldl
cld
out
call
cltd
mov
scas
pop
lods
cltd
jno
lret
outsb
jae
pop
iret
add
lods
and
xchg
xchg
cs
stc
sub
jno
test
jnp
fsubrl
lret
aaa
mov
ja
sbbl
adc
es
lds
addb
push
popf
stos
push
adc
or
in
jae
push
and
es
aam
sub
ret
mov
addl
xor
dec
jmp
add
pop
dec
cmp
aad
pop
outsb
jmp
sub
shl
inc
ja
adc
subl
dec
lods
pop
push
jo
add
fwait
dec
test
shr
leave
ret
adc
xchg
dec
pop
and
xchg
out
in
push
pop
cltd
and
stos
sbb
cltd
fs
mov
cmp
cmc
aas
mov
fldl
sub
sbb
scas
or
gs
cs
sti
xchg
xor
sbbl
cmp
sti
or
xchg
testl
jo
or
push
test
movsl
mov
add
aas
lock
sbb
mov
dec
mov
call
cmp
bound
adc
call
xor
mov
fldcw
in
mov
sub
arpl
jecxz
orl
jno
mov
gs
pop
lds
pop
enter
jle
mov
lahf
daa
adc
aad
pop
call
jle
mov
pop
sub
cmpsl
ds
icebp
mov
fstps
popf
xchg
pop
mov
mov
mov
sbb
decl
push
dec
pop
cmp
lahf
mov
movsl
mov
cli
mov
ljmp
cmpsb
sub
mov
in
out
adc
insl
xchg
mov
rcrb
pop
ret
outsb
scas
adc
or
hlt
cmp
testb
and
fisubl
and
mov
cmp
imul
xor
fwait
notb
push
sub
sub
addl
and
or
sub
xor
jge
repz
ja
mov
jg
dec
or
push
cmp
in
xchg
mov
mov
jecxz
inc
fldl
stc
mov
mov
pop
shl
and
pop
xor
xorl
lods
inc
repz
repnz
cltd
cmpsb
lretw
xchg
int
cmp
mov
ljmp
je
ljmp
fnstcw
fildll
test
adc
std
int
xchg
loopne
mov
daa
arpl
add
daa
test
rcr
jg
notb
mov
adc
mov
push
or
je
pushf
mov
into
pop
scas
jge
pop
add
xor
xchg
sbb
cmc
dec
inc
loopne
es
rcll
push
pusha
stc
pushf
pop
lahf
orl
inc
ret
cmp
data16
xchg
inc
dec
jo
push
in
dec
dec
mov
xchg
jnp
loopne
mov
mov
in
in
das
scas
cs
scas
xchg
pop
mov
scas
and
ja
out
in
pop
fisubl
ret
lret
xor
xchg
ja
fsubrl
inc
adc
xlat
and
sbb
clc
adcb
inc
xchg
decb
cld
pmaxsw
push
lods
pop
cmp
outsb
mov
push
sub
pop
ret
imul
mov
inc
subb
mov
push
or
or
xchg
sub
mov
in
jmp
ss
dec
ljmp
and
dec
pop
add
sub
fidivl
fsubrs
ficomps
and
lods
pop
jb
adc
jns
mov
rol
lods
jl
mov
jae
lock
gs
mov
clc
bound
data16
repz
pop
cmp
divl
mov
movsb
fistpll
arpl
cmp
mov
and
cld
mov
cli
daa
jl
pop
mov
push
add
pop
addr16
addl
ss
xorl
loope
add
lret
fsts
push
sub
adc
movsb
dec
xor
or
or
mov
xchg
mov
xchg
push
push
dec
mov
inc
pop
cmp
shr
push
mov
xor
inc
cltd
dec
and
sbb
and
mov
dec
push
push
jp
shlb
or
jle
jge
jo
cmp
sbb
jno
jle
xchg
mov
out
lds
jb
popa
add
addr16
jg
das
cmp
popa
adc
adc
lcall
pop
ret
cmpsb
jnp
fldcw
popa
dec
sbb
mov
xchg
mov
lret
inc
push
scas
fs
inc
or
stos
inc
push
sbb
lock
iret
loop
mov
xchg
into
dec
lods
pop
aaa
push
mov
in
or
lret
addr16
and
sbb
or
data16
push
test
ss
dec
cmp
xchg
ss
call
or
fisttpll
stos
out
pop
cmp
lcall
outsb
inc
outsl
sub
pusha
js
outsl
jp
shrb
sub
jno
addl
dec
mov
jne
jb
je
cld
xchg
lcall
jae
fs
fsub
cmp
adc
push
les
adc
cs
enter
cli
lahf
loopne
adc
xchg
popa
repz
mov
or
sbb
out
adc
mov
jmp
inc
cmp
adc
in
xor
repnz
popf
daa
sub
popf
mov
pop
and
xchg
cmp
inc
xor
aas
imul
push
push
jno
xor
sub
scas
jb
sbb
ds
data16
pop
lds
jle
mov
bound
enter
aad
popf
push
hlt
cmp
and
push
push
icebp
cwtl
push
jb
mov
cmp
out
pop
es
cmp
nop
xchg
push
adc
or
outsl
xor
jne
push
xchg
test
lcall
mov
pop
ficoms
or
push
mov
lcall
hlt
push
jo
mov
mov
xchg
ret
cmp
mov
sub
dec
and
in
mul
cmp
jle
lret
int3
dec
les
mov
sti
jecxz
mov
pop
daa
rclb
sbbb
insl
ret
dec
add
leave
pop
rcr
stos
pushf
sub
and
fcoms
push
outsl
and
je
push
out
xchg
and
and
sub
scas
mov
or
daa
adc
push
sub
cmp
and
jnp
mov
cmpsl
loop
add
mov
filds
xchg
std
and
xchg
xchg
sbb
cs
pop
in
lods
pop
cmp
popf
insb
aam
hlt
cltd
les
cwtl
jnp
inc
inc
out
and
add
xor
inc
or
inc
pushf
test
mov
daa
pushf
and
in
test
int
aad
lret
push
shr
test
push
jb
jmp
clc
and
shlb
sub
aaa
rorl
jg
bound
daa
lods
gs
sbb
jecxz
sub
das
jae
fs
dec
inc
jae
icebp
lret
and
adc
inc
cld
mov
push
fdiv
mov
mov
or
mov
dec
add
sti
lahf
imul
out
inc
sub
call
hlt
shrb
push
jo
dec
jno
lock
and
add
adc
iret
and
sbb
int3
mov
call
cli
addr16
jmp
adc
lcall
inc
adc
sti
daa
xor
orb
dec
testb
mov
or
outsl
cmp
js
sub
fnsave
cmp
mov
sbbb
jmp
push
hlt
sahf
fistpll
sub
arpl
mulb
lea
pop
mov
mov
pop
popf
cwtl
je
jecxz
cmp
mov
or
dec
fstps
xchg
inc
mov
nop
outsl
shl
xchg
loopne
mov
bound
lods
or
push
push
push
stc
sub
xchg
push
cmp
pop
mulb
popa
sub
out
lds
fwait
repnz
test
test
iret
imul
sarl
xor
mov
mov
outsl
or
out
jno
mov
rclb
roll
adc
adc
xchg
sub
lahf
mov
sti
xchg
push
in
lods
ret
push
popf
jo
sbb
jle
jmp
mov
mov
pop
into
pop
loop
mov
out
addr16
mov
scas
les
push
fs
push
sbb
xchg
imul
adc
mov
add
pop
jl
iret
sbb
or
xor
xchg
pop
sub
pop
xor
dec
ljmp
popa
nop
bnd
pop
push
loopne
iret
and
lahf
scas
push
fwait
stos
out
sbb
jbe
pop
push
inc
sub
dec
cli
faddl
dec
fiaddl
jle
dec
xchg
dec
lods
mov
sbb
or
mov
outsb
mov
cs
and
lods
sbbl
sbb
loopne
setle
push
push
mov
pop
or
movsb
inc
decb
cmpsb
bound
negb
or
repnz
jns
lds
xlat
bound
and
leave
dec
sbb
lcall
xor
jle
ss
add
jmp
jmp
jno
jo
sahf
xchg
lods
inc
xchg
cmp
in
or
jmp
or
xor
in
scas
orb
push
out
aas
popf
pop
aaa
fsubrs
xor
fsubrl
xchg
dec
js
testb
shl
dec
inc
hlt
sahf
test
push
pushl
pushl
lods
enter
add
dec
mov
mov
push
mov
bound
or
jno
push
push
or
mov
mov
cmpsl
xor
cmp
pop
add
fidivrs
test
loop
jnp
divl
add
or
and
icebp
jmp
push
sub
and
xor
push
cmp
popf
dec
xor
jb
int
icebp
adc
lods
or
jb
push
cmp
inc
inc
sbb
call
xchg
mov
repnz
push
cld
pop
jl
fs
cmc
mov
inc
push
pop
pusha
fucomp
jnp
or
sbb
in
subl
lret
adc
dec
cmp
hlt
into
cmc
lcall
jne
dec
loop
aaa
sbb
inc
jns
iret
loope
adc
sbb
inc
test
mov
lahf
push
loopne
lcall
fucomp
ret
mov
ds
sbb
aaa
sbb
out
push
jmp
inc
or
jbe
jb
mov
ljmp
mov
dec
sbb
fstpt
ret
xchg
test
inc
xchg
sbb
iret
jno
clc
mov
into
xchg
mov
jmp
pop
pop
dec
xchg
dec
cmp
mov
js
lock
fs
fmull
shrl
ret
ljmp
push
enter
xor
pop
adc
mov
mov
xor
stc
pop
adc
fsubrp
repnz
rclb
fimuls
je
bound
push
outsb
in
mov
rcr
fildll
cmp
divl
add
mov
mov
inc
fcoms
scas
outsb
push
shlb
scas
add
lods
sbb
in
mov
cltd
mov
jae
rep
adc
dec
xchg
jbe
adc
fwait
imul
mov
sub
cmp
mov
xchg
inc
or
cmp
pop
pop
inc
mov
jno
mov
dec
dec
sub
pop
push
xlat
sub
gs
clc
sbbb
rclb
jo
mov
stos
mov
adc
jp
in
pop
xchg
in
and
imul
xor
push
xchg
cmc
lret
lahf
shrb
push
mov
dec
mov
clc
movsl
mov
shlb
rcrl
sbb
stos
push
pop
jns
mov
or
imul
mov
cmp
pop
mov
push
loope
dec
shll
fucomp
mov
daa
mov
fldt
filds
sbb
mov
test
xor
lods
ljmp
mov
mov
lds
fsubl
rclb
sub
mov
or
xchg
cmp
dec
add
iret
or
add
xchg
dec
mov
shll
inc
xchg
push
into
inc
jmp
or
pusha
cmp
jns
lock
out
jg
cwtl
lods
inc
mov
scas
mov
cmp
adc
repz
mov
jmp
cmp
fstpt
mov
push
xchg
shr
int
vpaddsw
cli
stos
aad
rcr
sub
mov
inc
outsb
lds
dec
push
out
js
mov
mov
mov
mov
shll
dec
cmp
sbb
nop
mov
jg
add
mov
add
mov
enter
lahf
push
pop
xor
icebp
cmc
cmp
xor
xchg
nop
dec
pop
sahf
lcall
cwtl
enter
mov
push
stos
ljmp
dec
clc
leave
aas
jno
xor
cltd
in
dec
adc
cmpsl
xor
or
cmpsb
data16
repz
inc
cli
push
mov
bound
jg
icebp
pop
mov
xchg
lock
ds
xchg
xor
or
jns
subb
test
popf
push
add
xorb
les
adc
call
adc
repz
jne
jecxz
in
mov
jb
cs
cli
mov
or
test
jecxz
insl
movsl
mov
lret
mov
inc
push
sub
cmpsb
pop
dec
pop
sub
ficomps
les
lret
push
repnz
cld
sbb
ret
cmp
int3
xchg
and
je
add
mov
arpl
mov
ds
push
insb
test
xor
addr16
cmp
adc
pop
or
test
and
xchg
add
aam
rcrb
mov
pop
fisubrs
movsb
xor
fisttpll
in
pushf
lret
adc
mov
push
daa
fldt
ret
fnstcw
mov
jno
dec
jp
repnz
xor
cltd
push
jmp
mov
jl
lock
inc
rorb
mov
push
lahf
xchg
xor
sti
push
fsts
push
dec
fidivs
pop
lock
adc
pushf
je
pop
adc
sbb
jns
xchg
and
cmp
inc
jbe
push
ja
mov
adc
xchg
pop
scas
test
inc
test
insl
and
lcall
jle
jp
push
xchg
aam
fisubs
pop
add
in
push
mov
or
js
dec
lods
stc
icebp
aaa
mov
in
xchg
mov
movsb
rcl
pop
in
cltd
icebp
or
lret
push
push
jne
andb
push
fadd
sub
jns
in
popf
and
mov
and
leave
mov
scas
inc
xchg
mov
aaa
push
daa
in
push
cmp
and
lods
pop
fsubrs
nop
scas
les
mov
cwtl
add
pop
xor
xchg
pop
add
cmp
xchg
test
cmp
sbb
lods
insl
add
lahf
pusha
jl
clc
mov
push
mov
fidivl
or
hlt
push
loopne
in
lcall
mov
jecxz
lds
aaa
pop
add
ss
xchg
icebp
xchg
jmp
cmp
arpl
xlat
cmpsl
les
insl
inc
dec
sub
imul
adc
jnp
cltd
xor
jnp
and
inc
inc
sarl
stos
loope
cmc
call
in
enter
mov
xchg
addl
addr16
insl
xor
out
test
push
xor
stos
push
inc
lret
xor
xlat
dec
loopne
pop
dec
mov
mov
imul
in
notl
lods
fdivrl
ficomps
fisubs
repz
mov
into
arpl
jns
mov
test
lds
mov
pop
nop
in
jae
sbb
sti
sahf
sub
mov
shr
repnz
imul
scas
insl
add
roll
lods
mov
cmpl
jge
dec
sub
push
adc
add
xor
stos
testl
cs
inc
dec
xchg
mov
loope
inc
jp
aam
nop
jne
repnz
dec
mov
gs
daa
jle
sti
sub
fsub
test
and
push
test
sti
lahf
xor
adc
and
adc
subb
in
int
fistl
pop
inc
jae
xor
inc
popa
js
jbe
jg
jl
or
repz
inc
adc
incl
xchg
addb
std
pop
imul
and
gs
loope
scas
test
mov
sub
or
mov
fstps
cwtl
arpl
push
mov
lcall
cwtl
outsl
flds
idivb
push
mov
xlat
outsb
ja
push
call
inc
fdivl
xor
in
lret
sti
cs
fistps
imul
stc
mov
xchg
iret
lods
bound
or
mov
mov
dec
jecxz
in
mov
test
mov
jbe
push
mov
fwait
int3
xchg
and
adc
orb
sub
loope
cmp
out
lock
mov
enter
scas
dec
add
xorl
dec
mov
fs
sbb
int3
push
mov
fdivrl
xchg
xchg
sbb
jg
lahf
bound
loop
sbb
out
fidivs
pop
pushf
cmpb
icebp
add
xchg
imul
into
sub
sahf
sbb
cmp
fsubr
dec
fcmovne
sub
xchg
cld
inc
lods
hlt
cltd
mov
cmp
shlb
xchg
leave
loop
incl
das
stc
out
inc
adcl
cmpsb
je
mov
adc
test
arpl
dec
das
push
popa
insl
scas
push
loope
fistps
sbb
jge
das
incb
mov
scas
enter
xor
mov
or
add
xchg
sub
shlb
pop
movsb
das
in
les
leave
dec
loop
insb
into
gs
push
mov
or
lahf
inc
mov
jmp
sbb
cmpsl
and
iret
xchg
inc
testb
sub
cmp
rol
push
outsb
jmp
ret
mov
pop
or
int3
mov
dec
stc
jnp
imul
faddl
fisubs
xchg
xchg
aas
imul
je
ss
pushf
pop
cmpsb
xchg
rolb
sbb
lods
jae
fisttps
or
dec
in
jg
jb
cli
insb
out
sub
sti
push
push
subb
je
ret
lret
aas
mov
add
mov
add
in
notl
mov
iret
pop
xor
mov
aad
incl
sahf
cli
push
xchg
pop
lcall
out
cmpsl
aas
and
push
push
sub
rol
in
xchg
and
adc
pop
inc
fldcw
or
leave
and
adc
outsl
xor
or
dec
mov
jg
mov
push
pop
clc
movsb
mov
fnstenv
into
loop
push
sbb
inc
xor
popf
fistpl
or
jns
dec
je
jecxz
add
fidivrs
sar
inc
cmc
mov
jge
dec
mov
jns
cmp
lods
ds
cmp
imul
inc
js
mov
and
xchg
sub
daa
mov
cmpsb
aas
inc
jo
xchg
or
inc
data16
test
lret
mov
fists
add
ret
xor
mov
jp
out
inc
cltd
test
mov
mov
xchg
inc
pop
or
or
push
call
out
xchg
movsb
push
ds
xor
jo
xor
push
sub
nop
xor
movsb
pusha
out
pop
jne
mov
jnp
add
cltd
adc
jge
mov
push
xor
sbb
fidivrl
fsubs
popa
clc
inc
mov
and
movsl
add
inc
rep
sub
jmp
cmp
aas
push
sub
test
mov
mov
ret
jb
inc
ret
arpl
ret
push
xchg
jo
mov
pop
sub
adc
jbe
pop
jmp
and
dec
mov
mov
psubusb
repz
and
pop
ret
sbb
cltd
js
mov
fwait
adc
mov
cmpsl
addr16
fisttps
movsl
stc
adc
lea
jge
adc
cmp
jno
or
fsubrl
hlt
xchg
sub
ret
cld
sub
adcb
lock
add
cltd
mov
test
hlt
dec
das
orb
out
and
cmp
sbb
mov
in
mov
testb
fstl
imul
ljmp
out
mov
cwtl
xor
mov
daa
or
testl
xor
push
je
push
fwait
popa
jbe
mov
pop
xchg
sub
pushf
shlb
sti
pop
add
add
cmpsl
or
call
mov
icebp
adc
int3
fsubrl
fdivrl
push
hlt
insl
push
push
sub
loopne
adc
jns
shll
adc
out
add
in
repz
sub
inc
cmpsb
lock
push
push
fdivrs
xor
sub
xor
std
cmpsl
out
xchg
xchg
sub
stc
sub
cmp
out
sarl
fstpt
sub
mov
adc
sbb
dec
imul
jnp
js
or
push
mov
fisttpl
cld
ja
cli
sahf
dec
mov
pop
mov
insb
decl
std
xchg
lcall
mov
push
shll
fsts
test
dec
add
cmp
scas
jb
inc
fistpll
repz
cld
xchg
lea
fstl
mov
mov
loope
dec
push
lds
loope
mov
pop
adc
nopl
movb
enter
scas
jge
push
sub
dec
hlt
and
inc
cmpsl
in
xchg
lods
fcmovne
mov
mov
xchg
shr
popa
jo
test
sbb
cld
push
jo
je
xchg
mov
xor
int
dec
fidivl
push
fidivl
test
xorl
das
in
pushf
adc
test
movsb
enterw
mov
int
inc
arpl
das
jo
xchg
outsl
sbb
pop
dec
ss
test
out
out
ss
outsb
das
add
inc
leave
cmpsb
xchg
popf
ficoml
data16
addl
mov
arpl
push
mov
pop
sbb
cmpsb
nop
mov
cmp
mov
ret
ret
pop
les
int
stos
in
pop
xchg
xchg
mov
loopne
xchg
mov
add
dec
sub
loopne
call
and
test
mov
bswap
cs
pop
xchg
imul
rcr
sub
or
push
pop
xchg
pop
xchg
in
dec
jae
jmp
imul
decb
ror
inc
outsb
test
cltd
cwtl
fdivrl
mov
out
dec
test
jns
jo
stos
add
insl
jmp
pop
mov
leave
into
cmp
and
sahf
mov
or
stos
inc
jno
aaa
out
rorb
mov
in
inc
mov
jo
jg
sub
sti
cmp
xchg
push
test
out
mov
sbb
mov
dec
mov
not
outsb
insl
dec
sbb
dec
mov
mov
xor
lahf
inc
jne
cli
cmpsb
addr16
fs
test
cmp
or
ss
ja
adc
popf
mov
sub
sbb
outsl
push
mov
sub
aam
adc
pop
lret
xor
popf
adc
in
cmp
xor
add
or
ds
clc
in
pop
cli
xor
gs
stc
stc
mov
call
xlat
inc
in
pop
fistpll
jmp
jno
and
es
in
scas
dec
pop
xor
imul
ss
cs
dec
sub
test
test
sub
cmp
jbe
cmpsl
mov
test
stos
pop
cmc
ror
stos
sub
sbb
push
lahf
addr16
push
cwtl
outsb
iret
stc
jno
sub
or
repz
les
notb
lds
adc
jb
push
js
and
push
sub
push
mov
test
push
xor
xor
adc
adc
outsb
add
adc
and
movsb
js
popa
stos
and
xlat
test
mov
mov
xor
data16
sub
cmp
shlb
sbb
cmp
pop
bnd
fs
sarl
add
jae
fcoml
push
mov
in
xchg
jg
push
add
pop
adc
js
or
repz
ljmp
push
dec
in
jmp
push
outsl
jl
mov
adc
iret
popf
and
enter
mov
xchg
pop
mov
xchg
mov
lock
xlat
in
xsha1
cmpsb
dec
dec
loope
scas
stos
jge
xchg
fbld
imull
mov
push
hlt
sub
movsb
aad
iret
and
mov
cli
jmp
and
sti
jp
jmp
andb
ja
sbb
mov
lods
rcr
enter
ficompl
jl
lods
lds
sbbb
mov
mov
jg
in
dec
add
mov
xor
iret
sub
inc
mov
mov
les
repnz
outsl
mov
sbb
aas
mov
mov
mov
insb
addr16
xchg
sti
cs
push
lahf
pop
mov
push
js
enter
sahf
and
lock
popa
dec
jp
fisubrl
cmpsl
push
or
mov
xor
sub
mov
imul
inc
fisttps
scas
out
add
movsl
das
push
cmp
dec
or
cmpb
xor
scas
mov
push
std
cmp
jnp
inc
ficoms
popf
jbe
ret
and
cmpsl
or
les
stos
mov
and
and
pop
inc
mov
add
cmp
cltd
sbb
adc
mov
and
xchg
jmp
cld
in
add
fisttpll
push
stos
lods
push
dec
iret
inc
jbe
inc
js
and
lret
int
into
or
lods
orb
jg
les
pop
jb
push
sub
mov
adc
jmp
aaa
adc
imul
mov
mov
fcoms
push
daa
xor
rcll
aad
add
pop
nop
ret
xchg
out
leave
jno
dec
and
jno
sbb
imul
pop
cltd
in
add
adc
xor
aaa
into
push
mov
push
add
mov
mov
mov
add
fiadds
and
and
xor
cmpsb
bound
add
jo
jg
inc
lock
mov
ja
movsl
or
sub
aad
jmp
movl
into
mov
sub
push
xchg
sub
pusha
test
sub
adc
inc
out
mov
xchg
ja
leave
out
mov
mov
insl
clc
push
or
sbb
pop
cmp
mov
mov
mov
divl
xchg
loopne
adc
push
xor
xchg
lret
lret
in
icebp
subb
lcall
and
mov
push
fldl
adc
movsb
dec
or
dec
dec
ja
mov
push
jge
adc
adc
je
fnsetpm(287
in
xchg
mov
hlt
cmpsb
loopne
bndstx
es
or
movsb
bnd
xor
xchg
push
mov
xor
clc
push
push
lods
mov
call
add
ja
icebp
sbb
test
cmp
cmp
sub
mov
sbb
mull
mov
test
andl
shl
xchg
dec
sub
shlb
inc
out
iret
pushw
or
into
out
or
frstor
stos
inc
cmpsb
jp
insb
pop
enter
mov
jmp
ret
or
push
insl
sahf
mov
clc
mov
cmpl
mov
ret
scas
outsl
cmpsl
add
push
shl
or
add
bound
push
clc
push
mov
jl
xchg
lds
push
adc
and
and
add
cld
push
in
stc
sub
dec
pop
jb
add
lds
inc
and
sbb
push
xchg
mov
and
fidivl
inc
flds
push
shrl
jp
stc
sarl
pushf
lret
jmp
fldt
push
in
push
cld
test
rcrb
mov
jne
and
jge
lock
mov
pop
repz
pushf
xor
fs
popa
mov
dec
pop
mov
sbb
lcall
sub
std
or
xor
fidivrl
pop
divb
gs
filds
or
xor
cmp
mov
dec
lret
pop
inc
sbb
xchg
jl
cmpb
iret
bound
lea
imul
jle
xor
sbb
xchg
pop
add
fdivl
add
dec
lods
jo
shll
movsl
cmp
xor
imul
test
mov
add
sti
push
nop
xor
xchg
notb
xchg
repnz
dec
cmp
add
sti
xchg
out
arpl
mov
add
fcomps
arpl
movsb
xchg
adc
add
jns
aaa
das
outsl
or
sbb
mov
mov
sbb
sub
dec
or
or
lds
pop
outsb
aad
aam
insb
ficoml
lret
pushf
and
outsl
jp
sbb
jp
notb
fucomi
cltd
sub
xor
int3
dec
fimull
sub
sbbb
stos
pop
fcoml
jbe
cmp
sub
adc
xor
cmc
mov
movsl
xchg
inc
pop
vpshufhw
loop
mov
test
dec
adc
addr16
lods
pop
cmp
in
sahf
pusha
xchg
divb
or
dec
jle
es
and
or
mov
pop
aad
in
xchg
mov
jge
push
adc
pop
xchg
divb
loope
gs
pop
repnz
pusha
jp
mov
clc
cwtl
test
sti
inc
sub
push
repnz
jge
divb
sbb
cltd
in
ret
dec
das
add
sbbl
mov
js
inc
fldt
mov
cmp
jo
cltd
cmp
and
rcrb
add
mov
aaa
mov
fstpl
lods
jb
rcrb
dec
jno
jno
ret
loopne
stos
xchg
sbb
imul
xchg
js
or
jbe
movsl
and
push
inc
cmp
or
jecxz
cwtl
sub
dec
jmp
lret
bound
scas
jmp
cmpl
pop
pop
ficomps
mov
in
rcr
and
ret
pop
mov
psubsb
push
or
jge
add
jns
ljmp
adc
mov
js
push
push
mov
stos
scas
mov
lret
test
sub
jl
jp
cs
lock
sbb
je
mov
popa
insb
mov
enter
sub
inc
enter
outsl
xor
imul
stos
rcr
in
lods
sub
clc
pop
cmp
push
fdivl
add
mov
ljmp
stos
test
cld
or
sbb
xchg
adc
out
sub
and
idiv
test
mov
shll
adc
mov
ljmp
pop
cmp
jecxz
pop
outsb
clc
int3
repz
and
add
xchg
daa
lock
add
jb
xchg
xchg
sub
sti
cmc
xchg
insl
jns
dec
stos
mov
iret
loop
cmp
xchg
outsb
ret
mov
or
mov
out
cmp
jno
push
push
lock
cmp
or
mull
jmp
std
add
pushf
push
les
inc
stos
std
pop
ds
jno
fmul
in
lea
jg
adc
aad
add
rcl
cs
data16
popf
push
shll
sbb
fbld
dec
sbb
xor
push
mov
loope
mov
add
das
fstps
cld
cmp
imull
sti
test
cmp
imul
mov
out
mov
xchg
mov
mov
adc
arpl
xchg
shl
xor
pop
cmp
fwait
lods
or
xchg
push
andb
push
and
mov
sbb
pop
mov
cmp
jne
aaa
into
data16
cmp
push
lahf
shr
add
out
jnp
push
outsl
shlb
add
into
loopne
popf
out
lcall
int3
pop
xor
lahf
jae
hlt
fisttpl
into
cmp
fistps
or
adc
xor
inc
jmp
incb
std
xchg
mov
jbe
sub
mov
aam
or
arpl
inc
out
fwait
pop
int3
jo
xor
push
xchg
rcll
adc
adc
fsubrp
adc
sbb
ja
movsl
mov
js
hlt
push
push
jge
adc
pop
push
ss
mov
xlat
data16
jmp
lret
cld
mov
sbb
fimull
mov
test
sbb
dec
jb
push
test
sbb
aad
cli
mov
imul
mov
clc
inc
jo
in
pushf
mov
push
add
push
jne
dec
push
lds
out
mov
xor
inc
daa
pop
shld
sub
xor
push
cmpps
dec
and
jno
iret
mov
pop
mov
in
push
push
notl
test
and
push
repz
outsl
stc
nop
daa
sub
sub
je
test
and
cmp
xchg
xchg
pop
pop
movsb
pop
dec
mov
rclb
ret
negb
xor
out
cld
mov
cmpsl
sbbl
push
cltd
shrb
das
dec
inc
mov
cmpsb
es
aam
ret
notb
leave
mov
cli
cltd
cmp
push
fdivs
mov
jl
dec
xchg
loope
dec
es
shlb
les
test
iret
fnstenv
mov
stos
dec
pushf
popa
testl
push
add
xchg
mov
test
jmp
or
mov
mov
add
aad
mov
mov
add
subl
outsl
xorl
pop
adc
ds
inc
sbb
outsb
inc
mov
scas
jb
loope
mov
xorb
mov
xchg
pop
lahf
out
xor
insl
or
fcoms
xlat
and
push
mov
aas
enter
ret
sbb
iret
mov
mov
test
push
rcl
push
add
jg
lret
fadd
and
out
inc
cmp
jno
cmpsb
pop
out
pop
xchg
mov
psubusw
push
mov
cmp
pop
adc
push
xor
mov
and
insl
push
mov
sub
out
xor
inc
adc
rsm
dec
stos
aas
scas
and
repz
push
out
fisttpll
or
rcrb
inc
push
sub
inc
movsl
and
jg
sbbl
push
mov
icebp
repz
inc
mov
cmp
rorb
inc
push
sbb
mov
sbb
arpl
xchg
out
into
out
enter
mov
pop
sbb
mov
in
shlb
or
das
movsb
xchg
xchg
aam
incb
sbb
cmpb
xor
push
pop
mov
or
cmpl
jo
shrb
aaa
xlat
xor
jge
addr16
stos
loop
push
cs
xchg
cltd
sbb
ja
shl
cli
je
cmp
inc
fdiv
jnp
test
inc
or
and
popf
in
cmc
mov
lea
sbb
in
jns
rorb
shlb
mov
js
iret
and
js
or
mov
sub
or
idivl
test
sti
es
andl
fwait
xchg
jnp
cs
push
sbb
jae
aaa
cld
jg
ljmp
sub
out
data16
jmp
stos
jb
dec
jb
lcall
dec
pop
jbe
pusha
notl
shrl
jl
jle
call
out
ds
sbb
xor
fxch
lock
mull
xchg
test
xchg
jle
lods
aaa
add
imul
jmp
pop
sbb
jne
cmp
jb
in
pop
mov
addr16
or
mov
aas
lret
adc
andb
push
sub
cmpl
cltd
dec
dec
popa
outsl
jl
je
mov
inc
or
dec
jg
jmp
pop
pop
cs
das
add
ret
mov
test
mov
fdivrl
insl
fidivl
adc
mov
sbb
mov
sbbl
jne
pop
repz
xchg
inc
cld
add
inc
bnd
mov
in
lock
fdivrl
sarl
add
adc
adc
xor
bound
push
ja
repnz
sbbl
in
jbe
je
lea
mov
test
xchg
mov
push
mov
clc
sbb
or
cmpsl
sbb
mov
mov
sbbl
and
cltd
or
movsl
jne
lods
mov
aad
jno
test
incb
sub
dec
mov
popf
cltd
jmp
nop
mov
xor
push
fimull
shll
test
push
ret
cmp
stos
sub
jp
xchg
nop
push
add
inc
or
cltd
xor
dec
jb
inc
fwait
jecxz
push
addr16
stc
inc
push
cmp
repz
int3
pop
inc
movsl
pop
push
ljmp
push
add
xchg
mov
jg
fs
xchg
fsubr
mov
cmp
inc
inc
sti
imul
fwait
adc
mov
pusha
push
loopne
xchg
sbb
mov
sbb
push
push
sub
aas
daa
arpl
xor
in
pushf
mov
rol
fisttpl
pop
adc
mov
and
pusha
out
rcrl
dec
fbld
jnp
jge
cmp
into
mov
stos
popa
fsubl
test
dec
fcomps
jg
pop
test
xchg
repnz
mov
loopne
mov
dec
filds
arpl
push
sbb
mov
mov
mov
aaa
mov
xchg
or
into
mov
insl
mov
pop
sub
pop
lea
mov
movsl
or
mov
int
stos
bound
scas
or
cmpsb
jne
andl
cmp
sbb
outsl
push
setns
sbb
cltd
test
jg
mov
movsb
adc
adc
pop
nop
push
xor
cmp
jns
inc
std
push
outsl
or
xchg
dec
mov
js
jecxz
push
jge
mov
xchg
test
add
jmp
dec
aam
xor
and
xchg
into
jnp
fwait
jg
inc
cmp
sub
push
lods
ss
and
dec
cmpxchg
iret
insb
add
adc
pop
out
nop
js
mov
cmp
pop
outsb
cmp
add
mov
outsl
push
or
cmp
sub
jb
in
nop
sub
lahf
dec
xor
cli
pop
cmp
cwtl
dec
scas
negb
mov
xchg
loop
add
clc
jb
cmp
aas
jmp
sahf
xor
dec
icebp
ljmp
sub
xor
or
inc
cmc
lea
mov
push
sbb
adc
imul
movsb
xchg
adc
mov
nop
inc
jno
mov
and
fsubrl
dec
push
aam
mov
push
jo
subb
push
push
test
ret
std
popf
jmp
sbbb
mov
and
mov
pop
imul
jg
or
push
lods
aad
xchg
out
push
adc
int3
dec
sbb
clc
lods
jg
ja
dec
pop
push
test
mov
fimuls
cmpsb
mov
mov
xchg
cmp
mov
test
sbb
ja
cmp
fidivrl
insb
lret
adc
pop
adc
out
mov
cmp
jno
jne
pop
sbb
int
movsb
pop
xchg
popa
adc
loopne
fstp
out
pop
xor
idivl
shll
mov
loop
sub
pop
sbb
inc
dec
mov
dec
push
mov
mov
mov
cmp
ljmp
stos
int3
cmpsl
test
sub
jne
xor
das
pop
outsb
push
clc
push
fldt
test
mov
in
jle
xchg
insl
mov
jg
mov
dec
push
mov
loopne
test
cli
xor
repz
mov
xchg
and
jecxz
mov
test
stos
jnp
pop
inc
fisubl
mov
cmp
jle
and
mov
mov
shlb
es
scas
push
jmp
inc
xlat
fs
out
mov
fcoms
js
cmp
adc
cli
rcrb
xchg
imul
faddl
jge
push
pusha
stc
cmc
pop
repnz
inc
adcl
or
lahf
xor
call
inc
xchg
push
aaa
mov
insb
cs
insl
into
push
sahf
sub
jmp
rcll
mov
push
mov
mov
push
lcall
sub
push
fstpl
pop
mov
in
ja
subb
shrb
inc
mov
push
inc
lahf
in
aad
mov
les
and
adc
sbb
aad
lods
repz
pop
sarl
pop
cld
std
mov
xchg
mov
addr16
xor
les
push
fcompl
pop
or
stos
fnstsw
jbe
push
test
push
stos
mov
sbb
sub
daa
in
dec
shll
dec
test
cmpsl
or
lds
fsubr
xchg
push
push
xchg
inc
sarb
adc
xlat
mov
nop
pop
sub
movsb
cmp
aad
scas
cmp
stos
inc
nop
pop
xchg
pop
jmp
int
xor
add
adc
or
jns
jecxz
lods
jle
xchg
add
pop
das
mov
fistl
ds
jmp
sub
xchg
jns
lods
sub
adc
imul
xor
sub
pop
pusha
cltd
test
jl
jb
sub
cmpsb
cmp
mov
or
cmp
fldl
fsubrp
cmc
and
pop
mov
add
shrb
jbe
loopne
dec
mov
add
jge
and
ss
les
ja
mov
int3
dec
mov
jae
loopne
xor
jle
sbb
in
pop
daa
xor
enter
std
cs
pop
sub
ret
cmc
mov
dec
in
pop
push
jno
pushf
dec
pop
pop
ljmp
push
cmp
popa
add
dec
ret
fbstp
test
rcl
sbb
std
push
xor
data16
pop
insl
imul
test
shll
lss
and
or
xor
sbb
mov
dec
rcrl
and
sbb
stos
test
pop
andl
hlt
and
iret
mov
ret
inc
xchg
lods
popf
xor
mov
inc
fucom
fnstcw
test
push
fucomp
loopne
iret
insb
aad
insb
nop
addl
daa
or
lret
popa
clc
sti
cmp
dec
cmpsl
cmpsb
cli
or
hlt
cmp
pop
push
dec
sbb
leave
inc
fdivrp
jmp
lret
gs
movsb
cwtl
pop
imul
dec
adc
loope
lds
negb
xchg
enter
or
test
pop
sbb
stos
or
mov
icebp
xlat
xlat
mov
daa
arpl
scas
mov
sub
dec
add
rcrb
pop
mov
lea
sbb
cmp
push
test
xchg
pop
and
mov
imul
fisttpll
or
stos
cmp
in
int3
sub
std
mov
xchg
notb
dec
movsb
push
std
hlt
imul
sub
repnz
cmpsl
xchg
add
cld
rorb
stc
insl
sub
lahf
push
das
nop
imul
hlt
xchg
inc
and
mov
pop
jb
cmp
popa
clc
jo
sbb
jl
clc
adc
in
je
jb
arpl
inc
fs
inc
enter
ja
push
pop
adc
pop
add
es
aam
cli
push
jno
fldcw
js
subb
test
xlat
xchg
movsb
jecxz
sarb
pop
adc
mov
loopne
aas
adc
jle
fs
sub
inc
fwait
daa
mov
popa
lret
ja
xor
adc
dec
jmp
jb
add
add
hlt
mov
icebp
lcall
icebp
pop
pop
cmc
sbb
adc
dec
cmp
or
hlt
iret
dec
cmpl
dec
popf
or
mov
pop
ja
mov
stos
inc
or
cmp
test
sahf
xor
jg
mov
daa
int3
shlb
repnz
mov
into
nop
sub
shrl
or
stos
nop
daa
fstl
xor
dec
call
push
out
xor
mov
jg
mov
jb
xchg
sub
loop
adc
scas
add
jno
rorb
rolb
xlat
loopnew
jp
fsubr
pop
call
jbe
pop
outsb
fsubrs
xor
jo
jae
pop
cmp
dec
lcall
es
mov
shrb
and
and
push
insb
adc
mov
fisubrl
out
push
dec
data16
and
test
and
shr
pop
imul
fisttpl
int
dec
into
arpl
js
inc
cli
sbb
xorb
sub
jnp
xchg
lods
imul
js
subl
xchg
stos
push
cmp
jb
ljmp
cmp
rcrl
repz
bound
in
jle
call
or
js
addr16
mov
and
jle
and
mov
sarb
lea
or
scas
stos
inc
loopne
pop
data16
or
xor
dec
mov
daa
jp
notb
xchg
xor
in
mov
push
clc
cmp
inc
push
push
data16
adc
cmp
fnstenv
lret
dec
aas
dec
lcall
and
xor
jbe
jl
and
sbb
or
shlb
jle
insb
pop
ds
adc
sbb
xor
mov
add
aam
imul
or
test
mov
sti
pop
mov
data16
push
fs
iret
adc
cmp
xor
pushf
lcall
out
cwtl
xor
mov
lcall
js
bound
xchg
lds
mov
out
sub
std
inc
mov
test
adc
mov
xorl
and
rolb
sbb
aaa
mov
aam
test
add
fmull
rorl
fsubs
popl
xor
inc
inc
int
pop
cmp
pop
dec
mov
das
adc
mov
mov
cli
dec
mov
adc
mov
add
push
ss
add
and
dec
push
lods
loop
add
inc
mov
jne
les
dec
cmc
xor
push
cmp
or
or
stc
bound
sti
and
or
mov
add
out
push
aas
xchg
xchg
scas
lds
fimull
mov
hlt
icebp
mov
push
test
shl
ret
sub
pop
adc
push
push
inc
add
push
mov
push
std
loope
adc
sub
stc
jo
lret
and
sub
sbb
je
ljmp
mov
cmp
hlt
daa
adc
jb
aaa
mov
dec
sarl
push
or
mov
cmp
jo
and
dec
xchg
insb
inc
cmp
mov
xchg
xor
mov
sbb
xor
push
fildl
aaa
icebp
mov
es
or
xchg
adc
push
add
sbb
adc
add
xor
repz
jecxz
or
xor
cld
inc
enter
rol
enter
mov
fimuls
cmc
ja
cmp
sbb
push
sbb
mov
outsl
in
or
add
xlat
and
sbb
fwait
leave
xor
repnz
sbb
fcomip
mov
push
dec
pop
cwtl
out
sbbl
sub
jmp
mov
outsl
and
dec
fildll
and
insl
sbb
stc
popf
adc
mulb
imul
pop
das
jnp
jge
int
call
fwait
lcall
aas
push
fdivrs
sbb
push
mov
pop
lods
cld
cltd
aaa
xor
sahf
rclb
inc
movsb
sub
jl
pop
pop
dec
in
call
insl
cmp
insb
lods
insb
testb
sbb
mov
movl
cmp
lods
fwait
jmp
sbb
addr16
mov
lea
jp
lahf
mov
pop
inc
scas
cli
mov
fisubrs
xor
movsl
dec
loop
aam
shrb
call
lock
pusha
cmp
ss
seta
cmp
push
push
cwtl
mov
leave
jne
sub
out
push
bound
add
das
icebp
pop
cld
mov
test
adc
xor
push
xchg
adcl
sbb
faddl
hlt
adc
adc
in
mov
gs
test
lea
sub
loopne
add
and
push
cmp
pop
cmp
inc
sbb
mov
mov
insb
notb
mov
cltd
test
lret
cmp
sbb
mov
xor
jnp
mov
rcrl
popf
loopne
mov
aam
sti
cmp
jns
iret
and
mov
dec
pop
lret
int3
dec
pop
add
jecxz
push
adc
inc
pop
test
lret
sub
mov
fidivrl
adc
jno
mov
jmp
add
adc
test
pop
push
andl
xor
xchg
fidivl
mov
cmp
out
lret
pop
lret
jbe
mov
test
ret
std
inc
or
jb
hlt
inc
mov
push
or
pop
in
ss
xchg
lods
inc
ljmp
cltd
mov
xchg
xchg
pop
sub
rolb
adc
inc
push
xchg
clc
aas
mov
int3
sbb
insl
lds
mov
jmp
pop
mov
dec
mov
imul
mov
lret
les
test
mov
xchg
mov
sub
int3
fs
call
ja
mov
loop
pusha
pop
les
scas
lret
mov
adc
xlat
outsb
push
call
cmc
fsubl
add
int3
inc
sbb
jae
mov
mov
xchg
mov
mov
lock
mov
or
sub
repz
adc
pop
jp
sahf
jecxz
pop
mov
sub
mov
loope
add
push
pop
add
in
pop
inc
arpl
repnz
aaa
jno
sub
call
leave
mov
ljmp
pop
lock
imul
and
in
or
and
jg
jns
lcall
aam
inc
mov
jae
movsb
add
repnz
inc
fsts
sub
je
or
or
pop
outsb
inc
outsb
mov
cmc
mov
sbb
xchg
fbld
mov
xor
and
data16
push
cmc
dec
in
mov
mov
or
lcall
lret
push
push
movsl
xchg
push
addr16
leave
mov
jp
push
sbb
and
push
data16
das
xchg
sub
loop
and
hlt
ss
mov
cmc
xor
icebp
jbe
mov
ficoms
xor
and
mov
aaa
cs
pop
push
dec
mov
dec
xchg
push
test
lds
in
ficoms
push
aas
jecxz
inc
shrl
clc
cmp
sub
push
leave
std
and
xchg
movsl
out
pushf
lahf
int3
insb
or
sbb
inc
mov
cmpsb
jecxz
xor
or
sbb
aas
push
out
jo
insb
mov
int3
or
aaa
ficoms
sbb
sub
js
jle
xor
add
add
test
clc
sbb
adc
mov
icebp
pop
sub
adc
imul
sbb
add
add
pop
lcall
add
mov
push
xchg
sbb
jns
hlt
les
push
add
mov
popf
rolb
enter
fcomps
xor
fcmovnu
mov
fisttpll
and
es
pop
adc
push
mov
fmul
mov
xor
test
sti
fldenv
nop
push
addr16
rcrb
dec
lods
jmp
fcomi
push
loope
dec
and
add
mov
fstpt
jae
sbbl
cmp
test
outsl
cmp
or
push
and
xor
or
pop
aas
outsb
push
and
adc
hlt
rcll
xor
xor
pop
fwait
mov
data16
lret
and
push
mov
sub
repnz
dec
icebp
daa
fists
jp
ljmp
adc
pop
leave
jp
sahf
outsl
lcall
xor
mov
cmc
mov
pop
jg
cmp
imulb
xchg
xor
xorb
clc
outsb
fnstenv
scas
jns
lock
mov
repz
or
dec
jno
arpl
imull
cmp
fdivs
test
cld
push
gs
push
fnstcw
mov
stos
mov
push
fstpt
mov
scas
mov
addr16
add
push
jg
push
out
mov
movsl
cmp
sub
mov
mov
movsl
mov
or
sub
pop
lea
xchg
adc
lock
fsubr
test
sbbl
testb
or
mov
stos
icebp
enter
jecxz
xor
mov
add
idivl
outsl
sub
aaa
ficoml
mov
cmp
test
loop
sub
cmpsl
ds
dec
add
js
xchg
subb
rcl
movsb
push
cmc
out
inc
lret
jl
sub
data16
or
orb
sub
mov
cmpsl
leave
cmp
jae
xor
pop
aas
mov
push
test
and
pop
test
mov
shll
jns
push
rcll
push
inc
notb
aaa
clc
xchg
push
xor
push
dec
sub
add
cmpl
std
adc
mov
subb
mov
xchg
js
call
ja
cmpsl
lea
mov
call
js
mov
fcompl
mov
loopne
cmc
in
out
mov
loopne
mov
insb
shlb
in
adcl
adc
or
sarl
pop
fs
xchg
xor
and
push
hlt
inc
enter
jmp
inc
adc
out
xchg
in
std
aam
scas
add
in
ficompl
ss
sti
insb
mov
dec
or
inc
fisttpl
aas
lods
or
in
lret
mov
push
xchg
pop
xor
pop
loope
dec
sub
std
pop
sub
mov
iret
fdiv
xlat
repz
data16
fldenv
and
cmc
aas
push
push
add
scas
sub
popa
or
popa
push
shll
cmp
cmp
mov
add
push
in
push
jg
jg
into
adc
movsb
enter
and
addr16
scas
jl
loope
pop
jp
mov
fnsave
mov
lock
mov
sbb
roll
shrl
movsb
mov
lds
sahf
notb
movsb
inc
inc
lods
shrl
mov
sbb
jle
movsl
scas
sbb
sub
dec
xor
hlt
mov
sub
mov
xchg
add
mov
cmc
scas
xor
popf
sub
cwtl
pop
insl
ret
mov
mov
pop
xchg
sahf
adc
scas
xor
pop
jmp
add
cmp
pop
or
rolb
test
call
xlat
mov
data16
push
test
dec
das
jp,pn
lret
mov
adcb
nop
stos
mov
jmp
aas
aas
mov
xchg
subl
jmp
mov
xor
gs
xchg
jne
add
repz
outsl
push
jo
xor
mov
rcrb
test
xorl
cmpsl
dec
sbb
jmp
popf
jae
fdivrs
rclb
sub
xchg
dec
nop
jp
test
add
lock
ret
lock
repnz
mov
sub
rcrl
pop
jb
pop
lea
cmp
inc
mov
fidivs
adcl
lahf
lret
fstpt
in
or
aad
inc
add
stc
mov
adc
cmp
rol
pop
mov
cmc
xchg
mov
push
outsb
pop
mov
test
loopne
ret
pop
aas
push
inc
mov
popf
push
aam
imul
push
enter
xor
and
bound
mov
and
inc
xor
mov
data16
or
jnp
adc
add
iret
dec
jne
repz
fwait
xor
push
call
lret
test
jl
sbb
out
sbb
add
outsl
mov
mov
and
out
push
jae
int
and
pop
jmp
push
add
or
xchg
push
push
cmp
pusha
popf
out
add
adcl
xchg
repnz
stos
test
xchg
sub
mov
cmp
push
call
xchg
xchg
outsl
loop
xor
scas
es
mov
adc
ret
xchg
js
and
shll
ret
add
fnstsw
ret
andb
add
sti
mov
enter
push
aad
shlb
les
js
add
push
sbbb
test
out
movsb
loope
jge
and
repz
and
sbb
insb
test
adc
mov
pop
bound
adc
sub
cmp
es
sti
mov
ds
jnp
xchg
aaa
out
dec
adc
push
bound
gs
in
mov
jmp
push
cltd
pop
or
cltd
xor
push
dec
movl
loop
jb
fldcw
lea
lock
adc
sbb
imul
fiaddl
sbb
lods
dec
jge,pt
insl
cmc
js
ret
lahf
negl
mov
insb
in
dec
pop
sub
addr16
ret
jo
xchg
fdivrs
lret
lret
ficoml
adc
adc
mov
or
js
jp
lcall
push
dec
add
jmp
mov
xor
sub
pop
adc
cmp
dec
test
icebp
push
xchg
mov
inc
fldcw
push
xchg
cltd
xchg
mov
mov
add
add
je
jns
mov
mov
lods
mov
fidivs
lret
lar
decl
stc
cld
inc
fwait
movsl
cli
test
scas
lret
inc
fs
clc
stos
test
cmp
pop
mov
mov
pusha
icebp
sub
push
mov
xlat
scas
mov
cmp
scas
test
clc
pop
outsb
sub
or
push
mov
in
xor
leave
mov
sub
mov
sbb
jno
stc
xchg
sbb
imul
jmp
jo
push
pushf
xchg
jb
je
adc
imul
jmp
dec
dec
lret
cld
imul
ja
or
loope
ljmp
call
in
cmpsb
les
cld
jae
add
push
fsubrp
mov
xchg
std
sbb
add
and
shlb
stos
sbb
out
sbb
sub
stos
loope
mov
mov
jecxz
dec
mov
adc
fwait
pop
mov
dec
iret
fdivrl
popf
jns
fcom
cmp
dec
das
pop
outsb
cli
pop
push
insl
inc
xor
mov
arpl
out
loop
das
ret
outsb
inc
dec
aaa
ja
insb
add
adc
sbb
jecxz
xchg
in
add
mov
xor
sub
sarb
arpl
orl
fisubs
pop
loop
cmp
cld
cmp
add
sbb
add
push
frstor
fisttpll
punpckhwd
inc
pop
outsb
aad
in
or
push
loop
inc
and
push
pop
push
and
push
mov
int
dec
cmp
pop
push
jns
clc
scas
mov
insb
jo
xor
mov
test
mov
fs
cmp
inc
repz
mov
sub
xlat
mov
adc
mov
pop
stos
addr16
fldt
jns
add
sub
outsb
jns
push
testl
mov
sbb
inc
inc
mov
sarb
mov
popf
shrl
fwait
jne
dec
ret
pop
push
cld
adc
xor
mov
movsb
jg
push
mov
rcrb
xchg
adc
aad
ljmp
adc
dec
jge
inc
mov
in
and
xchg
movsb
stc
mov
outsb
xor
dec
jne
lea
xchg
adc
cli
cmp
sub
imul
imul
pop
mov
fisubs
xor
mov
mov
pop
cmp
or
std
das
inc
aas
xchg
popa
and
insb
and
fidivrs
scas
sti
add
fldenv
int3
sub
out
outsb
sbb
xchg
mov
sbb
jg
out
sti
pop
mov
xchg
test
push
adc
pop
push
push
and
xor
les
ja
jp
sbb
or
outsb
addl
inc
mov
lods
jae
fisubs
outsl
shll
mov
imul
popa
mov
push
sbb
and
inc
fisubrs
mov
jae
in
addr16
sbb
pusha
xchg
inc
aas
insl
clc
xchg
pop
cmp
add
add
lcall
and
mov
xor
jge
push
sahf
push
mov
mov
insl
out
push
push
cmp
add
nop
cmc
push
outsb
shlb
orl
mov
and
arpl
scas
pusha
lock
pop
out
es
add
push
jmp
and
scas
aaa
jno
cmp
movsl
mov
xor
icebp
xchg
mov
loopne
xchg
cmp
and
cmp
out
inc
shl
repz
lods
test
cmpsb
bndstx
aad
hlt
and
sub
pop
cld
lcall
push
in
stc
call
or
outsl
add
ret
pop
xlat
pop
add
adc
sahf
mov
mov
pop
xchg
push
in
sarl
cmpsl
mov
adc
cmpb
fs
test
inc
shll
adc
add
adc
stos
push
shr
xor
inc
repnz
mov
inc
insb
push
lock
fdivrl
mov
push
inc
pop
mov
jg
inc
int
dec
sub
xlat
fsubrl
shll
push
icebp
fwait
inc
xor
cwtl
lahf
lods
fucomip
sub
push
lods
and
xchg
xor
lds
adc
add
push
iret
fidivrl
xchg
jg
pop
jae
je
jecxz
addr16
xchg
aaa
mov
inc
movl
push
or
lret
sbb
hlt
fildll
ret
jl
push
mov
add
iret
gs
test
fcompl
xchg
rclb
sbb
inc
lahf
mov
sbb
mov
lahf
add
stc
popf
imul
nop
shll
mov
nop
bound
cmp
lcall
xor
jb
push
mov
push
aad
inc
fwait
stos
cmpsb
movsb
cmp
loope
push
in
gs
push
sub
in
daa
add
es
mov
pop
mov
fwait
push
flds
cld
call
aas
pusha
adc
rcrl
data16
xor
adc
fcmovne
push
push
inc
mov
ret
dec
cmp
enter
push
scas
sbb
aas
cld
sbb
rcll
push
das
int
push
push
push
sub
and
cmp
out
je
push
sahf
mov
inc
jle
jne
jmp
int
mov
dec
sub
push
jo
or
aaa
cmc
mov
cmpsb
sub
cmp
je
adc
mov
outsl
jmp
inc
push
dec
xchg
xor
dec
test
adc
or
xchg
leave
lds
ret
pop
dec
lds
sub
bound
rcll
jo
in
cmp
leave
out
outsb
mov
cld
popa
hlt
stc
push
inc
or
dec
shll
int
adc
stc
pop
ret
popf
orl
push
xchg
adcl
clc
loopne
test
mov
scas
lcall
xor
bound
mov
pop
mov
xor
jne
adc
ja
lock
or
mov
jo
sub
fildll
cmp
fadds
push
aaa
lret
xor
loope
aam
dec
arpl
inc
sbb
sbb
movsl
cmpps
lods
xchg
call
dec
sbb
rcl
add
std
cmp
ret
xor
inc
cmp
pop
xchg
pop
xchg
pinsrw
fdivr
lcall
in
ret
stos
sti
sahf
push
ljmp
sarl
jg
sub
push
cwtl
xor
insb
jl
mov
mov
mov
mov
pusha
inc
cltd
mov
dec
out
xor
clc
scas
mov
mov
dec
data16
jl
xor
gs
sbb
pop
movsb
or
sub
ja
shrl
pop
jle
in
adc
int
mov
mov
das
mov
ss
dec
push
mov
jg
psraw
sbb
rol
aaa
jecxz
imul
sbb
fdivr
lcall
jecxz
dec
lcall
es
mov
xchg
test
or
movsb
push
adc
mov
mov
fimuls
mov
lods
cli
out
stos
int
mov
dec
filds
dec
cmp
sbb
sub
inc
pop
add
xchg
pop
shll
xchg
cld
and
clc
push
pop
mov
push
js
jnp
xchg
sbb
xor
mov
push
and
or
mov
fucom
mov
xor
cmp
sub
in
hlt
ror
orb
nop
and
xchg
movsl
lock
rcl
imul
lods
fs
lret
pop
inc
jno
pop
cmp
and
shlb
pop
or
dec
sti
scas
jmp
mov
orb
daa
or
in
push
cld
inc
sub
ret
je
or
test
push
sub
or
pop
movsl
pop
xchg
add
push
lods
mov
or
ss
pop
mov
mov
mov
dec
pop
shll
xor
test
icebp
or
addr16
cmc
lret
lcall
jb
insb
in
fimuls
mov
leave
popa
dec
xlat
aam
pop
sbb
xchg
scas
inc
cs
and
pushf
push
stos
movsl
or
push
cmp
cmp
out
cmp
sbb
insl
dec
adc
inc
push
fldcw
or
clc
xchg
or
or
pop
cmc
imul
in
pop
ljmp
mov
clc
adc
xchg
adc
or
pop
xchg
sub
cwtl
mov
out
test
in
jg
push
inc
enter
mov
fists
xor
cmp
push
dec
into
fldcw
imul
sub
pop
adc
push
sub
mov
in
inc
nop
jl
add
xchg
in
arpl
sbb
mov
xchg
jg
adc
and
sahf
and
push
daa
inc
imul
pusha
call
mov
jb
pop
push
div
cmp
cmp
jle
mov
jg
inc
rcll
shlb
mov
mov
mov
push
pop
insb
into
add
and
mov
mov
inc
lock
mov
leave
push
out
sti
in
cmp
stc
fsubr
dec
push
int3
pop
push
and
rcrl
jnp
scas
stc
mov
aam
jmp
xchg
add
cmp
lcall
mov
adc
ret
es
jg
imul
xor
cmp
inc
sbb
xlat
pop
ljmp
aad
jns
jb
add
fadd
mov
add
pop
mov
pop
adc
xor
xchg
fcmove
adc
cs
cmp
repnz
inc
cmc
xchg
js
sbbl
lock
adc
cmpsb
add
pop
lock
test
xchg
stos
lds
jle
shlb
dec
test
dec
lock
cmpsl
pop
mov
scas
adc
mov
add
fcoms
xor
add
push
pop
inc
lahf
push
inc
xchg
and
jp
or
cmp
add
shrb
dec
mov
std
repz
pushf
stc
jecxz
imul
jle
repz
shlb
add
cmpb
movsl
sbb
daa
mov
pop
xchg
lret
shlb
aas
inc
jb
fiaddl
push
xlat
incb
nop
xchg
dec
nop
jns
sahf
insl
test
fadds
jecxz
rcrl
out
cmp
insb
mov
jle
add
sbb
mov
pop
lcall
dec
pusha
jne
add
fcoml
push
and
jno
mov
xchg
test
mov
sti
xorl
mov
ret
mov
cmc
mov
xchg
clc
or
or
sub
push
xchg
pop
ja
mov
lods
xchg
mov
dec
lcall
dec
or
xor
movsl
shr
loop
stos
je
ds
sbb
mov
jmp
mov
aam
or
int3
mov
fs
lret
xor
popl
pop
xor
stc
and
in
mov
lds
add
lods
rclb
push
mov
cmpsl
pushf
addr16
enter
cltd
lret
iret
mov
push
xlat
sub
jecxz
clc
popf
popa
cmp
stos
lds
xchg
lods
popa
iret
lea
aas
insl
ja
adc
mov
push
aad
xchg
in
lods
push
xor
mov
dec
xorl
mov
push
cli
adc
push
fcmovne
lcall
sub
dec
outsb
fstl
xchg
jno
dec
lcall
dec
mov
dec
decw
int3
mov
int3
inc
pop
xchg
and
movb
jno
in
cmp
xor
or
subl
int
cwtl
xchg
sbb
les
add
jecxz
cltd
aam
mov
push
cmpl
push
cmpsb
and
jnp
mov
xchg
popf
cmp
testb
mov
rorb
xchg
cmp
xchg
test
lret
sub
fidivl
jg
lret
or
sbb
addr16
fucomp
xchg
inc
icebp
in
movsb
dec
addr16
outsl
cltd
imul
mov
mov
inc
pop
int3
xchg
movl
fs
mov
mov
aam
xor
repz
fbstp
dec
adc
aaa
pop
pop
push
mov
jno
cmc
xchg
outsl
xchg
and
shrl
cmp
int3
dec
loopne
sbb
mov
in
ja
popf
shlb
sub
push
dec
xor
pinsrw
scas
in
je
add
and
xchg
pop
ss
aas
icebp
xor
cmp
or
cmpsb
or
aam
outsb
push
adcl
das
scas
cmc
or
icebp
mov
and
or
push
ds
call
push
adc
jnp
mulb
adcb
xchg
pop
cli
insl
add
mov
in
xor
lahf
lods
xlat
nop
insb
mov
ja
mov
rcrb
enter
mov
stc
into
inc
fidivl
push
inc
sbb
cmpsl
cmpsb
lods
test
stc
push
shll
fbstp
sbb
jecxz
lods
and
pop
test
sahf
and
ret
mov
mov
sub
test
leave
mov
cs
data16
xor
cwtl
sub
ss
lea
test
imul
mov
fbstp
xchg
sarb
mov
sbb
adc
jbe
mov
mov
into
add
add
insl
add
xorb
aas
mov
jl
jp
pop
xor
mov
mull
jo
outsb
inc
mov
into
mov
decl
inc
leave
xchg
imul
mov
push
adc
aaa
sahf
push
dec
mov
subl
mov
andb
jne
rol
and
add
pop
fistps
das
rorb
scas
cmp
fstps
sub
jbe
nop
mov
loopne
jnp
sub
and
flds
addl
pop
les
dec
aam
repz
mov
mov
test
sub
xlat
push
mov
xchg
sbb
push
xchg
hlt
mov
sub
mov
pop
cmc
sbb
imul
mov
jb
int3
and
cmp
int
shr
insb
lcall
xor
or
xor
mov
daa
mov
pop
mov
xchg
test
xchg
sub
int3
xor
enter
cmpsb
jle
inc
pop
int3
xchg
inc
pop
popf
sub
inc
bound
jmp
mov
fsubrl
xchg
and
and
mov
xor
and
and
mov
ret
xlat
dec
jo
and
imul
push
and
sbb
xchg
inc
movsb
gs
or
push
xor
mov
lods
xchg
inc
pop
lahf
imul
int3
adc
dec
jne
lods
inc
dec
pop
sbb
push
popf
enter
push
int
inc
push
addb
es
cmpsb
test
sbb
lcall
sahf
cltd
addr16
in
inc
dec
adc
xchg
xchg
shll
in
pop
test
rcl
out
push
hlt
dec
les
dec
pop
dec
shll
out
test
jmp
jmp
js
cmpl
pop
test
fldcw
adc
movsb
jbe
jb
xchg
ret
and
inc
sbb
iret
fucom
inc
add
cld
cmp
sub
test
cwtl
das
cmp
lea
nop
sbb
mov
in
xor
bound
adc
sahf
test
jo
call
iret
and
roll
lea
cmp
int3
arpl
movsl
jo
push
stos
sbb
fucomi
pop
lea
push
bswap
xor
sub
cmp
sub
daa
push
xor
pop
push
loop
clc
push
mov
mov
or
xchg
xchg
es
push
mov
movsl
nop
inc
into
jl
test
call
fstl
hlt
popl
adc
into
pusha
std
push
push
xchg
xor
xchg
push
call
ja
xchg
sbb
mov
cmp
sub
loop
sbb
cmp
mov
push
in
cmp
ljmp
mov
out
mov
ljmp
xor
xchg
in
cwtl
ficompl
mov
out
push
rcrl
jecxz
aaa
inc
cmc
sub
cmp
mov
sbb
lcall
cmp
daa
inc
fadds
mov
sbb
rcl
or
jno
sti
xchg
jg
clc
fbld
sbb
rolb
in
test
arpl
mov
in
mov
dec
in
xor
pop
test
mov
push
cmpsl
adc
lret
xor
lret
dec
inc
je
subb
leave
and
lods
mov
lret
mov
call
cmp
push
ss
clc
mov
mov
dec
mov
xchg
sub
mov
lret
out
add
pop
scas
test
and
sub
scas
xor
mov
mov
xlat
out
adc
mov
icebp
idivb
adc
test
mov
mov
pop
mov
xchg
sbb
inc
fsubrp
dec
inc
andl
aaa
adc
test
pop
je
cmpb
pop
sub
jp
dec
mov
fildll
std
je
mov
and
add
insl
mov
push
and
jno
into
es
sbb
sbbb
mov
mov
mov
xchg
pop
and
or
mov
inc
inc
push
push
ja
adc
dec
dec
enter
adc
roll
cmp
addr16
notl
incl
lcall
stc
test
dec
addb
jmp
repz
pusha
jae
or
cmc
gs
add
jb
mov
adc
roll
and
xchg
xchg
xchg
pop
hlt
enter
push
fs
xchg
cmp
lods
sub
pop
pop
push
insl
dec
pop
clc
in
sub
loop
mov
dec
jecxz
sbb
xchg
pop
push
push
test
pop
sahf
lods
in
or
mov
mov
out
sbb
int
iret
xchg
sub
leave
stos
inc
cmp
mov
fs
leave
mov
test
movsb
push
and
ljmp
pusha
enter
mov
call
out
dec
rcl
outsb
xchg
and
data16
rclb
jmp
adc
lret
movsl
jg
popa
sahf
xor
mov
mov
pop
out
inc
fdivr
adc
test
movsb
or
in
mov
sbb
pop
rcrl
and
jle
insl
add
mov
mov
xchg
xchg
xor
insl
cli
and
fwait
movsl
xchg
inc
pusha
mov
enter
out
test
cmpsl
xor
or
or
movsl
lds
mov
imul
mov
insb
lods
mov
lea
jg
outsb
xchg
dec
push
lods
stos
xchg
or
mov
or
mov
cmp
call
sub
fldl
cmp
cmp
inc
pop
fisubrl
or
jnp
sub
and
cmc
inc
sahf
jge
and
mov
cld
fcoms
sbbl
pop
dec
jbe
add
iret
push
into
ficoms
jo
shlb
pusha
insb
jle
jmp
mov
cmp
fwait
or
imul
add
cltd
pop
and
lcall
stc
and
or
aam
insb
mov
sahf
inc
divb
xor
xor
xchg
jo
add
cmpsb
stc
and
cmpb
mov
and
cmpsl
inc
into
jns
jmp
xchg
mov
cmp
jno
cmpsb
mov
add
add
xchg
cwtl
inc
cmp
lods
or
mov
sbb
mov
jle
add
pop
fisubs
loopne
in
out
stos
xor
xorb
or
xchg
adc
jae
scas
sbb
mov
xor
arpl
repz
mov
insb
inc
jo
mov
aas
jo
mov
or
out
scas
xchg
sbb
frstor
shrl
movsb
xor
sidtl
xor
mov
mov
fstps
push
sub
data16
bound
cmp
xchg
cmc
outsb
and
leave
xchg
in
xor
das
daa
mov
adc
arpl
pusha
es
jb
cmp
sbbl
shlb
sbb
scas
scas
jmp
cmp
inc
mov
mov
inc
in
jl
fsubrl
mov
xchg
mov
mov
mov
xor
cmpb
scas
xchg
push
mov
ret
xor
add
addr16
aad
push
repnz
fistpll
divb
add
filds
xchg
int3
and
push
push
fwait
and
icebp
in
in
adc
pop
pop
in
divl
int
and
scas
dec
into
jb
sbb
xchg
scas
pushf
xor
lcall
into
adc
sub
jne
add
add
aaa
jge
push
mov
pop
lods
inc
dec
std
xchg
mov
shlb
icebp
or
pop
cmc
mov
mov
mov
ss
out
fidivs
mov
hlt
andl
mov
in
push
daa
mov
test
inc
push
data16
je
cmp
and
cltd
pop
cwtl
or
and
jne
push
ret
mov
js
shrb
and
push
test
adc
xor
cmpsb
mov
and
sbb
cwtl
jle
scas
into
arpl
aad
pushf
pop
push
mov
cmp
xchg
outsb
and
sbb
fisubrl
and
bnd
add
and
add
adc
cltd
cmp
popl
mov
adc
pop
ja
or
sub
jae
imul
and
ss
lret
push
mov
test
pop
outsb
pushl
mov
xor
push
mov
test
mov
icebp
notb
jae
iret
push
cmp
cld
aaa
jb
dec
stos
mov
xchg
sbb
lahf
imull
push
into
mov
push
loop
push
xchg
add
int
adc
out
pop
int
cmp
mov
push
jb
lcall
mov
adc
mov
xchg
mov
mov
xchg
and
mwaitx
imul
unpcklps
or
mov
fstpl
scas
ret
cwtl
push
cmp
or
jne
jae
sub
adc
and
push
cli
int
shr
insl
ja
pushf
stos
cmp
push
dec
and
das
or
jbe
es
xchg
or
xor
xlat
xor
or
sub
cs
clc
add
or
and
loopne
lret
dec
inc
outsl
repnz
xor
xchg
sub
lret
dec
adc
xor
pop
add
push
lock
or
jmp
rolb
ds
adc
and
cmp
pop
lods
add
xchg
int
push
push
jns
add
out
dec
stos
sbb
mov
jns
and
in
xor
stc
cwtl
adc
or
jle
loopne
repz
fwait
cltd
jns
mov
jle
leave
cmp
or
lods
enter
sub
gs
xor
cmpsl
cld
lcall
in
mov
pusha
loopne
pop
push
pop
mov
cmp
pushf
lock
insb
or
mov
push
cmpsb
clc
sbb
mov
js
jecxz
decb
mov
fcmove
mov
mov
test
movsb
jo
shrb
dec
sahf
mov
xor
ret
pop
in
inc
adc
cmp
pop
popf
xor
xchg
xchg
cmp
xchg
repnz
imul
pushf
xor
or
addr16
fwait
xchg
sti
inc
imul
leave
cli
lcall
popf
ds
mov
sbb
mov
aaa
out
es
jae
jmp
push
mov
cmc
test
cmp
jo
jo
or
mov
xor
testl
add
sub
stos
sahf
mov
jo
cmp
lcall
jbe
mov
push
lret
dec
sub
mov
mov
fadd
rorb
clc
shrl
roll
and
and
imul
mov
push
adc
sbb
mov
jl
rolb
std
mov
sbb
lods
iret
rorl
mov
sahf
mov
pusha
and
lret
inc
sbb
mov
test
cwtl
stc
out
enter
push
sarb
xchg
jecxz
inc
rcrb
into
and
add
je
jbe
push
inc
fidivrs
sti
stos
jp
push
call
cwtl
ds
adc
mov
and
inc
sarl
adc
pop
pop
out
out
mov
add
addl
jecxz
cmp
icebp
xchg
arpl
and
push
cmp
add
stos
flds
pushf
addr16
gs
sbbl
xor
ja
je
sub
add
xchg
and
sahf
inc
push
mov
mov
leave
xchg
pop
jae
push
and
in
xor
pop
inc
ret
nop
mov
xor
xchg
sub
pop
mov
or
lock
mov
les
in
mov
or
xchg
jno
fldt
enter
adc
enter
jno
pop
iret
cwtl
das
add
sub
lret
outsb
or
popa
inc
es
ja
cmc
mov
jl
loopne
dec
inc
fistl
shlb
lea
bound
lret
cs
ror
ret
shll
imul
pop
xor
jp
repz
sub
or
push
mov
stos
xor
jmp
jns
cs
popf
pop
arpl
fsubr
sbb
lret
inc
addr16
ljmp
popl
mov
adcl
imul
mov
daa
call
into
pop
mov
sub
xchg
mov
pop
lea
mov
mov
aad
mov
sbb
leave
jge
and
rcl
iret
fdivs
out
mov
xorb
inc
inc
pop
jne
fsubs
in
adc
ljmp
xchg
pop
inc
popa
enter
dec
mov
lret
fcomip
cmc
cmpl
bound
cmpsl
addr16
leave
mov
aas
stc
xor
and
mov
dec
mov
stc
test
maskmovq
jge
aas
rcll
or
dec
add
cmpsl
sbb
add
les
aad
imul
jns
out
lock
push
test
ja
lret
test
pusha
mov
jl
sbb
inc
dec
pop
js
mov
jmp
ror
xlat
add
das
fsubrl
dec
or
outsl
repz
in
xor
cltd
or
mov
cmc
ss
daa
mov
add
fisubrs
in
aad
mov
insl
cs
rol
out
fldl
rorb
jnp
sub
bound
lods
or
and
mov
push
into
dec
mov
jno
inc
insb
std
push
dec
mov
push
notb
subb
test
pop
add
or
xchg
mov
insl
aaa
push
jnp
xchg
sub
pushf
fucomi
jmp
or
or
mov
inc
fistl
sub
sub
imul
addl
std
or
jo
popf
mov
push
xchg
mov
std
das
rclb
inc
pop
in
xor
and
imul
or
clc
cmp
mov
rcll
mov
les
movsb
outsl
and
and
pop
gs
cmc
jb
pop
mov
mov
ljmp
push
sbb
mov
in
add
jb
xchg
sbb
and
subl
jmp
mov
push
popl
arpl
sbbb
pop
xchg
icebp
sub
pop
enter
lcall
daa
mov
xchg
es
fs
push
leave
and
jmp
int
imul
mov
mov
shl
push
jmp
fisubs
and
add
fwait
jbe
xchg
lret
out
fsts
mov
vaeskeygenassist
pop
daa
js
fsubrl
push
jmp
inc
cmc
jo
pop
lret
or
jl
mov
cmpsb
mov
xlat
jecxz
and
lock
js
pop
lcall
sbb
call
leave
and
lret
enter
stos
inc
xor
xchg
outsb
out
imul
fsub
pop
icebp
push
cli
dec
in
outsl
scas
ret
imul
sub
dec
xor
mov
xlat
sbb
vcmpss
push
push
mov
data16
sbb
outsb
movsl
sbbb
int
xor
insl
sub
mov
pop
hlt
sahf
push
pop
xor
cmpsl
push
inc
jmp
mov
cmpsl
das
ja
fimuls
cmp
jle
inc
daa
and
ret
xchg
int
call
xlat
dec
xor
test
idivb
or
and
cmp
cmp
out
sarb
add
mov
movsl
jbe
jae
push
adc
pop
inc
test
and
movsl
xchg
or
cs
push
push
sub
sbb
pop
inc
xor
xlat
dec
xor
lods
sbb
cmc
jl
push
test
flds
int
hlt
jno
daa
popa
and
fs
arpl
cwtl
inc
dec
mov
jb
out
add
dec
or
dec
xchg
inc
out
test
jne
stos
sub
pop
lahf
aam
cmp
xor
cmc
xchg
or
test
mov
shrl
dec
outsb
mov
mov
idivb
ret
insl
insb
aam
imul
cmp
cmp
jns
xor
jns
test
sbb
pop
out
jns
push
mov
xchg
call
xchg
mov
pop
shlb
pop
nop
jmp
shl
andb
pusha
push
orb
add
pushf
jecxz
test
pop
fdivs
xor
jge
or
repz
lcall
in
inc
daa
in
repz
and
mov
mov
sarb
bound
xchg
inc
cld
and
mov
nop
in
test
pop
mov
and
mov
xchg
ja
clc
cwtl
adc
push
mov
push
test
jno
shrl
mov
cwtl
dec
cmp
xchg
sti
icebp
orl
cmp
lds
mov
cltd
or
xlat
pop
rorb
mov
addr16
add
sti
scas
sbb
lret
imul
cwtl
inc
pop
cltd
imul
and
push
sbb
push
hlt
mov
dec
mov
mov
dec
inc
movsl
rclb
xchg
das
cmp
rolb
or
inc
inc
sbb
ds
incl
out
jbe
or
ret
mov
inc
adc
mov
imul
fildl
lods
sbb
add
ret
testl
sub
mov
add
inc
out
popa
sbb
lret
xor
xchg
lcall
fiadds
mov
xor
stc
jl
inc
pop
xchg
mov
faddp
xor
pop
dec
jl
push
fdivs
ret
scas
or
outsb
movsl
mov
dec
dec
and
pop
inc
mov
insb
dec
mov
rolb
inc
mov
insb
cmpsl
mov
lods
out
dec
and
or
push
dec
je
push
repz
mov
jnp
adc
inc
and
js
cmp
xchg
add
or
cld
push
sbb
enter
or
xchg
rcr
sbb
xor
ljmp
call
mov
lret
test
jmp
adc
ljmp
mov
fstpt
fbstp
cmp
sub
lock
inc
lds
lcall
aam
pop
mov
sbb
test
imul
and
push
movsl
das
jle
clc
mov
daa
mov
rorl
jbe
and
xchg
movsl
lock
test
cmc
lds
push
jae
xchg
add
cmp
adc
int3
or
ror
jo
arpl
ljmp
push
pop
jmp
xchg
mov
sbb
imul
xor
out
stos
ds
adc
hlt
lods
mov
sbb
fs
and
mov
mov
orb
movsb
shr
repnz
inc
js
cmp
mov
scas
fimull
ficomps
mov
shr
jo
and
rorb
cwtl
nop
shll
mov
push
or
mov
gs
xor
inc
or
lock
adc
mov
push
or
stc
mov
add
in
sub
inc
les
or
and
sbb
repz
out
push
add
sub
dec
inc
movsl
lea
mov
pusha
adc
xor
mov
add
mov
dec
pop
inc
add
repnz
push
mov
fnstsw
movsl
icebp
imul
xchg
in
outsb
addb
inc
inc
and
push
lea
adc
popf
in
mov
xchg
add
adc
mov
jne
cwtl
pop
mov
jecxz
fwait
rcr
jno
push
mov
cltd
cmpsb
clc
fdivr
jge
xchg
jle
mov
sub
pop
imulb
jge
mov
les
mov
mov
jns
nop
lods
movsb
mov
xor
xchg
aaa
cmp
inc
shll
movsb
jae
es
sbb
cli
jecxz
push
rclb
xor
xchg
popf
out
test
inc
rol
ljmp
push
cmpsb
out
sahf
sbb
cli
xchg
std
int
xchg
sbb
sbb
sub
orb
in
fwait
xlat
sub
lds
out
pop
sbb
pop
mov
loopne
mov
push
je
fidivl
int3
jo
std
shrl
inc
fwait
cmp
push
gs
imul
xchg
test
xchg
push
pop
sbbl
inc
inc
pop
mov
mov
leave
into
loope
xchg
pop
not
dec
xchg
mov
adc
and
outsb
lret
push
xor
jl
push
movsl
cmp
push
daa
inc
mov
inc
jbe
push
xor
mov
adc
add
pop
and
mov
mov
insb
test
scas
sub
adc
cli
lods
sbb
cmp
mov
and
add
add
xchg
mov
push
and
clc
dec
inc
sbb
xlat
mov
mov
xor
lock
push
in
cmp
movsl
in
sbb
push
xabort
int3
or
in
dec
out
andl
popa
sub
cld
fwait
cld
cmp
imul
stos
inc
jmp
cmp
mov
sarl
nop
rol
push
mov
mov
jne
or
test
adc
neg
ss
push
ret
xchg
pop
push
sbb
push
inc
pop
bnd
out
xchg
cmp
bound
pop
mov
data16
pop
mov
cs
lock
cld
sbb
sub
add
inc
sub
adc
mov
faddl
dec
cmp
cmp
in
push
push
imul
out
mov
add
inc
add
push
pop
addb
mov
inc
jp
std
nop
mov
nop/reserved
dec
xor
jp
lea
enter
sahf
popf
movsb
outsl
das
add
sbb
bound
push
js
inc
fwait
clc
ret
movsb
aas
adc
jno
mov
sbb
aad
sub
addr16
xor
test
inc
mov
cltd
std
testb
cmpsl
dec
out
cli
push
out
outsl
push
js
pop
lret
xor
in
fisubl
jne
fs
test
test
xchg
jae
xor
mov
shll
pushf
test
xchg
pop
cmp
cmp
pop
mov
mov
push
out
insb
xor
and
lret
push
dec
lcall
xor
cmp
mov
xlat
fwait
xchg
or
scas
lods
pushf
fs
aam
cs
adc
outsb
cmp
inc
iret
jnp
aaa
aad
movsl
pop
cmp
shlb
cmp
les
cmpsb
mov
inc
inc
pushfw
mov
int
push
mov
adc
sub
add
fwait
xor
stc
sub
loopne,pt
stos
cmp
mov
sbb
enter
sahf
or
scas
leave
test
outsl
lock
lcall
jbe
mov
enter
mov
rcrb
mov
mov
push
push
cs
mov
test
or
cs
shl
sbb
dec
xchg
mov
ret
jp
jns
les
lods
xlat
mov
subb
add
loopne
fisttpl
stos
jno
lea
jge
and
faddl
fdiv
sub
cwtl
fwait
arpl
ja
je
bound
movsb
stos
mov
cmp
adc
adc
pop
push
stos
xchg
cmp
inc
call
or
adc
pusha
xor
push
push
xor
jle
cld
fcompl
pop
pop
negl
or
fcomp
adc
rcrl
cmp
sbb
leave
jmp
sub
addr16
xor
xor
add
insb
or
or
aaa
mov
lcall
xchg
outsb
dec
ds
mov
mov
rcll
negl
jp
add
shr
sbb
movsb
jecxz
mov
call
xchg
call
fsubrl
pop
inc
leave
into
sbb
bound
push
loop
pop
mov
mov
mov
or
sbb
mov
mov
add
nop
mov
sti
subl
or
inc
or
or
adc
sbb
test
rolb
sbb
inc
xor
or
xchg
pop
cmc
mov
scas
inc
push
mov
int
subb
pop
lahf
mov
cmp
lods
adc
test
ds
adc
inc
cs
mov
mov
push
int
xor
icebp
adc
jmp
xchg
insl
into
mov
dec
fmulp
scas
xchg
incl
iret
xchg
xor
cmp
movsb
adc
cmc
mov
aam
jbe
ss
ja
enter
subb
test
or
outsl
inc
movsl
jl
jg
imul
xlat
inc
jp
shlb
and
cli
pop
add
and
push
xor
adc
or
inc
cmpsl
sub
push
cmp
mov
shl
adc
push
push
sub
fisubrs
ret
rol
loop
sbb
sarl
push
aaa
or
pop
addr16
mov
or
fdivrs
or
incb
test
xor
mov
dec
pop
in
test
loope
xchg
cwtl
jns
aad
push
lods
daa
jb
add
xor
test
ljmp
mov
jnp
es
test
mov
and
sub
pushf
repnz
in
fwait
xor
addr16
push
pop
mov
repnz
jne
and
add
dec
mov
insl
sahf
test
cmp
adc
mov
pushf
imul
and
cwtl
mov
in
jne
pop
adc
lcall
dec
clc
jnp
call
add
bound
jns
sub
cmp
pusha
sub
sarl
pushf
and
ljmp
mov
sti
cs
sbb
sbbb
mov
cmp
insb
xchg
inc
jmp
lcall
push
ret
fnsave
pusha
movl
insb
lret
sti
aas
add
int3
jae
lods
pop
outsl
jle
andl
aas
pop
xchg
add
adc
push
inc
push
dec
inc
dec
lock
and
mov
xor
mov
orb
ficomps
cmp
cltd
bound
pop
shrb
int
add
pushf
adc
add
adcb
pop
outsb
cmp
xor
mov
cmp
push
out
push
pop
add
mov
bound
xor
push
ljmp
sbb
lret
cmp
pop
xchg
inc
mov
mov
ljmp
lahf
pop
pop
mov
adc
out
sbb
inc
push
sbb
test
insb
fmulp
fnstenv
or
movsl
xchg
cli
mov
out
mov
fistpll
enter
xor
in
stos
jne
adc
repz
data16
jge
in
dec
out
stc
imul
scas
daa
inc
pop
pop
adc
int3
jbe
mov
bound
fwait
inc
ret
pop
js
jbe
mov
mov
ja
fmuls
sub
movsl
inc
mov
inc
int3
or
mov
sbb
cwtl
dec
xor
outsb
icebp
std
outsl
fwait
es
insb
cmp
addr16
sahf
pop
xor
popa
out
push
sbb
mov
or
xor
ja
sub
xchg
sbb
add
mov
js
ret
mov
fwait
dec
inc
int
push
jle
out
into
cmpsb
jo
cmc
scas
fistpl
sub
cmpsb
or
sahf
daa
sub
inc
adc
sub
fwait
aam
mov
mov
in
popf
xor
jle
mov
inc
cmpsb
pop
dec
aam
test
add
addr16
or
xchg
mov
bound
scas
mov
fnstcw
jbe
and
es
ja
ss
out
pop
insl
cld
in
sbb
ret
inc
xchg
mov
and
sub
cmpsb
les
adc
xor
in
xchg
xor
enter
inc
or
pop
cmp
andb
mov
test
pop
mov
push
mov
add
sbb
rolb
scas
popa
pop
mov
int3
cmpsb
inc
push
xor
fistps
jle
mov
movsl
fldt
lds
adc
push
sub
sub
inc
ljmp
in
dec
lods
mov
jb
push
cmp
lock
insb
pushf
fdivrp
xchg
push
cmpl
cmp
repnz
pause
push
xor
out
inc
add
nop
in
out
adc
out
pop
das
or
inc
in
sub
sbb
int
mov
fnstenv
loop
sbb
add
mov
or
mov
dec
sub
dec
test
leave
mov
les
adc
cmc
dec
mulb
jb
xor
sub
sbb
push
out
mov
push
xchg
ds
inc
pop
sub
stos
mov
xor
dec
sahf
sub
cmp
cmp
rorb
cli
xor
sub
xor
filds
jp
roll
cs
aad
push
iret
sub
dec
push
jp
testb
ss
pop
xor
adcl
adc
xor
add
xor
outsb
push
jno
cmp
sahf
imul
and
mov
add
sbb
and
inc
leave
es
shlb
dec
xchg
or
aam
sahf
sti
shlb
addr16
push
imul
mov
movsl
sub
jne
loope
lds
shl
xchg
js
aaa
scas
addl
mov
ret
mov
adc
or
test
pop
stos
inc
daa
add
imul
lret
or
cmp
pop
cmpsl
mov
ljmp
dec
or
jl
imul
cli
hlt
fwait
jle
mov
fsub
out
jb
pop
test
outsb
mov
repnz
or
mov
xlat
jae
or
push
movsl
pushf
shl
push
add
cs
mov
rorl
jl
push
inc
rorl
adc
xorb
ljmp
cs
aas
pop
jle
xchg
lods
xor
add
test
jns
outsl
mov
xlat
insl
xchg
notl
data16
ja
or
cmp
pop
xor
inc
dec
loopne
mov
popl
mov
jb
test
mov
icebp
jno
push
cmpsb
jmp
mov
gs
jns
push
and
xchg
int
cmc
mov
cmp
insl
push
mov
sub
sub
cmpsl
mov
mov
mov
jl
mov
inc
push
push
insl
imul
sbb
inc
jp
imul
dec
notl
add
shr
dec
xchg
ja
mov
in
in
ret
pop
xchg
das
inc
cld
and
or
sbb
jge
push
mov
push
mov
out
sbb
xchg
jp
xchg
and
repnz
add
sub
push
jl
dec
push
icebp
mov
lret
fnstenv
fsubs
mov
arpl
mov
fmuls
inc
shlb
cmp
adc
mov
cmp
or
je
push
das
sbb
sub
pop
push
loopne
mov
inc
sub
addr16
leave
push
loop
mov
fsubrp
jge
pop
mov
insb
sbb
push
sbb
nop
cmp
mov
or
or
nop
daa
dec
ljmp
add
sbb
cmc
sbb
mov
lahf
insb
jl
pop
scas
enter
cmp
outsl
mov
lahf
int
cs
lcall
and
mov
cmp
xor
popf
dec
xchg
in
addl
fs
int3
sbb
lods
inc
mov
xchg
pushf
and
fmull
mov
hlt
loop
lods
pop
pop
pusha
add
mov
test
mov
adc
sub
mov
es
cmc
mov
push
shrb
insl
les
imul
pushf
dec
cmpsb
mov
jp
int
sub
push
and
xor
idivl
add
stos
jbe
mov
add
mov
and
sub
mov
dec
je
xlat
pop
or
pop
pcmpgtd
xor
xor
into
pop
stos
xlat
clc
or
lods
sub
pop
test
cmp
jnp
sub
insl
cld
mov
ret
mov
shrb
and
add
scas
mov
mov
push
ret
xchg
stos
mov
pusha
in
push
jg
or
sbb
rorl
cmp
xchg
fidivrl
fldt
cltd
shrb
lods
repz
or
push
daa
mov
bound
jmp
sbb
std
scas
sbb
push
cmp
popf
cs
pop
ret
insl
xlat
mov
rcrb
mov
loopne
sub
push
scas
flds
inc
loopne
sti
jb
lret
mov
ljmp
outsb
ja
adcl
pop
loop
cs
ds
mov
cmp
dec
pop
cmp
stos
mov
adc
cmpsl
jmp
in
jl
push
cli
or
jo
popa
adcb
test
mov
inc
jmp
mov
das
fbstp
inc
scas
jge
sti
test
shrl
lcall
sbb
mov
fldcw
sbb
daa
adc
arpl
xchg
add
push
dec
out
push
leave
xchg
add
add
aas
popf
sbb
arpl
xor
xchg
adc
mov
loopne
adcb
aas
pop
adc
xchg
test
jnp,pt
adc
cltd
push
inc
xchg
jge
xchg
pop
lea
iret
push
or
int
add
xchg
and
mov
xchg
mov
vshufps
add
ret
xchg
xchg
xchg
push
jno
or
stc
inc
repz
xchg
pop
inc
push
mov
shrb
int3
icebp
ja
mov
cwtl
cmp
push
stc
ja
icebp
clc
sbb
imul
or
imul
ljmp
call
popf
pop
cmp
inc
pop
mov
in
and
loope
aas
push
jne
jp
test
orb
leave
leave
push
push
push
mov
cmp
mov
add
pop
repnz
clc
loope
inc
int3
pop
outsl
fistpll
lret
push
repz
cli
adc
push
mov
push
push
cs
xor
lods
push
fisubrs
pop
or
push
pop
int3
test
aas
lods
cmpsb
shll
movsl
lds
int
rorl
pop
scas
adc
and
sub
cld
cmpsl
inc
mov
dec
bnd
mov
insb
jae
xchg
sub
loop
bound
sub
cmpsl
int3
dec
lret
das
andb
sub
fwait
mov
push
cmc
jae
adcb
jge
mov
outsb
cmp
popl
xlat
adc
or
outsl
fcomi
cmp
pop
andb
jecxz
out
adc
fnsave
xorl
sbb
into
scas
inc
ror
and
push
stos
jmp
cmpb
pop
test
fldl
inc
pop
aaa
ja
or
sbb
mov
pop
dec
outsb
loope
repnz
cmpl
mov
sbb
repnz
sbbl
out
and
lret
mov
outsl
mov
or
mov
lret
jne
fisttps
rol
mov
xor
jge
mov
xchg
adc
dec
xchg
arpl
xchg
sub
add
pop
scas
aaa
stos
push
repz
fsubs
mov
shl
sub
lea
lret
out
jmp
inc
pop
jne
addr16
lret
mov
test
push
push
pusha
mov
pop
sahf
outsl
ds
addr16
pop
xchg
sub
fs
push
test
call
or
or
fbld
inc
std
jne
xor
cli
nop
dec
mov
jmp
pop
sar
lcall
push
lcall
or
sti
data16
push
out
sbb
hlt
sub
test
daa
shlb
jl
jge
mov
rcrl
mov
mov
sti
stos
insb
pop
inc
or
adc
inc
mov
out
jo
and
fsubrp
xor
inc
jno
lcall
leave
clc
or
fdivs
xor
repz
stc
add
xor
mov
cwtl
and
pop
mov
xchg
sub
ret
cmc
sub
lcall
and
pop
stos
inc
cmpsl
ds
xchg
daa
mov
or
or
shl
ja
add
adcb
xor
push
fcoml
outsb
repnz
sbb
lea
lods
scas
int
fisubs
xchg
repz
cmp
pop
movsb
adc
jg
outsl
addr16
pop
lahf
fsubrl
mov
das
mov
inc
fs
xchg
pop
fiadds
pop
cmp
fldenv
fsts
sub
sbb
mov
cli
jmp
into
test
jno
shl
aas
xchg
add
in
push
jnp
sarb
mov
fwait
les
mov
fisubs
sub
pushl
std
cmpsl
notl
les
pusha
test
jb
sbb
aad
movsb
cs
fistpll
push
and
cmp
pop
std
hlt
mov
jp
iret
pop
popf
bound
hlt
pop
inc
mov
mov
fwait
clc
enter
and
adc
mov
shll
push
push
and
push
sbb
sbbl
jns
and
jb
imulb
pop
adc
dec
adc
mov
xor
int3
pop
sahf
test
sbb
cld
sbb
mov
dec
popf
adc
or
in
pushf
jnp
std
inc
adc
xor
jp
rol
inc
sbb
mov
in
scas
cltd
fidivrs
rcrb
cmpsl
xchg
add
cs
mov
daa
dec
and
add
imul
repnz
jno
jl
adc
pop
sbb
mov
mov
loopne
aam
xor
fisubl
iret
pop
fcoml
pop
cmp
call
push
xchg
xchg
dec
pop
les
rcrb
test
shrd
mov
mov
push
shl
aam
or
test
sub
sub
mov
ret
clc
mov
adc
sub
hlt
mov
inc
or
push
arpl
leave
pusha
mov
rol
xlat
jge
xchg
out
je
push
cmpsb
inc
lcall
pop
std
mov
scas
inc
repnz
xchg
dec
movsb
xchg
int
into
imul
rol
lahf
sbb
pop
out
rorb
mov
mov
fucomp
lock
bound
ficoml
out
movsb
out
ljmp
lock
das
std
lods
fs
mov
cld
sub
mov
adc
rolb
cltd
cmp
lret
jb
shll
dec
shl
mov
lcall
in
aaa
mov
lcall
sbb
fs
popf
inc
sbb
ret
jmp
ja
push
bound
lods
mov
popa
cltd
ss
inc
test
ljmp
pop
or
inc
out
mov
xchg
jmp
dec
outsl
loop
and
add
pop
js
lods
rcll
sbbb
push
popf
icebp
mov
push
scas
and
cltd
xsha1
cmpsb
lret
or
out
inc
dec
leave
mov
xor
loop
loop
pop
adc
fs
adc
pop
fwait
movsb
dec
mov
mov
das
inc
mov
push
sbbl
lret
insb
and
jns
dec
jno
popa
orl
adc
mov
shlb
in
mov
lahf
sbb
cmp
adc
mov
mov
aam
outsb
pop
mov
mov
movsb
cmp
xor
push
lret
push
leave
xchg
mov
imulb
cmp
inc
stc
inc
ret
xchg
inc
cmp
mov
xor
mov
repnz
xchg
gs
loop
je
pop
and
jl
movsl
shlb
sub
stos
mov
repz
adcb
mov
push
cltd
out
in
repz
and
jb
lahf
mov
xlat
mov
add
aad
adc
ss
dec
adc
jbe
add
push
iret
sub
fcomip
popf
xor
jnp
or
mov
cmpb
pop
fidivl
movsl
xlat
adc
cmp
cmp
xchg
popa
lds
push
xchg
adc
pop
push
outsb
leave
aad
es
mov
movsl
lods
clc
lcall
sub
pusha
xchg
sub
xor
scas
out
inc
call
test
shll
adc
pushf
loope
or
jle
and
mov
jmp
sahf
test
sub
mov
ret
arpl
mov
mov
lea
icebp
es
pop
pop
scas
js
mov
enter
ljmp
lock
fsubs
push
push
jmp
out
xchg
movsb
xor
decl
jbe
or
push
mov
inc
xor
mov
imul
daa
stos
daa
jle
dec
mov
in
out
push
xchg
out
aam
mov
jbe
mov
imul
movsl
xchg
cwtl
hlt
into
out
lahf
popa
pop
cltd
and
dec
aam
and
out
jns
arpl
popf
loope
stc
cmp
popl
call
add
sbb
leave
popa
clc
test
dec
jg
jg
jmp
mov
test
call
cltd
cmp
pop
icebp
stos
cmpsb
cmpsl
in
aaa
fs
sbb
cltd
and
es
jne
push
xor
pusha
mov
jnp
push
popf
movsl
inc
scas
xchg
jne
mov
pushf
lods
std
lret
push
push
fwait
inc
jae
or
pop
movsb
pop
stos
dec
fisttps
mov
jmp
mov
push
cmp
or
sub
mov
xchg
dec
dec
scas
dec
in
iret
rcl
mov
fxch
xor
pop
add
jle
popa
mov
mov
adc
inc
xor
cmp
pop
mov
xchg
lret
jmp
push
inc
and
xor
sbb
fadds
fistpl
mov
lock
and
cli
movlps
sub
hlt
rcrl
daa
fldcw
jmp
js
je
dec
cltd
jnp
inc
bound
js
and
leave
lock
jg
add
mov
inc
fiadds
jle
pushf
mov
loopne
mov
insb
jmp
dec
xor
cmp
cs
xor
jae
fimuls
mov
test
jl
adc
gs
adc
add
mov
mov
pop
jmp
pop
jmp
stos
mov
popf
imul
sti
mov
mov
xor
cmp
fldenv
mov
imul
add
jb
repnz
outsl
stos
imul
lods
rcl
or
repnz
and
mov
nop
cmpsb
inc
fsubs
decl
jge
pop
dec
test
arpl
mov
fistl
inc
adc
shrl
xor
sub
ja
pop
gs
jno
mov
into
cmp
jp
cmp
pushf
jg
dec
loopne
dec
cwtl
and
adc
push
outsl
daa
enter
cli
jne
mov
jge
sub
les
xor
adc
add
add
cmp
and
in
dec
pop
cmpsb
sbb
addr16
shlb
mov
in
pop
mov
and
fs
fstl
cmpsl
sbb
mov
test
ja
test
movsb
or
add
jns
jmp
jl
mov
jmp
leave
cli
push
and
fidivrl
mov
shlb
sti
nop
aas
jne
mov
cmpsb
dec
popf
mov
add
lahf
outsb
out
lahf
dec
std
dec
js
cmp
xlat
outsb
loope
inc
xlat
xor
rorb
cs
daa
xlat
andl
pop
out
addr16
icebp
jle
mov
nop
adc
jge
loope
push
jae
cli
cmp
xor
mov
push
ret
and
repnz
leave
scas
or
add
add
ret
mov
pop
xor
gs
mov
mov
jb
addl
xor
inc
xor
out
clc
fld1
jne
and
adc
scas
arpl
and
rclb
insb
and
repz
loopne
fiaddl
pop
paddw
cltd
push
shrl
dec
scas
push
pushf
cli
push
lret
xor
mov
lock
and
pop
mov
push
mov
xchg
jmp
mov
fmuls
movsb
int
pop
and
jno
and
loope
std
ljmp
dec
repz
popa
clc
jmp
pop
push
fisttpll
pusha
aam
xlat
pop
scas
jb
xchg
jae
cmpsb
jns
dec
mov
fimull
adc
scas
dec
adc
addb
mov
mov
adc
add
mov
jle
push
lods
lret
shl
or
mov
push
or
fdivrs
fucom
mov
pushf
mov
cld
outsl
xor
stos
sbb
bound
je
arpl
or
xchg
mov
lock
or
test
icebp
sbb
incb
and
add
adc
or
cmc
hlt
mov
insb
bound
int
jb
cltd
in
int
stos
mov
mov
add
add
orl
xchg
inc
pushf
push
test
nopl
jle
testb
enter
aam
cld
scas
in
loope
lods
mov
negb
jnp
sbb
divl
sbb
ljmp
pop
push
out
xor
push
jmp
adc
cmpsl
rcl
pop
fcmovbe
lods
cwtl
insb
sti
mov
jge
mov
cmc
nop
jp
add
pop
xor
lcall
loopne
dec
push
fnstenv
scas
std
push
adc
jge
jo
clc
or
ljmp
push
xchg
call
or
xlat
adc
je
insl
sub
inc
fcmove
test
jnp
and
cltd
insb
adc
adc
imul
imul
and
shlb
pop
scas
dec
les
mov
int3
mov
sub
cmp
icebp
mov
stos
dec
jmp
fsubrs
xorb
pop
shlb
sub
cmp
lock
fisubs
aaa
push
push
incl
movl
and
lret
pop
cmc
inc
mov
jnp
push
pop
aam
add
jne
dec
in
mov
insb
adc
movsl
popf
sahf
lock
push
fstl
cmp
cmp
cmp
adc
out
cs
mov
lods
lahf
push
or
lock
fisubl
pop
mov
mov
popa
or
mov
inc
adc
lahf
movsb
or
dec
xchg
sub
sbb
xchg
scas
adc
fsubrl
cld
stos
shll
mov
inc
insb
dec
inc
pop
icebp
mov
adc
lods
lock
test
loopne
sahf
adc
lcall
jne
push
mov
daa
mov
inc
sbb
popf
fiadds
stos
inc
fadd
test
in
ss
je
aad
popf
rclb
mov
sbb
mov
push
mov
xor
mov
fidivs
test
xor
ret
dec
fldcw
cld
cmp
test
mov
bound
xor
lcall
cmp
xor
xor
addr16
mov
dec
mov
mov
push
iret
scas
push
clc
push
pop
add
sbb
insl
repz
popf
inc
cltd
in
push
cli
int
gs
ljmp
pop
inc
les
inc
jge
sbb
faddl
or
adc
dec
aaa
push
add
popl
inc
mov
lret
inc
push
push
push
xor
je
push
lahf
lcall
jo
mov
lea
mov
fimull
xchg
pop
jno
pop
and
dec
pop
xchg
sub
aas
mov
lea
dec
dec
movsl
xchg
jl
or
cmp
adc
push
outsl
xor
and
les
mov
jno
lds
pop
cmp
sbbl
ficoms
ja
lods
xor
stos
cld
sub
jmp
jl
pop
add
aam
and
adc
and
adc
je
fs
sbb
inc
popa
lods
xchg
jae
pushf
sub
dec
out
jmp
add
push
sub
ljmp
arpl
ror
repz
mov
int3
lret
clc
fldcw
pop
adc
rolb
add
ret
je
jle
mov
mov
arpl
pop
xchg
mov
sbbb
adc
ds
and
rcrb
mov
xor
and
adc
imul
in
mov
mov
ja
je
in
xchg
dec
add
mov
test
and
in
aaa
shl
pop
and
mov
jge
adc
ljmp
push
xor
hlt
push
fiaddl
inc
loope
pop
loope
subl
icebp
lods
ljmp
fcompl
bound
sbb
inc
popa
fldl
popf
call
fcoml
stc
sbb
xor
lahf
inc
pop
mov
sub
lods
add
mov
lret
sbb
cli
shll
push
repz
and
cmp
loopne
popf
es
hlt
data16
xchg
xchg
mov
test
cwtl
repz
lret
pop
cmpb
in
push
pop
push
into
jb
hlt
and
les
bound
out
insb
sub
sub
mov
xchg
mov
fdivr
mov
lcall
je
imul
inc
test
cmp
jle
push
outsl
pop
dec
sbb
jno
mov
cli
scas
pop
dec
dec
push
mov
sbb
inc
fidivl
in
popf
daa
loopne
sub
scas
xchg
jg
fwait
into
pop
and
and
adc
repnz
push
pop
pop
cmpsb
jb
and
pop
mov
nop
loopne
xor
sarb
mov
jg
lahf
and
ret
outsl
adc
push
cmp
cld
out
rolb
or
fcmovnb
imul
adc
add
mov
mov
aas
inc
xchg
cmc
lock
mov
and
test
push
test
popf
or
jle
les
rolb
negb
push
jnp
mov
push
movl
shrl
push
add
adc
in
and
push
cmp
cmp
orb
mov
lock
pop
mov
shl
js
inc
cmpsb
adc
outsl
xor
xor
adc
and
mov
cmp
andb
xor
ja
xchg
mov
dec
test
cmp
mov
jne
xor
adc
fisubrl
pop
test
inc
sbb
fstpl
xchg
sbb
test
imul
jmp
push
aas
mov
inc
inc
and
int
mov
jb
jmp
xlat
push
pop
cltd
nop
jecxz
xchg
mov
mov
scas
cltd
sub
sbb
imul
pop
mov
xchg
jno
cmpsl
movsl
sbb
repz
ret
and
adc
mov
push
std
popl
cmp
popa
push
xchg
adc
sbb
jb
sbbb
and
rcrb
or
push
xchg
mov
lods
rol
cmp
fcmovu
cmc
ret
sbb
repnz
pushl
iret
arpl
pop
sub
int
mov
pop
stc
jbe
lods
addb
cmpsl
ror
jle
inc
push
pop
mov
mov
pop
mov
and
repz
aas
push
xchg
ja
mov
lahf
nop
jnp
pop
rorl
xor
cmp
sub
sbb
push
dec
mov
rcl
stos
mov
mov
jb
sets
out
test
out
outsb
sub
fisubrs
lods
jle
jp
sbb
mov
aam
jo
pop
loop
xchg
icebp
jns
pusha
popa
adc
xchg
add
mov
das
jp
insb
subl
loop
mov
enter
test
sub
mov
mov
mov
mov
mov
shll
xchg
js
mov
out
les
fcmovu
mov
ds
or
mov
mov
sarl
add
pop
negb
mov
sti
jecxz
mov
cmp
cmp
call
loope
loope
in
enter
lods
mov
frstor
adc
sbb
pusha
pop
mov
mov
sarl
mov
mov
aad
push
mov
lcall
and
fidivl
fbld
xchg
rcrl
in
push
dec
pushf
cmp
testl
xor
out
fs
xchg
mov
push
movsl
xor
push
inc
rcr
aam
sarb
pop
popa
cmpsl
es
data16
inc
shl
adc
in
fs
das
movb
ja
bound
mov
xor
lods
jmp
in
lcall
stos
dec
into
in
push
mov
bound
mov
push
adc
stos
jp
xchg
lods
int3
xor
lret
fs
jo
lret
mov
nop
jge
lods
scas
mov
subl
lea
stc
aaa
loope
inc
pushf
inc
fs
lods
jmp
fiadds
stos
pop
inc
sbb
mov
scas
popa
jno,pn
and
fimull
xor
mov
pushf
inc
addr16
imul
aad
cmc
stc
insl
mov
xchg
repnz
imul
adc
addr16
adc
sbbb
jno
cmp
mov
mov
xor
into
mov
pop
and
mov
lea
mov
stc
mov
sub
jl
out
and
or
ja
decb
cli
xchg
sti
push
jo
aam
cmp
pop
mov
dec
and
pushf
mov
out
sub
in
mov
adc
movsb
mov
lods
mov
ljmp
jno
cmpsb
pop
mov
xchg
mov
shlb
rclb
mov
and
rclb
movsb
movsl
in
jp
jnp
les
jne
cmp
orl
std
cli
cwtl
xor
gs
call
cmp
jge
fmull
fwait
sar
nop
aad
and
in
clc
insb
cmp
test
lahf
int
sbb
jmp
pop
mov
ljmp
sbb
popa
test
jne
imul
fmull
fcoml
jne
sbb
dec
pop
fstps
ret
jl
mov
mov
lea
ret
int3
int3
jg
fwait
mov
xor
cmpsl
shll
es
leave
pusha
cmp
ljmp
dec
fscale
jo
sub
sbb
stos
jno
pop
adc
jbe
test
sbb
sbb
push
nop
mov
dec
push
xchg
mov
push
jno
or
inc
fwait
lds
pop
xor
pop
push
or
pop
nop
divl
mov
rorb
fdivrl
orb
cmp
pusha
mov
mov
mov
lcall
sbb
cmpsl
fwait
test
mov
pop
repz
sar
cmpsb
testl
cwtl
outsl
sub
sarl
imul
hlt
dec
fwait
stos
rcrl
lea
cmp
inc
aaa
imul
and
mov
pop
mov
mov
pop
int3
jg
sbb
test
cmp
push
cmp
arpl
xchg
xor
popf
addr16
inc
ja
push
lret
sti
dec
imul
lret
add
mov
popf
xor
mov
sub
fsubs
or
push
loop
cmp
mov
inc
and
pop
adc
push
jb
test
mov
pop
dec
push
bound
cmpl
leave
loop
ret
aaa
push
push
gs
xor
dec
pop
inc
inc
enter
push
lahf
xchg
xor
pextrw
pop
inc
sub
xchg
scas
xor
xor
orl
push
in
fmull
push
cmpsb
insl
mov
inc
movsl
xchg
lahf
pusha
sahf
cmp
in
dec
mov
dec
adc
out
repnz
out
and
std
aam
cs
in
push
xlat
xor
sbb
shl
jne
lcall
mov
in
inc
cmpsb
enterw
aad
jnp
pop
vsubpd
out
pushf
sbb
jmp
outsl
and
mov
fxch
xor
pop
mov
scas
lods
inc
push
jge
roll
mov
test
pop
sar
and
in
fbstp
push
or
mov
add
mov
loopne
fistl
push
stos
mov
aas
scas
mov
int
cld
cmp
pop
stos
jnp
shrb
outsl
cmp
rorb
xor
dec
fsubrs
xchg
mov
dec
cmp
dec
push
jbe
fadd
ret
icebp
fadd
pop
or
mov
jl
mov
xor
pop
aas
aam
inc
fwait
cmpsl
je
std
or
push
pop
jp
sbb
xchg
pop
cld
lcall
jne
mov
mov
cmpsb
ds
jl
in
push
pop
loopne
nop
fwait
and
aad
pusha
orl
mov
loopne
js
push
popa
gs
or
jbe
mov
jae
out
add
es
add
mov
mov
orl
or
push
nop
pop
mov
decl
inc
aam
sbb
popl
mov
mov
mov
into
lea
data16
lock
sbbl
insb
jnp
push
mov
call
xor
mov
es
lods
and
sbb
pop
movsl
mov
std
adc
in
push
mov
loopne
push
add
repz
std
movsb
push
idivb
mov
mov
sbb
sub
cmc
dec
outsb
sarb
mov
or
insl
pop
push
xor
jnp
lock
adc
dec
loopne
xchg
adc
clc
jnp
mov
lcall
sahf
xor
std
mov
and
pop
fldenv
xor
push
and
cli
les
divb
jg
fisubrs
mov
insb
imulb
push
jns
cmpsl
xchg
pop
xchg
add
push
lret
adc
add
scas
or
scas
iret
pop
fs
ret
repz
jl
adc
call
dec
sub
mov
icebp
out
dec
mov
leave
in
aas
pop
lods
add
sub
cli
aaa
sub
push
dec
rol
fwait
adcb
lret
jp
inc
mov
ficomps
or
repnz
pop
mov
inc
jp
jae
pop
scas
js
cmpsb
std
pop
shlb
mov
xchg
push
shl
mov
scas
jg
loope
sbb
cwtl
repz
lods
sbb
fisubl
cmp
stos
clc
insl
sbb
fimull
jg
jp
andb
dec
bound
ljmp
mov
add
ds
pop
sbb
in
inc
lods
jge
inc
fucomip
les
call
pop
and
sbb
jge
add
dec
inc
ret
jnp
bswap
jmp
mov
mov
mov
jmp
and
rorl
mov
loop
repnz
jnp
jg
sub
popf
cmp
push
sbb
cmpl
cmpsl
mov
xchg
sub
das
mov
cmc
pop
popf
and
dec
push
jo
popf
adc
mov
ret
lcall
popa
fmul
fs
inc
bound
adc
stc
je
mov
out
and
ret
cld
xlat
pop
xor
jmp
ja
repnz
sbb
pop
jne
pop
insl
in
fisubs
cmp
fistpll
dec
jp
xor
push
cmpsb
xchg
dec
fdivs
xchg
sub
or
mov
jecxz
mov
push
rcll
sbb
push
jge
fnsave
out
push
inc
sbb
jge
xchg
pop
adc
mov
jb
add
pop
mov
test
xlat
insl
aaa
cmpsl
mov
pop
jg
lret
xlat
jnp
xchg
mov
sarb
scas
call
test
xor
ret
loopne
add
jp
inc
pop
xchg
fcmovnu
mov
xor
push
icebp
push
test
into
mov
sbb
push
xor
sub
and
sahf
nop
cmp
out
imul
xor
loopne
push
sbb
out
sbb
push
es
cmpsl
push
cli
subb
test
pop
adc
adc
mov
xor
cmp
rcrl
xor
fst
jo
sub
dec
nop
dec
cmp
shrl
into
repnz
push
add
imul
lock
lret
jmp
mov
and
push
push
and
jp
movsb
cmp
js
subb
pop
outsb
test
sub
scas
aaa
sbb
fcmovnb
js
std
stos
dec
inc
mov
outsl
jns
sub
shrb
fiaddl
sbb
dec
dec
mov
sbb
pop
int
mov
push
sbb
lds
jl
cwtl
icebp
js
lods
mov
jbe
push
popf
data16
fucom
push
mov
mov
cmpsb
push
xchg
out
xchg
mov
ret
cmpsl
insl
adc
lds
dec
lret
mov
inc
sub
scas
mov
ds
sub
movsl
cmp
fadds
inc
add
ja
ss
mov
sbb
xor
xor
fwait
gs
mov
aaa
pop
xchg
xor
dec
inc
jb
rcrl
cmc
mov
add
cmp
popa
push
rorb
cmpsl
cwtl
in
stos
mov
shlb
fldcw
mov
push
inc
lods
xchg
mov
cmc
cmp
call
out
int
mov
mov
and
imul
cmpsb
jge
les
test
xor
cltd
jbe
shlb
sbb
adc
or
pop
xchg
add
test
push
mov
cmp
into
mov
mov
or
xchg
loop
xchg
out
add
cmp
data16
sbb
mov
lds
jmp
push
and
and
mov
js
pop
and
sub
jg
cltd
mov
imul
subl
les
lds
cwtl
or
nop
fcompl
das
loopne
popa
lds
xor
pushf
pop
jnp
jg
xor
shll
sarb
push
pushf
in
sbb
lds
cmp
cmp
sbb
pop
mov
inc
pop
pop
aaa
or
jno
jge
push
xchg
addb
jnp
sbb
mov
mov
push
out
fucomip
mov
je
mov
or
inc
movsb
leave
shrb
dec
int
dec
cmc
mov
mov
mov
dec
mov
mov
adc
dec
xlat
pop
je
xchg
dec
xchg
sub
dec
loope
pushw
mov
cli
loope
push
and
mov
jns
or
add
mov
push
outsl
pop
fidivs
lret
movsl
inc
fistps
ljmp
jo
jo
push
mov
dec
loope
xchg
out
repnz
mov
cmpsl
inc
fistl
in
js
fcmovbe
push
or
adc
inc
sub
movsl
and
ret
pop
inc
dec
and
push
jmp
jge
sub
or
push
jae
mov
mov
jecxz
pop
rcr
pop
pusha
push
push
dec
mov
cmp
push
cld
leave
lret
out
fdivs
push
jns
fsubrs
jns
rcrl
push
jae
icebp
or
sub
int3
pop
stc
cmp
je
andl
jmp
ret
sbbl
inc
outsb
call
add
xor
mov
pop
mov
xchg
and
pop
sahf
in
sbb
mov
repz
mov
and
cwtl
mov
in
cmpsl
cmp
pop
adcb
jnp
xor
and
enter
int
ja
lret
pop
jmp
out
dec
iret
pop
into
sbb
nop
adc
loopne
push
push
push
into
xor
movsl
jae
out
push
jg
xchg
icebp
lds
xchg
repz
mov
xchg
loope
sbbb
jno
andb
pop
dec
mov
cltd
cmp
lds
dec
fstpt
push
inc
iret
inc
or
mov
enter
icebp
xor
xor
out
xchg
cmc
push
add
sub
stos
pop
mov
shrb
cld
cmpsb
adc
sbbl
sub
xor
cld
xchg
pop
or
ljmp
fcomps
add
ffree
xchg
mov
sbb
sbb
sub
cli
pop
gs
xchg
mov
movsl
sub
inc
aad
scas
xchg
mov
aam
inc
mov
sbb
sti
mov
in
xchg
mov
lods
push
daa
jnp
loopne
clc
mov
push
and
pop
sub
inc
ficoms
aaa
aas
add
lods
fdivrl
xor
mov
dec
mov
clc
movsb
mov
xor
into
in
add
lds
mov
inc
mov
jno
mov
xchg
mov
int3
icebp
push
mov
adc
xchg
dec
sbb
addr16
mov
inc
popf
xchg
dec
and
repnz
popf
pop
mov
xchg
ljmp
mov
loop
inc
in
ds
mov
xchg
lods
cmp
fildl
sbb
sub
mov
int
jge
pop
mov
dec
xchg
xorb
dec
xchg
out
subl
cli
push
dec
jo
cmp
pusha
cli
inc
and
lret
mov
sub
loopne
lds
test
push
push
imul
lds
iret
xor
and
in
aas
pop
ja
nop
loopne
mov
call
inc
pop
xchg
imul
fldt
les
jmp
das
mov
stos
fadds
fistpll
mov
push
andl
sahf
mov
lahf
cmp
xchg
jo
jge
cmp
or
add
jno
xor
xchg
inc
jg
stc
pop
imul
clc
push
mov
jle
int
sub
fs
popf
mov
jbe
cld
insb
fistl
jle
cmp
lahf
push
stos
mov
push
xor
mov
ja
mov
mov
shl
andb
imulb
idivb
jb
jmp
xchg
mov
jmp
lea
repnz
mov
movsb
and
mov
sbbb
rsm
gs
adc
mov
test
pmaxub
gs
mov
mov
shrl
xor
mov
xlat
xor
arpl
es
inc
push
push
cmp
rorl
je
shll
loop
mov
ja
nop
and
sub
jb
adc
jne,pt
inc
jno
jns
xchg
loope
mov
mov
jae
mov
inc
fnstenv
insl
jp
inc
inc
fistpl
decb
imul
loop
ljmp
lods
fwait
add
or
adc
test
pop
out
cmc
retw
adc
xchg
bound
dec
push
jae
hlt
lods
das
lods
aaa
cmc
dec
mov
pop
adc
push
cwtl
add
xchg
jne
dec
insl
cmpb
xchg
sub
or
loop
and
add
push
xor
scas
jmp
sbb
mov
aas
mov
adcl
push
xchg
jae
lods
xchg
mov
mov
pusha
outsb
lahf
cmp
lds
sub
inc
stos
push
js
loopne
dec
popf
jb
ja
adcl
nop
test
jmp
push
sub
jne
outsb
test
cmp
leave
add
insb
sahf
stos
test
scas
jne
fildll
test
push
lret
andb
sar
or
imul
das
outsl
and
inc
adc
mov
inc
imul
jo
lods
inc
inc
mov
fwait
clc
add
ss
cmc
xchg
cs
cmp
pop
or
and
jo
mov
fiadds
out
add
xchg
pcmpgtb
mov
movsb
arpl
cmp
out
push
push
pop
inc
pop
xchg
popf
scas
jno
mov
jmp
cltd
mov
in
rdpmc
lret
sbb
stos
ret
jne
adc
push
dec
adc
pop
lret
das
pop
jmp
dec
mov
sbbb
xchg
push
testb
negb
pop
icebp
insb
mov
sub
jae
sbb
xor
repz
pop
in
mov
imul
stos
cmp
stc
in
outsb
inc
sbb
mov
in
pop
push
nop
std
xchg
ret
adcb
sbb
ljmp
mov
fsts
pop
xchg
cmp
and
dec
out
ds
mov
pop
subl
rcl
scas
fsubr
insb
clc
inc
ret
and
mov
lret
sub
shll
sub
or
into
sti
inc
lret
lcall
pop
insl
imul
cmp
jo
xchg
push
ror
xchg
xor
push
pop
mov
jns
xchg
jnp
pop
lcall
cwtl
test
fcoms
mov
imul
nop
into
push
pop
dec
lea
hlt
mov
or
loopne
cmp
out
jmp
xchg
out
lds
xchg
jb
pop
call
xor
cmpsb
fwait
popaw
rcrl
xchg
leave
xor
inc
lret
sbb
in
inc
mov
add
or
and
adcl
in
adc
push
or
cmpsl
jecxz
add
adc
dec
xchg
jmp
dec
xchg
sub
push
add
push
aam
loop
fildll
dec
cld
pop
ja
ljmp
push
in
sub
sarb
mov
or
and
stos
jbe
shll
insl
test
mov
xchg
fwait
shrb
add
pop
mov
test
push
push
fidivs
pop
push
xor
int
loope
inc
mov
xlat
pop
bound
mov
mov
sub
leave
or
ds
push
mov
test
pop
cmp
xlat
loop
leave
loopne
cld
hlt
and
jg
das
mov
movsb
int
in
lcall
inc
lret
inc
sbb
movsb
cmc
aas
sub
dec
and
cmp
jnp
push
inc
sub
cli
xchg
mov
mov
or
fidivrl
xchg
jg
ljmp
push
mov
jno
hlt
mov
cmp
dec
shrl
mov
movntq
mov
addr16
bound
decl
aaa
je
adc
aam
rcrb
sub
pop
mov
mov
cmp
rorl
mov
mov
std
mov
add
rcll
je
mov
bound
clc
orl
inc
mov
pushf
das
loopne
clc
arpl
push
sub
pop
aaa
clc
ds
inc
testb
cmp
cmp
xor
sub
sbb
rcrl
shlb
imul
adc
mov
aam
adc
pop
jge
cmp
mov
shlb
sarb
add
xchg
jmp
mov
xor
cltd
cld
xchg
lret
in
call
gs
out
les
mov
dec
shlb
jge
pop
cld
in
sub
scas
xor
pop
xchg
sahf
mov
sbb
add
aaa
into
inc
es
push
and
xchg
mulb
nop
daa
cli
sub
scas
and
add
ja
scas
shrb
psllq
cltd
sub
fiadds
dec
aam
arpl
aam
jecxz
shll
sbb
mov
push
adc
call
scas
xorb
cmp
cmp
add
xor
inc
lret
xchg
push
sbb
xor
sbb
cli
icebp
aas
data16
in
cli
adc
cmp
imul
icebp
imul
pop
cmpsb
mov
movsl
decb
sub
popf
jmp
or
jns
and
pop
pushf
jg
push
pop
movsb
cmp
xchg
loop
mov
cmp
xchg
js
icebp
jg
cld
aad
ljmp
sub
es
inc
ljmp
das
enter
cmp
repz
loop
inc
mov
loopne
fnstsw
mov
fs
and
mov
add
scas
push
out
inc
ds
ja
imul
cwtl
adcl
jb
add
movsb
or
push
insl
clc
or
or
and
arpl
sub
sbb
in
jle
lds
inc
call
enter
pop
sub
add
mov
lcall
icebp
and
mov
jmp
xlat
icebp
mov
fistpll
xor
mov
nop
lods
mov
out
aad
push
pop
adc
mov
jne
inc
in
sub
pop
xchg
ret
fldenv
ja
xor
repz
mov
int
jp
mov
das
fcomps
pop
and
out
xor
popf
cmc
mov
inc
adc
or
aas
faddp
xchg
ljmp
mov
cmp
push
xchg
scas
mov
mov
ret
nop
out
dec
lea
lcall
ds
xor
stos
mov
jne
adc
mov
inc
add
jmp
daa
adc
or
mov
dec
scas
sub
into
pop
push
and
insl
ret
sub
mov
push
sub
call
ljmp
jp
sub
or
ja
insb
mov
insl
mov
orl
jge
cmpb
mov
sbb
xor
push
popa
jnp
outsl
adc
and
push
mov
xchg
iret
push
cld
hlt
inc
cltd
stos
adc
ret
jbe
xlat
mov
outsb
repz
lds
push
cmc
pop
fildl
mov
in
sub
or
pusha
xlat
and
out
and
jns
pop
xor
add
mov
movsb
sub
fwait
pop
orl
pop
test
adc
test
push
pop
ss
cmc
int
mov
or
je
cmova
testl
andb
pushf
adc
xchg
sbb
lods
js
mov
mov
test
jge
xchg
adc
cmp
cmc
imul
ret
int
adc
cmp
xchg
lahf
mov
dec
push
iret
lods
divb
out
or
xchg
xchg
xchg
lret
clc
stos
cld
fsts
fldl
adc
mov
ds
jge
decb
mov
les
int
dec
mov
cwtl
leave
jecxz
aad
repnz
cmpsb
stos
movsl
sub
push
mov
fildl
stc
les
sbb
add
cmp
mov
outsb
dec
in
ficoms
mov
pop
add
cwtl
clc
jl
sub
lods
ficoms
add
loop
addr16
mov
mov
jg
scas
mov
ret
aaa
pop
lock
shl
dec
push
or
scas
mov
or
ret
enter
push
fstl
cmp
cmp
push
or
sub
inc
inc
int
xchg
xor
pop
pop
rorl
fdivl
mov
mov
mov
sub
loop
stc
adc
mov
jo
pop
xchg
jo
jne
daa
mov
mov
jmp
jo
sub
test
pop
ds
notb
xchg
pop
adc
flds
movsb
in
xchg
xor
std
cmp
imul
mov
mov
pop
mov
test
jle
sub
movsl
mov
add
or
xor
mov
repnz
and
nop
daa
bound
divb
xor
jmp
or
push
add
das
mov
push
mov
cld
push
sti
xchg
cmp
xchg
lret
add
out
cwtl
inc
sti
arpl
xchg
pcmpgtd
ljmp
in
push
dec
mov
movsl
outsb
int
out
insl
scas
inc
adc
test
cli
pushf
jmp
repz
popf
or
and
lahf
lock
mov
cltd
mov
mov
pop
jo
pop
insb
xor
cmpsl
out
mov
ret
dec
add
inc
ficomps
mov
pop
mov
add
loope
aaa
in
notl
inc
jmp
out
clc
rcrl
repz
enter
shl
jno
adc
xor
inc
add
nop
jns
xchg
mov
jle
dec
test
out
test
sub
rorb
orl
out
cli
mov
adc
es
pop
loopne
pushl
mov
xchg
push
in
dec
mov
mov
fbld
sub
mov
shl
ror
test
pop
mov
sarb
fldcw
dec
inc
fwait
mov
fildl
or
sbb
mov
ljmp
adc
insb
loop
mov
xchg
arpl
sbb
dec
mov
push
cmp
icebp
bnd
jge
aad
pusha
sbb
ret
dec
insl
inc
lea
sub
cmp
xor
dec
push
in
jo
repnz
out
cmp
and
sarb
jo
jmp
or
pop
repnz
or
addr16
loope
dec
mov
data16
mov
lock
mov
mov
cmp
xor
cmp
stc
or
adc
outsb
and
fdivrl
cmc
fwait
test
pop
rcrl
leave
or
fdivp
adc
xchg
push
or
xor
dec
popf
pusha
repnz
xchg
divb
int3
push
mov
pop
dec
add
mov
popa
add
sbb
arpl
lods
int
js
idivl
sti
adc
xor
jg
loop
addl
and
out
or
shl
add
test
and
bound
test
mov
dec
cmpsl
aas
mov
sub
cmp
out
fcoml
pop
jbe
test
mov
call
and
mov
mov
ret
aaa
or
push
jo
sub
out
mov
push
dec
dec
test
mov
mov
decl
jns
xor
dec
mov
outsb
leave
jnp
ret
in
outsb
cmc
push
test
add
repz
sbb
push
repz
dec
rcll
iret
outsb
std
sub
sarl
negl
xchg
ds
outsl
mov
cmpsl
push
pop
stos
fs
subl
es
movsl
daa
sub
popl
mov
lock
rcll
cli
in
sub
pop
dec
mov
mov
mov
jl
push
std
stos
mov
les
mov
bound
xchg
jle
mov
rcll
mov
ret
push
out
in
push
lret
push
sbb
mov
mov
pushf
sub
xor
push
jbe
adc
jle
test
xchg
in
in
insb
pop
mov
out
inc
test
enter
add
fisttpl
test
push
lock
pop
popf
jmp
xchg
sbb
pop
popf
jmp
in
jne
cmc
adc
aas
jp
test
jle
jbe
sbb
fistpll
xchg
data16
daa
inc
cmp
cmp
lret
rorb
popa
and
push
loope
mov
adc
jg
cmp
xchg
stos
sub
repnz
nop
popf
fs
or
test
scas
sbb
jmp
dec
or
mov
js
hlt
aad
dec
ror
and
movsl
cmp
pop
sub
dec
jo
xchg
aaa
rorb
fcoml
cltd
cmpsl
out
inc
inc
push
mov
repnz
inc
mov
shll
push
sub
push
pusha
cli
and
outsl
mov
pop
or
and
addb
cli
pushf
or
dec
dec
dec
xor
xor
push
leave
pusha
mov
mov
test
or
push
popf
mov
pop
int
and
adc
pop
jmp
jle
jmp
mov
cmp
daa
or
xchg
scas
xor
sbb
roll
adc
filds
push
nop
push
and
in
mov
cmp
jae
cmp
mov
mov
cmpl
adc
clc
mov
ja
out
subb
jecxz
ret
outsl
xchg
out
int3
aaa
sbbl
and
out
jmp
sub
push
and
mov
mov
jl
jae
stos
mov
stos
push
ljmp
adc
or
push
push
push
xor
je
mov
cmp
xlat
xchg
add
or
xor
sbb
outsb
cld
xor
jb
pop
sbb
test
adc
xor
shlb
sbb
imul
adc
xchg
push
cmp
inc
aas
xchg
jmp
movsl
jno
repnz
dec
fs
add
pop
jle
call
nop
inc
imul
inc
sbb
cmpsb
mov
int3
ljmp
jne
lds
ljmp
aam
sti
inc
jle
lahf
sub
jl
cmp
movsl
insb
or
test
mov
repnz
lods
mov
sbb
cs
push
pop
push
outsb
adc
into
out
inc
lahf
out
pop
lods
xchg
outsl
dec
mov
fcmovb
sub
push
mov
lret
sbb
int3
sub
movsb
ss
fwait
in
loope
test
pop
out
sahf
stos
mov
faddl
fimull
sbb
pushl
cmc
dec
jnp
cld
pop
ljmp
cwtl
clc
es
mov
rclb
mov
dec
negb
xchg
sub
sub
lock
outsl
scas
sbbl
das
sub
mov
or
xor
mov
ficomps
pop
ror
add
addr16
inc
sub
pop
mov
or
cmp
adc
xchg
stos
addb
aam
adc
sbb
fstpt
les
jne
push
mov
test
mov
lock
insl
sub
das
and
enter
jecxz
jl
movsl
nop
shrb
cmc
pop
xor
sub
xchg
sbb
dec
xchg
adc
adc
or
movsb
nop
call
mov
sti
mov
xor
push
xor
xor
movsb
out
dec
and
lds
dec
push
jl
aam
loop
jae
mov
mov
sub
xchg
shufps
ss
mov
jno
sbb
cmp
push
cli
push
mov
mov
fcmovu
testb
adc
jo
adc
jne
jp
arpl
ret
outsb
outsl
xchg
test
adc
outsb
sbb
jecxz
or
jb
and
sub
into
lea
pop
dec
cmpsl
mov
mov
add
hlt
xor
mov
insl
inc
dec
pop
xlat
shl
sbb
out
or
and
lock
jg
das
aaa
push
mov
xor
mov
pop
lcall
out
xchg
pusha
push
mov
sti
jno
fsubrs
js
popa
clc
and
mov
inc
jg
xchg
adc
pusha
insl
pop
cpuid
data16
ficoml
test
lret
inc
sub
xor
mov
push
adc
push
add
pop
daa
shl
push
cmp
pop
insb
push
jb
pop
pushf
xchg
scas
pop
fisttps
and
fbld
and
mov
xchg
xorl
aam
mov
sub
dec
add
lock
cmc
nop
sub
dec
dec
inc
loope
jne
jne
clc
jmp
int3
iret
repz
jl
push
and
jns
inc
pop
cld
or
loopne
inc
stos
shr
ljmp
out
or
and
xchg
out
outsl
aam
out
mov
fsub
cpuid
xor
aam
dec
push
sub
je
pop
sarl
dec
rcr
jle
cmp
ficomps
dec
nop
and
sti
fcoms
pop
rcrb
xchg
mov
pop
sub
insl
fstps
adc
xorb
movups
push
push
push
push
or
dec
xchg
pop
rclb
loope
cmp
sbb
xchg
adc
ret
and
stc
xlat
sti
hlt
addr16
cmpl
test
sahf
dec
cmpsb
cli
inc
and
popa
loopne
adcl
fdivrl
sbb
cwtl
mov
lret
pushf
mov
stos
push
iret
or
jns
xor
cmpsl
imul
movsb
pop
hlt
pushl
xor
in
or
ret
jno
mov
fdivrl
add
mov
inc
push
lret
je
or
cltd
cmpl
mov
ret
sahf
adc
or
enter
push
cwtl
and
push
sbb
push
and
ret
stc
adc
inc
call
or
flds
inc
jle
loope
imul
mov
dec
mov
call
sub
lahf
stos
cmp
xor
cmp
fcmovnbe
sbb
mov
imul
mov
push
call
mov
push
das
and
lret
jmp
adc
inc
fcoml
addr16
ds
jp
push
imul
adc
enter
sbb
mov
dec
mov
test
fisttpl
ds
adc
sbb
pop
ljmp
rorl
mov
cmpb
ds
fildll
or
cmp
fists
dec
and
xor
in
cltd
inc
mov
xchg
xor
jp
mov
lcall
fidivrs
out
jbe
lds
xchg
scas
jge
dec
ds
in
imul
sbb
int3
push
aam
pop
add
dec
pop
xchg
mov
mov
fisubl
sub
sbb
jl
mov
cmpsb
repnz
jne
inc
cld
nopl
lds
insb
xor
fs
dec
insb
mov
add
movsl
imul
adc
lcall
lret
addr16
cltd
fsubrs
fcmovne
cmpsl
fwait
sti
mov
lods
pop
imul
mov
xor
mov
add
xchg
jge
pop
add
inc
sti
push
xchg
insl
rcrb
or
or
cmc
fmuls
rclb
cltd
xor
in
mov
mov
push
imul
inc
sub
int3
arpl
cmp
and
psubsb
test
iret
push
test
bound
std
add
std
enter
fidivl
fldt
lcall
jmp
push
test
je
sub
rcll
push
inc
push
push
std
clc
lock
push
repnz
jmp
inc
inc
fnstenv
leave
push
sub
jecxz
arpl
js,pn
add
pop
cwtl
mov
xor
xor
or
inc
dec
sti
push
sub
enter
pop
fdecstp
add
cmp
and
sbb
in
cwtl
adc
imul
pop
daa
hlt
insb
xchg
test
outsl
and
mov
pusha
fnsave
fsubs
sub
xor
leave
popf
adc
popa
xchg
mov
lods
inc
jae
xchg
daa
jnp
mov
dec
ret
pusha
cmp
pop
stos
cmp
mov
lods
inc
es
push
pop
sub
arpl
xchg
cmp
add
pop
and
imul
cltd
iret
shlb
mov
sub
add
rol
data16
aas
and
push
sbb
out
cmp
xor
mov
inc
sahf
cwtl
pop
mov
es
mov
aas
imul
into
outsb
out
sub
xchg
or
call
lock
or
addb
jnp
mov
hlt
js
sub
mov
mov
orl
dec
ret
cmp
dec
idivl
xchg
cmpsb
outsb
and
dec
and
fstp
mov
out
xor
aas
add
cmpl
loop
std
pop
add
lcall
stc
je
or
test
rcll
mov
test
iret
test
and
fsubl
idivl
gs
xchg
mov
xchg
movsl
cmp
dec
insl
sub
mov
rorb
push
cwtl
and
ja
lret
test
adc
lahf
iret
orl
mov
push
pop
imul
pusha
outsl
sub
pop
mov
jl
clc
mov
sub
xchg
rolb
in
sub
push
pop
pop
and
mov
cmp
lcall
in
cmp
jg
xchg
sub
pop
push
popf
lea
and
loope
mov
popa
rclb
fistpll
push
push
xchg
jmp
cmpsl
ret
mov
inc
fdivrs
xlat
pop
insl
or
dec
xchg
test
shrl
lret
frstor
or
psadbw
popa
cmpsl
and
xchg
pop
inc
lds
leave
popa
dec
adc
decl
stos
xor
jo
sarb
add
nop
mov
dec
pop
fiadds
sub
call
adc
stos
les
ss
daa
push
add
iret
sub
sub
fbstp
cmpsl
out
xchg
sbb
push
fcmove
rol
arpl
push
dec
cmpsl
rolb
push
call
or
cli
xchg
pop
mov
jns
jge
xlat
jle
push
fdivrs
jo
mov
test
jns
adc
test
out
cmpsb
ret
ja
jne
sbbl
sub
jmp
or
cmp
sub
mov
decl
daa
ss
pop
jle
icebp
lods
mov
divb
shll
outsl
pop
or
cmp
cmp
and
jb
dec
inc
out
mul
outsl
pop
sbb
mov
stc
fnstenv
scas
or
mov
pop
jmp
or
cmp
jle
jle
loopne
push
fwait
and
push
data16
adc
mov
inc
inc
lret
xor
mov
daa
xor
dec
fidivl
cmc
lcall
push
dec
jne
mov
test
and
pop
scas
xchg
mov
sahf
outsl
sub
sbb
not
xchg
xlat
cmp
ss
dec
data16
push
xchg
sub
rclb
out
lea
fucom
sub
lods
add
xor
xchg
sbb
pop
and
ds
push
cld
lds
bswap
pop
inc
das
push
sub
test
mov
pop
add
popa
or
cmp
inc
dec
lock
das
lds
leave
les
mov
mov
mov
mov
xlat
pop
sahf
mov
loopne
cmpsb
xchg
addr16
negb
pop
cld
or
and
xor
movsb
inc
push
lea
ljmp
jno
mov
cmpsl
cltd
enter
xchg
leave
mov
adc
inc
nop
ss
lcall
outsl
jge
jne
test
push
inc
movsl
test
xchg
dec
rcrl
rorb
scas
data16
outsb
das
jo
sbb
jl
testl
repnz
repnz
xor
in
mov
fstl
push
repz
mov
lret
bound
or
mov
jnp
loope
ret
scas
jb
or
fisubs
mov
lods
mov
jle
scas
cmp
dec
sub
pusha
stos
sub
push
push
lods
xchg
bound
cltd
test
ljmp
mov
in
and
mov
mov
mov
dec
xlat
jmp
lcall
and
shll
ret
daa
xchg
sub
xchg
or
jl
inc
xor
std
cltd
or
add
cmp
push
popf
ds
push
movsl
test
jmp
out
add
fiadds
jns
mov
dec
push
imul
bound
xchg
ss
rcrb
imul
pop
in
test
fisttpl
xchg
mov
push
mov
out
or
scas
pop
cmp
shll
adc
pop
jne
aaa
mov
je
fistpll
pop
fstps
fucomp
cltd
or
pusha
and
fwait
jge
shr
or
lods
mov
rcl
pop
enter
in
mov
lret
cmp
je
jno
and
push
outsl
xor
mov
fists
int3
fiadds
in
into
popf
hlt
jl
mov
cli
cmp
fldcw
mov
icebp
mov
inc
dec
retw
jnp
les
push
mov
fcmove
inc
pop
call
mov
sahf
or
imul
xchg
icebp
push
outsb
add
clc
lods
mov
filds
cmp
mov
add
jnp
pop
sahf
dec
fwait
add
movsl
xor
xchg
in
jmp
mov
mov
hlt
je
mov
pop
lret
data16
push
loopne
addr16
push
lret
push
sbb
mov
pop
mov
cs
jmp
xchg
jnp
xor
xchg
arpl
dec
and
mov
pusha
leave
add
jne
data16
dec
out
pushf
je
inc
arpl
je
adc
insl
pop
clc
addl
punpckhwd
mov
lods
cmp
in
in
int3
cmp
jle
es
mov
add
icebp
lahf
rcr
jecxz
fsubl
pop
fstps
cmc
xor
rcl
mov
outsl
inc
sbb
xchg
push
imul
xchg
bswap
jo
test
or
sub
aam
push
pop
xor
mov
call
jne
bound
fildll
in
cltd
mov
jae
xor
ret
push
lods
das
outsb
das
or
fwait
xor
mov
and
cmpsl
sbb
cltd
xor
int
and
cwtl
aaa
loop
sub
xchg
jecxz
js
clc
loope
jne
xchg
orl
int3
sbb
aaa
into
or
nop
mov
rcrb
and
shlb
rclb
mov
ret
addr16
addr16
in
ficoms
sub
mov
mov
pop
in
xchg
fs
lcall
jb
in
xchg
test
sub
gs
xchg
ss
jno
cmp
sbb
sbb
add
sbb
jnp
pop
mov
xchg
das
mov
jns
inc
lods
xor
test
shl
or
jnp
jmp
dec
rcrl
testl
rcrl
pop
mov
or
hlt
rcl
inc
fimull
cld
jnp
or
mov
pop
repnz
ret
outsl
or
xlat
sub
imul
sub
add
add
andb
js
arpl
nop
or
int3
push
repnz
int3
mov
imulb
push
xchg
pushf
cmpsl
add
sub
and
xchg
jmp
sbb
sbb
jae
cmp
adc
pop
nop
cmp
leave
je
pop
push
pop
adc
leave
xor
mov
mov
adc
and
lahf
pop
and
add
repnz
sub
lcall
mov
ret
hlt
add
testb
aad
xchg
xchg
push
loope
jp
inc
add
xchg
or
mov
cmc
outsl
je
popa
or
out
fs
cmpsl
out
push
cmp
imull
and
push
stos
iret
fs
jno
in
jecxz
push
jae
mov
test
clc
les
adc
gs
pop
mov
sbb
jo
jecxz
popf
mov
jle
xchg
sbb
mov
outsb
pop
mov
out
pop
mov
divl
jmp
andl
movl
je
or
loope
xchg
js
xlat
sti
sub
mov
push
push
cmp
jecxz
in
cmp
jns
and
mov
cld
dec
or
jl
adc
add
outsl
adc
sbb
mov
cmp
pusha
fs
mov
or
stos
xchg
dec
into
or
inc
mov
in
fwait
adc
ret
shl
pop
inc
loopne
orb
out
cmp
or
lock
dec
inc
xchg
sbb
fs
sar
inc
hlt
push
je
fxch
and
push
leave
test
out
repz
arpl
dec
lahf
rclb
jb
into
lods
ficoms
sti
jo
ss
push
jae
push
or
cmp
pop
add
inc
mov
mov
cmpsl
jp
mov
test
sahf
push
jns
inc
test
inc
fmul
leave
pusha
jnp
inc
in
js
jno
dec
scas
test
imul
nop
adc
gs
or
fistpll
cmp
imul
out
push
inc
lret
shr
mov
mov
adc
sbb
pusha
inc
out
popa
inc
sarb
xor
rorb
dec
jge
rcll
push
je
cli
jl
or
cmpsl
mov
imul
test
nop
pop
mov
sbb
pop
sti
jbe
sub
js
icebp
dec
push
test
outsb
and
mov
dec
xor
clc
jo
shl
xchg
cmp
jp
test
cmp
insl
adcl
xor
pop
inc
or
sub
pusha
addr16
add
jg
xchg
adc
jmp
mov
mov
in
out
inc
repnz
jmp
lds
rorl
es
or
dec
subb
jg
repnz
test
repnz
add
sbb
and
or
jge
pop
sub
sub
lea
or
stos
leave
movsb
sahf
pop
lds
cmpsb
or
mov
scas
mov
mov
lds
cltd
push
mov
xor
into
xor
or
rcr
rorl
or
lahf
or
lds
imul
pop
cmc
lcall
mov
xor
mov
imul
lock
sub
or
pop
arpl
insb
sub
into
sar
mov
ss
shrl
mov
xlat
movsb
in
or
shll
xchg
out
js
hlt
sub
mov
imul
xchg
pop
scas
mov
pop
gs
push
fisubrl
inc
shrl
outsb
sahf
out
jecxz
xor
out
pop
inc
inc
mov
pop
inc
insl
out
push
pop
shr
aam
inc
iret
jmp
in
mov
mov
js
pusha
fst
leave
xor
cltd
cmp
mov
push
sub
add
adc
inc
push
pop
incl
fsubrp
int
mov
jmp
cmp
inc
idivl
jbe
sub
jl
dec
and
popf
sbb
clc
aas
add
sub
loop
adcl
stos
push
arpl
xchg
jb
ret
iret
sbb
push
movsl
loop
xchg
jmp
mov
xchg
and
scas
fimull
dec
mov
enter
cmp
mov
mov
cmp
cmp
dec
scas
dec
add
sub
jne
mov
pusha
subb
inc
rorl
mov
sub
sbb
or
pop
outsl
cmpsb
jp
test
scas
adc
push
call
into
lahf
mov
dec
idiv
fwait
inc
out
dec
inc
fldpi
add
jnp
dec
fdivrl
in
jmp
ja
push
sub
push
xor
incb
ljmp
test
inc
inc
push
fsubl
leave
fiaddl
arpl
lods
add
arpl
cmc
popa
mov
dec
aaa
push
sub
inc
or
stc
rcl
mov
xchg
cli
xchg
in
int
adc
push
add
mov
and
mov
push
aas
mov
sub
push
popa
add
push
sub
movsl
cmp
je
addr16
mov
xor
flds
mov
clc
sub
sub
mov
dec
jae
mov
pop
imul
insl
in
dec
dec
mov
dec
popa
inc
mov
int3
mov
fstp
pop
sub
ret
xchg
test
cmp
cwtl
add
mov
sub
stos
pop
sub
cmp
rorb
mov
push
aaa
or
mov
inc
xor
mov
loop
add
pop
les
jne
cmc
mov
lret
and
xchg
pushf
mov
fsubl
add
sbb
cmp
sbb
loop
pushf
xlat
loope
aaa
sahf
test
gs
lcall
repnz
aam
fistpl
add
jg
xchg
imulb
dec
andl
sub
mov
adc
xchg
push
xor
jns
jp
js
fmull
scas
mov
popa
lock
xchg
scas
pop
shrl
cmp
adc
shll
lock
xchg
pushf
notb
pop
cmpl
mov
mov
sbb
add
xor
mov
adc
orps
jnp
movsb
pop
mov
das
lcall
imul
sbb
mov
mov
into
cmovae
scas
into
arpl
js
out
ljmp
aam
inc
push
or
shrl
fwait
dec
cmp
lock
ror
fcomi
lods
mov
out
push
mov
jecxz
sbb
aam
addr16
dec
xchg
add
push
ficompl
mov
pushw
sub
pop
mov
popa
xor
adcb
insl
ret
iret
outsl
daa
bound
rep
inc
xor
ja
sub
inc
xchg
adc
int3
loopne
inc
mov
push
push
jbe
xor
or
stc
scas
pop
das
lods
xchg
sub
mov
mov
xor
sub
push
add
adc
insb
ss
dec
dec
and
inc
in
jns
and
test
mov
leave
sub
or
xchg
xor
inc
and
imul
jb
xchg
mov
push
aad
and
dec
jae
iret
rcl
add
xchg
inc
jne
sub
mov
aad
inc
pop
dec
das
mov
push
and
xchg
lods
pop
adc
xor
das
xchg
add
jg
fptan
nop
test
xor
sti
jnp
loopne
fsubr
and
les
dec
fists
mov
ds
call
mov
cld
imul
add
xchg
hlt
and
push
arpl
sub
in
add
fs
ljmp
inc
fnstenv
add
mov
test
pusha
mov
add
sbb
cmp
mov
and
mov
cmc
mov
mov
inc
shlb
dec
shrb
orb
cmp
add
push
dec
add
hlt
mov
jmp
sub
into
mov
mov
sub
ret
sub
mov
xor
pop
cmp
mov
and
test
mov
xlat
jl
cmp
dec
xchg
sub
cld
lahf
out
mov
push
ret
fnstcw
or
mov
dec
stos
jae
pop
in
in
push
jg
fistps
inc
aam
stc
nop
arpl
rcrb
xor
xor
ja
in
popa
mov
les
and
fdivrp
pop
xor
pop
sbb
cmp
fnstsw
rolb
cvtps2pd
mov
dec
lds
push
xor
jne
cwtl
daa
repnz
fstpt
pusha
mull
jge
ffreep
ret
jle
cmc
out
and
inc
cld
mov
pop
hlt
sti
roll
ret
mov
mov
scas
repnz
cmp
cmp
pop
adc
cmp
insl
outsb
and
ret
pop
xchg
call
dec
jmp
test
rorl
lock
cli
adc
or
rcrl
xchg
sub
push
jle
push
in
mov
in
js
mov
popf
add
ret
cmp
adc
in
mov
outsl
push
out
ret
or
cmp
or
jnp
sub
inc
cmp
insb
popa
fwait
test
sbb
and
lret
cli
pop
das
dec
push
sub
inc
imul
sub
fildl
inc
inc
mov
xchg
adc
pop
mov
or
pop
mov
mov
js
mov
pop
ljmp
cs
xlat
mov
inc
xchg
mov
mov
or
cmpsb
push
cmc
andb
pop
sbb
int
push
idivb
mov
lahf
out
test
xchg
push
cmp
push
addl
pop
add
mov
in
xor
mov
jae,pt
lcall
lods
shrb
decl
sub
lods
nop
fisttpll
mov
sub
fucomi
dec
enter
fsubrs
mov
repz
notb
roll
into
xchg
fcmovu
jne
ret
cwtl
jnp
lcall
mov
repz
mov
cmp
sbb
mov
lcall
call
mov
xchg
decb
lcall
mov
sbb
and
aaa
pop
dec
push
xchg
adc
xchg
inc
xlat
pop
repnz
outsb
dec
clc
insb
xchg
outsl
cmc
sbb
jg
add
cld
stos
repz
fidivs
sahf
fnstcw
in
imul
outsb
addr16
lret
xor
rclb
das
cmp
xor
add
or
mov
push
jle
or
insb
int3
mov
cmp
lock
sbb
dec
roll
jg
ret
stos
xor
push
js
jnp
dec
lods
dec
jecxz
xor
push
pop
sti
aad
stc
jnp
mov
pusha
push
xlat
jo
int3
movsl
push
mov
mov
call
loopne
fsts
jnp
mov
int3
jmp
imul
je
in
jl
addr16
push
dec
jne
jecxz
sub
and
into
and
adc
lea
popa
cmp
sar
inc
mov
shll
jle
dec
pushf
and
out
xchg
add
or
dec
push
andb
test
icebp
jp
xor
cmp
lock
push
xchg
div
cltd
imul
add
push
lods
fildl
lret
cld
cltd
imul
scas
jmp
dec
and
stos
mov
xor
xor
or
pusha
and
repnz
jl
cltd
out
or
test
test
movsl
sbb
sbb
xchg
inc
inc
hlt
pop
clc
xchg
or
adc
repz
pop
dec
icebp
mov
add
cmp
insb
add
mov
jae
adc
rcrl
call
scas
mov
rcll
fbld
bnd
sub
push
dec
sub
jae
inc
in
dec
push
iret
cmpsl
sub
mov
add
mov
hlt
cmp
stos
notl
xor
jecxz
iret
lahf
push
mov
fiadds
cmpsl
imul
add
addr16
mov
push
fdiv
fstpl
xchg
pop
jp
mov
cwtl
in
add
jbe
inc
arpl
jl
jl
mov
imull
cmp
adc
mov
xorb
movsl
rcll
add
mov
fwait
test
mov
adc
iret
rol
lret
dec
xor
cmp
pop
test
data16
adc
loop
cltd
test
or
test
fwait
pop
rorb
and
adc
addr16
bndstx
and
sub
pop
xor
outsl
arpl
cmp
mov
lcall
add
faddl
in
daa
imul
test
mov
sub
mov
push
sbb
jmp
fsubl
push
popa
pop
outsl
inc
xchg
mov
sbb
mov
repnz
push
or
aaa
dec
scas
test
or
cmpsl
imul
and
xlat
add
sbb
mov
jb
sti
mov
dec
sub
ja
les
inc
iret
jne
jae
mov
sub
mov
imul
push
outsl
add
push
jno
jmp
sub
cmp
stos
xor
fldcw
dec
pop
add
mov
mov
cmc
out
inc
push
inc
sub
push
jo
mov
lock
and
arpl
jnp
out
inc
ljmp
or
push
inc
sub
pop
dec
and
out
mov
push
or
push
push
adc
or
jmp
sbb
stos
pop
jno
xchg
stc
inc
xlat
loop
orb
mov
incl
push
lods
mov
sarb
xchg
mov
clc
loop
sub
jo
jle
jns
mov
inc
mov
je
or
add
jns
mov
push
imul
push
add
jl
push
shll
shr
xchg
xchg
jo
and
adc
stos
mov
call
lock
jns
push
pop
push
sub
repnz
ds
cmpsb
divl
in
dec
xchg
jp
test
inc
bound
cmpsb
pop
movsl
scas
adc
hlt
push
sbb
ret
sub
inc
fmuls
xlat
jo
pop
mov
repnz
mov
pop
mov
mov
xchg
xor
add
jae
xchg
mov
jno
lcall
fisubrl
int
shrl
mov
pusha
and
repz
add
mov
jl
pop
scas
mov
notl
inc
fs
add
pop
mov
add
iret
xor
jmp
andb
sbb
pop
cmp
and
dec
cmp
ss
fisubrs
sbb
leave
mov
mov
imul
jmp
inc
data16
rcr
lods
mov
aaa
into
mov
push
push
addr16
das
ret
pop
cwtl
sbb
lret
loope
add
pop
jb
cmp
push
pop
fiadds
lret
mov
and
inc
aas
outsl
inc
aad
mov
out
add
imul
jp
jno
xchg
jecxz
cmc
mov
inc
xchg
sbb
mov
je
pop
sbb
add
xchg
push
sbb
add
dec
mov
xchg
dec
xor
jecxz
add
add
cmp
shrb
jge
jecxz
loop
ljmp
sahf
orb
xor
adc
mov
pop
into
ljmp
adc
xor
dec
mov
movl
daa
mov
inc
push
inc
test
adc
xchg
testl
dec
sub
pop
xchg
sar
cmc
cmpl
inc
cmpsl
xchg
aam
repz
push
sbb
xlat
outsb
insb
in
rclb
adc
fnstcw
jg
popa
cmp
mov
out
xchg
or
movsb
stc
in
in
sub
pop
nop
sbbl
adc
cmp
lcall
mov
sbb
loope
jne
lret
les
or
fs
and
imul
movsb
push
sarb
inc
loope
and
lock
or
push
mov
jge
xor
sbb
dec
pop
or
ret
sti
mov
je
mov
sti
and
cmp
fdiv
pop
mov
jnp
movsl
test
mov
aad
xor
lods
dec
pushf
stc
aam
rcrl
sti
lret
dec
stos
in
shlb
int
lcall
mov
mov
xor
sahf
popa
clc
mov
arpl
pop
pop
jg
pop
icebp
mov
sbb
push
movsl
fidivs
jnp
out
sub
imulb
dec
test
dec
js
cmp
mov
and
xor
shrb
cmp
dec
sarl
xchg
adc
bound
sahf
sub
jb
sbb
push
aam
scas
and
and
dec
in
dec
cmp
dec
add
pop
pushf
nop
jp
shlb
push
imul
aaa
aam
and
mov
pop
jns
push
sub
mov
xchg
dec
rorl
sub
out
stos
test
and
insl
shlb
imul
pop
repz
lret
or
aam
fisubl
mov
adc
cmp
mov
sbb
pop
test
or
mov
dec
pop
pop
xor
dec
cmp
in
lea
jecxz
dec
xor
mov
out
movsl
popa
cmp
call
xor
out
shrb
pop
pop
jo
add
aas
in
dec
xchg
dec
add
lods
adc
cmc
bound
leave
jno
cmp
mov
sub
mov
pushl
lock
scas
dec
ffreep
cltd
adc
out
movsl
mov
imul
xor
xor
pop
cmp
jno
icebp
jmp
pop
mov
pop
xor
sahf
or
and
pop
or
pop
data16
xor
pcmpeqb
mov
jae
xchg
cmpl
sub
test
mov
call
cmp
neg
add
mov
mov
out
mov
out
ret
cmp
push
icebp
dec
movsb
inc
jp
fisubs
jnp
dec
adcl
xor
int
dec
push
xor
lods
sub
idivl
pop
mov
xchg
xchg
add
inc
xchg
flds
cmp
push
test
push
mov
test
rorl
adc
inc
mov
and
ja
das
ret
mov
das
mov
jle
jne
push
add
pop
dec
scas
add
inc
adc
imul
mov
std
xor
fldl
ficompl
mov
test
pop
inc
and
xchg
pushf
ss
mov
jbe
mov
add
sub
pop
jp
mov
lea
dec
iret
scas
leave
sub
or
jge
out
cmp
faddl
loop
mov
lea
je
push
insl
popa
sub
xlat
xchg
pushf
scas
out
dec
std
adc
ljmp
fdivl
push
mov
repz
xchg
int3
sbbb
imul
nop
popf
test
mov
xchg
cmp
or
jg
out
test
mov
movsb
dec
cmp
inc
sbb
jg
in
aaa
pop
dec
cmpb
fnstenv
repz
out
cmp
int
cmp
lret
cld
outsl
inc
push
ret
test
push
mov
pop
and
andl
sbb
cmp
mov
hlt
mov
je
lods
imul
nop
jmp
mov
enter
cmc
push
ds
cltd
out
xchg
sti
in
add
ss
lods
inc
push
jmp
gs
mov
sbb
into
mov
cwtl
incl
inc
fcmove
fsincos
inc
test
mov
outsl
mov
dec
testb
mov
popa
in
cmpl
enter
and
shl
mov
scas
fsubl
xor
es
inc
push
sbb
imul
insb
icebp
mov
imul
push
push
mov
cmp
push
outsb
aad
mov
ds
cmp
loopne
mov
insb
push
adc
mov
cmp
adc
lock
inc
pop
adc
jge
or
and
sbb
mov
push
scas
mov
fsubr
arpl
ss
push
notb
add
sub
xlat
mov
cltd
pusha
push
stc
pop
mov
js
cs
adc
jo
add
daa
repnz
aad
xorl
ret
adc
daa
push
jb
icebp
cmp
mov
pusha
sub
pop
inc
ss
dec
pop
mov
push
into
test
fsubrs
out
mov
push
mull
adc
or
pop
dec
lea
jle
aad
pop
xor
lods
call
mov
movl
cmpsl
dec
inc
push
popf
mov
mov
jnp
jl
mov
ffreep
jnp
hlt
sti
mov
shrl
stos
imul
mov
sahf
xor
adc
out
rorb
or
mov
sbb
jb
jb
mov
push
in
test
enter
mov
push
jo
test
inc
nop
push
jns
pop
push
pop
adc
mov
daa
hlt
scas
arpl
inc
pop
popa
inc
inc
leave
sti
and
rcrl
inc
xchg
rclb
loope
xchg
mov
int
leave
daa
mov
and
mov
cli
push
data16
dec
or
pop
addr16
mov
mov
les
stos
jb
xor
mov
lret
cs
pusha
pop
adc
mov
push
ret
clc
imul
in
andb
or
sub
mov
dec
repz
pop
cs
hlt
mov
ss
inc
dec
out
test
ficomps
mov
xchg
call
ficoms
jns
ja
push
xor
sbb
push
adc
and
sub
inc
inc
jp
ljmp
lret
cld
fsubl
dec
lock
ret
lcall
mov
xor
sub
pop
rcll
mov
dec
mov
test
daa
lcall
and
adc
js
xor
outsb
out
shl
dec
mov
shrl
add
adc
mov
xchg
add
mov
sbb
aam
sub
cmp
test
adc
pop
jo
pop
pop
imul
mov
jmp
push
or
rcr
lea
push
lds
mov
xchg
mov
imul
push
clc
pop
and
sub
mov
jnp
jnp
sbb
roll
outsl
jae
mov
leave
rol
mov
loopne
gs
fs
cli
push
insl
shr
adcb
pop
add
push
pop
dec
lods
dec
jecxz
sti
xchg
outsb
sbb
sahf
iret
sahf
imul
aam
xchg
sub
ret
ret
mov
cltd
fcomp
daa
test
ret
jge
push
inc
dec
push
fwait
and
push
test
js
sub
pop
out
push
call
sub
mov
divb
pop
movsb
sar
or
loopne
mov
cs
mov
inc
sti
sub
insl
adc
xor
cmpsb
pop
mov
aam
or
mov
das
mov
fsubs
jp
fmuls
xor
sarb
push
xor
mov
jl
in
call
sub
sbb
inc
out
cmp
adc
xchg
sub
pop
inc
fimull
or
jge
fidivl
mov
or
cli
push
mov
mov
jae
lahf
and
xchg
xchg
mov
add
loop
cmpsl
mov
repnz
xchg
pop
daa
movsb
or
add
dec
in
test
es
jmp
pop
jns
mov
dec
out
lea
xchg
sub
or
hlt
cmp
dec
aam
xor
pop
fnstcw
sub
xor
std
scas
push
push
xor
xchg
mov
mov
insb
sub
mov
mov
inc
jo
sti
mov
ss
shrl
es
aas
lret
xor
mov
sarl
pop
pop
adc
cmp
divl
daa
cmp
pop
jbe
rorb
add
lahf
pushf
mov
pop
mov
arpl
mov
leave
pop
in
add
sub
push
add
lret
jmp
int3
xor
je
bound
xor
lea
fs
lcall
aas
and
arpl
out
add
mov
mov
rcrb
daa
mov
xor
push
add
test
aaa
stos
out
sub
cli
shl
dec
and
mov
or
jmp
aam
xchg
xchg
mov
dec
mov
sbb
sub
dec
inc
push
dec
mov
fxch
iret
enter
pusha
ret
inc
mov
sub
outsb
clc
aaa
icebp
push
stos
int3
sbb
push
cwtl
call
ret
fisubrs
rcrl
cmpl
shll
pop
cmpsl
test
in
jg
fs
fisttpl
sahf
jbe
mov
push
lcall
sub
clc
cmpsl
cs
and
fdivrl
outsb
cmp
xchg
lcall
movsb
popf
adc
adc
pop
jg
jg
das
ficompl
mov
dec
rorl
mov
sbb
pop
mov
addl
lahf
sar
cmp
lock
repnz
add
pop
leave
loope
pop
enter
mov
push
repz
pop
aam
loopne
test
lahf
add
cld
test
mov
movb
cs
int
imul
and
or
push
inc
test
incb
aaa
enter
pop
jge
fs
adc
nop
sbb
jmp
mov
ds
loopne
loop
jno
inc
ljmp
aad
sahf
pop
dec
test
push
lds
inc
push
inc
fildl
sbb
loop
xchg
or
fwait
mov
cmp
mov
push
mov
sti
ljmp
movsl
icebp
mov
icebp
push
jecxz
xchg
jns
sbb
iret
pop
mov
es
mov
out
mov
push
push
mov
push
mov
into
dec
xchg
clc
into
aad
les
sbb
fisubrl
shl
push
outsl
cmp
sub
in
mov
lds
add
mov
lods
jo
lret
jnp
fdivrl
hlt
in
sbb
or
adc
and
iret
push
test
ljmp
movsb
add
inc
adc
testb
mov
sti
jl
pop
orb
mov
pop
jecxz
cld
lods
inc
out
jnp
sbb
sub
mov
dec
mov
pop
sbb
xchg
out
xchg
clc
fistpl
sbb
cmp
fwait
imul
xchg
outsl
outsl
lretw
push
mov
add
pop
mov
es
mov
xchg
push
ret
pop
dec
xorl
lcall
xor
jmp
xchg
rcl
pop
jmp
mov
pop
adc
adc
and
inc
pop
mov
jo
and
mov
inc
cmp
push
jg
test
push
addr16
shll
xor
js
mov
push
loop
sbb
or
dec
push
inc
cmp
xchg
pop
lods
enter
xlat
int
push
sub
fs
mov
stc
fiadds
cld
jp
and
test
ss
xor
int3
mov
div
repnz
call
cs
inc
push
jae
out
sub
xchg
push
cmp
addl
pop
imul
add
jne
fsts
mov
das
ret
lret
cmp
stc
cmp
cmp
fsts
sarl
mov
or
jne
xlat
ret
out
or
ss
shl
jbe
stc
popf
pop
fwait
stos
add
gs
push
push
xor
test
jg
push
push
dec
negb
daa
xor
cwtl
xor
cmpsb
dec
dec
xlat
mov
push
cmp
xor
and
xor
aas
pop
mov
cmp
add
and
mov
push
repnz
sub
rcrl
test
es
fcompl
xchg
jae
dec
add
mov
mov
push
in
jle
xchg
jb
int3
xchg
push
test
fimull
in
clc
dec
xlat
and
sub
adc
and
or
sbb
shr
sub
repz
in
dec
sbb
dec
dec
insl
jge
mov
inc
iret
fisttpl
mov
jle
out
mov
or
out
mov
imul
div
inc
into
cmp
jnp
or
iret
or
pusha
mov
push
adc
adc
cwtl
scas
addl
sub
aaa
sti
xor
inc
and
orb
negl
stos
xor
mov
or
mov
arpl
cmpsb
dec
or
orl
adc
xchg
and
fwait
or
mov
mov
daa
add
test
mov
pusha
fwait
jle
pop
repz
cmp
loope
push
adc
idiv
adc
outsb
sbb
es
pop
std
inc
xchg
or
es
lcall
push
jo
jl
enter
adc
xchg
sub
push
mov
iret
xor
mov
jmp
lahf
cmpb
mull
in
insb
cmpsl
pop
cmp
push
outsb
ds
aas
into
in
jbe
insl
mov
ljmp
dec
jl
inc
imul
push
push
outsl
adc
cmpsb
and
rcr
mov
in
test
nop
mov
pop
or
aam
repz
push
test
lcall
dec
test
into
stos
aas
cmp
mov
jge
fistl
mov
int
fs
scas
arpl
jno
jns
out
ds
sbb
mov
cmc
sub
jbe
mov
dec
mov
xchg
and
cmp
jge
jle
stc
sahf
dec
loope
loop
cmpsb
loope
mov
mov
andl
enter
push
cltd
shlb
outsl
push
push
dec
xchg
xor
fs
test
and
das
fsubl
sbb
stc
arpl
ljmp
shl
cmpsl
lahf
sub
fwait
mov
in
iret
rolb
or
shrl
jmp
das
sbb
ss
jb
push
loope
sub
pop
das
or
xor
jns
out
cltd
daa
pop
sbb
jae
jle
jns
scas
stos
clc
add
add
int3
jbe
sub
mov
lcall
sub
test
insl
mov
insb
xor
movsl
pop
scas
fistl
out
mov
sub
enter
rolb
sahf
jle
imul
xor
and
pop
cmp
fisubrs
sub
aad
sbb
scas
mov
dec
int3
inc
mov
das
pop
gs
clc
inc
sbb
ds
arpl
add
mov
dec
call
add
test
insl
pop
popf
outsl
add
or
mov
sub
rcl
add
jp
push
fisubrs
mov
mov
aaa
pop
popa
xor
dec
sarb
jo
lea
in
mov
jl
xchg
sahf
mov
ret
xor
iret
sub
jb
adc
mov
aas
or
push
iret
movsb
into
ffree
sub
out
xor
sbb
xchg
lea
stos
scas
push
lar
in
mov
xchg
pop
push
out
mov
inc
and
loop
xchg
frstpm(287
jae
mov
cld
cltd
je
pusha
xor
bswap
addb
popf
pop
push
insl
inc
mov
outsl
daa
int
sub
arpl
fstpt
mov
adc
inc
andb
jmp
mov
inc
lahf
ss
cmp
xchg
sbb
jl
ljmp
jle
pop
sub
push
xchg
sub
jns
push
cs
lods
ljmp
pushf
add
gs
fisttpll
or
jmp
adc
in
push
xchg
add
xor
rcrl
add
push
push
ss
mov
test
lock
or
lock
pop
sbbb
add
add
ja
addr16
in
mov
mov
cltd
daa
jbe
inc
xlat
pop
stos
sub
mov
mov
mov
das
xchg
fldln2
test
ror
and
push
jp
subb
xor
jo
imul
inc
pop
dec
jmp
loop
lea
mov
aaa
aam
xchg
scas
dec
mov
popa
xchg
and
push
cmc
mov
int3
repz
les
cmpsb
push
or
test
bound
and
adc
ja
mov
mov
cld
xchg
push
ret
int
dec
out
xor
in
pop
aaa
notl
xor
imul
jmp
out
or
xchg
int
fisubrl
jno
mov
imul
insb
in
mov
sahf
push
nop
and
xchg
out
add
jne
imul
aad
adc
mov
and
insb
cmpb
std
or
fisubrs
shl
push
lret
es
fimull
or
push
and
fsubs
mov
inc
test
sahf
xor
push
cmpsl
das
inc
aad
sbb
add
jl
mov
mov
jo
imul
divb
sbb
fiadds
mov
fstpl
lret
movsl
mov
push
gs
xor
xacquire
rolb
sbb
ror
mov
xor
and
and
mov
rolb
loopne
popa
loopne
adc
xor
ljmp
cltd
ret
mov
test
stc
rorb
mov
cmp
imul
inc
test
fimull
imul
mov
idiv
aas
jp
mov
lahf
or
cwtl
mov
lcall
cmp
add
shrl
es
add
or
sbb
adc
aaa
and
aam
inc
addr16
and
fs
inc
jge
inc
scas
xor
dec
and
aaa
or
adc
mov
jge
sbb
cmp
aam
mov
mov
aaa
dec
int3
stc
push
aas
cmp
test
ficomps
scas
mov
lock
shll
iret
loope
inc
adc
jg
mov
xlat
loopne
inc
sbb
sbb
push
pop
dec
in
xchg
pop
and
dec
pop
dec
cmc
scas
aad
les
mov
adc
cli
int3
mov
xchg
orb
mov
adc
push
scas
adc
vhaddps
sub
dec
xor
popa
and
jge
inc
in
pop
insb
add
cwtl
lds
mov
mov
mov
imul
shl
cmpsb
fimull
mov
aam
adcl
popa
test
pop
les
mov
push
and
cmc
ficoms
lahf
mov
std
dec
mov
popf
jmp
loopne
pop
fwait
xchg
es
enter
inc
and
sbb
jns
xor
jno
xor
cmp
xor
cwtl
push
sub
mov
dec
mov
mov
pop
mov
push
fwait
mov
pusha
xor
pop
fsts
mov
scas
push
lahf
pop
dec
pop
pop
cld
nop
pop
jno
and
out
mov
in
fucomi
xor
sub
jge
mov
das
insb
adc
testl
gs
pusha
mov
push
push
push
sub
inc
inc
xor
addr16
mov
mov
insl
fdivrs
les
decl
enter
sahf
pop
fidivs
insl
or
sub
or
arpl
pop
add
les
mov
adc
ljmp
lods
outsb
lds
sub
out
mov
mov
das
push
popf
sub
ficompl
or
jns
popa
and
or
icebp
popl
cmp
dec
and
jnp
movsl
jmp
es
xchg
and
jecxz
mov
enter
jp
loop
mov
sarb
and
jp
dec
inc
outsb
test
adc
push
xchg
adc
xchg
push
shrl
cmp
cmp
pop
pop
lahf
loopne
cmpsl
jecxz
or
inc
cli
pop
daa
inc
inc
decl
and
fisubl
sub
jg
repz
pop
icebp
xor
ds
xor
addb
push
flds
out
push
hlt
inc
out
xor
inc
arpl
inc
cmc
popf
or
jmp
int3
lret
sbbl
pop
inc
dec
add
adc
lods
fiadds
pusha
aaa
pushl
jno
arpl
xchg
sub
cmp
cmp
aaa
sub
push
test
xor
sti
jge
mov
lret
sti
outsl
xlat
mov
xorb
sbb
or
test
aas
xlat
icebp
shlb
mov
or
jne
and
imul
out
xchg
inc
mov
inc
sub
ja
push
mov
addl
mov
je
push
xor
mov
mov
mov
shrb
aas
cli
cmp
in
int3
cmc
cmpsb
outsl
xchg
mov
dec
mov
ja
shr
jge
sahf
idivl
movb
inc
popa
stos
ljmp
mov
mov
popa
fwait
cwtl
das
int
mov
xchg
inc
push
ljmp
call
imul
out
aad
js
jmp
push
mov
mov
inc
bound
shlb
repnz
lods
push
stos
cmpsl
jnp
mov
inc
cmpsb
nop
push
pop
xchg
mov
sahf
inc
or
pop
sbb
pop
loop
mov
std
jle
stos
inc
mov
mov
out
test
xlat
mov
inc
sbb
or
rcrl
mov
sub
xchg
or
adc
mov
inc
sub
jne
add
ja
sti
pop
dec
dec
bndstx
mov
xor
fsubs
push
nop
in
inc
into
xor
sti
push
stc
inc
ss
mov
leave
xor
mov
orb
inc
scas
inc
sahf
sarb
pushf
test
leave
adc
aam
adc
aad
xor
jb
jno
mov
jmp
repnz
dec
insl
pop
add
addr16
fsts
pusha
sub
sbb
call
or
std
cmp
jecxz
xchg
jns
std
and
lock
dec
pop
mov
xlat
mov
push
je
and
ljmp
aad
hlt
inc
mov
stos
jmp
aaa
xchg
shlb
cmc
fldcw
and
inc
mov
add
pop
dec
addr16
push
cwtl
xchg
lock
sub
fdivs
scas
fmul
push
psubq
xor
out
icebp
cmp
adc
cmpsb
test
rcll
xor
xchg
xchg
test
inc
xor
js
add
xchg
mov
pop
imul
inc
stos
fisubrs
sbb
pop
add
pop
insb
out
cmp
movsb
fstpt
lcall
jbe
repz
je
bound
movsl
sbb
or
mov
push
nop
leave
lahf
inc
fcomps
sub
cmpsl
dec
mov
jae
jbe
mov
push
dec
mov
inc
mov
cmpsl
addl
and
and
sbb
mov
or
xlat
cli
fdivs
inc
ret
rcrb
insb
dec
inc
pushf
mov
push
out
push
lods
and
or
ja
ror
outsl
push
mov
je
or
xor
push
push
pop
xchg
testl
or
pop
neg
add
jge
loop
cmp
ja
xor
fadds
stos
mov
subl
mov
inc
rorl
gs
dec
push
loopne
icebp
pop
mov
push
add
pop
jne
mov
and
popa
frstor
xlat
sbb
outsb
mov
enter
stc
loope
xor
daa
jbe
push
inc
jnp
xor
mov
jecxz
sbb
push
pop
je
push
test
rcr
outsb
xor
mov
jne
fsts
mov
int3
popf
jg
mov
cld
xchg
inc
add
das
dec
and
dec
fs
mov
ja
into
aaa
cwtl
bound
out
outsl
cltd
idiv
jg
lods
pop
imul
sub
fwait
ss
std
jo
sub
dec
cwtl
xchg
sbb
test
loopne
xchg
xor
xor
rorl
das
imul
cmp
xchg
jne
pop
push
inc
dec
dec
cmp
xor
cs
push
fisttpl
lds
or
pop
adc
mov
adc
xchg
ja
inc
call
xchg
jnp
rorl
arpl
loope
test
sti
sub
pop
stos
imulb
dec
jge
dec
push
pop
mov
comiss
xchg
add
popl
add
push
mov
cmp
aas
bound
and
mov
insb
sbb
jmp
movsl
scas
scas
sub
fsubr
test
out
mulb
sti
arpl
addb
addr16
push
scas
mov
sahf
xor
int
aad
in
or
inc
mov
enter
out
cmp
out
mov
push
cmp
xlat
pop
dec
test
pop
out
pop
sub
xlat
cmp
das
xor
adc
in
push
push
dec
int3
jnp
gs
jno
mov
iret
adc
iret
cmp
xchg
loop
psraw
add
xor
fyl2xp1
and
imul
insb
or
sbbl
dec
pop
mov
test
xchg
push
jns
push
addr16
outsb
or
loope
mov
push
scas
dec
out
test
aas
fiaddl
jmp
into
jb
push
sbb
and
mov
nop
ljmp
mov
adc
and
out
mov
push
mov
das
adc
mov
jae
test
icebp
je
cld
sub
xchg
cmp
fsubs
les
pop
inc
mov
mov
cmp
push
push
ljmp
outsb
std
lods
adc
mov
xor
sbb
jb
loop
inc
leave
push
cmp
mov
dec
into
xchg
dec
xlat
add
mov
mov
imul
pop
pop
lods
in
scas
ja
std
push
in
pusha
mov
mov
pop
adc
jne
mov
daa
mov
das
and
out
je
and
bound
rorl
rcrl
adc
addr16
pop
cli
popf
push
into
popf
dec
pop
ljmp
sub
jne
fistl
mulb
in
into
loope
pop
push
iret
fldt
leave
dec
dec
mov
mov
pushw
sub
or
mov
lods
ss
idivb
leave
insl
dec
mov
les
in
shll
or
jg
jns
ljmp
insl
sahf
pusha
adc
enter
test
pop
mov
pop
or
stos
js
cs
hlt
cmp
jg
fdivrl
and
jo
hlt
cld
xchg
cmp
clc
or
mov
adc
pop
sub
or
aam
fwait
je
insl
cmpsl
mov
ret
mov
mov
xlat
and
mov
and
sbb
mov
sbb
loop
mov
popa
clc
aas
sarb
mov
xchg
sbb
jg
xchg
insl
icebp
insl
pop
adc
outsl
pshufw
xchg
mov
test
ljmp
negl
sub
into
movsb
leave
inc
cmp
fwait
aad
stc
push
adc
hlt
cmp
xchg
insb
icebp
mov
cld
aad
add
mov
sub
cld
push
in
aad
aam
test
cld
inc
ret
and
sahf
sbb
shl
add
and
xor
or
mov
andl
pop
jo
mov
cmpl
mov
sbb
cmc
addb
xlat
push
in
inc
call
test
test
faddp
leave
mov
dec
mov
insl
out
sbb
imul
mov
in
js
cmp
nop
insl
xchg
ja
ss
test
pop
add
sbb
shlb
adc
in
mov
in
push
pop
dec
testl
fidivs
xor
sbb
inc
pushf
fs
ss
je,pn
cmp
xchg
push
mov
fsubrs
jbe
out
sbb
xchg
jp
loope
jno
adc
pop
ljmp
xor
sub
cs
scas
or
negl
dec
dec
adc
lods
pop
pop
ljmp
sbbl
or
lahf
jnp
cmc
adc
out
loopne
dec
xor
sub
ret
xchg
add
adc
enter
mov
fbstp
dec
fidivl
or
and
jl
jnp
pusha
xor
push
cmpsl
ds
insl
jne
test
lret
lock
fcomps
aas
push
jg
decb
ret
outsl
jmp
or
sahf
loop
std
aas
fnstsw
add
pop
mov
adc
inc
ds
pop
lret
push
lods
inc
int3
adc
fcompl
int
push
outsb
cli
addr16
lret
leave
pop
cwtl
pop
push
lcall
stc
sub
int3
nop
shrb
push
test
mov
and
ds
shrl
ret
lret
jge
ret
mov
hlt
xlat
and
scas
test
mov
cli
or
lea
sbb
pop
in
add
pusha
fcmovnu
stos
mov
xor
outsl
loope
ret
inc
and
enter
pop
out
pushf
mov
mov
add
push
xchg
jecxz
hlt
inc
cmp
stos
inc
pusha
lods
inc
fnstcw
loope
stos
jbe
add
push
test
and
rcr
xchg
pop
inc
mov
js
pop
mov
test
aas
push
jne
dec
push
das
push
lret
mov
popf
cmp
sbb
notl
xlat
inc
in
pop
addr16
pop
insl
arpl
mov
push
fstps
shl
add
lret
mov
xchg
push
add
sub
xchg
adc
jns
mov
sbb
in
rolb
lds
inc
fnsave
gs
stos
mov
clc
scas
adcl
repz
sub
lea
je
fsubs
pusha
cmp
dec
fsubr
dec
and
arpl
pop
jmp
outsb
and
push
icebp
ja
inc
add
inc
int3
aad
mov
jg
and
rcrb
fnstenv
inc
mull
jl
jl
add
xchg
jns
outsb
add
mov
lcall
out
pop
aaa
pop
xor
sbb
jp
mov
add
lahf
imul
jb
outsb
scas
sbb
das
inc
aaa
movl
add
ja
sbb
add
mov
mov
inc
xlat
into
cmp
loopne
pop
shll
jge
jae
mov
mov
xchg
movsl
jmp
es
add
xlat
aaa
mov
and
lret
ds
andb
stc
inc
ret
mov
mov
pop
adc
cmp
stc
fdivrs
aad
dec
lahf
mov
add
push
loopne
push
fisubl
mov
mov
pop
cmp
xor
push
add
aam
add
repnz
movntps
nop
adc
fwait
sbb
ja
and
fisubrl
add
insb
or
push
sub
fs
adc
lret
jg
pushf
scas
ret
mov
popa
pop
xor
push
ja
movl
cmpsl
sti
dec
xor
and
scas
shrb
loopne
add
es
test
push
jge
enter
mov
add
divps
insl
sub
ret
sub
imul
int3
scas
hlt
lahf
sbb
decl
xor
dec
jge
mov
or
jmp
dec
xchg
jmp
popf
push
jne
lcall
sbb
inc
mov
sub
sar
add
sub
adc
or
sbb
ja
repnz
add
inc
push
mov
sub
inc
dec
mov
jl
sbb
inc
add
popa
scas
sub
push
outsb
pop
stc
fiaddl
mov
fwait
xchg
stos
cmp
xor
cmpsb
push
rcrl
ret
arpl
inc
iret
stos
cld
shlb
loop
aas
dec
xchg
or
sbb
aas
push
cwtl
movsl
xchg
pop
lcall
and
mov
int3
in
jae
out
jo
test
mov
fsqrt
pop
mov
popa
clc
lods
mov
mov
icebp
add
hlt
pop
outsb
loope
sub
js
cmc
sub
shl
out
push
dec
aas
lret
push
xor
aad
sbb
adc
rcl
pop
and
lock
xchg
rcrl
inc
aas
andl
dec
mov
iret
add
rcl
pop
movsb
daa
outsl
rcrl
outsb
jb
jl
mov
cmp
sub
dec
insl
mov
packsswb
inc
lea
mov
add
scas
xor
cmp
cs
test
cmp
cmpsb
popf
shll
inc
xchg
incl
imul
imul
mov
dec
lcall
loope
dec
cmp
cs
xchg
pusha
hlt
inc
bound
scas
fstp
sbb
rorb
into
test
xchg
add
jae
notl
and
fucomp
pusha
into
inc
pushf
je
ss
mov
mov
ret
stos
xchg
push
mov
push
jmp
sub
jne
xchg
orb
fnsave
pop
and
mov
mov
xchg
loope
adc
jle
rcrb
lea
or
and
cmpsl
fs
add
js
clc
dec
mov
into
negb
push
mov
cmp
dec
arpl
mov
sub
imul
je
icebp
jmp
push
push
mov
push
jnp
pushf
push
subb
pushf
push
xchg
test
adc
hlt
mov
repz
add
cs
mov
notb
test
cwtl
add
push
ret
js
mov
in
cli
or
fwait
mov
pop
cmp
or
sarl
fstpl
mov
outsl
cmpsb
fdivrl
cmp
int3
cmp
rcr
movsl
icebp
push
dec
mov
jo
cld
imul
sbb
les
lea
mov
iret
jb
call
mov
cwtl
add
fcoml
jg
mov
mov
adc
cmpl
lret
fisubrl
xor
addr16
push
sub
out
cld
mov
lret
jne
lahf
or
mov
pop
mov
fdivrp
inc
int
push
dec
repz
sbb
xchg
adc
sti
clc
xchg
mov
mov
cmp
movsb
fistl
xchg
in
mov
int3
cmpsl
leave
mov
out
test
loop
int3
sti
push
insb
les
add
popf
stc
je
xchg
lea
adc
add
clc
mov
ret
sbb
ret
dec
mov
fdiv
mov
inc
cmpsb
inc
xchg
paddq
jmp
fwait
or
test
fs
mov
pop
dec
mov
je
data16
lret
and
movsl
arpl
sahf
loopne
ret
mov
pop
push
fstpt
pop
adc
shrb
mov
jno
push
or
loop
xor
dec
cmpsb
int3
and
test
idivl
ret
das
jno
mov
pop
jnp
add
lahf
dec
or
push
xchg
sbb
or
insl
dec
insl
sub
push
nop
mov
ss
fidivs
pop
mov
sub
jg
push
shr
pop
mov
mov
repz
and
add
xor
cmc
movsl
xchg
fcmovu
test
inc
popf
xor
bound
ljmp
stc
cld
fdivrl
pop
adc
pushl
daa
inc
daa
xchg
xor
gs
cmpsl
mov
mov
push
out
mov
sbb
aam
pop
push
pop
fisubl
testl
pop
jle
pop
mov
mov
int3
rolb
nop
in
fdivl
loop
sbb
test
fistps
js
ljmp
sahf
je
sub
sahf
cltd
jb
cli
addb
xor
push
nop
jns
sub
out
insb
add
lcall
into
sbb
imul
aaa
fistpl
xchg
mov
out
inc
bound
stc
sbb
sub
inc
add
icebp
jl
mov
sbb
push
test
test
xchg
ja
fdivl
lret
push
aam
mov
or
mov
ret
xchg
mov
push
dec
in
dec
dec
pop
jae
mov
test
sbb
mov
xchg
scas
cmp
jp
mov
and
rorl
add
fidivrs
inc
inc
mov
ss
aad
or
mov
jle
incl
cli
dec
loope
dec
loop
in
sub
and
lods
mov
sbbl
xor
inc
or
inc
sub
loop
pop
dec
scas
add
loop
mov
lock
dec
or
popa
xor
push
cmpsl
push
xor
mov
sub
lret
rol
dec
movsl
jp
xchg
pop
xchg
dec
loopne
dec
mov
inc
jge
fdivl
mov
ret
cmp
fwait
xor
jmp
mov
pop
xor
or
ja
outsb
jae
out
je
or
lock
test
cmc
mov
fwait
inc
adc
xor
and
loope
adc
xor
loopne
subb
in
pop
mov
dec
mov
mov
or
push
in
fwait
push
mov
jne
in
push
jp
rcll
inc
or
inc
je
lods
movsl
jno
push
popa
popa
push
add
sbbb
cli
pushf
push
push
pop
ds
xchg
aaa
fldenv
add
push
sub
mov
int
mov
cs
jne
or
clc
mov
outsl
mov
sbb
cmp
cli
xchg
cs
aam
sahf
cli
sub
and
mov
mov
sbb
or
int
cmp
sahf
xchg
mov
and
jge
xor
bound
out
add
xor
cld
push
pop
add
sub
add
dec
sbb
cmovl
xchg
sub
stos
mov
xor
mov
out
insl
jns
push
inc
cwtl
lcall
mov
or
movl
and
push
mov
xor
andl
sbbb
in
out
jmp
and
inc
mov
sub
jmp
movsb
inc
fcoms
mov
aaa
mov
add
jmp
mov
into
xchg
es
mov
and
xchg
ret
dec
cs
aad
cmp
shrb
dec
out
jae
lock
and
cmp
sbb
outsb
mov
fwait
insb
sub
ss
inc
aaa
add
mov
mov
cmp
fisttps
cmc
pusha
xor
mov
andl
mov
test
rcrb
sub
sbb
push
xor
dec
lahf
fadds
push
mov
leave
mov
ljmp
sahf
or
xchg
mov
mov
mov
lcall
jmp
adc
fimuls
dec
mov
aam
mov
mov
mov
jae
sbb
push
dec
fdiv
pop
or
int
adc
ss
call
pop
std
sub
mov
lahf
lods
int
arpl
pop
push
push
aad
dec
fidivl
stos
loop
orl
out
push
dec
cs
adc
lret
ds
mov
inc
test
cmp
add
roll
cmp
in
sub
pop
push
xchg
xchg
clc
and
outsl
daa
adc
gs
or
xchg
and
add
mov
pop
mov
mov
adc
fwait
out
sub
or
stos
inc
xchg
mov
mov
rcrl
lods
sbb
and
dec
iret
adcb
mov
jg
add
orb
mov
loop
jnp
lods
mov
movsb
fnstenv
hlt
arpl
xchg
pusha
push
mov
cmp
lds
dec
fs
pop
mov
bound
inc
lods
addr16
inc
je
outsl
push
xor
mov
out
xor
orb
adc
test
pop
adc
dec
xchg
jg
mov
cmc
pop
xchg
rcl
repz
repz
mov
cld
ror
pop
ret
xchg
movsb
jns
fsubl
mov
out
cmp
or
lahf
das
sub
mov
ss
mov
push
xor
fwait
pop
mov
xchg
xchg
movsl
jecxz
or
or
shrl
pop
rcl
xchg
in
adc
sti
lcall
mov
mov
lcall
jg
jns
adc
fcmovbe
mov
cmpsl
cmp
jge
and
int
inc
xlat
fistps
lea
lahf
and
stc
or
mov
xor
insl
arpl
and
push
mov
or
xchg
mov
iret
fistpl
inc
fisubrs
push
test
push
shr
sbb
leave
int
rcrb
orl
mov
dec
mov
insl
das
aad
xor
lods
in
sbb
imul
imul
adc
jo
push
or
pop
mov
add
mov
ja
std
mov
cmc
xor
into
and
sbb
out
dec
icebp
inc
inc
sbb
lods
xchg
rolb
mov
int3
mov
add
mov
cmp
xor
mov
lahf
xor
fabs
mov
dec
push
scas
nop
add
inc
xor
xor
icebp
into
xchg
sti
inc
add
aad
fwait
cmc
sbbb
push
sbb
push
popa
aad
xchg
add
inc
jg
and
ja
sti
fwait
rcrb
lock
je
in
jmp
and
dec
rclb
jo
out
mov
mov
repz
rcll
xor
inc
arpl
aad
mov
pop
sub
arpl
or
jnp
sub
in
fnsave
add
mov
test
jno
shl
jbe
nop
push
xchg
push
xchg
imul
xchg
lock
leave
mov
and
rol
jle
and
cmpsb
sbb
lds
or
imul
jb
sub
pop
movsl
lds
dec
mov
jge
push
inc
popf
scas
fadds
in
inc
fstps
push
cmp
mov
lods
daa
xchg
fmuls
lahf
or
outsl
sbb
mov
inc
adc
mov
mov
fadd
aam
cmp
lret
inc
enter
jae
sahf
icebp
rep
adc
dec
out
pop
xchg
out
lret
jno
lods
std
into
cmova
ja
flds
add
in
ds
mov
inc
mov
shrl
es
test
shll
sbb
jecxz
mov
and
cld
add
shrl
adc
sub
popf
leave
pop
pop
std
test
sbb
mov
mov
pop
outsb
jae
outsl
push
in
scas
xor
cltd
cmp
and
add
mov
cmc
mov
jmp
ret
lcall
orb
test
stos
mov
adc
sarl
or
clc
addr16
leave
scas
mov
stos
lods
cmpsl
jle
testb
adc
push
negl
fdivl
mov
mov
pop
push
mov
adc
aad
mov
xor
cmp
xor
jl
jle
icebp
scas
idivb
push
mov
fsts
enter
imul
sub
aad
sbb
jb
mov
dec
movsl
cmp
and
cmpb
jo
int
mov
jmp
mov
fidivl
mov
dec
push
test
mov
mov
sub
inc
pop
scas
and
cwtl
add
dec
mov
insb
and
lods
ljmp
xchg
xor
xor
and
push
mov
sub
call
hlt
jne
add
pushf
inc
mov
arpl
jl
fbstp
xor
ret
sti
and
pop
xlat
xchg
and
lods
test
ficoml
hlt
outsb
push
shrb
jne
jl
mov
pop
cwtl
rcl
sub
add
xlat
mov
push
sbb
popf
das
sub
or
mov
or
and
or
mov
jmp
jb
cs
add
and
fcoms
mov
bound
icebp
orl
adc
push
dec
dec
shr
aas
in
jl
arpl
insb
out
or
dec
ds
jge
jmp
dec
rclb
mov
cmpsl
mov
shrl
xchg
pop
dec
mov
pop
fldl
sub
adc
je
pusha
adcl
and
and
addr16
daa
mov
mov
arpl
pop
nop
dec
pop
push
fwait
into
xor
inc
jmp
cld
push
out
cmpsl
out
inc
leave
pop
je
mov
fldt
ret
xor
xor
mov
sbb
aaa
xchg
repz
mov
lcall
or
loope
loope
cmp
aad
xchg
shrb
into
mov
jbe
pop
xor
jae
bound
jmp
nop
in
xchg
mov
loop
and
xchg
les
sub
adc
cmpsl
int
pop
lods
adc
or
scas
push
adc
insb
cmp
daa
or
cmp
pushf
push
lret
jbe
inc
sahf
sbb
jbe
aam
dec
stos
cmp
push
mov
and
outsl
leavew
push
sub
inc
divl
out
sub
in
xchg
clc
lods
xor
sbb
add
aad
je
fdivl
test
sub
loopne
inc
popf
dec
cmp
and
sbb
sti
xchg
mov
fnsave
mov
jns
jbe
out
les
dec
in
call
cmp
outsl
jns
ja
mov
pop
imul
add
xchg
jp
ret
jg
and
add
dec
fsubs
test
sub
xor
add
imul
dec
mov
push
daa
push
mov
testb
pop
or
jbe
aas
loope
addl
loope
xor
adc
cs
mov
in
ljmp
xor
call
push
inc
xor
inc
ficoms
fstpt
int3
insb
in
fwait
cmpsl
ds
inc
rcll
jns
jle
aad
mov
cld
mov
in
fsubs
jns
xchg
inc
ja
push
xchg
push
pushw
mov
mov
js
movb
fiadds
nop
lcall
js
inc
and
out
inc
pop
sub
repnz
in
decb
lret
js
cmp
scas
loop
mov
adc
dec
in
pop
daa
outsl
mov
insb
sub
repz
icebp
rcrb
aam
into
and
les
enter
iret
rol
cmpsl
sbb
jns
push
add
or
xor
mov
cli
push
cld
sbb
mov
mov
and
push
cmp
cmpsb
hlt
ljmp
fucom
cmp
imul
jbe
shrl
imul
cwtl
loop
outsb
call
inc
insb
jle
mov
xchg
jge
dec
out
mov
xor
jae
dec
cltd
das
pop
pop
ficoms
shlb
inc
data16
imul
xor
xchg
dec
jl
and
stos
mov
pusha
or
pop
into
aaa
xchg
xchg
out
divl
pop
jne
add
pop
jb
out
lcall
sub
xchg
cmp
nop
jnp
out
or
pop
cmp
mov
pop
cmp
nop
sub
inc
sub
add
mov
outsb
shl
add
nop
dec
cmp
jp
jae
ss
push
lock
js
imul
aad
incb
sbb
clc
sbb
jae
cmp
imul
lods
ljmp
es
adcl
je
jo
pop
mov
ret
loopne
pushf
ss
gs
les
xchg
hlt
lcall
cmpsb
dec
lret
int3
arpl
inc
aad
ljmp
mov
aam
ret
outsb
sahf
mov
jns
test
and
scas
aam
adc
testl
out
int
jne
test
jl
inc
in
pop
fiaddl
sti
push
scas
pop
ds
xor
lret
cli
inc
and
test
imul
cmp
jne
mov
mov
rol
mov
xor
jns
push
cmp
and
in
adc
scas
xchg
scas
pop
orl
enter
insl
push
jnp
dec
lret
cmp
lret
sub
pop
repz
adc
roll
xchg
int
add
or
pop
mov
sub
ret
je
sbb
mov
sub
or
cmpb
push
push
push
subl
mov
xchg
leave
fsts
sti
mov
mov
xor
data16
push
inc
sahf
and
add
xchg
cli
fwait
inc
mov
jge
xlat
es
jns
lods
inc
pop
insb
ljmp
and
ljmp
aam
shl
shrb
sahf
pop
insl
jmp
add
clc
roll
andb
mov
and
mov
pop
sub
cmpsb
cmp
and
cmp
xchg
dec
xchg
sub
mov
and
adc
notb
lret
mov
sbb
inc
push
jb
sbb
push
in
adc
push
and
lcall
or
cmp
int
add
pop
cmp
iret
or
or
fisubrs
lcall
in
jmp
sub
icebp
imul
add
sbb
add
movsb
xor
repnz
inc
ret
into
incb
sbb
xor
mov
mov
jno
or
mov
bound
ss
cmp
popa
rorb
mov
aas
xchg
test
jle
push
subl
cmp
adc
rclb
dec
sub
scas
sub
aam
sub
mov
dec
sub
lock
aad
lods
mov
dec
jno
shll
xlat
cs
xchg
sub
push
cmpsl
ss
sahf
inc
inc
arpl
fildll
push
and
inc
lahf
dec
cwtl
fimuls
adc
pop
out
in
mov
std
enter
cmc
or
aad
mov
mov
xchg
inc
xchg
popf
stos
push
sub
mov
xchg
lret
in
xor
push
pop
sub
pop
aas
cmc
add
pop
cmp
mov
xchg
fistpl
arpl
sub
cmpps
cmp
mov
insl
sar
xchg
sbb
imul
inc
xor
lock
lret
mov
jne
leave
jle
pop
hlt
jae
and
cmp
testl
das
pop
sub
out
lcall
xchg
fmull
adc
lods
aam
fdivs
iret
dec
orl
sub
ljmp
push
mov
out
add
xor
mov
mov
sbb
mov
div
pusha
add
cs
xor
mov
xor
cli
mov
out
cmpsl
shrl
loop
idivb
lds
push
stc
shlb
data16
rolb
repz
jo
leave
jbe
adc
orl
ljmp
mov
adc
adc
xor
leave
adc
pop
std
add
push
sar
cmp
cmpsl
pusha
or
loop
aad
and
shll
in
loop
iret
push
dec
sbb
or
iret
and
mov
call
inc
inc
mov
cltd
cmc
pop
aas
add
popa
jo
sarl
cmp
add
xchg
mov
mov
cmc
pop
mov
and
dec
jo
xchg
xchg
adc
subl
cmp
mov
hlt
jmp
cmpsl
out
mov
add
inc
mov
adc
lds
call
sub
add
sub
pushl
aad
dec
mov
mov
mov
mov
stos
push
aad
int
and
sti
test
and
out
test
pop
adc
or
sbb
cmp
filds
lcall
test
cmc
lods
jle
and
aam
mov
mov
test
cli
mov
mov
adc
cltd
pushf
stos
xchg
mov
lock
sbb
popa
and
xchg
push
test
je
cmpsl
std
xchg
inc
scas
mov
ljmp
xchg
adc
jmp
push
or
and
in
cmpl
mov
jo
sub
test
bound
xchg
xor
in
mov
push
xor
push
fidivs
xor
es
sub
cmpsl
xchg
push
jmp
fbstp
fstl
testb
bound
iret
ret
push
mov
inc
push
xor
loop
lock
clc
test
movb
idiv
mov
push
mov
pusha
enter
into
jb
pop
rclb
leave
xlat
jge
pop
inc
jmp
sub
xchg
imul
lahf
lock
test
pop
mov
inc
mov
add
rcll
jnp
jo
cmp
imull
cmp
pop
push
stc
sbb
inc
sub
out
lds
push
xor
mov
add
mov
cmp
jge
or
and
jl
add
pusha
in
jl
inc
jp
cmpsl
mov
pop
out
jp
sub
adc
scas
leave
jb
mov
loopne
jmp
pop
aam
test
mov
mov
ficomps
sahf
fsubrl
xor
jp
fcompl
mov
jle
xchg
sar
addl
or
pop
outsb
add
test
orl
pop
mov
mov
rorl
jo
gs
cmp
mov
or
push
repz
in
xchg
mov
add
jecxz
sbb
adc
xor
leave
pusha
cmc
push
mov
mov
adc
mov
add
into
sub
dec
fstps
in
lods
inc
push
add
push
jp
aas
pop
push
xchg
sbb
data16
jg
repnz
repz
mov
fdivs
outsb
cmc
pop
dec
mov
jns
addr16
testl
ja
add
and
ja
orb
je
stos
push
add
add
pop
pop
or
leave
or
mov
cmp
jne
sahf
push
loopne
std
and
test
adc
ret
adc
pop
pop
mov
outsb
jae
sbb
nop
es
pusha
dec
roll
lea
xor
xlat
outsl
std
cmp
or
test
push
pusha
call
inc
pop
stos
or
mov
js
dec
pop
mov
movsl
sbb
push
push
and
jmp
jg
nop
aaa
dec
fdivr
lcall
jne
stos
stos
fdivrs
adc
imul
push
or
fsubrs
mov
lea
incl
sti
popf
or
lcall
xchg
jne
icebp
sarl
fcoml
insb
xor
scas
push
das
addr16
popf
arpl
jae
cld
mov
popf
mov
mov
test
cmp
push
push
inc
out
fiadds
cmp
and
test
ret
dec
add
les
js
add
ret
xchg
add
add
mov
xchg
std
or
cmc
loopne
repnz
sub
fcmove
loope
jo
aaa
inc
cmp
xor
add
mov
aas
cwtl
jmp
cmpb
es
pop
mov
icebp
iret
xor
dec
lds
push
mov
cmp
pop
int
or
jno
mov
sti
stos
testl
lcall
push
inc
push
jmp
pop
dec
dec
xorl
adcl
cs
mov
sub
jo
mov
and
xlat
lret
xor
push
insb
cmpsl
jle
js
stos
insl
mov
cmp
or
add
repnz
popa
adc
pop
mov
repnz
test
xor
adc
dec
push
das
ror
fdivl
loopne
push
and
and
fcomps
jne
test
int
adc
insb
push
insb
popf
sbb
add
lcall
jae
lcall
inc
sub
dec
fwait
push
fwait
xor
shlb
and
add
jnp
notl
mov
push
out
xchg
mov
jge
add
fstl
xchg
xchg
lahf
push
sbb
movsb
repnz
in
mov
pushf
pop
ret
and
mov
daa
test
ja
mov
adc
inc
inc
fs
cld
rclb
push
mov
leave
and
fiaddl
mov
shrb
and
jbe
sti
sti
lods
and
fnstenv
leave
sub
push
inc
jno
lea
pop
imul
outsl
arpl
mov
jns
sub
rcll
enter
cmp
mov
xchg
sub
lret
or
call
xor
das
out
popa
test
aas
add
ret
repnz
js
cmp
mov
data16
enter
fs
gs
iret
or
mov
mov
xlat
push
les
cmp
lods
sti
xchg
ljmp
cmpb
jl
push
mov
jl
dec
sub
and
aaa
test
imul
cmp
cmp
movsb
divl
xchg
andb
insb
sub
add
das
add
xchg
cmpsl
icebp
pop
mov
shl
push
add
mov
lret
mov
xchg
sub
jno
leave
leave
jnp
outsb
fsubrs
pop
sar
sti
push
adc
mov
sbb
mov
jge
cmp
pusha
les
jge
lods
pop
scas
stc
or
inc
push
adc
xor
sbbb
fcmovnbe
xor
mov
je
mov
push
ret
push
stos
cld
into
lret
loope
mov
ret
outsl
ja
in
insb
shl
xchg
push
lods
mov
les
inc
push
jg
jae
and
xchg
sbbl
shll
lea
stos
pusha
fisttpl
ljmp
fxch
push
sbb
cld
lret
mov
push
fdivl
gs
add
push
push
cwtl
or
lret
or
fiaddl
xchg
ror
stos
iret
add
addr16
mov
fbstp
int
dec
cmp
dec
pop
prefetchw
push
or
push
mov
call
jbe
cs
jmp
sub
xchg
cltd
pop
cmp
dec
and
cmp
popf
jg
gs
seta
push
in
xor
xchg
out
out
imul
in
call
mov
shrb
testb
dec
and
cmp
jbe
dec
fldcw
stos
dec
push
cmc
popf
lods
test
cwtl
xor
ret
adc
sub
hlt
inc
cmp
inc
sbb
shlb
xchg
insb
sahf
adc
dec
or
mov
or
sub
and
fcmovnu
cwtl
dec
sub
aaa
push
out
dec
fs
mov
push
scas
fdivs
es
add
inc
mov
sti
es
and
in
into
ss
add
dec
aaa
cwtl
pushf
push
out
pushf
dec
adc
mov
ffreep
scas
fsubrs
push
lock
stc
dec
push
test
imul
popf
mov
movsl
cmp
cmpsb
mov
dec
jbe
cmp
lock
add
aam
jno
inc
stc
mov
or
dec
pop
cld
daa
lcall
popa
jnp
imul
or
mov
loope
xor
mov
arpl
rcll
test
mov
ds
dec
out
ljmp
add
push
stos
popf
pop
test
jl
sbbl
jno
enter
and
adc
daa
cmp
imul
sub
scas
xchg
mov
pop
mov
clc
inc
out
xchg
lods
dec
mov
or
mov
pushw
push
insl
sub
rcrb
or
sub
dec
or
mov
push
leave
push
inc
add
inc
sahf
ljmp
mov
ja
push
out
mov
stc
sub
xchg
pop
or
adc
add
imul
clc
sahf
cmpsl
jne
mov
and
push
imul
mov
adc
data16
lret
inc
sub
push
mov
and
dec
cmp
sub
dec
dec
inc
cmp
stos
pop
add
les
add
inc
stos
adc
frstor
dec
cmp
stos
jns
xchg
jecxz
mov
out
imul
mov
fwait
xchg
xlat
pop
sbb
movsb
push
call
jmp
mov
cmp
jl
and
imul
pop
lds
insb
mov
aad
in
fdivp
sbb
sub
add
in
insl
adc
sub
mov
mov
lds
mov
push
mov
and
sbbb
scas
test
and
cld
stos
ja
call
adc
sbb
add
pop
cmpsb
outsb
sarl
loope
pop
popf
bound
dec
lea
mov
movsb
jecxz
or
in
and
sub
and
cmp
lret
push
loop
sub
scas
inc
xchg
idiv
mov
xor
lahf
adcl
dec
mov
hlt
push
lods
jo
xchg
inc
inc
test
xchg
dec
cmpsb
pop
loope
xchg
addl
es
mov
jb
dec
push
pop
jge
mov
pop
insl
ja
adc
clc
jle
test
jl
cmc
out
pop
aas
mov
in
or
hlt
shrb
packuswb
js
and
test
pop
push
pop
xchg
jne
jns
test
lret
push
leave
and
cmpsb
lret
sub
pop
dec
daa
inc
fsubs
andl
pop
push
mov
hlt
xchg
mov
cmpsl
mov
addr16
add
push
cwtl
sbb
aaa
out
push
cs
pop
test
push
pop
jns
xor
daa
retw
push
push
mov
iret
sub
pop
clc
call
cmp
pushf
out
sub
lahf
cmp
push
sbb
mov
subl
in
clc
fiaddl
inc
cltd
pop
ja
pop
jmp
push
and
add
xchg
incl
out
pop
addr16
enter
pop
mov
push
rcr
cmp
insl
scas
jae
mov
sbb
int3
leave
lcall
xor
push
movsl
sub
cmp
hlt
loope
aam
test
jle
add
jle
clc
and
add
mov
ljmp
inc
xor
mov
aaa
pop
dec
inc
xlat
icebp
xor
dec
sub
aaa
addr16
or
insl
jnp
adc
js
ss
shll
decb
stos
mov
je
inc
dec
or
repnz
cmpsl
aaa
jnp
sbb
jns
lcall
out
add
push
hlt
js
aas
adc
add
mov
jno
xchg
add
rcrb
xor
push
or
jnp
jp
xchg
pop
jbe
dec
es
dec
incl
mov
mov
push
fstpl
cmc
cltd
or
adcb
mov
test
outsl
mov
mov
push
adc
xlat
sbb
insb
sbb
mov
pop
xor
imul
add
ja
mov
fs
scas
inc
pop
push
inc
xchg
add
stc
jle
imul
jmp
and
popf
xor
enter
repz
jg
test
push
mov
pop
sbb
fxch
outsl
int3
push
std
mov
dec
mov
xchg
insb
sub
mov
mov
stos
mov
fwait
movsb
cs
fldcw
jns
dec
inc
xlat
and
inc
pop
stc
cmp
sub
mov
imul
insb
fstpt
pop
movsl
xorb
sbb
les
mov
loop
sbb
nop
imul
xchg
pusha
and
cmp
cmc
in
mov
imul
inc
dec
adc
loopne
inc
xchg
mov
aad
je
ret
hlt
in
mov
push
xchg
adc
pop
add
inc
popf
lahf
je
outsl
in
test
cld
ror
pushf
jbe
push
sbb
adc
fidivl
inc
and
sti
inc
aas
stos
aas
adc
arpl
push
insl
pop
push
jae
or
pop
jno
rcrl
mov
mov
mov
rcll
mov
mov
xchg
mov
clc
clc
outsb
and
xchg
jp
add
clc
nop
jnp
jmp
cmpsl
push
adc
jbe
js
xchg
stos
and
mov
cmp
sbb
pop
aam
loope
cmp
pop
mov
outsl
mov
dec
icebp
insb
sahf
imul
int
mov
pop
pop
sub
insb
stos
cs
pop
mov
and
xor
mov
scas
dec
shlb
das
andb
jb
mov
lods
mov
cmp
test
sbb
in
xorl
mov
nop
mov
ret
mov
shrl
xor
das
mov
adc
outsl
daa
stos
xor
mov
xchg
ret
repnz
or
cmp
pop
test
jbe
sub
andb
imull
add
popf
adc
std
dec
push
jmp
je
inc
pushf
lods
jno
clc
dec
and
mov
sbb
push
mulb
int
pop
pushf
scas
sbb
xchg
jge
idivb
lds
imul
or
daa
sbb
aad
mov
cmp
dec
movsl
scas
fidivl
xchg
mov
popf
or
std
in
in
cs
mov
mov
mov
inc
jecxz
cmp
adc
stos
sub
pop
repz
scas
jno
test
jge
pop
adc
fldenv
lea
cltd
pusha
enter
dec
xchg
pop
xor
xchg
xlat
rcl
jns
push
ds
fstpl
dec
pusha
imul
mov
cmpb
shrl
mov
jae
xchg
ja
xchg
in
mov
mov
ret
mov
mov
insb
jo
sbb
mov
jl
push
pop
pushf
test
icebp
pop
flds
mov
in
movsl
ror
xor
mov
or
out
cmpsl
bound
out
xor
xchg
sub
leave
add
sbb
jl
sti
popf
xor
repz
add
dec
jne
loope
outsl
adc
and
pop
mov
rol
cmp
out
pushf
mov
cwtl
mov
outsb
cld
push
aas
mov
and
out
sti
cli
xchg
sub
mov
and
adc
mov
add
adc
fwait
inc
ss
ja
andb
mov
sub
sub
loop
fstpt
add
repnz
lds
jo
push
aas
test
popa
shl
cmp
sbb
and
outsl
jmp
push
push
cwtl
int3
fdivrl
iret
cmp
mov
xchg
mov
mov
fdivr
mov
inc
jae
inc
fstpl
sbb
adc
mov
inc
addr16
cs
xor
mov
jecxz
stos
xor
or
inc
cmp
imul
or
shlb
in
and
inc
sbb
jl
push
test
xchg
mov
addr16
and
xchg
sahf
lods
test
idiv
xchg
sub
xor
dec
pop
add
pop
push
add
cmp
mov
fidivs
ds
inc
mov
mov
pop
mov
into
aam
lret
push
jne
popa
jmp
push
jle
iret
es
call
lods
xor
mov
cmp
xlat
xor
call
and
sbb
hlt
cmp
xchg
inc
outsb
sub
or
aam
les
fildll
sbb
leave
pusha
ja
imul
into
xchg
imul
dec
pop
mov
push
fisubs
mov
rcll
mov
jg
cltd
inc
sahf
popa
fsubr
sub
inc
sti
jno
lods
mov
hlt
sub
add
pop
push
cmp
or
mov
pop
dec
add
xor
push
imul
cli
int3
mov
mov
lcall
repz
jp
mov
pop
lret
fdivr
and
test
cmp
sar
xchg
add
adc
mov
cld
xchg
inc
cmpsl
cmpsb
xchg
xor
aas
arpl
inc
mov
ror
outsb
mov
mul
adc
dec
in
xor
fstl
pushf
test
mov
cltd
xor
repnz
adc
jo
push
adc
ds
fsubrs
rol
pop
gs
xor
adc
and
shrb
ret
mov
mov
outsl
into
mov
aam
fcompl
ds
shlb
inc
lahf
dec
add
fwait
adc
cmp
cmp
rcrb
dec
inc
bound
cmp
cs
push
stos
pop
mov
loop
mov
or
xchg
mov
xlat
dec
int3
mov
push
sbb
cmpsb
sbb
inc
pop
mov
or
sbb
sub
mov
or
add
mov
in
shrl
cltd
and
dec
dec
pushf
repz
call
aas
sub
xchg
add
inc
dec
int
mov
adc
iret
and
out
aad
inc
pop
sub
inc
movsb
inc
popa
loopne
sub
fisttpll
dec
xor
sbb
push
test
lcall
mov
testb
fwait
xor
jo
out
push
sbb
mov
push
push
jno
out
or
idivl
cmc
ffreep
out
lds
ds
cs
or
dec
jecxz
xchg
adc
mov
jo
jnp
in
adc
dec
mov
hlt
fs
and
test
jo
mov
jle
stos
inc
call
dec
dec
movsl
inc
cmp
fldenv
cli
jne
xchg
test
and
pop
or
mov
xor
jne
cli
icebp
inc
stos
adc
xchg
sub
adc
faddl
out
inc
mov
cltd
mov
movsl
rorb
mov
or
dec
dec
data16
scas
repnz
sub
das
fsubr
add
pop
cmp
fwait
add
pop
mov
sbbb
mov
push
or
adc
adc
adc
jb
les
mov
add
in
mov
mov
fisubs
add
pushf
cmp
jo
cmp
sub
in
inc
enter
cwtl
sub
xchg
lret
jl
aas
pop
push
add
or
sub
jbe
jae
in
jo
cwtl
in
cli
cmpb
pop
sahf
jle
sub
in
adc
adc
mov
jl
mov
push
in
das
cmp
sbbb
push
and
pop
mov
sbbl
ss
cmpsl
rclb
fidivs
jg
sub
movsl
sbb
lret
sbb
mov
loopne
lcall
push
jb
mov
dec
sbb
insb
adc
add
dec
cld
add
pop
lock
ja
gs
lods
xchg
cmp
roll
sbb
imul
loope
push
out
pop
add
aam
jbe
nop
adc
xor
imul
insl
mov
push
pop
mov
leave
rclb
add
add
pop
xor
inc
pop
icebp
js
adc
add
add
popf
insl
ja
insb
cmp
add
dec
lahf
fiadds
add
rorb
xchg
jmp
in
dec
jbe
inc
aam
push
xchg
xor
loop
and
xchg
sub
sub
adcb
mov
mov
inc
cltd
out
cwtl
mov
mov
notb
les
insb
jne
cli
mov
fistl
xchg
cmp
or
dec
mov
in
mov
push
sub
incb
sbbl
add
bound
adc
and
out
inc
pop
cmp
cmp
jg
mov
fsubr
jns
jl
cmpsl
and
mov
sbb
cmpsl
sbb
pop
mov
jnp
shlb
sbb
cs
cld
enter
xchg
add
movsb
mov
mov
loope
push
dec
filds
sub
pusha
das
xchg
popa
subl
inc
cmp
mov
xor
push
enter
or
ss
movsl
sub
mov
dec
out
jle
arpl
xchg
xor
lret
push
sbb
js
bound
fincstp
lods
jmp
test
orl
mov
leave
arpl
push
xlat
pushf
out
test
and
outsl
and
popa
add
sbb
ret
xor
push
add
pop
adc
aaa
adc
mov
pop
testb
pop
mov
jge
in
dec
pop
jl
pusha
es
mov
clc
sahf
movsl
push
dec
fadds
lahf
push
aaa
into
sub
add
fnstsw
push
test
call
imul
loope
add
dec
iret
cmpsl
insb
dec
sbb
lahf
out
push
add
mov
push
test
cmpsl
jg
mov
ret
mov
mov
inc
fs
mov
mov
ret
lods
jo
xor
rcl
jmp
pop
psubd
sahf
cmc
xor
xor
mov
adc
mov
push
jne
mov
adc
pop
adc
inc
rcrb
adc
mov
shlb
jae
in
dec
sahf
loop
fs
cmp
scas
insl
sbb
hlt
ja
int
xchg
popa
outsl
dec
loopne
subl
fisubs
jmp
push
inc
mov
movsb
mov
scas
mov
in
xchg
mov
ret
jp
pop
jbe
adc
push
popa
jle
sbb
pop
int
das
pop
mov
pop
xor
nop
cmp
or
insl
in
fnclex
pop
out
popf
inc
rcl
outsb
add
inc
cmp
jb
ss
push
jno
push
hlt
enter
ficoml
mov
add
faddl
pop
jle
dec
or
sarb
sbb
ret
sahf
dec
dec
out
xchg
in
test
mov
data16
andl
arpl
das
jmp
push
xchg
add
sar
or
add
int
or
aam
sbb
lcall
mov
pop
hlt
addr16
adc
jbe
sub
jg
or
jns
cmp
dec
loop
inc
pop
insb
inc
push
in
je
outsb
in
ficompl
push
lock
jo
ds
imul
movsb
jne
ficompl
stc
add
iret
mov
sbb
addb
mov
loop
nop
xchg
xor
test
add
add
mov
cmc
mov
sbb
sahf
pop
sbbl
push
mov
shll
jns
dec
and
mov
cmp
lcall
fildl
arpl
mov
adc
std
stos
dec
or
bound
jecxz
out
loop
mov
iret
cmp
mov
cmp
jns
cwtl
mov
add
subb
ljmp
pop
pop
pop
mov
call
mov
and
pushf
mov
push
cmpsb
aaa
push
daa
lods
sbbl
iret
mov
push
lods
pop
add
and
mov
stos
jp
sarb
insb
push
andl
lock
mov
mov
ss
pop
cmp
gs
mov
add
jmp
adc
int3
add
dec
sub
nop
sarb
sbbb
cmp
cmpsb
sbb
mov
xchg
aaa
jle
cmp
test
jo
mov
stos
jl
xchg
das
xchg
cmc
adc
dec
in
push
lret
sti
cmp
cmp
cmpsl
inc
ficoml
mov
pop
xlat
fwait
out
push
inc
call
sahf
pop
cmpsl
mov
xchg
jp
add
into
jae
push
xchg
mov
in
sbb
xchg
and
and
mov
lret
push
pop
push
add
or
aam
xchg
xor
pop
in
pusha
inc
push
push
push
repz
mov
mov
mov
fnstenv
dec
push
jns
mov
adc
push
pop
out
jb
lahf
sub
mov
and
push
jo
fmull
add
mov
jg
lods
bnd
inc
fistl
test
or
js
cmp
inc
std
push
push
mov
xor
cld
lcall
cmpsb
dec
push
mov
mov
ljmp
cmp
push
adcb
in
dec
fyl2x
sub
popa
inc
ret
add
sub
inc
fnsave
fisubrs
pop
nop
xor
adcl
out
fwait
ret
mov
shl
ficoml
ds
popa
jbe
aad
sbb
movsb
nop
das
mov
jnp
sbb
sub
scas
fwait
cmc
and
imul
insb
lods
jbe
popf
jg
inc
out
mov
push
es
jle
mov
jle
xchg
xor
push
push
jae
pop
loop
fldenv
mov
cli
pop
and
incb
push
call
xchg
mov
nop
sub
pop
jns
data16
push
mov
mov
std
mov
xorb
dec
and
ss
adc
orl
jg
cmpl
pop
outsl
stos
jge
and
std
pop
aas
aam
sub
repnz
repz
and
jbe
cmp
adc
es
add
xchg
xor
cmp
or
cmc
pop
xor
xchg
shrb
data16
jp
push
xchg
gs
and
dec
mov
xchg
add
mov
sbb
ret
enter
sahf
xchg
rcr
frstor
out
lds
leave
cmpsl
nop
enter
icebp
in
fldenv
sbb
mov
jg
jbe
dec
rorl
add
pop
aad
xchg
pop
jns
push
pop
push
leave
xlat
das
inc
cwtl
cltd
loopne
pop
xor
sbb
xchg
jmp
rcl
mov
movsb
jecxz
int3
adc
adc
cmp
hlt
inc
ss
icebp
add
xchg
cmc
and
mov
sbbl
nop
or
scas
nop
jmp
add
or
outsl
mov
test
shll
movsl
mov
aaa
into
jmp
aaa
sar
sbb
popf
les
or
mov
test
push
mov
gs
sbb
leave
enter
pop
jp
aam
cmp
xor
xchg
dec
enter
std
push
or
adc
inc
push
push
pminsw
mov
cmp
sbb
enter
jns
mov
mov
adc
lret
adc
pop
dec
inc
dec
stos
mov
jecxz
out
or
pop
sbb
loopne
sub
pop
pop
mov
ret
mov
pop
cmpsl
pusha
call
cmp
mov
insb
out
je
add
out
cmp
adc
lea
repz
and
lret
clc
xchg
in
xchg
adc
cmc
and
orb
push
iret
mov
mulb
fdivs
jecxz
pop
mov
ret
cmp
push
jmp
cld
iret
sub
or
cmpsb
rcrl
and
in
mov
insl
dec
inc
pop
jl
lret
xchg
inc
dec
mov
icebp
leave
xor
lds
cmp
push
rcll
mov
mov
lods
scas
sbb
sbb
cmpsl
rep
inc
and
iret
jg
add
cmp
sub
xchg
call
fsubr
cmpsb
mov
addb
cmp
push
xchg
dec
mov
aad
enter
ss
push
imul
jbe
scas
push
jae
loop
ficoms
or
mov
aas
jp
icebp
jae
and
fidivl
adc
lret
cld
push
pop
inc
jle
lahf
sub
inc
in
push
mov
insb
ret
aas
add
cmp
popa
push
cwtl
xchg
and
fcomip
sbb
sbb
insb
add
xchg
cwtl
pusha
sub
fsubl
jmp
mov
pop
clc
movlps
mov
add
pop
xor
or
sub
in
mov
push
mov
in
dec
mov
lds
sbb
xchg
and
jmp
jbe
sahf
cmp
mov
inc
lea
iret
insl
jnp
ficomps
xor
popf
aad
dec
xor
cmpl
mov
mov
mov
scas
xchg
pop
lds
loop
popa
std
imul
fwait
add
leave
push
clc
push
stos
push
popa
mov
sahf
mov
lods
and
cmp
xchg
sub
in
lods
test
js
cmpsl
sahf
sti
cmc
ss
repz
sub
movsl
int
les
push
add
lret
addr16
popl
xchg
sub
adc
jns
jno
add
test
jbe
scas
xchg
sbb
mov
loop
iret
inc
lcall
lock
and
shlb
add
gs
xchg
out
or
imul
xlat
out
stos
fdivs
inc
in
or
mov
mov
cwtl
jb
or
push
push
shrb
popf
mulb
push
adc
jbe
sub
mov
xchg
rcr
jno
notb
jge
stos
mov
aas
ss
inc
scas
mov
icebp
mov
inc
or
push
mov
rorb
xchg
and
push
xor
fsubrp
hlt
xchg
cmp
sete
mov
dec
std
imul
lea
or
jnp
cmp
leave
push
and
shl
mov
add
cmc
sub
xchg
in
hlt
cltd
inc
push
fwait
pop
repnz
dec
in
push
sbb
lock
popa
push
cmovbe
cmp
imul
insb
repz
addl
ss
fstpl
xor
cmc
mov
xor
cmc
mov
arpl
sub
pop
mov
sub
pusha
cmc
or
adc
out
sub
mov
lock
jecxz
mov
mov
mov
inc
jmp
shr
add
scas
out
push
push
es
testl
add
jnp
jge
int3
addl
jb
xchg
jne
sbb
cmpsl
dec
imul
ret
test
inc
addb
movsl
inc
mov
mov
mov
xchg
jge
pop
jg
or
cmp
repnz
or
push
push
subb
jne
adc
adc
inc
fsubrp
add
xchg
pop
mov
push
je
mov
mov
js
xor
jnp
xorl
lret
lret
fsub
inc
pop
ja
add
xor
bound
fwait
aas
cmp
jno
inc
xchg
xor
faddl
lock
out
sub
addl
pop
push
incb
xor
ret
push
repz
or
sbb
andb
and
add
ds
cmp
sbb
dec
jge
cmp
sarl
lahf
sbb
into
dec
add
xchg
repnz
jae
shll
push
cmp
lods
aaa
es
sub
sbb
fsubrs
mov
push
push
lahf
outsb
mov
outsb
test
testb
dec
nopl
ss
loopne
mov
mov
and
rclb
aam
cmp
pop
repnz
cli
inc
lret
or
pop
dec
in
idivl
mov
ret
fimuls
and
sti
jge
sti
xchg
mov
push
pop
xchg
sub
aaa
pop
dec
imul
xchg
fcmovb
scas
repnz
in
sbb
xchg
mov
jae
push
stos
scas
mov
and
jnp
roll
icebp
or
adcb
mov
push
jb
jge
mov
popa
fidivl
mov
sub
movl
daa
xor
bound
inc
hlt
sbb
fdivrl
pop
and
xchg
inc
mov
dec
dec
pop
lret
dec
and
bound
adc
popa
xor
fisttpl
cmp
jbe
xchg
test
cltd
std
lods
stos
or
leave
push
mov
jns
into
out
mov
mov
out
xor
enter
js
lods
test
lret
std
inc
xchg
adc
rcll
xor
pop
leave
arpl
mov
ljmp
mov
mov
les
shll
rcl
hlt
add
test
fbld
xor
mov
ss
sub
leave
mov
fstp
add
hlt
mov
or
fdivs
xorb
xchg
mov
push
in
dec
push
jmp
xchg
add
mov
dec
movsl
in
dec
cmc
dec
cmp
pop
add
call
es
xor
jns
fdivl
pop
dec
cmp
dec
and
imul
or
je
lea
dec
pop
imul
inc
mov
dec
xchg
push
stc
imul
adc
decb
dec
push
push
jmp
push
repz
loop
test
jns
fucom
add
and
xlat
fs
aas
or
jg
stos
cltd
test
mov
adc
jns
shrl
xor
loope
jb
xor
cmpsl
loop
fnsave
das
add
jo
es
xlat
outsl
adc
jbe
jno
adc
mov
and
add
or
pop
jle
xor
sub
neg
mov
xchg
mov
icebp
and
negb
jnp
scas
xor
sbb
push
dec
repz
loop
jo
fwait
mov
sbb
sub
mov
stc
cmp
adc
sbb
adc
cmp
js
int3
fists
hlt
lret
les
jae
ret
ss
dec
pop
jl
shrl
sbb
mov
cmp
cwtl
ss
dec
inc
pop
test
jbe
aas
outsb
addr16
or
pop
push
or
or
nop
test
es
decb
cld
repz
jge
movsl
jae
icebp
cld
ret
push
cmp
call
sbb
sub
cmp
adc
mov
mov
out
insl
inc
bnd
push
push
std
push
outsl
daa
adc
sti
aam
sub
add
stos
ja
sbb
lock
mov
nop
jl
and
xor
fmuls
popa
add
shl
pop
xor
adc
mov
fisubl
push
sub
mov
test
lret
lds
ja
sub
or
test
lea
cmp
test
mov
das
jmp
out
adcl
movb
sbb
dec
movzbl
push
aam
push
pop
or
daa
pop
xor
xor
les
push
je
mov
pop
int3
push
out
scas
cmp
push
lods
xor
cld
fcompl
testb
pop
mov
stos
jne
into
out
lock
pop
in
lods
test
loop
and
out
mov
leave
cmpsb
or
xchg
mov
mov
adc
insb
jle
xlat
jno
ficoml
pushf
lea
int3
inc
and
adc
push
sbb
push
xchg
mov
into
pushf
xchg
jg
and
mov
xchg
fistps
or
daa
call
or
stos
call
int
lcall
stc
je
dec
cmp
ret
scas
push
jmp
add
adc
iret
or
clc
mov
into
or
cmp
push
inc
sub
outsl
fwait
adc
testb
pop
push
mov
dec
arpl
mov
jge
int3
out
push
push
jne
inc
into
das
icebp
or
mov
mov
pushl
inc
inc
pop
mov
mov
adc
jb
stos
cwtl
pop
stc
or
aaa
push
daa
scas
mov
stc
aam
cltd
sbb
and
pop
jnp
repz
adc
or
mov
lods
push
xor
push
rcrl
mov
std
sub
rolb
xor
fmulp
xchg
fs
sub
scas
int
mov
inc
cld
push
jge
shrl
mov
push
leave
pop
icebp
pop
in
addr16
inc
adc
jne
push
mov
lods
push
inc
fisubs
or
push
dec
addr16
pop
lcall
jo
jnp
add
and
shrd
add
aaa
dec
push
ljmp
pushf
and
fistpll
mov
popa
iret
bound
scas
dec
popf
rcr
jae
jae
pop
mov
pop
xor
inc
inc
jns
xchg
jbe
loopne
mov
mov
mov
lcall
pop
xchg
jge
jg
gs
lret
pop
pop
lret
mov
mov
pop
jecxz
subb
scas
add
loope
cmp
orb
je
adc
fistps
mov
sar
cmp
mov
fcmovbe
and
cli
leave
cmp
sub
dec
pop
scas
fwait
mov
inc
sub
xchg
ret
aad
lock
addr16
mov
jl
icebp
push
inc
pop
test
test
mov
das
bound
dec
out
in
push
lock
mov
fcomi
out
pusha
and
pusha
mov
and
cs
or
lds
ret
dec
jmp
test
push
shll
aas
mov
lret
jg
xchg
push
in
adc
add
sbb
push
fdivrp
and
cmp
cld
mov
xor
in
pop
arpl
xchg
add
dec
cmpsb
dec
or
mov
or
mov
in
inc
int3
or
std
testb
cld
inc
pop
or
or
sub
lret
stos
lahf
mov
push
ja
jmp
stc
xchg
ret
push
lds
addr16
and
dec
jecxz
inc
js
xchg
add
dec
out
mov
inc
cmp
sar
xor
add
jae
sbb
ja
xchg
das
addr16
jns
and
inc
fnstcw
mov
pusha
push
out
cmp
les
jo
mov
loope
dec
cli
pushf
mov
sub
sub
scas
mov
dec
dec
in
xchg
sbb
add
jl
testb
jl
lock
sahf
xor
pop
fidivrs
dec
lds
dec
imull
stos
sbb
push
xor
cmp
enter
sub
dec
out
inc
xchg
add
sbbb
pop
cmp
int3
rcrb
lcall
fwait
das
mov
in
add
cmpb
jp
cmp
push
mov
lcall
xchg
mov
cltd
rolb
aas
mov
fcmovnb
rclb
fwait
es
and
jmp
mov
mov
mov
xchg
scas
inc
iret
shr
loop
cmc
and
cltd
inc
popa
les
mov
pop
fldl2t
push
shr
push
aaa
adc
xchg
adc
jno
movsb
mov
mov
sub
jmp
nop
inc
addb
divl
pop
mov
les
hlt
lret
mov
cmp
shll
or
bound
xchg
repnz
push
aam
lcall
insb
or
popf
lock
cmpl
push
jl
ja
inc
xor
jmp
rcrl
scas
and
dec
loopne
xchg
mov
lock
lret
loop
jp
inc
fwait
pop
and
jg
cmp
adc
stos
incl
xor
fsts
pop
jnp
jbe
inc
mov
pusha
and
dec
in
cmp
shll
mov
loop
inc
pop
gs
sub
mov
push
loope
movsl
cmp
pop
dec
repnz
movsl
stos
mov
test
loop
mov
add
gs
and
negl
test
xchg
add
xchg
clc
insb
fisttps
cs
jge
test
jle
push
mov
or
sbb
dec
sbb
sub
cltd
dec
jp
sub
inc
fwait
aad
cmpsb
test
mov
push
popf
aad
loop
fcmovnb
sbb
pushf
jle
lea
xor
iret
movsl
in
xchg
imul
loope
xchg
adc
cli
or
ret
add
sbb
pop
mov
adc
outsb
dec
adc
subl
sti
pusha
mov
xchg
pop
xor
jnp
pushf
jg
popa
hlt
adc
fstpt
in
pusha
cli
add
xor
jg
cmp
push
popf
push
stc
mov
pop
lret
out
cmpsl
cmp
pop
popf
cmp
adc
test
mov
add
sti
mov
mov
jmp
fistps
adc
mov
push
jnp
pextrw
aas
cmp
repnz
xor
adc
mov
jo
ja
subl
jp
in
popf
mov
mov
fidivrl
xlat
push
xlat
adc
iret
cmp
mov
ret
inc
lock
lods
aas
dec
lcall
mov
gs
xchg
not
lds
rcrl
popl
push
sbb
cli
pushf
or
inc
in
mov
lcall
les
mov
scas
push
inc
mov
test
je
inc
shl
add
int
enter
push
push
and
aam
ja
push
xor
data16
pop
inc
lcall
loop
cld
xchg
insb
push
sbb
lea
ljmp
mull
pop
cmp
lret
fbld
ret
fcmove
test
or
das
addr16
cmpb
mov
call
lock
dec
mov
lock
in
xchg
outsb
sbb
in
xchg
add
mov
add
adc
cltd
adc
push
vpunpckhbw
mov
ret
push
sbb
bound
into
int
adc
push
lds
clc
mov
rcll
outsb
push
fldl
scas
fidivl
push
and
outsb
fwait
cmp
xor
icebp
push
cld
aas
stos
outsl
js
imul
pop
ja
fisttpl
cld
push
inc
cltd
dec
gs
lock
mov
clc
sahf
push
push
mov
cwtl
in
jns
mov
std
mov
cli
xor
stos
leave
inc
pop
test
daa
aas
jl
repnz
testl
sbb
lds
adc
pop
xor
push
es
mov
clc
cmp
cmp
sub
dec
inc
mov
sahf
lahf
mov
cmpl
jl
and
lret
out
mov
sbb
lods
or
or
and
add
xor
in
add
fstp
ljmp
mov
sbb
pusha
jmp
cmp
dec
jge
dec
cmp
jno,pt
or
stc
nop
repz
inc
std
shr
pop
sahf
int3
repz
or
mov
mov
cmp
je
push
es
cld
push
dec
inc
loope
insl
loop
insb
lret
pop
lock
push
mov
leave
and
stos
sbb
aad
sbb
incb
mov
pop
jns
mov
mov
das
ficomps
push
icebp
push
jne
and
rcr
sbbl
push
mov
not
dec
scas
in
test
sarb
xlat
mov
xor
es
fists
dec
out
out
leave
data16
sbb
pop
outsl
insl
xchg
cltd
fldenv
and
adc
xlat
mov
call
push
xor
add
cs
ret
outsb
add
mov
lods
mov
or
mov
lahf
icebp
fcompl
scas
xchg
mov
in
jp
mov
cmovl
pop
jge
popf
adc
shl
daa
mov
sub
pop
mov
xor
cwtl
aas
cmpsl
ds
pop
rcl
je
aas
lret
dec
fsubl
enter
and
clc
repz
insl
lods
lds
xchg
xchg
loope
dec
iret
aaa
sbb
faddp
in
fcomps
push
mov
inc
dec
jle
es
cmpsl
xchg
leave
jae
enter
scas
mov
fdivr
pushf
mov
dec
rcrb
mov
cs
jmp
jae
lret
mov
out
inc
imul
adc
adc
add
ret
aas
mov
jnp
xchg
lods
mov
pop
inc
sbbl
cwtl
loope
adc
ljmp
mov
cmpsb
into
imul
in
icebp
add
xorl
std
divb
lret
test
xchg
jecxz
hlt
mov
or
cmpsl
cmp
std
mov
cltd
ss
and
xchg
xchg
jmp
xchg
dec
fmuls
bound
imul
insb
imul
call
ret
xchg
dec
mov
and
lds
xorl
pushl
inc
xlat
add
push
xchg
mov
pusha
mov
jmp
push
fbld
fldenv
lock
into
fs
mov
es
sub
in
add
lret
stc
in
jns
call
add
dec
pusha
xchg
inc
push
imul
loope
mov
cmp
sbb
xor
cltd
imul
test
into
loop
xchg
mov
shr
xchg
sub
jle
rcrl
sbb
xchg
popl
pop
push
scas
cmpb
repz
push
popa
sub
bound
movsb
dec
mov
movsb
enter
ret
orl
aaa
in
rclb
jmp
outsb
and
mov
cmp
jg
xchg
jns
sbb
mov
popf
cs
sub
push
inc
pop
out
mov
cld
xchg
adc
jnp
nop
jno
sbb
nop
in
adc
mov
sub
dec
shlb
stc
xchg
lock
sub
adc
clc
js
push
je
jnp
jg
xchg
push
xchg
ja
pop
scas
mov
in
jecxz
fwait
arpl
call
popf
addb
dec
add
movsl
pop
test
mov
mov
push
jp
test
call
add
repnz
adcl
loope
jo
ja
mov
lea
iret
inc
adcl
add
cmp
stos
lret
xlat
xchg
ss
or
add
add
sti
push
mov
lods
arpl
addb
jnp
sbb
xchg
add
cmpsl
add
nop
cmc
sbb
cmpsb
adc
xchg
xor
mov
pmulhw
cmp
test
movsl
dec
mov
stc
in
inc
lahf
pop
scas
push
sbbl
lods
push
push
xor
ss
adc
mov
movsl
sbb
into
inc
jnp
add
xchg
dec
fisubrs
fadds
inc
sub
xorb
pop
cmp
nop
jb
dec
ja
popf
sub
dec
inc
mov
adc
arpl
pop
mov
xchg
test
clc
out
sub
out
stc
inc
cli
mov
fcmovnbe
push
out
and
stos
jmp
popf
pop
add
test
jmp
cwtl
mov
push
inc
fcmovb
dec
or
idivl
jl
pusha
outsb
cld
sbbb
icebp
sbb
lds
cmpps
mov
fcompl
pop
and
mov
lret
cmpsl
xchg
pop
cmpsl
in
and
scas
xor
out
adc
lods
adc
xor
push
inc
adc
incb
sbb
push
jno
inc
dec
jo
jecxz
pop
mov
notl
and
mov
inc
lods
or
mov
xlat
subl
lods
mov
xor
sbb
movsb
loope
jmp
mov
lcall
adc
lods
cmpsb
in
adc
ja
pop
call
xchg
mov
push
xchg
sub
and
and
daa
mov
stos
ja
xchg
mov
lret
xor
xchg
pop
cltd
fistpll
inc
imul
pop
add
popa
dec
xor
sub
movsl
daa
xchg
adc
add
roll
cmp
mov
sub
push
mov
sub
lds
test
lea
and
push
subl
push
xchg
sub
xchg
xor
dec
push
cmpl
pop
bound
adc
xchg
inc
out
mov
mov
mov
outsb
hlt
test
push
nop
push
dec
ret
jge
cld
into
subb
mov
mov
push
outsl
loop
sbb
mov
int
data16
repnz
cmp
add
dec
mov
incb
mov
push
push
imul
jb
iret
inc
push
inc
fdivr
jae
daa
push
imul
icebp
psubsb
jge
in
rcrb
repz
sarb
iret
xchg
shlb
add
or
jb
das
cmp
lock
repz
pusha
sub
sub
test
insl
fstpl
xor
or
pop
insb
add
aam
iret
add
lret
jb
test
and
cmp
pop
xor
jnp
mov
call
cmc
sbbb
mov
mov
dec
mov
jle
add
inc
aad
rorb
push
and
mov
xchg
or
add
mov
notb
nop
mov
filds
jp
sbb
fwait
lret
add
mov
pop
aaa
pushf
jns
inc
sahf
fldcw
push
jo
inc
cmp
adc
pop
pop
cwtl
roll
test
ds
int
dec
aam
mov
add
arpl
inc
aaa
test
in
jb
cmp
xor
inc
movsb
sarl
add
data16
or
sbb
std
mov
lods
lea
mov
pop
out
mov
or
daa
into
aam
xor
pop
mov
jo
mov
cmpb
xlat
ret
sub
pop
negb
mov
mov
icebp
pop
cli
push
cmp
pop
out
jbe
sbb
pop
add
adc
mov
in
lret
xlat
mov
or
sub
jp
jns
arpl
adc
xchg
nop
mov
dec
sub
das
mov
jmp
inc
into
ret
shll
sub
and
xchg
inc
or
mov
mov
xchg
mov
iret
or
sbb
fwait
cmp
add
cmp
clc
or
cmpsb
xor
sub
andb
je
adc
xchg
pop
ds
add
out
cmp
mov
mov
ret
outsb
cmp
sub
jg
out
and
sub
enter
cwtl
xor
into
push
push
xor
jmp
cmp
push
mov
push
add
push
clc
or
adc
les
mov
enter
testb
mov
push
ficoml
int3
push
or
sbb
lods
mov
cmpl
je
dec
fwait
cmpsl
dec
aam
lods
push
lock
je
fidivl
adc
lods
arpl
jmp
fcoms
pop
js
test
fbstp
scas
lahf
lcall
dec
xchg
xchg
pop
popa
das
jl
mov
mov
js
dec
stos
insl
std
and
adc
pop
lock
orb
xchg
or
call
imul
cmp
adc
dec
cmp
inc
nop
xlat
xor
testb
inc
into
lahf
in
inc
push
lret
sub
insb
lret
push
scas
ret
pop
sub
or
xor
push
or
mov
push
cwtl
pop
test
out
or
and
int
fistps
test
je
out
push
jb
lret
std
mov
mov
ss
fcmovnbe
repnz
imul
test
lods
or
call
fcmovnbe
repz
out
xlat
jnp
dec
cmp
push
test
arpl
test
add
lds
push
mov
out
jno
xchg
shl
adc
dec
mov
mov
jmp
aaa
push
push
stc
add
mov
gs
mov
lods
jne
mov
add
iret
aad
push
mov
pop
adc
fisttpll
or
dec
out
cmp
idivb
fcmovbe
lock
cmp
adc
stos
pop
dec
pop
adc
cmp
cwtl
int3
int3
arpl
mov
jecxz
stc
nop
incb
dec
pop
jns
andl
iret
push
in
jl
adc
mov
ljmp
hlt
and
test
bound
sbb
inc
insl
dec
loop
js
jge
cltd
add
pop
lahf
lret
shlb
addr16
test
sti
flds
mov
push
xor
or
jl
dec
je
loopne
inc
and
inc
mov
dec
cwtd
cwtl
rcll
in
lods
mov
mov
jae
fmuls
or
sub
rcr
xor
dec
icebp
mov
mov
stc
or
mov
cs
faddp
sbb
out
outsl
out
cld
pop
sub
xor
test
pop
mov
div
scas
add
push
mov
jecxz
xchg
jge
fucomp
xlat
data16
xchg
and
jb
sbb
nop
outsb
enter
stc
lcall
sub
pop
mov
sbbb
stos
fsubr
incl
jnp
inc
cld
das
addr16
push
xchg
xor
inc
cmc
xchg
movb
dec
add
movsl
int3
fisubrs
popa
pushf
add
xorb
mov
mov
mov
stos
subl
add
dec
mov
pop
mov
loope
imul
enter
cld
outsb
jnp
fcomps
stos
jp
mov
divb
pop
icebp
push
icebp
mov
addps
fcompp
stc
shl
les
cs
sbb
sbbb
cmpsl
in
jge
xchg
mov
dec
dec
mov
xchg
dec
movsb
dec
mov
xor
push
sub
adc
fldcw
cmp
jl
sbb
adc
adc
and
mov
pop
jb
dec
or
insb
cwtl
addl
movsb
xchg
cmpsb
out
inc
jne
or
jne
sbb
dec
push
mov
aam
lcall
lds
cmp
pop
add
and
jge
push
jb
push
fiadds
xchg
cmp
mov
adc
mov
xchg
cmpsb
arpl
insb
mov
sbb
mov
jl
inc
pop
mov
sti
xorb
or
dec
or
gs
data16
incl
push
dec
fstpt
rorl
push
in
mov
push
shrl
jae
pop
mov
inc
rorb
xchg
lret
sbb
mov
outsb
fnstsw
mov
or
mov
jl
pop
aam
aad
push
jecxz
ss
xchg
mov
cmpsb
mov
imul
sbb
aam
addr16
push
xor
xchg
mov
push
out
js
cmpl
cs
xor
push
sub
fsubl
punpcklwd
xor
jp
dec
pop
mov
adc
jnp
bound
imul
xor
xor
mov
rol
xor
xor
cmpsl
cs
pop
cmp
fidivs
or
fucomp
mov
lret
subb
stos
ficoms
test
pop
dec
sub
inc
shll
adc
in
mov
and
scas
cmp
sub
push
ljmp
sahf
ss
jge
lahf
sub
idivl
hlt
pop
mov
stos
bound
cmp
add
ds
sbb
fstl
and
call
add
xor
adc
mov
xlat
add
sub
pushl
ret
pop
clc
jg
add
nop
test
and
add
imul
incb
mov
data16
iret
sub
fcomi
mov
and
icebp
ja
cmp
cwtl
stc
ficompl
xor
cmp
dec
cmpsb
mov
push
and
push
cs
mov
inc
ds
cmpb
xchg
fs
adc
cmpsb
jb
xor
movsb
out
shll
or
sbb
out
xchg
icebp
mov
aaa
sti
pop
fdivrs
xchg
mov
adc
or
dec
cmpsl
mov
cmp
cmc
js
mov
fdiv
mov
in
clc
sahf
inc
fcompl
lods
movsl
mov
xor
mov
jnp
cld
push
dec
mov
cmp
ret
sbbb
aam
inc
push
stos
test
dec
xchg
movsb
fisttps
mov
andl
xchg
rcll
dec
js
mov
lahf
push
lods
cmp
outsb
popf
in
inc
pop
ret
gs
cmc
push
leave
jl
sti
xchg
xchg
popf
push
jmp
or
cs
pop
test
jp
adc
ja
pop
js
dec
jl
inc
fdivr
loopne
std
out
or
lret
rcrl
stos
or
sub
jne
hlt
jg
sbb
add
repnz
aas
jne
ja
rorb
stc
cmpsl
popf
xor
push
push
push
push
fwait
jb
movsb
mov
mov
lock
xor
inc
iret
fs
ss
test
ds
mull
cs
mov
jns
xor
mov
sub
add
popa
pop
shl
add
jno
jbe
xor
mulb
inc
sbb
insl
int
pop
lret
jns
daa
fcmovbe
mov
cmp
rcl
bnd
push
xchg
fstpl
mov
adc
mov
jo
dec
inc
sti
imul
aad
jae
inc
adc
pop
or
pop
rcll
popf
pop
clc
test
add
jg
test
rclb
scas
in
adc
xor
fs
je
jbe
add
jae
data16
adc
cli
push
test
add
sub
push
mov
div
sub
mov
ljmp
pop
lods
inc
stos
mov
xchg
mov
add
lea
cmp
jo
mov
adc
pop
enter
mov
lea
mov
es
rol
mov
push
mov
push
ret
cmp
loopne
pop
fs
mov
mov
and
imul
imul
or
push
cmp
adc
and
movsb
cmp
sbb
dec
out
sti
imull
xchg
daa
inc
mov
jo
and
ds
test
and
repnz
mov
xlat
popa
xor
adc
out
call
jmp
in
push
sarb
mov
scas
add
cmp
xchg
lods
mov
push
pop
xlat
or
aam
xchg
lret
mov
pop
mov
pop
outsb
loope
mov
adc
loopne
ret
add
mov
push
xchg
adc
fldenv
iret
iret
subb
or
and
xchg
daa
int
add
ret
push
aaa
cmp
mov
scas
mov
pusha
and
cmp
cmp
jae
add
pusha
divl
or
xorl
pop
jbe
cmpsb
inc
xlat
xlat
cmpsl
adc
push
mov
fstpl
std
xchg
es
mov
dec
sbb
jbe
push
sub
xor
int3
fs
sbb
invd
jg
add
sub
lret
hlt
pushl
sub
cmp
dec
sub
add
adc
cmpsl
scas
inc
fdivrs
int
sti
xlat
push
call
jb
outsl
mov
jo
mov
int
lds
out
push
icebp
add
sahf
sti
cmpsl
mov
pop
add
addr16
sbb
push
fbld
gs
mov
push
movsl
leave
shll
ljmp
loope
push
out
mov
add
jecxz
xchg
mov
mov
jecxz
repnz
mov
test
pop
insl
sub
into
fwait
stc
inc
and
sub
push
sti
dec
int3
xor
inc
push
cmpsl
pushf
aas
push
or
add
mov
xor
xchg
push
ret
aaa
jae
jmp
mov
ljmp
xchg
cltd
stc
inc
dec
mov
xchg
ljmp
icebp
je
mov
xchg
data16
test
xchg
andb
add
cmp
std
insl
inc
dec
jge
xchg
sub
pop
jp
loopne
sti
dec
dec
lods
andb
daa
movsb
int
dec
pop
jg
mov
xchg
and
pop
pop
xchg
out
gs
call
and
jecxz
inc
push
pop
push
inc
or
in
rclb
pop
hlt
sbb
jecxz
sub
sub
insl
inc
jge
mov
cmp
jno
mov
rolb
sahf
clc
mov
cmc
jp
cmp
fisubrs
addr16
mov
xor
xchg
jge
inc
pop
sarb
pusha
addl
push
sbb
pusha
into
enter
cmpsl
icebp
dec
iret
jecxz
stos
fcomps
into
bound
movl
movsb
push
cmpsb
xchg
sub
xor
pop
mov
sub
lods
inc
iret
xor
outsl
test
inc
fimull
fistpll
iret
cmp
sbb
jns
imul
jl
es
ss
pop
mov
fs
push
sub
and
mov
ret
scas
inc
push
out
mov
and
mov
jne
push
add
inc
xor
ds
cmp
add
sub
in
add
mov
lods
or
jmp
mov
mov
fsubp
mov
jne
pop
repz
mov
je
cltd
push
or
xor
mov
aam
push
movsl
jne
adc
adcb
cmp
in
sbb
or
dec
mov
repz
scas
cld
loop
loop
dec
into
std
add
ja
ljmp
in
sub
sbb
mov
jp
cmp
in
add
fidivrl
mov
lods
cld
lock
arpl
loopne
or
push
pop
mov
inc
mov
sbbb
mov
imul
xchg
sbb
lods
popa
xlat
add
lds
aad
cmp
lea
es
aam
dec
in
stc
nop
ss
mov
or
mov
push
testl
adc
xchg
inc
xchg
sub
sbb
and
jp
mov
das
cmp
add
xor
outsb
aad
xchg
clc
iret
inc
pop
mov
iret
imul
jl
addr16
push
and
aas
lea
adc
lds
fwait
dec
dec
dec
jo
fsubl
inc
pop
push
scas
out
pop
add
mov
mov
adc
sub
pop
xchg
jo
les
cmp
jecxz
mov
imul
mov
mov
inc
lret
xchg
test
js
adc
mov
frstor
and
movsb
and
xor
mov
pop
mov
push
in
cltd
inc
pop
leave
fldenv
pop
jae
mov
shrb
sbb
popf
jnp
xchg
and
gs
jns
pop
adc
or
mov
movsb
xlat
cltd
sar
arpl
mov
xchg
dec
cmp
jmp
inc
scas
dec
mov
push
and
mov
fs
and
pop
push
or
push
lahf
bound
cli
cmp
lret
outsb
xchg
xor
push
movsb
je
inc
and
ret
fbld
inc
inc
lods
pushf
cmp
dec
mov
bound
xor
jl
or
mov
sbb
mov
movsb
mov
cmp
loope
leave
push
jmp
cmpsb
xor
mov
xor
jmp
popa
clc
jae
mov
testb
cmp
dec
rcll
xchg
decl
cld
jle
insl
lods
mov
sbb
mov
enter
adc
sahf
lahf
bound
push
ss
or
inc
popa
loop
push
fwait
mov
cli
aaa
mov
inc
out
sub
ljmp
addr16
add
mov
push
push
sub
fcomip
lcall
and
stos
ss
or
jbe
lret
sub
popf
pusha
lret
jb
shrl
jnp
gs
addb
notl
in
dec
pop
or
pop
imul
adc
xchg
in
sbb
push
add
xchg
pop
aaa
xor
ljmp
jle
push
jno
xchg
cmp
adc
and
popa
in
ja
xor
mulb
xlat
stos
into
sbb
pop
add
adc
out
lds
inc
xchg
lahf
sahf
cmp
dec
faddl
cmpsl
lret
jecxz
ret
and
ret
jp
hlt
inc
dec
arpl
insb
adc
shl
arpl
mov
outsb
pop
sbb
or
stos
hlt
inc
xlat
std
imull
jg
mov
shll
int
lock
inc
aam
repnz
or
mov
gs
aad
dec
subb
movsb
pop
mov
imul
sbb
cld
arpl
dec
adc
mov
fdivl
push
scas
push
jle
jne
add
push
pusha
stc
inc
sub
mov
das
or
push
movsl
je
xlat
jae
lret
movsb
pusha
ja
sbb
adc
popl
int
in
cmp
fcmovbe
mov
out
cmp
pop
inc
adc
mov
out
ror
lret
or
push
mov
outsl
jns
dec
push
pusha
sbb
xchg
mov
les
or
xor
xchg
dec
xlat
add
hlt
and
mov
inc
adc
lds
cld
loope
pushf
adc
icebp
inc
pop
cmp
out
out
jbe
cmc
cmpsl
adc
pop
cmpsb
mov
xchg
dec
clc
push
jbe
inc
movsl
ret
mov
int3
and
push
jmp
and
jne
mov
rorb
scas
int
xchg
lcall
push
mov
adc
xor
movsl
je
dec
xchg
jmp
push
mov
cmpl
mov
ror
sbb
push
jge
or
cltd
xchg
popf
xchg
rorl
out
jmp
push
outsl
mov
and
cmp
xchg
jne
pop
sahf
jae
lds
leave
xlat
jb
mov
xchg
dec
in
lods
push
and
sbb
mov
adc
xchg
xchg
jg
je
jle
mov
inc
loopne
ret
mov
into
inc
cmpsl
xor
fwait
sbb
icebp
mov
hlt
ss
xchg
sub
cmpsl
xor
subb
fldcw
int
add
xchg
lret
loopne
xor
dec
add
jne
fs
outsl
mov
pushf
scas
rcr
mov
push
adcb
jp
adc
shrb
jae
xchg
and
fidivrs
fimuls
jb
mov
mov
pop
js
mov
dec
dec
movsl
imul
int3
lret
pushl
push
or
daa
in
pop
iret
arpl
sub
jno
mov
movsb
testb
sub
and
push
push
fisubrl
dec
aas
insl
lock
fstpl
out
lock
inc
cmp
mov
xor
test
or
mov
fs
jmp
out
inc
in
ds
fsubs
out
push
rcrl
fwait
mov
xchg
ds
push
call
lock
mov
sbb
rol
out
sbb
cmp
push
out
jecxz
call
in
dec
ss
push
sti
sbb
pop
push
jnp
xor
add
lahf
xchg
inc
sbbl
lahf
mov
or
sbb
inc
pushf
cltd
lahf
inc
fisttpl
adcl
cmp
in
push
and
test
addr16
sub
ds
inc
arpl
push
out
imul
push
aas
adc
lods
sbb
xor
pop
idiv
test
jle
int
es
popa
out
mov
cs
add
neg
jge
stos
adc
pop
js
xor
cmp
jne
ret
dec
mov
popa
je
repz
add
call
jnp
or
sbb
pop
cs
iret
xlat
sbb
pop
repz
xor
ja
icebp
sbb
imul
push
iret
subb
pop
mov
push
je
aad
push
in
mov
inc
aaa
mov
cmp
stos
popa
xor
mov
push
inc
aas
push
sbbb
inc
loopne
dec
shll
push
into
sbb
stc
and
call
sbb
in
mov
adc
dec
ss
adc
add
out
mov
or
loop
out
xchg
ljmp
scas
sub
stc
pop
or
pop
and
sub
xor
mov
rorl
jecxz
sub
jnp
cld
lcall
in
jl
in
add
add
cmpsb
popf
xchg
popl
lock
je
popf
inc
fisttps
adc
mov
sub
pusha
or
test
test
adc
rolb
in
push
xchg
jno
adc
pop
ret
pop
add
cwtl
add
imul
jge
cmp
repz
fneni(8087
sbb
in
or
stc
in
movsb
jge
iret
or
inc
xor
scas
jb
cli
dec
jmp
push
js
or
rcll
or
iret
push
mov
sti
push
out
outsb
enter
lea
repz
insb
add
jb
ds
out
call
rcrl
cmp
cmp
gs
insl
frstor
jle
xor
xlat
cld
add
dec
or
lods
xchg
adc
mov
and
jne
mov
or
pop
lcall
and
jbe
and
dec
out
sub
pop
addr16
movsb
lcall
fcomp
inc
fbstp
jge
ds
lods
cld
adc
jne
iret
fsubrl
int3
sub
or
jle
in
sub
xchg
lods
dec
dec
insb
xorb
insl
sahf
adc
sarb
in
mov
or
jno
les
sti
xchg
sub
cmc
leave
cmc
mov
inc
push
dec
push
popf
or
and
rorb
jmp
add
sbb
icebp
or
pop
xchg
cmp
decl
and
sbb
sbb
in
imul
in
lods
mov
iret
outsl
inc
add
lea
imull
cwtl
and
or
mov
sahf
xchg
add
dec
loope
sbb
cmp
cs
jl
loope
xchg
popf
sbb
cmpsl
stos
scas
jno
jnp
xchg
mov
fdivrs
push
jnp
sbb
mov
xor
mov
ja
ss
xchg
std
jne
jg
cltd
and
adc
pop
gs
sbb
outsb
add
mov
mov
jno
aas
pop
mov
iret
add
les
pop
aas
testl
mov
shl
lret
sahf
clc
das
subb
clc
sbb
mov
orb
rorl
in
bound
lret
mov
stc
test
jmp
sub
jmp
xorb
daa
jge
pop
scas
andb
xlat
jnp
ret
mov
testb
std
mov
lret
adc
fistpll
sub
scas
cmp
movsl
icebp
or
inc
fidivrs
loop
fistpll
cmp
and
jno
mov
pop
pusha
cmpl
push
or
push
lret
mov
sbb
push
sub
mov
pop
mov
stos
repz
or
mov
pop
fildl
sub
sti
mov
loope
call
pop
jge
adcl
add
lret
scas
fidivs
addr16
push
aaa
lret
pop
cmc
imul
sbb
xchg
xchg
gs
inc
data16
mov
mov
lahf
mov
aam
clts
filds
icebp
ss
icebp
mov
mov
mov
aas
pop
cltd
xchg
jo
inc
mov
sarl
jle
das
lcall
pop
cmc
jl
mov
les
cmp
adc
nop
test
das
sbbl
in
or
repz
insb
sti
jne
cmp
int
lret
pop
loopne
popa
xor
cmp
push
inc
or
push
dec
xchg
es
or
xor
or
shlb
sub
fdivp
shrl
mov
iret
mov
mov
sub
lds
pop
jmp
xor
add
mov
test
xor
jbe
adc
leave
popa
stos
std
cmp
xor
pop
ret
iret
sbb
push
inc
jecxz
add
sbb
lret
data16
repz
bound
cli
mov
int3
xchg
gs
and
lods
in
shll
in
insl
test
push
cwtl
add
lcall
clc
orl
in
jns
in
and
mov
sbb
bound
push
jns
pop
jbe
lcall
lcall
sub
and
pop
or
add
sub
mov
mov
js
adc
dec
add
push
jmp
ljmp
pop
scas
mov
or
add
sub
inc
xor
push
out
dec
out
inc
fucomp
call
aas
and
dec
and
mov
dec
sahf
add
mov
adc
clc
mov
or
adc
popa
dec
pusha
pop
cmp
loopne
lret
dec
dec
imul
div
test
jbe
xor
fiadds
xlat
mov
in
cmpsb
pop
stos
pop
xor
and
outsl
push
leave
insb
mov
lods
jecxz
das
and
push
nop
pusha
cmc
mov
inc
mov
rorb
stc
aaa
pop
cs
push
sbb
xchg
stos
in
dec
loop
loop
ds
adc
stc
cmc
push
or
xchg
insb
fiadds
mull
leave
ret
lret
jg
data16
out
or
cwtl
pop
cmp
pop
lods
jg
push
ret
nop
fcoml
xchg
sbb
outsl
lods
out
xchg
cmpsl
dec
dec
pop
lea
mov
push
xor
pusha
ret
mov
pop
gs
ds
popf
cld
aad
mov
xchg
ret
insl
fldcw
in
jae
stos
mov
pop
sub
or
pusha
add
jl
out
pop
pop
jmp
or
ss
sbb
add
inc
pop
lea
push
xchg
dec
loopne
mov
stos
mov
and
sbb
outsl
xor
lock
leave
mov
jne
lods
fsubrp
xlat
mov
xor
fwait
jmp
mov
xor
xor
jnp
xchg
pop
pushl
or
icebp
or
lret
cld
pop
call
fisubl
insl
cmp
or
inc
mov
aas
push
jecxz
xchg
outsl
sahf
adc
shlb
pusha
ss
add
inc
test
inc
lea
sarl
das
inc
push
and
and
dec
ficompl
loope
and
and
dec
sti
mov
stos
add
mov
pusha
xor
jne
mov
popf
and
sub
shll
stos
adc
movsb
dec
mov
mov
std
dec
cmpsb
jl
aaa
int
fldt
shlb
stos
imul
divl
das
mov
sub
push
lahf
or
das
xchg
shll
sub
sub
addr16
ror
dec
idivb
aad
push
pop
push
and
scas
xchg
dec
cmp
sbb
dec
rcrl
or
mov
jns
ds
or
lds
cs
shll
push
pop
enter
pop
add
lds
je
dec
lret
clc
and
inc
subb
add
or
inc
data16
mov
cld
leave
lahf
les
lcall
and
push
add
outsl
mov
push
cwtl
mov
mov
push
pop
xchg
ja
dec
cmp
aad
movd
push
lock
into
gs
stos
lds
loopne
xchg
js
call
imul
cld
mov
and
jno
sub
setp
add
jnp
mov
xor
inc
cmp
lcall
sbb
pop
inc
cmp
test
in
dec
cld
rol
xchg
adc
movsb
fstpt
les
lcall
push
jb
lods
inc
pop
xchg
add
mov
pusha
mull
mov
jg
xor
mov
call
adc
iret
add
pop
mov
fdivl
rolb
fmul
push
push
sbb
out
cmp
lock
lahf
sbb
mov
dec
outsb
mov
jl
inc
data16
push
je
inc
mov
imul
mov
xor
stc
lret
arpl
xchg
xchg
dec
cmp
divb
sub
mov
aas
jp
pop
inc
in
dec
lock
pop
jbe
inc
or
test
xchg
shll
push
sar
mov
cli
addr16
rol
xchg
push
add
mov
testb
jge
enter
pop
imul
stos
ret
ficompl
mov
ret
fsub
imul
lea
in
dec
xchg
pop
arpl
xchg
jae
fstpt
pop
jb
inc
call
inc
inc
push
ljmp
jb
pop
inc
mov
jb
lcall
sbb
lahf
ss
stc
in
icebp
loop
inc
and
das
iret
mov
pop
jb
jnp
ljmp
insl
aad
sub
es
in
add
inc
out
fmull
dec
dec
mov
dec
repnz
test
sub
popf
dec
aam
aam
sbb
popa
mov
pusha
lret
cmp
pop
cmp
rcr
sarl
jo
inc
test
pop
outsl
add
iret
lret
or
lods
int3
fcmovnbe
push
or
out
loop
inc
dec
xor
inc
jns
and
sbb
leave
mov
xchg
outsb
sahf
sbb
add
mov
icebp
movsl
scas
jg
inc
es
js
rclb
mov
push
in
sub
push
addr16
mov
xor
jmp
out
test
sbbl
mov
and
xchg
insb
jge
pusha
push
sub
inc
cld
or
aaa
lea
jnp
push
movsl
cmp
testb
in
ljmp
push
test
inc
out
inc
fstp
sbb
mov
cmc
push
xchg
sub
pusha
sbb
mov
outsl
push
out
push
xchg
sub
ds
sbb
scas
out
push
std
xchg
inc
jb
in
sbb
mov
lock
push
sub
inc
jno
gs
mov
push
dec
xor
cmp
mov
and
jns
or
jae,pn
lock
fcomps
bound
jle
cmp
mov
xchg
mov
sub
jl
mov
aad
inc
xchg
dec
adc
jne
lods
fidivs
push
es
add
je
push
ljmp
ds
sub
push
iret
jle
sbb
push
cmp
pop
shrb
fdivl
pushl
or
xor
mov
mov
mov
cmp
pop
sbb
mov
insb
mov
jl
stos
aas
into
adc
jl
or
and
xor
ret
and
idivb
cmp
lret
xchg
xor
lret
dec
pop
cmp
pop
jo
add
sbb
lea
fisubrl
fsubrs
mov
popa
adc
mov
sti
jp
mov
icebp
xchg
push
inc
inc
mov
imul
repnz
data16
mov
xor
push
bnd
and
jnp
stc
push
sbb
gs
loopne
mov
ficoml
push
stos
inc
xchg
dec
in
dec
add
cli
stos
xor
adc
lods
jo
or
mov
cwtl
out
lods
dec
push
test
aad
jns
ret
movsl
cmp
lds
das
insb
cltd
cmp
and
loope
xor
adc
data16
xchg
xor
push
mov
jle
lds
pop
push
in
cmpsb
dec
xchg
ljmp
insl
scas
cld
adc
mov
sub
aas
jo
test
fisttpl
icebp
loope
cmpsb
repz
jns
addr16
lock
mov
and
adc
jbe
mov
dec
jo
popl
addb
stc
stos
mov
dec
or
sub
add
lcall
xor
les
sub
jne
mov
mov
popf
push
push
pop
out
inc
out
testb
cmp
std
sahf
xchg
aas
mov
mov
clc
es
xorl
sbb
in
dec
pop
call
pop
out
jne
and
mov
push
in
dec
out
icebp
clc
cmp
cmpsl
mov
mov
ret
mov
or
repz
mov
adc
dec
inc
cli
inc
shl
xchg
mov
mov
out
mov
jbe
sbb
lret
cmpsl
xor
dec
lds
mov
iret
orb
cmc
add
pop
push
dec
test
dec
sarb
lret
aam
jo
fiaddl
adc
xchg
jns
imul
pop
orb
in
xor
dec
pop
in
les
pop
and
les
dec
outsb
pushf
push
xor
xchg
hlt
pop
mov
je
arpl
pop
sub
xlat
into
call
cmp
mov
jp
inc
xor
or
inc
or
push
push
adc
iret
xchg
xor
ret
push
leave
fdivrp
push
ds
add
testb
or
mov
fnstcw
sti
fadds
jge
in
mov
fsubrl
daa
test
insl
mov
enter
leave
mov
jbe
in
filds
lds
addr16
push
xchg
and
aaa
js
test
mov
pop
mov
fidivl
lods
enter
dec
bound
sub
pop
iret
popa
xor
cmpsb
mov
int
and
loop
mov
adc
addr16
fimuls
jmp
scas
jne
lret
mov
pop
or
inc
push
ja
call
subl
in
into
int
dec
and
mov
push
inc
aaa
or
xchg
adc
sub
pop
call
dec
lea
neg
in
rclb
mov
xor
iret
fwait
imul
adc
or
dec
aam
mov
or
push
xchg
movsb
xchg
lahf
pop
jo
add
add
jns
jbe
sub
mov
sbb
mov
cld
adc
or
insl
jge
test
fdiv
cmp
lods
add
mov
dec
cmp
daa
jno
scas
jno
add
add
sbb
xchg
add
cmp
rep
sbb
dec
les
xchg
sub
out
add
or
dec
adc
cmc
jle
imulb
adc
mov
sub
daa
sub
dec
push
pop
call
insb
mov
out
in
push
mov
iret
push
push
imul
ja
out
push
outsb
andb
cmc
xor
pop
shlb
mov
sbb
movsb
ja
sbb
inc
arpl
aas
ljmp
adc
ljmp
xlat
or
cmp
pop
movsl
js
inc
into
fiaddl
jecxz
push
xchg
mov
jne
push
xchg
mov
fnsave
sahf
dec
sub
lcall
cmpsl
xchg
daa
cmp
mov
mov
dec
mov
sti
mov
gs
inc
inc
fmul
jae
fsubrs
xchg
incl
and
push
jg
inc
mov
jnp
sbb
popf
ret
xor
arpl
in
divl
xor
mov
xor
insb
xchg
sub
xchg
fistpll
outsb
stos
jg
fwait
ds
mov
mov
adc
mov
scas
outsb
or
cmp
hlt
inc
jmp
push
and
out
xchg
jle
and
in
clc
mov
adc
testl
sbb
ss
movsb
lahf
js
inc
adc
sub
xchg
jecxz
outsb
pop
cmp
aad
das
sub
or
jle
in
cmp
pushf
int
out
cmpsl
xor
stos
mov
fistpll
dec
mov
fcmovu
rol
loop
mov
cltd
pop
aad
cmp
xor
add
test
or
test
fs
xor
ret
filds
and
add
inc
cwtl
mov
dec
imul
lds
cmp
into
mov
adc
xchg
xor
adcb
into
mov
insl
dec
cs
mov
fcompl
mov
pop
popa
mov
or
jmp
sbb
daa
cmp
xor
into
push
cmp
in
popf
cli
sub
pusha
mov
mov
mov
ret
dec
jge
jg
nop
gs
outsb
and
neg
push
add
xchg
push
subl
pop
pop
cltd
cmp
inc
cmp
sub
lods
ljmp
es
dec
sbb
pop
test
xchg
inc
cmpl
push
popa
into
daa
xchg
or
inc
iret
xlat
and
cwtl
js
mov
out
decb
nop
fscale
mov
int3
scas
loope
mov
xchg
out
je
lods
hlt
or
push
jb
test
inc
xlat
pop
repnz
sbb
mov
repz
sub
push
sub
lahf
add
test
xchg
jecxz
int
add
ja
in
into
sbb
fwait
add
pop
inc
sbb
test
xchg
adc
mov
xor
cmp
arpl
xchg
xchg
sub
rorb
enter
sbb
mov
out
aas
xlat
xor
in
dec
stc
nop
jg
stc
or
adc
into
gs
scas
out
jnp
dec
addr16
dec
ja,pn
fisubs
and
sub
in
test
int3
sub
std
sbb
mov
xchg
or
out
test
cmpsl
mov
sub
or
mov
jo
add
ss
call
cli
test
cmp
jmp
js
les
rol
sub
int3
mov
sbb
scas
jns
hlt
rcrb
cs
or
aam
daa
mov
scas
sub
lds
mov
dec
shrl
add
xorb
and
xchg
icebp
sub
dec
push
add
mov
mov
cmp
outsl
push
mov
adc
mov
inc
jns
test
inc
and
in
mov
cmp
mov
pop
cmp
adc
pop
adc
loope
sbb
ljmp
or
insb
hlt
test
adc
push
jns
loope
ljmp
repz
lods
inc
jbe
movsl
inc
jle
sahf
clc
cs
push
jmp
je
jp
fdivl
fldenv
or
imul
jns
rcl
ja
fucom
pop
lret
cld
loope,pt
outsl
mov
xor
clc
and
sbb
inc
fwait
jg
jge
iret
jle
mov
jl
fmuls
jecxz
fistpll
mov
cmp
push
cmc
sbb
scas
mov
outsl
mov
push
filds
mov
scas
add
mov
mov
leave
int
sti
and
and
jae
lahf
sbb
sub
pop
fidivl
fsubr
daa
mov
xor
insb
or
push
sub
out
xor
sub
and
xor
ljmp
lods
push
gs
pusha
out
mov
mov
sub
pop
sbb
mov
sub
push
les
xor
adc
int3
addl
xor
lods
push
xor
add
sub
aad
xor
pop
ja
jmp
dec
test
les
jae
es
daa
out
stos
lods
inc
sbb
push
mov
jb
cmpsb
mov
js
fxch
vminpd
lods
test
mov
arpl
cmc
pop
mov
push
shr
repz
inc
call
sub
or
push
lock
dec
jecxz
adc
loop
fdivrs
cld
pushl
jo
inc
push
lret
cmp
ljmp
xchg
fs
fwait
insl
mov
enter
addr16
add
mov
icebp
int
loopne
dec
sbbl
xchg
xlat
cmp
mov
xlat
out
je
pop
jge
jp
mov
rcrl
leave
pop
lret
in
mov
push
sbb
jno
cmp
orb
sub
pop
in
popa
xor
pop
scas
inc
pop
add
xor
dec
push
iret
ja
enter
dec
movups
mov
cmpsl
iret
outsl
cmp
leave
rcrl
push
cmp
fbstp
dec
or
lods
scas
and
cltd
adc
inc
jae
add
dec
popf
xchg
pop
add
mov
cmp
mov
mov
mulb
cmovl
das
mov
xchg
cmc
enter
mov
std
mov
adc
rorl
mov
inc
inc
jge
push
mov
push
stos
xchg
sahf
jbe
xchg
xor
add
dec
cmp
sbb
fwait
outsl
sub
shll
cmc
adc
xor
jno
jmp
sahf
stos
das
out
add
sub
push
add
sub
bound
popa
adcl
xor
imul
pop
or
repz
sti
inc
jle
fiaddl
pop
lock
pop
es
gs
outsb
ret
pop
sbb
aas
mov
gs
mov
adcl
sub
xor
add
sub
jge
ds
sbbb
xchg
js
lret
pop
gs
xor
in
xchg
pop
hlt
test
test
mov
enter
lahf
xor
lock
movsl
pop
push
stos
push
aad
sbb
jg
xor
out
pop
insl
cmp
cmpl
jb
add
xchg
cmp
dec
dec
sar
cwtl
add
inc
mov
cli
decl
xchg
cld
xor
sarb
cltd
push
pop
or
mov
mov
out
sbb
aad
xor
xchg
insb
js
push
cmp
jmp
sbbl
test
int
mov
jl
stos
mov
aaa
add
cmpsl
roll
fimull
push
aam
push
add
loopne
shl
lahf
pop
cmpsb
lahf
neg
sar
xor
dec
jg
lahf
sbb
fsubr
pop
cltd
insb
int3
aaa
fisubs
cwtl
std
iret
leavew
mov
fisttpl
ljmp
sub
pop
mov
jb
cmp
andb
or
cmp
gs
stos
xchg
adc
cmp
andb
jecxz
ja
xchg
pop
adc
push
add
sbb
and
mov
ds
scas
or
adc
cmc
push
push
jmp
mov
jmp
sbb
dec
in
adc
leave
and
push
pop
mov
fldcw
add
mov
jbe
push
and
xchg
jbe
push
test
jno
fnstenv
sbb
dec
sti
adc
pop
sbb
insl
aas
mov
mov
pop
and
hlt
in
push
leave
rcll
jo
pop
call
out
loopne
jbe
push
inc
outsb
iret
inc
jbe
inc
xchg
aaa
mov
loop
imul
sub
fstps
pop
push
enter
dec
negl
jmp
repnz
and
aaa
dec
out
xchg
pop
cld
and
adc
cmc
dec
inc
movsl
icebp
pop
or
ja
or
aaa
and
mov
or
adc
ljmp
orb
push
outsb
idivl
nop
cwtl
mov
imul
cmpsl
or
scas
arpl
mov
mov
sbb
xchg
mov
sbb
out
add
call
jnp
setnp
push
divl
movsb
out
jno
pop
out
cltd
dec
sbbl
lcall
in
ficomps
shl
je
mov
dec
fcmovnu
test
jl
in
mov
jle
mov
mov
or
repnz
jl
mov
add
in
orl
imul
push
js
mov
out
mov
or
test
rol
rcrb
mov
cmc
addr16
out
shrb
movsb
inc
xchg
cmp
sub
testl
dec
roll
jae,pt
rep
pop
shlb
rcrb
and
xchg
std
jnp
adc
movsl
xchg
fwait
int
xor
loop
stos
sahf
aaa
idiv
pop
mov
insl
add
movsb
xor
lods
enter
sbb
divb
push
out
dec
xor
add
and
mov
imul
or
or
mov
mov
cmpsb
mov
ret
jge
les
bnd
pop
leave
fs
fdivrl
imul
fistl
stc
popf
subl
dec
pusha
xchg
jle
popf
lods
and
push
adc
and
jg
cmp
int
rep
lret
xchg
icebp
jg
sbb
jp
cmp
jnp
insb
sub
pop
push
pop
iret
arpl
xchg
jo
repnz
lds
inc
popa
mulb
fdivrs
or
loope
mov
inc
fists
cmpsb
xchg
into
faddl
jmp
xchg
scas
ja
cmp
cmpsb
fidivs
test
mov
fwait
leave
pop
mov
mov
xchg
and
inc
pop
repz
and
jp
bound
enter
das
addr16
data16
mov
dec
imul
add
mov
pop
sbb
sahf
push
mov
cld
outsl
ud0
pushf
sub
outsl
movsl
mov
mov
subl
lahf
test
fdiv
lahf
dec
mov
ja
out
dec
fdiv
andl
mov
stc
pop
repz
jnp
test
dec
mov
leave
xchg
add
push
adc
ja
out
cmpsl
incl
xchg
fcomip
out
sub
mov
mov
inc
bound
pushf
cli
sub
xor
fxam
sbbb
dec
jmp
xor
mov
sub
pop
into
fidivrl
cmc
adc
pop
push
movsb
sti
push
insl
push
in
mov
jnp
leave
aad
sti
and
std
inc
not
mov
push
enter
xor
xchg
jmp
jo
push
data16
outsb
insb
das
int3
pop
cmc
adc
arpl
xchg
cld
xchg
cmp
xchg
stos
xorb
icebp
and
mov
push
xor
inc
ss
mov
pop
pop
mov
and
and
sub
mov
hlt
ja
lods
mov
xor
scas
inc
xchg
inc
ljmp
inc
fsubl
mov
ds
inc
pop
addr16
dec
push
xorl
push
fwait
cld
fimuls
jmp
mov
scas
fs
dec
pushf
adc
sub
jle
xlat
jb
lahf
mov
loope
repz
repnz
test
inc
mov
jg
push
popa
lret
ss
mull
imul
or
inc
out
in
mov
push
xchg
pop
and
dec
xor
xchg
sbb
add
aaa
out
mov
gs
mov
lods
and
ljmp
repnz
stos
push
adc
or
cmp
rcr
ret
inc
push
movsb
out
addr16
aaa
fisubrs
fwait
mov
pushf
cli
jne
jb
mov
leave
dec
pop
sahf
pop
xchg
ficomps
sub
jl
dec
cwtl
pop
mov
mov
push
sahf
mov
pop
out
add
dec
aas
sub
xchg
fwait
push
test
jp,pt
xlat
sub
mov
loopw
push
sarl
push
push
mov
out
pop
int3
shll
push
rol
imul
loope
pop
adc
cmp
bound
subb
add
cli
outsl
sbb
lods
frstor
stos
hlt
cmp
dec
ss
lods
sarl
dec
adc
lock
stos
pop
cmp
sbb
mov
movl
ja
shlb
jnp
jl
xchg
sub
add
xor
and
aaa
dec
scas
frstor
push
jl
rcrl
mov
fisttpl
xchg
jo
xor
nop
cmp
repnz
rcrb
daa
pop
cmpsl
cli
adcl
es
lea
mov
or
mov
adc
add
sub
adc
add
ljmp
lret
ret
enter
sbb
push
js
jne
mulb
push
int3
sub
jle
lds
addb
adc
mov
dec
and
inc
shll
aad
xchg
push
mov
pushf
xor
sti
sub
xchg
sub
xchg
cmp
out
mov
jb
xor
inc
mov
inc
rol
movsl
rorb
mov
cmp
je
jae
mov
popf
inc
xor
gs
ret
cld
outsl
jmp
icebp
decb
hlt
aam
dec
sub
in
and
dec
dec
jmp
test
mov
bound
mov
or
jo
pushf
adc
cwtl
jno
loop
mov
cmp
pop
xor
jb
mov
mov
das
push
pop
lods
shrb
divb
js
andl
negl
mov
nop
lret
push
xor
xor
xlat
mov
inc
outsb
jl
cld
push
mov
stc
add
and
enter
or
ret
stos
es
mov
or
mov
sub
cli
ret
jmp
jbe
fwait
xor
repz
ret
movsl
fbld
jno
adc
bound
xchg
inc
scas
jmp
pushf
dec
mov
arpl
shrb
jne
dec
mov
mov
jns
xor
shl
mov
stc
outsl
jb
pop
pop
cmp
lods
xor
xor
test
pusha
inc
fwait
push
mulb
ljmp
push
inc
mov
jne
push
outsl
incb
xor
addb
cmc
sbb
push
test
pop
jg,pt
xlat
insb
and
xchg
jp
mov
mov
shl
in
push
inc
sub
ss
inc
imul
add
fimuls
push
mov
seto
xchg
sub
lahf
divl
adc
push
and
xchg
xor
mov
xchg
aaa
outsl
jmp
ljmp
pushf
xor
push
mov
dec
popa
cmp
enter
push
cwtl
addb
xlat
or
movsb
cmp
mov
clc
adc
xor
ret
mov
dec
out
icebp
jno
stos
pop
insl
rolb
lds
jg
jnp
or
xor
ret
sti
fsubrl
frstor
aam
andb
pop
cs
and
pop
out
mov
jbe
jae
outsb
lods
test
sub
jnp
sbb
mov
gs
hlt
xlat
aaa
cli
mov
mov
scas
fsubl
push
rolb
push
dec
dec
dec
in
mov
outsb
rorl
pop
aaa
push
inc
aas
std
inc
cmp
jecxz
scas
adc
ss
test
divb
push
mov
xlat
adc
xor
jge
lock
lods
xchg
push
mov
jnp
loope
lods
sbbb
push
mov
unpcklps
mov
cmpsb
ja
push
imull
push
aam
out
pop
or
sub
movl
rolb
jmp
dec
test
cmpsl
mov
sbb
cmpsl
movsb
sahf
jnp
inc
mov
pop
jae
mov
rorl
adc
movsl
or
mov
es
and
mov
ret
pop
pop
pop
xor
inc
rcrl
xor
and
aas
xchg
mov
push
xor
or
std
jmp
fistpl
mov
adc
sub
push
lahf
cmc
jl
cmp
cmpl
push
adcb
mov
mov
inc
cmpb
jecxz
jg
push
psraw
dec
mov
adc
sub
out
mov
int
sub
lcall
cmp
jecxz
adc
add
mov
mov
data16
push
insl
cmc
cmp
mov
mov
pop
ret
dec
cmpsb
mov
or
jmp
sub
fs
sub
inc
cli
arpl
jno
and
and
push
je
and
inc
mov
xchg
add
testl
sub
adc
cmp
lds
adc
cli
andb
mov
insl
mov
sbb
dec
mov
scas
stc
sahf
stc
in
inc
ds
push
sbb
mov
pop
cmp
imul
sbb
and
inc
fisubrs
adc
push
shlb
mov
aas
imulb
inc
sub
rclb
jae
loop
cmc
mov
push
mov
adc
mov
pusha
add
sub
cmp
lock
dec
cmc
cmovge
fdivrs
popa
enter
sahf
sub
test
daa
leave
int
aaa
into
mov
andb
js
or
shl
jb
cmc
xor
sbb
lock
jo
adc
xchg
add
xchg
or
es
add
add
pop
pop
and
and
sbb
mov
lods
ret
insb
cmp
mov
xorl
js
mov
push
insl
popa
jo
arpl
jno
push
xchg
mov
outsl
add
jl
mov
or
push
imul
aam
and
test
inc
imul
imul
shll
sbb
push
mov
jo
xchg
pop
out
test
sbb
mov
lret
ret
jnp
aaa
arpl
inc
fcomip
nop
fs
push
arpl
movsl
in
mov
pop
lds
scas
mov
cmp
movsb
cmc
cmp
or
push
and
xchg
pop
xor
mov
out
xchg
dec
call
cmp
and
cmp
adc
mov
jl
ret
push
sarl
insb
aad
xlat
adc
and
jo
cld
test
dec
jne
and
jp
push
in
pop
popf
shrb
jmp
cmc
aas
dec
add
xor
sub
lret
shrl
xchg
pop
adc
dec
pop
xor
dec
out
adc
movsb
or
out
dec
mov
inc
test
cmpb
cs
adc
dec
fucomip
mov
fsubr
icebp
leave
inc
push
int3
les
lds
scas
ret
mov
bound
shl
fcoml
jne
push
sbb
sarl
cmpsb
lods
repnz
jne
inc
in
dec
cli
loopne
lods
fs
jecxz
cmp
dec
pop
jmp
or
in
mov
clts
out
push
inc
xchg
lock
pushf
das
xor
cmp
nop
push
xor
cmp
pop
fwait
ljmp
cmp
adc
mov
cmp
xor
push
push
int
add
mov
mov
mov
or
mov
sbb
out
scas
cli
dec
adc
cltd
push
and
into
jmp
into
or
mov
mov
sahf
xlat
jmp
jge
arpl
adcb
lret
push
fwait
cmpsl
stos
add
rclb
subl
pop
add
andl
fwait
push
or
jno
mov
andb
mov
loopne
les
sub
cmpsb
shrb
pop
pop
pop
xor
inc
cltd
lret
imul
inc
xchg
sti
mov
pop
mov
dec
push
cs
jb
iret
sub
xchg
and
or
fs
test
mov
mov
mov
xchg
repz
fldl
dec
std
push
jb
inc
adc
add
fnsave
fmull
hlt
push
add
push
popf
push
pushf
jae
xchg
push
pop
lods
mov
sbb
fld
lret
push
iret
loop
pop
int3
arpl
out
or
fdivrs
sbb
icebp
sub
and
dec
jecxz
pushf
adc
cmp
fsubrp
nop
leave
jbe
mov
lods
jp
add
fwait
in
and
jns
xchg
testb
jns
mov
cmp
jae
cmp
cmc
xlat
out
pop
call
cmp
dec
add
mov
and
or
fcoml
in
jmp
jb
sbb
mov
mov
inc
pop
jbe
push
push
mov
movsb
scas
mov
shll
in
pop
clc
aas
sub
cmp
and
push
int
imul
adc
ret
jp,pt
imul
add
push
xchg
stos
rclb
int3
test
mov
and
push
int3
stos
out
fcoms
jne
rorl
mov
or
test
loope
cmp
sub
in
stos
fimuls
lea
sbb
or
jns
lods
xor
repz
fldl2t
rcr
shll
dec
push
imul
mov
push
jne
adc
add
dec
in
ja
jb
sub
xchg
sub
mov
inc
fisubs
call
xor
sbb
jp
mov
push
push
lods
adc
hlt
int
or
dec
in
pop
popl
js
push
iret
negl
outsb
adc
cmpsb
sub
loopne
inc
pop
jns
sarl
rcrb
push
add
fcmovu
sub
jb
add
call
xor
outsl
jge,pt
cmp
and
mov
mov
ljmp
cmp
inc
test
dec
fldt
pop
cld
test
rcrb
pop
mov
aam
push
xchg
xchg
cmp
popl
mov
loop
cld
lcall
pusha
jne
insb
mov
adc
je
xorl
clc
fbld
inc
imul
dec
mov
inc
pop
out
pop
lods
and
movsl
lock
mov
push
jb
ret
cmp
aad
imul
aas
repnz
jl
test
sahf
mov
cmp
sbb
adc
data16
je
jbe
adcb
jp
fdiv
lret
xor
sbb
xchg
push
repz
pop
rorb
mov
inc
pop
fstps
das
gs
push
and
js
mov
xchg
bound
or
insb
jns
ljmp
pushf
add
adc
sbb
out
cld
repz
jg
daa
test
loopne
test
sbb
push
lcall
fucom
dec
mov
outsb
popa
jae
sbb
xchg
push
xor
or
xchg
cmp
test
jno
jmp
repz
fisttps
mov
push
xchg
jns
fildl
inc
cwtl
jmp
out
ret
hlt
mov
clc
stos
int
shrl
sub
and
cmpsl
jb
sbb
lock
mov
enter
or
sbb
inc
push
inc
stos
movsb
iret
jmp
lret
xchg
test
ds
cmpsl
ds
mov
mov
addr16
and
xlat
jge
pop
mov
jbe
fsub
jg
push
mov
les
xor
fnstsw
dec
dec
ljmp
fisubl
ds
addr16
adc
sub
in
inc
hlt
add
jno
sub
push
aam
mov
jno
push
or
sbb
scas
fwait
push
call
ja
cmpsb
aaa
mov
mov
shl
cld
mov
stc
adc
adc
mov
pop
insl
je
les
adc
pop
jo
adc
sub
ds
pusha
xor
int
loopne
mov
adc
sbbb
xchg
fisubl
or
into
gs
movsb
popf
xor
ljmp
and
pop
sbb
test
mov
cmp
sbb
andb
pop
dec
dec
jmp
and
cld
xchg
lock
cmc
pop
sbb
idivb
jl
jg
nop
xchg
dec
mov
ds
mov
mov
inc
lock
lret
pop
add
cmpsb
inc
and
xor
hlt
mov
sub
adc
je
jmp
push
aad
xchg
fisttps
lock
add
pop
jno
icebp
cmp
or
lock
mov
subb
fcoms
cmpsl
es
mov
push
mov
pushf
add
movsl
sbb
scas
shld
xchg
cmpsl
or
cmp
scas
mov
xchg
push
call
mov
pop
xor
mov
xchg
repz
loopne
sbb
int
pop
xor
pop
and
test
movsl
enter
adc
pop
xor
or
cmp
inc
push
je
fdiv
sbb
adc
popf
insb
jle
shll
xchg
mov
movb
subb
xor
movsb
cmpb
pop
ljmp
test
cmpsb
push
mov
popf
jmp
mov
insl
repz
mov
aad
add
call
out
repz
loope
push
push
pusha
mov
push
rcll
rclb
fbld
pop
add
vextractps
jno
and
mov
adc
mov
cwtl
mov
sub
call
xor
and
pushf
xchg
xor
fdivr
aas
mov
jbe
adc
mov
fmuls
or
dec
daa
cmp
jns
mov
sub
out
pop
and
iret
cmp
popa
clc
stos
mov
aaa
int3
jg
fs
lds
sti
gs
xor
decl
and
jb
fisubl
adc
icebp
mov
add
test
in
xlat
imul
scas
push
dec
movsb
jmp
outsb
jne
jecxz
mov
sbb
cld
scas
aaa
subl
les
push
mov
cmpb
mov
outsl
jnp
andb
push
mov
mov
mov
mov
jle
repz
sbb
hlt
inc
mov
sbb
adc
or
mov
sbb
or
mov
sub
xlat
adc
addr16
mov
aam
jne
inc
pusha
cmpsb
inc
xchg
ja
sbb
pop
movsl
jl
cmc
mov
mov
stos
fstl
in
nop
ret
xor
pop
in
dec
or
in
dec
es
test
jnp
pop
xor
pop
cli
xchg
cli
push
push
push
xchg
pop
js
loope
fwait
adc
mov
lret
adc
jge
add
cmp
aam
push
testl
mov
sahf
dec
mov
xlat
mov
movsl
cmp
cltd
aam
push
cmp
imul
cmp
jns
test
push
insl
and
push
sbb
or
mov
cmp
fstpt
pop
repnz
fcoms
fcoms
jle
mov
pusha
jo
ret
repz
dec
test
xor
mov
insl
mov
lahf
mov
jge
cwtl
imul
mov
test
and
cmp
pop
dec
push
mov
jo
fidivs
in
addr16
sbbb
subl
add
iret
adc
jae
push
push
xchg
push
out
repz
inc
mov
hlt
add
pushf
shrl
dec
sbb
int
imul
xchg
cmp
mov
mov
cli
push
mov
shlb
add
aaa
dec
mov
stc
mulb
cmpl
aas
sahf
jmp
call
xor
pop
cmp
sbb
ret
adc
inc
ret
and
faddl
xor
mov
and
popf
and
mov
ds
imul
fucom
lcall
cmp
xchg
popa
add
movsb
cmp
andl
pop
jo
mov
push
mov
mov
outsb
loop
cmp
sub
mov
sbb
test
mov
sub
or
xor
adc
rorb
fwait
in
jae
cmp
mov
fwait
mov
int3
inc
enter
iret
rorl
jmp
decl
lods
sbb
pop
fwait
xchg
xorl
shl
adcb
fidivl
mov
inc
fldt
push
add
cmp
mov
pop
leave
sbb
sub
push
push
mov
or
and
jns
cmpsb
mov
js
cmpsb
ret
push
cltd
das
out
rol
push
int
pop
test
xchg
push
sub
or
movsl
hlt
dec
pusha
adc
out
nop
imull
or
push
test
xor
lds
lods
rorl
adc
pop
stos
dec
fwait
sti
pop
call
mov
aas
dec
jecxz
inc
insl
sub
push
pop
cmp
and
mov
mov
insl
fmuls
pop
dec
dec
or
mov
ret
cmpsb
cmp
popa
out
ja
xor
push
cwtl
cltd
xor
nop
sub
jne
xchg
sub
jmp
outsl
pushf
mov
push
aaa
push
or
adc
sub
mov
mov
pop
jg
push
loop
add
mov
xor
add
mov
xchg
daa
outsl
cmc
cmc
adc
adc
pop
mov
in
daa
in
popl
mov
jno
xchg
adc
and
out
cmp
les
inc
xor
xchg
dec
mov
cmp
bound
and
int
into
fsubs
lret
or
idivl
in
mov
mov
leave
fwait
enter
jmp
clc
adc
ss
sti
and
out
xor
inc
arpl
test
xor
ljmp
lahf
and
and
call
rcrb
lock
inc
or
or
dec
out
inc
lea
movsb
aas
imulb
int3
sub
dec
enter
xchg
jno
mov
jmp
js
and
cmp
mov
adc
cmpsb
lock
sub
or
sarb
repnz
iret
sahf
xchg
repnz
out
mov
shrl
loope
lods
push
jmp
and
rcrb
mov
sbb
dec
jns
xchg
ret
outsl
rcr
pop
dec
adc
stc
mov
incb
or
add
dec
xchg
sbb
mov
xor
xlat
cmpsl
adc
adc
fs
cwtl
or
sbb
push
clc
pop
xchg
inc
cmp
sbb
fisttpll
or
pop
imul
leave
push
inc
mov
mov
push
fs
out
push
xor
popf
imul
dec
mov
and
aaa
cli
sub
jge
ret
inc
sbb
out
sub
push
mov
add
mov
cwtl
cmp
jmp
xor
push
jmp
adc
loop
inc
jb
jno
lea
mov
pusha
mov
mov
or
ss
dec
push
push
mov
pop
cmp
roll
sti
cmpsb
pop
repnz
jnp
and
das
add
lds
cwtl
fidivrs
mov
les
insb
enter
and
je
in
sub
cmpsl
pop
shlb
jnp
sbb
dec
adc
idivl
fidivrl
mov
mov
and
xor
inc
add
ss
pop
stc
loope
push
push
daa
dec
fidivs
pop
les
lds
and
xchg
rclb
xchg
in
inc
loop
cmp
lock
push
inc
mov
ja
xchg
jg
jno,pn
addl
xlat
pminub
add
mov
arpl
in
lock
in
enter
mov
bound
into
xchg
xchg
or
inc
in
adc
pop
bound
repz
dec
pop
pop
dec
push
insb
adcl
xor
test
mov
cli
sbb
cld
les
fidivrs
dec
ljmp
imul
je
pushf
dec
iret
cmpb
dec
out
sub
cli
pop
adc
xor
xchg
ljmp
rclb
or
xchg
insl
sbb
mov
mov
xor
into
push
lcall
xor
or
sub
in
add
xchg
push
daa
jle
mov
pop
repz
decw
add
push
push
outsl
shll
aas
fldcw
or
xchg
outsb
dec
jg
push
out
loopne
cs
mov
call
movsl
icebp
mov
jae
outsl
sub
bound
mov
fisttps
into
in
cli
xchg
ss
mov
cltd
xchg
mov
shrl
test
push
aaa
fiaddl
sub
in
xor
lods
add
and
mov
les
or
dec
movsl
stc
or
pop
arpl
out
sub
mov
jnp
pop
pop
out
int3
fimull
mov
mov
pop
mov
cmp
lods
cmp
add
enter
sub
add
sbbl
fs
scas
fwait
mov
xor
mov
mov
add
adc
or
jo
mov
movsb
pusha
test
pop
push
dec
aas
inc
adcl
adc
jbe
lea
mov
scas
stc
mov
cltd
or
mov
fstpl
xor
std
orb
sub
stc
mov
add
lds
addr16
xor
sub
cs
sub
push
int3
lds
xchg
cmpsl
mov
adc
ror
sarb
jns
mov
pop
fsubs
mov
or
lret
sub
fstps
iret
imulb
popa
out
xchg
jnp
rcr
dec
imul
xor
idiv
mov
mov
or
jnp
fwait
jnp
mov
pop
pop
cmpsb
sub
mov
sbb
push
icebp
outsb
adc
xchg
xor
push
das
mov
mov
add
loop
inc
or
sub
sub
inc
or
sub
mov
jmp
jnp
je
cmc
adc
add
jp
test
mov
mov
sarl
push
aas
mov
push
pushf
mov
cli
push
sbb
xchg
adc
clc
scas
mov
stos
ljmp
ror
lds
add
inc
jecxz
imul
mov
dec
pop
js
inc
popa
cs
in
ficoms
outsl
orl
test
sub
int
xor
mul
add
inc
cmc
jmp
add
and
test
nop
cwtl
inc
out
xchg
sbb
lret
sub
jae
mov
inc
pushf
lods
ret
jns
mov
and
std
pop
dec
mul
sub
mov
out
leave
loopne
pop
loopne
cmp
incb
fiaddl
test
jne
jmp
add
jne
push
lods
and
pop
sbb
mov
aam
and
mov
ret
mov
testb
adc
stos
ja
push
je
xor
ret
xor
mov
lcall
lcall
std
pop
inc
or
push
imul
rorl
and
pop
outsb
pop
push
nop
lret
sbb
pop
adc
mov
cld
jge
leave
mov
daa
inc
imul
xchg
jno
xlat
cli
push
and
out
orl
mov
outsb
sbb
xchg
jl
xor
fstl
push
loope
push
jae
mov
inc
aas
lods
imul
cmp
add
cmp
nop
lcall
lock
pop
and
lcall
xchg
aaa
not
xor
test
mov
mov
sub
sbbl
nop
fstps
icebp
add
dec
pop
outsb
jge
xchg
push
jp
icebp
xchg
pushf
scas
inc
das
addb
jno
sti
in
fisttpll
and
push
test
jbe
mov
fwait
insb
daa
mov
jmp
adc
fldcw
mov
or
mov
leave
sub
cwtl
out
ja
stos
fwait
mov
pop
test
or
mov
fnstcw
aad
scas
adc
mov
testb
jns
adc
clc
pop
xchg
jo
dec
jl
or
mov
lret
mov
shrl
mov
or
xchg
pop
xor
pop
lock
in
mov
dec
ret
enter
jbe
xchg
fwait
xchg
call
int3
loop
pop
cmp
adc
mov
fisubrs
scas
and
es
pusha
lods
xchg
jbe
mov
cli
cmp
sti
sahf
jg
push
gs
mov
icebp
adc
mov
sbb
out
push
pop
ret
insb
sbb
pop
loope
shrl
stc
adc
scas
scas
push
cmpb
mov
mov
push
in
bound
aaa
pop
test
cmp
stos
addr16
xchg
mov
push
imul
xor
xchg
sub
lea
test
imul
or
xchg
cltd
int3
jg
insb
cmpsb
cmp
pop
repnz
stos
push
inc
popa
sub
mov
xchg
les
push
sbb
leave
insl
sub
lods
loopne
adc
cmp
push
js
jb
aam
movl
adc
push
clc
fwait
push
pop
dec
pop
cltd
cli
mov
test
stos
shrb
jae
pusha
xor
and
inc
imul
jo
xor
or
lcall
jle
add
lea
cld
or
nop
sbb
aas
mov
in
jecxz
add
insl
nop
jnp
mov
icebp
push
or
adc
push
inc
or
in
bound
inc
ljmp
inc
scas
xchg
cmp
mov
mov
push
out
adc
sub
lcall
clc
mov
cli
jp
fdivs
and
or
or
stc
and
outsl
inc
xchg
js
ret
lods
ss
repnz
jne
insb
jo
data16
or
inc
mov
out
popf
jno
out
test
inc
cmp
mov
add
outsl
add
ret
jecxz
rcll
push
or
lea
sub
cmp
xchg
in
leave
negl
push
adcl
xor
shr
dec
out
jecxz
mov
mov
or
push
jmp
lret
int
in
and
ljmp
push
aad
add
xor
xchg
popa
in
push
call
mov
clc
std
jb
mov
xor
aam
push
shll
mov
mov
xchg
jecxz
or
mov
jns
lcall
add
mov
jb
in
in
hlt
stc
inc
fnstcw
pushf
jae
lds
dec
mov
cmp
or
or
aas
mov
mul
loope
dec
adc
or
aaa
fs
push
rorb
sbb
fiaddl
daa
mov
adc
sbb
mov
ljmp
fildl
fwait
jl
shrb
movb
fdivl
jbe
jle
inc
xchg
aaa
into
enter
sub
int3
lea
xchg
lock
adc
sbb
inc
arpl
jb
jmp
xchg
dec
cmp
ds
sahf
xchg
leave
mov
imul
lds
inc
aad
jns
fucomi
mov
sbb
push
jns
fwait
mov
rolb
jo
sbb
insb
pop
xor
sub
addr16
cmp
xchg
xor
push
push
je
imul
fsubl
mov
mov
pusha
out
sbb
or
mov
outsl
lret
mov
mov
jb
pmulhuw
lock
mov
pop
xchg
xor
dec
aad
push
gs
cmp
insl
out
movsb
push
xor
aaa
mov
imul
xor
int
imul
xchg
insb
inc
popl
in
jge
jmp
jle
cltd
hlt
cmp
jg
xchg
push
ljmp
jno
sub
clc
and
jnp
xchg
and
iret
pop
cmp
add
xor
cmp
cs
test
pop
scas
gs
pop
pushf
xchg
adc
fisubrs
jg
ds
sbbb
stc
in
movaps
push
add
push
daa
mov
mov
stc
sub
lret
dec
dec
rolb
jbe
clc
xchg
ja
adc
stc
sarb
inc
fcoms
popa
pop
lahf
push
inc
cltd
std
jmp
xor
aaa
ljmp
icebp
adc
xor
xchg
pop
and
and
and
mov
int3
fcoml
stc
out
jbe
and
loopne
movsl
pop
das
stc
popf
add
sub
sub
mov
cmp
cmp
adc
lods
ss
shr
mov
movsb
fldt
test
dec
mov
aad
push
sub
shlb
cmpl
int
cld
pop
push
lahf
call
pop
cmc
jmp
in
hlt
jb
cmpsl
adc
ss
addr16
gs
js
push
sub
dec
call
loopne
mov
loopne
inc
pop
mov
ret
or
andl
jle
fdiv
outsb
test
lods
jo
dec
sub
fisubs
ja
xor
cmp
shrl
ljmp
pop
add
in
negl
and
cld
xchg
sbbl
fs
out
shrl
dec
shr
js
jo
js
mov
pushf
rolb
inc
mov
in
pop
mov
fstps
mov
cmpsb
adc
push
fbstp
pop
cli
push
jb
pop
adc
cli
push
inc
sbb
daa
add
inc
daa
in
ret
inc
data16
mov
or
loope
pmaxub
or
sbb
cld
int3
sub
and
insl
xchg
add
sahf
sbb
pusha
test
sub
scas
and
pop
inc
std
jl
mov
movsb
les
scas
xchg
fucomp
pop
and
es
push
pop
lcall
mov
ljmp
cwtl
cmp
lcall
and
xchg
outsb
add
sub
aas
inc
lret
jnp
mov
cli
ret
push
cmp
and
std
loop
addr16
lods
out
pop
push
mov
repz
pop
imul
dec
sbb
mov
cmp
sbb
mov
fidivrl
adc
xchg
mov
push
dec
mov
dec
movsb
and
in
or
pop
mov
fldl
test
xchg
mov
neg
lcall
outsb
mov
mov
cmpsl
or
rcrb
xchg
push
notb
scas
aaa
cmp
pop
or
mov
sub
lods
xchg
into
cwtl
inc
adc
pushaw
rcrl
inc
pop
rolb
adc
mov
dec
jecxz
sub
mov
and
mov
jge
sub
out
jmp
sbb
dec
xchg
mov
das
movsl
vpunpckhbw
dec
xchg
iret
mov
pop
and
leave
xlat
repz
pushf
lea
cmp
jp
insl
lret
mov
mov
cmp
mov
adc
mov
push
and
insb
idivb
xor
dec
icebp
dec
mov
lods
add
add
jbe
dec
loopne
test
cmp
pop
cmp
and
add
cmpsb
ss
out
dec
pop
push
scas
add
adc
out
push
iret
sbb
fidivrl
test
xchg
sahf
xchg
pop
adc
cmp
jno
lods
sub
popl
mov
stos
leave
es
pop
pop
mov
sub
shrb
out
mov
pop
cmpsb
pusha
fistl
idiv
or
fwait
es
clc
sub
inc
movsb
jns
shr
mov
pop
mov
insl
mov
int
or
add
ja
dec
dec
sarb
cmp
bound
jg
sub
test
push
inc
xchg
xchg
adc
jnp
ljmp
pop
fcoml
jmp
addl
scas
inc
cmp
jne
sti
jle
into
push
int
push
mov
mov
loop
pop
subb
inc
fimuls
mov
mov
in
fcomps
dec
dec
int3
push
popa
cmp
push
cmp
mov
push
adc
aad
inc
lds
pushf
xor
scas
aad
or
pop
mov
stos
mov
adc
enter
shll
dec
and
mov
cmpl
and
pop
mov
dec
into
loopne
leave
lds
push
or
mov
addr16
sub
rorb
fsubrs
loopne
pop
loop
xchg
call
in
in
jo
pop
repnz
shlb
test
cs
test
loope
outsb
xlat
lods
mov
aas
xchg
jns
xor
or
ficoms
fnsave
sub
jnp
jp
pop
sbb
push
pop
popf
lea
fisubs
aaa
out
imul
lock
out
mov
loopne
out
cmp
popa
lods
cmp
lcall
inc
data16
sahf
xor
into
inc
or
sub
jo
mov
mov
sahf
pop
jmp
dec
adc
aaa
sbb
inc
data16
mov
xchg
fldl2t
aas
add
xchg
stc
or
jge
jbe
push
in
pop
inc
xor
inc
lock
lret
in
ds
pusha
add
lds
test
test
pop
jge
mov
cmpsl
ret
sub
push
rolb
dec
in
xchg
cmp
sbb
lret
jl
ret
cltd
lahf
xor
xchg
ljmp
sbb
mov
jmp
stc
add
je
push
cwtl
pop
adc
xchg
loope
cltd
aaa
cld
repz
mov
mov
xchg
es
sbb
sub
cs
xchg
jg
inc
add
js
incl
or
adc
movsb
in
incl
lods
dec
add
popf
sahf
pop
inc
jge
outsb
dec
xchg
ds
frstor
add
popa
inc
pusha
mov
mov
test
cmp
or
fsubr
dec
pop
outsb
mov
and
push
xlat
cmc
xchg
jbe
cltd
push
mov
mov
and
add
shrb
dec
jecxz
repz
or
cmp
mov
lret
mov
xor
mov
pop
subl
repz
jns
sbb
cmp
add
es
mov
and
nop
cmp
adc
ljmp
emms
dec
mov
mov
aaa
insb
ljmp
xor
popf
add
jne
mov
cmc
mov
loop
mov
add
sub
gs
mov
shlb
sub
outsl
loopne
js
test
shrb
sbb
cli
xchg
rorl
insl
mov
gs
and
mov
mov
or
and
enter
stos
or
dec
jbe
dec
test
push
pop
bound
iret
in
insl
cmp
jns
jno
pop
push
or
cs
pop
sub
lds
movsb
cmp
cmp
fs
xchg
pop
cmpsb
fwait
mov
mov
mov
cmp
pop
into
outsl
call
out
daa
mov
pop
xchg
add
loop
xchg
dec
and
out
push
cmpsl
lahf
daa
jecxz
xchg
sub
andb
fwait
out
cmp
imul
pop
aad
mov
fdivr
decb
xchg
pop
jbe
jl
popa
cmp
es
dec
xchg
insb
repz
xchg
add
adc
cld
adcb
pop
cltd
cmpsl
jo
push
or
int
inc
jb
dec
das
movl
push
stos
std
mov
xchg
mov
ficoml
out
out
subb
inc
scas
inc
sub
lods
pop
adc
xchg
push
iret
push
sbb
sahf
lret
repz
jp
das
mov
jp
jbe
sub
ret
pop
pop
dec
out
popf
clc
sbb
ficomps
and
repnz
xchg
and
xchg
andb
push
xchg
fwait
xchg
daa
ljmp
push
lods
push
mov
xor
mov
sbb
bound
mov
loop
dec
pop
push
dec
pop
leave
jne
stc
cmpsl
jmp
xor
lea
mov
aam
clc
and
cltd
es
add
adcb
add
inc
jecxz
jnp
push
out
icebp
xchg
movsb
xchg
add
cmp
or
sub
fcoms
sbb
jmp
rcl
mov
cmove
addb
inc
mov
jmp
mov
xor
fimuls
rorb
ficompl
mov
push
mov
insb
js
aas
inc
push
lret
lock
inc
loope
xchg
pop
push
mov
dec
push
pop
xor
imul
add
fldl
jae
inc
lock
mov
inc
aas
insl
jmp
lods
lahf
mov
in
out
imul
sbb
fnstenv
leave
loop
loopne
add
xchg
xorl
scas
int
scas
into
nop
push
add
stc
je
movsl
jmp
sti
neg
xchg
int3
xchg
mov
or
imul
jmp
inc
pop
push
out
push
push
inc
int3
in
test
fs
or
xchg
pop
xor
adc
sbb
mov
das
and
mov
cld
rol
test
sbb
es
and
jmp
sub
sti
ljmp
nop
cmpsl
mov
mov
movsl
icebp
in
mov
or
jmp
push
icebp
enter
xchg
jo
lret
fsubl
clc
fisubs
cmpsl
cs
test
mov
je
dec
add
sbb
ds
arpl
imul
sbb
xor
mov
inc
dec
pop
xchg
dec
mov
les
and
fsubrl
lds
dec
lcall
pop
mov
cmp
out
push
mov
jl
fcmovne
mov
and
mov
cltd
jge
out
cmp
sub
xor
lret
sbb
ret
sbb
inc
daa
rcl
cmp
jae
jns
pop
or
jl
jge
push
mov
negb
or
adc
iret
nop
jae
ljmp
jmp
out
add
decb
pop
ret
pushl
push
sub
roll
movsb
mov
lret
icebp
pop
push
adc
or
sub
add
jno
cli
jle
out
sub
movsb
inc
adc
xor
sti
push
mov
movsb
mov
dec
shl
push
add
mov
lock
fdivl
aam
mov
out
stos
jge
mov
loopne
arpl
ret
cmp
jl
lret
in
in
mov
pop
cmc
lds
aaa
sbb
push
xor
pop
adc
push
movsb
subl
xchg
cmp
xchg
cs
pop
pop
stos
push
pop
jbe
add
push
scas
push
pop
fnstenv
das
xor
pop
out
xor
fldl
push
adc
push
shll
sub
add
xor
add
lods
nop
fwait
cmp
dec
and
push
xor
sbb
sub
pop
push
loope
mov
dec
icebp
je
loop
push
popa
xchg
insb
mov
dec
repz
or
push
ljmp
xchg
scas
and
loop
jne
add
xchg
stos
add
push
int3
push
jae
cwtl
xchg
or
es
add
mull
mov
sbbb
mov
notb
mov
aas
repnz
mov
and
inc
mov
adcl
rcrb
mov
andb
insl
pusha
int3
outsb
push
mov
rcll
mov
push
mov
push
xchg
pop
add
jo
jae
repnz
ret
xchg
sub
stos
cmc
mov
mov
call
xor
jmp
test
aas
pop
jg
push
xlat
sbb
push
in
cmp
and
add
add
mov
hlt
jmp
out
jnp
out
xchg
jb
cmp
lahf
adc
loope
repnz
pop
ljmp
jb
or
sbb
sub
rorb
scas
xlat
ret
test
pop
subb
adc
shlb
rcrb
lock
fs
lret
mov
sbb
xchg
call
or
pop
mov
shrl
mov
xchg
jp
mov
pop
xorb
dec
daa
mov
rep
adcb
adc
sarl
iret
pop
xchg
stc
stc
inc
in
add
dec
sub
push
cltd
arpl
jp
mov
push
sub
adc
loopne
adc
pop
aas
bound
fwait
cltd
pop
notb
mov
ds
inc
pop
in
or
gs
cmp
out
aaa
pop
cmp
lock
and
orb
inc
push
daa
mov
or
lods
mov
icebp
mov
pop
jl
xlat
pop
loop
push
dec
sbb
xchg
dec
inc
inc
addb
leave
das
aaa
daa
or
jmp
data16
lret
dec
jecxz
inc
push
jno
mov
xchg
sbb
or
jns
hlt
mov
fldcw
xchg
xchg
clc
cwtl
jno
test
inc
scas
out
xor
pop
mov
inc
data16
arpl
push
xchg
imul
adc
pop
jp
call
pop
mov
pop
sbb
ss
ja
pop
jle
xor
mov
insl
add
stos
scas
das
xchg
push
or
ret
inc
ret
es
loop
sub
xchg
lret
jb
push
cmpsb
lret
leave
or
call
imul
stos
das
cmp
dec
add
inc
xor
adc
sahf
cltd
inc
lret
int3
push
in
push
inc
or
sub
add
sbb
lahf
aam
mov
cmp
jmp
fisttps
xchg
jp
xchg
xor
mov
dec
pop
fnsave
add
jle
test
fnstenv
mov
mull
cmp
out
mov
and
inc
jne
fcoml
inc
push
cld
aam
pop
push
ss
roll
and
add
daa
out
or
shrb
jmp
mov
daa
insb
mov
lcall
mov
xchg
cmpsl
shl
pop
aaa
push
dec
shll
fmull
nop
sub
pop
pop
mov
shl
mov
les
add
or
daa
mov
orb
inc
pop
mov
mov
gs
iret
push
scas
jg
sahf
xor
and
or
push
adc
mov
enter
pop
xchg
add
push
cmp
pusha
jno
or
orb
divl
outsb
sbb
pop
retw
roll
popf
mov
into
mov
xlat
push
sbb
clc
mov
ret
aas
loop
xchg
jl
add
inc
mov
rorl
ljmp
adc
adc
test
mov
icebp
mov
jmp
dec
dec
imul
pusha
loop
jmp
pop
lods
xor
cwtl
and
fadd
loope,pt
jp
les
inc
out
addl
mov
adc
xchg
inc
dec
push
sub
xor
fstl
les
add
cmp
out
push
sbb
test
pop
push
in
xor
xor
add
pop
ss
mov
sub
sbb
mov
push
sub
mov
sub
push
cmp
xchg
das
fstpl
lock
sahf
xor
in
outsl
fstl
ljmp
xchg
jbe
std
mov
packsswb
and
and
daa
push
push
adc
inc
addl
pusha
cmp
mov
aaa
lret
jne
jmp
gs
xor
sub
inc
inc
mov
movsl
stos
xchg
sbb
loopne
xchg
inc
iret
addb
push
mov
aam
dec
outsb
imul
dec
icebp
aam
sbb
movsb
jo
outsb
fstpl
jbe
pop
orb
scas
sub
add
push
and
cli
push
mov
fnclex
pop
in
in
adc
adc
cmp
mov
ja
fiadds
out
aad
lods
xchg
shl
mov
xlat
imul
push
mov
negl
shrl
mov
aad
mov
sub
xor
jae
and
xchg
repz
push
clc
test
call
jp
fisubrs
lods
jbe
setno
lods
jno
mov
fsubs
push
scas
lret
bound
mov
ret
in
ficomps
daa
ds
int3
movsb
jecxz
je
sbb
popf
mov
cmpsb
out
adc
push
pop
lcall
jmp
cmp
outsb
cmp
jecxz
and
jns
pop
cld
pop
call
push
or
pop
jae
test
xchg
adc
xor
icebp
stos
test
enter
test
xorb
sarl
lods
inc
mov
sub
jge
mov
or
std
fs
sbb
aas
dec
sahf
jp
sbb
cmp
movsb
pop
call
cmp
pushl
sahf
xor
es
ljmp
add
and
pop
adc
and
cwtl
xor
daa
adc
mov
jmp
std
xchg
mov
call
lret
jnp
cmpsl
sbb
or
sub
add
scas
out
sbb
pop
jne
stos
push
add
and
cmc
push
movsl
or
and
lods
add
xor
cmp
adc
add
jae
cs
arpl
adc
gs
sub
fidivs
jno
adc
and
pushf
arpl
and
xchg
jge
mov
in
mov
sbb
jb
sti
mov
fmuls
mov
add
cmp
aad
xchg
fldt
mov
repnz
mov
cmpsb
jo
cmp
xchg
adc
dec
divb
aam
mov
sarb
shr
sbb
mov
imull
aad
push
mov
sbb
loopne
dec
dec
stos
or
nop
push
cmp
ss
cs
push
cld
dec
push
mov
repnz
stos
xor
jnp
pop
test
adc
sti
in
mov
mov
js
push
popf
inc
lcall
or
xchg
sub
jp
gs
ja
aad
popf
xor
push
nop
test
push
add
add
lret
pop
push
out
jbe
lret
cmp
push
imul
pushf
cli
mov
pop
dec
adc
dec
shr
inc
mov
js
out
sub
jo
dec
mov
lock
mov
or
clc
mov
lds
xchg
xor
or
outsb
lock
or
or
dec
cwtl
xchg
imul
xchg
jmp
repz
iret
nop
dec
adc
ret
rcl
notb
jp
lahf
cmp
inc
sahf
push
repnz
out
push
mov
mov
test
popa
in
pop
xchg
in
mov
mov
push
shrl
lds
negb
push
lds
movsl
inc
push
xchg
lea
hlt
push
in
int
stos
xchg
out
jae
push
mov
mov
adc
fs
arpl
jecxz
mov
xchg
jp
leave
test
cwtl
pop
push
pop
or
xor
mov
jg
call
inc
dec
das
cmpl
test
mov
mov
loope
add
js
aam
xor
cmpsb
dec
pop
or
cmp
mov
mov
ljmp
dec
lds
and
add
jp
dec
and
xchg
sub
jecxz
xchg
xchg
mov
sbb
insl
jp
xchg
lods
lea
mov
pop
mov
bswap
shrb
xlat
mov
jns
mov
mov
setp
xor
hlt
xchg
cmpsl
mov
dec
out
insl
fldenv
cmp
lods
cli
sbb
scas
aas
fdivs
inc
fs
stc
pop
sub
add
daa
adc
mov
lea
test
out
jle
push
xor
lret
call
or
mov
mov
loope
sub
inc
add
test
shrb
pusha
mov
or
insb
add
add
movsl
es
shrb
mov
xlat
mov
xor
and
xchg
int
shl
dec
popf
or
in
es
aam
rclb
std
imul
push
mov
mov
xor
jle
scas
ret
jns
mov
pop
shrb
jnp
fs
add
inc
pop
test
cld
or
ret
rclb
and
cltd
test
test
pop
pop
out
fwait
dec
xchg
adc
je
mov
add
pop
lds
lcall
or
sahf
in
mov
adc
addr16
gs
mov
inc
addr16
and
sub
aas
icebp
jnp
js
movsb
test
lret
in
sub
hlt
pusha
aad
inc
mov
sti
jbe
and
jmp
js
shr
sub
inc
pop
cmp
clc
dec
cltd
movsb
fldenvs
xor
insb
sub
dec
repnz
cli
push
icebp
shll
insl
test
stc
xchg
adc
jns
sbb
loope
inc
aas
jo
clc
pop
xor
fcomi
ss
pop
stos
and
aaa
daa
mov
out
cmp
adc
mov
mov
je
xchg
iret
jecxz
iret
xor
es
mov
jmp
push
scas
cmpl
movsl
mov
out
in
mov
in
and
int3
mov
or
mov
mov
push
mov
fisttps
pop
dec
mov
xor
xchg
mov
adc
and
mov
push
data16
push
pop
out
dec
aas
push
mov
push
mov
jo
scas
push
daa
sbb
push
mov
mov
cmpsb
xchg
sub
mov
mov
test
into
outsl
in
in
add
inc
fstpt
lcall
push
or
add
xchg
dec
nop
insb
xchg
dec
inc
xor
ret
into
pop
cmp
sahf
sbb
inc
sub
notb
mov
stc
test
mov
or
mov
cmp
in
bound
loop
inc
dec
adc
loop
out
test
frstor
scas
push
int3
jmp
add
pop
push
jne
inc
imul
dec
arpl
inc
dec
stos
push
or
es
or
movsl
or
mov
or
fsubrl
or
int3
lds
cmpsb
sbb
cltd
dec
fbld
arpl
test
add
jle
data16
lea
jbe
cs
aaa
or
fisubrs
loop
enter
insl
add
sbb
fidivs
dec
and
pop
sahf
je
mov
test
movsb
aas
arpl
mov
cmpsl
outsl
loop
push
adc
mov
jge
jbe
pop
cmc
xchg
and
pop
xchg
sti
xchg
sub
push
sub
lds
sti
outsl
mov
dec
xchg
outsl
inc
pop
arpl
jmp
cmp
std
aad
inc
imul
inc
push
int3
mov
ljmp
movsl
add
mov
lcall
jae
andb
add
xor
ret
bound
andb
jbe
scas
mov
inc
fdivr
mov
pushf
loope
cmp
lea
sahf
sub
sbb
sub
pop
repz
xchg
jns
jp
or
shr
out
pop
xchg
mov
jmp
or
pop
mov
dec
pop
push
and
sub
adc
jne
push
sub
jge
xor
or
inc
mov
repnz
enter
pop
xor
test
pop
sti
sbb
xor
jo
lock
sbbb
mov
outsl
aas
fdivrs
jne
jb
sbb
push
push
push
stos
or
and
jo
mov
fildll
hlt
push
lods
aaa
or
sbbl
movsb
aaa
push
push
cli
jl
test
es
outsl
xor
out
test
cmc
jno
sbb
fidivs
cwtl
and
adc
mov
cwtl
nop
imul
jmp
orl
pop
jle
sbb
les
stc
shlb
inc
mov
fnsave
xchg
test
adc
xor
fsubrl
in
pop
loope
or
sub
aam
dec
pop
and
fcmovb
or
pusha
lods
mov
in
test
jmp
push
lcall
aam
mov
fsubs
jp
cmpb
or
xorb
rcl
push
lret
data16
orl
shlb
cmp
insl
lea
jnp
mov
jg
outsb
mov
adc
movsb
movsb
mov
clc
jbe
stc
sbb
pop
mov
cwtl
xchg
add
mov
clc
dec
jno
fildll
adc
jmp
test
mov
test
mov
xchg
lods
je
test
popa
add
xor
das
push
fiaddl
cltd
mov
pop
mov
jl
and
repnz
jne
out
shll
jne
fdivs
jmp
shll
fs
not
ret
xor
push
test
adc
push
mov
cmpsb
xchg
lds
mov
loope
mov
dec
pushf
mov
dec
movsbl
push
jae
inc
dec
pusha
mov
inc
dec
cmpsl
insb
es
dec
jb
cwtl
push
popl
inc
out
fsubrl
and
in
mov
insl
dec
mov
jne
pop
popf
bound
aad
ret
sarb
adc
mov
mov
or
inc
ficompl
fwait
iretw
rcrl
test
cmc
sahf
push
loopne
sbb
dec
mov
mov
push
mov
into
data16
inc
sahf
ffree
rolb
rcll
inc
mov
jecxz
loopne
shrl
jl
inc
push
push
in
cs
lods
fcomps
adc
dec
andl
sub
scas
cmpsb
test
lahf
incb
push
adc
xlat
push
je
push
mov
mov
adc
fsubs
enter
shrb
cmpsl
adc
test
int
ffree
repz
xchg
adc
lret
lods
sbb
push
clc
adc
mov
inc
stos
insb
add
out
xorb
mov
nop
addl
sbb
jecxz
mov
cmp
cmpsb
das
pop
mov
xor
mull
lret
out
mov
xchg
lds
mov
xlat
push
pop
adc
mov
fidivrs
push
adc
repz
jnp
int
mov
xchg
sbb
add
lahf
das
addl
adc
or
out
lcall
xor
jge
cwtl
pop
sbb
sub
jp
subl
ds
xchg
inc
dec
es
jb
in
push
outsb
test
or
imul
js
sbb
jl
test
mov
or
std
std
mov
loopne
mov
enter
fdivs
or
les
push
addr16
call
jb
inc
gs
lret
xchg
stos
cmp
push
icebp
lea
enter
enter
ja
xlat
cmpsl
sub
and
jae
sbb
insb
and
push
lret
lds
and
out
xchg
push
stc
scas
mov
es
jae
mov
push
mov
inc
insl
add
dec
adc
adc
int3
enter
gs
inc
or
imul
mov
push
out
xor
cmp
xor
jle
jge
xchg
sub
xchg
jle
xchg
xor
add
inc
or
pop
dec
dec
mov
bound
ja
pop
lret
js
sti
je
add
fwait
xchg
ret
hlt
imull
pop
stos
mov
jp
hlt
shlb
sbb
mov
xor
mov
push
xchg
pop
aaa
mov
nop
pop
mov
mov
sub
mov
lret
hlt
fcmovu
test
sub
stos
mov
sub
sub
out
nop
lahf
pop
insb
in
xchg
pushf
sbb
ret
call
inc
stc
andl
jecxz
jle
xchg
stos
jg
inc
leave
shlb
dec
popa
pop
nop
cmpxchg8b
pop
ja
fcmovnbe
xchg
test
shr
ret
xchg
pusha
out
dec
outsl
jmp
pushf
scas
cli
rcrb
test
or
add
xor
mov
fldt
sbb
mov
ja
scas
movsb
jbe
aad
icebp
xlat
cld
aam
insl
addr16
test
jp
and
lds
push
scas
popa
or
sbb
lahf
adc
add
pop
push
cmp
xor
iret
xchg
fisubl
mov
xlat
test
push
mov
pop
xor
nop
popa
pushf
das
dec
nop
dec
icebp
mov
aad
mov
xor
scas
inc
fcompl
sub
js
lods
or
xchg
cmp
xlat
mov
js
subb
cltd
xor
lret
push
icebp
jno
mov
aas
mov
pusha
ret
dec
enter
arpl
mov
leave
addr16
push
fldcw
cltd
push
jne
pop
popf
fistpl
mov
fcoml
ret
iret
push
ffreep
inc
adc
notb
leave
dec
mov
xchg
loope
dec
aam
xchg
outsb
cld
es
pusha
xor
in
jno
cmp
nop
jb
lret
in
mull
popa
sbb
mov
dec
cmp
pop
push
inc
push
repz
loopne
and
in
cmpsw
xor
in
fdivs
mov
cmp
negl
lret
pop
sub
mov
and
push
ficompl
ret
jae
and
push
pop
insb
jns
test
sahf
jle
std
xorb
out
and
mov
lods
jo
scas
test
push
in
arpl
mov
std
jle
repz
mov
adc
ljmp
push
push
addb
cmp
ljmp
push
ret
dec
mov
add
mov
mov
shll
icebp
mov
xchg
or
add
lcall
outsb
sbb
or
add
mov
push
fists
das
repnz
cmp
mov
arpl
xchg
push
and
dec
cmpsb
push
jg
fnstenv
add
hlt
pop
out
adc
mov
idivl
or
mov
sarl
mov
pop
loopne
mov
jp
in
mov
subl
popf
mov
out
scas
iret
mov
enter
addl
idiv
popf
cmp
out
adc
cmp
mov
adc
lods
push
sbb
mov
lock
mov
and
push
out
mov
mov
jne
jmp
dec
shlb
push
jecxz
adc
push
sarl
das
cli
sahf
clc
cmp
cs
icebp
mov
movsl
rcll
push
jno
mov
dec
and
mov
mov
mov
mov
cmc
jo
sub
clc
xchg
cmp
mov
adcb
jne
pop
test
orb
mov
mov
sub
xchg
pop
lret
xor
mov
sbb
icebp
mov
xchg
add
mov
arpl
shrl
mov
and
cs
test
fistpl
ljmp
mov
mov
adc
rcl
add
cmpsb
arpl
ret
push
mov
aaa
in
loop
fisubs
jge
aad
lret
push
jmp
lea
pusha
sub
insb
sti
ret
jle
arpl
mov
dec
dec
clc
mov
add
int
movsb
adc
or
cld
data16
add
int
and
mov
jae
mov
test
or
push
mov
sub
testl
jmp
mov
fnstcw
not
inc
xor
pop
addr16
jno
in
bound
mov
movlps
out
inc
lods
sub
xor
ja
and
xacquire
inc
mov
mov
fstpt
or
aaa
leave
mov
leave
pop
jns
lock
leave
mov
add
bnd
popa
mov
nop
ja
adc
inc
lcall
dec
adc
fisubl
js
xchg
std
or
test
cwtl
std
mov
cmp
sbb
add
jle
jo
dec
stos
jle
repnz
into
enter
sti
std
push
mov
mov
testl
mov
xchg
xchg
rclb
add
iret
mov
xor
lods
into
jl
in
push
pop
dec
pop
cmp
xor
mov
sahf
in
adc
mov
aas
mov
bound
push
cmp
sbb
xchg
jmp
pop
clc
jmp
jbe
sbb
notl
inc
mov
sub
ss
or
int
ljmp
shrl
popa
adc
mov
push
jmp
adc
add
dec
in
mov
add
dec
popf
xor
xlat
mov
daa
cmp
cwtl
arpl
adc
mov
push
jge
daa
insl
mov
mov
jle
push
dec
faddl
je
cmp
add
or
push
and
flds
pop
and
fcomi
jge
lods
inc
mov
decl
and
adc
stc
mov
pop
cmc
jmp
idivb
pop
jmp
push
and
cs
fstps
outsb
jo
ss
mov
lds
mov
add
arpl
lea
lret
adc
rcrb
add
pop
insb
inc
imul
mov
int
aad
push
ljmp
lock
pop
or
mov
mov
cmp
movsb
pop
js
add
sbb
dec
outsb
and
or
or
push
mov
in
inc
movsb
inc
clc
adc
aam
xchg
bound
arpl
mov
cvttps2pi
inc
iret
or
sbb
mov
pop
cmp
push
daa
loope
push
lret
adc
call
lock
subb
adc
mov
push
sbb
ljmp
xor
push
xorl
push
lods
lods
xchg
lret
add
sahf
and
mov
jno
lahf
xlat
out
sahf
dec
xor
decl
ret
addb
xchg
mov
clc
stos
shrl
shlb
add
fldcw
test
cld
jae
out
movsb
adc
aad
mov
test
popa
stos
arpl
pop
cmp
xlat
faddl
pop
sti
dec
addr16
test
xor
jbe
xor
int3
sub
roll
out
push
mov
inc
dec
sbb
dec
push
mov
adc
inc
out
sbbl
iret
jbe
ljmp
xor
fisubl
adc
adc
les
mov
cmp
shll
pop
sub
ret
in
cmp
push
movsl
outsl
int3
and
dec
stos
sub
repz
ss
mov
shrl
push
dec
loope
cmpl
int
sbb
lods
loope
lret
mov
mov
push
lds
jae
cli
scas
and
mov
int
xchg
ljmp
in
lea
lret
sbb
aaa
sbb
pusha
xchg
mov
test
call
or
xor
out
test
sub
xorl
jno
clc
jae
push
aad
imul
add
fimull
xchg
add
xor
insb
dec
loopne
rcll
ret
sbb
xchg
sbb
mov
mov
sub
xchg
ja
jmp
jecxz
ficoml
mov
or
xlat
adc
push
or
and
nop
pop
ss
gs
cwtl
xor
loop
into
push
imull
cltd
adc
inc
not
ljmp
test
xchg
adc
push
inc
push
sub
add
fidivs
test
sbb
mov
popf
daa
xchg
lahf
and
test
cmp
xor
pop
clc
jae
or
scas
add
push
aad
and
ljmp
cmp
cmp
test
dec
dec
add
out
int
pushf
mov
mov
jg
dec
stc
adc
repnz
dec
cmp
mov
in
icebp
jno
sub
mov
lret
cmp
test
leave
pusha
and
mov
inc
dec
dec
push
mov
sbb
shlb
mov
shl
stos
lods
jmp
inc
mov
mov
mov
sbb
int
out
mov
pop
sahf
movsl
dec
or
shll
sahf
movsl
xor
inc
jl
inc
ret
pop
xor
jmp
fs
outsl
cs
push
dec
pushf
and
aaa
repnz
addr16
hlt
arpl
jnp
faddl
test
xor
jle
jo
lea
subl
inc
lret
sti
enter
mov
xlat
mov
inc
icebp
xchg
cmp
xchg
jnp
cmpsb
js
shll
lcall
inc
mov
cwtl
mov
fs
clc
mov
inc
add
push
push
mov
mov
mov
dec
pop
mov
dec
pushf
mov
mov
shl
inc
mov
or
ds
push
push
mov
mov
rorl
call
cs
ss
or
cs
adc
js
push
push
inc
popf
jo
iret
xchg
into
fldt
ss
popf
imul
ds
repnz
test
shlb
lock
jno
insl
xchg
sub
mov
jns
divl
push
push
lock
pop
cmp
loopne
mov
push
rorl
fdivs
mov
int
sbb
sub
out
fistl
bound
or
xchg
not
bound
mov
loope
cmpsl
shrb
adc
lods
sub
in
notl
jmp
add
inc
fildl
test
gs
xchg
push
mov
xor
call
adc
pop
cmp
pop
ds
inc
cwtd
add
insl
div
pop
mov
pushf
arpl
mov
addr16
repnz
in
icebp
push
leave
sti
or
push
rclb
or
rol
jo
mov
xchg
out
hlt
mull
inc
aam
inc
scas
mulb
sub
pop
out
les
mov
ja
std
jae
insl
push
xchg
outsb
mov
add
mov
imul
fsubp
decb
push
dec
adc
inc
aad
ja
mov
fs
stc
or
int3
aam
repnz
jecxz
ss
jecxz,pt
dec
pop
outsl
jge
xlat
add
ret
int3
mov
cmp
roll
iret
mov
mov
orb
ds
sbb
sbb
call
xchg
mov
or
or
cmpsl
push
out
xorl
pop
adcb
lret
outsl
test
gs
fadds
loopne
mov
ficoml
xor
sahf
or
add
shll
xchg
jne
push
clc
or
mov
pop
adc
sbb
xchg
mov
pop
cmpsl
repnz
dec
jns
jae
aad
rcrb
adc
popa
sbb
outsl
cs
dec
nop
jl
test
cmp
scas
movsl
lcall
mov
cli
adc
lods
pop
push
push
inc
and
aad
jle
sbb
lock
cmp
mov
movsb
gs
in
leave
push
xchg
in
cmp
pop
call
jle
and
test
inc
das
enter
enter
mov
shlb
out
mov
adc
out
lds
mov
push
inc
lahf
out
jb
cmp
fwait
mov
fwait
sbb
lret
ljmp
imul
inc
adc
and
sub
lds
imul
sub
fs
gs
es
dec
xchg
in
insb
adc
sbb
sub
mov
or
je
mov
pop
xor
stos
shrb
adc
xlat
cmp
sub
cmc
test
ja
gs
pop
push
bound
mov
movsb
cmp
mov
clc
xchg
sbb
leave
jge
std
sub
das
into
push
in
adc
mov
loope
or
mov
loopne
mov
aad
xor
jge
mov
dec
inc
inc
les
sbb
mov
pop
shll
fs
add
sbb
in
push
mov
sbb
es
mov
mov
and
int
push
arpl
xchg
mov
sub
lods
and
mov
xchg
push
push
aad
leave
mov
icebp
jmp
int3
arpl
andb
arpl
push
out
lret
or
cmp
jno
or
fistl
mov
push
xchg
jns
shrl
jns
sbb
jl
ljmp
pop
ds
imul
pop
xchg
jp
int3
lds
jl
pop
scas
sahf
mov
dec
add
fucom
stos
scas
push
pushf
movsb
js
inc
mov
sbb
pop
push
sub
and
cmp
fisubs
mov
lahf
or
mov
scas
daa
outsl
xor
dec
pop
icebp
imul
dec
jecxz
inc
aam
add
push
push
imul
adc
mov
ficoml
cltd
pushf
addr16
mov
mov
adc
pop
inc
call
pop
ds
dec
jno
inc
rcrl
adc
outsb
cmp
lds
push
jae
shl
mull
jecxz
fstps
ds
addr16
lock
call
and
insl
or
pxor
sahf
xor
dec
mov
push
imul
xor
cld
aam
dec
sbb
mov
adc
or
pop
sbb
jge
std
mov
jmp
loopne
mov
inc
ds
scas
sub
adc
cmc
neg
xor
mov
clc
push
insb
xor
fdivrs
lods
and
fwait
mov
mov
pushf
popa
xlat
pop
jb
push
ljmp
sub
jo
jge
adc
mov
xor
adc
dec
insb
movsb
push
inc
and
add
cld
jns
sbb
cli
fadd
jbe
add
push
xchg
and
lahf
adc
xchg
lret
mov
mov
and
push
stc
insb
inc
adcb
cmc
cmp
mov
fadd
mov
repnz
dec
push
subl
sbb
xor
jl
inc
push
scas
int3
jne
push
mov
sub
cwtl
mov
push
mov
fmul
pop
push
cli
aas
daa
mov
mov
push
sub
adc
xor
mov
cmpsl
pushl
icebp
sti
sbb
dec
fsubr
lds
or
out
cmpsl
imul
out
test
mov
xchg
popf
popf
loopne
movsb
cmp
inc
dec
push
test
ret
pop
popf
pop
les
loop
cmp
jae
xchg
mov
fidivrl
inc
std
cmpsb
je
cmp
push
jne
gs
push
test
sub
outsb
andb
leave
xchg
and
pusha
xorps
inc
orl
pop
js
xchg
bound
add
push
mov
lods
jmp
mov
or
xor
mov
insl
mov
fnstcw
mov
call
sbb
ljmp
sarb
sub
jns
scas
sti
cltd
je
int
mov
mov
push
pop
pushf
sub
add
shl
add
movsb
mov
fisttpll
jne
add
bound
cld
aam
mov
mov
into
jecxz
in
xor
ja
mov
gs
push
cwtl
jae
clc
adc
jne
jnp
xchg
fcmove
fisttpll
out
sar
xor
xlat
mov
pop
je
mov
sbb
dec
movsb
loopne
js
sbb
mov
add
aas
push
and
mov
dec
fdivl
cmp
cmp
fists
test
cltd
aaa
jmp
inc
xor
mov
in
rclb
inc
enter
adc
cmc
cltd
movsl
push
shll
mov
sub
xor
mov
sub
xchg
and
xchg
stc
icebp
xchg
add
sarl
sbb
fxch
push
jecxz
mov
mov
fldt
lea
fidivl
pop
add
mov
xchg
pop
xchg
loope
inc
sti
or
repz
push
and
xchg
addr16
pop
in
sbb
test
xchg
pop
fmuls
sub
mov
es
mov
jp
in
mov
and
cmpsl
mov
cltd
imul
lcall
cmp
cs
in
aad
out
or
or
add
xor
jge
dec
jle
sbb
inc
inc
pop
cltd
stc
popf
xchg
iret
sub
mov
sbb
xchg
ds
sub
inc
ljmp
out
test
mov
orl
xor
stos
inc
cmp
les
test
cld
mov
adc
push
arpl
std
mov
or
outsl
push
loope
or
inc
cli
mov
rcrl
fsubr
das
subl
xchg
and
xchg
push
fs
dec
add
fcoms
test
mov
jb
cmp
leave
test
add
jmp
push
mov
addr16
mov
jae
inc
lods
jno
pop
loopne
fnstenv
cmp
push
popa
cmpsb
les
dec
sub
sub
adc
std
xchg
testl
and
rolb
xchg
push
test
jbe
jo
test
imulb
inc
aaa
into
xchg
test
push
sub
lahf
daa
xchg
es
das
inc
inc
sub
xchg
xor
insb
xchg
mov
out
sahf
repnz
push
xor
jbe
jecxz
cmpl
inc
js
call
push
or
fidivl
ret
ja
ret
cwtl
dec
popa
leave
pop
stc
push
ljmp
imul
xchg
mov
pusha
pop
out
sbb
sbbl
shlb
sbb
scas
mov
and
or
popf
xor
jp
call
and
out
dec
or
cmp
inc
mov
dec
mov
push
repz
lock
cs
add
jg
push
jmp
fidivl
test
inc
mov
icebp
jo
mov
fbld
ret
push
ret
call
dec
pop
xor
fdivrs
iret
or
sub
mov
lcall
aam
test
jl
test
push
sub
mov
dec
sbb
cmpsb
cs
movsl
mov
outsb
mov
sbb
mov
ret
std
ret
das
ret
jns
jno
xchg
push
iret
and
cmp
pushf
cmp
inc
add
in
insl
mov
jnp
in
xchg
xor
mov
rcrb
arpl
divl
cmp
cld
adc
test
and
push
lea
jg
xchg
sub
xchg
lahf
xor
lds
or
lods
mov
sbb
inc
in
pop
in
jge
add
int3
cwtl
nop
inc
or
push
pop
mov
ficoms
neg
mov
test
pop
mov
cmpsb
mov
aad
inc
testl
push
sbb
movsl
insb
subb
and
hlt
mov
xchg
cmp
stc
cmp
push
push
cmp
sbb
test
xchg
push
cmp
int3
dec
dec
dec
cld
sarl
mov
subl
jl
add
pop
jns
fadds
push
bound
add
inc
xchg
out
pusha
pop
mov
jne
push
inc
lret
cmpsl
dec
lcall
shlb
mov
push
into
outsl
mov
iret
imul
gs
loope
loope
and
mov
rolb
and
jmp
dec
pop
mov
mov
fcompl
or
push
cmpsb
dec
add
orl
sub
mov
stc
lea
fwait
push
adc
fstpt
fdiv
rolb
jmp
inc
jns
dec
mov
aaa
mov
subb
aad
jns
adc
mov
cmpsb
loopne
decb
add
push
gs
setg
add
mov
jno
xor
mov
out
out
pop
add
stos
lods
adc
mov
hlt
push
out
imul
or
cmpb
movsb
or
dec
xchg
fwait
testb
pop
jo
imul
lret
jmp
push
or
sbb
xchg
pop
mov
arpl
push
pop
cmp
or
cwtl
inc
mov
test
fbstp
cmp
jecxz
andb
leave
je
push
scas
push
xchg
popa
repz
mov
add
sbb
jp
cld
andl
movsl
aad
pop
aaa
adc
add
stos
add
xor
inc
cmp
add
xor
loopne
pop
lods
mov
push
mov
push
aaa
leave
jo
xchg
push
and
sub
cmpsl
fs
jecxz
xchg
stc
popf
pop
inc
jecxz
insb
xor
out
push
cltd
je
and
pop
movsl
xor
cs
inc
aam
dec
sub
push
lret
enter
adc
pop
inc
ret
jns
loop
inc
cmpsl
ja
daa
cmp
das
push
inc
daa
cmp
lret
or
adcl
jo
fnsave
js
iret
es
and
cmp
pushf
xor
xor
push
lock
bound
mov
pop
cmp
test
dec
mov
and
sub
ret
cmpsb
push
inc
fnstenv
clc
and
adc
and
and
movb
out
sbb
lret
data16
mov
loopne
dec
out
sub
jns
imull
adc
jle
out
xor
mov
jno
call
andl
out
mov
mov
imul
mov
stos
mov
pop
inc
inc
cld
popa
scas
push
or
jle
jl
adc
or
das
push
xchg
dec
push
fcomps
mov
mov
clc
in
pop
outsl
xor
in
int
stos
inc
xchg
loop
out
mov
or
or
jnp
mov
jnp
das
in
das
and
lcall
and
addr16
pop
shlb
es
les
mov
sahf
je
inc
lods
lods
pop
test
test
ss
jbe
aam
std
add
test
mov
sbb
or
iret
fldenv
ficoml
sub
or
ljmp
mov
sub
mov
fcompl
push
fisttpll
mov
and
lret
jl
push
sti
inc
movsb
inc
mov
jno
adc
push
xchg
cmp
adc
dec
rcll
push
divl
pop
insb
mov
rcrb
xor
insb
sub
dec
mov
int
add
jl
adc
mov
dec
jno
ja
loop
or
pop
sahf
jns
cli
mov
rol
clc
aaa
sahf
subl
cltd
sbb
sti
lcall
xor
sets
adc
adc
adc
inc
repnz
mov
jbe
iret
xor
std
cmp
sbb
adc
mov
mov
adc
sbb
mov
sbb
imulb
imul
sbb
shl
iret
sbb
stos
pop
pop
mov
mov
aam
enter
jae
inc
rorb
adc
lret
stos
push
pop
out
test
cltd
mov
fcomp
mov
std
insb
out
pop
mov
negl
sbb
dec
cmp
add
xlat
xor
into
gs
adc
xchg
nop
repz
dec
mov
push
in
insb
ret
in
adc
dec
dec
roll
loopne
ja
mov
cmc
mov
pop
outsl
enter
rclb
add
push
push
lods
imul
mov
fldcw
flds
xor
lret
test
xor
sub
adcb
data16
xlat
push
xchg
inc
xchg
mov
pop
jnp
pop
popf
xor
xchg
call
add
icebp
add
and
and
test
loopne
int
dec
adc
pop
sbb
addr16
sub
or
mov
cli
adc
scas
sbb
adc
sbb
mov
popa
dec
xor
mov
pop
push
or
aas
mov
push
shl
jge
jbe
or
or
test
mov
pushf
add
push
xor
inc
sub
mov
lds
push
xor
sub
push
ret
hlt
imul
sub
push
sahf
mov
xor
shrl
rcrl
sahf
mov
mov
mov
push
aaa
or
mov
call
or
xchg
push
and
or
or
xchg
sub
fstpl
int3
fists
adc
lods
mov
icebp
push
shll
les
cmpsl
dec
dec
mov
ds
mov
dec
fidivrs
add
loop
lcall
xchg
jmp
jno
test
in
clc
notb
dec
sbb
mov
mov
rclb
sti
sbb
insb
and
mov
jmp
stos
jnp
icebp
pop
push
leave
pop
or
lods
dec
push
mov
cs
aad
movb
xor
sbb
out
pop
fldpi
adc
and
int3
ss
mov
fstpl
mov
jg
inc
mov
ret
push
loopne
inc
pop
fs
in
imul
lret
xchg
mov
add
ds
xchg
mov
clc
iret
dec
repnz
mov
fisttpll
mov
cli
xor
add
mov
mov
adc
repnz
psubw
jge
bound
notl
fwait
jnp
cld
icebp
std
inc
psubd
rclb
mov
pusha
repnz
push
xchg
cld
pop
into
cld
inc
xor
shl
stos
or
stos
pop
aaa
mov
sbb
pop
sbb
pop
mov
pop
outsb
aas
xchg
js
or
stc
adc
jecxz
ret
adc
dec
sarb
inc
call
inc
jb
mov
movsl
inc
std
adc
xor
jns
pusha
andb
rcrl
fbld
jo
and
pushf
movsl
xchg
push
mov
andb
loop
arpl
stos
into
fadd
add
xchg
loop
lods
jo
sbb
sub
add
inc
outsl
inc
in
out
inc
sbb
leave
sbb
push
adc
mov
push
jo
idivb
mov
test
shrl
sub
icebp
adc
xlat
dec
dec
pop
mov
dec
fdiv
bound
outsb
jecxz
loopne
jp
mov
imul
int
add
hlt
xor
pop
jae
je
cmp
or
sbb
inc
xchg
pop
outsl
jns
aam
sti
mov
add
xlat
adc
sahf
xchg
push
xlat
rcll
inc
lods
xchg
jns
gs
mov
ret
xchg
jnp
cmp
cmpsb
mov
pop
in
sti
sbb
inc
ret
pushf
sbb
lret
ljmp
call
sub
cmp
fldl
mov
mov
and
xor
or
adc
repnz
sbb
inc
push
fwait
push
popa
adcl
das
js
and
jno
and
push
in
rol
sbb
jae
xchg
add
cmc
adc
rorb
pop
pusha
pusha
outsl
xchg
xlat
and
adc
repnz
fdivs
fnsave
jl
jle
dec
sbb
mov
mov
sahf
jno
pop
shr
and
decl
sub
mov
repnz
les
or
jno
push
sar
call
test
mov
daa
mov
jae
push
sub
mov
fidivrs
add
or
daa
loopne
icebp
sbb
movsl
cmp
call
push
adc
jo
std
lock
loopne
or
imul
mov
push
push
mov
sbb
xchg
push
movsb
inc
mov
sbb
ficoms
in
cmpl
jne
pusha
sbb
gs
fucomi
test
and
scas
stc
cli
cmp
addr16
xchg
inc
test
arpl
push
xor
fbstp
lea
mull
xor
lods
add
cmp
js
shrl
jmp
aam
call
xor
pusha
cli
ret
test
dec
clc
cmp
xchg
pop
dec
loopne
push
xor
mov
add
scas
cmp
adc
fbld
fistps
mov
rcrb
dec
mov
xor
sbb
add
jnp
fwait
inc
cmp
sbb
mov
pop
dec
mov
or
inc
push
mov
add
leave
jp
or
dec
leave
js
push
sarb
mov
lcall
das
mov
jb
test
es
adc
push
mov
movsl
into
sub
outsb
call
xchg
rol
jb
into
jecxz
mov
xchg
stos
jne
sub
adc
in
dec
fs
jbe
aaa
stos
push
sub
dec
call
sti
lret
dec
shrl
shrl
xchg
arpl
mov
pushf
mov
fnstcw
dec
repz
insb
cld
or
inc
mov
ds
and
ja
addr16
pusha
sbb
arpl
into
adc
inc
dec
push
push
scas
add
stos
mov
in
mov
mov
add
iret
fisubs
stos
push
adc
and
sbb
mov
in
rorl
shlb
shlb
push
xor
add
jle
jmp
subb
dec
jecxz
or
sbb
ja
and
inc
pop
inc
pop
mov
std
arpl
jae
lahf
lods
xchg
insb
push
andl
fs
daa
mov
stos
inc
mov
mov
movsb
sarb
mov
push
inc
xor
jae
ss
daa
scas
cli
pushf
das
pop
das
push
jge
adc
push
sbb
icebp
jl
jle
push
mov
gs
leave
lea
pop
pop
xlat
adc
ret
pop
pop
jmp
dec
inc
enter
push
adc
iret
out
je
pop
cld
push
mov
sbb
mov
pop
icebp
sarl
mov
push
cmp
pop
or
xor
cltd
push
fwait
jb
repnz
fs
push
mov
out
cmpsl
loope
mov
jns
dec
sbb
shlb
dec
pop
cmpsb
ss
fs
pop
aad
in
and
push
repz
mov
out
pop
cwtl
scas
fcmovb
pop
adc
pop
inc
add
mov
dec
mov
xor
incb
clc
push
mov
loopne
jno
repz
pop
loop
into
je
xchg
arpl
push
dec
dec
gs
jl
test
cmp
leave
fwait
sti
addr16
and
sti
out
mov
ror
push
inc
imul
jmp
mov
repnz
dec
dec
mov
lea
adc
js
mov
sub
dec
lret
inc
decb
call
inc
push
pop
and
pop
cmp
out
dec
sub
inc
je
mov
dec
ljmp
outsl
pushf
jge
pop
pop
sub
sahf
int
incb
aas
test
mov
and
xor
or
fildl
pop
mov
adc
cld
pop
les
ja
lods
fcmovnbe
sbb
imul
xchg
loop
mov
shrl
outsb
daa
xchg
pop
sbb
das
es
push
stos
xchg
jbe
testb
xchg
pushf
insl
jl
jo
sbb
sbb
pop
cmp
mov
jp
cmp
pop
ret
movsb
inc
jge
gs
jb
dec
add
test
xchg
frstor
mov
adcl
sub
inc
out
test
mov
inc
or
inc
dec
sbb
lock
cmp
mov
inc
call
sub
in
das
xor
inc
fcmovnbe
mov
lds
xchg
aad
mov
dec
adc
popf
cmpsl
add
aam
push
ljmp
push
ds
test
xchg
jmp
hlt
in
mov
jp
mov
shlb
shlb
mov
or
movsl
xchg
sub
or
out
movsl
jecxz
adc
mov
mov
mov
or
xlat
shrb
imul
adcl
jmp
jle
lods
mov
adc
inc
push
xchg
xor
std
jns,pt
arpl
pop
jmp
sub
push
addr16
mov
mov
cmp
std
cltd
jne
and
cmp
xchg
pop
scas
loope
cmp
pop
sahf
es
push
pop
xlat
inc
sti
dec
cld
xor
jmp
sub
xchg
dec
imul
pop
cmpsb
ret
xor
arpl
cmp
or
outsb
daa
mov
shl
sbb
gs
pop
jae
xchg
xchg
hlt
xchg
pop
push
stos
popf
repnz
cli
sbb
enter
test
iret
push
fwait
mov
push
dec
pop
dec
lret
hlt
mov
nop
pushf
cli
lahf
inc
rcrl
xor
jo
add
mov
lods
ss
test
enter
cli
out
loope
pop
idivl
push
loopne
nop
mov
push
adc
insl
cmpsb
dec
dec
pop
or
jmp
aaa
pop
xchg
icebp
inc
sbb
mov
sbb
mov
and
mov
loope
rcrb
fsubrs
push
or
mov
sbb
and
pop
jmp
mov
push
push
rcll
bnd
fbld
imul
mov
jp
mov
dec
pop
adc
js
xchg
add
sub
testl
orl
lds
lock
dec
inc
mov
shr
loopne
push
cld
pop
adc
mov
jno
addl
fxch
cmp
jbe
jmp
movsl
cmp
lret
loop,pt
add
pop
push
ds
add
rorb
jbe
in
repnz
loopne
sub
data16
cmpl
mov
mov
inc
inc
push
enter
in
mov
add
push
daa
int
push
or
aas
mov
hlt
fdivrl
outsl
jmp
aam
movsb
mov
cli
daa
shl
gs
jp
ret
pop
or
xchg
int
in
or
inc
shlb
dec
je
xchg
add
mov
xchg
mov
or
push
mov
ss
fnsave
clc
sbb
lahf
stc
jg
xchg
les
mov
das
adcb
test
lahf
xorl
dec
inc
lock
std
cmp
sub
fmuls
jle
mov
mov
popa
mov
lret
data16
push
or
xchg
xor
lods
xchg
push
popf
or
add
mov
iret
fs
pop
out
inc
test
jne
gs
pop
ja
push
cmp
jb
xlat
out
cs
sub
ret
shll
cmp
iret
std
int3
mov
adc
dec
or
std
ds
scas
jmp
pop
and
sub
push
scas
dec
les
insb
roll
sbb
mov
rorb
cmp
mov
jno
sub
xchg
push
add
inc
fs
arpl
daa
cmp
inc
repz
mov
adc
loop
test
aam
adc
xchg
sub
push
nop
int
dec
mov
pop
insb
pop
popa
aad
push
cmovle
repz
inc
stos
mov
dec
xchg
adc
pushf
mulb
in
out
stc
inc
stc
sbb
outsl
jnp
lods
pop
cmpsb
push
rclb
mov
cltd
shr
rorb
cmp
dec
lods
jg
mov
shld
data16
push
push
cwtl
sbb
mov
stos
inc
pop
mov
sub
int
pop
movsb
xor
sub
std
mov
xor
pop
xchg
rcl
and
push
fs
mov
notb
sub
arpl
nop
jo
and
mov
cs
mov
ret
fcmove
pop
cmpsl
rorb
insb
frstor
lcall
out
dec
cmp
notb
xor
sbb
popf
inc
push
dec
dec
loopne
mov
js
in
je
sub
xor
bound
insl
cmp
push
mov
push
add
cmp
mov
jae
xor
repnz
test
std
inc
pop
inc
pusha
outsl
cmp
andb
test
inc
aas
shlb
hlt
mov
or
cmpsl
sub
mov
fcomps
xchg
or
cld
in
push
sbb
push
fwait
sub
ss
dec
cs
jp,pt
mov
push
dec
xchg
sbb
sahf
sub
movsb
sbb
ds
sti
in
icebp
mov
pop
xchg
aad
ret
jge
pop
pop
mov
fcoml
sbb
sub
sbb
xor
data16
push
repnz
stc
sbb
push
mov
or
test
popa
lcall
cmp
push
cs
mov
xchg
mov
imulb
mov
fildll
mov
loope
push
sti
rcrb
xchg
movsb
test
sbb
cmp
mov
fisubs
in
adcl
push
mov
add
fstpl
mov
adc
mov
lcall
push
pop
and
push
push
xchg
lods
or
outsl
push
jmp
adc
push
adc
mov
xor
jg
pusha
inc
test
rolb
xor
cmpsl
xchg
mov
sbb
push
pusha
xor
cmpsb
mov
xchg
xchg
jp
subl
test
pop
push
in
or
ret
cwtl
lock
sbb
cli
xchg
lret
mov
or
js
les
in
fstpl
fidivrl
sbb
push
sub
andb
cmp
loopne
in
push
lock
roll
out
or
dec
les
icebp
xor
xor
jl
dec
cmpsb
push
and
js
repnz
lock
pop
xor
dec
stos
daa
add
fsubrp
rep
out
xor
fwait
test
xchg
sub
dec
loopne
pop
lahf
and
mov
inc
xchg
cmp
add
mov
jl
fidivs
mull
mov
enter
dec
data16
push
sbbb
mov
test
test
into
push
xor
je
mov
ljmp
ficoms
js
jae
jg
into
fmull
mov
pop
jno
and
negl
or
xor
sub
in
mov
subb
mov
jecxz
mov
mov
sti
push
aas
ss
cld
out
mov
mov
cs
fidivrl
and
dec
mov
mov
movsb
sbb
hlt
in
fbstp
push
jle
inc
stc
jl
out
pushf
adc
es
and
push
test
out
pop
loop
lock
pusha
push
int
pop
xchg
notb
icebp
sub
mov
xor
jne
dec
rcll
dec
fbstp
sti
mov
jo
int3
xor
push
push
push
jecxz
je
fdivl
out
shrl
repz
movsb
dec
scas
mov
sti
pop
ljmp
xchg
fistpl
in
add
enter
and
in
nop
mov
aad
jnp
jae
pop
shl
cld
pop
ret
cmp
add
adc
outsb
fwait
insl
cltd
stos
lods
pmuludq
xor
pop
in
inc
dec
mov
scas
add
inc
aas
stos
xlat
mov
push
mov
std
roll
or
movsb
push
mov
push
iret
xor
inc
call
outsl
sahf
mov
es
and
sub
or
das
mov
pusha
fnstsw
cmpsl
or
xchg
ds
mov
cwtl
and
add
mov
je
dec
fidivs
inc
mov
repz
push
adc
sub
pop
loope
pop
popa
clc
dec
pop
and
lods
and
jne
inc
and
out
ds
test
sbb
popa
mov
jno
test
adc
ds
loopw
push
dec
mov
xchg
add
ret
fimull
pusha
mov
insb
aaa
pop
lds
sbb
fisubs
bound
imul
mov
lea
jmp
aaa
cli
cmp
in
push
jmp
loopne
inc
movl
xchg
mov
es
loopne
fistpl
cmpsl
test
or
mov
mov
push
adc
or
rorb
mov
pop
in
push
cwtl
dec
aam
nop
lret
or
fmuls
xacquire
imul
pushf
cmp
in
in
mov
add
outsb
adc
jb
and
dec
popa
cmc
push
xchg
add
es
and
bound
pop
notb
out
mov
jp
jmp
negb
mov
mov
xor
mov
fcompl
jbe
gs
sbb
xor
add
gs
mov
and
jo
inc
dec
inc
mov
mov
mov
shll
sub
insl
sub
enter
jmp
jge
cmpsl
ja
push
ss
hlt
jmp
cmp
xorl
cmp
sarb
movsb
mov
add
test
fimuls
sbb
pop
pop
lods
adc
out
mov
pop
sti
xchg
mov
cmp
aam
xchg
fisttpll
movsl
out
mov
imul
jne
ja
mov
push
iret
adc
inc
xchg
jo
jbe
mov
mov
adc
lods
stos
xchg
sub
jb
sbb
adc
jbe
int
jbe
jecxz
imul
push
sbb
dec
push
mov
dec
js
add
jo
popa
repnz
arpl
and
insl
cltd
and
mov
jg
inc
aam
pop
inc
sbb
inc
mov
cmp
ja
imul
repnz
aaa
outsb
lcall
enter
xor
inc
stos
xchg
pusha
jge
inc
cmp
push
faddl
ja
int
dec
xchg
addr16
int3
test
in
dec
mov
hlt
mov
mov
sbb
or
jb
xchg
sarb
ffree
pop
out
lods
mull
sub
push
out
mov
inc
fimuls
mov
sub
cmp
mov
xor
pop
push
dec
loope
cmp
lret
nop
cmc
xchg
jnp
lods
sub
xchg
sub
push
inc
inc
call
mov
enter
ljmp
jae
push
jnp
ljmp
jmp
adc
cmp
pop
mov
and
inc
fstl
mov
loopne
mov
xchg
test
sahf
out
jo
sbb
dec
cmp
mov
adc
cmc
xor
pop
pop
out
mov
mov
pop
das
jmp
and
jo
shll
cwtl
pop
jecxz
scas
call
push
or
xchg
cmp
std
rcrl
movsb
and
test
and
popa
mov
jno
mov
leave
pusha
fcmovnbe
dec
adc
call
or
loope
jmp
inc
push
sahf
stos
adc
movsl
icebp
dec
pop
mov
arpl
xchg
mov
mulb
mov
mov
push
inc
mov
inc
push
popf
fmull
or
clc
addr16
lods
pop
xor
imul
adc
inc
cwtl
test
cmc
mov
sub
ret
dec
sub
mov
inc
pop
dec
mov
rclb
push
cmc
icebp
filds
cld
in
movsb
stos
into
add
xor
xchg
insl
int3
xor
lods
jg
mov
stc
jg
aaa
into
fsubr
ror
push
js
inc
mov
test
test
in
aam
mov
mov
cmp
sub
js
xchg
test
dec
add
jno
mov
testl
add
test
push
xchg
mov
data16
jnp
nop
sub
adc
sahf
or
mov
scas
lcall
xor
aaa
roll
xchg
hlt
jg
test
enter
test
pop
and
test
out
aas
pop
push
cmp
or
xchg
in
ljmp
mov
sub
pop
fs
push
movsl
icebp
frstor
sub
aas
inc
aad
in
add
fwait
inc
dec
xchg
int3
mov
imul
in
fcompl
loope
fsubrl
pop
inc
fistpl
test
add
push
cs
push
or
cwtl
mov
push
push
cmpsb
rcll
lods
ret
and
pop
push
andl
leave
xor
fs
xlat
mov
in
out
imul
pop
dec
int
jge
xchg
sub
mov
or
loopne
xchg
add
inc
mov
xchg
sub
stc
pop
fwait
nop
cmp
push
sub
or
sub
lods
repnz
dec
fs
pop
insb
or
insb
scas
imul
into
push
xchg
pop
out
push
sbb
xchg
dec
cmpsb
icebp
insb
adc
push
mov
add
sti
mov
xchg
add
orl
add
gs
inc
inc
mov
das
mov
sbb
mov
js
ja
mov
push
imul
testb
in
xor
push
cmc
xchg
sub
or
xor
lock
pop
ja
pushf
cmpsl
xor
jmp
imul
loop
lret
pop
inc
icebp
popa
lods
cmpl
mov
cli
data16
js
dec
adc
and
jp
sbb
jg
cli
xor
inc
push
add
mov
scas
in
fnsave
leave
ret
aas
movsl
xchg
sub
loope
xchg
or
sub
pop
and
push
sarb
push
fildl
cli
cld
mov
lds
jmp
push
aam
inc
popa
addl
jns
orb
cmc
mov
iret
xor
jge
lock
pop
in
test
or
jb
xlat
mov
sbb
js
out
out
aaa
jl
sbb
int
push
jb
rcrl
negl
loopne
adc
fldcw
pop
insb
das
lods
push
lret
test
repz
lcall
clc
xor
or
stc
push
cmpsb
jne
int3
test
push
pop
cmp
xor
ficomps
inc
push
jae
rcll
sbb
pop
fsubp
adc
pop
inc
or
mov
ss
jne,pn
xchg
cmp
int
push
or
mov
ljmp
leave
ja
out
sub
test
dec
jns
cmp
mov
std
fisttpl
adc
stos
aaa
int3
adc
sbb
push
add
sti
test
leave
pusha
mov
mov
lret
sub
lods
mov
xchg
pop
icebp
into
or
add
es
fs
lods
pop
xchg
mov
clc
cmp
xchg
inc
add
dec
loope
pushf
xlat
mov
sbb
cli
insl
ror
decb
jo
and
in
adc
stos
cmp
into
push
mov
cld
xchg
std
and
insb
ret
inc
lods
insl
mov
mov
icebp
add
adc
mov
lods
sub
cwtl
pop
ja
fldt
repz
cld
cmp
out
mov
jns
clc
pop
mov
loop
repz
fidivrs
fldt
or
ja
add
push
inc
shl
sbb
dec
dec
pop
cmc
dec
mov
jae
xlat
sub
mov
frstor
mov
mov
push
daa
inc
pop
fs
jo
xlat
adc
add
fidivrl
push
pop
lahf
fstpt
out
dec
add
sarl
adc
stos
xor
sbb
lahf
mov
rorb
push
mov
pushf
xor
out
push
popa
cmp
test
inc
sub
les
pop
lret
xchg
pavgb
mov
add
jo
mov
jmp
adc
xchg
or
data16
clc
mov
push
insl
or
pop
pop
and
sub
cmc
sbb
es
fcos
lds
insb
and
xchg
cmp
jbe
xlat
push
inc
pop
jp
xlat
xor
push
inc
sub
mov
jno
icebp
xor
or
mov
shll
jp
nop
pop
or
xchg
js
dec
and
mov
inc
cli
fwait
pop
pop
es
jno
fdivr
daa
lcall
cmp
inc
pusha
and
mov
xchg
movsb
mov
and
rol
pop
insb
dec
lret
loop
cmp
imul
xor
stc
daa
xchg
sub
sbb
test
das
xor
cld
movaps
in
dec
lea
sub
pop
cld
dec
out
jae
jecxz
dec
xchg
mov
into
jo
jp
fldt
dec
add
pop
shrl
push
jne
scas
mov
mov
popf
jne
or
mov
in
inc
dec
inc
addr16
xor
fidivrl
xchg
fidivrs
stos
and
gs
fsubrp
push
push
lock
das
std
mov
lea
sbb
outsb
and
ret
push
insb
add
fnstsw
aam
pop
pop
or
and
push
test
arpl
inc
sbb
mov
add
jo
xor
push
inc
pop
out
je
jne
loope
xlat
cli
aad
jmp
xchg
insb
inc
pop
xchg
sub
gs
xchg
and
mov
and
jo
xor
pop
clc
popl
xchg
add
out
jae
andb
pusha
fidivs
or
out
and
testl
and
out
adc
xchg
cmp
inc
cmpsl
imul
dec
ficompl
enter
pop
ret
test
ss
xor
xchg
js
test
push
fwait
aam
stc
add
push
add
js
xchg
add
sub
or
test
push
mov
das
mov
movsb
cmp
stos
jae
inc
push
aaa
push
pop
addr16
mov
adc
cmp
xchg
dec
sub
dec
dec
mov
testl
pop
aad
aad
cmpsb
insl
sbb
mov
push
fisubs
push
mov
pop
adc
sub
loopne
lock
xchg
int3
adc
fbld
andb
inc
cmp
iret
shrl
push
jg
jecxz
imul
pop
repnz
push
setle
push
out
push
test
adc
leave
inc
sti
daa
jle
lds
push
jp
sbb
or
push
inc
enter
push
mov
push
xchg
sbb
arpl
mov
adcb
mov
aaa
pop
jno
cltd
mov
ds
mov
mov
mov
pop
popf
pushf
adcl
inc
iret
mov
incb
movsl
jnp
cmp
jnp
adc
dec
clc
adc
pop
aaa
pusha
test
sub
pop
xchg
mov
ss
add
out
cmp
testb
adc
dec
and
gs
push
idiv
nop
scas
adc
loope
adc
jb
fstpt
and
cmp
sahf
dec
pop
shrl
push
outsl
xchg
sbb
stc
push
cmp
nop
aaa
xchg
pushf
sub
insl
cmc
mov
adc
cwtl
imul
call
test
jg
sti
iret
ss
jg
rcll
shrl
hlt
mov
push
leave
into
xchg
mov
pop
mov
mov
movsl
dec
mov
aam
sub
sarb
cltd
data16
push
cmpsl
sub
call
or
sub
inc
sbb
jno
loopne
lea
push
mov
daa
stos
aaa
into
sbb
adc
push
lock
dec
push
dec
dec
iret
and
push
mov
adc
lods
bound
xor
mov
cmc
push
je
insl
sub
sbb
dec
or
je
int3
or
xchg
push
stos
sub
sub
xlat
test
pusha
lahf
or
sbb
sbbl
fbld
movsb
sti
inc
dec
stos
push
lahf
xor
aam
mov
outsl
jnp
data16
add
pop
xor
sbb
jbe
pop
icebp
int3
aas
xchg
xchg
add
aad
xor
mov
add
das
mov
ss
mov
popa
mov
stos
push
mov
into
add
xchg
ja
mov
leave
jae
add
jb
pop
mov
fucomi
std
push
push
cmp
xchg
sub
sub
repz
xor
fcoml
or
xor
xchg
rol
iret
pop
push
lret
mov
jl
adcb
push
mov
stos
and
mov
sub
leave
push
stos
ds
ljmp
int
pop
fistpl
scas
stos
inc
hlt
sbb
dec
jmp
cmp
sti
xchg
mov
add
fsubrl
xchg
cltd
cwtl
enter
std
or
push
pop
cmp
cmc
and
bound
xchg
and
popl
shrb
insb
daa
push
xchg
or
inc
sbb
pop
popf
sbb
jae
xchg
inc
cmp
fldln2
push
sub
ljmp
stc
and
and
ljmp
sbb
movsb
cli
xchg
sub
cltd
out
inc
inc
cmpsb
cmp
push
mov
sbb
cmp
cmp
aaa
subb
jl
inc
add
add
xlat
mov
mov
and
xchg
testl
and
xor
inc
mov
mov
in
jmp
inc
mov
dec
divb
mov
cli
adc
xor
cmp
xchg
dec
inc
jl
cmp
imulb
mov
pop
xchg
mov
fcmovbe
ljmp
inc
add
int3
dec
mov
out
push
fdivs
les
jmp
cltd
push
and
test
xchg
push
jae
or
jno
loop
scas
mov
inc
sub
clc
movsb
enter
dec
loop
push
cmp
ljmp
xchg
push
xor
enter
daa
leave
add
and
loop
mov
adcb
fadds
ffree
push
cvtpi2ps
add
and
jae
mov
das
ret
mov
dec
out
or
mov
jg
pop
ficoms
cmovno
mov
jmp
sub
xor
sbb
cmpsb
pop
xor
or
imul
lds
pop
in
iret
ss
inc
mov
inc
inc
jmp
int3
pop
movsb
or
mov
adc
xchg
shrl
and
mov
dec
xchg
cs
cltd
xor
cmc
mov
mov
hlt
mov
mov
mov
lds
movsl
fsubrl
mov
ljmp
add
inc
xor
cmc
cmovl
pop
lods
xor
clc
insl
push
js
scas
and
in
test
jae
xor
daa
push
adc
call
cmpsl
out
xor
or
cld
mov
xor
cltd
data16
fcomps
enter
adc
daa
mov
inc
fstl
bound
mov
mov
push
hlt
sbb
cmc
or
in
jle
in
push
insb
sub
and
push
test
mov
xor
mov
hlt
cmp
mov
adc
test
test
cmpsb
loopne
das
adc
pop
cmc
mov
lods
xchg
fiadds
fs
xchg
adc
xor
mov
fistpl
cmp
mov
mov
push
lods
jecxz
sbb
gs
out
or
dec
cmpl
or
mov
inc
fisubl
and
push
xchg
mov
test
mov
mov
sbb
popa
sbb
cmpsb
mov
gs
and
stos
shrb
pop
scas
mov
fsubrs
dec
jmp
push
jg
mov
pop
xchg
sbb
jns
outsb
jns
xchg
ja
enter
or
dec
out
pop
out
rcl
adc
xor
dec
jae
scas
dec
mov
inc
sbb
pop
jns
pop
mulb
xchg
nop
pop
sub
test
sbbl
lahf
repnz
lret
or
sub
enter
dec
lret
xchg
pop
cmp
adc
add
jle
mov
cmpsb
cltd
lds
movsl
cld
mov
sub
les
sbb
lock
cmp
xor
fstps
mov
xor
mov
pop
mov
dec
lea
gs
das
and
xlat
and
cmpsb
pop
ret
xor
mov
popa
mov
fdivl
adc
add
icebp
adc
jmp
data16
test
flds
sbb
inc
mulb
mov
pop
loope
add
mov
pop
in
jo
mov
inc
mov
jo
insb
js
xchg
mov
ror
lea
in
push
mov
into
lret
mov
xor
cmp
mov
add
loop
ljmp
lcall
pop
push
movsl
mov
enter
lds
add
sub
sahf
lret
sub
xchg
adc
rol
jle
jecxz
pop
repz
add
std
push
in
jp
fs
and
inc
push
dec
daa
mov
pusha
dec
push
push
or
mov
hlt
xor
add
mov
movsb
pop
add
or
dec
mov
jae
loop
inc
mov
dec
lret
and
loopne
das
xlat
mov
inc
divb
leave
dec
push
inc
aas
push
jo
ret
lret
inc
jno
fistps
ja
adc
test
cmc
es
and
iret
inc
jl
js
leave
gs
loop
ja
jge
cld
mov
shrb
mov
shll
jmp
adc
in
dec
pop
lcall
sbb
push
mov
adc
daa
es
test
lret
pushf
or
or
pop
jecxz
jnp
xchg
mov
dec
sbb
into
call
fwait
popa
icebp
shl
jae
and
ficoml
adc
adc
out
sub
aaa
push
inc
icebp
in
push
out
add
xor
sub
jecxz
sub
lea
sub
aaa
sub
mov
std
dec
add
je
insl
add
xchg
or
or
inc
cmp
mov
add
mov
push
mov
imul
bound
sub
mov
or
pop
adc
sbb
pushf
push
jmp
hlt
cmpsl
popa
adc
icebp
data16
sub
xchg
inc
lret
push
incl
pop
popa
add
pop
and
imul
pop
adc
push
xchg
xor
sbb
adc
sbb
fsub
cltd
mov
fcmovnu
notb
stos
sub
scas
cmp
dec
outsl
int3
ds
cmc
nop
iret
retw
stc
xor
mov
stos
mov
sahf
mov
rorb
leave
xor
lods
mov
cmp
mov
je
loop
shlb
aam
outsb
sahf
mov
push
pop
and
hlt
sub
push
imul
inc
fistpl
add
imull
into
push
or
adc
sbb
popf
mov
test
fsubl
iret
jae
out
jmp
es
leave
or
cmp
and
jg
fists
dec
mov
mov
dec
ret
jnp
lcall
in
jnp
daa
call
pop
jne
cmpsb
in
pop
push
aas
add
cmp
mov
inc
jecxz
dec
adc
mov
aad
pop
sub
push
inc
sbb
push
lahf
push
daa
rcrw
mov
lods
cwtl
cmc
frstor
andb
inc
push
fmul
pop
or
or
mov
mov
out
in
bound
adc
cmp
sarl
dec
mov
mov
push
pop
sbb
outsl
adc
popa
idivb
mov
dec
cmc
adc
pop
sub
cli
pop
call
leave
mov
xchg
jle
scas
mov
dec
sub
dec
rorl
cs
push
fistps
xlat
repz
cmp
dec
push
out
pusha
add
test
xchg
add
cmpsb
xchg
inc
sbbb
rcrb
dec
repz
lret
adc
nop
dec
cmp
jo
cmc
shlb
pusha
push
lahf
negl
in
subl
popf
inc
sbb
in
orl
jle
std
push
jb
sbb
inc
or
fs
outsl
push
inc
sti
inc
xlat
add
or
or
insb
or
jl
mov
lret
xchg
mov
les
int3
cmp
cwtl
dec
cwtl
stos
call
mov
mov
rcll
insl
adc
test
mov
mov
and
and
and
dec
in
test
mov
xchg
push
xchg
or
mov
xlat
jbe
push
mov
imul
ja
cmpl
cld
adc
outsl
adc
aam
ljmp
sbb
jge
xor
lods
xor
mov
adc
add
outsb
in
and
jbe
int
je
filds
mov
icebp
mov
xor
pop
dec
dec
adc
int3
lret
sub
inc
sbb
push
nop
jecxz
xor
in
arpl
jge
and
cmp
mov
or
jmp
pop
push
push
jecxz
or
out
loop
aas
dec
mov
dec
loope
shl
ret
out
sbb
or
xchg
or
dec
sbb
sarl
iret
xor
shlb
jmp
ja
lahf
jb
stos
aad
aaa
fnsave
out
push
test
loope
push
push
xchg
push
xchg
push
daa
das
shll
test
into
sbbb
or
pop
pop
inc
mov
jno
ret
out
rcrl
pop
jg
outsl
daa
cmp
cmpsb
sbb
enter
mov
popl
jecxz
inc
fistps
xchg
sbb
ret
imul
scas
aaa
jmp
jl
lcall
fildl
imull
in
adc
mov
sbb
jl
popl
mov
movsb
or
repz
jae
loop
rorl
stos
in
lret
aad
cwtl
mov
inc
arpl
out
inc
inc
or
mov
adc
lret
icebp
loop
loop
fsubr
jmp
sub
lock
xchg
enter
shl
inc
xchg
pushf
or
xchg
shrl
aam
pop
jge
out
outsb
repz
inc
aaa
sbb
aas
mov
xor
pop
cmpsl
jp
outsl
in
iret
jnp
repz
sub
xchg
pop
les
sbb
dec
pop
lock
das
aad
add
add
clc
je
call
pop
mov
jmp
push
cmpsb
aaa
sti
pop
jg
dec
pop
sbb
add
xchg
add
out
inc
pop
xor
mov
add
shl
mov
outsl
cmp
inc
mov
inc
sbb
jp
loop
out
cli
fildl
xor
dec
lods
adc
sbb
in
xchg
lds
push
movsb
sbb
dec
ficoms
out
xorl
or
push
lds
loope
mov
push
sbb
aam
jmp
in
and
ss
or
mov
cltd
sbb
repz
outsb
cmpsl
ds
sub
xor
push
shll
jmp
sti
sub
sahf
xchg
rcl
xchg
mov
outsb
mov
fsubr
sub
ror
cmc
mov
mov
js
xor
rcr
mov
scas
sbb
icebp
sbb
xor
adc
mov
daa
outsb
push
lods
lahf
dec
aam
fbstp
push
or
movsb
mov
sub
adc
adc
fdivrs
es
clc
or
insl
movsl
pop
fisttpll
es
arpl
xor
scas
adc
jle
adc
std
lea
inc
fdivl
gs
insb
aas
cmpl
test
inc
inc
ds
aam
iret
or
adc
decb
aaa
or
ja
and
fistpll
adc
je
pop
ds
mov
dec
pop
xor
xor
out
cmpsb
push
pushf
jo
inc
das
mov
jp
sahf
aas
push
xchg
xchg
or
mov
pop
call
shll
mov
loop
stos
stc
cmp
shl
sub
stc
xchg
in
cmpsl
add
or
imull
mov
xlat
push
push
mov
test
xor
ljmp
cltd
dec
scas
dec
test
xchg
fldenv
cmp
and
add
cmp
pop
stos
mov
jg
sbb
lea
pop
leave
enter
sbb
fsts
cld
data16
addr16
lods
ja
test
test
flds
pop
adc
enter
int
je
push
fisubl
pop
inc
cmp
push
sbb
mov
adc
lods
insl
jnp
push
and
add
sbb
xor
shll
xchg
mov
scas
sarl
dec
jae
int
inc
jne
mov
outsb
scas
in
test
les
fdivl
sub
mov
mov
aad
mov
push
ja
in
inc
insl
shlb
ret
add
ret
movsb
adc
fmuls
push
sbb
mov
pop
sti
test
into
sbbb
cli
fcoml
lret
xchg
icebp
mov
fbld
cmp
push
test
inc
nop
mov
fbstp
pop
aam
add
cmp
addl
jnp
frstpm(287
mov
xchg
cs
lock
es
fidivs
addr16
sbb
js
outsl
cmp
int
data16
fbld
and
push
inc
jno
addr16
lods
mov
xchg
cmp
daa
leave
jne
and
push
out
sbb
xor
out
xor
test
cmp
cwtl
mov
inc
jecxz
in
cwtl
pop
ljmp
mov
and
xor
popa
cmp
loop
sbb
add
xor
lock
fdivs
outsb
and
pop
fldenv
fdivl
dec
into
push
iret
mov
cmp
jmp
aaa
clc
sahf
inc
pop
pushl
flds
mov
inc
inc
lcall
adc
sub
push
mov
jl
cmp
push
sbb
lds
daa
dec
test
cmp
xorb
jmp
and
mov
fistps
test
inc
je
pop
repnz
or
outsl
loop
cmpsl
test
fsubr
sti
push
stc
cmpb
adc
aaa
cmpsb
jp
dec
fdivrl
mov
xor
scas
or
cld
jne
nop
xor
ja
faddl
sbb
sbbl
jnp
stc
fildl
mov
xor
enter
pop
int
pop
sbb
jmp
jns
int
imul
jecxz
pusha
add
test
stc
shrb
pop
hlt
mov
cmpsb
jno
aas
mov
test
xchg
inc
push
mov
imul
in
inc
aas
out
in
jp
pop
repnz
add
sbb
mov
arpl
ljmp
call
in
pop
ja
cli
push
xchg
lret
iret
inc
movsb
jne
data16
inc
pop
fbld
sbbb
inc
push
jae
xchg
mov
cmpsl
imul
inc
sbb
and
lahf
sub
xor
pop
jno
mov
movsl
mov
stc
lds
sub
test
out
test
dec
xchg
mov
mov
addr16
add
jmp
int3
outsl
mov
push
adc
lahf
push
jl
test
notb
stc
scas
std
add
cs
daa
loop
ds
lret
adc
fldl
inc
jne
icebp
cmp
pushf
cs
push
adc
sub
or
aas
pop
jne
or
xchg
fists
in
inc
arpl
mov
push
out
inc
scas
mov
out
jle
inc
pop
mov
xor
in
push
in
jo
test
roll
mov
test
rcrb
enter
lcall
sbb
mov
and
inc
cmc
dec
jns
adcl
dec
mov
js
sbbb
pop
lahf
stos
ja
mov
imul
imul
pop
sti
mov
mov
test
adc
aaa
popa
je
movsb
js
lods
and
pusha
mov
lcall
xchg
shlb
cld
or
in
incb
andb
xor
aas
jle
mov
addl
fimull
pop
in
imul
das
inc
nop
sbb
mov
jecxz
fsubr
nop
mov
push
rcrb
xor
adc
fwait
daa
fbstp
or
or
adc
jmp
mov
add
mov
call
inc
fs
mov
push
icebp
ds
add
mul
lock
mov
fsts
ds
test
adc
xor
shl
pop
in
mov
cmp
jg
out
xor
inc
xchg
and
and
sti
fwait
icebp
cli
icebp
or
push
lahf
mov
gs
repz
jecxz
and
mov
test
je
test
push
pusha
push
inc
rcrl
pop
jo
ss
popa
addr16
aaa
or
mov
mov
movsl
gs
out
ret
repnz
scas
subb
sahf
or
mov
or
aad
pop
data16
pop
movsl
aam
mov
jge
ljmp
sahf
movsb
nop
stos
fmuls
lock
mov
call
and
loopne
dec
cmp
fisubrs
mov
ja
cmp
rcrb
sbb
mov
mov
mov
lret
imul
hlt
mov
jne
cmp
pop
sub
pop
sub
lret
aas
ja
scas
xor
call
nop
fimuls
repz
js
add
push
mov
icebp
rcrl
add
jno
mov
sub
stc
pop
sbb
add
cmpsl
dec
and
inc
cmp
test
inc
test
pop
in
jae
sarb
mov
mov
or
jp
scas
xchg
rclb
jecxz
aas
cmpsb
mov
jecxz
add
add
gs
and
pop
push
mov
mov
scas
fwait
push
fs
into
in
je
loop
or
orl
lods
sahf
insl
cmp
in
mov
mov
pushf
mov
repnz
inc
pushf
movsl
add
pop
std
orl
inc
dec
pusha
in
aam
scas
orb
jle
mov
or
in
jge
movsl
and
int
in
add
dec
ss
sti
xor
arpl
rorb
mov
into
sbb
xor
or
fsubrs
inc
pushf
mov
cli
ljmp
cld
jle
inc
lods
fstpt
push
cmp
dec
pop
sub
adc
mov
orb
xchg
push
xchg
sub
sbb
sti
ja
test
lret
push
jns
xor
outsb
aam
lds
cs
cmp
mov
pop
outsl
test
cltd
sbb
cmpb
adc
or
dec
addr16
out
sub
sbb
xchg
cmc
addb
xor
fbld
test
outsb
push
dec
or
test
pop
repnz
sub
cmpsl
pop
mov
cs
xchg
xchg
xchg
push
or
mov
testb
test
ret
repz
jbe
cmc
or
cs
xchg
ss
push
xchg
mov
push
and
jne
je
cmp
mov
push
in
incb
fdivrs
mov
scas
out
popf
push
jl
lods
jle
push
daa
xchg
and
popf
ss
adc
test
push
cmp
ret
ljmp
add
add
and
or
sub
sahf
shll
jle
nop
sub
push
clc
mov
jmp
jle
xchg
push
fldt
cld
sub
mov
dec
cmp
push
test
dec
mov
mov
daa
outsl
dec
lds
rep
jae
loopne
lods
push
sti
xlat
sub
sbb
or
js
dec
je
add
movb
adc
nop
mov
jecxz
out
sub
mov
andl
inc
xlat
cmpl
outsl
orb
mov
sub
and
mov
push
mov
pop
pop
cmc
mov
cmp
popa
daa
jbe
movsb
pushf
pusha
popa
mov
lret
mov
in
stos
int3
out
cld
add
je
leave
push
inc
popa
cmpb
pop
jae
iret
data16
inc
xor
push
add
push
push
popf
insl
and
jg
or
stos
jo
mov
sbb
test
and
aas
dec
sbb
fsts
into
sub
in
add
pop
out
inc
xchg
pop
scas
mov
jae
push
insl
sbb
xor
dec
and
in
mov
jmp
mov
in
dec
xchg
dec
sbb
and
xchg
pusha
mov
xchg
jae
sti
xor
dec
add
scas
jne
daa
outsl
data16
test
push
sbb
sar
sbbl
pop
xchg
xor
loop
sub
pushf
lahf
mov
rclb
stc
scas
test
sti
or
hlt
ficoms
imul
imul
lods
cmp
lcall
rorb
dec
mov
dec
push
in
xchg
arpl
dec
scas
cwtl
pop
mov
test
hlt
outsl
xlat
mov
insl
add
js
arpl
clc
data16
dec
add
mov
lock
pushf
cmp
mov
mov
pop
sbb
mov
pop
push
pop
mov
inc
fmul
push
jecxz
push
outsb
cld
mov
sub
cmp
pop
push
ljmp
jno
fdivl
scas
inc
imul
add
pop
mov
js
andb
or
insb
rcrl
testl
ret
pop
int3
arpl
clc
imul
push
adc
mov
and
std
insb
rcll
cmp
shrl
push
xor
xchg
fldt
push
in
jnp
ret
arpl
jb
cmp
les
in
insl
push
mov
hlt
cmp
xchg
mov
mov
repnz
aad
incb
pusha
ss
out
mov
mov
push
add
sti
inc
dec
jbe
mov
mov
push
lods
xor
pop
lods
repz
cs
call
xchg
inc
push
or
mov
fbld
mov
gs
int
dec
out
sarl
aas
push
clc
dec
jle
cli
sbb
test
in
cld
inc
int3
inc
mov
lds
stos
outsl
cmpl
mov
lock
add
pop
lret
and
mov
push
lret
xchg
inc
stos
jecxz
jne
mov
fstpl
add
xchg
insb
cli
and
loopne
aam
mov
jo
aaa
mov
fistpll
mov
push
sbb
add
mov
inc
sbb
mov
cwtl
dec
dec
and
out
cli
or
rcll
mov
push
stos
jmp
jp
insl
and
xchg
push
rcrl
jbe
add
mov
js
data16
sub
lret
dec
into
push
ja
sub
jmp
sbb
cmp
in
clc
push
add
ret
imul
xor
mov
inc
xlat
sbb
xchg
and
push
mov
push
jbe
adc
and
mov
jae
xorl
loop
scas
pop
inc
mov
inc
ficoms
sti
add
sar
mov
add
cmp
jae
ljmp
push
mov
or
sahf
stos
sub
or
scas
cmc
jbe
mov
jecxz
shrb
xor
push
int3
ficomps
mov
aaa
and
push
sbb
gs
jmp
sub
mov
or
shrb
xchg
mov
mov
cmp
ja
and
dec
inc
out
bswap
mov
jmp
pop
popf
cltd
xorl
mov
mov
xor
lret
sub
shrl
cmpl
xchg
mov
sub
jae
movsl
arpl
lahf
sbb
dec
push
and
inc
mov
push
cwtl
mov
or
xchg
push
insl
je
lahf
icebp
nop
inc
adc
xchg
sub
push
dec
pushf
lds
mov
push
leave
popf
or
fs
push
out
test
sub
pop
lock
cmpsl
pushf
sub
je
lret
cli
xchg
scas
dec
shrb
dec
and
add
mov
inc
ljmp
jo
test
negb
mov
scas
sti
adcb
shrb
inc
mov
mov
and
out
addb
out
dec
push
xchg
arpl
dec
mov
vcvttss2si
loopne
or
dec
push
sub
das
add
je
jmp
mov
push
dec
cwtl
lcall
out
fcoms
ss
pop
les
in
pushf
mov
add
jmp
aam
cmpsb
jns
shll
mov
jne
outsb
lods
jge
jg
ljmp
lahf
mov
sub
xchg
ja
fcos
sahf
mov
add
movsl
sbb
xlat
mov
out
lock
and
jge
mov
js
adc
out
dec
pushf
jnp
mov
xchg
daa
pop
std
rorl
mov
or
xlat
mov
sub
push
aaa
add
fwait
push
es
and
in
jecxz
js
mov
xor
fistps
loopne
aad
dec
test
mov
test
mov
fs
jne
mov
sub
lret
xor
stos
cmp
adc
je
into
cmp
jmp
ret
mov
es
out
add
mulb
adc
test
shrb
jl
xor
inc
adc
sbb
or
fwait
jl
clc
mov
fwait
imul
mov
xchg
stos
bound
in
mov
out
xchg
movsl
mov
add
das
stc
add
jmp
rcrb
mov
scas
addr16
pushf
imul
dec
push
andl
mov
mov
andb
ffreep
mov
daa
stos
hlt
js,pt
push
lods
loope
icebp
movsl
ret
aas
ss
push
mov
decb
out
scas
pop
inc
or
std
ss
rcrl
jns
stos
sub
xor
jl
mov
fcmovnb
das
cld
dec
ljmp
mov
xor
adc
rcl
xor
mov
jmp
lea
jle
adc
out
pop
jmp
clc
push
pusha
sub
xchg
add
adc
mov
sbb
gs
testl
and
and
int3
inc
out
push
fwait
ljmp
mov
lret
mov
dec
mov
or
imul
push
imul
shrb
in
stos
dec
imul
mov
xor
and
or
jo
cmp
mov
add
mov
cmp
mov
repnz
pop
dec
dec
shrl
cmp
mov
lret
and
jle
ds
popa
mov
lods
repz
add
jbe
xchg
mov
push
mov
in
es
jbe
inc
scas
sti
icebp
add
popf
xchg
push
arpl
dec
inc
xchg
mov
aas
xchg
dec
popf
push
mov
pop
cs
cmpsl
jnp
dec
stos
mov
push
aam
sub
test
push
mov
cwtl
xor
cltd
cmp
mov
sub
rorb
xor
cmp
sbbb
shl
testl
mov
xor
in
mov
and
popa
cli
enter
mov
insb
jne
xchg
mov
imul
push
divb
movsb
adcl
xchg
aad
adc
xchg
jae
fwait
inc
shr
jne
daa
cmp
imul
inc
push
out
mov
jle
or
popf
scas
or
addl
cmp
inc
testl
into
adc
cwtl
and
pushf
cmp
pop
xchg
sub
cwtl
dec
call
mov
fisttpll
push
push
inc
push
sub
sbb
xchg
stc
and
cmp
test
rorl
cld
pop
cmpsb
jmp
sahf
gs
clc
lret
xchg
mov
sbb
xchg
roll
jl
int3
push
pop
adc
arpl
leave
jge
xor
fisubrl
sub
sub
sahf
push
adc
or
out
sub
pop
mov
pop
into
in
sarb
adc
sbb
cmp
xchg
sahf
clc
loop
cmp
mov
or
in
jle
pop
lods
in
or
adc
sub
jecxz
sbb
subb
icebp
pop
sub
xchg
xor
je
int3
sub
and
pushf
mov
or
loope
add
sbb
xchg
lret
dec
fisubrs
xchg
lahf
andl
lods
sbb
jne
ficomps
sahf
test
sbb
in
dec
jnp
repnz
out
repz
stc
xchg
add
xchg
je
rolb
test
gs
fisttpl
adc
mull
lcall
addb
xor
shl
jne
jge
ljmp
pop
cmp
mov
dec
dec
inc
mov
cmpb
dec
notb
xchg
add
push
divb
movsl
and
rol
rcl
jp
fbstp
push
fucomi
aad
ret
adc
or
jp
add
dec
popf
je
mov
fdivs
insb
or
lds
fstpt
cmpsb
fs
outsl
mov
xor
pop
in
pop
daa
outsl
rol
loopne
xor
adc
in
arpl
mov
sahf
pop
mov
add
dec
inc
mov
jg
push
sahf
pop
push
inc
aam
shlb
add
mov
adc
inc
jge
and
dec
repz
fxtract
clc
xchg
xor
adcb
outsb
jl
out
sbb
pop
sbb
inc
clc
xchg
js
xor
pop
lret
sub
out
stos
pop
fwait
mov
jbe
mull
and
push
or
enter
sub
xchg
cmp
mov
enter
xchg
push
fbld
adc
cmp
xchg
daa
test
ret
cmp
test
pop
xchg
enter
mov
test
or
add
and
lret
ljmp
in
mov
pushf
xor
data16
xor
test
push
lods
pop
jne
adc
jge
xor
and
out
stos
cmp
cs
sub
fbstp
cmp
xlat
cmp
mov
leave
pushf
pop
sahf
and
sub
or
adc
repnz
pop
out
addr16
imul
jmp
scas
xchg
cmpxchg
xchg
adc
mov
andl
push
mov
inc
scas
and
test
jae
or
scas
xor
inc
and
outsb
outsl
push
lods
adc
mov
fs
inc
mov
addr16
test
lcall
xchg
out
cmp
pop
in
imulb
mov
xor
jle
pop
insb
xor
test
dec
clc
cmp
push
pop
push
cmpsl
mov
sbb
xchg
pop
mov
movsb
xor
mov
call
mov
push
lahf
xchg
mov
in
jp
add
lret
daa
and
push
call
push
dec
or
push
jl,pt
call
test
daa
mov
push
stos
mov
xchg
and
push
mov
div
mov
push
jl
sub
mov
mov
iret
aas
lcall
push
int3
loopne
mov
loope
mov
mov
in
cltd
sti
lret
roll
xor
testl
dec
loopne
loopne
rcll
pop
dec
in
inc
mov
mov
push
jmp
sti
divb
es
sub
and
hlt
xchg
lods
inc
adc
push
rorl
xor
fbld
iret
fiadds
push
ljmp
call
xor
push
popf
xchg
jmp
test
lock
push
lods
fstps
mov
mov
mull
jge
pop
jle
xor
jb
inc
adc
pop
mov
dec
movsl
push
in
test
or
outsb
mov
and
icebp
cmpsb
and
jmp
sbbb
dec
shrb
pop
shr
push
icebp
mov
shl
mov
jno
jmp
aas
xchg
mov
imul
out
les
repz
stos
adcl
loope
insb
adc
mov
fidivl
outsb
sbb
roll
arpl
inc
inc
test
xchg
pop
leave
popa
rorb
cmpsb
jns
pusha
mov
loopne
cmp
cmp
sub
rcr
int3
or
dec
push
mov
into
lods
jl
push
jle
mov
sti
fwait
push
add
jo
mov
add
int
inc
mov
lret
insb
aaa
icebp
dec
fdivs
mov
aaa
adc
imul
ds
icebp
mov
sbb
mov
data16
inc
cmp
in
jl
rcrl
das
jle
mov
and
jae
xor
ds
roll
inc
fsubr
bound
dec
aad
cli
push
imul
fcos
leave
pusha
xor
cmp
sub
popa
stos
add
mov
mov
fs
nop
xor
lea
mov
lahf
jbe
rcrl
in
add
mov
out
cmpsl
add
push
nop
mov
mov
iret
mov
cmc
and
sub
inc
push
jl
adc
loopne
mulb
pop
sub
sahf
and
pop
jg
add
xchg
inc
and
mov
mov
push
jno
icebp
fs
movsb
int
mov
je
jg
or
lods
xor
add
sub
mov
pop
mov
pop
push
in
push
fisubrl
push
stos
jb
adc
xchg
sub
jbe
js
js
inc
mov
xor
lods
clc
dec
daa
pop
sub
repnz
jno
scas
into
sbb
xchg
fwait
data16
out
mov
pop
test
rcll
mov
pop
mov
add
data16
cmpsl
sub
xor
enter
or
mov
and
outsl
lahf
ljmp
lods
clc
das
xchg
cmp
test
inc
xor
inc
orl
mov
xlat
rol
loope
in
lret
sub
insl
push
pop
fidivl
lret
xchg
push
inc
mov
lods
test
fcomp
xchg
push
jno
bound
andl
dec
sbb
cmp
sbbb
les
test
jo
and
lret
mov
pop
mull
inc
shl
enter
sub
pop
je
cs
rcll
add
cs
lods
xlat
sub
jo
jg
fdivs
pop
jg
lea
xchg
leave
sub
xor
cmp
testl
jp
popa
and
xchg
pop
leave
and
push
xor
inc
or
sahf
jmp
in
inc
pop
push
mov
imulb
fildl
arpl
fildl
cwtl
jbe
push
and
imul
out
mov
insl
cmp
das
jmp
in
dec
daa
mov
xchg
add
pop
repnz
cmp
fprem
sar
clc
sub
pop
fldenv
orb
lock
mov
hlt
outsl
mov
decb
and
cld
adc
data16
pop
mov
adc
cmpsl
xor
or
fs
mov
cmp
add
adc
dec
out
xor
push
mov
mov
ds
sbb
add
insl
pop
push
mov
inc
xor
xchg
or
jbe
popa
clc
loop
test
stos
adcb
pop
sahf
arpl
dec
xor
inc
loopne
jne
iret
dec
push
test
xchg
sub
add
inc
lret
fidivl
push
add
dec
xchg
mov
push
mov
mov
out
cmpsb
mov
adc
in
mov
mov
mov
xchg
push
adc
and
mov
dec
insb
add
jns
outsl
fistpll
lret
es
std
mov
push
lds
push
push
jb
mov
jmp
inc
sbb
cmp
dec
imul
mov
movb
xorb
fwait
pop
ljmp
inc
jge
jbe
fsubp
movsl
out
inc
inc
je
aad
scas
and
xlat
mov
push
outsw
mov
mov
xor
cmc
adc
pop
and
jo
aas
shll
add
gs
xsaves
add
xchg
fnstenv
add
lods
inc
lret
adc
pop
enter
or
mov
jg
inc
inc
daa
push
mov
test
mov
mov
nop
sti
imul
cld
mov
test
push
jae
int3
iret
repnz
and
push
jmp
pop
sbb
lods
or
pop
ss
push
xchg
pop
lock
int3
push
outsl
int
ja
and
sahf
mov
ja
xor
jmp
cli
inc
imul
xchg
mov
movsb
sub
pop
out
into
cmc
lods
ds
jbe
inc
sub
dec
movsb
frstor
cmpps
aam
lahf
jo
movsl
aas
test
lea
push
test
adc
cmovns
test
test
or
push
scas
js
pop
mov
loop
add
vpsadbw
sub
rol
mov
test
iret
popa
and
mov
mov
dec
ljmp
jb
rorl
sbb
mov
lahf
pop
outsl
stos
dec
push
fisttpll
movsl
addr16
xchg
add
ret
cld
lds
inc
pushf
hlt
or
mov
jp
outsl
jnp
fbstp
loop,pt
pop
adc
mov
int3
arpl
jno
pop
mov
dec
fdivl
push
mov
ja
mov
xchg
cs
mov
jmp
aas
push
xor
js
stc
in
and
dec
mov
push
mov
pop
and
lret
jae
aaa
imul
jae
cmp
push
stc
xchg
scas
xchg
mov
ficomps
inc
jle
shl
xchg
or
mov
fldcw
or
cmp
mov
xchg
pop
xchg
sub
fidivs
push
lods
xchg
push
cwtl
ret
int
pop
jne
mov
sub
mov
insl
test
sbb
ja
lods
xor
bound
inc
mov
mov
adc
sub
jmp
add
dec
es
out
dec
push
and
sub
add
sbb
lcall
sbb
dec
pop
adc
call
push
sub
push
push
dec
test
push
pop
xor
jmp
aad
jno
sub
mov
cmc
rcrb
test
mov
addb
mov
adc
xchg
dec
xchg
add
lods
pusha
sbb
xchg
jp
aam
lock
and
repnz
fisttpl
leave
mov
gs
leavew
pop
lret
inc
mov
add
lahf
ret
test
pop
cld
adc
mov
stc
out
dec
call
pop
in
inc
or
aas
cmp
xchg
clc
push
loop
mov
jo
mov
pushf
sub
pop
es
pop
mov
dec
jmp
repz
lds
jmp
mov
push
scas
sarb
mov
enter
cmp
dec
xchg
and
mov
mov
push
xor
inc
movsb
mov
aas
es
loop
and
mov
hlt
jecxz
stos
shrb
jg
mov
cwtl
or
nop
xor
jb
sarl
cmpsb
push
jp
mov
push
mov
xchg
cs
xchg
pop
hlt
adc
scas
xor
test
orb
xchg
sahf
sub
repnz
mov
sbb
inc
std
xlat
jmp
hlt
jns
orb
shll
mov
popf
scas
out
pop
jmp
loop
add
push
jbe
test
out
xlat
sbb
insb
cmp
enter
push
ss
lret
out
sbb
or
or
aas
nop
stos
jl
aaa
mov
test
mov
jg
loope
test
int3
testl
xchg
stos
mov
arpl
in
sbb
dec
negb
mov
jmp
dec
xor
inc
and
shl
inc
cmc
fimuls
xchg
sub
test
lret
into
and
lods
shll
std
pop
mov
cmp
mov
ret
sub
pushf
gs
out
pop
cld
sti
push
add
inc
push
imul
mov
jge
loopne
adc
es
mov
cmp
aaa
addr16
fsubrp
aaa
mov
inc
push
fwait
xor
cmp
jg
push
fs
adc
jae
pop
mov
rolb
push
inc
mov
mov
xchg
mov
movsb
jge
rclb
rcrb
mov
xchg
push
sub
das
hlt
xor
scas
jg
mov
sbb
add
adc
js
mov
jmp
inc
xor
shlb
jo
loope
mov
dec
adc
fmul
scas
add
sub
dec
or
mov
add
inc
cmpb
dec
xchg
add
add
iret
mov
add
pop
mov
test
outsb
sub
sub
rcll
dec
lods
jmp
mov
inc
lods
clc
mov
xchg
mov
jne
sub
orl
movsl
enter
cmp
test
stos
sub
cmc
sbb
sbb
rolb
jb
inc
fldenv
pop
shll
pusha
div
stos
js
test
call
sbb
push
push
dec
mov
jmp
loop
test
pop
mov
push
xchg
xchg
in
repnz
scas
xchg
lcall
inc
mov
sbb
pusha
jne
pop
insl
or
mov
popa
sub
call
pop
cmp
sar
repz
sub
sbb
into
ret
fsubr
cld
sub
dec
in
sbb
jnp
pop
les
inc
daa
sti
and
adc
xchg
into
pop
ret
in
mov
rorb
divl
pop
mov
fistps
cli
mov
jp
mov
sbb
xlat
shr
rcrb
loop
cmc
stos
stos
fnsave
inc
shrl
pop
xor
out
jnp
cmp
pushf
xor
filds
fwait
pop
out
mov
xor
shl
scas
sbb
inc
dec
rolb
cld
insb
in
mov
in
mov
sub
fucomip
jns
xchg
inc
push
sbb
adc
cmp
or
pop
mov
dec
cli
or
jno
loopne
xchg
int
pop
inc
pop
push
enter
push
pop
mov
xchg
insl
mov
xchg
cli
dec
sub
hlt
and
in
sub
lahf
xor
pop
icebp
clc
sub
mov
jg
adc
out
xor
push
and
jg
js
js
pop
push
dec
and
cmpb
and
in
inc
pop
les
dec
mov
stos
fwait
xor
push
add
clc
shrb
ret
or
mov
rcrb
dec
or
idivb
or
dec
add
sahf
in
xchg
test
push
adcb
dec
ret
insb
or
and
xchg
repz
aas
stos
pop
mov
dec
ss
out
adcl
or
jb
fldcw
mov
ja
leave
dec
dec
adc
xchg
imul
lret
fisttps
add
addl
sub
add
adc
xchg
mov
int
mov
iret
xchg
push
lret
fidivrl
cmp
xchg
mov
in
ljmp
push
jns
sbb
sub
sbb
dec
call
xchg
mov
inc
sahf
pmaxsw
add
cmp
orb
das
repnz
daa
js
dec
inc
aas
inc
xorl
or
mov
push
xor
andb
xor
inc
mov
jns
test
dec
jg
inc
rorl
enter
cltd
pop
clc
cmp
addr16
clc
cmp
push
out
lds
repnz
in
jg
loop
pop
sub
mov
push
push
test
cmc
xchg
mov
ja
dec
dec
setns
add
arpl
xchg
cmp
sub
pop
hlt
cmpsl
adc
jl
out
les
or
imul
repnz
xorb
loop
push
dec
cmp
out
mov
sahf
outsl
sbb
sahf
cmp
inc
mov
xor
int
fdivl
das
mov
aam
push
int3
sbb
mov
aam
mov
arpl
or
xlat
aas
rcrb
shll
lcall
and
xchg
push
inc
jl
xor
in
sti
sbbb
icebp
inc
fisubs
cmpsb
and
test
gs
sbb
dec
divl
push
xor
sahf
ds
xor
test
aaa
daa
cmp
das
aad
jbe
clc
dec
inc
in
negb
lea
xlat
mov
push
ds
jb
or
dec
jl
stc
jl
into
fsubrl
jmp
or
cmp
sbb
stc
nop
mov
push
popf
pop
pop
push
dec
jge
add
sbb
cmpsl
adc
scas
cmpsb
adc
ss
into
push
mov
jp
sti
sub
sub
dec
fistpll
pop
cmp
in
push
enter
cld
mov
jg
mov
les
sarl
pop
adc
jns
xchg
enter
ror
push
psubusw
dec
lahf
repz
pushf
mov
ficompl
std
mov
cmp
mov
les
jb
cwtl
xchg
jp
sub
lret
fs
jbe
or
ds
mov
sbb
fs
inc
pop
dec
lods
push
xor
rorb
fcmovne
push
mov
jae
dec
test
xchg
out
orb
lret
and
iret
fistpll
fnsave
ss
data16
dec
cmp
and
mov
aas
scas
sbb
iret
ret
outsb
push
push
sbb
push
cmp
adc
call
outsb
das
dec
pop
out
and
aas
dec
aas
and
pushf
xchg
cmp
add
pop
imul
push
inc
xchg
mov
inc
mov
gs
pop
loope
mov
cmp
stos
pop
dec
sbb
xchg
sub
pop
dec
mov
jb
inc
int3
xor
xchg
fwait
and
pop
inc
pop
add
stos
inc
nop
xor
call
mov
outsl
nop
xchg
scas
es
mov
mov
cmp
sti
rcr
repnz
addl
pop
fucomp
inc
mov
in
lods
decl
sahf
add
fwait
adc
dec
jae
push
scas
add
xor
jae
adcb
or
mov
and
or
stos
fwait
aad
dec
add
insb
fidivl
push
das
sub
mov
mov
and
push
adc
out
addl
sti
adc
test
lods
mov
test
mov
jo
mov
insl
mov
popf
jge
push
scas
mov
jge
dec
addr16
inc
adc
cmp
xor
push
jne
out
in
ss
dec
xor
jp
out
test
pushf
test
xor
push
add
mov
xor
flds
mov
push
into
loop
push
lock
aaa
lods
cltd
stos
mov
xchg
pop
jg
sub
and
xchg
xor
add
sbb
pusha
testl
incb
loope
xchg
imul
ret
movsb
mov
mov
movsb
movsl
dec
popa
mov
sub
orb
shlb
lea
sbb
xchg
pop
jb
call
movsb
mov
adc
ja
pusha
inc
sbb
mov
sub
xor
sti
insb
mov
leave
adc
negl
mov
not
pop
add
xor
and
andl
add
ret
fcmovu
jg
mov
ret
fwait
daa
mov
push
ljmp
fsubs
out
sub
xchg
adc
aam
sti
inc
pop
ss
rcll
movsb
ss
jno
push
mov
clc
and
sub
jne
iret
dec
test
inc
cmpsl
ds
pop
fs
js
mov
mov
sti
scas
cld
icebp
cmp
popf
in
adc
fnstsw
nop
addr16
push
lcall
xor
dec
xor
shrb
pop
xlat
mov
mov
lcall
dec
fmull
dec
movsb
mov
icebp
mov
sub
fnstcw
rorl
das
pop
out
lds
cli
mov
stc
les
lahf
outsl
push
shll
mov
push
in
repnz
rorb
xchg
inc
loop
mov
jge
mov
jne
mov
push
mov
mov
mov
pusha
xlat
jae
or
insl
int3
adc
inc
lret
dec
loop
sahf
scas
stos
scas
imul
push
js
xchg
pop
or
addr16
aaa
sbb
mov
mov
outsb
pop
or
std
jl
mov
ret
out
ss
ret
iret
pop
mov
sub
das
push
pop
bnd
cmp
mov
cltd
add
mov
faddp
inc
jae
cmc
ret
add
fucom
push
mov
addr16
adc
jae
dec
xor
xchg
cmc
jge
mov
push
inc
mov
sbb
and
and
bound
mov
rol
jg
push
icebp
iret
dec
loope
mov
push
add
into
fimuls
pop
and
scas
xchg
sbb
lods
les
mov
or
jb
pop
movsl
std
jnp
cmp
pop
daa
add
xor
out
movsl
les
aam
stos
mov
frstor
cld
xchg
push
sbb
mov
andb
sbb
mov
sbb
inc
sbbb
cs
out
cli
pop
mov
push
mov
nop
int3
daa
jle
in
adc
std
add
enter
xchg
cmpsl
mov
rorl
push
inc
or
jbe
fs
sarl
test
xor
or
out
sub
daa
inc
jmp
xlat
mov
pushf
sti
sbb
ja
outsl
jne
filds
data16
mov
adc
in
jmp
popf
orl
mov
stos
jo
lock
sbb
je
push
jns
cmp
push
negl
lret
jecxz
shrb
arpl
rcl
pop
push
mov
cmp
lods
pop
in
push
xor
addl
sti
xchg
adcl
add
and
jecxz
adc
enter
or
mov
mov
leave
pusha
inc
lahf
pusha
jl
pushf
jnp
sbb
xchg
xchg
add
outsb
pop
scas
xor
sbb
add
lods
push
imul
cmc
xor
dec
adcl
clc
cmp
sub
xor
pop
add
lret
int
insl
xor
das
and
pop
push
clc
iret
sub
std
scas
aas
mov
ss
stos
adc
inc
popa
xchg
shl
mov
ret
or
push
rcrl
push
add
inc
xchg
xor
push
repz
gs
sub
mov
pop
jne
fldenv
dec
imul
sub
out
sub
xor
adc
pop
mov
mov
out
adc
pop
je
add
or
sbb
sbb
xchg
add
aaa
into
xor
mov
cwtl
repnz
sub
cltd
push
lahf
in
ret
lahf
cmpl
iret
jno
shlb
jno
lea
aam
pop
dec
mov
cmp
sahf
jge
mov
adc
rclb
mov
cmp
in
inc
fcomps
jno
hlt
scas
imull
sti
idivb
pop
xchg
xchg
jnp
inc
mov
ljmp
mov
sbb
daa
mov
fstpl
dec
loop
out
mov
jecxz
push
test
cmp
mov
and
or
jo
stos
pop
or
hlt
mov
or
scas
inc
popa
sub
imul
sbb
push
out
sbb
pop
and
adc
inc
xlat
les
lea
test
and
scas
push
lcall
pusha
clc
jb
fwait
je
mov
xchg
adc
and
enter
dec
in
jl
push
dec
gs
adc
jae
sahf
xor
mov
dec
mov
mov
lret
into
lret
pop
mov
in
jae
sub
xor
out
xchg
sbb
xchg
rcrl
mov
cld
dec
scas
cs
sub
movb
mov
mov
cmp
dec
cmc
add
mov
loope
pop
adc
mov
aaa
lret
sahf
lods
or
push
in
lahf
and
sub
mov
das
ret
outsl
enter
in
addb
sti
xor
and
jae
inc
dec
xchg
sarb
pop
mov
ret
push
es
add
push
jno
and
fwait
pop
inc
sarb
sbb
xchg
mov
or
push
andb
xor
and
pop
test
mov
mov
rcrb
pop
pop
pop
in
jb
xor
push
mov
mov
sub
sbb
iret
pop
cwtl
adc
btc
jne
jp
imul
icebp
sbb
pop
mov
mov
into
hlt
ret
cwtl
stos
push
movsl
dec
loopne
repz
shrl
xchg
push
push
push
daa
outsl
cmp
mov
push
outsl
mov
shrb
mov
mov
jmp
cmp
popf
or
popf
add
test
and
push
mov
push
add
inc
sub
out
shll
data16
jp
lcall
or
cmpsb
les
or
and
lahf
dec
inc
mov
jge
fwait
bound
js
add
mov
lock
sub
pop
mov
mov
xchg
push
push
call
mov
ljmp
es
daa
mov
ljmp
inc
addr16
popa
add
and
pop
push
fstl
out
in
std
sbb
push
stos
ja
sub
push
xor
lea
sbb
inc
xor
inc
ficompl
adc
pusha
loop
push
test
out
or
shr
sub
loope,pt
addr16
add
popa
insl
aaa
imul
sub
xor
xchg
mov
mov
sub
jno
lds
js
mov
cmp
jae
test
popf
mov
andl
test
int3
inc
or
xor
pusha
fimuls
adc
outsb
jle
loopne
xchg
pop
mov
sbb
test
ss
daa
stos
data16
cmp
imul
out
xor
daa
inc
jns
ficomps
add
in
or
in
mov
jo
push
cs
shll
inc
stos
sbbb
push
push
cmp
in
push
ds
fistl
pop
add
inc
movsl
inc
imulw
fxch
repz
cld
repnz
hlt
aam
andb
fucomp
inc
or
and
ret
ja
and
mov
rcr
adc
sbb
inc
fstpl
pop
loope
hlt
notb
inc
icebp
push
push
inc
arpl
lea
pop
daa
cli
or
ret
pop
loopne
jecxz
jge
outsl
movl
jae
sbb
iret
xchg
mov
pop
pop
push
jno
ja
stc
sub
js
add
and
xchg
insl
lds
hlt
outsl
rolb
add
test
or
cmp
aaa
fwait
arpl
and
pop
movsl
loopne
jno
cmpsb
mov
jbe
lea
scas
pop
icebp
loopne
call
xor
stc
sbb
out
mov
pop
pop
xor
mov
xchg
imulb
stos
adc
jmp
mov
sbb
mov
xchg
sbb
push
fisubl
inc
mov
mov
jo
mov
xor
jbe
inc
das
sub
daa
pop
mov
mov
and
mov
pop
xchg
sbb
ret
xlat
xchg
ss
insb
xor
push
cmpsl
add
xor
inc
add
rorl
mov
fcomps
loope
cmpsb
subl
xor
jnp
and
inc
inc
jns
jae
xor
addr16
lcall
dec
push
sbb
mov
xchg
mov
rclb
stos
arpl
je
pop
loop
and
negb
jp
repz
push
xchg
inc
jecxz
xchg
mov
fidivl
add
lea
push
push
in
aad
pop
int
jl
hlt
out
mov
std
add
sahf
adcb
jo
mov
cmpsl
mov
out
aas
jo
rorb
clc
mov
movsb
mov
ds
test
jle
sub
outsl
clc
xchg
sub
outsb
cmp
cmpl
pusha
cwtl
notl
jp
jno
test
movsl
adc
cmp
push
sbb
mov
jge
ret
pop
push
stc
push
lds
xchg
mov
sahf
pop
ds
cmpsb
jg
fdivs
sub
ljmp
and
js
aam
xor
idivl
pop
jle
jns
push
mov
and
ss
negb
sbb
push
repnz
bound
or
inc
shlb
sete
lods
sub
clc
stc
aam
cwtl
adc
out
push
data16
xchg
mov
outsl
jae
pop
repz
jb
movlps
mov
mov
jl
inc
mov
bt
pop
mov
jb
hlt
mov
inc
jnp
jns
imul
lcall
lret
mov
and
adc
inc
imull
cmp
cld
xchg
dec
jl
aam
lods
xchg
sub
out
in
mov
pop
add
xor
xlat
sahf
lods
adc
fs
sti
cmpsl
lock
mov
dec
int
in
jno
sbb
xchg
mov
add
mov
inc
mov
fsubr
sbb
lds
scas
call
sbb
sahf
pop
xor
mov
sbb
repnz
pop
jge
dec
repnz
mov
enter
mov
les
in
jne
inc
mov
dec
mov
inc
jb
shlb
data16
xorl
mov
pop
jb
xchg
outsb
jns
xchg
xor
adc
lcall
dec
movsb
and
bound
mov
aaa
int
rcll
add
sbb
mov
icebp
nop
dec
pusha
addr16
cltd
jns
shlb
push
lods
iret
std
sahf
ss
std
lods
mov
push
out
inc
adc
xor
in
adc
leave
push
arpl
mov
test
push
mov
pop
repnz
xor
and
pop
jecxz
pop
sbb
dec
les
pop
scas
shlb
cmp
out
dec
dec
inc
jecxz
bound
into
sub
mov
lcall
pop
cwtl
xor
sub
mov
add
nop
push
lret
xor
ss
lret
lods
inc
fwait
fwait
cmp
js
test
sti
jbe
push
arpl
mov
inc
movsl
or
out
sti
sbb
and
xlat
lods
lods
push
xor
push
mov
adc
test
lret
divl
xchg
scas
dec
add
xor
jp
or
int
decb
out
sub
ret
clc
push
jp
movsb
push
cwtl
adc
xchg
xchg
jp
xor
dec
out
out
and
js
and
das
imul
inc
jl
cmc
js
inc
mov
lods
cld
jecxz
cmp
push
leave
push
test
xchg
xor
bound
adc
lds
stos
inc
pop
in
mov
les
mov
mov
inc
jg
cs
xchg
stos
jno
add
dec
xchg
push
call
cmp
sub
pop
mov
or
or
sub
mov
push
sub
outsb
aad
jp
xor
cli
out
sub
jae
mov
aad
pusha
pop
enter
jo
xchg
mov
pop
repz
ficomps
inc
jno
jmp
or
mov
lods
outsb
dec
push
mov
dec
stos
stos
dec
xchg
roll
add
jl
loope
in
add
add
push
ret
inc
test
sbb
mov
mov
or
adc
sbb
jmp
out
sbb
xor
mov
pusha
cmpsb
mov
jno
in
dec
out
aam
or
mov
js
je
fsubl
out
or
inc
push
jno
pop
lret
lret
cmp
mov
loop
push
add
or
clc
jbe
mov
sahf
and
mov
decb
jmp
loope,pt
shll
lea
inc
out
test
dec
sbb
movsb
lds
adc
sub
mov
jb
xor
xchg
xchg
mov
add
andl
or
or
pop
xor
ret
mov
sbb
cmp
pop
push
aam
or
mov
daa
xor
jmp
push
pop
sbb
adc
mov
rorb
and
xchg
mov
pop
push
mov
es
fs
push
xchg
mov
jge
adc
orl
xchg
lods
pop
fsubl
iret
gs
fwait
test
sbb
and
lea
xor
fisubs
mov
bound
sbb
mov
sbb
loope
pop
push
add
jl
push
clc
sahf
and
out
pop
add
jecxz
jmp
cld
pop
or
and
pusha
jae
mov
xlat
dec
ljmp
call
fsubrl
pusha
push
and
xorl
add
pop
repz
dec
jae
imul
or
in
lods
mov
imul
fcomi
pop
faddp
mov
inc
mov
int3
push
fbstp
pop
push
insb
popf
mov
push
mov
jbe
mov
aad
push
or
sbb
xor
std
mov
add
mov
or
rsm
fdivs
xchg
cmpsb
lahf
aam
or
pusha
rcrb
pop
xor
stc
mov
lock
pop
pop
adc
lsl
das
sbb
jae
rorb
pushf
bound
jmp
mov
dec
mov
adc
stos
clc
repz
dec
mov
pushf
jg
lcall
add
fistpl
cmp
mov
aaa
dec
mov
xchg
test
pop
or
or
mov
es
sub
imul
ljmp
in
pop
cmp
test
jle
cmpsl
out
inc
push
inc
out
popa
insl
dec
push
pop
push
scas
add
jnp
test
mov
pop
outsb
ja
mov
rcll
mov
addr16
or
mov
push
mov
add
push
stc
pop
lods
test
mov
mov
lcall
lods
jb
lea
sub
cli
jne
lods
add
mov
sub
sbb
lods
sub
out
xor
rcrl
mov
jne
xor
sbb
mov
sub
sbb
cmp
fcomps
mov
icebp
and
add
fcoms
add
iret
cltd
dec
out
jge
dec
mov
mov
mov
jmp
cmpsl
mov
js
push
xlat
xor
stos
jns
outsb
mov
inc
shl
mov
cmpb
cmp
jns
xor
pop
dec
adc
test
mov
xchg
leave
sbb
mov
lock
loope
and
jo
jne
adc
ds
addl
inc
in
cld
repnz
into
lods
les
inc
iret
hlt
insb
add
stos
push
scas
ret
pop
shrl
or
jb
subl
push
cs
dec
dec
adc
pushl
sub
jmp
add
sub
pop
lods
insb
add
inc
in
mov
out
sub
or
js
fs
cltd
mov
adc
insb
mov
repz
test
decl
and
adc
cwtl
lret
ljmp
jno
sub
sbb
ds
dec
es
lret
mov
push
adc
popf
xchg
cmpsl
ret
outsl
jae
mov
cmpsb
jl
fadds
push
out
fistl
or
imul
popa
push
xchg
sbb
in
cmp
mov
jne
or
repz
aaa
gs
ficompl
aas
test
mov
or
mov
cli
sbb
mov
sbb
addr16
loopne
dec
fsubr
cmp
add
test
stos
mov
sub
test
jmp
mov
inc
mov
je
push
jo
push
push
ljmp
jno
xchg
pusha
call
push
sti
inc
fsub
hlt
adc
push
js
scas
sahf
neg
mov
dec
push
pop
push
and
inc
pop
pop
pop
test
sub
xchg
cltd
adc
inc
rolb
movsl
lods
inc
pop
jmp
gs
in
hlt
mov
mov
out
dec
out
push
les
push
in
xlat
rorb
or
cld
inc
mov
aad
xor
inc
fsubr
push
pop
xor
add
popa
sahf
stos
xchg
adc
mov
push
ror
and
push
ja
push
mov
mov
sahf
and
or
lahf
notb
xorb
xor
push
push
lods
daa
iret
shl
clc
add
lock
out
or
loop
mov
cmp
repz
fadds
stos
lcall
xorb
mov
xchg
lods
push
mov
adc
xor
pushf
dec
data16
cltd
adc
aam
pop
out
dec
ss
xchg
iret
inc
jge
cmpsl
dec
subl
popf
sbb
imul
pusha
adc
or
mov
into
mov
add
pop
in
outsb
push
pop
xchg
jb
inc
jle
pop
pop
out
lret
cmpsb
loopne
stos
or
int3
sub
insb
iret
les
inc
cwtl
stc
shl
xor
iret
push
les
sub
std
sub
mov
imul
mov
add
add
or
cmp
je
and
push
cmpsb
adc
movsl
jg
cmpsb
lcall
jns
pop
rep
movaps
and
lahf
cmp
sarl
add
push
ret
and
mov
test
lock
push
push
std
mov
push
enter
fstl
mov
or
mov
imul
call
rolb
pop
pop
notl
scas
sub
lea
ss
nop
adc
inc
jno
pop
test
scas
mov
mov
jae
int3
fiadds
cmp
icebp
mov
mov
pop
sbb
lods
pop
xchg
data16
stc
adc
jl
jmp
jne
cmp
clc
xchg
sub
mov
ja
cli
cmpsb
adc
ds
mov
loopne
sbbl
and
mov
outsl
pop
adc
leave
outsb
jo,pn
ljmp
push
cmp
int
mov
jge
clc
in
out
pop
addr16
xchg
clc
fcomps
test
sarb
add
adc
scas
notl
push
test
mov
shrb
loope
daa
aaa
stc
es
jbe
xchg
les
dec
mov
ficompl
lcall
xchg
mov
xchg
push
stos
jnp
nop
sbb
icebp
push
jmp
inc
out
push
in
or
sbb
push
loop
adc
fs
movsl
xchg
shrl
jmp
and
outsb
add
je
mov
loope
pop
mov
pop
jmp
fcomp
je
mov
sti
bound
sub
std
cli
stc
subb
or
pop
ret
adc
mov
jmp
mov
int3
jmp
pusha
fsubs
movsb
inc
xor
sub
sub
std
lahf
addr16
push
cmpl
push
jo
sbb
sarl
xor
dec
ss
movsl
push
push
aad
mov
aaa
test
lret
inc
push
adc
testb
mov
out
pop
int
xchg
add
add
or
ss
sbb
into
loope
cmp
add
mov
cmc
subl
dec
out
adc
outsl
in
js
mov
call
cld
inc
and
xchg
aam
out
addr16
and
lahf
loopne
rcrl
pop
mov
js
fwait
add
adcl
cmpsb
mov
clc
fimull
rcll
xchg
and
ljmp
idivb
xchg
lcall
mov
shl
scas
and
pop
cmp
nop
stos
hlt
imul
cmovno
gs
jno
loop
in
add
and
rep
inc
clc
rcrl
gs
sub
xchg
jge
clc
jg
repz
adc
fdivl
sarl
mov
cmp
icebp
stos
cmp
aas
popf
in
int3
jae
aas
outsb
jo
mov
aam
push
outsb
dec
cwtl
mov
popl
or
sub
loope
je
pop
push
mov
and
imul
addr16
or
or
mov
add
jae
lods
in
pop
imul
push
das
cmp
cmpsl
push
sub
dec
mov
hlt
pop
push
stos
ret
jnp
mov
mov
stos
cmp
popf
data16
add
mov
ret
fsub
leave
in
dec
fdivp
mov
lods
xchg
lahf
leave
pop
test
imul
push
sub
cmp
mov
push
stos
repz
outsb
mov
pop
push
mov
jne
add
imul
xchg
dec
inc
push
push
cld
jne
fnsave
jae
cmp
pop
imul
fisubrl
lcall
mov
sub
mov
ja
adcb
xchg
pop
sahf
test
lret
ljmp
inc
aas
jge
pushl
push
ja
mov
cwtl
jbe
inc
loope
push
clc
pop
cmpsb
out
orl
js
xor
pop
scas
lods
negb
mov
push
xor
sbb
clc
inc
adc
stc
sbb
xor
jne
cmp
andb
movsb
push
sbb
dec
cmc
decb
outsb
push
fadd
add
repz
test
sub
loope
insb
pop
mov
in
add
inc
loope
subl
mov
ss
jb
shll
mov
mov
jae
iret
dec
or
test
pop
enter
push
fs
mov
ja
pushf
js
jecxz
mov
out
lahf
inc
mov
jmp
lret
and
stc
mov
rcll
shrl
jns
add
ret
aaa
add
loope
cmpsb
mov
shll
jp
hlt
fnstenv
scas
clc
les
dec
dec
in
xchg
insl
sub
pop
insl
call
je
mov
int3
and
jbe
mov
ss
daa
push
aad
cmp
xor
incb
das
stc
pop
leave
enter
loope
sub
les
sub
test
mov
sub
outsl
xor
faddp
jge
shlb
sub
ja
push
jbe
mov
clc
mov
sub
pop
push
pop
pop
pop
in
iret
lcall
jl
or
jmp
test
ss
push
push
pop
scas
ja
mov
mov
jecxz
adc
mov
pop
stos
mov
lahf
movsl
fsubrs
mov
notb
mov
sahf
pop
ficoms
aam
jp
outsl
out
lea
xor
lret
mov
adc
mov
push
sahf
cwtl
std
cwtl
push
aas
sti
fsubrp
cmp
cmpsl
imul
loop
leave
fdivl
xor
inc
push
ret
scas
push
rcr
add
nop
outsl
in
imul
popf
adc
sub
lret
lock
dec
arpl
cmp
pop
add
aaa
xor
or
xchg
jns
or
xchg
sub
clc
push
icebp
shll
mov
add
into
and
out
dec
mov
lret
ljmp
out
cmp
push
cmp
ljmp
decb
mov
mov
ret
movsb
hlt
cmp
jmp
sbb
xorl
lods
repz
out
or
xchg
ds
push
mov
sbb
adc
inc
xchg
cltd
int
mov
bound
test
cld
mov
pop
shrb
lock
inc
loope
clc
lahf
inc
pop
ret
out
dec
jmp
jge
push
imul
mov
je
std
sbb
repnz
leave
pusha
push
adc
dec
lret
pop
mov
mov
sbb
mov
test
aad
and
push
fistl
popa
aaa
negb
xchg
mov
data16
jl
and
pushf
push
or
mov
imul
sub
mov
pop
xor
inc
mov
out
cmp
jle
mov
adc
imul
sub
or
in
push
iret
fisttpll
in
cmpsl
pandn
mov
jae
add
sbb
xor
aam
test
pop
outsb
fstps
sbb
dec
mov
sbb
cmpsb
mov
pop
xchg
inc
mov
popa
and
inc
cmpsl
out
std
aad
fistpl
repz
pop
test
xchg
adc
pop
out
outsb
insb
xor
sub
lret
je
mov
or
jae
xorl
xlat
add
std
fdivrl
or
andb
push
mov
dec
cs
add
adc
movq
sbb
out
mov
mov
scas
movsb
out
cmp
pop
inc
xchg
aas
adc
pop
lock
insb
sub
iret
arpl
jne
aas
bound
mov
dec
jg
jp
cmp
cmpl
mov
push
inc
hlt
fwait
out
xorb
or
cmp
jp
jbe
test
nop
adc
fnsave
pusha
pop
out
mov
and
mov
mov
popf
loopne
out
mov
pop
stc
adc
push
lods
mov
outsl
sbb
sbb
push
jb
cmp
lods
add
mov
ja
sub
pushf
xor
ds
jmp
cmp
orl
insb
js
stos
xchg
pop
sub
test
mov
pop
adc
inc
leave
bound
inc
fsubr
xchg
adc
xchg
mov
lahf
test
cmp
dec
xchg
bound
jnp
xor
pop
sub
lcall
mov
cmp
sub
pop
jle
shll
xchg
fld
repz
push
outsl
inc
outsl
xchg
test
aad
lahf
outsb
aad
loope
xchg
xor
fmull
lcall
mov
mov
int
cli
pop
stos
jmp
fs
push
mov
or
leave
enter
jnp
pop
enter
test
or
mov
sub
push
adc
mov
cs
dec
ret
mov
xor
push
xchg
sub
adc
in
aaa
mov
hlt
jns
inc
loop
fld
loope
je
not
sub
xlat
scas
inc
pop
adc
add
sar
and
sti
cmp
je
in
push
aaa
clc
xchg
jno
cmc
mov
ljmp
jb
lret
stos
call
mov
jae,pn
cltd
mov
lock
ret
cmp
jne
lcall
add
jle
pop
push
mov
lock
push
js
xlat
cmc
ds
movsb
cmp
add
xorb
ret
mov
dec
aas
jge
movsb
out
pop
sub
jp
les
mov
xor
jnp
pop
lock
sti
and
inc
mov
add
shl
js
loop
mov
sbbb
cmc
push
dec
sub
movsl
or
mov
je
stc
sbb
cmc
inc
inc
push
dec
cmp
mov
pop
mov
gs
or
adc
pop
sub
sub
mov
test
mov
cmpsb
add
push
xor
xchg
imul
cmp
stos
cmp
addb
xchg
push
cmp
fs
xchg
aam
pop
inc
jp
cli
out
aad
int3
movl
and
and
and
test
pop
ret
idivl
lret
bound
lcall
hlt
cs
xor
xchg
mov
ficompl
xchg
mov
push
and
mov
jae
pop
sub
cltd
adcl
xor
xor
sub
popa
mov
sbb
sub
add
mov
cmp
and
pop
popa
call
sbb
std
mov
stc
or
loop
es
roll
ss
mov
jge
fucomip
aas
push
dec
in
sbb
xchg
push
fildll
jae
mov
push
add
imul
push
inc
sbb
mov
xlat
or
push
call
nop
daa
icebp
inc
xchg
scas
mov
addr16
sahf
pop
push
cmp
mov
jne
sbb
adc
add
lods
cmp
push
push
sbbb
cli
lcall
pop
ljmp
in
rclb
cmc
mov
int
mov
mov
test
sbb
lods
jle
mov
mov
push
and
js
popa
orl
dec
xchg
mov
push
lret
rorb
jo
mov
fisubrl
pop
pop
jg
lahf
mov
dec
and
cmp
neg
lret
mov
filds
xor
sub
stos
cltd
or
pop
pop
repnz
or
shl
je
imul
xor
mov
out
aaa
popf
ret
sbb
xor
pop
mov
mov
fidivrl
gs
xchg
sbb
sti
mov
fimull
jmp
aad
mov
lock
sbb
cmc
xchg
aaa
push
leave
push
popa
cmp
out
cmp
pop
andb
pop
scas
inc
mov
inc
fldcw
dec
adc
mov
xchg
jae
xchg
add
adc
inc
push
mov
xchg
lret
sbb
popf
jecxz
inc
xchg
add
jne
cmp
cmp
cmp
nop
insb
stc
popl
cli
leave
mov
sub
cmc
or
fdivs
push
ljmp
out
pop
add
inc
dec
pop
sub
int3
xchg
lods
fnsave
iret
in
sti
pop
lods
lret
and
enter
rcll
mov
pop
call
add
hlt
pop
mov
mov
xchg
push
sarb
push
mov
ja
outsb
mov
mov
repz
push
popf
sub
sbb
add
adc
lea
cmp
fwait
cmp
inc
fstpt
decl
lock
pop
jb
scas
sub
push
sub
in
je
out
inc
jg
jcxz
push
push
scas
or
add
or
je
sub
inc
mov
and
mov
stc
pop
outsl
add
mov
and
mov
cmp
jg
and
dec
stos
jl
stos
adc
loope
mov
sub
lcall
push
push
mov
fdiv
pop
js
dec
cmp
jp
fbstp
push
push
js
cmp
test
add
xchg
jb
ret
dec
in
jmp
pop
mov
dec
rcrb
fidivs
push
mov
xor
adc
jae
inc
in
test
sbb
std
mov
xchg
sub
mov
iret
push
cltd
inc
popf
inc
das
movzbl
sub
adc
test
lcall
jecxz
sbb
call
jno
push
sub
xchg
out
lods
sub
inc
mov
mov
fucomp
inc
xlat
push
xor
mov
pop
call
jmp
scas
call
andl
sub
inc
pop
test
movsl
xchg
int
scas
pop
jo
rolb
add
pop
sub
xchg
fdivrs
arpl
pop
inc
inc
lods
jo
cmp
stos
imulb
inc
sbb
push
adc
mov
push
add
lods
fpatan
mov
popa
sub
mov
pusha
leave
aaa
jbe
or
les
pop
xchg
enter
push
mov
lcall
add
and
dec
in
incb
test
sub
xor
cmp
mov
pop
mov
fstp
mov
mov
aad
iret
cmp
and
cltd
cmp
in
loopne
xchg
fwait
push
push
call
adc
pop
bnd
stos
mov
les
mov
cmp
nop
pop
and
lea
fwait
aam
int
jecxz
xchg
mov
movsb
jl
xchg
pop
pushf
sbb
clc
outsl
bound
push
gs
sbb
enter
sbbb
mov
xchg
cmp
pop
fldl
pusha
aas
mov
out
je
mov
in
adc
push
push
cmpsl
pop
pop
imul
mov
gs
cmp
sub
mov
cs
iret
fstpt
ficompl
pusha
sbb
imul
data16
mov
mov
push
jl
mov
and
push
mov
enter
in
incb
inc
push
or
cmp
out
xor
sbb
arpl
pushf
inc
and
mov
cmpl
push
out
adc
dec
dec
es
cmc
sbbl
ret
mov
popf
xor
dec
jge
aas
mov
fbld
shr
mov
sbbb
aaa
fnsave
in
add
cld
xchg
xchg
xchg
push
popf
xor
jbe
andb
mov
inc
mov
cmp
fs
sub
cmpsb
xchg
sub
xchg
insl
popf
or
psrad
ret
add
adc
inc
xor
aas
and
scas
popa
cmpsb
sbbl
pop
cld
pop
bound
add
insl
popa
jb
push
xchg
mov
inc
les
lock
loope
out
jl
inc
rorb
push
ljmp
pop
cmp
adc
cmp
rol
sbb
sbb
jp
mov
cmp
lahf
cmp
leave
adc
test
aaa
xor
sbb
imul
lock
pop
dec
xchg
repnz
dec
addr16
and
fwait
cmpsl
out
das
cmp
mov
mov
cmp
dec
es
cs
mov
ljmp
mov
xor
andl
mov
push
mov
or
pcmpeqd
sbb
adc
loope
icebp
add
push
shlb
mov
sbb
aas
adc
addr16
jb
sub
sub
aaa
outsl
add
jno
add
in
sahf
pop
push
pop
sub
stos
daa
push
add
ror
jge
mov
inc
sahf
jl
mov
insb
inc
testl
es
mov
out
aas
das
fbld
mov
jecxz
lock
mov
inc
popl
into
insl
add
ss
push
loopw
incl
jbe
ljmp
mov
repnz
jb
xchg
xor
inc
fucom
xchg
cmp
cmp
lcall
leave
pusha
push
test
iret
ss
jle
push
mov
repz
aad
add
mov
cmpb
jo
mov
test
rorl
incb
push
jb
int
in
and
dec
push
or
dec
iret
in
lods
repz
test
adc
or
test
xor
add
sub
mull
mov
sub
dec
ret
pop
lea
and
adc
sub
xor
inc
dec
pusha
loope
cmpsb
fwait
lret
bound
divb
adc
pop
and
sti
add
and
fnstenv
sub
lret
mov
mov
fcomi
pause
cmp
add
int3
mov
push
or
movsb
cmp
shll
jl
jbe
cmp
fcoml
pop
pop
repnz
dec
adc
xchg
mov
call
pop
or
fbld
inc
sub
loopne
mov
add
loope
add
jb
inc
cmpsl
sbb
add
outsb
jp
xor
in
push
pop
lock
pop
push
bound
in
into
loop
fwait
mov
sub
fidivrs
mov
add
cmc
mov
std
inc
jno
cmp
stos
sub
add
es
xorb
loopne
pop
dec
scas
mov
push
mov
je
scas
add
push
mov
dec
jo
or
and
xor
addr16
push
mov
cmc
xchg
cmp
je
lcall
push
jle
bound
push
std
inc
xchg
jmp
inc
push
dec
outsb
cs
imul
or
cs
push
imul
loop
insl
clc
sbb
jnp
jp
mov
push
push
jmp
lret
add
pop
pushf
dec
lds
dec
inc
pop
pop
add
and
sub
fstpt
add
adc
lods
mov
pop
pop
push
movsl
lea
repz
imull
xchg
sub
std
pop
shrb
mov
dec
and
adc
les
push
lods
or
js
add
call
clc
lods
aas
dec
fnstsw
and
cld
adc
popf
mov
xor
add
pop
lock
shll
and
in
das
xchg
dec
sbb
cmp
mov
fnstcw
xchg
sbb
dec
loop
call
and
mov
out
sbb
or
pusha
lret
or
out
push
cs
sub
dec
pop
das
in
mov
adc
ja
pop
mov
out
sbb
jb
insb
mov
cwtl
sbb
dec
ror
repnz
test
sahf
adc
cs
rclb
push
cmp
fldenv
lret
decb
stos
outsl
push
out
mov
or
lea
sarb
mov
movsl
lods
add
incl
test
adc
addr16
dec
shrl
pop
call
dec
xlat
orl
sub
add
shrb
pop
or
xchg
lahf
sub
cmp
and
mov
inc
mov
mov
decb
push
mov
test
aas
add
stos
test
dec
insb
jp
mov
mov
inc
pop
scas
push
xor
fmuls
mulb
or
neg
loopne
push
out
pop
fst
sbb
jne
and
inc
jmp
lods
mov
popf
push
dec
xchg
push
add
dec
inc
fisttps
mov
loope
dec
mov
mov
push
jmp
xchg
je
xor
push
push
xor
jo
adc
and
mov
push
pushf
or
or
add
sbb
xlat
repz
and
add
adc
mov
fstpt
push
xchg
repnz
xchg
and
and
mov
call
repnz
add
inc
loopne
mov
fs
std
pop
aas
std
or
cmp
addb
and
pop
xor
decl
add
mov
pushf
add
sub
in
fbstp
nop
sbb
scas
dec
mov
cmp
call
rclb
dec
push
jmp
fbstp
divl
pop
aas
std
test
repnz
jne
imull
pusha
pop
pop
xor
das
xlat
push
jle
mov
andb
clc
jl
inc
mov
pushf
mov
mov
mov
mov
dec
mov
cmpsl
test
cmp
bound
shrl
mov
jmp
push
lret
dec
stos
adc
ljmp
adc
sti
sahf
lret
fidivl
pushf
cli
adc
sbb
push
inc
sbb
addr16
adc
jno
repz
testl
femms
fsts
std
sbb
xor
inc
mov
push
sub
fwait
mov
xlat
int
sub
stc
fidivl
and
in
sahf
xor
lcall
mov
loop
jg
mov
aam
xor
sub
mov
adc
js
mov
call
je
popa
sbb
and
daa
and
cmpsl
cmc
out
nopl
in
cmp
push
push
rol
mov
insl
insb
insb
xchg
push
call
mov
insl
lea
mov
or
insb
mov
push
pop
pop
pop
push
xor
push
fcomp
inc
pop
sub
cwtl
outsb
test
xlat
out
sti
pop
push
stos
add
inc
loopne
in
dec
enter
shrb
lcall
and
cmp
clc
inc
addr16
test
adc
push
je
inc
loope
cmpsl
ds
xchg
push
jmp
and
xor
jp
push
and
cltd
test
clc
lock
std
test
and
pop
call
popa
push
outsl
adc
cmp
imul
or
shr
adcb
subl
ret
out
inc
cmp
mov
nop
mov
mov
pop
jecxz
pop
pop
in
adcl
pop
mov
sarb
aad
adc
jmp
ficompl
or
jnp
xchg
popa
mov
jo
jecxz
imul
addr16
push
sbb
ja
cs
je
push
lods
lds
pop
les
insl
xor
xchg
mov
aad
jns,pt
clc
nop
cltd
mov
sbb
pop
push
enter
faddl
in
mov
push
adc
das
adcl
js
mov
or
or
imul
xlat
ljmp
movsb
inc
jbe
sbb
or
into
jmp
fistps
xor
shrb
out
loope
cs
cmpl
jecxz
out
sbb
ds
or
imul
jae
xchg
mov
into
xchg
jae
repz
rolb
xchg
and
pop
push
xchg
or
in
push
in
add
jns
ficoms
js
test
jge
mov
mov
cmpsl
js
mov
add
stc
imul
sbb
mov
mov
loopne
aaa
push
mov
dec
push
mov
mov
dec
and
xlat
addr16
fstps
xor
xchg
int
js
aas
push
mov
pop
or
or
pop
ds
outsl
jns
jnp
movsb
or
sbb
jns
es
pop
mov
lds
dec
jnp
inc
sahf
sahf
mov
jb
roll
pop
lahf
andb
jno
lds
xor
jp
mov
jle
dec
ret
adc
das
ja
sub
xchg
mov
das
cmpsb
xor
hlt
pop
cmc
adc
jle
jge
mov
adc
adc
inc
loopne
cmp
stos
mov
push
mov
mov
and
jmp
mov
mov
push
push
sub
lods
adc
xchg
ffreep
sub
testb
inc
cwtl
cmp
js
xor
loope
add
in
mov
push
mov
mov
fbld
test
xchg
loope
jecxz
xchg
lcall
stos
mov
mov
scas
fidivl
push
arpl
cmp
jae
mov
or
data16
fwait
dec
mov
stos
cmp
sbb
inc
addr16
stc
in
test
dec
mov
repnz
lahf
mov
adc
pop
ret
or
frstor
rorb
push
push
das
mov
mov
jle
ss
sub
cli
ret
int3
sbb
jl
aad
in
hlt
movsb
jae
push
mov
and
xor
inc
mov
jge
pop
je
mov
or
inc
insb
rcll
fldcw
leave
inc
mov
jg
mov
lds
mov
cmp
shrl
loop
jo
pop
cmp
lret
cld
jo
leave
jecxz
adcb
add
jno
fbld
mov
scas
loop
addr16
jns
hlt
scas
fbstp
and
jp
xchg
push
sub
out
sti
jb
iret
out
xchg
leave
mov
daa
push
pop
push
cmpsb
mov
call
fisubrs
incb
scas
cs
scas
push
add
lcall
subl
push
pop
mov
jmp
add
push
sbb
push
and
dec
sub
jmp
mov
dec
ss
clc
addr16
push
sub
cmp
repnz
jno
adc
pop
push
rcrb
call
xchg
adc
mov
jbe
pop
out
cmp
or
aam
negl
mov
cmp
xchg
mov
dec
pop
pop
jns
popf
mov
into
adc
jns
mov
inc
mov
sbb
sbb
fs
sub
jg
inc
fiadds
daa
mov
pop
lock
lds
cli
xchg
pop
in
push
lahf
or
movsb
cmp
aad
mov
mov
stc
inc
inc
xor
mov
fs
jno
andl
test
aam
test
adc
and
icebp
fsubrl
mov
adc
and
neg
adc
mov
test
xor
or
jecxz
fstps
aam
xchg
pop
and
movsl
dec
cmp
dec
dec
and
ljmp
push
call
sub
mov
xor
pop
xor
mov
xor
in
out
int3
inc
xchg
jbe
outsb
test
cwtl
pop
xchg
dec
sbb
fidivs
and
sub
in
and
mov
jns
mov
push
cmp
hlt
adc
xchg
xchg
sahf
and
sub
test
enter
or
test
mov
and
xchg
les
xor
jmp
push
push
dec
cmpsl
cld
sti
fisttpll
dec
jg
xchg
mov
mov
mov
cmpsl
imul
mov
dec
jge
cli
and
cmp
push
fwait
push
xor
punpckldq
cmpsb
or
fidivs
lcall
sbb
in
push
pop
sub
push
addb
je
fdivrs
ficomps
or
test
sub
int3
fidivs
push
movsl
mov
jle
mov
and
insb
push
pop
repz
nop
xchg
sub
cmc
pop
mov
xor
je
cwtl
xchg
add
scas
xchg
mov
push
mov
sub
cs
mov
push
xlat
rcpps
pop
mov
xor
imul
or
cs
sub
lahf
ficompl
cmpsb
pop
pusha
or
fidivl
xchg
mov
sub
mov
pop
pop
gs
mov
mov
into
xchg
mov
jno
loop
jo
lea
imul
cld
add
scas
subl
out
subl
adc
leave
inc
pop
scas
cmp
jae
popf
lods
roll
out
test
jae
fcompl
rcll
addb
cltd
pop
data16
std
xchg
sbb
das
add
lods
add
xor
or
mov
inc
pusha
divl
cld
push
inc
aam
inc
fsubrl
cmpsl
jmp
test
sahf
lahf
int
loopne
mov
mov
lods
jge
pop
add
xor
inc
xchg
pop
sti
add
test
inc
pop
movb
jb
aaa
cwtl
pop
jmp
mov
sbb
push
cmc
lcall
jg
xchg
cmpsl
cmp
insb
or
jb
sbb
stos
mov
sbb
mov
cmp
mov
sarb
xchg
add
popa
pop
in
cmp
loop
adc
mov
scas
cmpsl
out
sti
repnz
fst
dec
mov
imul
in
into
jmpw
out
adc
inc
ret
add
xor
mov
pop
sub
or
stc
jne
add
divl
xor
cwtl
imulb
cmp
pusha
mov
pushf
push
cmp
jnp
push
dec
ds
adc
mov
and
mov
fisubrs
rclb
cmc
loope
daa
lds
xchg
xchg
and
xor
mov
lret
jmp
sub
lcall
inc
mov
ret
ss
pop
push
sbb
xchg
lock
add
cmp
fsubl
adc
js
cs
dec
loop
aam
fs
lock
in
nop
xchg
sub
pop
out
ret
lea
dec
stos
jle
mov
cmp
lahf
xor
push
jo
pop
cmc
lahf
xchg
xlat
sti
pop
dec
sbbl
push
scas
lahf
bound
negb
hlt
sub
mov
subl
sub
js
dec
push
loop
mov
jp
call
or
sbb
lcall
xor
daa
test
stos
nopl
imul
mov
call
sbb
ficomps
movsb
xchg
lahf
cltd
in
int
sub
xor
push
pop
xchg
adc
divb
or
sbb
cld
xchg
inc
inc
pop
loope
out
lahf
xchg
fidivrl
lods
cmp
jge
and
mov
dec
jmp
test
inc
aas
dec
and
jns
or
icebp
cmp
and
sahf
and
mov
or
mov
dec
sub
sarl
xchg
jp
lahf
mull
leave
and
sbb
movsb
cmp
mov
pushf
js
call
les
test
push
adc
mov
lods
mov
mov
insl
lcall
dec
je
imul
data16
mov
in
hlt
rcrw
jns
adc
pop
cmpsl
xchg
adc
adc
adc
into
inc
jge
and
adc
mov
sbb
mov
xlat
icebp
fwait
cmpsl
and
aaa
mov
dec
jge
and
std
aaa
mov
mov
inc
or
ffreep
add
jnp
repnz
je
fiadds
hlt
mov
out
imul
fs
andl
inc
push
sub
jo
sbb
mov
sbb
sarb
icebp
popa
mov
xchg
enter
mov
loop
movsb
lret
mov
jne
or
xchg
adc
je
push
ds
mov
loop
add
mov
xchg
sub
cmpsl
push
std
inc
repz
bound
sub
adcl
dec
out
xchg
cs
mov
jl
aad
rclb
mov
jge
and
jmp
mov
arpl
and
cmp
mov
test
adc
xor
inc
les
rcl
int3
dec
xchg
lods
stc
pop
repnz
cltd
stos
push
cltd
and
sub
xchg
cmpsl
out
pusha
hlt
fists
int3
pop
ljmp
in
mov
push
mov
hlt
popa
enter
cmp
fisubrs
fdivr
dec
lock
dec
pop
cwtl
jne
mov
lods
cwtl
das
in
xor
aam
stos
fs
in
pushf
lret
jbe
xor
fisttps
dec
pop
add
cltd
mov
out
mov
inc
sahf
lods
pop
fdivl
lret
inc
in
fimuls
sbb
scas
ljmp
sub
fdivs
and
mov
popf
scas
dec
hlt
add
mov
jle
mov
dec
pusha
test
xchg
jg
mov
test
sbb
xchg
sbb
dec
daa
push
lock
insb
leave
jbe
loop
push
fwait
daa
std
arpl
pop
push
dec
and
sub
jo
cwtl
dec
push
repnz
sbb
cwtl
mov
pop
stos
loop
pop
imul
mov
sbb
fstpl
cmp
cs
and
push
mov
xchg
and
cmp
mov
bound
xor
lret
push
sbbb
repz
add
mov
pop
push
cmc
mov
jb
fidivl
pop
rcrl
clc
and
fs
sbbl
sub
xor
adc
fsubrs
cmc
xor
mov
mul
and
js
xchg
adcb
cwtl
mov
and
mov
ret
jl
sub
stos
rol
in
test
rorb
inc
inc
jmp
jns
gs
or
adc
cltd
stos
testb
dec
shrl
arpl
dec
enter
ret
and
cld
cmpl
sub
xchg
pusha
add
push
mov
repz
fbld
push
loope
andl
pop
push
mov
shlb
pop
sub
out
cmp
hlt
or
roll
pop
inc
jge
jg
imul
test
inc
mov
dec
pop
repnz
rcrb
mov
outsl
loop
xor
jge
outsb
cmp
shl
mov
sbb
adc
xchg
popf
and
push
ret
pop
sub
jne
cli
das
add
test
push
xor
and
cmp
mov
lret
orl
addr16
mov
je
pop
imul
loopne
push
popf
aam
mov
push
mov
sub
sahf
pop
daa
test
cmp
mov
test
jne
add
sbb
mov
cltd
test
scas
xlat
subb
jno
and
mov
ss
inc
ja
sbb
scas
push
ja
fidivrs
inc
das
jg
mov
addr16
dec
fwait
or
ljmp
test
fisubrl
aam
sub
xor
jle
mov
pop
adc
sbb
add
mov
jae
rcl
jp
test
into
cmp
flds
es
adc
jecxz
cmp
scas
test
clc
mov
mov
mov
jg
xchg
lods
cli
xchg
fistpll
frstor
ds
in
cmpsl
ds
jle
mov
lcall
fdivl
dec
sbb
xor
and
aam
ret
ss
inc
or
jb
adc
cmp
mov
addr16
fildll
cmp
push
inc
out
lcall
fwait
push
push
fwait
adc
mov
outsl
xchg
sub
movsl
pop
data16
jp
sbb
aad
or
shrb
mov
mov
pop
jo
push
sti
push
or
jg
xorl
pushf
jo
popl
mov
sahf
mov
xor
mov
jl
mov
mov
mov
add
dec
loopne
sub
test
pop
mov
test
mov
gs
fidivrs
and
mov
mov
je
addr16
push
mov
jl
cmc
mov
xchg
jbe
xchg
adc
in
xor
lcall
and
repnz
push
cmpsb
pop
fbld
rcrl
mov
adc
cmp
fdivs
hlt
clc
jbe
add
loope
dec
ss
cwtl
adc
iret
and
xchg
lret
in
inc
jp
jb
cmp
jp
and
rcrl
inc
add
sarb
rol
push
add
fidivrl
jp
mov
dec
sbb
push
dec
push
cmp
in
arpl
mov
push
loope
xchg
cld
jg
and
jl
push
pop
stos
fucomi
orl
or
or
jecxz
fists
jo
jge
fcmovnu
arpl
xlat
sbb
call
xchg
sub
outsb
shl
sbb
mov
insl
xor
aas
push
pop
mov
inc
jne
sbb
int3
sbb
xchg
out
les
out
js
pop
rorl
scas
mov
ficoms
xchg
jbe
mov
fildl
test
xlat
cmp
cmpsb
ds
mov
addr16
pop
out
jge
out
jecxz
mov
push
incb
ficoms
fisubl
jo
push
sub
inc
add
xor
sub
aad
mov
test
cmc
push
stos
mov
push
mov
and
mov
insl
cmp
popa
inc
xorl
xor
mov
cli
mov
sub
cmp
pop
pop
xchg
ds
push
aaa
inc
in
or
xor
outsl
xor
decb
adc
jne
pushl
jo
jg
inc
mov
mov
in
and
add
sub
out
cltd
sahf
sbb
dec
and
pop
push
das
scas
pop
jge
dec
daa
adc
out
mov
test
adc
iret
test
push
in
jmp
or
inc
lea
test
ret
insb
pop
cli
or
jns
dec
addr16
mov
mov
push
mov
pop
pop
popf
dec
mov
push
dec
out
ja
insl
fsubrp
lahf
and
add
lds
andl
aam
xor
andl
ljmp
in
std
jl
pusha
lods
xchg
mov
dec
inc
ljmp
jno
xchg
xlat
inc
sub
out
imul
add
lea
mov
mov
stos
jmp
shr
sbb
aad
mov
add
sub
cltd
imul
add
data16
sbb
and
push
push
sub
add
fidivs
mov
mov
call
repnz
mov
rorb
sbb
movsb
repz
insl
movsb
negl
dec
mov
mov
xchg
arpl
dec
or
jle
xor
pusha
xchg
adc
sti
fwait
inc
mov
cltd
stos
mov
in
lea
jb
cmpsb
xor
xlat
or
cmp
add
push
jnp
or
and
sbb
in
stos
xchg
repz
shl
mov
xor
out
fidivl
cld
xor
mov
sub
pop
xchg
cld
pop
insb
es
pusha
mov
fsubs
std
sbb
je
push
add
cmpl
mov
sub
shl
jl
push
out
fstpl
pop
aam
cmp
push
orb
subb
dec
jne
imul
into
into
mov
fwait
sub
ljmp
mov
ds
pop
xchg
aad
mov
cmp
jno
repz
mov
mov
push
jl
push
mov
sti
dec
pop
ds
jnp
lods
mov
cltd
xor
addr16
mov
out
sub
outsb
push
jmp
push
pop
lock
int
xchg
pop
sbb
ret
sbb
jge
xor
or
cmpsl
xor
add
add
lret
sbb
in
and
cmpsl
arpl
dec
outsb
mov
les
xor
cmp
push
outsl
cwtl
inc
pop
sahf
push
push
push
jo
daa
loope
or
scas
roll
xchg
scas
lcall
adc
fdivrs
fs
ljmp
lods
inc
fdivrl
xlat
repz
mov
iret
loope
dec
pop
movsb
test
ret
shrl
popa
jnp
shll
xchg
mov
mov
push
jg
mov
fnsave
scas
rcl
xlat
outsb
dec
div
jl
jecxz
test
popf
add
imul
or
ret
fidivl
in
in
cmpl
scas
mov
ljmp
jle
fmuls
xchg
jnp
push
jne
pop
lahf
sbb
inc
ret
mov
mov
xlat
loope
sub
pop
dec
negb
push
adc
bound
jge
popa
sti
inc
mov
cld
sbb
lea
adc
lea
sub
push
outsl
cmc
jae
mov
or
imul
in
sbb
cltd
xchg
sbb
jmp
and
insb
lock
nop
and
lods
cmpsl
mov
pop
xor
fdivrs
push
xchg
jb
es
cmpsl
jno
xchg
or
das
pop
pop
or
push
ss
push
iret
mov
lret
sti
pop
ds
popa
outsb
sub
call
sub
pushf
clc
add
mov
push
cmp
std
or
lods
test
push
push
pushf
repnz
ljmp
jno
scas
repz
out
dec
cs
popf
insl
push
add
mov
jnp
icebp
mov
mov
pop
fnstsw
insl
aad
or
cmpsb
add
mov
jns
mov
add
test
add
mov
lds
push
sub
ds
sbb
mov
cmp
out
movsl
mov
mov
shrb
jp
icebp
lods
adc
mov
mov
fwait
sbb
clc
jb
loope
addr16
jnp
dec
mov
push
xor
sbb
fdivl
int
push
ja
fldt
test
fdivs
aas
xor
icebp
inc
push
ss
dec
cmc
call
shlb
repnz
push
out
mov
mov
xor
movsl
stc
mov
subb
jne
adc
lcall
sub
mov
xchg
mov
les
sbb
add
bound
in
mov
jns
pop
bnd
push
or
pop
repz
movups
ljmp
leave
out
cmp
mov
push
push
fwait
jmp
or
or
cmp
jno
adc
xlat
sbb
jecxz
jge
movsb
ds
rcrb
pop
sbb
lcall
push
repnz
sbb
pop
pop
sti
mov
mov
popf
adc
pushf
pop
sbbl
repnz
imull
inc
fistpl
mov
xor
mov
add
fimull
push
sbb
aas
jne
inc
int3
cmp
adc
pop
inc
scas
jne
xchg
data16
xchg
cmp
jne
mov
into
stos
push
cmc
pop
push
bound
mov
icebp
xchg
mov
adc
test
mov
enter
add
lcall
sbbl
cmp
pop
lock
cmpsb
push
sbb
pop
adc
cmp
mov
fstps
adc
cmp
jle
enter
sbb
push
aad
xchg
xchg
cmp
or
sbb
push
cmc
ss
pop
adc
in
xchg
cmp
mov
mov
xor
pop
ret
sub
cmp
test
ficoml
dec
and
shll
dec
gs
jg
in
cwtl
sub
pusha
sbb
cmc
repnz
mov
pop
cmp
mov
addr16
imul
xlat
mov
repz
sbbl
add
lret
inc
push
repnz
xchg
dec
or
arpl
test
lock
pop
push
sbbl
repnz
mov
pop
sbb
imul
mov
in
cmpsb
cmp
mov
out
das
jp
cmp
cmp
mov
ficoml
push
sbb
pop
vandpd
lds
out
inc
sbb
test
movsb
aad
daa
inc
adc
inc
cli
outsb
mov
jp
aaa
lret
mov
mov
push
fnstcw
inc
sbb
sbb
in
xorb
mov
cmp
popa
mov
cmp
sbb
jmp
add
lods
out
adc
push
pop
adc
xchg
sbb
or
cltd
push
push
cmpsb
arpl
or
mov
sbb
mov
stos
test
leave
fcomps
inc
mov
ffreep
xchg
push
mov
xlat
outsl
jle
mov
jmp
out
in
pop
sub
xchg
sub
cli
sub
push
fsubrs
sub
addl
dec
test
into
push
push
mov
int
sbb
mov
cs
xor
mov
adc
mov
test
sti
sub
sarl
fadds
movsl
insb
jle
pop
nop
mov
pusha
mov
scas
shlb
repz
lea
and
repnz
pop
stos
push
mov
push
jecxz
aaa
and
and
iret
test
pop
out
sub
pop
adcl
jecxz
fisttps
sub
aad
mov
pop
loop
pop
lahf
mov
mov
add
addl
lret
lahf
in
and
jno
mov
sti
sub
clc
int
sbbb
popa
push
lods
xchg
fbld
lret
mov
in
aaa
test
jnp
pop
jp
mov
lret
bound
lods
cmc
mov
sub
pop
add
xchg
xor
hlt
mov
mov
lret
bound
popf
and
int
sti
xchg
insb
push
lret
bound
lcall
ds
bound
hlt
mov
and
push
sar
pusha
leave
lret
shl
jno
and
js
negl
test
mov
and
hlt
out
xchg
cmp
sbb
sbb
mov
xor
xchg
pop
mov
xor
in
mov
fwait
insb
dec
or
hlt
sub
jne
mov
cmp
std
xchg
or
call
xor
push
fnsave
mov
pop
js
push
sahf
fdivl
jne
add
lods
pop
repz
arpl
xor
in
cmpl
jb
lret
jae
mov
push
adc
add
inc
test
xor
xchg
in
push
call
lds
jecxz
push
adc
loop
addl
add
cli
xor
add
pop
inc
icebp
mov
adc
inc
testl
jb
inc
loope
adc
mov
gs
je
cmp
mov
add
pusha
push
lcall
push
or
lds
xchg
cmp
loopne
mov
xor
hlt
dec
add
push
or
imul
mov
shlb
subb
push
mov
add
cmp
mov
lret
and
push
stos
sub
cmp
clc
dec
xor
push
adc
pop
ljmp
push
stos
aad
out
jae
shl
pop
jno
les
rcrb
xchg
jae
pop
add
mov
dec
lods
xlat
leave
pushf
sbb
fiaddl
insl
adc
popa
xor
pop
orb
lods
bound
xsha1
cmpsb
int
loop
aam
sub
ljmp
movsl
push
scas
jge
jle
inc
mov
sbb
inc
in
xor
pop
jge
idivb
push
jecxz
mov
ja
stc
mov
lods
inc
outsb
jmp
jp
xchg
mov
lret
test
pop
xchg
inc
cmp
ret
xor
push
inc
cmpsb
dec
sbb
mov
ss
push
imul
pop
loop
mov
lret
pop
xchg
sub
jmp
and
add
gs
pop
ret
fwait
add
adc
inc
popa
aaa
dec
mov
rcrl
rcll
sbb
fucomp
xor
andl
fs
add
push
mov
push
ja
in
mov
pop
jg
pop
daa
jmp
mov
fldt
xchg
push
sahf
sbb
scas
mov
mov
inc
in
cld
jbe
lds
outsb
test
lods
mov
dec
lock
stc
aas
adc
fs
pop
enter
jmp
out
mov
rolb
popf
out
add
dec
insl
add
out
add
lahf
inc
mov
sbb
icebp
scas
sbb
add
adc
pop
std
mov
gs
int3
stos
enter
leave
cltd
jl
push
int
subl
fmulp
repnz
mov
movsl
cld
cmpsb
xchg
jecxz
push
fwait
into
and
fcompl
mov
mov
fwait
out
mov
aam
aas
stos
cs
movsl
lds
loope
jo
or
mov
add
les
hlt
jbe
jecxz
xchg
jns
ds
arpl
pop
mov
pushl
pop
xor
iret
in
icebp
cltd
pop
add
into
popa
sarb
or
mov
or
jecxz
or
push
outsb
test
or
shrl
jecxz
jns
ret
jb
mov
mov
pop
ss
xlat
imul
mov
test
fildll
adc
repnz
mov
fisttps
pop
lahf
test
jl
hlt
testb
add
mov
fs
icebp
clc
xor
sbb
icebp
js
addr16
lret
div
inc
sbb
sbb
or
lret
cld
cmc
push
adc
out
gs
fadd
mov
cmp
add
nop
rep
dec
pop
popf
cmp
shlb
mov
mov
push
add
call
imul
dec
sti
pop
push
xor
test
lret
notl
and
mov
or
push
xchg
xchg
and
into
cmpl
repnz
ret
in
hlt
into
jns
push
mov
cmp
sahf
dec
pop
rcll
ds
hlt
xchg
sub
imul
fwait
shrl
and
mov
ss
mov
cmpsb
jge
ret
pop
lds
loope
inc
pop
pusha
fistl
in
pop
inc
jp
std
mov
std
out
push
lock
or
addb
pop
pop
adc
popl
push
mov
cltd
xor
inc
fisttps
in
xchg
lods
adc
mov
addr16
inc
ret
xchg
jae
dec
gs
fwait
xor
test
in
mov
filds
dec
jnp
das
pop
in
aam
cwtl
cmc
pop
cmp
xchg
jbe
dec
add
mov
scas
or
stos
dec
mov
popf
jg
push
xor
daa
call
in
les
bound
sarl
dec
insl
pop
test
fisubs
stc
push
jbe
push
lock
push
or
adc
xchg
xor
sub
jne
mov
sti
jnp
out
xchg
scas
notl
cmp
cmp
stc
ret
inc
jecxz
cmc
arpl
fld
hlt
xor
js
in
pop
cs
ficomps
out
loop
insl
adc
adc
ljmp
xchg
cmp
sub
arpl
mov
mov
sarb
js
repz
int
fistpl
pop
xchg
cmpsb
jo
fdivr
push
lods
sub
add
mov
sbb
pusha
and
add
cmpsl
movzbl
cmpsl
pushf
adc
jns
push
jle
sbb
push
fbstp
pop
or
jmp
mov
popf
cmp
pop
or
add
cmp
arpl
push
fstpt
adc
ja
lds
and
jecxz
andb
adcl
data16
or
pop
pushf
push
hlt
lds
scas
and
jecxz
cs
or
inc
mov
sbb
sti
pop
sarb
ret
imul
arpl
inc
or
mov
call
mov
mov
mov
add
adc
jbe
hlt
inc
push
or
sub
xor
inc
push
add
outsb
sbb
lahf
popa
mov
scas
clc
rclb
mov
repz
je
pop
push
mov
push
jne
adc
leave
daa
mov
xchg
popa
xchg
mov
clc
mov
std
out
js
les
adc
xchg
or
jmp
xlat
xchg
lods
out
mov
data16
pop
lahf
call
or
stc
cmpsb
xchg
push
adc
in
bound
xchg
ja
jb
js
inc
stc
shl
ret
jp
sub
and
dec
loop
push
dec
lcall
adc
test
pop
and
repnz
test
xor
or
mov
in
mov
mov
or
fnstenv
sub
std
fcoms
add
xor
jl
sbb
add
andl
xchg
jb
pop
into
sub
add
adc
movsl
push
mov
sbb
adc
lds
pusha
iret
notb
cmp
bnd
cltd
lock
cmc
jle
lods
dec
jns
cli
dec
push
outsl
aad
in
out
test
cmp
inc
cmp
std
jns
int
pop
xchg
shr
or
jne
pop
lcall
insb
sub
cwtl
dec
and
push
push
mov
lcall
ja
mov
test
movsl
sbbb
inc
sahf
es
fwait
pop
lds
cld
mov
cs
add
test
push
add
xchg
adc
mov
outsb
push
pushf
pusha
or
add
lret
mov
test
jmp
addl
ds
pop
outsl
mov
pop
das
add
aaa
add
cs
stc
xor
out
and
inc
shrb
and
movsb
inc
xor
loop
pushf
stc
dec
jmp
cmp
cmp
jmp
pop
jg
xchg
jbe
lods
leave
les
call
aad
sub
dec
dec
fisubs
testb
dec
jb
arpl
push
lock
inc
psubusw
sbb
fmull
shll
and
mov
jo
inc
mov
mov
or
jbe
inc
and
mov
bound
mov
adc
nop
shll
dec
divb
sub
ds
sub
fwait
and
push
arpl
push
insl
add
pop
jmp
insl
push
in
jne
mov
faddl
aas
mov
dec
mov
adcb
jl
aaa
push
mov
mov
ret
rclb
mov
push
jmp
mov
mov
and
aas
loope
sahf
xlat
shl
sarb
dec
xchg
rorb
and
data16
pushf
outsl
movsb
jo
jg
loopne
adcb
inc
or
int3
push
sbb
stos
jmp
loop
bound
aas
sbb
ss
or
xor
sub
push
push
fcmovb
jae
jno
cltd
mov
inc
xor
aad
fs
push
repnz
sub
fcomps
rclb
xor
jns
mov
xchg
clc
ret
stos
mov
lcall
int3
in
xchg
sbb
vpavgb
push
shl
mov
push
adc
test
popf
scas
bound
push
or
fimull
in
cmp
pushf
xor
divb
arpl
test
mov
movsb
mov
imul
fidivs
icebp
adc
lods
sahf
sub
jecxz
out
xor
aam
ja
fsub
cmp
movsl
mov
xor
nop
fs
jae
iret
pop
scas
cs
push
lahf
int3
jne
push
mov
jb
mov
pop
or
jmp
push
out
nop
add
movsb
inc
insb
pop
mov
cmp
or
insl
pop
jo
sbb
or
xor
jp
jnp
mov
negb
insl
popf
inc
jecxz
in
adcl
jns
pop
xor
test
xchg
xchg
push
dec
movsl
add
mov
xor
ret
fildll
pusha
jl
mov
jne
xchg
jae
add
adc
push
jo
or
test
pop
outsb
sbb
xchg
adc
mov
mov
sbb
mov
mov
idivl
insl
scas
movsb
mov
sub
add
inc
jbe
nop
repz
adc
mov
adc
mov
imul
and
xchg
fcmovu
push
sbb
lods
push
xlat
push
js
jecxz
out
les
mulb
or
movsl
notl
sbb
lock
adc
int3
mov
movsl
sti
in
rcrb
fdivs
dec
xchg
popa
sbb
cmc
testl
sub
cmc
mov
jno
or
call
mov
in
ds
mov
and
or
mov
push
cmp
xchg
fsubrp
mov
mov
push
outsl
xor
pop
or
das
dec
imulb
jbe
fnsave
push
add
test
arpl
mov
pop
push
insb
in
rol
sub
mulb
adc
add
inc
adc
adc
and
bound
push
and
insb
sub
fs
sarl
movsb
std
and
sub
add
fs
xchg
sbb
stos
xchg
pop
inc
push
insb
mov
mov
pop
and
push
mov
or
rclb
add
push
sarl
fwait
pop
dec
int
sbb
into
jb
cmp
dec
sbb
sub
add
mov
repz
mov
cmc
mov
fcmovnb
aad
aaa
add
in
cmp
shll
pop
or
mov
es
cmp
aad
mov
aaa
lret
clc
imul
push
cmp
pop
stos
inc
fxch
pop
fldenv
push
push
mov
jg
test
jmp
call
loopne
hlt
push
add
xor
test
shrb
out
test
ret
decl
lds
xchg
mov
mov
mov
roll
xchg
pusha
ja
aam
mov
stos
aad
pop
insb
mov
cld
inc
ret
iret
shrb
fwait
mov
sub
icebp
sbb
lahf
pop
into
inc
dec
pop
mov
sub
mov
arpl
jecxz
repz
push
dec
ljmp
js
mov
adc
jbe
icebp
push
loop
mov
iret
daa
cmp
dec
xchg
inc
fldcw
and
hlt
jle
mov
xchg
scas
insl
lahf
out
out
sarl
sub
mov
push
cmp
incl
gs
mov
fwait
ud2
mov
xchg
int3
movl
lcall
aam
or
or
adc
enter
pop
divl
in
push
fisubs
mov
jnp
inc
xor
inc
int3
ljmp
daa
dec
movsl
frstor
sbb
test
test
loopne
or
push
jae
or
xor
dec
es
push
inc
push
inc
mov
push
fdivrl
scas
or
mov
jmp
call
add
mov
push
lds
mov
nop
lea
in
mov
dec
mov
add
sbb
pop
cmpsl
pxor
xor
mov
pop
lock
aas
and
rcrb
test
inc
imul
fcoms
mov
jne
sahf
push
adc
mov
add
insl
fsubrs
or
add
mov
cmpsb
mov
sbb
add
cmpsl
call
xor
out
sti
and
out
vrcpps
fmull
adc
xor
push
fcomp
inc
and
andl
lods
out
fistl
jmp
sbb
push
pushf
pop
das
push
sub
and
push
sub
fcmovbe
adc
les
call
cwtl
dec
pop
jmp
les
inc
dec
fs
mov
mov
or
je
sub
mov
mov
push
sub
xchg
orb
lahf
les
rcl
push
mov
jmp
fdivl
ds
mov
dec
and
jg
pop
add
push
add
mov
pop
fstps
sbb
outsb
inc
leave
mov
nop
mov
xor
push
test
and
pop
adc
inc
pop
inc
jae
clc
je
test
ror
add
mov
xor
aas
mov
ret
jb
xor
cmpb
or
mov
sbb
adc
mov
cmc
jbe
mov
sub
adc
inc
out
ljmp
ljmp
inc
test
push
je
push
jb
and
jno
nop
and
xor
jmp
adc
mov
push
xor
push
fbstp
aaa
jmp
test
lds
cmp
fistpl
jb
sub
fwait
pop
enter
inc
in
enter
lret
push
jne
lods
sub
mov
std
addl
cmp
mov
and
daa
subb
jno
dec
rolb
xor
lds
sbb
jl
sub
push
add
sbb
sbb
popa
adc
iret
out
imul
and
adc
test
xlat
sbb
shll
sub
outsl
jo
inc
mov
or
cmp
dec
fs
mov
movsb
sbb
sbb
dec
pop
mov
mov
aad
insb
and
or
sub
mov
fnstenv
movsb
in
iret
pop
mov
loope
clc
mov
fildl
out
adc
dec
jecxz
xor
lock
adc
sbb
hlt
mov
mov
push
out
push
push
leave
daa
mov
pop
sbb
mov
sub
ljmp
push
iret
in
mov
cmpsb
inc
push
fmul
sti
and
lods
jmp
fs
jno
pop
mov
jne
xor
enter
jbe
dec
pop
add
cli
pushf
cmp
adc
add
jmp
out
sub
dec
cmp
pop
xchg
xchg
cli
aad
sbb
dec
push
movsb
inc
clc
mov
popa
jmp
mov
movsb
xor
xor
inc
lods
aam
mov
dec
movsl
inc
mov
loopne
xor
arpl
fistl
sbb
jp
ja
fidivl
mov
ljmp
or
pop
insl
aad
cwtl
lea
jmp
insl
sub
sbbb
hlt
cli
xor
inc
sub
adc
pop
movsl
lds
lods
adc
in
pop
out
cmp
incb
std
mov
jb
imul
sbb
std
cmp
out
and
imulb
fnstenv
insl
jge
pop
icebp
adc
fidivs
js
sub
call
iret
and
xor
mov
mov
pop
fildl
sub
mov
lods
mov
sbb
loopne
lock
shrb
pushf
shlb
xor
xchg
cwtl
aas
shlb
std
movsb
fsubs
xchg
mov
sub
sarb
test
sarl
or
push
adc
add
push
push
push
test
out
movl
int3
arpl
jmp
push
adc
and
pop
cmp
push
pop
push
jnp
xor
pop
cmp
sub
pop
decb
cmp
ja
push
popf
sbb
jnp
out
adc
dec
scas
adc
aam
xor
clc
jns
stc
and
andb
leave
nop
jno
push
push
andb
lea
push
fsincos
push
popf
out
xor
pop
push
xchg
jle
inc
std
pop
mov
pop
in
push
dec
iret
mov
scas
adc
xlat
inc
lods
pop
adc
or
xor
mov
mov
popf
mov
or
push
insl
mov
popf
jb
mov
sbb
adc
aam
pop
lret
dec
adc
mov
ret
loope
pop
into
mov
jmp
test
adc
push
addr16
mov
jo,pn
lahf
mov
sbb
sub
incl
pusha
repnz
sub
pop
loope
jo
mov
popf
jg
imul
xchg
iret
xchg
mov
inc
push
xchg
lods
clc
add
imul
inc
mov
xor
dec
jmp
mov
and
cmpsl
dec
sub
aad
icebp
dec
xchg
sub
push
sbb
and
push
lcall
gs
xchg
les
mov
pop
jle
pop
aaa
call
add
jmp
mov
rcrb
mov
mov
flds
fsubrs
outsb
add
add
add
stos
cmp
sbb
fisubs
test
lods
add
fmull
fdivrs
imul
int3
inc
xchg
push
aam
ljmp
adcb
addr16
jnp
jb
mov
jmp
ljmp
dec
jo
mov
mov
fdivr
rolb
aad
mov
push
insl
scas
les
dec
cmp
shll
stos
xor
jbe
lods
add
mov
pop
jmp
xchg
mov
xchg
aad
and
lods
xor
sub
sar
stc
dec
xor
cld
iret
mov
adc
std
stos
out
mov
fists
and
leave
mov
dec
mov
and
cmc
in
push
push
repz
or
inc
fwait
cmp
cmp
out
jp
mov
enter
ss
push
sbbl
mov
ret
scas
mov
sbb
repnz
lahf
xchg
add
xchg
pop
cld
fwait
test
out
inc
jno
inc
fisttpl
out
mov
addr16
imul
fildl
shlb
xchg
add
popf
jmp
in
sahf
loopne
fisttpll
sbb
das
xor
mov
mov
mov
mov
outsl
jmp
in
insb
fmuls
cli
xor
stos
lea
mov
mov
mov
sbb
jo
test
iret
dec
test
out
lcall
push
adc
xchg
test
sbb
loop
jle
sub
jl
jno
and
push
mov
jbe
inc
add
in
fwait
xor
mov
mov
xlat
sbb
dec
stos
and
pop
sbb
xchg
insl
mov
in
mov
clc
and
pop
push
xchg
test
testb
fldl2t
xlat
jecxz
cmpsl
pop
add
sub
out
into
inc
orl
gs
test
sub
mov
pusha
das
mov
dec
pop
mov
jle
xor
lds
jl
fcmovne
mov
gs
leave
jmp
jo
enter
mov
rorl
incb
jbe
jne
sub
jnp
in
jo
inc
lea
mov
jle
push
ss
and
mov
jmp
mov
fldcw
mov
std
cltd
cmp
jae
mov
icebp
ret
mov
fsubs
mov
push
stc
xor
add
test
nop
les
pop
das
or
mov
pop
jmp
jb
jmp
ja
call
mov
adc
and
adc
pop
push
sub
repz
and
outsl
repnz
dec
add
pop
cmc
jnp
test
lret
and
dec
lock
outsb
xor
add
inc
lods
jbe
sbb
push
scas
call
sbb
sahf
add
in
call
mov
movsb
mov
negl
cmc
xor
ror
loope
xor
test
jne
pop
xor
pop
mov
aam
je
and
or
testb
mov
sbb
inc
jecxz
push
jl
mov
mov
sbb
jp
not
jne
sub
pop
mov
popf
sbb
xchg
push
mov
xchg
jge
mov
fs
mov
xor
cwtl
add
in
xchg
stos
push
loop
fcmovnu
nop
cmp
xlat
fbstp
or
inc
ficoms
jno
fwait
mov
push
into
cmpsl
mov
adc
jg
ljmp
push
cld
xchg
aaa
mov
jg
jmp
fdivl
push
cmp
mov
mov
or
dec
cmp
xor
cmp
aas
addr16
dec
fisttps
xchg
cmpsl
ds
sub
iret
ds
jo
dec
dec
inc
mov
mov
sub
jno
pop
push
inc
adc
adc
pop
mov
mov
int3
ret
pop
mov
sub
mov
sahf
vpunpcklbw
and
push
pop
mov
aad
jne
mov
sub
aam
adc
pushf
sbb
leave
outsl
push
mov
fisttpl
into
mov
das
or
mov
mov
ds
daa
call
cmp
movl
add
and
pusha
push
pop
mov
sbb
es
jmp
es
and
leave
pusha
dec
loop
movsb
aam
xchg
sub
imulb
imul
pop
testb
out
xchg
xchg
add
add
sub
fidivrl
push
dec
loop
stos
mov
fsubl
sub
cmp
addr16
rcll
xchg
test
cmp
pop
icebp
mov
mov
into
in
mov
mov
lods
inc
loopne
scas
inc
aas
add
arpl
push
movsl
sbb
adc
mov
fdivl
adc
lea
push
popf
shl
jmp
sub
and
sub
jl
fidivs
mov
sub
mov
xchg
in
mov
xor
ja
cmp
gs
aad
sbb
repz
push
jmp
lret
clc
cmp
xchg
sub
cmp
ret
leave
pusha
in
mov
call
mov
pop
push
mov
dec
repnz
test
lret
fwait
adc
sbb
mov
push
xor
jae
adc
inc
test
xchg
mov
arpl
xchg
shrl
mov
rclb
incb
fbstp
test
dec
mov
mov
nop
mov
ret
aam
in
push
jp
jnp
push
stos
push
in
xor
rorl
fs
adc
pop
inc
mov
sub
in
xchg
add
xor
ret
out
or
mul
ja
cmp
adc
mov
icebp
in
sarl
adc
test
bound
adc
mov
test
out
dec
add
sub
ret
pop
jp
lds
int
ret
cmp
jp
in
adcb
add
push
lea
mov
fld
pop
js
shrl
fbstp
or
xor
shr
xchg
xchg
dec
pop
rcl
insb
or
loopne
sub
fdivr
test
cwtl
mov
push
push
aam
rolb
je
cmp
les
icebp
ja
movsb
adc
xchg
inc
pop
scas
repz
ljmp
arpl
jecxz
scas
inc
lahf
add
cmp
ds
pop
pop
repz
push
lahf
ss
mov
jge
gs
xchg
pop
test
push
shrl
or
lahf
cmp
pop
icebp
mov
pop
sahf
xor
fnstenv
icebp
sbb
fisttps
push
jge
out
xchg
lahf
fidivl
dec
daa
mov
and
xchg
jle
ret
pop
sbb
shrb
cmp
jno
sub
leave
inc
mov
jne
mov
sbb
adc
jne
lret
scas
mov
cmpb
scas
inc
jge
sub
fwait
or
dec
filds
out
into
or
push
in
mov
leave
pusha
or
push
movsl
inc
pusha
xor
xchg
faddl
adc
sbb
pop
xchg
in
out
sbb
out
test
pop
data16
jmp
int3
arpl
pop
or
test
iret
and
dec
aam
jmp
lea
push
in
sar
sbb
jp
mov
pop
sar
sbbl
dec
push
jp
arpl
and
mov
xor
das
test
xchg
sub
fwait
pushf
xor
add
xchg
cmp
mov
pushf
mov
roll
ds
in
call
fsin
repz
inc
fidivl
repz
mov
lods
fsubrs
std
pop
mov
fidivl
repz
jmp
xor
mov
sbb
shlb
add
cmpsl
pop
lock
pusha
and
cld
int
xor
push
lock
ds
cld
in
xor
mov
and
cld
cmp
xor
out
test
es
mov
or
xor
out
sbbb
rcrb
cmp
out
pusha
pop
lret
cli
add
scas
xor
xchg
sub
call
mov
inc
cs
pop
aam
movsb
or
lods
inc
sti
and
push
and
mov
ret
fidivs
lds
lahf
mull
fidivl
and
push
sar
hlt
aam
mull
fidivs
and
push
lds
test
cld
xchg
push
das
js
pop
jle
test
loopne
push
sub
test
or
pop
push
pop
scas
inc
into
enter
add
pusha
push
mov
dec
mov
xor
fistpl
or
aad
sbb
push
lods
out
or
jo
push
mov
jl
clc
ds
pop
outsl
sub
and
test
insl
adc
stc
repnz
sti
insl
adc
mov
xchg
fdivrs
or
mov
pop
test
push
scas
pop
dec
out
rcr
outsl
push
mov
lods
out
ret
add
icebp
xor
push
sbb
test
add
xlat
sbb
cmp
sbbb
jo
cmpsb
movsl
inc
pusha
divl
or
xchg
jb
sbb
mov
sbb
daa
cmpsb
cmp
mov
xor
pop
jg
inc
jecxz
xor
arpl
push
insb
mov
jle
adc
xchg
inc
out
add
clc
cltd
cmp
insl
mov
mov
testb
pop
arpl
sbb
push
call
mov
fildll
push
loopne
pop
adc
or
cmp
int
push
call
add
outsb
mov
and
cmp
jo
rcrl
fnstenv
xor
pop
push
sub
jmp
xchg
sub
xor
mov
ds
sti
xchg
mov
rcl
push
movsb
sub
shrl
std
xchg
pop
cld
dec
in
jbe
andb
push
int3
push
push
jmp
adc
sbb
insb
mov
sbb
mov
mov
imul
and
push
test
ds
sub
pop
adc
xchg
push
mov
cmp
jo
andl
lds
pop
leave
pusha
pop
test
lret
bound
iret
in
cmp
mov
les
repz
jae
bnd
and
out
add
ja
adc
into
mov
rorl
inc
lds
jecxz
inc
cwtl
out
push
lret
xchg
mov
mov
jo
push
movsl
cmp
sub
pop
scas
cs
loopne
imul
or
adc
mov
aam
aas
add
out
pusha
std
mov
pop
mov
insb
testb
jbe
dec
movsb
in
adc
mov
data16
repz
sbb
inc
call
jns
cltd
cmp
icebp
mov
nop
fsubrs
adc
out
sbb
popa
push
aaa
lock
jl
push
flds
xor
jne
leave
sbb
xor
or
sbb
jmp
mov
bound
outsb
cltd
xchg
sub
orl
xchg
sbb
pusha
test
cmp
xchg
dec
imul
lock
adc
sbb
in
call
fwait
lea
or
popf
nop
jae
inc
xlat
mov
decl
in
sbbl
sbb
xchg
call
xchg
xchg
mov
jge
xchg
adc
out
sbb
and
lock
sbb
adc
add
movl
pop
scas
push
fidivs
cld
les
sbb
and
sub
out
or
cmp
push
xorl
cmp
fidivs
jmp
xchg
cmp
fsts
inc
addr16
jo
push
sub
adc
cmpsl
cmp
cs
fwait
push
cmp
nop
xchg
nop
repnz
testl
aaa
fsubrl
adc
icebp
cmp
mov
fists
loope
add
loope
cmp
call
jg
xlat
roll
pop
in
push
in
not
add
cmp
xlat
sbb
pushf
ss
add
mov
cld
in
xchg
pop
add
dec
scas
dec
sub
push
out
sbb
lcall
adc
mov
ret
jns
enter
adc
push
fstpl
xor
add
es
or
pop
fistl
and
xchg
shlb
lahf
cmp
movhps
xor
and
mov
mov
sbb
or
sti
mov
in
fdivrp
and
or
enter
addb
aam
adc
xchg
lahf
loope
and
mov
lods
jb
add
push
push
out
inc
cli
ss
jmp
aas
dec
or
ficompl
into
xor
out
cli
enter
adc
mov
mov
and
add
sarl
cmp
sbb
sub
je
adc
gs
sub
xor
xchg
xchg
aad
and
mov
ja
mov
inc
mov
test
pop
aad
push
dec
loop
std
inc
leave
out
stos
xchg
mov
mov
out
test
daa
test
mov
insl
xlat
insb
mov
inc
ret
push
enter
cwtl
insb
hlt
dec
shll
daa
jmp
dec
inc
xlat
add
es
mov
iret
jmp
inc
int
scas
or
ret
lock
ret
lret
adc
jecxz
xchg
clc
add
xchg
mov
out
jnp
test
faddl
add
cmp
in
aam
mov
hlt
rcll
sbb
cmc
test
call
mov
loopne
push
rcrl
es
pushf
int3
cmp
or
inc
mov
clc
mov
ret
push
add
mov
rclb
cmp
mov
movups
lods
clc
jbe
repz
test
cmpsl
sarl
lods
je
std
shl
ja
mov
rclb
add
lcall
mov
insl
push
insb
popa
cmpsb
pop
inc
cmp
or
mov
testl
movsb
and
push
sub
inc
mov
stos
mov
clc
lea
dec
fiadds
xchg
push
pusha
fisttpl
bound
in
jne
xor
das
das
ja
stos
dec
adc
jo
dec
ret
in
test
jmp
adc
or
sub
out
pop
addr16
inc
shlb
es
repnz
inc
pop
or
stc
mov
out
pop
mov
ja
or
aas
jp
sbbb
leave
scas
xchg
repnz
icebp
adc
jo
je
adc
and
jmp
adc
std
ds
loope
lret
add
mov
xchg
stos
call
jle
mov
jo
js
dec
lahf
fdivrs
filds
fidivs
mov
leave
inc
clc
add
jle
sbb
dec
sbb
mov
xchg
mov
outsl
in
stc
xor
sub
gs
mov
pop
mov
mov
scas
or
ret
mov
rcrl
stc
mov
mov
lea
or
fwait
fwait
mov
ljmp
add
test
inc
sbb
ds
outsb
jl
enter
xchg
jl
jb
xchg
push
add
jle
ret
movsl
arpl
ss
jg
cmpsl
pushf
xor
adc
test
int
fs
int3
mov
ret
jne
push
into
fnsave
push
mov
xor
adc
pop
sti
pop
xchg
mov
cmpsb
repz
les
sbb
or
push
into
lds
mov
loopne
pop
mov
lock
daa
in
dec
movsb
adc
add
es
jp
jb
insl
aaa
adcl
and
enter
mov
clc
sub
rcll
or
inc
mov
pushf
sahf
push
in
fstpt
xor
out
outsl
sar
movsb
add
clc
mov
aas
icebp
push
cmp
xchg
fdivl
je
out
push
js
jae
psubd
fs
cmp
shll
sbb
outsb
dec
testb
jns
std
dec
add
cmp
xorb
push
xchg
cmpsb
pusha
mov
int
dec
inc
fidivrl
ds
and
jmp
gs
add
insb
adc
lea
push
cmpsl
mov
in
pop
lret
cmp
sub
sbb
lcall
pop
jmp
xchg
mov
testl
rclb
popl
or
jl
testl
call
mov
xor
jno
cmpsb
push
cs
lret
lcall
mov
or
enter
xchg
mov
xchg
push
xor
push
and
insl
add
inc
mov
ds
jno
sbb
sbbb
pop
mov
and
sbb
inc
scas
pop
mov
stos
push
sbbl
rorb
mov
rcrl
jns
cmc
sub
icebp
sbb
push
std
es
aaa
lret
xor
mov
mov
or
movsl
pusha
sub
mov
cmp
push
test
inc
cmp
movsb
fs
jmp
popf
popa
push
ret
dec
in
jne
and
sub
mov
jp
mov
or
xchg
scas
pop
or
js
jne
test
dec
pushl
push
push
aad
push
add
imul
cld
das
ss
test
or
cmc
pop
int
in
addb
pop
ret
cmp
mov
sub
mov
icebp
sub
and
fsubs
sub
cmc
enter
pusha
int
aam
das
aad
sub
mov
fiadds
in
or
pop
jl
push
lret
sbb
mov
test
sahf
mov
fcmovb
inc
into
scas
test
cmp
cmpsb
imul
jo
adc
jmp
dec
out
lret
aad
lods
arpl
fwait
das
int
cwtl
gs
out
sbb
xchg
mov
push
mov
es
jno
sbb
in
popa
cmp
or
jp
mov
jmp
fdivl
rolb
mov
push
enter
jle
dec
inc
push
int
ficompl
fstpl
rorb
push
cmp
fs
aam
aam
sbb
js
fsts
push
jmp
inc
or
repnz
in
inc
mov
xchg
shll
jecxz
add
cmpsl
mov
pop
adc
orb
loope
jmp
popf
rorb
in
sub
loopne
mov
push
mov
icebp
sbb
test
data16
jae
cltd
test
sub
pusha
stos
leave
outsb
das
lahf
into
push
int3
mov
jo
fistps
push
call
push
call
sarb
movsb
push
add
mov
stc
add
fmull
out
and
xchg
arpl
mov
cld
int
in
addl
int3
addr16
ror
mov
cmpsl
mov
out
cs
mov
add
adc
rcrl
xor
mov
cmp
mov
inc
es
mov
push
adc
movsl
push
lds
push
out
mov
pop
fildl
dec
mov
pop
mov
nop
sub
pop
dec
iret
sahf
sti
add
enter
add
fdecstp
sbb
xchg
mov
in
addr16
shl
pop
mov
fistpll
insb
fnstcw
imul
aas
fadds
or
add
mov
sbb
test
xor
imul
mov
or
cmpsl
push
sub
rcll
push
push
out
sub
mov
fisubrl
or
mov
pop
insb
call
push
pusha
shlb
daa
jge
ficomps
testl
mov
inc
dec
pop
aam
fs
das
daa
fists
pop
inc
lret
dec
sbb
aaa
imull
iret
jle
in
cmpsl
sgdtl
shrb
rcll
rorl
addl
int
jmp
nop
clc
xor
jle
shlb
loopne
movsl
sub
mov
icebp
cmp
jecxz
push
aad
mov
out
adc
mov
xor
jbe
ja
outsl
and
fs
pop
pushf
push
scas
sbb
mov
sub
mov
xor
jl
outsl
bound
xchg
jle
jg
int
fwait
mov
and
xchg
inc
nop
in
xor
dec
inc
mov
sbb
insl
mov
cmp
sub
mov
js
push
cmp
scas
sti
add
xchg
call
lods
push
mov
mov
jmp
sahf
leave
or
xchg
pop
cli
es
jl
ret
dec
inc
rorb
sub
pop
xor
jnp
das
lods
and
mov
or
push
stos
repnz
daa
jbe
xlat
ds
inc
ljmp
push
imul
les
addr16
bound
jmp
bound
sub
gs
mov
js
sahf
andl
inc
jns
pop
xor
repnz
push
sbb
xor
stos
nop
pop
and
divb
addb
fwait
add
test
add
addb
insb
or
dec
lcall
push
sahf
push
call
dec
out
cs
pop
test
loop
std
mov
flds
scas
fmull
dec
xchg
aad
pop
pop
cmpps
xchg
mov
jnp
mov
loopne
movsb
push
add
xchg
in
and
std
mov
sbb
mov
adc
pop
sub
xchg
out
or
or
sbb
mov
push
mov
addl
pop
mov
in
call
fnstenv
sub
xchg
lret
aad
and
cltd
roll
sti
xlat
push
testl
add
addl
imulb
int3
mov
in
push
sti
mov
std
sbb
dec
int3
roll
cltd
xor
push
movsl
mov
mov
and
dec
dec
push
les
and
xchg
rclb
and
xchg
sub
ljmp
pop
or
test
push
pop
cmp
dec
mov
and
inc
fisubrl
inc
xor
xor
inc
xor
or
push
enter
inc
mov
xchg
rcr
pop
ffree
ja
out
lret
fstpt
out
and
loopne
mov
mov
repz
or
mov
repz
rol
shlb
aad
pop
loop
repnz
or
xor
mov
arpl
or
data16
out
nop
sbb
push
add
adc
loop
xorb
jae
aam
push
mov
rclb
push
cmp
out
aad
fsub
stos
adc
mov
and
or
and
repnz
in
adc
jmp
sti
xor
mov
in
mov
repz
mov
ljmp
jns
outsb
sarl
aas
push
xchg
xchg
ljmp
shl
loope
aam
inc
jecxz
sbb
jae
in
push
test
xchg
mov
and
mov
test
sarb
mov
sarl
test
aad
scas
or
loopne
fcmove
cmpsl
jne
loopne
dec
mov
sbb
sbb
cmp
jno
push
sbb
xchg
idivb
bound
in
pop
mov
inc
ror
sbb
pop
fwait
lock
jns
lds
aad
movsb
cmp
or
mov
cmp
push
sbb
sub
jbe
mov
fdivs
leave
dec
mov
inc
fidivl
mov
fisttpl
inc
fndisi(8087
pusha
dec
mov
movsl
adc
and
jno
andb
cwtl
nop
fsubl
imul
test
rclb
jge
mov
mov
add
jnp
pop
dec
mov
cwtl
xchg
push
jnp
dec
xor
add
xchg
pop
cmp
in
sbb
mov
dec
insb
jnp
and
pop
mov
cmp
in
jbe
xchg
popa
movsb
sub
fbstp
dec
sub
imul
mov
adc
add
movsl
pushf
mov
mov
xchg
mov
xchg
dec
sub
sbb
jno
rclb
xor
cmpsl
outsb
test
jmp
jge
or
sub
fcompl
lcall
out
orb
into
xchg
jmp
lret
data16
sbb
xor
or
push
jmp
pop
push
into
adc
arpl
or
dec
shll
sbb
fadds
sahf
jnp
and
sbb
jno
mov
dec
mov
and
inc
sub
arpl
xor
add
cld
inc
scas
mov
leave
cmp
insb
push
lods
dec
aam
cli
roll
sahf
pop
cmp
rcll
xor
cmp
fdivrl
xchg
sub
ljmp
or
ret
and
ror
add
rorb
cmpsb
mov
hlt
sub
xlat
mov
cmc
filds
loop
mov
shrb
in
push
sbb
lcall
xchg
popl
jo
icebp
jne
xor
jbe
sti
sub
in
mov
cli
imul
and
loope
outsl
mov
pmaddwd
int
mov
mov
icebp
push
into
in
xchg
dec
mov
mov
lods
add
dec
loop
and
cmp
dec
adc
inc
cmp
ds
arpl
jmp
in
flds
jle
mov
pop
lods
arpl
or
sbb
jns
cmc
sbb
loopne
and
out
push
sbb
lea
outsb
jo
dec
adc
adc
dec
sub
pop
pop
out
test
and
sahf
push
sti
cmp
push
imul
repnz
imul
inc
or
imul
xchg
dec
mov
lods
cli
pop
movsl
mov
sti
pop
scas
iret
ret
repz
inc
mov
inc
sbb
popf
dec
cmp
push
adc
cltd
dec
inc
mov
cmc
push
ret
inc
fsts
adcb
stc
mov
hlt
pop
std
mov
jmp
jmp
outsl
test
pop
and
jns
sub
shrl
xchg
aad
or
add
xor
movsb
divb
sbb
push
arpl
ret
cmp
insl
xchg
les
and
fs
scas
popa
cmp
push
dec
add
fiadds
xor
inc
popl
insl
pop
mov
cmp
test
imul
stos
inc
insb
cli
cmpsb
pusha
jmp
mov
pop
cli
gs
xor
jno
fwait
arpl
ret
dec
dec
mov
or
ss
inc
dec
out
mov
cmp
push
daa
adc
stc
addr16
inc
mov
roll
push
or
sub
pop
sub
lret
sub
mov
fcoms
pop
push
aad
mov
aas
icebp
bound
cmp
pop
popa
mov
cmp
jno
insb
je
lcall
jge
mov
loope
out
repz
inc
out
mov
mov
fisubrl
test
mov
cmp
addr16
mov
add
xlat
inc
sahf
les
stos
ret
aad
aad
mov
dec
push
push
leave
fwait
dec
sbb
cmp
inc
fdivrl
jne
mov
add
movsb
outsl
mov
push
mov
repz
es
xchg
jne
sbb
in
xor
test
or
mov
test
adc
xchg
inc
daa
dec
and
push
mov
pop
mov
adc
iret
xchg
mov
inc
mov
mov
jmp
fcmovnb
fistps
or
iret
sbb
jg
outsb
xchg
adc
push
jb
ja
dec
aaa
add
cmp
adc
lahf
movlps
popl
inc
das
mov
cwtl
ficoms
bound
push
mov
jo
arpl
xchg
and
pop
aad
pop
sbb
int
add
push
test
push
pop
test
mov
jmp
pusha
mull
lock
cwtl
loop
daa
fsts
mov
out
sub
pop
insl
or
imul
inc
inc
cmp
je
inc
test
xchg
push
shrl
popf
jo
or
shlb
jg
jmp
push
adc
cli
or
mov
adc
loope
dec
push
in
jo
or
test
lret
ljmp
and
bound
inc
add
mov
adc
inc
or
icebp
jnp
inc
enter
or
add
or
jmp
pop
int
leave
fbld
fisubrs
fidivs
cs
lea
xor
js
cmpsl
js
pop
inc
loop
mov
cmp
jo
bound
mov
shll
xchg
mov
sbb
lahf
out
movsl
mov
pop
lret
pop
mov
adc
jecxz,pt
cmpsb
in
cltd
sbb
sub
sti
sub
andl
mov
lock
in
xchg
loopne
or
lods
cmp
andb
jne
out
mov
sbb
insl
movsb
sti
xor
mov
push
insb
add
adc
cmp
bswap
pusha
inc
pusha
fmull
bound
pop
les
push
push
fs
mov
jae
cmp
inc
xchg
mov
xor
js
test
insl
dec
mov
mov
xor
push
dec
xor
lds
leave
sahf
xchg
insl
mov
jo
imul
popa
add
inc
adc
in
dec
adc
in
int
and
jnp
adc
lret
xor
xchg
aas
loope
add
push
mov
ret
fiadds
jno
aam
xchg
data16
mov
xchg
jl
fstps
adc
xchg
xchg
and
cld
pop
sti
bound
xor
fidivs
xchg
or
mov
inc
sbb
mov
mov
cmp
inc
cmpsl
cmp
dec
loop
pop
shl
ja
push
into
aaa
push
or
lods
push
lret
stc
adc
mov
mov
mov
or
mov
jmp
fwait
jmp
inc
rorb
push
push
pop
lods
sbbl
imul
pusha
inc
mov
add
push
leave
push
xchg
out
push
inc
xor
js
rorb
sarb
mov
daa
data16
xchg
jno
dec
cli
xor
cmp
loop
push
negb
mov
icebp
sub
adc
out
cmp
loop
mov
or
imul
xchg
insl
xchg
insb
dec
adc
repz
mov
sbb
xor
test
in
out
cli
mov
stc
nop
call
scas
pop
lahf
cld
add
sbb
mov
incb
mov
arpl
addr16
cwtl
pop
jp
dec
dec
push
cmpl
movsl
popa
imul
bound
aaa
fsts
dec
adc
push
adc
pop
push
js
mov
mov
jle
push
ret
sbbl
imul
push
dec
loop
lret
fnstenv
xchg
jle
and
jp
xchg
daa
js
dec
shrl
das
call
adc
lret
ljmp
dec
xlat
and
nop
fstl
or
loopne
adc
xor
push
add
inc
ret
sbb
dec
ret
mov
xlat
mov
cld
dec
adc
std
pop
sbb
jl
push
sbb
ljmp
adcl
gs
ret
xor
scas
ss
dec
mov
inc
pop
pop
enter
lcall
and
es
fimuls
fs
mov
push
pop
data16
dec
pop
push
mov
aas
mov
sub
dec
bound
cmp
or
cmp
lcall
sbb
xor
ja
xor
pop
aam
push
in
mov
add
or
and
pop
dec
ds
jle
push
mov
pop
repz
movsl
cmp
repz
and
inc
cwtl
das
js
loope
stos
cltd
mov
lret
lret
call
push
pop
push
mov
aas
repnz
cmp
mov
ret
pop
icebp
hlt
in
lds
ss
jecxz
imul
dec
out
fisttpl
imul
cmp
xchg
add
cmpsl
out
loop
push
or
cmp
add
mov
mov
lods
imul
lret
cmp
cld
add
repnz
push
test
test
adc
ret
hlt
stc
in
sub
mov
dec
dec
add
fwait
sahf
and
out
lock
adc
test
inc
pop
repz
das
xchg
xchg
jp
mov
in
out
das
sbb
insb
add
cmp
and
test
fnstsw
repnz
add
pop
xor
adc
xchg
add
or
and
pop
dec
aas
jge
mov
scas
sahf
pop
hlt
iret
shlb
adc
and
pop
push
inc
cltd
xor
loop
test
lret
sti
ljmp
dec
cmp
cmp
test
rcrl
loop
adc
adc
dec
in
addr16
das
cltd
xchg
mov
insb
inc
sub
ds
popa
repz
mov
test
shl
jp
pop
xor
cmp
dec
in
ja
mov
stos
insb
add
leave
cmp
and
sbb
repz
push
test
subl
mov
rcrl
sub
add
lcall
mov
insl
mov
ds
sub
push
xlat
pusha
test
jmp
mov
outsb
fisubrl
jle
lret
mov
in
test
pop
icebp
and
cltd
mov
sbb
push
les
mov
mov
fidivs
adc
add
aas
pop
sub
dec
pusha
scas
inc
xchg
imul
fsub
mov
loopne
outsl
xchg
jle
enter
shr
push
sbb
imul
outsl
xchg
lock
and
push
in
ja
add
lret
clc
push
push
xchg
sub
mov
fisttpl
fidivs
cld
push
movsl
sub
adc
rcr
repnz
jae
ret
stc
adc
jp
push
sahf
mov
icebp
loopne
add
jno
push
mov
leave
fsubrs
das
int3
push
mov
push
mov
rclb
inc
dec
and
dec
in
loopne
fstpt
sbb
sub
push
mov
push
xchg
inc
das
push
ret
mov
aad
out
cltd
jo
imul
adc
das
pop
mov
mov
out
pop
mov
xchg
out
sub
stos
mov
jge
push
and
fnstenv
or
jge
xchg
test
into
xchg
insl
and
inc
aas
sub
add
adc
fs
mov
sub
inc
mov
stc
sarb
mov
mov
cwtd
iret
ljmp
mov
int3
sub
jmp
loope
jp
sub
jge
aaa
add
mov
push
or
jo
cs
es
xchg
fsubs
shrb
enter
enter
aas
sub
push
xchg
hlt
int3
or
popf
and
mov
adc
jecxz
in
dec
sub
pop
out
push
push
xor
xchg
xchg
lods
in
dec
jns
pop
jb
and
inc
rorl
xor
fnsave
jp
add
and
inc
xchg
icebp
and
test
imul
inc
pop
dec
je
mov
imul
in
and
dec
gs
cmp
push
mov
shr
mov
sbb
movsl
jo
mov
jmp
cld
mov
popa
jo
negb
nop
inc
nop
in
push
ja
ret
xor
out
scas
push
xor
scas
mov
aaa
arpl
seta
std
pop
jmp
mov
dec
inc
jae
mov
mov
out
movsb
and
gs
subb
lahf
jo
int
gs
xor
xchg
cltd
aaa
std
out
cmp
xor
dec
lmsw
push
cmpsb
ja
je
inc
inc
mov
mov
mov
fidivs
aad
xor
xor
in
mov
dec
lods
mov
sahf
mov
dec
shrb
and
loopne
cmp
xor
mov
pop
scas
cmp
xlat
ret
add
idivl
fimull
fnstcw
imull
jmp
xchg
clc
imul
pop
xchg
pop
testb
fsubrs
lods
add
sbb
and
adc
sbb
xchg
cs
mov
addr16
push
or
push
push
dec
xor
sub
dec
lods
inc
cmp
sti
push
out
enter
jbe
aam
pop
sbb
mov
mov
ljmp
jmp
pop
pop
push
mov
pop
out
shl
cwtl
das
shlb
push
arpl
aad
out
and
in
xchg
xlat
imul
pop
lcall
ja
fisttpll
push
psllq
push
clc
push
adc
dec
push
mov
roll
jbe
out
pop
std
test
mov
aam
mov
xchg
pop
mov
nop
push
test
jge
sub
mov
stc
pop
and
cmpsl
pop
or
pop
addl
test
icebp
clc
mov
fdivp
pop
stc
lds
lret
mov
mov
mov
aam
icebp
inc
adc
out
push
iret
cmp
and
outsl
imul
sub
jno
outsb
call
dec
adc
xchg
out
cmp
into
mov
daa
jp
icebp
stos
sub
call
call
inc
adc
iret
xor
mov
jns
xchg
xchg
inc
enter
movsl
and
ss
imul
adc
adc
les
pop
int3
mov
mov
mov
out
push
std
fs
mov
xor
faddl
push
daa
lods
lahf
aam
cltd
leave
iret
jo
les
push
sti
cmpsb
push
inc
or
mov
pmullw
aam
pusha
lcall
mov
sbb
jbe
xchg
faddl
mov
int3
loopne
dec
push
mov
outsl
hlt
add
test
pushf
inc
or
jg
and
mov
xor
insb
loope
dec
adc
mov
push
cld
out
out
jae
cmc
lahf
inc
cmp
push
aam
sub
mov
inc
or
mov
pop
add
pop
add
fsin
xchg
fndisi(8087
aad
fldt
mov
push
cmp
movsb
pop
aam
xor
push
daa
stos
jp
lods
das
movsl
outsl
adc
sub
shlb
sbb
adc
inc
and
pop
insb
xchg
cmp
dec
lcall
test
ret
jne
sub
mov
mov
pop
int
pop
leave
fwait
sbb
mov
icebp
adc
in
push
fwait
lret
repz
mov
dec
adc
shrl
inc
sahf
or
stos
xchg
out
jo
mov
adc
or
mov
pop
orb
adc
sub
outsl
out
cwtl
rorb
cld
mov
arpl
jg
filds
adc
fwait
or
mov
dec
setno
jp
add
or
pop
pop
dec
or
les
mov
sbb
mov
mov
add
gs
mov
add
es
lahf
ds
push
adcb
pop
test
adc
popf
jmp
icebp
sub
inc
adc
fwait
pop
clc
push
int
mov
mov
pop
pusha
aam
and
int3
and
inc
xchg
hlt
fs
popf
xor
or
xor
mov
jle
ret
bswap
int3
jb
movb
mov
dec
iret
dec
or
push
jae
ret
mov
repz
inc
dec
xchg
sbb
ror
mov
sbb
movsl
imul
ret
or
iret
je
lds
sbb
push
lret
nop
mov
mov
adcb
ja
xchg
aas
cltd
insl
xchg
inc
mov
mov
fwait
ds
or
mov
sub
xor
dec
lds
movsb
inc
add
jg
pushf
scas
sub
imul
ja
enter
jl
stc
mov
mov
mov
xchg
sub
fcomps
jmp
fs
enter
jl
jno
int
jle
xor
sub
xchg
cmpsl
xor
mov
mov
push
out
repnz
inc
repz
cmp
fwait
rclb
adc
mov
jle
cmp
mov
arpl
dec
js
cmp
xchg
rcll
lcall
subb
mov
loop
adc
lcall
leave
aad
ja
lcall
cmp
mov
mov
repz
and
sbb
push
jae
mov
bswap
sbb
mov
repnz
cmp
jo
icebp
daa
ret
in
sbb
xchg
fcoms
and
lret
aaa
pop
repnz
mov
lock
hlt
scas
inc
je
loope
inc
das
push
xor
cmp
stos
sub
lods
sarl
xlat
sbb
mov
push
clc
fdivs
xlat
mov
lcall
fwait
arpl
cwtl
fstpl
add
jb
or
lods
jge
dec
or
lret
or
pop
insl
call
sti
shl
vpmacsww
or
imul
dec
push
xchg
xchg
jne
mov
mov
cmp
gs
push
mov
adc
dec
xor
jbe
jmp
inc
jns
pop
in
jns
rcll
xchg
pop
lods
dec
cmp
jno
in
fidivl
rorl
jl
leave
jbe
sbb
ret
push
iret
xor
rolb
add
scas
daa
jae
jge
ret
outsb
push
jecxz
xchg
aas
and
xchg
aas
xor
sub
xchg
imul
lahf
jl
xchg
inc
shll
imul
pop
mov
jns
ret
addr16
ds
divb
lds
hlt
jmp
notl
call
mov
mov
addr16
fwait
mov
jp
repnz
sub
fistpll
scas
dec
xchg
lods
shlb
dec
xlat
cmp
mov
movsl
sub
fisubl
ficoms
ret
pusha
mov
dec
adc
pushf
in
mov
arpl
cld
jnp
mov
mov
lods
mov
aaa
je
xor
and
shl
inc
xor
inc
mov
add
cmp
push
cli
divb
stos
xor
mov
in
rcll
pushf
cmp
jno
push
mov
or
stos
lds
insl
lcall
lods
sub
jo
push
das
lods
inc
push
jmp
mov
mov
cmpsl
xor
pop
outsl
test
hlt
fs
icebp
pop
les
aad
jg
cmp
imul
push
fiaddl
mov
outsl
jl
lret
fidivrs
je
lret
mov
inc
mov
sahf
pushf
ljmp
mov
mov
scas
insl
lret
mov
xchg
ret
mov
inc
adc
push
and
xrelease
and
repnz
inc
cmp
lret
lcall
sbb
sbbl
fnstenv
stos
aam
cmp
and
les
leave
mov
lods
inc
adc
pop
iret
mov
test
insb
call
leave
rorb
push
or
xchg
mov
ret
mov
mov
gs
mov
mov
jecxz
xor
scas
daa
add
pop
iret
sahf
pop
push
shrb
mov
xor
pop
scas
sub
or
jecxz
xchg
sub
add
push
int
fildll
mov
aam
cwtl
dec
stc
fs
lcall
in
adc
popf
aam
pop
add
add
mov
arpl
hlt
pop
pusha
ja
xchg
jbe
aam
sbb
mov
in
push
dec
movsb
cmp
pop
mov
fisubl
addr16
or
arpl
and
cltd
cmpsb
or
inc
js
mov
outsb
aas
lahf
jbe
orb
outsl
out
ret
mov
sbb
push
in
mov
or
mov
leave
xor
cs
popa
sub
pop
cmp
pop
jno
cmc
pusha
out
cmp
gs
movsb
xor
push
cmp
or
sub
xor
mov
and
inc
lret
cmp
popf
fnstenv
xchg
into
repnz
xchg
sbb
fwait
jne
rorb
mull
movsl
popf
repnz
pop
mov
cmp
shll
mov
inc
jno
stc
pop
daa
imul
inc
imul
or
xchg
lret
rcrl
cmp
iret
lea
and
lea
rolb
or
sub
adc
sarb
lcall
or
mov
lods
daa
loop
shrb
std
scas
inc
das
cmp
or
cmp
loop
sub
mov
xchg
mov
mov
jecxz
lds
imul
les
loop
jp
mov
stos
xchg
dec
adc
mov
stos
stos
sub
sahf
ds
mov
mov
cli
push
dec
or
fsubrl
dec
push
clc
fstpt
push
xchg
movsb
fwait
aam
mov
ret
xchg
sub
iret
cwtl
cmp
xor
pop
push
lods
daa
stos
mov
es
lahf
cmp
inc
aad
ljmp
pop
rol
in
pop
push
jmp
ret
pop
shl
ret
mov
add
push
xchg
sub
enter
test
add
std
mov
inc
or
test
push
lods
les
out
pop
mov
shlb
and
inc
xchg
sub
and
loope
cmp
mov
dec
adc
push
add
int3
inc
adc
inc
fidivs
stc
pop
cmc
sub
sub
push
sbb
rolb
in
adc
jo
push
jns
mov
movsl
cld
fistpll
pop
dec
nop
fiadds
jecxz
sub
std
in
stos
in
mov
xlat
or
mov
fnstcw
fsts
mov
shrl
mov
mov
arpl
cltd
aas
outsl
je
notb
inc
jmp
mov
cli
sub
add
aad
sub
cmp
add
cmc
dec
popa
out
in
inc
aas
repnz
das
das
mov
daa
sub
jns
les
jge
test
jno
sbb
jmp
adc
dec
insl
mulb
lods
push
stc
popf
xor
jp
rol
lea
cmp
loopne
cmc
inc
add
fsubrp
adc
dec
or
sarb
ss
cld
outsl
sbb
ja
xchg
cs
add
dec
adc
xchg
scas
xor
xor
and
push
mov
pop
inc
adc
mov
mov
lea
adc
cltd
or
push
pop
stc
notb
mov
sbb
fninit
jae
stc
out
jle
adcl
inc
fistl
movsb
stc
aad
scas
xor
push
xchg
sarb
push
leave
xchg
daa
push
rorl
cltd
xlat
js
test
mov
sbb
push
shr
add
lds
nop
ds
sub
mov
jp
add
mov
cmp
push
in
sbb
test
jecxz
or
adcl
out
push
lcall
pop
daa
mov
pusha
adcb
add
xor
mov
or
popa
icebp
cmp
sbb
das
lret
xchg
addr16
pop
sti
or
jno
and
cmp
insl
int
adcb
and
and
mov
mov
cmpsl
push
adc
cmpsb
push
les
adc
jg
and
sub
cmpsb
xor
mov
xchg
mov
test
lret
sti
xchg
xlat
jle
in
das
mov
movq
in
jno
aad
cmp
out
enter
jae
push
and
pushf
cmp
xlat
test
scas
sub
mov
ja
hlt
mov
cltd
dec
jmp
rorl
add
mov
dec
loope
mov
or
jo
icebp
pop
in
jns
push
clc
in
xor
mov
in
mov
xchg
bound
mov
jne
mov
or
xchg
sahf
mov
cmpsb
ss
fwait
cmp
sub
jle
in
enter
enter
lods
sub
imul
andb
rorl
cs
xor
dec
xor
nop
bound
push
call
icebp
jb
in
jecxz
jno
pusha
pusha
jmp
lret
cwtl
adc
daa
stos
repz
loop
push
call
push
mov
push
das
sub
xchg
imul
sahf
repnz
out
adcb
in
push
sarb
xchg
fcoms
out
insb
movsb
icebp
sbb
fildll
call
les
add
push
nop
outsb
push
leave
jb
pushf
movsb
cmpsl
adc
fadd
mov
hlt
or
outsb
and
and
sarb
pop
test
adc
mov
mov
lea
gs
cmp
push
jb
push
int
imul
dec
shrb
cmpsl
xchg
push
mov
cltd
cmp
xchg
aas
bnd
xchg
arpl
xchg
inc
mov
jns
test
icebp
pop
cmp
and
rclb
inc
xor
ret
inc
cwtl
cmp
sbb
pop
sub
pop
negl
xor
xchg
jbe
into
jnp
jmp
sarb
push
mov
cltd
ror
pop
mov
and
aaa
into
jo
sub
stos
xor
int3
inc
or
fisubs
dec
adc
int3
xchg
loopne
fiadds
xor
notl
sahf
cmp
lahf
shlb
aaa
mov
loop
pusha
stos
add
lcall
cld
loope
or
leave
sti
lcall
push
jne
js
in
addr16
ds
inc
mov
push
addr16
outsb
jmp
movsl
jno
and
xchg
inc
add
pop
les
loopne
pop
nop
cltd
aas
sub
and
cmp
mov
faddl
xchg
or
inc
dec
in
jmp
cwtl
inc
jno
flds
add
mov
sti
push
outsl
lock
add
test
mov
xchg
inc
jmp
pop
mov
sub
cmp
rcll
add
add
cmp
cmp
dec
cld
sub
add
test
inc
fidivl
flds
sarb
sbb
stos
xor
dec
lods
xor
decl
aad
scas
xchg
mov
fimull
fiadds
je
dec
adc
dec
cld
rolb
int
push
aam
sbb
into
scas
pop
imul
mov
push
out
dec
movsl
cmp
inc
cs
insb
lods
adc
outsb
repnz
dec
mov
lods
sub
xor
je,pn
cmp
ret
push
in
setbe
adcb
rcr
xor
adc
call
cmp
jp
lret
dec
fildll
adc
scas
mov
mov
xchg
sbb
leave
xchg
mov
adc
ficoms
repz
mov
sarl
jb
push
push
cmpsl
dec
adcl
dec
pushf
cmpsl
sub
fildll
mov
mov
mov
xlat
adc
sarl
mov
pop
xchg
shll
pop
shlb
scas
incb
push
je
inc
pxor
and
mul
jae
out
push
push
and
and
mov
mov
xchg
scas
xchg
sub
int
in
jb
dec
movsb
sbb
shlb
sub
mov
dec
or
test
lcall
dec
jge
inc
js
arpl
pop
outsb
mov
adc
repnz
adc
inc
je
sahf
xor
xchg
out
int3
or
orb
mov
inc
adc
push
aaa
call
push
xor
xchg
inc
inc
sub
aas
fwait
enter
arpl
lcall
scas
loope
adcl
pusha
icebp
mov
mov
repnz
xchg
mov
shlb
inc
jns
and
sahf
lcall
sbb
jb
fdivrl
fstpt
movsl
mov
pop
sbb
xor
sbb
inc
cwtl
cmp
sub
adc
pushf
aaa
push
daa
or
pop
dec
adc
dec
leave
mov
cmp
adc
push
add
jecxz
ja
lea
imul
je
in
fildll
mov
cwtl
cmp
lahf
jnp
inc
mov
push
push
cltd
fnstcw
mov
int3
pop
sub
mov
repnz
mov
and
xchg
outsb
inc
pop
sti
lret
mov
sbb
dec
xchg
rcll
hlt
xchg
inc
bound
insl
fstpt
ret
mov
adc
inc
stos
dec
or
scas
mov
cli
orl
popa
stos
loopne
mov
sti
xor
sbbl
jg
mov
xchg
push
stc
or
pop
and
dec
sub
ret
xlat
lcall
push
bound
inc
xchg
pusha
mov
adc
nop
push
pushf
aas
or
and
je
inc
push
shlb
popf
push
cmpb
jns
repnz
cmp
leave
push
push
or
push
test
mov
movsb
call
jo
push
jecxz
xchg
inc
sub
sbb
ds
push
mov
and
mov
sbb
sbb
add
jbe
cmp
lret
jno
jo
ds
hlt
pop
push
stc
test
sbb
icebp
ret
aam
adc
sub
mov
lret
hlt
into
xchg
sti
sbb
adc
leave
xchg
cmp
jge
sub
pushf
inc
ret
pop
arpl
negb
jno
push
and
xchg
cmp
xor
push
lods
gs
inc
or
les
jp
push
xchg
mov
lea
aaa
dec
push
add
pusha
and
imul
cmp
and
in
outsb
or
inc
adc
cmp
sub
std
leave
push
add
push
scas
sub
add
xchg
push
jns
rcll
gs
sub
cmp
movsl
insl
jmp
jl
mov
and
ja
xchg
cli
popa
aam
xchg
cmp
add
lock
out
mov
je
loop
jmp
xchg
cmpsb
hlt
jp
lahf
mov
push
inc
int
int
xchg
xchg
mov
push
xchg
pop
mov
push
xor
int3
repnz
xor
or
lock
ds
and
mov
stc
lea
rcll
test
movaps
adc
cmc
mov
test
mov
hlt
lods
push
jge
jle
mov
stos
das
in
mov
adc
dec
adcb
inc
push
ss
jbe
sub
les
push
je
push
negb
jg
out
mov
in
xchg
mov
mov
push
int
ret
mov
test
lods
ds
fstpt
and
insb
pop
adc
mov
pushf
icebp
mov
ret
pop
jmp
repnz
dec
hlt
mov
rorl
shrb
mov
in
inc
imul
pop
add
stos
cmp
adc
inc
daa
cld
gs
xchg
jmpw
clc
fs
dec
mov
cli
aas
jg
sete
jns
mov
hlt
gs
aad
fwait
push
into
xor
mov
dec
dec
pop
mov
mov
xchg
aas
xchg
in
mov
scas
movsb
xchg
inc
or
call
pop
add
jnp
sti
pop
jmp
pop
add
dec
sub
ret
xor
lahf
test
cwtl
inc
sarl
xor
fs
jle
arpl
jae
jl
inc
data16
sbb
and
repnz
sti
xchg
insl
pop
lcall
mov
shll
aaa
sahf
mov
enter
shll
sbb
lret
sbb
mov
xor
dec
adc
fisttps
dec
leave
iret
in
mov
pop
sbbb
or
add
jp
sbb
and
test
pop
int
in
xor
sti
cmc
jmp
loope
cmp
sbbb
push
jno
pop
std
sbb
imul
push
push
add
sub
push
jl
dec
je
test
outsb
jae
dec
or
push
js
sbb
jo
dec
mov
sbb
in
push
add
sbb
inc
faddl
in
xorl
cli
mov
cmpsb
sub
xlat
test
lds
out
jne
adc
xlat
jge
jge
lcall
shlb
push
in
les
push
testl
pop
add
aas
inc
push
les
mov
xchg
cmp
ja
dec
mov
dec
adc
repnz
cs
fadds
int
mov
icebp
insl
int3
lds
out
outsb
mov
and
iret
ret
out
rol
fcomip
arpl
lret
xchg
test
mov
js
cmc
jbe
cltd
scas
adc
mov
dec
or
in
xchg
sub
add
call
ja
mov
std
pop
mov
add
or
and
push
add
xor
push
dec
inc
repz
push
imull
lods
js
dec
stos
into
sbb
ja
mov
enter
dec
cli
movsl
inc
or
jmp
mov
mov
jg
add
ja
pop
xor
ljmp
inc
lock
xchg
sarl
int
inc
jg
mov
cli
data16
sbb
repz
add
or
xor
xchg
js
sub
les
xor
cltd
aas
and
jecxz
xor
ret
push
out
cmc
pop
add
std
mov
mov
xor
divb
cltd
ret
sub
std
clc
arpl
xor
aaa
xlat
lock
add
push
add
add
ljmp
imul
push
in
jno
movsl
js
sbb
xlat
ja
push
call
jg
sub
aaa
cmc
push
push
add
jbe
inc
imul
popf
mov
sub
out
fwait
lret
rol
sub
add
adc
push
aam
fsubr
push
cli
pop
cmc
fidivrl
sbb
jge
pop
mov
std
adc
dec
dec
imul
xchg
aad
into
jb
add
outsl
neg
push
cmpsl
cs
or
and
dec
jle
jg
popf
insl
and
iret
dec
push
out
dec
adc
inc
dec
adc
xchg
loop
push
lock
das
rclb
std
adc
popf
aas
hlt
cmp
cmpsl
les
xchg
mov
in
ret
ss
imul
inc
or
in
jno
outsl
mov
dec
out
js
pushf
sbb
stos
call
les
imul
out
cmp
add
clc
pusha
int
or
movsl
and
pop
sbb
inc
ret
xchg
lret
pop
sti
push
push
and
pop
xchg
xchg
mov
mov
outsl
dec
pop
cli
push
je
jmp
inc
aam
jns
rclb
or
mov
add
mov
ss
push
pop
fistpll
cmc
jmp
sti
cld
cld
mov
iret
daa
and
and
ret
ss
and
mov
jno
aaa
push
nop
jp
pop
sbb
and
mov
bound
idivb
js
add
repnz
add
lock
dec
adc
xor
js
adc
mov
ds
outsb
jmp
or
jg
push
push
mov
fs
je
addr16
mov
jl
inc
jp
sbb
out
js
mov
and
add
or
push
add
leave
push
or
in
pop
cmp
inc
popf
push
jmp
jg
insl
hlt
cwtl
jo
pop
or
push
int
pop
dec
adc
clc
xchg
jle
add
les
stos
pop
jge,pn
lret
inc
push
sti
test
mov
aam
push
std
mov
icebp
sbbl
add
fiadds
push
movsb
js
pop
test
mov
push
xorb
aam
push
hlt
lods
pop
cld
das
out
test
mov
scas
cs
pushf
mov
cmp
ss
hlt
push
pop
cld
jge
push
add
push
mov
shll
in
insl
outsl
insl
aad
jge
and
fadd
add
mov
scas
pushf
cmp
push
xor
xchg
sub
gs
dec
out
xchg
scas
cmp
inc
or
ds
pushf
inc
xor
mov
mov
out
mov
aam
cmp
scas
add
in
mov
ljmpw
push
xchg
jmp
pop
pop
cli
movsl
mov
aas
popf
inc
xor
or
loopne
jl
les
mov
cmpsb
call
or
stos
push
je
out
js
sub
cs
les
rcll
cs
ret
in
je
pop
bound
pop
je
enter
fidivs
out
sarl
je
mov
jg
pop
adc
movsl
imul
js
pop
push
mov
je
dec
cmpsl
push
xchg
pop
add
dec
xchg
aaa
das
jle
movsb
repz
mov
out
je
cmp
pop
lea
mov
dec
cmpsb
daa
loopne
fildl
jle
fs
xchg
cmp
jmp
fimull
jmp
inc
sbb
test
cmpsb
sub
rcll
hlt
ficompl
pop
jl
sub
subl
aad
add
std
cld
bound
movsl
imul
mov
cmpsb
ss
out
js
xchg
aas
cmp
sbb
pop
inc
jle
jg
popf
and
cld
push
dec
or
push
jmp
mov
inc
enter
popf
fwait
xor
out
and
push
inc
mov
jmp
orb
out
pusha
fwait
repnz
adc
push
inc
pop
add
inc
loop
mov
test
pop
rclb
mov
cmp
fs
xchg
inc
adc
xor
xchg
enter
es
int3
mov
cmp
mov
fsubl
sbb
mov
js
fiaddl
xor
mov
cli
cmpsb
stos
orl
lret
loope
sub
mov
mov
push
les
pushf
cmp
aad
pushl
lods
sbb
cwtl
jg
push
dec
enter
xchg
cs
aas
pop
out
stos
mov
stos
add
add
insb
cmc
cmpsb
push
sarl
mov
sub
data16
jl
jmp
sub
out
in
cltd
mov
sbb
push
mov
cmp
inc
stos
cs
fcmovb
xchg
dec
or
inc
cs
mull
xor
cmp
xchg
or
xor
add
lea
xchg
cmp
imul
sub
shll
mov
mov
push
addr16
cmp
sub
ss
push
xchg
pop
clc
mov
dec
or
orl
insl
cmp
daa
out
imul
xchg
int3
out
loope
aam
lahf
xchg
inc
cmc
les
loop
xchg
add
aam
jo
mov
subl
and
jno
jnp
xor
jae
mov
pop
shr
jne
adc
xchg
mov
xchg
cmp
rorl
xchg
std
xor
out
mov
pop
mov
mov
sbb
testl
test
fidivrl
and
mov
in
mulb
cmpsl
sub
push
outsb
repz
push
mov
dec
loope
xlat
jnp
repz
cld
cltd
or
ljmp
mov
or
xchg
cmp
mov
std
mov
mov
cmpsb
sub
cmc
arpl
repnz
stos
jne
mov
mov
xchg
push
and
sbb
mov
scas
adc
cmpsb
outsb
jnp
mov
dec
mov
mov
pushf
aaa
mov
out
pop
ret
adc
xor
int3
and
push
cmp
sub
xor
push
add
cli
pop
push
xchg
sub
push
fisubs
push
push
jg
popf
cmpsb
mov
mov
mov
sbb
jecxz
mov
pop
mov
mov
fiadds
jae
fsts
rolb
push
idivl
sub
bound
jle
xchg
pusha
fneni(8087
cli
pop
sbb
lret
mov
xlat
test
push
fwait
cmp
pop
les
jmp
dec
or
or
fimuls
ljmp
ss
sbb
lods
cmp
or
cmp
clc
ja
test
push
add
mov
and
jae
sub
popa
repz
loope
loopne
clc
fstl
xor
les
and
push
jnp
mov
mov
inc
pusha
cmc
push
lahf
adc
sbb
pop
shll
test
push
push
add
fs
es
sub
sbb
xor
adc
xchg
xchg
adc
out
out
pop
add
fimull
add
mov
lods
push
push
cmp
outsb
sub
pop
sbb
mov
mov
xor
fcomip
mov
loope
aas
dec
loope
mov
lahf
mov
fucomi
inc
sub
or
inc
or
jecxz
ss
in
add
jno
and
mov
xor
adc
insb
mov
popl
jge
icebp
cmp
repz
adc
cli
add
sub
vpshab
fdivs
sbb
inc
adc
in
fsts
xchg
inc
rcrb
push
mov
fisttpl
lret
mov
pop
std
inc
es
in
fdivl
jno
cmpsb
push
pop
incb
fldcw
cmpsl
insb
add
jbe
outsl
mov
mov
or
stc
pop
inc
adc
pop
cli
je
sbb
xor
xchg
ret
sub
aas
cltd
add
ret
xchg
xchg
pop
iret
mov
xlat
ss
shll
test
aas
add
push
push
and
lret
bound
jmp
scas
mov
fwait
inc
shll
cmp
in
jmp
pop
push
push
bound
pop
std
int3
jp
mov
fldt
aas
into
or
cmp
xchg
inc
add
fwait
xor
mov
inc
faddl
and
in
jo
xor
lahf
xor
xor
xor
sub
sahf
pop
push
inc
pop
push
int
clc
loope
dec
or
clc
pop
hlt
lea
xor
xor
lret
stc
nop
adc
lock
jbe
push
add
insl
xor
push
sub
cmpl
push
sti
pop
mov
jge
sub
mov
roll
pop
int3
add
add
push
push
aad
dec
insl
hlt
jmp
cli
xchg
in
lret
sarb
dec
dec
adc
xlat
xchg
cmp
add
xor
fdivrl
lods
test
addr16
movsl
jmp
add
sub
xchg
cltd
inc
jo
faddp
frstor
lods
add
lods
das
gs
cmp
ss
pop
dec
and
in
test
mov
mov
iret
iretw
movsl
push
out
xlat
xor
test
dec
mov
lods
xor
or
jp
cmp
or
movsl
dec
pusha
icebp
push
shlb
nop
sub
push
jge
in
mov
fidivrs
mov
call
or
mov
cmp
lods
mov
fidivs
shrl
add
addr16
lret
jae
cmpsl
cmp
jnp
cs
test
cmp
test
into
nop
cmc
xor
jl
in
jl
pusha
sbb
iret
xchg
adc
rcrb
dec
push
aaa
or
xor
add
icebp
pusha
jae
loopne
push
insl
xchg
inc
sbb
inc
mulb
shrb
stos
mov
mov
push
cmp
or
sub
xchg
jl
lds
inc
adc
mov
and
jmp
sub
mov
adc
and
mov
loope
sbb
push
xor
frstor
jecxz
add
mov
test
ficoml
loop
add
cmp
or
aad
insb
jl
pop
stos
jge
pop
xchg
mov
std
fildl
sub
mov
jae
xchg
cmp
das
outsl
repz
mov
dec
mov
xor
or
adc
mov
mov
jbe
fisubs
stos
inc
cmpsl
cmp
jg
cld
data16
mov
fimuls
rcrl
out
fmuls
add
sub
lret
dec
and
data16
inc
xlat
iret
xchg
popf
mov
fisubl
or
adc
inc
fstps
lcall
jmp
jle
add
pushf
xor
hlt
mov
ja
push
test
lret
fsubrs
xor
testl
mov
les
lret
mov
pop
push
push
jmp
mov
jo
lcall
and
push
shrd
add
xchg
lret
sti
mov
and
aas
dec
or
lahf
cmp
hlt
lahf
pop
es
repnz
inc
fcmovnu
adc
stc
das
addr16
pop
cmpb
xor
aas
idivb
xchg
dec
fidivl
mov
enter
into
add
push
lods
and
add
jb
mov
fstl
stos
inc
xor
jo
sbb
pop
test
mov
xlat
mov
sub
lret
dec
and
gs
inc
xlat
into
xchg
popf
mov
pop
cmc
and
and
or
adc
fstps
xor
jge
imull
sarb
add
insl
outsb
and
shll
test
adc
cld
xor
gs
dec
in
jo
lods
mov
ret
xor
hlt
sub
jmp
mov
jo
cltd
rol
pop
add
in
push
push
lods
inc
inc
ja
cltd
test
lret
bound
mov
and
aas
dec
pop
or
sahf
pop
es
icebp
stos
inc
fcmovnu
adc
stc
cs
dec
adcb
mov
sahf
xor
ds
mov
stos
xchg
dec
fidivl
mov
enter
int
push
out
out
push
lods
pop
push
outsb
add
jno
mov
fcoml
stos
inc
das
in
pop
pop
push
enter
mov
mov
sub
lret
dec
and
fs
inc
xlat
int
push
popf
mov
pop
cmc
pop
fsubs
or
adc
inc
fstps
lcall
out
dec
sbb
jle
add
insl
insl
and
shlb
cmpsl
loope
test
sti
xor
fs
mov
dec
in
outsl
adc
add
ret
repz
jmp
scas
data16
cwtl
rol
pop
add
in
push
or
add
xchg
enter
mov
and
aas
dec
push
or
popf
pop
es
lock
inc
fcmovnu
adc
stc
sub
dec
adcb
mov
sahf
xor
cmp
pop
adc
jns
xor
loop
clc
int3
add
xor
push
lods
push
push
outsb
add
jo
mov
fistl
stos
inc
cs
pop
push
push
enter
mov
aad
lods
inc
mov
fmulp
popa
adc
mov
arpl
push
popf
mov
pop
cmc
push
xlat
and
or
adc
inc
fstps
lcall
out
dec
sbb
jle
add
insl
insb
and
mov
loopne
test
cli
xor
arpl
testl
lahf
insb
add
shll
repnz
jmp
scas
gs
xchg
iret
pop
add
in
push
or
inc
jne,pt
cltd
cmpsb
pop
lret
bound
mov
and
aas
dec
add
pop
hlt
pushf
push
es
out
test
lcall
fs
pop
jg
insl
jmp
or
mov
mov
stos
popl
jno
mov
enter
lret
add
xor
push
lods
sbb
ds
outsl
test
and
nop
push
jmp
sub
dec
enter
mov
aam
lods
inc
mov
popa
cmovs
mov
bound
push
popf
mov
pop
cmc
sbb
aas
jl
jno
inc
fstps
lcall
in
dec
pop
int
adc
push
popf
xor
mov
mov
ficoms
test
stc
xor
popa
sbb
dec
orb
insl
push
lods
sahf
aam
add
shlb
daa
mov
pop
adc
inc
jp
aas
lods
fs
xchg
int
pop
pushl
in
push
or
lcall
and
loop
inc
xlat
dec
add
mov
lcall
adc
cmpsl
inc
push
fwait
xor
arpl
sub
push
xchg
dec
sbbl
out
lahf
rorb
testb
pop
adc
lea
jbe
xor
fists
push
call
sbb
push
test
and
mov
mov
loope
or
dec
leave
pusha
jg
data16
lods
inc
mov
fcmovne
bound
cs
fmul
addl
negb
aam
mov
outsl
es
ficoml
fwait
xor
js
clc
test
lret
jg
std
xlat
outsb
push
mov
mov
fcoml
stos
or
cs
pop
sbb
nop
dec
orb
imul
pushf
shrb
add
xor
and
push
jmp
js
inc
stos
bound
xchg
lret
pop
std
mov
daa
out
out
push
or
fwait
mov
ret
and
loopne
inc
fadds
or
cwtl
push
sub
jmp
inc
fst
or
xor
mull
pusha
mov
sbb
fsubrs
pushf
mov
mov
out
mov
lods
mov
jae
lods
xor
fstl
push
call
sbb
push
cmpl
int
movsb
lea
lea
imull
or
dec
leave
pusha
jge
nop
daa
gs
out
rolb
add
arpl
and
pop
xchg
inc
fadd
orb
mov
pop
negb
shll
mov
insl
and
fwait
xor
ja
stc
test
mov
pop
cld
xor
outsb
sbb
dec
xchg
mov
ficoml
stos
or
sub
enter
xchg
dec
jle
out
push
scas
fwait
shrb
add
mov
push
andnps
inc
jbe
inc
test
jae
xchg
leave
pop
sti
mov
sub
sbb
jge
pop
mov
cmp
fwait
mov
shll
repnz
in
sbb
inc
fadds
mov
xchg
push
sub
xorl
or
daa
pop
mov
sbb
fsubrs
fwait
mov
mov
out
mov
lods
mov
je
stos
xor
fistl
call
sbb
push
cmpl
lea
mov
mov
fbstp
adc
pusha
jnp
xchg
sub
jle
test
pushf
and
int
or
mov
pop
xchg
inc
fadd
jg
mov
pop
shlb
mov
imul
mov
fistpll
sbb
xor
outsb
fs
aaa
dec
test
mov
fcoms
stos
or
fdivl
sub
enter
xchg
dec
jl
out
imul
add
mov
mov
push
push
push
in
aas
je
inc
cmpsb
pusha
je
xchg
mov
sub
sbb
jge
push
mov
cmp
fwait
sahf
pop
iret
mov
in
test
adc
inc
decl
mov
xchg
push
sub
xorb
or
es
mov
sbb
fsubrs
lcall
xor
push
adc
je
test
sti
xchg
vsqrtsd
sub
sbb
cmpb
into
push
lea
mov
mov
fidivs
adc
pusha
jp
xchg
sub
out
int
scas
inc
mov
add
or
mov
pop
xchg
inc
fadd
jle
mov
push
shll
mov
push
inc
fcoml
xor
fidivrs
sbb
xor
outsb
arpl
mov
mov
xlat
adc
hlt
sub
enter
xchg
inc
jnp
out
push
insl
add
mov
mov
push
or
in
cmp
pop
je
nop
enter
xchg
sub
sbb
jle
add
dec
ss
add
mov
in
test
adc
inc
std
or
xchg
dec
sub
xorb
or
cld
and
mov
sbb
fnstenv
cwtl
mov
xor
mov
lods
xchg
fnsave
xor
fsts
push
jmp
push
dec
jo
jg
aaa
into
push
mov
mov
fdivl
push
inc
lret
das
xchg
sub
call
inc
mov
push
popf
push
int
or
mov
pop
xchg
inc
fld
jl
mov
adc
aaa
jle
imul
pushf
xor
mov
sbb
xor
outsl
bound
mov
lea
adc
pop
rcr
repnz
leave
pop
adc
xchg
inc
jp
out
sbb
mov
lea
or
cmp
inc
movsb
pop
je
mov
leave
pusha
imull
call
dec
xor
push
popf
pushf
push
iret
xchg
in
test
cmovae
inc
sti
or
xchg
dec
sub
jle
jg
out
inc
pop
sahf
xor
and
push
lea
sbb
fidivl
xchg
mov
nop
xor
mov
scas
xchg
int3
fmuls
push
ljmp
jno
jle
aaa
into
data16
roll
lods
inc
and
jae
or
lret
bound
xchg
sub
jmp
inc
mov
pop
sahf
sbb
aas
and
sbbb
fcmovb
jp
mov
adc
daa
mov
addr16
inc
fstl
popf
xor
jno
sti
mov
les
jo
pop
mov
mov
aam
lods
add
es
push
adc
xchg
inc
js
call
xchg
lret
cld
mov
iret
out
mov
cmp
inc
mov
ret
lret
lods
xchg
sub
push
jmp
dec
xor
sahf
lcall
mov
fmuls
or
sub
stc
xchg
dec
sub
jl
adcb
popf
dec
add
data16
and
push
mov
sbb
xchg
mov
nop
xor
rclb
pop
scas
test
fidivs
movsl
xor
xchg
shl
ljmp
jno
jl
cmp
gs
es
xchg
mov
lods
inc
and
je
or
jbe
xchg
sub
jmp
inc
mov
pop
sahf
sbb
into
gs
es
sbbl
fcmovb
jns
mov
adc
sub
gs
inc
fimuls
popf
xor
jo
cld
mov
ret
sbbl
sub
jo
push
mov
mov
rclb
jne
and
lret
std
xchg
inc
jbe
call
xchg
enter
mov
shl
sbb
out
cmp
inc
mov
ror
rep
xchg
sub
adc
addb
dec
xor
sahf
cltd
push
shlb
mov
out
test
or
fstpt
pop
stc
nop
dec
sub
jnp
adcb
pushf
dec
add
ss
data16
pop
pop
mov
sbb
xchg
mov
nop
xor
rclb
pop
scas
cmpl
jne
movsb
xor
xchg
mov
loope
mov
dec
jno
jnp
cmp
fs
es
test
mov
lods
inc
and
je
or
bound
xchg
sub
jmp
inc
mov
pop
sahf
sbb
into
gs
and
adcl
fidivrl
loopne
clc
adc
sub
fs
popf
xor
outsl
gs
mov
ret
hlt
sub
jo
adc
testl
add
lret
std
xchg
inc
jne
call
xchg
outsl
push
stc
mov
shl
sbb
out
aaa
insl
lods
inc
lahf
pop
jbe
mov
lret
stos
xchg
sub
adc
addb
dec
xor
sahf
cwtl
push
shlb
mov
out
test
or
testl
vphaddbw
adcb
fwait
dec
add
std
push
push
mov
sbb
xchg
mov
nop
das
out
push
sbb
scas
cmpb
jne
mov
cld
xchg
mov
loopne
mov
dec
jno
jp
cmp
arpl
push
in
mov
lods
inc
and
je
or
bound
sub
add
mov
scas
call
into
add
and
adcl
fidivrl
fbld
adc
sub
arpl
fimuls
popf
xor
outsb
gs
lahf
xlat
mov
sbb
sub
jo
adc
cmp
testl
add
xor
push
push
std
xchg
inc
je
call
xchg
outsl
push
clc
mov
shl
sbb
out
ss
lods
inc
sahf
push
jbe
mov
xchg
sub
adc
addb
das
popw
sahf
xchg
push
shlb
mov
out
test
or
testb
pop
stc
mov
sarl
pop
loope
dec
add
std
sbb
test
jo
xchg
mov
nop
cs
push
pop
push
pop
scas
cmpl
xor
xchg
mov
fistps
mov
inc
jno
jns
cmp
bound
push
in
mov
lods
inc
pop
je
or
bound
xchg
sub
jmp
inc
scas
out
sahf
sbb
into
add
and
adcl
fidivrl
fisubs
bswap
sub
bound
inc
fimuls
xor
insl
gs
sahf
mov
sbb
sub
jo
adc
mov
iret
adc
jne
and
lret
std
xchg
aas
jae
call
xchg
lds
divl
mov
xor
push
jbe
mov
xchg
sub
adc
addb
dec
cs
sahf
xchg
dec
shlb
mov
mov
aam
inc
fstpt
cmc
or
es
stc
lea
sarl
pop
loopne
dec
add
std
sbb
mov
sbb
nop
mov
nop
sub
dec
pop
scas
xorb
jne
mov
cld
xchg
mov
ficomps
mov
inc
jno
js
cmp
popa
cltd
es
adcb
in
lods
inc
push
aad
or
inc
lret
bound
xchg
sub
jmp
inc
lods
out
sahf
pop
iret
into
add
and
adcl
mov
frstor
push
enter
das
jg
popa
sbb
dec
sbbb
popf
aad
push
pop
mov
fnstenv
adc
mov
into
adc
jne
and
push
or
xchg
cmp
pop
sbb
divb
es
add
xor
inc
pushf
push
jbe
xchg
xchg
sub
adc
addl
or
jg
es
rorb
inc
fdivrl
repz
and
arpl
mov
shll
sbb
xchg
dec
add
std
sbb
xchg
test
insl
cmpsl
fdivl
mov
xchg
sub
rclb
sbb
addr16
rorl
push
jmp
fcompl
mov
inc
jb
ja
cmp
pop
cwtl
nop
daa
lret
in
mov
scas
inc
sbb
aas
int3
arpl
xchg
sub
ljmp
in
lahf
push
int
pushl
es
push
mov
jae
mov
or
sub
imull
dec
fisttps
sahf
xor
fwait
sarl
out
fidivl
adc
stos
arpl
pop
xchg
int3
push
lods
std
mov
jbe
push
xor
xchg
cmp
ljmp
jno
hlt
scas
cmp
fists
pop
lock
inc
lcall
arpl
movsl
xchg
sub
push
jmp
inc
clc
mov
sub
mov
jge
daa
mov
rolb
inc
fnsave
icebp
or
sti
mov
ret
sbbb
xchg
dec
loopne
mov
sbb
push
test
test
movsl
fdivl
lea
xchg
sub
rcrl
sbb
data16
ss
xchg
xchg
mov
fistpl
mov
inc
jb
jne
cmp
pop
xchg
nop
daa
enter
mov
scas
inc
sbb
jne
add
int3
arpl
xchg
sub
ljmp
jecxz
lahf
adc
iret
data16
xor
out
test
inc
fstpt
fldenv
or
sub
imulb
adcb
pop
dec
loopne
jle
xor
lcall
sbb
and
jno
shld
ja
vphaddbd
lret
sti
mov
ja
sbb
int3
dec
or
xchg
cmp
ljmp
jno
repnz
cmp
ficoms
nop
daa
inc
lcall
xor
inc
cltd
push
ja
cmpl
sub
or
mov
sub
mov
jl
daa
mov
iret
add
or
sti
mov
ret
sbbb
xchg
dec
loopne
std
mov
sbb
push
cmpl
sbb
movsb
fdivl
mov
xchg
sub
rcrl
sbb
gs
ss
xchg
xchg
mov
ficompl
mov
inc
jb
je
cmp
pop
xchg
nop
daa
jle
out
scas
call
jne
add
arpl
xchg
sub
ljmp
loop
lahf
adc
iret
data16
xor
mov
push
xchg
jno
mov
or
sub
cmc
sub
loopne
jge
xor
cltd
sarb
in
and
jno
push
movsb
cmp
clc
vprotd
push
lods
cli
mov
ja
sbb
xchg
cmp
ljmp
jno
icebp
lods
cmp
fstl
nop
daa
inc
pop
lock
data16
inc
cwtl
push
ja
cmpb
sub
or
cmpb
mov
sub
mov
jnp
daa
mov
into
add
fnsave
push
fs
mov
ret
sbbb
xchg
dec
loopne
cld
mov
pop
push
mov
sbb
mov
mov
xchg
sub
rcrl
sbb
fs
ss
test
xchg
mov
push
jmp
fstps
mov
inc
jb
jae
cmp
pop
xchg
nop
daa
jge
out
scas
out
inc
sbb
jne
add
int3
arpl
xchg
sub
ljmp
loope
lahf
adc
iret
data16
xor
mov
dec
test
jo
mov
or
sub
hlt
sub
loopne
jl
xor
cwtl
iret
mov
sbb
and
inc
xor
int
and
sub
pop
icebp
fiadds
add
pop
push
in
imul
scas
hlt
fistl
mov
adc
lcall
jae
test
pop
mov
cmp
push
dec
pop
add
outsl
xlat
std
cmp
fs
mov
sbb
ret
mov
mov
adc
sti
pop
xchg
cwtl
mov
mov
push
and
fsubrl
mov
pop
insb
sbb
ret
pushf
sub
jae
pop
mov
inc
inc
pushf
adc
or
fs
lods
sti
fisttpll
cwtl
fcomps
stos
lret
mov
into
cs
fmul
nop
je
popa
sbb
jge
addb
mov
aam
xlat
inc
pop
mov
mov
mov
xor
stos
fstpl
sti
fbstp
adcl
rcl
mov
rcrl
psrld
jle
mov
dec
scas
push
ja
ret
stos
sahf
jo
jge
adc
inc
outsl
ja
or
fnstcw
rorb
and
movl
nop
js
aaa
jl
in
push
push
rol
cs
push
xor
mov
les
outsl
cwtl
or
sub
inc
fidivrs
xor
sub
push
sub
loope
sub
jp
xchg
push
sub
lret
add
push
bound
xor
add
fucom
je
cld
repnz
jne
push
ljmp
jle
sub
popw
loope
outsl
aas
cld
dec
dec
mov
mov
push
mov
aas
lds
popa
push
pop
or
add
gs
std
out
pop
lods
and
bound
pusha
pop
mov
jg
imul
dec
adc
shl
popa
or
pushf
jge
fwait
push
cmp
push
je
xor
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
add
rcrl
and
xor
fcomps
mov
mov
fisttpll
pop
test
gs
lea
out
jns
repnz
in
adc
push
or
out
cmpl
jl
inc
in
sbbb
outsb
xlat
lcall
jmp
in
popa
push
pusha
mov
xchg
popa
mov
sub
arpl
sub
push
fidivrl
sbb
jbe
insb
pop
lods
push
cmp
popa
lahf
sub
sub
sahf
jae
jmp
scas
sbb
mov
ss
push
mov
fisttpl
mov
mov
fstpl
and
pop
sbb
test
insl
test
xchg
push
add
dec
mov
repz
jbe
dec
sub
loope
inc
inc
xor
push
ss
sarl
ud2
cmc
inc
fcmovu
jg
mov
push
loopne
subl
inc
out
xor
and
add
mov
xor
xchg
enter
call
ret
mov
inc
mov
imul
in
xchg
fcoms
enter
sub
xchg
testb
cmc
jle
sbb
dec
imul
mov
push
bnd
ss
subb
nop
jge
jle
mov
in
repz
or
sub
jg
hlt
rolb
das
dec
lcall
test
jl
jge
js
leave
jbe
cmp
inc
inc
pop
inc
call
sub
pop
aaa
repz
enter
ret
xchg
enter
sbb
imul
xor
inc
shlb
loop
hlt
lret
mov
scas
inc
mov
pushf
sbb
aaa
out
cmp
in
inc
out
adc
fwait
xor
cmp
fsubs
mov
arpl
daa
je
adc
jl
xor
push
mov
int
dec
mov
scas
aad
loop
push
popf
fs
xchg
sarb
fwait
data16
mov
xchg
lds
jae
addr16
push
loope
insb
push
pop
cmp
mov
roll
addb
fs
cli
fwait
scas
push
shlb
cli
mov
dec
cmpsl
cld
pop
rcll
and
mov
popa
dec
cmpsb
mov
andl
lea
and
pop
push
lock
shlb
dec
pop
mov
mov
pop
cs
mov
xchg
in
adc
mov
insl
dec
adc
in
aas
mov
mull
push
js
stc
push
dec
xor
mov
mov
stc
mov
dec
add
sub
fldt
aad
pop
sub
lret
dec
mov
lret
loope
sub
sub
and
or
je
shlb
aaa
out
and
daa
pop
mov
push
movl
fildl
rol
mov
pop
dec
in
aad
pop
push
mov
xchg
cmp
insb
not
sbb
jecxz
arpl
sbb
std
push
lods
insl
mov
adc
cmc
js
push
jno
stos
pop
movsb
dec
adc
outsb
lock
xchg
jae
and
mov
mov
stc
fmulp
mov
aaa
testl
mov
lea
mov
subb
jle
mov
xchg
cmpsl
mov
notl
pop
mov
xchg
cmpb
and
out
adc
pop
lods
aas
call
pop
rolb
xor
pop
xchg
jns
xor
push
repnz
ja
dec
into
addl
jne
dec
pop
test
call
insb
xchg
fildl
outsb
jge
mov
sub
shlb
add
xchg
xchg
push
loop
pop
cmp
clc
out
outsb
dec
sbb
sub
dec
xchg
jns
insl
xchg
pop
sahf
scas
mov
dec
jmp
xchg
imul
add
insl
xchg
mov
sbb
mov
shr
mov
mov
mov
mov
xchg
shlb
int
popa
adc
jmp
repz
xor
jbe
mov
jae,pt
out
xor
roll
push
or
pushf
xor
push
mov
lea
outsl
mov
push
and
mov
inc
mov
mov
xchg
pop
movsl
push
gs
scas
pop
call
or
jl
or
inc
ret
ds
xchg
sub
insl
clc
or
and
dec
mov
xchg
push
jmp
dec
xchg
loop
inc
addr16
dec
jle
mov
pop
in
add
sub
test
sbb
xor
dec
out
push
shll
mov
cltd
dec
cmpsb
negl
and
or
push
loope
mov
cmpsb
ret
testl
adc
pop
cld
dec
shll
push
pop
lods
push
sub
dec
mov
fldcw
inc
cmp
mov
cs
shll
stc
xor
js
cmpsl
jmp
jns
fwait
popa
mov
mov
int3
pop
jbe
mov
pop
inc
or
push
dec
mov
jmp
mov
dec
jae
inc
inc
and
mov
enter
mov
lcall
mov
popfw
insb
sbb
pop
xor
roll
sbb
lahf
in
push
sbb
mov
pusha
sub
je
push
sahf
shrl
xchg
push
pop
imul
mov
jno
sbb
push
push
push
scas
sbb
push
lods
icebp
xchg
cmp
add
fwait
and
mov
inc
push
dec
xor
mov
push
xor
inc
into
jno
fs
outsl
aas
jno
xor
mov
inc
mov
cmc
notl
stos
xor
sbb
insb
sbbl
lcall
nop
xor
jnp
fildll
inc
pop
push
add
pop
mov
or
pop
dec
mov
lret
mov
push
insb
bound
aad
mov
aas
aam
or
loope
rolb
or
adc
lahf
loop
adc
jns
cmc
and
or
xor
adcb
fwait
cmp
cs
xor
jp
outsl
rorl
ds
lock
and
mov
filds
cmpl
shrb
ss
mov
push
pop
pop
xor
add
in
loopne
pop
iret
sbb
xor
add
and
sbb
xor
incl
and
pop
ljmp
adc
push
pusha
ja
push
mov
shlb
fwait
gs
cli
ja
mov
adc
jle
test
sub
xor
inc
clc
xchg
stc
xchg
lds
pop
mull
jae
mov
mov
in
mov
xchg
jo
adc
imul
mov
cmp
mov
mov
outsl
add
gs
lret
dec
fcomps
lcall
movl
fadds
or
rcrb
add
outsl
mov
adc
dec
xor
ss
aas
lds
insb
and
cs
neg
mov
inc
cmp
pop
std
cmp
dec
cld
cmpsl
mov
push
test
in
xchg
addr16
xor
out
sub
push
push
adc
push
aad
fisttpl
pop
mov
roll
jne
and
cmp
das
and
xor
sub
xor
inc
addr16
dec
inc
push
lock
mov
jnp
enter
jno
jno
shlb
xlat
and
xor
clc
mov
ds
xor
cmp
inc
jae
jbe
jbe
iret
mov
lret
aas
jbe
jb
sbbb
pop
jae
ss
add
ficomps
jmp
movsb
or
stos
xor
pop
insb
repz
push
pop
push
push
jmp
mov
xchg
ss
jbe
push
ret
adc
loopne
cmp
test
int
pop
xor
std
cmp
push
cmp
les
mov
outsl
cmp
fwait
lock
push
call
jp
pop
adc
jo
push
test
mov
dec
cmp
ficompl
fcomip
ds
mov
xchg
sahf
sub
in
cmc
adc
mov
jo
sub
mov
mov
adc
xchg
xlat
mov
leave
mov
movd
cli
jl
shll
cmpsl
or
mov
inc
push
insb
ror
aad
adc
test
jp
xor
sbb
