mov
daa
sub
dec
push
lods
xor
loope
aam
lea
pop
leave
ret
mov
pop
ret
inc
and
lret
rclb
pop
pop
leave
ret
pop
pop
pop
ret
add
add
add
fdivl
mov
inc
inc
and
dec
add
adc
call
adc
add
and
sbb
xor
in
in
push
imul
and
sbb
add
ret
mov
xor
or
jmp
add
sbb
mov
push
and
xor
push
and
mov
imul
sbb
mov
and
mov
sub
pop
add
adc
dec
mov
push
xor
int3
mov
nop
dec
xchg
inc
nop
lcall
mov
or
nop
and
ror
add
inc
or
loopne
faddl
inc
pop
inc
mov
ja
mov
enter
pusha
xchg
dec
jge
imul
inc
adc
jge
sbbl
add
movsb
mov
add
xchg
mov
cmp
xor
sbb
or
sbb
sbb
sub
imul
and
insb
sbb
push
inc
imul
cmp
and
dec
inc
adc
sub
cmp
neg
sbb
xor
or
xrelease
movl
jg
in
jmp
xor
xor
adc
mov
ret
jle
xor
or
inc
add
ret
mov
jl
mov
es
je
sar
fistpll
loopne
sbb
xor
mov
sahf
test
popf
dec
inc
mov
loopne
or
add
and
out
mov
push
jg
shll
sbb
out
add
pop
mov
push
movsl
add
cltd
lret
pusha
mov
sub
mov
jle
add
sub
dec
or
sahf
inc
pusha
or
cld
or
or
sbb
push
testb
add
push
and
mov
xor
push
orb
pusha
loopne
xor
testl
push
mov
notl
cld
xor
jnp
fnsave
mov
shll
mov
insb
in
jno
ja
loopne
and
cmp
popa
add
insb
daa
xor
inc
testb
fiadds
cmpsl
push
test
mov
nop
shlb
pop
add
aas
cmp
iret
sub
es
and
mov
dec
lret
decb
mov
neg
add
add
out
scas
negl
add
mov
lret
cmp
sbbl
cld
and
jbe
push
cmpsb
rolb
adc
movsb
inc
jge
push
repz
fs
out
mov
rorl
xor
sti
mov
fsubs
jo
mov
push
test
test
jnp
test
inc
lahf
in
testl
roll
dec
shlb
xor
mov
jle
popa
addr16
icebp
daa
fwait
std
xor
es
pop
jo
xor
inc
sub
adc
inc
sbb
mov
nop
pop
or
daa
mov
jbe
cli
and
sub
sub
neg
inc
lcall
insl
mov
popf
mov
add
xor
repnz
ret
out
cmpsb
call
repnz
fnsave
imul
add
mov
insb
outsl
data16
cli
add
arpl
inc
sub
mov
xor
ds
dec
jecxz
mov
push
mov
add
ret
idiv
mov
inc
mov
adc
fsubrp
shll
xor
inc
andb
faddl
sbb
mov
jne
push
mov
xchg
mov
addr16
jge
mov
add
mov
xorb
lock
lods
add
xchg
cltd
sub
sub
sbbb
gs
pop
aam
add
outsb
negb
push
sub
mov
sub
jg
lock
jle
dec
das
rcpps
sbb
push
adc
out
daa
gs
into
loopne
adc
mov
adc
movsb
cltd
lahf
jl
cmp
sbb
neg
sub
add
aam
and
fsubs
or
cmp
fdivrs
dec
lock
sub
add
jne
pop
aas
xor
xchg
cwtl
add
pop
std
cld
loopne
sbb
cmp
add
clc
out
adc
add
xchg
sarl
rcr
iret
nop
xchg
add
push
mov
sub
xor
pop
sbb
inc
test
cmp
movsl
mov
andb
jbe
divb
loopne
loop
ljmp
pop
lock
push
or
fcom
ljmp
adc
hlt
in
ds
hlt
xor
add
in
pop
loopne
fwait
push
lock
mov
cmp
fdivl
jl
fsubr
sbb
repz
scas
add
mov
push
out
icebp
dec
mov
stc
or
cmp
ljmp
adc
sbb
shlb
add
sahf
in
sbb
mov
mov
andps
fbstp
aas
mov
ds
mov
test
xchg
mov
jbe
lea
fcomps
pop
mov
and
mov
xor
pop
cmp
jne
inc
dec
xchg
and
xor
add
pop
mov
insb
scas
mov
in
xchg
xor
inc
rol
or
and
std
cmpsb
addr16
dec
and
xor
or
hlt
fisttpl
clc
lea
push
push
push
call
inc
test
adc
popf
ss
inc
loopne
sbb
add
loopne
out
inc
sub
mov
push
repz
mov
inc
add
pop
add
dec
addl
rclb
icebp
cs
daa
cli
shl
ret
and
int3
inc
in
sbb
mov
jl
aam
dec
mov
pop
xor
fists
leave
ret
mov
or
adc
adc
sbb
sarl
dec
add
adc
outsb
sub
mov
sub
paddsb
out
dec
jo
or
cmp
adc
add
cmp
aas
popf
mov
in
sub
pop
xor
call
call
or
lds
ret
scas
xor
lods
rcr
insl
in
in
xor
push
repnz
sbb
cwtl
push
xor
and
adc
xor
fld
fistpl
mov
rcr
lods
cmpsb
ljmp
or
pop
repnz
shl
cmp
in
push
jne
pop
dec
mov
data16
mov
cmp
jbe
in
std
mov
jmp
push
mov
mov
loopne
jp
sbb
aad
add
filds
lcall
add
mov
cs
sub
rolb
mov
pop
int
imul
and
dec
lods
dec
imul
or
and
stc
loope
pop
test
inc
hlt
ret
adc
bound
add
stc
fwait
popf
ret
dec
push
test
loope
push
aad
cmp
clc
add
or
and
test
dec
in
hlt
aas
add
fxch
clc
sbb
mov
jmp
or
jbe
lock
lods
mov
sub
in
cmp
adc
add
pop
mov
clc
cwtl
add
sbb
out
stc
filds
ja
clc
pusha
push
sub
fucompp
ud0
xchg
dec
jp
sub
sbb
rol
jle
add
xor
jmp
data16
fistpll
je
insb
mov
mov
pop
nop
scas
or
jp
outsb
inc
jnp
std
lods
ficoml
inc
rolb
ss
add
lret
fdivp
xchg
add
outsl
inc
loope
pop
add
lock
mov
rclb
mov
cmp
mov
in
in
add
bound
test
mov
inc
dec
push
mov
mov
add
ret
hlt
push
push
pop
scas
arpl
mov
lods
and
cmp
adc
cmpsl
ret
ret
popa
inc
adc
outsb
fucomip
rol
lock
fsubr
and
dec
mov
xor
enter
mov
push
mov
or
adc
push
inc
add
fs
sbb
jmp
loopne
sub
dec
sub
inc
or
shl
xor
jbe
dec
lock
dec
mov
loopne
pop
pushf
cli
adc
sbb
lock
test
lcall
fisttpll
add
jge
loope
ss
jp
or
testl
push
jo
outsb
cwtl
xor
mov
fdivr
and
add
or
mov
jecxz
pop
add
sbb
sbb
xor
dec
jb
inc
pop
pop
loope
in
fidivrl
mov
sbb
outsl
xorl
pop
insb
xor
scas
adc
xchg
icebp
fdiv
roll
adcb
sti
insl
or
mov
cmc
xor
int3
dec
movsl
xor
xor
mov
es
cmp
add
inc
add
push
cmp
sti
or
mov
sub
add
dec
inc
shrb
cli
loope
pop
shrl
or
and
enter
repnz
repz
sub
mov
sbb
and
int3
lahf
add
clc
imul
les
imul
push
popa
jne
cs
nop
or
mov
andb
adc
div
out
push
lock
cld
and
loope
and
jge
push
lods
lcall
mov
mov
aas
push
pop
jmp
fiadds
sub
cmp
add
cmc
jbe
lock
adc
dec
arpl
out
insb
inc
decl
jmp
sbb
xor
icebp
sub
not
pop
xchg
fmull
xlat
and
mov
ja
idivl
push
push
hlt
push
push
call
scas
or
jae
sbb
cmp
sbb
mov
add
lock
inc
mov
jo
pop
aaa
stc
loop
sub
sti
daa
adc
mov
inc
adc
add
ret
aam
add
inc
inc
cmp
jb
push
xor
lcall
arpl
dec
adc
jl
xor
out
push
mov
shl
fildll
mov
loope
mov
mov
pusha
pop
add
inc
or
xlat
push
test
incl
jae
push
ret
dec
pop
pop
ja
adc
sub
mov
fs
pop
sarl
jbe
jno
rolb
aam
dec
xor
ds
push
fsts
xor
sub
lahf
pop
xor
ret
inc
or
lods
add
pop
pusha
fstps
aaa
lods
lock
mov
repnz
xor
inc
daa
cld
je
sub
inc
mov
xchg
call
mov
rorl
adc
daa
sahf
testl
add
loopne
aam
dec
adc
sti
xor
push
sub
popa
xor
jecxz
out
xchg
mov
ja
js
push
mov
pushf
inc
add
lgs
test
fisubs
cltd
add
incb
jge
mov
aam
pop
sbb
cmpsb
lret
xchg
loopne
dec
das
les
hlt
dec
popf
sub
xchg
dec
hlt
adc
dec
jb
mov
sbb
cwtl
push
dec
in
es
outsl
sbb
les
data16
sbb
fwait
iret
pop
loop
out
sarb
loop
sub
scas
xlat
jns
hlt
xor
adc
in
out
push
xchg
sbb
adc
loopne
adc
dec
clc
in
gs
dec
in
dec
cmc
or
testl
les
shll
outsl
pop
mov
cmp
icebp
sub
out
loope
push
sub
mov
xchg
xor
out
jae
fcoml
packuswb
push
xchg
flds
mov
mov
das
dec
lock
cmp
xor
out
cmp
pop
or
je
ljmp
xchg
in
adc
les
pop
sbbl
addb
adc
adc
sbb
les
mov
aam
add
mov
rol
mov
ret
aam
loopne
pop
mov
or
addb
daa
jno
mov
iret
daa
adc
cmp
or
and
add
mov
dec
js
pusha
insb
fsubrl
nop
fcmovb
xchg
orl
push
add
push
sahf
out
imul
add
xchg
fstl
inc
sub
pop
inc
add
and
fcoml
dec
aas
test
hlt
std
ljmp
loope
pop
mov
push
icebp
adc
gs
rolb
add
jbe
add
inc
inc
add
and
or
div
inc
dec
fistl
fimull
fiadds
mov
push
nop
push
fsubs
sbb
hlt
mov
mov
and
inc
pop
jne
and
rorl
dec
and
fadd
adc
dec
shll
inc
inc
cmpsb
stos
icebp
aam
push
lock
movsb
loop
divb
xchg
cmpsb
pop
cmp
push
jno
into
jp
cmp
mov
mov
push
inc
lds
jne
mov
out
xchg
add
rolb
push
fcompl
add
insl
sbb
or
jl
jnp
lret
cltd
repnz
das
js
rcrl
shrl
fisttps
call
call
mov
push
sbb
movsl
sub
cmp
scas
pop
lock
lock
enter
mov
dec
popf
icebp
xor
shlb
sarb
ss
mov
adc
shl
mov
into
lcall
lock
cs
adc
stos
cmpl
xchg
adc
push
dec
jl
and
adc
cmp
rcrl
cmpsb
icebp
ss
shll
shlb
inc
cmp
call
add
sbb
adc
push
cmpsl
stos
push
je
insb
lds
rorb
test
cwtl
xchg
mov
insb
outsl
mov
and
sub
xchg
xor
mov
test
rcll
cmp
xlat
push
enter
enter
inc
pop
fnstenv
nop
jne
xchg
call
pop
hlt
call
andb
push
mov
or
loope
rcll
fimuls
mov
test
sarl
jg
adc
inc
mov
sub
sti
rorb
nop
add
pop
loopne
xor
xchg
mov
out
add
cld
call
je
aam
divl
xor
dec
sbb
call
or
fsubs
inc
or
jecxz
es
lret
fnstenv
fbld
stos
inc
es
dec
adc
xor
fidivs
cmp
enter
stos
pop
jl
sbb
dec
hlt
dec
and
js
dec
rol
add
mov
fwait
outsl
out
adc
cmp
and
aad
aaa
cwtl
xor
add
mov
inc
dec
idivb
or
pop
cmp
and
pusha
add
movlps
dec
js
inc
adc
jl
push
outsb
int3
lock
jp
call
and
popf
mov
fadds
adc
jmp
jns
add
enter
jb
dec
push
enter
add
popf
add
add
add
mov
and
addr16
xchg
dec
pop
or
adc
mov
ret
loop
fiaddl
jo
lcall
add
adc
cmp
pushl
cmp
stc
push
cli
jno
sbb
pop
xchg
mov
mov
adc
sbb
xchg
inc
xor
cld
cmp
cmp
mov
clc
xor
out
add
add
lock
jle
popw
jo
jo
aam
idivb
loopne
int3
add
sbb
aam
xor
ret
dec
js
inc
add
adc
enter
xchg
sub
shl
xchg
mov
fwait
lock
andb
add
pop
in
cld
add
jne
jb
pushl
roll
lcall
sbb
sub
sbb
rolb
push
sub
sub
shlb
dec
cli
dec
mov
leave
loop
divl
in
hlt
sub
test
or
jmp
dec
inc
mov
cli
andb
adc
push
xchg
out
cmpsl
push
push
lods
notl
fbstp
rolb
adc
pusha
test
pop
adc
pop
pusha
jp
add
decb
push
testb
ds
std
aad
in
loop
mov
rcr
mov
or
ret
add
sbb
shll
in
repz
jecxz
std
sub
add
adc
mov
adc
or
sbb
dec
inc
test
movsb
push
and
cli
out
fldl
and
adc
mov
clc
pop
fnstsw
push
les
inc
in
std
lea
jl
xor
pushf
cmp
sub
add
sub
out
adc
add
xchg
fcomp
adc
jge
or
cmp
repz
out
add
cmp
cmpsb
in
sbbl
cli
xor
pop
add
pop
fadds
pusha
test
jecxz
das
push
into
xchg
cmp
dec
mov
push
sub
jle
daa
lock
lcall
sbb
inc
mov
xchg
stos
adc
push
push
lea
push
push
hlt
xor
xchg
dec
gs
rcrl
mov
add
add
pusha
or
jge
les
int
es
add
ss
out
adc
lods
jne
mov
sbb
in
cld
add
jecxz
adc
fsubr
aas
push
repz
add
dec
inc
add
leave
ja
add
ss
sub
dec
rorb
mov
sbb
jbe
add
fs
sbb
inc
or
arpl
clc
pop
add
add
and
add
loope
xchg
adc
sub
xor
jg
decb
daa
add
fildll
pop
jge
xlat
fisttpll
mov
loope
push
adcl
out
jne
mov
ret
lock
pop
or
movb
lock
testb
jl
in
lods
out
sub
sbb
cmp
rcr
adc
adc
or
sbb
sub
mov
dec
ljmp
daa
xor
fistl
jns
dec
call
xor
or
mov
sbb
ss
add
jbe
shlb
jp
cmp
adc
sahf
hlt
scas
and
scas
sbb
test
stos
add
ret
mov
clc
dec
push
insb
mov
mov
nop
clc
mov
shlb
adc
xor
hlt
hlt
pop
sub
pop
test
lods
aam
add
xlat
icebp
sub
nop
dec
jae
and
inc
ja
sbb
daa
add
ja
adc
jle
cs
fs
enter
mov
sub
ja
ds
push
fildll
adc
mov
sub
int3
pop
lea
pop
add
loopne
aaa
aad
icebp
hlt
out
into
inc
test
push
dec
jo
sbb
insb
add
insb
cmp
inc
lods
xchg
inc
mov
lock
scas
or
into
out
imul
push
out
jecxz
pop
ret
or
movsb
jg
sub
sahf
rclb
cmp
fcmovnb
je
xor
fmull
outsb
inc
mov
push
push
inc
addb
sbb
ret
icebp
or
adc
mov
xor
outsb
jb
lds
mov
jp
sbb
loopne
push
and
lock
add
jle
lock
cli
dec
mov
dec
inc
adc
sub
and
cmp
icebp
pop
mov
fs
push
adc
cli
bnd
add
inc
scas
jle
addr16
mov
push
mov
inc
and
repz
sbb
mov
inc
loop
adc
xor
push
sub
add
lret
lods
f2xm1
loop
adc
inc
outsl
push
adc
sub
adc
sti
dec
orb
sbb
sahf
and
mov
shr
pop
mov
int
cmp
pop
jbe
adc
leave
cmp
call
and
ljmp
cli
addl
push
mov
push
adc
and
xor
rcl
xor
sahf
mov
movsl
inc
arpl
ret
aam
push
fpatan
dec
sbb
push
in
clc
pop
or
pushf
call
sbb
imul
divb
push
push
push
xor
jmp
dec
sub
or
cmp
shr
dec
clc
adc
cmp
push
jecxz
out
lock
sbbl
cmp
clc
jno
orb
lods
fimull
cld
call
add
and
and
and
lea
sbb
inc
adc
cs
jo
mov
jecxz
mov
dec
xchg
sub
mov
adcb
roll
adc
inc
mov
mov
aaa
clc
aas
or
mov
mov
cmpsb
loopne
or
xor
daa
in
cmp
mov
sbb
or
out
cli
xor
lods
inc
cmp
leave
ret
add
dec
push
imull
andb
jg
ret
push
sbb
inc
push
add
in
or
adc
push
lods
ds
dec
icebp
loopne
js
dec
cmp
add
and
mov
rclb
lea
repz
out
sbb
sub
jle
out
fincstp
fsts
dec
xor
dec
ret
je
adc
jnp
and
ja
scas
xor
enter
inc
leave
sbb
cmpl
stc
das
dec
nop
push
add
add
lods
test
pushl
leave
and
and
not
sub
cmp
outsl
sbb
orb
hlt
lea
mov
adc
loopne
in
mov
add
sbb
mov
test
and
enter
xchg
xchg
cmpsb
push
sbb
ret
or
pop
inc
jo
sarb
inc
nop
add
sbb
jb
movsl
loope
jp
rolb
xchg
sbbb
clc
adc
sbb
adc
inc
fcompl
jbe
pop
jbe
push
xchg
cmp
add
ret
push
sbb
add
add
jge
orb
loopne
and
decl
add
adc
push
adc
enter
adc
add
loopne
test
iret
scas
mov
sarl
xchg
lods
repz
mov
mov
mov
push
push
mov
scas
dec
add
clc
filds
mov
roll
xchg
and
leave
inc
cld
cmc
push
push
push
cli
in
xchg
inc
pop
adc
mov
push
shl
dec
test
dec
mov
das
rolb
adc
ret
loope
int3
mov
pushl
sarb
add
push
enter
out
jecxz
xchg
push
or
out
dec
loopne
mov
ljmp
add
lock
jl
inc
shl
andl
adc
mov
std
rsm
ss
and
lock
aad
adc
je
das
mov
and
sub
fs
or
aam
cmpsl
push
iret
ret
xor
stc
test
insl
jmp
pop
shrb
fld
fisubs
pop
pushfw
or
dec
xchg
sti
inc
push
retw
xor
add
lods
testb
push
jbe
inc
add
xor
xor
inc
loopne
fwait
mov
rolb
add
jge
rorl
ret
mov
sbb
fisttpl
cmpsl
sahf
hlt
or
pusha
pusha
sub
loop
pop
push
inc
sbb
ds
add
or
jmp
mov
popf
xor
mov
push
sbb
mov
mov
jo
mov
fwait
add
or
mov
fs
add
scas
ljmp
sahf
dec
lret
xchg
js
jle
adc
jge
clc
rcrb
xchg
mov
adc
fisubrs
daa
inc
dec
pop
dec
shrb
adc
adc
shlb
adc
fildll
push
inc
push
cmp
bound
and
addb
add
adc
dec
daa
dec
fsubr
mov
inc
mov
pop
push
inc
pop
rolb
sbb
pop
xor
les
ja
es
enter
ret
dec
push
cs
cmp
lock
cmpsl
push
pop
loopne
pop
inc
jg
shrb
movl
dec
ret
dec
popf
mov
xor
faddl
sarb
movsb
mov
add
lahf
sbb
bound
push
xor
or
insb
jno
addr16
addb
bnd
dec
mov
jp
xor
inc
push
adc
ds
add
scas
cmp
and
outsb
aam
add
cld
push
pop
in
mov
les
jmp
cmp
sbb
push
dec
add
sbb
loope
mov
mov
adc
add
or
loopne
mov
mov
sbb
and
add
mov
lock
and
adc
xchg
ljmp
mov
imul
mov
or
movsl
push
aaa
sbb
or
push
push
call
dec
bswap
inc
scas
gs
rolb
sub
or
xchg
test
cmp
cmp
pop
aas
or
add
push
stc
testb
push
out
jle
fincstp
and
pop
push
rol
test
add
dec
sub
xor
jb
jb
jmp
clc
xor
loopne
rorb
or
push
clc
mov
mov
bound
outsb
xchg
js
push
jnp
stos
movsl
and
mov
push
cmpsl
dec
scas
dec
nop
xchg
or
inc
sbb
stos
adc
adc
pop
add
jb
fstpl
pop
sub
fmull
sbb
fmull
xor
jg
mov
out
addr16
stos
xor
jno
pop
jmp
jp
cmp
sti
sub
cld
or
mov
pop
nop
insb
fsubs
jne
ds
pop
ret
sbb
sub
jne
inc
jecxz
pusha
shrl
add
sub
inc
jnp
fstpl
jl
dec
fmull
ret
sub
ds
and
dec
xchg
pusha
movsl
lock
jnp
ja
adc
sbb
add
mov
movsl
out
rcll
jmp
cmp
inc
loop
lock
mov
push
add
clc
mov
sub
cli
jmp
addr16
jb
int3
inc
jecxz
adc
test
jb
addl
mov
add
mov
arpl
mov
mov
sub
and
subb
inc
push
mov
lea
or
loope
loope
or
ret
rclb
or
sbb
and
daa
pop
mov
ljmp
idiv
and
scas
jmp
push
cwtl
xor
in
mov
bound
scas
icebp
mov
movsl
inc
adc
dec
in
add
cmpsl
xchg
lcall
std
mov
and
dec
xlat
or
add
jecxz
pop
aaa
fsubs
xlat
xor
movsb
dec
lret
xchg
push
adc
sbb
mov
push
sbb
stos
clc
mov
cltd
mov
sub
push
sbb
stos
dec
out
loopne
mov
iret
mov
in
add
lods
sbb
pop
jne
add
push
adc
push
lock
repz
loopne
sbb
inc
test
and
cmpsb
mov
lret
fptan
int
jno
jnp
inc
or
jmp
jp
lock
add
inc
lret
mov
push
xchg
rcll
lock
mov
ret
lea
xor
scas
pop
pop
lods
mov
dec
xchg
fsubs
andl
fstps
or
mov
out
pop
test
mov
mov
mov
pop
or
cmp
pop
cmp
or
and
nop
sbb
aad
fiaddl
fisubl
push
xchg
icebp
data16
or
mov
loopne
lock
mov
fisubs
mov
inc
out
clc
lahf
jge
sbb
std
jmp
inc
shlb
call
outsb
test
sub
scas
push
xchg
lds
sub
inc
cld
pushl
dec
and
jmp
mov
and
or
cmpsb
pop
adc
ret
push
decb
dec
xchg
outsl
mov
mov
jecxz
bound
sbb
or
and
addb
jmp
addr16
xor
xchg
add
mov
sahf
out
fwait
pusha
and
ds
dec
icebp
cwtl
sbb
cmp
testl
add
loop
xchg
js
push
insb
mov
shrl
add
js
lock
sbb
mov
ja
daa
mov
jo
add
das
aam
scas
test
pop
jp
repz
cld
xchg
mov
leave
je
inc
nop
and
push
sbb
push
test
inc
fsubrs
hlt
xor
pop
test
ret
loopne
mov
mov
xlat
add
lock
push
lea
push
call
mov
xchg
jne
dec
xor
jo
sub
int
push
or
and
cli
xor
out
cld
push
jo
les
ja
test
es
fsubrl
xchg
lods
enter
shll
pop
je
pop
cmp
xor
nop
jne
dec
and
jbe
inc
lcall
popa
xlat
xor
popa
dec
adc
rolb
jns
or
cmpsb
icebp
aad
inc
add
sub
add
adc
jl
movsb
rorl
xchg
add
pushf
lock
call
lods
jo,pt
pop
sbb
mov
and
testl
sbb
mov
out
movsb
mov
call
fadds
repnz
stc
lods
lock
dec
inc
popa
mov
jp
adc
and
popf
cmp
ja
scas
and
jno
ret
dec
fmuls
xchg
js
sti
cmp
loopne
repz
leave
jo
clc
xchg
ljmp
call
sahf
push
xor
dec
sub
fwait
in
lock
mov
sub
xor
js
lea
add
test
add
aam
lock
sub
mov
cmovp
loope
mov
mov
outsl
jo
cld
sbb
insl
jge
xor
jo
ret
mov
xor
je
pop
test
outsl
mov
ljmp
sub
hlt
shrb
pusha
in
pop
cld
push
data16
inc
pusha
pop
mov
pop
mov
xchg
les
enter
mov
aad
maskmovq
negl
fstpt
xor
imulb
ret
mov
jns
and
sub
pop
aam
or
push
xchg
add
jge
inc
scas
mov
rol
add
add
ds
add
test
jo
sbb
inc
ss
rol
or
mov
mov
add
dec
cmp
pop
mov
dec
rclb
jno
fsubrl
ljmp
rolb
dec
imul
mov
add
push
scas
hlt
lea
ss
dec
aam
je
mov
adc
dec
aaa
sub
js
jmp
notb
sahf
inc
popl
fsts
sub
xor
mov
es
inc
add
dec
into
jb
pop
pushw
nop
jmp
push
and
pop
ret
mov
mov
int
or
add
sub
aas
or
xchg
repnz
invd
test
adc
mov
mov
cmc
mov
xor
cli
cmp
andl
inc
ficomps
lock
into
jmp
arpl
push
pop
or
xor
out
adc
dec
mov
xor
cs
test
and
push
inc
nop
mov
addr16
pop
add
xchg
daa
pop
inc
cs
pop
xchg
js
adc
leave
mov
mov
fsubrs
in
rorb
or
fisttpll
clc
mov
fstpl
fdivl
sbb
and
fnstenv
fmuls
addl
popf
push
mov
pop
or
shrl
jle
push
add
rorl
pushf
push
adc
jnp
enter
sub
enter
dec
sbb
outsl
mov
cmp
test
loope
insl
mov
jne
push
cld
out
push
out
sbbb
and
inc
addr16
add
popa
dec
xlat
call
pop
push
adc
lret
cmp
sete
xlat
icebp
ds
out
aam
or
push
add
hlt
out
cs
jmp
and
lcall
outsl
inc
pop
cmpb
testb
sub
dec
push
sub
cmpsb
push
mov
stc
push
imul
fsubs
lods
push
movsb
fnstenv
pushf
mov
cltd
loopne
lods
ja
ret
jae
adc
aas
lock
rolb
inc
sub
sub
movsl
adc
pushf
adc
js
mov
cwtl
lahf
ret
clc
sbb
jmp
or
mov
adc
loopne
nop
add
sub
loopne
das
jbe
adc
or
je
sbb
hlt
mov
out
repz
jo
jo
scas
lods
sub
mov
mov
pop
jns
aaa
jbe
adc
lret
mov
jecxz
cmp
shlb
jb
pop
add
mov
aas
adc
leave
mov
mov
clc
cmp
xchg
pop
jae
lock
scas
shlb
shll
adc
sub
mov
fisubrl
popf
mov
dec
or
and
adc
push
pop
mov
sahf
shl
dec
or
and
out
sub
cmp
adc
shl
cli
cltd
xor
push
xchg
push
je
testb
mov
sbb
test
into
test
xor
jo
dec
jbe
add
daa
lods
inc
sbbl
fwait
mov
rcr
xchg
lcall
mov
add
add
out
setns
push
mov
add
jmp
jb
dec
sbb
inc
icebp
scas
popf
test
jecxz
mov
leave
adc
lds
aas
fcoml
iret
inc
outsb
jecxz
mov
sbb
inc
divb
dec
adc
sahf
pop
adc
or
pop
or
inc
dec
cmp
add
inc
rorl
add
popa
imul
jg
dec
inc
adc
ret
adc
imul
jecxz
sti
adc
or
push
mov
and
sbb
add
mov
add
jbe
pop
jp
out
and
into
sub
or
cmc
aam
dec
sub
mov
fs
jo
das
rclb
loope
or
test
pop
xchg
pop
dec
inc
mov
inc
add
mov
imul
ficomps
js
aam
aam
fimuls
mov
mov
push
les
pop
orb
cmpsl
mov
xor
incl
pop
enter
push
xchg
cmp
call
xor
arpl
rcll
mov
push
pop
sahf
jae
adc
les
movsl
jge
outsb
add
add
je
adc
or
sub
dec
pop
jbe
push
xchg
dec
jge
roll
xor
dec
push
xlat
or
xchg
or
adc
cmpsb
imul
mov
sbb
push
jne
je
sbb
fdivs
xchg
ret
xor
or
adc
ret
sub
dec
aaa
ss
push
leave
out
push
dec
cmpb
and
rcrb
and
aad
rclb
mov
mov
xor
mov
sarl
and
xchg
shrb
hlt
out
ss
clc
repz
and
or
jecxz
jmp
push
push
les
adc
lock
add
push
rclb
call
add
mov
test
and
jb
ffree
adc
jmp
mov
sub
pushf
out
sub
mov
mov
loope
lods
int3
sti
jle
mov
cld
push
dec
ds
and
sub
test
mov
adc
es
fcoml
mov
out
pop
in
adc
adc
out
mov
adc
push
push
rcl
inc
jmp
lods
jle
fstl
mov
iret
inc
sub
push
or
xor
icebp
xor
dec
clc
inc
out
cmp
mov
movsl
inc
lock
std
jb
lahf
xchg
test
mov
mov
hlt
sarl
sub
ret
pusha
subb
push
sbb
add
scas
mov
pop
dec
dec
lock
ret
sub
and
loop
int
test
push
int
out
pop
repnz
push
add
xchg
xchg
ss
xchg
ror
pop
test
mov
mov
outsl
fbstp
push
dec
cwtl
mov
ss
js
dec
movsl
aam
lret
xor
mov
outsb
std
xlat
fdivs
loope
dec
and
out
pop
insb
sbb
hlt
test
out
mov
adcb
loope
test
jb
pushf
mov
xchg
adc
aaa
mov
pop
xchg
cmp
loope
jp
pmaxsw
xchg
mov
push
inc
sbb
xchg
or
das
fimuls
outsb
es
sub
lcall
cmp
nop
inc
add
inc
xchg
ret
cs
dec
mov
lods
xchg
and
ja
es
icebp
cmpsl
filds
add
shl
push
push
add
in
movsl
adc
rcrl
xor
and
adc
sub
cmp
push
test
cmp
cltd
pop
sub
stc
dec
or
mov
repnz
mov
dec
adc
dec
imul
popf
in
int3
shlb
adc
dec
test
mov
out
test
pop
mov
ret
aad
sbb
xchg
and
fbld
jmp
or
in
adc
stc
scas
sbb
loopne
loope
pop
mov
sbb
rorb
je
loope
loopne
out
push
xlat
pushf
sbb
imul
and
dec
out
stos
clc
push
test
inc
add
test
pop
aaa
sub
xchg
arpl
enter
and
xchg
mov
cmc
sbb
push
and
inc
adc
fsubrl
daa
sbb
mov
inc
xchg
cwtd
ret
or
add
pop
test
xlat
int
jbe
dec
sbb
out
adc
adc
inc
orb
xchg
es
test
jmp
adc
push
stos
insl
cld
xchg
jae
cli
cmpsb
xchg
fdivrs
sub
pop
sub
test
jmp
fs
cwtl
fiadds
inc
call
jecxz
sbb
call
pusha
inc
call
adc
ret
shlb
or
adc
jnp
lock
xor
lcall
lock
xchg
xor
out
icebp
andb
jbe
or
jo
incl
mov
push
xchg
xchg
mov
shlb
test
arpl
or
cmp
int
pop
pop
rcr
ja
ss
fsub
add
xor
cmp
gs
pop
in
sbb
gs
idivb
mov
test
and
cmp
mov
into
and
jge
bound
jo
cmpb
sub
push
push
or
sahf
cmp
mov
sti
enter
push
or
iret
inc
push
stc
push
pop
outsb
jnp
jmp
push
adc
adc
icebp
or
jns,pn
or
xchg
cwtl
enter
out
jmp
rorb
jle
mov
gs
mov
add
add
jmp
jae
mov
stos
mov
ror
xchg
rcrb
scas
push
les
cld
lods
out
sbb
inc
and
adc
xor
in
cltd
pop
popa
subl
push
lock
mov
adc
pop
mov
jno
mov
or
push
mov
loop
cli
cs
cmp
push
and
loop
ret
outsl
flds
mov
pop
sub
fidivrs
pop
cmp
and
add
rorb
fadds
int
aaa
mov
outsb
push
sbb
in
and
cmp
sub
mov
cmp
into
jo
adcl
push
addr16
scas
add
and
add
popl
jecxz
xchg
call
std
xor
cmpsl
std
sbb
pop
mov
cli
sub
in
or
outsb
xchg
leave
or
mov
mov
jl
push
test
ficomps
adc
push
or
mov
sbb
cmc
push
pop
mov
jne
je
add
sub
pop
loop
shrb
adc
out
psubsw
jbe
cmp
aam
js
sub
in
mov
fld1
sbb
inc
xchg
sub
add
sbb
cmp
inc
jmp
movsl
jbe
aad
int3
and
and
imul
shr
xlat
cmp
adc
push
clc
lcall
push
mov
test
fcomps
cmp
jb
add
ja
outsl
jmp
icebp
adc
pop
clc
dec
sbb
scas
xchg
xor
pusha
pop
add
mov
test
sbbb
xchg
sti
sti
roll
mov
xlat
inc
stos
cli
call
adc
cld
rcll
add
mov
adc
aaa
or
je
mov
push
loop
aam
add
rclb
mov
mov
pop
adcl
sub
addr16
loop
pusha
pop
and
shl
sahf
sbb
jp
xor
xor
cld
inc
mov
pop
jp
stos
test
xor
inc
lods
adc
pop
insl
jl
lahf
mov
inc
inc
je
sbb
and
fildll
fistps
push
and
push
add
cltd
xor
push
roll
lea
push
test
inc
xor
bnd
xlat
fadd
pop
push
ret
mov
push
daa
mov
loopne
add
push
xor
loop
push
out
and
mov
subl
ret
fbld
inc
cwtl
mov
sub
int3
pop
add
loope
addb
push
stos
jnp
sub
lods
fistpl
mov
mov
movsl
mulps
loope
jg
js
push
xchg
mov
jmp
lods
rolb
in
ss
arpl
pusha
push
xchg
push
dec
sbb
test
pop
mov
fcmovnb
pop
roll
icebp
daa
arpl
jno
xor
xor
mov
sbb
add
pop
psubsb
and
dec
adc
sbb
jecxz
mov
xor
and
imul
or
inc
xlat
jle
cmpsl
pop
mov
dec
inc
out
xchg
mov
pop
xor
lea
sbb
fwait
clc
sbb
in
sub
xchg
fisubs
out
ret
out
sti
shlb
outsb
inc
pusha
lcall
insl
outsl
fwait
mov
or
sbb
and
xlat
add
popa
in
add
loopne
xchg
push
ret
adc
les
adc
addb
sbb
cmpl
test
call
popl
pop
shrl
mov
push
jl
das
lock
sbb
stos
sub
pop
mov
cmp
mov
inc
test
jl
ljmp
repz
mov
popf
lock
in
push
mov
fcomps
xor
fadds
add
addl
ljmp
pop
lock
cmp
jl
mov
orl
xchg
mov
aad
or
addl
testb
adc
ja
sub
adc
out
imul
cld
stc
cmp
nop
lret
outsb
add
repnz
movsb
and
push
rorb
les
icebp
out
ret
jno
adc
inc
jns
fisubs
rolb
scas
mov
je
cmp
or
adc
loopne
in
jnp
and
xchg
mov
aaa
lea
push
sbb
xbegin
push
es
shrd
std
jg
cmp
cltd
cli
jo
fldl
or
xchg
inc
lock
cmp
aaa
les
inc
cltd
mov
pop
pop
subl
inc
adc
add
inc
adc
sbb
bnd
sub
jbe
xchg
and
loop
loop
pop
ljmp
sub
pop
inc
and
cmpsl
lods
cmp
or
decb
add
pusha
adcb
sub
adc
mov
test
add
leave
into
adc
and
jnp
loope
inc
xor
call
pushf
sbb
push
inc
fsts
add
cmp
lods
push
mov
add
and
jl
ss
inc
mov
adc
add
test
xorb
push
push
enter
mov
add
mov
ljmp
std
incl
add
xor
clc
push
jne
xor
inc
jmp
or
ret
cmp
jo
pop
xchg
rclb
xor
iret
aam
jg
push
sub
popa
and
ja
adc
imul
xchg
jecxz
push
ret
and
mov
jmp
sbb
inc
fadd
pop
pusha
mov
jnp
pusha
jecxz
sub
push
adc
rolb
rcl
jmp
mov
testb
and
sbb
ljmp
fidivrl
nop
xor
and
xchg
xchg
cltd
xchg
xchg
inc
mov
rcr
jo
clc
hlt
or
xor
add
push
push
je
add
in
lea
jbe
fstpt
test
xor
mov
add
enter
or
sbb
pop
xor
add
adc
xchg
jnp
mov
add
cmp
nop
rol
sbbb
push
inc
cmp
sub
enter
pop
pop
rclb
inc
push
jmp
loope
and
aas
ret
lahf
cltd
and
mov
test
and
pop
inc
sub
imul
hlt
adc
jecxz
and
imul
dec
sarb
push
push
out
xor
les
dec
insl
decb
adc
cs
iret
cmp
loopne
inc
stos
sbb
xchg
aam
add
fcmovbe
or
idivb
in
out
adc
cmc
or
lock
sbb
xchg
and
ret
cmp
mov
sti
cmc
or
addr16
test
pop
xchg
aad
dec
or
lahf
test
push
xor
lock
adc
adc
in
mov
in
cli
int
jmp
jecxz
sub
repz
mov
push
push
fnstsw
stc
xchg
lock
and
fmul
call
lret
mov
adc
xor
adc
popaw
pop
aad
push
mov
pop
sbb
adc
test
xorl
and
or
adc
test
sub
cmpsb
inc
inc
mov
jmp
dec
jecxz
sub
rclb
inc
pop
add
mov
push
add
add
jecxz
icebp
push
pop
adc
sbb
sbb
cld
push
js
push
jmp
aam
mov
inc
das
mov
mov
add
add
xor
xorl
das
loopne
push
inc
dec
sbb
push
outsb
loop
or
mov
xor
mov
outsb
push
sti
aaa
pop
fisubrs
xchg
lods
rorb
loop
inc
jmp
push
dec
movsl
add
fisttps
movsl
mov
add
test
dec
outsl
test
sbb
inc
add
lds
movsb
cmp
leave
add
sbb
aas
test
xchg
sub
je
loopne
push
inc
sti
pop
addb
mov
bound
ret
in
outsl
jl
xor
and
clc
dec
xor
in
stc
ret
adc
fsts
mov
cmp
fdiv
adc
mov
jecxz
pop
and
add
jmp
negl
test
adc
leave
fisubrl
in
outsb
hlt
and
fcoms
jge
mov
cmp
mov
add
rcrb
lea
push
adcb
movsl
ja
inc
jp
mov
clc
out
dec
dec
nop
push
add
in
rclb
repz
and
sub
jns
das
mov
aad
insl
jbe
push
mov
decb
xchg
mov
pop
pop
fwait
call
xchg
mov
addr16
mov
jecxz
xor
mov
sahf
jg
or
lods
add
add
add
enter
in
pop
fwait
nop
sub
mov
dec
mov
xor
mov
cs
xchg
out
or
mov
aam
repnz
jo
push
add
lret
jl
out
inc
sbb
jg
dec
rcll
or
add
addb
cmpsl
aas
sub
repnz
and
gs
ficomps
inc
rorb
dec
sub
sbb
lock
mulb
inc
or
inc
inc
sub
jo
mov
cli
mov
sub
jns
hlt
ret
or
and
sub
inc
adcb
jne
bound
xor
push
jo
stos
rclb
xorb
nop
pusha
and
lock
add
add
sahf
and
das
shlb
les
add
mov
adc
insb
jg
inc
inc
insb
jb
fwait
cmp
out
std
psubb
cmpsb
test
jmp
ss
ljmp
sbb
adc
mov
testb
hlt
cmp
adc
inc
clc
cmp
jmp
gs
ja
fprem
sahf
repz
call
and
test
je
inc
mov
adc
call
dec
lcall
jmp
or
dec
shrl
xor
cmp
fcos
in
fnsave
fistpll
clc
aaa
cld
mov
call
inc
jmp
cld
mov
fisubrs
cmp
out
or
repnz
push
movsb
push
movsl
mov
loope
mov
and
lods
and
insb
pop
pop
dec
dec
sbb
adc
push
paddq
and
push
movsl
mov
push
cs
and
cmp
xchg
fwait
clc
inc
adc
int3
jnp
fmul
loopne
xchg
ljmp
dec
mov
stos
inc
cmp
jl
ja
sbb
cli
loope
sbb
js
insb
test
pop
sub
jae
inc
fcomps
into
pop
mov
cld
faddl
push
or
fcoml
jnp
xchg
pop
sahf
adc
sub
popf
nop
fcmovne
in
ret
mov
adc
lock
push
xabort
fadds
jl
mov
xor
mov
or
rcrb
addb
push
data16
adcb
iret
loope
or
hlt
lahf
xchg
or
sbbb
xor
xchg
loopne
dec
pop
cmp
dec
sarb
and
sub
out
subl
fldenv
dec
add
or
fs
in
sbb
jle
hlt
or
js
mov
push
mov
aaa
mov
loopne
aaa
js
mov
insb
lahf
jp
fistl
into
or
neg
addr16
lock
loope
pusha
dec
cld
pop
dec
push
addl
mov
xlat
pop
jmp
stos
cmp
sbb
es
shll
je
xor
jo
call
clc
push
dec
xor
mov
xchg
mov
pop
inc
popa
popa
ret
dec
pusha
mov
jno
enter
stos
ja
push
mov
repz
rol
mov
push
pop
lods
xorl
jl
insl
mov
jne
lea
mov
push
gs
cld
addl
and
jg
test
pop
stos
sbb
lcall
les
je
xchg
add
fiadds
adc
es
jb
test
push
push
mov
cmp
fldl
rol
sbb
lock
jne
xlat
mov
loope
or
insb
stos
rclb
das
mov
xchg
add
mov
mov
mov
sub
gs
add
push
adc
lcall
fsubp
push
fs
mov
add
dec
clc
add
adc
addb
inc
sti
dec
cld
cld
jle
out
scas
mov
add
cmp
ficomps
sub
sbb
adc
rol
and
cmp
jno
push
insb
mov
movsl
lret
cmp
dec
cwtl
jns
sub
dec
xor
add
xchg
ror
or
mov
or
or
scas
xor
rcrl
sysenter
test
add
subb
jecxz
out
mov
inc
lcall
xor
xor
imul
mov
and
stos
subl
call
sarl
mov
nop
xchg
xlat
les
ret
xor
jae
sbb
ss
leave
or
fimuls
pop
cmpsl
div
add
jbe
js
out
dec
or
push
jl
adc
pop
pop
js
xchg
clc
cmp
mov
push
add
mov
imul
dec
pop
push
sbb
mul
lcall
popa
loope
scas
cld
inc
sbb
in
cmpl
mov
aas
inc
popa
das
add
in
repnz
cmpb
push
sub
int
add
inc
mov
adc
ror
shl
test
sti
mov
and
mov
cli
push
mov
out
loope
pop
mov
mov
push
cwtl
mov
mov
push
ljmp
icebp
cld
jo
andb
or
sub
push
rolb
loope
adc
je
addb
add
cmp
sub
mov
xor
lock
inc
sub
rol
inc
jl
mov
sahf
mov
enter
fsubrs
aam
addr16
xor
shl
sbb
mov
mov
sbb
inc
pop
out
fdiv
cmp
and
ljmp
insb
xchg
fldl
push
dec
xchg
pop
mov
jge
jnp
inc
cmp
add
das
sbb
in
das
icebp
andl
or
sbb
mov
xchg
out
shl
push
or
pop
add
dec
not
add
in
pop
xchg
faddl
mov
cmp
popa
jl
xchg
adc
push
ret
mov
xchg
dec
in
mov
hlt
mov
cmpsl
cmpsb
fldenv
and
mov
shrl
and
call
mov
inc
add
xchg
gs
inc
shlb
das
imul
push
loopne
add
mov
loope,pn
adc
push
int
inc
loop
fucomi
lahf
jl
roll
scas
ss
mov
push
stos
add
and
adc
xchg
lret
xchg
cltd
loop
add
cmpb
hlt
sub
cmp
imul
jno
xchg
jge
ret
inc
mov
movsl
push
repnz
pop
dec
dec
mov
lock
and
add
test
das
push
adc
mov
mov
xor
insl
inc
mov
pop
out
xor
push
call
fcompl
pop
jle
pop
push
jno
pusha
adcb
inc
adc
in
jnp
inc
outsl
test
out
mov
negl
cld
xor
sti
fidivs
cld
aad
mov
js
sub
mov
sbb
jge
addb
mov
cltd
sbb
push
ret
push
push
jl
call
out
je
mov
xor
pusha
out
mov
cmp
jp
insb
mull
rclb
dec
mov
push
jmp
imul
lods
inc
xor
repnz
sub
add
int3
jecxz
stos
inc
cwtl
inc
ret
rorb
out
or
loopne
mov
inc
pop
jmp
pop
insb
movl
loope
icebp
add
sub
lea
and
arpl
cmp
cmp
inc
cli
out
outsl
jmp
divl
push
push
lea
mov
adc
mov
jae
pop
add
bound
inc
sbb
pusha
sub
dec
push
adc
rcrb
mov
call
inc
insl
orl
mov
popa
div
xchg
add
inc
pop
lock
push
cmpsb
leave
insl
add
jmp
add
sub
mov
cld
les
es
adc
inc
and
mov
sub
mov
pop
xor
test
mov
movsb
jge
rcrb
sub
nop
push
andl
pusha
into
adc
sub
rolb
push
jecxz
rclb
andb
outsl
or
xor
mov
loopne
out
call
gs
roll
shl
cmp
sub
jno
rcrl
and
jnp
add
lock
sub
rol
lret
decl
fists
add
iret
leave
ljmp
mov
xchg
inc
ret
sub
movb
add
lcall
sbb
call
add
fxtract
lock
jmp
add
insl
pop
test
mov
lret
push
xor
mov
negl
xchg
lock
push
scas
pop
cwtl
jmp
les
mov
stos
orb
add
add
ret
push
repnz
push
movsl
movsb
mov
and
movsb
sbb
icebp
mov
or
adc
sbb
pop
loopne
rolb
jb
cmp
or
jnp
mov
fwait
or
hlt
and
pop
rolb
dec
add
and
call
out
gs
jg
insb
aad
mov
fwait
orb
pop
inc
clc
cmc
fnstsw
pop
adc
and
int3
inc
inc
jo
outsl
test
or
jmp
jbe
clc
or
aam
add
subb
out
jecxz
or
sbb
push
aaa
or
and
inc
mov
push
pop
jecxz
in
mov
js
xor
insl
push
cmp
add
leave
sbb
insl
or
push
push
push
sub
xchg
imul
lods
fwait
in
mov
mov
incb
int
xorl
gs
cmpsl
test
dec
add
scas
ret
mov
outsb
mov
ss
testb
xchg
push
sub
shlb
adc
sti
mov
int3
gs
xor
inc
pop
cmp
pop
insb
out
cs
adcl
add
pop
pusha
xchg
pop
rcrl
loope
repnz
add
stos
stos
int3
push
stos
mov
addr16
orb
or
add
jle
lahf
sbb
shrb
pop
jmp
or
and
ret
fs
inc
add
lcall
push
fadds
xchg
sub
sbb
push
push
push
add
inc
cmpsb
cld
adc
aam
sub
push
lahf
fcoml
icebp
lea
mov
push
sahf
lcall
dec
push
push
mov
movsb
push
fisttpll
mov
inc
cmp
in
mov
cmc
add
in
pusha
lock
mov
hlt
loop
fadd
shrl
outsl
clc
add
fninit
xchg
or
sbb
in
frstor
lea
les
call
rcr
dec
dec
stos
jo
jmp
dec
shlb
ret
cmp
ret
imul
push
jb
add
add
adc
adc
add
push
pop
inc
dec
in
jp
cs
push
loopne
test
mov
out
adc
lahf
xor
push
lahf
icebp
cmpsb
mov
mov
int3
stos
inc
and
pop
jbe
sub
xor
or
sbb
inc
test
loop
mov
mov
adc
sbb
mov
add
sub
sahf
and
rcrl
js
jns
xlat
mov
add
sub
ja
inc
loopne
outsb
stc
dec
adc
jo
pop
sub
sbb
adc
mov
cmp
mov
jae
adc
add
or
cmpsl
mov
cli
pop
cmc
iret
lock
adc
je
add
add
rcl
add
inc
ds
nop
loopne
or
mov
mov
cpuid
out
xchg
pusha
loopne
xchg
imul
adc
cld
xor
shr
mov
pusha
xor
inc
dec
add
lret
jb
jmp
hlt
adc
dec
xor
daa
mov
pushf
push
ds
test
xor
loop
sub
rcll
xor
sbb
sbb
pusha
fs
test
add
add
sub
xor
shl
push
scas
mov
sub
sub
cli
add
pop
push
and
xor
cld
mov
les
aaa
mov
push
out
xchg
adc
mov
or
hlt
ficoml
mov
insb
mov
aaa
into
mov
loopne
sub
mov
or
xchg
inc
and
mov
sub
push
movsl
pop
xchg
clc
add
in
add
push
and
add
lahf
push
add
push
adc
jno
push
dec
xor
push
in
ljmp
xchg
movsb
adc
outsl
aas
inc
clc
jmp
mov
mov
dec
cld
or
test
jae
adc
inc
repz
adc
add
push
or
fnstcw
ret
mov
jmp
jo
fildl
nop
jb
jecxz
cli
add
mov
push
lahf
xchg
rcrl
mov
aaa
insl
sub
mov
hlt
inc
lea
movsb
or
mov
or
jl
xchg
push
adc
dec
xchg
mov
add
add
std
outsb
es
cmp
ja
ja
add
sar
xchg
add
mov
mov
pop
jmp
test
cmp
sbb
dec
pop
clc
pusha
mov
push
fldt
or
rorb
addr16
dec
jbe
cld
push
arpl
shl
mov
stos
mov
sti
clc
cmp
cmp
xchg
jle
jo
jno
mov
popa
insl
jl
lret
xchg
imul
aas
mov
sub
inc
lods
test
xchg
jb
lods
jg
and
add
dec
lods
mov
popa
mov
pop
mov
enter
jmp
fmul
inc
jp
inc
and
add
sub
aam
lea
mov
inc
add
add
or
les
push
hlt
and
aas
cmp
movsb
call
lods
int3
pop
or
sbb
mov
cs
and
or
lock
or
imul
div
inc
imul
mov
repnz
call
insb
int3
xorb
sub
lea
mov
jmp
mov
and
popa
into
cmpsb
ja
subb
addl
not
mov
in
or
add
sub
push
popa
adc
shlb
adc
dec
adc
add
stos
or
sub
mov
pop
lods
xchg
clc
xor
cmp
subb
int3
pusha
mov
sub
sub
inc
and
xchg
outsl
or
int3
or
mov
dec
mov
add
stos
es
clc
mov
cmpsl
push
adc
daa
lock
mov
push
add
xchg
inc
loopne
cmp
dec
xor
rcrb
mov
push
fcoms
in
bound
pop
mov
icebp
inc
shlb
push
les
out
icebp
stc
pusha
jns
rorb
fisubs
fs
rolb
enter
sub
xchg
push
add
mov
cli
or
sbb
xlat
js
addl
jg
inc
cmp
dec
cmp
and
push
mov
test
or
lods
divl
hlt
pop
sub
pop
and
fisubs
xchg
add
or
ljmp
jb
add
icebp
and
negb
jg
inc
pushw
xor
aam
sub
movsl
sub
push
dec
sub
and
dec
int
and
adc
aam
and
add
add
cmp
pop
push
push
rol
cmp
push
cmp
data16
jne
xchg
pop
xchg
shll
xor
iret
adc
jle
in
decb
out
andb
sbb
fisubrl
fwait
sub
add
repnz
sbb
adc
cmp
enter
aam
pop
sbb
jns
adc
fstps
inc
mov
cmp
in
insb
ret
dec
testl
aaa
cmp
inc
fs
push
cmp
inc
rcrb
inc
mov
jl
into
xlat
rolb
clc
xchg
ss
xchg
int
iret
mov
push
sbb
mov
test
stos
lahf
xorb
les
mov
mov
mov
mov
add
adc
jp
adc
ret
dec
loope
jmp
jbe
mov
movsl
sub
fdiv
insl
mov
jbe
xor
inc
push
icebp
inc
shrl
pusha
mov
jmp
dec
or
sbb
imul
sbb
addb
sub
es
clc
mov
dec
nop
rol
adc
jno
mov
fisubl
dec
xchg
orb
inc
ret
ds
inc
add
fsubs
ret
shr
and
sub
loop
inc
sbb
lock
pop
mov
loopne
fists
inc
or
sbbl
insb
fnstcw
push
pop
sbb
or
xor
mov
sub
inc
imul
call
pusha
pop
rcrl
jno
clc
pop
ret
lods
ret
push
popa
out
ret
cmp
std
push
dec
add
pop
hlt
and
jno
and
nop
hlt
int3
push
fadd
mov
test
cmpsb
xor
push
jns
ret
retw
jb
and
push
enter
cmp
mov
and
fs
sub
inc
pop
popa
xchg
xor
enter
aad
cli
push
out
add
inc
test
sbb
sbbb
mov
or
cwtl
imul
fidivrl
mov
cmp
xadd
mov
pop
loope,pn
mov
fsubs
scas
sub
mov
xor
iret
sbb
add
mov
inc
mov
rolb
ss
int
idivl
xor
mov
or
aas
sbb
xor
aam
pop
lock
fwait
outsb
mov
adc
or
add
push
iret
push
in
mov
repz
add
sbb
push
inc
jp
fnstcw
es
add
shrb
lea
fmull
and
jl
addr16
in
outsl
lods
sub
dec
pop
mov
pop
add
sub
dec
fistpl
mov
dec
or
dec
shrb
pop
rorl
sbbl
jo
inc
add
js
or
pop
or
pusha
pop
jecxz
shrb
sub
mov
xchg
xchg
fmuls
dec
aas
or
xlat
cmp
jno
sub
cli
mov
xor
test
or
test
push
push
dec
mov
push
inc
mov
add
or
or
xor
insb
ret
jo
shlb
pop
push
mov
mov
jbe
pushf
ret
xor
pop
lock
out
stos
fs
mov
cmp
adc
xchg
fimuls
es
rorb
cmp
cmpl
orl
data16
loopne
push
mov
dec
or
mov
push
dec
fldcw
add
rorb
mov
mov
xchg
stc
lods
xor
test
outsb
and
cmpsl
mov
rcll
push
sub
je
jmp
cmc
loopne
jo
pop
mov
add
je
inc
jnp
faddl
mov
and
fsubrs
add
imul
inc
sub
dec
mov
xchg
aam
loop
loopne
adc
push
push
push
mov
or
jge
call
hlt
cmc
dec
ficompl
cmp
out
jo
xchg
mov
sub
xor
add
and
xor
xor
and
xchg
adc
std
rclb
xchg
mov
popa
dec
sarb
outsl
loopne
bound
adcb
inc
mov
ljmp
lods
or
and
jl
popf
cmpsl
push
and
xor
ret
xor
push
jo
lods
dec
ja
std
fisubrl
loope
or
enter
lea
mov
hlt
pop
bound
test
cmpsl
sbb
xor
xchg
aam
pop
sbb
and
addb
mov
call
in
bound
add
sbb
mov
rcl
out
rcrb
mov
push
test
cmp
out
jl
xchg
fnstenv
arpl
sbb
daa
pushl
push
loope
push
xchg
movsb
repnz
pushf
jmp
xchg
hlt
jl
sbb
mov
shll
addl
xor
or
xor
and
xor
mov
mov
cmp
and
adcl
out
maskmovq
inc
xchg
rorb
bound
sub
pop
cs
xchg
test
adc
fwait
decb
ljmp
pop
call
mov
add
and
inc
jns
adc
out
dec
cli
leave
inc
or
pop
add
fcmove
scas
add
add
adc
push
mov
sbb
jne
fisttpl
hlt
push
popf
test
xor
pusha
iret
mov
fildl
pop
test
hlt
mov
add
lret
orl
xor
xchg
mov
subl
aas
pop
add
loopne
add
push
dec
add
stc
mov
subb
inc
cmp
pop
fistl
add
sbb
add
call
or
mov
pop
push
ljmp
add
pop
cmc
inc
mov
int
rcrl
pop
sub
sbb
les
pop
pop
pop
cmpsb
flds
fidivl
std
push
test
or
ret
lds
loope
imul
pop
or
lds
and
pop
clc
pop
mov
mov
push
mov
inc
pop
imul
imul
sub
mov
xlat
xchg
xor
pop
mov
xchg
sbb
mov
adc
xor
jmp
mov
nop
inc
inc
mov
push
pop
cwtl
push
sub
ror
jmp
or
mov
sub
aam
fildl
sbb
sub
or
movd
pop
xor
adc
and
jecxz
xchg
add
loopne
xorb
pop
loopne
cld
jae
add
sti
or
test
adc
cltd
mov
call
mov
ret
lea
dec
adc
add
xor
shlb
jb
rcrb
push
sbb
bound
mov
and
inc
adcb
sbb
aas
jo
andl
addb
testl
rcrb
jno
lcall
pop
push
inc
mov
mov
dec
push
mov
mov
subb
push
ss
push
in
pop
movb
adc
pop
test
mov
ja
popf
sti
add
push
pushf
inc
loop
sbb
cld
aaa
pop
dec
lods
ss
sbb
mov
shlb
rcr
mov
sub
add
fisubrs
jge
in
xor
dec
or
dec
sub
mov
add
mov
xchg
mov
mov
adc
sbb
add
inc
cmp
mov
and
push
out
sbb
fmuls
and
jmp
cs
add
std
and
ja
add
cwtl
loop
add
push
test
xchg
ss
push
dec
mov
xchg
fidivrs
lret
sbb
add
mov
or
clc
push
xchg
in
pop
add
call
out
adcb
sarb
or
arpl
add
fwait
std
stos
clc
pop
push
je
adc
push
loope
sbb
mul
hlt
sbb
adc
fstps
mov
sbb
out
aaa
call
shlb
and
movsb
lods
mov
popa
add
push
js
push
add
pop
sbb
mov
cmp
fisubl
add
pusha
add
add
push
adcb
or
pop
cltd
mov
mov
imul
pusha
jo
jg
or
insb
add
pop
fnsave
add
push
push
loope
ss
cltd
movsl
lahf
cmp
cmpsl
push
aas
enter
cmp
and
push
fadd
push
out
hlt
sbb
mov
add
ss
lods
inc
add
popf
clc
daa
lcall
fst
xchg
or
xchg
fildll
mov
or
mov
cmp
movsl
dec
jae
fadds
pop
test
mov
push
mov
add
pop
or
or
inc
in
add
es
mov
inc
inc
adc
add
fsubl
ret
cmp
push
clc
fidivrs
sar
inc
fwait
and
sbb
clc
add
mov
push
lret
mov
or
xor
bound
xlat
scas
lds
push
call
jae
pop
xchg
sub
jmp
ss
movsb
add
insb
lahf
sbb
jb
xor
in
arpl
inc
xlat
loope
add
sub
add
jecxz
mov
mov
aam
lea
scas
and
repz
xor
or
inc
dec
adc
nop
sbb
dec
call
or
add
mov
out
lock
mov
or
mov
call
push
stc
sbb
push
in
pop
lods
and
sti
dec
push
add
push
lcall
xchg
movsb
mov
jmp
push
push
addr16
cld
inc
add
adc
add
mov
fldl
push
hlt
xchg
jo
sub
arpl
cmp
xor
std
dec
xor
mov
cmovle
xchg
fiadds
dec
jb
mov
or
jl
push
mov
lret
add
or
aaa
imul
or
pop
pop
lahf
out
inc
add
inc
sbb
call
pop
adc
sbb
or
inc
loope
test
cmc
pop
pop
cmp
cmp
add
cli
sub
jb
shl
in
ds
incl
stos
lock
add
adc
lods
mov
mov
repz
adc
and
xchg
adc
push
push
sub
and
mov
jge
jg
sbb
call
sbb
sub
int3
inc
pop
loope
xchg
cltd
jns
add
mov
out
inc
add
mov
mov
out
dec
lods
push
mov
pop
cmp
lret
push
hlt
pop
xchg
cld
fwait
push
add
add
sbb
adc
shrb
js
ja
mov
mov
mov
outsb
jo
adc
scas
sub
inc
lahf
push
icebp
ss
movsl
jecxz
std
insb
icebp
std
fisubrs
sub
movsb
rcll
mov
mov
or
and
aaa
sbb
int3
sbb
adc
xor
incw
jmp
inc
pop
lock
mov
inc
or
adc
cld
pop
adc
test
testl
cmpsl
stc
mov
inc
mov
push
ss
fmuls
push
sub
imul
sbb
jmp
shlb
int
xchg
orb
int
xor
test
lock
adc
pusha
inc
cmp
pop
jge
sub
lock
pusha
sub
add
and
xlat
leave
sbb
sbb
mov
dec
test
xor
mov
test
mov
cli
stos
imul
rcll
aam
inc
orl
push
ror
mov
jb
test
dec
add
jge
or
adc
test
cmp
add
xchg
cmpsl
jnp
xchg
repnz
or
shrl
xchg
sbb
xchg
sbb
cmp
enter
jg
ja
jge
sub
cmp
ficoml
call
fsubl
adc
push
imul
xor
or
lock
cmp
fwait
in
cmp
or
inc
dec
cmp
ljmp
xor
mov
xor
test
imul
dec
gs
pushf
sub
test
gs
mov
mov
call
fwait
jp
outsb
or
mov
adcb
adc
je
outsl
jae
or
stos
test
sbb
cmpsb
and
jns
test
ret
int3
fisubrl
jecxz
lahf
rorb
sub
test
adc
add
scas
mull
lcall
push
push
movsl
movsb
push
sahf
bound
dec
clc
pop
add
adc
mov
lcall
lock
xor
insb
dec
xchg
addb
and
std
dec
jmp
iret
or
adc
push
call
pop
mov
push
push
mov
popf
rcrl
xor
inc
leave
scas
roll
mov
and
outsl
loopne
add
ja
xor
mov
xor
pop
cli
ret
xor
pop
push
pop
mov
push
mov
add
clc
pusha
inc
xor
mov
jp
jb
or
add
js
pop
daa
mov
je
xor
xor
mov
adc
je
dec
add
mov
mov
adc
lret
xlat
clc
out
xchg
leave
and
clc
mov
or
push
aam
cmpsb
aaa
cs
addr16
mov
add
mov
push
mov
xchg
ret
jo
inc
adc
enter
ficoms
mov
popf
sbb
sub
test
mov
rcrl
dec
lret
nop
pop
add
clc
xchg
imul
dec
add
add
orb
rcrb
xor
push
fildl
stos
out
outsb
add
orb
test
xchg
pop
add
inc
adc
add
jecxz
ret
mov
cmp
int
add
and
or
push
jnp
ja
aad
add
jnp
xor
mov
xchg
jno
pop
call
rcr
lods
call
loop
jae
js
loope
loopne
push
jne
ja
sub
and
add
xchg
loop
cmovl
xchg
mov
or
call
mov
clc
adc
incl
sbb
xor
lock
jnp
and
jp
inc
sbb
mov
sub
and
out
inc
push
gs
adc
dec
stos
loop
ret
adc
out
mov
lea
push
das
push
push
push
inc
idiv
add
and
inc
stc
clc
adc
inc
dec
stc
pop
jle
shl
jg
cmp
jmp
popa
daa
out
sahf
sub
push
cmp
inc
and
das
xor
mov
ja
addr16
fstpl
xor
je
cltd
lds
aaa
mov
add
xor
js
fildll
daa
jmp
test
jne
aas
or
jmp
and
xchg
sti
xchg
hlt
mov
cltd
or
icebp
testb
mov
fidivl
sub
adc
leave
push
add
cmc
dec
adc
push
test
aas
mov
clc
adc
lea
push
call
imul
or
scas
fcmovbe
das
jmp
cmp
add
dec
pop
daa
and
addl
jge
jbe
ds
mov
or
pushf
ret
lock
lods
fmull
incl
adc
cmc
mov
mov
and
jo
xchg
xor
sbb
adc
pop
loop
loopne
or
sbb
xor
push
pushf
mov
mov
mov
ret
mov
cmc
cmpsl
pop
icebp
out
mov
rcl
sub
or
adc
ret
inc
pop
mov
xor
or
or
faddl
cli
and
ret
and
sbb
aas
xchg
sbb
jno
push
adc
mov
add
inc
ljmp
inc
and
adc
lods
pop
push
shll
cmp
push
mov
popa
lock
pop
enter
sbb
outsb
pop
push
decl
dec
fiadds
movl
mov
xchg
sub
xchg
push
adc
sub
lahf
fiaddl
adc
fs
jnp,pt
and
sbb
lods
addr16
sahf
xchg
leave
sub
adc
clc
lahf
aam
adc
jle
gs
push
sbb
push
pop
push
fcoms
pushf
nop
dec
add
cmpsl
jp
push
callw
cs
dec
addl
mov
add
cmp
push
idivb
mov
loope
add
fdivr
mov
jns
mov
add
sub
push
repnz
and
add
int3
cld
mov
ja
pop
jmp
fcoml
mov
sbb
push
sbb
xchg
iret
jmp
and
xchg
rol
addb
pusha
push
test
pop
xor
ror
inc
ror
aaa
adc
incb
jg
sbb
jecxz
dec
aam
stc
fiaddl
aam
clc
mov
jecxz
inc
fldt
adcl
push
xor
movsl
mov
add
xor
into
pop
shll
mov
inc
dec
cmp
inc
daa
test
enter
fdivrs
sub
add
inc
aas
dec
inc
addb
mov
fadds
cmp
cmp
push
insb
pop
ret
loopne
mov
arpl
cmpsl
add
adc
lds
inc
rorl
xchg
and
xchg
xor
fiadds
div
xchg
call
add
rcrb
cwtl
stos
nop
into
rcrb
sbb
cmp
or
rcrb
enter
pop
sbb
mov
and
ret
mov
gs
fcoms
xchg
cmpsl
dec
or
mov
mov
adc
lods
cmpsl
jmp
shlb
push
int3
loope
or
xor
jmp
adc
jecxz
pop
add
je
push
push
lds
or
xorl
mov
push
call
shrb
push
ret
arpl
js
push
inc
push
adc
fucom
or
fisttpll
push
xor
push
pop
out
call
sub
push
push
mov
sbb
dec
pop
mov
jl
add
sbb
aad
xor
in
loopne
mov
sub
data16
filds
inc
lods
xlat
lock
lret
clc
inc
rol
xchg
add
mov
add
sub
mov
push
jl
and
mov
mov
out
out
add
jmp
scas
or
rcl
mov
sarb
and
sub
dec
ljmp
mov
add
inc
xchg
fsqrt
dec
lods
lods
sub
imul
mov
cmp
xchg
jle
ljmp
addl
std
add
mov
cmpsl
mov
dec
loopne
sub
aam
fbld
add
pop
lea
adc
and
cmp
shlb
mov
sbb
fldt
popa
subl
loopne
in
sbb
pop
jg
pusha
xor
and
sub
lret
ret
mov
shll
loop
movsb
arpl
xchg
sbb
mov
sub
insl
clc
insl
xor
scas
test
in
lret
jl
mov
out
inc
adc
and
clc
mov
pop
pop
dec
clc
rolb
inc
andl
xchg
add
call
sbb
imul
add
int3
test
push
mov
or
xlat
jle
ret
lods
adc
pop
ss
adc
push
fdivs
xor
mov
pop
je
in
cmp
fmull
add
scas
ret
xor
dec
cmp
aas
fsub
cmp
les
test
and
and
movb
xchg
fbld
das
lock
test
cmpl
mov
sbb
rorl
nop
loopne
mov
arpl
push
ds
add
sub
pusha
ss
jne
xchg
inc
test
fisttpll
push
mov
ret
adc
push
add
xor
outsl
movsl
sbbb
pop
mov
push
adc
mov
pop
inc
mov
not
in
cmp
dec
xchg
xor
out
xor
lahf
adc
or
pop
in
movsl
test
scas
pop
popl
sub
lock
out
repz
ja
lcall
ret
sbb
inc
xor
lock
mov
cmp
sbb
shll
xchg
and
mov
inc
sbb
arpl
or
xor
dec
movsb
xchg
movsl
imul
call
andb
and
stos
dec
dec
js
ds
sbb
sbb
ret
sarl
jb
movl
or
clc
sbb
popf
test
rolb
les
insl
out
push
push
pop
call
dec
mov
nop
sarl
add
xchg
or
bound
roll
pop
dec
enter
clc
pop
cld
iret
test
adc
inc
add
add
adcl
sar
dec
adc
add
imul
imul
or
mov
std
fiaddl
lar
pushf
inc
es
aas
ljmp
add
imul
dec
inc
add
shl
hlt
add
mov
mov
xchg
sub
addr16
ss
insl
and
jl
jecxz
mov
int
adc
cld
adc
or
mov
inc
bound
loope
pusha
or
jmp
lock
inc
mov
xlat
or
push
adc
and
loope
add
test
cmp
sub
stos
fadds
adcl
or
les
jmp
rclb
or
arpl
push
cmp
pusha
movsb
shlb
aaa
dec
push
add
mov
push
adc
sub
or
adc
pop
int3
sub
add
sarb
ljmp
add
loope
push
fadds
mov
dec
push
subb
ss
aas
adc
jge
daa
sbb
test
rcr
in
int3
fwait
cmpsl
fadds
mov
test
clc
mov
jae
adc
add
jecxz
pop
sti
cwtl
pop
adcb
add
pushf
imul
mov
out
sub
mov
cmp
inc
mov
fisttpll
jecxz
push
push
mov
add
adc
push
loopne
xchg
mov
push
mov
cld
push
xor
pop
cmp
pop
sarb
or
ljmp
mov
and
addb
jmp
push
pop
fiadds
xchg
ret
or
jle
arpl
cmp
push
lods
adc
sahf
gs
or
or
pop
loop
idivb
cli
lds
mov
mov
mov
jae
xchg
fs
adc
sar
xchg
mov
loope
test
add
bound
add
sub
xchg
sub
rclb
fistps
andl
jl
lock
fiaddl
call
mov
subl
pop
jge
movups
rorl
pop
xchg
sarl
js
push
adc
sub
inc
mov
test
sub
mov
pop
std
mov
cmp
xchg
cld
nop
popf
inc
pushf
aad
ljmp
mov
xchg
test
push
fimuls
lahf
cs
mov
adc
ret
into
and
shll
xor
out
mov
pop
cmp
roll
or
nop
movsb
pop
pop
xor
nop
push
ret
adc
popf
add
or
xchg
xchg
pop
pop
pop
into
loop
dec
inc
in
and
xor
push
sub
mov
xchg
adc
in
loopne
cmp
or
inc
and
insb
cmp
or
jmp
sub
xor
adc
lret
or
cmp
or
mov
punpckldq
dec
dec
push
add
or
jb
pop
and
orl
or
jnp
hlt
cmp
add
mov
and
mov
and
xchg
popf
push
test
mov
sbbl
pop
pop
bound
inc
cmp
sbb
xor
cmp
push
inc
dec
mov
loope
and
jl
jmp
mov
adc
mov
jno
mov
js
ja
std
aas
rorb
push
sub
sbb
sub
or
les
jge,pn
addb
ds
add
lock
in
adc
and
sub
xor
xchg
imul
sbb
add
jg
add
or
imul
xor
lods
jg
sbb
inc
repz
movl
ret
mov
adc
orb
cld
movsb
cld
and
pop
test
dec
xchg
daa
shlb
add
sar
inc
mov
sbb
add
in
mov
ffreep
ficoms
push
add
addr16
xor
sarb
mov
add
pushw
dec
stos
ljmp
ds
lock
xor
clc
sbb
xchg
add
xor
cwtl
xchg
mov
xchg
pop
jl
inc
pop
lock
sub
mov
xorb
sbb
lret
jge
adc
in
ds
popf
outsl
loope
les
and
adc
incb
dec
add
test
sbb
pusha
dec
loopne
pop
inc
js
movb
dec
cltd
and
dec
jecxz
imul
leave
sub
sbb
fnsave
cmp
mov
inc
and
jge
xchg
rclb
inc
mov
shrb
ljmp
dec
sub
and
push
subl
fisubrl
and
or
dec
js
ljmp
ffree
pop
cmp
add
add
iret
xor
hlt
aam
sub
jnp
outsl
clc
loopne
mov
lods
aad
roll
mov
mov
pop
int
aad
aaa
mov
or
or
jbe
bound
xor
xor
dec
and
loope
sub
mov
test
in
sbb
loope
push
ljmp
je
and
add
dec
psadbw
add
jmp
and
and
into
rolb
cli
cld
sbb
cmp
inc
inc
cmp
mov
andl
xor
inc
adc
mov
sbb
mov
loopne
sub
and
out
aaa
out
loopne
movsl
xchg
scas
adc
add
popa
aaa
add
shl
xchg
jp
mov
mov
and
int
inc
push
and
leave
dec
test
in
pop
movsl
fistps
add
push
mov
or
fnsave
gs
mov
and
loope
mov
jbe
icebp
inc
inc
fnstsw
or
stos
clc
fwait
icebp
mov
inc
js
xor
or
mov
add
jmp
dec
mov
les
dec
les
popf
adc
mov
xorl
je
mov
mov
add
test
icebp
loope
add
dec
jmp
xchg
mov
hlt
add
and
sbb
or
imul
sbb
xchg
int3
push
pop
adc
inc
stos
test
adc
and
mov
addl
inc
in
aas
dec
fdiv
dec
cltd
jno
hlt
adc
sti
cmp
std
daa
jmp
mov
mov
nop
or
push
rolb
add
and
adc
mov
push
xor
faddl
shrl
adc
inc
scas
cli
xchg
hlt
xchg
test
and
jl,pn
sbb
test
pop
call
jne
mov
cmp
movsl
outsl
push
mov
pop
sub
adc
inc
mov
cltd
rorb
mov
push
dec
dec
mov
aam
cld
mov
inc
cmpsb
xchg
stc
cmp
sub
xchg
pop
add
push
sbb
pop
or
push
aam
sub
rolb
push
sbb
ret
xor
adc
mov
int
sub
jno
sbb
adc
movsl
pop
repz
fiaddl
adc
inc
or
or
rol
xchg
cmp
sar
sub
jle
cmp
push
movsl
push
cmpsb
jns
pop
cmpb
stos
jno
incl
lock
filds
imul
cmp
inc
mov
imul
cmc
imulb
in
adc
push
jle
sbb
sbb
cmp
mov
test
mov
adc
pusha
mov
mov
inc
cwtl
jecxz
insb
dec
and
adc
cmpps
cltd
sub
int
mov
loop
push
add
pop
and
lods
push
repz
add
sub
int
ret
cmp
inc
cmp
mov
push
sbb
int3
xchg
and
mov
add
cmp
add
sbb
insl
sbb
call
jecxz
out
inc
lea
lcall
add
stos
arpl
sub
lret
xchg
dec
jl
ret
insl
into
sbb
cmp
xor
and
ss
lods
mov
dec
bound
loope
std
sbb
xchg
and
popa
push
add
xorb
xor
loope
add
ja
pushf
adc
hlt
icebp
adc
and
adc
jle
dec
test
and
or
sbb
jp
ljmp
fwait
inc
arpl
out
jmp
in
sbb
ret
fdivrs
nop
jge
pusha
mov
pop
jle
lret
fcompl
test
cmp
sub
dec
mov
dec
cmpl
data16
into
shrb
sub
mov
sub
lock
or
sbb
jmp
pusha
xchg
adc
xor
push
xchg
subl
addb
jno
inc
and
gs
negb
in
fdiv
fcoms
ret
adc
lcall
lods
cmp
icebp
clc
popa
dec
cmpsw
pop
mov
and
enter
adc
or
pusha
loope
xchg
testb
test
dec
cltd
adc
pop
and
xchg
jmp
xchg
push
mov
call
nop
in
lock
pushw
mov
adc
or
jne
popa
imul
sbb
leave
inc
inc
popa
lds
std
les
adc
xchg
ret
sub
loopne
iret
nop
aam
hlt
or
lods
cmp
out
sbb
movsb
data16
insb
outsb
mov
push
call
inc
sahf
inc
add
out
xor
push
xchg
and
xor
pop
lahf
cmp
sti
sti
enter
icebp
mov
and
popa
xor
push
es
cmc
adcb
lahf
lds
jle
xor
sub
and
ds
adcb
adc
nop
pop
pop
pop
mov
test
adc
xlat
mov
mov
pop
add
xor
rcr
sub
mov
dec
add
pop
lods
xchg
mov
rcrl
rcl
or
adc
add
adc
xlat
divb
ljmp
adc
mov
les
xchg
bound
fs
adc
test
les
sahf
lret
mov
jbe
rol
aas
push
sub
pushw
add
rcrb
out
lahf
jecxz
gs
in
lods
add
push
and
adc
fwait
or
popa
jns
fimuls
dec
and
fsubl
outsb
dec
inc
xor
lock
xor
ret
inc
cmp
fwait
les
les
fsubl
inc
adc
push
and
jge
push
loope
push
insb
cs
mov
sub
sub
fs
fidivs
sbb
xchg
jg
in
xchg
lea
rep
mov
pop
repnz
nop
adc
pop
or
inc
xchg
lock
mov
add
inc
mov
mov
push
mov
push
inc
int3
mov
insl
movsb
movsl
xor
jp
add
pusha
mov
pop
sub
int
paddq
scas
leave
sti
int
mov
sbb
scas
fistps
mov
adc
inc
jmp
call
lock
add
and
push
testb
jge
jb
jecxz
loope
inc
in
xchg
orb
addb
jge
or
mov
sbb
xor
push
clc
std
and
inc
nop
inc
push
push
call
icebp
call
mov
aas
and
mov
mov
mov
int3
push
inc
xor
or
dec
and
pop
jp
jmp
popa
aad
dec
clc
outsl
loope
clc
jns
aam
mull
mov
outsl
xor
inc
ret
inc
int3
not
adc
jle
hlt
xor
aam
inc
ret
adc
int3
call
push
orl
mov
jp
inc
aas
mov
xchg
inc
ffree
and
sub
inc
cs
or
pop
and
fwait
rcrb
push
mov
and
test
sbb
add
mov
dec
or
roll
lahf
dec
int
dec
nop
push
popf
push
call
dec
sbb
xchg
sahf
cmp
pop
pop
pop
and
xor
and
lsl
adc
xchg
bound
push
arpl
pushf
aas
popf
lea
popa
jb
inc
add
mov
add
push
ja
push
and
arpl
in
mov
adc
enter
cld
les
xchg
or
je
lods
or
adc
js
or
or
dec
mov
jl
add
or
sub
ds
sub
cld
gs
out
add
rol
cwtl
mov
cltd
rcl
test
in
js
add
daa
es
fnstenv
pop
jle
cmc
mov
push
test
inc
in
lock
and
inc
loopne
lret
sbb
cmc
ja
jmp
push
imull
fwait
add
les
lcall
sub
incl
push
out
shll
in
push
faddl
aas
push
or
fcomi
push
add
mov
std
enter
out
aaa
js
sbb
adc
inc
loope
es
movsl
jbe
hlt
mov
adc
adc
daa
push
das
ds
cmpsl
outsl
imul
je
loopne
shlb
adc
js
and
testl
push
adc
imul
pop
mov
or
adc
lock
nop
inc
dec
bound
cmp
leave
push
leave
addl
js
dec
inc
aaa
lock
mov
jae
add
adc
dec
and
xor
or
sti
inc
sub
mov
and
xor
mov
loopne
jno
jne
adc
xchg
push
enter
lods
popf
xor
mov
sbbl
pusha
lea
xor
iret
jno
lock
imul
push
pop
or
lret
push
push
scas
mov
inc
xor
fsubl
sbb
adcb
lock
push
pop
ret
mulb
sbb
sbb
jl
inc
pop
inc
pusha
add
aad
sbb
sahf
mov
jno
clc
ficoml
adc
sub
cmc
and
leave
inc
adc
dec
lods
mov
gs
fdiv
xor
clc
mov
ljmp
test
rolb
xchg
push
call
cli
mov
dec
lret
test
fdivs
cwtl
ja
fwait
mov
mov
cmp
or
stos
hlt
bound
sub
mov
stc
fstps
push
call
mov
mov
jge
push
sbb
and
xor
shlb
and
pop
jno
lea
aaa
sbb
in
sahf
pop
movlps
orb
jnp
jecxz
xor
divb
inc
xor
sbb
test
cmp
aaa
and
push
test
lcall
notl
rcrb
add
inc
or
add
jg
clc
adc
in
push
fs
fdiv
lea
loope
mov
sub
sbb
jmp
notl
jnp
cli
dec
pusha
in
inc
add
dec
cmp
pop
add
or
adc
daa
mov
incb
out
inc
and
addb
test
cmp
rcrl
push
push
add
ret
xor
out
in
sub
inc
je
add
and
xchg
and
ss
rcl
aam
fldcw
or
jl,pn
leave
pop
pop
or
cld
rorl
loop
fisubrs
fiadds
push
sbb
insl
add
jl
nop
roll
es
and
xor
inc
clc
cmpsb
cld
xor
mov
dec
ljmp
addb
xchg
cld
jge
push
push
js
daa
das
insl
jne
jo
movsl
in
adc
add
das
pushf
mulb
inc
pop
and
xor
andb
notl
add
jecxz
stos
sub
and
inc
xor
lods
or
xchg
into
std
loopne
dec
dec
imul
fsubl
mov
adc
gs
push
aas
hlt
in
lcall
add
hlt
mov
adc
push
dec
call
pop
iret
mov
sub
mov
pop
jp
cld
sub
adc
sub
nop
push
rorb
ret
adc
or
shlb
or
mov
js
dec
lods
xchg
inc
sar
loopne
add
inc
add
mov
imul
ljmp
adc
test
in
daa
mov
mov
and
adc
inc
xor
dec
or
jb
sub
sub
jge
add
pop
orl
fisubrs
add
pop
jmp
pop
addl
cmp
shl
add
inc
pushf
andl
aad
loopne
and
or
mov
add
jg
jge
jmp
mov
shrl
push
inc
add
dec
sar
adc
push
je
arpl
mov
cmp
jecxz
adc
orb
xor
aam
fcos
xchg
jl,pt
scas
and
pusha
mov
inc
dec
imul
mov
lods
and
dec
xchg
repz
fcmovnb
mov
test
mov
cmpsb
hlt
into
std
jge
mov
add
nop
mov
or
test
dec
add
add
int
push
xchg
sahf
pop
outsl
leave
test
push
xchg
cltd
and
fmuls
mov
out
ret
dec
rcrb
push
and
bound
lea
add
fdivr
mov
hlt
cmp
mov
xor
rol
xchg
pushf
in
xor
jbe
arpl
and
push
mov
ret
dec
mov
psubq
dec
xchg
adc
mov
adc
loopne
pop
push
test
sbb
push
lret
rolb
daa
or
add
popa
or
mov
pop
test
mov
mov
hlt
test
mov
jecxz
jl
aam
xor
or
xor
jne
cmp
cmpsb
add
dec
insb
adc
shl
clc
rolb
add
scas
pop
mov
adc
sub
pop
adc
cmpsb
inc
adc
inc
movsl
insl
sbb
lock
stos
sbb
sbb
xor
add
subl
xchg
sbb
aad
adcb
mov
out
sar
xlat
jno
lds
mov
sahf
pop
aas
popa
aas
mov
dec
ret
leave
mov
pusha
sbb
xor
test
xor
in
inc
add
cld
pop
xchg
xchg
adc
test
lcall
add
pop
pop
es
rcl
or
add
push
xchg
lret
xor
fdiv
adc
lock
xlat
das
adc
adc
mov
push
jne
lcall
mov
adcl
push
mov
jp
scas
andl
adc
sub
divl
scas
and
xor
fildl
dec
fdivs
push
cli
or
or
adc
mov
ret
popf
sbb
add
jbe
les
mov
fiaddl
sub
inc
fxch
adc
lcall
cmp
icebp
fdivrl
push
mov
push
and
enter
adc
aad
mov
out
jecxz
mov
push
push
push
sbb
and
xor
push
mov
lods
js
leave
test
ret
sbb
lock
test
mov
addb
cltd
add
bound
loop
xor
xlat
jnp
dec
aaa
jg
xchg
sar
lods
or
and
mov
ror
mov
cmp
repz
inc
push
mov
ds
mov
aas
or
add
mov
pusha
sbb
popf
cwtl
cmp
inc
pop
in
lods
push
xor
cld
ficoml
push
js
xor
add
rorl
add
mov
aas
mov
mov
and
out
push
sbb
add
lods
int3
rol
cmpl
cmc
and
dec
inc
inc
or
iret
rcrl
in
mov
cmp
testb
xchg
into
adc
stos
ja
mov
inc
lea
lods
ss
cld
imul
mov
pop
cmp
repz
or
incb
sub
pop
pop
les
popa
fildl
mov
hlt
subb
mov
inc
mov
mov
loope
xor
cmp
fisttpl
or
mov
jp
shlb
mov
dec
inc
in
ret
fstpl
dec
xor
int3
loopne
negl
int3
dec
jmp
scas
mov
sbb
clc
add
ljmp
or
js
sbb
in
sbb
pop
lock
ds
js
jle
inc
push
or
or
shll
movl
push
ret
lret
push
loop
ret
test
mov
sbb
xor
pop
cli
adc
lahf
cmp
jbe
pop
inc
push
icebp
lret
in
jp
or
inc
add
cld
mov
out
out
sub
inc
ds
or
add
or
mov
cs
or
loope
loop
and
xor
xchg
sbb
lret
push
dec
arpl
es
adc
add
imul
std
xor
jmp
out
loop
fistpl
lret
and
js
sub
cltd
sub
lds
or
adc
push
inc
call
int
mov
test
iret
ja
stc
adc
mov
add
mov
or
and
in
scas
lcall
stos
fldenv
mov
pop
dec
pop
mov
bound
adc
pop
shlb
xchg
bound
dec
imul
pop
mov
xchg
pop
mov
mov
or
std
add
adc
pop
mov
add
xor
paddsw
test
andb
repnz
popf
add
cmc
sub
sbb
or
rol
shrb
mov
mov
repz
cld
jne
ret
into
mov
mov
xor
roll
fcoml
jge
add
ficomps
adc
or
out
imul
mov
mov
xor
xor
adcb
in
test
xor
andb
daa
insl
inc
in
add
lret
inc
or
rol
pop
xor
jmp
out
rorb
or
xchg
mov
push
mov
cmpsl
daa
jo
xlat
mov
fisttps
and
push
push
mov
dec
popa
xor
sub
mov
cmpb
shrb
push
int3
pop
test
add
inc
xchg
or
adc
or
daa
fs
mulb
mov
add
or
fadds
jno
and
popf
cmp
lock
addb
js
mov
pop
push
loop
les
aas
es
cmp
pop
loopne
jle
jge
sbb
std
pop
adc
push
daa
sub
or
and
sub
add
mov
and
es
and
or
or
sub
push
lods
push
aaa
xchg
arpl
sbb
addr16
or
sbb
add
add
sub
aaa
mov
and
cmp
jo
jae
les
and
adc
add
js
sbb
fcoms
pop
push
dec
test
mov
rol
xchg
mov
outsl
sbb
mov
lea
and
hlt
inc
ret
cmpb
aam
adc
xchg
add
push
inc
sbb
xchg
push
fstps
in
lock
imul
imul
mov
adc
mov
mov
push
cmp
add
sbb
scas
inc
out
test
popf
pusha
xor
scas
movsb
inc
daa
ja
jmp
loopne
and
dec
inc
adc
sbb
mov
lock
jg
add
outsl
jmp
add
inc
dec
sbb
cltd
imul
pop
dec
lods
inc
dec
xor
jb
push
adc
sub
sahf
jmp
outsb
jae
xor
dec
sub
sysenter
mov
inc
ss
std
fucomi
pop
xchg
mov
shll
in
push
add
inc
xor
xchg
xchg
aas
xchg
dec
shr
nop
and
mov
add
leave
xchg
mov
sbb
imul
rcr
sti
or
sbb
popa
xchg
sbb
push
inc
in
ss
ret
jb
arpl
xor
dec
mov
enter
jo
xor
jp
xor
js
and
or
sub
ds
sbb
loopne
cmp
adc
hlt
pop
inc
pop
inc
dec
sbb
xchg
or
push
inc
mov
divl
cld
sbb
iret
lcall
loopne,pn
and
add
pop
lods
cmpsl
adc
insb
push
mov
fnstenv
xchg
mov
dec
add
icebp
xor
loop
xchg
pushf
cmovae
mov
dec
xor
test
rolb
xchg
or
js
add
int3
repnz
loope
pop
out
lock
aas
es
and
movsb
test
lock
icebp
inc
outsb
rclb
sbb
andb
sbb
xchg
and
adc
imul
add
sbb
inc
xchg
jmp
adc
iret
mov
fninit
cmpl
clc
fcmovbe
mov
lea
cmp
rclb
fmul
inc
rolb
and
mov
sub
mov
ror
xor
mov
add
sub
or
ljmp
test
jno
inc
xor
enter
test
inc
lahf
aas
xchg
mov
add
arpl
outsl
inc
mov
mov
push
mov
out
add
adc
jecxz
in
jg
mov
push
inc
add
or
pop
or
pmulhw
dec
jecxz
nop
add
in
add
cmp
and
lret
stos
stos
dec
inc
imul
adcb
shlb
aaa
shrl
pop
imul
fcomip
pop
jnp
test
wbinvd
es
subb
add
cli
dec
bound
sbb
std
icebp
or
popa
loop
popf
shrl
out
mov
pop
not
jg
adc
sbb
repz
ret
push
out
or
pop
sbb
sub
mov
push
add
jae
xchg
add
outsb
rcrb
xchg
mov
jo
push
inc
int
fstps
dec
sub
pusha
cltd
and
rcrl
imul
std
popa
ret
inc
sbb
jge
adc
aas
into
xchg
jne
xor
push
sub
lods
add
dec
add
rol
jge
adc
push
push
and
and
pusha
and
lock
cmp
jb
fimull
repz
shll
adc
sub
or
pop
mov
pop
mov
jb
adc
daa
movsb
cmp
mov
in
lods
add
or
movl
insb
hlt
in
jmp
dec
xor
and
es
or
icebp
fadd
push
mov
cmp
add
sbb
mov
sub
and
loopne
sbb
cmpsl
rcr
or
and
or
lds
push
inc
and
push
mov
xchg
xchg
xchg
cmpb
sbb
and
loopne
xor
mov
out
cltd
push
add
iret
xor
lods
jae
pop
cmp
enter
gs
sbb
pop
pop
fiadds
pop
nop
int3
imulb
push
call
mov
popa
clc
add
mov
ret
add
mov
dec
gs
jmp
adc
je
and
mov
ret
mov
enter
cli
dec
push
mov
icebp
inc
leave
xor
mov
pop
test
xchg
xlat
dec
cmp
sar
mull
mov
ret
fchs
repnz
les
xchg
and
inc
mov
aam
xor
ja
sbb
add
lods
dec
add
or
pusha
les
sub
das
dec
fsubrl
out
or
sub
scas
xor
data16
mov
xchg
loopne
in
fs
lret
cmp
add
push
mov
adc
cmpsb
xor
sub
cmpsl
mov
mov
pop
jmp
imul
xor
add
xchg
sahf
jle
arpl
pop
add
add
and
xor
add
mov
sub
iret
movsb
lcall
loop
rcl
rolb
inc
jp
sti
ljmp
pushf
sarl
stos
add
mov
pop
add
shll
add
xchg
adc
jge
fisubs
adc
add
mov
pop
xchg
clc
pop
add
add
repz
pop
fldenv
jp
mov
inc
mov
adc
push
mov
push
rcl
mov
fsub
fisubl
call
push
sbb
inc
punpckldq
cmp
int
pop
mov
rclb
inc
andb
mov
pop
les
pushl
mov
xchg
adc
adc
sub
jge
push
cs
pop
adc
adc
loopne
sbb
fcompl
or
pusha
or
hlt
movb
push
repz
inc
mov
rolb
fwait
xchg
cmpsb
inc
pop
call
daa
loopne
sbb
pop
adc
and
inc
test
popa
fcoml
jle
rolb
add
xor
inc
mov
clc
jmp
call
sbb
lock
sub
xchg
mov
lret
push
lahf
lea
enter
jmp
iret
xchg
lahf
xor
xor
in
das
sarb
sub
push
pop
adc
aad
add
xor
xor
out
xor
fistpl
rol
int
test
push
into
mov
test
inc
das
sbb
cmc
test
push
push
push
xchg
sub
xor
add
or
test
das
mov
adc
gs
dec
xor
jae
movsl
dec
cmpsl
aas
adc
icebp
loop
sbb
cmp
arpl
push
pusha
cmp
or
test
push
jnp
icebp
xor
cli
shrb
mov
cmpb
xchg
dec
and
fdivl
pop
outsl
pusha
inc
nop
scas
mov
push
push
jg
imul
call
pusha
push
xor
cmp
ret
call
pushf
mov
xchg
cmp
push
shl
add
pop
mov
add
test
mov
cmp
sub
outsl
pop
adcb
sub
rcrb
sub
inc
jp
mov
mov
std
or
cwtl
aad
cmp
fdiv
adc
mov
fildl
notl
dec
add
orl
dec
jbe
xlat
insl
pop
mov
add
push
popf
enter
xchg
mov
sub
xlat
aam
dec
insb
addb
shll
add
insb
or
roll
mov
add
cli
rolb
cmpsb
dec
mov
rolb
subb
dec
test
xchg
in
lcall
movsb
sbb
jnp
push
das
lock
adc
push
hlt
fistpl
and
loopne
jecxz
adc
sbb
lods
push
inc
scas
imul
xor
in
dec
push
enter
lret
jge
mov
cmpsb
inc
sarb
inc
call
pop
push
call
adc
xor
jo
fildll
in
dec
test
inc
lcall
stos
test
out
rol
sub
fs
daa
adc
push
das
outsb
mov
dec
sub
push
or
aaa
inc
jbe
cmpsb
mov
add
notb
jno
cmpsl
and
pop
jbe
icebp
sub
or
mov
in
cmp
sti
mov
outsl
add
dec
xchg
inc
ja
aas
jl
push
push
adc
ror
nop
andb
adc
mov
mov
pop
hlt
dec
rcrl
dec
fsubl
sub
js
imul
add
adc
add
push
int
lahf
in
and
add
inc
add
push
push
mov
call
or
aas
adc
mov
loopne
jbe
inc
ret
or
sub
repz
mov
cmp
hlt
lret
daa
testl
ret
add
add
out
jbe
sub
mov
out
flds
pop
sbb
jbe
mov
cmc
sbb
pop
stc
dec
loop
push
cmpsb
cmp
cmp
es
fnstcw
mov
stos
sub
mov
andl
les
cmp
repnz
sub
add
xor
mov
or
cld
rcrb
fdivrp
sbb
pop
insl
or
sbb
mov
sbb
fldl
add
rol
mov
add
pop
imul
dec
ja
ret
and
cld
jmp
xor
sub
fsubrs
add
sub
mov
push
ds
mov
frstor
rcrl
popf
cmpsl
scas
cld
iret
add
jbe
add
stos
movsb
jno
mov
ret
add
add
repz
add
pop
dec
int3
adc
and
leave
or
shll
ljmp
movsl
pop
fcomps
mov
lea
pop
jno
xchg
rol
sbb
hlt
xchg
sub
ret
fwait
out
jnp
adc
sub
das
mov
jl
sbb
addl
loope
aam
mov
inc
and
iret
pop
jp
pop
lods
inc
ljmp
sbb
pop
andb
jle
jp
cmp
enter
leave
lods
sub
pop
icebp
bound
xchg
cmc
jno
inc
out
popa
out
mov
jo
loop
and
push
xchg
call
push
add
jp
sub
push
imul
jl
out
jmp
adc
roll
rcll
pusha
sbb
add
notb
inc
and
jnp
or
testl
xor
test
sbb
sahf
int
xor
adc
sbb
in
mov
addr16
sub
aaa
push
fdivs
add
sar
pop
fsubr
cli
and
or
mov
adc
adc
mov
xchg
sti
mov
sbb
pop
cmpsl
fcomi
adc
push
std
inc
clc
lret
stc
ret
push
sub
insl
out
inc
rcrl
and
mov
sub
adc
repnz
pop
push
stos
add
add
pmaxub
add
sub
mov
xor
mov
shlb
arpl
push
ret
movl
jmp
pop
mov
movsl
sahf
nop
in
adc
sbb
cmp
add
xor
adc
addb
jae
push
fadds
stos
daa
jno
add
push
sub
cld
movsl
out
loop
xor
jl
lret
jge
adc
aam
pop
cmp
popa
add
xchg
jae
jmp
imul
iret
sbbl
popf
cmp
movb
sbb
repz
xchg
shrl
add
adc
mov
mov
xor
mov
sbb
into
adc
push
adc
push
add
adc
in
fcompl
out
or
jns
adc
push
scas
mov
ret
pop
add
mov
lret
mov
call
cld
push
sub
or
xorb
mov
jne
adc
cmp
je
add
mov
in
lods
add
inc
pop
hlt
push
shlb
xchg
dec
rolb
sarb
mov
push
clc
and
sub
das
adc
adc
mov
xor
mov
mov
and
out
sub
mov
mov
mov
imul
popf
sbb
sbb
imul
fscale
outsb
jae
es
push
cmp
notl
mov
or
das
lret
push
hlt
jnp
add
and
pop
lret
and
xor
add
cs
rcll
leave
mov
fimuls
les
lock
and
in
or
push
lret
push
add
pusha
add
and
xchg
sub
pop
mov
add
or
out
jae
adc
dec
xchg
negb
gs
jb
test
xor
gs
rclb
out
js
or
adc
test
lods
add
movb
sbb
das
jecxz
push
cmp
testb
mov
pshufw
lret
pop
mov
icebp
mov
les
adc
pop
xchg
jecxz
subl
mov
push
push
or
lsl
push
ret
js
sub
jns
add
add
mov
xchg
movsb
out
pop
sub
out
adc
and
adc
movsl
xor
test
inc
inc
xor
xor
out
cld
aas
push
jle
test
pop
add
and
push
les
scas
shrb
cld
ret
xor
xor
and
test
jae
pusha
add
pop
test
push
mov
or
pop
sbb
jns
jmp
std
sub
add
cli
lcall
mov
out
adc
repnz
test
call
aam
adc
imul
add
adc
mov
adc
xor
push
cmpsl
sub
in
inc
cwtl
mov
xchg
xchg
sbb
pusha
gs
add
jbe
jp
clc
mov
add
aaa
shlb
test
arpl
rolb
adcl
dec
addb
push
addl
js
test
loop
daa
test
bound
inc
sbbb
into
push
incb
daa
test
jno
jmp
ds
adc
add
mov
addb
add
push
jmp
shl
ja
sbb
add
fwait
add
dec
packsswb
shlb
shrb
xchg
inc
xor
and
sarl
lock
adc
pop
adc
cwtl
cmp
ljmp
sbb
in
pop
mov
add
ljmp
xor
shlb
xchg
push
adcb
outsb
les
and
add
inc
aad
jo
pop
mov
iret
nop
push
in
and
cmp
mov
add
mov
jb
std
and
lret
cld
pop
jecxz
mov
push
psubsw
int
xor
leave
cmp
ja
aam
dec
adc
cmp
and
js
call
lcall
adc
leave
dec
sbbl
cli
je
xchg
das
mov
push
repz
cli
shrl
push
int3
shll
push
test
and
fidivl
clc
jae
xchg
push
fistl
je
xchg
daa
stos
ja
out
mov
ret
jmp
mov
cli
addr16
push
out
dec
add
fld
loopne
jnp
mov
mov
in
out
cmp
lock
dec
fadd
out
ja
mov
xor
add
gs
or
dec
fdiv
pop
pop
pop
push
mov
add
jae
and
push
mov
cli
in
jmp
inc
adc
add
push
nopl
cs
push
out
adc
ds
xchg
or
inc
and
add
addb
lock
sbb
hlt
and
jae
or
dec
inc
push
call
nop
call
mov
mov
pushf
mov
ret
cs
mov
and
je
aaa
ja
imul
mov
test
mov
loope
push
scas
and
xor
lcall
in
dec
inc
xchg
dec
cmp
sbb
jo
cmp
dec
sbb
adc
add
aas
insl
jno
aad
jae
cmp
popa
mov
lea
mov
das
push
jo
cld
insb
pop
sbb
inc
sbb
arpl
sbb
add
in
je
inc
sbb
sbb
jecxz
call
sbb
xor
add
xchg
adc
and
xor
xchg
add
ret
std
cmp
stc
add
inc
cmp
dec
mov
cld
fdivs
pop
dec
pushaw
add
sahf
nop
std
test
dec
cmpsl
in
sub
inc
mov
fmuls
adc
inc
call
outsl
leave
push
stos
sub
movsb
in
add
daa
xorl
je
push
out
stos
fistpll
jbe
cwtl
sbb
pop
jp
sub
jno
sub
sub
or
sbb
dec
clc
rclb
add
cwtl
lcall
add
sbb
dec
ja
and
xchg
add
jge
clc
sub
sti
dec
jmp
mov
dec
popf
xchg
xor
adc
scas
pop
jne
outsb
or
into
test
xor
pop
mov
ljmp
add
bound
popl
push
cli
imul
push
and
int3
insb
test
sub
shll
clc
rcrl
shlb
jge
out
mov
imul
shl
and
ficoms
jnp
in
js
pop
cwtl
mov
mov
pop
subl
mov
clc
mov
mov
lock
push
int
xchg
adc
test
adcb
xchg
aam
or
rolb
jp
xlat
add
mov
or
loope
push
xchg
mov
pushf
and
icebp
lea
adc
cmpsl
sub
adc
jp
cmp
pop
faddl
sbb
fmull
xor
jne
dec
jp
jg
add
push
scas
lret
jmp
push
lock
xor
push
pop
pusha
xchg
sbb
clc
aad
les
mov
dec
push
sahf
stos
add
aaa
lds
adc
adc
les
xchg
pop
jle
xor
jnp
inc
jg
imul
inc
mov
adcb
xor
add
and
loope
dec
scas
lock
adc
fsubl
pushf
and
ljmp
add
sub
mov
pop
cmp
jae
xchg
pop
mov
add
jae
jo
icebp
push
xchg
repnz
push
cmp
cmp
pmuludq
add
jo
rol
jb
adc
and
hlt
mov
sbb
pop
jecxz
cmpsl
cld
sarb
flds
jge
fcoms
push
rcrb
leave
cmc
rorl
fisttpl
add
cmp
mov
hlt
sbb
inc
mov
push
dec
push
adc
ffree
inc
cmpsl
or
sbb
nop
xor
mov
ja
cmp
dec
in
xorb
outsb
lret
mov
outsl
adc
adc
cmp
stos
test
push
fldenv
jmp
and
aaa
ret
push
pop
dec
ret
xor
int3
pop
lret
xchg
lock
xadd
and
sbb
aas
and
pop
btr
mov
ret
ds
cmp
cmc
out
jmp
add
inc
test
add
stos
pop
fnstsw
adc
sarl
icebp
fildl
push
into
fsubr
pop
mov
cmp
jb,pt
fdivr
or
xor
adcl
roll
lret
xchg
xchg
ficomps
xchg
inc
scas
int
movsl
hlt
in
mov
mov
push
adc
mov
cmp
jg
sbb
mov
addb
jbe
mov
add
shrb
mov
out
inc
add
enter
adc
push
jp
lret
inc
rcr
jp
add
rcrl
std
cld
cld
call
and
pop
mov
loop
mov
jge
pop
jle
dec
add
or
movsl
pop
sahf
cmpsl
inc
iret
inc
sub
dec
pop
pop
lret
lods
xchg
imul
test
or
outsb
in
push
push
out
incl
lret
je
movsl
aas
add
mov
xor
xchg
js
pop
into
js
pop
faddl
add
xchg
add
mov
and
xor
call
add
mov
test
sti
push
and
xchg
into
mov
ljmp
insl
sbb
les
out
test
and
xchg
ds
movsl
or
push
jnp
insl
imul
lcall
lahf
xlat
xchg
loopne
repz
lea
push
fcoml
les
stos
pop
mov
mov
mov
mov
push
pop
mov
or
call
adc
sub
and
outsb
and
pop
ss
call
xchg
repz
inc
mov
sbb
or
xchg
test
std
popf
adc
ret
mov
rcrb
or
mov
push
aas
push
je
in
cmp
add
xor
pop
sbb
das
mov
xchg
mov
fcoms
or
adc
cmp
cmp
test
mov
iret
sub
mov
pop
dec
cwtl
mov
sub
mov
or
add
sbb
cmp
pop
in
jnp
jmp
mov
fwait
or
call
mov
enter
faddp
or
add
and
cltd
xor
int3
xor
cmp
or
les
push
pusha
sbb
xchg
cltd
jmp
pop
and
inc
and
outsl
pop
inc
fdivs
and
in
dec
add
inc
inc
fldl
fcmovu
jmp
gs
pusha
arpl
lods
adc
shlb
mov
imul
aaa
sbb
stos
call
out
pop
sbb
in
fsubs
and
pop
mov
xchg
sbb
push
jl
lock
test
fs
imul
inc
fidivl
pop
rolb
jne
add
push
push
rep
and
fildl
inc
sub
jno
adc
cmp
push
jns
cmp
movsl
lock
lods
xchg
add
les
aad
pop
xor
jb
lret
xchg
mov
push
pop
lods
add
mov
je
mov
xor
lcall
dec
mov
sbb
jns
rol
roll
ret
add
sub
icebp
ret
push
mov
xlat
sbb
int
test
mov
outsl
les
dec
sbb
push
add
fsubrs
test
jne
xchg
fiaddl
test
out
add
stc
or
insl
mov
add
dec
clc
add
jne
add
push
negb
mov
adc
sub
sbb
loopne
mov
fstpt
cmp
jo
jo
jp
inc
mulb
and
rolb
pop
loop
add
and
ja
andl
insl
pop
ret
pop
sbb
aas
in
cmp
imull
aad
loope
into
fbstp
rclb
xor
jns
popf
test
andl
lahf
push
jp
xor
gs
inc
xor
addb
push
add
or
dec
mov
adc
push
inc
mov
scas
call
pop
jp
lds
push
das
add
or
lock
and
sbb
movsl
shr
rorb
aas
cs
popa
sub
sub
cmp
add
or
sub
xchg
xor
jne
jp
cmp
dec
shrl
inc
loop
xlat
mov
inc
mov
rolb
push
sbb
das
loopne
sub
lds
push
add
std
loop
sub
aaa
mov
pop
and
ljmp
cmpsl
stos
mov
and
orl
jno
mov
xchg
xchg
adc
aas
lods
or
cmp
sbb
or
or
cld
add
mov
add
push
jg
cs
mov
jecxz
or
addb
aam
add
jns
pop
popl
inc
scas
adc
jae
pop
jmp
out
pop
mov
inc
dec
enter
push
cwtl
xor
lock
or
jecxz
cmp
ja
outsl
std
xor
addr16
ret
fidivl
xchg
cli
jmp
fdivrl
loop
out
rorb
ljmp
fdivs
xchg
pop
xor
xor
mov
sub
loopne
or
ficompl
dec
lock
cmp
jmp
int
push
cli
inc
sub
addr16
and
and
shlb
xor
in
lea
fstp
add
sbb
lods
xor
test
adc
dec
push
or
push
int3
sbb
xchg
mov
loopne
pop
sbb
inc
mov
sub
jmp
cmpsl
or
sbb
rolw
lock
js
xchg
ljmp
add
in
dec
test
out
orl
imul
aaa
add
dec
decl
loop
test
stos
or
test
mov
mov
psubb
fmuls
pop
incb
sbb
in
iret
cmp
add
adc
shll
xor
pop
xchg
sbb
mov
push
sub
sbb
cmpb
rorb
addr16
add
pop
dec
orl
sbb
lret
aaa
stc
or
jne
repnz
pop
test
and
loope
add
mov
jle
cmp
jb
arpl
cmpsl
sahf
jne
test
aas
insl
pusha
pushf
pop
add
and
adc
xchg
pushl
pop
fidivrl
aam
lret
adc
rorl
fmuls
inc
ret
add
int
jne
mov
fdivr
push
clc
adc
add
and
int3
or
mov
xor
xor
add
push
add
adc
orl
mov
mov
shll
rcl
ljmp
add
and
adc
popa
movsb
add
add
mov
dec
and
ret
pop
js
dec
movsb
js
inc
or
add
inc
xor
adc
sbb
sub
fmul
add
hlt
ds
push
push
hlt
aam
movl
pop
mov
dec
push
or
jg
sarb
pop
ret
adc
pop
loope,pt
adc
dec
clc
lahf
adc
push
or
pop
mov
lret
out
mov
lahf
or
clc
cltd
mov
xorb
mov
lock
adc
pop
adcb
shrb
jl,pt
pop
jge
cmp
pop
sbb
push
fldenv
shrb
orb
add
dec
ss
int
and
popa
inc
loope
add
icebp
pusha
pop
dec
push
insb
aam
xchg
cli
jg
sbb
xchg
cld
inc
or
lea
rolb
lret
pop
shll
cmovge
xor
lods
sbb
fbstp
jno
cmp
mov
sbb
shrb
jle
lock
adc
cmp
arpl
pop
xor
xor
dec
fwait
inc
imul
xor
xor
mov
xor
test
mov
in
push
pop
faddl
je
dec
mov
sbb
aad
shl
in
test
movsb
fldcw
or
inc
stos
dec
add
or
inc
mov
mov
cmp
arpl
divl
xchg
ror
ret
mov
xorb
and
push
imul
insl
or
cmpsl
cli
hlt
mov
in
rcr
out
adc
mov
roll
sub
out
mov
cmp
bound
mov
xor
pop
jb
sbb
cmp
and
xor
cmpsl
add
inc
loope
ficomps
les
push
mov
les
rorb
xchg
xor
fimuls
shll
mov
inc
adc
xchg
fs
inc
fucom
lods
fbstp
or
or
stos
dec
jge
lret
add
cmp
adc
add
dec
mov
jno
push
loope
jnp
ret
jmp
test
jne
loope
sbb
xor
add
and
or
mov
xorb
in
ja
pushf
xchg
mov
pop
cwtl
loopne
clc
mov
or
rol
seta
dec
pusha
sar
pop
sbb
cli
fcmovb
push
jbe
dec
or
sbb
sbb
fsubrl
aam
pop
pop
movsl
push
shll
jnp
adc
cmp
push
add
call
xor
push
jno
dec
xlat
rolb
jmp
into
sbb
dec
out
loop
push
ret
nop
hlt
cmp
cmp
mov
loope
sbbb
loope
insl
jns
setbe
lahf
xchg
rcr
ljmp
jnp
out
dec
and
test
ja
cmp
fildl
cmpsb
xor
repz
add
mov
push
je
adc
enter
jbe
mov
pop
addb
je
mov
loopne
outsl
rcl
pop
and
cmp
lods
push
aam
lret
sub
dec
lods
mov
movsb
adc
clc
xchg
cmc
jne
fdivrl
fbstp
outsl
or
addr16
xchg
pop
cmp
push
mov
inc
mov
xor
adc
in
shrb
jmp
imul
cmp
test
xor
testl
add
leave
test
orl
sub
xchg
cmpsb
rcl
xlat
ffreep
or
xor
lcall
das
mov
cmp
jl
mov
add
and
cmp
iret
mov
icebp
add
scas
jo
add
stos
sub
enter
icebp
jne
ja
movsl
les
insb
not
mull
cmpsb
sarb
and
mov
mov
fwait
add
jecxz
or
adcl
in
xor
mov
push
push
rcll
scas
orl
ror
sarl
dec
je
cmpl
xor
sbb
cmp
or
and
testl
jl
clc
adc
push
push
lea
leave
sbb
mov
xor
jg
fisubs
mov
jno
add
in
dec
fs
fdivr
pop
dec
jo
push
inc
shr
mov
adc
push
pop
or
mov
xchg
xor
mov
imul
test
loopne
aas
push
js
leave
ret
inc
dec
inc
xlat
add
mov
mov
cwtl
inc
add
add
mov
jecxz
mov
mov
dec
inc
xor
jl
mov
xor
xor
dec
push
mov
test
add
sbb
add
add
lret
hlt
test
call
mov
mov
sbb
aam
fistps
jmp
rcrl
adc
add
rclb
adc
int
or
mov
jle
adc
jae
add
enter
popl
mov
ret
ljmp
inc
sbb
sahf
daa
push
ret
sbb
xchg
jno
sub
jp
or
add
ss
inc
mov
cmp
loopne
xchg
xchg
call
adc
jmp
sbb
dec
or
test
loopne
js
iret
rolb
out
lcall
or
shrl
dec
fmuls
fisubrl
push
nop
inc
and
push
negl
inc
lret
push
mov
fsubp
sbb
hlt
ljmp
and
arpl
cmp
in
ds
jmp
add
mov
ss
aaa
dec
or
inc
add
push
repnz
lock
std
movsb
pop
add
pop
jno
loopne
xor
adc
cli
xor
clc
aas
faddl
pop
jle
pop
inc
xchg
rclb
mov
add
push
sub
add
inc
cmpsb
aam
xor
and
hlt
icebp
jg
add
mov
dec
inc
inc
and
clc
aam
mov
mov
xchg
out
adc
jno
add
pop
dec
adc
mov
push
pop
mov
pop
jb
and
jmp
push
lods
xor
or
cwtl
xchg
clc
add
jo
push
int3
mov
dec
iret
push
cmp
adc
cmpsl
sbb
dec
jp
cmp
ja
in
sbb
insl
sub
sbb
xchg
movsl
js
cmc
lahf
and
subl
aaa
leave
sbb
and
les
cli
add
call
add
andb
mov
ret
mov
ss
mov
push
inc
loopne
jmp
lret
loope
and
or
icebp
iret
add
lock
mov
jle
pop
sbb
cltd
mov
sbb
imul
adc
sub
and
add
repz
mov
pop
or
rorb
cmp
mov
cli
mov
sub
movsl
mov
movsl
mov
or
add
mov
movsl
jmp
out
cmp
mov
mov
test
mov
dec
xchg
jle
mov
fbstp
adc
mov
cmp
push
push
or
sti
xor
les
xorb
pop
mov
xchg
and
mov
xor
xor
movsb
icebp
add
test
xor
and
decl
aam
sub
and
insb
and
sti
jl
roll
or
add
xor
sbb
and
xor
shrb
cmp
xorl
mov
add
inc
sub
or
add
inc
sub
sub
lea
shrb
xchg
dec
out
divl
mov
enter
cmpsl
sbbl
cld
repz
aas
ret
rolb
fs
fstps
in
mov
aam
in
addb
dec
decl
test
int3
add
int
push
adcb
push
lret
inc
push
rcrl
test
or
rcrl
and
sbb
pop
mov
dec
pop
loopne
in
cwtl
mov
fcomi
add
push
shrb
inc
out
add
push
loopne
pop
shlb
push
imul
das
ds
and
leave
cmpsl
cmp
lods
or
add
sub
inc
mov
fimuls
mov
add
and
mov
add
push
lock
loopne
bound
inc
outsl
add
push
sbb
cmc
rcrb
or
inc
ficompl
lea
jg
mov
jle
mov
les
dec
adc
fadds
and
sbb
adc
adc
rolb
daa
je
sub
gs
sub
add
push
int3
ret
loop
inc
outsl
js
add
call
nop
js
hlt
jbe
jne
or
and
dec
popa
les
jl
or
std
cmc
inc
inc
ds
in
lock
rcrl
dec
loope
insl
imul
popl
lods
loope,pt
ret
sbb
xchg
lock
add
mov
xor
push
push
imul
sub
shll
dec
sbb
lock
lret
rcrb
test
pop
and
add
add
pop
inc
filds
xor
add
xchg
loop
orb
mov
push
nop
movsl
adcb
out
sub
sub
xchg
or
fs
cmp
adc
push
insl
push
and
add
xchg
mov
ja
das
into
jg
aaa
mov
rorb
lds
xchg
mov
int3
add
aaa
andb
add
loopne
cmp
lods
inc
leave
int3
out
out
dec
xchg
mov
add
ret
out
xor
icebp
movsl
xchg
or
jmp
ret
sbb
pop
xlat
cmp
push
add
xchg
jns
sbb
pop
jno
lea
inc
cmp
or
pop
bound
xor
mov
push
call
push
mov
mov
sub
mov
test
jge
insb
hlt
and
add
sub
adc
pop
pusha
inc
stos
and
ret
out
push
inc
xor
fcoms
inc
imul
push
dec
imul
sub
in
or
mov
inc
stos
sbb
popa
shl
inc
in
enter
xor
test
scas
popa
daa
in
adc
aam
aam
aam
rclb
mov
push
xor
ret
lods
repz
jbe
push
xchg
shl
test
and
insl
lods
add
out
xor
decb
rol
jecxz
mov
addb
std
roll
filds
out
movsb
mov
paddw
jbe
daa
inc
add
and
rclb
test
es
and
fistps
shr
xor
pop
cmpsb
lea
nop
std
or
dec
jne
daa
sbb
xchg
icebp
cmc
or
add
cli
xchg
and
cmp
in
xorl
add
loop
iret
push
pushf
mov
jg
fs
fcom
loopne
pop
test
in
mov
ljmp
mov
out
and
mov
mov
add
add
sbb
add
adc
in
pop
xchg
cmpsb
popa
mov
and
je
xchg
cmpsl
sbb
push
push
push
add
das
movsl
loope
mov
push
dec
add
add
decl
pop
lahf
push
dec
xchg
test
lea
lret
movaps
mov
enter
inc
fbld
cmpsb
push
pop
add
mov
push
leave
mov
xor
mov
insl
jecxz
sub
jmp
inc
dec
loopne
xor
inc
leave
fdivs
inc
or
jae
sbb
enter
cmpsb
sub
dec
stc
jmp
sub
xchg
add
xor
xchg
jb
rclb
dec
test
shlb
sbb
pop
test
popa
inc
sub
mov
push
pop
mov
outsl
sub
push
stos
adc
and
in
mov
mov
mov
mov
mov
shlb
rcr
fadds
clc
add
push
xchg
icebp
cmp
ja
and
int3
testl
enter
inc
add
bound
mov
mov
les
cld
adc
shll
push
xchg
xor
or
pop
add
sarl
stos
jo
outsl
mov
or
add
dec
jmp
lcall
je
add
mov
rorb
das
aaa
push
xchg
lea
push
icebp
data16
lea
push
push
in
call
int3
jp
call
mov
movsb
jp
push
add
je
in
sub
lret
sbb
insl
inc
lods
cltd
ret
jne
aaa
rcrl
iret
add
jno
or
jg
movsb
jno
test
leave
rorl
mov
pushf
cmpb
sbb
push
cmp
sub
mov
pop
push
sbb
movsl
jo
test
add
addr16
mov
inc
lods
dec
cmp
loopne
mov
fcoms
out
sub
pop
mov
loopne
adc
adc
sbb
mov
testl
leave
shl
pop
lcall
pop
mov
push
sub
pop
and
mov
pop
sub
pop
jge
xor
cmp
xor
lahf
outsl
inc
sbb
scas
and
lret
loop
and
ja
loopne
sub
sub
mov
cld
fnsave
adc
pop
xchg
adc
imul
push
pop
and
adc
mov
pop
add
dec
int
inc
popa
daa
iret
cmpsb
das
or
nop
mov
jmp
jmp
inc
push
mov
fbstp
push
and
or
pop
and
or
lahf
sarl
lods
xchg
xor
adc
add
stc
sub
mov
or
mov
mov
add
cltd
ja
imul
fmull
scas
sbb
outsl
mov
leave
mov
push
adc
ror
movsb
call
or
cmp
out
mov
push
push
decl
inc
stos
movsb
dec
or
jmp
mov
inc
sar
xor
add
xchg
lahf
clc
push
push
in
mov
inc
mov
jno
sbb
dec
and
icebp
js
and
fidivs
hlt
aas
push
jnp
cmc
xor
sahf
push
xchg
fistl
call
add
dec
lea
mov
add
sub
shll
xor
shlb
scas
into
jp
je
mov
repnz
and
mov
xor
sub
push
dec
adc
or
jl
bound
sub
scas
aam
in
mov
in
inc
int
ljmp
xchg
push
rolb
daa
clc
push
push
popa
bound
fs
or
xchg
push
call
rolb
push
add
add
cmp
add
faddl
push
test
ja
xchg
loop
dec
insl
adc
fcoms
add
out
dec
mov
fisubrl
hlt
insb
test
hlt
sub
mov
imul
cmpsb
cmpsb
mov
je
hlt
push
cmc
mov
cmpsl
adc
jmp
enter
xor
movsb
xchg
adc
enter
xchg
out
or
sbb
sarb
mov
pop
mov
into
or
out
push
push
insl
pop
jecxz
mov
inc
jne
mov
insl
or
xchg
sub
mov
push
inc
fs
inc
pop
fldenv
jns
mov
testb
test
test
or
sbb
in
fisubs
adc
loope
mov
lods
ret
or
dec
inc
or
ds
pop
adc
ja
fcmovne
and
lods
aad
add
lret
and
xor
lret
inc
cmp
pop
add
icebp
addb
xor
and
mov
lods
pop
clc
or
mov
sbb
inc
lods
enter
shll
push
sbb
add
cs
pop
jl
icebp
test
jle
shlb
pop
inc
test
sub
sar
and
addl
and
scas
add
rcll
lods
mov
xchg
push
das
bound
test
loop
mov
jbe
lea
adc
testl
adc
or
xor
dec
cmp
lods
sub
sub
ret
sarb
inc
pop
sub
int
sbb
cmc
push
adc
or
pop
pop
fxch
jne
add
shrl
inc
jle
sub
inc
mov
arpl
cmpps
xor
mov
and
or
mov
lods
dec
push
dec
dec
dec
jecxz
icebp
rclb
pop
xor
push
sub
ja
loop
ds
shrb
mov
or
xor
rorb
popa
imul
dec
xorb
cwtl
pop
add
imul
ljmp
insb
cmp
ficoml
dec
js
push
xchg
pop
in
out
jno
sbb
and
sub
lods
adc
and
add
or
stos
cmc
add
leave
stos
add
mov
cs
je
rorl
lds
cmc
shll
xor
stos
pop
mov
hlt
cmp
xchg
or
addb
xor
pop
jmp
jecxz
cmp
jbe
xor
sbb
cmpsb
xchg
mov
ret
pop
test
jg
jl
push
shll
fldl
push
nop
jbe
xor
jne
scas
icebp
mov
rcll
ret
add
cwtl
mov
jno
sub
adc
ljmp
test
mull
xor
adc
frstor
ds
ja
mov
cmp
jne
popa
por
cmp
push
out
lret
frstor
and
notb
nop
push
push
pop
inc
daa
pushf
xchg
jbe
ss
add
aam
or
xorb
xchg
negb
add
bsf
mov
das
push
fisubs
mov
dec
aaa
xchg
pop
mov
enter
fsubp
adc
pop
pop
mov
movsl
into
and
and
xor
in
jmp
xchg
jmp
lods
inc
mov
add
jg
and
add
and
and
inc
and
and
or
and
or
enter
and
adc
add
imul
cmp
pop
fcmovnbe
and
add
insb
add
and
or
adc
insb
fildl
mov
inc
mov
and
cmpsb
stc
data16
inc
and
nop
or
and
mov
inc
lods
cltd
sub
dec
add
nop
ds
jle
or
lods
std
adc
add
or
test
stc
push
mov
fs
dec
dec
sbb
dec
sub
jb
pop
imul
push
jbe
and
mov
lret
inc
fwait
mov
es
xor
sahf
or
fadds
or
cwtl
dec
sub
and
xchg
faddl
nop
and
dec
nop
insl
inc
cmp
cmp
sbbl
sub
add
add
xor
cli
and
add
andl
out
jo
or
insb
cmp
mov
dec
sbb
int3
cmp
and
jl
jp
jo
xor
adc
mov
enter
push
cwtl
inc
add
add
rol
add
push
and
data16
fidivs
sarb
roll
test
fcmovbe
mov
sbb
pop
xchg
nop
rolb
popa
mov
pop
adc
js
sub
add
cltd
and
sarb
push
subl
xor
xor
enter
out
insb
rcll
daa
push
dec
ds
inc
enter
adc
scas
stos
pop
or
mov
inc
mov
pop
and
add
cmpb
cmp
xchg
and
add
jno
add
xchg
dec
dec
dec
and
xorl
cwtl
cmp
sbb
xchg
popa
pop
je
push
and
adc
int3
int3
add
ljmp
int
pusha
orb
jl
stos
sub
shlb
adcb
addb
or
mov
nop
mov
or
inc
and
and
and
add
adc
mov
inc
test
pop
and
movsb
dec
and
and
les
fiaddl
push
inc
add
inc
and
test
dec
mov
adc
inc
inc
xor
mov
inc
and
and
mov
and
fmulp
cmp
jle
or
jle
nop
or
nop
adc
inc
mov
adc
push
popa
pusha
lods
inc
les
jp
or
movsb
nop
and
negb
add
adc
and
js
or
jl
orl
and
sbb
add
bound
or
dec
xor
add
xor
in
movb
rclb
subb
inc
and
or
mov
inc
ds
and
in
lods
pushf
and
and
add
in
dec
pusha
xchg
adc
orb
bound
sub
je
or
or
adc
and
cmp
or
adc
or
or
and
cmp
or
add
adc
es
cmp
xor
int
add
xchg
cli
and
adc
sbb
dec
and
add
es
push
add
mov
or
dec
sbb
incb
add
sbbl
pop
bnd
sub
nop
inc
mov
xor
data16
jbe
and
lods
or
add
data16
mov
mov
pop
xor
mov
inc
cltd
inc
sub
push
jge
ret
lods
shl
mov
mov
cmp
xor
nop
addr16
or
pop
dec
dec
fsubl
and
and
xor
nop
push
rcrb
push
mov
push
cmpl
jbe
pusha
adc
inc
lods
mov
mov
mov
int3
inc
jb
push
loop
pusha
paddq
clc
and
lods
fnstcw
or
jo
sub
cld
lret
mov
mov
or
shrl
pusha
data16
sbb
ljmp
add
mov
adc
adc
xor
notb
sbb
je
adc
fabs
loopne
inc
flds
jo
sarb
or
cli
or
and
loope
cwtl
and
orb
popa
dec
popa
mov
movsb
push
loopne
or
push
rcrb
shlb
and
and
sub
cltd
inc
rcl
fmul
pusha
test
xor
sbb
insb
int3
adc
pusha
jl
and
add
call
cwtl
mov
dec
inc
aam
add
xlat
add
insl
mov
fiadds
push
add
stos
clc
int3
fsubr
loopne
cwtl
fadds
movl
pusha
shll
dec
xchg
sub
addl
pushf
int3
int3
int3
rcl
bnd
dec
fcmovbe
int3
lock
addb
sub
or
push
or
adc
cmpsb
add
add
cli
sbb
or
sub
scas
xchg
adc
ds
and
jbe
sbb
mov
scas
mov
xor
enter
mov
inc
xor
lcall
inc
xor
pop
sbbl
lods
adc
adc
nop
adc
and
adc
je
das
push
add
sbb
inc
jo
pop
in
ss
ret
fidivs
js
adc
sbb
mov
cltd
xor
ret
pop
cmp
test
ljmp
mov
push
ljmp
jp
ljmp
mov
lods
inc
das
jae
mov
jns
sbb
adc
add
je
popa
push
dec
sahf
test
es
call
sub
data16
adc
sbb
mov
mov
inc
adc
add
lcall
mov
mov
jmp
mov
hlt
mov
and
cmp
xor
rorb
jb
dec
add
xorl
mov
lcall
loopne
add
leave
push
cwtl
fldcw
push
out
push
sbb
or
xchg
pop
adc
mov
mov
cmp
hlt
mov
or
xor
mov
rclb
dec
scas
and
call
rolb
cmpl
mov
pusha
pop
int3
add
jle,pn
add
jnp
dec
test
js
orb
shlb
jbe
or
xlat
push
jle
sbbl
enter
xor
or
cwtl
loopne
mov
sbb
cmpsb
sub
xchg
adc
push
js
xor
mov
add
xchg
mov
out
cld
dec
mov
pusha
cmpsl
add
mov
jp
pusha
popa
or
add
pop
pop
jbe
test
dec
add
ret
fdivl
push
dec
add
loope
cmp
or
scas
push
add
inc
pop
pushf
cmpsb
or
or
sbb
js
push
add
into
negb
sub
adc
in
pop
inc
cmp
cmp
cmp
push
or
inc
bound
scas
inc
push
mov
lret
add
cmp
sub
shlb
and
pusha
je
mov
or
pop
xchg
inc
dec
push
inc
in
dec
aam
push
dec
pop
test
jb
or
int
sbb
scas
and
xchg
sub
insl
scas
inc
test
enter
dec
jne
push
add
sarb
shlb
and
bound
out
mov
cmpsb
rorb
xor
int3
adc
nop
push
sub
mov
test
mov
shrb
mov
adc
fs
dec
push
pusha
ss
test
ljmp
push
fs
shrb
adc
push
lock
je
xor
add
dec
loope
lods
inc
mov
xor
lret
and
jbe
je
adc
inc
psubb
adc
jo
mov
pop
or
cmp
cmp
mov
in
flds
lret
mov
mov
dec
pop
inc
push
pusha
push
mov
and
mov
into
or
add
push
push
adcl
loop
jae
sub
js
or
lea
nop
out
test
pop
pop
movsb
ljmp
pop
cmpsl
push
xchg
inc
add
inc
add
decl
or
imul
incl
fimull
int3
cmpsl
aad
pop
clc
add
jle
cmp
rcrb
add
repz
call
add
jbe
lahf
add
inc
add
push
mov
clc
loop
adc
xchg
aam
add
adc
add
mov
and
test
lods
fucomi
pop
test
inc
pop
call
movsl
sbb
add
mov
or
cmp
jg
mov
inc
add
fnsave
cld
add
smsw
daa
inc
push
into
aaa
xchg
inc
and
mov
xor
cmp
push
bound
mov
icebp
daa
push
mov
mov
add
test
aam
lods
or
scas
repz
jp
jbe
xchg
add
push
add
div
incl
mov
fs
and
adc
outsb
add
or
aas
clc
decl
mov
lods
pop
adc
orl
lds
pushl
shrb
out
dec
add
mov
or
ret
xchg
adc
std
mov
aad
js
and
movsl
aam
jns
add
cmp
push
sar
scas
cld
push
inc
jbe
adc
sub
les
lret
push
or
mov
fistps
add
loopne
lds
pop
add
ljmp
int
lahf
push
jnp
pop
loop
push
test
fldcw
jecxz
add
aad
add
nop
pop
inc
dec
fwait
cmp
and
negl
cmp
jne
ret
repz
ljmp
std
xchg
popa
push
adc
jp
add
adc
add
adc
push
ja
sub
or
pusha
jmp
mov
push
fildl
or
push
insl
and
shll
cld
inc
xchg
inc
cmp
xor
dec
sub
or
neg
add
repnz
xchg
pop
mov
cld
incl
push
sbb
cmc
in
fistpll
aas
add
pop
jl
sub
jle
dec
inc
es
dec
mov
and
cmc
fcmovnb
imul
cmc
jge
cmp
call
repnz
shrb
pop
pushl
jecxz
dec
int3
dec
sbb
addl
add
push
jp
xor
jns
cld
sub
xchg
int
loopne
add
add
lret
pop
mov
in
xor
or
stos
loop
mov
in
mov
cmp
sub
inc
cld
jmp
and
pop
push
adc
adc
lds
jbe
ljmp
decl
jmp
xor
or
enter
mov
inc
fs
incl
rcrl
push
xchg
insb
xlat
sub
mov
incl
xor
mov
add
call
cmp
ds
cli
inc
push
enter
sub
nop
rorl
arpl
add
pop
es
cli
mov
and
pushl
inc
cmp
add
mov
push
add
imul
jg
xchg
and
sub
inc
pop
sub
sbb
movsl
xchg
push
cld
shrb
adc
cmp
jg
popa
jo
pop
sub
and
popf
xchg
stos
and
nop
and
es
aas
imul
cs
add
add
cltd
xor
dec
cli
add
lds
xor
xchg
dec
xor
or
incl
add
push
imul
cmpsb
jl
mov
iret
mov
cld
or
cmp
mov
inc
hlt
xchg
gs
scas
stc
jne
jp
lds
sub
popa
cmp
loopne
imul
inc
ficoms
mov
jmp
push
cwtl
add
dec
push
pop
jle
adc
test
decl
into
in
insb
pop
icebp
leave
jp
mov
jge
xchg
sub
pop
fs
push
pop
dec
jle
sti
aaa
or
fwait
xor
adc
je
adc
shl
add
std
fimull
roll
dec
or
incl
adc
pop
test
adc
add
lods
icebp
add
daa
jp
sbb
push
add
add
or
ret
xorb
jne
shr
cltd
pushl
sbb
cmp
icebp
outsl
and
stos
je
data16
loope,pn
in
or
movsb
mov
or
into
mov
cli
mov
mov
leave
mov
std
add
or
mov
sbb
adc
movsl
cmp
in
dec
sbb
in
cmpsb
xor
mov
sub
scas
add
dec
sub
push
das
clc
add
pushaw
scas
sub
sub
mov
inc
mov
cld
addr16
arpl
aas
push
mov
scas
jnp
int3
icebp
xchg
std
cmpsb
call
xor
add
pop
and
jmp
mov
add
ljmp
cld
pop
test
pushf
std
scas
adc
pop
test
jge
add
jg
js
lods
cmpsb
pusha
adc
inc
adc
jl
je
lods
pushf
ja
pop
repz
aad
cli
scas
add
imul
xlat
xchg
stc
pop
pop
bound
add
movhps
xchg
pop
push
jle
aad
mov
fwait
mov
mov
ds
cli
jl
stc
fcmovnu
insl
lret
jns
add
or
rorb
xchg
mov
mov
sub
jae
cld
fists
loopne
ss
inc
add
gs
mov
adc
adc
sbb
or
inc
bound
and
jbe
add
or
subb
repnz
imul
sbb
adcl
cmp
out
clc
frstor
pop
cmp
jo
mov
rol
movsb
cli
mov
inc
sub
mov
les
jg
add
xchg
sbb
mov
sub
pop
mov
lods
pusha
sahf
mov
ljmp
sahf
pop
arpl
test
lret
inc
dec
lock
pusha
ljmp
pop
jae
adc
push
icebp
add
cltd
inc
sbb
add
flds
jg
mov
lods
dec
cmp
cmp
add
sbb
outsl
or
add
or
pop
and
enter
jmp
int3
ss
sbb
mov
insl
dec
push
hlt
or
inc
addb
mov
xchg
xchg
sbb
stos
mov
das
adc
ss
jp
push
sbb
test
loop
in
xor
movsl
loop
clc
jmp
sub
imul
mov
cmp
lods
jne
cld
outsl
jb
aam
scas
mov
and
ja
sbb
cs
jnp
mov
cmp
push
add
dec
mov
stos
xor
jg
out
add
dec
add
ds
scas
xorb
push
dec
add
dec
dec
push
and
aas
mov
shl
jnp
call
add
pop
xor
dec
sbb
xchg
jne
scas
clc
jg
push
fnstenv
aam
xchg
fdivrl
inc
or
jg
sub
push
js
loope
adc
rcr
push
jo
xor
pop
out
out
xchg
lds
sbb
and
das
pop
das
mov
push
test
mov
push
in
pop
add
push
pop
aas
or
std
call
pop
and
negb
mov
incl
inc
dec
rorl
add
and
mov
add
inc
sbb
hlt
pop
cld
call
ss
push
push
insb
or
sbb
notl
and
sbb
cmc
cltd
push
cld
jg
sbb
sub
mov
mov
cmp
push
jecxz
mov
syscall
inc
xchg
inc
push
cmc
clc
xchg
orb
enter
or
jne
fwait
push
push
out
adc
dec
test
scas
popa
out
jmp
cmp
mov
addr16
call
outsb
lods
inc
xor
jge
mov
mov
add
sbb
scas
rcr
dec
out
es
aam
mov
mov
push
fidivs
bound
inc
sarb
cli
or
mov
push
rorl
push
lock
pop
push
and
insb
in
stos
int3
cmc
dec
test
cs
clc
cmp
lahf
sbb
ss
add
pop
std
pop
push
inc
hlt
cmp
add
adc
in
decl
or
adc
in
fsub
cmc
or
rorl
outsb
mov
addr16
jmp
xor
test
adc
cmp
pop
mov
mov
cld
mov
adcl
inc
fs
in
bound
in
xor
xchg
mov
mov
pusha
out
or
test
outsl
mov
push
mov
loope
mov
out
mov
add
stc
add
sbb
push
lock
call
adc
mov
mov
loopne
out
dec
movsb
ss
decl
pop
fidivrl
popa
out
push
cmpsl
xchg
jmp
jmp
mov
adc
xor
or
std
imul
fwait
push
fcmovb
test
and
pop
into
cmp
cltd
cmc
push
es
jg
sub
push
adc
and
fwait
popa
cmpsb
mov
repz
jp
repnz
outsl
jp
stc
out
cmc
mov
pop
xor
fbstp
cld
call
dec
in
push
or
add
aam
subl
mov
xchg
inc
push
push
nop
call
sbb
lods
stos
test
mov
adcb
sarl
add
jo
sub
shrb
scas
adc
mov
jmp
fbstp
jo
add
adc
icebp
sub
and
rorb
sbb
loopne
es
stc
in
jle
push
ficoml
jle
rcrl
loopne
sub
dec
pop
repnz
out
loop
pop
ficomps
push
jl
lds
xchg
dec
xchg
jle
pop
push
aas
scas
mov
cli
inc
xor
sbb
push
mov
sti
pop
je
lds
push
mov
add
in
push
mov
jecxz
cmpsb
jbe
pop
fidivl
lock
mov
incb
insb
nop
xchg
cmp
stos
es
push
cld
stos
shr
pop
push
cmp
xchg
dec
repnz
rorb
inc
adc
xor
add
push
dec
sub
call
xchg
add
pop
lock
mov
xchg
mov
jns
fcomip
add
dec
cltd
fimuls
leave
rolb
mov
or
sbb
xchg
xchg
movsl
add
inc
lea
sbb
cmpb
pop
push
xor
jge
insl
icebp
iret
and
add
inc
mov
ret
icebp
test
movsb
mov
ss
sub
cmp
sti
out
test
and
mov
dec
aas
es
cwtl
mov
dec
jo
pusha
pop
dec
pushf
inc
push
xchg
popa
in
xchg
scas
or
inc
loope
sti
repz
es
and
push
add
adc
push
xchg
adc
cwtl
idivl
aad
xor
dec
repnz
nop
xchg
adc
stc
imul
push
or
into
xorb
lock
roll
adc
mov
push
push
add
daa
jb
adc
add
lret
add
jo
lock
add
call
loopne
add
cli
pop
jb
push
add
jns
inc
dec
jb
mov
and
adc
mov
jb
xchg
mov
sub
enter
je
dec
fwait
xchg
mov
mov
mov
test
xchg
jl
roll
xor
adc
sub
xor
ds
fcmovnbe
add
mov
test
je
lock
or
outsl
clc
fcomip
test
jne
add
in
xor
cmc
rcrb
and
cwtl
xorl
sbb
pop
xor
shl
pushl
mov
sub
xchg
dec
call
sbb
lock
into
pushf
jnp
add
int
add
xor
loopne
xor
ret
jg
bound
rolb
popa
out
loope,pn
pop
js
mov
inc
dec
bound
add
mov
inc
in
cmp
dec
fs
insb
sub
mov
sub
rcll
or
mov
cs
incl
cli
dec
pop
mov
inc
adc
adc
dec
inc
mov
test
xchg
fcompl
decl
mov
cli
cwtl
adc
call
inc
cmc
je
add
and
pop
lds
inc
stc
sbb
push
mov
jg
and
flds
adc
clc
mov
jbe
outsb
je
mov
xor
mov
sub
mov
cmc
sub
jl
add
in
rorl
in
fcomip
mov
test
and
xor
movsb
into
sahf
scas
add
sub
xor
mov
mov
insb
or
sub
sbb
mov
inc
push
fs
andb
pop
fwait
clc
pop
clc
dec
lods
or
adc
cmpsl
jmp
decb
into
sub
add
and
add
movsb
cld
jmp
mov
mov
idiv
lcall
add
bound
push
xchg
push
jge
pop
dec
stos
xchg
dec
shl
and
loopne
mov
and
test
push
mov
inc
loope
mov
pop
jge
fists
and
pop
aaa
push
pop
xchg
clc
and
jg
mov
cmp
clc
nop
xor
fnstsw
inc
loope,pn
and
aad
xchg
jge
mov
mov
sbb
add
repz
or
imul
jo
cltd
xchg
mov
mov
inc
clc
es
rolb
sarb
mov
adc
sub
xchg
or
mov
call
push
mov
add
sbb
inc
lret
pop
adc
cltd
push
xchg
fildl
adc
cld
scas
jo
cmp
mov
cmp
sahf
xbegin
cmpsl
sub
mov
sbbb
movsb
and
jle
dec
popa
shlb
xchg
pop
std
pop
push
cld
cmpsb
sub
scas
or
pop
xchg
push
fnstcw
filds
cld
adc
shll
push
mov
fptan
int
inc
rcll
adc
xor
imul
sahf
add
mov
sub
icebp
sahf
pop
mov
pop
pop
mov
incl
push
mov
mov
mov
pop
cli
pushf
in
aaa
outsb
push
pop
scas
pushf
mov
cmp
jecxz
jmp
pop
loope
repnz
inc
pop
dec
or
rorb
decb
lret
sub
mov
pop
add
je
add
jge
dec
aas
xchg
loope
jnp
clc
pop
sub
fs
fsubrs
mov
cmp
push
sub
inc
sub
cmp
cmpsb
add
cmp
repnz
int3
pop
mov
push
adc
mov
jmp
lods
out
mov
push
insb
test
ret
sbb
cld
dec
dec
dec
lods
inc
das
push
clc
clc
icebp
jnp
dec
ljmp
jp
push
cli
push
loopne
jb
adc
xor
out
or
and
inc
xchg
sub
outsl
fldenv
hlt
inc
add
sarb
ds
idiv
lcallw
add
or
push
mov
add
fwait
popw
mov
dec
inc
push
mov
dec
into
imul
sbb
ds
ret
sti
and
jge
or
adc
mov
add
and
push
fisttpll
adcb
jno
push
mov
ret
or
push
inc
cmpsb
jno
add
test
xchg
data16
mov
mov
xor
pop
pop
stos
push
ss
inc
mov
fs
scas
xor
mov
daa
out
out
enter
hlt
das
shr
push
sub
add
inc
and
cwtl
movsb
pop
push
mov
mov
cld
or
push
andb
xchg
js
push
jmp
pop
jne
sbb
inc
add
sbb
test
aas
inc
outsl
mov
mov
jl
push
mov
push
rorl
and
insl
inc
jg
clc
add
mov
je
shl
inc
pop
icebp
lea
cltd
push
cmp
sbb
add
outsl
dec
scas
js
mov
adc
add
add
mov
xor
scas
inc
pop
in
aas
mov
ljmp
add
add
mov
outsb
lods
push
and
inc
sti
inc
push
pop
movsl
mov
orl
cmp
jge
sbb
ja
dec
inc
aaa
inc
loopne
pusha
andl
adc
mov
ds
pop
and
or
jne
lds
lcall
pop
and
les
mov
orl
es
and
dec
sbb
test
jne
jg
decl
imul
pusha
aam
xchg
push
add
pop
dec
cs
xor
roll
outsl
mov
std
cmp
xchg
sbb
add
and
loop
call
ret
scas
adc
jmp
pusha
mov
test
xchg
sub
daa
inc
clc
xchg
jg
inc
cmp
adc
bound
loop
sub
mov
pop
decl
and
ret
arpl
dec
add
loope
lret
push
and
add
aam
neg
inc
fsubp
mov
xlat
pop
sbb
movsb
jo
mov
scas
les
jge
cmc
gs
fs
pop
and
orl
pop
clc
lret
mov
xchg
jg
inc
leave
ljmp
pop
dec
adc
cli
dec
mov
arpl
pop
or
inc
sbb
push
ret
jno
pextrw
cwtl
nop
in
and
mov
jmp
push
fdivl
xor
inc
dec
lea
rcr
js
inc
movl
mov
hlt
dec
sub
fisubl
mov
inc
faddp
xor
xchg
test
add
push
mov
cmp
push
push
insl
lea
sub
dec
add
pop
sbb
shl
push
jg
pop
push
lods
js,pt
push
and
dec
js
or
mov
insl
or
jo
loopne
repnz
repz
movsl
adc
lods
xchg
adc
repnz
mov
movsl
jg
loop
inc
movsb
mov
xorb
and
adc
ja
dec
pop
mov
jmp
aas
hlt
mov
mov
in
ss
pop
push
ja
add
aam
in
mov
mov
mov
dec
stos
roll
lcall
je
sbb
mov
jle
jge
cmp
or
sub
lods
sub
and
xchg
add
or
aad
ljmp
ljmp
xorb
adc
mov
mov
test
aaa
inc
add
dec
aam
xchg
loopne
add
and
jo
cli
orb
fiadds
inc
jmp
cli
mov
jmp
imul
rcrb
jecxz
push
mov
xchg
push
add
jbe
clc
cmp
das
push
out
xor
enter
loop
jmp
and
inc
test
sub
cmp
xlat
fwait
scas
sbb
test
mov
lcall
es
mov
push
imul
data16
out
dec
les
sub
adc
add
pop
mov
add
stc
adc
idiv
arpl
notl
add
cmp
in
outsl
mov
fmull
inc
sub
lcall
test
mov
pop
push
cmp
inc
push
adc
jecxz
gs
adc
test
aas
ljmp
lds
sarb
ds
mov
insl
mov
scas
bound
or
in
jns
xor
cwtl
inc
or
pop
cld
jmp
mov
data16
or
sahf
jmp
xorb
and
daa
or
into
push
int
lods
fndisi(8087
lcall
xor
push
push
mov
out
fisubl
cmpl
es
inc
cmpsb
lods
add
inc
in
sub
ljmp
pop
test
in
mov
aad
adc
decl
sbb
xor
inc
inc
xchg
pop
adc
push
mov
mov
xchg
stos
adc
and
popa
sahf
fld
outsl
inc
or
or
push
test
push
cli
mov
ja
push
dec
les
xor
mov
mov
jg
mov
inc
dec
mov
aad
imul
and
sub
mov
mov
sbb
cs
xchg
ret
test
sbb
sub
mov
es
mov
mov
je
cmc
sub
faddl
add
outsl
xor
push
lock
sbb
add
js
cmpsl
jl
shrl
pop
inc
addb
dec
sbbl
sub
mov
jg
pop
add
arpl
sbb
aas
mov
push
xchg
clc
rcll
call
imulb
inc
bound
mov
and
stos
pop
loop
mov
lcall
clc
cmc
push
nop
xchg
stos
lcall
push
add
mov
cwtl
sbb
movsb
out
imul
in
mov
sbb
ljmp
dec
push
fdivrp
sub
or
cmpb
add
mov
sub
andb
lcall
or
mov
fiadds
sbb
test
leave
sbb
mov
push
and
loopne
mov
movsl
add
inc
shlb
cmp
xchg
inc
stc
loope
orl
pop
aam
xor
cmc
sub
xor
insb
test
dec
mov
pop
xor
andl
sti
inc
popa
and
mov
pop
push
add
cli
mov
fadd
inc
and
sbb
and
adc
sub
add
test
ss
neg
mov
pusha
cmp
repnz
data16
pushf
mov
push
or
cmp
and
iret
clc
mov
int
mov
repz
mov
pop
pushl
or
lret
push
minps
mov
fwait
cmpsb
adc
adc
test
in
push
or
adc
lret
subl
lea
rorl
jb
jo
loop
push
ret
pushl
movsb
mov
xor
sub
hlt
adc
ret
push
shll
mov
jno
add
fiadds
enter
cld
mov
push
sbb
mov
dec
xchg
push
andb
inc
jge
in
cwtl
popa
test
push
jmp
mov
dec
xchg
mov
test
add
call
push
add
add
add
pop
gs
test
jge
push
dec
repnz
cmpsb
dec
addr16
pop
idivl
push
adc
les
cmpb
icebp
sbb
dec
clc
xor
mov
cmpsb
xchg
repnz
loopne
sub
in
shlb
mov
jo
dec
popa
repz
pusha
inc
or
mov
fsubrl
out
clc
in
test
lcall
jae
mov
out
inc
inc
pop
lock
jo
dec
adc
mov
add
pop
shlb
mov
mov
add
popa
and
pop
mov
mov
mov
mov
mov
and
dec
push
pop
and
pusha
push
bndldx
fwait
dec
sti
icebp
pop
pop
lcall
fwait
loopne
leave
and
inc
push
adc
fisttpll
pusha
sub
pop
loopne
sbb
clc
movl
hlt
fmuls
dec
jmp
mov
ret
push
inc
loope
scas
out
repz
fbld
mov
fs
roll
stos
inc
popa
fcompl
incb
insl
pop
test
sbb
mov
ds
in
cwtl
lcall
xor
mov
scas
sub
dec
orb
dec
mov
bound
pushl
lods
mov
add
cwtl
mulb
mov
mov
loop
inc
rcll
jmp
fistps
add
inc
and
mov
xchg
push
sbb
mov
jnp
nop
pop
mov
repnz
cmp
push
mov
mov
mov
mov
test
pusha
loopne
bound
xor
in
insb
lods
pop
lods
incb
addb
fisttps
insb
xor
in
push
scas
jns
stc
lcall
push
mulb
sbb
addr16
add
cmpsl
clc
inc
test
decl
movsb
daa
jl
adc
jb
and
sar
mov
jbe
xor
dec
dec
rcrl
mov
mov
push
add
test
loope
or
sbb
lcall
adc
stos
jo
mov
loope
sar
xchg
adc
jecxz
ljmp
or
push
out
xchg
add
out
shrl
sub
out
add
in
and
cmp
xchg
jecxz
loopne
mov
movsb
pop
into
mov
cmp
jecxz
sbb
add
sti
ss
fcoms
jmp
pop
hlt
xor
pop
stc
in
sti
add
jg
subl
sarb
ja
add
shl
pop
cmpsb
lds
push
stos
jmp
cwtl
cmpsb
add
pop
imul
addl
or
or
pusha
push
xor
xor
jmp
add
xchg
mov
cmpsl
shlb
cmp
sbb
scas
out
mov
stc
and
test
test
inc
rcrb
or
sbb
loop
push
mov
lcall
adc
pop
add
je
or
xchg
or
jecxz
cld
fstpt
stos
adc
test
clc
imull
outsb
mov
and
pushf
rcrb
and
mov
mov
test
xor
sti
or
daa
testl
adc
cmpsl
leave
xchg
fcmovbe
out
dec
xchg
sar
sbb
or
stc
lock
pop
xor
mov
out
je
cmc
mov
out
push
inc
aas
pop
and
es
pushf
push
pop
adc
mov
outsl
and
mov
into
daa
sub
xchg
shll
xor
mov
rclb
xchg
adc
sub
dec
hlt
fbstp
pop
nop
test
push
push
jno
cs
stos
orl
dec
jne
adc
add
into
push
fcmovnb
mov
enter
pop
in
es
rcll
or
shlb
mov
xchg
cmc
ljmp
mov
sbb
cltd
cmp
incl
scas
xor
jbe
fwait
xchg
jno
andl
or
xchg
add
call
add
adc
cmp
xchg
imul
cmp
inc
or
pop
hlt
inc
xor
xchg
jns
pop
fistl
loopne
xlat
adcl
js
repnz
sub
je
xchg
popa
mov
mov
jg
call
leave
lret
push
aas
dec
test
insl
add
push
ja
adc
add
int3
cmp
add
lcall
scas
push
adc
nop
outsb
shl
xlat
scas
jmp
imul
push
lea
aas
mov
imul
fsubp
jmp
inc
mov
nop
icebp
das
mov
xchg
ret
pushf
mov
in
cli
hlt
cld
xchg
jp
das
add
jb
pusha
inc
xlat
sbb
xchg
rcll
push
sahf
add
xchg
mov
cli
and
mov
popa
imul
mov
scas
xor
pop
nop
js
xchg
mov
hlt
pop
leave
adc
dec
sbb
jl
cmp
pusha
jg
add
rclb
imul
xor
scas
mov
cli
das
cld
xor
pop
cld
sbb
and
jl
jno
fnstenv
cmpsb
add
lea
lahf
popf
cmp
aas
cmp
or
shl
pop
push
faddl
mov
aam
outsl
decb
cmp
ljmp
cltd
clc
outsl
cmpb
mov
mov
mov
aam
jg
das
add
arpl
stos
jle
mov
and
mov
jle
cmp
lcall
dec
add
xchg
arpl
dec
aas
pop
push
mov
add
fdivr
lods
hlt
cmp
jecxz
jmp
cmp
mov
das
andb
jmp
xchg
negb
mov
ss
add
test
popa
add
or
jb
clc
jge
jo
xchg
xchg
outsb
cmp
incl
or
cli
xchg
add
pop
jns
fcoms
imul
js
outsb
sahf
and
roll
dec
lea
das
les
and
subb
cmp
and
jnp
dec
mov
adc
mov
sbb
int3
cmc
lods
lea
sti
test
mov
push
insb
adc
in
fdivr
mov
aad
test
sub
cli
daa
cwtl
pusha
cmpb
shrl
jl
into
loope
loopne
sti
sarl
movsb
push
xchg
mov
mov
add
rorb
xor
imul
int3
sbbb
loope
mov
cmpsb
adc
loope
lds
sbb
repz
es
fs
mov
es
and
aaa
orl
enter
fwait
scas
lds
adc
cmpsl
dec
ja
fstpl
clc
push
xor
scas
jp
mov
shl
ja
inc
ficompl
stos
test
cmp
icebp
jge
jo
mov
or
outsl
shlb
aas
mov
inc
dec
ds
test
push
movsb
mov
sub
pusha
ret
fiaddl
push
push
in
pop
or
jmp
add
mov
mov
repnz
repnz
adc
adc
ret
push
lahf
sbb
test
or
xor
jl
shl
sub
cld
xor
out
pusha
fsubrl
lret
mov
push
mov
cld
jbe
lods
sbb
push
pop
mov
jg
repz
xchg
loop
cmp
loop
mov
and
xor
pusha
inc
xor
lret
fwait
jbe
popa
imull
jo
inc
fiadds
mov
dec
xor
mov
mov
push
test
pop
jo
pop
sahf
mov
inc
jmp
mov
sub
dec
mov
add
jg
stc
sub
xchg
sub
decl
sti
fbld
dec
mov
test
pop
add
ss
je
fs
add
pop
std
add
xchg
test
adc
aam
mov
or
movsl
xchg
xchg
or
mov
je
lahf
sarb
add
inc
rolb
in
out
cli
es
flds
xchg
mov
xchg
pop
adc
xchg
loope
sbbb
mov
mov
js
loopne
pop
or
xchg
int3
add
nop
push
or
movsl
call
sub
movsb
daa
dec
arpl
sub
decl
fcomip
or
imul
jmp
fldt
rclb
addr16
jge
cmpsb
ds
or
test
pusha
push
int
mov
add
pushf
adc
dec
push
adc
fcomps
mov
ljmp
xor
loopne
xchg
mov
mov
sbb
add
inc
cltd
sub
dec
mov
xor
mov
adc
nop
loopne
pop
roll
pushf
out
mov
jo
mov
mov
push
lret
xchg
andl
sub
neg
cmpsb
stos
ss
cmp
pusha
rcll
pop
outsl
fidivs
xor
lcall
inc
loope
inc
roll
cmpsb
dec
and
sarl
jecxz
cld
nop
and
pop
mov
stos
fs
mov
mov
fidivl
or
jnp
mov
xchg
add
xchg
rorb
ret
scas
clc
bound
jp
mov
ljmp
in
xchg
fucom
dec
xlat
scas
push
mov
inc
ds
cwtl
outsl
cmp
clc
clc
inc
sub
lcall
xchg
hlt
ss
inc
nop
addr16
in
gs
insb
sar
xchg
incl
rorb
je
and
in
or
xor
pushl
and
cmp
clc
mov
mov
push
push
adc
jp
ret
push
sbb
push
adc
dec
rcrb
fisubl
cmp
and
add
push
mov
xor
fsts
or
push
jge
or
mov
scas
adc
jmp
sahf
or
cmp
sub
add
xor
cmp
xchg
das
inc
out
push
push
sbbb
cmp
ds
fldt
movsl
movsb
fs
add
pop
push
and
xchg
ljmp
or
sarb
sti
push
loopne
dec
cmpl
jg
dec
push
sub
fs
or
xorb
adc
lcall
add
imul
adc
les
loop
cli
hlt
push
ss
in
pop
push
cs
add
jo
shrb
jno
jbe
repz
dec
subl
cld
inc
outsb
in
jns
lock
mov
cli
loopne
int3
xor
xor
fdivp
aad
xchg
rolb
nop
sbb
pop
hlt
data16
scas
cwtl
push
jbe
in
xor
dec
fwait
ds
adc
push
and
call
std
sub
xchg
push
adc
jo
sbb
adc
add
lds
sar
icebp
inc
and
add
imul
mov
insl
addr16
cli
or
push
test
mov
lds
cmp
repz
pop
push
sub
mov
aam
sub
pop
mov
add
adc
or
mov
xchg
cmp
lods
das
loop
sbb
nop
scas
ljmp
test
mov
mov
scas
shll
int
add
dec
addr16
pushl
mov
push
cmp
inc
testb
inc
inc
loopne
mov
mov
or
mov
stc
inc
pop
subl
pop
int
pop
dec
aad
push
adcl
stos
cmc
add
pop
add
sarb
push
mov
sbb
mov
inc
ret
mov
enter
loope
ja
jmp
sub
jg
mov
andb
arpl
stos
mov
fcoms
add
rorb
mov
ret
cmpsb
mov
clc
mov
sub
leave
xchg
dec
inc
addb
cwtl
adcb
jl
lcall
jge
lcall
sahf
xor
inc
pop
mov
pushf
sub
adc
sarl
dec
shll
inc
and
pop
xor
mov
out
fs
inc
movsb
fldl
xchg
lahf
adc
pop
push
enter
add
jnp
xchg
cld
mov
xchg
add
push
push
xor
xchg
lds
mov
movsb
inc
xchg
out
inc
mov
push
mov
or
sub
push
fwait
subl
xor
negb
cli
rcll
pop
jmp
rorb
or
test
int
push
mov
cwtl
ss
popa
loope
xor
call
incb
jp
jns
outsl
ss
incl
fucomi
push
test
add
sbb
add
movsl
cmp
push
fdiv
out
jo
sub
or
inc
mov
fs
loope
ret
pop
sbb
andb
push
jo
mov
cld
adc
stos
inc
xor
push
adc
push
fs
incl
lret
cmp
inc
xor
pop
push
lods
pop
push
mov
lock
mov
cmp
mov
ljmp
mov
imul
xchg
lock
xchg
out
stos
and
pop
cmp
add
mov
ljmp
movl
push
mov
popf
inc
cmp
test
cli
adc
add
mov
lea
pop
adc
aad
push
dec
call
loop
lock
ret
mov
adc
jmp
jle
add
cmp
and
cmp
leave
das
nop
xchg
sub
jg
subb
jg
pop
sahf
mov
flds
or
push
pop
or
stos
lods
rolb
push
inc
mov
xor
jbe
or
jo
ljmp
mov
mov
xchg
and
push
int3
sbb
xor
sahf
cmc
ss
test
out
mov
cmp
jne
popf
xor
push
xor
rcrb
mov
inc
push
sbb
cmp
nop
pop
fs
xchg
inc
sub
mov
add
roll
mov
push
add
fimuls
or
sarl
dec
mov
out
inc
into
cwtl
push
pop
jle
cmpsl
pop
shll
cmc
add
rcrb
fincstp
push
test
movsb
mov
add
sbb
pushf
es
xchg
decl
out
add
push
leave
mov
mov
imul
jecxz
ljmp
jmp
test
call
jge
fnstsw
fiaddl
test
cmpsl
js
or
add
jns
or
push
lods
lds
sbbb
xchg
mov
call
addr16
mov
jbe
or
repnz
js
imul
adc
jbe
incl
dec
mov
cli
push
xor
push
out
adc
cmp
sub
les
cmp
xchg
in
aad
adcb
loop
sub
sti
adcb
psllq
jo
and
inc
add
lcall
push
test
mov
jne
outsl
mov
or
movsl
aaa
inc
arpl
or
cli
dec
clc
fisttps
rcl
fwait
imul
add
imul
jge
ja
ss
xor
pop
mov
or
fsts
mov
push
mov
xchg
fs
mov
test
xor
cmp
pushl
push
push
xchg
jo
mov
out
ret
inc
test
insb
lret
cmpl
mov
lret
insl
push
mov
push
adc
cmp
cs
aas
push
xor
sub
jg
cmp
mov
mov
nop
ljmp
dec
lahf
pop
call
fs
mov
mov
rcl
add
adc
fs
dec
sub
push
fmull
pop
testb
xorl
cld
add
add
add
cli
out
push
in
sahf
insb
add
sub
fistl
subb
mov
sti
inc
or
sbb
rorl
add
inc
data16
daa
sub
icebp
or
ljmp
push
pusha
xchg
mov
add
cli
xlat
fwait
hlt
ja
push
test
lret
movsl
mov
call
add
dec
outsl
inc
mov
test
popa
push
dec
mov
mov
and
mov
mov
sub
mov
js
add
adc
loope
adc
mov
cli
jg
sub
loop
out
adc
pop
and
arpl
mov
xor
fdiv
imulb
fidivs
adc
jg
dec
jnp
bound
and
mov
inc
push
inc
inc
icebp
aad
dec
stos
dec
cli
adc
push
std
adc
pusha
mov
out
aad
rcll
loop
aaa
aas
mull
mov
sub
fstpt
ffree
inc
add
in
jnp
add
stc
loopne
push
dec
std
push
stos
clc
cmp
and
sub
cmp
jb
xor
add
push
or
sub
push
lock
incl
or
add
enter
lods
aad
sbb
sbb
inc
xchg
pop
loopne
loope
jo
dec
jmp
lock
scas
icebp
call
ss
adc
pushl
lret
dec
and
inc
clc
mov
das
mov
out
cmpl
cmp
adc
sahf
das
fistpll
push
sbb
xor
leave
adc
pushl
jmp
jnp
pop
dec
xchg
cli
jge
lods
loopne
cmp
js
pop
adc
ficomps
int
pop
jg
push
mov
fistpl
aas
rol
in
add
mov
adc
in
lock
ret
mov
and
jmp
mov
mov
rorb
lret
cs
push
sub
xchg
pop
push
shl
xchg
dec
insl
push
xor
fwait
repz
cmp
dec
fisttpll
cld
add
sub
cmp
jmp
sbb
xchg
push
adc
cltd
push
or
pop
insb
dec
xchg
xchg
xchg
pop
pusha
stos
sub
out
jbe
stc
lret
imul
cmp
jno
pop
cmp
les
pop
cmp
pop
xchg
in
or
js
and
hlt
aam
xor
mov
jg
decb
pop
fbld
arpl
inc
cmp
mov
add
jo
and
fdecstp
xor
lcall
mov
cs
inc
mov
leave
andl
fcompl
dec
jb
rclb
cmp
cmp
out
aad
jl
fwait
lcall
push
daa
fwait
add
inc
add
mov
sbb
and
mov
cmp
or
or
add
js
ljmp
data16
jae
add
pop
imul
xorl
mov
fcom
icebp
idivb
pop
sbb
sub
lea
cmp
push
in
cmpsb
aad
fwait
pop
cmp
push
add
mov
repnz
dec
ljmp
lock
movsb
cltd
test
fsubl
add
add
add
loopne
ror
inc
jp
cmp
jle
pop
roll
mov
aas
cmp
xchg
iret
push
inc
sti
add
mov
cmp
cmp
rorl
sbb
pop
pushf
sub
add
adc
push
fdivrl
add
cmp
decl
xchg
in
out
dec
push
lret
fnsave
popl
add
add
sbb
scas
mov
mov
imul
out
rorb
xchg
mov
inc
mov
gs
jno
dec
or
sbb
nop
fldenv
lods
add
mov
push
hlt
lcall
mov
sub
hlt
lods
or
push
xor
in
sub
sub
mov
lcall
test
push
fwait
sbb
mov
push
or
jecxz
adcb
negl
clc
mov
pop
dec
or
fisubs
clc
ds
mov
jle
mov
add
lock
icebp
into
inc
arpl
pop
adc
sub
or
xlat
mov
dec
rcrb
fcmovbe
mov
xlat
filds
jb
hlt
dec
xor
sbbb
jne
ds
xchg
loopne
push
or
sbb
imul
cmpsb
cmp
sub
dec
mov
enter
enter
test
adc
inc
adc
dec
fadd
adc
inc
sbb
add
adc
int3
or
sub
or
sub
int3
dec
push
xchg
ret
or
mov
xchg
mov
out
ret
sub
cmp
cld
lcall
mov
mov
sbb
inc
mov
pop
jg
pushl
out
or
test
sbb
fcoml
push
hlt
shl
cmpsl
or
mov
inc
pop
cld
lcall
movsl
push
pushf
aam
lcall
repnz
lfs
mov
adc
fs
fmuls
sub
xor
stos
ljmp
xchg
push
sbb
mov
pop
in
pop
bound
sub
pop
dec
inc
rolb
xor
adc
hlt
cld
jg
push
aas
test
test
xchg
or
sub
ja
je
cmp
xor
notl
mov
push
xchg
lock
jns
adcl
aad
leave
xchg
mov
cld
and
and
mov
push
jns
aad
ret
in
add
sbb
cltd
and
inc
icebp
stos
push
xchg
xor
mov
mov
push
or
jg
rolb
inc
push
ficompl
int3
push
test
enter
std
adc
or
inc
neg
push
jmp
sbb
dec
jo
inc
dec
mov
cmc
pop
call
mov
cmpsb
add
pop
push
or
lcall
push
icebp
aas
pushf
adc
push
pusha
je
aas
adc
or
cli
lds
fiadds
sbb
test
mov
lock
inc
xor
adc
mov
pop
lret
inc
xchg
nop
and
test
mov
repnz
sbb
lds
mov
into
sub
xchg
inc
shll
fs
dec
inc
xchg
clc
mov
mov
outsl
aad
add
sub
incl
repnz
fistps
xor
ss
mov
sub
out
sub
nop
es
pusha
inc
pop
lock
mov
addr16
inc
add
sbb
mov
ss
js
cmp
sarl
cld
lods
nop
stos
xor
and
bound
ret
cwtl
push
and
sbb
add
dec
cld
fisttps
mov
outsb
pop
add
and
mov
lea
add
loop
mov
jle
cmp
arpl
inc
jno
call
sub
aam
push
sbb
fidivrl
inc
adc
xchg
aam
outsl
es
push
mov
mov
sub
incl
test
ds
cld
cwtl
jns
mov
dec
mov
dec
add
mov
pop
pop
mov
xor
stc
or
and
sub
shl
jbe
jbe
call
call
mov
push
pushf
inc
ret
sbb
rolb
lret
push
push
or
stc
xchg
sbb
out
test
mov
sub
ja
rclb
lods
decb
pushw
mov
xchg
mov
fbld
cwtl
push
push
paddd
je
xor
jl
add
in
scas
cli
sbb
push
aaa
mov
add
aas
aam
roll
fisubrs
sbb
arpl
ss
nop
loopne,pn
dec
test
stos
incl
cli
cwtl
loopne
ficoml
add
ds
jb
decl
ja
push
adc
and
subl
pusha
jl
mov
stos
or
add
add
les
xchg
mov
call
fstl
ret
mov
push
add
sub
push
enter
das
pop
js,pn
cli
and
in
arpl
xchg
push
jnp
inc
jmp
push
xor
jg
and
cld
incl
sahf
leave
jae
das
cmp
inc
mov
sti
hlt
and
fisttpl
push
outsb
loopne
and
mov
repnz
jno
enter
pop
xchg
or
cli
xchg
das
or
mov
mov
ret
insb
adc
ficomps
scas
jg
lea
nop
test
fldt
push
popf
add
inc
lods
cmp
lods
jno
sbbb
popa
xor
or
push
fldl
xchg
enter
mov
imul
mov
mov
cld
xor
or
jns
in
and
pushl
stos
imul
mov
mov
dec
cwtl
add
inc
mov
and
push
mov
push
mov
inc
or
and
imul
in
dec
adc
out
cli
add
fwait
mov
mov
sbb
mov
addb
dec
mov
jo
xchg
pop
push
jge
mov
incl
pop
scas
mov
and
in
cld
sbb
mov
pop
mov
add
movsl
inc
pushf
add
dec
std
outsl
clc
mov
popf
sbbl
adc
xchg
fs
jecxz
pusha
mov
js
inc
mov
rorb
loope
mov
clc
data16
addb
mov
je
scas
adc
pop
dec
dec
mov
cld
and
stc
add
push
sahf
mov
pop
pop
lea
push
lret
loopne
or
or
inc
sarb
stos
xchg
adc
addb
add
ljmp
jae
loopne
lods
enter
out
sbb
jp
pop
arpl
lret
cmpsb
lcall
in
inc
xor
inc
data16
or
add
mov
inc
out
fmuls
cli
add
lock
cmp
or
pop
popa
pop
lock
adc
outsl
decl
dec
adc
mov
mov
xor
sarl
sbb
mov
call
xchg
cmp
aaa
in
jmp
fcompl
lret
dec
sub
pop
outsl
scas
js
outsb
sbb
push
mov
or
mov
inc
out
std
leave
movsb
imul
inc
loop
bound
repnz
sbb
cmp
or
dec
scas
xor
mov
test
ja
mov
xor
mov
mov
sbb
adc
jb
xchg
xor
std
sbb
mov
andb
push
bound
jnp
mov
cmpsb
pop
xorb
adc
sbb
ljmp
fs
mov
sahf
shlb
iret
int3
cmpsl
inc
or
ss
lcall
push
stc
cs
mov
inc
ret
jae
or
cmp
cmp
or
xor
testl
jb
out
push
mov
arpl
leave
xor
popa
and
test
jle
subl
sub
loop
inc
mov
xor
sbb
and
jae
push
cld
or
cld
pop
imul
cmp
mov
sbb
fbld
je
test
xchg
and
cmp
adc
and
mov
mov
or
mov
lret
add
ret
mov
test
lods
stos
jmp
xor
dec
aad
pop
xchg
mov
mov
cmp
push
mov
xchg
adc
pop
and
push
mov
into
dec
test
or
out
lods
adc
stc
pop
ficomps
jge
ds
cmp
pusha
icebp
out
add
fisttpll
cs
inc
sbb
xchg
pop
daa
pop
cmp
and
cmp
imul
pop
cli
testl
ret
clc
lock
jecxz
xchg
cmpb
hlt
fcoml
push
xor
sub
mov
clc
push
pop
inc
jns
cli
mov
out
js
inc
mov
inc
hlt
stos
mov
add
sub
hlt
mov
aam
dec
jle
xchg
push
ljmp
pop
dec
push
mov
and
xor
adc
jg
mov
repnz
lods
adc
ret
ss
jnp
and
jg
add
nop
iret
inc
ret
fbstp
stos
sub
jo
mov
jo
lret
addb
sub
enter
lcall
xor
roll
xchg
jg
push
jmp
lock
test
mov
js
cmp
mov
scas
fcomip
dec
xchg
rorl
mov
or
dec
insb
inc
shlb
fmuls
adcl
repnz
xchg
sahf
shlb
js
lock
xor
adc
fcoms
mov
add
movsb
sbb
fdiv
jg
movsb
adc
push
sub
add
mov
pop
sbb
dec
push
xlat
leave
jmp
cmpl
movsl
jnp
decl
ret
lds
push
fadd
scas
addl
inc
sub
js
dec
fildl
sahf
loop
add
add
jl
inc
inc
and
sbb
mov
icebp
insb
lock
jbe
sub
notb
imul
and
add
cwtl
xor
push
aas
aam
cmp
xor
negb
cltd
xchg
repz
repnz
and
fidivs
fadds
add
cs
sbbl
movsl
sbb
push
push
push
mov
bound
mov
mov
xorb
lret
and
enter
rclw
ljmp
pusha
dec
mov
cmp
sbb
jne
call
mov
lock
ljmp
shlb
xlat
inc
fs
xchg
cs
idivb
or
inc
cmp
adc
mov
stos
stos
mov
lret
add
jecxz
cmpsb
sbb
das
jb
cmp
popf
shlb
adc
add
mov
cld
push
xorb
jo
cmp
sub
and
jbe
cltd
loopne
xor
dec
enter
dec
mov
daa
add
rcrb
cmp
shlb
xchg
push
mov
dec
and
outsl
inc
pop
push
popa
push
fdivrs
mov
add
mov
mov
mov
sub
icebp
mov
aam
nop
xchg
sbb
inc
jae
fidivrl
xor
sbb
sub
rol
mov
sar
enter
movb
sbb
or
lods
inc
mov
cmp
inc
imul
pop
imul
mul
lods
jle
xchg
push
sti
or
xor
push
adc
mov
enter
sub
shlb
mov
and
in
ret
stos
dec
xchg
shlb
cwtl
push
cli
xchg
push
pop
loope
mov
stos
std
adc
mov
xabort
mov
push
clc
add
cmp
andb
jecxz
or
mov
push
dec
lods
aam
lcall
ss
mov
rcrl
and
mov
aam
das
push
and
xor
mov
sub
cmp
sub
roll
inc
andl
rcrb
add
arpl
adc
call
outsl
ja
xor
sbb
cli
jecxz
mov
movsl
mov
xchg
es
fistps
sahf
xchg
sbb
add
push
roll
fidivs
sbb
sub
outsl
mov
aas
mov
xor
jb
cmpsl
push
in
lock
fs
shlb
sbb
jno
adc
shrl
adc
adc
fists
jg
push
jns
ret
cmc
xchg
and
or
mov
test
sbb
mov
xlat
sarb
aas
repnz
shll
ret
sub
cs
jb
lret
push
mov
jo
pushf
into
jns
or
xchg
push
mov
push
push
stos
push
cld
cli
incl
dec
adc
lret
test
adc
adc
cld
movsb
ss
pop
es
shll
jg
sbbb
int
jge
loopne
cmp
xchg
lds
ss
push
mov
incl
mov
push
pop
fwait
cs
cld
ja
push
mov
inc
add
push
mov
call
rcll
movsl
push
aam
ss
sti
jg
hlt
clc
fstps
add
ds
std
arpl
imul
leave
rorb
jg
pop
adc
jmp
adc
out
inc
push
mov
push
mov
es
mov
mov
jl
sub
push
orl
je
sarb
imul
xchg
iret
and
xor
jnp
mov
icebp
test
mov
mov
mov
es
stos
mov
stc
and
in
clc
sub
dec
add
in
adc
push
add
mov
pop
mov
jg
cld
mov
iret
xor
mov
jg
aaa
adc
mov
outsl
stc
xchg
test
add
push
aas
add
sarl
je
int3
scas
cli
cmpsb
ljmp
mov
bound
ljmp
ror
inc
call
mov
js
adc
out
cmpl
gs
fldenv
out
call
jo
sub
adc
sbb
jecxz
outsl
data16
add
pop
or
lahf
xchg
jp
xor
aam
call
jb
hlt
mov
insb
fdiv
cld
or
aaa
cld
mov
loop
in
cmp
pop
cmpl
js
test
inc
mov
ja
sub
sbb
xchg
nop
es
xor
or
call
call
movsl
mov
mov
mov
adc
adc
ja
sahf
push
mov
mov
in
cmp
nop
das
mov
sar
xchg
pop
and
mov
out
sbb
mov
push
xor
or
test
in
pop
int
push
xor
mov
jp
ja
pop
repnz
gs
mov
xchg
pop
push
loop
inc
and
pushf
add
scas
loop
dec
xchg
loopne
les
stos
inc
mov
leave
into
aaa
inc
mov
cltd
xchg
dec
pusha
pushf
push
adc
add
dec
hlt
adc
and
and
aaa
idivb
test
test
add
pushl
jg
ret
mov
je
adc
jne
inc
cmp
test
lds
jns
ret
mov
cwtl
sub
scas
and
cs
outsl
sub
add
add
jecxz
movsb
jo
dec
notb
loopne
or
pushl
popf
clc
lds
rolb
popa
adc
fs
imull
xor
fists
cmc
adc
xchg
and
sub
cmp
lret
jmp
cmp
roll
movsl
aam
insb
lcall
xchg
imul
pop
adc
dec
and
and
pusha
mov
pop
mov
xchg
mov
ret
addr16
or
inc
inc
lods
ds
aaa
notl
dec
lahf
nop
scas
xchg
cmpsb
stc
adc
sub
insb
les
stos
out
and
repnz
test
jbe
adc
call
add
jnp
out
xchg
aam
mov
xchg
mov
mov
repz
jns
and
call
ss
incl
xor
jle
mov
jl,pn
icebp
clc
add
testb
loope
adc
icebp
push
cwtl
adc
fs
mov
movsl
bound
mov
insb
mov
or
hlt
xchg
hlt
std
sarb
mov
lods
cltd
inc
jnp
test
sub
dec
fsubl
daa
insb
inc
add
xchg
clc
push
sbb
orb
incl
xor
xchg
and
xchg
add
dec
pusha
mov
push
pushf
test
mov
fcoms
xor
call
mov
adcb
in
sub
mov
xchg
push
inc
or
ret
mov
pusha
shll
push
mov
jl
call
nop
pop
ret
and
nop
cld
add
push
das
add
mov
inc
mov
xor
mov
lock
jo
cltd
xor
icebp
aas
int3
test
xor
ds
loope
mov
pop
rcrl
sahf
fsubl
clc
repz
mov
out
xor
push
js
mov
out
dec
aaa
in
jne
xor
fs
mov
fwait
xchg
stos
pop
dec
es
push
sbb
or
shr
xor
push
ljmp
push
testb
dec
pop
and
push
incl
adc
test
loop
pop
data16
mov
ljmp
pop
mov
stos
push
add
sbb
add
mov
jmp
mov
aam
das
adc
test
cmpsb
push
xor
or
adc
cmp
outsl
sub
or
daa
cmp
pop
dec
adc
dec
int
lock
decl
dec
ja
pop
adc
dec
pop
sub
out
stc
lds
mov
call
sarb
aas
fimuls
mov
rcrb
imull
or
xchg
jo
jl
sti
push
sub
lcall
leave
gs
inc
pop
sub
mov
mov
sub
sbb
dec
sbb
jno
lret
jo
fsubr
call
std
cli
pop
inc
inc
inc
or
ret
mov
sbb
mov
push
ljmp
mov
pop
stos
lods
jg
cmc
leave
mov
and
pop
push
scas
clc
and
sub
sbb
inc
mov
push
xchg
test
or
jmp
jmp
addl
pushf
rol
subb
cmpsl
mov
aaa
add
cmp
dec
repnz
imull
add
cmp
mov
ret
loop
jo
sbb
xchg
jecxz
aaa
loop
pushl
pop
xlat
sbb
int3
bound
cli
add
cmp
dec
lcall
push
jo
mov
nop
jl
stos
jg
imul
inc
sbb
mov
mov
or
adc
add
xchg
jnp
inc
pop
std
cmp
mov
push
mov
mov
ds
xchg
add
rcll
mov
ds
fcoml
or
mov
bound
push
notl
push
push
in
aam
scas
jl
pop
jg
cmpsl
xlat
cmpsl
int3
in
das
cmp
sbb
jbe
push
rolb
fs
std
cli
pop
sbb
and
add
cmp
call
stos
push
ljmp
cld
fildll
insb
in
incl
pop
inc
or
into
sub
dec
clc
xlat
test
or
pop
gs
bound
fstl
mov
mov
iret
cmc
enter
adc
mov
mov
scas
lcall
rol
xchg
stos
dec
popf
or
sub
mov
dec
mov
subb
ficoms
push
sarb
bound
scas
insb
cmpsl
fisttps
or
mov
lret
insb
sub
add
int3
fsts
pop
pop
inc
sub
daa
adcl
arpl
fidivrl
rcrb
mov
movsb
clc
inc
xchg
and
shlb
fcmovnb
push
rcrb
sarb
pop
dec
pop
xchg
adc
lcall
cmp
ss
jbe
jo
movsl
call
mov
fwait
push
jmp
and
jno
das
mov
pushf
mov
sbb
mov
fs
leave
cmpl
lret
pusha
pop
push
push
lcall
cmp
or
in
fiadds
jmp
out
mov
ret
sub
ret
pop
call
push
dec
cld
jmp
push
adc
clc
add
adc
inc
decl
sub
add
ret
cmp
xchg
bound
lds
aaa
mov
popa
scas
mov
xor
push
mov
lea
test
ficompl
std
jmp
imul
mov
cmp
call
loop
sti
dec
in
mov
jl
xor
mov
inc
sbb
adc
aad
add
xchg
fcomps
popl
mov
decl
push
push
les
jbe
cmpsl
clc
xor
cwtl
or
mov
cld
repz
loope
sub
dec
test
cmp
sar
push
pushf
test
stos
inc
aaa
jne
push
push
mov
cmpsl
mov
stos
data16
xor
cmp
jo
cmp
mov
or
mov
jbe
or
cmp
mov
or
shl
sub
loop
call
fidivl
imul
or
pusha
pop
pop
clc
push
xchg
push
inc
ljmp
mov
xchg
and
dec
ret
dec
push
mov
data16
je
filds
aam
push
fidivrl
pop
mov
or
test
loop
call
pushf
movl
cld
jmp
out
cmp
xchg
jns
lea
aas
xchg
jmp
mov
mov
and
cwtl
adc
jmp
sbb
and
nop
sbb
ret
dec
lock
test
push
mov
pop
es
std
ror
ljmp
nop
or
add
clc
das
clc
shl
loop
adc
pop
xchg
push
lds
cli
add
frstor
inc
daa
inc
movsl
cmp
mov
cmp
xor
lods
sub
insb
andb
mov
or
mov
dec
outsl
add
sti
dec
shrl
std
in
imul
push
jle
outsl
push
loopne
jbe
bound
add
les
dec
sahf
sub
sbb
out
stos
xor
mov
fcomip
ljmp
into
cltd
int3
test
mov
adc
jno
pop
dec
jmp
call
cld
nop
and
push
leave
or
or
pop
push
pop
push
enter
cmpsl
adc
mov
stos
xor
lods
mov
outsl
clc
lock
cmp
maskmovq
testl
adc
mov
mov
mov
lock
and
in
push
adc
repnz
fstpl
shll
pop
adc
call
and
insl
sub
xchg
repnz
jb
in
mov
movsb
je
and
jp
cs
aaa
add
test
orl
decl
shl
mov
mov
mov
jno
jge
mov
mov
xchg
shrl
jge
loopne
shlb
nop
sbb
inc
mov
addb
cmp
sub
pushl
mov
inc
imul
call
cmp
cltd
insl
mov
mov
mov
loope
add
cmp
add
sbb
sbb
popf
dec
inc
shlb
push
xchg
adc
mov
mov
dec
sub
test
jmp
mov
and
bound
xchg
push
or
dec
divl
push
jecxz
mov
lcall
pop
sub
sub
icebp
add
loopne
stc
orl
mov
rolb
loopne
fdivrl
mov
std
aaa
iretw
pop
sub
mov
jmp
ret
arpl
ret
or
sahf
je
mov
incl
dec
clc
bound
add
clc
mov
push
push
mov
jmp
dec
dec
mov
mov
call
call
mov
jnp
cmp
imul
fwait
scas
test
notl
fwait
clc
push
outsb
push
scas
mov
adc
sub
xchg
and
sbb
and
sahf
or
scas
out
pushw
imul
mov
iret
mov
sbb
cltd
pop
je
and
add
call
push
mov
adc
lret
test
push
jg
stos
ljmp
ds
add
add
adc
filds
popa
aam
mov
cltd
cwtl
mov
popf
test
dec
negb
adc
pop
push
incl
add
pop
adc
jo
orb
add
add
mov
lock
je
jno
out
cs
cmp
cld
adc
daa
bound
sti
jp
dec
stos
sub
mov
mov
pop
pop
push
cmp
and
pop
mov
jbe
pop
or
divl
sbb
pop
push
out
push
inc
rcrl
or
mov
cwtl
out
out
in
jmp
cmp
sti
cmp
and
stos
cmpsb
gs
sbb
dec
arpl
lret
inc
cmp
xor
push
push
sbb
sahf
mov
push
push
ret
je
shlb
dec
cmpsb
data16
repz
rorl
or
rorl
xor
addr16
jbe
inc
lea
enter
int3
in
test
cltd
imul
adc
in
push
cmp
xchg
cmp
jecxz
data16
aam
pop
inc
std
and
cmp
inc
loopne
ret
jbe
jl
jp
ljmp
cmp
cmp
shll
jg
jo
add
imul
cmp
push
loop
push
cmc
or
mov
xor
rclb
xchg
push
hlt
shrl
rorb
jmp
loope
lcall
dec
dec
add
add
andb
loopne
scas
mov
mov
push
js
xlat
lods
xchg
add
ja
mov
cld
enter
pop
dec
add
adc
loop
adc
mov
pop
push
and
lds
data16
in
mov
sbb
jge
add
xchg
data16
outsb
jbe
rol
lock
ds
add
lods
in
in
xchg
mov
lods
nop
xchg
cli
ficomps
inc
call
and
sbb
sbb
lock
mov
lret
cltd
mov
testw
ja
sbb
push
mov
int
mov
pop
dec
lock
xchg
sahf
je
les
ja
mov
pop
sbb
pop
pop
js
out
subb
cld
and
adc
cli
add
mov
jmp
adc
data16
mov
cs
js
cmp
ljmp
push
loopne
loopne
adc
sub
scas
mov
and
repz
insl
incl
adc
ficoms
into
int
adc
pop
loop
push
enter
ret
cmp
push
fdivrs
and
and
sti
push
cltd
push
cmp
cs
mov
xor
jge
stos
mov
ret
pop
mov
mov
fdiv
mov
movsb
arpl
icebp
fsts
sbb
fwait
pop
inc
add
xchg
pushf
jg
in
jnp,pn
aam
sarb
cmp
xorl
cmpsl
xchg
xor
mov
enter
pop
nop
out
lahf
and
rol
jl
ljmp
cmp
fs
push
int3
xchg
jb
insb
sbb
inc
sahf
es
mov
enter
pop
repz
fnsave
iret
xor
ficoml
aas
adc
jmp
dec
sub
mov
insl
inc
pop
testl
ss
cmpsb
jmp
pop
adc
xchg
pop
add
orb
mov
sub
mov
insl
mov
adc
fists
les
cmp
les
inc
into
aaa
loop
jle
insb
or
popf
in
add
cmpsl
jecxz
jg
das
addr16
pop
in
call
add
rclb
push
add
sbb
xchg
jle
loopne
push
fildl
push
into
sbb
push
push
and
adcb
mov
xor
push
stos
fidivl
ljmp
ret
push
cld
push
sbb
or
hlt
inc
cs
sbb
push
dec
lods
data16
out
xchg
jecxz
sub
push
lds
rcl
mov
repnz
sbb
inc
push
loop
arpl
out
push
pop
pop
mov
pop
jno
mov
icebp
imul
les
mov
fbstp
pusha
sbb
faddl
push
mov
ret
xchg
std
push
test
lea
movsb
mov
dec
pop
cmpsb
bound
add
xchg
add
test
push
daa
jecxz
mov
xchg
xchg
imul
jbe
mov
xchg
aad
xchg
mov
subb
xor
icebp
push
aas
adc
loopne
cmpsl
lahf
and
clc
outsl
pop
loopne
xchg
imul
mov
addr16
push
cmpl
xchg
loop
clc
add
aaa
adc
mov
pop
lret
xchg
jo
sbb
xchg
inc
jle
aam
mov
mov
fcomip
cmc
outsl
add
faddl
cmp
and
add
insb
adc
mov
jecxz
xor
call
push
or
dec
popf
and
add
je
xchg
std
fmulp
adc
stos
pop
pusha
add
mov
mov
popf
aad
xchg
inc
dec
jns
pushl
inc
push
push
jne
aaa
mov
xchg
fdivs
shll
aam
mov
inc
mov
pusha
mov
sub
nop
adc
dec
sbb
arpl
sar
cld
sub
aas
dec
xor
cwtl
mov
loop
in
push
mov
xchg
mov
mov
add
sbbb
add
dec
cmp
pop
clc
das
in
mov
pop
or
ds
insl
add
std
dec
loopne
inc
xchg
dec
adc
push
push
ljmp
dec
add
je
cmp
or
js
push
dec
les
mov
hlt
clc
add
addl
add
adc
push
sarb
imul
fmuls
insb
adc
inc
imul
mov
shll
pop
push
bound
ss
decl
adc
jge
or
lahf
push
push
out
pop
test
inc
lahf
fucomi
add
clc
outsl
nop
sbb
mov
mov
add
mov
push
mov
fst
loope
scas
mov
test
mov
sbb
les
add
ljmp
pop
push
dec
push
test
inc
sub
sub
cmp
stc
pop
pop
jne
push
sbb
dec
fildl
pop
mov
dec
or
xchg
lock
dec
out
mov
sub
mov
pop
and
arpl
dec
sar
jp
mov
ljmp
shlb
lcall
fcmovnbe
das
fiadds
cmp
push
xchg
pushf
add
mov
mov
xor
dec
pushf
sub
or
bound
icebp
lcall
jbe
inc
push
cmp
out
jle
loopne
popa
inc
adc
mov
in
xchg
inc
xor
sub
mov
repz
dec
imul
andb
and
lahf
mov
xor
test
xlat
cmp
sub
mov
add
mov
ds
sbb
jecxz
mov
xchg
cmc
or
cld
and
cli
nop
jns
push
mov
dec
loopne
popa
mov
xor
or
jecxz
test
test
loopne
xor
insb
daa
nop
js
aad
in
push
inc
cmp
xor
mov
mov
ret
push
bound
fwait
pop
icebp
pop
test
cmpsl
push
aam
fs
lahf
lock
mov
sbb
mov
inc
pop
adc
test
ds
dec
cmc
test
in
xlat
popf
repnz
xchg
adc
xchg
rcll
cmp
mov
mov
adc
mov
xor
mov
dec
adc
push
cmp
mov
sbb
mov
sub
jnp
js
or
or
cmpb
shl
pop
mov
cmc
data16
test
std
add
push
adcb
push
cli
call
sub
decl
add
stc
cmpsb
out
std
test
cmp
hlt
out
cld
scas
stos
iret
in
mov
and
out
pop
xchg
pop
pusha
aam
jmp
leave
sub
lea
enter
dec
cmp
push
mov
or
lock
scas
mov
sbb
mov
ror
loop
pusha
xorb
outsb
fwait
ljmp
jle
inc
ret
scas
enter
sub
and
sbb
mov
test
jp
dec
xchg
in
loop
xchg
xor
sub
mov
out
xor
mov
cs
rclb
jb
cld
loopne
mov
fadds
std
daa
add
lds
ss
adc
sbb
jl
loope
pop
jmp
loopne
jo
mov
mov
loope
fwait
xchg
shl
xor
pop
or
stos
push
int
dec
sub
test
jbe
ret
ret
sbb
std
orl
push
adc
mov
mov
cs
mov
mov
mov
sbb
add
sbb
cmp
test
xor
xchg
dec
repz
dec
pop
pop
pop
dec
add
test
sub
inc
adc
lods
outsb
xchg
aad
jmp
add
mov
mov
inc
psrlw
orb
scas
les
clc
sbb
xchg
mov
mov
cli
add
add
or
xchg
dec
bound
mov
fcomps
lods
or
in
cld
jg
int3
push
mov
mov
imul
jb
xchg
inc
inc
cmpsl
pop
faddp
popf
cmpsl
pop
adc
jo
push
decb
mov
aam
add
movsb
inc
xchg
ds
ficompl
loop
push
cli
fdivrs
mov
xor
adc
movsb
push
push
pop
sbb
jg
add
pushf
nop
sub
jb
adc
mov
xchg
lock
call
test
mov
lret
push
loopne
mov
aam
cld
mov
dec
in
jg
mov
icebp
popf
xchg
scas
ss
mov
clc
sub
mov
mulb
fstpl
aad
pop
jb
push
push
adc
ljmp
push
into
or
fdivr
ja
mov
stos
int
dec
jb
adc
ret
movsl
enter
cmp
lock
pop
je
add
add
sub
jg
jno
repnz
push
test
adc
push
adc
or
xlat
adc
inc
dec
test
sahf
adc
into
jle
repz
xor
or
push
add
in
es
inc
sbb
inc
pop
mul
call
stos
mov
inc
add
clc
gs
xchg
mov
xchg
ret
cmp
out
stos
inc
bound
mov
movsl
xor
mov
hlt
test
test
xor
jmp
lahf
add
pop
jecxz
xchg
or
ret
sti
out
test
ljmp
cmp
sbb
mov
sti
loopne
shrb
movsb
push
push
or
cmp
add
movsb
mov
mov
lret
push
enter
adcb
test
into
fisttps
xor
xchg
in
push
dec
add
repnz
call
and
add
es
test
or
repz
xor
jae
test
call
iret
mov
out
fstl
clc
dec
fwait
lock
mov
mov
adc
testl
lods
push
loop
rclb
cli
adc
cli
les
scas
ret
jl
subb
add
mov
dec
push
in
xchg
and
push
cld
add
outsl
mov
lods
sub
or
loope
push
bound
inc
pop
push
faddl
jne
call
shlb
sub
push
adc
sti
cmc
inc
xchg
loopne
jnp
ficompl
xchg
mov
dec
dec
pop
in
scas
mov
push
jge
pop
dec
mov
jmp
sub
lret
nop
pop
adc
mov
sbb
movsb
testb
leave
cld
aaa
insb
jbe
push
sub
dec
iret
cmp
imul
aad
call
push
int3
subb
cmp
fiadds
sar
sub
dec
ljmp
push
mov
adc
jmp
mov
push
jno
and
cli
int
pop
push
les
mov
pop
inc
and
jge
adc
jbe
shrb
fmuls
sbb
sbb
sahf
pop
lret
adc
or
cld
cwtl
dec
sbb
scas
cwtl
mov
out
nop
sbb
inc
add
popa
cli
or
imul
xlat
xchg
testb
xor
lret
outsl
jecxz
stos
mov
sti
inc
inc
lahf
inc
cmp
add
jo
mov
ret
adcb
das
fiaddl
data16
jo
or
dec
aas
add
fisubrs
es
push
ret
cmp
inc
aad
cmp
ja
pop
pusha
and
ret
push
lret
cmpsl
inc
ret
mov
ret
xchg
inc
xor
inc
jecxz
xor
add
mov
insb
add
and
push
inc
shl
mov
sbb
orb
jmp
addr16
xchg
push
cld
add
test
push
icebp
shlb
mov
mov
push
fs
fimull
mov
push
mov
mov
xor
and
mov
or
syscall
push
fldenv
xor
jne
xchg
loope
adc
addb
ja
clc
or
rorb
sub
adc
cwtl
mov
orl
lods
sahf
mov
cmp
jnp
xchg
jmp
rcrb
imul
mov
clc
mov
add
lock
pusha
into
je
sti
inc
sub
push
or
fsubr
mov
out
adc
jp
and
mov
icebp
loop
into
push
sbb
outsb
push
clc
xchg
push
jns
push
mov
adc
push
lock
mov
rclb
xor
cwtl
mov
aaa
mov
jl
mov
dec
inc
xchg
lea
mov
jmp
and
add
adc
ficomps
mov
sub
lret
stos
fldt
or
stc
adc
insb
mov
imul
mulb
aad
pop
sbb
add
test
add
scas
imul
inc
adc
xor
incl
pop
vfrczss
push
and
fdivrs
imul
cmp
aas
inc
or
adc
dec
jne
cmp
std
cli
into
add
jg
aas
pop
rorl
test
push
sub
xor
and
in
sub
outsb
sub
mov
inc
lock
cmpsl
and
mov
inc
cmp
sub
testl
scas
xor
fistpll
aad
mov
loope
pushl
push
and
jmp
dec
notb
loop
repnz
or
sbb
mul
popa
or
jg
inc
add
test
outsl
rclb
mov
inc
add
mov
and
cmc
popf
push
test
push
lret
sbb
fstpt
and
pop
dec
mov
adc
add
mov
jne
mov
test
jg
add
pop
clts
loopne
jns
hlt
aam
add
mov
mov
dec
or
pop
or
and
lret
insl
sub
push
adc
adc
pop
paddd
aam
push
lods
mov
test
push
rorb
inc
cltd
es
jne
fwait
out
icebp
es
mov
xor
dec
push
adcb
js
sub
mov
scas
add
lcall
leave
in
xchg
xchg
push
daa
enter
inc
neg
shr
clc
repz
out
jo
mov
mov
ss
xchg
repnz
jbe
test
jl
pop
sub
outsl
fidivl
and
push
mov
icebp
pop
or
cmpsb
ljmp
sbb
fstpl
inc
pop
fiaddl
push
int
sahf
or
push
xor
sub
xchg
or
pop
mov
ret
dec
test
add
jbe
inc
jecxz
rcrl
push
sub
jbe
mov
stos
lcall
repnz
nop
nop
insb
inc
decb
lahf
dec
imul
das
imul
mov
incl
cwtl
dec
add
imul
data16
loope
adc
push
fiaddl
or
test
sbb
push
mov
mov
dec
jg
xlat
add
pushl
bndstx
movsb
push
lods
loopne
aam
shrl
cwtl
rolb
cli
push
aaa
ret
mov
psubd
adc
mov
inc
ljmp
je
push
xlat
f2xm1
sub
jno
std
pop
punpckhdq
mov
sbb
stos
sbb
mov
int3
adc
push
jbe
xchg
xchg
js
call
xchg
and
jl
dec
leave
out
shl
xchg
lea
stos
data16
jmp
test
jp
out
mov
shlb
inc
daa
aad
in
inc
or
lods
in
fmull
cmp
sub
filds
xchg
int3
test
add
negl
xor
jb,pn
lret
int
sbb
adc
fs
adc
mov
sub
sahf
add
pushl
sub
fidivrs
mov
sbb
jmp
loopne
mov
or
mov
insl
or
test
inc
pop
loope
cmpsb
arpl
and
daa
xor
lea
pop
les
movsb
lds
into
xchg
es
xchg
inc
stos
xchg
jo
adc
in
aas
lcall
lock
dec
mov
rcr
ljmp
fs
push
add
add
push
xchg
dec
leave
pop
cld
jecxz
sar
in
push
out
jmp
mov
inc
xor
cmp
loope
mov
fiaddl
xchg
push
cli
mov
add
or
or
testb
dec
jge
data16
pop
jo
mov
and
inc
clc
push
outsb
jae
sub
adc
pop
js
sar
dec
mov
mov
mov
mov
mov
push
or
push
hlt
mov
lret
push
loopne
and
push
ret
cld
mov
in
fisttpl
es
or
pop
mov
add
sub
iret
adc
cmp
ljmp
clc
and
je
cmpsl
dec
sahf
lret
dec
fs
inc
ja
incl
push
mov
popf
imul
addr16
jecxz
lcall
sub
fdivl
adc
sbbl
test
orb
int3
vandps
jg
mov
adc
hlt
push
cwtl
mov
mov
es
mov
stos
mov
dec
ja
cmp
dec
incb
fsts
add
mov
test
push
daa
les
sub
inc
adc
std
jg
inc
add
and
add
add
rorb
mov
mov
mov
or
cmpsl
ja
mov
sub
test
call
inc
testb
das
or
sub
mov
call
std
decl
fs
ror
cmp
fwait
pop
lcall
inc
or
mov
sarb
xor
cltd
ljmp
mov
cmp
faddl
cmp
jno
xchg
mov
pushf
idivl
out
adc
movups
mov
mov
xchg
scas
js
lock
jecxz
mov
pop
mov
xchg
xlat
mov
lcall
pop
sbb
je
sub
xlat
push
jp
sub
shlb
in
and
cs
clc
movsl
ljmp
inc
sbb
push
repz
sub
fs
jle
shrb
inc
mov
push
dec
add
xor
mov
add
test
jg
gs
call
ss
mov
ja
add
push
push
je
cli
call
push
sub
add
jo
mov
cs
jge
adc
popf
mov
mov
pop
push
and
out
lock
iret
das
clc
ja
mov
adc
and
sbb
pop
test
add
pop
rcrl
loop
dec
aas
pop
push
mov
xchg
lcall
mov
insl
mov
inc
xchg
push
cmp
pop
cli
mov
mov
sbb
push
dec
in
add
lcall
popa
sbb
and
imulb
jg
and
into
push
gs
insb
aam
or
ret
add
cs
jg
inc
mov
test
scas
inc
xor
pop
je
jmp
je
loopne
fsubl
jg
pushf
xor
xor
mov
xor
push
fadds
lret
mov
pusha
push
push
invd
popa
test
xchg
add
dec
sub
mov
cmp
es
sub
cmp
mov
inc
push
xor
repnz
rcrb
popf
add
mov
ds
pop
icebp
pop
lret
fadds
ret
repz
ds
mov
lcall
sbb
mov
orl
les
jb
mov
and
loope
mov
js
pop
inc
repz
shlb
dec
les
push
xorl
aas
arpl
mov
and
xchg
and
scas
jl
decl
pop
nop
cwtl
movsb
adc
nop
lret
stos
sbb
add
js
mov
jmp
mov
adc
mov
mov
push
jno,pt
inc
leave
leave
clc
int
mov
sbb
jne
lods
add
aas
adcb
es
sbb
jg
inc
in
inc
push
xchg
or
adc
bound
cmp
jns
out
xor
int
incl
rcl
cmc
push
add
ret
jp
cmp
or
mov
addl
inc
call
sar
incl
push
add
mov
nop
mull
and
add
lret
dec
and
call
jne
and
stos
pusha
jbe
imul
lods
xchg
pop
clc
push
sbb
rcll
movhlps
test
mov
repnz
jle
aas
jp
outsl
push
push
sti
sbb
inc
sub
addr16
loopne
in
cwtl
insb
xchg
cmp
pop
push
mov
inc
sbb
cs
add
in
ret
xchg
decb
ret
cmp
dec
lods
into
je
and
adc
nop
sub
pushf
add
mov
out
insl
das
jns
xchg
pop
or
shlb
fildl
in
stos
add
dec
push
adc
push
sahf
insb
xor
add
mov
insb
add
add
cmp
sbb
test
scas
cmp
jns
je
and
arpl
mov
adc
data16
add
popl
push
or
and
and
xor
lahf
mov
mov
mov
sub
aas
ljmp
enter
movsb
pop
add
add
adc
jb
ficoml
lods
mov
xor
jle
jg
mov
inc
or
sub
call
insl
jnp
mov
cmp
aad
in
jmp
clc
movsb
shrb
sbb
mov
jbe
stos
xor
jmp
or
sbb
or
or
cmp
mov
ret
in
cmpl
jb
xor
add
or
cmpsb
cli
xor
pop
test
cld
pushl
insb
jmp
sarb
rorl
xchg
filds
jmp
out
aam
test
outsb
mov
jg
inc
xchg
lock
insl
fmuls
mov
pop
add
iret
xchg
out
xor
cmpsb
push
pop
insb
mov
or
cmpsb
push
clc
lds
mov
sbb
dec
xor
pop
pop
rcl
sbb
out
mov
pop
cwtl
or
stos
jg
decl
xlat
mov
adc
and
lock
xchg
inc
icebp
popf
jbe
call
into
and
iret
inc
shlb
out
add
arpl
and
cmp
fisttpll
dec
test
jmp
arpl
shrb
repz
adc
inc
pop
lret
enter
pop
mov
in
mov
xchg
std
ljmp
pop
or
push
cwtl
psubsb
add
cmc
push
sbb
jp
popf
mov
xchg
mov
jb
clc
xchg
in
inc
cmp
and
fists
cmpsl
call
push
xchg
xchg
sti
fs
mov
call
loopne
mov
jp
loopne
movsb
sbb
adc
pusha
in
out
adcb
add
jmp
call
or
pop
inc
inc
test
mov
and
decl
push
push
cs
cmp
lret
cmp
push
inc
xchg
pop
sahf
xorl
cmc
jl
int
inc
xor
or
xor
add
push
add
jge
add
or
fsubrs
adc
std
inc
adc
mov
ljmp
mov
bound
call
mov
mov
sbb
mov
mov
call
decl
push
cmp
xchg
push
push
popf
or
mov
js
ret
mov
es
addr16
clc
jg
mov
lret
jb
rorb
mov
push
add
ret
andl
pop
std
ja
and
outsb
or
fsubrs
dec
xor
pop
es
sbb
or
aad
push
std
mov
aas
into
mov
sbb
cmp
daa
stc
in
pop
or
xor
fiadds
xchg
adc
jl
lock
sarb
or
dec
or
inc
inc
in
jl
mov
pop
mov
into
aaa
rclb
push
sub
and
adc
fidivrs
call
mov
repz
test
sbb
lcall
loope
ret
or
adc
dec
push
xchg
xchg
icebp
cld
aam
shrb
aas
xchg
call
fs
add
enter
inc
xor
imul
pop
xor
cwtl
stc
in
ret
js
cmp
sbb
in
out
pop
push
xor
sub
add
mov
push
les
ret
fisubl
adc
dec
loopne
ds
ret
lret
mov
adc
mov
or
or
sub
sahf
enter
mov
sti
or
cwtl
test
sub
mov
mov
jb
cmp
pop
xchg
jno
dec
ds
aam
andl
loopne
inc
jge
and
sbb
jo
popa
dec
out
mov
ja
and
das
add
lock
imul
mov
sbb
mov
cmpsl
add
test
lock
sbb
dec
stc
mov
nop
sahf
xor
dec
push
outsl
inc
dec
inc
mov
loopne
shlb
test
orb
je
cltd
jbe
or
add
push
xor
sub
pop
ljmp
nop
cs
insb
cmp
and
pushf
sub
add
pop
cmp
stc
or
shrl
fists
cli
mov
mov
push
add
jl
outsl
stc
sub
scas
out
cmpsb
inc
shlb
sub
jno
sub
sub
cmc
xor
cli
inc
fisubl
push
cmp
cmp
rol
push
or
shrl
sar
cmp
iret
mov
sbb
adc
ficoms
pusha
sbb
inc
add
mov
int3
in
mov
lds
cld
es
call
jae
xchg
mov
lahf
and
push
test
xchg
jle
popa
sub
sahf
ror
push
inc
mov
pop
xchg
pop
mov
sbbl
popf
movsb
outsl
cli
mov
dec
add
or
es
std
int
aaa
into
mov
or
adc
mov
rcrl
dec
or
xor
xor
fisubs
aad
in
and
dec
cmp
jl
xchg
cmp
mov
mov
out
in
push
sbb
loopne
adc
fistl
jecxz
sbb
mov
lock
mov
dec
jno
cmp
mov
outsb
and
xchg
add
dec
addr16
jle
pop
pushf
fisubrl
mov
cmp
cmp
insb
fmull
hlt
daa
add
or
mov
orb
daa
xchg
inc
push
mov
call
mov
loop
pop
mov
jb
cmp
pushf
pushl
scas
in
add
std
faddp
pop
cmp
dec
mov
pop
clc
shl
addl
ss
inc
jge
hlt
dec
add
int3
add
dec
add
push
and
push
push
cmp
decl
inc
jmp
ret
stos
lods
push
call
push
out
lahf
jle
inc
pushf
icebp
mov
neg
pop
xchg
shrb
pop
and
test
xlat
adc
sub
repz
or
mov
cmp
lods
mov
mov
xlat
add
dec
adcb
popf
out
pop
jne
fldenv
lcall
xchg
call
f2xm1
loopne
cwtl
mov
xor
dec
shrb
or
ljmp
subb
into
sub
and
sbb
movsb
pop
nop
fs
inc
call
jg
mov
push
sbb
outsl
std
mov
xchg
pop
loop
cmp
das
mov
add
pushf
mov
mov
loope
outsl
push
add
loopne
adc
cmp
xor
ud1
loope
push
xor
mov
test
sbb
lret
enter
decl
jl
mov
stos
mov
addr16
inc
push
sbb
stos
in
inc
loopne
jecxz
sub
mov
cmp
dec
lods
lret
adc
push
adc
mov
cli
jp
pop
jl
sbb
pop
adc
jmp
loop
cmp
hlt
push
decl
cld
add
jl
pop
push
mov
test
shll
mov
lods
add
adcb
sub
mov
xor
cli
movsb
add
in
incl
mov
push
dec
lock
sahf
jecxz
clc
add
int
pop
push
lods
icebp
shlb
sbb
pop
dec
cmc
lods
lahf
cmp
dec
lret
cmp
mov
dec
cmp
sti
sub
incl
insb
xor
xchg
sbb
adc
mov
push
jno
xor
cs
add
fstpt
add
sar
jle
pop
dec
and
ds
fnstsw
xor
mov
cld
dec
jle
mov
ljmp
dec
ja
add
xchg
in
in
shrb
jmp
xor
cmp
sahf
mov
aaa
xchg
mov
add
xchg
and
shrl
mov
ljmp
mov
std
mov
shlb
adc
sbb
jno
sbb
mov
es
sub
mov
sbb
es
jl
jl
mov
clc
jne
push
add
popf
test
or
imul
hlt
pop
rolb
dec
jne
pop
mov
arpl
movl
xor
jl
pop
cmp
ja
jg
mov
jb
mov
mov
popa
pop
lock
cmp
mov
lret
clc
fs
scas
pusha
leave
pusha
pop
jecxz
adc
je
mov
cmp
mov
ror
jecxz
movsl
inc
adc
jns
cmp
fwait
inc
pop
or
adc
sbb
adc
cmp
inc
sub
les
aas
arpl
fmuls
push
jbe
pushf
lods
mov
dec
popf
dec
inc
xchg
decb
adc
adc
mov
and
mov
jmp
decl
mov
je
hlt
cld
nop
adc
in
nop
inc
adc
adcl
push
sbb
mov
das
je
mov
mov
jmp
push
es
xchg
bound
in
xchg
nop
inc
shll
fsubr
adc
push
scas
mov
xchg
inc
pusha
das
mov
jb
sbb
cmpsb
aam
mov
std
loop
mov
adc
les
sbb
into
jmp
pop
xchg
jecxz
mov
je
mov
jae
test
imul
rclb
loopne
cltd
cmc
cmp
xor
dec
xchg
mov
adc
sub
xlat
cli
pop
and
pop
adc
cmp
mov
js
cwtl
sahf
sti
data16
xchg
cli
pop
ja
push
jbe
ds
js
or
jg
add
sub
sbb
inc
mov
push
aas
aaa
ret
dec
xchg
dec
hlt
mov
jle
mov
fistpll
bound
xor
inc
xchg
pop
stos
je
jge
sbb
ret
push
das
push
xchg
jmp
jl
jp
shrd
pop
icebp
stos
mov
dec
inc
pushf
je
inc
shrl
xchg
inc
ljmpw
daa
in
lods
jbe
bound
inc
out
mov
xchg
test
mov
push
movb
fsubl
ds
cmp
dec
jp
pop
mov
dec
jecxz
sub
cmp
mov
orb
icebp
daa
push
push
and
push
sbbl
fistpll
add
dec
lcall
rolb
mov
cmp
aad
js
xchg
push
mov
cld
fbstp
negl
rclb
dec
repz
mov
mov
pop
test
xor
pusha
scas
inc
jno
push
xor
jno
lahf
scas
mov
shlb
mov
mov
mov
xor
sub
or
jmp
push
hlt
push
push
test
ret
pop
lahf
adcb
cmpsl
aad
or
xchg
pusha
jno
loopne
jg
sbb
add
sbb
stos
lock
adc
imul
fcmovnb
popa
jp
cmpsb
mov
inc
mov
mov
mov
xlat
and
jno
dec
lds
faddl
cs
dec
leave
add
jle
adc
mov
shrb
xor
push
dec
jg
in
call
cmp
dec
inc
adc
dec
sub
dec
mov
add
je
das
mov
rorb
loopne
sbb
fcomps
push
ds
and
add
jg
test
popa
sub
test
and
or
gs
cmpsb
nop
jp
loopne
sub
mov
insb
and
subb
mov
lods
repnz
jne
adc
xchg
mov
std
push
adc
inc
rorl
pop
cmpsb
add
adc
adc
pop
ret
push
mov
clc
cltd
push
cmp
pminsw
and
dec
ret
imulb
loope
push
mov
test
push
mulb
shrl
sub
mov
add
sahf
lret
dec
xlat
dec
sub
test
pop
jne
lock
es
icebp
mov
jg
mov
mov
fwait
push
push
and
daa
jmp
lock
jmp
and
lahf
pop
mov
outsl
cmp
out
mov
mov
mov
push
ja
in
add
out
repnz
fsts
xchg
push
mov
enter
scas
inc
rol
rcl
or
sbb
xlat
mov
push
bound
out
cmpb
jg
lcall
sbb
or
or
and
sub
push
add
es
jb
std
pop
stos
add
insl
mov
and
dec
cli
test
mov
and
out
dec
xlat
nop
mov
push
push
cmpl
pop
nop
int3
push
mov
cwtl
idivl
jo
pusha
push
loopne
pop
test
daa
pmulhw
and
or
mov
jecxz
lcall
adc
test
fs
adc
cli
cs
dec
ljmp
fdiv
in
inc
inc
mov
adc
mov
leave
jbe
js
cli
fucomip
inc
outsb
cmp
ror
in
dec
xchg
inc
out
inc
ljmp
std
dec
add
and
pushf
or
shll
es
mov
cli
fs
fsts
mov
jb
push
xchg
das
orl
loope
shr
add
lds
pop
cmp
jg
add
xchg
movsl
inc
push
or
sub
sub
decl
arpl
xor
test
mov
insl
mov
jns
sbb
sub
in
ret
cmpsb
addr16
add
lea
nop
xchg
loopne
hlt
xor
dec
cs
inc
xchg
popf
jge
cmpsb
lcall
sbb
cltd
mov
inc
fdiv
pushl
loope
and
sub
or
push
add
cld
pop
sbb
cmpl
or
les
push
ret
arpl
mov
pop
cmc
scas
fadds
notb
repz
sub
mov
xor
mov
inc
lahf
mov
cmp
mov
cli
sbb
stos
dec
ljmp
mov
dec
cwtl
mov
xor
das
dec
lret
adc
movsb
add
jo
filds
lds
call
shll
pop
push
call
and
add
movsb
test
ljmp
push
clc
xchg
ss
cs
adc
in
fstpt
daa
cld
stc
xchg
inc
sarl
add
inc
sbb
push
mov
cmpsb
add
jo
hlt
inc
cmp
add
cltd
or
loopne
ja
mov
jecxz
rorl
adc
mov
and
aas
cld
bound
push
loope
mov
sbb
mov
mov
lret
mov
call
sbb
inc
cmpsb
mov
pushf
repnz
cli
sub
pop
cltd
mov
add
sbb
lods
std
idiv
and
rorl
dec
add
push
fwait
sbb
push
or
cmpsb
adc
clc
xlat
pop
clc
jmp
push
js
test
add
outsb
aaa
adc
push
inc
cmc
jge
fadd
repnz
js
pop
push
mov
mov
inc
loopne
jno
mov
int3
dec
xor
and
out
clc
adc
or
add
inc
jne
cmp
outsb
mov
les
adc
cmp
scas
aas
sub
enter
icebp
and
jecxz
jae
pop
sub
dec
jo
ret
mov
xlat
aas
adc
pop
mov
xchg
dec
fstl
addr16
xchg
push
popa
sbbb
pushl
call
es
addr16
idiv
fwait
add
mov
add
rolb
daa
mov
cmp
cwtl
sbb
push
push
mov
mov
inc
gs
mov
les
loopne
in
push
push
fisubrs
filds
adc
push
adc
mov
es
cmp
adc
cli
adc
pop
xor
or
bound
sti
xor
sbb
inc
inc
cmp
test
xor
dec
inc
pop
ret
mov
mov
xlat
scas
push
leave
mov
fs
dec
pop
or
cmp
clc
sbb
loopne
pushf
test
clc
fwait
mov
cmp
and
cmp
push
or
inc
xchg
mov
int
add
scas
loopne
into
lods
js
inc
sbb
mov
fisubs
and
test
push
inc
push
push
test
inc
add
sbb
and
stc
icebp
scas
sbb
popl
xor
into
adc
sbb
aaa
sbb
std
lea
cs
stos
xchg
adc
pop
or
or
xchg
inc
data16
movsb
jo
std
add
rorl
push
cwtl
jmp
mov
js
call
jns
add
mov
pop
and
punpcklbw
push
cmpsb
mov
or
scas
cmp
inc
or
mov
gs
jle
jp
shlb
jg
lds
and
inc
cmpsl
jo
lods
into
push
lahf
call
ret
xchg
adc
dec
mov
jo
inc
shll
mov
out
cmp
int3
dec
sbb
fs
xchg
fiaddl
pop
call
in
jmp
inc
dec
imul
daa
push
rcll
sti
pop
mov
repz
push
aam
dec
inc
cmpl
mov
jp
filds
adc
leave
cmp
xchg
sbb
jge
pop
addr16
adc
outsw
stc
test
pop
imul
adc
cmp
hlt
rcll
or
mov
fistpll
jbe
out
lcall
cli
add
xor
cli
inc
mov
sarb
mov
call
jg
cmp
cmp
mov
fisubl
ds
aaa
pop
lcall
cmp
out
add
shrl
xlat
gs
mov
mov
mov
mov
rcrb
xchg
pushf
fcomip
sysenter
fadd
movsl
cmpl
push
dec
mov
add
pop
mov
pop
addr16
jb
add
lock
sar
cld
mov
out
jle
mov
pop
call
mov
enter
mov
pop
jne
call
xor
bound
test
ss
add
mov
cmc
mov
xchg
gs
hlt
add
icebp
lods
sbb
ss
aam
fwait
push
fadds
push
mov
pop
movsb
dec
push
sbb
leave
popa
add
mov
xchg
or
or
mov
test
add
mov
dec
in
pop
cmp
dec
cli
mov
sbb
and
aas
xchg
daa
mov
shl
es
cmp
jno
fs
and
cmpsb
call
nop
xchg
pop
aad
sub
outsl
cli
xchg
mov
lret
inc
xlat
bound
adc
mov
aaa
or
lock
mov
stos
popf
pop
lds
call
add
push
mov
sbb
mov
push
imul
dec
fdivrp
nop
addb
das
rclb
adc
rorl
cltd
into
xor
cli
or
sbb
outsl
outsb
and
xor
in
jbe
mov
cwtl
mov
mov
cmc
xlat
mov
aas
out
xor
jg
gs
inc
mov
mov
mov
fbld
test
inc
cmp
stc
adc
add
mov
scas
dec
cmp
test
inc
sub
or
testb
lods
cs
cld
in
sub
repz
sub
push
inc
ja
mov
sbb
mov
pop
or
cwtl
inc
bound
test
movsb
pop
shrb
sbb
clc
sbbb
xor
scas
out
jo
xor
ds
stos
push
adc
pusha
arpl
cmp
mov
and
loopne
les
imul
sbb
ljmp
push
xchg
enter
mov
xchg
shrb
jb
jno
lcall
sbb
add
or
inc
repz
es
xor
aas
mov
add
add
ret
clc
jae
stos
push
es
mov
lds
aad
stos
xchg
mov
insl
shll
sti
in
pusha
adc
add
sar
pop
fs
nop
dec
inc
popa
decb
pop
inc
inc
sub
xor
jle
fs
js
int3
push
add
in
mov
cmpb
mov
lds
adc
jmp
mov
push
and
std
add
mov
xchg
cmp
add
sub
and
dec
cld
mov
inc
ja
test
jns
xchg
popa
mov
cld
call
rorb
imul
and
call
adcb
ret
punpckhbw
push
aam
mov
push
xlat
stos
push
xchg
cmp
adc
hlt
jg
sarb
jo
loope
cli
dec
jo
jl
add
loop
add
jge
or
sbb
out
stc
int3
in
add
mov
mov
int
jb
hlt
or
clc
test
add
cli
daa
shlb
mov
aam
cmpsl
es
mov
pop
push
cli
cmp
and
add
movsb
mov
mov
jo
in
pop
icebp
lods
loop
mov
push
out
mov
mov
sub
clc
ljmp
jno
lret
sbb
add
cmpb
iret
sbb
jle
xor
lods
movsb
xor
or
adc
push
add
jmp
lods
mov
mov
dec
stos
push
dec
mov
sub
xor
ret
mov
jo
sarb
add
test
sti
mov
je
mov
daa
mulb
ljmp
lcall
cmp
cmp
adc
mov
ret
cmp
hlt
iret
xchg
add
adc
mov
jmp
imulb
or
mov
xor
scas
jecxz
cmp
cli
sbb
cli
das
jl
stc
mov
and
sbb
xor
loopne
push
mov
mov
pop
rcrl
lods
sub
ljmp
ljmp
mov
mov
pop
imull
mov
lock
jo
inc
inc
adc
rcr
pop
inc
xor
es
loopne
clc
pop
cmpsb
sub
sub
xchg
push
cmc
sub
push
stos
lds
loop
stos
pop
adc
dec
pop
rcrl
mov
or
xchg
mov
or
cld
fbstp
and
inc
inc
out
mov
xchg
push
jb
ror
sbb
fmul
dec
scas
mov
loop
add
lret
mov
add
mov
aaa
adc
fbld
xchg
cmpsl
cld
push
lcall
mov
lcall
pop
and
jge
test
ja
out
xchg
and
add
imul
mov
dec
pop
cmp
adc
add
push
push
push
out
sub
add
pop
cwtl
jl
stos
cmc
cmc
ficomps
add
bound
mov
ljmp
idivb
cmp
mov
push
mov
inc
arpl
push
jp
cmovne
dec
enter
outsl
and
insb
icebp
outsl
ljmp
and
clc
jo
push
sarl
sub
jo
sub
mov
mov
or
adc
and
xor
xchg
filds
outsl
pop
mov
inc
lods
clc
subl
jg
in
pop
mov
jbe
jle
xchg
outsb
jne
adcb
and
jnp
ljmp
adc
push
mov
sti
jge
andb
subb
sub
divb
in
mov
lods
stos
fwait
jp
dec
sti
jle
loopne
jge
inc
add
popf
je
push
jns
adc
mov
xor
mov
aaa
incb
lahf
into
pop
jo
and
dec
inc
cmp
pusha
adc
test
subb
aas
cmc
sbb
bound
lea
sahf
push
out
pop
icebp
pop
lods
or
xchg
pop
neg
add
cmpsb
push
fiaddl
xlat
and
pop
je
fadds
cmpsb
faddp
jb
fmuls
je
outsl
movsb
shl
add
lret
test
pop
mov
rcrl
jg
daa
outsb
std
xor
mov
int3
inc
sub
adc
clc
pop
sbb
gs
dec
out
insb
js
mov
fmuls
inc
push
sti
pop
stos
push
fbld
nop
jns
pop
mov
test
sar
call
loopne
or
mov
jg
ficoml
fwait
cmpsb
cmpsb
fildl
xor
pop
dec
scas
rcll
adc
or
xorl
cmc
scas
sar
cmp
add
js
push
movsb
pop
loope
orb
into
add
lcall
mov
lods
add
in
fmull
mov
mov
cld
stc
repnz
or
aas
cmp
into
sbb
dec
das
sbb
decl
jge
push
mov
or
sbb
lods
push
mov
push
in
mov
and
jo
mov
sti
mov
and
fwait
push
add
leave
sbb
in
ja
call
aad
das
push
dec
push
cmp
or
cmp
decl
ljmp
dec
pop
cwtl
insl
add
stos
mov
and
das
into
dec
cmp
stc
test
mov
add
push
out
daa
into
push
and
aad
clc
fisttpl
ds
pop
inc
sub
and
jg
dec
test
push
cmp
mov
rolb
adc
jg
and
or
cmp
xchg
orl
xchg
in
shrb
xor
lret
push
movsb
lcall
mov
mov
les
inc
mov
sbb
sti
inc
push
xchg
call
cmp
pop
imul
push
cmpsl
jbe
fisttps
add
bound
stc
and
sbb
fcomip
jle
icebp
dec
mov
es
movsb
outsb
add
pop
test
mov
scas
or
xlat
testl
ss
ret
fs
ss
and
and
mov
and
testb
mov
cmp
sub
inc
incl
pop
test
push
cmpsb
ret
and
push
pushl
xor
dec
mov
add
jge
inc
adc
jne
ljmp
push
rol
sarl
cs
cmp
lcall
or
jns
call
test
fdiv
lcall
call
sti
mov
sub
lret
je
clc
imul
lret
push
pop
mov
inc
shll
les
clc
out
into
and
and
aad
fiaddl
lcall
sti
mov
ret
jno
int
push
push
pop
add
push
add
lea
test
pushf
pop
gs
repz
mov
cwtl
bswap
xlat
sbb
sbb
scas
push
shlb
loopne
add
addb
pop
icebp
rolb
imul
cmp
xchg
mov
jmp
adc
add
inc
xorl
gs
cmp
fisubrs
cwtl
sbb
push
inc
mov
push
push
mov
inc
into
jmp
outsb
hlt
pop
adc
nop
push
mov
sub
jo
clc
dec
lret
sub
pop
mov
sbb
iret
xor
cld
scas
and
add
jge
lods
sub
addr16
daa
fwait
jl
dec
cmp
loopne
mov
in
push
mov
push
lods
lret
jmp
rorb
add
lock
dec
arpl
push
push
ljmp
hlt
xor
hlt
insb
cmp
lock
or
sbb
in
fiadds
pop
or
mov
adc
insb
test
and
cmc
outsl
sub
adc
mov
test
std
mov
pop
aam
in
push
fisttpll
orb
jmp
out
and
ja
mov
scas
rorb
xchg
jle
dec
jp
in
loope
add
ja
jno
add
sarb
mov
mov
sub
jge
cmpsl
sbb
extrq
addl
xchg
mov
call
pop
jg
loope
mov
jne
adc
fwait
cmc
or
iret
lock
push
jb
lds
inc
adc
dec
adc
lcall
in
jge
mov
dec
or
outsl
aaa
je
xor
pushf
shll
mov
jne
shl
stc
mov
cmpsb
jp
adc
sub
push
xor
mov
or
lahf
rorl
data16
sbbb
cli
jmp
arpl
cmp
inc
xchg
shl
loopne
mov
sub
or
and
repz
pop
cwtl
incb
rcrl
pop
loop
add
xchg
daa
xor
fistl
jo
adc
push
push
aad
xlat
outsb
inc
jne
add
out
cmc
dec
jle
mov
push
int3
mov
mov
test
call
push
cmp
jae
frstor
ljmp
test
dec
push
jne
jl
sbb
call
loopne
aam
fcmovb
jnp
and
or
popa
or
mov
xchg
mov
loop
dec
aaa
movd
les
push
add
pop
in
mov
sub
cli
testl
shll
adc
shll
add
push
add
push
mov
pop
test
cld
push
cmpsb
add
loopne
sub
push
adc
rorl
icebp
aas
pop
mov
scas
add
xchg
jl
movsb
in
dec
pushf
int3
test
or
push
push
push
mov
adc
fbld
mov
cmpsl
and
loop
fiaddl
in
out
pop
push
rolb
lods
and
add
aas
es
lods
sub
sbb
sbb
das
inc
lods
sarb
or
pavgb
lcall
inc
hlt
jbe
and
bound
into
and
xor
sub
mov
es
ljmp
sbb
lcall
jg
andb
and
cwtl
mov
pop
mov
out
int
mov
mov
pop
ret
pushf
inc
mov
decb
fbstp
cld
mov
fsubrl
xor
ret
popf
test
xlat
out
test
inc
push
outsb
cmc
scas
xchg
xchg
or
adc
ffreep
aas
stos
mov
cmpsl
shrl
mov
and
call
push
push
cmp
push
scas
mov
leave
inc
iret
cmc
clc
dec
jmp
lods
cmc
repz
loopne
dec
dec
adc
test
nop
scas
sub
and
sbb
mov
sti
push
jge
mov
fcomip
mov
xor
stos
iret
mov
rcrb
idivl
nop
xor
pushl
jl
outsl
inc
test
mov
lds
pushf
rorl
std
or
sub
inc
mov
add
push
push
cli
jo
mov
add
nop
popa
and
mov
sbb
mov
mov
mov
aam
clc
dec
sarb
inc
push
hlt
add
call
divb
ret
mov
aam
jae
rorl
add
pusha
ss
or
mov
sbb
lcall
mov
jbe
pop
cmpb
sbb
popf
dec
dec
nop
push
clc
jmp
es
pop
das
icebp
lds
inc
push
movsb
mov
imul
sbb
push
sbb
jg
cmp
sti
out
cmpsl
and
xor
scas
cmp
lret
add
xor
xlat
add
ficomps
xchg
xchg
cmp
stos
add
push
clc
enter
in
out
repnz
insb
mov
and
bound
inc
mov
mov
mov
ljmp
int3
ret
adc
iret
xor
push
push
int3
and
aas
pushf
or
mov
jae
adc
xchg
sbb
int
push
mov
sub
mov
loope
xchg
enter
adc
nop
pop
or
sarb
jae
mov
add
test
dec
movsb
rcrb
sbb
cmc
and
bnd
inc
dec
add
dec
loope
iret
fs
pushf
fdiv
push
xor
jne
inc
inc
or
xchg
dec
cmp
loopne
int
sbb
pop
sbb
xor
add
add
and
cmp
clc
add
fadd
jecxz
ds
push
and
cmp
nop
xor
sub
iret
scas
xchg
push
lret
and
xchg
rorb
sbb
loop
fucomip
ret
adc
mov
push
inc
adc
bound
popa
pop
push
add
test
xor
inc
mov
pop
push
cmp
mov
add
bound
in
ficomps
pop
ret
lods
jno
fldt
push
xchg
cld
sbb
lea
pop
shll
out
sarb
ss
pop
push
mov
jno
pop
pop
sti
add
lret
fisttpl
add
test
rolb
mov
sbb
ss
sbb
xor
sub
icebp
inc
push
es
aad
pop
xor
and
add
dec
add
rorb
add
sbb
clc
std
shr
or
bound
test
loopne
lds
cs
cmp
mov
nop
shlb
roll
incl
enter
insl
adc
out
das
test
ret
decl
shll
xchg
mov
fnstsw
mov
shl
xor
jg
subb
add
out
cmpb
adc
inc
outsb
xchg
in
mov
fs
push
xchg
mov
cld
jnp
adc
xor
out
scas
mov
sar
incl
jae
iret
add
jecxz
loope
sub
fsubs
jl
nop
pop
dec
add
test
das
adc
xor
imul
cwtl
in
es
mov
repz
xchg
shll
add
stos
fmul
stc
out
push
dec
call
scas
call
and
jg
movsb
push
pop
dec
push
adcl
jb
les
or
inc
xor
adc
lahf
jbe
cltd
jbe
fcomip
dec
mov
lcall
shlb
push
xchg
xor
and
fs
adc
adc
clc
aad
ret
in
mov
sarb
pop
pop
rclb
loopne
inc
push
fs
add
xchg
mov
lds
mov
inc
dec
mov
ds
outsb
mov
jb
das
add
lcall
popa
call
fstpl
dec
xchg
add
or
mov
inc
add
ret
jnp
or
jnp
add
mov
in
xchg
decl
push
and
shrl
lock
mov
push
pop
nop
push
adc
stos
sbb
cld
nop
imul
xor
push
movl
incl
dec
add
add
pushf
jo
cwtl
and
xor
jmp
xchg
inc
or
xchg
jnp
ret
add
in
neg
test
cld
inc
mov
iret
enter
ljmp
out
mov
arpl
lods
sar
add
push
pusha
push
repnz
mov
push
mov
data16
lret
popa
xor
dec
adc
outsl
out
jecxz
xchg
enter
pop
nop
cs
mov
pop
adc
jmp
or
movsl
imul
or
call
or
pop
les
jo
std
lret
xorb
lcall
cmpsl
enter
std
incl
sub
es
cmp
daa
js
les
adc
insb
sbb
imul
add
out
adc
es
push
add
pop
cmpsb
add
jle
sbb
mov
stos
cmp
pop
insl
xchg
cmp
jg
sub
jmp
int3
or
and
in
jg
or
stos
sbb
pop
cltd
popa
sbb
out
mov
jp
or
sbb
dec
cmp
lret
jb
jl
mov
es
push
xchg
loope
sub
ret
popa
in
cwtl
lock
in
adc
clc
int3
fstps
mov
or
or
sub
and
into
loope
addl
mov
out
je
add
insb
int3
icebp
xchg
cmpsl
or
push
xor
es
xor
or
push
xor
loop
lcall
test
aad
nop
mov
jle
aad
arpl
and
adc
inc
adc
inc
mov
int
dec
adc
gs
push
in
sahf
inc
mov
daa
addr16
mov
pushf
fisubrl
scas
clc
iret
clc
decl
mov
pop
je
testb
fsubrl
inc
and
pushl
add
inc
or
xacquire
ja
jmp
ss
mov
lds
jge
pop
sub
test
jmp
jl
mov
hlt
or
into
cmpsb
inc
push
repz
js
fwait
scas
jmp
fprem
dec
sub
loopne
jge
jo
in
jl
shrl
test
adc
enter
call
push
nop
cmc
aam
mov
add
sbb
mov
add
loop
push
inc
pop
call
jg
lock
add
pop
jo
daa
cmp
dec
arpl
and
loope
cmpb
das
xlat
aad
inc
xor
push
test
add
sbb
sbb
xchg
mov
and
or
or
clc
dec
push
add
push
icebp
int
add
pop
xchg
add
pop
and
shll
aam
mov
insl
xor
push
xchg
ret
icebp
pop
movsl
sbb
mov
shlb
jmp
or
je
or
jl
int
popf
xor
inc
in
lea
mov
lahf
mov
mov
mov
mov
pop
sbb
call
push
lcall
inc
pop
hlt
mov
aas
aaa
mov
and
mov
jb
or
mov
fs
add
xor
adc
sbb
jae
leave
add
mov
or
shlb
scas
ret
mov
call
dec
cld
or
nop
mov
inc
or
mov
testb
and
mov
push
mov
je
mov
aam
add
push
pusha
ds
cmp
rol
scas
mov
or
push
pushf
jmp
rcrl
lods
mov
or
push
push
loope
lcall
xchg
mov
jecxz
cs
scas
or
enter
push
and
adc
cmp
sbb
cld
pusha
cwtl
xor
fbld
mov
scas
and
add
or
incl
jmp
add
cmpsb
mov
out
test
and
add
loop
cwtl
faddl
testb
inc
ljmp
sub
sarb
cmp
jnp
jge
mov
dec
mov
shll
inc
ret
mov
mov
or
cs
mov
cmpsb
movsl
jp
loop
cli
pop
xlat
rclb
push
ja
and
je
fcomip
xchg
push
xor
dec
cmp
mov
idivb
out
and
and
hlt
inc
pop
mov
ljmp
xchg
mov
push
je
push
shrb
enter
cld
sub
ds
sarl
loop
repnz
sarb
clc
push
inc
std
xor
loopne
mov
loope
enter
ds
mov
test
pop
jo
in
fisttps
mov
lock
test
xor
adc
or
dec
adc
aas
out
pushl
xchg
add
push
or
adc
test
or
push
pop
mov
mov
ljmp
repz
adc
sub
pop
repnz
add
sahf
push
mov
aaa
outsb
in
push
nop
add
lock
fidivrs
and
fdivl
inc
popa
lds
xor
mov
xchg
clc
call
mov
sbb
dec
lea
jg
xchg
fsubrs
pop
add
clc
jno
and
cmpsl
jg
push
lock
pushl
and
dec
and
inc
and
adc
leave
adc
ror
push
mov
les
idivl
mov
mov
xchg
sbb
cmp
inc
xchg
clc
add
mov
adc
sbb
xchg
dec
sbb
ljmp
clc
xchg
xchg
xor
sub
inc
jnp
add
rcl
mov
and
add
insb
nop
xchg
mov
sbb
inc
sbbb
mov
sarl
cmp
fmull
xor
stos
pop
xchg
ret
fistpll
adc
xchg
mov
imul
popa
cmp
mov
in
cs
hlt
and
mov
jb
pushl
dec
adc
push
insb
dec
adc
dec
inc
jp
adc
ret
testl
or
aaa
lock
call
incb
out
xor
sbbl
fcom
xor
in
ljmp
fadd
mov
or
cmp
xor
cs
outsb
cwtl
mov
cli
pop
dec
popa
sti
and
and
and
cs
sar
adc
es
mov
or
pusha
or
fists
cmp
lret
pushf
out
adc
adc
fbstp
adc
fldl
pop
test
xor
ficomps
ret
add
fists
push
test
repnz
or
inc
push
sub
xlat
or
add
fidivl
nop
adc
pop
cmc
jg
movsb
scas
insb
jle
jae
nop
xchg
adc
ret
adc
or
pusha
fs
int3
mov
ja
das
pop
adc
call
stos
repz
inc
pop
cltd
adc
or
pop
xor
or
pop
mov
or
mov
sbb
cmc
fs
xor
inc
fdivrl
cli
jg
dec
sahf
inc
dec
pop
push
jecxz
pop
fldt
push
dec
mov
ja
loopne
rorb
push
mov
dec
mov
cld
inc
xchg
cmp
fcomi
aam
mov
test
push
add
mov
mov
dec
mov
cli
leave
cmp
std
mov
sub
and
imul
mov
subl
fsubs
mov
lock
inc
mov
into
push
inc
lret
fsubrs
mov
js
jbe
mov
xchg
idivb
stos
lahf
es
clc
mov
fs
and
js
popa
jle
pop
add
lret
pop
add
jp
fisttpl
xor
add
roll
scas
xor
add
xor
adc
xor
sbbl
push
fistpl
leave
outsl
scas
cmp
pop
cmpl
fwait
mov
add
hlt
movsb
aad
jge
jne
or
xchg
add
hlt
jbe
pop
fadds
rorl
les
adc
lods
shlb
xchg
mov
or
or
sbb
testb
pop
jl
dec
rolb
inc
jl
mov
not
mov
xor
fsubs
xchg
lcall
sub
mov
sbb
dec
repnz
push
cli
mov
outsl
xor
inc
in
pusha
xchg
push
fadd
orl
stos
and
inc
adc
jg
jecxz
fnstenv
scas
xor
mov
xor
adc
into
or
filds
add
dec
sbb
dec
xlat
mov
lcall
in
pop
arpl
add
mov
lods
mov
shlb
inc
andl
fucomip
mov
mov
repnz
and
clc
ja
out
fisubrl
aas
jle
jne
xchg
sub
aaa
cmpb
mov
insl
or
stos
sbb
pop
cmp
test
cmc
push
jo
mov
add
popf
mov
push
and
fsubrs
and
cld
cld
dec
lock
cmp
mov
fstpt
hlt
movsb
xor
and
pop
sar
mov
sbb
rclb
sub
loopne
and
jb
and
scas
ret
mov
outsb
imull
pop
js
or
cli
fcomip
or
jae
push
mov
je
lock
mov
pusha
lods
cs
adc
ljmp
sbb
ds
pop
jns
mov
jmp
out
lret
ffreep
mov
pop
pusha
out
movsb
scas
sbb
sbb
or
sbb
icebp
ja
in
clc
in
cmpsb
or
pop
dec
push
jbe
loope
shll
ss
sub
add
pop
add
out
pop
test
cmp
mov
fpatan
cld
push
adc
jge
movsl
data16
arpl
ret
or
pop
hlt
sbb
inc
aas
xchg
jecxz
pop
icebp
incl
movsl
mov
cmp
daa
test
daa
and
or
cli
mov
xchg
xor
ss
or
xor
into
lds
xor
stos
xor
cwtl
stos
cs
and
dec
push
loop
cmp
xor
add
popa
mov
or
ret
pop
leave
lcall
or
mov
mov
arpl
jecxz
adc
shll
les
aam
xchg
movsl
jns
xor
jno
aam
hlt
jg
jmp
push
and
scas
js
pop
mov
pop
adc
incl
mov
sub
jo
adc
jg
cld
mov
inc
daa
jmp
rol
pop
fiadds
jbe
int3
cmp
call
jmp
in
icebp
push
insl
push
add
xchg
loop
mov
inc
outsb
in
mov
cwtl
test
pop
hlt
pop
cmp
jb
dec
pushf
push
mov
xor
movsb
jae
subb
andb
or
lahf
inc
lds
fidivl
ds
fwait
xor
pusha
rolb
push
fcomps
dec
or
cmp
pop
insb
push
mov
and
iret
push
xor
int3
cmp
lods
sarl
fstps
inc
push
gs
ljmp
xor
cli
pop
aad
mov
push
out
lock
add
pop
dec
add
jno
xorl
xlat
adc
or
cmpsb
ljmp
inc
jle
xor
or
stos
add
mov
mov
jecxz
out
cmp
inc
mov
push
jns
cmc
add
push
subb
lret
jg
mov
out
xor
dec
out
rolb
loope
add
lds
xor
adcb
int3
mov
dec
and
mov
cli
xor
lock
ja
pop
je
pop
push
pop
popa
test
dec
cmc
xchg
adc
scas
dec
insb
cli
aas
sbb
iret
popa
sbb
aas
xchg
add
nop
repnz
test
mov
jo
negb
cmc
stc
mov
cmc
test
lret
jmp
push
fmuls
xchg
out
push
sub
stos
mov
rcrb
add
test
jmp
in
adc
cmp
mov
push
jbe
shlb
dec
fadd
ret
jno
lods
gs
sub
mov
lock
enter
aam
loopne
cld
sbb
sbb
xchg
inc
push
sub
pusha
cmp
bound
xchg
es
mov
outsl
jnp
or
adc
pop
dec
adc
sub
mov
popf
imul
add
jne
test
adc
rcrb
mov
loope
add
in
xchg
adc
ret
xchg
aaa
jp
mov
repnz
inc
in
cmp
push
xor
sahf
push
mov
mov
jp
lcall
push
fdivrl
cld
decl
popa
add
stos
lock
xor
and
lods
xor
hlt
dec
add
hlt
or
mov
pushl
fwait
jmp
call
jb
in
xor
jo
mov
pushl
sbb
sti
pop
fcompl
dec
or
shlb
mov
cs
int3
adc
mov
mov
mov
lret
rorb
ficompl
cmpsl
imul
pop
pop
or
inc
aas
mov
in
sub
cmc
jle
fistl
in
push
adc
mov
sub
pop
add
clc
cmp
nop
je
sbb
and
xlat
mov
push
inc
lahf
and
in
js
dec
pop
dec
push
rolb
clc
decl
cltd
and
sbb
inc
inc
inc
jno
mov
fists
pop
cmp
pop
daa
push
jo
es
bound
movsb
ret
sub
stc
dec
lds
pop
dec
adc
add
ss
test
lds
outsl
ss
insl
jae
jl
push
dec
and
ret
fiaddl
mov
or
mov
push
dec
push
cmp
sub
ret
jle
clc
add
ds
ret
rolb
sbb
decl
sub
mov
adc
dec
ret
icebp
jp
xchg
add
cmp
inc
and
xchg
fistl
cld
jg
adc
ljmp
bnd
and
cld
call
dec
add
or
test
and
push
lods
into
push
popa
dec
dec
filds
mov
ret
repz
lcall
cli
loope
xor
fwait
pop
cmp
add
popa
mov
push
cmp
mov
test
leave
mov
jle
fcmovnb
into
pop
cmpl
cmp
out
ds
cmc
fnstenv
sbb
cli
xor
gs
mov
mov
pop
inc
pop
dec
cltd
sub
sbbl
daa
or
add
add
adc
xchg
dec
imul
adc
sub
aas
xor
loopne
ret
fwait
or
les
inc
adc
into
fbld
test
mov
lock
incl
mov
jo
sbb
stos
mov
add
xchg
push
adc
add
mov
scas
push
add
aas
cwtl
xchg
loop
add
push
mov
lock
je
gs
adc
lahf
push
xchg
inc
in
push
push
mov
xchg
sub
hlt
bnd
incl
or
mov
jae
push
popa
and
or
gs
enter
push
sahf
cmpsb
pushl
xchg
inc
push
fidivrl
pusha
xchg
roll
dec
addr16
sub
fs
rorl
dec
shll
xchg
xchg
and
cwtl
adc
ret
loopne
sti
das
call
in
inc
pop
test
adc
pop
test
scas
push
jo
cs
int
fldt
cs
dec
mov
sbb
mov
inc
pop
push
int3
or
addr16
shl
scas
add
dec
test
add
push
gs
je
loope
stc
in
shrb
pop
xchg
dec
cld
xchg
dec
clc
lods
outsb
int3
movsl
inc
push
cmpsb
inc
je
and
jmp
and
push
xlat
mov
sub
ss
decl
subb
add
inc
hlt
mov
loop
stos
pop
jmp
add
dec
push
add
test
fidivs
add
subl
pop
push
push
mov
cmp
push
leave
or
nop
inc
inc
cld
cmpb
adc
jb
jl
mull
inc
push
adc
add
cli
aam
jmp
pop
jle
fimuls
in
jg
shrl
mov
or
add
sub
push
iret
insb
incl
je
or
pop
add
dec
pop
cmc
and
in
nop
ds
test
std
push
add
inc
cmpsl
aad
dec
pop
cmp
incl
ljmpw
mov
insb
jp
pop
pusha
jl
add
jmp
in
xlat
aas
jb
mov
add
outsb
adc
adc
pop
pop
ja
lock
lods
or
leave
adc
jle
lock
test
clc
xchg
dec
pop
dec
add
mov
or
jecxz
pop
and
in
repz
adc
push
adc
notb
ss
xchg
ljmp
mov
lds
neg
adcb
and
xchg
testb
mov
test
push
movsl
or
ljmp
add
out
inc
and
mov
adc
insb
clc
mov
lcall
sbb
mov
mov
cli
pushl
sub
mov
pop
cmp
jns
add
lods
test
jne
mov
xor
inc
mov
lock
pushf
mov
xchg
adc
jmp
inc
pop
mov
addr16
mov
inc
fs
les
stos
stos
push
mov
jne
pop
fdivs
sub
mov
call
adc
or
decl
les
mov
push
mov
lahf
mov
bound
sub
adc
xor
add
xchg
xchg
in
pop
test
or
mov
test
dec
jle
cmpb
or
fnstcw
push
mov
scas
frstpm(287
mov
pusha
sub
and
bound
pushf
loopne
aaa
xorb
test
js
cmp
pop
decl
pop
stos
mov
jecxz
shll
push
push
mov
dec
lock
clc
dec
in
add
orb
lods
push
or
pushl
into
push
push
lds
add
cmpsb
test
xchg
add
scas
test
mov
dec
push
sbb
popf
push
adc
imulb
adc
outsl
les
je
pop
aad
or
and
mov
das
imul
add
decl
sbb
sub
stc
mov
push
or
dec
sbb
int3
pop
push
and
stc
inc
jl
loope
inc
clc
jne
jecxz
std
clc
pop
adc
fists
jp
shl
fldenv
incl
dec
outsl
mov
cmpsb
aaa
push
cmpsl
pop
nop
pop
or
lds
or
mov
jnp
pop
push
xchg
xchg
pop
mov
ljmp
std
push
mov
pop
mov
addr16
loop
sahf
push
cmp
xchg
cltd
clc
dec
test
hlt
ss
ret
js
mov
xchg
mov
mov
sbb
xor
scas
or
data16
add
std
and
push
xchg
xor
pop
push
stos
fsubrl
jne
lods
xchg
cmpsb
sub
sti
fsubs
hlt
sahf
pop
pop
pop
into
fcoms
push
mov
lahf
aam
icebp
jle
scas
roll
cli
xlat
inc
stos
mov
sub
dec
jmp
scas
jle
pop
into
mov
clc
int3
stos
mov
and
xchg
gs
scas
stc
stos
in
sbbl
js
xchg
xchg
push
mov
adc
adc
insl
fcoms
mov
ret
push
push
inc
ljmp
add
movsb
jle
je
shl
outsb
dec
mov
mov
adc
adc
push
rclb
xor
ds
out
dec
mov
cld
nop
sub
pop
mov
xchg
jge
jb
lea
pop
or
dec
testl
and
mov
test
sar
sub
es
mov
sbbl
stc
fcoml
push
jge
mov
fisubs
push
repnz
inc
insb
aas
incb
inc
mov
mov
pop
or
xchg
fcompl
mov
lds
push
inc
add
sbb
jge
xor
push
jecxz
or
test
dec
stos
adc
lret
shlb
rcll
sbb
mov
and
outsl
jo
lock
cmc
jne
add
insl
fcoml
stos
fsubr
mov
xchg
sahf
inc
mov
jne
lret
testb
loopne
mov
or
pop
adc
xchg
lret
and
ret
data16
cmpsb
loopne
sub
dec
mov
je
or
jmp
std
pop
mov
gs
cmp
repnz
negb
jge
shl
jmp
mov
add
cs
dec
lds
cld
mov
nop
lock
mov
cmpsb
subl
pop
adc
cmpsl
sub
or
inc
pop
fcomps
fildl
cmp
sbb
scas
je
jg
push
cmp
hlt
mov
decb
cmpb
ret
pop
or
mov
adc
jnp
push
mov
jp
mov
add
lea
dec
clc
xchg
mov
xchg
cwtl
in
aam
or
dec
lock
cltd
mov
int
jae
aaa
mov
lods
sbb
push
sub
out
js
jmp
or
cmp
push
imul
xor
cli
call
and
sbb
es
das
shrb
mov
dec
jbe
dec
push
pop
xchg
add
movsb
pusha
or
lods
stos
cmp
jb
das
rorb
sub
out
mov
adc
into
scas
fstl
fists
ret
lret
jae
push
dec
jmp
inc
xchg
cmp
mov
cli
lcall
stos
rorl
mov
xchg
fadds
jbe
mov
ljmp
ret
add
push
xchg
xchg
xor
insl
insb
dec
stos
add
sub
sub
hlt
dec
sti
lcall
add
inc
loope
out
or
add
or
lcall
mov
andb
and
std
in
mov
sub
adc
or
or
ja
pmuludq
xor
adc
aam
jle
fists
repz
dec
push
test
lods
cmp
daa
fisttpll
cli
lcall
fs
jmp
jg
pop
mov
mov
fcmovb
cld
icebp
adc
xchg
push
and
aad
pop
repz
fdecstp
fcomps
mov
pop
shl
or
insb
loop
lea
jg
pop
xor
notb
aam
xchg
psrad
rcll
dec
ret
in
hlt
jmp
mov
mov
jp
xchg
xor
loop
into
iret
add
aas
repz
dec
sbb
mov
sub
out
sub
lods
jno
mov
adc
repz
test
call
mov
push
inc
lea
jg
inc
es
mov
ret
and
loop
xlat
adc
leave
xor
cmpsb
jmp
loope
xor
hlt
inc
jl
stos
xchg
andb
mov
sbb
daa
test
jne
cld
inc
mov
daa
push
inc
sub
lret
aas
outsb
decl
add
into
inc
cmp
sbb
mov
pusha
and
filds
cli
adc
or
xchg
or
ds
test
popf
push
stos
sti
inc
jmp
adc
mov
add
or
dec
fcmovnu
push
lock
pop
mov
mov
xor
adc
lret
scas
es
mov
cmc
pop
or
lock
mov
add
dec
js
ljmp
roll
xorb
inc
mov
dec
mov
lods
push
std
mov
inc
xor
and
mov
dec
mov
push
insb
ljmp
and
cmp
xchg
jmp
lcall
andl
std
sbb
subb
mov
and
mov
imul
int
sbb
and
mov
jl
mov
test
xor
xlat
cmpsb
das
sub
lcall
push
adc
cli
sbb
repz
xchg
jg
lods
sbb
pop
add
push
mov
xor
xor
cmp
push
xchg
loop
lcall
or
movsb
push
jl
push
orl
push
or
jle
and
jbe
out
cmp
lods
push
add
hlt
sub
xor
xor
add
addr16
cs
sbb
cld
mov
popf
repnz
cwtl
aad
cmpsl
jb
in
add
cmc
push
mov
xor
pop
lock
incb
add
fs
stos
jmp
push
xor
negb
repnz
jmp
outsl
cmpb
dec
push
gs
nop
je
mov
inc
jnp
and
fnstenv
push
mov
push
filds
and
push
mov
cld
jbe
pop
jg
cmp
mov
jmp
pop
mov
sub
bextr
add
jo
pop
out
push
adc
push
push
cs
ljmp
push
cmpsb
xor
cmp
sbb
and
in
add
cmp
scas
jmp
shl
scas
xchg
jmp
and
cmp
dec
mov
dec
add
jno
inc
rclb
clc
enter
mov
sbb
mov
mov
mov
push
adcb
fsubs
sub
mov
enter
push
inc
loopne
hlt
ja
and
jle
pop
sub
cmc
mov
xchg
push
xchg
mov
pop
push
loop
cmp
dec
rolb
daa
stos
and
and
push
loop
inc
sub
mov
add
std
fucomi
cwtl
or
arpl
sub
cmp
or
jmp
adc
clc
sbb
idiv
mov
pop
ljmp
push
pusha
sti
pop
dec
xchg
ds
mov
pop
rolb
add
cmpsb
mov
inc
jp,pn
lahf
inc
test
push
mov
call
incb
mov
mov
mov
or
decl
cmp
bound
in
or
fisttps
subb
cwtl
mov
rolb
into
mov
pushl
xor
push
and
ret
icebp
dec
adc
pop
jle
push
add
cmp
movsl
add
jbe
repnz
scas
add
fs
cmp
push
xchg
movsl
push
stos
add
lcall
inc
out
aaa
mov
andb
leave
shr
cmp
repnz
jp
ljmp
clzero
std
out
sarl
outsb
test
fs
add
jae
gs
es
fcompl
decl
arpl
dec
jnp
movsb
mov
outsl
adc
pop
cmpsb
inc
push
add
int
pop
js
sub
out
push
cld
fistl
fdivrs
fcomip
les
rcr
or
or
loope
icebp
jg
sbb
or
stos
cld
dec
loop
add
add
enter
and
inc
test
dec
push
dec
lods
jo
jle
mov
sbb
movsb
clc
js
and
xor
pop
xchg
push
inc
adc
mov
mov
in
cmp
fsubrs
dec
in
xchg
rolb
sub
call
insl
cmp
and
jae
call
lds
mov
and
add
inc
clc
dec
test
repnz
add
cmp
pop
mov
loopne
xchg
mov
adc
inc
cld
inc
mov
loopne
push
cmp
ljmp
xorb
mov
pop
into
sarl
cmp
mov
mov
pop
es
icebp
out
fcmovb
pminsw
fldenv
pop
inc
aas
cld
pop
sbb
mov
mov
push
or
dec
and
loopne,pt
div
adc
xchg
js
outsb
ret
cmc
xchg
cs
pop
xlat
das
dec
icebp
enter
add
or
sub
mov
cltd
clc
jmp
mov
and
shlb
mov
outsb
dec
ret
gs
dec
ljmp
shlb
sbb
sbb
jno
sub
call
jb
shrb
mov
in
addr16
test
psrld
out
inc
mov
mov
mov
data16
aaa
jb
xchg
and
js
add
in
push
inc
lcall
mov
add
rep
push
pushf
repz
sub
xchg
ljmp
or
add
mov
xor
jl
push
xor
pusha
sbb
dec
sbb
xchg
call
or
dec
and
cmp
and
add
add
mov
flds
rol
xor
mov
jg
xor
jbe
xor
fmul
sahf
mov
ret
adc
sub
inc
jmp
jb
xor
pop
inc
jge
mov
xlat
int3
adc
xchg
out
out
jp,pt
jmp
pop
push
cmc
xor
mov
inc
xchg
inc
or
and
mov
sbb
inc
test
mov
sbb
add
inc
out
loopne
pop
add
clc
incl
addr16
cmp
adc
test
insb
sbb
sub
std
push
add
jl
sbb
mov
cli
pop
lock
data16
out
push
add
jo
jl
or
aam
int
movsb
xchg
rorb
js
nop
push
test
add
out
shll
in
lahf
sbb
jg
or
or
test
cld
rorb
jle
xor
popa
sub
push
loopne
sbb
xor
clc
pop
les
xchg
mov
jne
push
movsl
and
sbb
in
fadd
arpl
lock
mov
sub
lcall
adc
inc
jb
data16
nop
lock
add
dec
push
jecxz
pushf
mov
add
sub
add
aaa
dec
decl
inc
hlt
loop
dec
ds
pop
fs
push
sub
mov
sub
mov
add
and
sub
dec
lock
cmp
lcall
iret
push
rcr
or
lods
test
dec
or
les
call
xor
sub
sbb
dec
shr
adc
jg
dec
inc
mov
shrl
lods
mov
scas
adc
aad
cmp
movsl
pop
xchg
shr
pop
or
decl
inc
and
outsb
movsb
inc
andb
popf
popf
fsubrs
adc
lods
int
adc
cmc
adc
or
scas
fidivs
mov
std
or
dec
xor
dec
jge
les
cmp
mov
cltd
or
mov
clc
push
inc
iret
and
in
data16
push
jb
or
rolb
add
lods
jo
imul
orl
pop
out
and
or
mov
movsl
je
aaa
xor
test
loopne
movsb
or
pop
mov
pop
loope
mov
sahf
stos
nop
arpl
lock
int
lret
lods
jecxz
clc
add
loope
gs
jbe
cmp
or
push
mov
stos
cld
mov
fdiv
xchg
inc
inc
lods
lret
mov
sbb
or
pusha
idivb
mov
pop
ret
xor
jl
cmp
mov
cli
mov
nop
cmp
xor
lock
sbb
loopne
sub
lods
fildll
or
nop
fbstp
pop
mov
call
sbb
jl
xchg
jo
shr
add
or
daa
clc
mov
push
and
cmp
outsl
es
add
add
cs
xchg
mov
mov
or
push
cld
outsb
fwait
loope
popa
dec
ret
rclb
rclb
fs
stos
decl
addr16
outsl
bound
adc
cmpsb
sub
clc
sub
pushf
push
icebp
pushf
or
fdivrl
dec
or
and
ret
out
movsb
cmp
insb
and
mov
add
xchg
cli
stos
mov
push
dec
push
push
outsl
mov
jg
xchg
in
push
mov
lcallw
adc
aas
and
sub
cwtl
lahf
push
mov
nop
inc
inc
mov
cmp
test
fs
les
cmpsb
sti
fdivs
les
add
ss
inc
push
xchg
dec
and
jae
gs
fistps
lahf
iret
dec
stc
cmp
stos
cmp
out
or
jbe
repnz
mov
decb
mov
movsl
mov
push
ror
call
fwait
pop
das
lock
or
add
ds
out
xor
cli
or
pop
ret
xor
and
or
les
mov
loope
xlat
xchg
sub
mov
mov
lahf
adc
dec
mov
push
scas
push
xor
xchg
sub
mov
cmp
inc
and
push
es
pop
subl
or
cmp
adc
jg
int3
or
inc
hlt
push
scas
add
test
data16
aaa
aam
push
lock
dec
dec
movsb
jmp
pandn
mov
and
push
test
jecxz
call
jle
or
out
ret
fistpl
pop
into
sbb
xor
mov
out
test
cmpl
mov
sub
sti
bound
test
je
movsb
cmpsl
dec
fsubrs
jl
cmpsb
dec
add
inc
decb
add
cmp
cmp
out
pop
clc
push
push
das
aad
stos
dec
in
rolb
mov
in
in
mov
xor
ds
aas
hlt
sub
pop
jge
arpl
mov
sarb
and
sbb
call
mov
loope
ret
loope
pusha
sbb
out
push
mov
and
mov
fstpl
lcall
je
jg
mov
sub
inc
or
insl
mov
sahf
out
mov
fistl
push
dec
add
fdivs
fdivl
daa
and
insb
dec
int
mov
sti
xor
inc
xchg
mov
pop
add
push
lods
jmp
dec
xor
into
add
push
in
push
and
roll
fistpll
jne
mov
in
add
inc
or
insb
and
mov
outsl
mov
adc
ror
push
cli
push
mov
scas
jns
sub
add
call
xlat
adc
add
clc
push
dec
fisubs
or
or
inc
dec
and
and
sbb
mov
repnz
ja
add
pop
pusha
jbe
mov
mov
push
dec
cmp
and
adc
adc
push
insl
fcmovu
arpl
add
sahf
enter
sbbl
sbb
jo
std
jno
rcr
jb
jmp
decl
lea
mov
mov
fmul
pop
sbb
jb
fcomip
std
pop
rolb
shlb
loopne
ret
mov
dec
cmp
or
or
or
clc
je
fisubrl
std
in
sub
adc
or
inc
sbb
std
test
into
insb
or
add
xchg
pop
push
add
loopne
popa
testb
mov
cmp
jle
sbbl
fucomp
pop
pushf
or
subb
and
icebp
pop
sub
sbb
pop
mov
jne
pop
aas
adc
inc
mov
scas
or
jo
sarb
nop
dec
cli
cmpsl
sbb
add
mov
lock
ret
loope
adcl
mov
jl
xor
xlat
jns
and
inc
rorl
ja
mov
jge
mov
in
pop
sbb
or
pop
mov
sbb
fs
fildll
add
or
add
and
sahf
cmc
cltd
inc
mov
lahf
xor
push
pushl
adc
add
cmp
and
mov
fs
pop
mov
notb
shrl
scas
add
iret
jo
hlt
lods
aas
push
add
and
or
sub
mov
jle
cmp
ds
das
mov
sbb
lock
adc
sub
ljmp
cmc
jg
in
fldenv
std
xchg
push
insl
add
ret
push
xor
mov
or
push
nop
mov
rcrb
test
repz
cmp
sbb
ret
or
mov
repnz
int
cmp
pop
cmpl
push
inc
inc
pop
repnz
mov
fistl
ljmp
cmp
push
popa
pusha
add
popa
aam
out
jmp
jbe
std
arpl
jbe
mov
xchg
nop
and
inc
cmp
mov
fstl
mov
push
inc
or
mov
nop
jmp
int3
adc
adc
inc
or
sbb
call
or
pop
push
mov
or
jle
push
cld
scas
mov
or
decl
js
and
mov
inc
daa
out
sahf
xchg
xchg
xchg
add
scas
jecxz
es
movsb
outsb
in
inc
mov
inc
ror
data16
push
ret
clc
sbbl
bound
push
sbb
addr16
or
pop
cmp
xchg
and
adc
pusha
mov
out
xor
inc
cmc
loop
inc
add
mov
arpl
shll
and
pop
cwtl
mov
push
decl
push
lret
xchg
xorb
dec
inc
xchg
test
das
adc
push
call
fcomps
mov
jecxz
fistps
add
cld
das
sti
add
in
inc
es
inc
dec
inc
loopne
jae
fadds
ja
pusha
lahf
add
mov
jle
ss
mov
out
in
sbb
mov
xor
add
insl
push
dec
push
out
add
pop
and
xchg
test
addb
mov
mov
dec
stos
les
ficoml
sbb
imulb
or
imul
or
stos
call
nop
loopne
inc
add
iret
xchg
mov
push
or
xchg
mov
lea
aaa
stc
add
mov
cmpsl
js
jg
cmp
hlt
xchg
add
mov
xor
push
fldt
mov
xor
mov
dec
cli
jl
lods
mov
dec
push
icebp
adcb
sub
clc
stos
call
xor
les
push
jecxz
pop
dec
inc
popf
aam
inc
enter
stc
icebp
lods
adcl
mov
jno
leave
mov
mov
sbb
enter
and
jecxz
cld
mov
mov
movsb
inc
mov
cltd
inc
pop
stos
push
xchg
cwtl
je
xlat
inc
mov
mov
jle
pushl
cmc
cmp
sti
aam
adc
adc
std
or
clc
ffreep
pushf
mov
cmp
jg
or
xchg
std
jle
push
popa
nop
cmpsl
aas
add
cmp
pop
or
call
jnp
jb
sub
mov
and
add
and
call
xchg
push
nop
push
subb
add
je
lcall
add
enter
arpl
je
xchg
decl
fldcw
stos
mov
mov
mov
mov
insl
sbb
adc
je
add
xor
shlb
rcll
rcrb
jecxz
shll
push
mov
jnp
mov
lret
jg
popf
fimuls
sar
nop
test
daa
popa
sahf
lods
data16
xor
test
sub
adc
mov
incl
and
mov
fcmovnbe
jae
adc
cmpb
repnz
in
adc
jp
push
or
adc
cltd
arpl
imul
data16
xchg
nop
add
ljmp
add
jne
pop
pop
sahf
in
add
scas
push
jp
popf
jl
fcoms
and
addr16
jo
pop
repz
xchg
and
mov
push
data16
ds
dec
adc
xor
sbb
inc
sub
repz
push
mov
inc
loopne
xchg
bound
or
roll
js
and
xor
js
xor
clc
mov
push
or
mull
xor
ljmp
es
mov
push
test
test
out
scas
lds
mov
lcall
sti
adc
mov
sbb
inc
add
pop
adc
movsl
in
ret
sub
pop
mov
aam
mov
cmp
stos
cmp
mov
sbbl
adc
lcall
ds
subl
fsubl
lea
mov
or
sbb
fsubrl
in
call
test
gs
sub
mov
sbb
add
insl
fidivl
stos
adc
das
xchg
inc
clc
xchg
sub
pop
pop
mov
pop
mov
stos
add
cmp
or
jl
hlt
call
test
cltd
inc
bound
adc
pop
insb
dec
mov
or
lahf
dec
sar
cmp
and
inc
imul
mov
add
or
or
mov
insb
add
mov
adc
xchg
mov
out
rolb
call
ljmp
xlat
jae
out
cwtl
push
fmuls
xlat
inc
xor
inc
mov
les
sub
inc
mov
xchg
push
test
cld
mov
dec
bound
dec
enter
fdiv
mov
xchg
and
pop
nop
lret
sub
sbb
not
jnp
outsb
call
xchg
sbb
mov
mov
lea
mov
mov
rcll
shl
xchg
pop
loop
shrb
jbe
stos
cli
icebp
test
mov
fdiv
and
nop
adc
clc
sub
adc
sbb
or
push
and
add
or
adc
inc
xchg
jg
rclb
mov
xor
mov
decl
pop
and
stc
inc
mov
sbb
sub
imul
sbb
and
xchg
pop
mov
jl
aaa
fcoms
and
loope
sub
jmp
cld
fildll
mov
bound
lea
mov
decl
mov
inc
jg
aam
xchg
hlt
push
cs
fwait
add
lahf
pop
mov
std
and
cmp
lea
jmp
inc
neg
in
out
clc
dec
pop
add
push
push
pop
nop
pop
sbbb
xor
dec
xor
insl
cmp
pushl
nop
std
jbe
gs
ret
inc
lods
sub
jp
je
xchg
push
sub
xchg
pop
xor
dec
add
xchg
add
lcall
clc
out
ljmp
add
adc
jmp
lea
pushf
test
fstl
shlb
fimull
fwait
aad
sub
imul
data16
mov
sub
mov
and
lahf
lea
mov
add
repz
mov
inc
sbb
add
rclb
scas
mov
push
jecxz
push
push
loope
xor
imul
decl
ficoml
stos
sahf
jecxz
mov
adc
sarb
std
ds
add
inc
mov
leave
int3
jl
inc
insb
cmp
mov
out
fidivrs
mov
jns
push
bound
push
sbb
test
jg
iret
mov
loopne
jp
cmp
negl
mov
out
push
bound
js
loopne
push
enter
fcmovnu
push
mov
add
js
cmp
push
mov
add
test
inc
inc
jb
mov
adc
mov
xlat
mov
or
mov
or
adc
or
int
fldl
xchg
push
adc
sbb
or
xchg
add
push
sub
out
shrb
rcrb
call
and
fs
lret
lret
sub
cwtl
divb
mov
mov
das
jmp
loopne
rcrb
mov
addb
roll
ret
push
or
mov
cwtl
xchg
jp
cld
sbb
mov
sub
sbb
loopne
fistpl
ja
in
push
dec
xor
adc
je
cmp
push
and
push
mov
cld
lret
cmp
pushf
mov
xor
mov
jecxz
jne
lea
jb
rorl
jp
nop
push
xor
mov
clc
cld
scas
dec
les
in
cltd
test
pop
inc
push
sub
inc
mov
cld
lret
stos
push
pop
pop
mov
push
jge
sub
mov
inc
cmp
push
add
or
insl
lahf
dec
jle
xchg
roll
jl
sbb
sbb
loop
fisttps
xor
pop
add
mov
cmp
cmpsb
nop
pop
inc
inc
cs
mov
sub
cs
ss
inc
mov
iret
or
in
jmp
push
push
push
loopne
add
cmp
test
cld
mov
mov
clc
mov
test
in
lahf
and
sub
pop
les
push
orl
mov
add
inc
je
leave
jae
push
stos
pop
or
cmc
lock
sbb
stos
or
decl
jb
int
gs
loope
mov
inc
push
dec
loopne
aaa
xor
stc
mov
pushf
les
fsubrp
sti
add
jl
and
jno
sbb
mov
adc
mov
xor
cld
xor
and
stos
pop
adc
mov
int3
lahf
pop
or
mov
inc
adc
inc
pop
dec
lahf
cmp
rclb
inc
jbe
xchg
je
ds
pushf
pop
mov
xlat
push
pusha
mov
out
xrelease
jnp
pop
insb
lds
sbb
jns
dec
add
inc
and
stos
shl
pop
push
cmp
in
nop
rol
xchg
sub
fisttpll
repnz
cmovnp
add
adc
insb
repz
pop
push
xchg
shlb
cld
outsl
mov
fadd
ror
pop
clc
mov
idivb
push
mov
sbb
ds
mov
movsl
std
fisttpll
aad
shlb
lock
pop
inc
cmp
call
mov
pop
or
add
lea
icebp
movsl
mov
push
dec
mov
add
test
test
and
push
or
daa
jle
sbb
push
mov
fsubs
adc
bound
shl
cmp
into
fimull
mov
pop
cmp
add
rorb
and
add
idivl
rcll
outsb
cmpsb
movsl
sbb
fisubs
outsl
aaa
pop
call
test
inc
adc
and
outsl
nop
cltd
dec
out
add
xor
scas
js
add
sub
lods
cld
or
xchg
cmp
sbb
mov
jg
or
adc
add
jge
sbbb
sbb
fildll
ljmp
xor
dec
loop
mov
sub
dec
inc
fs
andl
incb
outsb
mov
lcall
jae
orps
insb
xor
lock
or
mov
xorb
adc
mov
std
mov
jo
adc
push
push
inc
loope
mov
lods
add
or
call
js
sbb
push
sub
xchg
inc
and
push
dec
pop
cld
leave
call
gs
lcall
jne
call
pop
cld
hlt
adc
sarb
mov
mov
adc
into
dec
mov
pop
inc
and
shr
push
mov
pop
loop
or
adcb
add
int
push
add
push
test
dec
bound
lcall
mov
rorb
clc
mov
push
and
cmp
xchg
jo
adc
xor
adc
jle
or
mov
add
lcall
fdivrl
xchg
xchg
mov
sbb
push
je
ret
mov
xchg
xchg
shl
jmp
sbb
cltd
fsubs
inc
and
dec
lea
push
inc
js
adc
fs
xlat
pop
mov
cmp
lods
jbe
lcall
mov
dec
sbb
js
pusha
xchg
ljmp
inc
pop
scas
pop
or
neg
cwtl
mov
outsl
mov
inc
push
add
push
insb
mov
sbb
xor
xor
sbbl
mov
test
dec
insb
loop
or
je
std
xor
add
lds
ret
sub
arpl
sub
mov
sub
inc
or
mov
push
jnp
je
mov
fdiv
out
sbb
inc
sub
cltd
test
push
jae
loopne,pn
lods
in
imul
loope
sub
cmp
lahf
mov
cli
popa
xchg
ficoml
xchg
or
addl
shrb
adc
or
std
mov
mov
push
in
cmp
sub
adc
dec
dec
mov
btr
ret
xor
in
popf
mov
push
stos
push
mov
out
pmaxub
inc
xchg
xchg
ret
jle
cmpsl
lahf
ljmp
add
mov
mov
outsb
lock
stos
mov
push
xchg
jmp
mov
movsl
cmp
jmp
bound
xchg
aaa
xor
push
sub
xor
int
sbb
daa
orb
stc
xchg
mov
mov
loope
xor
pusha
mov
ret
pusha
jmp
sub
inc
inc
or
mov
jp
cwtl
pop
mov
rcrl
mov
mov
mov
add
mov
inc
push
and
sub
hlt
lret
pusha
jb
inc
lea
push
push
mov
add
xchg
mov
cmpsb
push
or
lock
loopne
cmp
into
shrb
pop
lcall
xchg
inc
sar
pop
add
push
fs
ret
fstl
jnp
add
jle
jp
mov
ret
sub
fs
imul
jle
ret
jmp
xlat
mov
push
jno
pop
in
cmp
es
lods
xor
outsb
lods
inc
cld
out
and
or
leave
adc
ss
pop
mov
es
lret
insl
ljmp
and
jbe
add
and
dec
ja
mov
cmpsb
shr
mov
bound
loope
push
dec
mov
push
scas
xor
xor
jbe
out
lock
cwtl
roll
pop
xchg
or
and
mov
orb
pop
lahf
addb
in
leave
jbe
loop
dec
std
scas
and
out
jge
dec
cmp
lret
pop
and
insb
jbe
ljmp
inc
mov
call
adc
sbb
out
and
hlt
add
sbb
sbb
aaa
icebp
inc
mov
add
jl
mov
mov
fisubs
dec
nop
pop
test
push
nop
push
push
mov
nop
mov
lds
sbb
cmp
sbb
cld
negb
sbb
dec
lret
xor
ljmp
or
push
cmp
and
insb
and
mov
inc
mov
push
xchg
sub
fstps
lahf
pop
call
idivb
mov
jecxz
fnop
xchg
xchg
bnd
test
fnstsw
add
add
loop
adc
push
xor
jle
outsl
cmpb
jge
orb
shrb
push
mov
add
aaa
or
pop
fisttps
push
gs
imul
pop
push
push
jg
adc
inc
das
fsubs
lock
pop
push
lcall
dec
inc
ret
mov
dec
and
or
inc
out
mov
jle
mov
fmuls
or
add
insl
jg
adc
push
mov
test
and
bound
pushf
cli
push
fbld
in
mov
mov
add
push
mov
out
nop
in
arpl
jo
ret
dec
and
ret
and
or
aaa
lods
sarb
cli
nop
mov
sti
sub
inc
sarb
incl
cwtl
mov
pushf
aad
lret
dec
xchg
push
popa
inc
mov
mov
mov
pushl
lock
or
sbb
sbb
or
inc
push
push
movsl
nop
outsl
push
jmp
sub
pusha
cs
sbb
fcom
sub
mov
add
stc
pusha
addr16
cwtl
dec
out
fisttps
test
mov
jo
push
imul
loope
rcll
mov
addr16
adc
and
pop
repz
lcall
xchg
sbb
sbb
and
pop
mov
push
mov
fdivr
push
enter
imul
fnstenv
repnz
mov
hlt
mov
add
lea
std
ss
xchg
mov
testb
fildll
mov
sbb
pop
leave
sub
pushl
jae
sub
jle
dec
dec
jl
jne
inc
jmp
into
adc
dec
sbb
jb
daa
rcrb
decl
xor
clc
repz
gs
orb
inc
push
roll
imul
orb
ljmp
jle
jbe
std
scas
fbstp
iret
jle
jmp
sub
std
mov
sbb
pop
cli
repnz
data16
std
mov
xchg
arpl
lcall
sub
rorb
dec
sub
lods
je
cmp
inc
lcall
dec
or
imul
decl
push
xchg
push
rcll
jns
idivl
sub
add
ret
std
jmp
mov
call
inc
in
fisubrl
pop
aas
mov
add
clc
data16
cld
mov
or
adc
mov
out
mov
sub
adc
das
rorb
mov
aaa
outsl
cli
dec
aas
or
loopne
cmp
xor
jno
inc
cli
xchg
in
orl
lea
es
xchg
pop
neg
sbb
cmpsb
adc
hlt
sub
push
sub
xchg
pusha
in
cmc
push
fwait
popf
cmp
push
xchg
add
insl
call
out
sti
bound
mov
imul
test
mov
xorb
inc
jbe
daa
xor
lret
xchg
xchg
inc
mov
dec
jp
mov
sub
out
dec
fwait
adcb
mov
inc
or
ljmp
inc
dec
adc
sbb
orl
imul
push
ljmp
mov
add
vaddsd
movsl
popf
cltd
negl
or
popa
mov
push
sub
scas
dec
and
cmp
inc
cmpsb
scas
jmp
jge
adc
arpl
cmp
incl
xchg
xor
sbb
cmp
pop
add
jecxz
cwtl
sbb
vprotw
js
idiv
jmp
xchg
aam
pushl
dec
push
imul
xor
lahf
movsl
loopne
sbb
shrb
sti
pushl
lods
xchg
fldenv
push
loope
push
jmp
lods
test
idivl
lea
push
lds
xchg
fcomip
jl
leave
out
shr
mov
adc
cmp
mov
seto
inc
ss
test
jp
inc
mov
mov
push
jp
lods
mov
int
add
pop
dec
ret
mov
ss
insl
repnz
and
sarl
jmp
inc
ret
mov
sub
xchg
mov
pop
jno
movl
out
adc
nop
nop
into
inc
nop
jno
jp
je
daa
sbb
add
lods
push
popf
data16
mov
cmp
mov
insl
cmpsb
mov
pop
popf
outsl
dec
mov
mov
cmp
mov
push
fimull
leave
sar
incl
xor
loop
jmp
inc
cltd
cmpsl
add
adc
xor
mov
sbb
outsb
add
lahf
nop
fstps
xchg
into
sbb
sbb
and
ljmp
push
sarl
addl
pop
andb
pop
cmp
lahf
decl
mov
and
nop
mov
jge
sahf
pop
scas
std
data16
dec
mov
in
ljmp
repz
mov
enter
cmp
add
imul
mov
mov
and
in
mov
jp
jno
lahf
mov
cltd
ja
lcall
movsl
incb
test
and
arpl
push
jg
incl
fistl
jnp
xchg
scas
imull
lret
mov
std
lcall
out
out
ja
pop
cmc
adc
jo
cmp
test
mov
lret
mov
mov
jecxz
loopne
mov
pop
cmp
imul
decl
jno
lds
sub
rep
enter
adc
sar
jnp
ret
fs
cmp
mov
mov
test
dec
das
push
fldenv
in
jg
scas
pop
sbb
and
int3
fwait
cmc
stos
fcoms
ds
mov
cmp
pop
cld
ljmp
pop
aad
lret
jae
adc
sub
jecxz
pop
icebp
mov
cmpsb
cmp
call
and
fcmovnu
mov
dec
adcb
shrl
outsl
cmp
jge
loop
pop
xor
mov
xor
lret
aaa
dec
ret
mov
rcr
inc
inc
dec
test
mov
add
arpl
dec
aad
dec
mov
xor
test
jmp
out
sbb
pushw
scas
fnstsw
adc
inc
lods
mov
out
cltd
and
cmp
out
jae
test
push
orb
mov
fstl
add
mov
int
or
ljmp
aam
jg
cs
xchg
push
mov
or
rolb
pop
out
cld
incl
add
xchg
cmp
pop
add
inc
sub
mov
call
cld
xor
outsl
xchg
insl
inc
push
inc
rcr
inc
push
mov
addl
ja
incl
jmp
xlat
xlat
sbb
inc
push
fiadds
pushl
stos
jno
es
and
add
push
jbe
rcrl
add
xor
cwtl
lcall
je
fwait
outsl
jecxz
addr16
shrl
lahf
insb
sbb
mov
push
push
popf
sub
sub
cmp
push
mov
inc
ja
rcr
cltd
insb
std
sub
add
pop
push
jbe
push
movsb
pushf
mov
cli
incl
pop
jno
pop
dec
ret
into
adc
lcall
jl
pop
in
ljmp
sbb
sub
ds
mov
popa
fists
dec
call
mull
jne
xor
jno
std
mov
xchg
js
cmpsl
sahf
xchg
inc
ss
cli
xor
fldt
add
mov
mov
jl
cmpsb
inc
cmp
call
mov
ja
cmp
or
pop
pop
pop
movsb
popf
mov
add
sub
cwtl
pop
std
mov
mov
lods
dec
adc
rcrl
sbb
idivb
xchg
add
push
jmp
adc
dec
jp
add
fcompl
ficoml
jg
bound
decl
lods
sub
mov
enter
pop
jmp
push
test
in
xchg
imul
fcomi
inc
pop
sbb
adc
sub
jmp
jbe
in
ffreep
lea
jmp
insl
inc
dec
or
cmp
ret
clc
lret
pop
repnz
cmpsb
pop
lds
rorb
call
int3
les
lcall
push
sbb
scas
leave
je
movl
dec
sar
shr
test
outsl
nop
dec
add
popf
push
out
out
jg
fsubr
jmp
inc
lret
lods
cwtl
adc
xor
sub
mov
mov
popa
cmp
gs
decl
cltd
repnz
add
push
icebp
loop
cwtl
add
adc
push
rclb
cli
push
cs
mov
jp
pop
jle
add
movsl
xchg
push
xorb
add
test
cmp
xlat
jecxz
ret
pop
test
movsl
leave
sbb
cwtl
test
scas
not
and
jecxz
rolb
decl
xor
dec
or
aam
daa
shll
sahf
mov
mov
lret
ljmp
xchg
test
pop
mov
cmp
sbb
sar
cmp
ljmp
mov
push
push
add
decl
pushf
push
gs
out
sub
andl
ljmp
pushf
pop
pop
jbe
mov
orb
push
test
popa
mov
cmp
xchg
imul
jns
ss
mov
mov
adc
pop
sub
pushf
aam
xchg
push
dec
ret
sub
pop
ret
leave
lds
mov
imul
mov
sbb
mov
push
or
pushl
mov
mov
or
push
das
js
popf
and
gs
push
and
repz
push
dec
pop
int3
sbbl
lea
sub
inc
lcall
pop
mov
into
cmp
add
aaa
inc
and
jnp
loopne
ljmp
pop
adc
leave
shl
dec
ds
aas
pop
or
in
cmpsb
xchg
push
mov
inc
icebp
fdivrp
inc
pop
or
fmulp
stos
push
mov
push
sub
je
or
mov
das
cli
jmp
sbb
mov
jne
cltd
xor
inc
sbb
pop
int
xchg
loope
xchg
imul
lcall
cmpsb
js
lods
lret
xchg
sti
mov
hlt
push
lea
pop
sahf
cmpsb
mov
nop
xchg
decl
sbb
xor
sub
stc
add
imul
jmp
ljmp
lock
and
out
pop
push
repnz
cmpsl
insl
mov
xor
mov
sub
incl
dec
xchg
fdivl
je
dec
cld
jo
cld
mov
lahf
lret
push
sub
add
es
cmp
imul
incb
jle
hlt
lock
rcr
pushl
xchg
pop
into
ljmp
insl
test
xor
pop
movsl
mov
pop
mov
loope
dec
movsl
mov
out
fcmovbe
rclb
pop
xchg
push
push
push
fcomip
push
test
adc
enter
jecxz
jecxz
fs
jecxz
mov
jge
ljmp
xor
incb
cvtdq2ps
and
test
mov
inc
jge
add
jg
cmp
in
jb
enter
inc
mov
fstl
pop
jp
xchg
inc
std
mov
inc
shll
jno
push
shlb
insb
adc
pop
xor
lods
cmc
cld
dec
xchg
and
test
pushl
inc
xchg
ja
and
push
jg
ficomps
fimuls
xchg
and
fisttps
fldt
jmp
jmp
into
das
pop
sbb
into
addl
jne
pushl
arpl
aad
cmp
cld
xor
push
sbb
insb
cltd
inc
and
clc
jle
mov
call
or
mov
pop
and
xor
ja
data16
rorl
jp
push
iret
insb
push
jg
incb
pminub
inc
add
xchg
fcos
incl
aad
sahf
iret
out
cltd
scas
pop
jp
mov
xchg
or
push
mul
add
mov
pop
outsl
mov
mov
fstps
inc
sbb
rorb
pop
sti
sbb
mov
xor
cmp
std
leave
mov
pop
sbbl
xor
push
xor
stos
daa
ja
jb
mov
push
sub
dec
arpl
push
cli
cmp
or
mov
stos
and
dec
lock
cmp
test
int3
sbb
pushl
sub
out
mov
test
pop
xlat
xor
hlt
dec
ror
mov
pushl
pop
stos
outsb
ficompl
mov
ss
cmc
ret
loope
add
outsl
pop
outsb
mov
jg
decl
imul
push
push
popl
dec
mov
and
ljmp
sbb
scas
cmp
jp
pushf
bound
mov
pop
loop
jae
mov
ret
jmp
pop
mov
enter
incl
pushf
je
sbb
stc
and
popa
stc
mov
xchg
or
shlb
jg
movsb
pushl
cs
dec
sub
mov
push
fisttpl
iret
sub
sub
inc
decl
lock
test
inc
popa
das
jge
pop
dec
sbb
adc
push
and
fimull
test
cmp
xlat
es
imul
xor
sarl
decl
push
jae
adc
pushf
push
push
or
pusha
xchg
loop
mov
ret
enter
nop
call
and
and
dec
mov
xlat
dec
arpl
sub
sbb
popa
dec
xchg
mov
loopne
jle
pop
int
fldenv
jl
mov
jbe
test
jne
cmc
jmp
and
mov
sub
xor
xlat
inc
push
sbbb
dec
roll
xchg
pop
movsb
mov
jg
jmp
mov
add
or
fucomi
add
mov
pushl
outsl
lds
int3
xchg
cmp
lcall
sahf
aaa
loope
out
mov
adc
sub
lcall
push
icebp
popf
xchg
test
jo
jns
stos
int
cmc
flds
ret
mov
xor
pushf
mov
dec
popa
sbb
mov
mov
cmp
pop
test
push
ljmp
xchg
add
popf
jo
in
pop
loopne
mov
gs
movl
mov
jmp
mov
pusha
stc
iret
push
sti
cwtl
or
cmpsb
mov
pop
mov
pusha
push
xchg
xor
sub
incl
or
xchg
in
jb
jl
mov
out
cmp
scas
sbb
jmp
mov
andb
out
cmpsl
ret
data16
rcll
lock
rol
js
popl
andb
repnz
lahf
inc
mov
pop
in
dec
jle
sbb
xchg
jbe
in
cmp
iret
repnz
out
js
pop
mov
mov
or
jmp
jl
rorl
inc
dec
xchg
or
out
cmp
rcrl
call
adc
rorb
int3
add
filds
adc
lds
xor
inc
mov
xchg
cmp
inc
jge
cmp
outsl
add
outsb
fsincos
dec
scas
pop
ret
push
xchg
xlat
pushf
iret
lock
lcall
cmpsl
push
pop
popf
insb
not
jp
mov
mov
xchg
lods
xor
call
push
cli
insb
pusha
or
inc
test
gs
aas
sbb
jmp
pop
rorb
decl
loope
cld
in
xor
ja
bound
icebp
decl
lea
ja
jb
bound
cmp
mov
loope
fists
mov
leave
xor
sbb
faddl
insl
jns
std
mov
sub
int
dec
ret
mov
dec
stos
das
notl
imulb
cmp
fwait
pop
loopne
flds
pop
imul
add
mov
daa
push
call
cmp
and
cs
cltd
les
mov
xor
pop
in
mov
dec
in
and
pop
cmp
xchg
push
test
movb
es
in
pop
add
adc
add
inc
jb
jo
int3
clts
jmp
iret
aaa
jl
or
mov
in
popa
cmp
fdivl
mov
pop
call
cmp
adc
inc
aad
movsb
pushf
loop
shl
and
pop
lret
lahf
mul
sbb
stos
jmp
inc
pop
scas
repnz
iret
xor
or
pop
in
sbb
cli
outsb
jne
cmpb
cld
push
ljmp
std
mov
or
cli
rorl
bound
sti
push
xor
adc
cltd
aad
or
sbb
mov
sub
ds
lcall
or
ljmp
mov
call
push
xor
sti
loope
pop
movsb
pop
cmp
adc
ljmp
mov
lahf
popf
add
in
or
ja
mov
xchg
and
xchg
mov
ljmp
xcrypt-ctr
cmpsl
pop
ret
test
fwait
mov
in
sbb
fdivrp
mov
pushf
inc
adc
mov
int3
xchg
pop
lea
lcall
sti
pop
mov
cmp
push
push
mov
ljmp
aad
xchg
xor
in
xchg
cmp
dec
mov
sbb
pushl
and
clc
xor
rcr
into
sub
fs
mov
stos
fistl
gs
adc
movsb
push
jecxz
out
jmp
insb
mov
lret
or
mov
call
adcb
decl
pop
ja
je
mov
xor
enter
adc
pop
scas
call
stos
or
sub
scas
mov
sbb
mov
fcomip
pushl
and
lret
sbb
xlat
jmp
jecxz
ds
mov
inc
jb
addb
decl
aas
shll
pop
test
mov
lods
pop
out
mov
jo
mov
cmp
jg
fists
xchg
sub
pop
mov
inc
repz
pusha
jbe
mov
inc
lds
mov
pop
enter
das
add
add
outsl
out
and
movsl
ficoms
aad
mov
js
das
arpl
repnz
or
xor
dec
add
lcall
sub
xor
shl
addr16
sub
push
sti
fbld
xchg
or
ljmp
movsb
aaa
sub
ret
decl
lcall
cmp
js
stos
sbb
sub
jg
fisttps
cmpsl
dec
in
inc
jmp
inc
pusha
lods
shrb
sbb
and
lcall
in
xchg
sub
pusha
lods
sub
shl
inc
or
inc
xchg
lret
decl
jmp
repnz
inc
mov
sbb
sbb
cltd
rorl
fsubr
dec
pop
pop
xchg
das
inc
jne
mov
leave
lret
inc
sbb
and
scas
clc
incl
stos
stos
push
test
xchg
outsb
movsb
cli
das
cmp
pop
lcall
icebp
mov
sbbb
repnz
adc
call
cld
mov
stc
cwtl
xchg
lahf
adc
adc
in
shlb
aam
loope
arpl
aaa
cld
ljmp
dec
dec
outsb
mov
adc
push
inc
sti
dec
lds
sar
adcl
sbb
cwtl
leave
out
rorb
sbb
fstp
lock
call
iret
pop
jnp
insb
mov
cmp
or
push
push
pushf
sar
adc
incl
dec
stc
aas
int3
insb
test
inc
pusha
cltd
or
sbb
and
ss
jne
arpl
test
jnp
in
fbld
dec
shl
mov
out
xlat
jmp
jae
push
popa
add
clc
shlb
xchg
add
mov
push
shlb
xor
inc
lret
incl
orl
pop
mov
mov
leave
mov
xchg
decl
int3
mov
idiv
xor
lcall
incl
ret
sub
sub
aam
pop
xor
mov
pusha
adc
push
push
mov
jmp
rcrb
jne
negl
xor
mov
bound
xchg
loop
repz
cld
decl
lcall
add
insl
dec
shlb
insl
pusha
sbb
jmp
mov
jbe
adc
mov
lock
push
in
test
jnp
jmp
xor
xchg
insl
mov
push
xchg
dec
push
sti
sbb
fld1
jb
loopne
cmp
add
out
sub
stos
jo
xor
cs
test
jb
rorl
fucomi
call
sbb
outsl
loop
loope
inc
icebp
mov
mov
pop
mov
lret
inc
lret
mov
call
in
subb
icebp
nop
mov
and
aas
outsl
addr16
xchg
xchg
and
ljmp
sub
mov
sub
xchg
dec
mov
xchg
xor
jae
pushl
cmpsb
andl
lea
mov
pushw
icebp
jl
cltd
cmp
dec
stos
decl
pop
mov
pop
loop
pop
into
cmp
jecxz
lock
decl
push
jae
test
shl
insb
cmp
pop
pop
mov
mov
jmp
xchg
decl
jmp
xor
cmp
es
mov
lcall
or
into
test
pop
mov
fs
and
mov
idiv
jmp
inc
cltd
call
cmc
int3
lea
hlt
push
push
push
push
adc
push
dec
das
adc
andb
sar
pushl
pop
sti
inc
mov
int
and
lods
mov
push
dec
or
stc
adc
jmp
pop
lret
fnstsw
std
xchg
fisttps
pop
mov
mov
fldl
and
xor
jmp
sahf
leave
pop
mov
leave
mov
jno
daa
testb
ljmp
clc
cmp
and
icebp
aas
adc
add
fstpl
dec
lds
sub
lcall
pop
xchg
fistpl
cld
cmc
out
js
jecxz
xchg
fimull
sti
outsb
adc
pop
push
out
mov
sbb
jg
scas
jmp
xor
lea
pop
pop
mov
adc
mov
jmp
iret
mov
xorl
pushf
addr16
ret
push
adc
dec
and
repnz
xorb
mov
addb
jmp
pushl
std
xchg
mov
jo
popf
ret
push
and
push
fdivl
dec
mov
iret
dec
inc
sbb
inc
inc
sahf
add
sub
push
div
sub
test
sbb
pop
std
jmp
cltd
sbb
dec
mov
mov
or
add
insl
dec
call
lret
xor
mov
or
ljmp
cmp
sbb
jmp
push
dec
cmp
push
add
push
and
movd
xor
lret
in
repz
cmp
lea
xchg
icebp
add
push
mov
aas
sti
mov
repnz
clc
sub
incl
or
fs
lea
adcl
lea
dec
adc
mov
and
inc
jl
lcall
inc
enter
xchg
cli
dec
das
outsl
movsl
int
mov
enter
mov
xor
ljmp
add
pop
in
dec
clc
dec
inc
pop
stos
pushf
test
dec
je
xchg
adc
pop
in
call
decl
mov
cli
inc
jecxz
mov
ret
jmp
test
cmc
std
movsb
cmpsl
shlb
mov
lcall
sti
mov
and
rcrl
out
mov
fsubrs
cmp
lods
adc
jns
test
or
decl
sub
enter
jb
sbb
fisttpl
cli
lods
loope
decl
or
inc
inc
pop
fcom
jne
or
add
icebp
incl
xchg
sbb
mov
mov
dec
aas
push
movsl
dec
fcomp
pop
and
ljmp
lret
mov
mov
nop
add
xchg
jae
push
dec
sbb
sti
iret
inc
in
mov
int3
hlt
stos
fsubs
adc
jnp
inc
fisubrs
call
and
xor
sarb
mov
sub
sar
sub
pop
push
sbb
in
pextrw
fwait
sar
jl
cmpsb
orl
mov
push
hlt
cmp
out
mov
pop
mov
dec
jae
decl
enter
scas
int
dec
dec
test
mov
jmp
lods
pop
mov
and
sub
enter
sbb
mov
aam
mov
push
icebp
shr
pop
sahf
iret
xchg
scas
xor
fistpll
or
rcrb
dec
jae
xchg
orb
mov
lret
jl
lret
mov
inc
push
ljmp
outsl
jl
scas
add
sbb
mov
dec
adc
leave
cld
xchg
decl
call
fstp
push
imul
in
out
call
inc
xorb
call
mov
sbb
ds
addr16
rcr
movsl
test
cmp
jg
jbe
push
mov
pop
mov
sbb
pop
daa
mov
mov
jmp
cmovb
mov
or
jo
pop
mov
sbb
hlt
inc
mull
inc
lcall
and
xchg
insb
out
sub
cmp
cmp
jecxz
dec
cmp
daa
scas
pop
pop
sbb
ljmp
ljmp
dec
mov
divl
es
ja
cmc
nop
xchg
das
aam
push
cld
movsl
jmp
jg
ret
push
or
test
xchg
in
adc
xlat
sub
and
jp
decl
push
ja
and
xor
or
ja
mov
cli
pop
xchg
call
xchg
out
add
jmp
sub
or
sbbl
xor
fxch
daa
or
out
or
pushf
adc
sub
sub
inc
shl
je
or
cmp
xchg
lock
push
xor
pop
jge
mov
or
sarb
push
xchg
cmpsl
leave
inc
mov
adc
je
popa
jl,pn
sub
inc
insl
mov
mov
incl
outsl
dec
ret
pop
mov
mov
movsl
out
fisttps
jae
lret
jmp
xor
pushl
dec
mov
sub
push
mov
sbb
mov
ja
mov
je
cwtl
shll
out
andb
nop
mov
in
out
xor
mov
adc
pop
out
add
in
enter
add
aam
and
pop
xor
add
loope
cli
jmp
call
cmp
aad
mov
xorb
enter
push
in
jl
bound
lcall
jecxz
inc
ret
jnp
into
xlat
int
cmp
fidivrl
lret
loope
dec
pop
xor
andb
stc
cmp
andl
inc
js
mov
xchg
cmp
fstl
adc
pop
icebp
xchg
shll
push
loopne
leave
fidivs
xor
add
jb
push
pushl
sbb
mov
mov
cltd
mov
aad
mov
and
jbe
rclb
inc
cmp
xchg
icebp
dec
sti
rol
and
ja
mov
cltd
inc
xchg
cmp
out
xor
adc
out
movsl
mov
and
sub
add
add
pop
xchg
push
pop
incl
cld
ljmp
movsl
lret
dec
cld
test
and
aas
imul
lcall
adc
cld
inc
push
lock
stos
cwtl
stc
js
lcall
pushl
cmpsl
imul
sub
faddl
dec
xchg
xchg
test
mov
decl
or
das
add
fwait
outsb
das
fdivr
arpl
mov
jmp
jo
pop
ffreep
inc
add
pop
pop
add
push
pop
loope
mov
mov
inc
fnstsw
loope
mov
mov
mov
sub
fcoml
mov
dec
test
dec
testb
cmp
pop
mov
sbb
dec
push
pop
sub
push
test
incl
loope
fsubl
xchg
mov
aam
in
shl
adc
pop
xchg
leave
and
inc
mov
push
cs
roll
aam
push
fwait
lahf
lret
js
cmp
call
ret
add
sub
loop
xchg
test
loope
adc
lcall
jg
arpl
jp
rolb
xchg
sbb
ljmp
mov
movsb
mov
in
pop
roll
push
out
leave
jno
outsb
das
cli
pushl
mov
stc
imul
xchg
xor
cmp
or
in
xchg
aaa
mov
shll
ds
jae
stc
lds
dec
mov
pushl
jmp
and
shl
imul
push
movhps
js
pop
adc
jg
cld
out
push
pushl
nop
xor
in
mov
add
cwtl
movsl
pop
pop
cmp
xor
call
and
frstors
xor
jo
push
out
icebp
int
sub
push
mov
push
les
inc
xchg
fcompl
inc
mov
nop
mov
jbe
jecxz
mov
ret
add
pop
jnp
loop
mov
xchg
les
mov
dec
call
xchg
andl
pushf
les
subl
jg
aaa
stos
aam
pop
jecxz
aas
sub
xor
aaa
lods
push
int
pop
mov
xchg
xchg
push
int3
mov
jg
test
push
fdiv
inc
enter
decl
jg
adc
lret
les
leave
dec
push
dec
push
mov
cmp
pop
sub
daa
outsb
popa
sbb
aaa
std
popf
in
addr16
fisttpll
cmp
outsb
inc
pop
pushl
stos
mov
loopne
loopne
mov
fcmovb
and
sub
insb
das
inc
adc
and
pushl
add
ret
lahf
mov
mov
les
bswap
aas
mov
loop
pop
incl
jnp
lahf
push
and
add
bnd
adcb
mov
out
jl
push
out
repz
xchg
mov
cs
jae
push
pop
or
gs
cli
inc
aas
adc
xorb
and
cld
jp
std
dec
test
addr16
lcall
enter
or
cld
in
cli
fld
jle
push
ljmp
jno
mov
jmp
xchg
es
jo
pop
mov
or
les
inc
cli
rcrb
sub
xchg
out
int3
jg
jmp
mov
cwtl
jmp
shll
dec
orl
or
cmp
jmp
inc
sub
xor
test
mov
inc
jnp
loopne
test
test
sbb
jg
pop
dec
mov
cmpsb
mov
lea
aas
sti
std
fdivp
xor
bound
sub
pop
ret
enter
jg
dec
or
push
rcll
out
xchg
sbb
cmp
cmp
sub
sub
mov
repz
sub
mov
mov
xchg
aam
and
decl
lock
test
bound
adc
mov
into
cmp
ljmp
ds
dec
in
aam
cmpb
jnp
addr16
add
xchg
cmp
aas
mov
or
mov
add
inc
inc
incb
pop
stc
daa
dec
mov
mov
add
jmp
pop
jnp
push
xor
mov
cmp
cld
pushl
xor
sbb
bound
jp
iret
arpl
adc
idivl
cmp
fcoms
mov
out
push
adc
psrad
xchg
cmc
or
lcall
or
test
jecxz
mov
pop
aaa
in
ja
call
inc
loope
dec
mov
repz
arpl
inc
jb
lcall
fnstcw
mov
iret
cli
ljmp
mov
xor
jecxz
push
ds
cmp
or
outsl
xor
in
sbb
int
fs
ljmp
adc
movsl
icebp
sub
mov
fs
jne
arpl
xchg
dec
lods
ds
pop
mov
jo
hlt
je
inc
cli
ja
cltd
mov
xchg
sahf
addr16
add
xor
xor
fsubl
pop
and
push
cld
call
sub
mov
xor
mov
inc
daa
sbb
sar
lret
pop
hlt
ljmp
cwtl
cmpsl
mov
out
out
cli
ds
push
fisubrs
sub
cmp
dec
mov
fiadds
cmp
cmp
dec
push
movsl
incl
xlat
push
pop
sbb
sub
sub
xchg
mov
add
lock
lcall
cmp
stos
cmp
dec
push
stos
xor
sar
lods
mov
xchg
data16
pop
pop
enter
rol
imul
lret
scas
adc
orb
sub
push
xchg
dec
outsl
shl
fdivrl
popa
mov
lcall
testb
mov
dec
xlat
cmp
pop
inc
sbb
out
push
call
adc
aam
daa
js
xchg
leave
sbb
aam
mov
xchg
ljmp
cld
inc
add
sub
xor
aas
jb
test
sbb
jne
les
insl
cld
pushl
addr16
negl
into
pop
in
dec
jp
add
or
shrl
cli
sub
pushl
adc
jl
xchg
dec
push
test
mov
int
cwtl
in
pop
int3
push
loope
test
pushl
arpl
push
add
dec
xchg
mov
cld
sahf
loope
fwait
mov
dec
mov
pushf
lock
mov
mov
pop
stos
inc
pop
xchg
je
cmp
mov
adc
mov
jg
out
sub
mov
xor
call
jmp
cwtl
call
and
lcall
cmpsb
xchg
faddl
hlt
jo
jle
push
mov
inc
adc
aad
jg
insb
push
stos
sbb
out
dec
ljmp
clc
xor
mov
xor
pop
aaa
sbb
xchg
mov
movsl
ret
imul
pushl
loopne
xchg
js
imul
dec
sti
divb
scas
in
inc
mov
decl
movsb
out
mov
xchg
adc
lcall
scas
add
lea
lret
je
pushl
cmp
notb
jl
clc
xchg
fwait
imul
into
push
add
mov
loop
incl
xchg
push
mov
lock
mov
cld
scas
adc
sbb
jg
mov
fcmove
and
test
cmp
jg
mov
scas
mov
xor
loopne
sahf
pop
movsb
sub
cmpsb
int3
pop
or
inc
add
test
dec
xchg
pop
xchg
and
xchg
pop
scas
xor
cmp
insb
shlb
and
fsts
incl
rcr
mov
icebp
lahf
adc
adc
mov
es
push
mov
test
or
decl
sub
imul
jnp
mov
mov
fcos
decl
mov
inc
jae
cmp
xlat
push
enter
rcl
subb
inc
jae
or
inc
test
aad
inc
test
inc
sbb
inc
scas
icebp
cmp
mov
aad
dec
mov
add
push
adc
push
dec
cltd
mov
insl
and
jg
add
or
das
test
xchg
orb
adcl
cmp
jle
xchg
outsb
lods
mov
mov
push
adc
enter
out
mov
push
sbb
cmp
push
push
inc
cltd
dec
mov
inc
or
pop
push
in
mov
lret
push
push
adc
xchg
repz
rcrl
gs
std
mov
cmp
ljmp
clc
or
js
jae
lahf
mov
push
or
adc
mov
sbb
adc
jg
jecxz
push
dec
or
shrb
and
cmpsl
or
pushw
fnstsw
jnp
push
bound
cmp
and
icebp
sbb
jb
sub
ss
xchg
jmp
jmp
nop
roll
aaa
inc
mov
adc
mov
negl
das
decl
or
js
inc
sbb
cmpsb
les
testb
fcomip
lcall
jns
xchg
ds
push
sbb
sub
push
in
je
ljmp
dec
cltd
outsl
xor
pop
call
xchg
xlat
fnstenv
shr
jbe
xchg
or
xlat
or
scas
enter
call
mov
pop
pop
or
fcomp
xchg
xchg
cltd
lods
fs
insl
movb
out
insl
sub
jns
mov
add
adc
rolb
add
pop
mov
xlat
ljmp
repnz
pushf
lret
adc
pop
jle
mov
nop
es
dec
and
daa
imul
jg
cli
jb
sti
daa
in
jmp
jp
or
adc
mov
dec
sbb
stc
xchg
lock
pushl
inc
clc
movsl
hlt
or
mov
pop
out
adc
adc
rolb
in
cmp
decl
cmp
mov
std
in
sarb
sbb
hlt
cmp
ljmp
nop
mov
or
sbb
in
gs
fs
mov
lret
jnp
xchg
and
dec
inc
mov
ljmp
sbb
cmp
out
pop
dec
fcom
fwait
inc
inc
pop
inc
shll
lock
sar
lcall
mov
push
lcall
mov
fnsave
lret
incl
pusha
or
xchg
rcrl
rcll
and
flds
fisttpll
decl
jg
pop
call
pop
mov
gs
ja
cmp
cmp
sahf
imul
retw
popf
stos
mov
xor
jnp
stos
and
int3
mov
fcomip
incl
pop
push
imul
mov
ljmpw
adc
jg
popf
sbb
in
inc
dec
pop
cld
pop
push
bound
xor
popf
push
or
out
lcall
aaa
cld
jl
mov
jp
loope
sti
into
fcmovnu
xchg
and
std
xor
out
or
decl
adc
lods
cmp
dec
loopne
mov
xor
ret
mov
out
call
fsts
sbb
icebp
arpl
push
push
cmp
jb,pn
inc
iret
lcall
sahf
dec
mov
push
and
push
xorl
jle
clc
cmp
mov
lahf
mov
mov
popa
jo
in
and
ljmp
sbb
and
pushf
stos
outsl
cmp
adc
cmp
mov
push
icebp
dec
lods
adc
xchg
mov
sub
push
mov
mov
rol
icebp
inc
xchg
icebp
pop
icebp
dec
bound
aaa
jnp
lret
and
ja
inc
cltd
into
rcl
scas
push
jne
cmp
mov
ss
lock
imulb
and
dec
dec
inc
cld
cmpsb
hlt
mov
stos
sub
cmpsb
jmp
mov
enter
mov
je
addl
inc
aas
into
inc
pusha
in
call
lret
sbb
sub
mov
mov
sub
incl
xchg
and
dec
mov
inc
jae
push
sbb
ret
outsb
jmp
inc
lahf
imul
jno
cmp
mov
gs
add
les
call
cmpsl
mov
rcr
cli
insl
das
imul
cmp
out
paddsw
outsb
mov
cmp
test
notl
call
jb
xchg
push
stos
jg
or
xchg
imulb
cltd
jne
out
or
and
add
jno
push
sbb
ljmp
cli
addr16
repz
ljmp
nop
test
andl
xor
pushl
adc
push
cmp
cmp
sahf
daa
sub
je
xor
pop
inc
sbb
sbb
jg
xor
enter
aam
xchg
test
jg
outsb
xchg
fwait
inc
rcrb
and
sbb
decb
in
stos
icebp
dec
call
outsl
repnz
sar
jl
cmp
sub
lret
icebp
mov
sarb
cli
xchg
subl
dec
adc
cs
sarl
xchg
xorl
int
inc
mov
push
sbb
stos
cmp
mov
cli
inc
pop
lret
or
fwait
insb
imul
addr16
inc
push
in
aaa
cmpsb
pop
int
lds
fldl
ljmp
or
ret
add
mov
and
push
and
into
addr16
jg
push
in
jmp
cmc
or
mov
push
mov
imul
push
stc
pop
push
loope
push
xchg
in
incl
mov
xor
xchg
shlb
push
adc
ror
hlt
cmp
clc
fists
dec
incl
and
scas
repz
cld
lock
mov
out
pop
cmp
push
in
pushl
out
inc
pop
lahf
test
dec
enter
push
and
pop
adc
loopne
mov
and
dec
add
cmp
mov
cwtl
inc
insl
ffreep
call
fiaddl
xchg
mov
out
mov
fidivrl
fimull
mov
fs
call
cld
jmp
add
addl
sbb
sbb
lret
mov
add
jns
int
pop
cmp
shl
movl
ljmp
xchg
and
mov
sub
loope
mov
je
mov
test
jg
je
jp
cmc
ret
xor
adc
mov
pop
mov
sbb
jg
aaa
add
xchg
incl
out
aad
es
xlat
jno
adc
add
jbe
out
clc
movsb
cmpsl
mov
fs
cmp
fsubrl
jbe
inc
popf
jg
mov
dec
test
pushl
adc
mov
aaa
push
pop
int3
cmpsb
mov
mov
pushf
out
mov
add
nop
shlb
push
cmp
call
adc
int
es
out
in
jo,pn
jl
imul
mov
sahf
rcr
loopne
rclb
push
dec
filds
lock
popf
dec
mov
push
sub
fmuls
jp
lods
mov
add
iret
daa
lods
lods
pushf
xchg
adc
mov
es
popa
or
in
shlb
and
insb
mov
cwtl
and
lock
bnd
sti
mov
mov
mov
push
in
aas
in
out
cmc
inc
cs
loop
sbb
sub
mov
int
test
idiv
ljmp
test
push
jb
jmp
movsb
add
mov
mov
xor
mov
xchg
call
popa
push
xor
push
dec
push
lcall
stos
xchg
mov
jmp
pop
lret
jle
mov
jmp
cli
lds
fldt
sbb
out
clc
jmp
inc
pop
lods
pop
xor
cmc
jbe
push
into
inc
fwait
ljmp
lock
mov
pushl
jo
scas
aam
fldt
mov
fstps
loopne
nop
daa
mov
add
pop
cld
call
popw
xchg
lods
add
std
mov
push
loop
mov
mov
jmp
arpl
sahf
int3
stc
dec
xchg
push
xor
add
fwait
sbb
cwtl
icebp
sub
das
clc
call
push
lahf
sub
ss
shrl
jo
or
mov
add
jno
ret
xchg
ss
fildl
cmpsl
push
mov
aas
subl
mov
push
xor
mov
fsubrl
loope
sub
into
lea
sub
leave
jno
scas
mov
outsb
pop
mov
jge
mov
mov
jae
sub
addr16
cmpsl
lea
mov
mov
out
movsl
mov
jecxz
jl
rcrb
push
cwtl
cmpsb
je
enter
fcomip
hlt
and
pop
mov
loopne
mov
insb
cs
lahf
sti
jg
add
clc
mov
pop
rclb
and
int
mov
pushl
mov
cmp
mov
push
xor
or
scas
jb
mov
clc
push
sbb
dec
mov
insb
incl
push
or
mov
js
es
out
push
adc
faddl
inc
push
lods
dec
mov
lcall
sarl
mov
push
icebp
sub
rcr
ljmp
xor
aam
daa
or
push
fisubs
fcoml
push
int3
ffree
mov
or
sahf
mov
enter
test
sub
ds
cmpsb
aas
jg
loop
std
xchg
bound
jmp
xchg
jl
popf
cltd
add
fdivs
push
sub
lods
pop
pop
rorb
push
lcall
mov
sbb
jmp
push
dec
dec
push
sub
cmp
aam
xlat
mov
loope
push
push
rcl
xchg
mov
popa
pushaw
xorb
incl
pop
into
mov
sub
clc
ret
loope
insl
or
push
in
sub
imul
sub
test
stc
std
loope
add
jle
ret
xor
xchg
push
mov
dec
or
aad
int
ljmp
sub
push
push
popf
pop
add
mov
cmp
mov
cmp
bound
fcomip
test
in
fimull
xchg
adc
aam
mov
lods
push
push
pop
out
into
pop
mov
std
mov
mov
pop
rorb
test
jl
incl
in
sti
scas
in
xor
aaa
push
rorb
imul
andnps
xor
xor
decl
fimuls
and
clc
jmp
mov
xchg
shl
mov
inc
xor
cmp
push
mov
fucomp
lahf
adc
je
mov
add
pop
or
into
mov
nop
repnz
xchg
lcall
mov
mov
scas
mov
inc
push
adc
jmp
outsb
sub
inc
mov
mov
in
mov
sub
insl
out
sbb
call
loopne
mov
or
lock
sbb
fwait
hlt
cmpsl
mov
ja
insl
cmpsl
cmp
ficoml
xor
out
flds
mov
xchg
ret
decl
popf
jns
cmp
in
adc
sub
cmc
cmpsb
jns
gs
cmpb
flds
ficomps
popa
and
push
rcll
ljmp
pop
stc
dec
lret
aaa
adc
call
xchg
rolb
lods
mov
orl
xor
shl
ds
bound
leave
inc
mov
jbe
mov
xorb
out
outsb
sub
stos
ficoml
ljmp
jnp
repz
jle
pop
push
xor
shll
repz
xchg
xchg
pop
shrl
and
fldl
out
in
aad
fs
mov
popf
js
cltd
pop
mov
add
aam
fdivr
fcomip
jmp
and
daa
jns
cmp
in
cs
fisttps
ja
fldln2
jne
pushl
or
lock
test
pushf
xchg
xlat
ret
jno
fdiv
add
xchg
dec
mov
mov
sbb
popf
inc
sbb
add
mov
hlt
push
jb
push
incl
ds
clc
xchg
pusha
add
push
inc
daa
xchg
and
in
mov
stos
addl
dec
cmp
mov
pusha
and
sub
xor
ret
dec
out
dec
call
mov
inc
lret
out
imul
mov
xchg
pushf
pop
or
ljmp
adcb
mov
inc
and
push
xor
enter
or
gs
std
jg
push
clc
testb
or
sub
or
loop
mov
jae
fldt
push
repz
jne
rol
push
leave
insb
icebp
iret
aad
inc
and
loop
xchg
xchg
lahf
orl
sbb
dec
imul
xor
in
xor
pop
int
jle
rep
sbb
mov
cmp
push
inc
ror
cwtl
push
pop
std
adc
mov
pop
cmpb
testl
scas
leave
dec
sbb
dec
iret
sbb
push
mov
or
dec
js
cli
and
xor
sub
pushl
fstpl
mov
lret
cmp
jl
jmp
or
cmp
cs
pushl
pop
hlt
jo
dec
repz
out
daa
int
lock
test
push
push
fsqrt
sub
push
adc
xor
sbb
and
lods
and
xor
movsl
nop
sub
pop
fadd
push
sar
add
fmull
shrl
ds
rorb
or
or
mov
jae
rcl
pop
lds
or
mov
in
notb
pop
pop
leave
xchg
lea
cld
repz
inc
ret
sbb
mov
mov
pushf
call
ljmp
out
cmp
sub
clc
push
clc
bound
stos
inc
movsl
pusha
jp
rorb
aad
decl
sbb
dec
push
dec
stc
cmp
mov
jmp
sahf
adc
mov
in
jno
adc
rcrl
shll
mov
dec
dec
adc
push
adc
fdivr
out
fsub
add
gs
xor
sbb
cmp
dec
sub
setae
pushl
out
mov
shl
push
mov
dec
mov
lds
pop
inc
push
loope
jge
or
ljmp
or
and
jecxz
adc
dec
mov
sub
clc
incl
cmp
adc
xorb
mov
jns
popa
push
sahf
scas
int3
mov
xor
push
std
fcomip
and
aaa
mov
jo
push
cmp
or
fistps
fcompl
ret
fdivs
sbb
movsb
mov
add
enter
add
movsl
adcb
daa
cwtl
ds
jmp
or
test
div
cmp
mov
scas
push
adc
into
ja
inc
xor
fidivl
sub
mov
stc
jg
dec
and
or
xor
pop
lea
in
pop
mov
push
push
or
mov
mov
xchg
push
aam
dec
fildl
jne
addr16
pushl
pop
scas
in
pushf
pushf
mov
xchg
xor
adc
add
inc
mov
in
incl
scas
cmp
addr16
adc
clc
mov
fdivrp
push
out
cld
lcall
ljmp
insl
int
sbb
push
imulb
mov
jge
lea
in
pop
out
push
pop
jl
imul
push
test
push
icebp
movsl
xlat
and
rorb
lods
adc
movzwl
and
outsb
call
ljmp
cmpsb
sahf
mov
pop
cmpsb
push
pop
in
test
inc
mov
data16
inc
lcall
into
loope
mov
add
sbb
out
fsubl
xorb
push
inc
imul
jmp
es
testb
popf
rcrl
pop
mov
pushl
cmp
or
inc
mulb
inc
les
adcl
xor
sbb
jg
adcb
popa
shlb
icebp
mov
fsubr
xchg
cmp
mov
clc
jg
call
popf
sub
pop
jb
and
cmpsb
out
call
fld1
pop
into
lcall
jg
mov
lcall
push
mov
sbb
mov
xchg
dec
pop
pop
inc
lret
cmp
in
ret
push
in
adc
in
pushl
lods
stc
cmpsb
pop
jbe
repnz
jecxz
arpl
aad
jge
jl
mov
xchg
xlat
adc
in
fmuls
mov
insl
adc
dec
idivl
pop
inc
les
out
push
call
in
mov
ljmp
movsb
jle
sub
cmpsl
sti
jnp
ljmp
imul
add
icebp
dec
cld
insb
enter
call
outsb
xchg
mov
lret
pop
js
adc
dec
pop
daa
imul
addr16
jmp
sbb
xchg
mov
add
pop
xchg
adcb
xchg
add
scas
lea
add
dec
out
mov
movsb
ljmp
mov
cli
inc
add
movl
or
ljmp
faddl
push
loopne
cmp
popf
add
dec
fs
mov
cld
or
inc
add
push
fists
dec
add
inc
cld
out
addl
or
nop
dec
cmc
adc
inc
cmp
mov
imul
add
or
xchg
cwtl
clc
in
test
sarl
add
loope
insl
lret
mov
shll
repz
jmp
aam
clc
js
add
push
xchg
gs
sub
ds
or
ja
idivl
mov
mov
pop
call
cmp
adc
push
ljmp
loope
xor
mov
xchg
sarl
andb
cmp
and
cs
or
add
mov
xor
add
out
sub
mov
pop
nop
push
adc
push
sbb
fdivrp
dec
insb
xlat
adc
call
std
mov
push
inc
lret
inc
pop
push
mov
out
push
jo
mov
inc
rcrl
lahf
jg
shll
clc
xor
lret
and
outsb
or
enter
popf
push
add
std
pop
or
std
outsb
pop
lcall
aas
cld
add
in
movsl
stos
les
push
inc
xchg
cld
or
add
or
pop
jno
mov
aad
sub
aam
mov
roll
xorb
mov
xchg
pop
xchg
scas
jae
sub
scas
loope
in
fnstenv
loopne
popf
dec
add
adc
das
rcrb
mov
loopne
lcall
jg
stos
xor
dec
pushf
push
or
in
mov
ficoml
or
inc
mov
add
pop
pop
sub
xor
hlt
mov
xor
jp
test
int
push
dec
fdivs
mov
test
pop
inc
or
xor
lcall
sub
adc
mov
lea
push
cs
inc
adc
loopne
xchg
jp
fimull
cld
shlb
jmp
pushf
popa
lret
aaa
push
out
xor
mov
aas
or
jg
hlt
push
pusha
xchg
fstpl
jb
test
mov
add
push
adc
adc
addb
xor
mov
cld
inc
sbb
inc
cs
int3
or
inc
adc
imul
mov
test
pop
add
test
mov
xchg
pop
hlt
lahf
jae
dec
loop
repz
cmpsb
xor
and
push
inc
mov
out
rol
hlt
pop
push
je
cmp
stc
ds
adc
adc
jle
dec
xchg
xor
inc
decl
mov
xlat
pop
lea
jnp,pn
ret
jle
xor
test
mov
test
inc
loopne
icebp
jmp
lock
add
jno
lods
in
outsl
hlt
mov
xchg
mov
test
jmp
scas
jecxz
loopne
cmp
out
push
mov
add
pushl
mov
cmp
iret
je
cmpsb
mov
stos
sbb
nop
or
sub
xchg
addb
inc
in
stos
fcom
xchg
outsl
in
add
sub
repnz
xchg
mov
sbb
dec
pop
mov
mov
bound
test
ret
daa
adc
xor
les
cwtl
pop
test
fcoms
lcall
rolb
push
roll
jmp
test
ror
or
mov
sbb
jecxz
test
pop
jne
popf
jno
mov
es
or
jecxz
pusha
sbb
cld
aas
jecxz
into
sub
bound
scas
cltd
mov
lret
std
outsl
ljmp
cmp
test
lods
je,pn
push
xchg
pusha
inc
lods
loopne
ss
cmpsb
sbb
out
and
dec
mov
inc
fimuls
roll
mov
xlat
out
cwtl
loope
or
pop
in
and
fdivs
ljmp
sbb
and
rcrb
cwtl
dec
cld
nop
mov
das
mov
cmp
lcall
cmpsb
cmp
rolb
xor
mov
cwtl
fistpl
xor
push
outsl
rcll
xor
and
bound
cld
and
add
pusha
mov
loopne
js
add
adc
push
in
fstp
push
and
lock
hlt
xor
or
cmp
cmp
adc
sahf
sub
jmp
inc
lcall
loope
in
add
sub
into
add
lds
rclb
cmpsb
test
mov
gs
mov
cltd
daa
in
xchg
jle
cmp
push
ss
cwtl
or
jne
outsl
idivl
mov
shlb
adc
sub
add
lods
cld
stc
clc
xor
jbe
add
xor
mov
pop
sbb
or
or
mov
mov
int
adc
call
mov
push
xchg
sub
test
test
mov
cmp
jns
pop
ljmp
adc
shl
add
loopne
and
adc
xor
adc
ljmp
cs
sbb
out
mov
ss
sahf
lahf
xor
jl
and
mov
add
icebp
jo
filds
cwtl
orl
xchg
mov
cmp
or
in
out
xor
push
or
mov
ds
add
xor
enter
jo
push
pusha
push
pop
popa
inc
xchg
jp
ret
aaa
xchg
das
sub
add
sbb
add
cs
test
test
add
arpl
outsb
push
dec
sub
pop
fnstenv
inc
and
mov
daa
ret
stos
and
push
pushf
xor
cmp
or
ds
lret
das
mov
and
and
rol
pushl
sbb
or
mov
sbb
inc
es
lcall
in
lahf
rolb
mov
hlt
popa
xor
or
mov
jle
dec
hlt
xor
ss
mov
decl
cmpb
push
adc
dec
adc
xor
pushf
sub
cmpsb
ljmp
xchg
add
sbb
pop
fimuls
sbb
sti
cmp
inc
test
and
mov
idivb
jb
mov
addb
pop
outsb
inc
movsb
lahf
mov
mov
fstenv
cmp
jbe
inc
mov
subl
in
inc
sbbb
inc
add
pop
xchg
adcb
test
mov
inc
mov
or
xchg
stos
adc
loopne
addb
aas
sub
jle
pop
push
hlt
sar
sub
adc
inc
mov
rolb
adc
pop
and
cmp
and
sbb
cmp
fs
ljmp
in
scas
insl
pop
push
imul
mov
push
add
add
or
mov
imul
jnp
in
inc
subb
jmp
shl
jl
sbb
movsl
cmpsl
jg
lods
aaa
cmp
mov
test
push
es
pop
mov
jo
cmpsb
sarb
mov
stos
add
mov
test
fstl
jbe
aas
js
cmp
add
icebp
sub
mov
push
mov
xor
jo
add
arpl
dec
ljmp
sub
push
adc
in
or
xchg
mov
or
xor
addl
sub
movsb
xchg
imul
shrl
xchg
stc
test
sbb
add
mov
out
in
xchg
icebp
or
fisubrl
push
pop
fsubrl
push
mov
cmp
sbb
icebp
add
ss
xchg
mov
loopne
mov
sbb
ror
rclb
push
or
add
clc
in
loopne
add
sahf
insl
data16
jo
loop
jl
mov
jmp
hlt
fbstp
push
fs
jecxz
cmc
jo
mov
sub
sub
aam
sub
loope
jle
mov
jg
ljmp
push
and
mov
jmp
xchg
xchg
cmpsb
ljmp
mov
sbb
mov
xor
mov
test
push
roll
icebp
sbb
sub
inc
xchg
or
push
mov
push
outsl
mov
ret
pop
jbe
and
or
lods
scas
in
enter
add
or
jno
roll
test
xor
mov
jbe
rolb
mov
stos
add
sbb
lea
push
sbb
push
dec
les
xchg
mov
xor
js
adc
stos
in
and
mov
lock
dec
mov
nop
jl
mov
dec
mov
rcr
cmp
xor
inc
out
syscall
mov
out
pop
repz
nop
push
cmpps
push
fisttps
js
dec
xor
notl
jle
add
pop
fs
pop
jo
jg
repnz
cmp
sub
or
mov
js
sti
idivl
xor
cli
xchg
rcl
push
fwait
mov
pop
lods
fdivs
or
addr16
push
test
pushf
mov
jns
lods
fnstcw
movsl
fidivrs
sbb
enter
adc
addr16
fcomip
aaa
call
add
mov
lods
mov
jp
cmp
or
outsb
clc
aaa
sbb
out
xchg
clc
and
push
and
and
add
add
cmp
jle
std
pop
ds
int3
mov
lret
mov
xchg
inc
cwtl
repnz
nop
or
add
lock
xor
mov
das
pop
add
or
aas
jle
jle
dec
xor
sti
inc
sbb
mov
add
clc
mov
inc
lods
sub
aam
mov
jle
sub
aam
inc
pusha
stos
fs
jo
in
sbbl
loopne
orb
add
das
mov
sub
dec
loopne
out
ret
dec
lea
jbe
call
inc
cwtl
dec
pop
cmp
xor
dec
inc
int
or
pop
cld
ja
mov
inc
iret
in
aad
and
push
cmp
xor
xchg
and
sub
ret
mov
lcall
scas
gs
sbb
shll
test
xchg
mov
jg
sbb
cs
inc
inc
repnz
push
add
pop
jg
outsl
mov
mov
sbb
ret
jg
clc
incl
test
and
stos
adc
jae
mov
cmp
or
mov
pusha
lret
push
push
sbb
push
clc
pop
js
fists
and
xlat
push
repz
fildl
jecxz
or
mov
sti
and
add
sub
add
sti
or
ljmp
cmp
push
push
inc
pop
mov
pop
and
push
mov
and
fcoms
adc
cli
lods
inc
sub
cmpsl
sbb
lcall
jmp
fcompl
and
mov
xchg
and
jg
jecxz
out
dec
and
sbb
test
arpl
pushl
mov
outsl
jns
mov
fldln2
out
mov
bound
xchg
les
mov
inc
push
fisttpll
es
popf
xchg
sahf
scas
dec
push
clc
sub
jns
aaa
adc
lds
loop
pop
les
dec
push
jns
add
mov
hlt
push
fwait
jecxz
and
cwtl
and
call
add
call
jl
mov
adc
lods
rcl
pushl
dec
cmp
xchg
addl
mov
xchg
int
xlat
inc
or
xchg
jg
or
je
jp
add
leave
dec
test
cmp
dec
cmp
ja
loopne
pop
sbb
add
enter
sbb
out
fbstp
xchg
es
mov
jecxz
add
push
xor
test
insl
mov
dec
outsb
fs
jg
test
push
jo
dec
lock
popf
inc
pusha
rcll
mov
out
movsb
outsb
xchg
sbb
xor
test
xor
and
repnz
sbb
sbb
sbb
mov
test
lods
pop
lock
jp
add
xchg
dec
cli
push
rcrb
cmpb
pusha
jno
xlat
cmp
movb
aad
orb
mov
mov
mov
aam
cld
push
pushf
sub
pop
loope
imul
scas
add
cld
test
ljmp
inc
dec
loopne
mov
movsl
leave
ljmp
shrl
jg
add
jae
adc
add
cli
add
out
daa
xchg
push
pop
lock
out
mov
or
and
out
loop
dec
mov
int3
inc
jl
mov
repnz
cmpsl
incl
cmp
cmp
rcrl
sbb
pusha
mov
in
repz
inc
or
cmp
xor
outsl
and
shll
scas
test
fwait
es
adc
rorb
and
fdivrl
adc
cmp
xor
mov
stc
lds
sub
push
fs
rclb
pop
repz
sbb
or
jp
repz
ret
popa
aad
xchg
and
inc
scas
sbb
ret
sbb
out
xor
cmp
inc
aas
push
fs
push
mov
sarl
sbb
stos
jle
sbb
inc
shrl
or
dec
inc
je
jb
mov
cmp
popf
lods
add
out
popf
sbb
jns
jl
je
add
pop
lock
aaa
inc
xchg
andb
ret
ss
dec
lcall
gs
lods
lret
add
mov
and
test
outsl
mov
inc
sbb
sbb
pop
sbb
cmpsb
xchg
sub
hlt
jg
jl
bound
push
cli
pop
loopne
xchg
or
dec
lret
lods
cmc
xor
sub
push
pop
inc
jno
adc
icebp
mov
adc
xchg
sub
in
pop
shl
cmp
pop
std
repnz
lods
js
add
call
pop
xchg
jno
jo
ret
mov
adc
lds
je
push
cltd
push
inc
int
sbb
dec
xor
icebp
inc
push
bound
mov
jb
sub
hlt
stc
inc
aas
imul
push
mov
push
movsl
shlb
mov
pushf
mov
mov
push
sbb
shl
pop
adc
sbb
adc
sbb
fwait
mov
xchg
inc
and
or
inc
mov
lret
insb
popf
dec
out
into
sbb
adc
fisubrl
ljmp
xor
push
adc
hlt
mov
adc
mov
outsb
inc
lock
rcrb
mov
or
daa
dec
pop
push
mov
mov
sbb
jmp
pusha
add
test
cld
stos
add
or
cmp
and
xchg
push
loope
or
std
call
jo
add
inc
jne
or
cld
sub
rcl
call
sbb
outsl
jbe
push
imul
addl
and
mov
adc
hlt
idiv
fildll
adc
subl
sbb
jl
add
mov
leave
cltd
sub
pop
loopne
test
push
xor
pop
sub
or
imul
rclb
mov
jnp
std
int
das
inc
inc
and
popf
mov
stc
add
imul
loop
mov
ja
aaa
xchg
jl
xlat
clc
dec
inc
mov
jg
push
lods
shll
sbb
add
mov
add
std
mov
int3
add
adc
cmp
adc
incl
adc
lret
cmp
pop
and
dec
ss
lds
push
pop
cmp
adc
mov
inc
fadds
imul
movsl
je
fnstcw
push
loop
jmp
mov
mov
xchg
incl
sbb
inc
push
ret
rclb
mov
jnp
cli
inc
mov
pop
dec
imul
mov
cs
aam
inc
jo
sbb
mov
insb
cld
push
enter
sbb
shll
mov
mov
out
fwait
add
pusha
push
sbb
mov
fnstsw
and
and
adc
cltd
lods
mov
add
add
orb
gs
ds
inc
fwait
lock
test
dec
mov
dec
mov
rcrl
mov
test
xchg
pop
jo
push
xchg
pop
push
popa
xchg
cli
inc
add
insb
in
jecxz
sub
pop
xchg
add
int3
fmull
or
outsl
lock
inc
sarb
sbb
mov
dec
mov
mov
adc
push
cmp
sub
xor
stc
jmp
xor
mov
inc
dec
pop
sbb
pusha
pushf
cmpsb
lock
push
push
movsb
inc
ds
pop
add
mov
pop
fmuls
push
js
cli
into
add
scas
out
das
bound
jo
add
data16
cmp
loop
mov
sahf
and
cltd
mov
push
inc
lock
sbb
jbe
popf
jg
jg
addr16
adcl
pop
push
sti
lcall
out
push
or
mov
subl
lahf
lods
sti
pushf
or
push
mov
mov
test
jmp
adc
xchg
sbb
sbb
dec
sub
out
mov
les
lea
daa
sbb
xor
ret
lcall
push
call
push
loopne
scas
pop
lods
adc
cwtl
sub
or
ss
inc
and
sbb
xor
mov
mov
mov
lods
aaa
vmaxss
jbe
jmp
ljmp
add
cmp
mov
push
inc
jge
add
cmpsb
pop
pop
movsl
mov
inc
sbb
push
loop
mov
or
xlat
cmp
pop
das
shlb
xchg
test
cltd
mov
int
pusha
cmp
out
mov
xor
sub
inc
xlat
clc
jg
lds
repnz
jns
mov
and
xor
in
mov
les
stos
inc
int3
ret
sbb
xor
xor
adc
std
dec
mov
or
mov
sahf
add
pusha
push
push
cmpsb
or
sbb
adc
cmpsb
mov
sbb
adc
lock
jmp
hlt
sub
xorl
dec
cmp
cmp
int3
xor
or
mov
loop
sub
or
loope
sub
stc
push
call
sbb
movsb
mov
test
sbb
mov
pop
idiv
jmp
mov
push
push
push
hlt
int
rolb
ja
clc
sbb
shl
cld
lea
and
dec
outsb
pop
xchg
mov
call
dec
push
es
and
imul
push
call
sub
or
out
and
out
mov
jne
or
jb
and
lds
mov
mov
cli
push
popa
mov
pushw
mov
rorl
iret
rclb
sti
test
or
push
cwtl
and
mov
cmp
push
nop
test
adc
jmp
ljmp
xchg
es
add
int3
data16
push
inc
xlat
inc
push
int
mov
imul
dec
xor
xor
fildll
xor
or
mov
mov
or
and
jb
ljmp
shl
inc
xor
or
fbld
fildll
mov
add
xor
push
adc
js
cs
sub
fistpl
clc
pop
clc
or
je
push
xor
xlat
loop
pop
mov
les
icebp
call
add
push
jle
dec
jbe
shr
or
lods
sbb
or
ret
std
gs
cmpsb
jo
xchg
sub
and
jb
lcall
jne
push
push
sahf
fcmovnb
inc
test
sbb
sub
pop
aaa
cld
icebp
xlat
movsb
xchg
add
loopne
mov
and
pop
add
ljmp
adc
add
push
xor
std
decl
mov
inc
mov
mov
cwtl
daa
mov
repnz
test
sub
pop
cmp
cwtl
ds
movsb
stc
xchg
cli
filds
lcall
nop
cld
sub
push
scas
xor
sub
loope
xor
fs
shrl
mov
or
jb
adc
cmpsb
ret
pop
ljmp
shlb
dec
push
adc
jecxz
ror
fwait
add
sbb
add
mov
sarb
scas
lcall
push
scas
iret
inc
outsl
jl
dec
mov
loop
bound
push
imul
call
push
loope
fs
push
ss
add
gs
in
repnz
cli
das
clc
ja
lods
dec
jg
adcb
cltd
mov
and
lret
jb
stos
jbe
and
pop
jne
cmp
xorl
lret
cld
cmp
outsb
jl
lods
push
inc
rcll
xor
mov
cmpsl
test
sbb
cmp
dec
or
and
scas
nop
dec
pop
add
push
mov
push
sbb
mov
jns
push
sub
test
jg
add
push
aad
movsl
push
es
pusha
call
adc
jmp
mov
cmp
inc
add
xchg
enter
fimuls
dec
sub
into
repnz
jmp
cld
aaa
popf
adc
lahf
aas
adc
cmp
lods
bound
sub
lea
or
adc
cld
jg
push
cltd
or
lods
and
add
imul
inc
and
mov
in
xor
mov
pop
pop
or
call
push
sarl
xchg
fidivl
inc
imul
hlt
repnz
shl
jle
inc
sbb
cmp
mov
mulb
vcvttps2dq
mov
iret
es
and
inc
add
popw
sub
cmp
mov
xchg
jns
add
dec
inc
clc
xor
std
and
test
xchg
imul
lock
jne
push
notb
pop
cld
mov
das
mov
xchg
clc
ljmp
imul
lods
pusha
ds
sbb
pop
scas
inc
loop
insl
mov
mov
mov
fmuls
test
pusha
cmpsb
xchg
xchg
mov
adc
mov
mov
xchg
jmp
lcall
push
push
ds
mov
insl
xchg
xor
cmp
jl
xchg
ljmp
clc
shrb
jp
cmp
lcall
mov
jbe
lods
ja
mov
fiadds
push
js
sbb
fs
add
subb
test
mov
sub
fcomps
mov
icebp
int3
mov
pop
test
mov
shr
adc
inc
or
mov
pushf
test
into
push
pop
shlb
rcrb
aad
cmpsl
add
xchg
pop
arpl
sbb
sub
test
call
push
lds
scas
cli
xchg
dec
pushf
sbb
loop
mov
push
ljmp
and
lret
add
les
movsl
call
loopne
xor
pop
inc
mov
fidivrs
scas
dec
mov
sbb
mov
je
add
cltd
add
aas
mov
pop
push
mov
retw
add
or
and
scas
insl
xor
jmp
mov
sbb
xchg
xor
aam
push
inc
out
or
dec
cmp
fisttps
aaa
test
pop
jbe
dec
nop
je
mov
add
xlat
in
sti
push
sbb
decl
loopne
lahf
mov
inc
orb
inc
xorb
and
xor
sub
inc
and
mov
clc
jo
scas
pop
push
hlt
ret
xor
jb
or
inc
rolb
adc
mov
or
gs
inc
test
repnz
insb
hlt
aas
inc
clc
or
xor
xchg
mov
or
xchg
movsb
pop
pushf
clc
hlt
lret
mov
stos
cmp
clc
ret
jl
test
add
inc
xor
cmp
mov
and
jno
push
xchg
mov
sbb
pushf
cmp
xchg
sti
mov
test
add
mov
mov
aad
test
bound
pop
cmpb
mov
movsb
ret
leave
push
je
or
and
add
ror
ljmp
and
xor
mov
jle
add
jo
mov
sub
ss
inc
adc
rcll
xchg
xor
outsl
sub
adc
or
jg
in
call
pop
cwtl
nopl
sbb
jb
iret
mov
imul
ljmp
popa
andl
pop
lcall
mov
sub
js
rcrb
and
jl
daa
pop
or
adc
cwtl
mov
add
push
loopne
jo
mov
dec
pop
das
shlb
cmp
cwtl
outsl
xor
sub
xlat
xor
popf
pop
popa
cmp
xor
pusha
or
mov
shlb
cmp
subb
enter
xchg
inc
repz
inc
or
mov
std
xchg
add
into
cmpsl
and
inc
out
cmc
adc
test
mov
mov
dec
imul
add
pop
add
push
mov
sub
or
xchg
jg
movsl
fsubl
inc
dec
cmp
inc
or
outsb
mov
sub
dec
mov
mov
in
inc
aaa
push
ljmp
pop
loop
out
and
jb
sub
ljmp
add
mov
mov
clc
sub
add
hlt
scas
out
mov
push
cmp
jnp
incl
in
inc
test
popa
mov
sbb
lret
xchg
push
cld
call
aam
cmp
leave
xor
inc
stos
test
cltd
inc
xchg
stos
rcr
incl
mov
and
mov
data16
mov
or
jle
mov
test
jo
dec
cld
pushl
jns
lea
lods
jmp
xor
pop
aas
hlt
or
cmp
cmp
xchg
pop
push
and
dec
leave
cmp
dec
adcb
xchg
repnz
xor
sarl
insl
jno
mov
lock
pop
inc
mov
fnsave
scas
xchg
outsb
mov
xor
leave
push
add
add
adc
ljmp
inc
and
fsubp
lcall
dec
sbb
adc
repz
adc
xchg
cmp
js
and
cld
mov
jb
sbb
mov
push
sbb
push
and
xor
out
fsubp
fldcw
aad
sti
adc
mov
add
push
loopne
stos
cmc
rolb
ja
push
fmulp
fdivrp
sub
cmp
sub
mov
sub
aas
mov
adc
cs
ss
adc
jg
js
scas
in
add
shll
adc
jb
lcall
ds
aaa
in
inc
aas
shrl
jo
mov
cbtw
mov
addb
and
mov
inc
repz
daa
inc
or
xchg
xorb
mov
fwait
sbbl
lods
add
add
test
repz
push
adc
cli
or
js
and
mov
push
imul
clc
inc
cmpsb
push
fcomps
in
and
dec
lock
jecxz
les
cwtl
pop
push
lret
sbbb
call
and
inc
inc
lcall
scas
out
std
sub
aas
leave
ja
mov
cmp
cmp
je
mov
sub
add
pop
xor
jle
lahf
mov
add
add
aam
jle
or
imul
stc
and
inc
out
outsb
test
orl
nop
jmp
add
aam
push
fmull
sbb
jl
xchg
jo
inc
lret
dec
sbb
pop
pusha
jne
pop
les
sbb
mov
aas
gs
dec
cld
ret
mov
dec
stos
addb
in
das
lock
subl
stos
dec
inc
inc
xor
push
outsl
jle
mov
shlb
cs
push
or
sti
jg
push
push
xchg
add
test
sbb
lock
fidivl
subb
adc
sub
outsl
sbb
mov
sub
lds
ficomps
inc
int3
int3
jb
inc
inc
jl
adc
or
pushf
or
fstpt
xor
leave
or
xor
clc
stc
sub
push
xor
ficomps
mov
sbb
mov
andl
clc
aam
jo
je
insb
mov
ret
lds
aaa
dec
mov
repz
mov
test
cli
sub
pop
mov
ja
pop
mov
cmp
jmp
adc
daa
sub
jns
ret
mov
ret
jmp
incl
mov
scas
les
pop
js
fisubl
and
mov
scas
cld
xchg
inc
xor
and
xor
lahf
mov
loope
xor
sbb
lea
xchg
ds
aam
fdivs
dec
je
mov
xchg
fs
cmp
mov
or
stos
cmp
pop
xchg
bound
xchg
and
pop
and
add
ss
incl
xor
cltd
pusha
mov
add
test
sahf
pop
loope
or
pop
loope
or
sbb
ret
xchg
inc
push
test
push
xchg
push
sub
adc
xchg
mov
sub
mov
inc
aaa
xchg
out
or
insb
fsubl
pop
stos
mov
fisubl
or
sbb
cmp
xchg
mov
popf
jl
popf
inc
sbb
loop
adc
add
inc
dec
pop
idivl
fcmovu
cmpb
mov
daa
bound
mov
fiaddl
imul
sbb
jnp
push
mov
mov
test
int3
call
pop
mov
dec
loope
test
xlat
in
ret
rorl
mov
pusha
cli
sbb
lds
and
cmp
and
js
nop
xor
in
aaa
test
out
jge
or
std
stc
sbb
push
mov
or
call
test
sbb
pusha
lahf
fs
leave
jp
mov
push
lock
sub
scas
add
mov
daa
outsb
aas
push
or
cmp
dec
scas
in
ds
sbb
push
mov
mov
hlt
mov
fs
pop
lcall
push
and
lods
add
test
incb
ss
pop
arpl
mov
or
icebp
mov
xchg
sbb
and
stos
out
sbb
leave
inc
or
bnd
inc
in
push
rol
scas
loopne
mov
push
inc
je
push
cli
outsl
mov
fs
in
and
out
outsb
aaa
lock
xor
aas
add
jo
sub
out
pop
or
adc
mov
daa
jg
aad
hlt
and
mov
fnsave
stc
add
or
push
vmovdqa64
aas
je
push
sub
imul
aas
pop
jbe
rcrl
jmp
shlb
decl
inc
nop
mov
std
jne
inc
sti
xor
cmpsb
callw
mov
or
mov
inc
mov
adc
or
cltd
inc
pop
fnstenv
xor
pop
test
push
push
cmp
imul
arpl
out
jne
sbb
and
mov
jnp
adc
pop
jae
into
mov
cltd
cwtl
mov
jecxz
add
rol
decb
and
sub
push
mov
icebp
pop
add
or
je
sub
jne
pop
lods
bound
lea
popf
mov
or
mov
mov
sub
pop
jle
xlat
fisubrl
pop
leave
mov
inc
neg
adc
aam
rcll
incl
pop
push
xchg
idivb
mov
call
or
sbb
test
leave
cmp
cmp
das
mov
aad
and
pop
loopne
ja
xchg
sub
and
push
cmc
pop
push
lret
pop
xchg
sbb
mov
jge
cmpsb
dec
test
mov
push
sub
sbb
push
or
mov
xchg
das
mov
cmc
and
xor
sub
xchg
je
inc
popl
mov
jg
sbbb
add
bound
lahf
xchg
xchg
cs
jne
scas
scas
dec
out
lods
pusha
pop
adc
xor
mov
lea
dec
das
mov
xchg
add
sub
add
or
out
fcoms
dec
sub
xchg
orb
pop
stos
and
inc
repnz
bound
popaw
cmp
jo
iret
xchg
and
mov
nop
mov
shll
push
jecxz
sbb
jo
jno
mov
test
fldt
adc
push
inc
sub
jl
sbb
push
pop
cwtl
add
xor
outsl
mov
test
inc
les
aas
or
xchg
mov
ljmp
lock
ret
push
nop
mov
data16
clc
sbb
frstor
mov
or
orl
xchg
mov
sahf
insl
cmp
add
or
fisubs
rclb
lds
sar
scas
out
dec
repnz
int
insb
jg
xor
shll
bound
inc
push
jp
pop
pusha
leave
inc
cmp
push
mov
in
arpl
add
sub
imul
adc
jle
fwait
mov
loop
and
rcrb
add
loopne
xchg
add
and
add
push
std
or
or
scas
ds
out
aaa
adc
mov
push
jnp
xchg
xchg
dec
hlt
cld
add
xchg
fdivs
dec
shrb
pop
mov
or
jb
js
and
jo
xchg
popa
int
push
add
lcall
das
sub
pop
mov
cld
pushl
cwtl
xor
fcoms
pop
sar
push
lds
push
aad
inc
sbbb
stos
inc
jno
sbbb
lods
das
adc
xor
mov
dec
cmp
adc
aam
cmp
inc
lahf
jp
stos
push
std
dec
or
in
jmp
mov
add
push
out
shr
pop
sbb
xor
clc
push
inc
lahf
adc
test
std
xlat
enter
enter
push
aad
push
mov
fiadds
test
call
je
je
sbb
xor
mov
jl
lcall
out
popf
jecxz
adcl
dec
pop
sub
out
xor
xor
sub
mov
or
add
sar
lret
popl
adc
out
hlt
test
and
xchg
mov
dec
mov
jl
mov
clc
adc
pushf
push
inc
sbb
loope
sub
incl
pop
sbb
shlb
arpl
xchg
adc
dec
pop
xor
mov
push
cmpsb
sub
fildl
sti
out
mov
xchg
test
mov
scas
gs
enter
push
insb
cs
je
sbb
mov
jno
fstpl
ror
test
and
ficoms
adcb
jno
adc
inc
scas
gs
jle
cmp
sbbl
nop
pop
mov
aas
adc
dec
shll
push
movsl
mov
xor
mov
out
loop
mov
fiaddl
add
push
ficompl
push
or
jecxz
out
xchg
inc
dec
sbb
add
sub
lods
mov
cmp
pop
in
repnz
mull
lret
mov
or
ret
cmpsl
mov
pop
add
cmp
dec
ret
ret
aam
lock
adcl
aam
push
mov
lea
mov
sub
push
sbb
jns
push
pop
or
pop
mov
jmp
rolb
insb
jbe
pop
mov
arpl
add
movsl
stos
adc
mov
jle,pn
and
not
mov
repnz
jge
mov
sahf
sub
mov
movsl
imull
lcall
je
outsb
loope
add
daa
or
mov
and
sbb
pop
add
ja
or
mov
xor
xchg
lods
or
sub
gs
xchg
stos
repnz
data16
inc
scas
adc
sub
cmpsb
cmp
xlat
and
movsb
xor
mov
scas
out
xor
pop
push
mull
jecxz
ja
ss
je
and
lret
xchg
in
inc
cmp
jg
out
mov
pop
cmpsb
mov
pop
cmp
pop
or
cmp
lock
mov
mov
call
mov
push
xor
inc
fcompl
dec
fidivrl
popf
mov
fsubrs
inc
loop
mov
sub
call
push
mov
fs
shl
adc
pushf
in
jb
sub
sbb
lods
orb
imul
sbb
cmp
sub
mov
fldcw
jecxz
je
in
int
mov
ss
std
inc
xchg
or
adc
add
push
jecxz
sbb
in
inc
add
push
cs
fadd
sbb
out
fimull
push
int3
pushf
jb
adc
imul
pop
ret
cs
or
xchg
xchg
jle
add
jns
pop
repnz
idivb
loope
enter
rclb
mov
movswl
rcr
push
add
and
das
cmp
mov
icebp
pop
inc
and
adcb
cmc
stos
int
repnz
xchg
sarl
lcall
inc
mov
jae
push
mov
test
ret
test
lods
hlt
jno
push
scas
push
cwtl
dec
push
test
add
add
inc
call
cmp
mov
insb
add
std
and
ljmp
pop
jp
jle
ret
sbbb
sbb
mov
xchg
shll
jae
hlt
add
fisubrs
jg
mov
sub
xchg
adc
xchg
mov
and
push
into
lea
sbb
cmpsb
lcall
dec
idivl
test
mov
inc
inc
mov
jnp
fs
add
sub
xchg
dec
and
rcr
stc
int
roll
mov
adc
mov
xor
pop
icebp
stos
mov
cmc
jp
rcrb
sub
scas
xlat
lds
cltd
into
das
xor
bound
insb
pop
out
or
adc
add
lds
sbb
hlt
shl
mov
sahf
shrl
mov
inc
mov
push
mov
mov
sub
mov
push
cwtl
mov
es
ljmp
cli
push
dec
add
pusha
xor
and
cld
insl
add
scas
ss
jne
add
out
mov
fadds
pop
ret
pop
cwtl
pop
bound
stos
mov
cmpps
cs
sub
pop
loop
je
icebp
loop
add
sti
ror
les
pop
and
mov
adc
daa
adc
or
add
test
movsb
jge
mulb
push
fistps
outsb
jae
adc
cmpsb
outsl
mov
cmpsb
adc
lcall
inc
fdivrl
add
incb
add
mov
in
sbb
gs
call
pop
mov
les
sbb
xchg
mov
adc
jb,pn
push
mov
test
clc
jmp
lret
xor
cltd
stc
shr
sbb
clc
adc
pop
dec
dec
leave
dec
inc
sbbl
mov
shrl
sbb
test
and
push
iret
or
jle
pop
sbb
das
js
and
pop
xchg
sahf
xchg
fistpl
loop
testb
les
pop
cmc
in
icebp
cli
push
dec
shl
out
xor
pop
fidivs
or
andb
iret
jp
mov
divl
add
sti
inc
fucomp
out
sbb
or
dec
ret
fildll
movsl
inc
std
in
bnd
jecxz
sub
test
ficoml
fs
dec
jmp
sub
fwait
cs
ss
imul
sbb
mov
decl
out
and
push
cmp
xchg
lret
add
or
adc
std
nop
sub
inc
cmp
mov
out
or
sub
ret
lahf
enter
ss
sub
push
cmpsl
shlb
adc
orb
scas
out
push
call
sbbl
in
cltd
aaa
xchg
je
mov
fcmovb
andl
push
pop
inc
push
icebp
inc
icebp
push
add
cwtl
ja
out
push
push
ret
cmp
fs
push
clc
stos
clc
pushf
push
cmp
add
sti
sub
sub
xor
xchg
bnd
cmpsb
inc
loope,pn
adc
inc
sub
inc
and
xor
push
dec
pop
aam
cwtl
push
js
leave
xchg
jge,pn
lea
push
mov
jmp
clc
jg
icebp
mov
mov
add
scas
add
and
les
or
cmc
pop
call
adc
std
dec
lahf
and
or
out
sub
clc
lret
mov
jbe
push
mov
cli
cmpsb
xchg
sbb
rcrl
xor
adc
inc
add
mov
dec
cmp
test
js
mov
in
inc
ret
xor
xor
or
jl
push
hlt
pop
sbb
out
ds
inc
test
cmp
pop
decl
sub
xchg
adc
outsb
dec
xchg
pop
mov
dec
xlat
inc
inc
add
mov
inc
test
ljmp
dec
cwtl
clc
pop
or
pusha
insl
pop
subb
add
push
cmp
ja
push
adc
fcoml
push
and
mov
push
mov
xchg
nop
jp
std
xchg
pop
lock
fcomps
call
jb
out
sti
lret
xor
add
dec
leave
jge
sahf
xor
add
sbb
scas
and
pop
std
fwait
sbb
jbe
andps
sub
popa
js
scas
xor
push
pop
sbb
adc
pop
cmp
loope
inc
subb
cmp
lret
xchg
loopne
xlat
ds
inc
cld
cmpsl
adc
jnp
dec
je
repnz
pop
icebp
repnz
dec
or
les
and
xor
adc
jbe
int
stos
scas
ds
xchg
jl
dec
insl
pop
and
inc
fs
sahf
inc
mov
jp
mov
mov
push
sub
sbb
mov
dec
std
dec
cmpsb
fsubl
push
or
pushl
call
and
jmp
sub
ss
cmp
push
cld
dec
aad
mov
xlat
jl
push
mov
movsl
pop
incb
ds
xchg
sub
adc
rcl
xor
adc
lret
pop
stos
les
xor
int
add
add
xchg
data16
mov
sbb
arpl
sbb
mov
cld
es
fld
loope
jo
fidivrs
addl
pop
or
adc
in
in
mov
loop
int
mul
inc
and
adc
xor
lea
clc
mov
push
pop
sbb
xchg
lahf
mov
insl
arpl
gs
mov
fadd
adc
push
add
js
icebp
xchg
pop
xor
into
xchg
pop
in
adc
pushl
in
addb
mov
sub
adc
lret
inc
incl
sub
mov
mov
scas
ds
xchg
jo
add
sub
sbb
cmp
gs
mov
mov
mov
std
mov
push
in
pushf
insb
sbb
sub
lcall
xchg
inc
inc
inc
std
arpl
je
inc
cld
int
dec
mov
andb
pop
je
pop
cmp
mov
cld
and
push
fmuls
stc
js
or
jno
ret
cli
popa
sbb
jne
jg
inc
mov
data16
lcall
or
decl
lock
gs
cmpsl
dec
push
sub
mov
or
pop
popf
test
frstor
lds
rcrb
imul
mov
and
daa
icebp
add
push
pop
add
repnz
nop
inc
leave
sub
and
pop
into
push
addb
in
std
adc
inc
stos
mov
jge
popf
mov
daa
sub
dec
push
lods
xor
loope
aam
lea
pop
leave
ret
mov
pop
ret
inc
and
lret
rclb
pop
pop
leave
ret
pop
pop
pop
ret
add
add
add
fdivl
mov
inc
inc
and
dec
add
adc
call
adc
add
and
sbb
xor
in
in
push
imul
and
sbb
add
ret
mov
xor
or
jmp
add
sbb
mov
push
and
xor
push
and
mov
imul
sbb
mov
and
mov
sub
pop
add
adc
dec
mov
push
xor
int3
mov
nop
dec
xchg
inc
nop
lcall
mov
or
nop
and
ror
add
inc
or
loopne
faddl
inc
pop
inc
mov
ja
mov
enter
pusha
xchg
dec
jge
imul
inc
adc
jge
sbbl
add
movsb
mov
add
xchg
mov
cmp
xor
sbb
or
sbb
sbb
sub
imul
and
insb
sbb
push
inc
imul
cmp
and
dec
inc
adc
sub
cmp
neg
sbb
xor
or
xrelease
movl
jg
in
jmp
xor
xor
adc
mov
ret
jle
xor
or
inc
add
ret
mov
jl
mov
es
je
sar
fistpll
loopne
sbb
xor
mov
sahf
test
popf
dec
inc
mov
loopne
or
add
and
out
mov
push
jg
shll
sbb
out
add
pop
mov
push
movsl
add
cltd
lret
pusha
mov
sub
mov
jle
add
sub
dec
or
sahf
inc
pusha
or
cld
or
or
sbb
push
testb
add
push
and
mov
xor
push
orb
pusha
loopne
xor
testl
push
mov
notl
cld
xor
jnp
fnsave
mov
shll
mov
insb
in
jno
ja
loopne
and
cmp
popa
add
insb
daa
xor
inc
testb
fiadds
cmpsl
push
test
mov
nop
shlb
pop
add
aas
cmp
iret
sub
es
and
mov
dec
lret
decb
mov
neg
add
add
out
scas
negl
add
mov
lret
cmp
sbbl
cld
and
jbe
push
cmpsb
rolb
adc
movsb
inc
jge
push
repz
fs
out
mov
rorl
xor
sti
mov
fsubs
jo
mov
push
test
test
jnp
test
inc
lahf
in
testl
roll
dec
shlb
xor
mov
jle
popa
addr16
icebp
daa
fwait
std
xor
es
pop
jo
xor
inc
sub
adc
inc
sbb
mov
nop
pop
or
daa
mov
jbe
cli
and
sub
sub
neg
inc
lcall
insl
mov
popf
mov
add
xor
repnz
ret
out
cmpsb
call
repnz
fnsave
imul
add
mov
insb
outsl
data16
cli
add
arpl
inc
sub
mov
xor
ds
dec
jecxz
mov
push
mov
add
ret
idiv
mov
inc
mov
adc
fsubrp
shll
xor
inc
andb
faddl
sbb
mov
jne
push
mov
xchg
mov
addr16
jge
mov
add
mov
xorb
lock
lods
add
xchg
cltd
sub
sub
sbbb
gs
pop
aam
add
outsb
negb
push
sub
mov
sub
jg
lock
jle
dec
das
rcpps
sbb
push
adc
out
daa
gs
into
loopne
adc
mov
adc
movsb
cltd
lahf
jl
cmp
sbb
neg
sub
add
aam
and
fsubs
or
cmp
fdivrs
dec
lock
sub
add
jne
pop
aas
xor
xchg
cwtl
add
pop
std
cld
loopne
sbb
cmp
add
clc
out
adc
add
xchg
sarl
rcr
iret
nop
xchg
add
push
mov
sub
xor
pop
sbb
inc
test
cmp
movsl
mov
andb
jbe
divb
loopne
loop
ljmp
pop
lock
push
or
fcom
ljmp
adc
hlt
in
ds
hlt
xor
add
in
pop
loopne
fwait
push
lock
mov
cmp
fdivl
jl
fsubr
sbb
repz
scas
add
mov
push
out
icebp
dec
mov
stc
or
cmp
ljmp
adc
sbb
shlb
add
sahf
in
sbb
mov
mov
andps
fbstp
aas
mov
ds
mov
test
xchg
mov
jbe
lea
fcomps
pop
mov
and
mov
xor
pop
cmp
jne
inc
dec
xchg
and
xor
add
pop
mov
insb
scas
mov
in
xchg
xor
inc
rol
or
and
std
cmpsb
addr16
dec
and
xor
or
hlt
fisttpl
clc
lea
push
push
push
call
inc
test
adc
popf
ss
inc
loopne
sbb
add
loopne
out
inc
sub
mov
push
repz
mov
inc
add
pop
add
dec
addl
rclb
icebp
cs
daa
cli
shl
ret
and
int3
inc
in
sbb
mov
jl
aam
dec
mov
pop
xor
fists
leave
ret
mov
or
adc
adc
sbb
sarl
dec
add
adc
outsb
sub
mov
sub
paddsb
out
dec
jo
or
cmp
adc
add
cmp
aas
popf
mov
in
sub
pop
xor
call
call
or
lds
ret
scas
xor
lods
rcr
insl
in
in
xor
push
repnz
sbb
cwtl
push
xor
and
adc
xor
fld
fistpl
mov
rcr
lods
cmpsb
ljmp
or
pop
repnz
shl
cmp
in
push
jne
pop
dec
mov
data16
mov
cmp
jbe
in
std
mov
jmp
push
mov
mov
loopne
jp
sbb
aad
add
filds
lcall
add
mov
cs
sub
rolb
mov
pop
int
imul
and
dec
lods
dec
imul
or
and
stc
loope
pop
test
inc
hlt
ret
adc
bound
add
stc
fwait
popf
ret
dec
push
test
loope
push
aad
cmp
clc
add
or
and
test
dec
in
hlt
aas
add
fxch
clc
sbb
mov
jmp
or
jbe
lock
lods
mov
sub
in
cmp
adc
add
pop
mov
clc
cwtl
add
sbb
out
stc
filds
ja
clc
pusha
push
sub
fucompp
ud0
xchg
dec
jp
sub
sbb
rol
jle
add
xor
jmp
data16
fistpll
je
insb
mov
mov
pop
nop
scas
or
jp
outsb
inc
jnp
std
lods
ficoml
inc
rolb
ss
add
lret
fdivp
xchg
add
outsl
inc
loope
pop
add
lock
mov
rclb
mov
cmp
mov
in
in
add
bound
test
mov
inc
dec
push
mov
mov
add
ret
hlt
push
push
pop
scas
arpl
mov
lods
and
cmp
adc
cmpsl
ret
ret
popa
inc
adc
outsb
fucomip
rol
lock
fsubr
and
dec
mov
xor
enter
mov
push
mov
or
adc
push
inc
add
fs
sbb
jmp
loopne
sub
dec
sub
inc
or
shl
xor
jbe
dec
lock
dec
mov
loopne
pop
pushf
cli
adc
sbb
lock
test
lcall
fisttpll
add
jge
loope
ss
jp
or
testl
push
jo
outsb
cwtl
xor
mov
fdivr
and
add
or
mov
jecxz
pop
add
sbb
sbb
xor
dec
jb
inc
pop
pop
loope
in
fidivrl
mov
sbb
outsl
xorl
pop
insb
xor
scas
adc
xchg
icebp
fdiv
roll
adcb
sti
insl
or
mov
cmc
xor
int3
dec
movsl
xor
xor
mov
es
cmp
add
inc
add
push
cmp
sti
or
mov
sub
add
dec
inc
shrb
cli
loope
pop
shrl
or
and
enter
repnz
repz
sub
mov
sbb
and
int3
lahf
add
clc
imul
les
imul
push
popa
jne
cs
nop
or
mov
andb
adc
div
out
push
lock
cld
and
loope
and
jge
push
lods
lcall
mov
mov
aas
push
pop
jmp
fiadds
sub
cmp
add
cmc
jbe
lock
adc
dec
arpl
out
insb
inc
decl
jmp
sbb
xor
icebp
sub
not
pop
xchg
fmull
xlat
and
mov
ja
idivl
push
push
hlt
push
push
call
scas
or
jae
sbb
cmp
sbb
mov
add
lock
inc
mov
jo
pop
aaa
stc
loop
sub
sti
daa
adc
mov
inc
adc
add
ret
aam
add
inc
inc
cmp
jb
push
xor
lcall
arpl
dec
adc
jl
xor
out
push
mov
shl
fildll
mov
loope
mov
mov
pusha
pop
add
inc
or
xlat
push
test
incl
jae
push
ret
dec
pop
pop
ja
adc
sub
mov
fs
pop
sarl
jbe
jno
rolb
aam
dec
xor
ds
push
fsts
xor
sub
lahf
pop
xor
ret
inc
or
lods
add
pop
pusha
fstps
aaa
lods
lock
mov
repnz
xor
inc
daa
cld
je
sub
inc
mov
xchg
call
mov
rorl
adc
daa
sahf
testl
add
loopne
aam
dec
adc
sti
xor
push
sub
popa
xor
jecxz
out
xchg
mov
ja
js
push
mov
pushf
inc
add
lgs
test
fisubs
cltd
add
incb
jge
mov
aam
pop
sbb
cmpsb
lret
xchg
loopne
dec
das
les
hlt
dec
popf
sub
xchg
dec
hlt
adc
dec
jb
mov
sbb
cwtl
push
dec
in
es
outsl
sbb
les
data16
sbb
fwait
iret
pop
loop
out
sarb
loop
sub
scas
xlat
jns
hlt
xor
adc
in
out
push
xchg
sbb
adc
loopne
adc
dec
clc
in
gs
dec
in
dec
cmc
or
testl
les
shll
outsl
pop
mov
cmp
icebp
sub
out
loope
push
sub
mov
xchg
xor
out
jae
fcoml
packuswb
push
xchg
flds
mov
mov
das
dec
lock
cmp
xor
out
cmp
pop
or
je
ljmp
xchg
in
adc
les
pop
sbbl
addb
adc
adc
sbb
les
mov
aam
add
mov
rol
mov
ret
aam
loopne
pop
mov
or
addb
daa
jno
mov
iret
daa
adc
cmp
or
and
add
mov
dec
js
pusha
insb
fsubrl
nop
fcmovb
xchg
orl
push
add
push
sahf
out
imul
add
xchg
fstl
inc
sub
pop
inc
add
and
fcoml
dec
aas
test
hlt
std
ljmp
loope
pop
mov
push
icebp
adc
gs
rolb
add
jbe
add
inc
inc
add
and
or
div
inc
dec
fistl
fimull
fiadds
mov
push
nop
push
fsubs
sbb
hlt
mov
mov
and
inc
pop
jne
and
rorl
dec
and
fadd
adc
dec
shll
inc
inc
cmpsb
stos
icebp
aam
push
lock
movsb
loop
divb
xchg
cmpsb
pop
cmp
push
jno
into
jp
cmp
mov
mov
push
inc
lds
jne
mov
out
xchg
add
rolb
push
fcompl
add
insl
sbb
or
jl
jnp
lret
cltd
repnz
das
js
rcrl
shrl
fisttps
call
call
mov
push
sbb
movsl
sub
cmp
scas
pop
lock
lock
enter
mov
dec
popf
icebp
xor
shlb
sarb
ss
mov
adc
shl
mov
into
lcall
lock
cs
adc
stos
cmpl
xchg
adc
push
dec
jl
and
adc
cmp
rcrl
cmpsb
icebp
ss
shll
shlb
inc
cmp
call
add
sbb
adc
push
cmpsl
stos
push
je
insb
lds
rorb
test
cwtl
xchg
mov
insb
outsl
mov
and
sub
xchg
xor
mov
test
rcll
cmp
xlat
push
enter
enter
inc
pop
fnstenv
nop
jne
xchg
call
pop
hlt
call
andb
push
mov
or
loope
rcll
fimuls
mov
test
sarl
jg
adc
inc
mov
sub
sti
rorb
nop
add
pop
loopne
xor
xchg
mov
out
add
cld
call
je
aam
divl
xor
dec
sbb
call
or
fsubs
inc
or
jecxz
es
lret
fnstenv
fbld
stos
inc
es
dec
adc
xor
fidivs
cmp
enter
stos
pop
jl
sbb
dec
hlt
dec
and
js
dec
rol
add
mov
fwait
outsl
out
adc
cmp
and
aad
aaa
cwtl
xor
add
mov
inc
dec
idivb
or
pop
cmp
and
pusha
add
movlps
dec
js
inc
adc
jl
push
outsb
int3
lock
jp
call
and
popf
mov
fadds
adc
jmp
jns
add
enter
jb
dec
push
enter
add
popf
add
add
add
mov
and
addr16
xchg
dec
pop
or
adc
mov
ret
loop
fiaddl
jo
lcall
add
adc
cmp
pushl
cmp
stc
push
cli
jno
sbb
pop
xchg
mov
mov
adc
sbb
xchg
inc
xor
cld
cmp
cmp
mov
clc
xor
out
add
add
lock
jle
popw
jo
jo
aam
idivb
loopne
int3
add
sbb
aam
xor
ret
dec
js
inc
add
adc
enter
xchg
sub
shl
xchg
mov
fwait
lock
andb
add
pop
in
cld
add
jne
jb
pushl
roll
lcall
sbb
sub
sbb
rolb
push
sub
sub
shlb
dec
cli
dec
mov
leave
loop
divl
in
hlt
sub
test
or
jmp
dec
inc
mov
cli
andb
adc
push
xchg
out
cmpsl
push
push
lods
notl
fbstp
rolb
adc
pusha
test
pop
adc
pop
pusha
jp
add
decb
push
testb
ds
std
aad
in
loop
mov
rcr
mov
or
ret
add
sbb
shll
in
repz
jecxz
std
sub
add
adc
mov
adc
or
sbb
dec
inc
test
movsb
push
and
cli
out
fldl
and
adc
mov
clc
pop
fnstsw
push
les
inc
in
std
lea
jl
xor
pushf
cmp
sub
add
sub
out
adc
add
xchg
fcomp
adc
jge
or
cmp
repz
out
add
cmp
cmpsb
in
sbbl
cli
xor
pop
add
pop
fadds
pusha
test
jecxz
das
push
into
xchg
cmp
dec
mov
push
sub
jle
daa
lock
lcall
sbb
inc
mov
xchg
stos
adc
push
push
lea
push
push
hlt
xor
xchg
dec
gs
rcrl
mov
add
add
pusha
or
jge
les
int
es
add
ss
out
adc
lods
jne
mov
sbb
in
cld
add
jecxz
adc
fsubr
aas
push
repz
add
dec
inc
add
leave
ja
add
ss
sub
dec
rorb
mov
sbb
jbe
add
fs
sbb
inc
or
arpl
clc
pop
add
add
and
add
loope
xchg
adc
sub
xor
jg
decb
daa
add
fildll
pop
jge
xlat
fisttpll
mov
loope
push
adcl
out
jne
mov
ret
lock
pop
or
movb
lock
testb
jl
in
lods
out
sub
sbb
cmp
rcr
adc
adc
or
sbb
sub
mov
dec
ljmp
daa
xor
fistl
jns
dec
call
xor
or
mov
sbb
ss
add
jbe
shlb
jp
cmp
adc
sahf
hlt
scas
and
scas
sbb
test
stos
add
ret
mov
clc
dec
push
insb
mov
mov
nop
clc
mov
shlb
adc
xor
hlt
hlt
pop
sub
pop
test
lods
aam
add
xlat
icebp
sub
nop
dec
jae
and
inc
ja
sbb
daa
add
ja
adc
jle
cs
fs
enter
mov
sub
ja
ds
push
fildll
adc
mov
sub
int3
pop
lea
pop
add
loopne
aaa
aad
icebp
hlt
out
into
inc
test
push
dec
jo
sbb
insb
add
insb
cmp
inc
lods
xchg
inc
mov
lock
scas
or
into
out
imul
push
out
jecxz
pop
ret
or
movsb
jg
sub
sahf
rclb
cmp
fcmovnb
je
xor
fmull
outsb
inc
mov
push
push
inc
addb
sbb
ret
icebp
or
adc
mov
xor
outsb
jb
lds
mov
jp
sbb
loopne
push
and
lock
add
jle
lock
cli
dec
mov
dec
inc
adc
sub
and
cmp
icebp
pop
mov
fs
push
adc
cli
bnd
add
inc
scas
jle
addr16
mov
push
mov
inc
and
repz
sbb
mov
inc
loop
adc
xor
push
sub
add
lret
lods
f2xm1
loop
adc
inc
outsl
push
adc
sub
adc
sti
dec
orb
sbb
sahf
and
mov
shr
pop
mov
int
cmp
pop
jbe
adc
leave
cmp
call
and
ljmp
cli
addl
push
mov
push
adc
and
xor
rcl
xor
sahf
mov
movsl
inc
arpl
ret
aam
push
fpatan
dec
sbb
push
in
clc
pop
or
pushf
call
sbb
imul
divb
push
push
push
xor
jmp
dec
sub
or
cmp
shr
dec
clc
adc
cmp
push
jecxz
out
lock
sbbl
cmp
clc
jno
orb
lods
fimull
cld
call
add
and
and
and
lea
sbb
inc
adc
cs
jo
mov
jecxz
mov
dec
xchg
sub
mov
adcb
roll
adc
inc
mov
mov
aaa
clc
aas
or
mov
mov
cmpsb
loopne
or
xor
daa
in
cmp
mov
sbb
or
out
cli
xor
lods
inc
cmp
leave
ret
add
dec
push
imull
andb
jg
ret
push
sbb
inc
push
add
in
or
adc
push
lods
ds
dec
icebp
loopne
js
dec
cmp
add
and
mov
rclb
lea
repz
out
sbb
sub
jle
out
fincstp
fsts
dec
xor
dec
ret
je
adc
jnp
and
ja
scas
xor
enter
inc
leave
sbb
cmpl
stc
das
dec
nop
push
add
add
lods
test
pushl
leave
and
and
not
sub
cmp
outsl
sbb
orb
hlt
lea
mov
adc
loopne
in
mov
add
sbb
mov
test
and
enter
xchg
xchg
cmpsb
push
sbb
ret
or
pop
inc
jo
sarb
inc
nop
add
sbb
jb
movsl
loope
jp
rolb
xchg
sbbb
clc
adc
sbb
adc
inc
fcompl
jbe
pop
jbe
push
xchg
cmp
add
ret
push
sbb
add
add
jge
orb
loopne
and
decl
add
adc
push
adc
enter
adc
add
loopne
test
iret
scas
mov
sarl
xchg
lods
repz
mov
mov
mov
push
push
mov
scas
dec
add
clc
filds
mov
roll
xchg
and
leave
inc
cld
cmc
push
push
push
cli
in
xchg
inc
pop
adc
mov
push
shl
dec
test
dec
mov
das
rolb
adc
ret
loope
int3
mov
pushl
sarb
add
push
enter
out
jecxz
xchg
push
or
out
dec
loopne
mov
ljmp
add
lock
jl
inc
shl
andl
adc
mov
std
rsm
ss
and
lock
aad
adc
je
das
mov
and
sub
fs
or
aam
cmpsl
push
iret
ret
xor
stc
test
insl
jmp
pop
shrb
fld
fisubs
pop
pushfw
or
dec
xchg
sti
inc
push
retw
xor
add
lods
testb
push
jbe
inc
add
xor
xor
inc
loopne
fwait
mov
rolb
add
jge
rorl
ret
mov
sbb
fisttpl
cmpsl
sahf
hlt
or
pusha
pusha
sub
loop
pop
push
inc
sbb
ds
add
or
jmp
mov
popf
xor
mov
push
sbb
mov
mov
jo
mov
fwait
add
or
mov
fs
add
scas
ljmp
sahf
dec
lret
xchg
js
jle
adc
jge
clc
rcrb
xchg
mov
adc
fisubrs
daa
inc
dec
pop
dec
shrb
adc
adc
shlb
adc
fildll
push
inc
push
cmp
bound
and
addb
add
adc
dec
daa
dec
fsubr
mov
inc
mov
pop
push
inc
pop
rolb
sbb
pop
xor
les
ja
es
enter
ret
dec
push
cs
cmp
lock
cmpsl
push
pop
loopne
pop
inc
jg
shrb
movl
dec
ret
dec
popf
mov
xor
faddl
sarb
movsb
mov
add
lahf
sbb
bound
push
xor
or
insb
jno
addr16
addb
bnd
dec
mov
jp
xor
inc
push
adc
ds
add
scas
cmp
and
outsb
aam
add
cld
push
pop
in
mov
les
jmp
cmp
sbb
push
dec
add
sbb
loope
mov
mov
adc
add
or
loopne
mov
mov
sbb
and
add
mov
lock
and
adc
xchg
ljmp
mov
imul
mov
or
movsl
push
aaa
sbb
or
push
push
call
dec
bswap
inc
scas
gs
rolb
sub
or
xchg
test
cmp
cmp
pop
aas
or
add
push
stc
testb
push
out
jle
fincstp
and
pop
push
rol
test
add
dec
sub
xor
jb
jb
jmp
clc
xor
loopne
rorb
or
push
clc
mov
mov
bound
outsb
xchg
js
push
jnp
stos
movsl
and
mov
push
cmpsl
dec
scas
dec
nop
xchg
or
inc
sbb
stos
adc
adc
pop
add
jb
fstpl
pop
sub
fmull
sbb
fmull
xor
jg
mov
out
addr16
stos
xor
jno
pop
jmp
jp
cmp
sti
sub
cld
or
mov
pop
nop
insb
fsubs
jne
ds
pop
ret
sbb
sub
jne
inc
jecxz
pusha
shrl
add
sub
inc
jnp
fstpl
jl
dec
fmull
ret
sub
ds
and
dec
xchg
pusha
movsl
lock
jnp
ja
adc
sbb
add
mov
movsl
out
rcll
jmp
cmp
inc
loop
lock
mov
push
add
clc
mov
sub
cli
jmp
addr16
jb
int3
inc
jecxz
adc
test
jb
addl
mov
add
mov
arpl
mov
mov
sub
and
subb
inc
push
mov
lea
or
loope
loope
or
ret
rclb
or
sbb
and
daa
pop
mov
ljmp
idiv
and
scas
jmp
push
cwtl
xor
in
mov
bound
scas
icebp
mov
movsl
inc
adc
dec
in
add
cmpsl
xchg
lcall
std
mov
and
dec
xlat
or
add
jecxz
pop
aaa
fsubs
xlat
xor
movsb
dec
lret
xchg
push
adc
sbb
mov
push
sbb
stos
clc
mov
cltd
mov
sub
push
sbb
stos
dec
out
loopne
mov
iret
mov
in
add
lods
sbb
pop
jne
add
push
adc
push
lock
repz
loopne
sbb
inc
test
and
cmpsb
mov
lret
fptan
int
jno
jnp
inc
or
jmp
jp
lock
add
inc
lret
mov
push
xchg
rcll
lock
mov
ret
lea
xor
scas
pop
pop
lods
mov
dec
xchg
fsubs
andl
fstps
or
mov
out
pop
test
mov
mov
mov
pop
or
cmp
pop
cmp
or
and
nop
sbb
aad
fiaddl
fisubl
push
xchg
icebp
data16
or
mov
loopne
lock
mov
fisubs
mov
inc
out
clc
lahf
jge
sbb
std
jmp
inc
shlb
call
outsb
test
sub
scas
push
xchg
lds
sub
inc
cld
pushl
dec
and
jmp
mov
and
or
cmpsb
pop
adc
ret
push
decb
dec
xchg
outsl
mov
mov
jecxz
bound
sbb
or
and
addb
jmp
addr16
xor
xchg
add
mov
sahf
out
fwait
pusha
and
ds
dec
icebp
cwtl
sbb
cmp
testl
add
loop
xchg
js
push
insb
mov
shrl
add
js
lock
sbb
mov
ja
daa
mov
jo
add
das
aam
scas
test
pop
jp
repz
cld
xchg
mov
leave
je
inc
nop
and
push
sbb
push
test
inc
fsubrs
hlt
xor
pop
test
ret
loopne
mov
mov
xlat
add
lock
push
lea
push
call
mov
xchg
jne
dec
xor
jo
sub
int
push
or
and
cli
xor
out
cld
push
jo
les
ja
test
es
fsubrl
xchg
lods
enter
shll
pop
je
pop
cmp
xor
nop
jne
dec
and
jbe
inc
lcall
popa
xlat
xor
popa
dec
adc
rolb
jns
or
cmpsb
icebp
aad
inc
add
sub
add
adc
jl
movsb
rorl
xchg
add
pushf
lock
call
lods
jo,pt
pop
sbb
mov
and
testl
sbb
mov
out
movsb
mov
call
fadds
repnz
stc
lods
lock
dec
inc
popa
mov
jp
adc
and
popf
cmp
ja
scas
and
jno
ret
dec
fmuls
xchg
js
sti
cmp
loopne
repz
leave
jo
clc
xchg
ljmp
call
sahf
push
xor
dec
sub
fwait
in
lock
mov
sub
xor
js
lea
add
test
add
aam
lock
sub
mov
cmovp
loope
mov
mov
outsl
jo
cld
sbb
insl
jge
xor
jo
ret
mov
xor
je
pop
test
outsl
mov
ljmp
sub
hlt
shrb
pusha
in
pop
cld
push
data16
inc
pusha
pop
mov
pop
mov
xchg
les
enter
mov
aad
maskmovq
negl
fstpt
xor
imulb
ret
mov
jns
and
sub
pop
aam
or
push
xchg
add
jge
inc
scas
mov
rol
add
add
ds
add
test
jo
sbb
inc
ss
rol
or
mov
mov
add
dec
cmp
pop
mov
dec
rclb
jno
fsubrl
ljmp
rolb
dec
imul
mov
add
push
scas
hlt
lea
ss
dec
aam
je
mov
adc
dec
aaa
sub
js
jmp
notb
sahf
inc
popl
fsts
sub
xor
mov
es
inc
add
dec
into
jb
pop
pushw
nop
jmp
push
and
pop
ret
mov
mov
int
or
add
sub
aas
or
xchg
repnz
invd
test
adc
mov
mov
cmc
mov
xor
cli
cmp
andl
inc
ficomps
lock
into
jmp
arpl
push
pop
or
xor
out
adc
dec
mov
xor
cs
test
and
push
inc
nop
mov
addr16
pop
add
xchg
daa
pop
inc
cs
pop
xchg
js
adc
leave
mov
mov
fsubrs
in
rorb
or
fisttpll
clc
mov
fstpl
fdivl
sbb
and
fnstenv
fmuls
addl
popf
push
mov
pop
or
shrl
jle
push
add
rorl
pushf
push
adc
jnp
enter
sub
enter
dec
sbb
outsl
mov
cmp
test
loope
insl
mov
jne
push
cld
out
push
out
sbbb
and
inc
addr16
add
popa
dec
xlat
call
pop
push
adc
lret
cmp
sete
xlat
icebp
ds
out
aam
or
push
add
hlt
out
cs
jmp
and
lcall
outsl
inc
pop
cmpb
testb
sub
dec
push
sub
cmpsb
push
mov
stc
push
imul
fsubs
lods
push
movsb
fnstenv
pushf
mov
cltd
loopne
lods
ja
ret
jae
adc
aas
lock
rolb
inc
sub
sub
movsl
adc
pushf
adc
js
mov
cwtl
lahf
ret
clc
sbb
jmp
or
mov
adc
loopne
nop
add
sub
loopne
das
jbe
adc
or
je
sbb
hlt
mov
out
repz
jo
jo
scas
lods
sub
mov
mov
pop
jns
aaa
jbe
adc
lret
mov
jecxz
cmp
shlb
jb
pop
add
mov
aas
adc
leave
mov
mov
clc
cmp
xchg
pop
jae
lock
scas
shlb
shll
adc
sub
mov
fisubrl
popf
mov
dec
or
and
adc
push
pop
mov
sahf
shl
dec
or
and
out
sub
cmp
adc
shl
cli
cltd
xor
push
xchg
push
je
testb
mov
sbb
test
into
test
xor
jo
dec
jbe
add
daa
lods
inc
sbbl
fwait
mov
rcr
xchg
lcall
mov
add
add
out
setns
push
mov
add
jmp
jb
dec
sbb
inc
icebp
scas
popf
test
jecxz
mov
leave
adc
lds
aas
fcoml
iret
inc
outsb
jecxz
mov
sbb
inc
divb
dec
adc
sahf
pop
adc
or
pop
or
inc
dec
cmp
add
inc
rorl
add
popa
imul
jg
dec
inc
adc
ret
adc
imul
jecxz
sti
adc
or
push
mov
and
sbb
add
mov
add
jbe
pop
jp
out
and
into
sub
or
cmc
aam
dec
sub
mov
fs
jo
das
rclb
loope
or
test
pop
xchg
pop
dec
inc
mov
inc
add
mov
imul
ficomps
js
aam
aam
fimuls
mov
mov
push
les
pop
orb
cmpsl
mov
xor
incl
pop
enter
push
xchg
cmp
call
xor
arpl
rcll
mov
push
pop
sahf
jae
adc
les
movsl
jge
outsb
add
add
je
adc
or
sub
dec
pop
jbe
push
xchg
dec
jge
roll
xor
dec
push
xlat
or
xchg
or
adc
cmpsb
imul
mov
sbb
push
jne
je
sbb
fdivs
xchg
ret
xor
or
adc
ret
sub
dec
aaa
ss
push
leave
out
push
dec
cmpb
and
rcrb
and
aad
rclb
mov
mov
xor
mov
sarl
and
xchg
shrb
hlt
out
ss
clc
repz
and
or
jecxz
jmp
push
push
les
adc
lock
add
push
rclb
call
add
mov
test
and
jb
ffree
adc
jmp
mov
sub
pushf
out
sub
mov
mov
loope
lods
int3
sti
jle
mov
cld
push
dec
ds
and
sub
test
mov
adc
es
fcoml
mov
out
pop
in
adc
adc
out
mov
adc
push
push
rcl
inc
jmp
lods
jle
fstl
mov
iret
inc
sub
push
or
xor
icebp
xor
dec
clc
inc
out
cmp
mov
movsl
inc
lock
std
jb
lahf
xchg
test
mov
mov
hlt
sarl
sub
ret
pusha
subb
push
sbb
add
scas
mov
pop
dec
dec
lock
ret
sub
and
loop
int
test
push
int
out
pop
repnz
push
add
xchg
xchg
ss
xchg
ror
pop
test
mov
mov
outsl
fbstp
push
dec
cwtl
mov
ss
js
dec
movsl
aam
lret
xor
mov
outsb
std
xlat
fdivs
loope
dec
and
out
pop
insb
sbb
hlt
test
out
mov
adcb
loope
test
jb
pushf
mov
xchg
adc
aaa
mov
pop
xchg
cmp
loope
jp
pmaxsw
xchg
mov
push
inc
sbb
xchg
or
das
fimuls
outsb
es
sub
lcall
cmp
nop
inc
add
inc
xchg
ret
cs
dec
mov
lods
xchg
and
ja
es
icebp
cmpsl
filds
add
shl
push
push
add
in
movsl
adc
rcrl
xor
and
adc
sub
cmp
push
test
cmp
cltd
pop
sub
stc
dec
or
mov
repnz
mov
dec
adc
dec
imul
popf
in
int3
shlb
adc
dec
test
mov
out
test
pop
mov
ret
aad
sbb
xchg
and
fbld
jmp
or
in
adc
stc
scas
sbb
loopne
loope
pop
mov
sbb
rorb
je
loope
loopne
out
push
xlat
pushf
sbb
imul
and
dec
out
stos
clc
push
test
inc
add
test
pop
aaa
sub
xchg
arpl
enter
and
xchg
mov
cmc
sbb
push
and
inc
adc
fsubrl
daa
sbb
mov
inc
xchg
cwtd
ret
or
add
pop
test
xlat
int
jbe
dec
sbb
out
adc
adc
inc
orb
xchg
es
test
jmp
adc
push
stos
insl
cld
xchg
jae
cli
cmpsb
xchg
fdivrs
sub
pop
sub
test
jmp
fs
cwtl
fiadds
inc
call
jecxz
sbb
call
pusha
inc
call
adc
ret
shlb
or
adc
jnp
lock
xor
lcall
lock
xchg
xor
out
icebp
andb
jbe
or
jo
incl
mov
push
xchg
xchg
mov
shlb
test
arpl
or
cmp
int
pop
pop
rcr
ja
ss
fsub
add
xor
cmp
gs
pop
in
sbb
gs
idivb
mov
test
and
cmp
mov
into
and
jge
bound
jo
cmpb
sub
push
push
or
sahf
cmp
mov
sti
enter
push
or
iret
inc
push
stc
push
pop
outsb
jnp
jmp
push
adc
adc
icebp
or
jns,pn
or
xchg
cwtl
enter
out
jmp
rorb
jle
mov
gs
mov
add
add
jmp
jae
mov
stos
mov
ror
xchg
rcrb
scas
push
les
cld
lods
out
sbb
inc
and
adc
xor
in
cltd
pop
popa
subl
push
lock
mov
adc
pop
mov
jno
mov
or
push
mov
loop
cli
cs
cmp
push
and
loop
ret
outsl
flds
mov
pop
sub
fidivrs
pop
cmp
and
add
rorb
fadds
int
aaa
mov
outsb
push
sbb
in
and
cmp
sub
mov
cmp
into
jo
adcl
push
addr16
scas
add
and
add
popl
jecxz
xchg
call
std
xor
cmpsl
std
sbb
pop
mov
cli
sub
in
or
outsb
xchg
leave
or
mov
mov
jl
push
test
ficomps
adc
push
or
mov
sbb
cmc
push
pop
mov
jne
je
add
sub
pop
loop
shrb
adc
out
psubsw
jbe
cmp
aam
js
sub
in
mov
fld1
sbb
inc
xchg
sub
add
sbb
cmp
inc
jmp
movsl
jbe
aad
int3
and
and
imul
shr
xlat
cmp
adc
push
clc
lcall
push
mov
test
fcomps
cmp
jb
add
ja
outsl
jmp
icebp
adc
pop
clc
dec
sbb
scas
xchg
xor
pusha
pop
add
mov
test
sbbb
xchg
sti
sti
roll
mov
xlat
inc
stos
cli
call
adc
cld
rcll
add
mov
adc
aaa
or
je
mov
push
loop
aam
add
rclb
mov
mov
pop
adcl
sub
addr16
loop
pusha
pop
and
shl
sahf
sbb
jp
xor
xor
cld
inc
mov
pop
jp
stos
test
xor
inc
lods
adc
pop
insl
jl
lahf
mov
inc
inc
je
sbb
and
fildll
fistps
push
and
push
add
cltd
xor
push
roll
lea
push
test
inc
xor
bnd
xlat
fadd
pop
push
ret
mov
push
daa
mov
loopne
add
push
xor
loop
push
out
and
mov
subl
ret
fbld
inc
cwtl
mov
sub
int3
pop
add
loope
addb
push
stos
jnp
sub
lods
fistpl
mov
mov
movsl
mulps
loope
jg
js
push
xchg
mov
jmp
lods
rolb
in
ss
arpl
pusha
push
xchg
push
dec
sbb
test
pop
mov
fcmovnb
pop
roll
icebp
daa
arpl
jno
xor
xor
mov
sbb
add
pop
psubsb
and
dec
adc
sbb
jecxz
mov
xor
and
imul
or
inc
xlat
jle
cmpsl
pop
mov
dec
inc
out
xchg
mov
pop
xor
lea
sbb
fwait
clc
sbb
in
sub
xchg
fisubs
out
ret
out
sti
shlb
outsb
inc
pusha
lcall
insl
outsl
fwait
mov
or
sbb
and
xlat
add
popa
in
add
loopne
xchg
push
ret
adc
les
adc
addb
sbb
cmpl
test
call
popl
pop
shrl
mov
push
jl
das
lock
sbb
stos
sub
pop
mov
cmp
mov
inc
test
jl
ljmp
repz
mov
popf
lock
in
push
mov
fcomps
xor
fadds
add
addl
ljmp
pop
lock
cmp
jl
mov
orl
xchg
mov
aad
or
addl
testb
adc
ja
sub
adc
out
imul
cld
stc
cmp
nop
lret
outsb
add
repnz
movsb
and
push
rorb
les
icebp
out
ret
jno
adc
inc
jns
fisubs
rolb
scas
mov
je
cmp
or
adc
loopne
in
jnp
and
xchg
mov
aaa
lea
push
sbb
xbegin
push
es
shrd
std
jg
cmp
cltd
cli
jo
fldl
or
xchg
inc
lock
cmp
aaa
les
inc
cltd
mov
pop
pop
subl
inc
adc
add
inc
adc
sbb
bnd
sub
jbe
xchg
and
loop
loop
pop
ljmp
sub
pop
inc
and
cmpsl
lods
cmp
or
decb
add
pusha
adcb
sub
adc
mov
test
add
leave
into
adc
and
jnp
loope
inc
xor
call
pushf
sbb
push
inc
fsts
add
cmp
lods
push
mov
add
and
jl
ss
inc
mov
adc
add
test
xorb
push
push
enter
mov
add
mov
ljmp
std
incl
add
xor
clc
push
jne
xor
inc
jmp
or
ret
cmp
jo
pop
xchg
rclb
xor
iret
aam
jg
push
sub
popa
and
ja
adc
imul
xchg
jecxz
push
ret
and
mov
jmp
sbb
inc
fadd
pop
pusha
mov
jnp
pusha
jecxz
sub
push
adc
rolb
rcl
jmp
mov
testb
and
sbb
ljmp
fidivrl
nop
xor
and
xchg
xchg
cltd
xchg
xchg
inc
mov
rcr
jo
clc
hlt
or
xor
add
push
push
je
add
in
lea
jbe
fstpt
test
xor
mov
add
enter
or
sbb
pop
xor
add
adc
xchg
jnp
mov
add
cmp
nop
rol
sbbb
push
inc
cmp
sub
enter
pop
pop
rclb
inc
push
jmp
loope
and
aas
ret
lahf
cltd
and
mov
test
and
pop
inc
sub
imul
hlt
adc
jecxz
and
imul
dec
sarb
push
push
out
xor
les
dec
insl
decb
adc
cs
iret
cmp
loopne
inc
stos
sbb
xchg
aam
add
fcmovbe
or
idivb
in
out
adc
cmc
or
lock
sbb
xchg
and
ret
cmp
mov
sti
cmc
or
addr16
test
pop
xchg
aad
dec
or
lahf
test
push
xor
lock
adc
adc
in
mov
in
cli
int
jmp
jecxz
sub
repz
mov
push
push
fnstsw
stc
xchg
lock
and
fmul
call
lret
mov
adc
xor
adc
popaw
pop
aad
push
mov
pop
sbb
adc
test
xorl
and
or
adc
test
sub
cmpsb
inc
inc
mov
jmp
dec
jecxz
sub
rclb
inc
pop
add
mov
push
add
add
jecxz
icebp
push
pop
adc
sbb
sbb
cld
push
js
push
jmp
aam
mov
inc
das
mov
mov
add
add
xor
xorl
das
loopne
push
inc
dec
sbb
push
outsb
loop
or
mov
xor
mov
outsb
push
sti
aaa
pop
fisubrs
xchg
lods
rorb
loop
inc
jmp
push
dec
movsl
add
fisttps
movsl
mov
add
test
dec
outsl
test
sbb
inc
add
lds
movsb
cmp
leave
add
sbb
aas
test
xchg
sub
je
loopne
push
inc
sti
pop
addb
mov
bound
ret
in
outsl
jl
xor
and
clc
dec
xor
in
stc
ret
adc
fsts
mov
cmp
fdiv
adc
mov
jecxz
pop
and
add
jmp
negl
test
adc
leave
fisubrl
in
outsb
hlt
and
fcoms
jge
mov
cmp
mov
add
rcrb
lea
push
adcb
movsl
ja
inc
jp
mov
clc
out
dec
dec
nop
push
add
in
rclb
repz
and
sub
jns
das
mov
aad
insl
jbe
push
mov
decb
xchg
mov
pop
pop
fwait
call
xchg
mov
addr16
mov
jecxz
xor
mov
sahf
jg
or
lods
add
add
add
enter
in
pop
fwait
nop
sub
mov
dec
mov
xor
mov
cs
xchg
out
or
mov
aam
repnz
jo
push
add
lret
jl
out
inc
sbb
jg
dec
rcll
or
add
addb
cmpsl
aas
sub
repnz
and
gs
ficomps
inc
rorb
dec
sub
sbb
lock
mulb
inc
or
inc
inc
sub
jo
mov
cli
mov
sub
jns
hlt
ret
or
and
sub
inc
adcb
jne
bound
xor
push
jo
stos
rclb
xorb
nop
pusha
and
lock
add
add
sahf
and
das
shlb
les
add
mov
adc
insb
jg
inc
inc
insb
jb
fwait
cmp
out
std
psubb
cmpsb
test
jmp
ss
ljmp
sbb
adc
mov
testb
hlt
cmp
adc
inc
clc
cmp
jmp
gs
ja
fprem
sahf
repz
call
and
test
je
inc
mov
adc
call
dec
lcall
jmp
or
dec
shrl
xor
cmp
fcos
in
fnsave
fistpll
clc
aaa
cld
mov
call
inc
jmp
cld
mov
fisubrs
cmp
out
or
repnz
push
movsb
push
movsl
mov
loope
mov
and
lods
and
insb
pop
pop
dec
dec
sbb
adc
push
paddq
and
push
movsl
mov
push
cs
and
cmp
xchg
fwait
clc
inc
adc
int3
jnp
fmul
loopne
xchg
ljmp
dec
mov
stos
inc
cmp
jl
ja
sbb
cli
loope
sbb
js
insb
test
pop
sub
jae
inc
fcomps
into
pop
mov
cld
faddl
push
or
fcoml
jnp
xchg
pop
sahf
adc
sub
popf
nop
fcmovne
in
ret
mov
adc
lock
push
xabort
fadds
jl
mov
xor
mov
or
rcrb
addb
push
data16
adcb
iret
loope
or
hlt
lahf
xchg
or
sbbb
xor
xchg
loopne
dec
pop
cmp
dec
sarb
and
sub
out
subl
fldenv
dec
add
or
fs
in
sbb
jle
hlt
or
js
mov
push
mov
aaa
mov
loopne
aaa
js
mov
insb
lahf
jp
fistl
into
or
neg
addr16
lock
loope
pusha
dec
cld
pop
dec
push
addl
mov
xlat
pop
jmp
stos
cmp
sbb
es
shll
je
xor
jo
call
clc
push
dec
xor
mov
xchg
mov
pop
inc
popa
popa
ret
dec
pusha
mov
jno
enter
stos
ja
push
mov
repz
rol
mov
push
pop
lods
xorl
jl
insl
mov
jne
lea
mov
push
gs
cld
addl
and
jg
test
pop
stos
sbb
lcall
les
je
xchg
add
fiadds
adc
es
jb
test
push
push
mov
cmp
fldl
rol
sbb
lock
jne
xlat
mov
loope
or
insb
stos
rclb
das
mov
xchg
add
mov
mov
mov
sub
gs
add
push
adc
lcall
fsubp
push
fs
mov
add
dec
clc
add
adc
addb
inc
sti
dec
cld
cld
jle
out
scas
mov
add
cmp
ficomps
sub
sbb
adc
rol
and
cmp
jno
push
insb
mov
movsl
lret
cmp
dec
cwtl
jns
sub
dec
xor
add
xchg
ror
or
mov
or
or
scas
xor
rcrl
sysenter
test
add
subb
jecxz
out
mov
inc
lcall
xor
xor
imul
mov
and
stos
subl
call
sarl
mov
nop
xchg
xlat
les
ret
xor
jae
sbb
ss
leave
or
fimuls
pop
cmpsl
div
add
jbe
js
out
dec
or
push
jl
adc
pop
pop
js
xchg
clc
cmp
mov
push
add
mov
imul
dec
pop
push
sbb
mul
lcall
popa
loope
scas
cld
inc
sbb
in
cmpl
mov
aas
inc
popa
das
add
in
repnz
cmpb
push
sub
int
add
inc
mov
adc
ror
shl
test
sti
mov
and
mov
cli
push
mov
out
loope
pop
mov
mov
push
cwtl
mov
mov
push
ljmp
icebp
cld
jo
andb
or
sub
push
rolb
loope
adc
je
addb
add
cmp
sub
mov
xor
lock
inc
sub
rol
inc
jl
mov
sahf
mov
enter
fsubrs
aam
addr16
xor
shl
sbb
mov
mov
sbb
inc
pop
out
fdiv
cmp
and
ljmp
insb
xchg
fldl
push
dec
xchg
pop
mov
jge
jnp
inc
cmp
add
das
sbb
in
das
icebp
andl
or
sbb
mov
xchg
out
shl
push
or
pop
add
dec
not
add
in
pop
xchg
faddl
mov
cmp
popa
jl
xchg
adc
push
ret
mov
xchg
dec
in
mov
hlt
mov
cmpsl
cmpsb
fldenv
and
mov
shrl
and
call
mov
inc
add
xchg
gs
inc
shlb
das
imul
push
loopne
add
mov
loope,pn
adc
push
int
inc
loop
fucomi
lahf
jl
roll
scas
ss
mov
push
stos
add
and
adc
xchg
lret
xchg
cltd
loop
add
cmpb
hlt
sub
cmp
imul
jno
xchg
jge
ret
inc
mov
movsl
push
repnz
pop
dec
dec
mov
lock
and
add
test
das
push
adc
mov
mov
xor
insl
inc
mov
pop
out
xor
push
call
fcompl
pop
jle
pop
push
jno
pusha
adcb
inc
adc
in
jnp
inc
outsl
test
out
mov
negl
cld
xor
sti
fidivs
cld
aad
mov
js
sub
mov
sbb
jge
addb
mov
cltd
sbb
push
ret
push
push
jl
call
out
je
mov
xor
pusha
out
mov
cmp
jp
insb
mull
rclb
dec
mov
push
jmp
imul
lods
inc
xor
repnz
sub
add
int3
jecxz
stos
inc
cwtl
inc
ret
rorb
out
or
loopne
mov
inc
pop
jmp
pop
insb
movl
loope
icebp
add
sub
lea
and
arpl
cmp
cmp
inc
cli
out
outsl
jmp
divl
push
push
lea
mov
adc
mov
jae
pop
add
bound
inc
sbb
pusha
sub
dec
push
adc
rcrb
mov
call
inc
insl
orl
mov
popa
div
xchg
add
inc
pop
lock
push
cmpsb
leave
insl
add
jmp
add
sub
mov
cld
les
es
adc
inc
and
mov
sub
mov
pop
xor
test
mov
movsb
jge
rcrb
sub
nop
push
andl
pusha
into
adc
sub
rolb
push
jecxz
rclb
andb
outsl
or
xor
mov
loopne
out
call
gs
roll
shl
cmp
sub
jno
rcrl
and
jnp
add
lock
sub
rol
lret
decl
fists
add
iret
leave
ljmp
mov
xchg
inc
ret
sub
movb
add
lcall
sbb
call
add
fxtract
lock
jmp
add
insl
pop
test
mov
lret
push
xor
mov
negl
xchg
lock
push
scas
pop
cwtl
jmp
les
mov
stos
orb
add
add
ret
push
repnz
push
movsl
movsb
mov
and
movsb
sbb
icebp
mov
or
adc
sbb
pop
loopne
rolb
jb
cmp
or
jnp
mov
fwait
or
hlt
and
pop
rolb
dec
add
and
call
out
gs
jg
insb
aad
mov
fwait
orb
pop
inc
clc
cmc
fnstsw
pop
adc
and
int3
inc
inc
jo
outsl
test
or
jmp
jbe
clc
or
aam
add
subb
out
jecxz
or
sbb
push
aaa
or
and
inc
mov
push
pop
jecxz
in
mov
js
xor
insl
push
cmp
add
leave
sbb
insl
or
push
push
push
sub
xchg
imul
lods
fwait
in
mov
mov
incb
int
xorl
gs
cmpsl
test
dec
add
scas
ret
mov
outsb
mov
ss
testb
xchg
push
sub
shlb
adc
sti
mov
int3
gs
xor
inc
pop
cmp
pop
insb
out
cs
adcl
add
pop
pusha
xchg
pop
rcrl
loope
repnz
add
stos
stos
int3
push
stos
mov
addr16
orb
or
add
jle
lahf
sbb
shrb
pop
jmp
or
and
ret
fs
inc
add
lcall
push
fadds
xchg
sub
sbb
push
push
push
add
inc
cmpsb
cld
adc
aam
sub
push
lahf
fcoml
icebp
lea
mov
push
sahf
lcall
dec
push
push
mov
movsb
push
fisttpll
mov
inc
cmp
in
mov
cmc
add
in
pusha
lock
mov
hlt
loop
fadd
shrl
outsl
clc
add
fninit
xchg
or
sbb
in
frstor
lea
les
call
rcr
dec
dec
stos
jo
jmp
dec
shlb
ret
cmp
ret
imul
push
jb
add
add
adc
adc
add
push
pop
inc
dec
in
jp
cs
push
loopne
test
mov
out
adc
lahf
xor
push
lahf
icebp
cmpsb
mov
mov
int3
stos
inc
and
pop
jbe
sub
xor
or
sbb
inc
test
loop
mov
mov
adc
sbb
mov
add
sub
sahf
and
rcrl
js
jns
xlat
mov
add
sub
ja
inc
loopne
outsb
stc
dec
adc
jo
pop
sub
sbb
adc
mov
cmp
mov
jae
adc
add
or
cmpsl
mov
cli
pop
cmc
iret
lock
adc
je
add
add
rcl
add
inc
ds
nop
loopne
or
mov
mov
cpuid
out
xchg
pusha
loopne
xchg
imul
adc
cld
xor
shr
mov
pusha
xor
inc
dec
add
lret
jb
jmp
hlt
adc
dec
xor
daa
mov
pushf
push
ds
test
xor
loop
sub
rcll
xor
sbb
sbb
pusha
fs
test
add
add
sub
xor
shl
push
scas
mov
sub
sub
cli
add
pop
push
and
xor
cld
mov
les
aaa
mov
push
out
xchg
adc
mov
or
hlt
ficoml
mov
insb
mov
aaa
into
mov
loopne
sub
mov
or
xchg
inc
and
mov
sub
push
movsl
pop
xchg
clc
add
in
add
push
and
add
lahf
push
add
push
adc
jno
push
dec
xor
push
in
ljmp
xchg
movsb
adc
outsl
aas
inc
clc
jmp
mov
mov
dec
cld
or
test
jae
adc
inc
repz
adc
add
push
or
fnstcw
ret
mov
jmp
jo
fildl
nop
jb
jecxz
cli
add
mov
push
lahf
xchg
rcrl
mov
aaa
insl
sub
mov
hlt
inc
lea
movsb
or
mov
or
jl
xchg
push
adc
dec
xchg
mov
add
add
std
outsb
es
cmp
ja
ja
add
sar
xchg
add
mov
mov
pop
jmp
test
cmp
sbb
dec
pop
clc
pusha
mov
push
fldt
or
rorb
addr16
dec
jbe
cld
push
arpl
shl
mov
stos
mov
sti
clc
cmp
cmp
xchg
jle
jo
jno
mov
popa
insl
jl
lret
xchg
imul
aas
mov
sub
inc
lods
test
xchg
jb
lods
jg
and
add
dec
lods
mov
popa
mov
pop
mov
enter
jmp
fmul
inc
jp
inc
and
add
sub
aam
lea
mov
inc
add
add
or
les
push
hlt
and
aas
cmp
movsb
call
lods
int3
pop
or
sbb
mov
cs
and
or
lock
or
imul
div
inc
imul
mov
repnz
call
insb
int3
xorb
sub
lea
mov
jmp
mov
and
popa
into
cmpsb
ja
subb
addl
not
mov
in
or
add
sub
push
popa
adc
shlb
adc
dec
adc
add
stos
or
sub
mov
pop
lods
xchg
clc
xor
cmp
subb
int3
pusha
mov
sub
sub
inc
and
xchg
outsl
or
int3
or
mov
dec
mov
add
stos
es
clc
mov
cmpsl
push
adc
daa
lock
mov
push
add
xchg
inc
loopne
cmp
dec
xor
rcrb
mov
push
fcoms
in
bound
pop
mov
icebp
inc
shlb
push
les
out
icebp
stc
pusha
jns
rorb
fisubs
fs
rolb
enter
sub
xchg
push
add
mov
cli
or
sbb
xlat
js
addl
jg
inc
cmp
dec
cmp
and
push
mov
test
or
lods
divl
hlt
pop
sub
pop
and
fisubs
xchg
add
or
ljmp
jb
add
icebp
and
negb
jg
inc
pushw
xor
aam
sub
movsl
sub
push
dec
sub
and
dec
int
and
adc
aam
and
add
add
cmp
pop
push
push
rol
cmp
push
cmp
data16
jne
xchg
pop
xchg
shll
xor
iret
adc
jle
in
decb
out
andb
sbb
fisubrl
fwait
sub
add
repnz
sbb
adc
cmp
enter
aam
pop
sbb
jns
adc
fstps
inc
mov
cmp
in
insb
ret
dec
testl
aaa
cmp
inc
fs
push
cmp
inc
rcrb
inc
mov
jl
into
xlat
rolb
clc
xchg
ss
xchg
int
iret
mov
push
sbb
mov
test
stos
lahf
xorb
les
mov
mov
mov
mov
add
adc
jp
adc
ret
dec
loope
jmp
jbe
mov
movsl
sub
fdiv
insl
mov
jbe
xor
inc
push
icebp
inc
shrl
pusha
mov
jmp
dec
or
sbb
imul
sbb
addb
sub
es
clc
mov
dec
nop
rol
adc
jno
mov
fisubl
dec
xchg
orb
inc
ret
ds
inc
add
fsubs
ret
shr
and
sub
loop
inc
sbb
lock
pop
mov
loopne
fists
inc
or
sbbl
insb
fnstcw
push
pop
sbb
or
xor
mov
sub
inc
imul
call
pusha
pop
rcrl
jno
clc
pop
ret
lods
ret
push
popa
out
ret
cmp
std
push
dec
add
pop
hlt
and
jno
and
nop
hlt
int3
push
fadd
mov
test
cmpsb
xor
push
jns
ret
retw
jb
and
push
enter
cmp
mov
and
fs
sub
inc
pop
popa
xchg
xor
enter
aad
cli
push
out
add
inc
test
sbb
sbbb
mov
or
cwtl
imul
fidivrl
mov
cmp
xadd
mov
pop
loope,pn
mov
fsubs
scas
sub
mov
xor
iret
sbb
add
mov
inc
mov
rolb
ss
int
idivl
xor
mov
or
aas
sbb
xor
aam
pop
lock
fwait
outsb
mov
adc
or
add
push
iret
push
in
mov
repz
add
sbb
push
inc
jp
fnstcw
es
add
shrb
lea
fmull
and
jl
addr16
in
outsl
lods
sub
dec
pop
mov
pop
add
sub
dec
fistpl
mov
dec
or
dec
shrb
pop
rorl
sbbl
jo
inc
add
js
or
pop
or
pusha
pop
jecxz
shrb
sub
mov
xchg
xchg
fmuls
dec
aas
or
xlat
cmp
jno
sub
cli
mov
xor
test
or
test
push
push
dec
mov
push
inc
mov
add
or
or
xor
insb
ret
jo
shlb
pop
push
mov
mov
jbe
pushf
ret
xor
pop
lock
out
stos
fs
mov
cmp
adc
xchg
fimuls
es
rorb
cmp
cmpl
orl
data16
loopne
push
mov
dec
or
mov
push
dec
fldcw
add
rorb
mov
mov
xchg
stc
lods
xor
test
outsb
and
cmpsl
mov
rcll
push
sub
je
jmp
cmc
loopne
jo
pop
mov
add
je
inc
jnp
faddl
mov
and
fsubrs
add
imul
inc
sub
dec
mov
xchg
aam
loop
loopne
adc
push
push
push
mov
or
jge
call
hlt
cmc
dec
ficompl
cmp
out
jo
xchg
mov
sub
xor
add
and
xor
xor
and
xchg
adc
std
rclb
xchg
mov
popa
dec
sarb
outsl
loopne
bound
adcb
inc
mov
ljmp
lods
or
and
jl
popf
cmpsl
push
and
xor
ret
xor
push
jo
lods
dec
ja
std
fisubrl
loope
or
enter
lea
mov
hlt
pop
bound
test
cmpsl
sbb
xor
xchg
aam
pop
sbb
and
addb
mov
call
in
bound
add
sbb
mov
rcl
out
rcrb
mov
push
test
cmp
out
jl
xchg
fnstenv
arpl
sbb
daa
pushl
push
loope
push
xchg
movsb
repnz
pushf
jmp
xchg
hlt
jl
sbb
mov
shll
addl
xor
or
xor
and
xor
mov
mov
cmp
and
adcl
out
maskmovq
inc
xchg
rorb
bound
sub
pop
cs
xchg
test
adc
fwait
decb
ljmp
pop
call
mov
add
and
inc
jns
adc
out
dec
cli
leave
inc
or
pop
add
fcmove
scas
add
add
adc
push
mov
sbb
jne
fisttpl
hlt
push
popf
test
xor
pusha
iret
mov
fildl
pop
test
hlt
mov
add
lret
orl
xor
xchg
mov
subl
aas
pop
add
loopne
add
push
dec
add
stc
mov
subb
inc
cmp
pop
fistl
add
sbb
add
call
or
mov
pop
push
ljmp
add
pop
cmc
inc
mov
int
rcrl
pop
sub
sbb
les
pop
pop
pop
cmpsb
flds
fidivl
std
push
test
or
ret
lds
loope
imul
pop
or
lds
and
pop
clc
pop
mov
mov
push
mov
inc
pop
imul
imul
sub
mov
xlat
xchg
xor
pop
mov
xchg
sbb
mov
adc
xor
jmp
mov
nop
inc
inc
mov
push
pop
cwtl
push
sub
ror
jmp
or
mov
sub
aam
fildl
sbb
sub
or
movd
pop
xor
adc
and
jecxz
xchg
add
loopne
xorb
pop
loopne
cld
jae
add
sti
or
test
adc
cltd
mov
call
mov
ret
lea
dec
adc
add
xor
shlb
jb
rcrb
push
sbb
bound
mov
and
inc
adcb
sbb
aas
jo
andl
addb
testl
rcrb
jno
lcall
pop
push
inc
mov
mov
dec
push
mov
mov
subb
push
ss
push
in
pop
movb
adc
pop
test
mov
ja
popf
sti
add
push
pushf
inc
loop
sbb
cld
aaa
pop
dec
lods
ss
sbb
mov
shlb
rcr
mov
sub
add
fisubrs
jge
in
xor
dec
or
dec
sub
mov
add
mov
xchg
mov
mov
adc
sbb
add
inc
cmp
mov
and
push
out
sbb
fmuls
and
jmp
cs
add
std
and
ja
add
cwtl
loop
add
push
test
xchg
ss
push
dec
mov
xchg
fidivrs
lret
sbb
add
mov
or
clc
push
xchg
in
pop
add
call
out
adcb
sarb
or
arpl
add
fwait
std
stos
clc
pop
push
je
adc
push
loope
sbb
mul
hlt
sbb
adc
fstps
mov
sbb
out
aaa
call
shlb
and
movsb
lods
mov
popa
add
push
js
push
add
pop
sbb
mov
cmp
fisubl
add
pusha
add
add
push
adcb
or
pop
cltd
mov
mov
imul
pusha
jo
jg
or
insb
add
pop
fnsave
add
push
push
loope
ss
cltd
movsl
lahf
cmp
cmpsl
push
aas
enter
cmp
and
push
fadd
push
out
hlt
sbb
mov
add
ss
lods
inc
add
popf
clc
daa
lcall
fst
xchg
or
xchg
fildll
mov
or
mov
cmp
movsl
dec
jae
fadds
pop
test
mov
push
mov
add
pop
or
or
inc
in
add
es
mov
inc
inc
adc
add
fsubl
ret
cmp
push
clc
fidivrs
sar
inc
fwait
and
sbb
clc
add
mov
push
lret
mov
or
xor
bound
xlat
scas
lds
push
call
jae
pop
xchg
sub
jmp
ss
movsb
add
insb
lahf
sbb
jb
xor
in
arpl
inc
xlat
loope
add
sub
add
jecxz
mov
mov
aam
lea
scas
and
repz
xor
or
inc
dec
adc
nop
sbb
dec
call
or
add
mov
out
lock
mov
or
mov
call
push
stc
sbb
push
in
pop
lods
and
sti
dec
push
add
push
lcall
xchg
movsb
mov
jmp
push
push
addr16
cld
inc
add
adc
add
mov
fldl
push
hlt
xchg
jo
sub
arpl
cmp
xor
std
dec
xor
mov
cmovle
xchg
fiadds
dec
jb
mov
or
jl
push
mov
lret
add
or
aaa
imul
or
pop
pop
lahf
out
inc
add
inc
sbb
call
pop
adc
sbb
or
inc
loope
test
cmc
pop
pop
cmp
cmp
add
cli
sub
jb
shl
in
ds
incl
stos
lock
add
adc
lods
mov
mov
repz
adc
and
xchg
adc
push
push
sub
and
mov
jge
jg
sbb
call
sbb
sub
int3
inc
pop
loope
xchg
cltd
jns
add
mov
out
inc
add
mov
mov
out
dec
lods
push
mov
pop
cmp
lret
push
hlt
pop
xchg
cld
fwait
push
add
add
sbb
adc
shrb
js
ja
mov
mov
mov
outsb
jo
adc
scas
sub
inc
lahf
push
icebp
ss
movsl
jecxz
std
insb
icebp
std
fisubrs
sub
movsb
rcll
mov
mov
or
and
aaa
sbb
int3
sbb
adc
xor
incw
jmp
inc
pop
lock
mov
inc
or
adc
cld
pop
adc
test
testl
cmpsl
stc
mov
inc
mov
push
ss
fmuls
push
sub
imul
sbb
jmp
shlb
int
xchg
orb
int
xor
test
lock
adc
pusha
inc
cmp
pop
jge
sub
lock
pusha
sub
add
and
xlat
leave
sbb
sbb
mov
dec
test
xor
mov
test
mov
cli
stos
imul
rcll
aam
inc
orl
push
ror
mov
jb
test
dec
add
jge
or
adc
test
cmp
add
xchg
cmpsl
jnp
xchg
repnz
or
shrl
xchg
sbb
xchg
sbb
cmp
enter
jg
ja
jge
sub
cmp
ficoml
call
fsubl
adc
push
imul
xor
or
lock
cmp
fwait
in
cmp
or
inc
dec
cmp
ljmp
xor
mov
xor
test
imul
dec
gs
pushf
sub
test
gs
mov
mov
call
fwait
jp
outsb
or
mov
adcb
adc
je
outsl
jae
or
stos
test
sbb
cmpsb
and
jns
test
ret
int3
fisubrl
jecxz
lahf
rorb
sub
test
adc
add
scas
mull
lcall
push
push
movsl
movsb
push
sahf
bound
dec
clc
pop
add
adc
mov
lcall
lock
xor
insb
dec
xchg
addb
and
std
dec
jmp
iret
or
adc
push
call
pop
mov
push
push
mov
popf
rcrl
xor
inc
leave
scas
roll
mov
and
outsl
loopne
add
ja
xor
mov
xor
pop
cli
ret
xor
pop
push
pop
mov
push
mov
add
clc
pusha
inc
xor
mov
jp
jb
or
add
js
pop
daa
mov
je
xor
xor
mov
adc
je
dec
add
mov
mov
adc
lret
xlat
clc
out
xchg
leave
and
clc
mov
or
push
aam
cmpsb
aaa
cs
addr16
mov
add
mov
push
mov
xchg
ret
jo
inc
adc
enter
ficoms
mov
popf
sbb
sub
test
mov
rcrl
dec
lret
nop
pop
add
clc
xchg
imul
dec
add
add
orb
rcrb
xor
push
fildl
stos
out
outsb
add
orb
test
xchg
pop
add
inc
adc
add
jecxz
ret
mov
cmp
int
add
and
or
push
jnp
ja
aad
add
jnp
xor
mov
xchg
jno
pop
call
rcr
lods
call
loop
jae
js
loope
loopne
push
jne
ja
sub
and
add
xchg
loop
cmovl
xchg
mov
or
call
mov
clc
adc
incl
sbb
xor
lock
jnp
and
jp
inc
sbb
mov
sub
and
out
inc
push
gs
adc
dec
stos
loop
ret
adc
out
mov
lea
push
das
push
push
push
inc
idiv
add
and
inc
stc
clc
adc
inc
dec
stc
pop
jle
shl
jg
cmp
jmp
popa
daa
out
sahf
sub
push
cmp
inc
and
das
xor
mov
ja
addr16
fstpl
xor
je
cltd
lds
aaa
mov
add
xor
js
fildll
daa
jmp
test
jne
aas
or
jmp
and
xchg
sti
xchg
hlt
mov
cltd
or
icebp
testb
mov
fidivl
sub
adc
leave
push
add
cmc
dec
adc
push
test
aas
mov
clc
adc
lea
push
call
imul
or
scas
fcmovbe
das
jmp
cmp
add
dec
pop
daa
and
addl
jge
jbe
ds
mov
or
pushf
ret
lock
lods
fmull
incl
adc
cmc
mov
mov
and
jo
xchg
xor
sbb
adc
pop
loop
loopne
or
sbb
xor
push
pushf
mov
mov
mov
ret
mov
cmc
cmpsl
pop
icebp
out
mov
rcl
sub
or
adc
ret
inc
pop
mov
xor
or
or
faddl
cli
and
ret
and
sbb
aas
xchg
sbb
jno
push
adc
mov
add
inc
ljmp
inc
and
adc
lods
pop
push
shll
cmp
push
mov
popa
lock
pop
enter
sbb
outsb
pop
push
decl
dec
fiadds
movl
mov
xchg
sub
xchg
push
adc
sub
lahf
fiaddl
adc
fs
jnp,pt
and
sbb
lods
addr16
sahf
xchg
leave
sub
adc
clc
lahf
aam
adc
jle
gs
push
sbb
push
pop
push
fcoms
pushf
nop
dec
add
cmpsl
jp
push
callw
cs
dec
addl
mov
add
cmp
push
idivb
mov
loope
add
fdivr
mov
jns
mov
add
sub
push
repnz
and
add
int3
cld
mov
ja
pop
jmp
fcoml
mov
sbb
push
sbb
xchg
iret
jmp
and
xchg
rol
addb
pusha
push
test
pop
xor
ror
inc
ror
aaa
adc
incb
jg
sbb
jecxz
dec
aam
stc
fiaddl
aam
clc
mov
jecxz
inc
fldt
adcl
push
xor
movsl
mov
add
xor
into
pop
shll
mov
inc
dec
cmp
inc
daa
test
enter
fdivrs
sub
add
inc
aas
dec
inc
addb
mov
fadds
cmp
cmp
push
insb
pop
ret
loopne
mov
arpl
cmpsl
add
adc
lds
inc
rorl
xchg
and
xchg
xor
fiadds
div
xchg
call
add
rcrb
cwtl
stos
nop
into
rcrb
sbb
cmp
or
rcrb
enter
pop
sbb
mov
and
ret
mov
gs
fcoms
xchg
cmpsl
dec
or
mov
mov
adc
lods
cmpsl
jmp
shlb
push
int3
loope
or
xor
jmp
adc
jecxz
pop
add
je
push
push
lds
or
xorl
mov
push
call
shrb
push
ret
arpl
js
push
inc
push
adc
fucom
or
fisttpll
push
xor
push
pop
out
call
sub
push
push
mov
sbb
dec
pop
mov
jl
add
sbb
aad
xor
in
loopne
mov
sub
data16
filds
inc
lods
xlat
lock
lret
clc
inc
rol
xchg
add
mov
add
sub
mov
push
jl
and
mov
mov
out
out
add
jmp
scas
or
rcl
mov
sarb
and
sub
dec
ljmp
mov
add
inc
xchg
fsqrt
dec
lods
lods
sub
imul
mov
cmp
xchg
jle
ljmp
addl
std
add
mov
cmpsl
mov
dec
loopne
sub
aam
fbld
add
pop
lea
adc
and
cmp
shlb
mov
sbb
fldt
popa
subl
loopne
in
sbb
pop
jg
pusha
xor
and
sub
lret
ret
mov
shll
loop
movsb
arpl
xchg
sbb
mov
sub
insl
clc
insl
xor
scas
test
in
lret
jl
mov
out
inc
adc
and
clc
mov
pop
pop
dec
clc
rolb
inc
andl
xchg
add
call
sbb
imul
add
int3
test
push
mov
or
xlat
jle
ret
lods
adc
pop
ss
adc
push
fdivs
xor
mov
pop
je
in
cmp
fmull
add
scas
ret
xor
dec
cmp
aas
fsub
cmp
les
test
and
and
movb
xchg
fbld
das
lock
test
cmpl
mov
sbb
rorl
nop
loopne
mov
arpl
push
ds
add
sub
pusha
ss
jne
xchg
inc
test
fisttpll
push
mov
ret
adc
push
add
xor
outsl
movsl
sbbb
pop
mov
push
adc
mov
pop
inc
mov
not
in
cmp
dec
xchg
xor
out
xor
lahf
adc
or
pop
in
movsl
test
scas
pop
popl
sub
lock
out
repz
ja
lcall
ret
sbb
inc
xor
lock
mov
cmp
sbb
shll
xchg
and
mov
inc
sbb
arpl
or
xor
dec
movsb
xchg
movsl
imul
call
andb
and
stos
dec
dec
js
ds
sbb
sbb
ret
sarl
jb
movl
or
clc
sbb
popf
test
rolb
les
insl
out
push
push
pop
call
dec
mov
nop
sarl
add
xchg
or
bound
roll
pop
dec
enter
clc
pop
cld
iret
test
adc
inc
add
add
adcl
sar
dec
adc
add
imul
imul
or
mov
std
fiaddl
lar
pushf
inc
es
aas
ljmp
add
imul
dec
inc
add
shl
hlt
add
mov
mov
xchg
sub
addr16
ss
insl
and
jl
jecxz
mov
int
adc
cld
adc
or
mov
inc
bound
loope
pusha
or
jmp
lock
inc
mov
xlat
or
push
adc
and
loope
add
test
cmp
sub
stos
fadds
adcl
or
les
jmp
rclb
or
arpl
push
cmp
pusha
movsb
shlb
aaa
dec
push
add
mov
push
adc
sub
or
adc
pop
int3
sub
add
sarb
ljmp
add
loope
push
fadds
mov
dec
push
subb
ss
aas
adc
jge
daa
sbb
test
rcr
in
int3
fwait
cmpsl
fadds
mov
test
clc
mov
jae
adc
add
jecxz
pop
sti
cwtl
pop
adcb
add
pushf
imul
mov
out
sub
mov
cmp
inc
mov
fisttpll
jecxz
push
push
mov
add
adc
push
loopne
xchg
mov
push
mov
cld
push
xor
pop
cmp
pop
sarb
or
ljmp
mov
and
addb
jmp
push
pop
fiadds
xchg
ret
or
jle
arpl
cmp
push
lods
adc
sahf
gs
or
or
pop
loop
idivb
cli
lds
mov
mov
mov
jae
xchg
fs
adc
sar
xchg
mov
loope
test
add
bound
add
sub
xchg
sub
rclb
fistps
andl
jl
lock
fiaddl
call
mov
subl
pop
jge
movups
rorl
pop
xchg
sarl
js
push
adc
sub
inc
mov
test
sub
mov
pop
std
mov
cmp
xchg
cld
nop
popf
inc
pushf
aad
ljmp
mov
xchg
test
push
fimuls
lahf
cs
mov
adc
ret
into
and
shll
xor
out
mov
pop
cmp
roll
or
nop
movsb
pop
pop
xor
nop
push
ret
adc
popf
add
or
xchg
xchg
pop
pop
pop
into
loop
dec
inc
in
and
xor
push
sub
mov
xchg
adc
in
loopne
cmp
or
inc
and
insb
cmp
or
jmp
sub
xor
adc
lret
or
cmp
or
mov
punpckldq
dec
dec
push
add
or
jb
pop
and
orl
or
jnp
hlt
cmp
add
mov
and
mov
and
xchg
popf
push
test
mov
sbbl
pop
pop
bound
inc
cmp
sbb
xor
cmp
push
inc
dec
mov
loope
and
jl
jmp
mov
adc
mov
jno
mov
js
ja
std
aas
rorb
push
sub
sbb
sub
or
les
jge,pn
addb
ds
add
lock
in
adc
and
sub
xor
xchg
imul
sbb
add
jg
add
or
imul
xor
lods
jg
sbb
inc
repz
movl
ret
mov
adc
orb
cld
movsb
cld
and
pop
test
dec
xchg
daa
shlb
add
sar
inc
mov
sbb
add
in
mov
ffreep
ficoms
push
add
addr16
xor
sarb
mov
add
pushw
dec
stos
ljmp
ds
lock
xor
clc
sbb
xchg
add
xor
cwtl
xchg
mov
xchg
pop
jl
inc
pop
lock
sub
mov
xorb
sbb
lret
jge
adc
in
ds
popf
outsl
loope
les
and
adc
incb
dec
add
test
sbb
pusha
dec
loopne
pop
inc
js
movb
dec
cltd
and
dec
jecxz
imul
leave
sub
sbb
fnsave
cmp
mov
inc
and
jge
xchg
rclb
inc
mov
shrb
ljmp
dec
sub
and
push
subl
fisubrl
and
or
dec
js
ljmp
ffree
pop
cmp
add
add
iret
xor
hlt
aam
sub
jnp
outsl
clc
loopne
mov
lods
aad
roll
mov
mov
pop
int
aad
aaa
mov
or
or
jbe
bound
xor
xor
dec
and
loope
sub
mov
test
in
sbb
loope
push
ljmp
je
and
add
dec
psadbw
add
jmp
and
and
into
rolb
cli
cld
sbb
cmp
inc
inc
cmp
mov
andl
xor
inc
adc
mov
sbb
mov
loopne
sub
and
out
aaa
out
loopne
movsl
xchg
scas
adc
add
popa
aaa
add
shl
xchg
jp
mov
mov
and
int
inc
push
and
leave
dec
test
in
pop
movsl
fistps
add
push
mov
or
fnsave
gs
mov
and
loope
mov
jbe
icebp
inc
inc
fnstsw
or
stos
clc
fwait
icebp
mov
inc
js
xor
or
mov
add
jmp
dec
mov
les
dec
les
popf
adc
mov
xorl
je
mov
mov
add
test
icebp
loope
add
dec
jmp
xchg
mov
hlt
add
and
sbb
or
imul
sbb
xchg
int3
push
pop
adc
inc
stos
test
adc
and
mov
addl
inc
in
aas
dec
fdiv
dec
cltd
jno
hlt
adc
sti
cmp
std
daa
jmp
mov
mov
nop
or
push
rolb
add
and
adc
mov
push
xor
faddl
shrl
adc
inc
scas
cli
xchg
hlt
xchg
test
and
jl,pn
sbb
test
pop
call
jne
mov
cmp
movsl
outsl
push
mov
pop
sub
adc
inc
mov
cltd
rorb
mov
push
dec
dec
mov
aam
cld
mov
inc
cmpsb
xchg
stc
cmp
sub
xchg
pop
add
push
sbb
pop
or
push
aam
sub
rolb
push
sbb
ret
xor
adc
mov
int
sub
jno
sbb
adc
movsl
pop
repz
fiaddl
adc
inc
or
or
rol
xchg
cmp
sar
sub
jle
cmp
push
movsl
push
cmpsb
jns
pop
cmpb
stos
jno
incl
lock
filds
imul
cmp
inc
mov
imul
cmc
imulb
in
adc
push
jle
sbb
sbb
cmp
mov
test
mov
adc
pusha
mov
mov
inc
cwtl
jecxz
insb
dec
and
adc
cmpps
cltd
sub
int
mov
loop
push
add
pop
and
lods
push
repz
add
sub
int
ret
cmp
inc
cmp
mov
push
sbb
int3
xchg
and
mov
add
cmp
add
sbb
insl
sbb
call
jecxz
out
inc
lea
lcall
add
stos
arpl
sub
lret
xchg
dec
jl
ret
insl
into
sbb
cmp
xor
and
ss
lods
mov
dec
bound
loope
std
sbb
xchg
and
popa
push
add
xorb
xor
loope
add
ja
pushf
adc
hlt
icebp
adc
and
adc
jle
dec
test
and
or
sbb
jp
ljmp
fwait
inc
arpl
out
jmp
in
sbb
ret
fdivrs
nop
jge
pusha
mov
pop
jle
lret
fcompl
test
cmp
sub
dec
mov
dec
cmpl
data16
into
shrb
sub
mov
sub
lock
or
sbb
jmp
pusha
xchg
adc
xor
push
xchg
subl
addb
jno
inc
and
gs
negb
in
fdiv
fcoms
ret
adc
lcall
lods
cmp
icebp
clc
popa
dec
cmpsw
pop
mov
and
enter
adc
or
pusha
loope
xchg
testb
test
dec
cltd
adc
pop
and
xchg
jmp
xchg
push
mov
call
nop
in
lock
pushw
mov
adc
or
jne
popa
imul
sbb
leave
inc
inc
popa
lds
std
les
adc
xchg
ret
sub
loopne
iret
nop
aam
hlt
or
lods
cmp
out
sbb
movsb
data16
insb
outsb
mov
push
call
inc
sahf
inc
add
out
xor
push
xchg
and
xor
pop
lahf
cmp
sti
sti
enter
icebp
mov
and
popa
xor
push
es
cmc
adcb
lahf
lds
jle
xor
sub
and
ds
adcb
adc
nop
pop
pop
pop
mov
test
adc
xlat
mov
mov
pop
add
xor
rcr
sub
mov
dec
add
pop
lods
xchg
mov
rcrl
rcl
or
adc
add
adc
xlat
divb
ljmp
adc
mov
les
xchg
bound
fs
adc
test
les
sahf
lret
mov
jbe
rol
aas
push
sub
pushw
add
rcrb
out
lahf
jecxz
gs
in
lods
add
push
and
adc
fwait
or
popa
jns
fimuls
dec
and
fsubl
outsb
dec
inc
xor
lock
xor
ret
inc
cmp
fwait
les
les
fsubl
inc
adc
push
and
jge
push
loope
push
insb
cs
mov
sub
sub
fs
fidivs
sbb
xchg
jg
in
xchg
lea
rep
mov
pop
repnz
nop
adc
pop
or
inc
xchg
lock
mov
add
inc
mov
mov
push
mov
push
inc
int3
mov
insl
movsb
movsl
xor
jp
add
pusha
mov
pop
sub
int
paddq
scas
leave
sti
int
mov
sbb
scas
fistps
mov
adc
inc
jmp
call
lock
add
and
push
testb
jge
jb
jecxz
loope
inc
in
xchg
orb
addb
jge
or
mov
sbb
xor
push
clc
std
and
inc
nop
inc
push
push
call
icebp
call
mov
aas
and
mov
mov
mov
int3
push
inc
xor
or
dec
and
pop
jp
jmp
popa
aad
dec
clc
outsl
loope
clc
jns
aam
mull
mov
outsl
xor
inc
ret
inc
int3
not
adc
jle
hlt
xor
aam
inc
ret
adc
int3
call
push
orl
mov
jp
inc
aas
mov
xchg
inc
ffree
and
sub
inc
cs
or
pop
and
fwait
rcrb
push
mov
and
test
sbb
add
mov
dec
or
roll
lahf
dec
int
dec
nop
push
popf
push
call
dec
sbb
xchg
sahf
cmp
pop
pop
pop
and
xor
and
lsl
adc
xchg
bound
push
arpl
pushf
aas
popf
lea
popa
jb
inc
add
mov
add
push
ja
push
and
arpl
in
mov
adc
enter
cld
les
xchg
or
je
lods
or
adc
js
or
or
dec
mov
jl
add
or
sub
ds
sub
cld
gs
out
add
rol
cwtl
mov
cltd
rcl
test
in
js
add
daa
es
fnstenv
pop
jle
cmc
mov
push
test
inc
in
lock
and
inc
loopne
lret
sbb
cmc
ja
jmp
push
imull
fwait
add
les
lcall
sub
incl
push
out
shll
in
push
faddl
aas
push
or
fcomi
push
add
mov
std
enter
out
aaa
js
sbb
adc
inc
loope
es
movsl
jbe
hlt
mov
adc
adc
daa
push
das
ds
cmpsl
outsl
imul
je
loopne
shlb
adc
js
and
testl
push
adc
imul
pop
mov
or
adc
lock
nop
inc
dec
bound
cmp
leave
push
leave
addl
js
dec
inc
aaa
lock
mov
jae
add
adc
dec
and
xor
or
sti
inc
sub
mov
and
xor
mov
loopne
jno
jne
adc
xchg
push
enter
lods
popf
xor
mov
sbbl
pusha
lea
xor
iret
jno
lock
imul
push
pop
or
lret
push
push
scas
mov
inc
xor
fsubl
sbb
adcb
lock
push
pop
ret
mulb
sbb
sbb
jl
inc
pop
inc
pusha
add
aad
sbb
sahf
mov
jno
clc
ficoml
adc
sub
cmc
and
leave
inc
adc
dec
lods
mov
gs
fdiv
xor
clc
mov
ljmp
test
rolb
xchg
push
call
cli
mov
dec
lret
test
fdivs
cwtl
ja
fwait
mov
mov
cmp
or
stos
hlt
bound
sub
mov
stc
fstps
push
call
mov
mov
jge
push
sbb
and
xor
shlb
and
pop
jno
lea
aaa
sbb
in
sahf
pop
movlps
orb
jnp
jecxz
xor
divb
inc
xor
sbb
test
cmp
aaa
and
push
test
lcall
notl
rcrb
add
inc
or
add
jg
clc
adc
in
push
fs
fdiv
lea
loope
mov
sub
sbb
jmp
notl
jnp
cli
dec
pusha
in
inc
add
dec
cmp
pop
add
or
adc
daa
mov
incb
out
inc
and
addb
test
cmp
rcrl
push
push
add
ret
xor
out
in
sub
inc
je
add
and
xchg
and
ss
rcl
aam
fldcw
or
jl,pn
leave
pop
pop
or
cld
rorl
loop
fisubrs
fiadds
push
sbb
insl
add
jl
nop
roll
es
and
xor
inc
clc
cmpsb
cld
xor
mov
dec
ljmp
addb
xchg
cld
jge
push
push
js
daa
das
insl
jne
jo
movsl
in
adc
add
das
pushf
mulb
inc
pop
and
xor
andb
notl
add
jecxz
stos
sub
and
inc
xor
lods
or
xchg
into
std
loopne
dec
dec
imul
fsubl
mov
adc
gs
push
aas
hlt
in
lcall
add
hlt
mov
adc
push
dec
call
pop
iret
mov
sub
mov
pop
jp
cld
sub
adc
sub
nop
push
rorb
ret
adc
or
shlb
or
mov
js
dec
lods
xchg
inc
sar
loopne
add
inc
add
mov
imul
ljmp
adc
test
in
daa
mov
mov
and
adc
inc
xor
dec
or
jb
sub
sub
jge
add
pop
orl
fisubrs
add
pop
jmp
pop
addl
cmp
shl
add
inc
pushf
andl
aad
loopne
and
or
mov
add
jg
jge
jmp
mov
shrl
push
inc
add
dec
sar
adc
push
je
arpl
mov
cmp
jecxz
adc
orb
xor
aam
fcos
xchg
jl,pt
scas
and
pusha
mov
inc
dec
imul
mov
lods
and
dec
xchg
repz
fcmovnb
mov
test
mov
cmpsb
hlt
into
std
jge
mov
add
nop
mov
or
test
dec
add
add
int
push
xchg
sahf
pop
outsl
leave
test
push
xchg
cltd
and
fmuls
mov
out
ret
dec
rcrb
push
and
bound
lea
add
fdivr
mov
hlt
cmp
mov
xor
rol
xchg
pushf
in
xor
jbe
arpl
and
push
mov
ret
dec
mov
psubq
dec
xchg
adc
mov
adc
loopne
pop
push
test
sbb
push
lret
rolb
daa
or
add
popa
or
mov
pop
test
mov
mov
hlt
test
mov
jecxz
jl
aam
xor
or
xor
jne
cmp
cmpsb
add
dec
insb
adc
shl
clc
rolb
add
scas
pop
mov
adc
sub
pop
adc
cmpsb
inc
adc
inc
movsl
insl
sbb
lock
stos
sbb
sbb
xor
add
subl
xchg
sbb
aad
adcb
mov
out
sar
xlat
jno
lds
mov
sahf
pop
aas
popa
aas
mov
dec
ret
leave
mov
pusha
sbb
xor
test
xor
in
inc
add
cld
pop
xchg
xchg
adc
test
lcall
add
pop
pop
es
rcl
or
add
push
xchg
lret
xor
fdiv
adc
lock
xlat
das
adc
adc
mov
push
jne
lcall
mov
adcl
push
mov
jp
scas
andl
adc
sub
divl
scas
and
xor
fildl
dec
fdivs
push
cli
or
or
adc
mov
ret
popf
sbb
add
jbe
les
mov
fiaddl
sub
inc
fxch
adc
lcall
cmp
icebp
fdivrl
push
mov
push
and
enter
adc
aad
mov
out
jecxz
mov
push
push
push
sbb
and
xor
push
mov
lods
js
leave
test
ret
sbb
lock
test
mov
addb
cltd
add
bound
loop
xor
xlat
jnp
dec
aaa
jg
xchg
sar
lods
or
and
mov
ror
mov
cmp
repz
inc
push
mov
ds
mov
aas
or
add
mov
pusha
sbb
popf
cwtl
cmp
inc
pop
in
lods
push
xor
cld
ficoml
push
js
xor
add
rorl
add
mov
aas
mov
mov
and
out
push
sbb
add
lods
int3
rol
cmpl
cmc
and
dec
inc
inc
or
iret
rcrl
in
mov
cmp
testb
xchg
into
adc
stos
ja
mov
inc
lea
lods
ss
cld
imul
mov
pop
cmp
repz
or
incb
sub
pop
pop
les
popa
fildl
mov
hlt
subb
mov
inc
mov
mov
loope
xor
cmp
fisttpl
or
mov
jp
shlb
mov
dec
inc
in
ret
fstpl
dec
xor
int3
loopne
negl
int3
dec
jmp
scas
mov
sbb
clc
add
ljmp
or
js
sbb
in
sbb
pop
lock
ds
js
jle
inc
push
or
or
shll
movl
push
ret
lret
push
loop
ret
test
mov
sbb
xor
pop
cli
adc
lahf
cmp
jbe
pop
inc
push
icebp
lret
in
jp
or
inc
add
cld
mov
out
out
sub
inc
ds
or
add
or
mov
cs
or
loope
loop
and
xor
xchg
sbb
lret
push
dec
arpl
es
adc
add
imul
std
xor
jmp
out
loop
fistpl
lret
and
js
sub
cltd
sub
lds
or
adc
push
inc
call
int
mov
test
iret
ja
stc
adc
mov
add
mov
or
and
in
scas
lcall
stos
fldenv
mov
pop
dec
pop
mov
bound
adc
pop
shlb
xchg
bound
dec
imul
pop
mov
xchg
pop
mov
mov
or
std
add
adc
pop
mov
add
xor
paddsw
test
andb
repnz
popf
add
cmc
sub
sbb
or
rol
shrb
mov
mov
repz
cld
jne
ret
into
mov
mov
xor
roll
fcoml
jge
add
ficomps
adc
or
out
imul
mov
mov
xor
xor
adcb
in
test
xor
andb
daa
insl
inc
in
add
lret
inc
or
rol
pop
xor
jmp
out
rorb
or
xchg
mov
push
mov
cmpsl
daa
jo
xlat
mov
fisttps
and
push
push
mov
dec
popa
xor
sub
mov
cmpb
shrb
push
int3
pop
test
add
inc
xchg
or
adc
or
daa
fs
mulb
mov
add
or
fadds
jno
and
popf
cmp
lock
addb
js
mov
pop
push
loop
les
aas
es
cmp
pop
loopne
jle
jge
sbb
std
pop
adc
push
daa
sub
or
and
sub
add
mov
and
es
and
or
or
sub
push
lods
push
aaa
xchg
arpl
sbb
addr16
or
sbb
add
add
sub
aaa
mov
and
cmp
jo
jae
les
and
adc
add
js
sbb
fcoms
pop
push
dec
test
mov
rol
xchg
mov
outsl
sbb
mov
lea
and
hlt
inc
ret
cmpb
aam
adc
xchg
add
push
inc
sbb
xchg
push
fstps
in
lock
imul
imul
mov
adc
mov
mov
push
cmp
add
sbb
scas
inc
out
test
popf
pusha
xor
scas
movsb
inc
daa
ja
jmp
loopne
and
dec
inc
adc
sbb
mov
lock
jg
add
outsl
jmp
add
inc
dec
sbb
cltd
imul
pop
dec
lods
inc
dec
xor
jb
push
adc
sub
sahf
jmp
outsb
jae
xor
dec
sub
sysenter
mov
inc
ss
std
fucomi
pop
xchg
mov
shll
in
push
add
inc
xor
xchg
xchg
aas
xchg
dec
shr
nop
and
mov
add
leave
xchg
mov
sbb
imul
rcr
sti
or
sbb
popa
xchg
sbb
push
inc
in
ss
ret
jb
arpl
xor
dec
mov
enter
jo
xor
jp
xor
js
and
or
sub
ds
sbb
loopne
cmp
adc
hlt
pop
inc
pop
inc
dec
sbb
xchg
or
push
inc
mov
divl
cld
sbb
iret
lcall
loopne,pn
and
add
pop
lods
cmpsl
adc
insb
push
mov
fnstenv
xchg
mov
dec
add
icebp
xor
loop
xchg
pushf
cmovae
mov
dec
xor
test
rolb
xchg
or
js
add
int3
repnz
loope
pop
out
lock
aas
es
and
movsb
test
lock
icebp
inc
outsb
rclb
sbb
andb
sbb
xchg
and
adc
imul
add
sbb
inc
xchg
jmp
adc
iret
mov
fninit
cmpl
clc
fcmovbe
mov
lea
cmp
rclb
fmul
inc
rolb
and
mov
sub
mov
ror
xor
mov
add
sub
or
ljmp
test
jno
inc
xor
enter
test
inc
lahf
aas
xchg
mov
add
arpl
outsl
inc
mov
mov
push
mov
out
add
adc
jecxz
in
jg
mov
push
inc
add
or
pop
or
pmulhw
dec
jecxz
nop
add
in
add
cmp
and
lret
stos
stos
dec
inc
imul
adcb
shlb
aaa
shrl
pop
imul
fcomip
pop
jnp
test
wbinvd
es
subb
add
cli
dec
bound
sbb
std
icebp
or
popa
loop
popf
shrl
out
mov
pop
not
jg
adc
sbb
repz
ret
push
out
or
pop
sbb
sub
mov
push
add
jae
xchg
add
outsb
rcrb
xchg
mov
jo
push
inc
int
fstps
dec
sub
pusha
cltd
and
rcrl
imul
std
popa
ret
inc
sbb
jge
adc
aas
into
xchg
jne
xor
push
sub
lods
add
dec
add
rol
jge
adc
push
push
and
and
pusha
and
lock
cmp
jb
fimull
repz
shll
adc
sub
or
pop
mov
pop
mov
jb
adc
daa
movsb
cmp
mov
in
lods
add
or
movl
insb
hlt
in
jmp
dec
xor
and
es
or
icebp
fadd
push
mov
cmp
add
sbb
mov
sub
and
loopne
sbb
cmpsl
rcr
or
and
or
lds
push
inc
and
push
mov
xchg
xchg
xchg
cmpb
sbb
and
loopne
xor
mov
out
cltd
push
add
iret
xor
lods
jae
pop
cmp
enter
gs
sbb
pop
pop
fiadds
pop
nop
int3
imulb
push
call
mov
popa
clc
add
mov
ret
add
mov
dec
gs
jmp
adc
je
and
mov
ret
mov
enter
cli
dec
push
mov
icebp
inc
leave
xor
mov
pop
test
xchg
xlat
dec
cmp
sar
mull
mov
ret
fchs
repnz
les
xchg
and
inc
mov
aam
xor
ja
sbb
add
lods
dec
add
or
pusha
les
sub
das
dec
fsubrl
out
or
sub
scas
xor
data16
mov
xchg
loopne
in
fs
lret
cmp
add
push
mov
adc
cmpsb
xor
sub
cmpsl
mov
mov
pop
jmp
imul
xor
add
xchg
sahf
jle
arpl
pop
add
add
and
xor
add
mov
sub
iret
movsb
lcall
loop
rcl
rolb
inc
jp
sti
ljmp
pushf
sarl
stos
add
mov
pop
add
shll
add
xchg
adc
jge
fisubs
adc
add
mov
pop
xchg
clc
pop
add
add
repz
pop
fldenv
jp
mov
inc
mov
adc
push
mov
push
rcl
mov
fsub
fisubl
call
push
sbb
inc
punpckldq
cmp
int
pop
mov
rclb
inc
andb
mov
pop
les
pushl
mov
xchg
adc
adc
sub
jge
push
cs
pop
adc
adc
loopne
sbb
fcompl
or
pusha
or
hlt
movb
push
repz
inc
mov
rolb
fwait
xchg
cmpsb
inc
pop
call
daa
loopne
sbb
pop
adc
and
inc
test
popa
fcoml
jle
rolb
add
xor
inc
mov
clc
jmp
call
sbb
lock
sub
xchg
mov
lret
push
lahf
lea
enter
jmp
iret
xchg
lahf
xor
xor
in
das
sarb
sub
push
pop
adc
aad
add
xor
xor
out
xor
fistpl
rol
int
test
push
into
mov
test
inc
das
sbb
cmc
test
push
push
push
xchg
sub
xor
add
or
test
das
mov
adc
gs
dec
xor
jae
movsl
dec
cmpsl
aas
adc
icebp
loop
sbb
cmp
arpl
push
pusha
cmp
or
test
push
jnp
icebp
xor
cli
shrb
mov
cmpb
xchg
dec
and
fdivl
pop
outsl
pusha
inc
nop
scas
mov
push
push
jg
imul
call
pusha
push
xor
cmp
ret
call
pushf
mov
xchg
cmp
push
shl
add
pop
mov
add
test
mov
cmp
sub
outsl
pop
adcb
sub
rcrb
sub
inc
jp
mov
mov
std
or
cwtl
aad
cmp
fdiv
adc
mov
fildl
notl
dec
add
orl
dec
jbe
xlat
insl
pop
mov
add
push
popf
enter
xchg
mov
sub
xlat
aam
dec
insb
addb
shll
add
insb
or
roll
mov
add
cli
rolb
cmpsb
dec
mov
rolb
subb
dec
test
xchg
in
lcall
movsb
sbb
jnp
push
das
lock
adc
push
hlt
fistpl
and
loopne
jecxz
adc
sbb
lods
push
inc
scas
imul
xor
in
dec
push
enter
lret
jge
mov
cmpsb
inc
sarb
inc
call
pop
push
call
adc
xor
jo
fildll
in
dec
test
inc
lcall
stos
test
out
rol
sub
fs
daa
adc
push
das
outsb
mov
dec
sub
push
or
aaa
inc
jbe
cmpsb
mov
add
notb
jno
cmpsl
and
pop
jbe
icebp
sub
or
mov
in
cmp
sti
mov
outsl
add
dec
xchg
inc
ja
aas
jl
push
push
adc
ror
nop
andb
adc
mov
mov
pop
hlt
dec
rcrl
dec
fsubl
sub
js
imul
add
adc
add
push
int
lahf
in
and
add
inc
add
push
push
mov
call
or
aas
adc
mov
loopne
jbe
inc
ret
or
sub
repz
mov
cmp
hlt
lret
daa
testl
ret
add
add
out
jbe
sub
mov
out
flds
pop
sbb
jbe
mov
cmc
sbb
pop
stc
dec
loop
push
cmpsb
cmp
cmp
es
fnstcw
mov
stos
sub
mov
andl
les
cmp
repnz
sub
add
xor
mov
or
cld
rcrb
fdivrp
sbb
pop
insl
or
sbb
mov
sbb
fldl
add
rol
mov
add
pop
imul
dec
ja
ret
and
cld
jmp
xor
sub
fsubrs
add
sub
mov
push
ds
mov
frstor
rcrl
popf
cmpsl
scas
cld
iret
add
jbe
add
stos
movsb
jno
mov
ret
add
add
repz
add
pop
dec
int3
adc
and
leave
or
shll
ljmp
movsl
pop
fcomps
mov
lea
pop
jno
xchg
rol
sbb
hlt
xchg
sub
ret
fwait
out
jnp
adc
sub
das
mov
jl
sbb
addl
loope
aam
mov
inc
and
iret
pop
jp
pop
lods
inc
ljmp
sbb
pop
andb
jle
jp
cmp
enter
leave
lods
sub
pop
icebp
bound
xchg
cmc
jno
inc
out
popa
out
mov
jo
loop
and
push
xchg
call
push
add
jp
sub
push
imul
jl
out
jmp
adc
roll
rcll
pusha
sbb
add
notb
inc
and
jnp
or
testl
xor
test
sbb
sahf
int
xor
adc
sbb
in
mov
addr16
sub
aaa
push
fdivs
add
sar
pop
fsubr
cli
and
or
mov
adc
adc
mov
xchg
sti
mov
sbb
pop
cmpsl
fcomi
adc
push
std
inc
clc
lret
stc
ret
push
sub
insl
out
inc
rcrl
and
mov
sub
adc
repnz
pop
push
stos
add
add
pmaxub
add
sub
mov
xor
mov
shlb
arpl
push
ret
movl
jmp
pop
mov
movsl
sahf
nop
in
adc
sbb
cmp
add
xor
adc
addb
jae
push
fadds
stos
daa
jno
add
push
sub
cld
movsl
out
loop
xor
jl
lret
jge
adc
aam
pop
cmp
popa
add
xchg
jae
jmp
imul
iret
sbbl
popf
cmp
movb
sbb
repz
xchg
shrl
add
adc
mov
mov
xor
mov
sbb
into
adc
push
adc
push
add
adc
in
fcompl
out
or
jns
adc
push
scas
mov
ret
pop
add
mov
lret
mov
call
cld
push
sub
or
xorb
mov
jne
adc
cmp
je
add
mov
in
lods
add
inc
pop
hlt
push
shlb
xchg
dec
rolb
sarb
mov
push
clc
and
sub
das
adc
adc
mov
xor
mov
mov
and
out
sub
mov
mov
mov
imul
popf
sbb
sbb
imul
fscale
outsb
jae
es
push
cmp
notl
mov
or
das
lret
push
hlt
jnp
add
and
pop
lret
and
xor
add
cs
rcll
leave
mov
fimuls
les
lock
and
in
or
push
lret
push
add
pusha
add
and
xchg
sub
pop
mov
add
or
out
jae
adc
dec
xchg
negb
gs
jb
test
xor
gs
rclb
out
js
or
adc
test
lods
add
movb
sbb
das
jecxz
push
cmp
testb
mov
pshufw
lret
pop
mov
icebp
mov
les
adc
pop
xchg
jecxz
subl
mov
push
push
or
lsl
push
ret
js
sub
jns
add
add
mov
xchg
movsb
out
pop
sub
out
adc
and
adc
movsl
xor
test
inc
inc
xor
xor
out
cld
aas
push
jle
test
pop
add
and
push
les
scas
shrb
cld
ret
xor
xor
and
test
jae
pusha
add
pop
test
push
mov
or
pop
sbb
jns
jmp
std
sub
add
cli
lcall
mov
out
adc
repnz
test
call
aam
adc
imul
add
adc
mov
adc
xor
push
cmpsl
sub
in
inc
cwtl
mov
xchg
xchg
sbb
pusha
gs
add
jbe
jp
clc
mov
add
aaa
shlb
test
arpl
rolb
adcl
dec
addb
push
addl
js
test
loop
daa
test
bound
inc
sbbb
into
push
incb
daa
test
jno
jmp
ds
adc
add
mov
addb
add
push
jmp
shl
ja
sbb
add
fwait
add
dec
packsswb
shlb
shrb
xchg
inc
xor
and
sarl
lock
adc
pop
adc
cwtl
cmp
ljmp
sbb
in
pop
mov
add
ljmp
xor
shlb
xchg
push
adcb
outsb
les
and
add
inc
aad
jo
pop
mov
iret
nop
push
in
and
cmp
mov
add
mov
jb
std
and
lret
cld
pop
jecxz
mov
push
psubsw
int
xor
leave
cmp
ja
aam
dec
adc
cmp
and
js
call
lcall
adc
leave
dec
sbbl
cli
je
xchg
das
mov
push
repz
cli
shrl
push
int3
shll
push
test
and
fidivl
clc
jae
xchg
push
fistl
je
xchg
daa
stos
ja
out
mov
ret
jmp
mov
cli
addr16
push
out
dec
add
fld
loopne
jnp
mov
mov
in
out
cmp
lock
dec
fadd
out
ja
mov
xor
add
gs
or
dec
fdiv
pop
pop
pop
push
mov
add
jae
and
push
mov
cli
in
jmp
inc
adc
add
push
nopl
cs
push
out
adc
ds
xchg
or
inc
and
add
addb
lock
sbb
hlt
and
jae
or
dec
inc
push
call
nop
call
mov
mov
pushf
mov
ret
cs
mov
and
je
aaa
ja
imul
mov
test
mov
loope
push
scas
and
xor
lcall
in
dec
inc
xchg
dec
cmp
sbb
jo
cmp
dec
sbb
adc
add
aas
insl
jno
aad
jae
cmp
popa
mov
lea
mov
das
push
jo
cld
insb
pop
sbb
inc
sbb
arpl
sbb
add
in
je
inc
sbb
sbb
jecxz
call
sbb
xor
add
xchg
adc
and
xor
xchg
add
ret
std
cmp
stc
add
inc
cmp
dec
mov
cld
fdivs
pop
dec
pushaw
add
sahf
nop
std
test
dec
cmpsl
in
sub
inc
mov
fmuls
adc
inc
call
outsl
leave
push
stos
sub
movsb
in
add
daa
xorl
je
push
out
stos
fistpll
jbe
cwtl
sbb
pop
jp
sub
jno
sub
sub
or
sbb
dec
clc
rclb
add
cwtl
lcall
add
sbb
dec
ja
and
xchg
add
jge
clc
sub
sti
dec
jmp
mov
dec
popf
xchg
xor
adc
scas
pop
jne
outsb
or
into
test
xor
pop
mov
ljmp
add
bound
popl
push
cli
imul
push
and
int3
insb
test
sub
shll
clc
rcrl
shlb
jge
out
mov
imul
shl
and
ficoms
jnp
in
js
pop
cwtl
mov
mov
pop
subl
mov
clc
mov
mov
lock
push
int
xchg
adc
test
adcb
xchg
aam
or
rolb
jp
xlat
add
mov
or
loope
push
xchg
mov
pushf
and
icebp
lea
adc
cmpsl
sub
adc
jp
cmp
pop
faddl
sbb
fmull
xor
jne
dec
jp
jg
add
push
scas
lret
jmp
push
lock
xor
push
pop
pusha
xchg
sbb
clc
aad
les
mov
dec
push
sahf
stos
add
aaa
lds
adc
adc
les
xchg
pop
jle
xor
jnp
inc
jg
imul
inc
mov
adcb
xor
add
and
loope
dec
scas
lock
adc
fsubl
pushf
and
ljmp
add
sub
mov
pop
cmp
jae
xchg
pop
mov
add
jae
jo
icebp
push
xchg
repnz
push
cmp
cmp
pmuludq
add
jo
rol
jb
adc
and
hlt
mov
sbb
pop
jecxz
cmpsl
cld
sarb
flds
jge
fcoms
push
rcrb
leave
cmc
rorl
fisttpl
add
cmp
mov
hlt
sbb
inc
mov
push
dec
push
adc
ffree
inc
cmpsl
or
sbb
nop
xor
mov
ja
cmp
dec
in
xorb
outsb
lret
mov
outsl
adc
adc
cmp
stos
test
push
fldenv
jmp
and
aaa
ret
push
pop
dec
ret
xor
int3
pop
lret
xchg
lock
xadd
and
sbb
aas
and
pop
btr
mov
ret
ds
cmp
cmc
out
jmp
add
inc
test
add
stos
pop
fnstsw
adc
sarl
icebp
fildl
push
into
fsubr
pop
mov
cmp
jb,pt
fdivr
or
xor
adcl
roll
lret
xchg
xchg
ficomps
xchg
inc
scas
int
movsl
hlt
in
mov
mov
push
adc
mov
cmp
jg
sbb
mov
addb
jbe
mov
add
shrb
mov
out
inc
add
enter
adc
push
jp
lret
inc
rcr
jp
add
rcrl
std
cld
cld
call
and
pop
mov
loop
mov
jge
pop
jle
dec
add
or
movsl
pop
sahf
cmpsl
inc
iret
inc
sub
dec
pop
pop
lret
lods
xchg
imul
test
or
outsb
in
push
push
out
incl
lret
je
movsl
aas
add
mov
xor
xchg
js
pop
into
js
pop
faddl
add
xchg
add
mov
and
xor
call
add
mov
test
sti
push
and
xchg
into
mov
ljmp
insl
sbb
les
out
test
and
xchg
ds
movsl
or
push
jnp
insl
imul
lcall
lahf
xlat
xchg
loopne
repz
lea
push
fcoml
les
stos
pop
mov
mov
mov
mov
push
pop
mov
or
call
adc
sub
and
outsb
and
pop
ss
call
xchg
repz
inc
mov
sbb
or
xchg
test
std
popf
adc
ret
mov
rcrb
or
mov
push
aas
push
je
in
cmp
add
xor
pop
sbb
das
mov
xchg
mov
fcoms
or
adc
cmp
cmp
test
mov
iret
sub
mov
pop
dec
cwtl
mov
sub
mov
or
add
sbb
cmp
pop
in
jnp
jmp
mov
fwait
or
call
mov
enter
faddp
or
add
and
cltd
xor
int3
xor
cmp
or
les
push
pusha
sbb
xchg
cltd
jmp
pop
and
inc
and
outsl
pop
inc
fdivs
and
in
dec
add
inc
inc
fldl
fcmovu
jmp
gs
pusha
arpl
lods
adc
shlb
mov
imul
aaa
sbb
stos
call
out
pop
sbb
in
fsubs
and
pop
mov
xchg
sbb
push
jl
lock
test
fs
imul
inc
fidivl
pop
rolb
jne
add
push
push
rep
and
fildl
inc
sub
jno
adc
cmp
push
jns
cmp
movsl
lock
lods
xchg
add
les
aad
pop
xor
jb
lret
xchg
mov
push
pop
lods
add
mov
je
mov
xor
lcall
dec
mov
sbb
jns
rol
roll
ret
add
sub
icebp
ret
push
mov
xlat
sbb
int
test
mov
outsl
les
dec
sbb
push
add
fsubrs
test
jne
xchg
fiaddl
test
out
add
stc
or
insl
mov
add
dec
clc
add
jne
add
push
negb
mov
adc
sub
sbb
loopne
mov
fstpt
cmp
jo
jo
jp
inc
mulb
and
rolb
pop
loop
add
and
ja
andl
insl
pop
ret
pop
sbb
aas
in
cmp
imull
aad
loope
into
fbstp
rclb
xor
jns
popf
test
andl
lahf
push
jp
xor
gs
inc
xor
addb
push
add
or
dec
mov
adc
push
inc
mov
scas
call
pop
jp
lds
push
das
add
or
lock
and
sbb
movsl
shr
rorb
aas
cs
popa
sub
sub
cmp
add
or
sub
xchg
xor
jne
jp
cmp
dec
shrl
inc
loop
xlat
mov
inc
mov
rolb
push
sbb
das
loopne
sub
lds
push
add
std
loop
sub
aaa
mov
pop
and
ljmp
cmpsl
stos
mov
and
orl
jno
mov
xchg
xchg
adc
aas
lods
or
cmp
sbb
or
or
cld
add
mov
add
push
jg
cs
mov
jecxz
or
addb
aam
add
jns
pop
popl
inc
scas
adc
jae
pop
jmp
out
pop
mov
inc
dec
enter
push
cwtl
xor
lock
or
jecxz
cmp
ja
outsl
std
xor
addr16
ret
fidivl
xchg
cli
jmp
fdivrl
loop
out
rorb
ljmp
fdivs
xchg
pop
xor
xor
mov
sub
loopne
or
ficompl
dec
lock
cmp
jmp
int
push
cli
inc
sub
addr16
and
and
shlb
xor
in
lea
fstp
add
sbb
lods
xor
test
adc
dec
push
or
push
int3
sbb
xchg
mov
loopne
pop
sbb
inc
mov
sub
jmp
cmpsl
or
sbb
rolw
lock
js
xchg
ljmp
add
in
dec
test
out
orl
imul
aaa
add
dec
decl
loop
test
stos
or
test
mov
mov
psubb
fmuls
pop
incb
sbb
in
iret
cmp
add
adc
shll
xor
pop
xchg
sbb
mov
push
sub
sbb
cmpb
rorb
addr16
add
pop
dec
orl
sbb
lret
aaa
stc
or
jne
repnz
pop
test
and
loope
add
mov
jle
cmp
jb
arpl
cmpsl
sahf
jne
test
aas
insl
pusha
pushf
pop
add
and
adc
xchg
pushl
pop
fidivrl
aam
lret
adc
rorl
fmuls
inc
ret
add
int
jne
mov
fdivr
push
clc
adc
add
and
int3
or
mov
xor
xor
add
push
add
adc
orl
mov
mov
shll
rcl
ljmp
add
and
adc
popa
movsb
add
add
mov
dec
and
ret
pop
js
dec
movsb
js
inc
or
add
inc
xor
adc
sbb
sub
fmul
add
hlt
ds
push
push
hlt
aam
movl
pop
mov
dec
push
or
jg
sarb
pop
ret
adc
pop
loope,pt
adc
dec
clc
lahf
adc
push
or
pop
mov
lret
out
mov
lahf
or
clc
cltd
mov
xorb
mov
lock
adc
pop
adcb
shrb
jl,pt
pop
jge
cmp
pop
sbb
push
fldenv
shrb
orb
add
dec
ss
int
and
popa
inc
loope
add
icebp
pusha
pop
dec
push
insb
aam
xchg
cli
jg
sbb
xchg
cld
inc
or
lea
rolb
lret
pop
shll
cmovge
xor
lods
sbb
fbstp
jno
cmp
mov
sbb
shrb
jle
lock
adc
cmp
arpl
pop
xor
xor
dec
fwait
inc
imul
xor
xor
mov
xor
test
mov
in
push
pop
faddl
je
dec
mov
sbb
aad
shl
in
test
movsb
fldcw
or
inc
stos
dec
add
or
inc
mov
mov
cmp
arpl
divl
xchg
ror
ret
mov
xorb
and
push
imul
insl
or
cmpsl
cli
hlt
mov
in
rcr
out
adc
mov
roll
sub
out
mov
cmp
bound
mov
xor
pop
jb
sbb
cmp
and
xor
cmpsl
add
inc
loope
ficomps
les
push
mov
les
rorb
xchg
xor
fimuls
shll
mov
inc
adc
xchg
fs
inc
fucom
lods
fbstp
or
or
stos
dec
jge
lret
add
cmp
adc
add
dec
mov
jno
push
loope
jnp
ret
jmp
test
jne
loope
sbb
xor
add
and
or
mov
xorb
in
ja
pushf
xchg
mov
pop
cwtl
loopne
clc
mov
or
rol
seta
dec
pusha
sar
pop
sbb
cli
fcmovb
push
jbe
dec
or
sbb
sbb
fsubrl
aam
pop
pop
movsl
push
shll
jnp
adc
cmp
push
add
call
xor
push
jno
dec
xlat
rolb
jmp
into
sbb
dec
out
loop
push
ret
nop
hlt
cmp
cmp
mov
loope
sbbb
loope
insl
jns
setbe
lahf
xchg
rcr
ljmp
jnp
out
dec
and
test
ja
cmp
fildl
cmpsb
xor
repz
add
mov
push
je
adc
enter
jbe
mov
pop
addb
je
mov
loopne
outsl
rcl
pop
and
cmp
lods
push
aam
lret
sub
dec
lods
mov
movsb
adc
clc
xchg
cmc
jne
fdivrl
fbstp
outsl
or
addr16
xchg
pop
cmp
push
mov
inc
mov
xor
adc
in
shrb
jmp
imul
cmp
test
xor
testl
add
leave
test
orl
sub
xchg
cmpsb
rcl
xlat
ffreep
or
xor
lcall
das
mov
cmp
jl
mov
add
and
cmp
iret
mov
icebp
add
scas
jo
add
stos
sub
enter
icebp
jne
ja
movsl
les
insb
not
mull
cmpsb
sarb
and
mov
mov
fwait
add
jecxz
or
adcl
in
xor
mov
push
push
rcll
scas
orl
ror
sarl
dec
je
cmpl
xor
sbb
cmp
or
and
testl
jl
clc
adc
push
push
lea
leave
sbb
mov
xor
jg
fisubs
mov
jno
add
in
dec
fs
fdivr
pop
dec
jo
push
inc
shr
mov
adc
push
pop
or
mov
xchg
xor
mov
imul
test
loopne
aas
push
js
leave
ret
inc
dec
inc
xlat
add
mov
mov
cwtl
inc
add
add
mov
jecxz
mov
mov
dec
inc
xor
jl
mov
xor
xor
dec
push
mov
test
add
sbb
add
add
lret
hlt
test
call
mov
mov
sbb
aam
fistps
jmp
rcrl
adc
add
rclb
adc
int
or
mov
jle
adc
jae
add
enter
popl
mov
ret
ljmp
inc
sbb
sahf
daa
push
ret
sbb
xchg
jno
sub
jp
or
add
ss
inc
mov
cmp
loopne
xchg
xchg
call
adc
jmp
sbb
dec
or
test
loopne
js
iret
rolb
out
lcall
or
shrl
dec
fmuls
fisubrl
push
nop
inc
and
push
negl
inc
lret
push
mov
fsubp
sbb
hlt
ljmp
and
arpl
cmp
in
ds
jmp
add
mov
ss
aaa
dec
or
inc
add
push
repnz
lock
std
movsb
pop
add
pop
jno
loopne
xor
adc
cli
xor
clc
aas
faddl
pop
jle
pop
inc
xchg
rclb
mov
add
push
sub
add
inc
cmpsb
aam
xor
and
hlt
icebp
jg
add
mov
dec
inc
inc
and
clc
aam
mov
mov
xchg
out
adc
jno
add
pop
dec
adc
mov
push
pop
mov
pop
jb
and
jmp
push
lods
xor
or
cwtl
xchg
clc
add
jo
push
int3
mov
dec
iret
push
cmp
adc
cmpsl
sbb
dec
jp
cmp
ja
in
sbb
insl
sub
sbb
xchg
movsl
js
cmc
lahf
and
subl
aaa
leave
sbb
and
les
cli
add
call
add
andb
mov
ret
mov
ss
mov
push
inc
loopne
jmp
lret
loope
and
or
icebp
iret
add
lock
mov
jle
pop
sbb
cltd
mov
sbb
imul
adc
sub
and
add
repz
mov
pop
or
rorb
cmp
mov
cli
mov
sub
movsl
mov
movsl
mov
or
add
mov
movsl
jmp
out
cmp
mov
mov
test
mov
dec
xchg
jle
mov
fbstp
adc
mov
cmp
push
push
or
sti
xor
les
xorb
pop
mov
xchg
and
mov
xor
xor
movsb
icebp
add
test
xor
and
decl
aam
sub
and
insb
and
sti
jl
roll
or
add
xor
sbb
and
xor
shrb
cmp
xorl
mov
add
inc
sub
or
add
inc
sub
sub
lea
shrb
xchg
dec
out
divl
mov
enter
cmpsl
sbbl
cld
repz
aas
ret
rolb
fs
fstps
in
mov
aam
in
addb
dec
decl
test
int3
add
int
push
adcb
push
lret
inc
push
rcrl
test
or
rcrl
and
sbb
pop
mov
dec
pop
loopne
in
cwtl
mov
fcomi
add
push
shrb
inc
out
add
push
loopne
pop
shlb
push
imul
das
ds
and
leave
cmpsl
cmp
lods
or
add
sub
inc
mov
fimuls
mov
add
and
mov
add
push
lock
loopne
bound
inc
outsl
add
push
sbb
cmc
rcrb
or
inc
ficompl
lea
jg
mov
jle
mov
les
dec
adc
fadds
and
sbb
adc
adc
rolb
daa
je
sub
gs
sub
add
push
int3
ret
loop
inc
outsl
js
add
call
nop
js
hlt
jbe
jne
or
and
dec
popa
les
jl
or
std
cmc
inc
inc
ds
in
lock
rcrl
dec
loope
insl
imul
popl
lods
loope,pt
ret
sbb
xchg
lock
add
mov
xor
push
push
imul
sub
shll
dec
sbb
lock
lret
rcrb
test
pop
and
add
add
pop
inc
filds
xor
add
xchg
loop
orb
mov
push
nop
movsl
adcb
out
sub
sub
xchg
or
fs
cmp
adc
push
insl
push
and
add
xchg
mov
ja
das
into
jg
aaa
mov
rorb
lds
xchg
mov
int3
add
aaa
andb
add
loopne
cmp
lods
inc
leave
int3
out
out
dec
xchg
mov
add
ret
out
xor
icebp
movsl
xchg
or
jmp
ret
sbb
pop
xlat
cmp
push
add
xchg
jns
sbb
pop
jno
lea
inc
cmp
or
pop
bound
xor
mov
push
call
push
mov
mov
sub
mov
test
jge
insb
hlt
and
add
sub
adc
pop
pusha
inc
stos
and
ret
out
push
inc
xor
fcoms
inc
imul
push
dec
imul
sub
in
or
mov
inc
stos
sbb
popa
shl
inc
in
enter
xor
test
scas
popa
daa
in
adc
aam
aam
aam
rclb
mov
push
xor
ret
lods
repz
jbe
push
xchg
shl
test
and
insl
lods
add
out
xor
decb
rol
jecxz
mov
addb
std
roll
filds
out
movsb
mov
paddw
jbe
daa
inc
add
and
rclb
test
es
and
fistps
shr
xor
pop
cmpsb
lea
nop
std
or
dec
jne
daa
sbb
xchg
icebp
cmc
or
add
cli
xchg
and
cmp
in
xorl
add
loop
iret
push
pushf
mov
jg
fs
fcom
loopne
pop
test
in
mov
ljmp
mov
out
and
mov
mov
add
add
sbb
add
adc
in
pop
xchg
cmpsb
popa
mov
and
je
xchg
cmpsl
sbb
push
push
push
add
das
movsl
loope
mov
push
dec
add
add
decl
pop
lahf
push
dec
xchg
test
lea
lret
movaps
mov
enter
inc
fbld
cmpsb
push
pop
add
mov
push
leave
mov
xor
mov
insl
jecxz
sub
jmp
inc
dec
loopne
xor
inc
leave
fdivs
inc
or
jae
sbb
enter
cmpsb
sub
dec
stc
jmp
sub
xchg
add
xor
xchg
jb
rclb
dec
test
shlb
sbb
pop
test
popa
inc
sub
mov
push
pop
mov
outsl
sub
push
stos
adc
and
in
mov
mov
mov
mov
mov
shlb
rcr
fadds
clc
add
push
xchg
icebp
cmp
ja
and
int3
testl
enter
inc
add
bound
mov
mov
les
cld
adc
shll
push
xchg
xor
or
pop
add
sarl
stos
jo
outsl
mov
or
add
dec
jmp
lcall
je
add
mov
rorb
das
aaa
push
xchg
lea
push
icebp
data16
lea
push
push
in
call
int3
jp
call
mov
movsb
jp
push
add
je
in
sub
lret
sbb
insl
inc
lods
cltd
ret
jne
aaa
rcrl
iret
add
jno
or
jg
movsb
jno
test
leave
rorl
mov
pushf
cmpb
sbb
push
cmp
sub
mov
pop
push
sbb
movsl
jo
test
add
addr16
mov
inc
lods
dec
cmp
loopne
mov
fcoms
out
sub
pop
mov
loopne
adc
adc
sbb
mov
testl
leave
shl
pop
lcall
pop
mov
push
sub
pop
and
mov
pop
sub
pop
jge
xor
cmp
xor
lahf
outsl
inc
sbb
scas
and
lret
loop
and
ja
loopne
sub
sub
mov
cld
fnsave
adc
pop
xchg
adc
imul
push
pop
and
adc
mov
pop
add
dec
int
inc
popa
daa
iret
cmpsb
das
or
nop
mov
jmp
jmp
inc
push
mov
fbstp
push
and
or
pop
and
or
lahf
sarl
lods
xchg
xor
adc
add
stc
sub
mov
or
mov
mov
add
cltd
ja
imul
fmull
scas
sbb
outsl
mov
leave
mov
push
adc
ror
movsb
call
or
cmp
out
mov
push
push
decl
inc
stos
movsb
dec
or
jmp
mov
inc
sar
xor
add
xchg
lahf
clc
push
push
in
mov
inc
mov
jno
sbb
dec
and
icebp
js
and
fidivs
hlt
aas
push
jnp
cmc
xor
sahf
push
xchg
fistl
call
add
dec
lea
mov
add
sub
shll
xor
shlb
scas
into
jp
je
mov
repnz
and
mov
xor
sub
push
dec
adc
or
jl
bound
sub
scas
aam
in
mov
in
inc
int
ljmp
xchg
push
rolb
daa
clc
push
push
popa
bound
fs
or
xchg
push
call
rolb
push
add
add
cmp
add
faddl
push
test
ja
xchg
loop
dec
insl
adc
fcoms
add
out
dec
mov
fisubrl
hlt
insb
test
hlt
sub
mov
imul
cmpsb
cmpsb
mov
je
hlt
push
cmc
mov
cmpsl
adc
jmp
enter
xor
movsb
xchg
adc
enter
xchg
out
or
sbb
sarb
mov
pop
mov
into
or
out
push
push
insl
pop
jecxz
mov
inc
jne
mov
insl
or
xchg
sub
mov
push
inc
fs
inc
pop
fldenv
jns
mov
testb
test
test
or
sbb
in
fisubs
adc
loope
mov
lods
ret
or
dec
inc
or
ds
pop
adc
ja
fcmovne
and
lods
aad
add
lret
and
xor
lret
inc
cmp
pop
add
icebp
addb
xor
and
mov
lods
pop
clc
or
mov
sbb
inc
lods
enter
shll
push
sbb
add
cs
pop
jl
icebp
test
jle
shlb
pop
inc
test
sub
sar
and
addl
and
scas
add
rcll
lods
mov
xchg
push
das
bound
test
loop
mov
jbe
lea
adc
testl
adc
or
xor
dec
cmp
lods
sub
sub
ret
sarb
inc
pop
sub
int
sbb
cmc
push
adc
or
pop
pop
fxch
jne
add
shrl
inc
jle
sub
inc
mov
arpl
cmpps
xor
mov
and
or
mov
lods
dec
push
dec
dec
dec
jecxz
icebp
rclb
pop
xor
push
sub
ja
loop
ds
shrb
mov
or
xor
rorb
popa
imul
dec
xorb
cwtl
pop
add
imul
ljmp
insb
cmp
ficoml
dec
js
push
xchg
pop
in
out
jno
sbb
and
sub
lods
adc
and
add
or
stos
cmc
add
leave
stos
add
mov
cs
je
rorl
lds
cmc
shll
xor
stos
pop
mov
hlt
cmp
xchg
or
addb
xor
pop
jmp
jecxz
cmp
jbe
xor
sbb
cmpsb
xchg
mov
ret
pop
test
jg
jl
push
shll
fldl
push
nop
jbe
xor
jne
scas
icebp
mov
rcll
ret
add
cwtl
mov
jno
sub
adc
ljmp
test
mull
xor
adc
frstor
ds
ja
mov
cmp
jne
popa
por
cmp
push
out
lret
frstor
and
notb
nop
push
push
pop
inc
daa
pushf
xchg
jbe
ss
add
aam
or
xorb
xchg
negb
add
bsf
mov
das
push
fisubs
mov
dec
aaa
xchg
pop
mov
enter
fsubp
adc
pop
pop
mov
movsl
into
and
and
xor
in
jmp
xchg
jmp
lods
inc
mov
add
jg
and
add
and
and
inc
and
and
or
and
or
enter
and
adc
add
imul
cmp
pop
fcmovnbe
and
add
insb
add
and
or
adc
insb
fildl
mov
inc
mov
and
cmpsb
stc
data16
inc
and
nop
or
and
mov
inc
lods
cltd
sub
dec
add
nop
ds
jle
or
lods
std
adc
add
or
test
stc
push
mov
fs
dec
dec
sbb
dec
sub
jb
pop
imul
push
jbe
and
mov
lret
inc
fwait
mov
es
xor
sahf
or
fadds
or
cwtl
dec
sub
and
xchg
faddl
nop
and
dec
nop
insl
inc
cmp
cmp
sbbl
sub
add
add
xor
cli
and
add
andl
out
jo
or
insb
cmp
mov
dec
sbb
int3
cmp
and
jl
jp
jo
xor
adc
mov
enter
push
cwtl
inc
add
add
rol
add
push
and
data16
fidivs
sarb
roll
test
fcmovbe
mov
sbb
pop
xchg
nop
rolb
popa
mov
pop
adc
js
sub
add
cltd
and
sarb
push
subl
xor
xor
enter
out
insb
rcll
daa
push
dec
ds
inc
enter
adc
scas
stos
pop
or
mov
inc
mov
pop
and
add
cmpb
cmp
xchg
and
add
jno
add
xchg
dec
dec
dec
and
xorl
cwtl
cmp
sbb
xchg
popa
pop
je
push
and
adc
int3
int3
add
ljmp
int
pusha
orb
jl
stos
sub
shlb
adcb
addb
or
mov
nop
mov
or
inc
and
and
and
add
adc
mov
inc
test
pop
and
movsb
dec
and
and
les
fiaddl
push
inc
add
inc
and
test
dec
mov
adc
inc
inc
xor
mov
inc
and
and
mov
and
fmulp
cmp
jle
or
jle
nop
or
nop
adc
inc
mov
adc
push
popa
pusha
lods
inc
les
jp
or
movsb
nop
and
negb
add
adc
and
js
or
jl
orl
and
sbb
add
bound
or
dec
xor
add
xor
in
movb
rclb
subb
inc
and
or
mov
inc
ds
and
in
lods
pushf
and
and
add
in
dec
pusha
xchg
adc
orb
bound
sub
je
or
or
adc
and
cmp
or
adc
or
or
and
cmp
or
add
adc
es
cmp
xor
int
add
xchg
cli
and
adc
sbb
dec
and
add
es
push
add
mov
or
dec
sbb
incb
add
sbbl
pop
bnd
sub
nop
inc
mov
xor
data16
jbe
and
lods
or
add
data16
mov
mov
pop
xor
mov
inc
cltd
inc
sub
push
jge
ret
lods
shl
mov
mov
cmp
xor
nop
addr16
or
pop
dec
dec
fsubl
and
and
xor
nop
push
rcrb
push
mov
push
cmpl
jbe
pusha
adc
inc
lods
mov
mov
mov
int3
inc
jb
push
loop
pusha
paddq
clc
and
lods
fnstcw
or
jo
sub
cld
lret
mov
mov
or
shrl
pusha
data16
sbb
ljmp
add
mov
adc
adc
xor
notb
sbb
je
adc
fabs
loopne
inc
flds
jo
sarb
or
cli
or
and
loope
cwtl
and
orb
popa
dec
popa
mov
movsb
push
loopne
or
push
rcrb
shlb
and
and
sub
cltd
inc
rcl
fmul
pusha
test
xor
sbb
insb
int3
adc
pusha
jl
and
add
call
cwtl
mov
dec
inc
aam
add
xlat
add
insl
mov
fiadds
push
add
stos
clc
int3
fsubr
loopne
cwtl
fadds
movl
pusha
shll
dec
xchg
sub
addl
pushf
int3
int3
int3
rcl
bnd
dec
fcmovbe
int3
lock
addb
sub
or
push
or
adc
cmpsb
add
add
cli
sbb
or
sub
scas
xchg
adc
ds
and
jbe
sbb
mov
scas
mov
xor
enter
mov
inc
xor
lcall
inc
xor
pop
sbbl
lods
adc
adc
nop
adc
and
adc
je
das
push
add
sbb
inc
jo
pop
in
ss
ret
fidivs
js
adc
sbb
mov
cltd
xor
ret
pop
cmp
test
ljmp
mov
push
ljmp
jp
ljmp
mov
lods
inc
das
jae
mov
jns
sbb
adc
add
je
popa
push
dec
sahf
test
es
call
sub
data16
adc
sbb
mov
mov
inc
adc
add
lcall
mov
mov
jmp
mov
hlt
mov
and
cmp
xor
rorb
jb
dec
add
xorl
mov
lcall
loopne
add
leave
push
cwtl
fldcw
push
out
push
sbb
or
xchg
pop
adc
mov
mov
cmp
hlt
mov
or
xor
mov
rclb
dec
scas
and
call
rolb
cmpl
mov
pusha
pop
int3
add
jle,pn
add
jnp
dec
test
js
orb
shlb
jbe
or
xlat
push
jle
sbbl
enter
xor
or
cwtl
loopne
mov
sbb
cmpsb
sub
xchg
adc
push
js
xor
mov
add
xchg
mov
out
cld
dec
mov
pusha
cmpsl
add
mov
jp
pusha
popa
or
add
pop
pop
jbe
test
dec
add
ret
fdivl
push
dec
add
loope
cmp
or
scas
push
add
inc
pop
pushf
cmpsb
or
or
sbb
js
push
add
into
negb
sub
adc
in
pop
inc
cmp
cmp
cmp
push
or
inc
bound
scas
inc
push
mov
lret
add
cmp
sub
shlb
and
pusha
je
mov
or
pop
xchg
inc
dec
push
inc
in
dec
aam
push
dec
pop
test
jb
or
int
sbb
scas
and
xchg
sub
insl
scas
inc
test
enter
dec
jne
push
add
sarb
shlb
and
bound
out
mov
cmpsb
rorb
xor
int3
adc
nop
push
sub
mov
test
mov
shrb
mov
adc
fs
dec
push
pusha
ss
test
ljmp
push
fs
shrb
adc
push
lock
je
xor
add
dec
loope
lods
inc
mov
xor
lret
and
jbe
je
adc
inc
psubb
adc
jo
mov
pop
or
cmp
cmp
mov
in
flds
lret
mov
mov
dec
pop
inc
push
pusha
push
mov
and
mov
into
or
add
push
push
adcl
loop
jae
sub
js
or
lea
nop
out
test
pop
pop
movsb
ljmp
pop
cmpsl
push
xchg
inc
add
inc
add
decl
or
imul
incl
fimull
int3
cmpsl
aad
pop
clc
add
jle
cmp
rcrb
add
repz
call
add
jbe
lahf
add
inc
add
push
mov
clc
loop
adc
xchg
aam
add
adc
add
mov
and
test
lods
fucomi
pop
test
inc
pop
call
movsl
sbb
add
mov
or
cmp
jg
mov
inc
add
fnsave
cld
add
smsw
daa
inc
push
into
aaa
xchg
inc
and
mov
xor
cmp
push
bound
mov
icebp
daa
push
mov
mov
add
test
aam
lods
or
scas
repz
jp
jbe
xchg
add
push
add
div
incl
mov
fs
and
adc
outsb
add
or
aas
clc
decl
mov
lods
pop
adc
orl
lds
pushl
shrb
out
dec
add
mov
or
ret
xchg
adc
std
mov
aad
js
and
movsl
aam
jns
add
cmp
push
sar
scas
cld
push
inc
jbe
adc
sub
les
lret
push
or
mov
fistps
add
loopne
lds
pop
add
ljmp
int
lahf
push
jnp
pop
loop
push
test
fldcw
jecxz
add
aad
add
nop
pop
inc
dec
fwait
cmp
and
negl
cmp
jne
ret
repz
ljmp
std
xchg
popa
push
adc
jp
add
adc
add
adc
push
ja
sub
or
pusha
jmp
mov
push
fildl
or
push
insl
and
shll
cld
inc
xchg
inc
cmp
xor
dec
sub
or
neg
add
repnz
xchg
pop
mov
cld
incl
push
sbb
cmc
in
fistpll
aas
add
pop
jl
sub
jle
dec
inc
es
dec
mov
and
cmc
fcmovnb
imul
cmc
jge
cmp
call
repnz
shrb
pop
pushl
jecxz
dec
int3
dec
sbb
addl
add
push
jp
xor
jns
cld
sub
xchg
int
loopne
add
add
lret
pop
mov
in
xor
or
stos
loop
mov
in
mov
cmp
sub
inc
cld
jmp
and
pop
push
adc
adc
lds
jbe
ljmp
decl
jmp
xor
or
enter
mov
inc
fs
incl
rcrl
push
xchg
insb
xlat
sub
mov
incl
xor
mov
add
call
cmp
ds
cli
inc
push
enter
sub
nop
rorl
arpl
add
pop
es
cli
mov
and
pushl
inc
cmp
add
mov
push
add
imul
jg
xchg
and
sub
inc
pop
sub
sbb
movsl
xchg
push
cld
shrb
adc
cmp
jg
popa
jo
pop
sub
and
popf
xchg
stos
and
nop
and
es
aas
imul
cs
add
add
cltd
xor
dec
cli
add
lds
xor
xchg
dec
xor
or
incl
add
push
imul
cmpsb
jl
mov
iret
mov
cld
or
cmp
mov
inc
hlt
xchg
gs
scas
stc
jne
jp
lds
sub
popa
cmp
loopne
imul
inc
ficoms
mov
jmp
push
cwtl
add
dec
push
pop
jle
adc
test
decl
into
in
insb
pop
icebp
leave
jp
mov
jge
xchg
sub
pop
fs
push
pop
dec
jle
sti
aaa
or
fwait
xor
adc
je
adc
shl
add
std
fimull
roll
dec
or
incl
adc
pop
test
adc
add
lods
icebp
add
daa
jp
sbb
push
add
add
or
ret
xorb
jne
shr
cltd
pushl
sbb
cmp
icebp
outsl
and
stos
je
data16
loope,pn
in
or
movsb
mov
or
into
mov
cli
mov
mov
leave
mov
std
add
or
mov
sbb
adc
movsl
cmp
in
dec
sbb
in
cmpsb
xor
mov
sub
scas
add
dec
sub
push
das
clc
add
pushaw
scas
sub
sub
mov
inc
mov
cld
addr16
arpl
aas
push
mov
scas
jnp
int3
icebp
xchg
std
cmpsb
call
xor
add
pop
and
jmp
mov
add
ljmp
cld
pop
test
pushf
std
scas
adc
pop
test
jge
add
jg
js
lods
cmpsb
pusha
adc
inc
adc
jl
je
lods
pushf
ja
pop
repz
aad
cli
scas
add
imul
xlat
xchg
stc
pop
pop
bound
add
movhps
xchg
pop
push
jle
aad
mov
fwait
mov
mov
ds
cli
jl
stc
fcmovnu
insl
lret
jns
add
or
rorb
xchg
mov
mov
sub
jae
cld
fists
loopne
ss
inc
add
gs
mov
adc
adc
sbb
or
inc
bound
and
jbe
add
or
subb
repnz
imul
sbb
adcl
cmp
out
clc
frstor
pop
cmp
jo
mov
rol
movsb
cli
mov
inc
sub
mov
les
jg
add
xchg
sbb
mov
sub
pop
mov
lods
pusha
sahf
mov
ljmp
sahf
pop
arpl
test
lret
inc
dec
lock
pusha
ljmp
pop
jae
adc
push
icebp
add
cltd
inc
sbb
add
flds
jg
mov
lods
dec
cmp
cmp
add
sbb
outsl
or
add
or
pop
and
enter
jmp
int3
ss
sbb
mov
insl
dec
push
hlt
or
inc
addb
mov
xchg
xchg
sbb
stos
mov
das
adc
ss
jp
push
sbb
test
loop
in
xor
movsl
loop
clc
jmp
sub
imul
mov
cmp
lods
jne
cld
outsl
jb
aam
scas
mov
and
ja
sbb
cs
jnp
mov
cmp
push
add
dec
mov
stos
xor
jg
out
add
dec
add
ds
scas
xorb
push
dec
add
dec
dec
push
and
aas
mov
shl
jnp
call
add
pop
xor
dec
sbb
xchg
jne
scas
clc
jg
push
fnstenv
aam
xchg
fdivrl
inc
or
jg
sub
push
js
loope
adc
rcr
push
jo
xor
pop
out
out
xchg
lds
sbb
and
das
pop
das
mov
push
test
mov
push
in
pop
add
push
pop
aas
or
std
call
pop
and
negb
mov
incl
inc
dec
rorl
add
and
mov
add
inc
sbb
hlt
pop
cld
call
ss
push
push
insb
or
sbb
notl
and
sbb
cmc
cltd
push
cld
jg
sbb
sub
mov
mov
cmp
push
jecxz
mov
syscall
inc
xchg
inc
push
cmc
clc
xchg
orb
enter
or
jne
fwait
push
push
out
adc
dec
test
scas
popa
out
jmp
cmp
mov
addr16
call
outsb
lods
inc
xor
jge
mov
mov
add
sbb
scas
rcr
dec
out
es
aam
mov
mov
push
fidivs
bound
inc
sarb
cli
or
mov
push
rorl
push
lock
pop
push
and
insb
in
stos
int3
cmc
dec
test
cs
clc
cmp
lahf
sbb
ss
add
pop
std
pop
push
inc
hlt
cmp
add
adc
in
decl
or
adc
in
fsub
cmc
or
rorl
outsb
mov
addr16
jmp
xor
test
adc
cmp
pop
mov
mov
cld
mov
adcl
inc
fs
in
bound
in
xor
xchg
mov
mov
pusha
out
or
test
outsl
mov
push
mov
loope
mov
out
mov
add
stc
add
sbb
push
lock
call
adc
mov
mov
loopne
out
dec
movsb
ss
decl
pop
fidivrl
popa
out
push
cmpsl
xchg
jmp
jmp
mov
adc
xor
or
std
imul
fwait
push
fcmovb
test
and
pop
into
cmp
cltd
cmc
push
es
jg
sub
push
adc
and
fwait
popa
cmpsb
mov
repz
jp
repnz
outsl
jp
stc
out
cmc
mov
pop
xor
fbstp
cld
call
dec
in
push
or
add
aam
subl
mov
xchg
inc
push
push
nop
call
sbb
lods
stos
test
mov
adcb
sarl
add
jo
sub
shrb
scas
adc
mov
jmp
fbstp
jo
add
adc
icebp
sub
and
rorb
sbb
loopne
es
stc
in
jle
push
ficoml
jle
rcrl
loopne
sub
dec
pop
repnz
out
loop
pop
ficomps
push
jl
lds
xchg
dec
xchg
jle
pop
push
aas
scas
mov
cli
inc
xor
sbb
push
mov
sti
pop
je
lds
push
mov
add
in
push
mov
jecxz
cmpsb
jbe
pop
fidivl
lock
mov
incb
insb
nop
xchg
cmp
stos
es
push
cld
stos
shr
pop
push
cmp
xchg
dec
repnz
rorb
inc
adc
xor
add
push
dec
sub
call
xchg
add
pop
lock
mov
xchg
mov
jns
fcomip
add
dec
cltd
fimuls
leave
rolb
mov
or
sbb
xchg
xchg
movsl
add
inc
lea
sbb
cmpb
pop
push
xor
jge
insl
icebp
iret
and
add
inc
mov
ret
icebp
test
movsb
mov
ss
sub
cmp
sti
out
test
and
mov
dec
aas
es
cwtl
mov
dec
jo
pusha
pop
dec
pushf
inc
push
xchg
popa
in
xchg
scas
or
inc
loope
sti
repz
es
and
push
add
adc
push
xchg
adc
cwtl
idivl
aad
xor
dec
repnz
nop
xchg
adc
stc
imul
push
or
into
xorb
lock
roll
adc
mov
push
push
add
daa
jb
adc
add
lret
add
jo
lock
add
call
loopne
add
cli
pop
jb
push
add
jns
inc
dec
jb
mov
and
adc
mov
jb
xchg
mov
sub
enter
je
dec
fwait
xchg
mov
mov
mov
test
xchg
jl
roll
xor
adc
sub
xor
ds
fcmovnbe
add
mov
test
je
lock
or
outsl
clc
fcomip
test
jne
add
in
xor
cmc
rcrb
and
cwtl
xorl
sbb
pop
xor
shl
pushl
mov
sub
xchg
dec
call
sbb
lock
into
pushf
jnp
add
int
add
xor
loopne
xor
ret
jg
bound
rolb
popa
out
loope,pn
pop
js
mov
inc
dec
bound
add
mov
inc
in
cmp
dec
fs
insb
sub
mov
sub
rcll
or
mov
cs
incl
cli
dec
pop
mov
inc
adc
adc
dec
inc
mov
test
xchg
fcompl
decl
mov
cli
cwtl
adc
call
inc
cmc
je
add
and
pop
lds
inc
stc
sbb
push
mov
jg
and
flds
adc
clc
mov
jbe
outsb
je
mov
xor
mov
sub
mov
cmc
sub
jl
add
in
rorl
in
fcomip
mov
test
and
xor
movsb
into
sahf
scas
add
sub
xor
mov
mov
insb
or
sub
sbb
mov
inc
push
fs
andb
pop
fwait
clc
pop
clc
dec
lods
or
adc
cmpsl
jmp
decb
into
sub
add
and
add
movsb
cld
jmp
mov
mov
idiv
lcall
add
bound
push
xchg
push
jge
pop
dec
stos
xchg
dec
shl
and
loopne
mov
and
test
push
mov
inc
loope
mov
pop
jge
fists
and
pop
aaa
push
pop
xchg
clc
and
jg
mov
cmp
clc
nop
xor
fnstsw
inc
loope,pn
and
aad
xchg
jge
mov
mov
sbb
add
repz
or
imul
jo
cltd
xchg
mov
mov
inc
clc
es
rolb
sarb
mov
adc
sub
xchg
or
mov
call
push
mov
add
sbb
inc
lret
pop
adc
cltd
push
xchg
fildl
adc
cld
scas
jo
cmp
mov
cmp
sahf
xbegin
cmpsl
sub
mov
sbbb
movsb
and
jle
dec
popa
shlb
xchg
pop
std
pop
push
cld
cmpsb
sub
scas
or
pop
xchg
push
fnstcw
filds
cld
adc
shll
push
mov
fptan
int
inc
rcll
adc
xor
imul
sahf
add
mov
sub
icebp
sahf
pop
mov
pop
pop
mov
incl
push
mov
mov
mov
pop
cli
pushf
in
aaa
outsb
push
pop
scas
pushf
mov
cmp
jecxz
jmp
pop
loope
repnz
inc
pop
dec
or
rorb
decb
lret
sub
mov
pop
add
je
add
jge
dec
aas
xchg
loope
jnp
clc
pop
sub
fs
fsubrs
mov
cmp
push
sub
inc
sub
cmp
cmpsb
add
cmp
repnz
int3
pop
mov
push
adc
mov
jmp
lods
out
mov
push
insb
test
ret
sbb
cld
dec
dec
dec
lods
inc
das
push
clc
clc
icebp
jnp
dec
ljmp
jp
push
cli
push
loopne
jb
adc
xor
out
or
and
inc
xchg
sub
outsl
fldenv
hlt
inc
add
sarb
ds
idiv
lcallw
add
or
push
mov
add
fwait
popw
mov
dec
inc
push
mov
dec
into
imul
sbb
ds
ret
sti
and
jge
or
adc
mov
add
and
push
fisttpll
adcb
jno
push
mov
ret
or
push
inc
cmpsb
jno
add
test
xchg
data16
mov
mov
xor
pop
pop
stos
push
ss
inc
mov
fs
scas
xor
mov
daa
out
out
enter
hlt
das
shr
push
sub
add
inc
and
cwtl
movsb
pop
push
mov
mov
cld
or
push
andb
xchg
js
push
jmp
pop
jne
sbb
inc
add
sbb
test
aas
inc
outsl
mov
mov
jl
push
mov
push
rorl
and
insl
inc
jg
clc
add
mov
je
shl
inc
pop
icebp
lea
cltd
push
cmp
sbb
add
outsl
dec
scas
js
mov
adc
add
add
mov
xor
scas
inc
pop
in
aas
mov
ljmp
add
add
mov
outsb
lods
push
and
inc
sti
inc
push
pop
movsl
mov
orl
cmp
jge
sbb
ja
dec
inc
aaa
inc
loopne
pusha
andl
adc
mov
ds
pop
and
or
jne
lds
lcall
pop
and
les
mov
orl
es
and
dec
sbb
test
jne
jg
decl
imul
pusha
aam
xchg
push
add
pop
dec
cs
xor
roll
outsl
mov
std
cmp
xchg
sbb
add
and
loop
call
ret
scas
adc
jmp
pusha
mov
test
xchg
sub
daa
inc
clc
xchg
jg
inc
cmp
adc
bound
loop
sub
mov
pop
decl
and
ret
arpl
dec
add
loope
lret
push
and
add
aam
neg
inc
fsubp
mov
xlat
pop
sbb
movsb
jo
mov
scas
les
jge
cmc
gs
fs
pop
and
orl
pop
clc
lret
mov
xchg
jg
inc
leave
ljmp
pop
dec
adc
cli
dec
mov
arpl
pop
or
inc
sbb
push
ret
jno
pextrw
cwtl
nop
in
and
mov
jmp
push
fdivl
xor
inc
dec
lea
rcr
js
inc
movl
mov
hlt
dec
sub
fisubl
mov
inc
faddp
xor
xchg
test
add
push
mov
cmp
push
push
insl
lea
sub
dec
add
pop
sbb
shl
push
jg
pop
push
lods
js,pt
push
and
dec
js
or
mov
insl
or
jo
loopne
repnz
repz
movsl
adc
lods
xchg
adc
repnz
mov
movsl
jg
loop
inc
movsb
mov
xorb
and
adc
ja
dec
pop
mov
jmp
aas
hlt
mov
mov
in
ss
pop
push
ja
add
aam
in
mov
mov
mov
dec
stos
roll
lcall
je
sbb
mov
jle
jge
cmp
or
sub
lods
sub
and
xchg
add
or
aad
ljmp
ljmp
xorb
adc
mov
mov
test
aaa
inc
add
dec
aam
xchg
loopne
add
and
jo
cli
orb
fiadds
inc
jmp
cli
mov
jmp
imul
rcrb
jecxz
push
mov
xchg
push
add
jbe
clc
cmp
das
push
out
xor
enter
loop
jmp
and
inc
test
sub
cmp
xlat
fwait
scas
sbb
test
mov
lcall
es
mov
push
imul
data16
out
dec
les
sub
adc
add
pop
mov
add
stc
adc
idiv
arpl
notl
add
cmp
in
outsl
mov
fmull
inc
sub
lcall
test
mov
pop
push
cmp
inc
push
adc
jecxz
gs
adc
test
aas
ljmp
lds
sarb
ds
mov
insl
mov
scas
bound
or
in
jns
xor
cwtl
inc
or
pop
cld
jmp
mov
data16
or
sahf
jmp
xorb
and
daa
or
into
push
int
lods
fndisi(8087
lcall
xor
push
push
mov
out
fisubl
cmpl
es
inc
cmpsb
lods
add
inc
in
sub
ljmp
pop
test
in
mov
aad
adc
decl
sbb
xor
inc
inc
xchg
pop
adc
push
mov
mov
xchg
stos
adc
and
popa
sahf
fld
outsl
inc
or
or
push
test
push
cli
mov
ja
push
dec
les
xor
mov
mov
jg
mov
inc
dec
mov
aad
imul
and
sub
mov
mov
sbb
cs
xchg
ret
test
sbb
sub
mov
es
mov
mov
je
cmc
sub
faddl
add
outsl
xor
push
lock
sbb
add
js
cmpsl
jl
shrl
pop
inc
addb
dec
sbbl
sub
mov
jg
pop
add
arpl
sbb
aas
mov
push
xchg
clc
rcll
call
imulb
inc
bound
mov
and
stos
pop
loop
mov
lcall
clc
cmc
push
nop
xchg
stos
lcall
push
add
mov
cwtl
sbb
movsb
out
imul
in
mov
sbb
ljmp
dec
push
fdivrp
sub
or
cmpb
add
mov
sub
andb
lcall
or
mov
fiadds
sbb
test
leave
sbb
mov
push
and
loopne
mov
movsl
add
inc
shlb
cmp
xchg
inc
stc
loope
orl
pop
aam
xor
cmc
sub
xor
insb
test
dec
mov
pop
xor
andl
sti
inc
popa
and
mov
pop
push
add
cli
mov
fadd
inc
and
sbb
and
adc
sub
add
test
ss
neg
mov
pusha
cmp
repnz
data16
pushf
mov
push
or
cmp
and
iret
clc
mov
int
mov
repz
mov
pop
pushl
or
lret
push
minps
mov
fwait
cmpsb
adc
adc
test
in
push
or
adc
lret
subl
lea
rorl
jb
jo
loop
push
ret
pushl
movsb
mov
xor
sub
hlt
adc
ret
push
shll
mov
jno
add
fiadds
enter
cld
mov
push
sbb
mov
dec
xchg
push
andb
inc
jge
in
cwtl
popa
test
push
jmp
mov
dec
xchg
mov
test
add
call
push
add
add
add
pop
gs
test
jge
push
dec
repnz
cmpsb
dec
addr16
pop
idivl
push
adc
les
cmpb
icebp
sbb
dec
clc
xor
mov
cmpsb
xchg
repnz
loopne
sub
in
shlb
mov
jo
dec
popa
repz
pusha
inc
or
mov
fsubrl
out
clc
in
test
lcall
jae
mov
out
inc
inc
pop
lock
jo
dec
adc
mov
add
pop
shlb
mov
mov
add
popa
and
pop
mov
mov
mov
mov
mov
and
dec
push
pop
and
pusha
push
bndldx
fwait
dec
sti
icebp
pop
pop
lcall
fwait
loopne
leave
and
inc
push
adc
fisttpll
pusha
sub
pop
loopne
sbb
clc
movl
hlt
fmuls
dec
jmp
mov
ret
push
inc
loope
scas
out
repz
fbld
mov
fs
roll
stos
inc
popa
fcompl
incb
insl
pop
test
sbb
mov
ds
in
cwtl
lcall
xor
mov
scas
sub
dec
orb
dec
mov
bound
pushl
lods
mov
add
cwtl
mulb
mov
mov
loop
inc
rcll
jmp
fistps
add
inc
and
mov
xchg
push
sbb
mov
jnp
nop
pop
mov
repnz
cmp
push
mov
mov
mov
mov
test
pusha
loopne
bound
xor
in
insb
lods
pop
lods
incb
addb
fisttps
insb
xor
in
push
scas
jns
stc
lcall
push
mulb
sbb
addr16
add
cmpsl
clc
inc
test
decl
movsb
daa
jl
adc
jb
and
sar
mov
jbe
xor
dec
dec
rcrl
mov
mov
push
add
test
loope
or
sbb
lcall
adc
stos
jo
mov
loope
sar
xchg
adc
jecxz
ljmp
or
push
out
xchg
add
out
shrl
sub
out
add
in
and
cmp
xchg
jecxz
loopne
mov
movsb
pop
into
mov
cmp
jecxz
sbb
add
sti
ss
fcoms
jmp
pop
hlt
xor
pop
stc
in
sti
add
jg
subl
sarb
ja
add
shl
pop
cmpsb
lds
push
stos
jmp
cwtl
cmpsb
add
pop
imul
addl
or
or
pusha
push
xor
xor
jmp
add
xchg
mov
cmpsl
shlb
cmp
sbb
scas
out
mov
stc
and
test
test
inc
rcrb
or
sbb
loop
push
mov
lcall
adc
pop
add
je
or
xchg
or
jecxz
cld
fstpt
stos
adc
test
clc
imull
outsb
mov
and
pushf
rcrb
and
mov
mov
test
xor
sti
or
daa
testl
adc
cmpsl
leave
xchg
fcmovbe
out
dec
xchg
sar
sbb
or
stc
lock
pop
xor
mov
out
je
cmc
mov
out
push
inc
aas
pop
and
es
pushf
push
pop
adc
mov
outsl
and
mov
into
daa
sub
xchg
shll
xor
mov
rclb
xchg
adc
sub
dec
hlt
fbstp
pop
nop
test
push
push
jno
cs
stos
orl
dec
jne
adc
add
into
push
fcmovnb
mov
enter
pop
in
es
rcll
or
shlb
mov
xchg
cmc
ljmp
mov
sbb
cltd
cmp
incl
scas
xor
jbe
fwait
xchg
jno
andl
or
xchg
add
call
add
adc
cmp
xchg
imul
cmp
inc
or
pop
hlt
inc
xor
xchg
jns
pop
fistl
loopne
xlat
adcl
js
repnz
sub
je
xchg
popa
mov
mov
jg
call
leave
lret
push
aas
dec
test
insl
add
push
ja
adc
add
int3
cmp
add
lcall
scas
push
adc
nop
outsb
shl
xlat
scas
jmp
imul
push
lea
aas
mov
imul
fsubp
jmp
inc
mov
nop
icebp
das
mov
xchg
ret
pushf
mov
in
cli
hlt
cld
xchg
jp
das
add
jb
pusha
inc
xlat
sbb
xchg
rcll
push
sahf
add
xchg
mov
cli
and
mov
popa
imul
mov
scas
xor
pop
nop
js
xchg
mov
hlt
pop
leave
adc
dec
sbb
jl
cmp
pusha
jg
add
rclb
imul
xor
scas
mov
cli
das
cld
xor
pop
cld
sbb
and
jl
jno
fnstenv
cmpsb
add
lea
lahf
popf
cmp
aas
cmp
or
shl
pop
push
faddl
mov
aam
outsl
decb
cmp
ljmp
cltd
clc
outsl
cmpb
mov
mov
mov
aam
jg
das
add
arpl
stos
jle
mov
and
mov
jle
cmp
lcall
dec
add
xchg
arpl
dec
aas
pop
push
mov
add
fdivr
lods
hlt
cmp
jecxz
jmp
cmp
mov
das
andb
jmp
xchg
negb
mov
ss
add
test
popa
add
or
jb
clc
jge
jo
xchg
xchg
outsb
cmp
incl
or
cli
xchg
add
pop
jns
fcoms
imul
js
outsb
sahf
and
roll
dec
lea
das
les
and
subb
cmp
and
jnp
dec
mov
adc
mov
sbb
int3
cmc
lods
lea
sti
test
mov
push
insb
adc
in
fdivr
mov
aad
test
sub
cli
daa
cwtl
pusha
cmpb
shrl
jl
into
loope
loopne
sti
sarl
movsb
push
xchg
mov
mov
add
rorb
xor
imul
int3
sbbb
loope
mov
cmpsb
adc
loope
lds
sbb
repz
es
fs
mov
es
and
aaa
orl
enter
fwait
scas
lds
adc
cmpsl
dec
ja
fstpl
clc
push
xor
scas
jp
mov
shl
ja
inc
ficompl
stos
test
cmp
icebp
jge
jo
mov
or
outsl
shlb
aas
mov
inc
dec
ds
test
push
movsb
mov
sub
pusha
ret
fiaddl
push
push
in
pop
or
jmp
add
mov
mov
repnz
repnz
adc
adc
ret
push
lahf
sbb
test
or
xor
jl
shl
sub
cld
xor
out
pusha
fsubrl
lret
mov
push
mov
cld
jbe
lods
sbb
push
pop
mov
jg
repz
xchg
loop
cmp
loop
mov
and
xor
pusha
inc
xor
lret
fwait
jbe
popa
imull
jo
inc
fiadds
mov
dec
xor
mov
mov
push
test
pop
jo
pop
sahf
mov
inc
jmp
mov
sub
dec
mov
add
jg
stc
sub
xchg
sub
decl
sti
fbld
dec
mov
test
pop
add
ss
je
fs
add
pop
std
add
xchg
test
adc
aam
mov
or
movsl
xchg
xchg
or
mov
je
lahf
sarb
add
inc
rolb
in
out
cli
es
flds
xchg
mov
xchg
pop
adc
xchg
loope
sbbb
mov
mov
js
loopne
pop
or
xchg
int3
add
nop
push
or
movsl
call
sub
movsb
daa
dec
arpl
sub
decl
fcomip
or
imul
jmp
fldt
rclb
addr16
jge
cmpsb
ds
or
test
pusha
push
int
mov
add
pushf
adc
dec
push
adc
fcomps
mov
ljmp
xor
loopne
xchg
mov
mov
sbb
add
inc
cltd
sub
dec
mov
xor
mov
adc
nop
loopne
pop
roll
pushf
out
mov
jo
mov
mov
push
lret
xchg
andl
sub
neg
cmpsb
stos
ss
cmp
pusha
rcll
pop
outsl
fidivs
xor
lcall
inc
loope
inc
roll
cmpsb
dec
and
sarl
jecxz
cld
nop
and
pop
mov
stos
fs
mov
mov
fidivl
or
jnp
mov
xchg
add
xchg
rorb
ret
scas
clc
bound
jp
mov
ljmp
in
xchg
fucom
dec
xlat
scas
push
mov
inc
ds
cwtl
outsl
cmp
clc
clc
inc
sub
lcall
xchg
hlt
ss
inc
nop
addr16
in
gs
insb
sar
xchg
incl
rorb
je
and
in
or
xor
pushl
and
cmp
clc
mov
mov
push
push
adc
jp
ret
push
sbb
push
adc
dec
rcrb
fisubl
cmp
and
add
push
mov
xor
fsts
or
push
jge
or
mov
scas
adc
jmp
sahf
or
cmp
sub
add
xor
cmp
xchg
das
inc
out
push
push
sbbb
cmp
ds
fldt
movsl
movsb
fs
add
pop
push
and
xchg
ljmp
or
sarb
sti
push
loopne
dec
cmpl
jg
dec
push
sub
fs
or
xorb
adc
lcall
add
imul
adc
les
loop
cli
hlt
push
ss
in
pop
push
cs
add
jo
shrb
jno
jbe
repz
dec
subl
cld
inc
outsb
in
jns
lock
mov
cli
loopne
int3
xor
xor
fdivp
aad
xchg
rolb
nop
sbb
pop
hlt
data16
scas
cwtl
push
jbe
in
xor
dec
fwait
ds
adc
push
and
call
std
sub
xchg
push
adc
jo
sbb
adc
add
lds
sar
icebp
inc
and
add
imul
mov
insl
addr16
cli
or
push
test
mov
lds
cmp
repz
pop
push
sub
mov
aam
sub
pop
mov
add
adc
or
mov
xchg
cmp
lods
das
loop
sbb
nop
scas
ljmp
test
mov
mov
scas
shll
int
add
dec
addr16
pushl
mov
push
cmp
inc
testb
inc
inc
loopne
mov
mov
or
mov
stc
inc
pop
subl
pop
int
pop
dec
aad
push
adcl
stos
cmc
add
pop
add
sarb
push
mov
sbb
mov
inc
ret
mov
enter
loope
ja
jmp
sub
jg
mov
andb
arpl
stos
mov
fcoms
add
rorb
mov
ret
cmpsb
mov
clc
mov
sub
leave
xchg
dec
inc
addb
cwtl
adcb
jl
lcall
jge
lcall
sahf
xor
inc
pop
mov
pushf
sub
adc
sarl
dec
shll
inc
and
pop
xor
mov
out
fs
inc
movsb
fldl
xchg
lahf
adc
pop
push
enter
add
jnp
xchg
cld
mov
xchg
add
push
push
xor
xchg
lds
mov
movsb
inc
xchg
out
inc
mov
push
mov
or
sub
push
fwait
subl
xor
negb
cli
rcll
pop
jmp
rorb
or
test
int
push
mov
cwtl
ss
popa
loope
xor
call
incb
jp
jns
outsl
ss
incl
fucomi
push
test
add
sbb
add
movsl
cmp
push
fdiv
out
jo
sub
or
inc
mov
fs
loope
ret
pop
sbb
andb
push
jo
mov
cld
adc
stos
inc
xor
push
adc
push
fs
incl
lret
cmp
inc
xor
pop
push
lods
pop
push
mov
lock
mov
cmp
mov
ljmp
mov
imul
xchg
lock
xchg
out
stos
and
pop
cmp
add
mov
ljmp
movl
push
mov
popf
inc
cmp
test
cli
adc
add
mov
lea
pop
adc
aad
push
dec
call
loop
lock
ret
mov
adc
jmp
jle
add
cmp
and
cmp
leave
das
nop
xchg
sub
jg
subb
jg
pop
sahf
mov
flds
or
push
pop
or
stos
lods
rolb
push
inc
mov
xor
jbe
or
jo
ljmp
mov
mov
xchg
and
push
int3
sbb
xor
sahf
cmc
ss
test
out
mov
cmp
jne
popf
xor
push
xor
rcrb
mov
inc
push
sbb
cmp
nop
pop
fs
xchg
inc
sub
mov
add
roll
mov
push
add
fimuls
or
sarl
dec
mov
out
inc
into
cwtl
push
pop
jle
cmpsl
pop
shll
cmc
add
rcrb
fincstp
push
test
movsb
mov
add
sbb
pushf
es
xchg
decl
out
add
push
leave
mov
mov
imul
jecxz
ljmp
jmp
test
call
jge
fnstsw
fiaddl
test
cmpsl
js
or
add
jns
or
push
lods
lds
sbbb
xchg
mov
call
addr16
mov
jbe
or
repnz
js
imul
adc
jbe
incl
dec
mov
cli
push
xor
push
out
adc
cmp
sub
les
cmp
xchg
in
aad
adcb
loop
sub
sti
adcb
psllq
jo
and
inc
add
lcall
push
test
mov
jne
outsl
mov
or
movsl
aaa
inc
arpl
or
cli
dec
clc
fisttps
rcl
fwait
imul
add
imul
jge
ja
ss
xor
pop
mov
or
fsts
mov
push
mov
xchg
fs
mov
test
xor
cmp
pushl
push
push
xchg
jo
mov
out
ret
inc
test
insb
lret
cmpl
mov
lret
insl
push
mov
push
adc
cmp
cs
aas
push
xor
sub
jg
cmp
mov
mov
nop
ljmp
dec
lahf
pop
call
fs
mov
mov
rcl
add
adc
fs
dec
sub
push
fmull
pop
testb
xorl
cld
add
add
add
cli
out
push
in
sahf
insb
add
sub
fistl
subb
mov
sti
inc
or
sbb
rorl
add
inc
data16
daa
sub
icebp
or
ljmp
push
pusha
xchg
mov
add
cli
xlat
fwait
hlt
ja
push
test
lret
movsl
mov
call
add
dec
outsl
inc
mov
test
popa
push
dec
mov
mov
and
mov
mov
sub
mov
js
add
adc
loope
adc
mov
cli
jg
sub
loop
out
adc
pop
and
arpl
mov
xor
fdiv
imulb
fidivs
adc
jg
dec
jnp
bound
and
mov
inc
push
inc
inc
icebp
aad
dec
stos
dec
cli
adc
push
std
adc
pusha
mov
out
aad
rcll
loop
aaa
aas
mull
mov
sub
fstpt
ffree
inc
add
in
jnp
add
stc
loopne
push
dec
std
push
stos
clc
cmp
and
sub
cmp
jb
xor
add
push
or
sub
push
lock
incl
or
add
enter
lods
aad
sbb
sbb
inc
xchg
pop
loopne
loope
jo
dec
jmp
lock
scas
icebp
call
ss
adc
pushl
lret
dec
and
inc
clc
mov
das
mov
out
cmpl
cmp
adc
sahf
das
fistpll
push
sbb
xor
leave
adc
pushl
jmp
jnp
pop
dec
xchg
cli
jge
lods
loopne
cmp
js
pop
adc
ficomps
int
pop
jg
push
mov
fistpl
aas
rol
in
add
mov
adc
in
lock
ret
mov
and
jmp
mov
mov
rorb
lret
cs
push
sub
xchg
pop
push
shl
xchg
dec
insl
push
xor
fwait
repz
cmp
dec
fisttpll
cld
add
sub
cmp
jmp
sbb
xchg
push
adc
cltd
push
or
pop
insb
dec
xchg
xchg
xchg
pop
pusha
stos
sub
out
jbe
stc
lret
imul
cmp
jno
pop
cmp
les
pop
cmp
pop
xchg
in
or
js
and
hlt
aam
xor
mov
jg
decb
pop
fbld
arpl
inc
cmp
mov
add
jo
and
fdecstp
xor
lcall
mov
cs
inc
mov
leave
andl
fcompl
dec
jb
rclb
cmp
cmp
out
aad
jl
fwait
lcall
push
daa
fwait
add
inc
add
mov
sbb
and
mov
cmp
or
or
add
js
ljmp
data16
jae
add
pop
imul
xorl
mov
fcom
icebp
idivb
pop
sbb
sub
lea
cmp
push
in
cmpsb
aad
fwait
pop
cmp
push
add
mov
repnz
dec
ljmp
lock
movsb
cltd
test
fsubl
add
add
add
loopne
ror
inc
jp
cmp
jle
pop
roll
mov
aas
cmp
xchg
iret
push
inc
sti
add
mov
cmp
cmp
rorl
sbb
pop
pushf
sub
add
adc
push
fdivrl
add
cmp
decl
xchg
in
out
dec
push
lret
fnsave
popl
add
add
sbb
scas
mov
mov
imul
out
rorb
xchg
mov
inc
mov
gs
jno
dec
or
sbb
nop
fldenv
lods
add
mov
push
hlt
lcall
mov
sub
hlt
lods
or
push
xor
in
sub
sub
mov
lcall
test
push
fwait
sbb
mov
push
or
jecxz
adcb
negl
clc
mov
pop
dec
or
fisubs
clc
ds
mov
jle
mov
add
lock
icebp
into
inc
arpl
pop
adc
sub
or
xlat
mov
dec
rcrb
fcmovbe
mov
xlat
filds
jb
hlt
dec
xor
sbbb
jne
ds
xchg
loopne
push
or
sbb
imul
cmpsb
cmp
sub
dec
mov
enter
enter
test
adc
inc
adc
dec
fadd
adc
inc
sbb
add
adc
int3
or
sub
or
sub
int3
dec
push
xchg
ret
or
mov
xchg
mov
out
ret
sub
cmp
cld
lcall
mov
mov
sbb
inc
mov
pop
jg
pushl
out
or
test
sbb
fcoml
push
hlt
shl
cmpsl
or
mov
inc
pop
cld
lcall
movsl
push
pushf
aam
lcall
repnz
lfs
mov
adc
fs
fmuls
sub
xor
stos
ljmp
xchg
push
sbb
mov
pop
in
pop
bound
sub
pop
dec
inc
rolb
xor
adc
hlt
cld
jg
push
aas
test
test
xchg
or
sub
ja
je
cmp
xor
notl
mov
push
xchg
lock
jns
adcl
aad
leave
xchg
mov
cld
and
and
mov
push
jns
aad
ret
in
add
sbb
cltd
and
inc
icebp
stos
push
xchg
xor
mov
mov
push
or
jg
rolb
inc
push
ficompl
int3
push
test
enter
std
adc
or
inc
neg
push
jmp
sbb
dec
jo
inc
dec
mov
cmc
pop
call
mov
cmpsb
add
pop
push
or
lcall
push
icebp
aas
pushf
adc
push
pusha
je
aas
adc
or
cli
lds
fiadds
sbb
test
mov
lock
inc
xor
adc
mov
pop
lret
inc
xchg
nop
and
test
mov
repnz
sbb
lds
mov
into
sub
xchg
inc
shll
fs
dec
inc
xchg
clc
mov
mov
outsl
aad
add
sub
incl
repnz
fistps
xor
ss
mov
sub
out
sub
nop
es
pusha
inc
pop
lock
mov
addr16
inc
add
sbb
mov
ss
js
cmp
sarl
cld
lods
nop
stos
xor
and
bound
ret
cwtl
push
and
sbb
add
dec
cld
fisttps
mov
outsb
pop
add
and
mov
lea
add
loop
mov
jle
cmp
arpl
inc
jno
call
sub
aam
push
sbb
fidivrl
inc
adc
xchg
aam
outsl
es
push
mov
mov
sub
incl
test
ds
cld
cwtl
jns
mov
dec
mov
dec
add
mov
pop
pop
mov
xor
stc
or
and
sub
shl
jbe
jbe
call
call
mov
push
pushf
inc
ret
sbb
rolb
lret
push
push
or
stc
xchg
sbb
out
test
mov
sub
ja
rclb
lods
decb
pushw
mov
xchg
mov
fbld
cwtl
push
push
paddd
je
xor
jl
add
in
scas
cli
sbb
push
aaa
mov
add
aas
aam
roll
fisubrs
sbb
arpl
ss
nop
loopne,pn
dec
test
stos
incl
cli
cwtl
loopne
ficoml
add
ds
jb
decl
ja
push
adc
and
subl
pusha
jl
mov
stos
or
add
add
les
xchg
mov
call
fstl
ret
mov
push
add
sub
push
enter
das
pop
js,pn
cli
and
in
arpl
xchg
push
jnp
inc
jmp
push
xor
jg
and
cld
incl
sahf
leave
jae
das
cmp
inc
mov
sti
hlt
and
fisttpl
push
outsb
loopne
and
mov
repnz
jno
enter
pop
xchg
or
cli
xchg
das
or
mov
mov
ret
insb
adc
ficomps
scas
jg
lea
nop
test
fldt
push
popf
add
inc
lods
cmp
lods
jno
sbbb
popa
xor
or
push
fldl
xchg
enter
mov
imul
mov
mov
cld
xor
or
jns
in
and
pushl
stos
imul
mov
mov
dec
cwtl
add
inc
mov
and
push
mov
push
mov
inc
or
and
imul
in
dec
adc
out
cli
add
fwait
mov
mov
sbb
mov
addb
dec
mov
jo
xchg
pop
push
jge
mov
incl
pop
scas
mov
and
in
cld
sbb
mov
pop
mov
add
movsl
inc
pushf
add
dec
std
outsl
clc
mov
popf
sbbl
adc
xchg
fs
jecxz
pusha
mov
js
inc
mov
rorb
loope
mov
clc
data16
addb
mov
je
scas
adc
pop
dec
dec
mov
cld
and
stc
add
push
sahf
mov
pop
pop
lea
push
lret
loopne
or
or
inc
sarb
stos
xchg
adc
addb
add
ljmp
jae
loopne
lods
enter
out
sbb
jp
pop
arpl
lret
cmpsb
lcall
in
inc
xor
inc
data16
or
add
mov
inc
out
fmuls
cli
add
lock
cmp
or
pop
popa
pop
lock
adc
outsl
decl
dec
adc
mov
mov
xor
sarl
sbb
mov
call
xchg
cmp
aaa
in
jmp
fcompl
lret
dec
sub
pop
outsl
scas
js
outsb
sbb
push
mov
or
mov
inc
out
std
leave
movsb
imul
inc
loop
bound
repnz
sbb
cmp
or
dec
scas
xor
mov
test
ja
mov
xor
mov
mov
sbb
adc
jb
xchg
xor
std
sbb
mov
andb
push
bound
jnp
mov
cmpsb
pop
xorb
adc
sbb
ljmp
fs
mov
sahf
shlb
iret
int3
cmpsl
inc
or
ss
lcall
push
stc
cs
mov
inc
ret
jae
or
cmp
cmp
or
xor
testl
jb
out
push
mov
arpl
leave
xor
popa
and
test
jle
subl
sub
loop
inc
mov
xor
sbb
and
jae
push
cld
or
cld
pop
imul
cmp
mov
sbb
fbld
je
test
xchg
and
cmp
adc
and
mov
mov
or
mov
lret
add
ret
mov
test
lods
stos
jmp
xor
dec
aad
pop
xchg
mov
mov
cmp
push
mov
xchg
adc
pop
and
push
mov
into
dec
test
or
out
lods
adc
stc
pop
ficomps
jge
ds
cmp
pusha
icebp
out
add
fisttpll
cs
inc
sbb
xchg
pop
daa
pop
cmp
and
cmp
imul
pop
cli
testl
ret
clc
lock
jecxz
xchg
cmpb
hlt
fcoml
push
xor
sub
mov
clc
push
pop
inc
jns
cli
mov
out
js
inc
mov
inc
hlt
stos
mov
add
sub
hlt
mov
aam
dec
jle
xchg
push
ljmp
pop
dec
push
mov
and
xor
adc
jg
mov
repnz
lods
adc
ret
ss
jnp
and
jg
add
nop
iret
inc
ret
fbstp
stos
sub
jo
mov
jo
lret
addb
sub
enter
lcall
xor
roll
xchg
jg
push
jmp
lock
test
mov
js
cmp
mov
scas
fcomip
dec
xchg
rorl
mov
or
dec
insb
inc
shlb
fmuls
adcl
repnz
xchg
sahf
shlb
js
lock
xor
adc
fcoms
mov
add
movsb
sbb
fdiv
jg
movsb
adc
push
sub
add
mov
pop
sbb
dec
push
xlat
leave
jmp
cmpl
movsl
jnp
decl
ret
lds
push
fadd
scas
addl
inc
sub
js
dec
fildl
sahf
loop
add
add
jl
inc
inc
and
sbb
mov
icebp
insb
lock
jbe
sub
notb
imul
and
add
cwtl
xor
push
aas
aam
cmp
xor
negb
cltd
xchg
repz
repnz
and
fidivs
fadds
add
cs
sbbl
movsl
sbb
push
push
push
mov
bound
mov
mov
xorb
lret
and
enter
rclw
ljmp
pusha
dec
mov
cmp
sbb
jne
call
mov
lock
ljmp
shlb
xlat
inc
fs
xchg
cs
idivb
or
inc
cmp
adc
mov
stos
stos
mov
lret
add
jecxz
cmpsb
sbb
das
jb
cmp
popf
shlb
adc
add
mov
cld
push
xorb
jo
cmp
sub
and
jbe
cltd
loopne
xor
dec
enter
dec
mov
daa
add
rcrb
cmp
shlb
xchg
push
mov
dec
and
outsl
inc
pop
push
popa
push
fdivrs
mov
add
mov
mov
mov
sub
icebp
mov
aam
nop
xchg
sbb
inc
jae
fidivrl
xor
sbb
sub
rol
mov
sar
enter
movb
sbb
or
lods
inc
mov
cmp
inc
imul
pop
imul
mul
lods
jle
xchg
push
sti
or
xor
push
adc
mov
enter
sub
shlb
mov
and
in
ret
stos
dec
xchg
shlb
cwtl
push
cli
xchg
push
pop
loope
mov
stos
std
adc
mov
xabort
mov
push
clc
add
cmp
andb
jecxz
or
mov
push
dec
lods
aam
lcall
ss
mov
rcrl
and
mov
aam
das
push
and
xor
mov
sub
cmp
sub
roll
inc
andl
rcrb
add
arpl
adc
call
outsl
ja
xor
sbb
cli
jecxz
mov
movsl
mov
xchg
es
fistps
sahf
xchg
sbb
add
push
roll
fidivs
sbb
sub
outsl
mov
aas
mov
xor
jb
cmpsl
push
in
lock
fs
shlb
sbb
jno
adc
shrl
adc
adc
fists
jg
push
jns
ret
cmc
xchg
and
or
mov
test
sbb
mov
xlat
sarb
aas
repnz
shll
ret
sub
cs
jb
lret
push
mov
jo
pushf
into
jns
or
xchg
push
mov
push
push
stos
push
cld
cli
incl
dec
adc
lret
test
adc
adc
cld
movsb
ss
pop
es
shll
jg
sbbb
int
jge
loopne
cmp
xchg
lds
ss
push
mov
incl
mov
push
pop
fwait
cs
cld
ja
push
mov
inc
add
push
mov
call
rcll
movsl
push
aam
ss
sti
jg
hlt
clc
fstps
add
ds
std
arpl
imul
leave
rorb
jg
pop
adc
jmp
adc
out
inc
push
mov
push
mov
es
mov
mov
jl
sub
push
orl
je
sarb
imul
xchg
iret
and
xor
jnp
mov
icebp
test
mov
mov
mov
es
stos
mov
stc
and
in
clc
sub
dec
add
in
adc
push
add
mov
pop
mov
jg
cld
mov
iret
xor
mov
jg
aaa
adc
mov
outsl
stc
xchg
test
add
push
aas
add
sarl
je
int3
scas
cli
cmpsb
ljmp
mov
bound
ljmp
ror
inc
call
mov
js
adc
out
cmpl
gs
fldenv
out
call
jo
sub
adc
sbb
jecxz
outsl
data16
add
pop
or
lahf
xchg
jp
xor
aam
call
jb
hlt
mov
insb
fdiv
cld
or
aaa
cld
mov
loop
in
cmp
pop
cmpl
js
test
inc
mov
ja
sub
sbb
xchg
nop
es
xor
or
call
call
movsl
mov
mov
mov
adc
adc
ja
sahf
push
mov
mov
in
cmp
nop
das
mov
sar
xchg
pop
and
mov
out
sbb
mov
push
xor
or
test
in
pop
int
push
xor
mov
jp
ja
pop
repnz
gs
mov
xchg
pop
push
loop
inc
and
pushf
add
scas
loop
dec
xchg
loopne
les
stos
inc
mov
leave
into
aaa
inc
mov
cltd
xchg
dec
pusha
pushf
push
adc
add
dec
hlt
adc
and
and
aaa
idivb
test
test
add
pushl
jg
ret
mov
je
adc
jne
inc
cmp
test
lds
jns
ret
mov
cwtl
sub
scas
and
cs
outsl
sub
add
add
jecxz
movsb
jo
dec
notb
loopne
or
pushl
popf
clc
lds
rolb
popa
adc
fs
imull
xor
fists
cmc
adc
xchg
and
sub
cmp
lret
jmp
cmp
roll
movsl
aam
insb
lcall
xchg
imul
pop
adc
dec
and
and
pusha
mov
pop
mov
xchg
mov
ret
addr16
or
inc
inc
lods
ds
aaa
notl
dec
lahf
nop
scas
xchg
cmpsb
stc
adc
sub
insb
les
stos
out
and
repnz
test
jbe
adc
call
add
jnp
out
xchg
aam
mov
xchg
mov
mov
repz
jns
and
call
ss
incl
xor
jle
mov
jl,pn
icebp
clc
add
testb
loope
adc
icebp
push
cwtl
adc
fs
mov
movsl
bound
mov
insb
mov
or
hlt
xchg
hlt
std
sarb
mov
lods
cltd
inc
jnp
test
sub
dec
fsubl
daa
insb
inc
add
xchg
clc
push
sbb
orb
incl
xor
xchg
and
xchg
add
dec
pusha
mov
push
pushf
test
mov
fcoms
xor
call
mov
adcb
in
sub
mov
xchg
push
inc
or
ret
mov
pusha
shll
push
mov
jl
call
nop
pop
ret
and
nop
cld
add
push
das
add
mov
inc
mov
xor
mov
lock
jo
cltd
xor
icebp
aas
int3
test
xor
ds
loope
mov
pop
rcrl
sahf
fsubl
clc
repz
mov
out
xor
push
js
mov
out
dec
aaa
in
jne
xor
fs
mov
fwait
xchg
stos
pop
dec
es
push
sbb
or
shr
xor
push
ljmp
push
testb
dec
pop
and
push
incl
adc
test
loop
pop
data16
mov
ljmp
pop
mov
stos
push
add
sbb
add
mov
jmp
mov
aam
das
adc
test
cmpsb
push
xor
or
adc
cmp
outsl
sub
or
daa
cmp
pop
dec
adc
dec
int
lock
decl
dec
ja
pop
adc
dec
pop
sub
out
stc
lds
mov
call
sarb
aas
fimuls
mov
rcrb
imull
or
xchg
jo
jl
sti
push
sub
lcall
leave
gs
inc
pop
sub
mov
mov
sub
sbb
dec
sbb
jno
lret
jo
fsubr
call
std
cli
pop
inc
inc
inc
or
ret
mov
sbb
mov
push
ljmp
mov
pop
stos
lods
jg
cmc
leave
mov
and
pop
push
scas
clc
and
sub
sbb
inc
mov
push
xchg
test
or
jmp
jmp
addl
pushf
rol
subb
cmpsl
mov
aaa
add
cmp
dec
repnz
imull
add
cmp
mov
ret
loop
jo
sbb
xchg
jecxz
aaa
loop
pushl
pop
xlat
sbb
int3
bound
cli
add
cmp
dec
lcall
push
jo
mov
nop
jl
stos
jg
imul
inc
sbb
mov
mov
or
adc
add
xchg
jnp
inc
pop
std
cmp
mov
push
mov
mov
ds
xchg
add
rcll
mov
ds
fcoml
or
mov
bound
push
notl
push
push
in
aam
scas
jl
pop
jg
cmpsl
xlat
cmpsl
int3
in
das
cmp
sbb
jbe
push
rolb
fs
std
cli
pop
sbb
and
add
cmp
call
stos
push
ljmp
cld
fildll
insb
in
incl
pop
inc
or
into
sub
dec
clc
xlat
test
or
pop
gs
bound
fstl
mov
mov
iret
cmc
enter
adc
mov
mov
scas
lcall
rol
xchg
stos
dec
popf
or
sub
mov
dec
mov
subb
ficoms
push
sarb
bound
scas
insb
cmpsl
fisttps
or
mov
lret
insb
sub
add
int3
fsts
pop
pop
inc
sub
daa
adcl
arpl
fidivrl
rcrb
mov
movsb
clc
inc
xchg
and
shlb
fcmovnb
push
rcrb
sarb
pop
dec
pop
xchg
adc
lcall
cmp
ss
jbe
jo
movsl
call
mov
fwait
push
jmp
and
jno
das
mov
pushf
mov
sbb
mov
fs
leave
cmpl
lret
pusha
pop
push
push
lcall
cmp
or
in
fiadds
jmp
out
mov
ret
sub
ret
pop
call
push
dec
cld
jmp
push
adc
clc
add
adc
inc
decl
sub
add
ret
cmp
xchg
bound
lds
aaa
mov
popa
scas
mov
xor
push
mov
lea
test
ficompl
std
jmp
imul
mov
cmp
call
loop
sti
dec
in
mov
jl
xor
mov
inc
sbb
adc
aad
add
xchg
fcomps
popl
mov
decl
push
push
les
jbe
cmpsl
clc
xor
cwtl
or
mov
cld
repz
loope
sub
dec
test
cmp
sar
push
pushf
test
stos
inc
aaa
jne
push
push
mov
cmpsl
mov
stos
data16
xor
cmp
jo
cmp
mov
or
mov
jbe
or
cmp
mov
or
shl
sub
loop
call
fidivl
imul
or
pusha
pop
pop
clc
push
xchg
push
inc
ljmp
mov
xchg
and
dec
ret
dec
push
mov
data16
je
filds
aam
push
fidivrl
pop
mov
or
test
loop
call
pushf
movl
cld
jmp
out
cmp
xchg
jns
lea
aas
xchg
jmp
mov
mov
and
cwtl
adc
jmp
sbb
and
nop
sbb
ret
dec
lock
test
push
mov
pop
es
std
ror
ljmp
nop
or
add
clc
das
clc
shl
loop
adc
pop
xchg
push
lds
cli
add
frstor
inc
daa
inc
movsl
cmp
mov
cmp
xor
lods
sub
insb
andb
mov
or
mov
dec
outsl
add
sti
dec
shrl
std
in
imul
push
jle
outsl
push
loopne
jbe
bound
add
les
dec
sahf
sub
sbb
out
stos
xor
mov
fcomip
ljmp
into
cltd
int3
test
mov
adc
jno
pop
dec
jmp
call
cld
nop
and
push
leave
or
or
pop
push
pop
push
enter
cmpsl
adc
mov
stos
xor
lods
mov
outsl
clc
lock
cmp
maskmovq
testl
adc
mov
mov
mov
lock
and
in
push
adc
repnz
fstpl
shll
pop
adc
call
and
insl
sub
xchg
repnz
jb
in
mov
movsb
je
and
jp
cs
aaa
add
test
orl
decl
shl
mov
mov
mov
jno
jge
mov
mov
xchg
shrl
jge
loopne
shlb
nop
sbb
inc
mov
addb
cmp
sub
pushl
mov
inc
imul
call
cmp
cltd
insl
mov
mov
mov
loope
add
cmp
add
sbb
sbb
popf
dec
inc
shlb
push
xchg
adc
mov
mov
dec
sub
test
jmp
mov
and
bound
xchg
push
or
dec
divl
push
jecxz
mov
lcall
pop
sub
sub
icebp
add
loopne
stc
orl
mov
rolb
loopne
fdivrl
mov
std
aaa
iretw
pop
sub
mov
jmp
ret
arpl
ret
or
sahf
je
mov
incl
dec
clc
bound
add
clc
mov
push
push
mov
jmp
dec
dec
mov
mov
call
call
mov
jnp
cmp
imul
fwait
scas
test
notl
fwait
clc
push
outsb
push
scas
mov
adc
sub
xchg
and
sbb
and
sahf
or
scas
out
pushw
imul
mov
iret
mov
sbb
cltd
pop
je
and
add
call
push
mov
adc
lret
test
push
jg
stos
ljmp
ds
add
add
adc
filds
popa
aam
mov
cltd
cwtl
mov
popf
test
dec
negb
adc
pop
push
incl
add
pop
adc
jo
orb
add
add
mov
lock
je
jno
out
cs
cmp
cld
adc
daa
bound
sti
jp
dec
stos
sub
mov
mov
pop
pop
push
cmp
and
pop
mov
jbe
pop
or
divl
sbb
pop
push
out
push
inc
rcrl
or
mov
cwtl
out
out
in
jmp
cmp
sti
cmp
and
stos
cmpsb
gs
sbb
dec
arpl
lret
inc
cmp
xor
push
push
sbb
sahf
mov
push
push
ret
je
shlb
dec
cmpsb
data16
repz
rorl
or
rorl
xor
addr16
jbe
inc
lea
enter
int3
in
test
cltd
imul
adc
in
push
cmp
xchg
cmp
jecxz
data16
aam
pop
inc
std
and
cmp
inc
loopne
ret
jbe
jl
jp
ljmp
cmp
cmp
shll
jg
jo
add
imul
cmp
push
loop
push
cmc
or
mov
xor
rclb
xchg
push
hlt
shrl
rorb
jmp
loope
lcall
dec
dec
add
add
andb
loopne
scas
mov
mov
push
js
xlat
lods
xchg
add
ja
mov
cld
enter
pop
dec
add
adc
loop
adc
mov
pop
push
and
lds
data16
in
mov
sbb
jge
add
xchg
data16
outsb
jbe
rol
lock
ds
add
lods
in
in
xchg
mov
lods
nop
xchg
cli
ficomps
inc
call
and
sbb
sbb
lock
mov
lret
cltd
mov
testw
ja
sbb
push
mov
int
mov
pop
dec
lock
xchg
sahf
je
les
ja
mov
pop
sbb
pop
pop
js
out
subb
cld
and
adc
cli
add
mov
jmp
adc
data16
mov
cs
js
cmp
ljmp
push
loopne
loopne
adc
sub
scas
mov
and
repz
insl
incl
adc
ficoms
into
int
adc
pop
loop
push
enter
ret
cmp
push
fdivrs
and
and
sti
push
cltd
push
cmp
cs
mov
xor
jge
stos
mov
ret
pop
mov
mov
fdiv
mov
movsb
arpl
icebp
fsts
sbb
fwait
pop
inc
add
xchg
pushf
jg
in
jnp,pn
aam
sarb
cmp
xorl
cmpsl
xchg
xor
mov
enter
pop
nop
out
lahf
and
rol
jl
ljmp
cmp
fs
push
int3
xchg
jb
insb
sbb
inc
sahf
es
mov
enter
pop
repz
fnsave
iret
xor
ficoml
aas
adc
jmp
dec
sub
mov
insl
inc
pop
testl
ss
cmpsb
jmp
pop
adc
xchg
pop
add
orb
mov
sub
mov
insl
mov
adc
fists
les
cmp
les
inc
into
aaa
loop
jle
insb
or
popf
in
add
cmpsl
jecxz
jg
das
addr16
pop
in
call
add
rclb
push
add
sbb
xchg
jle
loopne
push
fildl
push
into
sbb
push
push
and
adcb
mov
xor
push
stos
fidivl
ljmp
ret
push
cld
push
sbb
or
hlt
inc
cs
sbb
push
dec
lods
data16
out
xchg
jecxz
sub
push
lds
rcl
mov
repnz
sbb
inc
push
loop
arpl
out
push
pop
pop
mov
pop
jno
mov
icebp
imul
les
mov
fbstp
pusha
sbb
faddl
push
mov
ret
xchg
std
push
test
lea
movsb
mov
dec
pop
cmpsb
bound
add
xchg
add
test
push
daa
jecxz
mov
xchg
xchg
imul
jbe
mov
xchg
aad
xchg
mov
subb
xor
icebp
push
aas
adc
loopne
cmpsl
lahf
and
clc
outsl
pop
loopne
xchg
imul
mov
addr16
push
cmpl
xchg
loop
clc
add
aaa
adc
mov
pop
lret
xchg
jo
sbb
xchg
inc
jle
aam
mov
mov
fcomip
cmc
outsl
add
faddl
cmp
and
add
insb
adc
mov
jecxz
xor
call
push
or
dec
popf
and
add
je
xchg
std
fmulp
adc
stos
pop
pusha
add
mov
mov
popf
aad
xchg
inc
dec
jns
pushl
inc
push
push
jne
aaa
mov
xchg
fdivs
shll
aam
mov
inc
mov
pusha
mov
sub
nop
adc
dec
sbb
arpl
sar
cld
sub
aas
dec
xor
cwtl
mov
loop
in
push
mov
xchg
mov
mov
add
sbbb
add
dec
cmp
pop
clc
das
in
mov
pop
or
ds
insl
add
std
dec
loopne
inc
xchg
dec
adc
push
push
ljmp
dec
add
je
cmp
or
js
push
dec
les
mov
hlt
clc
add
addl
add
adc
push
sarb
imul
fmuls
insb
adc
inc
imul
mov
shll
pop
push
bound
ss
decl
adc
jge
or
lahf
push
push
out
pop
test
inc
lahf
fucomi
add
clc
outsl
nop
sbb
mov
mov
add
mov
push
mov
fst
loope
scas
mov
test
mov
sbb
les
add
ljmp
pop
push
dec
push
test
inc
sub
sub
cmp
stc
pop
pop
jne
push
sbb
dec
fildl
pop
mov
dec
or
xchg
lock
dec
out
mov
sub
mov
pop
and
arpl
dec
sar
jp
mov
ljmp
shlb
lcall
fcmovnbe
das
fiadds
cmp
push
xchg
pushf
add
mov
mov
xor
dec
pushf
sub
or
bound
icebp
lcall
jbe
inc
push
cmp
out
jle
loopne
popa
inc
adc
mov
in
xchg
inc
xor
sub
mov
repz
dec
imul
andb
and
lahf
mov
xor
test
xlat
cmp
sub
mov
add
mov
ds
sbb
jecxz
mov
xchg
cmc
or
cld
and
cli
nop
jns
push
mov
dec
loopne
popa
mov
xor
or
jecxz
test
test
loopne
xor
insb
daa
nop
js
aad
in
push
inc
cmp
xor
mov
mov
ret
push
bound
fwait
pop
icebp
pop
test
cmpsl
push
aam
fs
lahf
lock
mov
sbb
mov
inc
pop
adc
test
ds
dec
cmc
test
in
xlat
popf
repnz
xchg
adc
xchg
rcll
cmp
mov
mov
adc
mov
xor
mov
dec
adc
push
cmp
mov
sbb
mov
sub
jnp
js
or
or
cmpb
shl
pop
mov
cmc
data16
test
std
add
push
adcb
push
cli
call
sub
decl
add
stc
cmpsb
out
std
test
cmp
hlt
out
cld
scas
stos
iret
in
mov
and
out
pop
xchg
pop
pusha
aam
jmp
leave
sub
lea
enter
dec
cmp
push
mov
or
lock
scas
mov
sbb
mov
ror
loop
pusha
xorb
outsb
fwait
ljmp
jle
inc
ret
scas
enter
sub
and
sbb
mov
test
jp
dec
xchg
in
loop
xchg
xor
sub
mov
out
xor
mov
cs
rclb
jb
cld
loopne
mov
fadds
std
daa
add
lds
ss
adc
sbb
jl
loope
pop
jmp
loopne
jo
mov
mov
loope
fwait
xchg
shl
xor
pop
or
stos
push
int
dec
sub
test
jbe
ret
ret
sbb
std
orl
push
adc
mov
mov
cs
mov
mov
mov
sbb
add
sbb
cmp
test
xor
xchg
dec
repz
dec
pop
pop
pop
dec
add
test
sub
inc
adc
lods
outsb
xchg
aad
jmp
add
mov
mov
inc
psrlw
orb
scas
les
clc
sbb
xchg
mov
mov
cli
add
add
or
xchg
dec
bound
mov
fcomps
lods
or
in
cld
jg
int3
push
mov
mov
imul
jb
xchg
inc
inc
cmpsl
pop
faddp
popf
cmpsl
pop
adc
jo
push
decb
mov
aam
add
movsb
inc
xchg
ds
ficompl
loop
push
cli
fdivrs
mov
xor
adc
movsb
push
push
pop
sbb
jg
add
pushf
nop
sub
jb
adc
mov
xchg
lock
call
test
mov
lret
push
loopne
mov
aam
cld
mov
dec
in
jg
mov
icebp
popf
xchg
scas
ss
mov
clc
sub
mov
mulb
fstpl
aad
pop
jb
push
push
adc
ljmp
push
into
or
fdivr
ja
mov
stos
int
dec
jb
adc
ret
movsl
enter
cmp
lock
pop
je
add
add
sub
jg
jno
repnz
push
test
adc
push
adc
or
xlat
adc
inc
dec
test
sahf
adc
into
jle
repz
xor
or
push
add
in
es
inc
sbb
inc
pop
mul
call
stos
mov
inc
add
clc
gs
xchg
mov
xchg
ret
cmp
out
stos
inc
bound
mov
movsl
xor
mov
hlt
test
test
xor
jmp
lahf
add
pop
jecxz
xchg
or
ret
sti
out
test
ljmp
cmp
sbb
mov
sti
loopne
shrb
movsb
push
push
or
cmp
add
movsb
mov
mov
lret
push
enter
adcb
test
into
fisttps
xor
xchg
in
push
dec
add
repnz
call
and
add
es
test
or
repz
xor
jae
test
call
iret
mov
out
fstl
clc
dec
fwait
lock
mov
mov
adc
testl
lods
push
loop
rclb
cli
adc
cli
les
scas
ret
jl
subb
add
mov
dec
push
in
xchg
and
push
cld
add
outsl
mov
lods
sub
or
loope
push
bound
inc
pop
push
faddl
jne
call
shlb
sub
push
adc
sti
cmc
inc
xchg
loopne
jnp
ficompl
xchg
mov
dec
dec
pop
in
scas
mov
push
jge
pop
dec
mov
jmp
sub
lret
nop
pop
adc
mov
sbb
movsb
testb
leave
cld
aaa
insb
jbe
push
sub
dec
iret
cmp
imul
aad
call
push
int3
subb
cmp
fiadds
sar
sub
dec
ljmp
push
mov
adc
jmp
mov
push
jno
and
cli
int
pop
push
les
mov
pop
inc
and
jge
adc
jbe
shrb
fmuls
sbb
sbb
sahf
pop
lret
adc
or
cld
cwtl
dec
sbb
scas
cwtl
mov
out
nop
sbb
inc
add
popa
cli
or
imul
xlat
xchg
testb
xor
lret
outsl
jecxz
stos
mov
sti
inc
inc
lahf
inc
cmp
add
jo
mov
ret
adcb
das
fiaddl
data16
jo
or
dec
aas
add
fisubrs
es
push
ret
cmp
inc
aad
cmp
ja
pop
pusha
and
ret
push
lret
cmpsl
inc
ret
mov
ret
xchg
inc
xor
inc
jecxz
xor
add
mov
insb
add
and
push
inc
shl
mov
sbb
orb
jmp
addr16
xchg
push
cld
add
test
push
icebp
shlb
mov
mov
push
fs
fimull
mov
push
mov
mov
xor
and
mov
or
syscall
push
fldenv
xor
jne
xchg
loope
adc
addb
ja
clc
or
rorb
sub
adc
cwtl
mov
orl
lods
sahf
mov
cmp
jnp
xchg
jmp
rcrb
imul
mov
clc
mov
add
lock
pusha
into
je
sti
inc
sub
push
or
fsubr
mov
out
adc
jp
and
mov
icebp
loop
into
push
sbb
outsb
push
clc
xchg
push
jns
push
mov
adc
push
lock
mov
rclb
xor
cwtl
mov
aaa
mov
jl
mov
dec
inc
xchg
lea
mov
jmp
and
add
adc
ficomps
mov
sub
lret
stos
fldt
or
stc
adc
insb
mov
imul
mulb
aad
pop
sbb
add
test
add
scas
imul
inc
adc
xor
incl
pop
vfrczss
push
and
fdivrs
imul
cmp
aas
inc
or
adc
dec
jne
cmp
std
cli
into
add
jg
aas
pop
rorl
test
push
sub
xor
and
in
sub
outsb
sub
mov
inc
lock
cmpsl
and
mov
inc
cmp
sub
testl
scas
xor
fistpll
aad
mov
loope
pushl
push
and
jmp
dec
notb
loop
repnz
or
sbb
mul
popa
or
jg
inc
add
test
outsl
rclb
mov
inc
add
mov
and
cmc
popf
push
test
push
lret
sbb
fstpt
and
pop
dec
mov
adc
add
mov
jne
mov
test
jg
add
pop
clts
loopne
jns
hlt
aam
add
mov
mov
dec
or
pop
or
and
lret
insl
sub
push
adc
adc
pop
paddd
aam
push
lods
mov
test
push
rorb
inc
cltd
es
jne
fwait
out
icebp
es
mov
xor
dec
push
adcb
js
sub
mov
scas
add
lcall
leave
in
xchg
xchg
push
daa
enter
inc
neg
shr
clc
repz
out
jo
mov
mov
ss
xchg
repnz
jbe
test
jl
pop
sub
outsl
fidivl
and
push
mov
icebp
pop
or
cmpsb
ljmp
sbb
fstpl
inc
pop
fiaddl
push
int
sahf
or
push
xor
sub
xchg
or
pop
mov
ret
dec
test
add
jbe
inc
jecxz
rcrl
push
sub
jbe
mov
stos
lcall
repnz
nop
nop
insb
inc
decb
lahf
dec
imul
das
imul
mov
incl
cwtl
dec
add
imul
data16
loope
adc
push
fiaddl
or
test
sbb
push
mov
mov
dec
jg
xlat
add
pushl
bndstx
movsb
push
lods
loopne
aam
shrl
cwtl
rolb
cli
push
aaa
ret
mov
psubd
adc
mov
inc
ljmp
je
push
xlat
f2xm1
sub
jno
std
pop
punpckhdq
mov
sbb
stos
sbb
mov
int3
adc
push
jbe
xchg
xchg
js
call
xchg
and
jl
dec
leave
out
shl
xchg
lea
stos
data16
jmp
test
jp
out
mov
shlb
inc
daa
aad
in
inc
or
lods
in
fmull
cmp
sub
filds
xchg
int3
test
add
negl
xor
jb,pn
lret
int
sbb
adc
fs
adc
mov
sub
sahf
add
pushl
sub
fidivrs
mov
sbb
jmp
loopne
mov
or
mov
insl
or
test
inc
pop
loope
cmpsb
arpl
and
daa
xor
lea
pop
les
movsb
lds
into
xchg
es
xchg
inc
stos
xchg
jo
adc
in
aas
lcall
lock
dec
mov
rcr
ljmp
fs
push
add
add
push
xchg
dec
leave
pop
cld
jecxz
sar
in
push
out
jmp
mov
inc
xor
cmp
loope
mov
fiaddl
xchg
push
cli
mov
add
or
or
testb
dec
jge
data16
pop
jo
mov
and
inc
clc
push
outsb
jae
sub
adc
pop
js
sar
dec
mov
mov
mov
mov
mov
push
or
push
hlt
mov
lret
push
loopne
and
push
ret
cld
mov
in
fisttpl
es
or
pop
mov
add
sub
iret
adc
cmp
ljmp
clc
and
je
cmpsl
dec
sahf
lret
dec
fs
inc
ja
incl
push
mov
popf
imul
addr16
jecxz
lcall
sub
fdivl
adc
sbbl
test
orb
int3
vandps
jg
mov
adc
hlt
push
cwtl
mov
mov
es
mov
stos
mov
dec
ja
cmp
dec
incb
fsts
add
mov
test
push
daa
les
sub
inc
adc
std
jg
inc
add
and
add
add
rorb
mov
mov
mov
or
cmpsl
ja
mov
sub
test
call
inc
testb
das
or
sub
mov
call
std
decl
fs
ror
cmp
fwait
pop
lcall
inc
or
mov
sarb
xor
cltd
ljmp
mov
cmp
faddl
cmp
jno
xchg
mov
pushf
idivl
out
adc
movups
mov
mov
xchg
scas
js
lock
jecxz
mov
pop
mov
xchg
xlat
mov
lcall
pop
sbb
je
sub
xlat
push
jp
sub
shlb
in
and
cs
clc
movsl
ljmp
inc
sbb
push
repz
sub
fs
jle
shrb
inc
mov
push
dec
add
xor
mov
add
test
jg
gs
call
ss
mov
ja
add
push
push
je
cli
call
push
sub
add
jo
mov
cs
jge
adc
popf
mov
mov
pop
push
and
out
lock
iret
das
clc
ja
mov
adc
and
sbb
pop
test
add
pop
rcrl
loop
dec
aas
pop
push
mov
xchg
lcall
mov
insl
mov
inc
xchg
push
cmp
pop
cli
mov
mov
sbb
push
dec
in
add
lcall
popa
sbb
and
imulb
jg
and
into
push
gs
insb
aam
or
ret
add
cs
jg
inc
mov
test
scas
inc
xor
pop
je
jmp
je
loopne
fsubl
jg
pushf
xor
xor
mov
xor
push
fadds
lret
mov
pusha
push
push
invd
popa
test
xchg
add
dec
sub
mov
cmp
es
sub
cmp
mov
inc
push
xor
repnz
rcrb
popf
add
mov
ds
pop
icebp
pop
lret
fadds
ret
repz
ds
mov
lcall
sbb
mov
orl
les
jb
mov
and
loope
mov
js
pop
inc
repz
shlb
dec
les
push
xorl
aas
arpl
mov
and
xchg
and
scas
jl
decl
pop
nop
cwtl
movsb
adc
nop
lret
stos
sbb
add
js
mov
jmp
mov
adc
mov
mov
push
jno,pt
inc
leave
leave
clc
int
mov
sbb
jne
lods
add
aas
adcb
es
sbb
jg
inc
in
inc
push
xchg
or
adc
bound
cmp
jns
out
xor
int
incl
rcl
cmc
push
add
ret
jp
cmp
or
mov
addl
inc
call
sar
incl
push
add
mov
nop
mull
and
add
lret
dec
and
call
jne
and
stos
pusha
jbe
imul
lods
xchg
pop
clc
push
sbb
rcll
movhlps
test
mov
repnz
jle
aas
jp
outsl
push
push
sti
sbb
inc
sub
addr16
loopne
in
cwtl
insb
xchg
cmp
pop
push
mov
inc
sbb
cs
add
in
ret
xchg
decb
ret
cmp
dec
lods
into
je
and
adc
nop
sub
pushf
add
mov
out
insl
das
jns
xchg
pop
or
shlb
fildl
in
stos
add
dec
push
adc
push
sahf
insb
xor
add
mov
insb
add
add
cmp
sbb
test
scas
cmp
jns
je
and
arpl
mov
adc
data16
add
popl
push
or
and
and
xor
lahf
mov
mov
mov
sub
aas
ljmp
enter
movsb
pop
add
add
adc
jb
ficoml
lods
mov
xor
jle
jg
mov
inc
or
sub
call
insl
jnp
mov
cmp
aad
in
jmp
clc
movsb
shrb
sbb
mov
jbe
stos
xor
jmp
or
sbb
or
or
cmp
mov
ret
in
cmpl
jb
xor
add
or
cmpsb
cli
xor
pop
test
cld
pushl
insb
jmp
sarb
rorl
xchg
filds
jmp
out
aam
test
outsb
mov
jg
inc
xchg
lock
insl
fmuls
mov
pop
add
iret
xchg
out
xor
cmpsb
push
pop
insb
mov
or
cmpsb
push
clc
lds
mov
sbb
dec
xor
pop
pop
rcl
sbb
out
mov
pop
cwtl
or
stos
jg
decl
xlat
mov
adc
and
lock
xchg
inc
icebp
popf
jbe
call
into
and
iret
inc
shlb
out
add
arpl
and
cmp
fisttpll
dec
test
jmp
arpl
shrb
repz
adc
inc
pop
lret
enter
pop
mov
in
mov
xchg
std
ljmp
pop
or
push
cwtl
psubsb
add
cmc
push
sbb
jp
popf
mov
xchg
mov
jb
clc
xchg
in
inc
cmp
and
fists
cmpsl
call
push
xchg
xchg
sti
fs
mov
call
loopne
mov
jp
loopne
movsb
sbb
adc
pusha
in
out
adcb
add
jmp
call
or
pop
inc
inc
test
mov
and
decl
push
push
cs
cmp
lret
cmp
push
inc
xchg
pop
sahf
xorl
cmc
jl
int
inc
xor
or
xor
add
push
add
jge
add
or
fsubrs
adc
std
inc
adc
mov
ljmp
mov
bound
call
mov
mov
sbb
mov
mov
call
decl
push
cmp
xchg
push
push
popf
or
mov
js
ret
mov
es
addr16
clc
jg
mov
lret
jb
rorb
mov
push
add
ret
andl
pop
std
ja
and
outsb
or
fsubrs
dec
xor
pop
es
sbb
or
aad
push
std
mov
aas
into
mov
sbb
cmp
daa
stc
in
pop
or
xor
fiadds
xchg
adc
jl
lock
sarb
or
dec
or
inc
inc
in
jl
mov
pop
mov
into
aaa
rclb
push
sub
and
adc
fidivrs
call
mov
repz
test
sbb
lcall
loope
ret
or
adc
dec
push
xchg
xchg
icebp
cld
aam
shrb
aas
xchg
call
fs
add
enter
inc
xor
imul
pop
xor
cwtl
stc
in
ret
js
cmp
sbb
in
out
pop
push
xor
sub
add
mov
push
les
ret
fisubl
adc
dec
loopne
ds
ret
lret
mov
adc
mov
or
or
sub
sahf
enter
mov
sti
or
cwtl
test
sub
mov
mov
jb
cmp
pop
xchg
jno
dec
ds
aam
andl
loopne
inc
jge
and
sbb
jo
popa
dec
out
mov
ja
and
das
add
lock
imul
mov
sbb
mov
cmpsl
add
test
lock
sbb
dec
stc
mov
nop
sahf
xor
dec
push
outsl
inc
dec
inc
mov
loopne
shlb
test
orb
je
cltd
jbe
or
add
push
xor
sub
pop
ljmp
nop
cs
insb
cmp
and
pushf
sub
add
pop
cmp
stc
or
shrl
fists
cli
mov
mov
push
add
jl
outsl
stc
sub
scas
out
cmpsb
inc
shlb
sub
jno
sub
sub
cmc
xor
cli
inc
fisubl
push
cmp
cmp
rol
push
or
shrl
sar
cmp
iret
mov
sbb
adc
ficoms
pusha
sbb
inc
add
mov
int3
in
mov
lds
cld
es
call
jae
xchg
mov
lahf
and
push
test
xchg
jle
popa
sub
sahf
ror
push
inc
mov
pop
xchg
pop
mov
sbbl
popf
movsb
outsl
cli
mov
dec
add
or
es
std
int
aaa
into
mov
or
adc
mov
rcrl
dec
or
xor
xor
fisubs
aad
in
and
dec
cmp
jl
xchg
cmp
mov
mov
out
in
push
sbb
loopne
adc
fistl
jecxz
sbb
mov
lock
mov
dec
jno
cmp
mov
outsb
and
xchg
add
dec
addr16
jle
pop
pushf
fisubrl
mov
cmp
cmp
insb
fmull
hlt
daa
add
or
mov
orb
daa
xchg
inc
push
mov
call
mov
loop
pop
mov
jb
cmp
pushf
pushl
scas
in
add
std
faddp
pop
cmp
dec
mov
pop
clc
shl
addl
ss
inc
jge
hlt
dec
add
int3
add
dec
add
push
and
push
push
cmp
decl
inc
jmp
ret
stos
lods
push
call
push
out
lahf
jle
inc
pushf
icebp
mov
neg
pop
xchg
shrb
pop
and
test
xlat
adc
sub
repz
or
mov
cmp
lods
mov
mov
xlat
add
dec
adcb
popf
out
pop
jne
fldenv
lcall
xchg
call
f2xm1
loopne
cwtl
mov
xor
dec
shrb
or
ljmp
subb
into
sub
and
sbb
movsb
pop
nop
fs
inc
call
jg
mov
push
sbb
outsl
std
mov
xchg
pop
loop
cmp
das
mov
add
pushf
mov
mov
loope
outsl
push
add
loopne
adc
cmp
xor
ud1
loope
push
xor
mov
test
sbb
lret
enter
decl
jl
mov
stos
mov
addr16
inc
push
sbb
stos
in
inc
loopne
jecxz
sub
mov
cmp
dec
lods
lret
adc
push
adc
mov
cli
jp
pop
jl
sbb
pop
adc
jmp
loop
cmp
hlt
push
decl
cld
add
jl
pop
push
mov
test
shll
mov
lods
add
adcb
sub
mov
xor
cli
movsb
add
in
incl
mov
push
dec
lock
sahf
jecxz
clc
add
int
pop
push
lods
icebp
shlb
sbb
pop
dec
cmc
lods
lahf
cmp
dec
lret
cmp
mov
dec
cmp
sti
sub
incl
insb
xor
xchg
sbb
adc
mov
push
jno
xor
cs
add
fstpt
add
sar
jle
pop
dec
and
ds
fnstsw
xor
mov
cld
dec
jle
mov
ljmp
dec
ja
add
xchg
in
in
shrb
jmp
xor
cmp
sahf
mov
aaa
xchg
mov
add
xchg
and
shrl
mov
ljmp
mov
std
mov
shlb
adc
sbb
jno
sbb
mov
es
sub
mov
sbb
es
jl
jl
mov
clc
jne
push
add
popf
test
or
imul
hlt
pop
rolb
dec
jne
pop
mov
arpl
movl
xor
jl
pop
cmp
ja
jg
mov
jb
mov
mov
popa
pop
lock
cmp
mov
lret
clc
fs
scas
pusha
leave
pusha
pop
jecxz
adc
je
mov
cmp
mov
ror
jecxz
movsl
inc
adc
jns
cmp
fwait
inc
pop
or
adc
sbb
adc
cmp
inc
sub
les
aas
arpl
fmuls
push
jbe
pushf
lods
mov
dec
popf
dec
inc
xchg
decb
adc
adc
mov
and
mov
jmp
decl
mov
je
hlt
cld
nop
adc
in
nop
inc
adc
adcl
push
sbb
mov
das
je
mov
mov
jmp
push
es
xchg
bound
in
xchg
nop
inc
shll
fsubr
adc
push
scas
mov
xchg
inc
pusha
das
mov
jb
sbb
cmpsb
aam
mov
std
loop
mov
adc
les
sbb
into
jmp
pop
xchg
jecxz
mov
je
mov
jae
test
imul
rclb
loopne
cltd
cmc
cmp
xor
dec
xchg
mov
adc
sub
xlat
cli
pop
and
pop
adc
cmp
mov
js
cwtl
sahf
sti
data16
xchg
cli
pop
ja
push
jbe
ds
js
or
jg
add
sub
sbb
inc
mov
push
aas
aaa
ret
dec
xchg
dec
hlt
mov
jle
mov
fistpll
bound
xor
inc
xchg
pop
stos
je
jge
sbb
ret
push
das
push
xchg
jmp
jl
jp
shrd
pop
icebp
stos
mov
dec
inc
pushf
je
inc
shrl
xchg
inc
ljmpw
daa
in
lods
jbe
bound
inc
out
mov
xchg
test
mov
push
movb
fsubl
ds
cmp
dec
jp
pop
mov
dec
jecxz
sub
cmp
mov
orb
icebp
daa
push
push
and
push
sbbl
fistpll
add
dec
lcall
rolb
mov
cmp
aad
js
xchg
push
mov
cld
fbstp
negl
rclb
dec
repz
mov
mov
pop
test
xor
pusha
scas
inc
jno
push
xor
jno
lahf
scas
mov
shlb
mov
mov
mov
xor
sub
or
jmp
push
hlt
push
push
test
ret
pop
lahf
adcb
cmpsl
aad
or
xchg
pusha
jno
loopne
jg
sbb
add
sbb
stos
lock
adc
imul
fcmovnb
popa
jp
cmpsb
mov
inc
mov
mov
mov
xlat
and
jno
dec
lds
faddl
cs
dec
leave
add
jle
adc
mov
shrb
xor
push
dec
jg
in
call
cmp
dec
inc
adc
dec
sub
dec
mov
add
je
das
mov
rorb
loopne
sbb
fcomps
push
ds
and
add
jg
test
popa
sub
test
and
or
gs
cmpsb
nop
jp
loopne
sub
mov
insb
and
subb
mov
lods
repnz
jne
adc
xchg
mov
std
push
adc
inc
rorl
pop
cmpsb
add
adc
adc
pop
ret
push
mov
clc
cltd
push
cmp
pminsw
and
dec
ret
imulb
loope
push
mov
test
push
mulb
shrl
sub
mov
add
sahf
lret
dec
xlat
dec
sub
test
pop
jne
lock
es
icebp
mov
jg
mov
mov
fwait
push
push
and
daa
jmp
lock
jmp
and
lahf
pop
mov
outsl
cmp
out
mov
mov
mov
push
ja
in
add
out
repnz
fsts
xchg
push
mov
enter
scas
inc
rol
rcl
or
sbb
xlat
mov
push
bound
out
cmpb
jg
lcall
sbb
or
or
and
sub
push
add
es
jb
std
pop
stos
add
insl
mov
and
dec
cli
test
mov
and
out
dec
xlat
nop
mov
push
push
cmpl
pop
nop
int3
push
mov
cwtl
idivl
jo
pusha
push
loopne
pop
test
daa
pmulhw
and
or
mov
jecxz
lcall
adc
test
fs
adc
cli
cs
dec
ljmp
fdiv
in
inc
inc
mov
adc
mov
leave
jbe
js
cli
fucomip
inc
outsb
cmp
ror
in
dec
xchg
inc
out
inc
ljmp
std
dec
add
and
pushf
or
shll
es
mov
cli
fs
fsts
mov
jb
push
xchg
das
orl
loope
shr
add
lds
pop
cmp
jg
add
xchg
movsl
inc
push
or
sub
sub
decl
arpl
xor
test
mov
insl
mov
jns
sbb
sub
in
ret
cmpsb
addr16
add
lea
nop
xchg
loopne
hlt
xor
dec
cs
inc
xchg
popf
jge
cmpsb
lcall
sbb
cltd
mov
inc
fdiv
pushl
loope
and
sub
or
push
add
cld
pop
sbb
cmpl
or
les
push
ret
arpl
mov
pop
cmc
scas
fadds
notb
repz
sub
mov
xor
mov
inc
lahf
mov
cmp
mov
cli
sbb
stos
dec
ljmp
mov
dec
cwtl
mov
xor
das
dec
lret
adc
movsb
add
jo
filds
lds
call
shll
pop
push
call
and
add
movsb
test
ljmp
push
clc
xchg
ss
cs
adc
in
fstpt
daa
cld
stc
xchg
inc
sarl
add
inc
sbb
push
mov
cmpsb
add
jo
hlt
inc
cmp
add
cltd
or
loopne
ja
mov
jecxz
rorl
adc
mov
and
aas
cld
bound
push
loope
mov
sbb
mov
mov
lret
mov
call
sbb
inc
cmpsb
mov
pushf
repnz
cli
sub
pop
cltd
mov
add
sbb
lods
std
idiv
and
rorl
dec
add
push
fwait
sbb
push
or
cmpsb
adc
clc
xlat
pop
clc
jmp
push
js
test
add
outsb
aaa
adc
push
inc
cmc
jge
fadd
repnz
js
pop
push
mov
mov
inc
loopne
jno
mov
int3
dec
xor
and
out
clc
adc
or
add
inc
jne
cmp
outsb
mov
les
adc
cmp
scas
aas
sub
enter
icebp
and
jecxz
jae
pop
sub
dec
jo
ret
mov
xlat
aas
adc
pop
mov
xchg
dec
fstl
addr16
xchg
push
popa
sbbb
pushl
call
es
addr16
idiv
fwait
add
mov
add
rolb
daa
mov
cmp
cwtl
sbb
push
push
mov
mov
inc
gs
mov
les
loopne
in
push
push
fisubrs
filds
adc
push
adc
mov
es
cmp
adc
cli
adc
pop
xor
or
bound
sti
xor
sbb
inc
inc
cmp
test
xor
dec
inc
pop
ret
mov
mov
xlat
scas
push
leave
mov
fs
dec
pop
or
cmp
clc
sbb
loopne
pushf
test
clc
fwait
mov
cmp
and
cmp
push
or
inc
xchg
mov
int
add
scas
loopne
into
lods
js
inc
sbb
mov
fisubs
and
test
push
inc
push
push
test
inc
add
sbb
and
stc
icebp
scas
sbb
popl
xor
into
adc
sbb
aaa
sbb
std
lea
cs
stos
xchg
adc
pop
or
or
xchg
inc
data16
movsb
jo
std
add
rorl
push
cwtl
jmp
mov
js
call
jns
add
mov
pop
and
punpcklbw
push
cmpsb
mov
or
scas
cmp
inc
or
mov
gs
jle
jp
shlb
jg
lds
and
inc
cmpsl
jo
lods
into
push
lahf
call
ret
xchg
adc
dec
mov
jo
inc
shll
mov
out
cmp
int3
dec
sbb
fs
xchg
fiaddl
pop
call
in
jmp
inc
dec
imul
daa
push
rcll
sti
pop
mov
repz
push
aam
dec
inc
cmpl
mov
jp
filds
adc
leave
cmp
xchg
sbb
jge
pop
addr16
adc
outsw
stc
test
pop
imul
adc
cmp
hlt
rcll
or
mov
fistpll
jbe
out
lcall
cli
add
xor
cli
inc
mov
sarb
mov
call
jg
cmp
cmp
mov
fisubl
ds
aaa
pop
lcall
cmp
out
add
shrl
xlat
gs
mov
mov
mov
mov
rcrb
xchg
pushf
fcomip
sysenter
fadd
movsl
cmpl
push
dec
mov
add
pop
mov
pop
addr16
jb
add
lock
sar
cld
mov
out
jle
mov
pop
call
mov
enter
mov
pop
jne
call
xor
bound
test
ss
add
mov
cmc
mov
xchg
gs
hlt
add
icebp
lods
sbb
ss
aam
fwait
push
fadds
push
mov
pop
movsb
dec
push
sbb
leave
popa
add
mov
xchg
or
or
mov
test
add
mov
dec
in
pop
cmp
dec
cli
mov
sbb
and
aas
xchg
daa
mov
shl
es
cmp
jno
fs
and
cmpsb
call
nop
xchg
pop
aad
sub
outsl
cli
xchg
mov
lret
inc
xlat
bound
adc
mov
aaa
or
lock
mov
stos
popf
pop
lds
call
add
push
mov
sbb
mov
push
imul
dec
fdivrp
nop
addb
das
rclb
adc
rorl
cltd
into
xor
cli
or
sbb
outsl
outsb
and
xor
in
jbe
mov
cwtl
mov
mov
cmc
xlat
mov
aas
out
xor
jg
gs
inc
mov
mov
mov
fbld
test
inc
cmp
stc
adc
add
mov
scas
dec
cmp
test
inc
sub
or
testb
lods
cs
cld
in
sub
repz
sub
push
inc
ja
mov
sbb
mov
pop
or
cwtl
inc
bound
test
movsb
pop
shrb
sbb
clc
sbbb
xor
scas
out
jo
xor
ds
stos
push
adc
pusha
arpl
cmp
mov
and
loopne
les
imul
sbb
ljmp
push
xchg
enter
mov
xchg
shrb
jb
jno
lcall
sbb
add
or
inc
repz
es
xor
aas
mov
add
add
ret
clc
jae
stos
push
es
mov
lds
aad
stos
xchg
mov
insl
shll
sti
in
pusha
adc
add
sar
pop
fs
nop
dec
inc
popa
decb
pop
inc
inc
sub
xor
jle
fs
js
int3
push
add
in
mov
cmpb
mov
lds
adc
jmp
mov
push
and
std
add
mov
xchg
cmp
add
sub
and
dec
cld
mov
inc
ja
test
jns
xchg
popa
mov
cld
call
rorb
imul
and
call
adcb
ret
punpckhbw
push
aam
mov
push
xlat
stos
push
xchg
cmp
adc
hlt
jg
sarb
jo
loope
cli
dec
jo
jl
add
loop
add
jge
or
sbb
out
stc
int3
in
add
mov
mov
int
jb
hlt
or
clc
test
add
cli
daa
shlb
mov
aam
cmpsl
es
mov
pop
push
cli
cmp
and
add
movsb
mov
mov
jo
in
pop
icebp
lods
loop
mov
push
out
mov
mov
sub
clc
ljmp
jno
lret
sbb
add
cmpb
iret
sbb
jle
xor
lods
movsb
xor
or
adc
push
add
jmp
lods
mov
mov
dec
stos
push
dec
mov
sub
xor
ret
mov
jo
sarb
add
test
sti
mov
je
mov
daa
mulb
ljmp
lcall
cmp
cmp
adc
mov
ret
cmp
hlt
iret
xchg
add
adc
mov
jmp
imulb
or
mov
xor
scas
jecxz
cmp
cli
sbb
cli
das
jl
stc
mov
and
sbb
xor
loopne
push
mov
mov
pop
rcrl
lods
sub
ljmp
ljmp
mov
mov
pop
imull
mov
lock
jo
inc
inc
adc
rcr
pop
inc
xor
es
loopne
clc
pop
cmpsb
sub
sub
xchg
push
cmc
sub
push
stos
lds
loop
stos
pop
adc
dec
pop
rcrl
mov
or
xchg
mov
or
cld
fbstp
and
inc
inc
out
mov
xchg
push
jb
ror
sbb
fmul
dec
scas
mov
loop
add
lret
mov
add
mov
aaa
adc
fbld
xchg
cmpsl
cld
push
lcall
mov
lcall
pop
and
jge
test
ja
out
xchg
and
add
imul
mov
dec
pop
cmp
adc
add
push
push
push
out
sub
add
pop
cwtl
jl
stos
cmc
cmc
ficomps
add
bound
mov
ljmp
idivb
cmp
mov
push
mov
inc
arpl
push
jp
cmovne
dec
enter
outsl
and
insb
icebp
outsl
ljmp
and
clc
jo
push
sarl
sub
jo
sub
mov
mov
or
adc
and
xor
xchg
filds
outsl
pop
mov
inc
lods
clc
subl
jg
in
pop
mov
jbe
jle
xchg
outsb
jne
adcb
and
jnp
ljmp
adc
push
mov
sti
jge
andb
subb
sub
divb
in
mov
lods
stos
fwait
jp
dec
sti
jle
loopne
jge
inc
add
popf
je
push
jns
adc
mov
xor
mov
aaa
incb
lahf
into
pop
jo
and
dec
inc
cmp
pusha
adc
test
subb
aas
cmc
sbb
bound
lea
sahf
push
out
pop
icebp
pop
lods
or
xchg
pop
neg
add
cmpsb
push
fiaddl
xlat
and
pop
je
fadds
cmpsb
faddp
jb
fmuls
je
outsl
movsb
shl
add
lret
test
pop
mov
rcrl
jg
daa
outsb
std
xor
mov
int3
inc
sub
adc
clc
pop
sbb
gs
dec
out
insb
js
mov
fmuls
inc
push
sti
pop
stos
push
fbld
nop
jns
pop
mov
test
sar
call
loopne
or
mov
jg
ficoml
fwait
cmpsb
cmpsb
fildl
xor
pop
dec
scas
rcll
adc
or
xorl
cmc
scas
sar
cmp
add
js
push
movsb
pop
loope
orb
into
add
lcall
mov
lods
add
in
fmull
mov
mov
cld
stc
repnz
or
aas
cmp
into
sbb
dec
das
sbb
decl
jge
push
mov
or
sbb
lods
push
mov
push
in
mov
and
jo
mov
sti
mov
and
fwait
push
add
leave
sbb
in
ja
call
aad
das
push
dec
push
cmp
or
cmp
decl
ljmp
dec
pop
cwtl
insl
add
stos
mov
and
das
into
dec
cmp
stc
test
mov
add
push
out
daa
into
push
and
aad
clc
fisttpl
ds
pop
inc
sub
and
jg
dec
test
push
cmp
mov
rolb
adc
jg
and
or
cmp
xchg
orl
xchg
in
shrb
xor
lret
push
movsb
lcall
mov
mov
les
inc
mov
sbb
sti
inc
push
xchg
call
cmp
pop
imul
push
cmpsl
jbe
fisttps
add
bound
stc
and
sbb
fcomip
jle
icebp
dec
mov
es
movsb
outsb
add
pop
test
mov
scas
or
xlat
testl
ss
ret
fs
ss
and
and
mov
and
testb
mov
cmp
sub
inc
incl
pop
test
push
cmpsb
ret
and
push
pushl
xor
dec
mov
add
jge
inc
adc
jne
ljmp
push
rol
sarl
cs
cmp
lcall
or
jns
call
test
fdiv
lcall
call
sti
mov
sub
lret
je
clc
imul
lret
push
pop
mov
inc
shll
les
clc
out
into
and
and
aad
fiaddl
lcall
sti
mov
ret
jno
int
push
push
pop
add
push
add
lea
test
pushf
pop
gs
repz
mov
cwtl
bswap
xlat
sbb
sbb
scas
push
shlb
loopne
add
addb
pop
icebp
rolb
imul
cmp
xchg
mov
jmp
adc
add
inc
xorl
gs
cmp
fisubrs
cwtl
sbb
push
inc
mov
push
push
mov
inc
into
jmp
outsb
hlt
pop
adc
nop
push
mov
sub
jo
clc
dec
lret
sub
pop
mov
sbb
iret
xor
cld
scas
and
add
jge
lods
sub
addr16
daa
fwait
jl
dec
cmp
loopne
mov
in
push
mov
push
lods
lret
jmp
rorb
add
lock
dec
arpl
push
push
ljmp
hlt
xor
hlt
insb
cmp
lock
or
sbb
in
fiadds
pop
or
mov
adc
insb
test
and
cmc
outsl
sub
adc
mov
test
std
mov
pop
aam
in
push
fisttpll
orb
jmp
out
and
ja
mov
scas
rorb
xchg
jle
dec
jp
in
loope
add
ja
jno
add
sarb
mov
mov
sub
jge
cmpsl
sbb
extrq
addl
xchg
mov
call
pop
jg
loope
mov
jne
adc
fwait
cmc
or
iret
lock
push
jb
lds
inc
adc
dec
adc
lcall
in
jge
mov
dec
or
outsl
aaa
je
xor
pushf
shll
mov
jne
shl
stc
mov
cmpsb
jp
adc
sub
push
xor
mov
or
lahf
rorl
data16
sbbb
cli
jmp
arpl
cmp
inc
xchg
shl
loopne
mov
sub
or
and
repz
pop
cwtl
incb
rcrl
pop
loop
add
xchg
daa
xor
fistl
jo
adc
push
push
aad
xlat
outsb
inc
jne
add
out
cmc
dec
jle
mov
push
int3
mov
mov
test
call
push
cmp
jae
frstor
ljmp
test
dec
push
jne
jl
sbb
call
loopne
aam
fcmovb
jnp
and
or
popa
or
mov
xchg
mov
loop
dec
aaa
movd
les
push
add
pop
in
mov
sub
cli
testl
shll
adc
shll
add
push
add
push
mov
pop
test
cld
push
cmpsb
add
loopne
sub
push
adc
rorl
icebp
aas
pop
mov
scas
add
xchg
jl
movsb
in
dec
pushf
int3
test
or
push
push
push
mov
adc
fbld
mov
cmpsl
and
loop
fiaddl
in
out
pop
push
rolb
lods
and
add
aas
es
lods
sub
sbb
sbb
das
inc
lods
sarb
or
pavgb
lcall
inc
hlt
jbe
and
bound
into
and
xor
sub
mov
es
ljmp
sbb
lcall
jg
andb
and
cwtl
mov
pop
mov
out
int
mov
mov
pop
ret
pushf
inc
mov
decb
fbstp
cld
mov
fsubrl
xor
ret
popf
test
xlat
out
test
inc
push
outsb
cmc
scas
xchg
xchg
or
adc
ffreep
aas
stos
mov
cmpsl
shrl
mov
and
call
push
push
cmp
push
scas
mov
leave
inc
iret
cmc
clc
dec
jmp
lods
cmc
repz
loopne
dec
dec
adc
test
nop
scas
sub
and
sbb
mov
sti
push
jge
mov
fcomip
mov
xor
stos
iret
mov
rcrb
idivl
nop
xor
pushl
jl
outsl
inc
test
mov
lds
pushf
rorl
std
or
sub
inc
mov
add
push
push
cli
jo
mov
add
nop
popa
and
mov
sbb
mov
mov
mov
aam
clc
dec
sarb
inc
push
hlt
add
call
divb
ret
mov
aam
jae
rorl
add
pusha
ss
or
mov
sbb
lcall
mov
jbe
pop
cmpb
sbb
popf
dec
dec
nop
push
clc
jmp
es
pop
das
icebp
lds
inc
push
movsb
mov
imul
sbb
push
sbb
jg
cmp
sti
out
cmpsl
and
xor
scas
cmp
lret
add
xor
xlat
add
ficomps
xchg
xchg
cmp
stos
add
push
clc
enter
in
out
repnz
insb
mov
and
bound
inc
mov
mov
mov
ljmp
int3
ret
adc
iret
xor
push
push
int3
and
aas
pushf
or
mov
jae
adc
xchg
sbb
int
push
mov
sub
mov
loope
xchg
enter
adc
nop
pop
or
sarb
jae
mov
add
test
dec
movsb
rcrb
sbb
cmc
and
bnd
inc
dec
add
dec
loope
iret
fs
pushf
fdiv
push
xor
jne
inc
inc
or
xchg
dec
cmp
loopne
int
sbb
pop
sbb
xor
add
add
and
cmp
clc
add
fadd
jecxz
ds
push
and
cmp
nop
xor
sub
iret
scas
xchg
push
lret
and
xchg
rorb
sbb
loop
fucomip
ret
adc
mov
push
inc
adc
bound
popa
pop
push
add
test
xor
inc
mov
pop
push
cmp
mov
add
bound
in
ficomps
pop
ret
lods
jno
fldt
push
xchg
cld
sbb
lea
pop
shll
out
sarb
ss
pop
push
mov
jno
pop
pop
sti
add
lret
fisttpl
add
test
rolb
mov
sbb
ss
sbb
xor
sub
icebp
inc
push
es
aad
pop
xor
and
add
dec
add
rorb
add
sbb
clc
std
shr
or
bound
test
loopne
lds
cs
cmp
mov
nop
shlb
roll
incl
enter
insl
adc
out
das
test
ret
decl
shll
xchg
mov
fnstsw
mov
shl
xor
jg
subb
add
out
cmpb
adc
inc
outsb
xchg
in
mov
fs
push
xchg
mov
cld
jnp
adc
xor
out
scas
mov
sar
incl
jae
iret
add
jecxz
loope
sub
fsubs
jl
nop
pop
dec
add
test
das
adc
xor
imul
cwtl
in
es
mov
repz
xchg
shll
add
stos
fmul
stc
out
push
dec
call
scas
call
and
jg
movsb
push
pop
dec
push
adcl
jb
les
or
inc
xor
adc
lahf
jbe
cltd
jbe
fcomip
dec
mov
lcall
shlb
push
xchg
xor
and
fs
adc
adc
clc
aad
ret
in
mov
sarb
pop
pop
rclb
loopne
inc
push
fs
add
xchg
mov
lds
mov
inc
dec
mov
ds
outsb
mov
jb
das
add
lcall
popa
call
fstpl
dec
xchg
add
or
mov
inc
add
ret
jnp
or
jnp
add
mov
in
xchg
decl
push
and
shrl
lock
mov
push
pop
nop
push
adc
stos
sbb
cld
nop
imul
xor
push
movl
incl
dec
add
add
pushf
jo
cwtl
and
xor
jmp
xchg
inc
or
xchg
jnp
ret
add
in
neg
test
cld
inc
mov
iret
enter
ljmp
out
mov
arpl
lods
sar
add
push
pusha
push
repnz
mov
push
mov
data16
lret
popa
xor
dec
adc
outsl
out
jecxz
xchg
enter
pop
nop
cs
mov
pop
adc
jmp
or
movsl
imul
or
call
or
pop
les
jo
std
lret
xorb
lcall
cmpsl
enter
std
incl
sub
es
cmp
daa
js
les
adc
insb
sbb
imul
add
out
adc
es
push
add
pop
cmpsb
add
jle
sbb
mov
stos
cmp
pop
insl
xchg
cmp
jg
sub
jmp
int3
or
and
in
jg
or
stos
sbb
pop
cltd
popa
sbb
out
mov
jp
or
sbb
dec
cmp
lret
jb
jl
mov
es
push
xchg
loope
sub
ret
popa
in
cwtl
lock
in
adc
clc
int3
fstps
mov
or
or
sub
and
into
loope
addl
mov
out
je
add
insb
int3
icebp
xchg
cmpsl
or
push
xor
es
xor
or
push
xor
loop
lcall
test
aad
nop
mov
jle
aad
arpl
and
adc
inc
adc
inc
mov
int
dec
adc
gs
push
in
sahf
inc
mov
daa
addr16
mov
pushf
fisubrl
scas
clc
iret
clc
decl
mov
pop
je
testb
fsubrl
inc
and
pushl
add
inc
or
xacquire
ja
jmp
ss
mov
lds
jge
pop
sub
test
jmp
jl
mov
hlt
or
into
cmpsb
inc
push
repz
js
fwait
scas
jmp
fprem
dec
sub
loopne
jge
jo
in
jl
shrl
test
adc
enter
call
push
nop
cmc
aam
mov
add
sbb
mov
add
loop
push
inc
pop
call
jg
lock
add
pop
jo
daa
cmp
dec
arpl
and
loope
cmpb
das
xlat
aad
inc
xor
push
test
add
sbb
sbb
xchg
mov
and
or
or
clc
dec
push
add
push
icebp
int
add
pop
xchg
add
pop
and
shll
aam
mov
insl
xor
push
xchg
ret
icebp
pop
movsl
sbb
mov
shlb
jmp
or
je
or
jl
int
popf
xor
inc
in
lea
mov
lahf
mov
mov
mov
mov
pop
sbb
call
push
lcall
inc
pop
hlt
mov
aas
aaa
mov
and
mov
jb
or
mov
fs
add
xor
adc
sbb
jae
leave
add
mov
or
shlb
scas
ret
mov
call
dec
cld
or
nop
mov
inc
or
mov
testb
and
mov
push
mov
je
mov
aam
add
push
pusha
ds
cmp
rol
scas
mov
or
push
pushf
jmp
rcrl
lods
mov
or
push
push
loope
lcall
xchg
mov
jecxz
cs
scas
or
enter
push
and
adc
cmp
sbb
cld
pusha
cwtl
xor
fbld
mov
scas
and
add
or
incl
jmp
add
cmpsb
mov
out
test
and
add
loop
cwtl
faddl
testb
inc
ljmp
sub
sarb
cmp
jnp
jge
mov
dec
mov
shll
inc
ret
mov
mov
or
cs
mov
cmpsb
movsl
jp
loop
cli
pop
xlat
rclb
push
ja
and
je
fcomip
xchg
push
xor
dec
cmp
mov
idivb
out
and
and
hlt
inc
pop
mov
ljmp
xchg
mov
push
je
push
shrb
enter
cld
sub
ds
sarl
loop
repnz
sarb
clc
push
inc
std
xor
loopne
mov
loope
enter
ds
mov
test
pop
jo
in
fisttps
mov
lock
test
xor
adc
or
dec
adc
aas
out
pushl
xchg
add
push
or
adc
test
or
push
pop
mov
mov
ljmp
repz
adc
sub
pop
repnz
add
sahf
push
mov
aaa
outsb
in
push
nop
add
lock
fidivrs
and
fdivl
inc
popa
lds
xor
mov
xchg
clc
call
mov
sbb
dec
lea
jg
xchg
fsubrs
pop
add
clc
jno
and
cmpsl
jg
push
lock
pushl
and
dec
and
inc
and
adc
leave
adc
ror
push
mov
les
idivl
mov
mov
xchg
sbb
cmp
inc
xchg
clc
add
mov
adc
sbb
xchg
dec
sbb
ljmp
clc
xchg
xchg
xor
sub
inc
jnp
add
rcl
mov
and
add
insb
nop
xchg
mov
sbb
inc
sbbb
mov
sarl
cmp
fmull
xor
stos
pop
xchg
ret
fistpll
adc
xchg
mov
imul
popa
cmp
mov
in
cs
hlt
and
mov
jb
pushl
dec
adc
push
insb
dec
adc
dec
inc
jp
adc
ret
testl
or
aaa
lock
call
incb
out
xor
sbbl
fcom
xor
in
ljmp
fadd
mov
or
cmp
xor
cs
outsb
cwtl
mov
cli
pop
dec
popa
sti
and
and
and
cs
sar
adc
es
mov
or
pusha
or
fists
cmp
lret
pushf
out
adc
adc
fbstp
adc
fldl
pop
test
xor
ficomps
ret
add
fists
push
test
repnz
or
inc
push
sub
xlat
or
add
fidivl
nop
adc
pop
cmc
jg
movsb
scas
insb
jle
jae
nop
xchg
adc
ret
adc
or
pusha
fs
int3
mov
ja
das
pop
adc
call
stos
repz
inc
pop
cltd
adc
or
pop
xor
or
pop
mov
or
mov
sbb
cmc
fs
xor
inc
fdivrl
cli
jg
dec
sahf
inc
dec
pop
push
jecxz
pop
fldt
push
dec
mov
ja
loopne
rorb
push
mov
dec
mov
cld
inc
xchg
cmp
fcomi
aam
mov
test
push
add
mov
mov
dec
mov
cli
leave
cmp
std
mov
sub
and
imul
mov
subl
fsubs
mov
lock
inc
mov
into
push
inc
lret
fsubrs
mov
js
jbe
mov
xchg
idivb
stos
lahf
es
clc
mov
fs
and
js
popa
jle
pop
add
lret
pop
add
jp
fisttpl
xor
add
roll
scas
xor
add
xor
adc
xor
sbbl
push
fistpl
leave
outsl
scas
cmp
pop
cmpl
fwait
mov
add
hlt
movsb
aad
jge
jne
or
xchg
add
hlt
jbe
pop
fadds
rorl
les
adc
lods
shlb
xchg
mov
or
or
sbb
testb
pop
jl
dec
rolb
inc
jl
mov
not
mov
xor
fsubs
xchg
lcall
sub
mov
sbb
dec
repnz
push
cli
mov
outsl
xor
inc
in
pusha
xchg
push
fadd
orl
stos
and
inc
adc
jg
jecxz
fnstenv
scas
xor
mov
xor
adc
into
or
filds
add
dec
sbb
dec
xlat
mov
lcall
in
pop
arpl
add
mov
lods
mov
shlb
inc
andl
fucomip
mov
mov
repnz
and
clc
ja
out
fisubrl
aas
jle
jne
xchg
sub
aaa
cmpb
mov
insl
or
stos
sbb
pop
cmp
test
cmc
push
jo
mov
add
popf
mov
push
and
fsubrs
and
cld
cld
dec
lock
cmp
mov
fstpt
hlt
movsb
xor
and
pop
sar
mov
sbb
rclb
sub
loopne
and
jb
and
scas
ret
mov
outsb
imull
pop
js
or
cli
fcomip
or
jae
push
mov
je
lock
mov
pusha
lods
cs
adc
ljmp
sbb
ds
pop
jns
mov
jmp
out
lret
ffreep
mov
pop
pusha
out
movsb
scas
sbb
sbb
or
sbb
icebp
ja
in
clc
in
cmpsb
or
pop
dec
push
jbe
loope
shll
ss
sub
add
pop
add
out
pop
test
cmp
mov
fpatan
cld
push
adc
jge
movsl
data16
arpl
ret
or
pop
hlt
sbb
inc
aas
xchg
jecxz
pop
icebp
incl
movsl
mov
cmp
daa
test
daa
and
or
cli
mov
xchg
xor
ss
or
xor
into
lds
xor
stos
xor
cwtl
stos
cs
and
dec
push
loop
cmp
xor
add
popa
mov
or
ret
pop
leave
lcall
or
mov
mov
arpl
jecxz
adc
shll
les
aam
xchg
movsl
jns
xor
jno
aam
hlt
jg
jmp
push
and
scas
js
pop
mov
pop
adc
incl
mov
sub
jo
adc
jg
cld
mov
inc
daa
jmp
rol
pop
fiadds
jbe
int3
cmp
call
jmp
in
icebp
push
insl
push
add
xchg
loop
mov
inc
outsb
in
mov
cwtl
test
pop
hlt
pop
cmp
jb
dec
pushf
push
mov
xor
movsb
jae
subb
andb
or
lahf
inc
lds
fidivl
ds
fwait
xor
pusha
rolb
push
fcomps
dec
or
cmp
pop
insb
push
mov
and
iret
push
xor
int3
cmp
lods
sarl
fstps
inc
push
gs
ljmp
xor
cli
pop
aad
mov
push
out
lock
add
pop
dec
add
jno
xorl
xlat
adc
or
cmpsb
ljmp
inc
jle
xor
or
stos
add
mov
mov
jecxz
out
cmp
inc
mov
push
jns
cmc
add
push
subb
lret
jg
mov
out
xor
dec
out
rolb
loope
add
lds
xor
adcb
int3
mov
dec
and
mov
cli
xor
lock
ja
pop
je
pop
push
pop
popa
test
dec
cmc
xchg
adc
scas
dec
insb
cli
aas
sbb
iret
popa
sbb
aas
xchg
add
nop
repnz
test
mov
jo
negb
cmc
stc
mov
cmc
test
lret
jmp
push
fmuls
xchg
out
push
sub
stos
mov
rcrb
add
test
jmp
in
adc
cmp
mov
push
jbe
shlb
dec
fadd
ret
jno
lods
gs
sub
mov
lock
enter
aam
loopne
cld
sbb
sbb
xchg
inc
push
sub
pusha
cmp
bound
xchg
es
mov
outsl
jnp
or
adc
pop
dec
adc
sub
mov
popf
imul
add
jne
test
adc
rcrb
mov
loope
add
in
xchg
adc
ret
xchg
aaa
jp
mov
repnz
inc
in
cmp
push
xor
sahf
push
mov
mov
jp
lcall
push
fdivrl
cld
decl
popa
add
stos
lock
xor
and
lods
xor
hlt
dec
add
hlt
or
mov
pushl
fwait
jmp
call
jb
in
xor
jo
mov
pushl
sbb
sti
pop
fcompl
dec
or
shlb
mov
cs
int3
adc
mov
mov
mov
lret
rorb
ficompl
cmpsl
imul
pop
pop
or
inc
aas
mov
in
sub
cmc
jle
fistl
in
push
adc
mov
sub
pop
add
clc
cmp
nop
je
sbb
and
xlat
mov
push
inc
lahf
and
in
js
dec
pop
dec
push
rolb
clc
decl
cltd
and
sbb
inc
inc
inc
jno
mov
fists
pop
cmp
pop
daa
push
jo
es
bound
movsb
ret
sub
stc
dec
lds
pop
dec
adc
add
ss
test
lds
outsl
ss
insl
jae
jl
push
dec
and
ret
fiaddl
mov
or
mov
push
dec
push
cmp
sub
ret
jle
clc
add
ds
ret
rolb
sbb
decl
sub
mov
adc
dec
ret
icebp
jp
xchg
add
cmp
inc
and
xchg
fistl
cld
jg
adc
ljmp
bnd
and
cld
call
dec
add
or
test
and
push
lods
into
push
popa
dec
dec
filds
mov
ret
repz
lcall
cli
loope
xor
fwait
pop
cmp
add
popa
mov
push
cmp
mov
test
leave
mov
jle
fcmovnb
into
pop
cmpl
cmp
out
ds
cmc
fnstenv
sbb
cli
xor
gs
mov
mov
pop
inc
pop
dec
cltd
sub
sbbl
daa
or
add
add
adc
xchg
dec
imul
adc
sub
aas
xor
loopne
ret
fwait
or
les
inc
adc
into
fbld
test
mov
lock
incl
mov
jo
sbb
stos
mov
add
xchg
push
adc
add
mov
scas
push
add
aas
cwtl
xchg
loop
add
push
mov
lock
je
gs
adc
lahf
push
xchg
inc
in
push
push
mov
xchg
sub
hlt
bnd
incl
or
mov
jae
push
popa
and
or
gs
enter
push
sahf
cmpsb
pushl
xchg
inc
push
fidivrl
pusha
xchg
roll
dec
addr16
sub
fs
rorl
dec
shll
xchg
xchg
and
cwtl
adc
ret
loopne
sti
das
call
in
inc
pop
test
adc
pop
test
scas
push
jo
cs
int
fldt
cs
dec
mov
sbb
mov
inc
pop
push
int3
or
addr16
shl
scas
add
dec
test
add
push
gs
je
loope
stc
in
shrb
pop
xchg
dec
cld
xchg
dec
clc
lods
outsb
int3
movsl
inc
push
cmpsb
inc
je
and
jmp
and
push
xlat
mov
sub
ss
decl
subb
add
inc
hlt
mov
loop
stos
pop
jmp
add
dec
push
add
test
fidivs
add
subl
pop
push
push
mov
cmp
push
leave
or
nop
inc
inc
cld
cmpb
adc
jb
jl
mull
inc
push
adc
add
cli
aam
jmp
pop
jle
fimuls
in
jg
shrl
mov
or
add
sub
push
iret
insb
incl
je
or
pop
add
dec
pop
cmc
and
in
nop
ds
test
std
push
add
inc
cmpsl
aad
dec
pop
cmp
incl
ljmpw
mov
insb
jp
pop
pusha
jl
add
jmp
in
xlat
aas
jb
mov
add
outsb
adc
adc
pop
pop
ja
lock
lods
or
leave
adc
jle
lock
test
clc
xchg
dec
pop
dec
add
mov
or
jecxz
pop
and
in
repz
adc
push
adc
notb
ss
xchg
ljmp
mov
lds
neg
adcb
and
xchg
testb
mov
test
push
movsl
or
ljmp
add
out
inc
and
mov
adc
insb
clc
mov
lcall
sbb
mov
mov
cli
pushl
sub
mov
pop
cmp
jns
add
lods
test
jne
mov
xor
inc
mov
lock
pushf
mov
xchg
adc
jmp
inc
pop
mov
addr16
mov
inc
fs
les
stos
stos
push
mov
jne
pop
fdivs
sub
mov
call
adc
or
decl
les
mov
push
mov
lahf
mov
bound
sub
adc
xor
add
xchg
xchg
in
pop
test
or
mov
test
dec
jle
cmpb
or
fnstcw
push
mov
scas
frstpm(287
mov
pusha
sub
and
bound
pushf
loopne
aaa
xorb
test
js
cmp
pop
decl
pop
stos
mov
jecxz
shll
push
push
mov
dec
lock
clc
dec
in
add
orb
lods
push
or
pushl
into
push
push
lds
add
cmpsb
test
xchg
add
scas
test
mov
dec
push
sbb
popf
push
adc
imulb
adc
outsl
les
je
pop
aad
or
and
mov
das
imul
add
decl
sbb
sub
stc
mov
push
or
dec
sbb
int3
pop
push
and
stc
inc
jl
loope
inc
clc
jne
jecxz
std
clc
pop
adc
fists
jp
shl
fldenv
incl
dec
outsl
mov
cmpsb
aaa
push
cmpsl
pop
nop
pop
or
lds
or
mov
jnp
pop
push
xchg
xchg
pop
mov
ljmp
std
push
mov
pop
mov
addr16
loop
sahf
push
cmp
xchg
cltd
clc
dec
test
hlt
ss
ret
js
mov
xchg
mov
mov
sbb
xor
scas
or
data16
add
std
and
push
xchg
xor
pop
push
stos
fsubrl
jne
lods
xchg
cmpsb
sub
sti
fsubs
hlt
sahf
pop
pop
pop
into
fcoms
push
mov
lahf
aam
icebp
jle
scas
roll
cli
xlat
inc
stos
mov
sub
dec
jmp
scas
jle
pop
into
mov
clc
int3
stos
mov
and
xchg
gs
scas
stc
stos
in
sbbl
js
xchg
xchg
push
mov
adc
adc
insl
fcoms
mov
ret
push
push
inc
ljmp
add
movsb
jle
je
shl
outsb
dec
mov
mov
adc
adc
push
rclb
xor
ds
out
dec
mov
cld
nop
sub
pop
mov
xchg
jge
jb
lea
pop
or
dec
testl
and
mov
test
sar
sub
es
mov
sbbl
stc
fcoml
push
jge
mov
fisubs
push
repnz
inc
insb
aas
incb
inc
mov
mov
pop
or
xchg
fcompl
mov
lds
push
inc
add
sbb
jge
xor
push
jecxz
or
test
dec
stos
adc
lret
shlb
rcll
sbb
mov
and
outsl
jo
lock
cmc
jne
add
insl
fcoml
stos
fsubr
mov
xchg
sahf
inc
mov
jne
lret
testb
loopne
mov
or
pop
adc
xchg
lret
and
ret
data16
cmpsb
loopne
sub
dec
mov
je
or
jmp
std
pop
mov
gs
cmp
repnz
negb
jge
shl
jmp
mov
add
cs
dec
lds
cld
mov
nop
lock
mov
cmpsb
subl
pop
adc
cmpsl
sub
or
inc
pop
fcomps
fildl
cmp
sbb
scas
je
jg
push
cmp
hlt
mov
decb
cmpb
ret
pop
or
mov
adc
jnp
push
mov
jp
mov
add
lea
dec
clc
xchg
mov
xchg
cwtl
in
aam
or
dec
lock
cltd
mov
int
jae
aaa
mov
lods
sbb
push
sub
out
js
jmp
or
cmp
push
imul
xor
cli
call
and
sbb
es
das
shrb
mov
dec
jbe
dec
push
pop
xchg
add
movsb
pusha
or
lods
stos
cmp
jb
das
rorb
sub
out
mov
adc
into
scas
fstl
fists
ret
lret
jae
push
dec
jmp
inc
xchg
cmp
mov
cli
lcall
stos
rorl
mov
xchg
fadds
jbe
mov
ljmp
ret
add
push
xchg
xchg
xor
insl
insb
dec
stos
add
sub
sub
hlt
dec
sti
lcall
add
inc
loope
out
or
add
or
lcall
mov
andb
and
std
in
mov
sub
adc
or
or
ja
pmuludq
xor
adc
aam
jle
fists
repz
dec
push
test
lods
cmp
daa
fisttpll
cli
lcall
fs
jmp
jg
pop
mov
mov
fcmovb
cld
icebp
adc
xchg
push
and
aad
pop
repz
fdecstp
fcomps
mov
pop
shl
or
insb
loop
lea
jg
pop
xor
notb
aam
xchg
psrad
rcll
dec
ret
in
hlt
jmp
mov
mov
jp
xchg
xor
loop
into
iret
add
aas
repz
dec
sbb
mov
sub
out
sub
lods
jno
mov
adc
repz
test
call
mov
push
inc
lea
jg
inc
es
mov
ret
and
loop
xlat
adc
leave
xor
cmpsb
jmp
loope
xor
hlt
inc
jl
stos
xchg
andb
mov
sbb
daa
test
jne
cld
inc
mov
daa
push
inc
sub
lret
aas
outsb
decl
add
into
inc
cmp
sbb
mov
pusha
and
filds
cli
adc
or
xchg
or
ds
test
popf
push
stos
sti
inc
jmp
adc
mov
add
or
dec
fcmovnu
push
lock
pop
mov
mov
xor
adc
lret
scas
es
mov
cmc
pop
or
lock
mov
add
dec
js
ljmp
roll
xorb
inc
mov
dec
mov
lods
push
std
mov
inc
xor
and
mov
dec
mov
push
insb
ljmp
and
cmp
xchg
jmp
lcall
andl
std
sbb
subb
mov
and
mov
imul
int
sbb
and
mov
jl
mov
test
xor
xlat
cmpsb
das
sub
lcall
push
adc
cli
sbb
repz
xchg
jg
lods
sbb
pop
add
push
mov
xor
xor
cmp
push
xchg
loop
lcall
or
movsb
push
jl
push
orl
push
or
jle
and
jbe
out
cmp
lods
push
add
hlt
sub
xor
xor
add
addr16
cs
sbb
cld
mov
popf
repnz
cwtl
aad
cmpsl
jb
in
add
cmc
push
mov
xor
pop
lock
incb
add
fs
stos
jmp
push
xor
negb
repnz
jmp
outsl
cmpb
dec
push
gs
nop
je
mov
inc
jnp
and
fnstenv
push
mov
push
filds
and
push
mov
cld
jbe
pop
jg
cmp
mov
jmp
pop
mov
sub
bextr
add
jo
pop
out
push
adc
push
push
cs
ljmp
push
cmpsb
xor
cmp
sbb
and
in
add
cmp
scas
jmp
shl
scas
xchg
jmp
and
cmp
dec
mov
dec
add
jno
inc
rclb
clc
enter
mov
sbb
mov
mov
mov
push
adcb
fsubs
sub
mov
enter
push
inc
loopne
hlt
ja
and
jle
pop
sub
cmc
mov
xchg
push
xchg
mov
pop
push
loop
cmp
dec
rolb
daa
stos
and
and
push
loop
inc
sub
mov
add
std
fucomi
cwtl
or
arpl
sub
cmp
or
jmp
adc
clc
sbb
idiv
mov
pop
ljmp
push
pusha
sti
pop
dec
xchg
ds
mov
pop
rolb
add
cmpsb
mov
inc
jp,pn
lahf
inc
test
push
mov
call
incb
mov
mov
mov
or
decl
cmp
bound
in
or
fisttps
subb
cwtl
mov
rolb
into
mov
pushl
xor
push
and
ret
icebp
dec
adc
pop
jle
push
add
cmp
movsl
add
jbe
repnz
scas
add
fs
cmp
push
xchg
movsl
push
stos
add
lcall
inc
out
aaa
mov
andb
leave
shr
cmp
repnz
jp
ljmp
clzero
std
out
sarl
outsb
test
fs
add
jae
gs
es
fcompl
decl
arpl
dec
jnp
movsb
mov
outsl
adc
pop
cmpsb
inc
push
add
int
pop
js
sub
out
push
cld
fistl
fdivrs
fcomip
les
rcr
or
or
loope
icebp
jg
sbb
or
stos
cld
dec
loop
add
add
enter
and
inc
test
dec
push
dec
lods
jo
jle
mov
sbb
movsb
clc
js
and
xor
pop
xchg
push
inc
adc
mov
mov
in
cmp
fsubrs
dec
in
xchg
rolb
sub
call
insl
cmp
and
jae
call
lds
mov
and
add
inc
clc
dec
test
repnz
add
cmp
pop
mov
loopne
xchg
mov
adc
inc
cld
inc
mov
loopne
push
cmp
ljmp
xorb
mov
pop
into
sarl
cmp
mov
mov
pop
es
icebp
out
fcmovb
pminsw
fldenv
pop
inc
aas
cld
pop
sbb
mov
mov
push
or
dec
and
loopne,pt
div
adc
xchg
js
outsb
ret
cmc
xchg
cs
pop
xlat
das
dec
icebp
enter
add
or
sub
mov
cltd
clc
jmp
mov
and
shlb
mov
outsb
dec
ret
gs
dec
ljmp
shlb
sbb
sbb
jno
sub
call
jb
shrb
mov
in
addr16
test
psrld
out
inc
mov
mov
mov
data16
aaa
jb
xchg
and
js
add
in
push
inc
lcall
mov
add
rep
push
pushf
repz
sub
xchg
ljmp
or
add
mov
xor
jl
push
xor
pusha
sbb
dec
sbb
xchg
call
or
dec
and
cmp
and
add
add
mov
flds
rol
xor
mov
jg
xor
jbe
xor
fmul
sahf
mov
ret
adc
sub
inc
jmp
jb
xor
pop
inc
jge
mov
xlat
int3
adc
xchg
out
out
jp,pt
jmp
pop
push
cmc
xor
mov
inc
xchg
inc
or
and
mov
sbb
inc
test
mov
sbb
add
inc
out
loopne
pop
add
clc
incl
addr16
cmp
adc
test
insb
sbb
sub
std
push
add
jl
sbb
mov
cli
pop
lock
data16
out
push
add
jo
jl
or
aam
int
movsb
xchg
rorb
js
nop
push
test
add
out
shll
in
lahf
sbb
jg
or
or
test
cld
rorb
jle
xor
popa
sub
push
loopne
sbb
xor
clc
pop
les
xchg
mov
jne
push
movsl
and
sbb
in
fadd
arpl
lock
mov
sub
lcall
adc
inc
jb
data16
nop
lock
add
dec
push
jecxz
pushf
mov
add
sub
add
aaa
dec
decl
inc
hlt
loop
dec
ds
pop
fs
push
sub
mov
sub
mov
add
and
sub
dec
lock
cmp
lcall
iret
push
rcr
or
lods
test
dec
or
les
call
xor
sub
sbb
dec
shr
adc
jg
dec
inc
mov
shrl
lods
mov
scas
adc
aad
cmp
movsl
pop
xchg
shr
pop
or
decl
inc
and
outsb
movsb
inc
andb
popf
popf
fsubrs
adc
lods
int
adc
cmc
adc
or
scas
fidivs
mov
std
or
dec
xor
dec
jge
les
cmp
mov
cltd
or
mov
clc
push
inc
iret
and
in
data16
push
jb
or
rolb
add
lods
jo
imul
orl
pop
out
and
or
mov
movsl
je
aaa
xor
test
loopne
movsb
or
pop
mov
pop
loope
mov
sahf
stos
nop
arpl
lock
int
lret
lods
jecxz
clc
add
loope
gs
jbe
cmp
or
push
mov
stos
cld
mov
fdiv
xchg
inc
inc
lods
lret
mov
sbb
or
pusha
idivb
mov
pop
ret
xor
jl
cmp
mov
cli
mov
nop
cmp
xor
lock
sbb
loopne
sub
lods
fildll
or
nop
fbstp
pop
mov
call
sbb
jl
xchg
jo
shr
add
or
daa
clc
mov
push
and
cmp
outsl
es
add
add
cs
xchg
mov
mov
or
push
cld
outsb
fwait
loope
popa
dec
ret
rclb
rclb
fs
stos
decl
addr16
outsl
bound
adc
cmpsb
sub
clc
sub
pushf
push
icebp
pushf
or
fdivrl
dec
or
and
ret
out
movsb
cmp
insb
and
mov
add
xchg
cli
stos
mov
push
dec
push
push
outsl
mov
jg
xchg
in
push
mov
lcallw
adc
aas
and
sub
cwtl
lahf
push
mov
nop
inc
inc
mov
cmp
test
fs
les
cmpsb
sti
fdivs
les
add
ss
inc
push
xchg
dec
and
jae
gs
fistps
lahf
iret
dec
stc
cmp
stos
cmp
out
or
jbe
repnz
mov
decb
mov
movsl
mov
push
ror
call
fwait
pop
das
lock
or
add
ds
out
xor
cli
or
pop
ret
xor
and
or
les
mov
loope
xlat
xchg
sub
mov
mov
lahf
adc
dec
mov
push
scas
push
xor
xchg
sub
mov
cmp
inc
and
push
es
pop
subl
or
cmp
adc
jg
int3
or
inc
hlt
push
scas
add
test
data16
aaa
aam
push
lock
dec
dec
movsb
jmp
pandn
mov
and
push
test
jecxz
call
jle
or
out
ret
fistpl
pop
into
sbb
xor
mov
out
test
cmpl
mov
sub
sti
bound
test
je
movsb
cmpsl
dec
fsubrs
jl
cmpsb
dec
add
inc
decb
add
cmp
cmp
out
pop
clc
push
push
das
aad
stos
dec
in
rolb
mov
in
in
mov
xor
ds
aas
hlt
sub
pop
jge
arpl
mov
sarb
and
sbb
call
mov
loope
ret
loope
pusha
sbb
out
push
mov
and
mov
fstpl
lcall
je
jg
mov
sub
inc
or
insl
mov
sahf
out
mov
fistl
push
dec
add
fdivs
fdivl
daa
and
insb
dec
int
mov
sti
xor
inc
xchg
mov
pop
add
push
lods
jmp
dec
xor
into
add
push
in
push
and
roll
fistpll
jne
mov
in
add
inc
or
insb
and
mov
outsl
mov
adc
ror
push
cli
push
mov
scas
jns
sub
add
call
xlat
adc
add
clc
push
dec
fisubs
or
or
inc
dec
and
and
sbb
mov
repnz
ja
add
pop
pusha
jbe
mov
mov
push
dec
cmp
and
adc
adc
push
insl
fcmovu
arpl
add
sahf
enter
sbbl
sbb
jo
std
jno
rcr
jb
jmp
decl
lea
mov
mov
fmul
pop
sbb
jb
fcomip
std
pop
rolb
shlb
loopne
ret
mov
dec
cmp
or
or
or
clc
je
fisubrl
std
in
sub
adc
or
inc
sbb
std
test
into
insb
or
add
xchg
pop
push
add
loopne
popa
testb
mov
cmp
jle
sbbl
fucomp
pop
pushf
or
subb
and
icebp
pop
sub
sbb
pop
mov
jne
pop
aas
adc
inc
mov
scas
or
jo
sarb
nop
dec
cli
cmpsl
sbb
add
mov
lock
ret
loope
adcl
mov
jl
xor
xlat
jns
and
inc
rorl
ja
mov
jge
mov
in
pop
sbb
or
pop
mov
sbb
fs
fildll
add
or
add
and
sahf
cmc
cltd
inc
mov
lahf
xor
push
pushl
adc
add
cmp
and
mov
fs
pop
mov
notb
shrl
scas
add
iret
jo
hlt
lods
aas
push
add
and
or
sub
mov
jle
cmp
ds
das
mov
sbb
lock
adc
sub
ljmp
cmc
jg
in
fldenv
std
xchg
push
insl
add
ret
push
xor
mov
or
push
nop
mov
rcrb
test
repz
cmp
sbb
ret
or
mov
repnz
int
cmp
pop
cmpl
push
inc
inc
pop
repnz
mov
fistl
ljmp
cmp
push
popa
pusha
add
popa
aam
out
jmp
jbe
std
arpl
jbe
mov
xchg
nop
and
inc
cmp
mov
fstl
mov
push
inc
or
mov
nop
jmp
int3
adc
adc
inc
or
sbb
call
or
pop
push
mov
or
jle
push
cld
scas
mov
or
decl
js
and
mov
inc
daa
out
sahf
xchg
xchg
xchg
add
scas
jecxz
es
movsb
outsb
in
inc
mov
inc
ror
data16
push
ret
clc
sbbl
bound
push
sbb
addr16
or
pop
cmp
xchg
and
adc
pusha
mov
out
xor
inc
cmc
loop
inc
add
mov
arpl
shll
and
pop
cwtl
mov
push
decl
push
lret
xchg
xorb
dec
inc
xchg
test
das
adc
push
call
fcomps
mov
jecxz
fistps
add
cld
das
sti
add
in
inc
es
inc
dec
inc
loopne
jae
fadds
ja
pusha
lahf
add
mov
jle
ss
mov
out
in
sbb
mov
xor
add
insl
push
dec
push
out
add
pop
and
xchg
test
addb
mov
mov
dec
stos
les
ficoml
sbb
imulb
or
imul
or
stos
call
nop
loopne
inc
add
iret
xchg
mov
push
or
xchg
mov
lea
aaa
stc
add
mov
cmpsl
js
jg
cmp
hlt
xchg
add
mov
xor
push
fldt
mov
xor
mov
dec
cli
jl
lods
mov
dec
push
icebp
adcb
sub
clc
stos
call
xor
les
push
jecxz
pop
dec
inc
popf
aam
inc
enter
stc
icebp
lods
adcl
mov
jno
leave
mov
mov
sbb
enter
and
jecxz
cld
mov
mov
movsb
inc
mov
cltd
inc
pop
stos
push
xchg
cwtl
je
xlat
inc
mov
mov
jle
pushl
cmc
cmp
sti
aam
adc
adc
std
or
clc
ffreep
pushf
mov
cmp
jg
or
xchg
std
jle
push
popa
nop
cmpsl
aas
add
cmp
pop
or
call
jnp
jb
sub
mov
and
add
and
call
xchg
push
nop
push
subb
add
je
lcall
add
enter
arpl
je
xchg
decl
fldcw
stos
mov
mov
mov
mov
insl
sbb
adc
je
add
xor
shlb
rcll
rcrb
jecxz
shll
push
mov
jnp
mov
lret
jg
popf
fimuls
sar
nop
test
daa
popa
sahf
lods
data16
xor
test
sub
adc
mov
incl
and
mov
fcmovnbe
jae
adc
cmpb
repnz
in
adc
jp
push
or
adc
cltd
arpl
imul
data16
xchg
nop
add
ljmp
add
jne
pop
pop
sahf
in
add
scas
push
jp
popf
jl
fcoms
and
addr16
jo
pop
repz
xchg
and
mov
push
data16
ds
dec
adc
xor
sbb
inc
sub
repz
push
mov
inc
loopne
xchg
bound
or
roll
js
and
xor
js
xor
clc
mov
push
or
mull
xor
ljmp
es
mov
push
test
test
out
scas
lds
mov
lcall
sti
adc
mov
sbb
inc
add
pop
adc
movsl
in
ret
sub
pop
mov
aam
mov
cmp
stos
cmp
mov
sbbl
adc
lcall
ds
subl
fsubl
lea
mov
or
sbb
fsubrl
in
call
test
gs
sub
mov
sbb
add
insl
fidivl
stos
adc
das
xchg
inc
clc
xchg
sub
pop
pop
mov
pop
mov
stos
add
cmp
or
jl
hlt
call
test
cltd
inc
bound
adc
pop
insb
dec
mov
or
lahf
dec
sar
cmp
and
inc
imul
mov
add
or
or
mov
insb
add
mov
adc
xchg
mov
out
rolb
call
ljmp
xlat
jae
out
cwtl
push
fmuls
xlat
inc
xor
inc
mov
les
sub
inc
mov
xchg
push
test
cld
mov
dec
bound
dec
enter
fdiv
mov
xchg
and
pop
nop
lret
sub
sbb
not
jnp
outsb
call
xchg
sbb
mov
mov
lea
mov
mov
rcll
shl
xchg
pop
loop
shrb
jbe
stos
cli
icebp
test
mov
fdiv
and
nop
adc
clc
sub
adc
sbb
or
push
and
add
or
adc
inc
xchg
jg
rclb
mov
xor
mov
decl
pop
and
stc
inc
mov
sbb
sub
imul
sbb
and
xchg
pop
mov
jl
aaa
fcoms
and
loope
sub
jmp
cld
fildll
mov
bound
lea
mov
decl
mov
inc
jg
aam
xchg
hlt
push
cs
fwait
add
lahf
pop
mov
std
and
cmp
lea
jmp
inc
neg
in
out
clc
dec
pop
add
push
push
pop
nop
pop
sbbb
xor
dec
xor
insl
cmp
pushl
nop
std
jbe
gs
ret
inc
lods
sub
jp
je
xchg
push
sub
xchg
pop
xor
dec
add
xchg
add
lcall
clc
out
ljmp
add
adc
jmp
lea
pushf
test
fstl
shlb
fimull
fwait
aad
sub
imul
data16
mov
sub
mov
and
lahf
lea
mov
add
repz
mov
inc
sbb
add
rclb
scas
mov
push
jecxz
push
push
loope
xor
imul
decl
ficoml
stos
sahf
jecxz
mov
adc
sarb
std
ds
add
inc
mov
leave
int3
jl
inc
insb
cmp
mov
out
fidivrs
mov
jns
push
bound
push
sbb
test
jg
iret
mov
loopne
jp
cmp
negl
mov
out
push
bound
js
loopne
push
enter
fcmovnu
push
mov
add
js
cmp
push
mov
add
test
inc
inc
jb
mov
adc
mov
xlat
mov
or
mov
or
adc
or
int
fldl
xchg
push
adc
sbb
or
xchg
add
push
sub
out
shrb
rcrb
call
and
fs
lret
lret
sub
cwtl
divb
mov
mov
das
jmp
loopne
rcrb
mov
addb
roll
ret
push
or
mov
cwtl
xchg
jp
cld
sbb
mov
sub
sbb
loopne
fistpl
ja
in
push
dec
xor
adc
je
cmp
push
and
push
mov
cld
lret
cmp
pushf
mov
xor
mov
jecxz
jne
lea
jb
rorl
jp
nop
push
xor
mov
clc
cld
scas
dec
les
in
cltd
test
pop
inc
push
sub
inc
mov
cld
lret
stos
push
pop
pop
mov
push
jge
sub
mov
inc
cmp
push
add
or
insl
lahf
dec
jle
xchg
roll
jl
sbb
sbb
loop
fisttps
xor
pop
add
mov
cmp
cmpsb
nop
pop
inc
inc
cs
mov
sub
cs
ss
inc
mov
iret
or
in
jmp
push
push
push
loopne
add
cmp
test
cld
mov
mov
clc
mov
test
in
lahf
and
sub
pop
les
push
orl
mov
add
inc
je
leave
jae
push
stos
pop
or
cmc
lock
sbb
stos
or
decl
jb
int
gs
loope
mov
inc
push
dec
loopne
aaa
xor
stc
mov
pushf
les
fsubrp
sti
add
jl
and
jno
sbb
mov
adc
mov
xor
cld
xor
and
stos
pop
adc
mov
int3
lahf
pop
or
mov
inc
adc
inc
pop
dec
lahf
cmp
rclb
inc
jbe
xchg
je
ds
pushf
pop
mov
xlat
push
pusha
mov
out
xrelease
jnp
pop
insb
lds
sbb
jns
dec
add
inc
and
stos
shl
pop
push
cmp
in
nop
rol
xchg
sub
fisttpll
repnz
cmovnp
add
adc
insb
repz
pop
push
xchg
shlb
cld
outsl
mov
fadd
ror
pop
clc
mov
idivb
push
mov
sbb
ds
mov
movsl
std
fisttpll
aad
shlb
lock
pop
inc
cmp
call
mov
pop
or
add
lea
icebp
movsl
mov
push
dec
mov
add
test
test
and
push
or
daa
jle
sbb
push
mov
fsubs
adc
bound
shl
cmp
into
fimull
mov
pop
cmp
add
rorb
and
add
idivl
rcll
outsb
cmpsb
movsl
sbb
fisubs
outsl
aaa
pop
call
test
inc
adc
and
outsl
nop
cltd
dec
out
add
xor
scas
js
add
sub
lods
cld
or
xchg
cmp
sbb
mov
jg
or
adc
add
jge
sbbb
sbb
fildll
ljmp
xor
dec
loop
mov
sub
dec
inc
fs
andl
incb
outsb
mov
lcall
jae
orps
insb
xor
lock
or
mov
xorb
adc
mov
std
mov
jo
adc
push
push
inc
loope
mov
lods
add
or
call
js
sbb
push
sub
xchg
inc
and
push
dec
pop
cld
leave
call
gs
lcall
jne
call
pop
cld
hlt
adc
sarb
mov
mov
adc
into
dec
mov
pop
inc
and
shr
push
mov
pop
loop
or
adcb
add
int
push
add
push
test
dec
bound
lcall
mov
rorb
clc
mov
push
and
cmp
xchg
jo
adc
xor
adc
jle
or
mov
add
lcall
fdivrl
xchg
xchg
mov
sbb
push
je
ret
mov
xchg
xchg
shl
jmp
sbb
cltd
fsubs
inc
and
dec
lea
push
inc
js
adc
fs
xlat
pop
mov
cmp
lods
jbe
lcall
mov
dec
sbb
js
pusha
xchg
ljmp
inc
pop
scas
pop
or
neg
cwtl
mov
outsl
mov
inc
push
add
push
insb
mov
sbb
xor
xor
sbbl
mov
test
dec
insb
loop
or
je
std
xor
add
lds
ret
sub
arpl
sub
mov
sub
inc
or
mov
push
jnp
je
mov
fdiv
out
sbb
inc
sub
cltd
test
push
jae
loopne,pn
lods
in
imul
loope
sub
cmp
lahf
mov
cli
popa
xchg
ficoml
xchg
or
addl
shrb
adc
or
std
mov
mov
push
in
cmp
sub
adc
dec
dec
mov
btr
ret
xor
in
popf
mov
push
stos
push
mov
out
pmaxub
inc
xchg
xchg
ret
jle
cmpsl
lahf
ljmp
add
mov
mov
outsb
lock
stos
mov
push
xchg
jmp
mov
movsl
cmp
jmp
bound
xchg
aaa
xor
push
sub
xor
int
sbb
daa
orb
stc
xchg
mov
mov
loope
xor
pusha
mov
ret
pusha
jmp
sub
inc
inc
or
mov
jp
cwtl
pop
mov
rcrl
mov
mov
mov
add
mov
inc
push
and
sub
hlt
lret
pusha
jb
inc
lea
push
push
mov
add
xchg
mov
cmpsb
push
or
lock
loopne
cmp
into
shrb
pop
lcall
xchg
inc
sar
pop
add
push
fs
ret
fstl
jnp
add
jle
jp
mov
ret
sub
fs
imul
jle
ret
jmp
xlat
mov
push
jno
pop
in
cmp
es
lods
xor
outsb
lods
inc
cld
out
and
or
leave
adc
ss
pop
mov
es
lret
insl
ljmp
and
jbe
add
and
dec
ja
mov
cmpsb
shr
mov
bound
loope
push
dec
mov
push
scas
xor
xor
jbe
out
lock
cwtl
roll
pop
xchg
or
and
mov
orb
pop
lahf
addb
in
leave
jbe
loop
dec
std
scas
and
out
jge
dec
cmp
lret
pop
and
insb
jbe
ljmp
inc
mov
call
adc
sbb
out
and
hlt
add
sbb
sbb
aaa
icebp
inc
mov
add
jl
mov
mov
fisubs
dec
nop
pop
test
push
nop
push
push
mov
nop
mov
lds
sbb
cmp
sbb
cld
negb
sbb
dec
lret
xor
ljmp
or
push
cmp
and
insb
and
mov
inc
mov
push
xchg
sub
fstps
lahf
pop
call
idivb
mov
jecxz
fnop
xchg
xchg
bnd
test
fnstsw
add
add
loop
adc
push
xor
jle
outsl
cmpb
jge
orb
shrb
push
mov
add
aaa
or
pop
fisttps
push
gs
imul
pop
push
push
jg
adc
inc
das
fsubs
lock
pop
push
lcall
dec
inc
ret
mov
dec
and
or
inc
out
mov
jle
mov
fmuls
or
add
insl
jg
adc
push
mov
test
and
bound
pushf
cli
push
fbld
in
mov
mov
add
push
mov
out
nop
in
arpl
jo
ret
dec
and
ret
and
or
aaa
lods
sarb
cli
nop
mov
sti
sub
inc
sarb
incl
cwtl
mov
pushf
aad
lret
dec
xchg
push
popa
inc
mov
mov
mov
pushl
lock
or
sbb
sbb
or
inc
push
push
movsl
nop
outsl
push
jmp
sub
pusha
cs
sbb
fcom
sub
mov
add
stc
pusha
addr16
cwtl
dec
out
fisttps
test
mov
jo
push
imul
loope
rcll
mov
addr16
adc
and
pop
repz
lcall
xchg
sbb
sbb
and
pop
mov
push
mov
fdivr
push
enter
imul
fnstenv
repnz
mov
hlt
mov
add
lea
std
ss
xchg
mov
testb
fildll
mov
sbb
pop
leave
sub
pushl
jae
sub
jle
dec
dec
jl
jne
inc
jmp
into
adc
dec
sbb
jb
daa
rcrb
decl
xor
clc
repz
gs
orb
inc
push
roll
imul
orb
ljmp
jle
jbe
std
scas
fbstp
iret
jle
jmp
sub
std
mov
sbb
pop
cli
repnz
data16
std
mov
xchg
arpl
lcall
sub
rorb
dec
sub
lods
je
cmp
inc
lcall
dec
or
imul
decl
push
xchg
push
rcll
jns
idivl
sub
add
ret
std
jmp
mov
call
inc
in
fisubrl
pop
aas
mov
add
clc
data16
cld
mov
or
adc
mov
out
mov
sub
adc
das
rorb
mov
aaa
outsl
cli
dec
aas
or
loopne
cmp
xor
jno
inc
cli
xchg
in
orl
lea
es
xchg
pop
neg
sbb
cmpsb
adc
hlt
sub
push
sub
xchg
pusha
in
cmc
push
fwait
popf
cmp
push
xchg
add
insl
call
out
sti
bound
mov
imul
test
mov
xorb
inc
jbe
daa
xor
lret
xchg
xchg
inc
mov
dec
jp
mov
sub
out
dec
fwait
adcb
mov
inc
or
ljmp
inc
dec
adc
sbb
orl
imul
push
ljmp
mov
add
vaddsd
movsl
popf
cltd
negl
or
popa
mov
push
sub
scas
dec
and
cmp
inc
cmpsb
scas
jmp
jge
adc
arpl
cmp
incl
xchg
xor
sbb
cmp
pop
add
jecxz
cwtl
sbb
vprotw
js
idiv
jmp
xchg
aam
pushl
dec
push
imul
xor
lahf
movsl
loopne
sbb
shrb
sti
pushl
lods
xchg
fldenv
push
loope
push
jmp
lods
test
idivl
lea
push
lds
xchg
fcomip
jl
leave
out
shr
mov
adc
cmp
mov
seto
inc
ss
test
jp
inc
mov
mov
push
jp
lods
mov
int
add
pop
dec
ret
mov
ss
insl
repnz
and
sarl
jmp
inc
ret
mov
sub
xchg
mov
pop
jno
movl
out
adc
nop
nop
into
inc
nop
jno
jp
je
daa
sbb
add
lods
push
popf
data16
mov
cmp
mov
insl
cmpsb
mov
pop
popf
outsl
dec
mov
mov
cmp
mov
push
fimull
leave
sar
incl
xor
loop
jmp
inc
cltd
cmpsl
add
adc
xor
mov
sbb
outsb
add
lahf
nop
fstps
xchg
into
sbb
sbb
and
ljmp
push
sarl
addl
pop
andb
pop
cmp
lahf
decl
mov
and
nop
mov
jge
sahf
pop
scas
std
data16
dec
mov
in
ljmp
repz
mov
enter
cmp
add
imul
mov
mov
and
in
mov
jp
jno
lahf
mov
cltd
ja
lcall
movsl
incb
test
and
arpl
push
jg
incl
fistl
jnp
xchg
scas
imull
lret
mov
std
lcall
out
out
ja
pop
cmc
adc
jo
cmp
test
mov
lret
mov
mov
jecxz
loopne
mov
pop
cmp
imul
decl
jno
lds
sub
rep
enter
adc
sar
jnp
ret
fs
cmp
mov
mov
test
dec
das
push
fldenv
in
jg
scas
pop
sbb
and
int3
fwait
cmc
stos
fcoms
ds
mov
cmp
pop
cld
ljmp
pop
aad
lret
jae
adc
sub
jecxz
pop
icebp
mov
cmpsb
cmp
call
and
fcmovnu
mov
dec
adcb
shrl
outsl
cmp
jge
loop
pop
xor
mov
xor
lret
aaa
dec
ret
mov
rcr
inc
inc
dec
test
mov
add
arpl
dec
aad
dec
mov
xor
test
jmp
out
sbb
pushw
scas
fnstsw
adc
inc
lods
mov
out
cltd
and
cmp
out
jae
test
push
orb
mov
fstl
add
mov
int
or
ljmp
aam
jg
cs
xchg
push
mov
or
rolb
pop
out
cld
incl
add
xchg
cmp
pop
add
inc
sub
mov
call
cld
xor
outsl
xchg
insl
inc
push
inc
rcr
inc
push
mov
addl
ja
incl
jmp
xlat
xlat
sbb
inc
push
fiadds
pushl
stos
jno
es
and
add
push
jbe
rcrl
add
xor
cwtl
lcall
je
fwait
outsl
jecxz
addr16
shrl
lahf
insb
sbb
mov
push
push
popf
sub
sub
cmp
push
mov
inc
ja
rcr
cltd
insb
std
sub
add
pop
push
jbe
push
movsb
pushf
mov
cli
incl
pop
jno
pop
dec
ret
into
adc
lcall
jl
pop
in
ljmp
sbb
sub
ds
mov
popa
fists
dec
call
mull
jne
xor
jno
std
mov
xchg
js
cmpsl
sahf
xchg
inc
ss
cli
xor
fldt
add
mov
mov
jl
cmpsb
inc
cmp
call
mov
ja
cmp
or
pop
pop
pop
movsb
popf
mov
add
sub
cwtl
pop
std
mov
mov
lods
dec
adc
rcrl
sbb
idivb
xchg
add
push
jmp
adc
dec
jp
add
fcompl
ficoml
jg
bound
decl
lods
sub
mov
enter
pop
jmp
push
test
in
xchg
imul
fcomi
inc
pop
sbb
adc
sub
jmp
jbe
in
ffreep
lea
jmp
insl
inc
dec
or
cmp
ret
clc
lret
pop
repnz
cmpsb
pop
lds
rorb
call
int3
les
lcall
push
sbb
scas
leave
je
movl
dec
sar
shr
test
outsl
nop
dec
add
popf
push
out
out
jg
fsubr
jmp
inc
lret
lods
cwtl
adc
xor
sub
mov
mov
popa
cmp
gs
decl
cltd
repnz
add
push
icebp
loop
cwtl
add
adc
push
rclb
cli
push
cs
mov
jp
pop
jle
add
movsl
xchg
push
xorb
add
test
cmp
xlat
jecxz
ret
pop
test
movsl
leave
sbb
cwtl
test
scas
not
and
jecxz
rolb
decl
xor
dec
or
aam
daa
shll
sahf
mov
mov
lret
ljmp
xchg
test
pop
mov
cmp
sbb
sar
cmp
ljmp
mov
push
push
add
decl
pushf
push
gs
out
sub
andl
ljmp
pushf
pop
pop
jbe
mov
orb
push
test
popa
mov
cmp
xchg
imul
jns
ss
mov
mov
adc
pop
sub
pushf
aam
xchg
push
dec
ret
sub
pop
ret
leave
lds
mov
imul
mov
sbb
mov
push
or
pushl
mov
mov
or
push
das
js
popf
and
gs
push
and
repz
push
dec
pop
int3
sbbl
lea
sub
inc
lcall
pop
mov
into
cmp
add
aaa
inc
and
jnp
loopne
ljmp
pop
adc
leave
shl
dec
ds
aas
pop
or
in
cmpsb
xchg
push
mov
inc
icebp
fdivrp
inc
pop
or
fmulp
stos
push
mov
push
sub
je
or
mov
das
cli
jmp
sbb
mov
jne
cltd
xor
inc
sbb
pop
int
xchg
loope
xchg
imul
lcall
cmpsb
js
lods
lret
xchg
sti
mov
hlt
push
lea
pop
sahf
cmpsb
mov
nop
xchg
decl
sbb
xor
sub
stc
add
imul
jmp
ljmp
lock
and
out
pop
push
repnz
cmpsl
insl
mov
xor
mov
sub
incl
dec
xchg
fdivl
je
dec
cld
jo
cld
mov
lahf
lret
push
sub
add
es
cmp
imul
incb
jle
hlt
lock
rcr
pushl
xchg
pop
into
ljmp
insl
test
xor
pop
movsl
mov
pop
mov
loope
dec
movsl
mov
out
fcmovbe
rclb
pop
xchg
push
push
push
fcomip
push
test
adc
enter
jecxz
jecxz
fs
jecxz
mov
jge
ljmp
xor
incb
cvtdq2ps
and
test
mov
inc
jge
add
jg
cmp
in
jb
enter
inc
mov
fstl
pop
jp
xchg
inc
std
mov
inc
shll
jno
push
shlb
insb
adc
pop
xor
lods
cmc
cld
dec
xchg
and
test
pushl
inc
xchg
ja
and
push
jg
ficomps
fimuls
xchg
and
fisttps
fldt
jmp
jmp
into
das
pop
sbb
into
addl
jne
pushl
arpl
aad
cmp
cld
xor
push
sbb
insb
cltd
inc
and
clc
jle
mov
call
or
mov
pop
and
xor
ja
data16
rorl
jp
push
iret
insb
push
jg
incb
pminub
inc
add
xchg
fcos
incl
aad
sahf
iret
out
cltd
scas
pop
jp
mov
xchg
or
push
mul
add
mov
pop
outsl
mov
mov
fstps
inc
sbb
rorb
pop
sti
sbb
mov
xor
cmp
std
leave
mov
pop
sbbl
xor
push
xor
stos
daa
ja
jb
mov
push
sub
dec
arpl
push
cli
cmp
or
mov
stos
and
dec
lock
cmp
test
int3
sbb
pushl
sub
out
mov
test
pop
xlat
xor
hlt
dec
ror
mov
pushl
pop
stos
outsb
ficompl
mov
ss
cmc
ret
loope
add
outsl
pop
outsb
mov
jg
decl
imul
push
push
popl
dec
mov
and
ljmp
sbb
scas
cmp
jp
pushf
bound
mov
pop
loop
jae
mov
ret
jmp
pop
mov
enter
incl
pushf
je
sbb
stc
and
popa
stc
mov
xchg
or
shlb
jg
movsb
pushl
cs
dec
sub
mov
push
fisttpl
iret
sub
sub
inc
decl
lock
test
inc
popa
das
jge
pop
dec
sbb
adc
push
and
fimull
test
cmp
xlat
es
imul
xor
sarl
decl
push
jae
adc
pushf
push
push
or
pusha
xchg
loop
mov
ret
enter
nop
call
and
and
dec
mov
xlat
dec
arpl
sub
sbb
popa
dec
xchg
mov
loopne
jle
pop
int
fldenv
jl
mov
jbe
test
jne
cmc
jmp
and
mov
sub
xor
xlat
inc
push
sbbb
dec
roll
xchg
pop
movsb
mov
jg
jmp
mov
add
or
fucomi
add
mov
pushl
outsl
lds
int3
xchg
cmp
lcall
sahf
aaa
loope
out
mov
adc
sub
lcall
push
icebp
popf
xchg
test
jo
jns
stos
int
cmc
flds
ret
mov
xor
pushf
mov
dec
popa
sbb
mov
mov
cmp
pop
test
push
ljmp
xchg
add
popf
jo
in
pop
loopne
mov
gs
movl
mov
jmp
mov
pusha
stc
iret
push
sti
cwtl
or
cmpsb
mov
pop
mov
pusha
push
xchg
xor
sub
incl
or
xchg
in
jb
jl
mov
out
cmp
scas
sbb
jmp
mov
andb
out
cmpsl
ret
data16
rcll
lock
rol
js
popl
andb
repnz
lahf
inc
mov
pop
in
dec
jle
sbb
xchg
jbe
in
cmp
iret
repnz
out
js
pop
mov
mov
or
jmp
jl
rorl
inc
dec
xchg
or
out
cmp
rcrl
call
adc
rorb
int3
add
filds
adc
lds
xor
inc
mov
xchg
cmp
inc
jge
cmp
outsl
add
outsb
fsincos
dec
scas
pop
ret
push
xchg
xlat
pushf
iret
lock
lcall
cmpsl
push
pop
popf
insb
not
jp
mov
mov
xchg
lods
xor
call
push
cli
insb
pusha
or
inc
test
gs
aas
sbb
jmp
pop
rorb
decl
loope
cld
in
xor
ja
bound
icebp
decl
lea
ja
jb
bound
cmp
mov
loope
fists
mov
leave
xor
sbb
faddl
insl
jns
std
mov
sub
int
dec
ret
mov
dec
stos
das
notl
imulb
cmp
fwait
pop
loopne
flds
pop
imul
add
mov
daa
push
call
cmp
and
cs
cltd
les
mov
xor
pop
in
mov
dec
in
and
pop
cmp
xchg
push
test
movb
es
in
pop
add
adc
add
inc
jb
jo
int3
clts
jmp
iret
aaa
jl
or
mov
in
popa
cmp
fdivl
mov
pop
call
cmp
adc
inc
aad
movsb
pushf
loop
shl
and
pop
lret
lahf
mul
sbb
stos
jmp
inc
pop
scas
repnz
iret
xor
or
pop
in
sbb
cli
outsb
jne
cmpb
cld
push
ljmp
std
mov
or
cli
rorl
bound
sti
push
xor
adc
cltd
aad
or
sbb
mov
sub
ds
lcall
or
ljmp
mov
call
push
xor
sti
loope
pop
movsb
pop
cmp
adc
ljmp
mov
lahf
popf
add
in
or
ja
mov
xchg
and
xchg
mov
ljmp
xcrypt-ctr
cmpsl
pop
ret
test
fwait
mov
in
sbb
fdivrp
mov
pushf
inc
adc
mov
int3
xchg
pop
lea
lcall
sti
pop
mov
cmp
push
push
mov
ljmp
aad
xchg
xor
in
xchg
cmp
dec
mov
sbb
pushl
and
clc
xor
rcr
into
sub
fs
mov
stos
fistl
gs
adc
movsb
push
jecxz
out
jmp
insb
mov
lret
or
mov
call
adcb
decl
pop
ja
je
mov
xor
enter
adc
pop
scas
call
stos
or
sub
scas
mov
sbb
mov
fcomip
pushl
and
lret
sbb
xlat
jmp
jecxz
ds
mov
inc
jb
addb
decl
aas
shll
pop
test
mov
lods
pop
out
mov
jo
mov
cmp
jg
fists
xchg
sub
pop
mov
inc
repz
pusha
jbe
mov
inc
lds
mov
pop
enter
das
add
add
outsl
out
and
movsl
ficoms
aad
mov
js
das
arpl
repnz
or
xor
dec
add
lcall
sub
xor
shl
addr16
sub
push
sti
fbld
xchg
or
ljmp
movsb
aaa
sub
ret
decl
lcall
cmp
js
stos
sbb
sub
jg
fisttps
cmpsl
dec
in
inc
jmp
inc
pusha
lods
shrb
sbb
and
lcall
in
xchg
sub
pusha
lods
sub
shl
inc
or
inc
xchg
lret
decl
jmp
repnz
inc
mov
sbb
sbb
cltd
rorl
fsubr
dec
pop
pop
xchg
das
inc
jne
mov
leave
lret
inc
sbb
and
scas
clc
incl
stos
stos
push
test
xchg
outsb
movsb
cli
das
cmp
pop
lcall
icebp
mov
sbbb
repnz
adc
call
cld
mov
stc
cwtl
xchg
lahf
adc
adc
in
shlb
aam
loope
arpl
aaa
cld
ljmp
dec
dec
outsb
mov
adc
push
inc
sti
dec
lds
sar
adcl
sbb
cwtl
leave
out
rorb
sbb
fstp
lock
call
iret
pop
jnp
insb
mov
cmp
or
push
push
pushf
sar
adc
incl
dec
stc
aas
int3
insb
test
inc
pusha
cltd
or
sbb
and
ss
jne
arpl
test
jnp
in
fbld
dec
shl
mov
out
xlat
jmp
jae
push
popa
add
clc
shlb
xchg
add
mov
push
shlb
xor
inc
lret
incl
orl
pop
mov
mov
leave
mov
xchg
decl
int3
mov
idiv
xor
lcall
incl
ret
sub
sub
aam
pop
xor
mov
pusha
adc
push
push
mov
jmp
rcrb
jne
negl
xor
mov
bound
xchg
loop
repz
cld
decl
lcall
add
insl
dec
shlb
insl
pusha
sbb
jmp
mov
jbe
adc
mov
lock
push
in
test
jnp
jmp
xor
xchg
insl
mov
push
xchg
dec
push
sti
sbb
fld1
jb
loopne
cmp
add
out
sub
stos
jo
xor
cs
test
jb
rorl
fucomi
call
sbb
outsl
loop
loope
inc
icebp
mov
mov
pop
mov
lret
inc
lret
mov
call
in
subb
icebp
nop
mov
and
aas
outsl
addr16
xchg
xchg
and
ljmp
sub
mov
sub
xchg
dec
mov
xchg
xor
jae
pushl
cmpsb
andl
lea
mov
pushw
icebp
jl
cltd
cmp
dec
stos
decl
pop
mov
pop
loop
pop
into
cmp
jecxz
lock
decl
push
jae
test
shl
insb
cmp
pop
pop
mov
mov
jmp
xchg
decl
jmp
xor
cmp
es
mov
lcall
or
into
test
pop
mov
fs
and
mov
idiv
jmp
inc
cltd
call
cmc
int3
lea
hlt
push
push
push
push
adc
push
dec
das
adc
andb
sar
pushl
pop
sti
inc
mov
int
and
lods
mov
push
dec
or
stc
adc
jmp
pop
lret
fnstsw
std
xchg
fisttps
pop
mov
mov
fldl
and
xor
jmp
sahf
leave
pop
mov
leave
mov
jno
daa
testb
ljmp
clc
cmp
and
icebp
aas
adc
add
fstpl
dec
lds
sub
lcall
pop
xchg
fistpl
cld
cmc
out
js
jecxz
xchg
fimull
sti
outsb
adc
pop
push
out
mov
sbb
jg
scas
jmp
xor
lea
pop
pop
mov
adc
mov
jmp
iret
mov
xorl
pushf
addr16
ret
push
adc
dec
and
repnz
xorb
mov
addb
jmp
pushl
std
xchg
mov
jo
popf
ret
push
and
push
fdivl
dec
mov
iret
dec
inc
sbb
inc
inc
sahf
add
sub
push
div
sub
test
sbb
pop
std
jmp
cltd
sbb
dec
mov
mov
or
add
insl
dec
call
lret
xor
mov
or
ljmp
cmp
sbb
jmp
push
dec
cmp
push
add
push
and
movd
xor
lret
in
repz
cmp
lea
xchg
icebp
add
push
mov
aas
sti
mov
repnz
clc
sub
incl
or
fs
lea
adcl
lea
dec
adc
mov
and
inc
jl
lcall
inc
enter
xchg
cli
dec
das
outsl
movsl
int
mov
enter
mov
xor
ljmp
add
pop
in
dec
clc
dec
inc
pop
stos
pushf
test
dec
je
xchg
adc
pop
in
call
decl
mov
cli
inc
jecxz
mov
ret
jmp
test
cmc
std
movsb
cmpsl
shlb
mov
lcall
sti
mov
and
rcrl
out
mov
fsubrs
cmp
lods
adc
jns
test
or
decl
sub
enter
jb
sbb
fisttpl
cli
lods
loope
decl
or
inc
inc
pop
fcom
jne
or
add
icebp
incl
xchg
sbb
mov
mov
dec
aas
push
movsl
dec
fcomp
pop
and
ljmp
lret
mov
mov
nop
add
xchg
jae
push
dec
sbb
sti
iret
inc
in
mov
int3
hlt
stos
fsubs
adc
jnp
inc
fisubrs
call
and
xor
sarb
mov
sub
sar
sub
pop
push
sbb
in
pextrw
fwait
sar
jl
cmpsb
orl
mov
push
hlt
cmp
out
mov
pop
mov
dec
jae
decl
enter
scas
int
dec
dec
test
mov
jmp
lods
pop
mov
and
sub
enter
sbb
mov
aam
mov
push
icebp
shr
pop
sahf
iret
xchg
scas
xor
fistpll
or
rcrb
dec
jae
xchg
orb
mov
lret
jl
lret
mov
inc
push
ljmp
outsl
jl
scas
add
sbb
mov
dec
adc
leave
cld
xchg
decl
call
fstp
push
imul
in
out
call
inc
xorb
call
mov
sbb
ds
addr16
rcr
movsl
test
cmp
jg
jbe
push
mov
pop
mov
sbb
pop
daa
mov
mov
jmp
cmovb
mov
or
jo
pop
mov
sbb
hlt
inc
mull
inc
lcall
and
xchg
insb
out
sub
cmp
cmp
jecxz
dec
cmp
daa
scas
pop
pop
sbb
ljmp
ljmp
dec
mov
divl
es
ja
cmc
nop
xchg
das
aam
push
cld
movsl
jmp
jg
ret
push
or
test
xchg
in
adc
xlat
sub
and
jp
decl
push
ja
and
xor
or
ja
mov
cli
pop
xchg
call
xchg
out
add
jmp
sub
or
sbbl
xor
fxch
daa
or
out
or
pushf
adc
sub
sub
inc
shl
je
or
cmp
xchg
lock
push
xor
pop
jge
mov
or
sarb
push
xchg
cmpsl
leave
inc
mov
adc
je
popa
jl,pn
sub
inc
insl
mov
mov
incl
outsl
dec
ret
pop
mov
mov
movsl
out
fisttps
jae
lret
jmp
xor
pushl
dec
mov
sub
push
mov
sbb
mov
ja
mov
je
cwtl
shll
out
andb
nop
mov
in
out
xor
mov
adc
pop
out
add
in
enter
add
aam
and
pop
xor
add
loope
cli
jmp
call
cmp
aad
mov
xorb
enter
push
in
jl
bound
lcall
jecxz
inc
ret
jnp
into
xlat
int
cmp
fidivrl
lret
loope
dec
pop
xor
andb
stc
cmp
andl
inc
js
mov
xchg
cmp
fstl
adc
pop
icebp
xchg
shll
push
loopne
leave
fidivs
xor
add
jb
push
pushl
sbb
mov
mov
cltd
mov
aad
mov
and
jbe
rclb
inc
cmp
xchg
icebp
dec
sti
rol
and
ja
mov
cltd
inc
xchg
cmp
out
xor
adc
out
movsl
mov
and
sub
add
add
pop
xchg
push
pop
incl
cld
ljmp
movsl
lret
dec
cld
test
and
aas
imul
lcall
adc
cld
inc
push
lock
stos
cwtl
stc
js
lcall
pushl
cmpsl
imul
sub
faddl
dec
xchg
xchg
test
mov
decl
or
das
add
fwait
outsb
das
fdivr
arpl
mov
jmp
jo
pop
ffreep
inc
add
pop
pop
add
push
pop
loope
mov
mov
inc
fnstsw
loope
mov
mov
mov
sub
fcoml
mov
dec
test
dec
testb
cmp
pop
mov
sbb
dec
push
pop
sub
push
test
incl
loope
fsubl
xchg
mov
aam
in
shl
adc
pop
xchg
leave
and
inc
mov
push
cs
roll
aam
push
fwait
lahf
lret
js
cmp
call
ret
add
sub
loop
xchg
test
loope
adc
lcall
jg
arpl
jp
rolb
xchg
sbb
ljmp
mov
movsb
mov
in
pop
roll
push
out
leave
jno
outsb
das
cli
pushl
mov
stc
imul
xchg
xor
cmp
or
in
xchg
aaa
mov
shll
ds
jae
stc
lds
dec
mov
pushl
jmp
and
shl
imul
push
movhps
js
pop
adc
jg
cld
out
push
pushl
nop
xor
in
mov
add
cwtl
movsl
pop
pop
cmp
xor
call
and
frstors
xor
jo
push
out
icebp
int
sub
push
mov
push
les
inc
xchg
fcompl
inc
mov
nop
mov
jbe
jecxz
mov
ret
add
pop
jnp
loop
mov
xchg
les
mov
dec
call
xchg
andl
pushf
les
subl
jg
aaa
stos
aam
pop
jecxz
aas
sub
xor
aaa
lods
push
int
pop
mov
xchg
xchg
push
int3
mov
jg
test
push
fdiv
inc
enter
decl
jg
adc
lret
les
leave
dec
push
dec
push
mov
cmp
pop
sub
daa
outsb
popa
sbb
aaa
std
popf
in
addr16
fisttpll
cmp
outsb
inc
pop
pushl
stos
mov
loopne
loopne
mov
fcmovb
and
sub
insb
das
inc
adc
and
pushl
add
ret
lahf
mov
mov
les
bswap
aas
mov
loop
pop
incl
jnp
lahf
push
and
add
bnd
adcb
mov
out
jl
push
out
repz
xchg
mov
cs
jae
push
pop
or
gs
cli
inc
aas
adc
xorb
and
cld
jp
std
dec
test
addr16
lcall
enter
or
cld
in
cli
fld
jle
push
ljmp
jno
mov
jmp
xchg
es
jo
pop
mov
or
les
inc
cli
rcrb
sub
xchg
out
int3
jg
jmp
mov
cwtl
jmp
shll
dec
orl
or
cmp
jmp
inc
sub
xor
test
mov
inc
jnp
loopne
test
test
sbb
jg
pop
dec
mov
cmpsb
mov
lea
aas
sti
std
fdivp
xor
bound
sub
pop
ret
enter
jg
dec
or
push
rcll
out
xchg
sbb
cmp
cmp
sub
sub
mov
repz
sub
mov
mov
xchg
aam
and
decl
lock
test
bound
adc
mov
into
cmp
ljmp
ds
dec
in
aam
cmpb
jnp
addr16
add
xchg
cmp
aas
mov
or
mov
add
inc
inc
incb
pop
stc
daa
dec
mov
mov
add
jmp
pop
jnp
push
xor
mov
cmp
cld
pushl
xor
sbb
bound
jp
iret
arpl
adc
idivl
cmp
fcoms
mov
out
push
adc
psrad
xchg
cmc
or
lcall
or
test
jecxz
mov
pop
aaa
in
ja
call
inc
loope
dec
mov
repz
arpl
inc
jb
lcall
fnstcw
mov
iret
cli
ljmp
mov
xor
jecxz
push
ds
cmp
or
outsl
xor
in
sbb
int
fs
ljmp
adc
movsl
icebp
sub
mov
fs
jne
arpl
xchg
dec
lods
ds
pop
mov
jo
hlt
je
inc
cli
ja
cltd
mov
xchg
sahf
addr16
add
xor
xor
fsubl
pop
and
push
cld
call
sub
mov
xor
mov
inc
daa
sbb
sar
lret
pop
hlt
ljmp
cwtl
cmpsl
mov
out
out
cli
ds
push
fisubrs
sub
cmp
dec
mov
fiadds
cmp
cmp
dec
push
movsl
incl
xlat
push
pop
sbb
sub
sub
xchg
mov
add
lock
lcall
cmp
stos
cmp
dec
push
stos
xor
sar
lods
mov
xchg
data16
pop
pop
enter
rol
imul
lret
scas
adc
orb
sub
push
xchg
dec
outsl
shl
fdivrl
popa
mov
lcall
testb
mov
dec
xlat
cmp
pop
inc
sbb
out
push
call
adc
aam
daa
js
xchg
leave
sbb
aam
mov
xchg
ljmp
cld
inc
add
sub
xor
aas
jb
test
sbb
jne
les
insl
cld
pushl
addr16
negl
into
pop
in
dec
jp
add
or
shrl
cli
sub
pushl
adc
jl
xchg
dec
push
test
mov
int
cwtl
in
pop
int3
push
loope
test
pushl
arpl
push
add
dec
xchg
mov
cld
sahf
loope
fwait
mov
dec
mov
pushf
lock
mov
mov
pop
stos
inc
pop
xchg
je
cmp
mov
adc
mov
jg
out
sub
mov
xor
call
jmp
cwtl
call
and
lcall
cmpsb
xchg
faddl
hlt
jo
jle
push
mov
inc
adc
aad
jg
insb
push
stos
sbb
out
dec
ljmp
clc
xor
mov
xor
pop
aaa
sbb
xchg
mov
movsl
ret
imul
pushl
loopne
xchg
js
imul
dec
sti
divb
scas
in
inc
mov
decl
movsb
out
mov
xchg
adc
lcall
scas
add
lea
lret
je
pushl
cmp
notb
jl
clc
xchg
fwait
imul
into
push
add
mov
loop
incl
xchg
push
mov
lock
mov
cld
scas
adc
sbb
jg
mov
fcmove
and
test
cmp
jg
mov
scas
mov
xor
loopne
sahf
pop
movsb
sub
cmpsb
int3
pop
or
inc
add
test
dec
xchg
pop
xchg
and
xchg
pop
scas
xor
cmp
insb
shlb
and
fsts
incl
rcr
mov
icebp
lahf
adc
adc
mov
es
push
mov
test
or
decl
sub
imul
jnp
mov
mov
fcos
decl
mov
inc
jae
cmp
xlat
push
enter
rcl
subb
inc
jae
or
inc
test
aad
inc
test
inc
sbb
inc
scas
icebp
cmp
mov
aad
dec
mov
add
push
adc
push
dec
cltd
mov
insl
and
jg
add
or
das
test
xchg
orb
adcl
cmp
jle
xchg
outsb
lods
mov
mov
push
adc
enter
out
mov
push
sbb
cmp
push
push
inc
cltd
dec
mov
inc
or
pop
push
in
mov
lret
push
push
adc
xchg
repz
rcrl
gs
std
mov
cmp
ljmp
clc
or
js
jae
lahf
mov
push
or
adc
mov
sbb
adc
jg
jecxz
push
dec
or
shrb
and
cmpsl
or
pushw
fnstsw
jnp
push
bound
cmp
and
icebp
sbb
jb
sub
ss
xchg
jmp
jmp
nop
roll
aaa
inc
mov
adc
mov
negl
das
decl
or
js
inc
sbb
cmpsb
les
testb
fcomip
lcall
jns
xchg
ds
push
sbb
sub
push
in
je
ljmp
dec
cltd
outsl
xor
pop
call
xchg
xlat
fnstenv
shr
jbe
xchg
or
xlat
or
scas
enter
call
mov
pop
pop
or
fcomp
xchg
xchg
cltd
lods
fs
insl
movb
out
insl
sub
jns
mov
add
adc
rolb
add
pop
mov
xlat
ljmp
repnz
pushf
lret
adc
pop
jle
mov
nop
es
dec
and
daa
imul
jg
cli
jb
sti
daa
in
jmp
jp
or
adc
mov
dec
sbb
stc
xchg
lock
pushl
inc
clc
movsl
hlt
or
mov
pop
out
adc
adc
rolb
in
cmp
decl
cmp
mov
std
in
sarb
sbb
hlt
cmp
ljmp
nop
mov
or
sbb
in
gs
fs
mov
lret
jnp
xchg
and
dec
inc
mov
ljmp
sbb
cmp
out
pop
dec
fcom
fwait
inc
inc
pop
inc
shll
lock
sar
lcall
mov
push
lcall
mov
fnsave
lret
incl
pusha
or
xchg
rcrl
rcll
and
flds
fisttpll
decl
jg
pop
call
pop
mov
gs
ja
cmp
cmp
sahf
imul
retw
popf
stos
mov
xor
jnp
stos
and
int3
mov
fcomip
incl
pop
push
imul
mov
ljmpw
adc
jg
popf
sbb
in
inc
dec
pop
cld
pop
push
bound
xor
popf
push
or
out
lcall
aaa
cld
jl
mov
jp
loope
sti
into
fcmovnu
xchg
and
std
xor
out
or
decl
adc
lods
cmp
dec
loopne
mov
xor
ret
mov
out
call
fsts
sbb
icebp
arpl
push
push
cmp
jb,pn
inc
iret
lcall
sahf
dec
mov
push
and
push
xorl
jle
clc
cmp
mov
lahf
mov
mov
popa
jo
in
and
ljmp
sbb
and
pushf
stos
outsl
cmp
adc
cmp
mov
push
icebp
dec
lods
adc
xchg
mov
sub
push
mov
mov
rol
icebp
inc
xchg
icebp
pop
icebp
dec
bound
aaa
jnp
lret
and
ja
inc
cltd
into
rcl
scas
push
jne
cmp
mov
ss
lock
imulb
and
dec
dec
inc
cld
cmpsb
hlt
mov
stos
sub
cmpsb
jmp
mov
enter
mov
je
addl
inc
aas
into
inc
pusha
in
call
lret
sbb
sub
mov
mov
sub
incl
xchg
and
dec
mov
inc
jae
push
sbb
ret
outsb
jmp
inc
lahf
imul
jno
cmp
mov
gs
add
les
call
cmpsl
mov
rcr
cli
insl
das
imul
cmp
out
paddsw
outsb
mov
cmp
test
notl
call
jb
xchg
push
stos
jg
or
xchg
imulb
cltd
jne
out
or
and
add
jno
push
sbb
ljmp
cli
addr16
repz
ljmp
nop
test
andl
xor
pushl
adc
push
cmp
cmp
sahf
daa
sub
je
xor
pop
inc
sbb
sbb
jg
xor
enter
aam
xchg
test
jg
outsb
xchg
fwait
inc
rcrb
and
sbb
decb
in
stos
icebp
dec
call
outsl
repnz
sar
jl
cmp
sub
lret
icebp
mov
sarb
cli
xchg
subl
dec
adc
cs
sarl
xchg
xorl
int
inc
mov
push
sbb
stos
cmp
mov
cli
inc
pop
lret
or
fwait
insb
imul
addr16
inc
push
in
aaa
cmpsb
pop
int
lds
fldl
ljmp
or
ret
add
mov
and
push
and
into
addr16
jg
push
in
jmp
cmc
or
mov
push
mov
imul
push
stc
pop
push
loope
push
xchg
in
incl
mov
xor
xchg
shlb
push
adc
ror
hlt
cmp
clc
fists
dec
incl
and
scas
repz
cld
lock
mov
out
pop
cmp
push
in
pushl
out
inc
pop
lahf
test
dec
enter
push
and
pop
adc
loopne
mov
and
dec
add
cmp
mov
cwtl
inc
insl
ffreep
call
fiaddl
xchg
mov
out
mov
fidivrl
fimull
mov
fs
call
cld
jmp
add
addl
sbb
sbb
lret
mov
add
jns
int
pop
cmp
shl
movl
ljmp
xchg
and
mov
sub
loope
mov
je
mov
test
jg
je
jp
cmc
ret
xor
adc
mov
pop
mov
sbb
jg
aaa
add
xchg
incl
out
aad
es
xlat
jno
adc
add
jbe
out
clc
movsb
cmpsl
mov
fs
cmp
fsubrl
jbe
inc
popf
jg
mov
dec
test
pushl
adc
mov
aaa
push
pop
int3
cmpsb
mov
mov
pushf
out
mov
add
nop
shlb
push
cmp
call
adc
int
es
out
in
jo,pn
jl
imul
mov
sahf
rcr
loopne
rclb
push
dec
filds
lock
popf
dec
mov
push
sub
fmuls
jp
lods
mov
add
iret
daa
lods
lods
pushf
xchg
adc
mov
es
popa
or
in
shlb
and
insb
mov
cwtl
and
lock
bnd
sti
mov
mov
mov
push
in
aas
in
out
cmc
inc
cs
loop
sbb
sub
mov
int
test
idiv
ljmp
test
push
jb
jmp
movsb
add
mov
mov
xor
mov
xchg
call
popa
push
xor
push
dec
push
lcall
stos
xchg
mov
jmp
pop
lret
jle
mov
jmp
cli
lds
fldt
sbb
out
clc
jmp
inc
pop
lods
pop
xor
cmc
jbe
push
into
inc
fwait
ljmp
lock
mov
pushl
jo
scas
aam
fldt
mov
fstps
loopne
nop
daa
mov
add
pop
cld
call
popw
xchg
lods
add
std
mov
push
loop
mov
mov
jmp
arpl
sahf
int3
stc
dec
xchg
push
xor
add
fwait
sbb
cwtl
icebp
sub
das
clc
call
push
lahf
sub
ss
shrl
jo
or
mov
add
jno
ret
xchg
ss
fildl
cmpsl
push
mov
aas
subl
mov
push
xor
mov
fsubrl
loope
sub
into
lea
sub
leave
jno
scas
mov
outsb
pop
mov
jge
mov
mov
jae
sub
addr16
cmpsl
lea
mov
mov
out
movsl
mov
jecxz
jl
rcrb
push
cwtl
cmpsb
je
enter
fcomip
hlt
and
pop
mov
loopne
mov
insb
cs
lahf
sti
jg
add
clc
mov
pop
rclb
and
int
mov
pushl
mov
cmp
mov
push
xor
or
scas
jb
mov
clc
push
sbb
dec
mov
insb
incl
push
or
mov
js
es
out
push
adc
faddl
inc
push
lods
dec
mov
lcall
sarl
mov
push
icebp
sub
rcr
ljmp
xor
aam
daa
or
push
fisubs
fcoml
push
int3
ffree
mov
or
sahf
mov
enter
test
sub
ds
cmpsb
aas
jg
loop
std
xchg
bound
jmp
xchg
jl
popf
cltd
add
fdivs
push
sub
lods
pop
pop
rorb
push
lcall
mov
sbb
jmp
push
dec
dec
push
sub
cmp
aam
xlat
mov
loope
push
push
rcl
xchg
mov
popa
pushaw
xorb
incl
pop
into
mov
sub
clc
ret
loope
insl
or
push
in
sub
imul
sub
test
stc
std
loope
add
jle
ret
xor
xchg
push
mov
dec
or
aad
int
ljmp
sub
push
push
popf
pop
add
mov
cmp
mov
cmp
bound
fcomip
test
in
fimull
xchg
adc
aam
mov
lods
push
push
pop
out
into
pop
mov
std
mov
mov
pop
rorb
test
jl
incl
in
sti
scas
in
xor
aaa
push
rorb
imul
andnps
xor
xor
decl
fimuls
and
clc
jmp
mov
xchg
shl
mov
inc
xor
cmp
push
mov
fucomp
lahf
adc
je
mov
add
pop
or
into
mov
nop
repnz
xchg
lcall
mov
mov
scas
mov
inc
push
adc
jmp
outsb
sub
inc
mov
mov
in
mov
sub
insl
out
sbb
call
loopne
mov
or
lock
sbb
fwait
hlt
cmpsl
mov
ja
insl
cmpsl
cmp
ficoml
xor
out
flds
mov
xchg
ret
decl
popf
jns
cmp
in
adc
sub
cmc
cmpsb
jns
gs
cmpb
flds
ficomps
popa
and
push
rcll
ljmp
pop
stc
dec
lret
aaa
adc
call
xchg
rolb
lods
mov
orl
xor
shl
ds
bound
leave
inc
mov
jbe
mov
xorb
out
outsb
sub
stos
ficoml
ljmp
jnp
repz
jle
pop
push
xor
shll
repz
xchg
xchg
pop
shrl
and
fldl
out
in
aad
fs
mov
popf
js
cltd
pop
mov
add
aam
fdivr
fcomip
jmp
and
daa
jns
cmp
in
cs
fisttps
ja
fldln2
jne
pushl
or
lock
test
pushf
xchg
xlat
ret
jno
fdiv
add
xchg
dec
mov
mov
sbb
popf
inc
sbb
add
mov
hlt
push
jb
push
incl
ds
clc
xchg
pusha
add
push
inc
daa
xchg
and
in
mov
stos
addl
dec
cmp
mov
pusha
and
sub
xor
ret
dec
out
dec
call
mov
inc
lret
out
imul
mov
xchg
pushf
pop
or
ljmp
adcb
mov
inc
and
push
xor
enter
or
gs
std
jg
push
clc
testb
or
sub
or
loop
mov
jae
fldt
push
repz
jne
rol
push
leave
insb
icebp
iret
aad
inc
and
loop
xchg
xchg
lahf
orl
sbb
dec
imul
xor
in
xor
pop
int
jle
rep
sbb
mov
cmp
push
inc
ror
cwtl
push
pop
std
adc
mov
pop
cmpb
testl
scas
leave
dec
sbb
dec
iret
sbb
push
mov
or
dec
js
cli
and
xor
sub
pushl
fstpl
mov
lret
cmp
jl
jmp
or
cmp
cs
pushl
pop
hlt
jo
dec
repz
out
daa
int
lock
test
push
push
fsqrt
sub
push
adc
xor
sbb
and
lods
and
xor
movsl
nop
sub
pop
fadd
push
sar
add
fmull
shrl
ds
rorb
or
or
mov
jae
rcl
pop
lds
or
mov
in
notb
pop
pop
leave
xchg
lea
cld
repz
inc
ret
sbb
mov
mov
pushf
call
ljmp
out
cmp
sub
clc
push
clc
bound
stos
inc
movsl
pusha
jp
rorb
aad
decl
sbb
dec
push
dec
stc
cmp
mov
jmp
sahf
adc
mov
in
jno
adc
rcrl
shll
mov
dec
dec
adc
push
adc
fdivr
out
fsub
add
gs
xor
sbb
cmp
dec
sub
setae
pushl
out
mov
shl
push
mov
dec
mov
lds
pop
inc
push
loope
jge
or
ljmp
or
and
jecxz
adc
dec
mov
sub
clc
incl
cmp
adc
xorb
mov
jns
popa
push
sahf
scas
int3
mov
xor
push
std
fcomip
and
aaa
mov
jo
push
cmp
or
fistps
fcompl
ret
fdivs
sbb
movsb
mov
add
enter
add
movsl
adcb
daa
cwtl
ds
jmp
or
test
div
cmp
mov
scas
push
adc
into
ja
inc
xor
fidivl
sub
mov
stc
jg
dec
and
or
xor
pop
lea
in
pop
mov
push
push
or
mov
mov
xchg
push
aam
dec
fildl
jne
addr16
pushl
pop
scas
in
pushf
pushf
mov
xchg
xor
adc
add
inc
mov
in
incl
scas
cmp
addr16
adc
clc
mov
fdivrp
push
out
cld
lcall
ljmp
insl
int
sbb
push
imulb
mov
jge
lea
in
pop
out
push
pop
jl
imul
push
test
push
icebp
movsl
xlat
and
rorb
lods
adc
movzwl
and
outsb
call
ljmp
cmpsb
sahf
mov
pop
cmpsb
push
pop
in
test
inc
mov
data16
inc
lcall
into
loope
mov
add
sbb
out
fsubl
xorb
push
inc
imul
jmp
es
testb
popf
rcrl
pop
mov
pushl
cmp
or
inc
mulb
inc
les
adcl
xor
sbb
jg
adcb
popa
shlb
icebp
mov
fsubr
xchg
cmp
mov
clc
jg
call
popf
sub
pop
jb
and
cmpsb
out
call
fld1
pop
into
lcall
jg
mov
lcall
push
mov
sbb
mov
xchg
dec
pop
pop
inc
lret
cmp
in
ret
push
in
adc
in
pushl
lods
stc
cmpsb
pop
jbe
repnz
jecxz
arpl
aad
jge
jl
mov
xchg
xlat
adc
in
fmuls
mov
insl
adc
dec
idivl
pop
inc
les
out
push
call
in
mov
ljmp
movsb
jle
sub
cmpsl
sti
jnp
ljmp
imul
add
icebp
dec
cld
insb
enter
call
outsb
xchg
mov
lret
pop
js
adc
dec
pop
daa
imul
addr16
jmp
sbb
xchg
mov
add
pop
xchg
adcb
xchg
add
scas
lea
add
dec
out
mov
movsb
ljmp
mov
cli
inc
add
movl
or
ljmp
faddl
push
loopne
cmp
popf
add
dec
fs
mov
cld
or
inc
add
push
fists
dec
add
inc
cld
out
addl
or
nop
dec
cmc
adc
inc
cmp
mov
imul
add
or
xchg
cwtl
clc
in
test
sarl
add
loope
insl
lret
mov
shll
repz
jmp
aam
clc
js
add
push
xchg
gs
sub
ds
or
ja
idivl
mov
mov
pop
call
cmp
adc
push
ljmp
loope
xor
mov
xchg
sarl
andb
cmp
and
cs
or
add
mov
xor
add
out
sub
mov
pop
nop
push
adc
push
sbb
fdivrp
dec
insb
xlat
adc
call
std
mov
push
inc
lret
inc
pop
push
mov
out
push
jo
mov
inc
rcrl
lahf
jg
shll
clc
xor
lret
and
outsb
or
enter
popf
push
add
std
pop
or
std
outsb
pop
lcall
aas
cld
add
in
movsl
stos
les
push
inc
xchg
cld
or
add
or
pop
jno
mov
aad
sub
aam
mov
roll
xorb
mov
xchg
pop
xchg
scas
jae
sub
scas
loope
in
fnstenv
loopne
popf
dec
add
adc
das
rcrb
mov
loopne
lcall
jg
stos
xor
dec
pushf
push
or
in
mov
ficoml
or
inc
mov
add
pop
pop
sub
xor
hlt
mov
xor
jp
test
int
push
dec
fdivs
mov
test
pop
inc
or
xor
lcall
sub
adc
mov
lea
push
cs
inc
adc
loopne
xchg
jp
fimull
cld
shlb
jmp
pushf
popa
lret
aaa
push
out
xor
mov
aas
or
jg
hlt
push
pusha
xchg
fstpl
jb
test
mov
add
push
adc
adc
addb
xor
mov
cld
inc
sbb
inc
cs
int3
or
inc
adc
imul
mov
test
pop
add
test
mov
xchg
pop
hlt
lahf
jae
dec
loop
repz
cmpsb
xor
and
push
inc
mov
out
rol
hlt
pop
push
je
cmp
stc
ds
adc
adc
jle
dec
xchg
xor
inc
decl
mov
xlat
pop
lea
jnp,pn
ret
jle
xor
test
mov
test
inc
loopne
icebp
jmp
lock
add
jno
lods
in
outsl
hlt
mov
xchg
mov
test
jmp
scas
jecxz
loopne
cmp
out
push
mov
add
pushl
mov
cmp
iret
je
cmpsb
mov
stos
sbb
nop
or
sub
xchg
addb
inc
in
stos
fcom
xchg
outsl
in
add
sub
repnz
xchg
mov
sbb
dec
pop
mov
mov
bound
test
ret
daa
adc
xor
les
cwtl
pop
test
fcoms
lcall
rolb
push
roll
jmp
test
ror
or
mov
sbb
jecxz
test
pop
jne
popf
jno
mov
es
or
jecxz
pusha
sbb
cld
aas
jecxz
into
sub
bound
scas
cltd
mov
lret
std
outsl
ljmp
cmp
test
lods
je,pn
push
xchg
pusha
inc
lods
loopne
ss
cmpsb
sbb
out
and
dec
mov
inc
fimuls
roll
mov
xlat
out
cwtl
loope
or
pop
in
and
fdivs
ljmp
sbb
and
rcrb
cwtl
dec
cld
nop
mov
das
mov
cmp
lcall
cmpsb
cmp
rolb
xor
mov
cwtl
fistpl
xor
push
outsl
rcll
xor
and
bound
cld
and
add
pusha
mov
loopne
js
add
adc
push
in
fstp
push
and
lock
hlt
xor
or
cmp
cmp
adc
sahf
sub
jmp
inc
lcall
loope
in
add
sub
into
add
lds
rclb
cmpsb
test
mov
gs
mov
cltd
daa
in
xchg
jle
cmp
push
ss
cwtl
or
jne
outsl
idivl
mov
shlb
adc
sub
add
lods
cld
stc
clc
xor
jbe
add
xor
mov
pop
sbb
or
or
mov
mov
int
adc
call
mov
push
xchg
sub
test
test
mov
cmp
jns
pop
ljmp
adc
shl
add
loopne
and
adc
xor
adc
ljmp
cs
sbb
out
mov
ss
sahf
lahf
xor
jl
and
mov
add
icebp
jo
filds
cwtl
orl
xchg
mov
cmp
or
in
out
xor
push
or
mov
ds
add
xor
enter
jo
push
pusha
push
pop
popa
inc
xchg
jp
ret
aaa
xchg
das
sub
add
sbb
add
cs
test
test
add
arpl
outsb
push
dec
sub
pop
fnstenv
inc
and
mov
daa
ret
stos
and
push
pushf
xor
cmp
or
ds
lret
das
mov
and
and
rol
pushl
sbb
or
mov
sbb
inc
es
lcall
in
lahf
rolb
mov
hlt
popa
xor
or
mov
jle
dec
hlt
xor
ss
mov
decl
cmpb
push
adc
dec
adc
xor
pushf
sub
cmpsb
ljmp
xchg
add
sbb
pop
fimuls
sbb
sti
cmp
inc
test
and
mov
idivb
jb
mov
addb
pop
outsb
inc
movsb
lahf
mov
mov
fstenv
cmp
jbe
inc
mov
subl
in
inc
sbbb
inc
add
pop
xchg
adcb
test
mov
inc
mov
or
xchg
stos
adc
loopne
addb
aas
sub
jle
pop
push
hlt
sar
sub
adc
inc
mov
rolb
adc
pop
and
cmp
and
sbb
cmp
fs
ljmp
in
scas
insl
pop
push
imul
mov
push
add
add
or
mov
imul
jnp
in
inc
subb
jmp
shl
jl
sbb
movsl
cmpsl
jg
lods
aaa
cmp
mov
test
push
es
pop
mov
jo
cmpsb
sarb
mov
stos
add
mov
test
fstl
jbe
aas
js
cmp
add
icebp
sub
mov
push
mov
xor
jo
add
arpl
dec
ljmp
sub
push
adc
in
or
xchg
mov
or
xor
addl
sub
movsb
xchg
imul
shrl
xchg
stc
test
sbb
add
mov
out
in
xchg
icebp
or
fisubrl
push
pop
fsubrl
push
mov
cmp
sbb
icebp
add
ss
xchg
mov
loopne
mov
sbb
ror
rclb
push
or
add
clc
in
loopne
add
sahf
insl
data16
jo
loop
jl
mov
jmp
hlt
fbstp
push
fs
jecxz
cmc
jo
mov
sub
sub
aam
sub
loope
jle
mov
jg
ljmp
push
and
mov
jmp
xchg
xchg
cmpsb
ljmp
mov
sbb
mov
xor
mov
test
push
roll
icebp
sbb
sub
inc
xchg
or
push
mov
push
outsl
mov
ret
pop
jbe
and
or
lods
scas
in
enter
add
or
jno
roll
test
xor
mov
jbe
rolb
mov
stos
add
sbb
lea
push
sbb
push
dec
les
xchg
mov
xor
js
adc
stos
in
and
mov
lock
dec
mov
nop
jl
mov
dec
mov
rcr
cmp
xor
inc
out
syscall
mov
out
pop
repz
nop
push
cmpps
push
fisttps
js
dec
xor
notl
jle
add
pop
fs
pop
jo
jg
repnz
cmp
sub
or
mov
js
sti
idivl
xor
cli
xchg
rcl
push
fwait
mov
pop
lods
fdivs
or
addr16
push
test
pushf
mov
jns
lods
fnstcw
movsl
fidivrs
sbb
enter
adc
addr16
fcomip
aaa
call
add
mov
lods
mov
jp
cmp
or
outsb
clc
aaa
sbb
out
xchg
clc
and
push
and
and
add
add
cmp
jle
std
pop
ds
int3
mov
lret
mov
xchg
inc
cwtl
repnz
nop
or
add
lock
xor
mov
das
pop
add
or
aas
jle
jle
dec
xor
sti
inc
sbb
mov
add
clc
mov
inc
lods
sub
aam
mov
jle
sub
aam
inc
pusha
stos
fs
jo
in
sbbl
loopne
orb
add
das
mov
sub
dec
loopne
out
ret
dec
lea
jbe
call
inc
cwtl
dec
pop
cmp
xor
dec
inc
int
or
pop
cld
ja
mov
inc
iret
in
aad
and
push
cmp
xor
xchg
and
sub
ret
mov
lcall
scas
gs
sbb
shll
test
xchg
mov
jg
sbb
cs
inc
inc
repnz
push
add
pop
jg
outsl
mov
mov
sbb
ret
jg
clc
incl
test
and
stos
adc
jae
mov
cmp
or
mov
pusha
lret
push
push
sbb
push
clc
pop
js
fists
and
xlat
push
repz
fildl
jecxz
or
mov
sti
and
add
sub
add
sti
or
ljmp
cmp
push
push
inc
pop
mov
pop
and
push
mov
and
fcoms
adc
cli
lods
inc
sub
cmpsl
sbb
lcall
jmp
fcompl
and
mov
xchg
and
jg
jecxz
out
dec
and
sbb
test
arpl
pushl
mov
outsl
jns
mov
fldln2
out
mov
bound
xchg
les
mov
inc
push
fisttpll
es
popf
xchg
sahf
scas
dec
push
clc
sub
jns
aaa
adc
lds
loop
pop
les
dec
push
jns
add
mov
hlt
push
fwait
jecxz
and
cwtl
and
call
add
call
jl
mov
adc
lods
rcl
pushl
dec
cmp
xchg
addl
mov
xchg
int
xlat
inc
or
xchg
jg
or
je
jp
add
leave
dec
test
cmp
dec
cmp
ja
loopne
pop
sbb
add
enter
sbb
out
fbstp
xchg
es
mov
jecxz
add
push
xor
test
insl
mov
dec
outsb
fs
jg
test
push
jo
dec
lock
popf
inc
pusha
rcll
mov
out
movsb
outsb
xchg
sbb
xor
test
xor
and
repnz
sbb
sbb
sbb
mov
test
lods
pop
lock
jp
add
xchg
dec
cli
push
rcrb
cmpb
pusha
jno
xlat
cmp
movb
aad
orb
mov
mov
mov
aam
cld
push
pushf
sub
pop
loope
imul
scas
add
cld
test
ljmp
inc
dec
loopne
mov
movsl
leave
ljmp
shrl
jg
add
jae
adc
add
cli
add
out
daa
xchg
push
pop
lock
out
mov
or
and
out
loop
dec
mov
int3
inc
jl
mov
repnz
cmpsl
incl
cmp
cmp
rcrl
sbb
pusha
mov
in
repz
inc
or
cmp
xor
outsl
and
shll
scas
test
fwait
es
adc
rorb
and
fdivrl
adc
cmp
xor
mov
stc
lds
sub
push
fs
rclb
pop
repz
sbb
or
jp
repz
ret
popa
aad
xchg
and
inc
scas
sbb
ret
sbb
out
xor
cmp
inc
aas
push
fs
push
mov
sarl
sbb
stos
jle
sbb
inc
shrl
or
dec
inc
je
jb
mov
cmp
popf
lods
add
out
popf
sbb
jns
jl
je
add
pop
lock
aaa
inc
xchg
andb
ret
ss
dec
lcall
gs
lods
lret
add
mov
and
test
outsl
mov
inc
sbb
sbb
pop
sbb
cmpsb
xchg
sub
hlt
jg
jl
bound
push
cli
pop
loopne
xchg
or
dec
lret
lods
cmc
xor
sub
push
pop
inc
jno
adc
icebp
mov
adc
xchg
sub
in
pop
shl
cmp
pop
std
repnz
lods
js
add
call
pop
xchg
jno
jo
ret
mov
adc
lds
je
push
cltd
push
inc
int
sbb
dec
xor
icebp
inc
push
bound
mov
jb
sub
hlt
stc
inc
aas
imul
push
mov
push
movsl
shlb
mov
pushf
mov
mov
push
sbb
shl
pop
adc
sbb
adc
sbb
fwait
mov
xchg
inc
and
or
inc
mov
lret
insb
popf
dec
out
into
sbb
adc
fisubrl
ljmp
xor
push
adc
hlt
mov
adc
mov
outsb
inc
lock
rcrb
mov
or
daa
dec
pop
push
mov
mov
sbb
jmp
pusha
add
test
cld
stos
add
or
cmp
and
xchg
push
loope
or
std
call
jo
add
inc
jne
or
cld
sub
rcl
call
sbb
outsl
jbe
push
imul
addl
and
mov
adc
hlt
idiv
fildll
adc
subl
sbb
jl
add
mov
leave
cltd
sub
pop
loopne
test
push
xor
pop
sub
or
imul
rclb
mov
jnp
std
int
das
inc
inc
and
popf
mov
stc
add
imul
loop
mov
ja
aaa
xchg
jl
xlat
clc
dec
inc
mov
jg
push
lods
shll
sbb
add
mov
add
std
mov
int3
add
adc
cmp
adc
incl
adc
lret
cmp
pop
and
dec
ss
lds
push
pop
cmp
adc
mov
inc
fadds
imul
movsl
je
fnstcw
push
loop
jmp
mov
mov
xchg
incl
sbb
inc
push
ret
rclb
mov
jnp
cli
inc
mov
pop
dec
imul
mov
cs
aam
inc
jo
sbb
mov
insb
cld
push
enter
sbb
shll
mov
mov
out
fwait
add
pusha
push
sbb
mov
fnstsw
and
and
adc
cltd
lods
mov
add
add
orb
gs
ds
inc
fwait
lock
test
dec
mov
dec
mov
rcrl
mov
test
xchg
pop
jo
push
xchg
pop
push
popa
xchg
cli
inc
add
insb
in
jecxz
sub
pop
xchg
add
int3
fmull
or
outsl
lock
inc
sarb
sbb
mov
dec
mov
mov
adc
push
cmp
sub
xor
stc
jmp
xor
mov
inc
dec
pop
sbb
pusha
pushf
cmpsb
lock
push
push
movsb
inc
ds
pop
add
mov
pop
fmuls
push
js
cli
into
add
scas
out
das
bound
jo
add
data16
cmp
loop
mov
sahf
and
cltd
mov
push
inc
lock
sbb
jbe
popf
jg
jg
addr16
adcl
pop
push
sti
lcall
out
push
or
mov
subl
lahf
lods
sti
pushf
or
push
mov
mov
test
jmp
adc
xchg
sbb
sbb
dec
sub
out
mov
les
lea
daa
sbb
xor
ret
lcall
push
call
push
loopne
scas
pop
lods
adc
cwtl
sub
or
ss
inc
and
sbb
xor
mov
mov
mov
lods
aaa
vmaxss
jbe
jmp
ljmp
add
cmp
mov
push
inc
jge
add
cmpsb
pop
pop
movsl
mov
inc
sbb
push
loop
mov
or
xlat
cmp
pop
das
shlb
xchg
test
cltd
mov
int
pusha
cmp
out
mov
xor
sub
inc
xlat
clc
jg
lds
repnz
jns
mov
and
xor
in
mov
les
stos
inc
int3
ret
sbb
xor
xor
adc
std
dec
mov
or
mov
sahf
add
pusha
push
push
cmpsb
or
sbb
adc
cmpsb
mov
sbb
adc
lock
jmp
hlt
sub
xorl
dec
cmp
cmp
int3
xor
or
mov
loop
sub
or
loope
sub
stc
push
call
sbb
movsb
mov
test
sbb
mov
pop
idiv
jmp
mov
push
push
push
hlt
int
rolb
ja
clc
sbb
shl
cld
lea
and
dec
outsb
pop
xchg
mov
call
dec
push
es
and
imul
push
call
sub
or
out
and
out
mov
jne
or
jb
and
lds
mov
mov
cli
push
popa
mov
pushw
mov
rorl
iret
rclb
sti
test
or
push
cwtl
and
mov
cmp
push
nop
test
adc
jmp
ljmp
xchg
es
add
int3
data16
push
inc
xlat
inc
push
int
mov
imul
dec
xor
xor
fildll
xor
or
mov
mov
or
and
jb
ljmp
shl
inc
xor
or
fbld
fildll
mov
add
xor
push
adc
js
cs
sub
fistpl
clc
pop
clc
or
je
push
xor
xlat
loop
pop
mov
les
icebp
call
add
push
jle
dec
jbe
shr
or
lods
sbb
or
ret
std
gs
cmpsb
jo
xchg
sub
and
jb
lcall
jne
push
push
sahf
fcmovnb
inc
test
sbb
sub
pop
aaa
cld
icebp
xlat
movsb
xchg
add
loopne
mov
and
pop
add
ljmp
adc
add
push
xor
std
decl
mov
inc
mov
mov
cwtl
daa
mov
repnz
test
sub
pop
cmp
cwtl
ds
movsb
stc
xchg
cli
filds
lcall
nop
cld
sub
push
scas
xor
sub
loope
xor
fs
shrl
mov
or
jb
adc
cmpsb
ret
pop
ljmp
shlb
dec
push
adc
jecxz
ror
fwait
add
sbb
add
mov
sarb
scas
lcall
push
scas
iret
inc
outsl
jl
dec
mov
loop
bound
push
imul
call
push
loope
fs
push
ss
add
gs
in
repnz
cli
das
clc
ja
lods
dec
jg
adcb
cltd
mov
and
lret
jb
stos
jbe
and
pop
jne
cmp
xorl
lret
cld
cmp
outsb
jl
lods
push
inc
rcll
xor
mov
cmpsl
test
sbb
cmp
dec
or
and
scas
nop
dec
pop
add
push
mov
push
sbb
mov
jns
push
sub
test
jg
add
push
aad
movsl
push
es
pusha
call
adc
jmp
mov
cmp
inc
add
xchg
enter
fimuls
dec
sub
into
repnz
jmp
cld
aaa
popf
adc
lahf
aas
adc
cmp
lods
bound
sub
lea
or
adc
cld
jg
push
cltd
or
lods
and
add
imul
inc
and
mov
in
xor
mov
pop
pop
or
call
push
sarl
xchg
fidivl
inc
imul
hlt
repnz
shl
jle
inc
sbb
cmp
mov
mulb
vcvttps2dq
mov
iret
es
and
inc
add
popw
sub
cmp
mov
xchg
jns
add
dec
inc
clc
xor
std
and
test
xchg
imul
lock
jne
push
notb
pop
cld
mov
das
mov
xchg
clc
ljmp
imul
lods
pusha
ds
sbb
pop
scas
inc
loop
insl
mov
mov
mov
fmuls
test
pusha
cmpsb
xchg
xchg
mov
adc
mov
mov
xchg
jmp
lcall
push
push
ds
mov
insl
xchg
xor
cmp
jl
xchg
ljmp
clc
shrb
jp
cmp
lcall
mov
jbe
lods
ja
mov
fiadds
push
js
sbb
fs
add
subb
test
mov
sub
fcomps
mov
icebp
int3
mov
pop
test
mov
shr
adc
inc
or
mov
pushf
test
into
push
pop
shlb
rcrb
aad
cmpsl
add
xchg
pop
arpl
sbb
sub
test
call
push
lds
scas
cli
xchg
dec
pushf
sbb
loop
mov
push
ljmp
and
lret
add
les
movsl
call
loopne
xor
pop
inc
mov
fidivrs
scas
dec
mov
sbb
mov
je
add
cltd
add
aas
mov
pop
push
mov
retw
add
or
and
scas
insl
xor
jmp
mov
sbb
xchg
xor
aam
push
inc
out
or
dec
cmp
fisttps
aaa
test
pop
jbe
dec
nop
je
mov
add
xlat
in
sti
push
sbb
decl
loopne
lahf
mov
inc
orb
inc
xorb
and
xor
sub
inc
and
mov
clc
jo
scas
pop
push
hlt
ret
xor
jb
or
inc
rolb
adc
mov
or
gs
inc
test
repnz
insb
hlt
aas
inc
clc
or
xor
xchg
mov
or
xchg
movsb
pop
pushf
clc
hlt
lret
mov
stos
cmp
clc
ret
jl
test
add
inc
xor
cmp
mov
and
jno
push
xchg
mov
sbb
pushf
cmp
xchg
sti
mov
test
add
mov
mov
aad
test
bound
pop
cmpb
mov
movsb
ret
leave
push
je
or
and
add
ror
ljmp
and
xor
mov
jle
add
jo
mov
sub
ss
inc
adc
rcll
xchg
xor
outsl
sub
adc
or
jg
in
call
pop
cwtl
nopl
sbb
jb
iret
mov
imul
ljmp
popa
andl
pop
lcall
mov
sub
js
rcrb
and
jl
daa
pop
or
adc
cwtl
mov
add
push
loopne
jo
mov
dec
pop
das
shlb
cmp
cwtl
outsl
xor
sub
xlat
xor
popf
pop
popa
cmp
xor
pusha
or
mov
shlb
cmp
subb
enter
xchg
inc
repz
inc
or
mov
std
xchg
add
into
cmpsl
and
inc
out
cmc
adc
test
mov
mov
dec
imul
add
pop
add
push
mov
sub
or
xchg
jg
movsl
fsubl
inc
dec
cmp
inc
or
outsb
mov
sub
dec
mov
mov
in
inc
aaa
push
ljmp
pop
loop
out
and
jb
sub
ljmp
add
mov
mov
clc
sub
add
hlt
scas
out
mov
push
cmp
jnp
incl
in
inc
test
popa
mov
sbb
lret
xchg
push
cld
call
aam
cmp
leave
xor
inc
stos
test
cltd
inc
xchg
stos
rcr
incl
mov
and
mov
data16
mov
or
jle
mov
test
jo
dec
cld
pushl
jns
lea
lods
jmp
xor
pop
aas
hlt
or
cmp
cmp
xchg
pop
push
and
dec
leave
cmp
dec
adcb
xchg
repnz
xor
sarl
insl
jno
mov
lock
pop
inc
mov
fnsave
scas
xchg
outsb
mov
xor
leave
push
add
add
adc
ljmp
inc
and
fsubp
lcall
dec
sbb
adc
repz
adc
xchg
cmp
js
and
cld
mov
jb
sbb
mov
push
sbb
push
and
xor
out
fsubp
fldcw
aad
sti
adc
mov
add
push
loopne
stos
cmc
rolb
ja
push
fmulp
fdivrp
sub
cmp
sub
mov
sub
aas
mov
adc
cs
ss
adc
jg
js
scas
in
add
shll
adc
jb
lcall
ds
aaa
in
inc
aas
shrl
jo
mov
cbtw
mov
addb
and
mov
inc
repz
daa
inc
or
xchg
xorb
mov
fwait
sbbl
lods
add
add
test
repz
push
adc
cli
or
js
and
mov
push
imul
clc
inc
cmpsb
push
fcomps
in
and
dec
lock
jecxz
les
cwtl
pop
push
lret
sbbb
call
and
inc
inc
lcall
scas
out
std
sub
aas
leave
ja
mov
cmp
cmp
je
mov
sub
add
pop
xor
jle
lahf
mov
add
add
aam
jle
or
imul
stc
and
inc
out
outsb
test
orl
nop
jmp
add
aam
push
fmull
sbb
jl
xchg
jo
inc
lret
dec
sbb
pop
pusha
jne
pop
les
sbb
mov
aas
gs
dec
cld
ret
mov
dec
stos
addb
in
das
lock
subl
stos
dec
inc
inc
xor
push
outsl
jle
mov
shlb
cs
push
or
sti
jg
push
push
xchg
add
test
sbb
lock
fidivl
subb
adc
sub
outsl
sbb
mov
sub
lds
ficomps
inc
int3
int3
jb
inc
inc
jl
adc
or
pushf
or
fstpt
xor
leave
or
xor
clc
stc
sub
push
xor
ficomps
mov
sbb
mov
andl
clc
aam
jo
je
insb
mov
ret
lds
aaa
dec
mov
repz
mov
test
cli
sub
pop
mov
ja
pop
mov
cmp
jmp
adc
daa
sub
jns
ret
mov
ret
jmp
incl
mov
scas
les
pop
js
fisubl
and
mov
scas
cld
xchg
inc
xor
and
xor
lahf
mov
loope
xor
sbb
lea
xchg
ds
aam
fdivs
dec
je
mov
xchg
fs
cmp
mov
or
stos
cmp
pop
xchg
bound
xchg
and
pop
and
add
ss
incl
xor
cltd
pusha
mov
add
test
sahf
pop
loope
or
pop
loope
or
sbb
ret
xchg
inc
push
test
push
xchg
push
sub
adc
xchg
mov
sub
mov
inc
aaa
xchg
out
or
insb
fsubl
pop
stos
mov
fisubl
or
sbb
cmp
xchg
mov
popf
jl
popf
inc
sbb
loop
adc
add
inc
dec
pop
idivl
fcmovu
cmpb
mov
daa
bound
mov
fiaddl
imul
sbb
jnp
push
mov
mov
test
int3
call
pop
mov
dec
loope
test
xlat
in
ret
rorl
mov
pusha
cli
sbb
lds
and
cmp
and
js
nop
xor
in
aaa
test
out
jge
or
std
stc
sbb
push
mov
or
call
test
sbb
pusha
lahf
fs
leave
jp
mov
push
lock
sub
scas
add
mov
daa
outsb
aas
push
or
cmp
dec
scas
in
ds
sbb
push
mov
mov
hlt
mov
fs
pop
lcall
push
and
lods
add
test
incb
ss
pop
arpl
mov
or
icebp
mov
xchg
sbb
and
stos
out
sbb
leave
inc
or
bnd
inc
in
push
rol
scas
loopne
mov
push
inc
je
push
cli
outsl
mov
fs
in
and
out
outsb
aaa
lock
xor
aas
add
jo
sub
out
pop
or
adc
mov
daa
jg
aad
hlt
and
mov
fnsave
stc
add
or
push
vmovdqa64
aas
je
push
sub
imul
aas
pop
jbe
rcrl
jmp
shlb
decl
inc
nop
mov
std
jne
inc
sti
xor
cmpsb
callw
mov
or
mov
inc
mov
adc
or
cltd
inc
pop
fnstenv
xor
pop
test
push
push
cmp
imul
arpl
out
jne
sbb
and
mov
jnp
adc
pop
jae
into
mov
cltd
cwtl
mov
jecxz
add
rol
decb
and
sub
push
mov
icebp
pop
add
or
je
sub
jne
pop
lods
bound
lea
popf
mov
or
mov
mov
sub
pop
jle
xlat
fisubrl
pop
leave
mov
inc
neg
adc
aam
rcll
incl
pop
push
xchg
idivb
mov
call
or
sbb
test
leave
cmp
cmp
das
mov
aad
and
pop
loopne
ja
xchg
sub
and
push
cmc
pop
push
lret
pop
xchg
sbb
mov
jge
cmpsb
dec
test
mov
push
sub
sbb
push
or
mov
xchg
das
mov
cmc
and
xor
sub
xchg
je
inc
popl
mov
jg
sbbb
add
bound
lahf
xchg
xchg
cs
jne
scas
scas
dec
out
lods
pusha
pop
adc
xor
mov
lea
dec
das
mov
xchg
add
sub
add
or
out
fcoms
dec
sub
xchg
orb
pop
stos
and
inc
repnz
bound
popaw
cmp
jo
iret
xchg
and
mov
nop
mov
shll
push
jecxz
sbb
jo
jno
mov
test
fldt
adc
push
inc
sub
jl
sbb
push
pop
cwtl
add
xor
outsl
mov
test
inc
les
aas
or
xchg
mov
ljmp
lock
ret
push
nop
mov
data16
clc
sbb
frstor
mov
or
orl
xchg
mov
sahf
insl
cmp
add
or
fisubs
rclb
lds
sar
scas
out
dec
repnz
int
insb
jg
xor
shll
bound
inc
push
jp
pop
pusha
leave
inc
cmp
push
mov
in
arpl
add
sub
imul
adc
jle
fwait
mov
loop
and
rcrb
add
loopne
xchg
add
and
add
push
std
or
or
scas
ds
out
aaa
adc
mov
push
jnp
xchg
xchg
dec
hlt
cld
add
xchg
fdivs
dec
shrb
pop
mov
or
jb
js
and
jo
xchg
popa
int
push
add
lcall
das
sub
pop
mov
cld
pushl
cwtl
xor
fcoms
pop
sar
push
lds
push
aad
inc
sbbb
stos
inc
jno
sbbb
lods
das
adc
xor
mov
dec
cmp
adc
aam
cmp
inc
lahf
jp
stos
push
std
dec
or
in
jmp
mov
add
push
out
shr
pop
sbb
xor
clc
push
inc
lahf
adc
test
std
xlat
enter
enter
push
aad
push
mov
fiadds
test
call
je
je
sbb
xor
mov
jl
lcall
out
popf
jecxz
adcl
dec
pop
sub
out
xor
xor
sub
mov
or
add
sar
lret
popl
adc
out
hlt
test
and
xchg
mov
dec
mov
jl
mov
clc
adc
pushf
push
inc
sbb
loope
sub
incl
pop
sbb
shlb
arpl
xchg
adc
dec
pop
xor
mov
push
cmpsb
sub
fildl
sti
out
mov
xchg
test
mov
scas
gs
enter
push
insb
cs
je
sbb
mov
jno
fstpl
ror
test
and
ficoms
adcb
jno
adc
inc
scas
gs
jle
cmp
sbbl
nop
pop
mov
aas
adc
dec
shll
push
movsl
mov
xor
mov
out
loop
mov
fiaddl
add
push
ficompl
push
or
jecxz
out
xchg
inc
dec
sbb
add
sub
lods
mov
cmp
pop
in
repnz
mull
lret
mov
or
ret
cmpsl
mov
pop
add
cmp
dec
ret
ret
aam
lock
adcl
aam
push
mov
lea
mov
sub
push
sbb
jns
push
pop
or
pop
mov
jmp
rolb
insb
jbe
pop
mov
arpl
add
movsl
stos
adc
mov
jle,pn
and
not
mov
repnz
jge
mov
sahf
sub
mov
movsl
imull
lcall
je
outsb
loope
add
daa
or
mov
and
sbb
pop
add
ja
or
mov
xor
xchg
lods
or
sub
gs
xchg
stos
repnz
data16
inc
scas
adc
sub
cmpsb
cmp
xlat
and
movsb
xor
mov
scas
out
xor
pop
push
mull
jecxz
ja
ss
je
and
lret
xchg
in
inc
cmp
jg
out
mov
pop
cmpsb
mov
pop
cmp
pop
or
cmp
lock
mov
mov
call
mov
push
xor
inc
fcompl
dec
fidivrl
popf
mov
fsubrs
inc
loop
mov
sub
call
push
mov
fs
shl
adc
pushf
in
jb
sub
sbb
lods
orb
imul
sbb
cmp
sub
mov
fldcw
jecxz
je
in
int
mov
ss
std
inc
xchg
or
adc
add
push
jecxz
sbb
in
inc
add
push
cs
fadd
sbb
out
fimull
push
int3
pushf
jb
adc
imul
pop
ret
cs
or
xchg
xchg
jle
add
jns
pop
repnz
idivb
loope
enter
rclb
mov
movswl
rcr
push
add
and
das
cmp
mov
icebp
pop
inc
and
adcb
cmc
stos
int
repnz
xchg
sarl
lcall
inc
mov
jae
push
mov
test
ret
test
lods
hlt
jno
push
scas
push
cwtl
dec
push
test
add
add
inc
call
cmp
mov
insb
add
std
and
ljmp
pop
jp
jle
ret
sbbb
sbb
mov
xchg
shll
jae
hlt
add
fisubrs
jg
mov
sub
xchg
adc
xchg
mov
and
push
into
lea
sbb
cmpsb
lcall
dec
idivl
test
mov
inc
inc
mov
jnp
fs
add
sub
xchg
dec
and
rcr
stc
int
roll
mov
adc
mov
xor
pop
icebp
stos
mov
cmc
jp
rcrb
sub
scas
xlat
lds
cltd
into
das
xor
bound
insb
pop
out
or
adc
add
lds
sbb
hlt
shl
mov
sahf
shrl
mov
inc
mov
push
mov
mov
sub
mov
push
cwtl
mov
es
ljmp
cli
push
dec
add
pusha
xor
and
cld
insl
add
scas
ss
jne
add
out
mov
fadds
pop
ret
pop
cwtl
pop
bound
stos
mov
cmpps
cs
sub
pop
loop
je
icebp
loop
add
sti
ror
les
pop
and
mov
adc
daa
adc
or
add
test
movsb
jge
mulb
push
fistps
outsb
jae
adc
cmpsb
outsl
mov
cmpsb
adc
lcall
inc
fdivrl
add
incb
add
mov
in
sbb
gs
call
pop
mov
les
sbb
xchg
mov
adc
jb,pn
push
mov
test
clc
jmp
lret
xor
cltd
stc
shr
sbb
clc
adc
pop
dec
dec
leave
dec
inc
sbbl
mov
shrl
sbb
test
and
push
iret
or
jle
pop
sbb
das
js
and
pop
xchg
sahf
xchg
fistpl
loop
testb
les
pop
cmc
in
icebp
cli
push
dec
shl
out
xor
pop
fidivs
or
andb
iret
jp
mov
divl
add
sti
inc
fucomp
out
sbb
or
dec
ret
fildll
movsl
inc
std
in
bnd
jecxz
sub
test
ficoml
fs
dec
jmp
sub
fwait
cs
ss
imul
sbb
mov
decl
out
and
push
cmp
xchg
lret
add
or
adc
std
nop
sub
inc
cmp
mov
out
or
sub
ret
lahf
enter
ss
sub
push
cmpsl
shlb
adc
orb
scas
out
push
call
sbbl
in
cltd
aaa
xchg
je
mov
fcmovb
andl
push
pop
inc
push
icebp
inc
icebp
push
add
cwtl
ja
out
push
push
ret
cmp
fs
push
clc
stos
clc
pushf
push
cmp
add
sti
sub
sub
xor
xchg
bnd
cmpsb
inc
loope,pn
adc
inc
sub
inc
and
xor
push
dec
pop
aam
cwtl
push
js
leave
xchg
jge,pn
lea
push
mov
jmp
clc
jg
icebp
mov
mov
add
scas
add
and
les
or
cmc
pop
call
adc
std
dec
lahf
and
or
out
sub
clc
lret
mov
jbe
push
mov
cli
cmpsb
xchg
sbb
rcrl
xor
adc
inc
add
mov
dec
cmp
test
js
mov
in
inc
ret
xor
xor
or
jl
push
hlt
pop
sbb
out
ds
inc
test
cmp
pop
decl
sub
xchg
adc
outsb
dec
xchg
pop
mov
dec
xlat
inc
inc
add
mov
inc
test
ljmp
dec
cwtl
clc
pop
or
pusha
insl
pop
subb
add
push
cmp
ja
push
adc
fcoml
push
and
mov
push
mov
xchg
nop
jp
std
xchg
pop
lock
fcomps
call
jb
out
sti
lret
xor
add
dec
leave
jge
sahf
xor
add
sbb
scas
and
pop
std
fwait
sbb
jbe
andps
sub
popa
js
scas
xor
push
pop
sbb
adc
pop
cmp
loope
inc
subb
cmp
lret
xchg
loopne
xlat
ds
inc
cld
cmpsl
adc
jnp
dec
je
repnz
pop
icebp
repnz
dec
or
les
and
xor
adc
jbe
int
stos
scas
ds
xchg
jl
dec
insl
pop
and
inc
fs
sahf
inc
mov
jp
mov
mov
push
sub
sbb
mov
dec
std
dec
cmpsb
fsubl
push
or
pushl
call
and
jmp
sub
ss
cmp
push
cld
dec
aad
mov
xlat
jl
push
mov
movsl
pop
incb
ds
xchg
sub
adc
rcl
xor
adc
lret
pop
stos
les
xor
int
add
add
xchg
data16
mov
sbb
arpl
sbb
mov
cld
es
fld
loope
jo
fidivrs
addl
pop
or
adc
in
in
mov
loop
int
mul
inc
and
adc
xor
lea
clc
mov
push
pop
sbb
xchg
lahf
mov
insl
arpl
gs
mov
fadd
adc
push
add
js
icebp
xchg
pop
xor
into
xchg
pop
in
adc
pushl
in
addb
mov
sub
adc
lret
inc
incl
sub
mov
mov
scas
ds
xchg
jo
add
sub
sbb
cmp
gs
mov
mov
mov
std
mov
push
in
pushf
insb
sbb
sub
lcall
xchg
inc
inc
inc
std
arpl
je
inc
cld
int
dec
mov
andb
pop
je
pop
cmp
mov
cld
and
push
fmuls
stc
js
or
jno
ret
cli
popa
sbb
jne
jg
inc
mov
data16
lcall
or
decl
lock
gs
cmpsl
dec
push
sub
mov
or
pop
popf
test
frstor
lds
rcrb
imul
mov
and
daa
icebp
add
push
pop
add
repnz
nop
inc
leave
sub
and
pop
into
push
addb
in
std
adc
inc
stos
mov
jge
popf
mov
fdivrl
icebp
pop
aam
pop
inc
push
jmp
in
insb
push
add
cmc
lea
in
mov
movsl
mov
aaa
es
jne
xor
incl
cli
fdivr
pop
pop
test
outsl
jbe
aad
add
cmp
sub
adc
loope
add
bswap
inc
popf
add
loopne
out
test
push
or
scas
out
sti
jnp
xor
jne
jnp
mov
mov
cmp
xor
adc
andb
xor
mov
mov
sti
cmpb
cmp
adc
and
or
out
pop
stos
aas
clc
mov
or
call
jae
pop
sbb
clc
or
mov
enter
dec
fucomp
decl
dec
add
mov
jp
jg
shrl
cmp
mov
push
mov
sti
xchg
and
mov
fisubs
ds
adc
mov
add
pusha
nop
in
adc
pop
sbb
mov
mov
mov
sbb
std
movsb
decl
push
es
mov
jmp
mov
jb
gs
sub
mov
out
cmp
iret
lods
add
lods
int
es
push
test
push
cmc
mov
mov
incl
js
fldcw
ljmp
ljmp
aam
aas
and
int
scas
clc
in
std
sub
cmc
inc
insb
ljmp
jp
loopne
outsl
xor
scas
or
adc
lret
cmpsb
daa
sbbl
push
push
or
sbb
repnz
sbb
xchg
dec
incl
rcr
cltd
ror
das
loop
jo
decl
push
enter
popf
push
fcomp
xor
ss
jl
mov
push
jb
mov
push
pop
jg
icebp
mov
data16
mov
rcrb
push
icebp
call
shl
fs
js
dec
ret
subl
add
mov
lock
mov
adc
shrl
jno
sbb
ljmp
cwtl
data16
subb
add
mov
rcrl
testb
jne
insb
shrl
xor
adc
pop
inc
loope
sub
or
cs
dec
loopne
fimuls
test
lock
push
and
adc
mov
cmp
pop
jle
pusha
cmp
int3
into
and
iret
xchg
jmp
sti
arpl
sbb
cmpsb
push
cmpsb
adc
pop
stos
mov
fiaddl
sbb
adc
iret
xchg
andb
lds
push
jo
mov
inc
sahf
jmp
adc
cli
mov
mov
test
out
xchg
and
inc
imul
add
inc
incl
cld
fisubrs
add
dec
push
notb
and
push
and
out
ja
mov
stos
xorl
push
xorb
xchg
push
test
lcall
push
add
add
or
xor
test
adcb
fnstsw
aaa
xchg
into
les
shlb
push
in
xor
imulb
and
xchg
or
push
stos
gs
xchg
in
xchg
test
fadds
fildll
jp
xchg
push
xor
jle
mov
dec
nop
dec
shlb
add
loop
in
mov
es
loop
daa
lods
addr16
mov
inc
fisubrl
mov
push
cmp
incl
jle
xor
jg
mov
hlt
add
and
negb
out
orb
sub
push
test
fucomi
cmp
movl
cmp
xlat
out
dec
das
mov
mov
push
jmp
adc
sbb
pushf
mov
in
dec
repz
decl
lea
mov
sbb
cmpsl
mov
sub
adc
pop
je
int
cld
cmp
mov
nop
pop
adc
lock
inc
ljmp
or
pop
mov
jg
pop
jb
loop
scas
and
clc
cld
mov
stos
jg
loop
cltd
add
pop
in
push
jg
jmp
dec
shrl
push
sub
mov
mov
sub
sub
js
outsl
cli
mov
popf
scas
aad
es
cli
inc
dec
sbb
stc
les
inc
xor
lcall
inc
cmc
inc
lahf
dec
dec
inc
add
std
pop
clc
pop
negb
mov
mov
pop
shrb
push
cmpl
call
sub
pop
and
xor
repnz
fs
inc
or
xor
int3
push
call
cmp
mov
push
add
movsl
add
sub
jb
adc
pop
rcr
sbb
pop
sub
jge
inc
in
sbb
xlat
xchg
jl
jmp
inc
mov
push
dec
les
jno
jl
and
cmp
fsubrs
mov
add
stos
push
sbb
imul
mov
push
bound
sub
loopne
nop
jl
enter
pusha
mov
dec
inc
mov
add
inc
ss
mov
inc
dec
mov
mov
ds
jge
fmuls
icebp
mov
insl
sbb
pop
das
jg
loopne
cwtl
push
push
dec
adc
in
pop
inc
sbb
outsb
les
rorb
sub
popf
jge
add
lahf
cmpsb
sub
daa
sbb
xchg
sbb
inc
jp
sbb
in
sbbl
mov
rcrb
cmp
daa
incl
mov
add
dec
inc
jecxz
icebp
decl
cmp
es
dec
pushf
out
mov
stos
insl
ret
sub
inc
xor
mov
mov
clc
adcb
inc
lret
cmp
sub
out
aas
sbbl
movb
das
rcr
dec
sbbb
inc
push
sbb
sub
js
mov
adc
repz
mov
call
incl
pop
es
adc
mov
mov
and
mov
xor
push
xchg
outsb
sbb
sub
outsl
xchg
push
and
loopne
popf
jo
add
jbe
stc
mov
push
add
test
pop
daa
outsb
pop
push
mov
and
outsb
inc
push
dec
sbbb
pop
sbb
push
insb
cli
jecxz
or
mov
pop
fcmovb
push
fs
mov
pop
je
repz
fneni(8087
push
and
mov
out
and
insl
jnp
add
in
push
je
pop
dec
xchg
mov
cmpsb
ja
cli
jg
push
enter
out
sbb
xchg
outsb
clc
ljmp
xchg
iret
push
push
pop
xchg
xchg
imul
inc
lds
lret
add
adc
xchg
loop
or
cli
sub
call
xlat
rcrb
mov
outsb
daa
push
bound
negb
lds
sub
push
or
shl
mov
add
pop
je
and
add
popf
enter
xrelease
int3
into
inc
mov
jnp
pop
jnp
jo
or
les
iret
ret
incl
into
adc
mov
jge
ds
mov
jmp
rolb
mov
cli
pushl
dec
aam
dec
aas
shlb
orl
push
jl
daa
pop
or
mov
xchg
mov
mov
sub
or
cwtl
xabort
pop
clc
enter
xchg
mov
mov
cmp
lods
mov
adc
ret
mov
xchg
ljmp
inc
aaa
mov
jg
fistpll
xchg
inc
add
inc
sbb
cmp
out
xchg
fdivr
ljmp
aas
xor
and
lret
dec
sbb
dec
sub
push
std
xlat
or
std
mov
sbb
movsl
das
sub
out
int3
jno,pn
adc
fstpt
xor
cmp
sub
xor
sbb
add
sbb
popa
adcb
lods
lcall
cs
lods
cmp
add
dec
divb
pop
mov
dec
ret
cmpsb
and
pop
push
xchg
mov
push
push
mov
sub
ljmp
or
cwtl
mov
imul
cmp
out
xor
mov
push
xchg
cmp
xchg
insl
sarl
add
dec
stos
sub
add
pop
jp
loope
mov
loop
scas
inc
ret
and
push
nop
popa
cmpsb
jl
mov
sbb
loope
gs
jecxz
pop
xchg
repz
out
jl
xor
push
add
ret
inc
mov
or
cs
aam
rcr
hlt
push
gs
lea
jle
das
jle
fistl
pop
outsb
cli
xchg
std
mov
jmp
test
out
psubusb
dec
fwait
xchg
ljmp
mov
scas
jge
movsb
leave
push
iret
fs
xor
ljmp
add
loope
push
mov
jle
sbb
in
pop
jg
xchg
std
decl
push
pusha
jbe
mov
mov
jne
xchg
pushf
jo
mov
fbld
xchg
xorl
adc
inc
lahf
push
jg
pop
loope
inc
subl
mov
incl
pop
test
dec
ret
xchg
jnp
ja
sbb
aas
sub
xchg
je
xchg
nop
inc
sub
call
insb
push
lcall
and
add
jg
in
mov
inc
or
dec
adc
jo
inc
or
stc
sub
ja
inc
and
or
push
stos
mov
fdivr
cmp
sub
sub
sbb
mov
push
inc
push
cmp
in
or
inc
mov
leave
and
enter
xchg
ret
or
sahf
push
cli
push
popa
mov
hlt
dec
movsl
xchg
rorl
pop
mov
push
rclb
pushf
or
xor
nop
mov
lcall
shr
add
xor
lods
testb
xor
mov
xadd
mov
xor
sti
je
adc
sub
movsb
incl
in
ja
je
pop
adc
out
xor
adc
adc
cmp
and
and
ficoms
fstpt
and
inc
je
xchg
mov
cmp
jg
ljmp
jo
xchg
xor
ja
and
mov
or
and
inc
or
or
test
clc
lahf
mov
push
xchg
shrl
xor
repz
loopne
sub
enter
hlt
inc
mov
mov
or
mov
xchg
test
jmp
mov
gs
xor
in
imul
insb
push
adc
test
out
in
mov
and
and
push
outsl
ljmp
and
clc
mov
pop
jmp
loope
cmp
adc
xor
add
cmp
shl
mov
lods
xlat
jno
mov
and
pop
and
jns
clc
jo
incl
adc
loopne
repz
cmp
add
jmp
repz
lret
and
inc
mov
pushf
sub
je
mov
mov
stos
jp
xchg
mov
mov
frstor
icebp
jecxz
dec
sahf
jg
rcrb
and
fidivs
in
xor
mov
in
scas
ljmp
test
nop
lret
mov
xchg
iret
jne
push
insb
incl
andb
sbbb
and
jg
insb
sbb
fdivs
icebp
push
jnp
ja
or
pop
jb
or
ljmp
pusha
mov
mov
xor
or
or
or
cli
cld
mov
hlt
lock
inc
add
xchg
add
mov
outsl
inc
es
add
jnp
gs
add
addb
lds
push
cmp
mov
add
or
call
add
cmpsb
pop
jle
test
add
pop
push
or
xchg
test
push
ret
aas
or
cmp
add
stos
or
in
pop
pusha
outsl
push
je
mov
adc
jb
add
sbb
std
incl
stos
test
stc
loop
sbb
add
loop
and
and
pop
cli
inc
sbb
and
xchg
and
jmp
ljmp
insl
mov
jnp
les
imul
repnz
lahf
enter
dec
lock
clc
mov
inc
sub
leave
xchg
clc
add
fcomps
ljmp
dec
add
imul
call
mov
mov
int3
movsl
into
sub
jp
mov
nop
and
and
ror
scas
mov
mov
cmp
cld
xchg
mov
sbb
xchg
cmp
out
sbb
xchg
ja
test
adc
or
push
add
aad
ret
sahf
pop
or
loop
mov
sbb
and
movsl
inc
add
sub
mov
pop
jb
or
ljmp
sub
dec
sub
aam
icebp
xchg
and
test
shlb
inc
xchg
dec
lahf
test
insb
mov
mov
lock
cmc
out
les
fstl
sbb
jle
pushf
mov
jb
mov
sar
das
shrb
add
lds
mov
repnz
jae
jmp
sbb
fs
mov
lds
sahf
xchg
jl
leave
jecxz
mov
popa
push
adc
test
stos
push
cmpsl
and
cmp
popf
jg
and
jo
pop
and
loop
sahf
and
rorl
inc
in
push
and
mov
addr16
push
cmp
jae
pop
jecxz
movsl
jo
cli
xchg
mov
bound
inc
sbbb
cli
lcall
lock
or
ret
lret
lods
sar
dec
sbb
lahf
pop
int3
sbb
popf
mov
and
adc
and
inc
nop
mull
sbb
mov
sahf
decb
mov
adc
sbb
xchg
int3
lahf
icebp
or
cltd
mov
enter
lret
push
cmp
pusha
mov
rcrl
mov
adc
inc
subb
jbe
inc
sub
push
scas
lock
pop
ljmp
ja
mov
sub
daa
cmpb
scas
js
ss
adc
sub
js
aad
mov
ss
jae
sub
and
mov
cwtl
faddl
mov
xchg
shll
and
inc
push
jbe
mov
push
mov
mov
adc
hlt
bndstx
lock
mov
in
popf
mov
cmpb
enter
adc
add
pushf
rol
pop
mov
dec
clc
sub
dec
add
xor
loopne
insl
push
cltd
notb
rcll
mov
pop
enter
dec
rclb
lock
pop
inc
adc
inc
mov
mov
lds
ljmp
rorl
and
jge
pop
sub
decb
inc
je
adc
pop
cmp
rcl
ss
clc
sbb
test
iret
pop
test
xchg
clc
xchg
mov
inc
sbb
xchg
add
add
int3
mov
scas
xchg
fcomip
lahf
movsb
test
xchg
add
jmp
aas
out
orb
into
mov
pop
sub
loope
sbb
add
mov
xor
test
insl
add
lods
clc
or
xor
cmp
xor
movsb
fbld
mov
adc
ret
dec
stos
mov
push
dec
push
or
rclb
jo
fnsave
loope
push
aaa
sub
xchg
or
pop
jnp
lahf
outsb
inc
jnp
jo
jne
lret
lret
ja
jg
lods
ss
xchg
add
in
ret
lea
mov
outsl
cmp
or
cld
das
icebp
sbb
clc
mov
stc
test
push
jae
jmp
add
mov
repnz
or
jg
inc
add
add
gs
mov
hlt
lcall
mov
das
mov
fdivrl
sbb
sbb
ret
or
in
stos
ja
push
stos
ret
mov
inc
out
hlt
dec
fs
scas
orl
jg
hlt
jne
or
aaa
push
pop
xor
sbb
das
adc
pop
dec
fistpl
enter
mov
out
test
icebp
or
pushf
pushf
clc
push
mov
mov
jns
cmp
xchg
add
dec
xchg
insl
pusha
cli
jg
mov
jmp
sbb
subl
jo
and
xor
neg
outsb
cld
lods
bound
push
mov
in
test
inc
jmp
decl
inc
xchg
outsl
mov
mov
les
fisubs
out
push
test
xor
and
xchg
lea
mov
push
clc
pushl
lods
addb
lods
push
push
cld
jne
inc
cltd
dec
dec
jne
clc
ljmp
sbb
push
in
dec
dec
cmp
and
aaa
and
icebp
ret
add
and
inc
ss
ljmp
sub
push
push
xor
sub
outsl
ret
jle
jecxz
pop
mov
inc
cmpsb
xor
clc
mov
das
jg
in
fildl
pushf
test
jbe
out
jbe
adc
and
and
add
decl
dec
jl
or
fcomp
movsb
out
mov
nop
push
loope
shr
pop
add
xor
pop
jg
jno
jnp
push
arpl
xchg
or
adcl
movsl
jg
aam
les
or
add
ficoms
mov
ror
out
clc
push
cli
adc
add
test
mov
mov
mov
incl
add
add
sub
mov
movsb
mov
ficoml
clc
inc
push
pop
aad
mov
dec
jl
fisttps
lret
push
mov
gs
and
dec
popa
mov
pop
enter
mov
pop
fcomip
sbb
pop
pop
mov
lcall
loop
or
shl
pop
movsb
fsubrl
icebp
out
lret
mov
jg
mov
inc
sbb
cmp
xor
call
push
dec
in
in
loopne
pop
adc
adc
add
cmp
push
sbb
out
fisttps
lods
mov
and
inc
lret
and
stos
leave
adc
sahf
dec
inc
mov
dec
popl
out
adc
mov
cli
das
cli
cmp
and
mov
cmp
push
push
les
dec
arpl
or
and
adc
movsl
sbbb
test
push
push
add
test
sarl
cwtl
stos
test
mov
add
rclb
or
scas
cli
or
mov
or
jbe
or
push
add
push
jmp
arpl
addr16
lds
add
test
push
cli
xchg
aam
push
mov
stos
cmpsb
mov
adc
dec
test
aam
push
mov
mov
cmc
or
shl
test
ss
inc
or
sbb
and
shlb
dec
in
lods
mov
cwtl
pop
out
xchg
mov
push
outsl
cmovp
mov
cmpsb
pusha
aam
xchg
inc
adcb
dec
dec
cmp
pop
dec
pop
inc
movsb
inc
pop
rcrb
into
xchg
mov
fbstp
pusha
mov
add
mov
cwtl
ja
aas
outsb
xor
fdiv
movsl
cmpsl
sbb
fs
push
sub
push
bound
push
out
stc
push
std
out
and
sbb
push
jge
xor
shlb
cmp
pmaxsw
gs
fstpl
lods
inc
sub
push
add
sahf
call
scas
flds
loope
xchg
push
xlat
push
jmp
mov
xlat
cmpsb
jg
xchg
insl
lods
fucomip
inc
mov
test
ja
mov
push
pop
inc
or
cmc
shl
or
mov
fimuls
shll
lfs
mov
int
xchg
or
daa
push
jo
adc
test
push
sub
jbe
stos
in
mov
xor
fwait
jns
xchg
add
stos
int
frstor
icebp
mov
bound
fwait
pushf
ret
ds
sarl
pusha
std
mov
and
test
shr
xchg
sub
cs
ss
fildll
js
in
and
sbb
sbb
clc
mulb
adc
sbb
adc
movsb
sub
sub
cmpsb
add
test
mov
repz
aaa
mov
cmp
stos
dec
push
add
daa
dec
push
lds
filds
mov
or
push
jge
sbb
xchg
cmp
rcrl
out
xor
movb
clc
jno
dec
ret
inc
add
pop
cmpsb
push
add
sub
cli
filds
incl
test
test
xor
add
iret
lcall
icebp
loopne
jl
lahf
das
inc
mov
cmp
mov
mov
outsl
add
outsw
sbb
fcomip
popf
jmp
and
in
loop
out
ret
je
arpl
std
add
adc
fbstp
push
pushf
add
adc
movsl
lret
xchg
shll
pop
push
cmovg
stc
dec
or
insb
stos
aad
mov
cmp
add
mov
insb
out
xor
ja
mov
out
xor
dec
fildl
sub
dec
loop
xchg
pop
orl
test
add
sub
pop
sub
mov
adc
ss
add
das
mov
inc
pop
loopne
adc
fmulp
pusha
and
pop
mov
jb
mov
dec
js
pushf
arpl
push
and
loopne
pop
mov
subl
mov
cmpsb
xchg
sbb
lea
mov
and
xlat
icebp
dec
cmpsl
xor
pop
adc
cs
jmp
movsb
fcmovnu
pop
rcll
mov
xlat
incb
push
loopne
mov
jp
pop
aaa
pop
add
pause
add
sbb
push
loope
int
mov
dec
je
int3
and
fisubs
test
dec
and
scas
mov
movsl
mov
testl
xchg
js
scas
movsl
je
sub
inc
pop
or
xchg
cmp
mov
mov
lcall
mov
jmp
mov
out
xchg
sub
xor
adc
jne
inc
decl
xor
js
dec
loopne
push
or
add
cmpsb
jl
or
call
pop
jle
outsl
cmp
cs
dec
imul
cld
sbb
ja
xor
lds
test
and
std
lahf
clc
je
inc
xor
add
mov
stos
call
and
and
imul
test
or
fstpt
push
enter
call
push
enter
fistpl
pop
dec
mov
lret
movsb
push
outsb
mov
arpl
sbb
dec
stos
pop
divb
cltd
or
mov
aad
push
cmp
loope
push
dec
jo
decl
inc
xor
scas
adc
fisubrs
lds
fs
and
out
mov
in
ljmp
add
ljmp
cmpsb
mov
aas
or
push
ljmp
inc
dec
pop
push
divb
test
jmp
inc
bound
and
icebp
fimull
xor
add
adc
and
sub
xor
scas
push
dec
cld
mov
lock
out
adc
std
stc
dec
repz
loopne
add
stos
loopne
push
arpl
int3
add
push
dec
push
mov
mov
jo
testl
cs
xchg
test
hlt
push
jecxz
loope
mov
in
inc
fisttpl
dec
sahf
sti
xlat
xor
out
mov
fdiv
cmp
xchg
test
clc
iret
stc
test
sub
test
sti
sub
xor
cmpsl
inc
jge
dec
int3
push
clc
sahf
mov
jg
add
xchg
out
movsb
inc
xor
leave
hlt
pop
jne
cmpb
push
adc
fiadds
jge
rcll
pop
test
push
cwtl
and
std
aad
loopne
sub
dec
insb
mov
fidivs
hlt
sbb
shr
adc
push
xchg
adc
jbe
sbb
mov
mov
jo
incb
lock
lds
ret
push
xchg
test
jnp
in
mov
inc
into
rcll
rol
clc
pop
mov
aam
movsb
xor
outsl
add
iret
add
dec
cmc
jne
les
loopne
lds
and
or
out
leave
cs
xor
test
mov
ljmp
ret
fwait
cmp
mov
add
and
xchg
loope
jecxz
nop
ljmp
std
mov
or
cmp
xchg
push
pusha
cmp
add
pusha
jno
xchg
je
add
push
call
subb
sbb
and
pop
adc
stos
lds
loopne
inc
dec
filds
mov
pusha
fldenv
test
mov
decl
add
lret
dec
cmp
popf
mov
pop
push
or
ljmp
arpl
cmp
adcb
dec
ret
sub
push
jns
xchg
stos
fiaddl
aam
mov
sub
call
divl
adc
rolb
outsl
pop
or
lock
mov
sub
int
call
and
fisubl
lock
sub
testb
mov
cld
fistps
add
xchg
nop
daa
addr16
loope
lock
cmpsb
xlat
stos
cld
dec
xchg
nop
jbe
jo
sub
loope
cwtl
mov
pop
dec
or
clc
fadd
sar
es
std
add
push
sbb
sahf
xor
aas
and
inc
out
aam
dec
outsb
adc
add
ss
mov
add
jno
push
and
xor
jge
std
pop
lods
enter
outsb
rolb
or
incl
push
out
call
dec
movb
test
lret
push
ss
fcompl
adc
call
je
or
shrb
dec
mov
jmp
ret
inc
pop
mov
pop
aam
dec
bound
or
lret
aaa
sbb
inc
pop
pop
imul
or
push
inc
ja
adc
cli
push
jecxz
add
aad
adc
sub
mov
out
dec
push
add
sbb
push
rcrb
decl
jbe
test
cwtl
into
inc
fistpl
sub
das
loopne
nop
out
sbb
sbb
push
cmp
mov
popa
into
sub
es
and
push
lea
push
inc
jge
sub
loop
add
xchg
push
or
add
flds
mov
jns
or
jg
push
addb
clc
mov
sub
test
jecxz
repz
bts
gs
and
cmp
dec
call
push
ret
sbb
push
dec
ja
das
ja
jg
jmp
dec
out
sbb
mov
sub
cmpsl
sub
pushf
fwait
or
xchg
pop
dec
pop
sbb
fsubrl
dec
lods
and
xor
repnz
xor
js
inc
bound
inc
sahf
push
dec
nop
sbb
xchg
inc
sahf
add
scas
add
shrl
cs
js
mov
imul
cmp
inc
and
int3
sti
push
aas
inc
mov
lahf
push
data16
leave
mov
mov
pop
mov
aas
scas
or
add
sahf
cmp
push
std
jmp
cmp
popa
mov
out
push
or
outsl
and
sbb
arpl
or
sbb
out
icebp
dec
inc
ljmp
je
insb
add
or
outsb
lods
inc
adc
pop
jmp
lret
test
jecxz
int3
adc
sbb
xchg
push
push
divl
mov
xchg
inc
in
loope
jle
push
ds
mov
mov
push
lock
mov
aas
test
add
into
mov
cli
mov
adc
lock
and
loope
mov
add
mov
lahf
dec
stos
es
sbb
push
jmp
push
mov
mov
sbbl
sbb
cld
adc
jbe
or
sub
dec
ja
xchg
mov
pop
ficoml
enter
mov
je
adc
xchg
dec
pop
cmpb
or
les
inc
mov
das
inc
adc
rcrb
mov
push
sbb
std
push
sbb
add
push
lret
add
icebp
test
arpl
push
push
jg
inc
cld
cmpsb
and
ret
sbb
jno
mov
dec
mov
outsl
mov
xchg
push
sub
sbb
and
andb
xor
lods
adc
clc
stos
cmp
in
loop
jns
pushf
jb
jno
fistpll
popa
aam
mov
pop
cld
push
stos
jo
pop
nop
mov
pop
push
xor
xor
or
fists
insb
mov
adc
and
dec
jne
push
outsl
cli
add
test
dec
push
movsl
hlt
pop
add
push
ret
lock
mov
fcomip
inc
add
sbb
jne
sub
sbb
push
cmpsb
xchg
mov
loopne
xor
adc
cli
aad
aam
sar
jmp
ret
clc
das
mov
jo
das
xchg
cli
xchg
add
fisttpll
pop
cmp
sbb
or
ljmp
decb
add
add
rclb
inc
icebp
in
outsb
mov
mov
sbb
or
sub
dec
mov
add
out
xor
in
sbb
or
push
or
adc
jno
movl
es
or
bound
imul
dec
cli
dec
sub
js
adc
out
inc
aam
hlt
pushl
xchg
pop
filds
push
stc
mov
cmp
sbb
add
add
jl
xor
fwait
lock
orb
inc
insl
adc
lods
sub
leave
mov
rcrl
mov
xlat
pop
sub
icebp
sbb
fldcw
xchg
sbb
mov
cmc
fdivl
sbb
mov
aaa
mov
jno
pop
or
or
loopne
into
push
fisttps
cwtl
cmp
decl
in
flds
in
pop
mov
lret
sub
jmp
movsb
jle
jg
sbb
jle
xor
lds
pop
mov
push
imul
das
clc
lds
mov
sbb
repnz
call
or
data16
mov
test
decl
int
pop
pop
fcomp
shll
out
xchg
or
mov
mov
outsb
mov
dec
push
mov
add
call
mov
dec
push
fadds
inc
aad
dec
fidivl
pop
icebp
sbb
call
adc
nop
cwtl
lock
insb
push
add
ljmp
jbe
jmp
adc
push
rcrb
incl
jo
lcall
push
fs
mov
jmp
inc
dec
xchg
adc
lds
ljmp
test
or
insl
pop
cmp
sbb
cmp
aas
imul
leave
jmp
out
andl
andl
sub
jmp
das
mov
ficoms
add
lcall
xor
or
divb
iret
push
call
out
jbe
shl
or
ljmp
mov
mov
dec
movsl
xor
xor
jg
mov
inc
push
imul
mov
lret
es
pusha
lret
cmp
ja
mov
cwtl
and
out
loopne
xchg
push
ss
test
fldt
lcall
pminub
dec
mov
push
cld
rol
ds
mov
rcrl
filds
insl
das
rorb
test
push
and
mov
fsubrs
or
pushw
test
or
adc
dec
je
fwait
outsb
xor
or
out
in
mov
cli
shll
or
add
ret
mov
xor
std
test
fcomps
add
jecxz
xchg
jb
mov
sub
mov
jmp
loopne
imul
or
js
gs
aad
repz
pop
mov
push
push
and
cld
add
jp
hlt
push
sbb
cmp
mov
dec
pop
mov
ds
ljmp
das
insb
fcoml
xor
cld
mov
insb
mov
repz
lock
addr16
mov
or
int3
les
test
sbb
loope
incl
ss
sbb
dec
rcll
mov
add
cld
jnp
mov
inc
xor
ret
lret
dec
jge
ja
pop
or
cmp
adc
sbbl
xor
pop
xchg
cld
add
cmp
cmpsb
adc
add
clc
int3
sbb
bound
jne
fidivs
jo
cld
ljmp
cmp
pop
decb
xchg
sarb
xor
js
push
push
or
lcall
fiaddl
pop
outsl
xor
xchg
iret
mov
je
pop
and
sbb
jle
or
mov
shl
das
fs
shl
pop
nop
jmp
call
xor
or
or
shlb
sub
or
pop
push
inc
mov
clc
add
mov
mov
push
out
mov
test
xor
idivb
adc
dec
adc
shlb
icebp
mov
jb
jo
lods
in
jmp
mov
push
xchg
jl
lock
sub
pop
sub
sub
in
cmp
pop
es
xor
mov
adc
adc
jnp
lea
negb
push
fisubs
les
sahf
add
mov
jmp
jb
pusha
push
and
repz
xchg
dec
cmpsb
lret
push
das
dec
bound
jp
push
scas
or
cmp
jb
mov
xchg
and
mov
sbb
pusha
cmpsl
sub
xchg
mov
push
dec
push
mov
add
das
add
or
sub
bnd
or
mov
aas
js
roll
xchg
call
sub
out
shll
and
xor
adc
pop
add
pop
mov
sub
int3
or
enter
jg
fsubrp
mov
cmpsb
sub
mov
pusha
ret
xchg
adc
cld
or
popl
xchg
arpl
and
mov
shlb
xor
fiadds
iret
mov
push
push
mov
stos
adc
cli
mov
mov
cmp
fsubrl
or
pop
icebp
dec
jg
xor
lret
scas
mov
cmp
inc
insl
mov
mov
pop
or
pop
mov
lock
fdivs
js
cmp
mov
pop
out
int3
in
adc
inc
xchg
sbb
inc
pop
loopne
pop
add
push
sbbb
in
incl
outsl
lea
ret
hlt
in
lcall
nop
or
movsl
jo
clc
mov
in
and
cld
daa
cmc
enter
cmp
in
adc
hlt
cmpl
out
rol
and
int3
and
mov
xchg
mov
mov
sahf
call
fstpt
xor
aad
insl
xor
xchg
xchg
xchg
mov
or
sbb
lods
jo
daa
pop
gs
outsb
mov
rclb
jne
rclb
or
inc
ljmp
sub
jg
es
fmul
mov
loopne
jmp
push
test
insb
xchg
mov
fs
sahf
scas
inc
out
sahf
adc
jno
loope
lcall
mov
push
loopne
ja
pop
and
sbb
cmpsb
mov
add
lock
popa
ss
jg
sub
shrb
arpl
test
mov
jae
icebp
int
pushf
mov
in
addr16
in
mov
fs
push
jns
cmp
push
shl
mov
adc
fwait
jle
into
cmpsb
mov
push
push
dec
fstl
icebp
add
out
enter
and
pusha
ljmp
rorb
rolb
je
mov
mov
lahf
add
add
cs
call
push
cmp
xchg
or
aas
push
add
sarb
jno
dec
mov
mov
movl
insl
xchg
in
cwtl
loope
arpl
mov
push
and
dec
mov
push
std
jg
insb
inc
mov
lods
xchg
jno
in
xchg
ret
in
and
mov
or
xor
sbb
fistl
pop
mov
imul
dec
int3
lahf
add
scas
adc
int3
faddl
push
or
jg
clc
or
enter
add
cs
adc
push
jle
loop
inc
lea
roll
jo
push
cmp
daa
mov
mov
call
sahf
mov
mov
pop
pop
int3
xchg
and
fisttpl
mov
cld
xor
dec
jmp
dec
push
pop
lds
sti
test
sbb
adc
ljmp
pop
les
outsb
icebp
jns
ror
popf
sbb
mov
pop
into
push
or
and
rol
les
jge
add
pop
mov
sbb
jne
jp
jl
test
mov
aas
test
pusha
push
add
sub
pop
lock
jp
push
push
das
or
jne
mov
out
xorb
sti
adc
lock
incb
hlt
aaa
insb
push
test
and
shlb
mov
pusha
sbb
add
jmp
jo
movlhps
rclb
and
stos
jge
pop
andl
scas
cltd
mov
cmp
movsb
fisubs
dec
jae
call
add
decb
lock
decl
xor
das
repz
push
dec
pop
cmp
mov
or
leave
lods
cmpb
das
mov
mov
loopne
cmpxchg8b
into
mov
mov
fisttps
add
pop
add
lret
fs
shrw
mov
testb
cld
mov
hlt
pop
jle
push
inc
sub
insl
ljmp
in
lea
xchg
jbe
push
add
adc
pop
shlb
push
push
stos
xor
adc
pop
shlb
in
lcall
mov
shrb
mov
cmpsl
mov
or
ficoml
loopne
lret
aad
in
int3
ss
nop
fsubl
pop
ret
xor
cltd
nop
dec
popa
push
inc
pop
or
ja
push
push
es
cmpsl
jg
stos
lcall
fcomi
push
je
std
jnp
push
xchg
std
lods
shl
jmp
adc
pop
cmc
mov
cmp
lods
cld
out
clc
popf
pop
dec
sarb
add
mov
jmp
mov
outsb
xchg
cld
mov
mov
add
icebp
push
test
cld
cmc
ljmp
add
lock
aam
std
inc
adc
pop
or
sarb
mov
xor
ja
and
mov
mov
jb
movsl
daa
notl
cmp
jg
sbb
pop
loope
dec
or
push
mov
sbb
push
cmp
js
fsubrl
add
arpl
or
mov
jmp
or
push
push
cmpsl
inc
lcall
mov
push
mov
mov
inc
push
mov
dec
inc
xchg
dec
fidivl
mov
pop
xor
dec
fmul
lcall
cli
mov
gs
inc
push
fwait
pop
int
adc
jo
inc
push
add
loopne
fsubrs
adc
and
out
aas
imul
cvtpi2ps
cld
ss
fsts
les
fcomp
add
dec
jno
pusha
shll
mov
inc
test
lret
sarb
insl
ss
add
incl
stos
mov
dec
mov
sti
pop
adc
push
outsl
or
pop
mov
lret
sub
xchg
lock
mov
aam
adc
xchg
inc
imul
popa
nop
dec
lds
and
cmp
lods
push
inc
push
cmp
xor
bound
loope
js
scas
in
pop
push
inc
sbb
dec
sbb
mov
jg
clc
aas
mov
mov
popf
push
inc
nop
adc
pop
jle
cmpsb
sub
sbb
aad
inc
dec
or
js
mov
mov
or
icebp
fwait
jle
lret
jno
pop
in
add
sub
xorl
rolb
fstpl
jo
add
jp
fdiv
jo
rclb
std
and
push
and
mov
mov
pop
xor
sahf
cmp
xchg
inc
inc
cmpl
sti
ret
fcoms
icebp
je
ja
dec
aam
stos
mov
sbb
xchg
lods
dec
and
roll
data16
aaa
fs
hlt
push
lods
sub
shlb
cld
mov
aaa
ss
mov
add
pushf
xor
cmp
or
mov
mov
mov
pop
sub
dec
pop
sarl
dec
cs
adc
je
aad
jbe
repz
inc
pop
or
aam
and
daa
mov
stos
ss
sbb
or
rclb
lods
loopne
xor
push
cld
xchg
cmpsb
or
inc
mov
shr
or
xchg
mov
mov
pushl
and
sahf
mov
in
das
scas
mov
gs
adc
lods
adc
pop
into
iret
cmpl
and
cltd
scas
jg
popa
push
cld
inc
nop
repnz
mov
mov
dec
mov
sbb
ret
fisubs
mov
sbb
test
data16
inc
sub
and
cmp
push
cli
lods
inc
pushf
bound
mov
fwait
test
ret
stos
adc
aam
mov
ret
inc
push
mov
cmc
jg
add
and
or
pop
mov
adc
adc
cwtl
popf
mov
pop
sbb
push
inc
in
or
stos
data16
movsl
pop
mov
mov
sarl
sbb
mov
push
dec
leave
mov
mov
outsl
call
inc
xchg
icebp
or
pop
ljmp
pushf
mov
mov
push
aam
inc
sbbl
adc
xchg
lret
sub
andb
pop
mov
add
ljmp
or
cli
loopne
pop
sub
ficomps
xchg
mov
cld
cmpsb
loope
lds
mov
mov
mov
inc
pop
mov
or
lcall
sti
inc
xchg
adc
les
out
and
aas
cmc
iret
and
test
mov
ds
and
cmp
jmp
mov
cmpsb
lock
popa
ljmp
lods
push
jo
xor
xchg
inc
aas
or
dec
pusha
inc
mov
dec
cs
cmp
movsb
jmp
xchg
pushf
mov
sub
mov
add
mov
cwtl
mov
rcll
outsb
cli
add
add
sub
xor
test
sub
dec
outsb
mov
xchg
or
fadds
add
shll
or
fildll
sub
pop
xor
cmc
roll
and
scas
mov
jno
mov
xor
clc
xlat
cli
inc
add
je
sub
adc
fs
ja
cli
aad
inc
or
jle
add
cli
decl
pop
jb
jb
cs
shlb
lret
es
mov
push
pushl
ficompl
fsubrl
mov
xor
sar
mov
push
stos
iret
test
dec
into
dec
adc
cwtl
sahf
mov
stos
sbb
xor
pop
addr16
sti
dec
add
mov
pushf
fprem
mov
dec
dec
pop
jne
pop
push
es
adc
pop
mov
add
shr
jle
push
fistpl
and
movl
jne
xor
imull
shr
push
jmp
xchg
les
push
imul
mov
xor
outsb
mov
aam
xlat
mov
push
test
dec
lods
jl
jg
push
mov
ljmp
call
xor
jmp
filds
cmp
pop
or
stos
jecxz
lds
sub
add
or
cmp
out
or
stos
jbe
jg
or
mov
lcall
fcomps
stos
rcll
insl
jo
and
inc
push
jp
adc
add
bound
ljmp
sbb
xor
stos
nop
pop
pop
cltd
pop
mov
test
inc
adc
sub
test
jle
add
and
decl
mov
inc
int
movsb
cmc
pop
mov
cli
fnstsw
cli
adc
cmpb
pavgw
lea
xchg
out
test
repnz
dec
call
ds
lea
popf
jnp
outsb
inc
inc
inc
stos
add
out
shlb
mov
jne
lds
incb
jp
sbb
mov
xchg
addl
nop
push
sbb
dec
xchg
lcall
adc
and
mov
push
xor
xchg
dec
pop
xchg
insl
dec
mov
rclb
test
into
loope
cltd
inc
jmp
stc
test
std
stc
mov
add
les
dec
lret
aad
mov
add
push
jecxz
test
fiadds
jle
adc
mov
enter
sti
mov
jecxz
loopne
cs
pop
hlt
mov
decb
dec
adc
std
sub
or
mov
in
mov
dec
loop
mov
push
dec
les
inc
in
push
xchg
adc
xor
ds
push
pusha
test
jmp
test
cmp
push
or
mov
clc
pop
adc
mov
mov
in
ret
add
lea
rolb
mov
adc
mov
sti
insb
shlb
mov
dec
inc
jno
rcr
push
rorb
inc
clc
test
fdivs
or
jecxz
and
fcoml
test
popa
jmp
icebp
jb
mov
xchg
push
mov
movsb
sbb
mov
push
loopne
or
mov
arpl
out
incb
call
bound
lret
stos
add
add
or
aam
pop
jno
lods
test
cmp
pop
xchg
sbb
stos
clc
pop
fsts
xor
cmp
incl
les
push
test
enter
ret
mov
push
dec
adc
add
aas
sbb
mov
into
dec
fstps
fimuls
clc
push
rorb
dec
jnp
xchg
sub
jg
jmp
sbb
lret
cmpsb
aam
pop
es
and
iret
mov
test
cli
mov
mov
jo
pop
gs
test
incl
inc
pop
and
fildll
adc
inc
inc
adc
addr16
mov
inc
shll
movsl
lahf
inc
cld
aaa
insb
stos
rol
adc
cltd
fxch
sbb
jg
call
jb
push
or
sbb
cmpsb
cmc
rclb
adc
pusha
mov
adcl
push
fs
add
jg
push
inc
cli
cld
push
push
sbb
add
or
shrl
and
add
push
push
mov
sbb
dec
sub
cmp
mov
adc
lods
repnz
pusha
xchg
and
mov
call
push
mov
cmpsb
or
ljmp
mov
insb
mov
loop
pop
lea
mov
jbe
int3
mov
adcl
pop
inc
jp
insb
out
orl
sti
addr16
es
orl
arpl
in
push
mov
je
and
add
aaa
movsb
enter
inc
xor
sub
imul
cmp
inc
xchg
inc
lcall
mov
sub
xor
into
rorb
pop
lahf
pop
push
loopne
and
das
repnz
andb
mov
mov
sbb
movl
fimuls
or
push
imul
pop
addl
incl
add
lods
pop
cwtl
rorb
push
mov
clc
dec
dec
pop
jmp
mov
sub
stc
sarb
pop
loop
hlt
cmp
pop
xchg
sbb
sbb
jg
cli
punpckhwd
push
dec
sub
popf
into
leave
sbb
jo
add
aad
mov
lret
in
js
aas
sbb
fwait
jno
jge
jmp
or
xchg
stc
mov
das
add
pop
incl
mov
dec
pop
or
sbb
jp
adc
jmp
mov
xor
stos
not
adc
rol
mov
les
pop
lock
pusha
les
dec
sahf
mov
scas
cs
sub
js
hlt
lret
pusha
push
dec
sub
push
mov
out
push
pop
xchg
call
ret
insb
fs
js
loop
mov
cmp
call
cmp
sahf
xchg
cmc
nop
jnp
dec
and
add
mov
fcomip
test
dec
mov
mov
push
lcall
fsubl
add
sbbl
pop
mov
aam
push
es
mov
loopne
out
adc
sub
int
fsubr
shr
inc
incl
cld
fs
cmp
pop
fstl
push
popa
loope
push
inc
ljmp
mov
into
lahf
roll
shll
out
and
maxps
rolb
cs
js
jg
test
add
lret
mov
lahf
sub
mov
ja
push
rcl
lods
push
ret
push
bound
dec
cld
ret
movsb
pop
in
and
cmc
fists
test
test
pop
or
stos
xchg
cmpsb
sub
cmc
mov
hlt
mov
adc
sub
push
lock
cwtl
push
outsl
cmp
aam
and
push
and
pusha
popf
out
push
icebp
or
jmp
jg
adc
hlt
out
clc
ja
stos
pushf
out
in
push
orl
adc
mov
inc
insl
and
in
in
out
incl
sbb
outsb
in
mov
adc
xchg
pop
sub
sbb
dec
sub
cwtl
xchg
mov
decl
shll
adc
sub
nop
scas
push
idivl
icebp
pop
push
es
or
adcl
sub
sub
das
dec
mov
rorb
cli
or
jmp
test
inc
xor
daa
in
fistpll
pop
cmp
xchg
lret
pop
jl
push
jle
jge
aaa
fdivl
xchg
hlt
adc
cmp
cmp
cli
adc
dec
cmp
test
pop
inc
ret
movsb
push
ja
jl
clc
outsl
inc
jecxz
scas
jo
mov
xor
test
pushf
sub
out
stos
sar
outsb
repnz
fisttps
es
pop
and
loop
notl
pop
push
xor
movsb
lret
ja
mov
popa
and
push
mov
mov
aam
mov
xor
je
dec
data16
mov
cld
ljmp
mov
stc
push
xchg
push
icebp
aaa
add
adc
inc
jle
add
inc
mov
fcoms
lods
push
mov
push
inc
lcall
xchg
adc
xor
dec
push
addr16
fwait
push
xor
setbe
mov
mov
push
or
mov
clc
aas
jl
popa
rcl
ljmp
or
arpl
sub
or
cmpb
or
fimull
or
inc
or
pushl
call
and
push
inc
sbb
xor
adc
cli
ljmp
clc
stos
dec
push
xor
pop
shrb
pushf
pop
arpl
movsl
stos
lods
movb
jge
pusha
test
ret
test
mov
pop
add
push
repz
pop
das
push
sbb
pusha
and
sahf
cmp
jne
lret
pusha
out
fists
test
sub
addb
mov
add
inc
daa
pop
adc
dec
loop
add
rcr
mov
or
mov
sbb
inc
push
fsubs
push
add
les
call
and
cli
ret
ds
clc
adc
cltd
fwait
xchg
outsl
mov
sub
fcoml
inc
or
mov
jo
outsb
imull
push
adc
sub
loop
mov
xchg
loopne
fcoml
pop
ret
push
dec
sub
pop
mov
sahf
call
int3
cld
sbb
add
and
sub
sahf
push
inc
aad
dec
sbb
sbb
sub
sub
xor
ret
adc
xchg
jo
pushl
hlt
mov
adc
add
sbbl
aam
inc
sar
sha256rnds2
push
leave
pop
je
xor
and
test
push
fists
mov
xor
and
and
and
scas
add
test
and
push
bound
ds
es
popf
push
or
cmp
shr
pushf
shll
pop
add
xor
iret
cmp
dec
push
les
js
mov
pusha
pop
sti
std
pop
mov
cmc
xchg
es
fimull
stos
movsb
and
rep
fwait
icebp
cmp
xchg
aad
mov
insb
ljmp
mov
jmp
loopne
in
pusha
pop
gs
inc
push
mov
mov
mov
push
cmp
std
sbb
inc
sbb
std
daa
imul
stos
call
jo
lods
mov
pop
insb
mov
mov
sbb
jl
and
stos
pop
les
clc
cld
aad
andl
pusha
push
cmp
repnz
jl
jmp
xor
inc
orb
and
andl
or
movsb
div
dec
outsb
mov
adc
andb
adc
add
addl
stc
lahf
or
dec
or
rsqrtps
pusha
jmp
sbb
jbe
test
scas
mov
loopne
es
outsl
jl
inc
xlat
jmp
dec
push
sub
inc
js
or
sub
fstpt
jne
fwait
cbtw
ret
jb
aas
popa
sbb
mov
adc
dec
idiv
adc
mov
mov
inc
adc
ret
out
sbb
mov
mov
lock
or
aam
jns
inc
jnp
mov
add
pop
repnz
loopne
sbb
adc
add
ret
push
mov
pushl
adc
lods
out
or
dec
inc
aaa
xor
mov
dec
adc
or
push
cli
cmp
inc
mov
lods
orl
shrb
add
pop
jns
pop
jecxz
imul
xchg
enter
mov
aas
pop
dec
jge
std
rcll
negb
add
outsb
and
sbb
jle
jecxz
add
sub
xchg
movsl
and
mov
jg
pusha
and
inc
xor
push
push
dec
jmp
dec
cmp
xchg
ret
cwtl
dec
pop
push
adc
mov
cli
lret
int
push
or
adc
xchg
ss
and
add
push
clc
icebp
sbb
leave
pop
lcall
fisttps
loop
rolb
add
and
lret
lret
test
mov
hlt
arpl
fst
outsb
int
outsl
xchg
je
adc
add
es
cmc
adc
scas
stc
mov
mov
mov
push
add
pop
jecxz
add
sub
loopne
jp
fwait
xor
pop
repnz
push
jp
fisubl
out
cmpb
cmp
adc
scas
jae
or
loope
stos
sti
mov
std
xchg
gs
fildl
mov
lret
popf
push
pop
cmp
insb
mov
add
out
out
int
std
jmp
inc
jmp
jne
scas
add
adc
aam
loop
push
pop
or
mov
into
inc
mov
dec
jecxz
aas
pop
jns
dec
lcall
and
clc
push
sbb
cs
in
lock
xor
loop
add
loope
sbb
insb
cli
and
jg
fcomip
jp
fdiv
inc
dec
xor
lret
cmp
xchg
pop
mov
nop
push
pop
popa
xchg
adc
pop
cli
dec
incb
ljmp
push
in
jo
and
push
dec
dec
std
outsl
push
xor
dec
dec
and
les
aam
cmc
cmp
sbb
lock
jns
push
icebp
mov
nop
stc
into
jle
loopne
cld
scas
add
sub
push
clc
add
and
pusha
adc
jg
sarb
fwait
push
jge
fiaddl
ret
push
jge
mov
std
xlat
and
loopne
push
add
xor
cmpsb
maxps
jbe
dec
rclb
inc
add
cmp
out
pusha
push
jmp
outsl
outsl
mov
add
mov
subl
scas
push
sbb
shlb
outsl
cmp
and
sub
inc
push
cmc
adc
pop
push
mov
lret
xor
pop
loope
gs
and
hlt
sbb
xchg
mov
or
fsubrs
loope
test
ss
cmp
dec
sub
negb
inc
mov
pop
arpl
out
shlb
outsl
rolb
cmp
mov
aam
add
xchg
insl
cld
push
or
ljmp
or
pop
pusha
or
stos
jbe
push
jge
insl
add
js
inc
adc
leave
mov
add
push
inc
insb
in
shlb
int
call
in
or
mov
hlt
aaa
adc
cmp
lcall
insl
mov
cmp
insl
pop
pop
testl
cmpsl
hlt
xchg
orb
xlat
adc
xlat
or
and
mov
cmc
xchg
inc
sub
sti
dec
xor
pop
sbb
pop
in
ds
inc
in
pusha
test
cmc
lock
rorb
stc
pushf
and
inc
rorl
in
hlt
sbb
enter
pop
mov
sbb
scas
xchg
outsb
nop
xor
mov
add
xor
xchg
pop
inc
int
test
dec
and
fcomps
add
or
lock
jl
sbb
lret
cltd
or
mov
sarl
jns
adc
pop
mov
mov
xor
andl
sahf
cmpsb
jecxz
push
cmpb
xor
outsb
add
mov
in
dec
push
jl
xchg
mov
test
jle
test
sub
ret
push
push
push
cli
jmp
add
xchg
adcl
loopne
std
add
cld
mov
call
adc
cmc
aas
pop
test
scas
cld
inc
mov
jge
aam
or
or
out
scas
out
cmp
clc
pop
dec
sub
pop
cwtl
xor
adc
scas
jp
pop
xor
shl
and
add
sub
jmp
es
addr16
sub
adc
cltd
or
push
arpl
shr
adc
dec
mov
mov
pop
jecxz
rcrb
sub
das
cmpsb
cmp
xor
jb
add
pop
mov
stc
mov
stc
movsl
and
sub
xchg
sbb
xchg
sub
pop
shll
inc
lret
push
int3
loopne
scas
jg
push
shl
and
pop
dec
push
xchg
jns
push
xchg
sti
rorl
mov
cmp
fwait
inc
fistpl
lcall
push
cli
imul
add
aaa
adc
bound
aas
cmpsl
xchg
daa
lea
and
orl
jg
and
push
imul
aas
clc
aas
push
push
or
mov
inc
jno
out
jne
enter
and
loopne
fcomps
faddp
bound
pop
mov
cmp
inc
cmc
repnz
fildll
rorb
or
fstl
jnp
cli
lret
inc
test
pop
gs
mov
cltd
sbb
sbb
outsb
repnz
and
inc
adc
int3
orl
cmpsl
fildl
mov
xor
lret
inc
adc
add
pop
cld
mov
xor
imul
push
sbb
js
add
stc
and
out
xchg
cwtl
cmp
mov
cs
cmp
push
push
popl
daa
sbb
sbb
inc
rorb
aad
jg
mov
push
enter
adc
or
test
sub
xchg
loopne
or
lcall
clc
push
mov
rcrb
lods
ja
mov
cmp
sub
push
rcr
adc
adc
xchg
hlt
and
cld
les
addr16
es
jae
aaa
jg
loopne
aad
stc
stos
or
sub
mov
jecxz
and
sbb
mov
repz
dec
xor
clc
add
mov
jg
pop
imul
aam
mov
or
nop
fildl
add
mov
pop
or
sbb
inc
sub
mov
pop
in
arpl
xchg
cmpsb
lds
out
pop
adc
lock
outsb
xor
gs
mov
mov
hlt
aas
inc
flds
dec
xchg
xchg
and
ret
mov
and
mov
js
push
loop
adc
jle
ds
mov
roll
shlb
dec
xor
mov
rolb
loop
lret
xor
jmp
cli
scas
inc
push
int3
jno
arpl
push
jnp
lcall
xchg
lds
mov
fadd
or
inc
and
and
mov
fiaddl
les
sub
and
mov
out
les
insl
test
xchg
subb
mov
push
in
sbb
dec
mov
into
jmp
hlt
pop
std
cmp
sarb
jp
lock
pop
and
repnz
cltd
or
rcrl
xor
ds
pop
jne
push
cmp
popf
pop
dec
jmp
dec
push
lods
xchg
push
sub
rorl
push
loope
sbb
and
pop
cld
arpl
mov
incb
imulb
jp
jg
lds
sub
push
push
inc
cmp
add
push
dec
dec
push
aaa
inc
aaa
cs
or
dec
add
ljmp
add
mov
stos
divl
test
push
mov
es
sar
cs
and
pushl
fnstcw
pop
inc
dec
sub
mov
ret
xor
mov
stc
mov
xchg
mov
sub
or
addr16
repz
mov
push
or
and
add
and
pop
xchg
test
jae
fcoms
dec
adc
in
xchg
and
or
jmp
js
ret
inc
inc
sbb
movsb
push
mov
and
pop
dec
adc
mov
pop
or
add
and
mov
std
sub
arpl
movsl
cli
in
inc
push
jge
mov
je
fs
loopne
sti
incl
dec
and
jp
inc
stos
ljmp
pop
js
pop
mov
cwtl
sbb
push
pushf
jns
adc
faddl
and
pop
pushf
xor
cmpsb
ret
inc
xchg
inc
or
xchg
int3
inc
pop
push
outsl
jg
push
js
inc
sub
xchg
setge
popl
incl
sub
sbb
dec
jecxz
xchg
mov
jno
icebp
jl
dec
jg
hlt
xchg
sub
mov
das
add
pop
clc
push
jg
lock
iret
cwtl
faddl
ret
lret
sbb
jl
cmp
aas
push
cmc
add
rcrb
jp
jle
mov
jmp
inc
subl
shlb
and
test
outsl
jb
inc
dec
jne
ret
lcall
sbb
cmp
pop
pop
sbb
adcb
cmpsb
jg
fwait
push
pop
and
add
sbb
add
add
lret
enter
rcll
or
pop
mov
xor
push
js
or
jae
pushl
cld
dec
aaa
adc
fs
adc
icebp
shlb
iret
clc
fldt
sub
outsl
jae
stc
push
gs
dec
ss
ljmp
loopne
je
outsb
hlt
add
imul
sub
inc
or
sbb
hlt
fcoml
dec
loope
test
hlt
push
loopne
add
test
jno
jg
iret
sub
adc
cmc
jbe
int
popf
movsb
outsl
pop
mov
gs
aaa
decb
mov
lcall
arpl
jns
and
daa
push
mov
xor
sbb
cmp
push
or
jge
pop
xor
pushf
xor
popa
push
and
std
dec
mov
loopne
and
cmp
sub
into
into
arpl
add
xor
pop
fisubrl
das
pop
push
jle
pop
outsb
push
clc
xchg
dec
jb
cmp
sbb
xchg
inc
js
in
mov
hlt
pop
in
popf
cwtl
dec
enter
cs
sbb
dec
insl
dec
popf
filds
mov
cmp
jns
push
sbb
int3
adc
lret
push
out
mov
nop
rolb
adc
bound
loope
xor
ja
push
pushf
fldt
add
int3
add
lcall
arpl
clc
test
pop
adc
shl
jae
mov
mov
fstl
jmp
clc
pop
fmuls
ljmp
scas
mov
daa
fidivrl
test
stos
not
cmp
imul
inc
cwtl
je
push
adc
imul
push
movsl
rorb
data16
push
call
push
call
popa
inc
push
pop
ret
or
jbe
ret
adc
mov
outsl
gs
cwtl
aas
sbb
mov
test
orl
andl
rcrl
ss
jl
xor
lcall
sbb
or
mov
das
leave
xor
ficompl
filds
inc
jne
cltd
adc
test
rcl
lock
and
adc
in
adc
inc
movsl
add
loopne
inc
in
cmp
in
add
lret
je
add
lds
sbbb
lods
je
mov
shr
inc
jns
push
pusha
outsb
aad
lea
loope
sarb
call
clc
cmp
stos
jle
cmp
xchg
notb
mov
mov
int
in
adc
sub
lcall
sbb
insb
aad
sub
mov
in
xchg
pushf
sub
outsl
and
inc
lds
test
movb
push
sbb
xor
add
jnp
roll
jo
push
jb
lret
lds
cld
push
and
shlb
pop
andl
adc
push
lret
mov
xor
scas
mov
mov
ljmp
xor
mov
test
push
adc
jg
add
bound
inc
push
inc
fisttpll
add
ds
or
adc
push
pusha
lret
lock
sar
add
pop
cmc
or
enter
sub
pop
cld
movsl
lds
nop
xor
rorb
nop
push
fs
loop
ljmp
and
ds
test
fcoms
inc
sbb
adc
idivb
fsubs
idivl
pusha
cmp
push
mov
icebp
push
pop
mov
adc
or
roll
aad
mov
add
cwtl
xchg
mov
push
stos
mov
ds
jmp
xchg
fists
aad
push
cwtl
push
lret
xchg
adc
sub
shlb
lods
ficomps
pop
scas
mov
push
cwtl
lods
fstl
aaa
xchg
loope
cmp
les
pop
jp
loope
mov
xor
and
jge
push
mov
and
incl
loopne
out
fdivrl
aaa
jne
pop
imul
js
sahf
mov
cmpsb
adc
push
dec
dec
and
imul
xchg
es
adc
fs
loopew
jmp
ljmp
shlb
mov
pushl
scas
push
push
xor
or
and
jp
jmp
out
mov
mov
jo
loope
decl
adc
rcrl
push
das
clc
rclb
inc
push
mov
dec
mov
jmp
nop
sahf
test
je
sbb
ret
loope
shll
xchg
call
pop
lcall
scas
out
or
push
pop
ljmp
mov
cld
fwait
fwait
adc
xchg
push
lock
inc
push
cld
lea
fchs
xchg
push
lahf
std
aaa
sub
cs
out
icebp
das
inc
les
je
mov
insb
push
xor
jmp
insb
std
add
js
sub
inc
je
das
clc
bound
leave
outsb
fists
int3
jno
lds
incb
mov
xchg
cli
incl
xchg
sbb
push
mov
pop
dec
inc
decl
icebp
add
xor
xchg
pop
fcoms
shll
es
lea
inc
shlb
inc
jo
jge
out
js
lcall
and
sbb
jmp
and
aaa
test
in
sbb
adc
ret
push
mov
leave
mov
cmp
and
jo
mov
fs
jp
test
mov
ss
jno
gs
adc
jl
incl
mov
xlat
call
imulb
and
add
pop
lcall
jg
pop
lea
or
aas
inc
popf
cs
xor
jb
mov
arpl
jg
mov
loop
jo
push
xrelease
js
add
mov
or
xor
add
add
inc
in
jo
out
pusha
push
jo
sbb
in
cmp
data16
mov
addb
cs
and
and
hlt
decl
mov
outsb
icebp
or
sbb
sbb
clc
fwait
outsl
es
cmp
sub
pop
loope
pop
mov
xorb
push
mov
inc
mov
adc
mov
pop
xor
mov
outsb
ret
rcl
call
push
adc
daa
jmp
lret
mov
push
decl
xchg
lret
cmp
ret
inc
scas
and
mov
mov
and
xchg
jnp
add
sub
aas
shlb
mov
pop
inc
or
scas
inc
jle
rcr
int
into
or
xchg
pop
int
add
mov
xor
out
lahf
mov
push
inc
mov
rcrl
rorl
inc
clc
sarl
jns
call
hlt
das
cmpb
lods
cld
or
ret
inc
pop
pop
icebp
test
xor
or
callw
mov
lret
in
sub
lcall
pop
push
xlat
push
movlps
in
rol
cltd
loope
pushf
cli
and
dec
xchg
and
aam
inc
cmp
ljmp
and
dec
pop
hlt
xorb
push
push
mov
mov
scas
inc
pushf
and
adc
xor
adc
out
es
or
fcmovu
mov
cmp
and
dec
cmp
push
sbb
test
insb
mov
out
mov
enter
dec
stos
jmp
mov
imul
add
xchg
adc
mov
hlt
add
sbb
or
sbb
xor
or
cmp
lea
and
jbe
lea
lahf
movsb
sti
mov
rol
loop
xchg
inc
or
adc
inc
mov
jg
std
or
mov
add
xchg
inc
test
or
add
dec
cli
add
xor
stc
sbb
adc
push
sub
shll
adc
incl
int3
push
orb
push
sbb
enter
cmp
call
or
mov
loopne
mov
ljmp
cmpsb
dec
push
pop
cmp
je
fcoms
pop
jle
sahf
shl
pushl
in
data16
icebp
icebp
xchg
jnp
daa
sbb
mov
clc
daa
enter
subb
jle
ja
mov
cmp
pop
xchg
add
and
sbb
or
add
mov
push
xchg
and
loop
pop
test
cmp
mov
pop
add
das
or
pop
iret
mov
add
add
ss
jno
push
dec
adc
in
mov
pop
sti
fisttpll
daa
xor
insl
jge
lods
xlat
mov
sbb
dec
jl
or
std
mov
dec
add
push
in
fwait
and
bound
popf
inc
mov
test
sbb
nop
fs
cli
inc
loope
pop
dec
cmpsb
jae
sbb
push
test
shl
xchg
push
add
insl
stos
pop
or
and
mov
ret
push
dec
dec
push
xchg
pop
imul
adcl
push
test
aad
sbb
push
jle
or
or
push
in
filds
xchg
xor
loop
adc
inc
xchg
inc
out
test
pop
clc
xchg
mov
out
jne
xchg
cmpsb
add
decl
xorb
xor
inc
adc
rcrb
cmpsl
mov
ret
pop
mov
fcoml
jmp
add
sub
jl
dec
repnz
push
or
incl
adc
pop
mov
repz
inc
arpl
mov
pusha
nop
mov
sti
ret
jg
pop
popf
sub
push
cmpsl
mov
mov
pop
jg
cli
decl
loop
sub
cmc
adc
notb
xchg
adc
out
clc
xchg
push
adc
fimuls
and
ret
jnp
pop
dec
jns
mov
sar
mov
xlat
adc
cmp
cmc
mov
int3
dec
xchg
into
xor
fbstp
push
mov
inc
stos
fadds
push
push
shl
call
insb
cld
int
xor
or
jne
mov
xor
fisttps
jne
imul
cwtl
pop
movsl
inc
dec
cwtl
adc
add
icebp
push
add
sahf
mov
inc
add
cltd
mov
mov
stc
imul
decl
aaa
pop
mov
std
add
pop
push
pop
add
dec
cmp
xchg
push
cmp
mov
in
addl
jl
out
mov
clc
fmul
inc
jmp
ret
adc
mov
sbb
jmp
popf
dec
add
dec
sahf
inc
in
push
add
loop
fdivrp
sub
movsb
data16
fisubrs
aad
dec
mov
jbe
mov
add
inc
mov
adc
aas
decb
popa
loope
add
lods
repnz
out
in
popf
les
icebp
incl
add
sbb
xor
jne
sub
dec
inc
fbld
out
sub
pop
add
lock
aas
push
fxch
sti
xor
in
sbb
jo
jmp
inc
fwait
loope
push
cmc
inc
shlb
jbe
out
mov
ffree
in
pop
or
pop
mov
sar
clc
add
pop
ds
sbb
adc
cmp
dec
and
addr16
jmp
push
call
nop
movsb
loope
mov
inc
mov
bound
mov
iret
adc
inc
inc
dec
cmp
mov
mov
mov
into
sub
push
pop
cmp
rcrl
inc
add
xchg
fwait
out
ret
jle
lods
fsub
mov
ret
mov
sbb
outsb
sub
scas
ret
push
adc
outsb
rorb
xlat
xchg
pop
test
lcall
add
adc
out
mov
bound
lock
dec
outsb
sub
adc
mov
nop
jb
sbb
lock
sahf
lahf
lock
or
adc
loop
push
icebp
mov
or
dec
push
xchg
and
pop
add
daa
xchg
shlb
sbb
push
cmc
enter
xchg
push
add
cmpsl
or
xchg
sahf
pop
out
mov
adc
lcall
inc
orb
xor
iret
cmp
or
adc
pop
add
or
scas
xchg
decb
sbb
pop
push
add
mov
loop
mov
mov
in
xchg
in
inc
xor
adc
shll
xchg
fldt
cli
cs
and
dec
or
mov
pop
mov
mov
xor
and
cmp
adcl
lds
fisttpl
dec
and
and
mov
or
ret
mov
inc
fistps
jb
call
push
rcrb
sar
adc
out
lds
mov
cld
xchg
mov
in
fistpl
filds
sqrtps
rorl
cmpb
xor
sub
push
jp
mov
and
icebp
sub
pop
sub
data16
push
jl
or
out
add
sub
and
adcb
inc
jbe
cld
mov
clc
push
sbb
loop
test
pop
lock
mov
das
adc
movsl
pop
ret
pop
or
in
fbld
loope
xor
imul
cld
inc
pusha
dec
loop
push
fimull
push
adc
mov
cld
stos
aaa
cs
inc
mov
xor
mov
mov
and
xchg
in
subb
iret
sbb
add
mov
test
add
mov
push
es
or
mov
loopne
cld
push
inc
xchg
ljmp
icebp
das
aam
incl
jp
jo
aas
xchg
mov
addl
jb
je
jmp
fildl
or
xchg
and
lahf
je
out
mov
jl
lret
xchg
mov
lret
ret
incl
inc
jnp
cmp
or
test
push
loop
outsb
insb
decb
sbb
es
inc
mov
push
mov
adc
in
jb
sbb
decl
loope
les
sbb
test
stc
data16
sahf
mov
es
push
xchg
movsb
les
pop
push
and
mov
mov
or
push
mov
mov
out
inc
sbbb
jg
pushf
std
push
pop
je
jnp
and
loop
and
test
lock
jg
test
sbb
leave
shlb
stc
sbb
pop
or
stc
adc
or
hlt
fwait
mov
aam
xchg
fwait
jmp
cltd
loopne
push
sub
in
nop
repz
mov
jecxz
orb
push
adc
push
or
pushl
cmp
or
add
ja
mov
shrb
out
cltd
imul
mov
xchg
movsb
sbb
shlb
add
fcmovnb
pop
fldl
or
adc
incl
cltd
mov
push
push
xchg
mov
mov
add
inc
pop
fldl
lahf
adc
sub
js
lock
adc
lea
sub
mov
cwtl
inc
lahf
loop
sbb
pop
xchg
and
cmpsb
jp
fwait
jmp
aad
and
in
pop
mov
imul
int
daa
frstor
ds
sbb
mov
xchg
divb
into
xchg
push
sub
cmp
clc
inc
jp
adc
cmpl
mov
clc
pop
decl
or
sub
sub
xchg
subl
adc
pushf
mov
jns
shlb
jp
xchg
in
lret
lods
mov
ret
adc
mov
ljmp
aad
ret
scas
les
sbb
cli
xchg
cs
mov
mov
xchg
mov
dec
xchg
jne
loopne
adc
mov
shl
repz
inc
or
push
mov
push
aam
incl
xchg
call
arpl
xchg
test
jae
imul
aam
push
mov
sbb
ds
dec
push
xchg
std
lods
test
xor
decb
cmp
scas
scas
add
stc
mov
mov
mov
cmp
mov
add
cmp
sub
bound
push
fnstenv
xchg
ret
xor
stc
add
ss
nop
ret
jp
fisubrl
call
and
sbb
decl
scas
pop
loope
sub
dec
dec
bound
aaa
pop
pop
lock
cltd
and
scas
sbb
rcrl
mov
shl
xchg
push
xchg
es
rolb
ja
nop
cmp
cmpsb
mov
jo
mov
xchg
adc
mov
ret
orl
pop
and
incl
xchg
fmuls
mov
or
call
xchg
movsb
test
lahf
bound
or
pop
mov
push
leave
adc
int
pop
lcall
add
sbb
dec
pop
aad
jmp
ljmp
call
mov
sbb
mov
mov
pop
js
add
dec
fmul
adc
xbegin
adc
inc
addr16
into
je
mov
out
mov
int
das
ss
cmp
add
iret
fs
jne
and
cld
xchg
insb
cmp
bnd
ret
push
dec
adc
cmp
mov
pushf
inc
aad
push
pop
lock
mov
sahf
ds
push
es
mov
sub
xchg
idiv
shr
mov
inc
test
pop
fmul
scas
int
fucomp
mov
aam
ret
push
movsb
es
cli
mov
lods
daa
sbb
je
fildll
sub
movsb
push
mov
das
sti
fldl
or
add
arpl
jecxz
rolb
pop
push
or
fwait
ljmp
mov
push
jle
mov
or
xlat
add
or
jle
test
pop
push
sub
std
push
inc
lret
in
jne
loopne
lahf
mov
add
pop
pop
push
bound
xchg
in
dec
andb
push
mov
pusha
rcrb
adc
adcb
lods
dec
push
lret
and
inc
in
and
or
mov
mov
add
cmp
or
jb
fwait
sbbb
ss
call
movsl
sub
pop
adc
cmpsl
ficompl
or
fildll
cld
xchg
mov
shll
lcall
mov
add
xchg
push
adc
repz
out
stos
jle
sbb
jo
jmp
adc
sub
sbb
jle,pn
movsb
sbb
jo
es
aam
cmp
adc
cmp
pushf
fiadds
decl
push
loopne
pop
add
fldl
lods
rorb
rorl
outsb
sahf
dec
cmp
or
pushf
flds
jl
cwtl
cmp
add
daa
cmpsb
addb
icebp
ret
pop
cld
cmp
lock
adc
je
dec
sahf
add
sbb
movsl
mov
sbb
adc
sbb
xchg
pop
dec
mov
fwait
rolb
out
sub
imul
inc
sub
jbe
sub
mov
mov
inc
test
mov
sbb
jne
adc
fcmovbe
jb
leave
sahf
mov
lods
push
push
push
xchg
mov
cmc
fldt
mov
mov
flds
cmp
mov
push
inc
aam
test
sbb
mov
andl
decl
int3
idivb
or
loopne
dec
sbb
jno
or
decl
cmp
adc
lcall
add
and
or
fldt
mov
ljmp
or
fs
pop
push
sti
les
orl
das
in
ljmp
dec
pop
inc
cmpsb
cld
cmp
leave
aam
in
or
lcall
jg
ds
jnp
out
bound
shlb
sbb
xchg
push
sub
ss
outsl
mov
call
pop
cltd
out
jg
lds
pop
in
icebp
daa
xchg
jecxz
or
push
dec
std
mov
mov
cltd
add
mov
mov
std
mov
fisubl
push
out
cmc
lock
popf
fimuls
int3
andb
inc
es
mov
clc
aas
outsb
cmpsl
pop
inc
fstpt
sbb
sbb
fstl
jno
or
pop
mov
iret
lcall
adc
mov
cmp
push
cmp
xor
mov
int
push
jne
mov
add
or
sub
aaa
cwtl
repz
bound
xlat
or
scas
mov
imul
xor
or
lds
mov
mov
sbb
addr16
std
or
xchg
push
movsl
xchg
sbb
fdivr
adc
es
jb
sub
cmc
sub
rclb
outsb
mov
enter
lcall
jp
pop
pop
and
add
mov
shrb
dec
adc
push
ds
jb
pop
dec
stos
idivb
push
test
inc
iret
pop
sbb
push
xchg
lret
pop
and
and
negl
jl
gs
mov
sbb
not
and
xor
fsubrl
testb
jl
xor
xchg
sbb
mov
inc
mov
pushf
xor
sbb
ss
loope
lock
push
mov
or
pop
das
nop
lods
push
push
jns
push
fcomip
ret
mov
loop
fsts
lods
repnz
out
mov
pop
lret
test
shrb
pusha
push
sub
cmpsl
push
les
jmp
cmpsb
push
pop
imul
fisttps
jg
addr16
inc
fwait
mov
and
es
cmp
mov
mov
loopne
and
aas
mov
sub
or
dec
and
mov
imul
aaa
repz
sbb
xor
sbb
add
clc
adc
add
aaa
pop
push
clc
mov
cmpl
add
std
jnp
cmc
pop
popa
jns
jbe
and
ljmp
mov
mov
aam
rcr
hlt
call
or
sbb
imul
pop
push
dec
call
cwtl
push
and
pop
push
add
repnz
jl
stc
loope
call
push
and
inc
ds
test
jg
fdivl
push
adc
jge
or
push
test
orl
jae
push
or
and
imul
push
xchg
ljmp
repnz
int3
leave
and
push
jbe
adc
pop
mov
inc
dec
stos
insb
mov
or
xor
sbb
scas
add
mov
js
jne
mov
and
rcrb
rolb
aam
or
lahf
sbb
mov
inc
je
xor
test
and
fbstp
sub
add
test
mov
mov
clc
es
mov
mov
sub
test
sbb
add
std
je
nop
dec
stos
out
dec
hlt
jo
andl
pop
mov
cmp
stos
mov
cld
aas
subl
repz
rolb
adc
mov
je
loopne
repnz
xor
inc
mov
aaa
fdivl
adc
mov
fdivrl
pop
pop
out
cmp
negb
mov
jp
lahf
fwait
xor
clc
out
or
mov
jb
in
ljmp
jbe
ret
sbb
lock
test
popa
mov
mov
fwait
adcl
add
mov
add
clc
incl
xor
rorl
xor
cli
xor
pop
inc
add
mov
or
sub
jmp
mov
push
push
and
notb
repz
sub
add
jmp
push
adc
adc
out
sub
and
out
icebp
ja
clc
es
pop
icebp
or
stc
in
mov
cld
mov
aaa
push
mov
sub
out
add
push
out
incl
fiadds
xor
or
adc
int
mov
test
les
mov
aam
stos
xor
loopne
movb
mov
mov
cmp
roll
nop
sbb
dec
nop
test
pop
add
sub
shl
dec
jo
ret
pop
push
rcr
decl
enter
outsl
xchg
sbb
ds
adc
ret
lahf
push
mov
in
loopne
xor
fists
xor
das
test
ror
add
pop
out
hlt
pop
inc
ljmp
xorl
in
sbb
mov
sub
add
lods
subb
ss
adc
addr16
push
rorb
inc
inc
pushf
sub
ficoml
pop
dec
sti
mov
xchg
xchg
add
and
fsubrl
bound
xor
or
dec
jno
xchg
es
xchg
lods
les
pushf
int3
loopne
leave
int3
inc
inc
cltd
xchg
inc
jo
jle
bound
loope
dec
clc
sbb
loop
decb
xchg
es
push
cmp
pop
push
dec
sbb
aas
cmpsb
push
sub
pop
dec
and
cs
movsb
xor
and
pop
mov
popf
push
dec
or
movsb
and
mov
mov
push
clc
gs
and
test
pop
fimuls
push
pop
and
loope
cmc
and
into
out
and
cmp
gs
mov
mov
xor
xor
add
add
cli
cmp
cli
outsb
pop
mov
shll
pop
inc
movl
inc
bound
sbb
jo
xor
leave
out
cmp
xchg
push
mov
xlat
mov
add
xor
mov
mov
insb
add
stos
das
clc
or
inc
lods
adc
pop
pop
pop
cmp
pop
lahf
mov
hlt
call
pop
jp
aas
push
xchg
xchg
pop
in
add
aas
jae
fiadds
mov
lock
rorb
lock
jb
mov
insb
lret
test
test
mov
movb
imul
pushf
push
or
test
repz
sbb
mov
mov
cmp
xor
adc
loope
cmp
adc
pop
movsl
test
pusha
pop
hlt
mov
pusha
pusha
add
pop
jo
mov
mov
add
icebp
ljmp
push
daa
cmp
rorb
in
movsbl
push
mov
jb
mov
jo
add
bound
and
push
imul
lds
lret
aam
sbb
dec
mov
mov
fists
jge
mov
push
pop
jbe
push
cmp
add
push
and
mov
call
in
mov
dec
add
ja
into
lahf
sbb
jl
cld
cmpb
push
adc
push
loop
xchg
sbb
scas
push
push
dec
loopne
ds
jle
adc
sbb
insl
lock
pusha
inc
pop
sbb
push
into
or
dec
mov
cmp
cmp
xchg
push
rorb
push
movsb
push
dec
dec
negl
fdivr
or
filds
jnp
in
loop
fisttps
and
into
pop
or
into
push
pop
xor
push
adc
add
inc
aaa
jg
repnz
add
movsl
data16
pop
and
jg
jecxz
pop
in
lds
les
jnp
push
cmpsb
add
notl
testb
xlat
int3
test
jl
lods
add
dec
push
jae
cmp
cmp
and
and
sub
xchg
std
call
inc
xchg
stc
jle
inc
xor
jbe
iret
rorl
cmpb
andb
jno
sbb
popf
mov
scas
xor
jp
push
push
inc
pop
jmp
pop
or
fcom
fisttps
inc
sarl
jecxz
and
add
addl
outsb
loope
or
pop
xchg
ljmp
je
loop
test
inc
cmp
lret
or
hlt
adc
and
aad
movsb
scas
xchg
push
neg
es
jg
push
negb
sarl
call
sbb
jl
fnstsw
rcl
pop
xorb
les
mov
push
loopne
call
sub
repnz
dec
xchg
out
out
cli
ret
push
cmp
cld
call
lock
dec
mov
lret
or
popa
pop
and
cmp
aas
in
jb
cwtl
cs
lods
imul
mov
test
mov
xchg
add
loopne
jle
lahf
ret
xlat
lds
inc
stc
xor
scas
add
dec
xchg
fiaddl
loope
inc
aaa
shlb
xchg
adc
sub
clc
mov
shl
sub
das
cmc
mov
add
cmpsb
sbb
cmp
rorb
cli
sbb
jne
sub
jno
leave
xor
push
mov
mov
jb
xor
ljmp
sbb
add
mov
leave
cli
and
rclb
lcall
aad
nop
hlt
es
into
hlt
clc
scas
jp
scas
jp
push
adc
ret
sub
xchg
test
test
out
cmp
fwait
mov
mov
adc
sbb
test
outsl
sub
mov
sub
dec
add
add
xor
lret
lret
mov
sbb
rclb
fadds
mov
push
jno
dec
jle
mov
mov
int3
divb
subb
sub
add
dec
icebp
clc
lcall
dec
jg
adc
or
lods
jp
movsb
jecxz
xor
push
out
or
mov
jmp
cmpsb
imul
inc
aaa
adc
xchg
fbstp
insb
dec
mov
adc
data16
and
mov
xor
shll
imul
mov
cmc
aaa
mov
test
or
mov
rorb
lea
pop
pop
fiadds
fimull
and
ficoml
mov
and
inc
mov
imul
scas
stos
jne
add
sbb
mov
addl
repnz
ret
push
enter
cmc
ficoms
xchg
push
stos
or
adc
shl
lgdtl
dec
popa
xchg
stos
cmc
dec
pop
mov
cwtl
xor
push
out
pop
call
ss
test
cmp
dec
ljmp
sbb
dec
dec
movsb
cmp
lea
call
bound
mov
and
push
lods
or
mov
call
rcrl
or
or
adc
dec
pop
or
pop
jno
fs
mov
push
pop
add
inc
and
mov
loop
mov
cmc
rcrb
lods
fwait
sbb
sahf
mov
xchg
call
sbb
insl
dec
lea
nop
js
pop
push
xor
loopne
cmp
and
dec
into
call
test
xor
mov
loop
call
cbtw
sbb
out
sbb
gs
test
cwtl
repnz
cld
arpl
pop
push
test
call
fidivs
dec
call
nop
xchg
dec
pusha
fdivl
or
clc
aaa
cmp
lret
pop
cltd
xchg
orb
mov
pop
xor
or
outsl
inc
mov
xor
fidivrl
insl
lcall
ss
hlt
and
add
xchg
add
sub
mov
cwtl
xchg
inc
enter
aad
mov
ljmp
xchg
jo
dec
ljmp
xchg
stos
push
inc
dec
dec
sahf
push
or
sub
mov
outsl
cli
cmp
inc
xor
adc
imul
mov
das
push
gs
pop
pop
pop
in
popf
aas
aaa
mov
push
cld
ret
inc
lcall
push
ljmp
aas
xor
pushf
mov
sub
pop
jg
fsubl
jmp
divl
inc
pop
nop
xor
inc
mov
es
int3
es
test
imul
xor
cmp
mul
inc
jg
add
xchg
jecxz
fimuls
adc
testb
sti
sbb
jle
lcall
imul
call
cmp
lcall
jg
dec
mov
jae
dec
dec
mov
push
mov
mov
adc
stos
and
sub
hlt
out
sub
leave
testb
rorl
divl
fistl
pop
js
add
jno
test
fsub
pushf
les
inc
xchg
cld
rorl
xchg
sub
movsb
mov
push
imul
test
mov
scas
insb
rclb
and
and
test
addb
or
xchg
and
mov
cmpl
cmp
pusha
inc
pop
test
iret
gs
push
clc
test
ja
xchg
lret
jnp
stc
js
ja
adc
fldt
xor
hlt
pop
add
stos
sub
xchg
int
pushl
pusha
outsl
inc
sbb
daa
xor
mov
jne
mov
ds
ja
popa
push
loopne
pop
in
in
rcl
aad
clc
mov
mov
adc
or
sub
adc
cmp
out
sbb
cmpl
and
and
cmp
dec
loop
jl
cmpsb
data16
sub
pushf
pop
out
mov
mov
stos
sub
push
movsb
mov
lock
sub
or
fstl
mov
add
inc
popa
aaa
sub
daa
fdivl
dec
sub
jae
shll
push
xchg
adc
cmp
add
jae
lock
add
mov
adc
cmp
fnstenv
ss
lret
clc
mov
test
mov
push
mov
mov
and
lea
pusha
arpl
jg
mov
sub
sub
sbb
inc
into
lock
lea
mov
in
cmp
cmp
ja
mov
xor
fsubrp
lcall
dec
add
adc
ret
iret
adc
adc
fldt
dec
pusha
mov
fnstsw
and
push
daa
and
add
adc
pop
or
push
data16
sub
in
lahf
fdivrp
mov
arpl
in
sti
sub
sarl
aad
sub
les
mov
sub
xor
mov
dec
add
int3
sahf
or
in
pop
inc
loop
ljmp
inc
cmp
and
jmp
mov
nop
js
push
sub
js
and
in
ret
cmp
inc
cmp
cmp
je
adc
imul
fs
jne
pop
out
or
fwait
xchg
or
inc
out
push
mov
scas
sub
or
rcr
cmp
mov
aad
adc
loop
add
lea
sahf
test
aaa
mov
ss
push
adc
movsb
or
mov
sbb
inc
jbe
lahf
add
dec
add
out
sub
lock
pop
rcrl
cmc
aaa
test
ret
jno
fistpll
add
je
mov
pop
rorb
dec
push
fnstenv
jb
mov
loopne
iret
cwtl
jl
div
mov
pop
test
mov
aam
outsl
sub
fs
pushf
jecxz
mov
jne
cwtl
cmpsb
sub
cmpsb
xor
or
jmp
test
cmp
pop
call
cmpsb
jmp
sahf
mov
nop
es
lret
and
pop
jecxz
out
lock
cmp
shll
adc
clc
sti
jne
pop
repz
jae
pop
jb
jl,pt
shlb
mov
and
adc
movsl
pop
cmc
dec
mov
mov
or
lret
ss
adc
out
out
lcall
push
andl
sarl
jne,pt
adc
outsl
pop
orb
je
add
mov
fcmovnbe
cmp
mov
mov
pop
push
push
jo
and
pop
inc
scas
mov
dec
add
out
add
and
icebp
daa
loop
push
pusha
inc
loopne
push
imul
cmp
pusha
cmpsb
stos
xlat
hlt
inc
xor
gs
mov
adc
pusha
inc
repnz
xchg
orb
andb
cs
rclb
jbe
js
lock
cli
incl
ret
inc
sub
sub
cmp
xor
sub
add
out
add
movsl
mov
ret
dec
outsb
sar
nop
clc
or
mov
leave
popa
mov
adc
popl
mov
xor
outsl
mov
enter
loop
imul
loopne
ftst
jnp
or
xor
mov
cmp
in
pop
push
cmp
mov
test
sbb
pop
mov
mov
xchg
stc
aam
cmpsb
int
push
je
cld
mov
nop
test
std
movb
out
add
mov
stos
lcall
jnp
or
int3
and
cmp
mov
lahf
cmp
push
scas
mov
subl
pusha
loope
mov
ret
sbb
jbe
and
jne
or
shl
add
jl
movsb
pop
lcall
cmp
ljmp
cmpsb
mov
and
out
insl
es
sbb
adc
mov
or
shrl
fs
jmp
sbb
mov
pusha
divl
ljmp
adc
cwtl
mov
sub
sub
cld
nop
leave
push
and
nop
mov
adc
mov
dec
mov
cld
sbb
push
fisttps
and
mov
rorb
inc
push
je
pop
cli
add
jbe
pop
cmp
cwtl
js
aaa
pop
iret
jb
mov
into
pop
push
cmp
dec
sti
sbb
inc
add
lock
dec
into
les
mov
push
push
je
stos
lcall
inc
cmp
jmp
dec
jo
pop
outsb
xchg
jle
in
pushl
or
stos
lahf
inc
call
cmp
into
loopne
aad
push
pop
aaa
loope
xor
icebp
push
xchg
push
inc
sub
cld
ret
test
test
call
cmp
lahf
negb
push
pop
lret
mov
mov
inc
sub
add
adc
mov
lret
xchg
movsb
cli
push
pop
cmpsb
loopne
insb
lods
out
call
xchg
mov
mov
repz
add
mov
mov
inc
clc
pop
pop
repz
std
decl
sbb
inc
nop
mov
aad
mov
or
push
insb
stc
fsubl
movsl
add
dec
sub
mov
jo
add
mov
test
mov
push
nop
es
lds
icebp
fbld
pusha
adc
inc
fcmovne
lock
ficoms
jbe
mov
xchg
mov
cmp
inc
xor
aam
test
cmpsb
inc
and
adcb
aam
dec
fwait
cmpsb
popa
stos
mov
stos
es
xor
test
mov
sbb
call
jl
pop
std
cs
mov
mov
dec
loopne
add
push
jecxz
call
cs
or
and
mov
jl
dec
pop
pop
adc
in
inc
subb
ljmp
loope
adc
xor
cwtl
roll
mov
incb
test
add
cwtl
xor
sbb
arpl
sbb
add
in
sub
hlt
push
mov
mov
jnp
xor
and
push
pop
sbb
je
pop
or
fistpl
jl
pushl
mov
fimuls
sub
add
insl
jnp
push
jp
lock
loopne
stos
orb
sti
lcall
pop
mov
into
dec
xchg
sbb
js
mov
insb
cld
out
dec
std
add
call
adc
sbb
push
sub
or
sbb
adc
data16
push
mov
xchg
into
pop
sti
inc
push
lock
pop
out
out
add
das
bound
rclb
pop
std
jg
adcb
sbb
sub
int
add
mov
push
add
nop
sbb
imul
jge
sbb
push
ds
decl
or
sub
std
in
loop
pop
shrl
lods
sub
sbb
mov
adc
inc
add
adc
loope
imul
inc
push
popa
dec
xchg
push
lock
aas
mov
pop
fstpl
lcall
inc
stos
shlb
adcl
sbb
sbb
adc
mov
sbb
mov
add
js
stc
lahf
xor
into
movb
mov
push
mov
mov
cmp
sub
and
clc
outsl
les
mov
rolb
test
xor
or
mov
repz
cmc
das
mov
cmc
into
push
jp
inc
push
sti
jmp
mov
and
out
push
mov
iret
pop
jl
int3
cmp
pusha
fucomip
pusha
loop
iret
bnd
cld
fsubr
and
outsl
mov
mov
icebp
inc
clc
fwait
cs
out
ret
mov
or
incl
adc
repnz
stos
addr16
add
xchg
test
dec
add
xchg
adc
call
mov
fisubs
call
or
or
in
lods
inc
mov
xor
xor
cmp
xchg
filds
insb
push
mov
push
ja
scas
adc
loope
sar
dec
adc
push
aad
sbb
clc
aaa
xor
cmp
addb
mov
test
and
ljmp
xlat
notb
mov
sub
dec
jbe
fwait
and
div
aad
mov
scas
ret
pop
add
daa
sbb
dec
clc
lcall
arpl
adc
mov
dec
push
inc
sahf
pop
aam
arpl
and
ret
add
mov
ss
or
mov
add
xchg
jecxz
xchg
cmpsb
lahf
push
pop
ljmp
shlb
sbb
cmpsl
xchg
push
lock
rcrb
add
pop
popa
decl
test
shll
or
es
dec
pusha
add
cmp
mov
jmp
push
out
pop
mov
jbe
mov
je
incb
je
cmp
addr16
out
ds
adc
xchg
sbb
ljmp
lret
jnp
push
jo
movsl
pop
adc
xor
test
clc
mov
push
or
push
cmc
or
push
movsb
sub
mov
pop
push
inc
sti
push
addr16
inc
mov
mov
jmp
mov
ss
cld
jg
cwtl
mov
push
mov
arpl
inc
loopne
mov
inc
cld
sub
cmp
and
mov
mov
rcr
out
or
fadds
jl
xchg
cmp
push
or
das
in
or
mov
fs
jmp
ret
push
aam
test
lret
xchg
add
mov
nop
cli
sub
xor
pusha
add
ja
cld
pushl
sbb
xor
dec
decb
cmp
ss
adc
movsb
daa
in
cld
mov
lea
stos
pop
or
mov
aas
mov
stos
arpl
cmpsb
sbb
push
into
imul
bound
sbb
push
enter
xchg
testb
inc
out
mov
add
lret
mov
clc
push
or
mov
add
mov
cmp
xor
add
aam
ret
cmpsl
jg
out
movsb
ss
aad
ret
ret
jbe
fcom
fcomip
pmaxub
iret
sahf
xor
xchg
mov
pusha
jg
sub
pop
adc
adc
xorb
aaa
je
jl
jo
push
loope
mov
movsl
decl
fidivl
xchg
pop
and
adc
hlt
or
int3
push
repnz
xor
dec
sbb
int3
fcmove
add
rcrl
mov
lock
and
pop
hlt
daa
popf
or
in
bound
add
lods
subl
in
xor
incl
in
and
je
push
movsl
mov
cli
pop
imul
jo
mov
lcall
cld
stos
xchg
inc
lcall
mov
outsb
mov
mov
outsb
js
inc
adc
inc
fsubs
testl
into
sub
and
adc
add
movsb
pushf
outsl
dec
cli
cmpsb
xchg
push
sub
push
movb
add
dec
xchg
sbb
test
call
decl
arpl
mov
xor
in
push
dec
inc
inc
sarl
mov
push
cmpsb
cmp
xor
jns
movsb
cs
push
out
xchg
mov
sub
cwtl
aaa
negl
stos
test
insb
xor
and
loope
mov
cmp
decl
sub
pop
int3
cmc
cltd
cli
aas
fistl
mov
les
mov
mov
inc
add
xchg
ss
ret
add
mov
xchg
jle
hlt
sub
cmp
mov
push
es
test
pop
stos
loopne
mov
adc
mov
add
cmpsb
adc
cmp
incl
mov
mov
mov
add
cmp
or
std
sbb
adc
clc
push
adc
add
data16
mov
dec
cli
or
pop
xchg
popa
into
out
dec
add
arpl
cmc
mov
les
cmpsb
add
sub
jge
pop
pop
dec
rcr
hlt
fimull
int3
jle
js
sbb
sarl
in
or
mov
cwtl
mov
loop
push
push
mov
push
mov
in
call
add
dec
and
mov
mov
pop
int
adc
pusha
sub
jo
mov
test
roll
add
cmp
jle
mov
push
sbb
mov
mov
out
push
adc
loop
cmc
shlb
or
adc
sub
call
idivl
iret
and
sub
aaa
div
and
test
push
sub
cld
push
adc
clc
lcall
mov
rolb
sbb
pop
into
cmp
add
add
inc
jo,pt
sbb
xor
inc
sahf
addb
push
push
imul
js
mov
add
cs
cmp
jbe,pt
inc
and
pop
sub
pop
rcrb
cmpsb
popf
cltd
cmp
es
mov
aam
movsb
pop
add
jle
lods
arpl
das
mov
movsb
sbb
daa
xor
jb
lods
out
mov
mov
fs
ja
mov
xlat
stc
pop
or
cmpb
sub
bound
sbb
add
cmc
fldl
ljmp
sbb
in
sub
dec
jl
push
stos
pusha
pop
jbe
jb
mov
call
and
divb
adc
pop
cmpsl
daa
jmp
aas
ficomps
add
or
or
inc
dec
std
push
mov
or
mov
adc
shrb
call
xchg
mov
sub
mov
mov
sub
push
out
mov
and
lods
sahf
cmp
sbb
or
mov
in
pushf
add
insb
cmpsl
imul
call
add
push
clc
in
lcall
aaa
xchg
rcrb
jmp
into
xchg
ss
js
stos
lock
xchg
push
xchg
aam
data16
and
and
outsl
lcall
xchg
in
enter
xchg
adc
sbb
xchg
lcall
cmp
aad
psrld
push
pop
dec
lcall
adc
cmp
fdiv
mov
jecxz
cwtl
adc
ret
inc
aaa
fildl
jo,pn
roll
dec
inc
adc
dec
add
stos
adcl
add
xor
push
pop
outsl
scas
outsb
mov
or
mov
cs
pop
lock
adcl
jle
mov
inc
and
aad
outsb
sub
push
inc
psllw
sbb
cmp
sub
adc
pop
push
push
xchg
cmc
sub
scas
add
retw
inc
xchg
ficoml
ljmp
aaa
in
xchg
and
inc
and
pop
in
rorb
lahf
imul
push
xor
je
add
pop
cli
dec
jl
popa
cli
push
jl
add
xor
push
add
decl
sahf
outsl
arpl
fxtract
push
mov
xchg
mov
andl
xchg
cmp
stos
loope
ljmp
pop
mov
mov
mov
jno
lcall
push
loope
sbb
fwait
jle
sub
mov
sub
inc
jno
inc
test
or
sbb
and
push
inc
pop
sub
push
hlt
rclb
mov
sub
and
cmp
xchg
push
fsubrl
mov
jl
cmpsl
add
mov
cmp
push
icebp
mov
nop
test
int
adc
es
push
cmpb
and
cli
mov
push
das
push
mov
mov
pop
jg
add
push
fstps
pop
lods
call
fwait
sahf
dec
push
xchg
jmp
sahf
push
cmpsb
add
and
dec
mov
ljmp
cwtl
ret
dec
xor
mov
xchg
test
xchg
movb
or
add
sbb
call
inc
jns
xor
adc
adc
push
xchg
shlb
jnp
xor
mov
lock
cli
push
lcall
mov
aas
and
mov
sbb
xchg
dec
rcll
mov
out
fisttps
clc
mov
pop
mov
std
mov
mov
add
aas
push
js
or
cmp
pop
and
xlat
xchg
dec
test
ds
adc
jl
sub
sub
popa
and
lcall
fwait
sbb
jl
xor
sbb
xchg
clc
mov
jnp
fcomi
loopne
jl
cli
inc
mov
pusha
dec
mov
lea
scas
test
mov
xor
clc
aas
inc
loopne
test
mov
push
mov
add
jnp
pusha
dec
jnp
push
mov
les
stos
and
nop
cmp
push
setb
hlt
insb
jb
fwait
insl
push
insb
cmp
mov
inc
push
adc
dec
movsb
cmc
jg
add
dec
add
repnz
jno
mov
mov
mov
mov
and
mov
data16
int
pop
sar
mov
scas
lcall
pop
push
sub
test
jne
jmp
rorb
mov
xchg
push
or
jmp
mov
cmp
jb
sbb
jae
adc
sbb
add
xor
insb
aam
xchg
loop
add
mov
mov
lods
decb
sti
push
in
subl
or
sbb
jno
in
and
pushf
dec
mov
pop
data16
in
sarb
cli
fistpll
dec
add
inc
mov
out
ret
push
sbb
mov
sbbb
add
fcomip
ja
loop
cmp
mov
push
les
jp
cmp
in
dec
mov
and
mov
inc
in
inc
xchg
cmp
jmp
fs
hlt
lahf
jns
xchg
cmp
sub
xlat
push
xchg
xchg
call
jns
push
movsl
mov
add
sub
dec
jg
mov
adc
and
add
aas
xor
stos
rorl
push
fisttpl
sbb
or
das
mov
lods
adc
test
cmp
jb
ds
sub
and
jp
add
cmc
mov
push
mov
push
enter
jns
bound
mov
lock
leave
aas
jle
cmp
adc
push
mov
call
pop
add
push
sbb
or
cwtl
in
stos
fsub
test
clc
ret
xchg
clc
push
adc
scas
inc
lcall
js
push
test
sbb
push
mov
stos
sbb
adc
mov
call
mov
outsl
sub
xorb
xor
loopne
jbe
pop
jle
adc
xchg
jne
add
lds
repz
pusha
push
dec
mov
jg
xchg
sbb
mov
lds
cld
repnz
push
ret
bound
imul
jecxz
pop
or
int
jmp
mov
mov
inc
push
xor
ja
dec
sbb
fwait
rcrb
ret
inc
out
mov
pop
jo
rclb
adc
jns
stc
dec
xor
fsubrs
ret
lea
jl
loopne
pop
ljmp
movsb
fstpl
vpunpcklbw
inc
jge
sbb
addr16
movsb
mov
cmp
outsl
rorb
aaa
nop
cmp
mov
mov
add
inc
add
call
cltd
icebp
sarb
jno
push
push
mov
and
add
mov
push
ja
je
inc
shlb
nop
and
inc
decb
xor
dec
mov
rolb
ds
jb
mov
shlb
cmpsb
cmp
mov
pop
cmovge
mov
xor
aas
inc
decl
jle
aas
lock
insb
mov
jle
sub
aad
sub
repnz
xorb
mov
mov
or
inc
jl
les
and
adc
aaa
jl
mov
xchg
sub
or
daa
add
sub
fs
push
adc
xchg
mov
xchg
std
add
push
sub
icebp
push
push
es
cmp
cmpl
out
or
repnz
loopne
hlt
insl
sbb
scas
push
testl
jbe
pop
sub
inc
dec
add
pop
loop
stc
xor
sub
das
test
fildll
jb
fmuls
cmp
test
data16
dec
cld
pushl
xor
adc
repz
pop
pop
cli
or
dec
clc
std
dec
jmp
imul
mov
lcall
and
mov
sbb
nop
test
or
cli
mov
sbb
inc
ljmp
inc
inc
add
clc
arpl
test
movsb
mov
aam
test
call
push
jmp
cli
xchg
divb
sub
xorb
and
dec
aam
int3
mov
mov
and
inc
shlb
jae
inc
push
mov
and
fisubrl
lret
loope
ljmp
and
sbb
pop
cmp
adc
iret
fcom
or
incb
cmp
xchg
imul
popa
mov
and
sbb
aad
out
mov
add
xchg
js
mov
push
or
sbb
ljmp
sbbb
pop
js
inc
sbb
and
fwait
lock
sbb
pusha
mov
dec
pusha
mov
sub
movsl
fists
int
add
or
movsl
dec
lahf
rorb
pop
cli
push
ss
test
mov
mov
mov
je
scas
bound
jg
fs
add
pop
xchg
dec
ja
pminub
push
fimuls
ja
ja
nop
xor
hlt
jnp
adc
in
loope
or
mov
aad
push
cld
enter
xor
sahf
js
cmpsb
addl
test
pop
mov
fdivr
lcall
fs
dec
dec
aam
push
test
sbb
cmp
aas
arpl
pop
add
pop
and
add
pop
repz
pop
mov
icebp
add
out
push
pop
dec
es
fbstp
adc
sbb
call
sub
and
mov
mov
sub
out
adc
popf
in
xchg
pop
adc
adc
decl
mov
test
sbb
jecxz
cmp
push
cld
add
mov
and
mov
xchg
xchg
cli
gs
mov
lock
cld
orb
or
std
in
mov
aad
push
roll
inc
add
push
lret
push
fcompl
pusha
rcrl
aad
cmp
sbb
sbb
pushf
cmpsl
pop
rcr
pop
clc
sarb
stos
and
or
jecxz
inc
jo
push
mov
stos
dec
jbe
mov
adc
mov
sbb
xchg
daa
ret
fwait
test
add
fiaddl
std
fsubrl
fsubs
clc
mov
pop
sub
adc
xchg
cmp
jecxz
adc
int3
dec
lret
jnp
xchg
cmp
dec
cld
ja
xor
mov
repnz
outsl
mov
int3
pinsrw
cltd
testb
cld
push
loop
cmp
cs
rclb
jmp
inc
stc
mov
bound
pop
mov
es
mov
cmpb
jbe
jmp
jo
sbb
gs
pop
int3
rcl
leave
lahf
fcomp
add
loop
pushf
xor
add
pop
jo
add
out
push
outsb
and
and
outsl
inc
pop
fstl
sub
popf
je
or
jb
mov
lret
scas
sub
pop
aam
xchg
push
cld
negb
jge
inc
push
repnz
test
sub
inc
inc
jmp
pop
or
icebp
arpl
test
mov
xchg
arpl
outsl
ljmp
addl
dec
rclb
lods
dec
negb
iret
push
adc
mov
jl
mov
sbb
sub
aaa
jo
lods
sbb
sbb
push
js
fwait
rcrl
loopne
inc
or
sarb
pop
leave
push
push
jns
mov
lods
mov
in
fcmovb
lds
xchg
sbb
js
call
jnp
pushf
push
jmp
call
fiadds
movsb
movsb
in
push
hlt
shll
lods
in
in
pusha
pop
pop
outsl
fs
add
scas
in
clc
or
xor
sub
xor
aaa
inc
rol
test
add
lods
sub
je
push
push
mov
push
dec
or
test
adc
add
add
xchg
fdivrl
lcall
push
adc
or
lcall
add
adcb
sbb
mov
push
adc
cmp
leave
inc
pop
fildll
fwait
xchg
andl
xchg
add
std
mov
decb
xchg
sub
inc
push
push
sub
push
jle
xor
pop
insb
call
push
lods
fs
insb
and
xchg
scas
fdivl
inc
or
gs
push
test
cwtl
inc
ljmp
fs
or
loop
jecxz
test
dec
call
push
ljmp
mov
push
add
jl
repz
dec
test
pop
cld
inc
push
call
fildll
pop
pop
cltd
aas
mov
nop
mov
je
fidivrl
mov
pop
mov
inc
faddl
enter
jmp
push
outsl
mov
popa
das
and
out
cli
fistl
loopne
mov
fsts
or
sahf
jno
push
xor
hlt
faddl
push
test
sbb
or
mov
cmp
pusha
ret
jbe
jg
mov
add
repnz
add
mov
jle
int3
and
andb
xchg
cmp
mov
add
enter
pop
xor
cli
pop
add
and
outsl
pop
cmpb
mov
push
pop
test
test
scas
inc
inc
mov
inc
sub
cs
nop
dec
outsb
jl
fucomi
mov
nop
jle
dec
xchg
push
roll
add
scas
aam
js
jmp
jb
icebp
mov
sbb
cmpsb
fisubl
add
lahf
outsb
call
stc
push
loope
lock
push
pop
push
call
insl
shrd
mov
bound
adc
pop
jb
inc
aas
xor
pushf
js
sbb
clc
mov
movsl
cmp
pop
xor
mov
fdivrs
xor
adc
xor
or
je
cmp
lods
add
mov
insb
pop
mov
pop
adc
mov
or
clc
sbb
pop
xchg
les
mov
pop
ret
loope
cltd
push
cmp
mov
sti
loopne
loope
push
jbe
aam
inc
ret
add
and
cmp
insb
bound
or
dec
in
jg
push
aam
cmp
or
loopne
fiaddl
icebp
dec
pop
pop
inc
push
dec
sub
hlt
cwtl
rorb
mov
lock
ret
mov
add
call
dec
or
adc
aad
out
clc
adc
lods
mov
push
or
dec
scas
test
ja
mov
in
pop
or
out
dec
add
mov
out
pop
popf
mov
test
inc
in
mov
mov
test
mov
frstor
fildll
jno
sbb
mov
push
cs
jmp
mov
je
mov
sbb
inc
rcr
xchg
and
and
xchg
cli
ja
ja
xchg
pop
cs
adc
push
scas
xor
mov
ds
sub
xlat
sbb
xor
xor
std
push
jo
adc
loop
sub
loop
fsubp
sbb
sub
mov
mov
std
mov
lcall
mov
mov
outsl
imul
sbb
xor
test
mov
cld
ljmp
imul
les
dec
and
push
add
xchg
and
sub
hlt
and
xor
fisubrs
jecxz
daa
gs
test
loopne
ljmp
je
and
cmp
or
iret
and
and
cs
xchg
adc
push
mov
sti
xchg
or
sbb
add
into
lock
paddsb
or
xor
mov
loop
mov
scas
xor
add
xchg
cmc
or
xorb
loop
adc
sahf
lcall
orb
lahf
mov
jl
mov
inc
sub
std
mov
lcall
cmpb
in
in
inc
icebp
test
adc
test
or
inc
sbb
insb
addb
std
and
shrb
xchg
insb
sub
pop
aam
test
aam
cwtl
mov
test
xchg
mov
pop
sub
repnz
popf
pusha
sub
sbb
fsubrl
mov
sub
sub
push
nop
adc
sub
or
push
pop
xchg
cmp
sbb
test
sbb
inc
jl
jle
cmpsl
or
ja
mov
jge
subl
mov
mov
and
sbb
aaa
std
jg
jecxz
sub
addb
and
mov
scas
or
gs
inc
subb
pushf
lea
mov
movsb
loopne
push
ss
mov
lcall
adc
insl
sbb
push
add
mov
push
jno
mov
push
data16
xchg
icebp
lds
fsubrs
push
jmp
aad
inc
sbb
pop
add
cmp
jbe
clc
add
stc
aas
adc
loope
cmp
pusha
pop
ljmp
cmc
mov
cwtl
mov
pop
scas
dec
movsl
xchg
xor
loopne
inc
and
in
lret
xchg
push
out
adc
ljmp
jmp
xor
ret
sbb
out
daa
lock
xchg
mov
xlat
clc
inc
std
mov
xor
inc
test
orl
pop
or
imul
pushl
les
dec
jl
pop
xlat
out
orb
test
adc
cmp
outsl
jmp
sbb
loopne
xchg
icebp
test
push
add
adc
jmp
xchg
bound
or
fs
and
sub
hlt
and
or
scas
pop
mov
fmull
add
lds
cmp
add
scas
xchg
aas
adc
clc
pusha
sub
mov
adc
lahf
xor
mov
xor
push
fldt
add
add
push
pop
mov
clc
pop
xchg
js
sbb
jg
pusha
add
mov
jl
rcr
fidivl
push
xor
push
mov
mov
jecxz
into
loopne
gs
ljmp
dec
push
cld
cmp
dec
cmp
inc
jns
scas
dec
and
mov
mov
movsb
mov
pop
pushf
mov
fisttps
movb
xchg
je
pop
mov
lea
cmp
inc
lcall
ds
sti
into
test
xchg
leave
inc
inc
push
add
scas
pop
insl
test
into
aam
popa
mov
aaa
jo
and
sub
push
lcall
jne
dec
lock
bound
mov
mov
dec
fisttpll
push
add
adc
dec
inc
jae
sbb
jmp
inc
adc
xor
pop
mov
mov
loopne
enter
sub
cmpsl
cmp
inc
inc
jg
les
data16
xchg
dec
fcompl
sbb
sti
aas
pop
add
add
xchg
ds
fnstcw
add
dec
faddl
jge
mov
mov
xchg
pop
cmp
testl
fsubrs
cmpsl
outsb
cli
pop
movsb
mov
shr
out
lahf
addr16
cmp
out
outsb
add
pop
dec
mov
fucomi
cmc
cli
stos
sub
adc
sbb
movsb
lret
cmp
xor
aad
sbb
jp
mov
fsubl
das
stos
cwtl
das
xchg
movsl
jp
push
mov
nop
jmp
xchg
aas
lcall
rcrb
dec
pop
outsb
dec
std
inc
sub
mov
movsb
jbe
sti
js
push
shrb
test
ja
clc
es
sti
lahf
add
mov
pop
nop
lret
mov
outsl
adc
fnstcw
scas
les
loope
out
mov
sbb
push
pop
adc
inc
test
pushw
push
ret
inc
and
mov
repz
dec
mov
xorl
iret
ret
push
bound
mov
lea
inc
and
stc
mov
or
in
and
mov
rcrb
inc
cmp
adc
pop
and
jl
jle
rcl
cmp
pop
xchg
cmp
dec
inc
fsubrl
sbb
jmp
test
and
cmp
rorl
cs
mov
push
mov
mov
inc
xor
jp
jg
outsb
bound
sbb
mov
test
scas
out
clc
lods
ss
add
inc
lret
or
ret
jge
cmc
stos
repz
popf
mov
test
cmp
and
cmpsl
lock
mov
adc
in
call
cmp
je
xchg
cld
xchg
jnp
rcrl
xor
mov
fcmovnu
and
mov
les
mov
xchg
add
les
ljmp
pop
icebp
addr16
in
ss
popf
sbb
out
xchg
repnz
imul
jge
ror
js
cmp
mov
js
adc
sub
or
mov
xchg
cmp
jb
addl
and
shll
xchg
lods
cmpsb
jns
push
sbb
lods
filds
pop
dec
adc
rolb
aad
and
fiadds
rclb
add
shr
mov
cmp
mov
push
xchg
cld
and
inc
mov
cmpsl
ljmp
xor
add
inc
add
loopne
loopne
mov
xchg
jbe
jbe
and
je
add
jmp
push
mov
addr16
pusha
or
out
test
sub
push
out
sbb
inc
lods
add
pusha
clc
inc
fwait
pusha
xchg
and
inc
fisubrl
mov
ja
sbb
mov
notb
and
pop
jge
pop
and
popa
inc
popl
xor
jl
mov
jecxz
cltd
je
mov
adc
je
xchg
mov
inc
jmp
rcrl
dec
int3
dec
mov
jbe
rorb
cmpsl
sub
nop
popw
out
test
dec
les
sbb
data16
xor
or
xor
push
push
xchg
xchg
js
lods
mov
inc
adc
adc
xor
adc
push
jne
xchg
jg
icebp
fists
cmp
je
jp
adc
add
xchg
add
cs
push
popa
mov
adcb
jecxz
pop
mov
adc
jecxz
mov
cld
adc
mov
cwtl
hlt
ljmp
pop
add
adcb
sti
pop
loope
lock
adc
int
and
scas
pop
jp
sbb
loope
sbb
addr16
add
and
and
ret
stos
jne
je
outsl
clc
and
xchg
das
or
addb
std
push
std
or
pop
jge
dec
ja
andl
xchg
jp
fs
sub
test
jo
adc
mov
add
push
push
mov
sub
mov
lock
ror
insb
jmp
aam
inc
add
and
adc
fstps
test
add
aam
mov
cmp
jnp
int
ret
loopne
incl
sahf
push
and
jno
mov
add
insl
mov
dec
push
mov
sub
outsb
sbb
mov
loopne
mov
test
jg
mov
and
sub
pop
fimuls
push
test
fdivrl
sbb
xor
pop
lcall
test
loopne
xor
pop
not
mov
mov
push
aad
pop
pop
ljmp
sbb
sub
and
daa
pop
lcall
and
cs
orl
or
and
cli
sub
push
mov
lds
inc
call
jg
sbb
cld
or
jg
int3
test
inc
dec
adc
pop
inc
sbb
or
fsts
inc
pop
dec
or
clc
loope
and
push
pop
sbb
inc
cmp
dec
pusha
lea
cmpsl
cs
icebp
adc
ss
mov
aaa
call
sbb
sbb
mov
rorb
pop
ds
add
add
pop
lcall
nop
push
xlat
inc
mov
push
xlat
test
out
stos
sub
sub
add
lods
mov
xor
push
push
ljmp
movsb
jg
pop
ljmp
aad
subl
popl
dec
dec
cmp
aam
loopne
push
xchg
andl
pop
mov
jg
pop
sahf
in
rcrb
out
add
aam
xchg
inc
hlt
jb
orb
mov
inc
add
push
jp
mov
inc
int3
shl
pop
sar
jbe
dec
out
leave
cmp
sbb
adc
incb
or
leave
sub
dec
icebp
xchg
into
es
jecxz
add
add
icebp
add
inc
cmp
or
or
mov
ret
test
shlb
jp
push
pop
or
dec
and
jbe
pop
ds
cltd
cmpsb
aaa
push
insb
ss
push
pushl
cmp
sbb
inc
sub
and
add
jb
xchg
mov
enter
lds
cs
insb
cmc
add
test
stos
xchg
pop
pop
fisubrl
pop
je
arpl
adc
hlt
pop
pop
jno
push
shl
dec
imul
push
pop
orb
jb
dec
rcrb
push
in
ret
fdivrs
pop
aas
call
negb
cwtl
fs
leave
cmp
rclb
ja
add
inc
ret
mov
push
cmp
shlb
pusha
jae
fst
pushf
xlat
adc
add
loop
or
add
movsb
adc
dec
xchg
sbb
lahf
xorl
cmp
jnp
sub
outsl
pop
mov
and
cmpsb
call
hlt
and
cli
scas
xor
mov
scas
cmp
ret
jae
sbb
sub
sub
in
fwait
dec
inc
std
xor
shlb
xor
icebp
fisubrl
mov
jne
ljmp
lcall
push
lock
add
stos
push
add
mov
jbe
inc
or
mov
rcrl
lea
fstpl
fs
push
push
in
xchg
xor
mov
arpl
fwait
and
sbb
pop
mov
mov
or
mov
inc
mov
dec
mov
out
cld
enter
mov
adc
mov
adc
fcompl
xor
xor
outsb
mov
imul
add
cmc
scas
negb
or
and
mov
pop
mov
jno
pop
mov
test
mov
scas
inc
inc
cmp
adc
fwait
or
ljmp
mov
out
dec
mov
rclb
xchg
mov
mov
xchg
cmp
or
dec
sahf
jo
mov
xchg
dec
add
rol
sbb
push
sbb
pop
cmpsb
and
mov
cmc
push
repz
cli
pushf
dec
push
mov
fidivs
pop
xchg
xchg
imul
iret
cmpsb
outsl
add
shlb
sub
cltd
push
mov
sub
rcl
es
cltd
xor
inc
loope
out
xorl
jg
jg
add
idiv
dec
cli
inc
xor
cli
cmp
sbb
ret
lock
mov
inc
loope
push
and
add
arpl
js
sub
inc
aas
sbb
add
push
stos
jp
hlt
and
jmp
pop
or
lods
rcr
mov
sub
and
pop
mov
jno
outsb
and
shl
test
mov
aas
lock
add
jnp
popf
mov
outsb
jae
mov
les
fiadds
jecxz
imul
lcall
jle
inc
cltd
sub
add
mov
ja
call
and
ror
lock
inc
dec
jl
addb
loop
and
loopne
popa
mov
es
jmp
add
rep
mov
les
inc
jo
add
inc
fdivl
sub
test
jp
push
repnz
inc
push
jg
rcrl
fisubs
mov
xor
sbb
xchg
mov
sar
mov
xchg
or
lods
fbld
cmpsb
aam
jecxz
shrb
ds
jo
rclb
js
loope
or
push
mov
cmp
outsl
lock
mov
add
sahf
lcall
bnd
mov
addb
lock
rorb
decb
push
insl
es
inc
adc
in
xor
icebp
cmpsb
xchg
fadds
movsb
pop
jmp
ja
fsubrs
push
test
mov
push
aam
cmp
mov
mov
shlb
lock
sub
cwtl
xor
test
fadds
in
repnz
fcoml
inc
lds
cmpsb
sub
adc
cmpl
push
mov
sarb
jg
pop
sbb
sub
aad
sbb
or
sub
mov
adc
pop
iret
movb
adc
les
mov
das
lock
and
ds
jno
cli
or
lahf
clc
sub
and
das
xchg
aaa
outsl
push
sbb
repnz
mov
outsl
xchg
inc
dec
jbe
add
outsb
ss
loopne
fstpt
and
dec
add
push
mov
icebp
outsl
clc
add
out
mov
and
push
shll
xchg
mov
xor
mov
push
iret
out
pop
loope
or
pushf
adc
adc
mov
pop
add
mov
divb
jmp
mov
test
fstl
loopne
cmpsb
push
rcr
iret
test
inc
mov
loope
adc
ret
jae
leave
fisubrs
mov
aas
js,pn
movl
jmp
clc
lcall
and
sbb
clc
inc
push
call
lods
pop
rorl
shll
mov
cmp
mov
stc
xchg
sbb
mov
add
inc
ljmp
andb
out
mov
sub
int
or
mov
and
scas
add
ja
dec
push
pusha
mov
lahf
es
pop
js
xorl
movsl
ja
data16
push
jmp
scas
or
mov
xchg
jne
mov
mov
icebp
scas
incl
pop
or
ja
mov
mov
mov
mov
xor
ss
leave
inc
push
out
mov
es
xchg
xchg
mov
andb
pop
or
and
in
scas
push
mov
mov
xchg
inc
xchg
call
lret
push
lret
loope
incl
lret
jo
xor
mov
pop
aad
pop
loopne
in
loope
push
lds
test
add
nop
sub
sub
inc
addb
xor
mov
sbbb
adc
lcall
adc
out
insb
in
enter
mov
roll
adc
mov
jbe
je
xchg
adc
inc
inc
loopne
fcomip
scas
into
das
insb
push
push
sbb
jecxz
mov
and
scas
jp
sub
or
xor
dec
hlt
js
jmp
jl
jns
dec
mov
dec
xlat
sub
call
cli
inc
adc
fcmovnb
repz
xchg
mov
mov
and
mov
rcrl
jg
mov
and
aad
cmpsl
mov
loop
mov
cmp
cmc
inc
adc
jbe
enter
lods
icebp
pusha
cmc
loope
clc
or
stos
xor
fidivrs
dec
mov
xor
dec
pop
adc
push
dec
sub
and
sbb
jecxz
push
outsl
in
ljmp
sbb
pop
les
mov
jmp
inc
xor
outsl
cmpb
add
je
fbstp
sahf
fmuls
nop
push
xor
and
call
lcall
adc
mov
das
sbb
push
adc
mov
lock
ds
insb
inc
cmp
fstl
into
cli
je
fmull
adc
std
xor
aaa
sub
xlat
xor
ds
mov
fidivrl
loop
sub
xchg
push
lret
imul
paddb
sub
push
xor
pop
inc
push
xchg
xchg
rol
cmp
gs
push
popf
xor
mov
sbb
jo
dec
xor
sbb
lock
mov
rcrb
dec
adc
xchg
add
in
pushf
inc
or
inc
mov
or
out
and
loop
testl
sbb
jle
xchg
les
rcrb
and
xor
or
mov
lahf
ret
ror
mulb
stos
call
andl
lock
ret
mov
insl
push
adc
pop
and
adc
pop
jb
js
adc
decl
dec
out
xlat
mov
push
aam
lahf
and
ficompl
inc
pusha
push
jnp
push
lcall
loopne
jle
insb
lret
push
mov
jne
fistpll
push
and
inc
jecxz
js
sub
and
mov
out
mov
int
cwtl
mov
push
popa
jecxz
mov
mov
cmp
push
roll
pushl
and
and
lds
sub
lock
sub
mov
imul
xor
mov
in
std
inc
std
and
call
and
ljmp
les
jp
xor
mov
jl
add
sbb
clc
ja
aad
cs
loop
adc
add
mov
sub
cli
sub
or
ds
jge
mov
sti
fisttps
jbe
scas
jo
hlt
xchg
mov
mov
and
lods
sbbl
int
push
ja
adc
inc
out
xor
cli
aam
sahf
je
add
mov
clc
cld
mov
adc
xchg
xchg
loopne
andb
test
xchg
mov
test
jbe
movsb
fiaddl
imulb
dec
sbb
add
adc
or
addb
incl
fidivl
sub
faddl
insl
xchg
push
add
je
push
jmp
addl
jp
in
clc
rolb
pop
clc
cmpsb
or
mov
ds
iret
fdivrp
add
ret
clc
xor
xchg
ljmp
in
fldt
scas
or
mov
je
scas
nop
loop
js
ret
int3
out
cwtl
addl
xchg
ret
push
pushl
outsb
jbe
call
or
jle
push
dec
icebp
xor
pop
mov
jg
data16
sub
sarl
clc
ja
sub
sahf
pushfw
cld
mov
insb
or
lret
push
imul
loop
fs
push
xor
lods
arpl
ljmp
push
push
hlt
add
jb
add
inc
nop
imul
add
mov
xlat
lahf
in
pop
cli
cmp
dec
cmp
jle
or
out
call
mov
mov
push
mov
xorb
mov
icebp
ret
sbb
mov
ret
and
adc
inc
repz
clc
das
clc
sub
sti
dec
imul
mov
inc
std
mov
daa
imul
or
xchg
fisttps
mov
aam
mov
fidivl
std
data16
call
mov
out
subl
pusha
add
movsb
lock
mov
nop
pushf
cmp
sbb
sahf
dec
sbb
lahf
adc
and
jmp
jns
sub
lret
add
sarb
inc
stc
and
adc
mov
fdivp
mov
jmp
mov
jmp
mov
js
cmpsl
je
xor
iret
dec
mov
aas
mov
mov
add
andb
add
clc
jl
or
xor
lret
out
movsl
xor
lock
cmpsb
mov
mov
daa
push
add
fstl
shlb
fisubl
or
insl
xor
bound
pop
fdivr
push
iret
nop
cmpsl
out
inc
fsqrt
mov
ret
mov
mov
aaa
jmp
aad
pusha
push
cmc
cli
sbbl
xchg
es
adc
nop
fwait
sbb
push
push
sub
cld
mov
dec
jp
test
mov
pushl
jle
cmp
add
fdivrs
jo
aad
jecxz
jl
dec
jp
push
pop
add
mov
inc
cmp
lret
fdivr
dec
mov
lcall
outsb
and
adc
fbld
pop
mov
and
push
push
popf
cmp
lcall
xor
std
xor
dec
mov
mov
cmpsb
and
xor
sub
ja
or
aad
mov
add
in
cli
int3
icebp
or
icebp
ffree
jo
pop
mov
call
xor
push
hlt
xor
roll
mov
pushf
inc
cli
rcrb
movsl
jb
rol
in
in
adc
mov
flds
rcrb
jne
push
adc
shlb
push
fwait
push
adc
cmp
or
add
jl
ja
sbb
sbb
cmpsb
mov
add
or
pop
out
sub
mov
rolb
shlb
into
mov
pop
mov
loope
dec
add
shll
mov
loope
push
xchg
scas
and
mov
lods
cmpsb
mov
insl
aad
mov
outsb
pop
andb
int3
push
jg
push
ds
nop
mov
mov
push
pop
js
inc
and
test
jmp
or
jmp
ret
mov
lods
enter
subb
and
lock
sub
push
mov
inc
xchg
stos
adc
clc
mov
icebp
cmp
push
pop
stos
sbb
popf
mov
les
pop
hlt
or
aaa
shr
xor
dec
fistl
cmp
xchg
inc
jge
loopne
into
fistpll
mov
push
js
repnz
xchg
jnp
outsb
repnz
fdivrl
and
shl
movsl
sti
cs
jbe
sbb
lds
mov
xor
jle
xchg
ljmp
jmp
jno
mov
fmul
or
jp
pop
cmpsl
sbb
fcmovnu
mov
add
mov
dec
add
mov
xchg
xor
mov
add
mov
pusha
push
mov
mov
dec
xchg
dec
xchg
stc
mov
outsb
add
xor
xchg
nop
sub
shr
ja
sub
test
mov
lock
mov
and
xchg
nop
mov
ror
add
insb
out
aaa
sub
rcr
stos
out
iret
lahf
mov
or
pop
and
jmp
mov
mov
jae
jmp
test
lds
push
pop
fnstsw
or
lea
mov
decb
xor
je
roll
and
and
jp,pn
mov
cmc
add
aas
pop
cmc
add
pusha
call
in
push
cmpb
loopne
scas
cmp
orl
mov
push
inc
out
mov
repz
adc
add
mov
enter
pop
push
adc
mov
jle
mov
xchg
je
testl
pop
ss
mov
xor
pop
dec
dec
pushl
lea
mov
cmp
add
pop
cld
call
mov
negl
jnp
fcos
push
sbb
jb
xchg
shlb
push
mov
int
cmpsl
xchg
mov
hlt
cs
inc
sti
jl
into
pop
pop
in
or
into
push
les
cmp
fs
popf
in
sbb
ss
and
mov
xchg
jnp
imul
scas
cmpsb
fs
adc
or
fwait
rcrb
cmp
popf
mov
jne
es
outsl
mov
or
add
jae
test
push
lods
pop
xor
inc
rcll
jmp
into
in
dec
and
lods
cmc
sbb
mov
icebp
jg
cwtl
jo
jg
pop
sbb
je
add
mov
or
enter
test
loopne
pop
sarb
mov
ret
cmp
jne
xchg
adc
lret
ret
popf
das
jno
pop
and
int3
and
rcrb
add
pop
push
cmp
jb
ret
lds
filds
outsb
sub
jns
mov
ret
ja
in
lock
jbe
jge
mov
jp
es
icebp
pop
in
xchg
push
jae
adc
pop
dec
loope
int3
xchg
mov
sub
in
inc
xchg
inc
mov
push
cltd
into
test
shlb
decl
add
pop
clc
shll
mov
adc
jo
inc
and
or
push
das
pop
icebp
je
inc
and
cmpb
cmp
fisubs
stos
pop
data16
sub
sub
aaa
inc
cmp
mov
outsb
jp
jae
push
inc
pusha
das
xchg
cwtl
loop
adc
mov
add
decb
jp
push
mov
lahf
mov
call
fistps
fists
shll
or
mov
inc
lcall
mov
adc
push
sbb
add
jge
inc
rcrl
and
stc
inc
int3
sub
lock
fmull
lret
loope
call
int3
inc
fwait
add
das
lock
ret
insl
cs
mov
sbb
fildll
mov
mov
insb
icebp
out
xor
clc
pop
push
adc
dec
jnp
in
cli
dec
xor
pop
sub
icebp
push
outsb
fs
mov
pushl
push
cmp
cmpsb
jle
testb
rcrb
mov
pop
jecxz
xchg
cmp
adc
xchg
jo
insb
inc
addb
loop
sub
xor
sub
test
push
mov
pop
test
add
xchg
sub
ss
push
lock
sbbb
jle
xor
enter
push
int3
repnz
jle
push
je
fildl
loopne
imul
mov
and
xor
xor
imul
cli
test
popa
inc
add
mov
inc
decl
adcb
add
inc
rcr
mov
aas
push
fs
aad
fprem
outsl
jg
dec
pop
mov
cmpsb
jb
mov
fwait
inc
mov
pop
mov
push
mov
aam
jmp
mov
test
clc
sbb
and
dec
sbb
in
cli
incl
out
mov
and
inc
mov
add
call
inc
push
ds
xorl
and
xchg
repz
ffreep
adc
and
adc
sbb
xlat
and
inc
xchg
aas
pop
sbb
lret
pushf
add
cmpsb
lret
lock
jle
push
bound
std
filds
mov
add
fisttpl
pusha
addb
out
int
clc
and
in
cli
mov
sbb
adc
xor
lock
sbb
xchg
mov
aaa
xchg
mov
inc
daa
jo
nop
lcall
call
icebp
lds
sub
or
in
das
test
xchg
lcall
sub
sbb
inc
pushw
ja
ret
mov
fnstsw
dec
mov
ja
add
mov
jnp
cmc
aaa
lahf
push
lods
xchg
mov
loope
adc
xor
mov
jmp
jg
jmp
das
dec
push
cltd
mov
addl
push
pop
mov
push
adc
movswl
push
dec
call
test
mov
ror
cmp
adcb
roll
ljmp
rclb
shrl
vphaddbd
pop
mov
inc
out
pop
mov
pop
daa
inc
jecxz
shrb
mov
sub
inc
mov
shrl
dec
aam
inc
enter
std
rol
jg
pop
push
jo
add
insb
pusha
or
dec
call
add
icebp
pop
xor
or
add
mov
das
fsts
or
sahf
loope
sbb
jno
outsl
sbb
setno
scas
sbb
ret
or
fmull
push
cld
pushl
sahf
inc
int
loop
lods
repz
jb
pop
test
mov
hlt
cmpsb
jg
fbld
and
lcall
sbb
test
jl
mov
faddl
es
cmc
or
mov
mov
cmp
daa
stc
popa
cmpsb
jmp
jecxz
fistps
xchg
sti
add
pop
dec
shll
mov
add
aas
xchg
push
push
mov
adc
push
imul
inc
xor
dec
ret
loopne
push
inc
adc
sub
imul
cmp
jbe
push
jle
pop
mov
enter
roll
or
adcb
mov
lock
dec
push
mov
imul
add
jecxz
cld
or
bound
pushf
ficoms
stos
xchg
icebp
cmc
jg
incb
loope
mov
xchg
test
add
pop
cmp
and
shlb
popf
je
adc
jl
mov
xchg
daa
mov
jmp
cli
adc
hlt
push
sbb
jo
pop
scas
fmuls
inc
mov
sbb
sbb
std
lret
ja
push
xchg
nop
add
and
adc
inc
sbb
cltd
adc
cli
les
cwtl
adc
push
pusha
mov
sbb
mov
and
sbb
mov
fistps
adc
mov
insl
jno
lock
push
inc
or
loopne
lock
sub
inc
and
loop
filds
jo
adc
inc
rorl
adc
jne
sub
ja
inc
stos
and
js
test
jb
jg
call
fsubs
push
lcall
fsubl
adc
xor
mov
pop
rol
xchg
dec
ror
xchg
outsl
xchg
push
std
outsb
test
mov
add
add
or
xchg
ret
add
inc
push
mov
incl
out
cmp
sub
loopne
xchg
sarl
inc
fiadds
and
sub
xchg
cmpsl
push
add
sti
pop
push
sbb
fbstp
lret
inc
inc
lcall
cmp
jb
lea
idivl
leave
call
cmp
and
pop
dec
fdivp
nop
jo
int3
enter
inc
push
int
lcall
push
lods
dec
jl
addr16
leave
test
dec
mov
add
lcall
add
jmp
inc
xchg
or
in
sub
jo
cmpsb
inc
std
pop
fsts
pop
into
imul
add
or
push
sbb
jnp
ljmp
pushf
pop
push
cmp
lds
push
mov
jmp
mov
std
aaa
dec
mov
iret
fwait
mov
adc
jle
fwait
or
dec
fdiv
jecxz
mov
mov
dec
mov
outsl
sbb
call
adc
fisubrs
mov
pop
jg
inc
sub
incl
outsb
ss
push
data16
cmp
pop
ja
ret
out
jns
imul
add
push
fs
xchg
sub
mov
jmp
fs
push
fs
cltd
dec
std
cmp
xor
and
test
movsb
in
xchg
cltd
call
lcallw
push
jg
movsb
cmc
cmp
cmpb
xor
mov
push
xchg
mov
cmp
or
add
jl
add
dec
dec
jmp
adc
pop
cli
and
dec
cld
lods
insb
dec
jae
push
pusha
sub
clc
mov
leave
adc
lret
rcl
out
dec
hlt
mov
and
call
std
cmp
ficoml
lock
enter
lock
mov
mov
push
in
clc
sub
fucomip
cmp
mov
out
push
dec
mov
aad
xor
lds
out
xor
lock
jg
fdivrs
les
inc
es
sbbb
add
je
pop
daa
and
fucomip
xchg
fidivrs
les
add
add
imul
mov
jg
pop
add
and
dec
repnz
or
dec
cld
add
loop
movsb
and
loop
sbb
mov
arpl
add
pop
lods
adc
subb
mov
xchg
cmp
nop
mov
adc
stos
jb
mov
push
fistpll
cmc
add
in
cmp
aad
lods
leave
sbb
fstps
sub
test
or
mov
aaa
and
icebp
pop
out
sbb
sarb
std
adc
add
jle
dec
fisubrs
stos
popa
aaa
pop
test
adc
mov
clc
insb
cmpsb
loope
cmc
push
movsl
pop
mov
aad
add
inc
repnz
aaa
lds
aas
push
mov
mov
push
icebp
cld
aas
mov
stos
xor
or
cmc
inc
jl
push
cmp
mov
push
inc
xchg
pop
and
test
adc
outsb
iret
sbb
mov
aaa
pop
inc
enter
scas
push
movsb
cmpsb
pusha
lods
mov
popa
incl
sub
push
xor
rcll
outsb
mov
dec
xchg
mov
inc
inc
inc
or
shlb
call
rcl
insb
inc
sbb
sub
lcall
pop
mov
push
test
test
stos
or
push
stc
and
inc
jo
int3
push
into
popa
jmp
das
and
pusha
adc
jle
add
jne
push
cmp
ljmp
inc
pop
dec
out
dec
std
ret
add
jno
addr16
js
push
ret
sub
ret
pushf
dec
jb
pop
pop
cmp
incb
mov
adc
or
lahf
fsubl
adc
scas
stos
pop
in
jmp
in
ljmp
jecxz
mov
sar
ds
adc
jl
mov
pushl
or
mov
or
pop
aas
jmp
mov
incl
adc
mov
fwait
lret
lds
xchg
push
mov
mov
and
test
mov
jae
mov
call
test
subb
pop
or
jo
and
aaa
popa
pop
mov
jno
lock
movsb
add
js
xchg
inc
psubd
mov
xor
es
lcall
insb
push
movsb
sub
pop
aaa
out
aad
adc
mov
jno
add
call
add
rcrb
xchg
mov
sub
and
push
out
aam
fnsave
xchg
imulb
stc
push
jns
incl
icebp
mov
adc
lods
push
out
mov
xchg
js
insl
jb
repnz
xlat
and
add
and
lods
fcomps
cltd
xor
fiadds
push
addr16
ljmp
mov
das
adc
jl
repnz
popf
ljmp
sbb
aas
inc
and
sbb
sbb
cs
cmp
adc
dec
mov
inc
inc
roll
add
or
popa
mov
jmp
push
xchg
cmpl
je
add
inc
ret
repnz
pop
sub
inc
or
push
xchg
sub
sbb
int3
xchg
mov
and
push
js
cmc
mov
push
xchg
imul
lea
fdivrs
hlt
mov
enter
dec
clc
std
add
sub
lahf
xchg
cmpsb
add
arpl
cmp
push
popf
popf
jns
pop
cmovbe
or
push
sti
icebp
clc
lahf
mov
mov
or
out
fisubrs
loop
mov
inc
dec
jne
testb
jl
imul
negb
std
sub
repnz
mov
loopne
adc
loope
add
adc
dec
aad
nop
mov
lcall
je
add
or
jl
sub
lds
mov
mov
ss
sub
pop
sub
shr
adc
xor
je
dec
cmpl
sarb
scas
mov
push
cli
xchg
cmp
or
mov
sarb
enter
rcll
jle
jns
xor
mov
pop
inc
mov
push
outsl
leave
mov
sub
scas
in
mov
inc
outsl
xor
add
lret
test
fnstsw
rorb
enter
mov
dec
jns
or
xchg
aam
jae
sub
adc
nop
imul
mov
mov
pop
and
call
mov
stos
inc
sub
xchg
lret
cld
js
fcomps
cs
jo
stos
add
pop
pop
and
push
lock
xchg
test
arpl
xchg
fnstsw
jbe
shl
pop
ret
jp
adc
sub
aad
add
jge
mov
push
pop
lock
jne
push
inc
jno
push
jo
inc
cld
arpl
jge
es
insl
adc
lret
je
sbb
adc
stos
int3
xor
mov
icebp
adc
dec
push
clc
pop
add
cmc
mov
movb
xor
int3
add
jecxz
mov
call
adc
loope
pop
fisttps
test
das
in
mov
imul
jg
mov
pop
adc
mov
dec
movsl
or
inc
or
jl
stc
nop
rolb
jno
mov
pop
scas
insl
cmpl
jecxz
lock
dec
cld
cmp
mov
fs
inc
out
add
aaa
mov
inc
and
dec
inc
sbb
mov
fiadds
dec
and
cmp
adc
xchg
cld
mulb
push
test
nop
sbb
test
pop
dec
mov
lcall
xor
sti
fidivs
adc
mov
pop
lret
xor
pop
cld
jg
and
mov
mov
pop
ds
popa
out
mov
out
outsl
sub
test
shl
inc
xchg
adc
lods
out
add
or
bound
and
fisttpl
shlb
push
pop
mov
pushl
adc
movlhps
pop
cmp
add
mov
or
stos
loop
mov
out
sub
pop
aaa
jmp
push
jecxz
jmp
push
lcall
dec
ret
iret
daa
bound
arpl
and
push
or
add
lods
sub
sub
lock
add
hlt
fs
sbb
add
test
cltd
repz
mov
mov
hlt
xorl
mov
lret
inc
dec
add
and
or
sub
fmul
in
sbb
fimuls
shrl
adc
jle
filds
push
ret
mov
xchg
test
fistpll
lock
push
push
insb
inc
push
test
stos
repz
gs
jno
subb
test
sbb
dec
mov
loop
stos
lods
inc
cmp
incl
lock
js
cmpb
ds
jge
ljmp
je
fiadds
adc
xor
cmp
jecxz
jmp
xchg
sbb
add
sbb
xchg
add
jg
push
loop
loope
mov
sti
mov
bound
loopne
mov
cwtl
cmpsb
repnz
stc
cmp
cmp
mov
push
and
mov
lods
cwtl
mov
xor
mov
mov
mov
hlt
popf
inc
mov
fdivrl
fcom
gs
jg
add
sbb
pop
mov
jnp
pop
inc
xchg
sub
fsubl
stos
or
xor
mov
je
mov
scas
push
les
mov
fisttps
incl
xorb
sub
sbb
dec
sub
cli
cltd
push
sub
insl
pop
std
sbb
ljmp
xor
xchg
mov
cmp
mov
pop
jb
sahf
call
cmc
sub
mov
popf
sbb
or
repz
dec
dec
inc
jno
dec
test
in
jg
out
test
add
add
fwait
clc
lcall
adc
roll
pusha
dec
mov
scas
mov
mov
jb
add
iret
sbb
lcall
js
adc
aad
daa
rorb
jo
xchg
outsl
lods
je
in
jmp
push
scas
nop
lock
data16
mov
jo
nop
daa
sti
push
leave
ds
and
pop
fwait
lock
sub
pop
paddsw
xor
cwtl
insl
outsb
stc
pusha
into
stos
dec
rol
popa
xchg
push
sub
xchg
cmp
jo
bound
and
scas
aam
pop
sbb
dec
push
es
adcb
dec
repnz
mov
aaa
jno
cmp
lret
sahf
jb
cmp
fiaddl
or
sbb
cmp
js
mov
xor
jmp
stc
jge
rcrl
filds
jne
hlt
imul
aam
out
inc
add
fildll
fs
lds
xchg
test
add
jno
dec
sbb
cld
sub
ss
jb
std
rolb
adc
insl
pop
add
cli
and
test
mov
cmpsb
call
orb
test
decl
sbb
dec
pop
fistpl
loopne
inc
repnz
mov
add
mov
lea
and
xor
adc
loopne
iret
xchg
stos
and
cmpsl
inc
in
adc
popa
lds
pop
pop
jg
shlb
cmpsb
cwtl
mov
xor
cmc
add
mov
mov
adc
sbb
fsubp
pop
insl
pusha
movsb
in
pusha
cmp
inc
mov
and
jmp
ja
cmp
aaa
in
sub
inc
cld
mov
cmpsl
cmpsl
add
aaa
or
adc
inc
repz
or
jo
cmp
dec
mov
jecxz
fisubs
leave
arpl
add
loopne
jle
stos
adc
xchg
shrl
or
sub
pop
popl
mov
scas
mov
push
aas
push
jae
xor
mov
stos
or
mov
dec
outsb
pop
mov
and
jae
les
sbb
mov
jmp
sub
pop
xchg
in
iret
inc
push
or
lahf
jns
mov
fdivrs
push
xor
jg
sub
vmovsd
sbb
das
scas
dec
or
cmpb
mov
pop
pop
dec
cld
inc
pushf
dec
test
add
inc
adc
icebp
ja
aaa
sti
jnp
mov
or
push
mov
cli
aaa
insb
push
sarb
mov
repz
adc
push
mov
mov
stc
xchg
rolb
dec
jle
loopne
inc
cli
fucomi
out
shlb
cmp
sbb
and
stos
inc
jmp
cld
js
pushf
mov
xor
mov
out
and
shlb
and
scas
cmovp
outsb
push
sbb
cmp
inc
mov
notb
scas
or
cmp
lods
clc
push
add
add
push
mov
add
mov
mov
jge
and
ss
xchg
jecxz
fiaddl
add
outsl
bound
mov
lahf
and
add
add
test
xor
push
stos
hlt
jg
fcomi
mov
cmpsl
divl
pop
shll
orl
pushf
pop
cmp
js
xchg
sub
and
shl
push
stos
mov
or
fildl
test
xchg
push
mov
sub
xlat
push
jns
ret
add
scas
push
xlat
ja
negb
int3
pop
push
pop
rolb
cmpsl
jb
xchg
ss
mov
dec
fdivs
adc
push
xor
cmp
jecxz
rcll
xchg
fs
mov
inc
mov
sbb
push
sahf
and
out
xor
mov
cwtl
jl
insb
sbb
incl
mov
lods
or
pop
cwtl
imul
pop
dec
cmp
addl
ss
loope
jle
inc
xor
dec
add
sbb
std
insb
cs
js
std
pop
stos
sub
push
call
add
mov
mov
push
and
clc
aam
cmp
sub
outsb
adc
mov
xchg
add
pusha
nop
pop
outsl
cmp
ret
push
pushf
mov
sub
scas
mov
call
adc
lds
mov
aaa
into
adc
lods
das
ss
adc
sbb
ret
mov
inc
and
aas
push
fistps
out
push
sub
push
inc
mov
xchg
xchg
insb
fwait
cmpsb
fwait
jbe
les
sbb
cmpsb
in
jb
test
insb
mov
or
cld
push
or
test
inc
sub
pusha
and
out
sub
cld
and
scas
mov
lods
add
cmp
inc
sub
cmp
fisubl
cmp
sbb
inc
in
pop
lret
mov
inc
out
js
jmp
icebp
jl
js
call
pop
jno
sbb
xchg
out
add
movd
push
out
mov
lds
fiadds
hlt
fbld
icebp
add
sbb
and
cltd
cmp
clc
in
pop
mov
mov
addb
shlb
psrad
mov
add
les
mov
decl
cmpsb
dec
mov
je
add
add
mov
xchg
daa
add
jg
inc
add
ja
icebp
scas
and
jl
adc
xchg
mov
jge
repnz
lahf
sub
mov
sti
inc
dec
sbb
mov
sbb
add
mov
cmp
adc
adc
cmp
mov
mov
xor
jg
test
mov
int3
cmp
sbb
inc
xchg
pop
sub
sbb
adc
pop
push
pop
fwait
jns
and
scas
mov
cli
mov
dec
or
jl
sbb
mov
push
scas
mov
sub
pop
lods
aas
dec
insb
dec
pop
push
xor
in
sub
fs
push
inc
ficoms
jle
ficomps
imul
xchg
add
out
xchg
in
pop
out
mov
mov
mov
adc
jp
aas
and
push
xor
mov
ret
dec
iret
xchg
pop
push
movsl
decb
push
addb
sbb
sub
pop
fdiv
inc
sbb
rclb
sbb
jg
xchg
dec
mov
mov
jecxz
aad
cmp
xchg
movsb
jmp
adc
adc
sub
inc
mov
inc
add
mov
stos
inc
pop
int3
clc
in
int3
sbb
pop
mov
call
stos
cmp
rcrb
adc
into
mov
cmp
xor
outsb
cmpsl
aam
nop
jg
xchg
or
mov
sub
mov
mov
add
inc
aas
xor
adc
xchg
and
test
mov
stos
xchg
push
xlat
fistpll
jne
or
nop
adc
insb
ret
xchg
addr16
ljmp
jns
sysret
mov
fwait
mov
mov
push
or
fcoml
and
cld
jae
out
lea
mov
xor
mov
add
cmp
jne
jno
in
inc
add
xchg
adc
push
sbb
pop
xchg
xchg
rcr
mov
sar
das
adc
add
ficomps
or
fisubl
add
call
mov
cli
fwait
lret
adc
into
xchg
lock
enter
pop
or
ret
add
mov
aam
ficoml
mov
mov
jmp
push
add
jno
ss
lods
jmp
or
into
or
shlb
and
jmp
popa
lea
out
mov
dec
cmp
dec
or
jge
int
cmp
sarb
loop
sub
das
jle
dec
pop
sbb
xchg
pop
fwait
das
insl
outsb
daa
ds
push
jns
inc
and
sbb
scas
add
jl
pop
push
mov
loop
sub
mov
in
pand
loopne
push
jle
pushf
add
cmp
clc
decl
add
add
adc
inc
cmpsb
jmp
and
add
daa
push
mov
pop
or
pop
cmp
cs
arpl
popf
mov
call
dec
inc
sbb
inc
cmp
cmp
out
push
shl
jle
cmpb
aam
ljmp
scas
sub
out
jl
xchg
subb
mov
in
iret
push
std
or
sahf
jo
jnp
in
scas
adc
call
mov
das
loop
cwtl
pusha
and
pop
test
movsl
div
ret
or
xor
push
or
or
jmp
push
mov
enter
fcmovne
mov
push
jg
lock
mov
enter
enter
js
clc
jmp
cmc
cs
outsl
and
mov
or
imul
outsl
mov
and
arpl
pop
add
sbb
je
sbb
sbb
mov
pop
push
dec
jb
mov
or
sub
lock
lods
testl
add
jle
aam
push
xchg
sub
enter
pop
lock
mov
dec
in
scas
and
cmpsl
xor
adc
or
mov
xor
push
dec
add
cmp
add
xor
cmc
out
jno
sbb
movb
xor
test
jmp
push
mov
loope
cs
push
repz
mov
loope
sbbb
js
xor
cli
push
xor
cmp
adcb
pop
loope
int
aas
std
movsl
add
mov
ljmp
or
repnz
jl
xchg
out
and
jg
fistpll
cmpsl
sub
mov
mov
mov
mov
sahf
cmp
fwait
incb
push
out
jmp
jmp
jno
cld
jg
push
addr16
xor
popf
rclb
add
inc
push
ss
sahf
xchg
sbb
or
stos
aaa
std
pop
mov
mov
cmpsl
xlat
and
sub
or
cmc
xor
fdivr
and
or
xchg
dec
mov
movsl
sbb
push
ljmp
mov
jle
cld
out
mov
dec
pop
push
shlb
inc
cld
es
ljmp
cmpsl
jp
cld
loope,pn
test
push
inc
adc
adc
and
out
pushl
ljmp
cmp
inc
and
mov
mov
cwtl
sbb
mov
fwait
push
add
inc
pop
nop
mov
out
push
or
aam
orb
mov
mov
incl
fwait
fs
leave
je
clc
lcall
add
js
lods
jnp
ret
dec
pop
lea
push
int
arpl
out
mov
das
inc
lock
mov
inc
test
pop
add
fadd
data16
xlat
fbld
lcall
xchg
sub
push
mov
lea
mov
xor
insl
add
imul
xor
add
and
inc
movsb
xor
dec
cmp
push
push
sub
sbb
pop
into
lods
mov
fstpl
jno
sub
pop
cmc
mov
xchg
cmpsl
cltd
adc
or
lods
pop
push
sahf
addb
scas
dec
push
add
mov
loop
adc
dec
cmc
jmp
jge
outsb
push
in
push
notb
jle
or
inc
je
add
push
adc
std
fadds
sub
cmp
cmp
sti
stc
xor
add
loopne
cmp
adc
mov
out
out
loop
mov
mov
jecxz
mov
stc
add
jl
mov
jge
or
aam
fs
mov
mov
lods
push
cli
mov
notb
or
imul
lock
lea
dec
jnp
mov
adc
fistps
pop
mov
cmp
push
inc
popl
idiv
mov
clc
ja
inc
insl
lea
mov
into
mov
jl
mov
push
lods
nop
mov
cmp
fsub
push
incl
inc
dec
add
dec
lock
cmp
adc
and
in
shl
incl
aaa
dec
and
sbb
xchg
mov
mov
sub
or
shrb
or
xchg
bound
jno
adc
xchg
loop
enter
add
sub
or
lods
ds
cmpsb
pop
add
add
pop
adc
mov
dec
and
pushl
dec
or
sbb
jnp
jo
pop
call
hlt
outsb
adc
das
pop
sbbb
xchg
stos
shll
sub
cld
aas
std
add
adc
add
sbb
ss
cmp
sbb
test
xchg
les
popa
and
xchg
stc
or
pop
data16
outsl
xchg
dec
ror
insl
push
repnz
sti
ja
lea
mov
testb
cli
jo
jbe
pop
or
or
cli
dec
test
pop
cwtl
and
sbb
sub
test
sub
sbb
cmp
jmp
mov
movb
hlt
aam
add
in
cwtl
lahf
das
lcall
call
inc
jecxz
push
adc
lods
clc
loopne
jae
lock
es
dec
or
inc
cmc
push
jl
mov
sbb
and
xor
cmp
dec
icebp
and
lcall
popa
fcompl
imul
mov
in
mov
sarb
dec
lods
sub
mov
mov
or
das
push
hlt
incl
in
cmpsb
push
dec
mov
lods
fisttps
scas
xor
addb
fsubr
dec
mov
add
push
test
jg
xchg
jo
cmp
sub
dec
add
mov
xor
faddl
cmp
push
sub
mov
cld
dec
mov
push
fs
inc
scas
xchg
aam
test
adc
les
cmp
ljmp
cmp
lds
or
adc
sbb
push
add
jo
gs
xchg
es
dec
pop
call
jbe
add
inc
in
test
into
cmp
jne,pn
push
icebp
loopne
and
mov
push
mov
cmp
mov
cmp
outsl
mov
jp
xor
inc
mov
mov
push
cmpb
xor
pushf
outsl
clc
jg
jle
mov
pmullw
fwait
sub
out
mov
add
test
inc
lret
icebp
orb
xor
in
xor
icebp
sub
push
add
xchg
cmc
lret
pop
push
lret
cmp
movsl
lret
add
out
nopl
xchg
mov
data16
paddw
xor
pop
sbb
cmpsb
push
in
or
pop
add
cmp
or
loopne
sbb
xchg
js
out
push
insl
cld
pop
rcl
outsl
pop
push
ljmp
and
add
fadds
outsb
mov
out
dec
loopne
cwtl
out
aad
sbb
mov
movsl
mov
pop
aas
dec
xor
add
sbb
cs
ror
js
sti
cs
mov
sub
decl
xchg
add
xchg
aaa
mov
jle
inc
outsl
dec
push
outsb
pusha
mov
mov
add
pop
and
push
push
ljmp
out
mov
leave
inc
dec
jle
dec
mov
popf
or
enter
inc
outsb
bound
in
decl
mov
push
inc
mov
jge
lea
stc
loopne
iret
es
les
out
sbbb
push
lods
xchg
add
cmp
mov
out
rorl
and
push
clc
dec
and
pop
cld
fiadds
pop
xchg
inc
xchg
pushf
jl
sub
fisttps
jl
pushf
cmpsb
dec
loop
push
jmp
jge
lods
pop
jno
pop
dec
mov
dec
push
out
adc
add
inc
dec
les
int
cmpsb
cmp
je
dec
mov
cli
or
cmpsb
and
nop
ds
call
or
aam
out
ret
cmp
and
clc
adc
mov
ljmp
icebp
int3
inc
xor
xor
pop
xor
mov
mulb
adc
ficompl
adc
mov
ret
jl
adc
cmp
addr16
fidivrs
fcomps
pop
adc
and
and
jg
mov
jl
cltd
mov
fdivs
shlb
icebp
sbb
push
ret
and
add
out
add
cmp
ret
lock
outsb
enter
mov
decl
stos
int
xor
jo
sbb
xchg
popa
and
pop
adc
jmp
xor
movsl
arpl
push
mov
ljmp
mov
xchg
into
je
mov
push
in
cmp
pop
in
pusha
ja
dec
adc
push
jle
pop
mov
shrb
and
dec
insb
addr16
xchg
sub
add
nop
xor
add
scas
dec
push
js
fistpll
and
cmp
decl
mov
xlat
pushf
dec
xchg
mov
xchg
mov
sbb
cmpb
or
lock
data16
outsl
sti
cmp
andb
cld
and
mov
dec
repnz
loopne
sbb
nop
pop
adc
icebp
adc
mov
or
xchg
and
dec
and
icebp
in
adc
jmp
adc
cld
and
mov
jecxz
je
dec
test
js
fdivs
lcall
hlt
push
sbb
mov
jle
and
pop
test
xchg
push
loop
jo
or
test
lock
cmp
fiaddl
cltd
scas
lcall
dec
loope
push
ret
ffree
shl
mov
add
in
push
mov
stos
adc
mov
xchg
out
dec
mov
add
je
lock
jecxz
pusha
mov
rorl
out
cmc
sub
cmp
cltd
hlt
iret
outsl
bound
loope
sar
and
or
sbb
mov
loope
push
jl
and
lds
cmp
repnz
jge
push
and
loope
das
mov
shrl
add
jg
push
add
dec
xor
imul
arpl
lock
mov
cmp
inc
pop
add
push
mov
adc
mov
movsl
shlb
push
sarb
rolb
cli
scas
adc
jle
mov
mul
cmp
xchg
and
push
pop
das
js
in
outsb
fisubl
mov
movsb
call
mov
je
ds
and
test
aaa
inc
ret
iret
cmp
cmp
push
dec
mov
shrb
dec
inc
xchg
and
jnp
pop
and
iret
add
popf
xor
aaa
fldl
bound
orb
inc
ret
popa
mov
les
insw
and
pushl
xlat
pop
sub
xor
fdivl
jle
add
lock
test
xchg
shlb
push
or
loopne
mov
cld
cmpsb
lds
xchg
push
fistpll
push
les
add
mov
xor
and
mov
sar
xor
jne
xchg
sbb
inc
mov
push
leave
inc
jmp
add
aaa
test
lods
xor
pop
loopne
inc
push
rclb
js
ret
xchg
lods
fimuls
cwtl
loopne
xchg
push
sub
cmp
fadd
pop
mov
stos
sbb
mov
stos
sysenter
test
dec
xor
push
icebp
data16
aaa
mov
movsl
inc
and
pop
cli
push
jecxz
je
cli
jl
inc
lods
orb
jbe
sub
repnz
repz
popf
and
xor
je
pop
pop
sub
sub
in
mov
loop
je
ss
bound
jae
lock
pop
fisubrs
pop
or
aaa
mov
lods
imul
pusha
push
or
decl
out
gs
dec
xchg
xchg
sbb
pop
push
cli
filds
pushf
and
test
pop
subl
incl
inc
in
out
mov
pop
dec
sti
int
add
xor
fisttpll
mov
adc
xor
bound
pushl
add
xchg
bound
inc
mov
and
adc
pop
sub
xchg
es
hlt
movsl
movsb
fsubrl
adc
lock
mov
lods
xchg
ret
in
push
sti
push
das
inc
push
adc
iret
aaa
sub
cld
push
aam
jp
pushf
lock
ds
mov
lahf
jb
jl
xor
ja
sub
mov
xchg
lcall
push
ss
cs
xor
mov
bound
adc
fisubrs
xchg
cmpsl
sub
mov
mov
shll
mul
test
push
sti
pop
jge
jbe
ror
sarl
dec
pop
imul
fiadds
std
cs
mov
ljmp
pushl
lret
iret
push
movsb
inc
push
lds
mov
mov
test
mov
inc
mov
fcompl
pop
mov
or
adcb
stos
imul
mov
inc
icebp
test
cld
and
jne
or
pop
add
or
mov
aam
ljmp
mov
and
xchg
inc
push
das
test
test
sar
jmp
dec
sbb
jl,pn
jp
loope
mov
lret
mov
cli
pusha
gs
cmp
add
and
cltd
mov
movsl
inc
dec
or
jp
lock
ret
mov
adc
mov
movsb
cs
cmpb
mov
adc
xchg
enter
fstps
xchg
int3
lret
ja
popa
mov
xor
sbb
push
pusha
into
lods
push
call
call
xor
insb
cmp
cmpsl
and
aas
stos
xchg
or
sub
jp
adc
stc
sbb
push
subl
rorl
mov
test
xor
sar
dec
cltd
inc
and
mov
push
movsb
inc
test
fdivrp
xchg
sub
mov
mov
push
ficomps
push
cmp
inc
push
inc
xlat
sbb
loopne
sbb
push
adcb
sar
mov
or
js
popf
lcall
xchg
or
push
punpckldq
adc
cwtl
ljmp
mov
das
add
adc
movsb
out
popf
imul
sahf
int3
jg
cltd
dec
sub
sbb
je
mov
loope
pop
dec
xchg
inc
repnz
movsl
sub
jp
inc
adc
ljmp
dec
outsl
aas
or
add
outsl
mov
xchg
mov
ljmp
cld
leave
fwait
outsl
push
addb
test
pusha
xchg
xchg
std
xchg
mov
sub
jbe
and
push
aam
mov
jbe
jae
lahf
ror
pop
pusha
sub
lahf
sub
loop
push
cmp
mov
xorl
leave
or
or
mov
inc
fsubl
add
outsl
sub
lods
lds
pop
xchg
je
mov
or
and
push
cmp
subb
and
or
pop
xor
popf
adc
in
push
in
and
in
pop
mov
wrmsr
inc
xlat
out
dec
and
push
add
fiaddl
movsb
cmp
mov
adc
jle
dec
movsb
dec
adcb
cmp
and
jle
mov
je
fisubs
mov
xchg
and
jl
push
enter
les
jnp
repnz
fdivrl
aaa
or
test
pop
out
lret
shrl
jmp
jmp
xchg
and
xchg
loopne
dec
cwtl
adc
movsb
hlt
or
jo
cmp
in
mov
aad
out
mov
push
add
add
pop
cli
out
les
lea
je
push
test
mov
fcompl
cs
fistps
mov
fmull
sub
add
xchg
mov
movq
dec
les
aaa
add
and
lea
push
push
add
push
dec
loop
pop
nop
and
dec
int
mov
sub
push
sbbb
add
xchg
incl
cmpsb
sub
push
loopne
adc
cmp
push
inc
adc
pop
imul
dec
cmpsb
orl
mov
fbstp
push
jecxz
movsb
stos
jnp
insl
aaa
subb
cmp
xor
push
test
xchg
mov
imul
js
mov
dec
bound
cmpsl
dec
mov
mov
iret
testl
add
fbstp
adc
mov
leave
inc
enter
adc
xchg
addb
push
push
mov
and
inc
inc
and
nop
cld
dec
popa
loope
pop
and
popf
pop
fcoml
push
ror
cmpsl
bound
test
push
shl
sbb
xor
sahf
xor
aaa
jle
pop
in
sub
in
push
fdivs
shrl
cmp
test
xor
je
mov
inc
xchg
dec
enter
test
dec
enter
test
mov
push
xchg
push
add
dec
into
jnp
insb
lock
xchg
sbb
je
mov
lea
call
mov
sub
aad
push
insb
les
inc
ret
outsl
clc
stc
call
insl
lret
mov
mov
int3
outsb
push
mov
inc
cmp
ss
inc
cmpsb
add
fsubl
loop
sbb
inc
dec
fbstp
push
cmp
aam
fs
mov
xchg
test
popa
pop
xchg
out
inc
xor
inc
pop
push
ja
mov
jbe
mov
xchg
dec
or
jmp
addl
shll
rol
lods
inc
and
jecxz
xchg
push
and
sbb
adc
jecxz
dec
rcrb
test
je
xor
fwait
insl
test
and
jle
in
mov
cli
dec
mov
xchg
or
add
imul
inc
shr
jp
sbb
and
cmp
inc
mov
clc
lds
pusha
fmuls
pushf
mov
jbe
adc
insl
test
mov
jg
loopne
pop
aam
dec
push
cmp
and
inc
xor
aad
sahf
pop
push
cli
test
fildl
add
loope
add
mov
mov
sti
sub
push
push
sub
movsb
adc
clc
lcall
mov
xchg
dec
and
cmp
stos
cs
ffree
sbb
dec
and
add
dec
and
push
ljmp
inc
popa
mov
cs
mov
push
ret
aas
xor
jno
and
jp
popf
cld
int
testl
sbb
insb
enter
into
mov
lcall
push
xor
cmp
dec
sub
jp
andl
jle
outsl
sub
stc
repnz
mov
mov
mov
inc
jne
jg
aaa
or
ljmp
hlt
or
push
mov
fmuls
jmp
stos
int3
stos
int
dec
filds
jg
ja
push
rorl
call
sub
mov
outsl
lods
shrl
jno
adc
lret
fwait
inc
fildll
loopne
inc
add
mov
dec
or
or
call
pop
xor
cmpsb
mov
push
mov
loope
ja
mov
fcomps
les
fldl
fisubrl
or
sbb
lds
loope
bound
movntps
loopne
pop
sbb
lods
adc
aad
addr16
xchg
and
xchg
sub
adc
jmp
adc
mov
fdivrp
sbb
roll
or
fldt
push
jns
js
leave
iret
pusha
sbb
jecxz
test
sub
cmp
ljmp
adc
push
xchg
sti
mov
pop
mov
mov
aam
dec
dec
cmp
ja
mov
scas
stc
pop
aas
std
inc
in
sarb
ljmp
pop
xor
in
jbe
mov
clc
jne
sub
popf
pushf
inc
xchg
decl
xchg
mov
lds
jbe
add
outsl
in
ret
push
lds
test
jns
pop
lock
mov
cmpsl
adc
xabort
xlat
popf
test
inc
decl
xor
xchg
fstpt
inc
insb
xor
sub
sarl
dec
and
cmp
cmovg
mov
jg
sar
fsts
inc
shll
sub
insl
ljmp
xor
sbb
imul
pop
rclb
push
cli
add
rcr
outsl
clc
pushl
adcl
inc
je
mov
arpl
hlt
ljmp
xlat
pop
xor
gs
out
push
stos
or
dec
adcb
decl
in
mov
and
push
push
cmp
adc
stc
pusha
xchg
dec
and
mov
or
xor
cmp
in
mov
lcall
push
mov
dec
mov
xor
pop
pop
dec
enter
inc
aas
inc
pop
lds
mov
jo
dec
jl
dec
push
ret
ret
into
mov
clc
mov
adc
pop
gs
fs
cmpsl
aaa
test
sub
pop
mov
mov
mov
call
rorl
insb
negl
jle
and
aam
mov
mulb
sbb
js
pop
std
decl
and
xchg
fwait
add
scas
sub
and
loope
sub
cmp
xchg
insb
xchg
add
and
mov
test
fcoml
mov
xor
in
xchg
std
mov
fcomip
insb
lock
jecxz
jo
repnz
fiaddl
sbb
scas
dec
mov
das
clc
inc
roll
mov
cmp
dec
xlat
insb
or
pop
lock
mov
jg
loope
fcomp
mov
jns
dec
dec
aaa
jne
arpl
cmp
arpl
sbb
pop
mov
mov
xchg
stc
outsb
xchg
mov
jmp
add
inc
mov
pushf
cmp
and
or
sti
jl
push
idivl
or
sub
lret
mov
clc
sbb
fnstsw
add
movl
xor
and
xor
inc
jp
pop
mov
sbb
push
inc
cmpsl
pop
ljmp
xchg
jnp
mov
pop
rolb
add
mov
push
jno
mov
out
pop
ja
mov
push
ljmp
scas
mov
mov
dec
cmp
jne
call
mov
mov
adc
aam
mov
mov
out
loope
cwtl
out
push
int3
sub
imul
fcom
push
je
scas
mov
mov
jg
test
dec
pop
rorl
outsl
int3
dec
fcompl
mov
arpl
push
or
and
lock
loopne
or
dec
cmp
xor
push
les
and
pop
push
das
and
and
push
jg
fisttpll
aad
es
in
push
jg
hlt
aaa
ljmp
inc
mov
xchg
inc
in
mov
hlt
popf
inc
adcb
cmp
xor
pop
xor
sbb
lret
cmp
sahf
or
and
adc
and
jo
ljmp
or
enter
ds
or
pop
aaa
mov
jmp
pushl
sub
push
cltd
lcall
cmpsb
rolb
push
jl
cmp
data16
sub
int
push
pop
pop
insb
xchg
adc
data16
or
repz
sbb
mov
xchg
push
xor
jnp
cmpl
and
movsb
hlt
pop
pop
in
sub
sbb
scas
aas
rorb
out
pushl
sub
sub
pop
call
adc
scas
clc
int
fmull
enter
mov
mov
fistpll
lods
pop
shlb
scas
xchg
leave
aam
inc
xchg
mov
call
and
divb
cli
sbbl
push
stc
sub
xchg
push
mov
sbb
dec
pop
sub
or
les
loopne
add
das
mov
out
adc
fwait
mov
xor
stos
mov
mov
jb
out
into
test
jg
mov
xor
les
adc
lods
lahf
and
into
pop
push
icebp
pushl
push
popa
aas
cld
test
int
dec
push
adc
insl
loopne
push
xor
mov
out
call
call
lcall
lcall
adc
fdivp
xor
mov
sbb
out
cwtl
fisttps
inc
fcoms
add
loope
or
incb
push
nop
mov
add
xchg
fiadds
stos
cmp
leave
nop
jno
xchg
orl
nop
inc
das
mov
std
aam
insb
xchg
pop
or
jns
call
call
push
aam
cmp
stc
mov
aas
mov
mov
decb
int3
pushf
call
push
and
adcl
adc
nop
and
pop
pop
int3
push
mov
jecxz
and
push
add
mov
add
and
pop
push
cmp
out
outsl
adc
hlt
add
stc
cmpsl
push
adc
mov
stos
push
aaa
pop
imul
pop
cmp
pop
or
lods
jbe
movsl
clc
inc
push
je
movsb
push
push
cmp
es
jg
dec
and
and
push
or
adc
lods
inc
xchg
sbbb
aas
sbb
fwait
mov
fsubrl
insb
pop
mov
call
jg
jmp
dec
fcomip
js
inc
pop
add
fiadds
jecxz
ss
mov
js
stos
fstl
push
and
jg
fwait
mov
push
push
ja
mov
lea
outsl
pop
fsts
mov
lods
in
jmp
call
xorb
jge
test
xchg
mov
mov
lods
adc
adc
adc
fsts
insl
inc
out
aam
mov
imul
vlddqu
push
fs
fnstcw
insl
jbe
incl
mov
cs
and
dec
enter
sbb
push
mov
scas
jle
call
pop
mov
aaa
ja
fsubs
add
xor
je
insb
ja
and
movsb
pop
hlt
in
mov
inc
scas
insl
mov
mov
out
and
into
les
jae
adc
pop
loop
dec
popa
mov
and
and
aam
inc
cmp
addl
mov
xchg
xchg
pop
mov
push
xchg
adcb
scas
test
rcrb
lcall
sub
pop
xchg
mov
in
sbb
mov
jbe
in
daa
add
pop
lea
jp
js
mov
adc
rorl
lret
cmc
daa
pop
cmp
push
js
xor
push
idivl
mov
rcr
push
imul
dec
ss
ror
jb
inc
xchg
cmp
push
or
pop
push
cmp
mov
rolb
fs
or
aas
clc
out
dec
jmp
push
test
push
test
push
ret
or
and
adc
jne
mov
inc
sbb
pop
filds
scas
push
lock
and
shl
mov
shr
mov
dec
jo
sub
sti
ss
out
jge
or
pop
leave
adcl
mov
scas
cmc
push
je
dec
jb
inc
out
test
fdivrs
mov
add
pop
loop
inc
xor
je
and
push
xchg
jge
bound
inc
stos
xor
fisubs
xor
dec
fbstp
mov
subl
xor
incl
or
jmp
sbb
out
sub
dec
sti
pop
cmpsl
mov
dec
outsb
aad
cld
sub
mov
and
popf
push
push
cmpsb
mov
scas
xor
mov
ret
filds
das
mov
cmp
pusha
and
or
fiaddl
iret
incb
sub
xchg
cmpb
or
and
xor
mov
popa
or
je
lcall
ret
lods
or
mov
mov
mov
insb
test
inc
int
push
icebp
mov
sbb
inc
dec
or
or
jle
pusha
data16
adc
fmuls
aad
and
add
insl
or
lcall
adc
nop
and
jnp
mov
add
dec
cmp
add
repz
xor
inc
or
dec
repnz
xorb
mov
adc
and
and
or
mov
add
mov
or
sub
lcall
push
inc
sub
pusha
data16
push
and
cmp
cwtl
fadds
mov
add
mov
xor
and
or
clc
push
rorb
and
or
inc
xor
inc
adc
and
or
data16
mov
xor
in
call
inc
fs
jbe
xor
mov
jle
and
data16
int3
sbb
bound
loop
or
rcl
mov
test
js
add
subb
sbb
and
add
sbbl
adc
dec
test
adc
or
xor
cld
and
sbb
popa
jbe
fadd
dec
nop
cld
pop
or
inc
bound
sahf
add
data16
or
jl
fidivrs
popa
fs
push
mov
push
or
lret
popw
or
cltd
or
pop
je
es
cmpl
cmp
mov
outsb
adc
lods
add
sub
adc
sbb
or
adc
adc
xor
or
popa
push
sbb
or
clc
and
pusha
js
push
add
nop
je
adcl
rolb
mov
pushf
sbb
pusha
xor
loopne
xorl
fdiv
xchg
mov
or
test
lret
or
or
sahf
or
push
or
mov
inc
hlt
xor
xchg
sbb
push
fsts
cwtl
sbb
ds
and
mov
sub
cli
and
or
jle
ljmp
out
sbb
mov
add
inc
pop
xchg
insb
ss
lods
and
pop
fadd
pop
and
addr16
adc
mov
cmpl
inc
shlb
int3
mov
dec
mov
dec
nop
js
push
mov
mov
xor
pop
dec
int3
inc
sbb
fldenv
add
and
cmp
cmpsb
inc
aam
xor
cwtl
or
popf
inc
mov
fdivrs
js
xchg
cmpl
sbb
outsb
or
ret
push
inc
xchg
xor
jo
cmpsl
mov
add
inc
adc
xchg
rorl
lock
add
xchg
sub
add
add
pusha
mov
pusha
push
lcall
sub
out
lea
add
and
test
mov
inc
cmp
fs
xchg
inc
mov
xor
xor
xchg
inc
test
push
popf
xor
sub
je
add
and
mov
lock
sarb
data16
andl
jp
in
test
push
xor
mov
inc
push
fcoml
lret
pop
sbb
ljmp
or
pop
int3
insb
pusha
sbb
adc
ss
and
xor
dec
imul
sbb
sub
push
andl
insb
mov
mov
ss
dec
icebp
jo
add
sub
js
fiadds
xor
lea
jp
xor
xlat
int3
jl
nop
test
add
push
xchg
mov
inc
mov
rcrl
cli
fidivrl
push
dec
and
test
add
pop
sbb
into
xchg
pop
add
dec
mov
dec
pusha
pop
sahf
add
jp
mov
mov
dec
push
data16
mov
dec
mov
hlt
pusha
dec
xor
sub
and
sbb
mov
data16
xchg
mov
mov
push
mov
add
jbe
lret
mov
test
push
add
pop
test
jb
sahf
and
pusha
adc
dec
mov
sub
pop
or
loopne
push
stos
sbb
add
add
or
ss
je
xor
xchg
xchg
lcall
ds
pop
add
push
push
xchg
bound
aam
push
pop
jnp
int3
ret
cs
adc
sahf
add
sub
outsb
dec
add
shlb
cld
fsub
loope
push
loopne
xchg
mov
les
fcompl
sbb
cmp
orb
sahf
xor
xchg
mov
aam
mov
cmp
repnz
ds
push
data16
push
jo
or
add
stos
nop
sub
mov
cwtl
out
nop
pop
js
lods
pop
fadd
test
pop
inc
dec
mov
adc
xor
mov
std
or
and
cld
pop
sub
or
sub
dec
push
pop
aaa
add
fisttps
and
add
and
adc
inc
add
sub
adc
jg
mov
aaa
push
add
cmp
pop
add
cmp
jg
sbb
ss
incl
outsb
add
inc
pop
add
inc
push
add
inc
popa
add
ja
jle
jbe
iret
es
and
add
push
inc
and
push
dec
jns
push
fnsave
pop
push
jbe
jge
jns
jnp
mov
dec
test
add
addb
mov
pop
nop
jbe
mov
xor
add
pop
aaa
mov
sub
sub
push
arpl
sub
add
lcall
push
push
outsb
lcall
jno
add
jns
jg
fists
xor
add
jp
ss
add
test
inc
jno
outsl
mov
inc
jge
jle
inc
jle
add
mov
fstpt
push
jg
mov
sbbb
cs
mov
fistpll
inc
xorl
mov
dec
xchg
mov
add
insl
sti
fwait
fwait
inc
xchg
rolb
dec
xchg
lds
into
ss
int3
add
add
add
add
aam
push
stos
fldl
cmpsl
les
cmpsb
popa
test
lcall
int
data16
ficoml
mov
push
loopne
je
xlat
add
add
in
push
sub
rcr
add
in
add
testb
leave
repnz
repz
sub
fisubrl
ja
incl
sbb
andl
ss
test
xchg
push
jle
mov
xchg
xchg
push
nop
cltd
push
xchg
xchg
push
xchg
xchg
xchg
xchg
add
sbb
sahf
cltd
push
xchg
xchg
popf
add
add
mov
cmpsb
lahf
test
add
mov
mov
fistpll
add
push
stos
test
stos
cmpsl
push
jle
ljmp
mov
add
scas
out
mov
mov
mov
sbb
mov
push
mov
push
enter
mov
scas
lds
iret
mov
fcmovne
mov
push
lcall
movsb
add
mov
mov
int3
mov
rcrb
outsb
push
ret
push
push
rol
iret
ret
scas
std
data16
lods
lds
int
mov
fcmovb
fcmovne
mov
rol
cld
call
lods
dec
pusha
push
int
rolb
aam
add
rolb
fidivs
fdivr
add
push
mov
repz
dec
xchg
sahf
cli
mov
mov
lret
lret
leave
out
mov
insl
sti
enter
int
fmul
push
ror
lret
rcr
shlb
insl
in
test
int
lret
fimull
fcmovnbe
rcll
flds
in
fcoms
mov
add
fstpt
loop
jecxz
push
jmp
mov
mov
mov
fstl
pop
in
push
in
lcall
flds
in
loope
add
loop
in
push
jecxz
in
cld
jbe
push
jmp
loop
add
jecxz
in
test
pusha
mov
mov
stc
out
stos
sti
outsb
xchg
es
add
mov
std
out
push
repnz
filds
repnz
les
push
fdiv
std
add
push
out
fldt
add
in
in
in
jecxz
loop
out
ljmp
in
div
es
in
stc
call
push
in
cli
mov
int3
sub
idiv
outsb
push
repnz
cld
hlt
call
cmp
aam
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
fisubl
mov
adc
adc
xchg
xchg
ss
fidivl
iret
push
and
std
fildl
fldenv
lret
jecxz
push
and
add
out
fidivs
or
sub
adc
fsts
ret
jmp
fcom
xlat
jecxz
jecxz
fcomp
sub
fldz
mov
fcom
rcr
rcll
mov
shrl
mov
ror
rcl
shrb
test
cmpsl
mov
push
xchg
std
xor
scas
test
sti
xlat
cmpb
jle
test
lret
sub
jnp
notw
scas
rorb
xchg
imul
xlat
add
outsb
jbe
lahf
scas
fdivrs
jbe
pop
sti
jne
mov
pop
scas
pushf
jge
imul
add
add
imul
add
scas
ret
sub
mov
loop
std
ljmp
sub
pop
sub
or
aas
repz
fisubrl
ret
sub
cs
ljmp
inc
outsb
mov
pop
int
or
or
sbb
push
push
adc
add
xchg
pusha
mov
adc
outsb
sub
cwtl
std
lods
mov
or
sub
and
aaa
negl
xor
in
and
stos
stos
sub
lahf
scas
fisttpll
push
test
xor
std
stos
orb
sub
cmp
sbb
aas
rcl
scas
mov
dec
dec
cmp
pop
mov
stos
xchg
std
stos
jo
adc
sti
incb
sbb
popa
pop
push
or
int
fisttps
lahf
jo
ucomiss
push
pop
sbb
out
mov
pop
lret
sbb
fs
sti
in
sti
mov
mov
ds
stos
stos
dec
mov
sti
jmp
mov
pop
sbb
sbb
dec
dec
sub
jmp
pop
pop
pop
addr16
inc
cmp
pushl
int
dec
pop
ljmp
loope
adc
sbb
cmp
in
dec
push
push
add
pop
sub
cmp
cmp
mov
sub
and
xor
sub
stos
sti
mov
daa
mov
mov
ret
dec
into
push
jecxz
out
imul
dec
in
rcrl
ret
xor
repnz
lret
data16
sub
lods
lret
stos
inc
jbe
in
mov
call
stos
mov
pop
loope
aas
mov
pop
jmp
sub
in
ret
loope
dec
mov
in
stos
stos
mov
lds
mov
icebp
jmp
mov
cmp
mov
mov
push
addr16
aad
sub
fs
pop
aaa
mov
loope
mov
jle
fldt
iret
rol
out
mov
icebp
out
mov
sti
iret
jle
lds
icebp
jecxz
rcr
mov
mov
mov
in
pop
out
les
mov
ss
push
int
sub
jecxz
mov
pusha
mov
sub
mov
js,pn
or
out
cmc
out
sub
push
mov
insb
shl
into
lds
les
out
into
into
aad
push
jl
out
or
outsb
addr16
push
jmp
mov
mov
jp
scas
cmp
mov
adc
sub
gs
ljmp
or
addr16
bound
aam
xor
js
mov
sarb
in
cmpsl
pop
adc
fs
mov
push
jno
inc
pop
fdivrs
fucom
out
mov
cmc
pop
add
mov
mov
mov
jae
push
push
inc
jae
ret
mov
fwait
aaa
push
in
testb
push
icebp
lock
mov
loopne
movsb
andl
ja
push
sub
push
insl
ja
mov
mov
aaa
loopne
shl
pop
pop
enter
andb
mov
loopne
and
sub
push
xor
js
mov
jo
ja
jns
dec
enter
clc
mov
idivb
or
ja
xchg
inc
ljmp
mov
sub
movsb
leave
in
mov
mov
filds
mov
add
add
mov
mov
dec
sub
mov
mulb
aaa
mov
mov
pop
ljmp
or
cmp
mov
sbb
push
adc
leave
pop
stc
clc
stc
loop
cmp
mov
daa
push
or
mov
push
fucom
stos
mov
and
cmp
outsl
fistpll
add
adc
sub
jmp
arpl
mov
mov
mov
xor
adc
sbb
notb
cmp
cld
stc
stc
mov
or
mov
add
repnz
fidivs
repnz
clc
cld
sarl
loopne
es
fistpll
pop
sub
jbe
adc
aas
mov
mov
es
imul
leave
cmp
orb
out
push
iret
aas
int
push
add
and
fisubrs
outsl
les
sub
in
push
push
dec
and
add
std
cmp
push
std
sar
pop
add
push
das
cmp
std
dec
daa
es
push
and
std
cltd
cld
or
push
jp
and
lods
mov
add
pop
cld
xor
adc
adc
or
mov
cld
std
ret
pop
push
adc
pop
cmp
sub
in
dec
test
dec
and
dec
lcall
xchg
add
sbb
mov
cli
in
add
sbb
or
sub
and
push
es
add
negl
add
daa
cmp
sub
int
sti
stc
sub
add
push
cs
add
das
or
xor
adc
dec
add
cmp
add
cmp
adc
push
adc
ljmp
pop
dec
imul
outsl
add
dec
insb
add
mov
je
adc
inc
push
jg
dec
add
into
xchg
adc
fistl
ss
mov
pop
sbb
add
pop
xorl
xchg
addr16
add
data16
add
pushf
add
addr16
imul
insb
mov
lahf
fwait
insl
sbb
pop
jb
add
je
ss
test
jbe
push
je
push
js
add
add
ljmp
cmpb
push
mov
cmpsb
mov
add
into
mov
lret
push
mov
add
mov
add
nop
push
sub
outsl
jle
out
movsl
ljmp
add
add
mov
icebp
mov
mov
fucomi
add
leave
dec
mov
shlb
xchg
addr16
dec
in
push
in
fistpl
fadd
int
insb
mov
push
fmulp
int3
push
loope
shrl
loop
jecxz
rcrb
shl
xor
jnp
shll
rcl
in
push
into
mov
sahf
out
pop
aam
aad
fidivrs
out
pop
xlat
faddl
out
addr16
call
jecxz
dec
mov
in
call
repz
lcall
popa
lcall
ss
mov
and
mov
sub
sub
push
pop
pop
mov
iret
fwait
testb
jp
jne
pop
push
push
and
push
push
imul
mov
ss
lcall
pop
push
push
pop
popa
test
pop
pop
pop
pop
pop
pusha
pop
mov
fnstsw
push
pop
pop
imul
pusha
push
add
push
outsb
pusha
mov
pop
arpl
push
and
mov
mov
popa
mov
jg
sub
adc
pop
jp
mov
int3
aas
notb
push
sbb
adc
lret
sub
pop
cmp
movd
and
adc
mov
xchg
mov
aas
inc
sbb
add
mov
sbb
sbb
jp
test
push
insl
rcll
or
addb
mov
pop
fadds
addl
dec
lcall
dec
add
or
idivb
add
pusha
push
ss
cmp
jge
or
ret
jne
inc
sub
dec
pop
mov
outsb
jbe
ret
nop
cmpsl
imul
jbe
or
and
cs
outsl
popa
popa
jo
out
mov
fsubrs
pop
sbb
sub
imul
jg
fcoms
and
push
adc
push
jnp
les
out
popa
pop
gs
add
movsl
ss
mov
outsb
pop
xor
repnz
mov
popa
push
mov
jg
sub
subl
xor
pop
imul
out
vpunpckhwd
ret
xor
jae
mov
pop
bound
jno
jae
popa
pop
icebp
or
aas
pop
adc
arpl
mov
push
push
add
outsb
pusha
outsl
jne
pop
jge
incl
sub
pusha
bound
outsb
push
cltd
outsb
insb
sub
push
push
push
test
push
sbb
add
add
orl
sub
add
ja
pop
add
rolb
and
add
or
add
notb
mov
add
xor
shrb
lods
jnp
mov
xor
mov
push
mov
lock
inc
ds
jle
add
adc
add
adc
mov
xorl
push
in
adc
xor
add
pusha
pop
mov
mov
xchg
pushf
adc
sarl
cmp
ja
das
mov
popa
xchg
cmp
push
incl
jg
adc
call
call
xor
push
jg
jg
adc
cmc
cs
icebp
fbld
lods
ljmp
inc
sbb
repz
sbb
add
daa
and
sub
xor
neg
ss
aaa
cmp
cmp
and
mov
sub
add
add
cmp
add
cmp
jnp
std
imul
pop
dec
add
cmp
push
cmp
outsb
inc
cmp
dec
fldcw
inc
dec
push
inc
push
push
dec
ds
dec
inc
push
cmpsl
flds
dec
push
push
pop
push
push
cld
in
sar
pop
pop
add
bound
jne
dec
dec
pusha
add
shll
push
fs
jp
dec
mov
pop
jno
push
jne
bound
add
imul
outsl
push
jae
data16
jns
push
outsl
jmp
mov
les
jb
jae
in
jbe
jl
add
push
jle
or
out
repz
inc
push
xor
inc
aaa
dec
add
dec
add
cmp
jmp
sub
ss
aas
push
add
aas
pop
add
xor
mov
jle
dec
add
xor
cmp
adc
popa
and
and
add
in
das
aas
jns
inc
dec
push
inc
push
dec
ss
imul
notb
push
pop
outsb
inc
inc
js
add
gs
imul
jle
arpl
mov
inc
add
jbe
test
repz
cmpl
out
mov
pop
pusha
jae
or
jl
jno
or
add
fiaddl
outsl
xchg
sbb
cwtl
sbb
xchg
push
imul
pushf
rolb
push
test
std
cmpsb
test
xchg
test
xchg
mov
add
negb
adc
pushf
sbb
mov
add
popf
xchg
mov
add
push
xchg
sub
sahf
sahf
sub
mov
and
sub
cs
cmpsl
es
lods
stos
xor
cmpsb
movsl
cmp
mov
aaa
mov
fiadds
push
jmp
shll
stos
mov
dec
add
arpl
push
mov
push
mov
sti
mov
add
ret
mov
pop
push
addr16
lret
inc
sar
fdivrl
aam
add
aad
and
mov
sbbl
fwait
add
insb
push
pop
jbe
or
mov
jp
arpl
das
jo
add
xchg
push
fldt
pop
jne
aas
out
and
cs
mov
pop
data16
dec
roll
push
les
inc
pop
push
aas
push
fsubrs
outsb
ja
xchg
pushf
push
add
fildl
sahf
xchg
sbb
sti
pop
xchg
xchg
mov
lea
sub
popf
lret
push
add
mov
push
shrl
scas
mov
mov
mov
in
divb
xchg
ss
jle
push
inc
test
mov
cmp
jle
les
iret
fucomi
rolb
inc
ret
push
ss
cld
enter
enter
pop
aad
outsl
jecxz
in
or
outsb
mov
mov
pop
shrb
inc
mov
push
int
xchg
jecxz
xchg
add
in
add
mov
roll
loop
xchg
mov
or
int
xchg
loop
loope
aaa
lahf
mov
lock
xchg
mov
ror
add
cmc
outsl
ss
fsts
hlt
push
fsubr
iret
repz
loopne
repnz
repnz
std
out
push
clc
flds
jg
pop
pop
ds
inc
fidivrl
pop
adc
shrb
push
es
adc
popa
or
in
daa
pop
inc
pop
sub
pop
push
loopne
cld
mov
lcall
pop
in
push
push
pop
adc
pop
in
lods
push
pop
adc
jne
cwtl
out
nop
xor
popa
push
pop
addr16
cmp
jnp
repz
std
jl
popa
rcrl
dec
mov
pop
xor
xor
call
out
popa
decl
cs
das
xor
mov
pop
mov
loope
popa
inc
pop
push
and
and
das
cmp
shll
loop
xchg
xchg
sub
add
out
jg
sbb
sbb
das
xor
xchg
ficoms
mov
or
add
sbb
and
xor
jne
xchg
popf
mov
sbb
pop
push
sbb
pop
in
push
sbb
and
xor
cmp
fwait
sahf
mov
or
mov
pop
pop
pop
xor
pop
pusha
jno
xchg
lahf
mov
or
add
or
adc
data16
jo
jo
push
mov
jmp
aaa
push
jno
or
pop
add
xor
dec
dec
dec
adc
jo
and
dec
pop
mov
mov
mov
jmp
pushl
movsb
mov
dec
push
jg
add
push
cmovno
push
push
pop
pop
cmpsl
mov
cmpsl
cmpsb
pop
pop
adc
mov
pusha
or
aas
add
push
fs
pop
push
pop
cmpsb
mov
test
mov
push
inc
inc
inc
pop
inc
inc
popa
push
pop
into
aam
int
mov
pmuludq
jecxz
mov
ret
sarb
inc
push
add
pop
pop
movsl
cmpsb
mov
ficoms
repnz
push
add
jmp
pop
ror
int3
mov
popa
test
outsl
mov
push
add
lret
ror
int3
int
decl
xchg
sub
movsl
cmpsl
ret
ljmp
fcom
mov
fs
mov
fstpt
popa
out
add
jmp
sti
out
fnstsw
ja
idiv
popa
mov
pop
pop
cmp
inc
jmp
js
lods
ljmp
sbbb
pop
into
pop
cmpsb
pop
jge
pop
pop
enter
popa
pop
in
pop
decl
pop
test
add
popa
push
adc
pop
mov
mov
and
inc
xor
pop
mov
es
dec
dec
dec
bound
sbb
add
add
je
insl
xchg
add
cmc
inc
mov
add
fcmovu
add
out
add
repnz
fbld
iret
lret
movsl
add
data16
push
push
pusha
add
loopne
mov
inc
xor
adc
sbb
test
jecxz
cltd
sbbb
mov
int3
jnp
lahf
inc
sbb
cmp
push
out
loope
push
push
adc
std
mov
hlt
movsl
add
loop
clc
push
inc
add
push
mov
add
sbb
cld
cli
out
rcrb
ss
sbb
add
out
stc
pop
mov
test
in
xchg
popa
popf
lds
and
sbbb
sbb
xchg
andb
cltd
frstor
cmp
push
scas
xor
es
mov
pop
adc
aaa
fists
and
or
icebp
pop
insl
flds
adc
add
inc
add
push
mov
imul
outsb
outsb
pusha
add
bound
jae
add
imul
jge
outsb
push
sahf
push
push
mov
push
fwait
int
mov
push
stos
pop
mov
mov
fildll
push
add
sbb
xchg
xchg
jge
out
inc
pop
mov
mov
mov
add
cmpsl
xchg
test
xchg
mov
lcall
scas
cltd
add
add
mov
mov
mov
lahf
add
outsl
in
pushl
mov
mov
mov
push
mov
andb
pop
cld
das
adc
lods
add
lds
sbb
mov
rcl
mov
pop
lock
aam
push
cmc
test
and
ret
add
fcmovnb
add
cmp
rcrl
cmp
pop
add
in
fadds
lock
aas
pop
fiaddl
repnz
add
cmc
filds
div
ficomps
add
cli
jecxz
cld
cld
in
pop
call
in
pushl
xor
aaa
cmp
ss
adc
dec
mov
subl
idiv
sub
sub
sub
es
push
sbb
pop
xchg
cmp
inc
inc
dec
dec
dec
dec
push
push
push
lock
int
push
push
push
push
dec
dec
dec
dec
inc
inc
sbb
cmp
add
jnp
adc
cmp
cmp
add
das
jle
jbe
inc
add
or
or
push
pusha
aaa
mov
or
or
sbb
xlat
sub
jbe
dec
les
sub
mov
fstl
adc
or
cmp
neg
data16
mov
adc
adc
push
or
adc
and
mov
pop
das
adc
cld
ja
das
push
push
push
add
aas
ds
add
aas
aas
adc
repnz
sti
iret
add
sbb
adc
push
or
out
jne
repnz
pop
push
mov
mov
pop
push
das
mov
and
ds
jg
ret
sbb
fists
ret
jb
or
mov
dec
dec
dec
push
push
sbb
pop
andb
daa
sub
or
ljmp
xor
xor
sub
and
add
adc
pop
push
push
pop
add
push
sbb
sbb
add
pusha
fiaddl
cmp
repz
xchg
sub
xor
dec
pop
push
xor
xor
cmp
aas
cmp
dec
add
inc
cmpsl
dec
insb
incb
push
add
cmp
ds
dec
fisttpl
js
add
add
push
push
inc
pop
insl
jae
ss
pop
ds
adc
pop
dec
pusha
push
push
mov
add
push
insb
es
jae
pop
push
and
and
daa
pop
fildll
push
aas
pop
imul
outsb
add
popa
jbe
ja
jp
or
mov
fwait
jnp
jge
je
jg
arpl
adc
xor
add
inc
dec
add
mov
gs
dec
inc
push
dec
push
dec
push
cmpsb
add
rcll
bound
insb
pop
fcompl
pop
fs
inc
push
popa
push
push
arpl
fs
pushw
pop
insb
add
push
push
push
mov
dec
xor
push
fs
push
imul
jb
fildll
add
add
jg
jnp
std
sub
jnp
jae
add
jp
push
jnp
push
fs
add
jb
xor
sti
mov
jl
divb
add
ss
mov
fwait
outsl
fbstp
fsubl
mov
lcall
mov
loopne
xchg
movsb
into
lahf
scas
mov
mov
pop
jmp
js
fiadds
xchg
int
mov
gs
movsl
add
mov
push
fsub
or
jle
iret
push
leave
rcl
push
xor
sbb
add
repz
in
testb
add
xchg
push
xchg
incl
add
xchg
pushf
xchg
add
inc
outsl
int
xchg
sahf
add
cltd
mov
fsin
in
push
test
stos
scas
add
add
mov
fnsave
test
stos
movsb
push
lods
test
test
aaa
inc
fwait
scas
stos
mov
mov
add
cmpsb
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
rcr
mov
sarl
rolb
mov
enter
push
mov
movl
enter
ret
les
fidivs
into
into
movb
lret
add
fwait
divb
in
into
int
push
ror
ror
add
ror
push
ror
ror
insb
fbstp
aam
rolb
add
push
aam
lods
loope
rcl
roll
rcl
outsb
aam
add
mov
sahf
mov
fcom
push
inc
outsb
data16
fiaddl
fadds
add
add
push
add
push
push
fbstp
cwtl
add
in
es
fistl
repz
aam
add
loope
jecxz
fstps
add
in
int
inc
negb
jmp
out
out
data16
fnsave
out
jmp
jmp
cwtl
lods
imul
out
imul
repz
lock
add
repz
hlt
data16
lods
hlt
add
hlt
div
add
add
add
add
sti
mov
negb
inc
cmp
pusha
cmp
xor
pop
stc
jg
in
sbb
pop
or
or
pop
pusha
adcb
mov
cmpsl
test
pushf
pusha
push
or
sti
mov
sbb
xor
xor
psubsw
cmp
or
pop
xor
push
iret
push
and
incl
pop
pop
movups
xor
bnd
jl
push
cmp
xor
mov
idiv
cmp
jae
jae
push
cmp
aaa
xor
popa
push
sbb
or
fistps
dec
adc
xchg
out
xchg
js
dec
inc
cmp
xor
sbb
sar
out
or
mov
inc
mov
inc
aas
sti
and
sub
cli
pop
adc
incl
xchg
xchg
pusha
imul
adc
mov
mov
sti
xchg
lods
mov
add
movsb
or
out
ja
or
lret
xchg
jne
lcall
aas
mov
in
or
pusha
or
rolb
dec
xor
out
xchg
xchg
in
cmp
rorb
pusha
add
pop
call
xor
mov
repz
xchg
std
fisttps
jbe
pop
jl
mov
cltd
scas
mov
out
shlb
mov
mov
pop
push
cmp
lcall
jge
xchg
lock
mov
cwtl
xchg
idivb
pop
jmp
cwtl
xchg
push
or
mov
mov
stc
call
loop
jecxz
mov
dec
jns
loopne
pop
lret
pushf
shlb
ja
call
pop
leave
out
ja
xor
cmovns
iret
and
dec
dec
jg
cmp
jno
xlat
lock
lock
jno
inc
cld
filds
pop
pop
lods
ljmp
pop
pop
fwait
mov
shll
jg
xor
inc
mov
lea
and
daa
mov
mov
pop
sub
aas
call
xorl
mov
dec
dec
sub
out
add
ljmp
sub
lahf
mov
inc
aaa
xor
adc
or
cmp
push
adc
adc
pop
sbb
add
clts
push
sbb
test
and
outsb
push
sub
pop
das
pushw
pop
cs
fadds
inc
dec
push
imul
sub
and
pop
push
jb
add
lahf
shl
sub
xchg
mov
mov
dec
adc
daa
movsb
add
add
or
int
loop
ret
loopne
mov
adc
pop
jns
and
or
leave
fsubp
negb
in
lret
stos
outsl
or
movsl
das
lcall
or
pushf
mov
into
in
mov
dec
pusha
jmp
inc
lcall
dec
jbe
mov
int3
fdivrs
add
int
xchg
mov
dec
inc
cmp
push
or
add
or
xor
cmp
jns
mov
mov
push
fidivl
cmp
xor
or
or
pop
sbb
xchg
add
jne
mov
inc
push
push
outsl
jg
inc
loope
sbb
push
jnp
xor
lcall
imul
js
adc
jb
sbb
jge
push
cmp
sub
data16
popa
mov
bound
dec
add
mov
sahf
xchg
pop
add
popa
ss
add
insb
inc
int
mov
ds
mov
pop
add
xchg
js
dec
jl
mov
push
nop
andb
outsb
shrb
mov
adc
push
push
and
dec
insl
addb
mov
adc
push
insb
cmpsb
adc
xchg
aaa
mov
cmpsb
test
add
add
decl
aaa
add
xchg
arpl
jmp
mov
or
mov
adc
test
pop
xor
out
xor
mov
mov
sbb
ds
add
xor
push
aaa
push
or
aaa
and
dec
aaa
fwait
add
cmp
or
outsb
incb
push
cmp
inc
mov
sbb
push
mov
pushl
popf
add
inc
lcall
sbb
mov
dec
fisubs
sub
sub
lds
fwait
mov
xchg
add
dec
cltd
dec
dec
push
cs
pushl
push
sub
sub
push
sahf
add
pop
movsb
add
dec
mov
jbe
push
dec
push
das
push
mov
push
movsl
push
pop
stc
fbstp
push
xor
xor
cmpsb
add
pop
movsl
add
pop
fcmovnbe
mov
add
pusha
stos
ds
cmp
cmp
loopne
jbe
test
cmp
out
push
add
xchg
inc
outsl
mov
add
dec
inc
imul
jbe
jge
inc
push
add
dec
inc
insb
push
inc
ljmp
mov
push
push
imul
inc
outsl
mov
and
ss
jno
push
jae
cmpsb
stc
insl
jmp
mov
ja
push
js
add
mov
stc
push
jl
add
jne
add
push
jl
push
jge
repz
out
lds
pop
push
pop
jle
add
add
pop
mov
outsb
mov
mov
pop
add
cmp
fwait
pop
orl
enter
xchg
mov
lds
popa
xchg
mov
push
mov
imul
xchg
into
pushfw
push
jge
lret
popf
iret
mov
mov
mov
push
je
rcrl
xlat
add
es
and
aad
add
faddl
jg
fldl
push
push
fneni(8087
nop
loopne
outsl
fsubrl
add
xchg
add
lods
mov
fcomps
push
mov
push
mov
ret
lcall
push
mov
xchg
insl
lods
mov
mov
add
inc
into
mov
test
push
movsl
ficoms
fwait
insl
fcmovnu
test
xchg
mov
lcall
mov
mov
add
es
insl
fwait
in
mov
into
ret
loope
loop
lret
iret
aad
push
out
mov
mov
mov
outsb
int
shr
add
shr
rclb
mov
lock
lea
xlat
repnz
mov
pop
kxnorw
aad
xchg
fdivs
fsubrs
mov
call
fdivr
lcall
popa
arpl
jl
xchg
movsl
lcall
bound
pop
repnz
ljmp
movsb
mov
fsubrp
clc
lock
fcmovbe
mov
popf
xorb
call
jns
cltd
test
ss
shl
in
fnstcw
pusha
pop
lcall
and
test
mov
lds
sub
repnz
stc
out
fnstcw
or
xorl
sbb
sbb
xor
ljmp
mov
mov
pop
push
out
xor
push
enter
out
fstpt
dec
or
mov
iret
incl
cmp
jmp
add
xchg
xchg
or
jb
push
cmp
pop
add
sbb
cld
pop
enter
jg
test
loopne
sub
push
sbb
incl
xchg
cmpsb
mov
sub
decl
stc
lret
out
xchg
inc
jns
jle
into
fisubs
add
cld
out
cmp
jle
imul
xchg
xor
in
cmc
sbb
inc
fldl
les
and
movsb
jb
clc
add
int
out
push
jo
cmp
sbbl
jmp
push
jae
xchg
cmpsl
mov
sbb
out
lahf
inc
dec
shl
aad
stos
xchg
subl
lods
loopne
and
mov
cwtl
mov
push
dec
jmp
jg
jg
mov
repz
cwtl
xchg
pusha
or
outsb
pop
sbb
pop
adc
push
dec
mov
out
add
push
dec
dec
dec
dec
inc
inc
cmp
inc
std
aas
rorb
adc
sbb
sbb
lret
lahf
jne
or
lds
pop
adc
mov
add
adc
adc
add
loopne
cmp
adc
push
lahf
xor
jg
cmc
pop
and
and
and
and
and
in
insl
mov
les
xor
adc
and
mov
xlat
ds
testb
adc
cmpsb
insl
and
cld
fnstenv
les
adc
mov
and
fcmovnu
outsl
pop
std
idiv
std
or
pusha
movlps
idiv
mov
ret
and
pop
idiv
add
lret
cld
pusha
movsb
imul
add
add
mov
pop
pop
rcrb
mov
sbb
mov
daa
pop
sti
rcrb
testb
lahf
pop
add
shlb
jae
add
lret
rcrb
add
mov
jle
cld
rcl
pop
add
fsubrl
rcrb
inc
repz
sbb
andl
push
mov
jge
add
pusha
loop
sbb
mov
aaa
in
or
pop
das
das
push
aas
sbb
ss
jg
rolb
inc
adc
push
das
aas
add
push
nop
mov
ja,pt
xor
sub
push
sub
mov
repz
inc
cmp
aas
aas
das
cmp
in
jbe
push
push
pop
push
xor
cs
inc
cmp
dec
out
push
fidivrl
outsl
push
aas
jo
push
cmp
add
lcall
cmp
dec
js
in
negb
pop
aaa
inc
add
pop
inc
cmp
push
pop
jae
pop
jae
jle
pop
jbe
jbe
jns
cmp
push
arpl
fldcw
popa
jo
xchg
inc
je
push
add
pop
jno
jge,pn
shlb
inc
push
jle
push
jo
imulb
andl
mov
jo
nop
je
add
scas
mov
ds
add
fbstp
fistpl
mov
cmp
aas
aas
lahf
add
inc
test
jno
mov
push
dec
outsl
adcl
jae
push
jne
out
jno
push
push
inc
jns
add
lods
loopne
jns
jne,pn
inc
jge
jg
mov
jbe
dec
push
test
add
inc
mov
mov
repz
shlb
fiaddl
shrl
add
insl
out
in
lea
call
cmpsl
push
pop
dec
mov
cwtl
scas
sbbb
fwait
add
xchg
add
pop
mov
test
mov
lods
mov
push
pop
xchg
cmpsl
push
xchg
test
or
pusha
lcall
bound
rcr
push
addr16
mov
mov
mov
add
mov
out
test
mov
mov
push
ds
adc
add
xchg
mov
notb
cmpsl
scas
push
mov
add
scas
shlb
leave
mov
add
mov
stos
xchg
mov
pop
push
ljmp
xlat
push
arpl
roll
rcr
push
int
fwait
insl
ror
leave
rcl
ljmp
jmp
mov
mov
push
mov
testl
cmc
stc
dec
sub
fneni(8087
enter
mov
fcmovnu
filds
dec
or
pop
int3
ds
push
sti
mov
test
push
xor
add
insb
add
iret
xchg
cmc
mov
jb
mov
push
decl
jg
cmpb
sub
pop
dec
push
fwait
popf
mov
fdivr
mov
popf
fwait
test
popa
or
jne
xorl
movsl
cmpl
push
xor
popa
jg
daa
dec
addr16
jle
mov
mov
mov
mov
jno
dec
add
pop
mov
sbb
pop
push
outsb
jbe
imul
jae
push
pop
jbe
push
sbb
dec
sbb
mov
add
popa
pop
idivb
push
mov
xchg
or
lahf
popa
pop
inc
sbb
push
imul
negb
movsb
add
pop
adc
das
idivb
add
adc
or
add
fs
add
mov
xor
or
xchg
pop
rcrb
test
xor
test
cmpsb
jne
in
mov
js
pop
jnp
out
popf
xor
cmp
nop
decl
xor
cltd
mov
data16
inc
jle
mov
mov
push
enter
jg
aas
mov
in
mov
cmpl
mov
loope
xor
pop
call
int3
push
enter
or
sub
hlt
xchg
sub
or
mov
movsl
xchg
mov
or
add
or
pop
pop
insl
sub
ds
inc
push
loop
adc
push
fs
adc
push
sbb
pslld
and
and
xor
das
sbb
bound
dec
sbb
in
enter
lcall
nop
aas
leave
mov
cwtl
pop
inc
insb
test
je
or
pop
mov
inc
pop
bound
in
push
add
add
push
dec
sbb
push
pop
cmp
xchg
adc
xor
pop
mov
cmp
and
popa
and
dec
int
pusha
add
or
dec
inc
adcl
insl
lods
mov
je
dec
add
das
bound
aas
push
inc
aad
clc
decl
cmp
stc
add
mov
setns
sti
mov
xchg
cmc
sahf
iret
imull
cli
add
shrl
stc
xchg
repnz
inc
add
int
sti
insb
jl
inc
sbb
and
add
and
push
cmp
lcall
pop
mov
pop
mov
outsl
jnp
fistl
xor
xor
xor
mov
add
push
js
mov
pop
ja
sub
ja
pop
jmp
outsl
jnp
pop
xor
fldl
fcoms
and
push
inc
arpl
jg
popa
or
shrb
fcompl
inc
fbstp
mov
xor
dec
push
and
add
adc
pop
add
adcb
adc
push
pusha
jle
data16
adc
adc
mov
or
add
jne
add
jnp
sbb
xor
xor
push
and
pop
pop
sub
inc
jo
mov
imul
js
dec
outsb
aaa
into
cmpsl
push
xor
insl
push
add
and
add
push
add
out
push
push
insb
lret
pop
jo
out
popf
int
jae
je
pusha
push
arpl
jl
xchg
xor
movsl
mov
push
loopne
movl
cmpb
test
push
call
add
in
gs
mov
pop
ffree
loopne
add
inc
mov
js
jge
andl
sbb
dec
or
inc
into
pop
xchg
les
push
mov
ret
pop
jb
pop
inc
int3
data16
push
adc
fisttpl
in
popa
lock
lock
ds
or
push
mov
imul
cmp
mov
push
mov
jbe
nop
jnp
stos
push
pop
xchg
es
test
and
push
test
fnstcw
data16
xchg
xchg
data16
mov
js
jl
rep
iret
pop
nop
push
jp
xchg
push
jle
xchg
xlat
mov
rcll
add
jb
push
push
xchg
push
outsb
push
jns
xchg
add
cmpsb
or
insb
lahf
adc
jge
sti
mov
pop
sarb
xchg
in
sarl
in
push
xchg
into
test
cwtl
xchg
jns
cwtl
fwait
sahf
push
mov
mov
mov
mov
sahf
movsb
cmpsb
mov
insb
cmpsb
shrl
test
cwtl
movsb
push
lahf
test
pushf
lods
mov
stos
outsl
inc
fcmovnbe
push
lods
push
movsl
mov
lods
mov
cmpsb
push
pop
lods
mov
out
mov
incb
mov
mov
fldcw
mov
push
mov
mov
mov
mov
int
mov
mov
mov
jns
dec
mov
mov
push
mov
ret
add
mov
adcb
and
cmp
mov
push
ret
leave
push
leave
push
ret
int
xor
dec
push
enter
out
pop
rorb
sarb
lret
lret
jns
divb
shlb
push
rorb
fadds
fidivrl
add
rcr
aam
fisubrs
iret
cmpsb
fmuls
fcmovu
jecxz
fdivr
mov
repz
fsubp
loop
loopne
in
push
insb
ss
dec
in
lock
hlt
div
test
pop
jbe
cli
cli
pop
ret
inc
pop
ss
xlat
jle
lret
push
fsubs
fisttps
divb
or
sahf
hlt
cmc
pop
dec
in
out
push
test
mov
push
cli
mov
iret
push
shrl
add
cli
fnstenv
push
loop
int3
icebp
cmc
repz
and
add
data16
add
adc
repz
add
add
sarl
sti
mov
movl
in
pusha
mov
call
shll
stos
fnsave
loopne
mov
cmc
pop
fcmove
xchg
sbb
ror
popa
pop
add
fs
pop
mov
pop
xlat
lret
ret
popa
call
loopne
aad
lds
ret
sub
mov
mov
fcmovbe
lret
mov
add
ljmp
pop
out
fst
enter
mov
jg
mov
mov
mov
add
jmp
call
cltd
cwtl
xchg
xchg
xchg
xchg
xchg
popf
lods
iret
stos
xchg
test
imul
test
stc
incl
mov
shrl
cmpsl
add
cmpsb
lcall
daa
mov
jg
mov
hlt
mov
movsb
push
pushf
add
sbb
idiv
bound
add
jle
mov
dec
repz
pop
pop
and
lret
test
mov
incl
adc
xor
cmp
sbb
jns
sbb
jg
popa
ljmp
imul
adc
aas
inc
ss
aaa
dec
sbb
jge
seto
jno
popa
pop
bound
and
daa
add
cmp
push
push
jb
pushl
xor
push
jbe
jne
imul
sub
cmp
inc
pop
repz
dec
popa
push
pusha
orb
and
add
push
or
pop
dec
cmp
andl
mov
daa
add
idiv
roll
idiv
fnstcw
in
std
fcomps
movsb
pop
popa
pop
pusha
pop
jg
imul
inc
icebp
push
jbe
jbe
pushf
lock
lcall
andb
idivb
mov
scas
inc
pop
xor
call
out
pusha
pop
test
ret
push
and
dec
pop
push
cmp
sti
idiv
cli
sub
jp
push
mov
pop
push
iret
out
fsubs
popa
jbe
xchg
or
js
push
mov
push
pop
push
sub
nop
call
imull
push
outsl
fwait
push
pop
pop
pop
sub
inc
cmpsb
idiv
jb
push
add
or
imul
mov
add
pop
inc
leave
inc
in
pop
popa
add
dec
inc
in
add
push
scas
inc
dec
add
push
jae
in
sbb
push
add
jo
add
ss
push
aaa
pushl
add
xchg
fucomp
out
idivl
xor
js
ja,pn
subb
jmp
ss
and
mov
test
pop
subb
jo
mov
repnz
add
pop
push
cmp
andl
jae
pop
stc
and
aaa
jae
jnp
cmp
repnz
repz
xor
jnp
add
ret
or
mov
jo
push
inc
push
add
sub
pop
push
test
out
nop
mov
pop
pop
ret
adc
nop
fisttps
loopne
add
add
out
add
lock
nop
xlat
xchg
daa
inc
add
jl
lahf
jl
inc
addr16
push
inc
mov
mov
fistpll
lret
mov
push
lret
cs
rep
lods
int3
int3
push
pushf
idivb
jnp
cmp
cs
pop
mov
lods
pop
cs
push
das
add
pushf
clc
popa
sub
xor
shl
or
inc
mov
enter
mov
push
sahf
add
or
insb
pop
add
push
add
and
adc
add
adc
ss
push
sbb
sub
xchg
add
js
ds
aas
inc
inc
push
dec
outsb
dec
jmp
ds
push
pop
pop
pop
push
jbe
push
add
push
pusha
push
add
or
add
adc
outsb
jno
out
jl
je
jg
and
cmp
inc
cmpsb
inc
dec
add
dec
push
add
adc
pop
addr16
add
dec
inc
into
inc
dec
fimuls
data16
popf
push
dec
push
dec
add
into
inc
dec
push
dec
jb
add
insl
dec
push
outsb
dec
push
pop
push
push
pop
pop
push
pushl
pop
push
push
push
pop
pop
add
pop
add
pusha
add
bound
popa
pop
popa
movsb
outsb
call
pop
fs
orb
imul
insb
add
jo
jo
ja
jg
jne
idivb
jp
jle
jle
mov
jnp
test
pop
iret
jnp
mov
add
stos
mov
push
add
arpl
add
je
shll
fwait
mov
jnp
push
jae
outsb
add
sbb
jp
mov
mov
imul
les
push
or
adc
fildll
mov
push
or
in
adc
pmuludq
add
fwait
cmc
pop
jmp
icebp
add
mov
testb
mov
in
jl
add
sahf
add
mov
inc
add
mov
inc
lea
xorl
mov
push
cmp
push
sahf
push
pusha
test
lahf
fsubrs
cmp
mov
adc
add
push
adc
and
push
or
out
enter
push
xor
push
sub
push
adc
out
add
xlat
call
and
ds
imul
push
xor
push
cmp
push
fcompl
loope
push
out
testb
repz
add
jle
shrl
jl
jo
stc
add
fwait
sbb
add
push
push
test
ss
xchg
ds
cltd
fisubrs
addl
mov
mov
popf
fisttps
pop
add
ret
sbb
lods
mov
scas
mov
mov
add
mov
sbb
add
mov
mov
cwtl
add
fcmovnu
sarl
fsubs
sahf
fisubrs
fnstenv
outsb
fsub
push
jecxz
mov
movb
push
lods
into
mov
jo
and
mov
push
jl
mov
inc
mov
iret
ficompl
sbb
mov
es
add
lods
or
mov
push
mov
adc
mov
jbe
fimuls
jo
in
push
je
loop
add
in
fucomp
shrb
in
push
add
pop
and
out
ds
fldt
fldl
ret
fisttpll
push
test
leave
in
push
ds
into
ljmp
in
loopne
icebp
scas
jmp
add
in
lock
out
movsb
dec
loopne
mov
out
inc
fildl
insb
mov
decb
push
fdivrp
es
repnz
jmp
jecxz
ljmp
inc
and
out
idivb
jecxz
ljmp
stc
repz
add
mov
add
lahf
cmp
cmp
add
pop
in
cmp
xor
add
insb
orb
imul
inc
ss
imul
or
cmp
xor
xchg
roll
daa
sub
sub
or
iret
std
dec
xchg
xlat
jno
adc
cmpsl
or
add
lods
scas
lods
add
push
cmp
mov
or
or
push
ret
shrb
lods
stos
jbe
or
stos
cmp
inc
pop
lret
lret
or
or
mov
sarl
lods
cmp
sbb
add
pop
jae
pop
fisttps
out
or
out
pusha
lds
popa
ljmp
pop
fbld
out
dec
jecxz
out
call
loop
or
add
jbe
lods
or
fadd
cmp
dec
std
fisttpll
aam
pop
ljmp
out
mov
daa
fadd
cmp
dec
xorw
pop
add
push
ret
pop
mov
out
cmp
dec
sbb
mov
pop
daa
out
pop
or
pop
cltd
or
cs
jbe
dec
lock
add
daa
pop
cmp
pop
or
data16
hlt
or
push
mov
or
or
or
or
sub
daa
clc
sub
or
jmp
mov
dec
inc
xor
xor
fcomp
stc
aaa
inc
cmp
stc
das
clc
or
sub
xor
cmp
repz
mov
mov
mov
nop
or
xor
xor
sub
or
dec
int3
fst
cmp
jo
pop
orl
into
or
daa
out
dec
das
jmp
inc
div
cld
cld
cmp
xor
jb
or
mov
dec
or
add
cltd
inc
fwait
pushf
cld
add
out
pop
xor
xchg
push
pop
pusha
add
inc
loop
cmp
inc
inc
popf
into
xchg
sbbb
js
or
cmp
bnd
pop
dec
fmuls
in
repnz
cmp
popf
cld
mov
lcall
nop
cld
or
or
pop
dec
arpl
rorb
rorl
aad
flds
mov
lahf
sar
mov
mov
xor
daa
aad
cmp
bnd
fs
aad
fldcw
repnz
inc
cli
mov
loopne
int3
pushf
inc
aaa
bnd
insl
sub
cmp
or
or
sub
inc
cli
aam
out
mov
icebp
pop
mov
hlt
aaa
fsubl
xlat
jg
outsl
push
gs
sbb
sub
inc
cmc
scas
mov
fistpl
cld
xchg
das
jbe
pop
bound
sub
inc
repz
adc
imul
cmp
imull
dec
sbb
mov
fidivrl
fcompl
test
fimull
jmp
mov
or
push
mov
xor
add
frstor
fdivrl
sub
mov
sbb
ja
mov
inc
fldt
faddl
fisubrl
in
loopne
xlat
mov
jne
fwait
scas
movsb
or
xchg
sub
cmp
mov
pop
mov
jp
jl
sub
mov
mov
out
cmp
pop
adc
add
add
jne
daa
movsb
or
mov
push
inc
sarb
ret
pop
outsl
orb
or
bound
mov
xchg
call
mov
lret
xchg
insl
push
inc
mov
add
imulb
sub
mov
test
jbe
adc
mov
int3
or
inc
das
cmp
jg
test
pop
push
push
push
push
pop
mov
jle
inc
push
add
inc
xor
dec
dec
jae
iret
inc
inc
or
add
adc
mov
fistpl
jbe
sbb
sub
push
xor
stos
fwait
mov
push
cmp
sub
std
push
shlb
add
aaa
add
cmp
ljmp
push
sahf
inc
pop
add
dec
pop
add
inc
push
add
jp
scas
clc
dec
pop
add
push
or
push
gs
push
insl
ss
jbe
and
sub
add
push
jg
add
add
inc
pusha
dec
push
inc
daa
ljmp
push
jg
imul
add
inc
or
or
addr16
add
push
add
fsubs
es
push
addr16
mov
insb
scas
push
outsb
outsb
push
dec
add
fidivs
insl
ror
data16
jge
addl
push
subl
lea
movsb
add
lea
cmpsl
loopne
insb
fwait
popf
fwait
stos
movsl
scas
mov
adc
outsb
mov
les
out
out
into
xlat
adc
loopne
in
ja
out
inc
inc
inc
hlt
stc
das
addb
inc
adcb
xchg
cmc
fildl
lahf
add
pushf
mov
lods
lods
cltd
add
adc
mov
mov
mov
insl
xchg
test
xchg
mov
outsb
xchg
lods
mov
cltd
mov
mov
mov
push
or
sahf
mov
pop
pop
dec
mov
push
mov
insl
fldt
ds
push
mov
mov
mov
movsb
mov
shlb
add
movsl
lds
mov
mov
into
xchg
rorb
lds
lret
rolb
mov
mov
scas
into
push
test
aad
iret
fcmovnbe
fimull
jg
mov
mov
mov
fadds
mov
fcoml
fiadds
mov
mov
ret
mov
mov
frstor
cmpsl
loope
xlat
push
stos
ftst
push
fsubp
mov
ljmp
push
mov
loope
in
fimull
mov
mov
out
es
fldl
mov
call
push
scas
pusha
mov
mov
mov
out
imul
out
cli
pop
out
data16
out
lods
fldcw
mov
hlt
add
mov
stc
call
insl
mov
dec
mov
push
in
in
std
add
push
mov
push
mov
subl
cs
shlb
insl
or
retw
ret
in
mov
in
out
out
lret
dec
jmp
clc
mov
out
in
cmc
add
jmp
add
jmp
push
insl
mov
leave
jmp
lret
int
shr
lods
fldcw
stc
in
push
rolb
add
decb
push
in
int
movlhps
mov
sti
fwait
out
shr
testl
icebp
icebp
push
ret
hlt
sti
mov
shll
rcll
cmc
jbe
hlt
idivl
imul
lret
int
mov
cmc
into
lret
stc
ds
aam
cli
add
fildll
jns
aad
hlt
ds
mov
in
in
in
iret
insl
mov
orl
sbb
dec
add
push
outsb
sar
outsb
jb
mov
cmp
sbb
pop
xor
sbb
jne
pop
sub
mov
cli
imul
mov
mov
cwtl
cmpsb
stos
and
mov
or
pop
cmp
pop
jnp
test
push
push
mov
adc
mov
fsub
jmp
and
cmp
outsl
pop
cmp
scas
mov
mov
into
jmp
fstps
aas
push
cmpsl
in
xlat
pop
andb
cmp
sbb
dec
mov
aam
mov
aas
sbb
adc
mov
dec
dec
inc
inc
bound
mov
mov
iret
loope
clc
outsl
sub
push
push
movlps
push
sub
clts
std
imul
faddl
add
repnz
push
adc
sub
and
add
sbb
push
shl
loope
pop
pop
dec
push
sbb
push
shl
out
fistpll
xchg
sbb
lock
adc
sub
pop
cmp
cs
and
sbb
and
mov
repnz
pushf
aad
cld
ficompl
sbb
mov
aas
add
mov
in
lock
adc
sub
sub
adc
sub
insl
cmp
imul
lahf
add
sbb
jl
fistpll
out
inc
lcall
inc
inc
push
inc
inc
push
push
jg
lods
int3
popf
sbb
push
inc
pmullw
bound
test
lret
jg
fcmovu
int3
sbb
clc
idiv
pop
or
in
ljmp
sub
out
jmp
cld
idiv
fidivrs
jne
mov
movsb
in
sti
cli
cli
sti
hlt
sub
mov
pusha
xor
push
cld
in
pop
mov
test
lods
sbb
cmc
fdivr
fbstp
dec
cld
aam
cmp
cmp
sar
fistpll
call
xchg
lret
hlt
hlt
loop
or
fstpt
add
mov
fsubr
out
xlat
sbb
fwait
lahf
ret
jmp
add
xchg
xchg
cltd
mov
call
test
lcall
subb
arpl
pop
mov
fistps
fcmove
fiadds
cmp
repz
mov
and
mov
jmp
or
jmp
repnz
aad
push
push
dec
dec
inc
mov
pop
mov
fadd
in
loope
repnz
in
xor
pop
mov
mov
insl
lcall
icebp
hlt
xor
fstpt
mov
ljmp
lods
pop
shl
out
out
xor
mov
jbe
mov
jmp
icebp
lock
add
scas
mov
loope
repnz
jecxz
sarb
pop
mov
pop
mov
ljmp
sbb
xor
pop
add
inc
and
pop
adc
mov
int
loopne
daa
add
cmp
cmp
jne
js
imul
inc
add
dec
push
dec
fldt
inc
push
nop
addb
inc
test
mov
insb
xchg
inc
mov
dec
xor
fwait
int
dec
xchg
dec
xchg
dec
cltd
dec
push
xor
call
pop
sbb
add
push
mov
aaa
mov
push
pop
add
inc
mov
mov
data16
adc
aam
loopne
shll
in
jp
inc
push
cmpsl
xor
sub
jl
ss
int
fnstcw
xchg
xchg
data16
insb
mov
lea
lea
nop
pop
imul
int
pop
xchg
pop
xchg
pop
pushf
or
dec
stos
lods
mov
cmpsl
ror
mov
lods
mov
mov
cmp
adc
lea
or
cwtl
sub
or
fnstenv
scas
ss
aam
push
or
fcmovne
mov
insb
aaa
or
gs
addr16
push
int
imul
insl
aam
lock
fcom
jo
xlat
jno
jb
out
lock
inc
mov
call
in
mov
out
pop
jns
bnd
add
in
std
or
add
add
hlt
jg
lock
push
idivl
stc
dec
add
mov
mov
les
cmpsl
push
xchg
fidivs
xchg
push
sahf
clc
cmpsb
xchg
add
mov
out
dec
add
jecxz
iret
out
jmp
aam
jnp
add
cld
les
int3
outsl
mov
dec
movsb
lock
in
or
daa
es
loopne
pop
pop
xor
sbb
xchg
scas
add
insb
jg
add
jns
test
test
jne
pop
add
cmp
pusha
stc
add
out
pop
adc
es
pop
jns
and
pop
add
push
xor
and
nop
fistps
adc
push
lea
or
add
pop
in
push
xorb
or
xor
pop
or
pop
aad
add
or
xor
or
subl
jg
pop
push
sub
insl
pop
pop
aas
jg
jbe
mov
pop
pop
push
ret
sbb
aad
and
out
loope
lcall
aas
add
xor
stos
popf
mov
xor
pop
jns
imul
js
das
push
or
or
push
adc
fbstp
add
dec
push
pop
push
mov
dec
dec
cmp
adc
jg
jb
jae
pop
jnp
iret
mov
arpl
lea
add
fnstcw
pop
push
mov
mov
pop
and
sbb
and
ss
pusha
lcall
out
xor
lea
push
daa
add
or
dec
jae
jne
sbb
pop
xchg
mov
jb
sbb
rorl
pop
jb
or
inc
pop
mov
in
sub
sbb
outsl
push
ja
pop
mov
mov
pop
sub
jle
mov
mov
inc
pop
sbb
sbb
pop
mov
gs
ja
inc
or
aaa
mov
pop
mov
sub
fadds
pop
ja
inc
inc
pop
inc
and
jae
outsl
mov
fcomps
pop
inc
aas
outsl
jnp
fs
jnp
pop
or
inc
aas
sub
pop
ds
add
and
popf
ja
mov
mov
jg
jbe
into
popf
ja
cmp
mov
inc
mov
pop
call
mov
fcoms
cmp
in
mov
xchg
dec
lods
nop
ret
pushf
sahf
pushf
fwait
cltd
xchg
xchg
xchg
popl
mov
lahf
cwtl
je
std
xchg
xchg
nop
test
jge
jno
je
pushl
insl
insb
imul
addr16
push
inc
pop
cmp
repnz
push
pop
arpl
pop
push
inc
aaa
scas
dec
sub
lds
pusha
pusha
pop
pop
pop
orb
aas
sub
pop
pop
pop
pop
pop
dec
cmp
xor
pop
pop
pop
pop
pop
pop
dec
xor
add
pop
or
mov
push
cmovle
fisttps
inc
aas
or
adc
adc
adc
sbb
or
add
adc
add
adc
add
call
cld
sbb
add
push
cmp
cwtl
pop
cs
add
and
add
sub
add
fcomi
mov
das
add
sub
ss
dec
cs
push
xor
mov
dec
push
push
inc
ds
inc
outsb
arpl
add
cmp
incl
sbb
push
add
dec
inc
add
push
push
aas
pop
add
dec
jo
xor
add
dec
outsb
add
inc
add
dec
add
inc
add
pop
dec
inc
jo
dec
repz
neg
push
push
push
add
bound
pop
pop
push
popa
pop
pop
es
dec
add
mov
pop
fs
jo
imul
inc
pusha
xchg
pop
jbe
add
adc
in
cs
pop
addr16
imul
pop
push
inc
add
sahf
jl
dec
add
push
js
push
add
push
imul
je
out
divl
into
insl
bound
bound
jp
imul
data16
jne
js
imul
push
jo
jne
mov
jb
outsl
mov
add
ja
mov
ja
es
cmpl
jg
add
mov
addl
test
xchg
xchg
jmp
das
ds
jge
add
lea
cltd
cltd
pop
mov
jle
nop
xchg
push
xchg
xchg
xlat
fisubrl
push
mov
add
mov
popf
nop
pushf
add
lods
xchg
addb
mov
es
mov
mov
mov
xchg
test
push
and
add
lea
lcall
jle
lds
push
test
push
sahf
mov
add
into
add
jmp
outsl
fwait
or
frstor
iret
call
add
in
adc
add
mov
test
cmpsl
scas
add
lods
sahf
cmpsb
lods
mov
mov
lods
push
test
aam
out
imul
in
fnstenv
sahf
push
mov
es
mov
mov
add
mov
test
jg
lea
mov
mov
mov
mov
imul
add
fucomi
pop
ds
leave
mov
mov
dec
outsb
int
mov
push
leave
into
ret
push
mov
mov
aam
add
fadds
rcl
out
loope
cmpsb
add
stc
push
fcmovb
int
adc
cmpsb
mov
iret
xchg
cs
rcr
mov
fcmovbe
fnstenv
aam
fisubl
fcmovu
push
loop
outsb
fwait
int
loop
fsubrp
fisubs
fisubl
ss
loop
repz
jmp
fidivrs
mov
push
in
dec
fsub
cs
in
data16
dec
pop
sti
in
jmp
ss
add
out
in
out
push
int
mov
jmp
repz
outsb
fiaddl
push
sti
fdivr
testb
push
cmp
out
mov
push
push
loopne
idiv
ds
jns
loopne
call
push
repnz
out
mov
jae
cs
cli
push
decl
cli
cmp
call
push
push
push
out
icebp
mov
roll
add
dec
add
and
add
jg
push
int
iret
shrb
rorl
mov
adc
test
mov
out
fldcw
stos
push
stos
shrb
or
scas
add
rol
rol
sbb
jle
add
test
scas
ret
ret
int3
ret
ret
fnstcw
ret
adc
mov
fcomp
fstp
div
hlt
cli
or
sub
ficoms
add
icebp
hlt
sub
pop
pop
and
into
ret
add
sti
inc
into
aad
aad
push
mov
fstpt
dec
or
int3
into
int3
iret
fcomp
mov
pop
divl
mov
inc
insb
js
jae
jo
jns
popa
mov
push
je
sbb
je
aas
out
out
jns
add
jb
pop
pop
pop
pop
pop
fisttpl
fs
pop
sub
xor
dec
mov
fstpt
add
jle
mov
jle
jae
mov
pop
cs
scas
pop
sti
mov
jge
sub
lods
scas
mov
int3
enter
adc
imulb
jns
push
test
xchg
xchg
mov
mov
int
repnz
cld
add
incb
cld
adc
int3
fstpt
or
cld
hlt
stc
repnz
out
xor
or
mov
cld
xchg
xchg
ja
imul
cltd
lods
mov
jle
mov
int
lret
fwait
test
fucomi
jae
dec
add
dec
add
dec
dec
dec
push
dec
dec
dec
push
push
push
int
jg
dec
push
dec
dec
ss
ss
ss
sbb
adc
jbe
push
sbb
sub
sub
sub
sub
dec
dec
dec
push
push
mov
int
pop
pop
imul
insl
addr16
imul
int3
jbe
jbe
jne
jnp
je
jbe
xchg
jg
jge
incl
movsl
xchg
xchg
jnp
jp
cmp
pop
pop
pop
push
add
pop
fdivp
pushl
imul
xor
ds
arpl
in
or
cld
sti
cmp
loope
sti
push
sbb
into
sub
std
mov
call
or
out
out
sarl
ds
cmp
ljmp
xchg
xchg
cltd
mov
mov
jnp
mov
insb
jo
push
insb
enter
inc
push
ss
add
mov
inc
dec
or
and
insb
push
push
sub
sbb
push
xor
xor
push
push
add
gs
push
insl
xchg
pop
xchg
add
pop
and
out
push
addr16
add
loopne
jp
xchg
xchg
xchg
mov
insl
push
je
jbe
xchg
mov
fisubl
mov
mov
mov
leave
ljmp
cs
int
ror
push
mov
cmp
and
and
xor
cld
mov
cmp
rcl
jecxz
ljmp
shl
or
hlt
test
sti
add
push
or
cli
out
aaa
cld
int
cmp
div
imul
ljmp
and
mov
arpl
mov
stc
mov
and
inc
inc
inc
sub
sbb
sub
jg
addr16
sub
xor
add
xor
sub
sbb
cmp
jo
addl
ret
and
adc
sbb
test
add
adc
adc
insl
outsb
and
shlb
or
jle
xchg
xchg
movsb
stc
out
pop
cli
cmpsb
lods
lods
mov
mov
cmpsl
lods
lods
cmpsl
cmpsl
cmpsb
xchg
nop
pusha
cmp
push
lock
jmp
adc
cmp
cmp
fwait
mov
out
test
sarl
jo
sti
clc
out
imul
jmp
repnz
or
or
clc
cld
and
clc
repnz
fcmovnu
push
imul
cmp
out
add
or
add
lret
outsb
sahf
lock
push
or
and
outsl
and
jb
fs
sbb
xor
adc
pop
pop
fsubp
mov
add
inc
inc
dec
lahf
push
pushf
ss
dec
xor
dec
dec
pop
push
ljmp
sbb
insl
dec
loopne
jge
jno
inc
push
push
pop
fs
shlb
and
mov
dec
dec
cmp
pop
xchg
pusha
and
leave
pop
dec
push
cmp
insb
out
adc
adc
cmp
clc
test
cltd
mov
rcr
fucomi
divb
clc
adc
add
idivb
in
hlt
lock
inc
or
cld
xlat
ja
xor
out
out
ljmp
loop
mov
cld
xor
test
push
sub
ret
rorl
inc
inc
lock
enter
aaa
inc
clc
or
loop
or
and
xor
or
xor
sbb
or
or
negb
add
sbb
cmp
xchg
xchg
loopne
fs
and
jbe
in
repnz
dec
fs
jb
jnp
inc
inc
mov
stos
sbb
lahf
int3
es
lods
mov
mov
xchg
imul
js
fwait
aas
addl
mov
out
cmc
mov
popa
jbe
div
es
clc
add
dec
nopl
sti
std
and
push
xor
inc
push
xchg
fcmovbe
enter
mov
mov
or
pop
fwait
mov
movsl
popf
mov
mov
fdivrl
cmc
mov
push
clc
aas
pop
adc
mov
and
dec
or
adc
inc
pop
inc
or
or
inc
inc
pop
je
or
or
cmp
cmp
jg
add
push
push
dec
dec
ss
aaa
dec
dec
dec
inc
pop
pop
cmp
out
inc
jo
jb
xchg
cmp
inc
gs
push
popa
outsb
daa
xchg
ret
leave
adc
jl
shl
xchg
jg
adc
lods
scas
lods
add
sar
xchg
push
xor
daa
cmp
mov
scas
lcall
neg
stc
jno
cmp
push
and
out
dec
push
in
lock
in
lock
xor
push
pusha
or
rorb
repnz
sbb
out
cli
xchg
cltd
mov
mov
lock
dec
stos
leave
add
xor
fsubl
add
add
or
shlb
sbb
push
and
cmp
xchg
movsb
push
imul
push
cs
xchg
int
fcoms
sub
inc
push
inc
mov
adc
pop
sub
rcll
aam
pop
sub
inc
out
jno
pop
adc
add
xor
addr16
ja
xor
pop
mov
sub
ds
dec
jp
xchg
jbe
push
outsl
decl
xlat
aaa
xor
mov
push
sub
sbb
scas
stos
jl
mov
jecxz
in
xor
adc
cli
mov
hlt
or
call
sbb
adc
cmc
pop
idiv
jecxz
ror
mov
cmpsb
xchg
jb
das
sbb
jbe
mov
dec
push
push
mov
mov
stos
movsl
pop
fidivrs
pop
dec
push
sbb
inc
inc
sub
adc
cmp
inc
dec
dec
xor
in
aas
out
sbb
mov
sub
cmp
ss
xchg
pushl
mov
xor
cmpb
mov
and
outsb
dec
xor
js
jo
dec
sbb
or
pop
cmp
ret
ficompl
cs
adc
dec
fidivrs
movsl
mov
inc
icebp
dec
das
pop
pop
dec
cmp
imull
inc
je
pushf
call
lret
fstp
jecxz
cmp
and
fidivl
loopne
jb
inc
inc
sbb
jnp
shrl
xor
out
add
out
int
ljmp
mov
xor
in
cmp
addr16
push
adc
or
shll
adc
call
repnz
inc
mov
inc
jo
shlb
push
inc
xor
out
ljmp
cmp
add
ss
loop
dec
inc
sub
sbb
sbb
sbb
aaa
in
imul
adc
ficoml
sub
and
ss
dec
dec
dec
pop
lods
xor
or
pop
dec
mov
andb
add
mov
je
outsb
shr
jbe
add
push
pop
mov
cmp
addr16
pop
adc
jmp
xchg
addb
jnp
cmp
enter
call
add
int
fnstenv
push
and
fstpl
add
fcmovnu
lret
rcl
fldz
and
and
dec
dec
mov
int
xor
mov
cmp
push
scas
mov
sub
jl
shl
stos
or
insb
nop/reserved
sbb
sub
sbb
inc
fbstp
xor
inc
pop
sbb
addl
jmp
sub
fdiv
fcoms
ss
dec
push
dec
inc
xor
and
scas
or
or
push
xor
adc
adc
scas
push
cmp
pop
pop
or
xchg
pop
aaa
or
or
scas
jg
mov
push
dec
dec
push
mov
or
loopne
mov
jnp
outsl
push
xor
mov
or
mov
xchg
cmpsb
cltd
push
lock
jle
roll
add
out
repz
cld
rcl
ror
leave
mov
add
int
fstps
inc
cltd
mov
cmc
jnp
lret
es
int
xchg
fsubl
sbb
daa
bound
stos
cli
movsl
push
cmpl
push
xchg
push
iret
jae
pop
inc
inc
add
popa
inc
add
sub
outsb
fisttps
or
xor
mov
or
mov
jg
mov
mov
push
or
mov
fiaddl
aas
mov
dec
ja
push
push
or
add
adc
fiadds
dec
xor
ljmp
push
push
adc
pop
dec
xor
loop
sbb
adc
push
gs
je
jg
jnp
push
loopne
sbb
and
jbe
pusha
push
bound
shll
or
or
aad
lods
sbb
add
out
testl
cwtl
xchg
cwtl
add
lret
push
xlat
jo
imul
cmp
rol
std
les
pop
outsl
mov
sbb
cmp
lods
scas
adc
push
iret
pop
push
pusha
fildl
inc
add
or
inc
cwtl
push
or
or
push
cmp
cli
sbb
or
pop
xchg
int
push
add
adc
fbld
inc
pop
push
mov
sbb
xchg
dec
pop
cwtl
mov
push
xor
adc
add
ret
pop
ja
push
dec
xor
push
insb
dec
gs
faddl
xor
add
aaa
dec
out
hlt
mov
jle
insl
push
sub
cmp
outsb
xchg
ja
xor
mov
ds
ja
les
mov
mov
int3
aam
fstp
lret
cwtl
imul
cmp
pusha
add
iret
lock
push
andl
scas
fimull
mov
add
fdivrs
and
ret
push
orl
and
je
cld
or
arpl
jle
insl
xor
das
push
pop
inc
add
xor
dec
mov
inc
bound
fildl
or
leave
mov
add
add
or
mov
cld
cmc
icebp
add
inc
dec
push
push
insb
push
dec
inc
into
and
in
std
jg
loopne
push
push
in
out
dec
dec
sub
andl
mov
push
or
sbb
fisttpll
push
jle
pop
pop
pop
cli
push
dec
and
clc
mov
cmp
adc
push
jae
and
mov
imul
adc
scas
pop
xchg
imul
or
push
es
iret
pop
cld
xchg
push
aam
enter
sbb
and
add
pop
mov
test
push
and
clc
and
scas
xchg
movsb
and
movsl
pop
jbe
ret
push
call
mov
jle
or
mull
jns
xor
push
push
inc
add
sbb
sbb
inc
sub
test
or
daa
add
sub
or
or
push
and
std
fcmovne
data16
dec
inc
inc
sub
in
pushf
and
inc
pop
push
jne
pop
mov
dec
xor
cmp
call
sub
inc
adc
add
pop
or
xchg
jbe
mov
insb
dec
jno
imul
jg
xor
orl
popa
mov
and
adc
add
cs
xchg
movb
testl
add
mov
cmp
cmpl
clc
and
femms
push
push
ds
stos
inc
cld
xor
es
add
mov
nop
ds
fistps
movsl
outsl
stos
scas
stos
lods
stos
lods
stos
test
ret
inc
pop
insl
or
jns
vmread
inc
add
hlt
rcll
pushf
inc
dec
pop
cmp
sbb
adc
or
nop
popf
andb
sahf
and
mov
push
sub
or
mov
adc
mov
dec
inc
sbb
sub
mov
or
inc
add
pop
mov
mov
ret
sbb
insb
pop
push
add
aaa
sbb
loope
es
mov
and
add
or
cmpl
and
push
jnp
mov
cmp
adcb
ret
jnp
mov
adc
sbb
mov
mov
js
and
mov
inc
scas
imul
ja
mov
in
adc
sbb
pusha
sbb
or
inc
xchg
sbb
sbb
cmp
push
pop
pop
or
add
sbb
add
sub
pop
push
sbb
or
mov
int
sub
mov
or
mov
inc
or
or
sub
je
ret
inc
inc
push
sahf
cmc
mov
sub
sbb
outsl
pop
movsl
or
inc
xor
or
clc
mov
push
dec
pop
sbb
sub
sbb
add
jno
push
xor
loope
xor
cmp
or
popa
jg
jae
cmp
xchg
scas
xchg
sbb
outsl
imul
scas
mov
fcoms
lea
popa
shll
ljmp
sbb
movsl
sbb
pop
or
movsl
ds
stos
nopl
or
adc
loope
adc
popa
jae
cmp
add
add
sbb
adc
or
xchg
sbb
or
or
iret
movl
or
adc
push
adc
mov
xlat
out
inc
inc
inc
add
outsl
sahf
lret
mov
ret
sarb
inc
adc
sub
lahf
in
outsl
lock
sub
je
sub
or
lcall
lahf
mov
adc
cs
pop
pop
jp
mov
insb
pop
and
sbb
mov
es
adc
jg
pop
aas
clc
pop
gs
mov
xor
xor
xor
dec
add
cmp
aaa
mov
lock
or
shrl
xor
movsb
scas
pusha
clc
cwtl
cltd
jo
sbb
shll
mov
push
push
jno
adc
sar
imul
or
adc
or
call
sbb
mov
std
stos
popf
mov
pusha
popf
adcl
sbbl
xor
mov
or
int
incl
sbb
and
sub
and
push
adc
push
clc
pop
mov
or
lret
jmp
push
xor
pop
xor
xor
shll
sub
pop
dec
sub
xchg
and
fcomi
add
test
imul
adc
mov
or
pop
and
imul
pushf
mov
lods
psadbw
iret
iret
fadd
ja
mov
jecxz
decb
add
scas
test
xor
shl
loope
and
push
ror
pop
jge
jnp
inc
das
sbb
push
leave
outsb
jp
adc
mov
sub
mov
sbb
mov
fdivr
adc
push
mov
mov
popf
test
push
test
cmp
push
inc
add
cmp
xchg
add
mov
xor
scas
popa
push
push
das
dec
mov
pop
jno
lcall
js
js
dec
sbb
lea
xor
and
lock
clc
add
pop
or
loope
add
mov
xor
fistpll
cmp
xor
ds
cmp
lods
cmp
repz
push
fdivrs
jne
aam
add
sub
fstpt
shrl
test
jle
movups
inc
jg
inc
jmp
adc
push
sub
ljmp
sbb
imul
add
or
mov
das
rcrb
sbb
xor
adcl
pushf
jle,pn
xlat
jg
and
xchg
pop
inc
sbb
or
mov
inc
pop
jmp
cmp
cmpb
sub
jmp
push
aaa
xor
inc
cmp
das
clc
rcrl
push
push
pop
xor
and
lcall
or
scas
add
ret
testb
push
cmp
stc
lcall
mov
popf
push
aaa
cltd
repnz
xchg
cmp
in
push
mov
push
xor
in
lock
ret
mov
scas
adc
int
mov
jno
inc
inc
les
hlt
or
loopne
sbb
les
push
or
mov
cmpsb
or
pop
sub
adc
sub
mov
cs
call
addr16
sbb
xor
cmp
pop
ret
mov
push
xor
and
sbb
mov
sub
pop
pop
dec
cs
cmc
call
or
clc
sbbl
gs
and
xor
lock
add
add
aas
rclb
fimuls
lcall
xchg
scas
mov
arpl
mov
lock
call
adc
notb
fmulp
push
mov
or
xor
or
mov
xchg
movsl
mov
or
push
push
iret
pop
push
lret
and
push
inc
inc
inc
inc
inc
cmp
push
or
push
cwtl
popa
pop
push
mov
xor
mov
xchg
lcall
scas
rcll
lcall
sub
clc
mov
mov
sbb
push
ss
dec
lea
add
push
mov
mov
gs
dec
sub
call
js
insl
push
cmpsb
xor
aas
mov
adc
or
push
enter
mov
pop
call
insb
stos
xchg
push
mov
in
mov
pushl
cmp
cmp
test
pushf
fucomi
xchg
nop
push
fsubrl
add
jp
clc
sbb
std
int
pop
mov
push
or
lret
sbbl
xchg
or
adc
movd
pop
cmp
and
dec
outsl
js
push
mov
sub
adc
add
fwait
and
scas
inc
inc
sub
adc
or
sub
xor
jg
dec
inc
cs
adc
daa
mov
push
push
push
mov
adc
pop
sbb
jp
pop
or
push
gs
dec
cmp
loopne,pn
sahf
cs
fs
jle
jb
fistpll
mov
inc
test
and
fmull
mov
scas
add
int3
lret
call
sub
mov
xor
mov
imul
stc
mov
xchg
xchg
fprem
std
fsubp
stc
add
fst
cwtl
ds
movsb
aas
jg
push
or
aam
pop
lcall
mov
mov
fimuls
ret
movups
jnp
iret
jns
cmp
pop
push
push
push
test
mov
inc
shrb
sbb
orl
movsb
and
cmp
cmp
or
sbb
sub
call
and
mov
cmp
or
push
or
xor
cmp
addb
test
and
jo
push
aaa
cmp
adc
adc
jp
jbe
insl
dec
and
ret
jg
adc
fwait
push
cmc
mov
aas
pop
outsl
lods
or
xor
mov
jb
in
jmp
iret
mov
fmul
adc
in
in
stos
lret
fstp
fildl
lret
xor
pushl
mov
cmpsb
fxtract
std
push
sti
js
or
push
xor
movsb
lcall
add
int3
cwtl
enter
xorl
add
mov
xor
push
scas
fisubrl
push
mov
push
sub
or
fwait
pushf
adc
inc
es
xor
adc
mov
int3
add
or
mov
add
aaa
mov
test
dec
dec
dec
sub
in
xchg
and
dec
ss
push
sub
adc
daa
and
jle
push
or
xor
pushf
test
idivb
ja
push
aas
jmp
push
mov
js
hlt
mov
es
jg
or
or
leave
enter
rcr
aam
clc
decl
and
mov
lock
fnstsw
popf
loopne
das
in
shlb
ret
adc
sbb
rcrl
push
movsb
mov
sahf
jmp
mov
lret
and
push
jb
mov
jno
jnp
add
lods
and
push
fidivs
lock
pop
jno
xor
movsb
mov
adc
sbb
lock
mov
mov
push
sub
pop
inc
ss
mov
fisubl
cmp
push
insb
jg
xor
cmc
mov
xor
dec
xor
sbb
mov
fwait
cmp
and
and
or
ret
shrb
pop
xchg
add
push
cmp
lock
icebp
stos
sub
push
xchg
ja
pop
unpcklps
fcom
fcom
inc
pushl
rcl
mov
cmc
xchg
out
lock
mov
or
mov
or
call
mov
or
mov
dec
ret
pop
mov
daa
nop
cwtl
cmpb
push
mov
lret
pop
add
les
ret
mov
pop
jge
push
add
cmc
das
sbb
sub
cmp
jmp
cmp
sbb
fildl
in
xor
cmp
add
adc
ja
sbbb
sbb
scas
push
pop
pop
push
xor
fwait
loop
sahf
mov
dec
das
sbb
mov
addb
or
pop
fiaddl
push
aaa
das
jbe
pushf
sbb
push
jp
xchg
jnp
push
adc
cld
mov
loopne
loop
out
cmc
in
test
mov
jo
movsb
add
int
fcos
jbe
cmpsl
fsts
jecxz
notb
fucomi
out
mov
std
mov
ljmp
aam
xchg
xchg
adc
lret
loope
xlat
cs
movsb
fwait
daa
or
mov
mov
pop
push
lret
data16
mov
mov
sub
scas
pop
push
dec
push
dec
inc
dec
sbb
xor
dec
cli
jmp
dec
push
push
dec
sub
loop
lcall
add
xor
or
push
add
sbb
xor
insl
adc
adc
pop
pop
sbb
push
ss
push
loopne
mov
ds
clc
push
xchg
lahf
mov
shlb
popa
aaa
cmpl
fwait
cmp
mov
push
popf
xchg
outsl
dec
xchg
xchg
push
lcall
lods
das
aam
or
jg
push
add
in
mov
mov
fcmovnu
mov
imul
mov
push
adc
add
pop
lret
movsb
incb
mov
ljmp
in
or
cltd
mov
int
mov
ss
sbb
mov
push
fimuls
insb
mov
dec
mov
test
test
enter
adc
dec
outsl
js
mov
or
or
loop
sbbb
or
cmc
cmp
and
push
repnz
or
dec
and
or
adc
dec
push
dec
pop
dec
xor
mov
call
cmp
pop
cmp
je
push
dec
and
outsl
mov
jmp
mov
or
cmpsb
addb
call
mov
adc
mov
pop
xlat
fstp
insb
out
out
mov
scas
jb
xchg
pop
clc
popf
out
stc
and
fdivr
or
pop
aam
repnz
mov
fwait
pop
xchg
fcmove
mov
loopne
popf
and
cwtl
mov
je
lret
adc
add
enter
inc
loopne
mov
pop
add
das
adc
jae
int3
adc
mov
cs
add
decl
and
orb
push
fs
push
xor
out
out
push
add
push
pop
add
add
inc
rolb
lods
mov
scas
xor
xchg
call
popa
add
int3
outsl
pop
adc
je
pop
pusha
xor
clc
cmp
ja
jne
popa
das
sbb
push
lods
sbb
mov
cltd
and
mov
dec
orl
xor
shlb
inc
adcb
add
mov
push
cmpsb
cwtl
push
jmp
imul
loopne
or
cmp
icebp
fstp
xor
pop
push
in
xor
push
and
incl
and
cwtl
push
cmp
rcl
xlat
rcl
adc
jecxz
into
leave
adc
mov
stos
popa
clc
jg
dec
xor
das
test
pop
jl
push
test
in
shll
push
cli
push
cmpl
or
shlb
fnstsw
test
jecxz
mov
pop
pop
pop
add
ret
add
movaps
add
or
ret
sbb
test
outsl
push
clc
fwait
decb
xor
outsl
addr16
dec
jbe
aas
addr16
and
addb
imul
lea
stos
mov
sahf
or
sub
test
or
adc
push
or
mov
xor
and
lcall
je
cli
or
xor
jg
fmul
mov
xchg
ds
orl
data16
out
adc
mov
xchg
lea
add
jmp
rcr
sarb
sarb
into
jo
scas
dec
mov
and
imul
sarb
push
push
add
sbb
xor
sub
adc
mov
cld
cmpsb
arpl
sbb
push
adc
orl
gs
popa
adc
rolb
fiaddl
cmpb
xor
add
fiadds
or
scas
loope
adc
push
push
data16
ja
xchg
add
xchg
jbe
push
xchg
incl
orl
das
and
roll
loopne
cmp
mov
and
push
jl
cltd
xor
cmp
mov
shrb
ret
rcl
sbb
or
fidivl
shr
mov
mov
hlt
sbb
adc
push
cmp
cmp
xor
xchg
popa
push
in
fwait
push
and
loop
adc
leave
adc
icebp
negb
mov
mov
lock
notb
pop
ja
adc
in
test
lret
ss
dec
repnz
ret
cmpsb
fstl
add
lret
dec
mov
or
sbb
fs
and
dec
fs
inc
push
test
outsb
dec
xor
or
jb
cmc
jbe
push
adc
sbb
ljmp
add
arpl
cmp
mov
add
lcall
mov
xchg
push
and
lahf
test
push
push
cltd
hlt
divb
loope
loope
in
sub
in
cmc
lock
mov
popf
in
mov
xchg
pop
mov
filds
xchg
test
movsl
test
mov
cmp
mov
fcmovnu
or
ds
mov
insb
clc
lock
loope
adc
rol
mov
les
into
icebp
movups
je
lcall
sbb
dec
dec
aaa
sub
and
incb
mov
push
adc
loope
ss
lret
cmpl
cmp
pop
and
cmp
cmp
adc
jb
jb
outsl
aam
lahf
cmpsb
je
jp
push
sbb
pop
and
xchg
xchg
xchg
cmpsb
xchg
fbstp
lret
outsl
loopne
mov
fbld
in
and
or
nop
xchg
cltd
or
push
and
daa
lahf
in
push
or
or
or
adc
out
cmpsb
mov
ljmp
loop
pop
sbb
xchg
imul
lcall
out
loop
jmp
lret
lret
mov
and
and
mov
or
shl
add
push
dec
xor
adc
rcrb
mov
mov
hlt
pushf
push
lds
adc
pushl
and
sub
adc
and
xchg
add
dec
in
and
std
mov
or
dec
adc
call
in
outsl
ss
mov
imul
add
xchg
jne
sub
adc
xchg
push
add
sbb
xor
and
loop
push
es
cmp
push
arpl
adc
mov
mov
mov
sbb
loop
or
in
add
cmc
push
shll
loopne
and
fwait
bound
repnz
imul
mov
pop
mov
inc
push
sub
sub
cmp
push
xor
inc
inc
movsb
fwait
out
or
roll
add
push
lods
push
sub
imul
rclb
jns
pop
or
fists
push
adc
and
sbb
adc
ja
mov
or
push
pop
pop
adc
mov
repnz
dec
or
gs
pop
addb
mov
mov
add
adc
pop
repz
sub
xchg
or
movsb
add
ret
sbb
or
xchg
lock
jg
pusha
nop
mov
nop
arpl
mov
mov
mov
lahf
mov
adc
subl
adc
or
in
adc
push
fcmovne
cwtl
pusha
fwait
loop
cmc
mov
stc
std
or
sbb
adc
push
lret
mov
cltd
cwtl
mov
push
or
orb
daa
xchg
shl
stos
or
shlb
adc
rolb
mov
jle
imul
pop
sbb
jg
mov
add
xchg
mov
in
sbb
cmp
aaa
push
and
mov
lds
adc
mov
mov
xor
outsb
push
xchg
in
pusha
cmp
push
or
or
xchg
xchg
addr16
cmpsb
ret
add
sub
arpl
xchg
cmpsl
movsb
loop
mov
adc
test
lcall
xchg
clc
sahf
mov
xorb
or
jmp
push
adc
fnstenv
loope
cld
nop
aas
hlt
test
add
call
mov
lods
stc
repnz
out
fxch
mov
mov
jp
adc
mov
mov
cwtl
rcr
in
jl
jp
loop
rcll
loopne
jl
js
adc
pop
jg
add
mov
xor
mov
push
call
test
sbb
daa
call
andb
and
push
push
ret
and
pushf
fwait
es
xchg
inc
outsb
sbb
sbb
pop
add
movsb
fcomi
outsl
push
or
mov
mov
push
mov
push
nop
nop
outsw
mov
test
pushf
mov
int3
rorl
sub
es
xchg
jmp
out
push
out
fistpl
insb
jl
push
in
aaa
mov
addr16
cld
sbb
or
cltd
lock
movsb
imul
iret
lcall
in
sbb
cmp
loope
daa
mov
xor
repnz
pop
data16
pop
outsb
adc
pop
popa
dec
aaa
dec
aaa
ss
aaa
xor
add
sub
inc
test
data16
add
out
cmp
outsb
sub
add
or
test
icebp
push
push
pusha
popa
sbb
add
cmp
or
popl
xchg
xchg
push
adc
mov
je
sarb
dec
mov
add
xchg
sub
fdivs
pop
push
je
or
out
loope
sbb
in
out
push
and
push
call
in
sahf
test
repz
incb
std
ret
push
test
repnz
mov
mov
jo
pop
inc
movsb
mov
xlat
ja
mov
fisttpl
and
cmp
inc
nop
cli
cltd
setae
push
cmpsb
xor
mov
pop
data16
add
subb
push
push
pop
adc
pop
imul
sub
sbb
data16
sbb
imul
add
outsb
lock
sti
ljmp
xchg
and
pop
push
bndldx
add
add
adc
test
rcll
mov
adc
add
push
mov
sbb
xchg
or
aaa
push
mov
or
in
mov
push
or
sbb
mov
inc
imul
mov
push
push
cld
or
pop
ljmp
fs
rcr
cwtl
outsl
sbb
add
lret
sbb
ljmp
push
mov
sahf
lods
fidivl
push
cmp
nop
clc
lods
bndstx
mov
or
adc
clc
or
shl
mov
or
ljmp
adc
addr16
jle
repz
jne
xor
add
jns
jnp
push
add
jbe
xchg
clc
jmp
and
sub
mov
or
bound
subb
jo
xor
mov
out
shr
cmpsl
sub
in
movl
pop
push
pusha
shrl
clc
sbb
cltd
add
and
js
popf
bound
addb
xor
in
mov
adc
jle
dec
push
hlt
mov
shll
sbb
stos
imul
cmp
cld
out
imul
fmuls
xchg
inc
outsb
insl
or
scas
outsl
mov
outsl
outsl
clc
add
xchg
xchg
ret
insl
jb
adc
adc
fnstenv
mov
jnp
cmp
pop
mov
pop
or
add
ja
xchg
add
add
popa
jno
sbb
sub
or
ljmp
mov
arpl
sub
cmp
add
out
cmp
ds
inc
inc
push
jle
or
jmp
iret
int3
jo
adc
or
out
xchg
cmp
cli
pop
sbb
imul
icebp
stos
mov
mov
push
movsl
add
inc
dec
xchg
lods
movsl
cwtl
mov
push
stos
add
stos
les
mov
xorb
les
cwtl
mov
sub
mov
add
rorb
mov
inc
loope
push
sub
jb
mov
adc
jmp
out
negl
incl
pop
popa
or
sti
std
or
or
dec
cmpsl
mov
xor
pop
cmp
in
jnp
and
and
out
mov
mov
xor
xor
push
xor
or
psubusw
out
xor
add
aaa
dec
ss
dec
or
push
mov
aaa
in
pop
dec
push
in
xlat
int3
dec
push
add
add
dec
xor
mov
push
sub
push
push
push
push
add
iret
int3
push
inc
add
pusha
pusha
jmp
fsts
cmp
or
pusha
add
arpl
add
add
popf
jnp
imul
imul
das
mov
add
adc
popf
push
enter
or
bound
mov
add
xor
pop
into
adc
sub
ret
adc
pop
push
adc
push
out
lea
push
adc
push
add
xor
mov
pop
push
sbb
jmp
scas
add
or
push
add
fbstp
jl
and
sub
sub
add
add
xor
mov
or
xor
xor
ds
pop
sahf
aaa
dec
add
push
jbe
pop
push
add
mov
fcoml
xor
lret
mov
iret
into
scas
mov
add
fmuls
xor
int
or
fadds
add
mov
fdiv
or
repnz
jae
fistpll
dec
or
and
adc
add
inc
adc
test
mov
add
push
sbb
mov
xor
cmpsl
pop
add
insb
ss
insl
or
push
or
ss
cmp
fstpt
inc
push
sub
int
fldcw
xor
push
cmp
lcall
push
dec
push
add
dec
data16
insl
mov
dec
push
push
push
jo
ja
cmpsb
jge
add
insb
add
push
popa
jge
fs
je
pusha
insb
ss
in
jns
inc
add
dec
add
push
add
data16
add
add
popa
add
data16
add
je
push
repz
xchg
add
js
jp
add
jl
repz
fwait
add
mov
mov
int
mov
mov
cmp
roll
cmp
je
lret
add
incb
mov
fbld
push
xchg
xchg
imull
add
xchg
xlat
mov
add
movsl
iret
add
lods
add
fldcw
mov
mov
lret
pusha
out
inc
fiaddl
into
int3
mov
mov
and
add
pop
imul
add
outsl
enter
mov
insb
ss
add
add
add
xor
xor
add
rol
and
das
loopne
ss
out
pushf
dec
pop
in
fcmovnu
fldl
out
dec
fmul
es
es
mov
jmp
cmp
xor
outsl
icebp
add
repnz
popf
dec
js
jbe
inc
sub
ja
or
aad
test
xchg
pop
xor
jnp
and
pop
adc
add
fisubrl
dec
add
pop
xor
xorl
inc
dec
imul
dec
inc
das
das
iret
shlb
inc
add
dec
xchg
dec
jg
mov
imul
push
xchg
sbb
inc
cmp
es
pop
testb
add
dec
nop
ja
jl
je
jl
or
addl
adcb
jge
jl
add
pop
je
fs
push
and
jge
adc
filds
dec
xchg
test
jl
jp
lcall
push
pop
cmpl
js
jle
xor
mov
mov
cmpb
das
sub
pop
pop
pop
pop
popl
ja
pop
jbe
das
js
xchg
addb
sub
xchg
jg
xor
pop
and
xor
ja
test
cmp
cld
sub
bound
jle
adc
outsl
add
pop
ja
addb
xchg
cs
call
jl
cmpb
ja
jl
adc
loopne
cwtl
loopne
xchg
mov
jg
cmpl
adc
fists
out
imul
push
and
in
fisttpl
imul
ja
inc
adc
add
jg
jb
imul
imul
sub
adc
ljmp
push
dec
dec
push
pop
pop
cmp
pop
dec
and
push
call
adc
dec
push
jbe
dec
daa
push
sbbl
sbb
bound
pop
pop
sti
lcall
jne
pop
inc
adc
jl
dec
push
push
mov
jg
imulb
xor
pop
sbb
pop
mov
outsl
and
xor
mov
sarl
dec
or
xchg
mov
inc
push
push
adc
call
and
nop
pop
test
orl
popa
xchg
jle
push
push
or
jg
or
addb
mov
es
push
pop
ja
nop
lea
mov
ds
imul
jb
or
fcomi
jmp
xorps
adc
outsb
jge
mov
ja
sbb
and
mov
mov
dec
outsb
jl
xor
push
cmp
insb
jnp
lret
xor
mov
jp
or
mov
sbb
mov
or
jno
ss
imul
gs
push
pop
gs
pop
repz
mov
push
daa
push
xchg
adc
push
push
imul
push
mov
and
pop
inc
cmp
sub
shrb
push
cmp
jl
scas
inc
xor
mov
clc
fistps
jle
mov
push
sub
cwtl
addb
inc
fildl
ja
je
jle
sbbl
test
mov
jg
jae
cmpsb
jns
je
pop
js
lcall
andl
mov
push
dec
jl
cli
je
or
dec
pop
dec
std
cli
scas
jae
cmpsb
bound
jge
inc
push
cmp
add
mov
imull
jle
push
mov
mov
pop
lret
mov
ja
jb
add
jle
subl
mov
and
mov
pop
jge
rcrl
push
cs
lret
xchg
mov
ret
lcall
jle
fsubrl
outsb
sub
jge
or
cmp
jo
jg
pop
pushf
lds
sbb
sub
push
pop
popa
jb
xchg
jo
or
pop
ja
cmp
int
mulb
outsb
mov
lods
loopne
jp
and
mov
mov
test
insb
bswap
inc
inc
pop
das
adc
icebp
mov
and
xor
add
jo
adc
ds
incl
sub
xor
mov
sbb
mov
jbe
and
mov
movsl
adc
mov
das
aas
mov
push
add
pop
push
jbe
mov
ja,pt
push
mov
sti
xor
xor
sub
push
ja
xchg
pop
pop
push
aas
xor
xlat
bound
pop
push
ds
aad
push
aas
mov
fnsave
call
in
fistpl
xchg
add
xchg
ja
adcb
js
adc
clc
mov
xchg
mov
dec
mov
push
inc
mov
fdivrl
jmp
mov
mov
inc
or
mov
orl
cs
sti
or
std
mov
or
add
sub
or
fidivs
adc
sbb
adc
jb
push
aaa
pop
or
and
popf
push
xor
insb
mov
dec
and
add
push
or
pop
add
shlb
fwait
or
adc
pop
add
insw
mov
push
adc
verw
push
js
xor
sbb
sub
test
inc
inc
es
dec
xor
add
js
sbb
dec
inc
cmp
fwait
mov
inc
pop
fidivs
fsubrs
cs
push
add
cmp
push
imul
jnp
sbb
add
dec
pop
add
or
pop
add
cmpsb
cmp
fs
push
pop
fiaddl
cmp
mov
dec
bound
push
sbb
push
js
testb
pop
jae
pop
jb
ss
popa
jnp,pt
data16
mov
mov
add
arpl
imul
imul
je
push
mov
out
jne
push
push
xchg
pop
add
add
push
mov
sbb
xchg
cmp
xchg
fldt
inc
push
mov
ss
xor
xchg
push
add
add
test
push
mov
insl
stos
add
in
outsb
out
std
ja
mov
cs
int3
pop
and
fsubrs
mov
in
pushw
xchg
push
or
outsl
mov
fwait
das
subb
lea
xchg
push
push
sbbl
xchg
fists
insb
in
incl
xchg
xchg
pop
fiadds
add
mov
insb
fistl
push
mov
mov
jecxz
jg
inc
cld
inc
mov
sbb
sbb
xor
add
rorb
insl
xchg
lds
out
jne
or
xchg
jge
push
sar
lods
xchg
jge
inc
insl
stos
add
push
inc
les
dec
pop
andb
push
mov
out
mov
outsb
adc
push
add
andb
pushf
repnz
push
adc
mov
in
push
mov
adc
stos
mov
xchg
mov
cwtl
mov
stc
adc
stos
add
mov
mov
ficomps
out
outsb
mov
add
inc
jo
rcrb
push
sahf
nop
je
mov
push
inc
lods
sahf
and
cwtl
fbstp
adc
ds
pushf
push
inc
mov
add
jbe
lock
lods
add
adc
mov
mov
rolb
push
mov
lods
roll
mov
xlat
mov
xchg
mov
push
or
dec
mov
add
ror
mov
push
jle
iret
add
push
add
leave
pop
rcr
adc
insb
mov
ss
int3
cmpsb
in
lret
rcl
jbe
fisttpll
jge
fbld
aad
arpl
lretw
mov
call
pop
in
pushf
stos
push
test
xorb
mov
or
es
mov
mov
mov
push
xchg
mov
out
jle
mov
movsb
test
lret
mov
mov
insb
fcmovne
scas
sti
rorl
mov
divb
push
lcall
aam
inc
test
inc
out
int
xor
jmp
data16
imul
push
cld
andb
mov
push
fwait
pop
mov
out
xchg
int3
cmpsb
mov
xlat
mov
repz
mov
es
mov
mov
in
mov
jle
xlat
enter
push
loope
loopne
jmp
mov
inc
out
dec
out
testb
sti
push
out
es
cli
jbe
inc
push
add
rclb
ret
icebp
dec
adc
es
ret
cmpsb
in
add
sbb
aaa
bound
or
bound
push
push
add
aas
rol
pop
pop
jno
mov
sti
jle
mov
out
mov
pop
sbb
push
push
and
jg
adc
mov
fneni(8087
fnstsw
lret
jl
sub
call
aaa
sbb
and
fwait
lret
fcmovu
fcomip
add
lcall
mov
pop
cld
fistps
mov
idiv
div
out
jmp
dec
sub
and
jg
mov
mov
in
out
jle
cmc
call
pop
imul
mov
je
movsl
mov
or
hlt
sti
mov
ds
ret
mov
pop
mov
cld
out
or
and
mov
lret
repz
mul
jbe
mov
filds
dec
rcrl
hlt
fdivrl
aas
mov
mov
or
icebp
neg
or
xorl
pop
jecxz
div
cld
cmc
loop
dec
xchg
movsb
mov
or
or
ret
rorb
aam
or
cmp
mov
ja
adc
movsb
inc
inc
dec
dec
adc
or
or
xor
outsb
ret
mov
call
dec
push
push
push
dec
dec
inc
inc
outsb
dec
inc
adc
iret
add
stos
test
aas
jae
mov
addr16
push
push
popa
popa
push
push
dec
sbb
sbb
es
repz
dec
pop
xchg
imul
cmp
pop
pop
pop
xchg
push
push
push
sbb
add
aaa
sub
das
pop
and
xor
fists
or
mov
aas
add
cld
enter
mov
or
imul
mov
pusha
pop
pop
out
or
add
ds
fistps
jo
test
and
xchg
pop
std
sbb
mov
int
mov
jge
mov
mov
fistpl
in
or
jmp
or
stos
inc
sti
jmp
pop
push
mov
in
cld
sub
stos
and
out
mov
fidivrs
test
rcr
lret
ret
pop
pop
dec
xchg
jmp
ds
xlat
mov
pop
sahf
cwtl
push
fneni(8087
loope
int
jg
xor
adcb
sti
mov
mov
add
jge
loopne
frstor
imul
mov
mov
add
sti
or
mov
test
jmp
rcrl
mov
mov
mov
cmp
pushf
das
cmpsl
add
cwtl
sarl
repnz
xchg
and
std
mov
pop
add
xor
xor
aas
push
pop
scas
adc
adc
sub
loope
dec
sahf
inc
inc
loopne
or
push
inc
inc
add
mov
clc
filds
push
push
add
push
add
repz
mov
push
mov
repz
sub
insb
ss
mov
ds
and
mov
push
mov
fildl
pop
mov
cmpsl
insl
cs
mov
dec
pop
ret
add
add
rcll
ret
push
pop
mov
sarb
les
dec
icebp
push
insb
ss
int
repnz
repz
hlt
pop
cmc
pop
imul
stc
insl
data16
cld
add
es
push
cld
add
imul
mov
lret
jb
jbe
push
jo
push
scas
fnstcw
lret
push
jae
jne
ja
jne
ss
jle,pt
repz
jp
jp
ss
int
jl
jge
jg
jg
popa
negl
gs
push
outsb
cli
jno
mov
ja
xchg
lea
nop
ja
add
inc
les
xchg
out
stc
insb
dec
add
jmp
testb
mov
pushf
addb
mov
add
inc
push
cli
mov
mov
cmpsl
mov
xchg
test
xchg
add
push
mov
xchg
add
xchg
fwait
add
xchg
pushf
add
add
mov
or
mov
push
iret
push
sar
test
push
insb
ss
insl
test
push
xchg
xchg
mov
mov
int
mov
mov
mov
mov
xchg
mov
pop
xchg
rolb
xchg
aad
xchg
xlat
xchg
push
xchg
xlat
mov
fldt
fcoms
ss
fcomps
cltd
mov
pushf
fistpl
push
lcall
xchg
push
cltd
cltd
add
aam
cmpsb
aad
cmpsb
out
imul
cmpsb
stos
lods
movsl
movsl
divl
movsl
lahf
ss
insl
xor
jecxz
in
in
insb
mov
mov
loop
ds
movb
lds
xlat
lahf
mov
es
aad
ret
call
int3
ret
jae
xor
leave
inc
into
fcmovbe
mov
out
filds
fidivs
add
fsubrp
push
es
push
test
repnz
clc
add
push
stc
cli
fadds
sub
add
or
xlat
movsb
jb
jno
bound
testb
lret
pop
and
mov
movsl
fbstp
pop
mov
dec
or
add
mov
test
pop
sbb
or
push
das
xor
xor
aaa
xor
jb
jne
orb
add
pop
inc
lds
jbe
jp
jle
in
mov
xor
mov
sbb
fwait
add
cmpsl
test
ds
mov
mov
mov
fwait
inc
inc
dec
incl
ja
jnp
jg
test
mov
cmpb
or
mov
cmpl
ds
xchg
sbb
mov
add
popa
test
sahf
mov
add
pop
imul
fwait
cmp
mov
cmpsl
mov
pop
mov
jle
inc
sti
outsb
imul
pop
aas
popa
jg
mov
mov
add
pop
mov
cmp
stos
addb
leave
lret
insl
push
and
test
pop
push
hlt
fldl
mov
add
std
pop
xor
cmpb
add
data16
adc
mov
cmp
sub
lcall
add
arpl
push
sti
cld
dec
jae
mov
mov
imul
idivl
mov
popa
dec
fwait
pop
pop
popa
pusha
pusha
push
adc
adc
xor
shlb
fs
dec
in
popa
dec
fwait
jbe
mov
insb
rolb
popa
dec
aam
push
mov
das
xchg
mov
dec
in
xor
popa
inc
fwait
dec
daa
xchg
mov
in
push
lret
add
dec
daa
xchg
sbb
add
call
or
iret
dec
inc
fwait
dec
es
pop
pop
push
pusha
pop
sub
add
lret
ds
inc
and
or
pop
or
test
stc
mov
add
xor
fimull
inc
and
pop
add
add
and
adcb
nop
hlt
inc
push
push
pop
sbb
add
cwtl
ret
jg
sub
aam
sub
sub
sub
and
cmpb
push
pop
and
fisubrs
shrb
mov
push
add
add
or
xor
jg
add
daa
and
add
aas
xor
ret
cmp
adc
xor
es
adc
fldcw
fadds
adc
inc
mov
ss
dec
dec
push
dec
push
push
mov
and
push
dec
inc
add
pop
push
mov
add
adc
insl
insl
push
dec
dec
dec
dec
dec
outsb
pop
dec
ds
insl
push
dec
je
es
push
jp
add
add
aam
xchg
push
add
push
add
push
je
outsl
sti
push
clc
jns
dec
jl
ds
xchg
cs
add
mov
xchg
jno
mov
outsb
nop
mov
jne
jg
pop
add
xchg
add
xchg
lahf
cwtl
add
mov
mov
ret
add
roll
or
jecxz
sbb
add
decb
mov
xchg
test
jle
lahf
outsb
lods
inc
popl
mov
cwtl
lea
mov
filds
sahf
xchg
add
mov
mov
decl
mov
cmpsl
add
mov
mov
fimuls
call
mov
insl
jbe
mov
push
and
neg
mov
mov
mov
mov
push
shll
mov
rol
mov
iret
ds
aas
mov
roll
push
mov
ret
add
inc
xor
add
ror
jbe
in
fistl
push
aam
dec
xlat
int3
pusha
adc
xlat
into
ds
mov
add
xor
rcr
push
fcom
push
repz
fcmovnb
shll
rolb
fcom
add
fxch
add
mov
outsl
dec
add
add
push
out
pop
loop
xchg
aam
add
fld
push
xlat
push
std
fcomi
fists
enter
xor
loope
in
in
out
imul
aam
out
call
loopne
out
js
mov
out
lock
push
in
out
cld
jecxz
data16
cld
push
repnz
add
or
je
data16
cmc
out
lcall
out
outsb
lock
fsubrl
cld
jmp
repnz
icebp
xlat
out
mov
xlat
loopne
push
jmp
xlat
jmp
fisttpll
fucomip
jecxz
lods
adc
sbb
loop
loope
call
in
fcoml
insl
call
mul
ds
loope
fnstenv
pop
sub
in
adc
out
push
stc
jmp
out
es
imul
dec
cli
pop
call
scas
out
push
out
es
lock
call
jbe
loop
pop
cli
mov
push
push
push
jle
cmc
cmpsb
mov
scas
xor
xchg
push
cli
repz
repnz
mov
fnstenv
hlt
cld
push
cmc
sti
ss
sti
idiv
imul
out
sti
in
push
jmp
out
mov
repz
cmc
hlt
outsb
push
lock
push
fstpl
test
hlt
push
cld
idivb
repnz
imul
jbe
cmpsl
push
hlt
dec
sti
stc
fadds
dec
fnstenv
clc
jbe
lock
push
cld
clc
ss
cs
cli
incl
cmc
stc
add
test
cli
cld
call
int3
test
push
push
xchg
sbbb
xor
mov
std
add
push
cld
mov
or
adc
adc
adc
inc
add
cmp
out
xlat
clc
add
push
pushf
incl
mov
pop
dec
aad
xchg
add
or
cli
xchg
mov
mov
lcall
or
aaa
pop
push
or
mov
fcoml
or
mov
lcall
rol
xchg
addl
and
or
pop
sub
fwait
dec
xor
dec
dec
add
cmpsl
test
jecxz
lret
sahf
xchg
cltd
add
aas
inc
jbe
push
sub
dec
js
push
push
fs
mov
mov
nop
mov
movsb
int
out
pop
pop
xor
out
fdivrs
pop
push
lods
je
arpl
mov
out
daa
mov
jecxz
loope
repnz
clc
jbe
lods
push
pop
popa
rcrl
jne
test
fisubrs
in
repz
lock
in
xor
popa
pop
gs
stos
xchg
in
mov
repz
rcl
into
sar
scas
xor
gs
dec
aas
ja
shrb
jno
insb
push
pop
pop
pop
pop
outsl
jo
jae
mov
mov
pushl
test
or
push
sti
or
push
inc
inc
inc
inc
inc
inc
ds
aas
inc
pop
dec
insb
notl
or
xor
test
mov
mov
adc
pop
xor
sbb
or
pop
add
scas
pop
and
and
dec
sbb
or
mov
pop
adc
push
insl
fiadds
filds
xor
push
shrb
ljmp
jns
dec
xor
xor
or
adc
pop
fdiv
xchg
push
mov
stos
lods
add
mov
je
dec
jp
xor
pop
inc
loopne
xor
or
sub
out
mov
jnp
and
fisttps
pop
in
pop
mul
out
pop
xor
mov
and
outsb
jg
in
dec
pop
dec
bound
cmp
cmp
pop
daa
pop
cwtl
into
outsb
outsb
sub
es
das
bound
pop
repnz
cltd
xor
push
addr16
stos
test
cld
dec
adc
push
xor
and
push
fs
push
and
adc
out
nop
mov
push
and
pushl
xchg
add
fs
xchg
psadbw
stos
add
mov
insl
ss
movl
outsl
mov
mov
add
pop
jge
popa
mov
insl
subb
pop
decl
dec
sub
cmp
femms
jle
inc
call
push
paddusw
inc
and
aam
mov
pop
pop
repz
pop
pop
adc
cmp
mov
out
in
pop
cmp
add
or
shrb
add
adc
cmp
lods
movsl
pop
mov
pop
push
pop
push
insl
mov
add
es
pop
mov
out
push
adc
pop
outsl
sahf
int
lods
inc
adc
dec
jg
ja
testb
jo
jg
push
lods
dec
xchg
mov
nop
xchg
pop
mov
jo
hlt
mov
push
dec
and
jg
dec
pop
ror
inc
xor
inc
add
push
adc
xor
sahf
mov
push
push
int3
xor
xor
popf
jbe
cs
add
push
add
pushf
cs
sbb
sarb
pop
or
jns
cltd
insl
pop
das
add
push
or
mov
out
push
or
insw
or
outsl
fistps
enter
ja
jg
and
sarl
or
xchg
shrl
in
mov
mov
jns
out
sarb
mov
dec
cs
or
xor
push
jle
dec
push
dec
add
pop
add
insl
sti
jo
add
ljmp
push
test
popf
test
into
ror
jle
pop
pop
movups
insb
push
sbb
dec
push
xor
mov
stc
push
mov
das
mov
stc
leave
pop
or
lret
push
mov
frstor
sti
rcrl
mov
mov
out
sub
and
add
stc
and
cld
cltd
cmp
pop
das
movsl
push
cmpsl
add
movsl
cwtl
cmp
add
or
pushw
inc
sub
jns
jo
push
jbe
fildl
push
adc
fildl
movsl
push
push
mov
mov
mov
or
xchg
sbb
clc
add
or
test
jle
adc
pop
out
sbb
push
push
das
loop
push
push
shlb
repz
cld
push
push
dec
inc
inc
and
dec
and
push
add
push
inc
test
and
mov
or
adc
inc
push
add
loope
or
adc
dec
push
test
jo
imul
loopne
cmpb
scas
test
or
mov
std
mov
pop
adcb
add
add
mov
inc
and
mov
adc
adc
and
add
inc
mov
pusha
bound
nop
lock
adc
std
and
push
dec
les
mov
cmpsb
and
mov
addb
dec
sahf
add
add
inc
inc
and
mov
test
fdivs
push
les
add
dec
ret
pop
ss
adc
mov
inc
adc
popf
xor
fldenv
xchg
push
nop
lods
inc
outsl
cmp
xchg
dec
inc
mov
test
nop
xor
les
dec
or
nop
add
and
or
and
mov
mov
mov
add
inc
mov
adcb
or
inc
pusha
nop
and
pusha
loop
and
pop
mov
or
inc
or
jbe
loopne
test
mov
and
jo
mov
inc
enter
adc
cwtl
mov
cmp
push
or
or
and
mov
add
adc
addb
xchg
inc
pusha
imul
adc
inc
inc
inc
cs
push
inc
int3
or
jbe
add
inc
add
add
or
nop
cli
nop
push
cld
xorb
orb
inc
add
ret
xchg
push
sub
and
andb
dec
dec
add
or
fs
mov
lock
and
inc
xchg
xor
push
les
and
add
mov
mov
lods
inc
jp
or
inc
lcall
dec
sbb
insb
xorb
in
and
fsubl
hlt
pusha
in
test
mov
add
lods
ret
and
and
xlat
adc
hlt
daa
scas
or
push
push
fnstsw
testl
das
incl
out
mov
push
sbb
cmpsb
push
mov
jg
aad
mov
scas
ds
mov
mov
jnp
lcall
fistpll
inc
scas
outsw
xchg
sti
imul
inc
out
jle
out
es
rcr
sti
inc
iret
decl
es
decl
sti
pop
scas
mov
testb
das
imulb
fnstsw
ds
push
outsb
xchg
js
repnz
mov
jbe
push
in
mov
scas
outsb
es
push
push
iret
outsb
repz
ljmp
lahf
scas
push
sarl
fsubrp
xchg
fimuls
add
aas
xlat
decl
jle
out
pop
scas
jbe
outsb
lock
mov
xchg
and
notl
aas
decl
outsl
push
sahf
pusha
jo
push
dec
out
push
mov
jnp
es
mov
xchg
out
fldpi
out
jnp
negb
outsb
scas
aaa
or
jbe
decb
scas
scas
pop
push
out
xor
sahf
out
push
jg
pop
cmp
jno
push
mov
sbb
ret
cmpsb
push
xchg
out
push
fistpll
pop
outsb
das
inc
cs
fcompl
decl
sahf
inc
testl
sahf
push
jle
scas
jg
shl
pop
call
scas
mov
scas
idivl
pushf
idivl
out
mov
xor
lds
decb
jg
jne
lds
neg
out
pop
aas
ds
jg
loope
mov
inc
rcll
push
iret
movl
push
push
sahf
sbb
cmp
fisubrs
and
mov
outsl
sahf
outsl
testl
push
fisubrs
shrb
lahf
incb
fcmovb
popa
hlt
out
scas
outsb
outsl
loopne
insb
aas
pop
into
es
mov
pop
cs
sbb
ja
iret
push
es
cmpsb
into
loopne
push
jle
mov
push
outsb
pop
mul
fdivl
outsl
mov
mov
aaa
jae
jae
outsb
pop
shlb
aas
inc
sahf
sub
mov
aas
iret
out
inc
push
mov
ja
ret
test
cs
push
sub
push
mov
jns
lahf
mov
push
cmp
pop
cwtl
jmp
cmpsl
popf
dec
mov
std
icebp
inc
and
pusha
lret
sahf
fistpl
inc
lret
imul
pop
sub
xchg
cmp
xchg
out
xchg
imul
push
xchg
lcall
aam
jle
subl
jg
jle
inc
pop
fldcw
mov
push
icebp
xchg
xchg
loopne
testb
dec
xchg
jmp
or
push
imull
push
popf
cmc
xor
jnp
cltd
mov
adc
and
sub
pushl
add
cwtl
stc
jg
push
pushf
lods
push
pop
lods
push
and
mov
jo
fstpt
in
mov
jne
fwait
push
adc
sub
mov
add
dec
or
js
adc
shr
jb
push
hlt
fiaddl
movhlps
incl
pop
fdivr
lcall
test
mov
int
loope
test
sub
jmp
dec
js
ror
jle
nop
bound
sbb
test
push
aas
into
mov
lcall
sbb
add
imul
pop
adc
inc
mov
push
mov
inc
arpl
cli
jmp
addr16
add
cwtl
gs
pop
fs
out
aaa
or
or
push
mov
fwait
sbb
call
cmp
outsl
add
push
push
xchg
jne
push
int
in
out
fst
cmc
cmp
std
daa
lock
call
cmc
mov
mov
pop
xchg
xor
mov
sub
dec
inc
mov
cmc
fildll
push
rolb
test
jle
adc
mov
sbb
jp
ljmp
mov
jp
outsl
push
hlt
ret
mov
shl
xor
data16
decl
aam
fidivs
jns
bound
sbb
jne
sti
scas
aas
lahf
sbb
call
cmp
jmp
mov
inc
sub
scas
or
outsl
jmp
je
loop
jns
mov
push
cli
mov
inc
jl
ljmp
push
xor
mov
push
out
faddl
outsl
jno
xor
dec
adc
jmp
and
jmp
nopl
push
sbb
mov
push
in
xor
dec
jns
in
rol
ja
xchg
incl
nop
and
das
jae
add
pop
pop
sbb
mov
mov
cld
imul
mov
sbb
mov
scas
mov
fiaddl
insb
jnp
aas
repz
js
xchg
mov
pushl
xchg
cmp
iret
jae
xchg
insl
jg
sub
sbb
sbb
imul
add
jmp
sub
mov
cld
jbe
cvtps2pi
xor
out
lret
dec
jle
pushl
push
shl
into
rorb
sti
lret
ret
and
add
mov
idiv
aaa
cld
call
hlt
sub
call
mov
bound
dec
sub
dec
cmp
jmp
mov
mov
inc
aam
sub
jecxz
dec
fucomip
sub
sbb
lds
sbb
arpl
nop
negb
push
and
loopne
bnd
lcall
test
inc
scas
insb
dec
call
out
lods
in
insl
push
enter
cmc
dec
std
pop
push
xor
lret
dec
mov
ds
loop
pushl
fisttpl
push
out
mov
inc
out
jle
je
inc
mov
cmp
and
call
xor
pop
adc
repz
sub
mov
pop
in
clc
mov
sar
mov
inc
or
inc
xor
pop
mov
mov
jne
jo
cs
jnp
sub
pop
data16
cld
shrb
lods
jge
adcl
inc
cmp
jle
pop
repz
add
inc
push
add
jne
movsl
mov
decl
xchg
test
arpl
and
jne
adc
xchg
lods
dec
aad
xchg
stos
das
xlat
incl
fwait
sub
fwait
andl
and
adc
movsb
jp
fnstsw
outsb
fwait
pop
ljmp
daa
imul
push
shlb
stos
ljmp
pushl
and
clc
das
out
loope
adc
out
test
fst
cmp
mov
mov
or
push
unpcklps
push
cld
push
add
jmp
dec
test
sbb
dec
cmp
loopne
loopne
add
xchg
scas
jg
push
pop
or
lahf
jae
clc
lock
lret
xchg
dec
cmp
inc
in
lcall
arpl
ljmp
mov
pop
lods
or
aaa
rcll
mov
mov
es
xchg
ljmp
repz
add
mov
jne
sti
rorb
pop
jae
fcomip
fildll
or
fstl
inc
dec
repnz
cmpsl
cmp
lcall
pop
lock
dec
dec
and
mov
stc
lcall
or
xchg
mov
test
es
add
in
loope
xchg
push
mov
std
sub
inc
pop
adc
lods
mov
fwait
push
mov
pop
pop
mov
sti
outsl
call
push
fwait
mov
pop
rcll
pop
xchg
sub
adc
decl
mov
in
shl
xchg
sarb
pop
adc
mov
mov
mov
and
call
push
sub
sti
ljmp
mov
imul
xchg
jo
jp
pushl
mov
mov
out
bound
jg
sahf
adcb
bound
outsb
cmpsl
hlt
insb
xor
xor
sub
decl
jge
dec
pop
pushf
sti
repz
xchg
mov
out
jge
mov
incl
or
fidivl
sbb
jo
fistps
dec
movsl
and
std
movsb
pop
inc
push
scas
popf
or
push
sub
out
inc
sti
jae
jb
lods
int3
adc
mov
add
add
mov
sub
or
and
lock
add
inc
add
out
nop
fcmovne
push
pop
and
inc
sbb
dec
or
push
or
aaa
and
or
outsl
or
xchg
and
jnp
adc
jns
xchg
push
fwait
pop
nop
add
add
cmp
push
pusha
dec
mov
in
nop
mov
add
sti
xchg
lea
add
or
mov
fnstenv
sbb
and
stos
dec
int
cmp
shr
test
testb
adc
push
mov
inc
mov
cmpsb
sbb
sub
test
inc
dec
int
pushf
lock
and
jbe
or
add
mov
add
dec
dec
xor
nop
cld
add
and
or
cs
add
fs
and
xor
xchg
mov
sub
and
mov
movsb
and
nop
xchg
pop
mov
orb
sbb
or
js
adc
mov
jb
add
mov
cmp
in
cwtl
adc
lods
cltd
scas
xchg
les
dec
add
mov
or
aam
nop
sbb
rcrb
pop
add
mov
sub
nop
xchg
pop
xor
adc
and
pop
add
mov
xor
ficoms
or
shll
mov
mov
and
nop
dec
and
xor
pop
inc
adc
dec
pusha
mov
xchg
sub
adcb
insb
shr
xor
incb
clc
and
int3
aam
or
add
hlt
adc
xorw
add
mov
addr16
add
and
fmuls
push
int3
pusha
rorb
xorl
push
inc
inc
popa
add
jge
push
fidivl
cmp
enter
cmp
add
imul
and
xor
cwtl
rolb
loop
push
insl
shlb
add
push
pusha
imull
hlt
sbb
test
cmpsb
xor
or
cltd
loopne
add
sbb
add
fmul
dec
popa
inc
lret
jle
and
add
push
mov
mov
or
mov
xchg
fdivr
lds
nop
dec
je
shlb
cmp
pop
nop
push
in
jno
add
add
int3
sbb
pushf
push
int3
adc
roll
outsb
out
lock
xchg
loop
pushf
xor
push
imulb
loopne
jp
rolb
jle
xor
lcall
cmpsb
sbb
jmp
push
inc
add
in
cbtw
cltd
mov
shll
bound
mov
sub
dec
popa
cli
dec
repnz
jbe
push
push
test
adc
mov
jmp
inc
sub
jmp
or
adc
or
nop
into
nop
test
xor
mov
enter
or
cmpsb
ror
mov
mov
sub
push
out
and
push
mov
push
cwtl
mov
pop
push
push
data16
testb
clc
pusha
stos
sbbl
je
out
xor
mov
jo
and
sub
add
inc
loopne
ds
loop
data16
adc
xchg
ficompl
cmp
cmpsb
or
adc
jmp
mov
push
fmuls
jle
fs
jnp
and
clc
xchg
dec
pusha
push
adc
mov
jl
xor
test
push
add
flds
dec
mov
mov
movsb
rcll
xor
call
mov
test
dec
pop
outsb
bound
cli
es
clc
inc
cmpsl
mov
mov
inc
sbb
pop
dec
mov
pop
cwtl
pusha
lods
cld
pushf
je
js
ror
fiadds
inc
js
xchg
xchg
xor
xor
nop
jno
popa
or
test
sbb
mov
pop
rolb
xor
pusha
negb
xlat
ret
dec
mov
aam
mov
xor
pusha
stos
xorb
add
push
push
sub
lret
add
nop
push
cltd
push
out
rolb
cmp
sbb
cmp
inc
ficompl
jo
pushf
and
xchg
in
push
adc
ljmp
and
aam
shlb
pop
out
ljmp
data16
inc
mov
cmpsl
addl
cmp
int3
push
insl
add
nop
fdivrs
cmp
hlt
pusha
cmpsb
xor
mov
popa
shr
pop
mov
jb
or
and
fsubr
push
push
bound
fs
pop
nop/reserved
data16
mov
inc
cmp
or
inc
shlb
popw
pop
jge
mov
jb
divb
cmp
insb
test
adc
adc
and
lock
xchg
lock
ss
pop
push
test
add
cmp
xchg
or
or
adc
pop
sbb
or
adc
ror
push
orl
imul
push
js
add
xor
or
enter
push
hlt
sub
lret
xor
xlat
mov
add
cli
jl
pop
or
inc
sbb
add
sbb
and
ss
cmpb
jl
jnp
js
push
stc
mov
movsb
lock
insb
add
mov
clc
and
mov
add
sbb
lock
mov
addb
xchg
ret
mov
fmuls
loopne
adc
or
inc
rcr
mov
and
mov
roll
adc
push
aam
fsubl
adc
pop
and
lods
push
out
je
rolb
nop
popf
int3
push
adc
or
push
pop
sahf
and
loop
dec
dec
adc
jl
push
cmp
inc
shlb
xchg
cli
lret
adc
add
dec
xchg
or
xor
sbb
lcall
stos
push
xor
add
test
sub
add
clc
pushw
repnz
mov
mov
push
add
fsubl
out
outsb
shr
mov
add
mov
pop
cltd
in
xor
test
pop
es
mov
pusha
and
dec
insb
xor
shll
ljmp
or
mov
jl
sbb
mov
adc
test
xor
pop
loop
nop
mov
addb
outsb
xchg
push
jo
push
lods
mov
stos
mov
dec
mov
inc
pusha
cli
fs
add
push
pop
test
and
and
push
inc
or
push
and
pop
add
sbb
or
lock
mov
adc
std
fcom
pop
and
in
adc
pushf
bound
xor
notb
es
jne
push
push
jmp
test
or
adc
sbb
push
mov
xor
pusha
add
push
adc
fs
into
push
push
jnp
loop
in
enter
in
xchg
ds
adc
pop
or
aam
add
mov
fwait
out
add
inc
popa
outsb
arpl
inc
gs
or
popa
imul
jmp
jo
gs
gs
xor
gs
outsl
fs
gs
inc
fs
movsl
std
pop
inc
and
imul
inc
mov
sbb
enter
lods
frstor
jb
push
sub
jbe
adc
fisubs
mull
jo
outsl
jo
inc
outsb
enter
cmp
xlat
dec
ret
jae
inc
je
je
outsl
insl
sti
jge
push
cmpsl
push
jns
gs
movsl
xchg
push
mov
imul
adc
mov
mov
dec
ss
insb
push
imul
xlat
mov
push
dec
popa
and
daa
cmp
insl
call
push
test
fisttps
or
and
jo
sbb
outsl
gs
jbe
push
or
fcompl
stos
repz
pop
push
loop
dec
bound
loope
xchg
cmpsl
add
outsl
insl
insl
data16
or
out
cmp
mov
xor
pushf
andb
xchg
jp
das
pop
sahf
das
mov
addr16
outsb
insb
outsl
popa
sbb
clc
sbb
jns
outsl
pop
popa
mov
cmp
cmp
push
je
mov
push
popa
jbe
outsl
mov
pop
dec
or
add
out
addb
push
pop
repnz
outsb
xor
cmp
rorl
inc
pop
rorl
mov
push
outsl
jne
sub
loope
lret
xchg
lahf
push
in
cwtl
mov
sub
test
sub
xor
dec
pop
mov
xorb
push
inc
fcomps
addr16
xorb
ss
jb
inc
fs
sub
arpl
mov
push
orl
jne
fwait
dec
pop
inc
push
cmpsb
pop
inc
arpl
push
cmp
pusha
and
imul
insb
fstpl
inc
dec
add
jne
dec
dec
dec
fwait
cmp
loopne
add
add
add
add
pop
pop
or
xor
sbb
add
or
and
add
int
ds
adc
in
test
mov
into
sub
mov
in
lock
jb,pn
jbe
cmc
aaa
and
addb
add
push
inc
add
in
xchg
jne
mov
add
push
or
stos
addr16
cs
push
insb
xchg
add
xchg
loopne
inc
out
repz
out
ficoms
dec
outsb
mov
adc
mov
dec
inc
dec
sahf
popf
lock
xor
dec
repz
dec
shrb
repnz
rolb
test
pop
movsb
mov
pop
cmpsl
bnd
lock
aas
add
push
add
or
aaa
xor
pop
addr16
xchg
and
push
add
and
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
xor
add
pusha
pop
add
mov
add
add
pop
add
add
add
add
add
add
cwtl
add
orb
add
add
orb
add
call
add
add
add
orb
add
cmp
add
pusha
add
addb
add
mov
add
mov
add
fadds
add
add
add
sub
add
push
add
addb
add
js
add
mov
add
add
add
cmp
add
lock
cmp
add
sbb
cmp
add
inc
add
cmp
add
push
add
add
add
add
add
add
add
xor
add
or
add
xor
add
pop
add
add
addb
add
add
add
add
add
clc
add
add
and
add
dec
push
add
jo
add
cwtl
push
add
rolb
sub
add
call
add
add
pop
add
cmp
add
add
add
or
add
fadds
add
or
add
or
add
in
add
or
add
add
add
add
add
add
add
lock
mov
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
call
add
add
add
add
add
adc
add
push
add
add
add
add
add
or
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
call
add
add
add
add
add
add
xor
mov
add
or
add
add
mov
or
add
add
add
add
add
add
mov
or
add
add
add
add
add
inc
add
mov
add
or
add
dec
add
mov
add
or
add
add
add
add
add
add
add
add
add
add
add
dec
add
call
add
add
add
add
add
add
push
add
call
add
add
add
add
add
lock
add
call
add
add
add
add
insb
add
call
add
add
add
add
ja
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
call
add
add
add
add
add
add
call
add
add
add
add
add
sub
add
mov
add
or
add
add
mov
add
mov
add
or
add
rolb
sub
add
or
add
add
add
call
add
add
add
add
add
add
call
add
add
add
add
push
add
xor
add
call
add
add
add
add
push
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
or
add
and
add
add
add
add
add
push
add
pop
and
add
add
add
add
add
pop
add
loopne
add
add
add
add
add
add
pop
add
enter
mov
add
or
add
add
push
xor
add
add
add
add
add
add
add
add
or
add
mov
add
add
add
pop
add
add
add
or
add
pop
add
or
add
add
add
add
add
add
pop
add
add
add
or
add
or
add
add
add
cmp
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
or
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
dec
add
add
insl
add
dec
add
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
jne
jb
popa
add
add
add
imul
jb
popa
add
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
popa
add
jae
and
dec
add
insl
add
jns
and
push
add
insl
add
add
add
pop
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
pop
add
jp
and
inc
add
popa
add
outsl
add
add
add
add
and
push
add
outsb
add
and
xor
cmp
cmp
cmp
sub
add
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
arpl
imul
add
js
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
ja
insb
add
add
add
add
and
inc
add
outsl
add
imul
sub
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
mov
add
add
adc
add
and
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
insl
arpl
xor
fs
insb
add
insl
fs
xor
cs
insb
add
popa
addr16
insb
insb
add
fs
insb
cs
insb
add
gs
insb
xor
cs
insb
add
jb
imul
add
outsb
je
jne
je
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
dec
outsb
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
insl
insl
inc
insb
addr16
js
outsb
fs
jb
outsl
jb
add
popa
addr16
outsl
popa
add
add
insb
dec
outsb
imul
gs
je
imul
gs
insb
inc
bound
je
add
add
jb
jne
jb
push
popa
insb
jne
push
add
push
imul
jns
jb
jae
