jmp
and
mov
cmpsl
bound
lods
jo
pop
or
pop
xchg
mov
lea
and
movsl
stos
stc
mov
jp
add
mov
push
lret
outsl
lcall
shl
fstps
cli
test
mov
mov
sbb
mov
inc
pop
lcall
fsts
mov
test
ret
mov
scas
sqrtps
push
inc
jge
rcrl
jge
and
gs
jg
mov
lret
cli
push
mov
lahf
decb
xchg
in
mov
fidivs
jmp
paddb
add
clc
xchg
jnp
cmpsl
inc
xchg
jno
std
xchg
mov
sbb
cmp
mov
cmpsl
mov
mov
push
xchg
cmp
sub
call
mov
xchg
cwtl
nop
insl
pop
dec
dec
loopne
jmp
pop
scas
cli
data16
push
shll
loopne
roll
lcall
imulb
mov
sbb
dec
and
push
stos
mov
or
pusha
jns
xchg
or
mov
rcrl
xlat
mov
call
out
mov
adc
sub
xchg
loop
call
dec
outsb
nop
dec
push
sbb
inc
loopne
cmp
pop
cs
mov
in
int3
or
int
pop
call
adc
mov
cmp
add
xchg
adc
nop
xchg
mov
jo
jb
loopne
loope
inc
outsb
mov
push
mov
dec
nop
jne
jmp
jl
sub
xchg
push
cmp
stos
mov
xor
push
cmp
mov
mov
decl
aad
mov
or
shlb
in
sbb
out
or
mov
inc
push
ljmp
into
imul
lret
cmp
xchg
inc
adc
out
cs
lret
clc
lcall
lods
ret
pop
pushf
frstor
pushf
xchg
mov
mov
jbe
sub
dec
ret
outsl
jg
jmp
ret
in
sbb
adc
aam
mov
mull
push
daa
pop
xor
pop
inc
test
jnp
mov
daa
out
jmp
fsubs
pop
xchg
xchg
mov
lret
sbb
mov
xor
cltd
and
sub
pop
loopne
or
xor
add
pop
notb
adc
push
stc
call
aam
add
cmpsl
lret
pushf
fcmovb
mov
call
mov
pushf
bound
jmp
std
xor
cmp
push
jb
cmp
adc
flds
fs
mov
test
fbstp
in
push
add
fldl
popf
push
adc
stc
mov
orl
mov
arpl
aas
or
data16
cmp
and
mov
add
pusha
lods
cmp
jb
fdivr
dec
dec
sbb
cmp
or
xchg
mov
call
insb
imul
mov
add
ret
sub
lea
decl
mov
push
mov
dec
cs
popa
mov
inc
sub
mov
pop
sub
jp
lret
xor
cmp
xor
jp
ret
dec
dec
xorl
xchg
js
ljmp
jo
je
mov
xchg
add
push
or
lcall
sti
mov
jp
out
xchg
push
sbb
jmp
lret
mov
xchg
sub
add
push
mov
dec
les
adc
or
inc
cmc
aam
mov
fstl
daa
sub
call
jno
movsl
fwait
ror
frstor
mov
ja
or
fstl
ljmp
ljmp
xor
mov
imul
and
rolb
and
or
stos
incl
scas
call
mov
jp
arpl
lcall
and
mov
in
inc
mov
cmpb
stos
outsb
sub
jae
fstpt
jp
or
jae
js
sub
xchg
movsb
test
inc
push
lods
mov
ds
fadd
jg
decl
mov
and
mov
add
jp
lcall
pop
mov
pusha
shrb
dec
mov
nop
ds
ret
cmp
rcrb
or
leave
std
push
outsb
pop
or
pop
add
jns
cmp
mov
ficompl
add
mov
adc
call
jge
xorb
jg
xor
fimull
ds
dec
jg
in
fsubrs
ljmp
sar
pusha
mov
popl
int3
dec
xchg
jecxz
push
cmpsl
insb
out
sub
or
or
pop
add
std
xor
xchg
fcmovb
jmp
push
sub
mov
pop
inc
xchg
mov
out
and
cmp
mov
add
push
stos
add
pusha
icebp
imul
xchg
mov
addr16
in
or
bnd
in
add
jbe
adc
jno
mov
dec
mov
sahf
call
fisubl
ss
jne
sub
push
insl
mov
in
cmpsb
push
pop
data16
shlb
clc
das
cli
imul
jecxz
in
pop
pop
call
jl
ljmp
pop
shll
arpl
fwait
jp
cmp
insl
div
cmp
decl
cmp
sbb
mov
push
lret
push
jmp
sub
loop
daa
rorl
jmp
jmp
mov
out
dec
testb
popf
jbe
cwtl
mov
mov
in
inc
les
addl
lcall
sahf
dec
mov
sar
and
push
mov
loop
shlb
aas
dec
push
call
and
insl
int
add
fnstenv
sti
sbb
ljmp
or
in
jle
mov
and
stc
mov
cmc
push
sub
cld
pop
ret
rol
aaa
dec
imul
gs
and
cmpsb
adc
pop
xchg
or
mov
mov
xor
ljmp
incl
mov
push
fisttpll
pushf
dec
call
sti
and
pop
iret
scas
mov
sbb
aad
imul
je
aaa
ss
pusha
dec
aam
outsb
test
xchg
pop
je
or
mov
sbb
ja
pop
lret
jno
cmpl
or
push
js
cmp
add
scas
daa
mov
movsb
jno
or
push
push
fadds
out
subl
mov
adc
ljmp
dec
cmpsb
fisubl
cmp
adcb
insl
mov
fmull
push
int3
pusha
jg
push
mov
in
sahf
mov
mov
adc
adc
jmp
leave
jnp
je
dec
fs
push
imul
lock
pop
cmpsl
mov
pushl
sbb
sbb
sti
add
shll
sbb
je
cmp
fucomip
pushl
in
adc
dec
das
jbe
xchg
int3
rcl
inc
pop
bound
cli
aad
sbb
fdivrs
dec
jp
ljmp
outsb
mov
mov
pop
movsb
out
out
push
mov
imul
movsb
out
push
cli
mov
pop
mov
gs
xchg
je
lret
inc
cmpsb
push
push
fidivl
sbb
xchg
lcall
xchg
aam
pop
add
mov
call
hlt
out
pop
ljmp
int3
mov
or
sub
xchg
pop
int3
jno
mov
add
cmp
jle
pop
je
int
adc
mov
dec
mov
test
lahf
and
pop
in
cmc
cmp
dec
or
jmp
das
mov
repz
je
outsl
jge
stos
call
add
aas
and
xchg
xchg
shrb
in
jno
out
mov
outsb
pavgw
scas
inc
aas
and
sub
xchg
dec
push
je
inc
sbb
pop
sbbb
addl
dec
insb
int3
mov
and
pushf
or
ljmp
shlb
cli
jle
dec
xlat
mov
push
aam
js
mov
or
push
ret
xchg
ljmp
push
repz
jl
test
leave
imul
lock
incl
xlat
mov
push
sbb
out
xor
out
or
sbb
rcl
cmp
dec
cld
inc
out
cli
or
fdivrs
inc
sbb
and
lods
insb
xchg
adc
out
cmc
mov
inc
pushf
mov
dec
push
push
mov
xchg
xchg
or
imul
loope
lcall
rol
mov
and
sub
gs
push
mov
pushl
in
jne
sub
fldcw
xor
cld
xor
clc
cwtl
xor
lahf
cmp
push
incl
repz
mov
in
cwtl
mov
jle
inc
daa
cltd
lds
push
fisttpl
decl
xchg
mov
cmc
push
cmpb
ljmp
mov
loopne
pop
in
movsb
adc
cmp
add
sbb
or
lods
negb
jg
pop
imul
repz
mov
rorl
add
mov
pop
pop
loopne
call
ret
dec
xchg
nop
xor
jns
push
test
inc
cmp
cmc
lods
push
out
pushf
ljmp
pop
push
mov
insl
ljmp
mov
aad
fistpl
addr16
scas
icebp
test
das
dec
js
mov
jns
mul
inc
add
xchg
pushl
subl
or
or
dec
shr
xor
cmp
rcrb
sbb
pop
xchg
scas
push
inc
call
mov
inc
sbb
in
xchg
sbb
fistps
adc
loop
jle
icebp
xchg
and
xchg
pop
push
outsl
jg
cmpsl
sub
shll
ja
jl
repz
cmc
push
pop
cmp
std
call
sub
add
js
test
inc
imulb
cmp
jbe
pop
jmp
out
push
ret
pop
add
in
and
and
push
jnp
bound
call
xor
dec
dec
dec
jge
pop
nop
loope
ftst
movsb
xchg
shlb
xor
fstpt
sbb
call
or
mov
daa
sbb
jae
push
fisubrl
sbb
sti
sbb
ljmp
push
mov
cmpsl
xor
or
inc
jbe
aas
outsl
psubd
ljmp
sub
jne
in
stos
pop
mov
xchg
pop
jno
call
pushl
jo
sub
mov
adc
pop
dec
pop
lods
aam
mov
cmp
flds
fcomip
sub
cmp
pusha
in
jo
sub
out
repz
push
pusha
or
shr
gs
pushl
xor
in
sub
outsb
xchg
jge
jg
inc
jle
clc
push
jb
fsts
fbstp
adc
int3
adc
out
call
fbstp
outsb
or
inc
cmpsb
test
out
dec
pop
pop
mov
and
popf
sub
decl
inc
stos
or
push
imul
sub
xorb
shl
aam
addr16
pop
dec
add
orl
fwait
lock
pushf
scas
push
push
mov
and
call
lret
mov
jl
loope
test
outsl
pop
push
pop
cmpsl
and
dec
mov
mov
incl
lret
lock
pop
pextrw
je
call
insl
lock
cmp
dec
fs
lcall
mov
jb
sub
fwait
adc
pop
sub
lcall
dec
outsl
cltd
pop
jle
orb
in
repnz
xor
jp
cmp
in
xchg
xchg
push
in
xchg
punpcklwd
cld
push
pop
ljmp
outsb
cmp
xchg
cmp
data16
sbb
pop
ds
lcall
in
jo
out
in
ja
cli
testb
in
lods
scas
or
enter
xchg
mov
jno
xchg
sti
cmp
std
data16
xor
cmp
push
jmp
jl
decl
lahf
push
sub
mov
pop
fsubs
mov
sbb
lcall
inc
out
jne
or
mov
pop
jns
xor
icebp
out
ja
orl
in
dec
inc
popa
fistpl
mov
or
cld
cli
pop
clc
scas
mov
stos
mov
cltd
gs
push
jo
cld
inc
ds
jg
imul
pop
fs
in
dec
push
ljmp
je
movsb
xchg
btrl
ffreep
ret
jae
pusha
pop
xchg
cld
sub
mov
xchg
divl
movsl
fistps
sbb
jg
fs
adc
inc
xchg
inc
cmp
jmp
fs
pop
pop
int
jb
pushf
sbb
mov
mov
repz
mov
xlat
int3
jne
inc
lret
mov
mov
pop
iret
sbb
cmp
out
jmp
mov
or
in
std
xor
movsb
insl
cmp
mov
shll
mov
int
mov
aad
push
adc
mov
cmp
decl
test
xor
push
pop
cmpb
js
arpl
aaa
ja
pusha
sub
insl
xlat
pop
cmp
jo
cmpsl
bound
fcomip
mov
loop
or
sbb
ljmp
cmc
fcomip
decb
mov
in
daa
dec
ret
mov
adc
lcall
pusha
stos
stos
ds
sub
jb
insl
dec
imul
mov
es
rol
add
jmp
add
leave
fninit
jne
push
andl
arpl
mov
in
inc
push
sub
jmp
xchg
push
push
pop
pop
sbb
rcrb
mov
mov
add
nop
sarl
mov
jmp
test
xlat
pushf
push
push
jns
mov
pop
sti
filds
sbb
xchg
scas
push
lret
icebp
jle
push
out
xlat
fdivr
inc
sbb
push
cmp
adcb
and
out
insl
pop
popf
rcrb
push
xchg
cmp
jns
or
inc
int
xchg
out
and
xlat
outsb
jno
adc
push
xchg
lods
aaa
sbb
adc
sahf
xchg
enter
sbb
shrb
daa
inc
mov
jae
mov
das
dec
xchg
xchg
or
jmp
xchg
jns
jb
cmp
lahf
mov
jnp
sbb
lods
idiv
incl
scas
push
cmovo
outsb
jae
jmp
and
call
pop
xchg
cmp
or
fcom
arpl
lcall
movsl
fwait
pop
adc
jbe
adc
int3
lods
fldl
mov
test
xchg
adc
jmp
dec
dec
sub
inc
or
mov
cmp
mov
mov
incl
push
xor
imul
lods
and
mov
push
mov
lods
lds
push
fwait
and
push
add
or
leave
adc
mov
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
sub
movsb
add
add
and
mov
cmpsl
bound
lods
jo
mov
ficomps
mov
add
aam
movsl
stos
stc
mov
jp
fdivl
add
mov
push
lret
outsl
pop
fnop
neg
push
cli
test
mov
mov
lcall
outsl
sti
mov
inc
pop
lcall
les
test
ret
mov
jnp
sqrtps
push
inc
jge
rcrl
jp
sub
gs
jg
mov
dec
sbb
cli
push
mov
lahf
decb
xchg
in
mov
jne
jmp
paddb
add
clc
xchg
jnp
cmpsl
inc
xchg
jno
std
xchg
mov
sbb
fwait
in
cmpsl
mov
mov
push
pushl
cmp
sub
mov
xchg
cwtl
nop
insl
pop
dec
dec
loopne
jmp
call
cvtps2pd
and
mov
roll
lcall
gs
push
sbb
stos
loopne
mov
mov
mov
test
pusha
jns
xchg
jmp
or
mov
rcrl
xlat
mov
lods
out
mov
adc
sub
xchg
lcall
or
daa
call
dec
outsb
nop
into
push
sbb
inc
loopne
cmp
pop
cs
mov
jns
cmp
in
int3
or
int
pop
nop
in
fsts
push
repnz
cmp
add
xchg
cli
adc
nop
xchg
mov
mov
cs
jo
jb
loopne
loope
inc
outsb
mov
incl
sbb
push
mov
dec
nop
jne
and
stos
jle
mov
push
cmp
stos
mov
xor
lcall
push
cmp
mov
mov
or
cmp
or
shlb
in
sbb
pushl
xor
or
mov
inc
push
outsb
imul
pushw
flds
cmp
sar
incl
dec
inc
inc
arpl
cs
lret
lods
ret
pop
pushf
frstor
pushf
xchg
mov
jg
repz
jbe
sub
dec
ret
outsl
loop
movsb
xchg
sbb
adc
aam
mov
mull
ljmp
sahf
push
push
daa
pop
xor
pop
lds
jnp
mov
daa
out
jmp
fsubs
call
pop
xchg
xchg
mov
lret
sbb
mov
imulb
or
lods
or
xor
lcall
notb
adc
push
stc
xchg
sbb
dec
nop
aam
add
cmpsl
lret
pushf
fcmovb
mov
pushl
xchg
call
mov
pushf
bound
loope
xor
cmp
push
jb
cmp
incl
adc
flds
fs
mov
test
out
cmp
inc
in
push
add
fldl
popf
decl
adc
stc
mov
orl
inc
aas
or
data16
cmp
and
mov
add
pusha
lods
cmp
jb
fdivr
dec
dec
sbb
cmp
or
or
movsl
jae
mov
mov
insb
imul
mov
add
jns
and
lods
iret
sub
lea
mov
push
mov
dec
cs
popa
mov
call
sub
jle
mov
dec
xor
cmp
xor
jp
ret
dec
dec
jg
incl
aas
xchg
js
pop
je
mov
xchg
ljmp
cli
add
push
or
int
mov
jp
out
xchg
push
sbb
jmp
lret
mov
lock
jmp
sub
add
push
mov
dec
les
nop
mov
inc
push
aam
mov
fstl
daa
sub
fnstenv
movsl
fwait
ror
frstor
mov
ja
ljmp
push
in
ljmp
xor
mov
imul
das
clc
push
and
rolb
and
or
add
sub
scas
sbb
mov
jp
stos
pop
cmc
cld
arpl
and
mov
in
inc
mov
incl
stos
outsb
sub
jae
cmp
or
jae
js
sub
xchg
movsb
test
incl
lods
mov
ds
fadd
dec
xchg
mov
and
mov
decl
rcr
jp
sbb
inc
dec
pusha
shrb
dec
mov
nop
ds
ret
cmp
push
adc
rcrb
or
leave
outsb
pop
or
pop
add
jns
cmp
mov
mov
sbb
mov
adc
jge
xorb
jg
xor
fimull
pushl
cltd
dec
jg
in
fsubrs
repz
mov
popl
jg
ret
bswap
dec
xchg
jecxz
push
cmpsl
insb
out
sub
or
or
pop
add
std
xor
call
xchg
fcmovb
hlt
sub
mov
pop
inc
xchg
mov
pop
call
xor
aaa
pop
add
nop
add
push
stos
add
pusha
icebp
imul
call
jo
std
xor
lods
or
in
add
jbe
adc
jno
mov
dec
mov
pushl
movsb
jg
sbb
sub
sub
cltd
jne
sub
push
insl
mov
jg
jmp
call
sti
pop
data16
shlb
jae
lahf
mov
jle
cmp
jg
call
jl
lret
std
pop
shll
arpl
fwait
jp
cmp
outsl
mov
insl
div
cmp
dec
cwtl
sarb
inc
pop
mov
push
lret
push
jmp
ljmp
cwtl
in
jge
data16
daa
rorl
jmp
int3
push
inc
out
dec
testb
popf
jbe
lcall
in
inc
les
addl
dec
mov
sar
and
push
ljmp
mov
jno
aad
dec
push
push
test
sbb
insl
int
add
fcos
pushl
sti
sbb
ljmp
or
jle
mov
and
stc
mov
cmc
push
sub
cld
lcall
inc
push
rol
aaa
dec
imul
cmpsb
adc
pop
xchg
or
mov
mov
jmp
xor
ljmp
pop
mov
push
fisttpll
pushf
dec
call
addr16
loop
and
pop
iret
scas
mov
sbb
es
aaa
ss
pusha
dec
aam
outsb
test
push
cld
mov
daa
or
pop
sbb
ja
pop
lret
jno
cmpl
push
clc
push
js
cmp
add
movsb
jno
or
push
push
fadds
out
subl
fldenv
pop
cmp
adc
fcompl
dec
cmpsb
fisubl
cmp
dec
loop
jecxz
push
sbb
mov
fmull
dec
push
mov
in
sahf
mov
pushl
adc
adc
mov
leave
jnp
je
dec
fs
push
imul
ljmp
outsb
dec
pop
cmpsl
mov
ss
sbb
sti
add
sar
jmp
sbb
je
cmp
fucomip
jb
in
adc
dec
das
jbe
xchg
int3
rcl
inc
pop
ljmp
cli
aad
sbb
fdivrs
dec
jp
insb
cmp
jne
push
pop
movsb
out
out
push
mov
incl
imul
movsb
out
push
pop
mov
gs
xchg
je
fcomip
dec
int3
aaa
inc
cmpsb
push
push
fidivl
sbb
xchg
rcll
xor
jg
pushl
push
xor
hlt
out
pop
int3
mov
or
sub
call
xchg
pop
int3
jno
mov
add
pop
pop
je
int
adc
mov
dec
decl
lahf
and
pop
in
cmc
cmp
dec
or
jmp
das
mov
call
pop
push
stc
outsl
jge
stos
xchg
xor
out
add
aas
and
xchg
xchg
shrb
in
jno
out
inc
mov
outsb
pavgw
scas
lds
and
sub
xchg
dec
push
je
inc
sbb
lcall
out
push
pop
sbbb
addl
pop
pop
jno
and
pushf
or
mov
and
out
lcall
xlat
mov
push
aam
js
mov
or
jg
call
sbb
stos
mov
mov
cmc
test
xchg
xchg
xor
jl
test
leave
imul
lock
xlat
mov
push
sbb
out
xor
out
jg
decl
inc
fcomps
in
rcl
cmp
dec
cld
inc
or
fdivrs
inc
sbb
and
jmp
lods
insb
xchg
adc
cmc
mov
inc
pushf
mov
dec
push
push
mov
xchg
hlt
call
cmp
and
ret
jae
cltd
and
sub
fildll
gs
push
mov
inc
jne
sub
fldcw
xor
cld
xor
insl
shr
add
into
lahf
cmp
push
repz
mov
in
cwtl
mov
jle
cld
pushl
inc
daa
cltd
lds
push
fisttpl
or
lea
or
sahf
jg
call
cmc
push
cmpb
mov
loopne
pop
in
movsb
adc
cmp
add
jmp
sbb
or
lods
negb
jg
pop
imul
repz
mov
rorl
mov
xor
cmp
pop
loopne
adc
dec
xchg
nop
xor
jns
push
test
out
inc
cmp
cmc
lods
push
ljmp
pop
push
mov
insl
ljmp
call
gs
aad
fistpl
icebp
test
das
dec
js
mov
ljmp
inc
add
xchg
ja
subl
or
or
call
dec
shr
xor
cmp
xchg
scas
sbb
pop
xchg
ljmp
ljmp
mov
sbb
sbb
mov
adcl
jle
icebp
xchg
and
xchg
pop
push
cmpsl
sub
shll
jg
ja
jl
repz
cmc
push
pop
cmp
sub
add
js
test
inc
imulb
cli
mov
push
jle
jbe
andl
ret
pop
add
out
in
and
and
push
jnp
bound
test
xor
dec
dec
dec
jge
pop
nop
loope
ftst
jmp
sbb
cmp
xchg
sub
lds
mov
daa
sbb
pushl
push
fisubrl
sbb
sti
sbb
push
mov
cmpsl
xor
or
cmp
and
cli
pop
mov
loop
sub
jne
in
stos
pop
mov
lcall
add
mov
jno
call
fsubrs
push
mov
adc
pop
dec
pop
incl
ret
mov
cmp
flds
sub
cmp
pusha
in
jo
sub
out
push
mov
push
pusha
or
shr
gs
xor
in
sub
outsb
xchg
jge
inc
pushl
jg
inc
jle
clc
push
jb
fsts
ret
aam
popf
mov
ficompl
adc
out
fbstp
outsb
or
inc
cmpsb
test
out
decl
pop
mov
and
popf
sub
dec
ds
stos
or
push
imul
sub
jmp
xorb
shl
aam
addr16
pop
iret
add
orl
fwait
lock
push
jo
scas
push
push
mov
and
xchg
mov
and
lret
mov
jl
loope
test
outsl
lcall
pop
cmpsl
and
dec
mov
mov
xchg
addr16
lret
lock
pop
pextrw
je
call
call
sbb
insl
lock
cmp
dec
fs
into
into
clc
jb
sub
fwait
subl
jge
inc
push
pop
sub
lcall
pop
jle
orb
in
repnz
xor
incl
jp
cmp
in
xchg
xchg
push
in
xchg
cld
push
pop
ljmp
outsb
cmp
xchg
cmp
data16
sbb
pop
ds
ret
jo
or
mov
and
in
ja
cli
testb
lock
inc
in
lods
scas
or
enter
xchg
mov
and
cmp
std
data16
xor
cld
lcall
cmp
push
jmp
jl
mov
sub
mov
fcomip
call
fsubs
mov
sbb
inc
out
jne
or
mov
pop
jns
xor
icebp
out
ja
orl
fistpl
mov
or
cld
cli
pop
clc
scas
mov
ljmp
stos
mov
cltd
gs
push
jo
ds
jg
imul
pop
fs
call
loope
sub
ljmp
je
movsb
xchg
btrl
or
stos
jae
pusha
pop
xchg
cld
sub
push
ss
divl
movsl
fistps
sbb
jg
pushl
sub
inc
cmp
mov
fs
pop
pop
int
jb
pushf
sbb
cmp
popa
mov
mov
repz
mov
inc
lret
mov
mov
pop
iret
fcomip
sbb
cmp
out
jmp
mov
or
in
std
xor
movsb
insl
cmp
out
clc
jmp
shll
mov
int
push
aad
push
adc
mov
lcall
icebp
cmp
and
les
xor
push
pop
cmpb
js
arpl
aaa
ja
incl
cmp
pop
cmp
jo
cmpsl
bound
cltd
ja
jg
sbb
incl
push
xor
cld
push
decb
mov
in
daa
dec
ret
ljmp
addl
pusha
stos
stos
ds
sub
jb
insl
dec
ljmp
mov
cmp
inc
pop
es
rol
add
add
leave
fninit
jne
push
andl
lret
cmp
mov
in
inc
push
sub
xchg
push
push
pop
pop
sbb
rcrb
mov
mov
ljmp
jns
mov
inc
mov
mov
stc
ret
pop
cli
xlat
pushf
push
jmp
mov
pop
addb
insl
or
enter
push
lret
icebp
jle
push
out
xlat
fdivr
inc
sbb
jp
jbe
nop
cmpb
jle
xor
insl
lcall
sbb
inc
push
xchg
cmp
imul
cmp
xchg
out
and
stos
call
outsb
jno
adc
push
xchg
lods
aaa
sbb
adc
push
sbb
shrb
pushl
std
jmp
inc
mov
jae
mov
das
dec
xchg
xchg
or
mov
push
bound
mov
sar
mov
jbe
std
lods
mov
fldl
jo
cmovo
mov
dec
outsb
jae
jmp
and
call
mov
jo
incl
fcom
arpl
adc
movsl
fwait
pop
adc
jbe
adc
int3
lods
fldl
mov
cmpsl
enter
dec
cmp
dec
sub
inc
or
mov
cmp
ljmp
pop
out
ss
out
push
xor
imul
lods
and
mov
aam
cmpsb
ljmp
mov
lods
lds
push
fwait
sbb
adc
inc
push
push
adc
add
push
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
push
push
lds
dec
fldenv
insl
or
xor
or
test
movsl
test
sti
fsubrs
daa
test
fwait
ljmp
outsb
pop
inc
sbb
push
cli
test
jae
push
test
rclb
xor
incl
push
mov
add
js
or
cmpsb
lcall
cmpsb
iret
ret
fcmovnu
call
pop
frstor
loopne
aam
addb
xor
call
sar
cld
negl
or
add
pop
add
or
loope
mov
push
pushl
pushl
push
push
popa
xor
sub
mov
mov
jge
mov
add
adcl
mov
lcall
jmp
in
jge
ret
icebp
mov
pop
mov
dec
xchg
out
testb
ret
fsubrp
dec
mov
jg
ljmp
movsb
pop
cmp
testl
je
mov
add
cmc
mov
xor
mov
in
mov
add
inc
dec
jne
jo
pop
push
push
adc
mov
pop
out
push
add
mov
add
mov
sub
and
mov
leave
jne
lcall
jle
pop
idiv
loopne
loop
inc
inc
or
mov
mov
jno
clc
jmp
push
lea
jmp
movsl
shl
dec
scas
ret
outsb
adc
rorb
and
jb
adc
mov
dec
jl
jle
cmp
mov
shll
pop
push
xlat
or
jns
in
daa
sbb
xor
ret
mov
dec
shrb
push
push
leave
mov
ljmp
test
xchg
and
push
fdivr
add
pop
js
loope
adc
std
or
pop
sbb
mov
push
mov
add
and
xchg
mov
flds
decl
add
cld
xor
sbb
sub
loope
test
xchg
fsts
jmp
jg
push
lahf
int
paddq
testl
inc
pushf
ljmp
inc
xor
pushl
xchg
adc
cmpsl
call
inc
mov
lods
inc
mov
xchg
aam
aam
sub
jmp
test
xor
in
adc
add
pop
insl
ss
adc
cmpsb
add
inc
pushf
xor
lcall
dec
mov
pop
and
push
jnp
mov
movsl
test
jmp
sub
lcall
js
leave
pop
bound
pop
insl
cmc
lea
clc
and
popf
aas
pop
les
push
call
jmp
mov
cmpb
mov
in
cmp
ficoms
push
pop
lods
adc
sbb
addl
xor
add
add
dec
and
loope
add
mov
mov
lret
dec
sbb
aad
sub
cmp
xor
pop
idivb
inc
out
dec
test
in
aad
sbb
mov
fdivl
push
and
int
clc
cwtl
fcmovbe
mov
mov
lret
cmp
lcall
shlb
jge
jno
fimull
nop
cmpsl
outsb
xchg
jnp
imul
jg
stc
cwtl
rolb
push
fxch
lea
add
cmc
pop
cwtl
mov
xchg
dec
rclb
sti
cmc
pop
xor
mov
xchg
ds
pop
mov
push
mov
sbb
mov
push
push
dec
lcall
idiv
jmp
int
rclb
in
outsb
dec
in
js
mov
adc
lods
daa
lods
inc
cli
sarl
lods
add
jns
nop
pop
dec
mov
jl
shrl
insl
lea
es
cs
pop
jmp
aas
pop
daa
insl
and
jg
mov
in
push
dec
test
stc
cmp
popa
hlt
pushf
mov
jmp
push
dec
sub
in
in
cmpsb
cmp
jmp
repz
out
pop
adc
pusha
xchg
dec
aam
test
jne
dec
popl
cwtl
lods
gs
pop
inc
jl
sbbb
insl
iret
test
xchg
int
mov
mov
cmp
dec
lcall
call
add
jp
imul
add
testb
push
jmp
cs
push
mov
in
aad
dec
pusha
dec
fsubp
out
or
call
jge
xchg
pop
xchg
push
push
lods
mov
mov
inc
push
xchg
xor
call
xor
in
cltd
cmp
push
cs
adc
dec
ret
ret
cmp
incl
mov
inc
sub
scas
pop
lods
hlt
roll
inc
cmc
add
pop
mov
aam
or
decl
push
and
sub
sti
mov
xor
or
loope
popa
and
jmp
pop
icebp
cmp
fwait
dec
dec
and
scas
push
inc
rep
movsb
or
inc
push
and
lock
ljmp
dec
dec
dec
cmp
imul
test
fs
mov
loop
decl
fisubs
pop
lret
das
push
jecxz
push
push
push
aam
mov
loopne
pushf
add
clc
inc
lcall
scas
mov
ret
cld
lret
mov
xor
in
pushf
mov
mov
xor
mov
and
mov
incl
xchg
into
jl
mov
insb
data16
push
testb
add
jg
jg
add
cmp
dec
pop
push
jl
pop
inc
es
xchg
jno
dec
cmp
sti
jl
add
je
mov
loope
repz
sti
cmc
dec
add
jae
push
dec
and
push
mov
lcall
pop
rcrb
sahf
outsl
cmpsb
add
jbe
stos
das
scas
rolb
lcall
push
scas
mov
jmp
or
adc
add
addr16
sub
lret
or
jbe
aaa
sub
cmpsb
insb
jg
filds
adc
data16
ss
sbb
adc
pop
into
ja
dec
insl
pop
jp
aam
jbe
leave
addr16
loope,pt
push
repnz
xchg
adc
clc
fildll
je
into
push
imul
xchg
iret
jbe
sbb
das
js
das
js
aam
mov
movsb
or
lds
sarl
inc
into
jbe
xor
dec
and
push
jbe
pop
icebp
dec
roll
and
adc
into
jbe
outsl
fdivr
jg
push
shll
push
push
ja
rclb
mov
loope
push
push
mov
aaa
cld
fwait
imulb
je
into
pusha
dec
inc
aam
pusha
ret
gs
repz
not
inc
jg
xchg
and
test
orb
inc
xor
jo
ret
fdiv
cmpb
adc
loope
mov
bound
mov
call
cld
insl
arpl
bound
mov
jno
into
push
push
loop
dec
jecxz
or
pop
mov
es
sbb
jnp
aad
inc
aam
outsl
ljmp
jge
insl
jno
into
imul
push
enter
push
jnp
icebp
sti
dec
add
mov
repz
sti
sbb
dec
push
int3
es
loope
or
int3
push
xlat
mov
push
jb
ret
push
jnp
popa
repz
enter
inc
flds
mov
mov
mov
into
scas
shlb
jmp
loope
test
push
jge
inc
pop
pushf
movsl
outsb
pop
popf
shlb
xchg
int
jnp
incl
lret
pusha
dec
cmpsb
pop
push
adc
jl
adc
loope
mov
sbb
mov
dec
mov
outsb
and
sbb
and
mov
push
loop
clc
in
lahf
int
insb
jno
imul
mov
jle
mov
mov
sub
outsb
jnp
loopne
and
fwait
sbb
jbe
ss
pop
negb
sub
lods
test
add
inc
aad
aaa
lahf
idivb
frstor
xor
xor
sti
jg
mov
outsb
pop
mov
int
mov
sti
in
imul
pop
mov
cmp
aas
decb
mov
sti
stos
ret
cmpsl
push
cmp
add
mov
jg
push
mov
inc
sahf
dec
adc
dec
pop
pop
lahf
jae
or
mov
add
mov
mov
push
mov
mov
inc
movsb
test
scas
rorl
xchg
bnd
sub
mov
fwait
jns
cmp
cmpsl
and
pop
outsb
jg
incl
jb
into
fwait
pop
in
push
cli
pop
xchg
scas
loop
ljmp
mov
ficoms
push
adc
jg
vsqrtsd
adc
test
mov
ret
jle
icebp
pop
ljmp
loopne
xchg
push
sbb
sbb
xchg
popa
cmpsb
dec
and
push
in
sub
pop
push
sti
and
out
movsl
xchg
into
lods
pop
pop
mov
mov
push
inc
je
pop
xchg
shll
dec
icebp
mov
xchg
icebp
lods
add
xchg
aad
arpl
shr
and
dec
imul
clc
out
mov
cs
ljmp
lahf
mov
shll
mov
push
gs
sti
in
cld
iret
pushf
sub
jnp
add
vmovq
jno
pop
and
loope
cmpsb
aaa
pop
fstpt
aam
test
or
fsubl
pop
insb
dec
add
cmpsl
add
lock
jmp
shlb
cmc
fisubrs
dec
ljmp
pusha
xchg
xchg
jle
es
popa
dec
sti
call
pop
xchg
sub
inc
adc
arpl
scas
sub
shrl
cmpsb
sub
cmpsb
mov
test
addb
xchg
or
dec
fisubrl
pop
pushf
xor
push
cs
das
js
cmc
cltd
cs
xchg
mov
shrb
push
add
fwait
mov
incl
add
rclb
cs
or
test
push
xchg
and
ss
inc
sub
xchg
or
ja
jg
add
cmp
inc
mov
cmp
mov
mov
pop
aam
jp
lea
mov
rcrb
loopne
sbb
push
cmp
popf
jp
mov
jbe
pop
adc
mov
int
popf
outsb
xchg
inc
mov
fwait
jmp
push
xchg
sub
xchg
lock
jnp
lods
sbb
faddl
leave
adc
je
cld
divl
pop
insl
pop
add
es
push
std
ljmp
es
or
jnp
add
pop
push
dec
out
mov
call
mov
jmp
push
ja
lock
out
decl
push
test
xor
stc
push
out
in
andl
pop
aad
mov
idivb
pop
dec
mov
lcall
sahf
pop
mov
and
cld
pop
fwait
xor
dec
push
pop
mov
insl
adc
arpl
std
movsb
push
cmp
push
lret
roll
fnstcw
adc
mov
movsb
out
addr16
sub
xor
mov
lcall
xchg
cld
fwait
and
fmull
jns
aaa
bound
outsl
inc
push
call
inc
pop
imul
jno
pop
xor
jbe
pop
inc
gs
outsl
jb
xor
dec
dec
push
push
outsb
xor
inc
jb
addr16
outsl
aaa
dec
pop
jno
jbe
push
aaa
pop
inc
jo
jp
inc
je
call
ja
jo
insl
sbb
insb
push
xor
dec
push
inc
gs
js
dec
mov
cmp
jne
insb
xor
dec
xor
xor
push
pop
pushw
inc
jp
fcomip
inc
aaa
jo
and
data16
push
jae
xor
push
ja
dec
insl
insl
jp
cmp
notb
je
dec
inc
jae
arpl
dec
jne
jp
inc
gs
inc
ljmp
ds
imul
insb
addr16
pop
push
dec
inc
jb
inc
popa
fs
jne
push
dec
addr16
das
clc
mov
inc
push
push
xor
xor
insl
inc
arpl
enter
pusha
popa
push
xchg
je
imul
push
jno
das
sub
in
popa
gs
dec
je
dec
pop
jae
push
cmp
push
dec
outsl
push
pushl
pop
jno
jb
arpl
je
push
inc
jp
xor
jns
inc
bound
sti
std
decl
jns
jo
jo
push
dec
aaa
push
xor
inc
ja
inc
jp
popa
push
jbe
insl
test
jg
dec
dec
inc
ss
inc
dec
push
fs
outsb
push
movsb
dec
inc
pushf
push
fildll
fistpl
adc
or
jl
inc
dec
xchg
bound
arpl
jg
dec
pop
les
jbe
cmp
insb
push
data16
sbbb
hlt
jp
xor
jp
dec
jp
stos
sbb
fsubrl
js
dec
mov
inc
add
or
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
dec
mov
ss
ljmp
pop
add
add
sbb
add
add
push
add
jg
mov
add
push
inc
lret
add
pop
addl
mov
addb
adcb
je
push
adcb
jle
add
sti
outsl
mov
addb
insb
adc
rolb
xchg
test
sub
add
push
jg
dec
xchg
push
pop
or
xorb
and
das
repnz
addl
pushl
add
ja
aaa
jns
ss
hlt
scas
jb
add
ds
cmp
aaa
inc
or
add
jns
and
leave
cmpsb
jne
add
mov
outsl
cmp
sbb
inc
inc
adc
mov
aad
push
movl
pop
pusha
adc
sub
lcall
lods
std
xor
aas
push
push
mov
jge,pn
pop
repz
add
sbb
out
call
push
pop
mov
push
rcrl
mov
add
pusha
or
test
cltd
sbb
add
mov
imul
sbb
inc
jecxz
xrelease
inc
xchg
lods
jb
iret
inc
jl
mov
mov
mov
inc
insl
mov
loopne
lahf
or
fiadds
or
cltd
push
stos
cli
flds
std
pusha
sbb
xorl
in
cltd
cmp
add
mov
dec
sar
xchg
lret
out
lcall
and
roll
add
fmull
mov
and
andb
inc
jge
outsl
push
lock
or
xlat
scas
mov
rcll
ljmp
rcll
pop
xor
ret
pop
out
or
adc
push
dec
cmp
imul
punpckhwd
inc
js
test
clc
into
in
mov
sbb
mov
xor
popa
dec
xchg
mov
loope
ljmp
lret
pop
xor
jge
loope
in
imul
lahf
out
pop
std
jbe
jnp
pop
stos
cmp
dec
or
mov
adc
out
mov
fildll
daa
add
fwait
cmpsb
sarl
movsl
sahf
mov
gs
roll
xchg
loopne
loope
or
decl
sub
add
cmpsl
xlat
inc
rcrb
or
xlat
add
lods
mov
stos
cmp
int
jecxz
iret
sub
sarl
cld
imul
int
std
mov
push
xchg
stc
adc
push
fbstp
push
or
in
push
mov
addb
cmp
mov
arpl
mov
dec
sti
sahf
cmpsb
aaa
add
int
sbb
fnstcw
aaa
sub
or
repz
shll
andb
push
push
arpl
fcmovbe
lcall
ror
push
cmpsb
mov
jne
inc
add
aam
movsl
iret
lahf
cmpsb
imul
add
mov
jns
addr16
std
jo
in
fwait
repz
mov
mov
mov
movsl
dec
rep
imul
shll
or
imul
mov
jo
mov
mov
pop
lods
push
mov
mov
cmpsb
jmp
adc
add
xor
loopne
ja
into
mov
mov
and
cmpsl
mov
mov
out
stos
add
testb
out
aad
stos
pop
jns
scas
lock
stos
mov
stc
push
pop
mov
add
inc
stos
roll
pop
sti
mov
add
mov
xorl
lock
repz
or
push
push
add
dec
jno
mov
ljmp
stos
jo
inc
cmp
jge
sub
xlat
inc
push
lods
cli
lods
imul
inc
fwait
jo
sub
mov
out
pop
push
inc
push
jno
sub
push
cmovbe
push
test
pop
sti
xchg
insl
add
outsl
cmpxchg
xor
ret
lock
stos
cmp
aaa
in
sbb
add
call
test
in
add
dec
imul
fcoms
push
add
pop
scas
add
jbe
push
mov
lret
flds
pop
ja
and
outsl
mov
daa
ljmp
clc
jmp
cmpb
lahf
xor
filds
clc
ljmp
hlt
lcall
or
mov
add
lret
sbb
andl
ret
fstp
mov
pop
push
gs
mov
dec
movsl
xchg
adc
pop
cli
xor
sbb
mov
mov
mov
outsb
inc
pop
ret
insl
out
inc
std
mov
push
cmp
cmp
xor
ss
and
and
xor
in
std
add
ja
ja
and
and
cmp
ja
adc
cmp
jno
sarl
jns
mov
incb
pop
jg
or
xlat
add
inc
inc
push
push
rcl
xlat
push
push
adc
in
adc
add
dec
addr16
pop
ds
pop
es
test
data16
pop
push
inc
inc
and
sbb
pop
test
fbstp
ja
fbld
aaa
aaa
aas
add
rcr
jg
push
das
daa
daa
and
adc
add
outsb
add
insl
fbld
dec
add
insb
adc
add
aaa
lds
repnz
and
add
xor
mov
push
xor
add
call
pop
xchg
jg
insl
sbb
rclb
pop
add
add
add
push
add
sbb
lock
add
xchg
lahf
inc
add
adc
stos
insl
fwait
cmpsb
mov
ror
add
hlt
sbbb
xchg
push
cs
cltd
imul
repz
xchg
rorb
test
addl
divl
cmpl
cs
out
dec
repz
sbb
mov
insb
shll
mov
out
pop
int
mov
pop
pop
test
cs
jg
ss
dec
daa
rclb
adc
push
mov
mov
dec
repnz
fildll
cli
and
add
or
push
push
and
push
push
push
xchg
push
mov
pop
push
sub
push
inc
add
dec
hlt
sub
push
push
mov
and
sub
add
adc
rorb
das
ds
cmpsb
ret
out
shlb
je
jb
enter
jp
js
add
decl
lock
outsl
add
add
xor
xor
ds
cmp
cmp
add
daa
es
adc
das
cs
jecxz
add
mov
sub
sub
add
add
add
sbb
test
push
add
add
decl
pusha
fmuls
push
push
or
pop
inc
add
pop
pop
cld
pop
pop
sbb
hlt
dec
fcmovu
lods
add
add
or
push
or
sbb
in
and
add
inc
out
neg
fcomip
mov
dec
out
sbb
add
sbb
adc
in
sbb
jo
xor
xor
mov
ja
adc
sub
cmpsb
xor
xchg
xchg
fsubrs
call
xor
rcrl
adc
mov
sar
cmp
sbb
jno
out
mov
flds
arpl
add
inc
fildll
enter
test
mov
mov
and
decl
mov
sbb
inc
ljmp
mov
pop
sbb
incl
cmp
push
ds
outsb
dec
in
dec
mov
test
mov
stc
ret
jg
jnp
aam
dec
pop
fcoml
das
sahf
add
mov
scas
icebp
or
xor
fistpll
mov
es
push
mov
sbb
aas
push
sbb
or
loope
stos
call
xchg
xchg
jmp
inc
scas
rcll
bound
sub
and
arpl
hlt
je
adc
jg
xchg
lahf
push
scas
push
rcr
cmp
fs
rcrb
xor
leave
jecxz
icebp
das
pop
dec
inc
xorl
ljmp
sub
ljmp
mov
xlat
push
mov
mov
addl
fidivrl
rolb
movsl
add
movsb
push
sbbl
add
push
push
ljmp
stos
push
mov
jg
es
adc
rolb
rolb
dec
cld
or
inc
les
mov
rorl
add
add
ljmp
rcll
or
gs
add
inc
insb
in
dec
mov
insb
add
stos
add
or
pop
cmp
rcr
lcall
sub
pop
lahf
or
sub
push
cmp
or
or
mov
shrl
add
xchg
push
mov
push
add
sbb
rclb
int3
mov
mov
enter
aas
or
add
jmp
test
lret
les
aas
fwait
dec
shll
add
add
inc
mov
mov
andb
rorb
adc
movsl
or
repz
dec
jo
addr16
cmpsb
mov
sbb
cwtl
cmp
xchg
jne
stc
adcb
shrb
les
cs
cmpsl
push
mov
insl
rcrl
add
in
inc
and
js
cmpsb
jo
pop
xchg
push
rcrb
xor
pusha
pop
pop
xlat
lods
rclb
sub
aas
mov
aaa
inc
push
inc
pop
jmp
out
push
push
add
mov
addr16
mov
push
into
sarb
testl
mov
shr
cmp
cmpsl
je
into
mov
rclb
cld
sbb
jl
mov
jmp
jae
inc
fwait
mov
and
mov
push
aaa
lods
dec
and
push
mov
add
sbb
push
outsb
add
in
in
add
push
push
inc
loopne
ret
or
or
mov
call
mov
loopne
pop
loop
adc
sub
mov
imul
pop
adc
pop
inc
loopne
fisubl
add
fsubrs
decl
push
testl
mov
repnz
loopne
and
outsb
outsl
pop
pop
in
adc
add
loopne
jnp
lods
mov
in
dec
push
fs
or
adc
push
mov
pop
nop
pop
dec
repz
lods
xor
inc
jns
dec
mov
mov
loopne
dec
add
add
add
jbe
or
or
rclb
or
jae
imul
dec
add
sbb
test
pop
inc
push
sub
xor
test
add
fs
mov
and
add
cmp
jl
out
aam
daa
pop
imul
loopne
jae
loope
aam
aas
mov
or
or
sbb
cmp
loopne
jne
cltd
int3
or
inc
loopne
negl
xchg
sbb
inc
fcomip
loopne
sar
xlat
out
loopne
xchg
sub
bound
or
cmp
outsl
in
jns
ja
inc
js
push
pop
sbb
loopne
arpl
push
xor
xor
repnz
push
jl
stos
xchg
loopne
or
loopne
push
sub
pop
dec
mov
or
push
insb
pop
js
divb
out
lahf
sti
aas
aaa
fbstp
dec
loopne
stos
fcmovnb
loopne
movsl
loopne
imul
cli
xor
or
pushf
jbe
add
sbb
clc
xchg
pop
inc
push
adc
dec
mov
xchg
clc
push
insl
rcl
out
dec
pop
jb
loop
push
mov
add
add
stos
mov
xlat
mov
inc
cmpsl
push
aad
mov
icebp
rorl
dec
adc
adc
loopne
imul
fbld
sub
xor
rcll
xor
aas
sub
adc
sub
ror
test
addr16
jb
dec
pop
fdivs
loope
and
add
mov
mov
int3
cmp
stos
add
add
xchg
stos
mov
loopne
stos
or
loopne
das
sbb
pop
out
loope
ficoms
aaa
xchg
loopne
lock
add
push
aam
push
arpl
scas
jo
add
stos
push
icebp
or
hlt
or
daa
fisubrs
test
mov
pop
mov
jno
sbb
lock
mov
inc
jo
jb
fists
scas
push
lock
xor
add
push
jo
pop
xor
int
jns
sbb
push
jnp
adc
pop
loop
or
xor
lock
movsb
adc
testb
jb
inc
dec
xchg
mov
shll
in
jo
out
sbb
ret
lods
inc
lds
insb
pop
shll
and
fxch
aas
fidivs
lods
imul
sub
adc
insl
mov
andb
cmpb
loopne
in
mov
mov
add
lock
stc
imul
idivl
inc
fucomip
jo
and
imul
punpckldq
jge
fistps
push
cltd
adc
jo
cmpsl
adc
cmp
sub
jecxz
xchg
fwait
ljmp
insl
dec
outsl
xchg
push
ud0
sub
or
push
std
lcall
dec
inc
pop
lock
jg
loopne
movsb
loop
jno
mov
cmp
sub
sbb
xor
in
pop
dec
push
xor
sbb
add
imul
sbb
xor
mov
add
cld
shl
or
out
jg
fnstsw
add
pop
loop
test
jo
mov
mov
out
testb
or
sbb
xchg
push
sbb
cmp
jbe
xor
mov
or
int3
adc
and
mov
adc
addl
mov
out
sbb
clc
adc
mov
cmp
jg
cmpsb
mov
notb
ss
lock
push
push
cmc
push
int
cld
in
push
hlt
adc
push
repnz
push
icebp
or
push
std
or
cld
insl
push
cld
pusha
push
sti
adc
push
stc
push
sub
sub
out
push
call
xor
loop
imul
stc
fwait
pusha
adc
push
in
or
push
xor
sub
stc
ljmp
call
add
push
push
push
xchg
mov
push
xchg
push
push
push
lahf
pop
push
popf
push
dec
push
fwait
dec
push
cwtl
push
pop
push
or
push
xchg
push
test
push
adcb
mov
orps
daa
push
mov
push
mov
push
mov
push
push
fwait
mov
push
mov
push
push
mov
dec
push
mov
mov
push
cmpsl
inc
push
cmpsb
push
adc
pop
push
mov
outsl
incb
push
cmp
in
push
test
mov
push
addb
push
ficompl
push
add
push
arpl
adc
or
or
adc
push
dec
adc
mov
push
pop
outsb
push
mov
adc
inc
adc
dec
push
or
cmp
push
or
cmp
not
insb
push
pop
rclb
jbe
push
dec
push
stos
adc
enter
ret
ja
mov
outsl
push
hlt
push
add
int
rclb
adc
push
jne
adc
push
data16
mov
jle
push
imul
xchg
inc
ficoml
xor
sbb
xor
sbb
or
push
jns
push
aad
push
jge
push
adc
xchg
cmp
and
push
inc
adc
cmp
adc
rorb
push
push
inc
adc
jl
push
adc
lcall
push
pusha
add
and
push
ds
adc
sub
ja
push
cs
push
pop
addr16
out
cmp
pop
addr16
repnz
lock
out
mulb
push
hlt
addr16
repnz
push
lock
addr16
push
mov
cli
outsl
out
mov
stc
push
mov
clc
xchg
addr16
stos
addr16
addr16
out
out
addr16
jcxz
jmp
std
loopew
cld
loopnew
out
cli
addr16
push
clc
addr16
out
in
push
in
in
loop
jmp
loopne
ljmp
jmp
ljmp
xchg
addr16
push
out
out
addr16
xchg
addr16
push
lahf
addr16
popf
addr16
push
pushf
addr16
out
fwait
addr16
push
lcall
cwtl
addr16
test
push
andb
out
addr16
push
mov
mov
push
mov
mov
test
or
out
test
push
mov
adc
adcl
fwait
mov
mov
lea
mov
push
mov
fwait
mov
mov
push
pop
push
in
push
mov
push
call
adc
xchg
push
jne
xchg
je
xchg
push
jae
fwait
mov
push
xchg
push
jno
nop
jo
lahf
push
jg
sahf
jle
stc
fwait
mov
push
pushf
jl
fwait
push
jnp
lcall
cwtl
mov
push
xchg
push
xchg
test
push
test
push
arpl
mov
push
adcl
push
outsl
push
mov
stc
fwait
mov
push
mov
push
mov
push
push
mov
push
mov
adc
mov
stc
fwait
mov
adc
adc
push
adc
pop
push
mov
mov
push
mov
sbb
push
sbb
sbb
fwait
mov
push
cmpsl
pop
push
cmpsb
push
push
push
movsl
add
push
cmc
push
add
outsl
mov
adc
push
repnz
add
repz
lds
je
rcpps
push
push
push
std
xor
jnp
or
sti
adc
push
cli
push
push
stc
or
mov
nop
push
or
adc
out
push
push
in
mov
cwtl
push
jecxz
push
push
loop
push
push
loope
sub
push
push
out
adc
out
push
pop
push
in
pop
push
pop
mov
jmp
pop
push
ljmp
push
pop
push
xchg
fwait
loop
mov
push
addr16
xchg
push
xchg
push
adc
adc
mov
push
bound
adc
push
fs
adc
push
outsl
push
cmp
cmp
insl
push
fwait
adc
imul
cmp
push
cltd
adc
push
imul
push
sbb
fstpt
lcall
push
adcl
adc
cmp
gs
sbb
push
sbb
lea
push
pop
mov
mov
sbb
push
push
push
mov
push
mov
mov
push
inc
push
mov
inc
rclb
pop
aam
int
adc
mov
inc
push
mov
loop
inc
clc
out
out
adc
mov
dec
push
mov
out
adc
push
dec
push
mov
push
cmpsl
out
cmpsb
outsl
adc
cmpsb
push
js
adc
movsb
push
jbe
mov
jne
mov
inc
push
mov
jnp
scas
push
jl
lods
out
cmpsb
outsl
inc
push
lods
push
jg
adc
stos
push
jle
test
jo
test
jge
notb
rcll
fists
push
repz
fstl
jp
cs
push
fistl
fsts
xchg
cld
adc
push
stc
push
rclb
ja
push
mov
adc
out
cli
mov
stc
push
jecxz
clc
push
loop
popf
push
loope
push
loopne
test
push
lcall
push
pushf
push
in
push
out
in
push
cltd
push
xchg
push
push
xchg
push
lds
les
ret
push
xchg
push
ret
call
push
rclb
push
sahf
push
into
push
popf
push
int
pushf
push
int3
push
fwait
push
lret
push
lcall
lcall
push
enter
notl
notb
les
add
adcb
push
lret
lock
push
call
cld
decl
push
out
mov
in
mov
mov
jecxz
mov
ljmp
rolb
mov
fdivl
push
out
push
mov
add
mov
repnz
pop
adcb
push
jmp
cmpsl
push
incl
push
movsl
push
xchg
push
movsb
push
xchg
push
mov
push
xchg
push
mov
scas
clc
call
push
scas
push
lahf
push
scas
push
sahf
push
negb
je
pop
pop
jb
pop
xor
pop
ja
push
pop
jbe
icebp
pop
push
jb
pop
divb
hlt
je
pop
repz
pop
icebp
je
pop
int3
je
pop
lret
cli
pop
leave
je
pop
divl
pushl
sti
je
pop
xor
pop
aaa
jne
pop
xor
pop
jl
call
pop
dec
jne
pop
dec
jne
pop
push
jne
pop
imul
adc
lcall
jbe
lcall
pop
dec
jne
pop
aad
mov
jne
pop
jle
mov
jne
pop
jo
mov
jne
in
pushl
pop
lds
pop
jbe
pop
jbe
push
jbe
pop
les
pop
jne
mov
pushl
pop
lds
pop
pop
jae
pop
pop
jae
pop
pop
jae
pop
pop
jae
sbb
mov
lcall
pop
dec
jb
pop
inc
jb
ss
pop
inc
jb
pop
imul
in
je
pop
in
je
std
jg
cmpsb
pop
mov
movsb
pop
ljmp
data16
pop
arpl
outsl
cli
das
clc
pop
jnp
scas
pop
fdivp
pop
push
ja
pop
push
ja
fidivl
pop
push
lcall
ja
pop
push
ja
pop
and
pop
pop
ja
pop
pop
ja
pop
inc
ja
pop
inc
ja
pop
ljmp
stc
pop
jno
clc
pop
jb
out
add
pop
add
pop
add
pop
add
ljmp
lcall
jbe
pop
pcmpeqd
pop
push
jbe
pop
or
in
pop
inc
ja
pop
jle
ljmp
add
pop
jge
xchg
pop
or
xchg
pop
or
pop
or
pop
or
pop
jne
popf
scas
jno
lcall
jb
pop
loopne
cltd
pop
pushf
jb
pop
clc
jb
pop
dec
ja
pop
dec
ja
pop
dec
ja
pop
dec
ja
push
lcall
jbe
pop
gs
pop
fs
push
jo
pop
sti
jb
pop
xchg
jb
pop
loope
mov
lcall
pop
stc
jb
pop
mov
pop
cld
pop
cli
jb
pop
in
mov
ljmp
pop
push
mov
ja
pop
std
jb
pop
in
mov
cmpsb
sub
mov
xor
mov
pop
xor
les
incl
pop
jbe
movsb
push
jo
pop
inc
jo
pop
cmp
pop
cmp
pop
adc
ljmp
pop
pop
jno
pop
inc
je
ss
outsl
ja
pop
dec
ja
pop
icebp
fbld
pop
imul
pop
imul
pop
sbb
scas
mov
pop
bnd
pop
mov
pop
pusha
xchg
pop
clc
add
popf
pop
dec
jne
pop
ret
pop
repz
pop
movb
outsl
cmp
push
pop
mov
stos
pop
hlt
mov
mov
xchg
pop
xchg
pop
test
pop
test
pop
adcl
adcb
cmp
mov
adcb
push
mov
pop
lea
pop
mov
pop
mov
pop
mov
pop
mov
call
pop
mov
pop
mov
cmpsb
pop
mov
movsl
pop
mov
movsb
pop
mov
mov
pop
mov
mov
call
pop
mov
scas
pop
mov
push
lods
pop
mov
pop
cmc
pop
push
pop
hlt
pop
push
pop
repz
push
or
lcall
pop
push
pop
icebp
pop
push
pop
lock
push
pop
lcall
pop
pop
pop
pop
std
pop
lock
pop
in
lcall
pop
pop
pop
cli
pop
pop
pop
stc
add
clc
pop
pop
pop
out
inc
pop
out
inc
pop
in
inc
pop
jmp
pop
inc
pop
jecxz
inc
pop
loop
inc
pop
loope
inc
pop
loopne
inc
pop
out
pop
dec
pop
out
pop
dec
pop
in
pop
dec
pop
in
pop
dec
pop
jmp
dec
pop
ljmp
pop
call
pop
ja
xchg
pop
jbe
xchg
pop
jne
ljmp
cli
xchg
pop
je
xchg
pushf
pop
xchg
pop
jb
xchg
pop
jno
nop
pop
jo
lahf
pop
jg
sahf
pop
jle
lcall
pop
jge
pushf
pop
jl
fwait
pop
jnp
lcall
pop
cwtl
pop
js
xchg
pop
xchg
lcall
pop
gs
test
pop
sbbl
sbbb
sbbl
pop
pop
outsl
pop
mov
lcall
pop
insl
pop
mov
pop
mov
pop
mov
pop
pop
mov
push
pop
mov
adc
pop
mov
adc
lcall
pop
adc
pop
adc
pop
adc
pop
pop
pop
mov
pop
sbb
pop
mov
lcall
pop
sbb
pop
pop
pop
cmpsb
pop
push
pop
movsl
pop
add
pop
mov
pop
add
pop
add
lcall
pop
push
pop
scas
pop
mulps
pop
data16
pop
gs
pop
fs
arpl
pop
jmp
pop
popa
lock
pusha
lcallw
data16
pop
outsb
data16
pop
insl
data16
pop
insb
data16
pop
imul
push
jmp
pop
imul
pop
pop
data16
push
in
adc
data16
adc
pop
adc
jmp
pop
adc
pop
adc
pop
pop
data16
pop
push
in
pop
sbb
data16
sbb
pop
sbb
jmp
pop
sbb
pop
sbb
pop
pop
xchg
pop
push
xchg
pop
add
xchg
pop
add
pop
add
jmp
pop
add
pop
push
data16
pop
pcmpgtd
pop
or
data16
pop
or
pop
or
jmp
pop
or
pop
or
pop
aaa
data16
test
data16
addw
fwait
int
inc
addb
addb
mov
fldcw
inc
mov
inc
mov
int
mov
inc
mov
mov
mov
data16
inc
mov
mov
mov
mov
fldcw
mov
mov
inc
mov
inc
mov
inc
mov
pop
es
jmp
pop
sub
pop
mov
pop
shll
pop
fisubl
pop
fldenv
add
push
lods
and
adc
rolb
cs
mov
sti
mov
add
push
jmp
ja
cmp
roll
div
hlt
repz
repz
icebp
lock
std
cld
fimull
clc
cmp
pop
test
add
cmp
repz
pop
pop
pop
pop
pop
iret
repz
inc
inc
dec
dec
test
sahf
out
lcall
jns
out
jno
jo
jg
jns
out
jbe
jne
jns
repz
je
sahf
jle
push
jnp
sahf
idivl
cmp
out
jns
xlat
dec
ja
mov
aas
cs
push
daa
lds
es
repz
repz
jae
jb
jno
cmp
repz
into
jg
je
iret
repz
jbe
jne
jns
out
leave
push
jp
jns
out
sahf
out
cld
cmp
cmp
cmp
cmp
cmp
fdivp
xor
aaa
out
ss
jns
out
in
jecxz
sahf
out
sahf
loop
loope
loopne
js
out
out
aas
out
ds
out
call
cmp
repz
and
cmp
xchg
and
iret
repz
sub
cmp
repz
cmp
lcall
iret
repz
aad
aam
repz
repz
cmp
adc
divl
cmp
cmc
mov
push
mov
repz
jl
out
mov
or
or
pop
ljmp
mov
and
aas
inc
sub
pop
out
notb
jne
imul
arpl
jns
mov
lcall
imul
js
iret
pusha
repz
mov
addr16
fldcw
or
rcrl
rclb
sub
incl
cmp
and
pop
loope
stos
in
stos
jo
xor
imul
jmp
or
pusha
cmp
lcall
push
aam
lret
popf
inc
cli
decl
lock
das
add
cmc
or
sbb
xchg
mov
jnp
es
lea
data16
push
decl
cmc
jnp
mov
int
loopne
out
dec
imul
xor
jecxz
add
cltd
decl
xchg
repz
pop
mov
mov
lret
je
push
push
xchg
sahf
outsl
jl
add
jmp
push
negb
push
cmp
mov
nop
adc
das
ss
popf
xor
aas
push
sub
neg
inc
mov
sub
sub
xor
sbb
out
push
sub
pushf
aas
popa
mov
jb
ja
sarl
sbb
rcrb
and
mov
popf
in
and
sbb
mov
xor
out
hlt
data16
gs
gs
cmpsl
lahf
aad
jmp
roll
mov
pop
sbb
es
rorl
bound
leave
xchg
lods
test
popf
inc
mov
cld
jmp
jmp
xor
adc
add
vmovaps
mov
jle
mov
call
add
leave
stos
mov
aas
xor
and
shll
ret
fs
dec
fs
lds
lods
popa
repnz
push
cmp
es
lods
sub
sub
ss
jmp
cmp
arpl
in
mov
arpl
add
adc
arpl
arpl
or
ds
pop
ljmp
jns
jmp
std
jl
pop
or
cmp
ljmp
mov
arpl
arpl
lcall
inc
or
scas
rolb
adc
fcompl
dec
sub
xchg
jbe
lret
sti
jmp
xchg
bound
dec
adc
jmp
add
sub
xor
lds
decl
jp
fwait
and
xchg
ja
arpl
popa
adc
popa
add
popa
xor
popa
out
popa
xchg
shrl
mov
das
andnps
lods
ja
daa
adc
push
call
inc
scas
stos
sbb
callw
gs
or
jb
mov
pushl
sarb
mov
insb
jecxz
lea
outsl
imul
imul
hlt
imul
pusha
addr16
push
cmc
je
add
lcall
xchg
sub
outsl
jp
jns
int
loope
xchg
call
mov
cmc
les
in
jl
mov
xchg
in
incl
les
in
mov
outsb
pushw
pushw
data16
pop
gs
inc
lcall
gs
lea
xor
cld
push
sahf
in
shld
jns
fmuls
or
aaa
bound
bound
bound
aad
shlb
xor
cld
mov
sti
gs
jbe
dec
dec
adc
arpl
or
popa
pop
popa
inc
popa
dec
popa
dec
popa
imul
and
popa
in
loopne
adc
fildl
sahf
sub
movsb
scas
jle
inc
pop
sbb
ljmp
ljmp
scas
rcr
scas
pusha
cld
pusha
out
out
pusha
xchg
pusha
push
and
outsl
shrl
sub
add
fwait
std
push
jae
add
mov
xchg
and
outsb
jg
cs
pushl
insb
jo
sbb
or
testl
push
repz
and
sub
inc
and
mov
xchg
imul
inc
push
push
push
push
push
les
nop
es
incl
and
mov
fnsave
jae
movb
imul
ret
imul
imul
ret
mov
jmp
dec
sbb
jl
xchg
movsb
cmp
jbe
shll
arpl
arpl
bound
decl
push
xor
bound
jl
mov
outsb
mov
insl
lcall
lcall
push
insl
aam
into
cmpsb
sub
movsl
xchg
shrb
push
repz
and
insb
jns
mov
imul
push
push
push
push
push
push
add
loop
pushl
xlat
jb
xchg
int
adc
ljmp
push
inc
pop
out
push
inc
push
test
out
push
dec
loopne
ljmp
adc
insl
inc
cltd
inc
out
pop
lock
std
mov
jnp
and
in
call
aaa
fs
dec
fs
mov
test
or
scas
mov
inc
mov
cmp
inc
inc
out
incl
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
ja
jg
ja
psraw
jnp
inc
outsb
ret
ret
insl
insb
cmp
pop
dec
or
test
or
or
or
lcall
xlat
aad
rcl
rcl
fstp
fcmovnu
inc
mov
ret
ret
iret
into
int
lret
lret
div
cmc
hlt
repz
lock
std
cld
sti
cli
stc
clc
jmp
out
in
loop
loopne
out
in
in
jmp
jmp
xchg
xchg
xchg
xchg
nop
lahf
sahf
popf
pushf
fwait
lcall
xchg
addl
mov
mov
mov
mov
mov
mov
jmp
mov
lods
lods
stos
stos
test
adc
movl
or
push
adc
adc
pop
push
sbb
sbb
cs
add
push
add
femms
or
xor
add
ret
xor
sbb
sbb
ret
xor
sbb
add
xor
add
ret
xor
sub
sub
ret
xor
sub
inc
sti
inc
add
add
sub
and
add
sub
xchg
ss
jg
test
mov
sbb
and
sub
addb
jo
ljmp
add
lea
sbbl
mov
ret
loope
push
rorl
pusha
adc
push
add
dec
add
fdivr
mov
and
inc
fildl
mov
aas
add
adc
and
push
adc
add
xor
xor
outsl
decl
cmp
and
cmp
adc
adc
xor
and
rolb
add
xor
sbb
sub
adc
cmp
sbb
adc
or
or
xor
mov
add
and
sub
rcrb
les
push
fcoml
inc
invd
inc
inc
add
mov
incl
pop
add
pop
adc
jns
add
pop
sbb
inc
pop
and
adc
and
add
ds
push
sbb
xor
or
dec
pop
pop
icebp
jmp
ret
add
inc
jns
add
ja
ret
mov
adc
ljmp
ljmp
inc
sbb
inc
add
add
adc
rclb
push
pop
mov
sbb
push
addl
push
add
inc
add
jb
outsl
mov
push
imul
push
jge
call
shlb
inc
push
mov
int
or
and
push
mov
loopne
pop
or
or
mov
xor
and
mov
push
dec
mov
dec
xor
fcmovnu
push
or
stos
and
cmp
or
and
sar
lock
ds
push
fcompl
mov
or
stos
add
orb
inc
and
test
adc
or
daa
insl
js
and
and
xor
cmp
js
mov
call
add
xor
add
xor
pop
lcall
and
sbb
add
outsl
and
add
or
add
popa
add
jbe
jmp
adc
inc
add
addr16
sub
fwait
adc
xor
add
add
ret
imul
mov
jbe
ss
cmp
in
rol
add
lret
aad
add
shl
frstor
int3
add
int3
jmp
push
push
jle
inc
dec
movsb
dec
fcomip
lds
fs
and
and
pop
cvttps2pi
push
or
cld
ljmp
adc
sbb
loopne
jnp
jge
pop
add
inc
dec
dec
push
pop
and
xchg
xchg
ljmp
mov
mov
stos
mov
mov
mov
cld
ljmp
or
add
icebp
mull
xchg
jmp
jb
jne
push
dec
add
dec
insl
jnp
pop
jg
fs
inc
jnp
bound
ljmp
inc
push
jbe
push
dec
or
inc
mov
stos
add
cltd
mov
mov
stos
mov
mov
movsb
xchg
repnz
push
mov
xchg
mov
or
cmp
jne
add
in
mov
mov
loope
mov
cli
out
in
out
jl
jle
inc
in
imul
sbb
jecxz
or
xchg
pushf
push
sub
ffree
incl
loopne
rcr
leave
fmul
lock
loope
cwtl
mov
mov
cmp
das
sub
add
cmp
sbb
nopl
inc
add
add
in
sub
cmp
decl
add
shlb
cmp
cmp
cmp
pop
sbbb
mov
mov
mov
testl
loop
mov
mov
scas
mov
ja
std
pslld
xor
xor
js
and
aad
outsb
cld
adc
leave
aad
cmp
sub
xor
sub
jle
sub
data16
repnz
add
aad
add
enter
or
iret
call
rol
fld
fcmovne
fdivp
scas
cmp
cld
mov
ret
aam
dec
jecxz
aam
shl
out
add
in
in
inc
les
std
into
ret
or
stc
add
inc
sbb
add
sbb
hlt
mov
cwtl
add
inc
dec
pusha
fs
xchg
inc
icebp
decl
inc
cmp
inc
add
adc
mov
fcomip
outsl
jg
cmp
xor
and
jne
jo
sub
cmp
mov
and
cmp
data16
pop
sbb
pop
push
inc
pop
push
push
add
xor
out
loope
jecxz
out
add
out
in
mov
or
or
call
adc
pop
lcall
sbb
sbb
adc
push
pop
push
inc
pop
add
outsl
clc
testb
add
ljmp
sbb
push
add
mov
add
std
neg
jno
pusha
dec
push
dec
add
xchg
inc
dec
or
push
pop
pop
clc
mov
dec
lods
add
stc
repnz
clc
add
ljmp
loop
in
test
in
loope
in
loop
movsl
call
out
call
xchg
addb
adc
push
push
lret
lcall
sbb
inc
inc
dec
add
dec
add
pop
mov
hlt
mov
mov
mov
mov
stos
mov
fisttps
mov
mov
xchg
fwait
xchg
or
mov
or
mov
and
adc
add
jle
add
rcrb
adc
adc
addb
mov
pop
jl
add
stos
cmpsl
mov
mov
decl
sub
or
sbb
pop
adc
add
xor
or
mov
add
dec
pop
pop
inc
lock
inc
dec
push
push
js
call
inc
fcompp
int3
fimull
ret
rol
ljmp
inc
ret
ror
add
inc
rcr
enter
aam
push
loopne
mov
or
enter
pop
fidivrl
sbb
incl
add
aad
jmp
inc
add
test
jg
push
mov
mov
cli
shr
loop
call
hlt
loopne
sub
fs
sbb
or
add
inc
cmp
adc
cmpb
cmpsl
mov
add
push
or
cmp
add
jmp
mov
xor
clc
and
add
inc
ret
pop
hlt
in
lock
call
call
lret
jg
incl
enter
out
roll
cmp
aad
out
rcl
aam
push
mov
int
dec
mov
mov
inc
lods
dec
dec
pop
jo
pop
push
add
pop
inc
mov
cmp
add
mov
pushf
xchg
jle
fwait
bound
aas
adc
and
sub
or
add
lods
sub
test
mov
lods
add
inc
dec
lock
inc
xchg
pop
pop
mov
fcmovnb
ljmp
adc
fmul
mov
test
mov
cmp
or
mov
jo
jb
push
inc
fs
jl
arpl
dec
cld
pop
loop
mov
movsl
mov
sbb
pop
xor
es
cmp
insb
adc
pop
dec
ljmp
and
dec
inc
add
add
or
jle
add
fildl
fmull
ffreep
vpaddusw
inc
jae
inc
xor
movsb
mov
lock
or
gs
mov
into
into
fxch
fmulp
fdivp
in
inc
call
ljmp
jmp
add
in
loope
ret
loopne
decl
ror
roll
xor
inc
inc
pop
jne
push
sbbl
jg
lods
dec
inc
cli
pop
hlt
push
sbb
add
aaa
xor
lcall
sub
add
xor
xor
jno
jge
bound
daa
xor
sbb
mov
or
add
cld
call
movhps
adcb
sbb
shl
shrb
jno
popa
inc
push
inc
and
loope
mov
sbb
and
rolb
incl
or
or
sub
jl
add
add
or
xor
in
jo
loop
xor
inc
decl
cmp
adc
or
xchg
popf
mov
lea
aaa
cld
pop
andb
test
mov
shlb
ret
push
outsb
add
or
cmp
rcrl
mov
sbb
rol
sbb
lock
cli
aaa
bound
dec
and
push
mov
pop
dec
push
dec
dec
cmc
pushl
lret
push
imul
push
push
pop
push
jo
pop
pop
popa
jbe
inc
push
sbb
loopne
inc
push
push
je
inc
icebp
add
adc
pop
or
or
pop
call
push
lock
leave
roll
add
aaa
loopne
dec
rolb
xlat
rcl
shl
dec
cld
loopne
incl
stos
in
incl
cld
loop
iret
jmp
add
sti
jmp
ret
lock
incb
ror
int
fistps
and
pop
or
je
sbb
scas
mov
mov
mov
lcall
call
cmp
or
adc
sbb
enter
ret
decl
mov
out
jmp
in
clc
xchg
mov
pop
repz
in
or
out
clc
jg
hlt
out
lret
flds
lock
ret
fsubrs
rol
in
aad
sbb
popf
push
into
mov
mov
add
mov
repnz
jmp
mov
cli
sti
mov
orb
mov
push
adc
adc
callw
cli
mov
dec
out
in
xchg
movsb
mov
stos
mov
sbb
inc
and
and
std
incl
xchg
rclb
xchg
mov
push
jmp
cli
mov
stos
mov
jmp
xchg
mov
mov
xor
cli
mov
cmp
cltd
xor
sub
xchg
xchg
push
lds
cwtl
xchg
fwait
mov
clc
rcl
out
lret
lock
std
pop
sub
scas
mov
mov
movsl
movsb
stos
dec
adc
clc
das
inc
mov
cmp
addb
jmp
add
es
test
cli
cmc
repz
push
adc
mov
lods
mov
mov
and
rol
leave
nop
xor
mov
std
scas
jle
push
inc
pop
pop
inc
pop
push
inc
jae
push
pop
dec
inc
das
clc
decl
imul
dec
inc
dec
inc
inc
push
xor
into
and
push
fcmovbe
lret
in
ljmp
jmp
inc
mov
sub
add
clc
jecxz
rcl
sar
fcmove
add
pop
cmc
fcmovnu
lds
pop
mov
arpl
lcall
cld
cmpsl
mov
xchg
loopne
stc
jecxz
out
icebp
divb
in
aas
jmp
sbb
pushf
ljmp
cmp
ret
out
pop
andb
and
or
aas
mov
aaa
cmp
lret
and
add
lea
mov
mov
pop
pop
push
add
adc
push
push
adc
add
les
inc
notb
loop
add
mov
and
adc
outsb
jg
ds
pop
sub
cs
sub
jbe,pt
pusha
loop
or
push
cmp
outsl
inc
ja
xor
add
cmp
out
cltd
jmp
xchg
xchg
adc
gs
push
lock
add
add
pop
and
scas
mov
pop
inc
aaa
pop
push
mov
loope
xchg
lods
jg
leave
and
jecxz
lcall
shrb
or
mov
shrb
mov
add
loop
lods
addl
out
sahf
nop
test
or
jg
add
outsl
pop
loop
pop
inc
add
add
inc
arpl
hlt
pop
adc
pusha
dec
push
jl
mov
mov
sub
ja
pop
int3
mov
mov
scas
jp
cld
clc
lods
in
add
add
movsb
stos
mov
fcomip
sbb
clc
cli
movsb
xchg
test
fstp
mov
push
jg
mov
inc
dec
push
add
or
dec
pop
add
inc
cmp
lock
sbb
jle
sbb
dec
lcall
mov
andl
fimuls
adc
cmp
sbb
xor
dec
fs
bound
arpl
push
jle
jns
jo
rol
ret
sarb
in
leave
aad
test
iret
outsl
rcrl
and
pop
adc
add
push
sbb
adc
mov
xchg
push
mov
pushf
or
mov
lret
mov
arpl
mov
push
add
stos
inc
sbb
and
movsl
mov
out
decl
adc
push
imul
jbe
jno
push
inc
sub
ljmp
gs
dec
inc
js
ja
mov
sub
push
js
enter
add
outsl
jbe
es
decl
lock
insl
push
add
aaa
jecxz
fcmovb
mov
fst
decl
loopne
ss
add
xor
add
pop
sbb
or
or
divb
outsl
out
pusha
insb
jne
and
fs
sub
imul
sti
fcomip
jl
jge
add
testb
lock
stc
loopne
and
mov
adc
call
mov
jmp
idiv
jg
add
data16
lret
repz
add
ret
rol
movl
mov
push
mov
inc
jle
outsl
shrb
fs
xor
jb
jnp
push
dec
decl
jmp
add
push
sbb
or
sbb
sbb
cmp
es
jmp
add
dec
cmp
adc
or
adc
xor
outsl
cli
and
adc
minps
pop
adc
adc
out
clc
imulb
add
sub
add
pushf
add
cmp
in
xchg
or
movb
or
add
push
movsbl
mov
sbb
sbb
ja
sub
mov
mov
jecxz
in
add
decl
in
fcom
shlb
int3
fmul
loop
fbld
ror
enter
fadds
mov
mov
stos
fwait
mov
add
jns
xor
sbb
fs
xor
adc
dec
lods
xchg
cmpsl
sarl
stc
stc
addl
mov
std
fcmovbe
fcmovnb
flds
iret
fdiv
std
sar
call
add
cmp
cmpsb
in
int
out
out
div
add
int3
loope
in
incl
in
cld
stos
fld1
clc
sti
out
out
out
jmp
jecxz
mov
adc
add
adc
sti
pop
std
call
adc
sbb
add
aam
jecxz
fmul
faddl
loopne
xlat
lret
icebp
push
cld
jg
call
out
icebp
lock
or
lret
leave
and
enter
or
sub
daa
and
or
pop
or
cmp
push
adc
push
sbb
lcall
nopl
sbb
inc
push
aaa
or
and
lock
cld
push
sbb
and
add
rclb
push
jge
mov
mov
notb
xor
loop
fimull
inc
fwait
lods
sbbb
incl
std
mov
cwtl
mov
mov
mov
pop
icebp
add
mov
rcrb
les
xor
sbb
adc
inc
mov
nop
add
push
ljmp
pop
sbb
adc
sub
outsb
addr16
insl
add
insb
jg
dec
xor
push
adc
sub
in
jne
daa
push
adc
cmp
xor
jl
pop
dec
pop
pop
pop
pop
dec
inc
inc
inc
fcomip
call
push
and
pop
push
xor
rclb
mov
fstl
lret
mov
orb
into
test
lret
shl
jg
jmp
cli
out
mov
mov
in
in
fdiv
jg
mov
sbb
clc
std
out
in
nop
mov
xchg
fwait
xchg
xchg
xchg
int3
mov
orl
call
iret
mov
jmp
fsubl
outsl
add
lods
mov
movsb
mov
push
loop
mov
in
mov
mov
push
push
push
inc
add
loope
or
adc
inc
push
sbb
add
pop
stos
decb
arpl
pusha
data16
jl
push
jg
jb
je
gs
imul
and
push
jg
jmp
push
das
sbb
push
adc
pop
push
push
adc
sbb
inc
lock
push
push
popa
and
xor
add
sub
sub
sub
or
sub
xor
and
aas
cmp
push
std
insl
sub
faddp
aad
lea
lret
into
iret
fld
mov
das
jb
add
xchg
ret
int3
loope
lcall
adc
or
lret
repnz
ljmp
lods
icebp
jmp
ljmp
out
stos
movsb
ljmp
lret
cli
cmpb
inc
push
mov
popf
rorb
cmp
and
lret
icebp
mov
les
ror
aam
cmp
adc
enter
rol
loope
pusha
sbb
push
mov
jmp
out
in
ljmp
mov
aaa
sbb
add
dec
popa
add
mov
xlat
test
fimull
jo
outsb
mov
inc
pop
xchg
mov
pushf
lahf
in
cmpsb
stos
mov
mov
add
out
icebp
aam
mov
enter
rcl
inc
icebp
mov
out
movsb
cmc
rol
repnz
lret
xlat
ljmp
or
xor
sahf
and
aaa
sub
out
iret
inc
adc
lcall
mov
in
stc
loop
add
ljmp
inc
es
dec
dec
dec
dec
or
inc
add
jg
and
xchg
icebp
scas
out
repnz
jg
out
push
add
jecxz
loope
icebp
loopne
sbb
and
loope
inc
add
je
push
ljmp
pop
or
insl
loope
push
jg
data16
arpl
push
jge
jge
imul
xor
adc
jle
data16
adc
add
adc
pop
adc
addb
sub
repnz
rcr
fst
adc
jecxz
leave
pusha
decb
sub
lcall
dec
insb
sbb
imul
arpl
adc
sbb
rcr
mov
sub
inc
jbe
orb
iret
cld
inc
fcmovbe
add
add
mov
add
pushf
lcall
decl
jae
sub
inc
popa
insl
cmp
outsb
adc
aaa
jg
pusha
lods
js
incl
cld
in
movsl
mov
mov
fildll
mov
mov
mov
mov
out
sti
mov
std
mov
add
sub
das
and
sub
jmp
into
and
das
sub
add
cmp
outsl
jae
sbb
inc
xchg
test
aad
push
lods
adc
pop
inc
push
pop
inc
inc
adc
sbb
push
jg
fistps
enter
adc
roll
cltd
rcr
ret
fstpl
adc
xlat
loope
add
loope
out
int
push
lds
leave
fcmovnu
test
leave
int3
lcall
call
cltd
rolb
aad
xlat
mov
dec
add
incl
jl
push
pop
dec
push
or
mov
mov
mov
add
ja
jne
jbe
add
fwait
xchg
cmp
sbb
call
jne
and
dec
add
int3
pusha
jle
inc
push
inc
pop
pop
add
fistpl
cmpsb
add
sbb
aaa
daa
jo
dec
push
push
and
popa
imul
add
ljmp
fiadds
pop
loope
orb
mov
cli
push
loope
rorl
int3
aad
aam
mov
xchg
in
add
push
add
or
push
clc
call
scas
adc
loope
rolb
out
mov
mov
lock
enter
cmp
inc
pop
push
xor
adc
fbstp
inc
dec
sub
dec
add
add
mov
stos
ja
cmpsl
test
sbb
sbb
pop
pusha
or
xchg
clc
cld
in
repz
xchg
in
fstl
xor
push
or
jnp
ss
jle
add
shrb
jg
out
adc
or
dec
fcmovnu
loop
add
jo
jmp
add
into
dec
inc
inc
or
aaa
add
or
inc
dec
inc
inc
pop
pop
incl
push
adc
dec
inc
dec
dec
mov
or
sub
and
sar
icebp
es
push
cmp
add
in
lock
mov
cld
add
sti
in
in
xchg
in
hlt
stc
jecxz
mov
lcall
icebp
std
cmc
out
add
mov
add
mov
rol
scas
int
popf
les
call
shrl
lret
xchg
or
cs
adc
pushf
or
test
or
jo
mov
mov
js
inc
add
ret
shrb
jae
sub
add
sub
mov
aam
push
add
add
adc
and
push
jno
jp
popa
inc
cs
sarb
sbb
adc
push
xor
adc
xchg
push
das
sbbb
cmp
cmp
xor
adc
int
push
and
shll
lret
pop
int
jg
loopne
and
adc
cmp
and
adc
cmp
cmp
xor
call
jo
pop
mov
ss
push
andb
add
pusha
xor
lds
add
add
adcb
sbb
mov
push
mov
movsb
xchg
adc
inc
shrb
and
push
xor
xor
sbb
ss
ds
pushl
and
add
shlb
xor
in
fcomip
es
xor
and
and
xor
aaa
fcompl
andb
cs
cmp
and
sbb
inc
xchg
push
add
jecxz
ljmp
inc
adc
mov
popa
push
adc
xor
mov
or
cmp
in
pop
cld
xchg
or
or
and
push
xor
rorb
hlt
xchg
xchg
inc
or
insl
cmc
or
clc
outsl
incb
adc
push
adc
adc
jmp
sub
jp
adc
push
add
or
mov
call
add
pop
adc
sbb
add
icebp
push
sbb
inc
adc
add
rorl
add
add
jg
hlt
sbb
repnz
push
add
add
xchg
std
nop
movsb
jo
sbb
xchg
mov
sbb
sbb
inc
add
dec
mov
adc
add
push
adc
insl
andl
lcall
lret
mov
mov
pop
fcoml
xor
mov
add
sbb
cmp
xor
dec
mov
in
or
sub
and
or
call
lock
cwtl
cmp
push
jp
jo
cld
aaa
bound
xor
cmp
enter
jg
lods
fidivrs
and
cmp
xor
xor
inc
jp
cmp
and
lock
pop
out
clc
loopne
cmp
adc
adc
nop
and
cld
xor
shlb
stc
inc
lock
xor
xor
cmc
push
push
xor
and
test
mov
jge
jge
adc
or
xor
pop
and
and
je
xchg
push
in
and
cmpsb
dec
mov
xor
and
push
cld
push
push
xor
mov
inc
and
addr16
add
push
call
xor
push
jo
pop
sbb
push
dec
sbb
popa
xor
xor
push
mov
orl
xchg
subb
negb
lods
xorb
nop
push
push
scas
adc
inc
sbb
call
mov
cmp
xor
and
insb
push
pop
adc
xor
mov
adc
data16
clc
in
pop
loopne
or
je
sub
adc
aam
and
xor
and
shrl
or
adc
adc
cmp
pop
adc
pop
mov
adc
lcall
mov
xor
push
mov
sub
repnz
popa
sbb
cwtl
outsl
mov
sub
xor
inc
pop
test
adc
loop,pt
or
sbb
lods
jp
lret
mov
in
push
mov
sbb
sbb
scas
clc
xchg
pop
add
xor
adc
sbb
cld
fs
xor
mov
cmp
or
cmp
sbb
jbe
adc
mov
and
inc
ret
inc
test
imulb
cmp
inc
ds
and
lock
inc
cli
jg
push
push
sbb
inc
xchg
out
mov
ljmp
add
stos
shrl
ljmp
mov
stos
shrl
inc
aad
mov
setb
add
cld
xor
lds
stos
sbb
inc
test
ret
out
push
movsb
push
lcall
aad
and
nop
pop
and
or
push
or
mov
sti
ljmp
fs
cmp
inc
jne
jb
dec
sub
js
mov
insl
aad
aas
fisubs
jo
and
jo
orb
sbb
pusha
cmp
nop
sub
pop
or
push
and
pop
pusha
xor
ja
jbe
pop
icebp
jb
jne
dec
xor
lcall
adc
pop
mov
xor
pop
pop
ljmp
pop
sahf
aas
cmp
xor
pop
push
pop
arpl
js
xchg
add
adc
xlat
or
cs
jo
shrl
sbb
adc
mov
push
add
jo
mov
mov
pop
push
push
in
or
sbb
sarl
sub
cmpsb
test
inc
scas
inc
pop
fiadds
aas
mov
mov
xor
fbld
test
jg
ljmp
call
sbb
mov
ja
ljmp
or
mov
xchg
or
out
rclb
mov
dec
jecxz
push
mov
mov
adc
fucomip
outsl
sti
push
pop
mov
mov
test
loopne
je
jne
mov
lret
loop
lods
test
sbb
stos
loope
mov
mov
push
xchg
pop
mov
cwtl
sbb
aas
fildl
add
mov
fildll
sbb
and
out
mov
out
mov
xchg
add
in
lahf
add
jbe
sub
test
push
fisubrl
fsubrl
jl
jmp
cmp
add
dec
fcmovb
hlt
aam
inc
lret
sarb
push
in
ss
ret
cmp
cwtl
dec
fisubs
jbe
pop
ret
sahf
pop
cld
push
xchg
and
sti
add
pop
push
fsubl
jae
fildll
setp
paddusw
or
add
sbb
fdivrl
xchg
add
xchg
add
clc
pushl
xchg
test
or
cmpb
andl
inc
mov
call
add
mov
inc
iret
pop
push
filds
adc
mov
pop
fistps
loop
xorb
popa
andb
adc
sub
jno
inc
pop
cmp
inc
add
and
push
push
gs
xchg
pop
test
push
and
mov
out
mov
ficompl
add
add
fdivrs
pop
pop
sbbb
fs
test
dec
sbb
xchg
loopne
mov
fwait
mov
pop
fiaddl
daa
add
pushf
test
lock
fbld
xchg
push
and
aam
adc
and
add
lds
inc
add
xor
push
add
sbb
xor
imul
mov
pusha
sti
add
insb
lock
ds
adc
push
jge
or
push
or
cmpsl
shlb
push
add
jg
or
hlt
sbbl
nop
mov
stc
mov
sbb
test
sub
sbb
stos
or
mov
pop
cs
sbb
cmp
lods
push
push
mov
or
adc
ficompl
push
jno
cli
aaa
rolb
adc
inc
add
aam
xchg
mov
inc
inc
test
movb
rclb
mov
and
and
inc
add
nop
adc
inc
inc
and
mov
add
loope
std
inc
dec
add
push
add
xchg
rorb
outsb
pop
inc
cltd
hlt
or
shlb
mov
fisttps
inc
dec
add
mov
rolb
lahf
jb
inc
push
jne
sub
rcll
aaa
sbb
mov
aam
inc
test
outsb
sbbl
incl
and
or
pusha
adcb
push
fstpl
xor
scas
mov
sbb
outsl
mov
mov
dec
add
mov
sbb
add
fcompl
mov
hlt
pop
add
lock
mov
ss
sbb
pop
add
pop
xchg
and
add
outsl
cmpsb
mov
push
cli
les
les
lcall
sub
inc
stos
scas
inc
test
inc
xor
sub
add
inc
outsl
add
add
xor
aas
fildl
ja
xchg
mov
enter
push
mov
stos
loopne
negb
inc
sub
jae
andb
cmpsl
rorb
bound
and
rcrb
add
inc
aam
test
movsb
inc
pop
nop
push
pop
incb
jmp
fisubrs
push
test
or
sbb
adc
aas
jecxz
cmpsb
aaa
mov
mov
loopne
push
lock
jg
aas
mov
jmp
stos
in
mov
dec
pusha
or
cli
insb
jg
add
pop
rolb
inc
adc
xor
push
bound
xor
xadd
addl
jmp
sub
push
scas
sub
pop
and
jg
dec
sbbb
jg
jbe
and
and
or
push
je
scas
clc
push
ss
mov
pusha
je
mov
push
cmp
cmc
push
out
adc
call
push
and
mov
add
and
pusha
pop
ret
mov
int3
mov
pushf
dec
xor
ss
aam
mov
pop
sahf
mov
xchg
mov
mov
fisttps
add
addb
incl
xchg
adc
dec
push
and
and
fld
pop
je
addb
aam
data16
push
mov
fimuls
adc
inc
sub
les
rolb
xchg
mov
add
xlat
add
add
cmpsb
decl
loopne
fsubrl
inc
cmp
lcall
test
cmp
pusha
add
cmp
std
push
mov
xor
adc
js
ficoms
pop
or
fcoml
xchg
push
pop
mov
jmp
add
shll
xchg
mov
nop
imul
adc
dec
mov
cltd
mov
inc
es
add
fsubl
add
in
dec
loopne
mov
mov
pusha
or
adc
mov
sbbb
xchg
push
add
clc
pop
hlt
mov
lcall
mov
shlb
negb
repnz
fstp
cmp
fdivr
or
sbb
mov
shrb
decl
adc
pusha
ja
add
pop
add
sahf
add
ret
dec
scas
das
push
call
jae
mov
mulb
cmpb
push
test
push
xor
pusha
and
out
pop
ret
inc
add
add
aam
sbbb
jmp
popa
and
pop
into
pop
fidivrl
xchg
scas
shlb
mov
and
decl
decl
xchg
or
test
inc
xchg
or
mov
or
or
add
lock
mov
ret
adc
or
filds
add
adc
rorb
mov
push
and
stos
jp
mov
adc
call
pop
mov
loope
pop
popa
add
pop
or
push
sahf
dec
mov
fbld
dec
pusha
adc
adc
or
inc
adc
outsl
js
adc
add
test
sbb
mov
mov
lcall
mov
adcl
adc
xchg
and
popa
andb
sub
mov
stos
pop
movsb
add
and
add
mov
hlt
cmpsb
or
aas
add
add
test
sar
xchg
adc
adc
fmull
imul
clc
add
dec
shrb
push
and
mov
mov
xchg
inc
loopne
xor
xor
or
add
mov
or
adc
loopne
negl
add
gs
inc
sbb
popl
add
inc
mov
jo
xor
push
xlat
jmp
cmp
adc
push
out
clc
jbe
xor
testb
push
aam
lcall
fs
inc
push
ret
incl
inc
pop
shl
shlb
aas
and
adc
add
xchg
rcll
or
mov
xor
dec
lods
clc
filds
adcl
add
aam
mov
jmp
add
or
mov
add
sub
icebp
outsb
push
add
and
jno
and
adc
add
dec
push
xchg
inc
push
aas
shl
incl
add
jno
mov
xchg
inc
test
push
aam
mov
lock
push
or
pop
xchg
add
jno
add
dec
xchg
adc
add
or
or
add
sub
inc
push
insb
inc
inc
push
fadd
subb
rolb
fiaddl
shll
pop
sub
inc
jmp
and
and
mov
aas
push
sarb
jmp
add
nop
sub
jb
loopne
sub
add
inc
ficoml
inc
fdivrp
jg
xchg
sahf
push
adc
sbb
inc
sbb
adc
fldenv
add
testb
dec
push
pop
cmp
inc
and
cmp
cld
sub
add
xor
add
stos
xor
sbb
xor
push
adc
pop
movsb
xorl
data16
test
aas
mov
adcl
xor
arpl
inc
pop
inc
into
jb
mov
cld
mov
inc
test
xor
insb
mov
scas
push
pusha
and
test
sub
and
in
mov
aam
ficoms
mov
fcmovu
and
shlb
fisubl
adc
ljmp
outsb
sub
cmpsl
and
inc
sarb
lret
mov
inc
dec
cld
push
mov
xchg
scas
mov
push
fidivrl
rolb
mov
pop
cld
lcall
xor
in
mov
clc
nop
sbb
inc
aas
adc
push
mov
loope
aam
xchg
ja
adc
xlat
in
adc
sub
ret
pop
je
imul
xchg
push
xor
fcomip
call
adc
push
add
ds
mov
fsubrl
pop
fmull
rorl
inc
cmp
xor
cmp
mov
lock
adc
jbe
xchg
icebp
pop
add
incl
mov
and
and
shrl
add
sub
push
mov
adc
add
mov
push
les
inc
cmp
ret
jo
xchg
mov
outsb
subb
fdivl
mov
add
cs
dec
and
push
inc
icebp
sbb
or
insb
inc
xor
cmp
imul
and
subb
xchg
or
pop
xchg
mov
out
adc
push
fisubl
scas
xchg
je
and
sub
xchg
aam
into
dec
aas
call
cmpsl
mov
scas
addr16
push
jbe
adc
xchg
loopne
xchg
lock
pop
pop
mov
jno
xor
mov
std
es
push
addl
call
rol
sub
mov
mov
aam
jae
hlt
outsl
pop
hlt
xchg
push
mov
xor
rcrb
inc
push
mov
push
dec
outsb
push
orb
jo
fadd
arpl
or
or
roll
push
and
data16
add
ljmp
les
pop
scas
add
pop
push
and
stos
push
nop
dec
mov
call
call
scas
stos
loope
outsl
addl
push
fimuls
xchg
loopne
in
jg
adc
cmpsb
pop
outsb
pop
mov
mov
fs
incl
outsb
or
dec
inc
sbb
loope
inc
fs
mov
cs
xchg
mov
das
jp
ret
sbb
mov
inc
inc
push
test
faddl
pop
ja
cmc
sbb
adc
mov
jb
inc
adc
or
pop
adc
pop
xchg
and
mov
aaa
jl
andb
jnp
pop
xor
sbb
outsl
js
cld
inc
adcb
xchg
push
mov
pop
xor
pop
hlt
daa
nop
mov
add
movsb
fcoml
rolb
ja
stos
rclb
test
jg
adc
push
in
adc
push
mov
in
mov
add
mov
pop
inc
cmp
fcompl
pusha
sbb
xchg
rcrb
and
inc
inc
mov
outsb
and
xchg
and
xchg
and
add
add
inc
hlt
fdivrl
jae
mov
or
shll
je
push
pushf
jo
fidivrs
or
fs
add
push
ljmp
insb
movsl
push
and
mov
sbb
mov
dec
push
fdivrl
lcall
dec
mov
jg
lods
pop
incl
add
fidivrs
or
imul
push
xchg
or
jg
aad
add
inc
add
jl
ja
jae
nop
or
or
adc
add
test
pop
shrb
cmpl
sbb
je
dec
arpl
mov
mov
and
sqrtps
dec
inc
cld
mulb
or
adc
or
sbb
aam
fbld
stos
mov
push
aam
jg
and
jo
test
scas
rcl
and
push
and
add
fsubs
clc
into
cmp
cmp
add
and
mov
inc
call
pop
or
test
push
add
add
cmc
dec
test
adc
mov
bound
xchg
test
inc
or
mov
mov
or
xor
jp
bsf
cmp
daa
add
stos
mov
pop
add
fiaddl
fiaddl
or
xchg
movb
xchg
and
mov
aas
insl
push
je
push
pop
add
cmpsl
test
mov
mov
push
fsubs
adc
cmp
add
sbb
outsl
or
jo
and
pop
pop
dec
ret
add
xchg
add
add
rorl
inc
clc
pushf
pop
and
data16
pop
push
inc
scas
pop
push
test
cli
inc
push
add
mov
jne
pop
je
and
mov
fwait
sbb
cmp
andb
xchg
adcb
push
outsb
jp
bound
test
sbb
aas
push
push
push
jmp
sub
scas
das
clc
orl
pushf
subl
insb
lcall
jl
mov
aad
fadd
or
jnp
mov
push
int3
mov
jge
mov
orb
add
js
or
bound
cwtl
push
cmpb
push
or
bound
ljmp
dec
cmp
insb
mov
cld
jp
adcb
insb
mov
fdivrp
int
mov
aas
nop
adc
push
popa
cmp
push
pop
and
mov
sub
andb
mov
dec
add
fbld
sub
loopne
jb
aas
orl
mov
test
add
sub
inc
ljmp
sub
mov
add
adc
lcall
std
daa
ss
mov
or
lcall
inc
or
stos
push
xor
fsubr
ljmp
push
push
ficompl
imul
in
mov
sbb
roll
aas
xor
jge
fiadds
lahf
ret
lcall
cmp
xorb
in
xchg
pop
incl
mov
es
or
add
add
cld
inc
adc
mov
pusha
sbb
insb
mov
and
mov
or
mov
and
push
add
add
mov
inc
or
push
pop
sub
insl
xchg
push
leave
xor
push
mov
adc
invd
mov
push
adc
or
das
mov
int
pop
add
cmp
inc
and
adc
or
shlb
dec
add
call
frstor
in
test
xchg
add
fcmovbe
and
inc
xor
pop
or
xchg
add
sbb
push
test
mov
aam
int
imul
int
adc
movups
ret
push
dec
add
or
addl
xchg
and
lcall
pop
inc
movsb
cmpsl
div
mov
fs
inc
test
add
aam
sti
incl
sbb
add
fimuls
daa
mov
adc
pop
repz
adc
outsl
ja
adc
or
add
outsl
or
inc
ss
pop
and
jle
push
and
mov
dec
insl
addb
ljmp
pop
adc
push
das
clc
cmp
sub
or
dec
dec
enter
pop
out
mov
sarb
mov
adc
and
or
xchg
sbb
sahf
test
rorb
and
cmpb
xchg
das
loopne
add
test
add
pusha
pop
mov
xorb
mov
push
orb
xor
lcall
add
xchg
ljmp
and
dec
loopne
fbstp
cwtl
push
pop
fs
push
mov
pop
shrb
std
addb
inc
inc
cmp
pop
adc
inc
mov
call
inc
add
popl
inc
add
pop
call
faddl
arpl
sahf
mov
shrl
fistpl
movsb
add
addl
mov
rolb
lock
loope
push
and
fistps
ret
jl
insb
add
push
aad
push
add
fcompl
mov
outsl
inc
adc
add
outsl
pusha
sbb
mov
ljmp
mov
xchg
or
rcll
andl
mov
fbld
push
scas
out
dec
pop
inc
push
jl
push
xor
push
add
fbld
add
push
sub
adc
aad
dec
xor
add
cmc
jg
lock
add
test
mov
or
adc
mov
mov
add
dec
or
push
mov
aad
das
test
mov
sub
sbb
scas
clc
mov
ds
add
faddp
pusha
pop
inc
rcr
inc
mov
inc
sbb
mov
fisubl
push
push
adc
inc
fcoml
push
pop
add
aaa
data16
mov
or
xchg
mov
sbb
pop
lds
add
mov
or
adc
mov
add
insb
and
sbb
fisubl
jae
adc
rolb
cmp
or
inc
add
test
and
add
je
pop
shll
and
inc
mov
test
inc
addr16
and
cmp
stos
mov
or
xor
ja
jmp
add
sbb
mov
outsb
xchg
ret
add
or
mov
loopne
dec
mov
inc
sarl
loopne
pop
add
fmul
pushl
pop
ficoms
add
inc
fisubs
fcoml
mov
mov
pop
and
xor
mov
roll
push
pop
or
in
negl
jecxz
inc
dec
sbb
and
xlat
scas
jb
push
pusha
xchg
push
faddl
mov
push
and
push
pushf
fcoms
cltd
inc
mov
push
lds
mov
push
mov
mov
aam
je
bound
test
std
in
push
mov
mov
push
mov
outsl
sar
nop
inc
inc
xlat
pusha
xor
jg
inc
dec
fwait
ljmp
inc
mov
sub
shll
or
xlat
sub
sub
add
mov
cmp
adc
lods
arpl
pop
mov
fwait
mov
pusha
and
sub
sub
jns
sub
andb
inc
pop
data16
decl
cld
es
loope
or
push
add
or
lcall
loopne
call
jmp
jge
pop
pop
rolb
lock
sqrtps
add
sub
and
mov
cld
pushl
inc
jle
rcrl
test
fsubl
mov
das
lds
lcall
arpl
or
sbb
mov
inc
push
and
adc
sbb
pop
push
and
jae
ficoms
xchg
pop
insb
mov
cmp
ficomps
sub
or
xor
add
pop
xchg
lods
clc
adc
push
push
jmp
and
pusha
or
test
or
mov
inc
pop
push
jae
and
test
mov
fistpll
or
mov
ret
nop
add
orb
std
outsl
les
mov
mov
and
or
aaa
inc
add
das
push
or
fcoms
jae
add
push
sbb
jg
or
mov
push
jl
adc
mov
imul
pop
lock
ja
lock
adc
jo
xor
sbb
imul
or
subb
and
pop
ret
jmp
or
arpl
add
loope
les
or
ret
rcll
adc
pusha
adc
push
out
mov
lcall
add
xchg
fldt
adc
and
add
orb
push
fstl
add
test
inc
stos
dec
aaa
push
shl
mov
push
mov
dec
mov
ja
mov
jg
cmp
test
and
mov
and
jmp
ficomps
jl
adc
and
sub
jno
aas
mov
sbb
sti
negb
adcb
outsb
sub
adc
and
clc
jg
push
adc
push
jno
mov
sub
ja
sbb
adc
jae
jns
popa
sbb
and
inc
push
and
sarl
mov
mov
lock
lret
inc
sbb
pop
div
mov
fisttpl
xlat
adc
adc
jae
aas
mov
adcb
inc
filds
pop
std
cmpsb
jecxz
daa
mov
mov
pop
mov
aaa
ljmp
cmp
shlb
mov
aaa
dec
and
lods
push
and
push
xchg
into
loopne
pop
mov
fsubs
add
loope
lds
xor
sbb
push
out
aam
xor
cmp
adc
and
adc
je
inc
icebp
add
mov
and
inc
cmpsl
test
ljmp
nop
adc
stos
nop
or
sub
sbb
and
adc
sub
sub
rclb
mov
fisttps
nop
movsb
pushf
lock
jno
incl
add
cwtl
and
adc
pop
test
scas
inc
lcall
pop
inc
dec
rolb
sahf
and
and
cmp
pusha
or
adc
push
add
pop
mov
xor
imul
outsl
sub
or
addr16
or
std
add
and
inc
mov
dec
sahf
ljmp
mov
jp
dec
inc
or
nop
add
ds
push
nop
stos
mov
adc
test
dec
int3
popa
add
insb
cli
fwait
pop
push
pop
push
push
mov
sub
fcoml
inc
loopne
cld
and
push
adcl
sbb
xchg
dec
les
mov
popa
ds
mov
mov
jg
mov
sub
and
js
sbb
or
sbb
call
mov
add
test
xchg
add
xchg
jmp
in
sbb
cs
les
jge
stos
pop
jo
pop
loopne
sub
cld
mov
sub
xor
inc
arpl
pop
gs
mov
pop
inc
repz
sbb
lcall
adc
addr16
mov
pop
sub
mov
shrb
test
cmove
jle
fcomip
mov
nop
push
testl
ja
lock
mov
outsl
or
nop
add
ds
add
add
add
leave
into
lock
pop
add
add
aam
outsb
cmpsb
mov
xlat
inc
xchg
incb
mov
cmp
and
cmp
jle
adc
mov
mov
and
ret
sbbb
xor
loop
ret
rorb
push
dec
ret
lock
push
inc
lds
sub
stos
jg
mov
adc
shll
mov
mov
pop
push
ljmp
mov
cmpsb
xchg
mov
adc
mov
rolb
push
push
and
fstpl
adc
inc
jae
aas
loopne
push
fisubs
jg
push
xchg
cmp
shll
jbe
or
push
pop
icebp
lcall
rclb
adc
sbb
pop
sarb
lcall
jmp
incl
inc
inc
icebp
js
xor
add
xchg
pop
add
and
dec
or
aaa
cld
push
shlb
sbb
sub
fisubs
addb
mov
nop
js
inc
adc
fs
pusha
dec
inc
movsb
dec
mov
decl
test
aaa
push
add
jns
push
pop
outsl
add
outsl
clc
outsl
mov
xor
add
subb
stc
jp
or
push
cld
mov
cmp
xchg
inc
jnp
jnp
dec
pop
cmpsb
cli
sbb
pop
mov
std
lock
outsb
and
or
sbb
dec
jecxz
mov
dec
popa
pop
push
decl
adc
int3
add
add
inc
push
cmp
or
push
dec
inc
lcall
cmc
roll
adc
xchg
icebp
mov
and
mov
dec
adc
pop
inc
sub
sbb
push
add
test
aam
adc
pop
pop
sbb
and
pop
inc
data16
fcoml
mov
sub
push
and
scas
jmp
and
add
inc
and
sbb
fiaddl
lcall
or
push
add
pop
add
fidivrs
sbb
inc
add
dec
cmpb
lods
or
scas
test
adc
loop
inc
or
enter
das
pop
movsb
add
fcomps
mov
xor
or
test
test
push
and
out
mov
xorb
fildl
mov
dec
or
push
add
mov
or
mov
sbb
dec
adc
test
cmpb
js
add
mov
cmp
sbb
inc
jb
sub
sbbl
and
pop
mov
push
jb
inc
rolb
in
dec
inc
fcompl
inc
sbbb
push
pop
lock
inc
faddl
and
imul
sub
or
test
mov
add
add
mov
fnstcw
int
movsb
xchg
fwait
mov
mov
adc
xor
push
out
add
dec
or
push
filds
add
pop
inc
lcall
fcoml
jae
dec
xchg
xorb
adc
inc
fdivs
shrb
out
cmpsb
push
jb
shll
ret
loop
orl
xchg
sub
and
jge
inc
popa
pop
les
or
dec
adc
mov
stos
cmpsb
nop
push
sbb
neg
mov
enter
xchg
xor
push
and
pop
negb
xchg
hlt
data16
scas
rolb
adcb
add
cltd
test
hlt
out
xchg
call
mov
cmp
lds
jle
aam
push
push
rclb
jmp
mov
fwait
inc
bsf
xchg
std
incl
pop
add
daa
add
or
xchg
ficoms
pop
and
inc
loopne
orl
clc
sbb
cmpsl
push
cmp
ret
int3
push
lahf
shlb
push
mov
jo
sub
bound
fbstp
hlt
movsb
push
notb
add
inc
fadd
rcr
push
cld
push
call
movsb
repz
loopne
mov
inc
shrl
add
push
filds
and
incl
xor
pop
addl
fiaddl
sbb
pop
rcrb
inc
pushf
mov
fistpll
adc
pusha
add
or
fsubl
xchg
mov
or
pop
and
add
push
fldl
insl
popf
and
pop
insb
loop
and
sahf
pop
inc
in
incl
loope
pop
loope
jl
mov
pop
and
inc
imul
subb
clc
jmp
aaa
and
insb
lahf
and
xchg
pop
loope
lock
sbb
in
and
push
jb
inc
adc
sbb
mov
stos
sub
or
or
adc
decl
in
jl
movsb
fs
addb
or
aas
dec
and
fiaddl
daa
and
pop
fcmovbe
stos
add
add
sub
mov
roll
push
push
scas
outsl
in
lahf
rcr
xchg
pushf
push
dec
orb
or
jb
lock
sub
push
fisubl
mov
mov
jmp
adc
or
stos
adc
dec
mov
mov
sub
sbb
mov
fdiv
xor
or
mov
adc
jg
or
sub
mov
and
lret
inc
pop
and
inc
aam
cmpb
inc
fcmove
orl
jb
xlat
sar
ja
adc
aas
loope
add
add
fwait
xchg
test
cmpsb
ljmp
out
insb
test
inc
mov
add
scas
pop
and
test
sub
push
adc
add
nop
loopne
mov
dec
mov
sarb
mov
push
add
dec
rcrl
fisttps
pop
pop
rolb
add
add
outsl
adc
pop
sub
pop
sarb
or
fmulp
and
sub
xor
sub
or
sub
cs
dec
pop
and
push
andl
xchg
or
es
add
fsubrl
xchg
mov
test
jo
mov
inc
push
not
mov
cmp
mov
jl
in
and
mov
and
adc
and
mov
bound
and
xchg
inc
sahf
clc
lds
loopne
xor
loop
pop
out
imull
scas
push
or
push
and
xlat
test
or
mov
aas
add
das
cmp
mov
lods
and
insb
push
jge
lods
andb
and
or
and
push
push
sub
dec
ret
mov
rorb
rorl
sbb
pop
inc
mov
out
add
lcall
fistl
dec
aaa
aam
rcl
push
insb
cwtl
and
xor
dec
cmp
nop
push
test
dec
and
xor
hlt
mov
push
xchg
pusha
add
sub
xlat
xor
and
sbbb
add
and
ljmp
das
mov
dec
fiaddl
shlb
or
push
shrb
aaa
add
fiaddl
xorl
or
lret
mov
repnz
xorl
mov
daa
nop
push
push
pop
mov
mov
test
add
pop
in
inc
pop
pusha
test
or
fcomip
out
jle
mov
and
mov
mov
js
inc
xorb
fwait
sbbb
mov
xor
ja
addr16
adc
add
addr16
jp
xor
sbb
add
jbe
fcompl
ja
xchg
and
add
ljmp
cmc
pop
push
add
adc
dec
add
inc
push
push
add
and
insl
ljmp
push
add
lret
xor
or
fimuls
inc
lcall
fmulp
or
push
dec
or
xor
sub
push
push
pop
loopne
fs
add
xor
dec
jbe
in
mov
fistpl
sbb
stos
add
ja
inc
adc
dec
ljmp
jo
inc
sahf
xor
inc
push
adc
in
add
mov
and
sub
lret
insb
mov
lock
fisubrs
sub
push
sbb
push
pop
fdivrl
pop
push
xlat
sub
dec
mov
lahf
adc
ljmp
xor
out
nop
mov
push
xchg
nop
add
adc
adc
add
nop
pop
inc
pusha
xor
pop
pusha
sbb
lock
mov
push
inc
push
test
je
dec
outsl
stos
or
or
pushf
and
mov
out
fdiv
rcl
xchg
xchg
xor
jp
push
jo
mov
push
test
aam
inc
jo
inc
gs
jbe
adc
aam
and
ljmp
js
inc
addb
and
loopne
adc
push
inc
hlt
aam
sub
orl
add
adc
aam
xchg
pop
repnz
and
push
fimull
xor
inc
adc
adc
or
or
inc
jnp
pop
add
lock
xchg
aam
xchg
jnp
xchg
mov
popa
pop
push
and
aam
dec
pusha
jp
fmull
cli
sub
nop
rclb
mov
xor
add
inc
nop
cmp
test
les
sbb
and
push
lea
sub
or
clc
jg
jo
and
xor
pop
loopne
mov
cmp
lds
ja
inc
mov
adc
push
addr16
hlt
mov
adc
cmp
loop
adc
jae
pop
fs
clc
fistps
jle
pop
adc
jg
jnp
mov
jo
dec
pop
add
fs
popf
mov
fisttps
pop
pop
xchg
add
sbb
subb
shlb
and
sbb
mov
xchg
sub
cmp
add
add
and
rolb
adc
dec
cmpb
decl
and
mov
test
add
into
jp
add
mov
dec
call
push
mov
xchg
loope
pop
rol
xchg
mov
icebp
dec
xchg
push
ret
pop
std
mov
add
nop
mov
adc
nop
mov
mov
mov
outsl
aas
mov
or
or
xchg
fldt
mov
data16
sub
push
or
jmp
or
inc
add
sub
mov
fcompl
push
xlat
arpl
jo
shl
test
mov
cmpsl
push
js
inc
pushl
jecxz
les
ja
xorb
jg
jecxz
mov
nop
adc
or
cmp
sbb
adc
mov
sbb
testb
and
mov
mov
ret
and
add
jp
inc
pop
mov
fmull
out
xchg
mov
and
and
test
push
pusha
dec
in
jo
adc
xchg
mov
shl
fistl
fisubs
mov
mov
mov
or
mov
add
std
push
stos
xchg
push
and
ficoms
lahf
inc
mov
cmp
loopne
fmull
mov
subl
sarb
sub
mov
in
mov
fs
and
lods
outsl
sbb
xchg
xor
jge
mov
inc
mov
cmp
rol
lock
aaa
xchg
mov
sub
aam
inc
insb
fwait
jne
pop
pop
mov
mov
out
mov
jmp
jo
pop
aam
mov
js
jg
xchg
mov
xchg
add
push
mov
dec
je
or
or
or
roll
incl
daa
shlb
shrb
sbb
scas
mov
inc
outsl
add
inc
xor
nop
fcompl
adc
clc
jmp
push
aam
and
test
pcmpgtw
xor
mov
out
rolb
or
dec
or
fbstp
add
and
aaa
add
lods
mov
pop
or
stos
push
adc
sahf
fisubrl
pop
sarb
jb
nop
sbb
lcall
sub
iret
insl
adc
push
pop
xor
scas
push
subb
aad
push
mov
das
mov
daa
faddl
push
mov
and
rcr
or
call
dec
imul
xor
test
xchg
inc
fs
sbbb
adc
fsubs
jne
or
mov
call
into
inc
scas
fcoml
inc
push
xor
push
adc
sub
or
ucomiss
loopne
or
jo
out
test
add
sahf
cs
pop
sbb
mov
dec
lock
or
adc
nop
scas
cmp
sbb
sbb
and
and
pop
dec
add
inc
test
test
lock
mov
in
mov
les
mov
and
push
xchg
push
add
mov
add
cmp
sub
filds
add
adc
cmp
call
mov
xchg
adcb
mov
cld
add
xlat
sub
stos
xor
add
outsl
and
mov
mov
mov
add
pusha
dec
pop
enter
out
cli
pushl
and
add
rorb
wrmsr
jnp
mov
push
pushf
in
rcll
jb
adc
lret
js
push
add
and
push
add
adc
xor
inc
jo
fs
xchg
add
mov
inc
xlat
add
cmp
add
add
add
fwait
mov
insb
cli
sub
int3
mov
cmpsb
addr16
inc
push
sub
mov
or
sub
lock
jne
loope
dec
and
and
hlt
fdivrl
push
or
sti
cmp
aam
adc
pop
or
adc
inc
xchg
push
clc
das
out
inc
add
inc
nop
out
pop
jg
popa
xchg
or
nop
sbb
sub
pop
push
add
pop
mov
adc
hlt
mov
dec
test
and
mov
hlt
adc
and
and
inc
pop
shlb
push
dec
sub
icebp
jbe
sarb
in
outsl
add
push
add
adc
and
jecxz
adc
add
inc
push
cmp
fmulp
mov
push
jl
jp
shlb
jo
xor
jo
leave
lock
sub
test
dec
sub
test
adc
cld
outsl
jl
add
pushf
repz
js
add
clc
pusha
and
addb
popa
inc
aam
aam
pop
adc
pop
xor
add
cs
mov
and
mov
inc
popl
mov
aas
pop
and
adc
add
rcr
mov
mov
add
mov
pop
fmuls
or
ret
jl
jmp
cmpsl
call
and
add
or
add
xorb
mov
into
mov
roll
and
or
push
inc
clc
pop
xor
add
nop
adc
enter
cmpsl
add
add
add
adc
jecxz
fcomps
mov
inc
sbb
dec
dec
adc
add
inc
mov
incb
cwtl
lods
sbb
imul
pop
test
clc
aaa
xor
mov
pop
pop
add
jp
nop
adcb
andb
mov
jecxz
rolb
rcrb
nop
inc
roll
lea
adc
fcompl
pop
orb
sbb
and
add
push
stos
test
pop
and
push
out
and
dec
pop
push
and
adc
inc
inc
or
filds
testb
cmpb
pop
shlb
jmp
sub
add
inc
ds
mov
add
in
data16
insb
sbb
testb
mov
inc
jbe
adc
subb
decb
and
push
add
adc
jo
pop
mov
inc
push
in
jo
adc
xchg
inc
and
xchg
mov
decl
and
adc
jecxz
or
add
sub
das
pop
mov
mov
orb
jle
mov
dec
loop
mov
stos
add
sub
ret
pop
and
push
add
lea
pop
nop
movsb
pop
mov
add
call
mov
fsubs
push
or
mov
fmull
subb
add
and
jg
add
inc
sbbb
pop
or
adc
sbb
rcrb
rcrb
test
fbld
mov
mov
push
test
faddl
outsb
mov
dec
jl
sbbb
mov
xor
push
mov
inc
add
mov
push
cmp
push
cs
mov
jp
addb
mov
test
out
push
fmuls
in
add
lods
fists
lods
mov
aam
xor
idiv
inc
addb
adcl
dec
addb
adc
pop
fldl
es
jne
or
add
mov
adc
adc
jle
lock
push
imul
shlb
add
sub
or
jg
loop
loopne
mov
lock
stos
sbb
sub
mov
xor
inc
imul
xchg
out
or
int3
in
push
adc
sub
sub
ja
xorb
sbb
or
mov
push
mov
sbb
test
and
mov
push
mov
xchg
jo
fistpll
andl
out
loopne
xlat
test
sub
mov
add
adc
sar
incl
rol
or
adc
and
add
add
adc
add
sbb
hlt
inc
add
mov
dec
aam
into
test
lds
dec
mov
push
sbb
ljmp
fs
and
rclb
dec
pop
dec
std
inc
mov
loopne
push
scas
mov
pop
mov
cmp
lahf
add
sahf
dec
out
pop
and
ja
and
cmp
faddl
add
sbb
dec
insb
test
dec
mov
and
cmp
mov
pop
or
push
push
pusha
add
adc
sahf
outsl
sbb
sub
xor
jecxz
test
push
inc
adc
stos
mov
movsl
mov
xchg
adc
mov
jmp
cmp
lahf
outsb
or
fcmovne
les
and
pop
fisubl
jo
pop
lcall
pusha
inc
add
subb
sahf
dec
fisubl
outsl
dec
mov
cmpl
xchg
dec
push
push
push
jmp
sbb
ss
cwtl
cmp
jmp
pop
inc
mov
mov
mov
js
inc
cmpb
pop
push
imul
push
jecxz
or
sbb
addb
fbstp
ljmp
cmp
and
dec
and
iret
mov
add
push
icebp
inc
add
adc
fwait
mov
data16
and
dec
xchg
mov
idiv
mov
bswap
jno
inc
rcrl
rcrb
jg
xor
outsb
shll
bound
xor
cmpb
out
push
xchg
orb
je
xchg
pop
mov
mov
insb
sub
ret
xchg
xlat
outsl
push
push
xlat
add
lret
add
mov
inc
cs
push
aam
and
es
mov
loopne
mov
pop
adc
cli
ret
mov
pusha
and
loopne
subb
fbld
subl
subl
mov
mov
and
jno
inc
push
push
xchg
orw
icebp
mov
mov
push
stos
or
add
bound
mov
add
add
shr
gs
push
or
stos
std
push
cmpl
xor
mov
outsb
and
shrb
lcall
fwait
and
sub
imul
and
out
fstpl
rorb
cmp
and
fstpl
and
scas
push
cld
mov
and
les
add
dec
ficoml
addb
or
and
cmp
in
jg
fmull
adc
pusha
sar
push
push
fisubrl
mov
pushf
adc
or
ss
nop
adc
and
cmpb
inc
pop
insb
shrb
mov
je
insb
mov
mov
and
adc
jo
test
out
xchg
push
arpl
mov
pushf
pushf
adc
sbb
fidivs
test
out
clc
lds
insb
or
insb
or
mov
idivb
pushl
xor
rolb
jbe
fmull
mov
ljmp
mov
in
fsubrl
nop
ret
loopne
inc
push
sub
pop
cmpsl
mov
dec
push
js
ret
or
jg
outsl
data16
inc
lods
mov
cs
adc
and
add
es
daa
shrb
mov
sahf
inc
roll
test
fdivl
jge
pop
push
push
nop
insb
ds
mov
ret
inc
decl
or
or
inc
test
and
cwtl
test
pop
xchg
mov
int3
popa
sbb
xor
add
pop
incl
aad
sahf
mov
mov
pop
sub
sbb
sbb
sub
add
repnz
inc
add
frstor
fcompl
fsubrp
and
das
sar
sub
pop
xor
mov
pop
test
repz
push
repnz
cli
scas
clc
or
fdiv
push
mov
pop
aam
mov
add
out
jp
sub
dec
or
adc
mov
jo
mov
mov
add
fimuls
push
sbb
push
and
mov
sub
loope
pop
mov
adc
call
pop
mov
add
xor
mov
mov
jp
inc
adc
and
or
push
fbld
or
mov
pop
add
push
adc
in
push
adc
sbb
pop
test
pop
push
mov
mov
mov
jmp
dec
pop
mov
outsb
loopne
rolb
pop
jo
pop
aam
scas
push
jo
add
lods
push
and
addb
fdivrs
rcl
rclb
and
inc
movsb
mov
cmp
pop
cmp
inc
fcoml
cmp
call
cld
nop
jb
shlb
jno
inc
add
add
jbe
jnp
dec
fiaddl
sti
movswl
jg
lock
mov
stos
test
add
nop
jg
mov
adc
insb
and
push
lock
add
jnp
sbbb
mov
add
inc
xor
adc
fcoml
xor
ret
in
xor
adc
loopne
pushf
mov
shlb
sbb
xchg
or
sbb
inc
mov
das
clc
add
push
adc
cmp
xor
rorb
repz
lock
sbb
add
mov
or
push
ds
jle
inc
ljmp
push
add
aam
incl
or
mov
add
mov
push
ss
cmp
or
incb
and
loop
sbb
dec
sbb
and
scas
adc
or
add
jmp
xchg
jo
mov
mov
inc
test
push
mov
test
mov
call
mov
xor
adcb
xor
stos
mov
and
cmpsb
add
pop
rclb
mov
adc
add
icebp
adc
sbb
adc
adc
add
cmp
inc
adc
xchg
rolb
incl
pop
cmp
add
inc
cld
sbb
fistpll
add
add
and
push
add
data16
and
pusha
hlt
ja
insl
pop
inc
pop
lcall
add
jg
add
sbb
xchg
push
ja
insb
inc
adc
sbb
add
or
add
sbb
add
push
xor
imul
adc
xor
push
adc
inc
shlb
cwtl
xor
pop
pop
inc
clc
xchg
fiaddl
push
mov
inc
movsb
outsl
add
and
mov
xorb
cs
js
ja
push
decl
cmp
fiadds
aam
push
insb
popf
and
ret
shlb
sub
mov
out
mov
rolb
xor
fistpl
adc
jno
pop
mov
push
insb
sbb
loop
mov
cmp
shrb
push
ja
adc
mov
sub
xor
fsubl
inc
shlb
push
mov
cmpsl
add
or
in
push
out
xor
hlt
push
cli
cmp
shlb
push
and
sub
stos
pushl
aaa
push
or
push
addb
xor
clc
incl
fists
pop
push
mov
decb
lock
add
cmpsl
test
add
les
scas
pusha
pop
mov
mov
roll
loopne
inc
cmp
pop
aaa
push
pop
icebp
xor
add
pusha
xchg
loopne
faddl
aam
insl
fbstp
dec
pop
adc
jno
add
inc
scas
push
jmp
out
add
pusha
dec
adc
or
mov
xchg
adc
movsb
addr16
cld
das
push
push
test
adcl
adc
or
xlat
lods
addr16
aad
pop
mov
scas
outsl
repnz
outsb
pop
shlb
pop
fs
pop
lock
jle
mov
into
adc
insb
lahf
and
xor
add
add
push
fs
xchg
mov
roll
es
stos
bound
stos
jg
or
fucomi
lods
insb
adc
inc
pop
aam
into
sbb
test
push
push
xchg
fcompl
add
cmc
ljmp
je
cmp
insl
popa
sub
aas
add
out
sub
cld
rorl
faddl
fmull
test
lahf
jl
fimull
int
pop
inc
inc
test
add
add
push
or
ljmp
sub
jp
add
and
test
fs
ljmp
mov
and
add
mov
add
adc
or
loopne
mov
lock
add
fisubrs
push
test
lcall
jle
test
insb
nop
mov
out
loop
push
dec
add
xor
add
movsl
xchg
in
and
cmpsl
cmp
or
insb
movsl
nop
dec
mov
push
add
sub
inc
xor
sub
ja
sbb
das
xchg
jle
mov
ljmp
mov
add
mov
fdivrl
lods
inc
or
mov
push
fcomps
nop
sub
fs
or
and
fldt
test
test
xor
data16
jle
ss
loop
enter
cmpsb
cmpsb
inc
pop
in
bound
push
enter
push
xchg
add
add
es
mov
outsb
inc
pop
sahf
into
mov
adc
roll
dec
push
scas
scas
dec
icebp
out
nop
adc
popl
pop
mov
cwtl
aam
imul
jl
mov
push
pusha
xchg
mov
adc
mov
mov
mov
or
add
push
scas
push
lahf
js
fadds
paddusb
push
add
jl
add
shr
jae
xor
add
pop
insb
fcoml
mov
ficoms
and
inc
push
sub
mov
jo
and
je
and
hlt
outsl
mov
andl
test
push
repnz
fdivl
or
insb
inc
cmp
push
sub
cmpl
je
push
push
add
pop
add
movb
push
insb
sbb
xchg
push
push
pop
adc
insb
orb
ljmp
nop
or
rolb
or
test
add
lea
aad
mov
outsb
jg
fnstenv
pop
shrl
or
sub
in
inc
shrl
pop
add
cwtl
mov
or
adc
inc
pop
out
add
or
inc
jbe
aam
xchg
lcall
push
pop
push
or
add
inc
insb
and
in
sahf
adc
xchg
push
mov
ret
add
xlat
mov
pop
loope
mov
insb
sbb
adc
add
ret
pop
and
mov
fs
add
mov
sbb
jb
mov
mov
mov
addb
or
bound
fmul
icebp
ficoml
push
xor
jbe
call
dec
andl
loope
sub
repnz
add
inc
fistps
add
inc
adcl
mov
or
xchg
push
js
xchg
push
jle
push
sub
es
in
push
push
insl
orb
ficoms
aas
cmpb
mov
push
lock
scas
mov
inc
xor
and
ret
data16
add
rolb
daa
mov
fnstsw
sbb
fisubrl
mov
aaa
fcoml
cli
outsl
clc
jg
inc
and
or
ret
and
rolb
add
shl
adc
pop
fldt
push
test
filds
in
and
clc
out
add
mov
inc
pop
push
pop
push
inc
test
adc
add
jl
push
scas
aam
cmpsb
test
ljmp
fildl
push
jg
aam
decb
sarb
inc
int
ss
loope
sti
or
mov
sub
shlb
dec
inc
mov
rcr
mov
pop
or
cmp
mov
ret
or
scas
pop
shlb
mov
sbb
add
adc
or
add
rcll
fsts
bound
inc
jp
xchg
push
cld
mov
inc
mov
cmp
mov
aam
dec
mov
aaa
or
loop
or
mov
test
imul
or
push
daa
push
push
arpl
ret
int3
jge
dec
push
fbld
jae
push
filds
cmp
xor
pop
jmp
xor
push
add
cli
arpl
ficoms
add
out
ret
cs
add
push
loopne
addb
or
mov
and
push
test
andl
add
cmp
add
jl
dec
push
jmp
and
rol
jmp
inc
dec
sahf
xchg
add
inc
ret
insl
xchg
pusha
fcmovnbe
mov
dec
and
roll
cltd
mov
daa
pop
movsb
dec
or
pop
lcall
push
and
lcall
pop
mov
push
cld
mov
inc
pusha
idivl
test
clc
ja
test
cmp
add
dec
mov
emms
and
daa
dec
dec
ret
outsl
pop
pop
xchg
jg
out
rorb
test
pusha
mov
pop
sbb
sbb
mov
test
and
push
sbb
inc
push
adc
test
push
sbb
fbstp
mov
push
push
mov
movsb
or
shrl
sbb
inc
add
lea
push
dec
sub
and
sub
pusha
call
push
xor
gs
or
or
inc
aas
inc
sub
dec
divb
pusha
xor
add
inc
test
jg
sub
add
lahf
sub
add
adc
and
dec
cli
jg
stos
jg
mov
inc
push
call
addr16
mov
sbb
icebp
inc
popa
aas
mov
mov
ffree
jmp
push
adc
add
test
cmp
mov
inc
jg
ja
les
loop
cmp
ja
les
mov
decl
shlb
cmp
or
mull
push
pusha
add
scas
mov
inc
pop
icebp
and
test
and
das
fisubrs
push
out
outsb
repnz
and
rolw
or
arpl
mov
adc
cmp
mov
pop
mov
and
cmpsb
and
inc
fs
movsb
or
ljmp
test
and
mov
aam
fisubrs
pop
test
xchg
jecxz
inc
es
rolb
fsubl
adc
ja
scas
cmpb
notl
add
clc
repnz
out
or
inc
addr16
adcb
clc
or
or
cmpsl
loope
pop
ficoms
pop
pop
push
lcall
fiadds
ljmp
into
or
add
addb
mov
ds
jg
cmp
add
mov
or
out
fisubrl
insb
les
push
sub
add
jb
xor
sub
inc
inc
and
add
rclb
push
and
mov
mov
pop
loope
and
xchg
and
and
xor
jmp
loope
int
outsb
bound
test
aaa
loopne
call
bound
inc
repnz
and
push
push
or
rcrb
mov
add
push
dec
push
add
pop
inc
sbb
xchg
xor
aas
inc
jo
scas
test
scas
pusha
stos
cmp
mov
loope
xchg
aas
inc
adc
adc
add
or
insb
jo
pop
shrl
roll
xchg
add
mov
adc
imul
scas
std
cmpsb
ljmp
push
shlb
add
adc
mov
arpl
aaa
fcmovbe
out
filds
aaa
cli
ljmp
add
aas
addb
cld
jg
inc
mov
xchg
loopne
insb
or
xor
int
lcall
adc
adc
xchg
xchg
and
add
mov
pop
scas
xchg
and
in
and
filds
cmp
shlb
sti
incl
dec
loop
add
push
aas
add
adc
mov
push
jecxz
mov
mov
and
push
loopne
clc
mov
pusha
push
and
lock
insb
in
adc
xor
mov
adcl
fsubl
incb
fcompl
pop
mulb
lea
ja
jl
fsubl
sbb
scas
fisubl
mov
popa
jl
adc
rclb
int
je
or
mov
xchg
mov
or
push
jno
mov
ljmp
incb
add
inc
test
adc
adc
mov
scas
popa
pop
sti
outsl
popf
push
cmpsl
and
sub
rolb
test
dec
test
mov
pusha
pop
fcmovbe
xor
dec
jmp
shlb
pop
and
roll
fsubs
pop
add
lods
push
push
add
add
adc
loopnew
insl
inc
je
jge
movzbl
add
push
rorl
fisttpl
xor
in
dec
adc
std
stos
pop
int
push
lock
imul
xlat
sub
push
mov
adc
mov
adc
fstpl
jo
xlat
scas
adc
and
add
push
adc
and
add
and
mov
pusha
pop
xchg
inc
mov
notb
fdivrs
outsb
or
dec
pop
jo
pop
xlat
outsl
and
pop
xlat
das
xor
mov
mov
outsl
or
xchg
mov
test
roll
jo
add
fcoml
mov
or
test
inc
mov
rcr
call
adc
jl
adc
test
mov
loope
sbb
xor
sbb
xchg
mov
xor
dec
dec
jno
dec
xor
push
mov
mov
mov
insb
xchg
sbb
sub
cld
xor
add
loop
push
mov
inc
push
sub
xchg
add
mov
inc
mov
jb
jmp
mov
cmpsb
nop
jle
mov
fs
dec
mov
cmp
push
popf
add
jb
or
cmpb
and
add
inc
fmull
ret
decb
movsl
mov
xor
pop
inc
cmp
cs
rorb
test
mov
ja
pop
adcb
jb
adc
das
sbbb
adc
test
clc
call
sbb
or
inc
aas
movsl
jg
scas
andb
mov
jae
sahf
pop
aas
ficompl
pusha
jecxz
lcall
mov
add
nop
xor
sub
jle
sbb
jl
jb
fcmove
inc
jae
das
and
es
or
inc
push
test
addl
sbb
mov
push
add
xchg
loope
test
fildll
adc
inc
xor
dec
and
addb
decl
adc
adc
mov
and
cs
adc
cwtl
pusha
push
sbb
or
lock
nop
popa
cld
outsl
xor
xchg
pop
dec
inc
add
pop
mov
dec
mov
add
and
pop
xor
adc
cmp
sbb
push
rcl
cwtl
subl
mov
inc
lahf
sub
jg
mov
clc
jecxz
jo
push
sar
decl
pop
and
addr16
dec
jo
imul
adc
mov
add
fisttps
add
pop
iret
jb
sbb
adc
fiadds
add
add
add
add
mov
mov
subb
jp
lock
cli
aaa
bound
subb
mov
push
jo
cld
sbb
or
sub
push
or
filds
xor
sbb
int
sbb
adc
inc
sub
push
dec
jg
xchg
adc
mov
ret
jo
lcall
mov
and
mov
fildll
xor
push
rolb
rcrb
sbbb
xor
mov
lret
push
mov
xchg
addr16
test
lock
inc
add
jns
pop
pop
loopne
jns
push
pusha
and
cmp
aam
addb
dec
push
lock
push
adc
pop
inc
inc
jl
sbbb
shll
xchg
adc
outsl
sbb
pusha
jbe
ret
pop
lcall
mov
call
xlat
adc
adc
in
lods
jl
and
add
push
nop
add
aaa
or
pop
mov
pop
call
inc
mov
mov
xor
add
or
sbb
das
idiv
push
or
dec
movsb
pop
push
test
push
loopne
pop
push
mov
pop
push
add
pop
cld
and
inc
cmp
or
ret
sbb
dec
icebp
test
fisubrs
mov
pusha
into
fidivrs
lret
push
xchg
add
add
inc
jg
adc
mov
add
arpl
xor
ret
jmp
test
and
pop
rorb
adc
sbb
adc
mov
adc
sarb
test
shrb
and
incl
fdivrl
enter
mov
dec
pop
xchg
rcrl
fisubrs
pop
clc
xor
pop
fisubl
fwait
outsb
ret
addb
pop
cld
les
mov
or
cli
cmp
clc
mov
test
stos
idivb
sub
ja
nop
mov
in
das
int3
loopne
xchg
add
inc
push
inc
add
inc
dec
mov
jp
fwait
loopne
fisubrl
stos
pop
cmp
xor
loopne
mov
addl
jg
cmpsl
decl
inc
pop
jo
pop
and
add
mov
loopne
dec
mov
pusha
add
or
cmpl
jne
push
adc
fwait
push
push
push
dec
push
int
sbb
jle
add
push
dec
test
mov
cmp
inc
xchg
js
rcrb
push
mov
sub
test
and
xlat
sub
ja
push
and
es
push
aas
cmc
nop
push
shrb
mov
or
mov
pusha
mov
mov
addb
test
test
adc
sbb
es
xorb
ja
mov
aas
jbe
imul
mov
rcl
sub
psubsb
movb
scas
jb
add
add
jmp
pop
add
mov
push
adc
fcomp
add
aas
popf
add
cmp
clc
stc
aam
jae
dec
jecxz
push
fcom
push
insl
jb
cmpsb
pushf
mov
adc
push
andb
bound
fisttps
and
fsubl
fstpt
shlb
mov
push
adc
xchg
lods
pop
and
add
call
and
push
sahf
mov
addl
or
pop
push
push
cmp
sub
fists
rclb
nop
mov
roll
stos
icebp
orb
pop
mov
lods
jecxz
and
add
aas
or
jb
ja
sahf
push
sbb
rorl
xchg
or
inc
dec
je
adc
mov
xchg
mov
clc
outsl
clc
stos
ret
mov
adc
pop
out
outsb
faddl
mov
cmpsl
ljmp
ljmp
loop
aaa
std
in
inc
clc
xorb
add
xchg
insl
sbb
adc
xchg
idivb
cli
jo
mov
sub
sub
sbbb
jecxz
frstor
shll
addr16
hlt
mov
data16
or
jmp
outsl
xchg
mov
out
jbe
in
pusha
subb
adc
dec
and
loopne
jge
and
inc
fisttpll
pop
and
inc
inc
xchg
cmpb
into
jbe
outsl
add
xchg
xchg
sub
or
rclb
mov
add
add
and
jmp
insb
adc
adc
mov
or
insl
mov
adc
pop
and
cld
cmpb
dec
ret
ficoms
lahf
das
adc
es
dec
into
sub
mov
movsb
add
pop
add
pop
fisttpll
pop
mov
mov
cs
add
add
std
inc
mov
inc
roll
sahf
fs
cmp
das
je
inc
sbb
lods
pmulhuw
or
push
jle
or
fbld
sub
or
pop
jmp
jmp
push
popf
add
clc
ljmp
add
or
lret
adcb
add
pop
sbb
and
ss
cwtl
push
test
nop
sbb
pusha
outsl
mov
shr
add
add
adc
jmp
rcrl
scas
jp
rol
and
add
xor
mov
sub
fcmovu
pop
hlt
pop
adcb
mov
rcrb
adcb
push
sub
cltd
call
push
ds
test
inc
loope
adc
pop
and
add
or
sete
test
das
rcl
push
or
and
rolb
aaa
loopne
push
or
xor
nop
xchg
add
pusha
add
ja
cwtl
push
push
and
adc
fists
std
ficoml
into
jl
xchg
add
scas
stos
mov
out
daa
jl
loopne
pop
test
shrb
mov
jle
nop
fcoml
popf
mov
test
adc
outsl
inc
push
sub
xchg
pop
orl
loope
ljmp
lcall
xchg
imul
mov
test
sbb
in
loope
mov
mov
out
in
mov
push
lods
jg
xchg
stos
sub
pop
daa
inc
pop
mov
xchg
mov
or
mov
mov
push
jb
jle
inc
xlat
and
mov
add
pop
xchg
mov
jo
fmuls
push
xchg
in
xchg
add
loope
loop
push
mov
or
pop
addb
add
pop
mov
push
push
mov
mov
jbe
outsb
mov
push
addb
sbb
mov
add
mov
dec
clc
scas
sti
fcmovnu
sbb
push
xchg
mov
inc
push
pop
in
aas
shl
stos
scas
in
mov
inc
jbe
pop
subl
fwait
ljmp
add
loop
sub
or
cmpsb
pop
insb
cld
dec
xchg
xchg
add
pushf
sbb
decl
fdivrl
add
faddl
or
push
and
mov
movsl
pop
idivb
mov
faddl
imul
add
and
cmp
fmull
push
test
and
movsb
les
jno
mov
mov
inc
lret
push
mov
push
mov
je
inc
ficompl
outsl
mov
or
or
xchg
or
jle
sbb
xor
adc
and
faddl
adc
or
rclb
mov
push
xchg
hlt
or
movsb
add
fisubl
pop
insb
jg
fidivs
adcl
add
scas
cmp
cmp
add
sbb
aaa
std
fbld
sbbb
push
xchg
push
push
ret
cmpsb
es
mov
dec
jle
cmc
imulb
push
fcompl
mov
outsb
nop
sub
pop
loop
and
or
jle
inc
or
ljmp
jmp
push
call
and
pop
pusha
xor
movsb
push
jl
lods
mov
pop
addb
pop
lods
dec
std
mov
pop
adcb
mov
mov
add
cmp
lcall
fsubs
adc
test
jg
sub
fs
fidivrs
mov
and
mov
xlat
inc
decb
mov
mov
inc
test
inc
and
mov
add
xchg
insb
or
push
rolb
mov
aaa
jmp
adc
mov
xor
sub
inc
xchg
rolb
outsb
inc
pop
add
mov
movsl
mov
or
add
loopne
std
pusha
pop
jbe
adc
mov
lock
or
push
mov
cmc
scas
test
and
hlt
arpl
lods
test
decl
mov
pop
pop
cmp
addr16
mov
pusha
pop
add
fiaddl
lret
push
add
jb
shlb
ret
outsb
sbb
cltd
xor
inc
scas
xor
mov
or
push
mov
jo
test
lock
and
int
sbb
stc
shrb
psubd
sbb
pop
push
push
push
sti
data16
fisubl
adc
mov
xchg
mov
cmp
push
sub
jecxz
inc
inc
xor
add
cmp
xchg
nop
cli
or
xor
mov
lcall
jb
inc
imul
cld
sbb
mov
loopne
push
or
add
outsb
loop
popa
scas
test
js
xchg
or
push
push
test
push
sub
jae
dec
add
push
inc
jbe
jmp
add
adc
inc
cmp
adc
dec
fcmovu
insb
mov
cmp
xchg
dec
mov
shlb
test
pusha
inc
sub
loopne
or
test
add
je
shll
stos
addb
cmpb
jg
lcall
adc
mov
mov
or
aas
andl
lock
pop
jb,pt
jecxz,pn
or
pushl
push
xor
cmp
lret
mov
pcmpgtw
negb
xor
inc
movsb
call
mov
out
cli
loope
jo
stos
sbb
verr
sub
js
sub
adc
je
add
push
scas
adc
push
adc
and
add
pop
or
cwtl
add
pusha
add
ret
or
mov
add
aam
aas
pop
adc
adc
jg
mov
pusha
or
fildll
jo
arpl
nop
add
rcll
jbe
xchg
fiaddl
imul
add
rclb
mov
jg
loopne
sub
movsl
xor
addb
mov
jg
cli
and
dec
mov
mov
sbb
call
iret
bswap
mov
and
and
fisttps
cmpb
enter
add
mov
or
push
jno
add
xor
loope
orl
or
aas
jecxz
push
jne
dec
or
fimuls
ds
push
inc
movl
sub
div
fwait
dec
adc
repz
inc
hlt
decl
inc
hlt
mov
or
jns
test
fists
sti
adc
jo
sbb
lock
in
js
lret
adc
mov
sbb
mov
or
pop
mov
addr16
out
movsl
aam
add
iret
mov
outsb
dec
sub
hlt
ds
inc
cmp
dec
inc
add
adc
sub
ja
and
add
push
insb
xchg
and
inc
dec
mov
push
stos
cmp
nop
shlb
adc
mov
mov
test
ja
mov
mov
and
cmp
xorb
adc
cmp
clc
dec
cmc
pop
lock
push
hlt
icebp
rclb
cmp
cwtl
stos
sub
mov
cwtl
out
inc
addl
enter
mov
sub
sub
adc
add
push
mov
or
jl
jp
xor
mov
mov
add
adc
dec
sbb
adc
xchg
pop
lcall
xor
xor
aas
or
imul
icebp
lcall
orb
aam
cmp
inc
lock
sub
les
and
mov
fimull
add
pusha
scas
pop
pop
rcrb
mov
ret
sub
cmp
add
cmpl
shlb
insl
and
or
outsb
add
mov
mov
mov
fdivl
movsl
sbb
and
pop
insb
mov
inc
cmp
add
pop
sub
add
sbb
push
lock
mov
add
gs
sbb
sahf
cmc
mov
sbb
nop
mov
pop
cmp
jnp
add
es
add
mov
dec
dec
push
adc
push
sub
or
and
add
ljmp
jg
mov
scas
nop
pop
mov
sbb
pop
mov
push
fsubp
mov
add
rolb
push
adc
fcompl
addl
outsb
js
pop
pushl
and
xchg
pop
xchg
push
inc
js
add
mov
mov
popf
rorb
xor
test
pusha
add
flds
sarb
pop
inc
lcall
adc
mov
out
mov
adc
cmp
cmp
adc
add
adc
dec
loope
je
cwtl
fldl
xchg
or
mov
ljmp
dec
add
imul
sub
add
stos
xchg
mov
sub
mov
pop
clts
test
and
mov
adc
rorb
mov
decl
sbb
pop
jg
sub
add
into
add
pop
icebp
decl
or
push
and
adc
push
cmp
sarl
or
ret
mov
push
arpl
pop
call
les
mov
sbbb
cli
shr
xor
xchg
rolb
mov
fwait
xchg
mov
mov
sti
inc
sbb
loope
jg
shll
out
sub
add
mov
call
call
sarl
cmp
adc
inc
loopne
push
je
xor
and
jg
jg
and
adc
repnz
and
aam
xchg
xchg
je
mov
jl
jl
add
add
jge
add
imul
loopne
sbb
sbb
cltd
inc
jo
shr
bound
pop
fwait
mov
jno
pop
add
test
jmp
fisubs
jl
je
test
sub
xor
push
fmuls
adcb
std
adc
pusha
add
scas
ja
push
repnz
push
loopne
imul
xchg
fimull
push
rolb
jp
mov
xor
mov
scas
pop
add
xchg
sahf
add
jecxz
inc
add
mov
jno
lock
add
in
xchg
or
adc
cmpsl
aad
dec
xchg
in
dec
pop
push
hlt
hlt
fucomi
outsb
push
bound
push
add
push
add
outsb
add
mov
mov
dec
nop
adc
test
xchg
ljmp
das
push
sbb
ljmp
daa
pop
sbb
push
pop
das
push
push
add
mov
int3
xchg
pop
push
ds
testb
xlat
das
shlb
aas
add
add
push
jg
inc
or
mov
add
gs
add
inc
sbb
cs
dec
add
addb
shlb
sbb
addr16
jle
fwait
mov
inc
test
rcl
pop
std
dec
jmp
inc
pop
sbb
xchg
dec
mov
adc
test
clc
jmp
adc
cmp
aad
sbb
ja
mov
jg
push
or
addr16
ds
pop
sbb
add
fimull
dec
pop
test
inc
inc
insb
adc
mov
loopne
add
mov
fst
cmp
add
mov
add
pop
sbb
ja
inc
jmp
push
add
ss
mov
adc
or
inc
enter
or
sub
push
cmp
fwait
and
inc
fcompl
pop
sbb
xor
aam
rcl
arpl
js
cmp
xchg
add
call
cmp
aaa
pop
inc
xor
lahf
push
fwait
clc
mov
ret
sbb
cmpb
or
inc
pop
sbb
sbb
cmp
cmp
or
pop
cmp
xchg
lock
jae
bound
cmp
push
sub
sub
fcompl
icebp
pusha
fiaddl
dec
dec
xchg
inc
add
add
call
fmull
jnp
sbb
outsl
push
mov
loopne
jo
aad
push
xor
lret
inc
stos
push
mov
add
push
or
mov
mov
int
jl
inc
add
insb
fsubrl
inc
cmp
jg
outsl
addl
xor
ficoms
jg
or
jnp
jb
add
inc
andb
sbb
push
scas
and
xor
je
xlat
subb
dec
shlb
mov
gs
pop
cmp
movsl
icebp
inc
xor
int3
scas
sarb
push
jl
add
stos
mov
mov
inc
or
mov
shrb
add
fsubl
adc
inc
lret
xor
push
aaa
jle
addb
icebp
scas
out
inc
pop
fcompl
add
pop
push
outsl
push
ficoms
subb
jb
es
cs
xor
mov
je
mov
lret
mov
dec
les
push
push
sub
mov
mov
add
roll
add
jae
xchg
sub
mov
or
fs
fiadds
lock
sub
push
mov
mov
push
inc
inc
mov
das
js
adc
dec
and
pop
push
or
push
adc
push
pusha
and
xchg
and
sub
or
pop
rolb
mov
dec
cmp
aas
repz
loop
mov
mov
mov
or
mov
push
fistl
mov
ror
movsb
aas
sti
loopne
push
or
mov
jg
rcrb
dec
dec
jo
insl
insb
ds
add
add
dec
scas
clc
push
sbb
inc
or
push
pop
and
pop
jle
adc
add
sbb
aaa
jl
add
daa
rcrb
add
jbe
pop
sub
js
shrb
aam
mov
xchg
inc
mov
orl
sub
lock
rolb
cmp
sub
xor
clc
and
fistpll
inc
push
aam
inc
and
and
clc
xchg
aaa
ljmp
inc
pop
push
mov
xorb
mov
pop
pusha
sbb
subb
inc
inc
pop
ljmp
shlb
je
lahf
scas
mov
mov
dec
and
xchg
pusha
adc
out
inc
pop
add
popa
mov
jo
mov
mov
fstl
test
pop
pop
int3
dec
push
mov
push
insl
les
inc
xchg
add
sahf
loopne
mov
mov
xor
cmpsb
xlat
pushl
or
xlat
mov
inc
mov
and
add
and
mov
mov
rcrb
push
mov
dec
cli
stos
mov
inc
add
push
mov
mov
lret
or
rcll
es
fsubrl
sarb
ja
mov
jae
add
leave
mov
add
or
or
jecxz
sbb
inc
xor
or
aam
xor
mov
push
xor
test
inc
mov
lock
inc
loop
add
inc
fs
push
cmp
aad
rorb
inc
mov
add
inc
mov
xchg
inc
fnstenv
mov
decl
mov
pop
add
push
or
cmp
pop
mov
outsl
loop
jge
cmp
xchg
popa
mov
filds
push
push
xchg
rcrl
and
inc
mov
rorl
loopne
or
add
adc
mov
loope
pop
mov
cld
inc
pusha
jno
inc
push
stos
ret
push
pusha
xor
mov
mov
test
add
outsb
out
cli
data16
pusha
pop
adc
loope
and
dec
jmp
pop
sub
aaa
cld
mov
popa
outsb
bound
jb
sbb
add
mull
or
cli
add
pop
pop
fs
and
jo
inc
and
pop
imul
nop
aam
outsl
filds
inc
adc
jno
mov
or
adc
cmp
inc
add
mov
and
add
xor
and
sbb
mov
shlb
cwtl
add
pop
pop
jmp
imul
mov
sub
and
and
or
push
inc
add
je
mov
add
test
les
inc
and
or
ficoms
in
ret
adc
mov
lds
cwtl
and
push
fiaddl
dec
add
adc
inc
mov
push
push
add
je
mov
add
aaa
fcomp
jl
sbb
and
jo
or
inc
jnp
decb
add
ljmp
add
lock
push
sbb
jbe
pop
push
rol
or
ret
mov
fbstp
mov
cmp
add
push
cmpsl
pop
jg
mov
jmp
push
jnp
push
and
push
fidivs
rcll
add
mov
fists
add
xor
fisubrs
push
inc
xchg
rcrb
lret
xor
pop
or
push
ds
decl
sbb
or
out
mov
cmp
test
insb
mov
mov
adc
sbb
inc
jne
in
xchg
cmpsb
mov
or
add
push
aas
lds
out
sbb
dec
pushf
cmpsb
ret
incl
sbb
jnp
push
rorb
scas
or
rolb
mov
push
rcrb
add
mov
fcoml
aas
mov
add
nop
pushf
and
cli
jo
rcll
ret
daa
adc
mov
add
cld
dec
call
xor
push
add
mov
decl
test
and
pop
and
test
bsf
cmp
jle
mov
xchg
rdpmc
fisubl
mulps
cld
out
call
and
getsec
test
xor
adc
add
adc
popf
gs
rorl
pop
cmpsl
xlat
sub
push
mov
jbe
cli
adc
and
xchg
faddp
mov
mov
dec
xor
xor
dec
mov
mulb
inc
or
insb
mov
add
jg
dec
lock
insl
test
mov
sbb
pop
test
fcmovnbe
cmp
ret
pop
jg
and
inc
mov
jno
inc
sub
push
ret
mov
pusha
insb
lods
inc
xor
mov
xor
mov
test
les
dec
mov
cmpsl
nop
mov
cmp
xor
mov
inc
add
outsb
or
and
inc
add
mov
std
dec
mov
mov
pusha
aaa
xchg
xchg
mov
pop
fs
out
xor
pop
pop
add
push
loop
sub
adc
push
test
rcrb
inc
loopne
inc
xchg
subb
mov
les
mov
shrl
fwait
sub
icebp
add
mov
stos
sbb
cld
movsb
add
das
cmp
imul
add
incl
mov
and
and
jg
mov
and
addl
push
sbb
aam
add
add
push
jg
lea
aaa
adc
call
inc
jae
push
or
mov
subb
dec
or
loopne
xchg
test
push
clc
mov
add
inc
sbb
add
and
pop
addr16
cmpsb
pop
mov
adc
and
mov
leave
and
adc
adc
add
and
push
push
push
cwtl
ficomps
and
mov
popa
adc
mov
pusha
jo
xchg
addb
add
add
mov
push
ljmp
imul
sub
adc
or
outsb
cmp
lods
inc
loopne
jmp
mov
cs
nop
lahf
dec
shlb
pop
mov
shll
pusha
add
mov
inc
scas
cmp
add
pop
jl
gs
cwtl
add
push
mov
test
aaa
mul
add
fsts
rolb
fsubrl
cmp
inc
std
das
sub
mov
mov
jl
mov
subl
push
rorl
inc
push
add
icebp
aaa
loope
adc
add
pop
in
cmpsb
test
adc
loopne
outsb
outsl
jg
pop
loop
xor
inc
popl
and
jmp
and
mov
loopne
push
mov
inc
adc
sbb
and
cli
jg
mov
add
inc
cmp
inc
xchg
adc
mov
mov
pcmpeqb
fisubrs
xor
adc
fwait
loopne
xor
out
jo
xor
mov
xchg
jo
loopne
inc
rorl
mov
adc
in
bound
es
add
cmp
fildll
mov
xor
adc
push
push
add
mov
lods
mov
and
cmp
incl
popa
fcompl
push
mov
loopne
movsb
mov
mov
add
int
scas
adc
mov
enter
orb
mov
add
xor
cs
andb
push
xor
xor
dec
rorb
mov
cmp
mov
repz
rcrb
mov
push
mov
fisubs
xchg
cmpb
xchg
loopne
add
shrl
out
andl
jmp
push
or
or
cltd
rcrl
and
pop
sti
aad
pop
push
rcrb
in
dec
mov
adc
sub
cli
mov
xor
mov
dec
popa
add
addl
xchg
jg
pop
mov
and
push
cmp
or
add
bound
enter
add
aas
in
pop
pop
cmpl
loopne
add
mov
push
push
dec
jp
insb
xchg
scas
ret
mov
add
dec
rcrb
add
push
mov
jl
lret
mov
add
push
adc
rorb
jecxz
add
mov
xor
inc
pop
popl
or
and
sbb
icebp
xor
adc
sub
inc
fldl
jo
add
dec
dec
loopne
mov
cld
in
int3
sub
add
pop
add
inc
push
in
idivb
cld
shlb
or
or
and
xor
mov
xor
dec
add
in
mulb
cmp
inc
addb
push
push
inc
and
adc
or
jo
pop
or
icebp
adc
mov
pop
sub
pop
sub
orb
pushf
daa
xchg
shrb
jbe
rolb
enter
xchg
xor
lock
addb
mov
add
push
mov
outsb
adcl
in
mov
xchg
inc
icebp
push
pop
or
pop
sbb
xor
and
lods
xor
inc
sub
rcll
lods
fstl
add
lods
insb
and
js
ret
stos
sbb
push
mov
test
pop
outsl
lret
add
or
pop
cmpsl
cmpsb
movsl
fidivs
clc
jo
push
mov
call
nop
fcomps
addl
test
add
push
stos
xorb
mov
call
mov
xchg
add
cmp
mov
filds
inc
and
inc
or
sub
icebp
loopne
mov
push
add
mov
loop
add
mov
add
push
add
pop
and
test
or
pop
and
inc
pop
fs
add
or
sarb
add
inc
push
sub
mov
inc
push
cmp
daa
add
jbe
adcb
or
stos
xorb
jb
pop
orb
pop
mov
mov
adc
mov
adc
adc
mov
push
cli
in
fistpl
dec
inc
lods
push
inc
test
mov
push
push
add
mov
pop
add
add
fisubs
or
cmp
xchg
and
mov
or
subb
repnz
cmp
sarb
out
outsb
pop
inc
ds
fcoml
sbb
inc
cld
jg
mov
lods
push
and
mov
mov
daa
push
push
and
test
xchg
xor
fmuls
pop
and
cmovo
push
mov
cmp
das
push
jmp
cmp
push
les
push
inc
mov
rcrb
adc
add
sbb
xchg
and
fwait
les
and
xor
mov
jo
mov
cmp
shl
loopne
insb
xchg
mov
cmp
inc
imul
sbb
inc
xchg
inc
fdivrs
inc
add
mov
and
inc
push
push
mov
shll
clc
sbb
push
jnp
xor
dec
shlb
pusha
int3
cmp
and
inc
inc
push
or
jp
push
jmp
push
add
inc
mov
loopne
incb
sti
lret
add
addr16
loop
add
pop
sub
fistps
test
push
push
popa
cmp
adc
adc
cmp
adc
subb
mov
sub
call
fs
sub
mov
test
fidivl
add
mov
mov
rolb
fstp
jmp
add
push
fsubp
and
add
dec
fdivrs
aad
stos
jo
inc
ds
mov
and
dec
add
test
push
stos
cltd
icebp
decl
cmpsl
and
fstps
and
insb
mov
push
xchg
or
dec
cs
xchg
jl
mov
lcall
mov
or
test
sub
jo
add
js
sbbl
es
pushf
aaa
mov
xchg
mov
sub
sub
fbstp
add
and
dec
xor
dec
popa
arpl
fimull
push
pop
sub
popa
das
jo
addb
ljmp
push
inc
mov
outsb
or
fiaddl
or
adc
loope
and
pop
sub
xor
add
sti
mov
push
iret
in
push
addb
cli
sbb
arpl
add
push
mov
pop
lods
loopne
pop
add
add
inc
imul
inc
sar
pop
inc
punpcklbw
call
cmp
pusha
adc
cmpsb
rclb
and
and
mov
loopne
adc
cmpb
popa
mov
inc
fldl
push
insb
cmpsb
jo
movsl
mov
inc
ficompl
push
rcr
mov
daa
push
movsb
sti
push
adcl
jne
add
fwait
adc
arpl
xor
add
pop
adc
jg
std
inc
push
jle
pop
add
test
dec
std
pushl
popa
jb
and
mov
push
fmulp
sbb
incl
or
and
add
shrl
fwait
cli
mov
js
fs
pop
and
call
push
sbb
mov
add
add
or
or
push
dec
aam
push
aam
add
inc
mov
pop
add
movsb
sub
push
icebp
lds
fimuls
add
int
pop
adc
mov
add
sbb
pop
loope
fs
inc
cmpsb
aam
pop
add
xchg
and
jle
jmp
cmp
adc
mov
dec
out
je
cmp
adc
in
xor
mov
pop
gs
mov
jecxz
mov
pop
and
jg
xor
pop
adc
test
adc
add
pusha
push
add
sub
in
ja
call
push
outsb
sbb
jecxz
fistps
mov
adc
xchg
test
push
dec
cmp
test
push
and
pusha
and
and
mov
pusha
push
adc
push
jo
ficoml
cmp
mov
pusha
mov
pop
jl
sahf
inc
push
sbb
sub
inc
mov
push
push
add
xchg
pop
mov
mov
push
or
and
and
mov
ds
or
pop
sti
xchg
jb
lock
cmp
ds
dec
add
sarb
pusha
adc
ljmp
clc
xor
pop
and
mov
cmp
scas
test
push
push
inc
jne
cmpsb
pop
inc
push
mov
mov
or
fdivs
sbb
aam
inc
dec
adc
out
xchg
mov
or
jo
mov
faddl
push
mov
andb
xor
xor
hlt
testb
dec
add
adc
inc
push
or
sbb
rolb
adc
push
cmp
add
or
ret
popa
inc
add
inc
mov
lahf
xorb
mov
jg
mov
sbb
or
les
adc
in
xor
add
aas
mov
test
incl
inc
or
mov
dec
mov
xor
and
or
lcall
std
loopne
and
cmp
mov
add
ficompl
ljmp
scas
data16
movsl
push
cwtl
ds
call
add
pop
push
mov
ret
scas
mov
mov
insb
inc
lahf
cmpsl
adc
lcall
push
lahf
pop
adc
mov
add
pop
sub
scas
jo
mov
push
movsb
and
and
aas
lea
mov
adc
push
sub
decl
add
mov
add
or
mov
cmpb
mov
lods
jg
ss
fisubs
and
and
test
mov
lods
sarb
add
repz
mov
mov
fcoml
sarb
mov
adc
mov
xchg
mov
and
pop
xchg
mov
mov
cmp
sub
adc
or
and
shlb
movsb
or
mov
out
add
rcll
bound
fwait
xor
call
aaa
or
adc
andb
cmpl
push
call
icebp
add
sbb
clc
clc
cmpsl
inc
xchg
mov
aam
push
xchg
lock
push
push
push
and
add
adc
cli
pop
icebp
push
ret
cmpsb
mov
div
or
add
dec
aaa
std
scas
mov
sbb
and
shrb
sbb
inc
push
jg
or
inc
jb
push
pop
scas
rcrb
aas
pop
loop
or
jg
sti
cmpb
push
adc
shrl
and
mov
sbb
pop
jo
or
fsubl
or
sub
add
sub
mov
add
sbb
or
mov
xchg
xor
cmpsb
mov
loopne
addl
pop
imul
icebp
pop
mov
mov
loopne
and
adc
pusha
or
outsb
aam
or
add
xor
jmp
xchg
lods
jg
push
push
mov
push
mov
daa
push
push
xchg
cs
enter
mov
or
push
mov
adc
dec
fcomip
sbb
push
fs
and
nop
nop
push
bound
mov
add
inc
sub
addr16
pop
xlat
xchg
addr16
pop
rcrb
enter
mov
push
cmpsb
push
mov
shlb
mov
sbb
movsl
call
lods
cmp
sbb
adc
loope
mov
adc
add
mov
sub
xor
mov
add
mov
lahf
ds
push
es
mov
push
aad
push
dec
dec
sub
loope
clc
aaa
test
mov
test
adc
push
mov
test
frstor
add
dec
mov
in
repnz
xor
mov
xor
sti
addb
jns
fcomp
cs
test
test
cltd
mov
xchg
lcall
icebp
mov
push
mov
add
aaa
sub
or
call
cmp
cmp
push
mov
add
movsb
mov
and
lret
add
sub
fs
cmp
add
outsb
dec
mov
repnz
fwait
cmpsb
mov
jo
and
push
and
aas
pop
cmp
pop
jno
jae
sarb
cmp
inc
fsubr
filds
pop
mov
fsubrl
jle
inc
inc
js
subb
push
loop
imul
mov
adcl
out
sub
add
ja
add
dec
faddl
pop
clc
mov
xchg
ficoms
push
mov
pop
mov
and
icebp
cmp
mov
xchg
orb
mov
jp
fmull
rcr
pop
push
xor
jp
fisttps
icebp
inc
in
daa
or
insb
lods
and
inc
cld
mov
jge
pop
inc
push
xchg
shrb
addr16
rorb
lods
add
fisttpll
push
sbb
outsl
dec
push
and
sub
or
or
and
sbb
insl
xchg
and
add
sbb
out
inc
and
dec
xchg
sbbb
mov
dec
ficoms
dec
push
arpl
dec
sbb
rol
pop
mov
inc
or
fimuls
fwait
adc
push
lods
mov
cmpsl
rclb
mov
not
scas
and
nop
xor
sub
inc
sub
aaa
add
ret
push
sar
pop
popa
xor
sbb
xchg
xchg
xlat
sub
aaa
add
inc
sub
xor
aam
testl
adc
rcl
rclb
jne
and
cmp
scas
jbe
inc
sub
lahf
js
mov
repz
fcompl
xchg
popa
mov
add
pop
xchg
add
xchg
xchg
int
xchg
push
into
add
lcall
mov
or
ror
pop
ficompl
iret
jp
aaa
or
lret
inc
adc
adc
lret
mov
jg
nop
push
ficoml
lods
pop
int
subb
mov
push
add
xor
or
add
pop
inc
aas
jbe
lock
ja
or
jo
sbb
test
int3
fsubs
inc
test
test
mov
add
je
xor
cwtl
add
rclb
add
cmp
adc
or
jle
push
add
adc
xchg
sub
add
imul
sahf
mov
or
jg
push
mov
call
adc
jno
and
sub
dec
push
push
add
mov
sbb
dec
punpcklbw
loope
inc
jecxz
mov
les
fldt
cmpsl
sub
sbb
adc
jl
jae
push
nop
push
pop
orb
and
adc
and
sub
lock
dec
push
test
sbb
and
cld
inc
cld
das
adc
andb
andl
xorb
xchg
test
fcos
inc
and
push
sbbb
or
jg
subl
jns
daa
adc
pop
or
std
add
xlat
push
push
shll
sbb
push
xor
inc
pop
ret
gs
ret
lea
ss
cmp
data16
pop
mov
test
add
scas
dec
jle
inc
jecxz,pn
ret
add
es
adc
ja
pop
inc
arpl
inc
arpl
rorb
or
insb
adc
add
add
test
add
xor
inc
sbb
cli
fs
arpl
arpl
xor
push
jl
add
xchg
mov
arpl
movsb
sbb
inc
or
call
sahf
or
inc
unpckhps
arpl
sbb
jo
dec
inc
dec
mov
jmp
rcll
sahf
xchg
ret
aam
test
mov
mov
popa
out
int3
popa
hlt
mov
xorb
add
inc
jl
adcb
cmp
inc
sbb
sbb
in
mov
rolb
mov
cmp
mov
fists
or
add
jl
add
pop
nop
adc
add
mov
add
sbb
mov
cmp
out
mov
jl
add
add
sarb
sbb
fimuls
sbb
addb
fcom
js
outsl
push
cmp
cmpsb
ficoms
or
and
jmp
scas
inc
adc
or
addb
rol
mov
push
notb
dec
push
fwait
xor
sub
outsl
cmpsb
add
mov
es
sub
cmp
loopne
ret
jg
data16
pusha
jno
adc
mov
inc
rolb
daa
and
subb
xchg
lods
cmpb
add
dec
pusha
inc
and
ja
lcall
inc
or
push
scas
and
movsb
xor
cmp
mov
pop
mov
add
add
push
ja
mov
test
pop
iret
add
push
push
rorb
adc
ret
adc
loopne
add
lds
dec
inc
mov
push
sarl
dec
or
cld
mov
ret
mov
mov
rclb
mov
push
mov
incl
inc
or
pop
aad
loopne
insb
or
das
and
fimuls
das
mov
jg
lcall
and
bound
xchg
stos
ret
js
mov
xchg
das
popa
add
pop
ret
ret
and
mov
add
ret
mov
xor
add
orb
je
xchg
pop
mov
ljmp
rorb
nop
and
adc
scas
ljmp
fisttpl
inc
xor
test
mov
ljmp
cmpsl
inc
sub
in
mov
aas
jmp
loopne
inc
sbb
ljmp
rclb
gs
nop
or
pop
imul
push
dec
mov
inc
add
xlat
mov
fmull
and
movsb
into
loopne
insb
test
mov
incl
loope
ficoml
push
xlat
outsl
dec
fiadds
inc
mov
push
push
aam
scas
inc
fisttpll
inc
push
jo
test
rolb
cwtl
fiaddl
push
dec
inc
pushf
add
cmpsb
lock
loopne
lret
pusha
int
adc
add
jge
out
add
push
adc
add
inc
movsl
stos
fcomps
pop
jle
or
pusha
test
mov
mov
push
inc
lahf
push
xchg
lcall
mov
loop
and
mov
int
es
mov
test
add
adc
pusha
or
mov
test
mov
rolb
push
in
js
sbb
push
fcompl
push
adc
dec
fisttpll
scas
setg
mov
addb
or
ret
sbb
or
pusha
or
adcb
pop
ds
sub
mov
pop
outsl
jp
call
or
fiaddl
test
dec
loopne
add
adc
fcompl
movsb
sbb
fbstp
xchg
fildll
push
fisubl
mov
dec
sub
dec
inc
and
outsb
sbb
lods
fwait
lahf
dec
xchg
dec
push
or
adc
xchg
dec
shlb
cwtl
loopne
stos
add
push
cmp
mov
ss
jg
call
mov
mov
jo
and
lock
bound
dec
icebp
jmp
add
mov
dec
rclb
cld
decl
cmp
dec
or
add
jne
add
sub
add
cmpl
push
and
std
mov
mov
or
cmp
jbe
pop
push
cmp
ja
pop
rorl
sub
dec
mov
ficompl
xchg
mov
inc
push
cmpb
add
xlat
decl
cmp
jnp
aam
sbb
nop
xchg
and
add
hlt
mov
loopne
mov
pop
mov
add
cwtl
fbstp
mov
outsl
mov
bound
adc
push
roll
inc
pop
pop
inc
push
ljmp
dec
faddp
push
jl
push
rcr
rolb
push
sub
xorb
adc
mov
add
sub
xor
ss
add
std
jg
inc
add
mov
movb
arpl
jle
add
fcomi
push
jb
loopne
push
dec
adc
adc
aam
call
push
dec
mov
push
adc
mov
lea
dec
rolb
loop
test
adc
adc
jp
out
imul
xchg
jg
jg
fxch
jo
dec
mov
outsb
rorl
pop
and
or
sti
adc
test
xchg
and
mov
push
inc
clc
ja
sahf
add
dec
push
pop
and
ficoms
aaa
icebp
out
ds
faddl
sbb
mov
lock
xchg
mov
push
or
sbb
and
pop
and
adc
loopne
insb
xchg
test
in
pop
pop
hlt
or
pop
adc
push
fdivrl
mov
and
push
and
mov
inc
xchg
pop
aam
push
push
ret
fcoml
pushl
mov
push
jo
dec
nop
or
xor
adcb
and
movsb
mov
mov
repz
lock
stos
push
mov
cli
or
insb
push
pop
inc
aad
inc
mov
mov
icebp
or
inc
icebp
or
dec
ficomps
je
fstps
movsbl
clc
es
and
add
push
pop
ljmp
mov
add
dec
add
imul
inc
icebp
add
cmpsl
idiv
outsl
mov
hlt
add
sub
cltd
pusha
add
inc
and
or
inc
mov
push
cld
mulb
jae
aam
adc
add
mov
rorl
mov
rcll
orb
incl
pop
and
rcl
push
lods
inc
push
ja
push
rcll
lock
jle
das
add
sub
lods
ret
adc
ljmp
test
mov
insb
mov
pushf
mov
adc
sahf
xchg
push
add
out
pop
mov
and
mov
xor
nop
outsl
jg
cmpsb
jl
push
push
adc
stos
lock
xlat
popa
sub
inc
jle
and
and
into
pop
shrl
std
fistpll
push
or
add
sub
push
add
mov
pop
addr16
add
jo
push
movsb
mov
xor
push
imulb
sbb
aad
pop
addl
mov
mov
pop
mov
cmp
push
or
adc
mov
aad
ljmp
add
pop
or
adc
f2xm1
lcall
dec
add
fisttpl
loope
inc
add
or
stos
movsl
clc
xchg
xor
add
and
push
xor
add
lock
faddl
xor
xchg
cmc
push
pop
cmpsb
das
insb
faddl
push
jl
subb
clc
push
inc
outsb
add
and
add
test
pop
adc
adc
lock
xor
lcall
adc
pop
shlb
cltd
mov
loope
fbstp
pop
mov
pusha
fdivl
imul
fadds
push
mov
and
adc
jo
sub
cs
add
mov
mov
movsb
in
aam
push
push
add
jmp
jmp
pop
enter
add
pop
or
adc
jle
mov
movsb
std
insb
popf
sub
jp
adc
or
jg
dec
mov
shll
jo
push
add
mov
sub
mov
loopne
xchg
xor
adc
lahf
ljmp
dec
push
adc
mov
jae
jae
js
and
sub
outsb
cld
add
data16
push
aam
nop
jbe
mov
push
xchg
adc
push
and
pop
imul
inc
xor
and
aas
jecxz
rcrb
rclb
pop
lods
stos
adc
aaa
xor
or
add
cmpsl
inc
test
popf
clc
or
and
pop
jl
add
pop
xor
or
fcompl
push
and
ds
add
fsubrl
pop
pop
lahf
xor
push
adc
jmp
mov
inc
roll
hlt
lods
add
mov
sub
lcall
pushf
pop
xor
sub
xchg
inc
push
fnstsw
jno
or
add
ljmp
sub
outsl
pop
mov
xorb
push
adc
adc
inc
pop
add
xchg
add
xchg
and
and
ja
xor
cwtl
addr16
fldl
inc
inc
aaa
pop
mov
inc
push
mov
or
jg
mov
mov
push
mov
dec
xchg
loopne
orl
stos
add
sub
decl
pop
lcall
or
adc
outsb
inc
dec
and
mov
je
cld
shlb
mov
pushf
sbbl
addl
fcompl
lret
out
rcrb
outsb
or
aas
mov
inc
lcall
orb
jbe
subb
imul
adc
hlt
push
rolb
mov
mov
add
mov
lock
push
sub
inc
push
rclb
dec
jo
stos
add
call
dec
push
rolb
cld
add
push
xchg
xorb
jbe
jle
fdivs
mov
adc
cld
mov
inc
pop
add
call
shll
add
push
test
fs
rolb
push
jl
movsb
cmpl
nop
fdivr
or
pop
push
scas
push
sub
sbbb
pop
ret
xor
and
std
push
hlt
testb
inc
add
xor
lods
inc
pop
hlt
fwait
and
push
or
mov
xchg
rclb
mov
andb
add
pop
sub
rorb
incl
sub
xorl
js
pop
inc
outsl
and
orb
fbstp
xchg
xchg
add
pop
or
mov
lcall
or
push
lds
inc
or
mov
stos
pop
inc
inc
int
mov
adc
xor
push
add
jge
inc
inc
addr16
inc
ret
push
mov
fbld
shrl
mov
mov
inc
lds
outsb
sarl
lret
push
and
subb
jl
outsl
cmp
rorb
mov
fstl
std
lcall
cld
push
lcall
rclb
mov
popf
loopne
cmpl
filds
fildl
inc
or
movsb
pusha
and
push
sbb
sbb
outsb
mov
add
mov
sbb
add
sbb
sbb
lcall
add
sbb
push
and
fwait
adc
push
ret
xchg
roll
cld
sbb
dec
fsubp
pushf
mov
dec
cld
push
in
jle
add
add
mov
andl
cltd
dec
ret
push
xchg
andb
shl
idivb
mov
pusha
mov
aam
hlt
jbe
lods
bound
add
xchg
rcll
dec
popf
mov
mov
adcb
loop
and
iret
or
push
in
mov
pusha
add
xchg
scas
adcb
xchg
fnstenv
push
or
inc
add
add
scas
mov
pushl
mov
rcrl
inc
mov
dec
pop
ret
aam
sbb
mov
and
mov
dec
test
xor
scas
dec
mov
add
imulb
mov
pop
into
fstpl
sbb
inc
mov
and
add
fstpl
insl
sbb
and
cwtl
and
or
aad
out
xor
pop
cmp
mov
xchg
scas
push
fdivr
in
loopne
addb
loopne
mov
and
fldenv
insl
adc
inc
aam
or
lods
bound
add
test
ljmp
mov
jg
mov
pop
and
or
push
test
ret
scas
xorb
lods
mov
lds
push
into
enter
cmp
pop
push
test
pop
lcall
jg
or
or
or
int3
das
cli
mov
rcrb
or
and
add
idiv
decl
incb
test
push
adc
and
jo
mov
rcr
aaa
add
mov
add
push
js
lods
pusha
adc
jo
arpl
adc
fcomip
cmp
xor
ja
pop
popa
jo
pop
addb
pop
mov
xor
scas
rclb
xor
inc
adc
mov
pop
push
mov
outsl
ljmp
aam
add
adc
testb
mov
fucomip
ja
test
pop
jnp
push
pushf
mov
mov
push
leave
dec
add
inc
pop
sub
pop
pop
ds
add
push
rcl
ret
ja
add
jnp
add
dec
inc
mov
mov
rcll
mov
add
adc
mov
xor
mov
loop
adc
loopne
pusha
push
notrack
sub
das
fsubrl
push
dec
aam
ss
loopew
jmp
fcompl
cmp
jno
dec
shll
insb
xbegin
push
insl
adc
mov
shlb
imul
inc
jp
xor
sbb
jle
lahf
fdivr
jg
xchg
popf
and
lods
fmull
ds
push
aam
xchg
jo
pop
pop
pop
push
cmc
pop
rorb
xchg
shl
jnp
lds
shrb
cmp
mov
add
xor
daa
add
or
call
jbe
cmp
aam
cmp
xorl
sbb
jl
sub
clc
push
or
mov
mov
mov
add
sbb
lcall
frstor
in
shll
adc
inc
mov
xchg
inc
add
inc
add
cmp
push
add
int3
test
jbe
popa
sbb
lock
lea
pop
test
mov
add
imul
mov
or
cmp
bound
loopne
scas
fsubrs
xor
ret
and
rorb
mov
lea
outsb
mov
add
cltd
mov
adc
and
add
out
clc
sub
jno
mov
aaa
or
adc
push
addb
ds
pop
notl
sbb
jge
insl
pop
add
inc
sub
outsb
stos
mov
xor
scas
xor
mov
jmp
rcrl
ss
insl
loopne
xchg
das
out
sub
lret
fstl
add
ret
shrl
lcall
mov
jl
adc
push
adc
rol
fisubrl
inc
mov
mov
push
push
mov
add
push
movsb
push
scas
lcall
sub
xor
mov
add
loope
push
xchg
jp
js
push
add
inc
insb
add
push
jo
sbb
xchg
push
pop
sbbb
pop
add
mov
or
xor
insb
ja
push
jg
jne
dec
or
dec
pop
jno
mov
push
addb
mov
mov
pop
stos
dec
les
mov
mov
in
call
add
sbb
or
xlat
add
add
repz
ja
subb
pop
rolb
add
mov
es
rolb
lret
xor
scas
mov
push
ret
pop
inc
jb
mov
jae
add
push
clc
sbb
sarb
add
faddl
push
fbld
push
add
mov
cmp
scas
mov
mov
and
push
ja
pop
loopne
xchg
push
call
pusha
or
jmp
fcompl
push
and
and
scas
or
test
rorb
neg
pop
jmp
dec
test
add
rol
add
ljmp
and
mov
jmp
adc
loope
mov
jmp
pop
mov
and
popa
test
sub
lcall
jle
dec
lock
mov
add
adc
xchg
mov
adc
out
push
jl
decl
or
add
push
pop
daa
flds
ret
push
nop
and
add
mov
and
xor
cmpb
add
and
and
add
sbb
ficoms
in
jne
xchg
xor
add
adcl
fsubl
mov
xchg
or
insb
push
push
cmpsb
pop
mov
push
and
rolb
mov
lcall
adc
mov
repnz
mov
mov
add
or
xor
incl
and
inc
in
push
out
dec
add
sub
subb
pushaw
add
adc
mov
inc
push
add
les
jb
inc
jl
pusha
xchg
mov
scas
fmull
inc
sbb
inc
pushf
in
fiadds
jmp
add
inc
jle
jg
and
cmp
lock
mov
ljmp
js
bound
mov
add
andw
push
or
push
ret
lods
xchg
ret
xchg
push
scas
push
sahf
aad
or
cld
fs
add
inc
addl
push
addb
pop
mov
add
and
je
mov
mov
add
and
fisubs
mov
sbb
pop
pop
outsb
sbb
into
stc
dec
dec
cli
outsl
or
and
add
ffreep
adc
outsb
mov
add
dec
and
into
addb
add
or
or
sbb
fstps
fists
dec
shlb
pop
mov
mov
push
stos
push
and
inc
xor
add
ror
push
xchg
mov
mov
in
sbb
sub
and
ds
xor
fisubs
sbb
adc
xchg
int
sub
ficomps
adc
sub
pop
fimull
fisubl
mov
dec
inc
sahf
in
adc
dec
add
lods
mov
mov
push
inc
add
xchg
ror
ficoml
subb
ficoms
out
xor
idiv
imul
adc
cmpsb
push
sahf
adc
inc
outsl
push
add
push
shlb
jae
mov
and
popl
jle
roll
cmp
ja
cmp
test
and
ret
xor
inc
cs
and
pop
ljmp
mov
sbb
inc
inc
and
push
cld
push
dec
add
test
fadds
rcrl
aad
xor
jb
sti
mov
mov
cmp
inc
or
push
and
ret
mov
jg
fistl
xchg
adc
ud2
lds
shll
ss
std
ret
push
inc
cmp
mov
mov
sbb
jle
cltd
xchg
enter
add
mov
mov
jnp
call
mov
sbb
andb
orb
cs
mov
mov
jg
loopne
or
imul
pop
or
add
orl
sbb
mov
dec
pop
sub
or
inc
and
inc
rclb
mov
flds
pusha
dec
jbe
add
rclb
jno
and
fs
test
push
lds
xor
add
and
mov
and
fwait
push
clc
mov
pop
mov
add
ret
pop
push
mov
data16
movsl
mov
bound
and
lock
fwait
or
mov
xor
aam
or
inc
or
xchg
ror
loopne
cmp
test
inc
mov
scas
push
and
shlb
pusha
adc
jg
or
jg
push
or
clc
pop
jecxz
and
add
sahf
push
shrb
pop
icebp
xor
loopne
clc
push
dec
add
push
and
and
mov
ret
jb
shll
mov
inc
or
shlw
mov
mov
gs
add
add
stos
mov
dec
lcall
mov
insl
in
les
add
int3
and
sbb
or
lds
test
and
dec
shl
add
and
mov
jmp
mov
sbb
test
stos
popa
push
imul
add
decb
hlt
mov
inc
push
mov
mov
mov
in
fidivrl
dec
push
rcll
inc
push
ret
lods
pop
inc
aam
fsubrl
inc
cmp
jb
cld
out
jno
cmc
mov
int
or
and
push
dec
loopne
add
mov
mov
movsl
scas
cli
aam
adc
adc
inc
inc
push
sbb
sbb
or
or
lea
fsubs
cmpsl
mov
jb
mov
mov
add
inc
andb
ljmp
add
adc
xchg
lods
adc
scas
inc
or
mov
inc
test
fisubl
push
push
es
sbb
and
shl
push
nop
decb
push
or
rcr
push
mov
nop
aam
inc
mov
push
add
xor
aam
repnz
push
int
rcrl
insl
jl
clc
or
rcrb
rolb
xchg
pop
and
push
add
dec
add
and
fisubl
outsb
sbb
sub
inc
lock
adc
and
add
sbb
loope
sti
sahf
sub
test
jne
push
mov
test
adc
mulb
lock
mov
push
outsl
dec
adc
add
inc
push
xorl
or
jbe
lods
pandn
or
pop
mov
shlb
sbb
fidivrl
mov
insl
fistl
mov
or
daa
aad
sbb
cld
and
test
sbb
cmp
insb
mov
in
insl
sahf
mov
in
inc
add
add
jo
test
xchg
mov
mov
push
mov
jb
pop
mov
and
orb
popf
cmpsb
imul
mov
imulb
movsl
cs
and
push
pop
fisttpl
or
push
add
and
mov
add
and
push
mov
adc
out
cs
idivb
sub
xor
movsb
or
xor
lgs
cli
scas
jle
cli
mov
lock
shl
lods
adc
lods
pop
nop
ret
jnp
mov
stos
outsb
cmp
xchg
cmpsl
mov
clc
testb
mov
mov
add
push
idivb
push
add
dec
bound
mov
push
pop
xchg
mov
popl
dec
add
or
sub
adc
icebp
mov
push
sahf
adc
and
inc
mov
add
xchg
test
add
bound
in
clc
xchg
mov
add
lods
sub
sub
mov
push
fwait
outsl
push
lcall
pcmpgtw
sbb
sub
adc
lock
xor
and
lods
insl
scas
jo
fistpl
xchg
adc
insb
mov
mov
mov
scas
add
adc
and
test
data16
scas
pop
push
aad
adc
jl
inc
cmp
or
xor
popf
mov
push
out
sub
cld
imul
aas
add
sbb
fwait
mov
inc
add
nop
jge
aam
or
push
xchg
ss
pusha
xchg
lcall
add
in
xchg
xor
mov
pop
mov
push
cmp
pusha
xchg
icebp
xchg
insb
adc
les
sbb
or
xor
pop
add
dec
cmpsb
idivb
lock
and
push
xor
mov
adc
xchg
add
or
nop
add
pop
adc
jae
or
fistpl
jg
fcoml
ja
out
fiadds
scas
rcrb
mov
or
loopne
push
pop
and
xchg
inc
shrb
movl
cli
push
adc
and
out
push
cmpsl
js
push
mov
mov
lock
clc
jg
inc
pop
pushf
xchg
mov
adc
shrb
jl
dec
je
andb
push
push
fimull
add
clc
lahf
mov
cmpsb
adc
xchg
imul
jno
adc
inc
mov
lcall
insl
xchg
cmpl
adc
xor
or
cld
test
push
xor
add
aad
dec
roll
aas
add
ficompl
push
dec
les
pop
push
or
sbb
and
or
popf
push
pop
mov
pop
and
sub
dec
push
pop
clc
mov
insb
mov
rolb
push
pop
and
inc
loope
sbb
add
xchg
add
xor
xchg
pop
pop
sub
fisubrs
jmp
sub
and
inc
aaa
xlat
dec
push
cwtl
add
jp
dec
cmp
lock
mov
pop
icebp
fiadds
xlat
mov
xchg
and
inc
sub
push
inc
mov
mov
mov
lods
rorb
fsubl
xchg
xchg
cmpsl
gs
out
cwtl
mov
and
jl
mov
shrb
test
add
cld
sub
pop
nop
shrb
pop
xorl
sbb
push
xchg
ljmp
or
or
jns
sbb
scas
pop
cmp
and
filds
sbb
dec
add
pop
mov
or
ret
mov
inc
rolb
gs
lea
and
pop
mov
mov
push
aaa
icebp
stos
push
sbb
push
fmuls
or
ljmp
push
push
mov
jl
add
nop
push
fdivr
pop
sub
cli
xor
or
lods
insb
lahf
sub
jns
cs
cmp
jmp
mov
xchg
mov
or
aad
add
xor
jg
mov
push
push
movups
xchg
inc
ret
bound
sbb
jle
in
sbb
arpl
inc
jg
movsl
xor
jp
dec
and
rclb
mov
test
add
add
fcoml
add
out
call
test
xchg
push
mov
mov
pushl
mov
inc
and
or
rolb
add
add
add
ljmp
out
mov
push
adc
in
outsb
shlb
shlb
xor
scas
jmp
roll
xchg
mov
pop
loope
cmpsb
cld
xchg
rclb
cmpsl
or
mov
cwtl
add
bound
or
pop
add
jge
inc
fs
or
pop
rolb
jl
push
cs
test
cld
call
xchg
out
and
fsubrl
and
aam
sbb
mov
int3
mov
fldt
fcmovb
adc
pusha
sti
sbb
ss
push
adc
mov
inc
fstpt
dec
call
les
fstl
test
sbb
and
std
aas
cmp
adc
rolb
sbb
and
add
add
add
pop
push
test
inc
loope
push
loop
adc
add
bound
fsubr
inc
mov
popf
xor
sbb
stos
lcall
pop
mov
add
in
pop
sbb
inc
mov
rorb
cmp
add
push
aaa
pop
pop
pusha
les
adcb
lds
punpckldq
and
int3
mov
ljmp
mov
add
sbb
sbb
and
ret
mov
or
addl
scas
pop
dec
lock
add
push
nop
insb
and
mov
jg
fcoml
and
test
pushf
inc
and
insb
outsl
jg
test
pop
or
pop
add
int
xlat
cs
and
add
add
insb
inc
imul
pop
xlat
outsb
pop
and
adc
inc
xchg
loop
pop
mov
and
outsb
add
pop
mov
in
and
xor
cmpsl
sub
nop
lods
xchg
push
insl
add
sbb
xchg
jo
xchg
sbb
fcompl
xchg
and
pop
ret
mov
aam
sbb
pop
insb
test
mov
lahf
and
mov
sbb
xchg
push
movsb
mov
or
mov
inc
cmp
rcll
adc
dec
out
js
rolb
or
loop
add
lahf
mov
mov
or
aad
cmp
inc
outsb
in
pop
pop
lods
adc
mov
mov
sbb
mov
mov
dec
push
cwtl
mov
push
push
sbb
jo
out
dec
addb
inc
gs
flds
add
inc
rcrb
pusha
cld
mov
push
fisubrl
add
mov
and
push
sar
jbe
mov
sbb
or
xchg
pushl
fcomps
popl
ret
insl
push
cltd
add
fldl
add
loope
sbb
push
push
pop
inc
jp
fbld
inc
arpl
and
xlat
push
nop
jb
ja
dec
and
addr16
stos
scas
xor
add
adc
push
aam
jmp
mov
inc
mov
rolb
jp
aaa
push
xchg
lcall
and
jnp
inc
shl
cmp
mov
leave
inc
test
pop
and
call
int3
sub
push
dec
scas
fincstp
add
sbb
push
pop
xor
pop
dec
inc
inc
mov
sbb
push
adc
aad
jbe
inc
outsb
mov
stos
adc
jne
loop
adc
pop
or
rcrl
adc
push
sbbl
add
inc
add
outsb
and
imull
pop
mov
adc
or
mov
push
fs
mov
mov
and
add
push
pop
shrl
fiadds
ret
clc
push
add
or
test
test
dec
dec
mov
push
fsubl
inc
addb
sbb
pop
mov
pop
push
repz
cmpb
out
hlt
cwtl
mov
mov
pushf
test
inc
add
xorb
adc
push
sbb
and
pop
mov
sbb
xor
imul
fwait
inc
add
pusha
addl
adc
rolb
je
lods
xchg
or
fildll
and
inc
rolb
stos
sbb
es
clc
insb
pushf
or
movsb
and
and
es
or
add
pop
bound
mov
and
cmpl
cli
mov
dec
rorl
loopne
or
and
call
jp
xor
gs
mov
add
jo
fcom
pop
xchg
mov
push
ss
movl
fimull
xor
inc
les
adc
pop
push
add
adc
pop
or
clc
push
xchg
pop
insb
fildll
push
xchg
and
mov
insl
ja
fmul
sub
adc
sbb
aas
loope
nop
or
pusha
sub
or
rorl
test
fs
or
ret
out
pop
pusha
loope
or
jmp
mov
pusha
push
fisubs
xchg
push
jo
mov
fs
push
jecxz
fwait
sub
and
inc
push
mov
iret
pusha
jg
call
dec
test
cs
das
add
add
mov
fiaddl
mov
sub
mov
and
mov
or
shl
in
adc
subl
dec
add
in
sbb
and
aam
adc
cmc
es
jmp
inc
cmp
dec
push
add
inc
or
nop
inc
insl
add
xor
mov
push
push
fwait
and
add
cwtl
sbb
or
push
lcall
mov
das
push
pop
dec
jno
fcoms
ret
dec
fstl
mov
push
nop
push
pushf
call
cli
pusha
fcmovne
icebp
jo
insb
addr16
rolb
in
and
jg
jg
das
mov
sbb
icebp
jg
add
xor
dec
jl
add
icebp
mov
repz
ss
jmp
mov
jecxz
fistpll
mov
add
popa
imulb
ja
incw
fcomip
ja
mov
add
push
into
and
lds
aas
mov
scas
enter
or
cld
jo
mulb
or
adc
inc
js
or
in
arpl
jno
aas
fxtract
in
mov
mov
xchg
mov
xchg
popa
cwtl
or
sub
cmp
adc
out
loop
and
aaa
mov
xor
sub
add
push
inc
pusha
sti
xor
adc
push
je
adc
ljmp
add
call
insb
insb
ljmp
add
jl
pop
push
inc
movb
je
mov
icebp
jl
std
jg
incl
cs
inc
aam
cmp
inc
cmp
movsl
fwait
add
cmp
pop
add
test
fs
insb
xchg
or
ja
mov
das
inc
sarb
cmpb
add
or
cmp
pop
dec
inc
into
mov
fdivl
mov
and
add
push
cli
xor
pop
jg
xchg
and
and
add
lods
and
push
rolb
aam
adc
fwait
sub
or
push
out
aaa
clc
jg
mov
or
dec
or
mov
jae
loopne
mov
lods
cmp
add
outsl
mov
sub
pop
or
or
push
sub
mov
cld
adc
cld
mov
inc
add
adc
inc
or
decb
jae
sbb
mov
or
adc
dec
inc
adc
or
rorb
fstl
jecxz
jmp
mov
sub
jecxz
xchg
adc
adc
push
rcrl
xor
or
add
cmp
bound
xchg
out
mov
mov
shlb
pop
inc
mov
les
outsb
xor
mov
mov
pop
mov
inc
and
and
push
ljmp
aam
mov
and
adc
or
sub
inc
and
jecxz
bound
pop
insb
lods
and
mov
and
sub
and
ljmp
xchg
pop
aas
mov
adc
mov
or
inc
push
test
mov
fstpt
into
xor
jae
mov
ja
pop
xchg
add
xor
mov
add
sub
divb
push
add
mov
outsb
dec
or
xchg
ret
shlb
push
cmp
xchg
movsb
inc
fimuls
push
fcoml
push
sbb
inc
ficoms
and
mov
ficoml
jo
dec
rclb
test
sbb
add
sub
cmp
adc
std
inc
add
imul
or
shll
call
dec
sub
sbb
loope
ret
idiv
push
xchg
fcmovbe
jno
pop
test
aas
mov
push
or
jg
idivb
pusha
test
adcb
xchg
or
push
dec
xchg
icebp
mov
rclb
push
jo
inc
lret
or
fmull
lea
add
add
mov
add
mov
pop
mov
add
shlb
sbbl
push
lock
push
pushf
insb
xchg
cmp
inc
pop
inc
xchg
adc
and
clc
pop
and
xchg
in
sbb
or
test
orb
inc
push
pop
or
xchg
pop
push
aam
pop
sbb
cmpsb
xchg
push
inc
push
rcrl
sahf
mov
enter
pop
mov
nop
or
and
push
hlt
adc
pop
push
jb
test
xor
push
fisubs
rolb
mov
and
xor
scas
cmpsb
out
rcrb
and
test
jbe
aaa
pop
out
dec
add
pop
adc
xchg
xor
push
and
sub
push
hlt
scas
or
pop
add
fldt
aam
push
adc
mov
aad
mov
sub
add
adc
mov
shlb
fcomip
mov
andb
aas
and
sbb
outsb
or
fs
sbb
xor
adc
pop
xchg
shlb
inc
nop
add
aaa
pop
dec
out
xchg
rcrb
dec
lods
mov
inc
enter
hlt
decl
movl
add
push
jl
mov
mov
inc
mov
push
mov
movsb
jp
push
push
sbb
mov
cmp
jge
lret
outsb
and
or
mov
mov
and
adc
sbb
add
ds
outsl
out
xchg
adc
add
loop
or
or
adc
pop
mov
push
and
xor
mov
jno
fists
pop
mov
dec
inc
xor
dec
inc
shr
push
dec
sbb
dec
shrb
ret
inc
or
test
and
push
mov
mov
sub
ja
or
mov
xchg
paddusw
xor
add
rol
mov
pushl
test
and
mov
aas
and
loope
mov
adc
inc
and
adc
jp
sbb
pusha
loop
mov
inc
sub
lcall
nop
pusha
scas
pusha
das
push
out
aam
and
xlat
ret
add
aaa
adcl
icebp
ss
decl
sahf
adc
test
inc
aam
data16
mov
and
jg
xchg
xlat
add
sub
lds
cmp
inc
addr16
push
into
and
mov
lsl
das
add
rolb
stos
pop
andb
inc
cmp
es
clc
mov
xchg
mov
sub
pop
mov
enter
sbb
sub
in
and
xor
mov
mov
and
test
icebp
in
or
or
aas
or
xchg
cmp
pop
add
fsubl
jl
cwtl
fwait
sbb
jmp
mov
inc
add
aaa
test
call
inc
push
add
and
out
add
mov
xlat
or
and
xor
pop
rolb
dec
fnsave
add
push
je
push
jl
add
add
add
outsb
pop
xchg
lcall
push
pop
nop
sbb
inc
rolb
mov
and
xor
lock
std
not
dec
lock
xor
cwtl
sahf
inc
and
cld
scas
mov
pop
lods
mov
sub
and
fs
mov
das
inc
pusha
lcall
insb
add
orb
push
sub
ljmp
clc
add
mov
ljmp
inc
sub
and
subb
mov
decl
push
and
loope
pop
rclb
pop
test
cmpsb
outsl
add
push
lods
adc
mov
push
adcl
stos
or
dec
mov
or
or
xlat
shlb
jp
push
aas
cmpb
xor
add
rolb
jecxz
clc
inc
pop
and
je
clc
shll
add
inc
fisubl
pusha
cmp
xchg
movsb
or
in
shrb
ja
fildll
ds
xor
rorb
loopne
jg
lock
push
jae
and
loop
cmp
pop
lock
push
aam
push
mov
xlat
and
test
or
pop
add
aad
mov
les
mov
popa
stos
dec
inc
inc
dec
cmp
loope
xor
dec
push
lock
loope
adc
fisubrs
fs
aas
add
push
dec
xor
cwtl
mov
es
mov
push
jl
lret
add
loopne
loope
shlb
inc
add
pop
insb
std
ljmp
and
adc
push
and
xor
add
shrb
xchg
pop
hlt
dec
mov
mov
push
cmpsl
add
sbb
or
xor
push
mov
add
push
xchg
push
mov
mov
adc
add
dec
bound
pusha
clc
add
inc
push
add
cli
cmpsb
mov
push
scas
xchg
xchg
inc
dec
add
adc
mov
adc
mov
or
shll
or
mov
and
xchg
rclb
pop
push
push
outsb
scas
mov
clc
incl
adc
add
scas
fdivl
or
sub
cmp
and
loope
ret
enter
cmp
andb
mov
and
fistpll
add
pop
aas
mov
addb
add
ficoml
call
addb
call
push
nop
pop
pop
jne
fisttps
in
add
push
add
adc
or
out
js
jle
add
and
dec
inc
xchg
mov
and
and
push
stos
xchg
and
inc
ret
pop
js
cmp
adc
mov
pop
jecxz
scas
jbe
fildll
test
iret
subb
andb
orb
push
add
mov
sub
and
xlat
pop
xlat
push
loop
add
shlb
repnz
shlw
lcall
addb
inc
adc
and
jl
mov
sarb
jns
dec
push
pop
push
add
je
divb
test
dec
add
push
xor
push
or
jbe
and
andl
add
les
es
push
cs
cmp
clc
jle
sbbl
inc
push
add
and
and
mov
sbb
pop
hlt
add
or
inc
xchg
push
and
jle
aam
xor
adc
fwait
lods
mov
xchg
incl
movsl
sbb
ret
call
rolb
xchg
test
and
pop
dec
dec
add
dec
jl
insb
xchg
and
add
mov
mov
push
loope
ror
xchg
cmp
and
insb
aad
rolb
or
loop
pop
sti
lea
add
xorb
add
or
roll
bound
or
les
lahf
test
cli
dec
test
and
gs
outsb
or
inc
test
cmpsb
sub
lock
ss
shlb
push
dec
add
inc
cmpl
lret
and
inc
cmp
pusha
mov
in
dec
add
cmp
add
push
add
or
sahf
mov
fwait
sbb
push
fsubl
and
loopne
mov
jo
jnp
inc
lock
cmc
js
rclb
jnp
dec
pop
lcall
ret
lcall
push
mov
push
mov
push
decl
or
or
mov
push
inc
hlt
jl
test
inc
jp
out
jae
dec
cmp
aaa
xor
and
and
ss
jne
pop
adc
add
and
and
imul
loopne
loopne
jg
cmc
and
ret
addl
mov
mov
bound
fsubl
mov
outsb
rolb
push
rolb
mov
pop
push
incb
aaa
add
addr16
push
inc
sarl
loop
or
fistpll
xchg
roll
push
rorb
mov
add
pop
or
dec
mov
dec
dec
call
fiaddl
adcl
rcll
mov
cmpsl
inc
push
cmpsb
outsb
enter
test
push
mov
jmp
inc
xchg
add
mov
adc
push
mov
push
js
push
or
cmp
adcl
and
and
push
and
pop
and
pushl
push
sub
out
push
pop
andb
add
inc
pop
adc
xor
mov
pop
inc
sub
push
cmp
mov
shlb
adc
push
sub
loopne
mov
les
cs
sub
lds
rorl
and
mov
add
push
faddl
inc
xor
pusha
adc
or
sbb
pop
lcall
std
outsl
into
adcb
inc
sub
or
mov
inc
sub
mov
and
test
inc
and
xchg
dec
fs
in
clc
divb
push
sbbb
aam
adc
int3
pusha
addb
mov
inc
push
inc
and
push
test
int3
clc
sub
imul
call
es
sub
cld
sub
and
cmp
pushf
push
out
js
mov
mov
mov
fiaddl
inc
popa
or
dec
test
add
adc
lods
push
ret
rorb
and
test
rcrl
add
xchg
or
push
movsl
sub
xlat
add
les
and
movsl
stc
xchg
popa
outsb
add
inc
add
mov
mov
insb
ljmp
repnz
add
pop
add
ret
and
fidivs
add
cmp
js
dec
dec
je
mov
and
and
lock
add
scas
outsb
loop
outsl
and
push
fsubl
cmpsb
mov
add
add
bound
fwait
cli
mov
adc
add
add
lods
jo
push
mov
outsl
adc
mov
outsl
ljmp
xor
sub
test
pop
add
jae
adc
dec
add
adc
mov
push
pop
and
add
mov
cmc
cmp
sahf
popa
pop
jo
xor
add
nop
sbb
lock
nop
bound
mov
lcall
add
pop
pusha
push
test
push
out
test
xchg
sarb
and
sbb
test
or
sbb
cmpsb
add
inc
call
mov
xchg
je
add
push
xchg
add
lock
pop
add
decl
test
inc
pop
and
and
mov
jo
jg
inc
pop
enter
push
mov
inc
popa
inc
xchg
test
mull
fmull
nop
pop
out
adc
mov
xchg
outsl
push
in
and
push
cmp
xor
jmp
ret
inc
and
test
lahf
rcll
adc
cltd
cli
mul
inc
inc
or
or
sbb
push
ret
ffree
cmpsb
dec
push
shlb
pushf
push
data16
lds
orb
shlb
jae
andb
dec
pop
jnp
pop
pop
loope
nop
mov
mov
cli
add
cmpsb
in
cli
es
shlb
add
lods
add
loope
mov
inc
xchg
test
pop
xor
xchg
xchg
fists
orb
int
jmp
das
clc
incl
and
mov
dec
xchg
or
test
dec
push
mov
push
pop
std
mov
add
pop
ficoms
dec
nop
mov
notb
jbe
aaa
std
add
add
inc
scas
mov
add
cmp
add
sub
loop
pop
testl
nop
xor
or
addl
pshufw
adc
pop
push
mov
addb
mov
inc
lcall
add
rcrb
jnp
xchg
inc
mov
mov
xor
inc
push
idiv
filds
pop
fiaddl
adcb
push
xor
mov
adc
insb
pop
or
sbbb
inc
inc
and
in
add
sbb
inc
and
fisubrs
mov
or
pusha
addr16
push
xchg
out
dec
adc
and
xchg
xor
push
pop
movsl
cli
sbb
push
mov
mov
or
scas
mov
test
mov
loopne
add
nop
cmp
rcll
and
jle
and
mov
or
or
aad
jle
or
loopne
push
lods
mov
roll
or
shrb
pop
push
add
jb
cmp
roll
or
fwait
lods
stos
xorl
loopne
pop
or
in
sub
mov
add
push
inc
lock
jmp
mov
icebp
push
adc
ljmp
sub
add
dec
push
pusha
add
pop
nop
and
xchg
pop
call
adc
pop
push
push
in
loopne
jb
inc
pop
loope
mov
xlat
pop
sbb
add
inc
mov
pop
call
ljmp
mov
insl
ret
fcomip
dec
mov
sub
add
pop
inc
and
loopne
inc
xorl
js
lock
jg
mov
call
popa
fsubl
add
add
add
push
mov
ljmp
or
shll
push
add
or
loop
xor
dec
mov
mov
scas
test
das
jb
lret
add
sub
pop
pop
add
nop
or
mov
or
adc
add
push
fucomip
adc
stos
or
rclb
cmp
dec
xchg
or
sub
mov
fwait
ja
inc
movsb
adc
ja
or
adc
fists
add
inc
jmp
mov
xor
push
mov
xchg
insl
inc
loopne
add
dec
outsl
adc
jnp
push
into
jmp
xchg
and
xchg
push
ja
enter
nop
ds
add
xchg
scas
xor
imul
push
and
sbb
and
xchg
push
adc
push
outsb
mov
xor
or
test
push
test
rol
arpl
or
jg
cmpb
and
ss
cmp
push
rorb
push
outsl
jle
mov
push
aam
inc
cmp
pushw
add
xor
or
mov
insl
scas
sub
or
js
add
rol
and
adc
pop
aam
add
mov
dec
lds
mov
cmp
pop
jg
pop
fisttps
arpl
sub
repnz
inc
push
push
cmpsl
adcb
sub
pop
bound
xor
cmp
cmovle
mov
pop
add
xorb
clc
add
mov
pop
cmp
mov
or
inc
ret
and
outsl
or
inc
and
scas
aaa
pop
fbstp
bound
and
xchg
sbb
lock
and
fcmovne
mov
or
add
and
pop
pop
mov
ret
dec
scas
push
lock
aad
cmp
adc
cmpsb
pop
lret
mov
sub
push
jo
call
loopne
inc
xchg
push
sbb
fwait
decb
inc
mov
cmp
or
inc
lods
push
pop
add
add
lock
ret
mov
sarb
xor
xchg
loop
add
lcall
rolb
xchg
out
dec
mov
mov
xchg
nop
or
push
jp
ljmp
mov
out
dec
inc
push
shrb
or
cs
nop
sti
push
mov
xorl
out
push
inc
fdivl
aas
nop
pop
test
lods
cmp
out
push
sahf
pop
cli
or
lods
pop
movsb
scas
mov
and
outsb
and
and
in
sti
and
add
pop
data16
jb
dec
and
lods
push
and
add
sub
add
shlb
into
push
sti
fimuls
ret
sbb
imul
test
xchg
push
shrl
push
pop
push
push
pusha
adc
cld
fwait
jmp
insb
nop
or
add
add
adc
xchg
pop
outsb
cmpsb
and
push
loope
add
inc
shrb
fs
add
loopne
cld
sub
aaa
add
mov
xor
add
mov
dec
pop
ror
push
ss
and
sbb
sbb
jns
inc
cmp
mov
adc
notb
cmpb
jg
cld
leave
xchg
cmp
cwtl
add
mov
dec
xlat
cmp
xor
push
xor
addr16
ds
or
pop
cmpb
ds
call
xlat
pop
lea
mov
das
push
sbb
in
mov
sub
ljmp
or
or
xor
idiv
call
push
jno
sbb
dec
adc
std
scas
inc
adc
outsb
mov
xor
clc
repz
add
loope
outsb
inc
adc
lods
sbb
mov
mov
fidivl
stos
add
adc
xchg
pop
mov
xor
xchg
sbb
cwtl
push
into
addl
or
arpl
sbb
std
sbb
jb
push
popa
sti
and
cmp
mov
or
rorb
pop
arpl
scas
fbld
shrb
xor
fdivr
or
out
xorb
cmp
inc
push
incl
shlb
in
ret
loop
mov
push
mov
pop
cwtl
xchg
xor
and
sub
fisubrl
or
xor
aas
addl
cmp
inc
les
aas
jg
shrb
out
inc
push
fcmovbe
sahf
add
mov
or
adc
pop
cmpsb
ret
or
jno
cwtl
sub
dec
adc
ror
ss
bound
fs
ret
stos
rclb
addl
or
decl
mov
mov
cmp
add
stos
push
clc
push
adc
pusha
or
sbb
add
xor
imul
aad
adc
inc
cmp
scas
les
inc
jbe
inc
cmp
loopne
mov
cmpsb
aaa
sub
dec
xor
pop
and
mov
out
pop
or
mov
mov
mov
and
mov
push
lret
mov
add
pop
data16
mov
shl
aaa
mov
jg
das
mov
push
ret
add
or
xor
push
std
pop
push
mov
bound
xchg
cmp
stos
or
das
or
aaa
std
mov
outsb
gs
cmp
mov
outsl
sbb
mov
je
push
fiadds
imul
sti
lcall
mov
sub
cmp
mov
and
add
cmpsb
mov
add
shl
movsb
ret
aad
add
mov
push
mov
push
aam
add
mov
cmp
lods
mov
rep
and
das
push
icebp
push
nop
test
aam
cmp
aaa
lret
lods
sub
jbe
mov
add
inc
or
cmpb
sub
fisttpll
inc
push
or
mov
enter
add
add
and
bound
aam
js
dec
add
inc
add
xor
popa
jns
js
add
or
cmp
popa
or
int
mov
ficoml
pusha
xchg
add
aad
pop
push
cmp
loopne
loopne
fsubrs
push
mov
mov
hlt
add
xchg
fwait
sub
push
testb
jg
out
inc
add
cmp
pop
add
mov
add
inc
popl
add
pop
test
inc
mov
cld
vcvtps2pd
and
add
mov
sub
sbb
fs
pop
in
rol
push
nop
ret
scas
scas
mov
mov
out
lock
cwtl
jge
les
pusha
add
incl
fmull
sbb
or
sub
inc
pusha
mov
and
adc
insb
shlb
aad
cs
pushl
xor
inc
inc
add
sub
add
push
sub
ret
ret
test
push
xlat
mov
adc
adc
icebp
ret
push
add
add
mov
push
popa
psrad
ljmp
push
rolb
mov
jb
sub
push
add
nop
mov
bound
rclb
ret
xorl
xor
outsb
loopne
pop
mov
add
sti
aam
cmpsl
adcb
pop
rorb
negb
pop
lock
fwait
add
mov
jge
rcr
or
fwait
rorl
or
lahf
add
idiv
and
and
or
or
rolb
shll
inc
int3
sub
rcll
or
add
push
mov
add
icebp
mov
push
stos
incl
loop
fs
inc
mov
sbb
les
sbb
and
jbe
pusha
xchg
sbb
int3
push
mov
mov
push
int
stos
sbb
lods
add
sbb
sahf
rcrb
adc
adc
push
or
push
or
adc
add
mov
and
sbbl
sahf
jae
fildl
test
fistps
test
mov
add
iret
arpl
add
and
loopne
bound
jae
and
push
rcrb
mov
neg
pop
aas
inc
push
les
int
push
outsl
lret
mov
rcrb
pop
pop
and
xchg
xor
jg
dec
add
pushl
add
mov
xchg
filds
xlat
and
mov
test
mov
or
imul
popa
pusha
or
aam
std
jg
lret
and
and
add
jl
popa
inc
push
adcb
or
lods
push
add
test
sub
inc
pop
or
and
add
shlb
movsb
and
dec
pop
and
std
push
add
fisubrs
mov
pop
imul
es
pop
xor
cs
and
xor
mov
jb
adc
push
adc
mov
jg
lock
inc
sub
or
sbb
loopne
pop
and
dec
inc
sub
and
xchg
xchg
pop
sbb
add
sarb
jl
mov
test
clc
cmpsl
jl
add
jmp
loop
inc
inc
xor
xor
lock
mov
fistpll
sbb
xchg
and
jp
and
pop
aaa
sub
inc
jl
xor
adc
ficoml
add
pop
jbe
sub
mov
movsb
cmp
repnz
shlb
mov
push
or
adc
call
shrb
add
bound
cmp
and
pop
sub
jb
inc
push
cwtl
jl
xor
scas
mov
scas
jae
jp
sub
mov
mov
jmp
jmp
dec
xor
or
rcl
add
shll
inc
adc
dec
inc
scas
mov
jmp
mov
lock
push
add
pop
sub
pop
inc
push
scas
jbe
jo
and
sub
xchg
icebp
push
jno
pop
and
and
cld
int
inc
jbe
adc
sub
insb
leave
add
or
mov
sbb
pop
inc
imul
add
adc
mov
stos
pop
mov
ja
stos
push
outsb
mov
mov
or
add
pop
sub
xchg
fsubrl
sub
jno
jo
lock
add
stos
sbb
inc
push
and
lock
push
aaa
lret
pop
sbb
xchg
push
add
test
loopne
pop
mov
inc
dec
mov
in
push
jmp
je
lods
pop
pop
fadds
pusha
pop
mov
fbstp
pop
add
jle
push
push
and
add
lods
aam
scas
push
and
cld
lcall
push
sbb
cmc
les
popa
push
sbb
test
mov
and
repnz
jp
and
mov
cld
and
pop
xlat
and
xor
mov
sub
out
pushf
add
and
push
ret
pop
ds
xor
mov
adc
test
push
dec
out
aaa
cmpsl
push
or
addb
inc
nop
add
inc
es
dec
bound
cs
cli
mov
mov
lret
addb
or
sbb
and
loop
jo
lock
ret
popa
rclb
and
add
mov
add
ja
mov
pop
lods
test
loopne
push
shlb
or
rorb
jbe
xor
enter
push
out
xlat
cmpsb
push
mov
mov
lock
inc
and
aaa
in
shr
push
or
movsb
lock
call
adc
and
mov
les
loop
mov
mov
inc
loopne
pop
dec
dec
xchg
dec
xor
insb
adc
mov
or
sub
push
push
rorb
or
dec
push
les
push
mov
out
shl
and
data16
sub
int3
adc
and
fwait
inc
mov
add
pop
mov
inc
call
popa
dec
xchg
lds
addb
push
lods
arpl
jo
inc
mov
and
pop
or
and
adc
popa
dec
lods
inc
add
pop
or
rorl
lcall
sahf
shrb
imul
mov
xor
inc
add
or
jp
inc
cmp
ss
sti
fistl
mov
mov
out
add
and
dec
add
cmc
and
add
push
test
jbe
sbb
add
push
subl
sbb
aas
fbld
mov
and
orb
std
cmpsl
jo
addr16
jae
xchg
jle
test
insb
xchg
inc
add
sbb
js
dec
jo
push
cmpsb
scas
mov
das
cmpsl
jp
imulb
push
push
lcall
push
and
je
insb
cld
inc
sub
call
inc
sub
sub
mov
sub
mov
adc
jo
push
add
add
mov
mov
cmc
outsl
jp
push
and
cmp
sub
xchg
les
dec
xor
rclb
push
inc
rolb
or
loopne
mov
pop
push
rcrl
mov
push
mov
bound
imul
loop
sub
pop
shrb
and
adc
mov
push
mov
add
rorb
jmp
add
cmp
inc
sbb
lret
rol
out
out
sub
sarl
loope
mov
stos
popa
cld
pop
dec
xor
xchg
cmp
scas
icebp
pop
push
pop
lock
dec
loop
test
and
mov
rclb
pop
cmpsb
or
jno
aas
pop
insl
add
mov
push
or
dec
dec
cmp
and
push
xor
icebp
das
test
or
add
inc
aas
xor
mov
aad
call
mov
mov
stos
xor
add
or
mov
add
icebp
lcall
push
mov
pop
mov
and
mov
insl
cli
sub
cmp
push
push
inc
adc
popa
and
or
inc
and
push
xchg
test
mov
clc
incl
push
pop
adc
adc
js
cmp
scas
and
aad
xchg
mov
add
arpl
sbb
aam
fbstp
dec
adc
sbb
shlb
add
mov
jb
jle
mov
jno
sbb
and
outsb
xor
mov
cli
test
dec
orl
push
sub
pop
inc
jg
and
mov
and
xchg
imul
insb
mov
add
jmp
ucomiss
mov
xor
mov
data16
xor
cmp
xlat
dec
xchg
je
es
pop
push
inc
mov
ljmp
adc
push
mov
lods
outsl
add
or
mov
pop
loopne
dec
add
push
add
jo
add
mov
push
mov
pop
scas
xchg
cmp
mov
add
test
add
int3
adc
adc
fsub
fadd
pop
adc
test
addr16
rclb
inc
mov
bound
add
arpl
xchg
or
xchg
inc
and
and
push
jns
test
cmp
mov
dec
and
data16
add
inc
test
push
addb
test
sub
test
push
scas
call
stos
adc
mov
jecxz
adc
xchg
inc
or
jecxz
adc
adc
in
pop
bound
push
adc
mov
adc
inc
add
dec
add
adc
mov
rcrl
pop
adc
push
xchg
mov
dec
adc
mov
pop
push
xor
je
dec
fdivl
dec
inc
or
lcall
xorb
push
jg
jge
pop
push
add
addb
adc
xchg
jl
outsl
stos
jle
faddl
jp
adc
push
inc
aas
lidtl
mov
mov
inc
fsubl
imul
pop
adc
leave
jb
pop
dec
add
pop
dec
decl
lea
jb
add
or
mov
push
adc
es
xchg
adc
jl
lods
cmp
mov
roll
mov
lcall
sub
in
add
lods
pop
and
scas
xchg
cmp
add
mov
add
pop
loopne
xchg
add
stos
fdivp
adc
pop
add
ret
insb
imulb
insb
xchg
pop
push
mov
push
add
adc
xchg
push
or
mov
rorb
cmp
or
cmp
xor
inc
add
adcb
hlt
jp
cmp
addr16
or
test
xor
sub
rorb
ja
clc
insb
xchg
andb
testb
jle
dec
xor
fnsave
pop
sub
inc
mov
lea
sarb
ja
enter
mov
or
orb
add
add
lods
pop
fsubl
push
inc
aas
pop
and
clc
rclb
or
faddp
hlt
mov
adc
inc
mov
pusha
cld
xor
aas
mov
subl
inc
pop
adc
push
cwtl
xorl
ss
cld
and
stos
aaa
orl
and
cmp
fsubrs
and
adc
sbb
nop
push
mov
add
addb
cs
jb
mov
xlat
test
movsb
xchg
push
pop
or
pop
sbb
out
movsb
add
rclb
xchg
in
push
add
push
rolb
mov
pop
mov
outsl
or
xchg
rclb
sub
ljmp
sub
and
call
inc
and
sbbb
call
push
shrb
insl
fisubrl
adcl
test
ss
jbe
insb
inc
and
inc
xchg
push
mov
fcoms
adc
add
adc
adc
mov
push
pusha
sub
lcall
mov
ljmp
jmp
inc
pusha
xchg
inc
pop
rol
add
test
pop
subb
jmp
jb
pusha
xchg
add
hlt
dec
les
add
icebp
dec
and
aas
mov
jl
fs
inc
loopne
mov
push
cltd
lock
and
jne
mov
mov
cmp
cld
mov
ret
jl
jl
fimull
cmpsb
test
add
sbb
add
sub
pusha
add
subl
push
push
sti
adc
inc
loopne
hlt
jp
push
mov
mov
loop
fstp
incb
fsubl
add
add
outsb
loopne
push
insb
cs
push
ret
data16
inc
movsb
adc
orb
xchg
leave
sbb
push
sbbb
adc
les
or
outsb
and
and
or
and
mov
andb
inc
push
or
call
cmp
mov
movb
je
out
and
xchg
popa
movsl
xchg
push
dec
adc
cmpsb
push
push
push
adc
adc
loope
add
sahf
mov
sahf
out
and
push
push
inc
push
adc
add
mov
sub
adc
mov
cld
lods
loope
jae
dec
mov
out
mov
mov
mov
sbb
testb
adc
push
inc
es
cwtl
inc
stos
xor
add
add
in
shll
fbld
pop
mov
lcall
mov
xchg
sbb
test
pop
jg
mov
jbe
dec
es
cmp
and
scas
push
xor
das
cwtl
incl
mov
or
pusha
xchg
orb
pop
lock
or
ljmp
loope
pop
pop
call
pusha
arpl
push
out
add
xor
je
fcompl
or
insl
mov
mov
int3
add
and
pop
loop
sbb
inc
rorb
in
cmp
adc
and
push
loopne
test
fistps
xor
add
mov
add
mov
sub
nop
mov
push
aad
fsubrs
xchg
orb
or
and
mov
loopne
int3
test
rolb
dec
cli
and
lcall
xchg
inc
add
adc
sbb
ja
sbb
xchg
mov
jp
dec
and
ret
cmp
mov
lahf
test
or
outsb
icebp
and
lods
data16
insl
nop
mov
fdiv
add
sub
or
push
es
lcall
pop
pop
sbb
clc
jg
out
and
imul
mov
aaa
daa
and
mov
fsubl
stos
aam
enter
cwtl
mov
pop
mov
jo
and
add
jp
pop
mov
lods
mov
adc
pop
xlat
scas
clc
insb
jns
xchg
or
mov
and
cltd
xor
xchg
mov
rclb
add
adc
pop
mov
mov
xor
stc
pop
sbb
hlt
adc
data16
test
jp
inc
pop
dec
ljmp
push
sbb
push
fstl
adc
cs
add
gs
or
push
loope
mov
add
adc
jle
xchg
ss
push
cmp
inc
mov
lods
push
movsb
out
or
xchg
adc
addb
cmpsl
and
jmp
push
add
xchg
mov
xchg
fstpl
add
outsb
xlat
scas
push
test
adc
and
jne
fstl
insl
lahf
and
fstl
xchg
and
push
jbe
aas
pop
in
xchg
push
pop
push
mov
and
add
lret
or
sbb
cmpsl
mov
pushf
push
adc
or
push
movsl
push
popf
push
movsb
add
pushf
cli
push
ret
pop
xchg
insb
cltd
pop
ror
mov
pop
adc
add
inc
js
mov
mov
and
pop
stos
orl
add
or
pop
out
push
dec
push
pop
les
push
push
adc
and
pop
pop
dec
fnsave
push
sahf
lock
pop
sub
pop
dec
pusha
mov
loope
mov
inc
and
push
outsl
add
jle
push
push
mov
insb
pusha
push
push
sbb
or
shll
clc
incl
cmp
add
addr16
inc
test
xchg
test
push
sbb
adc
add
std
mov
push
adc
sbb
mov
pusha
notb
mov
fisubrl
xchg
dec
popa
movsb
insb
test
jmp
fistps
test
sbb
imul
adc
mov
fdivl
sub
sbb
mov
fldt
in
mov
or
pop
mov
add
lods
sub
pop
clc
test
jp
or
fwait
xor
xor
pop
sbb
sub
push
rolb
push
test
xor
sub
movsb
inc
and
movsb
mov
jl
jl
adc
loop
cmpsl
jl
mov
sub
mov
sbb
mov
add
push
movsl
insb
mov
add
test
push
add
add
push
jo,pn
inc
xlat
sub
pop
xor
and
outsb
inc
dec
add
sub
cld
mov
or
loope
js
roll
fstpl
add
pop
pusha
adc
scas
xchg
jg
xor
adc
into
mov
sahf
sarb
pop
popf
and
add
mov
push
rcrb
enter
mov
insb
xchg
sub
test
xchg
add
dec
add
test
pushl
and
or
add
insb
sbb
insb
or
push
pushf
mov
notb
mov
xchg
scas
xor
outsb
add
add
xor
push
fcompl
mov
or
nop
adc
fldt
pushl
subl
add
dec
add
mov
loop
sbb
inc
cs
dec
add
inc
cmpsl
add
fistpll
loopne
lret
lods
mov
pop
test
int3
decl
lea
in
and
jl
add
dec
sbb
mov
pop
mov
fildl
test
push
cmp
or
rcll
dec
fwait
insb
xchg
inc
add
mov
mov
xchg
cli
mov
cmpb
rcrb
mov
fmull
cmpsl
push
mov
pop
adc
push
xchg
sub
orb
ja
cmp
or
inc
or
rolb
sub
add
jl
mov
fldl
add
sbb
rclb
loop
test
xchg
int3
fcomip
inc
sub
push
sub
notb
adc
push
add
xchg
mov
mov
mov
cmp
mov
mov
pop
push
test
fwait
inc
or
push
xchg
push
fcomi
stos
pop
xlat
pop
push
or
push
notb
push
cmpsb
xchg
testb
lock
rcrb
pop
push
fisttpl
push
shlb
adc
add
add
lods
pop
data16
and
push
fists
filds
add
pop
cmp
jo
fistps
sbb
and
cwtl
cmpsl
movsb
mov
cmpsl
shrl
adc
orb
add
rcll
inc
adc
add
xchg
add
push
loopne,pn
add
test
push
lods
pusha
test
cmpsl
push
xorb
movsb
add
adc
inc
insl
inc
sti
or
adc
sub
fwait
mov
in
sbb
or
rcl
ror
xchg
pop
jnp
jmp
ss
mov
cmp
sbb
and
jmp
loopne
stos
adc
add
push
mov
hlt
lods
and
dec
jecxz
les
rolb
cmp
in
sbb
rcr
out
clc
jmp
xor
pop
and
sahf
stos
fcompl
pop
push
jmp
pop
cs
cmp
mov
hlt
sarl
imul
sbb
rol
inc
mov
icebp
out
pop
and
or
mov
cmp
mov
cltd
sbb
mov
out
lcall
push
aas
call
push
test
cmp
mov
outsl
in
add
mov
fistpll
push
cmp
je
cmp
fs
cmp
cmpsb
cmpsb
adc
pusha
int
xor
push
adc
mov
inc
loopne
inc
rolb
xor
or
idiv
xor
pop
push
and
addb
mov
sub
scas
xchg
adc
shrb
insl
push
in
mov
inc
add
rclb
xor
les
sbb
fiaddl
nop
jmp
pusha
roll
jg
pop
fdiv
popf
leave
cmc
jb
sbbb
mov
add
cmp
rorl
adc
cmp
mov
jl
mov
inc
jae
ret
movsb
push
adcb
aam
add
xchg
push
in
popf
lods
pop
or
add
or
call
cwtl
add
xchg
push
or
scas
xor
sbb
mov
mov
dec
insb
pop
flds
xor
insb
mov
add
cmp
lret
pop
jecxz
mov
xchg
cmp
and
jl
dec
xor
jo
pop
mov
inc
mov
test
test
xchg
inc
or
or
and
mov
subl
popa
lock
xor
adc
jmp
push
subb
add
pop
nop
inc
adc
sub
addb
mov
and
push
sbb
mov
cmp
add
xchg
inc
push
nop
xor
adc
inc
mov
xchg
call
push
inc
push
int
jno
adc
mov
or
mov
add
jle
sub
or
xor
add
mov
mov
or
mov
and
outsl
push
popl
xor
cli
lea
add
push
and
or
jecxz
sbb
mov
push
test
shll
add
push
or
sub
outsb
add
push
or
jbe
push
ja
stos
or
adc
dec
sbb
mov
in
rolb
lahf
or
pop
add
jne
or
mov
sahf
cmp
inc
xchg
mov
clc
es
insb
movl
jle
xchg
mov
mov
je
inc
bound
jle
addb
xor
pop
pop
call
filds
rolb
jle
decb
cmpsl
shrb
outsb
imul
and
mov
scas
inc
add
sub
outsb
pop
in
and
mov
orl
pusha
and
xchg
push
dec
jl
and
jl
and
mov
mov
push
adc
jl
push
mov
mov
xor
test
enter
test
and
dec
call
or
sbb
push
or
insb
imul
orb
call
xor
mov
test
mov
movsb
mov
dec
inc
sub
mov
lods
xchg
xor
push
pop
push
push
lock
mov
and
mov
push
test
inc
insl
fisubrl
push
pusha
inc
and
fdivl
jnp
mov
push
xchg
faddl
rolb
addb
icebp
pop
daa
inc
inc
pop
and
lcall
les
and
mov
fistpl
rorb
xchg
jbe
stos
clc
jmp
and
cs
cmp
ss
das
loopne
inc
xor
addb
pop
cmp
in
inc
sbbl
pop
icebp
pop
dec
gs
andl
cld
subl
andl
mov
jle
mov
inc
ja
clc
cmp
loope
mov
fdivr
mov
cli
mov
inc
push
sub
rclb
aad
out
mov
popa
mov
clc
sbbb
rorl
fcomp
sub
or
cmc
aaa
push
mov
inc
jge
addl
adc
mov
push
sub
shlb
mov
adc
push
fcom
jg
and
xchg
cmp
jle
outsb
push
inc
sarb
and
sbb
aam
jg
hlt
fwait
loopne
push
loopne
push
inc
ficoml
pusha
xor
push
outsl
incl
ret
pusha
bound
jmp
andb
fistps
xchg
and
rcr
in
and
add
sub
or
or
xor
dec
test
jge
and
mov
test
inc
sbbb
sub
out
sub
jecxz
pop
xorl
jp
loope
mov
jle
jo
mov
shl
xchg
xorw
sub
cmpsb
rcrb
sbb
add
inc
push
mov
sub
and
push
push
adc
les
jecxz
mov
and
scas
xor
addr16
insb
inc
sbb
aaa
add
jbe
notb
fisttpll
push
push
adc
sbb
cltd
and
es
hlt
pop
lcall
dec
shlb
lock
adc
push
addb
mov
inc
inc
push
add
std
xchg
loopne
push
and
mov
ss
popa
fmuls
or
jnp
or
cli
xchg
and
pop
dec
aam
adc
push
and
fs
add
cmpsb
rolb
jno
xor
push
inc
sbb
dec
add
add
push
jo
jbe
addb
push
xor
adc
xchg
sbb
orb
fwait
clc
fisttps
jl
inc
xchg
cmp
cmpsl
and
mov
cs
sbb
into
inc
popa
cld
mov
pop
aam
cmp
and
add
pop
cmpsl
and
es
pop
pusha
loopne
mov
rcrb
xlat
popa
iret
shlb
mov
xchg
mov
fistl
or
jle
adc
in
out
and
or
adc
orb
fimull
inc
and
sub
adc
lcall
sbb
cwtl
cwtl
mov
or
xchg
or
sbb
xlat
xchg
outsb
shrb
faddp
pop
roll
xchg
mov
jbe
add
xchg
push
in
mov
sbbl
lahf
pop
xchg
insb
and
and
pushf
jl
icebp
or
jl
inc
push
pusha
insl
in
testl
fst
push
or
mov
and
xchg
pop
aam
add
push
fcompl
xor
sub
adcb
dec
jo
jbe
cmpsb
push
dec
shrb
inc
xchg
fists
jb
and
xor
and
mov
cltd
mov
add
add
and
xchg
or
xchg
add
lcall
inc
cmp
jo
mov
add
outsb
aam
lock
pop
xchg
mov
mov
stos
hlt
rcrl
add
pop
xor
adc
fiadds
pop
stos
js
bound
sarb
jl
test
and
ret
out
mov
xor
das
xor
inc
mov
pop
push
mov
cmpsl
mov
test
out
or
loop
popf
les
pop
add
push
ficompl
pop
and
jmp
or
cmpb
push
or
and
ja
std
mov
add
or
inc
mov
and
insl
mov
push
jg
mov
add
push
mov
inc
dec
add
add
lock
mov
mov
jg
pop
shrb
rclb
xchg
or
cmp
pop
push
mov
push
mov
mov
adc
push
les
icebp
subb
adc
lock
xchg
and
movsb
pop
mov
sub
mov
push
xchg
pop
imul
xor
mov
push
insb
test
rcrb
xchg
hlt
mov
sahf
mov
xchg
ljmp
add
ljmp
pop
pop
adc
mov
sub
outsl
movsb
and
scas
nop
movsb
inc
pop
andl
and
push
and
pushf
inc
adc
push
insl
call
adc
lock
push
lret
adc
or
pop
pop
push
outsl
xor
or
cmovle
add
scas
aas
mov
adc
or
jbe
pop
je
stos
dec
mov
push
pushf
add
aam
xorb
sbb
cmp
cmp
inc
pop
inc
sbb
call
jo
rorb
adc
ja
adc
jecxz
jbe
xchg
adc
cmp
pop
pop
push
push
je
loopne,pn
dec
sbb
shlb
and
nop
hlt
mov
add
scas
mov
inc
sbb
mov
dec
adc
mov
add
pop
push
add
jge
push
jae
aad
jae
push
ficoml
jl
fiaddl
mov
rclb
mov
shr
fdivrl
enter
addl
or
int3
test
inc
clc
push
and
jecxz
sbb
insb
and
add
adc
inc
icebp
dec
ret
sub
shlb
push
adc
push
je
pushf
adc
jno
cwtl
sbb
add
and
and
clc
add
mov
fcoml
fcmovu
sahf
and
push
mov
inc
add
dec
movsb
jno
dec
loope
nop
push
and
cmpsb
jb
adc
push
mov
les
lea
jo
push
add
inc
adc
shl
iret
rcrb
ss
push
notb
paddusb
shll
inc
sahf
sub
inc
push
lcall
and
and
add
es
add
loope
sahf
adc
and
mov
stos
test
sbb
push
sbb
add
push
pop
arpl
inc
repnz
add
mov
test
test
sub
add
jg
jp
inc
ret
mov
subb
hlt
mov
adc
add
mov
mov
add
add
shlb
jno
add
sub
ljmp
add
pop
das
jp
mov
idivb
out
add
add
outsb
rcr
mov
xorl
mov
cltd
shrb
out
ljmp
inc
xor
ret
jmp
addl
add
out
mov
cld
popa
xor
popf
inc
mov
arpl
or
push
aam
sarb
add
sub
push
sbb
pop
pop
sbb
fs
sarl
test
pop
mov
pop
push
jno
add
scas
sar
in
pop
ret
pop
sbb
dec
mov
or
or
ds
xchg
test
test
and
pop
and
mov
lcall
add
pop
jo
fcoml
xor
bound
pusha
inc
lret
xor
inc
pop
xchg
adc
add
loopne
leave
fcoml
push
repnz
push
out
loopne
inc
hlt
adc
xorl
and
mov
xchg
inc
add
lock
or
dec
cmp
inc
and
or
or
pusha
stos
push
mov
js
inc
adc
inc
fsubrl
and
test
xor
xor
jb
inc
mov
dec
or
aas
fs
xor
rolb
sbb
cli
cli
push
mov
push
adc
adc
or
push
mov
mov
bound
icebp
push
les
adc
out
xchg
mov
clc
add
add
jmp
outsb
adc
push
stos
cwtl
ficoms
mov
mov
jbe
inc
mov
mov
pop
inc
inc
call
es
pop
cmp
pop
add
pop
sbb
arpl
aam
sub
sbb
jmp
add
adc
pop
pushf
mov
int
enter
push
rorl
dec
jne
add
roll
jle
icebp
push
lock
and
cs
pop
fcompl
mov
pop
pop
cmp
fisttps
inc
xor
rcl
push
and
out
jl
jl
cmp
jae
pop
mov
cmp
pushl
add
push
adc
and
adc
xchg
push
rorb
lret
and
sarb
pop
mov
jp
add
push
fadds
and
pop
push
push
xchg
cmp
fwait
test
xchg
push
jp
data16
in
inc
rorb
xchg
sub
hlt
pop
aaa
add
loopne
add
push
and
xchg
adc
mov
data16
xchg
loope
andb
inc
ret
jle
or
jne
cmpsl
shlb
pop
dec
or
or
add
sbb
pushf
es
jne
lock
pop
add
add
xchg
repnz
adc
stos
int3
mov
sub
sahf
hlt
and
push
xor
mov
testb
push
inc
fs
add
xchg
inc
testl
cmp
ds
or
mov
or
movsb
adc
cmp
fstpl
cmpsl
fldl
xlat
mov
insl
popf
add
mov
add
inc
insb
push
aam
mov
sti
fucomi
orb
or
inc
pop
adc
cmpsb
add
push
or
jge
add
lods
sbb
and
sbb
or
xor
add
push
insl
lahf
jp
test
pop
popa
shlb
mov
xchg
pop
pop
cmpsl
mov
sub
ljmp
or
dec
inc
adc
loope
lock
cmp
divb
scas
ss
nop
adc
xchg
mov
dec
mov
xchg
push
dec
ret
inc
add
addr16
push
lret
adc
ret
push
sub
adc
xchg
and
mov
mov
nop
lods
or
jge
or
rolb
sub
add
adcb
mov
adc
addb
out
stos
or
pushl
fwait
xchg
xchg
js
push
or
push
push
sbbb
pop
loop
fsubl
test
xchg
fwait
add
hlt
ja
orb
sbb
dec
cld
push
adcl
pop
test
test
push
pop
push
sbb
int3
dec
adc
mov
cmp
mov
and
adc
push
les
inc
sahf
test
inc
push
cmp
cmc
inc
push
mov
or
inc
xchg
adc
pop
or
lds
dec
test
jmp
mov
aam
sbb
shrb
mov
adc
xor
add
jecxz
push
add
scas
or
and
or
fisttps
aam
dec
add
rorb
sbb
mov
mov
rolb
in
add
sub
jbe
add
xchg
inc
push
fs
stos
fcoml
out
xor
xchg
mov
scas
je
pop
mov
lock
sbb
rol
add
ficoms
add
jne
jmp
and
sbb
mov
inc
sbb
and
inc
add
sbb
xchg
je
pop
add
rclb
pop
adc
cltd
mov
popf
fisubs
cld
aas
adc
pop
lods
test
test
push
rcl
and
sub
and
std
or
adc
cmpb
mov
sarb
and
mov
shlb
push
mov
mov
sub
and
sbb
loopne
sub
icebp
jg
cmpsb
or
and
and
add
insb
xor
xchg
fldl
push
pop
and
and
cld
fwait
mov
inc
out
insb
in
addl
loope
sub
mov
pushw
pop
lock
push
mov
xchg
xchg
jmp
cmc
outsl
and
adc
add
push
loopne
xchg
add
loope
or
outsb
cmp
in
pop
add
add
jg
dec
mov
addb
mov
jae
dec
fiadds
mov
scas
shlb
cmp
les
loope
and
fstl
or
cmpsl
je
mov
inc
or
push
adc
pop
gs
clc
sub
mov
sub
or
das
pop
xchg
push
pop
mov
inc
loopnew
into
sub
loopne
push
or
popf
push
shlb
push
and
push
ds
popa
inc
jl
ljmp
adc
add
cmpsb
fcmovnu
mov
mov
jnp
scas
pop
and
scas
pop
mov
clc
ljmp
pop
xlat
das
add
pop
rorl
xchg
call
push
loopne
adc
push
mov
popa
aam
scas
pop
sub
shlb
sub
dec
scas
jo
sub
jle
push
scas
push
js
inc
pusha
and
sbbb
shlb
je
in
jg
ficoml
inc
psraw
inc
add
fs
xchg
and
xor
jg
cmpl
mov
jae
or
dec
popf
clc
jmp
push
jns
or
pop
dec
push
mov
or
sbb
sbb
addb
pop
shll
in
push
push
mov
mov
int
dec
inc
lods
xor
pusha
sbb
rorb
notb
sub
or
push
adc
sar
addb
out
sarb
xor
out
in
mov
cwtl
cltd
cwtl
add
pop
jo
scas
mov
add
or
cmp
inc
inc
inc
pop
aam
mov
mov
cmp
mov
adc
adc
faddl
jmp
loope
mov
push
fisubrs
sbb
and
jg
mov
test
xor
rcrb
lret
dec
or
inc
sarl
push
dec
mov
mov
xor
dec
jp
dec
pop
push
xchg
test
int3
mov
pushf
ljmp
lea
into
pop
mov
push
enter
fsubrl
sub
dec
or
cmp
mov
xchg
lcall
add
adc
add
imul
adc
mov
or
jb
test
push
adc
incb
jl
jle
pop
xor
or
mov
mov
pop
inc
adc
cmp
fldenv
fs
pop
test
dec
out
cld
rcr
and
add
add
sbb
imul
mov
pusha
insb
pop
mov
xchg
mov
push
or
inc
mov
rclb
and
mov
je
xor
jl
int3
and
or
jge
sbb
js
jo
xchg
cmpsl
pop
push
sbb
sbb
call
push
and
xor
nop
push
adc
jb
mov
fstl
and
or
pusha
adc
push
inc
adc
add
adcb
decl
pop
test
inc
pusha
add
and
mov
mov
clc
movsb
dec
mov
and
or
outsb
hlt
add
inc
mov
cmc
add
stos
lock
ret
mov
xor
push
arpl
add
dec
test
push
aam
pop
pushf
xor
nop
push
pop
aad
push
outsl
adc
fcompl
std
add
add
mov
mov
adc
outsl
mov
sub
orb
add
sbb
sbb
and
ficomps
aam
test
pusha
cmp
mov
nop
add
xor
push
popa
fbld
mov
jle
and
pop
rolb
out
push
dec
add
inc
in
inc
lods
push
stos
xchg
movd
add
inc
cli
setl
adc
mov
add
mov
shr
mov
jne
insl
shrb
push
mov
xor
xor
es
ljmp
and
outsb
and
pop
sarl
adc
add
jo
arpl
cld
sbb
movsl
loope
sbb
nop
mov
cwtl
adc
pop
inc
out
fsubrs
dec
push
jl,pt
adc
loope
adc
push
inc
je
pop
dec
je
jmp
pop
shl
clc
aaa
cld
pop
add
and
sub
inc
nop
dec
sbb
inc
fcoms
pop
mov
adc
push
ficompl
adc
xbegin
and
adc
outsl
jp
aas
lock
lock
and
pop
loop
loopne
adc
cmp
test
mov
add
push
nop
sub
outsb
and
mov
fisubl
adc
adc
loop
adc
and
loope
and
xchg
lock
incb
mov
and
dec
aam
aaa
and
mov
add
lea
xor
pop
push
fcoml
push
or
xchg
xlat
gs
andl
orps
add
insb
iret
push
test
adc
inc
or
das
test
stos
pop
inc
fcoml
adc
inc
mov
pushl
push
inc
mov
repnz
jae
clc
fldt
cmpsb
arpl
add
cmp
sbb
pop
xor
roll
dec
adc
add
ret
dec
adcb
fsubl
or
push
add
sbb
orl
rorb
lods
test
or
rorl
dec
push
adc
ljmp
ficoml
outsl
pop
fimuls
pop
loopne
scas
push
pop
mov
sbb
or
jb
dec
mov
sbb
push
cld
or
lock
clc
sbb
outsl
sbb
clc
bound
pop
mov
add
inc
mov
dec
adc
cmpsl
aam
dec
jecxz
push
loopne
sbb
xchg
dec
adc
pop
inc
pop
jg
fsubrl
outsl
adc
push
and
or
add
push
sarl
jl
lcall
aam
xor
les
and
inc
inc
push
or
add
push
inc
mov
sbb
mov
and
mov
jle
stos
lcall
lock
loopne
in
mov
sbb
and
enter
imul
fmull
fimuls
push
adc
or
fists
adc
cmp
and
inc
lds
xchg
xchg
push
mov
push
inc
loopne
adc
ss
add
or
adcl
fidivs
mov
dec
adc
add
pop
loopne
pop
mov
rclb
dec
fisttps
arpl
xor
push
gs
and
nop
vmread
or
sub
sbb
add
add
and
cmp
shrb
inc
inc
clc
out
nop
icebp
add
push
mov
or
rolb
mov
pop
imul
add
add
mov
and
cmp
sbb
cld
dec
mov
aam
add
outsb
or
sbbb
xor
bound
rorb
rcrl
andl
sti
decl
push
sub
rcrb
push
mov
xor
xor
fcmovbe
mov
sbb
aam
or
out
push
aaa
mov
and
cmp
scas
or
and
sub
inc
insb
andb
jp
mov
rorb
push
push
and
mov
enter
mov
int
add
push
add
push
mov
dec
ficoms
mov
inc
sub
xor
xlat
sub
push
sahf
xor
cwtl
cld
decl
push
inc
mov
je
inc
dec
nop
jns
sub
adc
sub
push
and
fiadds
dec
sbb
test
out
fstl
ret
pop
dec
pop
and
push
inc
dec
sub
and
inc
add
dec
pop
testb
adc
sub
push
test
out
mov
and
adc
out
cli
xchg
mov
adc
insb
mov
inc
add
in
in
pop
mov
pop
inc
or
or
push
pop
inc
repnz
decl
lock
inc
sub
push
mov
push
xor
mov
push
adc
movsb
xor
sub
add
imul
xchg
xchg
pop
dec
push
bound
es
fs
or
loopne
add
pop
pop
lods
pop
mov
daa
lock
cwtl
push
fldt
xorl
sbb
add
sbb
xor
loope
xchg
inc
adc
pop
and
or
aas
cmpsl
or
mov
cmpsb
test
xor
ljmp
mov
inc
inc
push
pushf
mov
lahf
add
jnp
add
je
mov
orb
mov
mov
xchg
and
cmp
call
shlb
scas
push
loope
das
test
and
sub
sbb
xor
jmp
adc
in
das
push
mov
std
ljmp
dec
xorl
cmp
push
or
and
xchg
inc
mov
int
ljmp
jp
add
aaa
inc
xor
and
scas
xor
je
or
sub
sub
adc
xor
sub
mov
das
inc
test
inc
sub
add
or
shll
scas
inc
sub
mov
adc
bound
shll
adc
pop
stos
dec
mov
sbb
bound
sbb
inc
adc
inc
mov
rcll
xor
outsb
xor
inc
add
jl
stos
mov
cs
adc
inc
sub
mov
filds
sbb
jbe
lret
aaa
adc
jb
push
xor
inc
xchg
lods
mov
add
jg
pop
addl
add
loope
add
mov
push
adc
add
push
pop
xchg
inc
mov
lahf
xchg
fcomps
adc
clc
lea
in
add
or
adc
and
inc
roll
cmp
outsl
mov
roll
xchg
fldt
clc
sub
gs
or
cli
faddl
inc
or
and
push
add
ljmp
ficompl
cld
add
cmpsl
test
cmp
xchg
mov
adcb
dec
jns
push
cmpb
andl
pop
cli
cmpsb
subb
in
pop
aad
mov
add
jbe
push
test
mov
inc
fs
add
addb
sbb
sub
sub
push
and
fisubrs
add
addb
es
test
add
test
ja
inc
sub
jp
push
dec
fcompp
push
adc
inc
sbb
movsb
popa
sbb
rolb
cwtl
inc
test
add
inc
insb
mov
mov
xchg
out
movsb
je
cmc
xchg
add
cmp
jno
mov
stos
std
or
dec
subb
nop
jae
cmpsl
adc
push
shrb
and
adc
test
dec
call
mov
popf
add
xchg
gs
loop
testl
call
or
sahf
inc
pop
add
adc
cld
cmp
imul
dec
adcb
rolb
lock
fidivl
push
ficoms
sub
add
mov
pop
xor
mov
nop
mov
in
jp
fadds
mov
jbe
mov
rcrl
je
mov
sub
cltd
fiaddl
dec
clc
jae
arpl
fildl
es
cmp
mov
cld
dec
addb
pop
push
rclb
stos
sbb
inc
push
add
sbb
and
rorb
fcoms
sarl
add
jmp
outsb
insb
lahf
fsub
xchg
pop
test
mov
xor
mov
dec
xor
mov
mov
xlat
scas
push
xor
push
and
pop
inc
clc
cmp
mov
mov
inc
pusha
jle
add
les
rorb
mov
shlb
mov
flds
pop
inc
xor
add
call
pusha
push
rorb
loopne
adcb
fsubl
sub
dec
push
add
and
ficoms
push
dec
cwtl
and
xor
push
add
clc
stos
add
mov
mov
jmp
and
loopne
pop
hlt
pop
cli
mov
inc
mov
stos
pop
pusha
sbb
call
addb
sbb
gs
add
adc
xor
add
or
add
add
push
aam
and
repnz
lods
out
push
test
jae
test
push
pop
movsb
pop
inc
sbb
inc
sbb
mov
sub
add
push
loopne
inc
add
fstpt
add
rclb
add
sub
or
arpl
lcall
push
or
push
not
hlt
jbe
decl
mov
adc
add
xor
pusha
sbb
adc
and
decl
popa
push
and
pusha
pop
or
enter
cmp
or
ret
insl
jbe
mov
aad
fcmovb
adc
sub
push
mov
aaa
popa
adc
mov
neg
sbb
movsl
and
pop
adc
popa
add
fs
dec
arpl
mov
mov
dec
loopne
mov
add
jne
js
je
inc
gs
dec
sbb
mov
fidivrl
adc
add
inc
inc
xor
or
sar
mov
xchg
xor
fiaddl
dec
adc
or
mov
xor
pop
fldl
mov
jecxz
push
push
loopne
push
or
pop
xchg
sahf
test
pop
sbbb
cmp
mov
fsubrs
push
loop
movsl
adc
pop
adcb
xor
xchg
fisttps
or
or
hlt
mov
nop
lods
je
out
push
loopne
mov
mov
mov
xorb
sub
mov
pop
lods
dec
pusha
xor
pusha
dec
and
push
rcll
call
or
and
iret
adcb
adc
outsb
and
loope
int3
sub
shrb
jmp
sbb
adc
jle
lock
adc
xchg
pusha
aaa
dec
incl
mov
adc
cmpsb
jecxz
add
insb
xchg
fisubrl
in
stos
add
movsb
xchg
sbb
sub
adc
or
imul
stos
cli
fbld
stos
mov
and
inc
push
call
jg
das
mov
inc
inc
jbe
lahf
push
adc
fldl
sub
and
das
lock
adc
pop
aam
popa
dec
add
les
bound
loop
loop
cld
popf
es
add
mov
or
add
call
pop
popa
cmpsb
mov
xchg
add
mov
dec
cld
pop
add
push
add
or
xchg
mov
push
cmp
adc
insb
movsl
dec
mov
outsl
insl
dec
std
aam
xor
mov
or
test
mov
pusha
xchg
jg
adc
movsb
push
rcrb
push
add
or
xchg
push
aaa
cld
mov
or
loopne
dec
add
add
add
push
and
adc
xchg
ds
xor
jo
inc
ret
scas
fidivl
adc
nop
nop
sub
adc
add
cli
inc
fst
push
jo
mov
xor
cmp
adc
loop
cwtl
mov
test
out
jecxz
shll
mov
mov
push
add
aam
and
cmpsb
pop
sub
enter
das
mov
shl
aam
xor
mov
mov
mov
pop
push
mov
sbb
and
push
xor
insl
mov
add
mov
fidivrl
adc
pop
xchg
and
jmp
or
jno
and
loopne
mov
push
scas
orb
and
icebp
add
mov
rclb
in
repnz
lods
or
inc
test
inc
adc
sbb
in
daa
mov
mov
push
or
push
mov
xchg
fiaddl
pop
shrb
add
je
add
lock
mov
add
pop
fiaddl
cli
aad
lods
add
sbbb
xchg
push
xchg
mov
int3
and
fiaddl
xchg
jbe
sbb
call
push
sahf
push
and
mov
push
clc
dec
push
add
lock
inc
cmp
add
movsb
into
and
shrb
add
cmp
sbb
adcl
or
cmpb
xor
incb
mov
ja
aam
add
ja
jp
stos
lock
push
mov
xor
lahf
aam
shlb
pushf
outsl
mov
fldl
add
out
shlb
es
or
add
mov
je
xchg
push
scas
lock
mov
movsb
aaa
add
xchg
lcall
nop
push
adc
pop
pop
dec
add
inc
cltd
stos
push
add
add
ficoms
movb
rcr
rolb
mov
dec
add
roll
xchg
fcomps
jle
iret
int3
or
push
mov
rcrl
adc
xor
je
inc
fisttpll
and
ja
xchg
xlat
mov
cwtl
call
mov
pusha
fisubrl
call
jbe
das
inc
dec
insl
sbb
sbb
and
or
and
sub
push
je
icebp
lahf
push
ret
push
or
leave
cli
loopne
js
stos
loopne
fistpl
pop
bound
mov
inc
mov
std
mov
scas
add
aam
cli
inc
fmuls
push
add
and
jb
shrb
call
fistps
pop
sub
or
pop
mov
xchg
and
lods
xchg
cmp
das
call
jo
or
inc
sbb
std
push
outsb
xor
pop
add
inc
add
push
outsb
lods
and
stos
sub
cld
fmull
dec
inc
sahf
fidivl
filds
xlat
outsl
or
and
adc
lods
and
cmp
arpl
cwtl
nop
stos
jle
push
iret
push
ret
insl
shlb
jne
jbe
xchg
aas
add
test
pop
push
mov
mov
lods
pop
pop
jbe
and
and
cmpsb
cmp
or
inc
std
mov
adc
scas
test
fsubrl
mov
inc
ljmp
mul
dec
and
outsl
jo
dec
adc
adcb
sbb
test
mov
shrl
xchg
mov
mov
add
xor
stos
mov
xor
cmp
inc
test
xchg
adc
mov
adc
push
mov
fsubrs
fcomip
incl
mov
adc
outsb
inc
and
inc
cmpsb
mov
push
xor
lock
jno
je
mov
xchg
adc
jg
stos
push
lods
adc
push
ret
je
adc
dec
adc
lret
rcll
mov
adc
cmpsl
nop
adc
adc
xchg
outsb
adc
ficoml
outsb
lock
jg
jne
icebp
sub
add
inc
push
lret
mov
inc
fildll
ror
scas
sbb
push
int3
add
push
or
pop
aam
call
xor
and
loope
mov
loop
and
mov
dec
push
and
ds
push
add
or
clc
and
mov
jg
loopne
push
sub
adc
sub
mov
mov
sub
add
mov
mov
cmpsl
add
pop
add
inc
gs
jle
add
mov
xchg
subb
mov
xlat
mov
jg
mov
jo
popa
stos
and
dec
pop
jg
jg
xchg
scas
mov
cli
inc
inc
and
lret
dec
addl
in
mov
inc
movsb
pushf
or
rclb
jne
add
jmp
and
pusha
mov
or
add
xor
mov
push
dec
push
pusha
pop
xchg
shl
add
rolb
ficomps
add
push
in
dec
add
xchg
dec
js
mov
dec
dec
and
add
dec
movsb
and
mov
fisubl
xchg
add
mov
loopne
push
jge
add
iret
or
adc
test
inc
fwait
xchg
mov
or
pop
or
or
or
and
or
fistl
pop
or
addr16
js
or
lds
incb
sbb
data16
and
adc
sbb
add
std
in
add
subb
mov
push
sbb
or
or
mov
gs
js
rorl
inc
push
sbb
mov
push
insl
add
xor
sahf
or
mov
xchg
mov
sub
sbb
xor
add
add
arpl
add
insb
add
sbb
rcrl
stos
jl
push
cli
sbb
add
push
mov
test
inc
push
xchg
pop
adc
subb
imul
dec
inc
enter
stos
mov
add
pop
xor
add
incl
sub
clc
divb
xchg
jle
add
pushf
add
and
push
mov
cmpsb
jb
subb
fiaddl
es
fbstp
int3
add
fcoml
cltd
inc
push
fisubrl
test
and
pusha
repnz
adc
test
add
rclb
cmp
mov
dec
sbb
or
jbe
mov
add
clc
dec
push
mov
mov
or
jle
inc
aam
inc
stos
mov
adc
mov
add
or
lock
fdivrs
adc
push
add
lret
dec
sbb
or
and
mov
jl
mov
sbb
inc
xchg
sbbb
or
sub
aam
jbe
adc
push
adc
add
jo
inc
out
ja
dec
mov
mov
xor
fisubrs
or
mov
out
mov
inc
jg
sub
jne
and
adc
or
pushf
push
xchg
mov
add
aas
cltd
cs
add
mov
nop
dec
or
decl
push
imul
and
sbb
add
mov
insb
cltd
and
adc
xor
inc
fiaddl
into
insb
andl
pop
push
sbb
xlat
insl
pop
sub
popf
push
je
mov
fidivs
test
sub
inc
push
stos
ja
xchg
add
loopne
jo
xorb
dec
add
jp
push
test
hlt
add
and
jne
nop
push
add
jl
sub
xchg
lfs
mov
adc
inc
and
or
sub
dec
inc
or
mov
add
push
mov
aaa
arpl
adc
add
outsb
adc
ss
push
mov
or
push
fisttpll
insl
dec
aam
push
clc
and
adc
rolb
adc
add
push
sbb
xor
push
mov
rolb
push
sbb
inc
int
pop
pusha
pop
add
adc
dec
ficompl
jg
mov
movsb
dec
and
ja
ficompl
xchg
ja
xchg
mov
mov
dec
and
in
or
fisttpll
popa
mov
test
add
adc
mov
shrb
and
and
cmp
lods
xor
pop
xor
rorb
jbe
mov
cwtl
and
or
inc
sub
xchg
aas
mov
outsl
xchg
and
xlat
and
adc
adc
mov
aaa
int
inc
pop
adc
add
push
push
outsl
add
pusha
fidivl
mov
pop
mov
jb
insb
add
sbb
ljmp
cmp
clc
pop
jle
add
pop
fstpl
push
fmull
push
xchg
and
outsl
pop
sbbb
pop
inc
mov
and
dec
mov
ss
fildll
cmpl
hlt
push
insb
adc
push
xchg
pop
call
sbb
das
rolb
mov
push
mov
std
test
loop
dec
mov
pusha
jae
adc
inc
and
xor
push
add
test
pop
movsb
cmp
inc
xchg
jp
jge
ja
adc
xor
or
adc
sbb
aam
add
fistpl
stos
repnz
mov
sub
and
adc
xor
sub
jl
inc
dec
mov
addb
xor
mov
push
push
inc
push
xor
das
sbb
mov
push
inc
add
pop
or
or
inc
xor
outsb
dec
mov
pop
inc
xor
jno
push
jb
jg
pop
push
add
lods
dec
cwtl
mov
stos
add
out
sbb
fiadds
add
repz
dec
pop
sub
cld
out
adc
enter
jp
jb
jb
cmp
or
and
fwait
and
andb
jnp
bound
fs
ljmp
or
and
push
xor
push
push
mov
mov
sub
fs
sahf
inc
ds
pop
loopne
cmp
xchg
inc
push
subb
add
add
add
adc
sar
data16
loope,pn
incb
xchg
add
pop
inc
or
lock
stos
pop
pop
mov
clc
jae
and
sbbl
ljmp
into
push
test
xchg
and
nop
ret
push
hlt
enter
add
mov
shlb
push
dec
or
adc
gs
loop
and
dec
push
jecxz
push
loop
sgdtl
and
inc
adc
pop
lods
les
pop
pusha
adc
ret
sub
add
add
in
jnp
fildll
inc
mov
add
or
or
mov
lods
insb
lock
loop
test
pop
mov
sub
aam
shrl
aam
pop
sbb
aam
adc
mov
dec
inc
ret
jmp
ret
adc
add
push
pop
movsb
push
and
pop
and
or
add
push
das
cli
mov
dec
push
aam
ret
addb
lock
or
or
pop
adc
ficoml
adc
xlat
add
aad
pusha
shrl
and
mov
push
adc
inc
xchg
push
filds
xor
xor
or
pop
push
xchg
adc
clc
push
lret
add
pop
and
dec
cmp
imul
lods
icebp
ljmp
or
xor
and
fisubrs
xor
or
loope
out
push
push
in
push
mov
hlt
and
pop
fstp
mov
adc
outsl
push
mov
add
test
add
pushf
sbbb
or
and
push
pop
and
push
movsb
and
push
hlt
roll
les
fistps
sub
adcb
mov
push
ss
push
gs
insl
adc
push
sbb
ficomps
pop
and
fistl
or
mov
fsubrs
sub
aam
xorb
sar
loopne
adc
adc
or
jo
or
push
sbbb
inc
inc
mov
xor
mov
aas
push
lcall
int
inc
push
incb
inc
add
movsl
rclb
xchg
mov
push
sub
sub
cs
mov
aam
pop
lock
decl
push
xchg
inc
mov
movb
mov
push
ljmp
loop
shlb
add
pusha
add
outsl
sub
or
movsb
pop
loopnew
adc
fcoms
loope
daa
push
lods
push
es
push
ret
shl
mov
or
mov
pop
add
pop
fbld
pop
push
jbe
or
push
fisttps
out
loop
adc
add
inc
dec
pop
aam
push
add
or
fmull
mov
mov
outsl
ljmp
sahf
rcrl
adc
fstpl
xchg
push
mov
push
adc
mov
in
xchg
cmp
pusha
push
xor
sub
push
add
jae
xchg
pop
ret
pop
sub
pop
test
and
adc
add
decl
jo
inc
scas
adc
sub
jo
sbb
sub
cmpsb
es
mov
stos
sub
pop
mov
add
add
stos
fstl
adc
sbb
dec
mov
ficoml
cld
add
push
sbb
add
inc
je
clc
scas
push
fstl
pop
add
xchg
add
sub
or
pushl
lock
push
sbb
fs
push
jl
cmpsb
ficompl
sub
fnstsw
push
mov
xchg
outsb
inc
gs
inc
out
and
adc
add
pop
icebp
ja
cs
addr16
inc
pop
mov
ret
or
adc
pop
and
add
add
and
pushl
jl
sahf
sub
jo
loopne
fsubl
and
cmpsl
in
add
ss
or
fsubrl
incl
fldl
popf
inc
sbb
sub
and
sub
test
push
and
cwtl
inc
sbb
imul
push
gs
xchg
mov
mov
pop
roll
sbb
fisttps
ljmp
or
or
fistpll
mov
aam
inc
sbb
pop
sbb
push
sbb
mov
jmp
inc
fimuls
ja
dec
xchg
lock
jge
mov
rcll
ret
add
insb
adc
inc
mov
dec
call
xchg
mov
push
sub
jmp
sbb
push
stos
adc
adc
sub
jo
pop
xor
inc
adc
pop
mov
mov
scas
shlb
dec
add
cmc
or
fsub
xchg
loop
insb
mov
or
or
orb
lock
mov
jge
add
or
add
adc
mov
xchg
xchg
mov
sbb
or
push
pop
ss
and
xor
xchg
mov
or
add
or
andl
adc
or
pusha
test
sbb
pop
add
dec
adc
mov
into
fsubl
arpl
clc
xchg
xchg
jl
fists
fcmovne
es
or
mov
push
cmpsl
push
and
stos
pushf
mov
pop
cli
and
jmp
or
ficoms
push
pop
jl
or
adc
jno
mov
inc
adcb
mov
inc
xchg
adc
mov
pop
pop
fistps
pop
or
aaa
cwtl
add
insb
add
add
je
popa
add
add
dec
and
or
mov
cwtl
cmpsl
add
std
sub
mov
dec
mov
pop
inc
xchg
add
mov
ss
or
nop
add
dec
jecxz
sub
rorl
test
ficomps
popa
jp
rolb
or
or
adc
inc
jae
fs
and
cmp
outsl
mov
pop
inc
adc
push
ss
jb
inc
push
test
lahf
nop
iret
mov
add
ret
jge
add
mov
add
sbb
incb
lahf
lock
mov
test
mov
xor
dec
cltd
mov
out
test
add
and
pop
or
mov
mov
sahf
fcoml
push
jecxz
fadd
into
mov
ja
pop
int3
jmp
sbb
or
inc
push
ja
incb
or
push
and
addl
add
jge
fistps
and
inc
add
mov
add
pop
push
adc
push
mov
pop
adc
adc
adc
add
or
stos
jmp
bound
add
push
test
jg
cwtl
fbstp
insb
movsb
jbe
aaa
push
test
push
mov
loopne
notb
rolb
mov
add
xor
jmp
es
mov
lods
testl
mov
out
xorb
popl
add
pop
pop
inc
xor
jl
incl
in
xchg
mov
mov
and
lock
jo
and
adcl
inc
mov
incl
lock
add
mov
cmpsl
and
mov
shl
inc
xor
sbb
popl
and
sbb
add
jg
cmp
icebp
sbb
pop
fisttps
lret
pop
subb
inc
cmp
aaa
and
xor
repnz
and
mov
adc
shll
mov
imulb
or
shl
mov
popa
std
insl
daa
mov
push
mov
rorb
push
add
sub
or
or
mov
insb
add
cmp
pusha
add
aaa
ss
test
inc
loope
lahf
add
mov
ja
cmp
test
push
scas
or
roll
adc
enterw
das
inc
mov
push
adc
adc
pop
add
pop
add
loopne
add
or
push
rcl
mov
shlb
add
push
sbb
pop
and
push
ss
add
mov
mov
adc
pushf
or
mov
lods
hlt
jle
xchg
daa
dec
ret
adc
sbb
or
nop
mov
mov
mov
sbb
xchg
add
adc
push
push
shlb
fdivrp
xchg
mov
subb
pop
hlt
movsb
add
fdivrs
adc
push
xor
dec
dec
call
jnp
lahf
pop
pop
aam
cs
movsl
add
xchg
push
and
inc
incb
je
pushf
mov
jne
ds
jp
insl
sub
or
pop
jno
out
pop
insb
daa
stos
or
adc
and
add
movsb
shlb
xor
add
lcall
add
jns
push
inc
insb
sub
outsb
int
jl
cwtl
call
or
cmc
push
orl
fistpll
cmp
mov
jno
push
call
or
pop
add
mov
push
fcoml
into
push
adc
push
mov
fcmovnu
xlat
aad
pop
xchg
pop
loop
push
add
adc
cmp
inc
in
add
inc
nop
lcall
test
test
push
inc
add
sbbb
xchg
icebp
mov
pop
add
and
test
fiadds
je
orb
xchg
faddl
mov
cmp
cld
xchg
lock
and
pusha
inc
pop
pop
fisubs
outsl
inc
mov
inc
imul
pop
mov
xor
std
mov
push
push
and
mov
mov
sub
adc
inc
push
and
inc
insb
out
add
mov
and
fisttps
sarb
enter
and
aam
in
mov
inc
dec
cs
fwait
inc
sub
inc
mov
jmp
inc
sub
jmp
pop
dec
mov
stos
and
sbb
ljmp
adc
push
ds
sbb
pop
xor
jle
cwtl
jle
lods
shr
mov
adc
addb
mov
cwtl
dec
mov
or
and
inc
or
and
push
mov
adc
xor
add
outsb
mov
mov
push
sub
data16
xchg
add
fbld
pop
mov
pop
inc
loop
and
xor
sbb
lods
or
lock
das
xor
sbb
adc
and
pop
fisubrs
inc
scas
or
or
xor
popa
pop
mov
incl
sbb
jmp
cmp
mov
inc
push
popa
jb
decl
mov
addb
aaa
and
mov
cs
pop
test
nop
xor
cmp
add
or
aad
std
jae
add
jo
and
and
mov
es
or
push
or
js
call
sub
pop
adc
stos
inc
dec
addr16
test
mov
mov
cltd
sub
xor
loopne
xlat
mov
dec
adc
push
adc
scas
and
push
or
lret
pusha
fisubrl
push
test
xor
jo,pn
add
xchg
lods
imul
push
in
or
xchg
xchg
mov
or
adc
and
cmp
pop
addb
adc
xchg
pop
ficoms
cmpb
mov
and
mov
enter
out
adc
inc
pusha
mov
mov
inc
push
and
aaa
cld
xchg
orb
pop
cmp
incl
or
xor
pop
xlat
out
and
push
and
fldl
inc
dec
data16
stos
add
mov
test
push
pop
push
bound
incl
inc
xorl
pusha
add
mov
add
add
xchg
pusha
add
adc
test
nop
movsl
xor
nop
xchg
les
je
or
insb
ficomps
push
inc
les
adc
mov
fcompl
fcoms
and
jl
mov
xchg
and
inc
and
adc
xchg
sub
add
or
lock
and
cmc
sub
pop
shll
dec
rolb
pop
add
addb
push
xchg
addb
lock
inc
pop
xchg
pusha
inc
fsubrl
pop
xor
ljmp
inc
jg
jmp
ret
or
cmpsb
mov
pop
inc
arpl
push
das
jp
or
mov
stos
mov
push
loope
cmp
out
jg
popa
aam
jl
sub
mov
flds
mov
adc
rcr
inc
sbbb
test
cmp
inc
jmp
xor
shlb
daa
dec
mov
cmc
incl
or
dec
mov
xor
test
pop
test
xchg
xlat
call
filds
aas
inc
inc
into
mov
fidivs
adc
lods
xor
insb
decl
mov
addb
adc
add
inc
add
sbb
add
sbb
call
jmp
or
add
jg
dec
sub
xchg
and
loopne
jo
inc
adc
cltd
jle
and
mov
js
movb
xor
push
push
and
sarl
inc
lcall
nop
xor
add
add
add
xor
clc
rcr
jb
push
jg
or
xor
or
cmp
jbe
fs
fisubs
add
out
push
dec
pop
push
jnp
pop
add
add
push
ret
addr16
dec
ret
push
inc
repnz
mov
jmp
mov
mov
cwtl
or
inc
pop
and
outsb
and
test
add
add
aaa
icebp
add
xchg
clc
outsl
add
clc
mov
call
or
add
les
pusha
fadds
or
sub
ljmp
in
add
ljmp
inc
mov
out
lock
jo
aam
sbb
addb
inc
pop
scas
mov
push
mov
add
idiv
push
inc
mov
test
iret
dec
mov
sbb
pop
cmp
andl
jo
cmp
sub
pop
je
jle
mov
inc
scas
clc
or
fdivrs
insb
adcb
push
add
das
and
dec
pop
push
xchg
cmp
mov
orl
jno
pusha
inc
lock
xchg
mov
outsb
stos
or
xchg
add
faddl
jb
xchg
fsubs
jle
mov
adc
lock
push
mov
pop
lret
add
xor
in
sbb
inc
add
add
pushl
jge
mov
jbe
repnz
sbb
hlt
roll
or
add
mov
inc
cmpsb
adc
psrlq
xchg
shll
and
jne
jb
inc
and
xchg
sub
jae
cli
decl
mov
or
in
xlat
adc
push
and
or
mov
xchg
add
fisttps
adc
or
mulb
imul
repnz
or
repz
or
bnd
ljmp
pop
adc
xchg
fists
inc
mov
movsb
add
stos
add
dec
rcll
add
push
testb
mov
or
push
and
mov
adc
je
or
subb
pushl
pushaw
mov
cmpb
jnp
rorb
nop
cmp
psrlw
stos
push
jp
fisubrl
rolb
xor
push
xor
add
stos
sbb
ljmp
cmp
pop
adc
adcb
sub
movsb
jecxz
adc
mov
inc
and
pop
in
adc
test
adc
aam
adc
xorb
and
or
cmp
ret
sarb
nop
push
fwait
nop
xorl
xchg
lcall
push
or
mov
mov
xchg
add
cmp
xor
neg
pop
jae
sbb
decl
jo
test
out
add
ja
decb
add
loop
inc
xchg
mov
jno
mov
loopne
fmull
mov
fsubrl
mov
ja
push
push
inc
pop
pop
add
adc
dec
or
cmp
dec
push
pop
push
add
cwtl
xor
enter
lock
mov
lcall
inc
pop
sbb
adc
add
imul
push
pop
shl
add
pop
inc
fdivrs
pop
add
icebp
pop
or
inc
test
xor
push
add
lcall
test
ja
jo
scas
add
rcll
sub
cmpb
adc
or
cld
sub
push
and
push
xor
inc
xor
aam
inc
inc
sarl
xchg
add
add
and
out
and
inc
jecxz
aam
push
pusha
inc
xchg
add
jecxz
inc
push
add
fstp
fsubr
movsb
sub
jno
and
xor
mov
pop
aam
sub
jno
mov
js
and
xor
adc
mov
adc
mov
cmp
xor
and
sub
cmp
jg
jo
lock
xchg
add
adc
mov
mov
mov
or
xchg
addb
mov
hlt
mov
divb
nop
jge
mov
clc
outsl
das
adc
push
jnp
add
lahf
pop
add
outsl
scas
fs
xchg
mov
adc
scas
inc
aad
cld
ljmp
jns
nop
pop
jb
sub
or
and
fbld
test
in
pop
adc
dec
adc
aam
push
dec
add
loop
adc
jmp
pop
mov
adc
shll
jb
mov
cmc
fisttpl
jmp
hlt
adc
jbe
cmovae
dec
insb
bound
cmpsl
push
flds
sbb
mov
loop
xor
test
and
iret
add
in
fbld
lea
inc
pop
add
add
pop
add
mov
or
mov
or
push
or
adc
mov
stos
xor
negb
sbb
inc
jo
inc
pop
cmp
call
outsb
lret
cld
cmp
mov
push
add
inc
dec
and
and
lea
adc
mov
add
movb
inc
cmp
mov
rorl
sub
xor
fwait
std
pop
xchg
jbe
mov
inc
adc
push
nop
sbbb
cmpb
add
inc
dec
call
aaa
clc
mov
mov
inc
mov
scas
xchg
lods
add
or
adc
ljmp
clc
adc
add
push
mov
lea
mov
or
or
and
out
insb
push
add
lcall
jmp
push
pusha
adc
add
push
push
dec
int3
addb
outsl
aaa
dec
mov
jl
push
add
lds
jb
orl
xchg
add
mov
ds
addl
xchg
push
call
push
dec
sbbb
test
push
push
xchg
push
fcoml
add
popl
mov
and
jo
adc
stos
loopne
mov
add
or
addr16
es
fs
jge
es
sub
imul
mov
repnz
or
xchg
daa
mov
pushl
xchg
andl
push
inc
xchg
xchg
dec
adc
push
adc
or
mov
js
inc
incb
mov
daa
mov
movsl
or
add
lds
or
insb
mov
das
fdivr
xor
add
test
imul
jg
dec
addb
pop
inc
andl
push
pop
mov
test
nop
push
data16
mov
pop
add
pop
add
adc
inc
adc
shrb
repnz
subl
fmuls
pop
inc
adc
stos
push
pop
adc
xchg
shlb
loop
fmull
mov
ss
insl
xor
push
pop
mov
mov
or
int
rcrb
sbb
outsl
rolb
push
inc
aam
outsl
lcall
sbb
sahf
mov
pop
xor
outsl
decl
rclb
adc
xlat
sub
lods
cwtl
xor
sub
pop
testb
lcall
push
fdivrl
int
pop
push
or
add
xchg
out
jb
inc
add
sbb
popl
and
push
mov
and
mov
add
and
push
or
and
mov
sbb
aam
hlt
insb
dec
and
mov
and
cmp
inc
popa
xchg
call
fmull
rorb
push
fdivrs
add
or
pop
cmp
test
fsubl
inc
cs
loopne
inc
andl
rclb
or
jge
add
pusha
mov
pop
adc
add
loop
rcll
inc
dec
add
add
or
addb
jnp
push
ret
push
stos
adc
fmull
faddl
xor
stos
and
mov
sbb
imul
jnp
xchg
cwtl
pop
scas
rcrl
pusha
scas
mov
or
sbb
sub
and
inc
mov
or
orb
into
inc
dec
inc
aaa
sbbl
jle
add
adc
ja
clc
test
hlt
and
push
jl
mov
sub
sub
xchg
loope
aas
stos
test
incb
test
add
add
add
leave
xchg
jg
cltd
rorl
pusha
adc
mov
gs
push
loopne
mov
mov
das
mov
pop
ds
and
mov
pusha
or
inc
nop
test
aas
dec
loopne
and
lods
hlt
inc
mov
imul
or
aaa
or
and
ss
cmp
and
outsb
inc
mov
mov
lods
outsb
push
or
or
add
and
addl
and
cs
or
movsl
hlt
call
aam
in
mov
jle
or
add
call
arpl
or
cmp
ljmp
hlt
pop
add
out
mov
fcmovb
cmp
popa
or
and
test
and
and
ret
mov
clc
inc
jmp
mov
or
and
push
and
cmpsb
push
add
out
pop
mov
and
orb
mov
daa
dec
jp
hlt
dec
fadds
jo
fildl
loopne
hlt
or
mul
add
call
rolb
loopne
mov
test
frstor
out
loope
inc
mov
push
test
and
fcmovbe
and
andb
dec
inc
orl
inc
orl
movsb
add
mov
inc
push
subb
sbb
aas
ja
js
cli
cmp
fiaddl
pop
adc
xchg
mov
xor
iret
push
mov
loopne
xlat
jl
inc
test
push
push
pop
roll
xchg
inc
sub
xchg
outsb
add
rol
dec
jb
cmpb
lret
and
add
xchg
icebp
cmp
test
iret
enter
adc
jl
pop
mov
push
sub
dec
and
popa
lds
inc
bswap
add
pushf
xor
pop
nop
loopne
jge
pop
aam
add
pop
cmp
filds
mov
loopne
adc
cmpb
add
rcrb
pop
jg
incb
or
sbb
adc
push
inc
xor
fs
pop
jmp
lret
hlt
pop
xor
mov
inc
and
cmp
pushf
insb
and
es
cs
mov
das
sub
dec
xor
push
xor
sub
jo
in
jmp
sub
or
mov
inc
ljmp
sbb
dec
add
fcomps
aas
sub
dec
orl
roll
cs
push
add
push
lock
fsubl
and
fs
push
adc
dec
jo
add
xchg
cli
stos
addb
push
add
into
push
out
add
push
inc
dec
adc
roll
push
stos
popa
add
mov
dec
cld
add
mov
bound
test
push
pusha
dec
dec
aas
mov
or
fisubs
shrl
pop
push
stos
push
rorb
mov
mov
in
cmpsb
inc
roll
mov
or
lret
adc
xor
outsb
ljmp
mov
adc
dec
or
adc
cli
xor
mov
push
fimuls
push
pusha
cwtl
push
fsubp
dec
shll
and
xor
popf
mov
cmp
pminub
popf
or
or
mov
fdivs
mov
cmp
add
dec
inc
lret
adc
or
clc
stos
pop
aam
push
cmp
add
fistps
pusha
push
and
fcomip
add
adc
sbb
test
aam
xor
or
orb
aam
push
clc
dec
adc
je
sub
adc
push
ds
mov
inc
pop
fwait
nop
or
shll
data16
and
and
repnz
hlt
add
push
inc
sbb
hlt
aaa
sar
orl
shrb
adc
lods
outsb
loope
and
adc
std
stos
push
notl
je
cltd
jg
push
nop
dec
stos
sarb
add
out
inc
roll
dec
push
add
mov
shlb
add
ds
dec
lahf
lods
jg
fbld
xor
out
adc
mov
cmpsl
movsb
and
xchg
and
shlb
mov
jno
add
fiaddl
mov
xor
xchg
xchg
xchg
sar
mov
adc
sub
push
popa
adc
shr
jl
jo
outsl
push
push
dec
cmc
gs
add
mov
xchg
xchg
iret
pop
inc
adc
rorb
mov
xchg
nop
mov
loopne
or
mov
andl
xchg
or
inc
push
add
data16
xor
pop
les
call
fwait
mov
rcrb
xor
loopne
adc
xor
xchg
cmp
pusha
outsl
ret
loopne
addl
loopne
inc
or
xchg
sbb
dec
mov
dec
sbbb
jo
xchg
xor
ljmp
pop
mov
add
cmpsb
mov
nop
add
add
xchg
inc
shlb
xor
and
xchg
ss
test
fildll
adc
push
jnp
add
pop
xchg
adc
mov
push
adc
jno
aam
add
orb
decl
aam
jnp
push
out
and
mov
cmp
jmp
xor
pop
push
loopne
jle
cmp
test
outsb
xor
scas
cmpsl
repnz
fs
xor
out
pushl
xchg
pop
scas
sbb
clc
mov
add
out
xchg
and
mov
add
lret
or
test
movsbl
pop
and
es
lcall
xchg
in
xchg
push
popa
out
mov
lods
and
popa
arpl
push
xor
xor
dec
outsb
jo
xor
sysret
jo
and
inc
jmp
mov
xor
inc
mov
sub
lea
daa
shlb
test
xor
fs
imul
pop
add
fildl
mov
add
sbb
call
mov
add
mov
jmp
push
xchg
adc
or
pop
call
sbb
outsl
push
dec
inc
mov
fsubrl
out
mov
xchg
sub
add
inc
push
int
mov
sub
or
repnz
jb
roll
aas
add
outsl
push
inc
icebp
rclb
add
pushf
and
insb
dec
sti
add
push
pop
push
aas
sub
and
inc
and
fwait
cmp
aaa
rorl
xchg
push
decl
xorb
pop
xor
jl
int
call
movsb
or
mov
inc
loop
cmp
nop
daa
pop
es
mov
imulb
add
or
add
outsb
mov
xchg
cmc
aaa
sbb
clc
sub
pop
out
scas
inc
add
mov
and
xor
jmp
aas
jmp
lock
stos
xor
pop
popa
inc
push
xchg
sub
mov
cwtl
xor
pop
cmp
and
or
mov
inc
jbe
dec
sub
enter
je
xchg
test
xor
arpl
inc
daa
sub
mov
bound
xor
pushl
add
add
xorb
out
pop
ja
sub
stos
sbb
shrb
jmp
test
mov
movsb
add
pop
jmp
and
mov
mov
lock
and
jno
push
mov
adc
mov
or
ljmp
adc
mov
sub
xor
inc
push
in
add
ret
mov
hlt
sbb
ss
push
test
fcoml
ret
mov
icebp
out
mov
pusha
add
prefetcht1
push
cld
dec
call
test
and
cmpsl
insb
and
rcrl
call
cmp
jb
mov
jno
test
add
or
je
in
and
push
aas
out
dec
xor
adc
je
cmp
icebp
add
enter
and
add
pop
push
and
orl
dec
adc
repnz
sbb
xchg
adc
insl
adc
adc
scas
and
je
push
scas
or
dec
jb
movb
push
outsb
arpl
pusha
or
sbb
shl
or
sbb
pushf
loopne
or
push
mov
enter
xor
inc
add
hlt
or
das
dec
push
rcrb
jg
scas
dec
in
or
lock
scas
xor
fstpl
push
scas
sbb
pop
sbb
fistps
fwait
mov
shrl
fdivrs
mov
insb
aam
or
sub
sub
jge
or
pop
imul
xor
arpl
shrl
jl
jbe
data16
or
push
nop
xchg
pop
bound
adc
and
fdivrs
add
pushf
pushf
push
and
mov
add
or
add
lock
sahf
xchg
adc
or
fwait
pop
add
imul
or
adc
xchg
dec
pop
movsb
push
ficoms
sub
and
and
in
les
das
je
negb
lea
pop
xchg
add
cld
outsb
loope
inc
and
lret
fcoms
sbbb
sbb
insb
ja
sub
adc
cmpb
add
mov
outsl
stos
test
push
and
sbb
lea
adc
fsubrl
adc
sahf
jbe
lock
loop
push
or
insl
mov
push
int3
add
cmp
or
xchg
inc
jne
orl
shrb
push
and
jle
test
data16
inc
addl
and
mov
and
adc
add
pop
js
ss
mov
fmull
mov
mov
cmp
fdiv
scas
pop
xchg
pop
shrl
loop
xlat
cmp
andb
in
lods
or
sbb
jg
xchg
xchg
movsl
mov
adc
push
repnz
xchg
cmp
bound
mov
insl
jno
mov
std
inc
lods
out
sbb
or
pop
mov
fcompl
imul
push
pop
adc
test
push
jg
sbb
push
cmc
inc
or
add
insl
push
add
sbb
or
test
loop
cmp
push
add
pop
out
lret
sub
mov
push
aam
add
cmp
cmp
push
sub
pop
test
testb
mov
and
cmp
bound
jbe
adc
fwait
icebp
xchg
adc
data16
xorb
inc
inc
add
shlb
iret
subb
inc
add
sub
hlt
xor
push
ljmp
inc
outsl
jbe
rorb
fisttpl
or
mov
push
fsubp
andl
loope
adc
inc
outsl
mov
sub
sbb
adc
fwait
lock
or
mov
shl
inc
dec
repz
add
loopne
and
sub
or
sub
loopne
xchg
test
loopne
pushl
loop
and
jmp
test
aaa
xor
mov
cmp
mov
dec
call
test
inc
cmp
dec
inc
sbb
pop
and
ret
cmp
adc
test
jge
lds
add
test
dec
sbb
jbe
push
movsl
mov
loopne
jo
mov
and
pusha
and
push
test
mov
clc
test
aas
inc
add
cmpb
arpl
sarb
add
sub
add
mov
movsl
icebp
mov
bound
and
push
repnz
and
pop
aam
mulb
cmp
lcall
lods
push
scas
cmpsb
cld
loope
sub
adc
cmp
ljmp
dec
icebp
mov
lock
shlb
or
and
pushf
roll
pusha
fisubrs
push
lret
lcall
mov
mov
test
es
xor
xchg
test
xor
xor
and
pusha
pusha
inc
fs
lret
je
or
movsb
jmp
out
mov
cmp
mov
loop
xor
add
and
jg
inc
movb
cmpsb
das
aas
and
mov
adc
and
and
or
aas
jecxz
loopne
cld
bound
push
and
out
sub
fwait
mov
sub
mov
and
sbb
adc
pop
les
cmp
shl
inc
adc
jnp
pusha
or
jmp
mov
mov
out
sub
or
adc
lock
ljmp
fdiv
or
popl
and
and
movsb
sub
inc
js
mov
jo
adc
push
sub
mov
faddp
clc
push
outsb
sub
xor
mov
cmpsb
and
call
jno
movsb
stos
adc
and
inc
push
xchg
insb
xor
loope
bound
fsubrl
mov
test
subb
push
jle
mov
mov
xchg
aam
daa
cwtl
add
outsl
or
int
xchg
bound
mov
ret
imul
test
inc
pushl
add
das
and
int3
in
adcb
mov
loope
mov
or
sbb
push
loopne
outsb
or
push
mov
jp
insb
test
mov
add
jo
ret
lret
push
and
insl
cli
mov
or
ret
push
hlt
xchg
enter
inc
mov
pushf
lods
stos
sub
add
pusha
sbb
mov
je
mov
imul
movsl
mov
inc
mov
cmp
xor
test
mov
mov
fidivl
lret
or
or
xlat
pop
add
rolb
jnp
popa
adc
addb
nop
pop
pop
pusha
inc
pop
outsb
and
or
xchg
js
push
sub
sub
or
jmp
scas
push
xorb
xchg
mov
test
shlb
add
mov
cmp
mov
push
dec
subb
add
inc
jp
pop
inc
popf
andb
push
or
dec
push
jbe
or
cwtl
pop
nop
and
xor
adc
and
sub
cmp
loopne
pop
shrd
and
mov
call
jl
aam
jb
cli
stos
adc
xchg
decl
mov
pop
insb
mov
push
lock
jp
mov
call
and
pop
push
ficoml
dec
test
cltd
insb
add
add
fldl
add
inc
fisttpll
push
sbb
es
sub
insb
xorb
pop
addb
adc
push
scas
sub
movsl
and
es
hlt
incl
mov
dec
pop
adc
xor
sbb
adc
mov
sub
or
fs
xor
inc
add
mov
nop
inc
rorb
pop
xor
pop
add
out
and
add
dec
js
jae
dec
or
mov
insb
pushl
cmp
add
dec
loopne
fdivs
rcl
js
cmp
ret
loope
les
shll
fisttps
jge
bswap
jecxz
add
sarb
push
xor
inc
aas
adc
add
cmpsl
inc
push
mov
push
jno
fbld
pop
xchg
cs
repnz
cwtl
jo
popa
aas
subl
mov
add
movsb
call
sbb
or
pop
and
mov
sbbb
mov
xchg
pop
lock
xor
test
dec
push
xchg
dec
mov
lods
sahf
repnz
push
ret
outsb
jp
hlt
and
incl
mov
adc
ljmp
push
andb
rclb
ja
xor
adc
sub
lock
test
repnz
inc
rolb
xor
movsb
add
add
loopne
lahf
cwtl
fnsave
inc
cmp
or
stos
mov
push
and
mov
ficoml
pop
inc
std
outsl
mov
inc
dec
fstl
push
jnp
imul
and
mov
mov
cmpsb
hlt
fdivrs
jno
into
cmp
push
adc
sbb
leave
pop
inc
xchg
push
cmpsl
push
jle
lock
test
int3
add
cmp
ret
and
xor
or
fidivrl
imul
arpl
push
fs
idiv
aas
out
add
and
and
addr16
and
cmpsl
cmpsb
rclb
or
and
dec
xchg
mov
inc
push
std
push
mov
push
pop
jo
shrb
adc
push
loopne
and
xchg
add
adc
inc
test
cltd
fisubs
scas
clc
jg
xchg
shrb
nop
and
or
add
cmp
mov
outsb
add
sbb
lods
sbb
pushf
inc
lret
clc
incl
add
aam
inc
and
inc
adc
movsb
add
add
lahf
mov
mov
or
fdivl
mov
push
and
rorl
pusha
adc
and
mov
test
scas
and
mov
or
cmp
pop
insb
test
mov
sub
sbb
and
push
daa
add
jns
jmp
call
add
and
int
pop
pop
inc
out
inc
popa
test
inc
hlt
lods
jmp
mov
adc
add
add
jl
sbb
xor
stos
sub
xchg
adc
and
push
push
dec
and
mov
scas
xchg
adc
or
jbe
mov
dec
adc
rcrl
mov
mov
push
aas
mov
rcll
icebp
inc
pop
mov
push
cmp
and
sbb
cmp
adc
into
orb
movsb
movsb
inc
repnz
mov
mov
add
or
out
push
jnp
mov
push
xchg
mov
shll
je
mov
fiadds
lret
int
cld
jbe
addb
mov
inc
out
inc
cmp
or
pop
shll
stos
inc
or
inc
or
dec
push
cwtl
mov
or
dec
or
or
or
rorb
cmpsl
pop
dec
mov
cwtl
mov
jecxz
sub
fidivrs
mov
jb
les
sub
jg
jb
or
or
inc
rcl
push
sub
nop
ret
lock
xor
pop
push
je
cmpsl
ss
nop
fcoml
mov
lret
mov
xor
dec
push
mov
mov
and
cmp
scas
and
cmpsl
icebp
notb
and
push
and
push
cli
fnstsw
push
loopne
int3
pop
push
outsb
push
rclb
cmpb
andb
adc
sbbb
push
lods
ljmp
xchg
test
or
test
pop
movsb
push
incl
or
sub
sbb
inc
sahf
xchg
mov
nop
mov
orb
movsb
aas
dec
fwait
inc
add
mov
jg
orl
hlt
push
xchg
or
jl
and
shl
mov
pop
les
inc
xor
push
and
rorl
outsl
mov
push
push
cmpsl
cmpsb
push
push
mov
ds
xchg
add
subb
fs
outsb
aam
push
sub
ljmp
xchg
mov
fisubl
pusha
pushf
adc
mov
and
adc
pop
shlb
fimull
pop
add
inc
out
rolb
xchg
orl
fs
xchg
mov
inc
push
and
sub
adc
outsb
das
ja
dec
cmp
xor
add
push
push
adc
outsl
mov
incl
lcall
or
xor
shl
push
and
add
arpl
mov
aam
xchg
jae
rclb
add
xor
adc
mov
ss
imulb
add
dec
xorb
lods
mov
lret
mov
mov
jne
or
outsb
dec
pop
jbe
mov
enter
xchg
add
inc
mov
mov
nop
mov
jmp
mov
ss
push
imul
insb
in
inc
mov
sbb
pusha
xchg
and
out
or
fists
add
xchg
std
push
mov
push
cwtl
loopne
lds
cmp
stos
inc
pop
and
pop
xlat
mov
and
sub
into
inc
jl
push
pop
outsl
jb
rorb
sbb
es
aaa
sarb
sbb
push
add
add
fiadds
adc
push
and
bound
repnz
cld
inc
mov
push
cmp
push
push
adcb
jecxz
inc
mov
repz
insb
aam
aam
nop
subb
push
jmp
inc
mov
dec
cmpb
addb
add
outsl
push
into
push
fsubs
or
adcl
lock
addb
divb
insb
sub
fadds
push
orl
mov
pop
or
cmp
push
mov
sahf
mov
dec
xor
insb
lret
sbb
ja
stos
cmpb
outsl
mov
and
nop
and
xorb
addb
inc
xor
pop
add
mov
inc
sbb
mov
add
dec
push
push
fadds
cmp
add
insb
out
pop
dec
push
int
and
push
mov
dec
incl
xchg
adc
pop
push
nop
inc
ds
call
ja
push
mov
and
dec
and
add
call
add
push
js
jp
push
inc
add
inc
popl
jecxz
sbb
inc
inc
orb
push
rcrb
pusha
jl
push
inc
dec
rclb
loope
aam
ja
inc
push
andl
in
ja
xor
lret
add
addb
fildl
sbb
sbb
jae
sbb
and
or
inc
adc
or
add
aaa
jb
pop
fs
push
cmp
or
insb
add
outsl
add
bound
pop
pushf
inc
xor
sbb
fs
mov
fldt
inc
inc
shlb
inc
jbe
mov
push
lcall
xchg
fcoms
les
inc
mov
mov
shlb
xorb
orl
or
mov
adc
push
inc
push
mov
pop
inc
imul
push
mov
mov
mov
jo
call
ja
push
add
dec
mov
inc
and
cmpsb
test
xchg
inc
outsl
add
and
or
inc
aas
mov
movsl
xchg
jl
jl
or
cld
pop
cmc
popf
push
gs
filds
adc
and
mov
aaa
js
push
dec
inc
popa
and
cmp
movsl
adc
int3
fcmovbe
push
ja
daa
test
fs
pop
in
and
sub
call
mov
lret
in
or
mov
pusha
add
addb
or
mov
or
jbe
pop
push
inc
gs
arpl
mov
insb
clc
out
incb
or
loopne
addl
sahf
subl
subb
pop
sbb
fbstp
push
pusha
and
jmp
mov
mov
mov
pop
dec
aam
sbb
add
push
jnp
fistl
push
and
or
adcl
loop
inc
and
jg
cs
inc
mov
cwtl
inc
lret
adc
shlb
push
lcall
jns,pt
cmp
test
push
out
cmp
pop
fiaddl
dec
fst
xorb
xor
movsb
pop
movb
and
sbb
and
xor
push
jl
mov
add
dec
xchg
js
and
sarb
out
push
xchg
rclb
add
jbe
pop
mov
inc
orb
jae
pop
and
mov
rolb
dec
pop
or
jp
adc
add
and
sub
adc
loope
shrb
push
sub
cmpb
push
and
orb
test
dec
add
mov
inc
and
adc
add
xlat
pop
ror
ss
pop
push
dec
and
inc
in
push
std
inc
inc
smsw
inc
xor
bound
add
loope
fiaddl
ficoml
test
mov
addr16
xchg
dec
xor
cmpsl
mov
lods
sub
jle
sbb
mov
sbb
pop
and
push
adc
sbb
jmp
xor
xor
or
cli
stos
and
arpl
inc
mov
sub
add
sub
shll
jno
test
mov
pop
xchg
xor
pop
or
pusha
add
aam
test
mov
sub
add
jl
enter
jl
sbb
jnp
lea
arpl
jg
test
dec
inc
push
sub
outsb
or
inc
or
inc
notb
sub
xchg
and
cltd
test
fs
xchg
mov
mov
faddl
and
dec
jle
pushf
subb
adc
cwtl
dec
cli
les
movl
inc
loopne
call
jecxz
or
push
or
fisttpll
xorb
add
aam
pop
mov
jnp
sub
shrb
xchg
ret
sbb
pop
shlb
add
mov
cmp
lods
dec
mov
cld
ds
andb
pop
mov
in
andl
clc
aam
pop
test
pop
xchg
mov
fstl
pop
and
mov
lretw
stos
fists
cmp
push
or
and
jae
dec
push
mov
repnz
lods
push
mov
push
inc
xor
add
inc
push
es
adc
push
add
push
or
jg
jg
xor
test
test
pop
out
lock
and
mov
adc
sbb
add
insb
leave
lcall
push
sub
imul
adc
roll
pop
adc
sub
add
ds
adc
push
hlt
and
add
push
xor
xchg
sub
jg
xor
mov
icebp
add
push
add
shrl
arpl
pop
dec
insl
add
jb
outsb
sub
mov
pop
lock
pop
mov
pushf
xor
add
insb
xchg
and
nop
add
push
dec
mov
mov
incl
push
inc
mov
pop
xchg
add
adc
mov
pop
mov
cltd
mov
jecxz
cmp
inc
add
decb
inc
inc
add
in
sbb
xor
push
sub
fs
rolb
filds
inc
subl
sbb
popa
rorb
call
inc
pusha
and
jecxz
movsb
mov
lock
push
or
adc
jg
fcomip
sub
sub
mov
jg
pop
inc
or
mov
pop
mov
mov
or
add
xchg
mov
lahf
push
aam
and
sbb
mov
js
push
push
mov
mov
push
mov
sti
jae
mov
push
and
addb
pop
inc
adc
and
int3
cmpsb
inc
mov
iret
jb
pop
inc
mov
cmp
adc
push
mov
and
push
xorb
mov
push
or
or
pop
loop
imul
mov
ret
outsb
outsl
mov
dec
inc
mov
mov
jb
xchg
dec
or
and
lret
push
add
es
inc
fdiv
rolb
ja
and
mov
add
adc
popa
dec
dec
add
and
push
and
aam
lods
push
movsb
cmp
and
and
lret
dec
rorl
pop
lods
push
push
mov
add
adc
lods
xor
xor
jo
push
scas
and
add
add
xor
and
pop
rolb
pop
insl
in
inc
fstpt
xor
inc
mov
out
fistpl
add
andl
ret
mov
adc
sbb
or
add
cli
repz
pop
rorb
cmp
and
imul
add
xor
add
pop
in
or
xchg
and
dec
mov
inc
imul
and
add
pushf
aad
stos
adc
push
jmp
test
pop
shlb
mov
ror
pop
sbb
fisubs
clc
push
xchg
pop
jp
popa
icebp
dec
loopne
lret
rclb
sub
xor
push
xor
xlat
adc
jge
adc
fmull
jecxz
mov
xor
bound
mov
sub
call
pop
imul
flds
mov
inc
lods
adc
popf
test
je
push
gs
lcall
dec
out
dec
add
mov
mov
push
je
inc
xor
pop
push
sti
aaa
push
and
mov
push
movsb
rolb
xchg
es
pop
mov
dec
jns
mov
jp
push
push
jp
or
ja
cmp
push
dec
insl
out
add
and
dec
mov
add
push
mov
mov
lds
fs
mov
add
sub
add
mov
es
xlat
out
das
dec
in
fmuls
inc
xor
cmp
ret
pop
aad
fbld
adc
lock
add
push
rorb
and
aam
push
fsubrs
mov
mov
adc
jl
push
bound
inc
add
call
popa
std
mov
push
dec
add
mov
xchg
mov
pushl
mov
js
in
mov
mov
push
mov
std
roll
jno
add
scas
add
sbb
add
sti
inc
add
jg
add
push
mov
aaa
inc
or
fcmovnu
inc
std
or
and
adc
lahf
stc
push
movsl
movsb
add
mov
mov
adc
mov
add
adc
add
inc
mov
add
rolb
xchg
or
loopne
push
shrb
mov
test
cmpsb
mov
test
jb
test
mov
shll
test
je
sar
ja
pop
scas
bound
jo
cwtl
pop
mov
adc
fidivrl
xchg
add
sar
mov
jb
int3
sbb
cmp
stos
fwait
add
dec
ficoml
pop
jecxz
pop
jo
xor
mov
cld
ja
scas
outsl
rorb
bound
data16
ss
lock
jbe
adc
xlat
das
dec
bound
lock
mov
into
jmp
fs
aam
mov
out
xor
jae
unpckhps
mov
jno
orb
mov
add
nop
sub
in
insl
inc
repz
mov
push
mov
push
or
or
xchg
add
mov
sub
or
pop
sbb
test
faddl
xchg
jge
popa
sbbb
adcl
popa
mov
aam
add
cmp
pop
inc
xchg
push
pop
mov
outsl
sub
sub
and
rorb
pop
pop
pop
cmp
loopne
scas
or
add
or
mov
add
add
fcmovnu
cmovbe
int3
and
stos
sub
ja
and
add
push
push
and
fbstp
jp
adcl
lods
shrb
pop
add
add
mov
mov
sbb
and
cld
pushw
mov
inc
andl
andb
addb
shrb
sbb
shrl
pop
pop
cmp
adc
sbbb
fists
lods
lods
mov
pop
insb
shrb
cmpl
add
in
inc
pop
fldl
orl
xchg
add
subl
inc
pusha
loope
in
dec
sar
subb
icebp
lcall
and
pushl
pop
sub
sub
pop
mov
cmp
pop
push
xor
mov
test
lods
push
pop
xchg
pop
rolb
push
xchg
addb
adc
add
out
inc
push
shl
js
pop
enter
and
adc
jp
enter
and
sub
inc
fadds
popf
push
outsb
dec
les
sarb
pop
inc
sbbl
int
or
pop
pop
jnp
add
inc
movsbl
mov
jbe
fcomps
push
inc
push
inc
add
push
add
mov
out
ret
sbb
insb
rorb
inc
sbb
jl
sbb
jnp
jp
adc
js
out
jns
and
push
xchg
faddl
push
pusha
orb
dec
pop
add
sub
push
les
lock
scas
push
xor
and
sub
mov
jo
inc
sbb
jle
cmp
adc
mov
imul
addb
pop
call
pop
adc
and
add
imul
movsb
xchg
fildll
addr16
fiadds
bound
test
and
rcr
dec
pop
pop
add
push
sub
pop
xor
mov
incl
fcompl
push
adcb
inc
sub
loop
mov
xchg
mov
add
loopne
inc
sbb
push
lret
loopne
faddl
jge
and
mov
xchg
mov
cmpsb
push
cmp
jbe
mov
cltd
jo
push
and
pop
sbb
fcompl
dec
imul
es
add
pushf
cmp
stos
and
adc
mov
int3
mov
outsb
imull
les
xchg
sarb
pop
aam
add
les
pop
push
clc
mov
mov
pop
and
xor
and
or
lock
scas
sbbb
inc
pusha
sub
outsb
addb
scas
push
jge
popa
subl
sti
fwait
mov
mov
push
pop
xchg
aam
xchg
dec
incl
outsl
push
cld
pushl
and
add
jae
lods
and
sahf
pop
arpl
out
insl
mov
fisttpl
out
push
insl
sbbb
push
fiadds
push
ja
fldt
push
movsb
and
loop
mov
lret
inc
or
dec
inc
pusha
mov
sti
inc
mov
pop
inc
mov
inc
mov
mov
insb
enter
mov
scas
add
fbld
lcall
adc
pusha
adc
es
and
popa
inc
add
sub
inc
mov
int3
push
add
inc
test
addb
lock
sub
int3
add
arpl
ja
dec
sbb
test
jnp
jg
addl
and
adc
inc
push
fsubrl
rcrb
or
mov
loopne
pushl
lds
call
add
aam
and
test
fmull
loopne
xchg
sub
xlat
int
sub
add
and
out
xorb
rolb
not
mov
sub
fwait
sbbb
ljmp
or
popa
addl
xchg
dec
dec
xor
dec
cmpb
insb
xchg
pop
sub
add
mov
mov
cli
add
mov
adc
add
mov
aam
xchg
sbb
das
inc
add
pop
inc
loope
sub
jle
insl
mov
dec
and
sbbb
push
std
jg
push
lock
push
sub
push
rcrl
pop
test
inc
mov
push
bswap
in
inc
mov
pusha
add
testb
add
hlt
push
out
or
inc
sbb
data16
dec
mov
jnp
pop
mov
and
mov
out
les
and
xor
sub
and
insb
and
inc
sarb
jno
and
outsb
pop
push
rcll
sub
popf
mov
cmpsb
fidivs
add
inc
into
push
adc
jecxz
cmp
mov
mov
xor
leave
add
icebp
and
prefetch
jae
sbb
loopne
sub
sub
or
cmc
fisttpl
insb
fmuls
lock
pop
jmp
add
mov
dec
iret
adc
adc
push
and
outsb
clc
jg
and
scas
pusha
xor
fs
add
xor
mov
ret
psadbw
arpl
movsb
mov
add
jp
dec
loop
xchg
test
and
push
sbb
jbe
mov
jg
push
add
adc
nop
mov
stos
or
adc
mov
addb
adc
jecxz
lock
das
cli
fistpl
inc
add
jl
leave
icebp
add
sub
mov
shlb
or
push
outsl
ficoml
or
push
add
jg
dec
and
das
mov
bound
add
push
add
or
mov
out
fs
or
add
xchg
push
push
imull
lods
mov
jb
push
ss
test
pop
push
xchg
mov
icebp
sub
mov
sahf
mov
xor
popf
insb
fisubs
mov
pushf
fdivs
add
es
andb
pop
loop
pop
fwait
int
sub
push
xchg
mov
mov
fcmovnb
cltd
adc
mov
clc
fwait
sahf
lods
push
mov
je
add
jo
sub
fcompl
fldl
push
sbb
test
add
cmp
das
adc
inc
push
inc
in
push
or
sub
mov
mov
xor
push
test
mov
pop
gs
xlat
mov
addr16
push
pusha
cmp
inc
incl
test
idivb
ret
xchg
fiaddl
inc
push
ffreep
push
push
and
ds
adcb
xor
add
setle
and
loopne
and
sbb
nop
test
pop
addb
jg
ljmp
sbb
add
jmp
ss
add
push
ret
sub
adc
sub
add
dec
stos
lcall
or
repnz
jae
push
and
push
mov
and
daa
fimuls
rcrb
push
fs
es
aam
clc
add
push
jo
add
es
sbb
add
inc
dec
iret
aam
testb
and
push
push
push
and
jne
testb
xor
jo
in
nop
jno
xor
or
cmp
je
push
test
mov
cs
add
test
jae
dec
sbb
aas
sbb
sub
and
or
or
test
cs
test
inc
orb
outsb
es
pusha
inc
sub
dec
inc
sub
arpl
addb
stos
cmpsb
mov
dec
pop
andl
call
or
fs
test
in
bound
pop
sahf
add
pusha
sti
pop
xchg
pop
add
rorb
pop
xchg
rorl
jae
clc
aaa
or
ss
adc
sar
sbb
or
pop
ret
ss
adc
sarb
xor
and
xor
push
inc
dec
popa
loope
pop
mov
add
jbe
add
scas
mov
fildl
push
add
inc
pop
sbb
and
aas
xor
xor
add
xor
add
and
xor
cmp
push
mov
xchg
shrb
sbb
mov
out
push
jb
pop
mov
and
fadds
call
or
cld
xchg
push
mov
cld
orb
add
push
xchg
add
mov
fwait
insl
pop
add
inc
pmaxsw
mov
and
or
adc
bound
add
roll
push
sub
inc
mov
fnstcw
add
push
mov
lea
mov
imul
je
add
or
nop
ret
ljmp
sub
scas
push
loopne
inc
rcl
mov
icebp
adc
push
add
mov
jg
test
cmp
aam
and
sahf
add
or
decl
adc
push
xor
pop
fsubl
fsubrp
push
mov
test
dec
xor
pop
dec
dec
sbb
jl
sahf
xor
fiaddl
push
addr16
movsl
lcall
push
adc
xor
xchg
dec
inc
nop
sbb
push
mov
les
sub
enter
ljmp
mov
xor
and
out
xchg
mov
mov
out
adc
xor
ljmp
sub
cmp
rorb
and
push
xchg
xor
mov
jnp
outsl
add
test
jnp
or
push
push
fwait
jo
fsubl
insl
xor
xchg
nop
pop
ss
sub
sub
sbb
call
dec
nop
push
lret
popa
xor
mov
lret
mov
add
jae
test
push
push
jae
add
jmp
add
pop
mov
adc
js
xchg
or
fdivl
pop
fimuls
ja
add
mov
dec
popa
add
and
test
lret
xchg
enter
shll
inc
je
push
or
lock
add
push
fisubs
xchg
dec
shrl
jo
pop
inc
lahf
clc
into
lea
inc
inc
lods
adc
mov
test
clc
into
push
or
add
mov
cwtl
xor
push
out
jl
fs
mov
movsl
xchg
mov
push
andb
push
add
add
sub
std
mov
inc
pop
xorl
daa
mov
or
mov
jl
add
inc
jmp
sbb
push
fimull
add
je
xchg
mov
push
dec
and
push
and
adc
adc
fiadds
dec
add
std
pop
adc
mov
mov
xchg
lods
cmp
ficompl
inc
add
decl
stos
push
push
jl
push
sbb
fsubrl
je
and
pop
inc
mov
scas
mov
les
adcl
testb
adc
jp
sbb
push
mov
fs
pop
or
or
add
lcall
lcall
pop
fs
jle
subb
cmp
insl
out
push
add
sub
mov
stos
rorb
or
or
inc
xchg
add
mov
aas
iret
add
inc
dec
fistpl
sbb
pop
adc
lret
push
push
xchg
xor
insb
leave
rcrb
test
mov
jl
add
or
jg
aas
inc
mov
add
xchg
roll
add
and
or
cmc
mov
and
ret
andb
jnp
sbb
add
xchg
push
sbbl
add
jp
add
and
xorb
sahf
js
ja
push
add
mov
loopne
cmc
je
push
jl
rclb
add
shrl
inc
je
mov
inc
adc
xchg
xchg
push
or
lea
fsubrl
mov
dec
dec
or
inc
hlt
lods
popf
rcr
out
out
clc
mov
cmp
lret
lds
pop
in
je
inc
and
pop
push
faddl
jl
add
sbb
subb
adc
cmp
mov
adcb
mov
mov
lds
rorb
push
cmpsl
mov
addl
add
fcom
inc
inc
pop
orb
xor
sub
ja
rolb
mov
adc
push
push
dec
adcl
scas
push
pushf
in
xor
mov
lahf
out
push
inc
push
je
push
and
mov
and
seto
push
push
add
add
lret
int3
icebp
mov
and
add
add
and
cmp
cmp
push
xor
cmp
lds
out
rcll
mov
dec
dec
jl
inc
orl
clc
inc
mov
cmp
imul
test
mov
add
aam
mov
dec
push
sub
mov
inc
adc
fs
faddp
jae
add
adc
in
lods
mov
test
pop
push
cwtl
or
cmp
mov
fbld
mov
pop
xor
loopne
adc
ja
mov
enter
cmpsl
fisubrl
mov
xchg
call
dec
es
rorl
jg
sbb
daa
add
pop
aam
mov
add
push
or
push
push
andb
push
ss
and
sbb
lcall
adc
popa
pushf
into
or
mov
mov
fcoml
orl
xor
or
std
ret
test
inc
or
sbb
xor
inc
mov
or
xchg
push
mov
xchg
sbb
inc
xor
inc
insl
xorl
push
push
stos
test
cwtl
repnz
inc
out
insl
cld
or
add
inc
arpl
clc
push
xchg
mov
add
insb
inc
xor
or
insl
sbb
adc
stos
fbstp
push
jbe
inc
data16
popa
add
mov
pop
xchg
fidivs
push
inc
add
inc
dec
add
inc
add
sbb
andl
testb
xor
add
mul
sbb
sbb
aam
sub
call
push
cmp
and
mov
dec
mov
inc
xchg
xchg
add
aam
ljmp
mov
push
aam
stos
test
pop
fiadds
pop
movsb
and
push
jbe
push
popa
loopne
jge
addl
and
jbe
fwait
shlb
push
andb
data16
inc
and
movl
add
shll
add
mov
add
popa
and
push
cmp
xchg
dec
loopne
test
outsb
sbb
stos
bound
pop
and
pop
or
push
and
jg
jle
cmp
and
popl
sahf
pop
pusha
jl
cmp
add
icebp
sarb
mov
inc
addl
aam
sbb
adc
and
pusha
push
dec
sub
or
rolb
sub
test
inc
or
mov
pop
adc
mov
stos
inc
pop
enter
xor
jmp
rolb
out
and
call
mov
loop
loopne
stos
add
cld
out
or
push
in
push
adc
add
fwait
pop
inc
adc
je
and
sahf
push
subb
push
add
inc
cli
jg
test
mov
or
jae
ret
sar
pop
data16
hlt
and
pop
bound
xor
adcl
mov
and
movsb
cmp
push
dec
dec
cmp
bound
andl
inc
pop
adc
jecxz
jo
dec
aaa
adc
mov
jecxz
incb
cmp
cmp
push
pusha
adc
sti
or
loopne
loope
ret
xor
test
sahf
and
arpl
outsb
mov
jge
add
shrl
mov
mov
fists
xchg
push
mov
bound
hlt
xor
adc
jg
or
pusha
cld
xchg
cmpsl
add
dec
push
adc
push
bound
rcrb
dec
cmp
mov
jbe,pn
push
mov
adc
cmp
sub
cmpsb
jb
inc
cmp
push
mov
or
and
mov
je
xchg
in
lods
repnz
mov
dec
sub
shll
dec
push
inc
push
mov
jnp
add
or
push
dec
xor
fiaddl
adc
xchg
fwait
xor
dec
pop
or
push
outsb
mov
inc
and
and
dec
mov
pusha
gs
mov
push
mov
add
xor
push
xchg
sarb
enter
repz
sti
das
clc
cmpb
push
sbb
push
and
clc
pop
nop
add
push
mov
inc
push
sub
mov
push
sub
sub
jbe
push
inc
fs
aam
mov
adcl
mov
dec
cmpsb
xor
jp
xchg
adc
mov
adc
push
call
jns
jbe
scas
arpl
data16
inc
mov
incl
mov
add
jbe
cmp
adc
cwtl
adc
dec
inc
insb
outsl
cmp
add
push
pop
rcll
rclb
arpl
mov
add
movsl
push
push
dec
test
dec
lret
cli
decl
mov
test
inc
mov
push
test
fidivrs
filds
inc
sub
pusha
sbb
pop
pusha
data16
xchg
adc
push
fiaddl
push
inc
adc
xor
mov
aam
dec
pop
inc
jg
add
js
enter
and
push
inc
xchg
adc
aas
test
add
outsb
dec
mov
pop
xchg
jp
add
adc
jno
cmpb
inc
add
or
adc
ret
decb
add
xchg
add
jg
push
add
add
mov
adc
jg
or
test
push
sbb
in
and
sub
sbb
sbb
fists
nop
sub
imul
mov
add
add
xor
dec
cmpsb
outsb
inc
and
adc
inc
jle
and
aam
ja
shlb
enter
call
inc
imul
cli
sbb
icebp
xor
sub
movswl
shrb
pop
push
push
loope
mov
scas
enter
fstpt
sbb
push
adc
mov
lcall
xlat
mov
mov
arpl
push
call
dec
mov
pop
lock
or
xchg
pop
inc
push
pop
add
aaa
pop
adc
xchg
fisubs
jp
inc
cmp
pop
call
outsl
inc
fsts
push
push
or
dec
adc
enter
sbb
add
test
aad
or
orb
pushl
clc
xchg
and
addr16
push
pop
add
scas
loope
and
ret
mov
repnz
inc
cld
mov
and
and
and
lcall
and
pop
fidivl
mov
add
daa
sbb
insb
sub
dec
std
dec
inc
mov
xor
nop
fs
and
shrl
lds
adc
and
dec
and
sbb
jbe
sahf
mov
cli
fwait
sub
faddl
add
cmpsb
jl
sbbb
jo
mov
xor
mov
add
adc
pop
repz
sbb
clc
les
pop
and
rcl
mov
pop
fldl
or
inc
mov
lcall
jp
xchg
inc
inc
xchg
jb
add
scas
sbb
test
loopne
arpl
adc
inc
or
decb
mov
xorb
inc
addb
xor
ret
js
mov
add
sub
push
shlb
cmp
add
and
ffreep
test
add
test
xchg
adc
jb
sub
dec
push
dec
and
cld
andb
enter
inc
mov
aas
push
mov
pop
mov
lock
rcr
push
add
subb
add
mov
add
mov
outsb
push
add
dec
fisttps
mov
scas
pop
mov
or
call
hlt
and
xchg
xchg
push
push
dec
dec
sub
pop
cmpsb
xchg
hlt
cmp
adc
stos
xor
lods
inc
mov
sub
jnp
jge
add
loop
in
mov
sbb
push
xchg
or
pushf
fiaddl
xchg
shlb
xchg
mov
push
les
and
pop
leave
nop
ret
sub
push
adc
mov
les
outsb
dec
and
sub
test
mov
xorl
add
test
fdivs
add
dec
aam
sbb
sbb
test
push
push
add
add
xchg
add
add
xor
dec
inc
xchg
cs
pop
adc
jecxz
sub
inc
cmpsl
mov
movsb
add
pop
nop
add
pop
addb
out
add
and
test
incl
add
imul
pop
cmpsb
sub
cmp
or
and
dec
sbb
call
cwtl
xor
sbb
sub
pop
call
in
shr
jecxz
dec
add
push
aas
sbb
sub
and
sbb
outsl
outsl
xor
inc
outsl
mov
push
add
add
dec
fisttps
nop
cmp
mov
inc
inc
push
nop
movsl
test
push
dec
mov
pusha
add
push
or
and
adc
pop
adc
push
sbb
test
pushf
test
jg
subb
xor
cbtw
inc
sbb
push
hlt
inc
fnstsw
push
mov
hlt
decl
gs
mov
sbb
pusha
or
pop
je
sub
jg
inc
push
in
mov
pop
push
adc
mov
cli
call
xchg
popa
jne
or
mov
cs
dec
mov
xor
jmp
mov
mov
cs
mov
cwtl
fdivs
aas
inc
or
incb
dec
cwtl
aam
inc
add
pusha
xchg
cli
cmp
pusha
push
jbe
outsb
mov
outsl
xor
inc
mov
push
add
push
cs
jno
xor
and
push
sbb
movl
divb
aad
add
sbb
mov
adc
add
dec
loop
rorl
add
inc
mov
push
jecxz
or
mov
or
jmp
push
add
mov
push
clc
inc
and
push
sbb
xor
orb
sub
add
add
mov
cld
inc
sub
add
adc
hlt
xor
jge
fmuls
sbb
cmpb
jle
xchg
mov
add
dec
js
add
adc
ret
jp
sub
mov
push
loop
mov
and
add
sub
push
inc
lret
mov
push
sub
orb
pop
dec
int3
add
xor
es
arpl
mov
sub
rol
test
fwait
push
jo
test
pop
data16
arpl
dec
movhps
sbb
add
mov
mov
pop
cmpl
jo
inc
nop
shlb
adc
scas
and
mov
adc
fildl
pop
xchg
pop
push
and
in
xchg
les
mov
inc
dec
add
fstl
inc
push
push
aas
jae
push
aaa
ret
xchg
push
test
rclb
addr16
insl
lcall
je
pusha
imul
push
inc
aam
das
sub
adc
push
or
or
add
adc
push
pusha
rolb
str
add
xlat
cmp
xchg
xchg
push
loopne
xor
aaa
movsl
mov
jl
xchg
scas
sbb
test
aaa
or
push
mov
jne
push
pop
outsb
andb
push
xorb
jle
add
sti
sub
mov
dec
andb
add
lahf
sub
movsb
js
and
mov
mov
filds
lods
push
cli
dec
mov
mov
jnp
sbb
popa
inc
sbb
inc
sbb
insl
inc
sbb
inc
sbb
andl
ret
xlat
push
movsb
fistpll
lds
push
add
in
inc
data16
xorb
jns
pusha
rcll
xor
inc
xor
rcrb
je
adc
adc
in
sbbl
sbb
mov
insb
int3
adc
in
and
clc
scas
or
add
or
adcb
adc
mov
and
fs
lcall
inc
cmpb
sbbl
inc
xor
xchg
adc
cmp
add
out
subb
pop
sbb
adc
sbb
and
inc
aam
or
adc
mov
leave
and
inc
xchg
mov
aaa
push
cli
dec
inc
cmp
sbb
sbb
inc
aaa
cmpl
rcrb
rorb
cmp
cmp
lods
scas
shlb
std
mov
sbbl
subb
push
scas
orl
add
rorb
insb
cld
sub
mov
dec
mov
imul
outsb
xor
mov
les
and
or
ss
jl
mov
push
sub
push
sarb
inc
roll
lods
push
cld
jnp
fcoml
mov
or
mov
loopne
popa
and
dec
ds
adc
inc
call
add
cmp
mov
jp
pusha
xor
sub
jbe
incl
add
add
add
fs
sub
inc
test
or
mov
shrb
and
adc
adc
xor
add
jl
push
push
fisubrl
bound
jg
mov
add
or
add
xor
aam
mov
addb
shl
adc
pop
loop
daa
loopne
and
data16
add
xchg
es
sarb
mov
add
movl
insl
push
andl
or
ret
cli
jg
movsb
mov
xor
addr16
sub
mov
cmp
shrb
cmp
adc
ficomps
aaa
lods
movsb
decb
inc
fsubl
adc
fcmovbe
add
leave
add
push
inc
mov
inc
jecxz
shlb
pusha
sbb
pop
adc
jl
add
test
lahf
je
es
and
push
mov
xchg
and
xchg
cmp
mov
add
rorb
scas
xchg
out
xchg
pusha
addl
mov
sbb
insl
adc
jnp
insb
sbb
rolb
push
and
mulb
or
add
mov
mov
dec
js
inc
cwtl
aam
push
inc
scas
insb
sub
loopne
sbb
cmpsb
or
notb
or
addb
es
inc
data16
jo
jge
aaa
add
adc
dec
adc
mov
rcrb
addb
insl
data16
loopne
add
dec
sbb
inc
adc
sub
add
and
arpl
and
pop
dec
jl
pop
xchg
aam
jnp
mov
and
idiv
dec
inc
roll
leave
add
xchg
pop
jecxz
pusha
pop
loopne
in
or
cltd
inc
push
and
test
inc
push
dec
push
push
je
pop
push
add
loope
pop
adc
and
sub
and
test
stos
icebp
call
add
mov
add
pop
inc
test
fisubs
and
faddp
pop
add
pushf
sub
ja
add
dec
pop
sub
jo
jg
jbe
add
cmp
popa
add
sarb
shl
inc
inc
js
sbb
insb
adc
in
fidivs
mov
dec
add
loopne
mov
popa
in
mov
sub
dec
dec
add
es
rolb
lea
or
add
mov
pop
cld
jmp
ss
cmp
sbb
fadd
xor
adc
dec
inc
push
popf
or
pushf
shll
dec
mov
jle
xchg
sbbb
push
loopne
sbbb
fs
add
dec
dec
fsubl
push
addr16
fmuls
or
add
mov
sar
aaa
push
ljmp
push
and
adc
pop
pop
insb
loopne
loopne
cld
push
notb
test
push
or
adc
sbb
sub
dec
lds
subb
sub
and
and
je
sbb
addl
negl
or
jo
xor
dec
lock
rorb
divb
movsl
sub
cld
filds
mov
add
mov
mov
repz
xlat
sbb
add
arpl
scas
fisttps
jp
add
pop
rcrb
sbb
mov
push
add
addl
outsb
cli
sbb
or
push
mov
inc
push
sbb
movsl
test
inc
adc
xchg
arpl
add
movsb
cmc
scas
sub
and
dec
inc
add
mov
outsl
and
adc
insl
jo
outsb
push
in
mov
xchg
lods
fsubl
fbld
mov
orb
push
push
mov
and
or
adc
ljmp
add
scas
andps
push
push
lcall
mov
push
sarb
xchg
and
add
jae
fcoml
xchg
fs
or
out
inc
sub
jl
sbb
mov
or
inc
dec
xchg
sarb
push
pop
jp
jo
push
mov
cli
and
sub
mov
push
mov
test
hlt
push
sub
loopne
adc
lds
add
cmpsl
filds
sahf
xor
out
jmp
cmpsl
rolb
jb
jne
pop
outsl
jp
aaa
add
dec
add
xor
or
add
inc
cli
lock
nop
adc
or
xchg
pop
orl
mov
lea
cmp
push
inc
or
je
pop
ret
loop
mov
aam
inc
add
mov
fmull
rol
outsb
add
cld
add
and
insb
or
fcom
fdivl
ds
adc
inc
cmp
test
push
mov
adc
push
fildll
add
inc
add
stos
adc
pop
insb
dec
sub
jmp
pop
cld
lahf
cmpsb
push
push
ja
jb
inc
popa
cmpsl
xchg
loope
mov
mov
push
xor
lds
cmpsb
loop
aaa
mov
cmp
xchg
pop
test
in
imul
in
xchg
mov
xor
fimuls
push
mov
adc
ss
jo
push
add
push
add
lods
mov
shrb
clc
cmp
pusha
mov
cmpb
add
push
insb
aaa
add
nop
sbb
inc
loopne
mov
std
push
pop
inc
ret
ds
adc
fwait
insb
jne
add
scas
test
incl
mov
inc
rolb
pusha
pop
and
adc
outsb
das
out
and
add
in
xor
mov
mov
mov
rcrb
pop
mov
roll
fadd
ljmp
mov
jecxz
lret
push
sar
mov
mov
adc
popa
xor
push
xchg
aas
dec
push
push
jo
fdivl
das
xor
push
xchg
add
ss
xchg
xchg
jb
dec
pop
sbb
mov
push
or
incl
add
test
inc
je
add
push
add
stos
nop
or
or
and
call
mov
mov
sub
fcompl
adc
add
add
nop
or
movsb
aas
dec
xor
add
and
mov
push
xchg
pop
adc
jbe
sbb
js
cmp
loopne
cmc
jg
lock
add
dec
adc
mov
add
pop
aam
push
mov
jo
mov
xor
mov
or
test
fdivrl
mov
or
dec
and
ja
mov
rolb
or
push
xor
test
cmp
mov
dec
mov
push
hlt
cwtl
jo
adc
fstl
mov
mov
add
add
pop
push
mov
xlat
push
sbb
loopne
stos
cmp
push
inc
add
sub
push
push
push
orb
adc
stos
cs
pop
cld
jmp
sbb
mov
or
inc
popa
add
popa
add
hlt
mov
sub
push
and
dec
and
mov
mov
adc
out
push
or
mov
mov
xor
jne
loopne
push
mov
and
adc
or
ret
cmpb
jg
fcmovbe
xchg
pop
xor
jl
mov
pusha
xchg
loopne
add
mov
xor
push
fadd
push
fistpll
or
jne
dec
xchg
pop
add
mov
cltd
roll
out
add
nop
add
stos
mov
in
pusha
clc
mov
or
xchg
adc
pop
mov
repnz
mov
clc
mov
das
lods
inc
fstpl
adc
mov
fisubs
inc
mov
enter
ljmp
outsb
inc
enter
fldt
ret
imul
or
add
loop
mov
pop
and
aas
lret
dec
pop
frstor
xchg
ds
inc
xlat
cs
lods
pushw
xor
dec
cmp
mov
or
xor
fimull
adc
aam
push
sub
and
jp
push
dec
inc
loop
xor
mov
push
dec
pop
pop
aam
fsubrs
sub
inc
adc
fmull
push
sti
lock
add
movsb
push
jp
fmuls
mov
lods
movsb
outsl
add
or
cmp
and
std
jg
mov
push
add
insb
lods
or
movsl
and
stc
mov
lods
adc
loopne
outsb
mov
sahf
rolb
xor
jl
int3
lock
or
inc
and
mov
add
lcall
push
mov
fadds
push
pop
pusha
in
and
inc
dec
dec
ds
xchg
ja
outsl
lret
or
add
add
add
add
sbb
pop
add
ret
pusha
pop
add
pop
mov
lahf
xchg
sbb
add
add
jmp
mov
fcmovnbe
mov
inc
push
pushf
sub
scas
jle
fs
add
and
rcrl
inc
mov
inc
ds
stos
pushf
and
or
push
insb
or
es
xor
adcb
pop
fsubl
add
inc
pop
cwtl
and
les
push
aas
andb
bound
add
jecxz
sub
push
adc
addb
sub
hlt
jae,pn
lods
mov
dec
clc
ja
pop
shlb
pop
xchg
pop
pop
movsb
testb
in
mov
and
aam
scas
add
addr16
addl
mov
ljmp
sarb
sbb
sbbl
cmp
pop
adc
adcl
mov
cld
mov
pop
xchg
jp
sbb
sbb
adc
dec
xor
or
loopne
insb
in
jbe
adc
jg
dec
imul
inc
xchg
test
rorb
mov
or
inc
fisubrs
scas
rolb
lods
lods
ljmp
mov
jne
hlt
push
mov
stos
dec
inc
or
std
inc
adc
shlb
sti
and
pop
jp
cmp
andb
decb
dec
inc
cs
jg
mov
dec
test
fsubrl
and
or
loopne
frstor
inc
or
in
fadds
and
dec
cli
dec
add
and
or
scas
xchg
lock
push
repnz
fsubrp
inc
rorb
add
xchg
inc
mov
js
adc
inc
test
adc
pop
mov
adc
mov
sub
xor
push
xchg
test
pop
stos
inc
adc
dec
sbb
mov
roll
push
adc
fldl
ljmp
inc
jno
shlb
in
xor
xlat
sub
push
movsl
xor
out
inc
push
mov
shrb
mov
xchg
add
inc
push
test
and
dec
adc
pop
cwtl
xchg
iret
xorb
mov
mov
cmc
aaa
lock
and
sub
mov
cld
rolb
and
add
or
rcrb
cwtl
add
push
sub
push
mov
cmpsl
push
ja
stos
mov
adc
sub
xor
mov
add
mov
jp
adc
push
adc
xchg
adc
insb
popa
push
or
push
or
or
inc
fdivrs
add
aam
stos
inc
pop
sbb
sbb
jmp
inc
clc
xchg
inc
lret
mov
movsb
mov
xor
sub
scas
mov
fistl
movsb
jl
shlb
aas
xchg
sbb
es
and
dec
sbb
outsb
addr16
mov
cmpsl
mov
and
pop
add
push
pushf
mov
std
outsl
push
cmpsl
cs
pop
aam
add
mov
mov
fidivrl
loope
shll
push
aaa
or
das
fs
faddl
or
xchg
es
mov
cmp
cli
adc
sub
and
aam
or
rclb
mov
addr16
add
add
rolb
sbb
push
inc
add
fmull
sbb
inc
mov
sub
jo
fsubl
mov
dec
pusha
sub
daa
and
popa
and
push
push
push
sbb
mov
and
inc
jp
sub
mov
daa
pusha
push
insb
inc
dec
ret
ficoms
mov
and
es
sub
mov
and
sbb
mov
pmulhuw
or
sub
fistpll
sbb
xor
inc
aas
jne
adc
add
cld
inc
fmul
cmpsb
pop
mul
xor
mov
fcmovb
cmp
mov
and
aad
ss
aaa
lret
test
stos
add
push
inc
or
mov
loop
divl
sub
pop
mov
movsl
jle
sub
insl
add
cmpl
les
jp
mov
jb
outsl
sbb
lea
call
or
cmp
jmp
test
pusha
inc
aas
add
dec
lods
aas
je
add
fwait
pusha
outsb
fsubs
out
or
push
inc
popf
mov
pop
push
sub
fs
pusha
inc
loop
mov
orl
fstps
xchg
div
inc
addb
push
cmp
test
adc
fbstp
sub
jae
rclb
mov
fs
loopne
inc
and
sti
add
mov
sbb
xchg
rcrl
jno
and
pusha
scas
add
pop
dec
sbb
cmp
inc
mov
mov
sahf
push
mov
sub
loopne
or
test
loopne
sbb
xchg
test
adc
sar
pop
adc
test
or
call
add
mov
andb
out
and
mov
pop
arpl
mov
mov
outsb
add
pop
jecxz
push
add
movsl
mov
jg
mov
int3
push
aam
std
pop
rcr
addb
outsb
inc
mov
mov
add
andb
xor
aam
ret
outsl
loope
xchg
push
add
mov
int
and
pop
sbb
rorb
xchg
test
lock
rolb
cld
xchg
popa
xchg
andl
xchg
mov
fcmovu
shlb
dec
or
cmpb
loopne
push
cwtl
les
mov
sarb
mov
aas
pop
pavgb
jecxz
outsl
clc
mov
and
les
mov
and
jo
fcmove
cmpsl
cmp
pusha
jne
sbb
adc
add
cli
sub
sub
push
jo
add
aaa
xorl
adc
cmp
pop
push
or
pusha
lock
dec
adc
mov
adc
adc
xchg
inc
sbb
dec
mov
sub
push
dec
ljmp
je
test
pop
sbbb
or
cmp
addr16
ljmp
outsl
push
insb
push
adc
rorb
add
mov
lock
lret
sti
add
lret
push
nop
add
add
decl
aam
aam
pop
test
shrb
pop
shrb
pop
or
fcoml
mov
push
popa
aas
push
nop
xor
jle
dec
mov
decb
fisubrl
fnstsw
mov
push
lods
pop
mov
aas
ss
push
push
fisubrs
xor
lret
nop
or
pop
inc
push
add
xchg
and
cmp
cmpsb
mov
mov
mov
jae
push
or
xchg
rclb
rolb
das
xchg
mov
out
and
aam
or
mov
sahf
and
lcall
sbb
sbb
and
cld
fwait
inc
fnstcw
cmp
pop
or
pusha
and
scas
push
or
pusha
sub
add
adc
push
outsb
shlb
lods
push
rolb
or
pusha
or
xor
sub
popa
cwtl
mov
xor
xor
xchg
mov
jmp
push
pusha
push
push
jg
sub
addb
add
ljmp
inc
push
add
addb
add
mov
jbe
adc
adc
pop
int
push
adc
adc
add
unpcklps
lock
fs
adc
xor
cmovo
push
pop
pop
inc
add
inc
add
inc
shrl
add
xor
xchg
and
jb
xchg
stos
add
jo
add
xorl
add
das
xchg
loopne
adc
aaa
push
or
add
dec
loop
shlb
adc
mov
fcmovb
sub
push
andb
push
loope
pop
pop
and
mov
faddl
ljmp
xorb
and
add
xadd
sub
pop
jno
scas
fcoms
cli
mov
pop
stos
decb
clc
add
push
out
push
xchg
fists
test
cli
mov
or
pop
pop
lods
cmp
fdivs
add
sbb
jo
pusha
pop
cmp
ret
mov
inc
xchg
pop
outsb
adc
mov
js
add
mov
call
pusha
mov
or
add
int3
xorb
fisubrl
push
cmp
fsts
sbb
add
pusha
mov
or
adc
or
icebp
or
mov
push
inc
loope
mov
cmp
or
fcomip
and
mov
rcl
stos
and
mov
addb
mov
enter
and
adc
cmpsl
mov
aam
pop
les
pop
ret
jns
xchg
xchg
xchg
adc
nop
add
scas
lcall
roll
mov
mov
push
add
jbe
push
rclb
mov
lcall
adc
jnp
xor
and
out
ja
jo
mov
xchg
xchg
mov
lods
test
xorb
add
nop
or
xor
lock
jbe
rorb
cli
and
xchg
les
push
shlb
fsubs
pop
mov
push
add
shrb
push
add
sahf
push
rolb
loope
into
shll
ret
loope
inc
test
cld
ss
lock
inc
adc
fs
addb
inc
adc
and
mov
ja
ljmp
push
push
jl
mov
xor
inc
and
mov
decb
mov
push
mov
je
je
and
adcl
and
shrl
scas
in
out
push
mov
sbb
mov
js
sub
mov
sbb
shlb
add
fistl
xor
jge
pop
push
sub
xor
dec
xor
and
xor
mov
dec
cmp
pop
popa
jecxz
inc
dec
mov
push
and
push
pop
or
ljmp
adc
pop
pusha
mov
test
add
push
jmp
sub
sub
and
sbb
cmpsb
xor
mov
mov
or
jnp
ficoms
ret
mov
movsl
and
jo
or
cltd
sub
xor
jo
fmull
jb
jp
sub
pop
jg
jmp
jo
dec
sbb
mov
xor
mov
popa
cs
out
lock
stos
sub
push
push
push
in
jmp
add
mov
push
and
and
cmp
xchg
test
pop
and
lcall
sbb
orl
clc
scas
and
nop
or
leave
rolb
cwtl
mov
sub
gs
jmp
bound
dec
mov
scas
or
push
fcoms
adc
adc
inc
dec
push
lods
add
orl
fildll
jmp
mov
cmp
rcr
xor
mov
filds
jae
clc
dec
add
push
fisttpll
mov
in
fsubl
push
cmp
push
pop
xchg
rorl
cmp
je
add
stos
xor
imul
mov
mov
outsb
inc
mov
mov
adc
add
jle
add
inc
adc
sbb
add
shl
decl
mov
mov
mov
add
sarb
mov
cmp
add
int
in
add
sbb
das
mov
xchg
roll
xchg
aad
roll
scas
or
inc
rcrb
outsb
dec
cwtl
or
mov
icebp
add
add
push
jo
cld
popa
faddl
cmc
xchg
xchg
lods
jnp
es
test
sbb
add
push
rcl
pop
cmp
xchg
xchg
xorl
push
mov
or
add
bound
push
or
aas
lea
call
xchg
inc
adc
rcrl
mov
add
inc
and
add
mov
dec
sbb
and
add
or
mov
mov
push
rorb
outsb
nop
lock
xchg
out
cmp
movsb
or
and
mov
outsl
cli
sub
mov
loopne
test
lahf
pop
fimuls
pop
adc
adcl
add
popf
add
stos
push
xchg
inc
dec
pop
in
pop
test
fimuls
inc
popa
aam
adc
rcrb
movsb
push
inc
mov
ret
add
or
add
pusha
push
push
push
cwtl
xchg
js
gs
lds
lds
cmp
and
aaa
add
adc
add
or
test
push
or
inc
loopne
inc
push
fadds
push
ret
add
mov
pop
push
movsb
mov
sub
faddl
out
xchg
add
jg
push
add
jb
aas
push
pop
add
cmp
stos
push
rcrb
sbb
xchg
scas
pusha
inc
jne
or
rcrb
dec
enter
push
adc
or
dec
mov
shrl
add
dec
mov
ss
add
push
mov
sub
lock
xchg
jecxz
mov
and
mov
jb
js
cmp
or
fisubs
and
mov
adc
loopne
rcrb
add
sub
adcl
sub
arpl
pop
sbb
sub
push
js
and
mov
sbb
rorb
xor
mov
xchg
inc
and
sbb
and
clc
mov
lods
aas
add
sarl
mov
sar
adc
adc
ficompl
fsubl
xchg
sbb
pop
xorb
xchg
aad
and
sbb
ret
sub
cwtl
or
andb
and
int3
jmp
cwtl
xchg
loop
add
daa
test
push
push
inc
adc
and
ljmp
pop
ss
mov
movb
in
adc
lock
rdmsr
push
mov
add
dec
fmulp
jae
pop
je
fiaddl
lcall
add
loope
mov
xchg
and
pop
enter
mov
nop
rcl
sub
adc
xchg
xchg
push
cmp
and
inc
sbb
ja
adc
and
into
sbb
xor
shl
and
popl
push
push
loop
cmp
or
xchg
arpl
sti
ja
adc
mov
loopne
sub
mov
gs
pop
ds
inc
cs
in
or
pop
mov
bound
mov
shr
xor
inc
jge
cmp
lock
mov
mov
cmp
add
pop
lods
fucomip
inc
fcmovbe
jge
stos
mov
mov
or
mov
inc
push
aas
pop
loopne
sub
add
adc
cwtl
test
or
in
inc
sbb
inc
subb
inc
mov
inc
add
sub
pop
mov
mov
add
push
mov
push
cmpl
xorb
adc
jle
loopne
adcb
mov
mov
and
xor
fwait
and
and
insl
rorl
cld
imul
mov
test
push
or
sub
clc
hlt
outsb
or
add
xor
sbb
adc
out
push
sub
and
roll
cli
mov
rolb
inc
mov
jl
push
fs
nop
xchg
and
shl
dec
stos
cmpb
lret
push
in
mov
inc
or
mov
inc
orl
movsl
xlat
orb
sub
cltd
jle
add
xor
inc
adcl
push
or
call
nop
push
scas
js
lods
stos
hlt
inc
aas
and
out
pop
inc
add
or
pop
mov
cmp
shll
push
push
mov
sbb
push
cld
int
or
cmpsl
mov
hlt
mov
push
and
bound
and
ret
xchg
push
xor
loopne
cmp
inc
mov
adcb
jecxz
adc
or
pop
rolb
adc
adc
push
pusha
xchg
xchg
dec
cli
mov
int3
mov
lcall
push
and
xorb
sub
cmpl
andl
loope
push
xchg
loopne
sbb
popa
and
push
or
sar
mov
jo
loop
adc
lock
mov
xorl
scas
adc
daa
inc
push
cmp
add
std
incl
mov
lods
loop
sbb
and
sub
fiadds
pop
ljmp
pop
cmp
cmp
cmp
mov
xor
mov
and
lahf
daa
and
add
fcomip
mov
xor
push
popf
mov
rclb
hlt
jo
inc
inc
fs
mov
sub
adc
incl
enter
sub
adc
popf
push
push
sahf
push
adc
mov
adcb
clc
add
test
xchg
js
shlb
push
sbb
inc
in
add
mov
incl
adc
adc
mov
pop
adc
aaa
pop
inc
push
repnz
pop
aaa
jl
mov
fidivrl
adc
nop
push
xchg
aaa
je
fnstenv
enter
std
adc
mov
nop
push
xchg
adc
adc
dec
or
jnp
aam
add
xor
mov
in
test
adc
mov
adc
push
adc
push
sahf
sbb
cmp
mov
pop
adc
jae
sub
dec
sbb
dec
ljmp
adc
ja
aas
cmp
add
es
or
dec
loope
xor
mov
mov
sub
add
orb
or
xchg
sub
nop
xchg
lods
and
les
xor
inc
inc
sbb
call
pop
test
pop
pusha
in
cmp
mov
cmpsl
outsb
mov
add
insb
sub
dec
stos
fstpt
adc
insb
nop
mov
or
mov
in
push
and
jo
fs
gs
decl
push
imul
xor
inc
fmull
stos
ss
mov
adc
shll
jmp
test
push
sbb
das
cli
push
pop
mov
addr16
adc
mov
fsubrl
popf
xor
loopne
add
sbbb
pop
add
cmpsb
sbb
orb
lods
add
cs
xlat
adc
jbe
inc
mov
mov
addr16
mov
jne
adc
mov
mov
push
mov
adc
mov
ljmp
stos
orb
add
mov
and
and
loopne
ja
sbb
pop
pusha
cmp
xchg
mov
cmp
pusha
loopne
loopne
sub
es
mov
add
add
in
lods
push
cmp
aad
inc
push
xor
jo
add
jg
sub
clc
push
mov
rorb
jb
inc
das
call
cmp
push
sub
inc
cmp
nop
xchg
ja
shld
sub
cli
sub
add
sub
aam
lock
adc
ds
loop
pop
sub
outsl
loopne
and
jge
cld
test
insb
lods
cmp
pop
push
pusha
xchg
hlt
mov
pop
lods
call
shlb
jae
or
pop
decl
xchg
rolb
hlt
inc
jo
mov
pop
add
lock
mov
movsl
movsb
loop
in
or
movsb
jb
aam
mov
cmpb
add
pusha
and
inc
mov
push
xchg
ret
inc
mov
test
lock
fs
call
mov
xor
pop
pop
lock
aaa
cld
cli
dec
mov
mov
push
movsl
sub
rorb
push
pop
nop
dec
out
xchg
mov
loopne
push
fists
pop
icebp
add
es
dec
clc
and
mov
sub
xchg
xor
add
mov
ljmp
pop
mov
push
inc
test
add
clc
sarb
mov
repnz
and
in
out
cmp
xchg
push
loopne
dec
and
pop
and
inc
push
bound
xor
xor
int
sbb
decb
pop
push
adc
add
hlt
add
inc
std
jmp
ficoms
sub
adc
jne
adc
lock
pop
nop
lds
push
mov
mov
cmp
jbe
inc
push
rolb
add
das
sub
fisubrl
sub
jnp
cmpsl
jp
mov
rcrb
es
sub
xor
xchg
test
popa
mov
or
out
adc
xchg
xor
shlb
xor
add
add
inc
movsb
cmp
sub
push
push
dec
mov
push
adc
push
fprem
cmp
loop
adcl
add
nop
add
push
fidivl
and
lods
mov
fildll
fdivl
mov
push
add
cmp
or
outsl
mov
xchg
add
jecxz
addb
mov
push
pop
cs
pop
cli
inc
add
addl
pop
shrb
lods
and
cmpsb
add
pop
push
mov
rclb
aam
outsb
mov
add
outsb
inc
jl
inc
and
cmp
sub
call
xor
fcoml
cwtl
mov
and
mov
in
mov
mov
jp
mov
and
outsb
mov
ss
mov
pop
movsb
add
mov
or
or
lret
loopne
cmpsb
cmpsb
or
imul
sub
shlb
inc
lods
ljmp
inc
cmpsl
xchg
add
ss
popl
cmp
mov
push
lods
adc
xor
fisubrl
adc
pop
sub
mov
int3
add
add
inc
aam
adcb
mov
jne
mov
pop
adc
and
add
cmpb
xor
int
out
mov
jle
sbb
insl
and
or
add
movsb
and
pop
adc
mov
sbb
xor
add
and
in
or
enter
mov
xor
insb
xchg
jbe
addb
in
cmp
insb
sbb
push
push
jbe
ds
pop
mov
xlat
push
push
shlb
push
mov
pusha
or
push
hlt
mov
mov
lret
dec
jg
je
adc
pop
fdivs
cs
xorb
push
sti
fwait
or
push
inc
fiadds
inc
add
ficompl
adc
mov
outsl
inc
add
packsswb
pop
test
push
push
inc
push
ret
cmpsb
les
outsl
mov
repnz
or
fs
lret
clc
mov
inc
addb
add
ss
outsl
jecxz
mov
jno
dec
inc
xchg
sub
and
flds
test
jle
push
fidivl
jl
call
jl
popa
subb
pop
push
jl
ret
sbb
repnz
fisubrs
rcrb
inc
and
es
outsl
push
push
inc
daa
aam
andb
xlat
or
sbb
add
cmpsb
flds
sub
jecxz
or
cmp
inc
mov
test
fs
mov
push
mov
add
add
pop
mov
mov
xchg
test
xlat
jmp
xor
in
mov
push
std
or
pop
sbb
add
sbb
dec
or
mov
in
addl
pop
push
ljmp
sbbb
ss
ret
adc
inc
ret
sub
ret
nop
add
inc
scas
inc
pop
rcrl
fsubrp
or
in
sub
jb
lods
jg
sbb
ja
fcompl
jecxz
pusha
mov
inc
add
add
inc
jbe
mov
mov
or
lcall
pop
cmp
dec
pop
test
les
add
shr
inc
add
inc
xorl
fmull
loopne
outsb
add
lock
pop
xchg
add
jae
sbb
and
dec
push
jle
dec
out
outsl
fisttpl
mov
in
and
add
pop
loopne
sub
nop
inc
adc
sub
mov
or
bound
ret
adc
push
dec
adc
push
popa
sub
adc
cmpsb
mov
jb
jl
adcb
shrl
jnp
xorb
inc
pop
mov
add
add
add
add
jb
inc
call
outsb
and
dec
dec
sub
xor
mov
daa
clc
cltd
or
cmpsl
ljmp
adc
loopne
mov
movsb
lods
mov
movsb
inc
or
mov
inc
adc
add
xchg
and
loopne
pop
and
add
loope
jae
adc
shlb
rcrb
add
mov
inc
add
and
dec
and
test
add
xchg
push
std
or
xchg
insb
mov
jns
das
and
shrl
mov
and
sbb
es
push
jnp
fisttpl
cs
add
lods
pusha
lds
test
shll
mov
jg
xor
into
xor
ret
xor
pop
push
lds
movsb
mov
or
jg
add
repnz
inc
sbb
pop
enter
mov
orb
in
cmp
sbb
xor
push
mov
stos
incl
mov
jecxz
call
pusha
daa
or
pop
cmp
aas
addl
sahf
pusha
and
xchg
mov
adc
and
xor
push
add
jp
nop
sti
sarb
mov
lahf
cmp
and
pop
fwait
or
popa
add
push
test
pop
dec
xor
dec
scas
xchg
dec
es
aas
or
sarl
xor
mov
adcb
push
mov
xchg
xchg
xor
adc
sub
xlat
dec
or
mov
push
mov
movsl
subb
inc
pop
mov
test
xor
rclb
adc
push
pusha
pop
mulb
inc
clc
rorb
inc
push
push
fisubrs
in
repnz
xchg
adc
ja
pop
push
dec
sub
aaa
hlt
sarb
adc
push
mov
push
decl
push
sbb
inc
cmp
mov
add
aas
ja
fwait
sub
ficoml
inc
ficoms
lods
add
push
imulb
sub
jl
into
nop
outsb
movsb
fbstp
aaa
out
sbb
fdivl
jl
out
pop
jae
jg
pop
xchg
rolb
push
pusha
addb
adc
popa
pop
clc
push
aaa
rcrl
mov
mov
mov
insl
ljmp
jge
nop
xor
push
sahf
adcl
rcr
mov
and
inc
adcl
orb
loopne
add
jp
mov
mov
jmp
jp
inc
mov
jo
roll
push
or
es
gs
mov
jl
dec
pop
xor
push
add
test
or
cmp
cmp
add
mov
push
adc
out
aam
lock
mov
and
sbb
icebp
sbb
decl
add
or
in
and
mov
jns
fidivrl
daa
or
xchg
jo
add
jnp
addr16
mov
adc
lds
jns
rorb
sbb
ret
pop
push
repnz
mov
xchg
in
out
mov
and
stos
insl
cld
fisttps
subb
add
pop
pop
mov
jle
pusha
push
push
and
inc
cli
jmp
or
lock
add
push
cli
cwtl
sub
dec
rolb
mov
call
cmpsb
inc
mov
jmp
dec
pop
out
andl
rclb
xchg
push
lock
and
or
rolb
and
ja
loope
push
icebp
push
mov
stos
jl
inc
mov
icebp
or
mov
lock
or
and
mov
pop
push
and
sahf
cmpsb
fcmovb
fnsave
or
fsubr
xchg
push
cmpsl
and
sub
or
and
or
adc
jnp
mov
rolb
or
dec
clc
aas
or
lea
push
mov
outsl
lods
mov
fisttpll
inc
pop
and
add
xlat
imul
add
insb
mov
jno
push
test
and
and
rcrb
dec
push
or
mov
in
push
push
push
and
inc
inc
jmp
in
cmp
inc
add
pusha
maxps
xor
sbb
push
nop
nop
or
rolb
xchg
icebp
mov
shll
pop
cmp
push
setb
pop
nop
dec
mov
add
cmp
jo
mov
incl
inc
lods
push
and
call
mov
pop
push
jg
test
xchg
xor
add
add
inc
sahf
adc
add
pusha
xchg
cltd
mov
nop
aaa
pop
sarb
pop
sbb
add
pop
mov
cmpsb
add
aam
js
add
push
cli
pop
fisttpll
insb
push
ljmp
mov
and
pop
pop
orb
pop
in
or
pop
push
xorb
mov
add
sub
out
cli
push
clc
mov
xor
xchg
push
mov
movsl
inc
add
in
test
and
xor
aas
cmpsb
cmc
outsb
adc
and
outsb
pop
aam
cmp
lahf
xor
sbb
ret
jge
pusha
push
cmp
mov
loopne
loopne
push
aas
mov
jo
es
push
mov
fwait
dec
adc
cmpsl
mov
push
sub
push
lea
or
add
imul
adc
push
nop
push
nop
xor
jle
pop
mov
dec
ficoms
pusha
or
ja
lods
imul
imul
aad
inc
imul
xchg
inc
push
inc
xchg
lock
lods
dec
mov
mov
fiadds
cli
sbb
popa
mov
or
fcomps
and
sahf
outsb
xor
imul
imul
pop
jo
dec
sub
jbe
ret
sbb
xor
sbb
mov
ficomps
fnstcw
fcom
push
and
adc
rorl
pop
adc
mov
cld
jg
mov
or
in
repnz
adcb
insb
mov
lods
add
dec
jb
push
add
jg
clc
mov
sbb
out
lret
pusha
add
sbb
push
jl
arpl
mov
sbb
mov
sbb
call
pop
and
lock
xlat
ljmp
rorb
lock
and
add
mov
ret
xchg
and
mulb
imul
cmpb
ljmp
ljmp
je
push
aas
jmp
rolb
xchg
lods
xchg
icebp
pop
push
mov
add
dec
cmpsl
push
pop
mov
and
mov
pop
fists
cld
push
pop
adc
adc
ja
sub
sahf
pop
orb
add
stos
lods
xchg
push
xor
mov
adc
shl
add
add
inc
fldl
pop
ss
test
addr16
xor
and
pop
fiaddl
and
and
mov
and
push
repnz
dec
lods
push
and
add
pusha
mov
dec
and
xchg
jle
cmp
leave
xchg
add
icebp
testb
movsb
xchg
test
and
xchg
filds
push
xchg
or
filds
add
pop
test
and
pop
xor
lret
pusha
push
dec
xor
add
clc
add
call
out
adc
dec
mov
sub
mov
xor
pop
pop
in
or
and
or
lock
push
dec
jle
jecxz
inc
sbb
sbb
sarb
stos
inc
sbb
loopne
fbld
inc
aam
jbe
repz
add
cld
mov
push
add
jmp
mov
insb
lods
and
in
pop
and
add
sbb
and
sub
push
je
and
pop
cmp
pop
adc
jbe
inc
subb
xchg
jle
jle
mov
shll
clc
push
lods
pop
rcrl
push
mov
xchg
fwait
nop
fsubl
les
mov
insb
pop
fiaddl
pop
sub
and
cmpsb
and
inc
ret
adc
cmpsl
and
mov
push
and
dec
add
nop
popa
or
add
mov
push
mov
faddl
pop
add
mov
cmpsb
or
push
pop
add
data16
scas
push
jp
push
mov
pushf
or
xor
xchg
sbb
insb
inc
push
out
dec
test
adc
test
test
pop
loopne
mov
decl
les
cmpb
jns
xlat
and
insl
and
jl
sbb
inc
rcl
xchg
push
aaa
fsubrs
inc
add
call
jbe
add
xchg
addb
add
push
clc
mov
and
inc
imul
fisttpl
push
add
add
mov
or
hlt
add
pop
or
inc
sbb
fidivl
fdivl
fs
cld
dec
pop
ret
cmp
dec
push
movsb
push
lock
cmpsb
and
loop
andb
ds
mov
insb
pop
sub
inc
lea
push
stos
add
hlt
lcall
push
or
outsb
add
insl
lret
insb
mov
fcomp
push
sbb
adc
sub
mov
jle
jl
add
cmpsl
or
mov
fbld
aad
or
addb
pushl
das
adcb
add
aaa
pop
inc
pop
adc
decl
mov
push
push
sbb
inc
xchg
jp
sbbl
jg
push
sbbb
xor
fsubrs
js
push
loopne
loopne
push
shl
inc
push
sbb
loopne
pop
jmp
mov
xchg
fists
pop
adc
or
xchg
mov
jae
nop
mov
pop
push
bound
jp
mov
add
into
mov
cli
pop
aas
xchg
cltd
and
cli
cmp
ficompl
push
fstl
mov
add
and
sbb
add
lret
mov
and
adc
int3
imul
insl
shl
add
icebp
enter
add
jmp
xor
or
sbb
add
push
push
loopne
mov
pop
ret
push
pop
out
or
stc
sbb
adc
lods
inc
jmp
xchg
lock
xchg
sarb
rclb
and
das
and
cmp
adc
add
test
or
incb
fisttpll
dec
inc
les
icebp
ja
add
adc
cli
adc
sbb
sbb
sbb
add
sbb
fsubl
std
add
rcrl
sbb
int
sbb
xchg
stos
xchg
mov
push
cltd
adc
fidivrl
andb
pop
cmpsl
arpl
fwait
movsb
stos
in
sbbb
js
inc
pusha
sbb
and
mov
xchg
mov
stos
fwait
sbb
or
mov
out
sbb
pop
hlt
and
clc
mov
sbb
adc
pop
sbb
mov
sbb
out
jle
and
sahf
mov
add
pop
bound
xor
push
dec
mov
mov
adc
push
test
mov
frstor
ret
mov
fidivs
mov
add
insb
call
xor
ret
add
and
inc
les
test
ljmp
test
mov
inc
and
pushf
and
fadds
or
pop
xor
pusha
push
decl
cwtl
outsl
pusha
pop
aam
push
test
push
pop
jbe
adcb
push
cs
push
push
push
xlat
and
aam
and
mov
inc
orb
outsl
clc
pop
rolb
bound
push
adc
les
sbb
andb
push
inc
insl
das
insb
sbb
mov
mov
aad
adc
loop
inc
adc
aam
add
loop
jbe
loopne
push
pop
mov
jg
adc
mov
and
pop
fcomp
adc
scas
mov
dec
shlb
test
add
and
shrb
and
nop
xor
scas
movsb
push
push
jg
mov
cmp
add
mov
or
fs
fsubrl
push
ficompl
sbbl
sub
cmp
mov
imul
adc
pop
out
jbe
adcb
sub
or
call
fwait
movsb
mov
mov
add
sbb
and
push
hlt
lods
jo
into
jge
ja
stos
push
inc
popa
sbb
loopne
pop
lret
push
or
and
xorb
pusha
mov
loopne
es
cmc
or
add
mov
loope
mov
pop
adc
cmpsl
dec
scas
adc
mov
orl
pop
pop
in
stos
inc
movsb
inc
aam
and
pop
movsl
mov
inc
pushf
pop
js
add
andb
push
loope
xchg
xor
pop
and
lods
mov
inc
jmp
shrl
fimuls
and
stos
addb
movsb
push
or
adc
sbb
push
xchg
push
ss
and
and
jg
add
jae
inc
insb
call
cmp
mov
mov
add
ret
and
adc
arpl
mov
sbb
orl
addr16
in
jg
pop
and
add
aas
xor
inc
add
stos
call
add
adc
test
xchg
test
push
pushf
push
popa
xchg
call
mov
xor
jo
fidivrl
sub
or
push
add
mov
mov
sbb
sub
loope
mov
mov
mov
or
mov
mov
dec
xor
mov
test
pop
adc
mov
insb
es
mov
jo
push
movsb
sub
add
inc
enter
popa
sub
or
pushl
ficoms
stos
sbb
mov
pop
xor
stos
and
and
es
adc
adc
cmpsb
sub
or
mov
out
addb
out
cmp
dec
nop
adc
aaa
add
or
push
rolb
sub
add
ljmp
cmp
out
mov
out
pop
lock
popl
lret
loopne
incl
inc
nop
inc
add
adc
outsl
add
rolb
jo
subb
push
inc
shlb
sub
add
push
push
out
mov
inc
aam
aas
and
fwait
decb
data16
aas
sahf
mov
or
popf
mov
ss
xor
fs
cmpsb
mov
and
push
sbb
cpuid
scas
testb
fdivp
jg
dec
fadds
mov
mov
lret
pusha
mov
inc
jmp
add
and
or
jle
nop
es
or
or
or
pop
jbe
pop
adc
xor
shll
fstpt
add
daa
xchg
hlt
sbb
ja
push
gs
dec
xor
fsubrl
add
pop
repnz
pop
loope
incb
xchg
pop
xor
sub
mov
sarb
mov
rcrb
dec
popa
dec
mov
sub
xor
xchg
gs
add
js
mov
xor
mov
inc
push
dec
and
add
mov
push
push
sbb
lcall
xor
popa
or
sub
add
jnp
inc
pop
lcall
xor
xchg
pop
add
icebp
xchg
aam
pop
sbb
jb
sub
mov
push
ds
xor
xchg
and
or
mov
or
mov
aas
inc
adc
es
xor
bound
shlb
cmp
cltd
mov
add
inc
adc
push
sub
and
xor
sbb
mov
nop
mov
mov
in
mov
mov
dec
jmp
add
cmp
cld
xchg
shrl
xchg
jnp
xchg
mov
adc
or
add
inc
cmpxchg
cld
mov
or
xor
aas
imul
fstpl
clc
decl
mov
or
pop
fcomip
arpl
mov
pusha
push
aas
inc
popa
adc
or
mov
jmp
mov
mov
addl
inc
push
inc
and
in
xchg
sub
or
push
mov
popa
add
adc
and
push
sbb
testb
lds
ror
mov
das
push
jg
xor
mov
ret
lods
pop
xor
or
les
xchg
xorb
xor
adc
test
mov
pop
sub
inc
fldenv
push
ljmp
sbb
and
stos
rolb
xchg
cmc
mov
aam
mov
pusha
cmp
dec
add
inc
ret
push
lods
push
add
ljmp
pop
xchg
bound
mov
mov
pop
and
mov
dec
lods
mov
sub
jns
pop
pop
mov
nop
sub
inc
adc
adc
and
aad
push
pop
ds
mov
add
fsubs
popa
mov
lcall
add
add
loop
pop
rolb
mov
pop
js
or
push
or
jno
sbb
outsb
ljmp
add
dec
mov
adc
add
xor
inc
aaa
push
sub
push
lret
or
and
push
add
and
cmpsl
xchg
push
add
mov
and
data16
cmp
lock
cltd
or
mov
ret
xchg
mov
outsl
push
aaa
call
add
sbb
xchg
test
sub
mov
mov
decb
inc
push
mov
push
inc
push
or
outsl
push
adc
or
push
pop
or
mov
jo
shlb
movsl
stos
jo
add
es
add
cli
mov
jo
fisttps
push
and
mov
inc
fiaddl
pop
jno
rolb
shrb
xchg
scas
jp
mov
addr16
dec
adc
mov
mov
inc
lea
jns
insb
loopne
push
imul
jo
rolb
pop
outsb
push
inc
faddl
ja
fdiv
jl
mov
je
jg
lods
pop
or
cmpsb
adc
and
mov
xor
insb
lcall
mov
notb
push
mov
push
add
outsb
push
call
movsb
pop
gs
arpl
sbb
shrl
cli
sbb
faddl
push
add
sbb
data16
int3
push
call
lods
inc
mov
push
sbb
dec
inc
fistl
rolb
dec
fisubrl
imul
dec
and
js
aas
loope
xchg
adc
mov
xchg
adc
jle
dec
mov
ss
xchg
add
sarb
clc
add
pop
and
lcall
les
dec
pop
inc
pop
push
lock
push
pop
or
adc
sub
add
fistpl
xchg
subl
and
mov
pop
nop
xor
push
add
add
icebp
push
test
je
push
das
adc
adc
adc
adcb
pushf
mov
xor
push
pop
push
inc
aam
lock
addl
adc
stos
sub
add
or
cwtl
xor
pop
sub
roll
xchg
lock
paddq
and
cmp
decl
push
pop
adc
pop
shl
adc
insb
mov
inc
daa
inc
nop
jle
and
pop
sub
jg
dec
ficomps
add
cmp
dec
add
mov
adc
cmpsb
test
hlt
mov
or
mov
inc
add
lea
ljmp
xchg
or
jl
adc
pop
rcrb
push
sub
ljmp
or
icebp
aas
dec
sub
ficompl
inc
adc
push
insb
xchg
inc
xchg
stos
dec
jp
pop
adcl
fidivl
fcoml
fcmove
es
xor
les
lods
push
outsb
push
sub
ja
mov
adc
add
imull
shrb
subl
sub
push
lea
xorb
scas
pushf
xorb
cmp
mov
cmpsb
pop
fdivs
add
or
sbb
cli
inc
sub
lret
inc
andb
and
pop
in
jbe
mov
movb
jno
lods
sub
in
arpl
popa
call
test
aaa
pop
push
adc
add
add
pop
mov
xchg
sbb
mov
dec
adc
lret
fnsave
test
and
xorb
add
and
xchg
icebp
wbinvd
aad
mov
pushf
or
fwait
test
mov
loop
mov
fnstenv
lock
or
or
mov
add
add
mov
pusha
mov
bound
jp
jo
adcb
addl
mov
lahf
and
add
mov
add
pop
adc
sub
add
push
mov
inc
jecxz
push
or
cmp
xchg
shlb
pop
rol
mov
fdivrs
cmpsb
and
pop
xor
in
xor
negb
push
int3
sub
lret
push
imul
mov
es
jae
xor
dec
movl
cmpl
arpl
or
rolb
sbb
sbbl
or
lods
scas
imulb
xchg
sub
test
rclb
adc
sbb
rorb
inc
mov
and
sbb
rclb
dec
daa
outsl
mov
add
andb
or
test
mov
lea
cmp
cs
sub
mov
loopne
or
dec
mov
ret
clc
push
sub
fdivl
out
nop
scas
dec
add
sbb
cmp
add
jne
outsb
je
or
inc
xchg
lods
xchg
cld
add
push
rolb
ja
inc
enter
rolb
add
xchg
outsb
inc
inc
addl
pop
stos
and
add
dec
fdivrs
fstps
xorb
movsb
or
outsb
out
data16
jg
hlt
fsubrp
roll
aam
push
dec
and
lret
push
inc
push
dec
adc
into
xchg
call
dec
lret
and
fimuls
stos
filds
push
ror
insb
mov
cmp
je
incb
ss
pop
add
sub
or
ret
sub
xor
jbe
mov
stos
add
or
dec
sahf
or
sar
adc
imul
js
and
or
and
outsb
out
pop
lods
push
add
loopne
ret
fldln2
add
testb
repnz
push
fstpt
fildl
pushf
pop
rcl
jp
testb
add
xlat
push
hlt
inc
negb
jmp
add
aaa
inc
pop
test
xlat
fisubl
add
stos
xlat
push
pop
add
xor
cmpsb
jns
pop
daa
aas
xlat
cmp
mov
sbb
out
xchg
imul
xor
outsb
fisubl
push
clc
neg
adc
push
std
fidivrs
rorb
inc
and
iret
dec
adc
call
mov
dec
mov
mov
sbb
fnstenv
add
sbb
mov
out
sub
addr16
adc
aam
sbb
mov
jbe
lahf
sbb
mov
jbe
cmp
stos
xchg
mov
fwait
xor
ficomps
xchg
pop
popa
and
xor
lret
rolb
sub
sbb
shr
cmpsl
jecxz
rorb
add
clc
in
fldl
shl
dec
sar
add
push
clc
popl
outsl
aas
loope
hlt
xlat
inc
push
and
lock
stos
aas
fildl
pusha
push
cmpl
mov
test
add
lods
fsts
stos
or
or
xchg
xchg
push
or
mov
add
pop
xchg
mov
or
jb
imul
xor
loop
out
adc
push
add
inc
test
cltd
test
mov
mov
push
outsb
and
or
add
out
popf
test
iret
add
inc
add
in
or
ror
add
jns
xlat
clc
cmp
xlat
add
mov
roll
mov
in
je
fistpll
cmp
mov
or
or
je
loopne
pop
inc
fbld
inc
dec
add
outsl
es
jbe
pop
add
jbe
aam
jno
add
decl
jae
lret
mov
push
fs
jnp
movsl
mov
sbb
inc
jno
pop
loopne
or
inc
and
shl
push
lcall
mov
adc
inc
cmp
jle
pop
and
mov
jg
es
dec
cmp
popa
add
push
push
or
gs
xchg
and
push
insb
xor
mov
std
push
or
rdmsr
add
pushf
subl
adc
add
pop
or
inc
xor
adc
je
fcmovbe
push
lock
insl
push
mov
test
cwtl
sbb
rcrb
adc
decl
lock
xor
inc
pop
xor
popa
lcall
pusha
add
add
mov
cmp
mov
pop
push
xor
jge
cwtl
clc
add
add
arpl
push
adcb
add
cmp
add
rolb
push
xchg
xor
jns
loop
sub
or
jl
pusha
or
inc
call
adc
pushw
jae
jle
jl
add
mov
lods
mov
or
pop
mov
adc
add
and
cli
mov
sbb
and
sub
je
dec
mov
xchg
mov
es
xchg
outsb
inc
dec
mov
mov
mov
in
adc
mov
push
sbb
sbb
je
andb
inc
xchg
add
jne
sub
inc
loop
loopne
jl
adc
mov
idivb
fdivrl
push
mov
add
add
adc
cmpsl
jo
push
add
outsl
mov
and
inc
and
push
xor
add
mov
in
pop
rclb
fsubrl
mov
aam
out
sbb
sti
push
mov
push
sarl
rolb
or
pop
push
shl
test
nop
push
push
and
or
popa
es
adcl
xchg
or
xorb
xor
mov
push
mov
and
test
add
sub
push
mov
outsl
push
testb
jns
jns
lods
adc
scas
repnz
inc
xor
push
mov
in
push
mov
cmpsb
xchg
adc
fsubr
mov
pusha
mov
test
cli
mov
push
push
shll
adc
or
incl
mov
and
push
mov
fdivs
mov
jp
mov
add
mov
jmp
subb
adc
and
jg
andl
inc
or
push
adc
mov
mov
stos
hlt
aam
add
lcall
fidivl
inc
and
mov
cld
loopne
je
jp
mov
lea
es
sbbb
jl
xor
or
test
add
nop
push
cli
xchg
mov
loop
mov
dec
mov
arpl
andb
pop
cmp
mov
cli
pop
add
lock
push
nop
pop
and
popa
xchg
addb
add
divl
add
or
or
push
pop
ret
xlat
mov
adc
mov
mov
jmp
mov
jo
into
adc
fidivl
mov
into
mov
aas
mov
mov
aam
inc
sbb
push
xor
push
inc
dec
cld
or
or
lret
or
mov
pop
popa
xor
mov
xor
scas
sbbl
sahf
add
xchg
orb
mov
mov
xchg
sbb
lock
pop
insb
sub
addl
xchg
fidivrs
imul
xchg
add
xchg
add
mov
mov
sbb
ds
add
ja
adc
test
push
mull
push
pusha
mov
lock
xor
xchg
lcall
add
jno
call
mov
and
lahf
mov
push
aas
or
inc
loope
sub
movsb
push
cli
rorb
loopne
xchg
clc
or
rolb
sbb
and
scas
add
inc
xorl
and
cmp
int
test
adc
push
loopne
fmull
and
dec
jg
pop
jo
sub
dec
and
add
movsb
ljmp
inc
pop
mov
rorb
push
ud0
lock
adc
cmpsb
push
loope
loop
add
loope
fildll
shlb
mov
jge
sbb
or
mov
shrb
shlb
aas
scas
xchg
add
xchg
xchg
call
jnp
add
or
push
pop
adc
popa
mov
fcmovbe
fmull
mov
mov
rclb
pop
fbld
sbb
inc
jecxz
in
adcb
push
inc
rcrb
add
and
popa
andb
imul
add
xchg
and
and
mov
mov
movsbl
add
test
or
add
jge
mov
cld
and
mov
test
cld
shlb
or
add
aam
xor
cmp
test
loop
push
adc
add
mov
fbstp
pop
jg
add
nop
add
fdivrs
lcall
xor
scas
adc
mov
add
adcb
sub
in
inc
add
push
lahf
xchg
imulb
addb
filds
faddl
jo
push
aaa
sbb
add
pop
and
push
adc
not
xchg
ljmp
ficoms
push
push
cmp
pop
in
push
push
pop
inc
push
jg
lahf
scas
xlat
pusha
insl
movb
bound
bound
dec
jl
inc
dec
lds
scas
cmp
mov
add
dec
add
pop
and
adc
push
adc
adc
cmpsl
or
mov
add
jnp
lock
and
pop
aad
jne
data16
jg
dec
scas
js
jle
fisubrl
inc
jae
pusha
push
arpl
fnstenv
roll
cld
push
les
test
mov
add
xor
adc
add
pop
adc
in
add
add
mov
mov
shll
sbb
andps
les
adc
fildl
in
xchg
mov
sbb
or
adc
aas
add
filds
popf
test
fstpt
adc
jo
cmp
or
inc
pop
les
mov
shrb
pop
popf
add
cwtl
xchg
stos
jns
insb
and
lods
pop
pop
fsubrl
mov
scas
jl
add
andps
add
addl
sub
jecxz
ja
or
pushf
popl
lcall
mov
add
fadds
les
dec
dec
stos
mov
xor
fidivl
test
mov
add
jbe
or
dec
add
dec
js
test
cmc
add
mov
or
add
sbb
ret
xchg
hlt
orl
rcrb
clc
pop
stos
out
push
mov
xor
fs
rclb
test
sbb
orb
xchg
mov
test
add
push
dec
adc
jle
mov
xchg
aam
andb
nop
and
push
fs
inc
and
les
lret
jecxz
sub
lret
test
inc
sti
cwtl
lock
ficompl
es
pop
pop
and
nop
cmp
loopne
add
xchg
ljmp
cmp
xchg
pop
jo
mov
fs
aam
sbb
aam
add
popl
xchg
xor
add
push
dec
adc
add
rolb
push
xor
test
mov
fcoms
add
clc
ljmp
xor
add
jb
mov
rcl
mov
mov
mov
popf
cwtl
clc
rorl
inc
testb
jle
cli
into
nop
test
mov
or
stos
push
lock
or
sbb
mov
cmpl
fcompl
or
dec
int3
mov
imul
push
je
add
insb
mov
or
pusha
stos
inc
loopne
aam
sbb
btcl
pusha
cmpsb
lcall
push
lcall
adc
dec
and
clc
mov
mov
adc
shlb
pusha
clc
shrb
mov
enter
ret
pop
cmp
sub
jecxz
lea
je
dec
mov
clc
bound
and
test
add
das
or
mov
jb
mov
add
lahf
movsb
mov
ja
adc
push
jg
mov
mov
hlt
rcl
inc
mov
pop
or
inc
cltd
rolb
sub
xor
aam
aaa
mov
lods
and
mov
push
sub
or
dec
cmpb
and
pusha
push
xchg
stos
call
cmp
addl
shlb
fdivrl
mov
inc
xchg
pop
mov
ljmp
sub
cmp
mov
adc
rorb
push
jbe
and
jp
je
rcll
and
ret
std
push
mov
sarb
push
repnz
add
pop
shlb
or
inc
nop
add
xchg
ret
or
pop
or
orb
loope
inc
mov
mov
ljmp
pusha
add
mov
sub
movsb
xor
and
adc
adc
je
adc
add
clc
xor
addl
pop
in
mov
mulb
sbb
rcrb
mov
dec
jb
and
push
mov
dec
insl
loopne
fs
shll
lock
add
aas
cmp
add
add
adcb
push
adc
pop
dec
aaa
and
gs
sub
inc
jnp
je
dec
fmuls
or
add
sbbb
push
ret
and
add
decl
adc
or
jae
ret
icebp
decl
test
mov
call
scas
mov
push
jmp
push
inc
mov
push
aaa
dec
mov
push
fisttps
sti
in
mov
pushf
inc
inc
mov
dec
xchg
subb
popa
stos
cli
sub
pushf
cmp
add
push
lock
pop
jo
push
in
es
mov
push
mov
sub
ss
lods
mov
shlb
pop
or
ds
pop
mov
push
jno
shrl
loop
xchg
loope
repnz
sbb
and
clc
adc
xor
adc
mov
icebp
inc
mov
movsb
cs
test
ljmp
pusha
or
and
ds
jb
or
aas
jecxz
inc
add
loopne
pusha
add
sub
imul
mov
sbb
inc
cwtl
lret
fwait
imul
jo
add
push
std
aaa
add
mov
int3
push
lea
mov
dec
cmp
roll
fbstp
cmpsl
nop
bound
sub
ret
sar
aam
loopne
lahf
and
pusha
mov
mov
movsb
add
or
or
cmp
sbb
pushl
xor
inc
pusha
fwait
pop
fcmovu
and
add
mov
hlt
insb
bound
cwtl
mov
daa
and
inc
lea
add
test
loope,pn
cld
pop
pop
loope
and
outsb
mov
or
aas
addr16
lock
pop
jg
add
or
jle
adcb
or
fiadds
and
cmp
xor
push
dec
and
in
inc
call
loop
and
pusha
push
movsb
int3
inc
mov
testb
and
mov
pop
push
xchg
and
das
jbe
ret
pusha
test
mov
pusha
push
or
mov
add
pop
movsl
mov
cwtl
repnz
aad
loope
and
mov
jg
mov
or
sbb
mov
add
sbb
add
stos
aaa
dec
js
push
roll
pusha
and
mov
loopne
or
pop
sub
ret
and
push
push
pop
roll
fcoml
hlt
pop
adc
add
dec
push
into
mov
inc
pusha
ret
or
mov
pop
test
fcmovbe
xor
push
stos
xchg
roll
push
or
incl
rep
and
lock
jmp
or
icebp
dec
ret
and
jg
cmp
or
or
int3
jno
jl
aas
ja
std
fwait
push
xor
adc
inc
and
shrb
cmp
sbb
add
cmp
in
lods
lcall
push
add
dec
and
pop
jl
mov
pop
pop
xchg
adc
test
pop
inc
push
push
push
jg
ret
add
jle
aas
adc
xchg
test
xor
sub
mov
mov
add
push
mov
cmpsl
and
dec
ret
xor
jg
pop
mov
sub
mov
out
add
and
or
or
add
jmp
dec
pop
mov
or
push
jecxz
aaa
ret
outsl
push
fdiv
dec
movsb
cmovne
jo
je
add
mov
xor
mov
push
and
adc
sub
inc
add
and
dec
shll
in
push
xchg
outsb
fidivrl
push
js
mov
add
add
lcall
mov
xor
lahf
mov
mov
jl
inc
xor
or
ja
filds
push
stos
popa
nop
adc
jno
fsubl
pop
call
sbb
nop
adc
and
push
pop
mov
and
mov
je
mov
dec
rcrl
shll
cmp
adc
add
sbb
xor
mov
aaa
addl
push
scas
mov
pop
push
add
cmp
jo
popa
inc
cmpsl
and
push
mov
test
int
mov
mov
inc
dec
cld
pushl
mov
jo
add
rolb
ljmp
aad
jmp
xlat
adcl
push
bound
add
aas
mov
push
mov
xor
in
dec
adc
mov
add
ja
pop
pop
mov
add
add
pop
lock
outsb
fsubrl
cmp
ss
add
cmp
cli
lea
pushf
pop
add
lahf
ljmp
nop
dec
and
mov
sub
aas
imul
xor
add
jb
pusha
xchg
inc
mov
cmpsl
call
hlt
test
pusha
cmp
js
or
mov
loop
popf
push
sub
mov
push
add
inc
xor
push
inc
leave
or
iret
inc
jo
rorb
or
and
xchg
xchg
inc
sti
outsl
out
insl
adc
dec
push
xchg
inc
test
pop
addl
sbb
xor
mov
xchg
inc
sbb
push
jns
xorb
inc
dec
test
mov
lret
jp
dec
adc
adc
ljmp
sbbb
ficoml
ret
rcr
mov
push
clc
mov
jge
and
popa
xor
sbb
jge
les
or
xchg
pop
inc
cmp
and
mov
lock
dec
and
jbe
add
push
pop
add
mov
aas
rolb
inc
push
or
ret
inc
addr16
mov
adc
lock
fcoml
mov
xor
mov
lock
adc
div
xlat
ret
add
adc
inc
mov
mov
cmpsb
and
push
adc
dec
and
adc
mov
mov
or
fwait
gs
daa
push
jo
mov
rorb
test
mov
jnp
ljmp
dec
cld
outsb
inc
push
jge
or
sbb
stos
sub
mov
or
dec
cmpsb
add
cltd
bound
adc
jmp
loopne
adc
and
push
and
add
sarb
sub
and
shlb
pusha
std
add
push
and
add
mov
mov
push
mov
cld
or
xchg
mov
mov
xchg
gs
adc
jl
clc
pop
test
jns
add
mov
testb
rcrb
jbe
mov
mov
jl
orb
jle
mov
rolb
mov
into
je
or
icebp
inc
out
adc
cmc
pop
cld
pushl
mov
das
mov
ret
sub
loopne
adc
test
js
cmp
xchg
mov
push
mov
pop
and
push
xor
cld
or
mov
mov
mov
inc
adc
pop
push
pop
sarb
and
mov
ja
mov
in
cs
mov
mov
mov
mov
lods
adc
lock
or
cld
nop
orb
lods
add
inc
stos
push
clc
jg
hlt
jecxz
and
sti
inc
add
inc
dec
mov
inc
push
sbb
loopne
jle
and
adc
cs
jbe
sub
lds
adc
in
dec
mov
lock
gs
cmp
dec
out
enter
or
mov
sub
pop
loopne
pop
mov
or
es
cmp
push
aas
mov
push
std
jmp
push
add
dec
mov
loop
push
or
fucomi
sub
jl
mov
adc
popl
test
and
stos
inc
hlt
push
out
loope
insb
adc
mov
push
dec
les
add
dec
xor
popa
pop
inc
adc
out
xor
int3
push
data16
mov
stos
mov
mov
mov
sbb
push
shr
ljmp
stos
test
mov
insl
add
mov
stos
jno
push
push
mov
fnstsw
repnz
adc
cmpb
sbb
fsubl
add
mov
mov
adc
mov
in
dec
and
inc
add
out
ficomps
lea
sbb
add
pop
xor
cmp
xchg
or
sub
call
or
pop
cmp
push
dec
cwtl
int3
push
push
aaa
test
add
in
dec
aad
or
cli
dec
xchg
and
cs
sub
aas
add
mov
mov
or
push
mov
sub
push
and
add
mov
cwtl
insl
pop
dec
add
out
push
jl
nop
mov
andl
andb
aaa
rolb
inc
cmpsb
fidivl
inc
adc
fwait
adcb
or
jb
add
pop
addr16
push
mov
cs
and
jmp
pop
fisttpl
in
addb
inc
and
aaa
les
mov
lcall
fbstp
xchg
xlat
sbb
jns
call
jl
add
das
add
add
xlat
mov
pop
cmp
jno
add
std
push
push
add
and
addb
sbbl
movsb
xor
mov
lods
jae
mov
test
inc
push
sbb
hlt
loopne
pushf
sbb
jo
push
aas
mov
aam
loopne
sub
fmull
jb
fwait
add
mov
cli
sub
xor
push
movl
stos
mov
add
adc
push
testb
outsl
inc
xchg
inc
or
sub
xor
outsl
out
js
rcll
pop
ss
aas
push
push
lds
dec
inc
push
mov
pushl
inc
push
test
rolb
or
fadds
lahf
add
add
mov
push
mov
cmpsl
not
cltd
inc
movsb
adc
into
sbb
loope
and
push
lea
push
add
mov
sub
mov
jp
and
cmp
pop
or
push
dec
rorb
and
insb
jo
or
call
add
lret
rolb
ret
pop
outsb
fildll
xor
sub
scas
push
ljmp
sahf
pop
add
push
and
dec
adc
cmp
and
movsb
loop
add
add
xorb
mov
shlb
cmpsb
mov
dec
cmp
mov
fiaddl
loop
xchg
lea
inc
jbe
orb
cs
pop
dec
jecxz
faddl
outsb
ret
add
rclb
xchg
gs
inc
add
adcb
mov
out
test
shll
shlb
xchg
add
xchg
rcrb
test
adcb
aas
divl
xchg
data16
add
pusha
lea
sbb
inc
dec
and
push
and
jne
push
lods
pushl
jmp
cltd
and
push
xchg
loopne
pop
inc
xor
inc
mov
mov
cmp
dec
push
loope
pop
ja
add
mov
cmp
ljmp
inc
sbb
xorb
xchg
dec
sub
add
mov
ss
je
loope
cmpsl
push
subb
inc
call
push
rolb
or
or
pop
test
add
xor
rclb
push
add
roll
cmpsl
stos
xor
or
out
add
pop
pusha
push
pop
mov
inc
and
cmpb
andb
or
adc
or
xor
ljmp
ljmp
xor
pop
and
nop
adc
rcrb
and
and
orl
inc
cmpsb
repz
aas
inc
mov
mov
pusha
add
pop
mov
adc
test
outsb
add
adc
nop
ret
pop
cs
fwait
cmp
or
jg
sbb
adc
rol
xchg
faddl
sbb
loopne
and
push
and
or
mov
push
or
and
cmp
and
push
mov
push
mov
mov
das
rorb
and
push
mov
mov
mov
push
inc
or
cmp
or
and
sbb
mov
mov
out
outsl
addb
push
cmpsl
seto
loopne
mov
pop
jbe
mov
scas
adc
dec
xchg
addl
repnz
adc
or
mov
and
lahf
mov
sbb
daa
rcrl
data16
pop
roll
lahf
jge
and
ljmp
sbb
adc
adc
bound
fiadds
pop
in
or
cmp
mov
shll
fisubl
jge
lods
and
test
inc
or
out
pusha
adc
cmp
or
out
jb
mov
lods
dec
or
outsb
mov
loop
add
ret
add
mov
ljmp
inc
sbb
adc
adc
cli
shr
mov
andb
aad
test
and
add
sarl
sahf
xchg
cmp
xor
push
es
add
push
call
mov
rorl
inc
pop
inc
push
orl
push
sbb
orb
pop
addr16
fcompl
test
arpl
jp
mov
and
cmp
add
push
mov
fwait
xor
and
pop
xchg
inc
subl
add
dec
mov
mov
dec
shlb
mov
adc
test
adc
sbb
hlt
jg
fiaddl
adc
adc
mov
rol
push
pop
jmp
xchg
or
mov
cwtl
adcb
and
loope
add
cmp
aaa
ss
add
or
pop
mov
push
mov
fists
add
add
js
outsl
add
in
lds
adc
aaa
frndint
or
inc
mov
ret
push
push
xor
or
ror
add
out
pop
xchg
aam
jge
ja
or
pusha
push
insl
jl
in
inc
xor
cmc
scas
ss
add
inc
add
sub
mov
mov
loope
pop
push
mov
jne
xchg
and
cs
mov
rolb
mov
outsl
pusha
push
mov
xchg
mov
movsb
push
xchg
pop
inc
xchg
push
pop
lods
or
in
add
add
sub
es
or
ret
jmp
fsubrp
mov
add
popa
ss
or
fbld
ja
jb
fisubl
pop
jbe
pop
xlat
les
cld
in
push
cmp
push
mov
adc
xchg
pop
xor
rorb
and
cmp
sbb
lcall
daa
push
insb
nop
adc
or
jno
inc
lds
push
mov
add
adc
mov
inc
bound
inc
das
push
cmp
mov
test
std
mov
push
and
and
popa
pushf
rorb
add
sbb
and
cwtl
inc
ljmp
loopne
icebp
inc
popa
aas
cmpsl
xchg
movsb
xchg
decl
ret
xor
stc
pop
xor
adc
mov
mov
xchg
sub
lods
loopne
fs
add
add
add
aas
scas
call
mov
add
jb
sar
std
sahf
nop
cmp
pop
ret
mov
aas
aad
loop
inc
adc
sahf
push
push
sub
aam
pop
cmp
in
repnz
rorb
cmp
rolb
push
xor
cli
fistps
fistps
mov
cmp
add
mov
push
out
jmp
and
aaa
pop
add
mov
nop
add
adc
je
scas
addl
push
or
call
das
cld
out
inc
roll
ret
out
aad
in
adc
out
aam
or
pop
repnz
lret
xchg
out
rcll
mov
jg
out
movsb
movsb
outsl
adc
loopne
adc
mov
push
pmulhw
nop
or
cmp
jmp
cmp
sbbl
sub
xlat
lds
mov
add
lret
mov
jg
push
cs
aas
and
shlb
lods
adc
and
cmp
cmp
ljmp
or
cmp
in
mov
fs
in
out
mov
imul
sbb
fcomps
and
clc
push
enter
dec
cmp
and
clc
or
push
cmp
and
mov
mov
inc
lcall
pop
fiaddl
mov
pop
fs
mov
adc
dec
and
mov
and
or
and
icebp
pop
or
cli
mov
test
push
mov
xor
decl
movsl
movsl
cmp
loop
jle
shlb
or
and
out
shl
in
jo
shrb
cmp
test
pop
in
out
out
push
push
xlat
mov
cmp
dec
rcll
push
cmp
adc
add
subb
sbb
stos
pop
rol
pushl
add
and
popa
dec
mov
loop
pusha
adc
or
loope
icebp
icebp
add
mov
ret
fldl
add
insb
pushf
mov
add
lds
mov
mov
jb
inc
inc
mov
xchg
inc
mov
inc
fsubl
ljmp
add
xor
mov
pushl
std
xor
push
dec
inc
dec
scas
mov
add
int3
mov
aaa
rclb
or
incl
ret
rolb
xor
cltd
cmpb
mov
insb
loopne
and
rorl
and
loop
movsb
jmp
fcomi
or
jle
das
push
adc
add
adc
adc
ljmp
dec
shl
adc
adc
fsub
add
aaa
jne
clc
test
inc
cmpsl
dec
cld
add
and
in
jp
xor
or
inc
jl
stos
mov
xchg
loope
fcmovb
js
iret
push
push
add
mov
xor
push
jns
inc
pop
push
addl
fucomip
subps
push
mov
inc
add
inc
jns
add
mov
shll
jb
sub
pop
mov
dec
ljmp
or
ficoml
int
sti
jg
out
mov
roll
sbb
add
out
fmuls
mov
fs
je
outsl
push
sub
adc
mov
ss
inc
pop
stos
inc
addl
andb
or
or
andb
inc
inc
xchg
sbb
or
out
dec
outsl
sbb
jb
xchg
add
js
pop
dec
std
sbb
je
add
ja
cli
mov
rcll
pop
cmp
or
mov
pop
or
xchg
dec
add
pop
or
js
pop
push
cmp
pop
cmp
mov
add
mov
call
mov
or
pop
add
inc
add
add
push
mov
add
ficoml
mov
add
das
cmp
test
dec
pop
lret
and
dec
rol
test
call
cmp
sbb
pop
cmp
dec
ret
jl
movsl
add
stc
mov
fildl
out
xorl
out
les
cli
inc
adc
push
add
push
add
xor
adc
or
cli
inc
aam
shlb
xlat
dec
push
or
add
adc
es
rclb
subb
inc
mov
add
inc
mov
inc
sub
cmc
rolb
lahf
add
inc
aas
lret
ret
subl
inc
sub
mov
jno
add
imul
xor
ret
cmpsb
xor
sbb
cmp
loopne
add
add
push
xor
jbe
adc
or
sbb
mov
test
enter
or
and
cmp
mov
lods
adc
push
add
das
cld
or
push
or
jae
es
je
inc
mov
jecxz
inc
pop
inc
inc
hlt
cmp
shrb
roll
incb
pop
pusha
push
pop
data16
jl
pop
out
subb
ja
jo
ds
ja
fildl
xchg
orl
orb
mov
test
test
sub
pop
inc
bound
mov
out
push
push
aas
aam
inc
or
jbe
xchg
mov
sbb
adc
scas
and
dec
es
outsb
stos
ffree
sub
fcompl
adc
add
cli
push
sbb
xor
jae
add
inc
push
std
or
mov
mov
or
mov
or
add
or
mov
fsubrl
stos
sub
test
outsb
xor
in
orb
into
add
mov
add
jmp
mov
dec
addb
push
fs
divl
mov
mov
jae
mov
pop
inc
sbb
popl
mov
inc
and
int3
adc
or
push
push
scas
push
push
icebp
add
inc
jnp
xlat
sbb
xor
outsb
addr16
sbb
inc
faddl
scas
aam
and
dec
ljmp
andb
adc
and
add
cli
dec
mov
test
sbbb
rorb
pop
nop
les
pusha
push
sub
rcl
push
adc
jae
roll
scas
out
mov
test
sub
mov
mov
jo
sub
loopne
ja
jo
push
inc
cmpsb
jo
add
adc
inc
mov
jge
mov
adcb
sbb
fwait
out
mov
pop
pusha
xor
dec
dec
cmp
jle
test
sbb
andb
addb
pop
pop
lea
mov
adc
out
lret
inc
push
jbe
push
adc
dec
fwait
adc
sbb
fs
jbe
shrb
addr16
inc
jnp
nop
test
andb
rcrb
jmp
xchg
dec
ljmp
jp
push
or
subb
mov
jl
subl
imul
push
push
bound
mov
push
mov
ss
rorb
mov
fstp
push
pusha
add
orb
ret
ret
nop
mov
mov
add
dec
ljmp
pusha
add
xor
inc
adc
adc
roll
pop
jo
sbb
jnp
xchg
adc
mov
sbb
xor
movb
shlb
outsb
shrl
or
xchg
leave
mov
cltd
loop
and
out
enter
jne
out
add
shl
add
fwait
jecxz
lods
loopne
xor
mov
mov
lahf
add
shrl
and
sub
out
testb
cmc
adc
movsb
mov
push
adc
shrb
std
mov
add
pop
aam
imul
rcrb
cli
loopne
xlat
test
testb
rolb
or
dec
fildll
pop
push
adc
mov
inc
pusha
ss
fcmovbe
sbb
in
ljmp
stos
adc
loopne
adcb
rcll
and
or
cmp
dec
lods
and
cld
jg
add
dec
or
imul
ficompl
orb
sub
popl
and
add
cs
cs
ljmp
dec
loop
pop
clc
adc
rcrl
loope
aam
imul
or
cs
sbb
jg
inc
xorb
mov
fcomi
pop
out
add
pusha
out
push
aam
sub
push
cmp
and
fstl
mov
or
pop
add
sbb
pop
xchg
push
aas
inc
sub
lcall
stos
push
addb
adc
add
cmp
sbb
push
mov
ljmp
push
push
pop
test
sub
adc
and
xchg
inc
lahf
clc
pushl
pop
pop
popa
push
sub
jb
jnp
jl
xchg
fmull
call
add
pop
sahf
cmpb
stos
push
add
or
or
dec
or
or
pop
inc
mov
mov
shl
adc
fst
mov
loope
pusha
mov
icebp
sub
push
or
push
xor
push
inc
xor
jbe
pop
imul
fiaddl
add
add
gs
rorl
xor
jp
ljmp
movsb
inc
in
inc
test
stos
insb
pop
or
arpl
fisttps
xor
push
xchg
nop
insb
mov
dec
dec
push
xor
aas
ja
outsl
mov
mov
add
mov
incb
popl
xchg
repnz
outsl
mov
sbb
or
xor
xlat
mov
cld
dec
nop
xor
xor
sbb
lcall
loop
and
or
fcmovnb
add
adc
push
adc
push
sbb
ret
out
popf
xchg
add
jg
and
and
inc
pop
lock
cmp
dec
cld
adc
jbe
pop
jo
aaa
andb
outsl
pop
mov
jno
mov
or
push
shrl
ljmp
testl
add
cmp
and
push
mov
push
jmp
jmp
and
sub
adc
cld
outsl
fsubrs
push
test
pop
sbb
ficoml
rolb
pop
subb
xor
xor
mov
and
mov
roll
xchg
fwait
ret
and
pop
and
mov
inc
sti
in
loope
lahf
sbbb
push
adc
cmpsl
stos
mov
push
int3
mov
xor
xor
mov
das
or
lds
fdivr
fsubrs
add
xorl
sbb
mov
mov
dec
and
or
jmp
fldenv
inc
rorl
push
or
and
in
xchg
ret
subb
xchg
mov
ljmp
sub
jo
pop
out
mov
popa
push
and
push
add
xchg
xchg
push
addr16
or
push
jecxz
cli
dec
jmp
or
incb
or
xchg
shll
sbb
and
lods
hlt
xchg
add
sub
orb
push
js
ljmp
adc
test
sbb
mov
mov
loop
inc
sti
andl
stc
pop
inc
sub
xor
testl
lds
xor
clc
push
outsb
mov
xchg
dec
and
sub
fsubrl
ja
rorb
and
lock
inc
jg
mov
or
arpl
out
cmp
inc
scas
imul
stos
mov
aaa
movsb
push
and
inc
push
test
mov
ja
adc
add
ret
xor
test
xchg
push
dec
es
push
dec
xor
xor
addb
pop
fisubrs
and
test
push
outsl
adc
rclb
pop
add
sub
lea
xchg
mov
add
inc
add
aam
xchg
push
sahf
dec
push
fiadds
or
fistpll
imul
fstl
push
imul
push
adc
and
fwait
and
adc
sbb
rclb
cmp
movsb
test
xchg
nop
outsl
mov
loope
sub
push
pop
fisubs
cwtl
inc
xchg
rclb
decb
add
add
sub
cmp
fildll
rclb
arpl
pop
xlat
imul
and
sahf
cmp
rcll
pop
lcall
and
lock
push
jae
les
jp
push
sbb
scas
mov
adc
test
mov
sbb
nop
fistl
lea
mov
push
test
sbb
mov
test
movsb
pop
std
pushl
cmc
rcrl
rcll
fiadds
xchg
lahf
out
cli
out
pop
sahf
and
xchg
nop
add
pop
sbbb
adc
pop
sub
cli
xchg
push
adc
and
and
or
ljmp
in
andb
mov
mov
fs
xchg
pusha
or
imul
lcall
xchg
shlb
andb
pop
mov
pop
xchg
mov
movsb
loop
and
in
pop
xor
in
sahf
int
outsb
push
dec
adc
add
jmp
jmp
loop
clc
fildll
cmc
scas
sub
jp
lock
sub
insl
rolb
cmpsl
pop
pop
adc
mov
mov
mov
jg
sub
push
pop
push
mov
out
mov
mov
add
pop
cmp
sbb
or
ror
push
stos
shr
add
pusha
pop
rclb
int3
sub
mov
push
adc
fidivrs
data16
jbe
cmp
xor
jle
adcb
lahf
or
xchg
mov
test
pop
adc
xchg
cli
push
adc
iret
es
and
addb
les
test
scas
mov
dec
mov
jbe
jl
insw
loopne
outsl
cmp
scas
stos
sbbb
pop
or
mov
dec
in
test
push
imul
adc
shr
loopne
movb
aas
pushf
add
out
inc
aam
jl
int3
add
or
jo
xchg
add
dec
mov
add
jne
xor
sbb
js
add
or
sub
or
mov
or
mov
fucomi
test
out
or
out
roll
insb
outsl
cmpb
out
pop
mov
mov
cmp
cld
orb
ds
jbe
out
pop
stos
cmpsb
stc
int
fnstenv
andl
out
addb
sti
out
int
icebp
cmc
out
div
jo
repz
and
and
lahf
aaa
pop
jnp
out
mov
mov
sti
out
cmovae
out
mov
cmp
xchg
xchg
inc
lret
out
ja
or
test
scas
mov
lcall
fs
out
in
mov
inc
fldenv
fiadds
out
or
fwait
inc
loopne
xor
adc
push
mov
or
push
lahf
es
cs
out
inc
mov
or
fwait
out
jge
or
mov
sub
divb
fldenv
mov
sub
pop
shll
lea
push
adc
out
push
inc
inc
mov
cmp
mov
out
outsl
popa
mov
stos
sbb
mov
out
popf
jmp
or
out
push
adc
push
fwait
out
add
push
scas
mov
xor
xchg
es
mov
mov
lods
imul
fcoms
mov
aas
push
out
ret
out
inc
dec
cmp
fsubs
sti
loope
push
pop
cmp
xchg
pop
dec
sbb
or
sar
mov
out
lret
inc
add
out
leave
in
inc
inc
mov
cmpsb
insl
inc
sti
testb
pop
adc
cmp
sub
inc
loop
dec
mov
xchg
cmpsb
add
lahf
xorb
sbb
push
roll
jne
insl
outsb
xor
inc
xchg
fidivrl
push
jno
popl
push
adc
push
sarl
ss
xchg
in
add
or
arpl
rorb
insl
rcr
imul
int3
and
gs
adc
ljmp
push
add
and
mov
filds
rcr
xchg
rclb
out
sbb
add
adc
add
out
insl
push
loop
push
movb
push
mov
ret
cmp
out
xchg
bound
pusha
xchg
into
orl
in
or
jae
and
out
push
addb
pusha
pop
ret
and
pop
call
pusha
aaa
jo
lds
lret
xor
stc
imul
fildll
out
sub
insl
pusha
or
out
push
inc
xchg
lods
loope
mov
or
xchg
into
arpl
adc
mov
and
rcrb
jo
in
lea
sub
rorb
mov
push
jg
push
ficoml
and
fcmovu
fildl
xchg
rcl
and
mov
xor
sub
add
add
test
xchg
sub
fiaddl
xchg
fs
xor
add
xor
adcb
inc
and
jle
xchg
add
rclb
cmp
or
out
add
xor
call
xchg
ficoms
hlt
pop
cs
mov
mov
je
ficoml
pushf
test
pop
push
pop
push
sahf
fdivl
add
leave
and
push
lcall
xor
orb
cmp
roll
shrb
ret
mov
sub
push
bound
lods
mov
rorb
mov
push
mov
sbbb
mov
add
ret
hlt
enter
adc
lock
and
add
xchg
pop
test
push
dec
add
out
incb
jo
lock
add
pop
pusha
mov
cmc
jg
mov
cltd
sub
fisubl
bound
in
add
mov
daa
pusha
add
shll
sbb
ret
add
ret
add
inc
xor
push
xor
push
fwait
and
xchg
push
mov
jmp
mov
mov
popa
push
inc
mov
pop
add
xor
mov
or
dec
add
nop
mov
mov
out
ljmp
adc
mov
out
or
faddl
inc
test
rolb
add
out
sub
insb
and
push
daa
jo
sub
xchg
mov
ret
shl
xor
rclb
xor
push
shr
je
add
loop
cmpb
fbld
cmpsl
mov
pop
inc
mov
pop
lock
or
push
inc
fisubs
bound
addl
jae
add
and
adc
mov
icebp
jo
not
add
aaa
xor
rolb
sub
adc
dec
adc
or
sub
inc
dec
clc
test
mov
ds
mov
imul
push
cs
ss
mov
pusha
out
xchg
js
aam
or
mov
roll
mov
mov
jbe
xchg
adc
xchg
dec
lods
or
lods
push
cltd
pop
lods
sub
and
sti
lret
dec
test
pushf
ret
push
mov
add
mulb
ljmp
scas
push
inc
xlat
mov
mov
lock
lahf
mov
lods
loope
nop
mov
dec
sbb
sti
push
add
lock
dec
jp
aam
xchg
clc
or
mov
or
pushf
push
xchg
mov
xor
dec
inc
pop
aas
lahf
add
push
dec
cmp
or
cmp
lock
dec
mov
fs
xchg
mov
leave
mov
xor
insl
or
mov
rolb
daa
cmpb
mov
push
addr16
mov
pop
push
lahf
and
jb
inc
adc
sbb
mov
mov
ss
or
add
subb
in
inc
and
inc
ja
pop
jg
or
adc
pop
pop
mov
push
cmc
repz
pop
push
sub
adc
adc
sbb
imulb
jno
inc
push
and
or
push
push
and
inc
adc
cmpsb
mov
inc
or
pop
addb
cld
push
sub
aaa
daa
sbbb
pop
loopne
xor
jbe
shrb
and
in
adc
popf
add
add
inc
sete
xchg
scas
fdiv
movl
and
aam
mov
xor
movups
out
fwait
xchg
fmuls
data16
in
jo
cmp
mov
push
cli
adc
push
in
mov
xchg
add
push
rolb
sub
or
and
push
add
dec
pop
shl
push
mov
add
pop
or
fldl
xchg
add
out
int3
jb
mov
rclb
fstpl
push
push
add
insb
nop
add
sbb
jp
add
push
mov
lods
sbb
dec
lods
push
daa
pop
inc
cmpsl
mov
push
add
adc
lock
aam
rcll
aam
hlt
and
mulb
mov
add
pop
mov
add
test
stos
mov
fisubs
push
test
xor
xchg
mov
xor
adc
or
rolb
add
aam
xor
loop
or
lods
in
adc
sbb
or
add
push
cld
fs
cmpsl
cmp
mov
mov
scas
and
pop
mov
inc
sub
sbbb
ja
rolb
add
loop
loope
sub
add
inc
sub
pop
mov
inc
mov
adc
nop
xor
push
dec
loopne
test
push
addb
es
xor
mov
mov
shlb
or
push
shlb
cmp
cmp
and
jne
mov
icebp
nop
xor
sbb
and
js
pop
data16
pop
pop
dec
inc
add
or
test
add
inc
inc
repz
aaa
fcoml
adc
inc
out
mov
adc
outsl
xchg
add
bound
or
lock
sarb
sarl
loopne
fsubl
and
mov
repz
push
add
and
dec
aam
mov
pop
add
ret
cmp
fidivrl
nop
add
or
adc
loop
add
sbb
je
pusha
sub
mov
jno
cwtl
xlat
push
add
jbe
loop
mov
pop
pop
outsb
test
pusha
sub
mov
xor
pop
rol
inc
or
loope
inc
adc
bound
cmc
push
push
push
bound
bound
add
adc
xchg
adc
or
rorb
lods
pop
dec
clc
jo
and
xor
or
out
add
test
sarb
inc
sbb
push
insl
aas
das
clc
mov
jns
add
and
jecxz
inc
je
pop
pop
popa
add
arpl
inc
push
sbb
icebp
xchg
and
and
in
outsl
jmp
pop
pop
push
hlt
dec
mov
xchg
push
pushf
jnp
addb
jbe
or
rorl
or
repnz
ljmp
adc
rolb
jge
adc
xor
loopne
in
cli
sub
hlt
aam
sub
lidtl
clc
and
dec
cmp
adc
or
add
add
pusha
adcb
sub
xor
scas
movsb
xor
xchg
adc
shrb
lcall
lock
out
push
jo
add
mov
or
sub
mov
dec
adc
pop
jbe
clc
lcall
in
shrb
push
adc
mov
pop
mov
rolb
adc
push
inc
jl
aas
add
inc
icebp
or
pop
lods
sahf
xorb
add
mov
inc
iret
add
sbb
dec
je
add
inc
dec
into
rclb
das
pop
xchg
pop
mov
xor
mov
ret
or
mov
sti
incl
add
pop
addb
adc
cli
call
bound
test
out
roll
rol
fbstp
xor
nop
imul
rol
pop
cli
aaa
mov
aas
add
jnp
jb
int3
mov
sahf
xor
or
mov
lock
stos
inc
push
adc
pop
mov
inc
dec
negl
push
push
push
jle
lock
add
stc
scas
push
pop
rorb
test
push
mov
or
sub
adc
mov
adc
xchg
add
shl
xchg
fsubrs
es
testb
xchg
sub
or
xchg
adc
movhlps
push
movsl
andb
addl
cmpsl
in
add
arpl
xchg
cmp
adc
stos
das
or
adc
push
data16
jl
cmp
xchg
add
mov
push
js
stos
addb
ret
mov
mov
aas
mov
push
call
aam
js
sarb
sub
pushf
scas
test
xchg
mov
mov
push
mov
leave
add
push
dec
and
mov
aas
pusha
dec
es
aam
push
std
pop
nop
mov
shl
add
add
add
xor
inc
pop
aas
sbb
sbb
add
inc
mov
and
outsl
adc
xor
mov
test
flds
shlb
mov
sar
sub
cmp
pop
in
pop
push
mov
ljmp
cmp
mov
in
sub
aas
loopne
or
cmp
mov
inc
and
mov
add
adc
push
and
push
mov
test
push
outsl
sbb
fdivl
daa
subl
and
nop
inc
dec
mov
insb
pop
xorb
dec
mov
pop
jle
fmul
scas
add
cli
or
faddl
scas
sahf
fsubrl
insb
inc
jmp
out
xor
pop
adc
and
dec
dec
add
mov
adc
pop
or
subb
sub
inc
and
insb
mov
roll
cmp
mov
jl
sbb
sub
mov
inc
cmp
cli
dec
ljmp
scas
inc
test
mov
add
cs
mov
and
mov
cmpsl
addb
xchg
fisubs
push
mov
clc
fs
sub
mov
mov
mov
test
cld
push
push
mov
add
push
aam
xor
jae
jge
popa
ret
mov
rcr
lcall
popf
loop
jb
add
sarl
push
adc
pop
loopne
insb
loopne
sbb
push
je
ret
ret
dec
call
and
add
push
ror
add
push
bound
rolb
mov
push
add
inc
or
fdivrl
inc
sub
xchg
pop
push
inc
push
pop
sbb
lea
pusha
jae
adc
scas
push
orl
aad
data16
mov
cli
inc
mov
rol
les
push
fistl
dec
stos
mov
and
add
aas
or
scas
adcb
cltd
adcb
lcall
jo
push
lahf
and
fsubrl
addb
jmp
cmpb
subb
sbb
or
addb
andl
shrb
ret
jle
push
lods
into
aas
push
aas
js
fbld
cld
aas
fwait
mov
rcrb
addb
nop
dec
add
push
push
sub
sbb
and
mul
add
or
and
shrb
ret
or
loopne
dec
push
mov
outsb
pusha
inc
data16
in
adc
or
rcl
aas
pusha
push
sbb
sbb
sub
add
push
or
add
fwait
pop
fidivl
cld
cmp
loope
mov
call
add
pusha
pop
in
inc
outsl
cmp
in
mov
and
pusha
or
mov
or
sbb
add
adc
or
and
ja
fildl
pop
or
add
xchg
ficoms
or
leave
cli
sbb
popa
add
or
test
add
filds
icebp
sub
sub
push
aam
pop
and
mov
mov
xchg
aaa
mov
add
pop
cmp
pop
or
rcrl
nop
scas
cli
cmpsb
jo
jl
pushf
adc
aad
dec
add
test
lods
or
and
and
popl
pushf
bound
mov
add
and
inc
loop
lahf
test
aaa
decl
mov
subl
subl
push
add
pusha
xchg
enter
ljmp
pusha
fcoml
mov
imul
or
pop
mov
and
push
or
mov
inc
xor
pushf
push
sbb
sarb
ss
cmp
mov
pop
mov
dec
insl
loop
test
in
imul
adc
sbb
pop
inc
pusha
pop
adc
ljmp
mov
aaa
xchg
or
add
mov
and
or
nop
out
lock
out
movsb
lret
push
push
inc
loope
push
xchg
test
and
popa
mov
sub
pop
xchg
dec
add
stos
add
adc
ss
xchg
hlt
pusha
sub
and
mov
sbb
es
arpl
dec
lcall
add
pop
loopne
daa
and
jecxz
push
pusha
add
cli
pop
pusha
sarb
pop
mov
loope
xor
dec
pusha
outsl
add
inc
or
dec
fldt
cld
aas
out
adc
xchg
adc
jl
pop
adc
ret
inc
aam
ja
and
mov
test
ja
jge
ja
or
push
adcl
adc
and
add
mov
adc
pop
orb
adc
adc
stos
sub
js
aaa
adc
and
rcrb
fwait
lods
inc
or
push
and
cmp
lock
or
adc
sbb
mov
mov
outsl
and
and
or
add
jg
mov
repnz
push
ret
fildl
movsl
fimull
inc
mov
or
adc
dec
fmull
addr16
imul
xchg
or
iret
insb
mov
jne
ficoml
push
sbb
bound
adc
inc
pop
mov
shrb
mov
shl
jg
inc
loopne
orb
sbb
insb
push
add
push
popf
push
push
popa
dec
lock
outsl
push
mov
mov
sub
shrb
adc
inc
aam
inc
mov
lods
pop
jno
je
cmp
shlb
xor
xchg
and
bound
mov
push
sub
js
mov
xor
mov
push
jo
lock
cmp
adc
push
or
mov
nop
cmp
mov
xchg
mov
sub
loopne
or
imul
bound
out
cmpsb
decl
xor
pop
rcrb
mov
test
jg
loopne
or
jo
pop
mov
sahf
add
cmp
ss
outsb
push
or
jecxz
sub
jno
inc
inc
or
or
mov
sub
movsb
lock
jnp
jae
incl
inc
xor
push
add
xor
xor
jg
push
notb
loopne
adc
sub
adc
xor
mov
cmpsb
inc
cli
fwait
push
sub
or
and
mov
and
xor
xchg
and
cmpsl
mov
jbe
sbb
rorb
inc
loop
dec
sub
rorb
out
subb
das
inc
sub
nop
jg
push
push
mov
adc
xchg
add
hlt
outsl
hlt
ljmpw
sub
dec
and
or
dec
fsubrs
lahf
adc
jg
shl
jb
or
pop
mov
and
stos
and
xchg
mov
sbb
mov
pop
mov
push
adc
test
adc
addl
daa
adc
cmc
scas
xor
adc
adc
adc
test
outsl
xor
dec
shlb
and
push
test
or
push
adc
xor
jp
push
call
inc
loope
pop
dec
or
mov
lcall
test
outsl
stos
or
lock
mov
je
cmpsb
lock
and
add
mov
jmp
test
pop
mov
test
rcll
mov
in
in
and
test
inc
clc
scas
cmpsb
mov
ficoml
sbb
nop
xor
mov
scas
mov
xor
inc
add
push
pop
cmp
lods
callw
aam
or
das
push
lock
dec
push
and
add
jnp
dec
or
jo
bound
sbbb
sbb
inc
cld
testl
insl
xchg
rolb
insb
adc
xor
popa
cmp
dec
pop
int3
nop
cmp
xchg
mov
push
lock
push
xchg
push
cltd
adc
add
lcall
fs
push
fisubrs
sbb
aas
inc
popa
arpl
movsb
decb
in
push
test
rcrb
insb
xchg
sub
pop
jecxz
outsl
cli
and
add
dec
popf
mov
and
filds
and
ss
shlb
add
xchg
or
adc
mov
inc
sub
cmp
sbb
pop
ficoml
addb
add
add
pusha
sbb
stos
mov
ret
lret
loopne
in
loop
or
ljmp
bound
insl
sbb
test
lret
rorb
xchg
sbb
xchg
mov
cli
and
xor
fcom
jo
test
xor
push
mov
cs
pop
mov
addr16
addb
movsl
aam
pop
jl
stos
aas
cmpsl
adc
sbb
mov
fs
adc
push
or
mov
fwait
add
subb
and
mov
or
pushf
movsl
fsubs
js
mov
dec
ljmp
filds
push
shlb
or
add
add
xchg
jbe
mov
in
cmp
es
lret
jp
cld
add
pop
mov
lea
jno
jae
or
sarb
push
sub
mov
loopne
xor
sbb
jle
xor
or
mov
add
cmpsb
fdivr
scas
mov
sub
cwtl
fisttpll
add
fisubrl
inc
or
mulb
jl
loopne
repz
repnz
mov
or
subb
lahf
pusha
sti
ja
insb
mov
mov
jno
xor
mov
sub
xor
xchg
or
push
adc
inc
cmpsl
inc
andb
pusha
push
pop
decl
add
add
add
push
mov
adc
test
dec
mov
push
aas
or
int3
mov
nop
jl
mov
cmp
mov
push
or
push
and
push
xor
inc
mov
inc
rorb
insl
xchg
push
ss
int3
inc
xor
cmp
fcmovnbe
inc
xor
mov
add
mov
sbb
jno
jns
and
les
insb
movsb
add
dec
push
jb
icebp
in
sub
jo
jmp
dec
mov
push
es
sub
add
jbe
mov
inc
test
test
sbb
add
mov
dec
mov
outsb
mov
je
sbb
mov
add
add
js
das
adc
aam
pop
lcall
shlb
sarl
mov
xor
add
sbb
mov
mov
outsl
xchg
mov
dec
insb
scas
and
and
test
cmc
add
and
jl
sbb
verr
inc
jb
rcr
das
push
push
fsubrp
imul
jle
lea
outsb
dec
dec
mov
mov
lea
cmpsl
add
idiv
js
add
scas
or
imul
xchg
pop
fists
outsl
cmp
xor
mov
imul
leave
mov
xor
daa
inc
add
call
insl
sub
add
nop
sbb
ret
lret
mov
neg
and
fs
add
dec
hlt
fidivs
add
cli
or
jle
jnp
bound
pop
aam
test
lcall
push
jge
bound
push
pop
push
add
jb
mov
fcoml
mov
cmpsb
push
dec
out
jo
push
dec
aam
test
out
fcoms
add
mov
xchg
inc
scas
or
dec
push
mov
or
mov
inc
cld
outsl
pop
lods
aam
mov
adc
call
icebp
inc
mov
add
scas
xchg
add
fiadds
int3
mov
inc
or
test
dec
add
and
add
les
pop
fsub
xchg
int3
xor
pop
out
add
mov
subl
cwtl
scas
mov
dec
xchg
cmp
andb
push
sahf
cmpb
ss
sub
add
push
rcr
mov
mov
jae
add
ljmp
mov
inc
mov
ret
add
fistl
and
js
ljmp
mov
outsl
adc
shll
ficoml
add
jg
pop
outsl
stos
pop
inc
out
add
push
insl
and
fwait
mov
push
adc
push
xor
sub
ficomps
jp
mov
ret
jo
xchg
lods
test
pop
lods
ljmp
sbb
inc
and
movsl
scas
sarl
jl
rcrb
fcom
jg
inc
cs
imul
shlb
mov
bound
add
and
add
or
add
insb
mov
hlt
call
outsl
xor
cmp
push
cwtl
adc
aas
roll
xchg
addb
mov
push
pop
inc
inc
jo
mov
aam
xchg
push
adc
aas
outsb
or
orb
outsb
cvtdq2ps
inc
test
cmp
add
data16
add
sbb
xor
mov
outsb
add
add
or
stos
out
andb
xor
jno,pn
xor
rclb
adc
test
inc
ljmp
inc
and
push
and
fildll
dec
rorl
xlat
push
push
and
fildl
addb
lret
dec
or
push
fisttpl
push
push
and
daa
or
shlb
lret
mov
testl
or
clc
stos
hlt
hlt
iret
rolb
hlt
add
roll
mov
and
mov
mov
mov
add
lret
inc
add
or
ret
inc
stos
roll
fcmovnu
rorb
inc
ficoms
mov
push
adc
or
popf
add
pushl
sbb
inc
mov
adc
sub
ficomps
pop
sbb
add
inc
mov
jg
mov
addl
cld
inc
xchg
mov
lahf
fdivrl
add
stos
push
xchg
and
stos
add
add
dec
xchg
xchg
pop
sahf
and
add
and
fildll
mov
and
fisubrl
pop
insb
pusha
andl
add
loope
sbb
pushf
add
mov
aam
outsl
mov
mov
pop
adc
push
in
xor
loopne
cmc
pusha
sbb
ret
movsb
add
cmp
and
push
or
or
and
jg
pop
and
pusha
cmp
out
sbb
push
adc
jne
imul
xor
nop
mov
mov
cmp
pop
dec
ss
pop
push
fcoml
jecxz
mov
lods
sbb
cmp
sbbb
push
dec
js
push
pop
dec
pop
dec
cli
and
mulb
adc
pop
and
orl
jg
cmpl
adc
and
pushf
cli
inc
or
inc
pop
lock
cmp
orb
pusha
pop
push
jnp
xchg
pop
sbb
movl
inc
dec
ljmp
ja
mov
mov
push
mov
cltd
cs
add
xchg
pusha
sahf
or
je
leave
in
rorb
xchg
movsl
mov
aaa
je
pop
lahf
and
pop
push
stos
dec
enter
add
and
cmp
push
add
ja
cmp
add
dec
cmc
data16
xlat
sub
ficompl
xchg
mov
mov
lret
data16
loop
es
pusha
adcl
int3
and
sbb
and
es
inc
outsb
push
decl
and
xchg
add
or
push
out
dec
mov
ljmp
dec
loopne
mov
dec
mov
xchg
aas
iret
loope
neg
popa
or
out
inc
mov
sysret
mov
test
call
mov
push
push
mov
jne
shll
or
pop
dec
loopne
inc
mov
push
test
add
add
pop
adc
inc
call
adc
add
outsl
sbb
pop
and
sbb
or
popa
xor
add
xlat
pop
mov
loope
cmp
es
outsl
sub
and
lods
rclb
add
pushf
push
sub
mov
call
mov
not
and
add
imul
dec
push
pop
or
pop
imul
call
call
inc
pop
inc
xor
cmp
add
push
mov
add
jbe
inc
cmpsb
aaa
cmp
test
pxor
and
inc
aam
push
push
mov
mov
add
imul
adc
sti
sbb
imul
loopne
aad
dec
add
mov
dec
inc
jae
add
pop
and
sarl
cs
jo
scas
mov
push
lock
sub
mov
add
mov
insl
pop
mov
lock
push
inc
jmp
lods
shrb
out
add
xchg
pop
das
shl
sub
out
jbe
jnp
iret
add
repz
push
sub
sub
nop
das
fisubl
sub
adc
ljmp
jbe
and
std
or
out
add
rcrl
dec
lds
jg
jae
and
push
push
add
add
stos
xchg
scas
fs
jb,pn
lea
aad
sti
pop
lock
sub
sbb
loop
mov
cmp
push
inc
or
repz
fwait
add
jo
xchg
cmp
ja
fstl
xorl
notl
lret
test
sbb
scas
imul
xchg
das
shll
add
cs
enter
adc
adc
add
mov
ja
int3
fstpt
orb
mov
push
syscall
jl
call
jo
or
mov
xchg
pop
add
push
xchg
inc
jnp
push
icebp
add
test
ret
cmp
push
jg
push
mov
inc
or
js
add
jbe
mov
fstpt
push
or
rcll
aad
insl
scas
add
cmp
adc
jo
jp
pop
push
pop
push
xchg
aas
jo
push
dec
push
jns
jle
jo
jo
mov
fnsave
sbb
push
dec
mov
mov
dec
sbb
into
xor
push
lret
imul
je
or
lock
stos
jno
loopne
imul
nop
popa
inc
push
movsl
je
xor
or
icebp
push
icebp
movsl
call
sub
insl
ss
test
add
pop
jmp
imul
sbb
icebp
mov
ss
ror
jnp
lds
push
dec
jae
jne
inc
cld
mov
push
mov
cmpsl
push
lock
mov
in
jne
imul
out
jmp
cmp
or
pop
addr16
fiadds
andb
mov
add
xor
jno
aaa
mov
or
int3
jp
cmp
cmp
outsl
jae
push
mov
push
stc
xorb
xchg
cmp
pop
stc
jb
or
cmp
dec
rcrl
xchg
mov
sahf
xchg
push
icebp
fnstcw
inc
mov
jno
lock
stos
fisttps
inc
shl
xor
stos
mov
sbb
cld
and
aas
xor
add
mov
jo
icebp
fiaddl
mov
das
loop
push
loopne
pop
sub
pop
jmp
xor
lods
orl
sbb
fmull
mov
sbb
xchg
push
icebp
mov
or
sti
pusha
push
pop
std
pop
addr16
stos
popa
rcrl
ljmp
push
and
dec
xor
push
aaa
add
in
jno
stos
adc
inc
adc
stos
imul
dec
xor
loopne
pop
std
add
pop
jb
mov
and
mov
lock
stos
jecxz
out
mov
xorb
push
push
xchg
and
jno
sub
lcall
fwait
push
bound
out
jge
xor
imul
outsl
andb
pop
ss
add
roll
add
add
stos
shr
pop
cmc
adc
add
add
stos
stos
and
push
dec
add
cmp
sbb
xor
xor
mov
pop
add
add
mov
push
mov
popa
loopne
or
push
stos
orb
lcall
dec
rcrl
inc
inc
out
loop
add
subb
incb
dec
rcr
or
stos
into
adc
add
fidivrl
cmpsb
cmp
cs
outsl
test
or
xchg
sbb
in
lods
insl
lcall
push
std
sbb
xor
repz
leave
int
dec
repz
rcl
sub
xor
sub
xor
or
dec
repz
repz
insl
popa
gs
jno
dec
repz
dec
dec
inc
inc
xor
repz
pop
push
push
test
mov
imul
imul
cmpsb
imul
loope
in
push
std
sbb
cmp
icebp
cmc
leave
int
lds
rcl
sub
cmp
shrl
dec
sarl
add
sbb
cmp
shrl
gs
dec
sarl
inc
inc
aas
dec
sarl
pop
push
push
test
imul
cmpsl
imul
imul
adc
lret
mov
mov
xchg
add
or
pusha
mov
and
add
mov
idivb
and
cmp
into
or
xor
or
or
roll
push
sbb
out
add
rorl
lcall
js
shll
xor
xor
add
adc
fiaddl
imul
add
sbb
shll
inc
inc
dec
fsubs
or
xor
add
enter
cmpsb
xor
mov
dec
imul
add
fcoml
test
mov
push
aam
pop
lock
call
shll
cmc
leave
int
adc
rol
add
cmpsb
sbb
and
movsb
add
fildl
in
loopne
push
push
test
or
jo
add
popa
cmpsl
or
or
jno
cmpsl
inc
sbb
push
sbb
push
adc
mov
xor
rcrl
test
xor
add
shl
push
mov
andl
sbb
mov
inc
jno
mov
add
sbb
add
dec
aas
lock
dec
insl
les
push
inc
jno
sub
inc
xor
mov
imul
push
add
mov
test
pop
inc
repz
ret
bnd
add
js
adc
jne
adc
jo
adc
popa
or
pop
and
pop
xor
sbb
cmp
test
dec
mov
cs
and
call
adc
mov
js
or
jo
std
inc
add
mov
jo
mov
push
jb
ss
mov
add
ficoms
pop
test
push
aam
adc
sub
mov
xchg
mov
push
cmpsl
es
pop
aas
push
xchg
les
aam
outsl
jge
popf
push
movsb
pop
inc
xchg
xchg
add
or
jbe
dec
add
cs
mov
inc
push
and
jp
jg
pop
or
add
or
add
ds
mov
cmp
inc
mov
shlb
or
mov
adc
loopne
xor
adc
push
add
add
or
divb
cmp
mov
add
adc
popa
add
jge
loopne
inc
add
icebp
add
ja
mov
fcomip
xchg
add
adc
push
jg
adc
jb
sbb
mov
outsl
fadds
add
pop
mov
and
cmp
roll
push
outsl
clc
sub
inc
ja
sub
push
push
or
pop
xlat
call
and
xchg
mov
mov
cmpb
mov
xchg
movb
or
lock
mov
push
lock
mov
xor
cmp
push
jg
fbld
add
inc
je
xor
adc
add
inc
jle
jecxz
adcb
add
adc
xlat
test
push
pop
xor
add
push
and
subb
adc
or
add
lret
mov
outsl
pop
xchg
hlt
sbb
mov
adc
test
mov
jae
push
mov
or
jle
push
and
loopne
insl
jg
and
stos
fcomps
push
enter
and
jg
fwait
loop
mov
push
pop
inc
add
or
mov
add
pop
mov
or
les
into
ret
adc
adc
test
mov
push
push
sahf
test
lock
sbbb
repz
stos
add
add
inc
jmp
xchg
pop
out
icebp
adc
lock
add
sub
adc
jno
popf
inc
add
ja
adc
lea
into
jb
sarb
jl
lock
pop
sbb
iret
pop
add
insl
sbb
adc
push
push
sub
dec
or
mov
ret
lods
sbb
mov
push
pusha
test
sbbb
cmp
adc
add
and
xor
adc
rclb
pop
cmp
nop
out
jecxz
outsl
sub
repz
es
add
hlt
outsl
in
inc
mov
repz
test
push
add
adc
or
push
adc
push
leave
push
pop
mov
jo
shlb
inc
push
push
push
aam
jge
jge
jmp
xor
add
push
sub
add
add
xchg
mov
fidivrl
jg
test
mov
push
or
pusha
push
shl
jg
mov
push
mov
lcall
lods
icebp
es
adc
add
or
mov
aad
ss
or
int
cwtl
je
jno
push
push
loopne
fildll
addb
mov
add
add
jecxz
fisubl
and
sbb
add
mov
add
push
mov
fwait
fdivrp
add
add
jno
push
xchg
pop
dec
and
push
pop
fs
popf
and
jo
stos
xor
push
jns
mov
call
mov
add
or
scas
subb
inc
mov
sub
or
lea
int3
mov
push
sub
mov
pop
hlt
mov
mov
movsb
or
sub
mov
mov
pusha
inc
xchg
adc
sub
and
or
dec
adc
dec
dec
inc
add
and
hlt
inc
or
add
pop
mov
sbb
lcall
adc
add
push
mov
mov
inc
adc
and
orb
in
lcall
jo
and
scas
xchg
push
xchg
loope
adc
push
lock
lods
and
mov
lods
or
add
push
push
and
mov
or
shlb
inc
adc
and
adc
mov
stos
push
out
xchg
or
je
ljmp
add
add
push
push
sub
aaa
aaa
mov
lods
or
mov
pop
mov
les
sbb
cltd
add
je
nop
in
in
jg
insb
insl
mov
xorb
add
push
add
adc
and
or
cli
cli
add
pop
lock
js
sub
add
adcl
pusha
into
add
fists
push
add
sbb
adc
push
xchg
loope
or
sbb
or
xchg
fistpll
sbb
add
and
lock
xor
shrl
int3
imul
push
imul
add
mov
mov
in
in
mov
in
push
scas
inc
dec
inc
sbb
and
lods
insl
jg
add
imul
popa
imul
adcb
std
and
push
ljmp
cld
and
sti
and
imul
dec
dec
dec
add
push
imul
repz
out
sbb
cmp
push
xchg
nop
mov
xchg
cmp
inc
loopne
rcr
add
inc
aad
es
or
or
cmc
mov
dec
inc
adc
or
add
add
inc
pop
push
push
push
outsl
call
pop
mov
fadds
sbb
call
fbld
arpl
jb
or
or
mov
mov
push
push
dec
sub
xor
ficoms
xchg
mov
pop
aam
xchg
std
fcoms
mov
mov
mov
and
scas
addl
addb
addl
mov
insl
rorl
imul
add
in
push
orb
lock
es
push
mov
std
fisttps
and
inc
andl
mov
adc
sahf
sbb
jo
mov
mov
fcoms
pop
or
push
mov
push
mov
or
int3
xchg
or
pop
sub
or
adc
test
inc
add
sub
pop
fldl
mov
mov
fisttps
mov
ret
punpcklbw
jne
pop
mov
push
add
inc
adc
daa
movsb
sarb
mov
movsb
push
sbb
pop
and
push
inc
sbb
and
dec
daa
pop
inc
daa
pusha
addb
add
daa
fimuls
or
popa
shll
and
fcmovnu
add
shlb
or
jb
or
lds
out
mov
call
sarb
ds
or
mov
and
shll
push
inc
adcl
xor
xchg
inc
and
arpl
mov
inc
add
movsl
dec
sub
pop
je
fcomip
inc
add
test
mov
mov
inc
lret
inc
enter
int3
xchg
sbb
push
mov
adc
call
outsl
adc
push
jnp
mov
jg
add
push
in
mov
or
or
inc
dec
push
push
adc
push
lahf
out
adc
test
filds
mov
push
mov
pushf
testb
sub
jnp
call
stos
xor
push
add
push
mov
out
cli
sub
push
test
pusha
and
push
inc
pop
fdivrs
push
push
add
add
pop
lea
lods
mov
ret
imul
clc
stos
xchg
ja
test
push
repz
push
pushl
test
test
xor
das
inc
sbb
xor
xor
add
or
sub
fdivl
pusha
test
push
xchg
inc
mov
loopne
xchg
dec
lea
add
sti
stos
pop
xorb
lret
call
xchg
add
and
lret
mov
cmp
popa
shrl
dec
rcrl
outsl
or
jp
push
test
mov
lods
or
sahf
or
jnp
mov
ljmp
pop
mov
mov
jno
xchg
push
bound
cmpsl
loope
add
lcall
lcall
imul
loope
sbb
loopne
clc
test
loope
push
aad
cltd
ss
cmp
sub
cmp
in
cmp
jo
scas
pushf
cli
mov
out
cs
testb
cmp
xchg
and
mov
pop
stos
std
adc
repz
jge
add
daa
add
xor
fwait
out
dec
pop
movsl
mov
mov
clc
aas
mov
popf
daa
es
xchg
jo
icebp
and
mov
mov
outsl
inc
test
xlat
sarb
push
pop
pop
idiv
add
xor
inc
mov
lods
lods
lock
mov
cltd
es
js
jecxz
sub
sub
jg
jge
popa
sbb
mov
inc
xchg
xor
int
decb
xchg
gs
jnp
sub
xor
lock
movsb
mov
mov
testl
shll
pop
arpl
into
icebp
dec
inc
adc
faddp
sti
pop
jge
out
or
push
xorb
adc
pop
cwtl
call
mov
inc
dec
inc
dec
or
push
outsl
insb
jl
out
pop
ja
dec
dec
mov
mov
pop
cmp
mov
inc
sbb
inc
and
dec
xor
pcmpgtd
jge
pop
loopne
testl
inc
sbb
jl
push
dec
push
fisubs
sub
inc
lods
dec
sbb
fstl
push
push
lret
dec
sbb
pop
sbb
das
mov
inc
pop
clc
dec
cmpsl
mov
sub
inc
subb
ret
push
jl,pt
pop
pop
stos
cmp
sahf
testb
cltd
in
inc
roll
ret
sub
loopne
push
push
dec
push
dec
sub
mov
rclb
sbb
ret
dec
dec
shlb
sub
dec
pusha
pop
xlat
pusha
popa
xlat
and
add
test
pop
xlat
push
or
xchg
or
ret
push
dec
xchg
adc
sbb
dec
loopne
xor
insb
iret
sti
pop
mov
dec
popa
and
dec
push
dec
jmp
mov
repnz
sti
fisttps
push
ss
cmp
cmp
sbb
fbstp
and
push
adc
clc
adc
and
add
fistpl
mov
in
add
xor
xor
fldcw
sbb
and
and
into
xor
pop
and
fstpt
decb
adc
daa
ss
inc
test
pop
inc
cmp
hlt
fsubp
adc
pop
rolb
add
jmp
mov
pop
push
sbb
xor
cmp
add
sahf
xchg
jo
jge
push
adc
add
cmp
das
xor
lds
ss
add
add
cmp
popa
xor
add
dec
ss
pop
xor
mov
and
add
cmp
fstpt
xor
add
push
adc
xor
cmp
test
in
insl
sti
adc
mov
shlb
orb
movb
sub
fsubrs
fimuls
shlb
add
add
push
mov
sbbb
sbbb
mov
adc
sub
pop
add
or
ret
mov
or
add
push
xchg
and
xor
adcb
mov
sub
sbb
xor
adc
or
bound
push
inc
mov
loopne
or
xor
adc
dec
mov
and
test
or
fsubrl
add
repnz
mov
and
in
xor
push
add
xchg
push
shlb
orb
call
nop
pop
call
push
lods
pushf
mov
sbbl
lret
test
push
pop
mov
loope
push
sbb
push
and
loopne
cwtl
loop
jno
ss
and
out
fcoms
push
cmp
mov
adc
and
xchg
adc
fucomip
pop
jns
xchg
adc
push
sbb
das
add
cmpsb
cmp
cmp
add
cwtl
out
push
adc
repnz
mov
std
add
xor
ficoms
cld
fsubl
js
add
incb
xor
cmp
ret
pop
cld
pop
adc
mov
add
add
and
dec
cli
clc
and
cmp
add
fs
mov
iret
or
fcomip
pop
adc
xchg
cs
cmp
aas
into
jbe
incb
xchg
xor
cmp
cmp
and
pop
ss
add
decl
xor
andb
addl
and
sahf
or
sbb
and
sbb
les
orl
das
jle
repnz
adc
daa
cs
sub
adc
cmp
cmp
nop
fcoms
sbb
xchg
mov
or
sbb
or
mov
incl
fistl
test
add
sbbb
adcl
sub
jmp
daa
cmp
add
and
xchg
push
dec
in
lods
cmpb
adc
add
xor
addb
popa
mov
mov
les
arpl
sbb
sbb
outsb
xchg
rcrb
and
or
lds
pop
shrl
or
cmp
outsl
mov
push
rcrb
adc
addl
out
aam
inc
pop
lret
rcll
adc
cmp
pop
or
js
push
push
dec
andb
dec
xor
shll
add
mov
andb
sub
push
je
movsb
jo
ret
insb
jp
ficoms
ret
push
dec
cmc
incl
pop
inc
inc
daa
inc
cmp
xchg
inc
sub
inc
and
inc
or
addb
or
sbb
das
fisubrl
adc
pop
and
mov
mov
jns
rol
test
sbb
mov
push
push
jno
sbb
and
adc
add
pusha
rol
call
add
incl
pop
lock
cmp
shl
cltd
push
add
mov
outsl
jbe
inc
push
xlat
add
ds
aas
adc
in
push
es
mov
xor
add
cmp
jl
mov
sub
ret
jle
sub
or
cwtl
xor
outsl
call
mov
and
mov
ja
and
hlt
loope
cmp
das
add
inc
and
cmp
sbb
or
stos
pop
adc
add
and
popa
add
xor
jp
ljmp
inc
ret
outsb
and
dec
ret
dec
xchg
and
dec
in
xchg
popa
in
cld
inc
into
add
and
adc
mov
jbe
inc
sbb
daa
subb
cli
incl
and
and
sbb
add
push
jne
mov
push
ljmp
dec
inc
dec
push
and
and
xchg
bound
icebp
scas
out
clc
jecxz
pop
sbb
les
and
pop
xchg
popa
or
inc
or
add
add
xchg
lock
daa
mov
pop
or
shrb
xor
loopne
shlb
and
lock
mov
ds
mov
call
movsl
movsl
add
xchg
and
dec
inc
mov
or
add
fdiv
xchg
add
es
push
mov
fimuls
scas
mov
sbb
pushl
loopne
test
push
jecxz
stos
inc
push
imul
arpl
mov
push
mov
push
add
add
sbb
xchg
shll
inc
lods
xchg
push
inc
add
mov
xchg
add
add
add
add
add
cmp
push
cmp
adc
sbbb
loop
ret
sbb
popa
jae
add
pop
adc
and
mov
clc
loopne
outsl
mov
adc
add
inc
sti
add
and
repz
adc
jp
pusha
pop
inc
adc
cld
or
les
push
cmpsb
sbb
xor
arpl
xchg
fcoml
incb
xor
jg
mov
mov
inc
push
cwtl
clc
mov
hlt
sub
add
inc
ja
or
mov
jne
and
mov
gs
scas
insl
push
fdiv
cmp
xor
fs
sbb
push
loope
push
sarb
push
mov
push
mov
sub
loope
call
out
inc
shrb
dec
sarb
ljmp
add
sbb
ret
out
pop
ss
dec
add
or
rorl
ds
inc
push
rcll
adcb
and
ds
or
adc
ds
or
in
push
and
add
add
adc
stos
pop
sub
mov
push
cld
incl
add
lock
lock
mov
lret
nop
bound
jae
xchg
sbb
insl
push
push
mov
sbb
ja
push
loop
rolb
and
pop
xchg
jg
inc
xor
adc
jne
push
adc
adc
xor
push
add
andb
add
mov
xchg
add
add
xor
jb
pop
cli
xor
mov
pop
add
fcoms
call
push
shlb
sub
inc
jb
inc
add
push
push
push
push
filds
push
add
cmp
loopne
push
adc
adc
cs
push
mov
cmp
add
and
xor
shlb
adc
leave
cmc
shll
dec
pushf
sahf
hlt
add
mov
add
fs
cmc
xchg
nop
fs
cmp
outsl
clc
fistps
sbb
push
pop
mov
roll
mov
iret
roll
sbb
push
adc
aas
sub
loope
dec
push
call
jmp
add
adc
add
and
mov
insb
pop
xor
push
cmp
pop
sbb
daa
add
pop
add
push
int3
dec
arpl
je
cmp
dec
inc
xor
jecxz
mov
sub
mov
fcomip
adc
mov
push
push
js
mov
cli
pop
data16
mov
orl
add
or
sbb
fisttpl
inc
mov
sbb
in
push
and
jmp
call
lret
xor
adc
jge
add
cmp
jo
clc
movl
mov
test
pop
subb
aam
xor
adc
jl
add
mov
adc
aad
inc
sub
push
outsb
xor
mov
cmp
dec
mov
outsb
xor
clc
dec
lcall
add
loopne
sbb
dec
push
sbb
and
dec
pop
subb
fs
jmp
adc
jl
jecxz
loope,pn
jp
and
repnz
call
or
out
ljmp
xor
cli
add
daa
fwait
adc
pop
out
adc
jno
add
jl
mov
jl
mov
je
adc
add
into
or
xor
cmp
jno
push
je
aam
repnz
xchg
mov
push
fsubs
push
shll
and
mov
cmpsb
ljmp
jb
push
push
pop
ret
int3
jmp
sbb
test
mov
push
add
lea
add
addr16
push
inc
loopne
dec
pop
sub
jg
mov
add
adcb
xchg
and
push
std
dec
insl
sub
sub
fisubl
fs
add
je
stos
xchg
or
ss
out
mov
mov
add
fwait
and
and
fists
cmp
aas
add
adc
lahf
movsb
js
and
add
sbb
cwtl
jo
pop
fcoml
aas
sarb
xchg
test
jo
lock
xor
mov
incb
pushf
jae
test
dec
jno
in
add
pop
inc
add
mov
jg
pop
sti
mov
roll
addr16
icebp
or
sbb
mov
and
add
gs
adcb
cmp
subb
jb
push
add
jge
pop
sbb
rcrb
cmp
add
xor
sbb
stos
rolb
xchg
dec
fdivl
adc
scas
push
and
sub
loopne
in
pop
add
or
sbb
aas
jmp
rolb
and
jno
xor
and
addb
mov
das
int3
in
sbb
xor
roll
or
cmp
and
jne
xchg
add
repnz
fnstcw
jno
xchg
jbe,pn
dec
sbb
sub
adc
insb
mov
and
push
daa
pop
add
test
cmp
xor
adc
xor
add
and
cmp
and
cmp
mov
ss
cs
in
add
xor
insb
add
push
and
mov
aam
xor
add
insb
mov
test
fcomps
aas
icebp
pop
add
and
add
jb
cmp
pop
mov
outsl
fsubl
adc
push
jne
in
sub
sbb
xor
or
fs
ds
and
les
xor
add
pop
xor
enter
es
or
xchg
jmp
enter
push
xor
push
and
cmp
or
push
cmp
sbbb
lods
jo
xor
inc
ds
js
inc
scas
adcl
and
sub
orb
jg
orb
or
or
test
adc
les
push
mov
fmull
adc
outsb
mov
add
xchg
enter
lret
sbb
xchg
or
jbe
fmull
inc
rcll
fadds
movb
pushf
jo
fdiv
mov
mov
and
and
arpl
jb
and
fidivl
jg
testb
jb
cmp
inc
test
sbb
inc
stos
inc
or
push
mov
xor
mov
and
push
xchg
addl
int3
and
or
int3
ds
inc
sbb
xor
mov
add
pop
push
ret
aaa
loop
push
adc
out
les
cmp
add
sbb
pop
test
xor
sbb
mov
inc
jle
push
fcoml
inc
jle
sarb
xchg
data16
add
adc
rolb
inc
clc
dec
or
les
jmp
cmp
test
rcr
clc
add
and
dec
ds
or
sub
mov
sbb
incb
and
add
and
sbb
js
adc
inc
mov
push
rorb
loope
push
and
jb
push
sub
pop
xlat
lods
scas
pop
push
mov
adcb
add
mov
lds
movb
fnstsw
or
mov
xor
or
ds
movsb
sbb
fimuls
cld
xchg
pop
push
test
adc
sarb
jle
mov
jge
bound
adc
jo
add
sbb
cmp
add
popa
loope
data16
mov
inc
mov
pushl
xor
or
scas
test
ds
xor
data16
mov
add
out
lahf
jp
cs
add
dec
inc
loop
add
in
add
xor
inc
push
pop
jo
nopl
mov
jnp
loop
icebp
sub
push
adc
or
ret
add
jb
stos
sarl
dec
add
jl
aad
inc
adc
mov
mov
aaa
mov
push
or
adc
mov
add
adc
push
pop
add
or
pop
sbb
subl
orb
loop
data16
mov
mov
and
and
or
add
sbb
add
push
and
aam
dec
andb
and
lret
cmp
int3
cmpsb
add
or
mov
and
negl
shl
fbld
inc
bswap
scas
out
push
dec
jmp
mov
loopne
adc
inc
adc
xchg
lcall
adc
or
adc
pop
lcall
inc
and
dec
or
and
call
cmp
adc
pop
mov
cmpsb
add
cmc
out
cmpsl
enter
loopne
and
and
repnz
sub
dec
sbb
or
loopne
outsl
mov
out
es
out
and
add
mov
mov
push
sbb
push
sbb
adc
inc
ret
insb
adc
adc
add
mov
popa
mov
adc
xchg
js,pn
daa
ds
les
in
or
add
and
test
push
or
outsb
sub
or
push
cmp
push
xor
fadd
jg
mov
jge
bound
cmp
xchg
push
es
fisttps
stos
push
cwtl
or
and
inc
add
incl
repnz
add
in
cmp
push
ss
push
and
cmp
int
or
mov
mov
rolb
pusha
je
and
jecxz
mov
psubd
push
add
shlb
xchg
xchg
dec
dec
xor
je
add
sarb
inc
sbb
nop
push
andb
and
ljmp
sub
push
fsubr
inc
or
repz
add
sbb
jg
mov
ljmp
add
call
ja
les
inc
jo
xor
test
mov
mov
pop
add
inc
jo
ficompl
inc
dec
or
xor
mov
add
and
mov
sbbl
pop
or
xchg
pop
mov
or
inc
mov
ror
and
jmp
dec
mov
adc
idivb
xchg
test
pop
lcall
ret
ja
loop,pn
jl
cli
xchg
lret
xchg
stos
jb
dec
add
pop
insb
dec
icebp
sbb
aam
sbb
adc
push
fstpt
inc
pop
scas
call
add
aad
pop
call
cwtl
test
dec
inc
push
mov
cmp
add
in
call
jmp
add
jo
fisubl
jmp
mov
std
push
adc
lock
int
pushl
jg
inc
std
scas
stc
add
xchg
xchg
lods
adc
cmp
xchg
movsb
mov
ret
fwait
nop
pop
icebp
add
testl
aaa
cld
mov
inc
pop
and
shll
and
mov
les
insb
out
mov
push
in
add
push
or
or
add
or
divb
ja
incl
repnz
xchg
jb
fisubrs
std
in
jmp
or
int3
shlb
add
and
adc
fwait
inc
ljmp
add
pop
push
hlt
daa
add
mov
or
fcmovb
cmp
mov
xor
sysenter
decl
push
adc
dec
adc
xchg
lock
clc
icebp
loope
clc
push
ljmp
push
sub
xorl
pop
jg
inc
and
cld
mov
js
or
movsb
mov
ret
ret
push
lcall
add
clc
push
pusha
cli
dec
out
ret
push
adc
jmp
insb
pushw
fsubrl
aaa
pop
adcb
in
or
mov
outsl
mov
inc
push
adc
repnz
sub
jge
sub
sar
adc
mov
xor
adc
xor
push
fwait
jle
movsl
mov
push
lret
xor
adc
push
in
cli
sbb
sti
imul
outsl
aad
shr
subb
mov
maxps
mov
mov
jle
fwait
rcll
adc
sbb
jns
fs
test
mov
cmp
or
xchg
cmp
aad
mov
cwtl
aas
in
lock
loopne
jnp
push
mov
popa
add
add
aam
ljmp
push
push
repz
mov
jl
mov
or
pop
aam
dec
ljmp
ja
xor
push
add
sub
mov
cltd
addb
pop
icebp
incl
jl
adc
ret
jmp
and
add
sti
add
cld
add
sti
add
push
scas
adc
sub
sti
add
outsl
lcall
jae
cmp
or
int
xchg
lods
cmp
jecxz
push
sbb
fs
scas
mov
xor
and
push
flds
xor
ss
test
add
sbb
push
movsl
insb
lret
out
jle
pop
sub
pop
or
insb
stos
add
xor
rcll
fcos
jp
insb
dec
jg
outsl
lcall
add
bound
imul
pusha
incl
xor
test
or
cmp
or
xchg
pushf
push
insl
adc
or
inc
pop
sbb
orps
pop
or
iret
popf
or
push
xchg
and
nop
nop
jge
xchg
add
mov
stos
sbb
add
imul
addr16
ja
jbe
fisubrl
dec
push
inc
add
scas
add
shll
xchg
jmp
outsl
lcall
push
mov
pop
test
push
jae
lcall
add
rcrl
xlat
test
dec
imul
das
and
rorb
insl
push
inc
xor
add
jg
outsl
cld
int
decb
jae
jnp
arpl
imul
sbb
or
outsl
cmp
int
sub
outsl
fldt
lret
outsl
rep
sti
outsl
jecxz
outsl
xchg
outsl
fistpll
stos
mov
add
imul
fldt
adc
imul
xor
imul
stos
dec
mov
imul
aaa
jg
mov
adc
imul
push
cli
push
ret
arpl
push
push
mov
push
push
xor
push
jecxz
push
subl
inc
std
aaa
aam
push
push
loope
jmp
push
addr16
addr16
addr16
addr16
fwait
mov
adc
add
xor
fwait
mov
addr16
addr16
repz
jcxz
jmp
stc
fwait
mov
andl
addr16
push
pop
inc
outsw
out
mov
data16
arpl
adc
add
xor
out
out
and
shll
retw
data16
data16
lock
xchg
data16
andw
mov
data16
gs
int
int3
cmpsb
lock
gs
arpl
cld
int
cld
adc
add
xor
and
shll
gs
gs
int
gs
gs
gs
gs
andl
gs
int
gs
fs
fs
fs
jnp
arpl
cmpsb
sar
adc
add
or
ret
add
fs
mov
fwait
andl
cwtl
mov
mov
pop
arpl
aad
jo
adc
adc
adc
arpl
arpl
adc
arpl
arpl
arpl
arpl
arpl
arpl
add
mov
cmpsb
jo
and
bound
test
jg
jnp
arpl
adc
bound
bound
bound
push
clc
xor
add
outsl
stos
dec
loope
sub
xchg
bound
fildl
bound
push
popa
pop
popa
inc
popa
popa
jae
fwait
cmp
jnp
arpl
add
pop
insl
or
or
popa
pusha
xor
xchg
cmp
mov
decl
loopne
out
push
pusha
cmp
add
add
cs
flds
dec
jo
xchg
les
push
mov
das
cli
fldt
adc
insl
xchg
push
push
push
push
jg
imul
mov
cld
imul
push
inc
aaa
outsl
test
clc
pop
pusha
inc
push
addr16
cmp
addr16
mov
adc
addr16
xchg
mov
add
or
and
data16
fs
fs
clc
fcomip
sub
arpl
sarb
sbb
cmpsb
lock
mov
mov
cld
in
and
bound
stos
dec
loope
mov
bound
add
add
and
popa
pushf
popa
xchg
adc
popa
mov
mov
jo
dec
loope
sub
mov
add
outsl
mov
adc
outsb
jo
add
outsb
or
xor
out
adc
outsb
ret
outsb
stos
jg
sub
push
add
insb
cmp
notb
in
sub
loopne
mov
cmpsl
insb
dec
xor
js
push
iret
adc
lods
dec
loope
imul
add
and
in
out
mov
and
push
push
and
push
push
loopne
movsb
jo
or
push
imul
arpl
repnz
ja
lds
jmp
sub
jmp
je
pop
add
fs
cmpsb
mov
push
fsubs
adc
xlat
fs
loopne
push
mov
popa
std
cld
pop
aam
loop
loopne
fisubl
outsl
pop
mov
jecxz
sahf
lock
jbe
outsb
imul
imul
ljmp
insl
insl
repz
insb
xor
insb
lahf
insb
push
imul
add
imul
xchg
js
insl
or
add
pop
lock
dec
ja
outsl
imul
shrl
loopne
cwtl
subb
movsb
scas
ss
jnp
call
loopne
dec
mov
addr16
addr16
add
rclw
data16
gs
sub
mov
jo
sbb
adc
pop
out
loopne
jecxz
jl
fdivp
outsl
cmpsb
outsl
cmp
stc
insl
inc
insb
jle
jg
pop
sub
insb
mov
imul
inc
push
js
loopne
jl
addr16
push
and
mov
lock
lock
mov
push
lods
fs
mov
icebp
fistps
push
bound
bound
popa
add
cmpsl
pusha
pop
loopne
test
add
dec
jno
pop
outsb
cmp
outsb
and
outsb
aaa
imul
add
push
sbb
popa
push
idiv
imulb
iret
loopne
or
addr16
addr16
addr16
in
lea
cmpsb
decl
shll
test
add
cs
mov
enter
jbe
arpl
xor
arpl
arpl
in
mov
adc
pop
bound
aad
pusha
dec
dec
sbb
ljmp
outsl
sbb
sub
mov
outsl
mov
outsl
pop
outsb
inc
outsb
dec
outsb
jae
aad
call
outsb
jnp
arpl
xor
subb
cmpsb
insl
sbb
insb
pop
ja
aad
adc
imul
and
sbb
xchg
mov
decl
sbb
xor
popa
faddl
xlat
data16
data16
mov
mov
rorb
test
mov
fs
fs
arpl
lock
std
dec
bound
popa
push
sbb
popa
aas
sbb
enter
pusha
inc
pusha
dec
cmp
outsl
sbb
pusha
shrb
adc
pusha
and
pusha
cmp
loopne
into
nop
push
insb
ljmp
add
mov
and
sub
ljmp
xor
imul
cmp
and
adc
xchg
inc
pop
push
lock
pop
imul
inc
insb
mov
mov
cmp
add
les
gs
add
fs
lds
fs
cli
sbbb
in
dec
xchg
cbtw
bound
fildll
pop
mov
popa
js
orb
aam
out
loopne
call
popa
mov
popa
pop
dec
add
pusha
push
insb
pusha
rcll
mull
pusha
push
mov
outsl
outsb
add
push
enter
lret
insl
xchg
insl
mov
out
clc
inc
insb
jae
xchg
pusha
insb
imulb
es
loopne
jb
mov
test
icebp
sbb
cmp
push
lock
addr16
mov
push
adc
gs
mov
arpl
jno
mov
mov
xlat
mov
pusha
mov
dec
push
add
fstps
insb
insb
sahf
insb
xchg
add
push
push
imul
push
add
addr16
imul
pop
adc
aas
and
imul
sub
cmpsl
add
mov
and
sub
inc
or
cld
decl
sarb
pushf
insl
mov
xor
insb
sahf
clc
mov
jmp
adc
pop
pop
vprotb
enter
push
mov
or
push
nop
dec
or
bound
xor
lock
and
add
sub
xor
jg
dec
fsubl
shlb
mov
lock
dec
clc
rclb
outsl
push
or
in
call
bound
add
mov
mov
mov
dec
and
dec
test
push
popa
push
popa
pop
popa
pop
push
dec
or
add
ja
dec
jo
je
jo
jl
push
fs
dec
sub
or
popa
mov
sbb
jg
popa
add
push
popa
or
popa
push
xor
adc
popa
and
xorb
and
mov
add
loop
pusha
pop
ds
inc
adc
pusha
dec
pusha
dec
pusha
je
pusha
jl
js
or
or
pushf
adc
pusha
sbb
icebp
xchg
pusha
add
or
or
loop
pusha
cmp
cmp
and
pusha
sub
sub
fsubl
pusha
les
shlb
decl
hlt
pusha
add
mov
cli
in
cmp
out
pop
mov
int
mov
adc
mov
stc
push
addr16
jge
addr16
clc
sub
data16
data16
jle
mov
scas
inc
sbb
mov
clc
xor
adc
fisubl
xchg
adc
mov
add
arpl
lock
ret
xor
xchg
jg
mov
shl
mulb
pusha
jmp
jbe
xor
test
bound
and
push
adc
sbb
incl
in
insb
stos
insb
and
insl
imul
scas
sbb
imul
mulb
mov
lock
cmp
call
push
push
cmpsb
inc
imul
imul
dec
shll
ja
mov
jmp
addr16
ret
lods
addr16
pushw
in
or
loopne
sub
mov
gs
jae
gs
arpl
clc
ja
jmp
in
jo
mov
jle
or
nop
or
lock
fadds
lahf
rcrb
push
popa
pop
popa
inc
sbb
sarb
xor
adc
pusha
jecxz
jmp
cmp
sub
das
jb
push
out
jg
outsb
or
xor
outsb
and
sub
outsb
mov
outsb
mov
mov
test
push
insl
pop
lret
inc
insl
dec
insl
xchg
xchg
lock
xorb
imul
xor
insb
pop
jo
std
call
or
xor
scas
push
imul
mov
push
call
adc
push
addr16
jp
addr16
addr16
addr16
xor
and
pop
push
xchg
data16
sbb
mov
cmp
adc
fs
xchg
xlat
rolb
mulb
mov
adc
arpl
add
arpl
mov
jo
mov
cli
cmp
pushf
sbb
outsb
shrl
pop
insl
adc
insb
xor
insb
sub
test
xchg
out
fwait
insb
mov
push
push
mov
push
ds
imul
or
add
adc
xor
stos
loop
fldt
adc
imul
fwait
imul
mov
pop
push
push
push
push
push
adc
imul
subb
in
push
mov
push
inc
add
lcall
dec
ret
mov
sbb
or
data16
pop
sbbb
enter
data16
mov
rclb
fdivr
push
add
movsb
jnp
add
and
cwtl
decl
mov
inc
xor
and
mov
icebp
jmp
arpl
jo
outsb
rcrb
sti
arpl
sbb
or
pop
lods
ss
adc
popa
aad
xchg
cltd
pusha
add
incl
inc
outsl
pop
outsl
in
outsl
mov
push
insl
imulb
shlb
insb
lea
cmp
or
aas
push
jo
jbe
xor
inc
bound
sub
pushf
inc
pusha
pop
pusha
and
xor
jbe
in
ljmp
add
jp
xchg
outsb
xlat
outsb
pushf
outsb
xchg
outsb
subl
outsl
cmp
push
mov
dec
jmp
or
ljmp
test
ret
jo
stos
add
adc
cld
fwait
push
push
push
and
andl
inc
gs
mov
mov
adc
jg
push
dec
and
push
arpl
arpl
arpl
xchg
mov
fildll
bound
call
insb
jns
adc
imul
les
and
pop
icebp
mov
xlat
push
loope
inc
sub
loope
ss
popf
adc
mov
sti
adc
cltd
data16
pushl
outsb
cwtl
mov
pop
or
gs
es
jle
gs
mov
es
jmp
xchg
gs
mov
add
cmp
divl
xor
outsb
scas
orb
insl
jno
xor
insl
sub
das
push
nop
shrl
insl
mov
lods
insl
dec
adc
jmp
insb
cmc
insb
mov
insb
inc
xchg
lods
insb
push
shlb
push
and
push
mov
or
push
dec
fistpll
sbb
push
push
and
push
rorb
push
push
mov
dec
imul
imul
imul
mov
mov
pop
jo
adc
push
cmpb
mov
push
pusha
pop
cmpsb
add
popa
addr16
pop
clc
call
and
nop
insb
ss
push
frstor
shll
jb
test
jmp
adc
xorb
gs
les
dec
fs
add
std
xorb
sub
xchg
sub
pusha
push
in
pop
pop
cli
xorl
bound
add
clc
jg
nop
pop
xchg
popa
add
outsl
xor
popa
pushf
mov
std
das
xchg
or
mov
pusha
xchg
pusha
outsl
outsl
add
aaa
cld
in
and
mov
lods
adc
dec
outsb
outsb
adc
xor
je
imulb
outsb
cmc
adc
jp
addl
insl
outsb
push
orb
fildl
insl
xchg
jp
scas
adc
dec
insb
mov
fidivl
ds
fwait
pop
sbb
pushf
insb
mov
out
jne
outsl
mov
cmp
pop
xor
imul
nop
adc
push
es
int
call
push
adc
adc
lock
jg
push
push
push
push
imul
hlt
divb
cmp
pop
push
adc
dec
add
in
push
push
push
mov
jo
int
mov
add
ficoms
aad
call
data16
xchg
lahf
dec
test
add
data16
movsl
adc
outsl
outsl
jb
rcl
dec
gs
jg
addr16
gs
cmp
gs
gs
aam
jmp
outsl
outsl
push
mov
cmpsl
adc
bound
fs
inc
pop
add
pcmpgtb
add
fs
push
xchg
xchg
mov
clc
stc
fisttpl
arpl
adc
arpl
jne
lcall
arpl
xchg
lods
arpl
mov
pop
jb
bound
lcall
stos
shrb
bound
bound
push
lods
shrb
ja
jb
imul
or
data16
loop
out
adc
popa
xchg
popa
mov
mov
inc
pusha
cmp
movsb
fbld
in
add
mov
orb
lock
mov
lds
adc
outsl
out
fimull
push
cld
outsl
movsb
outsl
dec
outsb
jp
fs
and
test
inc
mov
mov
insb
subb
cld
adc
imul
add
push
push
stc
sub
mov
mov
pop
imul
movsl
fwait
mov
mov
and
mov
aam
nop
aam
push
add
mov
inc
outsl
pop
jae
add
fisubl
addr16
mov
mov
sub
data16
mov
ret
or
pop
gs
jb
movsl
aad
mov
in
gs
jg
mov
fs
add
fs
mov
mov
insb
pop
mov
sbb
arpl
mov
fs
bound
jp
aaa
mov
insl
sub
shrb
rolb
rolb
or
xchg
imul
mov
xadd
js
addr16
addr16
test
cmp
fstpt
les
xchg
or
inc
jbe
fs
add
add
ja
sbb
ret
xchg
add
imul
xlat
push
mov
pop
rcrb
mov
sub
addr16
mov
stos
push
int3
ss
xor
lret
fs
sti
fst
fists
stos
fs
arpl
cmp
out
loop
out
adc
fildll
push
ljmp
bound
mov
mov
mov
mov
scas
js
icebp
ljmp
js
sarb
and
dec
popa
jbe
jp
hlt
jp
lcallw
or
outsb
adc
push
popa
adc
popa
sbbb
add
rorb
js
ss
xor
jg
popa
es
in
outsl
cmp
popa
cs
sub
adc
popa
fisubs
popa
mov
into
popa
lret
push
repnz
pusha
in
pop
pop
test
xchg
outsl
mov
mov
sti
outsb
out
lock
ljmp
outsb
fldt
ret
insl
lcall
jnp
shrl
fwait
push
notb
adc
imul
arpl
std
stos
icebp
insb
inc
orb
imul
repnz
imul
in
imul
mov
movsl
inc
inc
push
push
push
jb
jnp
arpl
nop
jl
aaa
jg
push
push
push
aas
push
push
imul
outsb
clc
pop
cs
outsb
imul
clc
fisttps
or
mov
je
ljmp
gs
ds
dec
arpl
arpl
push
shr
cld
inc
mov
and
ret
mov
mov
mov
and
xchg
scas
push
outsl
xor
hlt
jg
ficoms
push
outsb
mov
outsb
inc
and
pusha
clc
das
sahf
jge
jns
outsb
addb
jmp
mov
cltd
outsb
mov
insl
imul
pop
adc
add
xor
insl
and
pop
inc
loop
and
imul
imul
mov
push
fistpl
inc
pusha
sbb
push
push
push
push
adc
push
imul
sub
imul
jecxz
push
xchg
stos
lcall
aaa
stos
ss
mov
addr16
xchg
mov
gs
addr16
fs
fs
pop
push
mov
pusha
cmp
jl
je
fcoml
pop
call
js
outsb
shrb
insb
push
imul
loopne
sbb
loopne
pop
push
dec
loopne
push
push
pusha
mov
adc
sub
imul
loope
push
and
jo
jp
mov
mov
mov
int3
pop
cli
test
cld
arpl
arpl
xor
xchg
shll
inc
bound
bound
decl
add
and
dec
inc
xchg
popa
sbb
xor
jns
ret
ret
dec
enter
pusha
push
inc
outsl
add
outsl
jbe
js
outsb
push
or
xchg
outsb
subl
sbb
pusha
aam
ja
inc
mov
inc
or
or
cmp
lcall
inc
add
imul
adc
imul
adc
imul
sbb
imul
push
jg
shll
push
push
push
push
mov
pusha
mov
jle
fidivrl
pop
imul
jmp
inc
inc
push
xor
inc
inc
ss
pusha
sub
mov
insw
pusha
lods
xchg
gs
fs
fs
mov
cmpsb
jge
addr16
into
popa
pop
add
pop
lock
sbb
pop
mov
jno
cli
mov
repnz
insb
inc
add
iret
in
mov
lods
insl
xor
jg
push
inc
mov
aam
js
test
call
sbb
adc
push
sub
inc
or
imul
mov
xchg
add
data16
mov
mov
out
clc
sub
in
add
fsubp
fs
cwtl
rcrb
push
arpl
push
hlt
stos
arpl
cmp
mov
mov
sub
inc
bound
xorb
pushf
sbb
aam
test
sbb
jp
stos
std
popa
icebp
popa
in
popa
xchg
adc
sbb
push
sbb
pusha
xchg
pusha
mov
add
mov
adcb
push
insl
and
scas
jp
clc
mov
mov
push
push
rorl
test
hlt
fbld
or
sbb
shll
and
sti
ljmp
test
gs
andl
fs
popf
mov
push
loop
inc
andb
call
pop
es
inc
pusha
aad
outsl
inc
and
mov
insl
mov
push
stos
aaa
jle
lods
push
pushf
push
pusha
lcall
nop
pusha
sub
subb
pusha
fwait
jge
push
xchg
add
mov
add
packuswb
push
jp
xor
ret
addr16
mov
addr16
adc
je
addr16
loope
std
hlt
adc
cli
addr16
loopne
jmp
xchg
push
push
pushf
push
mov
nop
pop
and
testb
movsb
scas
lcall
cwtl
inc
fwait
sarl
out
dec
data16
jb
jge
arpl
fisttps
popw
data16
add
push
bound
and
decl
mov
and
adc
mov
xor
data16
filds
cld
lret
data16
out
sbb
jp
enter
lcall
mov
mov
mov
mov
stos
fsubrl
dec
mov
pop
pop
inc
adc
dec
fucomip
decl
jle
gs
rcrb
gs
push
gs
ja
incl
or
aaa
xor
cmp
fldenv
gs
add
jl
gs
cmp
ljmp
add
mov
incb
fs
stos
mov
dec
popa
fldenv
jg
lds
pusha
imulb
shlb
pusha
icebp
pusha
stos
push
pop
test
push
dec
outsl
xchg
outsl
mov
movsl
outsl
mov
outsb
mov
decl
aam
dec
cmp
imul
sbb
fildll
inc
push
icebp
es
lock
addr16
incl
call
add
inc
mov
fs
adc
arpl
arpl
pop
push
dec
cld
movsl
bound
pusha
push
lock
mov
outsb
loop
xchg
sbb
inc
mov
fsubrl
in
outsb
cld
popf
stos
xchg
xchg
push
mov
push
addr16
data16
data16
fwait
jle
pop
xchg
gs
fs
adc
adc
pop
arpl
dec
aaa
mov
cld
stos
rcrb
popa
loop
xchg
mov
sub
add
mov
mov
xchg
outsl
dec
outsb
repnz
out
outsb
mov
adc
jle
mov
insb
mov
xor
lock
jns
pushl
or
push
test
daa
pop
mov
pop
data16
xor
pop
lods
outsl
mov
or
gs
fs
sbbl
push
adc
pop
add
fs
inc
outsl
pusha
cmp
jg
insl
cmpb
jle
push
test
mov
push
mov
sbb
mov
cmp
adc
push
sti
adc
push
and
outsl
xor
out
cwtl
outsl
adc
jbe
jl
pop
xor
jo
push
outsb
out
outsb
out
nop
adc
outsb
push
js
ljmp
cld
or
mov
insl
jo
insb
and
pop
insb
pop
adc
or
insb
test
imul
imul
cltd
imul
nop
pop
ds
push
movsb
add
icebp
scas
xchg
popf
imul
add
lods
loopne
adc
jle
push
jo
mov
adc
addr16
add
add
les
rorb
adc
add
dec
fsubl
arpl
outsl
xchg
and
outsb
cwtl
outsb
dec
lock
pop
stos
add
pushw
pop
adc
lock
push
dec
icebp
push
add
and
dec
push
arpl
mov
adc
push
cmp
and
shrb
enter
cld
push
out
xchg
push
es
add
rorb
xchg
repnz
js
mov
int
fidivl
adc
dec
imul
mov
or
mov
fs
sub
xlat
ss
adc
outsl
add
out
jmp
xchg
and
push
lea
shrb
adcl
shll
fs
xchg
push
dec
mov
mov
les
add
rorb
xor
xor
ret
nop
cmp
shlb
andl
adc
fmuls
sbb
mov
mov
and
rcl
jp
loopne
adc
adc
inc
fdivs
inc
cs
loopne
je
mov
popa
xor
popa
shll
popa
repz
insl
aad
mov
mov
dec
mov
popa
scas
loopne
pop
insl
stos
popa
adc
pop
or
inc
pusha
inc
pusha
dec
add
pop
orb
pusha
jae
jnp,pn
addr16
arpl
imul
pusha
sbb
pusha
movups
pusha
aaa
nop
and
pusha
cmp
pusha
and
cmp
std
pusha
sub
pusha
xlat
pusha
dec
das
add
leave
adc
adc
aas
aas
adc
mov
mov
cmpsl
daa
roll
push
test
or
inc
stos
cmpsb
ljmp
add
mov
out
shl
add
jmp
pop
mov
out
out
xchg
add
pushf
outsl
sahf
add
or
call
adc
add
ds
int3
jg
ret
lods
in
pop
jecxz
mov
sbb
mov
push
out
fs
stos
or
lock
lahf
adc
jge
test
js
mov
sbb
fimuls
mov
roll
mov
fisubrl
xchg
dec
mov
std
dec
jg
in
jecxz
adc
add
inc
lret
push
lahf
aad
jg
mov
popl
xor
jmp
adc
jne
inc
ror
in
add
mov
shl
sbb
loope
daa
dec
icebp
add
test
mov
jmp
call
es
scas
in
imul
xchg
cmp
stos
xor
push
scas
ficompl
sti
je
jno
mov
push
xor
add
xor
sub
fistpl
adc
and
xchg
lcall
xor
fdivl
jmp
ljmp
aam
jnp
xorl
pushl
andb
xchg
dec
sbb
mov
stc
inc
and
cmp
ja
cli
lea
pusha
push
sub
dec
dec
in
or
data16
adc
cltd
pop
hlt
lds
std
std
frstor
dec
ja
xor
push
sbb
ret
add
sahf
pushf
lock
or
cs
jg
mov
mov
mov
int
mov
fidivl
insb
pusha
aad
test
es
int3
xor
jmp
add
cmpsb
inc
jle
es
xor
add
mov
dec
sbbb
pop
add
mov
adc
lret
pop
loop
mov
fidivrl
lods
movsb
add
cltd
sets
pop
sub
bound
idivb
es
scas
xor
scas
xlat
aam
test
loopne
pushf
pop
lcall
lods
add
sbb
icebp
push
inc
ret
pop
push
jl
add
sub
add
out
fwait
movsb
xor
add
mov
call
xor
je
cwtl
xlat
mov
or
cli
in
sub
xchg
push
sub
js
push
inc
inc
pop
mov
push
mov
sub
cli
idivb
inc
imul
jns
dec
outsb
je
jb
lods
insl
outsl
hlt
arpl
fs
jb
and
push
imul
sti
popa
insb
push
jb
cmp
inc
gs
push
imul
or
inc
arpl
jae
dec
mov
je
je
xchg
outsw
inc
and
dec
imul
es
js
scas
dec
movsb
jo
gs
insb
add
inc
jbe
push
mov
lods
inc
stos
push
imul
push
inc
pop
jo
fnstcw
jns
sbb
cmp
xor
sti
lar
sbb
notl
pop
push
adc
jo
sbb
pop
jae
dec
dec
clc
mov
mov
push
inc
outsl
outsb
fs
std
jnp
imul
jecxz
jne
jb
xor
dec
mov
dec
sub
mov
insl
mov
or
xor
dec
pusha
xchg
fs
push
sbb
adcl
insb
mov
sti
push
outsb
ja
ficoml
fs
push
jne
dec
stos
dec
xor
inc
jns
sbb
inc
sarb
pop
sub
repz
xor
jns
push
dec
xchg
in
and
push
jne
pop
lock
mov
jae
sbb
push
call
pop
jnp
arpl
pushf
mov
aam
test
pop
imul
dec
lds
addl
arpl
push
mov
adc
or
movl
jo
jp
xor
sbb
repz
push
lods
arpl
or
sbb
mov
or
jp
add
mov
pusha
mov
dec
inc
push
inc
je
add
mov
mov
jae
lds
mov
lds
dec
jae
pop
test
push
add
pop
add
jmp
inc
dec
jmp
insb
push
xor
adc
sub
mov
ret
out
pop
inc
push
push
jb
ret
mov
mov
mov
xor
add
inc
ds
jbe
xchg
cmp
fbstp
and
inc
inc
push
adc
arpl
jecxz
add
stos
mov
stos
out
test
mov
mov
mov
and
int
mov
jg
je
and
imul
out
mulb
imul
and
insb
gs
add
ljmp
enter
sbb
scas
es
or
jo
xor
rorl
and
int3
cs
push
push
mov
fnstenv
jg
fwait
mov
lods
test
pop
outsb
jle
push
je
inc
xor
or
pop
dec
lcall
push
mov
nop
pop
pop
and
mov
inc
lods
cmpsb
pop
and
pusha
push
fwait
pop
inc
sbb
pop
mov
dec
or
and
push
sub
sbb
scas
adc
fisubrl
scas
loopne
cmp
jo
inc
rep
popa
inc
sbb
sbb
adc
xor
pop
sti
xlat
rclb
lahf
aaa
jo
jae
rcrb
loope
sub
int
lods
or
scas
outsl
pop
mov
adc
mov
stos
or
addb
xchg
xchg
cwtl
inc
bound
mov
int
mov
push
call
pop
pushf
or
jae
adc
popa
jno
testl
jbe
xchg
jecxz
xorl
push
xor
sbb
orl
jns
xlat
push
sub
push
xchg
cmp
inc
or
adc
adc
xor
push
sub
adc
inc
pusha
or
popl
call
rcll
sub
loop
dec
sbb
popa
bound
jb
jl
inc
sub
adc
dec
sbb
test
inc
stos
jae
ret
mov
xor
adc
mov
push
shl
or
mov
outsb
push
jge
jmp
mov
in
or
movsb
add
or
mov
adc
fsubrs
pushf
popaw
push
dec
inc
dec
inc
pop
push
adc
or
movsl
das
stos
adc
mov
mov
adc
in
inc
adcl
rorb
gs
xorb
stos
inc
pusha
and
inc
adc
inc
frstor
push
and
pop
inc
jne
jecxz
sbb
dec
icebp
pop
mov
cmpsl
sbb
dec
fistpll
dec
mov
sub
loop
mov
sbb
push
mov
xchg
inc
add
or
mov
cmp
ret
push
addr16
ret
ljmp
jne
sti
xchg
mov
test
daa
dec
sub
lods
ret
xor
push
cmpsb
aad
push
mov
and
test
pop
sbb
imul
test
addb
adc
sub
daa
aad
mov
lret
inc
andb
sub
adc
jmp
and
mov
sbb
sbb
mov
dec
shrl
mov
lds
lods
fwait
jmp
pop
add
inc
addl
lods
lods
cwtl
xlat
inc
pop
mov
lcall
cmp
adc
jb
cmc
fwait
push
inc
push
jns
jle
push
daa
aaa
add
push
dec
ja
outsl
adc
mov
sbb
pop
loopne
mov
aam
mov
out
movsb
jne
xchg
imul
insl
popa
inc
pop
xor
and
sbb
mov
add
fs
jo
or
jne
nop
jle
or
cs
xchg
pusha
push
push
add
outsl
std
and
jb,pn
mov
xor
jo
cs
lods
ret
in
inc
outsb
dec
push
pop
inc
dec
mov
mov
shrb
sahf
xor
out
repnz
sub
jb
jb
push
push
ss
or
ss
inc
fidivs
das
mov
xchg
and
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
and
add
pusha
add
addb
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
push
add
add
add
in
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
add
add
nop
add
add
sub
leave
jae
add
add
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
insl
add
outsb
add
add
add
add
insl
add
add
add
add
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
push
add
add
add
jne
imul
add
push
and
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
push
add
add
add
push
add
and
imul
add
and
add
outsb
add
jb
popa
add
add
outsb
add
add
je
imul
je
jns
add
add
xor
or
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
jne
push
add
add
add
add
add
cmp
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
push
add
add
add
add
add
cmp
or
add
insb
add
push
add
jb
jae
imul
add
add
push
add
insb
add
popa
add
add
add
add
add
add
add
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
push
add
insb
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
add
add
add
imul
outsb
add
add
add
add
insl
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
mov
loop
lock
mov
mov
rcrb
stos
arpl
lock
pop
test
push
movsl
xorb
test
sub
in
push
scas
mov
iret
jp
or
cmp
pop
mov
shl
popf
xor
sahf
jnp,pt
outsl
or
jp
call
add
in
cmc
add
int3
pop
pop
sub
mov
pushf
xchg
and
fiaddl
getsec
or
test
cmp
add
and
xchg
flds
enter
ret
xor
test
xor
cwtl
push
pop
aaa
adc
sti
xchg
mov
iret
fdivr
shll
adc
outsb
mov
sbb
test
inc
pop
and
inc
cmp
mov
push
pop
dec
mov
and
add
fldenv
inc
lret
push
insb
jb
inc
sub
jae
enter
ds
xchg
mov
or
cmp
mov
iret
test
mov
fidivrs
xor
mov
pusha
inc
mov
daa
xorb
imul
adc
into
lods
pop
or
mov
inc
jg
add
in
loope
push
cmpsb
in
arpl
enter
std
pop
sbb
outsl
sbb
out
hlt
shr
lods
cmpsl
repz
adc
fcomp
push
or
inc
clc
outsl
push
jne
jns
cmpsb
pop
sub
jge
ljmp
fsts
xor
test
shll
push
add
xlat
and
sbb
jmp
mov
push
inc
cli
hlt
jle
loopne
out
adc
repnz
inc
imul
popa
lcall
jecxz
ficompl
push
add
orl
idivb
mov
mov
mov
jp
or
ja
lock
sbb
ja
inc
push
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
