push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
pushl
shlb
pop
add
call
add
pop
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
add
jmp
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
jmp
ret
std
sub
mov
cld
add
mov
mov
shl
sub
mov
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
push
pop
jbe
mov
popf
dec
call
add
in
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
lea
lea
sub
sub
mov
pop
mov
mov
mov
mov
push
mov
xorl
pop
sub
or
xor
push
mov
push
push
pop
push
pop
stos
shr
stos
shr
stos
shr
stos
pop
pop
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
add
cmp
jne
mov
pop
add
jmp
stos
stos
call
in
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
jp
add
cmp
add
data16
add
and
add
and
add
and
add
add
shlb
add
push
and
add
and
add
and
add
add
push
and
add
add
lock
add
add
fsubl
add
in
and
add
and
add
add
add
and
add
add
and
add
and
add
and
add
and
add
add
dec
and
add
add
shlb
add
add
add
add
and
add
add
cmp
add
push
and
add
add
add
add
add
add
adc
add
and
add
and
add
add
add
add
add
mov
add
add
add
add
add
and
add
add
jp
add
cmp
add
data16
add
and
add
and
add
and
add
add
shlb
add
push
and
add
and
add
and
add
add
push
and
add
add
lock
add
add
fsubl
add
in
and
add
and
add
add
add
and
add
add
and
add
and
add
and
add
and
add
add
dec
and
add
add
shlb
add
add
add
add
and
add
add
cmp
add
push
and
add
add
add
add
add
add
push
push
je
imul
inc
add
push
add
outsl
jae
dec
popa
outsb
fs
add
inc
jne
jb
outsb
je
push
add
call
inc
imul
bound
gs
add
call
inc
imul
bound
gs
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
rolb
insb
outsl
bound
inc
insb
popa
addr16
movsl
add
je
gs
imul
dec
add
insb
outsb
inc
add
aam
inc
gs
jb
jbe
push
jns
gs
add
add
imul
jb
je
arpl
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
je
jne
jb
outsb
je
jb
arpl
jae
jge
dec
jo
outsb
dec
jne
gs
add
cmp
push
jb
jbe
je
push
jb
imul
inc
add
add
popa
jo
jb
add
cmp
fs
imul
add
rolb
insb
outsl
bound
dec
outsl
arpl
add
add
imul
outsb
je
outsl
insb
add
inc
imul
insl
gs
insb
outsl
jae
add
inc
gs
je
dec
popa
outsb
fs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
sbb
insb
imul
outsl
outsb
add
add
je
popa
arpl
outsl
outsb
inc
add
ret
add
inc
jb
add
sbb
inc
jb
addr16
jne
jb
inc
imul
push
dec
inc
gs
popa
insb
insb
outsl
arpl
mov
push
dec
inc
gs
gs
imul
inc
insb
insb
push
outsb
jb
imul
jb
gs
mov
push
push
gs
popa
addr16
outsl
js
add
pop
add
addr16
imul
mov
inc
push
add
inc
jb
add
lods
add
gs
insb
inc
bound
je
add
add
addr16
arpl
jo
inc
imul
dec
dec
xor
cs
insb
add
inc
gs
jbe
imul
imul
add
push
push
dec
dec
outsb
jae
popa
insb
insb
inc
jb
jbe
jb
add
add
dec
dec
outsb
jae
popa
insb
insb
dec
inc
inc
inc
add
push
add
dec
inc
outsl
outsb
imul
popa
push
outsl
jne
arpl
dec
inc
inc
inc
inc
push
xor
cs
insb
add
xor
jae
push
push
popa
je
add
push
pop
push
dec
inc
dec
inc
cs
insb
add
sub
pop
mov
adc
rcll
add
inc
inc
mov
repnz
add
loope
jecxz
sub
out
sub
icebp
adc
aam
mov
out
lock
sbb
sub
xor
xchg
nop
std
rclb
int
jbe
sub
push
adc
mov
ret
hlt
and
in
in
leave
ss
mov
mov
dec
lcall
or
push
mov
decl
and
add
jecxz
nop
lock
das
outsl
and
fimuls
pop
sub
xor
repz
fyl2xp1
lods
scas
sub
fistpll
mov
aad
xchg
lds
mov
pop
test
jne
mov
jp
sarl
loopne
aaa
mov
xchg
loop
or
pop
push
pop
fsubrl
movsb
cli
inc
out
mov
pushf
mov
lahf
jmp
sub
dec
sbb
ss
hlt
or
orl
movl
add
adc
dec
ret
add
cs
arpl
das
and
or
push
stos
loop
jbe
dec
rsqrtps
loope
mov
and
sahf
rol
clc
andl
mov
lods
add
dec
cli
sub
push
xor
xchg
adc
xchg
dec
sbb
mov
jmp
cwtl
std
mov
adc
aad
mov
mov
adc
mov
cmpsl
lds
je
lods
call
cmp
in
dec
sbb
das
cmp
push
mov
add
fldenv
aaa
sbb
mov
push
mov
push
push
dec
cli
adc
cmp
out
xchg
xor
popf
mov
dec
xchg
xchg
fdiv
andb
inc
push
push
cmp
xchg
push
jg
mov
aad
out
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
test
add
clc
jbe
add
add
add
add
add
or
add
xchg
add
add
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
sub
add
movsl
movsl
pop
lods
lods
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
fwait
pop
xchg
xchg
xchg
or
jge
jp
jp
stos
lods
stos
add
cmpsb
test
mov
mov
mov
ret
leave
lret
lret
lret
int3
rcl
in
rcl
shl
rcl
iret
hlt
int3
int3
int3
hlt
enter
leave
leave
out
in
mov
mov
lods
stos
stos
lea
cltd
cltd
and
jae
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
lahf
add
mov
jae
mov
out
leave
lret
rcl
cld
fcom
fdivr
fcom
xlat
xlat
aam
aam
ror
sar
int3
int3
int3
aad
aam
rcl
iret
inc
ret
std
mov
mov
scas
iret
mov
xchg
and
add
push
add
add
add
add
add
add
add
add
stos
stos
stos
add
lods
scas
sbb
mov
jnp
mov
mov
dec
leave
lret
call
rcl
aad
aam
xlat
fcom
call
xlat
call
aad
dec
into
int3
dec
into
int
aad
dec
int
inc
mov
mov
ljmp
test
ljmp
pop
or
or
add
add
add
add
add
pop
add
add
add
add
add
add
push
pop
push
add
inc
add
pop
add
push
or
inc
or
sbb
push
add
add
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
leave
leave
dec
int3
int
rcl
sar
fdivr
xlat
xlat
xlat
call
aad
dec
int
dec
lret
int
into
inc
mov
sarb
pushl
test
jmp
cltd
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
imul
pop
pop
pop
fs
cmp
push
das
push
push
movntps
aaa
aaa
cmp
cmp
and
and
pop
pop
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
rol
ret
inc
leave
enter
sar
aam
aad
aam
call
ror
inc
enter
mov
mov
mov
ljmp
movsl
movsb
sahf
sahf
sahf
xchg
cwtl
xchg
lcall
addl
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
add
push
add
jno
jg
jle
jge
jg
jb
jno
popa
arpl
dec
dec
push
xchg
cmp
cmp
mov
outsl
outsl
jo
popa
popa
arpl
inc
inc
xor
add
add
add
add
movsl
movsl
movsb
add
mov
mov
mov
mov
mov
mov
mov
inc
mov
dec
lret
enter
mov
mov
ljmp
movsl
mov
call
xchg
xchg
xchg
cwtl
lcall
lahf
aas
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
outsl
outsl
add
pop
or
pusha
mov
incb
jnp
idivb
jmp
outsb
outsl
out
data16
data16
je
jle
jge
jp
jp
arpl
inc
inc
inc
cmp
pop
sbb
adc
prefetch
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
cmpsl
lcall
xchg
incl
addb
xchg
xchg
lahf
lahf
lahf
sti
mov
xchg
xchg
mov
jp
jp
cs
xor
add
add
add
add
add
add
add
add
add
add
mov
push
push
addb
in
mov
mov
addb
decb
mov
loope
jo
enter
mov
addb
xchg
addr16
cmp
and
jg
cmp
mov
test
lods
sti
lods
stos
lods
lods
stos
lods
test
test
movsl
movsb
movsb
std
lcall
decl
jge
jns
jp
jl
jnp
mov
cwtl
movsb
movsl
movsb
scas
mov
sti
mov
mov
mov
mov
mov
scas
lods
stos
xchg
sbb
add
add
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
xchg
incl
xchg
std
xchg
xchg
xchg
std
cwtl
cwtl
xchg
stc
xchg
xchg
xchg
in
mov
or
mov
mov
or
push
xor
inc
dec
insb
imul
xchg
leave
cltd
fistps
cltd
stc
nop
nop
std
mov
mov
xchg
mov
nop
nop
lcall
cmpsl
cmpsl
ljmp
mov
mov
mov
mov
std
mov
mov
movsb
movsb
movsb
addr16
jnp
scas
cmpsl
lods
add
pop
adc
cmpsl
scas
call
lcall
incl
mov
xchg
xchg
xchg
popf
popf
pushf
std
mov
mov
xchg
in
nop
in
xchg
push
jne
or
add
or
inc
es
daa
push
dec
dec
dec
data16
jb
mov
xchg
rclb
xchg
xchg
std
nop
nop
decb
xchg
xchg
lcall
cmpsl
test
lods
cmpsl
stos
pushl
cmpsl
scas
mov
xchg
stos
std
roll
mov
mov
ljmp
sahf
adc
add
add
pop
pop
adc
mov
jmp
sahf
cltd
pushf
decl
mov
decl
nop
xchg
xchg
xchg
popf
popf
sahf
movsl
mov
test
notl
jl
movsl
push
push
push
outsl
dec
dec
dec
pop
popa
arpl
jae
mov
lahf
test
mov
nop
xchg
in
xchg
xchg
testl
lea
jmp
mov
mov
pop
mov
aaa
jge
mov
ja
mov
movsb
mov
mov
mov
mov
movsl
mov
add
mov
add
pusha
adc
mov
lcall
lea
call
xchg
xchg
call
cwtl
xchg
lcall
lahf
mov
movsb
std
movsb
mov
lcall
xchg
xchg
les
cltd
fwait
in
xchg
cwtl
out
lea
nop
stc
xchg
xchg
std
xchg
jb
fwait
addr16
lahf
pop
cmp
push
cmp
inc
jge
mov
jns
mov
jae
mov
outsb
ljmp
adc
stos
or
or
mov
jge
mov
mov
stos
pushf
movsb
mov
mov
add
pop
pusha
adc
mov
ljmp
sahf
call
xchg
xchg
lcall
sahf
sahf
jmp
popf
sahf
call
xchg
xchg
call
cwtl
xchg
call
xchg
cltd
cld
cltd
cwtl
pushf
stc
lahf
lcall
popf
mov
xchg
insb
xchg
xchg
push
jge
xchg
dec
jp
lcall
pushf
and
sahf
sbb
mov
adc
stos
adc
lods
packuswb
lods
pcmpgtw
scas
adc
mov
imul
adc
pushl
ds
mov
lods
scas
scas
mov
mov
movsb
add
pop
pop
adc
mov
ljmp
sahf
call
pushf
popf
jmp
movsl
mov
jmp
xchg
cwtl
decl
mov
decl
cltd
jb
cltd
bound
call
sub
decl
pop
decl
add
call
add
lahf
pop
pop
jmp
sbb
pushl
push
outsl
pushl
sbb
je
mov
and
sarb
inc
xchg
lods
mov
lods
scas
mov
lahf
mov
mov
add
add
add
pop
pop
adc
lods
mov
shll
lcall
mov
cmpsl
ljmp
test
cmpsl
lcall
jle
decl
inc
outsl
decl
sub
mov
popa
decl
or
addb
decl
add
popl
pop
call
add
mov
or
mov
outsl
pushl
sub
mov
sub
inc
sub
inc
sub
dec
das
jg
leave
xor
inc
mov
cld
scas
mov
lret
movsb
dec
mov
movsl
mov
add
add
add
push
adc
test
ljmp
popf
jmp
test
ljmp
stos
lods
pushl
scas
lods
jmp
mov
mov
incl
or
push
incl
add
addl
incl
add
lea
push
call
add
cltd
add
sahf
add
movsb
add
ljmp
sub
shll
inc
aaa
test
leave
cmp
dec
cmp
call
cmp
mov
roll
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
mov
mov
lahf
cltd
sahf
ljmp
scas
scas
pushl
mov
pushl
mov
ljmp
decl
push
decl
xorps
mov
push
incl
add
decl
add
add
xchg
add
pushf
add
mov
add
lods
add
jo
les
test
lret
inc
dec
inc
mov
roll
call
dec
call
dec
xchg
fmuls
fimull
fisttpll
fsts
call
test
std
mov
mov
mov
mov
mov
add
add
add
inc
inc
adc
jp
movsl
sahf
mov
lcall
test
pushl
mov
mov
mov
mov
mov
mov
scas
mov
movsl
mov
decl
sbb
nop
sbb
mov
pop
decl
add
add
xchg
add
popf
add
add
cmpsb
add
stos
add
mov
arpl
shll
dec
dec
mov
aad
cltd
fcoms
fistl
fistl
fistps
ficoms
jmp
pop
mov
jmp
pop
lahf
fadds
mov
cmpsl
jne
lahf
sahf
or
cwtl
xchg
xchg
add
inc
adc
js
mov
movsb
test
sahf
cltd
popf
ljmp
mov
mov
mov
mov
mov
mov
ljmp
inc
jne
xchg
and
and
xchg
and
xchg
pop
call
or
popl
push
call
add
mov
add
lods
add
mov
gs
mov
xor
fisubl
fisubs
fisubs
in
cmpsb
jmp
cmpsl
call
push
cmpsl
jmp
test
mov
cmpsb
test
lahf
sahf
lahf
adc
xchg
xchg
xchg
add
inc
adc
jae
fwait
xchg
cltd
call
sahf
pushf
popf
ljmp
mov
pushl
mov
mov
mov
mov
cmp
sub
lcall
lcall
push
callw
add
lcall
ljmp
add
mov
pushl
adc
rolb
fsubrl
jmp
jo
jmp
jno
jmp
jb
call
je
in
je
out
jbe
out
jne
out
jae
jmp
mov
mov
cmpsl
cmpsl
lcall
sahf
add
jle
cmp
insb
outsb
js
lea
popf
lcall
mov
mov
mov
mov
mov
mov
movsl
scas
lcall
jo
sahf
cmp
sahf
cmp
lahf
xor
lcall
lcall
add
movsb
add
add
mov
popa
pushl
add
leave
sbb
fistl
jecxz
mov
jmp
jg
jmp
mov
in
cmpb
icebp
xchg
repnz
ljmp
inc
mov
test
daa
sahf
mov
mov
add
pop
add
xor
pop
jne
jg
out
test
xchg
xchg
xchg
pushl
mov
mov
inc
sarl
rol
pushl
insb
mov
fwait
cmp
mov
inc
jle
mov
pop
call
pop
jmp
add
scas
add
mov
data16
mov
add
dec
daa
cmp
call
mov
icebp
mov
push
pop
push
nop
push
xchg
clc
xchg
clc
ret
nop
mov
inc
stos
test
xor
popf
add
add
add
inc
add
xor
push
inc
dec
inc
jb
pop
dec
in
push
decl
mov
mov
mov
sar
ret
ret
inc
mov
xchg
lcall
dec
cmp
movsl
xor
pusha
lcall
add
add
lods
add
mov
mov
add
enter
fdivs
mov
out
xchg
ret
push
cltd
push
lcall
negl
enter
lret
sti
popf
int
sti
sahf
int3
cli
cltd
leave
push
xchg
ret
fidivrs
enter
mov
sahf
mov
xchg
add
add
add
add
cmp
jecxz
pusha
popa
decl
mov
mov
mov
sar
inc
vshufps
mov
mov
ljmp
dec
xchg
mov
pop
pop
lcall
add
add
mov
popa
mov
add
leave
add
rorb
jmp
inc
xchg
in
mov
push
cmpsb
into
push
cmpsb
int3
push
cmpsl
iret
cld
cmpsl
sar
cli
movsl
into
sti
cmpsl
into
cld
stos
sar
cld
test
iret
push
sahf
jmp
mov
dec
lret
mov
mov
sahf
mov
xchg
add
cltd
fwait
add
add
add
xor
sub
or
bound
pop
xlat
je
jo
mov
rol
rol
mov
ret
mov
dec
leave
leave
inc
ret
mov
cmpsb
jmp
push
mov
lods
dec
test
lahf
sbb
popf
add
jmp
add
mov
mov
add
into
add
add
loopne
jl
out
pop
cmpsb
push
sahf
leave
cli
scas
aam
cld
mov
sti
mov
cli
scas
sar
mov
mov
std
mov
cld
mov
std
mov
mov
push
cmpsb
jmp
mov
dec
enter
mov
ficompl
xchg
xchg
or
add
add
xor
sbb
dec
outsl
outsb
jo
xchg
lcall
fsubr
aam
not
rcl
std
lret
dec
leave
lret
lret
lret
lret
lret
inc
leave
leave
mov
lods
ljmp
push
mov
stos
cmp
jmp
add
mov
arpl
mov
add
roll
outsb
call
add
add
call
jae
sti
scas
aam
mov
fcos
cld
mov
fdivr
std
mov
xlat
mov
fdivr
inc
mov
int3
jmp
mov
call
lret
mov
lahf
sahf
jo
xchg
xchg
or
add
add
xor
xor
add
add
pop
pop
pop
or
mov
pop
out
jmp
test
in
leave
fstp
fsubp
fcmovu
fcomi
fcomp
fsqrt
fcom
std
into
iret
into
mov
imul
jmp
add
mov
arpl
mov
add
lret
call
add
fldl
jne
jecxz
jbe
out
xor
sti
mov
loopne
inc
loope
inc
loope
std
inc
fdivrp
dec
fdivrp
std
leave
std
leave
dec
dec
cld
mov
lret
lret
into
mov
mov
xchg
adc
add
add
std
incl
std
incb
incb
repnz
or
in
in
pop
jmp
in
sub
in
in
dec
call
ljmp
jecxz
out
fcmovnu
fucomp
ret
stc
lods
jo
test
ja
mov
add
stos
add
mov
mov
add
into
add
xlat
add
add
ljmp
cli
mov
loop
cld
lret
in
dec
in
dec
in
dec
jecxz
std
int
std
into
loopne
call
loop
std
shl
std
shl
std
shl
cld
ret
out
mov
inc
out
cmpsb
cmpsl
test
xchg
xchg
xchg
sbb
fwait
lcall
add
add
std
std
add
std
add
clc
testb
repz
add
repz
out
icebp
lock
out
repnz
cmp
in
in
pop
fnstsw
loopne
mov
xchg
sti
sahf
es
add
pop
ljmp
fs
add
enter
roll
jo
flds
jbe
in
jns
in
push
pop
test
std
iret
in
std
iret
in
shr
std
shl
call
in
std
aad
xlat
out
xlat
jmp
fucompp
cld
iret
loop
repz
jecxz
fcos
leave
leave
leave
rep
test
fwait
xchg
xchg
xchg
and
xchg
xchg
add
cld
add
std
stc
add
cld
cli
add
cmc
repz
aad
xor
mov
xchg
negb
add
cmpsl
add
scas
add
mov
add
lret
call
add
fildl
jne
out
ja
in
sbb
cli
fdivrp
fldl2e
fucomi
fldpi
fucomi
std
fldpi
std
fucomi
fucomp
std
fucomp
jmp
jmp
loopne
fsubrp
cld
shl
push
aad
out
rcl
iret
clc
stos
lods
lods
lods
xchg
xchg
xchg
jo,pn
jo
xchg
xchg
xchg
add
loopne
add
mov
cltd
repnz
and
mov
add
mov
arpl
mov
add
int3
add
aam
jae
filds
jae
jmp
sub
aam
fdivp
fucomi
fucompp
fldl2e
fsub
std
jecxz
aam
cld
iret
loopne
sti
iret
loop
stc
int
clc
int
push
ret
xlat
out
mov
fcomp
sti
mov
mov
cltd
fwait
cltd
cmp
fwait
add
xlat
add
enter
rol
lods
xchg
jmp
add
mov
arpl
mov
add
rolb
jo
fadds
jb
loop
js
call
xor
enter
loope
sti
lret
loop
cli
clc
rcl
cmc
mov
sar
lock
into
out
mov
lret
jmp
ret
jmp
ljmp
in
mov
mov
xchg
add
add
add
into
lret
add
sarb
mov
add
test
popa
pushl
add
les
push
into
push
jo
rorl
jmp
sbb
jmp
scas
lret
mov
out
leave
std
loopne
cld
loopne
ret
mov
neg
mov
enter
into
in
lret
shl
aad
call
in
test
out
out
popf
jmp
lret
leave
push
stos
lods
lods
adc
test
test
lahf
mov
rolb
ret
mov
stos
aam
dec
cmp
cmpsb
sbb
scas
es
mov
js
mov
inc
xchg
ret
push
mov
leave
fs
mov
out
mov
mov
lret
int
ror
lret
mov
into
shlb
rcl
jg
jb
gs
jecxz
call
in
in
xor
cmc
cmc
mull
icebp
lock
fstp
or
mov
int3
add
add
add
rol
mov
scas
mov
test
lcall
jne
ljmp
mov
sarb
test
mov
pushf
lret
mov
leave
int3
jp
into
shlb
iret
rclb
rcl
dec
aad
xlat
inc
rcl
xor
fcmovnu
daa
fcomp
fcompl
fstl
fsubp
loope
loopne
jecxz
out
ljmp
cld
testb
std
sti
add
incb
std
add
mov
mov
mov
lods
scas
xchg
mov
mov
mov
mov
rcll
lds
leave
xor
int3
lret
ror
and
aad
sbb
aad
adc
aam
rcr
aam
rcr
fadds
fcmovnu
add
add
in
add
in
ljmp
std
std
add
mov
add
rol
ret
vmovaps
mov
mov
push
ret
or
enter
leave
add
into
leave
add
aam
add
aam
aam
aam
aam
add
aad
add
xlat
loopne
flds
loopne
loope
filds
jecxz
out
lock
lock
std
std
add
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
mov
mov
mov
ja
test
test
pop
add
add
add
add
add
add
mov
scas
adc
mov
aam
rcl
jmp
rcl
cmc
aam
sar
ror
iret
cli
int3
int3
int3
stc
lret
hlt
mov
mov
iret
lods
lods
stos
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
jg
addb
inc
inc
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
leave
cld
iret
rcl
aad
call
aad
call
ror
dec
int
dec
int3
lret
mov
mov
cld
stos
stos
lods
icebp
cwtl
cltd
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
jne
jne
je
jne
gs
dec
dec
inc
cmp
sub
sub
ss
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
dec
lret
rcl
sar
rcl
sar
lret
inc
mov
sarl
ljmp
lahf
popf
xchg
cwtl
xchg
jmp
jno
xchg
push
pop
push
dec
add
add
add
add
add
add
cmpl
test
jns
imul
pop
pop
pop
movsb
push
push
push
stos
imul
push
pop
pop
cmp
cmp
pop
jno
outsl
adc
mov
mov
sar
mov
mov
mov
ljmp
pushf
lcall
xchg
xchg
lcall
xchg
dec
dec
dec
dec
adc
wrmsr
add
add
add
add
add
pop
lcall
pop
fwait
xchg
lcall
addl
jmp
jns
sarb
jnp
jnp
jns
je
je
push
push
push
cmp
aaa
pushf
pushf
pushf
mov
scas
scas
rep
scas
scas
sti
scas
scas
scas
std
test
sahf
pushf
call
xchg
call
mov
lods
jmp
scas
scas
leave
movsl
movsb
movsl
cltd
jb
jb
adc
adc
add
add
add
add
outsl
outsl
insl
pop
xchg
mov
loop
lcall
mov
sti
xchg
xchg
xchg
lock
nop
nop
fimuls
mov
jp
pop
pop
inc
inc
inc
inc
dec
outsl
outsl
outsl
orl
cwtl
lcall
mov
xchg
xchg
xchg
lcall
movsb
test
std
mov
scas
mov
mov
mov
cmpsb
mov
addb
add
add
add
add
popa
or
scas
mov
cmpsb
sahf
movsl
decl
lea
xchg
cwtl
cwtl
std
popf
lahf
mov
negl
addb
push
push
push
outsl
imul
jle
subb
nop
xchg
lock
mov
lcall
mov
pushl
pop
mov
mov
mov
mov
out
scas
lods
insl
stos
stos
test
add
add
add
pop
or
mov
in
movsb
test
xchg
nop
xchg
call
xchg
xchg
lcall
cltd
fwait
lcall
cli
xchg
xchg
cltd
jmp
xchg
xchg
aam
mov
xchg
jne
notb
jg
pushf
dec
jl
mov
xor
je
mov
insl
pushl
sbb
pop
mov
mov
scas
scas
jle
movsb
movsl
push
popa
pusha
pusha
or
mov
in
mov
cltd
lcall
mov
lahf
call
decl
jnp
std
xchg
jae
cld
xchg
pop
cmp
dec
jns
nop
cmp
nop
daa
push
lcall
or
ljmp
pushl
sbb
mov
and
pop
xchg
mov
scas
lods
xchg
popf
popf
popf
adc
add
add
pop
pop
popa
or
mov
stos
mov
mov
ljmp
test
lcall
pop
jnp
mov
push
mov
decl
adc
or
mov
push
decl
add
popf
add
cmpsl
or
mov
jae
mov
jle,pn
lds
jle
xor
lret
dec
pop
xchg
inc
test
mov
cmpsl
test
sbb
add
add
pusha
pop
pop
or
movsb
stos
in
mov
cmpsl
ljmp
mov
pushl
mov
decl
push
pop
incl
add
decl
add
xchg
add
mov
add
mov
insb
inc
aaa
cmp
inc
mov
rolb
aam
nop
call
inc
xchg
fmuls
call
bound
stc
mov
mov
mov
std
add
add
add
popa
or
popf
mov
ljmp
mov
mov
mov
ljmp
push
jnp
nop
pop
call
adc
push
decl
add
sahf
add
add
lods
add
mov
dec
nop
fstps
fcompl
fistps
jmp
pop
mov
fisubrs
dec
cmpsl
mov
ret
cmpsl
xor
addb
add
add
dec
pop
jle
jl
pushf
xchg
cltd
jecxz
mov
mov
mov
mov
mov
mov
mov
mov
sub
lcall
and
xchg
push
pop
call
add
cmpsb
add
scas
add
push
push
jmp
insb
test
jmp
jo
out
jae
call
test
mov
inc
jg
addl
dec
dec
pop
insl
outsb
push
mov
cwtl
pushl
mov
mov
mov
jne
lcall
cmp
popf
sub
xchg
or
pop
jmp
popa
pushl
or
dec
xchg
jmp
js
jmp
test
push
mov
push
xchg
mov
test
push
cltd
fwait
cltd
add
sub
push
push
push
dec
pop
pushw
loopne
mov
mov
mov
ret
mov
sahf
jmp
inc
cmp
sub
fwait
or
mov
add
mov
fs
mov
adc
mov
push
xchg
xchg
push
cltd
push
fwait
enter
lret
push
cwtl
lods
inc
mov
stos
popa
lahf
lahf
mov
add
inc
pop
pop
pop
pop
fisttpl
mov
mov
ret
ret
xchg
test
cmpsb
pop
xchg
lods
dec
cmp
pop
push
sahf
add
cmpsl
add
mov
arpl
mov
add
fisubl
cmp
jnp
push
mov
iret
clc
test
sti
test
sar
cld
lods
sar
sti
cmpsb
int3
jmp
mov
inc
rol
stos
test
sahf
or
add
add
push
push
push
aaa
jb
jae
test
into
into
out
iret
lret
cmc
lret
int3
int3
sti
lret
std
mov
mov
stos
bound
jmp
add
mov
fs
add
int
outsl
fiaddl
xchg
push
xchg
sti
mov
cld
mov
xlat
cld
mov
xlat
std
mov
sar
jmp
rol
scas
lods
lods
mov
add
add
add
add
pop
or
aam
dec
loope
loop
fsubp
loopne
fcmovnb
fcmovnu
fcmovnu
aam
fsubr
shll
test
push
pop
ljmp
add
enter
xlat
add
or
dec
mov
sti
inc
loope
std
dec
fdivrp
dec
loopne
dec
loopne
std
out
mov
lret
divb
pushf
sahf
sbb
add
add
std
incl
std
add
jmp
in
sbb
in
in
xor
loop
in
lds
mov
mov
add
mov
inc
add
int
outsb
faddl
jbe
jmp
insb
mov
sti
ret
cld
iret
out
call
in
std
shl
shl
call
out
jmp
push
enter
int3
sar
mov
mov
mov
add
add
std
add
incb
cld
cld
pop
aad
mov
pop
mov
lahf
or
ljmp
add
ret
add
rolb
jno
filds
jne
in
and
cld
shl
std
fsubr
fldl2e
fsubr
cld
fld1
std
xlat
call
push
sti
mov
popf
popf
das
add
add
into
int
or
fs
mov
add
mov
add
aam
jno
loop
js
in
xor
stc
int3
loopne
cli
lret
loopne
cmc
hlt
ret
icebp
ret
std
out
ret
out
sar
out
shl
ljmp
ljmp
stos
das
std
incb
aad
push
mov
jae
or
imul
sbb
lret
and
cs
ficoms
clc
loop
mov
out
jecxz
lret
mov
loope
mov
lret
sarb
in
fistpl
in
call
rorl
mov
add
lods
stos
lods
add
xchg
movsb
les
pop
mov
mov
nop
fidivrl
jg
rol
lods
mov
mov
ret
ror
rol
lret
insl
aam
int
ror
iret
dec
fcom
fnstcw
loopne
loopne
in
fisubs
jecxz
icebp
adc
in
jmp
faddl
std
incb
std
std
add
mov
outsb
scas
mov
scas
mov
push
mov
mov
xor
enter
rcl
pop
rol
adc
rcl
or
loopne
or
int3
into
add
std
add
std
add
add
add
into
int
lds
int
int
lods
stos
stos
add
std
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
lcall
ret
enter
leave
mov
ret
mov
scas
scas
scas
insb
lods
stos
lods
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
lods
stos
lods
add
mov
enter
sar
aam
aam
rcl
sar
into
iret
into
std
stc
mov
mov
test
jle
sbb
push
add
add
add
add
add
add
add
add
jae
jno
addr16
inc
inc
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
into
int3
call
aad
dec
into
into
inc
mov
mov
scas
lods
lcall
mov
push
add
add
add
add
jne
jne
test
adc
outsb
outsl
ret
bound
outsl
outsb
outsl
jb
bound
pop
pop
pusha
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
lcall
cwtl
cwtl
lds
jae
daa
es
das
add
add
add
add
jae
je
popf
xchg
fwait
mov
test
mov
xchg
or
addl
dec
dec
push
inc
mov
fwait
into
movsb
mov
mov
decb
lcall
cmpsl
lods
cld
mov
mov
ret
xchg
aas
sub
sub
add
add
xorb
mov
cmpsl
cld
mov
xchg
xchg
xchg
cld
sahf
pushf
pushf
cmc
cwtl
lcall
push
push
push
imul
jge
mov
xchg
testl
xchg
mov
jno
mov
scas
lods
push
lods
lods
stos
add
add
add
cmpsl
scas
test
xchg
xchg
xchg
lcall
cltd
lcall
cltd
cwtl
std
xchg
xchg
xchg
out
xchg
mov
loope
jne
out
nop
arpl
std
fwait
inc
jbe
cmpsb
ss
lods
sub
mov
outsl
pushl
aaa
jnp
mov
mov
imul
int3
add
xchg
pop
lods
movsb
stos
test
sahf
popf
sahf
jmp
cmpsb
call
imul
inc
jae
lea
push
lea
popa
call
or
or
scas
sbb
pushl
es
shlb
inc
inc
xchg
rcrb
subl
je
push
mov
movsl
test
test
mov
pushl
xchg
decl
or
mov
decl
pop
jmp
adc
shlb
dec
inc
mov
iret
inc
mov
inc
mov
dec
xchg
dec
cltd
mov
mov
mov
mov
add
add
imul
cmpsb
mov
scas
pushl
mov
mov
call
pop
pop
call
add
mov
add
mov
push
xchg
fcompl
loope
mov
jmp
cmpsl
call
lcall
cmpsl
test
pop
add
add
arpl
adc
pushf
lcall
mov
mov
scas
lcall
xor
cwtl
and
xchg
or
lahf
add
stos
add
mov
xor
jmp
outsl
lods
jmp
ja
in
jl
out
jge
push
jle
fstps
mov
mov
add
add
adc
imul
mov
mov
mov
ret
ret
mov
arpl
jmp
add
add
mov
gs
or
dec
cwtl
in
mov
push
xchg
push
cwtl
enter
enter
mov
cmpsb
sub
aas
aas
aas
adc
push
xchg
mov
mov
inc
ret
inc
mov
xchg
ljmp
sbb
cmpsb
add
mov
gs
add
adc
jmp
scas
clc
cmpsb
into
stc
lods
iret
cli
lods
sar
std
scas
sar
std
lods
sar
in
mov
inc
mov
movsb
ds
incb
xor
outsl
jo
scas
mov
mov
mov
aam
rcl
out
lret
enter
xchg
jmp
add
add
add
call
nop
std
mov
inc
std
rcr
cld
rcr
lock
ret
in
test
addl
stos
stos
stos
add
jmp
or
call
in
outsb
movsb
and
pop
mov
add
fiadds
cld
mov
std
int
call
in
shl
std
aam
aad
push
enter
int3
in
lods
scas
scas
popa
jg
jg
incl
std
std
incb
int3
int3
shrl
mov
add
mov
add
loop
jp
hlt
push
cmpsl
std
loop
std
aad
std
out
std
shl
cld
shl
sti
shl
push
fsin
fcmove
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
push
gs
mov
push
je
fstpl
jg
jmp
stos
cld
out
mov
shl
call
mov
shl
out
rcl
ljmp
scas
push
cltd
cltd
fwait
add
rol
or
popf
lods
xchg
inc
and
push
mov
shll
lret
js
mov
xlat
mov
int3
adc
int
xlat
int
pop
fst
aad
in
loopne
call
out
in
sbb
rol
add
mov
lods
arpl
stos
mov
les
lds
ret
sbb
bswap
into
int3
or
aam
incl
jg
jg
incl
stos
incb
mov
incl
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
jecxz
pop
mov
std
and
jns
in
mov
inc
mov
sub
ficoms
mull
xchg
inc
inc
dec
hlt
mov
dec
incl
in
push
push
imul
sub
mov
in
mov
jmp
insl
xor
sbb
xor
mov
or
lret
fwait
fwait
sbb
inc
jmp
xor
mov
xchg
pop
out
cmp
lahf
or
std
pop
jle
cmp
out
mov
push
dec
jno
dec
into
pop
lret
push
mov
data16
std
cmp
call
mov
sub
add
clc
pop
xchg
and
pop
mov
or
mov
adc
or
adc
pop
push
imul
test
sbb
and
cmpsb
mov
adc
jmp
negb
int3
int
outsl
adcb
push
stos
insb
aam
mov
pop
pop
shll
test
fwait
in
cmc
cli
push
jo
pand
xchg
cld
add
adc
into
lock
imul
arpl
and
jl
call
sub
ljmp
inc
mov
push
xchg
mov
fcom
dec
fdivr
and
and
jg
sahf
cmpsb
dec
jp
test
nop
gs
insl
sti
cmc
call
cmp
jnp
ds
popf
or
dec
dec
mov
inc
jo
jg
andb
pop
rorl
pop
jp
push
and
outsl
pop
call
cmp
xchg
xchg
mov
popf
inc
or
pop
lods
xor
xlat
js
xchg
xchg
mov
lock
mov
out
cmpsw
mov
dec
xchg
aaa
repz
pop
out
sbb
inc
fstpt
loop
jo
popf
lods
push
and
aad
sub
loop
push
mov
and
insb
int3
sbb
and
mov
mov
je
into
lods
cmc
repz
lret
dec
sbb
mov
lods
icebp
lods
dec
out
mov
jbe
cmp
mov
mov
jp
mov
jnp
mov
xchg
scas
mov
outsl
push
xchg
out
xor
scas
outsl
ljmp
mov
out
inc
inc
cli
adc
popf
sbb
and
movsb
inc
dec
pushf
out
daa
les
dec
inc
push
nop
pop
jle
jl
add
pusha
test
cmpsb
shl
outsl
es
lret
loop
adc
or
mov
add
sub
adc
xor
mov
sub
and
pusha
repnz
pushl
push
rcll
cmp
sub
sbb
pop
clc
movsb
sub
sub
push
in
cld
mov
jge
lds
and
lret
out
mov
add
in
mov
stos
insl
sti
pop
mov
fdivrs
mov
cmp
subl
in
lods
xor
dec
cmp
pushf
outsl
jo
sub
andb
imul
movsb
les
sub
lods
pop
cmp
int3
ss
mov
inc
xchg
xchg
sub
jecxz
les
stos
adc
mov
std
pop
inc
stos
add
jl
les
xor
imul
inc
mov
cmp
adc
push
incl
jnp
cmp
push
mov
xchg
xchg
stos
outsl
fwait
mov
jge
lcall
stos
in
cmp
mov
je
pop
repnz
insb
cli
xchg
sahf
pusha
jns
sarl
addb
or
outsl
mov
lcall
fisttpll
dec
push
mov
nop
cli
pop
adc
dec
add
test
mov
aaa
mov
mov
jae
fs
insb
jo
fldt
xor
jg
ds
or
jecxz
fisubrs
aam
lahf
and
dec
or
lods
and
incl
mov
sbb
dec
mov
sbb
leave
roll
mov
mov
jg
jecxz
push
dec
sbb
leave
pop
cmp
cmp
dec
adc
sub
push
jns
xor
mov
outsb
xor
pop
addr16
mov
rorl
sub
in
mull
or
jbe
pop
cmp
cmp
faddl
and
mov
subl
out
mov
scas
nop
cmp
push
inc
or
mov
xor
mov
adc
fcmovnu
mov
negl
sti
out
cmp
movb
adc
inc
and
inc
lods
push
xchg
inc
bound
repz
inc
inc
dec
loop
push
mov
fsubr
ret
cmpb
out
lds
lods
jno
dec
ds
push
ds
push
cmp
in
inc
fiaddl
lret
lcall
ss
sbb
iret
scas
jp
aas
test
or
lahf
inc
rol
mov
fwait
xor
repz
stos
and
xchg
divb
jae
jl
xor
cs
in
fs
mov
lcall
mov
call
push
xchg
mov
xor
xor
int
lds
repnz
cmp
leave
cmp
fmul
addr16
add
sbb
jle
adcb
lock
jae
lds
bound
push
xor
cmpsb
ja
insb
add
push
in
movb
dec
sub
jmp
cmp
and
xchg
les
movsb
out
daa
loope
pop
testb
fidivl
xchg
pop
pop
add
shll
mov
push
lahf
ss
scas
mov
movsb
cmp
xchg
lock
mov
imul
jo
sti
cmp
mov
xor
cmp
shr
push
inc
fadds
pop
not
bound
xchg
clc
jle
sbb
xchg
jo
ret
xchg
movsl
cmp
pop
loopne
mov
ret
pop
push
mov
xchg
loop
loope
imul
pushl
cmp
ret
sarl
adc
push
insl
push
test
push
in
pop
fisubrl
jecxz
xchg
adc
dec
mov
stc
jae
mov
or
lods
pusha
sub
jl
push
lret
jne
adc
cmpb
or
xchg
add
cwtl
test
lret
cld
leave
dec
sbb
decb
test
mov
ret
pop
cmc
shlb
dec
adc
pop
inc
imul
ja
mov
xchg
jmp
inc
xlat
ds
mov
pop
pop
cmc
nop
pop
cmp
mov
adc
mov
lock
fwait
xor
add
xor
mov
sub
fsubrl
cmc
mov
cld
shrb
push
adc
andl
dec
inc
cmp
loope
jecxz
aas
push
dec
cmp
das
addr16
sub
pop
ja
sbb
ja
and
xchg
add
out
add
mov
out
mov
mov
test
decb
lock
mov
xor
lcall
in
test
and
dec
xor
in
stos
shrb
fdivrl
xchg
inc
int3
lret
xor
push
leave
call
jno
sbb
sahf
dec
clc
mov
pop
roll
jnp
lret
lods
adc
inc
int
jmp
xchg
pop
jno
push
mov
movsb
or
inc
negl
jb
sbb
arpl
stc
nop
jecxz
ljmp
mov
ss
adc
mov
fldenv
fcoml
mov
cli
out
nop
daa
jg
sbbb
mov
mov
dec
ds
dec
dec
popf
loop
fimull
cmp
mov
popa
clc
mov
ret
hlt
daa
je
pop
adc
shrb
test
lret
lods
inc
lock
stos
xchg
stos
inc
into
int3
mov
mov
fistps
mov
cmp
push
insl
icebp
fdivl
or
jecxz
out
dec
out
xchg
cmp
pop
mov
pop
lcall
cld
sub
cmp
fnstcw
push
xchg
sub
dec
loop
out
push
jmp
fs
aaa
roll
mov
sbb
push
enter
inc
fstps
add
scas
imulb
shlb
pop
sahf
mul
in
adc
popa
clc
mov
ret
pop
jmp
or
cmpl
cmp
cmp
jo
mov
les
repz
xlat
cmpsl
ds
xchg
out
enter
fldt
jecxz
cld
jmp
out
aas
stos
inc
imul
std
orb
test
mov
call
cmpsl
mov
push
mov
fimull
mov
in
jns
fisubrs
add
lock
mov
test
and
mov
into
gs
lret
mov
fsubrl
pop
cmp
or
cltd
add
xchg
sub
pop
loope
jecxz
pop
mov
mov
lcall
lods
sub
pop
cmc
push
dec
insb
add
repz
popa
outsl
push
push
mov
dec
jecxz
test
push
roll
movsl
stos
sbb
dec
add
sbb
ds
scas
or
cltd
xor
rcrl
or
pusha
not
lods
ss
mulb
out
insb
add
push
mov
pusha
or
pushf
xor
mov
out
cmpsb
cmp
mov
pop
xchg
fsubs
cmp
push
adc
mov
sbbl
adc
mov
adc
add
mov
mov
inc
loop
enter
sub
adcb
call
push
mov
mov
addl
xchg
push
pop
mov
adc
lret
mov
frstor
mov
out
insb
add
cwtl
and
jae
loope
adcb
jo
sbb
pop
mov
or
and
shrl
into
xchg
push
xchg
add
bound
add
cmc
xor
xchg
addr16
ljmp
test
test
cmp
pop
repnz
jmp
shll
popf
loop
aaa
aam
cmc
jle
out
fidivl
or
fs
adc
or
int
fdivl
andl
rcll
xchg
xor
lds
dec
jecxz
out
dec
fdiv
sub
daa
cli
call
cmpsl
cld
or
jle
shlb
aam
test
inc
xchg
sub
mov
in
push
xlat
sahf
xor
xor
sub
sub
or
inc
fucomp
movsb
lret
adc
test
mov
das
jp
cmpsl
ds
cli
xchg
dec
leave
push
in
mov
fsubl
int
inc
ffree
out
sub
push
mov
dec
add
add
es
fcoml
mov
xor
mov
mov
pop
jno
push
test
js
jno
mov
pop
jnp
mov
or
jb
clc
mov
test
jge
mov
ja
scas
pop
daa
mov
ret
push
aad
out
xchg
not
push
or
pop
sahf
jl
inc
fcmovbe
popf
lcall
xor
fidivs
in
mov
jne
imul
movsb
or
fcoml
push
mov
push
in
out
sub
dec
bts
loop
loopne
mov
mov
adc
leave
and
stos
fistl
cmpsl
int3
inc
mov
xor
fstps
shll
int3
fcoms
repz
inc
test
xchg
sub
adc
jno
add
into
xor
fnstenv
cmpsl
fs
pop
testl
lret
es
ds
testl
data16
and
int3
inc
divb
int
xchg
inc
fnstenv
cmp
mov
cmp
push
sub
fdivl
rcr
mov
sbbb
aam
cmpsb
lds
insl
fsubs
lea
xor
jg
or
cli
or
adc
pushf
xor
dec
out
push
loopne
adc
push
leave
cmpsb
cmp
fdiv
aam
sub
xor
xor
adc
andl
mov
ja
imul
leave
sub
mov
fildl
int3
push
xor
fbld
les
add
jb
push
popf
adc
lret
loopne
mov
test
sub
adcb
dec
sbbl
pushaw
sub
push
pop
movsl
cmp
jb
pushf
arpl
lret
bound
imul
mov
popf
xor
popf
mov
sub
jle
adc
inc
fmuls
out
xchg
testl
jnp
sbb
movzwl
gs
xor
xchg
mov
ret
pushf
xor
mov
enter
sbb
lods
mov
adc
shrl
mov
insl
add
inc
and
adc
in
addr16
testl
add
lea
mov
sahf
fucomp
push
out
fidivs
hlt
sahf
std
xchg
icebp
sub
stos
inc
test
mov
repnz
jo
cmpsb
aaa
and
mov
sti
xchg
mov
fsubl
mov
out
mov
loopne
imul
add
mov
stc
nop
jne
fidivs
or
add
mov
loopne
mov
sbbb
inc
pop
icebp
jnp
push
ljmp
xchg
add
cmc
mov
sbb
lods
cmp
sbb
ds
imulb
sar
xchg
ret
leave
cmp
adc
or
or
imul
sahf
mov
das
or
cs
out
pop
rcrl
push
mov
negb
xor
shrb
add
add
out
mov
sbb
or
push
jle
xor
xchg
xchg
sub
xor
mov
lds
notb
adc
ja
dec
imul
out
lret
inc
mov
push
sub
lcall
pop
pop
cmp
je
lds
fnstenv
filds
lahf
je
xchg
sub
mov
inc
faddl
mov
sbb
rcll
je
scas
hlt
inc
fidivs
rorb
mov
out
dec
jecxz
or
xchg
js
dec
loope
cltd
dec
loopne
out
rol
sbb
loope
dec
loop
add
lds
mov
jp
and
inc
fadds
test
shl
jns
idivl
adc
shlb
leave
nop
mov
shrl
mov
mov
dec
inc
fcoml
gs
mov
rcrl
aad
aaa
into
testb
mov
movsb
push
stc
sbb
fdivrl
mov
mov
fiaddl
inc
xlat
sub
xor
push
dec
dec
loope
daa
fs
pop
mov
jae
stos
repz
das
and
inc
mov
cmp
pop
ret
jle
ja
icebp
push
mov
mov
popf
push
in
push
nop
shr
std
xchg
fsubl
in
insb
into
gs
lock
cmp
mov
or
dec
sbb
xchg
jae
mov
scas
dec
gs
add
jge
movsl
fidivl
mov
orb
mov
pop
sub
sarl
xchg
sub
lcall
xor
montmul
push
movsl
cmp
loope
loop
push
aad
jo
sbb
adc
inc
inc
movsl
cmp
fs
clc
xor
bound
enter
cmpsb
mov
stos
iret
add
mov
add
push
inc
pop
std
int3
arpl
aam
mov
and
pop
xchg
dec
das
cmp
ljmp
push
movsb
fnstenv
jmp
idivb
sbb
sub
pop
push
jo
fwait
popa
loopne
xchg
shll
mov
cmp
dec
in
fs
push
jbe
mov
movsl
push
pop
inc
cmp
sub
dec
push
push
cs
negl
cmp
leave
mov
fildll
or
push
cmpsb
clc
and
inc
into
dec
arpl
mov
fwait
xchg
cltd
jno
lock
iret
jnp
mov
dec
mov
add
or
mov
lret
mov
cltd
add
popa
dec
addl
mov
pop
fwait
xor
stos
mov
call
sub
setbe
rorb
in
in
or
mov
xchg
mov
or
sbb
clc
and
adc
aaa
fwait
mov
in
lret
mov
sti
pusha
out
cmp
xchg
insl
add
mov
fwait
std
xchg
sub
cmc
mov
pop
sub
arpl
inc
scas
and
pop
or
outsl
arpl
pop
dec
loopne
sub
or
push
mov
nop
in
aas
out
mov
sbb
gs
ss
clc
pop
jb
loope
or
cmc
mov
lods
inc
push
adc
pop
push
ret
mov
xor
lock
cmp
jp
adc
xchg
scas
lcall
dec
cld
xchg
jg
shrb
or
ret
add
push
fsubrs
ljmp
fadds
jle
xchg
stc
jg
sub
stos
inc
dec
or
mov
int3
dec
out
push
mov
imul
int
mov
mov
rclb
dec
fucomip
stos
ret
or
lret
mov
call
dec
and
pop
stos
fs
idivl
and
mov
or
pop
lock
dec
loop
test
add
hlt
movsb
and
pop
push
lds
movsl
fnstenv
xchg
test
sub
enter
ljmp
cld
xchg
cmp
mov
adc
call
dec
inc
push
out
inc
test
push
and
repz
or
mov
and
mov
sbb
xchg
jp
jge
dec
ss
inc
test
divb
int
push
xchg
orb
mov
cmc
aas
loope
xor
sahf
imulb
out
gs
inc
fucomi
loop
stc
ret
sbb
int3
xchg
lods
inc
out
pop
repnz
or
cmc
inc
into
icebp
mov
popa
push
jmp
or
cmpsl
jp
stc
fwait
jmp
inc
fnstsw
cmp
add
mov
push
movsl
push
mov
cmpsl
jp,pt
sub
in
and
hlt
popa
dec
lret
std
ds
or
fs
pop
cmc
sbbl
repnz
mov
sub
int
add
cmc
mov
loopne
into
shrb
in
subl
or
push
mov
stc
out
cmpsl
mov
fmull
dec
insl
fdivl
push
inc
pushf
mov
pushf
out
add
ds
nop
daa
cwtl
push
inc
fisttpll
lahf
ret
pop
adc
test
popf
or
jnp
aas
lods
jbe
push
shrb
pop
pushf
xor
stos
push
popf
sbb
je
xchg
add
pop
pop
sub
sbb
inc
roll
xor
push
iret
cmp
cli
sub
xor
pop
inc
stos
int3
push
testb
jns
mov
rclb
jo
fiaddl
clc
test
pop
out
xchg
jns
xor
repnz
loope
lret
bound
ret
fnstenv
mov
movsl
cmp
mov
addr16
out
int
fistpll
std
lods
and
xchg
push
inc
fnstenv
and
inc
iret
dec
loope
and
test
and
xchg
loope
stos
aam
enter
and
rorb
dec
cmp
mov
movsl
popa
das
popa
je
xchg
push
xchg
xchg
push
adc
push
repz
js
movsb
cmp
insl
add
xchg
insl
das
push
out
xchg
outsb
jne
adc
fidivl
pop
fwait
xor
lcall
aad
jnp
xor
add
pop
mov
movsl
cmp
daa
out
xchg
ret
pop
adc
jb
cmp
add
fistpll
dec
add
pop
popf
outsl
pop
idivb
mov
pop
mov
adc
notb
mov
ljmp
dec
stos
pop
add
pop
lret
mov
mov
cmpsl
insb
popa
clc
xor
push
and
pusha
clc
insb
add
addb
dec
out
push
inc
xor
pop
js
sub
sub
stos
jo
jge
lret
sub
out
push
cwtl
das
jo
cmp
stos
xchg
aad
ret
lret
sub
mov
fldl
in
out
mov
push
xchg
popf
out
cld
mov
ficomps
in
outsl
push
pusha
or
jmp
fwait
std
xor
xor
lods
pop
stos
inc
jno
inc
xchg
leave
pusha
sbb
xor
js
xchg
sub
cltd
outsb
add
loop
mov
outsl
add
push
ret
aad
fmuls
cmp
into
or
mov
out
mov
fstps
imul
ljmp
mov
fidivs
and
repz
in
aas
xchg
sbbl
popa
lret
bound
cmpsb
fidivs
leave
ret
ljmp
scas
loope
sbb
shlb
mov
fbstp
adc
or
js
pop
lock
or
mov
or
mov
lea
mov
push
in
loopne
pop
lock
mov
lds
int
sbb
imul
xlat
int3
mov
push
out
inc
fnstsw
fistpll
int
jge
push
out
sub
int3
daa
jmp
jb
xor
mov
filds
in
dec
out
test
sbbl
dec
mov
mov
insb
clc
jle
test
lahf
adcb
push
lahf
ss
les
mov
scas
push
test
lcall
fs
mov
and
xlat
stos
inc
jle
mov
outsl
push
adc
mov
inc
xor
testl
test
in
icebp
leave
adc
aaa
test
lret
fistps
and
or
sti
cmp
xor
mov
inc
mov
jne
pusha
mull
lock
mov
outsb
add
int
repnz
ret
cltd
or
imul
or
sarb
lds
xchg
jne
les
jl
dec
pop
les
outsb
lcall
sarl
mov
cmp
out
scas
out
inc
sub
add
stc
dec
int
push
ljmp
adc
add
stos
and
mov
and
es
pop
repz
nop
daa
xor
adc
frstor
cmp
add
enter
pop
mov
fcoml
mov
fcoml
movsl
dec
std
pop
hlt
in
jns
xchg
mov
xor
out
inc
popf
cwtl
das
adc
sbb
ret
jmp
sti
xchg
adc
test
dec
fisttps
lods
xor
repz
scas
lea
ficoms
mov
cld
xchg
jge
aaa
into
pop
sahf
jge
sarb
in
icebp
movsl
cmp
int3
jne
incb
jbe
movsl
cmp
leave
insl
mov
test
les
test
hlt
incb
sti
imul
cltd
mov
enter
xchg
jno
call
pusha
mov
or
pop
pop
out
sbb
imul
cmp
sub
adc
mov
call
sub
pop
into
fnstenv
sub
mov
sub
xchg
movsl
cmp
mov
inc
and
out
xchg
inc
mov
dec
jecxz
addr16
push
arpl
int
ja
xor
or
add
fs
popf
movsb
daa
cli
sbb
adc
daa
cmp
sbbb
rclb
cwtl
popa
xchg
test
xchg
icebp
mov
dec
in
xchg
cli
push
or
std
imul
or
call
pop
pop
sti
fidivl
cmp
push
loope
add
push
aam
xor
je
mov
fwait
sub
movsb
xlat
lock
inc
and
push
arpl
stos
sbb
mov
imul
orl
add
jno
and
jle
cltd
xchg
test
push
outsl
scas
jo
repz
pop
aam
cmp
daa
mov
std
cmp
mov
xchg
or
adc
adc
xchg
jno
sub
or
xchg
jo
in
mov
out
repz
and
popa
sbb
xor
jne
lock
mov
sbb
jle
pop
or
sub
cmc
sbb
cmp
jnp
negl
aaa
cmp
insl
push
enter
clc
xor
loop
mov
call
lock
jecxz
cmp
sbb
daa
out
cmp
roll
ss
jno
fdivrp
dec
sahf
mov
cld
jp
shlb
dec
rcr
xchg
sti
loope
rol
add
rcr
aam
lret
dec
fst
mov
add
cmp
sub
cmc
sub
gs
cmp
rorl
outsl
xchg
sub
jbe
pop
icebp
jl
mov
and
hlt
mov
inc
pop
sahf
aaa
jle
outsl
outsl
pop
adc
inc
nop
mov
repnz
lea
push
hlt
cmp
sbb
push
mov
push
fbstp
fnstcw
xor
je
dec
out
pop
cmp
addr16
loope
lcall
sbb
std
sub
adc
cmp
push
xlat
cmp
cmp
fimull
pop
mov
test
lods
inc
pop
negb
xchg
inc
sub
jo
data16
popf
pop
rorl
pushf
outsb
xor
cmp
push
push
xchg
xchg
icebp
push
test
out
fidivl
std
insl
das
jecxz
jnp
imul
pop
xchg
mov
add
in
leave
fwait
and
mov
fmull
mov
push
add
lahf
lahf
jae
or
jns
xlat
jae
cwtl
movsb
clc
cli
push
mov
repz
das
fnstsw
cmp
into
lods
insb
mov
pop
mov
repz
aam
insb
mov
out
pop
sub
das
loop
sahf
mov
pop
imul
sub
mov
inc
xor
int
pop
lds
std
sbb
adc
test
clc
popl
adc
outsb
mov
pop
or
add
mov
repz
sbb
in
mov
nop
sbb
lods
inc
xchg
cmp
inc
repz
inc
xchg
mov
stos
movsl
adcb
sub
xor
mov
ret
mov
arpl
ss
pop
repz
jmp
mov
jl
cmp
jmp
inc
loope
ret
sar
sbb
and
pop
popf
ss
push
enter
rorl
or
mov
cmp
pop
scas
dec
pop
inc
nop
adc
mov
loopne
mov
std
add
mov
jle
testl
push
adc
and
rcrb
xor
clc
adc
mov
pop
adc
mov
in
add
mov
bound
aad
popa
daa
xchg
and
pusha
jmp
xchg
dec
mov
adc
ds
outsl
pop
lcall
rdpmc
lret
jo
jmp
or
lods
jmp
aaa
fnsave
in
aas
out
xchg
mov
add
mov
mov
mov
jmp
fs
shr
enter
cli
or
das
cs
ss
fs
lret
jmp
loopne
dec
jl
or
and
sub
es
xor
insl
mov
inc
cmc
jb
xchg
aam
sbb
sahf
sub
sbbb
dec
fldt
xor
inc
xor
cs
cmpsb
cmp
insb
bound
sarl
push
movsl
jns
add
add
jae
xchg
das
loop
push
outsl
cmp
xchg
aaa
sub
mov
cmpl
pop
movsl
imul
fidivl
subb
cmp
aaa
lcall
or
fwait
dec
pop
cmp
pop
loopne
cltd
rcll
scas
add
hlt
jmp
push
shrb
mov
xchg
sbb
mov
push
add
jle
push
pop
dec
ficoms
push
ss
cli
call
cli
cmp
repz
mov
pop
fidivl
scas
sub
aam
jmp
jnp
inc
inc
inc
movsl
mov
jns
cmp
mov
jbe
hlt
andb
add
outsl
imul
popf
pop
out
into
dec
pop
and
imul
sub
test
sahf
mov
pushf
mov
stos
mov
jg
sub
fwait
xchg
jno
dec
loope
xchg
mov
repnz
push
mov
cwtl
loop
popf
pop
out
into
mov
cmc
int3
or
cmp
jno
and
arpl
jo
ja
pop
adc
ret
jne
in
cmp
xorl
add
inc
movhps
addr16
fmull
sbb
outsl
push
pop
lahf
and
jmp
jb
dec
pop
jg
aaa
cmp
cmp
push
out
xchg
repz
add
sbb
shlb
mov
mov
test
aas
lahf
out
sarl
adc
dec
and
and
addr16
inc
or
inc
adc
ret
jl
out
jp
mov
inc
jecxz
sarb
mov
aas
cmc
mov
adcb
xchg
adc
sti
insl
ss
inc
scas
or
arpl
push
adcl
pop
sub
and
pop
std
ffree
lcall
les
push
shrb
fwait
in
or
xchg
test
mov
cld
push
pushf
fisubl
cmp
in
sbb
cmpsl
std
test
loopne
addr16
lahf
pop
stos
pop
lds
imul
jns
fwait
mov
sub
xchg
pop
adc
mov
cwtl
dec
int3
insb
mov
std
xchg
jns
repz
push
aad
sbb
mov
stc
sahf
xor
push
addr16
cld
negb
inc
mov
jno
or
jne
inc
cmpsl
mov
mov
or
sbb
outsb
adc
rolb
ret
jns
dec
or
jns
dec
orb
push
movsb
lock
je
sahf
repz
add
scas
fwait
jnp
movsb
cmp
pushf
and
ss
pop
cltd
xor
movsb
or
add
bound
loop
pop
clc
clc
testl
or
dec
xchg
push
jne
jge
lret
xchg
jb
push
test
cmp
and
pushf
lods
push
mov
call
into
inc
pushf
into
adc
fdivrl
fs
adc
push
fwait
bound
ss
lcall
movsl
fmul
cmp
negl
mov
add
jmp
mov
mov
mov
lret
mov
pop
mov
and
xchg
cltd
xchg
test
bound
iret
outsb
mov
mov
arpl
outsb
jns
or
push
test
mov
test
mov
fmull
and
scas
xorl
jns
aas
das
into
sub
hlt
cmc
mov
xchg
push
rol
push
inc
jmp
cld
pop
stc
sbb
adc
sub
nop
sbb
xchg
lods
inc
sbb
fsubl
xchg
sbb
mov
icebp
xorl
push
or
mov
fmull
mov
setge
cmpsl
imul
cli
movsb
pop
xchg
outsl
sub
fidivs
and
jo
cltd
outsl
pusha
jno
or
push
pop
mov
dec
lods
mov
and
icebp
aam
pop
jns
add
in
lahf
pushf
xchg
fsts
xor
imul
rcl
mov
sbb
sub
xor
push
mov
mov
or
jmp
cwtl
push
pop
dec
loopne
jb
mov
xchg
lahf
pop
pop
sub
mov
faddl
and
outsb
fmul
shll
mov
mov
sub
mov
orb
push
mov
pop
shrl
mov
cmp
mov
pop
pop
cmp
sbb
jl
and
lea
ss
jg
push
cwtl
mov
cs
fldl
popf
push
dec
and
mov
fsubrl
sub
fcom
push
and
inc
push
sub
ret
xchg
insb
rclb
adc
mov
and
xor
or
push
xor
mov
das
inc
aam
ja
aad
mov
sbb
stos
lds
sbb
std
fidivs
aas
movsl
incl
mov
decl
mov
scas
jg
cmpsl
cltd
int3
xchg
xor
mov
scas
fisubrl
mov
ficompl
xor
lock
jns
lahf
movsl
fldt
mov
nop
mov
pop
pop
xor
xchg
sub
ljmp
pop
mov
cmp
sbb
adc
dec
jnp
push
and
push
jge
or
lcall
fld
aaa
stc
pmulhw
xchg
xor
je
test
seta
ret
incl
sbb
out
mov
in
nop
jae
iret
cld
orb
ret
xor
or
scas
into
sbb
cmp
add
pop
cmpsl
aas
les
stos
inc
fbstp
sub
sbb
mov
les
jp
pop
in
cmp
popf
push
dec
mov
mov
iret
mov
hlt
cmp
int3
pop
fdivl
in
popa
arpl
xchg
jnp
mov
sbb
and
ds
rcl
jge
adc
test
leave
xor
enter
sub
sbbl
lods
adcl
jge
imul
incb
mov
or
out
out
xor
inc
cmp
sarl
xor
lds
fmuls
pop
out
cmp
fsubl
add
push
in
bound
cld
xchg
andl
mov
repz
out
xorb
std
xchg
jmp
movsb
imul
popf
pop
sub
imul
dec
in
jl
xor
out
mov
sbb
sti
ljmp
adc
mov
mov
dec
add
lret
xchg
fwait
je
outsl
pop
or
or
ljmp
pop
mov
xchg
cld
mov
jae
in
out
ss
dec
sbb
xchg
sub
sarb
and
mov
addl
rcl
out
mov
jmp
inc
mov
mov
push
pop
and
and
jne
xchg
inc
pop
divb
int3
cmc
repnz
orb
out
leave
push
int
iret
sbb
jo
lret
aad
jecxz
sbb
les
and
mov
push
xor
mov
fcomi
and
push
or
mov
out
adc
in
sub
insb
push
or
popf
adc
ljmp
push
dec
aaa
mov
dec
dec
mov
adc
jnp
in
inc
inc
fdivs
dec
mov
dec
xor
dec
push
ja
jb
fnstenv
xchg
pop
js
pop
nop
add
imul
mov
scas
pop
ljmp
into
sbb
iret
xor
inc
dec
fiaddl
gs
call
and
stos
mov
mov
dec
in
fnstenv
out
mov
nop
nop
xchg
and
push
cli
daa
pushf
repnz
push
out
sbb
aas
mov
mov
jne
xchg
lahf
and
loopne
sbb
xor
popa
insb
clc
mov
outsb
mov
xchg
mov
in
ret
pop
push
dec
addr16
add
fsubrs
xchg
iret
pop
mov
into
sarl
sbb
jle
sub
push
push
fistpll
rorl
jg
add
fwait
je
int
js
add
fnstcw
jo
dec
jle
xlat
test
in
xchg
pop
or
push
push
call
pop
ja
mov
es
insl
sarl
mov
fsub
int
or
test
pop
mov
mov
les
imul
dec
cmp
mov
out
sub
mov
addb
test
sbb
pop
fwait
out
sti
mov
mov
loopne
jb
out
or
rol
icebp
mov
movsb
cmp
addr16
or
or
dec
fdivrl
aas
jl
and
add
lret
pop
xchg
fs
xlat
inc
sbb
xchg
cwtl
cmp
cmp
rcrb
adc
push
push
add
lcall
dec
add
mov
pop
pop
test
inc
dec
bound
sbb
jp
imul
dec
ret
fnsave
in
lret
adc
dec
fcomip
mov
mov
shlb
add
es
in
movsb
sub
xchg
jecxz
or
shl
js
pop
or
xchg
xchg
popf
xor
pusha
add
xchg
stc
test
push
mov
pop
in
jo
pop
mov
sbb
or
test
mov
jle
push
xchg
inc
sub
jns
mov
jae
dec
out
bound
lret
fwait
pop
test
fdivl
or
add
repnz
sbb
cmc
mov
stos
loope
adc
xor
inc
jmp
mov
in
jne
ret
push
ss
das
add
mov
jl
sbbl
mov
imul
pop
lahf
and
inc
mov
pushl
xlat
in
cwtl
loop
and
mov
loopne
inc
movsl
call
push
cmpb
hlt
leave
xchg
inc
sbb
or
jno
or
jbe
xchg
add
jne
mov
setge
cld
test
dec
xchg
and
clc
hlt
andb
sub
xchg
dec
xchg
mov
int
dec
incl
stc
fwait
into
popf
xor
out
push
je
or
outsl
mov
cmpsb
scas
notb
pop
shrl
jnp
es
jae
mov
mov
mov
dec
out
out
dec
pop
ss
fdivl
dec
pop
sub
aas
outsb
sbb
add
stc
push
push
aad
jo
js
push
data16
cs
push
aad
inc
sub
cmp
fildll
xchg
mov
cmp
sub
mov
gs
mov
and
jecxz
gs
push
push
jo
inc
cmp
dec
mov
icebp
lret
inc
dec
mov
sub
pusha
add
fcomps
adc
or
push
ret
hlt
jne
jne
into
cwtl
and
cmp
mov
icebp
push
mov
xchg
jp
add
mov
xor
xor
cmp
fldl
ds
icebp
aam
cmp
jge
lods
mov
pop
mov
fisubs
in
and
js
cmp
fcmovbe
inc
stc
adc
mov
add
je
push
mov
or
mov
sbb
mov
loopne
mov
or
aaa
dec
dec
inc
dec
js
mov
pop
mov
daa
and
and
adc
jbe
fistpll
jecxz
dec
mov
mov
dec
adc
jle
call
cld
pop
cmpl
pop
mov
enter
sbb
lods
pop
nop
mov
insb
aad
mov
aad
xchg
or
dec
sub
dec
cmp
and
xchg
sub
adc
xchg
inc
sub
mov
repnz
insl
scas
rolb
lods
into
xlat
dec
lods
leave
adc
int3
in
mov
pop
in
lret
in
out
jmp
pushf
xlat
xchg
scas
mov
jae
mov
pop
pop
fidivs
sub
add
sub
fiaddl
mov
jg
scas
je
mov
jno
imul
or
in
aad
adc
fdivl
fwait
xchg
mov
dec
or
sbb
roll
das
aam
dec
incl
sbb
data16
rcrl
dec
pop
data16
ja
cli
add
cmc
inc
and
cmp
ljmp
fnstsw
fs
or
lock
mov
sbb
push
adc
cmp
test
sub
in
test
imul
dec
xlat
xchg
push
mov
out
xchg
call
sub
inc
mov
push
aad
fadd
cmp
jecxz
rolb
add
sbb
cmpl
shrb
decb
out
fsubrl
cmpsb
push
cmp
sub
lock
mov
lock
cmp
mov
xchg
shrl
lahf
dec
inc
dec
and
lods
sub
roll
cmp
andb
mov
xor
mov
xchg
inc
test
out
inc
jg
xor
cmp
push
push
test
xor
cmp
jge
inc
inc
outsb
push
mov
popa
lret
adc
pop
popf
mov
dec
mov
pop
mov
les
call
push
cmpsb
xor
and
dec
movsl
inc
fiaddl
and
mov
rcrl
jle
xchg
mov
and
ret
mov
jg
daa
mov
and
cmp
mov
cltd
xor
mov
mov
pop
dec
lcall
fisttpl
add
shrb
or
movsb
xor
iret
lahf
out
inc
add
int3
arpl
outsl
movsl
sub
movsl
xchg
push
iret
cltd
stc
nop
lret
pop
add
lods
int
lods
fdivr
inc
shll
and
lret
dec
pop
arpl
out
data16
push
xchg
sub
add
add
xor
xor
mov
push
lods
das
test
add
inc
mov
shl
mov
add
sahf
test
ds
mov
mov
popa
loop
aad
movsl
inc
sbb
mov
or
jne
inc
and
jae
dec
loope
pop
cmp
inc
dec
jno
xor
mov
shl
cmp
mov
rorb
lock
add
jmp
out
or
and
mov
mov
add
fsubl
or
dec
ret
dec
pop
mov
in
leave
fsubrs
repz
or
push
ljmp
pop
repz
add
out
scas
mov
testl
les
sbb
cmp
aaa
push
movsl
push
dec
push
cmp
jle
jg
shlb
mov
ret
xchg
xor
jge
sub
cltd
xor
sub
xor
mov
pop
and
inc
loope
js
jne
cltd
call
sub
sbb
dec
jge
cmp
jo
iret
data16
in
test
in
push
push
inc
or
imul
inc
int
sub
jmp
xor
mov
pop
aam
mov
sub
inc
stos
push
nop
inc
mov
mov
rorb
out
imul
test
pop
popa
clc
push
icebp
leave
movsl
es
cli
push
repnz
push
hlt
int
ljmp
sub
and
pop
test
std
or
push
jne
adcl
ficoms
std
or
xor
mov
jmp
and
jb
test
lds
roll
adc
aas
xchg
jns
mov
fwait
pop
fs
sub
jb
jae
adc
subb
into
leave
push
mov
and
adc
out
imul
bound
cmp
fwait
pusha
mov
pop
out
sub
jbe
jmp
inc
std
mov
jp
lea
xchg
ret
mov
adc
popf
dec
nop
mov
mov
jmp
and
add
adc
mov
sbb
mov
ret
xchg
jmp
jmp
mov
addr16
push
ljmp
call
and
cmc
xor
sarl
xchg
xchg
out
jb
mov
push
imul
sarb
in
or
out
lcall
mov
clc
call
lock
add
popf
imul
jge
test
jp
jge
cld
inc
add
xchg
test
or
push
adc
pop
ljmp
and
lcall
rcr
sub
lods
repnz
dec
push
sbbl
in
mov
pop
jns
in
scas
fs
mov
loope
aas
push
xchg
into
outsl
scas
or
xor
insb
mov
or
and
out
aad
rcl
shll
cld
inc
test
loop
test
pop
dec
sub
out
inc
dec
lods
fldt
test
fadd
push
push
insb
fsubrl
jno
fwait
push
xlat
notb
pop
insb
rcr
adc
jbe
cmc
push
fisubrs
mov
movsl
inc
xchg
cmp
aas
xchg
popf
mov
sti
scas
enter
lea
scas
xchg
push
mov
testl
add
cs
nop
sahf
jmp
push
out
ss
pop
out
idivl
mov
repz
stos
pop
jae
test
push
pop
xor
mov
rcr
mov
les
vpminub
sahf
das
aad
add
mov
cwtl
icebp
das
pop
std
inc
aas
push
jl
pop
stos
aad
mov
push
xor
add
pop
or
fwait
and
sub
sub
mov
adc
loop
xor
pop
dec
loopne
stos
sub
lea
movsl
fcmovne
test
dec
mov
aas
bound
adc
shll
shll
inc
add
in
jge
adc
or
lock
sbb
in
loop
push
stos
mov
jle
mov
dec
inc
fcmovne
fistpl
xchg
mov
pop
es
stos
or
push
and
push
cltd
js
movsb
pop
jno
test
add
iret
pop
test
add
mov
jge
fldcw
scas
and
loope
cmp
jg,pn
xor
int3
lcall
or
sbb
out
xor
lahf
stos
push
int
mov
mov
xorl
or
in
sub
mov
jno
shrb
and
fdivrp
xchg
adc
inc
cs
orl
push
loop
dec
loop
add
dec
rolb
les
jae
in
or
cwtl
xor
in
mov
jg
out
cmovnp
in
mov
push
imul
sbb
and
fmuls
and
jle
xor
shrb
out
adc
addl
rcrb
jecxz
xor
jge
mov
jmp
xor
mov
sbb
inc
add
inc
mov
movsb
and
and
push
inc
fs
push
push
xchg
test
shll
in
in
mov
fiaddl
xchg
jb
sbb
xor
hlt
pushf
sbb
test
scas
push
lret
jmp
adc
popa
xchg
xchg
jns
jbe,pt
inc
cwtl
repz
xor
xchg
adc
or
adc
rorl
insb
or
cmp
sahf
xor
sub
mov
std
bound
pop
adc
idivb
sub
sbb
mov
shlb
in
inc
sbb
out
scas
pop
jno
sbb
cmp
lods
sahf
push
fnstenv
les
cli
addb
add
adc
jle
mov
outsl
or
aad
cmp
mov
scas
mov
mov
and
push
cmp
sub
push
add
xor
sub
xchg
pop
outsl
cmp
mov
cld
xchg
in
lds
mov
mov
jae
jae
xorl
mov
das
pop
inc
mov
jl
jmp
cli
push
and
test
sbb
imul
adc
imul
add
repz
pop
mov
dec
mov
fdivs
in
ret
and
into
pushf
inc
or
cltd
out
inc
cli
add
push
or
leave
fidivrl
lock
cltd
or
cli
inc
jns
loopne
fsubrl
inc
adc
cs
dec
fsubrp
xchg
sbbl
hlt
ret
cltd
cmpsl
cmpsl
add
insb
inc
cltd
in
sti
lea
mov
incl
xor
pop
xor
jnp
in
movsl
pop
or
in
aad
aam
fnstsw
and
fcomps
incb
xor
xchg
lret
cmc
lods
jmp
sub
rcll
ret
dec
scas
or
int
fnsave
repz
in
imull
cli
scas
ds
pop
int3
das
adc
pusha
add
mov
xchg
in
xchg
sub
adc
dec
push
sub
mov
xchg
arpl
push
mov
aad
sbb
ss
orl
and
insb
leave
aaa
shll
xchg
and
add
psubsb
mov
or
aad
xor
xchg
daa
stos
stc
je
rcrb
lods
mov
fucomi
std
test
xor
sub
pop
jecxz
popf
push
jmp
jmp
or
xchg
fldt
cmc
push
cmp
xchg
inc
ffree
mov
seto
pusha
mov
ret
gs
mov
ret
add
insb
push
or
sahf
in
dec
jbe
dec
test
jmp
pop
adc
or
cmp
daa
ret
nop
setb
dec
repz
mov
mov
or
xchg
pop
push
and
mov
and
or
inc
sti
movsb
mov
ret
pushf
jg
cld
aam
dec
mov
mov
loopne
add
enter
outsl
jmp
out
add
fwait
test
sbb
xor
int3
arpl
es
pop
and
lods
sbb
dec
in
mov
insb
inc
and
push
xchg
fnstcw
push
movsl
rolb
jns
sub
and
rorl
dec
sbb
mov
loop
cmpsb
mov
mov
mov
ds
aaa
int
inc
ljmp
aad
sbb
in
fisubl
fldenv
pop
aas
mov
mov
adc
adc
test
xor
imul
insl
rcll
out
lret
sub
adc
xor
scas
xor
ss
push
int3
xlat
leave
std
jo
popf
inc
dec
pop
mov
lret
pop
lods
fstpt
outsl
lcall
cmp
jmp
sbb
in
fwait
insb
out
cvttps2pi
aas
js
dec
sub
dec
pop
fcomip
aaa
int
pop
push
xor
or
in
cmp
jecxz
mov
inc
fimuls
je
fidivl
mov
je
pop
cmc
pusha
xorb
sbb
inc
dec
in
pop
mov
cltd
imul
jmp
roll
call
sub
pop
jge
dec
addr16
jno
mov
sub
shlb
dec
xrelease
jae
and
sti
mov
cmc
mov
pop
cmp
mov
jnp
stos
insl
fucomi
dec
pandn
push
mov
jmp
icebp
fisubrs
mov
mov
lods
outsl
mov
lods
out
pop
das
or
add
or
mov
lret
sub
enter
jbe
andb
cmpsb
add
movsl
in
xchg
sub
dec
xor
aaa
into
icebp
mov
mov
int3
arpl
fdivrl
sub
xchg
mov
ret
out
or
clc
sub
pop
sbb
mov
adc
repz
das
jnp
shll
movsb
aad
lea
mov
mov
mov
repz
adc
xor
arpl
sbb
pop
mov
add
cmpsl
or
pop
cmc
fnclex
shll
cld
jl
aad
pop
pop
hlt
add
mov
fldenv
dec
int3
cmp
inc
sbb
push
mov
add
mov
insl
mov
fnsave
rcrb
jmp
cli
cmp
test
push
jnp
bound
fbld
shlb
test
mov
daa
push
dec
xlat
xchg
jmp
or
jb
or
inc
mov
or
cli
sbb
mov
nop
xchg
or
add
rclb
ljmp
jno
das
imul
lret
test
xchg
popa
jcxz
cltd
sbbb
pop
sub
shrl
cmp
pop
repz
mov
add
pusha
pop
rcrb
jno
mov
fbstp
adc
test
pop
imul
jl
aam
xor
fisttps
imul
jle
ret
pop
push
in
repz
cmpsb
adc
in
in
leave
adc
add
in
mov
nop
in
std
shrl
sub
in
cwtl
xor
loopne
pop
lahf
lods
ss
mov
sbb
shr
ljmp
xchg
dec
mov
iret
jbe
add
cmp
lods
adc
fbld
les
push
cmpsl
das
mov
lods
push
mov
pop
repz
xor
xchg
adc
aad
xchg
fxch
gs
add
lock
add
fsub
jns
movsb
sub
inc
mov
ja
stc
nop
testl
lods
cltd
xchg
scas
out
mov
mov
lds
gs
xchg
ficoms
lds
cltd
fs
shll
cmp
cmpl
sub
pop
aas
dec
jg
or
mov
ja
ret
jecxz
xchg
mov
pop
out
mov
je
cmpsl
mov
push
sbb
mov
insb
jmp
popf
mov
xor
cmp
jbe
sarl
cmp
mov
int
sarb
rorb
mov
fadd
lahf
test
and
push
cmp
mov
fiaddl
dec
mov
push
outsb
aad
pop
mov
push
jb
je
pop
imul
mov
ret
lods
ljmp
jecxz
pop
into
xor
jle
xor
jns
adcb
xchg
aad
add
pop
negl
fnsave
jp
inc
inc
ficoml
loope
mov
push
sub
movb
mov
push
fidivl
pop
arpl
mov
clc
into
in
add
leave
xor
lods
shl
fucomp
mov
pop
icebp
pushl
push
add
jo
lret
je
push
addl
subl
es
out
sti
sarb
cld
pushf
mov
pop
adc
out
out
push
cmc
mov
es
or
je
iret
xchg
jne
xchg
pop
enter
divb
daa
mov
enter
lahf
pop
insb
aad
or
mov
or
dec
outsb
rcl
mov
loopne
mov
adc
and
arpl
outsb
add
xchg
push
or
mov
cmpsb
subl
sahf
lods
rorl
bound
test
lcall
repnz
and
pop
mov
arpl
outsb
ljmp
adc
mov
lods
and
xchg
fstpt
iret
ret
icebp
test
and
and
xchg
ja
xchg
cmp
insl
shll
shld
cmp
pushf
test
cmc
mov
inc
mov
js
cmp
daa
fmuls
or
jge
dec
movsb
mov
insl
xchg
test
pop
fsubl
cmp
pop
outsb
or
xor
aaa
mov
adc
fstl
push
fisubl
test
negb
mov
add
jb
jno
scas
lahf
pusha
mov
mov
arpl
filds
orl
mulb
cli
pushf
movsb
jbe
pop
mov
fwait
imul
ljmp
adc
inc
push
push
inc
repnz
and
sbb
rorl
pop
out
aas
and
pop
fld1
or
in
and
fimull
or
es
xor
mov
push
movb
mov
fnstenv
lgs
bound
int
jl
int3
pop
jb
jmp
mov
ret
aam
roll
mov
push
aam
cmp
sbb
pushf
addr16
jns
xchg
xchg
mov
fildll
sbb
mov
add
out
and
push
ljmp
pushf
repz
sub
imul
adc
inc
push
or
add
scas
xor
cmp
imul
jnp
inc
mov
inc
cmp
and
movsb
sti
cmpb
and
outsl
loop
add
xchg
push
mov
stos
pop
in
ror
adc
shlb
mov
mov
pop
lock
sbb
mov
push
int3
add
test
dec
mov
movsb
dec
mov
xor
xor
cmpsl
fdivrs
mov
lret
push
sbb
repnz
imul
sbb
ret
push
sub
divb
enter
test
mov
cmpl
popa
lahf
int
fsubrl
sbb
mov
jp
std
push
out
arpl
gs
enter
insl
jge
sbb
push
nop
xchg
aaa
mov
xchg
cld
or
jl
pop
cmovns
mov
jmp
pop
sbb
clc
stos
push
inc
das
sahf
or
arpl
rolb
inc
xchg
xor
jnp
xor
jae
sbb
repnz
test
sub
inc
iret
cs
pop
inc
movl
push
popf
inc
lea
aam
cwtl
pop
and
loope
push
jmp
cmp
ja
lahf
test
cmp
cmp
ret
das
add
mov
aaa
mov
clc
xchg
xchg
jg
or
lahf
and
data16
sub
fidivs
mov
lret
jne
testl
enter
xor
insl
sahf
jge,pn
sbb
lahf
and
aad
mov
mov
or
fs
xor
call
test
mov
loop
xor
outsb
lds
pop
mov
imul
repnz
xor
sub
xor
roll
ret
loope
fld
push
add
xor
sub
xor
pusha
xchg
adc
fistpl
ror
hlt
sub
les
xor
lock
sub
jbe
das
lret
pushf
popf
popa
jbe
cmc
mov
leave
adc
rclb
stos
add
sub
test
outsb
mov
int3
icebp
adc
sahf
cmp
out
loop
pop
addl
inc
loop
out
xchg
jecxz
inc
push
or
inc
mov
sbb
cwtl
xchg
pop
lret
mov
mov
cltd
and
pop
sub
dec
pop
push
loope
dec
lret
dec
push
aaa
and
outsl
push
cmp
sbb
gs
jbe
jecxz
inc
in
fwait
jno
imul
push
insl
adc
je
inc
cmpsl
aad
jmp
enter
inc
push
imul
js
xlat
sub
add
sbb
repz
sub
dec
mov
cltd
out
rclb
and
cmc
mov
inc
and
enter
jae
fisttps
pop
insl
lahf
push
scas
sbb
dec
xchg
movsb
xor
fisubrl
fsubrs
jo
mov
cmp
out
cli
mov
hlt
adc
mov
dec
cmc
std
iret
mov
and
cmpl
fcos
pop
mov
xchg
sbbb
ss
inc
xchg
sub
pushf
mov
ret
add
pushf
outsl
fldenv
dec
pusha
fcompl
shrl
outsl
testb
outsb
loope
mov
push
pop
lcall
xor
sarl
add
add
jne
les
sbb
and
scas
scas
adc
arpl
rcrb
push
jl
daa
xchg
repnz
mov
or
and
xlat
faddp
fsubrs
fsubs
ficoms
mov
cmpsl
subl
sub
dec
lea
out
aam
dec
cbtw
imulb
addr16
out
rclb
sub
mov
repnz
or
cs
pusha
aam
add
movl
or
cli
jecxz
addb
mov
out
xor
stos
and
enter
sahf
bound
add
jmp
cltd
and
mov
mov
add
hlt
ss
mov
xlat
bswap
add
repnz
mov
dec
fsubp
fsubrs
pop
test
outsl
in
cs
add
lods
aas
repnz
ret
lea
cmp
jge
sub
jae
sub
push
sahf
dec
fmuls
xchg
stos
hlt
outsl
pusha
icebp
sbb
in
dec
cmp
xchg
adc
mov
inc
fsubrs
sub
mov
mov
aad
cmp
inc
pop
icebp
jae
mov
adc
fistpl
lcall
and
cmpsl
jge
adc
push
daa
xor
repnz
rorb
dec
adc
xor
test
jl
push
pop
sbb
jae
lock
xchg
jge
call
or
addr16
fldz
test
and
or
sbb
mov
lods
inc
or
jl
or
push
fisubrl
popf
arpl
mov
jns
mov
add
sarl
xor
mov
ss
pop
jno
cmc
int
push
gs
cmp
cmp
cltd
push
pushf
pop
xchg
das
pop
jge
std
xchg
cmp
push
data16
jo
dec
out
popa
test
cmp
adc
daa
jle
pushf
enter
xchg
std
xor
mov
mov
mov
jbe
test
fiadds
loope
fsubl
subb
sahf
testl
fisttpl
jne
jmp
icebp
and
push
add
stos
mov
aaa
adc
xchg
sub
cmp
xchg
jnp
push
scas
add
and
aaa
scas
inc
jne
lret
inc
cmp
inc
mov
sub
or
and
nop
std
stos
and
repz
xchg
repnz
mov
fs
imul
or
push
sub
aad
add
pop
je
xor
add
add
loope
incb
and
mov
lea
sub
inc
adc
jne
bound
inc
jg
xchg
fs
adc
out
jl
push
js
jo
test
adc
or
xor
fadd
jbe
sbb
sti
xchg
lea
mov
jmp
mov
and
or
xchg
mov
adc
fnsave
and
das
sar
fidivrl
mov
add
in
cmp
push
push
bnd
js
cli
cmp
in
mov
pop
jp
cmp
notl
sbb
mov
jns
xchg
xor
xor
lods
cmpsb
ja
ja
inc
sub
std
aas
sbb
lea
mov
rcrl
xor
inc
push
pop
das
cmp
add
push
mov
jns
movl
in
hlt
fiaddl
ja
xchg
fcomps
or
mov
sbb
incb
push
jl
mov
clc
mov
mov
shl
mov
fsubr
pop
fdivl
or
inc
dec
cli
jg
ret
in
loope
out
cmpsl
inc
cli
and
imul
push
mov
cmpsb
ja
sbb
add
mov
mov
orb
adc
fistl
xchg
movsl
cmp
insl
cmp
or
mov
stc
enter
cs
out
pop
test
push
ret
shrl
jno
xor
jmp
mov
out
leave
and
adcb
xchg
pop
aaa
nop
pusha
iret
in
pop
cltd
mov
cwtl
xor
and
movsb
mov
sub
cmp
and
add
dec
xchg
dec
push
jle
scas
or
xlat
clc
lock
mov
sbb
cmp
out
aaa
stos
pushf
mov
sbb
in
jno
ss
fidivrs
push
lahf
js
cmpsl
test
inc
loope
xlat
push
and
out
leave
int
mov
jmp
xchg
cmp
out
xor
imul
adc
jb
pop
push
pop
mov
push
add
pop
pop
in
out
lahf
xchg
inc
cmpsl
xor
call
pop
push
sub
jg
stos
pusha
inc
or
pop
inc
pop
pop
std
jnp
jmp
mov
scas
cs
fistps
cwtl
adc
inc
fbstp
xchg
repz
cltd
push
les
jmp
jae
mov
jne
out
and
push
pusha
adc
push
sub
inc
popa
dec
sub
loopne
mov
mov
je
loop
mov
out
icebp
jnp
xchg
imul
push
sub
shrl
sti
mov
jecxz
icebp
mov
xor
xor
std
lea
push
negb
adc
les
rcll
idivl
and
dec
mov
fisubs
sbb
fisttpll
repnz
rcrl
mov
sarl
xchg
in
adc
sti
xchg
push
lcall
daa
sub
cmpsl
fcomps
dec
inc
dec
add
in
rclb
dec
xlat
jle
pop
ja
sbb
bndstx
inc
jge
test
pop
adc
testb
icebp
movsl
es
pop
jp
pop
ss
jg
jge
mov
popf
mov
pop
iret
orb
mov
adc
test
scas
popf
adc
inc
add
lret
sub
or
dec
add
outsb
stos
xchg
movsb
nop
mov
sbb
ja
push
adc
mov
mov
xlat
ret
cli
cmp
jg
scas
ret
dec
cmpsb
fcoml
lret
leave
dec
repnz
clc
pusha
or
inc
xchg
xor
cltd
xchg
and
pop
xchg
xchg
push
aas
insl
mov
pop
push
mov
sbb
xlat
mov
sbb
push
insl
or
adc
sahf
in
mov
and
roll
push
mov
int
rcl
jle
inc
iret
mov
pop
dec
xor
jp
andl
xchg
cmp
cmp
sbb
jecxz
sub
sbb
sbb
cmp
add
out
inc
sti
stos
mov
xor
imul
lea
lret
ret
in
pop
sar
sbb
addr16
xchg
mov
loope
lods
or
jb
xchg
pop
add
jmp
sarl
inc
pop
cld
jg
das
xor
fisubrs
sbb
xchg
and
xlat
sub
and
mov
cmpb
mov
adc
cmpsb
orb
inc
fnstenv
cli
push
addr16
dec
cwtl
push
fiaddl
add
xchg
and
es
out
mov
or
loope
ret
cltd
cmpsb
pop
push
sub
aaa
jg
inc
pop
fistpl
adc
aas
dec
and
or
jmp
ja
push
nop
in
push
mov
rol
jmp
jmp
xchg
add
loope
xchg
push
adc
mov
xor
aas
cmp
daa
xor
xchg
mov
inc
inc
test
in
test
sub
ja
mov
cld
jle
adc
ds
push
xor
nop
gs
and
push
inc
sub
add
lret
clc
cs
negb
ss
inc
cld
or
inc
fs
push
mov
sbb
imul
mov
or
adc
cmp
cmp
jbe
addl
lods
xchg
std
xchg
add
inc
arpl
sbb
xor
or
cmp
fadd
das
clc
adc
in
jge
test
enter
sbb
cmp
sbb
call
loopne
pop
imul
scas
mov
popf
sub
pop
out
cmpsl
push
cld
cmp
mov
push
sarb
inc
adc
lret
shl
sub
mov
stc
mov
loop
sahf
jmp
mov
cmp
pusha
jle
nop
push
cmp
dec
icebp
sub
mov
fidivl
push
adc
sbb
push
idiv
enter
movsl
loopne
cmpsl
xchg
hlt
sub
loope
pop
movsl
jmp
cmpl
movsl
pop
int3
int3
jp
std
fstl
lret
xchg
jbe,pn
mov
cmpsl
fs
add
loop,pt
out
addr16
lahf
in
stos
xchg
push
lea
cmp
adc
loopne
addl
shrb
jl
subb
mov
lret
ss
mov
cld
mov
jg,pn
pop
movsl
popf
xor
inc
rclb
sbb
jecxz
mov
out
ror
inc
dec
xchg
mov
push
stc
aaa
fstps
push
sub
xchg
adc
add
jecxz
lret
push
xor
fdivs
adc
xor
lods
outsb
and
movsb
and
xchg
mov
add
int
enter
in
sub
push
cmp
add
pop
rcr
mov
insb
std
inc
adc
mov
mov
scas
out
adc
cld
adc
insl
lret
xchg
arpl
je
int3
jl
jg
and
push
push
fs
adc
inc
inc
shll
add
push
test
into
jb
jecxz
inc
add
cltd
sbb
loope
and
mov
arpl
and
hlt
mov
je
fs
outsl
in
pop
mov
shll
cld
mov
xor
jne
push
sbb
xchg
popf
mull
orb
dec
xor
adc
insb
loopne
loope
pop
dec
jnp
dec
in
lcall
fbstp
shrb
dec
mov
leave
out
insl
mov
lahf
adc
mov
mov
pop
aaa
add
xor
orb
jmp
addl
cld
add
sub
pop
test
lret
iret
or
add
addr16
pushf
movsb
fmull
mov
pushf
mov
movsl
and
clc
push
movsl
enter
fisubl
push
into
adc
push
lds
js
iret
out
pop
mov
lods
jl
push
scas
stos
sbb
or
pop
hlt
insl
pop
es
movsl
iret
icebp
dec
or
rcrl
push
sub
mov
jb
mov
icebp
shrb
pop
add
jl
subb
xchg
cmp
pop
push
jle
je
sti
lret
mov
lret
or
push
lds
push
movsl
enter
and
mov
cli
or
dec
adc
shlb
mov
fucomp
mov
pop
cmp
lahf
shrl
fcoms
sbb
xor
scas
popa
sahf
mov
inc
sahf
pop
xor
or
daa
push
lea
fistpl
and
aaa
je
lods
mov
ljmp
ror
or
adc
int
mov
stos
pop
lret
ds
jb
loope
xlat
pop
cli
stc
jg
outsl
scas
notb
or
dec
mov
icebp
sbb
add
mov
insl
incb
jb
movsb
or
sbb
imull
jmp
xor
mov
dec
inc
pop
sub
inc
shr
push
in
scas
xchg
jbe
loope
cmpsb
pusha
jp
pushf
cmp
xlat
dec
sub
jnp
pop
mov
push
dec
stc
shll
add
add
jmp
add
ja
std
dec
push
stos
fisttpl
and
lcall
leave
movsb
sub
scas
xor
mov
out
mov
mov
dec
lds
jge
loope
mov
pop
inc
mov
aas
jle
jno
aaa
sbb
pop
dec
cmc
sbb
sbb
jg
sub
fcomps
nop
and
jbe
ds
test
clc
icebp
sbbl
push
pop
dec
mov
inc
mov
jns
imul
rcrl
out
test
lahf
mov
cmp
arpl
mov
in
sahf
mov
roll
jns
mov
repnz
cmp
push
lods
sbb
dec
and
xchg
les
and
add
call
in
pop
lret
fidivrs
stos
or
lcall
lret
fnstenv
aad
jae
pusha
movsl
adc
inc
mov
xor
mov
daa
jmp
insb
sbb
push
das
xchg
jle
sbb
lock
testl
mov
cmc
jle
pop
lcall
dec
lret
in
lock
or
mov
icebp
push
and
fs
testb
mov
rcrl
pop
popa
adc
bound
xchg
push
push
mov
call
in
sub
inc
adc
sub
js
lock
in
sub
lods
cltd
cmp
rcl
scas
pop
repz
std
fs
xchg
add
jp
xorb
daa
test
iret
aam
rcrb
jnp
adc
loop
sbb
dec
xor
push
mov
inc
cmp
push
scas
out
jae
xchg
pop
sti
data16
jno
adc
subl
pop
push
aam
dec
mov
lods
mov
mov
mov
mov
and
frstor
jge
lds
stos
sbb
arpl
lods
mov
out
jne
hlt
fisttps
pop
out
lods
and
repnz
cld
lods
or
adc
scas
push
push
js
mov
xor
inc
into
and
mov
outsl
aas
push
dec
xlat
pop
andb
lds
or
pop
daa
leave
jbe
jp
stos
xchg
adc
sbb
js,pt
and
adc
jae
je
xor
xlat
std
mov
xor
int3
arpl
lret
or
mov
pop
lock
ret
mov
sbb
lds
pop
fnstcw
mov
sub
mov
outsb
sub
arpl
inc
bound
cmp
mov
xchg
push
jge
mov
aam
into
fsubrl
inc
push
push
out
mov
les
insb
push
popa
mov
rcll
xchg
mov
pop
lcall
jns
data16
fwait
jl
or
les
lcall
cwtl
das
mov
aas
loop
push
mov
ss
aaa
mov
ror
pusha
pop
sahf
inc
out
jo
dec
and
xchg
pop
xor
push
mov
pop
loop
xor
push
fmuls
and
subb
pusha
jnp
out
mov
cmpsl
xchg
rcll
int3
cmpsl
pusha
jl
mov
loop
nop
cmp
add
gs
test
loope
lods
aam
jae
ret
mov
mov
jmp
fildll
push
mov
out
ret
push
stos
subl
sub
hlt
call
loope,pt
sarb
xchg
pop
movsl
pushf
gs
pop
xor
adc
xor
mov
dec
in
xchg
mov
mov
xchg
test
inc
and
cmp
test
xchg
sbb
dec
scas
adc
jb
in
push
mov
jg
cmpb
push
or
xor
ja
cmp
roll
es
sbb
xor
inc
xor
push
cmpsb
or
rcl
pop
decl
push
movb
stc
jg
lods
mov
roll
mov
lahf
iret
and
repnz
adc
sbb
jne
jbe
ret
and
jbe
dec
jo
stos
outsl
jnp
fdiv
test
out
push
fisubs
dec
sbbl
adc
xor
pop
sbb
dec
cmp
cmp
xchg
mov
stc
and
mov
fistpl
xor
out
pop
sbb
test
ljmp
outsl
cwtl
outsb
into
lds
push
insl
jmp
mov
in
or
insb
roll
lcall
in
pop
cmp
addr16
daa
stos
inc
int
test
enter
in
in
push
jne
js
imulb
clc
out
ljmp
cmovle
or
dec
xchg
sub
clc
push
scas
orb
jb
fcmovu
xchg
test
jle
stc
in
add
mov
pop
aas
xor
and
xor
out
orps
loopne
jb
call
imul
insl
mov
mov
lret
cmp
pop
scas
sub
stos
mov
cmc
pusha
shrl
mov
dec
scas
jno
call
adc
inc
aas
aad
jo
and
adc
adc
cltd
aam
sbb
jle
pop
pop
test
in
mov
pop
dec
mov
mov
xchg
sub
es
ljmp
sahf
and
cmp
out
movb
push
inc
fld
pop
cld
dec
mov
pusha
lahf
and
push
jecxz
loopne
mov
mov
movsb
and
mov
inc
cld
ds
mov
push
inc
stos
xchg
in
pop
fisubrl
sbb
jbe
add
out
dec
adc
add
repnz
cmc
add
mov
mov
sub
push
js
push
stos
insl
icebp
sbb
aaa
xchg
pop
jno
pop
add
lahf
or
xchg
add
sbb
aad
in
inc
cwtl
pop
outsb
jmp
scas
mov
or
sub
pop
add
addr16
sub
stos
mov
mov
inc
dec
data16
lea
and
roll
repz
xor
or
sbb
cmp
lock
push
js
hlt
repnz
jnp
xor
pop
insb
jo
orb
adc
lahf
lods
ds
jmp
add
lret
lods
add
fnsave
jmp
data16
jne
add
mov
vpaddw
jbe
mov
pop
leave
addb
xchg
dec
adc
mov
pop
in
jecxz
popa
call
data16
inc
xor
add
pop
inc
xor
je
push
in
test
inc
je
jne
rcr
push
lods
pop
insb
add
pusha
std
and
je
adc
jmp
les
and
cwtl
lock
pop
aad
and
jge
int3
rcrl
fnsave
mov
je
adc
xchg
negb
sbb
push
and
sbb
jl
imul
sub
mov
ficomps
bsr
mov
movsb
lock
aad
cmp
sbb
stos
js
std
rol
or
jge
dec
sub
push
rol
jp
cmpsb
mov
fadd
int
adc
iret
arpl
fiaddl
inc
ljmp
jmp
les
mov
pop
pop
lods
or
adc
sub
idivb
fwait
outsb
inc
ficompl
gs
sub
std
repnz
popf
imul
push
inc
mov
sub
mov
in
jg
mov
into
test
jbe
insb
adc
mov
jp
int3
sbbl
cmp
or
rolb
mov
or
mov
dec
push
sbb
mov
jle
rcrl
test
imul
mov
clc
sbb
pop
mov
xchg
push
pop
xchg
push
insb
push
mov
ficomps
pop
ret
adc
test
fwait
stos
insl
pushf
and
loop
push
pushf
in
test
push
aad
shll
cmp
sbb
decl
dec
mov
scas
lret
and
inc
into
sub
lret
push
data16
xchg
xor
popf
fimuls
rcl
jmp
xor
stos
inc
cmp
cwtl
stos
in
pop
enter
push
dec
pusha
out
xchg
or
xchg
pop
dec
mov
sub
movsl
frstor
sub
lods
in
fidivl
fs
sub
push
xchg
test
cmp
cli
push
cmp
lods
imul
popf
int
fiadds
fcmovnb
inc
mov
lret
test
push
pop
lods
pop
out
xlat
fnsave
aaa
inc
pop
push
adc
and
xchg
clc
sub
and
leave
mov
cmp
mov
jge
scas
mov
daa
ljmp
mov
sub
xchg
movsl
adc
add
mov
mov
in
push
std
test
xor
test
scas
fwait
and
lahf
mov
xrelease
arpl
movsl
lahf
inc
cmpsb
sbb
sub
xchg
add
into
lahf
push
in
push
pop
addr16
jno
add
mov
cmpsl
inc
sbb
sub
mov
cmp
fidivs
push
pop
cli
cmp
pushf
adc
xchg
in
std
cmc
aam
ffreep
cwtl
call
cli
lock
inc
and
pop
push
mov
mov
lea
outsb
mov
jecxz
sub
scas
mov
rcrl
insl
push
je
pop
sub
gs
cmpsl
lcall
sbb
xchg
mov
aaa
cmp
bound
inc
aaa
repnz
stos
cli
xchg
xchg
adc
pop
mov
pop
cmp
jge
andb
pop
out
pushf
cmpsl
mov
sbb
cld
lods
outsb
pop
fsubr
std
mov
xchg
add
jb
pop
in
test
cmp
ret
and
xchg
inc
dec
imul
cmp
stos
and
push
insb
inc
sub
xor
xor
test
inc
xchg
sbb
lcall
or
cmpl
mov
dec
mov
outsl
xchg
sub
mov
push
adc
xlat
stos
iret
or
push
out
mov
and
xor
mov
mov
mov
stos
insb
jbe
push
fdivs
pushf
fsubrs
sub
div
or
adc
call
js
ljmp
push
push
adc
insl
mov
sbb
sahf
sbb
mov
outsl
jle
dec
lods
fildl
ja
out
movsb
add
negb
mov
into
cmpb
movl
decb
mov
pop
jno
mov
je
test
sub
mov
pop
lock
stos
jle
std
mov
dec
add
cltd
imul
shl
cltd
pop
movsl
lods
dec
data16
mov
sub
sbb
rcrb
rclb
add
repnz
outsl
adc
inc
pusha
leave
push
aam
andl
ret
push
or
xchg
outsb
mov
mov
aam
out
jle
inc
push
fimuls
into
and
in
sbb
xor
inc
fwait
pop
fwait
mov
pop
pop
ss
push
jge
fucomip
xor
ficompl
enter
scas
fs
push
fisttpl
out
lcall
call
adc
and
and
inc
nop
pop
add
imul
and
rcrb
xchg
stos
cmp
and
test
mov
xchg
scas
pop
mov
aaa
aaa
push
gs
or
add
cmpb
mov
push
lret
or
fisubl
push
imul
xchg
or
cmp
inc
in
movsl
jmp
push
sbb
andb
les
cmp
mov
shrl
push
push
mov
leave
jo
cmp
arpl
movsb
mov
sbb
push
push
popa
fcompl
lea
push
cmc
push
insl
pop
hlt
dec
push
mov
in
pop
cmp
sbb
shll
les
pop
rclb
test
xor
test
xlat
btl
sub
mov
notl
jecxz
mov
sub
movsl
mov
das
push
lret
mov
xor
lret
loopne
lock
in
pop
mov
pushf
adc
sbb
push
or
push
loope
rol
push
popf
aaa
sbb
vmovd
sub
cwtl
push
xor
fnstsw
dec
cmp
js
imull
test
pop
mov
mov
jmp
or
ds
mov
inc
mov
andl
inc
lea
les
rorl
pop
subb
fs
jno
push
mov
push
xlat
add
call
fs
sbb
nop
test
dec
mov
fsubp
addr16
mov
or
aaa
push
jmp
out
mov
stos
mov
adc
pop
pop
sub
dec
jae
shrb
iret
mov
arpl
inc
jmp
ret
lods
dec
and
push
pop
cltd
sbb
clc
pop
xor
mov
fsubs
sbb
mov
push
ret
jae
dec
and
mov
sbb
lret
imul
stos
cwtl
and
sub
or
nop
pop
fwait
jmp
xor
inc
stc
je
psubq
push
fstl
mov
popa
jno
mov
sbb
mov
imulb
xlat
push
sub
ja
lods
push
ret
cmpsl
and
popf
push
inc
in
adc
inc
dec
call
pop
movb
jbe
xor
sbb
bound
test
scas
in
jecxz
sahf
clc
pop
repz
cwtl
push
les
cs
in
cltd
push
outsl
roll
and
sbb
push
push
notb
add
or
push
lret
jo
push
aad
push
pop
aaa
subl
addr16
mov
mov
jo
decl
out
cmp
rclb
lcall
push
mov
jne
jns
repnz
insl
enter
cmp
aad
xchg
mov
adc
push
mov
popa
xchg
addr16
sbb
out
sbb
sbb
mov
lea
or
mov
fisubl
jge
or
in
xchg
mov
loop
xor
lock
sti
hlt
gs
repnz
add
pop
icebp
pop
fisubrl
adc
fldl
add
xchg
int
mov
pushf
sbb
pushf
and
sti
call
inc
aas
add
fsubrs
stc
fdivrs
sbb
arpl
push
pop
jns
push
add
push
cmpsl
sbb
mov
fdivrl
es
mov
lahf
xchg
fstps
adc
shrb
push
push
inc
add
fisubrl
jnp
lret
pop
pop
fistpll
hlt
xchg
cmc
adc
bound
sbb
add
daa
and
mov
xchg
cmpsb
jp
mov
std
cltd
lret
mov
fildll
outsl
mov
mov
xor
inc
push
pop
mov
xor
sahf
mov
and
adc
push
mov
int
leave
popf
inc
mov
hlt
out
pop
ror
mov
adc
arpl
cmp
popa
mov
inc
jp
mov
adc
aaa
push
es
in
aas
mov
out
pop
das
jg
aad
sti
andb
in
in
xchg
mov
or
push
cmp
in
fwait
cmp
pop
cmp
aas
lidtl
pop
xchg
xchg
cli
test
jp
dec
bound
push
sub
ret
cmpsl
cmp
frstor
popa
bound
push
test
aam
or
insb
add
pop
daa
repnz
push
xchg
lcall
insl
sub
inc
outsl
inc
cmpsb
inc
es
rolb
xor
xor
sbb
mov
cli
mov
adc
enter
test
pop
jle
pop
dec
aaa
push
jo
dec
mov
sbb
test
sbb
xor
imul
cmpsb
cmp
xchg
and
imul
js
ss
je
out
xchg
xor
push
or
mov
adc
and
pop
push
lods
push
and
into
xchg
mov
mov
cli
es
pop
inc
in
lds
push
in
into
popf
fnstsw
or
ljmp
add
jp
mov
xchg
leave
outsb
adc
mov
jecxz
rolb
outsb
cmp
jecxz
dec
mov
imul
aas
rcrl
xchg
dec
sahf
sbb
mov
cmp
and
setl
inc
testb
inc
lea
and
nop
push
in
and
std
push
jmp
imul
les
pop
jno
or
cltd
push
mov
test
ja
inc
adc
xchg
xchg
daa
push
test
cmp
push
loop
or
shrl
lds
push
jg
enter
jnp
adc
and
xor
mov
out
loop
cmp
in
repnz
and
fwait
add
mov
imul
mov
test
mov
jne
adc
clc
idiv
cmpsl
out
pop
lods
rolb
push
imul
sbb
es
addr16
cmp
pushl
fdivrs
sbb
adc
cmp
leave
sbb
push
ret
and
xor
inc
inc
sub
pop
loop
xchg
cmp
and
cs
mov
jb
mov
ret
adc
jecxz
push
xor
sub
pop
outsl
add
cmc
pop
add
pop
mov
sbbb
push
es
add
loop
int3
and
adc
fnsave
into
dec
dec
fnsave
push
test
jne
mov
dec
sub
push
andl
push
sbb
psubw
sub
addb
dec
outsl
xor
js
push
bt
bndstx
mov
adc
add
xchg
mov
mov
orb
push
mov
and
ret
cwtl
repnz
or
xor
jle
mov
int
xchg
lods
leave
pop
lcall
adc
imul
andl
sar
mov
hlt
jp
fildl
dec
adc
add
xchg
pop
and
test
inc
mov
sbb
in
int
push
inc
and
lock
mov
mov
scas
add
mov
shrb
push
mov
xchg
bound
sub
inc
idivl
dec
xor
cwtl
xor
cmp
push
xchg
out
lds
pop
mov
mov
call
cmpsl
test
push
mov
xor
sub
out
push
lahf
xchg
and
mov
inc
js
shl
nop
xor
cmp
lods
mov
pop
repz
imul
jns
add
xor
xchg
mov
mov
arpl
cmpsb
mov
or
jl
insb
adc
pop
cltd
jns
pop
loopne
xchg
loop
dec
pop
repz
ret
js
mov
ret
loop
adc
ret
sbb
mov
fucomi
or
ja
bound
inc
push
inc
icebp
outsl
sub
jg
lret
dec
sbb
lods
jp
pushf
stos
gs
mov
int
mov
pop
in
jbe
xor
fdivr
das
pop
shr
xchg
dec
pop
adc
imul
inc
adc
lods
daa
sahf
gs
dec
cmp
add
stc
inc
fisubrs
dec
sarb
out
jnp
rep
adc
sbb
leave
enter
xor
jl
add
ljmp
and
inc
sub
xchg
mov
cmpsl
jns
lahf
xor
popf
addl
loope
xchg
dec
fisttps
push
push
out
inc
dec
movsl
push
les
daa
sub
cwtl
sbb
idivl
pop
stos
push
push
pusha
flds
insl
push
mov
lret
sbb
fsub
push
pop
pop
mov
iret
jle
data16
jmp
pop
imul
mov
mov
inc
lahf
mov
fildl
or
cs
add
js
in
imul
ret
inc
mov
leave
xor
push
add
sub
pop
jecxz
mov
lds
faddp
jg
int
aam
cmp
js
fs
inc
pop
sahf
in
xor
lahf
adc
nop
cmc
jmp
mov
dec
out
mov
push
fbld
inc
scas
cmpsl
push
mov
inc
enter
arpl
mov
add
pop
mov
setnp
pusha
test
enter
jb
cmp
xor
push
dec
stc
jno
movsl
pushf
insb
scas
xchg
popf
subl
pusha
ja
in
repz
clc
inc
pop
cli
test
sbb
xor
add
clc
bound
mov
xor
dec
fisubs
and
imul
mov
ja
pop
inc
lea
cmp
negl
aaa
hlt
pop
mov
cmp
inc
adc
fs
sub
xchg
repz
pop
xchg
mov
lods
les
lahf
imul
data16
dec
xor
sbb
dec
dec
loopne
cld
and
and
insb
in
repz
pop
in
cmp
jp
pop
fidivs
adc
pop
test
lahf
pusha
int3
movsl
loopne
xlat
sbb
jle
push
adc
loop
pusha
out
fdivr
xorl
shll
pop
mov
xchg
out
enter
or
pop
mov
push
push
insl
das
enter
repnz
xchg
xlat
shrl
sbb
sub
jns
jle
test
push
out
inc
cs
ss
push
sti
dec
mov
pop
inc
mov
and
mov
dec
test
ds
in
stc
inc
or
shll
jg
addl
push
ret
mov
mov
ljmp
lahf
mov
sub
jle
mov
mov
push
iret
btr
popa
xchg
out
push
jnp
ja
aas
push
inc
adc
out
pop
jno
jge
dec
add
jo
outsb
pushf
mov
xchg
cmc
push
out
mov
xor
jmp
push
or
mov
lods
jbe
mov
adc
test
ljmp
pop
scas
dec
adc
ss
cmp
fistl
jecxz
fdiv
decb
sub
sub
jbe
adc
cmp
push
test
rorl
xchg
mov
and
movsl
cli
sub
pop
sbb
out
enter
inc
sub
xor
out
add
fisttpl
push
lret
sbbl
add
loop
and
and
cmp
pop
sbb
sbbb
add
lret
shlb
loopne
mov
dec
imul
ljmp
sub
xchg
mov
lods
sub
sub
in
add
mov
xorb
fiadds
mov
inc
adc
jbe
out
sahf
sahf
sahf
mov
xchg
scas
std
pop
lcall
aad
sti
int3
std
testb
iret
sub
pop
mov
fidivrl
das
fwait
xchg
out
test
dec
adc
jl
test
sbbl
or
jp
push
cs
push
or
mov
mov
mov
or
or
daa
jbe
in
aas
or
or
mov
adc
mov
mov
fsts
fisttpll
jne
and
mov
arpl
fsubrp
rclb
pop
in
sub
cmpsl
mov
cmc
mov
addr16
dec
les
sbb
outsb
xor
call
sarb
gs
pop
lock
xchg
xchg
xchg
or
fisttpll
movsb
push
decb
or
mov
sbb
sbb
aad
nop
xlat
shrb
adc
nop
jae
or
fsubrp
xorb
rcrl
add
pop
jmp
and
ret
in
popf
test
push
fisubl
cmp
arpl
nop
shll
repz
enter
lcall
jecxz
mov
iret
lods
pop
add
lods
mov
xchg
fiaddl
mov
xchg
stc
add
sub
cmp
loopne
jge
mov
fsubl
or
mov
in
das
inc
scas
shlb
fmull
dec
inc
push
iret
push
dec
push
jecxz
movsb
sub
fisubrl
inc
sbbl
fistpl
cltd
scas
mov
stc
cs
popf
cmp
jae
arpl
cmc
pop
dec
add
rolb
mov
icebp
fiaddl
cmp
mov
cmpsl
cmp
test
loop
and
inc
enter
push
arpl
arpl
cmp
cmp
mov
dec
pushf
ret
insb
add
mov
push
testb
jns
arpl
mov
std
sbb
imul
mov
pop
lret
sahf
loope
adc
cmc
lcall
push
mov
mov
or
ret
fadds
push
sahf
imul
popf
fcomps
popl
add
mov
mov
mov
dec
pop
mov
xor
in
mov
mov
icebp
jmp
arpl
fists
ds
fsts
lret
into
out
leave
popf
xor
shll
cld
xchg
insl
nop
mov
in
xchg
loop
add
pop
add
test
sbb
xor
fnstenv
mov
popa
add
sub
in
mov
out
test
or
aaa
out
xor
and
or
add
adcb
daa
cmp
mov
arpl
fstps
scas
pop
mov
ss
sbb
push
dec
test
or
lock
and
xor
and
pop
adc
sub
mov
fldenv
push
imul
pushf
mov
in
add
sbb
ja
fsubl
xchg
add
ds
scas
insl
setle
xchg
and
movsl
mov
xlat
sbb
aad
mov
mov
pusha
cmc
mov
je
sbb
sub
or
and
rclb
scas
fsubrp
es
movsl
pop
adc
push
push
inc
mov
gs
mov
xor
shl
jo
fs
fldl
xor
test
mov
push
sub
adc
gs
rorb
out
in
aaa
xchg
pop
ja
mov
loop
cmp
cmpsl
aas
shll
xchg
mov
sbb
ds
loope
aas
jecxz
adc
xor
push
push
adc
fldenv
nop
jne
add
inc
lret
pop
xor
mov
xchg
in
std
into
lret
cmc
pusha
sub
jnp
adc
ficoml
adc
ss
push
imul
and
je
lods
call
test
rolb
cmp
fsubl
call
popa
inc
fs
leave
fmull
xor
mov
xchg
cmp
fisubl
mov
sbbb
pushf
dec
dec
push
in
inc
inc
loope
hlt
dec
dec
or
add
bound
push
sbb
dec
inc
or
lds
sub
cmpsb
lret
data16
adc
pop
inc
or
push
cli
inc
stos
shll
test
push
in
dec
pop
outsb
jns
cmc
cmp
in
mov
adc
je
push
addb
leave
hlt
and
xor
mov
orl
aam
pop
sti
jp
movsb
mov
add
aad
ja
or
aad
rorb
arpl
and
stos
adc
or
std
pop
pop
cmp
cmp
push
mov
pushw
fdivp
jp
dec
or
aam
shrb
cmc
inc
adcb
adcl
andl
pop
cmc
or
cmpsb
lahf
lock
in
pop
cmp
rcl
lock
push
cmp
or
inc
ljmp
scas
ret
in
and
sub
fsub
xchg
imul
repnz
and
adc
roll
and
js
jo
mov
xchg
ret
jnp
scas
mov
adc
stc
inc
lret
push
cltd
push
data16
add
xchg
gs
pop
data16
cmp
or
add
xchg
sbb
mov
cld
cmp
jno
stc
or
fmull
mov
mov
lcall
adcl
icebp
xchg
addr16
jbe
pop
xorl
popa
movsb
mov
mov
aad
pop
decb
sub
cmpsl
inc
sub
fistpll
xchg
daa
lret
shlb
stos
and
leave
je
and
inc
pop
xchg
js
jge
lods
inc
das
or
adc
daa
je
fsubrl
pop
xchg
add
and
iret
clc
xor
neg
cmp
lods
scas
ds
mov
cld
push
inc
cltd
mov
icebp
or
les
aaa
xor
mov
jge
fwait
outsl
mov
cmpsb
lods
and
jmp
lret
jns
push
push
int3
pop
cli
sub
push
and
data16
orl
mov
scas
sub
sbb
sarb
mov
les
push
fdivrs
adc
xchg
mov
xchg
stos
arpl
addr16
cmp
adc
xchg
pop
lret
fs
daa
mov
frstor
shl
lcall
adc
push
loope
ljmp
inc
loopne
arpl
sub
push
call
xchg
dec
outsb
aas
add
in
xchg
repz
fistl
xchg
jecxz
jecxz
xor
inc
daa
adc
lods
jge
scas
push
mov
aad
adc
shll
lea
ss
xchg
cmp
sbb
data16
sub
and
jno
cmp
or
out
aad
ret
test
int3
aad
xchg
and
jecxz
test
mov
and
fucomp
inc
ficomps
bound
daa
sub
shrb
es
jl
js
out
aam
popf
sbb
inc
inc
pop
push
in
loope
cmp
xchg
ljmp
pop
ljmp
jns
mov
mov
bndldx
push
jne
gs
cli
xlat
inc
jmp
xor
inc
adc
xchg
scas
insl
inc
pop
mov
xchg
mov
mov
repz
dec
mov
jle
inc
jmp
jbe
das
jl
xchg
mov
dec
inc
shrl
adc
push
jl
in
rcrb
adcl
mov
sbb
adc
and
push
xor
dec
push
sbb
mov
pushf
jecxz
test
gs
xchg
pop
dec
push
sub
mov
dec
mov
xlat
jmp
add
leave
pop
push
cmpsl
xchg
adc
popa
xor
xor
inc
dec
mov
loopne
vrsqrtps
movsl
addl
mov
icebp
jge
and
sbb
das
shl
pop
popa
lret
data16
gs
mov
push
push
dec
stos
jmp
jle
ljmp
xchg
addr16
repz
xchg
sbb
inc
lahf
aad
jbe
repz
mov
stc
fstpt
push
push
or
inc
push
mov
pop
lret
bound
add
xor
jb
mov
adc
clc
pop
movd
add
lret
jne
les
mov
out
xor
add
pop
arpl
data16
rol
pop
xor
sub
ret
mov
sbb
fstps
add
shr
push
movsb
sti
shll
stc
dec
or
ja
std
mov
rorb
sbb
jnp
xchg
jle
dec
aad
mov
insl
cmp
pop
icebp
shll
test
jae
xor
xchg
popa
xor
jnp
cmpsl
push
pop
cmp
sub
dec
fcoms
repnz
mov
push
fs
sub
aad
sarb
jne
scas
jp
dec
and
cld
scas
repnz
cmp
hlt
mov
fwait
xor
adc
inc
dec
inc
pop
lods
push
rcrb
lret
or
repnz
ja
in
sub
ljmp
ss
into
and
dec
pop
mov
shr
das
inc
sub
mov
and
pop
cmp
push
cs
xchg
mov
adc
movsb
in
pop
xorb
pop
add
loopne
or
rorb
mov
gs
pushf
leave
add
mov
scas
pop
or
add
je
push
rcr
out
xchg
int
ja
mov
pop
fucomip
ds
fwait
jecxz
aaa
dec
test
cmc
lret
lcall
jbe
into
xorb
fildll
inc
leave
notl
unpcklps
bound
cmc
sub
rorb
jae
mov
bound
jb
sub
cmp
ss
or
xchg
aaa
and
sub
sbb
repnz
xor
or
aam
mov
sarb
push
mov
and
mov
fucom
mov
stos
mov
sti
jns
lods
jmp
add
and
pushf
sbb
adc
test
mov
jo
sbb
xchg
sbb
jp
enter
or
fdivrp
jo
add
push
and
scas
lods
js
jbe
push
mov
add
loope
fwait
sbb
add
les
lock
pop
dec
adc
or
mov
aaa
sub
mov
cmp
scas
pop
loope
sbb
repnz
popa
inc
cmc
cs
xchg
xor
mov
xchg
stos
les
jbe
in
mov
iret
dec
ficoms
add
and
cmpsb
xchg
clc
push
sub
jmp
add
xchg
mov
les
adc
loop
js
pop
ffreep
sbb
fs
xchg
cmp
xor
fwait
loope
inc
lods
xchg
mov
notl
mov
mov
js
or
or
filds
notb
push
adc
jbe
jg
in
push
rclb
sbb
mov
pop
outsl
xor
pop
inc
pushf
ret
popa
loop
lahf
mov
inc
ja
sbb
js
xchg
sbb
mov
mov
in
cmp
pop
lcall
pop
push
or
iret
sbb
add
jo
pop
cmp
xlat
mov
test
das
mov
add
repnz
test
sub
shll
jecxz
jbe
lcall
or
out
les
jne
and
cmpsl
out
push
leave
add
or
mov
mov
pop
xorb
pushf
inc
gs
jmp
and
cli
pop
test
lcall
pusha
or
insl
shrb
andl
lods
dec
push
addr16
shrb
mov
ds
ss
push
jle
sbb
ds
xor
pop
out
ficoml
ja
dec
cltd
push
sbb
mov
out
pop
fsubr
mov
fidivrs
test
mov
jecxz
pop
xlat
cmp
and
leave
pusha
into
push
fists
pcmpgtd
cltd
push
jbe
addr16
dec
mov
add
and
je
aad
xchg
xchg
pop
js
aad
ljmp
mov
cli
test
repz
fstl
cmp
fwait
or
insb
roll
lea
mov
dec
mov
cmc
sbb
je
cmp
sbb
push
in
sub
out
data16
popa
add
mov
or
in
sbb
jb
fnstsw
shrb
xor
sub
pop
dec
hlt
mov
mov
daa
enter
mov
mov
xchg
test
push
jg
icebp
sbb
mov
mov
or
jnp
push
xchg
xlat
jmp
mov
lods
sahf
ret
jg
pop
out
cmp
add
negl
cwtl
gs
xchg
xor
xchg
aaa
test
in
mov
scas
loope
scas
sub
jle
in
adc
mov
imul
test
aad
aas
pop
div
loopne
mov
addr16
roll
stos
lds
xchg
and
xchg
mov
loope
push
jmp
dec
imul
xchg
xchg
and
and
mov
stos
mov
cld
cmp
push
push
pop
fcomi
mov
mov
jge
test
xchg
and
mov
roll
xor
std
movsl
icebp
gs
xchg
mov
dec
aam
arpl
mov
fiadds
add
mov
pop
cmp
fistps
ret
andl
jnp
mov
pop
outsl
fsubr
int
nop
fildll
lock
pop
add
or
stos
in
ficompl
jge
or
mov
add
je
inc
fcomps
lods
jbe
add
scas
sub
mov
xor
push
mov
dec
aam
imul
xchg
dec
dec
repz
xchg
adc
push
push
in
test
inc
adc
mov
cmpsb
sti
jmp
jl
pop
xchg
lahf
mov
cmc
pop
je
jecxz
enter
adc
mov
xchg
jp
dec
fldt
pop
push
sub
jp
ret
cmc
inc
xor
nop
cmpsb
cmp
pop
call
xchg
pop
ja
rorl
pop
cmc
inc
pop
ret
sarb
jl
or
lcall
push
mov
xor
ficompl
rol
ja,pt
ljmp
lret
adc
lahf
jbe
and
mov
divl
sub
pop
fidivs
mov
cmpsl
xchg
leave
movsb
mov
pop
outsb
cmp
ret
jge
mov
fs
out
inc
mov
dec
mov
test
das
dec
xchg
scas
pop
and
push
adc
xchg
sti
mov
nop
push
sub
ret
mov
popa
mov
mov
xorb
movsl
sbb
lea
cmp
inc
fstl
stos
push
out
sbb
push
pusha
push
sahf
roll
repz
loope,pt
mov
je
rorl
into
sarb
mov
popf
das
cmp
ja
xlat
loopne
or
cmp
sub
and
pusha
cmp
mov
mov
or
fdivrs
push
push
leave
sub
push
adc
xor
mov
int3
mov
sbb
dec
stc
push
sbb
jp
add
outsb
enter
mov
pop
mov
push
mov
inc
sbb
scas
fisubl
dec
pop
mov
shrl
add
inc
mov
jne
mov
aad
push
call
xchg
jns
lock
psubsb
sbb
pusha
sti
push
shll
movsb
sbbb
dec
cld
stos
jg
pop
notb
int
outsb
cmc
dec
loope
movsb
rcr
aaa
push
xchg
lret
lret
call
popf
mov
fcoml
fnstcw
or
dec
mov
dec
rcrl
loop
lds
sbb
iret
adc
push
shll
test
adc
xor
add
les
inc
dec
and
or
sub
inc
scas
popa
in
aas
push
and
pusha
movsb
outsl
dec
aad
inc
cmp
mov
jns
lret
jb
add
xchg
movsl
add
pop
inc
inc
cs
jae
aad
dec
sub
sbb
insl
mov
jle
ds
push
pop
rolb
fs
jecxz
mov
cmp
movsb
or
sbb
dec
loopne
mov
lret
insl
jb
cld
je
stos
out
scas
lods
subl
fistpl
add
fbstp
and
mov
pusha
pop
xor
test
cltd
call
mov
fistps
inc
push
jp
xchg
push
and
out
add
shll
add
sub
rorb
cmc
jns
test
in
adc
mov
xchg
mov
xor
in
fidivrs
adc
jns
pop
jne
mov
inc
add
test
popa
orl
pop
cmc
jnp
and
cwtl
mov
dec
pop
ja
pop
dec
add
hlt
sub
js
dec
mov
insl
add
sub
mov
jl
pop
sub
xlat
ljmp
and
sub
lret
mov
add
rorl
push
das
push
out
jmp
add
arpl
ficoml
outsb
jno
dec
pop
pop
mov
mov
clc
xchg
cmpsl
adc
sub
xlat
mov
adcb
xor
cmp
lds
sbbl
call
fisttpl
dec
adc
dec
lods
jbe
fsubp
push
xchg
cmc
push
xor
xor
xor
jne
dec
cmpsl
cmp
clc
xchg
sbb
lock
out
inc
cltd
sahf
dec
lds
mov
dec
dec
rorb
fdivrp
imul
or
adc
movsl
loopne
js
call
imull
rclb
add
or
push
cmp
int3
pop
out
jnp
mov
mov
lds
lods
sub
outsb
js
sbb
pop
rcrb
les
xchg
dec
mov
int
sbb
hlt
cmpsb
jbe
jg
int3
adcb
inc
cli
cld
jbe
les
cwtl
mov
or
cwtl
mov
adc
movb
push
mov
mov
xor
xor
in
push
shrb
push
test
int
subl
mov
adc
fcmovb
cli
sbb
cmp
inc
btr
xchg
jae
add
subb
and
in
rol
ret
ss
add
pop
cmp
xchg
cmp
pop
enter
and
xchg
cmp
loop
dec
inc
xor
loop
push
inc
mov
push
loop
cld
dec
aas
inc
fidivs
xchg
in
mull
add
mov
shlb
and
inc
icebp
adc
repz
pop
pushf
push
pop
out
mov
lret
rolb
xchg
add
adc
stos
jae
mov
shlb
lret
shrl
in
dec
pop
repz
sub
xor
push
in
nop
add
mov
pop
aad
int3
pmuludq
into
insb
popa
clc
popf
jns
mov
and
pop
outsb
dec
xchg
mov
mov
pop
inc
into
movsl
repz
cmp
in
lods
arpl
out
cli
add
ja
jle
in
cltd
fdivrs
sbb
xchg
inc
loopne
out
lea
cmp
mov
repz
insl
or
incl
add
inc
rcl
jbe
gs
inc
stos
mov
adc
inc
sub
mov
arpl
pop
lods
lcall
orb
nop
xchg
dec
test
sbb
cs
repnz
into
adc
add
pop
hlt
leave
and
dec
inc
pop
leave
mov
das
out
sbb
test
sti
popl
into
lahf
sbb
cmp
mov
mov
fnstsw
psubb
sbb
popf
je
mov
rcll
mov
loop
pop
jae
mov
bound
dec
pop
mov
imul
cmpsl
adc
add
pop
lock
push
pop
xchg
sub
add
fdivp
repz
cs
jns
mov
inc
aam
inc
pushf
jns
shlb
rcll
push
inc
push
mov
push
inc
fldt
push
mov
call
mov
inc
or
push
faddl
es
pop
jmp
fdivl
dec
movsl
jnp
add
sub
dec
jo
orb
jo
pop
nop
insb
add
psraw
jbe
fldcw
nop
push
sbb
jns
test
jbe
dec
loope
xchg
scas
xor
icebp
movsl
jg
stc
mov
jge
in
cltd
hlt
xchg
orb
cmp
mov
stc
lock
aad
lea
int3
xor
ljmp
push
dec
leave
and
cmpsl
ds
add
fnstcw
aad
mov
fsubr
jle
outsl
daa
sbb
add
aaa
leave
add
lret
push
enter
adc
dec
sub
inc
sbb
dec
in
fbld
push
xchg
imul
adc
test
lock
cltd
xor
outsl
test
data16
push
mov
push
sbbl
lods
in
jmp
cmpsb
icebp
jmp
test
lock
cmp
and
andb
jl
cmp
cs
pop
cmpsl
in
cmpsl
pushf
cli
mov
lods
push
stc
mov
jmp
sti
xchg
stos
xor
sbb
mov
imul
test
pop
adc
movl
xor
push
inc
fstpt
aad
pop
or
ret
pop
jne
jbe
mov
add
mov
xchg
sub
add
dec
dec
xadd
pop
out
xchg
jnp
or
in
dec
out
push
jmp
jmp
cmpsb
out
dec
cmp
push
jne
pop
lret
jg
insb
pop
cld
call
in
fstps
mov
cmp
push
add
repnz
jmp
test
jne
push
dec
jae
xor
pop
jmp
fwait
sub
xor
repz
pop
pop
test
push
icebp
inc
push
scas
stos
xor
pop
repz
push
icebp
xchg
fildl
adc
pop
call
add
and
adc
in
jmp
out
or
push
outsb
and
push
sub
aam
fiadds
iret
sbb
sbb
adc
rclb
jno
shl
iret
jns
cmp
fadd
mov
andb
lret
scas
stos
mov
mov
lahf
iret
dec
dec
sbb
shrl
ja
test
iret
je
inc
dec
out
and
xchg
sbb
xor
add
mov
push
cmc
sub
sub
jl
pop
cmp
jb
mov
movsl
sti
mov
insl
negl
hlt
mov
fcomi
jns
and
jge
jne
lods
xchg
sub
sub
or
mov
jbe
stc
sbb
sti
or
xchg
repz
sahf
movsl
lahf
mov
add
sub
inc
sbb
frndint
xor
mov
loope
ds
inc
aas
scas
and
adc
lods
mov
mov
stos
flds
imul
and
pop
lret
lods
inc
adc
int
or
add
push
mov
out
pop
lods
movsb
adc
jl
and
push
in
mov
lahf
mov
or
jne
sbb
jge
adc
stc
inc
lock
ds
loopne
adc
shl
push
inc
out
xor
vdivsd
insb
add
fidivl
jle
and
jg
cmpsl
mov
stos
inc
dec
adc
shll
lcall
sahf
gs
push
or
cs
cmp
loop
xchg
pop
fidivl
arpl
cmp
cmp
mov
aaa
mov
stc
push
lret
into
push
push
mov
mov
cmp
pop
jge
mov
sub
and
jno
ds
xchg
mov
push
pop
cltd
fucomi
mov
sbb
cli
xchg
test
inc
cmp
cmpb
aam
xor
xchg
fiadds
dec
stc
je
out
cmpsb
sbb
sub
aad
aaa
inc
dec
mov
jg
pop
andl
not
daa
add
push
pop
out
daa
and
sbb
mov
arpl
es
xchg
test
xor
loope
push
cmp
mov
rcl
divb
lcall
and
mov
pop
dec
lahf
fstpl
pusha
add
mov
mov
filds
fcoml
adc
shl
out
stos
loope
rorl
pop
adc
push
out
fildl
daa
inc
scas
shlb
sbb
jmp
push
sbb
lods
lea
int
call
sbb
imul
sub
and
sub
jns
add
cltd
sub
mov
nop
lret
inc
pushf
mov
dec
xlat
jno
mov
mov
in
lret
orl
std
int3
arpl
jns
loope
adc
into
push
icebp
xchg
jle
xor
shr
push
pop
les
jne
js
push
ljmp
add
js
test
dec
adc
adc
popa
jg
fucomi
in
sbb
les
cltd
and
mov
inc
and
sti
xchg
mov
push
outsb
lret
testl
movsb
leave
and
xor
shl
xchg
ds
push
shlb
or
or
mov
hlt
xchg
notl
ljmp
popa
cli
insl
mov
loop
in
sahf
lock
pop
cmp
leave
loopne
lret
aad
pop
aam
push
fldenv
dec
mov
pop
jge
mov
in
dec
add
push
loopne
mov
fcompl
psubusw
jae
mov
dec
mov
xchg
push
and
pop
arpl
mov
jmp
sbb
lock
adc
out
xor
ja
mov
ljmp
loop
xchg
jp
sarl
jl
outsl
jle
dec
out
lcall
and
ja
jnp
mov
mov
mov
mov
mov
out
les
push
dec
pop
xchg
xchg
xchg
fcomp
mov
xor
dec
or
lret
in
inc
subb
xchg
call
orps
mov
mov
cwtl
int
sub
xor
lods
rcr
and
sti
mov
mov
adc
mov
test
fstps
pusha
push
pop
xor
orb
cmp
xchg
addr16
sub
add
xchg
idiv
dec
ja
mov
xchg
mov
push
pop
mov
mov
int3
mov
test
pop
flds
mov
test
imul
jne
xor
out
popf
test
mov
jno
sahf
xchg
mov
pop
cld
fwait
in
loopne
iret
add
outsb
add
mov
outsb
dec
and
jae
test
and
rolb
push
inc
testl
cmp
inc
cmp
pop
cmc
xor
aas
lret
mov
xor
imul
out
pushf
cmc
ljmp
jno
inc
mov
subb
mov
scas
inc
ja
cmp
cltd
int
mov
mov
lds
cltd
or
stos
cmp
mov
fwait
movsl
inc
aas
pop
jb
outsl
movsb
rorb
and
out
xchg
addb
fcomip
lea
sub
imul
pop
in
popf
push
fbstp
cmp
es
jge
lret
inc
rorl
aaa
std
push
or
jnp
xor
xor
leave
sub
fwait
mulb
cmp
std
outsl
daa
jle
push
sub
add
xor
xor
xchg
add
loope
dec
jmp
jb
gs
sub
inc
pop
out
push
mov
movsl
sbb
scas
clc
and
xchg
jp
daa
xor
sbb
jae
xor
mov
lahf
cmp
cmp
imul
cli
daa
inc
mov
lret
cmpl
mov
rol
sti
cltd
insb
test
pop
push
add
jmp
in
ss
mov
stos
dec
fldcw
lcall
cmp
sbb
fmull
mov
inc
jl
mov
test
scas
cmc
leave
fists
mov
cmp
mov
inc
sbb
xchg
aas
iret
outsw
mov
out
popf
sub
repz
mov
push
push
mov
sub
adc
lret
cs
outsl
lcall
inc
test
mov
adc
shrl
inc
pusha
dec
out
std
cltd
adc
push
out
fistpll
loope
adc
jmp
jmp
rol
jno
xor
xlat
dec
enter
pop
out
movsb
cmp
lods
push
jbe
xor
fists
out
jp
sbb
cmp
cmp
sbb
loopne
mov
inc
test
cmpsb
and
xor
xor
dec
mov
movsb
gs
enter
int3
lods
inc
mov
mov
dec
pop
cmp
arpl
xchg
pop
pusha
in
sbb
jp
imul
insl
mov
and
sub
sub
mov
outsb
mov
xchg
insb
rol
and
cmp
ja
lock
mov
sbb
mov
sub
lock
inc
mov
cli
inc
sub
std
xchg
dec
stos
sbb
test
dec
cmp
daa
dec
aam
lcall
ficoms
sub
aad
nop
dec
aam
jecxz
fnstsw
pop
xchg
jp
mov
popa
ret
mov
jnp
sub
pop
pop
jns
testb
cmp
push
cmp
pop
or
jg
sub
jno
sub
das
mov
push
fdiv
pop
dec
outsb
js
mov
sbb
leave
popa
sbb
mov
or
out
jns
dec
add
cmpsl
mov
sbbl
xor
imul
mov
xchg
in
aam
push
repz
dec
cmp
insl
insl
les
or
jg
jp
shll
in
fbstp
add
mov
sbb
inc
dec
int3
inc
pop
or
inc
nop
mov
cli
xor
mov
js
add
sti
or
cmp
test
test
add
std
std
xchg
loope
dec
psraw
cmpsb
int3
arpl
ja
xlat
and
mov
std
mov
adc
xchg
cmc
mov
push
test
pop
xor
sbb
pop
push
jnp
cmp
aam
fcmove
ljmp
rcll
je
xor
in
jns
in
push
insl
test
cmc
adc
add
dec
sub
jge
insl
pop
lret
mov
sub
cmp
rorl
mov
aaa
mov
sbb
cmp
sahf
add
jle
out
testb
testb
adc
sahf
stos
movsl
enter
and
push
idiv
fs
sub
adc
aas
fwait
mov
iret
mov
cltd
movsb
add
ret
mov
mov
loope
stc
enter
icebp
mov
and
cmpsb
push
xchg
inc
std
push
int3
jge
jne
arpl
leave
jno
mov
ja
add
inc
into
jg
cmp
lret
or
and
fs
in
lock
push
sti
xchg
xchg
pop
movsb
adc
sbb
out
mov
dec
fldt
sbb
jmp
add
lods
inc
fwait
jl
adc
sbb
lods
sahf
ret
sbb
outsb
imul
add
pop
fsubrp
les
jmp
pushl
push
fldl
mov
test
lds
cmpsb
xchg
out
jmp
in
jo
push
or
lahf
cli
movsl
std
lock
imul
pop
pop
pop
repnz
scas
sub
ljmp
fmuls
les
jns
out
idivb
outsb
shl
int
outsb
sbb
pop
jne
xor
mov
das
jecxz
fwait
push
loop
shlb
mov
and
rolb
imul
fwait
lahf
lds
cld
jmp
add
add
leave
mov
xchg
or
xchg
cmp
and
cmp
sbb
andb
mov
lcall
and
leave
xchg
clc
sahf
repz
push
jmp
cmp
cmpsb
call
push
or
sti
mov
mov
or
mov
cmc
loopne
cmp
aam
fildl
sub
inc
inc
mov
cmpb
stos
mov
mov
scas
add
fnstenv
inc
roll
idivl
aaa
mov
dec
mov
pop
enter
push
ret
outsb
push
xor
scas
pusha
cmpb
sub
scas
movsb
mov
pop
loopne
test
clc
push
ret
hlt
mov
adc
scas
inc
arpl
cli
ja
xchg
sub
mov
jne
pop
sub
and
out
test
xor
mov
jno
push
mov
jmp
jle
and
or
packsswb
or
xor
mov
adc
call
ret
push
xor
and
sub
mov
or
ljmp
xchg
addr16
and
lret
mov
mov
mov
mov
mov
xor
int3
mov
dec
add
cmp
xor
mov
jns
xor
push
sbb
lods
hlt
mov
dec
jle
cmpsb
jo
add
nop
cmpsb
adc
add
mov
mov
arpl
sbb
sti
adc
cmpsl
sub
inc
lods
aam
flds
cmp
push
mov
test
arpl
mov
ret
pop
inc
mov
dec
test
nop
sub
mov
jo
dec
lock
add
sbb
inc
push
in
sbb
push
sub
mov
out
sub
lods
push
adc
test
out
push
fsts
cmpsb
test
sub
orb
mov
hlt
in
adc
mov
inc
adc
ds
fsubrs
adc
push
scas
sub
dec
xor
pushf
cli
cmp
xor
mov
lds
aaa
stc
dec
adc
ret
dec
xchg
pop
dec
and
shlb
adc
aas
adc
popf
sbb
push
jle
mov
jo
clc
insl
sbb
jb
cs
aad
stos
xchg
jg
sub
mov
fsubr
push
ret
pop
jle
pop
mov
scas
mov
movsb
loope
cwtl
inc
pop
jl
cmp
out
incb
dec
cmpsl
pop
cmp
mov
cmp
push
dec
fsubr
int
jne
shll
out
dec
pop
pop
cmp
fcoms
jmp
adc
scas
call
ret
push
and
jae
mov
xchg
mov
mov
ja
pop
xchg
add
lahf
sub
xor
mov
adcb
ja
pop
push
xchg
inc
test
inc
loope
and
jb
pop
in
fadds
nop
dec
cmp
jecxz
imul
test
stos
adcb
lds
test
cmp
cmpsb
jmp
rcl
push
and
lds
iret
xchg
xor
jb
push
mov
nop
sbb
test
incl
repnz
xchg
jne
loopne
push
sbb
and
icebp
imul
jmp
mov
out
sub
fnsave
pop
cmpsl
push
inc
jnp
out
call
sub
mov
add
ds
dec
cmp
mov
popf
imul
imul
push
int
cmp
or
and
jae
sbbl
push
xchg
sub
sbb
xor
xchg
xor
adc
stc
adc
div
push
stos
mov
imul
stos
and
cwtl
xchg
ret
sub
dec
xacquire
push
movsl
and
imul
sub
ja
roll
enter
data16
push
xchg
enter
repz
cmpsl
mov
dec
mov
stos
iret
stos
inc
add
leave
test
push
mov
cwtl
push
rcrl
outsb
and
pop
fbstp
stos
inc
pop
sbb
hlt
out
inc
inc
pop
fucomip
lea
add
push
cmc
or
inc
jle
decl
jle
cmp
pusha
lret
mov
jns
aam
mov
test
cmpsl
fcomp
pop
sahf
or
and
dec
sbb
repnz
add
or
xchg
pop
jge
into
adc
inc
or
aas
mov
ficompl
movsb
adc
jnp
mov
push
or
and
push
xchg
ret
movsb
loopne
and
out
ds
sub
mov
dec
xchg
xchg
and
xlat
dec
daa
mov
aad
jne
loop
push
pop
xchg
add
lock
scas
sahf
push
fwait
ret
mov
lcall
xchg
mov
leave
iret
stos
pop
hlt
jo
dec
and
xchg
jnp
idivb
dec
mov
xor
pop
adc
jp
cmpl
and
addr16
shlb
cld
xchg
xlat
fs
in
mov
mov
jb
sbb
adc
xchg
pop
add
jl
outsl
shlb
call
push
xchg
fcompl
pop
pushf
test
dec
xchg
ret
in
sahf
out
lods
inc
clc
xchg
xchg
jp
sahf
lret
xor
imul
lret
repnz
jb
mov
push
pop
mov
xchg
outsb
jg
imul
shl
jbe
push
arpl
inc
xchg
mov
jmp
push
xchg
jl
sub
or
nop
dec
mov
sahf
mov
xor
jge
fimull
loopne
inc
push
mov
push
fisubl
add
fdivs
sbb
loopne
shll
inc
xor
mov
inc
fcoms
int
cmp
daa
out
mov
and
jecxz
and
cs
xor
and
movl
or
and
pop
in
jg
push
rcll
test
ret
jnp
push
xor
mov
add
imul
mov
insl
les
mov
or
jl
cltd
lods
mov
ret
clc
jae
pop
dec
aam
pop
ljmp
dec
mov
pop
bound
mov
jp
push
inc
cmpsb
mov
rorl
cmp
xchg
out
mov
add
push
scas
mov
fdivr
jp
lods
icebp
cmp
stos
int3
fisubrs
jne
pop
out
mov
stc
lods
lods
fnstenv
or
inc
jo
scas
and
loopne
stc
std
pop
or
add
jnp
add
setle
mov
loopne
xchg
cs
lods
scas
push
movsl
loopne
cld
fs
sub
in
xchg
or
jns
dec
std
push
inc
xor
sub
lods
pop
or
xor
mov
lock
mov
mov
inc
call
int3
arpl
arpl
or
fsubrs
int
leave
repz
dec
nop
adc
jne
loop
cmpsl
jecxz
mov
cltd
mov
call
cmp
aaa
insl
lods
add
cmpl
rcrl
add
std
dec
mov
rcrb
sti
shlb
xor
mov
insb
jl
cwtl
jle
inc
add
mov
lock
leave
adc
jecxz
push
mov
int3
imul
sub
fists
ljmp
mov
sbb
push
nop
stc
adc
sub
shlb
int3
scas
and
sub
mov
shl
dec
aam
or
lea
add
pusha
negl
pop
cmpsl
sbb
push
xchg
mov
loope
out
stos
les
mov
inc
cmp
ljmp
les
lcall
inc
ja
jno
popa
or
shrb
adc
mov
fidivrl
scas
mov
push
movsl
sbb
mov
rcll
cmpsb
data16
enter
jbe
mov
clc
test
or
stos
inc
jge
adc
lcall
ret
popa
jge
dec
pop
bound
sbbl
dec
into
jmp
mov
out
iret
xor
popf
push
lret
and
cmpsb
movsl
mov
sbb
mov
rcll
mov
inc
sti
imul
daa
rcrl
mov
dec
sti
jbe
roll
push
fdivl
ret
inc
lock
push
push
push
inc
flds
sarb
and
xor
jnp
lcall
mov
lods
cld
lods
inc
cs
inc
jmp
mov
fldcw
push
insl
repnz
dec
aad
mov
addr16
ljmp
mov
xor
xchg
inc
pop
scas
jno
adc
lods
das
xor
loopne
in
popf
xor
push
popf
pop
shll
sbb
call
cmp
test
int
adc
divb
jb
dec
mov
mov
repz
cmp
jl
add
int3
cmp
jo
dec
movsl
sbb
fistpll
cmp
cltd
pop
and
jg
pusha
test
hlt
clc
xor
sub
int
aam
pushf
pop
dec
dec
ss
lea
and
jp
daa
les
mov
sub
push
test
mov
jecxz
mov
test
and
lcall
pop
cld
dec
add
pop
mov
dec
repnz
mov
pop
mov
icebp
stc
insb
pop
insl
jge
outsb
sub
cli
push
ret
mov
sarl
xchg
ja
add
adc
mov
ret
mov
sbb
fcomps
addl
sbb
inc
cmc
and
push
fwait
mov
or
push
dec
incl
jmp
pop
fldt
subl
popl
sbb
cli
inc
shll
loope
sub
das
xchg
pushf
incb
shl
aaa
pusha
push
in
xchg
in
cmpsl
jae
ja
mov
xor
jl
data16
push
inc
or
cmp
lock
mov
loopne
lock
xchg
sbb
jg
sbb
gs
xor
hlt
loopne,pt
dec
adc
aam
lahf
sbb
sbb
rcrb
mov
aaa
push
fcmovne
xor
ja
fwait
imul
xlat
jns
inc
mov
sub
add
adc
orl
pop
pop
jno
cmc
daa
mov
inc
aam
mov
or
inc
xlat
repz
andb
jecxz
pop
push
je
jne
int3
lret
xlat
scas
pop
and
xor
inc
dec
mov
jg
shlb
lcall
and
ss
add
adc
pop
or
hlt
xor
dec
test
cmp
loop
out
das
xchg
lcall
xchg
out
jge
mov
andb
pushf
shlb
push
xchg
sub
adc
jg
adc
lret
imul
pusha
sub
insl
aam
jns
jno
jbe
outsl
xor
pop
test
mov
add
sub
cmp
pusha
out
inc
icebp
movsl
pop
loope
cld
scas
jns
inc
mov
xchg
or
push
mov
cmp
ror
rcll
cmpsl
jle
les
add
dec
xor
lret
out
jmp
push
adc
sub
out
add
shll
int3
lret
sbb
cmp
mov
enter
repz
push
repnz
push
mov
jne
mov
cmpsb
rcrl
mov
cmp
mov
ficomps
push
incb
hlt
rolb
cmp
repz
imul
cmp
mov
xor
mov
push
dec
dec
call
leave
in
fnstcw
mov
jg
les
jp
inc
and
movsl
test
push
jp
outsb
sub
inc
scas
jg
std
scas
adc
xchg
testl
repnz
dec
pop
adc
ds
cmc
adc
das
mov
pxor
shr
jnp
sub
pop
push
in
roll
adc
cmc
inc
jp
sahf
pop
dec
leave
pop
mov
scas
jno
pop
lahf
enter
mov
cld
in
leave
pusha
repnz
mov
mov
inc
aas
ja
testb
loope
push
mov
pop
or
scas
push
push
xchg
cmp
mov
and
ss
es
dec
inc
sbb
inc
pop
in
inc
subl
aad
std
shlb
push
je
lea
pop
mov
call
or
jno
ficomps
test
fisubrl
inc
sub
jge
or
clts
idivl
inc
fcom
arpl
push
sub
adc
hlt
out
insb
jge
adc
in
jle
arpl
mov
les
rorb
sbb
out
nop
daa
push
pop
stos
inc
ljmp
ja
push
cmp
adc
es
dec
scas
mov
adc
daa
mov
jp
mov
jg
push
rorb
xlat
xor
popf
xor
insb
popf
push
push
pop
clc
cmp
jp
cmp
das
pushf
call
testl
xchg
jne
xchg
add
movsb
cltd
test
mov
sub
adc
mov
mov
je
ss
and
adc
dec
mov
dec
mov
outsl
sbb
or
jl
or
add
jecxz
int
dec
in
mov
pop
outsl
push
mov
les
pop
andb
lret
test
rorl
pop
cmpsl
sbb
gs
fists
or
mov
sub
test
pushf
int3
pop
cmpsb
cmc
mov
mov
or
add
mov
ret
inc
pop
xor
lret
shrb
dec
jo
dec
pop
repz
stc
add
lahf
adcb
adc
mov
cmp
imul
mov
sub
loopne
ds
mov
lock
add
shlb
test
dec
in
add
test
sbb
adc
jle
and
jo
outsb
clc
push
pop
push
aam
sub
iret
sarl
add
mov
push
sbb
inc
aad
int
je
push
mov
add
in
push
sti
pop
cmp
and
lods
lahf
jecxz
mov
insl
addr16
xchg
aad
shrb
and
mov
mov
sahf
push
mov
cs
and
dec
or
test
movsl
mov
adc
xor
fsubrl
in
mov
adc
mov
cmp
mov
sub
mov
xchg
or
mov
xchg
imul
aam
aad
jo
mov
mov
rorb
fcompl
cmc
pushf
or
iret
std
xchg
jns
mov
mov
imul
push
aaa
rcrl
leave
loope
pop
shlb
outsl
and
jnp
xchg
lds
imul
xor
and
data16
popa
mov
dec
pushf
xor
xchg
sbb
jle
jp
out
test
cmp
pusha
shll
adc
sub
ficomps
lret
outsb
pop
fnstenv
int
fwait
repnz
lds
sub
mov
popf
xor
imul
xchg
iret
aam
sub
mov
xor
push
fsubs
mov
fcmovb
xchg
pop
mov
lret
xchg
and
pop
jns
mov
jge
inc
loop
mov
pop
fistpl
rclb
in
scas
test
outsl
push
inc
mov
out
push
pop
stos
xorl
adc
adc
into
mov
jp
fimull
lahf
pop
icebp
rol
rcrb
clc
mov
cmpsb
lods
insl
movntq
out
loopne
mov
test
insl
cmp
mov
int
test
js
adc
add
push
cltd
push
mov
sub
inc
mull
mov
sbb
jp
fiadds
add
fsubrs
mov
sbb
call
mov
stos
or
xchg
call
push
sub
jle
fidivl
pop
pop
cmp
or
mov
pop
call
pop
dec
aas
shrl
mov
sbb
les
call
lods
stos
and
adc
pusha
ljmp
mov
mov
pop
cmc
mov
add
mov
xor
lods
xchg
scas
mov
and
js
push
std
gs
int3
mov
push
or
push
mov
mov
jo
hlt
aaa
cs
push
jbe
and
push
fs
jbe
movsb
mov
xchg
mov
dec
sbb
push
lcall
pop
ja
lds
sbb
into
inc
mov
fidivrl
andb
push
out
xchg
pop
xlat
std
lret
cs
push
cmp
lea
pop
dec
pop
xor
pop
test
rorl
adc
fistps
movsb
daa
jle
popa
repnz
or
pop
lods
iret
lods
pop
ret
xchg
imul
inc
dec
mov
cwtl
and
or
jno
jmp
jns
pop
push
xchg
xor
loop
push
inc
cmc
sub
push
push
movsb
xor
popa
jb
cmp
mov
aas
imul
icebp
mov
movl
pushf
xchg
xchg
sahf
sti
jle
aam
pusha
mov
mov
xchg
ret
mov
or
lcall
fwait
lods
iret
jbe
xor
adc
mov
sbb
cs
push
pushf
outsb
mov
jb
cmp
fmuls
inc
out
fldcw
mov
mov
insl
push
sbb
mov
xchg
pop
cli
jge
les
jns
add
in
push
mov
or
cmp
jge
inc
aam
xchg
aaa
inc
jmp
cli
add
insl
ficoml
fidivrl
mov
pop
insl
xchg
lcall
mov
mull
iret
shlb
xchg
outsl
out
and
push
and
mov
insb
xchg
jne
pushl
loope
es
sbbb
jne
add
push
xchg
cmpsb
cmp
pop
rcrb
sub
dec
push
mov
pop
xchg
mov
mov
notb
jno
stc
inc
cmp
out
push
mov
repz
xchg
sbb
mov
or
or
mov
add
push
pop
xchg
mov
and
dec
gs
jle
roll
pusha
mov
lea
sub
stos
sbb
roll
mov
ss
arpl
jg
dec
jno
or
pushf
jnp
test
iret
xchg
out
xor
in
ret
bound
or
dec
xor
mov
testb
sbb
loope
rcrb
enter
add
push
xor
mov
pop
and
lret
hlt
xchg
sub
arpl
test
cli
xchg
daa
scas
lea
fwait
push
outsb
add
or
or
xchg
mov
mov
fldcw
dec
push
mov
push
cmpsl
push
sahf
and
xchg
dec
in
xchg
pop
mov
add
loopne
nop
and
std
pop
shlb
into
pusha
sub
or
insl
push
out
daa
mov
pop
flds
add
jne,pt
lret
xor
lds
push
call
shrb
icebp
mov
rorl
xchg
push
push
mov
cmp
std
xchg
push
loopne
mov
rcrl
insb
cltd
adc
lret
and
scas
jb
daa
sarb
icebp
inc
or
clc
dec
lcall
fbld
or
xor
pop
mov
adc
repnz
int
add
fsts
adc
xchg
imul
cmpsl
fdiv
inc
pusha
mov
std
into
mov
jge
or
test
int
mov
ret
cld
leave
sbb
pusha
mov
shll
movl
es
data16
fisttpll
add
inc
fsubrl
jp
sbb
jecxz
inc
push
dec
xor
data16
adc
or
cmp
pop
imul
xlat
imull
aas
repz
nop
xor
cmp
test
cmp
or
shrl
mov
inc
xchg
in
dec
arpl
scas
imul
and
shrl
rorb
mov
lcall
add
jbe
adc
insb
iret
xchg
out
xchg
push
adc
loope
lahf
jno
jb
subb
jae
or
lods
cmp
fldcw
loopne
sub
lahf
cmpsb
shl
dec
or
out
dec
dec
adc
xor
fldt
test
sarb
or
cmp
pop
mov
clc
and
jae
sbb
sub
out
out
ja
hlt
pop
mov
cmp
pop
cmp
in
fnstcw
push
mov
sub
add
inc
imul
xchg
cmp
ficomps
mov
push
xor
dec
dec
pop
popf
and
dec
faddp
loope
add
cmc
mov
add
pop
ljmp
cmc
adc
cmp
in
jle
fsubrl
jp
divb
mov
xor
fisubl
jl
or
loopne
popa
inc
call
cmpsl
inc
pop
xor
jb
fisubs
xor
int3
jae
and
cli
jl
loop
es
push
aam
lock
outsl
add
popf
mov
test
fcmovbe
mov
cmp
inc
pusha
dec
outsl
lret
subb
leave
ret
enter
mov
scas
sub
and
adc
ret
mov
pop
imul
data16
cmp
jnp
and
mov
mov
pusha
cwtl
xor
dec
or
cmpsb
cmp
and
fiaddl
sub
les
pop
sbb
cmp
pushf
fnstcw
push
fsubl
dec
sbb
shrl
rcll
movsl
imul
cmp
cmp
push
aad
inc
fdivrs
pusha
ds
pop
fidivl
mov
clc
rcr
pop
lahf
popa
aas
std
fs
sbb
inc
dec
imul
out
or
xorl
inc
bound
mov
stos
sarl
pop
push
sarb
adc
mov
xor
dec
mov
outsb
adcl
fstpt
data16
sarb
add
mov
call
andl
cld
shrb
push
adcl
imul
push
sub
cmpsl
fs
push
les
add
cld
jg
cwtl
notb
pop
xchg
nop
ss
push
pushf
sbb
push
lea
xor
out
sub
int
dec
mov
inc
inc
push
sub
out
rcrb
test
rcrl
xor
pop
jecxz
popa
sub
out
add
lock
lret
js
rol
js
test
popf
pop
scas
ret
inc
fsub
lock
std
into
mov
adc
cmpsb
loope
mov
aas
fbstp
out
jg
adc
ja
cmp
push
loope
out
xchg
mov
movsl
add
push
bound
notb
daa
stc
xchg
xchg
maskmovq
mull
dec
adc
jno
hlt
or
dec
sbb
insl
pop
dec
rcl
pop
lret
mov
cmpsl
insl
mov
mov
push
and
shrl
std
inc
add
add
lret
cmp
pop
xchg
shll
cmp
and
repz
xchg
sbb
cmp
mov
sbb
cmc
sbb
fsubs
mov
out
in
cmpsl
inc
popa
fnstsw
cld
stos
mov
inc
dec
arpl
sbb
rorl
aad
jg
mov
rcl
es
dec
fldcw
popa
fdivr
push
mov
mov
add
addr16
dec
es
push
out
test
dec
or
subb
aam
ret
repnz
sub
push
popf
jns
push
fbld
or
and
bound
cmp
pop
imul
not
jp
mov
fwait
dec
mov
mov
sbb
or
xchg
and
je
sub
outsl
or
cltd
sarl
mov
cmp
insl
pop
mov
outsb
popf
aas
add
sub
pop
and
mov
jo
pop
addr16
mov
cmp
aad
ljmp
jno
in
stc
or
or
xchg
sub
inc
popf
sub
xor
ss
sbbl
pop
aad
rorb
mov
out
dec
or
icebp
adc
push
test
xchg
inc
xor
popa
mov
inc
testb
stc
mov
pop
faddl
mov
incb
into
sub
mov
sbb
xor
xchg
daa
adc
mov
adcl
daa
int
inc
lahf
inc
sti
cmpsl
jne
mov
fwait
cmp
adc
or
mov
rclb
pop
mov
mov
fs
sbb
stc
in
sub
sub
daa
int3
push
icebp
xchg
ljmp
repnz
mov
lahf
xlat
pop
inc
test
push
in
jl
out
adc
fs
popf
test
or
andl
adc
mov
ds
mov
lods
daa
add
icebp
dec
movsb
xchg
add
scas
mov
mov
inc
mov
icebp
jno
lods
bound
mov
inc
orl
mov
sub
mov
cwtl
add
cmp
adc
out
fidivs
je
fistpl
ljmp
xchg
jb
outsb
fwait
jne
and
lret
loop
sub
pop
out
ljmp
dec
push
fnstsw
and
fsubrl
les
dec
add
je
fidivs
sub
scas
and
sbb
xor
lds
notl
push
and
push
xor
bound
pop
mulb
jge
adc
jno
adc
cmp
movsb
mov
jnp
add
pop
jmp
xlat
addr16
call
xchg
insb
out
and
or
popf
xlat
pop
std
or
add
fiaddl
cmp
in
dec
loop
aad
out
pop
lds
cmp
test
lods
pop
cmp
mov
imul
and
call
std
gs
lret
into
inc
arpl
cmp
std
std
imul
leave
pop
lods
add
repz
xor
pushf
sarb
jo
inc
cmp
xchg
xlat
inc
flds
mov
jge
fstpt
xchg
adc
repz
jbe
sbb
xchg
jae
movl
inc
push
test
push
fisttpll
push
loopne
push
pop
mov
adc
sbb
add
jle
mov
clc
insl
sbb
pop
push
addr16
adc
add
addl
push
test
jg
out
mov
jmp
and
ss
mov
iret
aas
cli
mov
xlat
lahf
mov
push
arpl
loope
or
lret
repnz
dec
mov
mov
jo
sub
sub
out
mov
and
cmp
push
jg
movsb
pop
jbe
adc
mov
lcall
jl
sub
fcmovbe
sub
inc
jae
stc
insb
cwtl
call
sbb
pop
flds
jb
cld
aaa
out
movsl
add
sub
xchg
sbb
and
sbb
add
cmc
push
xchg
adc
push
insl
orb
enter
hlt
inc
shlb
gs
cmpsl
lcall
idivb
pop
in
loop
mov
ds
sbb
pop
stos
mov
fcomps
or
add
imul
sarl
xor
mov
movsl
inc
fcmovu
fldenv
lds
cmp
mov
mov
enter
imul
jns
jno
out
rcrb
xlat
ja
mov
mov
arpl
int3
shlb
std
mov
das
or
add
dec
jns
xor
inc
daa
fldl
xor
pop
je
aam
adc
in
scas
test
inc
push
xor
jbe
jae
repz
scas
inc
sub
enter
nop
mov
pop
fsts
lcall
in
jns
sbb
cmp
jne
push
mov
lock
dec
ja
lods
test
adc
aam
jle
lea
mov
or
pop
sbb
nop
imulb
jg
xchg
outsl
sbb
mov
jle
ficompl
jo
jnp
loopne
fdivl
je
mov
mov
test
in
stos
scas
test
sbb
cli
mov
sub
test
stc
icebp
ss
inc
data16
xor
inc
fwait
lea
mov
or
cltd
outsb
xor
dec
cmp
pop
push
imul
sub
jno
addl
dec
mov
cmp
xor
sub
sub
xlat
pop
adc
lea
mov
mov
add
xor
cmp
add
mov
sub
out
mulb
sub
ja
xlat
cwtl
ds
inc
movsl
mov
mov
add
out
loope,pt
sarb
pop
xchg
cwtl
shlb
adc
push
cmp
jmpw
lahf
mov
push
mov
sbb
adcl
dec
cmp
arpl
jae
scas
adc
fadd
mov
divl
movsl
and
int3
mov
mov
dec
inc
xor
jbe
ret
mov
mulb
fmulp
jno
push
cmc
xchg
arpl
pop
cmp
jl
hlt
fidivrs
mov
xor
or
in
pusha
lea
jg
or
cs
push
mov
pop
dec
std
fstpl
mov
sub
sbb
mov
fdivp
out
mov
jae
add
or
xlat
test
loop
or
inc
dec
je
push
xchg
dec
jno
aam
cmp
or
ja
sti
mov
sub
xchg
sub
es
xor
pushf
pop
mov
fsubl
jge
mov
and
out
fsubrs
or
dec
repz
mov
nop
pop
sub
imul
xrelease
xchg
bound
mov
adc
push
sbbl
outsb
add
loopne
adc
mov
ret
or
xchg
std
xchg
iret
and
data16
lock
and
push
sbb
dec
jge
sub
adcl
cmp
mov
push
je
testl
rcl
mov
popa
clc
fmuls
jg
les
sub
push
stos
push
movsl
sbb
jecxz
dec
aam
mov
pusha
mov
lea
testl
cwtl
push
in
js
cmp
lret
popf
fistpll
scas
scas
inc
pop
cld
orb
cmpsl
and
mov
cmpb
insl
mov
mov
or
push
xor
mov
in
push
push
outsb
pop
scas
inc
mov
pusha
lret
pop
or
mov
mov
adc
movsb
pop
gs
mov
adc
int
out
mov
push
add
ss
in
and
mov
mov
es
incl
ss
and
insb
mov
inc
jno
sub
bound
jmp
sub
pushf
cmpsb
add
mov
aad
inc
fdivs
outsl
loop
mov
adc
clc
cmpsl
xor
mov
repnz
rcrl
add
inc
inc
int3
push
ret
pop
cmp
cmp
fwait
cmp
dec
out
mov
xor
cld
into
insl
into
gs
int3
push
imul
insl
inc
sub
xor
dec
enter
pop
lret
ljmp
out
pushf
cli
out
sahf
xor
mov
push
nop
stos
mov
cli
xchg
add
nop
xchg
mov
ficompl
mov
stc
imul
ror
sti
inc
aas
add
sahf
push
pushf
push
or
std
push
xlat
xor
push
insl
inc
outsb
popf
addr16
pop
adc
add
and
or
cmp
xchg
addb
sbb
cld
or
xor
into
in
push
or
push
mov
jb
imulb
push
push
out
pushf
loopne
into
movlps
xchg
jle
inc
scas
mov
dec
push
xchg
or
rep
movsb
imul
xor
rolb
ds
cli
mov
inc
adc
cmp
pop
jo
mov
loope
and
jg
test
in
mov
cmpsl
pop
subb
rol
iret
sub
shlb
cmpsb
fnstenv
inc
inc
scas
xchg
mov
xor
imulb
pop
aad
sub
jns
push
je
outsb
test
arpl
dec
lcall
add
cwtl
js
mov
popl
pop
push
pop
aad
je
ret
sub
dec
mov
lret
outsl
mov
ret
xor
cmp
push
sahf
xor
orl
lret
mov
sub
xchg
in
dec
or
jmp
sarl
movd
dec
push
push
cmpsl
popl
lods
push
jmp
push
fidivl
fbstp
pop
push
jp
fbld
int3
sbb
std
sti
notb
das
xchg
mov
dec
xlat
jb
cli
cmc
adc
cmc
addl
lahf
mov
jno
lea
sub
scas
aas
into
or
jl
in
imul
and
mov
fimull
je
cmp
js
ljmp
sub
loop
lahf
jmp
sti
sbb
xchg
mov
xchg
xorb
outsb
shll
mov
adc
data16
jmp
inc
ss
push
xchg
xor
push
push
lret
clc
jb
in
mov
jae
sbb
mov
aad
mov
sub
pop
sbb
scas
xchg
mov
or
outsb
dec
data16
cmc
sub
vpshuflw
leave
cmp
imulb
sahf
xlat
or
insl
push
mov
lahf
pusha
push
lahf
es
inc
aaa
add
scas
add
rorb
and
fmul
lock
in
adc
dec
jbe
cmp
cmpsl
andl
jecxz
clc
inc
iret
and
lret
lea
inc
mov
ss
sbbb
push
fsubrs
es
cmp
fistps
fmuls
or
sbb
fisttpll
xor
push
add
jmp
lret
or
pop
cwtl
push
shll
and
adc
mov
adc
or
and
loop
clc
gs
mov
movaps
jno
insb
xor
or
dec
mov
sahf
xchg
adc
push
ljmp
mov
adc
xlat
dec
inc
test
lods
pop
push
adc
cmp
pop
in
inc
cwtl
jbe
js
mov
xor
sahf
xchg
pop
sahf
adc
std
adc
push
or
cld
cmpsl
mov
ljmp
inc
pop
negb
pop
rorb
jp
mov
mov
xor
mov
push
pop
mov
inc
int3
dec
push
outsl
ret
mov
cmc
lea
bound
and
scas
mov
shl
stc
int
xrelease
cmp
fsubs
repnz
mov
adcl
stos
dec
outsb
pop
lea
fisttpll
mov
dec
fistpl
aam
cmp
adc
jge
cmp
inc
adc
lcall
sub
outsb
xchg
jo
push
fs
dec
and
inc
dec
pusha
jbe
inc
sbb
cmp
cltd
loop
pop
repnz
pusha
jmp
or
cmp
insl
dec
inc
fidivrs
add
xchg
gs
movl
lods
iret
sahf
adc
stos
xchg
or
cmpsb
stos
and
inc
adc
jo
subb
push
stos
dec
test
pop
xchg
cmpsb
xchg
insl
mov
push
divb
sbb
lahf
adc
rolb
xor
loopne
fimull
or
push
fnstsw
mov
arpl
and
mov
int
mov
sub
pop
xchg
nop
add
or
lret
mov
pop
push
rorl
pushf
xor
jle
iret
stos
add
adc
stc
jnp
xchg
push
sbb
sub
fisubrl
jecxz
aas
and
outsl
scas
cli
xor
out
fists
jmp
mov
mov
jb
mov
popf
or
xchg
push
xor
fsubrp
inc
sub
sahf
aad
mov
jbe
call
sbb
xchg
push
hlt
shll
push
mov
push
sbb
subb
cmpsl
insl
adc
stos
or
imul
pop
aaa
aaa
loopne
push
jmp
mov
sub
pop
test
dec
mov
into
xchg
sti
sbbb
inc
push
es
ss
sub
mov
dec
cmp
jne
aas
int
mov
stc
xchg
test
stos
in
std
loopne
sub
mov
cmc
nop
adc
mov
dec
adc
mov
lock
cmp
jecxz
icebp
scas
loopne
sub
test
popf
call
jns
js
mov
mov
dec
cwtl
adc
hlt
imul
push
xlat
jg
mov
inc
lock
jecxz
clc
cltd
incb
and
fisubl
or
fidivrs
and
mov
daa
xor
xor
xor
cmp
enter
int
mov
dec
xor
lcall
in
je
into
xchg
pop
push
fucomi
loope
and
adc
xchg
cmp
cmp
iret
jb
xchg
sarl
sub
imul
sbb
test
ljmp
ret
jle
iret
xchg
mov
in
outsb
in
popw
push
mov
mov
jl
jl
sbb
clc
aas
mov
mov
cmc
arpl
out
dec
pop
hlt
cwtl
cmp
add
fwait
cmpsl
scas
ds
addb
xchg
xchg
inc
data16
loope
lods
cltd
mov
ja
test
adcb
dec
sbb
inc
inc
ljmp
out
nop
lret
insl
mov
jmp
cmp
cmp
imul
mov
mov
std
scas
inc
sub
in
mov
inc
daa
dec
fcompl
jmp
js
imul
adc
add
add
inc
xchg
mov
pop
inc
xor
sahf
pop
jp
cltd
pop
jl
mov
shlb
push
cli
push
mov
lods
loopne
and
add
mov
lods
pop
lcall
inc
adc
and
aas
es
repnz
gs
testl
out
shll
testb
or
je
sub
sbb
mov
push
sti
int
mov
sarl
xlat
sarb
pop
push
fimull
fsubs
mov
je
clc
out
ss
sbb
outsl
rcll
ds
hlt
jl
or
mov
pop
mov
jae
add
mov
addl
cmp
mov
out
cld
aam
sti
mov
jnp
cli
in
push
popa
clc
test
sbb
jno
jg
sub
movsl
inc
or
jmp
push
jmp
xchg
jle
and
adc
jnp
out
xchg
les
cli
xlat
dec
inc
out
jecxz
loope
js
and
inc
fs
pop
stos
jae
sbb
iret
lods
orl
ja
in
das
push
xchg
fs
lds
int
scas
arpl
pop
xor
ss
mov
cmpsb
mov
pop
sub
xchg
movsb
mov
pop
cmc
cmp
das
push
lahf
fwait
incl
mov
lea
cs
shl
aam
and
mov
pop
mov
sub
and
lcall
mov
insb
fucomp
jno
sub
pop
addr16
sarl
cmp
add
fidivrl
pop
aam
or
int
mov
push
jae
adc
mov
push
cmp
mov
cmp
lahf
adc
in
dec
and
mov
je
jo
cmpsl
daa
iret
fsts
lahf
aas
repnz
lock
pusha
cmp
pop
adcl
inc
cmp
popa
or
mov
jp
cli
and
fsubs
fwait
leave
lods
xchg
add
sbb
pop
mov
xor
enter
jle
mov
out
xchg
sub
sbb
jle
xor
push
loopne
or
adc
and
dec
int3
sub
pop
hlt
cmpsb
push
out
xlat
lock
int3
fs
dec
mov
xchg
sub
pop
into
fstl
mov
inc
daa
ror
pop
inc
jp
test
adcb
iret
adc
mov
gs
test
hlt
stos
in
mov
subl
or
ds
shrl
pusha
std
fcmovnbe
sbb
fucomp
bnd
pop
mov
and
and
popf
jne
xor
pop
pop
les
sahf
push
sub
aas
mov
mov
insl
xor
popa
stos
add
mov
pop
in
pop
out
push
ss
cmc
cmpsl
dec
inc
scas
aam
or
cmc
mul
jle
int3
arpl
push
or
in
cmp
push
nop
inc
bound
and
outsl
movsb
addr16
nop
aaa
into
shr
pop
mov
in
nop
mov
out
ss
cwtl
mov
leave
mov
mov
fidivrs
dec
mov
divl
mov
xchg
mov
out
sarb
ret
inc
mov
iret
push
mov
cmp
sub
nop
or
dec
jp
aam
and
jp
stc
je
in
rorb
mov
fisubl
inc
mov
mov
cltd
stos
dec
pop
mov
xor
icebp
mov
ljmp
push
cmc
leave
hlt
dec
out
or
out
or
push
shl
adc
insl
sub
arpl
int
fidivl
stc
and
aad
inc
push
insl
ret
dec
push
push
adc
xchg
ficoml
push
ljmp
mov
mov
xchg
mov
mov
movsl
icebp
negb
xchg
add
mov
push
lods
test
rol
rcrl
xor
jbe
lods
push
aas
test
das
mov
mov
fucomip
xor
loopne
pop
shrd
cmp
and
movsl
xchg
sub
test
xor
jmp
sbb
cmp
cmp
les
sub
and
inc
out
cli
jae
inc
arpl
stos
scas
inc
fsubrl
push
outsl
inc
push
fistl
cld
fnsave
call
cli
xchg
jl
dec
pop
hlt
dec
mov
clc
jle
loopne
daa
nop
adc
sub
dec
mov
enter
jb
ss
gs
xlat
xchg
popa
mov
xorb
mov
add
fsubs
aas
push
cmpl
ret
rorb
mov
mov
pop
add
xlat
mov
xchg
mov
test
mov
nop
fcom
test
mov
outsb
insb
int
lds
sbb
sahf
sarb
jns
add
push
test
push
notl
xor
push
mov
or
push
mov
fnstenv
stc
adc
xor
sarb
nop
in
mov
sub
dec
sub
lcall
movsb
sti
gs
dec
clc
cmpsl
inc
mov
inc
cwtl
inc
mov
dec
out
pop
jae
push
stos
in
pop
daa
hlt
mov
mov
in
push
pop
push
push
inc
aas
dec
fbstp
sbb
push
aad
mov
sub
mov
mov
mov
or
xchg
cmp
dec
jecxz
cmpsb
ds
cmp
lds
int3
jle
lahf
pop
sarb
nop
std
xchg
call
and
movsl
lret
xor
xchg
cmpsb
in
push
call
test
test
mov
mov
push
fs
mov
loopne
or
adc
lods
mov
cmpsl
lret
std
sub
cs
push
hlt
sbb
aaa
push
popf
addr16
fnsave
and
inc
jb
jp
jge
int
stc
adc
dec
xchg
pop
divb
pop
jle
mov
or
jge
mov
sbb
loope
popf
inc
lret
out
ret
pushf
mov
outsb
sbb
in
xchg
pop
push
inc
mov
daa
push
mov
mov
push
int3
test
mov
cmp
mov
int
and
fisubrs
out
mov
jns
aad
test
ret
into
cmpl
insl
push
and
add
pushf
xchg
sub
ret
bound
xchg
sbb
or
arpl
movsl
into
enter
adc
cmp
pushf
arpl
fbld
insb
mov
mov
fldt
cmp
inc
or
jmp
lock
lds
cmp
mov
cmp
mov
ds
incl
xor
mov
dec
xlat
sbb
call
loopne
shll
enter
pop
and
test
subb
or
bound
push
fwait
aas
mov
in
movsl
cmp
or
shll
fists
in
mov
pop
cmp
xchg
jmp
into
subb
loope
adc
push
jge
add
negl
xchg
cmpsl
movsl
xchg
cwtl
inc
jo
ss
loope
test
mov
or
sbb
iret
jecxz
pop
stos
push
fsubs
ja
jbe
sbb
les
das
fwait
push
outsl
pop
pop
andl
sarb
cs
outsl
fildl
daa
in
stos
inc
lcall
fldcw
fcomps
xor
xlat
xchg
add
scas
xchg
push
arpl
pop
insb
addr16
cli
adc
xchg
cwtl
mov
movsl
sti
mov
inc
push
int
shrb
into
flds
test
in
lret
lret
das
outsl
fisubl
mov
dec
inc
lea
aas
push
mov
pop
popf
int3
or
mov
pop
pop
mov
fists
pop
mov
lcall
xchg
mov
mov
sub
mov
jge
sbb
inc
fdivrp
or
lahf
aam
mov
pop
mov
mov
insb
imul
cmp
mov
sbb
and
addr16
sbb
pop
pop
adc
inc
jbe
out
pop
cmp
xlat
add
mov
scas
inc
or
ss
pusha
subb
adc
xlat
mov
inc
aad
jns
push
jge
hlt
scas
jbe
sbb
sbb
aas
or
cmp
popf
jmp
push
shll
les
insl
rorb
pop
mov
sub
sbb
cs
sbb
mov
mov
test
jne
push
out
fwait
xor
mov
xor
mov
or
or
mov
dec
inc
push
test
or
inc
cltd
sub
leave
and
lods
daa
aas
pop
int3
xor
push
push
sub
or
add
imul
inc
into
sbb
out
mov
and
dec
xchg
iret
movl
pop
ret
lds
daa
cmp
stc
insb
xlat
mov
inc
ret
mov
out
test
sbb
js
cltd
pop
scas
inc
sti
mov
inc
jle
xor
mov
mov
ds
xor
aad
shrb
aad
pop
push
out
xchg
pop
cld
mov
mov
jb
jnp
mov
xchg
xchg
add
test
stos
push
pushl
movsl
xchg
push
fs
fimuls
mov
clc
and
mov
or
test
mov
lods
xor
jbe
add
push
cmp
andb
xchg
cs
ds
loope
inc
icebp
cmp
mov
imul
mov
cmpsl
ds
call
lea
cmp
fabs
and
or
test
xor
xchg
incb
sbb
xchg
or
jle
sub
cltd
adcl
cmp
jae
rcrb
bound
add
jns
addl
dec
vhaddpd
mov
test
cmp
xlat
stos
and
movsl
adcl
add
or
adc
stos
mov
push
xor
fistpl
fwait
lods
cmp
sub
outsb
insl
fisubl
xchg
call
in
test
pop
cmp
push
pop
push
inc
push
aam
inc
mov
scas
dec
pop
loopne
rolb
lcall
cwtl
and
stc
push
out
out
or
cmpsl
mov
rcrb
sbb
stc
cmc
mov
data16
pop
cmp
movsl
js
lcall
iret
jmp
jmp
or
or
js
movsl
icebp
popl
jecxz
andb
xchg
cltd
cmp
xchg
iret
mov
nop
pop
les
sub
jmp
pop
pop
xor
shl
xchg
lock
pop
fidivl
inc
cmpsl
inc
mov
sahf
push
xor
arpl
fadds
jno
jb
mov
push
jno
out
ret
shrb
into
movsb
jmp
inc
cs
icebp
xchg
sti
xor
dec
test
aad
into
mov
add
pop
mov
mov
in
loope
aaa
mov
and
cmp
cmc
out
pushf
test
xchg
cmp
lock
fistpl
push
inc
lds
movsl
insb
sub
and
inc
cmpsl
data16
call
mov
scas
inc
lret
int
adc
dec
dec
push
mov
ret
mov
pop
popf
pop
out
cmpsl
cli
xchg
cmp
ret
xor
rolb
fcoms
std
adc
cltd
je,pn
xlat
mov
sbb
push
mov
mov
cli
fiaddl
xchg
mov
loop
xchg
ret
mov
mov
adc
mov
call
jns
movsl
cmp
jmp
xchg
rolb
adc
xorl
inc
fisttpll
and
xlat
and
ljmp
insl
jg
and
sbb
and
leave
popf
stc
push
push
mov
inc
or
add
dec
pop
xchg
es
and
adc
push
cmpsb
dec
inc
pop
cmpsl
testb
movsl
sbb
jmp
out
inc
push
inc
fiadds
or
and
das
push
jecxz
and
mov
and
stc
add
adc
mov
sub
scas
lds
mov
push
sbb
xor
in
mov
xorb
icebp
cmpsb
dec
pop
addb
add
cwtl
xor
mov
ds
movsb
mov
lahf
pop
ret
xchg
aad
fcom
aas
mov
out
adc
outsb
pop
mov
rorb
aaa
es
jmp
adc
sub
xor
pop
in
lds
movsl
aaa
leave
imul
push
mov
mov
mov
std
pop
or
andb
ret
mov
push
mov
xchg
jbe
push
popf
push
je
add
sti
mov
push
push
int
stc
shr
mov
cmp
or
cmpsl
clc
jae
jo
std
gs
imulb
pcmpeqw
jno
aam
inc
sbb
arpl
es
ficompl
pop
mov
xor
xor
pop
mov
and
add
std
lret
dec
loop
into
test
clc
push
out
fcmovne
push
sti
das
sub
cmpsb
dec
xor
lahf
ss
imul
fbstp
out
repz
inc
test
fcmovnbe
data16
push
je
cltd
sahf
sbbl
jl
insb
cmpsb
sub
or
int3
lret
pop
sarl
sbb
push
loop
test
xchg
add
jle
and
scas
pop
xor
aaa
or
jns
push
mov
test
or
cmpsb
xchg
mov
jecxz
and
jge
or
daa
cs
test
adc
setge
mov
imul
aad
cmp
shrb
ljmp
add
repz
pop
inc
cmp
lea
lret
outsb
add
lahf
aad
jmp
rol
jnp
cmp
xchg
mov
push
hlt
push
insl
addr16
mov
pop
jns
jp
push
xor
pushl
cmpb
adc
cld
nop
dec
das
sbb
push
outsb
out
in
popf
dec
lret
enter
and
xchg
pop
mov
andb
arpl
pop
cmp
das
fdivrs
mov
fbstp
push
dec
and
shl
out
sti
jle
cmp
loope
pop
repz
lods
ss
inc
sbb
mov
in
dec
test
sahf
lods
push
leave
add
lods
sub
fisubs
push
jne
shl
notl
stos
fmuls
test
inc
adc
mov
inc
movsb
aaa
sbb
sub
xor
add
call
rol
xchg
dec
lds
or
xor
imul
int3
xor
jle
push
pop
scas
xchg
xchg
jmp
jae
jmp
push
inc
and
push
test
xchg
jae
mov
add
dec
xor
sahf
hlt
andl
jne
mov
adc
in
aad
rol
xchg
aad
fidivl
ja
inc
gs
add
mov
or
testb
push
rcrl
jle
jne
out
jg
jbe
mov
into
subl
sub
or
mov
cmp
aas
sahf
imul
out
das
mov
mov
and
sbb
or
cmp
out
outsl
push
push
mov
fidivl
push
cmp
mov
jle
mov
pop
and
or
stc
dec
cmpb
jl
mov
inc
shlb
popa
lret
outsb
loope
or
lock
jl
pop
push
sub
outsb
jl
sarl
iret
mov
add
mov
scas
popf
popf
or
mov
fcomip
cmp
fldenv
rcrl
adc
rcrl
mov
push
mov
mov
aas
sub
jmp
or
xlat
mov
push
xor
lahf
push
push
mov
push
jae
pop
mov
in
push
push
or
or
cld
xchg
push
mov
cmp
lock
push
lret
lahf
arpl
xchg
mov
fldcw
mov
test
outsl
push
or
dec
mov
insl
mov
movsl
arpl
icebp
mov
inc
stos
cmp
adc
aad
out
nop
dec
pop
insl
lcall
or
nop
iret
insl
push
xorb
or
lahf
dec
popf
orb
fcomps
or
push
cmpsb
push
mov
mov
pop
jg
jne
lods
sbb
rcl
jge
and
inc
inc
popa
inc
xchg
pop
cmp
shlb
push
rcll
add
loop
ljmp
loopne
cwtl
pushf
dec
push
fsubl
movsl
sahf
lock
and
mov
xorl
aam
xchg
and
dec
testb
mov
fiaddl
hlt
popa
fdivl
cld
dec
jecxz
add
scas
js
adc
les
push
nop
add
pop
push
or
sbb
in
sbb
mov
stos
in
xchg
in
aaa
or
adc
ds
loope
iret
fbstp
insl
add
cmpsl
mov
xor
mov
lcall
pop
mov
mov
pop
adc
mov
cld
fwait
out
sbb
mov
das
aas
popf
jp
or
subb
adc
or
xchg
inc
mov
jmp
mov
outsb
cmp
aas
or
mov
inc
shr
cltd
inc
or
mov
jno
or
and
push
jle
sub
fldl
sarl
call
xchg
dec
xor
imul
fistpl
mov
jecxz
mov
movsl
ret
jge
shll
jno
test
mov
ljmp
mov
jae
add
xchg
fnsave
testb
test
push
and
xor
fists
andb
clc
jnp
inc
add
xchg
push
je
sbb
cwtl
cmc
lcall
es
fldcw
inc
pusha
insb
push
or
xor
pop
fdivrl
cmpsb
and
and
movsb
fnstcw
adc
mov
sbb
jo
push
sub
incl
cmp
and
insl
and
push
insb
ss
push
imul
mov
and
es
sbb
andl
sbbl
aam
jnp
sbb
aad
pushl
dec
out
nop
xor
mov
push
cmpsb
fists
aad
xchg
adc
or
push
and
cmp
mov
fsts
jmp
add
loop
ds
lcall
push
into
shll
sti
stos
mov
push
mov
pop
aas
pop
lahf
fwait
sub
sti
cmp
pushf
dec
jle
xor
std
lcall
clc
xchg
inc
mov
lcall
ljmp
cmp
add
test
cmpsl
in
andl
sahf
test
sbb
sti
xchg
ret
notl
dec
cmp
inc
shlb
inc
cmp
loope
pop
adc
dec
cmp
test
lahf
mov
popa
ret
pop
sub
add
inc
test
adcl
mov
cmp
inc
cs
sub
add
ret
dec
push
test
xlat
mov
jne
movsb
popf
pop
jle
fdiv
and
jno
andl
add
xor
pop
out
fnstenv
or
mov
scas
mov
xchg
mov
jle
jno
addb
loop
sub
enter
stos
mov
in
or
ja
stc
sub
pop
sub
dec
pop
mov
and
push
dec
loopne
or
push
daa
push
daa
jmp
mov
adc
inc
inc
fnstenv
es
aad
aaa
dec
push
test
push
pop
out
sbb
jnp
pop
mov
imul
insb
cmovge
inc
lcall
out
fidivs
mov
mov
or
lea
lock
mov
jecxz
mov
fcoml
inc
or
mov
je
adc
mov
test
in
mov
in
enter
lret
mov
xchg
adc
sub
es
enter
in
std
xor
pusha
push
pusha
inc
mov
adc
add
in
fimuls
xor
cmpsl
adc
cmp
dec
shrb
sbbb
sbb
push
fisubl
or
cmp
pop
mov
lds
imul
pusha
clc
ret
cmc
leave
jecxz
repnz
rcll
mov
addr16
push
push
int
and
add
ss
inc
push
aas
sub
xchg
pop
sub
stos
jg
push
adc
lret
fs
mov
jge
push
out
dec
flds
push
test
and
adc
subb
sarb
dec
pop
mov
cmpsl
mov
inc
push
xchg
mov
xchg
mov
rep
outsb
lds
dec
dec
out
ret
pop
mov
xchg
add
test
leave
aaa
jno
fwait
mov
data16
inc
push
cmp
in
push
imul
xchg
jo
and
cmp
sub
fcmovne
xchg
nop
les
xor
sub
pop
jl
xchg
rcrb
out
push
inc
cmpsb
int3
jo
mov
test
andl
mov
into
cmp
adc
and
insl
cld
nop
xchg
push
add
ss
sbb
cwtl
push
add
push
in
mov
testb
in
cli
test
dec
out
clc
negb
movsl
or
dec
hlt
filds
and
les
pop
cmp
adc
lahf
test
cwtl
lock
sbb
mov
jmp
add
xchg
xchg
jle
fsubs
mov
sbb
fdivp
sub
sub
sub
xchg
xchg
sub
popa
loop
jle
mov
orb
jge
jns
imul
adc
lret
lret
pop
cmpsb
cmp
cmpb
push
cli
mov
mov
lds
add
lock
adc
adc
pusha
sbb
mov
leave
xor
leave
push
cs
mov
jno
sbb
testl
xchg
test
mov
inc
out
gs
xor
mov
add
xor
pop
in
jns
andl
xchg
lret
ss
mov
cmp
dec
lock
mov
or
test
std
or
outsl
mov
dec
out
or
insl
add
aam
out
mov
fsubl
iret
push
call
dec
dec
ljmp
xor
mov
sbb
jo
push
fiadds
push
je
fbstp
test
cmp
aas
in
ja
clc
and
jae
imul
push
pop
mov
xchg
fadds
cwtl
lods
inc
lret
ljmp
dec
int3
arpl
pop
jo
or
add
push
mov
outsb
or
fidivs
add
and
push
out
test
inc
push
test
sbb
ret
mulb
or
pop
enter
jp
loop
bound
daa
addr16
jle
add
inc
das
stos
add
outsb
shr
or
pop
movsb
push
test
out
jns
sbb
dec
pmullw
mov
pop
ja
scas
idivb
sbb
ja
repz
xchg
pop
movsl
nop
mov
jo,pt
mov
loop
out
dec
push
shrl
pop
mov
nop
ss
jp
cmp
test
adc
iret
popf
rol
xchg
mov
ret
mov
int
loope
inc
cmc
and
es
dec
cmc
sub
mov
dec
pop
cmp
out
inc
insb
adc
popf
test
jg
test
movb
fucomp
ror
flds
sub
mov
in
lea
out
or
cli
daa
notb
imul
mov
push
mov
into
shrl
push
xlat
mov
shrb
sbb
mov
test
addr16
push
mov
mov
aaa
sti
adc
int3
sbb
inc
adc
sub
aad
add
fistl
aam
jb
mov
rorl
stc
ljmp
pushf
ds
xor
ss
lods
mov
jge
xchg
enter
dec
in
sbbb
pop
loop
jecxz
jp
add
or
xor
mov
mov
push
mov
loop
and
cmp
mov
pushw
inc
cmp
int
fsub
cmp
jle
add
xchg
repz
loope
jecxz
xchg
xchg
scas
ret
pop
out
push
xor
cs
fwait
cmp
scas
pop
insb
sti
ffreep
loop
add
mov
or
push
push
imul
sbb
iret
in
sahf
mov
pusha
cmc
push
pop
out
popa
add
insb
push
test
repnz
repz
loopne
hlt
hlt
mov
cmpsl
or
aaa
push
lock
stos
in
popa
adc
and
lock
and
push
jne
inc
dec
stos
dec
test
xchg
dec
xlat
pop
mov
fwait
hlt
push
mov
jbe
loopne
inc
mov
fidivl
or
insb
bound
outsb
hlt
mov
mov
movsb
pop
adc
jae
testl
int3
xor
inc
dec
dec
ljmp
push
xchg
shrb
fwait
xchg
inc
pop
notb
push
pop
dec
movsl
inc
movsl
cmp
sahf
cld
nop
sbb
negb
addr16
and
test
imul
roll
lods
mov
push
repnz
daa
inc
nop
mov
xchg
pop
in
aaa
mov
out
ds
test
pop
xor
ljmp
xor
xchg
mov
dec
scas
in
rclb
fisubrs
cmp
pop
mov
cmp
dec
ds
fdivs
enter
sbb
jne
rcll
mov
movsb
xor
mov
jb
xor
popa
lret
mov
fwait
push
xor
pop
xchg
xchg
inc
add
sbb
pop
fcomip
lret
cmc
mov
mov
les
inc
push
sbb
idiv
dec
adc
or
push
jae
loope
jp
xlat
pop
vzeroupper
mov
sahf
sub
mov
call
adc
inc
mov
lock
loope
sub
mov
test
xchg
sbb
mov
cmc
ret
jne
add
mov
vmwrite
rorl
fidivs
aam
dec
lahf
fildl
mov
pop
pop
sub
xor
or
addr16
jp,pn
xor
inc
add
sbb
ja
sub
leave
insl
pop
push
in
push
je
push
mov
jnp
push
lods
dec
push
jb
stc
mov
iret
or
int
sub
add
in
push
imull
into
sbbb
mov
sbb
push
cmp
pop
adc
mov
xlat
fs
les
pop
mov
cmp
cmp
loopne
aaa
dec
lahf
push
ds
sub
lds
or
jle
out
sub
inc
out
outsl
sub
xor
imul
daa
mov
lods
or
sahf
repz
pop
adcb
pop
and
ljmp
jno
or
loop
push
push
shrb
push
loop
jb
ret
ss
cli
inc
inc
push
cmp
jmp
daa
sti
inc
cmpsb
pusha
pop
imul
inc
imul
mov
and
cmp
adc
lods
pop
repnz
mov
decb
fsts
loope
xor
cld
ja
ret
imul
fsubrs
mov
add
jp
popa
jno
pop
fstp
in
mov
mov
jnp
aas
xchg
test
shrl
aam
sbb
add
jp
jmp
push
add
jno
fwait
and
jp
ret
ljmp
lret
iret
adc
xchg
add
out
xor
xor
nop
add
cld
push
sub
dec
lods
js
bound
mov
sbb
in
pushf
icebp
js
adc
lods
in
pop
or
sbb
sbb
cmp
arpl
sub
jo
jne
mov
jo
outsl
loop
push
movsb
pop
pushf
daa
jge
lcall
movsl
outsl
jns
lods
and
lret
mov
pop
mov
les
decl
out
cwtl
mov
inc
out
jns
cs
fdivs
mov
adcl
movsb
int
and
push
sub
cs
imul
cmc
sbb
dec
shlb
add
and
rclb
pop
mov
push
lcall
pusha
jl
push
daa
stos
xchg
push
dec
xchg
test
negb
fwait
and
mov
push
cmc
fwait
ljmp
repz
xchg
xor
cmpsl
lods
and
call
cli
daa
arpl
mov
outsb
cmp
push
jb
push
test
pop
mov
sarl
inc
jo
shlb
inc
ja
mov
inc
and
xchg
mov
fstps
bound
xchg
jge
jnp
pop
inc
jb
push
out
jmp
shll
int3
leave
test
cmp
pop
add
push
or
mov
loop
in
xchg
into
int
ja
pop
xor
arpl
lock
sub
pusha
pop
insb
divb
and
pop
rcrl
lods
inc
int3
lahf
cmp
movsl
xchg
cmp
icebp
jmp
clc
loop
push
cwtl
sbb
dec
outsb
negb
sub
es
jmp
adc
and
adc
or
test
push
xor
and
test
sub
pop
out
daa
dec
dec
movd
xor
jle
repz
clc
xor
fcmovne
xor
into
std
sub
inc
cmp
outsb
mov
jae
and
in
xchg
or
andl
pop
and
xlat
int
xor
sub
mov
pop
ror
add
test
lret
pop
cmpl
pop
adc
cwtl
clc
cmp
nop
in
push
sbb
shl
scas
mov
out
ss
xor
pushf
or
and
rorl
ret
stos
lds
hlt
jmp
mov
ret
mov
add
ffree
pop
mov
ja
mov
inc
cmp
mov
out
ffreep
inc
sarl
mov
int3
cltd
lcall
mov
xor
add
xchg
sbb
mov
imul
lock
mov
fildl
xchg
rcrb
add
idivl
rclb
icebp
addl
jp
or
cld
sbb
aaa
daa
int
sets
and
daa
fwait
mov
jp
scas
and
sbb
cmc
sub
shlb
or
iret
insl
jle
mov
xchg
push
rorl
imul
insl
in
add
cs
or
dec
add
mov
add
cld
push
push
adc
adc
sbb
xchg
add
lret
jae
sbbl
and
mov
adc
inc
mov
xchg
mov
mov
les
inc
loop,pt
mov
add
xchg
mov
mov
mov
jge
mov
mov
test
shlb
add
stc
cmp
imul
aad
jno
xchg
ljmp
jae
fcom
xchg
fimuls
icebp
cli
lahf
xorl
adcb
in
test
mov
mov
cld
lahf
push
mov
push
popf
pop
xchg
test
sbb
pop
jae
fstps
fs
outsl
jbe
lods
or
add
pop
jb
xlat
sub
jmp
clc
pop
mov
hlt
test
dec
push
lods
lock
es
sub
in
out
mov
pop
repz
scas
loopne
push
fimull
pop
test
jo
divl
in
cmp
bound
je
ja
movsb
cmpb
aam
repz
jo
sbb
fisubl
mov
pop
cmp
dec
fsts
iret
test
add
push
inc
loope
push
rorb
fimuls
mov
arpl
pushf
cli
mov
mov
fsubr
or
xlat
lods
repz
rcll
xor
es
inc
push
loop
in
push
rcl
ss
fmull
es
or
cld
pop
js
push
sbb
call
push
dec
negl
mov
out
mov
sbb
daa
adcb
mov
mov
insl
ror
push
rol
fistpll
ret
rcrl
mov
jl
loope
cmpsl
sbb
mov
pop
rcl
cmp
cmc
jl
sahf
daa
sub
mov
push
push
xchg
fs
jle
in
mov
je
pop
leave
adcl
pop
xor
mov
pop
jnp
cmp
xor
mov
pop
testb
sub
mov
or
push
mov
int
xchg
fildll
mov
test
test
lods
shrl
js
add
sub
ljmp
shlb
pop
sub
dec
jnp
repz
xchg
fmull
inc
out
stos
cmp
or
inc
inc
jns
jae
gs
mov
ret
cmp
mov
outsb
int3
lods
or
out
pop
mov
push
jl
jne
pop
dec
shl
nop
pushf
fdivrl
pusha
inc
ss
rorl
pop
mov
out
test
fisttpll
pcmpgtw
insb
xchg
xor
std
xor
sbb
xchg
sahf
push
cmc
int3
pop
rolb
add
sbb
js
fidivrs
les
mov
lods
fbstp
mov
add
pop
ja
ss
dec
fcomip
leave
test
rorb
mov
jne
pop
scas
or
pusha
or
insb
lea
cmp
daa
sbb
popa
cmpsl
popf
insl
ja
or
inc
nop
lock
xchg
xchg
stos
ret
pop
jge
testb
out
sub
mov
pop
push
sar
sbb
loope
mov
jle
cmp
cmp
xchg
mov
into
cmp
clc
xor
jb
push
int3
roll
mov
outsb
sbb
sub
push
pop
rcr
ss
push
movsl
std
cmp
jmp
shll
cmp
pop
inc
pop
movsl
jge
or
mov
test
in
sbb
lahf
lods
aas
sbb
and
sbb
xchg
sub
sub
xchg
push
mov
dec
and
stc
or
jae
lcall
push
mov
shrl
mov
je
iret
movsl
xchg
mov
jne
cld
inc
shl
cwtl
jnp
inc
adc
inc
data16
xchg
sub
ss
sarl
or
sub
mov
movsw
add
lds
pop
lcall
dec
scas
adc
cltd
gs
jg
jb
and
xchg
lret
fmul
xlat
je
or
fmuls
loope
pop
popf
mov
add
push
test
lds
xchg
cmp
xorb
stc
adc
jg
mov
adc
push
mov
sbbl
fs
sub
in
inc
adc
fbstp
stos
nopl
pop
insl
movsl
sarl
cmp
mov
cmp
gs
sub
in
cmpsb
rcrl
sub
add
ds
mov
sbb
cli
dec
loop
xlat
mov
mov
cltd
pusha
add
ds
xchg
push
bound
pop
addb
out
out
push
lea
sub
push
call
and
outsb
ret
and
push
out
cmp
mov
fstl
arpl
pop
cmp
addr16
pop
clc
jp
pop
call
push
int
sub
je
repz
aaa
xchg
or
das
and
push
mov
lahf
xchg
pop
mov
dec
pop
ja
xchg
arpl
xor
add
sahf
xor
jge
cmpsl
sbb
adc
xlat
dec
inc
pusha
repz
xchg
push
sub
sub
jb
std
xchg
stc
mov
stos
fstpl
cltd
out
std
in
xor
xchg
es
test
mov
sar
les
xorb
pop
mov
inc
in
mov
adc
inc
pushf
mov
in
sub
sti
in
mov
mov
je
inc
mov
xor
fmul
mov
add
ljmp
shrb
sahf
add
out
xor
sbb
ja
mull
mov
and
ljmp
inc
out
cmovno
stos
outsl
jg
pop
sbb
out
pusha
scas
jb
aad
lds
pusha
dec
sbb
aas
or
mov
call
sub
dec
xchg
rcl
scas
outsl
fisubl
mulb
movsl
mov
scas
int
jmp
push
and
add
push
mov
mov
loop
bnd
popf
jne
shrb
fdiv
jnp
xor
cmp
and
fnsetpm(287
aas
add
xor
fbld
sbb
pop
shrb
jl
mov
mov
aad
sbb
pop
mov
test
push
sahf
add
test
std
and
scas
fistl
insl
sbb
stos
sbb
cmp
ds
in
pop
shll
push
lahf
cmp
and
cmp
data16
andl
int
mov
and
sarb
jno
in
xor
pushl
repnz
pop
and
test
adc
test
in
cmp
jecxz
mov
fildl
fsubl
clc
ret
dec
jbe
shrl
mov
les
ss
sahf
loop
hlt
inc
sbb
cmpsb
sbb
cld
bound
in
aam
xchg
shll
ja
mov
test
lret
lret
mov
js
pusha
fcmovnu
adc
ljmp
jno
and
and
adc
xor
into
push
pop
cmp
xchg
popa
gs
mov
pushl
mov
xchg
ret
into
inc
push
lret
adcb
jb
inc
lahf
loope
fistps
daa
xchg
inc
ret
mov
repnz
jge
stos
cmp
in
mov
and
aas
orb
loopne
xchg
dec
xor
gs
pop
mov
push
cmpsb
cmc
mov
dec
rcrl
iret
outsb
add
insb
add
les
std
xor
rclb
xor
clc
pop
xchg
sahf
lods
ret
xlat
jg
dec
imul
lods
daa
cmpsb
mov
inc
lds
cld
adc
push
scas
das
xchg
in
mov
adc
mov
add
push
or
stos
add
mov
jl
in
push
fbld
fnstcw
mov
push
adc
xchg
insl
xchg
nop
insb
fcmovnu
cmp
and
mov
movsb
pop
or
into
lds
insb
testl
push
mov
out
ret
inc
negb
shll
mov
or
inc
mov
ficoml
stos
test
mov
sbb
gs
popf
imul
pop
push
adc
cmpsl
inc
inc
punpckhbw
mov
push
in
gs
adc
cmp
dec
and
jl
pop
ja
mov
mov
test
imul
subl
cwtl
push
push
out
adc
push
fwait
xchg
out
fdivr
insb
xchg
sub
or
lahf
cmp
mov
loopne
jmp
mov
loop
xchg
cmpsl
xor
push
fisttpl
popa
jno
fldt
mov
stc
scas
scas
pop
fisubrl
or
jmp
stos
aas
enter
sub
mov
jmp
inc
lcall
in
mov
cmpsb
xor
ja
xchg
mov
test
insl
hlt
addr16
movsl
les
ljmp
mov
mov
xchg
push
dec
pop
jmp
outsl
fsubl
pop
jb
inc
add
xor
shlb
imul
sub
cmpb
mov
or
out
mov
pop
sbb
mov
subl
adc
loopne
js
mov
leave
imul
adc
call
mov
sbb
sub
call
mov
lret
inc
lahf
xchg
call
push
push
and
ja
sbbb
into
icebp
sbb
sbb
insb
mov
cwtl
subl
adc
pop
pop
es
jbe
imul
jle
nop
je
xchg
in
xor
xchg
inc
mov
and
gs
ja
mov
cmp
aas
ret
adcl
lret
lods
xlat
mov
fdiv
mov
testb
imul
cmp
fadds
int3
push
pop
mov
or
jge
mov
xchg
rcrb
into
adcl
negb
call
cmp
and
rorl
lret
jbe
sub
shll
push
and
and
out
mov
push
ja
stos
xchg
fwait
mov
pop
jno
outsl
addr16
dec
mov
pop
loope
dec
insl
cmc
jl
jns
pop
cmp
shl
sbb
inc
cmpsb
mov
pop
jb
pop
lret
jns
and
and
dec
scas
aaa
scas
xchg
es
popf
and
fwait
lahf
push
sbb
sti
sbb
mov
movsl
lods
xchg
add
pop
test
sbbb
iret
pop
xor
xchg
pop
cwtl
pop
lahf
add
dec
out
in
out
and
aaa
dec
cmp
mov
mov
fs
aam
nop
negb
je
mov
arpl
out
addb
stos
mov
push
inc
pushw
sub
jno
adc
push
shrl
cmpsb
mov
xchg
shl
lcall
dec
jmp
rcll
sbb
mov
movsl
loope
mov
repz
ljmp
adc
pop
pop
xchg
xchg
dec
dec
fwait
push
jo
add
arpl
and
and
out
mov
mov
ss
inc
push
mov
repz
rol
inc
inc
jnp
imul
pop
pop
xor
dec
inc
push
or
les
xlat
ja
lds
das
les
add
aas
mov
sbb
cs
int
scas
and
mov
mov
add
daa
lcall
hlt
in
shll
test
ja
dec
ljmp
jle
loopne
clc
xor
cmpsl
xchg
sub
dec
jo
inc
stos
ja
and
inc
iret
mov
fnsave
mov
lret
mov
daa
xchg
out
movsl
int
idivl
in
push
cmpsb
sub
pop
xchg
sti
push
adc
mov
outsl
lret
push
nop
xchg
mov
jbe
lock
push
push
mov
dec
jle
test
sub
pop
jo
mov
jne
pop
jns
in
or
cmp
sub
cmc
dec
test
xor
movsb
mov
xchg
fwait
and
cli
fucomp
jbe
fistpl
push
arpl
popf
cmc
rolw
mov
test
add
push
xchg
sbb
xor
iret
repz
testb
add
jbe
pop
cmc
mov
pop
cmc
mov
popl
and
push
stos
push
ljmp
in
cmp
xchg
jb
mov
mov
sbb
pop
mov
insb
pop
cmp
out
xchg
sub
sbb
cmp
sti
jnp
push
mov
xchg
scas
mov
movsb
insb
das
push
mov
popa
mov
xchg
inc
test
jmp
mov
fmull
sbb
sbb
mov
or
das
cli
add
loop
cmpsb
aaa
xor
int3
and
imul
xchg
mov
adc
cs
add
push
jnp
dec
pop
imul
fdiv
bound
in
stos
adc
data16
sbb
sub
dec
addr16
inc
jg
aaa
mov
mov
leave
jae
push
dec
das
mov
xchg
inc
push
mov
add
pop
inc
push
and
inc
and
mov
xchg
test
mov
cmp
lcall
dec
cmc
push
mov
adc
add
cld
in
test
sbb
dec
adc
pop
les
jno
dec
cmp
fdiv
push
loope
sbb
lock
aaa
mov
loope
out
push
push
lods
xchg
mov
xor
int
dec
pop
inc
pusha
scas
nop
es
fildll
jmp
mov
and
dec
mov
cld
shrl
mov
lock
xor
je
ja
inc
push
call
aam
push
addr16
jne
add
sub
ja
pop
je,pn
int3
jns
iret
xchg
ds
fidivs
pop
mov
cmpsb
mov
sbb
adc
test
ds
inc
fisubl
jle
pop
push
sbb
or
rclb
and
jns
mov
or
sbb
fldl
fdivs
int
dec
xchg
jle
or
sub
es
push
xrelease
mov
out
add
xor
jae
mov
dec
shrl
xchg
data16
incb
sbb
stc
imul
pop
aad
fldcw
ja
xchg
mov
aas
push
test
shlb
dec
aas
mov
sarb
sbb
and
xor
icebp
adc
push
pop
push
and
xchg
inc
cltd
test
sarl
les
fs
pop
xchg
mov
pop
jp
imull
pushf
inc
popa
pop
mov
or
dec
jnp
lret
das
insl
sub
hlt
sbb
xor
call
andb
and
mov
je
cli
outsl
orb
dec
jne
dec
adc
mov
cmpsl
mov
sbbb
insl
dec
xor
test
xchg
fildl
ss
cli
xlat
xchg
loopne
imul
sarb
cmp
repz
call
int3
cmp
fs
testb
call
mov
out
sub
xchg
dec
fcomip
call
mov
js
sbb
outsl
xchg
ret
xchg
or
vpsrlq
dec
pusha
push
ds
xchg
sbb
pop
movsl
lcall
popa
cmpsb
pop
imulb
inc
jae
sub
test
add
dec
cld
in
lods
sub
int
jl
jecxz
mov
mov
cmp
pushf
mov
out
icebp
outsl
fistl
push
icebp
jnp
mov
push
xor
clc
pop
mov
lock
cmpsl
mov
inc
ror
add
sbb
out
mov
daa
sub
inc
in
adc
add
insb
push
sub
std
jp
pop
arpl
daa
lds
testb
in
jne
popf
mov
je
mov
sti
or
push
rclb
mov
ljmp
mov
pop
mov
gs
stos
pop
outsl
fsubrl
sti
ficompl
mov
jnp
sbb
or
xchg
add
js
inc
jnp
mov
mov
lret
sbb
xchg
nop
mov
call
dec
pushf
mov
sarb
jmp
mov
adc
adc
into
or
stos
and
jb
inc
lock
mov
cmpsl
push
push
inc
arpl
jg
insl
and
cmp
fmul
je
mov
lahf
adc
xchg
dec
fstpl
xchg
dec
xchg
in
sarb
hlt
or
xor
int
scas
fidivrs
ret
loopne
pop
imul
int
decl
mov
rcrl
mov
xchg
sbb
dec
add
das
or
leave
push
push
inc
push
loopne
hlt
xorl
dec
popf
dec
mov
and
xchg
sub
testb
std
mov
cmpsb
pop
insb
xchg
dec
xor
xor
mov
adc
pop
insl
lret
popf
out
stos
inc
inc
dec
jl
repz
adcb
push
xor
jno
je
mov
and
jnp
pop
xor
push
out
test
jp
add
test
xor
push
mov
stc
cmp
in
lock
nop
mull
xchg
in
into
fisubs
sub
sbb
je
rcl
out
jle
jle
bnd
in
dec
arpl
push
call
adc
mov
shrb
jp
mov
jno
jmp
addl
subl
arpl
jo
inc
cmp
xchg
lcall
inc
jo
mov
lcall
shrl
pop
cwtl
es
sub
sub
test
push
add
lods
std
pop
sub
cmp
adc
push
insb
xor
scas
arpl
push
xchg
push
aam
js
jl
sbb
rclb
in
decl
add
fimuls
fld
xor
gs
jb
jns
ss
out
pop
cld
jg
xor
mov
jge
rcrb
mov
int
and
out
ret
jbe
in
ret
mov
test
adc
push
in
jge
pop
dec
mov
cmp
xlat
push
aas
mov
pop
cmp
pop
stc
rcl
sbb
jle
cmp
sahf
xor
sarb
and
enter
fistpl
sub
and
pop
mov
repz
inc
push
or
int3
lret
call
xor
jecxz
test
push
sbb
out
fdivl
push
mov
sub
frstor
mov
lods
int
sub
mov
call
cmpsl
aas
push
mov
adc
mov
mov
jcxz
jmp
xor
icebp
js
cmc
push
adc
iret
pop
inc
sbb
add
mov
push
test
push
sbb
fwait
lock
jle
mov
jo
push
add
int3
fidivrs
dec
pop
sub
and
inc
test
push
xorl
mov
jecxz
push
loope
or
cmp
push
dec
test
lods
nop
cmp
insb
test
in
loope
inc
lods
rcrb
jge
sbb
mov
adc
xchg
and
or
int
dec
dec
popf
cmpsb
ja
mov
sub
sbbb
mov
adc
cmp
icebp
addr16
sbb
cmp
pop
jmp
mov
aam
add
in
shrl
loop
lcall
cmpsb
lock
hlt
mov
push
mov
jnp
data16
enter
fwait
jmp
dec
icebp
shrb
mov
in
add
push
fisttps
cmp
lods
mov
or
adc
and
mov
clc
std
cltd
cmp
das
cmp
xchg
push
jmp
ja
adc
out
test
jge
mov
or
push
ds
xor
push
loop
cmp
inc
ret
sbb
and
mov
fsubl
addr16
lahf
push
loop
push
fdivs
scas
rclb
pop
jge
jno
xlat
test
roll
dec
pop
es
dec
mov
xchg
or
dec
and
inc
mov
ret
mov
fmuls
dec
aaa
and
dec
cld
dec
mov
sbb
cs
insl
pop
mov
add
xchg
addr16
and
test
das
mov
adc
mov
jp
sub
adc
mov
or
hlt
pop
push
mov
cwtl
cmp
lods
pushf
je
leave
mov
xchg
and
xchg
mov
lcall
das
imul
into
int
mov
fidivrl
fisubl
push
arpl
mov
daa
es
pop
xchg
js
ja
pop
mov
xor
ds
pop
out
or
pop
sbb
out
jns
dec
pop
pushf
adc
mov
imul
loopne
sub
xchg
add
push
stc
fsubl
mov
fisttpl
sti
adc
jnp
icebp
mov
in
pushf
xor
xchg
mov
stos
insb
dec
inc
push
jns
xor
scas
mov
dec
push
or
inc
in
in
lock
xlat
xor
outsb
push
mov
pop
inc
mov
adc
dec
inc
stos
jl
push
jne
cmpsb
daa
outsb
push
fdivs
stos
sbb
test
adc
inc
rorl
out
mov
stc
adc
int3
jbe
cmp
arpl
aaa
push
inc
pushf
and
xor
inc
int3
or
pop
cmp
push
or
mov
pusha
dec
cmc
jne
ret
dec
addr16
es
cs
stos
mov
sub
lret
xor
or
xchg
add
mov
mov
sbb
mov
xor
xlat
mov
xchg
push
shr
dec
mov
jbe
pop
std
dec
mov
aad
jl
jb
push
mov
test
inc
fistpl
push
add
xchg
popa
push
mov
ret
fldcw
cmovs
push
lds
fidivs
dec
jmp
lahf
sbb
pop
xor
repnz
stc
jo
lods
sub
lock
mov
adc
dec
pop
leave
pop
push
call
pop
scas
clc
das
movsb
jle
jmp
icebp
mov
outsb
pop
int
xchg
jnp
lret
inc
pop
pop
popf
dec
xor
mov
faddl
or
mov
pause
lea
push
cmp
pop
xchg
popf
push
pop
xchg
shll
je
xchg
rclb
nop
push
test
xchg
mov
test
mov
add
ds
lods
daa
arpl
test
xchg
sub
add
inc
xchg
out
add
into
ja
es
push
pop
adc
lock
nop
mov
sarl
gs
push
test
mov
xor
jne
and
mov
lds
or
loopne
fistl
and
and
cmpb
and
add
fmull
fists
lock
shll
jb
xchg
dec
add
push
mov
xchg
pop
inc
lods
xchg
cs
int3
jg
rcrl
leave
mov
lret
scas
xchg
mov
les
cmc
cmp
mov
rcrb
sti
out
imul
std
or
ljmp
cmc
inc
leave
das
inc
sti
popa
mov
push
fwait
loop
je
loopne
mov
stos
in
pop
xchg
mov
popa
lret
push
and
or
lahf
and
adc
xor
daa
aas
adc
jno
xor
mov
inc
icebp
mov
or
sub
scas
jecxz
mov
mov
fldcw
pop
cmpsl
and
dec
xchg
add
pop
jge
mov
rcrb
xor
add
push
js
rclb
inc
test
cmpsl
or
xor
xchg
xchg
dec
sub
push
sarl
xchg
mov
or
pop
jle
mov
sbb
inc
mov
mov
jno
imul
fsubr
cmp
outsb
mov
mov
pop
mov
sub
xor
mov
out
mov
push
stos
dec
loope
cmp
out
xchg
test
jge
adc
clc
outsl
and
xchg
push
int
xchg
pop
cmc
or
ficoml
iret
in
negb
sub
str
loope
rcrl
lods
jl
popf
mov
lcall
inc
sub
xchg
or
rorb
jle
lods
mov
call
xchg
jle
xchg
ret
fs
out
mov
and
sbb
adc
movsb
shrb
xchg
scas
jo
push
mov
lods
jo
jmp
mov
fldenv
dec
inc
leave
loope
cmp
pop
addr16
adc
jg
mov
mov
arpl
test
mov
xchg
cmp
or
mov
call
push
nop
fiadds
aad
jnp
mov
sub
cltd
mov
pop
mov
xlat
add
gs
inc
and
and
mov
cmp
leave
xchg
je
jmp
pop
icebp
mov
push
push
das
dec
mov
rcrb
inc
cmpb
in
outsb
add
mov
in
pop
xchg
or
cmpsl
ljmp
jmp
dec
xchg
jecxz
push
imul
pop
pop
dec
jnp
xchg
cs
out
sub
or
sub
std
gs
push
addr16
je
jb
out
pop
lods
and
mov
sbb
mov
xlat
cmp
xor
pop
lds
adc
sub
aas
imul
popf
and
popf
cmp
xchg
and
popf
decl
adc
aam
jae
jle
into
pop
cmp
std
in
xchg
cmp
ret
inc
jb
in
sub
dec
es
lahf
sbb
xchg
out
in
in
loope
leave
and
xchg
xor
sarl
or
fs
rcll
dec
xchg
adc
mov
mov
or
stos
jp
dec
call
dec
test
mov
ss
sbb
shlb
data16
sbb
outsb
popa
or
hlt
pop
repnz
lcall
jge
cld
ljmp
mov
cmc
mov
ret
mov
jo
inc
das
or
inc
push
aas
movsb
add
repnz
out
sbb
lahf
jns
cli
rol
repnz
mov
repnz
cltd
cmp
mov
pop
test
sub
daa
nop
cld
imul
es
sbbl
cmp
cwtl
icebp
adcb
mov
mov
insb
insb
pusha
bound
xadd
inc
jae
or
push
xchg
adc
cmp
fidivs
and
push
add
out
jns
sub
out
sbb
jb
cmp
lea
push
ret
scas
push
pusha
js
sub
lcall
sub
inc
shr
in
sahf
inc
fst
outsl
lret
rolb
cmc
mov
lods
rcl
sub
adc
mov
push
and
inc
sti
xor
push
leave
mov
scas
ret
or
xor
cmpsl
mov
cmp
loopne
push
dec
push
mov
jnp
int3
out
movsl
pusha
test
mov
sbb
popa
dec
fists
in
pop
and
mov
loopne
mov
out
mov
xchg
or
je
inc
mov
call
inc
addr16
pop
pop
mov
xchg
mov
cmp
pop
mov
push
mov
xlat
cs
cmpsl
leave
hlt
mov
sub
inc
stos
sahf
and
jnp
or
cmc
xchg
sub
sub
arpl
loop
std
cmc
lcall
cwtl
mov
mov
or
xor
pop
sbbl
lret
mov
mov
push
push
xchg
push
or
das
fstpl
or
or
xchg
jno
out
popf
roll
adc
cmp
out
int
add
rclb
mov
jl
rcrb
mov
call
lret
fisubrs
mov
int
sarl
imul
cmpsl
xor
scas
mov
jle
jmp
adc
dec
push
mov
lret
in
sub
out
jns
sarb
jle
jge
xrelease
cld
xchg
shrl
pop
mov
add
fnstcw
push
jl
sub
sbb
lahf
and
fcomi
sbb
cmpsb
sub
lds
movsl
fimuls
sbb
clc
sbb
mov
fisttpll
fbld
and
pop
sbb
push
jnp
push
push
nop
loopne
cmp
pop
clc
enter
sbb
imul
jo
xlat
push
push
mov
testl
cmp
test
out
add
nop
int
cmc
emms
ljmp
dec
mov
subl
jp
add
mov
in
repnz
jb
nop
cli
enter
imulb
cmpsb
lods
ljmp
inc
loope
mov
shl
pop
add
js
mov
scas
sbbl
add
mov
push
in
jae
xchg
daa
xchg
lods
push
popf
cmpsb
dec
cmpsl
lcall
jle
stos
push
jns
jo,pn
int3
mov
push
add
jge
sub
movsl
or
ljmp
mov
jp
out
sub
fimull
fs
or
out
sbb
mov
sub
add
adc
xchg
xchg
jo
js
lcall
jbe
mov
loopne
add
enter
ret
inc
mov
aas
xchg
clc
in
cmp
or
enter
jbe
fxch
bound
test
lret
imul
mov
lock
fsubs
outsb
or
xchg
cmpsb
bound
cmpsb
push
stos
lods
sbb
mov
outsb
push
jb
sbbb
inc
in
jns
popf
inc
movsl
cmpsl
stos
mov
outsl
or
bound
ds
pop
andb
adcb
loopne
xor
outsb
xor
xchg
lds
pop
mov
jnp
or
sub
and
and
mov
inc
cld
ljmp
jae
xchg
aas
and
icebp
out
insb
fstpl
rcrl
sub
test
and
xchg
xor
or
ja
mov
insl
or
adc
lods
mov
mov
mov
mov
jge
insl
fldcw
scas
sbb
lahf
add
xchg
hlt
add
cmp
sbb
cmp
push
dec
add
xchg
cwtl
mov
test
lret
or
pop
mov
icebp
cmpsl
mov
mov
mov
sub
stos
xor
xor
inc
into
fmulp
mov
fimull
dec
or
idivl
cld
mov
shr
insb
jnp
popf
mov
aaa
fidivrs
inc
push
divb
les
fldenv
movsl
out
jns
add
cmp
loopne
rcr
mov
pop
push
notb
pop
mov
mov
push
gs
push
scas
xlat
outsb
loopne
or
dec
hlt
cmc
inc
dec
movsb
hlt
adc
imul
std
jnp
das
aaa
mov
pop
xchg
xor
out
jo
lret
hlt
inc
std
lcall
push
sbb
test
add
insb
mov
push
repz
fdivl
dec
push
mov
sarb
inc
xlat
in
pop
hlt
enter
stos
mov
cmp
sbb
add
movsb
push
and
adc
mov
mov
add
xor
into
enter
aas
mov
inc
shr
xor
pop
xor
pop
mov
insl
sbb
jl
fidivl
sub
push
xlat
sbb
sbb
pop
xchg
out
scas
dec
jno
cs
out
into
inc
mov
test
and
mov
fndisi(8087
mov
xchg
into
xor
stos
icebp
push
sub
int3
mov
sub
inc
jb
mov
mov
in
xchg
nop
leave
add
shld
inc
xor
test
ds
loop
adcl
test
add
fidivrs
out
push
in
cltd
dec
push
pusha
lahf
test
iret
xor
pop
and
mov
les
fimuls
daa
cmp
mov
mov
rorb
adc
sbb
cmc
push
dec
loop
push
mov
je
mov
in
jbe
cs
push
pop
jle
pop
cld
xchg
mov
lahf
stos
xchg
mov
pop
stc
cmp
or
mov
jle
pop
std
lahf
push
mov
shll
mov
inc
int
mov
fxch
dec
jge
test
lods
add
dec
xchg
pop
jmp
test
subl
jae
aad
clc
fwait
shll
cmpsl
xor
stos
fsubl
cmpsl
sbb
pop
inc
mov
jle
add
addr16
push
pop
xchg
or
or
loop
xor
enter
cmp
cmp
push
adc
int3
mov
push
xchg
inc
fcmovb
dec
pushf
fimull
or
stos
sbb
fiaddl
pop
sbb
push
pop
inc
xchg
icebp
aam
in
js
inc
loope
call
mov
inc
shl
add
mov
cmpsl
jo
loope
out
in
xchg
stc
outsl
jbe
mov
or
cmpsb
into
push
enter
out
push
aam
lock
hlt
pop
je
std
sbb
arpl
mov
enter
xor
and
fs
jl
push
add
jge
fsts
jbe
cld
fisubl
jbe
lds
gs
iret
inc
pop
ljmp
ja
fcompl
push
dec
jle
push
adc
xor
jg
outsb
inc
xor
jnp
fistps
mov
lods
adc
out
xchg
gs
push
nop
out
jae
xor
pushf
notb
mov
mov
mov
cmpsl
jl
insl
scas
hlt
jp
mov
hlt
pop
dec
insl
hlt
imul
into
addr16
incb
mov
xor
call
adc
cmp
adc
je
mov
repz
push
inc
add
out
dec
sahf
sbb
xor
in
cmp
stc
cmc
notrack
lret
push
jb
fsubrl
ficomps
sub
insl
push
jae
mov
xchg
lods
in
aas
shll
or
xor
lcall
jnp
cmp
pop
push
outsb
loope
repnz
mov
cmpsb
xor
fdivrs
cmpsb
jb,pt
lock
cmp
or
test
add
mov
fcmovb
cmp
rcrb
push
js
ret
xor
adcb
push
xor
das
or
inc
shlb
fcomps
stc
cld
outsb
add
outsl
insl
paddb
out
imul
outsb
shll
movb
push
mov
cltd
cmpsl
cs
in
add
sub
add
pop
xor
add
pop
movsl
fistpl
jl
sarb
xchg
pushl
xor
shrb
fs
mov
mov
adc
jecxz
mov
sub
xchg
mov
jp
inc
js
imul
lret
lcall
popf
and
and
xor
std
sub
mov
mov
adc
push
jne
mov
pop
jb
cli
mov
ret
pop
sub
loopne
or
cmp
nop
jnp
femms
and
push
icebp
xchg
push
sub
testl
cmp
popa
fninit
sub
stos
arpl
adc
sbb
loopne
rorb
int
outsb
add
adc
inc
xchg
shrb
stos
int3
sub
push
jnp
outsb
inc
cmc
jnp
jge
icebp
dec
movsb
addr16
push
cli
fwait
popf
add
jmp
cmp
pushf
xor
push
stos
flds
ss
jmp
lds
dec
jecxz
mov
mov
mov
adcl
mov
mov
das
jmp
sahf
cmc
mov
push
sub
sbb
dec
movsl
inc
cmp
adc
push
imul
inc
dec
getsec
sub
jmp
mov
out
push
pushf
aam
xchg
pop
mov
cwtl
pop
sub
pop
repnz
dec
pop
cmc
sub
add
xchg
dec
jl
cmp
and
in
sbbl
add
lahf
ss
in
inc
jno
scas
cmpsl
lret
fstps
jmp
jnp
lea
movsb
xchg
add
jle
and
pusha
xchg
mov
call
push
sub
stos
shr
mov
das
sbb
pop
ljmp
aaa
scas
inc
imul
push
jne
test
cmpl
xchg
adcb
iret
xlat
push
push
sahf
fs
repnz
mov
mov
lods
inc
vphadddq
test
lods
js
sahf
stos
and
les
insl
negl
mov
repz
int3
test
repz
push
dec
loopne
inc
add
mov
jne
js
mov
pop
push
jmp
andb
pop
push
gs
movsb
inc
cmp
or
scas
inc
add
sahf
gs
xchg
daa
cmpsb
outsl
imul
scas
mov
fistl
jnp
je
scas
movsl
das
cli
pusha
outsb
outsl
ss
mov
cmp
rcll
mov
mov
shl
and
xor
in
shlb
pop
dec
xorl
les
ss
stc
xchg
cmp
pop
hlt
push
adc
and
dec
je
xor
aas
mov
mov
les
rcrl
or
inc
jns
leave
inc
fstpt
bound
xchg
shrl
ret
cmp
fidivl
or
filds
and
mov
lods
jae
and
sub
adc
adc
fs
xchg
xor
xor
fwait
xor
ja
into
rolb
inc
bound
repnz
sub
pop
adc
sar
fs
sub
dec
mov
lcall
inc
ss
setbe
xor
popa
out
dec
cmc
push
mov
inc
push
rorb
mov
jl
inc
pop
and
in
pusha
sbb
call
mov
or
lea
sbb
popf
and
jno
dec
xchg
xor
testl
cwtl
push
nop
mov
into
fcompl
fistps
add
xchg
lahf
stos
lcall
xor
popa
data16
mov
sbb
lods
cmp
push
push
stos
sub
stos
movsl
push
movq
lea
inc
cmp
push
xchg
shrb
add
stos
adc
out
fiaddl
and
mov
out
popa
lret
cmpsl
ds
in
test
fidivrl
cmc
dec
call
out
repz
pop
outsb
cmpb
ljmp
ficoml
cltd
daa
testb
aas
push
jne
mov
xor
pop
fcmovu
inc
add
cmp
and
push
add
push
cltd
aaa
jo
lods
xor
ljmp
mov
call
or
imul
pop
mov
aam
xor
sub
push
xor
std
addb
call
hlt
pop
push
loop
xor
xor
push
adcb
xchg
mov
jp
xchg
in
ret
inc
cmpsl
add
lea
mov
dec
rcrb
and
movsl
mov
into
in
test
test
add
ds
popf
lock
cld
outsl
in
jecxz
incb
imul
jne
mov
pop
sbb
jbe
jecxz
mov
das
fnstenv
std
cli
cmpl
dec
call
or
fidivrs
cwtl
jnp
subl
mov
iret
add
add
xchg
cmp
fwait
popa
out
add
das
jle
pushf
cmc
call
and
out
out
jo
mov
fsub
fsubrp
out
test
pop
push
aad
inc
or
cwtl
stos
adc
push
insl
rolb
out
xor
movsl
lret
push
xchg
cmpl
mov
scas
sbb
or
bound
and
cmp
pop
jg
mov
rolb
cmp
jnp
repnz
pop
xlat
mov
imul
ret
jne
outsw
sbb
mov
sub
sub
push
xor
mov
decl
sub
gs
mov
imul
js
mov
jge
ds
jle
push
push
xchg
hlt
cmp
push
std
mov
mov
out
adc
push
out
pop
cmp
or
ret
push
inc
sub
mov
inc
sbb
or
cmovs
in
or
pop
jp
inc
cwtl
movsb
aam
lock
mov
rcrl
insb
mov
and
push
xor
lahf
test
inc
mov
sub
pop
int3
push
jmp
fisttpll
or
jmp
mov
mov
adc
xchg
aas
xor
movsl
add
lods
mov
dec
xlat
and
imul
scas
pop
xchg
jle
dec
cld
outsl
inc
lods
cmp
xor
cmp
cmp
mov
popf
push
sbb
and
adc
push
rcrl
ret
idiv
and
mov
mov
mov
cmp
sahf
sub
sub
xchg
lcall
or
out
test
insb
lret
sub
or
decb
jp
add
mov
fdivp
mov
data16
mov
xorl
sub
popf
stc
or
aam
dec
adc
out
ret
sar
xor
cs
cmp
push
mov
sarb
mov
cwtl
das
add
dec
addr16
sub
loopne
jbe,pn
sbb
cmpsb
dec
fisttpll
jae,pn
fucomp
int3
data16
xor
pop
dec
adc
push
or
shl
or
mov
sbb
jae
cmp
mov
test
aad
push
push
pop
and
cmp
mov
in
aad
int3
push
lret
add
push
push
arpl
fnsave
lret
sub
inc
sub
popf
mov
enter
subb
aas
inc
cmp
cs
pusha
add
mov
lret
insl
leave
adc
dec
cmp
loop,pn
out
cltd
xchg
cs
scas
xchg
dec
sbb
cmp
dec
pop
out
movsl
cmp
outsb
subb
xchg
sbb
sbb
lds
ret
push
mov
dec
mov
mov
lods
fisubs
ss
das
lds
xchg
idivl
fwait
repnz
or
or
mov
insb
cmc
sub
and
or
popa
or
and
pop
xchg
testl
inc
dec
out
icebp
and
push
movsl
cmc
imul
inc
cmp
jnp
xor
jno
or
mov
loopne
aaa
pop
jecxz
sub
jbe
mov
icebp
in
mov
or
enter
or
data16
in
fsubrl
test
jnp
into
outsl
pop
sub
repnz
mov
xchg
dec
jmp
loope
mov
inc
addr16
icebp
sbb
add
fdivrs
out
and
cmp
and
pop
adc
stos
in
rolb
or
add
mov
push
and
push
inc
pop
out
stc
mov
aas
sub
mov
push
fldl
test
or
in
or
sub
inc
jbe
cmp
mov
es
mov
hlt
push
das
cld
stos
movswl
gs
jne
sbb
popa
ss
push
xchg
adc
jnp
push
add
cld
repnz
pushf
outsl
mov
rcl
imul
mov
leave
je
das
dec
fildll
fdivl
shrl
add
setno
scas
inc
stc
lahf
test
push
inc
outsb
fwait
jmp
and
xor
sti
mov
add
ss
dec
jmp
adc
sub
stos
ret
cs
ja
shrb
dec
or
xchg
xchg
data16
enter
lret
jb
bound
pop
xchg
inc
jns
rcll
adc
sbbl
mov
out
stc
xlat
add
xor
fs
mov
sub
out
ss
pop
push
mov
call
arpl
mov
mov
cs
into
xor
loop
in
test
adc
mov
dec
ret
pusha
jp
pop
add
cmpb
dec
sub
bound
pop
rcl
insb
add
or
insl
daa
jle
cmp
dec
call
or
dec
pop
movsb
lods
xchg
jnp
pop
stc
in
ds
sbb
mov
imul
cmp
xlat
mov
xchg
dec
and
arpl
cld
lahf
cmp
and
dec
fldenv
cmp
fldenv
popa
cs
xchg
cmp
xor
stos
push
lea
xchg
jae
dec
movsl
mov
fs
adc
cld
xchg
cmpb
or
jl
sub
and
inc
push
mov
pop
daa
fnstsw
mov
xor
jno
push
test
aas
aas
adc
pop
cmp
nop
outsb
subb
push
cmc
lahf
push
jecxz
xor
sbb
rcll
rorl
or
test
test
popf
cmc
sbb
scas
mov
jg
call
sub
lret
mov
and
mov
stos
sub
aaa
cld
sbb
dec
and
pusha
test
dec
add
mov
outsb
adc
es
out
test
outsl
mov
push
ljmp
cmp
in
testl
fwait
aad
jp
in
xchg
sub
and
pop
mov
imul
pop
in
push
movsl
pop
dec
sbbl
pop
aad
sbb
pop
gs
outsl
out
jp
fimull
mov
loope
cpuid
cmp
bound
outsl
call
das
mov
jne
sbb
adc
imul
pop
adc
pop
aam
push
repz
test
cs
fadd
nop
out
clc
popf
push
scas
into
or
sbb
repz
sti
sub
repnz
mov
mov
sbb
mov
add
mov
mov
mov
jg
mov
scas
xchg
pushf
sti
and
clc
add
mov
mov
dec
jmp
test
xlat
cmp
jp
sbb
scas
inc
clc
nop
pop
movsb
out
js
mov
scas
jecxz
test
lret
int3
shr
stc
lcall
sti
fildl
jo
jns
add
mov
ficomps
mov
push
outsb
sub
lahf
subl
xor
scas
imul
orl
mov
fucom
ss
icebp
add
or
loop
jg
inc
mov
push
pop
mov
cs
xchg
in
inc
int3
fs
data16
adc
aas
dec
inc
xor
xchg
pop
fsubrs
cmp
push
icebp
inc
adc
aad
scas
cld
outsl
or
cmpsl
jo
mov
jnp
mov
int
ret
sbb
push
mov
cmp
inc
xchg
std
xchg
push
icebp
pop
test
call
dec
mov
jp
add
into
sub
shl
lea
enter
imul
into
inc
adc
mov
loopne
fistl
test
adc
mov
popa
adc
mov
jbe
test
test
jl
clc
shl
jle
out
xchg
test
dec
int3
or
add
cmpl
lods
mov
aad
add
std
mov
xor
shll
cltd
push
data16
add
bound
pop
dec
enter
lods
das
push
test
inc
sbb
pop
icebp
jae
xor
cmp
insl
sub
dec
push
sar
and
inc
mov
jg
xchg
mov
inc
out
imul
imul
loop
in
aas
sbb
ret
cmpsl
xlat
push
pop
adc
cmp
popf
inc
or
xchg
mov
add
lcall
or
outsl
ds
push
or
cmp
mov
aas
or
ds
xor
sahf
lods
xchg
sub
mov
sub
push
pusha
jp
and
push
mov
repnz
shlb
jns
aad
mov
inc
test
scas
fs
es
dec
popa
aas
mov
je
mov
push
out
xor
imul
or
lahf
mov
or
mov
mov
icebp
dec
fstps
neg
jb
test
stc
adc
adc
xor
jae
popf
xchg
mov
aaa
das
movb
repnz
mov
push
inc
jl
and
movhlps
insb
dec
mov
ss
or
mov
mov
lcall
mov
nop
fs
cld
xchg
xchg
leave
in
in
cmpsl
push
add
int3
ror
dec
mov
push
mov
pushl
xchg
test
jae
out
cld
pop
or
test
pop
inc
cmp
and
lret
pusha
mov
mov
insl
shlb
ljmp
and
cmpb
xchg
dec
jo
mov
pop
cltd
test
daa
movsl
sar
sti
outsl
pop
add
mov
or
dec
test
bnd
xchg
call
sbb
test
and
mov
sbb
lds
test
mov
jecxz
dec
xchg
testl
push
mull
inc
subl
xor
movsb
push
lea
cmp
add
lahf
push
jbe
fmul
inc
xchg
or
mov
mov
cmpsl
test
jmp
and
rcr
idivl
mov
shll
pushf
es
imulb
add
outsl
in
cwtl
inc
js
jl
mov
xchg
in
inc
sbb
inc
mov
repz
mov
leave
jno
sub
xchg
and
fst
jmp
rolb
jecxz
push
mov
movswl
mov
sub
insl
int3
jo
decb
bound
jo
sbb
outsl
jnp
jae
add
adc
mov
mov
scas
xchg
and
xchg
push
repz
push
mov
gs
xchg
and
mov
xchg
xor
add
mov
lds
jbe
fnstsw
and
push
ss
out
mov
sbb
fdivs
fwait
rorl
insl
adc
mov
movsl
icebp
ret
outsb
hlt
or
imul
mov
les
pop
test
or
test
lret
pusha
aad
ss
out
sbb
daa
mov
adcl
mov
shl
addr16
lods
aaa
cmp
jmp
adcl
cmp
and
push
fidivrs
dec
mov
sbb
mov
or
ficompl
push
nop
push
and
jno
sub
pop
cmpsb
dec
mov
sbb
stos
inc
rcrl
xor
fisubl
jp
xchg
in
xor
into
enter
add
es
push
push
fdivl
inc
fcmovnbe
sahf
mov
adc
ljmp
add
mov
push
add
mov
pop
cmpsl
xchg
pop
xor
or
cld
xchg
mov
lock
movsl
dec
aaa
int
into
xor
mov
js
add
cs
pop
cmc
imul
lret
rcll
jno
jg
add
xchg
or
lods
imul
inc
xor
pop
jns
js
mov
mov
cwtl
dec
lret
fldl2t
je
ret
out
ja
repnz
int
clc
mov
inc
cmc
push
je
xchg
sub
das
jno
xchg
push
aas
pusha
scas
push
pop
mov
test
loope
xor
add
xchg
adc
lahf
idivl
push
out
cltd
iret
jecxz
jo
inc
daa
popf
mov
mov
lcall
xor
and
inc
push
dec
dec
add
cmpsl
xor
mov
push
nop
hlt
and
in
dec
movsb
cld
testb
dec
push
mov
shl
out
cmp
pop
shl
sbb
aas
fwait
ljmp
jbe
xchg
stos
dec
push
in
pop
push
icebp
loopne
jbe
xor
sti
and
lods
pop
mov
xor
fbstp
dec
and
aam
mov
jb
fpatan
push
and
lock
test
call
fcoms
adc
out
adc
scas
lds
sub
mov
fwait
std
xor
mov
jne
imul
in
jnp
rorl
jg
ret
rol
outsb
es
outsl
push
cmpsb
rcrb
dec
and
dec
testb
insb
jbe
cmpsb
xor
mov
in
lcall
cwtl
jbe
loope
xor
sub
repz
pop
loop
enter
dec
lock
call
dec
andb
call
adc
jge
lahf
stos
adc
std
jo
in
mov
sti
pop
jmp
ds
mov
rcll
mov
out
inc
mov
aam
test
sub
addb
or
or
pop
pop
adc
scas
mov
pop
lcall
fdiv
notl
push
sbb
jl
jmp
sub
shl
hlt
dec
cmp
mov
add
call
sbb
inc
ja
stc
icebp
or
jmp
ffreep
std
add
arpl
es
jl
les
fldcw
insb
sbb
add
mov
dec
incb
xrelease
movsl
inc
pop
jne
sbb
js
dec
push
leave
test
loope
popa
pop
repnz
jbe
push
lcall
sarl
mov
and
aam
add
subb
lds
imul
adc
lea
sbb
sbb
popa
mov
dec
jmp
dec
lret
inc
and
ljmp
out
ljmp
in
mov
int
roll
testl
stc
popa
or
les
enter
adc
outsl
inc
jno
and
das
mov
ss
decl
jle
decb
imul
pop
jl
push
inc
es
cmp
fiadds
inc
cmpsb
mov
fisttpl
lea
mov
push
mov
inc
pop
mov
inc
jo
or
cmpsl
aam
pop
mov
loope
add
and
sub
xchg
fsub
push
loope
xor
cmp
cmp
push
xor
fisubl
mov
sub
mov
add
jmp
sbb
inc
mov
xchg
cmp
movsl
xor
jns
mov
insl
or
in
mov
or
inc
aaa
in
push
jo
sbb
xor
xchg
aas
adc
cmp
mov
aad
addb
push
or
into
test
mov
filds
leave
fdiv
mov
sarb
fmulp
test
adcl
ss
hlt
cmpsl
sbb
movl
in
mov
lret
clc
push
sub
jg
cmpb
sbb
lahf
jp
pop
inc
fstl
jecxz
aas
or
enter
mov
cmp
std
and
loopne
xchg
push
sub
inc
sarb
jb
mov
mov
movsb
clc
pop
out
sub
repz
jge
ja
pop
outsl
xor
adc
cmp
addr16
xchg
pusha
aaa
push
loopne
imul
in
daa
push
sbb
jo
xor
inc
adc
mov
sahf
data16
adc
mov
mov
jmp
aaa
xor
aaa
jbe
cli
lock
push
lret
rcrb
stos
cmp
ficompl
lret
push
cmpsb
loop
out
xchg
int3
lahf
sub
pop
rclb
repnz
lea
inc
clc
push
cmp
mov
into
in
cmpsb
or
stos
cmp
sub
inc
fadds
or
jno
nop
daa
clc
subb
add
in
inc
adc
lret
mov
out
sub
ljmp
mov
shrb
insl
xchg
pop
out
add
sbb
lret
ss
push
in
test
adc
inc
push
fistpll
pushf
imul
aam
loopne
roll
and
jb
out
or
hlt
ss
jecxz
adc
ja
data16
sbb
push
mov
or
push
incb
and
adc
mov
fdivl
mov
sti
bound
inc
call
dec
mov
cmp
mov
sar
outsl
jnp
pop
lret
in
lds
cltd
adc
cmc
les
les
pop
sarl
sub
scas
cmc
push
push
lds
lods
xchg
out
jne
xor
lret
cmp
rcrl
pop
out
cmpsl
jno
pusha
in
jbe
pop
pop
lods
movb
repnz
shll
enter
cmp
dec
mov
push
stc
jno
loop
dec
push
js
in
adcl
sbb
mov
shl
iret
xor
lcall
repz
loop
push
xchg
pop
sahf
imul
mul
cli
xchg
sbb
push
pop
jns
mov
and
rclb
sub
inc
pop
sbb
push
mov
sbb
arpl
or
mov
ror
xor
lcall
std
test
mov
push
sbbl
mov
icebp
push
or
sbb
clc
or
roll
outsb
xchg
xchg
outsb
dec
mov
jmp
sub
jb
dec
xchg
outsl
pop
add
loopne
dec
insl
and
and
cmp
xor
in
inc
rcl
cmp
pop
sbb
xchg
push
or
pop
pushfw
notb
pushf
cld
push
test
nop
pop
lahf
mov
xor
imul
push
or
adc
movsb
in
push
jmp
data16
mov
mov
dec
stos
es
fnsave
test
jae
inc
jns
movsb
outsb
jmp
or
shll
sub
repnz
jmp
jle
setg
rorl
adc
and
push
andl
popf
xor
loope
sub
ficoml
mov
outsl
hlt
xchg
xorl
repz
arpl
fnstenv
sarl
sbb
mov
in
xchg
sbb
push
mov
insb
loopne
sbb
cmpsb
fwait
loop
sbb
imul
ss
ret
in
jb
inc
sub
inc
into
mov
push
push
sbb
and
pop
push
cmc
jl
lods
sub
jne
popa
stc
mov
lock
mov
idivb
fldenv
jle
movsb
jmp
cmp
jns
les
jp
adc
fistpl
cmpsb
lock
xlat
mov
or
vfrczss
xchg
adc
adc
je
pop
push
cli
shll
cmpsl
mov
scas
rcl
loop
pop
repnz
repz
ret
shrb
and
outsb
icebp
sub
dec
popa
mov
fsubrs
mov
push
mov
push
sbb
mov
pop
ss
xor
push
sti
leave
pop
jmp
inc
fisubrs
int
pop
cli
jle
into
pop
das
ret
mov
aam
cmpsl
sti
mov
mov
out
mov
ret
pop
pop
or
and
xor
test
sbb
jge
sahf
mov
arpl
jmp
rcll
inc
ja
bswap
pop
sbb
push
out
addr16
pop
adc
outsb
inc
mov
xor
scas
cmpsl
push
rorl
mov
push
out
add
fldenv
cwtl
mov
lods
push
inc
add
jbe
imul
jle
pop
das
add
loope
daa
iret
add
pop
cmpsb
sub
leave
xor
iret
inc
call
call
jecxz
push
mov
nop
mov
loop
mov
ljmp
dec
push
mov
in
jb
fistpll
in
push
push
push
and
inc
mov
arpl
fdivrl
les
pop
ficoms
into
xchg
cmp
fucom
jp
mov
leave
sub
xor
cli
xchg
aam
mov
sub
add
jns
pop
lcall
push
test
cwtl
mov
xchg
xor
test
lcall
jo
or
aaa
inc
pushf
inc
call
fbld
loop
dec
movb
out
pushf
xor
xlat
adc
jno
pop
jb
xchg
cmp
daa
das
cmp
pop
inc
inc
inc
sti
repz
push
ds
inc
push
dec
stos
pop
aaa
sub
xor
call
leave
jmp
push
loop
mov
add
imull
cmp
jg
pop
mov
outsl
push
lahf
mov
sub
dec
cmp
push
xlat
dec
rcll
and
imul
xor
int3
add
andb
mov
jle
pop
cmpsl
lds
aaa
cmc
mov
clc
push
ficoms
test
ss
stos
sbb
cmpsb
pop
jne
div
jl
mov
leave
das
inc
sti
jno
aas
push
or
je
and
adc
call
loopne
pop
mov
lods
orb
fcoms
add
movl
cmc
xchg
inc
pop
inc
sti
daa
mov
xor
repz
fisttps
scas
or
dec
imul
adc
and
fsubl
mov
sub
adc
mov
lcall
lods
mov
testl
and
test
dec
push
mov
inc
test
jbe
mov
mov
cmp
and
xor
pop
pushf
xlat
sbb
push
lahf
fidivl
push
test
cmpsb
les
movsl
out
push
pop
or
push
jp
push
lods
das
mov
repnz
clc
push
repz
add
fiadds
aam
test
movb
add
fnstenv
stos
fcmovne
movsw
enter
les
imul
loop
pop
dec
popf
decl
setl
ja
pusha
xor
mov
fucom
xchg
into
ret
sub
push
add
pop
std
xchg
repnz
pop
test
fsubrl
xchg
outsb
cmp
push
pop
in
test
ficoml
loop
xchg
jne
and
outsl
push
dec
cs
adc
push
cmp
push
mov
or
sahf
mov
outsl
shr
dec
das
jp
jl
xor
sahf
pop
jb
dec
xchg
stos
push
nop
mov
mov
push
imul
push
icebp
outsb
mov
rclb
fcomip
iret
repz
mov
aam
rcll
scas
ja
iret
movsl
mov
ds
xor
xchg
imul
popa
mov
pop
hlt
inc
inc
iret
fucom
fs
or
and
addr16
psubd
clc
push
repnz
lcall
pop
cmc
adc
inc
inc
test
mov
lods
inc
je
jb
sub
mov
mov
push
out
push
aad
jle
xor
add
jle
push
lods
mov
divl
dec
data16
xchg
jnp
test
sbb
fs
mov
and
cmp
xchg
addl
mov
mov
and
sub
into
das
mov
mov
add
jg
loop
sbb
in
test
push
std
out
test
push
xchg
in
sub
push
jbe
stc
mov
xor
push
aad
push
cmp
fidivrs
pop
das
pop
inc
mov
cmpsl
jns
pop
cmp
stos
cmp
in
xchg
lods
jmp
shll
lcall
testb
nop
je
mov
clc
mov
lods
and
icebp
ljmp
push
dec
cmpsb
lods
out
addb
mov
addr16
cmpsl
imul
loope
jmp
int3
fs
jl
dec
sub
sub
mov
in
xor
imul
movsl
test
fdivrl
mov
pop
inc
aas
lock
stc
mov
push
sar
jecxz
mov
jmp
jp
lahf
xor
das
lds
dec
dec
and
inc
movsb
sti
movsb
adc
mov
and
ret
xchg
mov
fwait
arpl
dec
loop
mov
jl
clc
adc
sbb
sti
scas
mov
jmp
out
out
frstor
and
adc
xchg
cli
xor
dec
pop
jl
jl
lds
stos
pop
repnz
xchg
sub
push
and
pop
jae
push
push
cmp
dec
loope
cmp
lds
cmp
xchg
aas
pop
mov
sbb
pop
xor
jg
sarl
sbb
push
ds
sub
int
jge
mov
sbb
mov
bound
sahf
scas
fnstenv
aad
pop
dec
js
scas
dec
mov
shl
mov
sbb
pop
mov
lcall
hlt
rclb
inc
xchg
sub
in
cmp
adc
jp
aam
fisubl
lcall
rorb
loop
repz
pushf
xor
inc
test
sbbl
outsl
sahf
aas
xchg
outsl
in
repnz
lea
cmp
mov
sub
sahf
out
sbb
mov
xlat
int
dec
xlat
sbb
jno
js
inc
cwtl
icebp
mov
fidivrs
and
jb
mov
stc
pop
imul
notl
inc
or
push
scas
cs
mov
push
xlat
outsb
inc
push
jb
sbbb
jg
sahf
mov
leave
stos
lods
es
jne
imul
mov
test
mov
ficomps
adcl
repz
sub
pop
sub
xor
pop
sbb
push
fnstcw
jge
cmpsl
cmpsb
jbe
push
adc
imull
pop
inc
lds
out
pop
pop
fidivrs
push
xor
push
push
xchg
sub
mov
ret
mov
xlat
js
inc
sub
or
sti
lahf
cld
daa
push
or
sahf
imul
xchg
mov
aam
xorl
iret
out
fcoms
dec
adcl
lret
jp
scas
and
jl
add
or
es
or
mov
or
lret
cld
ss
or
es
sub
cmp
shll
push
dec
sti
sarl
into
push
arpl
dec
sbb
mov
cli
pop
enter
gs
jno
insl
push
rcrl
imul
inc
lods
es
sub
aam
scas
inc
ret
ja
jecxz
arpl
in
cltd
sarb
sub
movsb
not
inc
push
pop
sub
pop
cmp
dec
fsub
jp
cmp
mov
jg
adcb
and
loop
mov
add
arpl
clc
mov
sti
inc
je
inc
ljmp
inc
pushf
cmp
dec
push
fistps
mov
xchg
rcl
popf
sub
and
add
mov
repnz
dec
movhlps
not
mov
ficoms
into
sub
and
int
inc
jmp
stc
out
jmp
sbb
and
jo
jne
push
or
and
or
mov
mov
loop
xor
mov
bound
mov
shlb
push
push
or
jo
xchg
jo
dec
aam
shr
fcomi
inc
dec
jne
jnp
mov
xchg
imul
inc
bound
push
rolb
adc
iret
sbb
push
sbb
mov
sub
or
lock
outsb
ficoml
test
in
sub
cmp
ret
xchg
test
testb
in
xchg
jno
call
je
out
sbbb
or
cmpsl
aam
cs
movsb
add
shlb
push
aam
xchg
data16
pusha
and
push
je
mov
loopne
mov
repnz
fsin
push
inc
ss
scas
andb
cmp
in
out
shl
stc
add
shl
out
jo
jbe
xchg
es
pusha
negl
sbb
add
inc
mul
dec
sbb
sbb
hlt
sbb
add
clc
sub
mov
int
xchg
sbbb
ds
jge
in
stos
mov
push
fsubr
jle
sti
push
push
jnp
mov
sbb
pop
bound
rcrb
inc
xlat
sub
js
jo
fcomps
push
ljmp
mov
fsubs
adc
imul
ret
imul
imul
or
mov
sub
cld
fwait
rorb
sbb
movsl
scas
xlat
loopne
xor
clc
mov
xlat
outsb
jnp
fisubrs
aad
push
push
adc
andb
or
pop
addr16
add
fnstcw
movhps
mov
mov
jl
lds
dec
cmp
jnp
sbb
mov
jge
ja
sbb
jbe
jae
ficomps
addl
sub
fisubs
stos
addr16
icebp
lock
push
xor
dec
bound
add
adc
adc
dec
xchg
scas
lock
je
lcall
fidivl
xor
add
xchg
xor
push
mov
out
bnd
nop
add
push
addl
pop
lret
insl
mov
lret
ss
mov
out
xor
out
xchg
pop
ds
test
jg
dec
shll
mov
pusha
mov
iret
stc
sbb
insb
mov
fs
sbb
lea
add
jge
inc
es
push
fcom
pop
xor
mov
mov
cmp
push
jecxz
jae
hlt
fsubs
sbbb
out
and
cmp
aad
stc
mov
stc
or
fsubrs
fmuls
int
jne,pn
stos
pop
mov
int
jne
push
pop
pop
insb
scas
loopne
add
insl
mov
fistpll
push
outsl
xor
push
inc
lock
add
add
fistpll
xchg
jne
jp
sub
rcr
icebp
in
jb
movsl
mov
pop
sahf
xchg
xor
fbstp
sub
dec
push
imul
sahf
imul
sbb
xchg
inc
push
frndint
cmp
add
cmpsl
mov
inc
popa
test
pushf
cli
outsl
push
ja
test
xor
inc
push
cli
lods
or
leave
inc
or
xchg
dec
pop
xchg
pop
adc
or
xchg
jmp
push
int3
arpl
subl
mov
jns
jmp
fstl
jnp
adc
fiadds
in
sti
pop
sbb
add
mov
fcompl
shll
jo
jae
jne
ret
jge
jmp
adc
push
fwait
xchg
cmp
pusha
inc
sub
rorb
test
jecxz
in
lods
setnp
pop
fsubl
inc
gs
xchg
sub
xchg
jne
stos
bound
cmp
inc
push
rorb
aad
aad
xchg
pop
outsb
or
lea
int3
fwait
lret
or
xchg
mov
dec
arpl
imul
imul
fistps
jl
das
lods
mov
sub
sbb
or
pop
pop
xchg
xor
fnsave
aaa
inc
mov
enter
push
cmpsl
jno
xchg
lods
pushl
mov
mov
cmp
scas
pop
cmpsl
sbb
pop
insb
cmpsb
stc
jnp
add
sbb
mov
xor
adc
addr16
fwait
jbe
xchg
xorl
xlat
ljmp
mov
mov
push
xchg
inc
pop
and
movsl
addb
push
das
inc
mov
or
mov
sub
and
popf
xchg
cmp
sbb
mov
std
or
outsl
addl
negb
outsb
mov
add
and
adc
pop
loopne
mov
add
sti
divb
xchg
xchg
bound
cmpb
icebp
xchg
imul
pop
stos
jns
repnz
stc
fs
test
loop
xor
and
cmpsb
push
add
scas
popa
addl
mov
cli
adc
outsl
ljmp
icebp
dec
dec
xor
and
pop
dec
dec
xor
in
adc
je
push
loope
sbb
rcrb
loop
sub
icebp
mov
fcoms
in
pop
sub
lahf
hlt
inc
popa
daa
push
push
or
jmp
loope
inc
shlb
pop
cmp
jbe
mov
push
or
es
inc
std
jo
pop
jge
lods
shl
or
mov
loope
sbb
xor
ror
pop
test
dec
popa
inc
push
jecxz
push
adc
in
test
ljmp
stc
insb
bound
cmp
dec
fadd
iret
ss
scas
push
repz
repnz
shr
cmp
mov
cmp
imul
inc
outsb
sahf
push
xchg
mov
outsb
fcomp
mov
enter
js
xor
fsubs
cmpb
or
lcall
clc
inc
popa
loope
out
inc
jns
lock
and
mov
jb
cwtl
pop
movsb
dec
scas
cmc
or
xor
mov
and
fwait
loopne
stc
andb
pop
cmc
or
lret
push
scas
sub
xor
push
add
in
adc
lock
inc
jnp
in
pop
or
daa
inc
lcall
push
or
lods
jmp
sub
es
outsl
std
out
inc
sub
frstor
fucomp
push
push
and
mov
stos
xchg
out
gs
push
mov
mov
shrb
sti
shrb
dec
punpcklwd
mov
push
gs
sbb
stos
enter
mov
test
fcmovb
cmc
mov
jno
mov
cmp
adc
sbb
rorb
ret
mov
mov
sub
pop
ds
cmp
cmp
cmp
cmp
sub
adc
outsb
mov
mov
inc
fsubl
outsb
aaa
cmc
dec
mov
shr
jno
stos
pusha
dec
loop
push
push
out
mov
jb
push
cmp
fiaddl
mov
xor
out
dec
sub
xchg
push
xor
inc
dec
loopne
jno
in
xor
add
or
lods
shrl
fildll
out
or
jnp
jl
xchg
mov
insl
hlt
into
addr16
mov
or
stos
in
mov
dec
in
dec
fcmovnb
lods
fsubrl
mov
xor
adcl
rcll
lods
jbe
jp
or
mov
mov
jbe
imul
xchg
jmp
test
dec
xor
aas
loop
aad
loop
or
push
jbe
dec
lahf
ja
lcall
call
push
sub
mov
inc
fidivrs
inc
push
push
sarb
loop
ficompl
dec
cmpsb
test
insb
mov
jge
push
jg
ret
cmp
and
shl
dec
mov
xor
pop
cmpsb
pop
leave
cld
cli
cmp
stc
sub
dec
cmpsb
shr
dec
adc
cmpsl
pop
jno
fidivl
cltd
push
shrb
std
lods
push
jge
das
scas
mov
mul
jp
push
enter
clc
mov
inc
inc
ljmp
out
loopne
push
test
sbb
test
inc
fcmovnb
jecxz
add
loopne
sub
lret
sub
dec
test
enter
pop
sub
mov
push
cmp
insl
sbb
dec
xchg
inc
add
lock
push
scas
in
mov
inc
repz
out
dec
std
or
jae
popa
orl
mov
xor
sar
jae
sub
or
xor
out
sbb
ret
inc
or
mov
jb
into
push
int3
sbb
fs
repnz
jae
mov
pushf
popf
sub
push
fcompp
push
jns
les
das
cld
jge
pop
js
ja
adc
fmulp
and
dec
sub
test
div
cmpsb
mov
jge
js
adc
ss
cmpsb
jle
addr16
add
adc
stos
sbb
dec
dec
repz
in
mov
lds
cli
call
push
and
cmp
push
dec
out
dec
lcall
mov
sbb
pop
and
call
lret
or
and
pushf
mov
jb
in
nopl
mov
jmp
scas
gs
sbb
repz
adcb
add
dec
in
push
push
mov
js
dec
pusha
push
inc
test
xchg
sub
cmc
jl
dec
mov
push
les
ds
and
pop
int
push
or
movsl
jbe
in
cmp
lock
xchg
jecxz
sbb
aam
ja
add
push
outsl
dec
jecxz
dec
push
daa
std
mov
ficompl
add
roll
dec
pop
test
into
movsl
cmp
jno
jb
rclb
pop
inc
es
movsb
jge
push
scas
add
push
in
mov
fldz
aas
pop
imul
push
hlt
ret
jne
imul
inc
pop
test
movsb
gs
cld
xchg
lods
push
sahf
gs
outsb
sub
pop
cld
stos
mov
in
and
out
rclb
push
push
outsl
add
mov
insl
mov
cwtl
out
int
out
mov
loopne
pop
outsb
mov
jmp
insb
rol
pop
pop
adc
int3
jne
dec
cmp
aaa
imul
dec
ds
dec
out
out
gs
mov
sarb
clflush
fbstp
xchg
sub
dec
adc
push
les
sti
dec
loop
add
nop
movsb
jnp
lods
or
pushf
mov
lahf
daa
mov
xchg
push
sub
xlat
lahf
mov
aad
xchg
push
shl
icebp
pusha
dec
dec
out
inc
orb
and
fnstsw
lods
xchg
and
movsl
sbb
into
jl
add
mov
push
xchg
pop
inc
sub
cld
xchg
jns
inc
out
pop
xor
in
sub
jg
add
frstor
test
test
add
into
adc
cmp
pop
insl
les
hlt
lcall
dec
xlat
or
push
push
pusha
popa
jae
sbb
and
push
mov
jg
xchg
pop
jecxz
mov
adc
add
cmp
xchg
lds
mov
das
aam
fiadds
test
gs
adc
loop
adc
loop
jg
aam
mov
pusha
mov
mov
insl
mov
xchg
cmp
lahf
stos
jmp
movsb
les
pop
and
scas
sub
jg
enter
aam
inc
push
mov
mov
cli
push
and
mov
addr16
xor
xor
shr
inc
shlb
push
call
jmp
ljmp
mov
push
cmc
or
int
stos
jl
and
enter
pop
lret
aaa
in
imul
js
push
mov
inc
push
nop
addl
ret
stos
out
jno
push
lock
gs
xor
xchg
frstor
lret
ret
xorl
aaa
enter
outsb
out
cmc
lock
les
inc
and
or
lret
sahf
jae
xlat
push
hlt
ljmp
insb
popa
add
sbb
outsb
movsl
cmp
es
sub
xor
les
or
mov
sub
incb
jmp
push
sub
loop
xchg
fsubrl
jno
sbb
pusha
xor
fs
insb
sub
push
sub
xchg
int3
enter
js
cmpsb
js
sarb
adc
sbbl
and
add
jmp
cli
cmpsl
imull
jno
jb
mov
pop
int
js
enter
das
mov
push
add
add
jne
in
das
jecxz
inc
cmp
pop
aad
rol
mov
sbb
xlat
ljmp
push
out
sub
in
divl
dec
scas
mov
call
or
add
xorl
mov
pop
push
pop
adc
lods
outsl
xor
xchg
dec
rcl
outsl
or
cmc
adc
lock
mov
jmp
sub
and
or
das
aaa
int
mov
push
in
jecxz
pop
xchg
scas
xor
mov
or
out
fstps
loop
mov
xchg
jae
lret
inc
adc
pop
mov
pop
sahf
mov
add
push
cmpsl
sbb
jg
xorb
dec
loope
xchg
jne
loop
out
ja
add
mov
lock
and
push
push
fisubl
mov
mov
test
in
pop
lret
js
sti
inc
mov
mov
loop
imul
xchg
mov
stos
movsb
das
adc
jge
pop
imul
imul
push
dec
rorl
dec
dec
shl
dec
jl
push
cmc
jl
adc
int3
out
jb
enter
mov
push
add
pushl
gs
test
pushf
aam
fadds
jp
test
scas
les
xchg
jns
and
inc
cmp
sub
adc
pop
cmp
push
push
or
add
out
dec
daa
mov
stos
xchg
mov
or
mov
jl
mov
or
and
push
mov
mov
fnsave
xor
sarl
add
fnstcw
mov
xor
or
mov
lahf
mov
nop
in
jne
call
inc
push
sub
inc
mov
pop
cmc
sub
pop
adc
jle
nop
pop
pop
and
nop
arpl
arpl
adc
ljmp
pop
fdivl
int3
outsl
add
inc
cmp
sub
pop
out
add
les
dec
and
filds
aad
xchg
in
sbb
ja
sar
or
sbb
push
pop
inc
rorl
in
cmp
insl
rolb
imul
jbe
inc
test
cli
xchg
mov
xor
pop
sbb
inc
and
mov
loop
pop
cmc
inc
out
xlat
dec
xor
lahf
bound
cmc
aas
adc
inc
jb
push
push
ja
lcall
arpl
loop
jb
out
inc
ds
cwtl
ret
fnstcw
mov
leave
test
push
xchg
mov
ljmp
push
pop
mov
dec
rcr
fisubrl
cmpsb
adc
xor
aad
inc
or
mov
push
pop
jbe
es
and
add
andl
in
shrb
pop
sub
mov
or
mov
mov
fwait
dec
inc
mov
bound
outsb
and
jno
movsl
testl
cld
push
adc
insl
mov
add
inc
jne
dec
xor
sub
mov
add
rclb
loope
sbb
and
inc
out
pop
imul
int3
mov
icebp
mov
jno
push
ja
dec
pop
sbb
cltd
sbb
sbb
mov
insb
xchg
jl
sbb
into
gs
cwtl
pop
xchg
outsl
push
add
sub
push
pop
mov
stos
mov
lcall
and
scas
movsb
xor
sbb
add
lcall
in
and
out
testl
sbb
es
and
inc
mov
push
sbb
sbb
cmp
and
inc
lock
popa
xor
dec
push
pop
das
pop
xchg
mov
mov
sub
jns
push
popf
mov
in
sbb
ss
mov
pop
jl
adc
push
ja
cli
rorb
lods
adc
push
fisttpl
add
fmull
push
imull
mov
cwtl
clc
enter
iret
push
cmpsl
jae
stos
xor
lret
rcrl
aad
and
out
pop
sahf
xor
das
ficoms
sub
inc
outsb
pop
lret
bound
dec
fistpl
in
mov
adc
lcall
add
jecxz
cmp
sbb
add
xchg
or
test
pushf
inc
push
jbe
sti
sahf
jb
daa
mov
xchg
push
stc
cmp
popf
dec
cmp
cli
fsubr
int
xchg
mov
xorb
push
jbe
mov
cwtl
stos
rolb
jbe
and
enter
push
outsb
push
ss
mov
ja
clc
imul
push
xchg
jmp
ret
and
mov
ret
mov
stc
mov
rcrl
mov
xchg
sub
sti
xor
push
stc
popa
mov
and
dec
jl
mov
pop
cwtl
sbb
push
mov
cltd
mov
in
call
iret
aaa
into
sbb
into
and
mov
popa
mov
push
sub
aas
mov
xor
inc
mov
sub
gs
aas
push
enter
or
inc
dec
inc
push
test
push
cmp
scas
addl
ret
mov
adc
inc
inc
push
or
sub
cmp
mov
xchg
inc
aaa
leave
sbb
les
cmpl
xor
mov
mov
push
jae
xor
jle
mov
hlt
ljmp
ret
adc
mov
std
mov
roll
push
adc
mov
cmp
or
imul
inc
or
lretw
jnp
sub
stos
pop
out
inc
adc
ss
pop
pop
adc
popf
jnp
ds
mov
adc
pop
push
ds
popf
out
bound
mov
lods
pop
movb
mov
adc
mov
mov
push
mov
and
or
mov
insb
scas
cmp
imulb
rclb
rolb
mov
pop
lahf
push
shll
aad
inc
push
ret
test
loopne
shlb
bound
aaa
add
insb
inc
repnz
mov
push
lret
cmc
jnp
adc
mov
mov
cltd
push
rcll
pop
push
flds
inc
test
int3
lock
repnz
fildl
sub
add
std
jle
cs
jno
push
jg
arpl
subl
add
leave
mov
mov
mov
xchg
xchg
and
mov
jnp
in
and
or
add
push
and
test
jae
push
daa
jae
mov
das
inc
or
fsubrp
and
sarl
out
jmp
dec
addr16
loopne
xchg
in
sti
mov
mov
dec
add
repnz
mov
imul
js
cmp
mov
imul
xchg
pop
mov
nop
mov
sbb
cmpsl
ret
mov
xchg
mov
pop
sbb
pop
fldl
push
clc
sub
push
mov
push
prefetcht1
xor
out
cmp
or
cmp
in
cmc
cmp
lret
xchg
inc
inc
enter
stos
fidivrs
xchg
adc
xor
xorl
adc
mov
xchg
fwait
repnz
add
sbb
or
sbb
push
loopne
xchg
xchg
add
test
rcll
sub
sub
xchg
jge
lret
or
or
pusha
mov
and
into
jbe
sbb
push
cmp
mov
mov
pusha
fdivrs
jbe
jg
mov
es
stos
inc
xorb
mov
add
inc
xor
loopne
aaa
stos
dec
mov
add
and
loopne
jp
mov
arpl
mov
xlat
xchg
sub
cld
push
xor
das
ss
pop
ja
fsts
mov
jo
repnz
add
jecxz
pop
or
or
sub
pop
mov
ja
divb
cmp
andl
mov
mov
jp
xor
cmp
push
mov
xchg
and
push
pop
pop
mov
jl
xchg
push
adc
jnp
jge
dec
aas
ret
outsl
rcll
mov
or
scas
ret
repnz
les
jne
in
xchg
repz
add
xchg
sbb
cmp
hlt
mov
inc
mov
adcl
xchg
orl
ret
insb
out
add
outsb
sub
shrl
xor
pop
push
cmpsl
pop
mov
or
out
inc
inc
push
cmp
cmpsb
and
xor
arpl
pop
adc
or
dec
bound
ds
fs
inc
fidivs
push
pop
sbbl
in
das
jns
ss
push
mov
out
xor
sub
scas
add
jo
dec
dec
jns
out
subb
movsb
aad
fdivrl
adc
out
or
xor
mov
add
and
dec
xchg
pushf
ljmp
inc
jae
jp
insl
mov
push
out
in
mov
aam
pop
cltd
or
xor
xchg
js
jp
in
lahf
lock
out
mov
pop
cmp
pop
clc
mov
cmp
loope
adcl
inc
test
mov
outsl
cmp
dec
dec
dec
sbbb
mov
mov
scas
adc
mov
popf
pop
and
popa
cld
fdivrs
rorl
mov
aam
mov
sarb
fcoms
fiaddl
add
jb
out
out
je
pop
mov
shrl
jae
dec
inc
lcall
inc
lret
sub
pushf
jg
enter
daa
loop
or
cmp
inc
nop
imul
insl
sbb
xchg
test
push
xor
mov
dec
mov
movsl
mov
out
in
add
inc
and
in
push
pop
dec
nop
push
shl
mov
out
xchg
subl
xchg
lret
aas
xor
jns
pusha
das
cmp
clc
xchg
xchg
add
fwait
cmpsl
cli
cmp
pop
es
jecxz
popf
out
test
jp
pusha
mov
xchg
pop
test
sub
jno
sarl
insb
xchg
fsubr
lahf
mov
push
jge
popf
mov
ret
or
subb
cmp
xchg
xchg
cmpb
ljmp
out
fidivl
sbb
iret
and
push
lods
cmpl
xor
pushf
xor
scas
push
in
and
xchg
xor
fs
loopne
cmc
jnp
push
testl
and
add
xorb
pop
push
es
and
push
or
enter
pop
adc
ds
inc
pop
adc
std
andb
out
out
mov
je
inc
dec
jge
icebp
in
pusha
lock
aam
out
out
shlb
xchg
dec
or
push
out
stos
rcl
xchg
aaa
outsb
sub
xor
aaa
dec
sub
inc
pop
ret
jg
subb
lret
add
sub
dec
pop
cwtl
repnz
push
or
xchg
mov
sbb
push
or
mov
mov
cld
test
popa
mov
fistps
or
scas
orl
push
and
or
mov
push
call
add
xor
aad
mov
pop
ljmp
mov
xchg
xor
loope
pop
mov
mov
mov
dec
jecxz
in
jb
inc
push
ja
fldl
xchg
ret
inc
or
or
xchg
test
ds
inc
jp
add
in
pop
repz
jp
pop
fnstcw
and
inc
adc
jbe
push
test
and
mov
into
mov
inc
pop
pop
inc
pop
mov
jbe
outsl
xor
and
pop
pop
aaa
pop
sub
fdivrl
out
jg
fisubrs
sub
lock
lods
adc
push
enter
insb
push
test
mov
xchg
sti
loopne
out
cltd
idivb
inc
notb
js
ds
fstpt
xor
call
aas
pushf
jo
xchg
sub
and
loop
sub
sahf
ja
dec
dec
fdivs
addr16
adc
ss
and
cmp
call
xchg
fucomp
add
les
pop
je
es
mov
adc
xor
dec
dec
pop
pop
mov
inc
negl
je,pt
mov
mov
add
inc
cmp
inc
lods
hlt
cmp
mov
fisttpll
icebp
add
out
pop
jp
ffreep
pop
inc
cmc
add
repz
cmp
or
dec
pop
xor
and
dec
cmp
or
into
and
subl
repnz
mov
imul
pop
push
dec
jno
adcb
sbb
xchg
mov
jp
stos
push
fnstenv
lret
stc
stos
jno
mov
fiaddl
add
ss
dec
inc
aam
xor
cltd
frstor
std
cmpsb
das
mov
mov
lods
cmp
popf
xor
arpl
adc
xchg
mov
ljmp
lods
mov
leave
sub
cmp
pop
repnz
pop
fyl2x
and
adc
movsb
mov
stos
push
mov
cmc
fucomp
aad
test
in
push
cwtl
xchg
pop
and
push
xor
nop
add
jl
cmpsb
mov
push
scas
ret
push
enter
mov
xor
mov
xor
sub
mov
inc
cmpb
xor
xor
aaa
cmovo
aas
push
stos
xchg
mov
clc
shrb
scas
adcb
and
jnp
scas
aas
out
testb
pop
jne
fsubs
insb
mov
lods
jno
stos
mov
lock
leave
push
sarb
mov
fistl
mov
stos
push
inc
fimuls
push
cld
in
cmp
jno
mov
out
mov
sub
ret
loope
pop
push
mov
adc
cwtl
mov
nop
sbb
inc
push
dec
sarl
shlb
pop
sahf
or
jo
add
sbb
xchg
sbb
sahf
jne
sub
push
cld
sub
inc
gs
jb
mov
cmp
fidivrl
and
dec
shll
rcl
dec
cmp
data16
mov
fists
xor
or
inc
or
rclb
das
mov
dec
add
enter
mov
pop
je
aad
sbb
adc
outsl
push
dec
hlt
push
dec
adc
fldl
jne
dec
int3
adc
in
out
sub
icebp
cmp
push
or
cmpsb
mov
jns
pop
loopne
sarl
stos
loop
xchg
add
xor
add
xlat
adc
loop
mov
add
cwtl
dec
idivl
jge
and
inc
pop
loopne
sub
sti
add
ljmp
or
mov
ljmp
xchg
xor
andb
and
inc
push
and
mov
popa
pop
in
mov
lahf
in
fs
cwtl
mov
dec
lret
shlb
cmp
repz
fildl
rcll
in
int
lock
sbb
enter
xchg
sub
dec
or
lock
mov
pop
and
pop
or
adc
cmp
daa
jg
jmp
push
push
fsubrs
into
push
popf
mov
push
xchg
imul
imul
test
sbb
xchg
rcrl
aaa
jl
test
stos
cli
pop
sub
dec
inc
dec
mov
inc
stos
sbb
test
stos
push
lret
push
ret
push
cmp
sub
xor
cmp
jno
pop
cmp
xchg
pop
mov
xlat
cs
mov
add
xchg
jne
push
shl
js
je
cmp
pop
dec
mov
imul
rcrb
cmp
lahf
arpl
test
scas
adc
mov
mov
push
mov
rcrl
adc
adc
mov
mov
add
xor
jmp
ss
sub
ficoms
cmp
cmc
cmp
pop
hlt
push
fstl
mov
push
jp
mov
sarb
addr16
js
dec
or
mov
sbb
cli
cltd
cmp
out
scas
in
loope
pop
insb
mov
push
jg
mov
adc
pop
mov
scas
mov
pop
mov
mov
xor
orl
pop
test
and
mov
insl
movsb
fldl
mov
movsl
push
int3
xchg
daa
inc
sub
scas
dec
repnz
sti
xor
enter
jmp
push
stos
ret
push
lds
test
aaa
sets
sub
mov
cmpsl
dec
add
dec
pushf
mov
mov
mov
es
sub
fildll
mov
jno
sbb
orl
lret
addr16
mov
mov
adc
mov
clc
jle
sbb
xchg
mov
xlat
pop
out
ljmp
aaa
and
push
sbb
mov
pop
xchg
sub
push
mov
or
ret
jnp
sub
sub
mov
fwait
hlt
cli
ss
lret
lds
sbb
mulb
sbb
mov
xchg
and
xchg
sub
bound
push
fxch
data16
aas
pop
idivb
sbb
and
dec
ret
rcrl
rolb
lret
pop
movsb
in
int
xchg
aam
adc
movsl
adc
and
mov
and
fistl
cmp
sbb
inc
sbb
cld
cmp
adc
xor
je
inc
sbb
xor
push
ja
test
stc
push
or
push
stos
dec
pop
inc
hlt
push
cmp
pop
mov
stos
cmp
ficoml
or
mov
sub
hlt
mov
jecxz
add
ret
jmp
xchg
sbbl
mov
jns
lods
add
imul
movsb
xchg
xor
adc
pusha
fwait
mov
lahf
decb
cmc
fld
aam
fsubs
add
pop
in
ficoms
mov
sub
sub
lcall
hlt
ret
mov
fimull
add
mov
dec
out
lcall
loopne
insl
cld
or
jg
push
insl
push
mov
jp
mov
jg
mov
and
outsl
insl
mov
out
call
ljmp
lahf
nop
cmp
xor
and
sbb
adc
ret
add
cmpsl
xor
outsl
push
sub
das
ret
cmp
push
repnz
dec
loope
push
xlat
mov
mov
inc
les
adc
loope
arpl
adc
test
xchg
imul
sbb
dec
add
imul
repnz
or
in
sbb
iret
mov
mov
flds
pop
and
aaa
sub
aad
mov
fidivrs
inc
lods
inc
mov
xchg
or
scas
addr16
shlb
and
inc
sbb
pop
or
inc
repz
aaa
insb
cmc
xchg
arpl
jl
mov
push
je
popa
pusha
insb
dec
push
push
or
out
mov
scas
push
imul
pop
or
lods
and
jnp
mulb
jae
sbb
push
leave
shrb
pop
fsubr
lret
je
lock
inc
testl
dec
pop
jle
push
bound
out
loop
lret
aas
mov
add
xchg
rolb
or
rolb
xchg
leave
imul
fnstcw
shrb
jmp
mov
and
jnp
mov
xor
push
mov
out
mov
shrl
or
bound
push
fsincos
mov
mov
sbb
testl
or
dec
fldt
push
or
sbb
std
pop
ljmp
aad
mov
cmp
adc
inc
fnstcw
or
and
subl
pop
dec
fcom
adc
sub
adc
aas
loopne
insl
in
ss
push
jmp
mov
jns
fistps
fwait
jle
jmp
icebp
sbb
sti
pop
and
and
pop
cmp
pop
push
dec
sub
lret
xchg
jg
xor
xor
ret
mov
aas
inc
sarb
mov
mov
out
stos
mov
jno
adc
cmp
inc
test
mov
xchg
loope
pusha
out
repnz
adcl
call
mov
insb
add
mov
or
cmp
dec
ljmp
adcb
and
stos
xchg
sbb
mov
dec
arpl
imul
cmp
clc
cmp
insl
adc
pop
das
push
jg
push
in
cmp
xchg
outsb
mov
inc
outsl
subb
and
aaa
lods
sbb
lcall
mov
or
jge
int3
mov
and
xlat
pop
add
and
hlt
or
jle
lods
push
inc
sub
shlb
sub
adc
jns
aam
adc
jns
sahf
pop
pop
add
sub
enter
xchg
and
mov
lods
ds
adc
or
enter
jecxz
push
cmp
mov
fmul
jg
or
xchg
push
pop
sahf
jns
pop
and
and
test
stos
loop
mov
dec
xorb
adc
mov
jecxz
mov
cmc
mov
mov
or
cmpsb
add
out
fwait
or
popf
stc
jge
xchg
jbe
cli
xchg
fstps
sbb
cmpsl
cmp
mov
inc
and
decl
inc
push
fimuls
mov
cmpsb
push
mov
aam
inc
iret
out
lock
jae
jl
mov
push
fiadds
mov
cmp
dec
sbb
sub
dec
add
es
mov
in
es
test
cmp
lock
mov
xchg
ja
mov
lds
xor
ja
pop
mov
xorb
adc
mov
cld
adc
pop
insl
push
sbb
add
je
iret
gs
cmp
push
ss
mov
out
loope
sub
mov
loope
lock
mov
shlb
lea
adcb
xor
into
enter
push
mov
xchg
or
cmc
lea
sub
mov
ss
pop
nop
dec
jg
jg
add
or
push
bound
inc
sub
pop
dec
mov
dec
jl
test
test
es
xchg
out
cmp
add
popf
and
iret
dec
xchg
pop
push
xor
in
xor
add
xchg
mov
rorb
jge
subb
xchg
cld
cmp
adc
cmc
mov
lods
pop
in
leave
jecxz
mov
pushf
xchg
popa
mov
dec
loope
add
jne
sbb
dec
lret
mov
outsl
push
pop
add
out
cmpsl
jle
pop
outsl
xor
dec
int3
dec
fnsave
aas
sub
repz
mov
adc
into
mov
jbe
and
out
push
mov
js
icebp
popf
xor
jmp
ds
iret
mov
xor
mov
popf
push
adc
mov
test
cmp
push
fbld
sti
inc
mov
mov
push
pop
sahf
mov
xchg
stc
dec
mov
adc
jae
pop
cmpsb
mov
btr
jae
nop
movsl
add
push
out
dec
lret
and
jmp
ret
cli
xchg
cmpsl
inc
repnz
sti
xchg
add
push
jle
mov
and
rcrb
cld
fs
and
into
nop
cmpsb
test
clc
outsb
loope
notb
cmp
fnsave
mov
push
sub
fnstcw
xchg
fisubrs
mov
xor
push
hlt
stos
push
mov
mov
leave
jecxz
insb
dec
dec
lds
icebp
pop
adc
mov
pushf
lahf
mov
aas
mov
stos
xchg
fstps
inc
inc
stos
inc
mov
sbbl
mov
mov
xor
insl
shll
stos
adc
sub
inc
mov
mov
xchg
mov
or
hlt
xchg
mov
push
test
sub
xchg
xchg
les
xor
test
mov
xorl
dec
popf
inc
lcall
imul
pop
lds
sub
aas
add
rcrl
frstor
test
or
stos
repz
sub
push
mov
sbb
stc
dec
cmp
push
add
and
add
ret
mov
pop
hlt
cmp
jp
mov
sarb
pusha
lods
outsl
lret
out
imul
xchg
push
pusha
xchg
adcb
mov
add
xor
adc
je
pop
loope
test
pushf
aas
and
push
loop
mov
push
lea
mov
insl
cli
mov
in
scas
sbbb
cs
mov
and
inc
ljmp
push
test
or
out
xor
sub
mov
stos
inc
cmc
js
loopne
fstpt
rcl
push
jne
jle
mov
add
into
bound
dec
adc
mov
cltd
inc
add
xor
lahf
mov
mov
mov
out
inc
mov
cmp
pusha
lock
cs
cltd
pop
add
nop
dec
jmp
inc
test
inc
inc
fs
xor
orl
in
xor
pop
repz
jp
jmp
add
or
test
add
daa
test
loop
push
outsb
sub
inc
xor
test
pop
out
xchg
mov
xor
iret
iret
xchg
jbe
jmp
outsl
out
out
add
divb
lods
punpcklbw
rol
popa
jbe
sbb
popf
jns
jo
out
xchg
sub
fmul
mov
inc
cmp
inc
pop
mov
jnp
mov
js
aad
cwtl
and
outsl
cmp
xchg
outsl
xchg
insb
vmaxps
je
pop
push
pop
xacquire
sub
xlat
ss
pop
jg
mov
mov
xchg
jmp
mov
jmp
push
mov
jge
fisttpll
pusha
mov
mov
mov
xchg
xor
ss
mov
or
xor
mov
mov
lea
into
das
mov
imul
movsb
sub
sub
rcrb
mov
lods
push
int3
push
ffree
mov
dec
inc
filds
in
stos
insb
dec
jo
xchg
addr16
sar
xor
jg
sbb
pop
sahf
pop
andl
mov
repz
nop
pop
in
sub
repnz
lea
aad
ds
mov
xchg
idivb
mov
call
mov
fcomip
out
mov
mov
add
shll
fbstp
xchg
sbb
pop
std
sbb
cmp
inc
jmp
out
test
inc
add
lcall
iret
push
insl
pop
and
mov
cmpsb
imul
xor
sti
loop
sub
enter
popa
xor
and
xchg
push
call
lcall
inc
scas
jbe
jae
and
stc
pusha
adc
shrl
mov
icebp
insb
rol
mov
dec
rcrl
ror
aaa
lcall
clc
or
frstor
push
icebp
popa
call
andb
sbb
dec
lret
negb
test
mov
sti
out
je
jecxz
push
inc
int
idivb
xlat
inc
jo
movsl
adc
int
mov
cmp
push
lds
insb
iret
cmp
pop
cmp
jo
sub
push
repnz
mov
xor
inc
push
jmp
cmp
mov
out
xor
xchg
sub
cmp
add
mov
lcall
push
jb
jg
js
in
clc
sub
aam
fsubp
jg
dec
incl
pop
loop
loopne
push
and
jae
mov
and
mov
push
les
out
cmp
fmull
loop
dec
leave
jne
pop
iret
jmp
fnstenv
fwait
xor
mull
sbb
push
shrb
adc
mov
mov
and
inc
add
arpl
into
and
cmp
add
movsb
bnd
in
incb
jl
sarb
mov
sahf
dec
in
movsb
addr16
xchg
add
test
hlt
jnp
xor
inc
sub
mov
loopne
sbb
sbb
lret
push
shl
cmp
sbb
fidivrs
xlat
scas
mov
cmpl
or
lahf
je
jae
jg
jb
jl
pop
xchg
xlat
xchg
sbb
stc
mov
jg
enter
pop
ljmp
pop
inc
scas
mov
scas
rclb
xchg
dec
mov
push
mov
mov
mov
cmp
ljmp
cmp
bound
adc
dec
push
pop
cld
pop
fstps
ret
pop
push
xchg
rol
adc
fisubrs
into
sub
and
cmp
mov
repnz
and
je
and
and
stos
test
test
stos
stos
jl
mov
ret
mov
aas
cld
ret
out
sti
int
xor
fsub
xchg
mov
cwtl
xchg
mov
dec
jecxz
mov
test
cltd
out
inc
xchg
jmp
dec
xor
jg
out
rcl
xor
push
sbb
inc
arpl
jge
or
fsubrs
ret
cmp
pop
data16
nop
rorl
sbb
xchg
mov
jns
cmp
pop
mov
es
cmpsb
mov
push
sbb
xor
or
inc
xchg
add
stos
cld
gs
pop
outsb
rclb
mov
cmp
xchg
push
mov
bnd
dec
push
pop
stc
add
rol
lds
jmp
jno
pop
andl
fimull
cmp
bound
xlat
fs
or
out
fsubr
add
or
je
mov
inc
ret
jnp
inc
inc
aad
inc
push
jmp
rcrb
xchg
mov
sub
lcall
adc
jle
pushf
lods
stc
lahf
lods
inc
iret
repnz
gs
xor
lret
jbe
xchg
mov
mov
outsl
add
das
mov
repz
gs
mov
sbb
leave
enter
add
insl
nop
out
sahf
inc
fnsave
outsl
enter
push
adc
test
call
cmp
mov
mov
lret
aas
or
adc
jo
push
andb
fidivrs
mov
sbb
cmpsl
jge
mov
or
push
push
mov
or
pop
xor
nop
xchg
stc
imul
mov
je
pop
xor
push
in
call
lcall
dec
sbb
in
or
sbb
push
push
jae
in
or
pop
inc
cmp
inc
sub
inc
jo
mov
cs
sti
div
ret
sarb
inc
or
xor
mov
jg
mov
push
sub
fs
test
jbe
bound
add
push
lods
shrb
into
repnz
enter
outsb
fsubl
mov
sbb
adc
andb
mov
pop
mov
sbb
loop
xlat
xchg
add
outsb
iret
push
dec
jb
xchg
mov
std
jo
mov
xchg
test
lcall
push
andl
or
icebp
rorb
mov
je
mulb
adc
ret
or
jge
int
mov
and
leave
add
cli
repnz
dec
pop
repz
stc
enter
jo
xchg
sub
repz
mov
sbb
popa
aaa
stos
inc
sub
leave
iret
inc
mov
ljmp
out
push
xor
inc
out
jo
gs
cmpsb
inc
stos
fistpl
pop
stos
in
pop
shll
inc
stc
lcall
xchg
shlb
push
test
adc
mov
addr16
loop
inc
aas
jno
repnz
pop
je
imul
mov
push
leave
int
ret
test
lret
out
test
xor
test
enter
clc
insl
sbb
dec
xlat
outsb
jle
dec
xlat
or
sub
pop
adc
ljmp
sbb
push
add
aad
inc
pop
sti
cmp
jp
mov
push
rcl
adc
or
fdivrl
test
adc
jmp
loopne
pop
cli
push
mov
jmp
mov
xlat
ret
std
inc
adc
clc
push
insl
or
sub
sti
xor
adc
and
sub
sbb
data16
rcrb
sahf
scas
jb
cmp
adc
movsb
movsb
sahf
sub
jae
lret
mov
and
xchg
xchg
mov
jecxz
int
ret
andb
pop
imul
or
daa
lcall
or
xorl
fwait
call
push
movsl
ljmp
and
cld
incb
sbb
arpl
iret
cmp
push
sti
mov
cmp
inc
xorb
push
fimull
ret
js
cmp
ljmp
cwtl
xor
push
in
add
popf
repz
int3
rorb
icebp
mov
out
sarb
fldcw
xchg
sub
aaa
daa
mov
or
fidivl
repnz
out
mov
pusha
pop
mov
inc
fldcw
in
fisttpll
outsl
add
or
cs
pop
dec
lret
pop
inc
cmpsl
jecxz,pt
xchg
cmc
dec
fisttps
push
pop
xor
cmc
fs
cmp
pop
fcompl
sub
and
fsubl
fnstenv
gs
xor
out
movsl
call
cs
orl
out
fmul
cmp
aas
push
lods
jp
clc
jne
sub
sbb
daa
jnp
add
jp
stos
mov
int
clc
xchg
nop
push
dec
add
add
jo
ret
lods
fistpl
scas
mov
jge
subb
stos
test
out
inc
adc
and
jne
das
addw
inc
inc
dec
inc
dec
test
mov
jle
imull
cwtl
test
popf
inc
or
imul
ret
pop
push
mov
push
insb
jnp
les
inc
inc
pop
in
pop
and
lods
in
nop
stc
fwait
mov
icebp
scas
testb
into
sbb
repnz
cmp
lock
dec
repz
loope
push
mov
fcoml
jl
pop
scas
add
and
out
mov
divb
mov
and
jp
sub
rcr
pop
ja
add
scas
int
and
lret
xlat
add
mov
sub
xor
popa
cmp
je
movsb
jp,pn
xchg
jp
pop
mov
jle
xor
loope
and
jle
test
sbb
lock
stos
cli
gs
rcll
adcb
push
movsb
jne
mov
cmp
call
fldenv
xchg
int
inc
popf
jo
fsubs
mov
aam
xlat
cmp
xchg
lret
mov
jmp
xor
shll
or
and
and
jl
iret
jns
add
add
stc
or
scas
mov
jne
mov
dec
in
jne
mov
rol
mov
jno
add
jne
sub
rcl
adc
imul
nop
out
ds
dec
jmp
pop
outsb
sub
xlat
adc
stos
aas
mov
lea
lahf
push
fdivrl
add
cmp
dec
pop
adc
push
jno
aad
adc
mov
cmp
call
cmp
jg
loopne
push
dec
dec
add
pop
dec
xor
stos
jmp
lock
fs
or
hlt
adc
push
fwait
insb
xcrypt-ecb
cmpsl
int
inc
and
push
mov
dec
mov
jp
mov
jno
pop
scas
imul
testb
iret
xor
js
mov
in
sbb
xor
fcmove
and
or
push
out
mov
jmp
or
xor
jae
xorb
pop
loope
icebp
insb
pushf
mov
add
cmp
pushf
in
fdivrs
jl
mov
repz
rcrb
pusha
and
ds
out
stos
xor
stos
or
icebp
int
adc
push
and
mov
cli
mov
int
xor
or
jo
mov
jns
sub
xchg
sbb
mov
push
imul
sbb
cli
fsubl
sub
xor
adcl
nop
or
jno
push
and
xchg
inc
aam
js
test
jl
xchg
push
ja
xor
sbbb
and
jb
and
add
lds
iret
mov
mov
imul
jle
sub
nop
xor
clc
mov
or
mov
jg
mulb
mov
faddl
popa
filds
shll
push
inc
add
js
aas
dec
incl
sti
or
or
sbb
fisubrs
out
and
pop
cmpsb
and
xor
push
orps
orl
dec
vpavgw
in
cmp
pop
out
test
test
mov
in
jns
pop
call
aam
sbb
fdivl
mov
pop
fmull
xchg
sub
sub
adc
scas
repz
push
cmpsb
inc
xor
in
sahf
lahf
jle
in
fildl
filds
pop
dec
pop
and
test
pop
pop
jne
inc
pop
ret
xchg
loop
sub
xor
movsb
into
mov
sbb
out
and
pop
ret
inc
cmpsb
xor
push
in
stos
mov
es
adc
or
iret
divb
ja
push
leave
xchg
lcall
shrb
lds
subb
inc
fiaddl
or
rorl
cmp
in
xorl
mov
stc
cltd
mov
xor
jae
ficoms
mov
cmp
bound
sar
push
je
sarl
iret
xor
scas
add
dec
pop
fdivl
jo
mov
push
cld
lcall
xor
pop
std
nop
push
or
faddp
inc
inc
std
xor
in
pop
out
sbb
mov
sbb
add
pop
jo
xchg
dec
and
jg
fsubrs
int3
test
fisttpll
sarl
shrl
insb
and
fsubrl
pop
mov
out
and
mov
dec
mov
iret
cmpsb
jno
jbe
movhps
in
xor
add
fcmove
lock
push
ljmp
cmc
mov
sarl
xchg
push
adcl
hlt
inc
inc
cld
dec
sahf
xchg
lock
enter
pop
xchg
sbb
aad
lea
movsl
jmp
sbb
sahf
fs
push
and
clc
lahf
rolb
shl
test
lods
das
cltd
xor
stos
js
jae
mov
mov
and
cmp
xor
adc
adc
ss
popa
adc
lcall
pusha
std
lahf
mov
addr16
pop
push
push
out
jg
lcall
or
cmp
lock
ss
movsl
inc
dec
and
stos
and
test
cvtpi2ps
mov
add
lret
push
in
and
jle
or
mov
adc
cld
sub
jb
repz
nop
stos
out
push
jl
out
sbb
xor
int3
pop
insb
push
inc
jmp
lret
outsb
xchg
and
lahf
test
fsubp
pop
out
ljmp
loopne
js
inc
sbb
mov
inc
rorl
shrl
dec
pop
jmp
xor
xchg
es
arpl
aaa
mov
mov
loopne
jb
adc
into
enter
lahf
fnstsw
sub
fwait
sbb
push
inc
cmp
jne
pop
mov
iret
data16
sbb
inc
fsubs
fadds
mov
ljmp
xchg
mov
and
add
fstl
int
fdivl
pop
pop
sti
jbe
sub
push
jecxz
mov
aad
sub
cmp
mov
xchg
cmp
into
jecxz
dec
filds
cmc
adc
sub
aad
and
inc
xor
lods
sub
out
lret
jae
inc
data16
insl
jp
test
and
cmc
jle
add
aam
into
sbb
or
jg
inc
mov
cmp
sbb
jae
jae
xchg
add
enter
cmp
xor
ja
shrb
cwtl
cmp
dec
out
fwait
xor
add
in
ds
ret
pop
das
hlt
or
pop
push
and
jecxz
fstpl
mov
lods
cltd
xor
stc
inc
call
pop
inc
outsl
ret
stos
es
das
dec
dec
dec
xor
js
call
fdivrs
inc
xchg
mov
mov
loopne
or
cld
xchg
dec
bound
sbb
int
inc
push
mov
cmp
sub
dec
cmp
pop
call
and
pop
aaa
push
js
lock
push
scas
add
shrb
xlat
cmp
sbb
sarb
pop
push
cmp
xchg
test
inc
xchg
inc
jnp
int3
mov
jp
leave
outsl
push
sti
outsb
dec
jecxz
push
jbe
call
imul
inc
xlat
daa
pop
rcll
inc
or
pusha
pop
xchg
aas
cld
nop
jl
popa
clc
popl
jg
xor
sbb
dec
test
pop
inc
les
pop
fsubl
incb
loop
pop
out
addb
ss
or
sti
les
xchg
mov
fimuls
pushf
mov
adc
jbe
cmpsb
cmp
cmp
imul
sbb
orl
mov
lods
jle
je
int
lds
subb
cs
push
lods
mov
fimuls
xchg
add
mov
mov
cwtl
push
sbb
mov
in
lods
lret
lret
mov
imul
xchg
mov
dec
pop
push
pop
jnp
add
pushf
in
lea
out
cmpsl
pusha
add
mov
pop
sub
int
jl
dec
or
push
inc
push
xchg
adc
enter
sub
add
sub
pusha
jo
mov
dec
hlt
sub
daa
loop
scas
pop
cltd
jno
mov
sahf
mov
or
nop
call
std
pop
pop
lcall
mov
push
repnz
inc
inc
xor
test
mov
push
cwtl
ret
pop
out
push
jp
adc
push
xchg
mov
int
ss
sub
and
out
jae
mov
xchg
sbb
jns
lock
fs
lcall
pop
arpl
mov
inc
arpl
in
xlat
cmp
out
test
inc
loope
push
shll
pusha
test
scas
sub
push
pcmpgtd
jno
or
notb
fnstsw
mov
cld
xchg
repz
fstpl
in
mov
mov
xchg
rcl
jne
add
lret
pushf
adc
fidivrl
adc
nop
sbb
mov
aas
xchg
xchg
sub
jl
jae
dec
imul
pop
pop
out
lret
xchg
inc
lock
xchg
pop
push
mov
lods
in
lds
add
popf
xor
cmp
jae
outsl
or
std
fsub
pushf
xchg
clc
add
call
rcrb
notl
push
cli
jo
decb
call
mov
sbbb
das
loopne
popa
cmpsl
xchg
stos
fmuls
iret
xor
pop
inc
lods
mov
cltd
ret
out
cmpsl
jecxz
mov
push
inc
push
repz
dec
fbld
js
add
jnp
push
xchg
arpl
sbb
rcr
icebp
cmp
aam
mov
in
dec
ja
push
adc
jne
and
push
inc
jne
inc
aaa
test
stc
mov
mov
mov
cwtl
mov
nop
add
loope
pop
sbb
xor
sbbb
mov
push
jp
sub
xchg
adc
mov
cmpsl
incl
or
or
pop
pop
pop
cmp
mov
test
ss
fucom
sub
cli
jne
xor
lahf
cmpsl
repz
jo
jg
dec
test
adc
jnp
repnz
insl
pop
pop
cmp
movb
fistps
xchg
push
cmpsb
push
aas
pop
dec
jno
jmp
mov
adc
movsl
mov
pop
xchg
jle
pop
popf
lods
out
lods
pop
jmp
sub
mov
cmc
stc
xor
push
iret
icebp
insb
mov
pop
add
shlb
arpl
sti
mov
insb
and
pop
dec
loop
ja
aas
add
lds
testl
push
mov
insb
fidivrs
or
mov
cmp
jecxz
imul
push
imulb
addr16
sub
add
call
jbe
dec
pop
inc
std
jl
cld
es
add
enter
jno
div
imul
mov
inc
dec
push
lret
js
and
pop
out
fwait
xchg
dec
mov
popa
vpermilps
stos
push
push
mov
mulb
dec
aad
sbbl
sub
mov
inc
mov
sbb
addr16
rorl
jns
cmp
xor
es
cwtl
test
mov
fisubrl
loop
sub
xchg
adc
mov
and
sub
jbe
xor
xor
in
sbb
or
jmp
test
ljmp
dec
es
lret
cmp
mov
pop
test
sbb
push
mov
test
and
pop
dec
out
call
pop
push
xlat
mov
movsl
or
scas
xor
loop
push
mov
shll
xor
xchg
push
fcomps
xorl
adc
in
pop
inc
rcr
js
fs
aas
xlat
insb
mov
ret
add
addr16
or
lahf
stos
sbb
push
xor
lds
inc
sbb
imul
pusha
repnz
push
mov
and
rol
mov
test
adc
xchg
movsl
inc
test
xchg
cs
dec
enter
inc
or
adc
das
fwait
xor
jns
pop
ret
mov
rorb
mov
lret
push
push
rcl
outsb
loope
jp
push
push
jns
and
adc
hlt
int3
mov
jle
xchg
inc
push
leave
pusha
test
out
xor
aaa
push
gs
jg
arpl
ret
mov
push
push
or
js
fdivrl
pop
fidivs
test
lods
aas
movsb
int
pop
push
dec
popf
cmp
sbb
flds
sbb
ljmp
arpl
sti
ds
add
pop
outsl
roll
inc
mov
std
ss
xchg
lret
adc
gs
inc
xacquire
mov
test
inc
in
test
jne
stos
lcall
cmc
cmpsb
sbb
popa
into
ficoml
adc
test
out
adc
xchg
addr16
xor
enter
sbb
ljmp
mov
pushf
sub
xchg
push
fxch
lcall
xchg
insb
aam
or
mov
pop
sbb
loop,pt
lods
or
sub
mov
mov
add
icebp
add
cmpsb
and
fs
hlt
outsl
adc
fsubr
aam
je
mov
je
sub
add
ljmp
push
cmp
outsl
dec
dec
and
dec
xchg
popa
je
lea
sbb
mov
data16
push
insb
sbb
int
jne
xor
add
jbe
push
push
sbbb
jb
addr16
in
loopne
push
rcrb
or
test
xor
adc
incl
cld
orl
test
sbb
pusha
jb
cmp
lea
repnz
ss
data16
popa
dec
cmp
jmp
cld
cmp
cmp
push
ret
xor
adc
std
mov
mov
sbb
ds
xchg
rcrb
gs
sbb
xchg
cmp
adc
cmp
mov
mov
in
mov
push
decb
cmpsb
cmp
inc
and
ret
jbe
cmpsl
jne
jecxz
dec
pop
adc
sar
push
mov
imul
jnp
in
mov
imul
lahf
inc
mov
cmp
sbb
mov
cmpsb
imul
and
mov
icebp
xor
mov
xchg
scas
loop
sbb
add
push
mov
cmpsb
movsl
icebp
mov
dec
cli
out
incl
push
mov
outsb
sbb
xchg
scas
clc
cmp
in
shrb
mov
lds
push
mov
mov
rdmsr
jno
fisubs
jbe
mov
cmpl
lcall
outsl
adc
cmp
cmp
loop
xchg
mov
pop
mov
dec
mov
lock
aam
int
push
or
pop
push
fsubrs
jae
mov
mov
xrelease
fdivrp
xchg
loopne
cmc
sbb
pop
ret
out
add
push
jmp
push
push
enter
dec
shrb
shll
fxch
xor
pop
pop
jecxz
notl
movsb
cs
inc
dec
lods
shl
fs
jecxz
xor
xor
adcl
and
xchg
sub
push
lahf
pop
sub
sbb
inc
xor
dec
mov
mov
xchg
in
test
sub
into
pop
jle,pn
mov
sub
jae
cmp
cmc
mov
lds
adcl
ljmp
and
daa
stos
arpl
push
xor
andb
jae
push
or
pop
and
aad
jo
add
aad
dec
add
push
cwtl
aad
addb
test
psubsw
mov
and
in
cwtl
jmp
fldl
fisubrl
cmp
imul
in
dec
fadd
aaa
add
xchg
ja
jecxz
xor
out
cmpl
push
dec
sahf
or
pusha
sub
rcll
mov
mov
mov
add
cld
in
sub
stos
aas
fistpll
repnz
cmp
inc
test
insl
xchg
lret
in
inc
push
mov
lock
sub
test
push
xlat
and
cltd
pusha
mov
sbb
dec
flds
out
daa
and
push
sub
test
and
mov
xchg
pop
xchg
inc
arpl
lret
lods
pop
out
fs
xor
das
push
gs
loopne
adc
xor
add
arpl
loop
dec
dec
pop
repnz
cmp
sbbl
out
and
mov
call
jecxz
das
inc
xchg
cmp
fldl2e
push
cmp
rorl
mov
shl
dec
xchg
sti
xchg
sbb
imul
xchg
cmpl
imul
movsl
mov
jecxz
ficomps
xor
inc
data16
sub
pop
xchg
movsl
xor
shrl
dec
mov
or
cmc
fadd
outsb
insl
leave
cmp
push
sbb
cmp
push
inc
into
and
xchg
push
lock
sbb
push
dec
fiadds
inc
ficoms
gs
lcall
rcr
xor
rol
pop
leave
mov
pop
je
sub
pop
repz
xor
insl
adc
jp
inc
fucomi
jo
and
or
jns
and
or
call
jne
jbe
fisttpl
xor
mov
repnz
adc
and
mov
scas
cmc
push
sarl
sbb
pop
popf
dec
fistps
xchg
mov
xor
notb
and
movl
jno
dec
pop
or
frstor
and
aam
xchg
mov
cltd
inc
xor
cmp
jns
loop
aas
adc
inc
mov
hlt
movsl
xchg
daa
mov
je
jne
fwait
xchg
test
test
sbb
adc
pop
rol
or
pop
cmp
stos
fucomp
push
jp
push
stos
clc
push
push
out
inc
ficoms
popf
jo
push
fstpt
rolb
bound
cmp
sbb
fildl
jne
mov
notl
and
xor
loopne
push
rclb
jecxz
sti
loopne
es
and
cwtl
cwtl
pop
mov
jp
lds
pop
sbb
jbe
mov
ja
in
dec
dec
or
mov
or
mov
cld
out
dec
dec
fidivrl
loope
lock
push
sahf
daa
jo
repz
aad
cli
push
lahf
out
decb
dec
stc
mov
sub
cmp
push
and
loopne
and
fsub
dec
mov
or
mov
popf
pop
adc
mov
call
lahf
push
mov
push
xor
lea
shrl
pop
lret
xchg
add
lret
or
arpl
loop
nop
adc
ljmp
jbe
repz
mov
lret
cmpb
pushf
in
leave
sbb
jae
aas
inc
inc
jl
push
mov
lods
ljmp
es
imul
repnz
push
aad
je
fs
mov
sbbl
or
cmp
xor
push
sahf
adc
es
ljmp
popa
inc
jecxz
pop
lds
lcall
xchg
dec
repz
adcl
stos
mov
or
shll
jb
fidivrl
fsubrl
jb
mov
and
and
sti
int
mov
jne
mov
xor
in
mov
push
je
test
xor
lods
gs
cld
data16
rcl
cmp
hlt
jns
dec
ds
incl
lods
rclb
adc
scas
jecxz
subl
fists
xor
cmp
fnsave
mov
sbb
xor
xor
push
inc
es
and
mov
jg
mov
je
fcmovne
inc
mov
pop
or
lea
dec
sub
stos
std
xchg
cld
lcall
jbe
dec
mov
jno
pop
fs
cmp
jae
inc
out
fisttpll
cmc
fiaddl
adc
ss
loop
loop
mov
test
mov
mov
xor
movsb
mov
data16
mov
push
xchg
aad
rol
addl
cmp
xchg
dec
push
xor
jbe
pop
fcomp
xchg
dec
mov
mov
and
bnd
lcall
mov
jg
hlt
mov
mov
sub
dec
pop
inc
jge
mov
out
ja
pushf
ret
mov
rcll
fidivs
sar
imul
push
fisubs
sbb
and
mov
lret
adc
mov
push
push
cwtl
in
mov
push
sti
dec
adc
lahf
shll
loope
sub
test
push
push
test
lods
jmp
test
xchg
std
jo
mov
out
mov
ret
jb
sbb
in
push
ret
aad
aad
and
add
cmpsl
xor
ja
in
jmp
mov
dec
pop
mov
dec
adc
push
and
outsb
push
imul
xchg
pop
or
push
lahf
daa
mov
daa
add
adc
fidivrl
dec
mov
dec
sbb
loopne
jp
mov
fwait
xchg
leave
pushf
xor
mov
or
iret
insl
in
rorl
sbb
mov
insb
lds
adc
cmpsb
or
in
iret
mov
sbb
addb
je
dec
xor
push
mov
cmp
in
jg
cwtl
adc
mov
lock
mov
mov
sbb
outsb
add
xor
or
adc
es
jle
popa
fadds
mov
aam
push
divl
mov
lahf
out
sbb
arpl
popf
in
pop
xorb
lock
jle
or
pusha
pop
cltd
arpl
arpl
jae
and
fistpl
push
adc
stc
dec
mov
push
cmpsb
in
aad
jns
decb
ret
loopne
iret
cmpb
fwait
mov
lds
shlb
sbb
jp
inc
sub
fistpll
xchg
jp
gs
sbb
enter
invd
xchg
stos
lcall
dec
push
mov
and
add
jbe
punpckhwd
add
jecxz
mov
pop
pop
mov
mov
xor
rcl
enter
pop
mov
cmp
cmp
adc
mov
jno
js
dec
pop
js
ja
mov
imul
imul
cmc
inc
xchg
ljmp
fsubl
pusha
cmp
test
rorl
add
lock
adc
push
inc
inc
daa
cltd
or
jmp
fstps
adc
pop
call
mov
xchg
in
and
gs
dec
pop
pusha
imulb
enter
mov
fs
adc
pop
mov
mov
and
push
in
out
fnstsw
pop
aad
lahf
mov
mov
int3
jg
add
xchg
repnz
push
push
push
fstpl
push
mov
sub
inc
push
adc
push
or
rolb
fidivrl
movsb
fistpll
adc
int
mov
fldenv
leave
fstpl
mov
and
jle
decl
pop
mov
ror
mov
mov
aam
out
pop
jmp
into
mov
or
scas
adc
insl
out
push
or
xchg
cmp
mov
cmp
adc
jne
mov
out
xor
xchg
mov
adc
fwait
sbb
sub
push
movsb
out
das
das
add
mov
ret
xor
mov
xor
lret
repz
ret
pop
add
mov
inc
es
or
xor
mov
test
inc
push
daa
adc
imul
insl
sub
fwait
xor
dec
sbb
mov
inc
push
sbb
push
aam
mov
fnstcw
lret
and
int
or
cmp
movsb
scas
push
add
iret
inc
sahf
xor
arpl
xchg
add
add
test
sub
stc
xchg
mov
and
or
inc
ja
movsl
xchg
inc
ds
pop
cmp
add
pushl
xchg
jns
push
daa
cmp
pop
pushf
xor
and
jle
frstor
mov
and
push
push
lret
addr16
xor
cmp
or
stos
jmp
push
jo
pop
mov
sbb
inc
mov
adcl
loopne
loopne
inc
daa
mov
sbb
dec
insl
movsl
and
inc
dec
dec
in
mov
push
repz
push
call
sbb
ljmp
outsl
popf
xor
rorb
sbb
fstpt
int
pop
pop
sub
dec
out
movsb
jbe
mov
imul
cmpsb
in
cli
pop
mov
aam
jno
sub
pop
inc
dec
incl
cmp
mov
arpl
or
iret
fucomi
lock
xor
and
mov
int
cmp
push
xchg
mov
dec
pop
sbb
cmp
mov
mov
mov
xlat
push
cmp
fisubrl
lret
fsubrs
cli
lahf
outsl
test
sbb
mov
mov
or
clc
inc
add
xchg
dec
stos
test
insb
sbb
add
xchg
sub
sub
mov
xchg
inc
and
in
fcomi
mov
ss
inc
xchg
pop
mov
and
jo
add
aad
xchg
pop
jo
push
pop
ret
sub
movsl
movsl
pushf
dec
scas
loope
lods
test
jbe
sbb
lahf
outsb
into
in
sub
jb
sbb
in
scas
mov
icebp
sbb
lds
nop
mov
dec
xchg
mov
jnp
loopne
outsl
fisttpll
xor
xor
jno
add
mov
or
arpl
fstl
add
repz
outsl
sbb
int
mov
sbbl
xchg
sub
scas
aaa
lock
mov
pusha
push
addr16
ret
pop
xchg
fsubrl
dec
inc
dec
pop
icebp
inc
mov
fisubl
xchg
cmpsl
push
inc
clc
sub
adc
loope
enter
out
dec
lock
je
lret
dec
into
cmp
mov
lods
dec
orb
sbb
push
pop
mov
or
repz
repz
test
outsl
movsl
mov
lea
jbe
push
and
xor
xor
incb
mov
jb
mov
test
adc
jecxz
cwtl
push
add
push
js
pop
repz
gs
add
ss
scas
cmp
cmp
aas
clc
sbb
test
push
imull
pop
scas
jl
mov
imul
pop
loope
pop
inc
sbbl
xor
mov
sub
mov
sub
push
imul
adc
mov
aas
adc
and
xor
fistl
cmp
clc
popa
subl
das
test
push
adc
out
in
add
cmp
xlat
icebp
sar
dec
mov
jle
jnp
idivb
bound
pusha
adc
adc
pushf
js
inc
loop
inc
fwait
xor
mov
cwtl
dec
scas
int3
adcb
subb
cmp
clc
call
add
cmp
int3
imul
icebp
push
repz
pop
add
mov
ret
mov
mov
in
mov
outsb
sub
mov
stos
jge
pop
scas
mov
pop
pushf
std
icebp
inc
sbb
les
cmp
pop
pop
add
mov
xlat
insl
test
xchg
pushf
sub
and
add
inc
jb
in
mov
nop
cmpsl
jae
cmpsl
fs
daa
ja
inc
mov
xchg
xchg
leave
cmpsl
mov
jnp
and
jns
jecxz
mov
xchg
xor
cmp
aaa
jo
fucom
pop
inc
aas
out
cmp
cmp
ljmp
mov
loopne
arpl
jge
push
xorb
xchg
xchg
gs
jg
jge
fsubs
push
sahf
popa
xor
jae
sub
les
rol
mov
leave
cmp
xor
jne
ret
sbb
aad
loop
xor
mov
scas
push
hlt
mov
loop
dec
or
scas
cmp
inc
lock
pop
mov
cmp
outsb
in
dec
sahf
fxam
sub
push
int3
imul
pushf
pushf
mov
pop
jmp
push
inc
sub
xchg
and
jp
je
aas
inc
loope
dec
pop
jmp
and
cmpsb
or
and
out
aas
sub
add
inc
lods
ljmp
ret
minps
fidivrs
jg
sub
pushf
cld
add
cmc
mov
and
inc
scas
push
ljmp
call
cld
lahf
mov
and
dec
jae
mov
inc
fcmovb
flds
in
arpl
dec
cmp
cmp
push
loopne
stos
cmp
fldcw
dec
mov
lods
adc
xor
sub
popf
testb
or
iret
and
adc
jge
xchg
sub
adc
xor
lods
out
dec
sbb
mov
fcomps
mov
mov
mov
jae
pusha
jne
les
dec
pop
negb
out
nop
mov
insb
pop
cmpsb
call
mov
mov
ss
add
xor
les
xchg
xor
inc
xchg
sub
mov
lods
pusha
neg
fcompl
jle
lret
jle
and
push
jl
inc
lcall
scas
mov
push
int3
fwait
xor
xor
shr
mov
adc
mov
call
mov
frstor
or
pushf
add
mov
pop
pop
adcb
pop
push
test
out
insb
sub
in
test
mov
mul
xchg
mov
fidivrs
push
shrb
sub
mov
aad
sub
hlt
adc
pop
shl
out
test
repz
ljmp
cmpsl
sbb
jle
jp
xor
ss
cmpsl
mov
out
aaa
mov
xlat
in
or
cmp
and
sub
xchg
mov
aam
adc
cmc
gs
push
test
mov
jl
inc
into
test
jne
adc
cwtl
lcall
add
dec
cmpl
mov
mov
dec
and
xor
dec
or
sbbb
and
mov
fwait
jl
sbb
mov
cmp
fcoml
adc
arpl
and
xlat
ret
pop
dec
scas
nop
in
cmp
movsb
mov
aas
mov
mov
fdivl
test
push
add
sahf
pop
data16
dec
add
in
push
outsb
mov
sbb
or
push
pop
popl
inc
fisubl
fnstcw
pop
and
and
incb
sbb
out
lret
test
popa
rolb
or
pop
and
xor
loop
or
adc
fwait
ljmp
mov
fdivp
sbb
mov
ljmp
hlt
xor
shrb
into
mov
push
es
dec
or
mov
and
rcrl
sti
add
dec
jno
loopne
mov
dec
pop
cmp
push
sub
mov
out
loope,pt
fadd
push
sbb
stc
or
fcom
hlt
mov
jb
xor
push
and
and
icebp
and
pop
mov
jp
jns
jne
mov
imul
in
cmp
jecxz
mov
xchg
pop
addr16
mov
cld
push
add
sbb
cmpsb
jl
push
scas
sahf
gs
in
mov
sub
push
into
jp
add
xchg
pop
jno
xor
andb
test
pop
mov
das
pop
pop
test
mov
lods
or
inc
enter
adc
jmp
push
sti
jbe
aad
xor
cltd
jle
test
sub
mov
pop
vmulps
mov
sbb
shrl
lods
cli
pusha
pop
cmp
loope
xor
push
test
sbb
mov
or
cmc
jl
pop
mov
xor
fstpt
pop
pop
icebp
sbb
jno
lcall
xchg
pusha
push
lret
sub
cmp
ret
nop
pop
out
in
lret
xlat
add
ja
mov
fs
icebp
xchg
nop
jl
cmpsb
xor
jmp
inc
mov
sar
fcoms
cwtl
cld
dec
bound
popa
pop
imul
xchg
scas
add
movsl
cmpl
scas
dec
sub
repz
addr16
sub
mov
mov
mov
das
inc
push
mov
xor
iret
pop
mov
mov
jp
daa
mov
gs
sbb
fildl
test
mov
leave
jae
je
lret
push
push
lods
fisttpl
sbb
cld
xor
sbb
js
rclb
popf
rcrl
cmp
sub
sbb
test
repz
mov
daa
sub
mov
int
lret
int3
pop
mov
and
adc
pop
pop
bound
dec
loope
rcl
in
xchg
push
fisttps
cli
out
sbb
rorb
jno
test
xchg
ljmp
cmp
xor
arpl
push
ret
add
mov
shrb
push
and
mov
and
repnz
mov
ret
sub
jecxz
jl,pt
adc
jns
sahf
lods
adc
xchg
cmp
sbb
jno
jg
sub
out
inc
test
std
out
mov
enter
mov
test
out
pusha
or
pop
pop
pusha
add
repnz
sbb
xchg
push
mov
fcompp
xor
call
push
arpl
mov
mov
loope
add
jmp
leave
push
int
inc
ficoms
add
pop
scas
inc
pop
jb
add
outsl
stc
pop
scas
mov
sti
or
je
mov
add
test
shlb
push
adcb
pop
icebp
mov
mov
insb
push
mov
pushf
stos
sub
mov
fnstenv
gs
mov
cld
das
and
rcrl
arpl
in
push
pop
pushf
shll
xor
arpl
aam
lcall
jne
scas
sbb
cltd
cmp
cmp
pop
adc
cwtl
push
rorl
push
inc
push
add
lcall
cmp
jbe
mov
push
push
into
adc
lods
negl
xchg
cmp
shl
icebp
xchg
mov
sbb
xchg
sahf
repz
aam
jle
call
jbe
or
ljmp
in
loope
cmp
mov
mov
nop
or
mov
aam
xlat
mov
jnp
lods
pop
sub
mov
xor
sub
xchg
out
cli
negb
test
mov
inc
out
cwtl
insb
add
dec
repnz
or
fs
aam
in
stos
jbe
popf
mov
sub
jge
stos
push
bound
ljmp
fwait
xor
or
popf
mov
ret
push
pop
movsb
push
je
inc
sub
fisttps
outsb
jge
mov
lea
adc
mov
and
cmp
mov
inc
xchg
jns
add
xchg
mov
mov
xchg
adc
add
repnz
xlat
idivl
add
adc
and
loop
mov
sub
clc
mov
pop
and
jno
aam
pop
pop
mov
xor
aad
inc
push
in
ljmp
clc
cs
mov
sahf
push
cmp
ret
mov
test
lods
add
pop
sbb
es
or
push
push
and
mov
je
scas
push
addr16
dec
test
or
mov
movsb
out
daa
test
jne
dec
add
insl
cmpl
mov
dec
or
imul
mov
outsl
loop
rcll
cmp
testb
add
lods
xchg
fwait
aam
test
lret
mov
mov
sahf
sub
sbb
mov
pop
mov
jb
mov
xchg
or
mov
jnp
rorb
add
in
mov
fcoml
sbb
repz
jo
test
fcomp
or
mov
and
xchg
popf
out
mov
std
stos
mov
dec
jnp
jo
leave
iret
xor
notl
mov
std
xchg
in
test
cmp
xor
pop
nop
xchg
xorb
lret
mov
fcoml
divb
adc
mov
out
outsl
xchg
movsl
jl
repnz
out
push
sub
cmpsb
jp
sbb
jno
popf
push
sbb
cmp
out
sbb
and
roll
add
out
cmp
and
and
das
sub
lahf
sbb
push
lods
cmp
ja
ja
mov
adc
loop
mov
and
xor
or
addb
xor
sub
idivl
test
cmpsl
mov
lds
arpl
mov
icebp
sbb
or
gs
jb
jne
push
cli
jne
into
lods
push
arpl
lea
push
adc
xor
mov
cs
push
in
push
shrl
push
push
in
fdivs
xchg
shrl
mov
inc
and
or
sub
jnp
rcrl
cmp
pop
sbb
les
sub
sarb
inc
loope
setle
add
mov
add
pushf
jg
mov
movsb
or
xchg
push
ds
cmp
pop
in
lods
pop
cwtl
mov
loope,pt
xor
add
pop
pop
icebp
mov
paddsw
adc
pop
mov
and
sub
pop
dec
mov
cs
and
mov
adc
xchg
je
lcall
push
cltd
push
and
shr
push
sbb
int3
and
pop
fsubl
mov
jo
out
rcll
push
xchg
mov
dec
and
dec
xchg
popa
idivl
cli
jne
out
out
sbb
icebp
inc
leave
mov
lret
and
ds
xor
add
inc
dec
dec
rcl
mov
aaa
stos
ficompl
pop
xchg
je
mov
pushf
mov
dec
or
in
subb
aaa
pushf
lea
sbb
push
or
dec
int3
loope
mov
jae
jge
adc
inc
push
shl
jmp
and
int
or
xor
pop
incb
or
fwait
xor
or
jae
sbb
xor
pop
mov
push
push
or
jb
leave
mov
mov
add
jno
fdivrs
jns
inc
jnp
out
pop
std
sbb
adc
stos
popa
insl
mov
aad
sti
xor
sub
xlat
mov
xchg
sti
push
xchg
and
mov
jno
inc
loope
xchg
pusha
adc
cwtl
push
jle
mov
test
shlb
adc
hlt
shl
ret
add
into
std
mov
lods
cmpps
mov
test
out
lods
push
lods
inc
test
adc
sbb
push
sarl
movsb
mov
push
aaa
push
aaa
out
mov
and
add
jg
xchg
dec
fcoms
insb
out
mov
xor
adc
xchg
mov
pop
ret
xchg
mov
fucomp
dec
out
testb
das
mov
in
xchg
lahf
push
add
rcrb
mov
cmpsl
dec
push
mov
add
adc
andb
leave
lods
cmc
xchg
or
sbb
std
adc
push
mov
xchg
out
iret
sbb
mov
lds
shll
enter
xchg
int
int3
push
mov
dec
clc
sub
and
and
sahf
and
ljmp
add
xor
inc
sub
xchg
push
in
mov
mov
cld
mov
pusha
xchg
inc
mov
in
xor
cmpsb
mov
pop
mov
andl
pop
mov
cli
and
hlt
sbb
repz
enter
dec
out
inc
clc
adc
js
stc
in
je
pop
jl
test
clc
mov
cmp
pop
sub
mov
pop
bound
push
stos
pop
xor
je
rcrb
enter
imul
pop
sarl
sub
pop
xlat
icebp
xchg
adc
das
les
testl
cmp
roll
icebp
shll
fisttpll
lock
inc
or
mov
mov
adc
cmp
aad
mov
lods
int
adc
jl
jecxz
jne
xchg
cmp
popa
jmp
or
ret
pop
and
loope
xor
flds
mov
rclb
sbb
xor
leave
mov
addb
cmp
fstp
out
mov
mov
cmp
bound
pop
mov
push
cli
xchg
inc
inc
fsts
addl
flds
bound
xchg
cmc
mov
rcrb
fidivl
sarl
mov
push
inc
push
xor
or
mov
scas
test
in
rorb
and
pop
mov
dec
ficomps
divb
fwait
pop
and
mov
repnz
dec
jo
shlb
sbb
xor
cmp
xor
jb
filds
push
xchg
movsb
fstpt
jmp
in
adc
gs
push
mov
inc
mov
leave
or
and
fisttpl
imul
sahf
mov
dec
es
pop
in
jg
sbb
loope
cmp
sub
push
jnp
dec
pop
sahf
fwait
repz
pusha
test
mov
mov
clc
mov
add
outsb
mov
xchg
xchg
and
scas
sub
xor
fsubl
cmp
mov
cmp
in
stc
je
ret
pop
cmpsl
subb
je
addb
rcrl
test
sahf
fnstcw
xchg
in
and
mov
pop
sbb
inc
sbb
xchg
or
dec
sbb
jo
jl
movhps
dec
jmp
enter
or
ret
shlb
fldl2t
cmpl
cwtl
push
jnp
xchg
pop
imul
jne
and
lods
shlb
xchg
and
add
insl
or
loopne
jne
sbb
add
lea
jbe
in
pop
push
add
inc
push
je
cmp
sbb
dec
stc
sbb
data16
sbb
xor
jno
sahf
mov
pop
add
jmp
ret
xchg
pop
pop
push
pop
pusha
mov
out
mov
mov
xchg
frstor
cmc
iret
fistl
xchg
jnp
fcomps
xchg
jns
ljmp
xor
xchg
inc
out
jle
lea
xchg
or
jl
push
es
pop
push
das
jb
add
cmp
dec
js
jecxz
les
test
aaa
stos
or
sbb
popa
mov
ret
outsb
dec
maxps
mov
mov
daa
ds
clc
jnp
sarb
cli
test
jge
stos
lahf
xchg
cmpsl
lock
cmp
cmpsb
out
xchg
mov
mov
mov
and
jb
jg
inc
in
add
and
mov
rcrb
pop
push
mov
dec
jecxz
jb
js
sahf
daa
and
lods
dec
mov
adc
mov
stos
inc
xchg
roll
push
ficoms
pop
jmp
xor
jne
or
push
lahf
sahf
sti
leave
int
xorb
orb
or
mov
pushf
jns
xchg
pop
ds
mov
mov
sub
cltd
into
xchg
sub
in
pop
cmp
addl
mov
push
negl
movsl
shl
push
mov
xorb
lcall
and
mov
xor
pop
fs
lret
sbb
lods
lods
mov
ficoml
mov
ljmp
imul
mov
cltd
mov
repz
repnz
adc
imul
inc
mov
jp
dec
in
pop
xchg
mov
mov
ja
lods
or
dec
and
lds
sub
leave
je
lds
xor
mull
push
aam
addb
dec
and
repnz
xor
add
jns
pop
mov
int
pusha
imul
add
cmp
add
push
xchg
int3
arpl
stos
lea
mov
jno
xchg
test
outsl
mov
push
hlt
lods
mov
sbb
addb
movsl
sbb
jo
mov
sbb
push
daa
inc
dec
mov
xchg
repnz
cmp
pop
in
movb
cmp
popa
lods
dec
out
sbbl
dec
mov
or
shrl
mov
lods
cmp
mov
push
mov
lret
or
pop
mov
jmp
cmovns
sbb
in
sub
jb
sub
rcrl
cmpsl
test
inc
in
movsb
in
and
jbe
inc
mov
sbb
cltd
and
and
lret
aas
xor
mov
sub
pop
hlt
cmpsb
inc
in
adc
sbbb
addr16
mov
sbb
dec
dec
cmp
push
mov
les
pop
adc
std
cmp
xlat
test
pop
mov
je
test
mov
ror
in
mov
in
call
lods
push
sbb
ja
jno
jns
lcall
lret
ljmp
adc
out
lds
jge
and
cltd
xor
dec
dec
cmpsl
fnsave
pop
jp
inc
fldl
cmp
mov
fs
in
sbb
cmp
mov
and
movsl
test
mov
ficoml
mov
push
add
es
addr16
pop
movsl
mov
clc
dec
and
inc
nop
lahf
push
test
push
rcl
outsl
call
les
outsb
lock
aam
ja
adc
mov
in
mov
daa
jnp,pn
dec
test
cmp
fadds
xchg
cmp
in
sbb
mov
lret
cmp
shrb
push
popf
das
arpl
aad
and
mov
xchg
and
inc
stos
inc
cmp
xchg
pop
and
in
jge
inc
or
std
pop
aam
rol
mov
jg
or
xor
push
repz
call
ja
jns
pop
js
call
int
out
pop
adc
subl
ss
mov
sbb
push
push
pushf
scas
cmpsl
int
cltd
xor
loopne
stc
shll
into
fsubr
add
xchg
push
sahf
or
stc
shl
popa
push
insb
jl
xchg
xor
dec
mov
clc
or
sbb
cmp
iret
and
or
daa
gs
data16
ror
ss
and
sub
mov
stc
xchg
xor
sbb
fdivrp
jle
adc
les
add
sub
dec
dec
pop
xor
cmpsl
inc
sub
loop
inc
adc
pusha
sub
jbe
mov
or
pop
cmp
popf
xor
into
mulb
sub
addl
cmp
or
push
sub
js
pusha
jle
pop
jb
mov
ficompl
add
gs
aad
ret
xchg
add
js
lcall
xchg
or
adc
or
xchg
or
clc
daa
sbb
mov
adc
pop
pop
mov
adc
inc
fwait
mov
call
jns
dec
jns
push
fs
lcall
ret
sbb
adc
leave
inc
or
out
loop
inc
mov
pop
jno
nop
iret
int
pop
insl
push
push
mov
out
je
shll
imul
or
dec
cmc
mov
push
pop
inc
push
aad
std
xchg
mov
push
aas
sti
push
add
xor
mov
leave
clc
out
or
outsb
test
clc
lods
out
sub
mov
in
stos
jne
adc
jae
cs
lods
jmp
repz
push
pop
fsubl
fldenv
jecxz
icebp
jp
pop
popa
cmp
out
sub
out
in
lret
cld
mov
push
and
pop
xor
ljmp
mov
mov
sub
push
xchg
insl
setnp
push
and
js
scas
stos
pop
push
xchg
nop
out
sub
je
inc
mov
shrb
in
inc
adc
mov
subl
sbb
add
sbb
test
add
inc
or
inc
hlt
es
lea
add
or
jmp
jle
enter
push
push
hlt
mov
jg
leave
bound
jl
jmp
sub
loopne
inc
fidivl
or
or
cltd
xor
addr16
dec
push
in
and
ret
out
mov
std
cltd
out
sahf
es
jmp
or
mov
out
cmp
cld
insl
scas
imul
xchg
stos
cmp
repz
push
cmp
add
sub
cmc
fcmovb
sub
mov
sub
pop
aad
mov
test
scas
mov
pop
xchg
dec
movsl
dec
and
xchg
cwtl
out
sub
out
movsl
cmp
xchg
int3
test
push
ds
pop
add
clc
inc
pop
mov
dec
lahf
fsubrl
leave
or
push
insl
pop
shrb
cmc
bswap
push
jnp
movsb
xlat
cmpsb
aad
jp
leave
arpl
js
add
repnz
adc
mov
and
push
cmp
imul
adcl
adc
gs
pop
mov
lahf
and
mov
cmc
es
xlat
insl
dec
push
enter
mov
adc
js
xor
add
dec
dec
pop
in
push
or
lret
cmp
roll
add
lock
cmp
push
scas
push
cli
sbbl
adc
mov
push
sbb
jg
mov
into
jb
mov
and
in
clc
cs
sub
jno
lock
fcoml
popl
cmpsl
outsb
loope
mov
jmp
adc
xchg
cmovp
xor
movsl
mov
push
imul
sbb
mov
cmp
mov
xchg
xchg
jle
aad
sarb
dec
dec
rorl
pop
fisttps
adc
pop
mov
and
fsubrs
dec
jle
stc
scas
jmp
sbbb
mov
popa
lods
data16
cwtl
cmp
jmp
dec
ljmp
scas
mov
xchg
pop
test
jno
push
xchg
mov
xchg
mov
insl
jno
icebp
pop
iret
fstps
pop
cmc
xor
es
and
inc
pop
ret
fs
xchg
push
jne
or
mov
sub
imul
and
stc
cmpsb
sub
call
cmp
sub
jb
rorl
in
lods
mov
jecxz
imull
enter
sbb
cmpsl
push
stos
pop
xor
jp
jno
jnp
stos
lods
xchg
fdivl
jmp
dec
mov
or
jge
xchg
sub
fwait
mov
or
mov
mov
int
lret
mov
aad
mov
fdivrp
jnp
popf
pop
stos
inc
sub
mov
roll
shlb
seto
xchg
adc
out
rolb
dec
flds
ror
insl
adc
mov
lcall
iret
test
sub
xchg
add
add
mov
or
dec
stos
xor
xorl
mov
fdivrl
mov
mov
repnz
sub
cvtps2pi
mov
mov
pop
test
test
add
inc
lcall
sbb
fstl
add
or
mov
fnsave
push
test
xchg
lcall
pop
out
movsb
cmp
xor
or
push
ret
adc
push
test
lret
push
mov
mov
add
sar
movl
pop
mov
vunpckhpd
or
or
jb
inc
pop
rolb
add
je
cmpsb
into
outsl
or
in
dec
imul
jne
mov
popf
shll
movsl
in
sub
sbb
inc
xor
iret
push
jne
push
fwait
sti
jle
and
in
cltd
fldpi
divl
xor
fnstenv
push
outsl
sbb
sti
or
or
adc
shrb
push
ficomps
xor
jmp
mov
or
subb
inc
sbb
gs
jp
push
sub
rcrb
pop
test
push
adc
int
dec
jp
sbb
fcompl
push
idivb
adc
mov
das
addr16
lret
mov
cld
insl
jge
sbb
xchg
test
mov
pop
mov
cmc
addr16
push
lret
sti
test
aas
dec
out
inc
mov
add
dec
xor
dec
int3
and
aaa
mov
dec
arpl
gs
xchg
dec
xchg
pop
repz
pop
hlt
adc
xor
inc
std
pop
int
jae
nop
inc
sub
sub
xchg
inc
test
inc
fisubs
popf
jo
fwait
sarb
in
popa
mov
pop
jno
call
jnp
jns
pop
ret
repnz
push
call
xchg
lret
inc
push
subb
mov
adc
xor
movsl
add
int3
jns
lret
push
in
cmp
mov
mov
cmp
mov
out
xor
jo
iret
xchg
sbb
and
andb
mov
nop
jl
js
inc
int3
mov
imul
mov
enter
or
pop
imul
out
movl
bound
out
sub
push
mov
or
cmc
inc
jns
test
xchg
add
sbbl
fcmovnb
popf
and
mov
icebp
mov
sbb
pop
push
movlps
cs
xor
push
sub
enter
push
mov
pop
je
pop
movsb
mov
stos
push
movsl
xor
xor
mov
push
je
jb
xor
scas
mov
cmp
inc
push
test
xchg
repnz
cld
mov
inc
pusha
add
pop
imul
shrl
pop
cmpsl
or
shlb
cwtl
icebp
ss
xchg
mov
pop
sbbb
dec
push
orl
fs
mov
xor
push
pop
lods
imul
inc
mov
mov
mov
aam
test
insl
add
movsb
cld
int3
fcomps
rep
xchg
add
mov
cmc
adc
aaa
mov
or
in
in
push
or
fildl
xchg
in
mov
clc
xchg
sub
lret
pop
and
adc
xor
mov
into
push
dec
sbb
leave
jae
xchg
fdivl
or
movsl
push
xchg
adc
dec
repnz
jns
mov
xlat
frstor
adc
shlb
pusha
mov
cmpsl
iret
mov
ja
dec
xchg
mov
fldenv
or
mov
mov
sbb
adc
ret
es
push
shll
imul
push
mov
cwtl
das
scas
xlat
stos
add
push
mov
shll
out
xchg
pop
adc
leave
push
imul
mov
jb
aaa
idivl
inc
inc
mov
lahf
inc
or
push
fisubl
ret
and
fs
arpl
loopne
notb
cmp
jae
or
sbb
mov
insl
lret
andb
inc
imul
lret
out
adc
mov
dec
cmp
mov
push
or
cli
dec
xor
pop
inc
inc
sbb
jns
fwait
loopne
xchg
add
shll
sbb
in
dec
push
mov
adc
sti
movsb
xchg
shrb
add
fcmovb
xchg
and
adc
mov
and
jo
and
test
mov
iret
adc
mov
xor
sub
aam
fnsave
inc
ficoms
cmp
push
pop
jl
rcll
and
je
push
xor
andl
cmp
lahf
jg
sbb
inc
xchg
adc
cmpsl
cmp
mov
xchg
sti
ret
xlat
sub
or
mov
or
jo
mov
std
aam
mov
xor
push
adcl
jp
or
cmp
dec
push
lret
jp
cmp
imul
or
fistps
pop
xorb
xchg
or
mov
push
and
mov
arpl
clc
addb
jno
mov
dec
repnz
mov
aad
lods
aam
push
test
popf
push
jo
pop
jle
test
mov
in
in
jo
pop
add
icebp
inc
ljmp
es
imull
mov
ret
dec
xchg
out
test
lahf
sbb
movl
jbe
mov
dec
mov
mov
enter
aaa
sti
jne
iret
xor
cmovbe
fcomip
leave
cmp
inc
fs
jp
push
inc
xchg
or
or
xchg
loope
push
clc
outsb
ds
scas
xor
push
sub
sbb
aam
aad
pop
sub
loop
and
dec
or
jl
dec
dec
adc
xchg
cltd
pop
movsb
repnz
data16
mov
lock
lds
push
dec
pop
cmp
mov
push
nop
cmp
dec
or
lock
add
popa
cmp
pop
pop
mov
shrb
push
sbb
push
fadds
jg
xchg
in
movb
xchg
aaa
into
pop
daa
xchg
test
lcall
in
xchg
adc
pop
shlb
cmp
movlhps
mov
stos
inc
pushf
ret
repz
push
inc
xor
fdivrl
jle
nop
dec
repz
xchg
ja
cwtl
ficoms
sahf
es
outsl
fistl
sub
cmp
cmc
ret
lds
loopne
enter
ja
gs
ficoms
jle
lock
mov
and
cli
cmpsb
lock
mov
lret
ds
ljmp
mov
push
mov
in
lahf
jns
std
xchg
nop
loop
lret
sbb
jl
cmp
loope
cmp
int
or
fucomp
jo
sti
lret
and
aad
jnp
pop
inc
setge
cmp
cli
and
insl
jno
mov
insl
xchg
repz
mov
mov
pop
mov
cmp
jg
mov
inc
sbb
fidivrs
iret
jmp
jne
mov
fsubrs
movsb
inc
push
fldpi
xor
xor
rorl
push
imul
jge
repz
cmpsl
mov
cmp
push
cmpsl
insb
sbb
sub
adc
ds
loope
dec
lds
xor
bound
out
xor
add
cmp
jno
jle
dec
fcomi
jnp
divb
cmp
mov
lods
xchg
pop
out
sbb
mov
mov
testb
ds
adc
mov
mov
pop
push
call
or
xor
mov
push
lods
idivl
cli
cmp
jecxz
test
iret
pop
aaa
faddl
cmpsl
inc
stos
mov
aas
dec
inc
push
adc
add
mov
test
mov
jg
dec
push
test
jg
mov
add
adc
aad
je
sti
mov
and
inc
push
setp
adc
fisubs
inc
out
fisttpll
mov
shll
out
test
adc
movsb
mov
les
fstps
pop
popf
fwait
or
or
push
aas
cs
jnp
sub
mov
sub
cmp
jecxz
shl
push
daa
pusha
add
xchg
mov
pop
arpl
and
xor
inc
mov
sub
jbe
fsubs
lds
cmpsl
lret
mulb
int3
sub
out
and
or
add
pop
lret
in
add
xchg
mov
push
test
call
pop
aaa
sahf
xor
daa
lret
mov
jp
push
sbb
sti
shl
jecxz
inc
and
dec
inc
inc
cmp
stc
cmpsb
add
jmp
pushf
bound
into
out
rcl
repz
or
fstl
dec
dec
scas
jg
mov
mov
xlat
repz
xchg
scas
and
jb
xchg
int
jecxz
cmp
or
dec
xor
dec
jmp
xchg
jecxz
jecxz
cltd
add
aas
test
lock
push
push
ss
jb
pop
ljmp
out
push
sbb
sub
sbb
jmp
data16
movsl
jbe
add
fiaddl
xchg
sbb
add
mov
xchg
xchg
push
mov
fisubs
add
adc
mov
pop
push
xor
mov
xchg
sub
ss
inc
stos
lods
mov
fimuls
push
push
mov
sbb
popa
out
xchg
xor
out
mov
sub
repnz
cmp
lods
pop
in
lcall
mov
add
dec
mov
fwait
cs
sub
push
mov
push
or
xchg
movsb
or
mov
mov
out
loope
repnz
test
shrb
ret
testl
lret
test
mov
mov
pop
add
insb
idiv
jp
cmp
fwait
jle
int3
jmp
sbb
xchg
dec
aaa
repnz
mov
add
push
pop
call
mov
mov
xchg
mov
addr16
movsl
mov
mov
ja
mov
arpl
call
mov
push
xchg
push
movsl
sbb
iret
mov
sub
add
negl
pop
add
xchg
dec
and
lea
inc
mov
push
shlb
push
movl
inc
sti
leave
adc
push
sbb
jbe
mov
loopne
in
fs
cmp
sub
xchg
in
pop
out
flds
add
mov
push
and
sahf
add
mov
les
loop
mov
insb
lcall
sbb
or
loopne
cli
repnz
adc
xchg
mov
fdivrl
outsb
jg
mov
stos
popf
stos
adc
cmpsb
push
outsb
clc
lds
popf
cmp
aad
add
pusha
cmp
dec
sbb
repz
cltd
test
mov
das
test
rol
cld
add
cmp
mov
lret
rcr
sub
ds
test
test
outsb
aam
sbb
pushf
cmc
adc
stos
fldenv
add
pop
scas
inc
cmp
icebp
insb
ja
int3
pop
pop
adc
outsl
add
and
mov
add
fwait
test
test
cmp
repnz
test
xchg
xchg
mov
jge
in
arpl
dec
test
mov
insb
fnstsw
cmc
mov
gs
mov
gs
adc
cmp
outsl
xor
jl
andb
pop
xor
mov
aam
cmp
sub
cs
jnp
dec
xchg
daa
inc
call
scas
xor
out
lods
add
lods
test
repz
ret
je
jge
ret
sbb
into
sub
and
pop
cmp
xchg
gs
enter
hlt
addb
add
fisubrl
sub
and
out
int
cmp
in
outsl
mov
test
sbb
inc
cmpsl
je
mov
push
ret
out
jno
sbb
aad
push
stc
xor
out
lea
lahf
mov
mov
mov
jmp
inc
cli
ljmp
fadds
fdivr
jno
stos
cmpl
jae
jb
xor
cmpsl
insb
mov
adc
in
push
jno
mov
cwtl
outsb
pop
shrb
xchg
inc
hlt
dec
xchg
sub
pop
jecxz
xor
cwtl
mov
sbb
roll
icebp
jmp
dec
ja
jl
ret
adc
and
inc
stos
lock
stos
rolb
bnd
fiadds
and
dec
sbb
and
xchg
in
fidivl
test
xchg
lock
repnz
aam
push
ljmp
ljmp
mov
jne
sbb
movsb
or
mov
and
pop
shll
dec
xchg
sub
push
movsb
test
loopne
push
hlt
mov
mov
shr
movsb
rorb
enter
and
xor
leave
movsl
jle
inc
push
dec
dec
mov
xor
or
fcomi
sub
in
or
cmp
les
cmc
scas
mov
sbb
mov
shrl
pop
inc
or
xchg
xchg
sub
sbb
inc
lea
inc
leave
in
scas
into
into
pop
sbb
xor
jmp
cmpsl
sbb
mov
mulb
pop
pop
or
mov
push
jmp
add
mov
outsb
cmp
ficompl
pop
lods
scas
outsb
test
mov
push
leave
test
sbb
test
daa
mov
fsubrs
or
dec
mov
xchg
and
push
and
addr16
mov
lods
bswap
pop
addb
lock
sub
mov
sti
dec
mov
icebp
aaa
movsl
cmc
fsubs
test
mov
pusha
int3
rclb
scas
ss
pop
shrb
imul
imul
les
jle
dec
nop
pop
shrl
cmpsb
and
js
cmp
mov
pop
imul
pop
pop
jge
je
insb
pop
call
xchg
mul
les
mov
xor
mov
cltd
dec
int
das
mov
shlb
addr16
sti
pop
jge
mov
or
xor
rcrl
pop
lret
add
sbb
xor
shrb
sbb
sub
jno
shr
xor
adc
dec
mov
xchg
shr
ja
in
jg
cwtl
or
or
push
pop
das
xchg
sbb
inc
lea
lea
mov
pop
jge
xor
negb
ret
xchg
dec
movsb
hlt
mov
push
or
fldln2
nop
push
sti
xchg
xorb
cmp
enter
mov
pushf
sbb
xor
mov
into
lcall
test
dec
lret
lret
outsb
mov
cs
es
nop
ss
fldl
jno
insb
sbb
xchg
addr16
imul
xchg
xor
push
cmpsb
jnp
xchg
sahf
pushf
sub
push
aam
fidivrs
pushf
sub
call
mov
cmpsb
lret
xor
sub
test
leave
mov
xor
insl
in
fdivrl
jne
mov
stos
jae
popa
ja
xchg
jnp
lds
movsl
repnz
ret
movsl
add
jmp
lret
inc
loop
dec
jo
jge
jo
in
aaa
push
fcompl
std
jo
call
jmp
lcall
xor
jecxz
mov
shl
sub
adc
pop
mulb
pop
repnz
int
gs
xchg
stc
cmpsl
xchg
bound
xchg
or
jmp
aam
and
mov
ret
sbb
push
test
cmp
out
test
fwait
xor
mov
iret
pop
dec
push
shrl
in
test
dec
and
mov
pop
cmp
outsb
nop
test
data16
cmp
jb
cmp
jne
aam
cmc
mov
scas
xchg
out
fwait
sbb
sbb
xlat
orl
shlb
dec
popf
ret
pop
xchg
mov
loopne
cmpsl
or
mov
lahf
ja
adc
lds
xorb
stos
or
sub
int3
mov
insl
in
dec
mov
jne
imul
inc
rolb
loop
adc
cmp
mov
ja
shrl
int3
sbb
xor
das
movsl
sbb
pop
inc
mov
sbb
sbb
cmpsl
es
jmp
addl
fcom
adc
or
mov
stos
mov
outsl
push
dec
inc
push
mov
loope
lods
neg
mov
mov
adc
add
addr16
mov
loop
loope
or
jg
add
aaa
xchg
imul
or
mov
shrl
mov
jno
cmp
add
lock
cmp
and
cmp
xlat
adcb
dec
repnz
jo
cmpsb
sub
dec
fdivrp
inc
popa
sub
shrl
das
insb
adc
lock
fistl
shl
dec
stos
pop
icebp
cmp
jecxz
out
push
pop
pop
jnp
push
imul
mov
xor
cmpsl
push
fdivr
pop
pop
adc
ja
sahf
or
adc
std
or
fldenv
repz
mov
sub
pop
cmp
mov
orb
mov
mov
sbb
insl
cli
pushf
lret
xor
sahf
cs
jno
adc
sbb
shrl
jl
dec
scas
loopne
lods
adc
out
cmp
inc
out
repnz
or
fcmovnb
push
xor
sbb
push
cmpsb
in
into
filds
inc
add
xchg
adcb
mov
fistpl
fidivl
jp
mov
ljmp
mov
mov
outsb
or
jns
scas
xchg
xchg
jmp
inc
mov
mov
fs
or
mov
sbb
in
pushf
cmp
inc
cmp
xor
fs
inc
outsl
daa
in
sbb
xor
xchg
pop
adc
fisubl
adc
cwtl
testl
test
push
mov
out
stos
jp
das
arpl
jno
das
xor
jp
shlb
insb
fcomip
cmp
pusha
imul
pop
cmc
add
cmp
dec
mov
xor
cli
clc
dec
lret
shll
mov
cmc
in
mov
inc
cmp
std
push
movsb
pushw
mov
rcrl
add
cmp
hlt
jns
shll
cwtl
xor
gs
rcrb
in
mov
sti
int3
mov
sbb
out
imul
push
or
sub
or
xchg
stc
sbb
pop
or
cld
shlb
fnsave
pushf
or
push
test
sub
andb
aam
or
jmp
lret
in
daa
das
push
jb
je
aas
pop
bnd
jecxz
jns
sbb
push
into
mov
lds
xchg
sbb
mov
movsb
dec
stos
mov
rorb
xor
rclb
jmp
aaa
shlb
add
gs
inc
cmpsl
jns
das
mov
xorl
insl
mov
mov
leave
pop
and
lahf
mov
mov
fdivs
jp
sbb
mov
mov
cmp
push
test
aad
add
movsl
fldl2t
inc
mov
cli
andb
sbb
push
pushf
pop
sbb
ret
mov
testb
add
test
aas
fcomps
xor
rcrb
fadd
ficomps
sub
addr16
repz
repz
inc
adc
jmp
adc
cmpsl
ljmp
ret
fisubs
fisttps
cld
adc
aaa
add
dec
aaa
sti
inc
in
push
xchg
mov
iret
ds
xchg
cmp
jg
adc
lahf
outsl
add
adc
cmp
jbe
mov
fimull
and
fdivrs
roll
mov
dec
inc
stos
adc
out
jae
fucomi
mov
mov
jo
jge
pop
ret
cmp
enter
dec
loopne
test
dec
into
xor
cmp
cmp
repnz
inc
cmpsl
jns,pt
pop
adc
inc
scas
and
pop
in
orl
icebp
insb
cld
shr
out
popf
add
xor
or
int
jb
add
push
subb
fisubrs
iret
arpl
mov
inc
pushf
xor
int
cmp
push
outsb
adc
adc
push
movsl
sub
sbb
jne
or
pop
loop
fists
jp
pushf
mov
adc
adc
fdivs
or
hlt
inc
push
xor
add
shrl
addl
add
mov
xchg
mov
int3
xor
adc
pop
ljmp
cmc
push
leave
fwait
mov
cltd
adc
imul
push
sbb
inc
idiv
loop
mov
pop
scas
xor
sub
stc
inc
push
sahf
inc
icebp
stos
stc
adc
test
in
xorb
xchg
cmpsl
mov
push
mov
test
in
cmc
sub
ja
mov
jmp
push
mov
loope
cmp
push
push
movsl
or
iret
hlt
ss
sub
ret
ljmp
ljmp
mov
in
in
enter
push
in
insl
cwtl
fmulp
fisubrl
cmp
dec
add
xor
imul
and
dec
adcb
and
inc
adc
mov
cmpsl
push
add
or
shrb
add
imul
sbb
ds
adc
dec
movsb
sti
lods
push
popa
xorl
cli
test
mov
sbb
fnstenv
jge
mov
and
fdivrs
jo
jbe
pop
or
pop
xor
ficomps
mov
add
cmc
into
loop
ret
mov
push
test
mov
mov
pop
pop
add
pop
cld
and
mov
pop
sub
push
decb
icebp
dec
and
xlat
mov
add
repz
into
dec
std
sbb
int3
or
fdivrl
xchg
int3
inc
ja
jp
xchg
aas
pop
xor
push
rcrl
dec
inc
leave
mov
inc
sub
and
lret
xchg
mov
sub
dec
xchg
dec
mov
dec
xor
lock
mov
je
fbstp
push
pop
mov
cmp
mov
adc
sbb
mov
xchg
sbb
fabs
mov
imul
ljmp
jno
sbb
dec
adc
mov
mov
push
lahf
push
mov
and
ds
cltd
mov
push
in
cmpl
jbe
jle
data16
and
int3
inc
sbb
les
add
xor
and
imul
mov
sub
jge
push
push
dec
pop
aas
rcll
cld
dec
sub
divps
les
jg
mov
jo
lahf
xor
mov
imul
inc
adc
and
pop
add
mov
bound
dec
jns
cwtl
jae
push
ret
fucomip
cmpl
pop
stos
mov
aaa
xor
js
add
scas
nop
ss
mov
cmp
push
cs
jle
cmc
scas
std
mov
or
inc
push
lret
fstps
call
outsb
cld
push
data16
aas
std
fildl
roll
dec
loop
nop
push
incl
xchg
pop
test
push
aas
jge
inc
fisttpl
and
fbstp
dec
pop
and
push
fiadds
lcall
insl
scas
inc
fucom
mov
fs
or
mov
loope
or
xchg
insl
dec
outsb
xchg
sub
imul
mov
adc
cmp
orb
out
push
adc
fdivr
fdivrs
insl
stc
push
lods
push
mov
dec
push
sub
inc
sub
adc
push
jno
xchg
movb
decl
ret
ljmp
xchg
sbb
adc
cmpsl
call
loop
jae
pop
cmp
lahf
testl
es
arpl
ds
popa
sbb
mov
cmp
sti
mov
inc
sub
xor
mov
xchg
push
push
imul
dec
xchg
xchg
ss
sar
jns
bound
nop
dec
add
filds
stc
dec
rcl
pop
outsb
adcb
cwtl
mov
rclb
pop
jnp
lea
sbb
pop
push
xor
mov
xchg
mov
dec
loop
mov
or
int
add
pop
inc
pop
jne
jb
or
adc
lods
xchg
stc
ret
pop
mov
xor
lods
loope
fimuls
js
dec
jg
push
sub
dec
popl
jecxz
mov
outsb
mov
push
ja
inc
inc
add
shll
dec
enter
sub
push
sarl
xor
jne
test
mov
add
es
sub
mov
cmp
mov
sbb
in
or
inc
loop
adc
fsubl
pop
out
test
ds
lds
or
aaa
mov
ds
clc
pop
push
lods
xchg
sub
mov
ficoml
xor
call
hlt
xor
dec
call
cmp
shrb
or
pop
pcmpgtw
arpl
clc
test
test
lods
sub
pop
jns
add
cmp
xchg
fcmovu
cmp
jns
je
insl
das
arpl
ds
pop
orl
adc
jp
stos
or
inc
push
mov
lret
bound
cmpsl
adc
sub
mov
ljmp
addr16
test
iret
fcomps
mov
mov
iret
lcallw
mov
scas
and
hlt
mov
pop
or
sbb
int3
cmc
xchg
idivb
ljmp
inc
dec
mov
jmp
sbb
mov
cmp
adc
pop
mov
adc
pop
mov
jb
les
je
cmpb
es
dec
movsl
stos
cs
jo
pop
mov
push
lcall
dec
cmc
cltd
cmp
imul
pusha
jb
shlb
jp
ret
inc
inc
or
inc
cld
add
push
pop
inc
push
cmc
mov
sbb
pop
sbb
jle
or
jno
std
clc
test
cmp
lcall
pop
dec
shll
fmuls
mov
popf
stos
idivb
cltd
ret
inc
scas
jecxz
mov
in
fistl
ds
jae
es
pop
xchg
push
scas
and
data16
add
cs
cwtl
cmp
ljmp
sub
xchg
pop
in
mov
cld
loop
push
cwtl
adc
push
inc
mov
mov
push
adc
leave
xor
sbb
mov
inc
es
ret
push
push
pushl
rol
fcmovne
gs
fmull
les
pop
fbld
les
not
cmp
ret
nop
jno
ja
xchg
xchg
mov
fnsave
mov
imul
dec
add
data16
pop
mov
fiadds
cwtl
mov
dec
cwtl
inc
scas
pop
jmp
pop
loopne
jl
jp
xor
test
dec
inc
or
int3
jle
adc
in
pop
int3
gs
jl
xchg
movsl
mov
pop
cmp
cmp
lret
pop
add
dec
xor
dec
rcrl
in
fiaddl
insl
cmp
out
jo
sbb
das
sub
xchg
cmp
sub
mov
mov
inc
shlb
test
pop
and
mov
movsl
notb
jb
ljmp
not
hlt
inc
pop
icebp
pop
ret
mov
les
sub
sub
or
outsl
ret
xchg
cli
or
gs
movsb
pop
repz
pop
stc
cltd
mov
scas
adc
repnz
push
dec
or
xchg
lret
stos
pop
bound
xchg
jnp
push
inc
fwait
jp
inc
arpl
xchg
fcmovb
test
fdivs
cmc
imul
mov
mov
sbb
sbb
push
jne
das
sub
cld
mov
ret
sub
jg
and
inc
xchg
stos
push
enter
mov
jle
test
lods
jmp
mov
std
mov
mov
inc
dec
fs
loopne
cmp
jl
push
xchg
add
inc
hlt
insl
inc
sub
loop
inc
sub
repnz
jecxz
sub
inc
push
sub
outsl
mov
add
sub
inc
mov
mov
cmp
mov
insb
push
jbe
in
test
out
int3
sub
xor
or
dec
fildll
or
or
mov
mov
push
jl
add
dec
xchg
mov
and
cli
popa
ljmp
sbb
dec
jns
shll
scas
inc
mov
push
outsl
mov
in
xchg
xchg
sub
mov
jecxz
sbb
or
mov
test
divb
jmp
adc
xchg
int
mov
add
fisttpl
das
mov
xchg
xor
fs
pop
xchg
call
stos
fsubrs
ja
cmp
rolb
pop
fnstsw
mov
pushf
repz
cmp
rorb
stos
dec
pop
fisubrl
pop
cltd
or
cmp
ret
add
add
jle
add
push
test
or
sub
adcb
in
aaa
sbb
mov
and
ret
repz
mov
rcrl
fwait
inc
and
and
mov
cmpsl
dec
clc
fdiv
xor
jb
call
jnp
outsl
clc
sbbl
jg
aad
daa
lcall
xor
xchg
shrl
call
outsl
sbb
ds
sbb
mov
mov
pop
mov
fcompl
jns
inc
xor
cli
gs
cs
test
sub
xor
jge
push
out
ret
fdivs
out
loope
mov
dec
pop
das
lea
and
mov
mov
inc
push
or
sbb
bndstx
pop
sar
adc
or
dec
loopne
lds
adc
stc
jo
scas
mov
xchg
nop
stos
xor
fiadds
mov
mov
push
fsubrs
movsl
mov
jmp
push
xacquire
jge
xchg
lods
mov
clc
pop
fcomps
sub
push
repnz
inc
jecxz
stc
in
aad
arpl
pop
inc
cli
sbb
jmp
dec
ds
cmp
lock
popa
in
xchg
adc
ficoml
ljmp
inc
sbb
ret
repz
mov
and
rorl
dec
bound
outsl
jge
enter
lcall
jecxz
cmp
xor
push
push
cs
lret
repnz
mov
pop
je
push
ret
jg
rcrl
jp
dec
rcrl
xor
lods
imul
and
mov
lock
dec
mov
sub
mov
and
mov
rcrb
lea
xchg
clc
out
add
push
aaa
mul
pop
push
push
adc
in
ljmp
inc
jmp
dec
aas
popa
or
and
mov
repnz
sbb
leave
int
clc
rcr
xchg
mov
jns
loopne
stos
pop
insb
rclb
mov
mov
xor
sub
stc
out
sti
xchg
add
push
sub
test
out
push
test
jg
inc
or
cmp
xchg
xor
sub
sub
cmp
lcallw
mov
push
or
enter
cmp
xchg
inc
ret
mov
jmp
shll
xchg
xor
data16
test
or
and
sarl
and
xor
int3
pop
cltd
pop
pop
and
cmc
aam
mov
lcall
inc
gs
fstpt
ror
push
pusha
mov
sbb
es
inc
imul
pop
jnp
inc
jecxz
sahf
clc
xchg
jne
add
xor
inc
mov
dec
sbb
dec
fbstp
sub
pop
dec
inc
std
add
addr16
cltd
sbb
in
sub
xor
xchg
dec
jg
outsb
les
repz
xchg
mov
add
cmc
mov
push
clc
imul
dec
cmp
push
xchg
pop
out
mov
and
inc
sub
inc
jg
in
xchg
mov
adc
rclb
mov
jne
in
mov
pop
lods
ljmp
testl
add
out
push
dec
popa
or
inc
add
jbe
int
dec
sub
xchg
mov
arpl
xchg
movsb
dec
iret
pop
mov
mov
imul
int3
cmp
mov
fnstcw
add
std
sub
test
adc
push
inc
adc
cmpsb
gs
jl
add
or
xchg
add
or
scas
sub
dec
in
outsb
les
sub
inc
shr
push
or
int3
mov
addr16
jecxz
sti
push
jne
mov
iret
subl
das
xchg
inc
xlat
push
inc
cltd
push
xchg
xor
mov
mov
fists
imul
int
xchg
sub
js
dec
adc
and
add
adc
mov
popa
clc
imul
mov
xchg
bound
mov
fbstp
outsl
roll
fcmovu
out
or
xchg
daa
mov
jmp
sub
pop
out
jl
clc
adc
sbb
sbb
mov
rcll
lock
pop
stos
repnz
out
lret
mov
pop
mov
cmp
pop
or
je
mov
cltd
push
repz
insb
imul
pop
insl
jge
jnp
sti
or
xchg
out
scas
pusha
mov
dec
cwtl
es
ret
jae
add
pop
adc
or
hlt
xor
push
push
es
inc
mov
xchg
lock
mov
je
pusha
or
shll
lods
xlat
push
and
adc
rcr
test
sub
in
dec
int3
adc
scas
in
xchg
fistl
jns
cmp
push
jns
pop
addr16
inc
enter
clc
int3
repz
and
xor
mov
int3
addr16
or
ret
pop
leave
and
cli
inc
cld
adcl
xchg
and
xchg
jnp
into
icebp
sub
inc
add
fidivrl
push
mov
push
ficoml
or
mov
and
fcompl
add
ljmp
xchg
inc
cmc
int
adc
push
jl
mov
ret
push
stos
pop
pop
push
addr16
xchg
jp
cs
lcall
lods
mov
fwait
notl
cltd
inc
aas
int3
rcrl
dec
mov
jle
popa
rorl
xchg
les
mov
add
jle
ja
mov
js
sbb
das
std
insb
fidivrl
push
mov
es
in
inc
std
out
lea
pop
es
out
push
mov
repz
and
std
mov
cmp
sbb
cli
sarb
insl
cmp
xor
data16
mov
dec
pop
adcb
dec
adc
clc
stc
nop
sub
mov
xchg
cmp
ret
jmp
mov
adc
pop
push
js
sbbl
sub
iret
sub
mov
mov
ss
fsts
lds
stc
sbb
xor
jne
bound
js
and
fdivl
data16
pop
xchg
jbe
mov
out
xchg
sarl
int
ljmp
xchg
addr16
in
loop
sbb
mov
loop
cmp
jmp
cmp
jo
mov
mov
mov
inc
mov
add
in
push
jge
or
dec
ds
add
daa
je
stc
mov
sub
cwtl
push
add
sub
adc
sub
pop
cmpsl
orb
lea
push
scas
shlb
adc
adc
aam
pop
push
fdivs
sbb
sub
ljmp
or
pop
loop
rcrl
js
xchg
stos
xor
xor
je
sbb
jnp
xor
push
les
and
jecxz
icebp
inc
jne
ss
andl
inc
jnp
inc
pop
out
int3
sbb
mov
pop
push
insb
xchg
popf
and
fwait
icebp
insb
adc
xor
dec
call
cwtl
rcrl
xor
stc
fbld
sbb
scas
add
shlb
cmpsl
sub
sbb
push
lock
jne
sti
cmpsb
or
jae
or
test
or
lret
or
adc
lret
pop
frstor
sbb
sbb
xor
cmp
into
lods
sub
enter
mov
xchg
push
bswap
inc
shll
daa
nop
push
into
fiadds
fwait
aaa
xchg
test
push
cmp
xlat
pop
xchg
int3
les
mov
cmp
inc
cltd
rcll
lods
test
daa
jmp
pop
inc
lds
inc
out
adcb
inc
sub
cmpsl
cli
adc
aad
cli
cmp
xor
pop
sbb
nop
cld
jl
cmp
loope
mov
jo
lds
sbb
xor
pop
hlt
int
hlt
pushf
inc
push
scas
cmp
mov
pop
fldenv
adc
cmp
xor
je
ret
push
ffree
nop
add
dec
in
test
jns
push
lahf
adc
pop
incb
sbb
dec
sti
movsl
cmp
mov
fidivs
in
fisttpl
sub
add
dec
push
xor
cmp
das
enter
adcl
in
xchg
pop
pushf
test
dec
push
pop
test
fistl
jecxz
subb
and
imul
xchg
mov
imulb
data16
jl
shrl
pop
pop
xlat
rorl
int
and
inc
push
fisubl
js
mov
jnp
mov
xor
in
mov
or
movsb
jle
popf
sub
cli
cli
ret
jle
loop
xor
mov
aas
fidivl
push
add
xchg
test
sti
push
jne
push
push
mov
cmpsl
lods
test
div
int
adc
js
lret
fwait
outsl
jb
adc
inc
jmp
add
nop
daa
cmp
mov
add
scas
fnstsw
dec
dec
aaa
into
adcb
in
pop
jb
sti
xchg
out
xchg
push
cld
inc
xchg
inc
push
push
inc
addr16
sub
fisubrs
cmp
jo
mov
xchg
sbb
in
push
in
imul
mov
push
inc
cmpsb
insl
cmpl
cltd
pop
cmp
or
xlat
cmpsl
popa
test
popf
fldcw
aaa
pop
cmpl
hlt
adc
sbb
std
xchg
repz
cmp
jns
and
sub
sub
mov
das
in
fld
inc
mov
pop
addr16
pop
addr16
icebp
sar
push
inc
lods
loope
enter
push
gs
mov
mov
xchg
cmpsb
sub
xchg
sahf
sahf
mov
sbb
ficoml
jb
mov
pop
outsl
test
lahf
mov
adc
mov
mov
fnstsw
aaa
xchg
sbb
sub
flds
flds
fstpt
jno
cmp
pusha
das
into
dec
add
ja
xchg
sub
xor
in
in
int3
shr
push
inc
je
pop
push
xor
fldl
mov
js
movsb
mov
xchg
mov
fucomip
xchg
mov
cmpsl
loop
xchg
dec
iret
enter
and
mov
mov
fisttpl
dec
xorb
cmc
mov
fildl
fsubrp
mov
test
lock
fdivr
lcall
sbb
and
das
mov
xchg
lret
pop
hlt
cld
and
push
or
repz
jl
jecxz
nop
and
popa
nop
sarb
or
stos
ds
rorb
add
jge
dec
pop
lea
loopne
cs
pop
xor
aad
push
or
popa
xor
pop
ljmp
cwtl
lcall
adc
push
jnp
imul
aaa
xor
mov
pop
jg
xor
lret
in
lock
xor
data16
pop
sti
xchg
fimuls
gs
pop
ja
stos
mov
sti
sbb
sub
and
or
add
mov
cmpsl
xchg
iret
leave
cld
inc
lock
xor
dec
mov
cmpl
xchg
dec
arpl
sbbb
aas
push
add
inc
mov
add
test
fadds
mov
stc
mov
cmp
jne
xchg
insb
xchg
push
dec
f2xm1
out
fsubl
notb
hlt
xchg
mov
mov
sub
push
dec
cmc
movsb
daa
jp
dec
sbb
sti
les
xlat
and
cltd
fmuls
cmp
push
rolb
sub
pop
pop
cmp
adc
mov
lret
mov
xchg
jle
sbb
adc
xchg
dec
or
sub
mov
cmc
fwait
sti
outsl
loope
add
insb
push
loope
test
std
divl
test
inc
xchg
loopne
les
cmp
int
lds
jnp
int3
adc
cltd
cmp
jmp
jmp
rclb
sub
and
and
fbld
pop
and
and
lea
lret
jge
ret
jno
stos
mov
insl
pusha
ja
push
movups
xlat
rorb
adc
push
jns
mov
imul
inc
mov
int3
mov
pop
push
int3
leave
int
mov
add
push
add
movsl
sub
adc
lahf
dec
cltd
test
fwait
mov
js
mov
outsb
sbb
push
shlb
cltd
xor
push
inc
jecxz
add
call
xor
xchg
xor
push
dec
add
jmp
mov
in
jns
repz
rorl
xchg
push
adc
push
jne
xor
jnp
fbstp
add
mov
sbb
stos
adc
scas
mov
adc
pop
sbb
arpl
mov
adc
xchg
mov
rcl
jmp
sub
js
in
or
inc
jmp
into
xor
fildll
pop
dec
pop
mov
adc
dec
xchg
jg,pn
sbb
push
popf
mov
ret
mov
add
repnz
mov
pop
mov
or
add
fldl
cmp
aas
jo
cwtl
inc
mov
jl
push
aas
mov
jg
dec
mov
jp
pop
aaa
into
mov
lods
jmp
shlb
xor
cmp
lcall
push
shrl
sbb
dec
sbb
sbb
jns
adc
nop
imul
psrad
dec
bnd
dec
in
xchg
arpl
loope
mov
fwait
dec
out
adc
sti
pop
jmp
out
in
out
arpl
out
or
pop
cmp
andl
iret
outsl
stos
xchg
popa
or
pop
out
mov
mov
and
mov
js
xchg
fbld
rcl
andb
ret
jmp
sbb
push
and
lods
mov
cli
jmp
sbb
and
adc
xchg
add
pcmpgtb
xor
flds
pop
adc
aaa
dec
pop
imul
mov
fwait
cs
jle
js
out
sub
sbb
call
xor
in
mov
mov
aam
cmp
cwtl
mov
push
sarl
fmuls
cmp
popa
jg
mov
mov
xchg
jge
push
test
stos
jo
lods
mov
dec
xor
mov
ret
mov
rcll
in
loopne
lods
inc
and
out
lret
mov
stc
cmp
inc
daa
push
stos
fldl
push
inc
stos
sbb
inc
xor
jmp
pop
repz
ljmp
pop
pop
pop
js
lea
stc
mov
data16
sub
add
insl
popa
daa
cmpsb
jbe
sub
lahf
push
lds
imul
repz
in
xor
data16
testb
shlb
and
addr16
add
cmp
mov
fistl
xor
or
jecxz
fists
ficoms
ds
mov
fsubr
out
inc
cmp
movsb
mov
stos
loope
lods
push
aam
mov
jp
cmp
imul
mov
mov
ret
rcr
ja
sub
add
add
jge
xor
and
sbb
inc
mov
insb
scas
enter
xchg
sub
inc
inc
mov
xchg
sti
out
repz
sbb
test
lock
dec
out
outsl
daa
or
add
mov
sbb
and
and
and
inc
sahf
shr
adc
sahf
or
cmp
stos
sarb
and
sub
sub
and
fwait
sub
push
cmpsl
dec
test
fs
adc
jp
mov
int
push
jg
push
add
push
js
jo
mov
mov
lcall
les
xchg
je
cmpsb
rclb
pop
xchg
add
leave
jecxz
negl
dec
dec
popf
outsb
add
xchg
dec
push
test
cmpxchg
lea
adc
sub
jmp
cs
lock
fimull
pop
cmp
out
imul
sbb
jae
or
bnd
or
add
inc
push
lea
insl
cs
das
movsb
mov
mov
mov
aas
mov
push
mov
enter
mov
xchg
xor
xlat
cmp
xchg
scas
dec
add
cmpsl
ret
gs
push
cmpsb
clc
into
ficoms
add
mov
sbb
cli
xchg
inc
mov
aam
jp
je
daa
pminsw
adc
jo
enter
stos
aam
cmpsb
out
shl
outsl
daa
std
cmp
push
shrb
sub
dec
inc
inc
xchg
mov
jge
mov
adc
pop
push
test
lret
arpl
sub
xor
pop
jae
xchg
dec
mov
pop
leave
in
je
mov
and
sub
js
adc
sbb
xor
arpl
push
call
jge
gs
and
push
lods
pop
addl
nop
and
and
cld
idivb
cmp
mov
jecxz
daa
lcall
adc
dec
out
inc
sbb
add
or
inc
cmp
lcall
out
icebp
pop
scas
and
andb
xor
cmpl
imul
popa
fsubrl
call
sub
shll
jns
sub
add
or
imul
mov
cmp
mov
sbb
sbb
dec
aad
jge
les
pop
repz
loop
daa
out
stos
inc
sbb
mov
loop
cmp
int
inc
shll
push
fidivs
shrl
mov
jge
data16
aas
pop
aam
xor
jbe
movsb
cmpsl
movsb
mov
add
in
push
adc
adc
cmc
test
in
add
xor
addr16
push
clc
pop
add
and
es
jo
mov
add
mov
cmp
or
sbb
and
cmp
push
andb
les
mov
loop
cwtl
test
rorb
and
repz
adc
or
mov
rcll
mov
ror
loop
jnp
stos
mov
mov
shl
mov
mov
pop
loope
push
fwait
popa
cmp
push
jb
push
movsb
adc
fidivrs
ss
sbb
inc
js
mov
decl
filds
test
and
movsb
pop
pop
outsl
mov
outsb
add
rcrl
push
and
je
add
cmpsb
dec
pop
lcall
sti
popw
cmp
cmp
pop
addr16
pop
cmp
scas
loope
push
inc
dec
loop
rcll
jne
jl
loop
mov
cli
mov
insl
cmp
fisubrl
or
and
adc
pop
imul
sbb
decl
jmp
shl
jno,pn
add
dec
movsl
cmp
data16
lods
mov
pop
insb
decl
mov
fsts
add
in
jno
in
mov
es
push
mov
xor
dec
cwtl
pop
sti
in
sub
rorb
clc
or
xchg
dec
jmp
push
int3
push
jbe
cmovle
xor
insb
or
sbb
repnz
adc
push
int3
nop
shlb
stc
mov
fimull
push
cwtl
sar
cmpsl
xor
lcall
jae
add
pop
add
cmovne
ret
in
dec
inc
insb
rol
leave
push
ljmp
and
mov
pushf
icebp
and
and
mov
jb
out
mov
or
push
or
data16
xchg
jl
int
add
adc
cmp
popa
orl
pop
dec
pushf
int
cmpsl
inc
outsb
addr16
sbb
cs
push
push
push
pop
adc
jb
sarb
xor
lahf
out
out
rorb
inc
ficoms
xor
push
test
mov
xor
std
repnz
inc
xchg
sub
andb
push
adc
les
pop
cwtl
push
and
xchg
inc
cltd
jl
lret
arpl
jg
cmp
mull
adcl
jo
sbb
mov
mov
clc
daa
inc
mov
sbb
mov
xchg
call
in
stos
mov
jmp
test
sub
xchg
dec
lock
and
push
dec
pop
xchg
lods
xchg
insb
les
mov
sbb
out
jo
cld
repz
or
stc
popf
push
xor
jmp
sti
je
aas
push
pop
dec
andb
and
add
imul
dec
jno
stos
inc
out
bndldx
leave
int
push
xchg
loopne
lds
in
lds
mov
das
add
ficompl
or
repz
outsb
loopne
lods
into
pmullw
daa
lcall
dec
dec
mov
or
cmp
jno
loope
cmp
xchg
inc
out
sub
cmp
lods
push
pushf
sbb
int3
fldl2t
std
enter
cli
hlt
cmp
out
inc
cmc
jns
fldt
adc
mov
add
lahf
adc
sub
jo
daa
adc
mov
addr16
leave
mov
inc
and
test
push
repnz
mov
cltd
or
mov
pop
out
cld
dec
jecxz
movsl
lock
jmp
mov
sub
imull
pop
jb
mov
sbb
sub
roll
pushf
fisttps
inc
dec
fisubl
inc
fisubrs
int3
rcrb
sbb
push
add
outsl
orl
jmp
clc
inc
dec
xlat
and
stos
and
ds
add
mov
loopne
stc
or
cmpsl
stos
xor
inc
xlat
pop
nop
adc
cltd
aad
lods
jmp
fcoml
push
xor
cmp
mov
addb
push
push
stos
mov
sar
fwait
rolb
notl
dec
loope
cltd
cli
jecxz
sub
lcall
dec
adcl
sub
fwait
cmpsb
cmp
inc
test
xchg
mov
jp
xchg
sbb
xchg
cltd
and
std
ss
lock
insb
cmp
das
and
fucomi
sbb
outsb
gs
sub
ja
call
insl
mov
xorb
dec
fcmovbe
sti
fwait
das
mov
mov
sub
adc
mov
add
or
lea
xchg
dec
int
call
aad
pop
nop
fxch
into
cmp
adc
loopne
fiadds
sbb
jns
test
cmpsb
xlat
lods
addr16
pop
jg
cmp
in
sbbb
mov
and
sub
cmpsb
inc
dec
xchg
add
jle
mov
loope
adc
jns
jb
inc
mov
out
or
and
out
lahf
mov
rol
inc
leave
icebp
hlt
mov
xor
inc
popf
psrad
loopne
lahf
sahf
sub
jge
cmp
push
add
cld
outsl
mov
lods
xchg
mov
add
imul
hlt
mov
ret
or
jo
add
dec
sbb
pop
jns
test
dec
out
clc
add
push
mov
and
rcl
cmp
mov
sarl
lcall
dec
fists
std
jb
movsl
xor
or
jns
cld
in
sbb
and
xchg
dec
testb
push
xchg
mov
lahf
mov
mov
fistpl
ja
pop
iret
xor
ss
arpl
xchg
xorb
cmp
sbb
mov
jecxz
outsl
insl
jmp
add
xor
mov
mov
aam
pop
and
sti
popa
xchg
pop
test
out
addb
push
mov
adc
popf
stc
popf
xor
rcrb
inc
mov
fucomip
cld
adc
cmp
inc
xchg
jo
mov
inc
fwait
das
xor
pusha
testl
push
popa
xor
mov
xchg
ljmp
xchg
pusha
jle
and
mov
jno
jl
mov
mov
adc
std
lahf
sbb
push
xlat
jbe
cld
enter
and
pop
ret
jae
dec
pop
loope
jbe
inc
out
loopne
addl
std
inc
cmpsb
or
and
mov
icebp
jae
fisubrl
and
adc
scas
sbbb
xor
or
push
mov
dec
cmp
repnz
push
test
insl
mov
jl
sub
bound
lret
and
fcoml
mov
test
xchg
mov
loopne
sbb
loope
xor
dec
push
cmpl
xchg
xchg
test
ds
add
xor
cmpsl
pop
push
stos
jle
iret
and
shll
or
mov
xchg
push
mov
icebp
dec
add
rcl
sub
fwait
aas
adc
cmp
jo
ficoml
ljmp
jno
jo
fdivs
xchg
push
stos
or
mov
or
icebp
sbb
adc
xchg
push
add
inc
pop
repnz
cmp
pop
mov
mov
cmp
leave
mov
jb
xchg
push
fstpt
nop
bound
adc
adc
add
jecxz
mov
push
jmp
ljmp
cmp
and
mov
or
and
addr16
arpl
aaa
or
lods
pop
hlt
jmp
xchg
push
popf
adc
dec
dec
sub
lods
push
push
shrb
shll
or
mov
jne
lods
inc
adc
mov
add
aaa
and
xlat
sub
cmp
xchg
push
inc
insl
mov
dec
cmpsb
and
shrl
je
sub
mov
lea
inc
adc
test
in
xchg
lret
add
pushf
pop
sub
stos
cmp
inc
in
cli
xchg
js
mov
imul
fisttpll
jae
ss
push
adc
mov
rcll
jp
inc
lahf
rclb
mov
mov
scas
mov
fsubp
adc
mov
inc
ret
jle
mov
stc
push
cltd
sbb
call
lret
push
test
clc
push
cwtl
mov
fnstenv
push
test
adc
pop
sbb
sbb
int
mov
ror
or
scas
pop
push
pop
scas
jo
xor
or
call
addr16
loope
dec
stc
ljmp
xor
lret
popf
mov
in
xchg
out
in
add
pop
icebp
jne
adc
pop
mov
test
cmp
xlat
cmp
xchg
insb
cmp
test
dec
fdivl
dec
mov
and
adc
fbstp
orb
pop
fadd
fcoml
mov
cmp
push
scas
adc
pushf
jne
lea
push
repz
xchg
outsb
jecxz
fdivl
xor
mov
std
xchg
mov
and
sbb
aaa
mov
or
int3
out
jns
loopne
test
push
add
cmp
rolb
dec
movsb
repz
imul
jl
loop
movsl
shlb
pop
das
dec
test
cmp
out
in
dec
sahf
adc
push
test
cmpsl
fsubrs
lret
pop
repnz
jns
pop
add
icebp
mov
jmp
dec
test
push
cld
and
cs
inc
pop
fidivl
mov
subb
pop
push
negl
pop
mov
or
jo
in
data16
clc
lcall
fst
mov
fs
out
outsb
aad
jo
and
dec
repnz
or
pop
popf
mov
scas
sbb
shrl
xor
ja
cli
jne
sbb
dec
out
inc
inc
mov
cmp
rcr
jae
int3
popa
clc
std
jnp
hlt
nop
mov
or
int3
mov
popa
out
or
xor
decb
test
data16
add
out
sbb
mov
push
push
out
cmpb
aas
addr16
sbb
jnp
mov
into
dec
inc
fdivrs
stos
xchg
push
pop
fucomi
dec
daa
pop
scas
sub
xor
mov
pusha
jae
sbb
jno
cmp
scas
aaa
sbb
loope
popa
adc
sbb
cld
xor
pop
inc
pusha
lret
lods
jo
mov
mov
lret
enter
pop
aad
push
or
addr16
adc
outsb
mov
in
jg
mov
ret
iret
movsb
jl
dec
add
in
pop
arpl
pop
dec
ja
cmc
adc
push
jae
cmp
push
mov
mov
cld
sub
int3
or
inc
xchg
sub
imul
rcll
mov
cmc
adc
icebp
cmp
jbe
mov
xchg
aaa
movsb
add
dec
fistps
adc
and
xor
mov
flds
xchg
adc
aaa
push
mov
xchg
out
lea
mov
jp
inc
pop
mov
mov
into
aas
addl
jbe
cmp
out
push
xor
jbe
fdiv
mov
and
xchg
mov
jne
cmp
push
outsl
lods
outsl
mov
mov
pop
add
sbb
xor
xchg
mov
mov
sbb
and
mov
or
mov
push
cltd
sbb
pop
pop
nop
pop
mov
xlat
rcrl
shlb
dec
hlt
inc
jns
scas
mov
push
inc
js
xor
bound
cmp
rcr
pusha
stc
ljmp
mov
and
int
cmp
int3
inc
shr
imull
cmp
xchg
lret
inc
jmp
or
iret
xchg
lahf
adc
mov
aad
inc
sub
and
scas
pop
in
jb
loop
fistpll
call
xchg
xchg
ljmp
arpl
scas
inc
jl
shr
cmpsl
mov
fcomps
adc
adc
mov
lods
push
or
xchg
xorb
jg
mov
xchg
insb
int
xor
lea
push
iret
push
and
dec
loope
rcl
js
test
and
das
sub
pop
push
xchg
stc
insb
cli
sub
call
jae
cmp
pusha
sbb
xor
cmp
mov
loop
mov
stc
pop
test
sti
lcall
outsl
add
test
aaa
shlb
inc
repnz
add
ss
movsl
mov
xchg
cmpsb
imul
mov
pop
jbe
lret
je
sbb
jmp
xchg
sub
leave
inc
cmp
xchg
mov
sar
sub
negl
std
out
jl
std
subl
inc
out
imul
cmc
test
cmp
iret
push
sbb
lods
push
aaa
into
test
add
or
and
clc
cli
stc
inc
fsubrs
into
pop
ret
pop
xchg
fildll
lcall
and
xor
in
and
jmp
pop
mov
gs
movsl
xor
xchg
loop
dec
clc
pop
adc
xchg
clc
or
decl
jnp
push
xor
or
push
mov
fsubr
and
adc
mov
push
cmc
cmp
mov
es
popa
cmp
inc
mov
push
fldenv
lock
fisubrs
data16
jne
mov
lds
xor
pop
and
shll
popf
mov
into
lret
dec
sbb
inc
flds
imul
adc
int
ds
fldl
jmp
rcrb
xchg
in
add
add
push
insl
sub
sahf
scas
imul
fmuls
scas
push
pop
movsb
mov
ss
fucomp
enter
push
fidivrs
mov
pop
inc
int
xchg
je
sbb
mov
mov
adc
jl
xor
or
dec
test
jbe
cmp
scas
aas
icebp
push
mov
pusha
mov
xchg
filds
xchg
xor
gs
pop
xchg
loope
icebp
mov
cmp
xor
lret
jle,pt
mov
dec
jo
sub
clc
lods
push
jmp
pushf
jp
fldenv
fbstp
xor
xchg
nop
inc
cmc
in
cmp
pop
test
mov
push
or
pop
adcl
in
pop
rcrl
lods
or
mov
mov
fimull
xor
les
loop
cmpsl
mov
jl
mov
lods
and
push
cmp
lcall
sub
jno
or
cld
loope
push
xchg
ljmp
and
dec
jae
jns
or
movsl
xchg
dec
arpl
mov
iret
add
ficompl
and
adc
mov
push
test
pop
repnz
ret
jge
jns
pop
mov
xchg
jmp
mov
sahf
shll
pop
or
pop
adc
pop
mov
adc
sahf
mov
pop
or
cmp
imul
popa
cmpl
and
pop
push
scas
dec
push
cwtl
jmp
mov
les
lea
push
aas
das
lcall
push
xchg
cwtl
mov
pop
pusha
repnz
add
dec
cmp
xchg
lcall
roll
sarl
repnz
loop
mov
jbe
stos
mov
add
cmp
jecxz
mov
jns
leave
call
nop
fdiv
rolb
jp
pop
push
dec
xchg
push
mov
shl
sbb
push
jb
jle
cmp
and
sbb
fsub
jl
lea
aad
clc
cli
push
movsb
mov
fldenv
push
daa
lcall
xor
inc
mov
mov
fidivrs
into
bound
popf
fstpt
add
jl
bound
lods
outsl
and
inc
xlat
push
test
inc
mov
sbb
outsb
xchg
dec
add
push
jge
iret
mov
push
fldl
scas
sub
bnd
movsl
out
cmpsb
lock
jp
lods
and
mov
cmp
sub
imul
adc
int
ss
sarl
fisubrl
ret
or
sbb
call
mov
fistpl
ja
mov
mov
aam
gs
pushf
es
xchg
sbb
sbb
icebp
adc
or
imul
divb
in
repz
sub
es
mov
add
pop
mov
cmp
sbb
jle
lcall
lahf
sub
shl
inc
push
iret
inc
fst
add
sub
and
nop
dec
xchg
sub
xchg
jno
pop
sub
testb
add
pop
xor
iret
adc
aam
std
fwait
std
jo
xchg
sbbb
push
xchg
andb
xchg
mov
in
adc
push
imul
rorl
inc
rol
test
push
jnp
out
stos
xchg
mov
jae
inc
sarl
add
addr16
inc
cmp
mov
aam
mov
fcomps
bound
pusha
adc
aaa
xchg
xchg
push
sti
into
hlt
inc
mov
mov
rol
mov
pop
dec
jns
loop
imul
fiaddl
arpl
jb
push
cmc
xchg
cmpsl
test
mov
jl
cwtl
push
jge
cmpb
in
insb
outsb
dec
cwtl
mov
fs
jg
add
xchg
daa
lock
inc
sbb
inc
fwait
call
sbb
loop
lcall
int
stos
pop
add
mov
lret
inc
mov
or
xlat
push
outsb
push
pop
mov
sub
pop
mov
mov
bound
xchg
enter
scas
inc
mov
cmpsb
movsl
lahf
push
jo
mov
dec
sub
cmp
pop
or
sarb
mov
jl
cwtl
jmp
leave
jp
xor
mov
dec
lock
les
aaa
mov
jb
leave
pop
jae
or
pop
add
divb
in
pop
test
in
mov
pop
inc
inc
or
pop
out
inc
or
test
cmp
aas
in
adc
fstps
mov
or
mov
dec
push
fstl
or
sbb
dec
jno
push
repnz
es
cs
push
test
out
mov
lock
dec
les
pop
xchg
xlat
mov
mov
clc
push
inc
cmp
cltd
std
sbb
insl
les
pshufw
dec
dec
xchg
insb
pusha
push
cmp
aad
in
sub
push
in
inc
mov
sti
or
mov
in
cltd
inc
pop
lret
or
aad
in
add
nop
pop
frstpm(287
js
fsubrs
xchg
fisubrl
sub
xor
testl
sbb
push
repnz
jbe
daa
rorb
sti
ljmp
inc
ret
add
sub
and
aaa
stos
loopne
dec
es
add
adc
inc
add
aaa
lea
repnz
jl
xchg
into
jnp
mov
pop
add
add
movlps
aaa
push
clc
cli
repnz
movsl
mov
mov
adc
sbb
sbb
repnz
loop
movsl
xchg
mov
aaa
hlt
data16
mov
mov
and
xchg
mov
push
ljmp
in
in
xchg
bound
mov
mov
addr16
cwtl
mov
lahf
or
cltd
sbb
xchg
rcll
lock
cld
clc
jns
stos
enter
lret
jecxz
std
pop
jl
insl
ret
pop
pop
out
subb
mov
push
push
jno
mov
mov
aam
ja
subl
or
mov
adc
dec
push
fcompl
aad
mov
xchg
aad
push
cmp
sub
pop
mov
add
mov
dec
lock
shrl
cmp
push
ret
jnp
push
mov
fdivl
xchg
push
sub
mov
fidivl
cmp
shl
jno
xchg
gs
or
and
ds
subl
addr16
jne
adc
mov
xchg
in
and
shlb
leave
xchg
dec
int3
arpl
xchg
jp
push
xchg
or
vcvttsd2si
inc
xchg
add
pop
movsl
icebp
mov
xor
addr16
mov
adc
int3
aaa
out
sub
pusha
aam
dec
pop
cmc
js
pusha
push
aam
push
mov
xlat
xchg
mov
sub
fsubrp
xor
push
rclb
mov
jne
lea
xor
jg
dec
lods
mov
dec
dec
sub
orb
pusha
vxorps
aad
add
pop
addr16
push
dec
xchg
jge
inc
icebp
mov
pop
xor
leave
pusha
sub
jecxz
ret
inc
fwait
out
mov
mov
add
fisubs
or
mov
xchg
adc
test
mov
adc
les
sub
test
lods
inc
scas
gs
outsb
sbb
dec
push
leave
jo
mov
sbb
adcb
shl
jnp
stos
iret
shl
add
lcall
jp
sahf
mov
test
fadds
imul
cmp
and
rcrl
pop
sub
imul
jle
mov
cltd
xchg
xor
std
fwait
aaa
stos
or
sbb
or
add
and
pusha
repz
add
add
fst
ror
fiaddl
inc
cltd
andl
mov
pop
mov
pusha
push
into
cmpsl
jb
add
ljmp
je
or
xchg
adc
out
adcl
or
andb
and
sahf
je
mov
sahf
push
push
dec
in
mov
push
mov
pop
adc
push
mov
scas
js
jge
adc
or
cmc
shrl
dec
xor
insb
fwait
aaa
xchg
adc
pushf
cli
xor
cwtl
das
std
mov
xchg
pop
loopne
icebp
sbb
inc
std
pushf
cmp
dec
test
icebp
pop
arpl
test
pand
andl
out
ja
push
or
addr16
push
test
lahf
inc
add
mov
icebp
dec
and
out
jbe
and
test
cmp
in
add
fiaddl
mov
dec
daa
dec
movsl
data16
or
aas
movsb
sub
stc
add
es
pop
jnp
adc
and
and
out
mov
test
daa
mov
push
and
orps
adc
xor
fs
int
shrb
ret
add
ja
cmp
mov
repz
lods
xor
lods
inc
jne
mov
jns
addr16
fidivrl
int3
and
or
fisttpl
xchg
dec
scas
loop
or
xchg
mov
out
jne
ljmp
call
dec
lcall
mov
pop
xchg
cmp
sub
lods
outsb
pop
mov
sbb
pop
push
sub
dec
push
test
xor
mov
pop
popa
mov
pop
aad
xor
mov
ret
bound
fwait
js
xor
and
push
mov
in
pop
bndstx
cmpsl
in
fucom
pop
jg
jg
and
xchg
sub
push
pop
loopne
add
sub
fidivs
testb
jmp
scas
fmulp
int
pop
add
push
pushf
pop
cld
dec
movsl
std
bnd
cmp
ja
adc
shll
mov
pop
jp
xor
imul
std
in
jecxz
sub
mov
insb
into
push
adc
js
ret
xlat
sbbl
push
mov
ret
out
push
or
push
xor
ds
fisubrl
xchg
jmp
lods
pop
call
f2xm1
pop
repz
mov
mov
add
sbb
lret
pop
mov
add
jbe
push
test
xchg
mov
negb
add
fdivrs
pop
cmp
and
pop
and
push
mov
ret
mov
push
cmp
sbb
and
and
aad
mov
lock
movsl
push
mov
or
aad
jp
les
adc
pop
mov
fsubrl
and
aaa
jmp
sbb
daa
push
mov
bound
fstpt
loopne
outsb
push
orl
inc
loop
sti
stos
xchg
sub
loop
jge
push
xchg
pop
pop
shl
add
mov
sbb
xor
popa
xchg
and
js
jbe
insb
test
pushw
mov
lret
pop
mov
imul
rolb
testb
stos
es
mov
sqrtps
mov
mov
inc
cltd
addr16
cld
lahf
mov
adc
and
out
adc
or
movsb
int3
or
out
addr16
fists
or
sbb
xor
jae
jl
mov
mov
jbe
add
lea
add
leave
and
adc
cmpsl
ds
js
fcmovne
and
inc
push
rcrb
rcrb
dec
dec
idivl
shrb
insb
mov
movsb
into
scas
jge
cmpl
xor
sub
lahf
cmpsl
lcall
sub
bound
sbb
fs
clc
mov
adc
adc
and
cs
sub
xor
add
pop
push
ret
pop
in
outsl
sub
pop
test
outsb
adc
xor
sbb
xchg
cmpsb
sbb
xchg
scas
mov
cmpsb
cmp
and
daa
add
xor
jmp
jp
jnp
lods
insb
jbe
push
dec
jecxz
pop
push
in
js
push
add
xchg
sub
in
mov
fiaddl
mov
jmp
loope
jo
iret
sbb
jg
outsl
jae
imul
inc
jp
xor
mov
nop
subb
mov
or
or
stc
test
data16
movsl
sbb
loop
insl
jg
ret
stos
mov
stc
mov
jmp
dec
add
mov
ja
imul
xchg
lea
mov
mov
imul
pop
sarb
push
jno
fists
mov
jmp
mov
cmpsb
dec
adc
push
das
shll
xchg
add
mov
sbb
adc
xchg
shrl
cmp
xchg
sbb
dec
jp
lods
mov
cs
ja
fwait
movsb
mov
push
lods
push
addr16
push
jp
das
inc
and
or
add
inc
stos
adc
jmp
xchg
xchg
sub
mov
and
out
sti
add
mov
pop
in
mov
mov
call
repz
sahf
dec
sti
sub
in
repz
mov
sub
int
shr
ret
jmp
stos
ss
loopne
lret
movsl
jg
push
mov
sahf
loopne
adc
jg
data16
add
mov
mov
or
sub
add
pop
fildll
je
and
js
fsub
test
cmp
sbb
shll
sarb
xor
insb
sub
addr16
xlat
scas
mov
scas
inc
leave
push
mov
adc
xchg
cmp
cwtl
mov
faddl
and
xchg
xor
cmpl
pop
sbb
das
loope
and
fadds
xchg
les
hlt
push
xchg
aas
xchg
mov
mov
mov
fcomip
addr16
jl
xor
adc
lret
ret
push
cmpsb
sahf
rcll
pop
cmp
clc
xor
push
adc
xlat
fs
jns
iret
push
pop
call
sub
mov
xlat
rclb
loopne
jp
arpl
mov
sbb
movsl
andl
mov
icebp
test
mov
cmp
xchg
inc
dec
into
gs
loopne
out
mov
outsb
jno
and
push
xchg
rcr
fidivrs
or
cmp
mov
jae
fcoms
or
sarl
insl
add
loop
adc
sub
xorl
pop
enter
mov
clc
shll
les
xchg
mov
addr16
pop
cmpsb
in
sti
lea
inc
in
call
out
icebp
push
dec
pop
adc
loop
inc
adc
test
sarb
mov
xchg
mov
ljmp
adc
std
jp
pop
shrb
andl
jp
mov
mov
shl
jp
mov
mov
jle
xchg
loop
xor
cltd
jnp
aam
fimull
leave
movsl
xchg
lock
je
sahf
in
lahf
enter
loop
popf
xor
sub
fnstsw
mov
push
fwait
pop
aaa
adc
movsl
push
sub
jp
pop
pushf
inc
jecxz
test
iret
mov
mov
cmpsl
or
pushf
jg
inc
fdivrl
jne
or
pusha
fsubrl
jge
mov
hlt
jb
insl
sub
gs
inc
sarb
push
roll
inc
aas
loop
xor
shrl
jo
mov
call
xchg
xchg
adc
insl
call
add
push
scas
aad
enter
bound
inc
sub
mov
mov
mov
mov
mov
andb
pop
test
jbe
nop
mov
test
pop
or
cmp
ret
paddq
pusha
mov
xchg
inc
inc
in
ds
aam
imul
outsb
das
push
in
dec
lds
aam
test
sbb
es
pop
aam
rolb
sub
push
mov
test
call
mov
jbe
mov
mov
mov
jg
adc
stos
mov
xor
arpl
and
shl
inc
push
cmp
insb
mov
pop
mov
loope
sbb
mov
jo
lods
and
and
push
mov
cwtl
sbb
enter
and
ret
sub
ret
dec
sub
imul
pop
and
pop
scas
inc
ja
fisubrs
ret
stc
pop
out
frstor
xor
test
loop
cltd
data16
out
inc
xor
and
cmp
loopne
fwait
dec
or
in
cwtl
dec
imul
cmp
mov
out
mov
jge
outsb
inc
cmp
push
int
adc
negl
lds
iret
aam
dec
mov
repz
push
sub
mov
arpl
or
dec
and
pop
lret
pop
pusha
inc
jle
out
push
sbb
push
or
adcl
pop
lock
xor
push
jbe
cmp
gs
shll
sub
push
cmp
push
xchg
jns
mov
cmp
jae
test
xor
outsb
fcoms
icebp
mov
pop
fs
mov
cmpsb
add
nop
mov
mov
and
sub
outsb
lods
aaa
push
lahf
fucomp
pushf
xor
test
jno
stc
push
gs
xor
jp
pop
cmpsb
push
pop
pop
mov
test
mov
push
inc
sbb
mov
mov
scas
sbbl
pop
xchg
movsb
mov
adc
repz
adc
sbb
into
lahf
int
mov
arpl
jno
lods
mov
inc
push
jmp
lock
mov
add
das
rep
add
leave
xor
mov
mov
mov
mov
pop
fwait
popa
addr16
mov
ffreep
jmp
inc
rep
outsb
shll
mov
movsl
addb
mov
mov
xchg
loopne
pop
jg
inc
pop
out
test
icebp
xchg
outsl
sub
push
inc
cmpsb
push
idivb
xchg
pop
and
xchg
ret
dec
jmp
sbb
dec
rcl
pop
inc
in
or
push
jns
mov
mov
adc
test
xor
popl
xchg
xchg
pop
mov
pop
outsl
lcall
scas
out
ss
mov
bound
andl
ret
adc
dec
jecxz
ss
mov
mov
xlat
shll
mov
xchg
shll
push
dec
jl
and
insl
fadds
and
pop
xchg
jne
nop
call
fs
aam
das
or
aam
jb
lds
add
leave
out
mov
or
in
sbb
cmp
das
pop
insb
test
pop
imul
insl
sub
out
cmc
jo
dec
pop
outsl
jnp
jo
insb
mov
repz
sbb
or
icebp
adc
add
sbb
jb
dec
pop
xor
pop
outsb
xchg
notb
inc
aad
xor
movsl
in
inc
dec
dec
outsb
xchg
movsb
cmp
pusha
lods
mov
in
mov
sbbb
stc
inc
ds
cmpsb
mov
sahf
ljmp
mov
lock
or
ret
cltd
pushf
ficoms
int
adc
lret
sbb
adc
fsubs
jbe
aaa
into
pop
hlt
inc
inc
dec
lods
push
inc
xchg
out
stc
nop
and
pop
shl
inc
dec
push
jno
aas
dec
inc
jge
jnp
sub
out
ror
xchg
les
repz
push
push
mov
xor
inc
mov
pop
push
cmc
push
cwtl
decb
inc
sbb
push
mov
pop
push
pop
cwtl
jnp
sbb
movsl
out
xchg
push
leave
and
scas
iret
mov
xor
mov
push
ret
ja
outsb
dec
clc
mov
sbbb
push
test
pop
or
iret
in
or
or
out
inc
hlt
push
incl
outsb
adc
lret
mov
dec
jecxz
cmp
add
lock
push
xchg
mov
xchg
mov
cmp
stos
loopne
sub
jae
sbb
pop
notb
je
mov
ja
add
xor
mov
xchg
mov
push
js
pop
mov
push
sbb
rol
outsl
mov
popa
bnd
inc
das
addr16
mov
inc
sbbl
inc
fsub
daa
push
cmc
sbb
sub
nop
cmp
int3
dec
or
push
test
testl
inc
sub
mov
mov
push
ror
test
xchg
xor
ds
repz
xchg
add
lsl
cmp
jge
mov
test
aad
movsl
push
pop
mov
in
mov
sbb
arpl
stos
pop
imul
aam
in
lock
movntq
and
cmp
icebp
add
fdivl
jle
aad
mov
mov
notb
ret
and
push
mov
cltd
dec
add
int
sub
xchg
inc
clc
out
cmp
aam
out
pop
jge
cmp
dec
push
sbb
and
ds
push
rolb
dec
lock
outsl
jae
or
sub
stc
nop
in
pop
xchg
mov
fnsave
mov
js
add
pop
inc
gs
ret
loope
or
test
xlat
dec
or
mov
adcb
push
pop
ret
sub
adc
je
push
sub
imul
or
mov
cmp
aad
mov
and
fucomp
mov
sahf
std
adc
nop
std
pop
lods
cmpsl
icebp
xchg
dec
out
lds
adc
mov
adc
push
cmpsb
jle
mulb
dec
std
lea
push
out
popf
into
lea
aaa
pop
cmp
sahf
stos
inc
es
aam
shlb
int
push
in
push
ljmp
add
mov
push
imul
cvtps2pi
call
aam
dec
fadds
dec
filds
dec
and
jg
push
daa
sbb
mov
add
jmp
pop
xchg
mov
in
xchg
imulb
icebp
adc
sbb
pop
jno
jp
lods
cmpl
mov
dec
enter
lret
ret
mov
je
cmp
push
pop
scas
or
aad
sbb
dec
dec
push
mov
dec
push
ljmp
mov
xor
scas
push
inc
fs
cld
mov
stos
cltd
mov
das
push
lds
mov
jle
mov
mov
mov
cmp
pop
xchg
mov
inc
fdivrs
int3
cltd
es
clc
and
in
cltd
cmp
pop
and
and
and
pop
push
clc
addr16
mov
or
fimuls
cs
pusha
pop
mov
dec
nop
pop
dec
stos
mov
ja
dec
outsb
adc
add
shl
leave
int
imul
leave
popf
shrl
into
lahf
xor
pop
cmp
xchg
push
xor
sub
xchg
mov
std
adc
inc
push
repz
inc
fadd
inc
push
pop
cmc
shll
cmp
jl
jns
dec
fbstp
mov
add
dec
jb
or
aam
mov
rcrb
adc
jecxz
jno
push
and
sub
mov
movsl
adc
fiadds
aad
xor
shl
xor
cmp
sub
push
outsl
fiadds
data16
and
out
ret
leave
mov
fnstenv
push
cmp
shrl
jmp
cli
xchg
add
hlt
mov
pusha
sbbl
cli
sbb
jecxz
pusha
cmp
pop
scas
inc
xlat
adc
push
je
jp
sub
test
rolb
xchg
loopne
aas
adc
inc
movsl
mov
bound
mov
sbb
mov
fbstp
jge
decb
pop
lret
ss
sti
or
test
or
js
jge
cli
mov
inc
and
mov
std
jo
or
fidivl
inc
jecxz,pn
pusha
das
das
xlat
mov
test
mov
pop
ret
lock
out
and
lea
movsl
js
jmp
jecxz
clc
out
roll
add
or
call
xchg
iret
in
add
jae
test
inc
xor
jge
stos
inc
xor
pop
stos
addr16
cltd
or
dec
aas
adc
jo
push
fistpll
push
mov
fucomi
mov
test
cmp
mov
fucomi
sbb
pop
sub
das
sub
fwait
js
cltd
xor
cltd
and
push
xchg
pop
sbb
and
pop
sbbb
inc
jno
aaa
nop
movsl
jecxz
fimuls
pop
shl
or
mov
jns
in
pushf
lcall
push
dec
in
mov
mov
testb
and
outsb
or
neg
push
cli
shld
mov
ret
stos
and
sbb
test
push
lods
popf
sbb
sub
aaa
xor
imul
or
jp
sbbl
outsb
push
test
ja
fiadds
in
mov
jo
clc
cwtl
mov
outsl
cmpsl
das
push
sub
cs
mov
xor
dec
dec
lret
sti
outsb
and
sbb
mov
mov
mov
mov
jmp
sbb
mov
adc
sti
mov
sub
clc
pop
xchg
jns
sbb
mov
aad
pop
jno
inc
int3
movsb
shll
and
push
mov
sub
outsb
test
ret
mov
inc
inc
lods
ljmp
pushf
enter
sub
jns
dec
adc
cmp
iret
data16
pop
icebp
sub
pusha
sbb
cmp
rclb
adc
insl
and
fdivl
xor
xor
mov
jp
mov
sti
out
and
and
ljmp
xor
jp
xchg
jno
repz
scas
dec
mov
test
mov
movsb
shl
test
stos
xor
pop
shrl
js
bound
xchg
xchg
fwait
or
inc
sub
je
je
pusha
movsl
shrl
lcall
pop
repz
sub
mov
stos
movb
gs
xchg
sub
mov
stc
add
mov
daa
lcall
jne
push
xor
xchg
test
dec
stc
push
repnz
repnz
or
cmp
lret
scas
sahf
adc
les
dec
push
loopne
pop
mov
sbb
test
mov
movsb
push
add
or
mov
add
dec
jl
or
repnz
jae
xchg
lahf
test
sahf
or
mov
push
loop
jns
mov
push
nop
dec
repz
dec
cmpsl
mov
aas
cmpsl
outsb
add
cmp
jge
stos
ss
xchg
inc
stc
nop
jne
sub
cmp
mov
add
pop
insb
xlat
jbe
mov
add
leave
and
gs
dec
push
push
adc
sbb
test
in
test
lods
inc
jg
lock
or
lock
jbe
xchg
leave
fistps
xor
cmp
push
cmp
fsubs
aas
push
fstps
call
push
pop
call
mov
js
lock
fstp
xor
sub
cmp
scas
inc
lret
sub
sub
rcll
stc
es
scas
fwait
push
xlat
inc
xor
mul
bound
xor
dec
faddl
insl
addr16
insl
jb
out
sub
loope
dec
sub
test
push
lods
jb
jo
xor
fists
sahf
mov
mov
repnz
ljmp
or
in
push
sbb
cmp
push
cmc
pop
pop
cmp
loopne,pt
pop
xchg
dec
pop
lcall
in
add
stc
data16
imul
xor
push
sbb
pop
stos
cmp
aad
icebp
loope
in
daa
test
aad
idivb
cmc
push
pusha
push
adc
das
std
mov
push
xchg
jbe
nop
mov
mov
imul
mov
out
gs
sbbb
xchg
leave
mov
leave
inc
xlat
and
xchg
jno
in
adc
add
data16
mov
lahf
repz
pminub
lock
stos
sub
add
push
cltd
inc
imul
shlb
cli
xchg
lds
out
nop
mov
int
mov
leave
cmp
int
inc
cmp
outsl
repz
push
pop
out
nop
push
shrl
lahf
add
stos
cmpsb
mov
adc
jo
insb
daa
push
and
call
lods
ficoms
mov
and
lret
leave
arpl
lods
cmp
or
inc
mov
ds
pop
sarb
rol
sub
mov
xchg
lret
bound
inc
pop
fxtract
jmp
and
in
js
lret
pop
insb
cmpsb
rcl
cmp
imul
scas
push
dec
lcall
inc
cltd
push
gs
jg
xchg
add
lahf
push
mov
fucomip
hlt
mov
jne
jae
push
pop
out
or
hlt
adc
ss
pop
jne
ja
jno
aaa
shlb
xor
cwtl
sub
shll
dec
inc
dec
pop
adc
mov
jg
bound
in
ret
dec
push
sbbl
mov
loop
sub
es
sbb
xchg
into
scas
dec
xor
push
out
loop
push
cmp
dec
mov
add
outsl
or
adc
cmp
dec
push
cmp
and
jno
addr16
aam
mov
inc
push
sub
xchg
inc
fxam
sub
pop
push
popa
mov
cmpsb
rolb
aas
stos
xor
xorb
mov
jmp
mov
cli
sbb
test
push
icebp
cmp
fdivl
jmp
or
repz
push
pop
sub
cmp
dec
xor
cmp
dec
aad
sbb
repz
dec
adc
push
sti
or
ljmp
shlb
in
sti
lahf
std
inc
flds
sub
jl
je
add
xchg
das
mov
into
fcoms
xchg
sti
pop
mov
pop
mov
jbe
and
loopne
das
mov
lret
add
push
mov
mov
push
xor
or
mov
xchg
fadds
or
sub
cmp
sti
int
stos
pop
xchg
insb
add
lret
lods
out
test
mov
mov
push
lock
xchg
ss
jmp
arpl
test
imul
or
sbb
dec
lcall
cmp
jg
icebp
sub
loopne
repnz
das
xchg
xchg
test
test
mov
sbb
mov
or
pop
mov
dec
in
scas
xor
aam
js
orl
repnz
nop
xor
addr16
addr16
lahf
lds
cltd
jae
sahf
mov
or
inc
push
pop
xor
sub
lds
bound
lods
push
mov
fistps
pushl
jmp
das
daa
addr16
cltd
out
add
pop
hlt
dec
loope
adc
jo
and
adc
mov
imul
addr16
push
cltd
ja
mov
xor
insl
in
push
loope
adc
or
dec
mov
mov
js
sub
stc
dec
lret
ss
mov
and
mov
stc
cwtl
pop
and
xchg
test
lcall
jne
mov
jo
add
clc
stos
data16
pusha
mov
and
mov
mov
fpatan
pop
add
aam
sub
mov
negl
add
and
dec
pop
and
out
pop
xchg
mov
jg
cmpsl
mov
fdivl
shrb
mov
cmp
jo
jecxz
lahf
jno
push
fnstcw
call
sarb
cmp
jecxz
in
popf
xlat
push
mov
xchg
test
rorl
js
jmp
int
inc
add
insb
aas
xchg
and
xchg
push
xor
jp
popf
adc
arpl
sbb
pop
xchg
xchg
sarb
inc
inc
xor
xchg
xchg
push
in
pop
repz
sub
test
ror
ret
gs
leave
push
inc
flds
lret
jo
cmpsb
jecxz
fcomps
sbb
mov
jno
mov
cwtl
test
jg
dec
xorb
ror
xor
lds
inc
js
popf
mov
adc
shlb
cmpsb
jbe
stc
jecxz
add
js
ret
push
and
mov
ds
hlt
insl
loopne
and
addr16
jae
lds
out
rcll
jle
movsb
int
push
adc
je
imull
rcrl
lret
adc
or
mov
cmp
sarb
bound
dec
fs
inc
cli
inc
jl
sub
sbb
sbb
sub
pop
or
test
cmp
pop
pop
mov
sub
out
pop
xchg
sub
push
jbe
mov
ret
mov
rcr
xchg
mov
jb
repnz
sub
adc
push
xchg
fwait
or
jae
insl
movsl
dec
mov
mov
mov
stos
enter
jne
nop
mov
movsb
jno
fcoms
fucomp
loopne
inc
inc
aaa
pop
mov
mov
or
iret
jno
inc
add
subl
enter
lock
shl
mov
xchg
push
imul
int3
xchg
in
gs
mov
jge
and
popa
inc
cmc
inc
mov
jne
cmp
pop
stos
fsubrl
mov
and
push
mov
jo
mov
lods
in
dec
pop
stc
sti
sub
jl
data16
js
jne
jl
lea
xchg
es
cli
aad
dec
adc
adcb
loop
jmp
decl
jmp
mov
adc
sbbb
push
lock
clc
push
bound
out
jg
jnp
aam
cmp
xchg
sub
bound
xor
pop
and
push
fcomi
mov
sub
add
pop
aad
pop
out
push
xchg
ja
in
test
mov
or
iret
rolb
mov
cmp
scas
test
test
mov
mov
pop
xor
pop
and
mov
push
popa
jmp
fpatan
cli
dec
imul
sbb
xor
mov
pusha
inc
pop
es
in
insb
test
or
push
cltd
pusha
fnstenv
dec
mov
sub
je
roll
dec
mov
sub
pop
popa
clc
dec
xchg
int
sub
jl
jne
dec
cmp
pushf
xchg
popa
out
pop
inc
or
inc
repnz
aas
retw
pop
push
dec
out
mov
sbb
fnstenv
sahf
shr
jns
mov
dec
lahf
jo
roll
cmp
bound
dec
mov
rorl
xor
pop
les
add
cmc
bound
xchg
mov
jecxz
push
std
adc
cmp
shrb
mov
icebp
mov
insb
inc
cmpsl
adc
aam
sbb
add
sahf
cmp
in
test
xor
dec
data16
jae
shrl
idivl
sub
sahf
or
adc
or
aas
ret
loope
lock
mov
ljmp
jbe
mov
xchg
aaa
addb
or
ret
mov
out
sbb
xchg
push
push
mov
xchg
iret
or
sbb
or
mov
jno
and
rcrl
inc
scas
dec
mov
test
popa
aad
movsl
mov
in
push
loop,pt
xchg
jns
insl
leave
sbb
mov
sub
xlat
xor
stc
popa
fbstp
lods
cwtl
push
or
cmp
enter
push
call
push
fcompl
scas
inc
mov
xchg
push
jbe
insl
stos
in
cmp
lcall
mov
lcall
cmp
inc
outsl
and
or
push
pop
sbb
leave
adc
movsb
repz
bound
sti
sub
sub
push
mov
lahf
ss
jmp
sub
hlt
in
mov
out
push
sahf
mov
xchg
imul
in
pop
shlb
xchg
jecxz
clc
mov
xor
sbb
sbb
ds
js
xchg
mov
xchg
fnstcw
jne
or
inc
daa
xor
pusha
mull
loop
jno
inc
jle
mov
mov
push
mov
mov
scas
dec
ds
jbe
jne
sub
out
pop
push
jbe
iret
pop
or
cmp
fcom
pusha
enter
pusha
mov
lahf
push
shl
mov
loop
mov
dec
dec
ds
or
jl
out
loopne
popa
sbb
cmp
ret
in
cmp
adc
mov
or
and
mov
sub
mov
faddl
aas
push
pusha
lret
idivl
mov
jns
pushf
ret
stos
xchg
in
mov
aas
lahf
imul
and
fimuls
or
cmp
aas
ret
adc
mov
test
outsb
ds
or
mov
rol
imull
outsl
jecxz
ret
fucom
mov
test
pop
push
repz
movb
andl
jo
push
call
and
cwtl
mov
insl
push
push
jl
and
pop
jp
rcll
sbb
mov
sbb
ret
repz
mov
sahf
je
lret
cmpsb
lret
dec
push
jmp
push
push
outsb
sub
or
gs
les
pop
mov
inc
pop
mov
xor
mov
mov
push
ret
loope
adcb
sarb
and
fsubr
lahf
inc
pop
loopne
shlb
mov
bsf
fiadds
mov
aaa
add
mov
ss
dec
and
data16
in
push
inc
in
test
stos
xchg
pop
enter
movsb
and
scas
inc
ja
adc
fucomp
ljmp
lcall
psubq
push
sbb
call
movsb
test
movsb
xor
sub
or
enter
sbb
mov
or
int3
dec
xor
gs
shr
push
xor
aam
bnd
aas
pusha
xor
push
dec
jb
push
jbe
mov
outsl
cmpb
ds
lcall
sbb
push
mov
or
xor
das
dec
mov
pop
in
cwtl
cmpsl
cld
fwait
add
insl
mov
rolb
test
aad
inc
jg
std
mov
sub
movd
pop
pop
insl
sub
scas
add
jnp
sbb
cltd
xchg
mov
dec
xchg
data16
mov
inc
cmpsb
adc
pop
cld
out
in
ret
push
sub
inc
pop
cmc
mov
call
subl
sbb
mov
enter
cmp
jnp
je
jo
adc
jbe
mov
cmc
mov
adc
jp
dec
loope
icebp
dec
pop
xor
push
mov
cwtl
mov
and
and
shld
push
mov
add
mov
inc
dec
scas
adc
mov
and
fldcw
jge
mov
jge
mov
push
cwtl
cmp
jno
dec
out
daa
ljmp
xchg
mov
out
pop
dec
and
sbb
ljmp
adc
int
gs
pushf
jp
mov
adc
dec
das
push
pop
andb
jp
xor
int
mov
dec
pop
jp
mov
scas
dec
and
lock
lock
loopne
in
pushf
cmp
cmp
mov
sub
mov
pusha
xorl
call
je
cmc
movsl
lds
scas
add
iret
or
pop
jmp
mov
mov
out
orb
movsl
sub
push
cltd
adc
sbb
lcall
addr16
dec
inc
inc
push
cli
fildl
push
jp
adc
mov
push
xchg
aaa
or
jae
add
ret
or
sub
fmuls
push
lods
out
cmp
insb
dec
loop
mov
ret
je
iret
adcb
xor
push
jbe
rcrb
lea
cmp
subl
add
lret
addr16
push
fwait
mov
add
jo
loopne
xchg
aad
ret
mov
mov
fnsave
dec
jnp
insb
movsl
pop
mov
pop
fnstenv
cmp
pop
sahf
and
in
xchg
inc
jnp
xchg
repnz
add
sub
sbb
movsb
jns
dec
pop
lock
call
pop
jo
cmp
popf
sub
push
pop
jg
add
xor
mov
sahf
in
icebp
mov
xchg
dec
out
daa
sub
shll
jl
pop
add
add
mov
popa
popa
mov
cmc
dec
aas
loop
sbb
lret
popf
cmpsl
jb
sbb
mov
loop
jl
inc
mov
mov
and
cmpsl
jmp
rclb
pop
jecxz
inc
fldl
inc
xchg
pushf
cmp
je,pn
imul
mov
fsubr
pushf
and
sub
in
xor
add
and
pop
dec
scas
in
mov
aaa
sbb
inc
dec
fadds
shll
fiadds
xor
mov
mov
xchg
xor
add
push
sub
in
ss
in
notb
out
mov
push
push
je
jnp
inc
fbstp
cld
nop
or
rcr
mov
cmp
divl
leave
lret
popf
lret
xor
stos
leave
push
fldl
popa
mov
out
and
adc
cmp
cmp
insl
mov
xchg
cmpsl
imul
repnz
adc
roll
adc
mov
pushf
xchg
outsb
xchg
adc
int
pop
sub
and
mov
dec
add
je
dec
mov
repz
adc
mov
negb
test
shll
shrl
bound
add
jb
push
push
loopw
hlt
push
iret
mov
mov
cmp
dec
mov
addb
sub
sbb
push
push
adc
fsubrl
loopne
loope
int3
jecxz
loop
cmp
mov
adc
and
jle
mov
pop
fists
push
xorl
fdivl
insb
xor
cli
cmp
jge
pop
mov
jne
test
or
jnp
mov
in
ret
or
jns
jae
shl
and
xchg
subb
ljmp
add
jb
dec
ret
pop
jp
cmpsl
out
sub
push
and
xchg
push
int
fs
sbb
leave
cmp
int3
cmpsb
pop
out
or
subb
out
ja
out
pop
xor
decb
notb
lcall
notl
insl
sbb
lcall
dec
xchg
repz
sbb
int
scas
lret
jmp
int3
cmp
loopne
dec
mov
int
cmp
lahf
stos
fcoms
fisubl
mov
inc
sar
je
lcall
add
insl
push
xchg
ja
and
movsl
sbb
push
nop
and
loopnew
mov
mov
push
negl
jmp
outsl
test
outsb
add
in
adc
daa
jl
pop
adc
sub
aad
and
pop
out
les
test
into
cmp
das
push
mov
jno
call
push
cmpsl
xchg
dec
aaa
mov
iret
idiv
fs
mov
pop
ja
push
fisubl
xchg
movups
andl
cs
fcmove
js
out
cmpsl
rolb
and
or
test
arpl
mov
arpl
fnstcw
pusha
ss
imul
in
insb
sti
and
sub
pop
mov
jmp
mov
fnstcw
cmp
in
jecxz
fnstsw
sbb
jo
aad
inc
mov
insl
jge
sahf
cmc
aas
divl
inc
inc
in
ret
subl
popa
xchg
ret
or
lret
cmp
imul
movsl
lock
xor
loope
mov
fisubrs
mov
das
fldt
push
inc
or
or
push
addr16
out
cld
xchg
fadds
pop
lea
loop
mov
cld
push
inc
pop
mov
mov
ljmp
xchg
fucomi
push
pop
icebp
loopne
fdivrs
jg
cmc
dec
dec
outsb
pop
add
test
push
jo
cltd
pop
insb
cmpb
stos
jno
sub
jp
sbb
cs
js
mov
in
out
dec
imul
mull
fdivrl
xor
cmpsb
fadds
lods
loopne
out
xchg
mov
and
mov
adc
fidivrs
sub
sbb
sbb
sub
mov
addl
adc
in
notl
gs
jae
push
dec
insl
xor
shll
sarb
push
mov
xor
enter
mov
dec
insb
sbb
insl
imull
stc
pop
popf
add
dec
iret
lds
loop
pop
dec
push
lock
jne
out
repz
jecxz
adc
inc
xchg
dec
sbb
xor
pop
ja
sub
adc
lret
cld
sub
xor
leave
stos
mov
jle
mov
es
test
ja
dec
test
dec
inc
enter
mov
add
outsl
push
add
pushf
mov
es
dec
or
and
outsb
and
aas
xchg
fwait
ret
adc
xchg
or
adc
xor
addr16
dec
add
cmp
mov
iret
jnp
dec
lds
pop
xor
sti
rorb
pop
push
sarl
mov
insb
fadds
inc
popa
xor
or
ret
fiaddl
mov
out
outsb
sahf
fcmovnb
or
shl
dec
addl
test
dec
cmp
lock
adc
push
xchg
rcrb
and
add
cwtl
movsb
dec
cltd
add
xchg
je
shrl
mov
adc
repnz
mov
sub
int3
mov
adcb
and
inc
adc
es
hlt
mov
jle
out
cmpsl
xchg
test
pop
mov
pop
out
jg
xchg
xchg
sbb
movsb
inc
hlt
mov
push
arpl
rcrl
cwtl
fs
pop
cmp
xor
jmp
mov
mov
and
int
aas
lret
or
sti
push
mov
lock
adc
add
add
dec
lret
push
pslld
and
std
hlt
mov
jnp
cmpsb
xchg
fnsave
cltd
sbb
mov
sbb
mov
inc
data16
lahf
mov
sti
insb
rolb
pop
cltd
data16
bnd
mov
rol
aam
jmp
or
cli
push
push
sub
or
hlt
dec
int3
push
push
push
sub
mov
sub
xchg
pop
arpl
mov
leave
sbb
flds
mov
outsl
mov
push
in
mov
fistps
out
aas
lods
insb
rcll
rorb
in
mov
jl
xor
ret
adc
inc
push
jecxz
andb
cli
push
push
arpl
push
ljmp
pop
sahf
cmp
inc
in
jmp
call
lcall
jmp
gs
bound
sbb
xchg
loope
and
imul
fmulp
daa
or
push
cmp
ffreep
outsb
cltd
mov
mov
inc
xchg
idivl
push
aaa
into
mov
or
fstpl
stos
adcl
push
cltd
dec
mov
in
sbbb
or
fsubl
aaa
jge,pn
sbb
repz
pushf
jecxz
shrl
push
out
xchg
mov
sti
push
xlat
cmp
jae
xor
inc
inc
cmp
repnz
cmp
push
popa
dec
leave
fsubs
push
in
mov
sti
pop
push
push
dec
lahf
pop
cmp
mov
outsl
push
xor
cltd
lock
mov
mov
in
ja
pop
aaa
popf
pop
ret
jns
insl
ret
sbbl
jg
out
add
pop
cmp
imul
sbb
mov
sbb
subl
jecxz
aas
mov
xchg
cmpsb
std
cmp
jb
cli
push
cltd
test
sahf
jbe
mov
ds
mov
jecxz
or
jb
aam
je
rcrl
mov
sar
and
cmp
sahf
cmp
dec
adc
pop
or
mov
scas
hlt
sti
sbb
imul
xlat
mov
jle
jge
sub
data16
clc
push
addr16
stc
mov
fmull
sub
jg
dec
xlat
pop
jne
pop
push
xchg
mov
jle
or
enter
add
add
popf
xor
inc
test
ljmp
push
sbb
arpl
insl
xchg
mov
add
mov
pop
mov
fucom
jle
cmp
stos
lds
inc
pop
push
pop
mov
call
cmp
lods
sahf
cmp
sbb
sbb
push
test
mov
je
aaa
stos
xchg
and
add
repnz
and
cmpsl
push
ljmp
daa
popa
pop
popf
cmp
mov
test
adc
aas
inc
enter
and
je
and
stos
ljmp
jg
sbb
repnz
aad
push
icebp
and
movnti
sub
in
pushf
gs
push
in
nop
inc
mov
imulb
imul
int3
int3
jg
shlb
aad
ficoml
push
lods
inc
mov
xor
and
push
mov
xor
mov
iret
pop
rorl
xlat
fnstenv
jl
popf
jbe
testl
test
xor
pop
adc
inc
cmpsl
fcmovu
xchg
dec
sub
fistpll
lcall
test
stos
sub
sbb
ret
mov
clc
jg
mov
mov
data16
or
push
pop
jbe
and
cmc
dec
hlt
xlat
inc
push
or
repz
adc
into
push
adc
lret
and
dec
xchg
ret
inc
lahf
jns
lods
push
ret
pushf
and
push
rcr
dec
push
std
je
es
scas
fdivs
and
mov
dec
out
in
sub
sbb
adc
jo,pn
xlat
hlt
fadds
jecxz
repz
ss
xor
xchg
add
pushf
cli
push
dec
shll
xchg
dec
xor
ljmp
mov
or
bound
mov
movsl
dec
aas
push
jge
cltd
jae
jne
add
mov
cmp
pop
lock
add
adcl
add
sub
sbb
add
add
js
jns
in
push
daa
in
shl
pop
add
xchg
cmp
shr
cmp
push
pop
pop
add
add
cmpsl
stc
cmp
sub
push
or
rcll
jne
notl
mov
jns
push
xor
lcall
and
fnsave
jmp
mov
fidivl
add
inc
inc
test
xlat
adc
mov
sub
repz
repz
sub
int3
mov
jg
icebp
loopne
sbb
pop
lock
popf
cli
add
daa
xchg
inc
push
sub
xchg
outsl
adc
ss
daa
xor
fwait
mov
fmulp
fidivs
daa
adc
rcll
xor
les
or
out
movsl
icebp
out
mov
lods
xchg
out
ds
cwtl
cld
mov
cmp
mov
idivb
inc
stos
mov
xchg
test
mov
xchg
cs
add
aaa
mov
or
cmp
in
adc
dec
lret
lods
gs
cwtl
push
inc
repnz
insl
jnp
dec
out
cmpb
add
rcrb
in
out
out
add
sub
mov
push
in
inc
and
in
xor
pop
mov
cmp
lcall
fwait
jno
notb
push
lods
xchg
les
dec
bnd
into
gs
cmc
adc
lods
xlat
insb
test
test
leave
push
in
into
adc
push
call
hlt
outsl
push
daa
and
or
xor
mov
lds
sbb
adc
pushl
push
push
loop
outsl
jmp
adc
loopne
cmpl
loopne
dec
and
cs
lret
cmp
cmp
and
jmp
sub
aas
pusha
sar
inc
lods
mov
dec
xor
pushf
dec
aad
daa
and
loopne
fstpt
cmc
lret
js
inc
scas
mov
lret
and
jmp
push
mov
mov
int3
pop
pop
sub
pop
mov
enter
pop
out
aas
sbb
movsl
cmp
sub
add
rcrb
mov
sub
stc
pop
inc
out
mov
inc
fldl
popa
in
das
daa
sub
dec
popa
sbb
push
sub
test
lret
inc
fistpl
rcrl
test
loop
push
ficoms
out
jns
test
mov
sub
pushf
sbb
push
lret
add
movsl
in
fdiv
dec
outsl
inc
fldenv
cli
loopne
lea
xor
call
and
test
cmpsb
aas
or
ret
and
xorb
push
and
lret
jb
pop
mov
dec
in
cmp
sbb
repz
xlat
and
cmp
dec
xor
ja
xor
ds
call
dec
mov
and
arpl
enter
push
clc
cmp
test
inc
sub
fmul
lods
popa
inc
insl
leave
jne
mov
jecxz
sub
inc
xchg
loope
xor
inc
mov
or
push
dec
int3
mov
xor
push
xchg
jle
or
mov
pushf
enter
loop
dec
xor
mov
popa
jmp
push
mov
insl
jae
or
es
pop
mov
fwait
mov
lcall
stc
rcrl
loope
testl
hlt
test
popf
push
cmpsl
pop
loopne
and
jo
xchg
addr16
inc
fcmovb
shr
add
stos
mov
gs
cli
sub
lret
orl
hlt
mov
sbb
ret
adc
insl
dec
dec
sub
sbb
cmp
roll
adc
xchg
shrl
push
pop
pop
pop
sub
incb
sub
add
popf
and
xor
cmp
inc
mov
les
lock
jle
mov
int3
das
sub
mov
mov
xor
clc
dec
mov
insl
imul
pop
sahf
fwait
cld
sub
icebp
xchg
dec
jno
adc
out
rcl
fsubr
stc
push
inc
test
or
push
jmp
add
ds
xchg
mov
in
jmp
fisubl
inc
aad
ds
fcomi
int
icebp
mov
cmp
daa
pushf
sbb
int
pop
adc
mov
fiaddl
das
xor
loopne
push
sbb
lea
ret
push
lock
ja
dec
jmp
xchg
out
sbb
mov
mov
xchg
jge
test
mov
pop
insl
aam
dec
cmp
lcall
in
shr
jl
test
call
fldenv
xor
mov
jns
dec
in
jmp
imul
fwait
cmp
mov
test
sbbl
inc
leave
call
lret
cmovb
pop
mov
adcl
mov
scas
cmp
test
rcll
dec
imul
and
repz
ret
repz
lods
jmp
subl
xchg
xor
into
fcoml
cmpsb
cmp
push
imul
inc
shlb
or
mov
lods
js
out
xor
lahf
xor
inc
cltd
call
and
pop
repz
fcomi
mov
les
outsl
test
leave
repnz
mov
and
sbb
decb
or
cwtl
fadd
dec
pop
in
lds
cmc
lret
lret
stc
push
prefetch
or
fmull
mov
and
hlt
adc
mov
and
repz
and
out
push
ljmp
aas
adc
loopne
ret
push
loope
cmpsb
adc
dec
inc
sbb
iret
fidivrl
loope
inc
icebp
and
mov
jle
push
pop
jae
adc
sub
and
fwait
cs
jae
jae
fnstcw
rorl
xchg
inc
enter
test
jne
jmp
lea
adc
mov
xor
jne
jecxz
mov
push
out
shll
outsb
adc
mov
shrl
mov
out
add
rorb
fsub
notl
pop
mov
lea
cltd
lods
popa
adc
push
int
imul
lcall
loopne
outsl
lahf
add
shr
aaa
add
jnp
jne
lret
andb
sbb
pop
insl
jnp
push
mov
inc
jge
jns
out
clc
xchg
mov
in
sti
test
lret
and
mov
fs
ret
shl
pop
fnsave
shrl
adc
bound
sub
hlt
les
jl
jne
jecxz
or
test
pop
shll
lods
subl
sbb
jno
and
jle
sahf
call
pushf
pop
xorb
mov
push
xor
daa
into
jns
xchg
xor
lods
jne
lret
aaa
xlat
xor
jecxz
rclb
ret
mov
notb
sub
or
sbb
cmp
mov
dec
push
std
insb
push
das
je
dec
xchg
or
icebp
aam
push
mov
cmp
mov
les
je
scas
jnp
mov
xchg
mov
pop
aas
push
inc
fists
xor
pop
test
xorl
or
sti
push
clc
adc
repz
xor
push
mov
insb
add
pop
fists
adc
popa
dec
pushf
jg
jle
xchg
jo
repnz
out
mov
mov
loope
les
cmp
xor
cmpsb
mov
jle
mov
mov
sbb
inc
xchg
cmpsb
cmp
fsts
dec
out
lock
jmp
movb
mov
pop
add
pop
and
sahf
cwtl
repz
adc
jmp
in
cs
mov
sahf
xchg
fadds
lret
aaa
cmp
rcrb
mov
jecxz
mov
fldl
mov
decl
and
sti
xor
mov
rcl
inc
in
pop
cmpsl
cwtl
das
sbb
xor
xor
cmp
sbb
pop
cwtl
hlt
dec
inc
pop
nop
adc
lret
and
or
aas
xchg
xchg
mov
scas
dec
jmp
test
adc
cmp
mov
imul
and
and
lcall
repz
push
fcoml
mov
mov
int
mov
pop
fadd
int
es
test
xchg
out
dec
pop
test
pop
test
shrb
arpl
int3
stos
int
movsl
ja
push
jmp
mov
fsubrs
inc
sbb
sbb
mov
imul
dec
pop
insl
push
hlt
push
cmpsb
xor
sub
aam
mov
or
cmpsl
cmp
lock
cmp
outsb
insb
xor
mov
xor
jo
pop
cli
mov
mov
and
adc
pop
and
mov
movsl
cld
or
pop
xchg
loopne
sub
pop
pop
enter
adc
add
dec
loopne
cs
fwait
aad
addr16
push
out
mov
cmpsl
mov
sti
mov
xor
or
pop
pop
fxtract
cmp
lcall
mulb
and
std
adc
cmpsl
sti
fidivrl
das
xorl
jle
hlt
rcr
add
addr16
push
cmp
adc
sti
cltd
pop
jae
add
dec
mov
mov
jnp
jmp
popf
or
out
repnz
popf
dec
jge
movsb
cmp
ficoms
sub
lahf
jecxz
inc
jg
fmul
out
std
gs
xor
bound
je
mov
into
mov
or
addb
cltd
mov
inc
xor
xor
xor
fisttps
adcb
push
in
or
jae
xor
imul
adc
lcall
jbe
cltd
lcall
lea
and
test
bound
sub
aas
test
or
movsl
adc
divl
and
mull
jnp
movaps
mov
movq
adcl
lcall
xlat
push
adc
inc
repz
jle
xchg
mov
shrl
sub
xchg
jbe
cmpsl
imul
gs
cmp
in
pusha
dec
mov
sub
out
enter
jns
sahf
lods
repz
adc
insl
add
xorb
pop
fcoml
add
loope
jbe
sbb
jae
scas
negb
scas
les
lds
outsb
sub
test
cmp
lods
sub
adc
mov
jmp
mov
jmp
mov
xchg
test
fiaddl
repnz
test
mov
jb
inc
fsubl
arpl
testb
imul
or
repz
es
mov
fyl2x
out
cmp
int3
addb
inc
dec
mov
insl
mov
cmp
dec
xor
inc
push
xchg
pop
enter
fimuls
imul
cs
sbb
lret
shl
cmp
stc
inc
cwtl
stos
cmpsb
xor
cmpsb
mov
sub
fcmovb
js
pop
push
jne
xorl
daa
xchg
es
imul
cmp
jns
rcrb
or
add
stos
ret
sti
or
lcall
jae,pt
out
pop
mov
jmp
call
add
outsl
adc
lahf
push
test
add
pop
pop
mov
lahf
cmp
and
and
out
xor
cmp
call
sti
pop
ljmp
repnz
repnz
cs
jl
add
aad
jp
push
mov
fisttpll
int
negb
mov
dec
fbstp
dec
mov
push
loope
fldenv
add
cmpsb
mov
gs
or
add
cmp
cmp
push
call
mov
mov
add
inc
push
jns
rcr
adc
push
leave
push
mov
ljmp
dec
and
test
ja
or
pop
repz
lods
lds
cmpsb
mov
lret
sub
loope
cmp
mov
adc
rclb
xor
jle
mov
subb
xchg
in
jle
lds
or
adc
repz
in
push
add
push
fnsave
cmp
jbe
repz
adc
popf
jae
ljmp
fcmovb
pop
shll
data16
push
pop
cld
cmp
add
or
hlt
in
mull
add
fbstp
andl
stos
mov
mov
lods
scas
testl
arpl
pop
movsl
pop
fucomi
pop
shl
xor
mov
mov
mov
add
jg
adc
leave
sbb
mov
sti
addr16
jbe
aas
enter
lods
orb
inc
sub
fwait
lret
loop
fmull
push
mov
pop
push
je
jp
xchg
or
imulb
shlb
jns
clc
dec
inc
cmpsl
insb
das
xchg
lock
sti
cltd
pop
adc
es
popf
xor
cld
dec
mov
adc
mov
jmp
lods
inc
push
xor
std
shl
out
cwtl
loope
adc
add
inc
ret
icebp
add
mov
jecxz
xor
fimull
test
aam
shrl
xchg
inc
pop
loopne
lods
iret
pop
lret
inc
xor
jne
xlat
repz
roll
ret
sbb
dec
mov
xchg
sub
push
ret
inc
inc
sbb
decb
lahf
dec
lea
mov
xor
lods
push
and
add
xor
stos
and
out
xor
aas
insl
sbb
movsl
lds
pop
xor
pop
clc
lock
cmp
ret
outsb
sub
fisubs
pop
pop
pusha
sub
pop
dec
arpl
push
jae
or
mov
sub
sahf
or
adc
push
scas
je
shlb
push
cwtl
hlt
push
pop
js
add
add
inc
push
ret
mov
imul
jmp
psrad
add
movl
cmp
jno
inc
aas
cmc
jns
xlat
mov
jp
dec
inc
cld
mov
sub
or
shl
pop
arpl
dec
pop
dec
aas
sub
pop
mov
nop
jl
xchg
and
dec
jb,pt
in
rcrl
pop
mov
add
mov
adc
ret
pop
imul
xchg
shlb
cmp
pop
lock
fisttpll
or
ja
jp
pushf
stc
adc
jl
mov
fisttpll
mov
imul
ror
repz
inc
cli
jecxz
jecxz
hlt
mov
cwtl
mov
mov
push
aaa
add
scas
or
push
das
pop
pusha
adc
cmpsb
mov
jne
ja
mov
mov
jae
push
push
push
jo
push
jbe
push
dec
jae
or
pop
fists
sbb
pop
scas
add
cwtl
or
cmc
sti
hlt
cmp
add
repz
push
jmp
movsl
je
mov
in
push
cltd
pop
fs
data16
or
add
lods
out
adc
inc
sub
jne
outsb
inc
xor
loopne
imul
add
outsb
add
mov
fldt
arpl
inc
mov
lds
pop
xor
test
jl
mov
stos
mov
pop
lock
out
cmp
out
sub
aaa
pop
das
in
aas
adc
xor
jecxz
jb
add
add
mov
lds
mov
iret
mov
je
mov
xchg
loope
dec
lcall
test
ja
push
adc
mov
cmp
sahf
mov
xor
or
repz
xor
repz
rorl
pop
movb
cmpl
adc
lds
ffree
mov
adc
pop
sbb
inc
jnp
jo
lcall
pop
lret
xlat
int3
sbb
pushf
and
jle
xor
mov
dec
cmp
arpl
and
lds
sbb
sub
ljmp
cmp
mov
cmpsl
dec
pop
sbb
aas
dec
mov
mov
cmc
inc
jecxz
nop
xor
pop
ja
rorb
loope
cmpsb
mov
fimull
fs
xor
xchg
test
dec
xchg
cmp
int3
adc
mov
mov
and
mov
pop
xor
out
movsl
lock
sub
or
and
sub
orb
fwait
in
std
push
lds
pop
dec
insl
fistl
in
fisttpll
and
ret
lahf
cmpsb
fsts
xor
cmp
mov
mov
stc
sbb
inc
xchg
inc
xor
or
in
test
xor
lahf
mov
add
insl
add
ja
dec
mov
dec
ds
add
rorb
pop
jb
pop
sub
add
gs
pushf
jle
fsubrs
std
sbb
jbe
aaa
arpl
push
jbe
scas
into
and
in
cmpsl
mov
mov
std
mov
add
add
ss
in
jg
cwtl
test
aad
or
mov
dec
in
lods
push
sti
mov
fwait
add
sbb
fdivrs
sarl
inc
mov
ret
xchg
sub
mov
mov
push
out
bound
insl
scas
lock
dec
inc
mov
ja
decb
push
push
push
popa
dec
ja,pt
cli
test
lret
cwtl
addr16
jo
lahf
mov
push
lcall
icebp
mov
rcrb
jp
aaa
inc
repnz
or
inc
stos
xor
daa
loop
std
test
or
and
enter
push
push
pop
inc
out
je
ret
dec
jo
ja
mov
sub
dec
das
addr16
push
insl
js
outsl
mov
stos
sbb
mov
cmc
sub
jns
aaa
bound
sbb
fdivr
outsl
adc
xchg
aam
faddl
xchg
subl
push
shll
adc
test
pusha
test
or
jl
mov
imul
push
xor
jg
movsb
lods
pop
adc
cli
or
ret
push
xor
in
jp
mov
push
adc
addl
cs
dec
cmp
dec
mov
xor
mov
dec
xchg
mov
mov
test
mov
sbb
lds
fstp
pop
cli
arpl
repz
fcmovnbe
aaa
push
mov
lcall
sub
mov
cmpb
and
ss
sub
push
rcrb
sbb
iret
int
push
sbb
or
stc
pop
pop
scas
pusha
xlat
mov
push
loopne
pop
adc
push
jo
inc
stc
jle
jp
insl
mov
adc
sbb
add
or
pop
into
dec
out
popa
inc
data16
xor
repnz
pop
icebp
adc
push
icebp
outsb
das
mov
fsubrs
cmp
notl
sti
mov
jmp
mov
jb
loope
loop
cli
test
sbb
vcvtpd2psy
loop
rorl
mov
adc
gs
ss
fs
or
jp
xor
mov
xor
xchg
mov
inc
cmpsl
cwtl
aam
shlb
add
movsl
ss
or
dec
cltd
adcb
sbb
je
movsl
dec
btr
or
xor
xchg
nop
or
dec
xchg
hlt
repz
xchg
pop
lds
mov
push
sub
pop
in
dec
ljmp
clc
andl
push
rcrl
sbb
mov
sub
mov
xchg
popa
mov
filds
and
xchg
jp
int
je
shrb
stos
je
jae
add
fsubr
ret
xor
sub
pop
xor
pop
mov
ljmp
popf
aas
cld
test
into
dec
in
loop
fists
pop
out
push
mov
movsl
push
dec
lock
imul
mov
push
fbld
fsubrl
dec
arpl
dec
clc
mov
push
cld
dec
ss
mov
repnz
xor
adc
xchg
mov
clc
push
mov
mov
cmpsl
cmp
mov
xchg
mov
xor
mov
mov
in
addr16
int
mov
loopne
mov
popf
jns
mov
jno
pushf
scas
aas
fisttps
or
pop
xor
xchg
das
ret
inc
out
mov
nop
jle
repnz
out
ret
jbe
xchg
mov
xchg
or
stos
test
add
mov
setl
mov
cmpsb
mov
add
out
js
in
incb
cmp
dec
in
dec
add
push
in
movsl
loopne
pushf
lds
cwtl
jae
sarl
pop
or
cmpsl
dec
and
jg
jmp
mov
fnstenv
nop
dec
les
jp
xchg
pop
xor
bound
pop
mov
fs
push
inc
cmpsl
cmpl
scas
movsb
sub
lds
mov
js
mov
sahf
xor
push
icebp
mov
addb
sbb
mov
pop
mov
sub
sbb
clc
bound
ret
push
lcall
inc
iret
fiadds
mov
sub
or
adc
inc
shl
mov
mov
repnz
ffreep
sub
out
adc
test
sbbl
call
mov
pushf
scas
and
stos
push
adc
fsubrs
mov
scas
add
es
inc
xor
add
not
leave
test
sahf
lahf
sub
sub
jmp
cmp
cmp
ljmp
jmp
mov
mov
jo
sub
or
push
push
rorl
test
xor
xor
adc
int
xchg
fldt
mov
xchg
out
je
xor
pop
jecxz
xchg
lcall
shld
cmp
loope
ror
fcomip
divl
jl
push
movsl
repz
or
cmp
push
and
out
testl
inc
test
ja
loopne
inc
in
or
stc
rolb
add
mov
cs
xchg
bound
mov
adc
insb
add
sahf
ljmp
adc
rol
jno
pop
shrb
mov
xchg
cmp
je
ds
in
adc
stc
es
sub
movsl
cmp
popf
in
mov
fstps
xor
mov
inc
dec
popa
jnp
pop
lods
adc
ss
and
hlt
push
push
aaa
test
stc
adc
mov
adc
inc
dec
fstpt
push
mov
fnsetpm(287
mov
or
adc
mov
xor
and
lds
addr16
gs
fbld
lds
push
dec
or
out
push
mov
jmp
and
inc
aad
lods
gs
lret
sub
roll
jb
add
cmp
push
sub
nop
jle
jns
push
mov
insl
jnp
xlat
mov
adc
and
mov
jae
ret
mov
dec
pop
lods
and
hlt
push
ljmp
jo
sub
xor
mov
cmp
inc
sub
call
fisubl
outsl
daa
les
mov
jae
cmp
xchg
aaa
xor
bound
jmp
incb
fistl
xchg
mov
aam
ds
repnz
add
and
and
hlt
or
orb
pop
das
mov
nop
negl
push
divl
sub
jns
dec
xor
sbb
mov
mov
mov
ror
dec
jge
insl
add
lods
aaa
test
decl
hlt
sub
pusha
lahf
mov
iret
movsl
out
mov
nop
inc
testl
adc
push
lret
rclb
adc
dec
cld
mov
or
add
sahf
in
scas
js
ljmp
dec
dec
hlt
or
ret
and
xchg
test
push
xor
mov
into
in
sarl
xorl
or
pushf
cli
mov
stos
mov
mov
stos
repz
lret
dec
shlb
out
sahf
rorb
data16
ja
rorb
lret
mov
inc
shrb
les
jno
sti
dec
xchg
pop
orb
int3
push
sub
mov
loope
fcoml
lea
cmp
pop
pop
fidivl
push
add
in
sub
sbb
mov
jnp
mov
ss
addr16
pop
out
gs
icebp
test
test
push
bound
mov
inc
xor
es
sub
pop
enter
mov
lds
dec
jecxz
cmp
mov
fimuls
adc
popa
lods
lds
rorb
lret
lods
test
pop
adc
jns
and
addr16
sbb
xchg
lret
cltd
lret
jno
and
data16
push
push
add
pushf
aaa
pop
and
add
inc
pop
adc
imul
inc
mov
sbb
mov
push
icebp
adc
sbb
pop
repz
xchg
loopne
add
sub
je
ficoml
cmpsl
out
xchg
sbb
mov
and
dec
xor
int3
add
mov
add
xchg
loopne
ljmp
popa
add
mov
push
leave
xlat
das
adc
loope
int3
pop
pop
shlb
imul
loope
add
and
xor
xchg
ja
jae
mov
lahf
insl
dec
add
jl
and
xchg
cmp
pushf
mov
arpl
adc
adc
loopne
shrb
adc
jp
inc
movsb
adc
mov
je
lds
outsb
out
sbb
lret
fists
cmp
sub
push
sarl
push
daa
dec
aam
arpl
mov
mul
cmp
mov
jae
mov
inc
push
in
hlt
jg
and
mov
shrl
mov
or
mov
fisttpl
push
in
mov
sub
in
pop
push
pop
andb
pop
or
cmp
data16
icebp
xchg
gs
loope
cwtl
xor
divb
lods
dec
loope
mov
mov
push
in
sub
jno
xchg
pushf
jae
mov
enter
inc
lds
ss
popf
sti
pop
pushf
lock
dec
pop
test
data16
in
cmp
ficompl
in
inc
scas
cmp
add
stos
out
pop
xchg
dec
push
xchg
in
icebp
loope
filds
out
ja
adc
cltd
push
das
dec
mov
push
sub
aad
popl
pop
jbe
dec
cmpsl
mov
or
cmp
clc
sti
push
mov
sahf
push
xchg
lret
xchg
in
insl
test
leave
mov
ficoms
sub
mov
clc
movl
mov
rolb
mov
jnp
leave
sbb
insl
faddp
xchg
sub
into
cmc
cwtl
mov
jl
pop
out
cltd
test
lcall
cmpsl
sub
mov
jge
jmp
add
int
push
mov
mov
lret
call
test
ja
lods
rcrb
pop
add
fwait
dec
mov
push
mov
add
pop
mov
popf
or
movsl
adc
lds
inc
fdivl
or
push
test
dec
push
xor
push
push
stc
test
outsl
add
lock
aad
imull
insl
ror
push
cmc
or
pushl
mov
lods
inc
test
lret
pop
sbb
pop
scas
ficomps
pop
adc
mov
mov
roll
mov
incl
jbe
add
xchg
push
mov
in
cwtl
subb
bound
gs
mov
inc
addl
ficompl
fcmovnb
negl
nopl
bnd
xor
jmp
pop
in
rorl
cmp
mov
pop
dec
dec
fadds
aas
cld
inc
dec
int
or
dec
xlat
decb
lcall
cwtl
imul
mov
mov
iret
jecxz
push
pushf
add
fs
popa
sbb
repnz
aam
call
testl
das
jle
aad
jae
inc
loope
or
or
addl
cmp
adc
xor
inc
xor
and
add
push
roll
arpl
dec
adc
xchg
or
inc
mov
out
add
sub
rorl
or
mov
fldl
stos
and
cmp
mov
movsl
dec
mov
cmp
cmp
stc
mov
push
jp
mov
mov
fstps
or
jl
and
loopne
int3
jb
repz
andl
icebp
outsb
or
icebp
sbb
pop
and
jge
out
or
xor
imul
dec
jecxz
xor
mov
pushf
mov
or
dec
and
adc
rolb
jle
outsb
popa
inc
pop
lret
or
or
scas
push
sub
aaa
xchg
in
push
outsl
mov
cli
in
push
push
int3
push
into
push
jmp
lods
ljmp
mov
cli
add
cli
dec
divl
mov
mov
push
mov
dec
mov
inc
push
xor
leave
xor
in
mov
aas
incl
cltd
pop
xchg
sub
in
mov
cltd
xor
out
jns
ror
nop
cld
cmc
scas
iret
sbb
xor
dec
enter
xlat
pop
call
mov
pop
mov
mov
mull
daa
bswap
push
and
sbbb
ret
idivl
inc
inc
jl
ja
fldenv
push
js
outsl
inc
test
nop
jbe
xchg
sub
sub
dec
shrb
push
and
cld
sub
sub
push
int3
fcomp
sub
jo
mov
clc
ja
les
pop
insl
push
pop
ja
pop
and
xchg
insl
jnp
arpl
sbb
mov
inc
jb
fcoms
test
jns
push
xorb
rcll
xchg
movsb
push
or
jns
and
ret
ficoml
push
and
lahf
int3
out
dec
add
insl
jbe
mov
dec
sbb
fdivs
mov
dec
push
pop
jmp
cmc
mov
in
pop
cmpsb
rolb
stos
jae
aad
push
pop
xor
pop
fadd
xor
mov
adc
jge
mov
push
dec
ret
lods
adc
ficompl
dec
inc
adcb
dec
arpl
mov
xor
shrb
xchg
sbb
mov
pushf
call
fstl
xor
add
or
push
xor
push
xor
add
cli
mov
loope
loop
sub
jo
mov
mov
cwtl
out
imul
inc
jecxz
fs
and
mov
add
add
lahf
mov
cld
cmp
push
testb
xchg
negl
sub
add
jp
inc
cwtl
pop
cmp
push
cmp
outsb
out
rol
cmp
test
mov
outsl
lds
fidivs
fcomp
into
mov
push
je
in
pop
lods
ret
jo
mov
sub
movsl
int
lahf
rcrb
pop
ljmp
mov
push
mov
gs
insb
cwtl
das
pop
mov
sbb
ds
cwtl
das
push
loopne
sub
pushl
in
pop
inc
pop
xor
imul
out
or
lret
fisubs
adc
cmp
in
push
popa
jmp
pop
add
sub
fsts
bound
popa
ja
dec
test
mov
lods
loopne
sbb
inc
call
negl
mov
cwtl
sub
sahf
ret
cmpsb
and
push
fidivl
mov
pusha
xchg
mov
adc
add
sub
mov
jbe
dec
cmc
jae
sub
pop
jae
add
shrl
cmp
pop
push
or
fsubl
mov
insl
cmp
icebp
loopne
stos
or
fisttpll
sub
loopne
dec
or
icebp
movsb
jecxz
adc
mov
into
in
fnstsw
xchg
dec
pusha
inc
mov
das
imul
dec
notl
and
mov
outsl
ret
push
shr
push
mov
inc
mov
sti
sub
shlb
mov
add
add
mov
fidivs
push
rcrl
and
or
iret
jmp
jp
cwtl
aas
bound
gs
divl
add
into
inc
add
mov
jne
add
aam
std
cli
dec
mov
imul
and
sbb
inc
pop
jae
lcall
pop
decl
jo
divb
adcl
push
popf
mov
xchg
and
lods
mov
sub
andb
les
cmp
add
xor
ljmp
or
roll
orb
sbb
pop
fwait
loopne
sub
mov
dec
mov
cmp
adc
lahf
ja
pop
outsb
mov
js
or
cmpb
lods
call
fidivrl
mov
and
inc
test
insl
js
jo
adc
mov
movsl
cmp
mov
xchg
jbe
fisubs
rep
and
imul
sbbb
push
stos
xchg
add
fucomip
into
in
cltd
out
je
mov
inc
push
jbe
imul
repnz
sti
inc
outsl
adc
xchg
lret
fs
dec
daa
insb
xor
arpl
cmp
dec
jg
outsb
sar
lcall
cmp
and
push
test
pop
inc
jbe
mov
in
or
push
jo
cmp
cmp
sbb
xchg
or
sub
movsl
lds
dec
add
jle
mov
adc
jne
popa
sarb
xor
test
xor
or
or
fucomi
adc
cli
xchg
pushf
mov
add
jbe
lea
fildl
mov
push
jge,pn
adc
test
loop
xor
icebp
lock
gs
mov
cmc
imul
mov
pop
test
lcall
push
ds
out
jno
push
push
cmp
addl
iret
sbbl
inc
scas
imul
dec
push
dec
inc
arpl
int
jb
sbbl
testb
test
dec
in
fwait
push
fstpl
mov
adc
loop
fisttpl
gs
test
fiaddl
add
mulb
push
push
test
aad
jge
in
imulb
cmpsl
sti
jge
ret
scas
daa
aad
sub
shlb
jge
les
into
push
push
fcoml
es
cli
mov
xor
mov
bound
pushl
mov
addl
clc
push
shr
lcall
es
fs
xchg
pusha
mov
sahf
add
data16
inc
insb
sahf
lds
xchg
dec
and
sti
mov
test
sbb
jno
mov
ror
loop
mov
sbb
shr
mov
fldcw
lea
mov
rcll
jecxz
icebp
into
lock
mov
sbb
repz
cmp
cmpsl
dec
sbb
jp
cs
adc
xorl
andb
xor
jg
nop
ficoms
lret
xchg
pop
push
jno
push
pop
jb
push
fs
adcl
jns
jb
inc
lods
sbb
mov
nop
adc
xlat
and
add
cltd
mov
ret
repz
in
xlat
or
xor
fldcw
out
add
jnp
add
push
sbb
and
mov
sbb
mov
mov
or
movsl
mov
loope
dec
cmp
mov
je
adc
or
insl
stc
std
jo
pop
fidivl
out
jg
push
add
jl
arpl
mov
loop
mov
mov
call
subl
addr16
fstpl
scas
push
mov
dec
xchg
out
push
pop
xchg
mov
jle
vmread
jne
mov
mov
dec
sarl
dec
lahf
les
lret
and
jo
and
jecxz
loop
push
aad
rol
ss
jne
fstl
int
sbb
fs
lahf
pop
mov
xchg
cs
add
out
enter
dec
mov
sahf
addr16
aaa
aad
repz
shrb
add
xchg
insb
outsl
adc
inc
push
call
clc
push
cltd
ret
outsl
lock
popf
out
cld
stc
inc
mov
xlat
fwait
xchg
sub
add
dec
imul
ror
jnp
inc
mov
std
sub
push
pusha
cmp
push
xor
sbb
dec
cmpsl
xchg
imul
sbb
jae
lcall
mull
sbb
xorb
sbb
out
and
mov
popa
push
sbbl
fisubl
jl
xor
dec
addb
sub
ss
push
out
popl
in
cmpps
push
cs
pop
outsl
jnp
arpl
xchg
push
clc
fidivl
jae
int3
mov
push
mov
sub
lock
mov
cmpsl
rclb
mov
sar
mov
shll
loopne
inc
dec
dec
xchg
hlt
in
dec
mov
pop
out
inc
fadds
in
sub
pusha
cmpb
mov
movsl
fs
push
push
nop
sbb
add
push
xor
mov
fsubrs
shll
fidivrs
cld
xchg
pop
mov
jle
push
xor
push
out
test
mov
ds
push
test
fisttps
mov
jmp
cmpsl
int
rolb
int
or
cmpsl
or
aad
ljmp
lods
mov
pop
jg
push
jbe
pop
pop
scas
or
sub
or
scas
or
aad
and
mul
jecxz
sbb
pop
mov
fiaddl
and
insb
fistpll
inc
mov
mov
cld
cli
add
inc
movsl
cld
lcall
jae
out
mov
iret
mov
add
add
repz
jmp
adc
jne
aaa
push
mov
lds
lods
mov
arpl
in
insb
je
cltd
xchg
mov
ret
adc
and
sub
mov
test
icebp
inc
add
insb
js
imul
adc
out
movsl
pop
push
sbb
dec
dec
pop
mov
loope
je
imul
dec
sbb
adc
enter
lock
fmul
or
or
ljmp
scas
xchg
mov
pop
adc
xchg
mov
pop
test
mov
pminsw
cmp
into
ss
lret
js
sub
mov
xorb
xor
fstps
movsb
xor
cmpsb
jp
push
mov
xchg
sbb
xchg
sbb
stc
mov
mov
pop
xchg
aas
test
jl
popa
rcll
sbb
sub
xor
sarl
xchg
ror
sbb
addr16
aas
outsl
shll
orl
inc
or
test
stc
rcll
mov
lods
mov
mov
lock
push
sub
inc
mov
xor
inc
mov
mov
mov
cwtl
or
jmp
in
cmp
cli
or
pop
sub
push
ret
adc
sbb
jne
jmp
jp
jg
adc
pop
lea
mov
jne
inc
roll
ljmp
pushf
andb
outsb
loopne
adc
jg
ss
imul
push
mov
test
test
inc
out
sub
loopne
and
lcall
jb
popf
test
call
imul
pusha
or
mov
addr16
mov
push
mov
lcall
add
in
xchg
xlat
aam
aam
popf
or
pop
inc
lea
repz
rcrl
sbb
sub
mov
or
cmp
sbb
clc
iret
in
rorl
push
jl
mov
pushf
ror
outsl
ljmp
repz
ret
cmc
cmp
dec
bound
in
popa
cs
fstps
andl
mov
push
xchg
pusha
cltd
mov
mov
pop
sub
cmp
inc
notl
in
dec
test
push
sahf
add
xchg
roll
push
cmp
je
dec
sahf
jecxz
xchg
aad
xlat
shlb
in
in
jp
mov
cwtl
xchg
xor
inc
shl
jp
ret
cltd
movsl
in
jb
push
xchg
aam
mov
or
call
leave
xchg
lods
add
dec
sar
das
pop
adc
test
mov
mov
in
or
and
and
lcall
icebp
inc
and
stos
xchg
add
jle
or
andb
aaa
push
clc
out
negl
in
sbbb
add
ret
lret
clc
pop
daa
inc
push
inc
movsl
or
mov
insb
jl
loope
pop
adcb
ds
jmp
pusha
dec
push
add
push
xor
cwtl
icebp
jle
icebp
jne
lods
fbstp
aad
mov
fnstsw
mov
fwait
push
insl
add
frstor
lret
ss
inc
push
cmp
jne
shr
out
int3
dec
mov
bound
in
pop
sub
popa
xlat
scas
add
ss
testl
xor
imul
sbb
mov
ss
daa
xlat
rcrl
push
stc
cmp
les
cmp
mov
dec
push
jge
sub
loope
pop
sti
out
out
mov
pop
jge
ret
ror
loopne
test
sub
sbb
sbbl
mov
rol
jmp
out
aam
push
movsl
cltd
ffreep
pop
in
aam
inc
and
rolb
stos
mov
mov
les
insb
fnstsw
mov
xchg
push
mov
add
out
adc
and
xchg
inc
push
mov
fistpl
stc
popf
sbb
stc
pushf
movups
push
repz
cmp
mov
repz
xor
inc
call
xlat
adc
push
inc
add
test
or
in
pushf
sub
jmp
xchg
sub
or
mov
jns
aas
decl
out
sbb
div
jno
jnp
insb
jo
or
jecxz
cmp
push
dec
sbb
cli
xchg
xchg
xor
cmc
cmp
cmp
loop
dec
fisubl
mov
adc
gs
sbb
jg
cmp
xorl
aad
dec
imull
cmp
pop
jo
dec
loop
es
repnz
iret
mov
fucomp
sbb
sub
jne
push
sti
test
cmp
add
mov
add
scas
adc
popa
pop
idivb
pop
in
push
cmp
push
stos
insb
mov
pop
in
iret
xor
adc
or
fisubl
dec
mov
sub
mov
ss
lcall
push
cmpsb
jae
xchg
xor
inc
je
negb
cmpsb
adc
cwtl
popl
and
xlat
flds
adc
mov
pop
jmp
sbb
arpl
add
popf
jns
or
inc
arpl
imul
dec
add
call
sahf
adc
outsl
pop
jo
and
scas
mov
fdivr
mov
push
pop
jno
fldenv
popa
clc
icebp
mov
mov
or
pop
mov
mov
aaa
cmp
lahf
ss
sbbb
sahf
std
cltd
fmulp
nop
addr16
cld
adc
add
cmp
imul
leave
and
inc
fucomi
insb
add
test
sub
cltd
pop
std
int
jno
test
mov
test
xchg
js
lcall
pop
and
add
pusha
js
sub
mov
shrb
jo
or
fisttpll
sbb
sub
lea
fisubl
xchg
mov
mov
cmp
insb
movsl
jb
push
xchg
inc
xchg
dec
js
jmp
repnz
xchg
dec
pop
loop
int
test
sbb
jg
sbb
jnp
dec
negb
or
jmp
ret
fists
jg
gs
sub
mov
mov
inc
int3
das
cltd
test
lret
push
push
or
mov
push
mov
sub
std
nop
ret
arpl
test
cwtl
stos
cmp
jb
push
movsl
dec
mov
arpl
hlt
add
xchg
out
nop
rcrl
xchg
xchg
pop
repz
repnz
loop
cmp
cmp
fdivs
shlb
push
lock
push
sbb
int
xor
jle
push
push
lods
js
repnz
xor
stos
add
push
int3
or
xlat
js
push
daa
xor
xchg
cwtl
sbb
mov
cltd
mov
xchg
shll
cmp
shl
stos
xor
enter
int3
ja
mov
adc
jb
into
xor
pop
shl
push
sti
psadbw
nop
ret
daa
lea
adc
adc
pusha
outsb
and
sub
mov
mov
push
jbe
push
mov
data16
xor
jp
bound
jg
and
jge
add
ja
mov
fildll
mov
fnstsw
ror
push
fstl
lret
hlt
pop
test
pop
adc
inc
add
out
test
cmpsl
jle
call
loope
inc
or
ss
mov
push
pop
pushl
pusha
fidivl
mov
adc
dec
dec
mov
jecxz
fstps
xor
jl
rcll
int
push
js
push
rcrl
lcall
cld
in
test
sti
leave
mov
jbe
call
dec
mov
mov
sbb
iret
adc
mov
cmp
mov
popf
pop
pop
icebp
xlat
and
sti
or
adc
int3
jnp
mov
xchg
xor
inc
cmp
xor
sub
jb
cmpsl
xchg
xor
fimull
push
ljmp
ljmp
pop
add
add
movsb
out
adcl
xchg
mov
jbe
xor
sbb
sbb
mov
cmp
popf
push
pop
or
sbb
jae
push
xchg
mov
jmp
pushf
cld
ja
mov
lret
mov
push
inc
test
es
pop
xor
test
mov
fcompl
push
sub
montmul
cmpsb
sbbb
test
mov
nop
sub
add
in
mov
push
fwait
mov
notl
cmp
es
dec
and
xor
js
in
fs
jo
sub
notl
jle
jae
or
je
mov
test
cmp
xchg
icebp
mov
sti
add
iret
gs
rcrl
lods
push
cmp
lods
pop
bound
pop
imul
xor
pop
sti
aaa
aaa
sbb
and
xchg
enter
movsb
insb
cld
enter
mov
mov
xor
rorb
enter
into
xchg
clc
jo
dec
aam
fidivl
jmp
aad
scas
fld
push
test
sahf
lods
insb
pop
jge
cwtl
imul
daa
xchg
repz
int
data16
ja
add
leave
push
int
jge
stc
idivl
ljmp
xchg
cmp
push
inc
fldcw
lea
xor
movsl
hlt
out
mov
mov
add
xor
adc
fs
jb
or
inc
pop
out
cli
jnp
pop
insb
out
cmpb
cwtl
rcl
cmc
jmp
mov
dec
rcl
sub
jmp
sub
pop
movsb
xor
orb
das
pushf
xchg
or
push
and
aam
ss
fisubl
pop
inc
add
pop
adcb
adc
adc
movsb
gs
nop
adc
jne
xor
scas
pop
sti
aas
sub
mov
mov
pop
mov
pop
repz
cmovle
sbb
xlat
lret
pop
sti
fwait
aad
adc
cmp
or
cmp
pop
cs
fwait
scas
nop
andb
fwait
ss
das
test
sbb
and
jge
aas
loop
addr16
dec
insl
pusha
dec
pop
cmp
jne
inc
mov
push
sahf
cmp
adc
popa
mov
stc
cmc
cmpl
adc
mov
cwtl
sbb
mov
cmpb
mov
scas
loope
pop
mov
bound
pop
mov
inc
inc
or
repz
add
push
mov
mov
push
mov
mov
orb
mov
fdiv
mov
add
xchg
push
xchg
mov
sbb
jmp
mov
std
test
dec
dec
arpl
jns
mov
out
push
fsubl
jo
lock
pop
addr16
jle
jle
in
cltd
mov
pop
sbbb
xor
sbb
pushf
gs
mov
mov
sti
push
jmp
cmc
mov
mov
daa
outsl
inc
lods
inc
dec
xchg
push
mov
loopne
je
repnz
rolb
pop
xor
mov
in
mov
mov
push
loopne
push
push
aaa
call
mov
fsubr
es
sub
xchg
sbb
dec
jns
mov
jmp
loopne
aaa
adc
cmp
insl
mov
jmp
scas
pop
cmp
mov
out
push
aam
push
cmpsl
jp
fldl
push
ljmp
push
rcll
sbb
adc
fs
stos
insb
shrb
sub
pop
push
ret
or
into
mov
jge
dec
scas
pop
xchg
sbb
cmp
insb
jp
adc
rcrl
jnp
mov
pop
cltd
fbld
or
pop
cmp
cmp
notl
lahf
test
mov
int3
add
dec
ds
pop
jbe
arpl
cwtl
loope
mov
fildl
jg
or
repnz
xchg
xor
addr16
cltd
sarb
or
xchg
fdivl
mov
xchg
inc
in
out
dec
sbb
xchg
out
sub
push
pop
mov
xchg
sbb
mov
and
ret
and
mov
mov
inc
stos
mov
xor
push
in
inc
out
rol
gs
xor
sbb
inc
mov
inc
dec
mull
mov
mov
xchg
mov
insb
test
scas
iret
jno
or
icebp
fcmovnbe
fwait
xor
and
jg
or
insl
inc
sbb
test
and
and
jmp
les
push
pop
lahf
and
inc
push
mov
lret
in
mov
lods
inc
loope
or
das
mov
inc
test
imul
fwait
pop
xchg
movsb
sub
arpl
jbe
or
sub
xor
xor
xchg
jae
popa
clc
jecxz
sbb
lock
jo
shlb
add
loope
pop
lret
addr16
mov
insl
inc
lret
outsb
ret
and
in
cmp
rcpps
inc
mov
cmpsb
imul
repz
jnp
jae
out
sbb
mov
push
mov
add
rep
iret
incb
jne
xchg
sbb
int3
pop
js
nop
in
ds
lret
mov
out
mov
sub
lods
lea
xchg
stos
inc
enter
aam
lcall
stc
in
pop
subps
jle
arpl
cmpsb
pop
out
rcrb
dec
pop
xor
popf
pop
sbb
test
test
fimuls
test
aaa
ror
loopne
pusha
js
or
xchg
jne
xlat
nop
pop
mov
fcoms
popf
sub
adc
adc
mov
push
jns
fidivl
sbb
sub
movsl
pop
mov
scas
pop
loope
sbb
mov
dec
lret
xchg
add
imul
call
sub
lods
pop
loope
pop
pushf
shl
mov
adc
mov
and
cmpsl
dec
bound
cmp
flds
in
jecxz
out
sbb
or
jne,pt
dec
push
mov
shrl
mov
sub
loop
adc
inc
mov
repnz
push
xchg
add
dec
mov
adc
sbb
adc
or
xor
sub
mov
inc
clc
sbb
loopne
lret
fsubs
aad
cli
jbe
mov
mov
leave
add
xchg
sub
fwait
adc
lock
mull
ljmp
flds
divb
or
fstpl
aas
sti
cmp
outsb
lcall
inc
mov
mov
out
scas
cltd
leave
sbb
or
push
pop
scas
xlat
sbb
repnz
xchg
cmp
cwtl
mov
mov
and
mov
push
popf
test
fldt
adc
lods
jbe
push
pop
jae
mulb
mov
hlt
movsl
ret
shll
jno
push
and
shlb
jle
shrb
sbb
mov
sub
iret
data16
push
shlb
fisttpl
mov
jae
imul
ds
movsb
add
dec
push
lods
addl
cld
aad
cs
stos
jns
outsl
jnp
lcall
xchg
and
iret
cli
mov
mov
xchg
cmp
adc
sahf
loope
inc
call
add
push
cmp
sti
rclb
dec
call
and
aas
dec
insb
sub
mov
cwtl
pop
sbb
mov
stos
ja
pop
add
stos
stos
decb
sbb
xor
mov
into
gs
dec
pop
or
stos
xchg
and
out
inc
inc
stos
out
sub
ss
lret
cmpsl
cmc
jno
out
pop
push
push
jns
lcall
adc
jnp
xchg
lea
mov
mov
push
xlat
mov
int3
int3
lret
loopne
shlb
pop
divl
cmpsl
and
mov
dec
inc
pusha
xor
adc
daa
dec
fs
mov
movsl
pop
lods
jnp
push
cwtl
addr16
pusha
xchg
sub
inc
inc
mov
stc
jo
mov
sbb
cmpsl
ficoml
pusha
adcb
pcmpgtb
pop
jecxz
dec
inc
jb
aaa
iret
daa
sbb
dec
aad
push
push
inc
pop
cmc
ss
mov
fstpt
pop
fsubrs
mov
mov
movsl
icebp
ret
jecxz
scas
cmp
push
and
in
mov
push
mov
push
xchg
in
pusha
lods
xor
inc
jo
jl
fwait
orl
adc
cwtl
inc
sbb
addps
sbb
mov
pusha
jecxz
in
es
push
or
pop
pushf
test
loop
cmp
mov
push
popa
dec
in
cmp
shll
jne
xor
lods
jg
add
aas
enter
aad
add
mov
call
sbb
add
push
testl
dec
fdivs
pop
jo
dec
addl
xchg
imul
daa
jb
jne
outsb
and
dec
jae
lea
and
scas
lods
xchg
in
lret
popa
clc
cld
pusha
mov
rorl
pop
out
das
insb
xchg
dec
pop
cli
jbe
sarb
das
or
popa
out
push
push
pusha
sub
je
cmp
jle
mov
test
add
mov
stos
in
and
dec
pusha
add
fwait
pop
cmp
mov
add
mov
mov
lahf
push
out
shr
pop
and
aad
cld
dec
xlat
icebp
dec
test
sub
mov
jae
pop
push
in
xchg
inc
jle
mov
out
cld
scas
leave
int
hlt
push
lock
inc
push
fs
and
sub
sbb
xchg
ud2
jge
mov
push
sub
xor
sbb
dec
xchg
mov
cmpsl
es
xchg
dec
xor
xchg
scas
xorb
xrelease
out
jge
js
adc
jg
ljmp
pop
clc
sub
pop
sar
arpl
pop
ja
js
arpl
ss
ficoms
int3
lret
in
mov
push
adc
push
add
pushl
clc
stos
pop
push
xor
sbb
adc
bound
adc
cmc
dec
loope
lea
mov
pusha
and
dec
push
icebp
and
outsb
push
movsl
jnp
cs
das
daa
stos
mov
insb
fisttps
mov
mov
mov
and
js
ficomps
inc
dec
cmpsl
xchg
sbbl
bound
jo
cs
jmp
and
lea
movsl
add
add
mov
push
gs
inc
or
sub
lods
jecxz
ret
jle
sbb
lods
lcall
mov
adcb
test
lret
push
dec
icebp
or
je
sbb
jbe
lret
mov
pop
hlt
xchg
arpl
imul
or
pushf
or
adc
xor
add
lea
and
xorb
mov
pop
mov
outsb
adc
mul
jno
js
add
and
in
adc
jecxz
fs
sub
add
popf
jbe
lock
inc
in
mov
mov
lret
popf
push
pop
imul
cld
stos
lcall
in
sbbl
frstor
movl
lret
js
insb
cmp
mov
dec
xor
and
shlb
lret
aaa
or
pop
lods
pop
test
xchg
mov
xchg
fdivl
dec
mov
cmpsl
mov
ficompl
arpl
clc
arpl
insl
flds
pop
sbb
fnstcw
cmp
popf
jg
adc
mov
pop
shr
cmp
test
or
add
aas
test
outsl
mov
adc
subl
xlat
pop
dec
jle
out
jecxz
lods
fstl
mov
ja
jg
test
test
sbb
loopne
inc
mov
inc
xor
ss
push
dec
dec
mov
xchg
popf
pop
lcall
sub
lcall
fnstsw
mov
loop
addb
pop
cltd
ja
and
mov
andb
push
jnp
mov
lds
in
rol
push
cli
mov
sub
mov
jno
push
pop
sbb
pop
hlt
test
pop
popa
and
loope
dec
pushf
or
das
sub
cwtl
sub
pop
mov
sbb
cmp
add
insl
in
inc
clc
dec
sub
les
into
out
movups
mov
in
into
or
mov
xchg
mov
xchg
pop
test
xchg
sub
fcmovnbe
sbb
xchg
sbb
ret
rolb
dec
dec
dec
push
pop
outsb
test
rol
inc
aas
push
in
dec
imul
cmp
imul
inc
out
xor
sbb
push
or
mov
lods
test
cmp
sub
sbbl
scas
out
add
jb
scas
and
and
xchg
cli
mov
mov
rorl
jmp
cmp
cmp
pop
insl
test
loopne
xchg
out
in
ret
adc
aaa
stc
xchg
lahf
repz
inc
xor
jno
jne
mov
loopne
mov
adc
inc
or
gs
xchg
xlat
jp
test
lods
jo
dec
and
and
mov
adcl
or
icebp
or
xchg
in
subb
or
in
das
dec
mov
loopne
adc
mov
fistpl
lods
dec
int
mov
xchg
mov
mov
imul
shl
fisubrs
shrl
mov
pop
mov
add
xor
or
out
mov
pop
scas
add
ja
xor
jnp
mov
mov
lret
das
outsb
scas
add
mov
or
xchg
aaa
cmp
fdivrs
mov
push
ss
xchg
and
push
out
pop
pop
or
in
repz
jne
out
xor
adc
mov
testb
imul
jno
loop
lds
cmp
dec
jle
shrb
nop
fnstsw
inc
lea
jno
repz
xor
cli
test
xchg
cmp
jl
movsl
xchg
sub
ret
push
lahf
into
popa
movsl
sbbb
or
sub
xchg
int3
xchg
aas
adc
pop
daa
fucomp
pop
sub
jne
popf
sub
test
fcoml
mov
icebp
mov
mov
mov
or
cld
push
jae
push
xchg
daa
enter
dec
and
and
lock
sub
ret
fdivs
jge
mov
dec
shll
ljmp
jno
ss
in
std
xor
in
daa
cli
jp
stos
dec
je
pusha
dec
jp
mov
gs
jnp
fwait
iret
xor
cltd
inc
push
cwtl
sbbb
xor
pop
movsl
icebp
push
mov
sub
xchg
add
jmp
fsubs
push
rorb
pusha
fisttpl
and
insb
mov
imul
loopne
cmp
mov
mov
outsl
sub
test
jecxz
mov
inc
push
jo
mov
dec
jo
dec
loop
loopne
test
xchg
mov
push
fdivs
adc
cmovno
out
and
push
and
lock
inc
xchg
iret
ss
pop
inc
out
cmc
jge
loopne
sbb
dec
subl
stos
cmpb
pushf
fs
mov
push
dec
movsl
add
push
addr16
jecxz
adc
fs
sbb
inc
adc
inc
ret
cmpsl
loop
mov
pop
shrl
fdivl
and
iret
bound
iret
ret
loope
mov
aaa
cmp
out
shr
lods
add
fisttps
cmpsb
aas
pop
lock
xor
push
sub
insb
cld
inc
sahf
lds
push
xchg
push
cmp
stos
int3
les
int3
sbb
jmp
out
mov
int3
shrl
fsubrs
repz
imul
jo
xchg
clc
or
xchg
add
dec
out
add
jmp
mov
xchg
lcall
out
mov
repz
stos
js
xor
orl
lahf
bound
cld
inc
mov
out
scas
dec
lret
or
jmp
pop
fcoms
ret
sbb
adc
mov
sbb
push
in
clc
addr16
jle
or
enter
repnz
ds
movsb
repnz
jge
mov
xchg
sti
ljmp
jmp
or
sti
icebp
or
jp
cmc
ret
adc
cld
xchg
xchg
mov
adc
das
mov
js
cld
out
stc
fmul
repnz
lret
inc
inc
pop
jae
mov
cmc
cmp
data16
sbb
push
in
nop
rolb
cmp
jl
cltd
cmp
pop
divb
pop
jge
stos
xor
xchg
js
mov
cmpsl
sub
lcall
add
cs
cmp
minps
sbb
mov
jno
inc
push
jmp
pop
pop
sub
in
add
cmpsl
sbb
push
test
orb
dec
or
lods
cwtl
lea
pop
dec
dec
and
mov
cmpsb
in
test
pop
mov
daa
loope
push
inc
or
cmpsl
inc
push
mov
addr16
fiaddl
jne
inc
push
sub
sub
xor
pop
daa
add
xor
cli
add
mov
cmc
mov
out
pop
cmp
jecxz
shlb
cwtl
cmp
int3
jae
push
lcall
jp
test
sub
mov
ret
jnp
sbbl
xchg
xchg
and
inc
loopne
or
fiadds
scas
shr
sbb
repnz
jle
mov
mov
xor
rcrl
jg
in
cmp
cli
subb
xchg
jo
add
mov
sbb
dec
inc
pop
mov
jl
sub
test
inc
mov
cld
push
in
and
add
add
inc
sbb
adc
insl
shll
sbbl
test
mov
fisubs
addr16
xor
sbb
lods
xchg
cwtl
repnz
dec
loop
shr
cs
sahf
dec
mov
jb
sti
aad
stos
ret
mov
xor
sbb
xor
mul
push
adc
adc
fcomps
outsl
mov
jge
pop
lock
ss
imul
stc
je
repnz
into
or
sbb
call
jg
and
sti
addl
xchg
sarl
call
mov
cmp
dec
pop
inc
rcrl
cs
pop
xor
cmp
jge
adc
add
pop
push
or
aam
popa
mov
pop
std
push
cmpsb
pop
fmuls
mov
push
ds
jbe
cmp
sbb
mov
sub
fucomp
test
outsb
mov
inc
fs
jbe
pop
das
cmpsb
mov
arpl
aaa
inc
and
xchg
xchg
inc
scas
adc
stos
push
mov
test
lret
xor
ja
cli
mov
mov
push
pop
adc
outsl
adc
pop
lcall
add
sahf
inc
shr
pop
or
dec
iret
js
add
pop
aaa
insb
adc
xor
and
sub
lods
push
xchg
pop
xor
xchg
jbe
imul
orl
inc
sahf
or
push
es
mov
fs
jns
mov
and
push
dec
insb
idivl
cmp
in
jg
fisttps
cmpsb
call
or
rorl
inc
loop
pop
dec
push
mov
or
aam
push
mov
mov
cli
addl
frstor
mov
dec
jne
push
jge
fmull
push
mov
push
outsb
ljmp
mov
mov
xor
fcoms
insb
sbb
cli
jnp
sub
movsb
jmp
movsl
jp
outsb
and
lds
divb
dec
repnz
jl
mov
mov
int
cmp
mov
add
subb
lahf
push
sar
jbe
andb
test
roll
dec
fnstsw
mov
je
fldt
aaa
movb
jle
jle
pop
mov
imul
cmp
repz
mov
aas
xor
pop
test
into
ja
fldenv
jns
cwtl
stos
rorb
lods
insl
dec
loop
mov
inc
xchg
jo
inc
inc
lahf
cld
fcmovne
fdiv
inc
push
aas
test
imull
jne
outsb
and
jg
xor
imul
mov
scas
xor
push
inc
jbe
into
in
push
inc
loop
pop
cmpsb
cmp
mov
sar
add
shrl
and
pop
mov
add
es
push
xor
pop
xor
stos
das
xchg
loopne
lcall
push
lods
or
inc
xchg
sti
dec
sahf
rcl
push
in
cld
out
scas
push
inc
pop
inc
jno
xor
inc
test
mov
cmpb
dec
scas
push
fisubs
nop
push
push
pop
pop
xchg
pop
inc
jo
pop
sub
sub
sahf
xlat
and
push
xchg
jg
lret
mov
lods
scas
cmp
lods
scas
xchg
xor
add
add
rorb
cmp
orb
dec
xchg
push
inc
mov
xchg
mov
leave
xchg
mov
xor
ds
mov
stos
arpl
mov
or
imull
mov
dec
jb
fisttps
insb
bound
sbb
aam
aam
jnp
or
mov
mov
pop
jno
or
sub
mov
sbb
mov
test
daa
jo
inc
push
outsl
cld
rcll
stos
sbb
dec
int3
int3
out
aaa
cmp
imulb
cltd
mov
scas
push
push
and
ds
jp
popf
add
mov
xorb
sbb
jge
mov
add
jbe
sub
jbe
ss
and
push
push
lret
jo
out
mov
iret
jne
jae
sub
add
mov
les
push
mov
jg
mov
push
sbb
mov
pop
mov
jge
jb
xchg
mov
cs
imul
fistpll
mov
cmp
and
cmp
jle
call
aas
inc
les
lcall
fidivl
and
push
sbb
dec
cmp
cmp
hlt
mov
cmp
mov
or
in
cs
cmp
lahf
add
mov
add
movsb
lods
aas
adc
mull
mov
sub
mov
mov
loopne
and
hlt
mov
xor
fisubrl
push
call
lods
jbe
add
mov
test
add
pop
xchg
es
es
sub
nop
jbe
int3
daa
xlat
push
mov
dec
movlps
aaa
cwtl
and
lea
adc
xor
inc
lods
insl
sub
lods
fsubrs
jnp
inc
divb
std
sbb
inc
xor
dec
mov
push
repnz
shrb
pop
fwait
mov
fsubrp
mov
push
outsl
in
push
lahf
pushf
sti
jbe
lea
mov
or
repz
cmp
xchg
fldt
test
mov
push
mov
add
dec
mov
fimull
mov
adc
lret
je
mov
ficoml
lods
and
and
leave
jg
pop
sub
call
sub
test
xchg
push
add
cmp
mov
xchg
out
inc
adc
adc
popf
xor
clc
jge
lods
push
mov
fistps
or
xor
adcb
pusha
fsubrs
mov
dec
mov
out
dec
shr
xchg
movsb
hlt
xor
fs
loopne
add
mov
cli
cmp
data16
pop
shll
shl
sub
cmp
shll
in
mov
mov
push
jno
sub
aad
xchg
das
addr16
mov
sbb
and
mov
rorb
cli
cli
push
mov
int3
popf
pop
gs
or
lret
xor
loopne
jge
mov
paddq
repnz
imul
fwait
adc
lods
lds
pop
sub
mov
pop
jo
test
mov
dec
mov
cmp
sarl
xchg
popf
cltd
scas
inc
adc
ja
je
dec
pop
inc
push
or
lret
ss
mov
jp
dec
imul
push
cmp
mov
xor
sarb
fstpl
imul
stc
in
repnz
arpl
or
mov
stos
or
das
jge
push
mov
lods
xchg
add
dec
shlb
jo
repz
ds
ljmp
rcrb
pop
and
lret
dec
sub
rcl
dec
out
jb
imul
mov
cld
inc
xchg
mov
add
mov
mov
rcrb
xor
addr16
mov
jmp
pop
jne
inc
negl
loopne
xchg
repz
sbbl
or
pop
lret
ljmp
mov
mov
loopne
jle
jbe
inc
xchg
out
push
jo
push
cmp
fs
push
adc
stos
into
xor
fsubl
arpl
shl
movsl
call
test
mov
fcmovne
test
mov
dec
xchg
orl
sub
out
test
subl
push
xor
ljmp
out
in
out
fistpll
fsubs
mov
mov
test
mov
es
xchg
mov
or
call
lahf
push
jge
test
and
adc
xbegin
ss
packssdw
adc
push
push
orl
jecxz
lret
int3
xor
or
fsubp
test
inc
push
imul
xor
fldl
mov
push
push
outsl
fwait
mov
in
push
mov
loop
mov
xor
lea
cs
fisttps
push
jbe
jns
mov
lahf
push
je
dec
or
aam
xchg
dec
hlt
jg
xchg
adc
dec
sub
dec
pop
jmp
cld
jns
lea
xor
jle
cli
xchg
pop
xchg
pop
pop
movzwl
add
add
xor
adcl
mov
push
push
push
add
sub
fidivrl
insb
fbstp
pop
icebp
insl
fisubrs
das
jp
sub
inc
inc
sub
scas
popl
sub
mov
mov
clc
push
push
inc
inc
cwtl
sti
imul
dec
inc
push
cld
push
fcmovu
cmp
or
icebp
mov
fmulp
cmpb
rorb
jns
insl
ds
inc
repz
or
push
dec
in
or
cmc
pushf
sbb
dec
cld
das
jo
mov
and
and
inc
subl
sub
xchg
mov
leave
test
push
fadds
imul
xchg
stc
mov
test
shll
fisubs
xchg
pop
scas
or
push
pop
jmp
cltd
fs
inc
and
rol
nop
push
mov
adc
cmp
div
mov
test
sarb
add
jp
push
fldenv
pusha
cmp
add
inc
hlt
insb
add
dec
frstor
cmc
dec
sub
nop
fcomps
aad
ds
sbb
add
push
mov
outsl
gs
xchg
mov
call
jns
adc
inc
bound
push
or
sbb
push
adc
imul
jo
fmull
mov
add
inc
push
xchg
sub
cmpsb
stc
sub
push
dec
mov
sti
lret
or
pop
outsl
mov
mov
lret
xchg
or
das
lods
xor
jg
inc
mov
into
xor
ljmp
bound
insl
jge
push
lods
mov
dec
fdivrl
and
shll
les
hlt
adcb
lcall
inc
jge
lds
enter
add
dec
loopne
mov
xor
ret
mov
push
add
cmp
test
inc
loope
and
jne
outsl
std
and
aas
xor
sahf
repnz
in
popf
push
mov
or
cmp
lock
and
das
push
xlat
and
jle
lret
mov
repz
pop
xlat
les
in
dec
and
loope
outsl
push
aas
adc
lret
bound
stos
push
sub
rorb
sbb
es
jp
and
data16
pop
adc
daa
mov
mov
orl
xor
cmp
shrb
jno
lds
cmpsb
cmp
sbb
add
inc
pop
imul
lret
push
xchg
pop
jne
mov
pop
in
faddl
sbb
lret
mov
mov
stos
test
add
cmp
incb
sub
pop
loope
add
nop
jl
add
cld
sarl
call
fists
cltd
icebp
jle
push
cs
push
das
push
jmp
lea
push
cmp
sbb
dec
dec
fwait
inc
fmuls
mov
faddp
loopw
insl
outsl
adc
imul
sarl
mov
int3
pop
imul
xchg
nop
jae
xor
into
fucom
in
lcall
or
push
cwtl
pop
xchg
dec
loope
loope
inc
fistl
imul
js
xchg
leave
movsl
sub
or
dec
loop
xchg
cwtl
dec
ret
jne
xchg
jl
adc
inc
popf
sbb
ljmp
stos
xchg
clc
or
cs
cwtl
inc
jmp
cmc
testl
aam
mov
jbe
add
aas
mov
mov
pop
cmp
sub
pop
mov
sbb
push
loop
pop
jno
pusha
mov
in
sub
lret
cmp
loop
mov
arpl
mov
mov
and
inc
fdivs
mov
ret
adc
mov
into
cmp
insl
ja
aam
scas
insb
sub
mov
aaa
repz
jge
xor
loope
dec
imul
cmp
movsl
shrb
inc
cmp
add
inc
enter
popa
outsb
adc
pop
or
xchg
cmp
addr16
pop
inc
notl
push
stos
adc
std
das
pop
add
xchg
shrl
dec
pop
hlt
pop
push
pushf
lds
popa
or
adc
cmp
mov
rcll
add
jne
jecxz
fwait
movzwl
inc
rcll
jbe
out
mov
sti
aaa
mov
cmpsb
sbb
lock
loopne
or
cwtl
cs
push
and
and
sbb
xchg
data16
xor
xor
sbb
imull
mov
or
add
or
jmp
iret
adc
push
or
cld
pop
jecxz
stc
sti
adc
mov
int
inc
cmc
lea
lds
adc
jno
add
or
movsb
rol
fprem
or
add
dec
add
dec
adc
sub
or
xor
dec
fwait
jns
sub
cmp
xlat
sub
adc
insb
enter
add
xor
adc
outsl
jmp
sbb
mov
xchg
data16
mov
imul
lret
lods
mov
sub
push
mov
sub
das
adc
sbb
sub
push
dec
rcl
outsb
mov
sbb
test
es
nop
mov
dec
pop
arpl
scas
ja
mov
shlb
fidivrs
pop
xchg
mov
add
call
test
cmp
lahf
xor
fdivrl
mov
aam
sahf
add
mov
ret
and
xchg
push
enter
xor
xor
enter
push
mov
lret
pop
hlt
stos
lret
insl
adc
stc
sti
or
xchg
push
pop
sti
jb
inc
aad
mov
stc
adc
pop
mov
out
sub
ljmp
inc
push
cmpsb
cmp
shll
decb
hlt
mov
xor
pop
or
repnz
xor
imull
iret
lret
mov
mov
push
repz
fstl
mov
andl
or
test
jp
sub
jp
insl
add
cmpsl
imul
repnz
test
mov
cltd
jae
sub
fwait
incb
adc
dec
rcll
int
call
pop
repz
movsb
jl
sbb
sbb
inc
sbb
mov
adc
popf
xor
mov
movsl
mov
or
loopne
loop
notl
in
leave
stos
jne
mov
sbb
sbb
int3
arpl
push
in
push
mov
mov
loop
sub
or
xor
adc
or
gs
mov
rol
pusha
std
rolb
sub
test
sahf
shll
mov
cld
mov
cmpl
sbb
xor
pop
mov
popl
mov
jp
into
xchg
repz
add
cmp
adc
bound
sub
test
mov
mov
out
outsb
add
inc
cmp
addr16
mov
test
cmpb
and
je
cs
cmp
mov
add
sbb
mov
inc
shl
cs
cmp
lock
xchg
divb
jmp
add
xchg
or
pop
mov
xlat
sub
and
add
fisubrl
sti
fstps
aas
in
adc
std
mov
add
scas
push
fucomp
sti
jbe
out
cld
xchg
jae
xor
cmc
shrb
mov
xor
fnsave
mov
in
out
sbb
dec
es
push
stc
or
inc
sub
icebp
inc
add
int
loope
xchg
ljmp
les
fdiv
cmpsl
push
mov
fistpll
scas
mov
fstps
callw
into
xor
inc
stc
movsl
fists
push
pop
inc
ret
inc
mov
lret
stos
imulb
jg
adc
rorb
movsl
inc
and
mov
pusha
sub
jg
cmc
comiss
push
cs
and
xchg
mov
notl
into
call
aam
addr16
mov
pop
adc
xchg
mov
add
pusha
mov
notl
test
xor
cmpsb
fwait
sbb
inc
jmp
dec
mov
push
add
lea
shrb
xchg
jl
shl
add
xor
fcoml
js
push
cwtl
inc
ljmp
jno
bound
out
adc
loop
and
dec
pop
jbe
mov
dec
pop
outsl
shlb
data16
mov
leave
cli
lea
jbe
xor
inc
icebp
mov
js
mov
daa
or
xchg
jecxz
negl
add
in
pop
pop
mov
and
xor
dec
sbb
scas
mov
inc
out
imul
or
xchg
add
js
push
xchg
mov
ret
pop
or
outsl
loopne
pop
mov
inc
sbb
inc
dec
sbb
sbb
adc
inc
push
dec
jns
sti
sti
inc
lods
sub
or
loope
jecxz
pop
jle
test
and
mov
jl
inc
leave
cs
and
push
inc
out
mov
sarb
sbb
mov
outsb
cmpsl
add
movsb
mov
xchg
mov
fsubl
mov
mov
add
out
inc
pop
xor
pop
gs
xchg
out
test
out
jp
add
xor
mov
cmp
outsl
mov
lahf
std
lods
xchg
jecxz
mov
cwtl
adc
test
inc
mov
mov
xchg
xchg
insl
dec
add
inc
inc
cwtl
das
ja
jp
pop
dec
mov
jp
xchg
xchg
loope
movsb
cmp
add
or
cmp
pop
mov
xor
cs
ds
cmpsb
adc
fnstenv
fnstcw
aad
cli
sub
int
movsl
test
pop
mov
cmc
nop
dec
jecxz
add
push
xchg
and
inc
imul
mov
fstpl
push
xor
aam
or
mov
add
out
lds
es
cmp
pop
mov
stos
add
and
sahf
and
enter
push
xlat
das
xchg
push
push
in
das
lds
stc
movsl
loopne
jecxz
sub
xchg
inc
aas
fwait
lods
mov
or
mov
jp
pop
insb
sub
push
sbb
fnstenv
aas
lock
push
clc
popl
sbb
xor
lods
popa
mov
or
cmp
sahf
mov
pop
aam
std
sub
fcom
push
hlt
mov
mov
push
ljmp
or
mov
or
or
popa
into
and
repz
in
inc
or
mov
faddp
and
push
add
cmp
xlat
test
or
push
vhaddpd
sbb
shlb
jecxz
test
jbe
leave
fs
pop
push
adcb
test
mov
mov
jecxz
and
sbb
xchg
ja
push
adc
mov
shlb
lods
jbe
push
mov
cltd
or
xchg
add
loopne
out
icebp
pop
aam
std
test
out
inc
je
lods
add
lea
jns
jle
sub
add
int
jle
or
andb
ss
push
or
sbbl
insl
sbb
mov
or
cmpsb
mov
mov
add
lea
dec
mov
add
or
and
in
dec
int
orl
in
decb
xchg
jp
xor
stc
rolb
sub
cmp
in
mov
loopne
and
gs
jno
sti
mov
push
xor
mov
cmpsl
lock
cs
cmp
xor
add
pop
push
add
insb
sbb
in
cmp
mov
cmc
dec
dec
dec
sub
sbb
adc
sbb
push
test
cmp
mov
aam
ljmp
jno
lret
call
xor
test
sahf
arpl
int
daa
jnp
dec
test
dec
jns
and
lret
or
and
jo
andnps
mov
js
out
xlat
dec
xchg
sub
out
es
pop
aaa
pop
dec
mov
mov
je
addr16
mov
adcl
icebp
or
jbe
or
jg
std
ljmp
jb
cmp
inc
xchg
inc
xor
movsl
mov
push
aam
fnstsw
sbbb
mov
aaa
jb
movsb
in
pop
fdivrs
pop
push
xchg
pop
aaa
popf
or
push
inc
sub
jl
xchg
loope
sub
mov
loopne
lret
subb
mov
inc
sbb
loop
xchg
ja
pop
test
cmpsl
cmp
testl
sub
movsl
inc
repnz
mov
fcomip
out
popa
or
cmpsb
sbb
cli
rclb
sub
sahf
das
sbb
loop
lea
and
negb
jne
mov
and
divb
xor
out
movsl
dec
mov
sub
or
xchg
lret
add
xchg
sub
or
sbb
pushf
and
into
pop
push
jmp
inc
roll
add
ss
js
pop
jns
inc
out
mov
arpl
or
imul
lds
inc
cltd
fnstenv
hlt
lahf
stos
sbbb
cmp
jne
mov
ljmp
sahf
clc
cmpsb
movsl
jg
pop
sbb
sub
mov
test
movaps
cmpsb
les
sbbl
test
sbb
xor
push
insb
fidivrl
push
or
rcrl
jl
adc
pop
lods
and
pop
xchg
adcl
movsb
push
mov
mov
aam
rorb
mov
sub
fdivrl
fcomps
je
negb
dec
mov
push
je
cmpsb
push
lea
in
outsl
daa
and
iret
pop
out
mov
mov
mov
jge
icebp
add
fcoms
xor
or
cmpsl
pop
dec
enter
js
xor
jge
mov
pop
out
add
test
jp
or
sbb
loop
sbb
mov
jne
cmp
ja
fsubs
add
or
sub
repnz
dec
add
and
ss
idivb
in
repz
andb
sub
cld
cmp
xor
js
jmp
cmp
and
add
cli
jle
sub
loopne
or
adc
add
js
and
push
and
pop
jne
pushf
in
int
ds
push
out
outsl
call
bound
sbb
test
xchg
jp
jle
ja
xor
out
popa
ret
js
dec
clc
lock
mov
loope
mov
dec
aaa
sbb
add
xor
sar
outsl
fld
ret
inc
push
mov
add
out
mov
xor
sbb
jns
pop
lahf
notl
bound
lock
mov
mov
ljmp
ljmp
scas
xor
pop
fisubl
push
mov
sbb
movsl
pop
xchg
xlat
inc
mov
xlat
arpl
ficomps
xchg
call
icebp
xor
cmp
mov
repnz
cmp
sti
lods
xchg
test
dec
push
rcll
dec
imul
and
dec
jne
jns
test
jg
and
js
xor
push
pop
xchg
sub
fadd
iret
std
mov
hlt
out
loope
lcall
jge
mov
push
xor
sub
or
das
dec
stos
clc
lcall
mov
insb
push
shrb
push
out
or
in
movsb
xor
imul
xchg
push
in
cmp
popa
sbb
pushf
and
in
push
enter
inc
xchg
clc
sti
imull
mov
add
clc
fwait
cli
aam
sub
push
adc
add
mov
xchg
loop
pop
adc
mov
mov
mov
faddl
push
mov
out
dec
insl
mov
mov
out
mov
pop
mov
xchg
push
repz
insb
outsb
push
icebp
aaa
jno
xlat
mov
leave
shl
pop
mov
mov
jle
xor
push
pop
xorb
outsl
push
mov
hlt
mov
les
nop
mov
in
push
jbe
loopne
mov
jnp
add
pop
push
and
adc
xchg
xor
fwait
cmp
adc
mov
fbstp
fmull
fs
sub
add
dec
and
pop
mov
or
jecxz
mov
xor
cmp
mov
sti
sete
add
dec
lds
imull
ret
jmp
es
dec
inc
pop
lret
in
cmp
mov
inc
enter
rcll
xchg
nop
inc
test
xorb
lret
xchg
js
je
push
mov
lea
xor
jl
outsb
mov
bound
test
inc
xchg
jae
push
into
aad
add
movsl
xorb
ljmp
dec
pop
push
jp
mov
jns
orl
rcrl
ret
das
jmp
or
dec
lock
shl
inc
cmp
loope
sahf
jl
or
mov
pop
aam
adc
clc
mov
or
fdivrl
int
or
movsb
sub
movsb
addr16
pop
lcall
sub
daa
pop
sub
mov
inc
lret
sbb
sub
int3
ret
mov
pop
ret
jne
sub
sti
adc
sbb
cmpsl
jmp
sbb
test
clc
dec
mov
inc
pop
icebp
test
sbb
int
repnz
mov
mov
jae
sbb
notl
inc
mov
inc
and
sahf
adc
jg
lds
pop
dec
xchg
movsb
stc
aad
push
jno
movsl
xor
mov
cltd
push
dec
data16
cwtl
insb
fwait
xor
inc
mov
mov
into
mov
clc
or
fs
jle
xchg
bound
sub
pop
pop
lahf
add
scas
push
nop
addl
xchg
inc
fs
xor
adc
lahf
lds
lret
add
mov
sub
fucom
mov
pop
xchg
jmp
data16
push
cmc
test
or
pop
scas
mov
push
push
shrl
popf
or
test
daa
inc
cmp
int3
mov
and
pop
ljmp
mov
or
dec
xor
stos
repz
scas
jl
cmp
xchg
popa
jne
push
adc
sub
into
and
cli
dec
incb
dec
push
ret
scas
jo
mov
rorl
sbbl
decl
test
das
pop
adc
imul
mov
rolb
xchg
mov
in
inc
mov
mov
add
cmc
cltd
or
cmpsl
dec
dec
mov
std
cmp
sbb
test
cmp
mov
pop
mov
ficoms
das
mov
add
or
add
sub
xor
addr16
aaa
scas
jle
loope
cmp
das
add
cmc
icebp
pop
ljmp
cld
out
je
mov
out
decl
adc
jp
stos
and
jl
mov
in
sub
sahf
sbbl
call
cmpsl
xor
aad
push
sahf
jno
pop
sti
outsb
cmp
sahf
mov
or
ret
ds
hlt
add
add
pop
stos
inc
dec
dec
mov
mov
cmp
sub
mov
xor
ss
dec
mov
mov
sub
rcl
pusha
cmpsl
stos
dec
sbb
aaa
pop
mov
mov
xchg
push
and
adc
cmpsl
in
jge
stc
mov
scas
mov
inc
cmpsl
jmp
dec
mov
jmp
dec
fs
clc
scas
xor
testl
pop
lahf
std
imul
adc
jns
data16
shrb
xchg
in
or
test
ss
imul
xchg
jne
jbe
jg
push
ljmp
jno
pop
adc
enter
int
xor
mov
and
dec
add
arpl
pop
push
sbb
ds
xchg
ljmp
sub
lods
mov
scas
imul
sub
mov
and
out
jae
mov
and
fnstenv
cmp
or
mov
arpl
lods
mov
fidivs
mov
jecxz
scas
pop
pop
testb
xchg
es
cmc
lret
test
inc
aam
cmpsl
sbb
jo
shr
std
xchg
mov
loopne
xor
jp
cmc
xchg
sbb
xor
push
add
fidivrl
xor
mov
mov
ja
gs
inc
jmp
hlt
scas
jno
loop
js
fdivrl
dec
aas
dec
in
in
enter
pop
popa
add
xor
incb
lret
mov
mov
push
shlb
lds
sbb
sbb
xchg
ja
andl
ja
jne
mov
or
inc
cli
je
inc
cmp
insl
cmpsl
mov
insb
ret
bound
rol
xchg
mov
xchg
or
or
mov
andl
sbb
incb
icebp
or
movsb
dec
ficompl
cld
rorb
mov
aad
sub
testb
push
in
loopne
mov
pop
adc
pminub
pop
xchg
inc
std
insb
sbb
inc
sahf
jl
hlt
testb
sbb
dec
dec
cmc
test
leave
or
pop
rcll
mov
cmpsb
fldt
push
ljmp
icebp
insb
js
cld
stos
repnz
sbb
js
or
aas
push
fcmove
cwtl
das
std
cld
aad
or
mov
out
adc
fidivl
imul
inc
push
inc
xchg
inc
sub
jbe
xorl
in
push
push
out
push
mov
sarl
ret
add
pop
jp
jl
and
roll
xlat
mov
or
int
pop
shrb
xor
fs
clc
fdivs
inc
jecxz
data16
add
loope
mov
testl
xchg
push
aam
or
mov
rcll
lret
in
mov
mov
fidivs
inc
roll
stc
push
xchg
movsl
sbb
lret
pop
mov
pop
mov
ds
sbb
and
add
sbb
jb
rolb
mov
add
jle
gs
cmp
xchg
imul
jbe
add
sbb
mov
les
mov
or
dec
pop
sub
xor
sub
bound
cld
test
jp
cli
sub
popf
mov
out
jnp
mov
inc
aam
sbb
xor
xchg
loope
orb
jnp
mov
xchg
cli
or
outsl
mov
stc
inc
adc
faddl
out
stos
push
jge
pop
imul
cmp
aad
cli
mov
mov
les
mov
test
jle
lods
sarl
adc
shll
int3
fcompl
mov
mov
sbb
je
jnp
repnz
pop
adc
iret
and
sbb
shll
mov
sbb
xor
pop
sub
fs
jecxz
push
sub
xor
sub
insl
test
mov
inc
lods
add
lret
cmp
dec
outsb
arpl
dec
rorl
push
mov
sbb
subb
xor
movsl
popa
mov
jae
add
push
sub
inc
mov
pop
nop
pop
cmp
push
mov
lea
in
dec
aaa
xlat
jecxz
jns
imul
xor
fidivrs
addr16
dec
mov
int
inc
testl
mov
or
jb
mov
push
test
cmpsl
aad
fsub
or
or
inc
push
push
dec
loope
out
sbb
in
mov
les
xchg
dec
loop
out
adc
push
imul
cmp
fcomip
sbb
lcall
and
xchg
mov
adc
xchg
gs
loope
bound
push
test
ret
les
repz
imul
and
sbb
clc
ja
les
ljmp
push
pop
in
push
push
and
std
ljmp
adcl
aas
rol
gs
push
and
in
xor
cmpsl
imul
subb
das
sti
xchg
int3
cmc
xchg
add
subl
pushf
inc
jns
add
mov
or
fcompl
sbb
fdivs
push
movsb
mov
das
mov
dec
gs
push
mov
into
jecxz
xor
std
push
push
cmp
out
lods
push
mov
cmpsl
shrb
dec
testl
mov
rol
fcomp
push
test
ret
roll
jb
pop
adc
sbb
pushf
or
mov
mov
pop
push
or
inc
cli
pop
sti
fwait
push
mov
jbe
in
sub
loope
bound
xor
aaa
mov
aas
les
dec
push
jg
or
pop
cli
jg
icebp
repnz
loopne
xor
mov
xchg
push
add
jp
xor
scas
lock
cwtl
sbb
mov
daa
clc
jb
out
mov
mov
jl
icebp
sub
dec
cmp
scas
dec
call
notb
gs
and
xor
and
cmp
insl
xor
inc
shrb
mov
je
mov
imul
movsb
inc
faddl
add
inc
mov
push
call
or
iret
popa
popf
dec
in
inc
shll
pop
hlt
and
adc
mov
mov
enterw
pop
pop
les
inc
and
adc
pop
in
sbbl
or
in
fbstp
or
mov
rorl
cmp
push
pop
jecxz
inc
push
cltd
xchg
test
push
mulb
or
mov
out
xor
cmp
arpl
inc
mov
movsl
xchg
xchg
lret
xchg
movsl
push
fisttps
mov
icebp
xchg
ja
jle
sti
mov
xchg
adc
icebp
and
pop
add
ljmp
mov
aam
xchg
cmp
xor
int
xchg
xor
sub
jmp
sub
xor
jo
xchg
xor
pop
mov
rcrl
mov
in
mov
pop
repnz
mov
jns
and
jb
pop
cmp
adcl
in
add
push
popa
aaa
xchg
in
lcall
mov
pop
in
aaa
jl
ja
loopne
pop
mov
es
add
adc
fldcw
pop
jbe
xchg
sub
popf
pop
mov
mov
pop
xor
call
or
mov
loope
loopne
sub
scas
pop
aas
rcrb
les
jne
call
sub
pop
and
sub
rclb
and
xchg
xchg
push
mov
push
inc
lret
fcoms
add
jo
mov
clc
and
mov
out
movsb
xchg
pop
sahf
enter
cs
movsl
cmp
ja
push
xchg
or
arpl
mov
adc
aad
adcb
cmp
ds
pop
inc
rorl
fiadds
dec
fxtract
je
lods
inc
xchg
xchg
sub
ljmp
push
je
or
adc
pop
push
sbb
loope
fidivl
mov
pop
lcall
fimull
push
inc
cs
cmp
jnp
mov
xor
or
sbb
xor
lcall
call
add
std
adc
mov
cltd
scas
cmc
aaa
test
push
inc
push
add
arpl
xchg
out
mov
setbe
pop
xchg
or
ret
je
iret
loope
dec
mov
pop
sbb
push
outsb
sarb
pop
shll
dec
shl
test
in
adc
xor
pop
pop
addr16
jne
test
mov
imul
adc
sbb
cmp
jns
arpl
add
pop
jb
push
mov
sub
pop
pop
ljmp
and
shlb
cmp
mov
mov
test
scas
adc
mov
inc
sbb
mov
jo
push
test
ja
loope
ljmp
outsb
out
sub
aas
push
insl
and
sbb
jmp
cltd
stos
mov
bound
js
add
jbe
and
sbb
dec
das
pop
mov
lods
fbstp
push
jecxz
das
rcll
cld
xchg
test
loopne
test
xchg
ret
ja
mov
push
mov
jne
daa
imul
sbbb
xor
movsb
sbb
fnstsw
inc
fstpt
or
in
mov
sbb
adc
insb
or
iret
sbb
xor
movb
aam
sub
push
mov
lcall
aas
sti
mov
xchg
add
mov
shlb
test
mov
mov
and
lds
xor
insb
addr16
sbb
jnp
mov
jge
xlat
hlt
lea
cmp
xchg
pushf
outsl
int
int
jns
cmp
add
mov
pop
lahf
fistpl
mov
mov
dec
test
pop
lret
jno
pop
pop
dec
xchg
aad
jne
xor
inc
in
cld
jp
icebp
int
inc
test
lods
inc
adc
scas
push
jp
sar
in
add
inc
pop
xor
sub
aad
jb
sarl
push
sub
cmpsl
pop
sub
scas
inc
idivl
gs
cwtl
int3
lret
insl
sub
mov
ret
sub
mov
divb
jae
jl
sub
xchg
xor
insl
lods
inc
mov
mov
loop
loopne
jp
addr16
inc
lea
jle
ds
xchg
and
ret
inc
or
push
push
sub
inc
bound
sub
cmp
je
lret
jbe
lock
data16
jmp
stc
adc
mov
mov
shll
sbbl
negl
mov
clc
or
or
iret
and
es
hlt
jo
mov
push
jmp
bound
cmp
mull
call
or
sbb
jmp
bnd
daa
cmpsb
jne
in
lods
in
mov
ret
cmpsl
jne
mov
inc
lret
xor
lahf
ss
aad
lret
into
popa
leave
pusha
mov
inc
out
xchg
aaa
in
add
std
xchg
dec
insb
jg
aad
leave
pop
scas
inc
fucomi
cmpsw
inc
pop
test
loopne
push
add
mov
pop
mov
cmp
xor
sbbl
sbb
ret
aas
sbb
dec
fadds
or
cltd
sbb
cmc
push
cwtl
xor
cs
jbe
cmp
mov
sti
lods
xor
adc
jnp
cmc
lsl
adc
xchg
js
aam
mov
arpl
roll
das
sahf
lock
adc
and
mov
mov
jnp
sub
adcl
rolb
sbb
pushf
dec
inc
mov
or
dec
add
movsl
pusha
push
sahf
movsb
cmp
ja
push
cmpsb
iret
imul
pop
icebp
jge
cmc
xchg
sub
in
loopne
sub
pop
mov
movsb
jl
and
ret
or
pushf
dec
sub
leave
lret
push
je
loopne
jns
shll
jne
out
lds
aad
lret
scas
inc
cmp
dec
jp
mov
icebp
pop
dec
pop
mov
xor
loop
mov
addr16
adc
jae
gs
lret
pop
push
and
lcall
pop
std
mov
movsb
push
shr
jbe
cmp
or
push
adc
mov
jp
std
aad
test
in
jns
fwait
pop
pop
je
loope
in
imul
xor
pop
dec
adc
imul
mov
push
enter
std
mov
fsubs
jae
xor
mov
in
add
xor
lret
scas
sbb
pop
inc
out
dec
inc
lds
sub
sub
enter
add
in
xchg
pop
imul
jb
out
loope
adc
sbb
lea
jp
push
je
jnp
call
jp
dec
mov
fxch
xlat
jge
cmpsb
mov
nop
pop
sub
imul
lret
push
test
xchg
pop
enter
xor
jmp
push
mov
jl
jno
mov
aad
imul
dec
push
in
cmp
out
jp
push
fs
mov
cld
pmuludq
sbbb
push
and
inc
add
je
out
sub
jge
sub
jl,pn
inc
mov
inc
test
fnstcw
and
pop
xor
imul
jmp
inc
fsts
add
add
xchg
arpl
sub
mov
mov
stc
es
mov
fwait
push
mov
pop
xchg
adc
add
stc
adc
sub
pop
inc
scas
xchg
ret
hlt
inc
add
mov
jle
sub
add
adc
das
pop
or
cmp
clc
mov
loopne
in
syscall
sbb
lock
jmp
pop
lds
divw
jl
sbbl
insl
adc
es
push
or
lock
pop
jg
subl
testb
out
xchg
mov
ret
je
test
and
dec
outsl
sbb
xchg
dec
dec
js
ret
jle
adc
inc
ret
dec
hlt
leave
loope
aas
insl
addl
into
mov
mov
out
seta
or
sbb
aas
shll
scas
loopne
shrl
adc
mov
lods
loop
push
push
in
test
mov
pop
enter
mov
test
mov
mov
pop
jnp
and
inc
mov
aaa
arpl
jecxz
mov
sub
lret
sub
lcall
nop
xchg
shrb
adc
mov
pop
repnz
rcl
fsubs
jp
subl
gs
popf
repz
stos
adc
adc
jo
dec
and
or
bound
sbb
mov
into
int3
enter
fucomi
adc
sbb
cmp
insl
pop
mov
nop
mov
adc
or
repz
mov
jg
inc
xor
push
movsb
sbbb
rcrl
xchg
pushl
pop
sub
adc
ret
pop
nop
mulb
jmp
aaa
pop
dec
in
sbb
add
and
jns
push
out
mov
add
test
ja
xchg
and
stos
add
inc
and
push
leave
int
movsb
fisubrs
dec
aam
jne
je
sub
mov
nop
rol
mov
add
dec
mov
cmp
repnz
lret
cmp
addb
pusha
out
or
jno
xor
scas
in
xlat
inc
jnp
xchg
cmp
add
roll
xchg
ja
dec
pop
das
jo
xchg
dec
addr16
ja
cld
cli
fucomi
sbb
and
jmp
jb
int
pop
or
popf
sub
mov
pop
ds
mov
sub
cmpsl
pop
out
add
fimuls
push
outsb
dec
cwtl
mov
jmp
mov
pop
in
push
dec
enter
sahf
add
out
ret
data16
lcall
pusha
xor
scas
cmp
jnp
in
push
in
or
or
sub
push
and
jo
jle
sub
sbb
push
add
addl
iret
xchg
pop
aaa
pop
push
adc
mov
mov
test
mov
jbe
aas
adc
in
in
or
mov
rcr
out
mov
int
fistpl
dec
sbb
test
ds
cld
je
xchg
pop
sbbl
imul
sbb
dec
lret
shrb
aas
arpl
push
mov
loopne
inc
pop
popf
or
fidivrl
xor
xor
cltd
iret
and
fldcw
jb
testb
mov
jge
or
inc
xchg
mov
xchg
in
cmp
stos
repz
fdivrl
loope
lret
pmuludq
and
mov
mov
repnz
faddl
jbe
cmp
pop
popf
sub
stos
aas
sbb
inc
mov
aaa
xor
movsl
adc
and
dec
sbbb
loop
cmpsw
popa
out
push
mov
mov
gs
test
jne
push
cmpsl
mov
push
xlat
add
cltd
xlat
inc
out
ret
aam
mov
dec
fisttps
jecxz
xchg
cmp
pushf
popf
fdivl
arpl
inc
mov
repz
or
pop
or
cmp
repnz
inc
ljmp
insb
push
fbstp
mov
test
arpl
pop
addl
pop
shlb
pop
hlt
daa
cli
pushf
or
pop
jbe
repz
ss
mov
cmp
jo
jns
imul
mov
fldcw
fistps
adc
mov
xor
cmc
mov
mov
adc
jmp
pop
jmp
or
pusha
bnd
rcll
push
shl
movsb
test
outsl
paddq
lahf
sub
sbb
cli
mov
jbe
fwait
rcl
and
in
pusha
sub
subb
dec
jns
repnz
rol
lret
xchg
xchg
into
fisttps
jle
stc
sbb
push
clc
mov
xor
pop
into
cli
in
cmp
push
sbbb
push
cmpsl
aas
inc
add
push
adc
xor
scas
lahf
xchg
rclb
dec
or
neg
test
adcb
mov
adc
inc
fisubrs
addb
jp
mov
add
out
loop
jne
jo
push
and
cmp
jae
xchg
in
inc
xchg
cli
push
dec
mov
pop
out
pop
nop
jmp
jle
push
addb
mov
jecxz
mov
aaa
jae
rcl
push
movsb
repz
ret
jns
daa
negb
dec
jecxz
loop
popa
es
pop
lcall
mov
lcall
rcll
enter
lea
jmp
fs
arpl
sahf
imul
fs
pop
cwtl
or
jmp
sti
cs
scas
fimuls
stos
pushf
jg
scas
cltd
sub
mov
movsb
pushf
jb
mov
cmp
dec
popa
repnz
and
es
lds
fsubr
scas
arpl
movsl
cld
inc
sbbl
dec
or
xor
test
adc
sub
pop
add
rcr
push
cwtl
lret
jnp
and
adc
push
enter
imul
inc
insl
test
les
gs
jns
push
pop
inc
lods
xchg
std
popf
inc
jae
xchg
sub
xor
sar
outsl
lea
or
sbb
loope
js
jns
aam
roll
dec
ds
rclb
pop
mov
popf
in
fldenv
stos
pop
dec
fisttpll
cmp
imul
shll
jecxz
fcompl
in
sbb
shll
mov
fdivl
in
stos
inc
addl
cmp
adc
mov
mov
xor
xchg
lock
inc
shrl
out
fs
jo
in
mov
mov
mov
pop
lcall
test
sbb
and
mov
insl
jbe
push
inc
cmc
rcrb
jb
inc
aas
loope
cli
pop
xchg
aas
dec
jne
movsl
enter
add
inc
mov
adc
xor
xchg
dec
lods
orb
jl
adc
stos
push
sbb
dec
test
in
xchg
jae
mov
fstl
sbbb
pushf
test
pop
repz
dec
mov
and
pop
or
add
pusha
mov
dec
orl
fnstcw
cmp
iret
dec
jae
xor
lods
mov
ror
mov
jg
iret
fdivl
mov
pop
pop
ds
outsb
sub
inc
jns
inc
inc
lret
pop
adcl
inc
outsb
in
fidivrl
insb
lret
cmpsb
mov
insl
mov
das
rcrl
sbb
leave
xorb
pop
jecxz
ja
mov
sti
mov
pop
ja
and
xchg
in
rorb
jge
jnp
jb
imul
mov
rcrb
inc
dec
adc
imul
repz
pop
mov
xchg
outsb
cmp
lds
hlt
gs
cmp
pop
push
jbe
mov
sub
test
sbb
mov
push
hlt
mov
xchg
pusha
push
xor
mov
push
cmp
sub
pop
jbe
insl
sub
icebp
xchg
jmp
dec
stos
inc
aas
mov
aad
mov
sbb
mov
clc
jae
aaa
leave
cmpsb
stc
lock
cs
out
or
mov
push
cmpsl
pop
adc
orl
idivl
fcompp
sbb
and
cwtl
das
push
and
mov
movsl
xlat
dec
ds
pop
rolb
add
inc
out
jns
xchg
xor
adc
mov
push
sub
std
inc
mov
mov
or
mov
push
cmp
dec
and
pushf
mov
pusha
ficompl
sarb
add
xchg
inc
inc
icebp
subl
xchg
clc
ss
jl
notl
rol
clc
push
scas
or
cmp
dec
mov
shll
sahf
clc
push
leave
xchg
adc
xor
mov
sub
xchg
in
push
fcomp
cwtl
push
shll
in
shrb
mov
nop
insl
ret
mov
cmc
sub
aas
mov
jo
je
xor
mov
movsb
scas
mov
test
in
inc
cwtl
sbb
xor
and
and
in
std
pop
js
cmp
lods
mov
xor
adc
add
pop
scas
fdiv
push
aad
clc
mov
aam
imul
jns
ss
jae
mov
stos
xchg
fdiv
jecxz
loopne
and
sbbl
rcr
pop
fsubrs
std
pop
cmp
mov
dec
dec
inc
test
pop
push
pop
fcmovnb
xchg
and
aaa
xlat
test
mov
pop
in
jae
lods
dec
outsb
std
aas
inc
push
push
jl
sti
fwait
cmpsb
stos
bound
clc
push
jo,pn
xor
shl
push
push
insl
stc
or
sbb
repz
les
sub
push
mov
imul
addr16
inc
jmp
add
cmp
cmp
push
cmp
jb
mov
cmp
icebp
inc
push
inc
inc
stos
cmp
fcompl
sysexit
inc
fildl
bound
xor
or
add
or
aaa
nop
test
push
add
ja
test
loope
sbb
fisttpl
movsl
cmp
pop
inc
jae
fwait
insb
jnp
inc
out
adc
aad
mov
cmp
stc
jge
mov
sbb
pop
lahf
push
and
std
xchg
or
push
mov
daa
mov
addps
test
iret
jbe
inc
push
orb
roll
es
xchg
arpl
int3
mov
popf
push
ljmp
push
lahf
fsubrs
cmpb
jmp
fxtract
test
push
call
cmp
subl
fdivl
scas
mov
bound
xlat
sub
jl
pop
adc
xor
add
jae
adc
push
cmpsb
sbb
mov
cltd
jbe
xlat
out
jo
decb
mov
in
imul
cltd
mov
fsubs
push
mov
les
lret
stc
outsl
aaa
into
lahf
out
andb
push
imul
push
ljmp
call
pop
mov
andl
xchg
mov
fs
sub
inc
push
outsl
jae
or
push
xchg
aam
int3
aaa
scas
cmp
setle
xchg
fsub
movsl
icebp
dec
push
sbb
subb
fmuls
data16
pop
mov
pusha
out
adc
mov
dec
in
loopne
aam
jbe
push
das
daa
out
xor
stc
fwait
pop
arpl
in
or
dec
mov
xchg
or
add
pusha
xchg
xor
adc
es
or
daa
test
insl
cmpsl
out
int
enter
xchg
cs
ja
cmp
push
pop
mov
into
mov
dec
call
inc
pusha
hlt
jg
xor
or
mov
int3
aad
mov
stos
pop
jmp
shlb
jb
outsl
xchg
jge
dec
mov
jno
ljmp
add
mov
das
lret
ljmp
mov
jo
dec
scas
das
repnz
sub
mov
adc
jns
incb
arpl
sbb
adc
jl
xchg
out
shrl
lods
inc
pop
mov
lret
fs
push
int3
push
jae
das
or
negl
xchg
jae
out
out
sub
mov
jb
test
jae
pop
xchg
xor
jmp
das
mov
sbbb
push
clc
push
inc
pop
add
nop
iret
sbb
jne
nop
insl
stos
cmpb
inc
repz
adcb
ficomps
mov
mov
sbb
es
inc
jno
fnstcw
lret
push
push
mov
enter
or
adc
repnz
xchg
add
fidivrl
insl
cwtl
das
popa
adc
orl
sti
xchg
cld
in
stos
inc
loopne
xor
cmpsl
xor
mov
insb
fnsave
cmpsl
ds
and
push
dec
hlt
je
call
cmp
add
pusha
imull
fs
mov
cmp
cs
popf
push
fidivs
lds
xrstor
rcrb
mov
mov
imul
std
gs
lock
sbb
cltd
imul
push
dec
jo
mov
push
xchg
pop
nop
inc
xlat
add
mov
xor
or
lds
pop
sahf
xchg
dec
sbb
or
adc
test
sahf
inc
popf
repz
ffreep
push
iret
sbb
in
pop
xchg
sub
aas
pop
fcoms
pop
mov
movsl
ss
cmp
push
cli
dec
loopne
adc
jmp
cmp
xor
add
stos
push
sbb
jno
jmp
mov
jo
loopne
push
jne
mov
sti
xchg
or
push
cmp
iret
cmp
mov
adc
cld
test
sbb
adcl
xor
scas
bound
leave
inc
push
shll
sbb
aad
mov
cmp
push
add
cmp
xchg
imul
ss
pushf
repz
or
inc
jg
sbb
out
mov
mov
cmp
sub
or
push
cmp
pop
xor
mov
scas
mov
pop
sub
sub
mov
add
sbb
dec
ret
pop
mov
fstl
push
push
ret
out
xchg
pop
cli
lock
xor
add
iret
and
orl
jle
mov
out
jbe
jae
and
xchg
add
shll
cmp
inc
dec
aad
xor
cli
cmp
or
pushl
xor
pop
add
push
xor
pop
lock
cli
xchg
jmp
dec
das
in
mov
push
jnp
cld
fs
xor
outsl
xorl
jbe
xchg
lock
xor
push
pcmpgtb
xor
daa
ds
and
fdivrl
jecxz
adc
and
xchg
jns
std
nop
push
cmp
test
jno
int
mov
xlat
jnp
or
adcb
cld
aad
mov
imul
outsl
xchg
mov
push
and
pop
icebp
int
pop
xor
fiaddl
and
dec
cld
xchg
cmp
mov
mov
sarl
adc
cmp
filds
cwtl
into
dec
mov
fdivs
fists
call
mov
addr16
in
cmpsb
xchg
and
cwtl
jnp
hlt
pop
xor
mov
add
insl
jo
imul
pop
lret
xlat
outsl
cmp
pop
lock
jae
push
mov
push
jno
dec
dec
mov
push
cmp
mov
mov
es
pop
push
add
xchg
cwtl
push
sub
rorl
push
repz
mov
sub
xchg
xchg
mov
cmp
stos
mov
lcall
and
flds
outsl
mov
out
out
ja
pop
pop
insl
sbb
dec
lds
xor
inc
pop
out
nop
insb
and
inc
mov
inc
dec
and
xchg
cmpsb
mov
ret
push
mov
inc
shrl
in
dec
cli
mov
add
stos
xlat
lods
les
outsl
enter
pop
not
js
lahf
inc
loop
imul
sbb
mov
test
repnz
popf
pop
das
lea
cmp
repz
push
xchg
jge
jp
movsb
mov
push
add
cwtl
adc
lret
sub
cmp
out
mul
enter
mov
aad
jge
pop
xchg
sub
pop
add
lahf
mov
inc
add
push
and
adc
pop
jl
jno
push
stos
into
pop
sub
std
ljmp
gs
insl
push
sbbl
pop
xor
jecxz
jecxz
xchg
fimuls
je
jle
mov
inc
shr
outsb
std
push
xchg
inc
jne
out
ja
jb
out
je
out
popa
push
mov
movsb
sbb
stc
popf
jge
sbb
rclb
and
jge
inc
lods
adc
mov
je
dec
iret
es
stos
mov
cmp
or
pop
stos
test
cs
aam
sbb
adc
insb
cmp
in
push
push
xor
aad
push
mov
ss
inc
xchg
lret
push
sub
or
sub
adc
mov
mov
mov
mov
inc
dec
and
pop
xor
fldenv
sub
push
xor
or
mov
jmp
pop
cmpsb
inc
pop
xor
mov
pop
mov
mov
jb
inc
push
adc
pop
rcl
push
testb
jbe
cli
stc
mov
dec
std
lret
stc
push
inc
fisttpll
cs
enter
pop
daa
jbe
aad
push
and
dec
inc
fnstsw
imul
mov
add
xor
inc
inc
fnstenv
xor
mov
rcll
aaa
stc
or
aaa
dec
push
lahf
jge
sub
lcall
push
in
sub
jge
xor
jge
inc
adc
mov
jp
in
jl
pop
out
mov
cs
out
and
push
xchg
mov
jo
xor
sub
push
mov
mov
or
out
test
add
jne
adc
or
pushf
outsl
scas
sub
inc
scas
mov
mov
loop
sahf
push
adc
fcomip
in
sti
xor
loope
faddl
cld
push
sbb
push
push
lds
jnp
fmuls
pop
or
and
pushf
jnp
lods
sub
scas
dec
jle
mov
xchg
fwait
sub
add
fsubrs
aam
sbb
mov
aaa
push
fmulp
fisttpl
dec
push
lods
jnp
aad
out
push
int3
jg
test
mov
pop
popa
xor
xchg
dec
jmp
icebp
call
fnstcw
pop
jns
mov
outsb
fnstsw
jne
int
jbe
aas
adc
mov
dec
sbbl
and
scas
fstpt
dec
inc
pop
dec
jnp
jp
mov
fstps
sub
sarb
stos
and
jno
push
test
rcrl
inc
repz
mov
pop
mov
sbb
sbb
pop
fwait
inc
xchg
js
andl
loope
push
jb
push
cmp
out
mov
mov
and
pop
or
cmp
jb
mov
adcl
outsl
ret
xchg
adc
aas
xchg
sub
fwait
pop
dec
lcall
popl
mov
testb
stc
jb
mov
stos
jmp
xchg
sbbb
les
lret
ja
jge
pop
stc
ficoml
fucom
sub
mov
adc
int
insb
adc
cmp
or
mov
jb
xor
mov
and
test
pusha
dec
sbb
clc
andl
push
adc
xlat
addr16
sub
std
mov
add
jp
adc
push
lcall
in
fadd
rcr
sti
fdivs
sbb
adc
cmpsb
mov
xchg
imul
sub
rcr
adc
outsb
dec
and
loope
lahf
cmc
mov
mov
mov
rorl
inc
cmp
cltd
xor
xor
scas
lret
dec
cmp
jecxz
cmp
repnz
test
js
sbb
jno
add
xchg
rorb
enter
xlat
cmc
push
aas
daa
stc
mov
and
add
xor
div
mov
lods
pop
call
into
cmp
out
add
sbb
jp
mov
xchg
lock
lahf
rcl
test
stos
jl
xchg
jle
dec
adc
pop
and
subl
cmp
inc
outsb
fstp
popf
mov
sbb
push
jp
addr16
or
jne
test
cmc
push
clc
jnp
rorb
enter
ljmp
cltd
jl
or
mov
mov
and
mov
pop
dec
iret
loop
pop
xor
dec
fsubrl
inc
filds
xchg
jo
lahf
out
in
aad
movsb
inc
ljmp
xor
and
jmp
bound
add
mov
push
adc
jne
iret
daa
scas
movsb
pop
or
or
mov
negb
iret
pop
popf
fistps
roll
jecxz
sbb
pushl
mov
xchg
in
sahf
push
mov
jnp
push
imul
xor
dec
dec
dec
stc
sub
cmp
imul
push
jb
xor
adc
jnp
cmp
icebp
test
idiv
sub
add
call
cmc
cmp
addr16
push
and
sub
popa
call
mov
mov
outsb
aad
fldenv
dec
dec
addb
fnstsw
sbb
movsl
scas
inc
cmc
dec
stos
cmp
pushf
dec
mov
dec
fisubrs
repnz
xchg
xchg
push
jne
iret
and
lret
jb
rclb
mov
xchg
mov
inc
scas
pop
icebp
aam
xor
add
and
mov
push
loopne
subb
push
sub
pop
lret
dec
fdivl
arpl
push
rcrl
dec
mov
pop
rcrb
mov
and
pop
lahf
roll
xor
call
add
lock
push
xor
ret
push
mov
popa
or
lods
mov
mov
ss
out
dec
xchg
sub
call
imul
xor
mov
dec
push
cli
dec
in
je
cli
mov
mulb
and
lock
adc
push
je
scas
jno
xchg
popf
das
add
xor
mov
js
push
pop
loop
sbb
push
orb
aas
jmp
and
push
je
mov
jle
daa
mov
cmp
jae
push
mov
xchg
insb
sub
sub
push
lea
dec
ja
mov
into
sahf
in
adc
repz
arpl
fwait
jno
push
pop
mov
sbb
cs
sbb
xchg
in
add
lods
inc
pushf
xor
dec
in
push
mov
in
jns
xchg
sub
lret
sbb
rorb
or
cmpsb
scas
push
jne
mov
movb
imull
and
mov
dec
popa
sub
xchg
aaa
mov
in
gs
inc
scas
and
addl
pop
and
out
pop
mov
mov
push
test
xor
sub
jns
enter
xchg
or
fnstcw
mov
sub
cwtl
jmp
add
cmp
mov
push
mov
or
sahf
lods
sbb
mov
lods
jae
iret
movsb
into
leave
pop
adc
inc
xchg
mov
out
out
push
mov
aas
nop
sbbb
pop
outsl
mov
sar
out
movsl
cmp
ret
out
jne
and
addr16
cmp
dec
stos
sub
or
cmp
testb
andb
xor
int
ja
clc
test
insb
and
jg
stos
pop
mov
in
clc
das
sub
enter
inc
jmp
dec
mov
inc
lcall
mov
push
sar
adc
lea
adc
fwait
jae
and
mov
lret
hlt
cmp
es
xchg
outsb
sub
inc
dec
cwtl
rorl
push
sub
mov
cmp
add
pop
rorl
repnz
mov
xchg
rolb
adc
sahf
jno
cmp
ss
adc
aaa
fdivrl
sbb
insl
ja
xchg
int
xchg
xchg
std
cmp
xor
push
imul
flds
addr16
popf
cli
fwait
cmp
xchg
xor
cmp
out
das
addr16
sub
arpl
mov
push
enter
lret
mov
xor
push
sarb
call
pop
ja
xchg
cs
pop
push
or
jge
xor
bound
outsl
lock
loopne
das
push
call
adc
rcrl
faddl
inc
pop
test
mov
cmp
mov
mov
daa
pmulhw
mov
pop
xchg
mov
das
stos
negb
dec
fildl
cld
xchg
mov
in
out
sbb
in
inc
add
mov
or
xchg
sbb
jmp
push
inc
gs
je
add
ja
pushf
xor
xchg
shr
arpl
cli
negl
aaa
push
jo
loope
sub
mov
xor
inc
xchg
cwtl
add
jnp
andb
cmp
mov
enter
pop
cmp
mov
xchg
jns
loopne
fistpl
xor
cmp
roll
inc
cmp
xchg
roll
ljmp
push
xchg
mov
push
ficompl
shll
and
pop
je
sbb
les
rorl
mov
jl
mov
mov
leave
xor
mov
sbb
sbb
xor
jns
mov
in
adc
movsb
outsl
mov
scas
shrb
add
sub
lods
inc
sbb
lret
cmpsl
mov
outsb
inc
add
jbe
pop
rcrb
inc
inc
push
jne
xlat
cs
out
xor
mov
push
adc
pop
inc
jge
fdiv
outsb
mov
loopne
pushf
xor
add
pushf
sub
mov
mov
pop
adc
inc
and
adc
scas
cmp
xor
sbbb
jg
loope
and
popa
inc
cmpsl
push
in
jbe
fsubs
mov
mov
sbb
or
and
or
dec
js
es
dec
pop
jecxz
loope
cmp
fcom
cs
pop
aad
push
xchg
mov
xchg
das
movb
daa
jns
xchg
dec
inc
cmpsl
sti
jbe
fsubr
push
mov
lret
andl
sub
lock
push
pop
mov
test
cmp
cli
push
xchg
dec
cltd
bound
sub
movlps
test
push
or
sbb
pop
and
ret
mov
retw
pop
cmp
mov
mov
out
call
push
fstl
fsts
stc
aaa
pop
subps
and
cwtl
shr
nop
sub
lds
aad
icebp
outsl
mov
popa
enter
sar
repnz
jl
fwait
cmpsl
pop
cmp
loopne
push
jnp
shr
mov
xor
scas
xchg
inc
scas
add
lods
jg
jle
jge
rorb
imul
inc
sub
mov
jmp
lea
sub
notl
dec
rcrl
xor
data16
push
mov
iret
fmulp
in
mov
mov
fwait
lods
inc
push
and
enter
into
mov
jp
cmp
dec
sbb
mov
jno
cmp
or
cmp
adcb
pushf
mov
add
mov
sbb
sub
mov
ret
fsubrs
push
and
lds
in
adc
shl
ret
clc
cli
jnp
sub
pop
movsl
bound
gs
cwtl
loope
inc
in
lods
cld
out
push
loop
das
pop
loopne
and
aas
dec
jo
orw
mov
les
div
dec
add
enter
push
repnz
loopne
and
rcrl
and
imul
mov
sbb
fmull
cmp
mov
dec
lods
pop
out
das
pop
cmp
scas
cmp
fistpll
or
adc
rol
add
add
sahf
sub
out
adc
pop
leave
jno
xor
inc
cmpsl
cld
fisubl
or
cli
or
sti
xor
xchg
pop
nopl
jg
repnz
fimull
cmp
lods
outsl
mov
push
adc
in
jp
xor
sti
iret
rcrl
mov
adc
stos
clc
mov
mov
pusha
cmp
mov
leave
popl
add
cli
xchg
lea
fwait
and
fdiv
mov
mov
out
roll
push
in
jge
addr16
jno
cmp
out
imul
dec
xchg
fs
xchg
xchg
add
in
cmp
pop
insl
int
cmp
sbb
ljmp
xchg
push
jbe
or
repz
shrl
pop
mov
xchg
mov
sbb
testl
dec
cmp
push
repz
lahf
mov
icebp
xchg
sub
shl
lahf
ss
xor
xchg
xor
xor
in
jne
pop
mov
lds
or
lret
jg
ret
sbb
jns
or
pop
push
icebp
mov
dec
inc
gs
ja
bound
pop
xor
mov
ja
call
or
push
pop
sbb
and
les
sbb
mov
decb
bound
aad
jne
clc
test
addl
cmp
cltd
test
pop
and
ret
add
lods
fnsave
loopne
lcall
insb
pop
dec
loope
dec
ja
xchg
fs
into
ret
xlat
sahf
mov
int3
es
test
mov
dec
outsb
es
cmp
or
adc
arpl
xchg
and
test
jno
xchg
sarl
mov
mov
inc
or
out
movsl
ret
sub
cmpsl
xchg
push
lret
out
cmpsl
xor
adc
cmp
cmp
aam
dec
andb
xchg
mov
pop
sbb
std
or
push
int3
cmp
insl
out
out
mov
cmpsl
or
jbe
inc
repz
jns
int3
adc
test
sub
xor
lret
lahf
push
cli
out
lret
dec
xor
pushf
stos
cmp
add
sbb
lcall
push
mov
aad
sub
mov
add
mov
hlt
mov
cld
loop
ja
sbb
xchg
push
mov
sub
pop
jmp
loop
xor
push
add
pop
cmc
jno
lret
retw
jge
push
fisubrs
ficompl
fists
movsb
dec
pop
js
cmpsb
mov
in
loopne
cwtl
jl
mov
ficompl
aam
adc
repz
xchg
pusha
mov
xor
jp
jb
pop
fisttps
mov
adc
add
xor
bsr
scas
xor
mov
lahf
jns
mov
mov
and
popf
fsubs
mov
mov
jns
cwtl
or
inc
ljmp
out
shl
imul
xchg
test
sub
leave
sbb
mov
mov
jle
mov
in
xchg
fs
aad
call
dec
sub
dec
inc
aad
fucomp
pop
push
xor
je
rolb
clc
or
sub
pop
push
sbb
pop
sub
xchg
adc
sarl
xchg
mov
push
outsl
daa
dec
push
data16
pop
fiaddl
in
mov
pop
in
add
push
xchg
cs
idivl
aam
mov
mov
addb
dec
movsl
mov
sbb
test
adc
inc
pop
xorb
mov
inc
add
inc
fistl
int3
out
inc
test
out
xor
aas
push
stos
push
or
add
in
sbb
sahf
dec
cmpsb
add
mov
test
popa
loopne
sub
xchg
pop
popf
les
in
inc
cltd
in
or
mov
js
or
cmp
xchg
mov
mov
jge
fsubrl
outsb
sub
push
inc
sbb
pop
cmp
push
jl
lock
cmp
lds
push
aaa
dec
adc
xchg
mov
or
add
stc
shl
and
into
adc
mov
shrl
cwtl
fidivrs
int
xor
sbb
xor
pusha
push
mov
or
das
out
outsl
mov
jp
pop
in
lret
rcll
movsl
cmp
sbb
testl
push
sbb
mov
rclb
in
aas
adc
clc
iret
test
ja
add
popfw
lods
popa
inc
jp
add
imul
cmpsl
out
and
subl
enter
cmp
inc
fdecstp
hlt
insl
inc
add
add
arpl
test
lds
negb
xchg
clc
insl
test
lcall
jne
xor
cld
hlt
je
out
insb
sub
add
xlat
int3
adc
mov
pop
add
jmp
dec
xchg
pop
jbe
int3
test
inc
loop
jae
mov
cli
adc
mov
loope
leave
lds
movsl
sbb
add
int
out
jbe
pop
mov
cmp
and
adc
push
stos
xchg
into
lds
fwait
xor
mov
rcr
mov
dec
test
cmp
rol
fdivl
pusha
mov
fldl
cmove
out
aam
mov
stos
or
pop
cmp
add
push
fisubrs
or
cmp
iretw
dec
sub
push
lods
scas
sbb
aam
xchg
mov
cmpb
enter
imul
divb
sbb
leave
rolb
mov
mov
nop
fmull
scas
cli
std
push
jae
sbb
cmp
sahf
sahf
push
add
fistl
mov
xchg
das
cmp
add
adc
fnstenv
scas
xor
mov
jnp
js
jp
lret
mov
cld
inc
add
or
in
push
outsb
sub
sbb
fbstp
lea
mov
ja
lods
or
ret
fildll
adc
jle
mov
cmp
pop
jo
fwait
or
cmp
inc
dec
mov
mov
mov
gs
call
jne
outsl
push
imul
mov
mov
or
jl
xchg
outsb
cli
roll
cmc
add
movsl
movsl
push
loop
sbb
cmc
mov
sahf
inc
pusha
cwtl
push
mov
ljmp
sbb
lahf
xor
loope
xor
push
or
jb
jns
cmp
add
mov
mov
loopne
lods
inc
sub
mov
test
push
repz
add
xchg
outsb
out
xchg
pop
daa
adc
lock
outsb
and
lret
lods
push
stos
jecxz
mov
sbb
sbb
sbbl
mov
loope
jecxz
and
push
fdivrs
roll
call
push
mov
imul
sbb
cmp
or
das
sbb
add
fbstp
mov
jecxz
in
negb
repnz
jae
mov
sub
dec
iret
add
ja
xor
lcall
or
or
xor
pop
cmc
push
lahf
popa
inc
sbb
jl
jno
mov
data16
fwait
lahf
push
cmpsb
lea
xor
and
loop
push
pop
and
and
and
sti
fwait
paddd
addr16
sbb
add
in
jae
xchg
push
jbe
loopne
in
ja
push
fldenv
stos
cmp
xor
loopew
pushf
cli
ljmp
xchg
adc
sbb
lret
es
sbb
adc
test
stc
push
push
push
gs
xor
xchg
fisttpll
mov
pop
pop
mov
jge
lahf
rorl
pop
testb
push
xor
out
xor
jb
xor
popf
in
popf
push
sub
andl
cmpsb
icebp
sbb
adc
xchg
dec
insl
daa
in
add
jecxz
pop
mov
shl
adc
pop
jge
cmp
dec
shlb
enter
and
lea
out
sbb
add
andl
pop
jbe
add
imul
mov
pop
and
int3
dec
xchg
dec
inc
test
pop
jo
mov
lret
push
cltd
xchg
push
or
lret
call
push
cs
in
pop
add
lret
jo
addr16
adc
fcomps
movsl
ss
push
sub
shlb
fwait
and
cmp
les
sti
push
test
jb
xchg
sub
ror
xor
add
pop
dec
jmp
jecxz
popa
mov
outsl
mov
or
lods
jecxz
mov
jp
mov
fsubrs
add
cmp
aad
xor
clc
adc
add
test
iret
int
jl
pop
out
scas
jno
movsb
insb
daa
sbb
add
push
ja
cmc
mov
adc
iret
daa
sbb
jno
repnz
and
xchg
and
test
inc
or
arpl
sub
mov
pop
mov
loopne
movsl
loope
sbb
loope
in
add
call
adc
repz
sbb
insl
fwait
roll
orb
add
es
test
lahf
andl
adc
into
xchg
add
lods
xor
subb
aas
out
mov
out
inc
test
mov
mov
movsb
xchg
int
aam
out
inc
popf
fs
lods
loope
inc
fistl
mov
jle
xor
popf
ret
jmp
gs
pop
push
jg
mov
mov
nop
popa
and
cmp
xchg
leave
lret
cld
stos
and
fisttps
dec
sub
add
pop
sub
mov
xor
sbb
jmp
xchg
sub
mov
shl
xchg
imul
dec
ret
sbb
mov
pop
insb
sub
cli
push
sub
push
mov
add
insl
imull
pop
inc
mov
dec
imulb
loopne
int3
cli
and
pop
jae
cmp
stos
das
and
push
call
dec
cmpsb
ljmp
mov
arpl
aam
cltd
pusha
jmp
mov
push
mov
outsb
pop
cmp
mov
add
lea
aad
xchg
jb
dec
js
xor
sbb
insb
cmp
addr16
cmc
cli
lock
loop
mov
add
insb
test
jg
sbb
out
outsl
pop
lock
lret
pop
inc
xlat
cmp
inc
adc
call
adcl
pushf
xor
and
lock
adc
imul
aad
jge
fnstsw
popf
push
sbb
sbb
imul
xchg
lahf
or
imul
mov
dec
cli
arpl
insl
loope
cmpsb
rcrb
push
stos
sub
xor
push
gs
das
sbb
insb
cltd
sahf
pop
out
mov
mov
or
push
scas
mov
int
mov
fwait
in
popa
iret
jp
outsl
in
mov
lds
push
les
xor
idiv
xchg
push
dec
fisttps
icebp
mov
loopne
xchg
aas
push
xchg
mov
sbb
add
pop
movsl
push
mov
jge
inc
pop
pop
cmp
pop
ret
pop
xchg
and
sbb
call
cmc
adc
pop
repnz
mov
mov
sti
cmc
hlt
jmp
or
lcall
daa
rorl
out
mov
add
repnz
inc
mul
add
push
pushf
sub
jg
fcomip
out
imul
sbb
fidivrl
imul
bound
mov
stc
lods
data16
gs
scas
sub
mov
ret
push
movsl
push
add
loop
shlb
pop
pop
inc
call
fnstcw
push
mov
out
aaa
pop
mov
jns
sbb
sbb
scas
mov
add
loop
je
stos
nop
ljmp
scas
xor
iret
shrb
sub
mov
pop
mov
xchg
pop
jbe
lock
cltd
add
mov
mov
aam
lret
cmp
outsl
inc
stos
outsb
pop
fwait
sbb
sbbl
call
addr16
pop
cmp
fs
xor
xor
dec
xchg
iret
fs
scas
int3
xor
mov
jmp
lret
fnstcw
lods
add
stc
rolb
xchg
jo
jge
test
jle
xor
insl
sbb
sub
mov
decl
lock
std
inc
add
pusha
sbb
cmp
jecxz
insl
jb
add
xchg
sbb
repnz
andl
cmp
pextrw
push
xchg
inc
lret
loope
shlb
jno
rol
out
je
and
cmp
ds
fldl
pop
loope
andb
cmp
xchg
addr16
mov
fwait
movsb
mov
cs
add
xor
mov
pop
mov
mov
lock
and
cli
popl
and
push
lds
test
and
mov
xlat
xor
movsb
clc
add
jo
xlat
outsb
cmpsl
andl
ret
dec
jecxz
push
mov
jo
sbb
xchg
int3
and
push
stos
jle
dec
sub
push
push
insb
mov
push
mov
push
push
dec
mov
cmp
arpl
or
adc
pop
lods
stc
inc
lods
sub
gs
and
and
jle
sub
adc
sahf
lret
fmulp
fstpt
mov
lret
push
push
loopne
pushf
outsl
inc
dec
scas
cmpsb
xchg
enter
fwait
stc
cmp
sbb
pop
hlt
cmp
cmpsb
rclb
pop
repz
inc
mov
sub
cmp
fistpl
loop
jg
mov
jge
xor
xchg
mov
std
mov
sbb
sbb
orb
pop
imul
bound
add
test
and
outsb
xchg
add
jo
lods
pusha
dec
pop
movsl
dec
push
enter
mov
add
sbb
sub
fnstenv
dec
lret
xchg
out
jae
rcrb
push
mov
lret
daa
enter
push
push
fnstenv
test
lret
test
decb
into
gs
sbb
in
test
into
orb
and
mov
mov
push
pop
js
mov
push
movsb
jge
jge
adc
fimuls
outsl
push
enter
or
and
sub
addr16
sub
iret
cmpsb
int3
add
mov
inc
insb
cmp
push
mov
repz
cwtl
int3
repnz
or
adc
pop
jbe
aam
xchg
mov
std
xchg
cmp
xchg
call
out
jae
push
pop
ljmp
inc
popa
xorl
mov
testb
mov
push
gs
mov
and
mov
mov
loopne
in
push
mov
aad
or
xchg
lahf
es
or
pop
sysret
ror
sbb
lods
cwtl
jmp
xchg
aam
dec
xchg
scas
push
mov
je
mov
andb
push
fucomp
xor
andl
pop
xchg
inc
pop
mov
ficompl
jnp
pop
mov
ljmp
lcall
push
repnz
cmp
ljmp
jno
mov
insb
mov
cltd
lock
pushf
ja
xchg
ret
jecxz
cmpsl
mov
mov
fcomps
lea
ja
push
out
lock
fisttpl
scas
insl
adcb
xchg
in
ja
xor
out
rcl
push
addr16
outsb
add
sahf
mov
ljmp
jbe
jp
aad
femms
bound
scas
pop
or
int
fisubrs
xlat
jae
imul
xor
cmc
sub
or
cmp
mov
or
or
xchg
push
imul
imul
jl
xor
sbb
ret
xor
daa
pop
sahf
pop
pusha
sbb
sbb
movsl
push
movsl
fdivr
adc
add
sbb
stos
std
adc
movsb
cli
test
andl
mov
sub
addl
sub
push
sbb
pop
or
sbb
sarl
mov
jle
add
mov
mov
scas
jg,pn
fcmovnb
in
adc
and
imul
je
jns
xor
adc
push
cld
cmp
decb
or
mov
test
inc
mov
jecxz
rclb
loope
pop
les
sub
xchg
xchg
cs
mov
pushf
lock
out
ss
movsb
mov
mov
sub
and
repnz
test
jg
clc
dec
pop
cld
out
xchg
sub
clc
iret
and
jbe
pop
int3
cli
mov
xchg
ljmp
jbe
fwait
inc
arpl
fnstcw
decl
mov
dec
jns
pop
sbb
cmp
pusha
negl
jecxz
leave
dec
lret
mov
pusha
lock
cmpsl
mov
sub
cmc
push
popa
pushf
add
out
mov
pop
fadd
add
xchg
mov
movsl
lds
xchg
arpl
dec
and
pushf
imul
daa
fdivrl
jnp
mov
xchg
sbb
lcall
push
in
addb
xor
mov
pop
mov
shll
xor
roll
out
pushf
or
mov
outsb
mov
xchg
scas
lcall
adc
insl
gs
mov
pop
inc
mov
aaa
repz
mov
lea
scas
sbb
rol
adc
repz
adc
pop
xchg
ljmp
imul
adc
ss
xchg
sub
sbb
mov
add
repz
mov
ret
lret
cmpsl
mov
aam
in
mov
ljmp
inc
xchg
sti
and
cmp
fidivrl
rcll
rcl
jne
jo
shrb
test
nop
pusha
dec
ljmp
inc
cbtw
dec
call
inc
cmpl
xorb
das
xchg
icebp
sbb
lret
rclb
cld
or
mov
or
test
adc
mov
je
or
cs
dec
ret
outsb
jp
pop
push
roll
push
cmp
xchg
outsl
std
cmp
add
mov
push
xchg
pop
jge
jo
data16
scas
sub
repz
repnz
popa
clc
rorl
jns
pop
jg
or
movsb
mov
xchg
popa
lods
rcl
cwtl
or
add
push
add
push
jnp
mov
rolb
sbb
jp
xlat
mov
fidivrl
loopne
in
repnz
out
xchg
pop
jno
sar
movsl
push
xor
loopne
inc
sbb
aam
jp
xchg
mov
mov
adc
xchg
pop
testb
divl
add
arpl
cmc
push
xchg
popa
mov
adc
xchg
pop
push
out
sub
mov
jae
mov
cmp
mov
mov
and
fildll
adc
fidivl
mov
pop
dec
mov
cwtl
in
sbb
je
inc
test
mov
pop
xor
scas
mov
pop
outsb
push
dec
push
mov
je
adc
push
cld
iret
mov
sahf
outsb
add
xor
call
adc
mov
adc
lock
daa
xor
adc
mov
dec
lcall
cmp
loopne
xor
cwtl
pop
lock
mov
repz
ds
lods
add
add
mov
or
hlt
das
das
xchg
cmp
out
sbb
pop
ljmp
add
push
mov
push
stos
xchg
cltd
xor
int3
lret
ljmp
es
iret
mov
in
pop
scas
cmp
incb
aad
test
jnp
xchg
movsl
out
push
pusha
ret
hlt
orl
ret
popf
gs
popa
dec
insb
jg
cs
jno
and
and
add
adc
loope
mov
mov
sub
insl
in
or
cltd
pop
iret
ss
xor
push
sub
xor
test
or
push
push
push
int3
outsl
push
inc
ret
push
push
and
cli
js
pop
push
mov
in
ss
loopne
jmp
push
stos
icebp
leave
ds
je
pop
scas
cmp
stos
je
test
jge
add
mov
insl
cltd
cmpsb
cmp
jo
fsts
mov
cmc
imul
in
mov
clc
notl
jnp
xor
repz
outsl
rorb
out
repz
outsb
sbb
or
lahf
mov
inc
data16
push
xchg
mov
xchg
test
or
mov
test
mov
xchg
sub
and
xchg
gs
or
inc
push
and
mov
icebp
or
cwtl
sub
cmp
push
sbb
xor
sbb
mov
fstpt
dec
inc
mov
pop
adcb
dec
fs
movsb
sti
and
sub
mov
outsl
call
cld
dec
sbb
shll
pop
les
inc
rorl
mov
testb
cmc
adc
scas
xchg
mov
ret
iret
inc
xlat
mov
sub
lods
pop
push
push
pop
jbe
loope
mov
xor
std
in
push
test
push
add
sbb
pop
hlt
sub
jnp
ret
adc
adc
add
jb
sub
sub
sbb
add
lcall
testb
lret
negl
sub
adc
mov
imul
popa
data16
ficompl
push
and
dec
jbe
sbb
sbb
sbb
gs
mov
je
in
sbb
das
mov
cmp
cmpb
bound
rorb
pop
dec
pop
push
popf
mov
ljmp
andb
mov
rcl
testl
add
mov
adc
dec
inc
mov
or
iret
loope
ja
mov
cmpl
jb
dec
inc
inc
int3
enter
push
cmp
cmpsb
mov
mov
pushl
xchg
pushl
cli
xor
jno
xchg
mov
mov
je
arpl
push
xchg
push
lock
mov
outsl
adc
inc
scas
iret
push
mov
or
adcl
aam
mov
xor
outsb
add
les
push
inc
dec
mov
and
int
ret
push
ds
in
xchg
test
lret
xchg
es
shrl
out
test
in
stos
loop
add
int
jecxz
sub
jnp
int3
aad
std
sub
cmc
inc
mov
dec
ljmp
or
inc
push
enter
ret
lods
or
sbb
mov
push
and
inc
dec
js
cmp
inc
bound
pop
icebp
arpl
insb
or
sbb
jbe
xor
xchg
mov
in
mov
aaa
sbb
dec
pop
xchg
arpl
lods
mov
sub
pop
jne
push
inc
divb
aaa
mov
mov
in
rclb
dec
jl
jl
adc
mov
loopne
leave
adc
leave
pop
shl
lods
pop
dec
dec
sub
xor
push
pushf
cmp
and
mov
insl
test
fimull
fildll
fmul
xor
imul
fcoml
mov
outsl
cmpsl
pop
mov
lahf
jp
adc
cli
fisubrl
movsl
jne
sbb
push
es
inc
sbb
pushf
sbb
lds
mov
push
adc
or
shlb
and
mov
mov
jnp
and
push
fisubl
add
xchg
add
sub
fisttpl
cmp
xlat
jae
cmc
les
push
xchg
jge
mov
jns
jecxz
xchg
dec
shlb
repnz
pop
out
fdivrl
mov
adc
xor
pavgw
ljmp
cs
mov
movsl
xchg
mov
and
insb
lods
dec
inc
jno
dec
insb
je
sbb
mov
pushf
repnz
cmp
jnp
mov
jnp
bound
test
rorl
sti
pop
mov
push
adc
adc
punpckhdq
lret
mov
mov
enter
sbb
xchg
pop
jnp
push
lahf
test
add
push
fs
sbb
sti
gs
or
add
rolb
stc
movsl
xlat
jno
pop
loop
lods
push
jnp
notl
ds
adc
scas
sbb
add
iret
pop
stos
jae
out
int3
in
popa
idivl
test
cmp
adc
xor
pop
shl
mov
cmp
aam
sbb
and
pop
lds
dec
xchg
adc
or
aad
adc
lahf
sub
bound
movsl
inc
sbb
push
cmp
test
int3
pop
or
loop
icebp
insb
in
mov
enter
jmp
dec
mov
jl
lea
lcall
cmp
pop
mov
dec
out
in
inc
stc
mov
jp
xor
or
mov
or
mov
push
fidivrs
insl
pop
into
xchg
mov
pop
cmc
add
fst
and
clc
add
movsl
sbb
les
data16
mov
loopne
cltd
lcall
das
in
movsl
lea
pop
imul
and
jb
fmul
loop
jb
adc
sbb
dec
pop
mov
montmul
cmpsb
ret
dec
loopne
push
jno
stos
lock
mov
cs
mov
out
inc
out
mov
cs
inc
lock
inc
pop
xchg
rorl
xchg
xor
sub
mov
push
dec
ljmp
scas
push
mov
sbbl
mov
and
push
xor
dec
sbb
push
cmp
fstl
insb
test
cld
mov
mov
push
adc
stos
out
lahf
xor
pop
push
mov
addr16
in
aas
pop
xchg
out
push
repnz
mov
mov
mov
pop
pop
lods
push
pop
jnp
xchg
fadds
rcrb
xor
fsub
sar
pop
xor
dec
ret
pop
stc
fadd
adc
mov
out
loope
fwait
inc
popf
out
test
inc
xor
cli
fimuls
icebp
sub
aaa
add
enter
jae
xchg
sbb
adc
mov
nop
push
pop
negb
mov
inc
loope
pop
mov
xchg
sub
stc
jmp
inc
cs
dec
push
push
dec
xchg
sub
data16
mov
and
mov
mov
stos
lret
sbb
ret
lret
test
negl
push
or
dec
lahf
push
adcl
inc
test
ja
pusha
xor
andb
sbb
cli
or
popa
enter
mov
xchg
and
dec
pop
shll
pop
mov
in
add
jl
ss
stc
lea
push
mov
frstor
xor
mov
jle
test
mov
and
andl
clc
adc
pushf
pop
cmp
fmuls
jmp
inc
faddl
add
shl
rcll
mov
and
cmpsl
ljmp
sete
xorl
loopne
into
cmpsb
push
cltd
xchg
out
in
dec
loop
sub
mov
xchg
mov
test
fwait
les
dec
xor
adc
mov
fstps
adc
add
xchg
sub
xchg
dec
adc
inc
mov
daa
inc
jg
add
jge
mov
aaa
sbb
mov
pop
adc
scas
movsb
xchg
xchg
jp
push
out
add
das
shrl
push
sub
pop
mov
pushf
xchg
clc
mov
scas
into
or
stos
xor
jp
es
ljmp
mov
jns
pop
or
pop
mov
push
adcb
pop
pop
hlt
dec
jae
das
lods
and
nop
adc
lods
je
ret
add
mov
call
adc
pop
mov
adc
cld
aas
push
data16
mov
mov
pusha
pushf
or
outsl
inc
pop
fists
mov
dec
clc
jge
in
jecxz
mov
jnp
paddsb
rcll
dec
std
cmpb
push
xchg
pushf
lahf
stos
add
test
mov
loop
or
jno
jge
pop
ficomps
dec
pop
inc
shrl
add
lods
cmp
dec
ljmp
insb
or
ret
xor
pop
pop
lret
cmp
gs
neg
or
cli
jge
pop
into
fdivrl
sahf
add
adc
sub
jae
inc
mov
xchg
mov
mov
out
imul
data16
stc
adc
movsb
xchg
push
mov
dec
adc
orl
or
pop
testb
pop
cmc
jp
scas
sub
mov
aas
xchg
lods
fs
decb
sbb
inc
das
push
sbbl
aad
lahf
stos
cmpb
xchg
jmp
dec
outsl
aad
adc
nop
loope
xchg
mov
xchg
sub
sbb
mov
mov
jmp
ss
cmp
call
pop
cmp
lahf
adc
loop
mov
dec
adc
adc
hlt
sti
sti
mov
adc
cmp
fadd
sbb
shr
add
ja
or
mov
popa
xor
mov
inc
shlb
aad
inc
dec
pop
cli
jns
lods
loopne
jb
push
es
push
ss
cmp
pop
pushl
and
and
js
xor
aam
fstpl
in
stc
mov
fsubl
lahf
aad
jmp
cmp
in
test
adc
adc
cmpsl
leave
sub
xlat
push
lock
mov
es
or
andb
mov
stos
xchg
pop
das
mov
cmp
mov
sbb
and
mov
scas
xor
pop
scas
adc
insl
mov
add
vpmovdb
sbb
out
in
dec
imull
inc
mov
jbe
adc
out
lahf
out
and
pop
push
call
xor
adc
push
pop
push
jl
push
sbb
in
sub
in
sahf
pop
lcall
rorb
addb
lret
jo
cmc
sbb
mov
dec
pop
jb
or
pop
sarb
sub
cs
xchg
repz
jecxz
adc
cmp
insb
or
incl
sub
sub
add
mov
cwtl
or
outsb
mov
or
sbb
inc
inc
aaa
stc
negl
cltd
dec
fwait
push
xchg
stc
mov
inc
leave
or
xor
movsl
dec
dec
scas
xchg
fwait
add
ds
fisttpll
jle
adc
insl
inc
jne
rorl
call
incl
iret
retw
jb
and
jmp
hlt
mov
pop
xchg
cmp
xlat
push
cld
add
subb
and
dec
pop
inc
sub
jae
pop
nop
pop
xlat
scas
jb
std
notb
call
shll
pop
lret
add
sbb
add
push
cmpsl
push
pop
lods
repz
repz
sbb
lret
or
lock
adc
sti
test
xor
jae
stc
xor
xor
dec
cmp
aas
sub
stos
jmp
lret
push
lods
ja
or
sti
mov
mov
setno
insl
out
rcrb
lret
jmp
ds
push
repnz
xchg
sarl
movsl
arpl
push
xorb
cmc
stos
add
repnz
pop
push
out
pushf
jle
rol
movsl
jns
mov
in
hlt
test
push
inc
sub
std
push
inc
stc
jmp
and
ja
xor
cwtl
sub
call
adc
cmp
imul
xor
filds
pop
adc
inc
jl
and
jle
mov
sbb
lods
dec
inc
adcl
push
push
cmp
lea
sub
ja
and
pop
sar
push
in
insb
outsb
or
pop
xor
sub
faddl
lock
push
dec
pop
push
mov
out
fidivrl
addr16
inc
push
mov
ret
xchg
out
test
shll
sbb
jne
jle
mov
repnz
sti
and
push
sub
or
arpl
cmpsb
cmp
lret
outsl
and
lds
test
test
js,pn
cld
cmp
inc
cli
inc
jbe
test
inc
lcall
mov
lret
jle
bound
jmp
loope
jge
stos
add
sub
push
jno
pop
aaa
addb
xchg
in
test
clc
out
out
and
or
pop
cmc
nop
inc
adc
loopne
mov
mov
faddl
or
popl
fcmove
lret
fscale
mov
dec
aad
into
mov
dec
iret
or
inc
xor
pop
xorl
inc
popa
mov
ret
xchg
lds
loope
rolb
pop
fs
add
scas
ret
or
jmp
xchg
das
xchg
lock
sub
and
cmpsb
add
lds
cmpsb
push
imul
mov
push
or
enter
jb
imul
cmp
in
dec
stos
mov
movsl
sub
mov
cwtl
dec
in
pop
pop
icebp
ja
out
fbld
fsubs
leave
test
mov
pushf
push
cmp
subl
push
std
or
rol
iret
xor
lods
popa
inc
les
adcb
push
adc
cwtl
out
inc
loop
outsl
add
inc
xchg
or
dec
sbbb
mov
test
iret
adc
push
jnp
add
out
push
mov
imul
jl
pop
push
cmp
xor
or
push
loopne
scas
pushf
and
popf
push
jl
inc
scas
cmp
fnstenv
xlat
pop
popf
dec
push
dec
dec
jg
sti
scas
icebp
dec
cmp
roll
sbb
lods
lcall
cmpsl
mov
sub
xor
xchg
dec
sahf
lea
push
cmp
push
push
mov
cmp
in
sbb
push
jb
mov
aaa
push
cmp
inc
hlt
test
push
pop
and
cmpsl
clc
push
fisubl
in
test
je
jno
mov
inc
outsl
jg
inc
popa
mov
pop
jg
push
call
sbb
dec
mov
fwait
push
out
inc
xor
jne
sbb
add
jl
or
mov
jnp
mov
cmp
add
inc
xor
dec
push
inc
mov
xor
fbld
int
out
clc
orb
mov
adc
mov
cmp
call
push
push
out
cmp
lahf
testl
and
sbb
or
cmp
mov
jge
cmpsb
xchg
dec
push
push
cmp
cmp
or
inc
mov
mov
or
rcrb
add
xchg
push
dec
cmp
push
or
push
fcomps
xchg
push
push
add
jb
xchg
dec
mov
mov
jl
add
adc
lock
addr16
or
dec
call
or
ljmp
sbb
jnp
and
fdivrl
das
sbb
sub
push
xchg
adc
jno
out
scas
add
imul
aas
push
cs
es
cmp
movsb
pusha
ss
daa
in
test
jns
jg
adc
jae
dec
pop
push
xchg
fdivrs
or
lods
jae
adc
pop
das
jg
shrb
pop
pop
push
subl
fiaddl
lds
push
std
mov
jecxz
dec
aas
test
cmpsb
cmp
inc
fcmovb
imul
pop
sti
fstl
sub
and
insl
mov
adc
adc
pushf
mov
int3
arpl
xchg
and
inc
push
ljmp
and
lea
enter
xchg
sarb
outsl
mov
add
insl
adc
and
xor
cmp
fwait
or
cmp
mov
pop
fmulp
filds
cmpsl
push
repz
in
aam
and
adc
lods
cli
int3
jns
push
shll
jecxz
dec
pop
and
push
dec
test
xchg
add
adc
addr16
ja
jmp
or
test
lea
and
sbb
ljmp
jb
pop
add
sub
cltd
test
xor
popa
ljmp
mov
cmp
fsubrp
lds
stc
or
mov
rorl
lods
jmp
cmp
pop
and
pop
add
pop
cmc
inc
rorl
push
push
xchg
jno
loope
lds
adc
lcall
jbe
xchg
push
push
mov
lods
push
cmp
in
decb
mov
and
outsl
adc
dec
cmp
mov
lock
scas
jno
sbb
dec
ja
stos
mov
push
gs
ds
push
sub
and
pop
and
mov
sbb
mov
push
mov
push
in
mov
add
pop
and
pop
adc
lods
neg
fstpt
add
lahf
inc
inc
popa
dec
jmp
xor
and
mov
mov
out
cmc
or
sub
inc
jno
mov
bound
arpl
insb
call
push
mov
repz
adc
mov
pop
mov
xchg
push
test
cmp
and
xor
mov
in
fsubl
in
adc
sub
or
ljmp
fwait
sub
daa
lcall
push
jmp
jne
scas
out
jb
xchg
mov
cld
cmp
popf
stos
bound
add
outsl
addr16
lods
insb
add
mov
aas
repnz
dec
sahf
mov
pop
pop
jne
add
jbe
je
or
negl
xchg
jge
mov
lods
lds
sbb
int
adc
xchg
or
sub
mov
and
xchg
pop
incl
pop
push
push
jp
jl
xchg
dec
and
lds
fs
push
iret
arpl
add
push
and
inc
mov
dec
mov
mov
lods
cmp
mov
cmp
xlat
sub
outsb
lds
jl
pop
scas
in
sub
ds
sbb
frstor
leave
dec
lods
lds
mov
test
add
popf
int3
cmp
sub
mov
jno
mov
xlat
sbb
jo
icebp
insl
shll
pop
dec
pop
pop
mov
mov
push
inc
dec
cmp
mov
outsb
dec
mov
push
mov
pop
sarb
mov
or
mov
ss
call
add
scas
aam
pop
fadd
cltd
ja
sub
cmc
xchg
jmp
pop
mov
addr16
shrb
and
push
sub
int
push
daa
mov
call
or
xchg
dec
cmpsb
push
fucomp
pop
add
int3
xlat
pop
adc
xlat
xchg
das
jns
out
stos
push
sbb
cmp
cltd
xor
out
lea
pop
fnsave
and
out
xchg
mov
dec
mov
xchg
add
pop
jnp
fs
pusha
mov
push
jmp
leave
rorb
inc
mov
push
cli
call
mov
out
push
andb
sub
cld
addr16
pop
cwtl
mov
sub
cmc
pop
inc
push
add
mov
lcall
push
xchg
jp
jno
ljmp
aad
cmp
sti
add
es
loopne
scas
xorl
fidivs
push
mov
or
cs
push
jae
inc
stc
jge
xor
mov
sarl
addr16
je
adc
int
xchg
push
sbb
lret
pop
jo
in
repz
cmp
adc
fcomps
xor
inc
pop
sbb
mov
ja
xchg
push
or
aas
addr16
repnz
out
dec
push
sub
push
loop
inc
inc
in
xchg
scas
fldcw
mov
mov
ret
or
push
xchg
dec
fildl
cmpsb
stos
dec
adc
repnz
mov
mov
icebp
push
or
dec
jle
outsl
adc
js
add
sbb
sti
pop
cmp
lcall
in
stos
outsb
out
out
inc
das
push
inc
inc
xchg
int
repnz
shrb
sbb
cs
and
push
mov
jno
icebp
and
jbe
jmp
push
iret
fisttps
cmp
imul
fstps
adc
add
xor
or
xlat
lret
loop
hlt
lcall
jecxz
pop
inc
push
flds
mov
adc
lret
push
int3
pop
mov
lret
ret
aaa
pushf
or
jno
loopne
stc
adc
stos
jle
in
push
int3
loop
fsubl
xchg
les
popf
mov
jg
rclb
jae
inc
jge
fistps
hlt
aad
je
stc
loop
dec
mov
fst
mov
je
int
mov
dec
xchg
sar
cmp
aas
mov
push
lret
jmp
push
fisubl
mov
push
xor
jmp
mov
inc
in
jb
pop
movsb
or
test
pop
mov
xchg
movsb
xchg
xchg
xchg
adc
mov
fld
and
cli
mov
lea
push
cli
xchg
sahf
and
sbb
loope
ss
imul
adc
jns
mov
xlat
es
jle
out
mov
dec
cmp
jge
mov
pushf
mov
enter
dec
jbe
xor
mul
and
inc
pop
call
mov
dec
fcoms
sub
lea
cwtl
bsf
ja
push
jp
into
mov
mov
ficomps
mov
sbb
push
fnstcw
or
jno
aas
fdivl
pop
les
jmp
aaa
push
pop
push
hlt
inc
mov
or
xor
andl
test
mov
push
sbb
cs
or
push
fmull
sub
cli
pop
testl
pop
pop
cmp
incb
inc
sbb
jge
sbb
mov
push
lods
sub
push
xor
xchg
js
dec
push
cmp
fbstp
pop
pusha
scas
sub
hlt
test
out
lods
sub
xchg
cmp
xlat
mov
aam
rorl
mov
mov
movsl
fstpl
inc
cmp
shrl
pusha
mov
adc
or
pop
scas
sub
rcrl
and
loopne
call
fstl
cmp
jae
imul
addr16
fists
outsl
cs
inc
std
repnz
push
mov
pop
les
jnp
push
and
shll
pop
icebp
test
and
pop
mov
push
mov
not
push
out
aaa
mov
fs
lret
dec
fbld
cmc
mov
lea
in
xor
xor
lds
mov
loopne
pop
negl
out
mov
mov
daa
outsb
loope
mov
mov
in
shrb
adc
js
push
or
jmp
ficomps
ss
dec
hlt
faddl
cmp
xlat
mov
pop
mov
sbb
mov
into
in
sub
inc
incl
daa
gs
jg
push
mov
into
into
in
xor
fnsave
push
leave
icebp
push
dec
pop
in
pushf
popa
jg
ljmp
mov
or
and
subl
pushf
les
sub
cltd
cltd
lods
rcrb
ljmp
cmpsb
jmp
add
mov
popa
scas
jns
jns
stos
les
sub
jle
fsub
pop
ficoml
hlt
pop
repnz
mov
cmp
or
xor
sarb
cltd
or
lea
ret
sub
mov
lcall
sete
call
push
sub
stc
push
pop
outsb
aad
pop
arpl
push
cwtl
dec
fsubl
insb
mov
sub
clc
cmp
jno
clc
inc
adc
outsl
lret
fldcw
stos
adc
in
cmpsl
out
mov
push
jns
or
mov
loopne
ret
scas
jnp
int
mov
cltd
imul
mov
sbb
fstps
inc
shll
mov
sub
mov
in
and
fsubr
fadds
scas
or
andb
in
into
pushf
pop
dec
push
mov
push
and
arpl
inc
ja
lods
test
inc
subb
out
fcoml
dec
test
js
stos
in
sbb
stc
add
iret
into
push
sub
pusha
aaa
and
mov
push
scas
or
icebp
dec
outsl
mov
dec
ds
icebp
xchg
cmp
test
hlt
push
pop
adc
cwtl
jp
cmp
mov
mov
add
ret
insb
test
vcmpps
push
fistps
dec
sub
jecxz
daa
daa
fldcw
flds
dec
movsl
testl
cmp
nop
mov
add
pop
cli
xor
adc
xor
xor
mov
push
jnp
loop
sbb
pop
dec
pop
stos
inc
cmp
cmp
fcmovnbe
enter
xor
outsl
sub
dec
mov
sbb
adc
ljmp
sub
stos
gs
jb
sub
js
lcall
adc
and
jl
dec
fistps
addl
sub
imul
clc
and
xchg
mov
adc
dec
jmp
cs
jo
xor
imul
push
mov
pusha
pop
adc
mov
orl
jbe
mov
mov
loop
lcall
sub
jg
int
add
fwait
imul
lods
daa
add
inc
xor
ljmp
pushf
xchg
ds
lahf
repnz
add
jno
in
sub
dec
test
in
rcrl
dec
aad
insl
inc
das
dec
cmp
push
fstps
aad
push
daa
aad
sub
stc
lea
sbb
pop
lds
add
jns
push
inc
jns
lds
inc
inc
aas
add
out
in
xchg
inc
fiadds
arpl
je
fiaddl
mov
divl
mov
xchg
cld
sarb
dec
mov
pop
add
imul
push
mov
sub
xor
sub
mov
popf
jo
outsl
ret
pop
mov
dec
loope
lcall
push
lret
cs
mov
test
lcall
jbe
mov
hlt
js
add
jno
mov
jns
nopl
xchg
push
cwtl
nop
sub
sub
jg
cmpsl
mov
pop
adc
imulb
adc
push
xchg
xchg
dec
xchg
das
adc
pushf
cmp
pop
jbe
call
sbb
and
mov
ds
std
sbb
mov
jns
mov
inc
adc
inc
popa
cmc
cmp
xorb
sar
sbb
cmp
ss
mov
test
ss
xchg
cmpl
pop
cmpb
inc
movsl
lea
and
sarb
jnp
hlt
mov
ja
mov
xchg
insb
jl
test
sub
push
ja
mov
movl
subb
inc
push
xor
and
cmp
inc
sbb
dec
or
mov
add
rcrl
fcomps
or
pop
fsubl
into
sub
aaa
popf
jle
frstor
sti
test
mov
lods
dec
pop
lahf
data16
fcompl
mov
in
popf
sbb
fldl
popf
pop
fistl
leave
mov
push
jo
jbe
dec
ficoml
add
fcmovnbe
mov
xlat
jb
push
call
xor
test
cmp
inc
mov
pop
jmp
pop
xchg
jb
push
int3
aad
and
push
pusha
stos
sar
pop
push
lock
lds
push
push
push
push
push
xchg
fdivp
stc
inc
mov
repz
notl
dec
in
jae
out
int3
sahf
pop
mov
jbe
dec
xchg
sub
push
add
mov
ja
push
cs
repz
inc
inc
fs
int3
xor
mov
sbb
fdivrs
jne
mov
or
imul
pop
movsb
mov
cmpsb
jns
mov
in
cs
lods
in
lcall
dec
out
sbb
sbb
jecxz
leave
dec
std
adc
fsubrp
aaa
add
scas
call
les
sahf
ret
pop
dec
pop
stos
testb
les
sahf
cmp
stos
xorl
mov
jnp
lret
das
test
dec
gs
mov
push
inc
rorl
rclb
cmp
ror
and
and
xchg
fs
dec
stc
test
insl
jg
je
aaa
mov
mov
mov
lahf
sub
incb
xor
stos
inc
jmp
fdivl
or
mov
push
cli
push
fmull
xchg
mov
leave
addr16
notl
int3
jae
pop
aad
aad
lods
ret
retw
jmp
bound
mov
xchg
lcall
idivl
mov
je
mov
in
scas
call
popf
in
clc
push
sbb
ret
or
mov
in
stc
xchg
pop
daa
and
xchg
jp
xchg
mov
xor
push
pop
jle
push
aaa
fwait
xor
xor
rcll
xchg
push
push
fldl
push
mov
fimuls
call
movsl
push
cmp
jae
pop
nop
xchg
fisubs
lds
push
add
outsl
xlat
push
inc
in
jae
sbb
aaa
sub
cwtl
dec
ret
dec
in
dec
push
out
std
icebp
jnp
and
aad
push
jge
loop
out
cwtl
stos
aad
xchg
std
addr16
in
jg
mov
leave
adc
sub
mov
jp
aam
jl
iret
lock
gs
inc
xchg
mov
mov
sahf
mov
push
inc
or
fsts
test
bsf
divb
test
pop
mov
lock
dec
loop
add
cli
hlt
push
aad
cmp
mov
pushf
call
add
cmp
jp
setbe
adc
hlt
add
cmp
xchg
stos
mov
lods
xor
in
jne
xchg
adc
pop
aas
jmp
aaa
movb
imul
sbb
xchg
lods
test
mov
movsb
insl
daa
outsl
ret
test
cmpsl
insl
testl
in
add
inc
pop
out
cld
jg
loop
mov
mov
xchg
and
fldenv
or
push
in
mov
pop
ja
inc
in
mov
lahf
jnp
dec
fwait
ja
mov
mov
jg
fcmove
sbb
mov
sbb
sub
push
nop
mov
mov
leave
mov
inc
scas
sub
push
fwait
testb
lcall
cli
jecxz
arpl
sbb
sub
and
pop
lods
fildll
mov
scas
orl
jge
mov
pop
xlat
xchg
gs
mov
je
mov
inc
ret
rcrl
into
fdivl
das
shl
lea
mov
push
negb
adc
je
or
push
jecxz
lock
scas
xor
sbb
adc
adc
lea
xor
ljmp
or
add
stos
fdivp
outsb
int3
inc
test
cmp
je
sar
jb
neg
xchg
in
test
cld
fbstp
test
pushl
mov
mov
rorb
mov
xchg
pop
sub
mov
adc
xlat
xchg
and
inc
cmpsl
je
mov
insl
test
mov
cwtl
mov
insb
add
fmull
out
xchg
popf
jg
mov
imulb
push
push
pop
mov
popa
cmp
popf
xor
shrl
out
sbb
ret
out
popa
movsb
repz
shl
aam
xor
loope
jne
push
cs
lock
cmp
dec
repz
sbb
and
mov
add
int
push
adc
sub
ss
lret
dec
xchg
sbb
fisttpll
cli
and
jmp
jecxz
push
mov
shlb
aaa
repz
push
cli
push
mov
hlt
mov
addr16
jmpw
jle
mov
fists
shll
add
ret
fistl
insb
jnp
pop
pop
pop
stos
in
ja
sbb
jae
nop
adc
jo
sub
adc
xchg
es
xor
stos
and
cmp
rolb
into
test
jl
jmp
cmp
and
aad
fsts
or
jmp
pop
inc
and
aaa
lahf
xchg
in
fs
xor
push
inc
je
pusha
testl
cwtl
xchg
cltd
push
pusha
setb
aad
iret
xor
popa
enter
sahf
sub
xlat
jns
jp
clc
and
leave
in
pop
stos
or
pushf
or
dec
outsl
push
inc
loope
hlt
out
adcb
imul
adc
jbe
int
les
mov
xlat
out
faddl
lds
inc
xor
popf
stc
insl
mov
dec
jnp
mov
push
xor
iret
arpl
aas
sub
mov
inc
pop
test
add
push
adc
or
fdivrs
aaa
or
int
arpl
in
int
aas
add
mov
xchg
adc
pop
jns
iret
scas
and
popf
daa
insb
pop
fsubrp
pop
xchg
and
outsl
push
mov
out
orb
pop
in
mov
hlt
mov
push
pop
mov
ja
data16
int
rol
popf
or
es
popf
mov
xchg
mov
mov
mov
fwait
out
cli
out
ja
mov
aaa
mov
sbb
push
out
enter
mov
arpl
and
and
dec
das
xor
ret
popl
outsb
push
std
mov
adc
shrl
mov
pop
icebp
arpl
in
jne
aas
add
jns
gs
pop
dec
xchg
stos
test
dec
mov
fadd
or
enter
xchg
add
outsl
lods
movl
lea
cli
out
cmc
cltd
stos
cmp
mov
lret
cli
and
cmp
aaa
jbe
imul
test
lret
popf
stos
mov
add
adc
outsb
std
leave
jbe
push
leave
rol
pop
sub
test
jmp
test
dec
std
addb
fimull
pop
jl
shll
or
xchg
ret
sub
and
call
mov
inc
cmc
inc
ljmp
and
fistpl
push
inc
mov
push
sub
stc
inc
inc
rolb
in
push
lret
xor
leave
movsb
les
in
ret
in
inc
or
adc
stc
aaa
lea
out
mov
sub
xchg
fcmovnbe
ret
add
int
insl
jecxz
int3
dec
mov
fsts
loop
mov
or
faddp
cwtl
ret
scas
fwait
pop
sbb
xchg
cld
bound
xchg
in
lods
addb
scas
je
jne
push
adc
jp
mov
or
fwait
and
movsl
dec
andb
int
sub
int3
sub
xlat
xchg
pop
lcall
stc
lods
out
sbb
aad
fiaddl
daa
daa
push
in
and
pusha
pop
loope
rep
leave
sub
pop
fsts
mov
sbb
pushl
inc
leave
fwait
adc
movsb
mov
push
cmpb
mov
xchg
mov
mov
xchg
adc
inc
stc
jbe
and
test
lret
jb
addb
jnp
mov
negb
inc
mov
or
lahf
imul
or
push
pop
mov
mov
adc
pushf
cmpsl
cmp
jbe
add
adc
sbbl
mov
pop
mov
aaa
leave
jp
int3
sub
lock
cmp
outsl
dec
in
lahf
dec
sub
js
loop
ror
in
dec
push
repz
nop
cmp
push
stc
mov
push
sbb
jns
sbb
ds
in
sbb
push
lcall
pop
xor
sbb
sub
or
mov
insb
mov
xchg
jge
int
push
mov
jl
lods
jmp
ja
fidivl
stos
fcoms
popa
pop
mov
imul
xor
sbb
testl
scas
sub
push
rclb
mov
jecxz
push
jle
out
fldenv
cmp
sahf
mov
dec
andb
fildll
xor
out
push
repz
outsb
int3
push
mov
sub
outsl
jmp
lea
out
mul
aas
lods
add
dec
adc
mul
add
scas
cld
sbb
cmc
push
pop
xor
mov
ficomps
push
pop
dec
cli
dec
divl
movsl
pop
outsl
lcall
push
inc
lahf
inc
ret
daa
push
cmp
dec
bound
pop
int3
loopne
stc
out
repz
cmpsl
lds
enter
cmc
dec
rcrl
pop
mov
sub
cmpsb
in
adc
into
mov
cli
cmp
mov
ljmp
jl
sbbb
mov
dec
test
aam
out
inc
mov
imul
scas
dec
pop
xor
jbe
out
xor
add
addr16
daa
mov
sti
jp
aas
xor
push
or
imul
imul
and
rolb
jb,pt
jge
and
push
dec
fidivrl
xchg
xor
dec
xor
cmp
rcrl
lea
xchg
or
sahf
sub
clc
dec
in
sbb
mov
add
in
push
jmp
inc
jmp
in
push
mov
add
pop
icebp
outsl
ds
xor
popa
or
xchg
std
push
dec
add
scas
mov
push
sub
xchg
int3
xchg
in
push
dec
push
je
scas
adc
aam
jle
ret
jp
sub
mov
pop
xchg
iret
adc
push
icebp
xchg
cmp
cmp
sbb
dec
lods
subl
sub
pop
push
push
out
fcom
cmp
repz
frstor
or
xlat
mov
cmpb
pop
shr
adcb
cld
pushf
ljmp
mov
sub
push
fwait
repz
sbb
popl
push
data16
adc
xor
dec
hlt
mov
scas
loop
jnp
ja
sbb
loopne
mov
sub
and
dec
insb
testl
push
cmc
pop
loop
sub
sbbl
push
test
decb
popl
and
adc
aad
xor
dec
arpl
lock
daa
lock
pop
sbb
jmp
mov
pop
repz
mov
iret
push
add
push
cmp
incb
movsb
xchg
iret
pushfw
lods
lret
jmp
pop
sti
mov
sbb
xchg
push
imul
stos
adc
jmp
or
cltd
dec
aaa
push
sub
rsqrtps
xchg
sahf
adc
jno
ds
ja
imul
xorl
push
hlt
insb
pop
inc
xchg
or
cmp
xor
inc
push
dec
xchg
pop
enter
push
cmp
and
xchg
imul
mov
in
std
popf
repnz
repnz
jno
fwait
je
lret
add
push
daa
dec
sti
mov
adc
xor
test
sub
gs
int3
iret
push
in
sbb
pop
jg
push
pop
pop
lcall
adc
and
insb
stos
mov
jle
mov
adc
dec
insb
mov
inc
push
push
mov
mov
or
test
xchg
fcmovu
xchg
sub
mov
dec
call
mov
mov
push
out
loop
pop
iret
dec
inc
sbb
fs
sbb
test
fs
xchg
jne
fsubr
orb
or
rol
lds
pop
test
jmp
or
sbb
adc
ljmp
mov
aad
mov
cmpsl
cmp
push
push
test
out
sbb
gs
sub
adc
mov
ret
xlat
and
and
data16
or
mov
ds
int
push
into
pop
lds
sti
pop
call
inc
dec
outsl
push
decl
daa
dec
and
cli
cld
push
cmp
ret
mov
pop
loopne
or
sahf
mov
sbb
jnp
cmpsl
lods
cmp
ljmp
pushf
mulb
adc
mov
and
inc
adcb
aas
shlb
repnz
sbb
xor
call
add
mov
adc
lret
xchg
sub
call
mov
ljmp
adc
adc
cmp
inc
mov
mov
dec
aad
push
lret
aam
aaa
js
cli
frstor
mov
mov
mov
cmp
repz
xlat
and
mov
inc
cld
cmpsb
loope
xor
shr
cmp
sbb
cli
and
push
stos
mov
push
popf
sub
mov
lds
pop
pop
call
hlt
push
mov
mov
int3
pop
xchg
jno
out
ret
sub
jne
cwtl
mov
lret
aaa
aad
dec
and
cmpsb
jae
xchg
mov
sbb
mov
add
xor
push
test
jne
mov
aam
ds
dec
cli
cmp
jle
inc
test
mov
lods
inc
jne
popa
jnp
push
mov
scas
ds
xchg
jmp
lahf
xchg
ja
frstor
rcr
out
lahf
mov
mov
cmc
pop
cmc
insb
push
and
xchg
mov
aad
out
insl
sub
inc
pop
loop
inc
xor
decl
ja
popa
mov
xchg
addr16
popf
fwait
xchg
add
aas
popf
or
add
lahf
xchg
enter
mov
jnp
inc
dec
pop
inc
into
cli
pushf
aaa
call
mov
ss
fs
hlt
fwait
pop
push
daa
or
adc
add
scas
push
inc
sbbb
xor
pop
jecxz
mov
or
mov
test
xchg
cmpsb
cmc
xchg
cs
mov
pop
lock
pop
fbld
repz
rcl
loop
js
shrb
in
stos
stos
add
mov
mov
xchg
nop
rorb
dec
mov
shl
sbb
pop
repnz
les
and
adc
mov
xchg
rorl
inc
mov
push
push
inc
and
inc
mov
int
or
push
push
mov
adc
jno
inc
xchg
or
pushf
aaa
fcoms
notb
add
test
fbld
or
ljmp
jnp
mov
jp
sbb
and
or
data16
cmp
sub
sar
cmp
sbb
sub
out
push
test
popf
mov
sub
push
test
aas
ds
rorb
xor
inc
in
xor
pop
in
lea
cmp
seto
sahf
cs
movsl
movsb
add
and
test
mov
mov
push
test
adc
dec
add
or
or
gs
insl
mov
movsb
insb
mov
pop
inc
push
or
cmp
ja
add
iret
mov
ret
mov
adc
je
aad
int
add
lds
inc
inc
cwtl
add
shlb
jo
loopne
jle
in
add
lods
push
mov
xchg
lods
lds
fidivs
pop
adc
out
inc
aas
idivb
negl
add
or
or
add
popf
or
adc
mov
jns
xor
xchg
or
mov
ss
dec
cltd
loope
int
mov
mov
popf
xchg
xor
sbb
mov
mov
rol
rcll
or
leave
jae
sub
jge
enter
jnp
mov
xchg
stos
inc
cmpsb
cmp
dec
sahf
cmp
pop
daa
dec
fidivl
jge
mov
movsb
mov
or
cltd
mov
lret
adc
add
mov
dec
pop
fwait
int
pop
push
cmp
add
loope
xchg
dec
mov
test
adc
pop
das
mov
addr16
lret
add
push
int3
push
adc
add
or
decb
xchg
insb
test
icebp
dec
popf
ja
pop
jmp
push
cmp
clc
int3
xchg
sbb
cwtl
das
rcll
push
push
repz
mov
fsubl
jge
gs
imul
xor
test
loop
frstor
add
pop
outsb
sbb
cld
adc
push
divl
push
cmp
push
mov
dec
xchg
cmp
sub
sub
and
adc
leave
and
popf
aad
xor
lret
dec
out
lahf
sub
push
hlt
rolb
jno
pop
ficompl
mov
out
scas
inc
sbb
popf
pop
mov
in
fidivrl
xor
mov
jmp
push
mov
push
scas
scas
inc
fldenv
int
or
stos
mov
push
popf
in
packsswb
mulb
sbbl
mov
jmp
in
jo
adc
add
sbb
notb
xor
pop
push
jnp
and
ret
jnp
ret
inc
mov
jl
test
mov
in
in
dec
push
cmp
push
pop
xchg
into
pop
sbb
daa
cmpsb
jg
sub
jl
out
fld
add
imul
test
sti
add
stos
test
fsts
inc
mov
fcmovne
xor
dec
movsb
mov
cwtl
xor
xchg
sti
xchg
jae
dec
sbb
rcrl
cmp
push
push
movsb
fsubrs
imul
mov
je
das
adc
push
ljmp
mov
sbb
ret
or
or
sub
fcoml
leave
pusha
daa
loop
or
loopne
int
cmc
xchg
insb
cmpsl
jl
in
enter
into
imul
mov
test
cmpsb
jb
daa
sub
mov
aam
mov
sbb
dec
clc
arpl
loop
movsl
jp
add
dec
cmp
nop
pop
int
popf
imulb
sbb
push
enter
xor
mov
adc
jnp
jae
in
push
call
mov
dec
mov
lret
mov
add
imul
cmp
addr16
icebp
push
mov
inc
lock
pusha
clc
push
in
aad
cmp
pushf
pop
mov
lcall
xor
sbb
jp
in
pop
dec
xchg
or
add
shrb
mov
mov
sub
and
insb
push
add
mov
cmpsl
mov
subl
lods
mov
jno
arpl
sbb
jae
pop
inc
in
neg
fidivl
adc
stc
rcl
shl
movsl
mov
sub
adc
sti
xor
in
add
outsl
pop
mov
sub
jns
cmp
movsb
cli
cli
rcrb
and
xchg
cmpsl
xor
adc
jne
push
loopne
mov
mov
mov
jnp
cli
push
inc
add
outsl
cmc
dec
fsubs
dec
push
mov
mov
aad
loopne
adc
or
lods
sti
rcl
sub
mov
pop
sub
jbe
push
ret
sub
outsb
or
add
test
out
cwtl
cmp
pop
movsb
mov
add
sub
inc
pop
adc
sbb
out
cmpsl
call
rcl
xor
pop
in
aam
lods
out
jp
subl
lahf
cmc
jne
dec
mov
pop
add
inc
shll
xchg
imul
adc
imul
sbb
and
xchg
imul
xor
cs
stos
mov
cmp
lock
insb
adc
xor
rol
outsl
and
cmp
jbe
adc
insb
adc
outsb
in
aaa
inc
fidivrl
dec
mov
fstpt
jne
imull
mov
js
fbstp
add
cli
and
push
or
in
ljmp
js
xchg
and
mov
or
add
mov
into
cmpsb
loopne
or
adc
enter
pop
sub
movsl
loopne
enter
imul
sbb
mov
cli
xor
mov
mov
pop
inc
push
sbb
cmpsl
out
cmp
and
or
mov
mov
insl
add
pop
xchg
or
cmp
xor
es
or
scas
lcall
fistps
movsb
mov
cmpsb
mov
sub
add
out
stos
sbb
or
mov
lods
sub
bound
xor
inc
fiaddl
xor
mov
sub
sarl
xchg
dec
andb
jnp
in
xor
push
adc
sub
sub
das
mov
cmp
inc
sbb
pop
pop
mov
mov
or
icebp
and
or
xchg
mov
and
or
sbb
call
add
push
add
adc
dec
pop
repnz
popa
mov
push
cmp
pop
push
jge
inc
bound
bound
mov
ja
sahf
and
shll
daa
hlt
in
xor
sub
bswap
les
cmp
and
sbb
pop
push
repnz
jo
sbb
fidivs
xchg
out
test
push
psadbw
mov
inc
jmp
decb
jnp
push
push
cli
push
data16
ljmp
jo
sbb
dec
in
mov
xchg
iret
or
mov
mov
lods
out
movb
fpatan
mov
push
loop
out
sub
xor
sbb
sbb
mov
mull
fbstp
mov
cmp
es
pop
call
xor
ss
fcmovbe
jae
outsb
jl
fcmovnb
mov
repnz
pushf
pop
dec
lcall
xchg
insb
scas
xchg
mov
push
jae
add
adc
dec
loope
xchg
jp
cmp
xor
mov
insb
and
cltd
or
xchg
aam
rcrb
adcb
sbb
add
jg
lock
sbb
dec
insb
nop
loop
cmp
scas
jmp
pop
gs
xchg
sbb
orb
pop
xlat
or
adc
scas
aaa
popa
add
gs
lea
sbb
es
stos
shrb
aad
mov
pop
subb
repz
push
or
fimuls
xor
fs
jo
rolb
adc
inc
aas
mov
bound
cmp
or
stos
jle
jnp
ret
fdivr
in
fildll
cmp
pop
adc
jmp
ljmp
jne
das
repnz
adc
cmp
and
push
xchg
jae
cmc
leave
aas
push
push
int
ds
cs
mov
xchg
ss
xor
lock
jne
hlt
sahf
pop
cmp
cmp
dec
push
mov
popa
cltd
out
xlat
xor
mov
xchg
add
sbb
rol
push
in
or
movsl
loop
fbld
push
xor
dec
dec
mov
inc
in
imul
shl
jecxz
mov
gs
int
inc
add
fcoml
mov
mov
add
push
scas
pop
fs
arpl
dec
sub
fisttps
xlat
dec
pop
mov
loope
pop
ss
and
ret
fcomps
rcrb
scas
push
xor
fists
dec
call
inc
or
mov
mov
add
sti
popf
bound
cmpsb
jns
and
xchg
jns
mov
sbb
aad
sbb
fidivrl
mov
aad
ja
fldcw
mov
pop
sbb
mov
jno
mov
rorb
inc
xchg
xchg
stos
loopne
sahf
int3
sbb
push
sahf
add
mov
sbb
movsb
stc
sbb
mov
xchg
jae
cli
and
xadd
mov
xor
jno
adc
and
roll
hlt
loope,pt
adc
imul
jno
jecxz
cs
add
stc
sub
dec
cmp
dec
inc
insb
pop
or
mov
xchg
stos
test
cmpsb
add
in
mov
sub
bound
cmp
shrl
pushf
scas
mov
pusha
mov
xchg
test
jo
jns
xor
mov
in
int3
fisubrs
and
mov
ljmp
sbb
inc
arpl
and
fnstcw
lock
das
fdivs
pop
out
push
inc
fisttpll
sbb
mov
lcall
mov
dec
shll
inc
pop
pop
jnp
daa
xchg
xchg
xchg
adc
add
call
arpl
push
add
jmp
jg
jl
scas
dec
rcrb
ss
out
ret
xor
into
mov
aam
xor
lock
test
mulb
ljmp
mov
call
cmp
outsl
and
rol
lds
xor
add
xchg
out
and
cmovle
jle
jne
pop
push
push
stos
inc
dec
push
jle
ljmp
pushf
cmp
mov
and
jge
mov
push
lret
aas
inc
jo
call
mov
dec
lock
repz
lret
mov
fadd
sub
imul
leave
jnp
out
call
insl
add
mov
push
fidivl
mov
jb
fidivrl
pop
pop
sbbl
loop
xlat
sub
scas
sbb
sub
lock
xchg
jecxz
push
adc
data16
sahf
xor
jl
or
jo
sub
loope
popf
adc
mov
repnz
add
and
loopne
mov
aam
lret
in
mov
in
icebp
rep
subb
adc
inc
or
mov
popf
je
cli
push
xchg
out
pop
sub
rcll
add
jbe
out
cmpsl
push
xor
sub
test
jp
push
or
and
popa
std
pop
and
leave
out
pop
xchg
jno
clc
enter
mov
aaa
mov
movsb
aas
rcll
add
mov
rol
ds
arpl
iret
cmp
rolb
push
ret
filds
mov
cmp
mov
mov
mov
pop
jb
stc
cmp
cld
or
nop
mov
adc
cwtl
jne
js
loope
out
adc
mov
movsl
test
xlat
stos
jnp
or
pusha
call
xor
imul
xor
test
jbe
cs
movntps
stos
jmp
into
sbb
cwtl
sbb
fistl
sbb
stos
sub
fs
out
jae
push
adc
cmpsb
xchg
fldt
and
inc
push
call
lcall
ss
roll
xchg
pop
push
scas
or
inc
push
std
mov
loope
lea
xchg
push
mov
stc
xchg
sub
fnsave
jbe
iret
fcmovne
dec
cmpsl
fptan
mov
fisubrl
inc
push
xlat
inc
sbb
dec
inc
push
jecxz
or
inc
inc
cmp
movsb
inc
rcr
jmp
adcb
cld
dec
mov
cmp
in
pop
das
pop
mov
pop
xchg
jge
add
jg
stc
or
inc
add
outsl
and
enter
arpl
stos
add
mov
cmp
lcall
dec
xlat
and
xor
in
int3
xchg
inc
dec
and
scas
loop
jae
cmp
aas
or
fdivrl
pop
inc
popa
cmpb
in
cmp
mov
cmpsb
lret
xlat
pop
or
or
and
jecxz
ja
stos
sub
shl
pop
cmp
pop
cmp
dec
cmpsb
sahf
js
test
lock
outsl
rcrb
ja
mov
and
jnp
cmc
mov
std
mov
lret
xor
sbb
dec
xor
xchg
ficoml
mov
inc
lock
xlat
leave
int
inc
clc
adc
mov
pop
mov
xor
jp
xor
mov
sub
pusha
pop
xchg
test
jmp
ficoml
cltd
dec
fistps
xor
lcall
mov
dec
xor
test
insb
xchg
push
stos
js
aam
sub
and
leave
adc
push
int
mov
or
jnp
scas
les
fsubrs
mov
adc
push
pusha
add
inc
scas
fwait
gs
xchg
jle
dec
daa
and
push
ss
mov
stos
clc
sub
out
or
xchg
or
xor
in
out
sub
movsl
xchg
test
in
loope
bound
pop
sahf
sub
lods
dec
mov
imul
pushf
mov
iret
sbb
cmp
leave
jmp
mov
subl
rol
mov
push
mov
mov
xchg
ror
das
mov
nop
sub
mov
movb
sub
aam
pop
fs
int
mov
jne
or
xchg
add
add
sub
dec
lret
pop
and
sub
sbb
sub
pop
mov
push
pop
das
xor
pop
cmpsl
iret
in
mov
mov
lret
pop
and
in
mov
xor
in
add
mov
dec
and
sbb
push
ret
add
das
insb
sbbl
and
xchg
ret
push
xchg
sub
insb
daa
jo
jbe
stos
xchg
push
mov
mov
push
int3
xor
loope,pt
stos
push
lcall
arpl
cs
popf
jg
mov
js
roll
es
insb
add
cltd
xchg
adc
das
jns
pop
inc
push
push
insb
aaa
dec
mov
push
and
notb
jp
outsl
add
mov
aas
push
pop
call
mov
fs
fwait
mov
push
fwait
inc
rcrb
xor
jp
popa
sub
xchg
jo
xchg
iret
inc
adc
jns
mov
or
sbb
stc
repnz
cltd
adcb
inc
dec
dec
xor
andb
dec
dec
push
lret
cs
lea
std
cwtl
lret
int3
fdiv
std
ret
add
jb
mov
jo
xchg
ljmp
outsb
scas
lods
inc
add
ja
insb
xor
sahf
fsin
dec
xchg
xchg
lock
inc
push
inc
lahf
lahf
xor
outsb
movhps
movl
sbb
inc
je
aam
test
mov
mov
jmp
xor
ss
or
cld
sub
xchg
lods
jmp
jmp
mov
push
mov
scas
jnp
stos
jl
sbb
mov
outsb
das
xchg
subl
mov
jl
int3
mov
sbb
sahf
js
dec
add
push
roll
cmpsb
shrl
gs
push
ds
mov
lods
jg
addr16
jno
adc
sar
mov
in
xor
jp
pop
in
add
jne
or
inc
pop
cmpsb
sub
pop
push
mov
repnz
lock
xchg
lret
cmp
inc
push
fs
mov
bound
arpl
test
xor
jne
pop
sbb
mov
fstp
mov
into
movb
push
push
outsl
xor
es
xchg
in
jno
xor
fs
jnp
jle
outsb
test
icebp
push
pop
sub
int
in
pop
fcoms
loope
mov
pusha
xchg
call
ret
dec
add
jl
std
lret
aad
jno
fs
ja
fsubrl
xchg
add
jne
sub
sbb
movb
lcall
jne
add
out
imul
fisttpll
mov
and
iret
adc
jne
jbe
pop
pop
pop
fisttpl
and
cwtl
movsl
xchg
out
mov
pop
aaa
mov
cmpsb
mov
test
xor
punpckhbw
dec
stos
and
shl
inc
lock
ljmp
mov
call
mov
dec
loop
mov
add
scas
movsb
stc
push
je
xlat
pop
cmp
mov
sbb
push
nop
adc
imul
add
jno
push
sub
cld
sub
jle
mov
mov
shll
dec
jbe
xchg
pop
gs
mov
imul
es
adc
les
push
sub
mov
mov
imul
jo
stc
popf
das
lods
pop
stos
or
rclb
mov
ja
loopne
jecxz
and
movb
mov
leave
pop
xorl
push
mov
aad
pop
jge
push
mov
out
xchg
jg
into
push
or
add
mov
pop
mov
and
repnz
mov
inc
jl
fsubrl
and
aad
add
test
or
jns
xor
insl
cmp
cmp
data16
fildl
lcall
push
mov
xor
jb
mov
aaa
sbbl
test
xchg
inc
gs
or
cld
shlb
or
jmp
test
lds
and
jne
mov
push
jl
call
test
fistpll
or
and
mov
add
rolb
add
cmp
xchg
or
pop
inc
mulb
pop
loopne
jo
repnz
cmpl
or
pop
into
cwtl
adc
out
push
ja
push
jbe
fisubl
js
bound
jne
and
cmp
popa
lret
push
mov
push
mov
jge
testb
xor
sub
dec
pop
xchg
cli
repz
test
mov
mov
in
lea
mov
xchg
in
lods
pop
mov
and
jmp
xor
in
xchg
aas
outsb
lea
cltd
mov
push
lods
add
scas
cld
lret
testl
repz
xor
mov
sub
adcl
data16
inc
push
stos
mov
pop
ficoms
insb
popl
jne
repnz
cmpsl
adc
pop
rol
fsubr
adcl
sbb
xchg
pop
fsubrp
test
xor
mov
or
push
push
sub
nop
mov
add
or
adcl
insb
int3
lret
mov
ljmp
lods
push
mov
mov
mov
fsubr
mov
add
or
pop
aas
fnstcw
add
repnz
in
jg
ds
add
aad
pop
pop
nop
xchg
aas
mov
cmp
daa
sbb
cmc
dec
push
pop
add
jmp
shll
push
mov
gs
mov
xchg
add
and
int
inc
ss
pushf
mov
xlat
mov
or
xor
pop
adc
cmp
xor
cmp
sahf
jmp
jae
inc
cwtl
mov
test
fbstp
out
mov
cli
pop
push
fnsave
clc
mov
lock
pop
pushf
out
mov
sahf
and
cmpb
icebp
inc
shl
push
pop
in
push
push
jbe
or
mov
inc
mov
aaa
cmp
mulb
stc
pop
dec
inc
add
std
jge
jecxz
call
push
addr16
xor
pop
dec
xlat
push
ljmp
jno
sarb
fbld
push
or
jbe
pop
mov
mov
incb
popf
mov
test
and
or
fstl
rcrb
mov
xor
fcomip
sub
mov
in
ficoms
mov
push
out
test
mov
cs
loop
xlat
pop
adc
arpl
test
push
mov
ficomps
gs
mov
mov
jb
push
lcall
dec
mov
push
in
sar
jb
and
std
jl
mov
in
dec
mov
inc
mov
xchg
pop
call
pop
sub
push
sbb
mov
pop
scas
add
out
cwtl
js
sbbb
dec
pop
fisubl
or
andl
cmp
or
or
fidivrs
push
sarb
dec
add
inc
movsl
in
xchg
mov
scas
cmp
das
nop
push
dec
cld
nop
push
mov
xor
cmp
xchg
and
add
in
sub
ficoms
jmp
lcall
insl
fidivl
sub
cmp
movsb
jns
cmp
insl
shl
push
cmp
out
or
inc
cltd
lea
ljmp
or
push
imul
jnp
test
add
push
mov
adc
out
cmpsb
rcr
and
loopne
outsl
jmp
rcl
repz
lcall
and
push
repnz
push
xchg
add
lret
xor
sub
mov
jnp
pop
rcrl
in
lcall
pop
mov
mov
pop
push
cltd
and
shrb
sahf
ja
repz
mov
loop
add
xor
cmp
cmc
mov
push
pop
adc
lret
jge
or
pop
repnz
add
inc
pop
mov
arpl
lods
shr
int
push
aas
xor
mov
dec
andb
mov
lock
fstps
call
subb
stos
push
and
sub
stos
mov
cmp
cli
stos
pop
sub
xor
sarb
icebp
dec
andl
out
popf
pop
xchg
cmpsb
inc
test
lock
ja
sub
aad
push
test
pop
mov
inc
popa
pop
jecxz
mov
scas
sti
stos
add
out
xor
xchg
jae
cmp
pop
aad
push
ljmp
jno
lret
xchg
lret
lods
scas
jmp
insb
pop
test
ret
daa
cmp
inc
mov
cmp
shrb
push
inc
push
stc
hlt
push
mov
inc
fcomp
cmpsl
loop
arpl
fnstcw
xorl
mov
push
outsb
inc
cmpsb
jnp
popa
push
gs
mov
in
push
add
mov
addr16
cmp
sub
sub
gs
stos
push
pop
jmp
cmpsl
ret
lods
or
mov
stos
frstor
xchg
mov
outsb
xor
jns
push
in
test
insl
mov
xor
jl
add
pushf
in
clc
movsb
mov
loop
add
add
mov
and
pushf
insb
mov
cwtl
or
mov
jp
mov
push
stc
sub
adc
fisubs
sub
es
push
hlt
push
inc
cmp
add
clc
icebp
sub
sahf
int
xchg
adc
stos
mov
loopne
sub
icebp
or
ljmp
sbb
bound
pop
jmp
push
xchg
data16
pop
lcall
js
adc
imul
adcb
xchg
adc
mov
jns
mov
mov
inc
or
std
scas
adc
fbstp
pop
dec
add
imul
or
sti
outsl
add
mov
shrl
add
daa
lret
cs
stc
aas
push
cmp
loop
jp
push
insb
adc
sbb
incl
rcr
xchg
add
cmp
sbb
jge
xor
test
inc
push
inc
cltd
std
jmp
popf
notl
add
mov
cs
cmpsb
shl
daa
ljmp
jno
lahf
xchg
addr16
popa
xor
mov
jle
and
cwtl
sub
add
mov
testb
ds
repnz
jle
mov
or
or
mov
mov
push
xor
inc
sar
push
fwait
cmp
dec
mov
fldt
sbbl
adc
mov
aam
call
dec
pop
adc
xchg
imul
icebp
adc
lods
sbb
pop
insl
xor
js
popa
andl
mov
outsl
repnz
mov
add
mov
jno
sarb
lret
and
into
or
jb
adc
adc
or
xchg
std
inc
inc
and
pop
xor
push
xor
loop
cwtl
sbb
add
or
xor
rolb
xchg
mov
pop
or
sbb
adc
xchg
and
cmp
or
mov
sahf
jecxz
xchg
lods
hlt
or
ja
lret
movsl
rorb
mov
push
in
in
push
jmp
aam
jmp
mov
lahf
addb
push
and
mov
mov
pop
mov
adc
xchg
jg
inc
adc
pop
lds
in
push
dec
call
sbb
xchg
mov
xchg
pusha
mov
xor
mov
jnp
push
cld
faddl
and
or
add
sbb
iret
leave
mov
sub
and
testb
adc
int3
adc
mov
outsb
fidivrl
fs
dec
add
mov
jle
mov
subl
int
std
es
mov
ret
jns
inc
dec
lods
jle
je
dec
aaa
out
adc
clc
adc
xor
cwtl
stos
arpl
insb
iret
imul
add
repnz
cwtl
inc
movsb
out
mov
js
adc
in
jb
cltd
std
push
outsl
clc
dec
sub
mov
cmp
aad
inc
pop
mov
push
insb
test
adc
out
xor
cld
and
int3
iret
es
or
pop
jnp
sbb
jecxz
cmpsb
imul
add
arpl
jmp
ss
in
jg
daa
jle
clc
test
mov
sub
sub
outsl
jmp
sti
inc
test
and
loop
xchg
sub
enter
clc
jmp
pop
xor
push
cmp
dec
push
xchg
mov
das
gs
mov
cmpsb
fmull
idiv
and
xchg
xchg
das
jp
rcrb
sbb
adc
mov
js
andb
mov
inc
mov
gs
xor
xchg
iret
cmp
in
inc
loop
mov
fisttpl
push
popf
lods
push
cwtl
and
into
jle
mov
lcall
mov
cli
int
data16
push
cmp
add
cld
adc
push
mov
lret
mov
inc
fisttpll
lods
cmp
in
mov
sub
arpl
cmp
mov
fadd
out
dec
rcrl
mov
ljmp
cs
or
mov
or
push
inc
and
push
sub
dec
stos
cmp
jno
test
adc
clc
pavgb
insb
bound
repz
or
mov
frstor
fisubl
inc
push
sti
sbb
orl
jg
insb
dec
dec
imul
scas
cld
dec
add
dec
cwtl
andb
outsb
sub
inc
mov
popa
ja
jge
shl
mov
mov
popf
popa
jle
lcall
jns
or
ljmp
jno
push
add
repz
add
adc
fwait
mov
repnz
fdivl
push
cmp
stos
jecxz
or
sbb
sub
push
push
loope
stos
lds
test
repz
inc
leave
pop
hlt
cld
fidivl
sbb
cmp
lcall
add
sarb
pop
inc
faddl
es
push
insl
inc
gs
xor
fs
insl
ja
adc
scas
inc
gs
ljmp
jno
mov
pushf
mov
dec
inc
fs
sbb
mov
cmp
pop
mov
mov
cmp
dec
sub
pop
mov
call
mov
sahf
add
and
and
hlt
fucomip
and
jp
fsubrl
inc
fsub
sti
mov
iret
fstl
lds
insl
xchg
in
ds
jo
inc
adc
vxorpd
into
mov
push
rcll
adc
sarb
push
testl
js
push
sahf
mov
xchg
lock
nop
in
mov
cmp
xor
aas
pop
test
sbb
inc
inc
fidivl
mov
aaa
cmpsb
sahf
xor
push
cmp
mov
dec
mov
sbb
das
cmpsl
cmp
mov
ja
pop
ljmp
jno
stos
mov
push
mov
xorl
push
movsb
loopne
mov
mov
ja
add
nop
sbb
ljmp
sub
jecxz
loopne
test
cmp
sub
adc
dec
sbb
leave
dec
push
sbb
push
in
fsubl
xchg
std
je
cs
cmp
pop
insb
mov
and
rcrb
xor
in
pusha
stos
sbb
loopne
ljmp
jno
addr16
aam
or
adc
add
jb
mov
mov
push
das
push
lcall
push
pop
cmp
mov
mov
std
inc
aaa
lcall
mov
fcmovu
out
pop
pusha
push
pushf
popf
xchg
mov
ret
push
nop
mov
sub
rcll
push
ret
push
cltd
das
and
int
pop
dec
outsb
lcall
inc
jb
in
cld
xchg
rclb
sub
jecxz
call
and
add
mov
cltd
sbb
xchg
inc
stos
mov
dec
jg
dec
negl
fdivrs
clc
sbb
loopne
xchg
std
inc
dec
xor
iret
fisttpl
cmc
lds
rol
repz
cmp
xchg
pop
or
xor
fsub
aad
das
or
lcall
out
mov
mov
pop
je
xchg
and
stc
cmp
sbb
mov
sahf
lods
inc
sbb
and
push
push
dec
dec
push
mov
xchg
pop
lahf
stos
push
pop
out
push
inc
push
lods
cld
mov
cmpsl
jb
xlat
jmp
arpl
cmpsl
shll
or
push
or
pop
push
int
inc
pushl
rclb
in
adc
sbb
inc
out
cld
jne
push
jo
stos
inc
and
js
push
out
xor
mov
scas
sbb
imul
jnp
sti
es
loope
xchg
xchg
mov
int3
sub
int3
and
aas
stos
jbe
push
out
out
lcall
outsb
outsl
cmc
adc
mov
push
pop
adc
scas
les
and
mov
mov
push
dec
mov
fildll
insb
in
mov
fidivrl
sti
inc
add
mov
push
loopne
pop
fwait
dec
cwtl
inc
jo
adc
jecxz
or
add
jne
mov
push
call
and
pop
gs
jbe
sysenter
mov
push
xor
in
daa
xchg
or
or
inc
ja
fwait
pop
insl
int
in
mov
jmp
dec
ret
jns
mov
push
outsb
je
ret
mov
and
mov
mov
scas
inc
lods
ret
jl
pop
fwait
pop
push
mov
mov
subb
xchg
mov
ret
jae
orb
ja
jo
cmp
cmp
mov
hlt
iret
jle
cmp
pop
adc
add
xor
ret
clc
push
call
push
fnstenv
mov
or
and
push
pop
mov
ror
repz
aad
iret
jmp
daa
iret
sbb
lret
push
and
mov
xchg
popl
pop
inc
pop
pop
mov
sbb
loop
cmpsl
jne
fistl
mov
dec
jecxz
dec
inc
popa
js
out
inc
std
mov
jno
in
icebp
dec
xchg
out
lods
sarl
scas
out
push
pop
pop
add
out
test
loop
stc
ret
jns
stos
cmp
add
pushf
lods
add
jb
in
lods
or
fisttps
imul
gs
mov
push
pop
xchg
cmp
xchg
sbb
fsubrl
mov
ret
shrb
xchg
and
pop
jl
mov
std
mov
jno
push
std
enter
adc
bound
outsl
or
mov
pop
jecxz
sbbl
aam
sub
ljmp
movsl
cmp
test
pop
dec
push
sbb
jl
and
pusha
pop
add
mov
movsl
and
hlt
lahf
xor
add
nop
dec
inc
and
loop
jo
cmpsb
mov
es
mov
jae
les
push
mov
sbbl
xchg
outsb
test
adc
rclb
mov
sbb
xlat
repz
add
jg
cmp
mov
sti
aaa
cltd
pop
fwait
dec
mov
ja
pop
cmpsl
push
fwait
mov
and
jb
xor
lock
cmc
js
scas
xchg
sub
iret
sub
inc
jg
arpl
imul
into
push
mov
rol
mov
and
adc
bound
mov
cltd
ret
jl
fildl
push
jo
xor
xor
cmpsb
mov
sub
popl
js
mov
js
shrl
repnz
mov
fistpl
mov
les
cmp
jle
ret
fwait
ret
cmpsb
mov
sub
in
pushf
cmp
dec
sub
mov
xlat
pusha
cmp
lahf
cwtl
lretw
mov
mov
pop
pop
or
xor
xor
mov
adc
pop
lret
dec
in
aam
pop
cmp
mov
pusha
push
add
cmp
js
adc
loope
pop
pop
call
sbb
inc
pusha
leave
or
mov
xchg
aad
jb
int
in
mov
push
lcall
bound
and
out
test
cmp
nop
mov
ret
or
cmp
xor
andb
jb
mov
mov
pop
mov
xchg
aas
or
lret
mov
mov
adc
test
in
scas
sbb
testb
push
cwtl
inc
mov
push
bound
lret
shrb
add
mov
jg
jnp
ficomps
pop
test
insb
or
jb
dec
dec
sbb
cmp
cmpsb
inc
lret
add
inc
dec
enter
lds
or
mov
stos
push
xchg
lret
rclb
jo
sub
mov
dec
dec
push
int3
jns
stos
mov
out
into
aas
xorl
mov
pushf
xchg
add
mov
or
testl
sbbl
cmp
jb
xor
cmpsb
pop
cli
sub
orb
aaa
add
add
sbbb
xor
scas
mov
sub
push
imul
addr16
sub
push
push
hlt
pop
out
andb
leave
and
cmpl
adc
add
cmp
les
in
mov
cltd
sbb
dec
and
clc
mov
pop
cmp
or
mov
inc
dec
push
sub
fs
pop
ljmp
sbb
cli
xchg
pop
sbb
xchg
test
sbb
out
sbb
jp
scas
mov
mov
xlat
jmp
or
mov
dec
or
jl
jno
dec
popa
faddl
push
mov
sub
fcompl
test
cmpsl
ds
xor
leave
movsb
inc
sub
adcl
or
lahf
outsl
jge
inc
pop
testb
jle
mov
loopne
mov
mov
fimull
adc
addr16
xorl
lea
mov
fwait
cli
xchg
mov
add
insb
repz
cmp
cltd
rcrb
hlt
push
sarl
xor
push
inc
out
std
cltd
mov
leave
push
cmp
in
test
rcr
icebp
scas
stos
dec
or
nop
sbb
dec
pop
sbb
insl
inc
lea
shrb
pop
je
js
test
sarl
fildll
or
das
xchg
pushf
sub
xorb
jns
adcl
push
push
mov
cmpsb
arpl
mov
jmp
and
cmp
push
inc
push
add
fwait
xchg
jmp
cmp
je
and
and
push
sbb
pop
xchg
add
sbb
xor
jae
cmpsb
fnsave
psadbw
es
xor
loopne
pop
notl
in
jnp
scas
ret
and
ds
push
scas
sar
orb
or
popf
jnp
dec
in
mov
lods
out
xor
jp
loope
adc
cmp
push
arpl
shl
repz
adc
movsl
mov
push
mov
test
adc
lret
pop
das
adc
stc
mov
cmc
arpl
push
test
sahf
jae
mov
rorl
mov
fwait
sbb
fisttpll
sahf
dec
mov
or
lods
jae
dec
mov
int3
fnsave
ja
aas
icebp
or
seta
pop
fwait
xor
in
call
adc
jle
aas
in
pop
daa
push
dec
jp
stc
mov
data16
sarl
popf
mov
fxam
clc
and
out
gs
dec
and
ds
mov
addb
xor
pop
lret
pop
adc
mov
data16
rclb
into
adc
and
or
test
idivb
push
imulb
cli
dec
popf
jge
sub
mov
outsb
cmp
fildl
sar
adc
out
jae
push
imul
gs
push
sub
ljmp
mov
orb
jb
mov
sbb
pop
outsl
lds
sub
in
push
fnstsw
sarl
cmpsb
pop
mov
adc
cmpsl
cli
mov
or
jmp
jmp
sti
test
sbb
or
pop
inc
imul
fisubrs
sbb
in
dec
lcall
or
mov
cmp
jl
xchg
pop
and
dec
mov
xchg
xor
xchg
add
jl
in
xor
in
jb
ret
lds
push
mov
pusha
divl
jle
pusha
mov
ljmp
or
pop
jbe
or
cs
or
arpl
stos
mov
aas
dec
cmp
sahf
outsl
sbb
mov
xor
aam
and
clc
ja
dec
arpl
xor
cli
pop
dec
xchg
adc
fisubl
in
adc
hlt
repz
rcl
pusha
int
mov
adc
nop
mov
cmp
mov
jo
lretw
fwait
fs
jg
stos
bound
hlt
xchg
js
lods
cmp
stos
cmp
or
jmp
pop
fmuls
push
cmp
pusha
inc
shrl
jae
call
jecxz
outsl
mov
pop
icebp
mov
jl
fsubp
jle
jnp
bnd
cmpsb
push
lcall
aam
dec
jp
test
int
cwtl
dec
pop
pop
cmc
in
ret
sahf
mov
pushf
xchg
daa
cwtl
out
std
xchg
adc
jns
ljmp
mov
je
inc
stos
xchg
aad
push
jnp
inc
xlat
popa
xor
pop
xor
push
test
loopne
jbe
sub
mov
push
adc
mov
or
push
imul
cmp
pop
arpl
xchg
mov
adc
gs
in
mov
pusha
mov
imul
mov
iret
fimuls
out
xchg
inc
pop
add
or
xlat
xor
mov
push
jnp
sub
andb
clc
outsb
jp
stos
xchg
popa
das
inc
fnsave
push
insb
push
pop
inc
orl
xor
push
jmp
jnp
sbbb
dec
mov
push
in
rorl
aad
lods
iret
xlat
mov
loop
fwait
xor
aam
inc
and
stos
sbb
repnz
push
push
cmp
cmp
and
pop
xor
push
test
push
addr16
cwtl
jno
loop
or
add
test
xchg
fdivs
or
sbb
pusha
sbb
fisttps
push
sbb
xchg
pop
cmpsb
cmp
xor
aad
daa
xchg
push
sbb
ss
jb
mov
mov
adc
fs
loopne
push
cmp
adc
inc
sti
sbb
pop
rorl
fisubs
lcall
jns
in
ss
cmpsl
inc
cmpsl
pop
mov
in
add
mov
push
push
imul
xor
arpl
ss
xchg
xor
jmp
mov
adc
pusha
pop
dec
iret
xchg
sub
sub
cs
out
pusha
xchg
push
out
insl
jg
in
test
sbb
cmp
pop
insb
gs
shr
rcrl
pop
mov
cld
jo
add
and
or
and
mov
pop
pusha
xchg
insl
ret
enter
xor
push
repz
icebp
lret
lahf
fidivrl
or
scas
fcmovu
mov
arpl
adc
shll
jbe
and
loopne
mov
xor
fs
test
mov
loop
mov
sbb
mov
loope
popf
stos
scas
xor
cld
mov
mov
push
mov
inc
ljmp
test
add
in
sub
aas
icebp
jno,pn
jmp
lods
push
mov
aas
into
jp
or
faddl
cmc
and
hlt
push
push
popa
mov
cmp
jmp
dec
cmp
pusha
cltd
mov
lea
mov
int
outsl
push
shll
push
mov
inc
mov
jno
imul
call
imul
lret
mov
mov
cmpl
push
mov
pop
jno
jp
daa
mov
jbe
mov
xor
lcall
in
or
mov
fdivs
jecxz
jmp
push
jl
or
arpl
mov
inc
data16
pop
and
mov
inc
add
and
scas
lods
cwtl
fimull
dec
les
add
jp
inc
jg
xor
mov
loope
cmp
jp
xchg
push
dec
jbe
lea
repnz
loop
push
negl
lds
subb
divl
jae
dec
loope
hlt
mov
jae
push
mov
mov
fists
das
loopne
push
test
out
out
fistpll
and
mov
jge
and
outsl
jle
aaa
popf
fs
sbb
jg
xchg
adc
pop
jns
cli
movsl
cld
mov
push
imul
jns
cmpsb
jbe
das
subb
in
orl
sbb
pop
xchg
mov
ja
adc
push
sahf
push
adc
mov
fnstenv
mov
in
test
xchg
int3
or
add
push
sub
jo
ds
sbb
mov
in
test
sub
sbb
imul
or
stc
aaa
mov
jb
add
enter
pop
ljmp
pusha
ss
mov
test
mov
push
fdivrs
jb
mov
jle
push
out
jecxz
push
mov
out
cmp
lret
pop
inc
mov
xor
jl
sbb
aaa
xor
lret
fmull
dec
sbb
outsl
js
shlb
push
flds
pop
cmp
pop
nop
pop
pop
cli
inc
rcrb
mov
hlt
pop
repz
test
into
mov
shrb
push
adc
scas
ret
xor
daa
inc
mov
lock
in
lods
enter
div
lahf
iret
scas
lea
push
out
cmp
imul
out
ja
push
in
sub
mov
mov
sub
dec
shrl
es
mov
and
push
mov
xchg
cmp
jecxz
push
dec
fnstsw
push
jo
sub
pop
push
mov
cmpb
sub
hlt
mov
fnstsw
dec
jle
popa
mov
into
movsl
es
scas
inc
fwait
ret
xor
jns
int3
pop
sahf
fwait
dec
push
xchg
cmc
jae
sub
iret
push
hlt
sarl
into
push
mov
aad
fwait
pop
in
std
sahf
xchg
jne
enter
leave
lahf
mov
stos
pop
cs
mov
int
sbb
outsl
mov
sbb
add
cmpsb
and
xor
mov
or
pushf
pop
int3
and
lcall
jbe
pop
repz
lea
insl
cmp
ret
xchg
mov
dec
dec
loop
test
xlat
flds
ja
rclb
daa
outsb
lea
adc
iret
lcall
lods
xchg
push
cmp
xchg
xchg
mov
pusha
xchg
sbb
lods
mov
xor
cmp
cs
xor
sub
cmp
push
imul
outsl
cmp
mov
add
adc
rcl
mov
dec
pop
lahf
shrl
je
repz
sbb
fwait
add
cmp
repnz
loopne
pop
mov
mov
pushf
invd
sbb
mov
sbb
hlt
dec
pop
xlat
jo
mov
inc
cmp
aam
xchg
xchg
cmpl
adc
jmp
lret
fisttpll
aas
loopne
in
les
adc
idivl
repnz
and
repnz
jl
xchg
stos
orb
dec
xor
add
mov
loop
push
loop
shlb
jmp
frstor
pop
pop
cli
sub
push
add
mov
aam
lods
fcmovne
pop
sbbb
jnp
xor
int3
jno
push
cs
out
mov
inc
movsl
inc
push
add
mov
pushf
ds
lds
xchg
daa
mov
and
out
jns
cmp
push
jmp
add
cmp
sub
sbbb
xchg
icebp
sti
iret
sub
mov
fsubs
sub
insl
aas
and
xchg
loop
jge
movq
push
ret
pop
inc
cltd
bound
aam
in
nop
or
xor
into
cmp
or
push
lea
jae
jnp
iret
add
push
test
mov
sbb
or
out
xchg
push
cmc
sbb
mov
mov
out
je
stos
jecxz
adcb
dec
loopne
pop
and
ret
out
repz
xchg
lret
mov
cli
cmpsb
and
imul
iret
rolb
in
xorl
push
fiaddl
mov
lcall
dec
mov
iret
sub
leave
cmp
or
arpl
sahf
xor
dec
stos
push
stos
jmp
fdivs
xor
iret
mov
leave
das
cwtl
imul
dec
jge
xchg
cmp
xchg
xchg
shlb
mov
popa
int
jge
push
imul
jge
negl
jno
outsb
mov
and
lds
insb
js
shrb
shll
sbb
pop
push
jb
mov
inc
hlt
call
xor
adc
pop
repnz
into
and
les
rcr
sub
pushw
pop
insl
jae
mov
cmc
test
cmp
cltd
into
sbb
jnp
lds
sbb
mov
in
add
shl
fbld
xchg
aam
push
push
push
mov
repz
cwtl
js
xchg
call
int
out
cmpsl
jg
testl
dec
cltd
xor
ret
int
dec
das
outsb
repnz
dec
clc
jb,pn
fs
dec
dec
xorb
jecxz
cli
cmp
out
leave
pushf
cmp
rcl
push
les
xor
imul
jb
ds
jne
mov
push
loop
and
stos
xor
fstpt
nop
daa
data16
mov
mov
in
lods
cmp
mov
mov
adc
addb
dec
cmp
inc
fstpt
fwait
jae
mov
mov
cwtl
push
out
ds
jbe
inc
pop
cmp
std
jae
das
cli
testb
inc
loop,pn
pusha
addr16
xchg
ret
insl
movsb
insl
add
and
mov
push
pop
pop
rcll
das
divl
and
push
pop
cmp
mov
cmp
push
push
cmp
adc
mov
sbb
scas
adc
in
fsubl
xchg
outsl
mov
mov
sbb
add
lret
out
xchg
mov
adc
int3
jmp
sbbl
jae
pop
cltd
mov
mov
fld
inc
in
mov
cmp
mov
jo
jb
inc
xchg
lea
jne
jg
push
mov
jmp
ret
pop
jle
cmp
movsl
lahf
loope
cltd
inc
pop
xor
les
negb
cmp
and
push
push
andb
mov
ret
cmc
and
lahf
mov
adc
add
and
aad
out
sti
popa
clc
rcrl
push
stos
or
lods
jae
outsl
mov
fst
mov
pop
cmpsl
push
les
or
jne
xor
int3
mov
xchg
ds
mov
push
dec
fbstp
stos
xchg
jmp
or
gs
jl
cmp
pop
mov
rorl
shrb
sbb
test
imulb
scas
push
pop
in
iret
outsl
testl
enter
fldcw
enter
ja
xchg
inc
push
adc
pop
lock
ja
or
xchg
cs
insb
inc
call
push
xor
in
sti
xchg
xchg
imul
movsb
repz
and
das
lds
iret
and
call
test
aas
xchg
add
cmp
clc
sub
aam
adc
jne
dec
pop
popf
push
lcall
xor
out
jbe
shll
insb
aaa
mov
xorl
outsb
in
sti
pop
mov
mov
or
adcb
popf
inc
mov
mov
lods
scas
shrl
dec
xor
hlt
pop
mov
pushf
fisttpl
and
sub
xor
mov
sysexit
sub
sub
or
mov
out
fucomp
dec
fcomp
out
cli
negb
dec
push
inc
popf
xor
call
mov
scas
addl
jo
or
pushf
addr16
shrl
mov
jae
push
cmp
push
insl
sub
test
mov
pop
push
sbbb
lods
aas
jns
cmc
int
xchg
add
leave
jp
ret
sub
out
add
dec
pop
icebp
jge
xor
mov
fistps
jl
int
cwtl
or
loope
daa
gs
push
icebp
sbb
bound
jae
pop
and
test
sbb
dec
dec
pop
mov
xchg
cmp
lret
jnp
fcmove
lret
negl
sub
cs
push
pop
push
dec
sub
xchg
movsl
mov
aaa
mov
fisubrs
jb
xlat
adc
xlat
mov
or
jmp
arpl
insl
aam
mov
or
loopne
push
loop
mov
lock
lock
or
jp
fbld
es
adc
mov
rcrb
push
xlat
push
push
add
fninit
imul
iret
imul
fidivrl
mov
aad
outsl
test
sbb
or
es
or
test
out
outsl
ret
sub
xchg
cmp
pop
mov
into
dec
mov
movsl
loope
sbb
push
and
mov
cmp
out
pop
cmp
xchg
xor
sbb
dec
push
adc
fnsave
test
movsb
xor
sbb
sti
xchg
lret
add
jbe
xlat
and
test
lret
pop
repnz
jne
mov
sbb
inc
push
xchg
sub
xlat
jmp
das
sub
pusha
out
sbb
pop
jl
test
ja
testb
push
sbb
mov
push
add
sbb
jb
sub
sbb
fs
xchg
popf
ja
xchg
push
imul
inc
add
pop
mov
in
add
add
mov
mov
mov
subl
and
rcll
clc
fildll
jo
jo
pop
xchg
inc
mov
subb
sarb
dec
mov
ret
pop
xchg
gs
inc
test
bnd
jbe
loop
xchg
inc
dec
sar
gs
addr16
mov
js
and
int3
outsl
aaa
inc
xchg
mov
xchg
imul
aam
push
mov
xchg
aaa
mov
push
mov
lea
fistl
or
rcrl
mov
push
fcomip
in
cmp
je
mov
dec
mov
jmp
sarl
mov
push
jmp
imul
inc
jmp
sti
inc
jno
xor
leave
int3
aaa
push
repnz
xchg
cmpsl
adc
cmp
das
test
push
lock
push
and
pushf
fs
scas
or
fdivrs
and
es
je
imull
or
mov
fsts
push
sbb
jbe
stos
push
add
xlat
push
xchg
jbe
pop
out
adc
cs
loopne
pop
dec
call
mov
lahf
adc
iret
xor
repz
insb
in
sahf
icebp
lahf
mov
cltd
ret
or
inc
dec
insb
mov
lret
cld
sar
mov
dec
mov
fstpt
scas
sbb
insb
shlb
cmp
xor
pop
mov
ror
xor
je
push
incb
mov
push
in
test
cmp
push
repnz
pop
xchg
sub
dec
ds
mov
int3
jg
clc
rcll
insl
repnz
out
popf
cmpsb
pop
pop
push
mov
shl
icebp
mov
inc
mov
nop
test
in
data16
dec
sbb
add
gs
sbbb
adc
and
mov
jp
sbb
in
stos
cs
call
xor
mov
or
into
pop
insb
ret
gs
rclb
bnd
sub
dec
stos
jmp
aam
sar
out
cld
mov
inc
sbb
in
insl
sub
out
mov
iret
mov
add
or
cmp
cwtl
lahf
jo
out
test
mov
cmpsl
test
lock
inc
xchg
jno
xor
js
and
ds
aad
push
outsl
add
sahf
and
and
sub
sar
add
xor
sbb
cltd
push
sub
dec
lahf
sbb
adc
insb
sbb
mov
in
or
inc
or
ret
pop
add
popf
xor
lods
mov
lock
cmp
loopne
fcompl
add
pop
mov
in
adc
adc
daa
icebp
stc
adc
out
fmuls
and
mov
pop
sahf
aaa
jmp
pushf
jb
push
dec
cmpsb
mov
icebp
cmpsb
sub
cs
and
loopne
adc
cli
cmp
dec
clc
stos
xor
das
adc
and
mov
xor
stos
lds
pop
cli
xchg
pusha
mov
xor
adc
mov
mov
push
sub
dec
loop
mov
test
push
orb
push
mov
xchg
es
sbb
mov
add
push
fsts
in
mov
aas
icebp
xor
pop
sub
inc
fmuls
jb
shr
pop
imul
testl
mov
jns
fs
shrb
cmp
mov
mov
dec
ss
cmp
popf
cmp
aad
popa
pushl
aad
cwtl
or
fdivrs
sbbl
and
jp
setns
mov
ljmp
dec
std
cmp
sbb
aad
fcoml
imul
jge
or
fmul
addr16
push
cmp
movsl
jne
xlat
cmp
and
push
data16
lds
clc
push
push
pop
adc
or
jl
and
rolb
in
xor
adc
and
sub
push
cwtl
cld
sub
push
fidivl
out
stos
xor
idivl
pusha
cmpb
dec
std
cmp
push
or
std
cltd
xlat
jnp
pop
push
dec
pop
repnz
jns
jg
mov
icebp
adc
mov
out
add
push
xchg
dec
dec
icebp
iret
cwtl
fwait
jb
and
int
adc
inc
push
test
lds
push
xchg
out
rcl
cmp
loopne
or
xchg
scas
jbe
mov
mov
in
jo
cmc
xchg
subb
mov
mov
cltd
dec
icebp
outsb
enter
js
cmp
mov
xchg
sub
sbb
mov
push
mov
push
out
fs
aaa
adc
cmc
lret
add
xor
inc
sub
call
inc
outsb
sbb
mov
shlb
leave
int
dec
xchg
or
jae
push
test
mov
xor
test
xor
in
test
arpl
push
fs
into
cmp
xchg
and
mov
lret
into
adc
push
pop
xorl
jo
mov
xchg
negl
or
pushf
adc
add
aas
int3
outsb
cmc
jne
insb
jl
xchg
ja
sbb
or
xor
fnsave
mov
sbb
andl
sub
daa
add
stc
dec
dec
fistpll
enter
cmpsl
xchg
sub
test
inc
dec
fidivrl
fildll
inc
mov
ja
js
push
scas
xchg
gs
pop
xchg
push
int
and
xchg
ficompl
and
or
xchg
sub
xchg
test
ja
movsb
add
mov
push
xor
in
or
sbb
fisubs
sub
mov
xchg
xorb
add
insl
jge
in
call
loop
stos
sar
mov
lods
out
vmovddup
lods
xchg
cli
hlt
dec
loope
jns
insb
aas
cli
mov
push
leave
xchg
inc
lds
mov
mov
and
outsb
push
sbb
addb
orl
es
and
xchg
mov
out
jg
sbb
push
mov
sbb
dec
sarb
dec
dec
push
pop
mov
and
cmpsl
xor
xchg
fdiv
xchg
dec
shlb
add
xchg
jns
pop
subl
mov
popf
cmp
fisubrl
mov
std
jg
call
xchg
arpl
into
insb
jno
cmp
in
xchg
repz
xor
sub
jg
sahf
hlt
xor
loope
push
push
mov
lret
xlat
ret
sub
mov
pop
mov
sub
outsb
push
iret
and
push
std
dec
xor
xor
pop
xchg
push
mov
xchg
pop
scas
scas
mov
imull
test
dec
inc
sbb
cmc
fbstp
xchg
fdivrs
xor
jb
shlb
gs
or
xchg
sub
rolb
add
mov
push
jl
add
push
mov
push
push
xor
add
shll
dec
fs
aam
test
scas
or
and
sub
cmpsb
ds
mov
or
mov
mov
and
xchg
mov
cmc
fwait
push
push
sti
lds
xor
mov
js
adc
pusha
mull
xor
ss
popf
loop
xlat
add
push
pop
clc
and
ficompl
mov
or
jbe
sub
lods
scas
dec
leave
das
mov
test
addb
jbe
pop
in
mov
or
into
and
mov
lds
xor
outsb
clc
cmp
pushf
ret
mov
or
xchg
jns
loop
ret
dec
cmc
and
adc
sahf
ja
fadd
js
dec
cld
and
pop
aas
stos
hlt
iret
cwtl
sbb
and
cmp
add
fistpl
movsl
and
pop
mov
cmpb
or
out
mov
enter
outsl
call
dec
ficoml
mov
mov
xor
adc
aam
movl
int3
cmpsb
dec
mov
stc
inc
sub
dec
pop
push
xchg
push
stos
dec
iret
mov
and
push
imull
pop
loop
or
jns
pop
das
or
out
jle
in
hlt
push
rclb
xchg
outsl
inc
out
ret
ja
add
stos
cmp
fsubl
jg
xor
xor
orl
clc
xchg
out
data16
negb
repnz
add
std
xchg
nop
xor
mov
add
mov
out
push
jecxz
std
or
rorl
push
sbb
push
cmpsb
dec
adc
les
insl
xor
hlt
dec
enter
cmpsb
pop
add
andl
dec
mov
push
into
cmpsb
mov
sbb
lods
insl
mov
icebp
dec
cli
adc
fwait
cmpsl
hlt
dec
in
mov
pop
subl
push
jecxz
in
mov
imul
lods
inc
loope
cmp
pop
jle
and
inc
push
sbb
lahf
jge
jnp
sbb
enter
mov
gs
add
gs
and
xchg
fdivs
cmp
adc
int3
lcall
ret
add
repz
sbb
add
scas
xor
add
inc
subb
sub
mov
jne
out
shl
add
jns
sub
push
ljmp
rcrl
cmp
ror
hlt
pop
hlt
sbb
cmpsb
sbb
inc
jle
xlat
lahf
cs
pop
mov
mov
push
push
test
xchg
mov
enter
mov
dec
or
jmp
sbb
ret
loope
mov
jo
das
dec
hlt
inc
stc
push
cli
mov
pop
xor
add
scas
cwtl
popa
call
and
leave
nop
jbe
mov
sbbl
lods
rcrl
cmp
cmpsb
inc
xchg
jge
lcall
imul
fnstcw
sub
repz
rcll
nop
pop
mov
aam
stos
sahf
pop
push
jns
inc
in
cmp
insl
mov
xchg
daa
mov
sbb
mov
sti
insl
sbb
sysret
popf
fs
popa
int3
jo
fidivrl
jecxz
jmp
mov
xorb
mov
inc
push
xor
pop
lret
mov
imul
aad
jbe
add
loope
pop
xor
loop
mov
dec
pushf
les
inc
insl
jmp
icebp
pop
mov
adcb
mov
mov
pop
xor
sbbl
aaa
inc
or
mov
cld
push
out
loopne
jae
shlb
rcrl
mov
push
xchg
stos
mov
xor
sti
cltd
mov
push
andb
shl
adc
bound
adc
push
xor
loopne
sub
cltd
and
outsl
mov
sub
jp
in
in
inc
cltd
ja
insb
enter
ficompl
adc
mov
jnp
jbe
icebp
repz
pop
pop
pop
adc
iret
es
dec
jb
iret
iret
xchg
imul
out
xchg
push
inc
pop
inc
adcb
dec
and
inc
adc
or
pop
xchg
sub
cmp
push
loop
mov
inc
mov
jg
in
out
imul
mov
out
popa
mov
sub
mov
or
mov
xchg
fucom
mov
jl
ret
or
jae
mov
add
enter
jno
dec
pop
dec
inc
icebp
push
add
cmpsb
mov
lods
in
lods
sub
adc
lods
sbb
fmull
cs
test
cmc
scas
xor
dec
rcll
imul
push
jp
add
into
lret
call
or
cmp
movsl
dec
push
xor
test
xchg
mov
adc
stos
movb
decl
addr16
ja
add
add
jl
cmp
clc
xor
aaa
push
lods
xor
cld
sbb
push
scas
call
mov
jge
ret
mov
mov
xchg
clc
pop
mov
push
bound
xchg
jb
gs
movl
adc
lds
mov
adc
repz
dec
ror
add
add
push
call
push
jnp
mov
call
sbb
or
push
push
mov
fs
mov
cmp
cmp
sub
pushf
lods
sub
jmp
mov
sub
inc
xchg
cmp
movsb
jle
dec
or
mov
push
data16
in
daa
std
loopne
sub
mov
push
cld
pop
dec
das
jo
pushf
in
orl
dec
out
faddp
pop
adc
xor
pop
dec
mov
or
test
jnp
inc
pushf
out
movsb
mov
adc
ja
aaa
push
lds
fbstp
imulb
ds
add
subb
popf
lds
jb
push
mov
cltd
fcomps
stos
mov
dec
add
inc
xlat
mov
push
repz
pop
orb
or
pop
sbb
adc
lods
push
pop
mov
test
repz
or
adc
leave
dec
test
or
or
push
je
inc
sti
and
mov
inc
mov
icebp
insb
jmp
or
mov
daa
stc
mov
jo
in
subl
fs
xchg
push
and
pop
out
jb
insl
sub
out
inc
lahf
imul
jmp
mov
rcr
jnp
adc
dec
scas
add
adc
aaa
xor
pop
insl
into
sbb
and
xor
pop
push
mov
cli
insl
clc
loope
inc
int
aad
cmpsl
sbb
pop
push
push
cmp
jns
sbb
xchg
sub
xchg
stos
gs
and
xor
lahf
pop
out
cmp
jmp
leave
push
stos
jno
inc
or
sbb
xchg
adc
push
movsl
cli
cmp
scas
jne
sub
push
fwait
xor
jno
mov
loop
push
sbb
call
xchg
jge
xrelease
mov
pusha
or
push
rorl
stos
jns
fdivl
and
add
fnstcw
sub
lods
cwtl
xchg
dec
fistps
xor
sbb
xchg
jno
ja
jbe
gs
outsl
int3
mov
bound
jno
adc
push
push
in
adc
cltd
and
fnstenv
call
mov
lcall
and
fildll
push
mov
pop
enter
cmp
push
push
adc
adc
std
rcll
push
jmp
insb
pop
idivb
ja
xchg
test
mov
mov
sti
imul
dec
mov
jp
sbb
test
inc
mov
and
pop
cltd
mov
push
bound
mov
lods
outsb
jbe
aaa
test
loop
adc
fidivl
xchg
mov
dec
mov
or
mov
pop
jmp
add
cmc
xchg
inc
in
or
imul
je
mov
push
in
js
nop
movsl
aaa
sub
subl
cld
nop
lock
dec
mov
inc
les
inc
fistl
inc
dec
pop
sti
bound
lods
decb
gs
adc
aas
mov
cmc
les
imul
js
inc
subl
cli
jle
rorb
pop
fldt
adc
push
test
lret
cld
test
insb
rorl
mov
aad
dec
mov
fs
movsl
push
orb
loop
mov
lods
inc
and
mov
lcall
cmp
cmp
adc
push
insl
pushf
or
mov
pop
xor
sbb
in
xchg
sbb
or
xor
fmul
pop
gs
repnz
mov
jmp
pop
inc
out
cltd
mov
fwait
xor
call
andl
sbb
sub
popa
mov
outsb
ljmp
ds
lods
es
stc
mov
push
dec
loope
xchg
out
aas
fists
sbb
dec
movsb
cmp
sbb
dec
sub
mov
pop
jg
aad
test
jmp
xchg
mov
jne
add
shrl
leave
pop
mov
jl
in
xchg
mov
sbb
push
push
mov
xor
or
in
lret
sbb
aad
sub
mov
testb
jecxz
mov
lds
sub
or
mov
hlt
into
mov
ror
pop
insl
dec
cmpsl
lds
outsb
wbinvd
pop
jmp
jl
jae
xor
mov
xchg
arpl
dec
mov
ja
inc
test
push
jl
aas
inc
popa
je,pn
adc
shl
xchg
or
push
mov
in
stos
jae
mov
cmp
mov
out
es
inc
inc
push
adc
mov
push
sub
mov
mov
push
call
mov
andl
push
js
mov
mov
mov
push
nop
das
sbb
ds
movsb
orl
mov
adc
popa
inc
clc
or
ss
sub
mov
fiaddl
popl
pop
jae
pop
mov
out
hlt
push
mov
fwait
xor
iret
shl
mov
sub
popf
fmul
in
mov
and
dec
icebp
adc
mov
fnstcw
sbbl
loopne
int
jne
inc
and
xchg
sub
les
lahf
xor
mov
sub
bound
shrl
and
mulb
outsb
in
stos
test
add
fsubl
clc
ret
or
xchg
pop
lret
pusha
push
std
cmp
andb
mov
js
stos
fidivs
pop
push
add
mov
xor
xor
nop
insb
mov
jmp
xor
les
adc
jnp
lret
mov
pop
adc
sahf
xchg
sub
stos
cli
push
insl
repz
hlt
jl
test
rsm
mov
repz
pop
pop
test
arpl
add
cwtl
pop
mov
pop
clc
mov
pop
push
into
xor
pop
mov
faddl
mov
jo
ja
xchg
jmp
das
jmp
inc
xchg
xchg
jmp
cwtl
mov
xchg
cmpb
xchg
jb
loopne
cmp
xchg
pop
jnp
js
shlb
xchg
fidivl
mov
xchg
and
bound
test
add
xchg
rclb
dec
pop
mov
out
xchg
pop
ljmp
jno
ljmp
fld
xchg
jns
movsb
cmp
dec
in
iret
jns
xor
xchg
test
mov
gs
xchg
repz
nop
lea
mov
int3
inc
sub
jne
pop
lock
sub
dec
fimull
mov
into
xor
add
out
repz
jo
mov
data16
lret
je
or
and
mov
leave
pop
repz
loope
pop
sarb
sub
dec
or
and
movsl
xchg
addr16
mov
int3
cmp
cwtl
push
scas
push
out
fistpl
movsl
clc
int
jne
outsl
out
push
inc
mov
cld
loop
push
dec
gs
xchg
add
into
xor
in
dec
mov
mov
add
add
icebp
jbe
gs
pop
push
movsl
aad
cmp
jb,pt
push
scas
pop
pop
cmp
shrl
fdivs
sbb
push
pop
mov
mov
fidivrl
push
mov
stc
xlat
jge
sub
sarl
xor
pushf
mov
mov
loope
jo
mov
sbb
push
les
aaa
push
cmp
pusha
clc
fildl
cwtl
loop
cld
jg
jecxz
mov
dec
loope
mov
in
cmp
pop
aam
ret
sbb
dec
cltd
sbb
push
in
out
or
cmp
sbb
int
fnstsw
pmulhuw
xchg
push
mov
out
imul
cmp
std
mov
xchg
mov
outsl
mov
int3
push
ds
xchg
test
ja
pop
jbe
pop
hlt
insl
fs
cmp
scas
mov
cli
cli
aas
into
inc
pop
push
into
push
dec
es
dec
int3
adc
fnstenv
iret
int3
jecxz
pop
cmp
xor
popa
and
mov
pop
mov
mov
mov
pop
jecxz
xchg
int
add
lea
mov
in
dec
and
out
inc
loop
inc
pop
dec
jae
imul
pop
test
jg
jnp
jge
mov
les
pop
stos
xchg
int
mov
dec
jo
push
mov
sbb
sbb
rclb
lahf
filds
ret
cwtl
xor
add
pop
leave
popa
fsubrs
stc
dec
add
movsl
shlb
sub
test
sbb
adc
push
addr16
pcmpgtw
int3
fdivp
xchg
std
xchg
mov
in
or
mov
sbb
es
sbb
push
outsb
xchg
aaa
jmp
cmc
icebp
outsb
xchg
jecxz
xor
mov
dec
nop
push
sarl
xchg
jecxz
incb
cmp
inc
stos
pusha
subb
cmp
pop
je
aad
or
or
in
push
inc
ror
repz
enter
push
mov
jnp
fsubrs
push
dec
popf
cmovge
sub
xorl
repnz
mov
nop
lock
jae
out
fsubr
and
xor
push
pop
out
mov
decb
daa
rorb
or
cmp
in
inc
fcmovu
call
popa
dec
arpl
or
mov
mov
push
cmp
and
mov
xlat
sbb
xchg
mov
loop
push
jmp
cmc
aaa
jmp
cli
scas
push
ds
cmp
dec
sbb
mov
cmp
adc
adcb
lods
std
mov
inc
fcoms
jbe
mov
sbb
mov
mov
adc
mov
cltd
sub
cmpsl
ret
jmp
lret
mov
inc
pop
ljmp
scas
call
and
add
enter
out
lret
int3
or
shl
hlt
adc
cmp
mov
out
enter
mov
ds
ss
cmp
gs
scas
push
aas
repz
xor
je
hlt
mov
dec
mov
pusha
pavgw
xchg
das
ss
pop
scas
sbbb
push
or
push
out
jb
jo
dec
pop
in
ja
subl
xor
push
mov
dec
icebp
or
cs
je
outsl
xchg
cs
movsl
lds
adc
stc
leave
mov
and
xorl
jl
dec
sbb
cs
ret
test
inc
cmpsb
xor
aaa
mov
and
push
mov
mov
ret
mov
dec
mov
dec
in
js
pop
and
iret
aaa
push
insl
jbe
ljmp
lock
xsha256
cmpsb
int3
fnstenv
add
mov
dec
roll
insb
sahf
push
addr16
mov
mov
fidivrs
rclb
pop
xchg
xchg
mov
jle
mov
add
pop
pop
addr16
idiv
push
out
xchg
sbb
sbb
outsb
sbb
add
loop
pop
jge
lods
imul
inc
cmp
and
test
data16
mov
jmp
mov
mov
push
adc
fbld
lret
jne
or
enter
xor
insl
test
loope
xchg
push
insb
loopne
add
xor
addr16
or
in
bound
and
jo
inc
mov
jle
xchg
xchg
imul
add
cs
push
dec
inc
ljmp
mov
sub
das
mov
inc
inc
ds
jae
out
xchg
test
inc
add
inc
push
inc
mov
pop
pushf
fbstp
mov
sbbl
fimull
fdivs
mov
dec
rorl
cld
xor
cltd
popa
frstor
push
sahf
and
nop
fcomi
dec
dec
cmp
pop
jns
out
cmpsb
daa
jl
sub
sti
stos
xor
push
sbb
popf
stos
push
inc
jnp
call
out
leave
daa
mov
mov
or
loopne
mov
add
or
loop
xlat
leave
pusha
or
das
mov
and
aad
test
aad
mov
pop
adcl
nop
aad
mov
es
sub
xor
js
mov
popf
cld
stc
hlt
mov
nop
and
pop
frstor
pop
call
xchg
sahf
mov
mov
imul
repnz
test
inc
andb
popf
pop
out
or
inc
add
jb
inc
movsl
mov
shl
or
pop
lds
jnp
pop
popf
daa
jbe
push
test
xchg
imul
sbb
dec
pusha
and
and
test
mov
fstpt
inc
out
sbb
ja
xchg
test
lds
nop
inc
in
rcrl
fsubrp
pop
aaa
loopne
icebp
jg
jle
push
push
add
mov
and
std
testl
test
pop
push
in
mov
adc
das
std
or
cmpsb
lahf
mov
mov
pop
mov
inc
shlb
mov
xchg
adc
subb
call
fmuls
add
mov
or
sbbl
ret
mov
stos
inc
inc
dec
int3
arpl
mov
jne
pop
hlt
jmp
lcall
inc
sub
xor
cltd
xor
dec
mov
cmp
loope
xor
pushf
xor
dec
int
aas
inc
mov
xor
cmp
mov
testl
repnz
rclb
push
sbbb
in
dec
flds
push
jmp
or
mov
lock
or
lret
mov
inc
pop
cmc
xor
sbb
movsb
pop
sub
xchg
xlat
scas
jo
shlb
lods
mov
dec
psrld
ja
icebp
xor
fisttps
arpl
or
lret
clc
outsb
mov
std
and
cwtl
das
cmp
int
sub
jg
ret
rcrl
or
repz
pop
fucomp
mov
mov
jae
xchg
movsb
add
sahf
jne
mov
and
inc
daa
adc
pop
or
jbe
cmp
mov
or
shlb
mov
shll
pop
and
mov
jnp
arpl
mov
dec
clc
inc
xchg
and
in
lcall
push
daa
iret
ret
xchg
ljmp
push
sbbl
out
pop
push
and
loopne
iret
fbstp
inc
outsb
out
mov
pushf
inc
cld
mov
xchg
xchg
mov
test
aaa
enter
pop
xor
cmp
dec
fldl
out
insb
push
push
js
or
jae
mov
sub
dec
xchg
test
out
mov
xchg
xchg
stc
xchg
test
dec
test
jecxz
pop
adc
testl
adc
mov
stos
and
mov
and
inc
std
pop
hlt
xor
cmpsb
fdivrl
mov
rclb
ljmp
and
pop
or
add
sbb
ds
loop
push
je
aas
cs
and
ret
push
inc
sbb
jmp
js
mov
push
mov
mov
mov
ret
into
inc
cli
lahf
sub
inc
push
sti
push
shrl
and
icebp
mov
pushf
and
cmc
mov
iret
and
sub
dec
movsb
aaa
scas
cs
xor
daa
adc
pop
mov
mov
push
popa
mov
sbb
lahf
or
mov
xor
and
push
std
fwait
mov
test
pop
pushf
scas
test
dec
negb
repz
cmp
pop
dec
jno
stos
in
cmpsl
adc
xchg
inc
enter
lcall
pop
cmpsb
mov
pop
aad
outsl
sub
mov
inc
and
push
js
aam
shrl
cs
sbb
nop
and
call
fwait
jb
push
cmp
popa
aad
loope
fldcw
mov
adc
test
orb
pop
or
rcl
cmpsl
inc
lret
in
pop
jae
hlt
movsb
inc
cmp
cli
xor
insb
xor
arpl
shll
lahf
pop
jecxz
mov
movsl
std
push
lret
inc
stos
inc
movsl
add
inc
popa
es
adc
add
loop
jp
adc
das
xchg
adc
sbb
mov
cs
jne
dec
cmpsb
jge
pop
addr16
out
ds
outsl
movzwl
lret
gs
inc
pop
int
repz
sahf
pop
xor
and
cli
push
add
or
pop
insl
lods
je
inc
push
dec
lock
mov
insb
ror
cmc
andb
insl
dec
cmp
push
jmp
jg
mov
mov
aas
push
xor
mov
xchg
mov
dec
call
test
sbb
bound
int3
loop
setne
jns
das
mov
outsb
cmp
and
popf
shlb
enter
insb
ja
nop
mov
pop
mov
les
pop
std
sub
xor
cmp
stos
push
aas
shr
dec
es
in
dec
pushf
dec
adc
push
mov
cs
dec
and
mov
aas
loope
stos
cs
lods
xchg
push
mov
int
clc
das
loop
and
cvtps2pi
scas
jp
cmp
faddl
dec
sub
imul
fbstp
jle
sub
push
xor
jns
loopne
sbbl
sub
lods
cmp
outsb
add
out
nopl
mov
mov
movsb
xchg
sub
jp
jg
xlat
adc
sbb
and
ret
or
cmp
mov
les
test
scas
add
mov
sub
dec
mov
ja
jl
cmp
shll
xchg
add
aas
leave
frstor
ret
pop
dec
addb
cmp
dec
pop
adc
arpl
dec
repz
aam
std
std
lahf
daa
lret
icebp
fmul
sbb
inc
mov
je
lcall
pop
out
notl
test
cltd
sbb
or
xor
out
mov
push
outsl
inc
int3
arpl
adc
test
sub
push
pop
test
push
fidivrl
in
cli
sub
in
mov
xchg
dec
pop
xchg
cs
sbb
cltd
add
cmc
jp
dec
pop
fsts
lret
mov
out
sbb
movsl
loop
adc
ljmp
jo
in
cmp
mov
inc
mov
rorl
sbb
sbb
clc
push
insb
mov
subb
xchg
mov
xchg
cwtl
pusha
dec
add
mov
stos
inc
mov
in
das
test
loop
cmpsl
push
jl
push
mov
lcall
lcall
inc
push
fidivrl
pop
sbbl
ss
sbb
loopne
cmp
mov
stos
mov
lret
neg
stos
xor
shrb
push
jmp
mov
decb
aad
jle
bswap
imul
dec
mov
pushf
lahf
xchg
dec
mov
add
adc
je
in
inc
fsubrs
sti
scas
adc
lcall
mov
sbb
cmpsl
fnsave
xchg
in
mov
clc
pop
mov
and
xchg
xchg
jp
arpl
arpl
scas
sbb
lea
cmpsl
fidivrs
shlb
fdivl
and
roll
pop
imul
mov
xlat
popa
dec
push
adc
push
jno
fnstcw
imul
arpl
xchg
ja
int
outsb
add
enter
dec
jmp
push
ror
montmul
out
popa
hlt
xlat
jne
pop
cmpsl
clc
xchg
mov
insl
jge
shlb
mov
int
dec
arpl
mov
mov
test
mov
push
out
xor
in
xchg
xchg
jmp
movsl
cs
and
jnp
loopne
mul
test
dec
leavew
push
mov
lds
pop
inc
outsb
jmp
adc
mov
cld
cmc
addl
int3
ret
mov
fsub
jg
xor
ljmp
call
xchg
or
roll
pushf
bound
addr16
cmp
loope
mov
jp
into
or
cmpsl
hlt
push
jge
or
push
mov
icebp
adc
add
jg
mov
adc
out
cmpsb
xchg
pop
dec
pop
and
push
cmpsl
xchg
push
or
push
insl
stos
test
mov
mov
mov
push
cmpsb
mov
and
mulb
push
bound
inc
jmp
js
testl
test
jle
aam
pop
and
cmp
mov
adc
test
fwait
dec
xchg
pop
cwtl
lea
mov
dec
xlat
aaa
into
push
push
dec
fisttpl
pusha
xor
inc
pop
jo
pop
xchg
ja
out
inc
test
cmp
je
push
xor
je
fidivrl
js
insb
add
cmpsl
mov
jle
stos
inc
mov
leave
fs
jp
lods
mov
add
test
shr
xchg
mov
sbb
mov
shl
sbb
bound
addr16
mov
mov
jmp
add
loop
xor
mov
inc
fsubr
shlb
add
in
mov
mov
jo
ret
xchg
push
insb
add
test
sbb
inc
lret
push
cli
xor
sbb
jmp
hlt
scas
jmp
inc
and
je
roll
pushf
mov
lds
dec
dec
jecxz
jmp
jae
mov
or
xchg
jmp
fists
sar
test
not
cltd
scas
in
inc
cmp
xchg
sub
cmp
inc
int3
inc
or
mov
lea
dec
pushf
scas
mov
test
arpl
sar
cmp
dec
in
test
into
fcmovbe
imul
decb
fstps
sbb
sub
movsl
lds
aaa
fsubs
scas
add
mov
and
int
mov
dec
mov
jo
jb
pop
addr16
lcall
jb
xchg
movsb
pop
insb
test
jnp
sub
jno
inc
mov
push
out
fistpll
jne
lea
cmp
add
rcr
and
jbe
adc
sub
shrb
cli
inc
mov
jecxz
and
jmp
sub
gs
outsb
idivb
add
cmp
lods
insl
adc
dec
lcall
mov
sbb
pop
cmp
shrl
sub
imul
loope
loope
iret
sub
adc
out
add
loopne
mov
or
mov
mov
jae
jl
sar
icebp
push
lods
and
cmc
mov
cltd
cmpsl
fildl
jno
jbe
adc
popf
jnp
lea
sub
or
test
lahf
pop
xor
adc
aam
push
lcall
dec
lods
adc
pop
add
mov
xchg
cs
xor
mov
lret
xor
adc
mov
pop
xchg
mov
clc
sbb
dec
scas
and
jle
pop
scas
mov
inc
pop
lods
push
xchg
mov
adc
popf
pusha
es
or
push
in
sub
aad
and
outsl
cli
pushl
mov
xor
out
insl
or
pop
cmp
mov
aaa
push
xchg
xor
inc
gs
aas
leave
fnstcw
arpl
test
movsb
sbb
cltd
cmp
cmp
and
and
sbb
mov
mov
inc
add
pop
icebp
dec
xor
mov
and
rcl
mov
push
das
scas
shll
addr16
imul
sbb
cmp
pop
iret
inc
out
cltd
push
xchg
imul
mov
dec
addr16
sbb
testl
push
cmc
pushf
into
mov
jns
roll
std
jo
sbb
and
pop
jno
sbb
jp
add
jb
push
xor
leave
pop
jecxz
js
and
xor
bound
or
aas
mov
sub
push
enter
xchg
xchg
in
mov
mov
push
cmp
sbb
inc
dec
and
in
and
fs
cwtl
adc
lods
mov
dec
into
adcb
sbb
jns
sahf
pop
dec
sbb
add
cmpsb
fstps
sbb
xchg
and
fisubl
test
mov
sbb
scas
cmp
in
xchg
jmp
xor
mov
xchg
test
lret
cmc
sub
arpl
and
cmp
addr16
icebp
pop
cld
roll
push
bound
mov
dec
inc
and
and
loop
and
lods
xlat
test
add
pop
js
adc
ja
clc
scas
data16
cwtl
fcmovb
in
jmp
jmp
lahf
fldcw
ret
mov
rolb
xchg
and
rcrl
sbb
pop
sbb
scas
mov
and
adc
xchg
mov
and
push
orl
push
cmp
outsb
dec
andb
jge
mov
repnz
lods
pop
loopne
xor
add
lret
cmc
fldl
nop
and
enter
sti
pop
xor
xchg
xlat
or
fadds
loope
push
jb
push
pop
jae
sbbl
lcall
push
sub
lds
loop
cmpsb
xor
sub
adc
mov
sub
mov
inc
push
int3
dec
pop
out
push
insl
push
out
push
imul
nop
adc
je
loopne
mov
je
lahf
adc
push
rclb
lret
sti
add
insl
in
sbb
int
cmp
dec
out
xor
mov
popf
shrb
adc
sub
mov
mov
pop
cmc
pop
sub
mov
lret
mov
add
cmp
pop
sbb
in
lds
mov
dec
adc
cmp
mov
icebp
cmp
dec
inc
or
sub
jl
mov
sbbb
stos
les
inc
out
fisubrl
xorb
pop
or
shrb
jns
lret
out
and
popa
cmp
das
push
pusha
fmulp
jo
pop
pop
push
mov
shrl
test
fisubrl
mov
and
stc
cld
push
mov
dec
clc
stos
mov
aas
fisttpll
in
jl
inc
add
mov
dec
and
adc
push
inc
cli
inc
loopne
out
lret
fiaddl
repnz
jnp
push
in
sahf
mov
push
int3
loope
test
mov
add
popf
xchg
xchg
leave
jbe
sub
xor
aaa
ret
dec
rcll
es
mov
rorb
les
jecxz
or
push
les
mov
icebp
push
and
and
lret
mov
movsl
mov
or
pop
movsl
lods
rcl
ror
pop
add
out
sti
and
lret
rcrb
daa
enter
in
rorb
rol
ss
push
jmp
dec
gs
call
dec
aam
sbb
xor
insl
and
cmp
adc
out
xchg
push
xchg
addr16
xchg
add
mov
test
rcll
test
xchg
bound
xchg
je
adcb
adc
pop
xchg
sti
xchg
mov
sub
jge
mov
ret
jg
insb
arpl
lcall
lods
push
fistpll
mov
and
call
shll
mov
movsb
js
daa
and
fiaddl
mov
push
and
mov
popa
lahf
nop
mov
outsl
adc
inc
and
inc
xchg
ret
add
xchg
sbb
stos
lods
aas
jae
in
fnsetpm(287
sub
fs
decl
push
aad
notl
xlat
dec
xor
in
daa
fimuls
dec
int
xchg
rorl
fisubrs
stos
xlat
xor
movsb
pop
and
int3
inc
ja
lahf
jg
and
arpl
aas
iret
sbb
leave
fstps
pusha
rcrb
notb
cs
cmp
fildl
and
mov
push
inc
adc
inc
test
lret
call
je
xlat
nop
sub
xchg
push
adcl
xchg
jnp
ljmp
fprem
adc
cmp
mov
lock
les
pop
outsl
scas
xor
pop
mov
jnp
jne
pop
mov
xchg
mov
std
xchg
jnp
push
xor
movsb
pop
adc
dec
and
push
ficomps
aam
xor
lock
jb
mov
and
notb
repz
xchg
lods
push
mov
arpl
ret
cld
xchg
mov
pop
lahf
es
lods
sbb
xor
aas
and
add
xor
fucomip
aaa
xchg
aaa
adc
pop
xor
or
ljmp
inc
in
shlb
dec
sub
dec
out
test
int3
jno
mov
adc
jo
imul
pop
adc
pop
or
cmp
and
les
lea
scas
scas
out
ja
xchg
mov
test
sub
lods
sub
push
and
stos
mov
mov
dec
daa
sub
pop
jo
in
shll
xlat
je
lds
fiaddl
je
loopne
add
xor
movsb
sar
fstpt
repnz
push
fwait
inc
xchg
fbld
jmp
mov
sub
mov
sub
pop
lahf
mov
je
mov
push
pop
jnp
dec
pop
dec
jg
hlt
testl
aaa
cli
xor
idiv
push
jne
xor
popa
aad
xchg
sti
dec
cmpsl
mov
inc
fdivrp
movsb
or
add
lcall
push
stos
pop
cmp
and
data16
and
and
clc
push
leave
push
addr16
xchg
cmp
ja
call
pop
in
adc
pop
and
subb
cmc
popf
lods
cs
xor
xchg
pop
pop
ja
aas
push
inc
jno
jmp
out
adc
dec
stos
mov
dec
mov
mov
mov
or
pop
or
inc
xchg
jg
les
mov
sbb
idivl
fsts
inc
rorl
sahf
imul
rol
pushf
les
push
mov
xor
insb
add
pop
dec
adc
dec
pop
inc
and
repz
mov
or
fucomp
push
pusha
dec
bound
insb
inc
or
pop
int3
imul
xchg
or
fisubrs
insb
jle
cmp
cli
mov
inc
loope
mov
out
lcall
jmp
pop
jp
mov
daa
js
push
xor
fldt
inc
call
call
test
push
call
push
outsl
pop
icebp
incl
js
pop
shl
sti
or
sub
mov
or
gs
stos
mov
sbb
movsb
ss
lock
mov
jno
les
ret
bound
scas
mov
loope
inc
ljmp
jno
popf
jmp
lock
scas
push
js
int
je
xlat
jbe
and
fisubl
test
std
leave
je
cwtl
mov
ret
and
sbb
push
mov
movsb
mov
pop
mov
addr16
insl
or
nop
push
cli
sub
sbb
aas
dec
mov
sahf
mov
rorb
and
fcmove
data16
adc
mov
jmp
xor
pop
arpl
in
test
loope
inc
fdivr
push
lea
mov
sbb
movsl
dec
adc
in
mov
and
test
sub
jg
cld
xchg
enter
fucomip
sbb
loope
cmp
ljmp
cli
sti
test
push
push
or
or
addb
and
push
xchg
pop
sub
jno
aaa
leave
jbe
lock
xor
frstor
nop
mov
icebp
in
in
addr16
push
inc
les
lods
pop
fwait
scas
cmp
and
push
jl
cmp
fcomi
js
jbe
out
fimull
scas
xchg
sub
daa
fnstenv
mov
les
and
pop
loope
aaa
adc
inc
fwait
rolb
inc
loope
test
outsb
sub
cwtl
rclb
fisttps
mov
shr
mov
push
bound
xchg
movb
xchg
xor
insb
lret
cmp
stos
and
mov
jmp
or
jp
call
cld
push
arpl
movsl
test
in
mov
adc
cmp
cld
inc
into
dec
add
imul
inc
xchg
sbb
ja
fadds
cld
sbb
loop
jnp
xor
pop
out
fwait
sbb
ret
les
push
popa
leave
mov
ss
and
sub
push
jae
ret
mov
or
sahf
stos
jg
je
xchg
xchg
jne
cs
jbe
sub
add
mov
sahf
jno
mov
shr
jnp
xor
negl
xor
enter
into
fs
lds
xchg
mov
dec
or
jecxz
inc
xor
fidivrs
test
fs
cmpsb
add
in
jbe
jecxz
xlat
pusha
mov
outsl
push
mov
cltd
inc
sbb
pop
movsb
dec
push
jp
rcr
xchg
mov
lds
jae
jno
dec
sub
xchg
addb
cwtl
sub
xchg
imul
out
pop
sbb
mov
js
cli
insl
jp
into
xchg
lds
push
outsb
push
push
scas
inc
mov
test
or
and
jb
jae
sbb
arpl
mov
cwtl
scas
adc
movsl
mov
lcall
out
mov
jnp
repz
inc
les
lea
cmp
ljmp
mov
rol
lods
xchg
pop
imul
sub
jae
fidivrl
push
inc
aam
cmp
mov
test
jae
loope
push
ljmp
imul
pop
mov
pop
movsl
movsb
xorl
add
xchg
sub
pop
out
dec
loop
adc
out
mov
mov
cs
xchg
pop
test
cmp
pop
aad
jge
inc
lcall
out
test
shl
or
push
repnz
jecxz
and
mov
jge
adc
repz
xor
push
imul
fiadds
cmp
and
loopne
mov
add
jmp
nop
and
push
mov
gs
vprotw
ljmp
push
jl
iret
mov
roll
ret
shll
cli
jge
push
lods
pusha
mov
push
jp
mov
cwtl
loope
mov
inc
cmpsb
rcrb
cmpb
pop
ret
adc
mov
test
push
ds
shl
pop
popf
and
loop
aas
bound
add
and
insl
xchg
sbb
push
xor
les
pop
scas
bound
imul
cmp
das
sahf
push
xchg
mov
subl
pop
cvtpi2ps
sub
and
shr
add
mov
mov
std
and
inc
mov
loopne
inc
mov
pop
jp
and
aad
pop
jecxz
in
pop
imul
hlt
xchg
mov
xor
mov
sub
sub
dec
jb
push
lcall
movsb
les
jmp
addr16
push
ljmp
cltd
hlt
loop
push
xchg
and
inc
or
ljmp
loop
mov
clc
xor
xor
mov
push
dec
pop
adc
adc
ffreep
add
mov
sub
mov
xchg
std
enter
mov
lock
push
sub
rorl
pop
jns
mov
sub
leave
mov
daa
push
pop
sti
push
je
ret
inc
fyl2xp1
daa
jns
add
pusha
jp
pop
ds
fmuls
dec
loope
push
int
or
stos
stos
insb
mov
inc
push
fildl
and
nop
cwtl
mov
sbb
push
ss
das
addb
out
es
xor
iret
in
sbb
push
in
fistpll
push
mov
ss
or
push
cld
test
or
jmp
cmp
mov
ret
xor
sbb
push
xchg
mov
push
sbb
push
and
les
mov
pop
mov
nop
push
xor
jno
out
fistps
inc
sbb
jb
insb
inc
fs
mov
int
cmp
movsb
cmpsb
cmpxchg
xchg
mov
into
xchg
push
out
ss
mov
dec
inc
mov
sbb
stc
pop
jnp
lret
mov
lods
pop
call
pop
loop
in
rcrb
cltd
xchg
imul
jl
in
sub
mov
int3
mov
add
add
jno
sub
fwait
rcrl
dec
sbb
sub
test
inc
fisubrl
orb
or
add
mov
xchg
in
ret
mov
sbb
sarb
int
jecxz
push
push
mov
and
mov
xchg
or
sbb
and
pop
add
data16
add
cmpsb
mov
and
cmp
test
aam
add
scas
repnz
cmp
sub
pop
adc
xor
mov
fadds
lea
xor
pop
xor
repz
sub
sub
sbb
mov
or
lods
ja
fidivrs
or
jbe
dec
les
lcall
shrl
pop
xchg
ja
fsubrs
enter
popa
xchg
mov
pop
inc
stos
push
inc
repnz
sub
fs
arpl
sti
decl
inc
lea
and
pop
sub
sub
push
dec
cmp
dec
mov
jnp
out
popf
jg
enter
je
rorl
pop
and
inc
loopne
lock
and
shlb
xor
int
or
mov
cmpb
mov
mov
fdiv
push
or
cld
cmp
adc
inc
cmc
jnp
lods
filds
mov
inc
xchg
stos
inc
push
andb
sbb
xor
bound
xchg
ss
sub
ljmp
jb
add
push
andl
push
push
jb
xchg
shlb
or
aas
add
jno
inc
not
aam
bound
mov
fcomps
loop
ss
loop
ljmp
lds
xchg
lods
or
inc
in
xor
ja
jecxz
mov
sbb
popf
pop
je
adc
daa
or
sub
popf
mov
iret
movsl
jl
fildll
push
pop
jnp
cmpsb
cmp
int3
mov
mov
pop
aas
mov
shll
push
addl
cli
nop
sbb
add
sub
add
bound
mov
push
fsubs
mov
in
pop
push
repnz
scas
pusha
xchg
push
psadbw
out
mov
loopne
or
jg
lods
mov
sahf
clc
pop
or
mov
push
test
sub
iret
push
jb
pop
daa
pop
rcr
out
scas
pop
fisttps
jbe
mov
data16
mov
push
out
stos
pop
test
jg
out
out
or
clc
or
stc
or
rcrl
mov
fnstsw
mov
sti
cmp
sub
fneni(8087
stc
cmpl
in
popa
aaa
mov
dec
mov
lret
pop
mov
pop
sar
call
jle
pushf
adc
mov
jne
mov
cltd
sub
stc
adc
fwait
jge
or
fsubrp
jo
nop
mov
cltd
sub
add
jbe
inc
loop
dec
dec
ret
add
je
adc
inc
test
dec
mov
inc
pop
dec
push
cmp
jo
test
push
aaa
dec
mov
or
clc
sub
iret
movsb
decl
and
lahf
movsl
dec
add
rol
stc
icebp
and
out
sub
or
add
fcom
movsl
cmp
cli
es
push
sti
adc
jl
test
repz
push
dec
jg
xchg
mov
mov
mov
sub
or
dec
out
popa
aas
roll
out
add
and
push
imul
xor
sbb
rcrb
call
or
cmpsl
cmp
mov
push
xorb
mov
or
xchg
outsb
icebp
mov
mov
ss
push
mov
leave
test
mov
jo
jnp
fwait
mov
dec
mov
movsl
dec
loopne
cmp
shlb
xlat
sbb
mov
ror
imul
lods
mov
insb
xchg
adc
push
test
scas
jno
cmpsb
clc
rorl
sbb
dec
pop
mov
orb
push
outsb
add
push
jle
movsl
lock
fldl
pmaddwd
jno
ss
pop
adc
in
mov
loopne
neg
jge
sbb
jg
sub
mov
mov
lods
dec
pop
ficomps
es
sub
push
and
inc
mov
sets
sub
cmp
dec
jg
loop
shrl
punpcklwd
daa
inc
mov
daa
dec
mov
jmp
or
mov
xor
xchg
in
inc
stos
adc
sub
mov
inc
fsubp
cmpsb
xchg
mov
fnstenv
dec
adcl
push
pop
cmpsb
adc
gs
daa
xor
mov
mov
ret
cwtl
push
es
cmp
std
xchg
jecxz
sbb
mov
cs
fwait
pushf
cs
and
push
test
leave
out
dec
lea
addl
es
jns
sub
cli
mov
or
fiadds
scas
xchg
scas
test
dec
enter
sub
and
cmc
lahf
sub
or
and
aas
or
adc
out
pop
repnz
mov
cmpl
jb
iret
fistpl
mov
out
outsb
std
shrb
add
xor
bound
jno
sbb
inc
scas
dec
jne
fildl
enter
sub
std
xchg
mov
gs
cli
dec
adc
or
daa
aam
mov
mov
loope
dec
out
outsl
cmp
rcrl
mov
fisubrl
or
push
jbe
dec
mov
inc
loop
fistpl
fdivrs
and
dec
bound
sub
clc
insb
xor
jns
cwtl
aaa
lret
out
cmp
dec
nop
inc
inc
out
mov
push
ret
out
mov
das
sarl
and
mov
mov
push
lret
data16
lea
mov
std
xchg
pop
and
insb
jns
pop
jae
xchg
xchg
add
insb
js
lds
xchg
inc
and
mov
stc
mov
aad
mov
pop
jb
test
mov
inc
je
les
dec
and
mov
aad
push
je
sub
aam
test
inc
clc
andl
das
shll
bnd
stos
imull
or
ret
mov
arpl
sbb
icebp
add
pusha
or
inc
mov
push
mov
sbb
decl
push
int3
rorb
cltd
leave
shlb
fists
lods
hlt
daa
sbb
pop
adc
ljmp
adc
and
adc
push
xor
ret
enter
xor
pusha
stos
fdivl
jle
imul
push
out
add
test
leave
push
movsl
cli
xchg
inc
fcmovb
sbb
leave
dec
in
jecxz
outsb
jge
mov
shll
xchg
arpl
fbld
mov
mov
sarb
and
popa
mov
arpl
mov
and
pop
mov
jle
in
imul
lds
pop
std
pop
int3
data16
and
push
dec
and
in
js
push
cmp
xchg
cmc
add
cmpsb
add
stc
inc
fnstenv
iret
sarb
xlat
inc
jl
cmp
sbb
xchg
in
inc
test
xchg
insl
adc
pop
lock
call
jl
dec
cmp
mov
ret
inc
cmc
xor
or
jae
iret
ss
and
xor
push
loope
dec
int
scas
mov
es
in
inc
cmp
fisubs
push
push
push
jmp
outsb
rcrl
inc
jl
dec
sub
aas
pop
jecxz
lods
xchg
fcoms
mov
sub
mov
lcall
sub
push
lods
dec
pop
shrb
daa
dec
dec
and
xchg
adc
aam
jne
mov
mov
in
sub
sub
daa
xchg
aas
or
xchg
mov
pop
loop
stos
xchg
pop
aam
dec
xchg
lods
dec
add
inc
jmp
push
jecxz
pushf
inc
jbe
or
cli
xor
push
or
sub
pop
jns
cmp
ljmp
inc
mov
out
out
scas
inc
dec
xor
mov
shlb
movsl
icebp
outsl
aas
sub
mov
pop
shlb
out
sbb
cmp
in
and
inc
push
les
or
sahf
add
mov
arpl
jns
pop
fmuls
mov
or
test
mov
push
mov
cmp
xlat
fisubl
sbb
ret
push
movsl
insl
stc
in
pop
ds
add
imul
jmp
jae
cmp
sub
lret
xor
adc
out
ret
cwtl
xchg
push
jne
and
lcall
shrl
push
icebp
into
inc
outsb
add
cmp
pop
jb
xor
cmpsb
fbld
cmp
jge
lock
sahf
push
add
add
cmp
jg
cltd
lock
pop
jae
fwait
mov
xchg
pop
mov
pop
in
mov
iret
pop
sahf
repnz
aaa
sub
bound
iret
xor
fimuls
rorb
fwait
sbb
adc
lods
push
sbb
inc
movsb
mov
aam
mov
cltd
negb
popa
cmp
cltd
cmc
cli
or
and
lcall
adc
xchg
dec
and
jae
mov
scas
mov
sbb
push
outsl
adc
push
jo
cmp
fwait
xor
rolb
cmpsl
gs
fsub
jo
ss
fsubs
je
bound
lret
pop
ja
pop
clc
adc
or
cmp
adc
pop
int
in
imul
andb
std
sub
xor
out
dec
dec
movsb
jno
pop
repnz
movsb
bound
pop
mov
pop
xchg
jno
pop
xor
jbe
leave
jns
and
fbstp
mov
stos
jae
cmp
fs
mov
mov
adc
pop
inc
gs
xlat
or
mov
lcall
sub
lret
shlb
aam
sbb
arpl
cmpsl
xchg
sti
mov
dec
out
pop
xchg
add
xchg
xlat
push
shrb
xchg
xor
jl
stos
mov
loope
sub
sub
aad
je
iret
pop
mov
fs
add
mulb
sbb
mov
push
leave
shlb
wrmsr
je
andb
inc
das
and
aam
add
daa
pop
cmp
rcrb
pusha
cwtl
fwait
add
test
mov
repz
mov
int
fwait
mov
mov
jnp
cmpsl
movsl
test
cmp
into
push
sti
pop
inc
push
mov
negb
movsl
cmpsb
and
aas
push
push
icebp
movl
sbb
shlb
out
data16
ljmp
test
push
shrl
scas
adc
cmp
mov
and
sar
mov
lock
clc
mov
adc
mov
lahf
push
inc
jle
mov
mov
dec
push
int3
mov
mov
lret
xlat
sbb
mov
xchg
stc
stos
cmp
loopne
lock
jmp
nop
jno
cmp
jmp
mov
into
idivl
daa
push
das
mov
mov
xchg
xchg
mov
ds
call
adcl
aam
pop
pop
cmp
jg
dec
arpl
pusha
and
das
xchg
rcll
mov
mov
sbb
xchg
aad
pop
dec
dec
movsb
repnz
sub
js
sbb
ss
sbb
fdivl
inc
aas
lret
sbbb
adcb
dec
sbb
inc
fwait
divps
fistpl
stos
sarb
mov
xchg
cmp
repz
fisubs
mov
fstp
push
mov
shlb
loopne
xor
ljmp
xor
imul
inc
mov
stos
gs
imul
mov
popa
mov
movsl
pushf
ds
jbe
test
movsb
ljmp
fbstp
pop
inc
push
lods
shr
test
aas
hlt
xor
and
dec
sbb
orb
push
jnp
sub
or
test
mov
stos
inc
push
orl
cmp
cmpsb
imul
aam
inc
mov
or
repnz
or
test
jl
je
sbb
jb
pop
fnsave
stos
dec
mov
loope
push
imul
scas
daa
ficompl
mov
inc
insl
scas
mov
shll
pushf
leave
push
pop
push
sbb
jo
sub
dec
dec
or
addr16
pop
sub
mov
stos
aaa
pop
mov
lahf
inc
mov
sbb
dec
pop
xor
dec
cpuid
outsb
xchg
shrl
mov
push
pop
fidivl
fldt
fwait
add
xor
arpl
push
popa
test
xorb
sti
lds
adc
sub
jae
mov
dec
jno
shlb
in
sbb
decl
rcll
inc
imul
cld
fldcw
add
cmp
push
pop
pop
stos
push
rol
jne
mov
and
mov
push
bound
mov
mov
inc
ret
dec
std
push
jg
nop
xchg
fsubrl
lea
mov
pop
and
jbe
out
inc
test
add
mov
xor
and
ljmp
es
pop
sub
dec
mov
and
dec
bound
mov
subb
rolb
or
insb
imul
stos
cmp
sub
mov
aas
jle
cmp
xchg
cmp
fiaddl
cmpsb
popa
clc
mov
xchg
jne
and
pop
mov
jno
dec
mov
mov
rclb
push
in
or
fiadds
adc
shl
lret
movsb
dec
setns
push
out
push
jmp
jne
xorb
sub
mov
inc
mov
mov
adc
test
sbb
test
pushf
jge
sarl
fs
pop
out
mov
pop
jne
and
push
outsb
popl
paddd
push
xor
or
cltd
mov
pushf
sub
lods
push
inc
test
loopne
scas
fwait
inc
sbb
xchg
aaa
jb
mov
push
js
sbb
outsl
imul
cmpb
vpaddb
das
std
outsl
and
or
cmp
xchg
push
and
out
mov
fwait
mov
push
push
test
and
repz
mov
xor
cmp
psubusw
mov
pusha
insl
insb
test
popf
mov
jg
aas
push
sahf
xor
xchg
xor
xchg
cmp
inc
adc
mov
fcompl
nop
adc
imul
int
idivb
xor
jbe
lds
sahf
and
sub
fwait
mov
stos
dec
sbb
movb
dec
sub
mov
adc
stc
add
xor
pop
pushf
shr
test
sub
inc
xchg
mov
orb
psraw
in
add
or
inc
jecxz
sub
rcll
push
iretw
in
popa
push
icebp
in
or
rol
rclb
fisubrs
pop
cmpsb
pop
aas
loop
inc
sub
adc
xchg
xor
jle
lahf
arpl
dec
xor
pop
jmp
aad
loop
sub
cwtl
jl
cmp
sub
leave
in
lock
ficoml
mov
pop
pop
loope
icebp
scas
push
js
cwtl
cs
pop
gs
aas
and
dec
test
popf
add
mov
cmpsl
dec
mov
xchg
sarb
pop
mov
mov
cmpsb
ret
aam
push
dec
dec
lahf
hlt
mov
inc
lahf
push
inc
lods
data16
enter
arpl
adc
lahf
mov
out
sbb
inc
cld
and
inc
ja
jne
aaa
shld
fisubrl
aas
pusha
insb
rcrb
or
or
push
mov
adcb
inc
aam
inc
fiaddl
adc
or
push
mov
push
ljmp
jnp
fsubl
or
enter
pop
or
cld
es
or
rol
mov
mov
xchg
sahf
jne
jmp
sbb
mov
or
add
sub
add
pop
hlt
ret
push
fisttpl
push
pop
es
pop
std
cltd
jae
jns
std
mov
fstpt
xchg
sbb
dec
lods
inc
mov
mov
cmp
lea
push
loop
push
pop
movsl
sub
fldt
call
xchg
insl
xchg
jg
xchg
in
ret
hlt
or
add
ds
pop
outsl
pop
cmp
lds
jae
xorb
cmp
adc
pop
or
push
jo
cmpsl
sarl
xor
mov
lods
xchg
mov
loop
xchg
mov
ds
cmc
mov
push
aas
jge
negl
push
mov
push
outsl
cmp
popf
cmc
mov
dec
jmp
cli
push
jmp
sub
repz
int
pop
addr16
clc
sahf
test
imul
inc
cmpsb
add
fidivl
dec
imul
cmc
mov
adc
and
xchg
mov
xchg
in
add
dec
cmp
outsl
jg
insb
pop
mov
outsl
mov
dec
call
enter
jno
sub
push
pop
sahf
aam
cmp
cmpsb
cmp
es
mov
or
stc
fiadds
and
or
dec
mov
lcall
loopne
mov
scas
xor
lods
jb
sub
adc
subl
enter
shrl
add
insb
ficomps
loopne
jbe
xor
pop
dec
fs
inc
fs
mov
jbe
aas
push
gs
es
pushf
mov
sub
repnz
sub
add
cmp
pop
out
mov
mov
xchg
add
lea
repnz
lret
repz
add
cmp
jae
sbb
push
dec
mov
fdivl
rcll
int3
lahf
adc
adc
jecxz
data16
mov
jmp
lock
and
push
mov
xor
push
shrb
push
push
mov
arpl
lahf
adc
jg
aam
add
lcall
and
jo
sbb
mov
mov
sbb
mov
movsb
mov
push
mov
imull
inc
nop
xor
inc
jb
or
and
int3
cli
test
mov
cs
pop
rcrl
test
xor
mov
outsb
jl
fnstsw
in
mov
xor
stos
movsl
lods
cmp
out
adc
mov
pop
lea
mov
sarb
add
call
mov
dec
xchg
stos
in
fwait
xlat
pop
fcmovnbe
mov
lret
imul
test
push
mov
ljmp
pop
and
jae
adc
add
int3
loopne
in
add
stos
cmpsl
ds
mov
sub
push
shl
xlat
jmp
add
sarb
jmp
pop
aaa
cmp
sbb
loopne
sub
add
or
fwait
mov
call
test
hlt
fwait
pop
cmpsl
popf
lock
inc
or
mov
xor
mov
fnsave
sbb
in
lret
xor
outsl
ljmp
add
dec
ss
mov
in
out
jmp
cld
mov
adc
mov
and
mov
sub
scas
cmc
scas
mov
in
adcb
dec
mov
and
rol
xor
and
push
pop
cmp
and
cmp
aam
add
lods
mov
xchg
mov
xchg
shlb
aas
cmc
stos
pop
aas
sbb
mov
push
pusha
jb
nop
sbb
les
jg
mov
ja
inc
mov
dec
push
outsl
loop
dec
dec
lret
mov
xor
pop
inc
fmul
enter
cmp
test
mov
dec
mov
xchg
xor
mov
shll
aad
fwait
test
mov
and
sub
int3
and
add
adc
sbb
pop
mov
pop
xorb
and
movzbl
add
mov
mov
movsb
cmp
aaa
or
aam
push
cmp
mov
test
enter
loopne
inc
es
cld
and
jg
xchg
lea
add
dec
dec
cmpb
fildl
test
stos
out
decl
cwtl
stos
pop
rcr
adc
loop
mov
push
and
lea
int
mov
fists
xchg
pop
out
inc
jnp
incl
insb
push
push
jno
cwtl
sub
cmc
adc
or
popa
ret
fbld
push
cltd
sahf
btc
sarb
clc
cmpsl
daa
mov
adc
cmp
out
push
xchg
aaa
xor
test
jl
xchg
ljmp
pusha
cmp
add
daa
dec
pop
sahf
adc
fadds
jle
adcl
cmpsb
jl
andl
push
mov
pop
lcall
jg
jnp
into
mov
mov
setg
push
cmp
jo
lcall
adc
imul
push
jmp
iret
dec
mov
in
sbb
or
inc
and
lods
or
ds
xchg
mov
arpl
xor
or
sbb
mov
outsl
push
movsl
inc
pop
cmp
jne
ret
mov
rorl
fcomps
cmp
repnz
loope
mov
popf
xor
cmpsl
jecxz
mov
xorl
inc
sbb
sar
inc
data16
pop
lret
shll
inc
add
lret
inc
ljmp
pop
stos
pop
test
mov
aam
inc
pop
aaa
scas
cli
sub
lahf
stos
enter
mov
mov
jbe
xsha256
cmpsb
xchg
outsb
stos
mov
movsb
out
cmc
mov
movb
je
loopne
xchg
scas
mov
ret
xor
or
adc
iret
push
dec
pop
pushf
fsubl
sub
or
jge
xor
xchg
out
je
loopne
pop
mov
mov
dec
pop
les
das
sbb
out
mov
ss
inc
cmp
cmp
lahf
pop
push
sti
mov
sub
iret
aad
lds
std
push
stos
lods
inc
loopne
xchg
shlb
popa
xor
pushf
imul
push
jge
adc
stos
and
xchg
jo
test
repnz
adc
lods
imul
add
jo
nop
pop
imul
popf
int
sbb
imul
repnz
mulb
fistpl
jb
inc
shrb
push
shl
stos
clc
xor
jl
sub
fldenv
dec
mov
addr16
js
sarl
lods
enter
mov
imul
xor
inc
fwait
add
aaa
out
and
or
lea
or
push
xchg
dec
test
xchg
cmp
aad
jge
inc
jecxz
mov
filds
sub
scas
sub
ss
cmpsb
es
hlt
or
mov
cmc
clc
sarl
or
xchg
dec
repz
xchg
test
inc
and
mov
jg
pop
mov
into
gs
or
in
lcall
lret
cs
push
mov
inc
push
dec
xor
jle
jecxz
mov
fst
in
ss
das
push
fwait
mov
jae
in
jg
xchg
test
ja
lret
repz
pop
inc
cmp
inc
int
sbb
cmp
das
sbbb
or
jp
into
cld
add
cltd
sbb
jle
pop
in
xor
pusha
add
sbb
dec
lahf
xor
repnz
jbe
mov
ret
sbb
lret
lds
adc
fsubrs
sbb
pop
icebp
sub
adc
mov
stc
push
jmp
add
sub
add
nop
inc
mov
ds
pusha
iret
inc
stos
into
mov
pop
xor
test
icebp
test
rcrb
cwtl
test
je
imul
stos
jbe
outsl
add
push
sub
ret
add
sbb
sub
into
inc
imul
rcll
pushf
pop
movsl
roll
mov
jmp
and
pop
sbb
mov
or
xchg
jae
popf
inc
push
jb
arpl
fwait
scas
ss
mov
sub
pop
mov
jae
shl
mov
adc
xchg
aam
mov
das
cmpsl
sbb
xor
daa
icebp
sbb
jae
insb
dec
mov
addb
ljmp
nop
add
xor
hlt
mov
xchg
loop
lods
fnsave
mov
test
and
hlt
rorl
repnz
into
jecxz
push
inc
push
data16
mov
les
mov
jo
scas
mov
add
sub
mov
jmp
push
mov
and
pop
ret
cwtl
aaa
fiaddl
xchg
sbbl
out
dec
fistps
push
fsubl
sbb
lds
mov
repnz
cmp
jb
pop
ljmp
mov
jl
cmp
sub
xchg
sar
xor
hlt
gs
sub
inc
pop
mov
and
aas
sbb
test
add
movsb
or
cs
cmp
pop
xchg
daa
push
out
mull
or
adc
pop
ss
shrb
js
mov
dec
cli
fldcw
cli
aam
lock
ret
pop
out
clc
inc
fnstenv
mov
xchg
push
out
test
and
int
mov
mov
xor
cmp
jae
stc
xchg
cmc
aad
sub
subl
aas
es
push
insb
pushl
and
push
jne
mov
stos
inc
pop
cwtl
pop
popf
push
push
xor
cmp
jl
xchg
fwait
push
mov
mov
add
loopne
fiadds
ficoms
push
in
or
mov
ficompl
inc
loope
xlat
and
or
mov
and
cmp
jg
jo
mov
adc
mov
dec
outsb
add
cmc
adc
repz
push
mov
sub
icebp
mov
add
add
cmp
dec
stos
cmp
push
push
jno
rcrl
xor
inc
pusha
daa
loope
add
mov
mov
sub
sbbb
or
pusha
sbb
sahf
dec
icebp
xor
mov
les
xchg
sub
pop
sub
mull
das
ret
enter
in
fs
inc
jo
loope
sub
leave
mov
mulb
test
test
mov
adc
addr16
and
mov
jno
aam
fwait
dec
or
mull
xor
mov
or
cmp
xor
xchg
fnsave
ds
mov
pop
ss
jecxz
xchg
lock
sub
xchg
jp
xor
and
negl
stc
das
pop
imul
imul
insl
dec
mov
jnp
insl
movsb
aas
push
test
pop
inc
xor
ljmp
mov
lret
xchg
jmp
push
lods
nop
dec
shlb
jbe
mov
orl
maxps
xchg
inc
dec
lea
fstp
dec
imul
fnstenv
mov
cmp
insb
out
adc
lahf
fadd
and
stos
mov
rcrb
out
and
ror
shlb
add
arpl
xchg
push
sbbl
jno
jb
out
stc
arpl
stc
nop
mulb
jb
mov
es
dec
mov
xchg
xchg
sbb
daa
out
adc
rcl
xchg
dec
movsl
dec
ds
jb
scas
loopne
xorb
mov
outsb
testl
jae
cmc
inc
lahf
xchg
repnz
cld
loope
mov
cmp
testb
and
push
fs
scas
ret
sbb
cmc
or
xlat
mov
pop
rol
jns
std
je
out
xchg
mov
adc
rolb
shrb
bound
shlb
or
stos
xor
sub
add
mov
mov
mov
sub
lret
push
inc
adc
lret
lret
std
adc
loop
and
or
pop
cvtps2pd
outsb
mov
fstps
mov
mov
xchg
jbe
mov
sub
loop
inc
pop
lahf
jb
cmp
sub
mov
mov
lods
and
mov
push
subl
sub
dec
jle
sahf
fldcw
mov
pop
call
cmp
les
addl
mov
mov
mov
loope
xor
fimuls
add
sbbb
into
nop
daa
adc
inc
and
jb
arpl
mov
or
out
push
jbe
or
loopne
sbb
push
cmp
xchg
orb
cmp
lea
and
es
jmp
push
xor
lods
dec
cld
xor
xor
xchg
repnz
ja
push
xor
mov
sarb
add
adc
mov
hlt
mov
movsb
adc
dec
data16
and
std
push
adc
test
int3
mov
mov
pop
lock
xor
stos
std
icebp
xchg
sub
sub
ss
out
push
in
xor
aad
push
pop
sbb
sbb
aaa
into
mov
jecxz
pusha
dec
pop
cmp
rorb
orl
sbb
mov
es
jecxz
leave
pusha
xor
inc
sub
insb
push
sub
sub
loope
pop
dec
push
js
enter
fwait
xor
or
mov
dec
dec
add
mov
mov
fmuls
sbb
dec
cmp
cmp
mov
adc
cwtl
mov
cmc
mov
ss
jecxz
cli
xchg
mov
inc
push
out
xor
mov
sbb
cmp
pop
aas
push
sbb
loope
cmpsl
inc
fstl
enter
cmp
es
repnz
push
lods
inc
inc
jle
or
jo
adc
mov
ret
jb
outsb
adc
adc
shr
xchg
and
cmc
mov
sbb
or
outsb
add
stc
fimuls
dec
or
bound
jp
jo
clc
xchg
sub
int
mov
dec
mov
jp
lds
xor
mov
fmull
or
adc
sub
mov
lock
push
das
jns
popa
popa
loopne
xchg
stos
dec
loop
mov
xchg
out
imul
imul
test
or
lcall
sub
cld
xchg
or
lods
nop
daa
mov
or
cmp
ss
push
jge
push
call
mov
fisttps
sub
xlat
fsubrs
lods
pop
scas
fisubs
testb
jge
and
fs
xchg
mov
nop
jecxz
xchg
sub
add
mov
sbb
sub
cmpsb
xchg
dec
cmp
xorb
add
and
mov
cmp
daa
mov
xchg
shll
mov
lret
and
push
in
cmp
ljmp
fnsave
fnstenv
mov
mov
rorl
ret
dec
fistps
mov
ja
add
int
inc
and
adcb
or
test
jbe
push
cmpsl
mov
into
in
lods
inc
mov
sbb
lahf
mov
mov
test
bound
jge
xchg
mov
sbb
mov
mov
popa
push
out
xchg
lods
pop
hlt
loopne
gs
mov
popa
jg
xchg
lods
sbbl
mov
push
fnstenv
mov
mov
push
sti
xchg
fimuls
push
out
ja
push
out
xchg
scas
ja
fists
jge
jbe
arpl
mov
clc
in
int
leave
add
popa
clc
push
push
testb
lods
cmp
data16
sub
leave
pusha
pop
dec
mov
jl
out
outsb
popf
data16
lret
adc
jle
inc
xchg
pop
cltd
les
jge
xchg
scas
lock
es
mov
inc
add
pusha
test
dec
fnsave
sbb
arpl
xchg
cs
push
subb
mov
mov
test
movsl
or
movsl
mov
add
jo
lock
jae
mov
inc
or
cmpsb
lods
imul
jae
pop
mov
ja
mov
jae
inc
mov
ja
movsl
movsl
shrl
jb
insl
mov
ja
andl
xor
test
jle
test
out
jl
sti
mov
call
xchg
movsb
mov
flds
sbbl
lods
inc
cwtl
xchg
fwait
xor
in
cmpl
push
out
xchg
add
lods
mov
imul
sbb
insl
sbbb
mov
lcall
jnp
and
jle
scas
xor
sbb
jns
add
or
mov
fwait
xor
nop
daa
popf
mov
push
lcall
pop
scas
call
xor
mov
outsl
call
fsubp
lea
arpl
jns
mov
sahf
loop
hlt
mov
xor
subb
xchg
xchg
ret
ds
outsb
pop
adcb
sar
cmc
popf
lock
and
insb
add
xlat
outsb
sti
mov
pop
hlt
pop
inc
enter
addr16
ljmp
xchg
sub
xor
jg
addr16
out
clc
in
loope
data16
cmp
out
shlb
aaa
add
dec
outsl
mov
clc
out
push
popf
hlt
aaa
arpl
gs
lea
jge
push
dec
in
add
lret
stos
inc
mov
ja
cld
movsl
in
xor
insb
or
jge
jo
push
movsl
lret
sti
imul
lcall
mov
test
scas
fmull
stos
jnp
enter
add
add
sub
stos
jge
lods
inc
or
es
jmp
mull
cmpb
ja
xchg
test
les
sbb
sbb
push
test
mov
lock
lea
dec
mov
loopne
insl
adc
or
cwtl
das
dec
pusha
push
call
add
arpl
fcmovnb
pop
or
icebp
mov
push
add
inc
and
arpl
dec
jecxz
int
xor
inc
pop
sub
dec
fnstenv
inc
add
cltd
dec
pop
and
pop
rclb
repnz
pop
sub
test
rcll
add
js
pop
adc
dec
lds
pop
add
call
dec
int3
std
imul
lcall
mov
iret
sub
std
push
sbb
pop
scas
mov
lds
push
call
inc
jnp
repnz
jb
andb
sbbl
call
mov
lcall
popf
xor
bound
lcall
lods
inc
shl
mov
pop
and
je
outsl
push
fists
mov
lret
inc
fidivrs
aam
mov
or
and
adc
jle
xor
inc
lret
cltd
xor
loope
sahf
push
aas
mov
cmp
xchg
leave
loopne
mov
cli
adc
aaa
jg
imul
and
sahf
xor
or
stos
inc
pop
cs
pop
jnp
loopne
jnp
mov
cmp
icebp
pop
daa
xchg
scas
pop
sub
pop
jp
sahf
scas
adcb
cld
xlat
pop
repnz
enter
scas
inc
push
insl
sbb
lahf
je
adc
jmp
stc
adc
inc
sbb
dec
dec
push
aad
sahf
mov
push
pop
aas
adc
dec
xchg
fs
mov
inc
or
mov
movsb
cmp
mov
inc
fsub
or
das
ds
xchg
pop
push
jmp
ljmp
sub
sub
pop
pop
xlat
in
test
or
int
aad
xchg
or
fidivl
sbb
jl
pop
sbbl
aam
and
jmp
lcall
cld
xchg
xor
jmp
inc
sbb
inc
rclb
lds
mov
stos
inc
xchg
daa
or
xchg
xchg
imul
pop
inc
int3
jo
xchg
jae
psubd
lods
es
push
sti
inc
sub
dec
mov
push
inc
add
pop
mov
cmp
and
std
xchg
and
pusha
stos
xor
dec
aam
popa
mov
inc
dec
inc
mov
aaa
pushaw
mov
inc
inc
dec
mov
jns
pop
leave
xchg
cltd
xor
sbb
xchg
add
sub
sub
fwait
push
mov
cmpl
call
and
or
test
cmp
add
in
pop
sbb
arpl
sti
and
lock
int3
cmp
mov
movsb
mov
xchg
fwait
mov
outsb
add
aam
cmpb
and
ss
mov
adc
add
xchg
out
jnp
out
adc
ja
pop
lret
out
pop
mov
into
push
jb
sub
xor
or
dec
xchg
js
inc
and
pop
xor
and
jp
shlb
in
inc
mov
pop
xchg
jbe
lds
sub
test
jmp
cltd
jno
lods
test
data16
xchg
sub
movsb
pop
ret
jl
call
scas
push
sbb
rorl
cmp
dec
test
xchg
pop
pop
xchg
mov
sbb
mov
sub
out
pop
xlat
jg
jecxz
repz
bound
mov
fiadds
inc
fidivl
push
mov
jge
out
ljmp
mov
or
sub
imulb
cmp
cs
xchg
aam
sub
xlat
insb
pop
dec
mov
jo
mov
popa
and
mov
in
jg
rcl
dec
mov
loop
pop
ret
mov
out
dec
adc
nop
pop
and
pop
and
jnp
jnp
inc
aas
pop
icebp
jl
fldt
mov
sub
outsb
les
sbb
int
push
jge
push
enter
inc
cmp
push
fstpt
out
shlb
dec
mov
call
pop
sub
mov
add
hlt
inc
inc
int
fadd
dec
call
mov
arpl
sar
jo
int
negb
lock
movsl
stc
xor
fimuls
gs
inc
xor
mov
mov
inc
fists
daa
mov
scas
inc
scas
rol
xchg
fdivr
jge
lret
imul
fadds
jnp
add
sub
or
cmp
sbb
or
out
jle
flds
sub
xchg
pop
imul
dec
gs
lods
jne
cmp
pop
cmp
xchg
xchg
pop
dec
mov
subl
inc
pusha
stos
push
outsl
addb
ja
mov
stos
scas
stc
pop
dec
loope
iret
pop
into
mov
add
add
inc
jmp
lea
addr16
mov
push
jo
imul
push
subb
push
pushf
pop
mov
aas
sbb
xorl
cmp
loopne
popf
jae
push
xor
jno
inc
inc
mov
dec
or
test
mov
push
mov
aam
push
call
jmp
mov
jl
fisttps
dec
scas
or
pop
shlb
add
inc
test
push
xor
ret
jb
push
xor
and
lods
and
sub
rorl
fs
cmp
cmpsb
cmp
pop
insl
rcrb
add
inc
push
inc
mov
push
sub
lea
xchg
mov
cld
pop
push
sarl
mov
or
jl
mov
mov
loope
call
pop
hlt
or
into
dec
cli
xchg
jg
and
cs
les
ss
inc
lahf
sub
jnp
movsb
pop
das
mov
dec
dec
mov
lods
push
push
roll
ja
iret
dec
sub
lret
mov
pmovmskb
cmc
sub
int
cmp
jne
inc
mov
xchg
push
lods
xchg
jmp
dec
aad
inc
fisttpll
cmp
xchg
aad
and
mov
loop
insb
call
adc
pop
sti
sub
lods
ljmp
cld
mov
cmp
test
incb
xor
xchg
out
and
jl
jno
adc
jecxz
into
loopne
shl
push
out
xor
or
sbb
sbb
aad
fmull
add
and
and
pop
ret
sahf
je
pop
adc
or
xor
xchg
or
stos
test
pop
lret
les
iret
aas
icebp
jmp
xlat
outsb
mov
or
es
cmp
sbb
dec
jmp
mov
addb
push
jae
imul
arpl
leave
aaa
and
jae
cmp
fstps
add
aad
clc
daa
jnp
shrb
leave
push
and
rcll
bound
sahf
test
jmp
mov
inc
enter
dec
loop
xor
mov
popf
and
test
pop
rclb
mov
int
popl
lret
outsb
add
xor
pushf
mov
orb
add
repnz
and
push
dec
fwait
je
inc
sub
push
pop
movsb
pop
outsb
push
xchg
cmpl
outsl
lcall
push
xchg
arpl
jne
mov
je
fadd
dec
lock
mov
inc
lea
fistpll
mov
inc
cmpsb
sub
dec
jecxz
loope
sbb
xchg
xor
jnp
jne
jecxz
out
roll
mov
cli
inc
mov
add
mov
inc
and
aam
pop
cwtl
lods
jne
jns
inc
pop
inc
cld
pop
fs
sahf
jbe
daa
icebp
sub
mov
xor
inc
inc
leave
mov
jnp
mov
cltd
xor
addl
lods
mov
xor
fidivrl
dec
inc
mov
arpl
pop
ljmp
add
movsl
push
lretw
mov
cmp
pop
loopne
push
into
mov
iret
jne
cs
stos
lcall
lcall
and
inc
mov
push
adc
xchg
pop
lea
push
daa
mov
inc
insb
cmp
jp
das
adc
pop
insb
orb
jbe
adc
subb
mov
loope
sbb
pusha
mov
insb
movsb
adc
xchg
push
leave
sub
sub
dec
lret
jbe
aad
pop
cltd
div
and
mov
push
into
add
sbb
xchg
push
pushf
jne
dec
mov
aaa
rclb
jae
cwtl
gs
xchg
ficoms
into
imul
mov
xor
lods
mov
in
mov
fstpl
dec
cmp
lea
inc
fiadds
es
dec
jecxz
pop
inc
fisttpl
dec
cmc
mov
outsl
pop
mov
sbb
cmp
mov
add
data16
push
adc
sbb
mov
pop
stos
fcmovbe
dec
jmp
ja
dec
fisubs
int3
inc
mov
out
dec
sbb
pop
xchg
repz
lcall
pop
xor
sub
mov
sbb
int3
inc
mov
xchg
mov
cmpsl
pop
jp
push
enter
push
iret
and
jo
pop
rorl
lods
pop
icebp
jns
mov
daa
sub
lahf
pop
dec
adc
out
cmp
imul
jns
shrb
jmp
jg
rcrb
leave
mov
repnz
in
inc
fstp
repz
or
fsubs
out
ret
hlt
ss
adc
leave
sub
pop
shll
mov
in
dec
rcrl
or
lahf
cmc
add
int
dec
les
sarl
mov
fmull
add
xor
repz
push
movsb
roll
dec
fisttpll
jb
jb
xor
and
inc
pushf
xchg
pop
or
arpl
sbb
push
stos
jb
popf
dec
add
jb
pusha
jns
inc
adc
cld
inc
movsl
jmp
clc
dec
adc
jbe
push
popa
push
mov
inc
xchg
mov
xchg
mov
push
imul
sub
lods
jae
and
in
xchg
cwtl
das
adc
xor
jmp
or
popa
clc
or
xor
scas
mov
sbb
fnstcw
add
adc
add
insl
test
and
push
in
xchg
orps
sub
push
into
fisttpll
aam
into
ss
jb
test
out
daa
fnstenv
aad
mov
cmp
pop
loop
and
bound
jp
sub
inc
fdivs
mov
out
and
adc
and
and
mov
or
pop
cmc
push
aad
pop
stc
nop
mov
inc
ret
dec
rclb
out
inc
ss
pop
sub
sete
call
xchg
jnp
mov
mov
out
in
pop
dec
les
stos
fiaddl
push
ljmp
into
repz
jns
pop
mov
ret
sub
dec
mov
cmp
cmp
and
sub
inc
movsb
dec
or
outsl
clc
mov
mov
std
xchg
push
mov
sarb
test
in
pushf
lds
sub
adc
sbb
decb
push
mov
sarl
mov
repnz
xchg
pop
repnz
cmp
int3
cwtl
mov
fbstp
in
add
test
and
outsb
pop
rorb
sbb
stos
sub
fstps
xor
iret
mov
cld
xchg
setae
roll
in
xlat
arpl
xchg
fidivrl
out
mov
rcll
or
shr
cli
js
mov
clc
inc
mov
xor
adcl
push
addb
das
jge
jnp
mov
out
pop
testb
cs
xchg
hlt
aam
mov
jmp
es
leave
hlt
pop
fidivrl
sti
xor
ja
inc
test
int3
mov
mov
mov
lret
cmp
mov
lock
lret
push
mov
jmp
cmp
call
mov
xchg
stc
fwait
mov
mov
cmp
gs
movsl
mov
pop
mov
fucomp
xor
mov
int3
clc
into
or
mov
jp
sbb
dec
push
movsb
cmp
jo
push
inc
filds
jmp
inc
into
arpl
sbb
rcrl
mov
xchg
cmp
and
jb
hlt
inc
rcll
mov
mov
outsl
jle
gs
fisubrs
push
and
out
cltd
rorl
inc
adc
cmp
jbe
mov
and
lret
mov
cli
sub
sub
sub
sub
jo
cmpsl
orl
or
mov
dec
push
mov
cmp
test
dec
sbb
mov
inc
adc
pushf
jl
loop
and
hlt
lock
lods
or
sti
shlb
out
or
bswap
dec
in
xor
cmp
pop
in
cwtl
jae
mov
jle
mov
cmp
inc
imul
faddl
clc
outsb
scas
into
add
scas
mov
fwait
mov
push
push
lret
mov
cmp
cli
dec
int
dec
scas
jmp
cld
pop
mov
mov
les
fsubl
hlt
sti
rclb
cmp
dec
cmp
dec
inc
out
pop
cmp
add
scas
pop
leave
and
out
dec
pop
xlat
test
or
pop
dec
sub
pop
stos
jo
and
jbe
mov
leave
xchg
ds
fucomp
xor
jl
clc
inc
mov
cmp
xor
sub
dec
or
and
and
scas
movsb
ljmp
xchg
test
stc
xor
push
mov
sbb
or
cmpb
ja
push
xchg
mov
pop
ret
sub
or
rclb
sbb
mov
jecxz
push
pushf
nop
pop
enter
dec
js
pop
into
adc
mov
out
or
mov
in
or
fsubl
ds
and
xor
push
cmpsb
sbb
cmp
mov
push
ficoml
outsl
push
rorl
mov
fcompl
mov
in
push
fcoml
cwtl
inc
fwait
adc
test
dec
mov
inc
imul
aaa
dec
fldenv
insl
data16
cmp
fcoml
xor
sub
fdivrs
mov
lcall
pusha
xchg
jl
loopne
dec
mov
mov
mov
push
push
call
enter
adc
fidivrl
fs
lret
lock
xchg
mov
in
xchg
imul
pop
xchg
cmp
push
dec
xor
pop
mov
sub
push
cmp
bound
and
jae
fwait
or
sbb
push
jns
std
sub
das
test
jle
mov
mov
cmp
sahf
xchg
cwtl
fnsave
adc
repz
popa
mov
in
xchg
inc
mov
push
or
js
outsb
cmp
imul
arpl
and
jne
mov
jae
aaa
sti
adc
in
xor
flds
xchg
repz
mov
push
cli
lock
fwait
mov
mov
stos
lret
xchg
pushf
nop
push
shlb
bound
pop
adc
sub
add
push
shll
mov
xor
out
adc
fcoml
sbb
ljmp
mov
and
mov
adc
dec
icebp
ret
imul
push
inc
int3
stos
roll
xchg
pop
fisttpll
les
or
aaa
ljmp
xor
in
push
mov
popa
push
inc
shrl
sub
xchg
mov
mov
jnp
inc
mov
orl
movsb
lock
or
scas
inc
dec
popf
js
sbb
push
jno
sbb
imul
scas
adc
hlt
jl
lock
and
leave
pusha
cwtl
dec
pop
std
dec
mov
adc
pop
mov
jg
mov
jl
outsb
imul
dec
mov
pusha
aas
pop
repz
mov
cli
adc
mov
sbb
sub
pop
cmc
imul
lods
pop
fisttps
bound
bound
arpl
addb
mov
iret
sbb
cmp
sbb
mov
ljmp
shl
movsl
mov
jo
call
cmpsl
outsb
mov
dec
jecxz
pop
test
and
pushf
mov
and
mov
ljmp
movsb
push
sub
cmpsl
loop
daa
mov
cltd
mov
idiv
cs
dec
rorl
mov
inc
fcmovu
sub
adc
out
adc
or
lock
daa
jecxz
test
shrl
faddl
in
pop
test
std
fsubrs
rolb
std
jb
psllq
lret
fisubl
dec
shrl
hlt
jbe
mov
sub
iret
pop
pop
mov
mov
pop
rol
pop
sahf
and
pop
xor
sbb
pop
jno
ficoml
push
fsubs
cmp
sbbb
push
int3
aaa
imul
loop
incl
and
icebp
cmp
es
xor
mov
mov
pop
or
mov
int3
cli
mov
xor
or
into
gs
mov
cli
ljmp
sub
add
dec
jne
push
int3
roll
aas
push
rolb
cmp
js
or
jmp
pusha
ret
cmp
xchg
xor
and
insl
xor
xchg
xor
push
out
pop
pop
mov
sti
pop
pop
fisubl
sub
xchg
jo
push
inc
fstpt
iret
or
and
adc
dec
dec
in
xor
lea
mov
cmc
loop
and
adc
addl
dec
ret
outsb
ljmp
je
xor
jmp
cmpsl
adc
mov
sbb
notb
push
lods
mov
arpl
and
push
inc
xchg
sub
jne
mov
xor
shlb
in
pop
adc
repnz
std
das
jp
fwait
loop
xor
cmc
das
dec
push
out
push
pop
mov
xor
add
dec
push
lret
sbb
ja
out
xchg
cmp
or
icebp
cmc
sbb
dec
xor
push
fildl
lret
push
or
push
mov
shlb
orb
jne
add
push
mov
inc
aad
adc
pop
les
dec
daa
pushf
nop
test
push
push
or
cmp
cmp
enter
and
or
dec
or
fstps
push
inc
mov
xor
push
out
jo
jge
add
test
pusha
push
push
mov
je
push
dec
sbb
mov
and
cmp
sub
shrb
xlat
fwait
loopne
mov
or
push
lret
mov
add
icebp
pop
mov
out
fcomip
mov
pop
jae
lea
jne
jle
shlb
adc
adc
in
je
aam
scas
dec
xor
xor
mov
mov
mov
aas
repnz
repnz
aad
sbb
movsb
cmp
and
cwtl
enter
jle
inc
xchg
jecxz
adc
dec
loope
xor
cmp
jbe
in
and
sarb
push
fdivrl
sbb
lret
in
or
outsl
enter
sub
aas
jns
or
stos
and
mov
push
jmp
inc
fdivl
jne
jmp
lret
jmp
inc
int
movsl
pop
aam
sub
fldl
or
lea
ds
xchg
fwait
outsl
pop
xor
add
mov
xor
xor
ds
pushf
xor
xlat
add
loopne
negl
cli
ss
repz
rcr
repz
in
mov
out
icebp
sub
or
dec
lods
lret
aad
stos
test
ret
loope
jge
shrl
fnstcw
jmp
mov
push
fnstenv
xchg
sub
flds
repnz
mov
pop
add
mov
xchg
mov
lods
ds
mov
jl
xchg
sbb
xor
js
jae
ljmp
movsb
insl
addr16
xor
xchg
mov
adc
jp
rorb
mov
in
add
leave
pop
inc
lret
aas
in
aaa
or
loope
sub
pop
movsb
mov
cmc
push
out
rorb
mov
lcall
sti
lods
cs
mov
lret
out
addb
fidivs
fcomi
push
mov
ljmp
xlat
scas
push
ja
sahf
jo
add
cltd
insl
les
movsb
cmp
outsl
mov
and
dec
mov
mov
sbb
fsts
mov
pop
lods
jo
fidivrs
sbb
mov
in
repnz
sbb
and
add
inc
jb
mov
inc
movsl
xor
add
jmp
in
sbb
stos
dec
out
arpl
xor
insb
rcrb
cmp
nop
jnp
xchg
mov
xor
pop
or
or
add
popa
pop
out
xchg
lret
push
push
shlb
movsl
cmp
pop
fldl
cmpsl
fs
add
out
push
xor
mov
gs
pop
imul
filds
xor
xchg
pop
mov
adc
cmp
je
inc
inc
movsl
pop
scas
and
pop
pop
mov
and
push
cwtl
dec
outsb
mov
jb
xor
int3
aas
lea
in
ret
cmp
movsb
mov
mov
sub
adc
sub
and
inc
or
arpl
movsl
jbe
push
test
cwtl
rolb
sbb
or
xchg
pop
out
pop
sbb
dec
outsb
sbb
adc
iret
lcall
mov
cli
mov
add
mov
inc
lods
repnz
inc
adc
pushf
fs
xchg
sahf
jle
lods
cwtl
test
xchg
scas
inc
mov
movsb
mov
enter
pop
shll
in
mov
cmc
inc
xchg
aam
add
dec
test
mov
subl
push
pop
arpl
mov
dec
ret
fnstenv
aam
ss
dec
cmc
mov
ret
mov
pop
xor
in
jno
pop
xor
pop
sub
outsb
add
jne
and
adc
add
out
cmp
mov
mov
mov
mov
int
mov
mov
imul
test
in
outsb
add
in
mov
clc
adc
ss
jne
pop
testb
and
outsb
push
stc
nop
push
and
in
jne
sub
adc
dec
leave
ss
shll
aam
xchg
mov
ret
sbb
xchg
dec
cmc
subl
xlat
movsb
cmp
dec
push
lret
push
sub
inc
cmpsl
insb
and
push
and
and
mov
std
popf
mov
sub
push
jb
push
ljmp
inc
shll
daa
neg
in
mov
call
movsl
pop
mov
or
mov
repnz
ret
xor
insb
leave
xor
mov
dec
filds
adc
or
rcll
mov
scas
inc
inc
popf
xor
push
mov
sub
fnstenv
push
or
add
mov
push
mov
fucom
je
lret
gs
ss
push
call
mov
jo
dec
stos
mov
and
out
add
jno
jge
add
xchg
sub
mov
jbe
mov
xor
enter
or
mov
dec
das
mov
mov
ret
repz
addr16
adc
mov
out
mov
adc
mov
sbb
push
imul
loopne
mov
push
xchg
lds
jl
dec
out
icebp
pop
insb
jae
sahf
cmp
sahf
clc
adcb
mov
push
movsl
dec
aam
mov
popf
es
ficoms
sub
out
js
mov
mov
ret
clc
push
popa
clc
xchg
inc
fmull
jg
rcl
arpl
add
pop
hlt
and
sbbl
jl
jbe
sub
push
mov
into
cmpsl
loope
and
inc
test
data16
fidivs
xor
arpl
scas
pop
imulb
rcr
stos
lahf
dec
jge
test
lret
xor
pop
popf
mov
repz
pushf
loop
loope
fimull
xorl
dec
mov
jne
loopne
lock
push
aas
js
dec
in
jnp
ja
lods
ficompl
insb
mov
push
je
push
scas
or
je
add
in
cld
mov
shrb
sbb
js
add
add
cmp
inc
cmp
in
dec
mov
cltd
add
xor
xchg
test
test
fisubl
daa
pop
mov
aas
imul
test
adc
loop
inc
jge
shll
sub
jne
pop
mov
js
jne
cmp
sbb
mov
jmp
cltd
das
ret
push
lahf
pop
sbb
add
add
push
mov
pop
imul
adc
and
imul
clc
or
xor
and
dec
aas
mov
stc
or
out
mov
xor
or
out
nop
jae
adc
rcrl
cwtl
lret
xor
xchg
xor
inc
lods
mov
cli
dec
and
ljmp
push
xor
add
jns
pop
int3
cli
mov
xor
xchg
jge
cmp
dec
hlt
outsl
inc
sbbb
fstp
pushf
in
arpl
fistpll
push
shll
es
jnp
jg
pop
mov
add
maxps
xchg
inc
js
mov
cmpsl
push
push
push
cmp
and
mov
and
mov
pop
testl
sbb
inc
imul
cli
int3
cld
pop
dec
daa
bound
sub
das
inc
clc
xchg
mov
push
sbb
dec
sbb
dec
out
negl
test
xchg
mov
sar
jo
cmp
hlt
xchg
rclb
filds
pushf
mov
popa
insb
adc
dec
clc
subb
into
out
outsb
loop
cmp
fisubrl
cmc
pop
add
mov
int
ret
xor
xchg
aam
shl
std
and
cmp
push
scas
enter
stc
es
lea
jnp
stos
inc
rcrl
out
mov
pop
mov
lret
stc
nop
mov
out
push
fstps
dec
ret
sbb
call
inc
sbbb
icebp
out
js
xchg
lds
jae
insl
movsl
inc
ficoms
int
mov
nop
sub
cld
xchg
xchg
lret
mov
pop
sub
mov
loope
shrb
cmpb
pusha
xchg
dec
loop
add
xorb
call
xchg
mov
movsb
adc
jo
xchg
decb
jo
push
cmpsb
cmp
cli
pop
pop
hlt
mov
mov
dec
cmp
lcall
and
fs
loop
jb
repnz
xchg
popa
jmp
pop
cmp
xchg
lods
lcall
movlps
iret
add
out
push
pop
rolb
sub
cltd
cmp
stos
dec
add
inc
mov
cmpsl
or
pop
cld
or
mov
sub
mov
sub
mov
movsb
mov
icebp
xchg
movsb
cmp
ds
lea
ret
xor
stc
sti
pop
add
ljmp
test
jno
push
mov
sarl
xchg
enter
cld
jb
xchg
cmp
arpl
in
sub
dec
adc
jo
push
orl
jne
clc
xchg
cmp
gs
cmp
loopne
cmpsb
sub
xchg
fnstcw
lea
test
push
outsl
cmc
cld
jl
push
shr
test
xor
cmp
pop
cmp
cmpsl
push
nop
mov
test
iret
jmp
cld
adc
rolb
add
mov
mov
test
pusha
imul
mulb
sub
lret
push
faddl
dec
inc
or
lea
jge
adc
push
int3
loope
sub
rclb
aas
mov
add
mov
gs
sub
mov
int3
inc
negb
fiadds
pop
pop
lret
sub
fmuls
loope
scas
out
push
or
outsl
sti
push
cld
mov
scas
jmp
lds
lcall
les
arpl
ljmp
fs
xor
pop
dec
sti
test
fwait
hlt
pop
or
xchg
cmp
arpl
loopne
shlb
sub
cmp
stos
jmp
adc
mov
pusha
loop
mov
lods
and
dec
or
push
fwait
jns
fadds
sub
mov
scas
pop
push
testl
sti
pop
lret
notb
nop
ja
rcrb
dec
fldcw
mov
pushf
scas
das
xchg
jno
nop
scas
mov
or
or
pop
mov
out
xchg
fnstcw
mov
fwait
cmp
out
bound
test
mov
dec
and
out
and
mov
inc
in
pop
imul
not
test
jl
mov
lods
dec
fsubs
mov
cmpsb
xor
call
repz
mov
shlb
std
pop
xchg
adcb
test
in
inc
adc
std
pop
clc
sbb
mov
call
dec
mov
add
and
test
cmp
lock
clc
sbb
and
sub
xor
xor
clc
adc
test
dec
stos
sub
cmp
adc
pop
notl
jae
xor
stos
shll
out
pop
adc
aam
dec
cmp
jo
imul
insl
sahf
cmp
dec
add
sub
pop
ret
push
xor
pop
sbb
or
loope
das
stos
std
sti
mov
test
mov
or
shlb
mull
int
mov
sub
movsb
imul
aas
pop
or
lret
and
push
sbb
cwtl
in
xor
and
mov
cmp
adc
jno
sbb
scas
mov
and
mov
pushf
push
jbe
inc
add
jo
dec
pop
je
iret
xchg
fistpll
adc
les
fdivrl
jle
dec
mov
jmp
leave
add
jp
sbb
sub
mov
lea
fidivs
jp
dec
adc
in
dec
push
jne
movsb
test
jb
xor
fwait
or
jne
lds
data16
outsb
cmp
loop
mov
scas
daa
fsubrs
mov
or
jae
inc
mov
adc
xlat
dec
push
imul
test
cwtl
imul
or
cmpl
sub
aam
mov
cmpsl
repz
popf
cmp
sbb
adc
push
inc
ja
lock
mov
jmp
mov
cmpsb
mull
sub
test
mov
pop
sti
test
data16
data16
movsl
daa
jns
hlt
mov
mov
lret
cwtl
ds
cmp
inc
lret
shlb
pop
ja
fnstsw
imul
mov
aas
dec
cwtl
shlb
mov
and
idivb
fnstsw
ljmp
adc
gs
lock
aas
popa
clc
pop
jg
cli
popa
jo,pt
pop
outsb
das
lods
xor
mov
test
xchg
jge
in
mov
popf
jo
bound
jno
sub
inc
cmp
notb
orb
or
cmp
sub
movsb
sub
les
mov
mov
dec
adc
cmpsl
or
icebp
xor
es
scas
fdivrl
inc
or
xor
nop
cmp
inc
movsb
sub
xchg
mov
mov
lea
in
mov
nop
cmp
test
and
leave
test
sbb
and
push
pop
in
cmp
das
add
xor
movsl
sub
xchg
mov
pop
add
mov
lea
out
mov
nop
cmp
test
jecxz
dec
and
test
ss
sbb
xlat
jnp
push
inc
or
xor
xchg
cmp
and
inc
aam
xor
int
cld
rcr
mov
mov
int3
test
xchg
cmp
sbb
lret
pusha
das
mov
add
jae
sbb
mov
in
and
iret
dec
cli
int
call
out
ret
call
and
mov
stos
test
inc
mov
mov
shrb
insl
lcall
pop
pop
sub
movsb
cmp
xchg
xchg
sub
sub
or
jns
and
xchg
xor
push
push
stos
sbb
jae
inc
adc
ja
push
xchg
mov
mov
mov
cmpsl
mov
repnz
pop
adc
hlt
gs
mov
sub
xchg
add
sahf
fst
adc
cmp
jb
mov
imul
lods
ret
jno
mov
hlt
or
gs
cmp
leave
out
cmc
lcallw
ret
in
insl
add
cltd
cmp
add
dec
test
pop
add
mov
loop
cmpsb
mov
movsl
pop
std
inc
and
mov
test
outsb
int3
lea
sbb
sub
jp
xor
repz
mov
sbb
mov
mov
mov
cli
sbb
inc
adc
loope
in
int
scas
enter
mov
xor
test
sahf
sbb
push
mov
test
cmp
in
hlt
bound
mov
es
stc
xchg
cmp
xchg
in
lret
or
je
popf
cmp
add
lret
popf
xor
jl
call
mov
popa
call
push
pop
push
inc
jnp
jmp
xchg
int
punpckldq
mov
pusha
dec
adc
jo
push
jge
jl
adcb
shr
jbe
sbb
in
cmp
call
pusha
or
mov
fldt
stos
ss
daa
test
and
xor
std
sub
cmpsb
in
cli
js
and
outsl
fwait
lock
lods
pushf
cmp
xchg
push
test
xor
loope
mov
cld
jecxz
inc
or
hlt
jbe
daa
incb
lret
pop
int
xchg
jno
lahf
push
testl
dec
insl
bnd
filds
mov
test
push
scas
stos
sub
jns
mov
mov
xor
sahf
pop
clc
or
sbb
mov
aaa
and
ss
push
mov
scas
pop
add
stos
mov
push
test
leave
sub
jo
outsb
loop
iret
in
pop
ret
sub
inc
or
fmuls
push
inc
and
and
insl
lock
xor
test
sbb
std
pop
scas
jno
lret
mov
xor
lret
xchg
sbb
dec
pmuludq
gs
jg
sub
jle
orb
loope
gs
dec
aaa
je
and
or
push
sti
xor
and
mov
movsl
sub
out
outsl
dec
inc
cmp
jns
cli
pop
icebp
outsl
push
jmp
repnz
out
add
push
push
xchg
inc
les
pop
cli
pop
pop
repz
orl
cmp
rolb
mov
mov
inc
adc
movsl
mov
pop
jnp
pop
clc
mov
scas
nop
shrb
jge
push
add
mov
in
push
imul
xor
mov
push
and
mov
push
enter
in
inc
pop
in
push
pushf
mov
into
aaa
icebp
mov
adc
aam
call
sbb
lahf
jne
jmp
ja
sbb
add
lock
push
inc
or
jecxz
push
pop
sbb
ret
xor
pop
sub
and
fistpl
and
out
sarl
xor
push
cmp
mov
jb
pushf
inc
and
outsb
in
fwait
xor
sets
adcb
lock
inc
iret
sbb
xor
hlt
jnp
das
stos
gs
mull
jp
inc
repnz
clc
pop
out
or
push
jne
mov
shrl
mov
cmp
aam
test
mov
cmpsl
arpl
or
cld
test
testl
and
and
push
mov
jns
lret
out
jae
jmp
sub
addr16
imul
mov
sub
sub
jg
xchg
mov
inc
adc
or
mov
ja
js
xor
xor
pmaxsw
insb
pop
pop
stos
sub
test
pop
lahf
imul
je
add
les
test
jle
popf
xor
and
xor
ja
out
je
data16
xor
mov
aas
inc
dec
daa
stos
rcll
push
out
mov
hlt
in
sbb
push
mov
in
jno
inc
dec
push
ret
add
lahf
adc
out
clc
in
jbe
xor
movsb
jl
push
push
dec
data16
pop
les
sub
nop
test
inc
into
xchg
inc
xchg
lcall
cli
lods
pop
hlt
fisubrs
sub
pop
ljmp
mov
lea
and
mov
arpl
in
testb
gs
sub
pop
cmp
ljmp
lahf
dec
or
lret
outsb
call
decb
aam
mov
or
insb
in
xor
hlt
mov
xchg
sub
push
into
ds
or
xchg
adc
and
fucomip
hlt
pop
incb
hlt
xchg
pop
out
dec
ljmp
sub
pushf
add
or
mov
inc
adc
rcl
jg
out
push
add
mov
and
xor
add
mov
dec
push
add
daa
mov
pop
mov
out
mov
mov
fdivrl
jle
es
mov
cli
stos
in
mov
mov
sub
xchg
sbb
xor
or
enter
aam
aad
scas
push
js
xchg
stos
aaa
xor
int3
push
jns
lret
pop
add
push
mov
add
jno
mov
pop
ret
mov
gs
mov
mov
xor
js
mov
dec
inc
or
push
mov
loop
dec
adc
imul
jne
aad
xor
cs
aaa
movsl
xor
jns
ss
sbb
xchg
sub
xor
jae
shrl
or
test
data16
sub
mov
jae
xchg
cmp
loop
jle
sub
sbb
icebp
pusha
dec
lret
jl
out
fists
in
addb
clc
repnz
mov
mov
jg
daa
lods
lahf
cmp
fidivrl
jae
lods
mov
movsb
pop
mov
adcb
out
sbb
jecxz
xor
ret
aad
mulb
or
jb
repnz
hlt
xor
sbb
jg
jnp
addr16
sarl
push
adc
mov
test
pop
pop
and
add
inc
je
xchg
mov
ljmp
es
mov
sarb
insb
adc
xchg
adc
loopne
pop
sub
xchg
dec
fldenv
pop
add
pop
push
pushf
adc
xlat
not
aad
add
fildl
xlat
jl
cwtl
aas
sub
pop
hlt
add
seto
lods
arpl
movl
push
sarl
inc
cs
sbb
movsl
inc
scas
out
jno
xchg
or
sbb
mov
fisubrs
ret
push
jno
outsl
lock
ficomps
jle
push
mov
addl
ljmp
gs
dec
xchg
int3
ljmp
in
or
in
ret
pop
mov
fisttps
nop
fldenv
mov
mov
jb,pt
cmp
jle
jmp
imul
repz
cmp
jnp
shlb
or
sub
cld
adcl
or
repnz
leave
mov
cmpsb
loop
movb
xchg
negb
push
jmp
push
mov
insl
mov
mov
aaa
sahf
mov
mov
pushf
pop
dec
xchg
cmp
push
jns
out
xor
mov
sahf
pop
add
push
cmp
call
cld
or
cs
ret
cmp
add
sbb
mov
mov
sarb
pop
adc
xchg
and
arpl
ret
mov
pusha
icebp
pop
mov
bound
aad
clc
lret
icebp
and
xor
and
mov
inc
xor
addr16
jnp
shlb
dec
sbb
test
xchg
stos
sub
mov
ret
lods
mov
mov
lods
mov
pusha
add
nop
mov
mov
lods
lcall
jne
stos
movsl
jae
mov
xor
flds
dec
lea
sahf
call
decb
pushf
xor
bound
xor
jne
push
jp
mov
orl
push
ds
push
sub
or
jbe
pop
popa
lock
mov
push
nop
xchg
inc
xor
mov
aas
fldl
adc
dec
or
pushf
xchg
and
jns
insl
repnz
jo
sahf
in
sub
xchg
jle
add
add
gs
rclb
pop
hlt
addr16
and
js
loope
add
outsl
push
inc
cli
bound
mov
push
ret
outsb
xor
adc
arpl
jle
fidivl
sub
push
orl
mov
outsb
movsl
xor
mov
pop
cs
jp
cmp
in
jecxz
ja
hlt
mov
sub
dec
cmp
pop
outsl
cmc
iret
and
jecxz
cmpsl
sub
icebp
les
movsb
in
jecxz
mov
iret
jne
cwtl
inc
push
bound
xchg
shll
or
push
jns
jno
lahf
jo
sbb
mov
pop
adc
mov
fsubp
add
or
xchg
mov
cmp
push
add
and
cld
pop
ja
mulb
jo
in
jl
mov
add
pusha
ljmp
rclb
mov
mov
je
inc
and
push
icebp
xchg
sub
je
les
mov
mov
cmc
cmpsl
in
mov
into
jge
insl
inc
sbb
adc
lahf
std
pop
mov
movsl
or
arpl
sub
inc
inc
mov
xchg
lea
movsl
mov
fnstcw
shlb
mov
hlt
insb
jmp
lods
mov
xchg
cs
or
xchg
ret
xchg
xchg
out
jno
dec
inc
or
mov
rclb
in
fadds
push
shrb
ss
add
jge
imulb
mov
out
cltd
aaa
sbb
into
mov
inc
cwtl
cmp
pop
push
push
leave
jecxz
mov
lods
daa
pop
mov
jg
out
imul
and
movsb
cs
jbe
imul
sub
xor
loop
test
cmpsb
es
xor
xlat
xchg
push
data16
xor
mov
rorl
push
push
cld
adc
inc
enter
test
ljmp
fiadds
xchg
cmpsl
sub
xchg
cmp
cmpsb
dec
or
jle
enter
outsl
adc
in
jne
int3
gs
movsb
xor
jge
gs
fdivl
cmc
in
andl
jp
cmpl
xor
inc
out
sbb
jmp
xor
repz
shrb
xchg
mov
sarl
movsl
sub
test
sbb
push
fisttpl
mov
add
inc
mov
pop
cld
dec
test
cltd
cmp
sahf
inc
adc
pop
mov
insb
stos
mov
cmp
loopne
mov
insb
rcl
or
push
cmc
pop
sbb
adc
and
cmp
aad
lea
adc
das
mov
push
push
shll
testl
aam
cmpsl
sub
or
iret
and
cmpsb
pop
xor
mov
inc
std
xchg
inc
test
mov
popf
aas
popa
sbb
fldl
push
lret
bound
adc
lods
lret
sti
into
and
lret
jbe
outsl
repnz
arpl
lret
dec
adc
pop
cmpsb
sub
out
imul
test
sbb
pop
or
push
lea
iret
mov
pop
arpl
sub
and
xor
mov
xor
mov
mov
rclb
push
push
mov
dec
xchg
sub
dec
mov
add
push
ljmp
jno
mov
adc
push
add
mov
mov
inc
adc
inc
push
mov
data16
imul
dec
mov
cmp
in
xor
jae
das
aas
movsb
popf
pusha
aad
and
inc
or
xor
adc
inc
pop
push
inc
popf
inc
test
in
sbb
idivl
fldl
inc
mov
add
pusha
xchg
pusha
xorb
aam
lahf
outsb
or
repnz
test
je
pop
mov
jge
jmp
fldl
jle
dec
adc
mov
jmp
xor
push
push
mov
stos
popf
inc
ja
mov
cmp
sub
pop
sbb
mov
mov
mov
stos
push
ret
xor
in
fdivs
popf
mov
mov
dec
imul
inc
or
ret
mov
cld
popa
xchg
mov
pushf
inc
test
pop
add
jns
in
mov
test
sahf
fisttpl
aad
mov
test
xor
mov
pop
ret
push
add
nop
inc
sahf
xchg
adcb
cmp
adc
push
test
mov
mov
push
push
scas
xchg
aas
pop
inc
mov
mov
pop
or
jp
adc
ret
xlat
dec
lods
inc
jle
dec
loope
mov
popa
call
and
jae
sub
aam
aas
es
cwtl
xorl
cmpsl
sub
jo
mov
repz
lret
leave
sarl
ds
xchg
les
jne
pop
pop
cmp
stos
sub
scas
es
mov
outsl
push
sub
movsl
sub
push
fildl
es
mov
les
outsl
push
push
shrl
mov
mov
and
dec
adc
inc
or
inc
fiadds
pop
ret
xchg
cmp
lret
mov
pushf
inc
mov
test
scas
outsl
lock
es
jno
mov
xor
in
gs
mov
mov
lods
push
in
pop
cmp
sub
xor
and
es
lods
ljmp
cmp
mov
test
fs
dec
idivl
cmpsl
lcall
push
xchg
mov
negb
inc
push
mov
fiaddl
test
jae,pt
push
in
jp
in
hlt
test
inc
sti
rorb
push
jb
cwtl
xor
mov
jno
dec
or
sub
pop
add
xchg
pop
rolb
sarl
mull
scas
es
call
lcall
jae
rol
and
leave
sbb
push
pop
call
jb
jp
pop
inc
outsb
out
cmpsb
and
push
adcb
dec
loop
xchg
pop
repnz
cmp
add
pushf
sub
push
dec
cli
js
cmp
xlat
daa
pop
mov
and
or
mov
inc
jno,pt
jmp
sbb
sbb
xor
ret
push
je
adc
out
insl
lret
into
pop
adc
loop
inc
adc
mov
pop
mov
ja
adc
lock
stos
sub
lahf
aas
nop
inc
iret
les
adc
loope
xchg
xchg
inc
and
xchg
int3
arpl
fwait
inc
or
sahf
inc
mov
pop
add
xchg
mov
jp
ror
pop
test
jae
dec
pop
add
cmp
push
or
sbb
mov
jns
pop
insb
lcall
push
cmp
cmp
ds
add
mov
pop
andl
mov
lret
movsl
push
cld
hlt
mov
out
out
gs
cltd
out
js
inc
or
xchg
adc
aaa
inc
pusha
ljmp
pop
add
pop
pop
lret
sahf
faddl
xchg
adc
ss
push
adc
sar
xchg
and
orb
adc
pop
mov
dec
or
les
mov
mov
lea
lret
push
jmp
and
les
inc
or
out
mov
testl
lret
sahf
in
mov
ret
mov
nop
push
test
lods
sub
push
icebp
jmp
insl
mov
fwait
cmp
lret
inc
rcr
jp
mov
in
cli
movsl
loop
dec
loop
stc
stc
xchg
or
data16
xchg
dec
jl
fadd
xchg
xchg
sub
pop
stos
inc
dec
fnstenv
lock
pop
shlb
shlb
cltd
insl
cmp
xor
sub
and
outsl
dec
add
sbbl
lods
movsl
xchg
sub
shrl
orl
cmpsb
daa
shl
loop
pop
and
jg
es
imul
sbb
mov
sub
add
hlt
pop
inc
pusha
and
cld
mov
enter
mov
and
cmp
enter
push
dec
or
or
lods
push
testb
sub
pop
or
sbb
mov
cli
mov
sub
movsl
sbb
xchg
pop
sti
dec
adc
ret
pop
ret
addr16
sahf
cwtl
in
mov
lret
adc
xor
pop
add
or
inc
sbb
shlb
and
int3
negl
ret
popa
sbb
sub
jp
or
mov
pop
dec
push
in
mov
test
pop
add
cmp
das
int
inc
xchg
xor
jbe
iret
jl
add
mov
ret
hlt
lahf
xchg
cmp
in
sbb
shlb
jmp
cli
addr16
jle
scas
xor
dec
sti
mov
sahf
in
jne
inc
adc
xor
inc
push
cld
dec
cli
orl
pop
add
sub
pop
or
mov
lods
rorl
lret
mov
or
mov
sub
sub
xchg
inc
adc
dec
mov
adc
fdivr
dec
and
dec
or
cmp
and
stos
lods
daa
cmp
dec
jnp
call
inc
fnstenv
mov
sbb
adc
test
jmp
fs
and
or
pop
cs
push
mov
sub
add
push
std
nop
xlat
bound
inc
or
ja
push
in
lods
out
repz
pop
stc
dec
or
scas
sub
into
xchg
add
gs
sbb
jecxz
push
shll
add
jne
arpl
jl
out
cmp
std
ljmp
or
lret
test
std
inc
repz
test
mov
pop
add
lea
je
jg
shl
imul
inc
or
scas
xor
test
lret
or
jge
rcrb
sti
cwtl
push
orl
adc
pop
sbb
pusha
icebp
push
inc
cmp
mov
cmpsb
sbb
popa
aaa
inc
fldcw
mov
add
mov
push
inc
or
pop
out
stc
xor
xor
and
jae
push
inc
dec
jecxz
inc
pushf
push
clc
xchg
dec
adc
sarb
mov
mov
int
jmp
stos
push
rorb
pop
jecxz
mov
cmpsl
inc
paddusw
xchg
out
or
insb
not
sbb
aaa
mov
push
push
cmp
add
sti
cmp
cmpsl
and
lcall
aas
rcll
inc
roll
inc
stos
rolb
inc
inc
xchg
inc
popf
cmp
popa
mov
adc
cmp
mov
sub
aam
jno
sarb
lock
and
sbb
test
out
jl
pop
push
xor
and
mov
xchg
out
insl
cmp
mov
fdivrs
cmpsb
pop
not
push
sub
jl
mov
aad
in
jo
add
mov
add
xor
pop
cmpsb
push
add
rcll
xor
jnp
or
lock
nop
inc
call
hlt
adcl
jp
mov
mov
stos
test
rolb
out
mull
idivl
insl
nop
cmp
add
and
nop
inc
pop
mov
add
cmp
scas
movsb
dec
int3
xchg
jle
push
fwait
outsb
jmp
push
xor
push
push
jg
arpl
push
xchg
fdivl
mov
or
ja
hlt
sbb
out
jmp
pop
rcl
lcall
testl
push
pop
add
cwtl
fistpll
fdivrl
inc
pop
or
mov
xchg
pushf
lret
stos
test
mov
or
mov
xlat
and
aaa
mov
mov
mov
sbb
jmp
pop
clc
outsl
in
arpl
lea
shlb
lds
mov
les
pop
sbb
insl
ljmp
aaa
mov
dec
xchg
enter
xor
mov
jmp
ljmp
pop
cld
arpl
mov
push
mov
sbb
dec
add
push
movsl
cmpsb
inc
dec
in
je
xchg
jmp
mov
outsb
pop
int3
xchg
rolb
les
enter
mov
lods
nop
cmp
mov
sti
hlt
dec
ss
add
cmc
pop
jne
rorb
push
aad
mov
lahf
inc
dec
cmpsb
sbb
addr16
movsl
sub
mov
pop
add
add
mov
fstps
fbstp
push
cli
xchg
stos
jg
lcall
bswap
mov
roll
cmp
addr16
repz
in
and
outsb
mov
cmpsl
test
push
add
mov
loopne
insb
mov
mov
push
mov
rolb
mov
stos
movsl
xlat
roll
jge
in
je
lods
inc
xchg
jne
lea
mov
cmp
inc
xchg
fsubs
xchg
inc
push
jo
lcall
arpl
inc
cmp
inc
aad
add
mov
mov
das
xchg
fisubs
ud1
aad
mov
cmp
sub
mov
push
js
sub
scas
xor
jb
popa
cmp
sub
jecxz
mov
pop
mov
push
mov
mov
jns
addr16
fwait
cmp
sbb
cmp
leave
aaa
into
sti
pop
stos
inc
mov
cltd
pop
jl
nop
push
cli
xchg
pop
gs
sub
jnp
jne,pt
dec
adc
hlt
shr
aaa
es
push
sarb
xchg
sbb
jecxz
pop
xlat
subb
pop
push
cmp
in
push
jl
out
test
mov
inc
fistps
mov
loop
stos
xor
repz
cmp
pop
jmp
inc
cmp
fwait
inc
xchg
movsl
rolb
jp
punpcklbw
in
push
cli
std
icebp
xchg
cmp
ret
test
mov
xorl
cmpsl
les
sub
adc
inc
or
ror
adc
add
jbe
cmp
data16
push
add
sub
movsl
out
sbb
inc
out
fnstcw
mov
data16
imul
loope
cld
adc
stc
stos
xor
cltd
loope
leave
xchg
ret
hlt
adc
mov
scas
mov
adc
fsubrl
or
mov
mov
int
lds
mov
pop
subb
jbe
and
inc
stc
in
xchg
fwait
loope
lret
addr16
jo
js
int
cmp
jb
or
cmpsl
out
xorb
mov
vpsrlq
lret
add
or
jnp
sub
sub
fnstenv
jecxz
dec
adc
inc
xchg
fcomip
popa
icebp
stos
nop
inc
hlt
in
mov
out
mov
leave
adc
loope
into
push
sahf
cmp
adc
aaa
movsb
in
cmpsb
push
add
xchg
mov
aad
cmpsb
xor
mov
push
out
jmp
push
rcl
push
test
cld
push
pusha
or
xchg
adc
dec
es
ret
popa
repz
movsb
xor
xchg
jge
mov
ja
sub
push
cs
aas
jns
rclb
dec
stos
inc
jl
int3
arpl
mov
shrl
daa
mov
repnz
mov
enter
lods
sub
mov
mov
outsb
mov
aas
mov
call
icebp
sti
pop
mov
mov
imul
call
xor
fidivrl
mov
rclb
dec
lcall
dec
repnz
movsb
mov
push
fisubrs
rorl
jno
add
clc
pop
inc
push
xchg
adc
sar
inc
xchg
aaa
cli
ljmp
jbe
push
divl
and
or
sub
cmpsl
sub
jecxz
jns
add
jl
hlt
inc
or
rorl
scas
ret
mov
call
rorl
dec
out
outsl
cmpb
sub
out
xor
and
sbb
push
sub
pop
adc
inc
pop
add
or
shr
ss
mov
add
pop
movsl
loop
ja
xchg
cmp
dec
adc
lds
push
or
cmp
jb
pop
pop
sarl
mov
push
int3
adc
xchg
aaa
jp
lret
push
push
xchg
cwtl
fwait
aas
inc
repnz
mov
push
imull
mov
mov
dec
xchg
mov
scas
adc
call
cmp
ret
xchg
xor
xchg
or
ljmp
orl
mov
and
push
add
xor
inc
ficomps
pop
hlt
cmpl
stos
movsb
jnp
lret
sbbl
negl
cmp
mov
jl
rclb
aad
iret
div
repz
sbb
xchg
dec
inc
adc
popf
xchg
das
mov
cmp
out
out
in
adc
inc
cmp
imul
xchg
mov
sub
fbld
dec
cmp
lds
shrl
test
jp
mov
xchg
fadds
cwtl
or
movsl
xor
push
sub
xchg
lods
test
loope
into
pop
repnz
cli
push
adc
xchg
cmpsb
lahf
movsb
cmp
mov
stc
bnd
sbb
insb
dec
inc
loopne
ja
repz
rcll
bnd
mov
adc
movl
dec
in
pop
out
sarb
or
ds
sub
test
dec
mov
fcmovbe
addr16
out
cmp
add
mov
and
add
inc
xlat
das
and
pop
cmc
xorl
adc
leave
test
sti
cmc
lcall
dec
mov
pop
mov
ret
fbstp
out
hlt
mov
pop
xchg
dec
inc
adc
fwait
xchg
xor
les
in
mulps
inc
aaa
insb
add
ja
xchg
mov
sub
dec
cmp
pop
bound
imul
add
xor
and
test
aad
cmpsb
dec
loop
int3
pop
repz
clc
imul
push
dec
xchg
jge
cltd
xor
mov
div
ret
pop
and
insl
dec
inc
loope
jbe
hlt
mov
mov
sbb
enter
shrb
dec
out
mov
mov
loopne
push
adc
mov
cmp
xchg
sub
pop
stos
inc
popl
enter
shrl
add
jle
sub
xchg
add
movsb
mov
and
add
inc
fsubrs
dec
pop
idivb
addr16
cmpsl
mov
test
repz
xor
inc
mov
pop
mov
ret
hlt
in
cmc
mov
push
call
jo
sbb
enter
shr
jecxz
out
push
pop
icebp
aas
xor
js
xchg
mov
sub
or
cs
pop
pusha
pop
shrl
and
mov
aam
lcall
and
test
test
lret
sti
imull
sub
mov
jl
lcall
ret
mov
pop
and
xlat
outsb
dec
inc
loop
jne
cmc
mov
adc
sbb
xor
inc
cmp
imul
xchg
mov
mov
fidivrs
adc
lea
xor
inc
lea
pusha
loopne
shrb
add
jg
sub
xchg
popf
xchg
movsl
scas
cmpsl
and
fmul
sub
add
inc
fldcw
and
push
dec
pusha
idivl
push
adc
clc
icebp
pushf
xor
sbb
push
jbe
ret
pop
lahf
xchg
fsubrs
shl
repnz
inc
cmp
push
mov
xor
sarb
out
or
cmp
outsb
add
popl
xchg
loop,pn
stos
inc
or
dec
ss
pop
pop
push
aam
mov
jge
stos
repnz
rolb
add
adc
push
push
lds
mov
pop
cmc
cli
hlt
push
es
adc
inc
mov
jns
fwait
xor
ret
hlt
in
les
push
fsubrs
inc
loop
jb
testb
mov
push
mov
rdpmc
lret
cmp
push
mov
mov
fstpt
or
cs
sub
mov
lret
aam
imul
daa
lock
pop
sahf
test
movsl
stos
cmpsb
and
ret
std
clc
inc
fisubrl
pop
dec
loop
dec
popa
clc
jnp
imul
into
les
xor
sbb
push
je
les
xchg
fnstenv
mov
testl
insb
fs
mov
lea
lret
cmp
call
cmp
outsl
push
arpl
adc
scas
cwtl
das
loopne
stos
inc
or
mov
xor
leave
pusha
pop
push
aad
xchg
jle
test
mov
rolb
test
and
mov
jg
inc
fsubs
pop
idiv
repnz
sbb
dec
inc
mov
ja
pushf
xor
sarb
sbb
jecxz,pt
jo
testl
jmp
pop
mov
or
cmp
jmp
mov
fnstcw
or
xchg
cs
pop
lods
inc
mov
dec
mov
lret
fst
shrl
jmp
mov
pop
sahf
cmpl
stos
movsb
and
cld
testb
push
dec
jecxz
dec
popa
clc
jns
push
mov
ret
mov
cmc
in
popf
xor
pop
cmpsl
ds
inc
mov
pop
pushf
xchg
fnstenv
mov
testl
push
and
mov
fstl
push
or
cmp
outsl
push
popa
pop
jnp
mov
cltd
xor
aad
inc
pop
add
pusha
pop
push
insl
xchg
jle
cmpsl
hlt
mov
into
add
test
push
dec
xor
jge
inc
fldenv
pusha
div
lock
add
sbb
dec
inc
mov
jne
popf
xor
xchg
test
enter
lock
fidivl
cmp
jnp
gs
xchg
popl
cltd
sarb
mov
or
aad
pop
push
ljmp
jno
loope
jp
or
nop
daa
xor
push
scas
inc
mov
dec
scas
test
aam
add
ljmp
push
or
test
es
cli
hlt
inc
inc
stc
ja
imul
cwtl
adcb
rorl
sbb
ds
pop
lcall
jnp
in
push
lsl
push
mov
mov
fistl
or
pop
cmc
aaa
sub
jl
mov
lcall
mov
popa
pop
push
insl
test
jg
movsl
hlt
mov
int
popf
clc
adc
push
dec
xor
jnp
inc
fisubl
les
cmc
out
insb
add
pop
adcb
inc
mov
jae
sahf
xor
mov
pop
sbb
cmp
jnp
fs
nop
xchg
lea
cltd
mov
fbld
mov
or
int
xor
aad
pop
push
jmp
sbbl
jb
loopne
jp
pop
add
das
pop
push
scas
inc
xchg
dec
lods
test
fs
aam
add
jmp
cs
mov
mov
cmpsb
mov
cs
inc
fsubl
dec
in
inc
arpl
jbe
imul
xchg
sbbl
icebp
ljmp
inc
cmp
pop
cwtl
nop
mov
stc
nop
adc
ss
scas
addr16
and
mov
ficoml
or
cmc
xor
push
jl
mov
es
lcall
std
mov
bound
insl
cmpb
stos
mov
pop
sahf
std
notb
test
push
dec
xor
jns
inc
ret
stc
hlt
in
insb
add
push
sbbl
jno
lahf
ss
xchg
test
les
pop
pop
adc
jae
cmp
jnp
arpl
xchg
xchg
mov
cltd
mov
frstor
mov
or
into
cmp
ds
pop
push
in
mov
jae
jp
add
es
das
pop
push
mov
xchg
dec
stos
cmpsl
into
gs
aam
cli
in
subl
mov
or
movsb
lahf
sub
div
inc
frstor
sbb
dec
inc
fs
je
insb
add
mov
out
call
test
push
insl
fs
pop
xchg
mov
jae
mov
jl
loope
xchg
adc
add
cmp
sbb
mov
inc
xlat
loopne
push
jmp
add
xor
jb
pop
push
jge
xchg
daa
scas
cmpsl
fwait
xor
shrb
push
sub
dec
xlat
outsb
xorb
test
lret
sti
hlt
adc
dec
inc
xor
ja
inc
fsubl
shll
ljmp
inc
cmp
mov
inc
ret
push
in
jecxz
pop
adc
ss
push
mov
lcall
and
cmp
push
in
mov
hlt
mov
je
fst
jnp
add
xchg
sub
and
mov
test
dec
stos
movsl
into
xlat
lret
aad
std
clc
in
subl
hlt
mov
or
mov
les
cmc
out
inc
frstor
pop
dec
out
inc
fs
jb
insl
add
xchg
sbbb
mov
mov
inc
inc
cmp
pop
xchg
mov
jae
mov
jge
xchg
adc
add
scas
arpl
lea
fcomp
push
jmp
add
xor
jb
pop
push
jle
test
daa
lods
cmpsb
pushf
xor
into
scas
inc
add
mov
arpl
outsl
jg
ljmp
enter
repz
and
daa
mov
jbe
inc
fcompl
mov
outsb
add
inc
cmp
and
mov
inc
sarl
pop
adc
fnsave
out
addr16
sti
xchg
xchg
mov
mov
fisubl
mov
ss
xlat
pop
push
push
in
mov
cmc
scas
test
jl
add
xchg
sub
and
xor
mov
xorb
test
lret
cld
imul
subl
cmc
mov
or
mov
ret
xor
hlt
in
inc
fstpl
push
push
out
aas
fs
jo
outsb
add
ret
mov
mov
inc
inc
aaa
mov
pusha
xchg
mov
jae
mov
jle
xchg
wbinvd
push
popf
cmp
sbb
mov
inc
aam
jmp
add
xor
jb
pop
push
jg
test
daa
stos
movsl
popf
xor
int3
scas
inc
clc
mov
fs
dec
fnstenv
jae
andb
or
and
sub
je
inc
fstpl
fs
out
out
push
sbb
sbbl
cmp
cmp
mov
push
call
or
jne
xor
jle
pop
cld
xchg
popl
sbb
or
cmp
xor
inc
fcomps
push
out
xchg
lods
cmpsl
jne
fxch
jge
add
xchg
sub
dec
mov
xorb
cmpsl
mov
xlat
outsb
cli
hlt
in
test
sbb
lea
or
mov
shll
bnd
ficomps
push
call
outsb
outsw
push
cwtl
popl
and
loop
cmp
mov
popa
xchg
mov
je
mov
jg
xchg
or
sbb
mov
inc
fcmovu
rclb
add
popa
clc
das
and
jg
cmpb
stos
mov
scas
inc
std
idivb
gs
dec
fnstenv
jb
andl
mov
and
sub
dec
inc
xor
jb
inc
ficomps
mov
outsl
push
pop
je
and
bound
inc
mov
fmulp
pusha
adc
fbstp
xor
jle
pop
std
xchg
mov
mov
and
xor
inc
fcomps
pop
out
test
imulb
int3
jge
stc
xchg
sub
and
jle
mov
addr16
fsubrs
repnz
test
testl
sahf
xchg
sub
enter
lock
push
jmp
insb
fs
xchg
lea
jmp
or
push
gs
lret
bound
mov
and
cld
xchg
or
sbb
mov
iret
scas
test
push
in
add
stc
sub
dec
adcb
jbe
sub
leave
mov
sti
hlt
mov
dec
inc
fidivl
jo
test
ret
or
push
push
sub
inc
aas
xor
jo
dec
fistps
mov
jo
adc
mov
xchg
mov
in
lret
pop
loopne
cmp
call
xchg
mov
sbb
and
add
es
fsts
pop
lock
test
lret
cld
notl
xor
dec
mov
jl
mov
push
div
out
xchg
sbb
movsb
je
push
lods
pushf
xchg
sub
mov
dec
loopne
adc
inc
cmp
push
jno
xchg
mov
es
mov
inc
cmp
rcrl
int3
arpl
scas
ljmp
add
mov
pop
push
daa
mov
lods
cmpsl
inc
into
push
out
stc
arpl
sub
jbe
push
dec
sbbl
cmpsb
sahf
lahf
ss
mov
stc
icebp
mov
push
jbe
out
xchg
rorl
sbb
ret
inc
cmp
int3
insl
dec
loope
mov
mov
loopne
or
or
es
movsl
cmp
xchg
pop
jecxz
lret
bound
add
jmp
xchg
mov
sahf
mov
push
mov
shll
shrl
and
ficoml
pop
icebp
xorb
cmpsl
mov
jg
cli
hlt
xchg
sub
dec
inc
mov
jns
mov
imul
in
lock
push
stc
nop
dec
inc
push
movsl
jno
pop
scas
lcall
int3
in
in
loope
push
push
jmp
ss
or
mov
daa
in
movsb
cmp
cs
pop
int
mov
jmp
xchg
push
add
mov
pop
push
sub
stos
movsl
inc
fst
lret
pop
out
cld
mull
push
ja
push
dec
sbbb
jno
sub
pushf
mov
dec
imul
mov
imul
lock
mov
sbb
inc
cmp
int
arpl
xchg
mov
mov
add
fidivs
adc
mov
cmp
nop
daa
arpl
mov
pop
loope
int3
arpl
add
jp
sub
sbbl
lahf
scas
test
mov
iret
es
sub
inc
fistl
pop
bnd
stc
movsl
lahf
jns
rol
adcb
repnz
cs
lahf
ss
inc
mov
ja
mov
push
rcr
bnd
mov
ds
outsl
sbb
sub
int
loop
loop
or
in
cmp
pop
jae
nop
xchg
sub
fisubl
inc
aaa
sub
into
mov
in
sbb
call
xor
sbb
mov
stos
mov
pop
lock
cmc
fs
es
js
push
inc
sbbb
jno
sub
int3
les
pop
sbb
push
inc
fdivl
imul
popf
xchg
cli
xchg
lds
sbb
inc
cmp
int
arpl
mov
mov
add
fdivl
push
or
daa
popa
pop
cmpsl
mov
lds
int3
arpl
add
jnp
sub
sbbl
or
fxch
es
sub
inc
fcoml
pop
repz
arpl
mov
les
das
and
mov
dec
jbe
mov
imul
fdivl
ljmp
inc
cmp
sbb
shlb
jecxz
or
cmp
push
gs
je
mov
xchg
sub
fldenv
dec
xor
push
iret
data16
jns
test
add
cs
sub
xorb
test
inc
leave
pop
icebp
cli
repz
and
jns
dec
inc
sbbl
outsl
xchg
mov
ret
hlt
jmp
push
sbb
fnsave
repnz
mov
sbb
inc
ss
into
addr16
dec
in
mov
mov
fidivl
or
mov
cmp
test
mov
pop
int
add
es
pop
push
add
stos
cmpsb
and
cld
clc
aas
sub
inc
fisttpll
pop
hlt
jnp
fs
mov
ret
hlt
out
cltd
xor
push
mov
dec
je
mov
insb
mov
repz
adc
xchg
inc
cmp
test
arpl
mov
lea
mov
fisttps
adc
push
out
cmp
imul
pop
jne
mov
sub
xlat
cmpsl
or
mov
xor
lds
shlb
jge
jp
cmpsl
out
test
rolb
cwtl
add
or
sub
pop
mov
dec
sub
jle
cmp
pop
repnz
icebp
data16
and
jp
dec
inc
test
jne
cwtl
das
lahf
xchg
mov
dec
bnd
aad
inc
cmp
jne
repz
xchg
sarl
mov
or
cmp
gs
dec
in
xchg
mov
insb
add
fdivs
add
xchg
sub
test
inc
mov
pop
fst
into
gs
in
xor
add
test
lret
jl
sbb
nop
js
scas
xchg
cmp
sub
mov
sbb
insl
xor
out
inc
andb
push
aam
aad
mov
inc
in
pushf
mov
pushl
fldcw
jmp
lret
fcmovu
cmp
push
dec
loope
push
les
xor
pop
gs
lods
add
mov
jecxz
adc
dec
out
stc
cmpsb
pop
push
cli
sahf
mov
or
push
push
sbb
or
xor
pop
fdivrs
subb
sbb
mov
mov
inc
xchg
mov
int3
mov
aas
ficoml
or
stos
mov
sbb
mov
mov
pop
in
push
or
xchg
xchg
push
out
int3
call
add
and
pop
push
dec
subl
das
pop
cmp
loop
inc
sub
sbb
pop
or
jns
repz
out
jecxz
mov
adcb
sti
xchg
rol
ja
mov
pop
imul
in
add
data16
xchg
mov
xchg
push
dec
add
push
jl
in
sar
testb
es
add
dec
inc
inc
out
nop
add
fisttpl
inc
insl
iret
mov
cltd
clc
lcall
cmp
fmul
dec
jo
rorl
and
pop
pop
pop
jo
xor
jnp
dec
loope
loope
dec
inc
xchg
add
xor
in
enter
ja
ror
pusha
test
or
das
mov
sbb
jae
or
fisubl
fnstsw
lea
sahf
inc
in
push
cwtl
iret
mov
daa
rcrl
and
aaa
jnp
inc
mov
pop
loopne
inc
leave
mov
jle
ficomps
stos
mov
sub
xor
lock
fisttpll
scas
out
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
mov
mov
xchg
fildl
sbb
add
ret
stc
movsb
sbb
scas
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
jecxz
test
inc
cmpl
das
ja
mov
mov
pop
add
je
ja
cmp
or
pop
xchg
mov
jg
