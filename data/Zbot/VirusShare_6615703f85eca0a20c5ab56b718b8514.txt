in
inc
adc
and
fstpt
std
cmp
inc
loope
cmc
out
sub
andb
incl
leave
sti
jle
xor
rcr
cli
gs
mov
sbb
dec
inc
jmp
lret
das
dec
jnp
mov
mov
pop
sub
jnp
fucomi
lahf
leave
xchg
decl
or
sub
mov
dec
jne
fdivp
daa
in
js
adc
jo
pop
lcall
or
enter
lret
stos
dec
push
sub
fbld
sub
loop
cwtl
call
mov
faddl
cmpsb
loop
fisubs
ss
outsl
xchg
inc
dec
cmpsl
repz
inc
push
loopne
jb
add
stc
or
bound
inc
loope
cld
adc
mov
pop
sbb
fstps
and
cmpsb
xor
dec
pop
test
aas
dec
pushf
pop
push
xor
cmp
mov
pmaxub
aam
or
test
lcall
sahf
icebp
int3
jo
or
iret
mov
imul
arpl
dec
mov
lods
add
ljmp
repnz
scas
adc
imul
jg
movsb
subl
jmp
movsb
inc
add
mov
fstl
push
mov
inc
or
clc
dec
lcall
or
ja
pusha
cmpsl
aaa
jmp
incb
push
jb
lds
arpl
jmp
sub
mov
xor
xlat
rdtsc
and
add
sbb
dec
aaa
push
enter
xchg
call
bound
xchg
mov
push
fisubrs
push
outsl
and
dec
out
jno
mov
dec
sbb
pop
cld
jg
imul
and
loop
hlt
fisttpll
mov
mov
dec
xchg
cltd
imul
sub
pop
jl
pop
xor
addr16
cs
jge
or
fcomip
call
jecxz
lock
icebp
inc
scas
and
inc
ret
ret
stc
nop
mov
cli
jl
mov
incl
inc
sti
xchg
dec
nop
dec
mov
adc
ljmp
mov
pop
xchg
out
ljmp
add
je
or
mov
into
popf
in
imul
lret
or
ljmp
xchg
ror
xlat
pop
xchg
test
out
bound
dec
cmp
adc
out
ljmp
decl
insb
movsb
ds
lock
cmpsb
insl
movl
mov
xchg
mov
jg
ficomps
sbb
push
cld
pop
dec
or
push
shlb
das
clc
lcall
insb
addr16
xchg
dec
adc
mov
movsl
lods
push
vpsrad
add
sar
ljmp
nop
shll
sbb
addl
jns
mov
test
jae
outsb
lock
decl
stos
jl
mov
test
add
sbb
mov
fs
jp
stos
in
inc
xchg
adcb
sub
movsb
jno
inc
js
scas
xchg
aad
movsl
jl
loop
mov
adc
dec
scas
repz
arpl
adc
nop
push
sti
add
call
dec
sub
test
aam
ret
stos
adc
insl
jmp
mov
mov
sub
in
outsb
push
add
and
push
iret
jb
std
or
push
cmp
mov
in
sub
pushf
fstpl
cs
jp
repnz
cmp
test
pop
insl
or
add
push
lods
subl
call
cmc
cmp
rcl
test
dec
inc
mov
clc
leave
ljmp
cld
mov
icebp
test
sub
sub
xor
mov
mov
sbb
cmp
cmp
adc
stos
hlt
adc
iret
idiv
mov
push
ret
arpl
setle
pop
iret
push
or
adcb
hlt
pushl
xor
and
mov
test
or
mov
lds
int
decl
aas
jnp
std
out
dec
in
mov
mov
adc
movsl
and
jmp
lods
inc
mov
xor
add
fstpt
fwait
dec
dec
loope
dec
std
xchg
dec
icebp
mov
pop
adc
icebp
sbb
jae
test
xchg
aaa
mov
adc
pushl
adc
dec
xor
pop
fbld
outsl
dec
fidivl
adc
adc
lahf
mov
leave
scas
add
or
jb
hlt
ljmp
xchg
popa
dec
mov
mov
loope
xor
push
or
inc
xchg
std
jns
or
pop
iret
cld
sbb
mov
movsb
fimull
loop
xchg
xor
incl
mov
mov
dec
push
fldenv
nop
xchg
gs
incl
add
and
test
push
sub
sbb
push
ficomps
inc
lock
dec
jbe
jns
in
decl
pop
dec
mov
imul
test
push
add
insl
inc
add
xchg
pop
mov
or
mov
in
xchg
xchg
jmp
pop
push
sub
iret
subb
movsb
shrl
fprem1
pop
and
sbb
cmp
push
shlb
inc
pop
fimull
ficompl
push
lock
incl
pop
nop
leave
sub
out
cmpsl
dec
xchg
sub
mov
pop
jbe
call
lahf
ljmp
pop
push
or
out
lds
arpl
sub
addr16
ljmp
xchg
in
dec
cmp
dec
test
jno
nop
jne
dec
insl
xor
xchg
inc
push
std
decl
push
fucomip
and
jbe
push
xchg
mov
divl
cmp
aas
adc
iret
jl
push
sub
lahf
ret
mov
mov
jno
push
fs
sub
push
jecxz
loop
sti
in
jle
andl
inc
pushl
dec
popf
out
lret
dec
stos
shll
aad
jecxz
fiaddl
fmull
pop
fildll
jno
push
mov
rcrb
cmp
xor
test
sub
enter
insl
loopne
dec
sub
pop
mov
mov
jmp
lcall
idivl
push
ja
sub
dec
aad
aaa
in
cmc
test
lods
pop
outsb
sarb
jmp
mov
xchg
movsb
clc
mov
pusha
jmp
sub
js
int3
and
dec
jns
lcall
mov
adc
es
jo
rorb
inc
pushf
inc
mov
jmp
call
jb
out
or
test
lcall
xor
push
xchg
cwtl
xchg
call
out
push
js
ja
aaa
jp
sub
fincstp
or
imul
lcall
ljmp
loop
movsb
cli
xchg
push
xchg
leave
push
mov
lret
icebp
xchg
aad
dec
push
cmpl
jmp
icebp
fcoml
loop
ljmp
jmp
dec
imul
push
mov
call
clc
cli
jns
inc
push
out
xor
xor
xchg
lods
cmpsl
aas
iret
mov
adc
cmp
call
aaa
flds
xchg
lahf
pop
data16
gs
adc
hlt
data16
mov
ret
test
mov
fdivl
lock
or
in
jl
jo
lock
sti
stos
lret
push
jg
leave
es
fadd
je
outsl
and
aaa
sahf
mov
push
or
out
fcomps
movsl
adc
jns
push
mov
fdiv
xchg
lods
adc
into
or
cmp
loopne
push
test
pop
lretw
mov
fiadds
and
lcall
clc
pop
xor
enter
and
add
push
pop
enter
movsb
std
xchg
lret
mov
xchg
xlat
jg
jo
xchg
add
jge
enter
jmp
jb
jmp
push
loopne
lods
insb
std
inc
xor
test
and
mov
sbb
sbb
call
cmp
arpl
jne
mov
add
mov
xor
ret
inc
mov
idiv
lcall
push
sub
jne
in
lret
jo
mov
ss
push
scas
shl
mov
cmpsl
fdivr
jmp
daa
out
cltd
push
mov
hlt
aad
mov
sub
mov
xor
jmp
sbb
std
in
jg
mov
std
inc
aam
leave
push
xor
out
cli
and
add
fdivrl
sbbl
mov
sbbl
sbb
outsb
jmp
sbb
push
jo
xchg
stos
sub
lock
stc
cmpsb
mov
das
mov
inc
inc
lcall
lret
ss
sub
sub
pop
into
cmpb
xor
icebp
and
pop
cmc
aas
push
mov
mov
ds
mov
test
lcall
dec
sqrtps
daa
lahf
sub
into
jo
mov
or
icebp
mov
out
or
add
ljmp
sahf
lea
insb
push
add
mov
out
mov
push
and
push
add
sbb
cmc
dec
fdivr
cmp
scas
mov
sahf
sti
dec
les
mov
call
fistps
sub
push
lret
sub
sahf
cmp
out
insb
cli
cmp
cmp
xchg
xchg
daa
xor
iret
pop
xlat
insl
adc
xlat
or
inc
sbb
push
xchg
jmp
and
mov
cmp
jb
adc
in
aam
loop
sub
mov
int3
pop
fdivr
jg
mov
insl
test
inc
outsl
repz
add
mov
lahf
call
cmp
add
dec
or
add
mov
lods
repz
js
ds
xor
push
mov
or
fsubrl
dec
cmpl
cmc
mov
jg
decl
jl
xor
std
call
aam
rcrl
clc
mov
out
addl
hlt
inc
cli
push
mov
sbb
sub
pushl
cld
insl
inc
mov
test
inc
cld
cltd
sbb
fldcw
js
xchg
lcall
cwtl
mov
cmp
xlat
sarl
xchg
sbb
xchg
or
decl
lock
fs
js
lret
pop
out
repnz
icebp
sub
pop
fdiv
dec
push
out
add
call
adc
ljmp
and
lods
add
push
rsm
call
lods
jg
inc
add
xchg
dec
daa
test
adcl
ja
mov
out
pop
jg
decl
inc
mov
data16
test
in
mov
lahf
gs
or
push
jl
push
mov
cli
pop
inc
pusha
jl
xor
mov
into
addr16
jb
incl
cmp
rorl
pop
push
ret
cmpsl
xchg
jb
jge
pop
addr16
mov
mov
outsl
jmp
adc
sbb
and
orl
dec
std
push
adc
mov
push
sbb
add
xchg
imul
sbb
jp
popf
movsl
sbb
stos
dec
lcall
push
jge
loop
sbb
stos
aaa
subl
out
push
pushf
adc
das
nop
and
jo
out
cli
call
fldenv
rcr
xchg
xor
or
sub
dec
jbe
mov
psubw
or
mov
dec
jns
fstps
jnp
push
inc
mov
and
mov
and
pushl
xchg
repz
xor
adc
xor
jmp
aad
xor
xchg
sub
adc
loope
and
arpl
dec
and
sbb
inc
lcall
sbb
outsl
imul
push
ljmp
hlt
and
dec
sbb
xchg
cmp
lret
push
mov
test
mov
dec
das
inc
in
mov
call
cltd
jbe
popf
sbb
mov
and
xchg
repnz
mov
and
ret
dec
fbstp
outsb
jg
adc
push
into
iret
add
mov
lods
fidivl
fmuls
xchg
ds
cmp
inc
cli
mov
rclb
cwtl
inc
loop
insb
test
call
mov
adc
movsl
sub
sub
test
inc
loope
pusha
xchg
stc
iret
pop
lea
jg
pop
std
sbbb
shr
pop
sbb
push
mov
incl
jo
cwtd
mov
in
push
pop
loopne
rorl
mov
loopne
fmull
mov
mov
push
sbb
push
nop
dec
mov
sti
les
ss
in
nop
push
loop
xchg
fiadds
call
jg
lock
pop
repz
popa
mov
pusha
nop
cmp
ds
cmp
pop
in
pop
add
outsl
das
lds
inc
mov
sub
sub
es
movsb
inc
cmp
mov
mov
ljmp
xchg
pop
leave
and
data16
push
or
movsl
cltd
in
in
repnz
xor
mov
xchg
lcall
pushf
or
aad
xor
pop
ret
pop
mov
gs
fnstcw
cmc
sub
shrl
insl
add
phaddsw
dec
inc
pop
lock
inc
sti
pushl
cmpsl
cmp
jae
inc
jbe
push
push
xchg
mov
js
jg
xchg
and
cmp
mov
in
xchg
fistps
shr
xchg
out
aam
sub
jbe
pop
jmp
inc
pushf
xchg
aad
xor
jae
out
shlb
cmp
ljmp
std
loope
jle
sub
and
pop
daa
andb
inc
fcmovu
sar
or
sar
pushl
lahf
fdivp
scas
sbb
push
sub
sbb
sub
decl
mov
jno
mul
cwtl
stos
notb
sub
xor
pushl
cwtl
outsl
adc
pusha
mov
add
jl
jno
fbld
andl
sahf
mov
push
ret
cmp
out
cmc
xchg
fnstcw
out
stc
jecxz
fcomip
pushl
inc
adcb
loope
mov
xor
movsb
adc
pop
ss
call
cmp
adc
jecxz
sub
dec
add
add
cmp
jmp
sbb
inc
add
cld
xchg
pop
out
fcmovnbe
sbb
lods
xchg
sub
call
cmp
clc
int
mov
jo
cmpsl
push
cmp
xchg
iret
in
je
sbb
lret
addr16
sbb
add
and
jp
jo
icebp
xchg
insb
push
incl
dec
jl
rol
sbb
scas
loope
and
lcall
jb
popa
int3
inc
loopne
decl
sub
out
or
xchg
sub
mov
stos
es
sub
jmp
rcrl
leave
pop
jae
cmpsb
jae
fimull
pop
adc
cld
insl
ljmp
sub
pop
push
pusha
mov
mov
sahf
outsb
sbb
ret
jp
adc
lcall
fidivl
aad
pop
out
dec
xor
dec
jle
pop
dec
cwtl
sbb
filds
add
mov
xchg
imul
mov
pop
ret
jmp
pop
repnz
lods
inc
pop
idiv
mov
and
cmp
aas
xor
cld
pop
sarl
ljmp
pop
add
push
and
add
mov
add
and
add
nop
inc
add
add
cmpl
int3
mov
mov
push
push
and
mov
add
enter
add
add
nop
inc
add
inc
push
add
add
add
adc
fsubs
orb
ljmp
in
sahf
ss
aaa
cmp
or
sti
cmpsl
add
xor
mov
out
mov
subl
std
mov
or
xor
ljmp
dec
add
loope
out
pop
xchg
xor
cmp
ficomps
push
insl
movsb
and
fwait
movsb
fbstp
std
dec
repnz
rolb
jnp
mov
xor
mov
mov
mov
add
call
adc
mov
add
call
pop
add
adc
inc
and
or
push
jmp
pusha
push
cmc
and
testb
or
push
add
or
fldt
ret
mov
mov
outsl
mov
and
add
clc
sbbl
lret
imul
mov
and
xchg
movsl
fidivrl
add
mov
mov
cmp
dec
cs
sub
pop
mov
add
test
mov
je
add
fnstenv
xor
and
std
mov
add
inc
dec
jne
ja
pop
add
or
add
pop
addr16
pushf
push
and
incl
cmp
xorb
js
mov
test
jne
incl
xor
loopne
xlat
adc
cmc
mov
lcall
mov
lret
jl
ljmp
roll
aas
mov
out
push
mov
iret
orb
dec
or
inc
push
push
mov
fdivrs
push
sti
rclb
dec
jo
lods
iret
sbb
loop
xchg
cmp
cwtl
loop
int3
pushl
subb
arpl
fsubrp
cltd
notb
clc
int
or
adcb
adc
cwtl
pop
pushl
imul
lods
or
sbb
pusha
pop
jmp
dec
idiv
iret
xchg
or
push
jecxz
mov
push
add
mov
mov
xchg
add
or
or
insb
mov
mov
stc
sub
inc
out
nop
scas
mov
push
dec
and
pop
xor
inc
jne
incb
jmp
inc
adc
mov
or
fwait
iret
fcomip
jmp
mov
out
subl
test
pop
mov
dec
testl
pushl
addl
sbb
pop
and
out
std
xchg
cli
adc
and
insl
jg
gs
loope
shlb
lahf
movsl
rol
pop
and
add
xor
incl
repnz
or
lock
das
sbb
cmp
int3
jae
stos
icebp
outsl
js
ljmp
adc
sub
cmc
call
add
lea
push
xchg
cmp
inc
in
push
stos
clc
out
clc
sbb
imul
mov
pop
arpl
xor
mov
add
inc
mov
popa
add
or
jmp
cmp
xchg
popf
insl
stos
mov
je
push
jmp
lods
out
aaa
fs
incl
arpl
rclb
mov
lret
inc
mov
sar
shrb
adc
pop
aas
loop
lods
xchg
lcall
movsl
jp
mov
loope
pop
cmp
push
mov
inc
into
dec
cmpsl
jnp
mov
and
push
subl
hlt
aas
xchg
adc
xchg
les
insl
mov
hlt
std
test
xchg
cmc
lcall
pop
xchg
adc
andb
pop
test
sbb
xor
or
leave
sub
mov
mov
fidivrs
jbe
lret
xor
mov
mov
stc
sub
sbb
and
call
jmp
repz
arpl
push
dec
xchg
pop
cmp
scas
out
mov
loop
and
call
insl
in
mov
adc
movsl
add
mov
inc
in
dec
adc
xor
push
fbstp
iret
inc
adc
mov
mov
add
or
test
sub
call
mov
jmp
insl
int
out
xchg
mov
push
ds
sub
mov
adc
add
pop
jae
dec
sub
aas
scas
stos
ljmp
inc
add
repnz
mov
or
mov
les
pop
ss
stos
test
cmc
xchg
xchg
mov
mov
js
hlt
pusha
insb
mov
pushl
daa
dec
sti
sub
add
mov
jns
out
outsb
fwait
inc
fistpll
push
sbbl
sbb
jmp
cmp
jnp
mov
and
fs
xchg
aam
push
xor
sub
nop
out
pushl
push
icebp
push
cmp
or
shlb
jecxz
enter
mov
in
repz
mov
in
loop
and
bound
std
jp
sbb
outsl
scas
clc
cmp
int
inc
outsb
aad
les
jecxz
jecxz
jp
or
cli
popf
call
adc
fcom
jg
mov
cmc
adc
jo
sub
aad
xchg
jle
dec
xlat
fmuls
decl
dec
xchg
mov
dec
js
or
pop
cmp
and
jg
xor
incl
punpckhdq
mov
push
xchg
mov
push
or
xor
inc
xor
xor
mov
movsl
sbb
negb
xor
outsl
js
push
sbb
outsl
xlat
movsl
popf
dec
jp
push
push
loopne
mov
sub
sub
jbe
mov
add
mov
xchg
adc
mov
ss
movsb
repz
insl
fisubs
pop
jg
dec
mov
cmpsl
int
fstps
scas
clc
repz
mov
pop
xchg
aad
fisttpl
mov
dec
dec
call
subb
pop
push
aaa
fwait
pcmpeqb
or
int3
mov
pop
in
lahf
fsubl
inc
into
pop
loope
or
pop
leave
mov
sub
int
sub
lcall
lahf
mov
and
int3
loope
xor
out
mov
out
imul
mov
inc
dec
mov
movsb
ljmp
scas
stc
mov
mov
add
pushl
fwait
push
sbb
mov
sub
lret
test
in
ljmp
add
shll
iret
xor
lods
xor
lcall
lcall
cmpsl
sbb
or
ret
sysexit
pop
inc
scas
cmp
outsl
mov
in
cmp
jecxz
xchg
bswap
mov
jg
jnp
xor
or
cmp
jecxz
sbb
shrb
lcall
into
je
push
fwait
add
inc
push
je
dec
sub
test
lds
loop,pn
out
cmp
mov
cli
xchg
mov
jmp
or
test
mov
cmp
fistps
faddl
arpl
daa
cmp
shlb
test
in
xor
dec
dec
xchg
incl
imul
clc
xchg
pop
cmpsb
mov
dec
out
into
les
mov
in
cld
xor
fnstenv
jbe
sub
out
fimull
xor
xorl
dec
divl
xor
out
je
and
je
xor
cld
incl
push
out
cmp
cmpsl
out
repz
je
jl
inc
dec
cli
mov
pop
into
decb
cmp
or
mov
into
je
push
inc
push
or
je
inc
fistps
push
lret
mov
mov
movsb
int
ss
cmp
mov
xchg
cmpsl
pop
arpl
dec
mov
out
mov
inc
mov
or
or
cmpsl
fbstp
outsb
iret
aas
in
fnstsw
lods
mov
mov
pop
fildll
sub
push
xor
retw
not
dec
sti
movsl
out
cltd
mov
add
pop
pop
stos
int
stos
push
sub
imul
les
push
scas
push
mov
sti
and
mov
idivl
and
or
push
ds
cmpsl
cmpsb
lret
das
pop
fmull
inc
xor
lcall
aas
sub
sti
sti
xlat
mov
push
sarl
pop
xor
inc
push
push
pop
xor
mov
sti
cld
mov
sbb
scas
enter
rorl
je
cmpsl
xchg
or
pop
les
xor
int3
xorl
jbe
cmp
xor
or
mov
jmp
les
adc
outsb
sbb
sti
push
dec
outsb
xlat
jle
mov
mov
les
cmpsl
outsb
xchg
fcompl
mov
outsw
sti
xchg
js
pop
inc
int3
adc
ja
pop
pushf
add
je
sbb
in
jno
outsb
adcl
lods
ds
add
sti
call
ret
or
pop
dec
dec
adc
or
cltd
sbb
scas
push
pop
xchg
lcall
xorb
push
iret
std
aaa
jae
pop
xchg
dec
push
iret
lret
xor
jp
dec
add
mov
push
xor
shl
std
xchg
add
dec
pop
ja
lcall
pop
faddl
push
push
inc
push
or
js
or
xlat
add
jmp
xchg
iret
rol
fcoml
clc
push
int3
decl
sub
xchg
jo
mov
pop
sbb
mov
std
loopne
fnstcw
or
in
jg
je,pn
push
decl
ficomps
add
lea
xchg
stos
mov
clc
mov
int
mov
or
pusha
pop
faddl
mov
addr16
ljmp
jle
aam
aaa
fbld
iret
add
fmull
ret
insb
cltd
cmp
cmpsb
push
lds
lods
dec
divl
mov
push
inc
mov
ljmp
inc
push
mov
pusha
fsubrs
dec
fmul
pusha
pop
fcoml
pushl
and
js
adc
push
or
lods
add
sbb
add
rcl
hlt
incl
fwait
lds
cmp
dec
adc
je
rcrb
mov
mov
xchg
inc
lcall
int3
inc
xlat
mov
push
std
outsl
inc
sub
mov
add
clc
xchg
inc
mov
adc
mov
xor
or
pop
lcall
cmp
mov
xchg
xchg
scas
mov
decl
ficomps
pop
dec
adc
mov
rcll
sti
addr16
dec
add
mov
das
call
je
shll
xchg
fwait
loope
sbb
jmpw
clc
test
lret
mov
mov
or
adc
test
inc
push
adc
push
imul
lret
insb
loop
je
test
test
add
push
dec
and
faddl
mov
lds
jg
daa
jns
shlb
fldt
mov
js
xor
je
test
pop
fstpt
lock
rcrb
push
mov
jl
cmp
rclb
es
push
xchg
aaa
jnp
mov
das
cli
jg
dec
cmp
push
or
ficoml
jne
adc
xchg
mov
inc
lret
pushl
loop
popa
stos
jp
cmp
jg
jg
popa
jmp
inc
fisubs
loopne
test
rcrb
mov
andb
nop
pop
aad
cmp
mov
and
repz
adc
sub
mov
call
xchg
mov
add
pusha
jne
ljmp
jns
dec
lcall
outsb
dec
cmp
popa
xor
pop
pop
pop
cmp
lret
dec
push
imul
js
outsb
inc
inc
xor
dec
push
xor
inc
push
jae
outsb
jae
dec
jbe
incl
push
jbe
push
fs
addr16
dec
ja
dec
push
insl
jp
ja
push
push
xor
push
inc
pushl
addr16
push
fs
dec
pop
xor
dec
xor
aaa
push
inc
jno
ja
push
push
pushl
dec
dec
outsl
aaa
imul
inc
imul
xor
dec
fs
addr16
dec
dec
clc
ljmp
imul
jns
inc
inc
jbe
jns
je
outsb
xor
addr16
jno
je
jg
mov
stos
dec
js
pop
jb
je
ja
bound
pop
dec
dec
insb
jno
push
lock
jo
xor
dec
outsb
inc
sbb
xor
mov
jg
push
incl
jbe
jo
push
insl
outsb
aaa
ss
pushf
imul
decl
jno
cmp
push
push
jo
outsl
jae
inc
xor
cmp
arpl
dec
imul
outsl
jb
into
push
dec
insl
arpl
inc
dec
push
push
in
xor
fidivs
jb
pop
popa
outsl
push
arpl
push
outsb
push
cmp
dec
dec
outsl
jns
inc
aaa
dec
dec
inc
jns
je
pop
inc
xor
jne
push
inc
jb
push
fdivl
inc
dec
pop
lock
push
gs
jo
push
xor
aaa
xchg
jp
outsb
jns
jl
in
call
push
push
pop
insl
insb
push
push
pop
insl
cld
push
dec
push
jb
fs
outsl
jne
aaa
mov
sub
ret
inc
add
or
add
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
dec
mov
ss
ljmp
aaa
call
xchg
add
fwait
aam
adc
push
pusha
cltd
add
add
push
mov
add
and
lret
add
xchg
addl
std
or
add
cmpb
adcb
je
roll
jg
movd
adc
sbb
push
addb
sbb
add
adc
test
rcr
in
mov
testl
or
psubw
push
idiv
adcb
sarl
sub
mov
mov
add
rcr
fistpll
or
add
stc
add
dec
cmpsb
cmc
inc
add
shrb
xor
sbb
inc
imul
inc
adc
add
push
inc
add
outsl
sbb
aaa
dec
mov
pusha
ds
mov
cmp
xlat
cmp
jg
imul
or
imul
std
jmp
mov
mov
sbb
aad
icebp
xor
jmp
adc
aaa
test
sbb
addr16
dec
repz
dec
sub
add
jecxz
jae
insb
xchg
jl
or
push
mov
cmpsl
mov
cmc
aas
loopne
pop
or
pop
add
or
sbb
cli
pop
add
std
xor
sbb
add
jmp
cmp
cmp
cs
xorl
out
adc
aaa
and
int
cmp
push
dec
jmp
pop
repz
add
lea
mov
xlat
cld
divb
pusha
add
push
lds
adc
js
out
mov
push
scas
jg
insl
pop
push
jnp
adc
add
ljmp
sti
xchg
xchg
sbb
lods
xchg
test
pusha
xchg
rcrl
xor
dec
sarl
std
rcr
das
pop
or
stos
arpl
imul
dec
jnp
out
int
cmp
push
popa
push
jg
inc
dec
shrl
jmp
sbb
loopne
das
sbb
cs
outsl
pop
cld
push
jl
jge
stos
mov
iret
push
lock
sbb
cs
sbb
dec
shll
addr16
pop
stos
cmpsl
cmpsb
imul
leave
fldcw
xor
and
sub
jmp
mov
inc
mov
add
cmpsl
push
mov
rcrb
dec
push
add
sub
fldcw
stos
cmp
loopne
arpl
sub
cltd
loope
cmp
and
pop
xor
push
adc
mov
push
fbstp
in
clc
shl
sbb
in
add
das
add
bsf
das
jle
sbb
pop
sbb
mov
stc
sbb
xor
sahf
leave
ret
test
shlb
addb
push
aad
vandnps
rcrl
xchg
sbb
mov
mov
cmc
or
add
pmullw
xor
ss
aaa
adc
mov
mov
mov
sbb
lea
jge
sub
fidivrs
or
add
mov
and
imul
jae
ja
data16
stos
mov
imul
cmp
pop
out
std
fldcw
ficompl
jg
jo
sbbl
imul
jns
pushl
shl
and
cmp
mul
add
mov
lahf
stc
iret
das
push
pop
mov
lock
stos
xor
add
inc
stos
push
inc
xchg
mov
in
xchg
push
test
mov
mov
dec
aaa
inc
aaa
jg
pusha
adcl
cmpsl
aad
cmp
dec
icebp
mov
or
xor
jo
cmp
mov
xor
sub
push
les
rol
add
xor
fcomi
mov
lds
or
jg
outsl
pop
push
rclb
dec
ret
sub
xor
jne
jnp
fsub
rcll
jo
xor
loopne
testl
stos
mov
push
loope
add
pop
cwtl
dec
jmp
add
pop
shlb
inc
decl
add
pop
outsb
pop
das
add
xor
jp
lret
call
testl
lock
imul
jmp
jl
mov
pop
add
xchg
push
sub
ja
lahf
aaa
sub
mov
lcall
inc
and
pop
pop
and
push
in
jne
or
fucomip
int
adc
loopne
popf
push
mov
out
mov
seta
outsb
les
dec
add
add
add
mov
adc
add
mov
and
mov
mov
mov
mov
je
in
shll
xchg
incb
icebp
push
push
push
push
push
add
inc
mov
push
push
push
push
rcl
xchg
add
add
stos
pop
xor
out
push
xchg
pop
fbld
out
xchg
adc
and
xchg
call
mov
mov
scas
cmpsl
cmpsl
mov
inc
fists
add
jo
add
in
add
adc
jle
push
xor
test
sub
mov
mov
dec
mov
add
fcompl
mov
add
sub
jae
pop
add
add
add
sahf
add
jg
jae
pop
pop
lock
mov
xchg
mov
sbb
je
sbb
push
xchg
sub
jo
dec
lcall
sbb
adc
add
mov
insb
pop
je
push
add
add
mov
add
add
add
xlat
mov
sbb
pop
data16
push
or
push
or
test
lods
or
ja
rorl
imul
rclb
adc
call
cli
xor
push
adc
sub
negl
sub
or
aam
and
push
aad
mov
test
rcl
pop
shrl
xor
iret
push
inc
add
fwait
mov
ds
mov
and
cmp
sti
inc
aam
add
jp
adc
rorb
out
sbb
pop
xor
cmc
hlt
repz
xor
std
cs
stc
clc
mov
add
in
jecxz
loope
out
add
push
add
call
mov
mov
cmpsb
movsl
movsb
mov
scas
scas
sub
mov
testb
negl
inc
add
xchg
add
add
sbb
sub
push
sti
in
add
add
aad
rcl
rorl
rcr
fiadds
sbb
lods
add
mov
decl
fs
push
add
inc
jl
mov
int3
mov
inc
out
mov
loop
es
data16
lcall
stos
enter
jecxz
cld
leave
fs
lcall
imul
xor
xor
idiv
xchg
clc
sub
cmpsb
mov
push
sub
leave
xchg
adc
rcrb
add
mov
push
fcompl
mov
jle
scas
cli
sbb
push
scas
mov
pushf
jecxz
xor
sbb
mov
jbe
lock
cltd
lds
lret
lods
cwtl
sub
jnp
pop
in
cmp
ljmp
mov
int
cmp
mov
push
and
daa
repz
cmp
cli
sbb
jmp
cwtl
xchg
jbe
jg
add
out
lret
in
lret
xor
cmp
inc
push
ljmp
lret
fistps
scas
push
add
jge
imul
loop
lahf
pop
aaa
sbb
dec
rorl
sarb
mov
sbb
out
aad
mov
adc
imul
das
inc
shlb
push
bound
lods
call
fcomip
outsl
and
je
cmp
inc
decl
xchg
cld
out
clc
fwait
jle
aad
sbb
dec
xor
sub
jne
dec
xor
movb
sbb
push
add
lahf
jne
mov
mov
pop
icebp
add
aad
dec
repnz
addb
fadds
mov
add
and
sbbl
subb
push
jg
stos
shll
fistpl
push
rolb
rolb
iret
rolb
mov
roll
add
add
ljmp
rcll
add
jmp
in
clc
stos
inc
insb
or
add
sub
shll
adc
adc
or
sub
mov
mov
mov
loop
les
adc
rcrl
or
dec
push
cmp
pop
aam
mov
sbb
adc
enter
gs
add
mov
pop
scas
cmp
dec
negl
add
pusha
lcall
test
jmp
push
andb
rorb
push
and
or
jae
iret
in
cmpsl
inc
add
fwait
push
jle
push
jns
fsubrs
push
cmpsb
push
mov
shrb
add
aaa
daa
xchg
insl
pop
imul
or
add
in
lds
pop
outsl
shlb
sbb
rol
sbb
pop
ljmp
pop
push
outsb
notl
sub
mov
inc
cmpsb
mov
inc
inc
roll
fsubr
fistpl
add
xor
cmp
ljmp
rorb
mov
into
aaa
imul
jge
rclb
sbb
shrb
sarl
movsl
loopne
jg
loopne
xor
cwtl
xchg
mov
out
shlb
fldt
mov
cltd
inc
add
out
add
add
push
loopne
sbb
fisttpl
inc
or
loopne
pop
inc
or
mov
outsl
int
inc
loopne
lahf
loop
xchg
fs
dec
sub
and
in
lahf
aaa
jg
xchg
loopne
aaa
loopne
rdmsr
add
add
pop
mov
sub
push
push
ja
push
mov
sub
pop
push
pop
jno
sbb
jg
mov
or
loopne
subl
push
sti
or
in
iret
push
in
or
cs
lcall
push
or
adc
int
shll
mov
push
loopne
stc
cmpl
enter
pop
add
add
outsb
xor
lcall
lret
add
sbb
mov
jl
das
pushf
and
aas
loopne
psrlw
outsl
dec
loopne
adc
push
jg
int3
push
fs
push
or
mov
xchg
loopne
subl
sbb
daa
pop
jmp
gs
repz
stos
inc
fcmovnbe
lcall
orb
daa
popf
mov
es
cmp
int3
or
fstpt
or
jmp
inc
pop
jb
xor
loopne
push
jge
or
cld
jns
xlat
mov
fwait
push
loopne
xchg
mov
loopne
jecxz
xor
cmp
fimuls
mov
adc
push
or
pop
pusha
add
and
insb
push
or
mov
adc
add
pop
jnp
mov
dec
sbb
loopne
pop
inc
loopne
stos
and
outsl
mov
jp
mov
or
adc
pop
mov
dec
stc
xchg
sub
out
mov
js
xchg
ret
pop
lret
pop
bnd
outsb
rclb
or
add
movsb
or
lahf
xchg
add
jg
repz
daa
nop
add
or
aaa
or
int
aaa
push
loopne
pop
and
cmp
loopne
pop
cmp
sbb
out
stos
dec
adc
sbb
xchg
dec
push
icebp
loopne
repz
cmp
loope
ficoml
mov
nop
xchg
cld
mov
cmp
sahf
sub
sub
ja
sbb
add
mov
outsl
out
loopne
loopne
dec
clc
imul
lret
loope
xchg
mov
mov
and
and
pop
lcall
aam
add
pop
add
push
icebp
or
or
scas
repnz
or
inc
aaa
xchg
call
ret
es
lock
and
mov
int
mov
push
cs
scas
xor
stos
xchg
pop
fimuls
jo
lahf
pop
lock
jo
pop
loop
icebp
xor
adc
or
xor
or
mov
xchg
stos
gs
imul
lock
stos
adc
jo
outsl
or
lock
shll
lods
inc
sahf
stos
push
es
pop
notb
lcall
sbb
stos
xchg
inc
loopne
out
bound
out
add
jo
stos
lret
sti
fneni(8087
mulb
mov
xchg
inc
mov
pop
nop
aas
outsl
lcall
ja
lock
pop
imul
mov
mov
hlt
sub
in
fisttps
xchg
adc
sub
jecxz
xchg
sbb
sbb
cmp
push
orps
cld
mov
xor
cmp
lret
rep
loopne
inc
fdiv
or
and
add
xchg
cmp
push
xor
pop
xor
les
movhps
lods
sbb
sbb
add
xlat
lcall
cmpsl
sbb
mov
mov
push
lock
pop
test
pop
ret
xor
push
jo
aaa
push
loope
sbb
inc
jno
jo
sbb
mov
loope
icebp
test
shl
dec
lds
mov
adc
fnclex
ja
out
and
insl
addl
mov
pop
icebp
loopne
test
jl
mov
adc
mov
push
icebp
add
push
into
pop
les
xchg
and
in
outsl
in
notl
jne
pmullw
adc
ljmp
fwait
mov
jge
mov
jnp
scas
jns
stos
js
lcall
gs
or
aad
xchg
jmp
pusha
fcmovnu
cld
int
adc
mov
insl
mov
imul
adc
stc
fwait
mov
test
pop
adcl
adc
out
mov
rcl
pop
fistpl
int
pop
fwait
mov
xchg
add
xchg
push
stc
fwait
mov
cmpsl
or
mov
aaa
xorb
xor
in
mov
rcl
aas
fidivrl
int3
cmp
fcom
daa
fwait
mov
xchg
and
xchg
das
mov
loopne
das
clc
mov
sub
mov
sub
push
jbe
icebp
subl
aad
faddl
jecxz
aad
popa
aad
outsb
aad
pushf
aaa
incl
loop
adc
fst
adc
fists
notl
sti
insb
cs
adc
push
or
adc
aad
aad
aad
shrb
insl
aad
enter
sub
mov
out
addr16
aaa
scas
je
adc
aam
aam
iret
xchg
mov
aam
mov
aam
fwait
iret
xchg
js
aam
aam
aam
incb
pushf
pop
aam
adc
stc
inc
sbb
rcl
aam
out
fdivrs
aam
or
aam
push
aam
out
decb
aam
or
mov
xor
clc
cmp
rcl
aam
aaa
jg
jl
xchg
aam
adc
loopne
cs
sub
mov
sub
mov
jbe
aad
out
rcr
out
rcr
jae
stc
fwait
mov
shrl
shll
jg
je
jle
jb
stc
fwait
mov
jl
jle
shll
jp
xor
xor
js
fwait
mov
shrl
out
shll
shll
shll
sar
fwait
mov
sarl
sarl
sarl
sarl
outsb
shll
stc
fwait
mov
insb
shll
shll
push
outsb
imul
fwait
mov
shrl
push
rcll
adc
rcll
adc
stc
fwait
mov
rcrl
adc
sbb
rcrl
out
rcrl
mov
rcrl
out
roll
sbb
nop
or
sbb
fwait
mov
rorl
out
shll
add
shll
das
clc
xor
add
xor
add
aas
out
sarl
psrlq
outsl
out
or
sarl
or
cmp
or
and
rorl
out
clc
out
rorl
fcmovnbe
insb
shlb
rcll
shl
adc
out
adc
shl
adc
repz
shl
adc
icebp
rcll
shl
outsl
out
pop
sar
rcrl
sar
sbb
sar
sbb
sti
shl
outsl
out
sar
sbb
stc
rcrl
sar
pop
shl
roll
shl
out
incb
shl
add
jecxz
add
loop
shl
rcl
shl
outsl
out
psrld
rorl
shr
or
rclb
out
out
rclb
xor
xchg
xor
xchg
shll
rclb
xor
nop
sarl
rcrb
cmp
pushf
sarl
rcrb
cmp
lcall
cwtl
shll
rolb
lods
mov
test
test
test
mov
xchg
push
push
subb
cld
int
and
adc
rorl
jge
lea
sarl
int
mov
inc
sarl
mov
mov
addr16
add
rcl
sar
imulb
fs
shll
rcll
rcl
popa
rcl
outsl
out
pusha
rcl
shrl
fildll
insl
rcr
insb
rcr
shl
outsl
out
rcr
push
inc
shrl
fldcw
fcom
pop
rcrl
push
shl
rcll
xchg
rcll
shl
adc
loop
adc
xchg
mov
shl
rcrl
rcll
shr
add
data16
shr
shr
add
jmp
ljmp
stc
jmp
push
rcrl
add
xchg
roll
rcll
add
xchg
roll
shl
xlat
shl
rorl
rcrl
or
fwait
loopne
rcrl
or
sahf
push
insb
rcrl
rol
adc
shl
shll
rol
xor
ret
dec
cld
or
les
ror
sarl
int
cmp
int
cmp
int3
cmp
lret
sarl
ror
cmp
leave
shll
int
cld
int
enter
shll
not
and
cmc
and
aaa
repz
shll
adc
rol
shrl
sar
cs
shrl
repz
sub
call
sub
cli
sub
shrl
shl
sub
std
fwait
mov
rclb
aam
rcrb
je
pop
jae
pop
aam
sarb
sar
fwait
mov
rcrb
sarb
rcrb
rclb
js
ret
ljmpw
shrl
loop
aas
sarb
arpl
js
mov
rcrb
aam
rolb
rcrb
insl
shlb
insb
sar
lcall
aam
rolb
adc
rolb
rolb
adc
inc
aam
rolb
adc
inc
aam
sar
decl
push
rorb
sbb
rorb
rorb
sbb
dec
aam
rorb
sbb
dec
aam
rolb
mov
push
shlb
add
jae
add
decl
mov
add
lret
jo
jg
push
sarb
shlb
xor
lock
rcl
xor
arpl
xor
fidivs
rolb
mov
pusha
aam
shrb
shrb
cmp
mov
cmp
repnz
cmp
lock
pusha
add
shrb
cmp
clc
daa
shl
rclb
call
and
rclb
aam
rclb
aam
rclb
aam
rclb
aam
rcrb
aam
rcrb
jg
call
jbe
pusha
hlt
jne
fcomi
je
bnd
div
jb
div
jno
aad
jo
pushl
jg
je
jle
jae
jge
jno
jl
dec
hlt
jnp
dec
hlt
jp
dec
hlt
jns
ja
js
jg
fistpll
imul
cmc
push
mov
imul
cld
cmc
pop
cmc
push
cmc
adc
dec
cmc
adc
shl
pop
fucomip
cmc
push
fists
sbb
add
cmc
add
int
or
call
or
push
cmc
or
cmc
or
std
cmc
or
lock
or
push
cmp
cmc
and
inc
pushl
imulb
filds
sub
imulb
filds
fdivp
repz
ficoms
repnz
xor
fdivp
xor
fcomi
xor
xor
aas
sbb
ds
repz
faddp
repnz
ss
ret
repnz
jmp
cmp
insl
hlt
daa
fisubrs
fidivrs
fisubrs
and
push
and
lret
repnz
and
jecxz
and
sti
repnz
fimuls
jbe
aam
jne
aad
je
shl
jae
shl
jb
shl
jno
and
fstp
idivl
jle
ret
idivl
idivl
hlt
repz
icebp
idivl
repnz
test
call
fldl
mulb
mulb
xor
fisttpll
mulb
idiv
dec
pushl
ffree
imull
hlt
push
cmp
std
hlt
adc
mov
adc
outsl
fisttpll
notb
fisttpll
negb
push
repnz
pusha
repnz
sbb
push
sbb
js
pop
testl
testl
in
xlat
fucom
cld
fcomi
push
push
lock
jnp
or
pop
repnz
popa
repnz
sbb
or
jns
aaa
fnsave
stos
ljmp
fnstsw
repnz
fs
push
xor
push
mov
pushl
fnstsw
aas
frstor
cmp
icebp
cmp
cld
mov
pushl
cmp
mov
daa
lock
mull
call
push
lock
shl
fnstsw
icebp
and
xchg
icebp
das
fstl
icebp
sub
in
ret
ss
imull
imull
mov
lds
jmp
jno
jmp
jle
mov
fdivrl
adc
icebp
jb
adc
mov
fsubl
fmull
cmc
sbb
inc
hlt
mov
fdivl
sbb
movb
hlt
add
out
paddusb
mov
fdivl
sub
je
fcmovnb
divl
fildl
shlb
fildl
shlb
fildl
xor
add
xor
add
xor
add
xor
xlat
sarb
fisttpl
sarb
fisttpl
sarb
fisttpl
cmp
or
cmp
or
cmp
or
cmp
or
daa
shlb
shlb
and
xor
and
xor
and
xor
and
xor
das
fstpt
shrb
fstpt
shrb
fcmovbe
fnstenv
aad
je
aam
jae
rcr
jb
rcr
jno
rcr
jo
das
clc
fcmovbe
fnstcw
jle
fcompp
jge
lock
jnp
fcmovnu
jp
fcmovu
pushl
fcmovu
fldenv
fldenv
fldenv
vpcmpgtb
fldenv
ret
fldenv
inc
fldenv
rcr
fcmovb
fldcw
iret
fldcw
into
fldcw
int
insb
fcmove
fldcw
lret
fldcw
call
fldcw
leave
fldcw
enter
neg
push
fsts
fsts
cmc
mov
repnz
fsts
fstps
fstps
fstps
lcall
fstps
fstps
fstps
flds
flds
flds
jmp
flds
in
add
jecxz
add
loop
add
loope
xlat
in
fucompp
fnstenv
ficoml
fnstenv
ficoml
xor
call
fnstenv
ficoml
fnstcw
ficompl
fnstcw
pushf
fnstcw
ficompl
lcall
fldenv
fiaddl
fldenv
test
and
sbb
fiaddl
fldenv
incl
fldcw
fimull
out
fxam
out
ftst
out
out
out
fcos
jmp
out
fchs
out
out
fldz
out
fldln2
out
fldlg2
out
fldpi
out
fldl2e
out
fcos
jmp
out
fsts
out
fsts
out
fsts
out
fcos
call
out
fstps
out
fstps
out
fstps
out
fcos
lcall
out
flds
out
flds
out
flds
out
fcos
incl
out
out
out
out
fnstcw
decl
out
fnstenv
out
fnstenv
out
add
add
add
xlat
shufps
fwait
int
or
or
or
fldcw
aaa
ss
xor
xor
xor
xor
xor
xor
data16
aas
ds
cmp
outsl
ss
cmp
cmp
cmp
cmp
mov
out
fldcw
out
fldcw
out
fsts
and
push
out
fstps
and
pop
out
and
fdivs
sub
idiv
pop
or
jnp
les
imul
add
jne
jae
jno
sahf
out
jo
jle
jl
push
shl
fildll
nop
add
push
sahf
out
sahf
fcmovnu
fcmovb
jl
out
int3
int3
sub
repz
roll
iret
repz
icebp
test
cmp
cmp
repz
xor
sahf
divl
sti
mov
repz
cli
mov
cmp
iret
aam
dec
negl
sahf
idivl
cmpsl
inc
push
cmpsb
inc
jns
out
movsl
inc
movsb
inc
repz
sahf
out
repnz
icebp
dec
sahf
out
sahf
lock
decl
dec
xchg
out
push
push
testb
iret
repz
stc
jge
repz
repz
jnp
jp
repz
mov
cmp
jnp
addr16
push
mov
mov
cmp
repz
mov
iret
repz
mov
mov
mov
add
outsb
mov
leave
leave
push
mov
adc
adc
out
adc
jns
pop
lods
push
lods
sbb
jns
stos
sbb
out
sbb
push
sahf
out
sahf
pop
push
push
push
add
jns
push
add
out
sahf
out
ss
jbe
repz
xor
xor
jae
iret
repz
jb
mov
call
mov
mov
mov
call
lcall
fsubrl
shll
in
mov
je
pop
stc
or
fadds
clc
in
loopne
shll
mov
dec
lea
mov
inc
lahf
sub
xor
push
lret
mov
imul
sub
sub
arpl
jmp
xlat
or
lcall
xchg
mov
sub
push
and
mov
jo
xchg
test
push
cmp
inc
cltd
push
adc
pop
sti
out
cmpsb
inc
or
push
out
ljmp
incl
repz
movsl
dec
push
pusha
lcall
pop
mov
into
pop
jnp
cmp
ffreep
dec
call
popa
pop
fnstcw
scas
cmpsb
pushl
daa
rorb
dec
hlt
inc
mov
adc
out
cld
cld
andl
call
rcl
mov
xchg
cs
mov
mov
mov
pop
ret
int3
test
push
cld
incl
test
inc
lahf
mov
inc
fwait
push
addr16
mov
repnz
inc
loopne
mov
push
pop
mov
fstps
mov
sbb
popf
arpl
call
addr16
in
out
out
out
in
in
in
in
in
in
in
in
call
loop
add
xor
xchg
lcall
loop
test
sahf
sbb
xorl
add
lahf
addb
in
and
gs
sbb
xchg
add
pop
mov
push
fnop
int
cmpsb
fcoml
mov
in
in
in
in
in
dec
stos
and
lcall
pop
mov
insl
sti
mov
icebp
dec
pop
iret
adc
stos
into
daa
sbbb
lret
jecxz
jecxz
jecxz
jmp
xchg
jecxz
jecxz
jecxz
jecxz
je
and
pop
loopne
icebp
fwait
into
fcoml
je
frstor
jmp
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
loop
loop
xlat
call
int3
ss
insl
into
stos
inc
pop
enter
pusha
imul
loop
loop
loop
loop
loop
loop
loop
loop
ljmp
adc
mov
pop
loop
pop
add
ss
ret
mov
rclb
jecxz
jmp
xchg
loope
loope
loope
loope
loope
loope
loope
push
arpl
lods
and
out
inc
call
jae
push
pop
ja
adc
cmp
pop
call
das
out
jmp
fwait
out
out
and
cmp
sbb
popf
mov
scas
xchg
or
rcl
fisttps
in
arpl
or
jmp
jmp
jmp
jmp
jmp
popa
adc
lds
stc
jo
fst
imul
mov
sahf
call
popa
call
cmp
sub
jg
jge
clc
inc
jae
les
imul
repz
in
pop
jmp
mov
sub
jmp
es
out
out
out
out
out
in
mov
push
mov
scas
pop
mov
into
mov
mov
setg
inc
inc
xchg
es
jnp
loop
adc
loop
in
loop
loop
loop
aas
cld
loop
loop
loop
xor
lods
fs
jge
cltd
fdivl
out
cmp
pushl
dec
das
testl
enter
mov
arpl
lcall
xor
inc
jb
sbb
jg
or
jbe
loopne
loopne
loopne
loopne
jmp
sub
out
inc
out
inc
out
dec
out
mov
ret
dec
push
mov
std
test
sub
psadbw
lcall
or
subl
in
scas
in
xor
in
lock
pushf
in
in
mov
movsl
xchg
les
adc
lcall
mov
push
in
into
dec
in
dec
jmp
jmp
jmp
ljmp
std
ljmp
push
and
jmp
movsb
out
je
js
into
xor
mov
insl
adc
sbb
jmp
pop
jmp
jb
jnp
outsl
jmp
ja
inc
bound
imul
popf
out
bnd
sbb
mov
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
loop
loop
incl
jmp
cmpsl
sarl
sub
stc
cmp
ss
cmp
and
in
fldln2
call
in
push
in
dec
inc
ljmp
pushf
out
aam
dec
mov
scas
jecxz
es
mov
pop
jmp
jmp
jmp
ljmp
sbb
xor
sub
movsl
movb
lcall
clc
lea
ret
fmuls
pop
mov
movsb
pop
mov
cli
call
ret
or
push
into
dec
and
out
add
add
call
xchg
iret
insb
rorl
mov
jo
pop
mov
dec
in
in
pop
cli
rorl
or
fsubrs
sub
cld
jg
cmp
fadd
mov
ret
ret
iret
into
int
lret
lret
negl
ret
inc
std
cld
sti
inc
and
out
adc
out
in
in
jmp
jmp
xchg
inc
inc
inc
sbb
pop
ret
mov
lds
lods
outsb
test
push
push
push
push
push
call
pop
pop
pop
pop
pop
pop
pop
pop
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
ja
jne
jae
out
clc
pushl
jg
jge
jnp
jns
addr16
bound
outsl
outsb
insl
insb
imul
pop
call
adc
adc
push
sbb
sbb
push
add
xlat
femms
or
or
pushl
xor
xor
ds
cmp
es
and
cs
sub
js
or
pop
mov
sbb
adc
xchg
xchg
xchg
xchg
xchg
nop
add
lcall
test
mov
adc
adc
adc
popa
pop
add
add
xchg
xchg
sbb
sbb
add
popa
daa
add
add
xchg
xchg
sub
jmp
cmp
sub
add
in
in
mov
es
pop
and
mov
sbb
and
incl
test
xor
xchg
jo
das
addb
scas
lea
sbbl
or
or
mov
ret
or
fucomip
mov
orb
adc
int
add
adc
and
fildl
jbe
pusha
decl
adc
cwtl
and
orl
das
les
mov
mov
lfs
mov
mov
mov
pushl
jo
xchg
sahf
xchg
movsl
mov
mov
mov
add
mov
xchg
mov
mov
sbb
or
movsl
mov
mov
shlb
sbb
call
aam
xchg
and
push
loop
invd
inc
inc
add
hlt
add
addl
out
push
xchg
and
xchg
add
cmpsl
push
jecxz
nop
fucomip
and
testb
fldl
ret
add
jo
incl
inc
add
testl
dec
xchg
add
ljmp
pop
push
inc
add
add
adc
rclb
rolb
add
or
mov
scas
add
inc
add
repnz
aaa
or
out
mov
push
imul
shlb
push
out
xchg
std
push
push
sbb
test
add
and
push
mov
clc
fistl
lret
mov
mov
add
cltd
and
add
jbe
dec
xchg
and
mov
pusha
add
and
movsl
dec
mov
or
mov
std
mov
movsb
pop
bound
arpl
stos
add
and
mov
mov
mov
mov
clc
pop
and
mov
mov
or
clc
call
mov
mov
incl
mov
mov
xchg
dec
test
shll
loopne
mov
and
btc
popa
or
or
pusha
add
fwait
mov
popa
add
in
aam
fwait
mov
test
in
push
loop
loope
loope
sbb
xchg
test
mov
fcomip
fisttpl
mov
mov
mov
xchg
gs
push
add
incl
inc
push
inc
pop
jge
pop
dec
pop
jl
pop
push
pop
add
jae
inc
pop
pop
dec
add
inc
imul
xchg
int3
movsb
lret
fs
incl
mov
lods
mov
add
loopne
sti
stc
std
outsl
clc
jmp
out
enter
add
add
xor
mov
pushl
inc
cmp
and
add
add
aas
sub
and
push
rolb
or
incl
adc
ja
test
out
add
div
in
jecxz
out
adc
leave
in
sti
out
add
into
sti
icebp
loop
dec
icebp
jg
inc
shl
std
ror
or
int
mov
sub
cmp
aas
or
ds
cmpsb
aas
and
jnp
xor
and
jb
imulb
push
jle
xor
cmp
jb
in
stos
outsb
push
and
jbe
ds
daa
insl
and
testb
push
jo
popa
arpl
pop
cld
ljmp
or
jmp
or
or
adc
adc
sbb
repnz
push
sub
int3
dec
push
pop
dec
pop
dec
jo
pop
lcall
sbb
and
xor
cmp
cmp
or
add
mov
mov
test
test
decl
add
add
lods
mov
movsb
xchg
or
mov
mov
push
cld
push
mov
sbb
or
or
or
cmp
fcomip
outsl
nop
xor
ja
xor
xor
xor
das
add
sub
xor
mov
mov
scas
clc
add
cmp
jg
incb
inc
or
mov
lods
stos
adc
mov
mov
decl
in
repnz
loope
push
dec
pop
dec
pop
outsl
jg
add
add
inc
pop
dec
pop
jne
inc
inc
dec
inc
push
push
das
sar
dec
arpl
push
inc
jne
outsl
add
insl
in
dec
inc
or
decl
gs
sub
cltd
repz
add
cwtl
stos
ljmp
cmpsb
add
roll
loopne
popf
add
mov
or
push
add
les
mov
idiv
ljmp
lock
mov
mov
add
lahf
fwait
clc
lcall
aam
ficoml
imul
arpl
outsb
add
insb
movups
das
xchg
mov
mov
rcr
out
out
into
loop
nop
xchg
xchg
fistps
filds
popa
push
jg
jns
jb
imul
add
add
xor
pusha
iret
int3
or
xchg
leave
into
mov
aad
xchg
fcmovnu
mov
pop
jns
jbe
incl
push
xor
jo
bound
sub
pusha
popa
add
and
and
push
sbb
dec
adc
xchg
fcomps
rcl
fcmovu
cltd
aam
enter
add
into
add
fnsave
mov
add
sub
pushl
adc
and
xor
add
push
pop
dec
or
push
call
inc
add
or
or
xchg
lahf
sbbb
sahf
xchg
lea
sbbb
cld
mov
and
daa
cmp
cmpsb
es
cmp
aaa
add
mov
jle
pushf
fwait
lahf
xchg
popf
lahf
xchg
lcall
lcall
add
fcmovu
ret
lock
lret
clc
aam
call
or
inc
pop
pop
dec
pop
mov
inc
inc
inc
adc
inc
fbld
dec
sbb
outsl
inc
inc
pop
arpl
and
push
pop
sbb
int
or
mov
cmp
lds
mov
xchg
popf
mov
sub
add
jns
clc
or
inc
add
adc
pop
push
sbb
push
or
adc
jns
jp
insl
bound
imul
std
scas
fdivs
je
fs
cwtl
test
mov
jb
ja
adcl
xor
add
aaa
scas
lds
shr
adc
mov
dec
mov
mov
clc
mov
icebp
push
jno
fs
inc
push
push
cld
lcall
add
pop
dec
pop
pop
outsb
push
add
or
outsb
inc
push
inc
es
adc
imul
iret
mov
and
cld
pushl
rol
iret
into
fdiv
lret
add
fiadds
pop
or
add
add
call
adc
add
xor
sbb
push
adc
adc
bound
nop
mov
mov
mov
add
adc
sub
add
and
cmp
aam
out
cli
fists
lock
fstp
mov
pop
inc
imul
scas
into
pop
dec
mov
sub
sub
or
cmp
cs
add
lock
bnd
ret
clc
cld
cli
jecxz
push
jge
and
daa
and
mov
pushf
mov
xor
rcl
xchg
cmpsl
fmul
leave
mov
test
adcl
and
out
mov
pop
dec
pop
inc
inc
inc
pop
or
inc
pop
inc
lcall
ret
jb
repnz
insl
mov
into
or
pusha
cld
scas
outsl
jle
add
dec
into
pop
dec
pop
dec
pop
jo
sub
jno
inc
jnp
ja
jb
xor
and
dec
sbb
jno
pop
inc
inc
dec
sub
dec
inc
dec
push
push
add
add
ret
call
fcomps
ror
mov
ljmp
sahf
lcall
popf
mov
add
test
mov
icebp
loop
add
mov
sbb
add
test
mov
ljmp
mov
stos
or
popa
jno
loope
rol
and
popa
pop
pushl
pushf
mov
mov
xchg
movsb
cwtl
mov
lods
ljmp
cli
test
cld
cmpsb
mov
mov
arpl
bound
add
mov
mov
pop
sbb
add
or
xor
add
adc
sub
inc
ds
and
lcall
scas
outsb
addl
mov
mov
test
aaa
in
cli
lcall
popf
sahf
nop
cltd
cltd
add
rcl
lret
aas
cli
das
clc
and
shlb
int
test
ljmp
ljmp
call
push
lock
loope
in
aad
je
icebp
add
fidivrs
mov
pop
push
lock
or
pop
decl
sbbb
push
pop
xor
dec
inc
add
inc
push
mov
aaa
loopne
push
pusha
dec
jl
sub
add
dec
imul
pop
adc
sub
inc
inc
push
push
dec
dec
dec
pop
incl
add
test
add
aas
cs
sub
call
sub
shll
sbb
add
xor
mov
push
cld
sbb
mov
pop
inc
dec
sbb
pop
dec
pop
inc
addr16
mov
ja
imul
fs
jle
fisubl
fwait
in
add
ja
inc
bound
pop
add
inc
pop
push
sarl
push
pop
insb
add
inc
inc
fs
push
dec
push
dec
in
mov
cmp
cmp
mov
rolb
shlb
imul
imul
push
xlat
outsl
jg
testb
xor
lods
xchg
mov
pop
repnz
outsb
insb
adc
lcall
xor
sub
xor
fisttpll
mov
add
and
adc
fwait
fs
or
push
adc
mov
fnstcw
mov
sub
cmp
cmp
adc
adc
inc
sar
inc
or
and
or
mov
clc
fcomip
jg
test
mov
lods
jno
and
push
sbb
add
mov
inc
push
push
out
dec
lock
sti
mov
and
gs
dec
adc
loopne
mov
ret
mov
xchg
call
ljmp
inc
xor
jp
jae
sahf
xor
sub
and
pop
pop
inc
and
inc
call
outsl
cli
dec
dec
nop
xor
xchg
sti
call
inc
fstp
rcr
ret
ljmp
mov
enter
vshufpd
xor
dec
and
ficoml
loop
hlt
add
jg
jo
xor
cmp
and
sub
push
js
and
push
push
cmc
fisttpl
add
xchg
or
test
imul
xor
sbb
sbb
fucomip
and
pusha
insb
jns
or
jbe
jne
push
pushf
push
pop
cmpb
bound
cmp
mov
mov
out
push
mov
mov
pushf
dec
pop
pop
and
add
idiv
mov
push
or
or
jo
xchg
xchg
mov
mov
xorl
orb
xchg
shrb
movsb
mov
jmp
data16
push
dec
fldt
test
in
repnz
int3
fdivr
push
mov
out
testl
aas
je
add
sbb
aaa
std
jg
adc
adc
jns
sub
aad
cltd
mov
pop
cld
jg
add
mov
movsb
add
cmp
push
cmp
xor
add
std
neg
sub
sbb
add
add
outsb
es
icebp
add
push
scas
add
push
pop
dec
inc
pop
cmp
or
sub
pop
push
push
and
add
jnp
les
push
adc
xor
cltd
into
add
out
test
fistpll
fcmovnb
add
test
mov
leave
ret
hlt
loopne
sar
repz
mov
xor
and
pop
pop
push
xor
fnstsw
jl
sub
xor
cld
xchg
sub
sub
push
int3
js
and
add
ja
push
or
inc
pop
pop
or
mov
leave
cwtl
clc
mov
fisttps
add
fcmovnbe
sarl
mov
int3
pusha
sbb
and
aaa
arpl
jle
sub
add
and
sub
pushf
lahf
add
fcomip
xchg
xchg
adcb
lock
add
jmp
add
loop
add
inc
inc
dec
inc
pop
pop
push
adc
dec
push
inc
add
mov
outsl
movsb
fwait
lahf
xchg
and
xchg
mov
nop
xchg
inc
cld
pushl
adc
pusha
aaa
add
sbb
das
and
add
arpl
aaa
pop
dec
cmp
or
push
and
sbb
push
add
push
and
sbb
pop
cmc
and
das
and
sub
bound
xor
jmp
pop
cmp
add
mul
icebp
out
shrl
loopne
add
clc
negl
adcl
enter
add
pop
xorb
out
idiv
cmpsb
lock
in
call
add
add
clc
sbb
aaa
arpl
inc
inc
inc
mov
push
inc
push
mov
mov
xchg
xchg
xchg
add
nop
xchg
test
mov
add
jbe
xchg
shr
xchg
in
cmc
repnz
ret
loopne
fsubr
jmp
ljmp
jbe
jns
or
js
pusha
adc
push
js
push
or
jmp
dec
outsl
bound
imul
bound
dec
pusha
out
clc
jmp
jae
add
inc
inc
add
push
insb
add
xchg
adc
cli
xchg
in
mov
lock
push
repnz
jl
pusha
mov
pushf
mov
cmpsb
add
dec
mov
xchg
mov
mov
aaa
std
lods
xchg
xchg
popf
xchg
add
adcl
push
addb
and
imull
sbb
sbb
pop
xlat
sbb
jbe
push
sbb
xchg
mov
push
adc
mov
mov
cmp
pushf
pop
xor
subb
sub
aam
divb
pop
pop
pop
push
inc
adc
dec
pop
dec
js
mov
pop
push
dec
dec
push
sub
or
inc
inc
inc
mov
pusha
sub
xor
jecxz
stc
loopne
leave
adc
fcomi
in
lods
mov
call
daa
roll
arpl
mov
jge
jle
addl
pop
dec
mov
aad
mov
inc
pop
inc
pop
add
ja
inc
inc
dec
ljmp
inc
push
cmp
insb
dec
jg
outsl
jbe
jg
pop
jl
pushl
js
insb
jl
pop
push
outsl
addr16
pop
imul
or
xadd
mov
mov
mov
xchg
add
pop
dec
pop
push
inc
push
add
push
dec
jbe
sub
outsl
fidivrl
inc
dec
insl
ja
or
rorl
dec
dec
and
dec
dec
jns
adc
lods
movsb
add
or
push
lea
incl
xchg
popf
mov
mov
sbbb
xchg
fwait
mov
int
scas
stos
movsl
test
adc
and
xor
loopne
notb
sub
add
adc
sbbb
pop
sbb
lar
and
sbb
sbb
add
call
sub
ds
aas
shlb
inc
mov
mov
fwait
stos
or
cmpsb
scas
js
rolb
rorl
addb
fistl
out
jmp
add
mov
push
lods
subb
lock
mov
mov
jl
fxch
add
inc
ret
movb
xchg
movsb
push
inc
push
adc
sbb
call
push
pop
dec
dec
push
push
orb
dec
dec
dec
dec
dec
add
dec
inc
inc
inc
inc
dec
push
ja
aaa
std
pop
xchg
jno
jg
cmp
add
and
das
cli
ja
jb
jbe
popa
insl
sbb
js
addr16
adc
loop
sbb
adc
insl
and
xor
lret
sbb
push
loopne
pop
std
or
push
or
dec
or
and
add
pop
pop
and
or
lea
cmp
and
decl
pushl
xor
xor
add
sub
dec
shr
ret
jg
popf
xchg
popf
fcmovb
cli
rol
mov
add
mov
mov
repnz
loopne
repnz
jl
std
sbb
out
repnz
nop
in
out
jmp
aam
and
ljmp
std
mov
cwtl
xchg
xchg
fsts
mov
push
aaa
jle
xchg
adcb
lahf
mov
movsb
mov
cli
lods
mov
clc
sbb
stos
mov
pusha
test
mov
ljmp
stos
push
pop
inc
push
and
pop
dec
pusha
add
pop
inc
or
push
pop
lock
mov
add
pop
push
push
pop
ret
dec
popa
icebp
decl
popa
dec
jb
push
jl
imul
jno
call
push
push
push
pop
dec
jp
fsubrl
shrb
shlb
and
popf
lea
dec
add
pop
xchg
jecxz
or
push
adc
dec
in
pop
sbb
rcll
incl
add
sbb
lods
call
outsl
insl
ljmp
dec
gs
jae
mov
int3
sbbb
dec
popa
add
and
and
add
pop
pop
or
outsb
aaa
std
ja
aaa
sub
xchg
add
insl
sub
sub
mov
bound
inc
mov
push
enter
inc
push
cld
push
aam
bound
inc
icebp
jb
dec
push
ljmp
sahf
movsb
stos
cld
pop
sti
add
jbe
inc
imul
jns
jl
scas
clc
pop
sbb
pusha
or
roll
ror
iret
lret
ljmp
fstpl
inc
add
and
sbb
jno
das
clc
outsl
scas
outsb
jb
js
js
popaw
push
add
arpl
jno
adc
mov
jmp
in
out
hlt
loop
icebp
test
in
loope
sar
std
out
lock
jecxz
aad
cmc
std
mov
jmp
test
cmpsl
lcall
adcb
mov
mov
cltd
xchg
xchg
out
xchg
jb
push
pop
pop
push
adcb
pop
pop
push
dec
lcall
mov
dec
loopne
leave
in
sbb
out
jmp
jmp
mov
cwtl
sahf
shlb
or
lods
mov
cld
fisttps
dec
dec
inc
pop
inc
pop
push
add
add
sbb
pop
or
pop
adc
sbb
adc
or
jg
in
loope
imulb
loop
out
adc
lods
add
in
or
gs
fildll
xor
sub
cmp
aas
cmp
cmp
jg
je,pt
data16
xor
and
stos
mov
std
sub
dec
into
and
sti
scas
stos
mov
and
mov
pushf
int3
rcll
lods
nop
mov
les
push
out
clc
fisttpl
sbb
inc
push
adc
add
pop
pop
int3
sbb
inc
out
cli
mov
pop
push
inc
pop
push
pop
add
pop
popa
and
push
lds
loope
outsb
dec
sbb
pop
add
dec
inc
fdivl
mov
sbb
pop
dec
dec
push
sbb
pop
push
icebp
inc
push
cmp
jecxz,pn
int3
add
lret
rorb
into
xchg
in
decl
loope
fdivrl
xor
xor
xchg
sub
incl
jmp
div
cmc
out
negb
add
sbb
fs
rolb
and
pusha
mov
xchg
fldl
fcmovne
cmpsb
sbbl
iret
add
aad
movsb
add
jmp
jmp
fsubp
fsubrl
push
or
sbb
mov
adc
popa
jge
ljmp
loop
add
push
push
pop
or
push
add
xchg
lcall
adcl
push
scas
rolb
sbb
add
ds
ja
call
enter
mov
mov
fisubs
ret
icebp
lcall
and
lret
roll
bound
xor
daa
jle
push
test
popf
movsb
mov
add
lcall
jae
push
sbb
gs
push
inc
pop
adc
ja
jmp
jp
lods
sti
add
loopne
jmp
stos
mov
addb
pop
pop
bound
jne
fwait
cmc
push
pop
lea
int
ret
mov
mov
lds
filds
xchg
nop
sahf
int
enter
mov
sub
mov
loope
mov
mov
insl
jo
mov
jb
sub
sahf
imul
insl
je
arpl
jmp
hlt
adc
jne
add
push
push
mov
dec
push
jbe
inc
inc
dec
scas
dec
or
les
pusha
push
stos
add
lock
adc
push
mov
add
adc
mov
adc
pop
add
clc
fs
add
mov
lods
jecxz
mov
add
push
add
add
andl
jno
cli
add
sbb
test
scas
pop
movsb
xchg
mov
mov
xchg
movsb
in
in
add
roll
sahf
cmp
add
lods
leave
lcall
addb
adc
pop
add
mov
add
add
fwait
std
movsb
adc
mov
xor
mov
mov
nop
push
andb
add
jb
fcmovnu
pop
sbb
adc
out
popa
add
mov
dec
jno
add
test
lcall
mov
sub
mov
xchg
mov
jg
lock
or
fwait
mov
cli
es
mov
mov
scas
xchg
add
cltd
mov
mov
sti
scas
mov
add
sbb
add
std
mov
andb
mov
incl
xchg
je
xchg
ss
mov
add
mov
mov
popa
push
cmp
mov
or
loopne
or
mov
mov
nop
or
pop
mov
adc
adc
adc
or
xor
sbbb
pusha
test
or
outsl
xor
test
nop
lret
test
call
cwtl
addb
xchg
and
sahf
xorl
aaa
ret
cwtl
test
fwait
cwtl
add
test
sbb
mov
cltd
adc
adcl
cwtl
fwait
inc
add
add
add
xchg
sti
sbb
xchg
add
sbb
hlt
in
in
add
cltd
cltd
lret
and
fcoml
fwait
push
loop
clc
xchg
addl
loop
add
mov
adc
pushf
mov
cmp
add
fcomi
add
mov
mov
mov
mov
mov
push
cli
and
add
pusha
mov
pop
add
mov
mov
sbb
mov
and
pop
mov
scas
ja
nop
push
daa
adc
mov
or
and
out
xor
xor
xor
xor
mov
shlb
mov
ljmp
sub
std
clc
std
inc
xchg
mov
in
divl
fcmovu
adc
movsl
mov
icebp
stos
xor
nop
sub
popa
push
xchg
mov
or
or
jae
stc
add
repnz
aam
xor
dec
xchg
mov
xchg
xor
outsl
nop
sub
inc
sub
lret
mov
inc
jl
mov
dec
push
xchg
call
push
movsl
push
xor
jbe
mov
ret
adc
fucom
adc
and
movsb
mov
mov
enter
or
mov
mov
sbb
xchg
fildll
xorb
add
ss
jne
add
mov
aam
shlb
push
das
adc
mov
movsl
sbb
stos
xchg
inc
xchg
push
push
sahf
js
mov
push
xor
sub
adc
xchg
mov
mov
test
inc
jg
pop
adc
push
test
cmpl
das
addb
xor
dec
add
mov
cs
xchg
xor
dec
mov
rolb
ljmp
adc
jno
mov
sub
and
jbe
andb
mov
mov
adc
roll
arpl
push
xor
mov
pop
mov
mov
lock
hlt
pushl
add
pushf
pop
out
pop
push
add
cwtl
jge
pop
pop
cmc
adcl
fidivrl
push
fisttpll
jmp
ret
jg
push
subb
test
push
test
add
push
adc
add
add
decl
sahf
inc
sub
lock
and
cld
add
ljmp
jl
decl
mov
or
push
jno
push
mov
movsb
cmpb
loope
sarl
jle
inc
inc
push
repnz
adc
xor
std
outsl
in
xor
mov
xchg
mov
mov
push
xlat
sub
sti
pop
mov
add
in
div
repnz
cmc
adc
insl
pop
add
mov
mov
mov
mov
mov
jg
sahf
mov
add
xor
pop
xchg
movsb
mov
fildll
dec
push
arpl
lods
clc
xchg
xchg
add
not
or
inc
lock
lock
fistpll
shrl
out
inc
xchg
repnz
mov
inc
fisttps
jo
aas
stos
fwait
inc
pop
add
push
cmp
adc
cmc
pop
ficompl
push
pop
push
lcall
add
lds
xchg
aas
test
cmp
pop
les
test
loop
sarl
mov
pusha
cmp
or
push
mov
adc
mov
fwait
jge
jo
pop
mov
push
cmp
add
aaa
aad
mov
or
ds
xchg
das
push
pop
mov
pusha
xchg
ds
xlat
fisubl
cmp
pop
push
out
sub
loopne
fistpll
cmc
sub
dec
add
adc
lods
push
add
mov
sub
in
aas
push
push
inc
lods
adc
in
ret
aas
pop
les
pop
clc
inc
push
mov
sub
pop
mov
cmp
cmp
or
add
aaa
clc
ds
pop
add
test
rcll
in
add
in
outsb
pop
or
sbb
adc
push
mov
dec
add
pop
xchg
orb
mov
cmpsl
sti
bound
xor
cmp
cwtl
leave
pop
push
ret
mov
pop
cld
ljmp
xchg
mov
pop
and
sub
aas
pop
movsl
incl
add
sbb
minps
pop
shlb
adc
push
add
mov
adc
or
out
lock
adc
and
and
es
orb
jl
dec
add
or
xor
rcll
add
adc
inc
dec
xchg
pop
addb
and
xorb
pop
aaa
cld
loop
andb
adc
stos
sub
xchg
or
movb
subb
in
loope
fdivr
xchg
fldcw
add
sub
movsl
jo
dec
push
adc
cmp
add
mov
dec
xchg
lcall
incl
popl
mov
and
sbb
dec
pop
jmp
xchg
mov
fistpl
daa
add
ljmp
mov
push
es
and
mov
mov
roll
or
stos
adc
add
cmp
push
cmp
xchg
xchg
mov
jmp
fiadds
dec
xchg
out
movsb
mov
fbstp
xchg
and
mov
orb
repnz
daa
push
and
das
mov
movl
sbbl
push
mov
rcrb
shrb
sub
add
das
pop
cs
sbb
push
xchg
fstpt
rcrb
adc
fcmovu
mov
in
inc
test
sub
filds
add
push
or
cmp
inc
div
inc
inc
sub
movb
rclb
xchg
and
mov
filds
pop
adc
mov
inc
and
dec
test
clc
xchg
xchg
rorb
outsb
xchg
hlt
or
shlb
inc
iret
add
push
mov
ret
mov
jb
inc
push
sbb
addb
adc
adc
or
ret
adc
jmp
inc
rcll
mov
xorl
mov
sti
and
mov
inc
sub
call
in
adc
inc
mov
das
cmp
jo
sbb
out
aas
push
aam
add
and
add
inc
sbb
add
xchg
push
sti
pop
lcall
cmp
lock
and
shl
testb
pop
test
fiaddl
gs
iret
add
or
push
cmp
sub
les
ljmp
add
or
add
xor
sub
mov
iret
add
test
xor
mov
push
cld
or
mov
xchg
mov
sub
jmp
loopne
sub
pause
and
pusha
outsl
loopne
mov
decl
rorb
bound
mov
add
inc
push
lcall
adc
or
jmp
pop
test
and
adc
mov
and
aas
sub
fs
outsl
push
gs
jmp
sbb
into
pusha
or
lahf
in
outsl
or
ret
adc
xor
shll
call
xor
inc
xadd
addl
push
das
scas
cmp
pusha
cs
and
pop
jbe
sbb
lret
add
shll
lcall
cmpb
sbb
je
mov
sarl
sub
xchg
pusha
daa
sbb
push
mov
mov
add
and
pusha
pop
ret
aaa
pushf
mov
xorl
fs
std
pop
push
mov
ds
inc
stos
mov
cmp
roll
cmp
sti
dec
mov
add
outsb
idiv
sub
dec
push
adc
adc
ljmp
xor
mov
inc
je
out
aad
shrl
es
ss
adc
rorb
mov
push
das
fs
xor
adc
fwait
mov
xchg
add
mov
loopne
pop
das
and
xor
mov
fstpt
stc
add
sub
stos
dec
cmc
or
adc
fbstp
loopne
sub
jg
push
loopne
aas
inc
rol
jle
ljmp
adc
xchg
ffreep
cmp
or
sbb
lcall
ljmp
outsl
das
jmp
xchg
jle
aas
push
mov
push
adc
call
inc
adc
mov
sbb
es
sbb
pop
cmp
mov
dec
push
xchg
sub
sbb
ds
mov
roll
dec
inc
bound
and
rolb
mov
xchg
shlb
jp
mov
clc
mov
mov
xchg
or
mov
ret
lcall
ja
xor
stos
pop
xchg
iret
aas
nop
mov
pusha
ja
movsb
add
loop
cmp
and
push
and
jmp
subl
inc
cs
fnsave
leave
cmpb
sub
sti
jg
cmpsl
shll
pusha
and
rolb
inc
add
addl
sbb
cmpsb
in
not
fcos
pop
in
fiaddl
cmp
mov
stos
loope
and
stos
loope
mov
or
aam
adc
test
aad
mov
int3
mov
test
mov
sub
rcrb
add
add
pop
fldt
xchg
repz
dec
lahf
mov
cmp
mov
popa
incl
dec
test
outsl
add
repz
push
pusha
add
push
sahf
adc
lods
aas
lret
add
call
nop
adc
gs
xor
adc
adc
and
jecxz
andl
mov
sbb
stos
orb
pop
add
push
xchg
inc
add
and
add
andb
clc
sub
stos
call
add
xchg
push
add
aas
jns
mov
xor
push
mov
int
xorb
mov
mov
mov
xchg
jnp
sub
jmp
pusha
decl
shrb
mov
pusha
or
sub
stos
inc
loopne
mov
mov
mov
xchg
adc
lock
or
sbb
add
push
call
pop
pop
inc
mov
lods
aaa
lock
push
imul
imulb
add
adc
ficoml
iret
testb
lock
ljmp
and
sub
ljmp
jb
ss
scas
ret
jg
lock
adc
fcoms
fildll
jnp
add
push
repz
add
adc
lods
loop
lods
je
add
out
add
add
or
adc
je
mov
test
jno
nop
mov
fisttps
add
roll
cmpb
add
jno
loopne
mov
inc
add
outsl
pop
cld
lock
rolb
shlb
mov
ficoml
sbb
push
dec
pop
sar
das
clc
or
mov
jno
mov
sub
add
outsb
fildll
push
pop
rolb
push
popa
pushf
jle
imulb
mov
imul
and
push
je
and
out
rorb
addr16
add
nop
cs
add
jbe
loopne
test
cltd
ret
pop
add
push
xchg
mov
add
adc
adc
pop
pop
in
add
push
pop
mov
mov
add
cmp
lods
xor
arpl
add
mov
sbb
add
add
add
xchg
add
and
push
mov
es
adc
jle
cmp
fdivr
jg
or
add
sbb
xor
jo
or
and
insb
fimull
pop
add
jg
pop
popa
in
lods
adcl
bound
and
mov
das
pop
mov
sub
stos
daa
int3
pop
cmp
push
lds
rolb
add
lods
fnsave
sbb
aas
pusha
sub
rolb
and
and
test
incl
mov
or
add
push
mov
mov
cld
jo
fdivp
test
insb
adc
int3
mov
or
xchg
mov
push
xor
xchg
mov
sti
pop
add
push
test
mov
repnz
dec
pop
sub
sbbb
push
xchg
xor
or
adc
adc
jo
dec
jb
jo
xor
in
aad
push
jl
daa
in
adc
and
inc
jg
icebp
adc
adc
nop
sub
mov
incl
imul
les
mov
mov
outsl
outsl
lcall
aas
inc
jo
out
mov
mov
sub
arpl
push
cs
adc
add
mov
and
inc
push
cld
mov
mov
jmp
pop
add
push
sbbb
sti
data16
pop
inc
push
add
push
aas
mov
aad
and
jg
popf
mov
daa
mov
or
movsl
push
bound
ljmp
or
mov
call
scas
out
jae
shl
shl
pop
loopne
adc
outsb
lahf
lahf
mov
mov
push
mov
mov
cmp
push
fprem
jg
fdivl
push
ljmp
push
ss
shrb
fisubs
xorb
push
repnz
sarl
shl
add
cwtl
pop
xor
inc
dec
rcrb
inc
push
or
bound
insb
adc
or
pop
ljmp
popf
shlb
inc
mov
roll
andb
in
pushf
mov
cmp
pop
test
enter
pop
subb
add
adc
fistpl
adc
sub
nop
dec
cmp
call
aam
push
xor
sub
mov
pusha
rcrl
cmp
loopne
xor
incl
cld
scas
filds
cmpsb
xchg
jb
and
push
sub
stc
pop
rorl
sbb
adc
sbb
popa
ret
and
in
push
xor
adc
pop
hlt
mov
adc
lcall
inc
push
test
pushl
jle
fistps
sub
or
popf
sub
xor
data16
or
xor
ret
outsb
js
loopne
sub
pop
push
push
mov
sub
movl
or
lock
add
incl
xor
mov
dec
xor
aaa
out
clc
cmp
push
xor
shrb
fcom
jg
adc
shll
aam
call
aad
add
mov
mov
stos
dec
pop
add
mov
lds
mov
out
in
fcoml
push
adc
add
xorb
mov
rolb
mov
sub
imul
sub
leave
js
adc
outsl
mov
call
and
xchg
mov
add
or
pop
inc
pop
movsb
lock
mov
mov
add
jmp
test
pop
mov
and
sub
rclb
dec
mov
add
add
iret
mov
add
pop
adc
sbb
xorl
mov
shrb
aas
and
pop
subb
aas
leave
inc
jecxz
xchg
aas
xchg
loope
cli
mov
repz
pop
lret
sub
or
sbb
add
or
andps
add
lcall
mov
mov
flds
test
aad
imul
add
sub
and
push
into
cmp
addl
sbbb
hlt
pop
ljmp
and
xchg
outsl
add
repnz
pop
js
jmp
mov
lea
xor
mov
test
mov
or
mov
cmp
mov
repnz
push
push
enter
pop
add
mov
out
xchg
iret
cmpl
xchg
push
insl
rcll
lahf
add
adc
les
aas
ret
mov
loop
or
sub
mov
mov
jg
mov
jle
mov
inc
add
adc
sub
push
or
xchg
lret
clc
ljmp
sub
sbbl
xchg
add
mov
push
ljmp
sub
adc
aaa
fdivr
xor
int
cmpb
femms
imul
nop
adc
sbb
fidivrl
push
sbb
or
sbb
add
out
lret
push
xor
or
sub
pop
adc
push
mov
push
mov
or
inc
orb
add
js
or
cwtl
cmpb
lret
push
xor
or
sub
in
sub
cld
call
mov
and
and
adcb
in
mov
adcl
test
mov
out
push
std
int
push
frstor
adc
xchg
mov
and
or
cmp
je
nop
leave
andl
sub
add
jb
sub
aas
or
add
xchg
ret
mov
icebp
js
and
test
xchg
add
dec
ljmp
and
fidivrs
jge
adc
mov
lock
inc
add
or
scas
das
call
test
hlt
push
lock
pop
pop
or
ds
pusha
pop
imul
in
push
cmp
cmp
sbb
inc
in
mov
pop
add
shll
shll
xor
add
pop
xor
pop
jne
rcll
inc
adc
mov
mov
mov
aas
loope
test
add
sti
ljmp
repnz
test
push
xchg
hlt
inc
cmp
xchg
shll
add
adc
shrb
fisttpl
xchg
js
or
mov
xchg
pop
jbe
pop
inc
mov
shlb
leave
test
roll
push
in
sub
sub
inc
mov
pop
push
pop
xchg
xchg
add
lcall
sbb
xchg
aam
dec
rcll
fwait
xchg
aas
pop
ret
scas
or
rorb
add
es
bnd
add
fisubl
push
imul
daa
scas
pop
test
fcmovnu
pop
les
dec
add
add
pop
mov
rorw
jae
sbb
adc
scas
imull
adc
pop
loopne
pop
js
inc
ss
pop
clc
jle
shlb
sbb
and
cwtl
mov
shlb
add
xor
push
cld
push
push
nop
test
stos
xchg
mov
enter
pop
lock
outsl
mov
ret
adc
mov
adc
and
lock
add
cltd
mov
mov
mov
ja
aas
push
adc
orl
pusha
pop
ret
call
imul
xchg
orb
xor
or
aas
scas
rolb
mov
rcrb
mov
push
and
into
loopne
xchg
in
in
mov
and
fcoms
pop
adc
sub
sbb
cmpsb
movb
cli
outsl
insl
imul
inc
add
mov
in
and
push
sgdtl
xchg
in
pop
sub
enter
pop
sahf
mov
inc
push
adc
add
pop
icebp
idiv
xchg
aaa
stos
push
add
loope
call
and
or
push
in
add
xchg
mov
fisubs
out
adc
test
out
pusha
sbb
push
in
inc
sub
xchg
mov
test
mov
inc
aam
loopne
mov
mov
cld
mov
sub
scas
outsl
push
pop
inc
push
cld
inc
push
mov
push
add
push
mov
lock
sub
xchg
das
fcoms
and
xor
add
adc
cli
jmp
scas
das
pop
stos
or
aas
rolb
and
mov
lods
aam
insl
shlb
push
or
pop
inc
lds
add
sub
and
aad
sahf
ds
or
push
mov
movb
pusha
or
loope
xchg
dec
push
addr16
cwtl
adc
lock
clc
pop
mov
mov
inc
pop
rcl
nop
filds
pop
cmpsb
pop
mov
push
adc
mov
xchg
sbb
sbb
add
mov
stos
xor
adc
add
jecxz
mov
pushf
pop
mov
push
movl
pop
and
add
in
pop
push
mov
outsl
xchg
sub
inc
testb
out
out
and
sub
arpl
repz
or
testl
mov
jnp
repz
repz
jns
in
or
repz
aas
push
mov
add
cs
add
add
fcmovbe
mov
lcall
mov
lret
pop
popa
xchg
pop
xor
sub
das
les
or
aas
incl
sub
sahf
fcoms
pop
arpl
inc
dec
popf
inc
and
cmc
out
push
and
pusha
xchg
aad
adc
ja
add
idiv
jg
dec
aas
sbb
popa
sbbb
filds
mov
out
dec
mov
das
sub
jge
fisttps
fildll
loop
add
mov
movsb
mov
insl
pop
out
repnz
and
fisubl
xor
mov
mov
in
mov
mov
sub
shll
dec
cmp
imul
or
ret
or
push
stos
mov
pushw
inc
adc
mov
xor
or
mov
adc
or
nop
add
rorb
xchg
cmpsb
or
in
popa
pop
mov
add
or
mov
jnp
jo
loopne
cli
outsl
fwait
in
push
push
sub
fst
add
out
loop
lock
sub
push
add
inc
and
xchg
nop
sub
rcrl
scas
adc
and
inc
adc
std
and
add
jecxz
out
add
movsb
jo,pt
test
inc
mov
lahf
pushf
fstl
repz
sarb
aad
popf
rolb
faddl
in
push
mov
inc
lret
data16
lcall
push
mov
and
xchg
fists
xchg
rcl
imul
and
mov
jecxz
addb
std
in
pusha
and
das
and
or
push
hlt
pop
daa
ret
out
ljmp
add
inc
mov
call
loop
mov
cld
orb
and
add
scas
push
shlb
xchg
push
sbb
xchg
pop
sarb
scas
notrack
or
inc
out
movsb
loop
jmp
jp
movl
clc
testl
lock
fsubs
mov
mov
addr16
incl
out
enter
and
jecxz
add
popa
jb
or
sbb
pusha
notl
decl
stos
mov
and
subb
subb
mov
lret
aas
push
jg
call
xor
and
fdivp
add
rolb
cmp
mov
les
incl
xchg
test
push
and
xor
iret
aas
and
andl
xchg
mov
pop
cmp
pop
out
xchg
iret
pusha
fsub
or
add
shll
and
cld
xchg
test
push
icebp
inc
mov
outsl
idiv
or
and
stos
fcmovnu
xchg
add
fldt
or
les
nop
aam
xorb
adc
add
sbb
nop
inc
add
clc
adc
jecxz
clc
fistpl
adc
push
es
push
and
cmp
mov
mov
sub
mov
inc
sbb
mov
fists
sahf
mov
inc
mov
adc
pop
jo
cmp
mov
add
movl
fcmovbe
sbb
rcl
sbb
push
push
sub
je
outsl
add
enter
andb
adc
xor
pop
pushf
push
cmp
add
aas
mov
adc
pop
sub
mov
sbb
sub
out
mov
cltd
fildl
rclb
in
jmp
xchg
adc
xchg
fs
adcb
inc
add
loope
aas
mov
mov
and
inc
daa
xchg
push
sub
or
stos
and
push
das
in
ret
out
xchg
sub
cmp
lods
push
inc
xor
pop
or
movsb
mov
lock
jno
clc
cmpsb
and
xchg
pop
lahf
sub
inc
xchg
fmul
fiaddl
push
add
roll
lret
jno
into
pusha
or
inc
mov
into
lret
aam
xor
jmp
push
out
push
std
fistps
loope
mov
push
out
adc
xchg
add
xchg
iret
lods
jge
fwait
int3
push
or
mov
lock
shrl
in
hlt
nop
add
cmpsb
sbb
push
shl
jnp
cli
decl
dec
lret
sbb
xchg
push
pop
push
push
xor
push
and
stos
pop
xchg
ret
loopne
inc
dec
mov
pop
and
sbb
inc
lock
negb
mov
leave
popa
ds
loopne
int
push
push
fisubs
clc
lret
add
out
rclb
sub
clc
adc
cmp
sbb
fadds
pop
popa
mov
push
in
sub
insb
repz
out
pop
mov
stos
mov
push
mov
das
jecxz
std
call
aas
cmp
bound
add
out
aas
lods
mov
cs
or
and
jae
and
sub
lods
xor
incl
fidivl
addr16
cmp
mov
es
add
add
push
decl
ja
cld
jle
loop
loopne
nop
push
ja
adc
sub
stos
inc
jg
mov
rolb
xor
or
add
sub
mov
mov
push
lock
flds
inc
push
push
ds
xor
out
es
andb
aas
adcb
adc
je
add
pop
xchg
out
aas
repz
jge
fisttpl
shrl
xchg
sbbb
adc
add
mov
lret
ret
cmp
mov
rol
add
cmp
cmp
divl
and
mov
aas
pop
add
add
scas
pop
hlt
decl
mov
adc
cmp
add
push
inc
rcll
mov
out
mov
sarb
adc
loope
mov
mov
and
sarl
push
push
rcll
add
fidivrs
pop
call
pop
jno
aas
push
repz
inc
icebp
js
mov
stc
rclb
ret
pop
aad
mov
fstpt
fbld
cwtl
pop
or
mov
pop
ss
iret
dec
pusha
js
outsl
clc
inc
adc
fs
xchg
nop
mov
sub
mov
add
mov
push
fistpl
add
js
std
xchg
xchg
xor
add
subb
jns
inc
inc
or
ret
mov
adc
rcll
dec
fists
pushl
cmp
loopne
cmp
lock
insb
ret
add
mov
fwait
orb
leave
jecxz
loop
sbb
iret
pop
push
adc
adc
pop
faddl
inc
add
cli
jle
push
mov
or
add
xchg
nop
cmp
pusha
add
test
adc
xor
or
jb
push
xchg
push
mov
fmuls
ficomps
test
xchg
testb
addb
fcmovnu
ljmp
ffreep
data16
inc
sub
loopne
inc
sub
sbb
and
add
decb
fdivs
xor
sbb
add
add
fiaddl
add
movsl
add
mov
cmp
or
adc
adc
test
add
loop
jle
sbb
movsl
push
enter
scas
pop
movsb
pop
or
sbbb
stos
pop
aas
mov
add
jg
add
add
sarb
outsl
cmp
or
add
adc
pop
cmpl
aas
incl
ss
mov
subl
icebp
mov
iret
xchg
cmp
popf
and
dec
fisttpl
repnz
subl
add
and
pop
mov
ret
push
add
pop
or
push
mov
ljmp
pop
jo
and
imul
es
test
aas
dec
push
add
sbb
push
jg
aas
xchg
sbb
xchg
cmpsl
add
mov
orl
add
leave
or
shlb
push
cmpsb
fcomps
push
cwtl
add
or
add
xchg
dec
dec
xchg
push
aas
iret
cmc
scas
insl
cmc
inc
adc
inc
fdivs
shlb
or
leave
add
add
rclb
rcll
stos
ret
shll
inc
popa
fucomip
aas
inc
pop
push
jl
inc
or
adc
je
stos
adc
mov
call
dec
inc
xchg
pusha
mov
lcall
xchg
hlt
data16
mov
das
push
inc
cmp
push
je
add
sbb
pop
jle
add
mov
add
mov
inc
cmpsl
lret
rcll
xchg
sbb
inc
sub
mov
sbb
cmp
loopne
incl
add
or
in
adc
adc
adc
pop
rorl
add
inc
add
andb
pushl
cmpsb
es
int3
push
pop
rclb
std
filds
subb
cltd
sub
pusha
aas
pop
and
outsl
or
notb
inc
add
inc
pop
rol
sub
stos
pop
call
and
mov
outsl
lcall
add
lods
fistps
add
rcrl
adc
addl
stos
and
mov
and
mov
roll
fiaddl
push
aam
fdivl
call
sbb
push
jp
loope
loopne
or
enter
subb
push
cli
das
clc
add
ret
cld
daa
pop
fcmovnbe
pop
into
in
sbb
fucomi
nop
xchg
in
loop
movsl
cmp
and
add
adc
cmp
and
fbld
and
data16
filds
loopne
movsb
int3
in
pop
mov
insb
mov
pop
loope
add
in
and
mov
jb
addb
jecxz
incb
jbe
pop
bound
sub
out
mov
or
and
in
add
pop
mov
aas
decl
push
sbb
mov
cmpsl
and
xchg
movntps
add
add
add
or
mov
push
add
rcrb
inc
cs
xchg
clc
pop
std
mov
or
inc
stos
les
aas
xchg
push
sbb
insb
adc
andl
int
or
mov
mov
pop
or
push
pop
lock
mov
aaa
inc
ret
mov
outsl
aas
aad
movb
cltd
loopne
or
push
dec
inc
pop
push
inc
aam
jb
scas
push
mov
dec
orl
mov
clc
jg
adc
or
mov
test
pop
test
mov
mov
aaa
xchg
jmp
aaa
addb
das
xchg
sub
mov
into
push
cmp
pop
nop
loopne
cmp
mov
adc
rclb
lods
fucomi
orb
pop
mov
rolb
mov
add
sbb
inc
or
pop
dec
out
sub
hlt
mov
sub
add
jg
cmpsb
lret
and
dec
fisubs
add
cs
mov
adc
es
add
sbb
xor
jno
fistl
fcoml
push
and
xor
addr16
and
fcomip
outsl
inc
mov
mov
and
or
xchg
ja
and
incl
mov
ss
sbbb
decl
loop
fcoml
inc
add
add
mov
incl
push
test
jae
mov
mov
sub
mov
or
adc
sub
mov
fisttps
push
sub
pusha
or
mov
inc
mov
jp
pop
mov
aas
xchg
adc
pop
add
push
add
in
call
mov
and
mov
and
adc
dec
jb
pop
out
push
ljmp
xor
testl
stos
out
and
xor
add
stos
adc
iret
jl
and
jmp
fcoml
push
sub
mov
add
in
xorl
and
and
test
rorb
sub
add
stos
sub
jno
push
pushf
insb
or
vucomiss
cmpsl
hlt
mov
enter
loope
sbb
aas
push
mov
filds
fisubs
outsb
mov
mul
testb
xor
mov
repz
push
or
out
test
out
mov
mull
sbb
sbb
xchg
push
test
add
ljmp
mov
divb
push
fbstp
faddl
and
xchg
pop
nop
lret
pop
xchg
add
xchg
mov
sbbl
push
sarb
and
and
jo
push
call
repz
mov
es
pop
mov
mov
xchg
fsubs
in
add
and
jb
cmpb
das
lock
pop
hlt
outsl
and
test
jno
inc
inc
inc
or
loopne
aas
shll
push
xor
mov
in
insb
pop
push
cli
sbb
ljmp
test
stc
adc
daa
in
in
and
mov
test
adc
or
sbbl
xchg
imull
fs
das
push
xor
push
les
or
push
roll
push
movsb
lahf
adc
jg
xchg
mov
movsb
nop
pop
ret
pusha
xor
push
decl
inc
pop
rolb
or
sub
je
lret
mov
add
add
in
sbb
and
js
cmp
cld
cmp
pop
push
adc
nop
pop
mov
movsb
aad
add
jp
ret
std
push
pop
adc
aas
add
mov
inc
pop
icebp
insl
add
or
bound
sti
cmc
in
mov
nop
ret
addb
lods
mov
push
inc
sub
std
fbstp
pop
loop
push
mov
subl
xchg
inc
add
xchg
repnz
fsts
cld
decl
dec
nop
xorl
add
mull
lock
fiaddl
pop
mov
mov
test
xchg
clc
mov
adc
mov
mov
lret
push
adc
pusha
mov
fwait
shrb
outsl
add
sub
and
out
push
jg
dec
add
cwtl
nop
cmp
sub
mov
mov
add
or
xchg
lods
xor
or
mov
mov
inc
aad
cld
add
adcb
pusha
scas
xor
and
and
clc
pushl
push
aaa
and
inc
add
pop
bound
pusha
sahf
nop
incl
aaa
insb
testl
aas
cmp
push
mov
out
sub
fwait
pop
cli
inc
in
sbb
divb
subb
imul
sar
xorb
ja
in
adc
cli
xor
popf
rclb
in
add
sub
mov
jg
pop
adc
mov
add
push
adc
cltd
mov
roll
clc
icebp
push
sub
jns
lock
pop
loope
fadds
pop
add
cmp
ret
icebp
dec
xchg
push
movsb
adc
mov
mov
rcl
push
adc
dec
jbe
push
daa
jg
out
or
pop
and
dec
cltd
fmuls
inc
and
cs
sbb
sbb
add
fbstp
cmp
or
fistps
pop
or
je
cld
gs
add
jo
shlb
jg
pop
andb
insb
cmpb
aas
inc
test
jo
lcall
notl
repnz
and
mov
ret
lock
bound
out
sub
std
insl
lds
shlb
lcall
sub
xlat
push
mov
or
mov
jns
ret
xor
hlt
pop
xor
pop
add
adc
cmpl
dec
test
ficoms
es
rorb
sub
add
aad
mov
arpl
mov
push
inc
xor
pusha
cwtl
shl
inc
add
pop
xchg
pop
dec
insl
add
push
add
pop
out
loopne
pop
mov
add
addb
xchg
subb
jl
xchg
in
push
mov
xchg
stos
stos
daa
cmp
shll
sbb
mov
pop
int3
mov
lock
ffreep
fildl
nop
mov
ret
adc
dec
jo
ret
in
pop
cmp
cmp
flds
outsb
rolb
inc
jo
fcoms
push
add
js
and
add
push
or
adc
dec
adc
push
mov
pop
mov
addb
shlb
add
daa
add
ss
mov
xchg
inc
xor
pop
push
sbb
in
outsl
mov
push
dec
lcall
xor
or
or
incb
rolb
pop
lock
adc
ljmp
loopne
xchg
pop
adc
xchg
pop
inc
push
js
dec
xchg
adc
add
aas
out
adc
jl
inc
shr
add
push
xor
test
jg
adc
mov
jg
aas
xor
xchg
stos
pop
sub
and
and
mov
pushf
cmpsl
or
aad
jecxz
xchg
mov
lods
and
mov
cmp
and
jmp
xor
mov
add
sub
movsb
jg
sbb
roll
fsub
andl
and
pop
aas
mov
push
xchg
test
or
sub
into
pop
and
popa
outsl
xchg
inc
push
add
ffreep
and
mov
xrstor
fcmovbe
loopne
aaa
in
clc
stos
cmp
push
push
scas
fstpt
ljmp
sbb
push
nop
mov
sar
loope
cmc
fists
nop
or
fmull
jae
adc
scas
lds
sarl
xor
and
inc
lock
mov
xor
mov
and
aas
sahf
aas
push
xchg
pop
mov
in
mov
fcomps
jb
daa
lods
xchg
push
imul
inc
das
pop
pop
js
cwtl
add
mov
ljmp
jo
add
push
repnz
adc
loope
call
ret
push
stos
mov
mov
out
mov
add
in
add
mov
sub
sbb
dec
shrb
movl
sub
xor
fsubs
shrl
sbb
and
inc
sub
clc
add
data16
jo
aaa
adc
and
cmp
pop
mov
xchg
aas
jg
sub
addb
push
add
fiadds
inc
daa
and
add
sub
mov
mov
xchg
and
and
test
add
out
lods
hlt
or
xor
mov
ret
out
test
pop
xchg
push
pusha
lock
shrb
and
je
add
mov
push
or
xchg
filds
add
or
nop
or
test
jle
or
nop
push
adc
or
clc
jmp
xchg
or
or
aad
pop
lea
xchg
aas
testl
shlb
aas
and
or
push
lahf
hlt
xchg
rcrl
add
shlb
push
or
lret
push
push
sarb
or
rcrb
add
add
clc
and
xchg
inc
pop
add
mov
cmp
mov
aaa
add
rolb
push
fs
mov
pop
sbb
fimuls
ds
add
mov
stos
or
into
stos
xchg
xchg
add
sub
jo
ljmp
cmpb
aas
inc
adc
enter
add
add
mov
stos
jl
add
pop
mov
xchg
faddl
jbe
adc
nop
and
mov
xchg
mov
mov
add
insb
xor
repnz
ret
cmp
sub
mov
add
mov
loop
jbe
andb
xor
je
add
inc
add
adc
mov
lock
cmp
pop
push
xor
fisttpl
sub
call
add
xor
sahf
or
mov
xchg
or
std
insb
fwait
push
or
adc
inc
xor
or
gs
add
jg
enter
les
mov
mov
cli
xchg
adc
out
mov
cmp
fwait
inc
xchg
mov
fcmovnu
xchg
mov
or
andb
add
jo
fildl
push
lcall
lea
adc
add
pushf
sub
aaa
fcompl
fildl
and
add
aam
test
lahf
mov
out
and
dec
out
shll
rolb
outsl
push
or
inc
cmpb
fbld
add
pop
nop
ds
cmp
adc
in
ss
mov
rep
add
cmp
adc
inc
lret
outsl
negb
iret
subb
inc
sbb
push
push
mov
mov
call
cmpsb
inc
roll
xor
cli
cmpsl
clc
sbb
adc
mov
xchg
fildl
inc
test
stos
fbld
scas
pop
mov
fisubl
xchg
or
subb
orb
incb
fcom
daa
dec
dec
cld
outsl
jle
fistpl
fcoms
insb
shll
push
or
loope
pop
ret
test
push
add
cmp
push
test
pop
aaa
jg
in
mov
ds
push
cwtl
lret
push
in
fcom
pusha
jg
lods
or
jl
add
rcrb
lcall
add
pop
and
aam
pop
rolb
rcll
add
xor
ret
lret
jmp
pop
es
add
fistpll
stos
test
aaa
outsb
adc
or
push
scas
dec
push
push
dec
add
push
cmp
dec
fildl
lods
loop
push
inc
add
and
inc
mov
mov
xchg
in
sub
or
xchg
inc
rcll
sub
out
xchg
fisubrl
jp
sub
sub
sub
cld
idivb
aam
add
xchg
roll
sbbl
cwtl
in
or
or
add
in
outsl
dec
adcb
cld
adc
or
jmp
sbb
jbe
ds
xorl
stos
sub
ljmp
adc
mov
push
jbe
lock
pop
mov
aas
mov
popl
loope
ret
fdivs
adc
into
cmpb
sub
stos
jae
je
or
stos
sub
or
mov
ljmp
movsl
xor
pop
push
sub
movsl
cmp
lcall
mov
dec
xor
pop
orl
loopne
push
stos
and
mov
stos
test
xchg
andb
pop
xchg
add
mov
inc
pop
push
push
rorl
adc
xchg
add
jecxz
test
loopne
or
jmp
jmp
stos
or
add
ljmp
cli
add
aas
enter
add
pop
fsubrs
decb
jo
rclb
dec
prefetch
or
rolb
roll
roll
scas
call
push
sbb
push
pop
add
adc
mov
test
pop
mov
pop
ljmp
decl
bound
add
add
and
cld
mov
sbb
ljmp
movsb
xor
cmp
pop
xchg
shll
pop
add
fistl
mov
aam
fadds
enter
mov
subl
inc
adc
add
cmp
movsl
or
clc
subl
lcall
outsl
sub
and
testb
pop
mov
mov
scas
adc
sahf
pop
cwtl
jmp
iret
pop
and
shrl
dec
insb
pop
push
mov
add
aaa
cld
and
lcall
and
sbb
inc
xchg
aas
xchg
inc
and
repnz
aam
jl
jmp
adc
test
in
fbld
xchg
pop
mov
addb
cs
xchg
clc
fists
shrb
cmp
and
into
pop
adc
mov
les
jno
add
add
in
loope
and
and
dec
int3
pop
and
inc
push
xchg
adc
adc
jno
sahf
rcrb
decl
shrl
ss
mov
mov
or
cmpb
pop
mov
xchg
femms
sbb
pusha
pop
mov
loope
pop
aas
push
dec
add
push
pop
push
and
out
mov
xchg
push
lods
mov
stos
adc
push
ss
inc
scas
add
sahf
push
push
sub
pushl
inc
mov
out
pop
mov
lock
and
mov
add
jp
mov
loopne
subb
cs
and
mov
int3
les
xchg
loope
add
fsubs
inc
xchg
mov
push
mov
adc
repz
aas
inc
movsl
push
icebp
add
cmp
aaa
sbb
push
shrl
bound
add
add
mov
out
add
inc
cmp
mov
adc
aas
mov
or
pusha
inc
mov
and
or
mov
xchg
push
sbb
pusha
xor
jp
mov
addr16
fists
dec
ja
loopne
cmp
add
pop
sbbb
push
cs
push
dec
icebp
mov
push
in
pop
add
loopne
mov
fistpll
daa
pop
dec
lret
xchg
jg
push
jnp
rcrl
cmp
xor
stos
outsl
adc
adc
or
sub
mov
loopne
in
mov
call
lock
adc
aam
icebp
xchg
jo
sub
and
jecxz
inc
imul
adc
aam
sbb
adc
test
adc
pop
ja
sub
jp
jecxz
jg
cmp
mov
push
jecxz
in
mov
aas
jbe
lock
lret
xor
add
hlt
dec
mov
xchg
repz
rcrb
inc
lds
stos
mov
and
aas
pop
add
adc
outsl
pop
add
and
aas
orl
push
push
lea
xchg
adc
shlb
das
add
es
and
loopne
or
inc
push
jbe
jnp
xor
jp
add
insb
cmp
loopne
daa
push
mov
scas
insb
mov
inc
sub
fistpll
mov
cltd
push
loopne
mov
push
mov
movsb
adc
add
xchg
nop
xchg
pop
hlt
fwait
xor
sub
aas
inc
jb
inc
addb
or
add
dec
mov
call
and
pop
mov
loope
fidivl
add
and
xor
sub
repnz
shlb
add
loopne
scas
push
pop
add
adc
fistl
fildl
loopne
push
add
ret
add
jno
and
or
int
sub
add
testb
inc
cmp
pop
pop
insb
loope
dec
inc
push
pushw
std
pop
cld
mov
incb
push
add
shr
divb
jmp
mov
mov
in
cmp
fs
js
insb
fs
cwtl
nop
pop
rcrb
shlb
sub
loope
adc
aas
xor
loop
fsubrs
fbld
iret
lahf
fsubrs
out
loopne
pusha
pop
push
lahf
mov
incl
das
add
push
sub
mov
sub
aas
pop
jbe
mov
inc
push
inc
adc
aaa
or
scas
mov
scas
add
and
xchg
fstpt
es
sbb
jno
js
push
lods
pop
mov
movsl
sti
mov
test
fisttps
lret
mov
aas
sub
mov
adc
xchg
pusha
imul
in
pop
lock
add
and
push
mov
clc
jge
or
jbe
or
addb
push
mov
int3
enter
mov
andb
lods
sti
and
aas
cmp
push
std
cltd
xor
adc
inc
inc
jno
jmp
fiaddl
clc
adc
movsl
loopne
and
fildl
ret
mov
lock
fisubrs
adc
pushl
jecxz
jg
xchg
push
jmp
jo
das
nop
ja
add
push
shrb
test
cmp
add
ds
push
pop
push
ds
jecxz
add
mov
pop
sub
mov
sbb
sbb
popf
jb
xchg
jecxz
and
jge
fmuls
outsb
xor
ds
cld
cmpb
dec
nop
aas
neg
popa
mov
add
pop
in
fucomip
shlb
aas
int
rcr
mov
insb
mov
adcb
lods
in
inc
ret
das
mov
push
lods
add
cwtl
shll
push
mov
fld
pop
imull
std
das
clc
fbld
icebp
adc
sbb
adc
adc
faddl
add
ret
ljmp
mov
mov
mov
xchg
clc
or
or
adc
push
inc
push
add
mov
xchg
or
mov
fistps
fnsave
rclb
aad
ss
push
ficompl
push
xchg
in
xchg
jmp
mov
add
add
xorb
fimuls
or
add
dec
shl
jmp
add
cmp
add
sbb
add
pusha
cli
pop
cwtl
mov
popf
xchg
or
fisubrs
loopne
fsubs
ds
mov
push
call
and
mov
fs
jmp
fadds
mov
ret
lahf
aam
xchg
in
loop
fcomip
sbb
icebp
ret
shlb
mov
push
mov
scas
cli
outsl
cld
jnp
pop
mov
xor
pop
adc
jno
jb
push
bound
rolb
pop
mov
test
rcrl
add
rorb
cwtl
test
add
pushf
cld
outsl
add
daa
jle
js
xor
or
mov
xor
inc
xchg
push
adc
shlb
test
addl
adc
push
mov
or
adcb
call
adc
lcall
jmp
cli
or
and
add
jb
daa
pop
icebp
jg
adc
jo
faddl
push
sbb
pop
nop
ficoms
add
add
mov
pusha
and
adc
aad
xor
mov
ficoms
out
push
lock
mov
test
das
es
fisubrl
push
pop
sbb
clc
test
pusha
dec
xchg
das
dec
pop
in
adc
in
iret
push
cmp
inc
out
lret
mov
add
stos
shrl
adc
push
hlt
push
pop
sbb
addl
aaa
daa
test
out
fcoms
xor
iret
pop
fsubp
cmp
xchg
cmp
push
out
repnz
xchg
sbbb
adc
xchg
push
adc
add
mov
fistps
sub
add
pop
lea
loopne
adc
xchg
xor
dec
fcoms
lcall
and
push
aam
lcall
push
das
jl
and
and
sub
push
pusha
add
pop
popa
pop
add
mov
and
or
sub
or
sbb
dec
fsubl
cld
sbb
sub
xor
cwtl
test
xor
or
mov
push
test
dec
mov
incl
in
push
and
add
mov
xor
ret
in
insb
xor
sbb
test
adc
mov
stos
or
out
push
pop
mov
dec
rcr
sub
aas
addr16
jg
jmp
adc
add
add
in
insb
outsb
pop
daa
mov
clc
in
incl
lea
rcrl
movsl
enter
add
in
mov
pop
stos
ljmp
lock
mov
scas
mov
adc
ss
jbe
cmp
sarb
sub
sub
mov
mov
stos
and
shrl
push
movsb
push
lcall
and
mov
push
shlb
push
lcall
push
sub
jo
clc
mov
sar
or
add
add
pop
adc
mov
fistps
adc
sarl
cmp
add
ja
or
pop
jno
pop
sub
es
rcrb
jp
int
lock
ret
cld
mov
cwtl
subb
push
add
xchg
xor
cs
jle
sub
hlt
loopne
jbe
dec
dec
inc
push
fdivrs
decb
pop
add
pop
cwtl
rcrl
cld
push
test
aam
insl
inc
jae
inc
xor
inc
test
cmp
scas
mov
roll
pop
aas
clc
add
and
mov
add
mov
mov
push
and
das
addb
pusha
and
in
andb
mov
aas
mov
das
pop
mov
loopne
mov
pop
fwait
out
fdivrl
mov
fcmovnu
pusha
add
fildl
sbb
in
sbb
adc
rcr
nop
pop
jbe
add
or
aas
sbb
pop
lret
sub
dec
fadd
push
push
push
daa
push
fs
ljmp
push
out
and
lcall
or
aam
aas
in
or
pop
in
mov
pop
xorl
lods
push
mov
jne
jg
or
pop
outsb
add
or
mov
adc
or
sub
clc
aaa
xor
or
add
cld
add
fadds
sbbb
push
ret
xchg
inc
add
mov
mov
push
and
int3
sbb
aas
adc
negb
add
js
mov
xchg
fnsave
roll
loopne
in
or
xchg
nop
mov
mov
add
cmp
sub
xchg
sub
aas
lods
sub
outsl
ljmpw
xchg
rcll
push
in
add
roll
jbe
inc
dec
add
popf
mov
loope
popa
aaa
mov
into
mov
ret
pop
xchg
lret
mov
fcoms
stos
jne
shlb
or
xchg
aam
dec
je
jl
sbb
orb
mov
stos
ds
xchg
and
insb
aas
mov
inc
cmp
mov
and
sbb
sbb
fs
cwtl
or
add
pop
rolb
xchg
add
ret
or
sub
pop
test
sub
das
js
mov
shr
fildl
mov
adc
aam
sarb
and
ret
mov
call
pop
pop
mov
cmp
imul
ret
mov
in
add
aam
pop
addb
mov
adc
fcmovnbe
add
js
cld
paddq
push
push
and
adc
push
xchg
aas
and
in
sarb
inc
int
ss
inc
or
mov
pop
mov
add
and
xor
orb
adc
add
inc
fisttps
or
aas
mov
jecxz
dec
sbb
mov
jbe
sbb
add
nop
jp
adc
in
aas
sbbb
inc
add
loop
sar
mov
adc
xor
scas
add
mov
loopne
push
ljmp
cwtl
mov
pusha
and
add
push
xor
add
adc
mov
jp
xchg
inc
cld
push
push
push
or
or
subb
adc
outsb
sub
mov
les
adc
pop
add
shll
and
mov
ret
push
cmpsl
inc
outsb
mov
ret
or
addr16
fs
fiadds
dec
mov
addb
mov
xchg
rorb
mov
push
jecxz
xchg
pusha
add
inc
mov
push
add
int3
jp
iret
imul
ror
adc
clc
and
aad
add
adc
push
pop
cwtl
roll
mov
push
xchg
and
or
add
ret
or
and
ret
iret
insl
repz
or
lahf
aas
xor
pop
mov
jg
lock
mov
sub
adc
shlb
adc
mov
gs
shr
mull
ret
insl
inc
lahf
xchg
pop
call
ds
xchg
les
mov
fwait
jbe
loopne
sub
adc
lret
cmpsl
aas
jmp
dec
incl
push
xchg
aas
pop
mov
lahf
shlb
decl
ljmp
or
push
iret
movsb
or
adc
aam
ret
ds
popa
or
push
push
inc
add
sbb
sub
call
loopne
fwait
addb
mov
rorl
mov
mov
les
add
cld
xchg
cmp
stos
and
lcall
pop
rolb
mov
mov
sub
and
iret
and
sub
xor
out
clc
stos
aad
cld
adcb
push
sub
or
popa
aas
cmp
sub
dec
js
int3
mov
fldt
addb
test
add
pop
stos
dec
les
cwtl
out
push
add
inc
jg
cmp
icebp
stos
decl
aam
adc
test
mov
xor
jg
ja
cmpb
aas
ja
push
pusha
add
jb
js
push
jbe
xor
add
mov
bound
faddp
shrl
iret
call
call
cld
dec
inc
add
jecxz
aas
jne
and
roll
pop
stos
jo
comiss
enter
and
lods
xor
sbb
andb
push
ds
push
repnz
cmc
pushl
fisttps
inc
aas
cltd
pop
pusha
mov
mov
cs
testb
mov
mov
clc
and
call
not
addr16
mov
aad
or
pop
mov
adc
lahf
fldl
push
fistps
pop
push
pop
and
lcall
in
sbbb
movsb
lds
xchg
pusha
add
lock
push
add
mov
pop
mov
je
punpckhwd
add
xchg
sbb
loop
cmp
cmp
and
out
ret
fbld
mov
mov
test
sbb
cmp
mov
or
fs
loope
ret
pop
and
ss
loopne
subb
jae
loopne
adc
decl
lods
sarb
sub
inc
aaa
loopne
mov
test
out
clc
aaa
std
repnz
mov
dec
lahf
inc
cld
rcl
aad
xchg
jno
inc
xchg
std
cmp
pusha
pop
ret
mov
sub
int3
add
add
loopne
pop
or
jae
sub
push
aaa
or
ret
xor
adc
dec
ffreep
mov
jg
insb
dec
sbbb
add
and
aam
scas
das
in
imul
add
shlb
lcall
out
adc
test
and
lock
pop
push
push
outsl
add
nop
pop
adc
das
nop
lock
add
daa
jb
addb
sub
pop
loopne
call
or
fcoms
aaa
add
xchg
pusha
xchg
ja
iret
cmpb
shlb
or
sbb
decl
cli
das
in
cmp
jge
shrb
fs
add
sub
clc
dec
shlb
add
rclb
adc
add
sbb
nop
pop
mov
pop
inc
cwtl
and
shlb
push
das
dec
sbb
incl
push
mov
add
xor
mov
mov
es
push
or
and
fadds
outsb
or
pusha
pop
sub
fistpl
incl
cwtl
bound
mov
addl
mov
push
push
pop
or
ss
sub
stos
push
pop
roll
or
loope
pop
not
jno
dec
mov
add
popa
add
xlat
mov
out
add
xor
xor
mov
push
movsb
cmp
cmpsb
mov
dec
or
dec
xchg
push
cmpsb
and
das
cmp
or
jo
mov
pushl
jo
xor
sub
push
clc
scas
cli
fldl
add
add
adc
mov
adc
push
adc
push
insb
adcb
rorl
add
faddp
jle
shrb
adc
add
xlat
or
lret
mov
les
push
test
hlt
mov
cmp
pop
mov
mov
or
push
push
jo
push
cs
rcrl
adc
sbb
fidivs
arpl
rorb
add
stos
mov
sarb
jecxz
add
and
sbb
out
scas
fstl
mov
mov
mov
adc
es
mov
xor
inc
push
jo
test
mov
fbld
fsubs
fwait
adcl
xorb
inc
mov
ss
popf
push
out
loope
lods
data16
popa
lahf
lcall
aaa
pop
aam
sub
mov
iret
add
push
insb
add
mov
mov
mov
rcrb
mov
xor
pop
lahf
iret
aaa
pop
cmpb
popf
push
movl
inc
roll
add
aas
add
xchg
add
jbe
movsl
orl
clc
adc
fs
mov
mov
sub
add
jb
or
cli
sbb
std
push
jmp
adc
pop
mov
hlt
push
dec
jg
aas
pop
ds
sbb
mov
pop
loopne
dec
rcrb
mov
or
fcom
add
push
repnz
incl
mov
nop
lret
and
hlt
sub
pop
shll
jo
sub
cmp
cmpb
dec
push
repz
sahf
dec
decl
jg
sahf
loopne
aas
adc
inc
nop
xor
xchg
jl
jb
pop
fstpt
mov
aas
lea
or
push
adc
or
les
fists
xor
out
loopne
fcomp
mov
insb
cld
call
mov
loope
push
push
pop
xchg
adc
jge
nop
aaa
pop
cld
pop
cmp
xor
mov
bound
pop
push
pop
or
filds
or
ljmp
mov
ss
push
fwait
or
jmp
lock
je
nop
popa
xchg
pop
iret
inc
add
pop
adc
mov
test
and
pop
mov
nop
imul
enter
mov
pop
loop
icebp
inc
sub
push
iret
outsl
sub
stos
dec
or
je
mov
or
add
add
shlb
bound
ja
push
mov
adc
out
mov
or
jno
lret
jo
jmp
inc
xchg
cli
jbe
mov
into
xor
xchg
ds
dec
lahf
fimull
add
pop
or
lock
xor
js
in
sbb
adc
cmp
jle
inc
lods
lock
scas
js
push
test
aas
jge
lock
js
mov
shll
mov
push
adc
imul
cmp
or
fnstenv
rcrb
ja
clc
mov
push
xchg
xchg
xchg
popf
push
lcall
sub
movsb
inc
push
rolb
aam
scas
movsl
ret
mov
or
rdtsc
adc
ljmp
sub
xchg
or
filds
sbb
aas
dec
dec
loop
loope
jmp
nop
out
lock
call
aas
test
jns
pop
fcoms
loopne
stc
lcall
lock
pop
repz
fsubs
and
bswap
pop
lock
addr16
aas
cld
push
rorl
sti
shll
push
adc
xchg
ret
pop
sbb
and
loopne
icebp
add
stos
xchg
aas
push
add
push
stos
cmpxchg
and
jl
mov
popa
nop
add
cmpsb
mov
cmp
inc
pop
push
pop
lret
add
push
jo
lret
pop
cli
ja
and
dec
xor
adc
adc
adc
push
clc
lock
ljmp
mov
fmull
mov
test
push
add
shll
mov
cmpsb
adc
and
mov
pusha
mov
mov
dec
add
lock
pop
leave
dec
mov
icebp
scas
jo
xchg
aad
andl
add
cld
add
and
jno
filds
mov
test
cmpsb
idivb
into
add
sub
or
pop
adc
lcall
or
xor
adc
push
mov
stos
shrb
movsb
shrl
bound
push
enter
ljmp
pushf
sub
dec
pop
xchg
rcrl
mov
pop
mov
fs
add
orb
push
add
rcl
loop
cmp
shrb
xchg
inc
sub
das
pop
clc
push
subb
cmp
or
lods
std
rcll
aas
cmp
cld
test
popf
inc
add
add
aas
subb
or
loopne
bound
fdiv
push
sub
pop
imulb
ljmp
fisttps
pop
nop
mov
stos
xchg
jo
push
jle
and
add
aaa
inc
mov
ret
add
lcall
fildll
mov
add
jo
sbb
pop
inc
movsb
mov
loopne
cmpsb
pop
add
push
dec
add
sarl
in
pop
rclb
mov
out
push
mov
push
mov
fwait
mov
scas
xor
xchg
mov
mov
pop
cmp
stos
mov
hlt
rolb
call
roll
add
pop
add
shrl
aam
dec
push
enter
ret
cmp
pusha
lods
mov
cmp
pop
mov
sub
imulb
push
dec
loopne
dec
push
insl
mov
fdivl
adc
add
add
enter
jo
adc
sbb
lock
fwait
js
movsl
pop
mov
sbb
xchg
jno
xorb
stc
jp
mov
xchg
scas
sbb
aam
sub
dec
adc
mov
add
or
movsb
sub
mov
lcall
in
ljmp
xchg
push
sub
add
push
rcrl
cmp
sbb
xchg
add
jb
rcr
xchg
xorb
pop
aaa
rcrl
rclb
cmpsb
mov
mov
xor
nop
dec
inc
lock
or
or
or
inc
mov
pusha
push
push
and
fstpt
push
add
and
dec
inc
test
adc
push
pusha
xchg
test
xchg
jmp
sub
fstpt
push
push
or
nop
add
into
out
pop
inc
and
sub
rolb
std
mov
out
es
int3
pop
add
xor
adc
cwtl
mov
es
jb
sbb
jl
and
cmp
lods
add
adc
rolb
loopne
in
data16
addr16
xchg
andb
mov
imul
mulb
and
jbe
push
adc
nop
or
push
mov
lds
inc
movsb
inc
pop
cvtps2pd
outsb
adc
sbbb
int3
or
in
in
sbb
scas
mov
or
rclb
add
add
add
mov
in
xchg
and
cmp
and
adc
mov
and
adcl
inc
mov
cmpsb
push
test
movsb
pop
sbb
es
or
inc
dec
shrb
in
adc
and
cwtl
les
incl
es
xchg
fadds
pop
pop
mov
cmpsl
outsb
cmp
scas
push
adc
add
pop
lds
mov
push
sub
sbb
sub
cmp
pop
adc
in
aaa
or
sub
mov
in
sub
fsubrs
insl
mov
fs
sbb
stc
ljmp
stos
xor
pop
int3
add
lea
add
adcb
mov
hlt
gs
sbb
enter
sbb
mov
adc
mulb
test
rolb
adc
push
frstor
cltd
add
pop
pop
push
cs
mov
shlb
sub
imul
and
adc
loop
out
pop
ret
and
xor
je
and
jg
mov
loope
in
fs
fsubs
or
add
or
adc
sub
rcl
cwtl
rorb
test
mov
push
lcall
adc
repnz
add
pop
clc
and
and
andb
outsb
shrb
push
fists
std
pop
shl
dec
cld
movb
cmpsb
ret
push
pop
add
nop
in
sub
std
xlat
movsb
rcrb
cmpsl
jl
loopne
lahf
sub
shrb
cli
add
rcll
or
ss
aam
jns
push
sub
inc
mov
jle
enter
orl
jle
mov
jmp
aas
in
xor
movsl
cmp
adc
jo
adc
data16
inc
loope
imul
sahf
cmp
in
xor
and
mov
xchg
add
pop
push
aaa
fmulp
sub
insl
movsl
mov
and
push
mov
mulb
test
mov
fistl
cmp
or
rcll
cld
pop
sbb
push
cmp
pop
push
push
cmp
nop
inc
mov
hlt
lret
insb
fwait
flds
dec
rolb
rcrb
add
fimuls
xor
inc
inc
pop
mov
cmpl
and
out
stos
fisttpl
aas
sbb
mov
xor
mov
mov
cwtl
int3
pop
cltd
repnz
lcall
test
addr16
mov
and
pop
fiaddl
pop
dec
fwait
and
pop
cmpb
clc
out
pusha
add
xchg
push
adc
icebp
aaa
mov
adc
add
addb
xor
mov
ljmp
jnp
cli
add
or
ficoms
and
clc
jg
fsts
enter
add
and
mov
add
mov
aas
imul
nop
mov
push
sub
mov
cmp
les
icebp
adcb
aas
aad
mov
inc
je
rclb
push
push
aam
outsl
repz
xchg
sbb
aas
js
std
jg
push
and
pusha
jle
pushf
xor
sbb
mov
fistpl
aad
and
pop
loopne
mov
out
adc
fidivrs
adc
cmc
mov
dec
sbb
adc
sbb
and
mov
adc
aaa
mov
fistps
rcll
rcl
popa
imulb
cmp
cmpsb
mov
scas
rcrl
push
and
lods
sbb
push
push
mov
sub
inc
jle
inc
movsl
mov
fisttpl
les
pop
sarl
sahf
jg
call
cmp
pusha
sub
cld
std
sbb
mov
inc
aas
fnstsw
and
mov
stc
bound
icebp
mov
in
aas
leave
or
add
ror
out
lcall
cs
sbbb
adc
aad
add
sub
mov
mov
adc
pop
clc
aas
cmp
or
add
loope
sbb
or
aas
push
fimuls
mov
and
mov
push
adc
in
mov
mov
lcall
pusha
and
and
dec
das
adcb
mov
xor
pop
scas
mov
sbb
pop
out
adc
ficoms
and
cwtl
mov
pop
ljmp
adc
lods
pusha
pop
testb
ljmp
dec
cmp
sbb
xor
push
cmp
pop
loop
bound
and
aas
jecxz
and
mov
cmp
lods
xchg
jmp
loop
les
pusha
pop
test
pop
dec
push
add
aas
mov
repz
rolb
lock
mov
jo
inc
outsb
daa
sbb
jo
xor
dec
jl
cmp
ficoms
movsb
ljmp
jno
je
lock
mov
aam
outsb
sbb
addr16
cmp
xor
out
daa
je
dec
dec
adc
addb
fcompl
cld
fwait
and
fnsave
or
aas
push
adc
cltd
add
add
and
or
pushl
push
dec
jmp
mov
add
imul
or
lods
inc
add
test
fildl
push
mov
mov
mov
out
bound
cmp
mov
and
clc
mov
mov
push
sub
cmp
mov
mov
xchg
add
les
mov
pop
pop
and
rorl
cld
adc
sbb
iret
adc
shlb
sub
sub
cli
scas
mov
test
push
test
xor
jg
in
pop
nop
jle
sbb
inc
sub
jmp
sub
push
mov
jo
mov
addl
nop
xor
jb
mov
hlt
pushl
std
push
xor
mov
mov
adc
or
notb
add
and
adc
add
hlt
stos
scas
add
loope
jo
sub
lock
mov
hlt
push
ret
aam
and
mov
adc
rolb
enter
push
loopne
mov
int3
mov
add
fistl
shlb
je
add
and
push
cmp
ljmp
in
jg
fadds
pop
call
mov
fidivs
push
xchg
or
call
push
scas
ret
addb
rcll
mov
lods
pop
and
js
incl
movsl
mov
xlat
adc
and
adc
pop
cld
dec
int
movups
mov
stos
ljmp
lcall
fnstenv
xchg
test
push
add
clc
outsl
add
add
aas
cmp
mov
push
dec
add
shlb
dec
or
orl
testb
mov
sub
pop
lret
sar
ds
rcll
inc
inc
add
data16
dec
ficomps
loopne
mov
hlt
add
je
or
ret
je
scas
push
mov
int3
out
and
cmpb
adc
adc
pop
fdivl
add
sub
inc
je
je
dec
adc
cmpsb
mov
xchg
add
jg
aam
je
movsl
add
inc
dec
mov
stos
add
jg
adc
aam
lret
mov
adc
mov
adc
adc
ret
in
adc
mov
rorl
ret
or
mov
jo
xchg
test
testl
arpl
add
and
sub
cld
sar
cs
pop
stos
and
add
int
pop
aam
xchg
rcrl
or
mov
pop
xchg
pop
int3
sti
and
push
aam
popa
imul
orl
add
add
mov
pushl
push
sbb
je
ss
dec
fcmovnu
sub
adc
adc
pop
or
dec
mov
push
rdtsc
sub
daa
sbb
imul
mov
pop
aam
icebp
lcall
pop
xchg
add
cs
scas
lret
lock
sub
aas
movsl
add
xchg
aaa
cld
mov
les
into
rorl
fdivs
or
ret
adc
insb
adc
loopne
cmp
sub
popa
xchg
lds
and
inc
cwtl
adc
es
dec
cmp
orb
dec
add
popf
mov
and
aam
add
cmc
or
ss
cli
add
xor
aaa
cmpsb
jecxz
add
sbb
mov
jg
sbb
and
scas
adc
cmpsl
mov
sbb
add
lock
add
xor
and
sarb
mov
and
filds
lock
and
mov
pop
xor
nop
pop
aas
loop
faddl
pushf
loope
filds
cmp
pop
loopne
dec
add
add
xchg
fstpt
add
clc
call
dec
sub
addb
inc
add
add
xor
bound
inc
jmp
ja
test
pusha
add
lock
cmp
jbe
icebp
mov
or
adc
mov
and
jno
data16
jb
loopne
in
adc
pop
adc
adc
flds
add
sub
xchg
mov
out
mov
ret
rol
jmp
xchg
rorb
add
enter
xor
mov
test
push
sub
push
lret
or
mov
enter
std
mov
pop
add
repz
xchg
mov
out
add
rolb
sub
cmp
cmc
pop
xchg
out
test
or
fisttps
sti
and
das
orb
lock
push
ret
aas
dec
cld
inc
cmc
add
jecxz
lods
pop
add
xchg
mov
dec
jle
inc
sub
sbbb
xor
test
mov
adc
pusha
mov
mov
decb
jnp,pt
sbb
out
sub
jno
mov
adcb
sub
ret
lods
cmpsl
push
add
mov
add
jmp
loopne
orb
jecxz
pop
lock
cli
cld
sbb
test
cld
or
add
in
push
add
aad
test
or
decl
xchg
outsb
jno
mov
sub
cltd
lds
and
and
jne
sahf
mov
cld
inc
cmp
dec
jno
sbb
inc
cmp
cld
mov
push
sub
mov
stos
mov
call
adc
sub
ret
mov
out
inc
xchg
pop
mov
jp
imul
fidivs
jle
subb
mov
inc
call
cli
push
ljmp
lock
ss
inc
pop
xchg
subl
mov
mov
and
xor
mov
mov
mov
and
add
mov
out
inc
cmpsb
mov
push
loop
out
rolb
nop
mov
call
jo
mov
cmp
jp
mov
adc
dec
nop
adc
add
mov
cmp
adc
scas
push
out
in
cmpb
fcomps
add
lahf
scas
addb
out
mov
ds
push
scas
testb
stos
mov
pop
push
add
push
jmp
dec
test
pop
pop
or
mov
enter
lds
cmpsl
cmpsl
in
lret
mov
add
fstl
or
addr16
jbe
xchg
ret
sub
sbb
fidivrl
std
sub
lahf
cmp
adc
push
cmp
cld
add
mov
mov
push
pop
pop
sbb
imull
xchg
dec
fidivl
add
or
jb
inc
sbb
add
add
jg
xchg
push
push
inc
pop
mov
xchg
in
add
push
jle
or
add
cmp
stc
mov
and
jmp
fwait
scas
add
inc
xchg
cmp
jecxz
sbb
add
add
mov
sti
pop
aaa
adc
orb
jl
jmp
adc
or
push
mov
sarl
js
rcrl
addb
in
mov
push
add
cmp
adc
push
pop
clc
testl
add
add
call
jg
pushf
aas
in
orb
xchg
pop
pop
aam
clc
mov
ret
sbb
cmpb
or
ret
adc
sti
jmp
pushf
sub
jecxz
push
cmpb
adcl
add
mov
xor
repz
add
and
test
and
sbb
or
int3
push
into
inc
sar
xchg
ret
adc
aam
pop
mov
and
pop
mov
cwtl
dec
movsb
ds
add
and
sar
ja
pop
or
mov
loopne
inc
add
in
pop
stos
inc
mov
out
addl
lcall
ljmp
nop
sti
aas
jnp
outsl
clc
repnz
sbb
jg
mov
add
mov
je
push
subb
inc
push
and
sub
mov
inc
pop
mov
out
push
les
imul
inc
add
sub
pop
dec
push
in
inc
ret
xchg
decb
add
dec
adc
mov
lods
and
sub
fimull
add
psubusb
xchg
xchg
addb
xchg
or
push
aam
sub
xchg
inc
or
repnz
dec
mov
pop
loope
add
sub
mov
add
hlt
jbe
dec
aas
adc
imul
inc
dec
xchg
dec
inc
insb
ljmp
jp
mov
mov
add
ret
add
repz
or
xchg
lods
call
in
pop
add
mov
hlt
or
outsl
cmpsb
sbb
xchg
fcmovnbe
ds
inc
sbb
loopne
mov
inc
jl
or
push
mov
pusha
dec
and
cmp
adc
and
push
or
add
decb
test
jae
xor
mov
pop
test
aas
mov
aaa
add
xchg
sarl
int3
jnp
adc
mov
add
shl
push
jg
fcomps
ror
jl
dec
adcb
jl
mov
pop
or
roll
jns
or
xchg
push
adc
xchg
sub
ficompl
mov
and
testb
cmpsl
rcrb
xchg
stos
xchg
fldt
jl
cmp
sarl
mov
xchg
ret
aas
add
or
clc
sub
lds
adc
cmp
xor
push
scas
cmpb
scas
ret
jl
mov
and
xor
enter
int
inc
pop
push
mov
inc
jp
sbb
sbb
adc
or
inc
pop
ljmp
mov
pop
hlt
push
pop
call
mov
lret
mov
icebp
call
pusha
adc
add
loope
jb
or
dec
loopne
cmp
sbb
fidivrl
int3
lret
mov
lahf
dec
push
in
push
add
loopne
or
and
es
and
cld
jg
or
push
mov
int3
andb
add
or
push
mov
push
and
outsl
shlb
outsb
rcrb
adc
and
mov
mov
xchg
iret
shrb
hlt
mull
test
repz
idivl
dec
mov
pusha
roll
and
jmp
imul
mov
add
pop
cld
xchg
cli
scas
mov
sahf
ret
mov
mov
in
mov
and
aam
dec
adc
inc
mov
inc
sti
mov
push
mov
pop
mov
lods
add
orl
movb
push
mov
test
xlat
aas
add
jne
aad
icebp
loop
and
cmp
pop
pop
inc
mov
out
repz
int
mov
inc
dec
addl
or
pop
pop
inc
lahf
mov
aas
jle
loope
daa
add
xchg
aam
xchg
aas
add
test
int3
pop
shll
mov
aas
aad
ret
dec
fcmovb
jo
jno
cmp
push
dec
add
mov
clc
fcoms
outsl
clc
addr16
inc
and
lret
imul
add
outsb
bound
inc
arpl
aas
push
ja
push
add
cmp
add
ret
or
add
test
and
dec
imul
pop
imul
call
fcomps
inc
adc
lcall
sbb
movsl
dec
cmp
push
and
inc
jl
and
loop
and
and
sbb
aas
popa
and
pusha
sbb
push
mov
fs
adc
test
imul
int3
add
clc
or
and
movsb
test
xor
or
jl
sub
mov
mov
inc
sbb
repnz
mov
jg
icebp
test
mov
in
sbb
pop
ret
iret
test
fbld
adc
sub
lcall
xor
add
push
or
add
nop
sbb
adc
or
fbld
scas
sti
push
push
pop
out
adc
cmp
push
shrb
xchg
add
mov
mov
push
rorl
ret
lcall
das
rcll
je
cmp
lock
mov
adc
pushf
rolb
pop
jo
add
addb
hlt
mov
xchg
stos
xor
lock
push
stos
or
addb
mov
mov
push
pop
adc
mov
test
cmp
andb
ljmp
mov
inc
mov
and
ds
or
pop
adc
scas
cwtl
lret
sub
fildl
and
stos
or
cmpb
xchg
sbb
dec
sbb
sbb
xchg
out
jbe
test
shr
orb
cmpsb
testb
daa
aaa
cld
pop
insb
ds
mov
add
cmp
call
pop
or
push
mov
test
and
mov
inc
cmpsb
cmp
cmpsl
mov
shll
adc
cld
cs
xor
push
popf
jle
or
icebp
popf
ja
sub
addb
cmp
sbbb
movaps
cmp
stc
cmp
pop
fdivrs
xchg
and
jl
or
jg
and
xorb
xchg
xor
mov
push
ret
call
dec
add
pop
daa
push
test
stos
mov
sar
adc
adc
inc
cld
andps
cmp
jg
icebp
mov
mov
and
add
lock
dec
gs
or
test
inc
sbb
fdivr
or
mov
lds
test
sbb
out
and
and
aas
push
or
mov
mov
push
stos
js
fmulp
mov
aad
fildll
fmuls
xor
mov
mov
repz
inc
cmpsb
les
dec
aas
ss
mov
mov
push
and
cmp
cmp
incl
lret
out
mov
inc
add
add
add
and
pusha
aaa
adc
movb
aaa
dec
adcb
enter
das
add
add
notl
push
mov
sub
cwtl
aas
shl
inc
xchg
stos
scas
add
movsb
addb
xchg
incb
sub
push
xchg
loopne
inc
nop
fwait
out
push
ret
jno
and
pop
or
in
inc
and
je
daa
ds
or
inc
pop
loopne
xor
ret
cli
les
mov
outsl
stos
and
inc
push
je
adc
push
inc
and
repz
push
scas
xor
icebp
add
lds
ljmp
sahf
enter
scas
aas
call
mov
push
stos
repz
nop
or
loopne
mov
decl
shlb
pushf
popa
add
and
inc
push
lock
out
jle
adc
xor
enter
adc
adc
xchg
fbld
movsb
fists
mov
mov
ds
mov
cmp
adc
aas
cmpsb
stos
jo
add
addb
add
add
dec
nop
or
jp
add
sbbb
aas
jmp
mov
cmp
or
mov
das
int3
or
repz
nop
lahf
enter
clc
push
sub
pushf
push
mov
addr16
add
add
jle
fwait
outsb
fcomip
punpcklwd
iret
cmp
inc
add
ret
push
add
jb
hlt
in
std
inc
fsts
rolb
push
pop
loopne
into
ret
and
rol
push
lret
in
sbb
mov
mov
mov
fildll
stos
lret
adcb
add
mov
shll
adc
mov
mov
sti
adc
bound
xor
popl
in
mov
cmpsl
je
and
mov
rorl
xor
adc
sbb
inc
xchg
and
arpl
and
mov
ret
jl
cmp
aam
pop
adcb
popf
loopne
leave
xor
mov
jo
xor
fs
xchg
dec
cmp
jo
sub
mov
rorl
mov
incb
and
loopne
mov
mov
test
xchg
ss
mov
xor
xchg
jg
icebp
and
pop
jecxz
aas
fs
xor
mov
outsl
incl
mov
pop
xor
sub
shlb
in
lock
imul
pusha
push
data16
decb
mov
test
xor
cmp
xlat
xchg
mov
in
and
and
or
and
and
add
and
add
icebp
fstp
imul
adc
fiadds
add
aad
or
mov
inc
lock
adc
outsl
hlt
jg
lock
mov
and
or
xchg
rcrb
add
into
or
mov
xor
sub
or
adc
xchg
inc
cli
fbstp
andl
and
aas
or
xchg
or
mov
adc
inc
mov
mov
pop
add
add
sub
hlt
mov
mov
aas
pusha
add
out
mov
aas
rcrb
hlt
xchg
mov
push
xchg
xorb
add
out
push
push
aam
or
cmpsb
sbb
dec
add
and
lret
sub
sbbb
jmp
xchg
sub
xor
mov
add
lcall
push
es
cmp
mov
push
mov
add
jo
add
add
and
aas
jl
scas
loopne
rorb
lea
adc
pop
cmp
xor
push
gs
push
mov
xor
sarl
mov
or
daa
xor
shlb
ret
add
fs
mulb
xorb
orb
lock
add
or
mov
xchg
pop
adc
testb
addb
aam
adcl
pusha
movsl
pusha
or
push
ja
decl
add
push
add
movl
aam
daa
mov
jbe
and
adcl
mov
movsl
and
in
sub
sbb
aam
sub
aas
mov
outsl
mov
cmp
mov
sub
add
mov
sub
mov
test
or
or
dec
add
orl
lock
mov
sub
push
shrb
out
fsubs
addl
test
add
scas
scas
ret
xor
insb
mov
call
pop
mov
pop
test
cmp
inc
and
pop
mov
aas
xor
add
ljmp
adc
fadds
jno
cmp
es
and
add
loop
shlb
add
sbb
add
leave
inc
adc
and
add
add
or
lcall
mov
add
test
lret
sub
aas
stos
ret
roll
add
inc
inc
inc
lahf
add
xchg
mov
sbb
pop
add
bound
push
sub
scas
clc
adcb
push
and
vmovups
rclb
and
inc
and
fisttpl
sub
roll
pop
dec
rolb
ja
mov
xchg
push
add
fbld
xor
jl
inc
inc
cmpsb
ficoms
and
push
mov
xchg
and
ds
inc
or
add
decb
pop
fwait
pop
outsl
out
lahf
inc
inc
clc
mov
lret
lret
mulb
subb
push
xchg
movsl
or
or
push
std
lea
sub
lock
and
sub
sub
mov
add
pop
add
push
shlb
sarl
ret
rorl
lcall
sbbl
aas
inc
push
icebp
push
sbb
mov
rolb
sub
adc
std
jmp
sub
mov
push
shl
mov
pop
lods
movsl
hlt
ss
fs
cmp
inc
sbb
cmp
inc
adc
clc
jg
stos
xor
mov
or
pusha
add
je
mov
mov
push
sti
inc
xor
push
fisttpll
punpcklbw
cmp
add
inc
push
or
jp
fwait
mov
push
add
fisubl
pop
mov
movsb
notb
out
bound
aas
subb
mov
mov
push
mov
add
inc
pop
add
fiadds
ja
mov
mov
test
pusha
cmp
push
orb
cmp
pushl
imull
add
or
xor
push
ret
loopne
rcll
pop
pusha
mov
and
and
hlt
lret
fdivrs
or
mov
jne
ds
cmc
ljmp
bound
inc
imul
iret
test
stos
add
out
clc
jg
and
pop
sbb
add
daa
andl
push
notb
pop
cli
jbe
or
out
aas
dec
or
fisubrl
add
or
orb
sub
pop
push
push
lock
pop
shlb
shll
mov
insb
adc
sahf
cmp
cld
sub
decl
icebp
add
in
add
cmp
fadd
xchg
mov
and
sub
es
lret
nop
aas
loop
xor
das
lock
pop
mov
insb
lret
sbb
pop
ret
clc
ret
add
out
mov
mov
pop
sub
or
loopne
inc
sub
pop
mov
xor
add
test
dec
aaa
jl
add
mov
sub
add
inc
mov
cs
loopne
and
pop
add
add
inc
imul
orb
xchg
outsl
add
pusha
cmp
pusha
adc
push
xchg
loope
xchg
lret
and
aas
aad
and
adc
roll
rorl
shr
es
sub
add
data16
cwtl
rolb
popf
inc
aad
inc
movsb
jnp
addl
rolb
fcomps
sbb
mov
add
add
adc
jb
incl
in
cli
sbb
adc
jb
dec
lret
mov
cmp
mov
jecxz
jno
sbb
mov
or
or
push
jb
shlb
add
das
cli
aaa
xchg
push
push
sbb
and
add
push
and
or
mov
enter
aad
stos
incb
and
xor
ljmp
lds
loop
roll
mov
sub
shrl
aas
mov
movb
jo
or
or
fnsave
in
adc
adc
out
xchg
or
enter
add
push
pop
into
inc
in
cmp
cmp
scas
xor
cmp
pop
aas
xor
and
push
cli
mov
pop
push
outsl
sub
cld
out
rclb
mov
mov
out
fcmovnu
push
loope
out
lcall
mov
pop
cwtl
aad
adc
push
sub
push
or
ss
sub
add
and
mov
pop
and
mov
pop
push
mov
fiadds
roll
jl
pushf
inc
sbb
pop
out
loopne
bound
scas
xor
cld
outsl
or
xchg
push
sti
or
cs
or
in
and
xchg
jno
push
push
or
pop
jb
hlt
sbbb
push
push
out
push
pop
add
cmp
jl
xor
pusha
adc
pop
fisubs
xor
cmp
lock
das
fidivl
aam
inc
cmpb
pop
pop
std
xchg
out
pop
aas
and
es
or
jmp
out
xchg
mov
or
jo
cmp
pop
mov
pop
inc
adc
mov
jp
ds
xor
xor
adc
test
mov
cmpsb
inc
mov
or
insb
xchg
rclb
data16
stos
mov
lea
inc
add
inc
aaa
push
pop
sub
rclb
inc
mov
int3
mov
sbb
adc
in
push
add
mov
inc
rolb
mov
popf
cwtl
ret
sbb
xor
or
loope
inc
mov
loop
pusha
dec
aaa
test
andl
push
mov
pop
push
dec
ss
es
insb
icebp
add
aas
fnstsw
pop
or
jmp
push
outsb
lock
lcall
mov
or
call
add
fldcw
push
ds
nop
decl
incl
xchg
push
mov
sbbl
lahf
xorl
imul
adc
cmp
imul
cmp
push
mov
das
add
push
and
xchg
and
mov
adc
pushl
lods
outsl
xchg
xchg
mov
sub
xchg
out
jo
test
scas
aas
jg
fwait
test
jmp
xchg
and
pop
sub
movsb
mov
js
cmp
int
das
mov
and
adc
xor
scas
loop
fwait
lods
mov
lcall
popa
test
push
cmp
aaa
jnp
dec
into
and
push
sbb
sbb
in
push
xor
and
ljmp
pop
mov
sub
addr16
inc
lds
add
and
adc
push
loop
xor
push
jo
imul
subb
xchg
and
cmp
stos
push
xchg
cld
pop
or
daa
inc
xchg
mov
pop
aam
pop
addb
cmp
push
test
adc
lret
in
and
sub
loopne
add
cmpsb
pop
fdivs
pop
or
addb
fs
sti
fwait
mov
and
and
shrb
rolb
inc
push
inc
jb
adc
add
mov
mov
icebp
xchg
add
pop
aas
adc
shrl
and
xor
mov
addl
jge
mov
shll
mov
sbb
imulb
sbb
jbe
mov
popa
in
xchg
sub
xchg
sub
cmpb
xor
xchg
ficomps
bound
adc
loop
shll
sbb
lock
and
xchg
xor
or
sbb
filds
xor
mov
xchg
sbb
pop
inc
lcall
xor
xor
add
aas
inc
cmp
stos
xor
mov
clc
inc
nop
push
bound
sub
sub
inc
fists
pop
rcrb
aad
mov
orb
sbbb
int
push
negb
shlb
xchg
and
and
mov
aam
push
fdivrs
cwtl
inc
es
xor
xchg
dec
test
or
sub
lods
cltd
jmp
js
add
push
aas
rcl
cmpsb
outsb
pushf
or
lods
outsb
sub
test
lods
mov
push
mov
fldl
mov
xchg
out
add
mov
in
adcb
mov
hlt
out
and
push
pop
shl
xor
incl
xchg
mov
xor
jnp
inc
popa
adc
shl
stc
xor
xor
insl
adc
in
js
cmp
dec
lods
insb
aam
push
fcoml
add
movsl
mov
adc
xor
test
shl
stos
add
mov
mov
lods
out
out
push
add
aam
add
mov
cmp
mov
add
test
test
xor
add
incl
rcll
mov
mov
addl
mov
adc
nop
adc
add
sub
fisubl
jle
jo
fnsave
xor
sarb
in
das
push
out
dec
xchg
ds
fisubrs
icebp
loop
xor
loopne
mov
xchg
rolb
cmp
pop
rolb
js
ljmp
jmp
test
ljmp
push
add
mov
or
xor
enter
or
mov
iret
push
push
outsb
mov
add
out
mulb
adc
and
clc
mov
cmpb
pop
xchg
fistpl
pop
cmpsl
push
and
in
sub
sub
std
and
mov
mov
int
xchg
out
es
into
sar
cmp
add
cwtl
xchg
out
lret
aad
leave
ljmp
xor
mov
pop
rcrl
adc
mov
adc
mov
cmpb
dec
xor
ret
roll
ds
enter
xchg
out
repz
push
adc
sbb
test
mull
adc
enter
fldt
xor
pop
add
inc
cmp
ja
rclb
cmp
cwtl
adc
mov
loopne
arpl
out
js
test
xchg
push
repz
or
push
xor
cwtl
aad
fcoml
push
add
and
ljmp
daa
push
ljmp
push
push
xchg
push
mov
sbb
pop
cltd
mov
lods
push
add
pop
add
inc
jmp
push
jg
jae
push
jae
jnp
int
fwait
hlt
and
rclb
push
dec
cwtl
and
cwtl
or
jne
cmp
test
push
jbe
ljmp
inc
out
adc
add
and
xor
int3
push
arpl
call
pop
gs
mov
lcall
imul
adcb
pop
dec
pop
call
pop
and
cmp
rcrl
out
ret
aam
fldl
cs
and
ss
adc
mov
test
add
jb
lock
jae
jle
add
das
add
and
mov
mov
or
dec
push
mov
movsb
pop
and
inc
cmp
rclb
pop
jno
int3
je
loopne
cmp
aam
data16
stos
ret
ds
sahf
xor
inc
mov
and
pop
stos
fisubl
sbb
add
loop
mov
mov
pop
icebp
or
cltd
incl
add
into
push
test
aam
jno
lcall
dec
xchg
andb
mov
aam
repz
pop
add
in
outsl
push
add
in
xchg
imull
add
pop
push
incb
jmp
scas
add
xchg
repz
xchg
xchg
adc
jo
cli
pusha
mov
xchg
sub
sub
test
in
mov
cmp
adc
xorl
inc
xorb
xchg
push
cld
idivb
push
test
sahf
sbbb
cltd
cmpb
addl
xorw
pusha
sti
mov
orl
aam
jb
push
mov
aaa
cld
or
xlat
andb
adc
test
xchg
sbbb
add
das
icebp
and
inc
add
xchg
clc
incl
je
inc
imul
inc
arpl
sbb
mov
shlb
in
xchg
shll
add
nop
daa
mov
cwtl
cmpsl
xor
sub
add
xchg
adc
push
loop
jle
sbb
pop
lock
arpl
addb
arpl
inc
clts
arpl
push
sbb
orb
xchg
inc
decl
fstps
popa
ret
sub
xchg
pop
push
xchg
and
pop
loopne
outsb
int3
ret
sbb
xor
add
adc
mov
push
pop
sub
inc
cld
xchg
pop
sbb
xchg
xor
inc
or
rolb
aam
idivb
addr16
push
pop
adcb
in
addl
stos
fistl
xchg
out
add
bound
cltd
xor
lds
dec
add
inc
loopne
call
ffreep
mov
pop
fwait
movl
mov
gs
dec
push
xorl
cmpsb
pop
rcrb
and
add
adc
push
in
pop
add
lret
mov
inc
push
mulb
rcrl
repnz
push
aad
cmpsb
xchg
mov
ret
pop
and
pop
test
xchg
cmp
adc
iret
mov
out
pusha
jno
pusha
add
aad
icebp
push
cmc
rolb
cld
daa
and
subb
adc
cmpb
test
into
pusha
inc
mov
fimuls
out
cmp
inc
inc
and
or
push
shll
fcomps
ret
filds
cli
or
es
xchg
imull
stos
inc
adc
fistpl
cmp
push
inc
push
push
inc
rorb
or
or
mov
add
mov
pop
sti
ljmp
mov
inc
outsb
cmp
fwait
add
sbb
ds
and
out
mov
xchg
adc
adc
add
scas
add
cli
clc
push
ret
lods
fs
mov
test
mov
icebp
fildl
pop
je
pop
scas
dec
popa
add
addb
mov
pop
stos
add
mov
das
xor
mov
push
xor
pop
mov
inc
mov
and
pop
mov
pop
add
pop
mov
push
mov
add
mov
xor
test
ds
addl
call
pop
pop
inc
sub
ds
mov
jmp
or
mov
dec
gs
test
and
pusha
gs
mov
jmp
xchg
xor
int3
mov
cmp
mov
mov
loopne
in
mov
daa
jg
stos
outsl
adc
pop
nop
aam
out
into
nop
mull
iret
push
pop
jmp
pop
push
ss
inc
insb
mov
mov
push
lret
shlb
xor
push
lret
fwait
inc
pushf
add
ret
pusha
push
loopne
add
mov
pop
pusha
int
and
std
jnp
sbb
inc
fmul
movsl
stos
fcomps
bound
repz
lods
ljmp
xor
pop
adc
and
lahf
mov
lahf
aam
add
andl
lcall
pop
xchg
int
cmpsb
movsl
add
cmpsb
add
je
std
sbb
adc
push
rcl
pusha
or
adc
sarb
mov
movsl
add
inc
xchg
pop
add
jno
lods
xchg
mov
adc
movsb
daa
add
movsb
push
shrb
cmp
jo
mov
push
popa
addb
or
in
mov
dec
or
mov
xchg
push
dec
add
lahf
mov
aam
cli
adcb
fimuls
mov
call
pop
add
dec
cmp
push
xchg
fistpl
dec
push
cmc
cmpsb
cmp
and
inc
adc
jno
adc
xchg
jg
adc
and
fisubs
dec
add
mov
mov
pop
sub
rorl
xchg
dec
push
adc
jo
push
nop
and
mov
and
pusha
cmp
popf
clc
pop
jne
out
mov
push
aaa
sub
and
and
mov
mov
sbb
dec
and
and
add
rclb
mov
push
int
lock
cmc
jo
push
test
cmpl
iret
aad
mov
aam
mov
push
mov
scas
and
call
fcoms
loopne
cmp
push
adc
fisttpl
aas
lods
mov
cmp
dec
lret
aam
inc
add
js
call
xorl
nop
xchg
mov
mov
cli
push
xlat
mov
addb
adc
push
lock
sbb
cli
add
xor
lods
cmp
xor
or
out
push
roll
fcom
inc
pop
fldl
clc
mov
push
cld
roll
pop
rolb
push
test
or
push
inc
push
je
xchg
cmp
mov
mov
movsl
push
into
mov
add
les
ljmp
clc
mov
loop
push
sahf
mov
movb
jecxz
mov
cmp
inc
push
repnz
loopne
push
int
or
add
lock
add
lods
xchg
mov
in
mov
sarl
push
and
push
ds
rolb
loop
mov
in
jg
adc
adc
push
jmp
adcb
pushl
jo
dec
ds
leave
loopne
outsb
rorl
pop
mov
mov
fists
loopne
add
add
xchg
cpuid
push
add
inc
mov
in
push
add
lret
push
pop
mov
scas
fdivrs
push
push
cltd
jecxz
fists
cmp
jl
ds
ss
push
or
outsl
dec
shlb
fucomip
ftst
add
in
adc
adc
pop
aam
andl
imul
data16
pop
add
nop
push
sub
inc
in
push
cmpsb
mov
mov
and
inc
adc
aaa
loopne
xor
cld
ds
arpl
dec
int3
nop
or
scas
adcb
cmc
adc
test
aaa
or
adc
lret
repz
ret
shlb
mov
orb
in
xchg
sbb
or
adc
sbb
or
and
xchg
pop
cltd
mov
sbb
xor
and
stos
add
push
mov
xchg
xchg
and
rcr
sarl
xor
dec
add
mov
jg
imul
icebp
add
add
xchg
ds
hlt
add
cmp
pusha
jne
mov
adc
push
add
ds
sub
decl
mov
mov
push
push
add
push
das
fstp
adc
into
fisttpl
sti
mov
push
xchg
cmpsb
push
push
cmc
or
mov
rclb
mov
ljmp
shl
add
incb
sub
sbb
xchg
mov
mov
das
push
or
inc
aas
push
mov
in
mov
sub
lock
or
push
outsb
add
mov
cli
into
pusha
repnz
xchg
jns
jb
push
ljmp
adc
lock
push
popa
sub
inc
pop
xchg
add
push
mov
mov
lods
icebp
add
push
push
mov
add
sub
and
mov
addb
je
pop
out
add
pop
lock
cmpsb
divb
pop
les
add
int
fwait
ret
add
pop
push
mov
pop
xlat
or
pop
or
cmp
mov
bound
rcrl
mov
push
push
push
int3
push
adc
adc
mov
mov
mov
dec
icebp
push
sub
jae
dec
add
dec
adc
mov
jg
lock
inc
or
mov
xchg
sahf
xor
pop
repnz
daa
in
or
std
jo
add
and
push
cmpb
scas
rcrb
cld
push
cmp
lcall
inc
mov
jle
add
jo
pushl
pop
mov
xchg
mov
pushf
mov
fsubrs
sbb
shlb
icebp
aas
add
or
imul
mov
sub
das
mov
add
jo
test
push
cld
aaa
push
aad
shr
rclb
add
popf
add
fisubs
imul
xchg
add
pusha
iret
incb
aas
add
in
sbb
jb
sbbb
daa
adc
jmp
andb
jo
mov
add
mov
pop
shlb
mov
pop
loopne
xor
push
movsb
mov
dec
xchg
ret
jmp
test
xrelease
push
and
popf
sub
data16
ljmp
js
pop
nop
sbb
inc
int3
push
xchg
or
ljmp
push
mov
icebp
adc
push
js
lea
pop
push
cmpsl
lock
xor
test
and
add
or
sbb
sub
enter
movsb
add
or
add
lds
bound
xor
push
sub
add
mov
fs
sub
fcoml
xor
push
inc
mov
xor
pop
rcr
xchg
pop
sbb
pop
ret
jb
ret
aam
push
xor
clc
lcall
ret
fs
inc
in
xor
and
and
lock
pop
push
or
inc
add
ljmp
fcomps
add
cmc
test
dec
xor
xchg
out
nop
adc
fadds
dec
mov
loopne
or
rolb
cld
adc
in
out
jle
add
pop
ret
aad
inc
ret
cmp
jge
push
or
add
add
sub
cmp
lcall
movsl
cld
or
orl
sub
add
adc
xchg
movsb
cmp
push
cmp
addl
in
cld
dec
xor
lods
cmp
lcall
mov
push
add
and
inc
xchg
mov
mov
shlb
dec
mov
jmp
push
test
decl
orb
cmp
inc
adc
subb
fstl
dec
in
ljmp
mov
inc
cmp
mov
mov
or
jmp
inc
push
rclb
int
jo
loopne
xor
add
int
stos
loopne
push
and
mov
dec
fwait
push
clc
sbb
pop
pop
xor
pop
push
inc
cli
mov
addb
shlb
push
repz
sub
pop
xlat
fs
sbb
dec
mov
add
aas
add
orb
mov
call
ds
pop
lock
stos
testb
mov
sbb
fadd
xor
in
les
adcb
test
pop
sti
lock
xor
push
push
adc
or
cmp
xor
rol
adc
xor
and
xor
inc
or
fbld
rorb
pop
fwait
int3
or
lcall
shll
in
inc
adc
cmpsb
pop
inc
push
push
mov
cmp
add
stos
push
adc
or
lahf
faddp
push
inc
cmc
outsl
sub
or
mov
stos
fcoml
add
push
mov
push
mov
dec
rolb
and
movb
ret
push
xchg
and
and
push
sub
fucomi
pushl
sarl
push
mov
sub
jg
or
push
lock
rorl
mov
push
in
mov
pushfw
rolb
mov
mov
loopne
cmp
dec
pop
loopne
mov
push
idiv
inc
or
and
and
push
push
push
xchg
jo
add
add
or
repnz
mov
sbb
imul
popa
pop
add
fnstsw
push
popa
popf
aad
sub
ret
xor
mov
pushf
jl
ret
loopne
adc
clc
lahf
addb
sbb
jle
mov
cltd
xor
rolb
das
cmp
fs
sbb
mov
cmp
and
insl
fdiv
sbb
lahf
shl
dec
xchg
movsl
dec
add
mov
out
and
inc
loop
movsb
mov
dec
pop
dec
push
lcall
hlt
push
push
incb
inc
test
pusha
add
or
pop
mov
sub
sub
push
das
movl
rclb
and
push
sahf
mov
pusha
int3
ret
add
stos
lods
pop
fwait
dec
push
test
nop
mov
push
ret
aas
in
js
and
cs
push
fildl
ret
repnz
push
mov
incl
sti
mov
and
nop
pop
pushf
in
and
fbld
add
mov
aad
mov
fcoms
mov
sub
sbb
decl
or
addb
stos
xchg
inc
fbstp
jg
mov
push
orb
sub
hlt
push
xchg
add
jnp
mov
push
mov
ljmp
scas
test
or
ds
cmp
sub
and
or
es
mov
idivl
add
push
sub
ficompl
test
sbb
divl
jmp
or
push
add
mov
hlt
add
and
or
ds
and
stc
mov
add
add
mov
push
adc
nop
inc
jo
and
push
pop
aaa
add
push
ds
cmp
or
add
xor
insb
pop
or
test
xchg
mov
incl
xor
mov
inc
test
pop
popf
sarb
cmpsl
jo
fidivl
inc
fcompl
sbb
add
sar
inc
mov
inc
push
sarl
femms
insb
ffreep
rol
loop
ja
cld
or
decl
std
rolb
dec
inc
and
cmp
sub
stos
in
ljmp
mov
pop
mov
push
testl
inc
add
jno
inc
cmp
or
jmp
pop
push
add
mov
xor
inc
adc
sub
mov
xor
xchg
aaa
scas
adc
loopne
loopne
fdivl
mov
xchg
in
shld
loop
pop
pop
add
sbb
mov
sbb
lret
adc
pop
aam
xchg
lods
decl
or
mov
xchg
cli
mov
loopne
scas
lcall
lcall
pop
add
add
sbb
fwait
iret
xchg
xchg
adc
hlt
jo
pop
sti
ljmp
adc
jnp
adc
lds
push
cmp
xor
or
shlb
lock
call
inc
xor
repz
jno
lret
or
mov
mov
xorl
mov
sub
ds
xchg
xor
push
divb
pushf
mov
add
xchg
sbb
xchg
mov
stos
pop
jbe,pt
inc
add
sub
sbb
fdivrl
faddp
addb
sub
jo
inc
jbe
push
jnp
hlt
sbb
mov
mov
ret
mov
add
ret
fidivrl
out
sbb
add
ds
mov
pop
cmpsb
inc
and
fbstp
scas
int3
rorl
pop
fisubl
push
pop
and
bound
ds
push
add
fcomps
dec
adc
test
shll
stos
and
lea
mov
adc
ds
push
mov
in
jnp
adc
xchg
ds
cmp
and
lret
add
sub
mov
xor
and
das
cs
xor
pop
push
pop
push
stc
ss
loopne
adc
jp,pn
addb
stos
stos
cld
push
add
mov
push
pop
lods
xor
arpl
mov
xor
cli
call
adc
rol
rcrb
aam
fsubs
aam
mov
push
sub
ds
inc
lock
aam
roll
xchg
incl
push
jp
js
aam
in
mov
das
mov
fiadds
jno
cmp
push
mov
testl
dec
push
mov
mov
inc
mov
into
xchg
lods
push
std
pushl
iret
aam
inc
mov
shll
jb
mov
jg
sahf
and
fsub
dec
and
cmpsl
fimull
or
subb
push
stos
clc
imul
push
pop
push
add
mov
adc
mov
insl
fwait
mov
fcoms
and
jb
cmp
ljmp
nop
add
aas
push
add
adc
or
pop
and
sub
adc
mov
testb
outsb
js,pt
or
jg,pt
add
adc
es
sbbb
pop
cmp
sar
std
pusha
or
fiaddl
aam
adc
pop
aas
mov
enter
sub
rorb
mov
add
mov
lret
add
fcompl
cmpsl
jb
inc
ds
cmp
xchg
fistpl
mov
jo
adc
test
jmp
inc
pop
mov
sub
push
popa
test
int
lock
ds
cmp
mov
or
adc
xor
adc
mov
int3
roll
ret
add
push
xchg
flds
xchg
ret
ljmp
pop
add
lar
or
aas
push
and
push
and
pop
xor
cmpb
cmp
pop
test
xor
or
outsl
add
push
push
adc
mov
add
and
push
lret
movsb
cltd
jg
adc
and
aam
andl
cwtl
and
adc
arpl
test
push
pop
test
sarb
xor
push
or
xlat
add
mov
inc
rclb
add
sub
or
inc
int
lcall
fistl
ss
pop
ret
fisubs
rcll
cld
or
mov
andb
pop
pop
sbb
outsb
xor
das
pop
or
jg
aas
pop
dec
mov
pop
sbb
shlb
jle
not
add
inc
push
ljmp
or
nop
add
lock
mov
fs
mov
test
mov
data16
inc
xor
add
and
arpl
add
shrb
gs
adcl
aam
add
cs
jle
and
inc
add
jg
orb
movb
stos
roll
vpand
or
pop
add
mov
add
jl
movsl
dec
push
push
add
and
sub
fcmovu
test
push
aas
fdivrp
fldt
cmp
addl
jns
mov
pop
rclb
push
xchg
aam
push
mov
cmp
xchg
pop
fcom
cmp
push
sbb
push
jmp
jmp
add
iret
shlb
xchg
xor
xchg
sub
and
inc
xor
in
mov
movsb
add
jno
and
add
les
lret
pop
and
xchg
xchg
and
xchg
push
pop
xchg
movsb
pop
add
divps
and
or
cld
test
pop
add
daa
lock
cmp
push
pop
add
and
add
or
sub
sbb
mov
jne
jle
mov
lcall
jb
pop
imul
mov
inc
mov
int3
adc
push
xor
inc
cmpsb
xchg
sahf
adc
aam
lock
incl
mov
mov
or
sub
ljmp
inc
sub
lcall
mov
mov
inc
cs
mov
orb
sbb
jp
inc
inc
and
inc
fadds
pop
or
je
fdivrl
dec
test
xor
and
les
lods
and
lds
mov
mov
ds
rolb
lds
add
sldt
addl
adc
add
or
cmp
fidivs
ret
fcoms
xor
loopne
das
sbb
sub
add
and
or
pop
sub
fcomip
jg
pop
cs
cmpb
add
loopne
test
out
ljmp
cltd
add
or
rcrb
stos
stos
test
add
adc
and
adc
rclb
mov
mov
dec
add
pushl
ds
push
jecxz
adc
pop
xlat
jecxz
adcb
or
push
dec
test
adc
add
add
movsb
add
inc
and
cmp
mov
add
clc
push
popf
or
mov
bound
and
orl
bound
out
push
lods
orl
add
rolb
nop
loop
in
stos
ljmp
loop
push
dec
loopne
cmp
add
pop
aam
and
shlb
pusha
adc
cmp
or
call
add
add
xlat
int3
fcomps
mov
incl
adc
and
lcall
push
add
or
or
je
loopne
sbb
sbb
or
add
add
pop
inc
jl
ds
or
mov
inc
inc
popa
add
and
sbb
mov
mov
and
in
in
aaa
push
or
jl
scas
push
les
pop
incl
inc
incl
xchg
mov
mov
subb
aaa
cmp
dec
dec
push
push
adc
pop
push
cs
fcomip
xchg
xlat
inc
push
mov
loop
xor
call
and
mov
jne
or
pop
icebp
ds
orb
xchg
movsl
and
push
mov
add
lret
cli
scas
fwait
lds
and
hlt
loopne
mov
and
mov
int
and
sarb
in
xor
std
pop
xor
lds
xchg
lret
add
pop
pop
fsubl
sub
pop
adc
push
push
push
icebp
xchg
mov
outsb
add
push
push
sub
fcoms
mov
movsl
das
xor
pop
mov
movsl
mov
pop
xor
and
aam
mov
int3
ljmp
push
pop
push
fcompl
out
push
jnp
add
pop
je
sarb
xchg
rcll
add
push
jle
sub
ljmp
push
mov
fwait
push
or
dec
mov
mov
pop
movsl
mov
push
add
push
repnz
pop
cmp
add
push
retw
mov
xchg
push
or
mov
adc
ss
or
inc
test
xor
push
cmp
and
outsl
dec
xor
push
lock
rclb
loop
repnz
jo
add
sub
je
mull
fnsave
movsb
push
sub
mov
out
add
xor
aas
es
mov
push
mov
cmpsl
add
dec
jl
mov
xchg
and
cmp
ds
add
inc
adc
cmp
mov
insb
inc
adcb
sub
add
cmp
xor
or
push
fiadds
outsl
aaa
dec
jnp
xchg
leave
add
jne,pn
add
outsb
repz
sbb
xor
adc
and
out
or
scas
add
int3
or
and
mov
jle
push
xchg
push
xor
sub
add
add
or
jp
movsb
mov
add
jl
jno
sub
nop
imulb
jl
mov
adc
jo
int3
xchg
daa
mov
jno
dec
dec
loop
pop
xor
add
dec
sbb
dec
add
adc
loop
sahf
add
inc
adc
pop
add
gs
inc
adc
push
cmc
insl
add
adc
cld
jbe
adc
stc
sahf
pushf
clc
clc
sahf
out
add
or
loop
and
jge
xchg
push
add
add
and
and
and
push
jb
imul
pmulhw
xor
filds
or
lock
cmp
xchg
push
jp
or
das
jo
jo
add
pop
aad
adc
shll
in
and
and
roll
mov
and
test
cmp
insl
xor
mov
adc
in
sbb
nop
jno
push
dec
shll
sbb
filds
xchg
sarl
insb
fmul
ret
add
inc
xchg
dec
nop
jge
push
aam
pop
push
jmp
ss
pusha
xchg
mov
push
adc
enter
ja
and
fdivs
sub
fwait
in
jo
test
push
loop
or
out
push
loop
iret
mov
lret
xor
jg
icebp
testb
stos
and
jo
cmp
nop
and
pop
or
push
xor
jl
xchg
xchg
add
or
imull
outsl
xchg
xchg
loopne
and
mov
nop
andb
mov
fisubrl
rcrb
push
loop
outsl
in
mov
call
mov
push
out
inc
cmp
pop
and
aas
out
adcb
fbld
sub
loope
or
lock
aas
mov
push
rorl
sub
pop
cmp
hlt
sbb
inc
jp
ds
pop
sub
je
pop
lret
out
inc
fdivrs
push
dec
mov
iret
aam
aam
pop
lcall
xchg
pop
jg
adc
aam
mov
lock
add
add
jbe
adcl
add
subb
loope
mov
add
mov
rclb
and
scas
or
fnsave
rcrl
jno
fbld
fdivrp
mov
fcoms
insb
dec
mov
and
adc
push
adcl
mov
push
pop
push
loopne
stos
push
arpl
cwtl
fldenv
jg
js
lret
ds
scas
pop
adc
or
push
mov
jmp
jbe
push
add
push
and
add
mov
and
inc
mov
add
jl
sub
testl
add
add
sbb
push
out
and
jo
adc
outsl
cmp
sub
lock
stc
pusha
sbb
fistpll
and
and
pop
pop
fwait
jg
cmpl
mov
cs
jmp
add
inc
push
inc
inc
out
stos
dec
mov
pop
cld
jg
xchg
and
mov
stos
push
sbb
aaa
sarb
or
inc
sbb
aam
and
inc
cld
sub
sbb
sub
dec
mov
jmp
pop
stos
stc
pop
scas
and
mov
into
and
das
jp
fsts
add
or
pop
hlt
outsl
aam
xor
iret
pop
and
push
jb
jnp
sub
subb
jecxz
inc
adc
add
pushf
mov
lcall
xchg
aas
in
xchg
lret
test
push
push
mov
mov
outsl
pop
cs
cld
adc
mov
das
xchg
cld
pop
xchg
inc
cmp
jo
push
or
adc
sar
ja
and
mov
mov
add
push
add
push
fcmovu
xchg
and
sub
bswap
xchg
nop
mov
and
mov
or
xchg
add
fsubs
push
fists
ds
mov
mov
push
loopne
decb
add
rcrl
xor
sub
inc
or
fistl
movsb
sbb
sahf
xor
xchg
fsubl
and
add
cld
fisttps
test
mov
lcall
sbb
pop
dec
adc
cmc
adc
pop
push
sub
sbb
sbb
or
or
ss
addb
mov
mov
sbb
cld
push
jmp
ljmp
mov
test
add
ret
dec
pop
sub
pop
nop
in
xchg
mov
cmp
stos
pop
add
sbb
mov
push
push
shrb
stos
xchg
les
jnp
jo
cmp
push
pop
push
xchg
sub
push
xor
xor
mov
xor
inc
cli
insb
pop
jecxz
outsl
cli
sbb
inc
jns,pt
out
push
lret
add
push
jne
or
add
adc
cmp
add
cmovo
mov
xor
and
lock
mov
pop
pushf
mov
add
orl
rcr
add
adc
std
or
mov
and
movsl
lcall
mov
xchg
ret
and
insb
out
xchg
adc
add
push
clc
lcall
push
scas
sub
mov
add
mov
or
sub
mov
stos
das
decl
lcall
cmp
mov
mov
daa
stos
mov
lods
push
ljmp
lock
sbb
fcompl
xchg
inc
add
mov
addb
sbb
mov
sbb
movsl
cmp
orl
or
and
lahf
add
push
sbb
pop
pop
repnz
and
push
add
sub
imul
addb
ljmp
mov
cli
adc
out
sub
pop
fmull
aaa
push
fsubrl
cmp
xor
int
or
push
xor
jo
outsb
lret
addb
out
xchg
rcr
pop
add
leave
addb
mov
outsb
arpl
inc
adc
cmp
stos
inc
int3
pop
push
cld
jmp
in
pop
rcll
mov
outsb
push
stos
call
or
pushf
orb
jle
icebp
aas
push
dec
pusha
add
pop
fwait
adcl
std
pop
inc
cltd
ret
aam
cltd
add
pop
adcb
lods
mov
mov
test
pop
cld
sbb
adcl
inc
arpl
add
std
push
scas
sbb
mov
lds
decb
in
rcll
imul
rolb
cmp
add
mov
into
xchg
ljmp
pop
pop
sti
and
cmp
lret
add
data16
pop
rcr
push
ret
data16
xor
cmp
mov
stos
adc
ja
add
lcall
cld
pop
mov
sarl
pop
inc
add
dec
ret
inc
dec
rcl
stos
mov
ds
out
mov
shrl
xchg
pusha
bound
enter
rcrl
jb
lods
mov
push
add
out
mov
push
pop
xchg
loope
push
adc
add
and
js
mov
pop
mov
and
push
sub
stos
add
mov
inc
ficompl
iret
and
insb
test
adc
insb
sub
inc
mov
and
fcompl
sbbb
test
sbb
fldl
jae
icebp
add
or
outsl
je
mov
mov
bound
inc
movsl
loope
cmpsb
add
add
mov
mov
adc
loop
cli
add
mov
outsl
call
imul
sbb
addl
adc
rolb
rclb
movsl
push
mov
fsubrs
adc
gs
and
ret
sub
adc
inc
int3
push
lock
push
inc
cwtl
loop
xor
push
add
fildll
aas
and
clc
loopne
add
push
or
push
inc
jp
filds
pop
dec
rorl
loopne
and
mov
pop
xorl
add
test
sbbl
mov
sar
mov
pop
or
add
aam
add
and
sub
push
adc
loopne
inc
rorb
or
and
pop
dec
sub
adc
dec
mov
stos
add
test
sub
or
sub
in
sub
mov
in
incl
cmp
jg
sub
inc
pusha
push
pop
mov
shrl
sbb
sub
or
add
sbb
les
cmp
shlb
pop
test
sbb
dec
and
xchg
rorl
sub
scas
mov
xorb
jg
pop
stos
adc
aas
sub
and
rorb
mov
add
add
push
test
mov
stos
in
inc
mov
mov
sub
andl
mov
xchg
push
or
xor
addl
push
sbb
sbbl
sbb
scas
and
add
inc
sbb
jle
loop
xor
sub
fmuls
and
and
and
lods
mov
enter
decb
mov
addb
cmp
mov
fcomip
push
jbe
shll
vcmpss
out
cmp
mov
pop
inc
xor
in
cmp
jg
ljmp
cmpl
jl
xchg
dec
add
iret
das
repnz
in
inc
or
jmp
std
inc
xor
and
mov
mov
out
fbstp
push
sub
mov
pusha
rclb
int
cltd
ja
mov
es
mov
cmp
mov
mov
pop
mov
xchg
mov
push
mov
hlt
add
jp
and
and
push
ljmp
dec
outsb
je
jb
fadds
and
pop
icebp
in
outsl
inc
mov
jmp
adc
pusha
push
jmp
adc
ss
std
mov
add
and
in
cmp
pop
sub
push
incb
aaa
fstpt
push
push
jle
mov
test
cmpsb
inc
pop
outsb
popa
in
out
ret
inc
dec
loop
rclb
arpl
test
sarb
incl
in
imul
pushf
notl
es
inc
test
mov
sarl
mov
imul
fstpt
jb
scas
mov
sub
lret
mov
cmp
lock
add
mov
aam
push
adc
add
dec
sarl
adc
sub
inc
mov
mov
pushl
js
or
mov
imul
loopne
aas
jle
mov
insb
adc
pop
mov
rorl
and
pop
xchg
test
or
ret
or
test
out
xchg
adc
jl
dec
jl
mov
inc
pusha
pop
test
fadds
shrl
pusha
test
fiaddl
jle
xor
fildll
in
loopne
xchg
mov
adc
or
ds
mov
mov
ret
and
push
add
or
mov
adc
test
dec
add
push
inc
and
and
and
add
mov
sarb
xchg
pop
adc
and
mov
or
cli
std
and
mov
bound
movsl
shr
and
mov
add
lahf
add
push
add
mov
repnz
jb
mov
jmp
fucomi
sub
fldl
adc
fidivl
xor
fucomi
jg
mov
inc
push
adc
das
mov
mov
aas
mov
pushl
addb
add
xor
repz
add
jl
cld
ja
push
xchg
test
cs
cmp
cmpb
mov
and
xchg
xor
out
enter
mov
test
mov
pop
mov
pop
nop
dec
push
dec
jg
fidivrl
fimuls
push
insl
mov
inc
shl
mov
cmp
in
mov
imul
jmp
lea
dec
cmp
movsl
and
push
subb
cmp
sub
xchg
jno
xchg
add
mov
testb
adc
add
add
and
add
push
adc
fldt
sbb
dec
pop
adc
inc
push
pop
push
jo
push
sbb
ror
filds
or
mov
imulb
pop
popl
addb
add
nop
push
pop
and
pop
aaa
incl
fdivr
mov
push
and
nop
adc
sub
add
sub
pop
mov
mov
push
test
imulb
and
or
cmp
test
pop
mov
lcall
and
mov
push
clc
rolb
push
cmp
push
or
fcoml
add
adc
aad
cmp
mov
add
jg
mov
xor
xchg
or
and
ljmp
adc
and
nop
test
jbe
lcall
cld
in
pop
fistl
fsts
ljmp
sub
adc
mov
dec
add
mov
aad
cld
call
mov
outsl
loope
aas
push
mov
filds
rolb
movups
or
cmp
daa
test
fildll
test
sar
andb
aas
and
sbb
inc
mov
dec
inc
add
in
fwait
notb
test
xchg
and
nop
fisubl
adc
in
lds
lret
outsl
adc
sbb
cmp
mov
pusha
inc
mov
lock
test
pop
sarl
inc
sbb
icebp
add
xor
mov
xor
xchg
aas
inc
outsb
mov
movsb
jp
push
push
xlat
rolb
decl
add
and
inc
rclb
inc
mov
ja
or
outsb
mov
mov
jmp
outsl
adc
add
mov
pusha
or
add
xor
out
mov
fimuls
add
add
xchg
push
push
and
add
add
in
jg
add
mov
xor
call
inc
dec
push
mov
push
jno
pop
adc
test
in
sbb
addr16
and
shlb
jg
add
aas
or
mov
test
xchg
or
mov
pop
pusha
adc
push
jl
repz
pushl
or
and
inc
andl
mov
jmp
loope
or
xchg
stos
lock
adc
add
and
outsb
jle
cmp
push
adc
mov
push
scas
ret
or
pusha
scas
push
ljmp
test
xchg
fwait
aad
mov
mov
dec
icebp
ss
test
outsl
je
xor
mov
xor
inc
add
and
lods
out
push
add
stos
pop
aas
xchg
mov
lds
mov
adc
out
push
cmpsl
ror
and
push
shlb
push
xorl
sbb
pop
mov
lahf
pop
adc
add
and
add
and
push
lock
popf
mov
ljmp
or
nop
sub
mov
aas
xchg
push
adc
test
mov
mov
fcmovb
adc
mov
mov
adc
mov
and
cld
es
test
fstps
push
xchg
hlt
in
fsts
push
rcrb
xchg
xchg
mov
dec
in
sahf
pushf
inc
outsl
lods
add
push
adc
lahf
fwait
repz
mov
aad
into
mov
add
popa
xor
or
hlt
inc
jmp
ss
cld
shlb
js
sti
fcmovu
mov
fmull
lahf
xchg
cltd
nop
mov
aad
fcoml
aad
adc
es
hlt
fcmovnu
dec
mov
rorb
add
xor
cwtl
push
lock
fists
fwait
push
mov
xchg
push
or
push
lcall
pop
or
push
pop
mov
enter
decl
or
push
ss
pop
push
inc
add
sub
xchg
test
cli
ljmp
jp
mov
scas
loope
fistl
bound
nop
cmpsb
mov
mov
mov
pop
lock
sub
lret
pop
mov
add
push
test
lds
shlb
jle
sub
cmpsl
cmp
addb
rolb
arpl
add
loope
adc
orb
add
jle
cmp
sub
and
or
shlb
sub
mov
mov
rcr
cwtl
push
mov
sbb
or
and
loop
or
mov
aaa
shll
push
and
adc
cwtl
add
inc
push
push
push
dec
lods
pop
cs
scas
icebp
sbb
out
test
push
shll
mov
shr
outsb
cmp
stos
dec
lcall
cmp
mov
add
inc
mov
and
cmpb
dec
xor
xchg
adc
lds
jp
call
push
inc
fistps
mov
fcmovnbe
mov
shll
add
fcomip
into
push
popa
inc
rorb
push
and
sbb
cmp
orb
and
xor
add
push
xchg
add
and
shlb
mov
sub
mov
or
das
add
sbb
mov
push
dec
cmp
rolb
jo
and
movb
or
sarb
sub
cmp
push
push
jmp
and
adcl
cwtl
clc
ljmp
add
add
add
das
pop
je
sub
lock
sbb
mov
inc
and
stos
insb
subl
ja
fstpt
push
fisubl
add
xchg
dec
scas
cmp
orb
ljmp
sbb
push
cli
addb
push
out
mov
and
rcl
add
adc
aas
mov
add
mov
mov
sbb
sub
aas
outsb
subb
or
fwait
or
mov
or
push
adc
lcall
scas
arpl
lds
orb
dec
subb
incl
pushf
add
cmp
push
mov
pop
sub
or
cli
push
add
fildl
shlb
sub
sub
sar
sbb
inc
mov
mov
js
and
or
inc
and
sarb
dec
rclb
stc
mov
dec
loopne
and
fistl
add
mov
or
mov
ds
cmp
cmp
jge
mov
cmp
inc
movsl
call
cmpl
enter
sub
mov
ret
shlb
cmp
mov
inc
xchg
aad
inc
push
sahf
xchg
sbbb
outsb
pop
dec
push
cmpb
dec
decl
adc
push
pop
rolb
push
mov
lods
sub
xchg
push
or
adc
cmpsb
mov
loop
push
and
add
popa
cmp
dec
or
or
aad
in
push
mov
rolb
adc
call
jle
pop
add
add
push
roll
mov
sahf
test
pop
cltd
fimull
cli
iret
sub
aad
in
out
adc
sbb
cwtl
inc
inc
movb
mov
shlb
aad
dec
test
inc
cmpl
incl
mov
sub
test
inc
add
sub
add
sbb
popa
rcr
cmpb
jle
sbb
stos
pop
and
inc
das
mov
stos
cli
clc
mov
sti
add
xorb
sar
movsb
dec
fcmovb
add
sub
aad
push
jg
mov
mov
aad
jmp
fs
mov
mov
mov
dec
mov
inc
xor
in
mov
push
outsl
repz
dec
aas
push
cmp
add
loopne
test
rolb
jl
pop
fsubs
mov
and
jmp
aas
add
sub
shr
lcall
add
pop
enter
rcr
aaa
hlt
out
mov
fbld
pop
pusha
sub
imul
mov
jle
add
jg
test
push
ret
mov
addb
mov
add
mov
pop
sbb
push
test
pop
xor
iret
aas
stc
and
mov
add
leave
pusha
fldl
add
cmpl
ja
pushf
adc
rorb
daa
inc
push
shrb
into
es
ror
ljmp
push
inc
push
and
or
push
adc
test
xchg
mov
inc
push
jp
mov
movl
mov
mov
jmp
jge
incl
jecxz
mov
mov
xchg
in
movsl
xor
cmp
adc
mov
xor
cld
add
sub
xchg
mov
dec
insl
jg
sbb
xlat
and
or
icebp
mov
or
and
ret
pop
addb
pop
inc
sbb
push
cmpsl
pusha
sbb
pop
lcall
jg
lret
sub
and
xchg
sub
pushl
adc
mov
sub
mov
adc
clc
notb
add
sbbb
push
sbb
aad
int3
pusha
adc
jo
add
cmp
cmp
test
popf
inc
daa
int3
shrb
imul
call
std
push
roll
cmpsb
push
stos
mov
mov
cmp
in
sbb
add
insb
es
std
xchg
out
mov
mov
pop
add
loope
lods
xchg
int
mov
xchg
sub
sub
sbb
sbb
and
test
aas
xor
ds
fidivs
fidivrs
mov
pop
jp
jns
fcmovnb
push
dec
jo
outsb
add
inc
cmp
mov
add
outsb
xor
aam
and
repnz
add
aas
and
adc
ds
inc
push
jmp
push
mov
mov
dec
in
mov
push
sub
ds
scas
out
bound
notb
data16
out
pop
popa
add
add
bound
mov
mov
add
add
add
insb
add
call
mov
sti
das
sub
mov
or
add
repz
or
push
or
xor
mov
push
frstor
aam
rorb
mov
cmc
scas
push
popa
pop
jo
xor
std
pop
lock
nop
sbb
lock
adc
mov
mov
fbld
test
cmp
add
outsb
sub
push
xchg
rcrb
out
lcall
mov
xchg
add
mov
sbb
pop
add
xchg
add
icebp
mov
push
test
rcll
filds
ljmp
test
lahf
and
mov
shlb
mov
push
aas
incl
xchg
and
call
add
xchg
add
jle
hlt
push
aas
adc
shlb
jmp
add
mov
xor
inc
and
sar
pop
pushf
sub
pop
rcll
xchg
inc
inc
mov
mov
mov
movb
shlb
pushf
push
aaa
shr
shlb
clc
inc
and
mov
andb
mov
popa
inc
movsl
aas
dec
ja
scas
cmp
mov
adc
in
adc
sub
cmc
mov
pop
ret
add
push
jmp
push
adc
add
adc
push
add
mov
mov
pusha
mov
or
add
dec
rclb
jg
add
pop
rcrb
mov
jbe
cwtd
js
jg
xor
add
add
das
and
inc
add
ficoms
ds
add
loopne
dec
cld
das
mov
and
pop
ja
nop
and
insl
or
mov
mov
cmp
pshufw
adc
fists
xlat
add
aaa
adc
cmpb
fadd
nop
add
fistl
push
lock
sbb
pusha
xchg
inc
aas
sub
cli
jo
add
and
sti
mov
inc
outsl
roll
xor
cmp
ficomps
rcll
mov
inc
mov
dec
add
cmpsb
bound
and
movsb
push
fcomp
lods
mov
or
pusha
addr16
aam
outsb
dec
mov
push
mov
stos
shll
flds
add
aas
jb
or
fisttps
lock
ja
adc
shlb
clc
pop
insb
std
cmp
push
xor
mov
add
mov
push
ljmp
push
decb
or
mov
pop
out
mov
or
or
jg
push
add
lods
pop
popa
add
push
out
add
lret
or
adc
or
ret
inc
mov
lret
pop
data16
sub
xor
add
in
incl
aas
enter
icebp
push
xchg
sub
fstpt
lods
or
aam
std
mov
pusha
aas
xchg
mov
nop
and
pop
dec
call
adc
ficoms
in
mov
sub
pop
ret
push
mov
je
jno
test
mov
push
flds
ljmp
mov
hlt
xor
shrb
push
add
mov
and
mov
aaa
push
adc
lret
lock
call
popa
in
lock
aam
loope
add
add
in
in
movsb
repz
pop
test
sarl
nop
bound
divl
roll
or
cld
and
pop
adc
pop
jl
mov
scas
repnz
xor
push
dec
add
sub
pop
fldl
add
nop
or
sub
sahf
jno
ljmp
mov
adc
mov
or
mov
jg
pop
rclb
cltd
dec
xchg
or
imull
inc
inc
xlat
out
shlb
xchg
or
loopne
xchg
leave
sub
ljmp
stos
and
test
sbb
fbstp
or
rorb
loopne
adc
xor
daa
mov
jle
xchg
and
leave
fstp
and
adc
add
adc
xchg
mov
add
xor
jmp
adc
shlb
rcrb
shll
rolb
outsb
and
lcall
dec
push
sub
rol
cli
mov
push
dec
aas
push
adc
fsubrl
inc
adc
aad
or
add
sbb
mov
ret
cmp
pusha
push
add
xor
dec
fstpt
or
or
jl
loop
leave
test
cld
mov
clc
adc
stos
mov
lds
xchg
pop
rorl
push
fcmovb
int
sbb
aas
mov
movsl
cli
xor
mov
push
push
daa
push
mov
inc
mov
and
mov
xchg
fs
movsb
mov
pop
test
sarl
dec
sub
sbb
mov
aad
fisttpll
call
jl
mov
aas
mov
movl
cwtl
popa
pop
mov
ljmp
lret
and
and
add
adc
inc
mov
sub
rolb
jo
add
pop
mulb
fwait
int
add
inc
outsb
inc
stc
loopne
pop
jo
sti
mov
mov
sub
outsb
lock
adc
mov
aas
sbb
mov
or
je
jp
push
xor
mov
incl
sub
push
aas
in
add
adc
jp
icebp
dec
inc
xchg
mov
adc
and
scas
orl
mov
out
xor
add
add
outsl
adc
adc
mov
daa
stos
xchg
outsb
outsl
xor
outsl
aad
inc
jp
pop
pop
das
mov
push
cld
jg
mov
mov
mov
mov
pusha
or
iret
je
push
inc
mov
add
add
xchg
mov
xor
mov
ljmp
subl
adc
add
sahf
clc
and
inc
int3
fcmovnbe
rclb
movsl
insl
sbbl
in
nop
or
mov
dec
pop
repnz
push
adc
bound
mov
daa
add
mov
add
mov
sbb
add
mov
cmpsb
insb
push
jb
jle
add
cmp
push
push
or
cltd
std
add
aas
add
inc
push
push
mov
add
mov
add
add
das
dec
adc
lock
iret
dec
pusha
ljmp
fcoml
add
add
push
pop
adc
add
out
outsl
neg
push
fwait
mov
mov
jb
push
addr16
mov
pop
push
call
lock
add
mov
xor
loopne
or
mov
pusha
shl
test
add
faddl
adc
std
and
lds
adc
and
add
ret
inc
and
ljmp
aaa
adc
push
or
pusha
mov
es
pop
pop
add
es
lock
fidivs
or
xor
push
push
inc
mov
add
movsb
push
or
ret
pop
data16
xchg
addl
rclb
clc
fstpt
mov
add
mov
adc
ljmp
cmp
mov
rolb
repz
lds
aam
jnp
add
cmp
dec
aas
sbb
push
es
xor
or
cmp
pop
cld
pop
lock
pop
sub
in
cmpl
jmp
adc
ss
or
imul
aaa
outsl
add
sub
mov
jnp
sar
add
cmc
pop
incl
shrb
data16
clc
sub
inc
dec
pop
push
jg
add
aas
add
xchg
orb
mov
cmp
pop
cmp
loop
dec
adc
icebp
push
loop
fs
hlt
insb
mov
sub
nop
out
add
or
or
pop
lock
lret
fs
cmp
add
jnp
dec
mov
add
mov
shrb
loopne
pop
cmpb
inc
cmp
imul
outsl
pop
jno
ja
xchg
sbb
xor
orl
sub
lcall
or
loopne
and
adc
mov
mov
into
addr16
mov
rcl
in
mov
fdivrl
inc
add
mov
mov
push
or
adc
rolb
and
push
pop
out
fcoms
and
push
mov
nop
jbe
mov
mov
push
rorl
rcrl
das
push
fnstenv
cltd
ja
pushf
adc
pop
cmc
jg
mov
insl
inc
dec
bound
jmp
pop
cwtl
jbe
adc
add
pop
icebp
jmp
add
push
rolb
xor
or
add
or
test
inc
inc
cli
mov
call
int3
outsl
add
inc
data16
pusha
jp
cld
loopne
inc
shl
cwtl
ret
loope
lea
lods
push
imul
test
test
push
je
pop
pop
jae
xchg
sub
insb
inc
lock
dec
adc
or
jbe
mov
pop
mov
xchg
rorb
pusha
or
mov
stos
inc
jl
pop
add
or
inc
mov
pop
cli
add
bound
add
bound
add
push
xchg
lock
mov
jns
js
ss
push
cli
mov
sbb
mov
push
and
inc
pusha
xchg
jo
sbb
xchg
mov
shrb
call
shl
or
mov
fsubr
cmp
dec
jb
mov
cs
cli
dec
jne
add
loopne
daa
cmp
push
outsl
inc
add
shrb
adc
sbb
movsb
push
outsb
inc
add
or
andl
pop
cmp
aas
mov
push
cld
ja
ret
mov
pop
dec
add
cld
jmp
or
adc
bound
xchg
mov
pop
lock
inc
shlb
and
outsl
ss
push
inc
push
std
mov
jmp
push
bound
roll
inc
xchg
add
mov
pusha
or
and
inc
adc
ljmp
sub
push
lahf
mov
ret
enter
and
cmp
mov
subb
rclb
aas
or
adc
adc
int
test
push
test
dec
and
add
popa
movq
adc
mov
jnp
rolb
inc
jb
mov
jp
cwtl
push
das
mov
js
or
stos
rclb
scas
mov
inc
add
and
push
cltd
clc
roll
movb
push
fisubl
jg
shlb
aad
pusha
inc
jbe
mov
fwait
loopne
rcr
js
inc
nop
aaa
fdiv
call
rol
mov
cmp
or
add
test
fisttps
and
or
rolb
push
add
loop
adc
ret
int3
sub
rcll
or
inc
lcall
cmp
or
add
mov
cwtl
add
les
jmp
xchg
addb
push
mov
loopne
push
xchg
and
jb
sahf
add
cltd
ret
push
test
and
rorb
sti
adc
sbb
sahf
sbb
and
adc
lea
jns
xchg
addr16
xor
add
nop
or
loop
std
sbb
loopne
pop
inc
ss
pop
fistpl
mov
add
push
jg
inc
push
pop
and
loopne
push
repz
addb
pop
ret
call
aad
scas
xorb
insb
mull
mov
pop
sbb
out
rcr
insb
popa
adc
cmp
test
pop
in
mov
xchg
pop
orl
mov
add
or
imul
shlb
in
lock
test
pop
mov
nop
cld
imul
popa
inc
lods
aas
sub
cmp
push
and
mov
or
xor
ret
sbb
xchg
notl
shll
outsl
dec
lahf
add
bound
icebp
push
aas
fldenv
jle
mov
lahf
mov
xor
cmp
jb
dec
mov
fsubr
push
mov
or
stos
xor
fisttps
cld
mov
jl
jle
or
and
orb
mov
xchg
sarb
cld
xchg
cmp
push
mov
adc
jg
aam
add
sbb
push
or
cmc
test
lods
sub
cli
jbe
lock
stos
jl
cld
push
mov
or
push
mov
lcall
jg
add
int
lcall
add
outsb
and
push
push
addl
cmp
movl
mov
sub
or
inc
push
ljmp
shrb
xchg
out
push
adc
daa
mov
pop
xchg
sub
fcomip
scas
push
sbb
pop
mov
or
aas
pusha
jae
cli
push
or
mov
cli
mov
jle
sbb
into
pusha
pop
push
roll
adc
or
add
add
sub
clc
mov
leave
fimull
pop
add
in
pop
fs
sub
push
shlb
fdivs
aam
sbbl
call
lret
popa
adc
in
add
cmpsl
push
shlb
or
add
test
mov
add
mov
adc
mov
inc
ja
adc
fs
aad
inc
add
cmpsb
xchg
addb
fmuls
pop
push
mov
jo
ret
ljmp
mov
add
adc
nop
and
sub
mov
jne
push
sbbb
inc
jg
jo
pop
and
xchg
mov
xchg
mov
and
xlat
decl
push
sub
fcomps
pusha
push
fcoms
sbb
loope
sbbb
mov
push
cs
mov
aaa
cld
jmp
rolb
mov
mov
insl
mov
mov
push
les
mov
lea
xor
pop
push
and
fimuls
add
out
pusha
mov
icebp
ljmp
push
ret
fidivrs
inc
xor
cmp
jb
and
or
add
dec
outsl
mov
push
or
add
lds
nop
add
inc
es
call
cmp
mov
cmp
xchg
adc
dec
test
add
ficompl
add
sub
sbb
adc
dec
cmp
xor
pusha
call
xchg
shl
ljmp
push
cld
adc
fcomps
shrb
or
popa
call
pusha
sub
and
mov
aam
cli
mov
es
add
mov
jg
xor
add
push
pop
add
repz
addb
adc
test
adc
rolb
test
fiaddl
or
ret
and
stos
outsl
pop
pop
mov
xchg
inc
ficomps
cmp
arpl
xor
push
decl
cmpsb
lods
ds
push
rorb
adc
dec
orb
mov
outsl
roll
insb
and
jle
pop
test
add
and
sub
sbb
adc
sub
cli
jg
push
or
push
cmc
pop
push
popa
dec
sub
mov
rorb
inc
adc
mov
mov
and
adc
xor
dec
pop
popa
dec
loop
pop
rorl
sub
aad
test
pop
in
lods
mov
fisubrs
pusha
and
and
add
or
inc
add
mov
jo
cmp
divl
in
mov
addr16
push
test
mov
in
mov
fbld
and
es
push
jo
sub
push
pop
andb
inc
fisttpl
das
push
xchg
pop
pop
mov
adc
cltd
data16
add
mov
ljmp
xchg
shlb
jo
addr16
repz
pop
pop
hlt
push
add
push
push
mov
push
push
pop
and
shrb
pop
add
cli
cmpb
add
int3
push
hlt
in
shlb
adc
inc
sub
sub
or
dec
nop
test
push
add
cmpb
inc
mov
shl
cmp
lret
clc
add
fnsave
shlb
sti
jg
outsl
hlt
subb
push
stos
cwtl
xor
xor
push
xchg
add
jge
loope
cwtl
loopne
bound
adcb
jg
mov
jmp
je
pop
jo
xchg
push
loop
add
xchg
push
xor
popa
jbe
mov
add
shl
pop
mov
push
pop
fadds
pusha
rorb
mov
push
xor
addb
das
mov
push
mov
mov
dec
push
mov
pop
es
mov
sbb
ljmp
sub
das
icebp
pop
push
pop
lock
andl
add
xchg
or
pop
pop
dec
bound
int3
push
popa
add
mov
pushf
push
fistps
xorb
push
or
rorl
ljmp
push
and
shlb
pusha
add
add
and
roll
aaa
mov
or
add
cmpsb
sbb
jbe
ljmp
push
mov
sarb
pop
js
mov
fisttpll
adc
inc
or
rcl
js
mov
add
mov
fiaddl
mov
push
pop
inc
push
loopne
jmp
mov
adc
repnz
push
pop
adc
dec
adc
clc
sbb
xor
hlt
xchg
lcall
popf
aam
repnz
lahf
push
xchg
push
aam
pushl
fcmovnb
and
xchg
bnd
pop
movsl
nop
xchg
pop
out
fcmovu
and
insb
xor
mov
add
push
test
push
and
or
mov
xchg
aas
and
push
cmp
pop
loop
or
in
or
imul
push
pushf
add
adc
pop
addl
das
adc
rcrb
inc
cmp
or
loopne
scas
cmpsb
in
pop
or
inc
add
or
mov
out
add
push
into
test
push
add
or
fs
jbe
mov
inc
mov
pop
lds
cmp
pop
out
add
xchg
mov
or
pop
data16
push
and
testl
inc
test
bound
aad
push
add
adc
adc
lock
adcb
adc
out
add
test
ljmp
sub
stc
inc
test
mov
jbe
pop
cmp
or
pop
loop
pop
xchg
sub
test
roll
sub
fs
inc
pusha
fidivrl
mov
mov
das
or
dec
mov
mov
rclb
mov
jmp
pop
mov
in
pop
sub
push
push
and
push
add
enter
sub
mov
test
subl
xchg
jmp
adc
fwait
xor
sub
repnz
stos
or
mov
movsb
int3
sbb
das
and
cmpsb
mov
and
pop
push
incl
inc
pop
rcrb
and
sbbb
pusha
stos
add
out
addl
sub
adc
popl
sbb
mov
adc
pop
addb
dec
sarb
icebp
pop
and
fnsave
fadds
push
mov
lahf
add
sub
mulb
mov
fcmovnbe
push
sbb
clc
dec
loopne
lret
pop
adc
cld
or
and
sub
push
fcmovu
popa
lahf
and
and
push
sub
jbe
pop
lods
sub
cmp
xchg
andl
push
add
push
test
xchg
cwtl
out
jp
jl
push
xor
aam
sbb
movsl
jmpw
rol
shr
pop
mov
in
pop
in
aam
sub
jle
cmp
sub
sarl
or
xor
mov
inc
mov
inc
xor
add
rcll
jbe
or
call
mov
out
xchg
xor
add
or
filds
rorb
test
mov
add
jle
outsb
add
out
pushf
add
xorb
adc
ja
push
inc
fcmovb
mov
and
add
je
jbe
shrb
call
scas
mov
dec
rclb
ret
or
mov
push
inc
testb
pop
push
mov
sub
scas
clc
xorl
nop
mov
push
pop
out
mov
add
mov
push
add
add
inc
fsubrl
mov
pop
loopne
cwtl
outsb
push
cwtl
in
leave
aam
movl
pop
or
hlt
stos
js
lock
shl
sub
call
push
pop
aad
add
aas
and
cmp
cmc
pop
push
adc
cmp
xor
push
dec
pop
pop
cmp
add
mov
fisubl
out
imul
pop
ret
inc
es
sbb
clc
in
add
mov
loopne
ret
and
andb
and
sub
pop
jmp
adcl
and
sarb
sub
mov
adc
pop
rcrl
push
add
adc
aam
or
pop
test
mov
adc
xor
pop
and
adc
sub
jbe
repnz
push
ret
lcall
test
push
pop
push
adc
add
loop
call
ljmp
inc
add
xorl
mov
xchg
jno
test
lret
mov
sbb
icebp
fwait
mov
outsb
pop
shrb
inc
or
cmp
outsb
ss
loope
cld
adc
pop
adc
jbe
rcr
or
lahf
sbb
pusha
add
jl
xor
test
xchg
test
and
mov
cli
in
cli
mov
inc
out
inc
int3
aas
xor
loop
repnz
out
add
mov
roll
add
scas
inc
push
ret
adc
adc
mov
inc
popl
roll
adc
fs
out
pushf
mov
inc
xchg
decl
cmp
je
add
push
mov
sbb
push
xor
mov
cmpb
std
xchg
push
aas
pop
mov
popa
movsl
mov
in
pop
add
incl
shlb
mov
ljmp
sbb
pop
sahf
outsl
and
rolb
je
outsl
cmp
addl
aaa
fildl
inc
orl
xor
mov
mov
mov
jbe
adc
push
aad
jo
call
xor
jnp
lahf
xchg
addl
jbe
popa
adc
out
jl
dec
push
or
adc
cmp
pop
push
aam
sbb
xchg
dec
es
movsl
mov
or
inc
mov
mov
fsubrs
push
xchg
jg
out
addb
push
fiadds
mov
jg
add
push
xchg
fsubrs
fptan
pusha
arpl
aad
sbb
mov
add
cli
cmp
aad
cmc
jecxz
or
fs
test
call
ror
mull
fwait
xchg
mov
adc
sub
ret
push
and
pop
xor
aam
cmp
xor
push
jnp
lock
mov
mov
adc
shll
or
das
push
mov
adc
nop
sub
mov
jl
ret
mov
mov
add
xor
hlt
lahf
mov
cmpsb
cld
ljmp
rolb
stc
rorb
das
cmp
filds
cmp
xchg
loop
cli
dec
and
sub
and
adc
push
or
and
sub
inc
sar
idivb
push
in
nop
add
out
nop
push
rcr
add
lcall
cmc
lea
push
and
shr
and
mov
movsl
cmp
dec
inc
or
lds
mov
stos
add
dec
je
out
leave
mov
sub
in
adc
cld
loop
add
inc
push
xor
jo
mov
shll
xor
fldt
inc
clc
fisttpl
xchg
in
stc
movsl
adc
mov
sbb
cmp
test
out
shlb
dec
sub
adc
pushf
rolb
pop
fcomps
push
jp
and
cmp
pop
icebp
out
jo
push
sub
ret
push
add
push
sbb
sub
or
sub
xor
inc
add
and
pop
mov
pop
pop
rolb
jl
cld
adc
xchg
pop
cwtl
ret
dec
jp
xchg
mov
adc
scas
clc
es
push
cld
xchg
in
daa
movsl
and
xor
mov
adc
adc
xchg
push
cs
push
adc
aad
adc
pop
xor
and
mov
icebp
incl
dec
lahf
out
xchg
xchg
in
pop
andb
push
push
inc
scas
pusha
push
pop
push
xchg
xchg
loopne
mov
adcb
insb
sub
rolb
push
rcr
sub
cmp
fisubrs
add
sbb
push
add
mov
lods
adc
aam
aam
sbb
sbb
das
pop
and
hlt
int3
in
sbb
cwtl
mov
js
ret
sub
popf
rolb
aam
or
mov
jo
fiaddl
sub
mov
cwtl
mov
es
xchg
pusha
pop
pop
insb
dec
add
push
cmp
movsl
add
push
lcall
sub
sar
ffree
scas
and
rcrl
pop
add
cmp
sti
jmp
inc
and
push
ret
outsb
fidivs
push
aaa
push
aam
cwtl
fmuls
jo
push
mov
push
nop
and
movsb
adc
pusha
inc
push
gs
sbbb
jg
je
add
xor
add
pop
pop
shll
adc
or
sbb
sbb
jo
in
das
or
mov
sub
and
aad
mov
xchg
adc
add
stos
lea
push
test
cwtl
jl
and
out
jle
out
or
push
fsts
jb
add
cmp
lock
stos
and
rcrl
and
push
jle
aas
add
scas
pop
jmp
aaa
outsb
rolb
jnp
inc
add
stos
js
mov
gs
cld
pop
xchg
xchg
jo
pop
mov
or
fidivl
cld
sbb
push
xchg
fcomp
faddl
inc
push
and
and
mov
pop
xor
adc
cmp
stos
lret
push
cld
hlt
or
xchg
dec
js
loopne
pop
popa
ret
add
xchg
psrlw
xor
add
fneni(8087
out
lock
enter
fstpl
xchg
adc
aaa
sub
sarb
sbb
loopne
test
call
dec
jl
mov
adc
xchg
nop
test
push
push
into
add
sbb
cmp
int
bnd
int
mov
sub
mov
mov
mov
aam
pop
lret
in
and
lcall
fldt
adc
pop
stos
pop
push
das
xor
incl
and
add
dec
sub
lcall
fmuls
test
jbe
or
xchg
lods
add
xor
push
inc
sbb
rcrb
mov
push
ret
pop
add
shlb
sub
cmpl
bound
push
pop
inc
aas
xor
and
cld
inc
pop
test
in
aaa
outsl
pop
sbb
adc
pop
sub
and
or
mov
and
rclb
les
insb
fmuls
ss
sub
test
dec
cmp
test
clc
lcall
rcrb
fistpll
push
mov
jmp
xchg
adc
repnz
push
pop
les
or
int3
fsubl
sbb
xchg
mov
test
rolb
popa
mov
cs
pop
subb
in
xchg
xor
adc
push
or
in
sbb
xchg
shr
push
mov
sub
mov
xchg
push
pop
rolb
adc
adc
mov
xor
mov
mov
add
xor
out
popf
add
mov
sbb
push
fcom
pop
roll
adc
cmpsb
enter
adc
push
pop
mov
or
push
sub
push
enter
orb
add
into
fcmovnbe
pop
lret
adc
sub
xchg
pop
pusha
push
pusha
in
ds
mulb
shlb
add
mov
out
clc
jmp
movsb
aas
jns
paddq
orb
add
nop
adc
lods
mov
rcl
nop
adc
sub
sub
dec
sub
test
fisttps
xorb
aam
loope
jbe
xchg
cmp
pop
notb
in
mov
pop
lods
adc
sub
add
aaa
aas
or
sbb
fcomps
imul
filds
and
cmp
mov
cmp
loop
cmp
sbb
and
cmp
sub
cs
test
xor
push
out
call
fcmovnu
mov
in
and
jb
add
and
cmp
pushf
rolb
mov
inc
jo
mov
lret
fcomps
stos
sub
sbb
data16
mov
cld
cmp
les
pop
stos
sarb
sbb
sbb
pop
je
rol
sbb
adc
es
loop
jg
and
loopne
aad
test
xchg
or
inc
divb
xchg
and
cmp
loop
pop
icebp
aas
call
add
xor
mov
add
inc
cmp
mov
adc
fistpll
xor
pusha
cmp
outsl
sub
adc
cmp
wrmsr
cmp
pop
xor
outsb
jp
pop
rolb
mov
xor
cmp
movsb
fcoml
cmpb
jo
das
sub
testb
mov
xchg
ds
sub
push
mov
push
dec
in
cli
mov
add
cmp
xchg
push
xchg
pusha
xor
insl
dec
jbe
sub
cmp
jbe
and
xchg
shll
cmpsb
and
test
out
nop
stos
lock
or
cmp
cmp
mov
xor
ds
cld
subb
ljmp
mov
outsb
add
adc
aam
adcl
in
inc
sub
pop
add
mov
mov
cmp
mov
mov
fs
xor
mov
mov
xor
mov
and
aas
add
push
rcrl
arpl
dec
andb
rcrb
mov
ret
or
dec
mov
mov
sub
mov
xor
loop
les
cmp
lock
ficoms
or
or
mov
cmpsb
jmp
lods
loop
inc
scas
andb
test
mov
pop
ljmp
xchg
andb
pop
xchg
add
rclb
or
jg
andb
mov
mov
mov
dec
pop
and
sbbb
add
inc
jae
lds
pop
adc
rcrb
stc
pop
bound
add
dec
inc
sti
subb
incb
pusha
add
xchg
sub
outsl
add
or
add
js
mov
mov
xchg
xchg
cmpsb
cmpsb
daa
add
push
in
sbb
add
aad
pop
push
add
test
xchg
sub
ficompl
je
inc
and
ret
cmp
xchg
and
adc
adc
call
mov
addb
cmp
pop
or
add
imul
xchg
les
repnz
or
in
inc
js
aaa
push
lcall
jge
jle
xchg
add
add
dec
outsl
cs
add
add
add
push
ss
or
fsubr
iret
sbb
add
dec
xchg
sub
sub
rolb
shrb
stos
das
adc
out
jmp
mov
mov
push
out
fldt
cmp
nop
add
pop
pop
push
dec
bound
push
addb
xchg
pop
and
add
xor
xchg
aam
jge
rorb
xchg
jge
movsb
daa
mov
dec
pop
adcb
add
or
or
xchg
dec
test
outsb
adc
test
push
aas
push
add
clc
orb
rol
mov
xor
inc
ja
aas
shr
add
test
xchg
int3
add
jo
rcll
insb
aad
dec
xor
pop
out
sub
add
repnz
sub
dec
aas
sub
dec
fs
call
adc
pop
inc
push
ret
insl
js
scas
mov
or
loope
mov
cmp
movb
adc
inc
pop
inc
lods
or
jecxz
xchg
pop
xorb
and
inc
rcrb
shl
or
sub
js
mov
push
loop
clc
jmp
adcl
inc
and
fistl
std
sub
gs
andl
cmp
subl
mov
cmp
and
and
push
or
ljmp
dec
adcl
mov
jg
and
add
add
mov
add
adc
mov
or
in
ljmp
or
or
mov
sarl
or
loope
and
rorl
test
test
adc
inc
mov
pop
pusha
sbb
scas
outsb
ljmp
push
adc
leave
jp
cmp
mov
leave
add
and
data16
rolb
cmpb
pop
or
push
adc
push
mov
jmp
xorb
mov
xor
and
xchg
add
ds
mov
in
in
mov
and
sub
or
loopne
or
ret
and
in
inc
mov
or
mov
pop
cmp
arpl
jg
insl
repnz
or
loope
out
popa
sub
or
test
pusha
push
cwtl
clc
outsl
xor
mull
or
inc
ljmp
add
sbb
add
cmp
add
sub
mov
xchg
jg
inc
cld
xor
add
add
sbb
inc
movsl
aaa
and
clc
pop
and
add
add
ret
xor
sub
mov
lods
clc
pop
into
pop
iret
xchg
in
add
add
sti
add
mov
les
shll
fldl
nop
fcmovnbe
mov
mov
mov
scas
rolb
mov
and
dec
xchg
sbb
xchg
push
rclb
add
add
idivb
xor
dec
pusha
adc
cs
mov
pop
movb
es
adc
out
orb
push
loop
cld
adc
mov
enter
jg
movsb
sarb
daa
cmp
into
inc
popa
or
push
push
test
mov
loopne
push
add
mov
pop
add
or
or
and
popa
pop
xor
pop
lret
cld
inc
adc
or
adc
loop
inc
mov
and
or
and
cmc
pop
sbb
aaa
pop
mov
and
adcb
outsl
sub
or
aam
add
mov
loopne
push
mov
add
inc
adc
pop
push
add
pop
cwtl
out
push
mov
push
std
dec
stos
push
insl
sarb
sbbl
dec
fsubrl
push
movsb
dec
cwtl
ret
cld
ljmp
ret
in
dec
ja
inc
add
inc
pop
movsl
cmp
mov
cli
inc
in
and
pop
lock
mov
pop
pop
in
xor
mov
push
aam
adc
adc
jp
dec
and
push
es
pop
jecxz
ljmp
nop
jb
mov
adc
fucomi
sbb
mov
add
jecxz
ret
mov
add
and
add
add
push
mov
outsb
ds
pop
mov
jo
cmp
aam
lock
adc
xchg
mov
shlb
mov
rcrl
cmp
xor
xchg
sub
out
mov
sub
lods
dec
push
cmp
test
xor
mov
rolb
mov
xor
jns
aaa
mov
adc
add
mov
loopne
aad
hlt
mov
or
or
rcrl
clc
cmpsb
xchg
push
pop
lahf
push
xchg
negb
stos
adc
cmpb
test
or
push
lahf
rcll
and
lods
pop
xchg
sbb
cmp
sbb
sub
mov
mov
dec
stos
inc
dec
add
push
add
or
dec
pop
or
push
cs
out
adc
pusha
pusha
js,pt
sub
xorb
addl
and
cld
dec
inc
mov
fidivs
mov
add
pushw
add
push
mov
aas
dec
out
sub
jecxz
insb
shrb
or
lock
pop
adc
rcl
xchg
cmp
or
test
inc
add
add
push
cmp
mov
push
mov
das
pop
addl
scas
es
mov
sub
pop
adc
mov
daa
add
sub
into
add
loop
jecxz
pusha
jge
add
adc
mov
inc
adcb
nop
lcall
sbb
mov
xchg
pop
inc
mov
mov
or
ret
ret
aas
xor
subb
and
jp
push
add
lock
je
pushf
or
and
test
out
dec
pop
or
pop
jle
xchg
fstpt
and
aaa
sub
xchg
pop
nop
fstps
add
pop
add
inc
notb
xchg
cmc
inc
cmp
fldcw
adc
xchg
hlt
add
aam
fstps
mov
andl
push
mov
movaps
enter
int
rol
mov
sub
es
inc
fistpl
fdivrp
xchg
repz
adc
push
push
cld
lock
dec
jb
push
das
aas
adc
jp
xchg
mov
and
push
and
arpl
mov
xchg
push
mov
mov
push
pop
xchg
out
xchg
push
push
jo
enter
adc
clc
pop
and
mov
adc
cwtl
push
roll
fcoms
hlt
or
rcll
add
add
loop
xchg
mov
cmp
or
adc
idivl
into
adc
push
sbb
imul
push
mov
inc
add
lret
aas
cs
enter
cltd
les
aas
es
xchg
aas
mov
outsl
sbb
add
rcrb
repnz
pop
inc
or
add
push
push
push
fwait
jp
jecxz
jno
cld
add
xor
mov
dec
push
and
mov
popa
es
mov
pop
and
or
stos
and
xor
rol
pop
pop
loopne
xor
xchg
test
scas
stos
orb
addl
xchg
inc
mov
jecxz
add
sub
add
inc
out
xor
dec
adc
adc
pushl
jo
das
mov
mov
add
aas
mov
imul
sbb
nop
add
sbb
pop
subb
gs
and
stos
xor
pusha
sbb
mov
push
dec
loopne
sar
cmp
mov
incl
jo
mov
jo
push
pop
lods
fcoml
add
lock
std
in
add
nop
rolb
test
inc
enter
dec
rcrl
adc
adc
pop
pop
imul
xor
popa
adc
ljmp
inc
mov
jecxz
or
cmp
add
aas
rcrl
cmp
sub
sub
ret
femms
mov
rcrb
push
xor
jl
push
mov
and
loope
pop
divb
aaa
adc
push
pop
and
sub
pop
or
pusha
push
call
adc
inc
add
lock
jp
and
pushf
fidivs
pusha
xchg
lock
pusha
inc
dec
aaa
sbb
mov
sbb
mov
pop
adc
adc
shrl
add
xchg
divl
fmull
and
jae
ja
fwait
dec
jno
push
mov
syscall
push
cld
or
mov
incl
test
ret
xor
xchg
inc
hlt
loop
ret
inc
scas
mov
sub
xor
push
mov
inc
push
andl
xor
or
rolb
jbe
xlat
mov
icebp
cmp
addl
outsl
pop
mov
push
lock
inc
loopne
aaa
mov
and
cmp
testb
push
imul
or
pop
shlb
adc
sub
fs
das
pop
ret
cs
push
ret
pop
mov
mov
dec
or
fiadds
and
lcall
mov
and
aaa
fcomps
inc
sub
rcrl
push
int3
int3
rorl
roll
cwtl
hlt
ljmp
pop
sbb
ficomps
data16
jp
fistpl
or
fsubp
movsl
adcb
xchg
rclb
inc
icebp
mov
inc
bound
stos
sbb
or
loopne
ds
xor
xor
or
adc
lock
and
rcl
or
mov
int
add
xor
mov
adc
arpl
sbb
jbe
lea
add
loop
shll
sahf
mov
out
test
push
pop
ror
xor
jmp
pop
mov
xor
addl
fadd
je
andl
leave
int3
loopne
faddl
mov
mov
add
xchg
jl
cld
jb
outsl
shlb
jo
xor
sbb
push
shll
push
adc
imul
xchg
mov
lock
lret
sub
sub
ss
filds
sahf
rcrb
jo
clc
lcall
sub
pop
inc
push
xchg
fsubl
and
lret
in
imul
pop
push
xchg
test
and
mov
xchg
rolb
mov
dec
test
out
lcall
pop
faddl
add
push
xor
push
adc
outsl
add
and
lcall
idivb
fmuls
or
adc
fsubl
add
rorl
outsb
fists
rclb
sub
sbb
or
add
xor
filds
in
pop
jo
test
push
sbb
je
add
aaa
push
pop
xchg
fsubl
js
mov
mov
filds
scas
push
inc
sbb
out
and
enter
adc
mov
xchg
pcmpeqd
int3
or
jmp
xchg
and
addb
xchg
xchg
dec
dec
fistps
lds
sub
lods
dec
inc
inc
add
out
loopne
push
cld
shlb
push
stos
inc
cmp
movsb
stos
pop
add
inc
les
cmpsb
getsec
shlb
sub
adc
jbe
ss
adc
into
addb
outsb
sub
push
fidivrs
aaa
push
test
adc
add
mov
pop
sbb
push
or
push
clc
adc
sbb
sbb
sub
sbb
fsubl
dec
adc
out
lahf
sub
lods
jmp
stos
add
mov
in
mov
push
fisubrs
and
fcomip
jno
add
add
aam
lock
and
ret
aas
jne
push
incl
fiadds
mov
ljmp
add
adc
or
aad
push
xor
push
sbb
test
bound
pusha
lcall
stos
add
jle
push
je
jg
mov
insb
lahf
mov
add
dec
pop
push
sub
push
push
pop
movsb
xchg
push
aas
stos
pop
sar
push
sbb
add
scas
rorb
sbb
dec
test
rcll
lret
add
insl
or
pop
roll
jo
jbe
test
lock
je
je
call
rol
hlt
sub
aam
dec
mov
les
add
adc
clc
push
in
add
mov
fcmovnbe
mov
call
xchg
lcall
pusha
cmp
ret
addb
inc
addr16
hlt
and
adc
fists
ja
cli
outsl
xchg
add
cwtl
add
sbb
sbb
shlb
sbb
fisubrl
xor
rol
rorb
and
sub
outsl
les
adc
mov
cmp
sbb
jle
cmp
and
lret
mov
incl
mov
sar
sbb
push
loopne
sub
arpl
sbb
inc
aam
dec
or
sub
arpl
mov
push
dec
pusha
fbld
jg
bound
add
sbbl
inc
popa
sub
dec
mov
pop
xchg
out
stos
lock
pusha
aas
or
inc
add
mov
ds
setle
clc
dec
insb
ret
fdivrl
push
testb
mov
and
mov
dec
sub
clc
push
lcall
adc
xor
outsl
and
loope
mov
fmull
inc
dec
in
jmp
pop
and
mov
cmp
jmp
mov
fxam
xor
add
add
stos
rolb
frstor
cmp
push
sti
jg
xchg
stos
cmp
loopne
aam
push
sbb
adc
mov
dec
mov
rcll
aad
jg
es
movsb
mov
mov
mov
ljmp
mov
push
scas
add
ffree
or
jg
jno
pop
aad
aad
inc
adc
pusha
add
sub
ljmp
fldt
sbb
cs
inc
sub
sub
jle
pop
test
loopne
test
pusha
and
orb
fcmovnb
add
pop
or
adc
inc
psraw
ret
add
in
pop
and
aaa
sbb
lss
cmp
call
add
cmpl
mov
mul
pop
int
cmp
in
dec
clc
cmp
sub
leave
sbb
sub
pushf
nop
insb
pusha
jb
xchg
or
inc
insb
roll
clc
adc
or
jle
mov
inc
sti
adc
pusha
sbb
lods
ret
mov
shll
andl
sbb
cmp
mov
lods
cmp
push
arpl
in
aas
sbb
stos
sbb
or
fs
loopne,pt
test
mov
pop
add
sub
and
xchg
inc
mov
dec
out
mov
pop
stos
ljmp
in
xchg
lock
jnp
shll
add
jbe
mov
xchg
rcrb
dec
ret
mov
lcall
mov
pop
imul
add
loopne
inc
pop
or
or
int3
push
push
jg
sbb
mov
call
dec
dec
inc
add
sarb
sub
ds
mov
int3
push
inc
mov
pusha
jp
aam
xchg
sahf
sub
adc
add
in
mov
mov
dec
pop
adcb
add
cmp
mov
pop
es
xchg
xchg
sub
ret
or
sarb
ja
ss
verr
shlb
outsl
lock
pop
hlt
sub
out
add
test
mov
add
add
loope
in
sub
xor
fstpt
add
loopne
mov
adc
inc
push
nop
add
dec
push
clc
ja
aas
hlt
mov
cld
ss
and
stos
rorb
std
loopne
arpl
insb
sarb
mov
pop
aam
sbb
fdivs
jo
xor
push
mov
std
push
add
nop
or
add
jmp
ret
pusha
dec
mov
push
mov
adcb
add
push
std
fstps
pop
sbb
pusha
add
mov
jo
decb
add
cli
dec
loope
cwtl
aam
mov
pop
sbb
outsb
shr
mov
adc
add
add
ljmp
mov
mov
and
push
mov
fs
push
mov
inc
jg
lods
shll
cmp
push
outsl
xchg
add
sbb
decl
xchg
add
and
mov
xchg
xor
std
pop
pop
ja
xchg
xchg
jecxz
pushf
pop
fwait
mov
lret
sub
rcrl
lea
add
xchg
rcr
and
xchg
add
jle
andb
mov
sbb
int3
add
rolb
adc
test
and
fwait
and
fsubrl
or
shl
sbbb
xor
pop
test
jge
repnz
inc
rcl
sub
outsl
sbb
in
pop
out
jb
xchg
push
or
adc
pop
jg
add
mov
dec
fcoms
xchg
and
cld
and
jo
jecxz
dec
loope
pushf
sub
mov
push
into
bound
xor
mov
sti
push
movb
push
aaa
aam
stos
rclb
ljmp
imul
fcomps
shlb
pop
cmpsb
cmp
test
in
ja
test
rcrb
xchg
add
push
push
enter
cld
pushl
pop
mov
sbb
pushf
and
loopne
loopne
sub
and
push
mov
sub
xchg
add
out
mov
jg
fsubs
sarl
push
ds
mov
xchg
rorb
test
push
lock
pop
sub
movsb
pop
or
stc
ljmp
stos
or
fldl2e
xchg
and
mov
lds
or
pusha
pop
xchg
int3
inc
add
add
in
adc
and
pusha
imul
in
adc
fucomi
inc
mov
inc
add
in
cld
nop
cmpsl
jp
decl
adc
add
adc
add
sarb
pop
cltd
fildl
rolb
cmp
movsl
sub
lret
adcb
inc
push
call
or
push
repz
mov
ljmp
add
and
and
add
dec
fidivl
sub
aaa
sbb
lods
adcb
xor
sbb
mov
add
add
es
loop
shlb
sbb
mov
pop
xchg
pusha
add
pop
movsb
and
or
and
shl
and
add
int
or
sar
rorb
xchg
sarb
cs
xchg
aam
mov
add
or
andl
dec
mov
movsb
out
and
push
fcoml
out
les
and
shll
mov
xor
adc
sbb
enter
rclb
loope
fwait
add
inc
ret
ljmp
xor
cmp
popf
in
mov
cwtl
ret
aad
mov
lock
fsubrs
jmp
ljmp
pop
inc
dec
push
in
and
mov
hlt
out
push
dec
mov
add
mov
cwtl
sub
ret
cmp
xlat
add
fwait
mov
test
jo
outsb
cmp
mov
and
adc
jp
add
pop
repz
in
add
jecxz
xlat
adc
mov
jecxz
lods
inc
jp
cli
and
pop
nop
jno
inc
jecxz
sbb
addb
mov
filds
pop
add
mov
addr16
aas
les
xor
xchg
push
and
out
test
add
adc
call
adc
icebp
pop
pop
mov
dec
mov
insb
xchg
dec
jno
lds
push
add
aaa
jl
push
lcall
mov
rorl
stos
add
hlt
out
add
out
ret
in
mov
mov
loop
rorb
rcrl
add
das
push
sbb
rcrb
or
mov
mov
fbld
fcmove
push
mov
aas
arpl
cmpsb
fisubrl
mov
mov
cld
pop
insb
std
xchg
mov
repz
addl
xchg
pusha
add
ja
and
je
xor
dec
loop
pop
push
xchg
add
pusha
jg
push
aas
das
mov
mov
jb
push
scas
add
add
jno
pop
shl
clc
adc
add
add
push
add
sub
add
mov
push
pop
shll
int3
sbb
hlt
das
inc
dec
nop
sbb
jecxz
mov
nop
dec
and
pop
add
mov
addb
add
fwait
xchg
out
lcall
mov
shrl
fcompl
add
subb
test
out
push
or
and
xchg
ret
jle
es
inc
add
mov
adc
sbb
inc
cld
mov
mov
push
fistl
mov
push
sahf
push
inc
push
mov
xor
aas
adc
cmp
mov
xchg
rclb
addl
jge
nop
sarl
or
pusha
xchg
ret
inc
in
push
lods
mov
cli
mov
add
dec
xchg
fbld
add
stos
sarb
jg
in
ljmp
sbbl
test
loope
xchg
or
movsb
and
rorl
daa
xchg
jmp
add
icebp
push
out
es
add
lcall
adc
pop
loopne
dec
adc
inc
push
fs
push
loop
outsb
xchg
jnp
loopne
shll
nop
lcall
out
xchg
and
mov
movsl
adc
add
xor
ja
push
cs
ljmp
pop
xchg
andl
aas
in
cwtl
popa
test
pop
push
mov
inc
cmp
test
fsubr
scas
call
sbb
aam
xorl
jo
enter
xchg
test
lahf
ret
or
shl
leave
cmp
sub
std
push
shlb
mov
repnz
push
ljmp
add
cld
mov
stos
cmc
ss
idivl
mov
jo
xchg
push
lds
loope
pop
jp
ret
or
lea
dec
sbbb
cmpsl
repnz
sub
xchg
jecxz
test
push
pop
daa
or
popa
das
or
adc
ds
or
jo
adc
pop
add
lcall
mov
xor
test
icebp
sub
mov
pusha
out
orb
test
aas
push
xchg
sbb
lret
add
es
xchg
ret
pop
cmp
pop
mov
aas
push
xchg
mov
rcr
and
fsubp
addl
inc
mov
jl
add
call
sub
xlat
mov
lahf
insb
xchg
mov
jo
pop
push
mov
add
inc
and
xchg
mov
fcomps
add
cmp
test
xchg
mov
xchg
daa
push
or
fcomps
outsl
and
jl
adc
in
fcomps
dec
jne
icebp
mov
inc
mov
mov
sbb
inc
sub
inc
mov
jl
lcall
mov
hlt
jg
hlt
lea
pop
push
nop
aas
stc
std
cmpb
cmpl
subb
subb
sub
add
add
orb
outsl
aaa
mov
fmuls
jo
xchg
out
xchg
mov
decl
sbb
out
shrb
pop
test
dec
add
add
or
add
adcb
pop
ret
in
test
mov
roll
push
rorb
loop
lcall
adc
jno
dec
add
iret
adc
adc
and
push
sub
lods
jne
add
cwtl
sbb
nop
inc
aad
inc
xchg
or
push
enter
stos
and
repz
daa
inc
or
sbb
sub
mov
sbb
iret
cmp
lret
mov
adc
xchg
cmpsl
ja
and
and
fcmovnb
or
push
inc
pop
stos
test
xlat
adc
push
jmp
pop
jecxz
ret
ret
mov
iret
adcb
rolb
add
out
push
bound
call
push
mov
iret
fiaddl
cmpl
cmp
lcall
out
out
fmull
mov
sarb
sbb
dec
lret
inc
adc
insl
add
jecxz
mov
sub
add
mov
jmp
push
inc
jb
sub
loope
xchg
or
cwtl
jecxz
adc
subb
adc
dec
mov
lret
in
and
cmp
dec
shr
outsb
sbb
shlb
test
mov
fmull
or
xchg
push
rol
push
ror
rcrb
or
push
stos
scas
push
shll
pop
inc
or
cmp
mov
push
jo
sbbb
xchg
loope
adc
outsl
bound
jne
lea
inc
or
and
dec
inc
mov
std
ja
loopne
rclb
xor
push
rorb
ret
adc
cmpsl
pop
mov
fdivrs
dec
inc
in
and
pop
movsb
roll
adc
xor
push
and
xor
inc
ret
test
ret
popa
push
xchg
lds
add
repz
adc
aas
cli
inc
xchg
xlat
mov
aas
sub
pusha
sbb
pop
add
fstpt
cmp
or
test
jg
fildl
adc
mov
repz
pop
mov
sbb
push
lret
cli
mov
push
ret
test
movsb
push
pop
cmc
jmpw
xchg
or
inc
test
add
cmp
xchg
lods
push
movsb
adc
adc
and
aas
or
xor
aad
mov
push
rcrb
dec
push
push
hlt
rolb
js
shll
mov
and
pop
lcall
in
decl
and
add
inc
popa
push
cmpb
nop
ljmp
push
mov
and
in
not
cmp
in
mov
aad
sub
ret
stos
inc
push
add
mov
mov
lret
inc
movsl
and
hlt
test
loopne
int3
negl
out
add
adc
aas
in
lret
or
pop
pop
and
sub
sub
insb
cld
cmc
push
mov
mov
stos
sbb
aad
and
cmp
and
aas
xchg
push
add
add
rcr
cmp
cmp
bound
andb
adc
loopne
and
mov
fsubs
pusha
ret
sbb
add
add
or
adc
and
inc
lahf
dec
fwait
mov
mov
movsb
rcrb
mov
add
mov
add
outsb
dec
ljmp
push
lcall
mov
outsb
aaa
xor
je
out
push
popa
loopne
dec
incl
mov
add
call
test
cltd
pusha
xor
pusha
dec
and
pop
adc
std
pushl
add
and
loopne
cmpsb
and
dec
adcb
adc
add
mov
pusha
fisubl
adc
or
fwait
mov
xchg
adc
pop
xchg
adc
adc
aas
lds
out
add
rcrb
es
cli
xor
pop
add
imul
mov
jo
push
outsl
dec
das
add
loopne
push
sub
pop
hlt
and
mov
mov
sti
inc
push
sar
add
scas
adc
mov
pop
adc
int
jbe
push
stos
push
aam
pop
adc
repnz
scas
cmp
dec
push
pop
popa
dec
add
mov
pusha
shlb
das
push
adc
or
addl
imul
add
mov
mov
or
sub
adc
imul
out
cmp
cs
clc
mov
and
push
xor
out
sti
adc
pop
lea
push
xor
push
loop
add
xchg
mov
lahf
notl
std
push
into
mov
adc
pop
xchg
jmp
lock
loopne
dec
add
and
int3
and
adc
ror
add
cld
fld
lret
fimull
cmp
or
or
push
jb
je
inc
xchg
out
lods
fstl
fadd
andl
mov
mov
xor
cmp
repnz
sub
das
shrb
adc
daa
push
xchg
mov
das
and
add
es
jmp
or
sub
and
dec
xorl
incb
mov
fcmovnu
sub
ficoms
xchg
xor
ret
cmpsb
incb
outsb
int3
movb
aad
add
cmp
mov
jno
jno
fists
xlat
and
push
or
enter
and
add
rcrb
inc
aas
aam
add
mov
bound
add
jmp
sub
or
push
xchg
nop
adc
sbb
mov
rcll
push
pop
ret
cltd
cmp
aaa
sbb
add
popf
cmp
rcrl
add
mov
loopne
fcompl
aad
out
inc
add
adcb
es
inc
stos
or
pop
xchg
stos
mov
xor
adc
push
push
mov
push
es
sbb
adc
add
sarb
test
inc
or
push
push
stc
pop
leave
rolb
jb
insb
xchg
ss
mov
and
repnz
jp
decb
cmp
mov
xorb
mov
xchg
push
out
ja
sub
pop
push
subb
imul
aaa
shlb
and
cld
pop
xchg
push
shlb
test
aaa
xchg
adc
in
addb
or
xchg
shlb
cmp
cld
sub
pop
inc
push
add
inc
mov
push
pop
add
mov
loope
lock
nop
aaa
add
rcr
icebp
sbb
lcall
or
dec
test
inc
add
sub
ficomps
pop
add
andb
mov
pop
push
add
out
mov
adc
inc
pop
push
rol
int
mov
pop
out
pop
rcrl
loopne
test
test
pop
fneni(8087
push
or
push
ficoms
jo
xchg
outsl
xor
pop
mov
stos
cmp
add
and
add
cld
push
pop
fucomi
sbb
sub
xchg
adc
and
fdiv
push
or
icebp
adc
out
adc
push
loopne
call
cld
push
lcall
movl
push
sub
incb
or
or
adc
in
adc
jo
jbe
jno
pop
fldl
fisubrs
test
mov
test
movsl
xor
add
adc
lock
or
call
add
fadds
inc
add
add
mov
pop
or
cld
out
enter
push
std
div
nop
lock
add
and
add
lea
in
adc
xor
add
addb
jmp
adc
lds
dec
rol
xor
push
or
hlt
cwtl
das
inc
sub
sub
xchg
and
pop
mov
mov
inc
pop
fsts
sub
cmpsb
pusha
push
sbb
jne
pusha
or
loopne,pt
push
lods
je
fidivl
cmpsl
lock
jmp
in
and
jp
xchg
cmp
push
lock
fildl
or
fisubl
cmp
movsl
xor
sbb
mov
dec
scas
aad
cs
cs
add
jmp
add
ljmp
pop
je
mov
sbb
aad
cmc
pop
cmc
xchg
mov
mov
shlb
mov
xchg
push
aas
aad
sbb
and
je
or
rcll
ljmp
lock
aas
pop
rol
adc
les
push
mov
adc
sub
adc
rcll
mov
and
cmpsl
nop
adc
adc
ljmp
sub
aas
mov
fcmovnu
push
icebp
sub
mov
mov
cmp
ret
push
mov
push
aam
movsl
rorl
fisubl
call
loope
xor
loop
and
xor
pop
inc
push
xor
mov
sbb
repnz
adc
mov
das
and
xchg
lods
nop
push
cmpsb
ljmp
push
pop
add
add
out
cmp
lods
aas
adc
test
fsqrt
add
call
pop
pop
adc
mov
into
push
add
adc
cs
sbb
push
nop
push
xor
dec
fbstp
incb
decl
loopne
aas
movsl
jle
imul
andb
add
ds
pusha
adcb
lods
pop
inc
mov
ds
mov
outsl
sbb
and
rolb
pop
rcr
imul
cld
dec
cld
sbb
nop
subb
add
out
xor
mov
xchg
nop
shl
jb
push
hlt
fiadds
rclb
in
push
divb
lret
xlat
nop
cs
or
enter
add
xchg
cwtl
add
ficoml
ljmp
dec
sub
enter
xor
hlt
xchg
loopne
push
lock
mov
or
dec
mov
inc
mov
rorb
pop
pusha
or
addr16
or
sahf
sarb
clc
aaa
mov
daa
mov
mov
sbb
and
mov
cmp
iret
or
rorb
add
ret
flds
rorl
inc
aad
xchg
or
cmp
or
or
in
orl
sbb
adc
jg
and
adc
fbstp
lds
adc
mov
daa
mov
out
push
mov
and
imul
inc
je
shr
add
mov
add
mov
mov
sub
pop
in
jmp
addb
fidivl
push
nop
or
mov
fildll
cs
inc
add
adc
filds
mov
adcb
jmp
add
dec
add
pop
add
movups
nop
dec
add
aas
scas
loopne
ret
add
jmp
or
in
cmp
sub
or
ficoml
loop
aad
mov
mov
fwait
add
aad
adc
loopne
inc
mov
sub
jbe
cmpsb
add
nop
pop
sbbb
scas
fdivrs
xor
add
inc
mov
mov
or
or
data16
mov
add
xchg
push
mov
adc
loopne
inc
adc
cwtl
js
sub
pop
mov
es
bound
aaa
flds
xchg
sbb
sub
fisttps
and
movb
insb
mov
addr16
jmp
ljmp
movb
add
mov
shrb
xchg
add
aad
push
xor
mov
xor
test
loopne
enter
push
sbb
or
pop
mov
fcompl
jmp
mov
add
pop
mov
sbb
xchg
mov
mov
in
add
xchg
jne
test
fstpl
sbb
adc
andb
fidivl
cld
or
and
and
add
mov
lahf
inc
xor
push
nop
add
je
add
xchg
cld
adc
add
jbe
mov
loop
imul
add
mov
or
or
push
jl
or
insb
mov
sbbb
aaa
jecxz
mov
lea
pusha
out
xchg
mov
add
push
test
inc
push
or
push
pop
lret
fucomip
leave
mov
addb
push
rolb
iret
cmp
jno
and
in
mov
cld
xor
jge
mov
pusha
lret
je
sbb
mov
push
into
mov
insl
clc
push
add
popf
addb
push
adc
inc
cmp
sahf
adc
mov
dec
inc
pop
seto
movb
int3
add
outsb
mov
daa
pusha
clc
in
inc
or
or
aad
pop
push
sub
inc
ret
and
sbb
rorl
jmp
pop
add
cmp
mov
adc
mov
clc
insl
push
adc
push
and
adc
shll
add
inc
fists
dec
jge
shr
adc
pop
xchg
mov
mulb
add
movsb
sbb
sbb
hlt
ljmp
cmp
fstps
les
mov
adc
shr
fildl
add
stos
mov
mulb
or
outsb
xor
sub
xchg
nop
add
or
push
xchg
cmp
adc
incb
repnz
mov
outsb
loop
cltd
iret
sub
insl
popa
mov
inc
mov
shl
jb,pt
pop
fisttpl
jae
call
sub
mov
ljmp
sarl
inc
in
std
in
scas
sub
negb
ficomps
cmc
loop
push
xor
push
mov
adc
shlb
stos
and
mov
sbb
js
cld
addb
mov
test
mov
ret
add
arpl
idivl
jmp
std
lcall
rcl
inc
add
pop
icebp
pusha
or
inc
push
shlb
mov
outsl
xorb
pop
rolb
sbb
mov
push
out
jecxz
and
addr16
jo
add
mov
xor
sbb
inc
dec
sub
imull
add
loop
cld
push
add
mov
inc
or
out
in
pop
sbb
sbb
dec
mov
or
mov
add
ljmp
pop
enter
fs
push
add
data16
sub
fildll
jbe
and
and
cmpsb
aam
cld
insb
add
ss
incb
cmp
inc
push
subb
add
fwait
inc
sub
push
js
add
int
insb
sub
inc
out
out
add
je
or
xchg
in
and
pop
les
dec
mov
gs
lea
test
lods
incb
add
jecxz,pn
push
sub
push
adc
pop
adc
push
stos
in
inc
push
push
andl
push
cmp
call
lret
shl
gs
in
xor
add
ds
shl
aaa
dec
jecxz
aad
pop
popl
push
mov
cli
mov
les
pop
pusha
adc
push
pop
and
test
test
xor
cld
mov
jp
jge
mov
or
add
int3
loopne
lods
insb
lock
push
cli
mov
xor
fldt
shrl
mov
shrl
sbb
nop
xchg
or
imul
in
mov
lahf
pop
and
mov
or
add
sub
aas
mov
mov
rclb
add
addb
xor
mov
push
lea
adc
aad
adc
jbe
into
mov
xchg
xor
pop
in
inc
in
xchg
pop
ret
jmp
xor
aad
mov
inc
aad
dec
in
test
push
add
mov
in
mov
sub
rol
enter
jmp
mov
sub
pushl
insb
push
sub
hlt
inc
sub
mov
jmp
rorl
sbb
mov
rolb
into
xchg
pop
pop
ljmp
adc
and
sub
push
sahf
add
or
sbb
adc
dec
fmuls
add
ret
scas
sub
push
int3
sub
pop
lret
shll
sbb
roll
dec
pop
or
aam
test
push
mov
push
pop
fcmovnbe
in
in
ss
lcall
jecxz
and
sub
sub
push
shl
stc
push
and
push
push
add
test
daa
lock
jo
cld
sbb
pavgb
sbbb
mov
sbb
or
push
mov
adc
xchg
or
push
add
pop
dec
pop
addl
cs
ss
and
jl
cmp
fmull
push
pop
mov
scas
and
push
add
fwait
icebp
popf
add
rcr
sbb
aad
loop
jmp
adc
aad
fsubs
pop
pop
arpl
pushaw
add
icebp
push
pop
cmpsb
out
loopne
and
loop
push
cwtl
push
cmpsl
fcomps
sbb
lahf
cli
add
add
cmp
pop
iret
adc
and
mov
aam
jle
jl
push
add
nop
push
cld
xchg
fildll
push
ja
dec
inc
pusha
subps
rolb
or
mov
call
adcb
in
push
adc
mov
pop
jge
pop
test
pop
push
adc
cmp
xchg
pop
movb
cwtl
mov
mov
jo
sbb
pusha
push
xor
adc
repz
xchg
adc
nop
sub
cmc
pop
jl
movsl
adc
rclb
lcall
pop
fwait
ret
push
sub
jo
pushf
les
repnz
or
jle
push
push
sahf
fisttpll
sub
pop
inc
jecxz
and
fstpl
pop
rcr
xchg
inc
imul
subl
jle
call
outsb
pop
xchg
add
sub
pusha
pop
shr
mov
mov
xor
stos
cmp
pop
fcoms
and
or
mov
lock
pop
hlt
push
ljmp
xchg
adc
popf
pushl
in
pop
xchg
sahf
mov
repz
jno
fs
push
sub
rcrb
sub
fcmovnb
or
cmpsb
mov
push
stos
mov
push
clc
add
jecxz
sbb
mov
pop
fistl
pop
and
daa
add
sub
xchg
xchg
mov
into
sbb
sub
push
enter
ret
rcl
sub
lcall
sub
out
mov
cwtl
add
sbb
lock
mov
pop
mov
rorl
shll
hlt
push
mov
lret
pop
loop
fs
std
mov
roll
sbb
cmovo
cmpsb
push
addr16
test
aam
test
sahf
cmp
sbbb
mov
cmp
aas
and
int3
ss
cld
xchg
mull
dec
adc
add
outsb
jl
adc
ret
pop
fcompl
adc
add
lret
xchg
cs
inc
lds
mov
popa
push
jae
mov
add
xchg
das
mov
pusha
and
mov
into
data16
ljmp
pop
mov
std
jb
subb
sub
or
cmc
or
pop
loopne
xchg
add
lcall
aas
lods
rorl
or
or
or
sub
adc
aas
xchg
inc
add
adc
dec
or
add
adc
adc
inc
cmpsb
adc
lea
stos
mov
lahf
lret
push
dec
jg
xchg
int3
lcall
lret
mov
mov
push
or
or
dec
clc
fistl
xorb
push
xor
test
gs
decb
jg
out
pop
mov
pop
fdivrs
cld
and
xchg
lock
rcrl
push
xor
daa
aam
add
push
nop
mov
sub
adc
nop
div
or
jg
cli
aaa
clc
mov
mov
or
aaa
movl
and
hlt
loopne
inc
xchg
subl
pop
fistps
xchg
ljmp
and
mov
out
in
adc
call
sub
mov
pusha
add
pop
add
push
je
mov
sub
mov
fidivrl
fisubrl
push
add
daa
mov
into
jmp
aaa
std
mov
adc
repz
int3
mov
fldl
xchg
add
mov
nop
add
sub
ljmp
rorl
jge
nop
popa
sbb
fldl
mov
xchg
fwait
pop
adc
repz
leave
push
and
test
int3
mov
enter
xchg
inc
sbb
fdiv
sub
and
nop
iret
and
sub
mov
mov
mov
or
add
xor
repnz
lock
mov
ds
rol
or
aas
ror
mov
add
iret
xchg
mov
and
jl
shlb
lret
js
addb
add
hlt
incb
xor
inc
loop
inc
rorb
nop
sahf
test
add
add
cmpsb
mov
mov
push
mull
les
xchg
push
add
cwtl
add
mov
scas
bound
mov
add
insb
fstl
cmp
mov
bound
sub
je
sub
sub
mov
rcrb
add
jl
push
shlb
jo
test
arpl
sub
mov
je
loopne
notb
xchg
jo
fcmovnbe
add
add
shrl
add
mov
push
cmpsb
mov
add
ja
add
rorb
mov
subb
sbb
rolb
jg
call
loop
loop
cmpb
or
fidivl
subb
mov
add
jo
mov
dec
cmpsb
ret
incl
lock
adc
pop
and
cmp
inc
daa
fdiv
cwtl
rolb
clc
pushl
and
inc
test
adc
int
xor
movsb
push
icebp
test
jp
dec
sub
out
or
rol
mov
sahf
dec
ret
add
hlt
inc
and
xor
cmp
xor
push
adc
les
inc
loopne
mov
test
incl
cld
xor
pop
add
pop
add
xor
mov
or
aas
dec
rolb
pop
and
xchg
push
jbe
dec
xchg
andl
cmp
lahf
in
test
push
or
insl
loop
test
shrl
sbb
jmp
adc
cmp
or
pusha
and
mov
cli
mov
or
adc
push
shll
fstps
rorb
rolb
loopne
cld
add
adc
or
dec
add
push
sub
fbld
repnz
add
loopne
lret
or
ret
pushf
pop
and
pop
or
pop
push
and
inc
adc
pop
add
mov
leave
inc
pop
shr
jbe
dec
xorb
dec
mov
insl
imul
xchg
push
push
xchg
cs
push
bnd
mov
adc
in
mov
enter
and
inc
add
jb
pop
shlb
lret
das
sbb
xor
fildl
jns
add
adc
inc
add
add
adc
lods
sub
and
mov
out
adc
add
add
gs
fucomp
cmpsl
stos
mov
loop
or
add
sahf
mov
test
dec
cs
push
adc
jl
mov
stc
push
push
inc
in
test
pop
mov
call
or
adc
mov
or
cmp
add
add
add
push
push
or
fiaddl
dec
filds
mov
std
jg
fistpll
adc
dec
rorl
and
pop
nop
mov
lcall
adc
inc
inc
out
jae
or
mov
sub
aas
sub
or
inc
addl
das
loopne
sbbb
lcall
je
cli
loopne
ljmp
dec
mov
in
mov
and
mov
push
xor
mov
mov
imul
pop
aaa
add
inc
push
push
add
andl
mov
and
andl
push
add
dec
inc
insb
outsl
add
mov
incl
out
sarb
enter
and
push
push
insb
mov
and
nop
addl
popa
insb
data16
jmp
pop
imul
stos
movsl
outsb
push
aas
dec
lret
sub
dec
bound
lret
mov
shlb
adc
pop
js
lock
dec
add
xchg
mov
xchg
xchg
iret
pusha
jecxz
jecxz
mov
insb
dec
pop
cli
jg
add
hlt
inc
or
bound
jg
add
add
add
enter
push
roll
mov
inc
mov
xchg
or
xchg
cmp
cmp
or
or
mov
cmp
jg
sbb
mov
pop
lret
inc
jge
adc
rolb
jb
cmp
mov
das
aas
testl
or
mov
mov
xor
inc
popa
add
pop
call
sar
loop
and
cmp
xchg
and
test
in
inc
rorb
jg
mov
xor
or
cli
ja
dec
lret
rol
inc
and
inc
cmc
jg
cmp
inc
add
push
repz
and
or
into
and
cmp
aam
adc
jle
mov
mov
mov
jp
icebp
add
pop
out
jp
ret
add
or
fildl
test
insb
loopne
cmpsb
xchg
call
adc
sti
mov
xchg
add
pop
scas
push
pusha
sub
xor
mov
orl
dec
insb
ficoml
scas
inc
add
nop
mov
sahf
pusha
test
aam
jl
mov
nop
movsb
jbe
jno
cwtl
fbld
fdivr
jg
pop
mov
and
mov
mov
push
adc
loopne
or
adc
inc
pusha
mov
lods
xor
and
pop
cmp
or
mov
out
fs
pop
andl
out
insl
xor
pop
push
outsl
and
adc
int
pop
inc
push
mov
mov
push
xor
xchg
repz
xchg
inc
addb
mov
xorl
cli
add
adc
or
punpcklbw
dec
adcl
inc
pop
nop
and
mov
push
inc
fdiv
shrb
movl
fwait
hlt
outsl
lret
pop
lahf
repz
push
mov
data16
inc
cmp
pop
leave
push
adc
ficompl
ljmp
jne
push
mov
cmp
mov
cmp
mov
shll
pop
test
mov
cld
ljmp
dec
push
add
addb
rol
xchg
pusha
pop
sub
cmp
or
xor
loopne
mov
ljmp
adc
jecxz
or
add
ss
inc
xchg
push
inc
sbb
mov
shlb
inc
sub
test
stos
add
cli
fbld
pusha
test
sub
lret
pop
aas
pop
fmull
into
push
xor
add
dec
lds
lock
ret
push
sub
jmp
shl
scas
push
daa
pushl
push
mov
ds
or
or
aas
lcall
ret
jb
or
ljmp
out
cli
call
mov
push
aas
fisubrl
push
xchg
pop
add
shlb
in
adc
xlat
bound
push
push
add
les
add
sbb
push
pop
and
add
or
push
jp
add
idiv
scas
iret
aas
push
adc
mov
adc
add
dec
aas
dec
add
mov
inc
pop
aam
adc
imul
push
mov
lods
adc
mov
iret
mov
add
push
sar
xor
filds
mov
nop
sbb
mov
mov
mov
mov
cmpb
sub
and
outsl
fcompl
out
add
xchg
sub
xchg
cmp
mov
aas
inc
rcll
lret
add
popa
push
movsb
lret
xchg
mov
test
adc
xchg
fstps
int
nop
adc
mov
movsb
jecxz
ja
pop
jle
je
sub
add
fisubrl
cmp
add
mov
lcall
mov
jo
add
aas
insl
rclb
pop
test
inc
mov
aas
and
pop
mov
bound
and
mov
push
sbb
push
jecxz
enter
lods
xchg
pop
mov
mov
lock
mov
test
dec
add
and
sbb
xor
xchg
lcall
lret
push
sbb
mov
pusha
sbb
cli
push
xor
in
mov
xor
divps
mov
mov
cmp
ror
ss
cmp
arpl
orl
mov
lock
int3
pop
add
xor
push
lods
testb
imul
xchg
jae
sbb
or
daa
out
or
mov
xchg
ja
outsl
aaa
dec
jno
ret
add
add
sti
jg
clc
pop
push
mov
jbe
mov
adc
pop
push
orl
incl
xor
add
xor
inc
cmpsb
pop
push
rorl
rcll
push
jno
and
sti
jb
lds
mov
pop
mov
push
adc
mov
mov
mov
insl
push
adc
push
mov
cld
xchg
repnz
adc
sub
daa
cmc
or
in
pop
ja
mov
jbe
jmp
jmp
mov
jae
add
mov
inc
int3
in
pushl
xchg
lds
and
jne
add
cmp
push
adc
ja
jbe
les
xor
cmpsl
and
or
pop
imul
aad
inc
shll
movl
mov
cmpb
dec
rolb
push
jmp
aaa
xchg
push
nop
cmp
lss
xchg
std
pop
je
pop
push
xor
push
xor
add
je
mov
inc
fs
adc
clc
jg
call
aas
cmc
aas
sub
mov
adc
test
push
adc
fbstp
dec
and
add
push
or
inc
adc
scas
mov
sarb
adc
sbb
xchg
push
test
or
pop
push
mov
cmp
es
add
mov
sub
repz
lock
aas
lock
filds
xor
rorb
addr16
mov
pop
mov
xor
call
mov
adc
lret
add
shll
jo
pop
pop
push
sbb
movsb
push
mov
sub
add
or
pop
fisttpl
fwait
testb
int3
mov
push
push
mov
rolb
lock
add
or
mov
insb
push
pusha
imulb
add
push
movsb
loop
jmp
aaa
popa
fcmovnbe
xchg
jo
push
in
xor
movl
mov
sar
inc
inc
sub
adc
nop
or
or
push
and
lcall
loop
add
das
push
push
pop
scas
cmp
add
pusha
ljmp
mov
sub
or
xor
ret
xor
andps
sub
push
das
push
sbb
out
rolb
pop
adc
clc
arpl
pusha
push
xchg
or
add
xchg
loopne
jne
or
xchg
int3
mov
mov
pushl
mov
xor
loop
push
cmp
pop
test
test
repz
sti
xor
repz
inc
xor
data16
gs
push
sbb
shrl
and
mov
add
mov
jmp
lret
lret
adc
jg
mov
ljmp
adc
push
xor
nop
jge
dec
aas
adc
aas
inc
cmp
sub
and
ljmp
push
lahf
add
add
sbb
lcall
call
fldenv
repnz
sub
ficoml
cmpsl
mov
dec
popa
mov
iret
adc
fsubs
push
push
lret
add
loop
adc
mov
add
adc
lds
sbb
data16
cmc
fistl
fdivp
aas
popl
iret
in
loop
push
cmpsl
push
fld
cwtl
sub
es
mov
dec
sbb
or
jg
int3
push
lea
lds
push
add
pop
add
mov
outsl
outsl
or
pusha
push
and
iret
mov
repz
adc
xor
lods
pop
mov
sub
sbb
or
fcoms
inc
xchg
cmp
mov
addb
pop
outsb
dec
pop
mov
shrb
cmp
andl
or
aaa
jl
mov
xchg
pop
pop
inc
and
inc
push
cmp
inc
push
cmp
insl
cld
pop
and
adc
sti
fcmovnb
xchg
idivb
nop
xorb
jge
faddl
dec
add
lock
pop
dec
testb
mov
inc
mov
push
inc
adc
or
adc
add
cmc
mov
ret
add
aas
test
int3
lea
outsl
add
mov
fcoml
adc
in
in
rolb
dec
mov
in
mov
imul
add
and
lods
and
dec
addb
jg
mov
push
cld
add
add
inc
loop
dec
pop
mov
jnp
or
incl
xor
inc
repnz
notb
inc
pop
push
dec
jae
rolb
fistpll
mov
test
and
jle
ja
mov
and
mov
push
jo
adc
stos
cwtl
push
fadds
or
out
bound
decl
aas
pusha
fldl
std
inc
es
push
std
andb
daa
repnz
sub
lods
adc
xchg
push
aaa
andl
fistl
xchg
sub
adc
push
adc
or
ret
cld
lods
jb
movb
mov
inc
jle
rolb
in
or
cmc
lcall
sub
inc
add
add
imul
loopne
iret
lods
addl
and
imul
mov
pop
inc
xchg
cmp
iret
inc
inc
xchg
faddl
xor
outsl
sbb
mov
cs
sub
jb
jb
mov
jb
inc
xchg
sbb
lock
xchg
or
mov
or
ja
jb
gs
outsb
push
inc
pop
int
insb
jge
fwait
mov
lds
fistpll
xor
loopne
rol
sbb
sbb
out
rolb
xchg
sbbl
divb
sbbb
sahf
inc
aas
xorb
adc
mov
push
sub
rclb
adc
cmpl
ret
decl
arpl
xchg
jecxz
and
pop
inc
shll
mov
xchg
or
inc
xor
mov
push
and
sbb
outsl
inc
mov
pop
add
mov
mov
mov
idiv
mov
mov
push
and
cmp
cmpb
in
dec
movsl
or
jo
fiadds
mov
adc
cmp
lcall
jp
or
cs
mov
push
sub
lock
mov
dec
mov
aas
ljmp
loopne
inc
andl
rclb
aam
mov
ss
mov
add
test
add
out
add
cltd
xchg
push
adc
xorb
scas
pop
mov
test
pop
mov
fldt
mov
adc
test
test
add
js
ljmp
fimull
sub
cld
jmp
stos
add
sti
notl
sbb
aam
add
push
test
mov
add
popf
and
aas
insb
inc
pusha
je
and
shrb
enter
aaa
add
clc
inc
ret
jecxz
mov
add
andl
sbb
cld
mov
scas
fdiv
scas
sbb
mov
push
dec
subb
pop
pop
add
fimull
addb
push
and
or
adc
loopne
add
mov
and
movsb
lock
faddl
dec
jmp
jnp
or
xor
mov
call
add
push
imul
daa
add
and
fwait
push
or
mov
lret
mov
mov
and
je
shrb
orl
push
inc
pop
iret
test
or
mov
je
fistpll
das
add
mov
test
fildll
adc
dec
and
and
loope
dec
cmp
mov
subb
or
sub
test
js
xchg
mov
mov
les
popa
mov
mov
mov
outsl
adc
or
mov
jbe
sbb
inc
xor
jne
mov
and
inc
sahf
add
xor
pop
shr
fsubr
es
fmull
add
test
aas
icebp
xor
je
je
fidivl
jmp
scas
xchg
loopne
pop
dec
jecxz
je
shlb
add
push
clc
cmp
aas
pop
adc
subb
xchg
add
cmp
xchg
add
sbbb
mov
push
clc
mov
nop
push
cmp
add
orl
andl
pusha
movsb
or
lock
mov
mov
or
adc
in
jbe
decb
mov
xor
jle
pop
mov
cmp
jl
fcoms
ret
and
test
inc
mov
insb
bound
sahf
or
inc
mov
add
ret
pusha
dec
enter
out
dec
andl
cld
fs
and
stos
jmp
push
cld
test
movsb
jb
jp
xor
dec
dec
add
push
adc
pop
xchg
add
fistpll
add
fiadds
cmp
aas
sub
mov
push
rcrb
fcomp
inc
lock
cmp
xor
nop
sub
push
ret
xor
add
adc
push
xchg
or
inc
xor
scas
fcmovb
and
inc
ficompl
hlt
fbld
or
pop
pop
int
cmpb
in
mov
xor
xor
cmp
mov
mov
sub
daa
pusha
sbb
shr
or
or
sub
inc
or
adc
es
inc
aaa
fdivl
mov
adc
dec
sub
hlt
fnstsw
lret
push
inc
dec
and
xor
stos
repnz
and
out
andb
roll
or
jae
roll
push
pop
or
add
push
aas
rclb
jp
sub
xchg
pop
addl
repz
sub
idivb
mov
mov
cld
mov
pop
loop
aaa
aam
push
mov
dec
pop
mov
roll
std
push
aam
mov
sub
cld
pushl
xchg
mov
xor
aas
pop
dec
in
addb
not
rorb
cli
add
sbb
lret
shll
rorl
shll
and
fs
fwait
xor
pandn
and
adc
in
inc
jbe
ret
add
pop
or
test
ret
xchg
rclb
shlb
cmp
outsl
iret
lock
sahf
mov
das
pop
jb
mov
adc
sbb
andb
adc
shlb
mov
or
push
cmp
and
shlb
push
inc
shrb
mov
hlt
test
aam
mov
popf
add
push
pop
mov
push
aas
mov
repnz
subl
and
outsb
push
pop
orb
sarb
xchg
push
aas
xchg
push
ret
lret
and
adc
add
push
pop
test
ja
cmp
sub
mov
mov
sbb
ljmp
inc
outsl
lds
aas
push
lret
pop
inc
xchg
icebp
push
pop
hlt
push
sbb
jo
call
xor
mov
sub
xchg
and
aas
push
and
adc
cmp
arpl
stos
ss
pop
xor
adc
shll
or
lods
mov
rorb
add
pop
inc
cwtl
mov
inc
rolb
xchg
pushf
cli
fwait
es
dec
jne
in
add
inc
sub
out
mov
adc
and
sar
jno
lock
ljmp
inc
andl
xchg
rclb
xor
and
sub
sahf
decl
popa
loopne
sub
rcrb
xor
lock
pop
out
pop
mov
pusha
std
decl
mov
pop
icebp
packuswb
inc
or
inc
mov
int3
test
pop
and
jo
xor
ret
mov
flds
adc
inc
outsl
clc
and
and
test
xor
outsb
or
xor
es
add
adc
push
ret
jnp
add
pop
and
jno
jg
pop
inc
ret
ficoms
jnp
test
add
xchg
add
jne
pusha
das
aam
xchg
xchg
jle
rcrb
xor
das
repnz
divb
outsl
loop
mov
js
shl
dec
mov
out
sub
mov
nop
in
cmpsl
add
into
and
sub
mov
jo
mov
mov
xor
call
insl
fbstp
push
popa
adc
mov
out
add
mov
xor
inc
add
and
loopne
mov
nop
pshufw
sbb
ficompl
mov
dec
xor
push
lret
lock
in
inc
cmpsl
shlb
subb
fs
xchg
sarl
add
dec
xchg
popa
mov
add
test
jg
stos
or
cmp
mov
push
mov
outsl
and
mov
mulb
nop
push
and
rorb
pop
xchg
or
scas
xor
push
adc
mov
cmp
out
stos
movsb
push
outsl
push
and
cmpsl
add
or
inc
orb
cmpsl
pop
mov
xchg
enter
or
cs
xchg
out
xchg
outsl
test
add
pushf
and
mov
sti
dec
pop
mov
sub
mov
mov
push
push
add
xchg
xchg
mov
or
mov
test
xchg
push
jg
add
or
xor
jp
jo
or
neg
mov
fstpt
mov
add
sbb
loop
mov
xchg
xor
or
sub
mov
mov
aaa
sbb
stos
fstl
das
inc
add
out
xor
mov
fcomi
xor
push
sbb
inc
mov
cmpsb
loopne
ljmp
push
sbb
xchg
cltd
sbb
and
jecxz
inc
jbe
decl
dec
add
sub
sbb
jo
bound
leave
xor
jecxz
inc
cmpsl
stos
mov
inc
cld
sub
popa
popa
dec
aas
insb
and
jb
fildl
mov
pusha
mov
test
cs
pop
addr16
pop
or
sub
rclb
mov
add
sarb
add
mov
in
cmp
lock
pop
add
sub
sbb
push
dec
pusha
orb
loopne
push
rorb
or
cmp
rcl
bound
inc
repnz
adc
call
jne
mov
clc
mov
in
pop
adc
ljmp
sub
sbb
fcoml
jle
add
aam
xchg
mov
xchg
xor
add
es
iret
test
mov
dec
fcomps
xchg
aas
cwtl
aam
add
aas
dec
add
jle
add
jb
add
and
sub
mov
add
dec
jmp
daa
and
loopne
lret
fcmovnb
push
mov
and
or
aas
jb
add
loope
or
fldenv
xor
fdiv
shrb
aaa
roll
lret
xchg
and
inc
push
xchg
out
dec
daa
lods
pop
shrb
loopne
insb
xor
outsl
sbb
out
add
and
fisttps
insb
ret
add
fdivrs
push
sbb
call
lcall
or
sar
push
and
clc
pop
fwait
shrb
out
loop
sbb
xchg
adc
clc
fildl
adc
sbb
fdivs
in
imul
add
mov
add
pop
add
adc
push
lods
jecxz
sub
setne
cli
data16
sbb
sti
in
lods
xchg
fbld
pop
adc
fistpl
sbb
mov
push
xor
add
push
add
xchg
test
sbb
imul
bound
xchg
test
push
push
sub
pusha
addb
lret
std
insb
inc
xchg
or
add
adcl
jle
in
and
mov
jmp
cld
fs
sbbb
sbb
mov
inc
sub
dec
insl
cmpb
mov
loop
outsl
stos
movsb
out
and
adc
testl
outsb
or
push
aam
mov
or
cmp
push
or
add
rolb
sbb
pop
push
ds
or
add
dec
punpcklwd
mov
orl
shrb
subb
mov
cmp
mov
mov
xor
inc
addl
fimuls
xchg
or
inc
or
in
pop
clc
sbb
push
mov
repnz
insl
push
dec
push
sbb
jl
and
fiaddl
cmc
shrl
and
aaa
push
mov
enter
add
fs
lods
or
xlat
pop
sbbb
popf
inc
mov
mov
jb
addl
or
scas
sbb
imul
mov
lods
outsb
lcall
rol
mov
jmp
xchg
setb
ss
pop
fcmovu
data16
or
add
add
push
nop
push
js
lock
mov
bound
loope
push
mov
inc
cli
fistl
loope
xor
cmc
mov
push
add
push
fsubrl
fmull
cmpb
das
xor
repz
and
add
shlb
andl
push
push
pop
push
add
and
mov
pop
aas
add
add
or
and
push
hlt
xor
mov
push
cmp
inc
outsl
lcall
xchg
imul
decl
shl
js
out
inc
out
aas
push
add
jb
xchg
jb
sbb
dec
clc
xchg
xchg
stos
pop
and
dec
scas
shrl
push
lret
add
add
mov
push
mov
push
stos
and
outsl
mov
loopne
jg
or
push
and
imul
js
fcmovu
icebp
mov
pop
sarl
mov
lcall
xor
and
inc
cmp
xor
sbb
fisubl
ret
cmp
adc
test
fwait
pusha
lds
fs
lds
ret
mov
or
and
or
std
pop
or
aas
push
inc
and
inc
ds
loopne
mov
mov
mov
adc
cld
add
fs
sbb
adc
pushl
sar
add
and
adc
mov
pusha
ljmp
inc
cs
jbe
fildll
and
fadd
add
movl
aas
popa
pusha
sub
mov
adc
and
mov
stos
mov
dec
adc
xchg
mov
jg
jecxz
push
mov
mov
push
sub
adc
sarl
mov
pop
loopne
imul
movaps
loope
and
in
cmp
sub
mov
lret
xor
xchg
jb
pusha
inc
stos
movsl
add
arpl
sub
xchg
jp
pop
add
call
aas
or
xor
or
cmp
mov
enter
scas
mov
sub
push
sbbb
and
test
dec
lock
arpl
loopne
adc
or
lcall
stos
push
and
inc
add
data16
mov
add
cmp
aas
and
push
xor
outsl
fbld
gs
adc
adc
pusha
or
inc
andl
sub
add
mov
outsb
stos
pop
inc
xchg
mov
add
mov
mov
add
mov
stos
ss
add
fwait
out
pop
mov
cmp
enter
cmpb
adc
mov
and
adc
mov
mov
or
cwtl
mov
mov
add
aas
mov
decl
jl
stos
inc
fsubrl
subb
push
shll
inc
aas
lock
jbe
fisubs
xchg
push
int
xchg
add
cmpb
ret
imul
nop
xchg
rolb
or
pushf
sub
adc
or
adc
mov
pop
shll
inc
xchg
mov
into
mov
clc
push
ds
xor
lock
or
mov
cmp
pop
dec
rorl
rolb
loopne
pop
mov
ret
or
cmp
xor
aam
mov
push
mov
sbb
fbld
xor
mov
or
imul
mov
push
or
pop
or
mov
aas
lret
pop
adc
fsubrs
and
pop
sub
mov
push
xor
adc
jecxz
inc
mov
pop
and
subb
mov
fistpl
js
adc
or
inc
movl
mov
adc
push
xorb
aaa
loopne
adc
mov
or
gs
in
lret
dec
cld
push
cmp
add
mov
mov
add
inc
jp
inc
xorl
cli
jo
shl
shr
pop
ret
mov
pop
xchg
pusha
roll
stos
and
jo
repz
mov
xchg
ljmpw
cmp
adc
xchg
xor
ss
dec
inc
jmp
adc
jb
add
cmpsb
adc
js
pop
in
fcmovbe
lock
pop
lock
mov
mov
fistpll
push
inc
mov
xchg
mov
and
cwtl
lcall
and
sub
pop
pop
pop
add
xchg
pop
push
xchg
mov
cmp
or
test
xor
out
andl
push
mov
sub
adc
insb
cld
pop
add
pop
adc
mov
loope
in
cmp
popa
nop
sbb
add
mov
inc
inc
add
repz
orb
add
lcall
rcll
aas
push
cs
pop
xor
mov
adc
fildll
rolb
dec
sbb
je
pop
orb
xchg
mov
add
pop
test
add
inc
leave
loopne
xor
fwait
pop
add
call
add
pop
inc
loope
les
aas
push
pusha
push
mov
lock
arpl
add
out
rclb
sub
mov
movsl
mov
inc
jl
call
cld
cltd
inc
adc
in
jo
adc
or
cwtl
dec
jo
popa
aas
subl
shlb
loop
pop
jl
popa
xor
xchg
in
mov
cmc
cmpsb
sbb
sbb
jbe
xchg
test
lock
int3
mov
cmovo
iret
sarb
push
test
xchg
jle
shrb
out
jp
sub
mov
rorb
mov
adc
mov
mov
xchg
or
and
sub
repnz
ret
rclb
mov
cmpsl
movsb
pop
mov
std
insl
jo
cwtl
pop
jo
inc
cmp
or
popf
adc
push
roll
mov
or
adc
fucomip
lock
inc
dec
pop
rcl
inc
sti
out
fisubs
push
inc
push
xor
adc
mov
xor
mov
add
add
adc
imul
sahf
jle
test
mov
inc
or
clc
jnp
mov
adc
xor
loopne
mov
mov
and
lock
shlb
jmp
mov
scas
aam
push
mov
add
mov
cmp
shr
out
fsubrp
out
mov
xor
or
rclb
dec
xor
inc
inc
test
nop
add
shrb
xchg
add
fidivrs
add
mov
add
or
movsl
hlt
sbb
fiadds
cld
push
hlt
xchg
movsl
roll
adc
mov
jecxz
jo
push
jle
cmp
or
adc
orb
lds
push
sub
mov
mov
mov
cld
and
sbb
xor
jle
pop
mov
pop
add
add
dec
mov
pop
movsl
sbb
popf
mov
xchg
xor
add
mov
out
pop
pusha
roll
adc
cmp
fisttpl
in
jo
ss
movsl
out
nop
mov
daa
push
call
inc
stc
imul
add
jg
sbb
inc
popa
add
les
ljmp
out
addb
xchg
or
test
adcl
mov
pop
pop
or
clc
adc
push
and
sbb
aam
aam
ds
xorl
repnz
inc
xor
add
mov
sbb
sbb
jb
mov
add
aas
xor
sub
lock
adc
xchg
add
mov
mov
xchg
pop
pushf
sarl
jp
sbb
mov
xchg
rorl
add
sarb
fmuls
pusha
pushf
fistl
fisttps
outsl
rolb
push
mov
mov
cmp
add
stos
mov
mov
adc
lds
or
mov
cmp
or
int
int
push
or
sbb
rorb
cmpsl
pop
lret
cli
add
clc
in
andb
jecxz
or
or
pop
pop
std
out
je
push
shll
jb
enter
clc
pop
and
xor
jbe
enter
inc
cmp
rcl
add
add
push
test
dec
xor
test
das
add
and
add
add
lcall
and
fnsave
inc
iret
pop
or
and
jle
xor
popa
imulb
lcall
add
or
in
pusha
adc
push
and
pop
or
lock
ret
xchg
mov
fists
dec
fistl
push
test
lea
push
popa
andb
lock
sub
mov
sub
mov
add
pop
add
inc
add
sahf
stos
outsl
test
mov
sbb
cmp
orb
mov
pop
and
sbb
test
scas
incl
add
or
mov
mov
in
and
jl
dec
and
inc
icebp
add
cmp
jp
xor
lcall
add
es
xchg
incb
mov
mov
in
mov
out
push
sub
stos
jecxz
fiaddl
adc
in
adc
out
lea
decb
leave
pop
jmp
mov
rolb
stos
fst
mov
cli
jmp
shll
add
and
xchg
clc
dec
mov
test
mov
xor
push
mov
add
pop
mov
adc
add
lea
push
adc
xchg
or
stos
bound
mov
and
in
jmp
jno
push
js
repz
push
sbb
add
xor
add
pop
es
ficoml
es
aam
lds
into
mov
and
aam
xor
push
shlb
stos
add
mov
insb
push
mov
mov
adc
add
fs
testb
and
pop
or
loop
icebp
add
and
or
pop
aam
or
add
cmp
add
movsb
inc
cmp
jle
ds
dec
sahf
and
fistl
and
cmpsb
push
add
std
dec
dec
cmp
aam
sarl
aas
and
es
inc
inc
cmp
push
out
js
mov
mov
fdivp
mov
add
mov
call
stos
das
mov
fmuls
roll
in
push
ss
testb
mov
adc
enter
nop
hlt
mov
mov
inc
mov
mov
int3
cmpb
sub
orb
push
into
xchg
in
xchg
mov
adcl
clc
imul
push
adc
in
nop
add
orl
add
add
mov
sub
sub
jl
enter
lods
mov
cltd
and
enter
dec
adc
aam
int3
testl
mov
and
xorb
addb
inc
xor
xor
sbb
cmp
lea
add
pop
and
inc
add
rolb
push
shlb
inc
add
and
inc
mov
xchg
adc
pop
xchg
inc
jl,pt
jle
jnp
push
dec
cmovs
decl
pop
xchg
lret
orl
aas
push
ret
inc
popl
test
mov
jmp
orb
pusha
jl
push
inc
dec
rclb
sbb
sub
divl
lcall
mov
negl
lea
sbb
add
add
repz
repz
shlb
je
sbb
repz
repz
sbb
or
or
inc
call
and
ss
aaa
adc
jp
loopne
test
mov
push
jl
fcompl
out
push
test
dec
clc
adc
inc
xor
imulb
call
stos
push
inc
inc
inc
shlb
rol
mov
inc
jbe
movsl
push
push
sub
jg
pop
push
pop
les
aas
dec
inc
push
shlb
push
lds
xor
testb
and
mov
and
mov
add
repnz
push
inc
push
mov
cmp
imul
push
or
mov
popa
mov
aaa
cmpb
mull
int3
jmp
jmp
push
orl
sub
inc
out
adc
mov
sub
add
addb
enter
jg
loopne
xchg
cld
pop
cld
daa
mov
roll
xchg
cwtl
mov
dec
push
cmp
xor
push
pop
lret
mov
icebp
mov
loopne
test
mov
jg
rcrb
mov
sarb
lods
lret
and
jle
push
push
repnz
insb
push
dec
add
lods
outsl
sbb
add
add
add
aad
pop
rolb
jmp
mov
sub
into
imulb
push
jo
jp
or
sub
ffreep
insb
push
or
add
pop
push
test
xor
pop
inc
test
or
subb
ljmp
insb
subl
push
lcall
sarb
icebp
andb
scas
fdivs
adcb
mov
rolb
outsl
fldt
mov
mov
bound
add
rclb
testl
xor
sub
cmp
mov
jo
les
fistl
dec
insl
test
add
ss
addb
and
and
mov
nop
into
jle
xchg
neg
adc
add
and
mov
jl
mov
ret
sbb
hlt
push
rclb
add
leave
and
addb
rep
sub
stos
lock
and
test
push
adc
push
lret
repnz
mov
fbld
push
cmp
add
jo
add
xor
push
shl
adc
outsl
xchg
ret
cmp
push
rorl
and
inc
orb
cli
or
outsb
mov
jnp
clc
push
add
jecxz
push
int
ficompl
and
ljmp
mov
adc
inc
xor
addl
push
movl
inc
jne
in
loop
lods
add
add
test
or
add
and
mov
and
ret
pop
and
pop
and
std
ja
rcrb
aad
cltd
aam
inc
stos
jg
ds
or
cmp
cmc
add
inc
fbld
mov
sub
add
call
das
push
pop
jp
shlb
add
pop
test
pusha
add
or
aam
enter
aaa
cwtl
push
add
pusha
jl
enter
ljmp
in
or
test
and
shlb
rorb
mov
jbe
aam
mov
hlt
pop
clc
je
sub
xchg
fs
lds
call
cs
xor
sub
xor
adc
add
loopne
pushf
sbb
loope
in
das
mov
lcall
shll
pop
ljmp
xor
sub
lock
add
push
xor
sti
push
fsubrs
adc
adcb
outsb
movsl
fnstenv
faddl
and
dec
and
or
sbb
aad
sub
add
mov
and
adc
xchg
dec
sbb
insl
pop
sarl
mov
mull
pusha
ds
repz
and
sub
sarl
xchg
loop
inc
insl
or
sub
inc
inc
mov
out
push
xchg
inc
cwtl
adc
sub
call
xchg
mov
push
ljmp
outsb
out
push
inc
pop
or
add
add
push
ljmp
dec
and
rorb
jo
imul
je
push
add
push
add
divb
add
rolb
inc
sub
aaa
mov
roll
mov
test
mov
fcmovnu
add
xchg
sbb
pop
cmp
pop
inc
adc
push
mov
icebp
add
add
fwait
push
adc
stc
arpl
fsubl
out
stos
repnz
cld
or
or
mov
pop
fisttpll
cmc
add
push
fcoms
nop
add
xchg
xchg
cmpb
ds
and
pop
lods
ds
push
fistl
adc
adc
sti
not
mov
sub
mov
lds
inc
add
inc
cld
add
and
mov
mov
shlb
rolb
filds
xchg
adc
nop
sbb
sbbb
inc
loopne
fdivs
js
jbe
pop
shr
push
mov
adc
test
mov
push
enter
add
addl
xor
aas
and
sub
addl
pop
push
andl
pop
ds
inc
and
sbb
and
ja
sub
scas
das
cltd
test
mov
xchg
and
call
xchg
adc
mov
sub
jo
mov
into
xor
adc
inc
mov
pop
fdivrl
push
or
dec
adc
push
mov
ss
mov
loop
inc
call
add
jecxz
fnstcw
outsb
sahf
mov
xchg
insb
ret
fadds
aam
repnz
add
ds
push
adc
adc
mov
cld
jp
loop
push
add
mull
inc
push
jmp
mov
sub
adc
rorb
aaa
add
and
jmp
mov
cmpb
cwtl
cmp
mov
ret
add
addb
push
fldt
aad
aam
add
jo
push
pusha
sub
jmp
pop
cmp
push
add
js
sbb
mov
add
loop
in
fstpt
add
ss
mov
fdivrl
pop
or
rolb
lds
mov
dec
imul
pop
data16
add
andl
rolb
loop
pusha
cld
fcmovnu
or
cltd
ds
or
icebp
add
jmp
inc
push
cmp
mov
fstpt
and
mov
sub
xor
std
add
leave
push
add
jmp
cli
cmpb
test
sbb
and
sarl
rcr
cmp
imul
add
fdivs
clc
push
sub
cmp
fidivrl
icebp
dec
call
dec
ds
xorb
push
mov
lock
xchg
ret
adc
std
fadds
push
adc
sbb
push
cmp
fists
aam
jbe
bound
or
mov
add
lea
icebp
pop
cld
jmp
fcomps
orl
adc
mov
add
out
fisubrs
rolb
jo
mov
fdivl
dec
xor
add
fimull
adc
inc
lods
ficoms
mov
popa
and
or
clc
jmp
clc
testl
inc
in
fsubrs
or
mov
outsl
outsl
xorb
ret
add
fs
push
xchg
lods
push
add
addl
push
rclb
push
outsl
scas
or
push
mov
jbe
out
pushf
pop
and
mov
mov
fcoms
ss
sub
fiaddl
lret
sahf
in
cld
fsubp
std
adc
ds
push
mov
sti
outsl
pop
xchg
mov
mov
js
fdivrp
decl
mov
jo
inc
mov
mov
test
test
jg
lock
push
inc
data16
mov
adc
fildll
jecxz
inc
es
push
pop
mov
movsb
sub
lcall
push
stc
push
cmpsb
movsl
add
movsb
add
add
adc
add
ljmp
rolb
and
addb
shrb
inc
push
or
ret
push
ret
push
mov
sbb
sub
test
mov
and
aas
mov
cmc
add
pusha
push
loope
push
insb
sbb
cmp
bound
insl
adc
pop
add
cwtl
pop
mov
mov
addb
test
mov
dec
sbb
loope
ds
fwait
add
and
jecxz
lock
js
mov
in
pop
pop
movsb
out
rorb
add
inc
sbb
lret
xchg
hlt
inc
mov
jbe
adc
pop
cmp
push
scas
into
xchg
lock
fcoml
test
hlt
pop
xor
shll
mul
repz
dec
sbb
out
sub
push
add
add
mov
adc
outsl
adc
ss
ds
adc
push
or
rorb
aad
mov
push
or
or
add
out
pop
add
mov
pop
and
fistpl
cmp
cmp
sub
lcall
icebp
test
cs
aas
cmpb
sub
cmp
push
aam
add
fwait
das
fimuls
pop
cmp
dec
add
fwait
shrl
call
roll
add
dec
fisttpl
xor
dec
movsl
rolb
adc
frstor
call
adcb
push
cld
push
fidivrs
adcl
sbb
adc
xorb
add
add
mov
and
mov
mov
faddl
push
inc
andl
andb
push
outsl
in
pop
push
shrb
fwait
imul
fnstcw
add
push
sub
scas
cmpl
addl
fldl
mov
or
sahf
mov
add
subl
pusha
popa
sub
mov
add
sub
jno
sub
sbb
fucomi
pop
sub
sub
sbb
sub
rcrb
mov
or
dec
mov
ja
adc
hlt
pusha
sub
test
push
add
mov
adc
sub
add
add
mov
jp
add
mov
adc
add
fisubrs
mov
pop
fwait
add
jae
adc
mov
and
aas
dec
pop
ret
sbbl
fiaddl
in
outsl
adc
adcb
sti
xor
adc
inc
in
and
mov
idivb
roll
inc
sbb
add
insb
shlb
or
cwtl
mov
inc
sbb
imull
mull
hlt
adc
push
mov
incl
das
or
push
pusha
orb
fildl
std
jp,pt
add
rorl
scas
push
mov
and
sub
push
cmp
mov
jle
ljmp
rcr
mov
ds
push
add
mov
fwait
adcb
adc
inc
and
add
add
pop
push
loope
call
test
sbb
dec
pushf
fisttps
loop,pt
or
flds
add
mov
xchg
xor
push
ljmp
sbbb
push
push
mull
push
adcb
inc
sub
loop
mov
pop
ret
fcomip
and
loopne
inc
sbb
push
dec
inc
push
pop
loopne
pop
add
and
sbbb
sub
mov
clc
and
es
repnz
cltd
shlb
test
push
adc
pusha
xchg
or
dec
pop
lcall
push
fs
hlt
sub
ds
pop
std
mov
mov
and
lds
pop
scas
inc
cmp
pop
sub
pop
push
loopne
lods
or
pusha
or
pop
and
lcall
ds
mov
iret
test
clc
add
pusha
sub
js
adc
std
add
popa
subl
sbb
add
add
inc
push
mov
mov
inc
add
xor
loop
push
mov
add
push
push
pop
arpl
bound
outsb
push
insl
sbbb
push
faddp
or
insl
dec
ds
and
loop
aas
adc
incl
mov
jg
mov
push
fld
ds
add
inc
cmp
sarl
aam
cld
mov
sbb
mov
and
outsl
xor
pop
aas
aad
fbld
xor
jg
pusha
pusha
xlat
and
popa
inc
add
xchg
and
mov
aam
or
stos
int3
add
pop
and
dec
and
sbb
add
arpl
pop
add
sti
add
stos
and
mov
shlb
fcoml
rcrb
or
loopne
push
loopne
jg
mov
test
cltd
hlt
pop
test
paddusb
hlt
sub
sbb
pop
fists
mov
rolb
div
out
clc
cmp
adc
sbbb
adc
cmpsb
adc
cmp
cli
addl
cmpb
mov
dec
in
push
test
stos
mov
lock
mov
fsubrs
cld
add
xor
adc
inc
mov
mov
push
ljmp
adcb
movl
sub
jle
xchg
iret
sub
pushf
jg
loopne
push
into
test
dec
jo
push
sub
rol
lcall
pop
sub
add
ret
adc
pop
rorb
jle
push
inc
cwtl
pusha
add
lods
jbe
or
fisubs
or
ss
mov
ja
stos
inc
add
mov
cli
es
andb
les
push
icebp
adc
jnp
hlt
push
mov
and
sub
mov
mov
pushl
push
ds
mov
clc
jno
push
cmp
rcll
sub
jae
mov
xchg
pop
and
clc
subb
inc
dec
cmp
lea
in
enter
cmp
add
mov
push
lock
pusha
adc
sbb
sub
stos
add
inc
in
add
pop
dec
cwtl
lock
pop
jmp
decl
pusha
mov
mov
adc
push
and
cmovo
cs
xor
add
xor
jo
ficomps
dec
aam
jecxz
movsb
cmp
rolb
add
cli
xchg
sub
sub
mov
add
cmp
sbb
ds
inc
mov
push
mov
shlb
das
adc
jo
ret
pushl
arpl
rolb
insl
dec
icebp
add
fmull
mov
xor
fwait
mov
sub
or
aam
add
rcrl
dec
adc
mov
jge
xchg
add
out
push
mov
fwait
mov
add
xor
ja
xor
xchg
push
mov
pop
fildl
es
and
sahf
insb
push
mov
sub
ficomps
in
fnstenv
mov
pop
cmp
sbb
data16
sbb
push
loopne
fbld
inc
or
add
outsl
pop
test
rcrl
or
pop
adc
push
imul
xor
xchg
add
add
iret
data16
outsb
mov
add
pop
add
inc
enter
aaa
dec
imul
sbb
add
adc
add
sub
and
mov
push
aas
aam
cmc
dec
sbb
mov
aam
adc
popa
xchg
lea
xor
test
sbb
or
ftst
push
ret
xor
add
pop
adc
mov
or
xchg
dec
rorl
nop
rcl
mov
insl
cld
pop
out
mov
mov
dec
sub
fiadds
lock
and
mov
xchg
cwtl
lcall
sbbb
jg
cmp
pop
sub
orb
and
sub
push
popa
add
push
jb
shlb
sbbb
mov
inc
dec
fs
xchg
fadds
adc
cmpsl
sbb
ret
les
mov
pop
nopl
dec
js
jmp
stos
push
push
out
aam
call
push
cmp
clc
add
inc
lret
mov
xchg
pop
or
mov
mov
xchg
fdivrs
cld
xor
out
fdivl
dec
in
arpl
jno
nop
jno
xchg
add
std
gs
mov
xor
test
xchg
mov
aas
lret
xchg
rcl
mov
ss
xchg
and
push
mov
jbe
and
sub
or
xchg
lahf
mov
or
sub
iret
add
jecxz
arpl
dec
sub
ds
push
loopne
aad
cli
dec
fildl
js
push
mov
fsubs
loopne
push
push
push
test
and
or
das
add
inc
sub
inc
rorb
clc
mov
arpl
pop
inc
sahf
sub
or
incb
clc
movl
or
fld
sub
adc
ficoms
mov
jns
add
add
insb
and
cmpsb
movl
nop
mov
test
dec
cmp
mov
sbb
shlb
lahf
inc
int3
mov
roll
mov
mov
insb
pop
add
and
aam
add
pop
ficompl
mov
sub
rorl
pop
mov
adc
mov
cld
adc
add
inc
in
dec
test
mov
add
adc
pop
or
sbb
jae
mov
mov
or
and
or
mov
xchg
push
jo
test
dec
lret
mov
cmp
lock
push
outsb
outsl
ja
outsl
mov
jmp
jnp
push
inc
jns
add
adc
int3
adc
loop
decl
pusha
imul
xchg
shl
mov
test
add
adc
mov
pop
mov
push
adc
add
or
mov
mov
add
and
cld
add
out
rorb
xor
cmp
mov
flds
sbb
xchg
popa
js
and
and
neg
movsl
cmp
sbb
aas
mov
add
aas
or
nop
or
mov
jmp
lret
add
adc
fwait
aam
add
mov
das
mov
mov
jecxz
mov
rorb
xchg
add
icebp
push
xchg
xor
mov
mov
fmuls
push
and
pusha
push
adc
loopne
push
test
jo
pop
and
enter
or
pop
or
movsb
sar
setl
mov
xor
gs
outsl
push
dec
adc
or
mov
mov
add
pop
xchg
ss
sub
xlat
mov
int
pushf
js
fldenv
push
lahf
pop
push
aas
aam
rolb
mov
sub
add
and
dec
popa
add
xchg
inc
push
lahf
aam
aam
fcompl
inc
mov
test
dec
loopne
das
mov
sub
pop
cwtl
sub
jo
int
pop
insb
dec
aas
mov
clc
into
push
xchg
xor
or
out
je
pop
or
jo
popf
adc
push
cmp
sub
dec
mov
sarb
in
notb
dec
stos
mov
add
data16
pop
ljmp
jo
add
pop
add
add
add
test
sbb
in
or
inc
pusha
in
xor
add
lcall
dec
xor
and
ljmp
xor
xchg
pop
add
add
xor
mov
mov
stos
in
fildl
add
push
xchg
out
adc
pop
outsl
jcxz
add
je
mov
pop
add
rclb
and
stos
add
decl
incb
jbe
add
in
add
push
std
push
mov
ss
nop
jo
in
fisttps
fnsave
je
and
sub
lods
loope
je
pop
dec
fsubp
mov
push
repnz
cld
rolb
subl
xchg
sub
or
sbb
push
add
lock
push
mov
cmp
dec
pop
rcrl
aas
jle
adc
adc
adc
addl
loop
and
pushf
lcall
pop
add
sub
lahf
mov
addb
mov
jg
icebp
pop
mov
test
mov
mov
sti
fnstcw
leave
or
into
rolb
mov
les
sarl
and
mov
adc
adc
je
sub
sub
mov
or
xchg
adc
lods
mov
push
mov
pop
data16
inc
arpl
pop
push
imul
add
sub
fiadds
popa
cmpb
pop
roll
icebp
sbb
movsl
xor
push
subb
mov
sti
sub
loop
adc
rol
cmp
sbbb
add
ficoml
add
mov
push
int3
add
or
add
mov
rorb
lock
shlb
adc
sbb
sbb
stc
pop
adc
out
push
loopne
and
sahf
push
subps
pop
sbb
push
ljmp
inc
push
hlt
pop
in
pop
and
or
ds
add
lock
lea
shl
in
or
inc
xor
cmc
jg
push
mov
rorb
mov
mov
push
or
mov
mov
pop
out
mov
cmpsb
mov
pop
ret
sub
pop
push
sub
add
sti
and
xorb
dec
sarb
or
sub
ss
add
push
stos
or
or
fsubrs
fists
and
sbb
xchg
aaa
rcrb
rorb
aam
lcall
adc
push
daa
add
mov
mov
das
push
mov
rcrl
add
sub
xchg
and
aad
add
and
xchg
fnsetpm(287
out
add
sar
mov
push
cmp
mov
add
int
es
lods
mov
test
inc
pop
sbb
subb
cmpsl
mov
cmp
add
orb
xor
adcb
aam
rclb
fcompl
jge
stos
sbb
push
shlb
jo
mov
xchg
and
fisttpll
aas
mov
call
push
insl
xor
lcall
xchg
push
or
jb
ret
mov
fistps
inc
loopne
test
mov
mov
insb
adc
jno
add
add
xor
insl
adc
add
outsb
insb
shlb
xchg
inc
sub
mov
popa
add
decl
adc
push
sbb
push
inc
add
dec
add
inc
add
sbb
cmp
xchg
popa
push
xor
lret
sbb
sbb
push
mov
push
pop
cwtl
sarl
pop
test
rcrb
insb
or
call
or
je
cld
jg
sub
loop
daa
rorl
jmp
cmp
mov
push
aad
cmp
add
add
or
push
add
insl
and
into
inc
and
orl
lcall
testb
shll
add
add
rolb
add
sub
dec
ret
enter
adc
andl
or
and
fmull
mov
sub
pop
clc
lahf
cmp
and
popl
mov
cmp
sarb
test
and
cmp
mov
mov
data16
inc
shll
and
pusha
push
int
adc
rolb
test
and
xor
rolb
adc
rorb
pushf
and
inc
xchg
leave
hlt
lea
andb
push
mov
sbb
and
and
aas
and
lods
inc
leave
rorl
or
pop
mov
loopne
outsl
or
add
or
insb
orb
push
sbb
rolb
clc
mov
sub
sub
lea
and
nop
lret
sarl
add
movl
aas
mov
or
in
ret
push
std
jmp
je
or
fbld
aas
jbe
jae
mov
mov
enter
cld
mov
dec
cmp
cmp
and
inc
pop
xchg
stos
and
push
jo
popa
inc
mov
cmpb
ret
adc
cmp
push
push
add
loopne
loope
ret
xor
sub
pusha
add
jnp
incl
arpl
loope
add
shrl
mov
add
xchg
loope
les
and
inc
dec
je
xor
fcomps
adc
sub
mov
pusha
insl
or
repz
popa
pop
dec
mov
inc
call
add
or
fnstsw
repnz
push
add
push
aaa
nop
decl
imul
mov
cmp
mov
mov
mov
and
cs
sti
push
inc
xchg
mov
push
stos
pop
sub
adc
ret
call
outsl
adc
dec
and
sbb
add
pusha
gs
cli
ss
adc
orl
pop
xor
cmpsb
jbe
mov
jle
jb
shrb
int3
fidivs
movsb
or
mov
mov
loopne
addb
jo
cld
data16
pop
shlb
mov
sbbb
sti
add
fcoms
sahf
and
add
mov
cld
bound
or
lods
xor
stos
lods
call
pushf
mov
adc
outsb
add
jg
xorb
xor
notb
data16
xor
or
sub
push
adc
adc
sub
cmc
mov
sbb
add
mov
fs
mov
jbe
add
fcmovnbe
add
sub
mov
mov
add
stos
pop
add
iret
xchg
xchg
ljmp
loopne
daa
push
mov
das
mov
or
jbe
push
add
cmp
pop
adc
push
pusha
mov
je
xchg
pop
gs
bound
fsts
push
mov
rol
mov
ss
les
inc
jg
add
js
and
ljmp
adc
and
sub
fbld
lock
je
adcl
das
clc
dec
aam
xor
mov
mov
cli
add
xchg
add
xor
je
or
loop
nop
pop
xlat
hlt
inc
inc
mov
pop
and
sub
repnz
sbb
mov
mov
loop
or
incl
sbb
in
lock
lock
ljmp
and
xor
jo
test
mov
dec
sbb
or
jle
xor
and
ljmp
popa
and
push
jmp
xchg
mov
icebp
daa
adc
pushl
sub
fisttps
adc
sub
jecxz
imulb
mov
push
mov
aam
xchg
pop
cmc
mov
nop
adc
xchg
xchg
popa
adc
rorb
push
fistl
mov
and
or
xchg
sbb
out
sbb
mov
adc
cmp
pop
lret
mov
iret
dec
popl
decb
aas
and
and
int
aaa
xchg
lods
fwait
dec
sub
test
adc
orb
push
adc
push
pop
and
cmp
cs
pop
call
jo
sub
add
and
das
mov
xor
mov
add
rorl
inc
aas
add
add
stos
das
loop
leave
inc
mov
xor
mov
fs
cli
add
push
adc
repz
or
cmp
pinsrw
fmul
jecxz
cld
incl
movb
xor
cwtl
aas
jg
ja
incl
xchg
mov
adc
add
or
mov
pop
mov
notb
push
sub
dec
insl
pop
push
inc
jp
or
inc
mov
adcb
movsl
or
add
das
sbb
arpl
jb
jp
mov
add
aas
push
xchg
inc
push
inc
or
orb
add
jp
mov
arpl
int
xchg
lcall
aas
stos
pop
cmp
rorb
mov
mov
in
push
sub
bound
mov
sub
movb
sub
mov
add
hlt
cmp
adc
scas
call
inc
adc
add
cmp
cmp
push
aad
and
loopne
xor
fnstsw
push
add
sub
pop
inc
or
sub
fwait
and
jmp
lds
in
outsb
lret
hlt
add
sbb
iret
dec
pop
fnstcw
ss
sahf
lods
lret
and
or
out
bound
aas
shrb
imul
andl
mov
adc
adc
mov
cmpsl
add
add
push
negb
add
insb
push
aad
roll
add
or
lcall
add
sbb
mov
and
ljmp
inc
xor
repnz
addr16
mov
leave
inc
mov
aaa
iret
xorl
sbb
loopne
loope
mov
add
faddl
cwtl
mov
aam
push
add
add
ret
add
movsb
mov
fldl
ret
sarb
cmp
pop
mov
aas
add
nop
cmc
scas
xchg
mov
ljmp
xlat
je
gs
lret
popa
in
xor
fmuls
cmp
imul
es
cli
fisttpl
fwait
push
jg
jbe
lods
mov
stos
addl
outsb
insb
push
js
arpl
mov
fwait
jo
lea
cmpsl
xor
nop
or
jecxz
pop
out
mov
jno
cmpsb
loopne
pop
sarb
lods
mov
push
push
inc
push
nop
xor
or
cli
mov
xchg
push
and
jbe
scas
or
adc
sub
lret
xorl
inc
loop
xchg
ret
jp
hlt
lcall
in
pop
shlb
xor
in
xor
jo
sbb
mov
daa
out
cli
mov
jmp
sahf
fidivrl
mov
fcmovu
popa
call
push
aas
cmp
lds
jne
pusha
or
insb
xchg
mov
push
jmp
ljmp
mov
mov
mov
fildll
out
inc
arpl
adc
out
pop
dec
adc
or
das
inc
ss
mov
push
outsb
mov
je
out
add
sub
shll
stos
mov
push
or
xchg
push
jp
cmp
push
mov
les
push
mov
add
shlb
mov
cmp
ret
inc
lret
cmc
sbb
rorl
outsb
pop
pop
add
daa
jne
cld
adcb
pop
or
subl
push
add
inc
ret
add
mov
mov
xchg
push
pushf
aam
mov
xor
xchg
aam
mov
sahf
push
sub
push
mov
imul
mov
mov
jle
dec
les
lock
add
movsb
cs
cmp
jbe
arpl
bound
test
outsb
sub
jae
mov
mov
sub
out
in
adc
jle
push
xchg
dec
mov
mov
mov
sub
aas
int
push
mov
ss
sbb
aad
mov
sub
fsubs
fsubrs
jecxz
lret
xchg
and
add
insl
dec
sub
or
outsb
mov
push
notb
shl
add
mov
and
cmpsb
js
std
pop
sti
fists
cmp
aad
add
inc
iret
add
pop
adc
ret
pop
mov
inc
xchg
jg
sbb
adc
mov
dec
adc
out
inc
xchg
xor
mov
mov
aam
push
cli
or
das
pusha
insl
cmp
call
push
and
add
add
flds
in
adc
xchg
adc
inc
in
es
inc
bound
mov
sub
mov
pop
adc
adc
jp
shlb
loope
lea
push
loop
add
mov
jmp
lcall
adc
mov
push
idiv
jg
push
xchg
mov
and
lock
je
push
shlb
sbb
mov
movl
mov
sti
pop
sbb
popa
inc
sbb
inc
sbb
in
inc
sbb
inc
sbb
inc
dec
sbb
sub
cli
mov
push
lds
sbb
jp
sbb
xorb
jns
dec
loope
sub
fcom
sbb
incl
cmpsb
inc
ss
sub
cmpl
ja
mov
xor
dec
ljmp
sbb
inc
in
addr16
test
xchg
xchg
adc
inc
adc
and
sub
lret
mov
aas
ret
pop
fs
and
inc
cmpb
jge
lds
outsb
pop
mov
jb
push
sub
push
lahf
subb
pop
sbb
sub
push
xchg
addb
sti
inc
or
or
cmovb
dec
push
xchg
and
xchg
mov
push
xchg
mov
rcr
rclb
xor
mov
mov
rcr
rorb
cmp
mov
dec
call
test
insb
loop
in
xchg
pop
inc
pop
sbbl
or
add
je
jo
shlb
add
div
xchg
shrb
mov
fmul
mov
pop
movsl
mov
mov
fwait
ljmp
mov
mov
sarb
sub
cld
mov
mov
rorl
and
rcll
cld
xchg
adc
jg
out
dec
bswap
fmuls
and
adc
inc
subb
or
pusha
xor
fdivrl
cld
mov
xor
add
add
sbb
mov
cmp
xor
adc
mov
addb
ficoml
pop
pop
fiaddl
push
mov
enter
std
cmpsb
aam
mov
shlb
pop
outsl
xchg
inc
outsb
adc
mov
jg
loop
or
rclb
pop
xchg
loop
add
add
sub
adc
jo
cmc
mov
loopne
add
mov
cld
adc
add
fsubrs
loopne
add
es
add
scas
lcall
movsl
adc
pop
mov
incl
ja
mov
mov
sbb
and
loopne
ret
sub
or
pop
mov
sub
and
mov
fidivrl
mov
or
pusha
test
mov
sbb
dec
loop
inc
sbb
mov
nop
add
shlb
pusha
sbb
lock
outsl
rclb
lock
pop
hlt
sbb
sub
enter
fcoml
xchg
inc
clc
inc
stc
mov
add
mov
mov
inc
or
aas
sbb
fadds
loope
incb
jnp
sbb
clc
dec
cld
dec
rolb
and
push
mov
mov
mov
pop
pop
cli
aam
pop
add
sbb
push
adc
add
das
mov
adc
mov
in
xor
mov
inc
xchg
mov
sbb
scas
in
aas
inc
std
add
adc
mov
cmpsl
inc
inc
into
mov
in
mull
cmp
add
mov
push
and
mov
mov
and
jle
xor
push
add
inc
fldt
outsb
and
lcall
pop
and
ror
aas
je
pop
and
jecxz
or
and
pusha
pop
loopne
scas
cmp
mov
jle
push
and
xchg
pop
add
inc
shlb
hlt
adc
out
shrb
popa
and
test
aas
inc
cld
sbb
push
sbb
add
incl
cmp
mov
test
loop
cmp
ds
and
rcrb
and
ja
add
lods
movsb
pop
sub
sarb
divb
nop
adc
mov
ja
mov
inc
roll
mov
std
in
pop
pusha
push
in
inc
sbb
xor
mov
aaa
or
add
in
xchg
pop
popa
in
mov
inc
call
iret
test
adc
rolb
inc
ss
clc
dec
jecxz
sbbb
cmp
jo
mov
in
add
rorb
jp
push
and
or
ret
ret
aas
test
inc
sbbb
xchg
or
jle
incl
sbb
clc
jg
addl
jno
mov
sub
jg
fs
insl
push
dec
xchg
hlt
and
loop
cld
dec
mov
pop
pusha
daa
lcall
xchg
cmp
push
add
cltd
inc
std
out
clc
push
xor
or
add
pop
subb
sub
and
lret
pop
shll
outsb
hlt
xchg
fcmovnb
pop
push
jg
repnz
or
lock
xor
iret
sbbb
shrb
das
and
loop
repnz
nop
add
push
xor
jg
add
lock
or
xor
push
fwait
cmp
std
outsl
cwtl
js
add
outsb
add
ret
adc
jne
mov
outsl
adc
clc
inc
test
data16
jge
add
cmp
lcall
add
inc
mov
stos
dec
cld
cs
and
mov
add
fisubl
mov
inc
es
xor
mov
push
jl
and
push
push
add
add
lret
jae
lcall
pop
clts
sub
and
push
jecxz
scas
push
aam
and
aad
movsb
lret
mov
aad
pusha
daa
into
les
cmp
aam
push
mov
push
fsubs
lea
adc
push
cmp
pop
add
aam
or
hlt
addr16
roll
repz
inc
mov
dec
adc
lds
mov
stos
subb
ds
push
xchg
or
pop
cmp
dec
pop
mov
out
mov
cld
aas
adc
push
nop
xchg
stos
les
push
add
aas
jns
push
cwtl
adc
push
loopne
add
or
cli
push
ljmp
sbb
adc
lock
rcll
nop
daa
rolb
cmp
xor
xchg
mov
push
cmpsb
scas
xor
push
mov
ja
fbld
xchg
aaa
lock
adc
add
mov
dec
bound
rorb
push
inc
xor
aas
jl
test
js
popa
add
cmp
pop
mov
fadds
pop
xor
sub
mov
adc
aas
sub
sub
pop
rclb
jmp
movsl
cs
test
cmpb
pop
mov
push
and
xchg
push
clc
sbb
sarl
mov
mov
mov
mov
adc
leave
stos
pop
cmpsb
fdivr
push
icebp
push
shl
lock
ret
popa
cmpsl
xchg
loope
out
imul
push
shll
test
and
sbb
and
nop
or
sub
add
mov
out
ljmp
adc
mov
and
add
stos
mov
pop
lods
pop
pusha
ficoml
lods
aas
cmpb
sahf
push
out
nop
mov
sub
or
nop
pop
rcrb
push
lock
pop
push
sbb
add
js
mov
cwtl
mov
add
mov
loopne
mov
icebp
sbb
aad
ret
pusha
add
add
shlb
rolb
je
outsb
add
and
xchg
adc
shl
push
jmp
jno
jo
mov
adc
fwait
cmc
mul
xchg
call
push
loopne
fistps
mov
out
das
aad
mov
arpl
mov
lcall
add
bsf
jo
or
orb
mov
push
aaa
fstpt
xchg
mov
xchg
add
call
push
ret
pop
adc
int3
sbb
xor
mov
adc
add
push
push
incl
int
add
add
nop
or
xor
mov
shrb
sub
pop
sbb
mov
sub
pop
rolb
add
add
imul
mov
lret
movsb
or
and
push
pop
mov
rcl
sbb
pop
gs
add
fisubs
add
cmp
in
cs
xchg
xchg
add
adc
push
repnz
sbb
add
cmpb
add
mov
mov
aad
xor
dec
icebp
lock
add
enter
or
mov
aam
push
cwtl
sbb
rolb
adc
lret
rclb
rcrl
or
ret
inc
cli
push
adc
clc
aad
or
push
lock
test
popl
sub
mov
sbb
add
mov
call
xchg
xchg
fiaddl
mov
push
lcall
std
test
push
ret
push
adc
aas
lcall
sub
cld
and
popa
popa
add
hlt
loope
pop
scas
lods
add
inc
rclb
mov
sub
repnz
and
inc
inc
jg
aam
decl
pop
mov
or
aas
add
das
push
and
frstor
mov
push
rclb
dec
fsubl
cmpb
in
push
in
xchg
add
mov
or
pusha
dec
pop
shrb
fimuls
or
mov
or
mov
add
mov
push
shll
and
pop
or
add
push
insl
sub
mov
xor
push
call
adc
adc
xor
or
scas
inc
fstp
lock
xor
rcll
notl
or
push
ss
sbb
in
aaa
mov
xor
adcl
xlat
mov
mov
loop
ja
js
push
add
mov
push
std
adc
cwtl
xchg
ljmp
mov
inc
mov
jl
sldt
lret
lock
aas
sub
lock
xor
fisubrs
lods
neg
inc
jge
and
inc
andl
adc
pusha
dec
mov
ljmp
add
out
in
adc
pusha
push
jnp
adc
mov
and
add
loopne
cwtl
dec
lea
subl
aas
sbb
or
lahf
inc
inc
inc
lea
sti
incl
mov
xchg
add
in
sub
icebp
cs
insl
test
dec
mov
adc
test
pop
test
adc
adcb
pop
push
aam
lahf
inc
mov
xor
leave
push
ret
adc
sbb
fcompl
pop
cmp
push
ret
adc
jbe
fcomps
ret
mov
or
sub
and
pop
cmp
shrb
pop
add
push
adc
aas
mov
add
inc
dec
jbe
xchg
mov
popa
jge
add
jp
xchg
or
inc
pop
sbb
or
cli
pop
push
fisttpll
xchg
ds
xchg
inc
dec
roll
push
mov
mov
cmpb
hlt
insl
jmp
adc
pop
lods
ret
push
data16
lock
inc
aas
mov
mov
and
cmp
sub
dec
lds
jl
adcb
pop
and
enter
repz
sub
mov
sub
xchg
jle
mov
adc
addb
insb
mov
or
mov
or
push
js
add
jbe
sub
in
in
jg
pop
lods
daa
jns
inc
push
aas
pushf
inc
pop
das
sbbl
mov
xchg
inc
adcl
pushf
les
sub
sub
sub
fs
fmull
mov
out
or
stos
add
xchg
jl
movsl
cmpl
add
aas
xchg
push
test
sbb
or
sub
xor
aaa
fnstsw
aas
dec
and
jbe
pop
xchg
pop
das
rolb
add
test
push
pop
sub
inc
add
call
sbb
test
pusha
xchg
aas
sub
inc
or
mov
shlb
hlt
cmpb
inc
andb
or
testb
lret
inc
ret
loop
dec
sub
pop
sub
inc
push
mov
inc
mov
loop
inc
or
or
add
sub
cli
add
cltd
or
ljmp
push
rorb
subb
mov
lods
adc
imul
xchg
inc
adc
add
fdivs
mov
rclb
add
add
stos
int
dec
hlt
fsubp
dec
iret
test
push
and
xorb
jbe
adc
fcomp
push
mov
mov
lahf
pop
mov
inc
icebp
jmp
mov
mov
push
lods
repnz
sbb
rcrb
or
adc
cld
pusha
inc
mov
fcoml
ds
mov
jp
dec
xor
xchg
sub
fsqrt
movsb
sarl
jne
cmp
and
test
inc
or
jg
jl
add
outsb
adc
enter
adc
cmpl
mov
inc
or
xchg
aas
adc
sbb
xchg
orb
fidivl
sub
or
aas
mov
pop
cmp
imulb
pop
push
sub
into
insb
mov
xchg
xchg
add
jo
mov
fiaddl
cmp
push
dec
rolb
outsb
pop
mov
mov
lock
ror
cmp
mov
ljmp
add
push
fisubl
push
mov
mov
bound
ret
and
cmp
sbbb
outsl
add
adc
daa
mov
repnz
fisubl
pushf
aas
jp
or
mov
push
pop
add
add
mov
mov
or
push
add
pop
add
and
nop
lret
aas
dec
jbe
mov
xchg
fsubrl
inc
cmp
adc
rolb
adc
push
imull
adc
mov
push
and
adc
and
incl
in
add
add
inc
add
shlb
fdivl
pop
and
mov
int
sub
daa
and
loopne
loope
loope
push
sbb
jb
sub
and
push
mov
nop
push
adc
pusha
push
push
mov
je
pop
aas
outsb
adc
adc
pop
adc
inc
pop
sub
sbb
sbb
and
add
push
sub
fistpll
lock
icebp
lds
and
mov
cmc
cltd
nop
sbb
into
cmpsb
sbb
dec
mulb
sbbb
inc
jo
or
hlt
adc
ja
insb
and
movb
scas
xor
adc
inc
or
enter
adc
push
loop
ljmp
mov
das
mov
push
stos
iret
inc
insl
add
mov
loopne
or
leave
pusha
jp
aas
jp
or
pop
outsl
jo
jo
addb
mov
mov
jle
pop
ljmp
add
iret
lods
mov
cmpsb
fsubrs
and
or
mov
xor
lret
mov
fistps
add
add
iret
or
pop
and
xchg
ja
inc
addb
push
mov
pusha
adc
enter
pop
and
shr
hlt
ljmp
repz
aas
push
push
cmp
loop
xchg
ja
test
jnp
rorb
mov
xchg
rcrl
rolb
and
add
cwtl
aas
lret
scas
mov
mov
xchg
or
xor
sahf
push
or
pmaxub
arpl
push
pop
loopne
ret
orl
ret
adcb
andl
movsb
lock
add
adc
sub
or
insb
xchg
movsb
xchg
xor
outsl
mov
sub
mov
mov
andb
out
fninit
push
xchg
nop
rorb
fs
mov
mov
xor
cmpsb
pop
adc
mov
rol
outsb
ds
mov
stos
pop
andb
and
add
sbb
out
loope
adc
test
cmp
mov
xchg
or
testb
in
add
fistps
sub
movsl
call
ss
call
inc
push
cmp
inc
ficompl
mov
insb
or
fsubl
mov
sarb
fcoms
lds
aas
push
loopne
sbb
lock
loopne
jecxz
add
les
sbb
mov
mov
pop
dec
adc
repz
sub
jne
lcall
push
jmp
jg
addb
les
call
or
sub
adc
pop
mov
daa
aas
xchg
iret
adc
mov
je
decl
mov
inc
sbb
aad
mov
add
xrelease
and
mov
popa
jnp
jl
repnz
push
ret
adc
ljmp
ljmp
adc
rorb
add
int
gs
insl
das
push
jecxz
add
push
sub
nop
add
add
mov
shrb
fstp
ss
sbb
or
pop
adc
aaa
push
xchg
sbb
scas
adc
aam
loope
aas
push
test
mov
cmp
cmpb
loopne
movsb
rol
lods
pop
loope
mov
ss
sbb
jg
call
pop
les
arpl
xchg
fwait
or
rcll
mov
inc
and
sub
repz
mov
mov
lock
pop
push
loopne
and
mov
cmp
addr16
subb
mov
push
and
sbb
pusha
push
and
jbe
or
add
lock
push
in
jo
js
mov
test
cwtl
rcrl
in
mov
jmp
test
push
or
pusha
sub
adc
hlt
push
dec
and
stos
out
test
inc
mov
adc
bound
pusha
or
add
test
xchg
mov
adc
xor
mov
jp
mov
lock
mov
je
pop
mov
pop
loope
call
pop
insb
add
addb
add
mov
jbe
adc
adc
fisubrs
and
mov
jno
add
unpcklps
push
in
stos
mov
xor
xchg
filds
mov
add
mov
adc
test
inc
mov
or
mov
pop
jo
mov
clc
push
xor
adc
xor
xchg
ja
das
push
cmp
or
add
cli
or
mov
les
or
and
cwtl
adc
push
inc
std
jg
pop
cmp
and
sub
lods
add
les
pop
ja
call
cmp
jno
shrb
pop
xchg
das
rclb
popa
push
bound
xchg
pop
loope
test
jg
out
insb
in
push
nop
or
sbb
aas
inc
fisttpll
testb
add
jnp
xor
shll
xchg
aas
loopne
add
add
fistps
mov
xor
js
add
movsb
push
nop
mov
add
adc
pop
cld
adc
into
adcb
pop
scas
pusha
xor
pop
test
cmp
pusha
cmp
xor
add
or
ret
sbb
or
adc
sub
icebp
or
jo
mov
addb
ret
cli
jg
and
mov
pop
push
or
mov
in
or
and
test
cltd
mov
xchg
subb
mov
std
or
mov
xor
add
push
and
cmp
mov
jns
push
pop
lcall
out
xchg
xchg
adc
add
mov
lret
and
and
mov
ljmp
xchg
mov
mov
inc
cli
nop
pushf
das
adc
jo
mov
adc
jne
ja
aam
or
outsb
push
loopne
adcl
and
pusha
adc
add
lock
imulb
mov
or
xor
jp
pop
and
ljmp
xchg
les
adc
dec
mov
mov
lahf
sub
cld
add
aas
inc
icebp
lds
sub
mov
cmp
rcl
loope
sbb
xor
adc
add
test
jb
adc
decb
rcrb
mov
and
or
outsl
xchg
loop
daa
add
push
test
das
cmp
sti
mov
inc
cmovno
mov
add
adc
sbb
lock
fiaddl
jmp
test
pushl
sbb
xchg
inc
adc
movsl
and
shlb
fisubl
add
xor
std
xor
xor
iret
xor
pop
sub
fimuls
inc
mov
and
mov
cmp
mov
and
pop
in
mov
adc
fbld
xor
out
fisttps
bound
sub
and
xor
fs
xchg
dec
inc
cmpsb
fistps
dec
shlb
sbb
decl
sbb
dec
xlat
jo
lea
push
cltd
in
dec
pushl
xor
jo
pop
add
sub
sub
lock
fwait
pusha
push
pop
or
pushl
sarb
jp
popa
jbe,pn
lock
aam
in
mov
leave
sub
mov
add
jno
push
or
lcall
fs
mov
in
fildl
dec
nop
in
pop
inc
cld
or
leave
rolb
cwtl
nop
xor
mov
movsb
jnp
or
incl
pop
bound
dec
mov
xor
ret
inc
adc
mov
mov
xorb
jbe
loop
pop
mov
xor
mov
cmp
xlat
into
add
fwait
add
rorb
ds
int3
ret
or
pop
add
out
dec
andl
dec
aas
inc
clc
pop
loop
insb
mov
push
pop
add
or
jecxz
aas
add
sub
mov
les
pop
mov
addb
sub
mov
pusha
les
rolb
call
add
push
add
adc
aas
or
add
rolb
mov
ss
mov
add
popf
sub
sub
pop
pusha
lahf
pop
scas
mov
das
mov
add
scas
add
int3
test
or
aaa
add
jmp
pop
add
ljmp
aam
add
montmul
cmpsb
add
adc
addb
les
fcomps
je
lock
lcall
adc
ret
xchg
push
pop
and
mov
lock
and
mov
cmp
push
push
ret
fistl
mov
add
idivb
lds
jecxz
cmpb
or
std
int3
add
add
scas
in
test
add
ss
add
cmp
rcll
fisubs
adc
fsubs
cld
movlps
add
mov
push
jmp
add
lock
cmp
popf
add
cld
mov
dec
lret
insl
cmc
cmpsb
fwait
push
inc
popa
lock
sti
inc
sbb
movsb
ljmp
add
add
or
add
add
cli
jmp
cmp
pop
lds
lds
cmp
aaa
or
adc
ljmp
jl
dec
lea
jo
rolb
push
mov
add
or
roll
push
inc
and
or
push
mov
xchg
add
incl
push
jg
xor
pop
fildl
lcall
xchg
adcb
test
mov
cs
jp
sbbb
inc
rorb
rcrb
dec
enter
push
pop
mov
xchg
and
cmp
add
push
mov
decl
pop
pop
dec
data16
int
gs
sub
xor
pop
out
xchg
aas
les
es
and
fiadds
mov
add
ss
iret
mov
stos
pop
mov
pop
push
mov
stc
scas
rcrb
sbb
std
daa
mov
add
sub
add
push
adc
adc
aas
ret
add
or
std
shlb
pop
mov
pop
icebp
fbld
pushf
adc
rorb
xor
xor
andb
and
xchg
addb
pop
add
adc
aas
xchg
jecxz
push
pop
js
daa
nop
adc
push
ret
out
xchg
mov
jo
loop
pop
shrl
mov
add
sbb
push
push
stos
mov
xchg
sub
mov
sub
add
fimuls
bound
pusha
xor
add
xchg
add
dec
lock
ret
xchg
lcall
movsb
add
cwtl
jecxz
sub
or
mov
pop
ljmp
cmp
mov
dec
fdiv
addr16
or
mov
rolb
out
sub
repz
scas
xorb
adc
or
and
pop
das
mov
inc
shlb
shlb
test
adc
adc
sub
and
iret
addb
inc
cltd
lods
cvtps2pd
jbe
adc
ljmp
ds
pop
adc
ret
pop
test
popl
cmp
rclb
ja
xchg
jecxz
push
cli
push
adc
sar
es
or
movsb
movb
mov
sqrtps
mov
das
and
test
mov
or
and
clc
fbld
rolb
and
dec
add
pop
push
inc
pusha
ret
pop
mov
aas
sbb
xchg
or
add
fiaddl
sahf
data16
sub
std
push
or
mov
jns
add
test
inc
xor
pop
jmp
mov
add
push
adc
mov
mov
loopne
mov
cmp
je
xchg
call
mov
call
cmpl
loope
add
xchg
testb
insl
xor
fwait
je,pt
mov
cmp
jle
cmp
lock
movsb
sub
or
xchg
jmp
push
dec
std
ljmp
lahf
mov
stos
sbbb
adc
mov
pop
fwait
mov
enter
adc
dec
adc
mov
pop
loope
rolb
les
sub
jle,pt
or
xor
pop
icebp
push
and
adc
push
aas
ficomps
inc
inc
inc
push
dec
insb
add
inc
mov
inc
in
push
jp
mulb
adc
mov
mov
test
sbb
inc
or
aaa
add
jl
les
add
adcl
dec
incb
inc
push
push
push
lods
cwtl
sub
add
mov
mov
les
int
loopne
sub
call
std
xchg
test
xor
sarl
push
arpl
xchg
cmc
aas
dec
mov
jp
in
sub
mulb
dec
xor
mov
adcl
add
xchg
inc
jecxz
jg
mov
mov
or
andl
pop
in
push
xchg
push
sbb
and
push
push
push
or
rolb
inc
je
xor
dec
sbbl
pop
inc
cli
mov
orb
cmp
add
mov
sub
stos
sbbl
popa
cmp
mov
sub
call
jo
loop
adc
inc
lock
push
mov
sbb
scas
adc
scas
pop
cmp
xor
daa
inc
or
stos
cmpsb
rorb
add
movsb
aas
rclb
and
mov
sub
mov
ret
add
cmp
in
loopne
scas
out
clc
lcall
mov
sbb
mov
sub
cmp
and
or
mov
pop
imul
adc
inc
sbb
add
jo
inc
inc
ljmp
push
pusha
and
push
adcl
adc
fadds
lcall
push
adc
xor
add
or
pop
lret
xor
decl
daa
pop
push
popf
cmpsl
mov
adc
ljmp
push
or
xchg
adc
dec
lock
ficomps
mov
mov
loopne
aaa
xchg
mov
adc
nop
and
incl
push
dec
adc
mov
pop
stos
fcmovu
xchg
adc
or
push
mov
dec
push
and
fiaddl
fistpll
mov
adc
mov
adc
push
sahf
sbb
cmp
sbb
repz
daa
movsb
mov
fbld
push
adc
pop
adc
mov
pop
jnp
cmpsb
lock
or
dec
loope
xor
inc
test
inc
ljmp
or
mov
inc
or
and
adc
cwtl
data16
std
and
in
inc
and
inc
inc
sbb
xor
adc
adc
fiaddl
push
adc
inc
mov
ret
jb
mov
mov
add
cwtl
push
add
push
xchg
dec
xchg
add
js
add
fisttps
cmpb
push
data16
roll
inc
stos
das
fcoms
in
adc
pop
cmpb
movsb
adc
inc
andl
pop
jge
test
xchg
xor
outsb
and
or
hlt
and
sub
fildl
sbb
sub
fadds
xchg
inc
pop
fs
add
lret
and
stos
xor
and
les
stos
xchg
add
xchg
cmp
insb
pop
and
jmp
test
aas
inc
rclb
push
mov
push
movb
sbb
jle
scas
jg
cmp
outsb
adc
stos
orb
pop
sub
jg
ljmp
xor
push
stos
and
mov
idivl
fwait
rolb
pop
pusha
cmp
incl
loopne,pt
add
lock
nop
add
xchg
cmp
add
cld
mov
cmc
loopne
lret
xor
add
xchg
cmp
sbb
decl
das
rorb
jb
or
mov
inc
adc
pop
hlt
mov
lds
cmp
dec
out
sub
add
xchg
ljmp
mov
pop
incl
pop
repnz
fcomps
out
loopne
and
aad
mov
cli
dec
sub
fbld
xorl
jae
or
lcall
dec
or
xchg
rolb
je
jo
ja,pt
hlt
ja
rcr
rorl
cmpsl
aas
pop
and
cmc
mov
mov
movsb
jb
push
shll
sub
cli
imul
and
jp
mov
call
adc
ds
mov
add
add
jne
clc
ja
fdivs
sbbb
iret
pop
orl
fidivl
aaa
bound
femms
pusha
sbb
inc
shrb
push
shlb
dec
mov
mov
es
add
sti
dec
pop
mov
clc
mov
and
les
pop
or
jmp
pop
loop
mov
add
or
xadd
loopne
inc
adc
lcall
setb
aas
frstor
xor
cld
decl
xor
int
pushf
xchg
nop
cs
xchg
xor
and
stos
jl
add
inc
ss
cmp
inc
into
rclb
sub
adc
adc
adc
incb
pop
nop
lds
push
dec
or
cmp
dec
sub
xchg
mov
xchg
repz
lods
jle
mov
sub
sub
jo
and
add
fsubr
inc
add
mov
rcr
mov
adc
ret
xor
cmp
inc
add
cs
jg
mov
arpl
xor
sub
je
add
sarb
fisubl
leave
insl
dec
mov
loope
cmp
push
lcall
push
sahf
fisttps
mov
mov
add
or
push
sub
aad
outsl
xor
nop
outsl
ds
pusha
inc
jle
iret
fwait
add
pop
dec
mov
adc
inc
test
stos
inc
mov
sbb
add
sbb
cmpl
add
xchg
sbb
cmp
push
in
cld
cmp
and
lods
xor
mov
aas
loop
orl
xor
aas
fiadds
and
sbb
or
or
pop
sbb
add
pop
push
mov
sub
nop
or
pusha
pushf
xchg
add
adc
adc
iret
lret
test
ljmp
out
in
and
xchg
push
xor
into
cmp
inc
add
lock
or
stos
pop
ret
dec
xor
pop
adc
subb
xor
or
add
xor
clc
push
jl
ret
add
pop
clc
mov
fimull
orb
bound
fsqrt
sub
or
out
aad
xchg
inc
ret
mov
xor
inc
dec
cmp
shll
lret
in
add
inc
inc
loop
out
xchg
inc
or
in
fwait
add
test
cmp
rcll
or
call
inc
push
mov
xor
add
sub
mov
xor
mov
sbbl
mov
roll
or
inc
inc
inc
roll
pop
mov
stc
mov
aam
mov
cld
inc
or
std
ljmp
pop
fldcw
cwtl
rcl
inc
push
ret
cmpsb
les
add
roll
push
mov
sub
out
xchg
dec
test
iret
inc
addb
add
mov
or
leave
inc
xchg
sub
push
and
add
sub
mov
incb
stos
pop
int3
cld
pop
popa
subb
flds
jl
ret
sbb
xchg
sbb
rcrb
icebp
data16
inc
mov
xchg
andb
push
mov
sbb
add
jecxz
push
stos
inc
fistpll
jl
rolb
cmp
mov
inc
mov
cmp
add
mov
mov
sarb
or
or
mov
inc
xlat
lret
mov
or
mov
cmp
cmp
pusha
insb
cmp
aam
mov
or
mov
aas
insb
subl
inc
push
stos
sarl
out
sbb
cmpb
cld
decl
push
inc
jecxz
and
mov
mov
outsb
shl
lods
roll
mov
push
divl
mov
sbb
xchg
mov
add
not
cwtl
cmp
push
ljmp
jmp
mov
cld
orb
les
mov
or
rclb
jae,pt
add
out
gs
adc
or
setb
push
xor
scas
adcb
dec
sub
repz
push
xor
loopne
or
lock
jae
aas
cmp
add
mov
mov
dec
inc
and
mov
andb
sbb
es
or
popa
sub
cmp
add
nop
adc
addl
and
shrl
xchg
push
pop
adc
pop
push
je
xor
push
sub
mov
cs
out
jbe
cmpl
iret
or
nop
aam
mov
and
shlb
xchg
mov
add
jne
pusha
or
movsb
sub
movsb
pop
add
ret
cmp
loop
bound
cli
push
mov
xchg
cmp
adc
pop
repz
shlb
loopne
mov
push
xor
sub
pop
push
xor
cmpsb
inc
and
inc
pop
dec
and
cmp
rorb
sbb
das
and
add
pushf
push
es
stos
outsb
adcb
sub
dec
outsb
lods
loopne
adc
shll
mov
in
xor
cmp
fbstp
into
xor
mov
ret
xor
push
lds
cmp
xor
mov
jb
inc
pop
enter
shlb
mov
fdivs
xchg
push
push
leave
xor
addb
jb
jmp
clc
mov
and
cmp
pusha
daa
insb
xor
xchg
jp
jmp
mov
cld
mov
add
stc
mov
mov
add
loopne
jnp
xchg
outsl
int
add
sbb
mov
adc
pop
popa
add
and
sti
aas
adc
subb
pop
or
and
pop
sub
mov
nop
mov
das
pop
movsb
int3
gs
jle
xchg
cs
in
shlb
pop
xor
cs
mov
xchg
mov
or
push
cmp
je
jne
loop
mov
mov
push
ret
adc
push
pusha
inc
pop
push
adc
dec
fcmovnb
movsl
aam
add
pop
rolb
ja
fldl
xor
jo
add
ret
add
dec
add
adc
into
loop
aaa
hlt
pop
adc
sbb
lea
jge
test
das
jbe
sub
out
test
pop
lcall
ja
pushf
pop
push
jnp
lahf
sbb
mov
push
or
xchg
adc
popa
mov
jo
repnz
xor
push
jle
add
fwait
ret
mov
cmp
fiaddl
mov
add
mov
or
mov
lock
subb
mov
mov
jp
test
ljmp
loopne
std
decl
roll
aad
or
lock
xchg
cwtl
clc
bound
or
push
sbbb
sub
jge
mov
dec
dec
js
push
clc
mov
xchg
repnz
sub
jno
cli
incl
in
or
pop
lock
inc
cmp
or
in
adc
orl
movb
xchg
aam
push
and
enter
in
xorb
jns
rorb
push
push
clc
das
xor
push
aam
pushf
test
sti
fadds
cmpsb
xor
and
add
and
add
adcb
sbb
and
add
add
jo
add
push
mov
test
les
mov
pop
add
scas
js
mov
nop
imulb
es
cmpsl
sub
pusha
adcb
mov
mov
rolb
mov
mov
mov
sub
leave
js
test
or
mov
lock
or
xchg
incl
arpl
push
out
mov
ficoml
and
inc
sbb
sub
mov
bound
popa
movsb
mov
leave
or
sti
adc
not
jo
int
mov
cli
ror
pop
faddl
add
sub
xchg
out
roll
mov
nop
inc
into
xchg
pop
mov
and
and
jl
or
push
ljmp
std
mov
icebp
mov
gs
adc
clc
lahf
and
mov
add
and
pop
adc
ds
adc
adcb
in
mov
pop
add
pusha
pandn
pusha
xchg
rcrb
outsl
mov
jp
xchg
lcall
loopne
stos
adc
test
je
adc
mov
push
jbe
sbb
jb
fwait
jp
jo
aaa
or
shrb
andb
adc
cmpsb
mov
cmpsb
pop
sub
or
adc
push
or
and
stos
fbstp
inc
sub
loop
jg
xor
rcrb
fisubs
sbb
or
jbe
aaa
and
loopne
xor
xor
push
mov
insb
sub
jo
push
mov
adc
add
lret
rcr
and
jle
adc
or
mov
lahf
insb
mov
mov
or
aad
mov
or
mov
lar
cld
mov
cs
cmp
movsb
cmp
or
mov
inc
add
mov
fs
xchg
ret
fists
scas
js
push
sbb
xor
adc
xchg
cwtl
and
gs
mov
test
cmp
shll
std
mov
add
mov
loopne
loopne
and
sahf
jmp
push
out
jo
cmpsb
push
and
cmp
aas
loop
js
and
lods
adc
mov
pop
pop
pop
jmp
push
xchg
or
ljmp
xor
test
ret
add
pop
shr
pusha
mov
call
js
mull
add
jmp
mov
and
clc
mov
clc
aad
inc
pop
mov
push
adc
push
cwtl
jo
add
adc
incl
push
or
mov
adcl
xor
enter
or
ds
pushl
jo
ds
shr
jmp
push
jp
xor
sbb
and
ret
loopne
push
fmuls
add
mov
enter
rclb
dec
add
push
call
jno
jmp
dec
mov
aas
in
adc
insb
hlt
movsb
jp
andb
mov
push
add
iret
adc
inc
mov
popf
fidivrs
inc
bound
sub
or
jg
dec
pusha
add
xchg
sbb
push
andl
push
sbb
and
xor
pop
fidivrs
and
movsl
push
cmp
add
pop
push
xchg
jg
popf
shlb
cmp
push
mov
stos
out
xchg
cmp
push
jecxz
pop
icebp
add
cli
inc
inc
cld
adc
mov
imul
adc
lock
xchg
push
mov
call
mov
shrb
idivl
fistps
rcrb
pop
rcrl
sub
sbb
nop
jo
in
mov
cmp
sbb
aam
xchg
push
call
push
aam
pop
jo
into
push
push
xchg
hlt
adc
pop
xchg
lret
adc
dec
mov
pop
cld
cmp
push
out
fisttpll
or
push
or
xchg
lret
ss
movsb
inc
imul
mov
dec
xchg
dec
enter
xchg
fld
mov
lods
mov
mov
dec
mov
xor
push
adc
aad
add
xor
sbb
push
xor
pusha
add
mov
pop
cmpl
sbb
and
out
xchg
orb
pop
adc
ret
dec
lods
pusha
adc
jmp
testb
pop
pusha
aam
rolb
inc
popa
add
out
loope
xor
xchg
aam
rolb
sub
pusha
sub
fldcw
sarb
push
shll
mov
das
push
sbb
loopne
test
ret
push
mulb
outsb
pop
push
lcall
sub
pop
mov
sub
out
mov
out
add
lcall
ret
je
in
stos
sub
subl
push
xchg
fidivl
stos
aam
clc
or
pop
test
movsl
fs
adc
shll
out
push
lods
ja
sbb
xchg
fwait
mov
movsb
or
ret
adc
push
fadds
add
test
pushf
movsb
shll
mov
xchg
in
daa
and
push
movsl
pusha
loop
loopne
sar
int3
add
mov
fildl
scas
cmp
fsubs
addl
inc
and
dec
inc
add
fcmovne
add
aam
pop
aam
sub
lcall
adc
dec
cmp
mov
add
sbb
adc
mov
mov
rcrb
pop
inc
inc
push
lock
gs
dec
mov
in
add
jl
in
sub
lock
add
and
xchg
mov
lock
fildll
in
cmpb
jns
push
and
in
in
mov
push
pusha
sub
adc
imul
xchg
or
adc
out
in
es
sbbb
add
inc
loope
push
and
cmp
test
ds
xchg
add
fistps
and
push
je
add
fcmovu
addb
or
push
hlt
clc
ljmp
dec
lods
add
ret
mov
enter
fcomps
cld
shlb
lret
loopne
cwtl
test
xchg
or
add
mov
push
xchg
and
outsb
mov
pusha
ficoml
mov
push
mov
mov
call
xor
nop
shrb
arpl
mov
and
lcall
pop
dec
aam
or
inc
pusha
adcb
mov
addb
inc
out
mov
lret
inc
pop
mov
sbb
lea
adc
aas
movsl
lcall
fwait
adcb
or
or
out
aad
pop
in
aas
mov
xchg
add
in
mov
xchg
pusha
clc
in
aas
jmp
or
adc
adc
stos
jecxz
pop
xchg
or
mov
adc
imul
sub
inc
inc
mov
add
mov
mov
frstor
xchg
inc
mov
cld
push
test
cltd
rcrl
or
or
adc
ret
popa
xor
xchg
adc
fwait
test
mov
popl
push
inc
sub
adc
dec
rorb
ja
add
mov
sub
les
mov
add
ret
fcoml
pop
lock
popa
cs
push
repnz
or
jns
pop
jge
clc
adcb
sub
inc
xchg
sbbl
hlt
mov
das
es
int
mov
add
cmp
sub
fadds
int
enter
fistl
push
cmp
sbb
fcmovne
shlb
xchg
test
and
xchg
adcb
push
adc
pop
dec
loopne
mov
pop
push
lcall
xchg
aam
push
jmp
xchg
and
push
adc
sub
push
add
sbb
std
sub
cmp
mov
popw
push
sub
adc
pusha
mov
and
in
inc
ds
fwait
sbb
jno
rorl
cltd
and
mul
mov
cli
jg
sbb
push
add
add
mov
outsb
sub
and
andb
or
pop
aas
xor
mov
push
pop
leave
std
neg
popa
mov
sub
lret
out
sub
leave
movl
mov
jo
and
dec
mov
in
add
cli
push
add
inc
add
inc
sahf
bound
sbb
mov
aas
inc
stos
adc
test
jbe
inc
and
fcomp
cmp
test
js
pop
adc
pushf
loop
inc
add
rolb
sbb
sar
es
pusha
pop
push
cltd
shrl
mov
pusha
loopne
loopne
flds
fadds
ljmp
or
mov
or
push
or
add
pop
loope
and
pop
or
add
xchg
inc
add
rorb
mov
movsb
insb
scas
rclb
and
pop
lea
inc
pop
inc
adc
mov
adc
adc
inc
movsb
jbe
mov
sti
lret
dec
adc
sbb
sub
xor
pop
pop
hlt
mov
shlb
mov
and
push
push
or
cmp
ja
sbb
add
adc
dec
shlb
pop
cwtl
add
pop
movsl
adcb
fmuls
dec
sub
and
xor
out
adc
cld
inc
adc
jo
lock
popa
mov
adc
add
or
lods
add
fs
aad
dec
fildll
sbb
loopne
push
mov
fwait
and
shlb
es
and
aad
test
loopne
fisttps
pushf
test
fwait
and
xchg
les
add
negb
sub
aas
ret
adc
inc
push
adc
ret
mov
fs
cwtl
and
or
xchg
fisubrl
pop
mov
add
xchg
or
pop
aam
jb
test
add
push
adc
clc
xchg
in
repz
push
xorl
mov
adc
or
add
inc
inc
inc
cmp
hlt
and
jmp
cmp
cmp
push
add
sahf
xor
mov
sahf
movb
clc
aas
rorb
mov
movsb
int3
fwait
loope
orl
push
or
loope
add
mov
mov
pushf
iret
sub
add
roll
mov
pop
insb
adc
push
add
push
in
bound
cmp
xor
std
in
fcmovbe
jno
scas
mov
and
mov
pop
sub
pop
test
dec
popf
loopne
psraw
hlt
inc
mov
and
or
andb
or
inc
push
add
or
push
movsl
jmp
jne
popa
test
in
ja
jo
inc
ret
fwait
mov
addl
jle
xchg
cs
mov
add
aam
xor
lahf
push
in
add
lods
add
mov
cmpsb
aas
add
adc
outsl
ret
push
or
outsl
cmpb
andb
jg
sahf
outsl
mov
xchg
rolb
rcl
add
push
fwait
dec
dec
jecxz
rcrb
xor
fwait
shl
add
cmp
push
outsl
mov
wrmsr
and
xor
adc
xchg
aaa
and
sub
pusha
inc
adc
inc
pop
out
pop
adc
mov
lock
insl
insl
and
ret
shrb
push
popl
sbb
test
mov
push
push
aas
mov
mov
lea
mov
les
push
jg
push
xor
fs
cli
rolb
mov
add
and
inc
mov
aas
call
xchg
sub
jo
mov
push
aam
test
fadds
scas
mov
nop
mov
test
cmpsb
mov
cmp
adc
mov
nop
es
or
or
adc
xchg
fsqrt
push
jecxz
fistpll
rcl
xor
sarb
daa
xchg
pop
aas
push
push
in
inc
dec
xor
fmuls
out
loopne
or
mov
jno
pop
loopne
sub
aas
mov
dec
push
sub
add
ljmp
dec
push
pop
push
xchg
or
add
hlt
movsb
inc
inc
movsl
or
nop
or
mov
mov
cmp
inc
mov
inc
dec
pop
inc
cmp
rcrl
push
bound
or
push
sbb
sub
fiadds
cltd
fisttps
dec
icebp
xchg
push
pop
lahf
loop
push
adc
adc
mov
ss
outsb
outsl
outsb
cmp
add
cmp
and
aad
rclb
adc
das
movsb
adcb
push
mov
lock
adc
push
call
push
mov
popa
dec
lret
test
adc
loope
adc
xor
rorl
loop
sbb
push
add
orb
dec
loopne
add
int
add
adc
add
dec
and
mov
pop
lock
adc
adc
cltd
lock
fmull
test
add
or
mov
insl
inc
pop
adc
mov
jecxz
sbb
and
push
pop
lock
mov
leave
aas
xor
xchg
mov
pop
aas
add
ficoml
rol
ss
cmp
addl
push
pop
test
sbb
sti
ljmp
mov
push
sbb
sti
shlb
shlb
icebp
bound
mov
push
adc
inc
mov
xor
add
roll
loop
scas
push
cmp
xor
cld
mov
test
inc
add
inc
push
fs
pushf
mov
xlat
aas
lods
xor
xchg
mulb
and
rolb
loop
xchg
pop
in
mov
movlps
movsl
dec
adc
dec
movsb
sub
cld
xchg
daa
nop
mov
jmp
icebp
add
add
addl
cmp
or
cmc
add
das
movsb
lock
cmp
and
pop
push
mov
outsl
data16
daa
nop
dec
push
sub
jg
mov
mov
icebp
nop
sub
filds
nop
nop
add
or
out
out
mov
in
nop
mov
or
sarb
add
movsb
sbb
das
call
or
add
or
fmuls
fstpl
push
lds
push
inc
push
push
jno
aas
cmp
decl
jnp
sbb
dec
mov
aas
daa
mov
fildl
add
adc
inc
dec
js
mov
adc
insb
xlat
push
mov
sbb
add
xchg
test
mov
movsb
fidivrs
push
aas
jp
adc
mov
mov
adc
hlt
shlb
pop
rclb
mov
out
add
sub
enter
xchg
rorb
std
fcoml
and
add
ret
lods
das
rolb
mov
shlb
pop
jne
xorb
ret
fidivs
push
clc
pop
loopne
pop
cwtl
xchg
push
mov
andl
push
aad
inc
sbb
incl
lcall
aad
push
pusha
andb
mov
adc
cld
and
shrb
inc
sub
mulb
sub
xchg
mov
push
sbbb
sbb
lret
mov
add
arpl
loopne
push
adc
dec
ljmp
or
aad
pop
ljmp
pop
dec
stos
loopne
in
sbb
aam
and
add
inc
jmp
mov
xchg
in
add
inc
stos
jp
fdiv
lahf
rcll
nop
push
cmpsl
out
jmp
test
repnz
sarl
jno
push
add
insb
mov
xchg
or
adc
test
pushf
js
ficompl
rcrb
sbbb
mov
mov
jns
push
sbb
leave
inc
add
mov
stos
stos
sarb
adc
in
pop
cmp
and
pop
xchg
repnz
cwtl
aam
add
add
rolb
nop
loope
adc
adcl
add
fcomip
scas
clc
xor
fdivs
sub
pop
shl
add
adc
mov
pop
push
mov
bound
xchg
sub
mov
or
mov
fisttpl
xor
std
add
insb
xchg
push
push
stos
nop
mov
jle
add
cs
ljmp
add
and
adc
xchg
add
mov
mov
and
outsl
jmp
and
xchg
push
sbb
push
push
negl
loope
add
es
add
adc
cmp
enter
outsb
bound
push
xchg
inc
xor
push
mov
lahf
test
testb
or
adc
add
mov
insb
andb
push
shl
adc
ja
aaa
dec
cmpsb
cmpsl
ret
adc
out
push
sahf
iret
pop
lahf
add
add
lret
or
test
fadds
mov
call
and
sbb
test
aam
push
fstpt
aas
mov
movsl
cli
fdivrs
jbe
add
adc
orb
fidivl
or
fisttps
push
pop
lahf
jg
push
or
xorb
icebp
pop
cwtl
movl
shll
jnp
gs
mov
dec
mov
or
mov
mov
xchg
out
lods
add
fdivrs
cli
repnz
cmp
and
sub
ja
cld
pop
inc
fisubl
and
mov
jle
je
subb
jo
pop
add
lret
dec
sub
or
addr16
add
in
iret
adcb
sub
fists
sub
inc
mov
aaa
xchg
cmp
dec
ljmp
rorl
in
jecxz
enter
mov
sub
adc
adc
add
sbb
pop
sbbb
subb
lret
xchg
mov
dec
adc
and
and
add
add
ljmp
fmuls
jbe
loopne
andb
mov
add
orb
adc
or
push
or
add
and
mov
aaa
es
testl
adcb
addl
push
ret
nop
add
movb
cld
lahf
js
add
ja
testl
int
cmp
arpl
notb
inc
cmp
pop
shlb
jmp
dec
loope
or
cmp
inc
dec
and
inc
xor
ds
inc
pusha
mov
int3
push
xlat
adc
sbbb
adc
inc
xlat
pop
jg
add
add
mov
inc
inc
test
iret
mov
jl
add
inc
add
mov
into
movsb
test
stos
mov
sub
adc
add
lret
rorb
jmp
out
mov
inc
daa
cltd
fiaddl
pop
addb
andb
out
lds
cmpb
and
or
inc
jecxz
or
fidivl
jo
add
mov
popf
mov
push
clc
scas
js
loop
rclb
movsl
nop
scas
mov
add
mov
enter
or
sbb
call
ljmp
add
roll
push
orl
push
inc
enter
adcb
les
sub
das
add
mov
pop
repnz
push
and
adc
rorl
cld
xorb
add
cmpb
or
aaa
sub
roll
sub
push
iret
movsl
cmp
mov
or
loop
pop
mov
incl
fimull
sub
iret
xchg
ror
or
mov
mov
ss
xchg
mov
ret
sub
xor
jbe
mov
stos
add
mov
xchg
dec
pushf
or
push
sar
adc
jmp
and
or
and
mov
repnz
add
aam
outsb
std
pop
sub
faddl
jae
jl
push
in
arpl
loopne
adc
mov
rol
and
je
outsb
pushf
fld
push
adc
jbe
jmp
adcb
and
jbe
ljmp
ret
aaa
lods
mov
and
adc
and
xchg
xor
lahf
cmpsl
mov
lcall
addr16
cmpsb
imul
add
aaa
mov
cmpsb
mov
add
and
jbe
adc
out
std
jnp
and
idivl
lret
stos
ret
and
add
fisttps
xlat
and
mov
fildll
mov
dec
or
imul
mov
in
jge
imul
pop
pop
sbb
sub
idivl
aas
and
adc
aam
sbb
fidivrs
rcrb
sbb
cmp
xor
notl
pop
pop
popa
pop
stos
inc
xchg
mov
mov
addr16
xchg
stos
inc
add
popf
xor
push
lret
and
push
setle
add
shrb
arpl
jl
idiv
ror
loope
ret
sbb
jae
add
sub
inc
aas
pop
dec
movl
je
pop
dec
clc
or
shlb
pop
data16
mov
clc
inc
mov
loope
inc
inc
mov
fisttpl
push
subl
or
xchg
push
repnz
adc
inc
add
rcpps
repnz
je
pusha
push
pop
sbb
adc
add
mov
movsb
add
adcl
loopne
js
call
mov
push
push
sbb
sbbb
lcall
addr16
cmp
scas
mov
xlat
mov
dec
add
ffree
mov
inc
add
cmp
mov
cli
jl
push
insl
or
rclb
ja
pop
and
fldt
push
add
subl
push
dec
bound
fidivl
add
outsl
xor
and
and
lret
mov
aaa
sbb
call
adc
loope
or
aad
lods
fiaddl
loop
and
mov
ljmp
lods
xor
adc
out
mov
mov
sarb
aam
dec
insl
jp
cwtl
jo
inc
addb
xchg
loope
push
push
pushl
es
enter
adc
dec
pushl
add
mov
orl
mov
repz
gs
sahf
xor
jo
mov
adc
test
iret
cld
mov
loope
fimuls
ds
add
in
aam
dec
or
add
icebp
mov
or
pop
add
inc
fldl
lods
out
xor
pop
fcoms
xor
adc
jle
pop
fs
adc
mov
adc
jecxz
call
mov
js
jmp
arpl
xchg
inc
adc
jecxz
inc
cld
inc
xor
xor
stc
out
loop
add
in
pusha
or
or
inc
ret
or
sbb
or
and
mov
inc
mov
add
popa
or
add
pop
loopne
add
and
sub
adc
outsl
push
addb
lcall
add
sub
aas
adc
test
loop
adc
inc
jo
or
xchg
pop
xchg
fdivrs
gs
jle
aas
jle
add
out
add
loope
clc
mov
daa
jecxz
cmpl
decl
adc
aas
shrl
and
rolb
adc
mov
sub
mov
test
pop
loopne
xor
scas
adc
mov
add
mov
and
sbb
loop
or
and
add
rorb
mov
fstl
add
movsb
out
push
test
inc
sbb
mov
out
iret
outsl
popa
ljmp
xchg
mov
lock
or
inc
sti
loopne
outsl
es
and
loopne
mov
mov
xorb
shlb
mov
test
inc
pop
dec
aas
nop
clc
aaa
lock
rorl
push
add
sbb
jns
jns
inc
das
inc
outsb
sbb
jb,pn
sbb
ret
out
xchg
andl
xchg
push
add
out
ret
jg
xorb
aas
mov
adc
adc
adc
idivb
in
sti
ja
ret
and
mov
add
mov
test
cs
aad
and
xchg
cmpb
inc
cmpl
outsb
dec
fidivrl
scas
adc
insb
rorl
cmp
dec
lret
jge
xor
and
out
aas
inc
cld
pushf
fadds
es
mov
sub
inc
shll
push
loopne
popa
sbb
rep
aaa
or
cmpb
add
add
mov
jecxz
adc
push
ret
daa
test
test
xor
rclb
insb
call
add
andl
hlt
xor
mov
nop
push
jo
cltd
pop
fistpll
xchg
loop
xor
mov
sub
leave
add
and
push
inc
out
les
inc
and
cs
aas
imul
adc
dec
add
sbb
subl
add
sbb
rcr
cli
pop
int3
ficoml
rolb
mov
mov
add
sub
shlb
inc
dec
incl
sub
incb
aas
icebp
jle
add
sbb
push
fs
lock
dec
inc
das
adc
rolb
test
cmp
lock
add
xchg
add
mov
dec
daa
iret
or
add
pop
xchg
add
push
aas
insl
jae
ja
adcb
push
xchg
push
jecxz
mov
adc
cwtl
mov
loopne
add
mov
mov
les
jbe
add
inc
sub
xchg
lret
loopne
mov
add
nop
shrb
add
outsl
mov
aad
xor
push
mov
dec
loopne
movsb
fimuls
loope
test
jb
out
adc
lea
shlb
movsb
adc
xchg
jle
mov
mov
dec
mov
jb
shrb
lods
rol
idivb
ja
cmp
dec
cmp
push
nop
mov
mov
adc
push
add
popa
adc
cmpsb
mov
sbb
std
rcl
mov
xchg
xchg
decb
jb
add
hlt
fcmovnu
mov
shrl
push
xchg
add
sti
pop
push
add
or
push
xchg
icebp
add
pop
loope
pop
pop
loope
movswl
sarl
dec
jae
xor
push
pusha
xor
popa
mov
mov
rcll
loop
subb
mov
pusha
gs
cwtl
xlat
loop
inc
sub
outsl
fnsave
nop
push
mov
loopne
dec
idivl
pushf
or
xor
sbb
adc
or
ficompl
dec
add
add
or
add
or
mov
popa
add
mulb
addb
cmc
sbb
xchg
inc
ds
mov
xchg
jecxz
push
lret
cmpsb
loop
mov
addb
lcall
add
daa
add
ror
push
cs
dec
mov
mov
fildll
addb
pop
add
fcomps
das
fcoms
inc
add
mov
push
mov
not
fidivl
lcall
popa
cmp
cld
jg
xchg
inc
and
mov
cld
pop
push
subb
in
inc
aam
ja
mov
add
mov
dec
and
mov
pop
iret
andl
js
iret
mov
adc
cld
daa
push
push
xchg
mov
idiv
jg
adc
in
loopne
fcoms
loopne
add
or
or
mov
jo
jecxz
rcr
out
xchg
das
inc
xlat
jg
in
shrb
add
jno
mov
outsl
mov
add
je
pop
pusha
loop
mov
gs
push
add
mov
or
hlt
sbb
fbld
es
inc
xchg
dec
inc
or
mov
hlt
cmp
xor
sub
test
loop
and
jl
or
sub
ja
aas
loope
inc
pusha
outsl
add
inc
shrb
jb
xchg
inc
xchg
push
ret
int3
mov
sub
mov
push
and
popa
fsubrl
cld
cmp
sub
adc
push
sub
add
dec
enter
pop
scas
mov
add
iret
cmp
jg
mov
iret
in
add
add
add
or
inc
js
jb
add
sub
insb
fildl
inc
dec
test
pop
xor
les
adc
or
decl
or
push
xor
pop
insl
pop
sub
iret
add
adc
inc
mov
hlt
inc
movl
add
push
outsl
push
aaa
mov
pushf
mov
faddl
in
jo
dec
push
and
fisubrl
das
sbb
xor
inc
aas
dec
push
addb
cmp
lret
xchg
add
sbb
cmp
xchg
push
bound
and
push
in
inc
sbb
push
cwtl
inc
cmp
cwtl
or
movsl
or
cld
xchg
push
sub
in
and
iret
pop
lahf
es
movsb
fsts
dec
dec
sbb
fiaddl
das
outsb
push
mov
inc
sub
add
adc
out
cltd
dec
or
sbb
sub
add
subb
test
out
jmp
inc
and
subb
mov
adc
add
mov
sub
ss
cmp
mov
into
addb
das
jo
stos
mov
repz
loope
stos
add
stos
adc
rorl
cld
add
mov
cmp
sub
or
pop
rcr
push
out
sbb
jmp
add
jl
xlat
sub
sarl
and
sub
subl
pop
add
in
or
sub
fwait
aam
iret
add
sarb
inc
jecxz
or
adc
or
push
aas
adc
loope
adc
nop
aam
movsl
add
and
and
sub
mov
adc
mov
push
or
rol
push
dec
shrb
addr16
fldt
mov
add
inc
stos
aas
ljmp
mov
mov
pop
xchg
cmp
sub
setg
mov
mov
cwtl
clc
pop
sbb
rorl
clc
push
add
dec
mov
call
sub
fwait
adc
inc
add
mov
jp
je
push
push
push
push
inc
and
call
add
push
repnz
subb
ds
stos
test
mov
aad
pop
jp
pop
nop
cld
sbb
rorb
inc
add
aaa
fdivl
cmp
xchg
mov
orb
sbb
pop
xorl
push
mov
and
shlb
loope
or
rcll
mov
dec
cmc
rcll
adc
decl
add
ret
add
jg
rclb
add
clc
adc
repz
shlb
lea
inc
xchg
add
mov
add
or
sub
rol
mov
mov
ljmp
pusha
add
add
cs
dec
cmp
xchg
inc
sbb
sahf
xchg
ss
scas
push
sti
or
xchg
addl
filds
mov
adc
pop
cmp
xchg
push
aas
or
lea
jg
sub
aas
popa
adc
call
pop
test
mov
xchg
imul
imul
sbb
pop
bound
sbb
insb
or
inc
pop
inc
sti
inc
je
lret
push
adc
push
jg
add
lcall
jmp
jmp
xchg
and
repz
cmp
sub
xchg
jbe
or
or
imul
loop
add
ret
and
ret
cmc
testb
gs
jo
aas
test
adc
out
test
push
sbb
cmp
xor
mov
adc
pop
mov
xchg
mov
call
movsb
es
add
sub
sub
fisubrs
add
pusha
sub
loopne
sub
pushf
xchg
and
pushw
or
hlt
fcmovnbe
dec
cwtl
xchg
cmp
and
fbld
loope
jb
in
sub
out
and
add
or
add
add
add
adc
inc
jp
or
test
xchg
cld
in
push
xorl
and
jle
cs
test
jbe
enter
inc
add
loopne
pusha
and
sub
imul
mov
cmp
adc
mov
lcall
pop
loop
inc
pop
inc
loopne
and
push
sar
add
mov
fsubrl
cltd
pop
loop
rolb
add
imul
add
ds
outsl
pop
cwtl
push
adc
out
sub
mov
or
outsl
loopne
xchg
out
pop
and
pusha
mov
mov
xor
clc
cmpsb
jb
ljmp
cmp
adc
inc
pusha
fdivrl
jb
sbb
mov
cmpsl
add
sub
or
xorb
clc
das
push
mov
loope
or
or
mov
jp
mov
aad
cmpsb
cmpsb
lret
sbb
incl
addb
out
mov
inc
pop
and
mov
aas
mov
pop
lods
pop
stos
aam
and
xchg
gs
and
mov
or
push
lcall
push
rcr
add
idivl
and
loopne
mov
scas
test
jbe
inc
mov
aas
mov
sbb
mov
insb
andb
adc
mov
movsl
je
xchg
loope
and
xchg
add
sbb
mov
ret
ljmp
rclb
mov
cli
push
mov
roll
stos
and
mov
loopne
mov
inc
nop
fildll
and
roll
xchg
loop
nop
mulb
or
pop
lret
aad
jb
ret
or
push
mov
dec
sbb
pop
punpckhdq
xchg
mov
aam
mov
add
rep
mov
xchg
pop
add
lock
or
dec
pop
cmp
mov
sbb
hlt
jmp
adc
inc
aad
or
or
outsl
insl
lods
push
xchg
add
adc
inc
and
jge
or
es
cmp
negb
lcall
add
add
mov
and
pop
xchg
rclb
std
filds
and
ljmp
or
mov
pusha
adc
sub
pusha
xor
and
cmp
insb
xchg
outsb
loop
push
push
mov
adc
and
inc
shrl
outsl
pop
inc
cmp
pop
scas
mov
xchg
dec
xchg
mov
scas
addb
or
in
and
iret
cmp
push
lock
dec
iret
jecxz
xchg
rol
add
data16
lret
movsb
pextrw
jo
dec
cli
in
or
hlt
adc
adc
int
jg
mov
rcll
adc
sub
mov
jl
addl
mov
add
cmp
mov
mov
incb
adc
daa
fcoms
movb
pop
mov
shl
loopne
mov
cli
add
jmp
sub
jno
push
xchg
jbe
mov
inc
push
nop
dec
ja
adcl
dec
or
cmp
es
push
xchg
aas
ret
or
pop
lret
dec
rcrl
push
xor
add
sbb
inc
mov
jg
repnz
push
or
pop
in
or
cld
nop
mov
adc
lcall
cmp
cs
adc
jo
popa
push
cmp
fxch
cld
mov
and
xor
je,pt
push
inc
jns
xor
test
das
out
loope
sub
inc
push
jo
lcall
sbb
loope
sbbl
das
xor
mov
rcrl
daa
adc
push
xchg
mov
pop
fists
cwtl
push
push
test
ret
adc
cmpl
inc
or
mov
mov
adc
adc
pop
pop
aad
xlat
scas
dec
in
sbb
sub
hlt
fcoms
leave
mov
cmp
incl
add
push
xor
mov
add
mov
mov
xchg
add
pop
xchg
cmovl
aam
and
sbb
loop
or
mov
mov
pop
pop
and
inc
add
dec
lds
xor
dec
lds
sarb
add
rorb
mov
orb
and
mov
adc
push
mov
push
xchg
sbb
mov
fisubrl
fistps
mov
cld
dec
std
ret
xlat
mov
movsb
decb
stc
push
cli
dec
hlt
inc
test
cmpsb
aad
pusha
jge
mov
jo
xorb
mov
sbb
and
pusha
pop
js
lahf
sbbb
push
xor
dec
jo
mov
adc
mov
lock
and
popa
xor
andb
or
std
jo
add
mov
inc
jbe
adc
or
popa
pop
hlt
js
fcomip
fldl
fbld
fildl
inc
inc
cmp
cmp
push
pop
jg
push
inc
imul
sub
mov
jo
pop
add
rcl
sti
divb
add
add
adc
loop
sbb
add
adc
adc
xor
mov
ja
cs
xchg
cmp
mov
out
inc
imul
jb
aas
add
jb
xlat
test
sti
into
and
push
std
mov
pop
mov
jo
ret
xchg
ja
insb
add
mov
fs
aaa
adc
aam
imul
stos
mov
xlat
lods
das
mov
inc
or
push
push
mov
mov
std
mov
daa
mov
lahf
pop
testl
mov
stos
xchg
mov
icebp
lret
ret
hlt
xchg
in
bound
jg
call
jns
test
mov
sub
inc
add
fistpl
pop
xor
mov
mov
rolb
ljmp
add
rolb
mov
or
icebp
inc
outsl
lcall
stos
push
iret
mov
in
add
das
mov
ret
push
pop
inc
subb
adc
shlb
rolb
or
stos
xchg
cmp
popa
xor
mov
or
add
repz
les
ret
aas
lea
test
or
int3
mov
mov
pop
cmp
decb
clc
jae
outsl
and
sbbb
lahf
xor
insl
mov
jg
and
mov
mov
les
rclb
cmp
push
add
adc
movsb
outsb
inc
sub
arpl
mov
into
jnp
add
inc
lret
roll
mov
mov
loopne
and
stos
rol
mov
stos
cs
or
test
int
sub
insb
jne
pop
test
or
clc
stos
jg
call
adc
aas
and
in
xor
hlt
add
test
fisubl
pop
xor
xor
insl
mov
mov
call
pop
push
jb
orl
push
add
fs
adc
and
clc
sbb
inc
bound
pop
out
mov
outsb
test
sub
cli
push
aad
call
nop
imul
outsb
loope
adcl
xchg
add
das
lods
sbb
dec
popa
pop
hlt
or
adcl
or
pop
jg
stos
push
and
xchg
aam
imul
negl
push
and
inc
push
adcb
sub
sbb
sbb
das
loopne
sub
or
xor
lea
add
aas
pop
sub
add
and
and
or
jl
mov
adc
inc
mov
or
aas
js
fs
cmp
jo
jl
xchg
pop
jle
fbld
sub
jo
imul
stc
push
or
or
mov
inc
lret
mov
or
or
mov
pop
mov
mov
push
cwtl
jbe
faddl
stos
push
dec
mov
mov
mov
push
adc
fsubr
dec
add
sub
add
pop
nop
jne
popa
fistpll
mov
stos
sbb
jl
rorb
push
xor
add
scas
and
jo
enter
inc
push
pusha
push
sbb
xchg
inc
xchg
mov
orb
movsb
andb
xchg
fcmovbe
dec
adc
or
lea
push
push
inc
cli
cwtl
orb
pop
addb
cmp
movsl
mulb
js
bound
mov
addb
add
je
mov
rcll
cmp
and
test
test
mov
and
push
sbb
jns
xor
add
push
cmpsb
and
sbb
aam
aas
outsb
mov
dec
fsubs
mov
dec
add
sub
decl
add
nop
mov
sbb
xrelease
mov
jnp
add
mov
mov
dec
ret
mov
fidivs
test
pop
adc
jb
sbb
xor
roll
movl
mov
in
jp
clts
sbb
jne
inc
or
pusha
cli
pop
sarl
add
adc
push
mov
leave
inc
push
aas
inc
push
pop
push
test
jg
nop
repz
push
sub
inc
pop
push
xchg
inc
add
add
add
lcall
add
or
test
js
aam
sbb
xchg
shrb
popa
dec
jl
pop
mov
mov
mov
cmp
aam
push
xor
lcall
out
repz
mov
xchg
inc
push
cwtl
test
dec
sbb
adc
push
loop
or
pop
push
loop
pop
out
pushf
adc
stos
les
dec
inc
push
subb
fmuls
add
add
mov
lcall
adc
xor
call
mov
dec
mov
mov
hlt
jbe
mov
cmp
or
in
fists
and
mov
decl
rol
test
cmpb
cmp
dec
add
jmp
mov
je
add
add
subb
mov
outsl
jo
shll
rorb
pushl
xchg
adc
adc
pop
adcb
mov
andl
push
rol
add
mov
hlt
adcb
cmp
add
cmc
inc
add
cli
jg
int3
sbb
sbb
inc
pop
xchg
xor
fidivrs
adc
add
fadds
add
pop
add
inc
loope
mov
xor
cmpb
pusha
push
ret
popa
pop
jno
lods
shl
push
loope
daa
js
push
push
mov
add
add
mov
loopne
sarb
mov
or
xchg
push
aas
mov
pushf
and
lock
add
inc
add
daa
mov
xor
and
push
sub
xchg
fbld
inc
icebp
scas
pop
icebp
pop
xlat
cmp
rclb
mov
inc
sub
pop
lret
adc
cmp
adcb
mov
ret
cmp
mov
out
and
cmpsb
mov
mov
arpl
pusha
aas
inc
mov
push
sbb
inc
pusha
add
das
lods
loope
and
mov
loope
push
xor
xchg
and
lret
xor
fwait
cmp
adc
mov
jmp
and
push
les
pop
andl
add
mov
call
cmp
ret
adcb
popa
and
movsl
fldcw
andb
jbe
dec
aas
mov
and
push
sub
mov
aas
icebp
pop
fildll
mov
xor
aam
lea
inc
add
ret
xchg
jo
sbb
and
sbb
cmp
inc
cs
mov
hlt
cmp
in
mov
movsb
pop
rclb
das
lret
loopne
aas
fcomi
cwtl
loopne
push
js
xchg
cmp
push
lcall
sbb
outsl
rorb
stos
jb
xchg
cwtl
sub
dec
insb
sbb
and
in
mov
and
pop
sbbb
in
fisubrl
or
fcmovb
cmpsb
scas
add
add
pop
std
adc
cmp
rcrl
adc
in
add
inc
push
sub
push
jl
mov
pop
mull
andb
mov
stos
mov
aad
mov
pusha
adc
test
jo
adc
rolb
add
and
inc
lods
aam
rorl
mov
and
and
jns
add
jbe
sbbb
add
sbb
xchg
sti
push
mov
mov
jbe
xor
and
cmpsl
fimull
mov
push
and
mov
cltd
and
sahf
ret
addb
add
or
jge
inc
pop
inc
sbb
cld
and
sub
das
sub
add
pop
or
add
pop
and
lea
faddl
in
stos
mov
mov
xor
ret
and
fisubrl
sub
dec
iret
pushf
movl
pop
mov
hlt
jmp
sub
enter
scas
lcall
adc
cwtl
lods
and
sbb
and
add
cmp
adc
push
push
xor
xchg
test
fcomip
incl
push
popa
enter
ret
roll
pushl
or
pop
lahf
ljmp
add
push
inc
pop
add
testl
lds
cmp
iret
rolb
mov
add
push
mov
jmp
xor
xchg
jp
orb
rorb
add
incb
aad
negl
and
or
shll
sbb
test
rep
xor
add
dec
sarb
movsb
rclb
add
lds
test
lcall
fsubrp
insl
add
or
nop
push
notl
js
addb
ret
mov
out
lods
nop
inc
hlt
push
mov
mov
arpl
or
xchg
loope
cmc
jne
push
add
addr16
jl
inc
test
aad
nop
jno
scas
or
ret
lret
mov
or
sahf
inc
nop
repnz
cmpsb
sbb
cs
ja
hlt
out
repnz
mov
aam
push
push
cmp
adc
pop
pop
adc
xor
lock
mov
mov
std
dec
loop
dec
hlt
and
add
icebp
inc
mov
aam
cmp
jl
push
push
jbe
cmc
call
test
sbb
bound
movb
jno
jne
add
and
pop
jle
insb
enter
fwait
or
aam
adc
mov
sbb
pop
pushl
mov
and
into
inc
sub
jg
call
call
and
inc
popa
aas
daa
push
sub
incl
inc
pop
add
jns
pop
idiv
pushl
pop
xchg
push
cmp
lock
add
test
stos
sub
scas
add
movsl
mov
push
mov
jg
xor
sbb
aaa
jge
fcoms
push
jne
testl
jbe
pop
pusha
cli
dec
lock
or
std
outsb
push
jg
mov
mov
xchg
inc
add
scas
ljmp
dec
rorb
push
cmp
subb
cmp
push
sbb
push
aaa
inc
cmp
imul
lock
imul
cmp
push
add
sarl
loopne
add
adc
je
add
push
dec
imul
outsl
adc
sbbb
imul
push
ret
adc
sub
push
lds
dec
outsl
dec
push
sarb
ja
fwait
mov
out
adc
ret
add
fs
mov
jg
sarb
pop
adc
or
cmp
add
out
lods
mov
test
ljmp
dec
mov
ljmp
cld
inc
and
sub
mov
js
or
addl
add
adc
mov
cli
aas
cmp
sbbb
imul
add
sbb
cmp
and
jecxz
and
sub
and
rcll
les
mov
popf
pop
mov
fbld
ja
fs
cmp
fs
enter
cmp
loopne
and
test
pushl
add
in
mov
mov
pusha
xor
loopne
movsl
cmp
bound
pusha
sub
push
outsl
push
fdiv
jl
sbb
cmp
xor
push
push
fildll
xor
stc
test
jne
cmp
mov
add
or
pop
shl
pop
sub
ja
repz
andl
push
aam
bound
pop
jno
xor
adc
stos
pop
dec
add
int
loop
rclb
mov
add
lds
dec
xchg
fiadds
outsl
das
movb
xor
xchg
inc
mov
pop
mov
icebp
fwait
inc
ljmp
sbb
xorl
xor
call
mov
das
mov
pop
inc
sub
repnz
aaa
push
shll
pop
mov
jo
aad
cltd
addb
addr16
shlb
stos
aam
rolb
movsl
mov
jg
cs
mov
and
loop
and
fcomi
or
push
adc
mov
adc
add
adc
nop
adc
sahf
jmp
shl
hlt
adc
and
test
outsl
pop
loope
cld
mov
ljmp
ret
mov
test
lcall
dec
adc
add
subb
pop
inc
mov
add
pushl
js
dec
push
push
add
test
movb
mov
fcomps
addl
movsb
sbb
sbbb
mov
push
repz
push
xchg
add
test
sbb
pusha
add
lods
cmc
fistl
outsb
mov
nop
adc
xorb
pop
lea
leave
add
push
push
outsl
pop
add
in
es
xchg
outsl
pop
adc
outsl
cmpl
fists
repnz
inc
sbb
inc
adc
loopne
adc
test
adc
outsb
ljmp
xchg
push
in
push
xor
notb
mov
fwait
add
je
adc
lahf
ljmp
fcoms
sub
dec
add
mov
iret
add
xchg
sbbl
adc
or
jae
lahf
mov
je
mov
xchg
test
adc
pop
add
adc
sub
cmpb
call
sbb
incl
shrb
test
and
ret
roll
repz
ret
xchg
icebp
shrb
sub
dec
ret
aas
int3
pop
sub
fdivr
add
and
add
sti
aas
mov
ret
pop
mov
scas
and
iret
inc
jmp
pop
add
jbe
ret
mov
hlt
lea
push
inc
orl
mov
inc
push
or
add
daa
adc
xorb
jae
push
addb
ret
nop
loop
xor
mov
adc
into
sbb
lret
inc
int
mov
add
sbb
addb
icebp
cwtl
fs
add
daa
hlt
push
lret
inc
or
adc
decl
cwtl
and
sbb
call
sub
mov
and
add
add
push
sub
loopne
nop
inc
inc
and
inc
add
dec
adc
inc
jle
xor
ss
and
dec
or
rolb
or
dec
or
jae
addl
or
xchg
in
mov
inc
mov
call
dec
in
adc
outsb
out
outsl
inc
add
jle
jb
push
xor
sbb
jmp
fistps
mov
pop
add
adc
loop
sub
xadd
out
adc
ja
pop
dec
jnp
push
push
mov
subb
pop
push
adc
xor
es
jo
ficomps
imulb
pop
xchg
or
inc
sbb
test
xor
repz
rolb
mov
mov
add
adc
or
pop
arpl
out
add
stos
ret
xchg
mov
loopne
imul
or
add
mov
push
pop
out
sbb
addb
push
bound
or
push
repz
mov
fiaddl
test
inc
cmp
shl
add
mov
sub
inc
or
dec
add
mov
das
inc
or
add
and
fiaddl
adc
movsb
mov
loop
inc
xchg
inc
push
cmp
in
test
loop
adc
mov
add
iret
aas
ffree
sbb
mov
movsl
fisttpll
push
orl
jns
les
ret
sub
repz
dec
push
dec
int3
push
call
pop
je
cli
test
sub
mov
popf
fcomp
inc
jo
sub
loopne
mull
cmpsb
jo
inc
stos
incb
stos
jge
sub
jns
mov
mov
dec
std
rorb
stos
or
or
pusha
test
dec
mov
fiadds
add
adc
fisttps
and
add
mov
push
jbe
push
adc
mov
inc
mov
xchg
push
imul
nop
sub
orb
loopne
dec
push
cmpl
push
loopne
test
aas
add
nop
js
imul
imul
popa
pop
outsb
push
push
bound
and
insl
loop
mov
push
pop
ficoms
in
adcb
jnp
pop
inc
aad
jo
cld
inc
mov
in
pop
mov
in
lcall
ret
nop
xchg
xchg
pop
das
xor
mov
and
orl
and
sti
and
sahf
push
inc
and
out
ss
into
cmp
dec
shlb
out
shrl
or
xchg
dec
mov
cltd
bound
and
outsl
dec
loope
and
xchg
out
add
push
loope
push
sbb
daa
lods
loopne
xor
or
mov
pop
add
mov
xor
sub
jbe
outsl
mov
adc
mov
adc
lods
push
scas
insb
adc
push
sub
push
adc
mov
mov
repnz
je
in
nop
subl
int3
mov
ja
cwtl
push
sbb
fcomip
cs
add
push
orl
cltd
adc
ljmp
ds
push
push
or
lcall
add
shrb
cmp
and
push
scas
jl
mov
push
sub
pop
repnz
cmp
xor
dec
add
jg
mov
jmp
or
imul
pop
lcall
repnz
and
cmpsb
add
mov
add
jbe
push
ja
cmp
repnz
call
cs
fcmovb
popf
push
mov
or
jmp
dec
or
dec
movsb
sbb
pop
decl
mov
add
cmp
fists
fcomi
add
pusha
ljmp
pusha
mov
fstl
dec
addb
inc
ror
adc
jle
addb
sbb
les
ljmp
dec
adc
push
add
test
fsubrl
ljmp
pushl
or
popa
jae
lock
orb
push
aas
xor
fstl
popa
push
sub
es
jnp
cmp
inc
les
pop
inc
outsb
sbb
pushf
addb
out
shl
or
push
mov
or
test
test
adc
mov
dec
bound
mov
mov
push
inc
stos
fsts
icebp
sub
aam
shl
int3
rclb
fstp
cmp
adc
ret
adc
add
roll
sarb
add
fildll
lret
aam
mov
rcll
mov
mov
xchg
in
sbb
shll
xor
out
jp
insb
mov
lret
push
xor
sub
push
dec
das
pop
mov
loopne
lcall
inc
mov
outsl
push
adc
and
mov
sub
adc
push
jne
aaa
add
xor
lock
mulb
sub
or
pop
ret
test
outsl
aas
test
arpl
jle
add
movsl
xorb
xor
fwait
loope
icebp
xor
sub
nop
push
addr16
jp
jbe
mov
push
dec
js
rorb
xor
push
add
sbb
fistl
gs
aaa
jo
ja
cmpsb
add
cmpsb
idivb
mov
push
cs
arpl
shll
mov
cmp
scas
mov
mov
add
sbb
xchg
add
jbe
cmpsb
das
sarb
add
adc
ret
nop
lahf
bound
jo
fldl
into
adc
sub
jb
push
rolb
stos
mov
push
mov
add
and
xor
xor
sub
and
sub
pop
mov
inc
aas
dec
xorl
mov
cltd
push
addl
inc
inc
mov
pop
mov
inc
loope
cmp
pop
add
and
inc
xchg
sti
mov
ret
and
mov
inc
xchg
and
jg
dec
inc
xchg
xchg
outsl
jl
adc
xchg
mull
mov
xor
jle
xchg
mov
gs
pushl
push
repz
xchg
je
add
cmp
adc
push
xchg
fwait
shlb
aas
sti
push
sub
rorl
xor
mov
bound
mov
mov
dec
outsl
jnp
push
jns
movsb
stos
adc
dec
jnp
mov
pop
out
jns
adc
movsl
adc
push
vrsqrtps
and
add
sbb
clc
pop
ffree
or
cmp
cmp
or
out
jecxz
jmp
cmpsl
pushf
loop
les
fbld
dec
mov
es
sub
sbbl
push
add
adc
scas
outsl
xchg
sbb
loope
mov
loopne
and
fisttpl
out
cli
xor
outsb
lret
xor
lcall
mov
sbb
push
test
mov
rcll
hlt
call
or
and
iret
aas
jmp
add
loop
popa
add
cmpsb
mov
test
add
push
add
clc
dec
inc
out
xchg
outsb
dec
jmp
or
xchg
jmp
aam
mov
pop
adc
adcb
movb
adc
fbld
pushf
cmp
jnp
add
xchg
xor
xor
ret
mov
pop
rolb
push
pop
push
out
mov
aad
stos
in
adc
mov
mov
add
out
rcll
push
add
sbb
push
add
iret
into
xchg
push
jmp
mov
and
xor
mov
inc
roll
clc
lock
jmp
lock
push
jae
repz
cli
cmp
sbb
push
pusha
js
add
sub
in
nop
lret
adc
pop
mov
xchg
mov
icebp
mov
lds
aas
insb
mov
sar
incl
testb
pop
hlt
outsl
add
push
and
xchg
nop
add
mov
insb
adc
add
leave
popl
out
mov
cmp
outsl
data16
ret
incl
and
mov
aas
lahf
rcl
or
pusha
or
imul
mov
cmc
jg
push
ss
andb
pop
xor
movsb
bound
adc
add
push
xor
outsl
fs
ds
outsl
pop
test
in
add
imul
outsl
bound
js
popa
lcall
adc
ret
add
sub
in
rolb
cmpsl
pop
xchg
adc
mov
outsl
add
test
add
pop
pop
imulb
and
mov
js
sti
pushl
mov
add
push
xchg
lock
xor
add
cmp
ja
cli
inc
imul
cmp
xor
shrl
ss
jae
into
add
scas
add
push
adc
stos
in
pop
push
pop
or
add
push
lods
pushf
pusha
addl
mov
adcb
rclb
int3
push
inc
inc
je
int3
push
dec
mov
or
adc
jmp
insb
loopne
das
push
mov
bound
pop
shlb
data16
adc
rcl
push
fadd
xor
or
sub
outsl
mov
insb
fs
sahf
aad
cld
aas
and
sar
aas
and
sbb
fsubrs
sarb
push
scas
aas
dec
push
stc
aas
push
jmp
dec
shlb
add
dec
and
add
dec
subl
scas
jb
clc
div
test
push
or
popa
or
outsl
lea
sbb
or
or
jg
pop
outsl
test
inc
xchg
add
inc
outsl
xchg
aaa
inc
outsl
inc
and
pop
inc
cld
jns
std
outsl
xor
ds
testb
sub
pop
xor
cmpsb
stc
fisttps
mov
outsl
xlat
xorb
jne
jmp
in
outsl
jbe
jo
jae
movsl
jno
cli
push
and
cwtl
aas
outsl
mov
jle
cmpb
ret
jns
push
sarl
outsl
ja
push
inc
dec
lcall
arpl
cmp
mov
fbld
outsl
insl
cmp
out
outsl
pop
add
add
add
mov
outsl
or
das
fsubs
outsl
or
outsl
adc
mov
mov
cmp
adc
outsl
std
pop
or
mov
mov
in
add
outsl
cmpsb
add
pop
sarl
outsl
push
stos
movq
or
jns
int
ja
outsl
rolb
aaa
outsl
xlat
mov
int
loope
outsl
sub
aas
shl
iret
fwait
inc
cmp
outsl
lret
movsl
or
outsl
call
out
daa
and
pop
mov
ss
test
outsl
dec
xor
outsl
pop
cmpsb
xor
outsl
out
sahf
mov
or
adc
out
cmpsb
push
outsl
cmp
shrl
inc
aas
jl
outsl
inc
int
fstp
inc
push
fstpt
xchg
fcos
push
sub
dec
lcall
lds
jo
inc
add
outsl
inc
stos
dec
adc
outsl
xchg
subb
fisubs
adc
pushl
push
sub
ss
bound
outsl
adc
add
pop
xorb
push
outsb
ljmp
outsb
in
out
xor
outsb
inc
push
rcr
push
icebp
outsb
lar
adc
aaa
mov
inc
mov
ss
outsb
adc
outsb
sar
aad
out
or
jmp
mov
in
sbbl
jmp
clc
mov
mov
mov
outsb
cmp
sub
pop
rclb
outsl
fwait
scas
push
xchg
mov
add
add
popf
push
mov
or
outsl
push
ret
cmp
mov
mov
push
cld
inc
outsl
dec
orl
repz
and
outsl
ljmp
sti
adc
mov
inc
arpl
ret
inc
jg
outsl
and
mov
or
lods
jge
inc
add
outsl
in
loopne
mov
mov
lcall
jg
adc
outsb
push
movsl
or
xor
mov
out
incl
ret
insl
or
mov
mov
aam
stos
test
ficoml
sub
and
movsb
lahf
pop
pop
pop
inc
pusha
xchg
mov
push
and
loopne
and
outsb
pop
inc
test
pop
enter
add
cmp
popa
fidivs
pop
or
sbb
sbb
jbe
test
clc
mov
subb
mov
cltd
fstl
scas
rclb
cmp
scas
outsb
jecxz
or
add
push
xor
call
adc
fimull
inc
ljmp
fwait
inc
add
add
add
cld
and
repz
add
cld
pop
inc
xchg
inc
mov
lods
cli
ja
mov
cmpsb
adc
pop
movb
add
aas
push
inc
lods
shll
es
rorl
out
mov
sbb
test
out
add
push
ds
test
xchg
andb
sub
inc
shrb
test
adc
fcomps
addl
mov
pop
sub
addr16
dec
adc
call
add
ror
or
xchg
js
mov
stos
xchg
bound
add
sbb
cmpsl
pusha
add
shll
adc
push
inc
or
fadd
inc
add
enter
cmp
ret
pop
cwtl
pop
mov
lcall
movd
sub
aas
stc
bound
cmp
pop
popf
xor
jle
imul
fildll
xor
imul
xor
sub
xorb
pop
push
dec
std
fildll
incb
scas
or
aas
push
pop
ret
out
or
mov
xchg
pop
shrb
adc
adc
add
inc
mov
in
mov
adc
mov
or
test
mov
cmp
sbbb
add
cs
and
clc
imul
insb
xchg
pushl
test
ljmp
sub
inc
sbb
inc
and
fisubs
pusha
sub
daa
bound
sub
roll
mov
jp
or
dec
xor
into
pushf
fcoms
dec
rcll
rol
jb
mov
sbb
pop
or
and
mov
popf
inc
add
nop
jne
push
mov
mov
in
xchg
push
mov
sub
decb
lahf
pop
outsl
pop
cmp
dec
icebp
add
in
or
jb
adc
add
add
xchg
cwtl
cmp
xchg
xchg
ret
mov
xor
shlb
cs
mov
and
and
cmpb
mov
add
push
aas
pop
cvtpi2ps
out
outsb
loopne
mov
pop
enter
sub
push
aad
mov
and
pop
loopne
or
cmp
subb
pusha
notb
orl
adcl
adc
cs
xor
loop
add
fistpll
sbb
xorb
mov
popf
xchg
mov
push
xor
push
cmp
stos
cmp
add
mov
and
adc
add
push
mov
add
jbe
add
bound
push
daa
or
and
mov
inc
add
in
ja
add
rcrl
movsl
mov
movsb
lea
sub
or
call
add
adc
repz
clc
aaa
cmp
add
push
or
sbbb
daa
or
ljmp
loopne
cmp
adc
mov
pusha
add
xchg
mov
inc
aad
decl
test
inc
or
jmp
inc
popa
inc
or
inc
fildll
lods
nop
add
sbb
ss
fmul
aad
push
adc
push
das
push
sbb
jne
ret
aad
lcall
xchg
inc
mov
frstor
cmp
add
adc
add
adc
sbb
repnz
pop
mov
cmp
adc
xchg
loopne
adc
mov
dec
fisttpll
pop
xor
mov
push
pop
or
add
shlb
sub
jmp
adc
je
mov
js
add
cmpsl
jae
addl
push
pop
mov
popf
push
add
mov
sub
aaa
dec
shrb
push
add
fstpl
dec
jne
xchg
add
push
push
pusha
cmovl
movsb
mov
sti
movlps
cmp
push
dec
outsb
pop
incl
inc
push
add
cmp
mov
xor
ljmp
cmp
icebp
or
inc
jmp
push
add
xchg
mov
push
inc
push
cmp
mov
fildl
pop
popa
stos
fsubl
adc
nop
adc
xor
filds
xor
mov
push
and
add
pop
jp
lods
sub
stos
fcmovbe
mov
adc
fbld
dec
push
notb
icebp
enter
inc
in
mov
pop
mov
ret
fmull
or
or
pop
sub
inc
sub
or
test
adc
sbb
add
mov
fcmovbe
jno
push
dec
ljmp
push
pop
push
xor
mov
xorl
push
and
pop
cmpsl
xorb
dec
cmp
or
aad
rcll
add
fildll
shlb
xchg
mov
xorl
lea
cmpb
pop
inc
add
jns
mov
sbb
inc
push
xor
cld
decl
outsb
dec
mov
mov
and
sub
add
inc
ret
inc
aaa
mov
cmp
andb
out
xchg
add
daa
mov
add
add
or
lock
sarb
ljmp
mov
mov
adc
mov
subl
cld
add
dec
and
mov
in
jg
nop
add
repz
mov
xor
lods
inc
mov
call
pusha
inc
insl
mov
jno
pop
push
movsl
and
and
mov
ljmp
add
mov
mov
or
mov
inc
or
fs
addb
mov
cmc
push
cmp
or
inc
mov
push
shrb
jmp
sub
icebp
adc
adc
incl
dec
roll
jo
movsl
inc
adc
in
adcb
dec
add
aas
test
loopne
push
mulb
or
cli
rolb
sub
addl
test
or
or
push
xchg
dec
mov
mov
cmpsl
arpl
rolb
andl
or
mov
addb
ljmp
cmp
pop
xchg
dec
mov
mov
and
and
adc
lcall
adc
pop
xor
loopne
mov
add
and
xchg
jae
cmp
sub
adc
sub
hlt
mov
adc
je
adc
sub
ss
movb
jmp
das
cmpb
jl
fisubrl
dec
add
roll
std
ds
mov
outsl
insb
xor
aas
and
and
mov
call
jp
aam
das
dec
jbe
fbstp
adc
inc
ret
nop
mov
std
push
cld
fistpll
inc
icebp
or
out
mov
add
add
and
subb
jg
fwait
and
add
adc
aas
inc
aad
pop
pusha
sub
mov
cmp
or
mov
outsb
jg
or
jmp
push
orb
mov
rclb
xor
nop
imul
jnp
mov
add
add
mov
into
pushf
xor
mov
lock
das
je
ss
movb
andb
push
and
mov
xchg
push
aam
xor
push
jle
dec
lock
das
sub
int3
sbb
stos
xchg
fidivs
pop
inc
dec
std
dec
pusha
rorl
andb
sbbb
filds
pop
adc
adc
xchg
xor
xchg
adc
inc
popa
adcl
mov
xchg
push
xchg
dec
push
xchg
dec
js
inc
popl
dec
jae
andb
roll
mov
sub
and
mov
and
rcr
and
ret
data16
adc
sbb
pop
cmp
inc
push
cmp
and
sub
loopne
xchg
xor
add
les
outsl
bound
cmpsb
aas
outsl
cmp
nop
xchg
jp
subb
ret
loopne
push
rolb
sub
cmp
push
add
mov
add
rorb
pop
arpl
push
mov
and
std
pop
dec
lcall
add
hlt
ficoms
ja
add
jg
ret
add
adc
add
mov
dec
jmp
adcl
pop
add
in
mov
mov
xchg
lock
add
jecxz
pop
insb
mov
push
sub
or
cwtl
mov
mov
add
xchg
adcb
cld
lahf
ljmp
mov
out
lock
inc
pop
sbb
mov
mov
xchg
imul
test
cmp
das
test
enter
insb
filds
pop
mov
add
enter
add
mov
add
dec
shll
push
mov
pop
out
inc
testb
aam
fsts
movsl
daa
dec
test
call
or
mov
insb
mov
shrb
mulb
add
and
mov
test
shrb
add
sub
push
xchg
rcll
xor
jae
frstor
inc
and
and
ret
dec
dec
test
enter
add
aad
add
test
int3
xor
scas
fldt
and
ret
icebp
jg
inc
mov
test
inc
and
xchg
pop
ljmp
gs
fs
inc
ror
jae
test
or
rorl
popf
nop
adc
ja
mov
add
add
sbb
loope
in
dec
adc
insb
fadd
pop
pop
ljmp
cmp
cld
inc
adc
push
call
add
std
scas
add
adcl
fldl
mov
or
jecxz
rolb
xchg
in
inc
push
push
dec
lea
movsl
ret
or
andb
jg
cmp
adc
shlb
xor
es
add
add
push
lcall
add
pop
mov
mov
sbb
dec
fcomp
xchg
inc
rcrb
or
adc
subb
adc
mov
pop
sbb
mov
lods
mov
hlt
sub
aad
testb
cmp
adcl
push
cwtl
rolb
sub
jle
loope
inc
push
sub
aas
xchg
adc
sbb
das
pop
push
adc
rcrb
addb
into
sub
ret
or
sbb
and
add
push
ja
xor
sub
add
pusha
or
mov
mov
cmpsl
out
add
adc
inc
xchg
cmpsl
adc
mov
clc
inc
adc
stos
pop
lcall
pop
mov
gs
mov
dec
je
cli
xchg
add
add
push
stos
pushf
addl
mov
arpl
or
mov
mov
push
and
movsl
jno
stos
loopne
push
add
and
add
adc
add
dec
popa
push
and
adc
pop
popa
out
sbb
mov
inc
pop
scas
add
or
add
add
push
cs
movsb
scas
mov
insb
and
ret
sub
jp
inc
add
xor
add
cmp
pusha
inc
ret
jp
outsb
xchg
adc
add
inc
imul
movsb
or
sbb
movsb
or
and
and
mov
jle
lock
xchg
test
mov
aas
ljmp
add
jmp
pop
shll
add
arpl
imul
xchg
aas
std
inc
aad
pop
or
xchg
inc
fistl
push
xchg
lea
mov
cmp
repnz
clc
popf
push
roll
pusha
pop
in
xchg
xor
bound
ds
inc
mov
push
sbb
outsb
pop
add
pop
stos
or
sbb
sbb
cmpsb
xchg
clc
push
enter
and
mov
or
push
mov
lret
adc
mov
push
lods
test
mov
mov
pop
jp
movsl
add
inc
loop
aas
cli
or
rcrb
dec
arpl
in
push
or
mov
es
and
dec
pop
xchg
mov
pushf
loopne
jae
add
or
push
rcr
jb
or
pusha
add
cmp
pusha
or
test
add
js
clc
bound
mov
pop
sub
adc
in
pop
dec
pushfw
push
adc
addr16
adc
add
arpl
push
decl
push
sub
loopne
push
xchg
and
add
jg
xor
shll
test
push
mov
loopne
adc
stos
inc
std
mov
sub
and
in
test
pop
call
add
xchg
orb
adc
cmpb
jb
or
push
mov
and
inc
mov
aas
mov
cmp
or
and
push
ret
je
clc
out
cmp
orl
fs
pop
fiadds
or
cmp
sub
or
sahf
cmp
pusha
pop
cltd
xor
xorb
lock
loopne
mov
dec
mov
mov
push
dec
or
mov
cmp
adc
inc
or
sub
dec
sbb
loope
icebp
dec
cld
pop
movl
leave
fnop
mov
xchg
lahf
fsub
adcb
mov
rcrl
sbb
addb
sbb
inc
jle
lock
cmpsl
cmp
pop
push
add
es
fdivl
les
roll
mov
into
xchg
push
adc
xchg
insb
mov
xchg
cmc
sub
aas
add
movsb
lret
mov
dec
and
bound
aas
insb
add
push
adc
ds
loopne
rolb
or
addr16
cmp
fiadds
or
lock
dec
inc
call
loop
cmp
sbb
add
or
jb
lcall
mov
lret
movsl
cmp
adc
sbbl
hlt
push
add
test
pop
mov
icebp
or
jo
fdiv
ret
daa
mov
test
push
test
inc
hlt
sbb
out
push
or
int
push
out
adc
inc
or
sub
inc
adc
rolb
das
data16
pop
sti
and
jae
fwait
and
push
adc
sbb
imul
inc
fbld
and
adc
pop
clc
inc
xchg
aam
aas
pop
insb
sarl
adc
xor
mov
cld
shrl
xor
or
fnstenv
adc
adc
aas
jge
sbb
lock
xorb
mov
rorb
push
mov
or
and
mov
push
or
je
xor
inc
push
add
cmp
push
test
aas
out
push
shrl
jbe
inc
loop
sbbl
fcmovnu
mov
lahf
adc
xor
rorb
loopne
mov
lock
push
adc
push
lock
dec
popa
inc
pusha
mov
dec
mov
add
je
push
cs
inc
inc
add
call
sbb
jle
xorb
or
rorl
cli
lods
fistpll
mov
sbb
push
xchg
or
adc
das
loopne
sub
or
adc
adc
loope
add
sub
mov
es
xor
push
push
pop
add
mov
outsl
scas
mov
add
jbe
adc
cltd
mov
fbld
add
push
pusha
add
out
push
pop
roll
rcll
sti
adc
test
sbbb
inc
jmp
xor
add
in
cld
les
add
xorb
sub
ret
dec
mov
xchg
jbe
mov
lock
dec
adcb
loop
and
notl
mulb
bound
dec
dec
jo
mov
call
sbb
pop
push
movsl
aam
mov
add
sbb
sarb
loopne
dec
fdivrl
adc
fcomp
inc
mov
inc
mov
pushf
pusha
std
push
in
cltd
roll
pop
xor
cmc
mov
lock
cld
nop
mov
loopne
adc
pop
xor
rcrb
in
adc
add
cli
std
pop
addl
hlt
pop
xor
fwait
mov
int
and
ss
mulb
cwtl
filds
mov
pop
fs
sbb
and
push
jae
clc
add
and
push
push
push
ret
push
aaa
pusha
adc
mov
dec
push
dec
add
pop
or
and
push
das
bound
or
adc
dec
pop
dec
push
adc
pop
mov
jp
cs
pop
push
jo
shlb
mov
sbb
mov
jp
add
sbb
std
pop
and
dec
xchg
sub
nop
push
xor
sbb
rolb
fidivrl
insb
mov
in
and
adc
push
or
sub
add
in
or
mov
sbb
cli
xlat
out
pusha
adc
into
das
adc
jg
iret
cltd
pop
xchg
xchg
addb
mov
or
add
add
mov
add
add
test
mov
adc
push
sahf
pop
std
call
in
and
mov
xor
jo
pop
mov
outsb
bound
enter
jmp
xor
xor
xchg
inc
repnz
es
lds
enter
push
sbb
sbb
iret
in
ret
mov
outsl
lock
or
shrb
sub
or
inc
and
or
rcrb
adc
mov
insb
lahf
repz
test
add
mov
aam
adc
xorb
xor
and
pusha
outsb
pop
push
adc
mov
mov
pop
add
add
add
mov
add
movsl
and
push
mov
sub
daa
xor
mov
pop
adc
cli
stos
add
mov
mov
and
push
push
adc
mov
xor
jo
movsb
bnd
and
adc
adc
ss
ret
repz
cs
cmp
push
call
mov
adc
add
mov
lcall
sbb
inc
lret
int3
aam
in
mov
xorl
add
mov
mov
sub
aas
add
sbb
stos
inc
sub
addl
dec
or
mov
filds
popf
inc
jbe
sbb
adc
mov
fdivl
xchg
xchg
add
and
out
add
inc
ss
mov
pop
jo
cmpsl
jl
mov
stos
movsb
repnz
mov
ljmp
mov
cmc
add
and
das
mov
xchg
sub
or
pop
subb
subb
call
cld
aas
add
push
test
test
clc
push
push
pop
imul
xor
out
inc
loop
sbb
stos
mov
add
inc
cmpsl
add
add
mov
ds
adc
ficomps
inc
fcomps
sub
add
and
imul
dec
fdivrs
xlat
xchg
lds
sbb
sub
lea
enter
cli
xchg
inc
dec
mov
or
xchg
or
mov
inc
add
out
filds
mov
sub
cmpsl
fildl
mov
sub
pop
mov
and
out
mov
push
push
push
cwtl
inc
lods
outsb
sbb
jle
aas
pusha
sub
outsb
bound
lock
adc
or
add
push
adc
adc
or
xchg
pop
adc
les
in
add
mov
aam
aas
sub
jbe
in
lods
mov
aam
add
ret
aas
jmp
mov
ljmp
je
insl
out
push
inc
mov
sub
push
incl
inc
out
fmull
push
mov
jo
mov
aam
add
cmpsb
fidivl
mov
push
mov
mov
aas
addb
sysenter
adc
stos
xchg
lcall
dec
xchg
decl
add
xorb
repz
mov
cmp
sub
sub
mov
sbb
shl
inc
in
sbb
movsb
je
pop
rorl
inc
cmpb
add
outsl
push
adcb
jo
sub
fucomi
stos
jle
or
addl
insb
fiaddl
xchg
and
mov
lds
in
pushf
xchg
or
stos
add
xchg
or
mov
fst
dec
add
inc
ret
aaa
dec
fisttpl
movl
das
repnz
xlat
or
jg
push
xchg
pop
push
push
add
test
sarb
add
mov
fmuls
imull
frstor
and
inc
std
xchg
bound
inc
sub
dec
sar
das
and
out
mov
mov
push
ljmp
clc
add
pushf
xchg
lcall
and
mov
xchg
roll
adc
js
dec
repnz
push
inc
out
jo
xchg
in
mov
inc
add
or
lods
pop
repnz
shrb
cwtl
out
test
in
cmp
xchg
inc
adc
adc
xor
dec
repnz
test
ret
je
or
dec
xchg
inc
das
mov
add
pop
std
mov
mov
inc
add
push
ljmp
jg
add
dec
dec
sbb
mov
lret
shlb
cli
aas
mov
dec
ds
mov
ja
stos
je
ret
leave
add
or
je
es
jae
xor
roll
aaa
addb
adc
push
mov
out
mov
add
orb
xor
adc
stos
roll
push
jo
ficoms
cli
and
push
jl
ret
inc
adc
add
or
insb
add
mov
push
pop
rcrb
mov
rol
add
fs
inc
cld
hlt
or
enter
add
cld
inc
adc
mov
cli
or
test
int3
xchg
jle
cmp
rorb
dec
adc
and
and
clc
stos
and
popa
add
pop
push
cmp
push
or
pop
sarb
add
and
fwait
mov
xor
fldlg2
lcall
fsubr
pusha
andl
pushf
shlb
and
sub
outsb
pusha
mov
in
push
and
adc
mov
rorb
test
cmp
add
mov
nop
ret
fbstp
test
xchg
xor
icebp
and
pop
adc
movsb
add
ss
cmp
lods
gs
lcall
push
into
jne
jmp
xor
mov
mov
shll
xchg
outsb
fsub
or
and
adc
jecxz
xchg
mov
and
mov
xchg
push
push
pop
push
loopne
adc
add
int3
jl
mov
lahf
and
fisubs
lcall
out
xchg
loop
in
add
bndldx
jl
loopne
jl
fists
cmpsb
loopne
nop
cmp
orl
addl
ljmp
add
adc
add
and
or
add
test
push
enter
ror
mov
loope
cmp
jae
cs
sbb
sub
and
sahf
lock
addr16
jmp
lods
rorb
adc
and
pusha
aaa
fcompl
and
loopne
and
or
sub
cmp
int
aam
cmp
aam
add
add
loopne
pusha
adc
add
clc
or
xchg
mov
dec
mov
loop
aas
cmpb
or
mov
xchg
enter
rcrb
leave
push
cmp
mov
jge
xchg
daa
or
add
and
rorb
mov
lock
xchg
test
aam
add
and
pop
ljmp
adc
mov
jbe
or
loope
out
xchg
mov
sub
push
or
pop
mov
popa
pop
or
push
fisttps
loopne
ret
mov
push
add
mov
add
jp
call
and
pop
scas
iret
dec
inc
fildl
pop
mov
lock
mov
mov
stos
inc
loope
mov
popa
xor
pop
cmovo
loope
loopne
aaa
in
filds
adc
push
pusha
sub
push
sub
add
xchg
pushf
pop
mov
push
adc
mov
push
enter
add
mov
adc
xchg
add
pusha
pop
sbbb
push
lcall
fcmovb
cmp
adc
popa
enter
xor
mov
inc
mov
mov
pop
fildl
stos
mov
add
mov
dec
adc
dec
adc
test
jmp
mov
sub
int
mov
insl
or
lret
adc
add
inc
jbe
mov
push
icebp
add
and
fidivs
push
das
cs
lock
pop
aaa
xor
or
push
sub
lods
pop
xor
stos
enter
imul
daa
push
mov
push
cs
dec
add
jbe
das
dec
inc
jnp
mov
push
stos
aad
scas
inc
mov
sub
sub
fistps
push
std
or
add
lcall
add
push
sbb
add
sti
lcall
test
xor
insl
xor
leave
mov
adc
mov
or
jae
dec
cmp
lock
add
jns
jge
dec
push
push
lds
pop
push
jno
jae
add
add
push
jo
jo
arpl
test
sti
fiaddl
sbb
jae
ja
test
xchg
sbb
lods
sbb
mov
mov
mov
or
cmpsb
imul
lahf
pusha
jo
nop
xchg
subb
addb
addb
adc
mov
adc
or
gs
dec
sub
rdmsr
and
out
lods
nop
lahf
sbb
xchg
push
icebp
add
mov
pop
sarb
addl
pop
jg
sti
mov
je
cmc
add
push
add
sub
push
push
add
mov
push
inc
sub
scas
imul
mov
clc
cmpsl
add
pushf
cld
mov
pop
xor
loope
jl
xchg
js
push
into
add
or
xlat
sbb
out
lock
add
add
mov
pop
dec
add
add
dec
add
jle
push
imul
and
dec
loope
add
mov
cli
adc
mov
aaa
sbb
icebp
stos
mov
adc
call
inc
pushf
addl
jo
mov
dec
xchg
jno
inc
loope
mov
inc
das
or
loope
jne
dec
fstpt
jae
ret
push
sub
es
out
divps
push
or
loop
adc
xor
cmpsb
loope
push
jmp
imul
xor
std
out
add
and
les
cmp
jmp
push
xor
add
mov
jl
jne
into
xchg
arpl
sti
sub
sbb
inc
shl
in
add
fsubrl
cmpl
sbb
sbb
pop
sbb
jecxz
pop
jne
stos
arpl
movsl
imul
lock
mov
and
std
cmp
pop
inc
lock
inc
xor
rcl
jecxz
mov
mov
or
ljmp
repz
stc
add
lds
popa
push
lock
mov
roll
or
mov
push
stc
push
pushf
lock
jl
add
and
mov
in
cwtl
sub
ss
je
lock
addr16
and
jo
bound
clc
icebp
cmp
xor
mov
adc
test
jl
sub
in
push
add
jecxz
sub
jle
loop
imul
push
jnp
jecxz
stc
std
mov
jo
arpl
jmp
mov
dec
jo
stos
inc
add
push
stos
mov
fwait
push
mov
add
fisubs
data16
imul
add
push
test
fwait
mov
add
add
out
and
dec
fsubrl
dec
xor
stos
inc
push
inc
add
add
sbb
push
add
and
mov
mov
pop
mov
mov
daa
fistpll
cmp
sub
jae
add
pop
scas
stos
and
js
imul
add
bound
mov
sub
stos
add
push
add
sbb
cmpsb
stc
leave
add
stos
int
lds
insl
xorb
or
inc
add
pop
stos
pop
push
jnp
imul
push
mov
repnz
adc
add
gs
jge
jno
dec
dec
imul
imul
imul
cmpsl
imul
xchg
jmp
cmpsl
imul
cmpsl
imul
aas
dec
repz
aad
cmpb
add
xor
lcall
adc
imul
mov
sahf
push
jge
jno
dec
dec
xor
shll
inc
pop
pop
push
shll
mov
int
mov
xor
shll
test
int
xchg
jmp
cmpsb
jns
jbe
stc
std
icebp
cmc
jns
cmpsb
jns
int
jg
cmpsb
fst
aad
shlb
sahf
cmpsb
stc
shll
xor
imul
adc
loop
mov
sub
insb
mov
add
mov
sbb
loopne
mov
dec
push
xor
mov
pop
mov
mov
mov
mov
sbb
pop
pusha
add
push
push
in
pusha
add
in
mov
mov
sarl
adc
xchg
loopne
jmp
xor
rcrl
std
icebp
cmc
leave
cmpsb
imul
add
fstpl
roll
aad
sub
add
and
cmp
dec
sbb
inc
sub
add
pop
movsb
rcr
shrl
scas
cmp
cmpsl
call
xor
jge
jne
dec
inc
pop
cmpsl
loopne
inc
movsb
add
sbb
pusha
adcb
mov
repz
in
loopne
rcl
sub
cmp
in
dec
loope
icebp
sbb
cmpb
cmpsl
rcrl
rcrl
and
pusha
andl
mov
add
mov
add
sbb
or
mov
mov
mov
shl
push
mov
imul
sbbl
lahf
cmpsb
popf
xchg
xchg
pusha
sahf
add
stos
cmp
dec
aas
and
pop
ret
cs
inc
fisttpl
sub
push
shlb
adc
cmp
cltd
xor
insl
test
push
sbb
mov
add
add
sbb
sbb
andb
or
jp
adc
xchg
mov
clc
pop
xchg
inc
shrl
adc
or
lcall
push
scas
scas
add
xor
mov
push
push
clc
mov
sbb
or
sbb
shrl
lea
sbb
in
mov
add
mov
xchg
repnz
fsubl
pop
xchg
fucomp
adc
ds
out
and
cmc
pop
pop
push
fsts
aaa
rcl
daa
pop
mov
mov
les
push
aaa
out
xchg
mov
rcll
testl
fisttpll
push
mov
and
shlb
loopne
or
add
or
js
call
adc
mov
inc
nop
pop
int
pop
sub
hlt
and
or
ljmp
jb
xchg
stos
pop
jo
push
fidivrs
sbb
pop
inc
aam
inc
add
push
add
stos
rclb
add
popa
add
aam
fcmovne
inc
add
add
mov
movsb
add
push
xchg
add
adc
popa
ret
jg
jg
adc
jb
sbb
mov
sub
mov
fdivrs
and
cmp
sarl
add
add
or
std
xchg
add
mov
cmp
aam
add
add
popa
fwait
incl
dec
mov
xchg
hlt
lock
rolb
sub
int
enter
or
add
je
xor
adc
add
hlt
mov
mov
adc
test
add
mov
add
push
and
or
add
es
lret
insl
sti
fildl
or
jae
add
test
dec
mov
jae
mov
adcl
aad
aas
mov
ror
fiadds
push
stc
push
and
call
push
mov
roll
or
cld
aas
stc
arpl
loop
jmp
add
mov
or
les
dec
ret
adc
adc
test
lock
mov
rclb
and
aas
mov
and
imul
pop
fsub
sub
adc
fs
or
add
sub
adc
jno
sbb
add
rolb
add
mov
mov
lret
clc
dec
pop
add
add
sbb
mov
js
or
and
sbb
sub
aaa
cs
inc
jmp
aaa
test
push
add
cli
inc
pop
sub
aam
add
inc
int
cmp
xor
sub
mov
nop
push
push
jne
pusha
push
cmc
add
add
sub
push
icebp
lods
std
jg
add
aad
sub
repz
add
jo
adc
lea
lea
leave
push
lahf
add
rcl
pop
shlb
inc
and
call
rcl
add
aas
std
hlt
divb
leave
aam
and
or
rolb
mov
lds
aas
rcll
imul
sbb
push
or
mov
aas
xor
mov
cmp
lods
icebp
es
rolb
fisubrs
outsl
mov
xchg
ss
shll
ja
or
add
mov
shl
adc
pop
flds
outsb
mov
add
or
and
and
mov
aas
lcall
aas
sahf
fs
fistpll
mov
sub
and
and
pop
int
add
das
sub
xor
sub
sbb
mov
scas
decl
stc
mov
ss
inc
or
inc
stc
scas
mov
dec
jo
mov
sub
or
mov
dec
mov
push
stos
enter
mov
scas
popa
movsl
push
adc
pop
je
mov
cmp
inc
je
ret
push
test
pop
lods
shll
movsb
jb
adc
dec
or
push
sbb
mov
cs
outsl
mov
scas
icebp
sbb
push
popf
mov
or
ss
ja
push
mov
aas
or
shlb
adc
add
add
sbb
repz
add
mov
orb
outsb
add
data16
mov
fdivrs
or
dec
pop
inc
lods
aas
pop
add
push
outsl
add
push
push
add
mov
mov
xor
mov
inc
xchg
push
jbe
push
jmp
sub
push
in
loope
or
and
push
ljmp
enter
xchg
adc
push
mov
test
and
xchg
mov
mov
sub
add
adc
les
jl
les
xchg
sbb
es
inc
aas
insb
insb
in
aas
pusha
adc
dec
outsl
pushf
aad
xorb
or
aas
ja
test
lods
inc
int3
pop
adc
pop
or
cli
push
add
push
scas
dec
dec
sbb
add
sub
add
mov
outsb
into
jg
pop
adcb
add
sbb
adc
roll
ds
in
mov
jecxz
fistpl
pop
or
push
ss
and
sbb
push
cs
icebp
in
ja
jae
vpshuflw
jmp
adc
jmp
mov
xorb
mov
and
dec
inc
sbb
jg
inc
mov
jmp
mov
mov
jmp
mov
stc
pop
aad
icebp
jmp
mov
mov
rcll
sbb
clc
cmpsb
mov
nop
mov
xchg
sbbb
call
or
inc
aad
testb
inc
jp
scas
mov
sub
movsb
rolb
mov
stos
push
test
push
push
push
fistps
xorb
and
fsubs
call
or
sarb
add
cmp
rorl
add
stos
sbbl
les
fcoms
fidivl
into
sub
fldt
xchg
jp
add
push
fldenv
test
pop
xor
add
aam
nop
addl
or
test
shll
rcrb
inc
scas
push
into
fildll
or
lock
daa
shrb
and
test
pop
sti
inc
andl
mov
push
and
or
push
shll
movzbl
mov
mov
xchg
aas
push
popa
or
or
outsb
orb
or
aam
int3
ja
mov
addb
add
fildll
fcmovnu
inc
mov
fisttps
mov
ret
punpcklbw
cmc
aas
fsubs
adc
decb
fisubl
and
mov
frstor
or
inc
sbb
int3
bound
daa
fildl
pusha
subb
mov
inc
daa
pop
mov
stos
aas
or
and
xchg
hlt
mov
or
subl
and
ljmp
and
fisttps
inc
sahf
lds
in
sub
loope
fisttps
or
cmp
and
and
xchg
sub
cld
push
inc
push
movl
aas
push
sbb
addr16
add
and
aas
mov
pop
inc
add
nop
and
mov
add
insl
push
inc
dec
aam
sbb
push
or
loopne
pop
call
add
adc
push
in
dec
xor
pusha
add
adc
inc
ljmp
push
out
imul
adc
imulb
jns
test
arpl
add
aaa
aad
mov
testb
ret
leave
push
xor
stos
jnp
cmpsb
imul
std
push
jb
loopne
sbbl
rcl
xchg
or
pusha
adc
test
and
popf
push
fcomp
or
pop
cmp
sbb
cs
fists
cmp
adc
loopne
imulb
cmp
xchg
loopne
popa
add
jo
add
jo
and
mov
mov
stc
cmpsl
pop
sub
pop
or
lods
xchg
fidivl
lret
or
pop
inc
xor
xor
inc
mov
pop
pusha
pop
mov
test
call
aam
jns
jmp
punpcklwd
cmpsb
add
lea
lock
out
or
xor
out
pop
arpl
dec
pop
insl
sbb
test
xchg
add
push
cmp
xor
mov
jne
cmpsb
push
mov
xchg
rol
aaa
js
imul
test
rcll
add
mov
test
jne
mov
popf
push
loope
int
cmp
neg
shrl
mov
jne
imul
das
sbb
or
pop
xchg
mov
mov
xchg
iret
mov
cmp
adc
cs
sbb
fnstenv
inc
scas
stos
loope
and
std
sbb
jle
lea
and
sbb
and
or
and
sbb
cmpsb
push
push
sarb
push
mov
cmp
add
mov
sub
aaa
sbb
adc
mov
inc
mov
ret
xchg
loope
lods
lret
dec
cmpsl
imul
push
pop
xor
jns
setbe
gs
sti
je
fwait
add
inc
gs
jp
add
xor
jge
lds
lods
sbb
mov
xchg
into
icebp
leave
outsl
cmp
ret
lea
stos
pxor
adc
jb
divl
add
test
mov
cmp
les
setp
ret
das
dec
mov
push
popa
loope
mov
push
xor
adc
das
aas
inc
mov
or
cs
sti
jge
pop
mov
loopne
mov
cltd
jmp
mov
jl
aas
mov
cmp
sbb
sbb
or
sbb
ja
into
dec
jg
cmc
lret
lock
daa
xor
ret
xlat
or
shll
popa
loope
xor
sbb
ret
out
insl
inc
push
inc
push
and
xor
push
imul
popa
xor
fcmovbe
sbb
ret
xchg
cs
mov
and
shlb
sub
fimuls
sti
pusha
popa
push
mov
and
push
rolb
add
test
mov
pusha
xor
xor
dec
jnp
mov
xor
popa
mov
das
test
xor
mov
test
mov
test
mov
cwtl
mov
add
mov
ljmp
movsl
movsl
mov
sbb
rorb
into
roll
fldcw
cltd
sarb
mov
insl
jbe
or
xchg
scas
xchg
scas
cmpsl
mov
mov
mov
inc
inc
mov
pop
rolb
jo
fwait
mov
dec
lods
mov
lahf
aam
mov
add
sahf
sub
xchg
mov
mov
pop
mov
mov
mov
incb
addb
call
mov
jo
mov
fwait
add
push
sbb
lahf
inc
cmpsl
xchg
mov
mov
xchg
add
mov
add
adcb
mov
add
jb
add
mov
test
push
sbb
xor
orb
add
movb
push
add
or
push
mov
xchg
mov
lock
sub
mov
movsb
sbbb
int
add
or
mov
mov
add
mov
or
add
add
push
das
aas
dec
ret
movsl
mov
jg
movsb
add
xor
xchg
mov
push
jp
aad
mov
or
mov
mov
mov
rolb
pop
sbb
test
add
add
pop
cmp
jbe
add
test
shlb
je
sbb
push
je
loop
phsubsw
shll
mov
sbbl
lret
add
in
ret
loope
mov
aad
jb
pop
xchg
cltd
mov
movsb
dec
loopne
movb
movsl
xchg
fcoms
xchg
pusha
pop
andb
inc
mov
add
movsl
adc
je
scas
clc
jg
add
cltd
mov
add
cmpsb
xor
mov
cs
or
push
xchg
mov
repnz
out
xor
add
sub
xor
and
push
or
or
add
xor
mov
cwtl
cmpsl
mov
add
xor
clc
mov
ds
das
and
cli
clc
and
aam
sbb
push
ret
in
add
dec
pop
adc
mov
in
or
into
jbe
test
test
iret
inc
mov
mov
mov
xorb
orl
cs
ret
or
or
movsb
add
and
test
jg
mov
mov
sbb
orl
sbb
or
sub
aam
andl
shr
push
mov
aam
negb
xchg
mov
cwtl
mov
mov
or
decl
cmpb
test
add
sbbb
adcl
sub
mov
add
inc
jge
mov
addl
xchg
insl
testb
add
mov
xorb
mov
mov
and
sbb
lret
sbb
and
inc
or
lds
pop
loope
lock
push
sbbl
mov
leave
adc
fwait
or
inc
mov
adc
inc
pop
lret
loopne
cmpsb
clc
rcll
adc
cmp
pop
sbb
xchg
inc
adc
add
mov
out
xor
hlt
aas
das
and
xor
shrl
addb
je
movsb
jo
jp
cmp
sbb
mov
stos
add
setle
inc
inc
cmpsl
inc
cmp
adc
call
inc
mov
sub
mov
cmp
aam
push
ljmp
mov
movsb
xchg
movsb
test
xchg
ds
push
hlt
ljmp
xchg
jo
lcall
lcall
and
push
adc
mov
and
adc
add
lcall
mov
outsl
incl
sbb
xorl
push
xlat
add
sahf
mov
cs
adc
orb
cmp
xchg
add
cmp
add
xor
inc
sub
sbb
pop
push
sub
pushf
xor
ljmp
ja
push
pop
and
add
inc
cmp
mov
ja
xor
and
xor
mov
or
sbb
into
and
cmpl
mov
mov
add
subb
jp
popf
ret
ret
outsb
jno
sbb
dec
ret
dec
adc
and
in
adc
add
pop
dec
hlt
lcall
bound
clc
cmpsl
xorb
call
ret
and
and
sbb
mov
lock
cmp
xorb
mov
out
or
dec
add
icebp
jg
fsubs
adc
bound
jecxz
pop
sbb
addl
lcall
add
or
aaa
addl
add
jmp
xchg
jo
xchg
add
dec
rcrb
xchg
fcmovb
sub
mov
dec
shrb
cld
aaa
cli
stos
pop
loop
and
rolb
fs
movsl
push
mov
mov
loope
adc
push
orb
les
dec
insb
or
test
jg
std
aaa
push
lea
add
push
andb
dec
sbbb
lcall
sub
jecxz
stos
add
lock
xchg
and
pushf
loopne
push
cmpsl
aaa
or
and
jp
adc
test
dec
lock
enter
add
cmpsb
mov
outsl
test
hlt
adc
add
pushf
push
test
push
push
pusha
stc
hlt
adc
loope
xchg
decl
sarl
adcb
xor
aad
loop
ret
mov
jae
or
mov
xor
mov
add
clc
stos
or
mov
add
test
es
repnz
adc
faddl
jae
adc
add
add
fidivs
add
aad
lcall
adc
xchg
mov
push
and
mov
lods
test
mov
loopne
push
mov
mov
adc
mov
mov
jmp
pop
xchg
rolb
incl
or
aam
loope
call
pop
cld
and
adc
mov
movsb
ret
add
mov
bound
inc
dec
insb
add
add
or
bswap
shrl
jle
clc
rcll
aad
mov
hlt
mov
sarl
xchg
mov
add
mov
lock
mov
xor
mov
adc
push
push
push
sbb
inc
cmp
aas
jle
push
jno
mov
jbe
lock
repz
rclb
dec
add
mov
divb
xchg
sbb
sbb
aad
jnp
ja
push
decl
rolb
and
pop
xchg
mov
sbb
xchg
add
icebp
mov
faddl
loopne
push
in
fcomip
jg
andb
mov
notb
mov
or
jb
fsqrt
mov
mov
add
mov
jb
movsb
and
mov
xchg
mov
mov
inc
add
inc
roll
data16
pop
cld
push
or
push
pop
movsb
xor
mov
add
push
add
adc
scas
mov
popf
push
mov
lock
xchg
popa
xchg
jmp
sbb
cmovo
setno
dec
and
leave
mov
jg
add
add
loop
mov
or
xor
cmp
cltd
mov
inc
lahf
mov
mov
add
adc
enter
lcall
loope
inc
jmp
inc
rorl
mov
adc
cli
inc
mov
js
mov
pop
mov
mov
mov
sub
push
dec
dec
arpl
je
jbe
xchg
add
and
icebp
or
adc
pop
cmp
adc
mov
push
adcb
and
xchg
mov
add
add
or
bound
lcall
and
inc
aad
mov
push
call
xchg
pusha
xor
adc
std
repnz
or
xor
or
sbb
dec
or
jle
icebp
add
cli
in
jg
inc
adc
or
or
sahf
xchg
add
inc
inc
sub
push
mov
lock
fwait
mov
or
xor
mov
add
shll
shll
aad
movsb
mov
xchg
das
or
inc
push
mov
sbb
inc
cli
ja
clc
fcomip
setae
insl
push
or
mov
ret
mov
fsqrt
add
incl
cmpsl
adc
pop
add
add
add
push
jg
and
pop
int
or
pop
loope
push
mov
add
cltd
je
sti
aam
loop
stos
mov
pop
shll
addr16
sarb
mov
push
push
testb
ljmp
out
push
pop
ret
int3
rcrb
and
adc
xor
mov
and
mov
add
pushf
jae
adc
test
sbb
fsts
pop
mov
xchg
mov
fwait
pop
inc
lods
fcmovb
sub
fsubs
loopne
sub
popa
add
xchg
cld
cmp
adc
fs
mov
repz
jge
push
dec
fwait
mov
into
aas
add
adc
jecxz
or
test
fimuls
add
mov
scas
cwtl
mov
mov
sarb
jp
je
mov
mov
ret
incl
xor
sbb
add
test
ret
and
test
jnp
inc
add
ror
mov
loope
lcall
loope
or
repnz
mov
mov
mov
adc
mov
mov
add
rcl
jb
push
mov
or
jge
push
pushf
mov
shrb
add
sbb
stos
shlb
adc
jo
adc
sahf
and
gs
xor
mov
or
insb
in
or
xor
mov
mov
adc
push
popa
and
pop
test
lock
and
repz
xor
and
cli
and
push
lock
dec
mov
jne
xchg
cltd
stos
add
add
repnz
fnstcw
xchg
scas
jb
stos
sub
adc
inc
xorl
outsb
inc
jl
add
mov
jbe
icebp
dec
xchg
mov
addl
xor
outsb
xor
or
das
mov
cmp
push
cmp
sahf
mov
add
xchg
xchg
sub
bound
pop
bound
add
adc
or
icebp
add
jb
les
jle
pop
add
test
test
and
push
cmc
in
sub
cltd
add
pop
aam
movsb
scas
inc
movsl
cwtl
xchg
add
add
fildl
test
or
mov
cmpb
orb
mov
mov
testb
push
mov
lods
sarb
push
mov
add
sbbb
call
sub
mov
adcb
or
pop
out
mov
xor
dec
out
or
or
xchg
scas
les
mov
mov
outsb
add
inc
inc
mov
xchg
bound
push
mov
fwait
subb
sbb
jo
xor
and
int
roll
ret
adc
lods
js
mov
clc
push
fadds
movb
cwtl
sbb
hlt
mov
push
aam
mov
inc
push
mov
fidivl
add
xchg
fwait
fwait
add
repnz
test
add
stos
inc
or
sbbb
imul
add
scas
xchg
addl
xchg
hlt
or
sahf
mov
pop
mov
add
mov
mov
call
add
js
ja
call
cwtl
mov
sbb
inc
mov
lea
mov
fcoml
jge
icebp
pop
enter
lds
mov
addl
xchg
inc
int3
inc
mov
cs
sub
out
adc
mov
mov
adc
adc
testb
sbb
xor
stos
lret
stos
adc
ljmp
test
mov
mov
sub
into
adc
sbb
rorb
pop
push
add
sub
add
xor
loop
or
mov
int3
in
add
mov
shrb
orb
mov
aad
add
or
mov
mov
movsb
mov
movsb
pop
dec
or
and
cld
xchg
test
inc
add
xor
popa
fmuls
pop
enter
std
ljmp
adc
dec
lock
fstpl
rorl
je
addb
loope
add
int3
lds
jb
mov
into
in
push
xchg
jecxz
test
loopne
xchg
clc
and
jle
leave
mov
push
mov
inc
jo
cmp
outsl
notb
pop
es
inc
rolb
pop
or
and
loop
push
test
xor
rcl
jo
shlb
xchg
sahf
mov
add
loop
testb
movsb
push
mov
pop
mul
push
dec
add
jl
shlb
push
shll
or
sub
xor
ret
sub
rclb
sbb
sub
mov
subl
orb
jg
xchg
lock
mov
add
hlt
add
sbb
and
rolb
dec
andb
mov
pop
push
dec
cmpsb
add
inc
setbe
adc
push
pop
and
pop
cld
or
sahf
inc
cmovs
data16
mov
or
mov
bound
and
mov
ret
pop
push
test
adc
add
mulb
mov
dec
or
decl
add
es
add
mov
lahf
mov
mov
add
cmpsl
add
jb
or
cmp
and
pop
and
loopne
inc
mov
aaa
sub
jae
add
mov
fildl
jbe
sub
mov
xchg
addb
xchg
add
icebp
addb
popa
mov
sbb
movsb
mov
jb
mov
cmpsb
push
inc
xchg
mov
add
push
rcrl
in
outsl
xchg
test
adc
pusha
ja
shrl
mov
pop
add
mov
loopne
cmp
movsb
mov
jge
bound
mov
or
loope
mov
sub
rol
fidivrl
je
loopne
idivb
loope
mov
push
mov
add
add
mov
int
ret
adc
push
push
mov
add
pop
sbbb
jg
sub
js
je
or
mov
mov
bswap
roll
lock
data16
xchg
dec
xchg
mov
je
xchg
sub
mov
or
xchg
and
jo
lock
decl
xchg
jb
rcll
add
mov
repz
dec
mov
add
or
shll
add
or
push
cld
not
inc
into
add
cli
push
mov
loop
add
add
jmp
sub
push
jo
stos
iret
push
fistpll
lcall
sub
sti
fwait
lret
in
mov
inc
sub
in
in
insl
dec
fisttpl
xchg
or
and
mov
or
rorl
mov
into
xorl
in
outsl
cmp
sbb
adc
daa
dec
bound
adc
xchg
pop
mov
add
ljmp
repnz
pop
cwtl
into
cmp
xor
inc
xlat
inc
xchg
add
js
xchg
cs
push
mov
mov
push
outsb
push
sub
scas
mov
mov
aaa
add
push
push
nop
insl
inc
mov
out
pop
xchg
das
jp
jg
aaa
stos
xchg
imul
add
mov
cld
xchg
jbe
mov
xor
and
push
icebp
xchg
inc
add
jns
xor
adc
mov
mov
cmp
add
std
call
inc
fnstenv
ja
xor
add
mov
push
lahf
fs
lcall
jo
out
in
loop
cmp
test
adc
es
inc
lea
mov
jbe
sar
icebp
pop
xorl
mov
sub
pslld
mov
or
jge
call
stos
and
push
push
add
negl
and
mov
int3
rcll
add
add
sub
cmpsb
ljmp
pop
fistps
sbbb
pop
cmc
jg
call
into
xor
es
push
nop
int3
nop
jnp
js
ljmp
popa
cmp
mov
adc
ljmp
inc
push
pushl
call
mov
mov
clc
fwait
add
mov
push
call
mov
imul
call
inc
out
xchg
jp
data16
call
imul
add
pushl
addb
push
test
insb
add
pop
shrl
mov
sub
dec
call
lock
or
jnp
xor
stos
xchg
pop
or
rolb
pop
test
or
mov
ljmp
mov
pop
sarl
cmp
push
nop
inc
outsl
pop
dec
std
popf
sub
in
or
ss
jno
pop
sub
adcb
popa
dec
mov
fists
lret
add
sahf
inc
out
jno
add
orb
lcall
xor
test
dec
xchg
mov
sti
repnz
xor
loope
cwtl
test
add
mov
jae
or
adc
leave
dec
lea
loope
push
cltd
pushf
mov
sub
pop
js
inc
stos
mov
dec
sbb
int3
paddusw
sub
push
add
outsl
adc
push
imul
mov
negb
stos
sti
add
cs
out
stos
sti
add
pusha
fldt
int
imul
lock
sti
or
cld
add
mov
sub
fs
dec
dec
imul
sti
aaa
fildll
lahf
pop
sbb
lret
add
sti
cltd
int
and
fimull
lea
ss
cmpsb
mov
imul
pop
add
int
imul
in
dec
push
aad
popa
fistpl
lock
sub
jmp
add
xor
or
xchg
or
outsl
ljmp
push
xchg
sbb
in
xchg
or
xchg
or
inc
fxch
or
imul
icebp
outsl
decl
dec
sbb
and
adcb
jbe
adc
add
add
xchg
loope
cwtl
int3
dec
sti
int
add
push
add
add
imull
int
sub
addb
shrl
subl
add
sahf
pop
dec
pop
imul
fnstenv
sbb
add
fildll
xor
cmpl
addb
inc
pop
add
push
insb
shll
scas
mov
sub
insl
push
and
repz
loopne
add
lret
out
repz
sti
out
jecxz
jmp
xchg
repz
jg
out
fwait
out
orl
mov
pop
out
inc
call
out
jae
jnp
arpl
adc
sbb
add
aas
ljmp
jmp
repz
xchg
jmp
mov
jmp
stos
push
jmp
dec
jae
jnp
arpl
imul
int
adc
sbb
add
or
jmp
sub
call
mov
add
mov
xchg
call
call
stc
call
call
mov
dec
int
cld
jae
jnp
arpl
call
add
call
push
call
cmp
fdivrl
mov
dec
es
ret
out
out
out
out
jg
sbbb
xchg
out
out
out
mov
mov
out
out
push
out
out
out
jae
jnp
arpl
imul
jg
out
out
out
xor
cmp
and
sub
out
out
out
cld
int
mov
repz
out
out
xchg
out
out
out
mov
mov
int
out
push
out
out
out
jae
jnp
arpl
out
int
cld
adc
sbb
add
out
out
out
out
shl
frstpm(287
ret
in
cld
int
in
in
in
in
xchg
in
in
in
mov
mov
int
in
push
in
in
in
jae
jnp
arpl
in
int
cld
adc
sbb
add
in
in
in
in
shl
fnsetpm(287
ret
in
cld
int
in
in
in
in
xchg
in
in
in
fwait
ret
in
add
insb
or
out
add
in
in
stc
fwait
mov
sbb
add
in
in
in
in
shl
fninit
ret
jo
sub
mov
cmpsb
sti
adc
jecxz
popa
repz
jg
jecxz
jecxz
jecxz
jae
jnp
arpl
imul
insl
or
mov
pop
add
loop
int
cld
repz
loop
loop
xchg
loop
loop
loop
mov
mov
stos
dec
rorl
outsl
mov
adc
sbb
add
mov
xor
cmp
outsl
out
and
loop
loope
loope
loope
repz
loope
loope
pop
insl
or
add
test
loope
loope
xor
mov
mov
outsl
push
pusha
cmp
inc
push
cld
push
in
shlb
add
xor
xor
loopne
mov
push
push
adcl
pop
stos
dec
loope
xchg
in
push
in
pop
in
inc
in
dec
add
mov
adc
jmp
jmp
jmp
mov
jo
incl
mov
fs
lods
int
ss
sbb
loopne
popa
inc
call
and
enter
xor
xchg
out
out
adc
out
out
stos
dec
loope
sbb
test
and
ss
scas
in
dec
in
decl
sub
sarb
sub
fsub
popf
loop
subb
and
and
ljmp
and
dec
loop
ja
jno
jl
gs
outsb
loop
loop
and
push
fwait
ret
loop
loop
loop
loope
and
mov
mov
sbb
pop
and
or
loope
pop
clc
fwait
ds
and
sub
lock
push
js
or
add
add
pusha
out
mov
adc
out
in
jmp
xchg
out
add
out
mov
xor
jo
sub
call
cmpsb
cmp
mov
mov
adc
xor
stc
in
daa
in
iret
jmp
repz
jmp
jmp
dec
jmp
push
fwait
inc
imul
and
and
cmpsb
mov
sti
stos
ljmp
jp
adc
jns
sub
aad
mov
pop
fwait
inc
add
inc
outsl
jle
jb
ja
inc
call
call
xor
pusha
pop
add
in
in
in
in
push
pop
jle
add
dec
add
scas
dec
loope
dec
jae
jge
addb
sbb
or
jle
jp
frstor
pop
lcall
jbe
out
push
js
dec
add
lods
dec
loope
push
in
jae
xor
fidivrl
cmc
in
jmp
inc
in
pop
in
shr
inc
add
jmp
jmp
insl
or
pop
jo
sub
dec
imul
out
jmp
jmp
jmp
fs
jmp
aad
loopne
popa
subb
fwait
arpl
mov
out
out
in
test
scas
out
out
adc
out
in
in
mov
cld
or
add
in
imul
pop
lock
fdivr
and
jne
es
mov
in
lock
jg
in
mov
cmpsl
in
xor
inc
jmp
xor
sub
ljmp
cld
ljmp
inc
pusha
or
mov
out
out
in
in
ljmp
sbb
loope
mov
and
loopne
add
push
out
xor
sub
int
out
mov
incl
out
and
mov
aaa
pusha
sub
pop
divl
call
mov
add
popf
call
push
ja
dec
loopne
out
out
in
fists
jo
push
out
out
adc
gs
out
add
sub
and
sub
jne
call
in
in
pusha
cs
cmp
fsubp
jg
sub
jbe
jecxz
xor
jecxz
jecxz
jecxz
adc
loop
loop
loop
cmpsl
or
pusha
dec
int3
sbb
add
jg
out
lods
loopne
imul
out
ret
out
lret
out
repz
sti
out
jecxz
xor
xlat
in
sbb
jg
or
es
sbb
in
cmp
sub
fcoms
jmp
jmp
mov
pop
adc
cmp
xchg
jmp
fbstp
jmp
pop
fwait
shlb
add
push
xor
cmp
sti
out
jg
push
out
out
out
or
cmp
clc
add
mov
mov
outsb
in
adc
cmpsb
jmp
jbe
pop
inc
loop
loop
loop
loope
int
ljmp
sti
or
aad
fnstsw
fnstcw
loopne
loopne
loopne
adc
aaa
jg
loopne
loopne
loopne
mov
loopne
jne
jle
js
pusha
aaa
jg
jmp
or
adc
cs
cmp
fucomip
ret
stc
sub
jmp
jmp
jmp
mov
mov
adc
add
jmp
ljmp
xor
pop
jmp
add
mov
xchg
in
add
dec
in
in
in
cmp
mov
in
loop
add
fs
dec
adc
incl
adc
lock
dec
leave
mov
loope
inc
jo
test
data16
jo
or
loope
iret
loopne
mov
xchg
loopne
loopne
loopne
js
shr
out
out
call
add
pop
in
dec
add
push
in
nop
rclb
mov
out
loopne
jbe
jmp
jmp
add
adcb
pop
lahf
call
and
adcb
ljmp
out
out
out
out
lcall
nop
adc
in
jecxz
cld
or
loope
loope
loopne
cli
push
loopne
inc
inc
mov
in
jne
in
push
ljmp
sbb
and
cmpb
js
cld
pushl
add
out
out
jmp
xor
es
mov
pushl
cmp
mov
out
stos
in
jo
loope
jg
inc
cli
in
sbb
cmp
sti
in
add
loope
lods
pop
imul
fcomip
xchg
ljmp
rcll
call
mov
push
mov
adcb
pushl
lock
movsb
loop
loop
loop
test
push
xor
loop
loop
inc
loop
loop
loop
mov
sub
nop
dec
js
adc
insb
loop
loop
loop
pusha
sbb
adc
std
stos
outsb
mov
or
xor
xor
sbb
mov
sub
aam
shl
fsub
fcoms
shlb
dec
hlt
loope
mov
cld
nop
push
sub
dec
sub
jg
mov
ds
loope
loope
loope
adc
mov
mov
movsb
loope
loope
loope
sub
aad
push
sahf
aam
mov
loopne
out
mov
loopne
loopne
loopne
cld
loopne
loopne
loopne
repz
sbb
loopne
adc
cmpb
jg
loopne
loopne
loopne
jp
loopne
loopne
fwait
dec
ss
test
push
adc
outsl
pop
loopne
loopne
loopne
dec
loopne
loopne
mov
js
fs
out
addr16
fidivs
test
dec
call
or
mov
push
jle
out
out
out
popf
out
out
out
aad
mov
out
out
dec
jmp
in
xor
and
in
in
in
in
adc
cmp
in
in
cld
lcall
jecxz
loop
loop
pusha
xor
loop
loope
std
add
fsubp
loopne
loopne
stos
mov
lock
out
jb
jo
mov
xor
jg
lcall
rclb
and
or
sub
ret
jmp
jmp
test
inc
sub
jmp
andb
and
int3
ljmp
decl
cli
add
es
xor
jnp
lcall
call
testl
jg
out
out
call
mov
sub
out
out
jg
out
out
out
adc
in
jecxz
jecxz
inc
jecxz
jecxz
jo
xor
jle
fadd
sub
outsl
or
loop
loop
nop
or
jbe
sbb
aad
jg
loope
loope
loope
shrb
in
sarb
mov
dec
push
mov
mov
imul
iret
out
test
sub
out
mov
mov
out
test
out
push
pop
out
inc
out
jg
xor
out
es
and
sub
sar
in
fucomp
in
shr
leave
in
loopne
mov
imul
in
sub
decl
popa
in
paddsb
in
xchg
mov
imul
mov
inc
add
ljmp
jmp
pop
mov
sub
dec
adc
sbb
mov
sub
out
out
out
add
jp
out
out
out
inc
adc
xorb
call
xchg
mov
mov
in
in
lock
push
in
call
adc
fsubp
scas
jecxz
jecxz
pop
std
es
hlt
jecxz
jecxz
loop
mov
loop
mov
mov
loope
mov
out
outsb
sahf
fsubrp
xchg
in
test
pop
cmpsb
adc
mov
in
test
push
jo
and
sub
es
aam
jmp
jmp
push
jae
mov
mov
cmp
mov
jae
jmp
sub
or
ljmp
ljmp
xor
loopne
xor
jmp
mov
incl
insl
call
add
shl
shl
leave
xor
lods
mov
lea
mov
ret
or
xor
ds
out
out
sub
in
cld
jg
icebp
cmpsl
in
in
inc
in
in
in
xor
loope
add
movsl
in
sbb
in
int3
jecxz
jecxz
cmc
scas
cli
lock
rcrb
jecxz
loop
loop
pop
je
or
xchg
add
pop
and
scas
loope
aas
insl
loope
xchg
sbb
out
add
xor
scas
test
out
aam
jbe
xor
adc
or
xorb
mov
scas
xor
outsb
adc
loop
loop
loop
mov
andb
loopne
loopne
ljmp
cmc
lock
or
out
or
out
cli
nop
xchg
jecxz
outsl
pushf
out
adc
add
shr
add
jo
arpl
push
in
ret
imul
fisubl
ljmp
or
jmp
cmpsl
leave
ret
lret
jo
mov
out
cmp
ret
add
mov
jle
scas
xchg
in
in
scas
rclb
or
jmp
std
jecxz
jecxz
jecxz
pop
jecxz
lock
or
fs
push
loopne
in
lahf
mov
jmp
jmp
ljmp
adc
push
inc
aaa
movsb
add
loope
out
mov
cmpb
add
mov
or
out
out
push
mov
in
push
in
in
nop
jle
repnz
add
adc
sbb
or
ret
add
cmc
jo
jecxz
mov
and
out
cld
xor
out
jbe
ss
add
iret
in
icebp
in
lcall
ljmp
in
xor
sub
sub
in
jne
in
jg
mov
call
lcall
call
mov
lar
or
ljmp
ljmp
ljmp
ljmp
add
inc
mov
cmp
sarl
pop
sub
loopne
mov
mov
dec
jmp
adc
mov
fsubr
sub
add
inc
mov
fdivrp
shl
out
out
inc
out
nop
insb
mov
clc
pop
cld
mov
out
out
out
nop
test
bound
subl
in
in
in
lret
in
filds
mov
in
mov
sbb
add
notb
loopne
xorl
fisttps
loop
inc
nop
pop
popa
inc
or
fiadds
divb
mov
push
loope
loopne
pop
and
mov
repz
push
loopne
loopne
loopne
xchg
or
out
sub
adc
out
int
out
xchg
out
add
out
jne
out
or
jno
jbe
ret
in
or
in
out
and
and
insb
in
ja
outsl
in
push
in
xlat
in
outsb
cwtl
stos
shr
lret
in
lcall
shlb
in
cmp
add
jmp
mov
cli
lods
sbb
je
adc
ds
jmp
ljmp
ljmp
pop
ljmp
ljmp
insb
ljmp
jmp
shlb
in
divb
cmp
push
cltd
call
insb
call
pop
scas
dec
xor
push
rcll
jbe
pop
cmpsb
push
jne
pop
cwtl
fimuls
out
adc
jp
insb
out
pop
dec
add
pop
xchg
add
out
andb
es
rolb
int3
in
adc
out
jmp
out
out
in
mov
in
inc
in
in
in
jmp
outsl
adc
xlat
in
in
and
sub
aad
loop
add
in
sbb
je
popa
nop
add
in
or
jecxz
dec
clc
lret
jg
mov
adc
jecxz
test
jecxz
pop
lods
inc
decl
sub
iret
loop
loop
pushf
mov
jmp
loop
xchg
push
inc
rcll
and
sub
ficoms
push
loope
je
adc
loope
stos
out
mov
loope
imul
loope
loope
cmp
loop
loopne
mov
inc
loopne
adc
push
fsubrl
dec
shr
fiaddl
dec
lods
dec
repnz
adc
icebp
mov
hlt
and
movups
out
and
iret
out
cli
popa
xor
push
cmpsb
in
movsl
stos
add
aad
ja
add
in
dec
add
int3
outsl
decb
xchg
jmp
jmp
sub
inc
ljmp
ljmp
sub
jmp
loop
jmp
notl
call
sub
sbb
mov
pop
repz
out
out
loope
fistps
out
out
adc
and
popf
out
hlt
mov
fisubrl
push
adc
out
out
in
lods
jo
dec
stos
jno
in
les
jb
insl
in
adc
es
in
in
cli
add
in
adc
fstl
jecxz
jecxz
jecxz
or
cld
mov
sbb
sub
inc
mov
incl
in
adc
in
or
subl
inc
and
shlb
cli
lea
adc
out
out
out
or
out
jno
jmp
xor
cmp
aaa
jmp
and
inc
jg
out
clc
inc
jbe
in
fiadds
jno
rol
push
mov
shlb
ds
cli
xchg
lcall
push
push
ljmp
mov
mov
or
pop
mov
lahf
out
push
mov
mov
ss
jle
repz
out
in
adc
in
jecxz
loop
loop
jp
data16
loop
int
cs
push
adc
push
adc
loop
loop
loop
or
mov
cld
loop
loop
loop
cmp
loop
loop
sub
ja
inc
pop
jno
js
sarb
and
loope
addb
hlt
cli
loope
loope
pop
cld
fndisi(8087
out
adc
loope
loope
loope
loope
lcall
js
mov
repz
std
mov
jg
loope
cmp
loope
adc
pop
loope
loope
jecxz
xchg
jle
loope
loope
loope
jb
test
repz
inc
push
data16
out
pop
out
xor
add
or
sarb
outsb
out
and
pop
in
and
lock
sub
inc
jnp
xor
in
sti
in
inc
in
notb
icebp
pushl
and
jmp
jmp
jmp
jecxz
in
inc
orb
add
pop
jmp
jmp
adc
gs
jmp
jmp
or
ljmp
jecxz
jmp
mov
ljmp
ljmp
jmp
enter
lea
mov
mov
sub
push
jg
sub
inc
mov
loopne
jle
xor
out
xor
out
in
loopne
cmp
and
in
jecxz
pusha
arpl
cmp
rorb
loop
loop
mov
loop
das
call
scas
aam
mov
sbb
sub
out
shr
mov
out
shll
leave
out
cmc
pop
add
jg
std
out
stc
out
in
addb
mov
jae
sbb
and
icebp
aam
in
jmp
xchg
in
xchg
mov
loopne
push
in
insl
in
and
mov
sbb
jmp
jmp
in
das
clc
jmp
pusha
sbb
or
fsubr
ret
stc
nop
xchg
ljmp
fs
push
mov
ljmp
jmp
fucomp
into
outsl
cmp
jp
mov
daa
scas
pusha
sbb
pop
xor
out
stos
and
sub
jp
in
in
in
pop
in
in
shrb
loop
mov
mov
inc
outsb
pop
mov
fs
cld
out
lahf
js
out
push
in
cmpsb
in
call
jmp
leave
loopne
cltd
jmp
loopne
and
loopne
mov
pop
pusha
setne
sbbb
je
pop
jmp
sub
into
aas
loopne
orb
jb
mov
in
std
mov
stos
ljmp
push
jl
data16
hlt
int
mov
jecxz
clc
ffreep
loop
add
push
mov
out
or
loop
pusha
dec
les
loopne
loope
pusha
adc
loopne
outsl
clc
decl
insb
loopne
loopne
inc
out
sub
out
jbe
clc
adc
call
jg
inc
xor
out
adc
add
vpxor
popf
in
push
in
jnp
inc
cmp
in
fcoml
inc
mov
mov
fisttps
jmp
add
outsl
pushl
ljmp
jmp
jmp
mov
adc
jne
push
je
negb
imul
cmp
jmp
mov
mov
mov
mov
ljmp
pusha
mov
ljmp
jmp
xchg
sub
mov
inc
call
das
add
ret
fs
pusha
sub
add
in
pusha
lods
adc
in
in
addb
cmp
in
loopne
ljmp
mov
add
add
mov
jp
inc
rorl
jecxz
jb
insb
movb
iret
insb
mov
mov
in
mov
dec
in
jno
mov
push
ljmp
call
fwait
call
call
fiaddl
adc
mov
out
out
aam
out
icebp
mov
adcl
out
out
out
adc
in
mov
ret
in
in
arpl
push
sbb
test
loopne
xchg
jecxz
jecxz
jecxz
mov
adc
loop
mov
push
clc
loop
repz
test
hlt
add
loop
mov
jno
insl
loope
adc
sub
pop
es
loopne
sbb
mov
inc
loopne
xor
mulb
repnz
scas
jp
js
in
std
jmp
xor
ljmp
inc
stos
push
cmp
lods
xchg
out
pop
push
out
sub
jmp
lcall
push
in
add
shll
inc
sbb
cmpsb
jecxz
mov
add
mov
pop
jle
dec
loopne
out
jle
aam
out
les
and
xor
ds
js
add
sub
aaa
test
adc
call
subb
shlb
fwait
std
incl
out
add
cmpsl
xor
add
mov
decl
loopne
mov
out
out
and
inc
out
lock
call
je
out
adc
add
gs
out
out
push
push
push
sbb
jbe
nop
pop
or
jg
sub
out
out
out
adc
out
out
out
add
shl
out
out
mov
out
out
out
jmp
out
test
sbbb
out
mov
mov
lods
out
cmp
cmp
pop
and
pop
dec
out
out
shl
clc
or
xor
sarl
adc
out
mov
pusha
jge
lock
dec
aas
push
sbb
jnp
in
in
mov
ret
in
push
inc
in
in
in
push
loopne
in
pop
ljmp
adc
jmp
mov
mov
jo
mov
push
in
sarb
addr16
cmp
push
std
jg
sbb
in
adc
xor
sub
inc
push
dec
in
lock
jecxz
psrad
stos
sbb
push
stos
ret
sub
lods
mov
jno
sub
int3
out
adc
out
or
aas
out
and
out
push
outsl
cli
fwait
outsb
inc
int
xor
pop
jmp
pusha
popf
ljmp
cs
jmp
icebp
xchg
out
out
out
mov
fldt
loop
or
xchg
in
in
loopne
adc
jecxz
jecxz
inc
jecxz
push
inc
fsubl
rol
jmp
mov
out
push
out
aam
cli
mov
pop
in
jo
add
test
pop
outsb
jmp
call
jecxz
ja
push
xlat
mov
scas
dec
leave
out
sbb
xchg
in
in
xchg
pop
mov
mov
scas
xchg
sub
mov
das
loop
loope
adc
pop
xor
stos
loopne
fwait
mov
loopne
loopne
out
enter
outsl
out
ds
mov
hlt
mov
mov
lret
mov
push
add
pop
stc
ljmp
ljmp
lahf
mov
fwait
cmpsb
jmp
fsubp
cmc
out
xor
aas
push
in
in
in
inc
sub
jmp
mul
and
loope
adc
add
out
push
out
decl
cmpb
sarb
in
push
in
adc
or
mov
mov
cmp
movsb
xchg
mov
pushf
jecxz
xor
adc
dec
adc
outsl
incl
int
xchg
out
mov
mov
out
out
sbb
mov
out
imul
cld
jo
or
addr16
jg
or
add
ljmp
jl
rcrb
in
out
xchg
in
lahf
in
lcall
loope
adc
in
jmp
xchg
mov
ljmp
cmp
and
nop
pop
mov
and
and
push
ret
jmp
call
inc
test
push
inc
je
or
xchg
cmc
mov
push
lock
xchg
out
out
out
mov
cmp
sub
or
mov
adc
and
js
lret
mov
and
ljmp
out
pop
lock
add
sbb
into
jmp
out
ljmp
lea
add
fucomi
call
add
call
xchg
out
jmp
mov
mov
call
stos
pop
and
call
gs
pop
inc
ljmp
adc
sbb
xchg
or
sbb
xorl
clc
mov
add
ja
mov
in
jp
addr16
xchg
in
or
mov
xor
stos
lock
pop
in
adc
fbstp
addr16
in
and
in
add
push
es
xchg
bound
push
or
in
jo
adc
xor
and
stos
ret
addl
push
mov
adc
sbb
add
inc
nop
data16
add
and
ret
inc
mov
add
xorl
mov
jp
lcall
sub
adc
fidivl
jo
shl
ret
add
stos
cmp
adc
push
loope
loope
loope
push
mov
test
dec
cmp
add
daa
loope
loope
adc
shll
push
add
or
loopne
sbb
jg
das
jle
mul
repz
sti
loopne
and
loopne
loopne
loopne
add
fwait
loopne
loopne
loopne
jmp
decl
and
mov
loopne
loopne
or
add
pop
mov
and
adc
mov
add
cld
add
pop
sbb
das
add
adc
mov
inc
in
int
add
inc
inc
or
sbb
add
push
sbb
pop
add
popa
sbb
or
lcall
jo
addr16
dec
mov
aad
mov
or
or
dec
sahf
push
popf
xchg
add
lcall
add
mov
push
dec
cmc
add
jmp
mull
imulb
xor
or
movsl
test
mov
cmp
ja
mov
int
inc
jle
test
scas
mov
fimuls
ljmp
add
cmp
dec
push
mov
mov
inc
test
adc
mov
or
add
dec
or
sbb
mov
or
rol
pop
hlt
fisubrl
fnstsw
test
mov
popf
inc
add
xor
add
out
pop
out
pop
sub
add
decl
xchg
mov
sub
pop
in
js
mov
scas
mov
roll
lock
sbb
push
cs
push
out
xor
pop
mov
in
adcb
data16
sahf
fcoms
add
cmpsb
scas
and
cmp
xchg
sub
inc
mov
inc
sbb
jno,pt
adc
or
ja
lds
sbb
in
jne
jge
pop
rcll
add
lret
push
aaa
xchg
pop
in
lods
add
sbb
outsl
jo
mov
push
sub
sbb
mov
shlb
jmp
dec
mov
add
int
mov
std
push
add
insb
enter
repnz
mov
push
clc
aaa
js
sub
jbe
jle
lock
cmpb
je
shlb
mov
repnz
adc
lock
fwait
and
addr16
call
in
jbe
aas
repnz
fildl
mov
mov
pop
sbb
inc
sahf
and
sub
in
mov
call
push
mov
in
or
sub
fdivrl
or
jg
mov
push
inc
repz
jp
ja
ffreep
cld
negb
cmpsb
repnz
outsb
or
repnz
fbstp
faddl
inc
xchg
loope
ja
add
or
test
pop
call
mov
fisttpl
cmp
sbb
jnp
or
call
or
adc
outsl
pusha
cmc
mov
pop
mov
add
std
test
outsb
jl
test
rclb
rolb
and
bound
sub
mov
sub
add
push
jg
jmp
je
outsl
jb
imul
push
arpl
push
imul
decl
notb
outsl
je
inc
gs
je
sub
outsb
popfw
fnstcw
push
gs
fs
imul
idivb
push
imul
xchg
arpl
jae
cmp
inc
jae
push
dec
outsl
orb
adc
lods
stos
jns
inc
or
push
jb
cld
and
sub
sbb
outsl
aam
push
or
iret
push
and
jo
or
adc
gs
jne
std
popa
inc
bound
shll
push
cmp
xchg
fdivrs
test
sub
rorl
pop
insb
addr16
dec
jge
pop
mov
arpl
call
mov
fisubrl
or
in
sub
add
push
lds
sub
pop
mov
push
rcrl
aas
lods
pop
or
scas
push
mov
iret
cmpsl
or
add
and
fs
jle
gs
push
mov
outsl
outsb
dec
popa
outsb
fs
inc
or
xlat
inc
inc
stos
mov
sbb
rcll
dec
xor
shlb
movsl
sbb
pusha
jne
movsl
jnp
mov
bts
push
dec
test
pop
push
mov
jg
stos
popa
or
dec
sub
add
in
out
daa
mov
push
jne
add
insl
jo
fsubr
mov
in
jae
imul
mov
ds
inc
outsb
test
mov
inc
arpl
push
sub
jbe
inc
and
js
cmp
fs
imul
insb
jae
aam
popa
insb
mov
out
inc
rorb
inc
push
insb
or
js
orb
popa
andb
repnz
mov
ljmp
dec
fwait
stc
pop
rcrl
je
pop
gs
adc
outsl
jne
pusha
repnz
mov
jae
outsl
jbe
add
insl
cmc
adc
in
outsb
xchg
into
inc
push
push
ficoml
or
cmp
mov
xchg
adc
gs
out
sbb
outsb
jns
or
arpl
jp
test
push
push
stos
pop
sbb
insb
testl
stos
fs
inc
jbe
aam
sub
push
adcl
movb
hlt
xchg
cmp
push
push
cmp
or
mov
mov
xor
lds
or
pop
add
cmp
pop
mov
mov
rorl
pop
test
sub
repz
es
dec
jno
pop
cltd
insl
fiadds
or
pop
out
arpl
jne
in
mov
or
dec
jae
out
outsl
inc
shlb
jne
adc
xor
lea
or
imul
sbb
ret
and
inc
or
enter
imul
lds
addl
xlat
popa
inc
adc
push
add
shll
shr
sbb
movsl
popa
bound
popa
mov
sahf
pop
pop
sarl
shrb
xor
lret
insb
push
orl
jb
stos
mov
dec
mov
cmc
jbe
and
mov
mov
push
jle
les
push
and
rcll
addl
and
stc
lret
cli
push
ret
push
shll
adc
lds
pop
vmovlpd
mov
sub
flds
jb
inc
insb
addb
call
xlat
imul
popf
imul
adc
test
push
outsb
ja
fs
imul
imul
cmp
rcl
inc
insb
cld
ror
inc
xor
cmpl
pop
push
sbb
dec
jae
xor
inc
jns
mov
mov
push
jae
push
popaw
or
inc
dec
inc
push
push
fidivrl
mov
sbb
push
or
and
loope
lea
lret
stos
les
test
xor
movsl
outsl
les
inc
sub
bound
dec
fmull
jge
pop
lods
test
push
xor
shr
pop
lds
rcll
add
shlb
fimull
inc
adc
mov
lods
xchg
jo
ljmp
aam
push
icebp
aad
lea
adc
dec
jnp
adc
ret
xorl
xor
xchg
inc
push
push
xchg
adc
and
aad
mov
scas
adc
outsl
jo
popf
mov
lods
add
fdivrs
rcll
or
add
mov
jne
stos
push
sbb
adc
outsl
push
pop
popf
je
xchg
pop
je
les
jmp
inc
notl
mov
rcl
xor
push
lods
mov
pop
lret
mov
pop
xorl
and
xchg
jns
adc
pop
filds
jmp
inc
pop
push
ja
xor
mov
mov
test
pop
lret
aad
adc
movsl
sbb
int
sbb
dec
mov
mov
jne
popf
pop
nop
add
test
push
jo
pop
adc
cwtl
mov
xchg
loopne
call
or
adc
in
mov
mov
sbb
add
ret
outsl
or
sub
stos
cs
cmp
and
xchg
adc
ja
inc
stos
cmp
sbb
cmp
xorl
add
add
push
dec
ss
test
cmpsb
lea
mov
pushf
cld
add
ss
popa
negb
mov
daa
imul
push
adc
pop
xor
and
jge
enter
cmp
jae
add
lods
lods
jge
sub
and
and
add
ja
mov
push
push
add
in
loop
and
jb,pn
outsb
popa
push
xor
and
mov
sub
inc
outsb
dec
inc
repnz
push
mov
push
shlb
fdiv
dec
sub
loope
cld
dec
jb
jb
daa
push
dec
in
lds
psubb
ficoms
jge
aaa
mov
and
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
