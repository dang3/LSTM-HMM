pushl
sbb
mov
mov
loopne
ret
sub
popf
jl
loope
test
or
pop
inc
push
sub
lret
sahf
add
cs
or
out
test
ljmp
aas
pop
pop
dec
and
in
out
mov
xchg
aas
mov
pop
cmpl
mov
dec
icebp
aas
adc
shl
stos
inc
fistpl
in
fadd
not
iret
xlat
hlt
stc
cmc
out
inc
mov
add
fsubrl
mov
fstps
arpl
add
mov
dec
imul
adc
divb
mov
call
iret
push
out
fistpll
sub
movsb
fsubs
cmp
add
jnp
lcall
sbb
cmp
dec
hlt
sub
push
adc
or
adc
lock
in
ljmp
add
in
lock
mov
fisubrl
pop
fidivl
test
std
sbb
hlt
xchg
add
push
inc
fmull
filds
fildl
jl
dec
sbb
call
jp
test
push
shrb
sbb
push
loope
fdivl
ja
dec
xchg
ljmp
inc
xor
lahf
pop
loopne
fisubrl
sub
and
pop
mov
imul
jle
pop
lds
sub
ret
out
dec
cltd
ljmp
adc
pop
bound
dec
pushl
and
push
xchg
lcall
cmpsl
movsl
lahf
inc
cmp
das
sbb
icebp
mov
call
int3
jle
idiv
insl
cmp
out
call
sbb
pop
xor
rcrl
lea
push
push
mov
mov
stos
adc
rcrb
sbb
and
into
clc
incl
sub
fwait
out
mov
sbb
fisttps
rorl
xchg
pop
fimull
insl
pop
lock
call
imull
mov
imul
dec
lock
iret
xchg
xchg
inc
ljmp
lods
xchg
xor
sub
push
dec
add
jecxz
loop
in
ficoms
inc
test
xchg
fst
out
ljmp
pop
out
sbb
popw
daa
push
leave
dec
inc
push
out
aam
add
sbb
sub
ljmp
inc
xlat
mov
imul
pop
push
fisttpl
pop
subl
iret
loope
sbb
jae
into
fdivrp
pop
clc
cmpsb
sbb
out
jp
push
push
mov
push
fistpl
sahf
std
add
decl
int
ret
or
lret
pop
or
int3
pop
jge
xor
jg
dec
pushl
jns
jmp
or
mov
inc
jno
clc
pop
andb
push
mul
or
jg
inc
scas
and
mov
bound
add
das
fwait
test
lods
iret
and
inc
int3
imul
mov
mov
incl
outsl
paddd
btc
gs
ficoml
jg
mov
pop
subb
xchg
jmp
jmp
popf
adc
lock
push
pusha
jg
ret
in
mov
mov
ficoms
cld
call
push
in
pop
aaa
shlb
or
jmp
xor
adc
lcall
fs
jne
imul
es
into
mov
mov
out
ljmp
daa
jne
push
ja
adc
fwait
loope
adc
sbbl
imul
inc
incl
jle
sbb
ss
dec
and
push
xorl
int3
push
cmc
pop
mov
sbb
pop
pop
push
mov
ja
rorb
mov
mov
jecxz
mov
decl
mov
mov
out
pop
hlt
sbb
stc
fstpl
add
mov
jo
cmp
mov
dec
mov
imul
loope
add
sub
ljmp
jns
dec
mov
outsb
push
push
push
mov
xchg
mov
into
xor
and
push
call
jmp
mov
inc
mov
xor
pop
sbb
pop
or
mov
lcall
lcall
insl
add
cli
push
outsb
xlat
xchg
mov
pop
data16
jns
xchg
mov
pusha
mov
lods
stos
mov
and
jne
sub
ds
dec
xchg
lcall
sbb
or
and
test
shlb
fidivs
xchg
sub
stos
lods
lock
out
repnz
xchg
mov
dec
or
jg
out
mov
mov
mov
cld
jns
insl
sub
popf
ud0
ljmp
mov
mov
loop
outsl
pop
mov
sbb
dec
ret
jae
mov
jmp
and
and
push
std
adc
or
in
xchg
jnp
jecxz
lahf
insb
jmp
pop
dec
adc
cmp
pop
pusha
sbb
movsb
mov
lea
cmp
incl
mov
cs
fwait
in
or
cmp
xor
leave
ljmp
adc
mov
fnstsw
xor
xchg
inc
into
jbe
push
jb
imul
xchg
inc
lcall
and
pop
fsubl
fcomps
pop
jmp
dec
mov
arpl
enter
es
cmp
mov
xor
or
mov
dec
jbe
rol
jmp
cmp
ds
push
sbb
mov
ljmp
inc
push
lods
add
xchg
xor
loop
pushl
inc
mov
mov
loop
loopne
fs
cmp
test
popa
sbb
cli
jmp
ficoms
pop
pushf
fiaddl
and
sahf
add
jns
sbb
and
test
cld
or
jl
fcmove
mov
in
mov
add
jmp
jmp
in
cmc
inc
decb
xlat
repz
and
jp
daa
cmpsb
jo
mov
mov
ss
lods
mov
or
sbb
jp
xor
mov
enter
jg
out
movsb
jl
rclb
or
fdivrl
mov
mov
sbb
mov
decl
mov
mov
sbb
das
ja
mov
or
push
push
xchg
inc
orb
xchg
mov
adc
notb
fimuls
adc
or
push
popf
pop
mov
adc
or
sbb
and
pop
scas
xchg
decl
stc
ficoms
pop
pop
lret
arpl
push
mov
push
ret
out
lcall
cmp
sbb
pop
sbb
movl
xor
adc
xlat
add
sbb
mov
and
jle
sbb
fbld
xor
mov
pop
pop
int3
repnz
inc
lock
jns
cmp
dec
mov
xchg
or
adcl
das
lahf
adc
sbb
cmc
push
sub
pushf
and
in
in
test
sbb
jmp
mov
and
mov
cmp
sub
fnstenv
call
sbb
lahf
and
jmp
test
jl
sub
mov
into
iret
push
jne
sub
cmpsb
stc
or
in
int3
mov
sub
loop
mov
call
mov
mov
and
inc
mov
cmp
ljmp
mov
nop
shlb
mov
repz
jg
iret
or
dec
xor
sub
fistl
jp
lds
push
bound
mov
pop
clc
incl
dec
scas
insl
inc
aad
sub
leave
std
mov
popa
sub
ss
mov
mov
mov
sbb
negl
decl
jle
mov
push
int
sub
cmp
xchg
sbb
sub
dec
ljmp
xor
xchg
shl
xor
and
sub
lcall
push
ljmp
ljmp
sbb
inc
mov
adc
push
shr
adc
insl
push
xor
add
cmp
jp
and
jmp
jnp
inc
stos
sbb
testb
jge
pop
test
imul
mov
ljmp
imul
fs
pop
icebp
mov
xchg
pop
xor
mov
jmp
in
push
daa
insb
cmpsl
lods
mov
cmp
jp
fmuls
or
nop
jb
cwtl
pusha
push
fcos
lcall
pop
jmp
sarb
cs
sar
jae
or
add
add
int
sbb
call
xchg
add
shr
push
popf
mov
xor
mov
pop
testb
jb
and
or
ljmp
lods
jge
lret
icebp
cmc
in
popf
sbb
arpl
dec
sbb
xor
in
jo
jmp
jnp
mov
xor
ret
insb
mov
jmp
add
sahf
xchg
and
jl
pushl
xchg
mov
pop
je
inc
inc
lcall
pop
rolb
stos
jmp
dec
addr16
mov
and
insl
add
sbb
ret
rorb
pop
pop
aam
sbb
lcall
xor
pop
in
gs
mov
lret
rorl
outsl
pop
in
mov
ret
dec
dec
insl
mov
mov
or
jo
mov
jp
adc
call
data16
je
add
mov
and
lods
xchg
xorl
incl
cmp
mov
dec
mov
lods
sbb
pop
subb
ror
leave
call
lcall
js
dec
icebp
dec
mov
repnz
dec
sbb
filds
mov
mov
dec
push
mov
pop
popa
loope
sti
ss
pusha
pop
mov
call
push
fidivl
push
xor
and
adc
xlat
xchg
int3
xchg
std
cmp
addl
sub
cltd
ljmp
andb
into
push
clc
data16
lods
popf
rcrb
mov
inc
dec
lret
sbb
leave
out
scas
pop
jmp
or
insl
inc
sbb
mov
sbb
repz
push
scas
cwtl
ret
call
ret
testl
jmp
scas
cmp
mov
leave
test
sub
push
lcall
das
sbb
mov
dec
arpl
cs
decl
push
xchg
nop
aad
adc
psllw
scas
or
test
idiv
pop
clc
jmp
sub
and
jl
in
in
std
mov
push
push
mov
lcall
inc
inc
fdivl
push
mov
jbe
xor
xlat
push
jecxz
inc
test
sub
pop
push
rcrl
xchg
call
loope
nop
fildll
dec
pop
xchg
stos
test
fnstenv
stos
das
fistpl
and
jl
sbb
sbb
in
cwtl
mov
incl
dec
sub
mov
je
fsub
cmp
test
push
rcr
xchg
mov
sbb
pushl
ret
push
out
loope
and
mov
dec
lret
mov
push
incl
push
xchg
movsb
mov
xchg
roll
or
lret
pushf
mov
pop
pusha
mov
jns
test
lret
jmp
test
pop
lahf
or
cmp
cmpsl
push
rep
xchg
clc
stos
lods
and
lret
mov
ss
inc
cmp
or
jl
cmpsl
and
jg
jmp
xlat
dec
test
testb
fsincos
jnp
leave
inc
dec
ja
pop
mov
xchg
inc
ljmp
ds
jo
xchg
loopne
fists
outsl
adc
push
adc
outsb
xchg
movd
xor
test
mov
mov
or
or
ficompl
jbe
popf
sahf
dec
pushl
repnz
adc
aas
mov
jns
icebp
loop
inc
cmc
fcomps
out
aam
cmp
shll
fstpt
push
xor
in
jmp
mov
fsubrp
test
sti
pushl
into
jl
repz
lretw
pop
xchg
mov
aas
repz
test
and
jg
subl
mov
xor
sub
mov
mov
and
cli
add
dec
mov
sub
mov
incl
push
mov
idiv
xchg
mov
fbld
and
mov
mov
dec
mov
fsubs
pop
add
es
mov
shrb
enter
ljmp
incl
mov
sub
iret
pop
mov
cmp
mov
lahf
std
outsl
insb
and
lds
test
psubusb
incl
jge
and
decb
mov
jnp
cmc
mov
sarb
xor
push
mov
testl
fstpt
stc
int
add
xchg
adc
lods
icebp
jne,pt
sbb
pushf
pusha
mov
cmovle
mul
lods
and
mov
dec
or
add
mov
insb
testb
push
jo
jmp
popa
xor
jae
adc
add
or
or
std
fs
cltd
push
mov
and
decl
out
pushf
dec
shll
aas
pop
fisttpl
xchg
adc
and
imul
jge
xor
aaa
add
fsubp
flds
adc
iret
fcompp
sti
inc
add
pop
rorb
test
test
mov
insl
jne
ss
popa
ret
mov
and
inc
dec
addb
and
push
xor
mov
inc
push
inc
and
xor
push
addl
decl
inc
mov
fiadds
or
xchg
xchg
xor
incl
addr16
or
pop
lret
jle
fsubr
jo
lods
std
sti
push
and
aad
mov
pushl
push
dec
push
fsubs
repnz
imul
fsubrs
icebp
mov
xor
sub
push
or
bound
nop
sti
rcrl
arpl
cmp
fxch
cmp
scas
cmp
and
test
mov
jg
jmp
and
mov
mov
mov
or
lods
ja
mov
mov
jmp
out
cwtl
xchg
or
jnp
dec
rolb
jnp
negl
and
fmull
imul
decl
std
es
fbld
jnp
ja
jge
aas
out
sarb
adc
in
push
call
sub
mov
adc
sub
popf
pop
push
sahf
mov
loopne
cltd
nopl
jle
push
mov
mov
loope
mov
mov
sti
outsl
ret
add
add
jecxz
adc
mov
and
push
adc
in
sti
push
lcall
insl
in
add
push
cmp
dec
add
dec
cmpsb
pop
nop
mov
mov
cmp
jl
int
shrb
ret
test
js
mov
or
cmp
incl
jb
dec
cmp
scas
int
pop
dec
stc
test
mov
flds
lea
call
dec
addr16
or
ficompl
pop
pushf
icebp
fwait
scas
sub
pop
jmp
loopne
cmp
shr
sar
pushl
test
push
out
daa
sub
jno
pushf
int3
hlt
idivb
pop
jnp
jp
pop
leave
jmp
lcall
jno
ja
and
clc
lret
add
lcall
push
mov
lret
lods
fistps
xchg
incl
adc
movsb
xlat
add
cs
movsb
jns
jb
cwtl
sbb
mov
xor
decl
lret
push
mov
ds
jle
loope
scas
sbb
jl
ret
push
cmp
pop
cmpsb
aad
popf
ret
mov
adc
test
pop
inc
sub
ret
mov
cmp
sbb
push
test
pusha
jnp
call
dec
js
scas
fadd
cli
gs
cmp
call
dec
jle
and
xchg
sbbb
jp
or
int3
adc
mov
dec
int
mov
pushl
fcmovbe
jae
pop
inc
loopne
ljmp
or
and
inc
je
pop
rclb
dec
inc
test
xchg
mov
fs
cltd
adc
aas
and
dec
mov
mov
ljmp
je
adc
inc
pop
mov
jb
andl
in
mov
jmp
inc
shll
push
and
cmpsl
jmp
jno
outsb
sub
xchg
sbb
jp
cmp
lcall
push
imul
or
cmc
xor
pop
add
je
rcrw
lret
sbb
lcall
fidivl
fdivp
xchg
pop
call
pop
shlb
xor
jae
push
fsubrs
inc
push
gs
lret
inc
xor
xor
mov
ds
xchg
push
scas
jmp
push
jp
cmp
sbb
or
stos
testl
iret
mov
pop
xchg
ret
out
sub
jmp
push
xor
bound
xchg
lods
sbb
iret
popa
arpl
sbb
mov
arpl
xorb
pushl
bnd
leave
faddl
ja
pop
sub
mov
xchg
pop
into
int
jmp
sub
clc
mov
imul
andb
ret
out
jne
and
pop
addr16
adc
pop
pop
xor
decl
lcall
inc
addr16
xorb
ficompl
rcl
dec
mov
lcall
mov
jecxz
jg
push
dec
xchg
out
pmulhw
cs
or
ljmp
inc
leave
mov
xchg
cmp
lea
fldt
outsb
mov
scas
fs
inc
sub
mov
jg
iret
mov
xor
push
adc
push
lret
xlat
je
inc
rclb
mov
jae
int
outsb
add
xor
jmp
rcll
jno
mov
mov
fimull
mov
jo
add
call
mov
mov
xchg
xor
and
cmc
sub
ret
iret
jns
lock
sbb
clc
lcall
into
pushf
mov
push
pop
push
fwait
out
jl
and
div
mov
push
jmp
adc
mov
imul
inc
cli
loopne
lock
repz
dec
cmpsb
and
ljmp
adc
divb
loopne
lret
andl
lcall
in
es
mov
xchg
mov
pushl
inc
xchg
insb
adc
cli
cmp
push
repz
stos
jl
adc
test
pusha
shrb
cwtl
dec
jl
jbe
push
pop
fadd
mov
popf
imull
jg
ret
mov
jmp
xchg
pop
push
cmp
hlt
xor
adc
loop
sbb
cmp
decl
aad
lds
rcr
mov
cmp
and
xchg
test
decl
out
adc
js
push
jne
addb
out
ss
lea
add
lcall
in
popf
push
int
addr16
adc
insl
mov
push
xchg
lcall
jo
fstps
cwtl
pop
into
inc
xchg
insb
add
push
bound
test
clc
incl
adc
mov
sti
and
cmp
imul
fwait
jbe
clc
call
shl
mov
test
jbe
inc
cltd
sub
sub
int3
push
lods
scas
js
cmp
jmp
pop
les
popf
pop
insl
jns
outsb
sub
pop
pop
movsl
cmc
call
test
pop
es
scas
mov
cs
ret
push
sbb
dec
pop
inc
add
fmull
and
xorl
adc
add
xchg
push
add
xchg
adc
incl
addb
xchg
push
adc
inc
pop
push
and
in
subb
decl
sbb
add
add
inc
andb
cwtl
or
xchg
movsb
xor
adc
and
add
add
call
subl
or
add
and
add
nop
dec
adc
sub
ljmp
jae
popf
cmp
lret
mov
sub
js
mov
xchg
jo
mov
out
mov
iret
push
xchg
dec
push
push
lret
mov
mov
in
int
push
hlt
xchg
gs
cmc
popa
push
jp
sub
imul
fs
test
enter
paddsw
outsb
or
cmp
push
mov
cmpsl
inc
inc
ljmp
icebp
aas
jae
lahf
pop
jo
mov
cmpsb
enter
mov
lret
fiadds
ss
ljmp
push
loopne
cmp
sub
inc
cmpsb
ficompl
pop
imul
mov
push
lcall
and
outsl
add
xchg
ljmp
push
mov
lahf
test
incl
xor
scas
mov
addr16
iret
pop
shrb
inc
call
sbb
test
aaa
decl
cmp
push
test
and
inc
or
xchg
xchg
and
ficomps
pop
in
repz
mov
out
out
cmp
icebp
repnz
push
out
xlat
filds
pop
aaa
sbb
mov
mov
mov
pusha
insb
jb
ss
int
insl
mov
push
test
rcl
lret
int
push
gs
xchg
incl
aam
xchg
aas
cwtl
add
cmp
mov
in
cmpsb
mov
xchg
icebp
loopne
decl
inc
mov
pop
out
mulb
out
jge
mov
inc
push
inc
add
decl
mov
jno
adc
adc
adc
push
loopne
or
mov
cmc
mov
jmp
and
push
dec
mov
int3
pop
cmp
stc
jecxz
mov
insl
mov
decl
ljmp
sub
push
inc
out
rorl
cli
mov
xchg
inc
sub
cld
mov
out
jge
testl
mul
mov
into
or
out
lea
dec
insb
test
call
mov
mov
xor
mov
jb
bound
pop
push
mov
ss
cmp
dec
scas
lods
add
roll
fisttps
daa
and
ljmp
xor
pop
aas
xchg
or
and
shrl
inc
iret
movsb
mov
inc
leave
std
mov
pop
push
jmp
cmpsl
xor
outsb
repz
mov
flds
imul
mov
call
push
roll
in
cmpsl
mov
sub
shrb
xchg
sub
inc
lods
push
adc
popa
and
nop
and
and
and
dec
sub
adc
add
mov
inc
inc
adc
daa
nop
lea
pop
add
cmpsb
inc
dec
std
fcoml
sahf
cli
sub
into
cmp
lcall
sahf
jmp
ljmp
jg
lret
sbb
into
fs
popf
dec
lcall
in
jg
call
ds
sub
clc
in
fwait
mov
cmp
cmp
mov
fisttpl
cmp
dec
xor
lcall
xchg
sub
cmp
jo
cmp
incl
jle
imul
sbb
aaa
fimull
cmp
cmpsb
adc
jg
std
or
stos
dec
je
inc
pop
pop
fidivs
jnp
mov
jb
cmpsl
pop
push
lcall
inc
les
sub
dec
imul
pop
xrelease
lret
pushl
adc
outsl
inc
ret
jo
cmpsb
push
jbe
lods
push
outsl
cmc
mov
jg
cmpsl
dec
outsb
sahf
mov
popf
xor
cltd
push
pop
push
xor
or
mov
in
dec
sbb
daa
jmp
imul
cltd
mov
inc
pop
or
adc
and
negl
arpl
mov
insl
jae
mov
ds
fisttpl
pop
mov
mov
into
lret
jns
pop
dec
or
xchg
and
stos
pop
jb
mov
js
div
jg
pop
xchg
fidivs
add
sbb
scas
jo
fwait
sub
cmp
sbb
pop
jg
fcomi
ljmp
imul
imul
imul
fstpt
dec
mov
sbb
push
sbb
daa
jg
mov
jns
out
jg
mov
push
push
push
mov
jg
cltd
les
pop
ja
lret
xlat
push
push
or
sbb
dec
movsb
sbb
sti
mov
in
movsb
cld
ljmp
xchg
stos
push
sub
push
jg
mov
mov
cs
ret
and
outsl
xor
adc
and
in
ret
inc
dec
in
outsl
dec
ja
mov
pop
push
mov
stc
in
jg
mov
pop
dec
popa
xor
mov
xor
xor
pop
lcall
inc
lods
push
dec
jp
repnz
jl
dec
dec
in
and
inc
imul
cmpsb
test
inc
jne
pushf
ja
cmpsl
inc
jg
cs
mov
pop
outsb
jae
loopne
rcrb
cmp
sub
ret
jecxz
lret
sbb
into
pop
lcall
mov
jmp
and
je
xchg
adc
dec
xorb
lret
or
in
fucom
call
daa
ja
in
fmuls
outsl
push
in
sbb
int3
leave
or
or
xchg
jne
in
pop
fldl
adc
pop
add
andl
aaa
fists
jl
mov
mov
mov
adc
adc
push
push
and
sarb
fiadds
mov
cmp
sub
aas
cld
lock
in
xor
inc
and
decl
mov
fistpl
and
or
dec
insl
ds
sbb
jnp
repz
xor
lock
mov
in
xor
mov
push
xchg
pop
vpmulhw
lcall
mov
jo
xchg
enter
jl
push
mov
xchg
xchg
popf
mov
and
mov
lahf
cmpsl
pop
push
mov
xchg
pop
sets
or
inc
cld
call
pop
ret
rorb
push
push
or
lahf
or
mov
push
dec
mov
pop
xchg
or
xchg
test
dec
es
or
sbb
pushl
into
jnp
enter
dec
mov
dec
scas
jmp
xlat
dec
jmp
mov
fwait
mov
leave
int3
in
xchg
fisttpll
mov
inc
out
mov
dec
ret
iret
xchg
pushl
out
xor
xor
pusha
xor
sbb
xchg
ds
ljmp
je
jp
sti
xor
xor
jb
rcll
and
iret
jl
das
mov
cmp
testb
sbb
cmp
lods
push
cmp
enter
jmp
negl
dec
shlb
idivl
dec
adc
outsl
jmp
xchg
mov
jnp
pop
lea
pop
inc
imul
cwtl
mov
push
mov
pop
push
mov
cmp
inc
jae
xchg
inc
or
insb
xor
inc
outsl
sub
daa
xchg
fsubr
rclb
mov
dec
push
add
push
jecxz
mov
data16
stos
jmp
xchg
lret
cmc
jg
lods
mov
xchg
int3
lret
or
sbb
xchg
sbb
jbe
cmpl
ffree
lret
repz
testl
sub
idivl
cli
mov
pop
es
sbb
inc
jle
in
push
mov
cltd
or
cltd
aaa
or
clc
push
fwait
push
pop
xchg
push
jmp
outsb
mov
mov
jae
outsb
stos
gs
mov
jle
imul
xchg
mov
gs
jg
lock
mov
fmull
bound
outsb
sbb
in
sub
ds
clc
in
xchg
inc
sub
add
lret
adc
mov
pop
fimull
outsl
ljmp
icebp
xchg
xchg
inc
mov
sub
add
fucomi
mov
pop
scas
xor
inc
pop
cmp
insb
xchg
mov
pushl
les
sti
into
jle
loope
leave
divb
pop
mov
js
in
daa
scas
and
mov
imul
les
jg
sub
pop
sbb
fcmovne
xchg
fs
cmc
pandn
cld
mov
jg
pop
int
out
jg
lcall
xor
sbb
or
xor
sti
repz
mov
xor
pushl
add
dec
test
sub
out
pop
pop
pop
dec
dec
je
push
dec
bound
push
gs
jg
insl
popa
xor
jno
dec
xor
dec
gs
inc
dec
push
arpl
jp
push
jb
pop
pop
incl
push
inc
push
outsl
cmp
pop
js
outsb
dec
inc
addr16
addr16
bound
ljmp
push
dec
imul
jp
arpl
jbe
inc
xor
fistl
dec
xor
insb
jb
dec
dec
aaa
dec
inc
arpl
jae
xor
in
incl
insb
xor
outsb
outsb
jno
dec
dec
inc
xor
ja
push
jne
cmp
jns
data16
incl
push
inc
jne
pop
jbe
xor
inc
inc
jb
dec
jbe
dec
ss
js
pop
outsl
inc
arpl
cmp
ret
je
jno
bound
xor
outsl
jne
jo
jns
jb
inc
dec
idiv
pushl
ja
inc
arpl
push
dec
pop
push
push
xor
jns
inc
insb
imul
popa
std
in
pushl
dec
push
push
push
jno
push
bound
jne
xor
jb
xor
pop
push
inc
ljmp
jb
dec
jae
bound
push
js
pop
je
pop
xor
insl
mov
dec
push
inc
outsb
jb
outsl
push
sti
outsb
jo
inc
inc
xor
insl
insb
inc
inc
das
cld
in
dec
dec
push
dec
outsl
inc
push
fs
push
jo
push
cmp
inc
pop
dec
gs
dec
xor
jp
fs
inc
push
push
lock
lock
bound
jbe
js
bound
inc
outsl
jo
push
addr16
outsl
push
dec
cld
idivb
pop
dec
jbe
dec
ja
dec
bound
jge
std
mov
imul
inc
inc
push
jo
add
mov
jg
add
aas
orb
cmp
xor
shll
xor
pop
and
repnz
loope
jecxz
add
add
shl
mov
push
out
push
dec
lcall
ret
ljmp
push
leave
adc
jmp
dec
pop
xchg
fisttpl
dec
inc
jecxz
jo
and
add
js
pushf
int
xchg
dec
add
inc
cmp
and
ja
inc
mov
or
push
add
jb
xor
and
adc
xlat
xor
sub
or
pop
jae
lret
sbb
sbb
jbe
dec
lahf
xor
mov
xchg
adc
sub
jno
pop
cs
aas
cwtl
xor
loop
loopne
and
scas
ror
xor
ret
dec
daa
mov
fldcw
mov
or
subl
iret
insb
mov
dec
adc
and
jmp
in
push
std
out
jnp
jmp
jbe
dec
add
mov
mulps
jnp
js
rolb
psubq
fcomps
rcll
std
mov
adc
pop
sub
out
in
fsubr
rcrl
mov
inc
fdivp
adc
pop
add
jge
inc
inc
jmp
ret
mov
xchg
jbe
setno
jecxz
inc
outsb
test
daa
aas
inc
enter
arpl
sbb
daa
in
mov
pushf
pop
xor
jbe
dec
outsb
pop
cmp
adc
and
mov
int3
in
adc
cmp
sub
leave
fbstp
leave
jne
push
add
push
or
outsb
xchg
lret
insl
xchg
jo
out
icebp
rcrl
add
in
mov
dec
mov
stc
lret
mov
jmp
pushl
jns
test
xchg
or
sti
fiaddl
in
lret
in
jge
insb
les
out
jmp
out
dec
ljmp
jl
daa
add
arpl
out
pop
mov
ds
and
lds
in
retw
imul
mov
sbbl
insb
xor
or
or
je
out
idiv
gs
jb
je
arpl
push
arpl
outsl
outsb
pop
dec
gs
jbe
mov
mov
cmp
jb
add
pop
dec
outsb
adc
imul
push
imul
gs
push
push
sbb
insl
mov
cltd
push
dec
imul
jle
dec
je
push
jne
jns
add
jb
out
pop
adc
sbb
mov
fnstenv
or
sbb
aaa
sti
testl
fdivl
arpl
insl
pop
pop
mov
lret
pop
or
cmpsl
je
loop
jg
push
imul
dec
cmp
ret
pop
mov
inc
jns
mov
push
and
imul
jae
push
inc
inc
or
jns
in
fwait
jnp
fisttps
and
inc
js
jge
ss
movsb
cli
adc
popa
outsl
iret
mov
jnp
mov
inc
adc
push
inc
fs
outsb
sub
xor
gs
pop
jnp
popa
adc
add
insl
adc
pop
dec
adc
js
pop
mov
outsl
insl
pusha
xchg
push
cltd
outsb
xor
movsl
neg
mov
or
xor
mov
test
adc
jae
imul
push
outsb
push
pushf
and
lds
daa
scas
add
dec
mov
test
dec
adc
in
xchg
mov
add
insb
inc
ja
or
ret
fs
popa
imul
es
or
push
xor
out
or
imul
or
lock
dec
adc
bound
pop
cmp
data16
adc
jge
dec
out
popa
addr16
mov
in
pmuludq
js
or
jbe
jo
inc
mov
sbb
mov
push
data16
sti
es
adc
outsb
pop
adc
cs
mov
add
popa
pop
insb
jbe
mov
push
jns
mov
imul
cs
adc
cmp
push
leave
pop
int3
rolb
lods
movsb
jae
rol
sbb
mov
mov
int
xchg
xchg
in
stos
xor
loope
lods
aas
push
jo
rcll
ret
js
jae
addr16
dec
popa
xchg
pop
cmp
imul
xor
in
inc
sbb
jns
inc
imul
outsl
jbe
rcll
inc
loopne
insb
cmovns
popa
mov
and
out
lahf
dec
adc
or
lock
inc
inc
and
mov
mov
test
imul
jmp
mov
sub
dec
lret
adc
jnp
adc
adc
or
add
insb
gs
roll
repz
cs
cmpl
in
xchg
ror
pop
bound
inc
xor
jno
xchg
loope
and
rclb
jne
jp
add
sub
fmul
icebp
or
inc
cmp
pop
or
shlb
loop
movsb
adc
nop
pop
xor
push
push
or
dec
insl
ret
mov
push
xor
inc
imul
jae
aaa
pusha
and
aad
loope
sub
rsqrtps
sbb
test
fisttpl
xlat
mov
in
add
insl
inc
nop
pop
xor
sbb
fimull
gs
sub
test
xor
dec
jno
aaa
andb
push
outsl
mov
jb
adc
ja
je
mov
pop
ret
jb
push
inc
jns
push
loopne
int3
xlat
add
mov
or
inc
push
mov
xchg
outsb
add
insb
popa
xor
imul
push
inc
fcmovnb
outsl
dec
inc
inc
xor
sbb
data16
sub
lahf
je
rcrb
jb
test
mov
jmp
dec
adc
js
enter
nop
push
add
add
addl
addb
dec
sub
sub
mov
add
mov
inc
adc
adc
mov
inc
call
adc
add
nop
push
add
inc
inc
add
add
inc
adc
mov
inc
adc
addl
mov
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
and
mov
adc
push
and
add
addl
orb
push
add
nop
adc
add
decl
and
nop
inc
add
add
adcl
adc
add
incl
inc
push
and
push
orl
mov
add
add
adcl
and
push
call
mov
inc
add
nop
push
add
inc
inc
add
add
add
or
push
adc
sub
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
or
cmp
xchg
pushf
sar
insb
dec
cmp
shll
fsubr
add
dec
shll
dec
push
add
xor
dec
shll
push
mov
cmpsb
mov
sbb
in
xor
add
inc
add
xor
xor
roll
push
mov
xor
lcall
shll
cli
push
call
push
imul
imul
imul
xor
shll
cmp
je
cwtl
movsb
mov
shll
add
lcall
inc
pop
imul
imul
sub
cli
or
sbb
ss
xor
shll
pusha
insb
js
shll
mov
dec
shl
testb
adc
cmpsb
imul
cmpsb
imul
enter
add
dec
shll
dec
pop
xor
shll
jbe
xchg
mov
mov
rcr
call
cli
or
push
xor
cmpsb
imul
cmpsb
imul
add
and
cmp
push
imul
enter
adc
dec
shll
pop
jo
dec
shll
mov
dec
rcl
fsubr
test
imul
cmpsb
imul
imul
shrl
or
or
and
cmpsb
imul
imul
cmpsb
imul
push
shll
pop
push
shll
mov
xor
call
imul
imul
imul
dec
shrl
cmp
xor
rcrl
mov
mov
into
clc
lcall
and
cmp
cmpsb
imul
imul
je
fsubr
or
imul
imul
imul
lcall
pop
push
jp
cwtl
movsb
mov
mov
lcall
adc
cmpsb
jmp
inc
push
cmpsb
imul
imul
lcall
push
cmpsb
imul
imul
dec
shll
xor
pop
shll
xchg
test
shll
lock
lcall
xor
lcall
sahf
cmpsb
imul
insb
lcall
cmp
fs
shll
cmpsb
pop
ss
call
sub
dec
pop
data16
imul
insb
lcall
sbb
xor
xor
je
dec
shll
cwtl
stos
mov
rcr
in
clc
add
push
cmpsb
imul
imul
cmpsb
imul
shll
xor
dec
shll
mov
xor
fsub
lock
imul
imul
imul
mov
add
adc
xor
shll
mov
lods
mov
xor
out
add
ret
add
sub
xor
rorl
pusha
insb
js
shll
rcl
dec
shll
lock
or
shll
ds
push
dec
shll
sahf
mov
cmpsb
aam
rcrl
sbb
xor
imul
dec
pop
jo
mov
mov
insb
add
adc
inc
push
pusha
insb
jle
dec
shll
pushf
scas
ror
cmpsb
imul
push
pop
shll
push
bound
xor
orb
shll
in
decb
and
imul
imul
insl
lcall
add
lcall
data16
imul
imul
dec
shrl
sub
dec
pop
shll
xchg
sahf
dec
shll
in
lcall
cmp
lcall
mov
lods
mov
lcall
and
inc
imul
imul
insb
lcall
inc
xor
shll
bound
shll
into
loopne
cltd
mov
and
dec
shll
orb
lods
mov
dec
shr
cli
or
push
sub
inc
push
pusha
jb
cmpsb
imul
cmpsb
imul
add
cmpsb
imul
imul
cmpsb
imul
sub
xor
mov
sub
dec
dec
shll
mov
lods
mov
cltd
cmpsb
fucomi
sub
sub
add
dec
shll
jb
xor
shll
mov
ss
rcr
in
or
roll
dec
shll
outsb
xorb
mov
jmp
repnz
sub
shll
push
fs
shll
adcb
mov
cmpsb
imul
cmpsb
imul
cmpsb
imul
testb
push
and
dec
shll
jp
xor
shll
stos
mov
dec
shl
repnz
adc
imul
imul
cmpsb
imul
push
shll
pop
dec
shll
scas
mov
int3
fsub
lock
imul
imul
imul
mov
adc
and
shll
mov
lods
mov
lcall
and
inc
imul
imul
insb
lcall
ds
shll
pop
outsb
jp
shll
enter
ss
in
clc
or
imul
cmpsb
imul
loop
cli
push
ss
shll
push
data16
shll
mov
ror
fsubr
cld
push
aaa
cmpsb
imul
imul
cmpsb
imul
cmp
add
cmp
cmpsb
imul
cmpsb
imul
out
cli
or
push
xor
xor
inc
push
pusha
insb
jle
xor
shll
mov
fsubr
imul
cmpsb
imul
imul
cmpsb
imul
and
xor
shll
dec
pop
jo
shll
rcrb
hlt
push
cmp
sub
cmpsb
imul
imul
insb
lcall
xor
pop
outsb
adc
dec
rcll
fnstenvs
ds
cmpsb
imul
cmpsb
imul
fsubr
hlt
add
or
shll
dec
pop
xor
shll
js
xchg
test
xor
sarl
dec
sarl
iret
add
cmp
dec
shll
push
xor
shll
imul
cmpsb
imul
cmpsb
imul
hlt
push
inc
adc
sub
xor
ss
push
data16
xor
shll
mov
xchg
dec
rcr
lock
and
ds
pop
push
je
xchg
movsb
mov
insb
lcall
or
dec
mov
sub
inc
pop
dec
shll
mov
xor
rcr
call
flds
inc
sbb
ss
cmpsb
imul
imul
mov
cld
push
inc
sbb
xor
xor
sarl
dec
push
push
dec
xchg
lcall
inc
adc
lcall
pop
cmpsb
imul
insl
lcall
inc
dec
imul
imul
imul
mov
lock
and
xor
sarl
dec
push
push
dec
xchg
xchg
dec
shll
in
clc
or
imul
imul
imul
mov
or
push
sub
shll
test
mov
cld
lcall
cmp
lcall
cwtl
cmpsb
imul
dec
mov
jg
push
fwait
cmpsb
imul
dec
shrl
cs
jbe
xor
rcrl
pop
ss
in
cld
or
xor
jmp
pop
nop
add
lcall
add
imul
imul
lcall
pop
outsb
subb
imul
xor
add
add
push
mov
add
add
nop
push
push
adc
incl
xlat
sbb
push
sbb
sub
in
iret
adcb
mov
push
add
sub
mov
shlb
decl
mov
mov
inc
clc
cmp
mov
adc
adc
mov
or
incl
mov
sbb
sti
cmp
aas
and
lea
mov
or
dec
sbb
jle
std
push
xchg
mov
sub
andl
cmp
nop
ja
xor
mov
jnp
lcall
jmp
cwtl
fbstp
aad
add
xlat
out
test
push
mov
xor
jmp
dec
out
jecxz
xchg
jmp
sub
jne
stc
mov
scas
sahf
push
mov
push
xor
adc
call
jmp
testl
les
jo
imul
in
lret
inc
cmp
xchg
adc
inc
mov
pop
jg
enter
mov
rcrb
pop
roll
dec
cld
lods
cmpsl
fbld
or
faddp
outsb
mov
mov
jl
add
jns
andb
jmp
ljmp
ja
fcomps
into
pushf
data16
or
mov
sarb
xchg
lods
nop
imulb
sub
jnp
orl
lock
sub
aaa
inc
mov
test
or
movsb
pop
aad
lods
sar
jg
cltd
push
push
xor
or
add
jo
out
pop
test
pop
pop
inc
inc
decl
jnp
ljmp
mov
bound
fidivl
and
call
jl
inc
or
repnz
push
repz
sti
retw
jmp
lahf
xchg
mov
sub
ljmp
roll
sub
jno
out
jge
mov
sbb
clc
mov
cmp
mov
mov
out
testl
mov
mov
jp
mov
add
inc
inc
daa
sub
in
mov
push
cmp
test
aas
and
arpl
lock
push
scas
xor
xlat
jbe
mov
xchg
fisubrs
mov
adc
popf
cli
das
cli
scas
scas
cld
repnz
rorl
insb
pop
adcl
pop
mov
push
cmp
outsl
sar
jmp
pand
add
xor
enter
popf
loopne
mov
mov
lcall
imul
mov
lods
sbb
mov
push
sbb
jmp
add
sbb
test
mov
je
ficomps
lcall
sub
push
cmp
pusha
sub
lcall
aaa
adc
add
push
les
pop
lcall
rorb
or
aas
jbe
mov
aaa
sbb
push
dec
bound
movsb
das
xor
orl
jg
pop
add
dec
pushf
xchg
add
mov
subl
outsl
lea
pop
movsl
aas
mov
ljmp
mov
nop
fldenv
outsb
mov
mov
movsb
xchg
inc
mov
inc
lcall
mov
inc
rorl
sbb
ret
or
imul
call
jo
mov
xchg
fbld
pop
imul
int
lcall
fstps
lcall
mov
mov
cmp
or
imul
fs
daa
ret
mov
dec
sbb
jno
dec
or
cltd
mov
mov
add
pop
pusha
aas
cli
and
cld
jbe
cmp
inc
outsb
sbb
inc
cmp
jnp
pusha
rorl
and
addps
inc
movsb
dec
push
int
xchg
dec
sub
subb
push
popa
inc
bound
dec
xchg
mov
cwtl
es
hlt
test
mov
push
addr16
test
pop
jns
and
cmp
jne
lods
push
sahf
call
push
xor
loope
mov
or
jne
sub
cs
sar
into
incb
clc
sub
pop
lret
xchg
cmp
in
inc
cmp
imul
jb
add
mov
push
adcb
adc
lret
negl
dec
jmp
adc
push
aas
cmpsb
push
xchg
test
enter
call
shlb
sub
call
mov
sub
mov
notl
jbe
inc
add
movsb
mov
sub
pop
mov
decl
sub
stc
pop
fistl
sub
add
dec
and
test
incl
dec
or
jmp
out
cmpsb
pop
fbstp
jnp
or
mov
daa
addr16
ret
jae
aam
pop
cmp
sbb
stos
pop
add
add
std
call
out
and
es
and
and
popf
je
popf
and
pusha
ljmp
fldcw
mov
mov
stos
aam
icebp
cmpb
dec
xlat
adc
sbb
clc
jp
pushf
cwtl
cmp
or
sbb
outsl
adc
xchg
push
insb
jne
adc
mov
dec
cmc
sub
mov
je
movsl
fbstp
or
inc
lahf
push
lret
sub
inc
rcrl
in
pushl
mov
mov
arpl
mov
add
dec
divb
adc
dec
insl
movsl
or
or
add
sbb
cmpl
fnsave
jns
test
ljmp
lock
pop
nop
sub
mov
jnp
or
adc
pop
pushf
cmp
idiv
lcall
je
sub
lods
stos
gs
cmp
and
clc
test
ret
push
fldcw
push
pushl
push
dec
lds
sahf
push
sub
out
jnp
inc
mov
call
clc
aam
push
push
pop
mul
stos
push
push
pusha
clc
cli
outsb
in
and
clc
incl
sbb
sbb
imul
sub
mov
mov
das
jmp
int
in
jno
sub
mov
enter
gs
push
pop
and
dec
mov
ljmp
incl
mov
jbe
fs
mov
and
setb
cmp
mov
jg
clc
decl
push
mov
pop
loope
pop
adc
call
mov
sbb
xchg
inc
mov
ljmp
movsb
pop
into
mov
je
and
push
jg
and
movsb
and
sbb
pushl
jmp
cmp
push
inc
add
loopne
jecxz
ja
inc
movsl
int
daa
sbb
call
sbb
dec
lock
aam
xchg
ficoml
fs
adc
push
adc
xor
mov
or
cmc
mov
shlb
push
fistpl
pushf
jl
orb
cltd
jnp
cmp
sub
rorl
leave
insl
cmp
sub
inc
es
pop
in
push
inc
call
incl
and
xcrypt-cfb
cmpsl
cmpsl
push
adc
je
fs
and
rcrl
mov
mov
decl
pusha
xor
loop
out
cmp
xchg
int
adc
xor
cmp
sti
jmp
cmp
es
push
jl
movsb
jg
pushl
mov
fdivrs
add
mov
leave
or
out
stc
js
cmpsl
sbb
incl
mov
outsb
mov
push
shl
push
outsb
or
call
decl
sub
and
sbb
sub
movsb
pop
mov
lcall
adc
adc
out
push
mov
in
inc
push
inc
in
iret
ds
push
in
inc
mov
out
cmp
add
mov
jnp
popf
out
jl
jg
les
sbb
or
dec
ds
rorl
jnp
shrb
aam
rclb
xchg
xchg
insb
add
add
cli
movsl
dec
push
cmp
lahf
fistpl
mov
incb
shlb
jb
popa
jmp
test
test
insl
imul
ret
ljmp
addr16
mov
dec
pop
out
lret
mov
imul
xlat
fld
inc
std
sbb
jg
incl
enter
jb
mov
ja
ja
out
xchg
outsl
push
pop
enter
call
cwtl
adc
pop
insb
je
das
push
jns
xchg
test
jbe
adc
ljmp
cld
and
xor
dec
loopne
mov
push
arpl
ds
dec
shlb
test
fimull
push
mov
jge
mov
dec
mov
cmp
jmp
fsubrl
push
rsm
sbb
jge
jo
rcll
leave
ret
and
dec
jl
call
aam
jg
test
int3
xchg
int3
iret
add
clc
jmp
lea
sbb
sbb
pusha
sbb
mov
xor
test
xor
xor
aas
xchg
inc
mov
outsl
decl
xchg
cmp
sahf
movsb
push
dec
sub
jb
xchg
repz
rolb
mov
js
push
arpl
xor
mov
jmp
out
aad
mov
adc
xchg
mov
fs
and
lods
adcl
dec
imul
int
nop
sbb
lods
repz
ret
dec
das
icebp
call
das
jmp
outsb
xchg
add
cltd
scas
and
enter
pop
cli
mov
adc
push
jno
daa
mov
in
pop
subl
jmp
sti
and
sarb
inc
cmpsl
mov
mov
imul
sbbb
add
mov
xchg
jno
mov
outsb
lcall
and
decl
jnp
mov
jo
mov
out
cs
mov
shll
incl
mov
jns
mov
dec
aas
dec
mov
ret
xchg
sbb
outsl
std
jg
ljmp
push
mov
lcall
repnz
decl
test
out
aad
in
pusha
jg
mov
dec
test
adc
fcomps
test
mov
call
inc
push
fnstsw
mov
xlat
adc
rclb
cli
xlat
scas
mov
movsl
dec
mov
decl
lds
aas
addb
cmpsb
push
jae
mov
cmc
ret
jmp
mov
add
or
cmpsb
lods
into
inc
in
push
daa
sbb
mov
mov
bound
cmpsl
decb
cmpsb
inc
cmp
pop
pop
push
scas
in
addr16
call
into
test
mov
push
mov
ret
xchg
xor
inc
add
scas
sbb
decl
ret
sbb
sbb
pop
push
stc
rcll
in
sbb
outsb
movsb
fwait
in
dec
sub
add
call
pop
mov
bound
out
scas
rcrl
adc
fwait
adc
mov
sbb
mov
aam
mov
or
mov
xchg
jp
mov
sbb
sbb
mov
imul
mov
incl
xchg
mov
lea
dec
arpl
in
sbb
mov
lcall
cmpsb
push
adc
mov
cwtl
imul
popa
int
mov
xchg
mov
in
mov
pop
pop
movsb
or
cmp
mov
ret
stos
stos
jb
popa
pushl
loopne
jg
xchg
mov
mov
fs
xor
pop
cmp
repz
clc
and
dec
pop
xor
xor
push
inc
mov
lahf
iret
mov
decl
mov
scas
sub
aam
xor
mov
push
mov
scas
and
pop
out
push
mov
pop
cli
pushl
fsubrl
mov
inc
hlt
ficomps
and
jecxz
inc
aad
sbb
sub
imul
pushf
aad
pusha
cmp
push
push
cmc
cmp
dec
add
incl
inc
push
sub
mov
and
popa
or
and
dec
mov
mov
test
mov
std
pop
testb
fistpl
xor
cmp
fisttps
ss
mov
out
mov
dec
jne
jbe
push
jb
movsl
push
inc
mov
inc
and
or
ljmp
stos
add
stc
rolb
insl
add
loop
mov
dec
pop
adc
ljmp
xchg
xor
les
neg
mov
fsubs
lcall
leave
pop
add
xor
push
jp
sti
push
jo
cltd
push
jl
test
hlt
decl
popa
leave
outsl
loopne
insb
arpl
sub
fucomp
mov
cmpsb
jnp
ljmp
test
mov
int
pop
adc
mov
mov
pop
mov
jbe
out
jns
inc
jl
pop
push
jmp
xchg
inc
ss
data16
jle
adc
xchg
mov
nop
ret
sbb
push
cld
add
arpl
sbb
dec
loop
gs
inc
shrb
dec
push
cmp
pop
fucomip
call
movsb
scas
js
xchg
xchg
iret
pop
stos
xchg
aaa
push
mov
lock
aam
lods
xor
or
call
dec
xor
inc
cld
or
xlat
dec
loope
mov
adcb
jmp
pop
fs
aam
cld
jge
or
or
add
stc
mov
mov
mov
cwtl
into
dec
lock
mov
test
inc
xchg
test
incl
push
adc
mov
repnz
loope
cmpsb
es
lods
lea
push
push
out
mov
in
ror
rorb
xor
nop
mov
das
incl
clc
push
xor
int3
mov
movsl
in
negb
cmp
and
xchg
xchg
or
and
pushl
jo
es
add
stc
add
pop
mov
fwait
lock
jp
pop
mov
dec
in
loop
jmp
xchg
cmp
movsl
xchg
add
jbe,pt
sbb
arpl
fistps
mov
stc
sbb
xor
movsl
cmc
jbe
cmp
lcall
repnz
fcomps
shl
sbb
lods
jg
cmp
ss
jbe
outsb
jle
xor
push
inc
call
inc
sub
data16
incl
jmp
sbb
inc
xor
jl
dec
adc
sti
mov
pop
loopne
out
push
cmpsb
negb
push
cmpsb
rolb
enter
mov
mov
in
dec
ljmp
push
jbe
loopne
fdivl
cmpsl
xor
jg
cmc
xor
pop
sbb
xor
and
or
xorb
and
jmp
jecxz
jns
sub
mov
xchg
cmpsl
push
inc
scas
movsb
sti
add
cmc
jae
insb
pop
test
movsb
aas
fwait
ljmp
pop
cmp
icebp
repz
scas
dec
sahf
clc
aam
les
int3
mov
test
es
sbb
and
scas
je
iret
sub
xchg
vpxor
mov
add
fstpt
inc
fcomps
and
push
adc
clc
ficoms
pop
call
ljmp
pop
inc
movl
mov
in
pushl
mov
insb
sbb
mov
pop
outsb
imul
in
mov
push
push
out
xchg
aad
pop
pop
cmp
fmuls
movsl
pushl
clc
lods
sbb
sti
negl
loopne
xor
ljmp
negb
add
std
test
push
repnz
fistpll
jg
test
sbb
mov
jmp
adc
sar
push
notl
push
or
pushf
std
movsb
sbb
fsubr
lcall
lods
xor
lret
or
mov
mov
or
dec
adc
clc
jb
mov
dec
jno
clc
outsl
lock
push
sbb
fmull
cmp
sbb
push
ficomps
out
mov
sbb
mov
pop
aam
or
mov
aaa
scas
and
test
lcall
cld
dec
xor
js
mov
mov
jmp
sti
sub
jmp
dec
cmpsb
mov
outsl
je
fmul
hlt
xchg
and
inc
pop
sar
das
std
scas
test
adc
jb
sti
mov
pusha
or
mov
fistpll
dec
dec
in
stos
imul
std
pushl
scas
outsl
outsl
cvtps2pi
das
out
dec
lods
inc
ja
sbb
pop
pop
bound
repz
loop
pop
pop
sahf
rclb
insb
cmpsl
rep
ret
clc
mov
incl
jmp
stos
cwtl
dec
mov
insb
dec
and
addl
sub
jge
inc
dec
mov
jmp
idivb
push
aad
out
pushl
cmp
dec
jge
mov
mov
fdivs
cmp
mov
loop
or
insl
add
test
cmp
hlt
inc
adc
inc
loopne
adc
mov
es
sub
shrl
inc
dec
je
shr
mov
inc
decl
push
lds
lahf
inc
mov
sbb
xor
push
mov
lods
aaa
incl
test
adc
mov
mov
int3
fcomp
xor
cmp
test
ljmp
lock
sbb
ljmp
xor
mov
mulb
es
adc
xlat
or
in
aas
or
icebp
push
xor
decl
jecxz
jg
repnz
cmpsb
mov
movsb
imul
daa
sub
ss
in
rorl
ljmp
add
ret
inc
mov
sub
inc
cwtl
push
popa
aam
push
pop
mov
popa
dec
insl
dec
roll
mov
incl
sub
addr16
sub
pushf
ret
lcall
add
jmp
inc
std
sub
fisttps
inc
pushf
xor
inc
add
jmp
test
insb
lods
in
insl
imul
in
test
sbb
jo
lcall
pop
dec
pop
or
ret
movb
add
mov
pop
xchg
sbb
sarb
ds
lock
fisubrs
push
mov
sub
xchg
or
leave
add
in
push
pushl
loope
mov
ret
mov
jp
sub
scas
cli
xchg
scas
sbb
lcall
mov
scas
lret
out
cmp
pop
sahf
push
xorl
decl
cmp
scas
cs
insb
adc
arpl
andl
mov
jnp
call
inc
jno
push
ljmp
or
repnz
stc
int
enter
mov
mov
or
sbb
xor
sahf
leave
iret
aaa
mov
cmp
sbb
cmpsb
or
fistl
sar
pop
loopne
into
leave
loopne
sub
jp
outsb
hlt
js
cmp
sub
push
decl
sbb
xchg
adc
xchg
mov
fcoms
fs
mov
add
ljmp
mov
mov
mov
jmp
faddl
movsl
mov
aad
test
repz
mov
push
outsb
imulb
xlat
sub
jg
cmp
in
cwtl
test
imul
cltd
into
test
hlt
jb
pushl
xchg
repz
adc
jne
int3
jg
mov
mov
push
xchg
lcall
fidivrs
insl
jb
mov
xchg
loop
and
or
inc
nop
insb
decl
sahf
and
sahf
and
std
pop
xchg
imul
push
mov
pushl
push
adc
mov
fcmovnb
data16
cwtl
jbe
mov
inc
mov
leave
ret
test
ljmp
push
add
inc
dec
sub
insb
cmp
mov
movsl
in
leave
test
adc
enter
pop
movsb
gs
call
pop
popw
hlt
jge
ljmp
fwait
loop
push
lods
out
mov
sbb
jae
fistpll
fucomip
adc
cmpl
shlb
mov
xchg
sbb
mov
cmp
imul
lcall
adc
test
ret
add
rcll
sub
rcrb
aas
cmpsl
push
push
ljmp
mov
or
sbb
fisttpl
dec
pop
icebp
jmp
dec
pop
insl
out
mov
cmp
aas
pop
lods
movsb
sub
mov
jle
xchg
int
xchg
das
xchg
jecxz
out
pop
or
inc
sub
jae
push
call
leave
sub
ret
mov
and
and
sahf
jl
in
lret
cmp
dec
mov
push
adc
cwtl
jae
pop
lahf
das
mov
mov
loop
sbb
push
movsb
adc
fbld
mov
pop
xchg
incl
es
and
dec
mov
sbb
lock
fisttps
cltd
cmc
rolb
mov
insl
mov
out
cli
stc
push
outsb
fcomp
inc
sub
pushl
js
imul
btr
pop
pop
stos
or
adc
incl
add
sub
adc
sub
les
and
push
fsubrl
push
xor
jmp
push
leave
jle
insl
and
pop
jl
pusha
in
fidivl
imul
ret
decl
pop
and
mov
cs
fs
push
jmp
jo
pushl
pop
and
shll
loop
repnz
jp
repz
fdivs
rcll
push
insl
jg
and
xchg
cmp
and
inc
bound
or
xchg
les
popf
in
aam
jg
ljmp
push
or
cld
mov
xchg
jg
enter
push
mov
movsb
sbbl
mov
adc
imul
out
add
cli
negb
mov
jecxz
cld
sti
jbe
out
decb
pushf
and
ficoms
xchg
popf
pop
lods
cwtl
daa
int
icebp
add
xchg
into
lods
insb
rcrl
pusha
outsl
in
clc
outsl
cmc
xor
sub
push
sub
xchg
pushl
cmp
jecxz
adc
cmp
lock
mov
imul
sti
incl
pop
test
subl
xchg
leave
mov
ss
pop
jmp
push
cmp
ss
cmpsb
pop
inc
xchg
addr16
lods
icebp
call
pop
add
pop
pusha
sbb
dec
cs
test
cmp
dec
leave
in
ljmp
push
add
mov
add
rorl
nop
jns
mov
fisttpl
adc
push
lcall
call
mov
or
pop
xor
jmp
mov
xchg
mov
mov
adc
sbb
mov
mov
sub
ret
sbb
ss
mov
out
mov
fbstp
sbb
shrb
fldl
sarb
adc
sar
jmp
inc
in
out
lock
test
enter
aaa
das
sub
decl
dec
imul
jno
mov
popf
pop
scas
fnstcw
arpl
jl
pop
lret
xor
fisttps
pop
sbb
add
stos
push
dec
cld
mov
fists
int
lcall
cltd
sti
shlb
xchg
mov
loop
add
xor
lret
loope
cmp
adc
call
jmp
mov
cmp
aaa
or
cmp
call
push
aad
inc
lock
mov
cmp
jo
fcoms
inc
cmp
dec
xchg
dec
sahf
int3
ret
jg
fsubrp
adc
or
loope
mov
mov
stos
cmp
inc
shll
xchg
dec
add
dec
stc
ljmp
cmpsl
add
fistps
add
sub
popa
add
xchg
fsub
dec
lret
mov
in
inc
jge
jge
gs
enter
pop
cli
pop
daa
int3
sbb
pop
movsb
sub
pop
jo
std
clc
mov
sbb
sbb
dec
xor
fsub
or
sar
fcomip
pop
insb
scas
jno
mov
arpl
enter
mov
xchg
shrb
lcall
fsubrl
jo
cmp
movsb
pop
sbb
cmp
incl
cwtl
ret
pop
andb
xchg
outsb
xchg
jb
inc
jp
inc
dec
ret
aad
sbb
decl
mov
xor
imul
mulb
bound
fists
sbb
pushl
or
mov
out
dec
add
scas
push
jne
stos
jmp
inc
push
mov
dec
bound
jle
lcall
out
sub
in
jmp
pop
insl
and
decl
lcall
dec
sub
adc
add
hlt
jne
repz
fisttpl
or
out
mov
or
fucomip
pop
rcll
lret
push
ss
pusha
mov
call
rcrb
imul
fmuls
imul
lret
in
mov
mov
out
roll
jbe
call
add
and
fmuls
sub
and
cltd
test
dec
adc
loopne
lret
add
mov
sub
ds
mov
addr16
add
pop
loop
gs
cmpl
cmp
sbb
js
mov
pop
aas
in
call
adc
xor
inc
sbb
outsb
push
sarb
mov
dec
add
mov
incl
jo
pop
sbb
xor
negl
add
pushl
pop
xor
push
dec
mov
add
cltd
adc
loopne
inc
ficoml
cmc
rcl
jo
mov
cmp
sbb
pop
mov
add
dec
mov
enter
push
std
mov
inc
insl
pop
jno
jl
std
rclb
movl
pop
mov
sbb
sub
cmp
mov
cmp
stos
push
push
cmp
mov
leave
add
mov
imul
jg
test
dec
push
out
hlt
aas
lods
outsl
mov
das
cmc
js
xor
aad
xor
pop
stos
add
mov
fmul
ljmp
fists
mov
sbb
mov
movsl
lret
popa
and
inc
scas
sub
out
out
int
cltd
jb
iret
jmp
jns
mov
adc
mov
push
jb
dec
int
mov
jp
push
lods
das
hlt
call
add
pop
push
or
dec
add
sbb
outsl
lret
cmp
das
cmc
mov
testl
dec
scas
ljmp
insl
sti
mov
or
bt
lods
es
nop
loop
nop
mov
outsb
xchg
cmp
pushl
inc
mov
addr16
push
xchg
outsb
mov
adc
ret
decl
sbb
stc
das
testb
push
sarb
outsb
cmp
mov
jmp
add
rol
in
icebp
sahf
lock
cmp
lods
sub
xor
xor
pop
or
xlat
mov
lea
popa
and
decl
std
into
sub
cmpsl
aaa
les
fnstcw
pop
mov
jle
mov
call
scas
iret
xor
cli
lods
mov
push
and
jmp
sub
hlt
xor
jmp
fldenv
jle
xchg
jp
inc
aaa
lret
imul
sub
pop
loopne
sbb
jg
mov
push
mov
pop
sti
loope
push
add
shll
or
dec
loopew
jmp
xor
mov
ret
push
push
adc
ret
push
jp
jns
or
daa
loope
stos
sarb
lods
clc
dec
shll
and
inc
lret
dec
in
call
filds
jmp
loope
dec
sbb
jle
out
test
jg
lret
lock
out
pusha
and
cmp
sahf
out
test
jmp
call
sbb
xchg
mov
sub
fimuls
scas
cltd
aaa
sar
incl
stos
cmp
dec
sti
je
push
cltd
mov
leave
mov
mov
jecxz
mov
push
clc
outsl
mov
loop,pt
rorb
movsb
mov
lcall
cwtl
inc
mov
jbe
dec
bound
push
aad
orl
ljmp
dec
pop
test
in
push
inc
cmpsb
fimull
xchg
inc
cltd
outsl
push
sub
add
sbb
je
sbb
inc
lea
bound
ss
scas
dec
in
fwait
mov
out
fisttpll
stos
shll
mov
jns
movsl
add
jns
jae
ljmp
cmp
mov
and
shll
xor
sbb
inc
xchg
push
push
xor
mov
mov
lret
stos
add
xor
clc
decl
xchg
daa
xor
scas
jmp
addl
loope
jg
add
pop
cmc
addr16
pop
add
fldenv
insl
lds
arpl
icebp
clc
bound
mov
std
mov
sbb
pop
xchg
call
in
in
jb
add
jg
call
push
scas
xor
les
pop
bound
lods
cmp
hlt
jle
mov
adc
ljmp
into
cli
sti
in
adc
xchg
lret
fwait
inc
fbld
hlt
inc
scas
js
lock
mov
sub
inc
sbb
mov
pushf
sub
loopne
dec
pusha
js
dec
sub
loopne
js
scas
or
out
cmp
pushl
mov
cwtl
or
mov
xor
fwait
sbbb
and
lcall
cld
mov
and
fnstsw
mov
push
stos
lahf
cs
icebp
in
pop
mov
icebp
mov
jg
fidivrl
jo
outsl
std
jg
aad
inc
aas
pop
fimull
inc
adc
push
idivb
pop
lcall
pop
and
add
xlat
fldenv
in
ds
jg
or
inc
mov
sarb
dec
and
pop
jle
movsl
call
pusha
jbe
add
bound
push
add
mov
push
pushf
out
loop
sbb
daa
cli
call
cmp
stos
rorb
cltd
fdiv
mov
negl
decl
pop
adc
popa
adc
loopne
lods
mov
mov
pusha
movsb
int3
mov
movsb
inc
aad
rcrl
xchg
jmp
ljmp
idivb
cmpsl
mov
jecxz
negl
leave
dec
xchg
fidivs
mov
divl
sbb
rcrl
sub
lahf
adc
pop
clc
dec
std
scas
and
mov
fnstenv
add
dec
mov
pop
xor
or
cmc
lock
inc
scas
dec
iret
jb
sub
cmc
in
dec
imul
pop
shr
push
aam
enter
cs
mov
scas
in
add
fs
jae
inc
pop
cmpsb
jae
cmp
xchg
sbb
cmp
es
mov
sar
aaa
leave
stos
les
mov
inc
push
sbb
inc
shlb
mov
sti
lret
push
jge
dec
fisttpl
mov
imul
loop
dec
cli
roll
push
mov
xchg
xlat
fmull
setae
or
clc
decl
xor
es
sbb
data16
clc
incl
incl
mov
or
mov
mov
imul
pop
sahf
mov
popa
ret
imul
loopne
inc
push
pop
xchg
lods
mov
hlt
dec
test
mov
mov
and
cmp
clc
pop
test
push
ljmp
add
jmp
arpl
push
xchg
jo
mov
adc
mov
das
and
ljmp
dec
pop
push
iret
pop
push
inc
xor
fstl
jge
lahf
jp
xor
jp
inc
lahf
mov
cmp
mov
jae
cmp
test
mov
into
rcrb
fstpt
bound
shrl
jbe
jne
loopne
and
pop
and
xor
xchg
lcall
jbe
cld
movsl
xlat
mov
popa
dec
push
aaa
pop
sub
sub
dec
inc
cld
decl
inc
pop
adc
mov
add
mov
pop
test
push
hlt
and
decl
add
pop
mov
jp
add
sarb
popf
sbb
call
jmp
notb
dec
into
push
xor
outsb
mov
adc
mov
mov
mov
enter
mov
pop
stc
sbb
cmp
ud0
lcall
fmull
into
mov
push
adc
sbb
push
cmpsl
push
cmp
scas
test
sbb
xor
std
push
stos
loopne
or
into
push
popf
pop
sbb
decl
mov
and
int
scas
pop
cmc
fiadds
fnstsw
dec
aad
inc
scas
adc
or
jns
subb
pop
add
imulb
lock
loope
mov
outsl
int
int3
and
inc
cltd
adc
push
jecxz
jg
lcall
es
adc
stos
bound
xor
fnstsw
cli
frstor
mov
xchg
fldt
mov
sti
cltd
imul
mov
ljmp
mov
push
lret
cltd
mov
and
sbb
mov
lcall
ljmp
ret
or
dec
xor
push
pop
fstps
cmpsb
xchg
push
popa
push
jg
call
push
shl
mull
int
jecxz
mov
out
fsts
pop
les
mov
lret
push
and
rcl
cmpps
cmpsb
in
test
push
nop
cmp
xchg
mov
and
xchg
aad
in
ret
scas
arpl
mov
shr
outsb
sbb
dec
or
lahf
xlat
decl
shl
les
push
das
push
fbstp
mov
out
inc
and
call
arpl
decl
incl
lods
loop
or
push
xor
dec
out
sbb
repnz
sbb
incl
mov
inc
stos
test
popa
sbb
add
adc
dec
mov
mov
lahf
aaa
cli
pushl
lods
adc
adc
or
loopne
lods
incl
decb
push
and
int
cld
stos
inc
incl
icebp
sbb
jge
dec
push
outsb
std
decl
add
push
popa
scas
data16
ds
dec
pushl
xchg
icebp
mov
stc
sub
out
xchg
incl
xchg
pop
xorl
push
push
in
lods
push
push
cs
and
clc
mov
inc
outsb
dec
jmp
ret
int
add
dec
and
jne
outsl
cmc
pop
mov
xchg
mov
adc
add
xor
insl
push
push
push
arpl
push
outsb
lahf
push
outsb
das
and
inc
pop
std
push
in
sub
pop
fwait
or
jno
sub
jmp
in
in
decl
into
pop
shl
fdivl
aaa
sub
ret
lcall
repz
mov
or
rcll
shr
mov
imul
in
xchg
lret
inc
pop
mov
push
insl
fildll
inc
hlt
clc
push
leave
pushf
stos
push
sahf
hlt
aas
jg
adc
add
and
jl
mov
arpl
add
inc
or
clc
insl
int3
scas
push
cmpsb
js
adc
aaa
and
fdivs
in
stos
arpl
xchg
dec
pop
jg
call
mov
xchg
leave
mov
std
inc
faddl
mov
scas
insb
sti
mov
ljmp
lea
and
inc
rcrb
push
cli
ret
cmp
sub
mov
arpl
add
push
imul
sbb
out
enter
sti
in
movsl
out
mov
and
mov
cwtl
jecxz
sti
pop
mov
stos
jp
mov
lcall
addr16
sbb
rolb
cwtl
mov
jge
jmp
imul
add
jle
jmp
das
cltd
in
rorb
inc
jle
sbb
ljmp
add
cltd
es
inc
pop
and
jle
cmp
xchg
jb
sbb
jg
call
sbb
jae
and
ret
jg
pop
lret
hlt
jnp
repz
mov
movsl
xchg
popf
jae
mov
dec
in
clc
jo
cmp
push
loop
or
mov
sub
in
outsl
aad
movsl
adc
test
dec
decl
push
fildl
insl
fidivs
sahf
xchg
jnp
mov
pop
cwtl
jnp
sbb
data16
incl
inc
lahf
mov
xchg
pusha
outsb
and
mov
sub
mov
cltd
adc
cs
lret
push
cmpsl
test
iret
mov
mov
sub
pushl
insb
ss
or
fstpt
cmp
ja
ja
xor
out
in
fsubs
ror
pop
call
sbb
mov
mov
dec
jp
push
fisttpl
push
fwait
test
or
push
cmp
dec
mov
ljmp
sti
push
nop
aaa
inc
ret
jle
iret
and
popf
inc
movl
mov
or
test
fisubl
mov
mov
call
clc
incl
gs
xchg
je
xor
xlat
stos
add
mov
ljmp
movsb
dec
test
jecxz
into
add
ds
jb
loop
lds
jle
jmp
dec
pushf
pop
mov
xchg
ret
adc
popl
daa
push
out
add
test
lcall
cld
mov
sbb
pop
jge
fsts
loope
and
test
cltd
xchg
loopne
test
jmp
push
pop
pop
xlat
call
pop
sub
sub
incl
and
inc
lcall
dec
and
rolb
cmp
push
ljmp
hlt
outsl
ss
pop
xchg
fldcw
into
or
pushl
cwtl
jns
push
int
cld
mov
repnz
out
xchg
arpl
int3
cmc
push
sbb
call
inc
shll
dec
popa
fdiv
fstpl
popa
cmpsl
xchg
addb
mov
js
inc
stos
xor
dec
clc
or
and
cmp
add
push
dec
mov
cmc
sbb
movb
ljmp
inc
dec
mov
push
xchg
mov
sub
clc
add
mul
inc
ret
ficoms
cli
or
mov
mov
divl
add
push
aas
mov
iret
lcall
inc
xchg
mov
mov
ds
jne
and
incl
xlat
add
mov
jnp
adc
cmp
and
pop
loop
test
add
test
push
icebp
or
jmp
adc
incl
xor
sbb
pop
xchg
or
inc
mov
ja
push
or
push
outsl
aas
jno
jbe
sbb
mov
and
push
insl
mov
lcall
call
mov
dec
insl
icebp
int
insl
decb
shl
data16
xchg
nop
sub
mov
inc
xchg
cmc
mov
insb
ds
neg
pop
cmp
mov
mov
mov
jmp
dec
inc
pop
dec
jns
dec
out
pop
imul
sbb
fucomi
decl
inc
es
inc
gs
and
dec
popf
xor
fcomip
clc
lods
pop
movsb
das
movhps
sqrtps
mov
das
jbe
es
inc
add
decl
mov
movsb
scas
hlt
dec
mov
adc
jbe
cmp
mov
lods
jmp
push
ljmp
aam
inc
adc
cmpsb
in
inc
push
fidivl
bound
dec
mov
scas
push
test
decl
stos
mov
xchg
push
mov
push
mov
adc
adc
pushl
cmpsl
jg
enter
or
mov
or
jge
xor
mov
and
pushl
nop
addr16
stos
in
pop
popa
daa
cmp
cltd
push
rcrb
xchg
andl
movsl
stos
mov
std
lcall
sti
scas
cmp
fwait
and
mov
in
jge
xor
or
add
lcall
add
fsubr
sahf
pop
or
jl
lret
pop
clc
mov
lret
jl
imul
inc
and
into
les
scas
add
or
mov
ljmp
cli
mov
xor
mov
cld
sub
jg
loop
mov
pop
aam
and
shl
inc
push
jg
cli
and
sub
xchg
fsubr
decl
dec
inc
pop
jne
jmp
mov
pop
lcall
ds
mov
std
std
jmp
sti
sub
lcall
sub
insl
jbe
adc
imul
fsubrs
jae
fwait
pop
repnz
mov
mov
xchg
std
rorl
jnp
out
subb
repnz
pop
lods
inc
or
and
mov
mov
jae
movsl
addb
mov
icebp
xchg
int
cmp
dec
xchg
enter
pop
jo
mov
sbb
add
fcmovu
mov
mov
xor
ja
inc
sub
mov
icebp
pop
mov
mov
stos
ret
sahf
adc
sub
ret
test
mov
adc
or
dec
cmpsl
call
jg
mov
xchg
in
in
add
xor
sub
in
mov
ret
loop
aam
pop
xchg
mov
push
cltd
and
fdivrs
hlt
push
loope
mov
or
cs
incl
pop
loopne
mov
cmp
lahf
sarb
inc
jo
mov
enter
decl
lcall
cmp
or
in
sahf
aad
cmpsb
jle
and
lcall
cld
pop
cld
scas
ljmp
mov
cmpsl
xchg
cmp
push
data16
decb
sbbb
lock
sub
loop
mov
addr16
jmp
es
std
ljmp
adc
cs
xchg
sbb
les
addr16
mov
ljmp
cmpsb
ljmp
stc
push
les
test
pusha
ret
xor
inc
inc
fs
dec
lahf
cmpl
test
jnp
sbb
repnz
mov
clc
jle
mov
jno
int
or
pop
bound
cmp
ljmp
cld
inc
iret
dec
push
sbb
loopne
incb
inc
test
testb
rcr
mov
scas
fnstsw
shrl
jae
dec
mov
mov
push
mov
test
add
fadd
fs
dec
xchg
scas
push
jle
mov
call
hlt
sub
insb
dec
test
shlb
notb
test
ss
push
decl
test
or
aam
push
adcl
daa
push
pop
mov
iret
repz
ljmp
adc
xchg
and
xor
dec
ror
hlt
mov
imul
mov
jns
stos
jl
leave
xchg
addr16
push
inc
icebp
std
mull
xchg
dec
imull
lods
loop
fbld
fnstcw
aas
scas
push
in
inc
int3
das
or
in
lcall
test
xor
sysexit
jg
cmpsb
xor
jge
push
push
inc
pop
jl
dec
mov
mov
sub
aad
outsb
jb
sahf
pop
mov
test
fildl
test
fyl2x
xchg
clc
jmp
repz
sarb
rorb
mov
stos
cmc
ja
aas
pushl
das
fsubrl
gs
fdivl
push
or
lret
dec
dec
cld
test
cs
in
shll
adc
lods
push
ljmp
hlt
iret
fwait
and
leave
faddl
das
push
xor
mov
dec
mov
movsl
xchg
ljmp
insb
sbb
inc
ds
xor
es
lahf
out
xchg
test
add
jl
cmp
cmp
or
inc
in
aaa
mov
imul
fidivrs
mov
inc
pushl
mov
push
pop
add
pop
adc
add
jmp
sbb
cwtl
ror
pushl
push
aas
insb
cld
sbb
incl
shrl
test
insb
dec
out
ret
pop
dec
movb
push
lods
pushl
ds
xchg
adc
aas
pop
ljmp
call
rcrb
push
push
push
sbb
sub
jle
add
decl
pop
fs
jp
mov
sti
popf
jle
mov
jno
lcall
aaa
neg
pop
cld
mov
das
scas
ds
add
shll
or
cltd
mov
jp
mov
jge
jecxz
sbb
inc
dec
fs
xchg
insl
in
aas
dec
out
sbb
jl
inc
incl
sbb
pop
test
gs
dec
shrb
jle
mov
fidivl
in
pop
in
cmp
jg
xor
adc
stc
mov
sbb
lock
pushl
std
pop
icebp
jns
sub
ss
enter
das
jmp
xchg
adc
jbe
das
das
std
mov
add
fcoml
cmc
fldenv
std
pushf
mov
repz
outsl
lock
cmp
push
cwtl
pushf
js
mov
xchg
icebp
xchg
sub
decl
push
fildl
lahf
mov
gs
ret
or
lcall
pushl
xor
xchg
mov
popa
jb
shrl
rcr
and
test
cmp
addr16
movaps
loope
xor
int3
or
dec
xchg
icebp
stos
lcall
loop
push
sub
adc
pusha
pop
or
call
clc
xchg
out
xchg
jae
lcall
outsb
cld
add
aaa
lret
mov
fbld
cmp
pop
mov
cld
shr
rorl
jo
sbb
das
cmc
sbb
aam
xchg
pop
xor
dec
sarl
xchg
jmp
cld
mov
xor
push
fmuls
js
xor
call
cmc
jmp
fdivr
push
lcall
cmp
out
pop
out
lret
ljmp
bound
pop
jl
xor
jle
in
arpl
mov
fcom
jg
mov
lods
fxch
int3
pop
jbe
dec
push
outsl
pop
dec
loope
cmp
mov
das
add
push
cmovp
test
mov
in
push
das
cmc
decl
lret
push
jno
jbe
std
or
mov
pushf
mov
out
imul
pop
aam
dec
xor
lds
jo
dec
out
clc
mov
pushl
fimuls
jne
mov
test
jnp
test
jne
and
decl
dec
cmp
pop
mov
sub
in
add
jl
and
lret
jg
lahf
xor
mov
mov
es
push
xlat
dec
dec
sti
and
aas
lcall
loope
imul
orb
mov
mov
push
and
cmp
stc
dec
sub
ljmp
out
jne
and
mov
dec
sar
int
std
lcall
and
xchg
pop
cmp
mov
pop
leave
imul
inc
add
xchg
or
incl
bound
lret
aad
outsb
mov
add
sub
shlb
pop
sub
jecxz
inc
mov
push
pop
shlb
les
or
jge
sbb
mov
sbb
mov
mov
movsl
aad
js
pop
and
lcall
sbb
sbb
out
and
adc
scas
scas
outsl
adc
clc
fcompl
xchg
mov
adc
ss
cmp
or
mov
adc
xor
inc
or
das
stos
xor
and
mov
xor
mov
pop
sbb
push
adc
push
and
or
add
fwait
stc
imul
fwait
dec
mov
ljmp
push
add
mov
adc
insb
xchg
push
xchg
xor
push
push
aas
stc
icebp
gs
loop
jb
fimuls
lcall
jo
dec
int
pop
daa
cltd
popf
lock
in
clc
pop
sub
bswap
fidivs
jecxz
aam
fildll
sbb
jmp
std
repz
imul
adc
fnstcw
lods
sub
call
insb
mov
cmpsb
aad
push
mov
add
jp
fiadds
xchg
pop
into
and
outsl
bound
add
pop
pop
sbb
out
jnp
add
sarb
les
xor
lea
adc
inc
clc
xchg
cs
insb
shll
shlb
adc
push
or
jmp
and
dec
xor
nop
add
lret
fldenv
cmc
jmp
xchg
scas
jns
incl
ljmp
jmp
movsb
shll
adc
push
or
inc
jge
add
jnp
mov
push
push
inc
sbb
push
xchg
decl
xor
pop
ja
add
sti
mov
mov
inc
inc
test
mov
test
pop
dec
xchg
leave
dec
add
inc
xor
pushl
pop
sahf
outsb
inc
inc
stos
adc
cmp
lods
dec
iret
and
fildl
fistpll
cld
add
jg
mov
leave
mov
aas
pushf
or
pop
gs
lcall
aad
das
lahf
and
pop
pop
stos
lock
push
call
sub
dec
mov
or
iret
jg
fisubrl
inc
jmp
clc
push
push
test
sub
shl
dec
xor
out
outsl
sar
push
lcall
sti
mov
fsts
mov
movzwl
cmp
call
push
aad
mov
loopne
movsl
in
push
das
push
rorl
cmp
and
or
inc
rcrl
incl
xor
jle
fidivrs
mov
mov
lods
xor
outsl
jno
pop
das
loop
decl
lret
add
jae
sbb
inc
lds
mov
lcall
xor
pop
mov
ss
or
insl
cmpsb
jb
adc
jmp
fidivs
outsl
cmp
and
fists
pop
rcll
enter
scas
cmp
push
jae
xlat
divl
fchs
or
ret
das
lock
fildll
sub
ret
fmull
mov
in
xchg
jb
jmp
loop
idivb
imul
xor
insb
movsb
pusha
scas
xchg
adc
hlt
dec
scas
xor
scas
or
aam
out
mov
fcompl
jmp
mov
ds
test
sbb
ret
dec
pusha
xchg
mov
mov
je
rcl
bnd
fists
imul
sarl
and
mov
clc
outsl
call
and
outsl
call
in
inc
inc
pop
shlb
pop
test
pushl
out
aaa
pop
lds
pop
in
test
enter
ds
fdecstp
shll
inc
je
shl
cmp
stos
cmpsl
inc
dec
fldl
and
cld
sub
dec
pusha
outsb
push
test
mov
cmp
call
enter
xchg
ret
mov
xchg
loopne
ror
mov
pop
cmc
seto
sbb
cld
popa
dec
cmp
out
adc
enter
aad
popa
cmp
adcb
incl
jb
or
out
jno
test
stos
mov
xchg
push
mov
jnp
mov
mov
inc
or
sbb
fistpll
jp
cs
outsb
int3
repz
push
les
fldt
ja
mov
and
repz
lock
lods
out
push
cli
mov
dec
std
lcall
inc
mov
adcl
xor
insl
test
test
loop
or
jecxz,pn
into
xchg
popa
repnz
dec
aas
inc
push
int3
add
jl
sub
mov
and
rcll
adc
xchg
lahf
xchg
cld
mov
lock
cmpsl
adc
dec
test
int3
mov
lods
das
cmc
outsl
jp
dec
in
sbb
in
iret
inc
test
lcall
sub
mov
pop
sarl
les
or
cli
call
lret
mov
xchg
orb
dec
icebp
dec
popa
in
filds
xlat
and
mov
fadds
pop
decl
insl
leave
imull
or
jge
aad
imulb
sub
push
movsl
mov
je
aaa
and
cmp
xchg
addr16
sti
pushl
inc
sbb
lock
adc
subb
into
daa
push
cs
xchg
push
es
xchg
call
je
pop
popa
icebp
scas
mov
dec
jo
lcall
sub
mov
cmp
sbb
pop
stos
mov
ret
dec
jg
mov
jmp
int
sarb
lret
dec
and
sub
push
add
outsl
dec
xlat
cmp
mov
sar
iret
add
push
cmp
mov
push
stc
jg
insb
mov
pop
push
ljmp
jo
lea
pushl
lods
jl
push
je
mul
cwtl
cmc
repnz
imul
inc
xchg
cs
call
ljmp
lock
fs
aas
imul
and
or
push
lock
lcall
jmp
sub
mov
hlt
dec
add
push
mov
cs
xchg
jno
hlt
inc
call
cmp
call
xchg
xor
sbb
jb
xor
dec
std
dec
gs
cmpsl
and
add
xor
ljmp
addr16
mov
das
in
notb
adc
and
loop
fdiv
decl
out
xchg
pop
pop
sub
outsl
hlt
pop
sbb
repz
cmp
cmpl
icebp
ljmp
cmp
sub
imul
inc
and
bound
nop
push
dec
cld
cmp
push
or
mov
cmpsl
jecxz
push
xchg
mov
sbb
icebp
or
ljmp
jmp
mov
xor
and
sub
mov
jp
das
cmpsb
pop
repz
mov
mov
decl
cmpsl
mov
enter
loop
mov
inc
or
and
jecxz
xchg
pop
mov
es
leave
adc
sub
cmpsl
jo
xchg
add
outsl
lock
js
jne
sub
mov
mov
dec
shr
repz
jecxz
mov
incl
add
jmp
cmp
in
inc
test
push
jmp
push
shll
dec
in
jp
dec
mov
fdivs
std
and
mov
dec
mov
decl
pop
mov
sti
sahf
dec
or
daa
lock
mov
cmc
lret
mov
mov
xchg
outsb
mov
call
mov
add
and
popf
cli
and
sub
lea
mov
add
div
pop
ljmp
xchg
jnp
add
pop
sbb
and
mov
mov
mov
fnstcw
pop
push
jae
adc
lock
adc
incl
lahf
jp
imul
shlb
fidivs
add
incl
lcall
push
mov
inc
test
nop
incl
jl
or
sub
outsb
xor
das
ds
dec
call
dec
mov
pop
or
dec
mov
sti
fidivrs
call
jge
push
scas
or
sahf
fdivr
xor
clc
cs
and
arpl
test
mov
mov
addr16
mov
sub
es
inc
xchg
mov
mov
xchg
push
mov
sub
lcall
dec
push
xlat
sub
test
movsb
in
xor
pushf
popa
adc
xor
adc
fisttps
pop
mov
xchg
add
aaa
clc
jp
ljmp
pop
mov
call
and
jno
or
jecxz
inc
jmp
pop
pop
pop
mov
sub
cli
incl
gs
jne
inc
lahf
int3
pusha
dec
sar
call
jmp
lods
test
sub
xor
aaa
mov
mov
and
loopne
aaa
fbstp
loop
and
and
sbb
pop
out
xor
mov
call
cli
ja
loop
out
out
mov
testl
push
or
xchg
mov
fbld
int
movsb
fldl
cmp
and
push
jl
xchg
sbb
jb
test
std
cmp
cld
mov
mov
pop
shll
xor
cmc
lcall
insl
pushf
sbbb
and
dec
mov
pop
jns
pop
adc
rcr
lods
sbb
movsl
es
test
out
in
jge
pop
add
clc
jmp
ja
fwait
push
mov
xor
mov
sbb
ljmp
lea
mov
jl
sub
outsl
lret
lcall
mov
and
das
daa
adc
ficompl
popf
mov
cmp
movsb
adc
leave
sbb
dec
adcl
out
xchg
loop
loope
sbb
sbb
mov
mov
sub
dec
pusha
popa
sub
push
lcall
mov
int3
outsl
xchg
fistpll
xchg
rorb
imulb
xchg
or
ljmp
std
or
sub
xor
adc
stc
fsts
mov
add
lods
mov
adc
dec
popl
and
push
inc
push
fildll
dec
mov
mov
enter
mov
add
fidivs
cmp
pop
xchg
in
xor
push
mov
lret
jo
loopne
into
or
or
ljmp
repnz
call
rcll
lods
cs
pop
popf
mov
fimuls
push
loop
sub
neg
lds
out
sub
mov
leave
mov
xor
repz
js
loopne
or
ljmp
das
in
mov
or
xor
pop
imul
loope
mov
pop
jnp
cs
push
shrl
mov
scas
pop
mov
pushl
bound
in
mov
push
cmp
movsl
pop
loopne
bound
dec
jb
xchg
lods
push
lods
adc
lcall
imul
fadds
int3
mov
lock
sub
push
xchg
jmp
and
das
lock
cmp
fidivs
inc
das
lods
and
dec
stc
xor
mov
cmpl
mov
mov
dec
pop
faddl
mov
clc
cmp
inc
or
push
jg
fwait
inc
mov
jle
add
adc
ret
clc
call
pusha
popa
inc
cmp
mov
cmpl
std
jg
test
outsl
cmc
call
xor
sbb
cmp
and
adc
cmpsl
and
mov
push
push
shll
add
insb
pushf
jl
add
mov
aam
lcall
fwait
push
pop
jl
adc
xlat
add
cmpsl
ljmp
fs
into
je
subb
or
clc
cld
sbb
lret
xchg
ret
push
movsb
push
dec
ljmp
fmull
jbe
movsl
pop
push
sbb
add
pop
adc
jbe
pop
adc
insb
jle
jg
xor
xor
cld
testl
movsl
fiadds
xchg
mov
jno
dec
sub
mov
stos
xchg
icebp
aas
xchg
into
pop
in
iret
aad
cmp
loop
or
lds
loopne
inc
scas
add
cmp
adc
je
adc
bound
ljmp
add
mov
pop
stc
loopne
mov
test
ss
in
das
aas
rorl
adc
mov
fldl
sbb
out
call
js
push
cmp
dec
sub
cs
rorl
inc
movsb
sbb
jl
ljmp
std
push
push
movsb
sub
aam
push
aad
mov
dec
lret
mov
and
call
popa
jp
addr16
push
sbb
out
outsb
ficoms
in
xor
push
rol
xchg
sub
ds
pop
loopne
push
sbb
cmp
adc
sbbb
mov
stos
push
jecxz
arpl
incl
push
xchg
ds
cli
mov
mov
add
cmp
mov
das
lock
ffreep
dec
or
jmp
jns
add
dec
push
cmp
inc
insb
and
std
dec
scas
iret
jno
daa
or
cmpsb
sbb
mov
lods
jne
push
xor
movsl
lods
inc
gs
mov
xor
jmp
sbb
lcall
lds
addr16
bound
pop
std
mov
lcall
test
xchg
cmpl
incb
inc
cmc
add
icebp
cmp
cmp
subb
dec
cmc
mov
dec
pop
inc
popf
xchg
inc
fwait
les
stc
mov
cmp
je
pop
mov
fldt
mov
sbb
fstl
jmp
pop
clc
cmpsb
mov
movsb
sbb
pushl
clc
mov
das
insl
dec
pop
xor
test
and
pop
ljmp
hlt
inc
shl
mov
cmc
std
mov
cmp
std
outsl
cld
xor
cltd
mov
int3
adc
je
mov
call
into
nop
setp
mov
mul
repz
push
jle
jg
stos
cmp
prefetch
or
mov
fmul
nop
sbb
imul
inc
rorl
or
dec
jp
or
loope
jp
or
pusha
sti
call
xchg
pop
and
mov
aas
push
mov
jnp
arpl
push
rorb
mov
adc
hlt
sahf
call
push
jbe
mov
aaa
inc
push
fnstsw
xlat
loope
les
jns
ja
jbe
adc
clc
fbld
mov
inc
sar
enter
push
xor
lea
cmp
dec
mov
push
adc
jns
adc
cltd
xor
inc
jne
aas
adc
push
or
push
and
xor
stos
push
pushf
loope
or
dec
push
inc
push
push
ja
sub
jg
loop
flds
out
dec
jne
push
jmp
jecxz
mov
jg
ret
cmc
jbe
lret
jno
xor
out
jbe
je
movsb
add
jmp
cld
jl
mov
adc
push
mov
call
mov
push
inc
fnstenv
rorb
es
and
in
or
cmp
test
call
mov
gs
xchg
jle
mov
cwtl
or
mov
xor
inc
fs
les
pop
cli
sahf
inc
mov
pop
xchg
pushf
jbe
sub
scas
mov
push
inc
lcall
dec
xchg
push
push
rcll
adc
push
jns
outsb
out
fcoms
mov
mov
lea
inc
dec
dec
lcall
xchg
pop
mov
sarl
in
or
stos
push
fistps
imul
fwait
cmc
jmp
mov
fmul
push
ss
popf
out
inc
jb
into
imul
test
cmp
ljmp
add
xor
aad
jo
push
dec
mov
leave
popf
or
xchg
add
loop
sbb
in
out
test
ret
pop
fadds
pushf
cmp
mov
and
jbe
mov
sar
sub
lods
pop
jns
std
xchg
cltd
fistpll
js
dec
push
adc
loopne
mov
cli
repz
in
pop
int
nop
sub
decl
imul
cmp
and
out
ljmp
sub
aad
dec
push
arpl
adc
loop
aaa
add
bound
pop
lea
cli
ds
leave
cmp
pop
dec
mov
cmc
jmp
cmp
pop
jb
and
stos
loop
ljmp
cmc
ret
xchg
cmpsl
and
xchg
cli
enter
imul
add
decl
jbe
mov
mov
mov
push
lcall
decl
movsb
mov
mov
sarl
mov
xor
inc
fbstp
sub
or
push
dec
mov
sub
adc
mov
repz
pushl
push
cwtl
sub
adc
fucompp
lret
sub
ja
outsl
xchg
cli
pop
xchg
push
sub
aas
call
daa
int3
ljmp
lret
shll
or
hlt
mov
stos
push
stc
cmp
cltd
xchg
adc
lock
dec
mov
cmpsl
cmp
test
imul
dec
loope
jb
pop
jle
outsl
mov
dec
push
movsl
incl
call
dec
pop
and
out
scas
ljmp
fdivl
push
call
mov
test
and
test
mov
testl
call
idivb
fsubs
cltd
xor
inc
out
roll
sub
incl
idivb
or
xor
hlt
jmp
pop
scas
cmp
mov
mov
lods
outsl
push
loopne
mov
push
stos
mov
popf
loop
sub
mov
mov
lahf
mov
test
or
dec
insb
dec
jp
jle
roll
incl
xchg
pusha
or
ss
shrl
inc
adc
push
addr16
ljmp
inc
repnz
pushl
sbb
data16
jnp
cli
jmp
ss
insl
aam
pop
in
inc
stos
loop
decl
push
movsl
or
shrl
add
dec
dec
fistps
add
in
cmp
cmp
mov
xchg
xor
and
adc
into
bound
inc
jg
pop
loopne
sub
mov
js
aas
jae
jp
lock
xor
pop
pop
push
fcmovb
xor
out
inc
sub
cwtl
xchg
xor
lcall
stos
pop
imul
add
add
shlb
pushf
xchg
pop
jg
or
dec
pop
jae
loopne
stos
push
pop
dec
adc
ret
sbb
lock
ljmp
pop
xor
dec
out
xor
inc
test
out
movl
jg
test
in
inc
or
rclb
and
lret
cld
rcrl
or
decl
addb
add
push
sbbl
stc
xor
outsl
cld
hlt
jecxz
jo
cmpsl
xchg
popf
and
lret
push
cmp
ret
lcall
mov
test
mov
leave
lahf
lea
icebp
lcall
jb
cmp
xchg
xchg
jae
jno
lods
lods
repnz
jecxz
lcall
incl
and
mov
push
andl
rorb
xor
es
push
or
lea
xchg
sub
lds
mov
int
leave
scas
cmp
ja
push
pop
cmc
das
or
mov
stos
and
test
push
loop
das
hlt
aas
lock
mov
test
sahf
mov
add
cld
jge
xor
jmp
pop
fsubrl
bound
pop
sbb
pusha
jmp
test
jp
dec
dec
mov
movsl
mov
out
cmpsl
dec
pop
cmp
sub
mov
loopne
ja
ja
mov
into
inc
adc
mov
fwait
sti
xor
scas
pop
cmp
pushl
pop
sub
xor
popf
ficoml
fisubl
cwtl
inc
and
sbb
push
and
sub
jle
push
sub
lcall
in
adc
testb
or
sahf
sub
cmpb
mov
pushf
cmpsl
xchg
sar
jmp
xchg
nop
pop
push
mov
call
test
mov
cmp
cmpsl
mov
push
mov
inc
loope
insb
mov
add
inc
popf
in
add
test
xor
jmp
das
ror
fldcw
outsl
xor
aas
push
xor
dec
ljmp
or
loope
ss
ret
dec
js
sbb
mov
pop
inc
loopne
and
js
ljmp
and
sbb
mov
imul
jnp
or
in
mov
lcall
and
pop
es
pusha
fwait
mov
xchg
scas
pushl
sub
lock
cmpsl
or
inc
lcall
push
sub
mov
add
decl
cmp
sbb
icebp
push
push
mov
sti
fidivs
in
cmpsb
addr16
in
ficoms
call
xor
mov
xchg
cwtl
loope
cmp
scas
loop
mov
inc
shrl
icebp
jg
stos
pop
popf
scas
cmpsl
mov
cli
xchg
cmp
cli
enter
mov
aaa
or
and
popa
mov
call
dec
cmp
inc
out
lds
mov
test
popf
popa
insl
mov
jne
dec
out
dec
imul
sbb
call
and
hlt
bound
and
clc
aam
mov
mov
xchg
cli
and
jo
imul
repnz
sbb
into
test
mov
in
sub
cli
jmp
sbb
dec
xchg
andl
ss
lods
add
bound
jo
mov
xchg
xchg
hlt
loopne
dec
ja
clc
xlat
das
pop
pop
outsb
pop
enter
fnstsw
fildl
out
jno
int3
mov
or
jmp
in
mov
jne
push
out
aaa
test
add
cltd
xor
call
cmp
sub
scas
sbb
aam
mov
ja
push
xchg
call
fwait
rolb
mov
mov
test
or
outsb
pop
xlat
dec
mov
arpl
lods
jge
jne
mov
decl
icebp
shll
jb
stos
js
sahf
pop
testb
xor
repz
outsb
icebp
add
movsb
loop
pushl
je
jnp
repz
shlb
loopne
test
ljmp
enter
dec
cmc
fs
int3
push
and
test
add
dec
decl
pop
pop
cmp
add
pop
jg
xchg
fisubl
and
lods
or
xchg
inc
mov
insl
dec
inc
in
sbb
outsb
outsl
icebp
ljmp
data16
inc
xorl
sbb
aad
fs
shl
loope
push
jecxz
outsl
lcall
movsl
test
enter
mov
movsl
scas
and
xor
jge
mov
mov
pop
push
mov
inc
das
mov
pop
cmp
bound
pop
cld
lcall
movsb
inc
shlb
call
push
inc
push
push
popf
out
pop
and
ret
add
popf
push
lods
xchg
mov
pusha
out
pop
ds
icebp
mov
xchg
mov
decl
movsl
ja
shrl
mov
incl
sbb
mov
mov
ffreep
lahf
xor
cmp
int
jno
fwait
std
jb
in
test
icebp
decl
inc
push
push
inc
pop
cmpsl
jmp
pop
add
sbb
ret
sub
shrl
push
mov
gs
xchg
rclb
aaa
cmp
ljmp
repz
pop
sub
or
dec
lea
punpckhdq
je
sub
dec
mov
aaa
clc
lcall
pop
test
movsl
ret
je
add
addb
test
mov
xlat
add
xchg
push
hlt
pop
cmp
add
daa
ds
and
pop
lahf
incb
jmp
dec
fsubl
mov
dec
lahf
outsl
test
aad
lcall
ret
pop
ds
pushf
popa
fistl
call
fsub
and
xchg
dec
ljmp
pop
dec
jg
sbb
adc
aaa
jmp
mov
shlb
in
jmp
aaa
push
sub
arpl
orl
mov
jcxz
inc
out
sub
jl
rorl
jl
xor
loopne
jne
jae
pop
pop
test
mov
lcall
cld
mov
clc
jecxz
out
cs
test
decl
pop
and
mov
sbb
push
enter
push
sarb
inc
jp
push
aad
pop
inc
mov
jmp
ljmp
aaa
gs
mov
into
and
mov
push
notb
inc
outsb
mov
add
pop
sbb
xorl
jle
ds
adc
rolb
test
pop
clc
pushl
cmp
jnp
pop
mov
add
daa
mov
or
xor
orb
mov
popf
inc
out
mov
push
xlat
push
mov
call
shl
lock
and
out
xchg
out
jnp
lahf
addr16
fstpl
loop
call
add
mov
sub
clc
push
ljmp
les
lcall
add
lcall
sub
fwait
subl
repz
sarl
cmp
jno
cmc
add
mov
aam
popl
movsb
aam
out
xor
cmp
in
xor
sar
pushl
mov
xor
stos
cmp
pop
lods
cs
ja
inc
stos
and
mov
out
ret
mov
cwtl
inc
out
xlat
inc
mov
popa
into
xlat
jmp
inc
outsl
aaa
loope
sar
lds
test
cmpsl
lods
leave
pusha
insb
mov
jg
pop
sub
call
jmp
les
push
xor
xor
outsb
cmp
lcall
scas
daa
add
dec
inc
or
push
mov
js
mov
out
sbb
decl
lcall
jns
push
cmpsb
jle
ljmp
pop
mov
sahf
sub
cli
loopne
mov
out
xchg
jnp
dec
or
jbe
cmp
cld
pushl
mov
mov
push
pop
decl
std
pushl
xorb
sbb
adc
jmp
push
cld
ljmp
lahf
add
dec
mov
or
push
adc
iret
rcrl
push
mov
ljmp
or
sbbl
or
push
jle
push
mov
fisttpll
data16
repnz
call
aaa
lcall
test
mov
mov
xchg
stos
stos
sub
mov
std
jnp
cmp
push
imul
mov
lcall
lcall
xor
inc
cmp
into
ss
dec
cmp
sub
adc
or
sub
dec
test
decl
dec
push
stos
pusha
in
das
lea
push
dec
mov
out
mov
jg
and
je
addr16
ficoml
loopne
cmp
mov
xchg
les
dec
cmp
loope
repnz
mov
in
cmp
fadds
lret
push
xchg
mov
das
pusha
inc
lods
mov
sarl
les
push
inc
push
mov
int3
bound
cmp
mov
outsl
pop
nop
xchg
pop
jnp
jnp
or
cmp
mov
nop
sub
adc
lods
mov
cmc
adc
fildll
mov
mov
or
jo
popf
cli
dec
pop
insl
jle
inc
xor
fdivrl
outsl
mov
and
pushf
sub
pop
out
es
push
xchg
lret
leave
loope
in
sbbl
pop
ljmp
cmpsb
xchg
dec
and
cld
sti
and
arpl
jg
ljmp
xor
sbb
mov
in
jae
and
std
sbb
cmp
lahf
pop
cwtl
movsl
pop
shl
iret
jecxz
mov
sti
lcall
pop
push
jge
ljmpw
sub
jg
loop
jp
movb
and
push
and
and
nop
cmp
sti
fnstsw
mov
push
dec
scas
ljmp
lahf
pop
lea
jg
jno
adcl
mov
sub
lods
cmpl
jmp
test
mov
test
cli
loope
call
sbb
cmp
pop
cmp
jmp
mov
data16
adc
sbb
dec
sub
cwtl
mov
lcall
xchg
push
pop
rcrl
jecxz
icebp
outsl
mov
adc
filds
jle
ficomps
sarl
xchg
shlb
ficomps
xchg
outsb
jb
ret
pop
xchg
fs
in
mov
cmc
sub
mov
jb
popa
mov
push
cli
lcall
cld
jnp
push
movsb
aas
pop
mov
imul
push
mov
pushl
adc
xchg
scas
push
clc
or
test
mov
add
or
cltd
lock
iret
sahf
cmpsl
hlt
sbb
pushl
ret
or
jp
or
pop
jb
jg
aad
mov
stc
cs
mov
movsl
sti
push
in
jecxz
leave
dec
stc
ds
xchg
push
outsb
sbb
jbe
in
xchg
cmp
das
daa
lcall
mov
sti
pop
movsl
ds
icebp
xor
popa
cmp
cmpsb
sbb
aaa
lret
xor
jg
add
and
xchg
ss
mov
pop
ds
fsub
pushl
dec
cltd
push
jle
mov
mov
out
iret
inc
fbld
fs
sub
inc
enter
adc
faddl
xchg
call
adc
insb
clc
ljmp
pop
sub
mov
test
pop
inc
pop
fdivl
mov
jge
dec
or
mov
rcll
stos
in
mov
leave
cs
cmp
mov
loopne
adc
mov
pop
xchg
sub
mov
mov
lcall
fstps
ss
sbb
cmp
xlat
repz
and
incl
call
movsl
pop
pop
sub
xchg
test
and
in
addr16
incl
aad
shrb
fisubs
repz
xor
ret
out
dec
adc
pop
imul
lcall
pusha
and
fsub
std
fistps
cmpl
pop
lahf
xlat
cltd
call
jmp
mov
or
addr16
jb
mov
lcall
call
aas
xchg
in
sub
fxam
jl
cld
sub
sbb
out
frstor
jbe
jmp
mov
call
aad
xor
shlb
push
dec
sti
cmp
ljmp
sbb
std
and
out
sub
icebp
pop
mov
xchg
leave
lcall
aam
ljmp
cli
pop
aad
push
jp
repnz
lcall
cmp
pushl
push
out
and
orl
les
addr16
push
adc
movsl
jno
aaa
ljmp
or
jg
ror
cs
sti
incl
dec
mov
xchg
push
lret
cmc
mov
adc
cli
pushl
mov
dec
mov
sti
insl
push
cmp
xor
lcall
les
movsb
not
es
and
jmp
and
inc
imul
daa
dec
push
sub
and
stos
or
push
cmc
pop
sbb
push
jnp
ret
cld
mov
pop
add
sbb
adc
jno
or
push
pop
push
xor
xchg
add
stos
stos
xchg
js
insb
decl
daa
lret
les
into
pop
xchg
cltd
and
test
pop
jge
adcb
fistl
adc
test
jecxz
push
call
cmp
inc
sahf
push
xchg
inc
xchg
mov
rol
xchg
dec
enter
and
std
jmp
lods
mov
sbb
sbbl
cli
jbe
js
cmp
mov
hlt
sbb
incl
xor
rcrl
and
arpl
sbb
lods
sbb
mov
lahf
mov
adc
sub
stos
sub
popa
push
jnp
fcoml
pushl
mov
in
stos
nop
sub
and
inc
shrl
sar
fildll
hlt
sahf
rolb
insl
ret
push
insb
lea
dec
out
add
subb
fsubl
int
jl
mov
fwait
pop
data16
shrb
jg
decl
push
jnp
pop
lcall
mov
mov
pop
sarl
decl
pusha
movsl
mov
imul
push
mov
arpl
pop
sbb
inc
sti
jl
adc
rcrb
loopne
mov
ret
mov
cmc
call
xor
push
mov
outsb
ja
je
cmp
js
cmp
mov
mov
pop
mov
nop
adc
add
fbld
into
mov
or
add
lcall
pop
sbb
insl
inc
lods
lret
mov
sub
repz
ds
jl
divl
cmp
xchg
fidivl
inc
add
jne
fmuls
pusha
pop
ljmp
hlt
mov
lea
push
sbb
iret
pop
ja
shll
pusha
pushl
les
xchg
sahf
push
jno
add
out
jge
cli
in
imul
repnz
sub
sub
es
adc
aad
ret
pusha
jmp
and
add
insb
push
scas
adc
mov
mov
int3
pop
pop
cld
hlt
adc
lcall
scas
inc
lods
outsb
jle
cld
loope
aaa
cli
jmp
mov
inc
jle
dec
lock
pop
dec
pop
lcall
mov
cmp
sub
stc
out
xor
mov
mov
sbb
incl
sti
xchg
inc
mov
loopne
movsl
inc
jge
pusha
inc
das
icebp
lods
outsl
jp
cmpl
insl
les
adc
lock
sub
inc
jg
addl
mov
mov
pop
mov
adc
stc
pop
push
xor
lret
inc
nop
mov
push
mov
jle
test
mov
mov
inc
or
decl
adc
lods
xor
popf
testl
mov
mov
lcall
jge
ret
bound
xchg
aaa
xchg
stos
lahf
mov
add
pop
pop
cmc
aaa
idiv
call
push
clc
sbbb
inc
jg
add
fists
dec
sbb
pop
push
jnp
or
pop
inc
dec
mov
ret
out
ja
sub
mov
and
inc
mov
in
test
xchg
pushf
aam
std
pop
inc
fs
and
mov
dec
jnp
adc
jb
add
or
iret
in
jl
and
xlat
into
adc
mov
imull
mov
int
int
ljmp
ljmp
xchg
push
jnp
pop
call
lds
fwait
cs
das
cld
call
ret
arpl
in
push
fstl
inc
mov
inc
or
into
jmp
xchg
cmp
rcrb
sbb
sbb
jb
fcoml
call
clc
outsl
lock
imul
push
inc
mov
adc
decl
sti
stos
cld
fidivrl
movsb
lret
push
leave
fwait
lret
xor
cmc
rolb
mov
mov
fbstp
add
cmpb
mov
mov
inc
mov
xchg
pop
inc
call
leave
int
push
mov
addr16
xchg
mov
out
insl
or
enter
lods
mov
out
mov
jbe
out
xchg
add
fdivr
fildll
pop
ljmp
nop
bound
loopne
xor
loop
incl
ret
mov
sbb
lds
mov
std
dec
std
cmpsb
out
lea
out
ss
data16
hlt
filds
lret
dec
or
mov
loopne
sahf
jne
mov
add
adc
lret
xor
lods
and
int
dec
lret
xchg
jbe
fimull
fstpl
repnz
xor
mov
movsb
mov
sahf
hlt
lcall
loopne
ret
daa
sbb
jno
fimull
repnz
call
cli
mul
icebp
jo
dec
jmp
mov
xor
adc
jl
insb
cmp
jl
push
lcall
icebp
jno
mov
sbb
ret
dec
decl
cld
out
sub
dec
rorl
mov
cmp
arpl
push
push
hlt
mov
decl
int3
rolb
inc
movsl
push
mov
xor
fdivr
jmp
stc
imul
lret
jl
mov
dec
iret
jle
jg
pop
into
int
xchg
roll
xchg
fsubr
jmp
loopne
xchg
sub
pop
pop
mov
push
lea
dec
xchg
call
xchg
lcall
mov
std
add
dec
mov
pop
decl
jno
stos
mov
fwait
add
mov
lcall
mov
loope
cmp
pop
or
jnp
adc
pop
call
enter
adc
jne
test
adc
dec
mov
sub
jne
lcall
aad
sahf
add
mov
aaa
mov
push
dec
das
fisubs
aaa
enter
jg
outsl
add
jp
ret
test
inc
push
xchg
pop
lret
lods
das
outsb
dec
cmp
jle
mov
imul
imul
dec
mov
xor
sub
push
push
sub
arpl
into
es
loop
dec
add
addr16
stos
mov
ret
dec
mov
push
roll
push
ror
add
xor
mov
incl
icebp
sbb
mov
mov
shl
in
cwtl
outsb
fmull
lods
decl
arpl
inc
sub
pop
lcall
stos
arpl
or
je
push
or
fcoml
jne
push
lods
outsb
xor
inc
loopne
add
push
lock
xchg
push
cmp
stos
scas
mov
or
or
cmp
imul
leave
xor
mov
adc
ljmp
int
lret
jae
or
lock
fists
out
pop
idiv
sbb
push
mov
or
mov
pop
xchg
xor
call
or
lahf
or
daa
jle
lcall
pushf
in
jecxz
insl
mov
in
jno
and
adc
xchg
shrl
incl
mov
mov
sub
push
mov
ja
sti
stos
fstps
sbb
inc
jl
jnp
push
lcall
int
or
xchg
jns
pop
idivl
stc
movsb
jmp
pop
cld
call
std
mov
jmp
mov
or
decl
scas
out
pop
lock
cltd
ljmp
cli
std
mov
jg
jmp
mov
cwtl
movsl
mov
xchg
mov
popa
mov
add
mov
add
js
push
pop
pop
mov
mov
or
int
ljmp
sbb
push
aaa
jo
xchg
imul
decl
adc
mov
rcr
sbb
pop
outsb
mov
mov
pop
addr16
in
jns
xchg
clc
inc
gs
jge
popa
mov
mov
ds
lods
movsb
push
imul
stc
jnp
adc
into
iret
xor
mov
call
jecxz
mov
xchg
testl
jg
jnp
int3
ret
or
sub
hlt
xchg
xchg
jns
ja
pop
fs
ret
pushl
aad
mov
push
imul
into
push
and
lea
cld
and
jnp
stos
jbe
pop
je
or
inc
adc
outsl
mov
std
ret
xchg
movsl
dec
add
adc
incl
mov
das
sub
push
xor
sub
loop
call
jno
inc
iret
hlt
daa
repz
fdivrs
cmc
hlt
xor
fbld
incl
sub
aad
clc
lds
hlt
scas
jp
data16
push
verr
pushl
in
or
std
push
js
jns
pop
inc
les
jae
pop
sbb
hlt
ljmp
xchg
sti
lret
ljmp
sahf
sbb
mov
inc
in
mov
cld
test
xorl
andb
loope
push
mov
adc
in
push
xchg
fisttps
scas
data16
push
pop
dec
pop
stc
xor
popa
stos
push
insb
call
aam
pop
shrl
cmp
sbb
mov
sub
fucomip
jmp
stc
hlt
shll
fstl
in
incl
sub
fistps
stos
lcall
lcall
andb
stc
lret
mov
rcrb
nop
ljmp
cmpsb
dec
ret
repz
mov
fsubs
fisubrs
dec
dec
pushf
cmp
das
std
xchg
cli
fadds
jge
testl
push
inc
and
push
xor
ljmp
lock
leave
mov
push
or
and
scas
adc
decl
stc
test
fdivrp
aas
sbb
mov
fwait
pop
out
test
adc
jb
daa
push
enter
test
aas
adc
movsb
dec
inc
fadd
mov
xor
decl
imul
push
inc
stos
inc
mov
cltd
mov
and
mov
mov
ljmp
or
inc
ret
jbe
xchg
sub
xchg
or
mov
and
xor
pop
xchg
clc
sahf
ds
jle
dec
cmpl
sbb
call
lret
xchg
fwait
jmp
cltd
adc
mov
xchg
loope
lods
dec
leave
inc
xor
lds
aad
push
call
in
mov
jbe
sbb
sub
popf
sbb
sub
mov
les
push
cmp
ljmp
in
std
imulb
xchg
aam
test
or
mov
mov
fstpt
push
jns
push
xor
inc
dec
pushl
cmp
cwtl
loope
cli
lcall
scas
pop
js
adc
dec
mov
or
loope
mov
jl
pushl
fidivl
int3
sub
pop
push
add
add
mov
adc
jg
pushl
xchg
dec
add
out
ficomps
inc
outsl
repnz
and
ljmp
pop
inc
aam
or
dec
jle
outsl
out
xchg
lahf
push
dec
dec
jge
and
movsb
pavgb
call
clc
or
dec
movb
pop
adc
arpl
jg
popa
popa
test
fiaddl
mov
addl
ljmp
movsl
adc
or
lock
call
testb
lock
test
pushl
lea
jnp
pop
xor
inc
push
push
xchg
dec
sti
inc
adc
call
jmp
mov
push
xchg
push
adc
sbb
xchg
pushl
int
or
outsb
mov
sub
std
fstpt
cmp
push
lods
push
push
mov
pop
xor
popf
js
dec
adc
adc
pop
fdiv
sbbb
incl
lret
xor
or
fldenv
sbb
ljmp
mov
enter
idiv
jg
fistpll
mov
dec
repnz
jl
aas
mov
test
test
loopne
stos
pop
adcb
jne
jne
loopne
sahf
jo
xlat
adc
lcall
cld
and
insb
push
sbb
and
pop
fcmove
or
test
push
xchg
and
push
pop
mov
mov
push
pop
sbb
rcrl
std
les
ds
or
mov
dec
sbbl
sti
fnsave
mov
aaa
jb
cmc
push
xchg
push
cmp
dec
push
enter
lcall
cmp
dec
cltd
aad
adc
fcos
pushl
clc
inc
jmp
or
in
xor
loop
push
or
mov
cmp
fdivrp
mov
mov
jo
lcall
clc
sub
pushl
clc
out
adc
xchg
insl
fsubl
mov
ret
dec
icebp
decl
mov
and
xor
in
shlb
or
sbb
dec
xor
lret
dec
pop
jp
call
mov
scas
cmp
popa
leave
jg
xor
sbb
jp
andb
popa
add
test
pop
into
clc
sar
pop
loopne
nop
lahf
js
sbb
neg
inc
lea
pop
push
sbb
and
mov
aas
inc
xchg
dec
xchg
jg
mov
negb
insb
fstl
iret
lock
sbb
sar
call
push
mov
cmpsl
jge
lahf
inc
cmc
stos
leave
ret
das
dec
test
xchg
sahf
sub
fbld
inc
push
jb
hlt
mov
and
stos
outsb
mov
adc
push
jnp
mov
je
pop
cld
movsl
push
hlt
and
cli
out
inc
push
js
mov
mov
std
mov
nop
pop
jb
fs
mov
mov
jg
lcall
in
push
sub
jb
sbb
leave
add
jp
fisttps
mov
dec
jne
jno
xchg
pop
mov
gs
call
inc
sbb
int
shll
adc
push
int3
loopne
insl
sub
scas
fldl
lea
dec
fstl
xchg
stos
mov
jns
or
fdiv
push
push
push
sub
cmp
and
add
add
call
xor
in
mov
cmpb
mov
xor
pop
aas
test
lcall
sub
push
sub
xchg
pop
sub
mov
inc
mov
ficompl
pop
sbb
push
setp
sub
lret
mov
mov
jg
out
aad
test
inc
mov
mov
sbb
mov
xchg
mov
dec
pop
jne
test
jl
jo
fst
aad
dec
jl
jo
mov
ljmp
in
les
rol
xor
jns
pop
add
sbb
or
ss
pop
pushf
insl
jp
sbb
iret
jmp
mov
ret
sub
test
adc
cmpsb
dec
sbb
call
jmp
push
inc
or
sbb
lahf
ja
adc
int3
push
cmp
jmp
fsubl
incl
lds
or
pop
push
stos
or
out
repz
sub
cmp
fwait
rol
std
int
xchg
sbb
addr16
dec
push
lret
mov
jmp
adc
xchg
loopne
add
pop
sub
sti
out
into
nop
fisubrl
pop
ljmp
mov
ret
js
pop
dec
xchg
mov
sbb
decl
or
cli
in
iret
adc
cld
cmp
dec
call
subb
mov
push
mov
cld
jnp
call
sub
pop
sub
ja
mov
test
popa
das
call
clc
fsts
lret
or
enter
repz
test
in
lcall
std
in
sbb
inc
cmp
mov
inc
lods
jmp
xor
ljmp
test
mov
out
shlb
sbb
iret
test
rolb
mov
fs
lods
icebp
je
adc
fwait
stos
adc
stos
andb
in
call
addl
scas
out
jne
aaa
mov
and
call
pop
fsubr
and
insb
inc
mov
outsb
stos
xor
sahf
push
aad
mov
mov
inc
mov
ja
and
inc
cmpsl
lods
daa
xchg
aam
jne
push
cmp
pop
std
sub
or
les
jmp
or
and
cli
call
scas
push
repnz
inc
cvtpi2ps
push
and
cli
add
push
jg
movsl
xchg
push
or
cli
dec
xor
out
or
in
fucomip
stc
mov
in
popf
pop
cs
fnstsw
or
cli
mov
jl
ret
jmp
movsl
movsb
cmp
jmp
xor
sbb
dec
push
ficomps
xchg
ficoml
ljmp
push
xchg
loopne
test
or
das
xchg
push
dec
bound
cmpsb
test
lcall
and
ja
cmp
mov
out
adc
xor
and
ljmp
pop
aas
mov
cmp
mov
xchg
push
pop
sbb
inc
inc
xor
inc
ja
fcmovne
pop
sbb
pushl
adc
mov
jns
xchg
jmp
jnp
pop
push
pushl
cmp
add
xchg
inc
inc
mov
mov
ss
ljmp
incl
call
call
mov
movsl
push
rclb
cmp
push
ss
test
dec
xchg
mov
out
popl
inc
stos
jge
inc
and
fistpl
push
rolb
jle
js
es
lds
mov
jg
sub
cmp
inc
mov
in
sub
xor
into
push
aaa
add
rcll
loope
sbb
jno
cmpsl
dec
call
ficoms
outsl
ljmp
xchg
arpl
aad
ds
jo
shll
adc
pslld
incb
mov
adc
pushfw
int
add
in
dec
jo
mov
les
repnz
push
test
mov
jg
decl
outsb
dec
mov
daa
push
iret
jb
or
ljmp
nop
xchg
mov
push
psadbw
std
cmpsb
push
sbb
aas
repnz
pop
icebp
push
mov
xor
pop
ljmp
mov
add
adc
icebp
sub
cmovno
or
mov
clc
adc
cmp
cld
outsl
pop
stos
and
push
xchg
daa
movsl
inc
lods
inc
xor
rorb
mov
out
jb
hlt
pushl
in
or
sub
cmpsl
js
insl
lock
loopne
aaa
cld
mov
inc
mov
rolb
hlt
bound
idivb
in
xchg
cmpsb
dec
shl
fstpt
sbb
inc
aaa
in
mov
and
loope
cli
das
cld
jmp
jns
sub
or
js
xchg
mov
push
sti
lcall
sti
or
or
dec
mov
jo
sbb
fwait
outsl
cld
jns
inc
jno
or
jp
aas
movsb
lcall
mov
mov
push
call
push
lahf
in
sbb
pop
std
adc
dec
fs
loop
decl
add
inc
jecxz
jne
dec
das
jecxz
mov
lds
aaa
js
inc
push
xchg
pushf
bnd
add
jb
clc
push
lcall
sarl
test
test
add
push
mov
xchg
imul
xor
add
call
push
inc
xchg
xchg
or
bound
iret
enter
add
insl
rolb
xchg
aaa
out
jecxz
int
fiadds
not
inc
insb
dec
and
mov
std
in
ljmp
ret
push
bound
enter
jmp
decl
adc
sahf
push
addb
popa
pop
movsl
push
ljmp
push
fwait
push
xor
add
jl
pushf
shll
les
ljmp
lock
xchg
call
jg
sub
repnz
aad
inc
lea
fnstsw
mov
cmp
ljmp
daa
cs
mov
push
std
and
adc
lock
jmp
out
outsb
lcall
adc
shlb
xchg
jmp
popf
iret
call
in
dec
pushl
clc
cmp
lea
popf
push
outsl
aad
lock
lods
out
cld
or
lret
pop
jge
in
inc
fs
out
fiaddl
push
lods
xchg
imul
int3
les
xor
decl
ret
negb
lods
xchg
nop
xchg
jb
sbb
adc
scas
mov
add
ljmp
sub
fwait
mov
jnp
jns
push
jge
int
decl
add
add
data16
dec
pushf
adc
arpl
loope
xchg
decl
adc
sub
add
andb
int3
pop
icebp
nop
add
je
loop
mov
inc
lea
sub
icebp
push
test
stc
jge
idivl
rorb
sahf
sbb
ljmp
mov
mov
inc
scas
addr16
outsb
orl
cmp
mov
jno
lods
out
sti
in
pop
cli
lcall
mov
mov
shll
mov
cld
xorb
add
jg
call
or
adc
inc
jae
add
mov
cli
inc
or
jg
lock
neg
lods
push
aam
add
les
rcll
imul
std
pop
clc
cmp
push
outsl
xor
push
outsb
xor
icebp
insb
push
push
mov
adc
pop
ret
pop
adc
outsl
inc
xchg
fucomip
mov
mov
inc
pop
mulb
ror
jle
pop
mov
inc
das
hlt
jg
and
push
dec
popa
divb
mov
jno
mov
incl
hlt
add
xor
sahf
pop
sbb
xchg
mov
scas
sub
cmc
clc
push
int3
sbb
fistpll
mov
inc
ss
icebp
jl
mov
sbb
scas
mov
dec
pop
adc
cmp
jmp
mov
sar
loope
movsl
jge
fbld
mov
dec
jecxz
xor
mov
lcall
ror
std
dec
dec
in
cmp
sub
jno
iret
push
push
stc
inc
add
jo
out
pop
mov
mov
dec
rcrl
loopne
xchg
in
pop
push
sub
iret
ud0
jg
cmpb
pushf
scas
push
inc
mov
jecxz
test
dec
xor
int3
jmp
push
mov
aaa
clc
push
mov
jmp
xchg
add
test
enter
rcl
out
sub
scas
push
cmpsl
cmp
xchg
inc
les
or
popf
loope
adc
test
mov
pop
ret
jg
mov
mov
add
mov
and
scas
adc
rcrl
outsl
in
inc
add
pop
mov
or
nop
push
std
lock
rclb
notl
inc
stos
cmp
lcall
rcrl
jge
out
mov
add
stc
test
mov
mov
decl
dec
adcb
ljmp
and
hlt
sub
pop
cli
std
decl
call
andl
test
jecxz
and
sbb
ljmp
outsl
bound
das
cmp
ja
mov
in
dec
mov
xchg
sbb
jg
aam
fnstsw
pop
subl
mov
inc
adc
and
push
rcrl
mov
lods
xchg
cmp
push
pop
pop
pop
mov
call
into
fdivl
rcrl
fldt
aad
or
mov
push
sti
lret
or
pushf
insb
aas
pop
inc
and
pop
mov
jmp
leave
sub
or
cmc
fcomi
sbb
push
and
inc
in
lret
stos
lods
xlat
lods
cmp
mov
hlt
decl
inc
mov
leave
mov
lock
pop
pop
cmp
lcall
in
and
int
add
mov
movsl
and
ss
pop
pop
cmpsb
xlat
inc
fcos
cmp
stos
das
into
negb
sbb
sub
imul
xchg
enter
sti
mov
lock
cmp
fdivs
xchg
addr16
xor
imul
inc
lahf
or
mov
push
pop
cld
inc
push
das
daa
lock
jne
add
cmc
push
clc
rcr
xchg
mov
xor
inc
incb
loope
pop
aas
pop
sub
out
push
sub
cs
sbb
lock
ljmp
push
out
mov
sub
ds
out
insl
adc
or
ljmp
adc
mov
jnp
nop
lods
ret
push
pusha
imul
dec
data16
adc
decl
call
sti
shlb
jle
adc
jl
das
leavew
jge
pop
adc
xchg
ljmp
fstpl
xchg
dec
sub
out
xchg
mov
das
pop
cli
lcall
shr
scas
lods
push
xchg
test
popf
lea
popf
gs
data16
fldenv
cmp
sbb
sbb
push
sub
inc
add
or
nop
or
ljmp
pop
xchg
push
inc
fnsave
push
test
cmp
out
pop
add
out
and
ljmp
or
push
mov
lea
mov
mov
pop
pop
push
sbb
notl
push
xchg
mov
fwait
mov
inc
cmp
pop
mov
cmpsl
rol
inc
sbb
ljmp
xchg
fcmovnb
dec
je
into
sub
aam
inc
popa
in
bound
push
fcompl
vmaxsd
iret
push
xchg
jo
lods
mov
push
xchg
aaa
lods
add
das
cmp
and
mov
loope
push
mov
xor
mov
lahf
xchg
add
cmpsl
arpl
outsb
xor
call
mov
xchg
add
dec
xor
pop
lret
pop
dec
xchg
mov
add
mov
xlat
mov
mov
mov
dec
pop
rcl
in
push
dec
mov
into
into
mov
outsl
jecxz
lcall
ljmp
xor
pop
pop
lret
imul
and
es
sub
int
inc
test
call
clc
ja
sbb
lock
lds
clc
inc
mov
mov
pushl
push
mov
out
insl
fwait
add
hlt
add
jae
lock
clc
mov
cld
lcall
rcll
mov
xor
cmp
insb
cmp
push
cli
dec
adc
mov
test
stc
inc
xor
inc
push
aam
iret
addr16
test
imul
out
dec
stos
enter
mov
mov
incl
sub
out
mov
test
pop
scas
dec
call
jecxz
or
push
push
inc
mov
lcall
jnp
mov
mov
arpl
sub
jg
ljmp
cmp
sbb
or
mov
scas
clc
sbb
aad
lcall
mov
icebp
xchg
push
lds
ds
out
cmpsb
inc
jg
ljmp
push
in
aad
dec
rcr
dec
mov
vmwrite
in
lahf
pop
xchg
jns
pop
cmp
push
mov
rcll
mov
loop
lods
or
jecxz
int
sar
cmp
js
shrl
adc
repnz
daa
mov
lcall
movsl
lahf
mov
push
sbb
and
mov
push
xlat
push
cmc
call
inc
mov
lahf
movsb
push
fistl
cmp
pop
stc
mov
cli
testl
add
in
or
dec
shrl
lock
pop
in
mov
lret
je
test
jg
enter
outsb
es
loop
shr
out
and
leave
jo
cmp
popa
sbb
pop
in
add
jnp
or
pushl
jp
dec
push
int
dec
std
xchg
js
mov
dec
sbbb
push
xchg
fiadds
movsb
mov
cmp
pop
push
icebp
lahf
popa
push
test
das
adc
pop
sub
int
outsb
scas
icebp
push
sub
decl
add
xor
pop
js
jle
mov
push
inc
enter
adc
pop
push
cmp
arpl
sbb
jge
daa
scas
ret
stc
inc
stos
add
jbe
cwtl
inc
mov
inc
cld
ljmp
popa
mov
repnz
mov
sbb
mov
pop
int3
mov
je
dec
insb
orl
mov
mov
es
push
inc
xchg
jbe
lea
in
mov
fstpt
in
jae
xlat
cmp
ss
adcl
xchg
sub
icebp
outsl
lock
or
cmp
jecxz
xor
cld
jg
mov
ljmp
mov
cld
lods
clc
js
movb
lcall
push
imul
lds
in
iret
loop
cmpsb
and
jnp
shlb
sbb
popa
test
pushf
das
ljmp
add
repz
aam
sbb
cmp
pop
incl
pop
stc
and
or
dec
pop
inc
dec
out
pop
mov
fimull
loope
aad
cli
pop
clc
decl
xchg
jmp
pop
repz
cltd
sub
dec
pop
lcall
sbb
xor
sbb
les
bound
lods
inc
mov
xor
enter
js
cmp
scas
std
mov
out
cmc
rcrb
sub
jne
imulb
add
fmuls
mov
fwait
test
call
test
mov
cmp
fisubrs
loopne
mov
pinsrw
loop
das
cld
pushl
test
jp
jno
lcall
sbb
xchg
sub
ret
jg
cltd
jb
pop
push
pop
pop
sub
or
scas
inc
fists
jmp
xchg
scas
sub
in
cmc
pop
sbb
shll
je
insb
test
cmp
adc
jmp
fs
jl
or
push
stos
cmp
hlt
stos
fs
cltd
sahf
xor
push
and
push
xchg
stc
out
xchg
jmp
push
adc
das
hlt
push
fisttpl
sbbb
repz
test
inc
pusha
mov
xchg
mov
pushl
mov
xchg
jo
pushl
enter
iret
mov
or
dec
mov
or
ljmp
icebp
std
jmp
ja
jl
jmp
bound
test
in
ljmp
sub
jg
rep
dec
mov
int
jae
xchg
sub
jp
inc
jnp
push
xor
sbb
fdivrs
test
aas
jg
lcall
cmpsl
xchg
pusha
fnstenv
xchg
mov
cli
mov
pushf
gs
add
mov
je
push
add
sub
fstl
and
sub
cmp
test
in
xchg
outsb
xchg
push
sarb
adc
cmp
push
fldenv
ljmp
lcall
cmp
mov
pop
or
lahf
hlt
push
mov
stc
fdivp
and
jns
mov
or
adc
mov
sbb
xchg
or
sahf
xor
cld
out
pop
shrb
cmp
in
xchg
jns
add
nop
mov
cmp
jo
bound
push
sti
push
mov
add
push
in
push
cmc
inc
jg
mov
xor
inc
imul
cmpsl
add
imul
mov
push
mov
pop
lahf
gs
ret
jmp
int3
cmp
cmpsl
pop
mov
push
mov
pusha
popa
insl
scas
call
push
adc
pop
into
ret
push
ljmp
lahf
or
fldt
xor
or
or
incl
test
sbb
push
push
pusha
aaa
adc
mov
cmp
jmp
push
sub
mov
add
stos
hlt
xchg
imul
xchg
in
xlat
outsl
icebp
call
and
lcall
xor
call
ljmp
fucomip
decl
decb
dec
adc
lds
fcomip
or
dec
loope
pusha
dec
pop
rol
mov
add
lcall
xchg
pop
jnp
ds
scas
stos
mov
pop
mov
and
cmp
xchg
push
movsl
ja
imul
mov
sbb
sbb
push
fsubr
inc
bnd
and
decl
cld
decl
out
mov
jl
addb
andl
xor
jmp
int
xor
add
jmp
push
ljmp
pop
or
hlt
leave
xlat
adc
push
into
loop
add
jle
jecxz
fstl
ficomps
dec
fldcw
cmp
js
in
decl
cmp
cmc
cmpsl
test
cmp
push
decl
mov
cli
call
pop
inc
int3
pop
pop
dec
in
cmp
cmp
sub
ret
call
ljmp
cmpsb
mov
pusha
jmp
sti
std
jmp
inc
ja
cmp
test
xorl
jmp
ret
push
or
hlt
lcall
push
dec
lock
sub
push
loop
pop
repz
decl
mov
ljmp
rclb
inc
cmp
cwtl
idivl
int3
popa
iret
lret
sbb
shll
dec
mov
push
enter
movsl
or
lock
mov
and
lods
xor
stos
je
mov
insb
mov
adc
ljmp
pop
push
xor
jmp
cwtl
push
stos
or
sarl
and
rcrl
stos
testb
decl
decb
leave
out
cmp
int3
push
mov
ja
jmp
out
pop
jne
fucomp
xor
xchg
and
xchg
mov
incl
mov
bound
leave
mov
out
jns
in
push
ja
mov
sahf
push
fnstsw
sub
imul
call
lret
pop
xchg
scas
lret
pushl
dec
je
mov
jb
sbb
incl
ficoml
ret
mov
dec
pop
sub
mov
and
mov
cmp
cltd
ja
cmpl
mov
push
adc
enter
sbb
incl
sub
jns
popf
cs
ljmp
lock
icebp
call
cmpsb
cmp
ss
dec
test
pop
pop
cld
lahf
or
xchg
dec
mov
xor
pusha
movsb
decl
push
daa
jnp
cmp
or
and
dec
mov
mov
aas
rorl
cmp
push
jg
xor
adc
sahf
call
or
sub
ljmp
sbb
fiaddl
lret
jge
fwait
add
cmp
leave
stos
iret
adc
and
incl
push
in
sub
shll
outsl
sbb
sub
in
scas
cmp
pop
dec
insl
call
clc
dec
sahf
and
cmp
mov
mov
jbe
lcall
ds
incl
xchg
imul
cmp
imul
or
fucomip
lcall
sbb
sbb
pop
jl
ficoml
and
mov
pop
call
jmp
daa
or
or
ljmp
ljmp
sti
mov
lds
jecxz
push
mov
pop
mov
mov
call
pop
loopne
and
cmp
cmc
loop
push
or
cmp
jge
fs
cld
pop
loopne
lret
push
add
and
ret
call
mov
das
inc
xchg
and
cmp
mov
push
mov
mov
popf
pop
loopne
adc
lret
mov
clc
jmp
outsb
lock
xchg
sub
jns
cwtl
inc
pushf
ds
loop
adc
ljmp
xchg
nop
dec
movsl
mov
pop
adc
clc
push
repnz
sbb
rol
int
push
adc
lds
lods
mov
movsl
pop
decl
jle
inc
aaa
sbb
mov
push
cmp
out
sub
or
call
jno
out
pop
mov
movaps
push
dec
ss
mov
mov
lret
jle
loopne
in
pushl
cli
xchg
aam
jbe
mov
xor
mov
xchg
cmp
lcall
test
mov
or
fldl
or
add
xor
pusha
and
sub
out
add
lret
cmpl
mov
aaa
sbb
ljmp
adc
sti
mov
sub
pop
pusha
push
jmp
dec
adcb
lret
pmaddwd
in
mov
imul
jg
mov
out
test
lcall
push
aaa
out
fdivs
jmp
cwtl
or
arpl
mov
incl
xor
push
dec
mov
out
mov
cld
ss
call
mov
popf
icebp
jl
shrl
adc
ds
negl
hlt
call
push
inc
popa
ret
loopne
lods
sub
push
idivb
lock
xchg
mov
js
in
loopne
mov
outsl
mov
sub
out
and
mov
pusha
int
clc
decl
cs
rclb
les
mov
jg
popf
imul
dec
or
cmp
pop
mov
iret
scas
mov
mov
jge
dec
push
call
mov
int
sub
jno
push
test
sbb
fs
or
call
or
and
sbb
inc
mov
ret
dec
lock
fnstsw
mov
sbb
ds
stc
sbb
ljmp
push
mov
push
jno
push
xor
daa
cwtl
sahf
push
les
or
mov
cld
pushl
clc
xorb
mov
repz
in
lahf
add
and
xchg
fcomi
fwait
cltd
pop
cmp
mov
pushl
aaa
shlb
in
sbb
sti
cld
inc
addb
mov
lcall
jp
insb
add
xchg
pop
ja
stc
ja
lret
ss
xor
push
call
clc
lcall
or
mov
rolb
or
jb
dec
sub
sbb
xorl
loop
ljmp
xor
int
ja
je
bound
scas
mov
mov
xchg
sub
das
adc
idiv
decl
orl
sbb
sbb
stc
mov
ret
stos
repz
mov
iret
dec
or
pop
sbb
and
daa
xchg
out
sub
mov
icebp
lret
popf
fisttpll
arpl
or
mov
or
and
arpl
loope
out
pop
in
insb
ret
or
cmpsl
push
pop
pop
or
shrb
xchg
cli
out
out
jp
dec
jae
mov
pop
push
jp
test
dec
jno
ds
cmp
repnz
inc
lcall
mov
sub
jns
add
decl
out
ret
fists
pushf
fildl
sbb
mov
sbb
ret
sub
push
mov
sub
in
incl
and
dec
pop
into
cmp
pop
clc
mov
sbb
repz
pop
cli
jmp
mov
aad
daa
push
mov
fcmovnu
xchg
xchg
movsl
jb
mov
inc
push
lea
mov
ss
loop
cwtl
ljmp
mov
xor
loope
pushaw
outsb
or
ud0
adc
decl
ret
into
pop
insl
pusha
inc
fistl
aaa
jl
sub
dec
xchg
ffreep
push
cmpsb
or
stc
aaa
cli
ffreep
mov
aad
aas
mov
mov
push
lods
test
icebp
outsb
sub
fs
out
stos
repnz
mov
aam
mov
sub
dec
jb
and
insb
jno
adc
mov
test
and
and
add
sahf
icebp
mov
add
dec
mov
sbb
jge
dec
cmc
pop
arpl
push
in
imul
lds
dec
adc
cmpsb
adc
xor
mov
div
mov
and
xchg
xchg
jle
into
insl
cmp
rcl
cmp
clc
pop
xchg
and
jb
loope
mov
lahf
lret
push
and
fnstsw
aaa
mull
clc
lock
sub
insl
in
fiadds
mov
std
xchg
fdivs
fs
imulb
sub
loopne
push
loopne
cmp
clc
fst
jp
push
out
fnstenv
jge
repz
popf
pop
aad
push
push
mov
lds
pop
fists
adc
test
or
ret
cld
lcall
sbb
adc
dec
gs
xor
jecxz
das
insl
fdivs
cwtl
sbb
and
das
or
inc
xchg
subl
loopne
call
scas
xchg
das
test
dec
in
out
fiaddl
movsb
jecxz
icebp
call
pop
or
movsb
and
rolb
inc
test
xorb
lock
jg
jg
insb
sub
jmp
es
jnp
jno
sahf
aas
dec
push
jge
incl
das
sbb
rorb
cmp
imul
push
incl
or
dec
or
mov
or
stos
mov
call
adc
push
sbb
cwtl
lds
scas
jnp
mov
in
dec
xlat
ljmp
inc
dec
arpl
cs
sub
jae
pushf
bound
jmp
push
fisttpll
out
cld
das
icebp
dec
stos
xchg
jg
or
inc
jb
and
push
rcrb
sbb
fldcw
mov
adc
loopne
scas
sbb
ds
cmpxchg
ljmp
daa
inc
das
xor
ljmp
mov
mov
push
inc
jno
gs
cli
fisubrl
dec
in
je
imul
das
icebp
add
mov
bound
vpmuludq
icebp
pop
insb
mov
xchg
adc
ljmp
into
push
mov
dec
pop
cld
inc
push
clc
sub
fdiv
js
mov
mov
adc
cmc
hlt
pop
out
mov
xor
jns
jnp
cli
jmp
inc
fcomps
push
adc
fstl
arpl
out
push
gs
andl
add
into
mul
popf
add
jp
ljmp
pop
divl
add
jecxz
out
xor
pop
testb
bound
fnstenv
mov
mov
hlt
jo
lcall
mov
jns
repz
mov
aaa
and
adc
mov
das
cld
call
lods
inc
fwait
inc
mov
fcomps
and
pop
fcmove
mov
dec
jnp
aaa
std
pushl
xor
arpl
xchg
fmull
xchg
out
imul
out
add
mov
jno
mov
dec
cltd
ret
fbld
jge
js
daa
xchg
jbe
in
push
out
rcrl
mov
shl
push
ss
pop
pusha
out
test
subl
push
dec
imul
decl
xor
mov
jno
in
lea
shlb
jmp
jo
ret
sbb
inc
mov
orb
daa
sbb
in
das
stc
or
incl
fstpl
sub
insl
push
add
outsb
dec
es
fucom
ret
jle
xor
push
mov
jmp
xor
pop
jae
mov
pushf
and
add
lock
push
popa
push
push
cmp
jg
hlt
push
mov
dec
and
faddp
inc
in
addr16
lcall
cld
cmpsb
pusha
mov
iret
xor
popa
push
out
dec
push
in
mov
mov
mov
jle
dec
pop
dec
mov
inc
xchg
das
loopne
cmp
sbb
ljmp
cld
pushl
dec
jle
mov
mov
js
cmpb
orl
sbb
jmp
fcomip
push
lods
orb
decl
sbb
pop
lods
enter
out
loopne
push
out
call
cli
xchg
repz
xchg
inc
cmp
and
das
xchg
cltd
cmp
or
incl
dec
pop
inc
pop
or
add
and
out
mov
scas
inc
incl
jge
and
fcomi
mov
insl
jbe
lods
or
mov
push
mov
ret
push
jg
jmp
push
cmp
xchg
ficoml
mov
jnp
jno
out
aas
cmpsb
mov
test
mov
inc
inc
in
dec
xchg
lahf
insb
leavew
jp
shl
xchg
add
lods
fdivrp
xlat
jno
stos
in
mov
sub
sbb
std
pushl
cmpsb
les
cli
enter
inc
ds
test
xchg
lds
sahf
test
pop
loope
lods
jns
leave
lret
jmp
incl
lret
ss
sbb
inc
jnp
cltd
push
add
outsl
adc
lcall
movsb
test
rcl
inc
hlt
adc
sub
dec
pop
mov
ret
cld
adc
and
or
pop
sbb
lods
data16
mov
mov
mov
pushl
mov
clc
fdivrl
out
and
mov
push
stos
xor
jo
cmpsl
fdivr
das
rol
fists
rcl
xor
mov
xor
lock
fs
pushl
dec
cmp
jge
push
lods
fsubrs
xlat
mov
fisubrl
insl
fisttpll
bound
insb
push
leave
jae
js
repnz
ljmp
push
mov
in
iret
pop
adc
xlat
pop
jnp
fmuls
or
mov
in
incl
dec
fstpt
imul
mov
jne
pop
xor
ljmp
std
out
loope
cs
jle
movsb
pop
xor
ljmp
repnz
movsl
in
add
pop
int3
and
les
outsl
leave
shrb
xor
mov
mov
jmp
ds
sti
and
lods
xor
push
out
inc
xor
dec
dec
mov
pusha
fidivrs
push
in
cmpsl
push
cwtl
jmp
movsl
jge
pop
jmp
push
test
mov
add
insl
push
push
subl
mov
adc
call
sub
xlat
xchg
cld
xor
inc
jae
xchg
push
cli
pop
and
mov
in
mov
jg
jne
sbb
out
mov
decb
fs
ja
movsl
adc
dec
adc
das
cld
jnp
addb
xor
cmc
aad
push
ds
fxch
lahf
fsubrl
pop
clc
ljmp
jge
mov
cmpsl
jbe
xor
xor
fnsave
and
sub
int3
repnz
aaa
sti
stos
cmp
push
sbbl
cmp
jecxz
popa
shrl
ss
daa
int3
aaa
pop
inc
lcall
adc
jmp
stos
sbb
push
ss
cmpsl
add
cld
sbb
lcall
mov
xchg
adc
icebp
dec
out
or
mov
fadds
repz
stos
dec
iret
pop
jbe
shrb
cmp
clc
lcall
cs
repnz
test
neg
mov
movsl
jmp
call
or
rdpmc
cmp
hlt
mov
or
jg
sarb
jecxz
mov
rorb
enter
inc
or
or
push
xchg
sar
mov
xchg
bound
sub
jge
or
xor
addr16
cli
das
push
mov
insb
add
pop
dec
scas
add
lcall
cltd
outsl
subb
pop
dec
adc
xor
sub
push
xor
push
sub
lcall
or
mov
add
xchg
xchg
js
adc
ljmp
iret
incl
loope
popf
jg
pushf
popf
inc
dec
sub
subb
add
sub
mov
mov
cmp
and
fwait
lcall
cld
or
adc
xchg
inc
pop
insl
push
in
add
testb
outsb
mov
and
ljmp
lock
sbb
je
inc
pop
push
xchg
ds
mov
cmp
movsl
mov
test
insb
jbe
sbb
dec
sub
addr16
loopne
mov
ss
subb
push
ljmp
sbb
pushl
inc
and
pop
and
in
fdivr
std
lods
xor
and
fstpl
add
push
addr16
sbb
push
xchg
pop
inc
fucomip
push
enter
imul
gs
xchg
jb
call
jmp
mov
add
and
cmp
xor
jg
jns
lret
push
in
ljmp
jne
jae
pop
leave
xchg
xor
push
xor
jo
dec
xchg
jo
push
xor
xor
xchg
call
call
std
push
and
lcall
sub
xor
jmp
pop
shll
repnz
lahf
push
lahf
repnz
pop
cli
jg
decl
or
shr
or
push
inc
mov
inc
incl
call
loop
insl
shll
jo
pop
inc
xor
lods
mov
sahf
adc
mov
testl
testl
icebp
inc
iret
mov
pop
jmp
jae
jle
mov
popf
sbb
outsl
lock
inc
sub
mov
shlb
ds
test
mov
insb
and
pop
js
mov
pop
das
mov
add
call
idivl
testb
mov
xchg
mov
jnp
incl
jecxz
ljmp
dec
in
inc
ret
adc
pop
jmp
cmp
mov
fcompl
subl
lahf
out
test
lea
xchg
clc
pushf
aam
xchg
in
xor
jbe
sub
pop
jne
push
ljmp
push
popa
mov
jae
adc
aas
xchg
fldenv
out
push
cld
gs
dec
int
ds
fucomip
fisttps
xchg
test
inc
xor
jg
ljmp
mov
jmp
outsb
aaa
sub
movsb
jb
cmp
mul
jmp
into
nop
cmp
adc
pushf
inc
and
xchg
popa
dec
sub
sbb
incl
fcom
in
loopne
scas
imull
or
fwait
pop
popf
pop
ljmp
jnp
cwtl
dec
sti
iret
lea
jo
adc
incl
aaa
rclb
cld
mov
es
adc
sub
sub
clc
pushl
push
jae
add
pop
cmp
in
js
push
sbb
popa
mov
call
cmp
nop
arpl
inc
lods
lcall
push
or
daa
cmp
decl
mov
push
lcall
push
filds
adc
loop
outsl
push
jmp
xchg
arpl
addr16
clc
inc
push
mov
icebp
icebp
mov
xor
test
mov
shrl
push
jl
mov
cmp
outsb
std
scas
push
dec
adc
xchg
jmp
out
adcb
mov
mov
push
pushf
pusha
sub
dec
mov
int
adc
adc
call
sbb
int
mov
xchg
xor
roll
inc
sub
call
dec
loopne
outsl
xor
mov
rorl
stos
hlt
xor
jnp
outsl
fisubl
in
ret
aad
dec
sbb
test
in
mov
mov
insl
das
movsl
or
mov
pop
push
repnz
push
pusha
push
push
push
push
movsl
mov
sar
jg
mov
mov
and
scas
lods
add
jnp
decl
loopne
jno
mov
pop
and
nop
inc
addr16
jmp
or
je
xchg
push
xchg
pop
cld
decl
cld
push
mov
and
fcmovnbe
out
test
jae
jp
lret
call
je
jg
adc
jb
jne
dec
outsl
jge
test
xlat
jbe
test
add
cld
fdivl
inc
and
cmp
adc
in
jmp
lcall
xor
jg
movsb
xchg
repnz
xor
pushf
push
aam
in
push
out
cmp
repz
fcmovnu
push
mov
add
cmp
dec
aam
sar
push
loop
cmp
aam
xlat
popf
aam
imul
gs
data16
mov
rcpps
insl
stos
loope
jae
imul
xor
jno
dec
mov
cmp
rorl
pop
sbb
add
call
clc
sub
imul
insl
scas
and
das
cmp
or
lret
and
decl
xchg
test
fsubrp
mov
xor
adc
xchg
cmp
inc
add
cmp
mov
clc
lcall
scas
insl
add
ret
fstl
dec
xchg
mov
jno
enter
adc
iret
mov
icebp
sahf
aad
adc
mov
insb
test
push
xorb
xchg
add
dec
pop
cs
shll
pop
push
mov
add
ja
imull
pop
std
nop
dec
pop
add
xchg
sub
cld
xchg
sub
push
jg
or
mov
gs
mov
and
movsb
jae
cmp
pop
in
imul
mov
mov
lods
add
in
adc
repz
call
jnp
xorl
fwait
jo
lods
in
pop
icebp
cmp
test
xchg
add
aam
ficompl
sub
jae
in
mov
inc
xchg
sub
mov
pop
push
dec
jns
cmpl
cmc
call
cli
and
inc
cltd
insl
adc
mov
hlt
sbbb
in
inc
scas
adc
dec
shrl
push
dec
xlat
cmc
jle
inc
call
pusha
je
fdivrs
pusha
mov
arpl
jge
inc
pushf
ss
or
lcall
out
movsb
rcl
cld
sbb
mov
add
mov
push
sahf
dec
or
fldt
cmpsb
mov
iret
push
aad
daa
out
dec
dec
iret
or
pushf
mov
incl
mov
push
stos
test
lcall
sub
incl
xchg
xchg
add
scas
inc
adc
add
pop
call
mov
mov
sub
add
push
loop
leave
daa
adc
std
outsl
shl
loopne
xchg
movsb
fs
mov
inc
repz
mov
push
adc
in
sub
adc
loopne
in
and
loopne
call
mov
sbb
sbb
aas
setnp
xchg
pop
cld
jno
test
ljmp
push
cwtl
fimuls
aad
xor
lods
push
aas
popf
lods
ret
mov
popa
sub
cmp
xor
ljmp
fldt
mov
and
cli
jno
into
jg
sbb
cltd
and
push
cmp
push
or
adc
mov
sbb
fucomi
cmpsl
aaa
dec
sahf
push
lods
mov
mov
lds
loope
lods
add
mov
inc
out
repnz
pop
jo
call
jg
fldpi
mov
movsb
pop
push
aad
jns
inc
mov
jle
lods
pushl
movsl
rcll
mov
in
ss
ret
clc
mov
jmp
xchg
mov
jb
sbb
adc
jns
fnstcw
lret
stos
jo
adc
jmp
push
rcrl
or
movsb
mov
dec
inc
popf
jg
les
xor
jmp
and
sar
xchg
xor
inc
mov
sbb
outsb
xorb
into
and
ljmp
fwait
andb
add
das
mov
push
mov
push
rcll
fildll
xor
push
pop
call
mov
roll
enter
pop
adc
sahf
xchg
xchg
mov
push
pop
gs
jg
pop
dec
aas
jno
xor
scas
imul
jg
inc
push
mov
mov
sub
insl
xlat
mov
jl
movsl
mov
fistpl
testb
ret
sbb
int
mov
mov
stos
inc
pop
lds
mov
mov
pop
loop
lret
insl
loop
pushl
sahf
xor
jg
dec
hlt
sbb
scas
mov
push
sub
rcrb
mov
jge
or
mov
pop
lds
into
inc
or
ljmp
in
mov
sbb
fwait
xchg
imul
dec
cmp
sbb
fsubl
jmp
ss
popa
mov
cmp
cmpsl
aas
ljmp
test
mov
sbb
pop
or
push
int
or
mov
jmp
jbe
outsl
std
jmp
push
cmp
fsts
cmpsl
fwait
ret
movsl
adc
imul
xchg
cs
movsb
xor
xchg
outsl
pop
dec
stc
sub
jp
push
pop
std
dec
mov
add
addr16
ja
cmp
lret
mull
js
inc
loope
jg
pushl
jno
lea
push
push
mov
aaa
clc
ljmp
outsl
push
add
repz
movsb
das
iret
sti
sub
outsl
pop
ljmp
mov
adc
dec
stc
shlb
mov
fwait
lods
cmc
dec
xor
adcl
das
mov
and
cmpsb
nop
pop
orb
jg
adc
mov
jge
or
xchg
jmp
in
or
scas
xor
mov
ljmp
addr16
jo
inc
icebp
ljmp
popf
and
ljmp
jmp
incb
xchg
jae
aas
movsb
sub
ja
add
aas
scas
decl
pop
mov
popa
ja
cmp
xor
cmc
filds
xchg
pop
loop
call
push
inc
subb
aam
aad
incl
pop
add
shll
in
mov
sub
inc
mov
or
mov
and
lods
shll
jge
adc
jmp
les
js
mov
mov
loope
aas
pop
cmp
in
jle
add
inc
mov
std
icebp
pop
pop
shlb
lea
ljmp
int3
ljmp
and
rclb
mov
cld
fildll
rorb
decl
push
pop
adc
xchg
out
mov
add
fwait
mov
ret
and
lcall
push
and
lahf
xchg
ret
sbb
pop
stos
cwtl
inc
cmp
cmpsb
loop
lea
ljmp
hlt
push
inc
mov
cmc
jmp
jno
dec
imul
jge
arpl
test
ljmp
mov
pop
jmp
scas
sub
jo
and
fs
dec
xchg
pop
push
sbb
push
icebp
jmp
mov
xor
jmp
scas
jmp
rcll
mov
xchg
push
jae
push
in
add
popa
aam
fdivl
cld
xlat
enter
pushl
in
aam
cmp
test
mov
jmp
lcall
dec
jmp
adc
jmp
out
add
aam
call
mov
into
adc
sub
lret
cmp
call
xor
jmp
mov
push
push
addr16
mov
jecxz
loopne
or
ds
push
int
push
decl
fldl
inc
jae
movsl
mov
mov
call
jo
cs
push
popf
lcall
inc
xchg
ljmp
lds
ljmp
enter
push
dec
xchg
sub
mov
dec
jo
sbb
ss
xor
icebp
add
sarb
dec
cmpsl
aam
xchg
pop
or
js
push
jb
xor
dec
xor
mov
and
xor
inc
loop
fcmovnbe
test
fnstsw
jg
cmpsl
es
push
cmp
shlb
pop
pushf
jg
jmp
movsl
cmc
xchg
jl
data16
insl
jl
xchg
mov
les
mov
fdiv
jge
and
cs
inc
jo
adc
jp
divl
mov
pop
cmpsb
mov
jae
outsl
icebp
decl
loop
jne
es
imul
push
sbb
ljmp
pop
mov
out
ficomps
jae
push
add
adc
ret
mov
mov
insb
subb
jo
lea
mov
in
shlb
in
mov
jle
in
mov
cld
call
jp
ret
push
and
and
scas
jnp
jnp
dec
int3
ljmp
dec
pop
sub
push
mov
mov
cld
mov
lods
mov
imul
testb
xor
test
cld
sbb
inc
in
xor
mov
adc
mov
or
test
inc
cmp
ret
mov
or
adc
bound
insb
jbe
imul
popa
fs
in
mov
ja
lret
push
add
fcoms
jno
pop
loop
clc
fisttps
sbb
inc
lret
gs
lods
mov
test
xor
arpl
inc
push
mov
mov
test
xor
sub
jmp
xor
or
mov
pop
fiadds
pop
cld
in
add
in
ljmp
mov
out
call
add
mov
mov
mov
bound
lcall
jg
push
rcll
mov
and
mov
mov
push
daa
int
ljmp
sub
dec
xchg
ds
popa
mov
aam
cltd
nop
xchg
aad
push
ljmp
inc
sbb
cmp
mov
inc
or
xchg
cmp
ljmp
mov
cmpb
pushf
stc
adc
mov
add
jmp
mov
decl
xor
and
xchg
and
incl
push
sbb
data16
mov
stc
add
and
incl
sub
dec
and
pop
btc
lret
sub
aas
pop
shrb
movsb
xor
stos
mov
ljmp
dec
push
dec
clc
rorb
hlt
push
dec
push
cli
and
sbb
jmp
cmp
mov
ret
cli
data16
add
cld
jp
jmp
cs
outsl
pop
loop
cmp
mov
cltd
xchg
push
stos
into
mov
out
insb
out
mov
mov
xchg
rorl
pushf
mov
mov
jg
aam
inc
mov
push
sahf
mov
xor
inc
ret
mov
mov
lcall
fstps
push
xchg
fcoml
or
lahf
push
adc
mov
push
clc
ljmp
mov
test
jbe
outsb
bts
cmpsl
and
pop
aad
decl
xchg
xor
mov
ss
mov
andl
ds
jecxz
inc
jbe
lods
cld
movsl
add
mov
xchg
jle
mov
mov
jbe
das
sub
mov
data16
pop
repz
and
jmp
mov
pop
push
outsl
cmp
mov
push
cs
repnz
or
dec
imul
mov
jb
mov
and
mov
cmp
out
push
adcl
out
pop
lods
popa
repnz
or
push
cmp
test
jbe
cwtl
imulb
sbb
ljmp
pop
cli
mov
lods
shr
enter
fsubs
pop
sti
jge
lock
and
or
test
adc
decl
js
xchg
pushf
repz
sarl
mov
insb
mov
loope
gs
test
js
sub
leave
or
fbld
in
dec
daa
cli
cmp
loopne
stc
insb
fucomp
loope
dec
je
ja
cmp
sub
xchg
insl
jg
daa
or
outsl
lea
pop
mov
mov
mov
jns
jo
ficoms
mov
sbb
sbb
inc
ljmp
icebp
pop
movsb
arpl
cmc
sub
test
ficoml
cs
call
shrb
inc
cmp
mov
outsb
pop
leave
pushf
fisttpl
or
loop
rcr
or
cmp
cli
incl
push
xor
mov
xlat
xor
ljmp
mov
call
aad
mov
xchg
add
mov
in
int3
movsl
and
decl
nop
cmpl
pop
and
inc
sub
add
decl
cmpsb
std
jbe
and
sbb
mov
leave
sbb
nop
lds
pop
outsl
cld
pushl
sbb
int3
mov
or
lods
jle
jne
push
inc
add
shr
push
call
inc
jnp
push
xchg
jp
outsl
pop
iret
popa
mov
dec
cli
mov
and
loop
push
inc
xchg
sub
pop
mov
call
pop
push
std
xlat
insl
cmp
fistps
or
incl
dec
mov
jecxz
or
sbb
imul
aad
daa
cmp
jmp
fmuls
enter
cmp
pop
sbb
mov
jmp
add
addb
das
lock
sbb
xor
sbb
outsb
xchg
add
mov
and
mov
shrb
xor
add
mov
cmp
xor
pushl
jle
fs
insl
es
dec
mov
imul
stc
ret
push
jns
in
loop
xchg
cmpsl
xor
ret
add
adc
mov
xchg
xchg
outsl
sbb
and
or
stc
ss
lcall
jg
or
mov
pushf
push
in
sub
fsubs
pushl
cmp
addr16
cmpsl
pop
xchg
cli
js
mov
or
incl
and
xor
scas
jo
loopne
xchg
je
sarl
hlt
incl
pushl
pop
xchg
sbb
decb
inc
xchg
insb
xor
out
lcall
movsl
push
andl
and
aad
stos
imull
in
cmpsb
or
nop
inc
lcall
mov
inc
cs
lcall
cmp
popf
inc
aad
lcall
mov
rcll
pusha
mov
jmp
push
rclb
cltd
movsl
mov
cmp
pusha
push
in
icebp
mov
pop
loopne
dec
xchg
decb
std
xchg
testl
out
mov
adc
xchg
add
jbe
cli
out
sbb
loopne
and
aad
fnstenv
xchg
fcoms
mov
enter
sti
sub
and
clc
mov
loopne
jns
dec
test
in
and
test
decl
pop
inc
lds
sarb
icebp
data16
fisttpll
pop
xchg
in
fwait
sbb
repz
lods
jne
xlat
jg
das
lock
icebp
fsubrs
js
pushf
inc
data16
hlt
out
sbb
jmp
xor
and
push
jb
aam
jl
jp
xchg
xor
add
push
lds
sar
mov
loopne
and
mov
pop
movsl
xor
call
icebp
mov
sub
adc
mov
mov
or
mov
lcall
jmp
sub
dec
clc
or
loope
jp
aam
fwait
hlt
gs
pop
inc
int3
scas
cmc
add
movsl
cmp
loopne
jmp
inc
insb
inc
cmp
fildll
idivb
mov
fnstsw
out
mov
in
mov
mov
mov
and
test
sbb
daa
mov
dec
pop
cmp
xor
jp
fsubrs
lcall
push
orb
inc
add
add
cmpsb
fdivs
fisttps
xchg
lahf
rdpmc
xchg
loope
cli
jg
movsl
inc
adc
pop
stos
ljmp
pop
aad
call
pop
jae
or
sbb
mov
push
sub
sti
ds
inc
mov
cmp
loopne
adc
ret
inc
incl
call
addr16
add
ret
adc
out
enter
mov
out
out
add
xchg
dec
bound
shrb
add
repz
andl
mov
cli
repz
cmpsb
stos
push
xchg
push
lcall
mov
cwtl
xorb
push
hlt
fsubp
xchg
dec
pop
jns
dec
inc
sbb
js
cmc
inc
pushl
cs
adc
fmulp
roll
mov
sub
add
jnp
xor
lds
xchg
and
int
cli
mov
popa
jnp
sub
adc
scas
movsl
insl
push
imul
xlat
sar
pop
call
mov
mov
xchg
sbb
imul
pusha
repnz
dec
ja
add
push
idiv
dec
sar
sub
sub
fcomps
mov
std
mov
add
ljmp
hlt
js
adc
cwtl
movsb
cmp
pop
pop
push
or
filds
repz
mov
mov
dec
das
cwtl
out
fnstenv
test
lods
inc
loopne
fildl
es
decl
fbstp
mov
cmp
adc
dec
int
cmp
loope
ljmp
ljmp
aaa
or
jae
inc
xchg
test
jp
int3
es
imul
inc
popf
push
sbb
jg
int3
dec
and
sbb
rorb
or
push
mov
jbe
scas
jge
mov
fdivr
ljmp
xchg
mov
mov
fwait
xchg
inc
push
fsubrl
pop
cli
popa
push
out
loopne
xchg
call
push
ficoml
jbe
xor
call
add
pushl
lock
adcl
fists
repnz
loop
dec
lcall
jmp
jp
repz
jmp
and
in
scas
fs
pushl
dec
inc
rcll
mov
and
ds
pop
dec
stos
ljmp
mov
mov
mov
mov
cli
arpl
cmc
test
cmp
xchg
push
rorl
mov
add
mov
add
ret
pop
enter
inc
xor
sub
push
cmpsl
daa
stos
inc
dec
stc
aam
fcmovbe
filds
cli
mov
jecxz
ss
pushl
sbb
das
lcall
sbb
pop
cmp
stos
xchg
mov
aad
fdivrp
call
and
add
jp
sub
jns
leave
add
stos
xchg
sbb
cld
inc
imul
pop
sub
inc
push
sar
int3
xchg
fisubrl
pop
icebp
inc
outsl
mov
adc
mov
mov
std
xor
push
rcll
sahf
xchg
pop
sub
aaa
sub
cmc
int3
fsubrs
outsl
or
cmpsl
lds
cmp
jge
jmp
sub
fwait
cmp
sub
xor
out
jno
dec
outsl
icebp
incl
jns
jbe
out
or
scas
incl
in
fistl
clc
leave
xchg
addb
cmpb
xor
test
cld
and
ficomps
xchg
sbb
stos
push
pushl
pop
popa
shll
iret
jge
test
jle
jo
dec
das
std
incl
xchg
sbb
fistpll
jg
aaa
stos
out
jns
sub
loope
xchg
mov
xchg
cli
lcall
pop
push
pop
push
mov
out
push
lods
mov
ljmp
std
lret
clc
int
push
mov
movsb
sbb
inc
add
mov
dec
xchg
loop
jl
ja
popl
or
scas
repnz
sahf
daa
call
jg
pop
cld
xchg
dec
xchg
add
fstpt
imul
hlt
in
mov
cmp
xchg
mov
mov
jne
jne
pop
xchg
jle
cli
call
sbbb
repnz
div
fsubrs
mov
test
decl
fucomp
mov
gs
loopne
cmpsl
addl
fidivrs
pushl
jecxz
daa
pop
dec
add
ljmp
loop
push
push
push
inc
sar
mov
inc
push
mov
sub
xchg
mov
jmp
pop
cmpsb
inc
add
leave
in
mov
cltd
repnz
stos
sub
testb
dec
pusha
inc
mov
lret
int
xchg
aam
xchg
jecxz
pop
out
push
rcll
inc
pop
inc
call
cmp
dec
mov
or
imul
pop
sub
les
daa
jns
jmp
subb
decb
adcl
push
sbb
int3
inc
jb
pop
rorl
pop
insb
cld
sub
insb
dec
cmp
mov
jne
adc
loopne
dec
add
adc
push
loopne
inc
pushl
out
mull
mov
add
dec
sbb
cmp
sbb
sar
inc
mov
lods
daa
lods
fisubrs
cmp
mov
ljmp
ljmp
mov
pop
es
sub
shrb
jbe
cmc
adc
popf
jo
mov
lcall
ja
and
sti
add
add
push
add
aas
js
jle
std
jmp
push
rorb
dec
or
popa
fadd
pop
mov
ljmp
movsl
in
shlb
xchg
subb
mov
lret
mov
fucomip
mov
rcll
cmp
rcll
add
dec
decl
insl
fstp
ret
roll
decl
adc
loope
call
sbb
lds
push
rclb
fadds
push
jg
shll
jecxz
sar
push
push
incl
das
mov
cmp
loopne
cmp
jae
imul
adc
jmp
outsl
jno
sbb
pushf
lods
out
pop
mov
outsl
decl
fdiv
loop
ret
into
les
push
popa
mov
adcb
jg
int
push
push
dec
xchg
out
test
cmp
inc
adc
sbb
jmp
arpl
insl
adc
xor
inc
mov
pusha
mov
inc
xchg
mov
inc
push
pushf
insb
cmc
ret
xchg
inc
push
fidivrs
push
movsl
xor
incl
decl
divb
pushf
cltd
jae
xchg
lods
xor
mov
outsl
xor
lret
decl
cmp
cmp
hlt
xchg
xchg
insl
cmp
scas
sahf
mov
sbb
adc
cld
jmp
mov
mov
movsl
push
xor
hlt
into
popa
inc
mov
cmc
std
lcall
out
out
imul
pop
out
mov
out
pop
cld
or
lds
push
fisubl
mov
std
adc
pop
mov
mov
decl
lea
gs
push
div
and
nop
xor
pop
enter
sbb
icebp
into
fcomps
pop
mov
mov
adc
icebp
mov
add
sahf
xchg
ss
mov
mull
fcos
lods
ljmp
mov
lods
mov
pop
mov
ja
jae
adc
push
sbb
and
xchg
jle
mov
popf
jb
fwait
jno
jg
outsl
decl
or
test
neg
sub
pop
pushf
lahf
and
in
scas
pop
je
dec
push
sbb
jo
lahf
jns
movsb
pop
jno
sub
or
mov
ds
jg
ret
into
fistpll
push
faddl
loope
mov
xchg
lods
cld
add
push
pusha
out
sub
mov
xchg
cmp
jb
movsl
decb
xchg
clc
jecxz
aaa
push
and
mov
hlt
dec
lcall
or
pop
push
push
pop
imul
sti
data16
lcall
and
in
aam
dec
dec
dec
repnz
int
ljmp
inc
lock
repz
imul
fucompp
ljmp
mov
inc
inc
outsb
repz
ret
stc
rcrl
jnp
lahf
mov
int
mov
nop
and
or
ljmp
adc
push
push
xor
insl
outsb
rclb
dec
pusha
sub
cmc
std
int
and
fldenv
jno
push
sbb
ret
mov
dec
test
mov
imul
cmp
hlt
ljmp
addr16
lret
ds
movsb
out
xchg
in
cmp
push
outsb
pop
call
mov
dec
js
xchg
push
fdivrp
decl
cmpsl
dec
jmp
arpl
pop
adc
sarb
push
mov
push
dec
test
or
lods
mov
pushl
insb
or
mov
out
imull
add
clc
push
in
jg
push
jecxz
add
lock
pop
jmp
into
int3
fwait
xchg
arpl
or
clc
popa
call
into
dec
rcll
pop
pop
jns
xor
pop
movsl
shrl
loop
fldcw
adc
mov
dec
cmp
push
iret
push
mov
dec
cmp
outsb
jne
mov
mov
out
inc
jl
sti
ja
pusha
jno
adc
add
jg
sbb
push
lret
test
data16
sub
adc
add
popf
movsb
insl
adc
mov
ljmp
in
inc
xchg
mov
ss
add
in
ljmp
push
lret
addr16
mov
dec
push
or
xor
pushl
inc
jbe
sub
aas
sbb
cmp
pop
cmovb
cltd
cmp
mov
in
jnp
pushl
fldl
mov
adc
push
and
stc
cmpsb
pop
xor
pop
in
inc
dec
lcall
movsb
mov
pop
leave
int3
and
or
dec
aas
cltd
cld
jae
sub
shlb
jmp
fsub
test
cmp
ret
add
mov
mov
idiv
pushl
sbb
inc
mulb
sub
out
xor
movsl
inc
mov
sar
jmp
pop
xor
xor
dec
jl
filds
mov
nop
jge
pop
sub
mov
incb
data16
sub
les
rcll
enter
sti
inc
ret
lret
mov
aam
push
pop
into
stos
iret
std
jno
mov
xor
decl
mov
scas
adc
out
cmpsb
idivb
es
xchg
jne
cli
inc
bound
jle
add
dec
aaa
inc
pop
adc
or
pop
nop
mov
outsb
pop
icebp
lcall
imul
js
xchg
mov
cmpsl
xchg
outsl
add
loop
or
das
loopne
jb
loop
cmp
iret
enter
adc
les
mov
push
add
pushl
loopne
fidivrl
xchg
pop
ret
pushf
mov
shlb
mov
popf
lods
jle
ss
mov
mov
cs
out
in
pop
popa
out
mov
pop
das
lods
outsb
jmp
lods
sahf
and
shll
jns
jns
sub
jg
mov
jge
or
sbb
jg
dec
push
pusha
iret
clc
shrb
mov
ljmp
jp
mull
aas
mov
and
add
nop
nop
mov
negl
sub
mov
jmp
cwtl
fisttps
clc
push
in
xor
outsl
scas
mov
xchg
jle
test
xchg
cmp
movsl
sbb
dec
sub
lea
jp
lods
xlat
or
call
fidivs
or
imul
xchg
dec
sbb
adc
clc
pop
mov
adc
jmp
adc
dec
sti
pop
incl
sti
add
fstps
test
popa
inc
clc
mov
mov
pop
fnstcw
sub
adc
dec
inc
aam
cld
aaa
sub
adc
sub
out
mov
lahf
mov
dec
mov
sar
adc
cmp
or
outsl
ljmp
jmp
call
lods
cmpl
mov
add
aam
add
mov
scas
xchg
sub
or
imulb
xchg
loope
and
sbb
lock
decl
and
ljmp
xchg
sahf
imul
inc
cmp
ljmp
dec
pop
into
mov
aaa
loopne
xchg
es
pop
jl
les
xor
dec
xchg
mov
std
aaa
cli
call
repz
sub
cmp
push
push
pop
stos
and
imul
or
popf
in
cltd
aaa
push
mov
push
adc
ljmp
clc
clc
loope
dec
into
out
stos
jle
inc
popl
jae
cs
stos
jb
jp
rcrb
movsl
jg
out
mov
int3
cmp
jo
pop
pop
ds
dec
jo
push
sub
int
ret
sahf
in
add
std
jo
lcall
fcompl
lret
sub
lcall
popa
jge
cmpsl
in
xor
icebp
push
jmp
loop
jg
inc
loopne
inc
stos
aas
xor
and
das
or
mov
mull
movsb
mov
pop
cli
fcmovnb
lods
dec
lret
dec
sbb
fsubs
sub
jne
ret
mov
fcmove
fidivrs
push
adc
cmc
jge
loop
loop
in
ljmp
lahf
adc
xchg
add
xchg
fwait
outsb
lret
hlt
jne
lahf
sub
das
mov
cmp
xchg
inc
cmp
push
mov
dec
xor
mov
jecxz
cmp
jecxz
dec
xchg
decl
jns
mov
cli
pop
push
dec
xchg
andl
cli
inc
mov
and
das
lds
inc
add
push
jle
xor
or
jg
pop
test
loopne
pushf
shlb
mov
in
xor
incl
cmp
popa
add
ficoml
mov
xchg
ljmp
mov
insb
jbe
dec
sti
loopne
into
in
loop
gs
imul
insb
mov
pop
dec
pusha
xor
cld
xchg
add
out
mov
dec
cmp
bound
and
mov
sar
ljmp
lret
fisubs
mov
jo
pop
mul
and
decl
jns
aad
int3
or
jo
out
nop
jg
mov
test
adc
decl
iret
and
inc
movsl
gs
sub
es
rcr
or
mov
sti
fildll
sti
imul
js
test
push
in
and
clc
mov
mov
stos
ret
sahf
fdivrs
int
or
mov
xor
jmp
in
dec
mov
test
cld
lcall
or
lock
out
cmc
pop
mov
inc
jle
fstps
fidivs
fbld
ret
out
popa
out
jns
stos
xor
fnsave
lods
jne
repnz
push
jmp
loope
sub
dec
mov
dec
xlat
dec
inc
je
into
loopne
lret
sub
pop
or
arpl
jmp
lcall
lcall
ret
movsb
mov
add
js
mov
mov
insb
and
and
jns
js
lock
mov
pop
repz
mov
std
lret
pop
inc
aaa
scas
pushl
sub
and
pop
ss
nop
and
jl
arpl
add
in
adc
dec
jns
xor
cmp
jmp
xor
add
call
mov
dec
out
cmp
js
adc
pminub
jns
inc
xor
incl
loop
fnstenv
xchg
aad
addb
ds
pop
push
notl
mov
std
fistpl
loop
fidivrs
mov
add
ljmp
lods
iret
inc
mov
in
popf
ja
mov
fs
cltd
sarb
ffreep
push
pop
jo
mov
fwait
cmpsb
sub
out
fcoms
repz
or
cmpsb
fld
fs
mov
pop
xchg
xchg
cmp
push
push
cltd
imul
mov
ja
lea
ljmp
dec
into
inc
lret
mov
sarl
and
pusha
inc
and
and
sbb
pushl
movsb
xlat
loope
out
insl
test
pop
ud2
push
andb
inc
ja
mov
sbb
and
mov
test
cwtl
pop
sbb
pop
jo
lret
mov
nop
insb
dec
sub
fldt
hlt
loop
negb
sub
jb
adc
scas
dec
fnstsw
mov
sbb
push
pop
cmp
lock
adc
nop
mov
lds
cld
lar
mov
sar
cmpsl
dec
dec
push
xchg
mov
les
lret
push
sti
inc
inc
jmp
mov
inc
std
popa
fs
mov
popa
and
cmc
incl
cltd
lcall
fwait
add
sbb
popf
js
ret
xor
dec
push
mov
out
cs
or
xchg
popf
cmp
mov
inc
and
inc
push
pop
call
fists
and
jb
test
or
jmp
jne
stc
and
inc
pop
and
scas
icebp
add
cli
mov
mov
cmpl
inc
push
loopne
adc
sahf
mov
jge
loop
dec
nop
int
lods
das
dec
in
movsl
pop
xor
mov
xchg
in
xor
scas
or
lods
dec
dec
cld
cmc
or
pop
push
jno
test
adc
incl
and
loope
xchg
idivb
mov
std
out
or
and
jne
pushl
int3
dec
add
dec
push
cmp
ljmp
mov
fwait
aas
inc
xor
lcall
xchg
cmpl
aaa
mov
push
pop
and
xor
mov
add
sbb
add
jmp
and
cmc
cmc
leave
in
push
push
sahf
iret
sub
lods
out
inc
adc
ljmp
jne
lea
in
popf
sub
add
or
xor
xlat
loop
sbb
push
enter
pop
andb
insb
outsl
cmc
xchg
clc
jp
in
sahf
pusha
push
lods
inc
jg
mov
sbb
call
push
push
imul
jnp
lcall
and
sahf
pop
test
les
cmp
lret
xchg
arpl
pop
insb
decb
push
mov
fnstsw
dec
mov
add
into
sub
pushf
xchg
mov
or
outsb
out
fnsave
jle
ljmp
test
mov
xor
stc
xchg
xlat
xchg
bound
into
pop
movsl
push
loope
mov
jp
xchg
dec
sti
out
shrd
xor
jns
pop
mov
push
hlt
fmul
add
bound
cmp
xor
cs
repnz
decl
lods
fucom
jb
test
add
adc
ss
add
pushl
dec
nop
clts
sbb
fucomp
scas
daa
in
or
insl
adc
mov
dec
inc
and
fistps
sub
pop
mov
dec
inc
xor
push
mov
mov
jmp
adcb
decl
fsubr
jle
mov
jb
adc
inc
popf
addr16
jmp
ret
fiadds
pop
mov
testb
test
call
scas
mov
jle
pushf
sahf
inc
sbb
xor
lret
loop
mov
mov
push
movsl
inc
das
add
daa
jo
out
jno
outsl
cmc
ret
pop
hlt
std
mov
mov
cmp
ljmp
cmpsb
dec
mov
test
mov
cwtl
into
cld
out
cmp
mov
je
xchg
daa
ror
mov
cmc
call
and
test
sbb
popf
orl
nop
jbe
andb
adc
and
out
push
ret
aam
jge
xor
jp
out
test
out
std
dec
inc
mov
test
xchg
inc
fs
les
mov
and
mov
cmpsl
pop
js
and
jno
aad
mov
nop
mov
and
cmp
sub
sbbl
call
xor
pop
and
dec
inc
cs
data16
test
mov
loop
adc
ljmp
call
dec
lods
cltd
push
cmc
out
imul
push
push
out
scas
aaa
clc
inc
sbb
inc
jne
mov
mov
dec
and
inc
jo
ljmp
std
psraw
negb
mov
dec
enter
in
fists
xchg
cli
movsl
inc
outsl
mov
rclb
jnp
pop
sub
sbb
ljmp
incl
inc
wrmsr
ja
jno
lahf
out
xor
jge
pop
mov
pop
imul
das
cmc
push
sbb
test
jl
es
cli
jg
outsl
xor
outsl
dec
stos
and
mov
fbstp
push
and
and
icebp
fwait
cmp
mov
mov
or
aam
sbb
push
ljmp
sahf
out
cli
jmp
lret
mov
jle
mov
xchg
fidivs
out
outsb
push
nop
add
lods
cmpsb
stos
jge
arpl
sub
cwtl
dec
mov
xor
lods
mov
out
cmp
and
lcall
testl
dec
iret
ljmp
mov
insl
shll
leave
das
ljmp
xchg
cwtl
mov
sbb
mov
insb
xchg
loope
mov
mov
shrb
dec
imul
or
in
rcrl
lods
loop
aaa
ficoml
and
popf
mov
inc
sub
xlat
out
into
dec
or
je
sub
xchg
or
xor
mov
loop
call
fstl
push
loop
cmp
xchg
add
imul
icebp
std
mov
lcall
xor
ficompl
or
mov
lcall
fcoms
pushf
sub
jo
rcrb
push
cmp
incl
ljmp
and
add
ljmp
std
lret
sub
adc
movsb
or
or
out
out
mov
lcall
cld
sbb
fimuls
cmc
aad
lret
cmpl
lret
std
pop
jno
std
jmp
mov
mov
js
fsubs
inc
xor
aaa
into
cmp
push
xor
xor
outsl
sbb
cld
sbb
imul
jae
test
adc
test
sbb
mov
clc
jo
outsl
and
xchg
mov
lret
fwait
jl
sbbl
call
incl
jne
adc
push
xchg
xchg
cmp
pop
call
das
sar
push
inc
jne
div
jl
in
hlt
xchg
loopne
ret
mov
lcall
cltd
dec
into
pop
mov
inc
insb
and
outsl
push
int
mov
in
stos
repnz
arpl
pop
lods
pusha
bound
push
movsl
daa
ret
movb
arpl
jno
addr16
cs
mov
mov
sub
pop
std
jg
incl
ljmp
jge
insb
sbb
cli
mov
xchg
dec
pop
decl
fincstp
in
insb
daa
add
sbb
imul
clc
fldl
add
cmp
clc
daa
jp
inc
je
mov
jle
mov
push
mov
sub
decl
frstor
xchg
cli
xor
add
outsl
icebp
decl
jb
fcmove
lahf
fidivl
sbb
add
pop
xlat
jecxz
incl
mov
dec
rolb
xchg
lods
fwait
jg
adc
mov
or
jg
cmp
aas
dec
adcb
push
mov
ljmp
fidivs
push
cmp
test
lea
imul
mov
movsl
jge
pushf
rorl
lea
pop
int3
fimull
lcall
sbb
fisubrl
je
leave
sub
sbb
cmpsl
or
stos
cmp
imul
mov
daa
test
imul
jl
adc
xchg
test
push
cmpsl
enter
mov
xor
jmp
repz
dec
ljmp
incl
leave
enter
dec
adc
hlt
jg
das
repnz
pop
mov
subb
cmpb
call
sti
add
out
mov
add
mov
mov
sbb
ret
mov
and
in
fidivl
clc
inc
xchg
std
test
aad
cmc
ja
gs
push
cmpsl
lcall
mov
add
jnp
pop
inc
xor
je
push
jmp
dec
pop
xchg
out
idiv
mov
push
dec
adc
push
push
enter
sbb
scas
lcall
loop
mov
mov
decl
sbb
mov
fisubs
jle
call
add
cmp
jb
pop
push
mov
out
or
cs
rclb
stc
test
incl
cmpsl
jae
fcoml
loope
dec
scas
cli
outsl
jne
mov
xor
bound
inc
rorb
add
scas
xor
sub
dec
movsb
in
dec
nop
call
cld
in
hlt
mov
mov
inc
adc
jl
fistpll
fsub
xchg
out
xchg
xchg
js
jle
jl
addr16
mov
jmp
aad
sub
rcll
mov
mov
aam
aad
jb
jl
jnp
sub
sarl
ljmp
sbb
xchg
test
and
stos
outsb
xchg
dec
addl
and
popa
adc
pop
sub
jmp
cmpb
mov
push
pop
mov
fimuls
in
out
mov
push
repz
adc
dec
mov
or
test
lahf
sub
inc
pushf
jo
inc
orb
shll
pop
mov
xchg
mov
fs
sub
jg
pushl
xchg
out
pop
aas
negl
dec
lret
jbe
adc
mov
lods
int3
outsb
sub
add
adc
sti
jecxz
cwtl
cs
inc
out
not
dec
cld
call
dec
dec
cld
dec
fs
xchg
xchg
lahf
out
cmp
mov
push
mov
mov
sub
outsl
pop
jmp
int
jecxz
mov
mov
out
aas
das
adc
push
and
lods
gs
pop
dec
cmc
in
lahf
cwtl
imul
xchg
and
jp
mov
inc
and
es
fwait
sbb
fwait
sbb
mov
decl
sub
fs
lcall
inc
aad
xchg
sbb
jns
ficoms
or
dec
jbe
rolb
in
adc
les
sbb
mov
sar
cmpsl
movsl
adc
fcom
decb
cmp
lcall
lret
subb
and
pop
iret
or
pushl
popa
fldl
cmpsb
ret
cmpsb
dec
ja
jae
mov
je
mov
mov
loope
stc
ljmp
je
out
inc
pop
dec
pop
lods
sbb
sub
dec
lret
shl
xchg
es
outsl
hlt
call
pop
ret
popa
int
outsb
pushf
jmp
or
mov
ficompl
clc
out
adc
cmp
xlat
sub
cmp
inc
adc
push
inc
aam
jo
or
pop
loop
jmp
mov
jno
mov
popf
push
cmp
and
add
ljmp
hlt
faddl
mull
cmp
fs
adc
xchg
xor
cld
incl
fwait
cmpsl
add
push
xchg
lahf
cmpsl
in
cmp
ja
or
jg
ljmp
inc
push
xlat
stos
loope
fidivrs
xchg
push
push
inc
jae
lock
jge
dec
jb
xchg
xchg
sub
jns
scas
xchg
pop
lock
jb
inc
or
es
loopne
sbb
sbb
cmp
or
cmpsl
fildl
stos
xlat
push
jmp
and
cli
mov
and
or
dec
cld
movsb
push
and
push
jmp
arpl
push
adc
aaa
or
sbb
adc
outsl
sahf
adc
adc
inc
lods
sbb
insl
mov
cld
dec
js
xchg
orb
add
mov
mov
pop
push
add
decl
pop
sarb
movsb
ficompl
dec
xor
aaa
adc
adc
out
mov
cmp
repnz
and
add
pop
xor
pushf
pop
dec
cmp
xchg
cli
decl
pop
ja
dec
xchg
sub
js
sub
aam
add
lock
jns
push
jmp
call
les
and
fs
rclb
out
add
ljmp
mov
popf
mov
repz
or
clc
mov
mov
pusha
push
push
xchg
add
jg
decl
mov
mov
pop
addl
sub
mov
inc
fs
mov
jbe
pop
dec
jp
mov
sub
rcrl
inc
es
sub
cmp
outsb
mov
inc
mov
xchg
repnz
lcall
add
imul
cwtl
imul
ss
std
sbb
lock
push
push
cmp
sahf
addb
dec
into
repnz
loope
push
add
inc
sbb
fmull
mov
icebp
dec
fists
enter
fs
fsubrs
call
popa
inc
es
xchg
stos
sub
decl
cld
fidivs
or
xchg
scas
mov
ds
lahf
movsb
pop
mov
xchg
ds
bound
ret
cmp
xchg
jecxz
leave
add
lods
notl
aad
leave
test
outsl
pushl
cmp
sub
stos
lret
ds
mov
pop
lret
dec
sbb
fisttpl
mov
push
stos
lods
adc
aaa
add
mov
pop
mov
xor
aad
nop
cmp
cmp
sub
lcall
shlb
out
ror
inc
or
ss
adc
add
mov
mov
out
add
pop
ret
jg
movsl
pusha
adc
psllq
incl
lea
lcall
mov
push
cmp
or
inc
dec
adc
add
out
mov
cmc
jg
test
inc
mov
stc
push
sbb
ret
jp
ss
mov
mov
mov
push
roll
xor
ljmp
mov
out
ja
pop
repz
jno
arpl
push
jnp
nop
pop
mov
cltd
mov
jp
xchg
scas
enter
outsl
fnsave
push
jecxz
cmp
inc
cmp
jmp
pop
xchg
insb
xor
andb
ja
enter
cmp
push
cmpsb
inc
dec
mov
ss
hlt
stos
aaa
or
das
std
push
divb
push
fcom
jmp
fwait
daa
outsl
adc
and
insb
icebp
mov
pushl
xor
fdivrs
cmp
jle
mov
sti
aaa
cmp
fwait
xchg
out
sbb
xor
or
sbb
ficoml
and
shr
xchg
pusha
mov
mov
repz
sbb
orl
mov
cmpsl
dec
sti
mov
pusha
shrl
fbld
xchg
fdivrp
fistps
and
testb
imul
rcll
sbb
mov
insb
stos
adc
jg
incl
xchg
addr16
stc
xchg
into
outsb
adc
mov
or
outsl
cmc
jmp
pop
cmpsl
and
and
xchg
push
lahf
inc
jecxz
pushf
divb
sub
das
lock
fdivl
lret
outsl
inc
std
pop
loope
fbld
cld
jg
cwtl
add
mov
jg
in
xor
adc
mov
imul
movsl
and
jb
loop
pusha
stc
out
dec
repnz
pop
fldl
aad
mov
xchg
jmp
mov
pop
jle
in
icebp
add
lea
dec
push
ljmp
scas
adc
mov
inc
scas
in
push
stos
stos
mov
push
mov
add
aam
int
call
hlt
dec
mov
sbb
imul
and
push
jbe
pop
jmp
inc
hlt
stc
sbb
arpl
dec
sahf
cmp
aaa
xchg
sbb
incl
testb
mov
dec
adc
leave
rcrb
jnp
mov
sub
xchg
add
ss
or
out
dec
push
inc
push
push
jg
mov
call
sub
aam
repz
lret
jmp
dec
and
jg
jae
js
int
jge
or
incl
sbb
mov
pop
mov
loop
decl
mov
jb
call
call
mov
dec
inc
add
and
mov
dec
mov
imul
jg
hlt
ja
fdivrl
aam
das
add
popf
repz
je
icebp
mov
inc
in
sub
and
jg
cli
push
pushf
enter
fsubrs
push
call
ret
pop
rcl
mov
pushl
and
xor
scas
js
push
pop
xlat
cli
movsl
outsl
fsubl
pop
scas
cmp
ja
cld
jb
mov
jl
xchg
xchg
sahf
xor
pop
clc
fnstcw
add
xor
jg
clc
cli
or
sub
inc
fcoml
outsb
imul
mov
fnsave
push
aas
aaa
clc
ljmp
dec
cmp
mov
or
ret
fsub
mov
xchg
ljmp
or
fisubrs
push
inc
push
push
xor
inc
fstp
pop
hlt
cmp
lcall
xlat
int3
xor
pop
aam
pop
push
movsb
add
and
xchg
imul
sub
cmp
cmc
jg
xchg
dec
repnz
addl
push
inc
dec
pop
scas
jge
pusha
aaa
xlat
adc
popa
imul
push
shrl
dec
pop
imulb
mov
push
jno
dec
push
scas
lock
cli
pushl
mov
pushf
push
mov
aam
lret
adcb
jl
lock
dec
inc
sbb
cli
mov
lea
pop
adc
jecxz
cli
iret
inc
addr16
push
fiadds
sbb
hlt
addr16
in
xor
lea
adc
jne
out
subb
iret
leave
mov
lock
cmp
loope
mov
adc
incl
lea
mov
pop
jmp
mov
inc
xchg
mov
lods
push
push
in
in
jl
push
sbb
rorl
cmc
call
mov
mov
push
dec
xorl
std
pop
pushf
jecxz
jo
movsl
inc
shl
pushl
clc
das
cld
orl
fisubl
daa
insb
aas
xchg
roll
adc
scas
dec
jo
pop
cmp
lds
incl
push
out
mov
push
pop
nop
jbe
cld
adc
cmp
jmp
mov
aas
aad
jmp
add
inc
sbb
inc
pop
pop
das
mov
jl
mov
addr16
pop
fdivrs
pop
pop
insl
pop
ja
pop
fimull
stos
call
jnp
daa
xchg
push
pushf
or
sub
inc
xchg
add
bound
xchg
add
cmpsl
inc
mov
mov
jae
cmp
movsl
push
stos
mov
lret
cmp
dec
sub
mov
call
shlb
push
repnz
push
mov
out
jp
outsl
push
out
cmpl
call
outsb
lcall
pop
mov
jge
xchg
das
mov
arpl
sbb
sti
decl
push
xchg
dec
fstps
repz
jg
cltd
mov
xor
es
in
ds
jp
inc
xchg
stc
cmp
cli
jge
outsl
dec
lock
fbstp
imul
push
cmp
xchg
mov
jno
mov
mov
cltd
insl
rorb
mov
mov
or
arpl
call
mov
cmpsb
popa
scas
sbb
movsb
push
notl
ds
js
pop
inc
xchg
push
call
ljmp
mov
jno
push
pusha
stos
adc
pop
outsl
pusha
rolb
xchg
and
test
dec
cs
jo
icebp
outsb
sti
jo
jmp
lret
mov
pushl
je
jbe
mov
or
subl
jo
mov
jg
sub
stos
mov
fistps
jno
cmpsb
popl
sti
jp
mov
mov
scas
stc
xor
jns
add
mov
mov
test
or
jmp
jle
pop
shlb
mov
ret
sub
cmp
icebp
lcall
out
je
and
and
sub
inc
ret
int
stos
jo
push
adcl
dec
dec
push
sub
pop
jle
pop
or
add
dec
xor
mov
incl
adc
or
shrl
or
sub
decl
mov
add
int3
js
ss
sbb
out
xor
pop
test
push
decl
rcrw
std
insl
and
adc
pop
bound
leave
lcall
insl
jae
sahf
jg
std
xorl
imul
push
or
lret
sbb
call
cmc
out
or
subb
popa
pop
jl
sub
add
adc
xchg
cli
mulb
mov
outsl
call
mov
daa
xor
icebp
sub
and
pop
xor
sbb
push
pushf
or
loope
xor
push
mov
decl
bound
push
push
int3
lock
mov
push
pop
imul
jp
and
lea
out
adc
nop
shrl
shr
and
jnp
add
sahf
fldl
jo
mov
adc
mov
jb
out
das
icebp
lcall
int3
popa
push
insb
aad
push
dec
jmp
ds
ret
pop
jg
sbb
mov
cld
or
mov
mov
jp
repnz
insl
lcall
mov
out
push
jae
mov
ja
cmp
jbe
push
inc
insl
xor
jp
mov
call
cmp
bnd
mov
test
or
rcrl
decl
push
adc
mov
sbb
pop
mov
lock
mov
movsb
push
in
pop
adc
aam
outsl
icebp
jg
movsb
mov
insl
add
sahf
ret
dec
jg
fadds
pop
mov
loopne
jbe
data16
mov
aam
in
shll
ror
in
std
pushl
out
mov
icebp
sub
pusha
cld
std
fimull
ficomps
xchg
test
pushl
clc
xchg
nop
adc
adc
sub
inc
test
out
lods
paddq
pop
clc
mov
sbb
icebp
inc
inc
xchg
and
sbb
jl
jmp
mov
xchg
pop
rcll
clc
sti
xchg
mov
outsb
aas
sbb
cli
call
sbb
push
sub
mov
cwtl
bnd
test
mov
testb
incl
sbbb
je
popa
lret
xchg
cmp
repnz
aaa
aam
imul
jg
mov
add
mov
inc
repz
xchg
inc
je
in
cmp
jmp
pop
or
push
adc
xchg
cwtl
or
fucom
xchg
push
mov
or
sbb
scas
push
mov
jmp
push
pop
movsb
fdivr
mov
in
adc
jnp
adc
or
cmc
xor
xchg
sub
imul
mov
push
mull
pop
add
test
cmp
push
mov
jmp
popa
iret
shll
sub
divl
dec
sbb
push
incl
jmp
pop
inc
pop
into
sub
je
cs
loop
out
iret
clc
hlt
cmp
add
sahf
mov
mov
pop
cli
mov
or
insb
and
mov
jle
fcomps
aas
cmp
sbb
fsubrl
jg
ljmp
dec
cld
push
fdivs
mov
jne
add
lds
incl
out
out
ja
incl
jg
push
jecxz
rol
int3
movsl
popl
pushl
loopne
cmovo
push
nop/reserved
dec
push
or
xchg
add
aad
rcrb
imul
dec
adc
cmp
insl
jns
scas
mov
xchg
lock
push
xchg
cmp
outsl
cmpsb
ss
jle
movsl
rolb
push
sbb
call
push
iret
or
addl
lret
xor
jge
stos
js
icebp
in
test
push
mov
and
cmp
lcall
call
xchg
push
sub
lahf
incl
jmp
jo
gs
int
fidivrl
lcall
sbb
ret
in
sbb
push
js
pushf
sbb
xchg
adc
mov
test
pop
clc
jmp
roll
cs
push
lcall
jo
xor
jnp
and
jne
mov
cmp
mov
fcomps
in
sar
jns
cmp
sahf
int3
mov
inc
aaa
jmp
adc
mov
es
lock
cld
cs
xchg
sbb
popa
push
adc
ljmp
fld
jge
push
mov
es
stos
sarb
jnp
cmc
mov
adc
dec
adc
sbb
ja
inc
scas
dec
cmp
sbb
int3
bound
and
loope
ljmp
mov
mov
dec
xlat
pop
dec
xor
into
mov
dec
lds
icebp
inc
data16
xor
jg
call
ficomps
mov
adc
jno
xor
pop
popa
push
xlat
mov
sub
mov
pop
outsl
xlat
mov
decl
imul
xor
mov
sub
daa
xchg
mov
cmp
popa
sub
iret
push
int
incl
ljmp
test
jecxz
inc
test
test
pop
pop
mov
cmpsb
adc
outsl
jne
pop
enter
push
sysexit
mov
imul
xor
outsb
dec
fisubrs
movsl
imul
lret
or
jb
push
gs
xchg
outsl
cmc
dec
cld
imul
std
filds
add
jge
cmp
stos
fsubrs
xchg
lcall
xchg
lock
mov
sub
shlb
lret
insb
ret
lock
ljmp
cld
fistpl
and
sbb
push
push
mov
xchg
or
push
pop
pop
sar
fnstsw
cmpsl
es
pop
jae
xchg
mov
adc
loope
dec
sar
outsl
hlt
call
testb
jno
in
mov
push
mov
cld
hlt
ret
pushl
dec
sbb
fisubrl
jns
jmp
insb
dec
fimull
xor
cmp
leave
sub
mov
jg
movsb
push
mov
out
mov
not
dec
mov
or
dec
xchg
rorb
incl
stos
jecxz
in
inc
xor
and
mov
fs
and
xchg
pop
dec
icebp
xor
out
lea
clc
mov
jo
popf
xlat
mov
mov
sub
inc
jecxz
movsb
int3
mov
js
lea
mov
dec
repnz
mov
sti
jp
dec
les
jnp
sahf
inc
out
or
xor
add
mov
adc
test
fldl
ss
jae
adcl
clc
inc
jnp
scas
cld
loope
and
in
or
bound
xor
jp
jae
push
hlt
movsl
add
sahf
or
mov
push
out
dec
jbe
pop
in
in
cmp
push
mov
push
xor
add
in
int3
xor
into
andnps
add
lods
and
outsb
push
mov
push
ret
je
psubsw
in
lcall
mov
call
dec
mov
enter
mov
movsl
repz
inc
lea
icebp
bound
std
incl
decl
not
push
push
inc
rcrb
jnp
lret
int
mov
test
mov
sbb
cmp
cmp
add
push
jae
ret
imul
enter
mov
xor
jg
incl
mov
or
enter
xchg
mov
out
jo
mov
push
call
sub
call
pop
scas
cmc
fimull
fimull
xor
mov
int3
dec
pop
lret
xchg
inc
mov
addl
clc
jmp
mov
lods
cmp
push
orb
mov
sti
pop
pop
mov
aas
xor
int
cmp
pop
iret
jno
rolb
cld
pushl
xorb
aam
lds
sub
or
addr16
sbb
dec
dec
fwait
test
add
test
and
xor
xor
incl
imul
sbb
divl
lahf
lock
xchg
inc
and
push
out
cmp
dec
sbb
dec
adc
sbb
cmpb
jmp
xchg
lock
cmp
cmp
lods
lret
pushl
sub
das
addb
loop
and
sub
pop
jne
ljmp
jae
mov
dec
popf
add
add
adc
ljmp
aaa
mov
popa
mov
push
sarb
adc
lcall
jne
xlat
imul
pop
arpl
adc
loope
insb
out
xchg
scas
or
fldln2
mov
in
lock
jp
mov
adc
shll
jnp
sub
add
out
xor
adc
dec
sbb
sarl
rcrl
lock
pusha
in
imul
repz
fdivs
mov
or
fnsave
cmpsb
mov
add
mov
divl
aas
fsubrl
fcmovu
stos
lcall
jns
sub
and
push
out
lret
pminsw
hlt
es
mov
push
hlt
xor
out
or
lods
xchg
push
xor
fwait
in
mov
inc
imul
popf
loopne
sbb
mov
test
pusha
subb
pop
loopne
fbstp
divb
loope
shlb
sbb
hlt
dec
ljmp
bound
mov
test
inc
lock
xor
loop
fucomip
fistps
mov
and
sti
inc
das
pop
gs
sbb
inc
ds
decl
sti
ljmp
fsubs
pusha
dec
adc
xchg
fsubrp
inc
mov
pop
inc
mov
sbb
pushl
push
adc
sub
ljmp
clc
incl
sarb
hlt
pop
xorl
popf
mov
loopne
std
cmpsl
mov
ljmp
cld
aam
jnp
aaa
call
sub
adc
push
sbb
call
outsl
je
pop
xchg
mov
and
or
sub
in
ret
mov
scas
push
stc
out
arpl
int
lods
fcompl
mov
fdivs
not
cmp
ror
push
mov
mov
pushl
daa
adc
inc
xchg
aad
xor
lods
insl
jno
pop
dec
ljmp
test
incl
xchg
dec
dec
aaa
addr16
xchg
jb
ljmp
pop
div
ret
out
call
sti
push
ljmp
sbbb
mov
push
icebp
lcall
lea
mov
stc
push
popf
test
icebp
mov
sub
sbb
adc
sub
decl
insl
cvtps2pi
in
jnp
insb
or
out
in
sti
jle
dec
stos
push
stc
inc
insl
fisubrs
jns
jmp
sub
sbb
loopne
out
mov
push
scas
test
popf
xor
sub
mov
adc
mov
lods
insl
xor
mov
fisubl
mov
fs
nop
imull
cmpsb
mov
sbb
sbb
fidivrl
ljmp
in
cltd
aad
insl
push
xlat
repz
pop
hlt
jl
aad
cmp
outsb
mov
cld
lcall
int
inc
jns
mov
movsb
xlat
test
int3
lods
jp
lret
in
jg
lcall
add
into
xor
fnstsw
js
in
daa
decl
pushl
sub
mov
jle
bound
adc
sbb
call
mov
in
jmp
fmulp
dec
in
mov
xchg
mov
nop
insb
int
mov
pushf
jmp
jmp
mov
inc
mov
push
fs
inc
mov
es
repnz
bound
sub
pop
inc
push
xor
ljmp
pop
mov
jmp
add
sbb
outsb
dec
mov
loopne
add
test
aas
into
mov
ljmp
insb
js
cmpl
ljmp
cld
push
into
bound
pop
mov
mov
jno
imul
cld
cli
push
int3
mov
cmp
jle
test
and
in
or
inc
sbb
es
mov
inc
cmp
xlat
mov
inc
sub
or
sbb
jno
xchg
movsl
and
pushl
or
or
mov
test
jp
movsb
icebp
aam
in
call
pop
aam
lods
jo
xchg
sti
cmp
mov
push
gs
ret
stos
incl
sahf
mov
stos
adcl
push
fimull
xor
jmp
or
cs
adc
sbb
push
loopne
std
ja
dec
push
or
andl
lahf
pop
or
inc
push
mov
inc
imul
pop
mov
icebp
pop
sub
or
repnz
jge
divl
call
mov
add
lods
adc
aam
jo
pop
push
push
loop
mov
add
cmp
fucomip
call
dec
add
sub
aad
or
mov
imul
sub
std
lcall
push
add
insb
mov
js
add
fs
das
add
xchg
or
sub
in
loopne
scas
enter
ror
dec
scas
push
call
push
pop
lock
adc
bound
inc
fidivrs
pcmpgtb
cmp
call
outsl
sbb
xor
cld
inc
and
arpl
push
mov
mov
pop
out
es
std
test
cwtl
sahf
sub
or
jl
pusha
ficoms
aaa
test
mov
stos
xorl
dec
sub
popf
cwtl
mov
aad
and
push
ja
mov
incl
dec
enter
sbb
in
divl
sarb
xchg
shlb
call
mov
test
into
dec
xor
mov
xlat
jmp
outsl
push
inc
mov
std
lea
cltd
int3
jge
pop
xchg
add
lahf
mov
push
push
dec
push
push
add
add
inc
addr16
adc
sub
dec
lahf
jae
pushf
mov
ljmp
mov
das
insl
or
cmpsb
cmp
cmp
js
pop
xchg
popf
sar
std
rclb
incl
lcall
mov
in
ljmp
mov
jmp
cmp
sbb
pushf
ja
jbe
push
and
mov
ja
adc
decl
pop
pop
or
mov
ret
scas
mov
popa
mov
cmp
jo
data16
ljmp
sbb
aaa
shr
push
int
adc
fs
add
adc
lcall
aam
call
mov
xchg
xor
data16
mov
cmp
cs
inc
push
dec
jb
loop
pop
sbb
jmp
sub
xor
push
decl
push
test
rolb
sbb
ljmp
jno
ror
xchg
mov
pop
loop
lods
add
pushl
or
xchg
dec
xchg
pop
cmp
cmp
sub
cmp
jp
inc
hlt
dec
lcall
call
outsl
push
daa
inc
pop
pop
scas
leave
ds
ss
aad
or
cmpl
insb
xlat
test
sbb
lret
lock
out
adc
cmp
jmp
and
imul
push
int
ljmp
add
push
jbe
sbb
or
cmp
repz
jg
jmp
sub
stos
iret
fs
pop
add
popf
dec
lods
das
into
or
decl
jmp
lahf
shll
test
or
and
decl
mov
negl
stos
out
pop
add
xchg
pop
lcall
cli
aad
addr16
sbb
inc
scas
dec
fwait
mov
or
scas
jne
pop
clc
adc
sarl
in
negb
icebp
insl
dec
daa
popa
add
fs
mov
adc
decl
xor
outsl
mov
pop
jmp
cltd
leave
outsb
orb
cmp
xchg
mov
repnz
adc
pop
mov
push
cmp
gs
inc
pop
cmp
insb
mov
notl
lret
or
stos
push
dec
add
cmp
loopne
cmc
sub
imul
insl
mov
shlb
fsubl
ja
push
decl
stos
and
insb
sub
sbb
jns
inc
mov
or
pop
jg
mov
fndisi(8087
aam
test
sub
repnz
jmp
cli
push
xchg
clc
sub
movsl
pop
lods
pop
and
xor
push
aad
or
or
in
outsb
mov
ljmp
shll
sbb
add
jbe
jmp
iret
imul
push
stos
movsl
inc
jecxz
dec
insb
js
dec
pop
sti
push
icebp
jg
insl
sahf
lock
push
adc
ds
das
repz
test
mov
daa
jns
rolb
xchg
inc
sub
cmc
xchg
shl
mov
xor
scas
mov
mov
jge
les
pop
fstps
cmpsl
jne
pop
out
sbb
fsubs
mov
inc
call
and
shll
std
clc
pop
mov
pop
mov
jmp
out
sbbb
lock
jb
inc
fimuls
mov
mov
ror
adc
jmp
decl
cmc
add
ljmp
insb
push
mov
ljmp
push
lock
add
mov
jns
mov
jl
mov
in
jbe
decl
jl
insb
sub
lret
jns
dec
fnsave
pop
out
mov
sbb
dec
push
push
cmpsb
jg
mov
mov
pop
packsswb
shll
pop
xchg
mov
bound
adc
xchg
cli
jl
cmp
in
pop
cwtl
scas
adc
pop
into
mov
cs
inc
call
push
sbb
addr16
jmp
ljmp
xchg
adc
test
or
imul
ljmp
push
insb
daa
push
cs
cmp
jnp
imul
dec
or
xor
shll
lcall
out
js
ss
jbe
scas
inc
je
lret
add
dec
xor
adc
xchg
imul
pushl
mov
push
repnz
mov
cmp
inc
mov
sbb
sbb
fucom
inc
cmp
pop
push
dec
pop
push
mov
inc
test
in
jae
out
pop
test
aad
and
fnsave
xchg
das
and
loop
pushl
mov
int3
in
push
sahf
out
pop
inc
mov
popf
jns
mov
sub
lcall
cmp
mov
dec
test
repnz
sub
rcrb
or
stos
jg
test
je
das
gs
or
ds
clc
outsl
adc
fnstcw
incl
insb
fcompl
imul
int
in
repnz
mov
mov
cmp
cmp
fbstp
ljmp
cmpsb
pop
sbb
jns
cmp
pop
jns
ljmp
or
mov
enter
cmpsb
loopne
sar
and
cmp
dec
aaa
inc
mov
in
clc
add
hlt
push
imul
jmp
cmp
xor
aam
mov
int
test
cld
ljmp
xchg
mov
push
and
rol
in
inc
loopne
je
or
ljmp
idivl
push
popf
fsubl
pop
imul
jge
cltd
pop
cld
sbb
add
adc
aam
enter
sbb
cmp
decl
jge
das
sbbb
mov
or
outsl
pop
jb
andl
pushl
cli
xacquire
mov
push
repz
pop
pop
jp
clc
in
lds
mov
mov
sub
xor
daa
or
sbb
xadd
sarb
inc
mov
sub
cwtl
stc
popa
int3
and
js
jg
mov
mov
aad
scas
scas
xchg
out
icebp
jmp
pop
cmp
mov
test
jmp
xchg
movsl
mov
fldt
push
add
inc
ljmp
lar
cmp
test
mov
jg
cli
ja
mov
ljmp
das
inc
mulb
lahf
mov
dec
mov
xchg
test
jmp
in
cmpsb
jmp
jle
pop
idiv
push
in
mov
push
inc
dec
add
andb
pop
mov
roll
out
push
lods
fistpl
cmpsb
fadd
cmp
xchg
clc
lcall
pop
mov
arpl
movsl
lret
xchg
lret
test
mov
lcall
cmpsl
xor
inc
or
jg
pushl
fnstenv
cwtl
xchg
push
sub
mov
xor
jg
data16
stos
pop
cmp
dec
jb
pop
xchg
jbe
add
shl
jecxz
push
pop
clc
jg
and
shll
push
call
gs
test
cmp
fildll
mov
xchg
cmpb
into
cmp
nop
cmp
fistps
ror
testb
jge
mov
out
adc
das
mov
lcall
sub
insb
pop
push
hlt
loopne
and
mov
sbb
add
mov
pop
dec
push
ds
das
icebp
or
ret
push
mov
jo
add
pop
out
adc
inc
mov
rcll
cmp
rcl
adc
push
jg
jg
push
xchg
xor
add
sub
push
xchg
xchg
ljmp
loop
cmp
insl
fimull
movl
rcrl
xor
push
les
xchg
pop
sbb
adc
and
aad
push
filds
fildll
cli
mov
sti
push
mov
or
ret
add
add
stc
mov
aaa
popa
pop
or
fidivrs
roll
sub
dec
xchg
hlt
incl
and
pop
js
jg
movb
sbb
xadd
mov
sub
int3
sub
xor
xchg
push
hlt
iret
sub
addl
lcall
test
rcrb
or
cmp
push
add
popa
sbbb
ljmp
mov
adc
mov
ret
adc
dec
sbb
pushf
dec
xor
pop
call
sub
add
xchg
mulb
inc
insl
cmp
jle
mov
adc
fildll
imulb
sub
jecxz
notb
incl
in
jnp,pn
out
push
mov
xor
nop
out
leave
imul
adc
jno
and
jno
hlt
xchg
test
fsubrl
jge
xor
ret
cmp
addr16
fbld
pusha
xor
sbb
lcall
out
sbb
data16
fnstcw
add
inc
out
in
jnp
push
ljmp
lret
adc
mov
ljmp
rdtsc
mov
decl
pop
stc
shl
sarl
cltd
mov
or
mov
lahf
dec
lcall
lcall
mov
and
popf
repz
int
ja
cmc
inc
jle
dec
inc
or
ret
inc
jae
push
jg
lods
and
ljmp
out
int3
stc
add
sub
xor
pop
inc
call
stc
sbb
mov
mov
add
leave
dec
js
dec
adc
push
call
subl
xor
stc
pusha
pushl
xchg
jns
xor
jmp
outsb
mov
mov
cmp
addl
sbb
lds
cmpsb
sbb
aaa
clc
call
mov
cmp
int3
sbb
loope
fldt
icebp
sarl
and
icebp
mov
std
cmp
mov
adc
clc
mov
mov
jmp
in
cmpsl
pop
inc
add
mov
pop
or
insb
jge
pop
jmp
add
cwtl
sub
dec
fwait
incl
aaa
cli
xchg
xchg
lret
scas
and
int3
out
push
mov
push
inc
mov
mov
dec
push
mov
sbb
jg
mov
push
push
jmp
ret
fadds
cmpsl
ret
jecxz
into
dec
push
pop
cli
jmp
xchg
jg
mov
dec
mov
pop
int3
fisttpl
jg
jmp
in
arpl
leave
pop
loop
sbb
mov
mov
decl
dec
mov
out
xchg
ror
fstpt
mov
and
lcall
std
inc
sbb
pop
adc
rorb
sbbl
lds
pop
cmp
mov
stos
cmpsl
dec
stos
xor
sub
lcall
inc
andb
lret
roll
mov
mov
or
aad
cltd
sar
mov
jp
das
cmc
pushl
faddp
push
fs
loop
dec
repnz
in
jne
aas
mov
pop
lret
adc
lcall
int
or
xor
nop
shll
and
sub
mov
in
outsl
ljmp
in
jb
jae
data16
ljmp
je
dec
pusha
inc
rclb
cld
incl
into
sub
cmp
xchg
or
ret
sahf
sub
jo
sarb
lock
lock
mov
mov
sbb
insl
xchg
scas
adc
pushl
mov
sub
sub
out
jns
imul
dec
insb
pop
lcall
inc
loop
jmp
mov
lods
mov
xor
imul
imul
push
add
ljmp
add
loopne
mov
lret
arpl
addr16
data16
pushl
pop
or
sub
sub
iret
lcall
or
not
fwait
adc
aaa
clc
call
jae
xor
add
xlat
adc
test
sub
call
scas
jb,pn
cmp
mov
dec
sub
je
pusha
outsl
cltd
in
popa
call
or
stos
es
mov
pop
add
hlt
adc
inc
adc
fistpll
in
fcoml
in
ret
jmp
jl
sbb
in
mov
ljmp
lock
inc
xchg
push
addr16
jo
pop
xor
add
jb
or
daa
arpl
jg
jmp
sub
jle
inc
lds
cld
ja
push
stc
and
test
popf
fstpt
test
jo
push
out
cmp
pop
shrb
jg
xchg
and
cmc
sub
dec
push
scas
iret
push
xor
pushf
xlat
popf
pop
pop
cld
pushl
in
lds
ja
or
lahf
sub
push
outsb
jle
arpl
cmpsb
cs
add
icebp
lcall
loope
fistl
jg
pop
gs
and
or
clc
das
pop
lock
add
inc
xor
or
in
xor
xor
xor
into
add
btc
push
mov
icebp
mov
or
ss
mov
shr
out
adc
rcll
cmpsb
pop
sub
mov
call
and
and
test
scas
pushf
popf
xchg
mov
xchg
xchg
pop
dec
xor
out
movsl
adc
or
sbb
inc
shlb
rcrl
adc
pop
ljmp
lock
ss
or
pop
das
lods
arpl
repz
cmp
es
xchg
mov
jg
xchg
xor
xchg
cmp
jmp
inc
test
cmp
rcrb
incl
cltd
pusha
jmp
fstpt
sub
in
std
pop
clc
jmp
jb
mov
mov
icebp
sbb
inc
loopne
jmp
icebp
xor
es
dec
or
outsl
xchg
cs
je
jmp
sti
loopne
mov
lcall
cli
out
jle
test
das
sarl
aam
cs
dec
aad
shl
decl
inc
or
mov
xchg
mov
outsb
mov
incl
subl
push
jecxz
mov
fcos
push
incl
imulb
and
cld
scas
mov
lahf
in
idiv
popf
aaa
cltd
sbb
in
mov
pop
and
pop
sti
jg
jbe
xor
pop
addr16
sbb
test
int
mov
js
test
fmull
pop
fstpt
imul
jmp
or
pop
xchg
push
cld
mov
aas
and
data16
mov
pop
std
popa
out
test
add
sub
nop
pop
adc
inc
xchg
outsb
add
aad
jl
lods
rcrl
outsl
icebp
adc
gs
sbb
pop
test
cmpsl
mov
mov
cld
sub
cmpl
clc
jne
push
inc
dec
repnz
jb
aaa
xor
pop
clc
call
in
iret
int3
loope
in
adc
mov
or
inc
adc
mov
lret
movsl
cli
ret
dec
stos
pop
inc
ret
lret
push
incl
jae
movl
cmpsb
sub
bound
pop
sarb
decl
sar
sbb
mul
jmp
fldcw
lods
mov
loope
mov
mov
inc
mov
mov
adc
lcall
loope
mov
adc
adc
xlat
jmp
mov
decl
push
xchg
sub
sub
inc
lock
add
xor
cmp
icebp
outsb
enter
shl
mov
dec
test
cmp
clc
mull
cmp
cmc
xor
sbb
xor
xchg
test
loopne
fwait
das
ret
push
jg
ds
push
je
inc
cmp
adc
cmp
rcrl
push
jmp
cli
mov
repz
push
fs
cmp
outsb
imul
and
dec
in
insl
das
pop
jmp
call
jmp
ljmp
jb
mov
pop
or
clc
xchg
call
loop
insb
negl
scas
loop
fsubrl
sbb
incl
lods
pop
int
je
push
frstor
popf
push
mov
mov
mov
or
adc
xlat
xor
dec
adc
call
add
orl
pop
jno
stos
jns
mov
aad
jg
and
mov
cmpsl
jae
jnp
ret
addl
or
test
jae
adcl
jg
xchg
sahf
addr16
enter
mov
pop
xchg
sub
pop
filds
mov
jo
lret
daa
into
mov
dec
add
xchg
aaa
cmpl
sub
push
pop
mov
mov
push
and
repnz
mov
add
sarb
inc
iret
or
xor
stos
or
cld
decl
push
push
adc
je
daa
stos
decl
std
das
dec
mov
or
and
adc
mov
pushl
jg
aas
inc
int3
dec
ret
add
sbb
or
dec
imul
jmp
push
dec
fistpl
jns
lret
shlb
std
das
xlat
mov
cwtl
aad
in
fistpll
pushf
cmp
mov
mov
lea
mov
jmp
xchg
movsl
rolb
stos
clc
xchg
cmp
push
cmc
fidivs
in
push
std
jb
jns
pop
push
jle
jge
sahf
pushl
inc
mov
jb
cld
xlat
xor
mov
mov
stc
in
jae
movsl
sbb
sub
icebp
dec
mov
mov
test
mov
lahf
push
scas
xor
add
call
clc
mov
pushf
cld
cmp
inc
lcall
pop
and
ljmp
daa
fadds
testl
pop
or
dec
imul
ja,pt
idiv
call
inc
sarb
bound
out
jo
das
mov
clc
sbb
inc
jg
fdivr
call
scas
add
ret
xchg
aas
jns
fidivs
js
stc
mov
lcall
inc
loope
push
and
mov
xor
xorl
push
cwtl
ret
lods
lcall
cli
add
lods
sbb
cltd
scas
push
dec
orb
das
cmc
sbb
mov
lds
fidivs
jnp
nop
pop
neg
push
push
loop
call
daa
mov
lret
cmp
js
or
dec
jg
xor
ficoms
loopne
fidivrl
ja
es
ret
arpl
out
jmp
dec
or
inc
pop
sub
xchg
mov
leave
push
add
or
adc
cli
clc
in
pop
cli
decl
sti
jne
xchg
ljmp
repnz
push
xchg
mov
daa
dec
cld
jmp
frstor
cmpsl
cmpsl
push
push
jmp
pop
clc
jae
iret
cwtl
out
lock
imul
andb
lcall
sbb
sub
dec
dec
xchg
lds
mov
pop
xor
decl
test
push
out
fistl
xchg
push
imul
push
mov
xchg
xchg
fnstcw
xchg
jb
mov
mov
sbb
fwait
and
push
sub
mov
mov
loopne
std
sbb
cmp
ret
ror
loop
adc
ljmp
icebp
enter
aam
xchg
lds
jne
movsb
or
pushl
insb
pop
mov
imul
dec
adc
jae
cltd
outsl
mov
and
decl
and
es
jns
cmc
adc
jle
mov
mov
shl
jp
mov
in
mov
decl
std
jp
cmp
push
mov
cmp
adc
and
sbb
cmpb
sti
mov
jae
sbb
jnp
mov
mov
decl
xchg
rcl
mov
imul
mov
fstpt
ljmp
repz
mov
enter
dec
dec
test
push
mov
mov
sbb
icebp
leave
mov
in
mov
ja
mov
dec
call
mov
jg
or
fisttpl
sbb
cmp
lods
mov
leave
das
xchg
jecxz
sub
out
add
pop
jmp
inc
xchg
add
int
cltd
mov
ret
cmp
and
push
test
mov
mov
out
push
jbe
nop
cmp
mov
out
shrl
fmul
daa
ret
pop
xchg
sbb
scas
jmp
xor
cmp
xor
push
mov
pop
jnp
in
jno
sbb
jmp
incl
rcrl
ret
into
lret
int
lods
lret
jecxz
pushf
int
mov
clc
enter
ljmp
dec
sti
test
sbb
jg
push
pushf
mov
sbb
decl
push
sti
pop
test
push
cmc
jle
push
lret
xor
lds
test
mov
mov
icebp
mov
mov
xor
xchg
in
xchg
fisttpl
lock
out
scas
inc
addr16
stos
ljmp
and
push
dec
nop
mov
mov
pushl
lods
jns,pt
test
pop
push
ret
xor
jb
xor
mov
mov
aaa
into
adc
cmpsb
repnz
jecxz
movsl
fdivrp
decl
pop
mov
fwait
dec
repz
mov
inc
mov
loope
lcall
mov
testl
aaa
and
dec
ret
subl
mov
mov
aam
jb
jl
imul
stos
dec
mov
popa
emms
push
fiaddl
mov
fidivs
mov
dec
scas
mov
mov
xchg
popf
dec
ja
add
sub
call
cwtl
lock
xchg
sti
fnstenv
inc
pop
jge
cld
push
sub
dec
lcall
mov
inc
lcall
dec
mov
pop
push
pop
aam
sbb
dec
mov
data16
aaa
pushl
add
pop
cs
pop
mov
pushf
add
jbe
cmc
out
or
push
push
lcall
std
fadds
gs
fsubl
je
push
out
fst
stos
ss
pop
pop
cld
outsl
add
push
mov
cmp
ret
push
into
push
filds
cmp
xor
mov
int3
sub
in
cmp
or
data16
jl
ret
and
stc
imul
pushl
cli
pcmpeqd
stc
adc
adc
xchg
cmpl
adc
jmp
cltd
cmp
jle
adc
stc
push
mov
fucomip
outsl
push
inc
mov
shlb
jnp
cwtl
jmp
iret
sbb
call
mov
movsb
mov
aad
push
das
das
mov
pop
loop
or
filds
or
fdivl
push
mov
test
gs
adc
orl
lcall
stos
or
adc
ret
dec
aam
out
jb
fs
push
ja
mov
and
cltd
es
jg
pushl
adc
cmp
sbb
icebp
push
pop
jge
nop
jge
loope
ljmp
enter
mov
adc
jmp
pop
or
mov
and
push
mov
or
or
mov
adc
mov
push
shll
ja
cmc
jp
in
sub
and
loop
iret
sarb
dec
inc
xchg
adc
mov
ljmp
jmp
push
iret
dec
add
sbb
pop
ss
push
xor
lods
call
cmp
inc
je
dec
jae
mov
push
push
sub
sub
rcll
outsl
cmp
std
dec
inc
xor
add
loopne
mov
ds
cmp
jp
test
lcall
test
sub
stc
aaa
lcall
fcoms
add
insl
outsl
cmc
inc
int
mov
fdivr
inc
lcall
sbb
roll
cmc
and
jg
rep
jge
in
out
jb
jno
decl
xor
pop
or
loop
adc
mov
mov
xorl
ljmp
icebp
cltd
bound
pop
jg
inc
push
cltd
lahf
popa
insb
popf
popa
incl
inc
or
mov
jmp
in
decl
mov
dec
cmp
pop
out
xchg
push
and
dec
pop
sahf
jns
filds
sub
push
mov
bound
adc
pushl
int
cmp
add
sahf
cmp
mov
xchg
inc
mov
incl
cwtl
pop
cmp
inc
call
mov
xorl
fs
repz
cld
fildll
cmpsb
pop
and
cltd
sbb
test
insb
lret
dec
sub
aas
loope
sub
and
add
inc
lds
jne
dec
jmp
sub
and
ffree
shlb
sbb
rcl
neg
fbstp
xorb
mov
stos
mov
repnz
in
dec
pop
xchg
mov
jae
fldl
in
mov
data16
dec
lahf
adc
incl
xchg
cltd
cltd
test
roll
jb
sub
mov
fisttpll
decl
cld
int
imul
in
or
lret
ja
xchg
mov
dec
xchg
aaa
gs
hlt
inc
nop
dec
ljmp
xor
pop
les
into
sahf
sahf
inc
mov
rcl
cmp
sbbl
mov
pop
subb
lcall
call
push
aas
mov
cmp
or
xchg
pop
sar
push
jnp
adcb
add
xchg
scas
outsb
add
shlb
cli
fsubl
mov
push
enter
lcall
mov
test
cld
inc
mov
fbstp
mov
push
fld
xchg
jmp
ljmp
jmp
cmpsb
xchg
push
push
jns
adc
sbb
cltd
adc
xchg
inc
aaa
lds
mov
sbb
ret
aaa
out
adc
popf
mov
add
lahf
inc
fsubs
sbb
push
pushf
xor
outsl
outsb
mov
notl
and
js
sar
pop
cld
es
jecxz
mov
rorb
std
and
inc
movb
inc
sti
ret
push
sti
mov
lcall
call
mov
std
add
shlb
jne
sbb
divb
je
cltd
sub
lcall
inc
push
iret
adc
xchg
push
icebp
sbb
ds
dec
xchg
pop
push
sub
jo
cli
call
shlb
xlat
and
inc
out
js
xchg
mov
repnz
addr16
dec
negl
add
add
adc
adc
out
insl
cmc
xor
call
shll
or
fstps
push
out
addl
outsl
lret
outsb
sar
ss
idivb
pop
mov
int
ss
mov
cmp
pop
mov
popf
xchg
mov
xchg
mov
repnz
inc
and
cli
cmp
sub
mov
mov
pop
dec
xchg
out
mov
js
mov
shrb
and
loop
push
lret
pop
aaa
aad
pop
cmp
cmp
mov
fstpt
call
icebp
dec
mov
jbe
pushf
and
xor
int3
leave
lahf
rcrb
push
incb
ljmp
jecxz
pop
sub
das
insl
mov
loopne
or
decl
ljmp
xchg
and
xchg
cli
adc
pop
mov
jmp
bound
sbb
dec
push
popa
ss
pop
pop
add
pop
push
cli
fdivrl
sbb
or
mov
pop
clc
in
sbb
pop
xchg
insb
xlat
out
pop
push
inc
cmp
ss
sar
insb
mov
je
sub
fs
fs
pushf
pop
inc
dec
pushl
and
fisubrs
out
adc
mov
call
lret
push
aas
rorb
adc
or
test
js
sbb
add
or
inc
test
popa
lcall
and
lods
scas
add
cmpsl
iret
fiaddl
jmp
cmp
sub
ljmp
hlt
test
arpl
and
das
lods
push
push
mov
mov
rcrb
dec
jne
jg
call
popa
cmp
movsb
std
movsb
test
xor
stc
test
mov
lcall
ljmp
outsl
mov
mov
cmp
xor
rcrl
out
and
sar
lcall
cld
mov
dec
inc
push
pusha
jne
test
inc
daa
insb
push
fs
test
push
bound
fidivrl
push
or
push
cmp
popf
loop
int
call
js
sbb
sahf
add
inc
and
jns
into
pushl
add
cld
test
movsl
sub
je
jnp
aas
nop
mov
add
mov
mov
lret
and
ficoms
dec
outsb
lcall
mov
notb
aam
orl
sti
pop
ret
lcall
mov
mov
scas
ss
pop
scas
cmp
js
inc
icebp
or
xchg
push
lea
call
xor
add
cmpsl
in
jmp
lahf
test
xchg
sub
es
push
cmp
and
sbb
pop
mov
test
pop
repnz
loope
loope
loopne
jg
imul
lret
jge
mulb
and
incl
lret
mov
gs
punpckhwd
push
mov
call
push
push
sub
lea
mov
cmp
cli
xchg
pop
scas
ret
je
lods
mov
mov
cmc
jg
ljmp
pop
mov
adc
cmpsb
rcl
sti
fucomp
outsl
ret
jo
jmp
call
push
sti
sti
orl
xor
xor
lret
or
lcall
sbb
pop
jmp
mov
mov
dec
sub
sub
mov
pop
popa
add
dec
xlat
push
pop
add
fcmovnu
loop
scas
outsl
jp
xchg
or
or
fucomip
in
mov
inc
lahf
jecxz
or
int
test
jae
mov
pushl
add
inc
xor
push
add
dec
pop
jge
testl
fcmovnbe
rol
aam
adc
scas
cli
popf
ficoml
xchg
ret
pop
jle
lcall
xor
inc
xchg
ficomps
cmp
inc
and
fwait
xchg
mov
push
cmp
ret
mov
sub
xchg
mov
pop
ja
pop
cmp
adc
decl
ret
xchg
leave
xor
push
mov
in
call
pop
or
sti
push
dec
mov
xchg
adc
fdiv
lahf
mov
sar
cmp
sub
dec
dec
jp
repnz
and
pop
jge
xchg
sub
jg
call
test
jmp
push
fcompl
cmp
pop
das
jmp
fs
sub
dec
in
ljmp
push
mov
aam
subb
jl
lds
jg
faddl
pop
jecxz
pop
push
loopne
movl
scas
rdtsc
jns
mov
shr
dec
mov
sub
out
movsb
ds
jmp
mov
movsb
cmp
inc
addl
es
mov
and
xchg
add
dec
shlb
cmc
shll
mov
in
shl
and
xchg
jg
aas
jge
leave
mov
fldt
outsb
dec
shr
fisttps
mov
cld
decl
lahf
cltd
push
shr
fistpll
sub
repnz
repnz
clc
push
ljmp
stos
mov
adc
adc
add
mov
push
push
cs
stos
cltd
aas
mov
repz
sub
pushl
fdivrl
xor
push
lds
or
gs
pushl
push
orl
mov
aas
daa
cmp
mov
call
xchg
clc
into
stc
push
cmpsl
pop
test
fstp
int3
inc
xor
fisttpll
mov
inc
inc
out
data16
or
test
sub
leave
sub
test
ret
leave
xchg
mov
daa
loopne
hlt
fldl
insl
inc
sub
das
lock
mov
jmp
lahf
mov
dec
fstpt
arpl
ljmp
pop
or
fisttpll
outsl
or
in
test
ret
add
dec
ret
cmc
sub
call
lcall
xor
and
mov
mov
inc
test
enter
fs
pop
push
add
pop
cli
jle
cmp
adc
dec
ljmp
jp
jp
in
nop
int
lcall
jmp
pop
stos
sub
xchg
cltd
jb
jl
inc
cmpb
js
mov
popa
push
into
not
decl
ljmp
and
mov
xchg
in
push
and
sub
bound
scas
test
aad
push
stc
decb
cld
lea
iret
fisubl
xor
dec
rcll
ljmp
adcl
movsl
jg
cwtl
adc
sti
xchg
rcrb
or
mov
dec
cld
pushl
mov
stos
mov
cwtl
push
sub
xlat
dec
fwait
mov
sub
dec
cld
fnstsw
movsb
arpl
xchg
or
pop
addb
fs
pushl
sbb
push
mov
xor
mov
mov
add
insl
cmp
push
inc
inc
call
sub
test
pop
push
mov
sbb
lcall
bound
dec
dec
in
in
pop
sbb
sti
lods
jp
pushw
jnp
pop
clc
xor
mov
aad
xchg
xor
rolb
xchg
sub
pop
lea
les
imul
andb
adc
xchg
or
mov
outsb
mov
inc
call
addr16
push
enter
decl
movsl
insl
or
loope
add
out
jb
jmp
and
push
dec
mov
inc
loope
push
fsubr
test
ja
decl
jl
lods
cmp
insl
aad
pop
xchg
cmp
loop
push
sub
jle
call
lds
movsl
jp
js
mov
ud0
fnstenv
sub
mov
ret
scas
test
movsl
cs
pop
cltd
mov
fwait
sbb
jno
ljmp
cld
lcall
push
ss
jg
dec
push
fnstcw
mov
mov
sub
outsl
dec
or
jmp
test
dec
and
or
jp
cld
xchg
inc
xchg
jb
in
xchg
fcmovne
and
mov
enter
pop
add
jnp
adc
imul
lods
push
enter
pop
pop
or
mov
clc
push
flds
fnstsw
insl
inc
cli
jmp
mov
call
cmpl
call
mov
out
push
rcl
enter
cmpsl
clc
ficompl
call
jb
cmc
cli
dec
mov
push
pop
push
adc
mov
xor
sub
xor
pop
pop
jg
xchg
xlat
mov
leave
iret
imul
clc
repz
movsl
push
sub
jg
call
jnp
stc
cmp
ret
repz
dec
movsl
cmpsl
dec
xor
push
ljmp
ljmp
cmp
jecxz
push
bound
ficoml
mov
ljmp
inc
leave
movsl
mov
call
adc
dec
adc
cmp
cmp
mov
sub
in
incl
cli
ret
push
xor
or
loop
fdivs
out
mov
ljmp
decl
out
mov
or
mov
stos
scas
push
inc
stos
jle
lea
adc
cli
das
icebp
or
stos
dec
lods
cwtd
push
je
inc
movsl
das
std
lcall
or
stos
ja
pop
fistl
insl
out
jbe
lahf
data16
jno
add
pushl
mov
repz
or
pop
in
mov
adc
pusha
ljmp
shl
in
call
mov
ret
push
cli
lods
inc
xchg
xchg
test
dec
jge
ljmp
jo
pop
mov
push
in
pop
xor
pop
sbb
sub
rcrl
mov
test
cmp
call
push
sub
sub
lahf
pop
dec
inc
sub
bound
mov
popf
rcrl
mov
lret
push
mov
jno
ja
mov
adc
pop
lcall
sbb
jns
mov
xchg
jnp
jp
mov
loopne
inc
xchg
jmp
insb
push
pop
icebp
out
mov
stc
and
xchg
or
stc
lcall
jne
sbb
pushf
cmp
rorb
insl
sub
and
pop
xchg
adc
jg
test
push
pop
mov
js
out
in
scas
leave
xchg
sbb
filds
jmp
pop
add
xor
and
or
call
sub
aam
incl
nop
loop
roll
arpl
xor
ljmp
outsw
inc
cmpsl
jns
jnp
fucomip
push
sub
mov
rcrb
adc
jb
dec
sbbl
and
out
imul
and
stc
xchg
or
mov
pop
cs
lods
pop
pop
pusha
jg
pop
stos
mov
andb
imul
and
ss
mov
ja
rcrl
jmp
test
ja
adc
leave
jnp
pop
inc
jns
rcrb
inc
out
inc
inc
and
popa
xchg
mov
lret
mov
add
rolb
and
cmc
jae
call
cld
aas
in
insl
cmpsl
add
xor
mov
dec
mov
mov
mov
loope
jg
xlat
aam
jmp
xchg
mov
test
lea
popa
test
icebp
jg
inc
cmp
dec
jns
pop
sub
and
imulb
sbb
mov
or
mov
mov
loopne
cmp
sar
hlt
push
test
add
jo
sbb
pop
in
dec
adc
mov
push
cltd
outsl
cmp
test
iret
add
adc
mov
pushl
addr16
jp
mov
jae
mov
test
movsl
mov
in
jne
sbb
inc
push
xchg
mov
sub
cmp
mov
int3
jle
fildll
adc
jmp
les
mov
mov
sub
push
or
mov
mov
fisubrl
call
hlt
imul
xchg
push
leave
inc
test
mov
cmpsl
outsl
sahf
mov
aad
xor
out
cmp
xchg
cmp
mov
lods
or
gs
addr16
sbb
test
fimull
pop
outsb
adc
mov
aas
or
xchg
ficompl
adcb
dec
int
aaa
xchg
pusha
test
xchg
inc
jg
mov
mov
popa
dec
xchg
aad
jno
add
ljmp
inc
mov
mov
cld
sbbl
inc
shrl
mov
popa
hlt
call
jne
add
in
in
fucomi
lret
aam
xchg
fdivrs
outsb
cmp
aad
inc
mov
jnp
pop
xor
stos
adc
push
stc
push
fs
stos
out
push
cld
mov
mov
rcrl
push
insl
sub
in
idivl
mov
dec
lods
fstps
lods
sbb
sahf
dec
fldenv
jl
test
clc
inc
pop
andb
popa
lock
sbb
sbb
ret
fucomip
lcall
xchg
add
mov
sub
dec
dec
mov
fcos
incl
lock
jle
mov
loopne
lret
into
dec
scas
dec
mov
fcoms
ljmp
lock
lahf
add
fmull
inc
cli
mov
xchg
mov
xchg
mov
push
add
mov
nop
sub
cmp
mov
divl
fucomi
loope
lods
jg
jg
jae
in
les
sti
lea
int3
adc
and
test
movsl
decb
inc
inc
lea
aad
xlat
mov
fsubrs
fstpl
cmpsb
sbb
pop
outsl
jl
addb
xchg
mov
mov
push
jecxz
test
xchg
add
jmp
imull
push
jl
icebp
or
inc
das
sub
test
sub
xchg
decl
fstl
loop
xchg
stos
cmc
test
sub
ja
or
bound
pop
adc
pop
mov
std
stc
jne
cmc
add
jg
decl
mov
inc
fistpl
pop
test
clc
add
rcrb
stos
xor
in
out
out
js
push
mov
jae
lods
or
dec
int
lret
jbe
xor
movsb
jae
fnstenv
dec
push
jbe
test
mov
and
test
push
sub
cmc
mov
mov
insl
push
cli
jg
mov
inc
pusha
mov
out
into
adc
sbb
es
hlt
jg
test
jg
in
aas
stos
stos
cmpl
pushl
xor
mov
scas
jg
dec
push
cmp
movsl
xchg
adc
incl
in
pop
xchg
mov
inc
push
hlt
and
frstor
xor
xchg
mov
call
mov
inc
clc
mov
out
add
push
and
dec
into
add
lcall
fmull
hlt
jae
xor
or
adc
movsb
xchg
dec
mov
xor
mov
push
xlat
subl
out
cmp
lcall
mov
cmpl
fistps
lods
out
pop
jae
lcall
pushl
xchg
mov
pop
pop
andl
sbb
xlat
lds
loopne
adc
ljmp
sbb
xchg
data16
pushl
xchg
cmp
fdivl
loop
addb
call
jnp
sub
add
or
push
repz
out
jmp
sarb
lahf
das
xchg
sub
or
mov
or
push
xor
call
mov
testl
mov
pop
cwtl
jmp
rcll
aad
lret
jg
dec
sbb
jecxz
pop
shrl
dec
loope
adc
inc
jp
in
test
incl
lcall
orb
jno
cmp
adc
shlb
xchg
popa
fwait
enter
icebp
pop
jp
xor
iret
pop
pop
xchg
movl
test
nop
jno
ret
imul
mov
js
pop
ljmp
pushf
lcall
in
test
push
jmp
xchg
insb
or
test
and
push
cmp
movsb
pop
mov
jne
pop
daa
mov
cmc
lods
mov
repnz
or
imul
das
lea
addb
ljmp
sub
je
dec
pop
xor
sahf
leave
add
pop
popf
or
pop
call
pop
pop
push
mov
aaa
mov
sbb
out
cmp
fnsave
mov
inc
adc
xchg
inc
adc
mov
icebp
xchg
ret
xchg
jecxz
call
dec
js
scas
and
or
inc
rcrb
std
mov
out
cmp
in
xor
ljmp
xor
pop
shrl
add
aam
mov
mov
iret
dec
std
pushl
dec
jl
xor
pop
push
out
push
aam
scas
out
fisubl
orl
sbb
push
ljmp
push
mov
andb
dec
cmp
mov
popf
xchg
and
ljmp
push
test
jge
xor
xchg
xchg
cmpsb
incl
jo
out
shr
cmp
xchg
addr16
in
je
mov
outsl
incl
fwait
test
and
mov
lock
mov
leave
std
fbld
adc
clc
sbb
ljmp
hlt
inc
dec
push
push
leave
sub
sbb
jl
fwait
or
orb
mull
incl
stos
stc
pop
mov
push
pushf
mov
daa
cmpsb
in
adc
loop
seto
mov
mov
into
gs
xchg
fdiv
and
rorb
jmp
dec
xchg
aad
clc
pop
hlt
inc
ljmp
adc
daa
daa
scas
mov
push
mov
cmp
stos
mov
je
neg
sbb
mov
inc
mov
addr16
sbb
decl
mov
das
adc
dec
cmp
cwtl
add
or
incl
imul
xchg
ret
js
pop
fsubrl
or
fmull
xchg
push
xor
popf
adc
jno
shlb
or
and
js
out
fnstenv
std
jne
stc
clc
dec
cmp
lcall
xchg
cmp
scas
movsl
jns
jne
cmp
dec
testb
arpl
pop
sbb
loopne
lock
adc
mov
movsl
cmp
imul
xchg
hlt
outsl
mov
sub
sub
push
dec
inc
dec
cmp
mov
and
jl
jp
mov
mov
clc
mov
mov
add
push
jae
cmpsl
xchg
mov
cli
mov
or
sub
pushl
add
and
int3
pop
clc
pop
inc
mov
daa
pop
movsb
mov
sub
cmp
in
push
mov
pop
mov
cmp
outsb
lods
cmp
lock
notb
out
repz
mov
mov
adc
lods
incl
pop
pop
xchg
pop
ljmp
dec
mov
adc
dec
insl
bound
add
cmp
push
pop
into
incl
mov
imul
jnp
cmp
mov
jo
call
test
aaa
xor
xchg
lods
in
mov
test
outsb
fisubl
addb
clc
jg
cmp
push
in
int
call
jno
mov
aam
sbb
lea
or
jle
dec
dec
pop
sub
lret
pop
fdivl
mov
pop
or
mov
es
xchg
adc
dec
xor
or
pushl
xor
cmp
icebp
sbb
mov
hlt
pop
mov
mov
test
decb
std
lcall
nop
lea
cmp
into
or
sub
out
jmp
jns
negb
cs
rorl
lods
push
mov
int
jmp
iret
push
cmp
shll
cld
jle
test
mov
and
int
insb
ror
add
and
pushl
into
jo
in
cmpsl
cltd
xchg
flds
push
push
mov
out
dec
fadd
lahf
cmp
dec
rol
stos
int
fildl
and
mov
pop
loop
ljmp
jg
xchg
mov
xor
or
push
lcall
jg
loope
fdivrs
mov
push
int
stos
lds
xor
pop
call
jae
adc
rcrb
and
jmp
std
das
mov
and
mov
inc
xchg
mov
fsubrl
or
jg
pushl
adc
mov
sbb
and
xorl
decl
inc
jnp
push
inc
lods
sub
jmp
xchg
addl
sub
mov
cli
aas
ret
adc
sbb
pushl
lcall
insb
cmp
js
mov
scas
jb
cs
dec
sbb
outsl
cld
or
stos
sub
xchg
inc
in
add
jmp
fs
xor
int
mov
mov
arpl
jg
push
mov
cmpsl
shrl
js
sbb
lcall
std
insb
addr16
xchg
mov
cmp
sarb
xor
call
sbb
cmp
shll
adc
jecxz
sbb
pop
jne
pop
sbb
call
in
ret
mov
xchg
enter
jbe
jle
cld
xchg
lret
sbbl
stos
call
jbe
das
push
mov
addr16
jno
adc
sti
and
mov
mov
stos
shlb
pop
std
test
or
dec
sbbl
in
decl
pop
in
jp
cltd
cmp
jbe
lahf
add
leave
xchg
outsl
cld
fstl
mov
test
xchg
int
inc
outsl
mov
jo
push
movsl
jae
or
dec
sbb
cmp
loopew
xchg
test
push
xorl
test
call
cld
pushf
pop
cmc
subb
cmpsb
mov
sbb
and
daa
dec
push
clc
or
inc
sbb
iret
mov
cld
movsl
jmp
popa
lds
lret
mov
jge
je
andb
cmc
mov
mov
mov
xchg
lea
outsl
hlt
outsl
or
cmpsl
adc
bound
mov
mov
mov
stos
rorl
mov
rcr
sub
jg
mov
jle
test
add
lods
cmpsl
sbb
mov
mov
mov
jg
icebp
int
jb
fdivrl
rcrl
ja
pop
insl
aad
and
loop
decl
pop
mov
das
mov
les
repnz
test
xchg
stc
cmpsl
jecxz
ljmp
not
gs
test
out
or
stos
mov
push
test
popf
mov
jg
loope
fstps
xchg
or
add
mov
or
sti
jg
pop
fcoms
sahf
insl
inc
or
push
lcall
jecxz
push
insb
shrl
decl
dec
bound
sbb
pop
insl
sarl
int3
sahf
mov
jns
fcmovnu
scas
adc
inc
pop
aam
mov
mov
jmp
jp
outsl
stos
cmp
cs
lods
mov
mov
out
ds
xchg
sub
orl
sub
pop
mov
es
push
iret
in
bound
dec
cwtl
mov
lcall
incl
pop
xchg
sub
and
repz
shl
mov
popa
ss
ljmp
hlt
insb
lea
mov
xor
rcl
sub
adc
dec
mov
sbb
adc
mov
xchg
fisttpl
std
xor
adc
xchg
push
adc
and
ljmp
mov
fwait
pop
aam
shll
test
pop
and
mov
fimuls
lods
sbb
popf
and
cld
incl
out
cmpsb
es
mov
push
xlat
fwait
rolb
mov
mov
xchg
pop
and
inc
add
add
arpl
mov
xor
adc
dec
inc
decl
pop
xchg
push
xor
icebp
mov
std
dec
loopne
pushf
dec
out
jae
sbb
mov
cld
fbld
sub
cwtl
xor
lcall
xor
inc
pop
test
xchg
addr16
std
inc
fwait
lds
ljmp
cld
stos
inc
insl
scas
mov
and
dec
and
ficomps
sub
shll
aam
or
lods
mov
cmc
fidivrl
mov
pmullw
sub
mov
pop
clc
fidivs
into
or
add
std
jp
jnp
jmp
sahf
dec
aas
das
ficompl
cmp
dec
jnp
roll
push
lcall
mov
push
jle
or
xchg
lret
mov
shl
imul
rol
pushf
mov
pop
lods
and
hlt
ja
inc
ss
ret
push
pushl
mov
idiv
xor
mov
dec
jo
popf
pop
clc
ljmp
mov
mov
scas
aam
ud1
mov
das
hlt
fimull
xchg
adc
call
push
mov
or
call
dec
pop
test
arpl
lcall
outsl
rcll
mov
sbb
lods
mov
loopne
mov
mov
je
mov
and
mov
out
imul
xchg
sarl
lock
pusha
lcall
call
movsb
imul
push
add
sahf
xchg
aam
mov
lods
add
sar
call
les
sub
mov
mov
xor
mov
test
std
and
out
data16
mov
movsb
adc
inc
testl
or
add
loopne
mov
mov
cmp
lods
outsb
sbb
add
test
pop
cli
push
sar
cmpsb
fucom
mov
fidivrl
inc
call
lods
insb
dec
decl
push
out
xchg
or
sub
into
inc
pop
outsl
push
pop
jae
orb
filds
push
out
jns
call
out
xor
in
aaa
pop
xchg
ror
jp
push
jbe
jle
xchg
call
cmp
outsl
decl
push
add
sub
loopne
stos
jmp
ss
mov
pop
fwait
pop
out
sub
push
push
xor
sub
jg
loopne
dec
notb
dec
outsl
mov
scas
sub
shlb
adc
xlat
shrb
add
jmp
stos
loope
test
ret
mov
mov
mov
dec
cld
outsl
jae
insb
jbe
test
call
mov
or
cmp
pushf
inc
cmp
mov
and
xchg
bound
add
aas
add
mov
cmp
call
cli
xchg
pushf
stc
lods
lds
mov
jecxz
jmp
mov
adc
mov
dec
call
aas
jl
fnsave
sbb
sub
jmp
xchg
je
std
xchg
dec
add
mov
push
adc
cmp
mov
sbb
fistpll
jmp
push
stos
mov
push
mov
rep
or
fstpt
mov
pop
js
das
and
out
fs
jge
inc
jecxz
roll
pushl
in
cmp
negl
fdivr
inc
imul
pop
xchg
lock
dec
sti
mov
mov
push
nop
insl
mov
sub
or
push
cs
orl
mov
sub
pop
pop
loopne
inc
jne
mov
add
iret
dec
jns
or
daa
inc
mov
push
jmp
call
sti
mov
pop
adc
jne
or
mov
inc
pop
jmp
sahf
call
mov
and
jns
fisttpll
push
pushl
shrb
iret
cmp
mov
insb
ficomps
xor
xor
xorb
jmp
dec
fwait
jns
inc
cltd
arpl
push
mov
cmc
sub
ss
mov
scas
cwtl
repnz
rcrl
dec
push
incl
mov
faddl
das
xchg
int
mov
or
aas
adc
xchg
shrl
decl
xchg
fdivs
jns
mov
push
and
jnp
gs
incl
push
ret
dec
mov
and
jnp
xor
call
incl
call
push
mov
out
push
icebp
or
loopne
sub
cld
and
mov
jg
mov
iret
arpl
stos
inc
ror
xchg
push
loopne
into
push
jmp
push
and
jb
lret
fdivr
ror
xor
icebp
and
and
test
sbb
jns
mov
push
pop
ret
movsb
out
mov
push
dec
aas
sub
inc
mov
adc
sub
xchg
test
ljmp
pushl
inc
push
fistps
out
mov
shrb
rclb
pop
test
pushl
lret
loope
sub
jae
aaa
sbb
lcall
inc
sub
push
pop
cwtl
dec
dec
aad
les
daa
push
aaa
cli
das
std
add
jecxz
cmp
insl
and
fcomps
cli
dec
mov
mov
andl
inc
jnp
cld
test
pop
vmwrite
fs
jg
je
mov
cli
mov
in
imul
mov
jns
mov
fbstp
dec
cmp
lcall
loope
lcall
cld
lds
cmp
cmpsl
xlat
arpl
int
pop
inc
cmpl
js
fnstsw
test
enter
and
sarb
call
cld
fistl
lods
mov
inc
fadds
fisttpl
ljmp
btr
adcl
inc
popf
inc
mov
ljmp
icebp
clc
mov
sub
xor
gs
mov
cmp
mov
pop
loopne
pop
testb
sbbl
xchg
xchg
loope
leave
sub
scas
cli
sar
call
add
pusha
test
lods
xlat
into
mov
fnstcw
sbb
xchg
fcomip
sar
lcall
mov
lock
sub
rorl
mov
movsb
imul
lret
push
sub
incl
cmp
xchg
out
dec
cmp
inc
arpl
frstor
lock
lret
repnz
in
mov
adc
lcall
jb
mov
push
ds
add
daa
pusha
loop
iret
ret
sahf
lcall
cmc
inc
insb
in
cwtl
fdivrl
in
mov
cltd
ret
xlat
repnz
adc
rclb
cld
incl
pushl
bound
aam
daa
mov
es
sbb
ja
ljmp
inc
insl
add
inc
test
dec
xlat
and
pop
test
or
pushl
addr16
cmp
mov
jmp
aam
mov
je
imulb
adc
lcall
jmp
lds
in
ret
loopne
cmp
push
arpl
dec
lds
and
and
insb
cltd
fstpt
iret
xorb
mov
push
sbb
js
add
jmp
incl
mov
pop
mov
stos
lods
add
adc
arpl
adcb
lret
push
mov
xor
lods
test
and
mov
loop
orl
sbb
cltd
pusha
inc
sub
decl
aad
fsts
push
cmp
mov
pushl
outsb
push
mov
xor
loope
mov
int3
adc
dec
out
nop
ret
je
cmpsb
data16
cmp
decl
out
pop
imul
popa
in
or
out
xlat
les
dec
ret
pop
scas
cmpsb
ficomps
jp
mov
jb
dec
sbb
fbstp
bound
mov
xor
stos
xor
xchg
loopne
mov
mov
lret
shrl
sbb
cmp
fisttps
in
mov
pop
decb
sub
sub
jmp
rorb
xchg
cmp
das
lock
decb
ljmp
push
sbb
mov
stc
inc
hlt
push
cmp
inc
pop
cmpsl
cmc
mov
add
sub
sbb
jg
outsl
inc
scas
xchg
xchg
inc
cmp
jmp
lret
pusha
mov
jmp
in
sub
jg
and
enter
jns
xchg
scas
sub
aad
popa
xchg
xchg
sub
call
mov
arpl
scas
or
push
adc
decl
or
cmp
cmpsb
cmp
mov
or
sar
fisttpl
or
and
add
and
or
cmp
mov
call
xchg
movsb
lods
push
insb
lret
xchg
or
mov
inc
mov
dec
decl
shrb
jbe
and
int3
mov
or
xchg
call
incl
mov
cltd
cmp
psubb
inc
cs
and
cwtl
js
pushl
mov
add
mov
cmc
dec
pop
add
mov
xchg
cli
stos
ja
imul
cli
mov
scas
daa
xchg
xor
addr16
ljmp
insl
fcomps
call
movsb
cmp
icebp
into
stos
dec
dec
fcmovb
xor
pop
mov
js
out
ret
xor
xchg
inc
test
outsl
cmc
jmp
cs
cs
data16
lcall
xchg
xor
decl
mov
aad
mov
mov
jmp
mov
push
int
sub
movsl
ljmp
mov
data16
pop
cwtl
or
dec
adc
pop
mov
pop
std
incl
dec
rclb
xchg
sqrtps
mov
std
das
lock
add
shr
xchg
ret
ret
mov
or
sub
ss
cmpsb
sbb
arpl
and
push
jg
sbb
testb
sbb
jl
pop
or
fwait
add
mov
lea
das
mov
add
lret
adc
mov
in
loope
dec
int3
pop
inc
adc
sbb
mov
inc
in
icebp
fsts
add
push
xchg
mov
jbe
pop
vmread
pop
es
in
mov
ljmp
lock
loop
js
in
cmpsl
adc
popf
sub
lea
push
lcall
std
mov
pop
xor
insb
imull
mov
mov
cmp
mov
push
subl
cmp
stos
roll
fwait
out
mov
cld
call
inc
pop
cmc
xchg
sbb
fbstp
dec
inc
out
cmc
jmp
dec
xor
fnstsw
ljmp
pop
scas
sub
and
cmp
dec
imul
jmp
cmpsb
cmp
enter
dec
mov
mov
loope
mov
mov
imul
ljmp
enter
inc
mov
inc
incb
icebp
and
mov
pushl
mov
and
test
add
ljmp
mov
aas
dec
movsb
lret
pop
sub
cmp
lcall
fldt
push
push
int
dec
mov
mov
lods
dec
sbb
popa
and
push
rolb
mov
jl
ret
es
push
inc
sbb
js
xor
dec
and
xor
je
ljmp
jnp
xchg
pop
loop
call
xor
lods
lret
pop
clc
mov
and
cs
mov
xor
mov
sub
scas
mov
jl
cmp
orl
push
add
aaa
pop
addr16
cmp
adc
mov
mov
xchg
dec
mov
imul
inc
push
decl
sbb
das
arpl
or
int
sub
and
arpl
dec
pop
mov
and
and
sbb
test
mov
lods
inc
adc
sar
aam
xchg
adc
add
ret
lock
push
inc
roll
imul
sbb
xchg
add
outsl
int3
dec
push
lret
pop
jmp
into
cmc
arpl
mov
call
adc
xor
ret
cmpsb
cmpsl
jl
or
jae
fcmovnb
outsb
pop
mov
xor
ret
push
pop
call
int
std
fstl
mov
cmp
jmp
rcrb
jmp
pop
adc
pop
mov
int
lods
fimuls
fdivs
loopne
std
in
test
ret
push
mov
popa
test
mov
inc
es
nop
scas
incb
imul
jle
or
lock
incl
mov
add
push
jae
push
pop
adc
jl
pushf
imul
call
fwait
addl
popa
xlat
cmpsb
and
jo
lods
arpl
int3
fisubs
mov
rcll
ljmp
subb
imul
pushl
fsubrl
xchg
es
xlat
movsl
and
fstp
or
push
adc
push
test
jg
rcrb
pop
xchg
xchg
in
lea
addr16
incl
fdivs
xor
mov
mov
add
mov
xor
repnz
lods
sbb
ss
inc
loopne
inc
cmp
push
mov
and
adc
int
add
outsl
test
inc
cmpsb
push
fisttps
cld
jne
mov
sub
jl
lea
mov
idiv
outsl
addb
cs
and
pop
jecxz
jb
add
ds
stc
push
out
jg
jmp
shll
xor
in
ds
push
out
cmp
sti
cli
pop
call
rclb
int3
jns
arpl
test
inc
add
hlt
dec
jbe
lods
decl
fildll
jns
loopne
lods
jns
xor
adc
pushl
pop
lahf
cmp
cmp
jle
pop
adc
outsb
or
inc
repnz
call
inc
leave
imul
inc
aad
movsl
sub
inc
pop
jo
out
call
and
jns
cmp
add
mov
dec
lds
cld
dec
pushl
cli
mov
push
mov
jbe
out
in
sub
int
mov
cld
add
jp
fcmovu
int3
in
lret
stos
inc
fwait
nop
xlat
xchg
xor
mov
repz
xchg
xchg
or
or
aaa
dec
mov
pop
cmpsb
add
cmp
xor
and
in
fidivl
sti
pushl
pop
push
cmp
cld
inc
enter
cmp
int3
jg
pushl
sub
push
mov
push
insl
sub
jae
test
jmp
xchg
ljmp
adc
push
or
ja
scas
pop
bound
stos
aad
cwtl
cmc
push
cmp
lea
xchg
push
mov
xchg
mov
imul
jg
dec
mov
mov
sbb
sbb
mov
or
mov
and
mov
pop
lcall
dec
cmp
adc
mov
mov
addl
rorb
lds
int
aas
in
and
adc
inc
jle
sar
jmp
sub
mov
in
popf
jnp
aas
iret
and
aaa
jbe
lcall
inc
dec
adc
es
fdivrl
call
sbb
dec
repnz
lcall
aas
mov
pop
ss
imul
shlb
pop
sbb
jne
shrl
lods
push
test
call
add
mov
mov
cwtl
xor
push
sub
push
mov
or
lods
cmp
addr16
xchg
pop
cwtl
aam
and
push
mov
cld
inc
pop
adc
insb
adc
outsl
cmc
jg
add
inc
daa
nop
mov
push
mov
hlt
cmpsl
push
lret
jg
decl
add
stos
in
sti
and
or
xchg
mov
sbb
sbb
enter
mov
icebp
enter
popa
in
jmp
imul
mov
xchg
mov
fists
cli
mov
dec
icebp
mov
or
cli
or
test
cld
mov
pusha
aam
mov
sbb
inc
mov
inc
lea
push
or
dec
pop
jle
pop
xchg
shl
mov
mov
int3
add
sbb
test
ljmp
movsb
xorb
test
add
pushl
sub
fsubs
jl
ret
xchg
xchg
test
or
cmp
imulb
xbegin
push
push
call
in
xlat
lock
jle
mov
push
fbstp
scas
and
std
pushl
les
outsl
out
xchg
jmp
pop
ss
popa
jae
jbe
mov
sbb
icebp
and
push
test
jae
jns
jns
inc
aad
add
scas
hlt
dec
inc
out
test
out
out
inc
mov
fsub
push
mov
stos
adc
or
in
je
arpl
ljmp
call
push
jae
ljmp
xor
cmp
mov
inc
jge
int
out
mov
pushl
in
stos
fisubl
mov
add
mov
das
icebp
aaa
mov
jne
or
sbb
test
sahf
movsb
in
mov
add
decl
les
cmc
sbb
rcll
shlb
dec
push
add
dec
xchg
in
push
cmpsl
inc
pop
xchg
enter
bound
leave
or
push
jge
inc
sarb
xor
mov
add
sub
stos
imul
adc
nop
shll
int3
std
mov
lock
or
jg
repnz
in
add
int3
jae
in
push
testb
mov
in
pop
xor
or
push
into
leave
arpl
fcmovu
stc
cmpsb
test
fists
das
push
jne
and
call
insl
mov
push
cmpsl
addr16
scas
imul
add
in
mov
add
mov
sti
push
mov
add
pop
cltd
cld
cmpsb
mov
and
or
mov
adc
aaa
pop
stos
adc
push
mov
jmp
jecxz
add
lock
push
das
out
xor
push
mov
lds
cld
pushl
bts
pop
sbb
sub
aaa
test
jmp
pushl
mov
xchg
out
sub
xchg
aaa
mov
jmp
cmpsl
ret
sbb
idiv
pop
arpl
inc
pop
fs
mov
xchg
mov
outsb
outsl
lock
icebp
mov
mov
mov
jmp
mov
aad
orb
xor
mov
stc
inc
cmp
scas
dec
pop
xchg
xchg
push
cli
adc
fsts
xchg
push
incl
ljmp
xor
pop
daa
sahf
jb
mov
stos
sbb
popa
and
icebp
xchg
or
cmp
lahf
lods
call
cmp
inc
xchg
cld
lea
lret
loope
or
ljmp
into
loopne
data16
mov
dec
aad
push
inc
cmpsl
pop
jp
pop
xchg
insb
dec
ljmp
icebp
incl
je
repz
push
mov
mov
shr
jecxz
clc
mov
popa
nop
inc
lods
xchg
sub
je
ljmp
or
inc
push
insl
xor
mov
push
scas
pop
xor
jp
push
mov
fdivl
cmpb
shrl
push
sti
mov
add
ljmp
xchg
push
mov
gs
cmpsb
or
clc
push
pushl
mov
fadds
lret
push
or
orb
or
push
js
dec
mov
jb
cmc
inc
pop
cmc
rcl
lods
movsb
rorl
mov
mov
inc
cmc
pop
les
or
push
adc
sar
jg
lock
ja
shrl
lea
js
enter
jo
sub
push
int3
incl
lock
cmp
subb
ret
repnz
cmpsl
in
ret
out
xchg
mov
call
mov
js
mov
and
psrlq
ljmp
push
push
aaa
add
ljmp
inc
xchg
or
daa
and
jge
hlt
mov
pop
adc
lahf
pop
loop
inc
repnz
jns
mov
imul
pop
push
stos
push
push
decb
ds
scas
lock
sar
add
lds
cmp
pop
lret
mov
movsl
sbb
inc
es
repz
pop
xchg
loope
pcmpeqw
int3
je
repnz
decl
into
push
cmc
movsb
push
xchg
adc
pop
clc
mov
icebp
mov
xchg
xor
sbb
rol
jl
cld
inc
fidivl
cmpsb
outsl
inc
lds
lock
insl
sub
aas
stc
les
xor
lcall
fnstenv
inc
popf
popa
out
pop
dec
xchg
rolb
lods
sti
enter
movsl
hlt
jle
xlat
cli
idiv
call
aam
fsubrs
pop
sbb
clc
mov
add
mov
or
cld
xchg
add
mov
adcl
sbb
sub
lea
icebp
daa
pushf
lret
mov
cltd
shll
inc
mov
push
add
mov
cmpsb
cmp
fisttpll
cmp
mov
mov
add
sub
xchg
dec
lock
popl
rsqrtps
enter
decl
jno
cli
dec
push
sub
xchg
sub
mov
push
stos
roll
sarb
lret
xchg
add
std
ljmp
or
jns
ret
push
sbb
xchg
adc
pop
jmp
fiaddl
jno
jp
lea
dec
xchg
xor
call
js
sbb
adc
xchg
pop
dec
adc
mov
out
int
push
pop
push
xchg
xor
imul
pop
int3
push
repz
mov
incl
mov
sub
cmc
in
or
mov
sub
push
mov
out
lods
fcmove
daa
aaa
pushl
mov
or
ss
mov
mov
jo
mov
into
pop
push
push
or
ljmp
jns
cmp
cli
scas
jno
lret
inc
ja
mov
xor
call
into
lea
jmp
mov
jmp
push
cli
inc
mov
ret
ljmp
insl
jne
cmpsl
xchg
rclb
fwait
aam
sbbb
sub
dec
cwtl
cmp
cwtl
mov
pushl
xor
lea
sbb
popf
mov
dec
jg
mov
insb
cmp
pop
or
ljmp
dec
or
scas
fdivr
jmp
jl
add
frstor
call
add
sub
cmpsl
sbb
imul
test
sar
call
stos
mov
rclb
rclb
rolb
jb
inc
jl
outsb
pop
lods
jecxz
sbb
daa
push
sub
lahf
sbb
jmp
stc
mov
cld
paddsw
pop
incl
jg
add
lods
enter
int
inc
pop
arpl
adcb
mov
adc
fcoml
fwait
mov
inc
cmpsl
test
inc
push
mov
icebp
pop
in
lret
dec
pop
mov
call
in
mov
xlat
sub
push
decl
mov
sub
push
mov
jne
jmp
into
mov
mov
ljmp
xchg
loop
add
or
inc
sarl
in
pushl
cmp
xchg
add
int
lea
mov
cmp
es
push
cmp
xor
add
adc
arpl
fcompl
js
sbb
repz
jno
mov
fwait
lret
lahf
arpl
loop
cmp
les
inc
mov
sti
jne
je
stos
not
int3
fsubrs
sub
shrl
pop
or
jo
fs
push
in
add
push
mov
lahf
push
jg
xchg
cli
cmp
jbe
insl
sub
inc
inc
mov
loope
std
ljmp
xor
xor
ret
aad
cwtl
cmp
jg
out
mov
cmpsb
mov
mov
je
adc
jmp
mov
incl
cmp
jno
pushf
ret
mov
inc
adc
xchg
les
inc
dec
jo
fcomps
pushl
outsl
sub
lods
imul
es
or
push
jp
adc
call
lods
jo
sbb
fwait
adc
movsb
lcall
mov
xor
pusha
pop
in
jnp
ss
push
popa
jns
ret
inc
mov
xchg
mov
push
xor
xchg
bound
or
ljmp
repnz
xor
daa
not
icebp
push
sub
imul
xchg
jmp
adc
leave
push
sbb
aad
daa
cmpl
adc
rclb
xor
add
lcall
loope
sbb
sbb
or
mov
pushf
je
mov
call
loop
pop
adc
push
lahf
daa
cli
push
and
sub
sbb
das
cmc
call
jns
inc
xlat
dec
test
adc
andl
into
outsb
inc
ljmp
mov
lret
or
mov
cmc
stos
mov
lcall
ret
sbb
inc
jno
and
cmp
adc
outsl
in
cltd
bound
call
cld
mov
imul
mov
sbb
lahf
push
mov
push
cli
subl
xor
movsl
mov
stos
pop
insb
je
jl
sub
cmp
lods
or
call
dec
add
subb
mov
test
mov
sub
adc
inc
aam
icebp
or
popf
mov
incl
cmpb
and
cmpsl
jns
cmp
sub
cmp
fistpll
sub
or
cmovae
or
test
jg
push
xor
adc
pop
jl
pop
gs
sbb
orb
fwait
sbb
roll
incl
ret
sub
cmpsb
push
ficompl
scas
fnsave
icebp
xor
push
sub
stc
push
dec
and
aaa
shrb
dec
adc
jmp
subl
repz
or
jmp
cmp
imull
out
dec
ss
pop
mov
mov
decl
fldt
jns
or
mov
ret
jno
out
insb
cmc
lcall
testb
pushf
stc
lret
jnp
fsubl
xchg
mov
ljmp
jae
popf
popf
ja
lcall
cmp
cmp
incl
mov
xchg
mov
pusha
adc
or
movsl
sub
cmp
in
xchg
incb
xchg
clc
in
and
lcall
cmp
test
push
ljmp
mov
jge
mov
fisubrs
test
scas
clc
xor
cmc
loope
in
sbb
sarb
fs
inc
test
or
xchg
out
pop
jge
in
orb
add
xor
popa
imul
jmp
arpl
pop
and
add
mov
push
ljmp
test
and
xor
or
inc
jmp
push
addr16
push
rcrl
or
mov
popa
inc
and
pusha
mov
xlat
cmp
ljmp
push
sub
mov
ret
add
call
xor
filds
outsl
cld
pop
add
stos
push
out
or
in
repnz
incl
fdivr
outsl
jns
aaa
hlt
loope
movsl
mov
mov
fdivp
push
ds
push
inc
xchg
sbb
mov
imul
or
pop
std
jmp
shll
adc
mov
shll
aam
push
xor
add
call
iret
cs
xchg
and
sti
mov
icebp
insl
push
bound
and
xor
mov
push
mov
mov
insl
xor
mov
rolb
mov
loop
push
cld
dec
decl
or
cmp
mov
adc
jmp
lcall
inc
fsubrl
sbb
mov
xor
xor
jg
xchg
inc
cmpsb
jmp
mov
dec
xchg
cmp
pop
mov
jns
xchg
fadd
pushf
sbbb
enter
sub
adc
dec
repnz
call
ljmp
mov
fildl
aam
dec
inc
mov
push
xchg
fmuls
jg
incl
pusha
xor
mov
mov
pop
adc
and
repz
xor
or
inc
popf
mov
ljmp
inc
adc
xchg
xor
daa
cmpsb
int3
push
int
xchg
test
jbe
cmpsb
incl
das
mov
push
stc
sub
mov
incb
aas
mov
sbb
inc
scas
pop
push
dec
xlat
fucomip
lcall
lahf
mov
push
aad
or
sbb
mov
xor
fisttpl
xchg
ds
lock
adc
mov
bound
mov
imul
loop
aaa
call
inc
call
push
cmp
mov
jmp
stos
sbb
scas
inc
lods
pop
pop
sti
shll
jb
adcb
mov
dec
enter
cmpsl
lods
lcall
fmuls
sbb
mov
mov
push
inc
and
mov
sub
xor
xor
jecxz
mov
sub
mov
and
push
orl
icebp
mov
decl
popf
jge
fs
and
or
out
mov
cmp
cmpsl
cmp
mov
jg
repz
aas
test
cmc
pop
sarb
outsl
das
cld
inc
cmp
cli
pop
rorb
jp
adc
cmp
cmp
into
cwtl
rorb
jae
mov
dec
sub
pop
repz
inc
je
xor
xchg
test
jg
stos
outsl
hlt
sti
dec
mov
inc
lods
cmp
xchg
fdivs
xchg
lret
and
sbb
pop
push
cmp
shlb
jno
adc
pop
loope
xor
loop
aaa
jno
lahf
cmp
sub
fstp
aas
pop
or
add
loope
std
sbb
fisttpl
testb
xor
ljmp
mov
fstp
mov
decb
loop
and
pop
cmc
jle
in
push
lock
decl
cltd
idivl
rol
or
sbb
icebp
fistl
jge
pop
loope
mov
insl
mov
dec
or
mov
outsl
xlat
or
sbb
sub
adc
mov
std
ja
and
jne
sub
dec
cld
scas
xor
add
mov
ja
lods
cs
jg
and
push
sub
mov
pop
ljmp
push
imul
xor
scas
loopne
inc
and
xor
cld
pop
andb
fildll
pushf
dec
lds
sahf
or
mov
mov
sub
mov
scas
imul
lret
cmc
pushl
jp
mov
lds
aam
seta
mov
push
ljmp
int3
mov
jmp
or
sub
mov
das
ret
ja
into
aam
push
in
jp
inc
out
sub
popf
bound
xor
mov
decl
mov
or
leave
pop
sub
cltd
icebp
outsb
inc
jmp
out
inc
xor
call
sbb
je
cltd
je
push
lds
movsb
mov
inc
rcrb
dec
xor
cld
mov
cmp
mov
imul
fs
dec
lcall
mov
repnz
inc
mov
loopne
xchg
fsubrs
cmp
jo
mov
repz
stos
lock
cmovbe
mov
pop
les
inc
jg
xchg
mov
and
push
lahf
inc
scas
cmp
cmp
xor
jae
iret
cld
incl
call
or
push
repz
dec
mov
jno
lods
lea
cli
outsl
icebp
outsl
icebp
dec
sbb
mov
ja,pt
pop
shrl
incl
jmp
sahf
push
mov
arpl
push
sbb
and
or
les
lahf
adc
incl
or
jg
push
cltd
repnz
mov
pop
clc
dec
rcr
mov
sub
inc
mov
test
outsl
cmc
mov
fwait
shlb
mov
aaa
outsb
mov
push
nop
in
lcall
nop
rol
mov
rorb
imul
cld
fwait
sbb
cli
jbe
scas
idiv
jmp
push
cmp
dec
sbb
push
je
mov
xchg
pushf
dec
das
or
jg
lcall
lods
insl
sbb
dec
test
pop
fistps
ja
push
std
mov
pushl
aam
xchg
mov
sub
outsb
jmp
mov
arpl
shrb
movsb
or
cli
xchg
push
mov
iret
fsubrp
lahf
imul
and
daa
jae
adc
jno
ret
fs
insb
push
cmc
cmp
jne
divb
dec
jp
imul
outsl
mov
test
add
in
cmp
mov
fisttpll
jns
imul
ret
sub
scas
pushf
push
bound
cli
sbb
or
out
inc
test
dec
push
pop
xor
jecxz
call
push
shrl
cmp
mov
push
fmuls
pop
cmc
and
cmp
sub
dec
xor
incl
pop
jmp
in
out
test
cmp
fwait
lahf
test
dec
rcrl
jmp
push
cs
cmp
xchg
push
mov
lea
jl
int
loope
inc
mov
outsb
icebp
lcall
movsb
out
mov
filds
jg
int3
popf
lods
mov
pushl
movsl
ja
cmp
adc
adcb
call
mov
inc
out
lcall
fidivrl
sahf
in
jno
fs
sub
add
pusha
xchg
or
mov
lcall
mov
add
repnz
test
enter
scas
fistl
das
std
call
jmp
add
inc
jbe
mov
jecxz
cld
incl
mov
js
andl
inc
lea
mov
jmp
lret
cwtl
dec
lock
xor
xor
int3
lahf
mov
out
popf
mov
das
mov
jns
pushw
inc
mov
jb
jb
pop
call
adc
idivb
ret
dec
sub
or
push
sub
nop
test
jmp
mulb
shll
aam
sub
add
mov
adc
push
test
incl
mov
out
aad
pop
pop
xchg
pop
or
mov
test
popf
push
out
icebp
cmp
lea
adc
ja
lods
roll
popa
xor
sti
inc
cwtl
and
data16
mov
jmp
fiadds
or
loopne
out
pop
inc
pop
enter
or
outsb
dec
shl
sbb
arpl
fs
lcall
adc
adc
xchg
cmp
imul
inc
or
inc
pop
jb
and
stc
in
pop
push
lcall
and
mov
rorb
push
addr16
bnd
pushf
lds
push
clc
mov
decl
and
sbb
inc
stos
ljmp
add
ljmp
call
clc
es
add
mov
fwait
int
sub
ja
push
sbb
jp
mov
sub
or
or
in
movsb
shlb
mov
jbe
dec
sar
jmp
nop
mov
adc
push
in
push
dec
mov
decl
jb
push
pop
loop
inc
dec
mov
mov
cmp
adc
pop
insb
sbb
xchg
shr
jns
and
outsb
hlt
push
pop
movsl
fstpl
out
lcall
int
jmp
imulb
adc
repz
jecxz
xor
and
mov
pop
ljmp
cld
cmc
xchg
jmp
movmskps
push
adc
push
add
push
cs
adc
cmc
fcompl
insb
jg
adc
leave
xchg
in
test
in
adc
or
adc
aas
push
arpl
mov
push
stos
jne
push
or
imull
aam
and
fst
aam
cs
sbb
incl
push
les
outsl
cmp
cld
push
jge
shl
outsb
loope
fwait
sub
lcall
insl
mov
dec
pop
sti
push
aad
sub
lcall
cli
lret
jns,pt
jne
cmp
sub
or
ds
mov
cmc
sbb
fbstp
hlt
cmp
mov
cmpsb
or
shll
mov
mov
and
std
fildll
mov
and
sbb
dec
pop
enter
shlb
call
pop
jg
sbbb
in
inc
ljmp
int3
add
das
icebp
jecxz
cltd
push
rorl
xchg
inc
inc
orl
loop
push
or
jo
push
cltd
dec
loop
call
and
inc
arpl
fwait
dec
push
enter
addr16
insb
imul
ljmp
inc
test
cs
or
jl
dec
jle
jo
jb
inc
inc
pop
clc
cmp
jg
xorl
pusha
or
inc
push
ja
push
mov
add
pop
mov
test
das
std
lcall
mov
lds
clc
divl
aam
inc
adc
inc
mov
pop
call
lock
add
or
dec
add
jp
push
jg
call
and
out
sti
mov
xor
sbb
push
fisubl
das
lock
ljmp
sub
cltd
lea
mov
std
movl
mov
int
jne
lcall
insb
xor
mov
pushf
jg
jge
arpl
jl
int3
aas
imul
add
pop
loopne
cwtl
imulb
in
fstl
cmp
adc
push
jg
call
stc
cmpsb
inc
loopne
movsb
repz
jne
sti
jns
incl
popf
push
ljmp
scas
scas
aad
push
std
push
fnstsw
inc
cmc
out
nop
dec
ljmp
lcall
pushf
or
lods
sti
push
push
daa
sarl
fisttps
mov
jno
or
decl
insl
cmc
mov
ficompl
dec
mov
cli
xor
lock
repz
inc
lods
mov
add
repz
ljmp
fstpl
mov
mov
and
sub
pop
js
shrb
xchg
push
add
jl
add
sbb
cltd
jo
scas
aam
cmpsb
pusha
mov
sbb
and
add
mov
outsb
cmpsl
loopne
dec
push
mov
repnz
ljmp
push
mov
movsb
sti
pop
scas
xor
push
ret
movsb
testl
jg
push
jnp
ja
call
or
fwait
push
push
adc
outsb
xchg
sub
call
mov
push
cmp
adc
mov
sbb
mov
cltd
loop
pop
xchg
sub
pop
sub
push
incl
push
sub
cmp
sbb
xor
jo
cmp
mov
sarl
js,pn
std
ljmp
sub
pop
mov
push
call
dec
cmp
shrl
in
sbb
mov
jge
call
filds
test
mov
notb
xor
rcl
cltd
test
mov
pop
mov
or
ljmp
dec
mov
std
xor
enter
iret
les
jmp
gs
fucomip
inc
mov
xchg
ret
mov
adc
lea
call
push
cs
pop
jmp
pop
dec
lcall
fsubs
in
or
ret
pop
cwtl
add
sub
pop
cmp
dec
hlt
mov
mov
adc
pop
xchg
inc
decl
inc
mov
and
jle
or
dec
mov
jae
add
cmp
lods
xor
dec
cmpsb
push
xor
jmp
adc
aas
arpl
sbb
mull
call
cmc
repz
ljmp
cli
inc
mov
mov
fstpl
out
sbb
xlat
adc
mov
pop
add
and
jne
mov
inc
mov
decb
and
mov
adc
divb
lock
mov
xor
adc
in
mov
call
and
dec
cld
add
aam
mov
push
xor
outsl
std
decl
pop
rcl
cmpsl
pushl
pop
mov
mov
call
jmp
cld
lcall
addr16
repz
xor
or
stos
lcall
fistpll
pop
xchg
jecxz
rcll
ss
inc
mov
in
call
mov
dec
popf
xchg
pop
cmc
pop
popf
pop
into
mov
out
mov
rcll
clc
xchg
jle
in
pop
sub
mov
sub
sub
dec
or
xchg
push
pop
pop
repnz
jp
push
shl
int3
ret
xchg
aaa
cli
leave
shr
std
cmc
xlat
leave
aam
pop
aam
shll
sub
sub
cmp
aad
mov
or
pop
std
mov
cmc
and
adc
loope
lods
repnz
call
or
mov
xchg
push
and
adc
jb
insl
lret
push
sbb
incl
out
cmp
push
rcl
mov
mov
jp
lret
call
testl
test
xchg
sbb
xor
xchg
adc
xchg
outsl
jmp
add
pop
xlat
push
iret
mov
jle
mov
jg
mov
or
stc
inc
cmpsb
pop
ljmp
cmp
push
incl
jmp
sarl
stos
aas
js
fdivrp
jl
ds
adc
push
decl
cmp
sbb
enter
xchg
sti
inc
xchg
fucomip
adcb
out
fsubrp
pop
or
sub
ret
lret
mov
fldt
jmp
cmc
cmp
push
mov
ret
jbe
into
or
out
mov
in
pushf
jecxz
inc
fdivrl
sahf
mov
sbb
add
cs
inc
iret
stos
sub
jo
incl
sahf
sub
rcrl
push
out
mov
and
call
pushl
add
push
lods
std
lcall
fisubl
mov
dec
and
dec
mov
xchg
xchg
outsb
pop
jnp
sahf
push
out
fdivrl
fstl
call
lods
or
mov
cld
outsl
div
adc
pop
hlt
adcl
lcall
out
std
in
dec
insl
jnp
push
sti
daa
sub
mov
or
pop
mov
push
mov
jg
adc
dec
idivl
jg
jmp
arpl
popf
int
jo
mov
decl
jecxz
pop
les
xor
test
mov
sarb
jecxz
jmp
shl
sub
ja
jb
xor
jg
pop
test
in
lea
ljmp
leave
xor
mov
imul
jge
mov
inc
push
add
push
ss
push
icebp
out
sub
out
sbb
cltd
jle
scas
jae
cwtl
repz
fisubrl
sahf
pop
aam
ljmp
test
stc
jb
sbb
sub
pusha
xor
in
xchg
sub
mov
mov
aad
leave
call
cmpsl
pop
xor
inc
loopne
push
lcall
jg
jge
sub
test
bound
addb
cltd
xor
push
hlt
mov
add
xor
add
out
call
push
pop
cld
jg
jp
leave
sbb
push
adc
inc
in
in
cmpsl
sub
mov
jnp
pop
pop
testb
mov
call
lcall
cmp
mov
mov
push
ret
jl
fistpl
aas
in
pop
pop
mov
inc
ret
cmp
test
push
cwtl
or
test
out
std
rcrl
ja
ss
addr16
lods
mov
test
mov
mov
sub
cmp
movb
pusha
mov
xor
pop
incl
call
adc
in
inc
sub
or
pop
incl
adcb
cmp
lret
adc
dec
and
mov
adc
test
add
sahf
sub
and
aas
mov
xor
rcr
lret
jbe
gs
fucomip
lcall
test
test
pop
push
mov
rorl
pusha
pop
jp
ret
and
mov
mov
mov
inc
cmp
stos
bound
xchg
fwait
xchg
scas
je
xchg
dec
mov
out
pop
jmp
repnz
and
dec
xor
jecxz
jle
and
dec
shl
fists
cmpsb
sbb
inc
ljmp
dec
pop
jge
aad
call
scas
pop
dec
inc
cmpsb
sub
fbstp
cmp
sbb
ja
push
lret
leave
sbb
and
decl
rcr
pop
jne
inc
mov
inc
adc
adc
outsw
jl
push
or
add
cmp
mov
loope
out
mov
inc
push
je
or
arpl
outsl
hlt
pushl
jp
mov
insl
pop
add
pop
es
add
pop
mov
mov
xchg
mov
and
sti
mov
xchg
lret
out
jl
ds
stos
call
ljmp
data16
dec
xchg
js
test
sbb
mov
inc
push
out
icebp
das
std
lcall
leave
dec
pop
jb
or
in
out
gs
mov
aad
inc
cli
daa
mov
das
hlt
push
mov
push
adc
sbb
ss
push
movsl
and
jo
shl
popa
loopne
pop
pop
sbb
inc
mov
adc
data16
jl
mov
sbb
cmpsl
fmul
or
call
ret
outsb
pop
out
cmp
mov
fdivr
test
daa
jge
in
cld
lds
fs
sub
pop
in
jl
mov
clc
sbb
imul
jae
cmp
les
inc
mov
clc
clc
sub
add
and
xchg
cltd
cmp
mov
mov
mov
adc
pop
sbb
les
adc
dec
ljmp
hlt
push
les
xor
adc
scas
pop
fdivp
rolb
ljmp
pop
je
inc
mov
fld
cmpsb
stos
and
push
mov
shlb
fcomip
fsub
pop
mov
call
and
push
ffreep
cs
ja
mov
daa
ljmp
cld
pop
xlat
adc
push
cmp
ret
push
xchg
cmp
push
jae
mov
push
xchg
mov
in
xor
fstpl
hlt
ret
mov
popa
insl
cmp
dec
lods
daa
adc
adc
call
push
xchg
jne
in
cs
aad
cmpsl
sbb
fistpl
add
cmp
jae
xor
outsl
hlt
mov
pop
mov
add
sub
notl
mov
dec
mov
mov
ret
pushf
pop
lret
rcrb
push
xor
inc
push
mov
jg
mov
jmp
adc
xchg
pop
cmpsb
sub
mov
add
cmc
mulb
adc
add
rolb
pushl
dec
or
xchg
push
add
push
mov
jae
or
mov
es
pop
ljmp
call
mov
inc
xchg
scas
dec
mov
lods
call
mov
hlt
inc
ljmp
movsb
pop
cltd
jbe
stc
repnz
adc
incl
jge
xchg
mov
jge
jmp
mov
pop
mov
cmp
push
mov
sub
loopne
mov
push
sarl
icebp
add
inc
mov
lcall
lahf
jns
push
imul
mov
add
call
lcall
push
mov
sbb
xorb
xor
test
ljmp
ja
push
jne
lods
sbb
jecxz
lcall
lods
sbb
sub
ljmp
stos
sub
pop
adc
add
lahf
call
rorl
jecxz
xlat
loop
or
jo
es
lahf
dec
stos
outsl
into
push
sbb
adc
decl
bound
sbb
sub
outsb
jecxz
cmp
int
das
ret
imull
fnstsw
lock
push
cmc
fisubl
fmuls
aaa
cmpsb
icebp
fs
aam
mov
clc
outsl
dec
fisttpll
out
lock
mov
ljmp
icebp
mov
icebp
andl
or
sub
incl
mov
int3
push
aad
pop
fiadds
add
fsubrs
in
outsl
mov
mov
incl
cli
shrb
pop
cmp
adc
test
or
pop
push
xchg
call
jbe
inc
fildl
fldt
add
jb
add
jmp
mov
ss
push
and
loopne
xchg
in
cmc
inc
popf
ljmp
push
mov
lcall
outsb
movsb
popf
or
fsts
push
mov
ret
mov
cwtl
jp
add
mov
add
inc
stos
xor
xchg
jle
cltd
int3
xchg
mov
push
xchg
call
ljmp
xchg
dec
fdecstp
or
dec
repz
fnstsw
and
cmc
call
stos
mov
mov
xor
and
sub
insl
mov
dec
add
int3
stos
in
xchg
sahf
mov
loop
js
das
inc
mov
test
lds
gs
inc
insb
jmp
call
cltd
or
jg
into
loope
mov
xor
mov
test
jg
sbb
pusha
test
sbb
mov
icebp
xchg
movsl
mov
cmp
daa
add
lods
jnp
pop
fs
mov
mov
xor
xchg
incl
sahf
shl
push
outsb
enter
or
adc
dec
cld
cmp
stos
das
int
jle
pop
sar
jle
sbb
cmp
mov
movsb
shll
or
cmpb
push
mov
orb
pop
pop
push
xchg
pop
inc
repnz
xchg
loopne
push
mov
stos
iret
jmp
xchg
mov
cmc
sub
cwtl
nop
bnd
push
std
decl
aas
ror
push
sub
cmpl
icebp
cmp
push
mov
repnz
das
mov
add
cmc
jno
sti
fnsave
pop
or
out
paddsw
jmp
nop
pop
call
jle
cld
xor
repz
add
pop
in
mov
mov
shll
cmp
in
scas
jg
mov
jne
mov
aad
or
dec
enter
lock
pop
mov
fisttps
cmp
outsb
pop
sub
pop
xchg
and
xchg
mov
ljmp
sub
dec
loopne
mov
push
mov
mov
adc
decl
jmp
roll
pop
mov
rolb
pop
fnstsw
lcall
jo
decl
lret
fisubrs
pop
inc
dec
aad
addb
and
mov
ja
outsl
jg
pop
jbe
subb
incl
adc
mov
xor
das
sbb
and
lods
jnp
or
inc
inc
sarl
mov
add
insl
out
outsl
pushl
pushf
repz
test
int3
sbb
xor
dec
std
lcall
xor
out
in
sub
cmp
cs
pop
icebp
subb
mov
dec
cs
out
cmp
push
push
cwtl
rorb
adc
pop
xor
int
lret
js
xchg
adc
xor
fldt
mov
ja
std
outsl
filds
cmpsb
sbb
pop
mov
dec
inc
ljmp
test
pop
popa
jl
aad
movsl
sbb
loopne
out
mov
mov
stc
pop
icebp
mov
mov
and
mov
cld
incl
outsl
dec
push
inc
xchg
stos
and
test
mov
call
mov
mov
sub
add
sub
jg
mov
pop
push
cli
sbb
inc
out
les
push
adc
inc
or
decl
pop
adc
cmp
mov
fldl
xchg
mov
loop
pushl
push
enter
insb
inc
xchg
pop
cmp
pusha
addr16
jp
cmpsl
incl
lea
push
iret
loop
jb
mov
aas
cmpsb
and
testl
cli
loop
lcall
push
mov
push
pop
cmp
jp
dec
xchg
push
cld
inc
sbb
inc
call
jle
dec
ret
dec
add
push
scas
pop
lds
outsl
jmp
xor
mov
call
pop
rorl
jnp
sub
add
out
stos
sbb
bound
push
add
jmp
jl
jle
in
pop
movsb
push
adc
mov
shl
xlat
xlat
dec
mov
das
dec
sti
loopne
sbb
fsubr
push
das
cmpsl
jnp
sub
call
xchg
mov
and
jl
sbb
sar
cld
or
imul
sub
incl
test
add
and
fstl
mov
fstl
outsl
lock
incl
aam
out
int3
and
and
mov
test
subb
inc
psubusb
mov
mov
fs
cmp
dec
push
push
aad
pop
xor
pop
addr16
lahf
jge
lcall
fdiv
fisttpl
mov
pop
rolb
mov
dec
ljmp
mov
call
push
das
add
iret
pop
or
mov
pop
je
lahf
pop
or
mov
mov
scas
push
sar
decl
mov
mov
decl
aas
fwait
jge,pt
test
lret
ljmp
mov
pop
or
jmp
mov
leave
roll
jo
pop
xchg
ljmp
test
incl
push
lea
push
xor
popa
xor
mov
ljmp
cli
inc
movb
mov
adc
dec
in
andb
push
and
add
decl
insl
push
jle
gs
inc
test
test
shll
popa
es
jns
aas
add
in
push
lret
scas
inc
jns
jl
aas
stc
ret
add
adcl
ds
jno
insl
in
inc
lods
fucom
pop
addr16
add
mov
cmpl
xchg
push
sahf
xchg
adc
outsb
fsubl
ret
int3
mov
cli
outsl
hlt
aas
mov
add
test
fwait
aad
in
movsb
in
sbb
std
pop
mov
xor
fucom
lcall
lods
loop
fwait
mov
push
fs
pop
mov
sub
pop
loopne
daa
lret
push
mov
xchg
cld
mov
mov
mov
test
push
jb
sti
jl
add
fldl
mov
push
lret
cmp
or
mov
test
dec
aaa
andb
inc
mov
arpl
mov
jge
inc
mov
ud0
dec
adc
push
cwtl
out
sbb
jmp
inc
xor
popf
adc
mov
jns
xchg
xor
mov
inc
mov
es
bnd
rcrl
adc
add
ss
ljmp
jmp
push
out
loop
rcrl
cmp
sub
outsl
xor
xor
adc
dec
lcall
dec
stc
sub
jg
cmp
jb
dec
or
ss
or
inc
clc
je
movsb
incl
mov
and
sub
xchg
dec
push
ljmp
cmp
das
pop
std
call
aas
xchg
pop
in
testl
test
sbb
lods
imul
jb
pushf
ljmp
cmpl
hlt
sti
call
jg
push
movsb
xchg
jbe
fxch
mov
test
vshufps
add
xchg
sub
stos
mov
jg
ja
add
cmpsl
push
push
stos
lock
mov
je
fldcw
in
sbb
push
push
jecxz
imul
lahf
push
aaa
xchg
jmp
dec
jg
sub
aaa
push
cs
push
in
rcrl
ljmp
aam
jmp
aaa
sub
or
enter
call
in
and
push
inc
stos
pop
lods
das
pop
data16
pop
inc
je
mov
scas
cltd
incl
fstps
mov
popa
dec
test
mov
mov
lods
repz
imul
mov
scas
push
scas
dec
aas
or
mov
gs
mov
mov
mov
das
cld
rcrl
stos
popf
notl
loopne
mov
sahf
pop
cmpsl
jne
push
ljmp
mov
inc
add
inc
cmp
nop
jp
pop
jle
push
leave
sbb
stos
orl
test
call
mov
or
orb
cmp
daa
lods
aas
movsl
inc
push
pushl
dec
lods
cmp
xor
sbb
or
dec
push
cli
push
incl
imul
sbb
aaa
scas
push
xor
or
cmpsb
cld
imul
bound
shl
aaa
mov
cmpsb
fnstcw
xor
lret
push
push
and
inc
decl
lahf
adc
jbe
xor
jbe
mov
js
push
repz
das
das
fbstp
stos
call
or
cmp
inc
scas
in
stc
dec
mov
pop
dec
sub
ds
dec
fcoms
test
mov
ficoms
add
call
ss
ficoml
and
cmp
outsb
cmc
jne
inc
out
mov
sbb
in
inc
inc
testb
sti
loope
jge
loop
adc
jnp
cmp
add
adc
jmp
pop
adc
stos
movl
jb
cmpb
inc
sti
sarb
dec
cmp
pop
decl
les
not
test
jb
ja
pop
mov
lret
or
xchg
ret
and
pushl
std
pushl
sbb
fbld
cmp
ret
pop
sbb
mov
push
adc
or
nop
inc
stos
mov
inc
adc
lcall
inc
mov
negl
push
xchg
xchg
lret
sub
sub
inc
push
cltd
cmp
sbb
fists
lret
and
xchg
decb
and
inc
mov
nop
dec
xor
cmp
lods
jmp
push
ljmp
lock
sbb
cs
xchg
fsubrl
jge
add
fists
push
imul
mov
fisubrl
mov
push
push
test
pop
insl
loopne
cmpsl
mov
nop
pop
adcb
jb
mov
ret
pop
fs
pusha
xchg
nop
mov
lcall
jg
dec
bound
pop
or
stc
pop
lcall
mov
cs
push
lods
hlt
inc
and
push
shl
and
pop
maskmovq
testl
push
adc
out
jne
mulb
aam
dec
and
mov
mov
shll
call
xor
dec
or
ret
push
ret
cmp
inc
cmp
lcall
sti
repnz
mov
sub
push
cmp
repnz
mov
dec
js
cmpb
aas
xlat
je
test
enter
int3
jns
outsl
std
call
scas
sbb
cmp
outsl
ss
int
ret
decl
std
call
push
add
sbb
pop
cmp
mov
and
mov
push
jmp
or
inc
mov
scas
rolb
nop
incb
adc
xor
jmp
orl
out
rclb
push
iret
and
pop
cltd
lock
js
cli
mov
jae
push
ja
and
mov
orl
xchg
pop
les
push
adc
mov
push
aad
fwait
push
mov
xor
adc
cld
rclb
sahf
xchg
popf
cmp
jbe
jle
mov
shl
movsb
adc
stos
lds
loope
dec
sbb
xchg
push
jge
jb
pop
mov
dec
mov
mov
jge
imul
cmp
mov
push
pop
mov
xor
sarb
loope
dec
mov
push
std
xor
incl
fadds
outsb
sub
dec
in
lsl
aaa
std
daa
shlb
mov
std
fidivs
cmpsl
and
ljmp
mov
mov
inc
jg
sbb
jne
arpl
mov
mov
adc
ss
mov
cmp
add
mov
push
jecxz
xor
xchg
je
pop
test
dec
pop
fwait
out
and
xor
lock
sbb
lret
es
mov
insl
adc
pushl
jl
nop
movsl
out
imul
arpl
jnp
mov
jmp
mov
mov
or
lcall
hlt
out
repz
test
jnp
fcomi
sarl
cmp
inc
xor
pop
or
inc
cmpsl
mov
xchg
and
shlb
cld
mov
inc
ret
repnz
sbb
decl
aad
push
mov
mov
orl
cmp
mov
add
mov
pop
jecxz
stc
lock
cmc
call
shlb
aaa
ret
adc
imull
xchg
cmpsl
push
pop
mov
adc
call
dec
mov
aam
orl
out
mov
add
outsl
cld
jmp
mov
cmp
jo
lods
lds
push
push
jge
mov
loope
add
scas
call
ds
jo
and
or
add
mov
mov
or
sub
mov
hlt
fxch
adc
pushf
pop
fucomip
ljmp
lock
mov
imul
mov
xchg
stos
dec
test
and
jnp
repnz
mov
fsubrs
inc
and
pushl
shr
cli
fwait
and
xchg
orb
jnp
mov
jmp
loope
jne
fsubrs
sub
ljmp
ljmp
test
cltd
mov
xor
add
lcall
lret
cli
mov
add
iret
and
loopne
lea
shl
push
mov
sbb
xor
or
xlat
cltd
mov
jge
push
incl
ljmp
ds
test
cmc
cs
cmc
and
sbbb
push
mull
int
sub
xor
inc
mov
pop
lea
push
negb
sub
mov
fdivr
decl
test
insl
push
push
dec
imul
lret
leave
lret
inc
lcall
fs
call
cltd
sar
sahf
xor
mov
repnz
ljmp
jmp
sbb
jne
jns
pop
and
ss
repnz
pop
jmp
call
ljmp
leave
jo
inc
and
push
mov
inc
xchg
or
rcrl
scas
push
mov
enter
jg
and
pop
pop
ds
sub
xchg
lahf
or
push
mov
pop
outsl
scas
int3
cmp
pushl
int
mov
xor
int3
pop
pop
loope
inc
or
sahf
sub
std
lcall
enter
inc
outsl
popf
push
imul
aam
and
icebp
add
pop
jp
movsb
and
cmp
rcr
lahf
ss
movsw
adc
test
ljmp
cli
jge
pop
xor
repz
faddl
sbb
xchg
out
jecxz
jmp
mov
test
cwtl
xlat
test
xchg
sub
mov
mov
adc
ljmp
xchg
jne
in
out
mov
mov
jmp
into
xchg
xor
jne
fidivrs
out
push
pop
dec
ret
loope
ljmp
imul
dec
xlat
scas
and
jno
outsb
test
lcall
hlt
mov
fiadds
arpl
lods
xchg
scas
or
lods
or
xor
and
sub
aaa
inc
adc
add
jne
cmp
xor
jne
pop
inc
xlat
incl
lcall
lret
mov
dec
mov
pop
out
xchg
or
mov
sbb
decl
ret
inc
call
inc
add
xor
in
call
push
lcall
mov
mov
sub
aaa
lret
xchg
adc
pushf
pushl
mov
jo
jno
xor
push
jmp
ss
dec
push
mov
sub
clc
nop
cmp
imul
push
adc
sbb
mov
jnp
push
mov
jg
call
jb
mov
into
shrb
cwtl
hlt
cltd
clc
mov
ljmp
je
mov
jne
jb
adc
cmpsb
mov
mov
push
lds
jge
sub
xorl
jno
push
loope
jp
mov
loope
cmp
ss
in
and
sbb
pop
xchg
cmp
lret
outsl
add
sub
dec
imul
sbb
sbb
icebp
dec
hlt
inc
cli
sub
jle
mov
fwait
cld
mov
dec
or
inc
iret
aaa
clc
inc
les
aas
mov
cmp
add
mov
insb
stos
dec
data16
lea
mov
movsl
repz
sub
outsl
cmc
dec
lods
adc
xchg
cmp
lea
movsb
mov
mov
dec
call
sub
in
xchg
mov
in
int3
xchg
mov
inc
xchg
gs
addr16
daa
xor
mov
sub
test
push
daa
daa
cltd
andb
jbe
mov
jb
icebp
das
hlt
inc
push
aas
dec
ds
test
cmp
xlat
or
addb
jne
jbe
bnd
fcoms
jb
call
jg
in
and
push
fists
push
sbb
sbb
mov
jns
or
mov
xchg
out
icebp
lods
mov
push
sbb
les
xor
xchg
mov
and
inc
imul
inc
out
dec
fildll
in
push
pop
fisttps
mov
aam
mov
cmp
hlt
mov
in
data16
dec
js
ficoml
push
pushl
pop
lret
je
mov
int
int3
pop
cli
mov
xchg
xor
mov
cwtl
cwtl
scas
adc
mov
std
fs
incl
jns
cwtl
lods
imul
repnz
insl
jge
movsl
in
mov
mov
adcb
sbb
lea
fisttps
mov
lcall
popa
fmull
jno
js
call
dec
sbb
mov
clc
push
and
in
sarl
cmc
push
lock
daa
jno
and
mov
inc
inc
insl
fisttpll
lcall
ljmp
loopne
shrb
xchg
xchg
je
notl
out
sub
mov
jno
mov
popa
test
sbb
lcall
lret
sbb
lods
sbb
ds
and
jbe
leave
sbb
js
mov
aad
dec
jbe
andl
stos
pop
and
xor
cld
call
inc
mov
xchg
enter
ljmp
push
out
insl
sub
test
decl
dec
cmp
push
scas
aaa
sub
push
and
pop
cmpsb
lea
pop
imul
jge
icebp
lcall
pushl
inc
xlat
cmp
js
cmpsl
jmp
mov
pop
test
mov
jmp
jns
sub
sub
mov
mov
js
lcall
cld
jae
in
fnstsw
cmpsb
sbb
enter
pusha
adc
inc
incl
inc
cli
jp
push
jecxz
cwtl
out
cmp
cld
lods
jnp
xor
cmpsl
popa
cmp
mov
jmp
gs
and
mov
push
ret
lock
sbb
pop
loopne
lcall
std
cld
sti
sbb
cmp
mov
mov
movsb
hlt
cmp
jmp
and
add
cs
xorb
outsl
mov
lds
dec
in
mov
jp
imul
pop
or
adc
push
call
xchg
dec
push
push
cld
cmpb
push
mov
sub
popf
inc
or
out
insl
stc
popa
das
loopne
adc
inc
stc
cli
js
add
mov
aad
sbb
shlb
repz
rcl
call
fs
xchg
mov
out
add
ljmp
mov
test
hlt
cmpsl
mov
subl
test
call
fwait
inc
push
mov
add
pop
sbb
in
mov
rorb
mov
pop
mov
mov
adc
aas
ds
pop
insl
cld
jmp
sbb
add
inc
pop
loopne
push
popf
mov
call
and
pop
push
out
sbb
jns
xchg
decl
add
and
push
xchg
mov
jo
cmp
aaa
or
jp
in
jl,pn
in
cmp
cmc
decl
repz
jne
into
test
mov
and
clc
daa
mov
pushl
jo
jle
aam
lret
out
repnz
fwait
pop
iret
pop
xor
rclb
adc
ss
movsb
in
mulb
les
pop
push
lcall
loope
sub
mov
xor
scas
lock
rcrl
loop
cmp
hlt
insb
call
loopne
xchg
cld
push
shl
jne
das
and
push
jns
cmp
das
lock
incl
jno
lret
add
push
or
js
push
jmp
xchg
mov
mov
sbb
out
fstl
popa
movsb
cwtl
pop
cmp
addl
mov
adc
cmp
mov
popa
xlat
mov
inc
push
mov
push
icebp
jo
popf
mov
xchg
cmpsl
iret
mov
cmpsl
ficoml
adc
test
push
decl
pop
jg
xor
xchg
sbb
pushl
push
in
xor
push
lock
push
xor
arpl
cmc
orb
or
mov
jmp
into
popf
int3
hlt
jnp
pop
sub
jmp
push
sub
scas
mov
incl
mov
mov
clc
pop
sub
sub
jg
jmp
adc
inc
sub
jne
stc
imul
call
pop
pop
cmpsl
call
lret
test
sbb
xor
sbbl
mov
pop
push
and
call
lea
ss
bnd
out
outsb
cli
imul
test
inc
daa
jo
loopne
hlt
push
mov
sbb
dec
push
add
xchg
add
fdivp
scas
inc
cmc
mov
jnp
mov
cmpsb
insb
test
call
dec
pusha
insb
sbb
and
lahf
insl
pop
xorb
imul
sub
add
loopne
out
sbb
jne
push
mov
lods
clc
push
adc
jns
jb
and
adc
fbld
clc
fsubl
cltd
xchg
ss
addr16
xchg
xchg
or
push
sbb
enter
addr16
pop
inc
sti
loop
jbe
mov
or
jmp
and
sti
call
fcmovb
cmp
jmp
adc
imul
fildl
lds
lcall
jmp
paddd
pushl
call
jbe
dec
aas
leave
jmp
leave
jp
ss
loope
dec
leave
dec
mov
incl
sbb
shr
sub
ret
test
sub
pushl
ljmp
test
fdivrl
jle
pop
jnp
movsl
call
ljmp
jbe
mov
lods
xor
fwait
popa
mov
out
fwait
int
jp
jg
inc
mov
pop
nop
jb
jle
mov
sbb
and
out
sbbl
in
xor
or
mov
loope
push
pop
hlt
sbbb
or
and
inc
mov
xchg
jg
jp
outsl
icebp
lcall
jae
sbb
dec
mov
arpl
xlat
in
or
in
pop
mov
in
das
cmc
inc
xchg
stos
into
das
or
xchg
sbb
ljmp
mov
jle
jmp
add
jp
cmc
add
fmul
sti
cmpsl
out
pop
insb
sub
cmp
mov
popf
xchg
hlt
inc
sahf
rcrb
sub
jge
addl
or
and
cmp
push
dec
pop
or
lcall
push
repz
andl
jbe
mov
mov
jle
ds
inc
lcall
std
or
jle
shrl
cltd
ret
or
pop
out
xor
out
add
jmp
clc
and
push
xor
mov
sbb
ljmp
inc
jmp
push
mov
jns
jmp
or
movsl
jg
les
call
lock
loopne
mov
dec
jg
push
insl
inc
movsb
pop
test
dec
fcomps
xchg
shll
pushl
orl
add
dec
sahf
repnz
cmpsl
repz
rcrl
pop
mov
ljmp
mov
fnsaves
xlat
cmpsl
ret
repz
add
dec
jne
lcall
das
fsubp
out
cmc
decb
dec
xorl
repnz
pop
call
clc
sub
andl
mov
xchg
sti
and
jl
aam
int3
imul
addr16
mov
push
mov
lret
jge
adc
stos
fsubrs
fsts
add
iret
ljmp
mov
dec
popf
add
pusha
jnp
pushf
lds
jle
lret
shrl
jl
lods
inc
mov
push
gs
fnstsw
das
std
sbb
mov
mov
pushl
int
sti
aad
inc
mov
sahf
out
adc
mov
into
fmul
addr16
jmp
dec
pop
jmp
xchg
and
add
jo
sarb
js
adc
call
outsl
scas
xchg
xor
sahf
add
mov
sbb
inc
or
lcall
cmp
movsl
add
aad
clc
mov
jl
inc
inc
es
std
dec
sub
xchg
add
imul
mov
cmp
bound
dec
xor
xchg
call
rcr
mov
xor
jle
in
push
aam
fwait
pop
or
repnz
jnp
test
dec
mov
insb
insl
sub
jmp
push
in
lret
or
lcall
fidivl
or
fwait
sub
or
stos
or
aad
push
repz
pop
decl
dec
mov
xor
sbb
int3
mov
cmp
mov
cmp
dec
cld
call
cld
push
jo
adcl
std
mov
mov
stc
mov
inc
fidivrl
xor
daa
lcall
sub
shlb
or
hlt
dec
dec
loopne
call
cli
out
std
addr16
je
sub
xchg
sbb
fidivs
ljmp
loopne
scas
and
dec
insb
or
test
inc
movsb
hlt
das
scas
cmp
pop
leave
jnp
fnstcw
mov
inc
pusha
xor
xor
cli
jge
jge
mov
push
fidivs
dec
test
jmp
lcall
sbb
jp
jmp
add
aam
cmpsb
add
lcall
xchg
pop
mov
pop
lret
testl
jns
adc
mov
sti
imul
stos
stc
shrb
dec
cld
decl
imul
cmpl
ljmp
jp
sub
stc
add
clc
outsl
add
cmc
int3
sub
pushl
aam
sbbb
ret
rorb
cmc
cmpb
gs
dec
mov
stc
repnz
nop
movsl
pop
pop
push
push
inc
mov
sar
aas
sub
loopne
mov
pop
lcall
mov
pop
lcall
cmp
sub
and
std
jg
lods
movsl
fcmovbe
iret
mov
rcrl
xor
out
ja
push
mov
enter
mov
fstl
in
xorl
mov
jge
xchg
mov
rcl
movsb
push
xor
aas
ret
rcrl
xchg
push
lahf
scas
fstpt
cmp
mov
orb
mov
add
daa
inc
cltd
fs
in
xor
mov
inc
call
jl
mov
dec
inc
xchg
stos
inc
lods
cmpsl
xchg
fcos
pop
rclb
incl
jl
xchg
mov
loopne
nop
mov
fsub
decl
sub
incl
in
adc
pop
jle
cmpsl
cmpsb
mov
jne
adc
sbb
push
icebp
mov
mov
cmp
pushf
mov
sbbb
addr16
inc
jo
adc
aam
cld
fiadds
xchg
sbb
in
mov
push
adc
inc
into
stos
loope
pop
mov
repnz
arpl
add
mov
addl
jg
imul
cmpsl
mov
xchg
ret
rcll
lock
incl
nop
and
outsb
adc
xor
mov
jns
mov
lods
jge
inc
sub
xchg
add
jns
jg
decl
dec
mov
mov
sbb
sarl
dec
mov
sub
sub
pop
addr16
push
and
add
lcall
hlt
add
jg
mov
hlt
int3
test
or
cli
ss
jg
jmp
dec
in
cmp
xchg
in
dec
and
push
mov
aam
jne
push
dec
loop
ljmp
xchg
ljmp
and
in
pushf
push
adc
mov
cmc
jb
or
mov
xchg
cs
pop
je
ljmp
xor
inc
pushf
fstpl
loop
icebp
mov
inc
scas
in
xchg
stos
lret
mov
adc
out
mov
cwtl
and
mov
leave
mov
mov
add
dec
std
pushl
jae
mov
mov
adc
std
das
cmc
incl
or
ss
pop
xchg
mov
ljmp
pop
push
test
mov
push
outsb
loop
mov
in
loopne
dec
repz
push
jo
mov
jl
popf
ljmp
hlt
lcall
sbbb
ret
dec
inc
sub
aaa
rclb
pop
out
lods
ljmp
scas
cmc
out
divb
ja
movsl
push
pop
xchg
loope
fcompl
das
cmc
call
or
push
movsb
sub
push
cwtl
cmpsb
shlb
loop
jg
testb
sarl
outsl
jmp
lock
cli
lcall
add
mov
xchg
pop
fildll
mov
jmp
call
push
filds
jns
mov
mov
pusha
sub
ljmp
repnz
jecxz
sbb
cli
jno
ss
js
jg
mov
std
rorl
inc
rolb
in
jg
inc
jb
incl
insb
ds
test
push
ficompl
sbb
sbb
aas
jg
xchg
test
sbb
push
ror
cwtl
test
sti
add
lret
hlt
fidivs
popf
fstl
pop
cmc
sbb
mov
gs
into
inc
sahf
mov
movsl
adc
adc
outsl
xor
adc
jge
inc
cmp
sti
fbstp
mov
lcall
call
mov
inc
data16
adc
mov
hlt
mov
outsl
sub
inc
jg
pushl
and
and
out
mov
in
shll
push
adc
enter
pushl
cmp
jecxz
jle
movsb
or
cs
mov
mov
daa
testl
jg
mov
inc
mov
in
xchg
or
push
dec
lret
sbb
jge
mov
out
enter
icebp
and
mov
addr16
scas
aam
ret
adc
stos
xchg
jecxz,pn
dec
push
sahf
test
ja
lret
dec
jmp
in
pop
pop
pop
loop
arpl
out
jl
jno
sbb
fcoms
sub
ljmp
push
push
stos
mov
cmc
or
jle
out
mov
mov
in
test
ljmp
sub
xor
dec
pop
mov
outsl
jns
imull
dec
jmp
cmp
popa
push
scas
es
rorl
or
push
mov
xchg
rcrb
rcll
test
incl
xchg
inc
jae
test
es
in
fldl
adc
adc
jge
stc
mov
dec
jg
pop
xorl
mov
mov
gs
test
int3
out
or
adc
jmp
icebp
sbb
inc
xchg
push
imul
lods
mov
pop
fisubrs
sarl
std
jae
cmp
xchg
repz
jg
jmp
aam
sub
mov
mov
dec
stos
mov
pop
xlat
ds
jmp
decl
lock
mov
mov
stc
mov
in
jbe
lea
cld
pop
call
mov
pop
add
and
jmp
fs
sub
loope
adc
push
sbb
push
jns
rol
aaa
lock
jg
inc
jb
gs
add
adc
sbb
cmpb
mov
nop
cmp
iret
jp
adc
xchg
inc
inc
inc
sahf
mov
xchg
inc
pushl
mov
mov
inc
out
cmpsl
sti
in
test
repz
cli
mov
addr16
fnstsw
xchg
sbb
mov
sub
in
lcall
pushl
pop
stos
fldl
adc
sbb
push
cwtl
jae
imul
call
fwait
test
test
jl
dec
and
push
cmp
mov
cmp
jle
xor
inc
add
cmp
sbb
mov
out
dec
nop
mov
and
cmp
les
xchg
cmp
sarl
mov
and
pop
pop
js
pop
stos
push
pop
repz
cs
pop
nop
fcmove
cmp
adc
cli
decl
movsl
inc
out
pop
adc
out
or
in
hlt
cltd
stc
cltd
ljmp
mov
push
arpl
mov
imul
mov
push
addr16
nop
jno
add
pushl
dec
push
pop
arpl
bound
popf
xchg
mov
inc
ss
sahf
ds
clc
decl
pop
and
fld
loope
sahf
cmp
nop
int
jge
std
js
add
add
aaa
inc
push
adc
shrb
add
lahf
xchg
sub
std
out
fs
pushl
aam
cmp
enter
nop
inc
jecxz
and
pop
test
subb
ljmp
push
add
cmp
les
pop
popf
sbb
sti
frstor
clc
xor
xchg
cmp
sub
pushl
clc
ret
loope
insl
ds
data16
adc
xchg
xchg
stos
cmp
test
lret
add
int
cmpsl
ljmp
and
jecxz
lcall
out
dec
loope
int3
cmc
call
lea
decl
or
mov
mov
movsl
xor
out
push
mov
push
lea
sbb
or
lcall
push
sbb
aas
and
or
push
jns
shl
push
pop
pushf
insl
mov
push
dec
decl
sub
enter
mov
dec
je
test
inc
mov
jg
outsl
icebp
jbe
sub
pusha
fsubs
xor
add
ljmp
int
xchg
fisttpl
pop
rcll
sbb
inc
scas
jbe
test
inc
sbb
insb
lret
dec
mov
pop
mov
push
adc
xchg
mov
jae
and
inc
sub
cli
mov
fdivs
sub
das
dec
hlt
stos
dec
aad
daa
mov
or
sbb
xchg
push
mov
push
je
roll
js
xchg
jo
mov
call
mov
lcall
ds
push
cwtl
rorl
sahf
or
push
loop
ljmp
repz
mov
push
lods
mov
and
or
xchg
imul
sbbb
call
mov
mov
push
jb
addr16
lret
fwait
cmp
ja
test
incl
push
xor
mov
sarb
mov
and
or
ljmp
int
and
fiaddl
lret
xchg
jno
insb
sub
outsl
add
jno
sarl
movsl
inc
mov
decl
imul
ss
xor
ret
dec
notb
js
ljmp
incl
popa
fcmovnbe
insb
cmc
inc
sti
fwait
out
sbb
cmp
ds
out
and
ljmp
sysenter
jo
iret
cmc
insb
add
xor
and
loopne
adc
popf
push
xchg
inc
call
outsl
push
pop
push
mov
roll
and
pop
mov
mov
lret
aad
incl
add
mov
aas
or
lods
sub
rcll
fists
mov
pushl
popf
insb
or
loope
mov
xor
js
sbb
xchg
jge
jmp
sar
incl
aas
sti
leave
and
xor
cmp
jmp
cmpsl
or
ret
cmpl
mov
fcomps
add
call
inc
cmpsb
push
mov
jbe
jno
decl
push
jg
jne
ret
out
stos
mov
pushf
sbb
xor
fwait
test
and
int
stos
add
sub
mov
inc
mov
fisttpl
lahf
call
dec
gs
and
jecxz
xlat
dec
in
or
iret
jne
mov
imul
lcall
scas
daa
adc
and
pop
pushf
xchg
rcrb
int3
inc
and
scas
leave
hlt
ja
jb
lcall
ret
bsf
or
and
xchg
jae
or
xchg
pop
into
imul
dec
cld
lea
push
xchg
push
cmc
mov
adc
fucomp
mov
call
mov
pop
jmp
lea
arpl
push
mov
ljmp
mov
pop
lret
mov
repnz
into
sub
cmc
cmp
lods
sbb
add
pop
or
call
faddl
out
adc
sbb
add
inc
add
lock
in
movsb
mov
incl
ljmp
mov
fs
testb
mov
ljmp
test
lahf
pop
or
mov
jp
aad
xchg
js
jle
or
cli
push
pop
ja
sub
pop
scas
push
popf
jg
cmp
cli
out
stos
fwait
lahf
cmpsl
xlat
lods
daa
gs
push
pop
cmp
sbb
jg
push
lods
pusha
je
cs
xlat
es
mov
outsl
push
shrl
xchg
mov
les
incl
lcall
test
popa
sub
popa
xor
ret
xor
jae
dec
sub
stos
pushl
push
pop
xlat
call
outsl
popf
clc
filds
push
dec
or
lock
jmp
ss
jns
pushl
jns
inc
rcll
mov
popf
dec
es
jno
leave
or
pop
fdivrp
pushl
scas
sub
lds
jne
imul
cli
jg
ljmp
dec
pop
or
lahf
inc
mov
cld
std
icebp
in
pusha
aas
incl
out
add
scas
xor
jne
outsl
ret
dec
fimuls
decl
fisttpl
in
jnp
cli
mov
les
adc
hlt
pop
xor
cmp
call
dec
mov
decl
decl
hlt
imul
jo
and
sbb
pop
cmp
aad
mov
cwtl
xchg
repnz
ficompl
sbb
sub
orb
mov
notb
outsl
xor
arpl
movb
cmp
dec
cld
stc
xor
xlat
sbb
jbe
jns
push
cli
pop
mov
std
fmull
cmpsl
cmc
mov
sub
or
inc
lods
cmpsb
ss
fisttpll
mov
pushl
cmp
movsl
in
mov
divl
or
jg
mov
ljmp
jne
mov
roll
pop
xorl
shll
ljmp
inc
popf
mov
jae
lods
loopne
push
jb
nop
xchg
fs
adc
scas
pop
xor
push
outsl
icebp
jmp
push
outsl
or
jp
lret
xchg
dec
dec
incl
mov
rcll
fmull
test
mov
xor
jg
or
insb
pop
adc
sbb
mov
movsl
mov
enter
inc
adc
xorl
ficompl
incl
rclb
imul
stc
in
in
push
sub
shr
leave
cs
fsubr
sbb
lret
ljmp
in
lods
jo
sub
dec
fwait
push
cmp
lds
jbe
lcall
sti
fcmovne
pop
ja
pop
scas
arpl
dec
daa
cmp
dec
mov
push
add
jg
push
xchg
add
or
mov
div
push
mov
jmp
push
cmp
cwtl
mov
ret
sub
ss
dec
push
add
out
inc
jge
fistl
lods
aaa
out
and
adc
stos
xchg
outsb
popf
pop
mov
ljmp
and
sub
sub
ljmp
jg
sti
lret
jns
insl
hlt
cmp
jmp
mov
inc
lret
lods
push
push
aam
xchg
add
mov
in
idivl
jl
cmc
pop
cli
lods
dec
jmp
pop
je
bound
adc
sub
sar
mov
repz
pop
inc
push
aad
mov
call
mov
mov
mov
mulb
mov
mov
pop
in
and
lcall
push
jno
push
ljmp
pop
fidivs
mov
pop
dec
xchg
movsl
mov
xchg
mov
adc
sahf
mov
lods
xor
adc
push
jge
xlat
data16
pop
xchg
xor
iret
or
cmpsl
xchg
pop
decl
incl
outsl
out
cmovle
sub
push
out
jp
xchg
out
scas
sahf
adc
arpl
push
ljmp
scas
lcall
sub
mov
push
je
addr16
jg
cli
cli
jae
dec
inc
or
adc
sti
xor
movsl
idiv
lea
push
xchg
cmp
adc
cld
movsb
insb
mov
call
clc
lcall
push
dec
pop
cmc
jns
adc
stos
xor
xor
sub
jmp
xor
clc
jo
xor
sub
call
fsubs
dec
mov
scas
imul
decl
pop
movups
jecxz
dec
fs
or
or
out
jns
lock
pushl
or
fistpl
inc
in
loop
or
stos
push
dec
outsl
mov
cmp
pop
xchg
js
or
int
into
pop
push
fidivs
xchg
pop
lret
dec
dec
jbe
aas
push
mov
scas
dec
cmpsl
sarb
in
inc
inc
add
add
pop
call
adc
fdivrs
test
mov
les
and
mov
xchg
mov
cmp
pop
push
movl
lret
cltd
stos
fdivrp
add
das
cmc
ja
iret
push
out
dec
das
push
cld
jg
dec
and
into
pop
sti
fdiv
pop
in
pop
inc
les
call
pop
lods
cmp
xor
call
decl
int
mov
clc
sbb
sti
mov
shlb
xor
cli
sub
push
xorl
pushl
flds
mov
in
sbb
mov
adc
mov
adc
dec
rorb
fwait
xchg
shll
loope
adc
inc
decl
mov
mov
jle
aaa
test
mov
lea
fcompl
test
xor
mov
mov
jns
or
sbb
pop
ja
scas
js
jae
std
decl
rcr
mov
inc
lret
mov
lcall
std
in
pushf
cmp
xchg
mov
testb
sbb
sbb
mov
mov
emms
pop
pop
xor
mov
fucomi
rorl
sub
ljmp
cmpsb
adc
dec
pop
push
sbb
sbb
jecxz
insl
movsb
ror
push
repz
push
call
pop
incl
xchg
scas
xor
adc
imul
mov
inc
ret
mov
cmpsb
sbb
push
lods
mov
ds
dec
dec
fisubs
loop
or
ljmp
ljmp
stos
popf
cmpsl
lret
jge
sbb
rcl
pop
aam
incl
stos
nop
pop
mov
bound
add
negl
sbb
jb
cmpsl
lcall
jno
adc
push
mov
fcmovnbe
decl
push
leave
ret
je
mov
mov
clc
cmpsl
outsl
iret
jb
jns
push
pop
movsl
addl
sub
jno
adc
inc
shl
es
adc
lcall
gs
and
arpl
enter
jmp
ljmp
mov
dec
mov
repnz
loopne
rcll
and
iret
xor
mov
jae
pushl
movsl
sbb
or
xchg
nop
test
les
mov
addr16
dec
loop
mov
outsb
shrl
idiv
add
add
popa
mov
cwtl
mov
mov
mov
imul
mov
mov
mov
push
scas
mov
jp
mov
hlt
jbe
mov
cli
and
xchg
cs
shll
sub
ret
pop
pop
neg
cli
ljmp
mov
xchg
je
mov
cmp
mov
arpl
out
nop
lods
rcll
in
das
and
out
add
mov
addl
ret
jb
and
mov
xchg
mov
outsb
shrl
ret
decl
movsl
dec
je
mov
outsl
cmp
xchg
mov
adc
testb
inc
call
add
lahf
je
js
push
push
shlb
mov
scas
xor
mov
call
orl
arpl
imul
fadds
call
fwait
add
dec
ljmp
ds
cli
mov
mov
mov
jno
push
sahf
xchg
shrb
call
imul
mov
ljmp
fidivrl
movsl
mov
or
push
outsl
adc
xor
je
jne
std
mov
call
hlt
or
test
stos
inc
mov
outsl
push
xor
pop
out
adc
add
xchg
mov
cli
xchg
pop
aas
aam
test
jmp
call
pop
outsl
sbb
and
push
mov
jle
sub
adc
aaa
subb
leave
pop
cmpsl
in
push
decl
test
jne
push
test
test
je
or
jnp
mov
loopne
les
neg
sbb
pop
clc
aaa
mov
mov
mov
sbb
fdivrl
jbe
jnp
decl
jg
or
cmp
sbb
mov
and
mov
and
xchg
int3
mov
hlt
ljmp
jmp
iret
lock
jns
lret
jmp
into
adc
and
jge
mov
mov
mov
mov
mov
lcall
daa
testb
push
loop
ds
mov
out
mov
cmp
adc
sub
ljmp
rorb
add
mov
pushf
aas
jmp
mov
je
inc
inc
xor
adc
push
jecxz
mov
in
ja
sub
push
xlat
stc
fwait
push
jae
ret
push
fbstp
push
cmpsb
addr16
loope
push
inc
outsb
pop
jg
push
or
sbb
jo
paddw
jns
pop
filds
or
xlat
adc
sub
pushl
mull
adc
int
lock
js
mov
and
cmp
shll
pop
cli
sub
sub
mov
mov
dec
push
jns
xor
push
jp
or
xlat
in
orps
sub
jne
outsl
std
push
out
hlt
push
jg
ja
sbb
jnp
add
sub
mov
sbb
or
adc
add
gs
cmpsb
mov
add
lcall
or
adc
pop
fstl
mov
pop
call
jbe
jnp
jle
jnp,pt
xchg
mov
inc
aam
jo
xorb
pushl
mov
adc
cli
mov
insb
or
rep
ja
insl
adc
adc
syscall
test
fnstcw
idivb
adc
cmpsb
arpl
pop
cmp
xorb
cli
jg
test
pop
dec
pop
xor
dec
call
cmc
pop
insb
std
pop
dec
hlt
lock
enter
mov
jmp
dec
sub
jno
xor
sbb
cmpsb
jbe
int
jo
aaa
jp
stos
cwtl
add
lret
or
call
jecxz
clc
push
mov
inc
and
in
inc
xchg
jg
push
pop
clc
add
mov
lods
jno
rcrl
sti
int3
fcomps
data16
jnp
inc
mov
ret
pop
xor
dec
push
subl
cmpsb
sti
daa
outsb
cmp
bound
cmp
xor
adc
or
test
jp
mov
fcompl
je
jae
cmp
lcall
decl
loopne
inc
add
cli
lret
mov
fiadds
jecxz
sub
pop
inc
pusha
mov
mov
iret
pop
rcrb
cli
inc
incl
imul
test
ret
arpl
decl
repnz
and
loop
lea
inc
mov
cmpsb
xchg
adc
stos
jno
ljmp
dec
popf
stos
sbb
pop
inc
pop
mov
les
aaa
adc
xchg
xchg
mov
xchg
clc
mov
hlt
into
jae
pop
decb
adc
fst
jge
jno
fistpll
lods
add
loopne
fdivr
cmp
mov
js
or
stos
push
mov
outsb
mov
je
pop
fwait
mov
lcall
cld
call
loope
inc
xor
jle
jne
or
cmp
arpl
adc
lock
decl
lods
xor
iret
fwait
bound
jmp
cmp
clc
sub
cmpb
cmpl
and
lcall
add
dec
lds
add
aad
arpl
enter
fs
inc
jae
lods
sti
mov
adc
push
fbld
jg
imul
dec
les
xchg
in
movb
pushl
xor
push
or
and
js
add
cmpsl
lea
lcall
xlat
push
cwtl
xchg
xor
jne
in
shrl
adc
int3
sub
sar
loop
mov
mov
mov
xor
cmpsb
mov
ljmp
sub
je
test
sti
pmaddwd
out
push
sbb
push
jnp
loope
stos
pop
or
insb
cmc
xchg
cltd
xchg
icebp
xor
inc
cmp
sub
lock
jbe
mov
loopne
ljmp
mov
jb
push
inc
mov
decb
mov
popa
xchg
in
mov
dec
lods
clc
mov
loope
or
je
and
popf
cmp
push
pushl
xchg
push
cld
lret
rorl
mov
cmp
pusha
gs
scas
call
cli
call
mov
ds
out
test
mov
std
incl
loope
sti
test
pop
mov
mov
pop
jno
ret
movsl
outsl
lret
pop
xchg
gs
mov
cmc
jmp
cwtl
xorb
je
xchg
mov
dec
xchg
xchg
bound
cmpsl
incl
dec
insl
fucom
add
das
test
xor
shrb
or
fdivp
mov
imulb
decl
mov
call
movsb
inc
mov
xchg
adc
push
fiadds
sbb
in
xchg
or
push
pop
iret
adc
ljmp
lcall
mov
std
je
mov
into
inc
shlb
and
pushf
jb
dec
cld
pushl
or
sub
jae
pop
mov
lock
arpl
mov
pushl
mov
dec
jl
or
cmp
add
or
xor
insb
mov
mov
popa
pop
sbb
sub
in
jp
jl
lods
jecxz
cmpsb
daa
aas
leave
movsb
xchg
push
shrl
push
ficoml
das
sar
mov
jle
rcll
insl
mov
and
xchg
nop
int
ljmp
sarb
sub
fsubr
push
popf
inc
pop
xchg
cmc
lea
into
cld
jmp
dec
aam
mov
shlb
call
shrb
jmp
jnp
push
xchg
lcall
test
pusha
mov
ss
out
xor
jmp
add
jmp
jecxz
cmp
or
inc
movsb
sub
pop
xchg
rcll
inc
in
dec
cld
jmp
mov
dec
push
push
pop
push
xorl
movsl
ljmp
xchg
insb
subl
xchg
add
adc
loop
stos
decl
popa
inc
lods
test
stos
mov
add
jp
add
xchg
add
loopne
pop
jecxz
sub
fcoms
or
scas
mov
mov
decl
pop
inc
push
into
testl
xchg
data16
jg
test
push
mov
out
fsubrl
jle
lret
push
mov
iret
jge
clc
jns
stos
ret
inc
cli
loop
repz
mov
aad
jp
inc
pop
mov
scas
imul
cmpsb
pop
mov
jnp
lahf
loop
jnp
and
or
mov
push
mov
ja
cmp
movsl
cmc
mov
stos
or
sub
ljmp
out
movsb
adcb
mov
push
push
and
test
and
pop
mov
inc
daa
push
ret
iret
std
shlb
adc
movsl
mov
das
pop
outsb
data16
loopne
outsl
scas
insl
daa
inc
gs
jnp
or
cmp
lea
mov
mov
out
add
push
insb
cld
pop
mov
dec
jno
rolb
xor
call
or
inc
cmp
cmp
lds
adc
decl
xor
sbb
cmc
sub
add
xchg
addl
inc
cld
call
decl
xchg
jno
mov
inc
fadds
hlt
xor
xor
mov
push
adc
jg
pop
lods
fucom
mov
push
arpl
mov
mov
incb
dec
decl
in
pop
imul
sbb
cmpb
cmp
pop
lcall
pushl
push
sti
mov
xor
push
lea
xchg
mov
test
pushf
es
jl
stc
shll
mov
dec
cmpsb
lock
test
aaa
push
cli
cli
sub
push
push
outsl
xchg
lods
iret
mov
orb
pop
testl
sub
lret
ret
pushl
das
mov
mov
cmp
fmull
int3
fs
daa
mov
cmp
call
xor
loopne
inc
stos
mov
pop
dec
and
idiv
pushl
ss
fsubrl
mov
dec
ret
pop
xchg
cld
sti
sar
movsb
or
jmp
ret
mov
fisttpl
or
jnp
cmc
fcmovnu
jmp
add
insl
outsl
xchg
jb
mov
aad
mov
out
push
decl
push
stos
sub
push
pop
or
xor
pop
pop
push
jo
add
out
xchg
add
sub
lcall
into
rcl
mov
dec
sbb
aaa
daa
fildl
jecxz
push
push
aad
and
sbb
or
sub
xlat
aas
and
cmp
out
bound
pushl
pop
mov
roll
jb
cltd
xchg
dec
in
xchg
das
icebp
mov
sbb
sahf
std
ret
pop
adc
insb
lcall
sub
inc
addr16
imul
addr16
sahf
pop
rcrl
and
loope
movsl
movsb
jg
decl
rcrl
out
stos
shrb
lahf
lods
orb
stc
jle
adc
add
or
cli
ret
push
mov
jecxz
jg
and
and
add
mov
add
push
rcrl
jl
push
jg
jg
sbb
mov
sahf
mov
dec
xor
jmp
nop
fwait
adc
insb
popf
jge
and
stos
rolb
mov
xchg
push
sub
xchg
call
and
iret
xchg
faddp
sti
jmp
popf
outsl
inc
das
popf
lahf
scas
jb
inc
jl
out
loopne
clc
call
push
jecxz
mov
sub
bound
jne
jg
aam
pop
dec
cmc
hlt
lods
shlb
jge
out
cmp
push
call
lock
mov
nop
loopne
str
mov
mov
jmp
js
jl
jnp
rolb
push
sbb
adc
mov
fbstp
cmp
push
fldt
mov
mov
push
mov
cmpsb
sub
lcall
mov
shrl
rol
pop
or
xlat
mov
cld
xchg
fisttpl
shl
cmove
lcall
dec
mov
or
xchg
pop
test
sub
mov
jge
ljmp
repnz
sub
shll
xchg
ljmp
mov
adcl
jb
xorl
rorl
cmp
jecxz
insb
sarl
rcrl
frstor
and
pop
mov
pop
roll
push
cwtl
mov
ret
jnp
repnz
push
fildl
sbb
sub
call
add
inc
ja
dec
scas
push
call
pop
sub
icebp
push
jmp
sahf
jmp
incl
lcall
dec
jne
mov
xlat
or
ficoms
in
mov
jg
dec
ss
scas
pop
inc
jns
mov
mov
in
pop
jg
lea
inc
add
or
ljmp
outsb
xchg
xchg
mov
add
cmp
inc
movsl
cmpsb
stos
sub
add
inc
rcrl
or
fcmovbe
add
dec
mov
fs
and
pop
pop
loopne
call
cmovo
das
sub
sbb
call
ret
movsb
call
fistpll
jns
fwait
rcl
pop
repnz
loope
call
jmp
mov
int
sub
mov
pop
adc
out
add
push
cld
xor
pop
inc
fnstsw
jmp
pop
jnp
and
decl
int3
cmp
pop
out
jns
cld
cmpsb
cwtl
cwtl
or
aad
ljmp
lahf
outsb
adc
outsb
loope
popf
aad
jne
mov
dec
stos
fs
cs
or
jmp
pop
mov
cmpsl
cmp
sub
lret
cwtl
cmp
dec
sub
push
ljmp
test
into
push
mov
repnz
outsl
push
mov
cwtl
mov
push
adc
xchg
or
insl
pop
mov
bnd
jo
decl
pop
addr16
addr16
mov
add
mov
fidivrl
ljmp
ret
pushf
jno
out
pop
cmp
mov
sahf
insl
cli
or
call
pop
lcall
mov
sahf
flds
sbb
cld
mov
push
xchg
fs
lret
lahf
mov
dec
mov
fnstsw
incb
pop
xchg
cmp
gs
lahf
into
lcall
mov
inc
xchg
nop
inc
std
in
jmp
decl
incl
fstl
lods
imul
cld
je,pt
sbb
adc
arpl
in
into
movsb
sub
xchg
repnz
mov
jecxz
scas
inc
cs
lret
cmpsl
dec
js
mov
outsl
icebp
jg
test
je
pop
and
fprem1
test
fdivl
mov
dec
and
iret
or
add
push
cmpsb
jecxz
pop
inc
fistpll
xor
fisttps
jae
cmpsl
movsb
xor
loop
sub
xor
jbe
fs
fcomip
pushl
in
mov
popa
imul
outsb
dec
dec
cs
movsb
pusha
and
out
jp
movsl
outsl
lcall
pop
daa
loopne
mov
int3
inc
sarl
out
ret
sub
cmp
jle
add
outsb
lds
adc
movb
lahf
addb
dec
mov
xchg
pop
xor
inc
pop
pop
jl
push
gs
mov
incb
jge
mov
leave
dec
push
lcall
cmp
int
adc
addr16
popa
cwtl
xchg
push
dec
sti
popf
xchg
ljmp
std
ljmp
jmp
push
fs
push
push
dec
mov
sbb
lea
jg
add
shl
cmpsb
vorps
insl
mov
cmpb
incl
jge
lods
rcll
int3
and
dec
or
les
mov
fisttpl
mov
mov
imul
dec
out
jge
dec
fstl
call
aaa
stos
outsl
inc
fisttpl
cmpsl
aaa
test
es
sub
icebp
call
jg
lds
sub
sti
stos
imul
js
adc
or
or
and
mov
mov
and
js
lahf
push
xchg
es
xor
movsl
and
in
negl
sub
and
lcall
lcall
loop
jle
lea
jecxz
call
ret
push
jo
mov
repz
lcall
jo
xchg
mov
or
cmpb
pop
std
cld
je
outsb
pop
or
pop
loopne
add
mov
inc
inc
mov
sahf
adcb
pop
call
and
xorl
ljmp
push
and
pop
add
mov
add
repz
sahf
into
repz
sbb
icebp
incl
pop
hlt
clc
add
aad
xlat
mov
insb
pop
xchg
or
push
dec
mov
ljmp
icebp
push
sar
sub
ret
cmp
inc
push
cmp
dec
adc
add
rcrl
movsb
mov
inc
das
cmpsb
mov
pop
repz
in
leave
stos
sbb
cmp
das
icebp
pushl
mov
xor
sbb
sahf
dec
xchg
xchg
pushf
push
cli
pop
shrb
ret
inc
ljmp
jp
mov
xor
mov
cmc
push
cmp
movsl
incb
cld
mov
movsl
cmpsl
and
fyl2xp1
ljmp
aam
outsl
sbb
mov
mov
jecxz
inc
xchg
sub
mov
insl
jecxz
pushl
test
rcll
jge
jne
int3
cli
jg
divl
cmp
xchg
cmp
addl
imul
sub
push
mov
loopne
mov
mov
or
mov
mov
jo
xchg
and
incl
out
ret
adc
ret
sub
jge
call
mov
ss
xchg
fildll
icebp
lcall
stc
das
sub
lock
mov
dec
mov
incl
or
push
jge
adc
repnz
les
inc
jnp
sbb
dec
aaa
dec
push
cmc
decl
xor
idiv
cmp
push
rolb
or
mov
movb
jbe
add
add
call
fisubl
xor
popf
adc
ds
fs
mov
mov
push
sub
xor
movsb
jne
cli
fisttps
ja
es
push
and
lea
lds
test
xor
roll
pop
or
mov
mov
es
fbld
sub
rcrb
pop
mov
out
fldt
inc
clc
lcall
add
decb
scas
xchg
fcmovnu
xor
sbb
and
push
dec
int3
addr16
int3
test
hlt
pusha
mul
dec
xchg
rcrb
mov
arpl
fs
mov
pop
xchg
ds
stos
cltd
xlat
lcall
mov
push
lea
or
cmpsl
and
add
lcall
lcall
mov
adc
sahf
addb
adc
imul
or
sar
pop
cli
push
adc
incl
sbb
xor
mov
test
popa
and
clc
ljmp
repnz
mov
stos
push
push
pop
xor
call
sub
nop
mov
adc
mov
xchg
sub
out
push
mov
repz
int3
jp
test
jmp
ljmp
nop
cmp
sarb
xor
dec
jp
jo
das
xchg
xor
call
mov
pop
xor
sbb
sbb
pushf
andb
jg
mov
mov
adc
fiadds
jmp
out
nop
loop
shl
das
mov
jmp
out
jecxz
mov
xor
outsl
ja
inc
fiadds
dec
push
incl
imul
mov
lret
add
scas
imul
in
std
fstpl
int3
push
lcall
push
mov
daa
ds
xor
stos
mov
cmc
pop
movsl
add
das
lock
out
arpl
stc
iret
dec
ss
jg
pop
inc
mov
inc
cld
xchg
jbe
xchg
sbb
jge
adc
or
pushl
mov
cmc
das
addr16
and
or
sub
xchg
inc
fcomip
aad
jp
incl
bound
dec
adc
into
push
jg
push
aaa
xor
jo
ficoms
outsl
cld
xchg
aad
mov
fcmovb
sti
and
mov
loopne
or
adc
data16
mov
call
jno
lcall
adc
xchg
xchg
ljmp
test
out
cmp
int
popa
lahf
sub
jmp
jmp
std
mov
lahf
jl
xchg
xchg
jo
and
sub
fwait
pusha
jnp
mov
std
add
or
in
dec
icebp
aad
dec
cld
stos
sub
cmc
sbb
hlt
dec
in
adc
cltd
and
dec
push
je
jmp
or
leave
in
add
and
dec
pop
mov
orl
pushl
fcompl
ss
ss
cmp
push
dec
adc
lds
sbb
dec
add
xor
int
push
pop
jl
outsl
std
push
fld
push
js
pop
mov
inc
xlat
popf
inc
xchg
mov
pop
fwait
imul
lds
call
add
fmuls
and
daa
inc
aad
or
jle
lods
xor
incl
pop
das
add
testb
sub
sub
aad
aaa
sbb
jmp
jge
loope
inc
push
ds
or
push
pusha
sub
out
mov
in
int
pop
jl
push
mov
push
pop
cmp
pop
mov
ret
sub
push
in
xor
lea
and
daa
push
lret
adc
push
xchg
call
lods
stc
fcmovnbe
ficoms
pushf
jae
bound
mov
stos
imul
das
dec
mov
ffreep
mul
cmpsb
ljmp
mov
mov
decl
sub
sub
pop
mov
cli
sbb
cmp
clc
outsl
fdivl
jecxz
in
pop
enter
mov
push
fprem
mov
popf
imull
loope
incl
adcl
push
testb
andb
outsl
jae
rcll
pushl
cmp
sbb
pop
cmpsl
and
mov
push
ljmp
lcall
incb
stos
hlt
pop
sar
mov
mov
dec
incb
shlb
ret
shlb
dec
mov
inc
inc
decl
negb
push
inc
pop
push
push
ja
add
and
out
stos
mov
stos
jbe
add
xchg
incb
call
jg
dec
int3
sub
insb
jp
add
in
adc
push
jno
out
repnz
incl
addr16
aas
jo
lcall
mov
lock
cmc
jnp
decb
nop
cmp
inc
xor
adc
xchg
adc
roll
icebp
jmp
lea
rcrl
call
dec
cwtl
mov
mov
sub
push
cmpsl
jg
push
subb
aaa
xchg
dec
clc
decl
sub
std
cmp
icebp
data16
add
pop
and
lret
sbb
pop
xchg
fwait
mov
ljmp
out
cmp
sbb
dec
shlb
and
pusha
cmp
adc
adc
cmpsb
mov
sub
sub
clc
in
mov
ljmp
shrl
lods
inc
dec
int
pop
pop
nop
push
pushf
push
sbb
and
jbe
orl
dec
sbb
decl
testl
inc
fisttps
and
adc
pop
cmp
mov
cmc
fistps
dec
ljmp
lock
nop
xchg
mov
cs
mov
jno
sar
incl
lods
jg
dec
jno
xor
xchg
jle
xor
sbb
loopne
mov
sbb
or
lcall
push
ds
mov
cmp
lods
or
incl
outsl
out
jns
in
jp
nop
jmp
mov
xor
jg
cmp
sub
mov
mov
ljmp
adc
icebp
and
jg
lods
in
aam
icebp
inc
jbe
jae
outsb
inc
out
outsl
cmp
loope
outsl
icebp
xor
imul
fnstsw
popa
add
call
jp
cmp
pushf
push
sbb
xchg
jb
das
jbe
pop
je
lods
jp
push
incb
and
mov
dec
jb
cli
fs
pushl
sub
incl
push
mov
addb
jb
push
loope
push
lret
dec
rol
lods
shll
ficomps
int
pop
cmpsl
inc
push
das
cmc
mov
jg
mov
cmp
sti
mov
cli
outsb
xchg
sbb
outsl
neg
adc
mov
jbe
js
test
in
pop
insl
mov
hlt
js
push
adc
and
and
push
pop
jl
dec
outsb
in
pop
test
stc
in
pushl
add
and
xchg
xor
jno
rcll
push
add
loop
call
out
jmp
adc
cmp
out
push
push
lcall
int
in
shll
adc
xchg
ja
bound
mov
dec
pop
int3
icebp
or
xchg
popf
pop
mov
decl
jbe
das
and
xor
out
push
xchg
flds
cmp
fidivrs
inc
xchg
inc
out
pusha
xchg
sti
mov
mov
jg
jge
jns
jmp
sbb
ret
fwait
add
or
dec
jmp
mov
clc
sub
sahf
aad
xor
sub
pop
dec
insl
jns
push
leave
xchg
and
es
xchg
lret
clc
decl
mov
iret
ret
push
rol
sahf
int
or
ljmp
in
cmp
and
push
cmp
add
scas
aam
test
jnp
pushl
fdivrs
decb
lods
adc
pop
cmp
fnstcw
pushf
mov
fbld
imul
data16
ljmp
sub
fsubrs
lock
add
push
enter
adc
adc
push
cltd
insl
test
das
push
insl
pusha
incl
pushl
loop
jmp
mov
fwait
les
cmpb
lods
sti
jecxz
int
jmp
lret
push
andl
imul
into
rcr
js
lods
fwait
loop
mov
adc
loop
push
notl
dec
leave
cmp
inc
mov
incl
mov
aam
addr16
pop
or
std
pop
mov
aam
push
add
cli
into
add
jg
aad
sub
and
adc
test
decl
jmp
insb
xchg
jmp
sbb
fcomps
lcall
out
xchg
bound
call
push
mov
imul
loop
je
icebp
dec
lock
in
test
jg
das
lock
mov
and
imul
sbb
hlt
add
enter
lahf
mov
jmp
adcb
shlb
ficompl
fisubs
jbe
fdivr
jnp
ljmp
pop
pop
or
or
dec
dec
cmp
and
jg
add
mov
mov
xchg
jmp
sbb
push
loope
jae
adc
pop
sbb
test
pop
and
push
mov
mov
mov
cmpsb
or
sub
leave
insl
mov
mov
jg
mov
xor
es
aas
cld
ljmp
mov
push
testb
movups
test
mov
leave
pop
mov
mov
pop
inc
pop
loop
je
xchg
or
int3
dec
pushf
rorl
mov
ud0
rcl
xchg
sub
and
repz
lds
pushl
add
jmp
pop
stos
pop
mov
jp
cmp
lret
hlt
or
mov
insb
test
mov
and
inc
mov
pop
lods
sub
push
adc
cmp
insl
xor
cmpsl
cli
jg
xor
outsl
je
fst
enter
bnd
inc
jb
call
fwait
adc
jp
mov
jbe
popa
aaa
jle
loop
cmpsb
cmp
jmp
loop
in
aaa
and
adc
lock
pop
loopne
mov
ss
fidivrl
mov
call
lcall
rcl
test
leave
adc
cmp
and
lcall
pop
sub
ljmp
xor
clc
jmp
and
fldcw
shl
lcall
clc
add
out
xchg
mov
loopne
jle
test
jo
pop
adc
push
cmpsl
dec
andb
dec
sarl
inc
ficompl
mov
pop
push
xchg
mov
push
push
push
mov
rolb
roll
ljmp
ljmp
aad
out
rol
pop
sub
mov
fldt
mov
jmp
sbb
ja
pusha
and
cltd
mov
movsl
push
mov
shl
fiaddl
or
ljmp
jo
pop
dec
pop
or
push
mov
jo
loope
cmp
or
push
mov
in
and
call
xchg
push
inc
fcmovnu
sub
cmpb
jmp
inc
jo
test
mov
incb
add
xor
pop
out
lahf
cs
mov
outsl
cmc
decl
lods
rolb
jne
ret
aaa
enter
xor
call
movsl
or
push
cltd
lret
decl
jmp
les
scas
ds
sbbb
dec
int
cmp
sbbl
imul
sbb
sbb
inc
xchg
mov
or
arpl
push
sbb
outsb
mov
pushf
add
fwait
pop
notb
rcll
push
or
ret
jns
pushl
sub
push
iretw
jne
aaa
fwait
mov
push
pop
pop
mov
rorb
subl
add
pop
jmp
inc
sub
dec
fwait
popa
push
mov
cwtl
xchg
push
das
push
or
enter
lret
leave
xor
test
mov
mov
aaa
mov
dec
push
sbb
aad
lret
or
cmp
add
pop
dec
ljmp
aas
lcall
pop
dec
pop
push
lret
sub
rcrb
xor
mov
jns
add
sub
push
inc
hlt
out
mov
stc
pop
xor
mov
insl
addr16
lcall
imul
cmpsb
sbb
dec
lds
jmp
mov
pop
das
inc
mov
decl
ds
clc
pushl
clc
mov
xlat
xor
jge
or
lods
inc
jmp
lahf
or
lcall
inc
fimuls
jmp
cmpsl
mov
test
add
das
xchg
cmpsl
arpl
jge
clc
incl
insb
mov
out
xor
sahf
pop
test
and
hlt
flds
mov
jl
adc
ljmp
divl
inc
xchg
int3
lds
or
push
gs
pop
movsb
fdivl
sti
inc
loopne
and
pop
xor
xor
leave
sub
cmp
das
je
pushl
pop
fistpll
aas
jp
mov
arpl
lcall
sub
xor
fcmovnbe
cmp
mov
in
addb
pushl
inc
cmp
mov
xor
push
mov
push
push
push
pop
ljmp
incl
jecxz
push
pop
movsl
mov
jno
in
test
ja
xor
aad
push
clc
pop
icebp
hlt
rorb
fidivs
gs
call
xchg
inc
and
sbb
lahf
sub
in
call
mov
mov
push
xlat
hlt
idivl
push
push
nop
mov
sbb
outsb
sub
aam
fmul
mov
xor
mov
jl
add
jne
decl
lods
aad
lgs
loop
sbb
call
aaa
dec
cs
ljmp
jle
mov
push
aas
repnz
jl
sbb
aas
fwait
out
dec
imul
mov
inc
push
mov
cwtl
repnz
call
jmp
xlat
repz
sbb
dec
pop
dec
stos
ss
or
ror
movsl
clc
fwait
mov
add
sbb
lock
sbb
fildll
ljmp
test
insl
fisubs
pop
fucomip
lcall
data16
imul
xchg
mov
cmpsb
insb
push
ljmp
inc
lcall
stos
mov
pop
loop
adc
sbbl
pop
mov
cmp
jnp
sbb
aaa
xchg
daa
jp
push
test
dec
xor
push
lods
mov
and
dec
cmpb
jg
faddl
enter
mov
dec
out
adc
imul
shll
cmp
insb
in
jg
ljmp
mov
xchg
sbb
js
xchg
dec
jmp
mov
pop
cli
xor
fbld
lcall
xchg
mov
sbb
testb
ret
fistpll
push
arpl
mov
sub
cmp
mov
out
repnz
cld
aaa
jle
mov
mov
push
mov
mov
decl
and
add
add
cli
sub
jbe
jb
std
das
icebp
push
call
cmc
ret
insl
sbb
insl
cmpsl
mov
adc
outsl
hlt
pop
data16
and
in
push
ret
add
sar
out
cld
ret
mov
and
pushl
sub
push
mov
mov
cmp
aam
out
inc
enter
das
std
lcall
sbb
cmp
xchg
push
push
pop
rcrl
jo
add
mov
in
xchg
mov
daa
gs
push
loop
scas
movsb
mov
std
ljmp
cwtl
mov
xor
test
xor
jno
addr16
subl
add
dec
inc
push
jg
push
mov
cmp
xchg
push
jae
ret
or
test
jo
addr16
ss
mov
dec
std
decl
xor
shr
or
sarb
add
cmp
dec
roll
sahf
pop
and
daa
lret
sub
mov
sbb
das
adc
jmp
jmp
call
pop
cmp
shll
mov
pushl
inc
daa
inc
sub
inc
fisttpll
testl
enter
in
jle
lahf
ljmp
popf
call
ror
xchg
dec
fstpt
jb
push
dec
lods
mov
aaa
clc
incl
xchg
add
mov
sbb
mov
and
shlb
pop
xchg
jl
dec
mov
jg
jg
je
xor
dec
push
jns
lahf
cs
test
shlb
hlt
inc
lcall
sbb
jp
mov
cmpsb
mov
push
mov
dec
or
add
pop
sub
push
out
push
pushl
or
and
and
mov
in
xchg
mov
imul
mov
test
rclb
fwait
movl
mov
dec
and
std
iret
jb
pop
cmp
and
mov
std
jg
mull
loopne
ret
pop
jno
aad
xchg
lahf
sbb
add
das
fldl
mov
roll
mov
nop
ret
popf
mov
jg
dec
sbb
outsb
adc
lock
aaa
push
pop
sbb
in
push
pop
or
decl
cmp
outsl
ja
xor
outsb
lods
ret
std
mov
sub
push
mov
mov
call
hlt
cmpb
mov
dec
and
addl
and
sti
decl
dec
add
inc
pop
arpl
orb
mov
jl
push
bound
adc
jg
pop
mov
mov
test
push
inc
cltd
and
subb
sbb
movsb
push
cwtl
xchg
aaa
scas
xor
add
sbbl
rcll
je
mov
ljmp
cmp
push
pop
mov
loope
fsubl
aaa
cli
in
inc
lret
push
sbbl
call
sbb
or
mov
repnz
sub
mov
pop
mov
dec
pop
sti
cmp
dec
or
jmp
add
push
subl
stc
loopne
repz
outsl
cmc
mov
xchg
pop
ret
adc
pop
sub
mov
decl
xor
push
fadds
cmp
inc
lds
call
stos
pop
xor
jbe
sub
setno
pop
test
test
mov
mov
push
sub
push
rorl
jb
mov
jnp
mov
int3
pusha
and
or
stc
inc
ror
mov
ss
pop
jnp
test
rcll
and
in
incl
fcoml
xor
fsubrs
pop
cmpb
sub
aas
pop
adc
call
push
xor
sub
mov
add
loope
xor
mov
add
xorl
pop
cli
xor
push
mov
loop
or
jg
jnp
cmp
sbbb
mov
jmp
ja
inc
clc
les
xchg
sub
sbb
mov
xchg
lods
outsl
push
dec
cmp
or
test
push
int
pusha
inc
test
dec
sub
adc
adc
lahf
pop
incl
mov
jns
cmp
jecxz
inc
test
jg
les
fisubrs
mov
rclb
stc
popa
repz
popa
sub
movsl
mov
xor
clc
mov
mov
mov
int
adcb
pop
in
pop
test
mov
insb
mov
rcll
out
insl
ljmp
jne
adc
aas
iret
clc
aam
lea
test
je
add
inc
and
and
cltd
aaa
pop
ds
sahf
mov
jne
inc
sbb
cmp
xor
sbb
push
aaa
lret
push
shrl
int
cmp
sti
fnstsw
mov
jae
leave
movsb
bnd
sahf
xchg
inc
add
and
push
inc
test
les
and
lahf
sahf
adc
pusha
pop
dec
loopne,pt
pop
call
xchg
sbb
mov
add
roll
hlt
decl
ljmp
gs
leave
mov
or
shlb
mov
subl
fiadds
jg
loope
imul
mov
movsb
lock
sbb
jge
adc
mov
xorl
outsl
adc
sub
jl
cmpsl
mov
aaa
cltd
nop
mov
incl
push
cmp
or
lock
xchg
cmpxchg
jecxz
lcall
pop
cmpsw
dec
in
stos
mov
lods
jl
jbe
add
mull
mulb
clc
xchg
jne
sub
jl
inc
mov
rcll
test
and
adc
jmp
xor
push
fdivp
or
movsb
stc
xor
fs
clc
mov
add
sub
push
std
adc
out
pop
push
lock
pop
incl
jmp
cmp
xchg
adc
rcll
mov
ljmp
push
stc
mov
pop
icebp
push
inc
xor
inc
xchg
les
push
jbe
lcall
xchg
sbb
inc
adc
imul
lret
lret
add
pop
add
test
in
arpl
add
mov
pushl
jecxz
ret
pop
or
in
cmp
std
test
mov
add
fidivrl
pop
shlb
and
lret
mov
ds
mov
lcall
adc
arpl
lret
std
adc
icebp
jb
pop
bound
lahf
xchg
mov
inc
leave
lahf
loop
sbb
sbb
aam
dec
adc
or
xchg
push
in
loope
call
xor
iret
xor
cli
push
daa
adc
or
and
popf
inc
out
jb
cli
adc
or
shll
mov
mov
mov
pop
mov
clc
sti
push
call
stos
pop
mov
push
mov
push
jns
ds
aad
dec
adc
scas
aad
xor
cli
dec
outsl
jle
addr16
mov
pop
movl
jg
xchg
outsb
movb
jmp
cmp
push
fistpll
arpl
int
mov
leave
mov
jo
cli
aad
pushf
imul
aaa
inc
xchg
mov
jno
call
xchg
iret
adc
repz
dec
xchg
jne
fimull
ret
lcall
int
mov
push
add
ret
add
inc
jg
decl
das
out
out
push
shrl
outsl
sbb
mov
repz
inc
jge
xchg
jmp
xchg
fsub
mov
aad
fistpl
mov
aas
xlat
rorb
repnz
out
pushl
cli
incl
push
sub
test
jp
dec
bound
ss
mov
push
test
adc
inc
mov
add
out
popf
add
jmp
inc
and
adc
outsb
cmp
lea
jmp
jne
mov
inc
jmp
mov
arpl
or
ficoms
dec
cltd
cltd
mov
lcall
aaa
mov
jmp
ret
dec
add
or
xchg
clc
pop
lods
and
xor
dec
cmp
sbb
adc
outsl
lock
sub
dec
add
xchg
arpl
push
mov
jmp
jns
icebp
nop
push
add
and
subl
sub
xor
adc
pop
dec
jge
push
test
ljmp
mov
ljmp
ret
cmc
outsb
xlat
mov
push
cli
out
aas
mov
ret
ss
xchg
cli
stos
push
mov
inc
insl
add
jae
pop
xchg
outsb
loopne
call
lods
loope
pushf
dec
jmp
sub
and
out
adc
insb
sbb
cmp
sbb
ljmp
mov
out
cmc
mov
out
push
les
movl
sub
sub
pushf
add
lcall
mov
pop
xchg
sti
cmp
pop
dec
cmp
add
in
dec
sub
sbb
jg
outsb
lock
ljmp
aam
imul
js
jp
aam
dec
rep
add
xor
adc
out
shlb
xlat
rorb
dec
loopne
insb
sub
cmp
and
jnp
push
jb
lcall
outsb
cmp
or
push
sub
cld
push
mov
ffreep
add
push
jo
mov
push
std
pop
mov
mov
lds
pop
cli
jp
jl
and
es
fbld
test
or
std
mov
xor
popa
lahf
fiadds
mov
jg
dec
ret
aas
mov
dec
mov
aam
or
loopne
into
fistl
fldl
add
lcall
in
jbe
xchg
roll
or
pusha
mov
mov
pushf
sub
repz
adc
mov
pop
lea
sbb
inc
mov
cltd
imulb
add
or
ljmp
subb
int3
mov
xor
cmc
inc
cmp
fidivrs
push
imul
nop
xchg
pop
jmp
adc
inc
cmove
xor
es
out
adc
std
lcall
or
push
sarl
xorl
jmp
dec
push
sbb
xchg
cwtl
das
mov
sub
or
pop
dec
jmp
inc
es
dec
mov
pushf
or
sub
pop
ficomps
inc
pop
xchg
cwtl
inc
decb
test
add
sarl
mov
std
into
iret
jns
mov
lods
ja
dec
mov
add
into
inc
mov
sbb
xchg
lret
xor
in
call
rorl
mov
xor
stos
cli
out
popf
lds
sbb
pop
pop
jl
fucomip
mov
sbb
aas
enter
jnp
popa
pop
test
mov
test
jg
inc
daa
test
decl
loopne
xchg
xchg
stos
jb
xchg
testb
or
mov
dec
sbb
add
les
xchg
cmp
xchg
std
ljmp
fbld
lods
xor
cmp
inc
aas
sbb
mov
orps
in
les
jg
xor
adc
decl
add
lods
dec
imul
rorb
stc
test
inc
test
test
int
sub
dec
in
jp
scas
test
xor
hlt
push
lret
pop
das
xor
inc
cmpsb
outsl
sbb
aaa
mov
test
mov
aaa
test
out
push
int3
cmpsl
and
xor
add
incl
in
mov
push
lret
sub
push
xchg
adcb
or
or
jmp
call
test
das
xor
neg
leave
cmp
xlat
jbe
into
jmp
stos
lea
fs
inc
lock
testl
rorb
adc
and
fwait
mov
xchg
les
in
aad
mov
add
sub
ja
pop
mov
fsubrs
fnsave
lahf
aad
in
xchg
pop
test
mov
add
mov
jae
or
fwait
lds
pushl
mov
ficompl
scas
stc
dec
pop
add
pushl
aaa
sbb
lcall
jmp
lods
push
popf
outsb
xchg
leave
call
sbb
cmp
scas
sar
jg
sub
xchg
jnp
jbe
add
repz
loope,pt
or
lcall
stos
push
mov
gs
bound
pop
cmp
mov
mov
mov
in
hlt
sbb
lds
pop
mov
push
xchg
or
call
pop
mov
in
adc
xchg
xchg
incl
int
pop
fsincos
mov
sahf
mov
mov
mov
hlt
inc
jns
mov
incb
repnz
pushw
je,pt
push
ret
mov
push
push
cmp
das
and
rclb
adc
mov
jb
lahf
xor
inc
fbld
lcall
test
mov
loope
lock
ljmp
push
gs
mov
sbb
pop
jae
nop
mov
xchg
ja
cmp
mov
mov
cmp
xchg
fisttpll
or
pop
cmp
mov
or
test
mov
push
xor
int3
lret
mov
and
add
fwait
cwtl
dec
hlt
push
push
fwait
cmpsl
ljmp
test
dec
inc
lret
push
idivl
daa
in
movsl
enter
stos
data16
hlt
xor
jge
jmp
mov
incl
inc
sub
cmp
mov
rcll
ds
lcall
jg
dec
cmpsl
js
inc
mov
stos
inc
push
pop
sti
or
mov
loopne
sbbb
or
sarb
push
mov
add
das
movsb
pop
into
mov
pop
adc
sahf
sahf
sbb
mov
daa
jo
mov
jg
sti
mov
inc
or
xchg
fistps
pop
call
mov
sbb
aad
mov
test
cmp
dec
sbb
adc
call
mov
xor
jp
push
cmpb
pop
ds
adc
out
push
outsl
push
enter
mov
mov
invd
icebp
cmc
cmp
test
ljmp
and
add
pusha
ret
mov
add
push
or
out
ja
jmp
cmp
dec
lods
fmull
shll
addr16
xlat
xlat
rorl
shr
ja
movsl
lcall
mov
insl
loope
or
push
out
xor
mov
mov
lea
and
mov
or
xor
std
jg
nop
test
mov
aaa
xor
lcall
push
sbb
mov
repz
pop
rcrl
test
mull
lcall
call
sbbl
lods
xchg
int3
sub
std
ja
cld
in
jg
jne
mov
lahf
pop
xchg
scas
push
decb
and
pusha
jbe
xor
jg
lcall
dec
fsubrl
adc
or
enter
xchg
test
lcall
jmp
mov
or
mov
or
lret
dec
rcrl
enter
mov
pop
call
jbe
test
pop
push
lock
jne
jle
ljmp
stos
inc
push
and
mov
test
mov
push
jbe
sub
xor
incl
inc
and
and
stc
fs
test
pushl
pop
xor
xchg
pop
js
dec
fadds
push
mov
adc
pushf
js
mov
incl
rcr
adc
inc
push
fildll
jmp
ss
clc
js
xchg
push
push
jecxz
or
orl
stos
nop
push
scas
mov
clc
pushf
jmp
aad
inc
adc
mov
popa
fimull
xor
aad
lret
jmp
test
das
inc
jae
inc
jo
mov
repnz
inc
jnp
jl
mov
mov
mov
mov
test
and
add
dec
adc
lock
mov
inc
xor
lds
enter
imulb
js
cmpsl
xor
push
cmp
cmp
frstor
pop
and
inc
shr
movsl
outsl
in
loopne
xchg
sbb
dec
call
mov
xchg
cs
repnz
and
dec
jno
in
dec
call
jecxz
cwtl
sbb
jae
pop
add
or
adc
jne
enter
sub
pop
testb
pop
xchg
adc
xorl
into
sub
jmp
xor
or
loope
dec
test
sub
gs
clc
incl
call
stos
mov
movsl
inc
mov
dec
or
in
fucomip
pop
push
movsb
cld
imul
mul
daa
add
dec
sbb
incl
pop
adc
test
imul
cwtl
jb
mov
inc
cmp
jmp
int3
sahf
jb
cmpsb
popf
movsl
jae
rcrl
add
add
ss
mov
enter
jp
cmp
pop
ljmp
jecxz
push
cmp
cld
pushl
lds
insb
call
testl
rcrl
pop
lret
lcall
jl
pusha
mov
pop
in
xchg
cmp
mov
lret
pushl
fisubrl
xchg
mov
push
test
arpl
mov
lret
jnp
dec
fistps
pop
mov
sarb
inc
pusha
mov
dec
shl
fisubl
cmp
and
sbb
adc
push
pop
mov
or
push
mov
pop
aaa
add
lcall
in
lahf
cmp
mov
pusha
cmp
mov
lds
xor
jae
jecxz
add
mov
sub
rcll
sub
cmp
xchg
mov
fildll
pushl
push
pop
sbbb
pop
sub
xchg
cltd
jmp
fists
lods
mov
sahf
je
push
cmp
mov
pop
mov
sar
inc
cmpsb
mov
sub
and
ss
adc
xchg
in
imul
out
mov
mov
dec
push
stos
ss
sub
mov
cmp
and
daa
fwait
push
out
mov
jmp
xchg
std
mov
push
cld
sub
xchg
jmp
mov
clc
pop
push
xor
cmpsl
jg
fbld
pop
mov
lret
fldt
push
mov
shlb
xchg
sahf
enter
add
mov
cli
pop
clc
arpl
iret
cld
jb
jge
ret
call
ljmp
inc
xor
mov
push
in
and
lcall
cmpsb
movlps
push
add
inc
sbb
add
idivl
jg
lahf
adc
inc
xchg
dec
xor
sub
add
aam
in
mov
pushl
iret
and
ljmp
std
inc
adc
or
lds
ljmp
mov
or
stc
pop
sbb
push
nop
int
push
ficoms
repz
movsl
mov
push
or
add
mov
jmp
pushf
mov
or
xor
imulb
movsl
push
inc
cmp
fldcw
cli
insb
pop
cmp
sub
ljmp
fbld
jg
jg
sarl
int3
in
add
mov
jmp
pop
mov
movsl
lret
and
push
mov
dec
and
lret
mov
ljmp
incl
fdivrl
insb
repnz
in
push
out
add
inc
mov
dec
xor
inc
fistl
dec
lods
dec
sub
adc
mov
test
jno
lret
loopne
push
shll
loope
mov
xor
decl
cld
pop
negb
xor
cmpb
add
cmpsl
mov
mulb
call
ror
xchg
aad
shll
testb
mov
lcall
inc
dec
add
xchg
mov
jae
sbbl
mov
dec
mov
jg
dec
xchg
nop
cld
loope
aas
aaa
and
in
cmpsl
and
test
cmp
lcall
pop
jbe
outsb
hlt
hlt
and
xchg
sbb
cmc
fildl
call
decl
xchg
scas
push
dec
xchg
pop
pop
dec
inc
sbb
or
ljmp
and
dec
adc
mov
mov
xchg
cmc
clc
xchg
rclb
mov
fdivrp
or
test
jmp
in
jl
adc
test
push
enter
ja
ljmp
mov
cld
popa
sub
dec
ja
xchg
mov
pop
dec
pop
ja
adc
jo
decl
out
test
dec
mov
je
adc
call
out
inc
mov
gs
xor
bound
adc
or
imul
out
daa
aaa
adc
lret
sbb
in
jae
cmp
pushf
popa
aad
jno
xor
lret
xchg
mov
jmp
jne
stos
imul
mov
iret
test
cmp
jle
imul
js
sub
fwait
push
shrb
lock
fldl
push
test
int
mov
jnp
adcl
decl
adc
leave
add
insb
mov
jns
pop
mov
cmpsb
xchg
ljmp
in
adc
sar
jbe
push
lcall
sbb
test
sbb
lds
les
iret
arpl
cmp
jo
pop
and
inc
xchg
xor
xlat
stos
lea
and
ljmp
cmc
sbb
fstps
mov
mov
or
cli
pushl
mov
push
and
bound
sub
and
jg
inc
ss
and
subl
mov
stos
testb
insb
sti
daa
mov
push
inc
push
sub
mov
popa
cmp
mov
outsl
aad
add
out
movsl
fisubs
hlt
lahf
pop
mov
scas
inc
xor
sahf
inc
sub
jmp
clc
and
mov
fs
cmp
push
lcall
sub
fdivrs
hlt
scas
mov
scas
sub
lea
ficoms
xor
dec
lods
pop
std
inc
lods
rorl
cmc
push
aam
push
mov
scas
fsubp
push
fs
outsl
add
sar
mov
loop
pop
stos
movsb
jo,pn
jae
sbb
xchg
cld
fiadds
gs
das
inc
scas
push
and
mov
sbb
ljmp
loop
popa
xor
loop
mov
lock
hlt
decl
sbb
xor
clc
aad
ja
mov
stos
cmc
mov
mov
jb
loope
xchg
out
add
inc
repnz
lahf
mov
into
cmpb
inc
mov
cmp
push
cld
fucomp
into
cmc
xor
inc
mov
iret
adc
ret
das
lock
stos
dec
sbb
in
and
call
sub
mov
fisttpll
jae
stos
stos
dec
and
pop
cli
test
mov
decl
jns
insl
or
adc
lods
cmc
aad
popf
adc
in
insb
jle
mov
pusha
fcoms
mov
adc
pavgb
push
pushf
inc
jo
cmpsl
test
test
in
pop
mov
pop
xor
bound
hlt
pushl
mov
test
and
sub
out
leave
mov
jg
xchg
mov
xor
aam
aas
mov
jp
or
xchg
add
mull
jno
pop
xchg
insb
xor
das
xchg
mov
fucom
mov
push
dec
lock
inc
aad
cli
or
mov
push
pop
ljmp
and
dec
or
pop
pushl
sub
push
xchg
mov
fucomp
faddp
movsl
sti
js
cmc
call
mov
mov
xor
mov
or
insl
in
sar
mov
in
jmp
dec
sub
jno
sbb
mov
ljmp
es
push
lock
push
push
das
pop
mov
incl
xor
and
lcall
jbe
fs
in
push
incl
push
lcall
cmpsl
sbb
mov
loop
gs
test
xchg
xor
or
lret
loop
pop
cld
jg
xchg
dec
xchg
iret
cmp
sub
xor
push
xchg
xchg
dec
jno
mov
in
and
adc
incl
cli
jmp
lock
add
xchg
dec
pop
cltd
call
or
sti
aas
mov
insl
jmp
icebp
sub
pop
adc
mov
mov
pop
daa
das
pop
or
fpatan
xor
sub
inc
lret
insb
mov
mov
pushl
add
add
add
mov
mov
ret
xchg
aaa
jb
lcall
pop
lods
xor
xchg
mov
sti
aam
sti
xchg
sbb
std
or
incl
dec
push
xor
and
outsl
mov
int
xor
adc
mov
incl
std
push
cmp
iret
frstor
cmpsl
cmp
mov
mov
insb
add
or
fists
shll
xchg
mov
lcall
sbb
push
xor
das
mov
inc
gs
adcl
stos
xchg
scas
daa
scas
jb
cld
loopne
fimull
lds
dec
xchg
adc
add
test
or
ja
dec
fisubs
jg
movb
push
lret
aas
push
inc
add
xor
adc
lcall
jno
fwait
push
repz
gs
lods
outsb
rcl
in
arpl
xlat
pop
in
inc
add
pushl
out
mov
imul
pop
or
iret
push
add
mov
cmpl
aaa
andl
mov
adc
lods
stc
dec
push
mov
fmul
cmc
add
cmp
daa
push
mov
jg,pn
int
dec
in
and
aam
jnp
mov
adc
ljmp
insl
daa
iret
mov
shl
push
loopne
out
pop
cs
xor
leave
call
loope
popa
sahf
lock
pop
enter
dec
incl
nop
pushf
vminps
or
incl
lret
stos
shll
mov
jge
outsl
std
sbb
xchg
sub
xchg
pop
arpl
je
cs
jb
ljmp
inc
aaa
or
or
js
insl
fs
int
sbb
stc
fwait
dec
fst
dec
mov
jno
and
sub
dec
mov
jmp
xlat
jmp
ret
or
and
xchg
push
andb
lcall
std
ljmp
scas
fwait
pop
xor
add
add
sbb
call
call
in
lea
ds
int
call
lret
ljmp
xchg
inc
dec
xchg
repnz
jg
jmp
fs
sub
bound
mov
movsl
imul
ficomps
sahf
and
dec
dec
ljmp
lcall
call
jecxz
dec
cmp
rclb
pushl
cmp
adc
rcll
stos
jecxz
pop
in
ja
inc
loop
das
std
mov
jecxz
es
inc
imul
xor
iret
lods
or
mov
insl
inc
decl
xchg
pop
out
add
cmpsl
aaa
lds
mov
and
movsb
pop
lcall
xchg
addb
test
aas
xlat
jbe
mov
divb
sti
jecxz
ljmp
jg
mov
mov
imul
push
je
xlat
inc
inc
aad
and
mov
mov
out
and
pop
fs
lods
xor
mov
mov
pop
imul
mov
clc
sahf
fistl
aad
insb
sbb
imul
push
orb
xchg
scas
or
jg
cmp
fcmovu
cmpsb
pop
scas
ja
cwtl
stos
xor
xchg
shll
idivl
jle
inc
and
pop
xorb
pop
jbe
int
bound
mov
clc
imul
fistpll
in
push
push
xchg
rol
jmp
call
das
jecxz
push
mov
add
pop
cmp
sub
mov
in
es
leave
rcll
shll
jg
int3
clc
xchg
jbe
iret
dec
mov
xor
das
adc
ja
push
insl
inc
jmp
jo
dec
outsl
mov
jge
cmp
and
push
cmpsl
ljmp
lcall
mov
test
fsubs
inc
clc
cmp
add
aam
ja
push
in
lock
fildl
jg
cwtl
paddw
mov
shrb
sti
cld
push
xchg
mov
xor
lock
iret
cmp
jo
xor
rolb
fwait
int
lret
lret
clc
lcall
ret
inc
aas
mov
cmp
cmp
filds
ficomps
sub
pop
mov
outsb
std
icebp
cld
das
icebp
mov
insb
leave
jbe
test
jp
and
ja
push
loopne
dec
mov
aaa
xchg
pop
es
xchg
mov
pushl
dec
js
enter
or
adc
and
push
movsb
fs
decl
mov
mov
xor
adc
sarl
outsl
jo
jle
and
jg
dec
mov
aad
gs
mov
adcl
add
in
sub
ljmp
addr16
in
sub
cmp
mov
sub
fcmovu
mov
in
stos
mov
mov
fwait
inc
push
pop
push
pop
loopne
popf
pop
stc
jb
pop
push
dec
push
cmpsl
pop
ret
add
push
shll
test
mov
lods
dec
mov
cmpsb
dec
roll
and
cld
mov
or
adc
push
cmpsb
inc
push
stc
xchg
xor
ds
shll
mov
cmp
je
cs
jecxz
cltd
enter
aam
inc
jmp
adc
adc
xchg
cld
iret
cld
adc
add
or
pop
inc
lods
xor
iret
mov
sub
sub
lcall
inc
popl
jp
push
mov
mov
lcall
xchg
ret
mov
popa
lret
push
jg
gs
xchg
adc
mov
mov
pop
jg
fsubs
pop
js
leave
jl
negl
pusha
shrl
mov
cmp
push
mov
incl
enter
push
inc
mov
mov
gs
mov
lcall
fdivrp
or
out
mov
sbb
mov
das
cmc
call
rorb
aas
cmc
and
outsw
jno
sbb
imul
loope
mov
movsb
and
test
fisttpl
jg
jg
cmp
mov
gs
push
iret
adc
test
popa
cmp
popa
cmc
push
imul
and
lds
lea
std
add
dec
sbb
repz
sar
call
in
fbstp
test
and
ds
popf
and
test
loopne
loope
lock
inc
jg
jne
cmpl
xchg
adc
js
mov
and
pop
mov
fwait
ljmp
xchg
adc
or
rcrl
jne
jbe
sub
shll
mov
ljmp
outsl
mov
jg
sbb
adc
testb
jl
ja
jb
cmp
mov
call
setae
or
mov
into
sbbl
mov
cmpl
fstps
out
mov
lods
in
xor
add
icebp
mov
jmp
jne
push
mov
mov
pop
lahf
fsincos
loope
out
adc
mov
lods
cs
cmp
xchg
ss
lcall
hlt
dec
enter
cld
jg
jmp
pop
add
insb
sub
push
dec
pop
jg
lahf
fidivl
call
sti
mov
cmpsb
repnz
push
xlat
add
iret
loope
hlt
jmp
mov
cwtl
faddl
lea
sti
push
dec
adc
ljmp
push
imul
jae
jecxz
cmp
dec
sbb
movsl
mov
lods
pushl
cli
push
or
test
divb
adc
add
cmp
ljmp
sbb
ljmp
xchg
popa
lahf
jmp
mov
in
cs
fstpl
stos
ljmp
and
lret
stos
jnp
add
in
mov
sarl
les
sub
rolb
and
sti
push
pop
mov
sub
mov
ljmp
xchg
hlt
es
icebp
sub
jnp
jnp
lahf
push
lods
cmp
imul
mov
shlb
mov
dec
mov
loope
lret
mov
repz
mov
pushl
inc
hlt
aas
adc
rolb
ret
enter
js
fucomip
fiaddl
xchg
mov
adcl
inc
out
cmpsl
mov
sub
inc
xor
jecxz
inc
cmp
cmc
cmpsb
cmpsl
mov
xchg
pushl
mov
sbb
pop
cmc
cwtl
xlat
stos
dec
out
pushf
shlb
mov
call
fisttps
add
das
push
pusha
pop
sub
inc
outsl
sub
sbb
sbb
cmpsl
push
aas
outsb
popf
les
cmp
mov
aad
flds
lcall
enter
mov
xchg
pushf
pop
roll
xor
lock
lcall
in
inc
lds
sbb
sti
add
iret
adc
xchg
sti
pop
and
cmp
in
jmp
gs
adc
inc
adc
rol
nop
imul
jle
mov
sbb
loop
lods
pop
sbbb
aam
pop
jo
pop
fisubrs
jbe
cli
fldl
sub
jg
ret
jnp
js
daa
js
cmp
sbb
or
in
add
inc
fdivrp
lcall
bound
movsl
or
sub
inc
push
push
je
mov
sbb
mov
std
cmp
sub
push
add
fistpll
jmp
iret
cmp
jp
xor
pop
pop
ja
sahf
ret
je
loope
sbb
loopne
call
nop
xchg
push
addr16
push
inc
push
aaa
enter
jmp
add
add
and
adc
js
je
lcall
add
and
stos
jle
inc
pop
jae
inc
cmpsl
aas
inc
or
or
adc
out
das
cmc
pushl
add
repz
xor
imul
out
cmc
decl
out
sbb
inc
hlt
sbb
jp
mov
decl
jmp
iret
push
cmp
mov
out
xchg
fisttps
cltd
into
pop
imull
fs
incl
cmp
dec
les
dec
lcall
mov
inc
shll
sahf
cwtl
xchg
mov
inc
fucomp
in
stc
stos
aad
cli
or
mov
sub
outsl
push
decl
mov
pushw
push
or
ret
pop
dec
sbb
call
std
ret
cmp
or
sub
ljmp
pop
xchg
jecxz
rcr
pop
test
les
jo
call
mov
mov
lret
add
inc
pop
sbb
leave
movsl
pushl
push
shlb
les
add
add
add
mov
mov
pop
ffree
mov
subb
fstl
lea
out
ljmp
fadds
push
cltd
add
xchg
inc
push
jp
pop
adc
lcall
sti
addr16
mov
popf
cmp
mov
sub
mov
addr16
sar
or
jp
inc
lock
xchg
aaa
mov
lock
mov
adc
jg
mov
rcr
les
mov
mov
and
push
mov
sbb
imul
pop
ret
lods
cmp
in
idivl
decl
std
aad
test
sbb
jecxz
and
mov
and
out
and
mov
aam
dec
or
les
in
sub
xchg
adc
fcomps
call
and
or
fists
jge
enter
fmuls
shrl
cmc
call
cs
mov
aas
pop
mov
pushl
loop
les
dec
mov
xor
add
test
add
xchg
sbb
xchg
clc
jmp
dec
jle
orl
or
cmp
adc
gs
lock
cli
inc
adc
outsl
adc
outsl
std
jmp
sub
out
mov
and
mov
aaa
jmp
mov
outsb
adc
and
cmp
dec
push
pop
inc
cmp
fstpl
lcall
jge
addr16
in
mov
sbb
mov
pop
js
cmp
test
incl
fisubrs
pusha
mov
and
outsb
loop
mov
popf
inc
mov
icebp
lock
sti
jns
push
and
popf
iret
sub
clc
and
pop
clc
call
lret
inc
dec
pop
call
jl
xor
pop
cmp
or
xchg
push
and
inc
pop
push
and
sub
aaa
in
fwait
scas
inc
dec
dec
fiadds
sbb
ljmp
in
lds
pop
popa
inc
push
xor
jno
jb
iret
into
ret
xchg
add
cli
in
ficompl
jmp
jno
idivl
jmp
lds
dec
mov
int3
scas
lcall
iret
mov
jl
mov
jecxz
test
pop
cld
icebp
mov
fists
cmp
cltd
dec
jecxz
mov
dec
fnstsw
mov
xor
inc
adc
test
pop
dec
pusha
add
das
cld
sub
cmpb
jns
adc
mull
xor
mov
rorb
add
and
fists
jp
cmc
mov
fdivl
sub
ja
into
lock
inc
push
jecxz
push
pushl
mov
cmpsl
incb
push
sbb
pop
scas
pop
cmp
add
sti
jp
outsl
push
loopne
loop
mov
aad
incl
jge
fstpl
rclb
sbb
and
jge
mov
lcall
popa
fsubrl
cltd
inc
inc
scas
lret
andb
arpl
sbbb
fcoml
push
add
test
stc
das
sbb
aaa
dec
sbb
repnz
jge
cmp
mov
xchg
cmp
hlt
jnp
loope
scas
xor
andl
push
lds
add
outsl
mov
fsubp
loop
xchg
jle
or
shlb
inc
inc
movsl
clc
je
repz
nop
ret
mov
rclb
decl
xchg
cmp
jp
rorl
icebp
xor
repnz
or
push
pop
pop
jmp
inc
cs
mov
incl
jge
popa
test
in
mov
jmp
aad
lods
pop
fidivl
inc
jg
and
hlt
cmpsb
sbbb
sub
xor
scas
loopne
addr16
mov
mov
pushl
movsl
test
mov
cmpsl
repz
fstps
mov
mov
add
mov
sbb
mov
ficomps
xchg
xor
decl
jno
filds
and
aas
mov
nop
popa
lcall
hlt
pop
lods
mov
repz
clc
dec
or
jge
shll
in
stc
stos
dec
pushf
es
clc
dec
test
repnz
cwtl
xchg
icebp
hlt
dec
insl
test
adc
sbb
rcr
call
insl
imul
xchg
movsb
jp
stos
and
dec
out
add
adc
in
mov
mov
lret
xor
cs
loopne
das
lock
pop
push
or
jle
and
stc
cld
lcall
or
jle
mov
pop
jmp
mov
jmp
out
adc
popf
or
decl
jo
scas
sti
and
sbb
xchg
loopne
dec
xor
jg
fnstcw
in
xor
lods
test
mov
insl
add
fnstcw
or
les
mov
cmp
lds
mov
ret
adc
push
cmp
in
lret
mov
incl
roll
imul
and
je
insb
mov
imul
mov
xor
or
xchg
or
inc
cmpsl
int3
in
push
arpl
sbb
pop
pop
cmp
pop
cld
test
inc
sub
jns
jo
pushl
push
xor
cmc
jecxz
mov
dec
icebp
arpl
flds
insl
sub
inc
decl
bound
rcrl
and
sbb
popa
loope
dec
jnp
push
pop
clc
jmp
jecxz
pop
sub
mov
call
pop
je
outsl
std
mov
int3
xchg
xchg
pop
call
push
cmpsl
jecxz
fs
cmpsb
sub
test
jmp
lahf
cmp
mov
mov
fwait
jns
cmp
test
dec
inc
rcrl
ljmp
pop
test
push
notb
icebp
ljmp
lret
lret
adc
cltd
xchg
mov
mov
scas
repz
sahf
ds
and
sbb
mov
add
xchg
ljmp
sub
daa
mov
or
int
lods
test
sbb
aaa
enter
pushl
clc
call
add
data16
cld
neg
mov
loop
pushl
cwtl
add
loopne
sbb
fwait
or
call
imul
and
cmpsb
addr16
cmp
loop
hlt
mov
sub
mov
xchg
mov
movsb
mov
lcall
jb
pushf
or
xchg
cltd
lahf
push
jae
negb
loopne
add
xchg
imul
sub
out
push
ja
push
mov
sub
jmp
addb
sbb
subl
mov
lahf
cmp
movsb
xchg
stc
pop
cmp
hlt
incl
aaa
push
cmpsb
sub
push
xchg
add
mov
push
cmp
sti
ljmp
mov
insl
jbe
fsubr
dec
in
mov
es
pop
inc
push
pushl
sub
jns
pop
push
adc
decl
sub
mov
test
inc
fcomps
fmull
sahf
std
sub
jl
pop
ja
push
jne
inc
push
pop
push
sub
bnd
xchg
sahf
mov
inc
mov
dec
test
jg
insl
inc
push
cs
fucomip
test
push
ds
clc
test
pop
lcall
cmpsl
cmp
push
outsb
imul
jo
int3
mov
call
mov
xchg
scas
push
add
jp
xor
push
cli
icebp
pop
push
int3
jle
aaa
lods
xlat
arpl
sti
jg
loope
mov
jmp
jo
add
or
pop
sbb
jp
mov
scas
sub
push
idivl
and
inc
into
das
ret
inc
fiaddl
mov
repnz
dec
out
sarw
add
or
dec
mov
stos
push
pop
pop
lcall
cld
pushl
daa
add
in
adc
sbb
cmpsl
das
xor
pop
sar
jmp
xor
ret
jg
pop
shrb
mov
ja
mov
cmp
outsb
cmp
data16
xchg
pop
shrl
arpl
test
call
pop
sub
adc
lcall
scas
inc
mov
sub
ljmp
push
jmp
jecxz
jmp
pop
mov
dec
data16
push
or
mov
in
faddl
mov
repnz
cmpl
xchg
jle
or
lcall
mov
lods
lea
lcall
ret
mov
push
sub
xor
pop
sub
leave
bound
scas
gs
mov
les
xchg
mov
push
or
les
cld
stos
mov
and
add
dec
cld
call
push
leave
jmp
mov
push
repz
imul
sub
sub
or
xchg
adc
mov
movsb
mov
jmp
or
lods
iret
test
jl
hlt
hlt
gs
and
mov
xchg
loopne
pop
lcall
shll
and
cltd
and
push
mov
out
xchg
jns
inc
mov
cmpb
pop
cli
sub
mov
adc
mov
cld
mov
pop
icebp
inc
fsubrs
jmp
add
fcoms
aam
jge
mov
cld
sub
pop
sub
cltd
call
mov
addr16
dec
lea
cvtdq2ps
decl
dec
out
call
int3
in
mov
bound
imul
std
decl
out
cvttps2pi
stos
fisubs
push
xor
outsb
and
jge
xchg
cmp
jg
call
jb
xchg
sub
lret
inc
or
mov
lods
push
mov
pop
repz
dec
clc
mov
mov
stos
adc
jno
jmp
mov
fcoms
sbb
push
shrb
cmp
shr
movl
fistps
scas
inc
push
inc
inc
idiv
mov
jb
cmc
xchg
mov
cmp
xchg
adc
mov
ljmp
cli
jmp
dec
lock
add
ljmp
push
cmp
or
imul
adc
adc
repz
iret
xchg
sub
fistpll
mov
rcrb
xchg
or
repz
jg
incl
loopne
pop
or
sub
cmp
insl
addl
mov
mov
out
and
pop
jle
loope
adc
fildl
icebp
pop
icebp
aad
pop
idiv
sbb
sti
cmpsl
push
imul
cltd
cmp
add
and
xor
or
incl
lods
outsl
pop
mov
jmp
add
popa
sbb
mov
sbb
incl
inc
fdivrp
xchg
jg
dec
xchg
loopne
mov
jmp
or
dec
arpl
sar
dec
decb
les
mov
pop
rcll
fwait
gs
inc
inc
xchg
push
cld
mov
mov
into
stos
dec
push
or
in
sub
pop
packssdw
cmc
lcall
xor
aas
jb
ja
negb
mov
mov
lcall
leave
push
lahf
inc
rcrl
aas
mov
popa
add
call
pushf
xchg
add
dec
mov
scas
xor
sbb
xor
std
decl
std
adc
scas
xor
sub
mov
inc
enter
add
mov
leave
add
xchg
arpl
lock
sti
shlb
shll
mov
push
incl
push
mov
inc
pop
shlb
pop
ds
jne
or
jne
push
mov
lea
xchg
mov
dec
sbb
mov
sub
lahf
gs
pop
xor
std
add
rclb
decl
pushf
sub
insb
insl
inc
mov
insl
adc
pop
pop
pop
xchg
je
jmp
dec
jnp
fucomip
lahf
xor
sarb
jbe
fdivr
inc
adc
test
jmp
cmpsl
call
sbbb
ret
push
mov
scas
lods
inc
bswap
fwait
jo
sarl
test
push
sbb
jmp
aas
inc
enter
lret
clc
cmpsl
stos
jns
lahf
mov
mov
cltd
push
dec
push
scas
xor
cli
sub
push
in
pop
jg
mov
mov
faddl
sbb
xor
or
or
lods
push
lret
mov
movsl
cmp
cld
xor
loopne
incl
add
xchg
xor
push
jmp
leave
xchg
aam
and
insb
lahf
adc
dec
inc
ljmp
pop
dec
pushl
pusha
inc
cltd
cmp
aaa
test
inc
test
add
rolb
mov
push
in
sbb
jmp
inc
imul
hlt
testl
pushl
sbbb
sbb
fcomip
mov
lock
incl
mov
and
sub
pop
pop
jbe
mov
cwtl
adc
das
pop
xchg
cmp
notl
mov
xor
or
xchg
adc
decl
pop
in
jecxz
fidivrs
cmc
mulb
xchg
out
sub
lods
xchg
jnp
jp
loopne
rcrl
sar
fdivs
pop
cli
inc
lock
sub
mov
push
xor
mov
ret
aad
test
lret
loop
ljmp
icebp
stc
test
sahf
add
mov
fisttpll
or
ja
mov
fldt
sub
mov
cwtl
into
ljmp
xor
les
cli
pushl
popa
sub
xchg
mov
mov
mov
add
sbb
sbb
pushl
xchg
jecxz
das
push
scas
pop
popf
jae
imul
in
inc
adc
orb
stc
mov
push
jmp
and
pushl
shrl
fstl
int3
repnz
jp
mov
mov
icebp
xor
jg
stc
sbb
mov
inc
ja
jmp
jge
pop
out
dec
scas
je
cltd
loop
decl
cmpsl
lds
inc
push
lret
lcall
insl
icebp
rorb
movsl
sbb
pusha
sti
mov
push
rolb
int
add
dec
pop
mov
and
movsl
ss
pop
ljmp
fdivl
fidivl
fdivl
mov
push
cwtl
fimull
std
decl
dec
mov
cs
adc
dec
insl
mov
push
pop
das
out
stc
xor
aam
pop
mov
jmp
test
cs
sti
loope
stc
daa
add
loope
lods
rorb
jae
adc
mov
cmp
and
jmp
mov
scas
jg
mov
ljmp
pop
call
jmp
sti
xchg
sbb
out
mov
or
inc
les
ja
and
incl
data16
push
mov
sbb
jbe
adc
or
ss
fisubs
leave
imul
push
mov
mov
insl
pop
inc
cs
lcall
incl
mov
mov
mov
clc
cmpl
and
inc
mov
lcall
pminub
add
jae
scas
sbb
fdivp
std
inc
bound
ret
jbe
arpl
lea
cmp
xor
mov
pushl
sub
dec
sub
je
or
or
push
call
daa
sub
fwait
subl
insl
ds
fadds
jg
and
mov
xchg
mov
cltd
jno
sbb
xor
into
jg
jmp
sub
adc
mov
and
sub
loop
cli
jge
call
or
xchg
dec
out
pop
stos
jl
sbb
imul
daa
dec
push
stos
and
dec
sbb
imul
loop
pushf
ja
dec
sub
jne
addr16
lcall
ljmp
or
ds
jae
inc
and
dec
adc
or
cs
fcom
adc
sub
imulb
cmp
test
sub
jg
notl
out
mov
mov
lret
mov
outsl
std
outsl
adc
int
mov
xlat
int
test
or
hlt
ljmp
jl
imul
add
xchg
pop
cli
cli
mov
xor
cmpsl
sete
cwtl
cmpsb
cli
lcall
add
je
adc
outsl
cli
cmp
cmovns
aad
stc
jmp
js
jecxz
xchg
mov
mov
mov
out
xor
inc
push
inc
jae
pop
into
jge
sbb
fdivs
adc
cltd
pop
xor
sbb
incl
lret
inc
cs
jmp
pop
cmpsl
sub
pop
dec
jo
push
insl
sub
lahf
jecxz
lds
dec
mov
lea
iret
add
xor
cmp
leave
sub
jl
fidivrs
push
mov
enterw
jp
lahf
je
in
add
cltd
scas
fcompl
cmp
stc
inc
dec
nop
sti
lret
mov
sub
jmp
mov
rorb
or
aas
fisubl
ret
call
in
leave
xor
es
or
mov
inc
push
add
in
or
das
lock
inc
xor
rcrl
lods
and
divl
dec
sbbb
sub
cmpsl
push
orl
jmp
mov
in
jmp
or
or
stos
hlt
into
mov
xchg
push
push
daa
xchg
add
mov
jmp
and
mov
mov
jbe
dec
jp
stc
outsl
decl
sbb
push
test
cwtl
sub
mov
and
dec
ljmp
js
cmp
sarb
add
xchg
imul
mov
decl
adc
pushf
in
jg
ljmp
pop
xchg
push
test
inc
jmp
stos
ljmp
aas
decb
and
gs
lcall
mov
shrb
mov
xchg
sbb
sar
imulb
adc
xchg
pop
jg
jns
iret
and
cmpsl
cmpsl
daa
sarl
xchg
sub
test
jbe
sbb
dec
adc
cmp
xchg
jg
jecxz
neg
dec
jle
subl
pop
in
and
rolb
ret
cltd
jmp
frstor
ja
dec
outsb
cmpsb
xor
jo
enter
cmp
leave
push
fld
jge
mov
iret
fisubs
jmp
jmp
int3
das
jl
xor
cltd
or
jno
and
test
sub
and
xor
push
jb
shrl
mov
cld
pushl
xor
inc
add
aad
jb
jle
push
mov
sbb
mov
cmp
outsb
fisttps
push
mov
jmp
js
js
mov
cld
add
push
adc
sub
xchg
out
mov
xchg
mov
iret
testl
xchg
and
dec
test
xor
decl
es
inc
inc
or
shrl
jmp
mov
pop
sbb
adc
mov
outsl
adc
or
jns
js
pop
xchg
test
add
cmp
jg
or
pop
xor
ja
bound
fs
add
mov
inc
add
push
inc
xchg
fistpl
dec
jne
push
cmp
test
aad
or
cmpsb
clc
jmp
mov
dec
sub
sub
incl
mov
or
into
adc
loopne
dec
loopne
dec
sbb
adc
push
stos
push
mov
push
xor
shlb
or
mov
push
push
dec
fwait
push
jg
mov
decb
out
cmpsl
adc
popf
sub
mov
lret
jmp
mov
dec
push
stos
jno
sub
cmp
and
subb
cs
call
cli
push
or
xor
dec
ret
mov
inc
fisubrs
push
nop
push
add
and
pop
adc
xor
js
push
inc
fsts
push
jae
repz
cwtl
lock
into
pop
jnp
ja
shrb
sbb
stos
rcrb
outsl
sarb
movsl
or
pop
mov
jmp
int
stos
in
pusha
dec
cmp
xor
adc
mov
mov
fsubs
xor
jnp
addr16
pop
inc
repz
repnz
cmp
add
mov
or
loop
jnp
in
push
and
in
out
mov
push
xchg
rolb
popf
and
sbb
xchg
push
jnp
mov
mov
cld
jmp
in
fbstp
stos
frstor
shl
outsb
les
pop
cmp
xchg
cltd
push
decl
faddl
push
mov
inc
sub
and
iret
add
in
incl
inc
and
dec
sbb
fninit
cmpsb
mov
lea
xchg
mov
ja
dec
jnp
xchg
imul
adc
lock
les
mov
xor
sti
mov
out
fucomip
pushl
mov
data16
lock
pop
int3
stos
jb
dec
inc
push
dec
add
cmp
add
xchg
lea
icebp
pop
subl
out
jns
decl
mov
in
push
addps
inc
xchg
jle
sub
sbb
cmpsb
stos
sub
jg
pop
leave
fcmovb
mov
mov
push
rclb
test
aad
stos
push
cmp
repz
dec
jno
mov
and
bound
mov
enter
nop
adc
fs
sub
insb
fidivs
pop
pop
hlt
pop
mov
sub
addr16
push
loopne
jbe
sti
jg
cld
scas
mov
movb
mov
fmuls
sub
dec
das
icebp
lcall
andb
mov
pop
xor
lcall
jmp
ss
jl
imul
xchg
mov
adc
ljmp
cmp
out
jmp
sbb
out
cmc
fwait
push
stos
sbb
ljmp
stc
add
sub
fidivs
sbb
sbb
pushl
in
dec
sbb
mov
xor
sbb
mov
popa
mov
jp
insl
stos
pop
fcmovb
shrb
jmp
call
js
xchg
xchg
shl
cmpsb
stos
push
or
sub
stos
jne
mov
dec
adc
adcl
jnp
sbbb
pushl
fiaddl
xor
push
pop
dec
fdivr
pop
test
ds
insb
nop
add
dec
xchg
inc
sbb
mov
pop
add
gs
int3
js
negb
dec
insb
sub
movb
jge
ss
sub
shrb
js
push
call
dec
and
adc
mov
pushl
pop
popa
inc
and
sub
or
icebp
lcall
filds
cmp
ret
gs
fxch
pop
stos
push
xchg
lods
mov
jg
mov
cmp
inc
cmpsb
cltd
xchg
jb
scas
btr
sbb
sub
in
push
xor
xor
pop
cmpsl
adc
dec
xchg
sti
mov
out
mov
sbb
cltd
mov
xchg
sbb
pop
lea
scas
fadd
pop
and
add
inc
and
cmc
mov
ret
add
adc
decl
push
sub
in
mov
lds
and
out
pushl
insl
add
mov
subl
es
xor
sbb
inc
dec
dec
outsl
adc
or
jae
cli
mov
dec
xor
push
sbb
shr
jge
push
neg
idivb
dec
les
call
call
push
data16
scas
pop
pop
jo
xchg
sarl
xchg
das
add
pop
fs
stos
xchg
jp
not
fists
xchg
fistpl
outsb
jle
mov
mov
decl
mov
jne
pop
movsb
pop
mov
mov
cmpsl
pop
jmp
fs
mov
sahf
scas
mov
fwait
ret
flds
popf
stc
shrb
lods
sub
mov
incl
insb
sbbl
mov
daa
test
mov
xchg
leave
adc
add
cs
push
pop
jge
mov
and
and
push
nop
inc
pop
inc
push
aaa
jmp
jg
push
ds
lods
iret
outsl
inc
mov
je
jge
cmpsl
sbbb
sar
jg
jns
popa
insl
data16
sub
popa
inc
and
call
mov
addr16
inc
call
ljmp
xor
cmp
push
adc
orb
inc
mov
push
dec
push
add
mov
jne
sbb
imul
jno
pop
cmp
mov
cli
sbb
mov
jl
cld
cmpsb
movsb
hlt
or
movsb
aas
mov
add
dec
push
push
lods
mov
jo
adc
mov
xchg
lods
call
mov
test
scas
sbb
out
push
mov
sbb
incl
popf
test
xchg
mov
dec
fs
js
sbb
inc
pop
cmp
mov
aam
mov
and
pushl
das
or
mov
pop
add
ss
sub
ret
sub
mov
adc
rcrl
cmc
arpl
outsl
jg
xor
jg
jl
lcall
leave
rcrb
vaddps
imul
sar
xchg
mov
push
es
in
fistpl
ljmp
icebp
sbb
mov
push
xor
jb
ret
enter
and
mov
jp
push
mov
xchg
aam
add
mov
fbstp
call
cmp
clc
testl
xchg
dec
adc
jg
cli
add
shlb
or
mov
inc
mov
in
mov
push
mov
movsl
jmp
jl
mov
dec
inc
inc
sbb
std
and
test
pushl
xchg
mov
int
out
nop
mov
js
xchg
push
cld
jg
or
and
pop
or
stos
out
dec
push
rcr
or
cmp
xor
nop
or
jg
ljmp
shlb
out
add
mov
adc
xor
jg
inc
mul
push
push
fsubrp
mov
shrb
icebp
test
cmp
fisubrs
insl
add
cmp
scas
dec
stc
jg
nop
das
adc
ljmp
sti
adc
sub
loop
repnz
and
decl
push
in
ja
cmpsb
xor
cld
and
repz
mov
pop
sbb
outsb
notb
jmp
enter
inc
call
mov
fldl
test
sub
or
jo
add
jle
push
sbb
repnz
push
push
or
mov
cltd
sub
jg
idiv
enter
sbb
cmp
fbld
int
dec
mov
xor
call
xor
aas
icebp
adc
mov
aas
insl
js
loope
sub
test
js
jo
fwait
cwtl
jae
lcall
imul
cmc
xlat
int3
mov
rorl
pop
or
xor
sbb
incl
xor
inc
xchg
jmp
jb
jnp
pushf
push
cwtl
in
outsb
pushf
xchg
in
ret
mov
loope
rolb
js
lret
push
sbb
pushl
aad
ja
into
jnp
lods
loopne
mov
ljmp
outsl
orl
repz
out
les
mov
pusha
pushl
cmp
mov
out
push
std
inc
arpl
mov
ds
out
xlat
stos
jge
das
mov
pushl
inc
gs
sub
sahf
jg
mov
call
outsb
xchg
jbe
dec
sub
call
push
inc
mov
push
xchg
leave
push
test
adc
negb
decl
movsl
outsl
jp
add
pop
insl
or
add
subb
mov
push
ds
dec
pop
loopne
inc
jns
cmp
pop
mov
call
incl
in
push
into
gs
sbb
cld
scas
out
sti
icebp
shlb
fcoml
inc
lcall
incl
repz
stos
sbb
sbb
mov
cmpsl
es
sub
or
xchg
cmpsb
loope,pn
mov
pop
cmp
lcall
jnp
lret
dec
imul
push
mov
in
jle
divl
rcrl
in
jmp
or
push
test
call
mov
in
lods
push
xchg
and
imul
push
ret
pop
pop
mov
sub
jg
scas
mov
lock
mov
adc
loope
jg
shlb
mov
cmp
push
mov
add
pop
sahf
push
ret
push
inc
aad
fisubl
jmp
jmp
cmp
nop
int3
iret
adcl
nop
cmpsb
inc
std
test
ljmp
jne
cwtl
or
sub
sub
clc
int
cmp
hlt
jmp
push
icebp
sub
test
xchg
jns
sbb
outsl
test
or
loopne
cltd
xor
cli
call
sub
out
pop
das
pop
cmp
jl
pop
xchg
stc
and
ljmp
push
inc
cs
js
in
lcall
fwait
stos
lods
xchg
aaa
mov
or
push
nop
divb
aaa
push
and
xchg
pop
mov
decl
std
fstp
les
popa
add
das
sbbb
mov
filds
push
or
addb
sbb
in
xor
add
cli
ljmp
and
mov
stos
cmpsl
lahf
fbstp
insl
inc
andb
inc
sbb
filds
or
cmp
loopne
xchg
push
decl
mov
clc
addr16
xor
out
mov
mov
push
mov
aam
shrb
and
push
sbb
mov
outsl
popf
jnp
inc
mov
mov
fistps
dec
xchg
lcall
arpl
into
sub
clc
xchg
xchg
push
mov
jecxz
fcomps
clc
push
fs
xchg
decl
add
jle
insb
lods
dec
sbb
rol
into
les
mov
jge
pop
std
repz
out
mov
or
in
and
sbbb
or
ss
cmp
rcrl
je
pop
ret
divb
pop
aad
pop
test
loope
sub
xor
mov
hlt
out
or
cmc
xchg
loope
in
outsb
test
pop
imull
insl
cmp
xor
add
sbb
or
push
cmc
idivl
aam
pop
pop
dec
aam
incl
jmp
and
add
les
scas
pushf
push
jmp
pushf
pop
fdivr
pop
call
addl
dec
arpl
mov
popf
fistl
aas
loope
push
mov
mov
fwait
or
push
mov
in
push
xlat
gs
cmp
loop
xor
scas
jno
mov
movsl
es
pop
out
das
icebp
jmp
mov
dec
inc
in
loop
mov
outsb
pusha
xor
push
ljmp
mov
xchg
daa
mov
sbb
repnz
inc
out
sbb
or
pushf
movhps
mov
jmp
mov
lret
mov
cmpl
sti
xchg
push
int
xchg
mov
in
outsl
std
test
movsl
shll
iret
adc
add
jg
sub
push
imul
adc
cmpsl
push
sbb
jg
sub
cli
stc
dec
jp
into
fsts
int
add
xor
movsl
xchg
inc
pop
test
les
pushf
jno
pusha
pop
sbb
test
ljmp
outsl
lcall
and
enter
adc
and
incl
xchg
fnsave
icebp
mov
cmpsb
lods
cmp
cmc
dec
jg
mov
sarl
mov
sbb
add
sub
loope
jns
jle
fs
mov
sbb
mov
pushl
or
imul
stc
loope
out
rorl
es
arpl
mov
sti
lcall
mov
pop
sbb
inc
mov
loop
adc
xchg
hlt
dec
adc
or
mov
inc
cmp
into
rcrb
hlt
mov
push
lds
ficomps
mov
subl
pushf
xchg
mov
mov
imul
xlat
aas
fldl
loopne
jae
jmp
aaa
add
sub
arpl
jge
jecxz
adc
lods
mov
and
rorl
add
xchg
sub
mov
fstpt
adc
dec
notl
jnp
mov
cmp
pop
pop
shl
lcall
popa
mov
ficoml
sbb
movsb
push
test
adc
aas
cld
mov
in
mov
mov
sbb
lea
cmc
mov
in
clc
push
jbe
or
in
fldt
mov
pop
test
jl
or
in
bnd
lods
pop
mov
jmp
pop
xchg
mov
fdivrp
push
shlb
xchg
popf
ds
xor
fdivr
decl
xchg
xor
xor
lret
or
mov
cmp
js
cld
call
gs
xchg
inc
sahf
outsl
shll
pop
fsubl
adc
bound
cmc
lcall
jb
sbb
push
lcall
in
jae
push
incl
outsl
fwait
adc
movsb
sbb
add
mov
jp
mov
hlt
jae
mov
pop
loopne
fimuls
in
jg
mov
movsl
fwait
adc
bound
dec
push
push
into
fisttpll
pushl
roll
bound
notb
jg
jns
cld
cld
incl
dec
aam
xchg
pop
fsubs
addr16
adc
cmp
das
push
jle
jg
das
arpl
pop
in
or
jbe
scas
jp
dec
outsb
out
jns
repnz
incl
shl
and
pop
pusha
xchg
scas
fwait
xchg
push
xchg
icebp
xor
sub
cli
fldt
cmp
sub
cmc
push
cmp
movsb
cmpsb
outsl
inc
js
jno
rol
xlat
test
incl
fdivl
and
scas
xchg
bound
xlat
sub
fdivrs
adc
sbbb
xchg
sbb
xchg
int3
rol
loope
cmp
mov
or
in
pop
push
inc
ljmp
leave
scas
aam
insb
popa
nop
out
push
push
mov
xor
data16
clc
mov
test
jge
out
repnz
push
fildll
sahf
mov
fbstp
inc
fdivrp
fildl
test
out
add
subw
adcb
sub
mov
fists
xchg
dec
and
cmp
ds
mov
sbb
jge
cld
or
dec
jecxz
movsl
mov
addr16
fnstcw
test
sub
hlt
inc
call
addr16
pushf
imul
jp
mov
aas
int
ret
add
mov
mov
lcall
pop
lock
and
ljmp
fdiv
in
mov
cmp
mov
stos
decl
pmuludq
cld
addl
adc
pop
call
popf
xchg
xchg
cmp
out
ljmp
jle
add
mov
icebp
sub
insb
mov
jno
mov
call
cmp
jno
cmpb
aaa
aam
mov
out
pop
push
jmp
and
mov
add
out
mov
mov
stos
out
mov
je
pop
xor
mov
inc
mov
mov
hlt
call
xchg
aad
mov
std
lds
mov
decl
dec
sbb
cmp
clc
das
dec
mov
jne
sbb
jne
mov
wbinvd
mov
push
sbb
adc
int
dec
lcall
lahf
cmp
inc
loop
pushl
push
and
stc
sub
into
jae
iret
insl
jp
fcoml
test
jmp
loopne
mov
or
incl
lea
push
test
xlat
push
push
mov
push
adc
ss
mov
push
incl
xor
fiaddl
dec
inc
enter
sub
xlat
xchg
rclb
inc
aam
sbb
xor
in
mov
loopne
sbb
jnp
sub
or
lahf
mov
and
fucomip
testb
xchg
ja
out
push
cmp
sar
das
icebp
lds
push
sahf
jb
jge
mov
stos
in
stos
iret
icebp
sbb
mov
enter
xor
pusha
sub
mov
iret
iret
mov
outsl
mov
mov
xor
lahf
adc
ds
push
call
jns
push
test
xor
mov
jg
scas
insl
dec
mov
jns
in
in
add
sub
mov
mov
lea
sbb
flds
mov
ljmp
leave
rcrb
sbb
xlat
add
mov
in
cmp
dec
cld
mov
or
add
negl
out
out
adc
xor
fucomip
dec
mull
addr16
shll
add
add
pop
addr16
pop
out
dec
xchg
add
je
pop
inc
push
lcall
insb
daa
out
inc
add
incl
cmp
adc
jno
sbb
std
jae
or
xchg
shlb
insl
xor
cld
lcall
pop
dec
roll
out
in
sub
repnz
nop
cwtl
das
and
xor
lcall
loopne
jl
push
fnsave
cwtl
jnp
xchg
push
push
test
xor
mov
js
xor
push
mov
inc
test
xor
sub
ljmp
cli
fdivrl
dec
iret
cmc
roll
push
jge
iret
push
adc
dec
xchg
lcall
out
xchg
cmpsb
push
jle
fnstsw
stc
and
ljmp
sub
rcrb
out
daa
cmp
andb
ljmp
cld
jmp
mov
bound
cld
test
pop
adc
pop
cmpsl
dec
lcall
inc
in
xchg
pusha
ljmp
jbe
cwtl
mov
inc
sub
xor
dec
mov
out
jnp
or
push
pop
int3
xchg
mov
dec
lods
cli
int
rcl
xor
incl
and
xor
repz
dec
sub
and
rcr
cmpsl
mov
icebp
lcall
loopne
in
mov
movsb
jns
loopne
call
adc
in
adc
rcrb
inc
ret
ljmp
dec
movsl
ret
sub
cmp
mov
lea
lret
cltd
or
push
outsb
pop
xchg
sub
out
sbb
sbb
push
pop
int3
cmpsl
decb
mov
jle
outsb
mov
mov
sahf
nop
xchg
int
inc
inc
add
push
inc
clc
sbb
adc
lcall
popf
or
fstpl
dec
pop
jb
mov
std
psubd
jle
fildll
mov
push
pop
xchg
into
sbb
in
aad
loopne
push
pcmpeqb
dec
and
jg
xorb
ret
orl
inc
xchg
iret
cmpsl
adc
dec
sub
iret
std
cmp
imul
stc
into
mov
int3
push
stos
js
push
call
mov
stos
out
incl
mov
mov
sub
push
clc
out
or
lcall
int
fs
adc
and
in
or
mov
sbb
mov
mov
adc
dec
adc
incl
call
outsb
loope
dec
aaa
movsb
push
mov
aaa
lods
call
cwtl
int3
push
dec
pusha
add
call
sub
jmp
mov
mov
push
pop
adc
ljmp
xchg
fisttps
or
nopl
call
insb
adc
push
sbb
pop
cli
dec
insb
jle
fstl
in
repnz
inc
xchg
fisubrs
test
es
cltd
jno
mov
xor
push
mov
test
in
xor
stc
int
js
xor
int3
in
cmp
decl
jae
and
mov
inc
push
js
mov
ficoml
decl
ds
nop
cmc
data16
in
jmp
xchg
outsb
push
add
call
fwait
mov
pop
lret
mov
leave
push
mov
pop
and
imul
jno
lcall
mov
cmp
xchg
xchg
mov
fldl
fcomi
rcl
cld
lcall
mov
scas
jno
sbb
sbb
mov
pop
cmp
decl
sbb
adc
or
aad
pop
jl
sbb
inc
dec
pop
ljmp
adc
cltd
push
sub
sub
cli
xor
mov
xchg
repz
popa
out
in
pop
loopne
dec
inc
lcall
jge
jnp
stos
sbb
movsb
int
jns
sub
ljmp
decl
xor
xor
push
add
mov
aam
xchg
scas
pop
pop
push
mov
and
add
dec
loopne
inc
in
pop
aas
fwait
pop
add
mov
mov
jmp
daa
pop
test
cs
xor
fdivrl
dec
jnp
movsl
mov
ficompl
cmp
clc
adc
cwtl
dec
dec
or
xchg
dec
aaa
cmp
add
mov
xchg
and
sub
dec
std
call
cltd
mov
xchg
mov
cltd
nop
xchg
jg
es
sub
in
out
inc
cld
call
sub
mov
mov
mov
add
xchg
incl
loopne
jb
pop
mov
fdivs
ret
jnp
cs
out
fidivs
orb
mov
imul
test
sbb
call
xor
fdivr
fcomp
int
sbb
lcall
movsl
call
fisttpll
loope
adc
into
push
fsubs
scas
push
inc
or
sub
in
decl
cmp
aas
jne
push
jb
and
ja
cmp
dec
lcall
pushl
call
dec
call
push
dec
adc
scas
pop
das
push
test
cmpsb
or
mov
clc
dec
mov
xor
shr
mov
clc
outsl
jmp
flds
cmp
push
dec
mov
pop
scas
and
aas
mov
lahf
fistl
adc
ljmp
gs
push
mov
inc
sub
pushw
ret
icebp
xchg
pop
je
lea
sahf
test
push
mov
pop
mov
push
sbb
outsl
xor
add
push
sbb
push
cmpsl
lcall
cld
pushl
xlat
jo
iret
sbbb
icebp
sub
xchg
fisubrl
mov
pusha
hlt
xchg
outsl
jb
decl
popf
add
fistl
push
or
movntq
sbb
incl
lock
xor
cli
mov
ds
xchg
mov
fsubr
adc
outsl
cmc
out
mov
in
xchg
fstps
dec
aas
mov
pop
mov
outsl
hlt
inc
adc
xchg
sub
lahf
lds
imull
and
ret
cld
cli
add
add
gs
fadds
pop
push
outsl
lock
ljmp
xor
in
xor
or
out
js
cli
pushl
pop
call
enter
cmp
jp
clc
jg
outsb
sahf
and
movsb
pop
ja
shll
pop
gs
mov
sbb
mov
xor
dec
mov
call
clc
and
dec
sub
or
jne
and
xchg
sub
jbe
mov
mov
xchg
sahf
xor
dec
ljmp
lds
dec
jae
sbb
xchg
std
inc
push
std
jns
pusha
push
repnz
call
push
les
sbb
int3
xor
test
add
shlb
adc
cs
call
ret
mov
sbb
lret
push
pop
jnp
dec
xor
repnz
cmp
inc
call
stos
gs
xchg
es
rcrb
dec
pop
add
arpl
shrb
mov
adc
mov
lds
pop
clc
decl
adc
inc
xchg
pop
stos
sub
inc
aaa
jns
dec
or
orb
call
xchg
test
shll
ss
dec
dec
mov
incl
sub
fwait
imul
mulb
ret
sub
mov
mov
das
icebp
inc
mov
sti
es
xchg
mov
out
ljmp
int
pop
int
mov
mov
lods
stos
xchg
dec
gs
mov
xchg
pop
jl
rclb
sbbb
stos
or
dec
adcb
test
mov
sahf
mov
sar
dec
jmp
push
pop
icebp
fnstsw
mov
jecxz
sub
inc
pop
sub
dec
lock
jmp
jae
fisubrl
shll
movsb
addr16
insb
ret
cs
lcall
cmpsb
out
mov
pop
jo
add
inc
pop
mov
pop
loopne
lcall
or
popf
loopne
xchg
lcall
dec
sbb
push
pop
stc
jo
js
inc
dec
jp
enter
xchg
mov
js
mov
ja
das
cld
dec
sbb
fwait
push
popf
lcall
ret
in
cld
incl
adc
test
es
mov
add
mov
in
decl
sbb
cmp
jecxz,pt
lahf
xor
in
xor
cmp
pop
daa
dec
cmp
aad
sbb
incl
dec
lea
dec
sbb
pusha
repnz
inc
enter
or
call
leave
loopne
fdivrl
stos
jno
in
mov
clc
jnp
or
sub
lock
fs
enter
arpl
call
in
mov
aaa
mov
lods
lcall
push
sbb
sub
scas
loope
dec
popa
in
fsubrl
xor
call
adc
xor
fidivrl
push
sub
sbb
mov
jge
fsubrs
jmp
push
nop
les
aam
or
in
xchg
push
je
inc
incl
adc
aaa
dec
popf
and
cli
mov
daa
mov
imul
mov
hlt
mov
decb
pop
adc
neg
repz
out
mov
icebp
mov
gs
test
pop
insl
cltd
ret
int
stos
xchg
mov
xchg
call
aas
adc
enter
out
sahf
hlt
cmpb
mov
rcll
or
clc
js
test
nop
das
dec
push
cmp
pop
dec
push
sbb
jg
test
sub
fcoml
jecxz
addr16
lcall
inc
dec
or
and
mov
pushf
xor
enter
xchg
loope
push
cmp
sbb
loop
rcrb
out
mov
pop
or
je
push
movsl
fistpll
pop
stc
lods
scas
aad
mov
decl
adc
cmp
dec
cmp
gs
icebp
pop
imul
jbe
rclb
pop
push
fildll
fs
lcall
push
pop
incl
imul
jge
mov
or
lock
and
jnp
incl
dec
mov
adc
mov
pop
es
sub
cmp
das
lock
sbb
lods
dec
ds
mov
xchg
pop
mov
pushl
aaa
mov
out
cmp
sbb
sbbl
jmp
pop
xor
fucomip
sbb
mov
sbb
adc
rorl
add
inc
mov
inc
jmp
inc
mov
jg
lcall
popf
cmp
and
cmc
cmp
daa
jle
frndint
pop
test
loope
xor
lcall
ss
jae
push
mov
repnz
repz
sar
dec
or
mov
inc
pop
fs
imul
lods
lea
add
push
mov
ljmp
loope,pn
sbb
xchg
mov
sub
decl
std
sub
mov
add
mov
or
fdivl
inc
add
cltd
mov
add
enter
inc
xor
mov
cmp
das
xor
insl
ja
mov
push
pop
sub
subl
and
call
aas
test
test
dec
or
lock
into
inc
add
rolb
jmp
pusha
mov
lcall
lcall
xchg
sub
cmp
xchg
loope,pt
aam
xor
out
jg
sub
push
jl
or
leave
les
inc
push
or
pop
aas
hlt
jae
sub
add
das
push
or
mov
cltd
jp
loop
mov
cwtl
mov
lcall
leave
je
jnp
inc
pusha
push
jns
rolb
icebp
add
cmc
jg
xchg
push
pop
and
imul
cmp
adc
inc
das
hlt
lret
ljmp
cmp
pop
cmp
or
fistpl
sub
repnz
fstpl
mov
jbe
adc
lret
lock
aad
outsb
push
out
popa
push
push
pusha
sbb
cmp
or
xchg
jmp
push
cs
aam
lods
jg
sbb
mov
or
ljmp
xor
add
lret
nop
incb
xor
jb
jmp
dec
test
jae
scas
jmp
fisubrs
cmp
adc
popa
pushl
jmp
clc
movsl
test
inc
mov
adc
jg
pop
adc
mov
adc
enter
mov
je
jl
mov
repz
sar
jmp
xchg
fiaddl
jno
call
sahf
sub
xchg
andb
xor
cltd
jl
jae
jae
cpuid
jl
add
inc
push
fwait
shll
in
rcr
call
nop
in
sub
and
aad
in
inc
ljmp
test
xchg
xchg
jnp
mov
sbb
lcall
pop
jbe
xchg
popa
pop
jne
sbb
mov
add
and
add
mov
or
jb
and
adc
lods
mov
dec
mov
je
jecxz
xchg
sub
pop
push
mov
inc
fcom
decl
call
imul
fucomip
cwtl
push
fstpl
lcall
fsub
iret
hlt
mov
mov
mov
lret
mov
pop
sbb
pop
sub
sub
ud0
bound
mov
mov
xchg
clc
push
or
xor
sub
icebp
xor
in
xor
sbb
daa
and
lods
fcoms
cs
jle
pop
add
jg
sbb
or
mov
jns
mov
fildll
insb
in
loop
aaa
sahf
dec
rol
addr16
lea
push
cmp
push
roll
incl
jns
pop
fnsave
xlat
sub
ret
xchg
les
lods
mov
pop
sub
cli
call
and
mov
or
ss
jns
pusha
fists
pop
push
test
lret
out
push
mov
mov
ljmp
std
inc
jl
pop
das
icebp
push
outsl
and
mov
push
mov
addb
aaa
or
pop
popl
data16
mov
outsl
sub
jns
jmp
add
into
pusha
mov
cmc
lcall
add
or
cvtdq2ps
mov
movsb
mov
mov
cmp
int3
movsb
cmp
sbb
mov
mov
mov
aam
je
cmp
scas
inc
stos
adc
int3
adc
andl
xchg
xchg
ret
ljmp
je
cmp
add
mov
lds
sbb
push
mov
gs
xchg
lcall
repnz
push
jmp
mov
out
push
add
rol
in
lea
mov
inc
jg
push
sbb
pop
push
ds
out
in
lods
pushl
dec
mov
xchg
enter
lcall
or
push
jne
cmp
aas
adc
mov
sub
jg
dec
clc
ljmp
or
scas
jp
stos
inc
cmp
push
adc
pop
mov
mov
int
orl
enter
sub
mov
enter
mov
fdivrp
pop
pop
jle
pop
mov
jb
xchg
movq
ljmp
cmpsb
jecxz
or
cs
dec
push
dec
pop
push
pop
and
lcall
arpl
mov
out
fs
pop
inc
sbb
inc
adcl
roll
pop
loopne
out
outsb
lods
cmpsl
je
insb
inc
mov
ljmp
xorl
cmp
in
fs
sbb
sbb
mov
cmpsb
lock
in
ds
cld
add
and
adc
outsb
iret
fistl
incl
repz
push
sahf
daa
inc
iret
xchg
in
fistps
sbb
aas
icebp
xor
cwtl
rorb
mov
and
dec
mov
push
call
bound
aad
repnz
jg
int3
cli
pop
xor
or
pop
or
jae
cmp
test
adcb
or
movsl
xchg
incl
inc
jmp
jle
dec
not
cmp
or
cmovle
subb
adcl
mov
pop
cltd
jnp
mov
dec
jg
icebp
mov
arpl
dec
nop
mov
inc
mov
stc
in
xchg
adc
ljmp
inc
cli
cmp
ret
cwtl
nop
cmp
push
mov
mov
mov
xchg
pop
cli
add
push
cld
jecxz
pop
fcmovb
cmp
lcall
test
fidivl
lods
dec
repz
cmp
push
dec
inc
dec
nop
jo
testl
int3
dec
push
add
lret
add
and
dec
mov
fs
or
and
stos
stc
js
loop
mov
pop
jl
je
in
jae
sbb
inc
outsl
or
repz
popf
sbbl
bnd
lods
push
mov
or
and
sbb
add
arpl
add
pushl
jecxz
sub
inc
insl
sub
inc
shll
mov
repnz
scas
push
imul
div
popf
mov
incl
xchg
adc
enter
jl
test
dec
sbb
cmpsb
ret
dec
incl
mov
push
in
sub
loop
mov
inc
or
in
cmc
dec
mov
xor
popa
lret
adc
sub
pop
lods
mov
cmpsb
repnz
mov
test
das
sbb
andl
sbb
lret
fisttps
decl
jbe
xor
xchg
mov
data16
iret
dec
jnp
hlt
mov
call
inc
xor
cmpsl
mov
or
lea
mov
ficompl
dec
rolb
mov
stc
and
test
mov
xorl
add
xchg
lock
inc
adc
bound
pop
pop
es
decl
dec
jmp
inc
mov
mov
add
push
mov
ds
and
decl
push
sbb
mov
in
ss
xor
hlt
inc
dec
arpl
loope
push
rcr
jg
inc
sub
into
lret
fisttpl
cwtl
mov
sbb
cmp
scas
sub
nop
fistl
test
jmp
xor
pop
fidivrs
xchg
jae
push
test
and
jmp
test
lods
cmp
lds
push
and
in
add
mov
addl
add
and
lods
iret
xor
notb
mov
add
adc
dec
cld
decl
sub
and
sbb
leave
fbld
push
roll
roll
dec
andb
and
lret
call
cli
imul
xchg
outsl
mov
sbb
or
pop
push
incl
daa
push
lds
std
push
push
sahf
push
enter
in
jo
jo
cwtl
push
xor
pop
mov
mov
jecxz
iret
mov
and
pop
pop
incl
add
clc
dec
add
fdivs
rolb
test
jle
test
and
mov
pop
fimuls
ror
jne
xchg
lods
imul
cmc
dec
fcmovu
in
test
call
sub
cmp
mov
fcoms
int3
pop
int
clc
call
andb
mov
add
cli
je
sbbl
jmp
fsubrs
mov
orl
pop
outsl
cmp
repnz
dec
out
xchg
popf
lds
fbstp
popf
sbb
inc
imul
sub
lcall
incl
inc
repnz
mov
xchg
or
sbb
outsl
repz
sbb
mov
push
mov
rcll
js
sbb
or
in
xor
mov
shl
in
sub
sbb
cmp
daa
insl
shl
lret
fidivrl
or
push
addr16
scas
xchg
pop
jmp
xor
push
outsl
jmp
inc
outsl
adc
sbb
das
outsl
ja
or
bound
int
gs
incl
push
out
shlb
xor
xlat
fldcw
and
inc
jne
inc
jge
je
pop
jl
lods
scas
decl
cmpsb
jae
outsb
cmp
xor
fmuls
insb
fimuls
xor
incl
mov
fwait
adc
pop
popa
orb
cwtl
andl
dec
mov
mov
jmp
adc
push
push
and
cmp
and
cmpsb
inc
ret
fwait
rcrl
test
dec
cmc
add
xchg
leave
and
push
fnstsw
inc
aas
push
xchg
cmp
clc
mov
outsl
adc
fsubs
lea
jp
xchg
aam
inc
cmp
cmpsb
push
sbb
outsl
jno
out
in
jne
sub
xlat
lret
call
mov
rcrb
insl
mov
ret
or
cltd
std
shll
sub
jg
pushl
in
ficoms
lahf
popf
fdivr
xchg
shlb
iret
jo
jg
ljmp
les
loopne
incb
outsl
mov
jp
mov
dec
lahf
test
pop
mov
sahf
aad
push
icebp
test
xor
cmp
std
pusha
sti
jge
cli
call
mov
pop
test
cwtl
mov
outsl
mov
jg
cmpsb
lock
not
aad
bound
adc
std
jnp
cmc
mov
ret
nop
out
mov
insl
repz
add
cmp
aaa
and
lods
jns
xchg
push
mov
neg
mov
mov
fucom
lret
cmp
fbstp
imul
add
xchg
mov
out
je
rorb
dec
sub
decl
mov
sbb
dec
js
mov
mov
mov
out
out
notl
mov
lcall
dec
inc
xor
stc
push
jl
bound
ret
shll
arpl
xchg
insb
xor
sub
imul
jo
pop
cmp
loope
dec
sub
shlb
push
arpl
in
call
adc
sti
addb
xor
lret
scas
and
ds
addr16
or
call
negb
inc
in
pop
movsb
pop
and
xchg
xor
mov
ljmp
sahf
leave
jno
mov
dec
mov
jmp
icebp
jp
outsb
decl
add
xor
cs
mov
xor
xchg
xchg
jmp
sbb
pop
adc
movsb
and
inc
xchg
repz
jno
xor
jae
test
cli
dec
jecxz
and
adc
outsb
push
mov
pop
stos
call
negl
adc
roll
push
decl
mov
popa
jo
outsl
inc
xchg
es
fsts
xor
or
sub
sbb
jmp
jg
xor
sbb
adc
and
call
pop
sub
scas
dec
pop
and
or
jnp
lods
stos
fdivl
mov
sub
cmp
push
mov
lea
xchg
test
outsb
mov
mov
fdivl
mov
std
outsl
mov
jmp
sbb
xchg
lock
mov
ja
or
sti
insb
ret
js
into
out
jmp
fldt
loopne
adc
loop
xor
mov
xor
pop
sbb
fldt
incl
lret
inc
cld
and
std
jg
jp
mov
mov
out
stos
push
add
jae
pop
sub
cmp
aaa
xlat
cmp
nop
call
ds
jno
dec
rorb
cmp
mov
aaa
ss
jecxz
cmp
fistps
cmc
adcb
int
mov
sub
cmp
inc
lcall
mov
int
lods
ret
enter
pop
loope
jno
or
push
jns
xor
insl
fwait
arpl
dec
idiv
decl
test
dec
ret
psubw
push
outsl
mov
repz
shll
jmp
mov
sbb
sbbb
and
fldl
scas
lcall
repz
push
loope
jp
dec
out
push
mov
jne
jmp
push
mov
inc
into
dec
sbb
dec
aam
push
pop
aad
popa
loopne
std
add
loop
lcall
jb
pop
mov
push
inc
inc
popa
cmp
add
es
inc
mov
jecxz
int
pop
xor
mov
pushl
add
movsb
data16
mov
push
popa
add
jecxz
jne
sbb
lcall
int
jge
inc
push
cmc
arpl
cmp
adc
mov
jmp
gs
cltd
fsubp
jmp
xor
test
iret
subl
jo
sbb
pop
jg
xlat
enter
xchg
insl
ret
add
in
fisubs
pop
and
mov
lods
bound
in
mov
add
jne
cmp
mov
push
xor
inc
decl
cld
add
inc
adc
mov
mov
ja
add
xchg
data16
inc
pushl
sub
call
or
sub
xchg
ss
fnstsw
jge
enter
mov
sub
ret
ret
jbe
dec
bnd
mov
mov
pop
fs
sarb
ds
shl
mov
xor
js
xor
out
into
les
sbb
cmp
into
out
add
test
inc
pop
sbb
or
pop
mov
stos
incb
add
push
adcl
jmp
outsb
jmp
or
call
punpckhwd
jg
lahf
lcall
rcrb
mov
cmp
jp
jno
xchg
ljmp
mov
es
push
pop
jae
movsl
int
inc
stc
jecxz
mov
inc
aas
mov
pop
insl
mov
mov
adc
push
movsb
sarb
sub
inc
and
sar
ljmp
cmp
in
xchg
insb
mov
push
and
push
mov
js
clc
ljmp
clc
movsl
or
test
idivb
cmpsl
orl
mov
jge
fisttpll
sbb
in
pop
mov
mov
roll
dec
or
mov
mov
mov
lret
push
add
or
jge
movsb
jbe
push
mov
inc
pop
cli
movsl
mov
pop
or
cltd
and
scas
ljmp
clc
incl
jno
loopne
adc
rolb
jmp
dec
lods
mov
sbb
pushl
mov
or
fwait
stc
adc
addr16
movsl
lods
cmp
pushl
cli
ljmp
movl
and
sub
sub
sub
push
sub
cwtl
repnz
add
push
lcall
imul
leave
adcl
adc
lea
call
mov
mov
es
mov
or
hlt
test
ljmp
test
and
das
push
repz
js
pop
out
popa
nop
ret
rcll
dec
mov
movl
mov
mov
push
mov
fwait
outsb
dec
sub
cmp
pushf
in
xchg
ss
inc
js
mov
mov
xchg
cmc
test
dec
pop
push
sub
sar
pop
aas
dec
imulb
clc
shll
flds
lea
sahf
cli
mov
das
hlt
rcll
sbb
cmp
cmpsl
pop
mov
mov
push
int
inc
xlat
mov
imul
cmp
or
jecxz
push
inc
add
or
xor
mov
insb
or
and
pop
adc
cmp
and
push
fisubrl
mov
hlt
pop
mov
fists
repz
decl
outsb
push
mov
sbb
push
bound
and
mov
mov
mov
mov
and
sbb
stos
icebp
in
dec
sub
int3
sbb
xchg
inc
and
fdecstp
repz
or
sar
mov
xchg
and
bound
push
sarl
inc
mov
mov
addl
jns
pop
es
mov
gs
test
or
and
mov
es
push
inc
mov
dec
xor
sub
test
sbb
push
mov
cmp
pop
push
mov
push
sbb
and
jg
adc
mov
xchg
adc
sbb
lcall
push
cmc
addr16
cwtl
js
lds
dec
mov
add
cmp
aaa
movsl
icebp
in
out
cld
adc
dec
lret
inc
jp
push
popa
adc
cmp
subl
mov
xchg
arpl
pop
sbb
push
lret
push
or
sub
xor
push
movq
xchg
arpl
or
decl
nop
lret
ja
mov
xor
and
stc
adc
dec
shrb
push
cmp
aaa
cli
dec
cmp
insb
jno
mov
cmc
xchg
pop
push
and
test
mov
cmp
and
pushl
or
ljmp
mov
mov
popa
scas
ffree
cli
arpl
and
cmp
cld
lcall
jge
lcall
inc
xchg
xchg
inc
cld
push
push
adc
ljmp
ljmp
in
push
mov
inc
movsb
mov
lret
and
outsb
lcall
out
imul
lcall
icebp
push
add
in
aad
adcb
cmpsl
and
jge
mov
push
mov
sub
and
pop
mov
push
mov
push
test
cmp
ret
decl
or
stos
fcomps
fsubl
add
js
rcrb
mov
incl
roll
loope
inc
ja
jnp
loopne
dec
mov
movl
add
mov
std
sahf
push
ret
cmpl
lea
int3
cltd
rcrb
mov
stos
xlat
jo
pop
clc
jmp
mov
push
xor
idivb
scas
inc
mov
jge
or
movsb
inc
sub
iret
xchg
or
mov
addr16
cmc
mov
sarb
push
inc
inc
stos
loope
dec
pushl
add
in
jnp
pusha
outsb
and
outsl
mov
cld
imul
fwait
in
loope
data16
push
jno
pop
mov
inc
add
sbb
or
mov
inc
jmp
fnstcw
jg
insl
xchg
cmp
data16
jg
jmp
add
mov
mov
cwtl
insl
mov
js
add
mov
jne
mov
adc
lods
icebp
sbb
mov
mov
mov
push
test
jb
mov
jp
mov
sub
hlt
lahf
jp
lcall
cld
jo
fwait
adc
iret
insl
jl
push
pop
cmp
shlb
stc
lds
mov
jmp
pop
lret
ss
lea
mov
dec
cltd
in
xor
jbe
outsl
cld
decl
mov
mov
inc
xchg
gs
inc
fisubrs
fmull
jmp
dec
xchg
bound
mov
pushf
cld
cmp
mov
out
fsub
xchg
mov
ja
and
jmp
inc
mov
stos
jecxz
mov
outsl
push
je
xchg
push
jle
jmp
xor
test
jmp
and
mov
insb
hlt
add
inc
pop
mov
loop
cmp
push
testb
fldenv
and
jg
inc
jae
int
lods
jle
das
jge
mov
xchg
xchg
test
shll
repz
movsl
sub
xchg
clc
xchg
stos
mov
lods
stc
or
push
ljmp
incl
ds
add
mov
aam
add
idivl
loop
pop
clc
jg
out
cmp
sbb
push
test
cmp
addb
dec
add
std
pop
add
cld
call
shrl
xchg
push
jl
lcall
lods
je
jecxz
ljmp
jbe
pop
adc
sub
sub
xchg
mov
push
arpl
add
cli
mov
out
in
movsl
dec
sub
nop
pop
jbe
pop
jp
mov
cli
mov
mov
incl
test
jnp
and
lods
xchg
fildll
jae
or
incl
sub
movsb
pop
pop
lahf
mov
xchg
or
or
sub
ficomps
push
mov
or
fucomip
dec
fidivrl
enter
pop
xor
in
mov
or
leave
dec
or
jmp
sub
mov
adc
cmp
cs
int3
test
pop
clc
push
mov
enter
fdivs
scas
xorl
mov
adc
test
mov
decl
mov
fldt
mov
sti
xchg
cltd
or
sub
and
mov
aaa
adc
jmp
dec
jnp
dec
dec
loop
lds
mov
mov
aad
mov
stc
lcall
xchg
xchg
push
cmp
xchg
decl
push
sub
stc
leave
rcrl
sbb
mov
mov
idiv
imul
push
push
dec
ljmp
daa
mov
les
and
ljmp
pop
es
adc
shlb
hlt
xchg
stc
xor
loop
sbb
bound
testl
ljmp
jl
jp
mov
xchg
push
mov
sar
fidivs
data16
ja
dec
push
cmp
test
mov
jb
xchg
xchg
cmp
cmp
mov
fiaddl
cmp
push
lea
scas
mov
pop
push
mov
int
lcall
cmp
xor
mov
rcrb
jge
push
or
jb
movsl
ds
sahf
iret
sub
aaa
mov
out
out
push
cmp
ficoml
incl
test
cmp
add
cmp
inc
rclb
clc
incl
pop
int3
cmp
xchg
xchg
shrl
test
push
imul
mov
cld
aaa
subb
dec
cltd
jae
test
or
ljmp
out
dec
ret
ja
in
mov
addr16
fimuls
mov
mov
loope
xchg
stc
rcl
mov
mov
add
mov
pop
jb
adc
arpl
cli
push
addb
jns
fisttps
loop
gs
cmp
sub
sbb
push
cmp
fs
stos
rclb
lret
mov
cwtl
fsubp
adcl
incl
icebp
call
outsl
or
and
decl
cmp
fstl
push
inc
enter
sbb
xchg
ret
inc
inc
or
nop
or
xchg
mov
mov
js
xor
jne
orl
xlat
outsb
sub
aaa
sbb
imul
test
and
out
gs
jnp
out
mov
aaa
lcall
addb
adc
aad
imul
adcl
pushl
mov
popa
call
std
xchg
stc
cwtl
mull
or
or
push
mov
ljmp
pop
dec
or
push
fimull
inc
mov
loope
cmp
lret
push
ljmp
adc
push
int
sbb
mov
ljmp
imul
dec
mov
bnd
pusha
lods
fists
pop
addb
aaa
cld
fildll
daa
and
in
test
sti
cmp
jne
xchg
shl
lcall
adc
shl
bound
in
push
jecxz
pop
jno
lcall
data16
mov
ja
adc
and
fs
push
sti
bound
mov
decl
adc
orb
stos
and
cmp
adc
arpl
ljmp
add
push
ret
and
aam
mov
outsl
mov
mov
dec
push
jnp
movsl
mov
icebp
mov
pop
jae
jmp
test
and
push
lret
outsl
icebp
push
mov
lds
add
test
add
fcomps
repnz
jg
lcall
xchg
xor
and
add
cmpsb
jle
dec
xor
mov
ljmp
xchg
jge
ljmp
lret
mov
test
pop
call
sub
ljmp
inc
lahf
test
stos
sarb
cmp
inc
push
add
push
ffreep
cwtl
and
dec
jg
xor
je
scas
push
pop
xchg
inc
mov
aas
popl
mov
mov
adc
cmp
stos
iret
pop
in
add
dec
stos
dec
das
dec
dec
scas
or
sub
add
testl
int3
cwtl
and
xlat
sbb
ljmp
std
or
rcrb
mov
mov
and
jmp
xor
mov
mov
pop
insb
mov
jnp
lods
dec
add
pop
cli
jmp
movsb
enter
test
lods
clc
dec
dec
ss
xchg
popf
loopne
inc
cmp
adc
inc
xchg
inc
adc
mov
das
scas
loopne
push
inc
mov
mov
insl
xchg
jne
sbb
adc
mov
in
or
test
fbstp
pop
inc
sbb
sbb
into
lcall
fwait
inc
ret
lods
jle
mov
mov
scas
cltd
xor
ffree
loopne
mov
loop
hlt
incl
cltd
stc
imul
shlb
out
mov
aad
push
mov
hlt
sub
pop
mov
push
aad
incl
add
inc
lea
dec
xchg
in
out
sar
fnstsw
iret
aam
sub
mov
xor
xor
mov
mov
jno
push
pop
mov
negb
and
popf
add
or
dec
pop
adc
movsb
sub
movsl
movsl
test
push
and
dec
jmp
push
ficompl
mov
pop
add
jmp
fisttpl
jecxz
inc
cmc
sarl
pushf
cmp
jp
jmp
mov
xchg
and
int
add
jg
test
out
inc
add
xchg
es
lcall
push
mov
sar
jmp
fnsave
add
dec
push
test
pop
es
mov
mov
push
out
cmp
stc
stos
jp
adc
cmp
xchg
leave
fs
insl
call
test
mov
insl
push
or
or
dec
outsl
icebp
fisttps
flds
cld
enter
lret
in
out
and
mov
inc
ljmp
lock
cmp
jg
jg
ja
and
aaa
incb
mov
test
mov
and
mov
add
call
ficoml
data16
inc
adcb
data16
push
sti
in
call
gs
bound
and
std
inc
bound
mov
dec
lret
or
lods
push
sub
repnz
mov
jg
lods
jne
scas
mov
imul
push
js
or
mov
jmp
push
ljmp
bnd
std
or
push
or
push
jns
mov
lods
faddl
call
and
cs
jg
fldl
frstor
test
add
jo
cltd
xchg
dec
pushf
lahf
jle
pop
iret
cmp
dec
ljmp
jg
lock
fnstcw
lcall
cltd
dec
cmp
dec
ljmp
mulb
push
call
bswap
jns
jle
mov
je
lcall
or
push
push
pop
cmp
ljmp
push
jg
and
lock
mov
aaa
leave
add
xor
mov
mov
push
mov
ret
sub
incl
jmp
pusha
popa
push
popf
cmpsb
adc
pop
xchg
jo
push
add
push
into
loopne
sub
out
movl
pop
mov
pop
pop
adc
hlt
pop
repz
push
cmp
shrl
add
sahf
popa
insb
mov
fucomip
pushl
aaa
and
es
lahf
jnp
pushf
push
xor
imul
ljmp
testb
lcall
mov
sub
push
insl
xor
test
aaa
test
adc
popf
lods
push
aam
repz
and
ljmp
stos
xor
cmp
pop
pop
aas
and
dec
in
add
add
dec
push
repnz
into
dec
pop
sub
fsubrl
sub
std
pop
clc
jmp
or
aad
insl
sub
push
es
mov
test
cmc
ljmp
loopne
sub
xor
call
stc
pop
adc
iret
cwtl
scas
into
xchg
sub
cld
xchg
incl
dec
mov
push
pop
mov
mov
mov
and
stc
andb
js
nop
jae
lea
cmp
decl
lds
lods
mov
xor
inc
dec
sbb
mov
mov
das
add
jae
sbbl
dec
mov
clc
cmp
pop
jns
imulb
int
rolb
test
ljmp
insb
pop
jb
or
enter
lcall
or
fnstenv
mov
int3
jp
mov
push
sub
jns
jno
ljmp
add
insl
les
or
add
sahf
aaa
mov
cli
jg
icebp
dec
int
test
mov
shl
xor
mov
loopne
aaa
loop
in
imulb
call
inc
add
fists
popa
mov
fbstp
cmp
or
mov
jge
cmp
add
loopne
aaa
pop
mov
mov
or
clc
fbstp
iret
mov
xchg
cli
sarl
in
mov
das
mull
push
enter
ljmp
or
mov
jmp
xchg
dec
bound
iret
cmp
jg
in
andb
cmp
andb
into
daa
aas
add
movsb
outsb
push
int3
stc
out
cmp
shll
adc
outsb
fwait
mov
jnp
test
or
into
push
cmp
lods
inc
xchg
xlat
inc
cli
lcall
push
inc
mov
pop
pop
inc
imul
jo
out
scas
mov
adcl
mov
js
push
xchg
mov
cld
outsl
hlt
dec
mov
jle
ficoms
pop
and
jae
das
fldln2
mov
incl
pop
rorl
inc
ja
addr16
xchg
cmp
out
data16
inc
cmp
ljmp
call
mov
pop
push
lods
and
mov
add
jge
mov
push
sbb
add
ljmp
ljmp
mov
lods
loop
rorb
mov
lcall
and
pop
mov
dec
xchg
mov
dec
in
jmp
call
dec
jg
les
ja
push
imul
and
test
lods
cwtl
decl
cmpsl
mov
fildll
and
bound
and
adc
jmp
lods
cmp
xchg
mov
loopne
mov
loope
jo
inc
out
lock
inc
add
pusha
addr16
mov
add
pop
loop
pusha
out
es
jle
mov
call
inc
bound
fimull
mov
cmpsb
and
xchg
imul
rorb
das
adc
bound
movsb
jg
xchg
pop
xor
or
icebp
inc
push
sub
jb
jl
xor
pusha
mov
dec
adc
stc
shlb
cmp
outsl
icebp
lcall
cmp
dec
push
sub
inc
cltd
adc
pop
pop
cwtl
out
sbb
dec
icebp
dec
lcall
out
test
xor
into
inc
dec
push
sbb
out
pop
loopne
fwait
outsb
pop
lea
inc
in
imul
mov
dec
mov
cmpxchg
incl
mov
popf
mov
dec
adc
fistpl
sahf
pop
loopne
decl
mov
fisttpl
push
add
loop
call
sbb
insb
mov
insb
clc
mov
pop
mulb
push
rcrb
loop
and
imul
mov
dec
dec
fbld
mov
inc
pop
sbb
mov
or
testl
movsb
inc
dec
and
pop
push
mov
jmp
outsl
in
popa
inc
test
mov
xchg
add
xor
andl
insl
call
mov
das
in
mov
or
inc
movsl
data16
pushl
cwtl
pushf
mov
lret
orb
cmp
push
push
jp
loop
ljmp
cmp
call
add
inc
fisttpll
pop
test
fcomp
sub
negl
loopne
inc
data16
jg
jmp
stos
cmp
xlat
push
push
lcall
mov
mov
dec
scas
xor
sub
cmc
and
scas
insl
sbb
xchg
decl
clc
mov
insb
testb
cmp
jmp
fisttps
dec
std
dec
xor
jno
iret
mov
push
adc
adc
jbe
loope
decl
and
ja
repz
subb
mov
inc
inc
jg
bound
test
mov
cmpsb
mov
and
fcmovnb
in
dec
shr
push
push
fsub
mov
pop
repz
rorb
mov
notl
outsl
mov
hlt
sbb
push
mov
lcall
push
push
insb
add
cmp
xor
dec
push
xchg
scas
sub
mov
xor
insb
sub
dec
jnp
xchg
addr16
push
lahf
outsl
js
jg
and
stos
fistl
notl
inc
dec
dec
sbb
xchg
call
add
sub
insl
mov
pop
or
faddl
dec
cld
inc
pop
jno
stos
jecxz
out
jp
insl
push
cmp
push
rcr
jo
shl
stos
int
or
bound
xlat
adc
mov
sub
mov
pushl
aas
and
or
pop
add
outsb
pop
jae
imul
and
roll
movsl
or
mov
dec
loope
or
mov
out
inc
popf
lods
je
out
mov
sarb
jo
pop
fnsave
lods
jle
mov
push
jmp
popa
or
bswap
mov
cmp
mov
out
incb
cld
pop
and
icebp
push
add
xchg
xor
pop
bound
mov
dec
lcall
cmp
clc
mov
and
and
mov
out
push
fldt
out
aam
xchg
push
sbb
test
dec
sbb
sub
imul
test
std
adc
or
pop
push
stos
ljmp
out
leave
nop
fmuls
mov
mov
shlb
xchg
jmp
jns
pop
decl
int3
ret
ficomps
and
mov
js
out
cld
leave
scas
test
or
adc
ja
shll
xchg
cmpsl
lcall
pop
xor
insl
scas
adc
and
mov
loop
or
push
mov
je
xchg
cli
add
cltd
cmpsb
add
lcall
cmp
movsl
push
mov
ret
cld
jmp
cmc
xchg
dec
mov
and
outsl
fdivp
push
ret
repz
and
adc
fcmove
cld
dec
sbb
repnz
lcall
mov
es
out
iret
xchg
shlb
adc
pushl
xor
xor
push
xor
test
aas
sub
push
and
xor
movsl
scas
hlt
in
call
stos
popa
adc
imul
orl
sahf
xchg
adc
mov
aaa
inc
jo
ret
add
lcall
cmp
call
adc
sub
fstl
loop
je
in
cmp
fldcw
scas
rolb
cld
fcmovnbe
jle
flds
jae
aaa
mov
aaa
and
int
decl
aaa
aad
xor
sub
out
inc
jg
jp
pop
push
repnz
mov
test
call
clc
pushf
and
inc
loope
adc
jmp
into
adc
scas
sub
incl
inc
add
jbe
push
jg
lods
push
and
notl
inc
xchg
lods
sub
mov
out
gs
xchg
jno
sub
jnp
xor
sbb
arpl
push
addr16
or
jl
inc
jns
in
mov
icebp
pop
push
loop
xor
mov
adc
jae
dec
mov
mov
lea
ja
xchg
sti
aas
cmp
ss
lock
jbe
inc
out
out
sahf
jmp
cld
lret
ret
cmc
mov
push
ds
sbb
sub
add
incl
or
push
lds
sbb
jmp
popa
loop
push
out
imul
mov
push
mov
aas
mov
adc
shr
sub
xor
movsl
adc
jmp
lock
fnstenv
push
sub
and
mov
mov
ljmp
jns
adc
dec
bound
pop
loop
shl
fildl
jl
call
push
push
es
or
jo
inc
lahf
inc
inc
mov
sar
decl
xor
insl
add
dec
mov
push
clc
imul
insb
push
or
sbb
movsl
push
clc
cmpb
add
pop
cs
out
js
mov
insl
cmpsb
inc
out
sub
jae
push
cmp
out
mov
mov
lea
cld
in
cmp
adc
mov
add
in
mov
fsubrl
inc
lahf
insl
dec
pop
jo
arpl
loop
xchg
fmull
ljmp
icebp
add
jbe
xor
movsl
aaa
test
dec
std
dec
out
push
data16
mov
pop
aas
pop
add
jp
mov
hlt
lcall
or
pop
scas
xor
push
xchg
into
mov
adc
jmp
and
outsl
add
and
mov
xchg
dec
hlt
rorb
mov
mov
mov
int3
data16
pop
fnstcw
je
popa
sbb
jmp
fwait
xor
push
into
fisubrl
sti
and
rol
int
cld
jg
das
fisttpll
dec
in
js
subl
add
icebp
notl
push
xor
dec
imul
loop
pushf
inc
je
xor
pop
xchg
mov
js
jg
pop
or
ljmp
test
jb
fsts
mov
shrb
mov
jg
sub
decl
and
xor
or
out
sub
int3
js
jmp
sti
pop
outsb
jle
test
mov
cld
jg
scas
lcall
jge
daa
jg
ljmp
js
xchg
mov
js
mov
sbb
cmpsb
cmp
bound
ljmp
popa
push
sbb
lret
push
movl
movsb
mov
dec
xchg
outsl
jmp
stos
jne
dec
imul
sbb
adc
cmp
pop
dec
sbb
inc
int3
cmp
or
or
xor
stc
jnp
mov
xchg
jg
aaa
test
jno
cmp
les
shlb
lds
push
sbb
pop
outsl
add
pusha
fcmovnb
ret
xchg
mov
cmp
call
push
xor
sti
mov
pushf
cwtl
arpl
lcall
dec
dec
int
mov
je
mov
cltd
or
xor
cwtl
ficoml
cmp
pop
stc
jmp
inc
lods
push
daa
sub
rclb
inc
fs
cltd
mov
mov
push
sub
xorl
cmpsb
into
test
imul
in
pop
dec
cmp
dec
xchg
notl
or
loopne
adc
bound
mov
xchg
cli
jns
fcomps
mov
cs
xchg
xchg
std
cmpsl
pop
dec
movsl
push
outsl
xchg
call
in
rorl
dec
sub
mov
shlb
mov
call
xor
ljmp
hlt
mov
lock
stos
aaa
pop
mov
fbld
sbb
lcall
cmp
push
mov
iret
or
mov
repz
int3
mov
sbb
jmp
mov
int3
dec
or
jg
mov
jbe
pop
sbb
and
pop
mov
stos
leave
xchg
xchg
daa
inc
cs
in
call
sbb
pusha
je
add
ss
xorb
outsb
dec
lcall
mov
outsb
and
dec
out
mov
mov
loopne
sahf
std
jmp
jae
dec
push
mov
cwtl
mov
incl
mov
dec
in
add
xlat
or
cmp
and
add
adc
inc
sahf
adc
outsb
mov
flds
mov
pusha
mov
fisttps
loopne
fdivp
call
or
add
fxch
jo
arpl
das
std
decl
aam
push
lahf
test
mov
imul
stos
call
mov
je
xor
mov
jp
cmp
cli
shl
sarl
sbb
test
pop
icebp
lea
stc
dec
cwtl
dec
mov
sbb
adc
out
lahf
cmp
mov
call
enter
lahf
scas
fnstenv
or
out
es
fsts
cli
mov
sub
testb
lods
mov
incl
adc
mov
ljmp
sub
into
xchg
mov
fsts
incl
and
adc
sub
adc
rcl
adc
sar
sbb
jns
pop
sti
adc
movsl
inc
nop
and
mov
icebp
sub
jns
lret
dec
sub
aaa
dec
ret
rclb
stc
push
aaa
cwtl
iret
sbb
inc
ret
push
or
stos
je
sbb
inc
outsl
sub
clc
rol
hlt
ret
outsb
jle
dec
jae
and
dec
loopne
sahf
je
and
test
adc
mov
sub
int
mov
jmp
push
aas
negl
sub
in
or
mov
adc
sbb
lcall
push
aas
insb
mov
xlat
test
nop
jae
leave
jecxz
cli
call
lcall
mul
stos
daa
int3
lret
xor
jle
add
hlt
mov
pop
out
xchg
pop
movsb
bound
sub
clc
aas
inc
sub
ret
fimuls
inc
pop
jg
aad
mov
dec
icebp
mov
xchg
cmp
sbb
iret
adc
mov
and
call
jns
lret
mov
lds
loopne
mov
scas
pusha
add
stos
sbb
incl
push
dec
dec
lods
mov
pminub
mov
rclb
andb
lods
call
sbb
mulb
mov
push
das
mov
flds
sub
pushl
std
ret
add
mov
aam
cmp
pop
lock
shlb
xlat
dec
out
testb
loope
and
pushl
or
imul
aaa
sbb
sahf
jle
ret
imul
and
sbb
mov
call
aaa
stos
arpl
jecxz
sbb
cmp
fbstp
mov
jmp
push
icebp
dec
push
push
imul
xchg
xorl
xor
inc
sbb
stos
pusha
mov
jnp
xchg
sar
call
aas
inc
push
lds
arpl
aad
mov
dec
sti
mov
or
mov
ja
dec
aam
test
lahf
mov
loope
mov
cmp
mov
iret
add
icebp
call
inc
mov
or
add
add
pop
sub
xchg
sbb
pop
inc
cmp
ljmp
push
idivl
jg
sbb
clc
test
pusha
divl
jg
push
cmovp
xor
clc
dec
pop
lds
stos
dec
or
lcall
add
sbb
sub
ds
lock
icebp
pop
xlat
jnp
inc
pop
xchg
stos
daa
dec
std
incl
sbb
inc
dec
pop
adc
lahf
sbb
adc
adc
xchg
pop
fbld
pop
sub
ljmp
sarb
lods
sti
pop
cmpsl
arpl
ljmp
ficompl
jmp
inc
loope
mov
ror
mov
inc
decl
push
mov
shrb
mov
lock
add
icebp
dec
out
cmp
shr
xchg
jmp
dec
std
ljmp
pop
adc
pushf
lods
repnz
ret
adc
fcompl
inc
jmp
xchg
adc
cmp
jo
push
push
xchg
dec
je
outsb
inc
fsts
aaa
mov
sbb
inc
pop
sbb
dec
inc
add
dec
sbb
sbb
shr
cmp
decl
ljmp
ret
xor
popa
add
mov
lods
ss
lock
pavgb
jmp
cmpsl
jo
cwtl
or
pop
jns
push
aas
xchg
and
sub
incl
es
call
pop
or
dec
pop
in
stos
int3
dec
xchg
decl
jne
push
stos
pop
in
or
stos
fadds
adc
pop
mov
testb
decl
mov
insl
mov
mov
jo
test
xchg
pop
lret
aam
add
sub
mov
hlt
xchg
xor
jae
loop
sbb
aam
fs
jecxz
pop
outsl
push
jl
cmp
pop
mov
stos
cmpsb
and
clc
cwtl
fwait
mov
rcrb
cmp
call
clc
incl
mov
mov
in
arpl
subl
cli
push
cli
add
ljmp
fwait
ljmp
mov
add
xlat
les
scas
mov
mov
jmp
movsb
sub
inc
jle
movsb
outsb
pop
xor
in
out
repz
jge
fs
pop
mov
ljmp
jg
jmp
pushl
mov
imul
aam
add
mov
addr16
ljmp
mov
std
xchg
xchg
insl
gs
xlat
or
icebp
loop
lea
popa
lock
lret
sbb
mov
inc
decl
dec
sub
inc
lret
leave
push
stos
dec
lods
pop
std
or
aam
mov
xchg
xor
in
repnz
dec
test
push
jno
and
push
popf
pop
or
mov
jmp
jg
jnp
mov
mov
out
gs
aas
ljmp
jmp
mov
xchg
in
inc
in
push
test
out
lock
sti
mov
lcall
xchg
rcrb
add
xchg
loopne
and
decl
inc
icebp
inc
je
fnstenv
mov
dec
and
test
xor
sbb
dec
push
lret
shll
fists
push
movsl
and
lock
pop
inc
and
sbb
and
mov
jmp
and
push
fidivrl
add
decb
fucomip
xchg
int3
hlt
pop
and
mov
sub
mov
or
xor
mov
enter
lcall
adc
xchg
or
pop
mov
mov
jb
ret
movsb
push
jmp
pushl
cmpsb
pop
popf
ljmp
xor
aaa
jg
incl
loopne
out
pusha
stc
mov
and
pop
bound
call
inc
cmc
mov
rorb
and
in
mov
and
faddl
push
movsl
shrl
mov
cltd
stos
scas
sbb
push
adc
jmp
cmp
call
fisubl
pop
or
scas
movsl
pop
sub
mov
icebp
ljmp
xchg
dec
sub
scas
push
pop
sub
cltd
or
jecxz
lds
decl
adc
lods
data16
movsl
mov
das
add
add
xor
enter
pop
movsb
test
je
repz
jmp
sbb
movsb
mov
mov
mov
push
idivb
stos
movsb
sub
in
pop
push
test
shlb
cmp
pop
into
ss
push
out
sub
call
push
into
ss
push
jo
in
mov
adc
loop
push
dec
arpl
movsl
das
imul
ljmp
jmp
cmp
cmpsb
inc
jb
mov
incl
dec
xchg
ds
xor
sub
cmpsl
or
rcll
sub
outsb
push
cli
xor
sahf
xorb
pushl
popf
fcmovu
xlat
adc
inc
or
sahf
mov
ljmp
fnstsw
outsl
pop
xor
bound
pop
es
test
xchg
call
iret
shlb
ds
or
sbb
lcall
push
nop
pop
adcl
inc
mov
mov
cmpsb
insb
fmul
xor
rcll
movsl
mov
outsb
and
push
add
dec
cld
push
imul
cmc
mov
lahf
std
lcall
cld
test
add
loop
gs
pop
mov
movsb
pop
lods
aam
mov
outsl
icebp
or
inc
fdivs
stos
sub
jnp
icebp
shrb
xchg
loopne
aaa
clc
call
int
push
das
push
inc
adc
pop
hlt
fstl
sub
jg
les
fucomi
decb
jnp
addr16
inc
jg
sub
jmp
cmp
stc
stos
sbb
and
mov
mov
insl
dec
cmp
and
stos
cmp
cmp
orl
sub
xor
adc
jg
add
out
fstl
jge
xchg
test
sti
jae
dec
stc
mov
adc
sarb
cltd
xchg
fbld
cmp
testb
jl
outsb
cld
jmp
cmp
hlt
fidivs
cmpsb
pop
imul
enter
movsl
shll
in
lds
jecxz
sbb
adc
cmc
push
mov
pop
mov
sub
sbb
sbb
and
lret
sbb
incl
pop
cld
mov
jle
ret
mov
mov
mov
mov
jbe
jle
shlb
mov
ret
or
adc
pop
and
icebp
gs
test
cs
mov
jmp
push
push
mov
sahf
insl
xor
add
add
mov
push
insb
or
lcall
divl
dec
lret
lret
mov
cmp
inc
loope
dec
hlt
jmp
ljmp
push
jae
and
cmp
stc
push
inc
outsl
lcall
dec
ud1
mov
in
mov
cltd
loope
mov
sti
push
test
xchg
mov
stos
hlt
popa
mov
jns
lcall
std
pushl
cmp
fcoml
xor
push
in
adc
call
lock
mov
jns
shrb
and
ds
pop
ljmp
addb
rclb
xor
or
lcall
mov
mov
mov
pop
adc
pop
xchg
xchg
pop
arpl
cld
mov
xor
inc
jmp
in
hlt
fs
xchg
fdivr
lcall
pop
and
stc
repnz
pop
add
mov
lods
mov
call
rcrb
fs
dec
or
xor
mov
pop
dec
xchg
rorl
dec
xor
insl
push
xchg
in
mov
in
push
cwtl
and
add
mov
cmp
stos
mov
out
nop
dec
ror
idiv
fidivrs
and
idiv
call
sub
and
scas
adc
sbb
lcall
inc
xlat
hlt
jp
mov
and
push
fnstsw
insb
pop
clc
jnp
add
repz
imul
rol
fs
jle
ds
aam
cwtl
push
lds
pop
int3
sub
rorb
les
js
cmp
mov
pop
ljmp
cmp
movsb
sarb
mov
mov
push
mov
jb
aaa
iret
dec
xchg
cmp
imul
mov
xchg
clc
into
sarl
adc
cld
mov
push
cmp
ljmp
filds
test
out
das
dec
and
mov
sub
push
cmp
sub
shlb
lret
out
loopne
stos
imul
sub
call
pushf
pop
xchg
sar
incl
mov
mov
inc
xchg
pop
pop
push
rclb
incl
push
jmp
sbb
jo
lret
rcrb
out
jge
ret
mov
adc
cs
mov
pushl
xor
dec
pushf
mov
sbb
mov
mov
jmp
jae
push
add
push
sub
pop
stc
mov
bound
cmp
shl
lret
incl
bnd
sub
scas
pop
inc
mov
in
lods
ljmp
aam
pop
or
dec
mov
cmp
mov
daa
adc
mov
jg
adc
ret
lea
aaa
pop
cmpsl
dec
inc
lods
mov
movsb
fbld
push
cmp
sub
shrb
pop
sbb
or
clc
push
pop
xchg
sub
inc
popa
jmp
mov
addr16
nop
sub
cmp
sub
pushl
pushl
lods
dec
cmp
test
hlt
push
xchg
arpl
iret
loopne
mov
mov
call
aam
sub
pusha
sub
imul
in
andb
xchg
adc
jmp
or
ficomps
ret
pop
fwait
xchg
mov
hlt
or
push
fidivrl
arpl
and
call
loopne
mov
push
aad
fnsave
lods
icebp
or
outsl
push
fwait
push
test
xor
bndldx
ret
mov
hlt
jnp
test
inc
and
dec
rcrl
jns
insb
jb
aas
mov
adc
adcl
adc
cmp
sahf
scas
gs
cmc
decl
sub
jbe
fisttpll
sbb
daa
loopne
adc
fcoml
fildll
arpl
inc
push
push
xchg
mov
mov
add
out
xor
cli
jl
test
not
pusha
add
sbb
ljmp
stos
cmc
add
add
push
sbb
sbb
jp
pop
bound
shll
pop
or
xorb
mov
cld
mov
outsl
hlt
push
daa
aas
aad
into
stos
lock
jb
test
call
insl
loopne
dec
mov
fmull
mov
adc
ljmp
jmp
pop
fsubrl
daa
mov
in
inc
clc
shl
ss
sub
cs
pop
ljmp
jl
push
xor
mov
incb
mov
les
pop
push
movb
dec
fisttpl
call
jg
decl
adc
dec
sub
sbbb
mov
lock
lret
lcall
xor
push
pop
dec
pop
lret
pusha
mov
mulb
fstl
mov
xlat
mov
setl
mov
cmp
mov
push
neg
ja
xor
outsl
sarl
call
repz
out
loopne
scas
push
add
orl
cli
fdivp
mov
mov
lea
sub
mov
aas
enter
data16
ljmp
clc
push
xchg
pop
push
and
cwtl
mov
fcoml
jge
mov
sub
call
dec
xor
cwtl
xlat
jo
pop
push
mov
mov
std
xchg
in
test
push
testl
pop
lock
xor
inc
mov
jne
movsb
dec
mov
das
push
pop
rcrl
push
jb
mov
jmp
out
mov
push
add
push
lods
inc
mov
cmpsl
or
pop
mov
inc
insb
dec
mov
iret
xor
adc
ret
test
mul
dec
xor
xlat
mov
or
rorl
fincstp
outsl
cmc
jg
addb
in
pop
mov
pop
imul
and
ljmp
ss
test
faddl
aam
out
adc
dec
leave
notl
push
add
outsb
fimuls
fildl
push
cmp
and
sub
mov
js
fildll
push
fsub
push
out
or
cld
test
jg
jmp
adc
adc
sub
mov
into
jmp
gs
das
loope
inc
icebp
gs
xor
xlat
popa
scas
call
jp
imul
leave
fcomps
aas
xchg
xchg
shll
clc
out
xchg
dec
aas
out
jge
shr
daa
scas
pop
jno
push
aas
cs
aas
popl
or
sete
cmp
lods
xor
jne
outsl
hlt
fnstsw
jecxz
push
add
lods
unpcklps
dec
mov
mov
repz
call
movsl
add
push
ret
cli
lcall
in
or
dec
or
lcall
fnstenv
push
int3
mov
sbb
js
cld
ljmp
inc
xchg
iret
jmp
and
aad
lea
adc
loopne,pt
push
and
pusha
mov
dec
repnz
rcr
into
jg
pop
repnz
jp
nop
das
scas
jo
inc
add
dec
jecxz
lock
mov
test
lret
adc
loop
insl
cli
movsl
adc
push
imul
decl
data16
lods
cli
rcrl
aaa
adc
xchg
adc
inc
cmpsl
jl
or
mov
jmp
or
mov
adc
adc
imul
aam
nop
imul
dec
incb
jo
cli
ljmp
cmp
stos
cwtl
enter
nop
dec
imul
inc
xchg
push
jle
adc
pop
lret
pop
adc
mov
cmp
das
push
mov
mov
jle
mov
leave
jg
xchg
lock
dec
or
aam
jecxz
jp
out
repz
pop
mov
stos
add
loop
movsl
hlt
jnp
push
pop
nop
jp
adc
mov
imul
pop
sbb
push
xorb
push
push
and
or
shlb
inc
sarb
cmc
sbb
outsl
pop
test
and
jb
mov
push
shrl
popa
mov
imul
ljmp
mov
and
fimull
shrb
enter
pop
test
sbb
jg
filds
out
scas
sar
jb
inc
shlb
lahf
sbb
inc
dec
dec
push
xor
imul
aad
cmpsl
fwait
or
decl
pop
loopne
or
adc
sbb
pop
cwtl
icebp
sbb
ljmp
mov
sub
push
pusha
adc
push
mov
xor
add
jmp
mov
sbb
mul
subb
filds
clc
outsl
cld
ds
dec
xor
add
add
loope
jns
add
insl
mov
adcl
rolb
push
push
pushl
jne
dec
adcb
mov
xor
pop
inc
push
mov
sbb
ljmp
scas
mov
jb
jns
sar
pushl
xor
stc
xchg
cli
scas
cltd
mov
push
xchg
imulb
int3
mov
mov
jecxz
mov
jge
pop
sahf
adc
cmp
mov
push
leave
pop
ficompl
cmp
sub
mov
xchg
or
call
rolb
xor
xor
mov
inc
and
leave
fbstp
out
jecxz
incl
inc
xchg
in
mov
pop
dec
xor
adc
pusha
repz
ret
dec
xchg
js
inc
pusha
pop
xchg
and
shlb
loop
mov
call
shlb
pushl
pop
sbb
shl
test
cmp
or
mov
decl
addr16
ljmp
push
dec
mov
fdivp
out
into
dec
loope
andb
incl
insl
scas
sbb
inc
pop
jle
jl
dec
stos
sub
xchg
incl
fsub
fisttpl
jne
or
mov
cmpsl
sar
movsb
jbe
lcall
std
mov
fcmovbe
clc
imul
mov
inc
xchg
ljmp
lcall
inc
shll
es
negb
xchg
aad
test
and
cmp
sub
ds
ljmp
pop
mov
cwtl
xor
jno
xchg
sub
inc
pushf
push
loope
outsb
aam
call
popf
inc
xchg
xchg
lcall
stc
addr16
rorb
aam
mov
mov
adc
jp
xchg
mov
push
pushw
lcall
and
push
adc
jl
in
cltd
push
ja
mov
jl
mov
cli
shlb
stc
test
shrb
popf
pop
push
mov
mov
out
fildll
cwtl
jbe
push
aaa
xor
cld
cmp
push
push
jg
lret
sbb
xchg
xlat
push
movsl
clc
out
push
mov
cmp
add
sub
inc
jge
xor
mov
inc
pushl
fdivr
lret
int
call
pop
and
int
or
decl
jmp
inc
fimull
pop
js
or
xchg
xorb
incb
ret
add
jne
inc
scas
rorl
jecxz
ljmp
call
sarl
scas
fsubs
dec
mov
pop
into
test
dec
mov
lock
push
repnz
pop
loopne
pop
push
inc
jecxz
movsb
call
inc
xlat
daa
js
arpl
les
decl
cld
call
fcompl
std
dec
add
pusha
int3
daa
inc
ret
sti
pop
lods
xor
cwtl
insl
decb
jnp
out
es
add
or
call
dec
dec
decl
std
aaa
push
jns
popa
repnz
mov
xchg
push
insb
sbb
jmp
lds
mov
adc
fildl
ret
pop
repz
mov
scas
inc
jg
das
adc
lret
add
out
je
sbb
mov
xor
mov
mov
sbb
lret
mov
xchg
sti
cmp
pop
in
loope
hlt
cmp
repz
mov
xor
mov
mov
xorl
sub
in
mov
mov
pop
ljmp
dec
mov
ljmp
insl
push
orb
and
ds
incl
mov
pop
xor
mov
jl
pop
lds
push
addr16
xchg
subb
incl
push
clc
add
int3
dec
fdivrl
movsl
xor
lcall
push
sub
ljmp
add
pop
sbb
clc
pop
sub
jno
cwtd
outsl
mov
iret
jp
in
mov
cs
negl
push
decl
pop
shrl
mov
lea
imul
out
sbb
call
call
fdivrs
incb
cmp
shr
in
push
jl
inc
in
cld
idivb
in
mov
std
icebp
and
psubusb
mov
fnstsw
mov
rorb
std
loop
sbb
or
lret
push
test
lcall
adc
and
jl
jle
dec
mov
dec
test
jbe
mov
jns
jmp
xor
lahf
inc
idivb
loopne
add
push
xchg
mov
jmp
sbb
repz
cli
das
sbb
xchg
add
mov
fsubrs
das
test
call
mov
mov
addb
adc
ss
cmpsb
in
xchg
jns
fucomip
call
jmp
add
dec
fwait
aas
dec
add
jge
jg
jmp
outsl
push
adc
cmp
jo
jle
pop
inc
loop
stos
mov
in
jle
xchg
sar
jg
outsl
pop
mov
pop
jo
addb
ss
hlt
xor
lcall
into
mov
out
icebp
imul
in
aas
hlt
mov
mov
call
testb
mov
fdivp
pop
jbe
loopne
pop
pop
pop
push
adc
or
outsl
hlt
jg
mov
mov
sbb
or
inc
push
mov
jno
decl
mov
pop
add
repz
cmc
fidivrl
call
out
popf
and
imul
outsl
orb
pop
shlb
cmp
and
decl
lret
insb
out
mov
xchg
mov
xchg
bnd
add
ret
call
sar
adc
pop
fiadds
dec
test
leave
sbb
into
dec
into
loopne
jp
jge
mov
in
jne
lret
mov
hlt
pop
adcb
test
pop
fcomp
cwtl
xchg
push
push
cli
call
cli
iret
movsb
fstpl
adc
imul
cmp
push
mov
add
mov
push
pop
fcmovnu
inc
add
clc
and
ljmp
add
inc
pop
jbe
sarl
cltd
jae
xchg
repz
repnz
sbb
mov
das
dec
jg
add
mov
jg
xchg
add
pushl
mov
aam
push
push
fdivl
fildll
out
xor
mov
mov
pushl
js
mov
push
in
inc
stos
inc
sahf
inc
scas
pushf
lea
testl
js
out
test
rolb
pop
popf
inc
push
cmp
stos
xorb
mov
xchg
jno
jle
pop
das
in
jp
testl
out
adc
inc
repz
push
xchg
outsl
xchg
sbb
ljmp
jmp
pop
push
scas
add
jns
adc
jae
jno
sub
or
sbb
xchg
rorb
cmp
sbb
adc
cmp
xchg
shrl
mov
sbb
pop
cli
leave
dec
push
or
jg
mov
pop
es
loopne
mov
and
jbe
pop
jg
inc
movsb
mov
mov
add
sub
adc
xlat
jg
arpl
inc
add
out
lods
lock
sub
jnp
pushl
sarl
mov
cld
test
push
jne
cmp
mov
ja
fmul
or
and
rcl
or
cmp
push
into
shll
and
jg
inc
testl
das
cld
lods
lcall
scas
jecxz
xlat
shrb
mov
push
stos
lcall
std
incl
dec
cwtl
push
mov
scas
daa
pop
dec
xor
adc
pop
ret
ret
inc
icebp
xor
inc
dec
es
fs
ljmp
mov
mov
xor
sbb
decl
sub
int3
mov
mov
xchg
bound
outsb
orl
cmpsb
leave
lcall
dec
jl
pop
mov
rcrl
lcall
xchg
js
inc
stos
test
pop
lds
jle
js
or
gs
xchg
add
jge
inc
aaa
test
leave
push
pop
cmpl
js
mov
mov
scas
fists
adc
adc
jg
push
cmp
or
jae
push
cmp
inc
out
or
jmp
lret
pop
adc
dec
jmp
leave
mov
fstpt
ljmp
inc
mov
pop
and
loope
add
enter
fdivrs
mov
popa
mov
fs
test
pop
inc
push
out
jl
jg
jmp
xor
sub
in
cmp
pop
jae
movsl
pop
mov
and
jmp
xorb
inc
sbb
xlat
nop
jge
pop
in
lea
or
aad
push
fstpt
or
xorb
dec
js
cmp
stos
xchg
mov
mov
mov
jmp
pop
lcall
jg
imul
mul
test
cmp
mov
fucomip
repnz
sahf
jp
cwtl
inc
fnstcw
sti
fiaddl
ja
gs
fs
xchg
inc
jae
jcxz
pop
add
or
stos
xchg
or
or
dec
dec
enter
test
cli
mov
inc
out
sub
in
lods
mov
inc
adc
sub
daa
stos
dec
call
adc
pushl
scas
mov
out
push
daa
fld
cli
jl
cmp
into
mov
xor
lret
jp
jmp
or
and
aaa
add
mov
daa
and
or
xchg
push
ljmp
push
in
pop
inc
push
push
jnp
xor
aaa
and
ljmp
stc
and
inc
jg
insl
pop
and
cmpsl
adc
aaa
pusha
insl
and
daa
sbb
in
add
adc
push
adc
shrl
call
mov
adc
les
popa
scas
sbb
fstpl
pusha
xor
mov
ljmp
pushw
addb
fucomip
push
lahf
dec
or
adc
sbb
decl
cld
push
hlt
pop
fnstsw
pop
jg
inc
rcrb
and
loop
mov
adc
cld
jmp
cmp
pusha
xchg
add
jno
fninit
mov
ljmp
subl
mov
dec
and
ss
enter
lcall
jl
inc
sub
outsl
in
jns
jae
std
dec
pop
jge
popa
dec
decl
std
push
in
inc
add
stc
xchg
adc
inc
and
call
ljmp
fs
ss
subl
lcall
sub
and
xor
inc
cmp
dec
adc
fnsave
inc
ljmp
mov
inc
fstpt
jg
hlt
mov
xor
push
es
emms
jmp
arpl
movups
dec
xor
push
push
xor
inc
cmp
cmp
push
int
std
call
test
adc
cltd
xchg
jb
xchg
mov
lcall
out
imul
jne
push
mov
jo
jns
stc
stos
xchg
imul
cmc
dec
inc
push
pop
pop
dec
push
movsb
idiv
pop
cld
sbb
enter
xor
sbb
lahf
cmp
or
push
ljmp
cld
decl
dec
lret
sub
sub
movsb
aam
push
aam
pusha
cmp
xchg
mov
mov
inc
xchg
movsl
push
cmp
adc
pushf
sbbl
and
cld
or
jge
testl
dec
pusha
mov
shlb
mov
ret
lods
mov
stos
pop
dec
insb
clc
xchg
adc
dec
cltd
inc
call
inc
sub
int
jo
dec
insb
lret
arpl
sub
cmp
pop
fidivrl
mov
or
mov
loopne
rclb
mov
pop
adc
push
cmpsb
add
dec
rcrl
adc
fmul
aam
mov
incl
push
xor
push
rorl
pop
mov
sbb
lcall
sub
push
inc
cmp
pop
popa
inc
call
mov
mov
shll
push
and
inc
mov
std
das
cld
cmp
lret
sub
adc
es
push
outsb
push
mov
cld
pop
inc
das
push
lea
je
test
rcr
add
pop
xor
ljmp
das
push
adc
cmp
sbb
dec
mov
mov
incl
push
push
enter
stos
lods
inc
sub
loope
out
fidivl
cmp
mov
test
mov
in
repz
or
lock
icebp
decl
out
push
mov
pushf
push
dec
fisttps
sub
in
push
shll
adc
xlat
je
loope
adc
outsl
pop
daa
pop
ljmp
sbb
jmp
mulb
push
das
push
sar
and
or
enter
dec
in
fnsave
mov
xchg
sbb
pop
ds
pushf
cmp
pushl
fadds
cwtl
movsb
jp
xchg
jnp
ja
sar
dec
in
jmp
sbb
lret
lock
call
cmpsb
xchg
jb
sbb
bound
inc
sub
outsb
mov
mov
pop
pushl
xor
and
incl
xor
mov
gs
mov
adc
jg
loope
xor
or
sbb
push
outsl
pop
xchg
movsb
sub
scas
sti
mov
xchg
xchg
lods
adcb
mov
dec
xor
push
push
stos
jg
loopne
notl
push
xor
sbb
add
xchg
dec
ljmp
mov
lret
adc
sub
test
ret
lods
lods
std
call
mov
mov
dec
adc
ss
into
mov
cmp
jae
adc
decl
shlb
stc
jg
js
sub
enter
movsb
aad
cld
les
jmp
jg
mov
aam
pop
inc
dec
xor
dec
lcall
cmp
inc
stos
call
cmp
inc
aas
int
jg
xor
aam
xchg
notb
lahf
and
popa
mov
mov
xchg
and
lahf
mov
aaa
inc
inc
inc
sti
xchg
jl
inc
lock
jge
add
pushl
insl
test
test
mov
push
rcrb
mov
scas
or
push
imul
xor
push
add
jne
ljmp
arpl
fcoml
call
loopne
cmp
or
jg
cmp
lds
inc
out
sbb
je
jle
lods
shlb
push
fstpl
popa
cmp
cli
jp
pushf
lret
rcr
or
fwait
popf
adc
adc
xorb
cmpsl
scas
insl
pop
lcall
xchg
xor
jle
sub
inc
push
test
cmp
test
sbb
stos
shl
sti
fnstenv
aad
add
jmp
or
cmp
or
jp
sub
push
add
push
jo
push
mov
mov
add
pop
mov
aad
loopne
or
adc
sbb
cld
mov
dec
dec
push
jb
jg
sbb
sub
xchg
mov
bound
movsl
dec
gs
lret
cmp
inc
xor
lods
ljmp
sub
jmp
lahf
jp
stos
imul
pop
fbstp
adc
add
ret
loopne
push
and
inc
repnz
arpl
gs
inc
incl
lock
push
clc
jo
les
push
mov
bswap
add
pop
fdivrl
inc
incl
cmpsl
leave
mov
cmp
insb
mov
clc
in
add
adc
cmpsb
mov
shlb
sub
insb
lahf
adc
jg
mov
adc
cmp
les
lock
push
lods
repnz
dec
push
mov
mov
dec
mov
insl
or
imul
cli
stc
jp
cmpsl
pop
and
popf
movsb
les
xor
dec
call
call
cmpsb
test
inc
sub
inc
popf
push
dec
outsl
idivl
pop
aad
call
mov
dec
sti
in
scas
sbb
or
ja
mov
push
mov
push
decl
test
cmpb
hlt
sbb
dec
outsl
xchg
add
inc
add
test
mov
clc
incl
cmpb
movb
push
fiadds
jnp
iret
xor
clc
incl
mov
mov
mov
pusha
movsl
dec
and
sar
incl
fcom
or
fs
mov
xlat
push
addr16
outsb
rcl
xor
lods
decb
mov
out
adc
mov
out
fs
mov
incl
cmpl
test
mov
out
incl
xchg
inc
or
or
sahf
and
lahf
out
mov
lcall
inc
int
pop
dec
movsl
inc
sbb
or
push
test
pusha
adcb
xlat
push
jmp
jo
mov
xor
fs
rcrl
out
cmp
std
mov
fists
pushl
clc
cld
sbb
je
add
xchg
adc
mov
mov
ljmp
xchg
addl
sbbb
or
arpl
cmpsl
xchg
into
cwtl
sbb
std
das
mov
repz
aas
into
lret
xor
mov
into
fldt
push
negb
or
lcall
incl
xor
adc
mov
sbb
mov
pop
and
xchg
cs
pushl
mov
push
pop
add
insb
daa
ljmp
scas
adc
xor
cld
insl
bound
scas
decl
inc
pop
push
ja
push
adc
std
push
pop
sbb
lahf
mov
mov
adc
popf
addr16
ror
push
clc
cld
adcl
cli
out
mov
inc
and
dec
fdivrl
movsb
daa
cmc
or
repz
das
lock
push
leave
mov
ret
mov
ds
in
cli
hlt
sar
sar
adc
mov
dec
pop
mov
jo
dec
and
jns
jg
inc
loop
pop
add
arpl
and
fists
jg
cmpb
in
xchg
mov
sbb
mov
in
aam
fisttps
jmp
jae
xchg
nop
add
imul
or
addr16
in
jecxz
mov
stos
decl
int3
fsubrs
inc
loopne
mov
push
mov
inc
dec
add
jge
cmp
mulb
inc
push
xchg
xchg
es
into
or
sub
hlt
add
push
imul
lcall
adc
inc
cmp
aaa
insb
cld
pop
cli
incl
icebp
mov
sbb
test
push
mov
decl
into
imul
cltd
iret
jmp
cmc
ds
and
sub
add
sbb
stc
outsw
adc
call
sub
mov
ljmp
and
out
out
pop
xor
inc
fiaddl
mov
cwtl
lret
test
lcall
inc
mov
or
aam
leave
data16
std
jg
mov
push
shll
inc
sub
jle
lahf
jmp
inc
jmp
jp
cmp
sub
out
fwait
std
fsubs
rolb
jl
cli
or
push
outsl
mov
cmp
ljmp
icebp
fildll
and
xchg
fsubs
pop
popw
movsb
push
mov
jbe
jp
movsl
adc
add
dec
testb
xchg
shll
jbe
cmpsl
scas
inc
adc
cmp
push
push
push
mov
xchg
arpl
inc
popf
lods
pop
enter
cmpsb
mov
xchg
mov
shll
add
mov
ljmp
lock
clc
outsb
mov
icebp
and
hlt
mov
int
and
inc
pushl
xchg
mov
ss
jbe
into
daa
repnz
jecxz
fsub
mov
std
das
mov
aam
rcll
mov
sbb
jb
call
insb
iret
push
jae
push
ror
sub
aaa
out
sub
push
cmpb
mov
addb
lahf
pop
xlat
shrb
lea
lock
out
mov
stos
jl
cmp
ds
test
int3
xchg
scas
insl
mul
sub
sub
call
jg
inc
das
test
ret
sub
jbe
out
pop
xor
or
fadd
das
std
jmp
fmuls
ret
adc
cmp
mov
and
mov
add
cmp
in
fadds
stc
hlt
fistps
mov
shll
call
jp
decl
inc
xchg
lahf
push
cmpsl
mov
inc
lcall
cld
ljmp
jb
das
rcrb
xchg
lods
int
jae
popf
or
fildll
aad
xchg
notl
clc
jg
loop
aas
lcall
lock
dec
add
repz
gs
adc
leave
and
das
icebp
dec
add
fwait
add
cmp
mov
mov
xchg
lret
pushl
icebp
jl
add
dec
add
outsl
sub
ret
inc
mov
movsl
lcall
stos
ret
xchg
mov
sub
mov
pop
jnp
adc
push
mov
inc
mov
inc
xor
sti
jecxz
cmpb
dec
rcll
cmp
aaa
pop
aad
jmp
xor
sub
adc
jg
imul
push
out
push
call
inc
outsb
rcl
sar
jmp
into
leave
dec
mov
jmp
mov
jnp
mov
mov
sub
add
incl
adc
add
pushf
test
dec
aam
out
not
pop
stos
or
sbb
fnstsw
lcall
dec
fbstp
mov
shll
mov
push
popa
in
punpckhdq
ja
jp
icebp
jg
mov
leave
rcrb
xor
mov
int
out
dec
mov
inc
in
ljmp
jno
jo
lcall
lea
mov
or
jg
add
xchg
jl
cltd
xchg
xchg
pop
lock
mov
add
decl
icebp
scas
push
push
dec
out
pop
scas
pop
dec
mov
push
cmp
push
ljmp
aad
shrl
out
cld
movsbl
push
movsb
adc
in
ds
inc
inc
fstpl
jg
inc
jbe
fwait
bound
lods
jo
lcall
inc
or
popf
adc
push
jbe
test
push
pop
mov
jmp
shlb
sbb
out
in
incl
inc
int3
mov
adc
loope
xor
jmp
cmp
push
mov
das
adc
outsl
pop
mov
mov
les
or
mov
jmp
mov
dec
jb
sarl
or
lret
mov
xor
xchg
inc
roll
mov
cmp
mov
jg
or
rcrb
mov
es
lock
ljmp
pop
jge
mov
pop
ja
fmul
sahf
mov
sub
mov
lock
es
lcall
xlat
jae
push
mov
jg
mov
sub
or
pushf
outsl
inc
aam
mov
jnp
mov
ret
and
or
mov
cmp
stos
jp
ss
pop
jo
in
and
mov
sbb
cmp
mov
inc
dec
jp
cmc
aam
jmp
cmp
sbb
inc
mov
cmpsb
mov
jg
out
mov
mov
cmp
push
xor
mov
xchg
xor
fbld
jecxz
mov
cli
jnp
aam
push
dec
mov
xlat
adc
idiv
decl
fldl
jmp
dec
ret
cli
dec
outsb
pop
add
pusha
jbe
std
or
call
jmp
inc
stc
fcoml
nop
in
js
or
inc
jb
inc
mov
rcrl
cmpsl
out
sbb
mov
sbb
mov
test
xor
xchg
mov
fsts
xor
stos
jb
insl
lds
cmp
repnz
mov
ljmp
jg
pusha
mov
adcb
sub
xchg
aas
mov
dec
movsl
and
jp
hlt
decl
mov
sahf
or
rorb
jmp
shll
sbb
sbb
xor
and
sub
pop
push
sbb
mov
mov
mov
js
mov
mov
ss
fstps
fucomip
or
test
adc
cs
sbb
or
call
fs
inc
leave
mov
nop
jbe
std
and
xor
int3
cmp
cli
fdivs
les
movsb
push
or
inc
add
mov
jmp
mov
adc
shll
cli
dec
adc
cmp
aam
gs
jecxz
decl
mov
mov
inc
sahf
xor
cmp
ljmp
xchg
add
add
pop
bound
pop
pop
cmpsb
jg
and
popa
pop
repnz
mov
lcall
je
pop
aaa
enter
movsl
mov
sub
in
and
fld
sti
fists
push
xchg
jae
repz
imul
sti
xor
mov
mov
int
mov
ljmp
dec
out
cmp
lcall
cltd
shll
push
ja
mov
inc
jmp
or
mov
shlb
sbbb
nop
dec
sahf
jmp
jb
and
popf
rcrl
inc
std
incl
adc
data16
movups
add
xchg
cld
jmp
ror
mov
xchg
fisttps
push
int
adc
dec
incl
lods
sbb
add
and
cmpsb
xchg
cs
ljmp
testb
addr16
aaa
je
outsl
xor
icebp
cmc
xor
in
sub
mov
pop
clc
decl
mov
cmp
out
ret
fsubp
aam
and
outsb
ja
add
xor
or
or
sbb
outsb
xlat
add
jl
lret
pushf
icebp
inc
dec
push
jg
add
shll
sub
out
stc
sti
or
in
fmull
and
xchg
inc
test
mov
mov
cld
popa
sbb
in
aam
fcoml
cmp
ljmp
js
mov
in
inc
cmp
add
jns
call
out
adc
push
add
pusha
add
jmp
rcrl
push
loop
cmp
nop
dec
int
dec
mov
cs
int
and
into
sbb
cmp
push
aad
jmp
pop
clc
push
sbbb
xlat
jle
xor
notb
xor
push
lret
das
adc
jg
mov
imul
dec
loope
mov
fsubr
ljmp
xor
fistps
div
dec
push
lret
stos
pop
sub
lods
ljmp
dec
rorl
cmpsl
mov
inc
jnp
sarl
or
lods
fdivl
adc
jbe
in
incl
jmp
pop
es
loop
sbb
sti
jg
cwtl
into
jl
fucomip
cmp
jne
fwait
xchg
lds
testb
or
inc
xchg
lods
aam
ffreep
jne
mov
test
orb
in
test
mov
pushl
jp
aad
adc
mov
dec
cmp
cld
outsl
std
or
mov
scas
idiv
push
pop
pop
pop
lea
inc
cwtl
dec
movsl
lahf
push
adc
dec
cmp
in
arpl
ljmp
repz
sub
int3
push
xor
push
outsb
insb
cmc
adc
push
movsl
mov
ljmp
ss
xchg
cmpsl
xlat
test
push
out
or
sar
fidivs
add
cmp
outsl
mov
xlat
int3
incl
mov
sbb
xchg
cmpsb
xchg
aas
lods
loop
push
hlt
mov
fadds
incl
shrb
mov
jge
jg
add
cli
mov
or
mov
scas
ljmp
or
aaa
adc
jp
ss
and
hlt
push
fnstsw
sarl
incl
aaa
push
dec
stc
xchg
xor
popl
xor
pop
cmp
std
aaa
incl
testb
psubusw
scas
cmpsl
mov
icebp
xor
push
mov
ljmp
jo
scas
pop
xor
push
jno
outsl
xchg
xor
pop
call
loope
push
clc
subl
fsubl
pushl
cs
gs
pop
lahf
sbb
stos
push
add
adc
jle
ficompl
mov
jo
cmc
and
sub
fsubrl
aad
sub
call
mov
sbb
int
jp
outsl
js
shl
mov
push
mov
jae
in
inc
mov
fildll
ljmp
inc
sbb
xor
bound
xor
lcall
sub
cmpsb
loopne
inc
xor
pop
int3
stc
pop
pop
push
push
jge
mov
in
sbb
inc
mov
dec
clc
jo
mov
decl
mov
push
mov
lea
push
incl
sub
into
std
icebp
addl
mov
push
icebp
inc
mov
in
dec
or
mov
mov
cmp
lds
add
or
adc
add
mov
repz
bound
pop
out
mov
outsl
movsl
repz
decl
cmp
push
add
test
lods
rclb
mov
out
add
lock
adc
leave
sbb
ljmp
mov
into
push
out
xchg
push
pop
scas
movsb
jg
push
add
out
jp
imul
jmp
insb
cli
pop
adc
mov
mov
push
aaa
push
or
xchg
imul
inc
mov
repz
and
and
mov
mov
bound
std
jle
out
andb
ljmp
cmc
jmp
movsb
int
cmp
scas
mov
inc
inc
push
aas
in
aas
mov
mov
ljmp
in
lock
push
push
push
mov
outsl
enter
lcall
push
and
xchg
cli
xchg
lds
xchg
add
arpl
outsl
cld
xchg
sbb
inc
out
call
flds
push
fidivl
lock
jne
das
cld
popa
filds
sbb
pusha
ljmp
outsl
sub
pop
adcl
out
jno
adc
xchg
mov
imul
mov
inc
ja
mov
mov
mov
cmp
or
mov
movsb
mov
mov
or
or
inc
adc
cli
pop
aad
fstl
xchg
sbb
lcall
pop
lock
pop
test
mov
cs
aam
test
and
dec
inc
jl
push
fsubs
movsl
incl
mov
aam
mov
hlt
inc
sub
xchg
jmp
or
std
add
pusha
adc
outsb
sub
insl
ljmp
rclb
cli
call
fcompl
push
jmp
jb
pop
fnsave
jg
xchg
inc
mov
sbb
sub
or
outsb
xor
dec
testl
aad
fnstenv
sarb
cltd
decl
dec
jno
mov
push
jo
lea
loop
xchg
pop
jno
pop
mov
ret
pop
pusha
cmp
lcall
decl
xchg
dec
xchg
xchg
out
jge
push
popf
pop
into
shll
je
lret
mov
mov
fidivs
cmpl
insl
out
scas
push
jo
mov
jbe,pt
dec
dec
sti
lret
out
popa
outsl
pop
repnz
repnz
lret
or
lcallw
jp
aaa
xchg
sti
and
repnz
rclb
sbb
das
mov
mov
stc
mov
xchg
pop
push
xor
loop
fisubl
mov
pop
lcall
or
popa
in
orb
cmc
mov
out
push
jg
jno
jmp
pop
fidivs
push
jno
and
cmp
xor
test
pop
ljmp
xchg
das
adcl
xchg
les
mov
gs
jo
mov
mov
les
sub
imul
das
adc
sbbb
mov
ss
mov
mov
rcl
sbb
gs
mov
jno
fcoml
std
mov
jp
cli
xor
cmp
push
fldcw
sub
lock
call
mov
jno
add
rcll
sub
push
jle
pop
pop
mov
out
push
xor
ror
push
fs
cli
lcall
mov
gs
outsb
decb
lods
in
xchg
mov
or
stos
mov
insl
ljmp
iret
sbb
adc
pop
cwtl
outsb
push
fs
ljmp
insb
addb
insl
ret
scas
faddl
push
fs
test
add
movsb
int3
out
push
mov
ljmp
xor
mov
sub
je
sbb
cli
negb
call
wbinvd
outsb
rolb
cmp
mov
mov
mov
into
adc
movsb
push
cli
mov
mov
daa
movsb
xor
adc
fidivs
jmp
mov
lret
cmp
push
loope
in
dec
hlt
std
insb
mov
mov
cmpsl
dec
dec
sar
add
ljmp
fwait
push
inc
loope
mov
mov
push
dec
jnp
mov
adc
incl
decl
mov
movsl
dec
cmp
pop
pop
mov
arpl
cmp
aad
clc
call
enter
inc
hlt
push
pop
mov
arpl
aam
test
test
fwait
sbb
inc
pushl
cmp
lret
ss
xor
dec
or
jnp
int3
mov
or
sti
and
loopne
jge
push
repnz
fbstp
das
cmc
pop
fcoms
jmp
add
pop
cmp
mov
cld
dec
xchg
xor
xchg
enter
xchg
pxor
or
aaa
ljmp
loopne
fadd
test
lock
pop
leave
cmpb
cs
in
outsl
inc
mov
outsl
hlt
das
adc
repnz
inc
stos
subl
std
scas
fs
fistpl
sub
cltd
mov
push
cld
and
iret
pushf
adc
mov
lret
pop
jecxz
mov
iret
dec
inc
out
addr16
clc
mov
mov
lock
xchg
andb
into
leave
push
call
cld
jmp
das
dec
pop
clc
inc
sbb
add
and
jle
sbb
decl
jge
xor
push
inc
fidivrs
pop
cli
jmp
sub
jb
lret
jg
insb
mov
lock
lods
gs
sub
pop
dec
mov
enter
sub
jmp
jo
cwtl
rol
jmp
mov
jmp
add
jb
jecxz
je
sbb
popa
sbb
insl
xchg
add
mov
pushl
xchg
outsl
es
dec
jae
pop
in
test
test
lcall
fcoml
pushl
push
jmp
mov
sbb
imulb
jnp
and
or
insl
loop
fstpt
fwait
ljmp
mov
cmp
jmp
in
mov
mov
jnp
or
test
push
lcall
sar
movsl
addb
test
mov
ljmp
fists
push
sti
pop
or
fists
add
mov
mov
mov
bound
xchg
jg
cmp
ret
leave
ret
int
mov
je
fisttpll
std
xor
mov
add
jmp
fdivrs
xchg
inc
call
push
xchg
test
push
mov
or
jmp
xchg
push
popa
es
fcomps
aas
sbb
cmp
es
push
fidivs
lcall
std
out
sahf
and
adc
data16
push
mov
std
mov
pushf
test
aam
adc
and
push
enter
dec
subl
jle
cmpsb
push
test
ds
pop
jmp
test
repz
mov
and
cli
jmp
and
jno
jge
dec
sbb
std
imul
imul
lock
incl
out
popa
and
lods
nop
faddl
lds
push
mov
lods
jg
mov
push
dec
mov
mov
daa
std
sub
xchg
xor
hlt
hlt
call
incl
push
enter
ret
adc
data16
inc
inc
aam
xchg
sarb
rcll
xor
adc
ljmp
pop
add
pop
fstps
cltd
sbb
mov
sub
test
outsb
jge
mov
add
jb
or
inc
cli
jb
in
in
and
adc
adc
mov
xchg
int3
js
mov
push
sarb
or
inc
in
pushf
lret
adc
xor
mov
sbb
dec
add
aam
dec
jp
iret
sbb
es
lock
cs
decl
add
mov
dec
cli
hlt
sub
loop
in
jmp
movsl
divl
inc
pusha
out
cmp
xchg
mov
pop
clc
mov
adc
adc
mov
lret
mov
jg
pop
cmpsl
hlt
xchg
push
sub
cmpsl
lcall
sub
js
jl
mov
cmpsl
stc
movsl
sahf
gs
sarl
inc
cs
call
xrelease
push
pop
xor
inc
dec
pop
push
cmp
sub
pop
loop
cmpsl
test
pop
test
cmp
dec
inc
pushl
sub
out
or
mov
je
or
jge
mov
cmp
je
mov
out
inc
pop
aaa
cs
incl
rorb
push
gs
loopne
mov
add
fwait
cmc
add
leave
popf
cmpl
push
inc
repz
jo
shl
ja
push
add
imul
movsl
pop
ljmp
call
rcrl
iret
and
pop
popf
push
das
icebp
call
pop
out
fadd
mov
movsl
out
cli
cltd
push
call
mov
lcall
mov
inc
testl
push
les
or
jmp
push
stc
add
shr
pusha
push
sbb
or
xchg
add
sahf
outsl
std
jg
jb
bound
xor
sbb
mov
and
pop
cltd
push
adc
and
decl
jo
int
jb
mov
out
cmpsb
push
mov
mov
leave
mov
sbb
scas
rcrl
jmp
fs
in
push
or
mov
add
cmp
mov
into
adc
jmp
xchg
or
xor
dec
subb
push
rcrl
in
and
stos
mov
mul
test
loopne
xchg
cmp
cmpsb
ror
call
dec
sub
pop
ss
in
int3
cmpsb
ror
jle
jg
jp
aaa
out
cmp
xor
testl
scas
imul
call
dec
xchg
test
mov
mov
push
imul
add
fs
push
call
pop
cmp
out
outsl
shll
pop
sti
adc
pop
cmpsb
xor
jmp
xor
call
inc
cld
sub
sbb
test
mov
add
std
gs
das
in
sti
pop
call
mov
push
jmp
dec
push
push
jg
test
js
mov
icebp
mov
movsb
mov
das
dec
push
inc
mov
in
test
in
das
mov
xlat
test
daa
jnp
loop
test
sbb
ret
in
ljmp
decb
cltd
jne
mov
xchg
sar
xchg
add
adc
cs
mov
inc
es
lock
and
and
lahf
sbb
mov
jnp
push
inc
int
pushl
gs
fadds
mov
addr16
cmp
popf
repnz
dec
incl
sbb
pusha
mov
iret
inc
push
mov
mov
push
jmp
call
cli
aad
test
or
shll
inc
je
mov
cltd
or
aas
sub
and
push
aam
or
pop
addl
inc
cld
mov
adc
inc
lret
fwait
enter
add
add
decl
cld
das
adc
xchg
inc
in
mov
into
sbb
call
fs
inc
loopne
lea
loop
out
add
enter
jno
jg
add
cmpsb
add
add
shlb
mov
xchg
adc
cmp
mov
icebp
mov
mov
jo
dec
or
dec
mov
xor
sub
incl
leave
shrl
xor
sbb
adc
pusha
cmpsl
iret
enter
push
add
in
cld
call
ror
add
pop
aam
adc
insb
or
xchg
inc
dec
push
jge
xchg
push
jl
inc
rcrl
adc
outsb
xor
sub
je
outsl
and
movb
lret
shlb
fucomip
incl
call
xchg
jo
xchg
icebp
sbb
hlt
jg
sbb
jmp
cld
cmpsb
ljmp
mov
movsb
test
ljmp
sbb
pop
xchg
addr16
xor
std
incl
aad
push
into
in
fsubl
js
repz
inc
loope
mov
mov
cs
lcall
jb
cmc
mov
cmp
adc
daa
add
cmc
xchg
clc
aas
mov
repnz
dec
enter
imul
dec
jns
or
adc
mov
xchg
sub
mov
aad
movsl
js
xchg
loope
push
push
sbb
jmp
dec
scas
loope
push
pushl
pop
lret
stos
pop
mov
push
jmp
xchg
mov
xlat
push
push
or
out
lahf
pushf
dec
add
jmp
cwtl
jg
movsl
add
and
sarb
lcall
inc
jo
es
dec
je
cmpsl
out
dec
movsb
icebp
lcall
rorl
mov
push
inc
std
cmp
loop
pop
adc
push
fstpt
pop
loopne
jle
add
pop
push
fisubs
xchg
cltd
cmc
inc
mov
outsl
push
adc
lea
mov
or
not
or
ljmp
std
ret
add
imul
sub
shl
mov
cli
lcall
xor
xchg
dec
cmp
repz
repz
mov
rcrl
cs
mov
mov
loope
push
jnp
and
test
pushl
dec
pop
mov
jmp
cs
pop
cli
pop
imul
add
dec
or
add
cmc
mov
mov
inc
icebp
shrl
xor
fmuls
insl
lea
jge
mov
pop
cmp
or
dec
cmp
xchg
sub
pop
xchg
or
pushf
in
call
decb
cld
pushl
in
mov
scas
aam
test
push
jns
add
in
imul
cld
aaa
jmp
push
cs
or
in
cld
xor
sbb
jg
movsb
jmp
pop
jle
lret
stos
jbe
xor
adc
mov
cmp
add
mov
inc
fs
jae
push
ret
fcos
ljmp
hlt
adc
shl
sarb
ss
xor
pop
jmp
xchg
call
mov
mov
cmp
scas
aad
scas
cmc
dec
into
mov
fisttps
push
sub
dec
jge
in
inc
mov
test
jns
ds
das
std
jg
ficoml
roll
sub
jg
fucomip
insb
dec
inc
imul
xor
cmp
jle
test
mov
clc
fbld
bound
pop
sub
cmpsb
leave
ficompl
add
xchg
pop
inc
cmc
ret
lcall
mov
pop
xchg
pop
jg
pushl
fisubrs
add
xor
pushf
stc
and
adc
pop
stos
cli
popl
sub
test
cmpsb
adc
pop
mov
data16
movsl
jmp
ja
or
imul
lcall
push
imul
xor
nop
mov
xchg
lcall
mov
inc
iret
in
add
lea
sub
cmp
mov
inc
cmp
mov
xor
lds
call
cmpb
xchg
push
xor
scas
inc
pop
call
xchg
dec
add
lcall
lret
enter
ljmp
pushf
fwait
pop
sub
test
jns
dec
add
pop
xor
push
pop
mov
inc
fs
xor
mov
jle
mov
orl
dec
fnstsw
mov
adc
stos
dec
in
xor
out
inc
cmp
fcos
jmp
mov
jecxz
adc
out
scas
inc
jae
sar
sub
sub
int3
mov
jns
sub
cltd
xor
insl
or
push
inc
xchg
mov
adc
mov
or
or
loopne
lods
sarb
adc
test
cmpsl
mov
jmp
xor
dec
push
sti
repnz
sub
hlt
inc
adc
clc
inc
hlt
gs
pop
out
incl
call
js
dec
lret
mov
xorl
dec
sbb
decl
mov
jnp
clc
outsb
pop
xchg
pop
pusha
xor
out
sbb
mov
shll
rcrb
inc
enter
xrelease
sbb
cs
jmp
repz
addr16
ljmp
cmc
mov
xchg
sub
imul
pop
fstpl
pop
lret
add
aad
call
addr16
mov
test
sahf
mov
mov
addl
push
pop
into
lret
lret
sbb
mov
mov
fisttpll
push
addb
inc
leave
dec
push
jns
push
in
iret
inc
ljmp
stc
rcll
pop
adc
out
sti
push
popa
lret
mov
cmpsl
repnz
mov
scas
cmp
sub
sbb
fnstenv
jb
adc
outsl
rorl
rcr
dec
ret
ds
add
pop
adc
jmp
incl
mov
out
hlt
test
inc
scas
and
pop
jns
mov
push
push
mov
mov
inc
movsl
jecxz
stc
outsl
shl
jmp
daa
loopne
aad
add
incl
lea
xchg
loop
xchg
repnz
xlat
and
cmp
loope
loopne
outsl
lock
rorl
and
decl
rorb
movsl
and
jne
daa
sti
jle
dec
iret
jb
and
stos
mov
push
les
ds
data16
push
sti
pushf
dec
and
loope
lcall
mov
fs
into
push
shlb
xchg
lock
inc
mov
add
cmpsl
inc
mov
adc
sahf
inc
outsb
mov
fldt
test
in
out
inc
push
or
push
je
xor
rcrl
and
xor
push
lea
cwtl
outsl
std
mov
imul
and
mov
ljmp
xlat
bnd
mulb
dec
jl
xor
es
in
imul
mov
imul
push
cli
or
aas
popa
sbb
mov
sub
rcrl
pop
push
idiv
cvtps2pd
mov
or
dec
lock
sub
dec
lahf
adc
jg
jb
jmp
gs
negl
pop
lods
sub
cmp
push
decl
jmp
mov
out
or
dec
pop
mov
call
lods
outsl
pop
aaa
testb
jl
adc
mull
shlb
subl
daa
inc
lcall
or
out
and
add
clc
into
mov
cltd
rorb
test
incl
push
fsts
mov
sub
sub
cmp
pop
int
lcall
jle
dec
and
jmp
test
aam
add
jmp
mov
lret
cmp
ja
cmc
movsl
xchg
sub
mov
icebp
idiv
or
and
sub
add
lret
pop
icebp
icebp
mov
movsb
std
cmp
inc
cmp
cltd
fstpl
dec
leave
adc
sub
ljmp
or
inc
mov
ss
out
pop
xor
cmc
dec
sahf
pop
je
jg
sti
stos
mov
cltd
jmp
enter
adc
cld
cmc
faddl
jmp
hlt
ljmp
mov
in
cmp
inc
jne
lds
vshufpd
call
sbb
test
cld
jo
cmp
mov
mov
sub
mov
mov
dec
gs
scas
xor
lea
incl
push
jge
jmp
ja
movsl
add
sbb
xor
inc
jmp
and
mov
fs
inc
inc
and
mov
pop
jp
ljmp
and
jb
push
adc
push
idivb
inc
mov
rolb
cmpsb
add
fidivl
dec
inc
xchg
add
lock
arpl
mov
dec
test
nop
mov
data16
sbb
cmp
or
inc
adc
mov
pusha
test
or
inc
ret
or
sbb
ljmp
adc
mov
push
scas
shll
sub
imul
mov
outsl
cld
or
or
ljmp
jmp
lret
sbb
pop
clc
push
pop
loopne
lods
and
shlb
bound
dec
cld
enter
loop
jb
hlt
shll
dec
mov
pop
ljmp
mov
pop
iret
mov
jae
and
xchg
in
push
les
mov
xor
push
dec
and
test
add
adc
lods
sti
inc
push
int3
push
int3
fidivs
loop
jg
mov
jns
cltd
pop
sarb
shll
das
pop
icebp
ror
or
dec
pushl
add
sbb
xor
insl
inc
mov
xchg
xor
imul
and
fucomip
lcall
mov
xchg
add
jle
xchg
jg
sbb
loope
das
nop
pop
dec
out
rclb
jno
jnp
or
orl
lret
adc
pushf
xchg
cmpsb
push
cs
and
inc
push
jae
xchg
shlb
cmpsl
out
mov
jg
lods
xchg
insb
xor
imul
or
adc
inc
inc
xchg
sbb
dec
lret
mov
adc
lcall
jge
jno
mov
bound
mov
test
cltd
jle
adc
jnp
push
cwtl
fs
and
xor
sbb
mov
and
loop
call
or
ret
jle
mov
ljmp
pop
jo
fsub
mov
leave
cmp
xorl
fcmovnu
addl
and
jg
test
mov
jbe
lcall
push
jo
scas
and
cmp
cmc
pop
andb
inc
mov
add
pop
cli
pusha
xchg
or
sbb
rclb
fwait
inc
ljmp
inc
sarb
subl
push
xchg
mov
dec
sub
or
push
popa
test
mov
fwait
rorl
mov
cmc
xchg
clc
pushl
rcrb
sarb
push
and
jno
pushf
ljmp
mov
les
out
loope
in
scas
in
ret
orl
inc
pop
sbbb
jg
push
sbb
jb
pop
scas
lahf
xor
int3
push
es
stos
inc
sub
pop
cli
xchg
insl
jns
sbb
fstp
or
out
out
or
inc
or
incl
sub
lcall
clc
cmp
aas
les
fsubr
inc
jle
imul
jecxz
lcall
hlt
out
stos
pop
inc
int3
add
dec
pop
into
mov
in
test
jg
xor
jg
iret
push
adc
call
fldcw
xchg
pushl
icebp
and
gs
shll
inc
mov
call
mov
inc
lcall
xchg
pop
outsb
sub
dec
iret
stos
mov
cmp
mov
mov
aam
fldcw
outsl
daa
push
ret
popw
sub
test
je
ljmp
lcall
js
sbb
mov
fs
out
mov
fcmovbe
mov
shll
inc
jmp
xor
push
sbb
ljmp
or
adc
sub
inc
push
pop
in
repz
push
adc
jecxz
out
in
sub
xor
dec
add
sub
in
fucomi
mov
xor
fdivs
ljmp
loop
cmp
pushl
popa
add
sub
fnsave
and
pop
mov
push
ljmp
cmc
cmp
and
push
lret
mov
mov
sub
mov
pop
je
sub
add
pop
cmpb
outsb
inc
filds
test
cmpb
movsb
decl
push
push
dec
push
pop
and
push
insl
pop
leave
inc
xchg
or
pushl
rcpps
push
lcall
mov
sbb
sub
ljmp
je
data16
mov
test
sub
cltd
imul
sahf
dec
mov
pop
das
and
ljmp
in
ret
rep
pop
insl
movsl
push
sub
jo
push
pop
mov
ror
mov
mov
imul
es
pushl
cmpsb
hlt
cmp
ja
pushf
and
fisubrs
pop
scas
lods
int
add
pushl
out
nop
aam
adc
mov
lock
out
inc
fists
fs
mov
adc
push
inc
addb
jo
mov
sub
jle
call
insl
mov
notl
decl
mov
repz
mov
mov
call
stos
pushf
mov
incl
xor
ja
imull
mov
adc
mov
jge
jb
outsb
mov
jmp
cmp
jg
je
pushf
lcall
mov
mov
mov
fildll
out
decl
and
dec
xchg
gs
add
sub
ss
jmp
das
std
fisubrl
pusha
int
add
lcall
or
das
icebp
jmp
shrl
arpl
rcrl
push
pop
jp
decl
jmp
jp
adc
sbb
or
mov
call
mov
jg
push
mov
cmp
xor
popf
js
or
mov
shll
or
ja
icebp
dec
into
std
dec
cmp
fidivrl
adc
sub
push
push
sub
cmpsl
adc
bound
mov
push
mov
lods
das
sbb
mov
jg
push
in
cmp
and
in
cmp
outsb
cli
lods
mov
dec
xchg
push
das
movsb
inc
pop
jne
adc
aas
cltd
mov
pop
sub
test
cld
push
and
cld
jne
cmp
or
xchg
repz
dec
add
xor
mov
into
and
jle
xchg
aad
fidivrs
or
xchg
mov
mov
lds
ljmp
enter
rol
stc
cmp
jnp
shll
pop
ret
outsb
sbb
inc
xchg
stos
cld
dec
call
popa
popf
dec
cmc
pop
jecxz
mov
sbb
fwait
in
cs
mov
into
popa
mov
decb
pand
mov
lods
shll
outsl
inc
add
incl
inc
and
rol
add
repz
mov
iret
jg
inc
lods
ficomps
movsb
lds
adc
ljmp
pop
xor
jge
cmp
aam
pop
ja
clc
mov
or
in
loopne
fisubl
inc
decl
clc
mov
adc
ljmp
rcl
call
cli
cmpsb
xchg
xchg
cld
inc
bound
sub
int3
dec
neg
lsl
jle
push
imulb
jg
inc
and
push
mov
and
stos
xor
hlt
ljmp
pop
xor
cli
jae
pop
test
mov
mov
hlt
adc
nop
adc
test
in
loop
dec
jg
xchg
lods
loope
jg
js
jmp
mov
add
mov
mov
mov
aam
and
or
mov
xchg
imul
jl
shrl
scas
out
scas
mov
dec
sahf
inc
pop
cltd
mov
outsb
repz
incl
cld
and
xor
jno
mov
ret
in
lods
lods
adc
inc
cmp
in
sub
xlat
shlb
jl
pop
mov
dec
mov
loope
je
dec
dec
sub
idivl
add
add
stos
and
mov
cmovae
push
arpl
cwtl
mov
mov
out
mov
sbb
inc
cmc
adc
push
pop
std
loopne
cmpsb
sti
pop
jl
adc
mov
jnp
sbb
pop
data16
push
lds
push
pop
cld
mov
mov
enter
clc
adc
xchg
sti
hlt
cmp
std
xchg
or
mov
dec
pop
sbb
push
call
push
jne
clc
xor
ret
and
imul
mov
mov
mov
mov
cmpsl
cmp
or
dec
shrb
out
add
mov
pop
inc
ja
lds
inc
xor
lods
dec
std
imul
add
inc
inc
add
js
imul
cmp
adcl
add
mov
sbb
xchg
pop
lods
or
xor
or
testb
fsubr
adc
pop
andb
js
cld
scas
orl
mov
mov
xor
stos
cmc
scas
cmpsl
cmpsl
jg
icebp
decl
sub
cmp
pusha
les
cmp
push
inc
iret
test
push
adc
and
ljmp
es
add
faddl
sarl
ret
sub
fimuls
add
mov
adc
lea
shr
clc
ljmp
or
add
and
xor
adc
xchg
push
ljmp
call
mov
or
push
test
adc
xlat
jg
jo
add
nop
and
dec
xor
rolb
in
popf
push
popa
sbb
outsb
ljmp
mov
insl
adc
mov
cld
loop
test
rcl
add
insb
test
mov
mov
sbbb
mov
jg
test
pop
hlt
fcoml
jg
repz
mov
xor
dec
test
pop
cld
popf
in
cld
ss
push
push
jbe
mov
insl
mov
dec
xor
sub
and
aas
jne
dec
icebp
xchg
lods
sub
inc
leave
cmc
mov
inc
jmp
shlb
leave
jns
mov
imul
add
sar
mov
sbb
xor
icebp
mov
add
cli
decl
repnz
dec
scas
call
dec
ja
cltd
xchg
xchg
inc
imul
push
jbe
cwtl
pop
lcall
jmp
jns
lret
add
jo
notb
cmpsb
sahf
xlat
add
ja
lods
jl
fwait
pop
ret
adcl
fsub
pop
ret
repnz
les
jno
push
xlat
pop
mov
incl
cmpsl
outsl
cltd
mov
and
push
mov
test
pop
mov
jl
pop
inc
inc
add
and
mov
mov
into
test
cmpsl
in
fwait
or
xchg
jbe
in
movsl
jo
cmc
lods
mov
insl
das
fucom
dec
push
and
js
mov
adc
ljmp
xor
mov
and
ror
xchg
sbb
dec
nop
pushl
and
movsl
outsl
stc
lock
ljmp
pop
test
cmp
pop
aas
xor
mov
cmpsb
repz
push
test
stos
sbb
adc
dec
inc
ljmp
adc
pop
lock
adc
mov
lods
mov
test
jmp
jns
push
js
mov
dec
mov
cmp
test
pop
mov
ljmp
add
enter
loop
mov
and
popa
cmp
stos
mov
pop
loop
into
mov
ja
out
cmp
xchg
pop
or
call
popa
mov
cmp
adc
daa
ljmp
lods
aaa
xor
loopne
or
mov
push
loop
hlt
sub
out
cltd
scas
bound
fsubrl
mov
jp
and
pop
add
fistpl
and
call
or
aas
addr16
and
arpl
loope
insl
aad
aam
or
inc
dec
mov
sub
push
movsb
sbb
stos
insb
dec
mov
mov
and
pop
shl
out
push
push
fsubrl
jmp
push
pop
insb
fs
clc
movsl
repnz
sbb
jo
jne
adcb
inc
pop
dec
mov
ljmp
adc
cmp
add
jg
decl
data16
cmp
scas
movsl
cmc
and
adc
mov
loope
xlat
pop
incl
push
sub
sub
cmp
sti
repz
add
fsts
push
sub
xor
xchg
aaa
cli
push
lcall
or
mov
je
or
test
sti
ljmp
jne
sbb
mov
push
cmpsl
imul
ljmp
std
lods
movsl
inc
sub
sub
sbb
fdivl
aaa
repz
ljmp
cld
jmp
jo
pop
es
mov
jecxz
incb
mov
push
mov
pop
mov
int
shl
push
mov
pop
mov
xchg
insb
lods
push
jmp
mov
pop
sub
lea
imul
ljmp
mov
nop
es
mov
cmp
cs
lcall
sbb
inc
cmp
mov
sub
mov
push
inc
mov
mov
fildll
rcrb
push
popf
je
jmp
ljmp
aad
bnd
xor
xor
sub
loopne
data16
mov
shl
mov
dec
jecxz
cld
xchg
mov
test
ret
or
or
mov
sub
dec
fisttpl
mov
pop
shl
call
mov
aad
mov
leave
push
in
jne
mov
push
xor
adc
inc
cmp
in
cmp
pop
ljmp
sub
lahf
and
sbb
adcl
cmp
je
fisubs
out
mov
loopne
jl
xchg
shrd
mov
rolb
ljmp
or
in
jns
clc
lcall
cmpsl
clc
xor
fisttpll
les
call
pop
js
leave
mov
xchg
cmp
enter
orl
icebp
xchg
shll
pop
or
int
add
push
cli
mov
ds
mov
out
jne
jge
mov
lahf
cli
pop
jmp
les
sbbb
adc
cltd
push
cmovs
mov
lods
cmp
push
jnp
int
cld
pop
add
jle
and
aas
movsl
cmp
std
ljmp
outsb
aad
int3
rcl
loope
and
pop
daa
sub
scas
add
inc
cwtl
psraw
std
dec
mov
ficoml
add
xchg
xchg
mov
mov
add
incl
inc
fsubs
test
mov
and
mov
decl
cvtdq2ps
xchg
test
ret
and
jne
xor
sahf
push
out
inc
out
mov
call
sub
into
jle
mov
sbb
cmp
xchg
js
cmc
cld
clc
xor
or
dec
std
push
xlat
dec
sbb
incl
inc
xlat
shrl
dec
fwait
push
outsl
inc
push
incb
add
ja
jo
jmp
mov
push
pop
cli
pop
mov
fcompl
cld
pop
cltd
cmp
adc
pop
ret
incl
sbb
sahf
mov
icebp
pop
add
pop
pop
inc
pop
mov
das
lret
test
enter
fdivr
inc
sar
jbe
rcrb
shlb
popf
daa
mov
inc
leave
or
inc
push
aad
fiadds
cli
mov
in
push
cltd
aas
lcall
iret
stos
mov
push
fsubrs
clc
in
jne
scas
dec
mov
pop
jno
jmp
xor
add
mov
mov
fwait
stc
shll
insl
or
outsl
cli
outsl
scas
sbb
adc
mov
pop
lahf
jg
shl
aad
cld
add
mov
out
pushf
sbb
ds
mov
lds
jp
cmpsb
xor
jg
lcall
push
aaa
scas
sub
xchg
testb
stos
les
lahf
scas
hlt
cmp
inc
outsw
movsb
and
test
ds
cli
and
mov
or
jp
mov
xchg
lock
mov
push
in
jg
mov
mov
imul
push
mov
jmp
and
and
adc
mov
sub
cmp
xchg
pop
inc
mov
pop
das
dec
pop
fnsave
ljmp
outsb
mov
hlt
les
jecxz
lret
sub
call
pop
enter
sub
add
xlat
out
xor
lret
push
jo
aaa
int3
ljmp
aad
daa
adc
and
iret
mov
xor
cmp
lcall
add
and
stos
cmp
ret
add
pop
cli
jne
ss
ljmp
xchg
out
pop
mov
mov
pop
pop
dec
popa
je
mov
ret
xor
mov
in
jmp
xor
and
sub
aaa
xlat
or
jmp
add
mov
stos
jmp
push
aas
stos
lds
out
xchg
mov
adc
fimuls
fs
sarl
pop
clc
pop
cld
lret
mov
loopne
cmpsb
aad
cmp
dec
jmp
push
cmp
jp
mov
add
outsb
cmpsb
jae
and
push
lahf
lods
imul
adc
sbb
decl
sub
add
mov
pop
data16
pop
ljmp
std
adc
in
lahf
out
mov
leave
sbb
notb
cli
adc
mov
dec
cld
pushl
call
add
cmp
ljmp
push
jmp
inc
adc
push
adc
enter
stc
bound
mov
xchg
mov
push
adc
stc
sub
jb
int3
sub
shlb
ljmp
lock
addr16
inc
jl
xchg
aad
lret
icebp
cltd
inc
cmp
call
sti
sbb
clc
sub
test
pop
fdiv
icebp
jg
loop
mov
out
ss
ljmp
pusha
imul
out
xchg
les
add
shlb
ret
incl
rorl
fdivrs
cli
mov
pop
mov
imul
cli
test
movl
or
stc
jbe
jmp
incl
loop
xor
push
dec
dec
xchg
adc
mov
lds
adc
mov
jg
aad
stc
push
int3
test
xchg
cmp
les
pushf
and
in
ljmp
cli
clc
inc
movzwl
mov
sub
jg
add
popf
iret
lcall
and
mov
sbb
cmp
pop
das
pop
fwait
add
cmpsl
push
cmp
cmpsb
insl
out
jp
adc
adc
ljmp
xchg
fidivrs
addb
int
test
xchg
xchg
test
jne
test
push
jmp
push
jo
sbb
mov
and
jmp
adc
jg
sub
mov
repnz
adc
jae
and
call
pop
outsl
cmp
inc
mov
aam
call
pop
aas
sbb
mov
sahf
push
out
jno
push
cmp
pop
loop
xor
leave
mov
outsl
pop
rorb
dec
cmp
hlt
xchg
sbb
pushl
and
pushf
and
mov
push
dec
adc
test
pushf
int
lods
adc
mov
and
pushl
push
dec
jnp
add
lods
cwtl
inc
daa
sub
mov
or
ficoml
cwtl
lds
cmp
inc
icebp
idiv
or
ljmp
popa
aam
jle
insl
mov
add
sub
jl
push
aaa
cli
clc
jp
push
rcrb
xchg
repz
xchg
js
mov
pushl
cli
mov
leave
lcall
xor
jno
movsb
sbb
pushl
inc
cmp
fs
adc
mov
push
adc
faddl
jno
imul
mov
in
fucomip
mov
add
xchg
xor
addr16
lods
mov
outsl
hlt
call
and
xchg
cmp
movsb
sbb
repz
in
mov
das
std
ljmp
and
push
push
imul
xlat
test
jecxz
dec
jmp
mov
mov
sbb
xor
mov
das
hlt
ret
sub
aad
cltd
dec
repnz
sub
mov
mov
cmpsl
pop
lcall
adc
mov
or
das
push
call
outsb
loope
push
adc
mov
jnp
ljmp
jne
popa
les
and
mov
sub
jl
dec
adc
jle
push
mov
sbb
lods
ficoml
outsl
popa
movsl
jmp
mov
ss
push
add
pop
out
mov
or
jnp
test
mov
call
jp
mov
or
fcomps
xorb
push
loope
sar
jg
adc
imul
insb
dec
and
sub
mov
addr16
pop
imul
call
sub
cli
push
ds
arpl
or
jle
jg
xchg
and
xchg
sub
fisubrl
mov
xor
mov
or
aaa
fcoml
int3
aaa
jo
test
xchg
mov
push
outsl
icebp
ljmp
cltd
shrl
adc
pop
dec
inc
jnp
mov
outsb
outsl
inc
lcall
std
mov
jbe
rcrl
adc
inc
dec
cli
xchg
mov
add
sbb
add
inc
shrl
push
fldcw
mov
mov
sarb
fstps
adc
fs
mov
xchg
cmp
push
sub
cmp
cmp
fldl2e
dec
add
dec
gs
fbld
mov
insl
push
insb
scas
andl
insl
mov
and
jle
pop
pop
cmpl
gs
push
hlt
inc
stos
ret
mov
mov
inc
ljmp
iret
icebp
push
or
xchg
jge
push
mov
cmp
lcall
pushl
loopne
loopw
cmpsl
mov
int
outsb
push
mov
in
add
pushl
ds
xor
andl
popl
add
push
and
cs
call
fucomip
call
lods
xlat
insl
cmp
jl
mov
out
or
test
call
xor
pop
and
or
out
add
jge
leave
mov
push
fistps
push
jb
aad
and
inc
sub
dec
pushf
call
push
push
repz
decl
fwait
mov
mov
add
pushl
jp
shll
or
mov
push
push
or
je
daa
mov
outsb
xchg
repz
notb
pop
add
pushl
pop
shlb
fisubrs
jge
mov
mov
inc
mov
negl
bound
pop
mov
pop
dec
pop
cmp
inc
incl
lcall
xchg
add
adc
dec
or
mov
mov
mov
and
aad
jb
inc
movsl
decb
inc
jp
lods
push
adc
aas
shlb
test
cmp
sbb
adc
int3
das
scas
jae
icebp
inc
imul
and
mov
mov
addr16
jg
adc
fcoml
popf
andb
mov
push
xchg
rolb
inc
cld
pushl
sbb
xchg
sbb
xchg
dec
xchg
out
jb
inc
and
shl
cmpsb
dec
add
incl
sub
fdivr
orl
test
mov
bound
add
adc
in
xchg
pop
into
jmp
loope
cmp
jmp
cmp
les
mov
mov
cmp
call
push
mov
out
inc
stc
subb
es
jecxz
mov
fstl
cmc
mov
cli
test
sahf
sub
mov
lcall
inc
lea
outsb
cmc
jmp
push
test
dec
xor
jl
stos
xor
push
jg
mov
test
lret
iret
dec
das
jge
int
pop
scas
sub
pop
std
inc
mov
loope
addr16
popa
test
inc
push
rorl
cld
decl
enter
xchg
adc
mov
pop
lcall
test
sbb
negb
push
add
mov
mov
bound
repz
lahf
outsl
outsl
std
inc
fwait
and
dec
mov
mov
adc
mov
pop
test
or
inc
outsb
mov
xorb
js
inc
cmpsb
jo
jg
ljmp
pop
or
lods
mov
xchg
add
pusha
xchg
sub
jb
push
fsts
or
aad
dec
push
out
fucomip
inc
lcall
inc
icebp
add
xlat
or
xchg
into
add
cs
push
std
adc
loop
jns
scas
sbb
decl
bound
mov
cld
add
push
mov
mov
push
add
imul
popf
lret
aad
pop
inc
pop
jp
mov
dec
into
lds
adc
jg
incl
mov
xchg
fdivrl
mov
or
jno
sub
ret
push
std
jg
pop
cld
add
and
movsb
cli
rorl
data16
jp
sub
add
clc
shll
sub
push
pop
lret
out
nop
xchg
cmp
mov
sti
push
pushf
scas
mov
sub
loope
out
jb
push
cld
in
bound
add
lahf
xchg
inc
fsubrs
sbb
mov
mov
into
mov
sub
lcall
cmc
sahf
sbb
int3
or
mov
decl
push
mov
add
add
xor
mov
scas
hlt
mov
insb
or
lods
fiadds
jbe
out
out
push
stc
repz
icebp
jg
pusha
xchg
mov
fistpl
pushl
sub
sbbb
inc
fwait
lret
fbld
shlb
add
mov
sbb
mov
js
inc
shll
sbb
lcall
jb
mov
jmp
icebp
adc
mov
aas
add
xor
mov
jmp
sub
rcl
int3
dec
fmulp
xor
dec
out
or
adc
mov
mov
ljmp
ss
pop
push
xor
dec
loopne
leave
mov
fs
lahf
inc
ss
aaa
cli
lea
and
jmp
jg
push
xchg
idivl
push
fs
lods
xchg
clc
cmp
insl
cmpsb
xchg
decl
push
lods
mov
int
imul
fcomps
arpl
imul
shl
jmp
jns
loope
inc
scas
or
mov
call
out
push
push
ret
xchg
ret
xchg
mov
fdivs
cmp
clc
jg
outsl
xor
push
dec
sbb
stos
jb
call
sub
inc
decb
add
loop
jne
popf
call
std
xchg
xor
pushf
stos
js
ljmp
pop
dec
mov
jg
fisubl
scas
and
enter
mov
mov
cwtl
dec
mov
incl
dec
mov
test
sub
or
pop
stos
dec
mov
ljmp
pop
dec
int3
sti
iret
push
jb
push
adc
mov
cmp
pushf
cmpsb
inc
push
mov
imul
mov
xchg
out
int3
inc
adc
cli
inc
push
adc
lret
call
cmp
inc
jmp
and
loop
cwtl
mov
sbb
mov
decl
fucomi
arpl
add
and
push
testb
sar
mov
pop
pop
inc
jge
pop
xor
lcall
mov
cmovs
sub
pop
insl
sub
adc
mov
call
test
fdivl
pop
add
lcall
ljmp
ss
addb
clc
in
sub
cmp
movsb
push
xor
in
mov
clc
outsl
sbb
negb
mov
fwait
mov
movsb
sarl
sti
ror
pop
pop
cs
ljmp
push
lahf
clc
incl
lea
mov
fistl
dec
repnz
add
iret
xchg
ss
filds
push
std
sbb
insb
ss
add
sbb
addr16
stc
js
lods
decb
push
fwait
sbb
sarb
into
xor
mov
fstl
mov
dec
das
cld
sub
push
jg
das
std
and
jg
mov
jb
push
adc
mov
push
xchg
cmp
xchg
in
push
pop
rcrb
das
mov
adc
or
dec
sbb
add
xor
push
imul
push
mov
mov
sbb
sub
in
xor
inc
bound
adc
or
aad
mov
dec
dec
ret
push
ljmp
std
out
outsb
xchg
mov
sbb
enter
faddl
fisubl
jecxz
dec
push
icebp
pushl
dec
fcoml
ljmp
decl
mov
mov
sbb
mov
aaa
adcl
repz
insl
mov
pop
clc
or
addl
rorl
sub
cmp
push
shlb
incl
dec
iret
sbb
mov
leave
mov
xchg
aaa
mov
cld
pushl
xorl
in
xchg
lods
mov
and
decl
xor
js
jp
icebp
inc
adc
dec
or
jl
pushl
test
loop
faddl
push
mov
enter
outsl
test
mov
mov
neg
sbb
fcmovnb
repnz
xlat
jnp
fnstsw
dec
shll
dec
sub
incl
mov
dec
dec
and
push
pushl
movsb
lds
and
imul
add
ret
fdivr
leave
cmp
sub
leave
xlat
outsb
mov
movsl
ret
sbb
fbld
jb
cmp
daa
jmp
jo
xor
pop
stos
pop
into
add
fistpll
stc
aam
cli
das
cmc
xor
inc
les
or
mov
mov
push
bound
push
pushl
mov
and
ss
das
mov
loope
xchg
push
cltd
cli
fsubl
adc
ficompl
pop
dec
cmp
pop
push
adc
mov
mov
sbb
sbb
mov
call
sahf
mov
inc
xchg
mov
push
out
inc
fnstsw
test
inc
aas
push
mov
call
mov
jbe
test
adc
sbb
pusha
sbb
aas
rorl
adc
mov
pushl
mov
lods
cmpsl
lahf
adc
cmp
sar
ljmp
jl
fistpll
inc
enter
sub
xchg
in
pop
les
push
cld
pop
loop
roll
mov
pop
pop
aam
sub
add
incl
or
inc
scas
cmpb
pop
jecxz
jle
sahf
loop
fldt
push
fwait
aam
movb
sub
fbstp
add
leave
push
and
out
test
loop
addr16
das
mov
repz
lcall
mov
lods
cmp
mov
mov
push
pop
gs
pushl
cli
mov
mov
mov
cld
jo
scas
cmp
or
jg
add
mov
shlb
fcoml
outsb
test
sar
dec
hlt
or
sbb
movl
cmp
mov
push
mov
or
mov
push
push
dec
jb
push
jl
mov
js
and
cmc
push
adc
mov
aaa
loop
jmp
mov
pop
mov
xchg
dec
cmpb
cmp
aas
or
mov
sub
mov
pushl
out
jbe
loop
dec
sub
push
ret
pop
or
dec
ljmp
adc
inc
dec
and
pop
fstpl
loope
std
ljmp
fldl
das
je
xchg
push
inc
push
imul
ljmp
call
xchg
arpl
divb
incl
cmp
mov
or
pop
stc
cmp
clc
pop
je
mov
push
decl
push
loope
in
fwait
adc
pop
cmp
popf
decl
std
sub
nop
mov
mov
lods
adc
pop
xor
cwtl
fistpl
inc
in
add
fcoml
and
dec
mov
cs
and
test
outsl
inc
add
pusha
incl
jb
xor
or
mov
in
adc
lods
sbb
and
subl
hlt
xchg
jmp
nop
adc
jp
add
xchg
and
pushf
push
lock
ljmp
inc
dec
pop
dec
sarb
scas
fwait
out
out
push
gs
add
fdivp
call
lods
xor
or
pushl
shld
pop
loope
cs
aaa
xchg
shll
cmpsb
leave
ljmp
lock
pushf
sbb
sub
loop
in
xchg
add
dec
ljmp
push
sbb
cmp
movups
loope
js
pushl
and
lods
mov
xchg
js
xor
pusha
jp
push
test
mov
dec
arpl
leave
push
rcr
and
mov
fidivrs
int3
popf
sarb
or
ljmp
mov
xor
in
cmp
incl
xchg
and
xor
mov
lahf
into
inc
adc
xlat
mov
jnp
and
cmp
push
pop
clc
das
cmc
inc
xchg
mov
mov
lret
js
mov
test
xchg
and
mov
push
nop
pop
and
jmp
inc
fiadds
pop
mov
mov
jg
or
adc
jno
shlb
call
dec
out
jmp
ljmp
or
mov
insl
sub
inc
imul
inc
mov
arpl
or
js
mov
pop
clc
call
sub
out
fisttpll
iret
cld
mov
aad
add
leave
aas
mov
outsl
cmc
push
cmp
stos
sarl
call
sub
faddl
pop
leave
jg
push
pushl
adc
sbb
sahf
out
mov
aaa
pop
mov
adcb
xor
mov
ljmp
fcmovnbe
push
fdivrl
insl
pop
adc
jg
imul
arpl
daa
sbb
int
fwait
jl
and
mov
dec
push
inc
mov
mov
call
aas
inc
into
mov
lcall
loope
jmp
mov
das
lret
ljmp
jp
xor
mov
xchg
cmp
test
fwait
cmc
call
pushl
cltd
mov
or
imul
clc
sub
jl
mov
pop
and
push
movsb
sub
mov
daa
cmp
enter
fmull
std
out
icebp
lcall
mov
adc
mov
mov
jae
cmp
pop
jnp
mov
insb
inc
mov
sti
xchg
dec
inc
push
inc
ds
sub
jecxz
test
rcr
sub
or
push
rclb
mov
lret
sbb
aam
inc
mov
mov
adc
loopne
jne
xchg
dec
push
mov
lcall
dec
push
into
pop
cmc
stc
pop
addr16
into
ss
pop
jle
cmp
in
repz
adc
mov
mov
aad
ret
loopne
lock
outsl
aam
ljmp
jge
loope
inc
aam
dec
mov
in
add
pop
mov
clc
hlt
out
pop
xchg
jl
or
hlt
xor
sti
ror
roll
leave
das
lds
adc
cld
or
jle
sub
inc
jo
pushf
pop
icebp
jp
stos
mov
dec
cmp
divb
xchg
lods
mov
push
cltd
fxch
and
popa
aam
xor
sbb
jnp
icebp
das
cld
cmp
loopne
mov
addr16
push
pop
scas
out
mov
popa
movsb
scas
push
cmp
scas
mov
sbbb
pusha
subl
std
fsubl
call
clc
scas
mov
hlt
xchg
dec
lret
divb
out
mov
inc
sbbl
mov
pop
mov
push
hlt
js
sbb
and
aad
mov
mov
mov
dec
rclb
jns
pop
jno
jns
mov
dec
daa
inc
add
lea
jne
mov
inc
cli
mov
les
idiv
jp
mov
das
imull
add
mov
sub
and
add
aaa
inc
cmp
out
cmp
repz
aam
decl
sahf
mov
mov
jmp
or
pop
iret
shl
std
orl
aam
std
push
sub
jns
js
jno
call
add
inc
cwtl
lret
pop
addr16
repnz
fildll
cmp
ds
outsb
push
int3
pop
mov
mov
into
dec
xchg
pop
push
hlt
or
inc
icebp
lds
call
or
call
cld
addr16
dec
addr16
mov
xor
push
cld
pushl
inc
fisubs
dec
pop
lea
mov
incl
scas
aad
jbe
js
add
mov
and
mov
dec
clc
inc
roll
inc
xor
pop
jbe
notb
pop
pop
xor
adc
cmp
popa
xchg
mov
shlb
xchg
clc
sbb
xor
xchg
cmp
mov
lcall
xor
mov
fisubrs
cli
out
fdivrs
popl
hlt
mov
pop
pushl
lock
inc
jbe
xchg
loop
fiadds
and
stos
ds
popa
and
sub
in
lcall
mov
push
out
cld
int
and
punpcklwd
movsl
push
ljmp
jno
add
push
mov
pop
adcb
pop
mov
call
jg
pop
mov
pop
push
push
sub
sub
jg
cmp
popf
push
bound
xor
and
adc
cmp
daa
aas
xor
js
out
and
and
sub
shl
xchg
adc
mov
sbb
push
pop
ljmp
add
and
inc
andb
xchg
jmp
cmpsb
and
and
es
aad
xor
xchg
fwait
jp
push
mov
mov
sbb
sti
hlt
jmp
outsl
cmpsb
incl
repz
sub
arpl
nop
inc
dec
sbb
and
mov
sub
xchg
ret
clc
call
lods
clc
pop
inc
arpl
jg
dec
xchg
xchg
cmp
xchg
lods
or
pushl
mov
adc
add
sub
dec
daa
or
stos
pop
aas
xchg
call
pushl
xor
jg
mov
into
mov
loopne
pop
push
out
jge
lahf
pop
dec
jl
adc
scas
bound
decb
shll
cs
call
push
in
push
fs
and
mov
xor
incl
mov
lcall
loop
daa
mov
sbb
pop
fbstp
push
and
jmp
jle
shll
mov
jl
inc
dec
popa
dec
mov
std
pop
pusha
sub
das
push
add
push
jmp
aaa
clc
sbb
shr
xlat
xor
cld
xlat
out
repz
int3
aam
dec
adc
fs
xlat
testl
fildll
mov
cs
xchg
push
xchg
imul
bound
mov
add
mov
stos
lods
add
jnp
ljmp
lahf
xchg
pushf
inc
pop
mov
jno
push
fwait
hlt
mov
stos
fldz
xchg
pushl
or
xchg
dec
xor
add
stos
in
mov
mov
push
mov
shlb
jle
cmpsb
jge
jno
mov
incl
das
xlat
dec
imul
mov
xchg
xor
mov
inc
icebp
fistpl
pushf
inc
shlb
lea
fstp
enter
mov
push
insl
das
icebp
mov
cli
or
cmp
xchg
inc
dec
inc
xchg
insl
decl
mov
das
xor
adc
push
out
inc
cmc
in
js
jb
movsl
xlat
movsb
jno
pop
cld
call
mov
push
xchg
nop
mov
xchg
lea
insl
outsl
fsubl
add
lods
roll
xchg
movsb
loope
fisubrs
xor
jg
cmp
movsb
adc
adc
fs
ret
decl
stc
mov
std
push
and
adc
jecxz
sar
cmp
sbb
stc
lcall
icebp
pop
pushl
jno
aad
pop
stos
loop
and
jecxz
xor
pop
test
inc
pop
std
call
inc
aas
jmp
into
jne
add
fmull
jge
ret
xchg
jg
ljmp
sub
xchg
repnz
xchg
sub
adc
std
add
jae
inc
push
mov
push
imul
pop
frstor
sbb
and
jmp
in
and
mov
mov
or
push
sbb
lcall
stos
stos
sahf
jbe
orb
bswap
sub
out
xor
pop
sahf
push
in
and
loop
lcall
sbb
iret
cmp
mov
lcall
fucomip
decb
jo
xlat
repz
cmp
dec
rcr
xor
idiv
decl
out
mov
in
cmp
pop
daa
test
je
lods
dec
call
std
jbe
add
mov
iret
aaa
call
xchg
in
add
cmpsb
popa
outsl
xchg
orb
push
sbbb
sar
push
lcall
nop
shll
inc
adc
or
aaa
call
inc
movsb
or
lahf
xchg
mov
lods
inc
js
push
pop
sti
mov
ds
lcall
outsb
jb
pop
xor
ljmp
jmp
in
stos
lcall
mul
out
dec
push
cmc
push
add
pusha
add
add
aad
jo
pusha
loope
push
xchg
and
sub
pop
outsl
js
hlt
inc
mov
jne
fmuls
in
loopne
push
mov
addl
add
outsl
cmp
dec
jno
cwtl
fwait
scas
xor
lcall
jge
cwtl
cmp
sub
mov
incl
test
inc
or
jg
mov
jecxz
cwtl
cmpsl
outsl
icebp
incl
divl
testl
sbb
push
cmp
call
je
test
rclb
push
pop
or
xchg
stos
les
adc
rorb
lcall
add
mov
repz
jmp
push
shrl
push
sbb
das
icebp
ljmp
adc
add
int
int3
insb
les
dec
sub
test
pushl
fildl
mov
dec
filds
cmc
lcall
shr
xchg
cli
popl
cli
push
add
push
jnp
mov
mov
cmp
std
pop
or
sarl
xor
cmp
adc
push
lcall
nop
cltd
rol
xchg
mov
addl
sub
jecxz
add
sbb
push
sbb
mov
faddl
fbstp
jg
pop
loopne
cwtl
aam
inc
fnsave
cmp
jp
out
push
pushl
mov
push
imull
adc
out
push
push
sub
fcomps
xchg
decl
fisttpl
or
jns
inc
push
push
sahf
nop
cmp
mov
pop
mov
dec
xor
cltd
push
dec
pop
stos
xchg
cmp
mov
cmc
xor
aas
lea
pushl
cli
or
sub
sbb
enter
push
test
mov
es
jg
divb
dec
stos
jg
repz
sub
pusha
jmp
cmp
ja
test
call
mov
call
shrl
das
or
xchg
mov
push
jmp
mov
ss
decb
cmp
or
inc
cmp
roll
fucomip
mov
imul
loop
aas
mov
mov
std
decl
dec
push
in
inc
cmc
mov
mov
lods
out
pop
xchg
dec
jmp
jns
jmp
mov
cmp
cmpsb
push
mov
int
stos
mov
or
ljmp
pop
je
hlt
jns
inc
jne
dec
or
dec
pop
mov
call
adc
mov
jbe
pop
mov
hlt
mov
incl
popa
inc
xor
out
mov
xorb
test
adc
dec
dec
or
ds
rcrb
cmpsb
adc
pop
loopne
xlat
scas
call
jg
mov
sub
jmp
inc
sub
js
cmp
add
sbb
push
movsl
rol
call
in
jmp
mov
bound
jno
dec
iret
test
rcll
adc
dec
arpl
cltd
out
loope
dec
mov
fucomip
jmp
cli
adc
mov
sbb
je
es
add
push
loope
imul
xchg
mov
mov
adc
stos
or
lahf
xlat
push
mov
clc
mov
sub
mov
jg
dec
fwait
sub
jo
nop
sbb
xchg
rorl
fcmovnbe
in
scas
test
pushl
jne
fnsave
sti
rorl
es
cmp
add
jmp
lea
aaa
outsb
pusha
jae
std
test
cltd
adc
outsb
jge
fstpt
push
jecxz
iret
call
ljmp
movsl
pop
and
push
pop
nop
and
pop
push
jle
into
icebp
and
mov
cli
cwtl
pop
rcrl
into
stos
outsb
int
adc
pop
fnstcw
cld
xchg
movsb
loop
xchg
mov
call
xor
or
or
lods
push
pop
ljmp
ror
insb
sbb
leave
and
ret
jo
mov
jmp
pop
sbb
stos
fwait
repnz
pushl
cli
pop
mov
jg
inc
in
jge
push
inc
cmp
out
jl
or
jg
scas
mov
nop
test
or
cmp
outsb
sub
jmp
idivl
mov
sahf
ret
fs
fdivl
mov
mov
rorb
or
dec
jnp
and
rcrl
loopne
or
rorl
cld
testl
jne
imul
sbb
pushf
sbb
mov
cmpl
and
shrd
jae
mov
subl
inc
mov
xchg
stos
ret
rcl
push
or
xchg
add
ljmp
test
popa
add
inc
scas
and
sbb
adc
inc
sub
pusha
adc
cmp
popf
mov
mull
out
ja
inc
jge
push
jg
add
xlat
pop
test
out
sbb
jne
xor
mov
jbe
je
inc
stos
out
lret
aam
fsubl
ds
adc
incl
push
and
js
mov
ficoms
xor
cli
sahf
repz
incl
mov
scas
ret
rcrb
testb
mov
and
sbb
inc
repz
cld
sub
mov
add
mov
outsb
nop
imul
fists
test
jge
ss
push
xchg
adc
cli
ds
std
outsl
hlt
call
pop
adcl
adc
and
jg
cltd
xor
mov
jo
or
mov
push
insb
jae
movsl
or
dec
test
inc
push
jg
decl
or
fnsave
mov
lret
filds
loop
incl
imul
mov
mov
rorl
das
sar
les
inc
add
mov
inc
xchg
call
pop
mov
sti
int3
movsl
dec
xchg
adc
cli
lods
ja
fdivs
cli
dec
js
lods
xchg
sbb
mov
xor
pushl
mov
or
push
subl
dec
repnz
cs
and
lcall
mov
clc
fistpll
xor
mov
mov
mov
jl
pop
loopne
xchg
clc
lcall
mov
push
sahf
sub
clc
xlat
push
shrb
mov
and
xor
out
mov
test
inc
in
addr16
mov
mov
jmp
lods
decl
jle
and
cmp
fs
sti
hlt
adc
lcall
mov
ljmp
xchg
inc
mov
out
mov
mov
jg
xchg
fs
lods
fisttpl
inc
add
das
pusha
jmp
cmpsl
adc
hlt
aas
cmp
jno
mov
lods
pop
out
cwtl
test
pop
xchg
sti
jmp
movsl
mov
call
lret
add
fisttpl
ja
andl
dec
into
mov
out
xor
popf
pusha
xor
pop
fisubrs
cli
ljmp
jnp
mov
popa
sbb
std
pop
pop
repz
sub
lock
incl
jns
gs
fimull
js
jns
inc
dec
fsubrs
pop
std
mov
jnp
or
pop
push
adcb
jmp
mov
dec
cmp
addb
jle
push
enter
pop
cmc
je
xchg
mov
add
cwtl
mov
int
lods
fnstsw
add
mov
push
adc
in
fisttpll
stos
xchg
jns
sbb
cltd
js
pop
xchg
lret
adc
lcall
xchg
mov
and
push
mov
int3
pop
jmp
push
mov
ja
test
daa
cmc
xchg
add
cld
dec
sahf
or
cmc
jp
mov
jo
sti
out
mov
rorl
mov
sub
xchg
mov
cld
lcall
clc
inc
mov
lods
sbb
adc
inc
xchg
fnstenv
outsl
add
decl
push
cltd
and
and
pushl
clc
into
loopne
lahf
pop
pop
adc
push
pop
mov
cmpsb
xor
decl
int3
and
or
loop,pt
addr16
gs
movsl
call
stos
inc
pushl
test
jl
scas
adc
sbb
test
outsl
bound
lods
aad
sar
push
inc
sar
ljmp
pop
int3
or
xchg
stos
mov
xor
sub
push
sbb
mov
sub
fimuls
inc
mov
nop
lods
out
sbbl
push
or
jg
movsb
mov
ds
or
dec
movl
lahf
pop
xchg
push
adcl
push
enter
adc
mov
mov
repz
pusha
cld
push
mov
std
push
xlat
push
dec
add
jl
inc
aaa
xor
hlt
mov
adc
mov
mov
loopne
out
aas
pop
push
and
dec
mov
or
pop
cld
jb
add
xor
dec
les
sar
test
outsl
jb
xchg
dec
je
aam
pop
idivb
xor
rcrl
jmp
and
xabort
out
aas
and
push
stc
jl
aaa
dec
cld
lcall
push
xorl
enter
adc
jp
or
ljmp
pop
sub
fidivl
pop
sub
inc
mov
ja
xchg
test
jo
inc
adc
dec
cld
jmp
int3
sbb
shlb
mov
call
ds
mov
xlat
xchg
movsb
iret
xchg
fldenv
mov
inc
mov
sar
and
inc
loope
xor
sbb
jno
mov
test
insb
je
adc
dec
jbe
sub
out
fs
pop
and
add
push
psubusb
jg
movsl
fistpl
push
cmp
and
xlat
mov
push
in
or
addr16
rolb
insl
xchg
rcrl
jg
in
mov
pop
dec
scas
add
lahf
test
jo
das
std
ljmp
mov
shlb
cld
xchg
add
pop
and
xchg
sub
outsl
sub
aam
mov
stos
cli
add
stos
cwtl
mov
out
and
mov
sbb
lods
sub
add
ljmp
xor
push
cmp
mov
lcall
stos
add
mov
call
mov
dec
adc
inc
sbb
adc
rclb
mov
cmc
call
push
sub
out
mov
adcb
das
cmc
sbb
sbb
movsl
sbb
scas
loopne
jg
push
pop
cltd
add
scas
pop
xchg
js
or
xor
sbb
cwtl
insb
mov
lcall
mov
and
fdivl
icebp
or
mov
out
mov
std
adc
sub
lods
int
xor
adc
jb
jns
sub
ljmp
setl
out
mov
in
pushf
sarb
pop
mov
jg
jg
or
movsl
mov
jne
mov
dec
pop
scas
mov
sub
and
mov
bound
jge
adc
jae
inc
xchg
mov
sbbb
je
xlat
inc
cmpsl
jg
mov
repz
adc
in
gs
out
mov
dec
jmp
ljmp
push
dec
mov
pop
adc
daa
or
jecxz
outsl
inc
ror
out
movl
push
insl
jmp
push
lea
stos
or
lods
fmuls
fs
das
adc
dec
xor
test
cmp
pushl
jmp
shll
inc
nop
adc
repnz
fisubs
xorb
pushl
loopne
lods
pop
add
out
cmp
inc
pushl
add
dec
sub
imul
lcall
push
inc
push
decb
je
incl
jg
sbb
rol
test
sub
inc
cmp
popa
xchg
mov
push
rolb
rcr
push
adcb
or
or
sar
mov
fstpl
call
imul
stos
icebp
int
cmpsb
jg
fsts
adc
fsubrl
inc
lcall
cmp
pusha
rorb
decl
jns
cmp
sbb
stos
cld
aam
jp
cmp
out
inc
cmp
aam
daa
stos
cld
mov
sub
or
dec
cld
dec
sub
push
jne
sahf
xchg
push
ds
add
hlt
lcall
jp
xchg
ret
pop
adc
sub
jmp
mov
das
xor
lods
orl
adc
inc
jp
out
and
in
jae
cmp
pop
or
sub
pop
rorl
stos
and
jmp
rolb
inc
adc
test
push
js
jle
out
jo
push
mov
inc
pop
fldt
scas
outsl
into
notb
sub
scas
jecxz
jge
dec
push
and
dec
test
pushl
add
inc
pop
sbbb
mov
int3
sbb
sbb
xor
roll
or
shl
pusha
jg
inc
jmp
mov
mov
push
inc
orb
push
incl
imul
fidivrs
icebp
and
out
data16
mull
insb
pop
inc
dec
sbb
je
sub
jb
xor
mov
sbb
out
jg
fs
or
cli
imul
nop
sar
idivb
stc
add
addb
cmp
mov
mov
arpl
dec
fs
lret
fwait
outsb
cwtl
xor
nop
jge
add
xor
push
adc
aad
and
aas
and
or
call
mov
loop
pushf
jnp
cld
dec
arpl
dec
fistpll
xchg
pop
in
mov
fsts
sbb
lock
lods
pushl
jno
cli
mov
out
xor
mov
pusha
xor
sub
in
cwtl
in
cmpsl
mov
movsl
incl
jo
int
pop
and
jge
push
sti
js
pop
push
outsl
std
ljmp
mov
in
fs
sub
xor
addr16
into
xchg
and
ret
pop
mov
push
lock
or
sar
fcmovbe
es
or
mov
sbb
mov
push
shll
push
pop
sub
cmc
int3
sub
add
dec
movsl
sbb
jmp
xchg
cmp
dec
pop
pop
jle
popf
lea
clc
outsl
loopne
lds
mov
mov
aam
stos
decl
add
lods
lret
pop
jg
mov
fcoml
mov
rcll
xor
mov
adc
mov
dec
enter
aaa
jns
insl
fistps
sub
insl
cmpsb
sbb
js
cli
ljmp
inc
push
mov
das
dec
jmp
lods
sub
pop
or
loope
dec
inc
mov
push
pop
ret
pop
loope
arpl
mov
out
dec
mov
fisttpll
mov
ja
fs
mov
mov
in
cltd
cmp
cld
jnp
sbb
jg
scas
roll
xor
and
loopne
pop
xor
aaa
outsl
pop
in
inc
push
inc
mov
mov
mov
sub
pop
idiv
sbb
sub
in
jge
imul
lcall
pop
ds
mov
fisubs
sub
push
adc
xor
fwait
sbb
shr
fistl
pop
adc
mov
inc
outsl
inc
imul
sti
inc
mov
and
or
dec
add
fisubl
lret
jg
decl
shrd
sbb
cli
loope
push
add
cmp
and
enter
out
ljmp
inc
adc
or
clc
repz
pop
mov
hlt
add
cli
cmp
out
cmpsl
adc
xor
mov
shl
push
xor
xchg
adc
mov
or
push
mov
hlt
fildll
sbb
lcall
jecxz
cwtl
negl
mov
das
adc
loopne
jle
fists
and
and
pop
push
loopne
std
jecxz
std
mov
call
pop
and
dec
leave
fcmovb
dec
inc
xor
push
shl
imul
arpl
cmc
dec
arpl
outsb
mov
aaa
pop
loop
jns
aaa
sub
cmpsb
mov
ljmp
and
pop
lds
in
mov
std
push
and
test
mov
cmp
cmp
or
repz
ret
test
push
cmp
call
test
sub
hlt
and
lods
lock
lods
xor
loope
xchg
pushl
iret
call
jne
push
push
in
or
cmc
adc
mov
loop
mov
add
inc
ja
std
mov
push
loopne
fs
orb
into
jg
push
inc
out
jle
testb
push
test
cmpsl
test
pop
stos
inc
rcpps
ret
loope
inc
pop
adc
xor
sub
into
inc
push
sub
stos
lods
fsubr
jg
jb
pop
xchg
int
add
negl
ret
mov
add
loop
es
jg
inc
and
and
es
push
add
popf
xchg
test
cmp
or
sbb
sub
lcall
jbe
fcoml
imul
dec
cmpsl
pop
outsb
mov
and
clc
jns
les
subl
incl
or
push
int
jl
into
in
decl
cmp
enter
xor
xor
pop
ret
insl
mov
adc
adc
sbb
lods
push
adc
imul
mov
mov
or
push
sub
mov
cltd
inc
out
mov
imul
sar
sarl
sysret
lret
insl
outsl
and
or
cmp
cli
fistpll
aas
cmpsl
sbb
pop
lret
push
insb
rcl
aad
test
push
fnstsw
incl
xchg
xchg
mov
movsl
addl
rolb
mov
cmc
xor
jg
jg
test
pop
or
jae
cmp
inc
jno
mov
mov
mov
pushl
dec
pop
mov
leave
daa
dec
imul
mov
ja
sbb
dec
sti
hlt
in
sbb
icebp
inc
push
std
dec
sbb
pushf
mov
adc
or
in
insb
pushf
popf
or
or
arpl
mov
rclb
es
out
inc
dec
sbb
push
aad
and
mov
int3
pop
lcall
lds
leave
cmpsl
adc
push
addl
ficomps
aad
je
pop
jmp
jg
pushf
cmp
jmp
jle
rcrb
shll
jl
fucom
ficomps
sub
mov
gs
add
jo
repz
cld
in
xor
lahf
fdivp
int
lock
lcall
mov
jbe
add
sbbb
outsl
push
jl
stos
pushl
rorl
sbb
sbb
rcrb
int3
pop
lcall
push
jnp
outsb
subb
ret
push
mov
int
mov
scas
outsl
icebp
lcall
ds
or
adcb
insl
jmp
xchg
add
lcall
jne
frstor
cmpsb
test
cltd
mov
cwtl
jl
cmpsb
mov
pushl
pop
pop
push
xchg
cmpsl
sub
movsb
test
jae
stos
iret
cli
ljmp
push
and
pop
in
cli
inc
jo
sbb
hlt
hlt
jb
ret
lcall
push
mov
or
ja
cmpsb
push
fstpl
xor
mov
in
and
xor
fcoml
stos
or
mov
jg
lods
sub
mov
xor
jb
loopne
decl
ss
xchg
mov
jnp
mov
fisubl
cmp
das
lock
jns
inc
dec
sahf
mov
xlat
xchg
xchg
sub
xor
fidivrs
leave
fadd
test
dec
jmp
sahf
sub
shll
lret
aad
dec
mov
sub
push
movsl
inc
pop
mov
adc
bound
pop
cs
mov
inc
pop
lcall
mov
aam
or
pusha
fs
adc
incl
test
lret
popa
stos
adc
jne
clc
decl
mov
nop
pop
mov
in
cmp
or
daa
adc
adc
in
in
inc
mov
mov
cmc
pop
ljmp
or
mov
mov
cmp
out
lea
pop
mov
aas
mov
jge
push
mov
incl
test
lahf
inc
jecxz
cmp
es
fisttpll
call
jmp
inc
sahf
jl
out
dec
shll
sub
test
jge
adc
jae
sbb
push
cmp
leave
push
jae
cmp
scas
cmpsl
push
sbb
inc
fbstp
lcall
bound
mov
lcall
loopne
jne
dec
test
mov
lea
cld
sub
imul
adc
jg
pop
ficoms
int
sbb
int
mov
subb
add
lea
jmp
xor
shrl
push
xchg
mov
mull
add
cltd
fimuls
lds
xchg
push
clc
ret
or
hlt
sbb
push
test
popf
push
mov
outsl
cld
pop
push
or
push
jb
jle
dec
mov
adc
lods
jge
mov
call
and
out
das
push
sar
fistpl
stos
jno
stos
lods
jns
jecxz
mov
mov
jns
decb
cli
fdivs
scas
dec
das
and
aas
leave
sub
leave
and
dec
imul
mov
sbb
mov
call
aas
jb
jb
cmp
popa
dec
cs
sub
jge
cmc
add
jmp
orl
decl
bound
ret
inc
arpl
mov
jns
cmp
mov
test
lcall
and
les
fcoml
enter
mov
inc
mov
ljmp
xchg
pop
cs
inc
ss
cmc
mov
inc
lock
mov
sbb
or
lahf
fcoms
pop
ljmp
popf
jl
sub
lods
mov
push
inc
into
stos
xchg
xchg
ds
mov
outsl
repz
outsl
icebp
into
sub
movsl
cmp
mov
add
pusha
jl
push
mov
shl
add
std
mov
pop
loopne
in
std
push
lods
mov
in
fiaddl
das
std
call
cmp
cld
shrl
dec
sbb
repnz
aam
or
sub
push
test
mov
pop
xchg
test
fimull
xchg
ret
rolb
mov
call
incl
xchg
and
sub
or
call
jecxz
out
push
ret
push
lret
add
rclb
incl
repz
aam
dec
mov
xor
pop
pop
fisubs
sbb
or
rolb
stos
cmp
dec
pop
pushf
pop
in
aaa
rep
jge
sbb
test
call
pop
mov
dec
lods
sub
pop
jb
cmp
rolb
mov
lods
dec
movsb
popf
rcr
jns
inc
add
xchg
xor
jg
mov
dec
arpl
push
jge
leave
insl
jns
push
inc
movsb
jg
int
cmpb
lahf
mov
mov
ds
jne
xchg
dec
or
pop
stos
fcmovnbe
and
jnp
aaa
cwtl
and
xchg
leave
shl
cs
call
out
mov
shrb
imul
or
roll
incl
shlb
inc
aad
add
mov
js
repz
fnstsw
popa
adc
leave
xor
jmp
mov
enter
loope
imul
test
cmpl
fdivr
lods
stc
ljmp
xchg
and
aaa
pop
movb
shlb
lcall
fsubs
loopne
cmp
mov
mov
inc
mov
xchg
mov
stos
mov
sbb
mov
and
xchg
pop
repnz
incl
lcall
and
ja
mov
and
outsl
icebp
incl
adc
nop
and
repnz
aaa
or
call
pop
sbb
push
push
push
dec
sub
fnop
add
push
and
outsl
jo
out
lods
sbb
inc
pop
imul
das
jle
int3
arpl
daa
lds
ja
hlt
or
mov
cmp
pop
loop
jo
jno
fldt
jns
aaa
cmp
mov
mov
scas
repnz
lret
mov
fchs
sti
push
jg
jp
mov
push
mov
mov
ljmp
into
xchg
jg
xor
push
and
orb
mov
mov
jg
cmp
mov
and
pushf
inc
icebp
repnz
jle
dec
lahf
test
adc
mov
or
scas
adc
adc
or
push
rcrl
mov
jo
hlt
ljmp
aaa
cmp
add
jp
shrb
xchg
sbb
fidivs
lods
mov
lock
arpl
les
lcall
rcrl
rorl
dec
cmp
mov
aam
push
cmpsb
popf
arpl
je
or
cmc
mov
jne
aaa
ret
cmp
loope
mov
gs
mov
outsb
pop
add
push
xchg
jno
xor
hlt
repnz
sar
inc
rol
push
or
mov
sbb
add
jno
pop
cld
mov
sbb
movsb
lcall
dec
outsb
cmp
ds
clc
stc
std
lcall
out
pop
bnd
je
test
stos
sub
mov
popf
pusha
adc
call
ljmp
scas
sahf
jle
sub
xchg
icebp
sbb
aad
xchg
cmp
jl
cmc
cli
jg
rcrb
inc
mov
or
aam
push
lcall
andb
mov
xor
ret
enter
jae
mov
stos
insb
scas
sbb
dec
in
mov
xor
fadd
inc
xor
ljmp
adc
bound
imul
pop
subl
into
jb
iret
inc
mov
mov
testl
stc
xchg
lods
jmp
pop
outsb
pop
xor
mov
pop
pop
sub
testb
push
jne
cmpsb
int
push
lods
shl
stos
dec
mov
aaa
lcall
inc
pop
int3
and
in
mov
shr
dec
std
insl
add
loop
cmp
add
lcall
inc
xchg
xor
push
lods
mov
pop
cltd
es
add
jg
and
cs
inc
mov
xlat
xchg
jns
lds
mov
roll
stos
jnp
push
sbb
outsl
inc
nop
mov
decl
add
aam
adc
cmp
roll
cmpsl
clc
push
pusha
dec
das
xchg
sub
fbld
in
jb
ss
cmpsl
inc
jmp
lods
xchg
sbb
mov
ljmp
leave
test
stos
add
xor
mov
adc
lret
and
jg
jmp
mov
jne
imul
ss
inc
sbb
xchg
enter
lcall
xlat
mov
das
icebp
imul
jmp
mov
nop
icebp
cld
push
in
movsb
jmp
in
cmp
incl
lods
enter
pop
mov
movsb
lret
mov
lock
sbb
cld
jmp
xchg
aaa
cld
es
pop
sub
mov
stc
cltd
test
and
lods
nop
push
dec
xlat
cld
inc
pusha
dec
in
test
or
and
or
fstpt
inc
mov
xchg
mov
mov
ret
jmp
push
pop
pop
jb
test
adc
dec
sbb
mov
scas
lret
fbstp
subb
js
jns
out
pop
fisubrs
das
xchg
push
sub
sar
mov
icebp
iret
and
outsb
ljmp
mov
sub
pushl
pop
add
mov
push
cmp
adcb
adc
stc
aas
add
jge
jne
out
dec
xor
jg
add
mov
in
insb
lret
xlat
mov
jo
fildl
ss
mov
clc
inc
sahf
les
add
mov
subb
jg
add
xchg
dec
popf
inc
and
ds
or
sub
imul
xor
fs
popa
xchg
hlt
stc
sub
aam
cmpb
dec
mov
lret
sub
into
repnz
xor
cmova
jg
sbb
jne
call
sbb
dec
xor
loope
mov
pop
dec
mov
sbb
int3
push
loope
or
in
adc
mov
mov
pop
mov
pop
jmp
jbe
adc
movsl
pop
ja
insb
or
dec
mov
ljmp
cmc
and
call
jb
pop
lds
pop
jle
cmp
std
jno
std
lret
lcall
mov
pop
movsb
fwait
int
sub
fidivrs
inc
rol
lods
pusha
rcrl
pushl
lret
lock
shlb
cwtl
fdivrs
pop
and
das
cld
pop
cld
and
test
out
jnp
cmpb
popf
lret
js
mov
loop
loop
push
arpl
jae
es
cld
pushl
or
push
in
cld
stc
es
sbb
sti
popf
push
test
sub
cld
lcall
push
movsb
xchg
jp
or
xchg
das
mov
dec
inc
mov
ficoml
push
ret
mov
push
mov
cmp
adc
fisubl
ljmp
jg
add
test
push
aad
add
jge
inc
inc
mov
ss
cmp
lods
cwtl
in
out
outsl
icebp
jmp
jns
and
test
testb
in
invd
pop
adc
aas
popf
fcomip
shl
icebp
lock
and
inc
lcall
mov
and
mul
aaa
clc
decl
popf
pushf
lods
sbb
out
sbb
mov
adc
adc
outsl
cld
pop
shl
mov
in
les
arpl
cmp
push
cmp
jg
jg
or
lahf
in
mov
xor
outsl
add
adc
incl
xchg
inc
test
sahf
movb
fwait
sbb
ret
shr
lods
or
push
xor
call
mov
pop
cltd
jg
test
pop
push
sub
push
pop
shrb
and
int
xor
pop
int3
xor
xchg
popa
lcall
mov
sbb
and
lret
mov
cmp
fucomip
xor
iret
add
push
add
lods
andl
xchg
clc
outsl
mov
or
sbb
ljmp
std
ljmp
mov
mov
movb
lds
xor
add
ret
loope
mov
cmc
divb
fisttpll
ljmp
xor
sbb
mov
dec
lret
mov
jno
cwtl
inc
decl
ljmp
fnclex
insl
adcl
xor
sbb
decl
incl
jge
nop
into
pop
dec
jae
iret
mov
cs
dec
cmp
and
incl
int
jbe
loop
mov
push
scas
push
dec
fmull
cld
push
add
add
xor
jg
adc
xchg
push
push
inc
mov
orl
mov
xor
arpl
mov
push
or
pushf
call
mov
ljmp
cmpl
adc
cmpsl
mov
push
xchg
dec
shll
add
add
sbb
mov
ljmp
mov
mov
xchg
or
adc
pop
jecxz
jnp
sbb
cmp
add
dec
aad
sarl
es
xchg
dec
mov
mov
mov
push
or
lock
sahf
aaa
jno,pt
filds
test
mov
inc
aas
sub
hlt
xchg
in
xchg
jo
incl
pushl
jne
jl
loope
cmp
inc
fisttpl
add
jg
pop
pop
sbb
xor
xor
dec
inc
idivl
mov
decl
je
push
cmp
adc
repnz
stos
movsl
std
pop
scas
sub
fdivr
lods
pushl
mov
xorl
movl
push
jle
push
aam
jg
mov
repnz
xchg
cmovns
loope
mov
je
js
call
inc
dec
push
lret
sub
mov
call
add
pop
sub
mov
pushl
das
sbb
loop
fstpt
jmp
or
cmp
pop
fs
cmp
cmp
xchg
or
inc
bound
sub
sub
decl
jmp
jp
cmp
xlat
push
std
leave
xchg
lods
aad
filds
mov
xor
pop
sbb
ss
pop
mov
arpl
decl
pushl
rclb
movb
adc
dec
insl
add
sbb
incl
out
inc
addb
outsl
imul
scas
xor
sarb
adc
pushl
ljmp
imul
insb
cli
xchg
lcall
jmp
push
adc
iret
stc
sub
jbe
xor
clc
pop
aas
mov
sbb
idiv
push
leave
rcl
int3
xchg
popa
pop
jno
push
bound
mov
icebp
std
icebp
cli
cmp
sti
mov
gs
das
sub
int
rorb
outsl
cltd
or
add
mov
les
push
mov
popa
subl
adc
jmp
fsubrl
jb
sarb
lcall
mov
imul
insb
dec
nop
aam
xchg
jmp
clc
aad
pushf
loope
call
ljmp
or
lods
das
leave
mov
scas
enter
pushl
and
je
and
in
jmp
movsl
inc
std
sub
xor
call
lcall
jns
dec
mov
jno
inc
pop
arpl
imul
sbb
cwtl
jecxz
mov
push
adc
sahf
repnz
cld
aam
pop
or
jg
mov
jle
hlt
frstor
popa
or
or
pop
cmp
incl
xchg
in
jnp
add
into
sbb
and
aad
imul
add
and
push
xchg
inc
iret
das
pop
dec
pop
shll
loopne
rclb
call
push
les
adc
cs
mov
shll
add
jno
inc
roll
frstor
dec
dec
inc
sbb
lcall
cmpsl
lods
jg
das
jo
pop
push
cltd
mov
xor
inc
cmp
aas
mov
inc
sbb
decl
mov
mov
repz
stos
sub
movsb
pmulhw
test
cwtl
push
fisubs
out
insb
jle
and
sub
mov
mov
cmp
je
mov
call
clc
jne
cmpsl
outsl
jecxz
mov
cmp
pop
xor
lcall
push
xor
out
mov
cmp
xchg
cltd
std
rclb
mov
cmp
inc
stos
sbb
inc
push
sbb
and
mov
cmp
xchg
jbe
test
mov
js
sbb
stc
mov
pop
loopne
inc
daa
subb
adc
or
mul
sbb
sub
ljmp
xor
aaa
mov
cld
pusha
outsb
dec
dec
jo
cwtl
movsl
movsb
or
mov
mov
outsl
sub
clc
pop
aas
jmp
mov
in
mov
ret
iret
lahf
xor
mov
push
imul
mov
in
outsl
loopne
mov
push
push
push
lock
int3
out
test
pop
adc
mov
bound
cmp
xor
pop
dec
call
lods
pop
stos
cs
pushl
cli
dec
cmp
mov
sbb
jecxz
sbb
adc
push
insl
sbb
fcmovnu
outsl
dec
jl
ljmp
cmp
insb
int
add
cmc
pushl
cmp
add
les
outsb
sbb
adc
and
jns
mov
test
pop
imul
lock
jmp
inc
je
adc
sbb
loopne
bound
inc
test
jmp
mov
cmc
jnp
mov
filds
cmp
xor
mov
cs
and
sub
outsb
mov
inc
mov
dec
cld
push
popf
fs
mov
les
mov
dec
push
fldcw
repnz
je
jl
sub
mov
outsb
iret
jg
loopne
stos
xchg
insb
cmp
movsl
xchg
out
ljmp
dec
std
lds
pop
popf
sti
sbb
rcll
dec
jno
mov
arpl
incl
sub
dec
push
cmpsb
into
push
cli
add
stos
sahf
rcrl
out
out
stos
cld
xor
adc
lock
call
addr16
adc
or
xchg
lcall
mov
shll
stos
or
dec
cmc
ljmp
jg
dec
fildl
and
cmp
xlat
fistl
xchg
out
pop
push
loopne
mov
shl
and
lahf
xor
jmp
js
imul
mov
fildll
pushf
sub
pop
and
pop
or
mull
cmpsb
in
pop
leave
je
and
xchg
repz
jb
sbb
stc
inc
pop
cwtl
xchg
or
stos
jbe
xor
mov
aas
adc
ljmp
loopne
jmp
mov
cld
jmp
adc
sbb
adcl
xor
mov
cltd
jns
lods
clc
loope
das
xor
mov
sti
dec
shl
xlat
mov
cwtl
sbb
push
xchg
call
test
test
xchg
inc
sub
arpl
push
out
incl
jmp
pop
mov
imul
inc
or
in
mov
popf
mov
mov
gs
mov
or
shl
in
das
bound
call
cli
cs
sub
shrb
sti
movsl
jp
adc
inc
jmp
push
jg
nop
loope
or
pop
pop
aad
dec
test
jecxz
in
mov
outsl
mov
inc
incl
cmp
mov
inc
sbb
ds
cmc
mov
in
jmp
inc
add
jmp
loopne
mov
es
or
fwait
sub
shr
add
decl
popa
les
add
xchg
dec
scas
sbb
pushl
adc
lods
push
arpl
repz
fcoml
jmp
sbb
out
imul
mov
mov
pop
loopne
sbb
xchg
push
lds
xchg
push
jecxz
mov
or
fistpll
mov
sub
lcall
jns
loope
mov
push
sub
data16
test
jb
push
add
data16
aas
int
mov
push
fbld
lods
outsb
push
pop
push
mov
xor
sub
cmp
sbb
adc
push
sub
cmp
pop
js
sbb
ja
outsb
hlt
mov
mov
cld
or
fdivs
mov
push
out
shlb
stos
ret
ret
leave
pop
inc
push
push
decl
add
mov
mov
insb
sub
and
nop
gs
cmc
dec
jmp
stc
push
xlat
push
mov
mov
mov
push
loope
call
jmp
ljmp
or
jnp
adc
mov
int3
dec
loop
dec
pop
stos
cmp
cmp
or
call
loop
jbe
mov
pop
push
or
dec
mov
les
mov
mov
mov
jg
mov
or
xlat
test
leave
scas
jnp
cmp
ljmp
addb
inc
push
enter
dec
icebp
lea
testl
in
outsl
std
lcall
jmp
cwtl
js
dec
mov
jmp
mov
jg
or
popf
inc
outsb
out
sub
imul
xor
adc
adcb
push
sub
fsubp
shll
jmp
pop
xor
pop
loop
jmp
xor
jb
out
fnstsw
jecxz
pop
aam
addr16
cli
dec
or
adc
mov
in
fnstenv
lcall
rolb
sahf
xor
inc
ljmp
mov
lods
push
es
xchg
mov
or
jg
jl
hlt
sbb
sbbb
push
mov
mov
loope
insl
xor
and
addr16
ja
add
pop
dec
out
in
add
mov
xchg
and
subb
fwait
jno
mov
outsl
sbbl
mov
push
adc
lock
jg
and
cltd
pushl
stc
jmp
es
mov
sub
sar
in
inc
cmpsb
ds
rcr
in
and
adc
push
ljmp
cmp
movsl
out
or
out
sti
push
jne
in
loop
lock
cmc
inc
aad
push
in
test
jnp
mov
pushl
sub
push
cmp
sub
jmp
mov
nop
inc
pushl
pop
push
fbstp
sub
and
xor
sub
in
andl
shr
pushl
mov
mov
das
scas
mov
mov
push
or
xchg
mov
std
gs
cwtl
mov
push
adc
jg
scas
ljmp
push
es
out
fidivl
std
or
rcll
sub
cli
iret
fsub
test
shr
lcall
incl
in
jnp
sti
adc
movzbl
push
add
stc
call
movsb
cmp
hlt
imulb
cld
sub
clc
fcomps
inc
dec
aad
dec
incl
xchg
sbb
mov
sahf
lods
mov
lods
xchg
mov
and
mov
repnz
pop
xchg
cmc
mov
xchg
fidivl
jg
roll
fisttps
xchg
gs
sbb
push
inc
cmc
call
add
pop
cmp
cmp
fst
inc
adc
dec
popa
scas
jg
mov
mov
push
rcl
cmc
xchg
dec
in
sbbl
sbb
cld
rolb
lahf
mov
in
adc
decl
ja
fucomp
sub
lret
cmp
push
push
lds
int
outsl
add
adc
in
sti
adc
decl
roll
test
cmc
push
fidivs
xor
fmulp
push
jno
test
push
or
call
jge
js
cmpsl
jg
iret
fldt
fbld
ds
jg
pop
sbb
sub
pop
pop
jge
daa
xor
xchg
mov
or
inc
gs
outsb
jae
imul
test
pop
cli
psrad
cwtl
scas
push
paddsw
nop
mov
jmp
sbb
fstpt
lahf
call
mov
incl
pushl
sub
jns
adc
cli
jg
decb
sub
push
into
or
imull
push
sub
add
das
ret
jl
aas
stc
loop
sbb
test
fcomp
xchg
mov
mov
sbb
in
ret
adc
imul
cmp
clc
sbb
movsb
pop
inc
test
insb
xchg
scas
xchg
add
pop
hlt
jo
pop
rcrl
aas
fucomip
mov
int3
push
mov
cmp
mov
ss
mov
push
xor
inc
pop
cli
out
pop
rorl
fnstenv
push
dec
cwtl
adc
jbe
ret
mov
arpl
ljmp
inc
xchg
arpl
out
xlat
cltd
or
repnz
out
add
loop
in
outsl
lock
incl
push
out
mov
xchg
int
jl
jmp
jns
cli
pop
jb
jmp
aad
pop
leave
dec
scas
ficomps
and
and
into
cwtl
test
mov
fwait
or
rcll
sti
mov
shrl
adc
loope
jo
repz
clc
lcall
mov
inc
movsb
cmpsl
ja
dec
faddp
mull
pop
or
pushl
ficoms
xlat
inc
mov
popf
mov
leave
fstps
test
and
call
pusha
inc
push
mov
je
mov
inc
ret
cmp
aad
push
mov
pop
call
lcall
into
sahf
pop
sbb
cld
dec
ret
decl
mov
dec
scas
imul
sbb
fmuls
nop
mov
insl
lcall
daa
ja
mov
xchg
xor
addr16
jecxz
pop
cmp
ret
cld
daa
mov
sarb
mov
and
or
jne
movsb
sbb
or
les
and
aas
repz
cmpsb
daa
movsl
mov
inc
adc
push
bound
lcall
cld
jge
lods
pop
cmp
sbb
out
ret
jnp
mov
clc
lods
mov
push
adc
mov
mov
sbb
cld
jle
mov
mov
int
inc
fidivl
clc
enter
mov
cmp
pop
std
pop
jp
fimuls
cmpsb
imul
fwait
mov
xchg
into
dec
pop
js
in
pop
shrl
adc
lret
outsl
subl
stos
pop
push
pusha
sub
lea
push
outsl
mov
sti
sub
test
out
cli
sbb
ds
incl
lods
xor
pop
mov
aad
dec
push
loope
out
jmp
decl
adc
pop
fbld
inc
mov
mov
dec
jmp
push
mov
cwtl
out
fs
in
das
xchg
push
dec
xchg
push
ret
enter
mov
in
pop
das
cmc
push
mov
push
push
or
mov
cmpsb
stc
aad
xchg
mov
inc
mov
idivl
aas
insl
push
call
pop
inc
ret
mov
cld
pushl
pushf
das
cmp
rcll
jne
cmpsl
fsub
jo
fistps
jg
lcall
stc
dec
cmp
dec
mov
xchg
imul
iret
aam
cli
and
pop
jmp
leave
or
push
pop
jne
sub
mov
mov
loope
ror
call
inc
stos
loopne
cmp
hlt
add
clc
push
loop
js
out
out
int
negl
add
in
mov
dec
push
mov
cld
call
mov
mov
testl
loopne
loope
xor
jbe
cltd
test
decb
dec
dec
and
push
fistpl
jg
xor
out
out
loopne
popf
jle
fdivrl
subl
mov
inc
jle
stc
pop
lahf
popf
jecxz
xor
ljmp
daa
jmp
jecxz
mov
in
push
mov
mov
aaa
push
ja
loop
mov
mov
inc
decl
lret
mov
jmp
mulb
or
cmpsb
mov
mov
test
jmp
cwtl
cmp
add
mov
sbb
push
fsubr
mov
jmp
mov
mov
dec
mov
jmp
decl
xlat
adc
int3
mov
fs
ds
movsb
je
shrb
pop
xchg
std
ljmp
add
push
pushf
dec
cs
push
or
movsl
stos
sub
sbb
ret
incl
push
js
or
adc
hlt
sbb
push
mov
xor
cmp
or
ljmp
insl
mov
sbb
jae
out
ljmp
cld
adc
cmp
in
out
mov
mov
popa
in
lret
rcl
mov
frstor
mov
inc
jg
jbe
pop
add
xor
cmpsb
repz
mov
outsb
test
addl
xchg
in
not
pop
cmpsb
stos
add
jb
pop
sub
dec
push
addl
movsb
call
mov
mov
incb
mov
insb
in
imul
imulb
fucomip
mov
xor
cltd
dec
arpl
xchg
pop
cli
call
push
daa
mov
pop
push
mov
xchg
mov
cs
jg
loope
sbbb
mov
aas
mov
insb
or
daa
mov
mov
ljmp
cmc
pushl
pusha
mov
leave
pop
jns
icebp
xor
mov
inc
jmp
int
sarl
push
ljmp
jp
push
mov
ret
loopne
xor
clc
sbb
mov
shlb
mov
int3
push
dec
jnp
cmc
ficoms
jmp
and
outsl
mov
jge
cltd
pop
sub
sahf
mov
out
lea
loopne
jae
dec
cmc
iret
in
push
add
out
lret
inc
call
std
push
add
cmpsb
roll
fiaddl
out
push
and
push
xor
call
test
bound
out
andnps
dec
mov
push
test
xchg
fldcw
jge
test
sbb
mov
fs
pushl
mov
nop
xchg
dec
pop
cmp
or
jae
imul
sarb
stos
xor
push
mov
sub
and
subl
cmp
cmp
ficomps
arpl
jbe
sbb
and
push
mov
clc
inc
xchg
mov
in
mov
xchg
push
and
lock
aaa
pop
ljmp
sub
mov
fnsave
pop
xor
add
ljmp
push
in
xchg
cmpsl
addb
std
jae
push
add
mov
int3
rcr
dec
arpl
cli
lea
pop
or
jle
insl
sbb
call
sbb
rcll
sti
xchg
lock
call
lods
js
es
push
sub
fbstp
add
add
jl
push
ljmp
lock
cmp
jmp
int3
pop
sbb
or
scas
mov
lcall
sub
fsub
sbb
cmp
cmp
dec
xor
cmc
lods
xchg
popa
mov
or
es
adc
push
sahf
shrl
mov
decl
cmp
cli
pop
clc
popf
cmpl
int3
jge
mov
jg
jno
xor
sbb
test
hlt
adc
mov
in
xchg
xor
loopne
fnstsw
jmp
sti
hlt
adc
mov
pop
cmp
hlt
push
jle
cli
mov
mov
gs
xchg
rorb
dec
or
fnstenv
jnp
jg
outsb
inc
ss
push
sbb
ja
mov
popf
add
mov
mov
mov
mov
push
and
mov
inc
clc
mov
cld
sub
clc
in
jnp
jg
mov
arpl
stc
cmp
sub
bt
xchg
mov
mov
cmpsb
shrb
fwait
stos
xor
jmp
decb
mov
add
add
fmull
pushl
pop
scas
xchg
aas
es
cmp
lret
inc
jmp
pop
fistl
xlat
xchg
jmp
shlb
inc
and
xchg
ds
nop
pop
mov
stos
and
in
xor
pop
jns
pop
jge
push
lock
inc
mov
adc
add
cmp
inc
add
ljmp
imul
loope
pop
dec
into
stos
popa
mov
fimuls
hlt
sbb
jnp
push
mov
das
filds
ljmp
popf
imul
cmpsb
ss
push
jecxz
clc
xor
jecxz
into
mov
mov
push
xor
mov
cmc
decl
stc
pop
lahf
add
sbb
push
xor
add
cmp
std
call
adc
dec
jbe
or
sbb
lods
xchg
cli
incl
ret
dec
ret
ds
scas
ret
out
lahf
jno
jle
mov
repnz
mov
std
into
or
es
and
pop
mov
imul
std
sub
test
sarl
pop
pop
std
add
incb
sub
jmp
or
ret
sub
lret
mov
imulb
outsl
hlt
push
inc
mov
outsb
and
mov
adc
or
sbb
sub
or
sti
mov
das
cli
xchg
pop
mov
cltd
cmp
loop
or
daa
test
incl
shlb
sbb
dec
test
hlt
or
push
adc
pop
or
mov
ljmp
repnz
repnz
xchg
popf
add
mov
icebp
pop
ficoml
mov
cmp
data16
jl
mov
push
xor
xor
pushf
shll
ja
jg
jmp
lret
adc
outsb
les
test
jae
orl
pushl
sbb
mov
cs
pop
adc
jns
cmp
and
loop
and
ljmp
jmp
lock
pop
mov
das
out
adc
xor
and
push
inc
loope
cmp
popf
inc
das
jns
lock
pusha
cmc
lock
inc
mov
adc
daa
daa
cmp
xchg
rcr
jo
mov
movsb
xchg
pop
dec
adc
pushl
int3
jno
or
or
int
adc
data16
pop
ret
outsl
lock
adc
dec
mov
imul
aad
cmp
test
jbe
hlt
ljmp
dec
sbb
and
inc
push
xchg
lea
ja
in
ljmp
inc
xor
mov
pushf
lcall
jnp
cmp
and
and
jmp
cli
adc
int3
std
mov
adc
hlt
pop
pushl
xchg
lea
int
movsb
int
shl
cmp
dec
mov
mov
outsl
inc
push
mov
sahf
or
repnz
mov
xor
stos
aad
pushl
cli
push
dec
and
movsl
jl
rclb
inc
push
fdiv
mov
std
lods
stos
jg
fnstcw
pusha
pop
xchg
cltd
push
push
cmp
data16
ljmp
pop
incb
push
stc
out
xchg
iret
sbb
test
ljmp
imul
pop
dec
jmp
scas
loope
xor
mov
pushf
stos
mov
pop
sbb
xlat
mov
cli
mov
loope
adc
mov
gs
test
mov
scas
jle
sti
mov
dec
add
mov
push
jbe
cmp
xor
outsl
pushf
std
jno
inc
sbb
std
sahf
cmpsl
cmp
sbb
and
adcl
xchg
dec
or
and
mov
push
stos
mov
sub
jae
or
outsl
insb
aad
pop
pop
ficoms
jbe
jo
iret
cmp
lds
dec
cmc
adc
sbb
call
and
pop
xchg
mov
inc
pop
mov
mov
inc
inc
add
iret
xor
xchg
push
jmp
aaa
js
ret
insl
lahf
mov
mov
ss
test
jg
mov
cltd
inc
ret
jbe
xor
aaa
fwait
das
mov
jo
std
outsl
lock
xchg
sub
popa
fdivs
movsb
jge
push
in
mov
xchg
jp
clc
lcall
mov
jmp
sub
es
fadd
and
pushl
push
or
mov
orb
jl
pop
mov
outsl
std
mov
das
push
dec
clc
cwtl
pop
inc
jmp
cld
lcall
adc
and
mov
loope
stos
or
movsl
outsb
hlt
sbb
pop
lods
cmp
xchg
adc
std
insl
out
leave
xor
ret
cld
fldenv
stos
clc
scas
ljmp
lods
xor
mov
iret
hlt
sub
xchg
incl
out
into
inc
xor
and
shrl
cmp
pushl
sub
cmc
lds
int3
outsl
inc
mov
cmp
inc
mov
andb
stc
jns
je
and
pushf
movsb
push
icebp
call
pop
mov
and
xlat
loop
jmp
call
cmp
bound
dec
or
mov
ja
fcmovne
jmp
xor
loopne
ljmp
xchg
sub
adc
lea
add
std
sbb
add
mov
push
push
lds
pop
jmp
adc
imul
xchg
or
decl
cmpsb
lds
mov
cmp
lret
xchg
aam
jbe
lcall
in
jmp
bswap
jae
push
mov
jge
stos
shrl
ljmp
out
mov
popa
popa
or
sub
mov
cmp
std
fcoms
sarb
inc
adc
jno
mov
jecxz
repz
stos
adc
push
sahf
dec
mov
pop
sarl
test
pop
incl
repnz
shr
loopne
mov
mov
sbb
lods
inc
int3
nop
xor
out
rolb
cmpsl
jecxz
pusha
mov
add
in
loop
inc
outsb
test
lods
data16
adc
stos
pop
out
call
jge
pushf
add
es
std
sbb
dec
dec
jae
push
into
sub
idivb
or
inc
jb
xorb
cmp
idiv
outsl
loope
xrelease
lret
jns
jl
shrb
je
movsb
jmp
daa
or
test
dec
std
das
cld
push
xchg
inc
fwait
insb
pusha
or
pushf
and
ja
ds
stos
mov
shl
iret
ss
jmp
dec
aaa
adc
iret
out
jnp
pushf
cmp
adc
pusha
jmp
xchg
dec
cmp
add
test
jmp
push
and
fildl
loope
jg
outsl
mov
fucomi
jbe
jp
and
lods
inc
sbb
mov
add
mov
xchg
mov
aas
rol
daa
mov
jecxz
jg
sub
cmpsb
es
faddl
movsb
dec
jle
push
jg
sub
push
xchg
movsl
outsl
cmp
push
jge
cli
outsl
icebp
je
adc
pop
pusha
int
inc
pop
lods
xchg
aad
or
push
outsl
icebp
outsl
adc
adc
mov
jmp
and
out
mov
mov
jne
xor
mov
andl
inc
mov
mov
mov
es
aam
pushl
sbb
cli
mov
cltd
sbb
decl
add
rol
lock
push
fcmovbe
fcom
or
mov
pop
pop
dec
xor
movsb
outsl
fxch
int
ja
xchg
push
and
jno
gs
mov
aam
jp
je
ret
loop
cmc
jge
insb
jo
rcrl
outsl
push
and
stc
repnz
arpl
lock
nop
lods
das
xlat
mov
mov
loopne
dec
xor
int3
sub
das
jb
inc
inc
mov
lret
in
dec
in
pop
test
add
cmpsl
add
jg
pushf
xor
leave
testb
xchg
mov
mov
lcall
jnp
jge
sahf
adc
ror
jo
lock
addr16
in
fisttpl
ja
inc
cwtl
loop
push
lods
or
int3
sub
into
or
orl
leave
aaa
mov
jnp
sahf
cmp
call
inc
int3
dec
fisttps
sbb
pop
aad
push
push
insl
inc
outsl
xor
lahf
sarl
jmp
xor
and
xchg
cltd
daa
cmp
xchg
and
decl
std
loope
test
leave
sbb
mov
dec
in
fidivrl
orl
subb
and
incl
mov
push
jne
pop
in
nop
in
push
jg
test
adc
xor
push
adc
push
stc
push
or
jge
leave
popf
mov
jns
pop
xlat
pop
mov
jno
sahf
or
out
or
in
dec
hlt
mov
je
iret
or
mov
decl
inc
add
mov
cmc
xchg
jmp
jle
popf
test
and
cmpsb
sbb
pop
xchg
cli
push
mov
daa
or
push
test
out
xchg
ret
sbb
loop
call
idivb
lock
mov
clc
add
call
shrb
std
int3
test
sarb
outsb
sbb
and
add
ror
int3
or
ud0
jmp
shl
out
out
popa
lods
fistps
sub
sbb
add
fs
mov
push
sbb
sbb
popf
push
iret
pop
and
xchg
fcmovnb
pop
mov
mov
cld
adc
dec
mov
adc
out
ficomps
push
push
std
out
push
pop
sti
scas
mov
mov
shrl
inc
push
push
pop
inc
push
jecxz
hlt
pop
mov
int3
add
sub
mov
jg
dec
lods
std
gs
icebp
popf
stos
push
lahf
lock
rcll
pop
stc
pushf
mov
pushl
les
in
arpl
xor
es
mov
insl
stc
mov
jg
das
enter
scas
push
rorb
push
insl
mov
jp
lahf
adc
ja
or
sub
incl
mov
mov
or
pushl
out
dec
pop
lock
inc
cmp
repnz
cmpsl
inc
push
or
incl
das
and
xchg
xchg
cmp
fs
jecxz
pop
faddl
sbb
decl
pop
shl
int3
imul
rorb
pushf
repz
loop
inc
das
stos
je
rcrl
jmp
inc
jg
adc
inc
xor
xor
pushf
mov
std
out
or
clc
int
pop
divw
push
xor
in
pop
xor
pushf
roll
aas
jbe
mov
mov
xor
adc
dec
vcmppd
mov
nop
addb
push
nop
icebp
dec
dec
ds
fwait
jno
adc
mov
cmp
lods
test
mulps
sbb
mov
test
pushl
add
into
jb
addr16
ljmp
mov
loop
mov
push
inc
daa
push
adcl
cmpsl
mov
and
dec
cmp
andl
adc
incl
adc
push
dec
loope
imul
fidivs
fsubs
hlt
inc
lea
push
mov
ljmp
dec
adc
push
aaa
pusha
lea
daa
addr16
das
push
ljmp
das
jmp
ret
inc
jg
or
incl
decl
mov
inc
pop
lret
xor
add
into
pushl
pushf
sbbb
in
lret
insl
xor
movsl
cmpsb
aaa
cli
dec
xor
xchg
mov
add
inc
lock
fildll
fldcw
notb
adc
cmp
int3
fimull
loop
mov
adc
dec
sbb
imul
push
xchg
push
push
cld
sub
pop
xor
call
leave
jle
scas
jmp
aam
arpl
pushl
xor
outsb
clc
pop
xchg
mov
cltd
pusha
ja
xor
xchg
out
jle
dec
sub
das
inc
aas
negl
stos
fldl
aad
mov
xchg
mov
enter
int
int3
in
inc
out
add
out
and
loope
push
mov
jns
inc
popf
out
mov
out
pusha
pop
ja
xchg
cli
jg
or
cltd
int
ret
daa
in
adc
add
call
outsl
cmp
ficoms
pop
mov
and
pop
fs
pushl
je
cmp
subb
sbb
gs
xchg
dec
hlt
shrl
into
ljmp
push
rorb
sub
mov
mov
cmp
xor
cwtl
idivb
pusha
ljmp
imul
aaa
pushl
lods
jmp
adc
stos
cmp
mov
jne
jp
mov
es
fwait
lcall
std
jge
mov
fbstp
and
sti
aad
cmpsb
fdivr
push
ljmp
push
xchg
xchg
cmp
or
dec
repz
and
lahf
fcmovb
mov
stos
cmc
jg
cwtl
mov
adc
imul
in
xchg
aaa
inc
rcrl
out
cmp
ljmp
push
sbb
dec
push
adc
cmpl
pushf
mov
jne
lcall
and
insb
xchg
dec
or
xor
xor
xor
stc
paddd
dec
std
mov
insb
cmp
pop
jmp
mov
fstp
scas
xchg
mov
jmp
addr16
leave
in
mov
sbb
incb
adc
add
iret
fidivrs
add
mov
inc
mov
cmpsl
push
mov
dec
xor
movsb
mov
mov
or
push
mov
jle
gs
sub
add
std
pop
outsb
inc
jge
and
out
lods
xchg
arpl
or
dec
mov
outsl
push
push
sti
fwait
loopne
xchg
push
lret
and
incl
in
xchg
push
cmp
divb
clc
xorb
out
cmc
add
and
jmp
jmp
jge
fidivl
bound
or
out
js
lock
inc
jmp
and
pushf
lds
pop
dec
push
push
jge
cmp
inc
stos
pushf
cmpsl
addr16
outsl
cld
pop
icebp
aas
jne
hlt
and
jle
jno
cmc
mov
push
or
pushl
ds
inc
push
cmp
push
or
and
sbb
incl
es
mov
sub
aaa
push
ror
cli
jbe
xor
pop
nop
incl
or
scas
cmc
sahf
dec
xchg
ljmp
movsl
pop
mov
outsl
cld
ljmp
cli
push
push
das
sub
fdivrl
push
add
test
clc
je
inc
out
js
mov
jecxz
pop
mov
movsb
inc
adc
jno
test
or
mov
mov
pushl
push
insb
ljmp
xlat
xlat
fistps
notl
or
stc
outsl
rclb
lds
pushl
jb
insl
push
aas
bsr
andb
sarl
jmp
jae
mov
daa
adc
leave
mov
mov
cmpb
xlat
ret
pop
decl
and
xchg
ret
adc
sar
dec
mov
cmp
mov
in
mov
add
lret
gs
xor
mov
add
pushl
pop
xchg
mov
jnp
out
xchg
negb
fcmovnu
negl
shrl
aaa
cld
filds
or
xor
fidivl
int3
gs
and
ljmp
push
mov
shrb
add
cld
enter
cmp
int3
add
jmp
cmc
lcall
in
push
data16
jmp
sbb
cld
push
ds
jne
pop
adc
cltd
jle
rclb
xor
inc
incl
je
mov
cmc
leave
dec
push
std
push
fldt
jg
cmp
cmpsl
push
cld
call
mov
lods
mov
mov
jo
sub
inc
or
adc
dec
sbb
aam
add
or
mov
inc
fwait
push
scas
mov
and
mov
outsl
adc
pop
int
xor
dec
mov
test
sub
jmp
mov
cmpsb
out
ds
cmpl
fs
call
andb
outsb
push
mov
shlb
push
sbb
movsb
sub
inc
loope
mov
sub
data16
loop
std
outsl
push
and
xchg
or
gs
fnstsw
mov
add
in
inc
cmp
sub
fnstcw
iret
lods
pop
sahf
ja
das
std
lcall
stc
cmp
xchg
inc
push
or
into
dec
mov
cli
ljmp
nop
jns
xchg
pushf
sbb
xchg
mov
jnp
pop
mov
xchg
decb
mov
jb
pusha
aas
xor
xchg
push
mov
lahf
inc
xchg
cwtl
test
mov
jb
call
cli
test
test
loop
mov
mov
cmp
push
push
inc
ljmp
loop
push
arpl
inc
fwait
lea
iret
push
aam
adc
inc
cld
call
das
or
imul
push
xor
in
xchg
mov
ljmp
add
xchg
lcall
loope
or
aam
stos
xchg
jnp
dec
sbbl
adc
rclb
dec
repnz
pop
stc
mov
loope
mov
call
daa
fildl
cmpl
clc
flds
icebp
lcall
pop
imulb
outsl
les
outsl
push
fcmovne
cli
fucomip
jg
push
fs
scas
pop
orl
pusha
out
pop
cli
pop
call
pop
dec
push
push
movsb
js
pop
ljmp
cmpsb
pop
and
inc
ss
call
dec
jo
enter
fwait
mov
push
or
inc
mov
push
mov
aam
mov
shl
std
test
clc
mov
in
mov
cwtl
ss
test
lods
dec
cmpsb
mov
popa
stos
pushl
aad
test
cmp
pop
in
push
push
cmc
xchg
mov
jmp
mov
push
stos
das
fistps
pop
push
cmc
iret
jge
sub
or
mov
stos
arpl
insb
sub
jp
adc
outsb
popa
rol
jbe
mov
adc
push
cmc
push
loope
les
sbb
lcall
jge
decl
cs
sbbb
add
dec
mov
lcall
and
xlat
dec
xchg
and
ljmp
shl
lods
out
loop
jge
inc
adc
cs
push
push
aas
mulb
lods
nop
insb
arpl
or
nop
pop
xchg
push
mov
aaa
mov
fucomip
sbb
dec
pushf
bound
push
dec
iret
mov
int
mov
add
incl
sbb
add
mov
sbb
pop
or
daa
cmp
loop
push
inc
adc
pop
or
jmp
movsl
jbe
inc
mov
xstore-rng
cmpsl
les
cwtl
inc
arpl
adc
repz
and
scas
lock
jg
decl
inc
xor
pushf
in
mov
jge
data16
clc
loop
arpl
aam
sbb
test
icebp
icebp
cmp
mov
fwait
xorl
mov
test
lcall
dec
jg
ljmp
dec
xor
adc
adc
das
mov
aam
mov
or
loop
push
sub
fs
sub
test
incl
pop
repnz
stos
mov
xchg
jle
ret
setbe
hlt
sub
inc
cmp
mov
jp
outsl
inc
sar
scas
adc
inc
and
jge
xor
inc
repz
fs
jmp
jp
cmp
lock
cmp
cmp
decl
xchg
pusha
adc
nop
out
popf
inc
mov
pop
fwait
call
pop
loop
push
and
mov
jo
xor
mov
lcall
adc
fadds
pop
cmp
ret
mov
jmp
mov
fcom
ja
insb
lahf
cli
jg
pushl
cmp
xchg
add
movsl
nop
pop
ret
xor
sbb
in
push
inc
jmp
push
pop
pop
mov
jne
aam
in
mov
pop
mov
psubusw
jne
push
and
jl
cld
and
push
inc
sbb
mov
jmp
aaa
es
rolb
sub
decl
or
aaa
lahf
sti
adc
dec
div
fidivrl
adc
lret
das
pop
fiadds
ja
movsl
idiv
inc
mov
popf
in
sub
xlat
mov
dec
fnsave
loope
std
stc
sub
adc
inc
and
stc
arpl
cwtl
or
test
movsl
dec
mov
mov
adc
dec
jp
test
inc
sar
decl
and
xor
cmc
subps
test
es
xlat
and
adc
mov
sub
or
cld
sub
popa
inc
in
and
iret
mov
pop
clc
fucomip
adc
dec
mov
xor
sarl
lods
add
pop
icebp
dec
fisubrl
mov
pop
push
call
icebp
out
insl
inc
repnz
rorb
jo
fdivrl
adc
ljmp
movsl
dec
mov
mov
xor
shl
ret
shll
scas
mov
into
push
lcall
push
inc
cmp
mulb
test
stos
outsl
in
out
mov
add
loope
cmp
sahf
adc
add
dec
clc
cmpsl
pop
mulb
mov
call
nop
enter
loope
sub
adc
fucomip
xorl
sub
imul
mov
mul
pushl
push
ret
add
outsb
mov
adc
mov
jg
xlat
xor
pop
cmp
mov
lcall
push
sub
jg
inc
ljmp
jo
mov
call
jmp
pop
mov
test
negb
inc
popaw
adc
les
decl
iret
jg
data16
sub
hlt
cmp
mov
imulb
jle
xor
add
dec
push
xlat
push
lret
mov
push
nop
ljmp
lret
dec
icebp
stos
adc
lret
jmp
cmpl
push
ss
mov
sub
xlat
or
xor
pop
add
pop
cli
pop
imul
std
pop
xor
stc
call
lcall
scas
cmpsl
pop
cmp
daa
mov
movsl
data16
add
adc
incl
xchg
pushf
push
mov
or
incl
sarb
cmp
jl
dec
xchg
add
test
loope
inc
orl
dec
push
add
call
decl
ljmp
ja
jp
jmp
cld
pop
push
lcall
movsb
inc
cltd
jg
flds
mov
mov
mov
out
test
ljmp
icebp
mov
mov
adc
inc
in
inc
xor
push
data16
outsb
mov
cld
fcomps
cld
int3
and
xchg
or
inc
push
pop
adc
xor
mov
sub
jbe
lods
mov
mov
out
rolb
sbb
fs
scas
decl
cld
ljmp
inc
std
in
hlt
push
cmpsb
in
nop
cs
stos
or
cmp
cmp
sub
and
cmp
cmp
mov
imull
ret
xor
dec
pop
cli
dec
mov
aas
icebp
cld
cwtl
imul
cmpl
jg
dec
jmp
stos
inc
mov
inc
or
lods
daa
sbb
test
stos
or
pop
fucomip
pushl
and
mov
pushf
dec
add
pop
testb
call
test
mov
test
adc
aas
pop
pop
and
movsl
jns
add
mov
mov
lock
incl
jmp
sarb
loope
lock
mov
jp
cmpsl
dec
pop
ret
dec
mov
dec
gs
add
scas
mov
aaa
push
mov
and
call
add
mov
pop
jo
and
ret
mov
add
xchg
ja
sub
sbb
push
adc
inc
or
adc
jmp
ret
pop
dec
dec
shrb
rclb
ret
ljmp
mov
inc
or
in
sub
in
cs
sub
and
mov
fucomip
nop
addr16
mov
imul
xlat
sub
popa
jns
pop
test
sub
movsl
cld
push
jb
xchg
outsb
sub
or
addr16
pop
das
or
call
in
mov
divb
arpl
repnz
jge,pn
inc
ss
jp
outsl
std
inc
jg
xor
jmp
pop
push
pop
sub
jp
mov
daa
push
test
inc
lcall
jp
scas
scas
pop
call
mov
xor
mov
push
push
push
lods
and
sbb
inc
mov
or
lds
scas
pop
push
scas
pop
jp
inc
ljmp
dec
push
fstl
js
cmp
xchg
fildll
or
enter
mov
call
xor
je
cmp
push
fdivs
call
and
sahf
repnz
pushl
sar
sub
ja
push
push
xchg
insl
ret
xor
push
mov
jbe
test
pop
jp
call
add
insl
out
loope
js
ret
out
std
fucom
dec
fcoml
fldcw
movsb
cmp
dec
inc
xchg
and
ljmp
test
mov
xor
mov
mov
test
ss
mov
pushl
xlat
sub
mov
cltd
mov
inc
in
out
cmpsl
inc
mov
je
sbb
add
imul
int3
jo
incl
in
mov
nop
dec
aas
inc
sub
cmp
subl
mov
mov
insb
xlat
and
testb
ljmp
xchg
mov
call
fildl
pop
std
ljmp
scas
hlt
push
mov
push
adc
mov
rorb
sbb
call
lcall
pop
test
xor
xor
jnp
sahf
inc
jmp
add
decl
xor
nop
mov
dec
inc
ret
ja
addl
mov
loop
sub
add
das
sub
subl
movsb
or
mov
rorb
pusha
jg
push
pop
jns
cmp
in
mov
enter
add
ljmp
inc
xchg
jge
imul
lds
lock
fadds
push
sbb
xchg
into
mov
loopne
stos
sbb
inc
jne
icebp
pop
sbb
fldt
mov
dec
shll
add
cmc
pop
xchg
jmp
jae
movsb
orl
mov
jno
add
roll
rorl
jns
movsl
lcall
sbb
sub
in
cwtl
xor
push
sub
insb
pushl
cli
ljmp
and
sbb
push
les
stos
cmpsb
mov
xchg
aam
dec
and
daa
push
call
push
decl
inc
loope
mov
pop
mov
stc
clc
icebp
adc
pushl
nop
jg
ss
inc
das
xlat
or
test
jge
enter
mov
push
jnp
lock
jo
inc
iret
add
pop
mov
mov
push
dec
sub
push
inc
jge
sbb
cltd
jne
es
jns
cwtl
push
test
in
inc
std
arpl
rcrb
or
imul
pop
leave
notb
popa
pop
incl
inc
rcr
fistpl
je
rcl
xlat
xor
lcall
xchg
sbb
and
fsubrp
out
jo
mov
idiv
loop
ror
std
and
rcl
test
cs
jmp
push
push
mov
in
loop
fcmovu
xor
decl
sbb
xchg
xchg
xchg
and
lds
lahf
movsl
lea
jmp
inc
lret
pop
add
imul
call
jo
mov
inc
inc
imul
rolb
aaa
xchg
popf
push
mov
jne
ss
mov
push
rorl
ficomps
mov
int3
imul
fxch
cmc
test
mov
jg
sbb
add
and
mov
imul
jmp
adc
xchg
pop
movsl
sub
sahf
mov
or
cld
mov
xor
add
out
ja
aas
gs
nop
pop
mov
mov
out
iret
rolb
out
xor
adc
popf
in
cwtl
ficompl
fucomip
repnz
and
int
js
push
int
jg
cmpsb
dec
aas
jle
out
movsl
pop
cwtd
jo
jno
mov
adc
call
mov
outsb
mov
mov
arpl
dec
cmc
mov
mov
dec
dec
les
mov
mov
fstl
ficoms
decl
loope
leave
jl
pop
jl
xchg
dec
fiaddl
ljmp
push
jne
xchg
push
sbb
jmp
mov
push
or
call
cli
mov
jno
fldcw
je
mov
pop
adc
push
mov
std
call
int3
cli
lret
jne
dec
pop
pop
arpl
mov
sbb
cli
lcall
sub
idivb
insl
mov
incl
xor
xor
inc
insb
rclb
push
push
fidivrl
xor
inc
dec
mov
mov
cmpsb
popa
jmp
push
pop
ret
rorl
dec
mov
flds
pop
inc
je
adc
sub
fcomp
push
jae
in
lods
dec
mov
pushf
or
gs
aaa
pusha
addr16
out
cli
cmpsb
fsts
incl
es
pop
jmp
mov
test
sub
cmc
out
mov
mov
in
test
mov
repz
call
pop
fists
jmp
sub
into
ds
mov
fwait
jecxz
inc
stc
jne
mov
xchg
aas
jg
mov
inc
adc
jbe
movb
pushl
and
shrl
xor
imul
dec
test
push
stos
mov
inc
push
sar
push
dec
mov
cmp
imulb
mov
add
lcall
aad
lret
in
cld
stos
in
dec
sub
andb
int3
pop
mov
jg
jg
subb
sbbl
mov
xor
lret
mov
lcall
dec
mov
mov
sub
mov
repz
mov
enter
jmp
dec
adc
sbbb
dec
cmpsl
sbb
mov
sub
push
out
cmc
das
repz
out
and
mov
jge
iret
sub
popf
jmp
mov
pop
cli
lods
push
or
lret
sbb
out
mov
ljmp
push
dec
or
out
repnz
and
add
enter
lods
adc
fucomip
incl
loope
pop
jns
push
inc
in
mov
xchg
xchg
mov
insl
jle
mov
outsl
pusha
cmpsl
sti
call
ja
incl
lret
mov
sbb
clc
pop
int
repz
push
repz
je
rol
dec
mov
ljmp
jl
and
mov
dec
push
add
ja
divb
or
aaa
mov
jp
std
pop
ljmp
jns
andb
mov
imul
cwtl
leave
jg
pop
jp
sahf
getsec
mov
jp
enter
sbb
lcall
daa
sbb
out
push
mov
test
fisubs
inc
adc
ficompl
aam
dec
sahf
es
in
push
out
aam
mov
add
sbb
or
push
push
lea
xor
into
mov
xlat
loope
aad
loope
call
clc
sbb
jbe
ja
add
xchg
adc
pop
mov
lods
jg
push
ds
xchg
lock
enter
inc
xor
lods
lods
sbb
les
xchg
rcr
sub
ljmp
xchg
xor
xchg
and
fisttpll
mov
add
pop
xor
xchg
and
sub
scas
int3
cmc
xlat
mov
imul
in
lcall
mov
fwait
mov
ljmp
nop
mov
popa
xchg
inc
imul
mov
stos
cs
outsl
xor
loope
or
mov
repnz
dec
out
test
fistpl
mov
or
or
mov
shll
incl
lods
sub
and
cmc
push
out
xorb
in
push
sub
mov
scas
bnd
sbb
mov
cwtl
adc
cmp
or
incl
mov
and
adc
fists
xor
dec
in
icebp
sbb
shlb
xchg
arpl
mov
inc
in
decl
adc
and
mov
pop
cld
sti
or
cwtl
sub
inc
add
cmc
pop
push
jle
pop
test
imul
lcall
je
push
in
mov
fdivl
dec
cmp
sbbb
popf
mov
filds
fwait
sti
inc
xor
adcb
and
sti
leave
or
sti
fmull
int3
jg
in
or
and
lahf
sbb
ret
mov
mov
add
dec
lret
inc
cwtl
outsl
cmc
ljmp
jb
lods
imul
mov
out
mov
shlb
popa
sbbb
incl
fcomps
and
mov
jns
std
jmp
xor
or
and
fcoms
dec
idivl
jge
sub
xchg
and
inc
or
outsl
mov
and
jns
sti
or
mov
fs
mov
dec
movsb
out
lcall
sub
lcall
mov
push
insb
pop
pop
fistpll
pushf
dec
punpcklwd
stos
cmp
xor
cld
or
popf
mov
stos
jnp
add
jae
mov
add
jg
call
scas
fldln2
movsb
fs
or
movsl
or
dec
pushf
lods
insl
cld
push
ljmp
jmp
je
mov
test
call
inc
repnz
std
jge
pop
sbb
in
pop
push
push
insl
jg
xchg
out
lahf
ljmp
dec
inc
or
es
adc
push
into
adc
fsubs
leave
aaa
sti
inc
inc
outsl
orl
cmpsl
mov
push
outsl
jns
lods
push
fcompl
jbe
push
push
jp
fiaddl
lcall
std
adc
add
inc
aad
jl
pop
jecxz
movsb
inc
push
loopne
decl
jg
inc
mov
dec
adc
aad
pop
xchg
test
mov
lcall
cmp
sub
fsts
push
or
dec
mov
icebp
cmp
jne,pn
adc
add
stos
rcrb
aas
or
ljmp
popa
stos
xor
int3
test
insb
dec
xchg
xorl
add
mov
cli
dec
push
mov
test
xchg
sarl
stos
sbb
mov
dec
psrld
cmp
jns
push
mov
iret
call
es
fsubs
xor
cmp
lret
out
pop
std
pushl
mov
popw
cld
rcll
ficoml
and
scas
xor
lea
dec
mov
sbb
add
adc
xor
add
rorb
das
jmp
xor
xchg
mov
dec
jae
lcall
popf
lea
lods
xchg
data16
inc
mov
repnz
fisttps
pop
xchg
aad
mov
test
xor
cwtl
orps
inc
ja
dec
xchg
clc
sbb
rcrb
inc
lock
inc
fdiv
jg
add
ljmp
call
mov
cld
push
sub
pop
cmp
jl
test
dec
push
inc
inc
dec
loop
inc
dec
enter
decl
scas
call
xor
lods
ljmp
cmc
and
push
rcll
pop
mov
cmp
push
aam
rol
sub
aaa
inc
sbb
cli
jns
jmp
mov
test
sbb
inc
out
sub
pop
jl
pushl
cmpsl
inc
push
adc
fcompl
lahf
mov
push
in
faddl
jg
data16
nop
lcall
out
xor
bound
jg
and
push
push
cmp
xor
test
out
mov
ja
xchg
sbb
fisubrs
dec
xchg
sbb
ds
cmp
decl
mov
rclb
test
lret
dec
jno
and
pushl
jmp
and
cltd
add
sub
loopne
xchg
dec
popf
xchg
decl
mov
test
adc
shl
adcb
pop
insb
inc
dec
ret
add
lcall
pop
mov
pop
in
mov
mov
adc
sbb
in
and
popa
pop
xchg
mov
cvtps2pi
inc
insb
mov
call
mov
or
lods
dec
cmp
xorb
cld
pop
inc
icebp
dec
filds
sbb
inc
or
rorl
int
add
push
lret
add
pop
pushl
pop
shlb
gs
mov
arpl
int3
mov
leave
sbb
push
mov
push
jmp
mov
cwtl
test
sbb
dec
cltd
stos
mov
scas
and
xchg
jbe
je
out
inc
jne
xchg
clc
jmp
data16
push
xlat
mov
sub
pushf
pop
push
stos
xchg
push
into
jmp
sub
jmp
gs
or
add
test
mov
push
mov
popa
fwait
incl
sqrtps
aaa
cli
incl
lock
ss
adc
pop
push
sbb
push
std
mov
std
jmp
and
jb
add
cltd
dec
pop
out
fisubrl
ljmp
inc
idivb
imul
les
cmpsb
pop
xchg
dec
cmpsb
add
das
icebp
jle
dec
cmp
gs
loopne
mov
or
out
rcl
jmp
pop
imulb
sbb
out
jecxz
clc
repnz
and
hlt
xorb
mov
cld
loope
mov
or
jne
jae
inc
jb
cmp
loop
scas
sub
cmp
out
jno
imul
push
iret
xchg
dec
negl
lea
mov
mov
in
jo
ss
pop
and
fucomip
aaa
jne
or
or
cmpsb
cmpsl
out
inc
pop
lods
lret
rol
jne
xlat
sahf
call
pushf
enter
out
push
push
cmp
popf
push
and
xchg
mov
insb
cwtl
push
cmp
orb
movsb
or
or
jae
xchg
ljmp
push
outsb
test
mov
inc
and
fs
les
dec
aad
add
or
adc
mov
ret
and
cmp
call
and
sub
push
add
inc
int3
jecxz
mov
cmp
push
adc
insb
xchg
lods
xchg
xchg
mov
adc
jb
dec
jg
mov
ret
loopne
dec
mov
mov
pushl
fnstcw
cmpsl
cmp
lret
xor
xor
scas
fmull
fstpl
push
mov
shr
adc
out
gs
ljmp
cld
data16
dec
xor
imul
jbe
repz
icebp
push
adc
stc
stc
ljmp
pop
jecxz
out
hlt
dec
hlt
test
por
jne
dec
dec
cmp
inc
push
lcall
dec
cmpsb
mov
mov
sbb
leave
scas
jae
ljmp
hlt
call
pop
sub
nop
fimuls
jmp
into
out
repz
mov
mov
scas
cmp
repz
and
out
fbld
sbb
shl
or
jbe
xor
mov
stos
aam
sbb
dec
mov
cmp
mov
in
imul
jae
xchg
push
fwait
xchg
out
je
push
sbb
mov
int
sbb
push
aad
pop
cltd
int3
cmpsl
std
push
icebp
pushf
lcall
jmp
movsl
push
adc
bound
xchg
mov
mov
sub
rorl
pusha
mov
incl
in
mov
sbb
sub
inc
xchg
call
add
sub
mov
cmp
imul
pop
push
jl
push
add
iret
rcrl
mov
push
sub
jnp
jo
xchg
sub
ljmp
clc
adc
or
nop
adc
mov
mov
ret
mov
xor
repz
and
xor
incl
shl
mov
je
mov
inc
loop
hlt
mov
outsl
in
mov
cmp
scas
fiadds
hlt
cmp
test
rorl
jge
mov
mov
fs
pop
or
push
cli
ljmp
insl
aas
and
ret
sub
xor
clc
and
xchg
cmpsl
mov
out
mov
loopne
sbb
lcall
mov
mov
pop
mov
int
in
inc
and
push
hlt
pop
and
xchg
mov
mov
mov
xchg
sbb
jg
fsubr
lret
mov
jae
pushw
mov
add
popa
in
mov
cmc
add
out
or
lcall
aad
mov
aaa
pop
xchg
cmc
or
lods
icebp
test
push
jnp
mull
pop
mov
dec
pop
xchg
int
xor
xor
jge
addr16
pop
mov
decl
jbe
in
lock
add
divl
pop
sub
sbb
mov
mov
push
or
jno
jmp
shlb
movsl
das
xlat
push
xchg
fcomip
repnz
and
mov
fistl
rorl
jmp
cli
ret
pop
mov
lods
mov
subb
add
sub
rolb
xor
fucomip
cmp
negl
scas
push
out
jg
adc
mov
sbb
aas
call
add
int
mov
lret
mov
call
jle
pop
adc
incl
and
add
xchg
sub
out
xchg
aam
push
jge
mov
jge
xchg
les
push
mov
mov
jp
cli
lcall
in
mov
out
shlb
jle
inc
aaa
fcomi
bound
imull
add
lcall
icebp
lods
jae
sarl
hlt
and
andl
out
ljmp
testl
pop
jmp
into
fistpll
test
ja
ds
mov
dec
cmp
pushf
pop
fisubl
pop
call
pop
lcall
jbe
fistpl
adc
mov
decl
mov
push
mov
lods
call
mov
add
pop
arpl
dec
test
and
imul
repnz
outsl
push
loopne
xchg
stos
cmp
jae
pop
cld
outsl
cmc
add
dec
jne
and
popa
lret
mov
add
decl
ljmp
ja
xchg
out
das
rcrl
mov
cmpl
andb
dec
mov
decl
imul
mov
jle
push
in
mov
mov
add
dec
std
inc
cs
lds
pop
mov
incl
fldl2t
and
push
mov
jns
fldt
dec
iret
fisubrl
jle
pop
imul
or
push
pop
mov
das
jecxz
loope
aas
int
jb
mov
mov
mov
in
xchg
addr16
pop
ljmp
mov
mov
aad
push
sar
call
mov
int3
fmuls
lea
xchg
or
es
push
xor
iret
cmpsl
pop
aaa
std
xor
mov
int3
aam
fdivrp
pop
pop
add
mov
sbb
jp
cmp
loope
lods
cwtl
aas
in
fnstsw
inc
xor
mov
or
call
fcomi
or
inc
sbb
cmpsb
xchg
jg
das
lock
rclb
addr16
js
je
call
jnp
mov
imul
adc
pop
in
push
and
stos
cmp
jg
mov
mov
pop
pusha
sarl
cmpsl
push
adc
lret
shlb
cmp
lods
lods
mov
cld
mov
shll
and
movsl
jl
push
cmpsb
inc
inc
mov
sub
jnp
pop
jno
cmp
mov
add
jne
incl
pop
rorl
nop
dec
rcll
add
cmp
and
out
test
push
fistps
jg
sbb
push
das
pop
ret
lods
sbb
scas
lret
xor
mov
lods
mov
push
mov
orb
mov
rorl
testb
adc
add
imul
jg
sub
arpl
shll
jmp
push
daa
pushf
pop
mov
sub
mov
pop
mov
ljmp
call
insl
mov
xor
jo
xchg
sub
int
lods
je
es
imul
sub
pop
pop
mov
mov
jb
mov
xchg
test
ret
mov
push
cmp
sbb
cld
jb
test
sub
imul
add
mov
sbb
iret
rolb
cmpsl
addr16
ljmp
subl
jmp
loopne
js
fwait
xchg
imul
mov
pop
adc
push
inc
loope
mov
add
rorl
decl
sub
into
jle
adc
cmc
cli
pop
enter
fdivl
adc
dec
adc
mov
mov
sbb
cmp
adc
outsb
cmc
shl
lds
ficompl
push
stc
xor
or
inc
arpl
ljmp
cmpb
xor
aad
adc
xchg
mov
push
addl
pop
cmpb
call
sub
das
hlt
jmp
mov
std
out
jnp
sbb
pop
pop
sub
movsl
lods
xchg
ja
add
incl
out
test
mov
dec
int
call
fwait
lods
imul
sub
std
push
push
aaa
and
shll
shr
pop
pop
fcmovnb
repz
loopne
mov
jb
mov
shlb
in
and
lret
mov
ds
pushf
lret
out
xlat
fadd
push
sub
sbb
pop
push
or
and
mov
push
icebp
push
imul
jae
xor
movsb
lock
decl
cld
or
lock
xor
leave
es
test
daa
push
loop
pushf
sbb
insb
dec
mov
lcall
loope
xlat
fdivr
das
jo
inc
mov
mov
and
outsl
std
inc
and
int
sahf
jle
aas
push
xchg
das
fdivl
pop
ljmp
andl
and
push
sar
call
out
mov
or
sbb
out
cmc
mov
or
gs
mov
lcall
rcll
test
adc
sarb
les
sbbl
mov
mov
enter
repz
in
lea
cmp
dec
ljmp
jle
test
sub
xor
outsb
dec
xor
mov
sahf
cmp
out
adc
pop
sahf
mov
mov
mov
pop
or
incl
fnsave
mov
push
rcrl
xor
sub
arpl
push
decl
and
xchg
sub
pop
xor
mov
add
data16
push
mov
xchg
dec
sub
mov
and
call
jecxz
clc
insl
pop
mov
out
sbb
mov
sbb
movsl
out
ja
out
sbbl
decl
or
sub
sub
repnz
jle
lock
inc
adc
sub
jle
incl
push
mov
xor
outsl
std
incl
xchg
or
lcall
xor
push
out
mov
call
pop
xchg
inc
sahf
imul
mov
jo
lds
xchg
mov
ret
cli
mov
call
pop
mov
fstpl
fists
push
repz
cmp
mov
xchg
call
or
mulb
outsl
cmp
ljmp
cli
ret
lret
insl
or
scas
popf
lahf
add
or
push
hlt
sahf
shll
inc
ret
push
pop
in
add
outsl
lock
sbb
jns
jae
adc
xchg
or
subl
mov
repz
adc
rcrl
add
mov
sbb
mov
stc
xchg
cmp
pop
incb
inc
push
loop
mulb
jbe
xchg
add
pushl
pop
lds
shr
xchg
scas
xlat
cmp
push
popa
leave
xlat
sbbl
dec
jp
xor
inc
sub
lret
jp
lds
data16
push
pop
sbb
test
jg
mov
inc
lods
fs
stos
mov
inc
nop
or
mov
flds
aas
dec
js
adc
in
roll
or
mov
add
mov
xchg
fsub
fstpl
mov
or
mov
xor
dec
pop
mov
ljmp
cmc
arpl
mov
inc
mov
push
fwait
je
pop
call
mov
add
sbb
test
sti
inc
push
jns
jmp
loopne
dec
pop
inc
sub
in
or
shll
lcall
mov
mov
mov
mov
cmp
fistps
repz
cld
or
jge
add
bnd
cmp
ljmp
mov
jg
mov
sub
pop
data16
push
loope
adc
sbb
mov
call
shl
mov
ljmp
out
mov
add
bound
mov
movsb
loope
dec
jp
push
std
add
push
insb
repz
or
les
pusha
cmp
xor
and
icebp
jb
jg
call
lods
stos
sahf
sbb
dec
je
int3
jo
loop
jae
imul
loopne
push
push
aas
jl
sti
test
out
fwait
add
decl
sahf
loop
shlb
xorb
add
pop
adc
out
mov
sub
mov
lock
decl
jo
mov
lret
out
ja
in
pop
jae
mov
fcmovu
push
mov
inc
cmpsl
scas
call
insb
pop
mov
rcrl
subb
cwtl
in
cmc
pushl
lret
mov
sahf
push
outsl
dec
push
push
call
gs
push
fdivr
das
xchg
js
sub
xor
dec
arpl
xor
insb
jno
out
jmp
pushf
shrl
fsub
es
jnp
dec
jns
movsb
int3
je
sbb
sbb
push
inc
cmpsl
movsb
outsl
aaa
sbb
in
gs
or
test
push
je
leave
sarb
xor
in
lahf
fisttpll
lret
add
or
aam
cld
sti
push
setge
inc
mov
sbbl
je
data16
jmp
xchg
enter
pop
cmp
repnz
add
cld
incl
push
fildll
adc
mov
push
mov
push
sarb
hlt
lea
test
sbb
inc
out
pop
xor
mov
shr
test
mov
ret
fstps
mov
ljmp
fcomps
or
sbb
outsb
loop
adc
fisttps
jg
decl
js
shll
sub
insb
xlat
movsb
cwtl
out
push
call
fs
mov
call
add
jg
aam
or
or
lcall
mov
idiv
jns
dec
std
pushl
daa
ret
je
xchg
sbb
lcall
sar
jg
mov
pop
call
push
not
lcall
loop
lcall
les
fdivs
sbb
or
rcrl
push
std
jmp
jge
adc
test
xor
mov
jl
pop
xlat
cmp
mov
mov
jae
sub
imul
pop
loope
adcb
mov
jmp
inc
mov
pop
addb
lea
mov
adcl
subb
mov
call
test
popa
cli
fimuls
sbb
jle
sbb
xchg
outsb
pop
push
test
push
sbb
push
fcompl
dec
cld
push
jl
pop
stos
jb
inc
pop
popa
push
and
ds
lea
pop
mov
outsl
fnsave
push
nop
cmpsb
andb
fnstsw
jmp
mov
mov
inc
dec
pop
lods
repz
xchg
std
mov
pop
orb
adc
mov
imul
incl
rol
mov
out
adc
sub
test
jb
sub
mov
test
inc
pop
loopne
cmp
addr16
loop
add
aas
jg
dec
push
adc
cmpsb
test
mov
js
test
xor
mov
stos
push
loope
xchg
cmp
arpl
test
push
jg
inc
lcall
pop
out
cwtl
shll
bound
insl
rorl
notrack
xor
lods
or
dec
loope
push
scas
rcrl
jns
push
bound
jmp
inc
mov
scas
test
icebp
inc
shrl
dec
push
mov
shlb
jmp
arpl
repz
cs
push
outsb
aas
pop
fcoms
push
sub
scas
movsl
incl
aas
mov
mov
into
adc
dec
sub
test
fisttpll
xlat
bound
arpl
mov
decl
mov
and
mov
dec
lcall
out
sarl
in
ret
cmp
into
cmpsl
sbb
lcall
dec
aam
mov
pop
push
add
push
xchg
inc
cltd
daa
or
ljmp
mov
scas
cltd
stos
lret
sbb
xchg
adc
inc
sbb
cmp
incl
lahf
mov
dec
neg
movsb
lods
fmul
mov
dec
daa
push
out
lcall
stos
mov
cld
stos
ljmp
in
sub
aad
mov
ljmp
xchg
cli
pushl
xor
shll
push
cwtl
cmp
add
call
ljmp
hlt
lods
adc
mov
das
cmpsl
cmp
in
popf
sub
stos
ss
sub
incl
sbb
add
push
and
mull
nop
cmp
push
je
je
cmp
push
loope
call
call
decl
sti
inc
xchg
ds
push
xor
xchg
mov
lods
cld
sub
sti
inc
ljmp
stos
out
in
jbe
sbb
pop
mov
ljmp
sbb
sti
dec
push
sbb
xchg
ss
call
shlb
pusha
punpcklwd
xchg
add
mov
ljmp
cmc
lea
dec
mov
movsb
cs
cmp
cmp
lods
icebp
insb
mov
in
add
mov
adc
sbb
lcall
xor
dec
fisttps
xchg
push
inc
dec
in
cmp
iret
sub
fsub
and
inc
adc
mov
adc
popa
negl
jbe
pop
scas
shrb
add
rclb
lcall
pop
sarl
mov
lock
ret
jns
js
pop
sbb
adc
std
inc
lods
xor
cmp
pop
into
stos
or
jmp
and
dec
and
sbb
dec
mov
call
or
jo
pop
cltd
jb
iret
dec
ljmp
pop
cld
cmp
xchg
outsl
sub
and
daa
xchg
add
cmc
jmp
std
cmpb
divl
mov
jne
sbb
outsl
cmpsl
lret
arpl
ret
xchg
iret
cmpl
out
decl
lcall
push
add
fistl
xchg
jp
inc
xchg
clc
fdiv
fwait
jns
inc
pop
std
push
mov
into
mov
out
mov
jne
mov
lcall
mov
mov
ss
fistpll
insl
adc
es
popa
and
int3
pop
pop
adc
out
fsubp
mov
stos
aas
cwtl
imul
mov
movsl
jns
incl
fbstp
jecxz
pop
outsl
mov
dec
xchg
ret
xchg
rclb
enter
jle
pushl
cmp
out
fcoml
xchg
enter
mov
ficompl
ret
aad
cmp
add
xchg
or
push
pop
push
ror
push
cmp
aad
outsl
call
sar
addr16
shr
push
sbb
mov
out
out
mov
leave
push
jbe
lahf
add
jg
jno
jg
lahf
push
pushf
nop
cmpsl
gs
in
xchg
push
pop
mov
fistl
lea
clc
lahf
pop
and
pop
sub
cmpsl
sbb
cmp
sub
fsubs
push
sti
das
pop
int
mov
ficoml
outsl
xchg
fcomp
and
and
xorl
hlt
dec
cli
jmp
sub
push
mov
ljmp
adc
or
inc
scas
lds
cmc
or
push
push
inc
xchg
fdivrp
mov
jge
imul
and
mov
xchg
movsl
lcall
pushl
daa
out
jo
and
or
test
jno
movsl
int3
loope
fidivrl
fsts
loop
decl
pop
lods
xchg
data16
icebp
inc
xor
mov
decl
push
fs
pop
pusha
jns
pop
sti
insl
sbb
popf
outsl
fdivs
fdivrp
mov
das
xchg
outsl
mov
sbb
or
or
push
packssdw
daa
sbb
lret
mov
lods
jg
jle
push
mov
cmp
add
cmpsl
dec
mov
pushl
lahf
pop
dec
jno
mov
mov
add
mov
pushl
pop
push
mov
mov
dec
pop
in
daa
call
mov
adc
dec
incl
jmp
hlt
pop
shll
dec
jg
lods
xorb
mov
sbb
add
fwait
incl
jg
iret
jecxz
mov
dec
orb
dec
xor
jmp
dec
gs
incl
repz
xchg
in
rcll
imul
cmp
dec
fldenv
mov
pop
jp
or
outsl
pop
imul
lock
leave
and
cld
cwtl
adc
inc
cli
addr16
das
mov
repnz
je
push
out
mov
pop
xor
pop
inc
push
rclb
cwtl
and
push
and
adc
mov
cld
dec
add
jmp
sub
in
push
dec
andl
mov
fbstp
movsb
lret
pushl
push
fsubs
das
js
test
mov
std
push
xchg
icebp
sbb
pop
mov
sti
cmpsl
and
pop
jns
pusha
call
outsl
lock
inc
stos
decl
inc
ss
sbb
pop
std
inc
xchg
fldl
pop
call
incl
mov
out
cmpsl
ficoms
mov
mov
or
xor
xor
inc
incl
test
cli
idiv
jno
push
and
outsb
shl
mov
xchg
in
sub
add
hlt
jl
mov
adc
jmp
push
lcall
xlat
pushf
mov
jl
adc
iret
out
cld
in
xchg
mov
call
mov
sarb
test
ljmp
mov
insb
movb
out
rcrb
jg
nop
mov
xchg
js
je
in
xchg
je
mov
scas
push
inc
xchg
cmp
es
jecxz
xor
pop
add
mov
cmp
lock
mov
lahf
icebp
mov
pop
mov
mov
lock
jb
out
dec
push
mov
pop
pop
mov
insb
mov
adc
enter
lods
or
xor
dec
popf
dec
pushf
insb
cmp
decl
inc
mov
cmp
xchg
mov
sti
out
xlat
xorb
and
pop
aaa
clc
push
xor
dec
push
shl
dec
pushf
xchg
xchg
jp
push
and
mov
in
sub
or
call
adc
cld
loop
repnz
fbld
cmp
icebp
or
bound
and
pop
enter
dec
lret
popa
xchg
gs
mov
aas
xchg
test
jp
aaa
mulb
loop
cli
decl
in
addr16
xchg
out
pop
pop
into
push
mov
std
fldlg2
jb
mov
pushl
push
lahf
jns
and
loopne
ljmp
and
mov
sub
addl
dec
pop
sahf
xor
shrl
mov
pop
popf
and
aaa
js
xchg
and
cs
movb
dec
pop
ja
clc
jmp
es
clc
mov
add
xchg
pop
mov
and
data16
lcall
cmp
jmp
gs
aam
inc
cmpsb
or
adc
adc
orl
xchg
mov
and
addr16
iret
pop
add
mov
imul
dec
imul
or
xor
cmp
mov
sub
xchg
jae
cmpb
mov
fwait
jecxz
mov
decl
ljmp
push
arpl
xor
mov
ljmp
sbb
fcmovnu
repz
sbb
negb
xchg
inc
jl
mov
mov
dec
push
sbbl
cwtl
sub
mov
pusha
mov
pusha
jne
ds
add
cmp
mov
mov
mov
incb
jno
jmp
fldcw
or
jle
and
scas
jge
lcall
imul
fs
push
dec
cld
decl
in
shl
shrd
fidivl
cmp
decl
ja
mov
push
dec
sbb
push
dec
mov
sbb
inc
xor
inc
call
jns
sbb
movsl
in
jecxz
pop
rorb
fwait
imul
sub
shll
inc
mov
stos
dec
xchg
test
dec
inc
fsubp
dec
stc
sti
xor
inc
jp
mov
faddl
es
inc
pushl
add
jnp
cs
jne
rcrl
push
cmp
das
mov
mov
movsb
jecxz
stos
and
enter
imul
call
sbb
lret
and
mov
dec
in
sbb
xchg
aam
mov
jl
loope
inc
mov
pop
nop
mov
mov
add
dec
dec
sar
push
xorl
idivl
js
sub
cmc
jbe
xor
xchg
fwait
mov
lret
fcomps
xlat
mov
lock
pop
mov
cmpsl
jmp
push
out
lret
pushl
in
adc
sbb
dec
mov
xchg
push
dec
xchg
push
test
and
jg
xor
mov
insb
xor
cwtl
push
push
ljmp
pcmpgtd
jg
ret
cmp
mov
dec
mov
cld
dec
xor
xor
into
in
call
cli
jg
outsb
mov
add
dec
lods
sbb
push
lds
add
gs
call
je
push
and
shll
or
adc
sub
gs
popf
mov
xchg
jno
outsb
push
cmp
cmp
inc
and
stos
jmp
movsl
mov
and
lret
aas
ljmp
icebp
mov
jge
aaa
lret
jnp
add
lods
aaa
pop
andb
call
daa
jb
mov
mov
mov
dec
sbb
mov
pop
inc
mov
mov
mov
xor
fsubrs
sbb
lds
fildll
ljmp
insl
hlt
adc
inc
popa
sti
call
inc
push
add
inc
dec
adc
inc
leave
add
arpl
push
lods
lea
out
lea
call
pop
iret
mov
dec
inc
jecxz
cltd
cmp
outsl
xchg
ds
pop
ljmp
mov
jg
rcrl
push
add
push
pusha
cltd
mov
push
xor
and
lcall
mov
xor
dec
dec
cmp
dec
xchg
test
adc
ljmp
cld
shl
fcoml
jbe
das
in
dec
in
jo
push
in
dec
imul
decl
les
clc
outsl
sub
pop
adc
mov
fldl
xor
decl
and
test
ret
or
mov
addl
xchg
mov
cmc
test
dec
out
shlb
jo
pushf
push
fisubrl
cli
jg
call
dec
pop
int3
pop
mov
rorl
sub
adc
jnp
lcall
cmp
notl
movsl
xchg
and
xorb
lret
mov
mov
push
ljmp
arpl
mov
cmp
cmp
inc
push
xchg
push
fstpt
sub
aam
sub
sarb
lea
jg
insb
xchg
outsl
mov
outsl
icebp
jmp
adc
add
xchg
popf
sub
js
notb
jmp
and
pop
jb
pop
popa
lcall
xchg
xor
xor
xor
andb
call
mov
jecxz
test
pushl
push
mov
shr
mov
sahf
lds
stos
or
std
push
inc
call
mov
or
lods
cmc
fldl
lcall
stc
testb
les
inc
jge
add
loopne
xchg
ljmp
cwtl
sub
or
outsl
mov
loop
shll
loopne
das
hlt
lcall
add
arpl
cmp
pop
cmp
imulb
jmp
sub
negl
std
mov
mov
mov
add
add
inc
ljmp
and
call
dec
push
adc
sub
popa
pop
jge
sub
das
hlt
push
add
pop
sbb
dec
push
insl
pushf
aam
or
mov
daa
fnstsw
cltd
data16
aaa
mov
into
imul
enter
sub
les
lahf
loop
call
inc
insb
cmp
mov
js
xchg
jge
fbld
scas
loope
push
xchg
cmpsl
in
cmp
sbb
lcall
sub
push
mov
adc
sbb
stc
into
jl
jae
lds
in
push
or
icebp
incl
int3
lea
arpl
fucomp
incl
add
stos
dec
mov
cmp
push
mov
inc
lods
lods
insl
sub
jmp
cmp
repnz
aas
jns
xor
stc
mov
xlat
gs
out
cmpsb
mov
shlb
adc
mov
sub
ss
cmc
add
mov
ljmp
iret
push
cwtl
fistps
mov
mov
pop
bound
jbe
push
jb
mov
cmpsl
jg
pushl
pop
pop
cmpsl
fnstsw
xrelease
and
rorl
cs
xchg
ffree
test
jg
pop
out
aam
rcll
movsl
cmpsl
notl
daa
cmp
call
jmp
popl
mov
xchg
sub
fcoml
aam
mov
lea
push
cmp
imul
loop
in
enter
cmc
dec
add
rcll
xchg
fsub
lret
ljmp
push
xor
xchg
jo
adc
aaa
cmp
hlt
jg
mov
nop
mov
fadd
ljmp
adcl
dec
sub
shl
mov
out
and
dec
and
sbb
push
adc
testl
inc
xor
orl
xchg
int
sbb
incl
jp
mov
mov
push
sub
sarl
adc
cmp
push
sbb
or
sub
mov
imul
out
mov
push
fisubl
out
daa
rcll
adc
dec
push
mov
loop
das
cmc
lcall
add
mov
pop
mov
push
notb
das
imul
aad
cmp
ror
sub
stos
add
sub
ficoms
call
jne
add
pop
scas
push
mov
and
push
fisubs
add
mov
mov
xchg
clc
mov
cmp
mov
hlt
pop
das
cmc
dec
stos
bound
insb
into
jo
or
mov
out
test
fldl
pop
lahf
daa
mov
data16
scas
cli
das
icebp
adc
cmp
or
xor
dec
std
pop
into
daa
mov
xchg
pop
ds
sarb
or
mov
xor
pop
loop
mov
cmc
dec
mov
lods
int3
fimull
filds
push
mov
jg
and
inc
push
movsb
lahf
popf
push
push
test
push
lcall
adc
stc
lcall
call
nop
test
pop
mov
dec
mov
xchg
icebp
push
sub
rcl
xor
dec
cmc
push
lret
mov
cs
pushl
insl
mov
daa
xchg
push
xchg
dec
jns
pushl
inc
gs
loope
sbb
test
adcl
sub
bound
decl
test
pushf
sub
or
ror
cmp
push
xchg
xor
fildll
shll
sbb
or
ds
cmp
je
mov
aam
mov
jb
lcall
push
in
push
lock
rcrl
dec
push
std
sub
jno
mov
lds
cmc
ja
ret
pop
sub
movsl
les
lea
incl
std
xchg
repz
or
repnz
aaa
mov
cs
hlt
pushl
sbb
insb
arpl
repz
test
in
cmpsl
imul
scas
jbe
xor
jno
pop
cmpsl
push
or
imul
fcmovnbe
cs
mov
rcll
jmp
out
jmp
mov
add
inc
mov
scas
adc
incl
sub
and
negl
stc
inc
or
fdivrs
xchg
repnz
jmp
push
aad
popf
es
fildl
pop
rcll
jl
insb
sbb
cmc
push
aas
inc
adc
xchg
cmpsl
jbe
xchg
inc
testl
call
jp
popa
mov
outsb
jb
outsl
pop
pop
cmp
negb
das
xor
mov
test
pop
enter
or
stos
lcall
popa
jmp
leave
loope
scas
or
negb
sti
lahf
dec
and
imul
or
les
mov
push
shll
test
jb
sub
mov
dec
std
fisttpll
call
mov
mov
out
xchg
aaa
add
lcall
data16
pushf
mov
pop
jo
mov
sahf
int
out
rorb
xor
jnp
test
notl
ljmp
add
push
xchg
fmuls
outsb
xor
incl
fildll
fcomi
add
sub
inc
add
sbb
call
addr16
push
inc
mov
mov
add
jne
lcall
inc
add
sbb
cld
rcrb
lds
rorl
das
cmc
sarb
push
xchg
movsl
shrl
mov
pushl
lods
in
jne
arpl
jge
xchg
cmpsb
aad
jmp
outsl
pusha
inc
inc
xchg
mov
jo
xor
icebp
mov
mov
adc
jmp
xchg
fnstenv
xorl
std
sub
jae
mov
dec
pop
mov
incl
cmpsl
push
cmpsl
enter
stc
hlt
xchg
nop
leave
add
jmp
inc
stos
aas
addl
test
arpl
push
add
mov
jl
clc
cmp
jp
outsb
test
mov
jmp
xchg
jo
je
mov
xor
sub
ret
test
or
call
int3
out
sbb
add
pop
dec
aad
gs
lods
xchg
jo
sub
in
add
and
movsb
ss
cwtl
mov
mov
jo
les
sbb
lods
mov
roll
mov
gs
pop
std
cmp
cmpl
ffree
mov
lcall
inc
dec
push
jl
or
inc
mov
adc
adc
pop
arpl
jo
push
das
out
aad
pop
cld
pop
loop
nop
iret
aad
and
imul
test
lcall
push
scas
rcll
test
jb
adc
xor
mov
test
jecxz
aam
lods
add
xor
std
push
dec
add
pop
dec
mov
lret
je
shl
sbb
test
ljmp
orl
ja
cli
add
mov
inc
pop
cmp
scas
cli
fwait
popa
jne
and
lods
and
push
inc
ljmp
lods
dec
inc
pop
call
popa
fbstp
push
cmp
in
dec
push
cltd
mov
test
and
cmp
mov
cmp
xchg
lcall
sbb
inc
jge
out
pop
push
push
sarb
jg
push
in
fidivrl
bound
mov
pop
incl
cmp
xchg
imul
js
lcall
orl
or
lcall
je
jle
push
jmp
in
je
adc
mov
sbb
dec
jmp
in
fs
test
xchg
cwtl
stc
xlat
movsl
pop
push
jbe
popa
mov
jb
icebp
icebp
ljmp
lahf
loopne
push
push
lds
lods
and
je
ret
mov
mov
icebp
mov
xchg
mov
out
aas
incl
xlat
jnp
insb
outsb
adc
int
inc
mov
jp
mov
loop
adc
pop
decl
push
in
rcll
ljmp
mov
cmc
mov
imull
jmp
jbe
sbb
push
sbb
or
mov
mov
int
testl
pusha
iret
adc
call
mov
jbe
jle
pop
loop
add
int3
lahf
push
pop
cli
mov
decl
enter
test
jp
jae
jge,pt
adc
or
adc
adc
jg
mov
pushl
jmp
pop
popf
out
pop
mov
cmp
and
jns
sbb
lock
ljmp
stos
mov
jg
pushw
push
adc
sub
test
xchg
sti
inc
into
mov
stos
jo
int3
inc
mov
bound
pop
inc
cwtl
imul
push
cmp
inc
idiv
mov
pop
mov
gs
fucomi
arpl
ljmp
jecxz
mov
push
test
lods
and
call
mov
lahf
pushf
xor
add
inc
pushf
pushf
addb
pop
cli
incl
and
xchg
mov
in
mov
mov
xchg
cmp
pushl
dec
dec
out
cwtl
stos
mov
sub
mov
bound
arpl
xor
mov
mov
nop
mov
jl
out
inc
jg
push
ret
decl
cmp
jge
inc
cmc
push
inc
or
mov
pop
pushl
sub
ds
xchg
enter
int
sub
scas
jae
mov
fstps
inc
or
in
inc
xlat
mov
in
test
ljmp
mov
pop
xchg
loop
add
push
and
loope,pn
xchg
or
dec
or
adc
call
sahf
cmc
movsl
sbb
mov
inc
inc
mov
dec
data16
jmp
inc
cs
xor
mov
pusha
lahf
rcrb
inc
inc
ret
sbb
outsl
std
push
push
cmp
mov
mov
lcall
in
imul
push
inc
xor
lock
int
call
fcos
das
cmc
aas
outsl
pop
or
jb
aaa
inc
xor
and
pop
jmp
dec
inc
xchg
in
stos
sub
scas
add
cli
pop
adc
and
test
mov
aas
sbb
sar
incl
mov
sbb
pop
in
lock
jle
fwait
outsb
arpl
mov
mov
fs
ret
cs
sub
and
cmp
sbb
fldcw
lahf
lods
outsl
decl
ret
fcmove
bound
add
xchg
adc
loopne
arpl
fidivl
gs
cmpsb
movb
int3
push
test
sbb
pop
in
push
fwait
ljmp
outsl
mov
jmp
jmp
adc
sbbl
pop
mov
pop
daa
ljmp
call
out
movsl
out
cmpsb
les
sub
push
fsubr
mov
mov
adc
mov
jg
andb
adc
ljmp
jns
xchg
inc
pop
cmp
mov
popa
in
inc
cmc
xor
and
daa
xlat
stc
daa
cmp
int3
sahf
sbb
xor
cwtl
mov
sub
pop
call
fisttpll
in
jns
add
pusha
jmp
decl
xchg
adc
addl
push
jo
push
addb
int
pop
stos
gs
mov
incl
ljmp
mov
add
dec
and
or
push
mov
pop
cwtl
jno
shlb
mov
or
push
dec
in
fimull
pushl
lods
sub
cmp
jns
loop
out
roll
lds
cmp
lods
fildll
jb
fldl
hlt
es
fbld
dec
call
jg
inc
xchg
mov
adc
push
inc
add
add
xor
pop
and
cld
inc
mov
pop
add
push
lret
insl
sti
pop
fs
ljmp
mov
daa
pop
leave
in
sbb
fbld
cmp
arpl
enter
decl
nop
adc
ja
mov
mov
in
jg
lahf
dec
sub
imul
jae
cmpsb
xchg
incl
call
setp
cld
push
and
and
stos
or
sub
ja
mov
lcall
lcall
sbb
jl
iret
xorl
xchg
shll
xchg
in
repz
ss
std
aaa
jle
imul
inc
xchg
sbb
mov
loop
cwtl
mov
arpl
mov
repz
push
cwtl
lds
ret
mov
sub
sub
xchg
adc
cld
mov
aam
nop
push
popf
pop
inc
cmp
mov
call
pop
mov
jg
inc
out
das
insb
cmp
loopne
or
xchg
mov
push
faddl
nop
cli
or
mov
call
cld
mov
inc
movsl
call
ljmp
insl
mov
mov
dec
inc
insb
es
mov
pop
repz
mov
decl
ret
scas
insb
outsl
jne
daa
das
and
mov
mov
movsl
pop
push
clc
std
ljmp
and
sub
xor
out
cwtl
outsb
test
pop
xor
ds
jl
call
push
clc
jb
adc
jmp
push
test
shrb
in
ficoms
bound
inc
adc
push
inc
insl
dec
push
or
pushl
sarl
push
clc
mov
std
adc
xchg
or
xor
icebp
subl
shll
test
into
fidivl
xchg
and
adc
decl
fwait
cmp
lds
in
stos
mov
arpl
sbb
inc
adc
ret
xchg
pop
sbb
add
jns
fistpll
aam
adc
ljmp
push
pop
add
popf
std
sbb
gs
ja
incb
shr
mov
lods
jno
sub
incl
sarl
repnz
push
and
data16
pop
inc
test
jnp
jo
ret
decl
dec
xor
aas
jb
lret
or
andl
xchg
mov
incl
pushf
pop
push
pop
jge
and
dec
fistpl
cmp
jo
movsl
cmc
xor
jmp
ljmp
nop
pop
add
dec
mov
mov
mov
adc
ljmp
sub
xchg
pop
mov
xor
imull
enter
jmp
cs
push
mov
or
jne
cli
push
and
les
std
add
sarb
add
xor
mov
adc
lods
daa
mov
mov
aad
ljmp
dec
ss
xchg
data16
sbb
ret
addb
jecxz
mov
or
mov
daa
sarb
lret
add
incl
test
les
fwait
stos
je
lcall
or
dec
cwtl
add
sbb
adc
stc
sti
pushl
sahf
in
cmp
lock
scas
push
jne
jge
or
imulb
xchg
cmpsb
test
push
enter
xor
idivl
aas
sbbl
cld
popf
jmp
into
outsb
pop
push
jg
mov
fnstsw
or
cli
or
lds
loopne
cmp
lret
decl
mov
rorl
mov
jb
fnstenv
repz
jg
ss
cli
cs
mov
aad
setle
push
jp
stc
xchg
adc
jne,pn
out
jae
xchg
or
mov
push
call
jns
mov
aas
fiadds
sbb
cli
jno
dec
xchg
es
outsl
jmp
pop
cs
pop
mov
insb
aam
mov
push
xchg
scas
fdivs
loope
mov
ja
add
jo
mov
lahf
fistpll
jb
mov
jg
in
adc
loop
cmp
mov
gs
pxor
sub
ljmp
cmp
push
test
das
mov
jp
dec
loop
push
lcall
sbb
pop
aad
and
jne
addr16
dec
call
in
sbb
rol
adc
or
mov
daa
xor
sbb
sub
adc
fistps
dec
sub
mov
sti
das
xor
sbb
aaa
and
sbb
mov
push
movsb
call
dec
push
cmc
push
repz
xchg
cmp
cmp
fsubrl
ret
decb
pop
sbb
rcrl
popf
xchg
out
popa
inc
adc
and
sub
dec
fdivs
mov
or
ds
jle
int
sub
in
movsb
mov
xchg
or
mov
cld
decl
out
adc
jp
arpl
cmp
mov
xchg
mov
pop
call
mov
aam
ret
lds
lea
xchg
lahf
shl
jg
pop
fs
fadds
stc
push
jp
xchg
push
or
fadds
rcrl
jg
xchg
lods
sti
add
addl
push
dec
pop
xchg
jg
pushl
subl
or
jg
loop
fwait
jle
dec
ljmp
fmuls
push
xchg
int
lret
cmp
adc
aam
xchg
sarl
push
jl
sbb
cmp
mov
icebp
or
xchg
push
cmp
in
dec
stos
clc
adc
andl
mov
out
shlb
pop
sub
dec
jae
mov
pop
es
les
xor
cld
inc
inc
mov
and
call
dec
dec
fwait
mov
mov
fstl
roll
mov
sar
jbe
sub
in
xor
cmp
adc
lret
lock
data16
sbb
mov
rcll
mov
dec
pusha
orb
jge
mov
sbb
imul
sbb
xor
frstor
pop
scas
incl
imul
jp
add
lock
mov
cmpsl
loop
test
je
sub
cmp
cmp
or
addr16
notl
xchg
jge
addr16
mov
jg
mov
mov
rcr
dec
aaa
sub
movsl
mov
jg
fiadds
lds
jb
mov
push
lods
jg
or
dec
xchg
sti
xor
jl
xchg
mov
mov
fdivrl
imul
repz
xor
mov
mov
data16
jns
inc
fwait
inc
cmp
iret
push
cli
lret
lock
inc
mov
incb
xchg
xor
cmp
inc
sbb
xchg
or
es
jbe
scas
clc
mov
bound
loopne
sub
push
pop
hlt
push
mov
mov
mov
mov
lcall
lahf
movsb
rclb
out
pop
lret
or
or
jne
jo
testw
and
ret
test
jne
test
jae
incl
xor
xchg
rorl
leave
sub
leave
dec
bound
pushl
xchg
mov
push
cmpsl
dec
in
pop
push
xchg
int3
add
scas
cmpsl
mov
pop
fwait
mov
inc
rcll
adc
popa
mov
aad
mov
decl
push
push
mov
ss
push
inc
fwait
mov
mov
pop
push
cmp
fnstsw
dec
pushl
xor
cmp
es
inc
sbb
pop
mov
stos
fs
jbe
pusha
fdivrs
clc
cmp
fistpl
enter
xor
mov
into
xadd
ds
sbb
xchg
inc
inc
negb
lcall
pushf
or
mov
fildll
mov
and
cmp
mov
sahf
lea
xchg
mov
jp
mov
push
fcmovne
fimull
pop
xchg
cmp
fisttps
shlb
sub
cltd
sbb
sarl
cmp
mov
ljmp
aas
pop
pop
sub
mov
aam
pop
sti
inc
xchg
test
xchg
mov
ljmp
cld
popf
stos
add
enter
loope
dec
inc
rol
push
mov
inc
push
lcall
popa
test
or
jnp
and
iret
repnz
dec
out
rclb
jmp
imul
pop
pop
imul
outsl
lock
js
xor
dec
cmp
sub
pushl
mov
jns
dec
lret
jne
add
push
pop
xchg
dec
push
ds
mov
xor
pop
out
jecxz
mov
ljmp
movsl
insb
out
push
dec
subl
mov
stos
lea
jecxz
cmp
xchg
aad
hlt
jmp
out
je
std
cmc
push
dec
fwait
rcr
pusha
lock
mov
lds
fwait
rcrb
out
js
fcompl
jnp
mov
loopne
mov
test
dec
jbe
test
push
dec
fistps
lock
push
cmpsb
fs
arpl
lods
loopne
scas
sbb
mov
mov
push
push
mov
int
gs
xchg
insl
into
idivl
aam
xor
fbld
movsl
mov
lods
pop
sarb
outsl
std
pop
ljmp
xchg
fistps
clc
fldt
call
mov
sub
or
sub
int3
mov
push
mov
sub
mov
idivl
xchg
jae
cli
test
cltd
loopne
xchg
adc
mov
mov
sbb
ljmp
xor
push
mov
subb
mov
push
sti
rorl
adc
or
out
xchg
mov
xchg
ljmp
mov
mov
out
push
sbb
push
mov
pushl
loop
repz
das
adc
daa
mov
es
push
xor
sub
sub
das
std
pop
cld
ds
adc
aad
or
mov
adc
ljmp
xchg
shlb
dec
mov
sub
stos
sti
outsl
scas
imul
clc
jg
sub
clc
repz
loope
iret
into
pop
mov
in
and
enter
and
mov
pop
repz
scas
push
int
ljmp
insb
std
in
adc
or
ljmp
or
aas
cmp
pop
mov
lock
push
cmp
jmp
and
adc
loop
dec
ud1
ja
aam
sbb
popf
lcall
add
test
out
rol
out
mov
add
daa
jg
incl
ljmp
push
pop
jnp
in
loop
mov
jg
ljmp
pop
cli
push
mov
insl
shrl
mov
xorb
movsl
movsl
dec
std
clc
test
in
testb
popa
mov
decl
js
and
mov
std
out
pop
cmpsl
shl
cwtl
xor
pushl
xchg
lods
mov
fsts
pop
or
fbstp
and
push
mov
adc
sarb
push
addr16
ss
lret
and
incl
daa
inc
jl
mov
or
mov
into
push
mov
roll
in
adc
call
add
mov
vpsubq
aaa
cli
jle
xchg
out
iret
add
push
pop
lods
stc
adc
push
jmp
call
sbb
jo
jecxz
lret
in
inc
xlat
mov
test
xor
xor
aad
pop
mov
ljmp
add
jg
clc
mov
mov
inc
mov
dec
add
shlb
xor
dec
loop
jnp
sarb
pop
repz
cmp
out
pop
repz
cmp
pop
xchg
dec
lock
mov
movsl
mov
cmpl
pushf
cmp
xor
movsl
sub
ljmp
pop
lods
push
ret
cld
adc
out
pop
jo
push
outsb
xchg
mov
mov
loope
adc
sub
adc
push
ret
andb
pop
dec
out
and
rcll
xorl
filds
cmp
push
pop
std
push
scas
lds
ret
sbb
xor
ss
mov
incb
push
sbb
jmp
xchg
cmp
lcall
jmp
mov
clc
mov
mov
xor
inc
jp
lcall
rcrb
pop
imul
sbb
lods
cmp
enter
add
or
pushl
mov
mov
lods
pop
mov
out
jae
rclb
addb
or
push
xchg
or
pop
mov
and
pop
leave
dec
inc
dec
xchg
fiaddl
mov
test
mul
pop
ret
mov
adc
ja
push
mov
fucom
call
pop
mov
sbb
adc
decl
xor
mov
dec
lcall
lcall
shlb
sub
les
mov
unpcklps
inc
inc
xor
clc
push
dec
mov
xchg
clc
js
std
mov
cmpsb
pop
std
arpl
call
shlb
enter
js
add
jb
loope
add
movsb
icebp
imul
cwtl
stc
dec
push
ja
fwait
sub
sub
dec
dec
adc
push
xor
loopne
aad
fmull
sbb
adc
xchg
fstl
sbbb
jmp
adc
mov
pop
add
xchg
das
pop
inc
inc
jmp
add
pushf
push
pop
call
outsl
nop
inc
sbbb
imul
mov
add
mov
outsl
popf
pop
lret
mov
lret
adc
je
jl
decl
jg
push
rcll
imul
shl
dec
loope
adc
add
pushl
push
inc
aad
fsubl
pop
fscale
mov
mov
das
xchg
mov
and
sub
call
in
loop
cmpsl
scas
sahf
cmpsl
rorb
dec
jns
daa
sub
in
std
pop
cli
or
cwtl
pop
ret
xorb
call
dec
mov
imul
je
jecxz
decl
xchg
mov
fisttpll
lret
pushf
adc
mov
cmp
sub
lock
and
mov
jae
and
pushl
clc
inc
rorb
cmp
xor
sbb
lahf
pop
jbe
sub
sub
and
push
gs
sub
jl
jmp
and
divl
xchg
xchg
jg
inc
loop
stos
xchg
jecxz
jle
lock
decl
ret
fs
pusha
xchg
addr16
inc
dec
nop
adcb
int
fisttpl
mov
bound
rcr
ficoml
pusha
in
push
jbe
icebp
lcall
ljmp
mov
xchg
decb
out
imul
outsb
mov
cld
xlat
int3
das
mov
call
sbb
pop
or
pop
fbstp
lahf
std
jg
pushl
mov
add
mov
fiadds
sub
dec
cmp
ljmp
mov
adc
in
insl
add
dec
cwtl
pusha
push
add
jg
imulb
fisubs
mov
inc
imul
loop
ljmp
xor
xor
aam
mov
push
push
jns
push
orl
pushl
incl
adc
cmp
mov
in
xlat
mov
sbb
inc
jno
insl
mov
mov
fcoms
ss
decl
mov
out
mov
xchg
jmp
andb
out
movsl
mov
pop
fdivl
ret
mov
mov
xchg
lret
sbb
rorb
call
cmpl
sahf
call
inc
stc
test
pop
mov
mov
ljmp
ret
fistpl
int
testl
inc
mov
je
dec
in
and
int
rcrb
mov
in
lcall
decl
mov
xchg
sub
rcrl
sbbb
loope
mov
adc
cltd
pushf
push
sbb
pop
pop
sti
ja
and
loopne
decl
add
mov
pusha
rclb
mov
cmpsb
test
or
repnz
mov
sahf
xchg
popa
ret
add
dec
ljmp
pop
pop
stos
jmp
jle
lock
inc
and
sbb
shrb
xchg
ljmp
lcall
lock
out
neg
cmc
mov
push
aaa
xor
mov
ljmp
push
hlt
lods
lea
imul
or
push
sbb
push
mov
in
fcoms
int
and
push
add
fistpl
call
out
js,pn
or
je
sub
mov
jne
dec
test
adc
lret
cli
mov
decl
popf
mov
bound
fsubs
dec
test
push
movsb
insb
nop
pop
and
push
mov
jmp
dec
aas
into
rcll
adc
lret
test
je
aam
movsl
pop
fstl
push
mov
push
jmp
pop
call
add
xchg
lods
fst
inc
pop
mov
jp
sbb
or
push
in
insl
dec
jmp
addb
imul
jmp
sbb
push
movsl
cwtl
lret
fcmovb
adc
test
cmp
pop
adc
das
std
fucomip
bound
lahf
cmc
mov
mov
sarb
jmp
sbb
sahf
jle
sbb
sbb
sbbb
mov
sar
mov
or
lahf
mov
add
jno
aam
incl
dec
aas
mov
jmp
mov
in
sbb
pop
add
cld
lea
test
jmp
mov
decl
mov
lods
dec
jmp
jg
orb
mov
mov
ljmp
mov
jns
call
in
jecxz
sbb
mov
scas
xchg
pop
mov
loopne
ffreep
inc
nop
pop
flds
mov
or
shl
push
sub
iret
hlt
xchg
cli
pop
dec
addr16
mov
cmp
fdivrp
ljmp
push
out
lcall
or
test
cmp
clc
rcrl
ljmp
insl
or
inc
scas
mov
mov
inc
xchg
or
das
incl
fbstp
scas
mov
fidivs
loop
loop
ss
or
clc
fucomip
lods
inc
movl
std
psrlw
jg
mov
cmpsl
inc
mov
pop
icebp
ljmp
xchg
mov
call
jg
in
xor
or
aaa
pop
lahf
out
push
mov
dec
das
icebp
mov
cmpsl
pop
xchg
xchg
adc
xchg
int
das
cld
aam
dec
mov
aaa
xchg
scas
dec
in
mov
dec
stc
mov
imulb
mov
push
dec
hlt
in
ds
push
or
mov
mov
inc
loopne
fistpll
ffree
movsl
cs
inc
cmp
jg
and
dec
cwtl
sbb
jmp
in
mov
repz
arpl
out
add
lcall
jo
cltd
mov
sbbb
fimuls
and
jne
test
cmp
js
daa
aaa
mov
dec
inc
bound
adc
mov
jmp
test
xchg
mov
jmp
sahf
dec
xchg
jo
scas
in
mov
sahf
movsb
test
sub
lcall
cltd
adc
sar
and
inc
pop
jmp
fadds
xchg
mov
sub
or
das
jl
std
ljmp
fwait
idivl
cwtl
xor
mov
stos
rolb
decl
add
ret
daa
cmpsb
sub
into
jmp
xchg
or
popa
ja
movsl
mov
jo
jg
call
je
adc
mov
jne
adc
dec
sbb
ret
or
mov
mov
out
fsubrs
xchg
add
dec
sti
lds
icebp
push
enter
fcoml
in
push
pop
test
out
add
jmp
xor
ret
aad
lret
xchg
out
icebp
fidivl
lahf
mul
loope
cmp
xchg
incl
xchg
lds
sub
jns
int3
or
adc
int3
js
dec
push
fiaddl
dec
rolb
jmp
loope
hlt
loop
je
add
jnp
ret
mov
cld
outsb
add
pop
dec
inc
xchg
or
xor
ljmp
pop
pop
into
mov
enter
mov
stc
fisttps
xor
cwtl
adc
jecxz
shr
xor
mov
xchg
rorl
or
dec
add
ljmp
hlt
add
dec
movsl
out
in
mov
test
mov
lods
xor
pushl
dec
push
pop
sub
push
sub
aas
push
call
sbb
ljmp
ficoml
es
sahf
or
gs
cmp
adc
decl
or
mov
xchg
ret
cld
iret
mov
lock
popa
jge
movsl
movsl
inc
in
pop
inc
lods
add
add
test
call
aaa
mov
lock
adc
repz
inc
movsb
cld
bound
popf
xor
outsl
cmp
xchg
sbb
jbe
into
adc
jno
mov
mov
adc
add
mov
pushl
push
sti
inc
mov
movntq
mov
xchg
mov
adc
push
shlb
ljmp
inc
and
into
mov
push
out
dec
fnstcw
fimuls
call
push
push
and
add
mov
cmp
xor
hlt
in
fisubrl
lock
in
jg
dec
roll
lods
scas
lods
xchg
add
icebp
adc
lcall
sahf
js
jns
jae
add
push
fstpl
je
push
ds
ljmp
push
ljmp
in
push
and
push
and
fsts
xor
or
pushl
adc
dec
ror
stc
pop
sti
sub
nop
mov
lcall
mov
pop
jne
mov
adc
fisubrl
cmpl
ljmp
or
enter
imul
clc
ljmp
mov
cli
or
je
lret
sub
sbb
ret
xor
in
ljmp
sub
add
test
mov
lock
sub
fnstsw
pushl
out
pop
aad
jnp
lods
and
fcmovne
mov
pop
cld
lret
leave
sahf
sub
ret
loope
push
fcom
ljmp
pop
jbe
xor
xchg
sbb
and
or
aaa
insb
xchg
movsl
bnd
call
mov
mov
ret
out
out
movsb
mov
sbb
ss
add
cmp
repz
aam
jbe
sub
jg
xor
or
pop
cli
call
xor
xlat
add
lock
xor
jo
pop
mov
pop
std
das
cld
or
stos
ret
pop
aam
into
je
das
std
dec
cmc
fidivrs
jns
jae
iret
mov
pop
inc
sub
out
out
inc
sahf
jns
mov
out
mov
jns
decl
push
ljmp
lcall
xor
xor
jmp
and
mov
gs
movsb
iret
jl
in
sbb
cld
add
pop
push
pusha
cli
sarb
inc
ljmp
mov
inc
les
mov
mov
into
pop
sub
xor
push
pushf
sbb
sbb
xchg
fwait
push
loopne
stc
sub
mov
pop
jle
adc
or
pop
gs
push
aam
dec
push
fdivrl
mov
cmc
lcall
sahf
push
cmpsl
int
push
mov
xor
outsl
andb
mov
cmp
and
loop
and
pushl
in
sbb
decl
icebp
adc
daa
push
xor
adc
int
call
mov
enter
pushl
inc
loope
pop
sbb
lcall
pushf
mov
in
mov
ds
and
or
mov
add
sar
int3
test
jbe
jg
jmp
jle
push
test
push
or
cmp
movsb
pushl
adc
pop
adc
jg
inc
call
mov
in
mov
adcb
sbb
in
xchg
xchg
fucomip
pushl
mov
cmp
scas
shl
adc
push
arpl
pop
out
pop
or
sbb
adc
popf
and
call
pop
clc
rorb
popf
scas
push
dec
je
lahf
mov
ja
adc
cld
incl
inc
xor
dec
jge
xchg
xor
adc
out
sti
xchg
add
mov
roll
loope
es
mov
decl
mov
adc
arpl
pop
flds
mov
ja
adc
sub
cmc
dec
icebp
aad
mov
loop
push
and
pop
sub
sbb
lcall
xchg
mov
es
cmp
test
or
jecxz
cld
loop
cld
jg
xchg
fsubr
jmp
and
xchg
sti
inc
jg
cmp
sub
add
decl
lock
dec
mov
call
fucomp
idiv
push
push
stos
fnsave
mov
jmp
js
push
aam
xorl
jecxz
cmpb
jns,pn
xchg
jno
mov
mov
pusha
sbb
dec
pop
in
jecxz
xor
fdivrl
and
lcall
xor
sbb
lods
adc
js
enter
add
push
pusha
push
ret
and
mov
ljmp
jne
inc
iret
xor
addr16
stos
dec
jbe
call
lcall
stos
incl
push
or
sahf
or
out
mov
ret
xchg
mov
mov
dec
jae
push
loopne
sub
cmp
lds
or
mov
and
lcall
out
into
push
pop
push
negb
repz
mov
lcall
test
cmp
ljmp
mov
push
enter
ret
mov
push
push
mov
cld
lcall
call
push
cs
outsb
das
dec
enter
lock
fmull
ljmp
lret
test
sub
pop
xchg
push
scas
pop
jp
fst
mov
dec
sub
xchg
cli
xchg
aam
mov
xchg
sbb
pop
mov
repnz
aad
cmp
cmp
pushl
push
xor
add
scas
or
jg
jp
add
lock
mov
cltd
test
aas
mov
pandn
je
call
or
mov
inc
les
pop
and
or
shrl
test
inc
shlb
fucomip
pushl
lods
sub
scas
mov
inc
repz
in
test
cli
mov
pop
mov
stos
testl
sub
incl
stos
inc
pop
mov
xchg
pop
adc
loopne
xchg
sbb
dec
test
shll
ret
fildll
imul
lcall
push
jg
xor
loopne
test
add
xchg
mov
mov
test
out
movsb
jno
sbb
sub
out
inc
int
mov
mov
loope
mov
js
pop
test
adc
cmp
and
or
lcall
hlt
and
mov
mov
mov
push
aad
pop
adc
adcw
pushl
iret
mov
or
pusha
inc
inc
ficoml
push
cld
in
lock
cwtl
sub
loope
mov
lcall
cli
xchg
call
stos
lds
jbe
daa
cli
adc
mov
out
ljmp
cmc
inc
sbb
iret
daa
xor
dec
mov
fnstsw
add
xorb
ljmp
shll
mov
arpl
negb
push
insb
sbb
out
add
dec
jae
inc
ret
sub
repz
pushf
leave
adc
scas
repnz
es
fs
sar
call
cmpsl
subb
mov
mov
ljmp
xor
lret
lds
sbb
movsl
fildl
push
mov
jge
daa
xchg
push
ja
pop
xchg
pop
jb
jne
je
std
mov
push
scas
pop
or
test
call
or
xchg
add
aam
mov
or
fisubrs
add
leave
dec
sub
clc
incl
xorb
jae
pop
or
clc
cwtl
dec
jg
call
sbb
or
aam
and
lret
scas
mov
test
lcall
jns
movsb
xor
dec
xor
adc
packuswb
xor
ljmp
call
ret
jne
fxtract
outsl
sbb
loopne
pusha
out
sbb
fs
popf
xchg
mov
decl
sbb
inc
cmpl
ficoml
rcl
or
and
sti
call
pop
mov
call
sahf
sti
idiv
sti
jns
cwtl
movsb
jl
and
and
call
push
shl
dec
lods
lret
xor
rol
push
mov
ljmp
inc
pop
add
pusha
mov
enter
adc
aam
sahf
and
lcall
aad
dec
cmp
jmp
mov
cmp
push
out
dec
es
and
decl
push
mov
push
ret
or
popf
movsb
test
clc
adc
lods
enter
add
fdivrp
jmp
cmpsl
and
je
adc
or
pop
out
test
dec
inc
sbb
cld
decl
mov
ret
divl
sub
movsl
cmpsb
movsl
and
mov
in
gs
jl
inc
je
mov
je
das
pushf
cmc
cli
aaa
cmp
mov
bswap
aam
es
cld
jecxz
imul
mov
fistpll
mov
jge
cmp
and
jg
enter
mov
imul
cmp
iret
add
push
mov
stos
mov
inc
data16
out
jmp
jg
or
ds
pusha
cmp
subb
cwtl
add
cmc
sar
in
adc
sahf
in
fsubl
stos
cmpsb
call
mull
mov
jg
iret
xchg
imul
or
jge
das
lock
dec
aaa
aad
mov
cmp
sbb
mov
dec
pop
clc
decl
repz
cmp
sahf
popa
cmp
adc
movhlps
outsl
cmc
push
iret
xor
loope
lahf
dec
out
dec
xor
movsb
jne
or
fucomip
fidivrl
or
int
inc
in
adc
sbb
xor
mov
test
push
push
jecxz
inc
or
jns
jne
mov
ljmp
pop
ljmp
test
lds
cld
outsb
cmp
call
lea
pop
pushl
pop
repz
pushf
mov
xchg
sub
loope
popf
aad
lcall
dec
fwait
dec
sbb
sub
js
inc
and
sub
mov
jno
add
inc
push
in
clc
icebp
mov
inc
imul
aad
mov
mov
subl
cmp
es
and
inc
sar
push
mov
mov
mov
or
test
jmp
fisubrl
jg
decl
mov
fwait
mov
xor
sbb
sbb
inc
sub
jg
cmp
sub
mov
xchg
fwait
aas
push
or
aaa
push
jmp
cmp
lds
nop
mov
ljmp
cli
and
dec
push
roll
outsb
sub
js
push
mov
ret
mov
aaa
js
fidivs
inc
pop
jbe
shlb
mov
fidivl
or
inc
inc
jmp
sbb
pand
icebp
sbb
mov
mov
push
fdivr
pop
rcrb
lcall
dec
push
xor
xor
leave
mov
push
popa
fldl
lcall
pusha
rolb
sahf
adc
lds
xor
adc
push
jbe
rolb
ljmp
inc
dec
mov
cmpb
jg
pop
movsl
or
xor
mov
leave
mov
fnclex
xlat
js
insl
cmp
ljmp
stos
xchg
xor
pushf
and
scas
int
xchg
adc
sbbl
rcrb
fcmove
push
jne
jae
cmp
repnz
decl
lea
mov
bound
shlb
aad
push
das
hlt
lea
pop
test
xchg
ja
mov
add
push
bound
jo
push
ret
mov
sbb
div
add
pop
in
in
xchg
movb
or
sarb
in
or
mov
stos
fwait
rolb
test
fs
pop
add
outsb
or
inc
inc
negl
and
jo
std
loope
das
mov
lcall
mov
jg
adc
insl
lret
and
incl
adc
inc
lahf
jo
out
mov
or
ds
jb
in
dec
adc
popa
xor
push
mov
xor
ljmp
mov
aaa
or
iret
adc
dec
nop
test
lret
sbbl
ljmp
fwait
mov
inc
dec
sub
hlt
jne
push
sarl
insb
xor
dec
cs
and
ds
jle
jmp
mov
stc
pop
movsl
stc
add
sub
cmp
enter
insb
jg
sbb
jge
aam
dec
sub
sbb
cmp
cmp
mov
pop
aad
push
pop
cmpl
movsl
std
ss
jge
icebp
outsl
test
std
cmpsb
out
addl
push
mov
dec
pop
nop
fnstsw
inc
and
inc
bound
push
aaa
mov
aam
mov
cmp
mov
inc
xchg
stc
mov
ret
ror
pop
stos
mov
out
pop
js
mov
adc
lcall
mov
push
sbb
insl
add
mov
add
sbb
jbe
sbb
pushl
mov
pop
push
mov
mov
mov
mov
xor
fildll
loop
bnd
add
fsub
push
fwait
sbb
jae
out
call
or
or
cmp
mov
negl
sbbl
inc
jbe
jp
or
lret
lods
sar
stos
stos
repz
insb
add
ds
outsb
dec
sbb
inc
push
jg
into
mov
cmpsb
xor
pop
ljmp
push
bound
decl
mov
mov
fistpl
imul
stos
mov
pop
and
jno
jg
mov
fwait
popf
mov
loopne
sub
nop
pop
mov
jo
insl
leave
cmpsb
sub
mov
pop
clc
leave
mov
pushf
enter
inc
jne
imul
nop
clc
lret
dec
sbb
jno
mov
jmp
add
xor
jg
xchg
push
xchg
mov
test
fdivl
js
andl
das
lock
mov
jne,pt
clc
inc
pop
lcall
loope
or
or
dec
cld
fcomip
xor
imul
aam
or
jge
test
and
addr16
inc
stc
cmp
and
ss
and
sub
jg
xchg
jg
mov
loop
mov
iret
loop
std
sbb
and
sbb
mov
jmp
arpl
bound
fstpl
lods
sti
stos
in
andb
jg
push
mov
and
je
push
std
dec
mov
jno
andb
or
sbb
or
cmp
xchg
dec
or
popa
cmp
in
xor
sbb
ud0
incl
aas
cli
rclb
inc
pop
shrl
mov
pop
stos
outsb
nop
imul
in
lcall
fst
popf
adc
jb
rolb
xchg
inc
and
lahf
mov
cmp
jns
adc
call
push
insl
ror
cmp
insl
sub
ljmp
ds
lods
faddl
push
mov
lock
lret
jmp
dec
and
movsb
insb
daa
mov
jp
push
sbb
or
test
das
jp
lcall
pslld
enter
cld
mov
xor
bound
or
lods
mov
push
lods
incb
in
test
pop
dec
in
add
cmp
pop
sbbl
adc
mov
dec
xor
rcll
lcall
movsb
and
int3
popf
cmp
pop
mov
lcall
cli
imul
add
push
add
inc
jo
pop
push
cmpsb
pusha
fucomp
jmp
into
jae
js
addr16
scas
out
mov
add
jle
lea
adc
inc
mov
cmpb
popa
test
or
sbb
repz
int
sahf
outsb
push
jg
jb
jg
pop
aas
movsb
mov
mov
jb
lcall
jmp
and
in
cmp
rol
je
cmp
pushl
jae
pusha
mov
sbb
popa
aam
mov
xor
push
incl
scas
dec
in
jnp
jp
lret
jmp
adc
lods
aas
jmp
fnstsw
jmp
cld
shll
xchg
or
sub
sub
push
add
jmp
xlat
sbb
test
aas
sti
pop
dec
cmp
shlb
mull
mov
clc
dec
jg
dec
lock
in
movsb
jmp
cmpl
call
stc
aaa
adc
fs
push
movsl
nop
jg
popf
jne
les
jmp
imul
pop
fucomip
outsl
lret
jp
lock
adc
inc
xchg
and
ss
in
in
das
adc
sub
jg
sub
fidivrs
jg
insb
pusha
sub
in
add
push
stos
hlt
and
mov
ljmp
and
push
jne
daa
xchg
daa
mov
lcall
and
add
lods
push
fsubrs
pop
xchg
lods
out
jmp
call
mov
loope
std
cltd
fsts
cld
inc
adc
imul
ljmp
xchg
outsl
add
jae
cmp
mov
ja
sub
ljmp
divl
das
adc
imul
adc
cld
sti
cmp
fmuls
or
ret
decl
mov
xor
push
push
lcall
adc
xor
dec
xor
sub
pop
pop
out
scas
cmp
push
shlb
ljmp
xchg
shll
jae
push
ret
inc
xor
mov
outsl
dec
jg
ljmp
popa
aad
mov
int
dec
add
outsl
je
scas
ss
lcall
js
jno
jbe
jmp
jle
leave
pop
faddl
mov
push
xchg
push
stc
movsl
decl
sub
inc
xor
test
push
add
lahf
stos
mov
mov
pushl
jno
stos
sub
test
ret
push
and
pop
in
sbb
mov
lcall
jp
out
jp
out
test
mov
lahf
test
cmp
je
pop
lcall
ljmp
ljmp
cli
fidivrs
push
iret
js
gs
jnp
pop
out
add
js
fucomip
in
repnz
cmpsl
sbb
loope
inc
cmp
mov
mov
adc
jecxz
arpl
insl
inc
push
sbb
lods
movsb
in
pushl
adc
imul
das
into
inc
enter
push
mov
inc
aad
mov
psrld
push
jnp
mov
xor
mov
mov
in
jg
imul
pop
add
mov
xlat
sarl
mov
mov
and
xor
mov
xor
inc
cmp
push
pop
cmp
push
out
sahf
push
mov
xchg
mov
decl
or
mov
fcmovnb
mov
jg
mov
jecxz
sbbb
xor
dec
scas
xchg
rorl
js
adc
ljmp
add
xchg
nop
das
mov
sti
jmp
scas
jb
js
jns
call
decl
fstps
push
push
jge
sbb
mov
sub
in
mov
sbb
rep
add
lahf
pop
adc
lcall
add
adc
and
xchg
and
push
call
inc
dec
dec
dec
int3
inc
aad
ret
sbb
mov
call
cli
cmc
bound
sub
test
push
jae
data16
es
jmp
dec
add
stos
fmul
clc
pop
cmp
cwtl
or
daa
pushf
in
in
gs
idiv
fistpll
mov
sbb
adc
xchg
pop
lock
int3
out
punpckhwd
mov
lods
in
cmp
jge
aas
repz
add
ret
hlt
notb
addl
bound
mulb
dec
mov
shlb
adc
push
xchg
jnp
mov
in
shrl
cmpsb
push
or
jns
add
dec
mov
jl
sub
adc
into
fsts
aam
and
loop
aad
push
ljmp
hlt
enter
adc
xchg
fcos
test
xchg
insb
sarb
xor
int3
mov
les
mov
pop
stc
mov
or
pop
out
or
or
jmp
into
cli
mov
movsb
loop
cmp
dec
iret
sub
nop
cmpsb
xor
sub
stos
pushl
push
xchg
sub
push
sbb
cltd
test
outsb
cltd
sub
pop
mov
inc
aam
jg
incl
xor
iret
jns
lods
lret
pop
notl
sbb
insb
xor
dec
movsb
cmpsb
cltd
outsl
jae
in
dec
mov
jg
cmp
jecxz
out
insb
xchg
and
in
adc
and
movsl
jle
fists
sbb
pop
inc
lcall
adc
bound
pop
bound
stos
lds
imul
std
mov
mov
jl
imul
push
jno
fs
clc
pop
fnsave
mov
mov
out
incl
mov
loopne
sahf
dec
lahf
cmp
je
jns
push
fcos
lcall
ljmp
pop
xor
fidivrl
jge
lcall
jmp
xor
in
test
movsb
outsl
ljmp
test
mov
push
mov
adc
enter
movsl
inc
or
cmpsb
or
decl
leave
sbb
add
and
cltd
mov
popf
adc
xchg
jo
or
call
jmp
in
pop
lds
mov
in
pop
sahf
and
push
adcl
mov
nop
lcall
insb
outsb
inc
mov
and
inc
push
and
adc
and
jae
adc
push
decl
icebp
xchg
int
cltd
adc
aad
inc
add
adc
cld
mov
push
das
lock
ljmp
jle
out
call
dec
and
lods
and
rolb
mov
out
or
sti
rcrl
into
adc
in
adc
js
mov
lock
movsb
ret
mov
out
rolb
sarb
jo
sbb
stos
sahf
inc
pop
mov
out
dec
cmp
mov
or
pop
pushf
inc
aaa
sahf
sub
movsl
es
fisttpll
sahf
xchg
sahf
mov
and
imul
inc
pop
ljmp
daa
xor
daa
mov
jnp
lcall
mov
je
dec
fstpl
xchg
push
cmpsb
mov
lods
fidivrs
idivb
pop
clc
jp
push
pop
mov
gs
jg
decl
mov
pop
lret
mov
jmp
jle
jbe
jo
lods
jle
or
int
xlat
mov
pop
incl
mov
data16
sbbl
mov
adcb
xor
mov
pop
mov
rcll
int
xchg
fs
jge
leave
fwait
sbb
decl
loope
pop
dec
push
cmp
mov
enter
sbb
mov
call
jb
cmp
xlat
cmp
dec
mov
or
mov
gs
sar
pushl
push
in
sbb
ficomps
aas
xchg
sub
pop
jns
sahf
jnp
xchg
cli
ljmp
jo
aam
cmp
fstsw
dec
push
outsl
jg
scas
cmpsl
lock
mov
imul
loope
decl
insb
pusha
sub
cltd
or
lods
ret
jg
or
pushl
popf
add
mov
enter
mov
fcoms
stos
and
mov
sti
push
inc
addr16
fldcw
pop
xor
mov
pop
and
and
enter
call
js
shll
dec
pop
xchg
inc
push
aam
es
fidivl
test
xor
pop
decb
bound
repz
ja
inc
adc
cwtl
jb
sar
mov
out
arpl
mov
and
pop
sti
jp
xchg
jg
ljmp
outsl
fs
out
pop
push
dec
out
sub
rolb
sti
ljmp
aam
sbb
andb
fcmove
xchg
loop
mov
jne
pop
addr16
sub
dec
jle
aas
xchg
sub
sub
out
and
sub
xor
aaa
leave
push
mov
addr16
repz
sbb
cmp
incl
cwtl
out
je
mov
add
mov
enter
adc
xchg
pop
outsl
jnp
inc
lcall
or
mov
push
ljmp
sub
jle
cmp
sbb
movsb
or
mov
sarl
scas
aad
and
idiv
ljmp
jbe
out
fisubl
frstor
add
or
xor
sbb
ret
pop
push
gs
mov
mov
cmp
dec
mov
jmp
xchg
adc
outsl
jo
push
shrb
leave
mov
xchg
pop
cmc
movl
outsb
add
fsubrl
call
xchg
addr16
int3
inc
clc
and
jmp
xchg
rcl
mov
xchg
sarb
cld
ljmp
cmc
sar
mov
das
jmp
imul
in
lds
or
decl
or
inc
dec
mov
sahf
push
or
fidivl
cld
call
push
cli
test
enter
mov
cwtl
out
sbb
pop
ljmp
pop
loope
cli
mov
or
decl
xor
movsb
inc
jo
aad
mov
cld
pushl
adcb
sub
fsts
mov
mov
inc
movsb
movsb
or
cld
push
jns
xchg
sahf
push
out
lcall
adc
jg
lcall
daa
std
fdivrs
andl
sbb
cli
lret
cmp
mov
paddb
push
mov
push
loope
xchg
fcos
fists
std
mov
fs
add
mov
xchg
cmp
mov
das
hlt
pop
int3
stc
popa
fildl
inc
push
inc
push
dec
and
jp
inc
fildll
mov
xchg
add
jno
stc
sahf
int
jno
outsb
and
call
mov
notb
mov
loopne
adc
test
stos
lods
outsl
call
aaa
mov
xchg
cmp
cmp
jecxz
xor
mov
xchg
cli
fucomip
push
hlt
sub
inc
inc
mov
rclb
pop
iret
adc
dec
add
mov
xor
pop
mov
xchg
out
mov
subl
leave
jg
xchg
clc
or
mov
push
test
ljmp
sbb
movsb
push
outsl
mov
xor
lods
push
push
inc
rcr
in
arpl
inc
pop
lret
sub
jns
daa
sbb
sub
inc
repnz
cmpsb
mov
xchg
xor
push
mov
stc
pop
test
push
insl
in
scas
cwtl
or
mov
dec
adc
mov
sti
je
test
mov
mov
sbb
ret
shl
sar
push
iret
mov
lds
pop
jbe
pop
scas
stos
cmp
bound
pusha
shll
cmpsb
popf
fists
orl
xor
arpl
test
sbb
decl
gs
xor
xor
mov
rcr
or
mov
insb
mov
mov
incb
sbb
jnp
inc
sub
imull
lods
jmp
inc
call
push
lahf
cmpsb
jp
outsl
pop
in
adcb
xchg
pop
adc
fists
incl
cmpsb
add
leave
push
add
sub
xlat
adc
dec
repz
pop
call
cmp
xor
pop
sbb
jg
add
fists
xchg
pop
dec
or
scas
pop
fstl
faddl
popa
fcmovnb
jae
pop
repnz
fstpt
mov
xchg
cwtl
fs
dec
dec
mov
movsb
rclb
push
mov
das
jl
sub
jmp
pop
pusha
out
sahf
mov
push
mov
test
ljmp
lahf
adc
mov
jno
fistps
in
xchg
cld
pop
cmpsb
into
and
sbbl
xchg
ss
xchg
mov
mov
ljmp
sub
fcoml
popf
fdivrp
stc
inc
add
roll
xor
ljmp
testb
mov
in
call
xchg
inc
sbb
sbb
lds
decl
xor
dec
xor
in
cmc
mov
leave
and
pop
or
int
hlt
lods
cs
test
sub
jo
mov
movsb
pop
fwait
dec
jecxz
mov
add
jmp
test
cmp
cmp
fdivs
push
xchg
mov
ljmp
pop
out
push
int3
int3
or
ja
das
fisubs
mov
push
xor
pushl
and
pop
shll
out
js
leave
incl
inc
dec
mov
mov
rep
lret
fsts
sbbl
xchg
mov
add
dec
cli
pop
clc
jmp
imul
ds
mov
xor
pop
sarl
pop
fldcw
filds
dec
cld
mov
incl
stos
test
std
lcall
in
adc
mov
sbb
and
jg
mov
push
sub
arpl
inc
insl
mov
negl
lock
mov
xchg
mov
pop
andb
fsubl
fdivr
push
xchg
cmc
push
idivl
lahf
pop
jbe
fwait
adc
lcall
jae
sar
test
pop
aas
xchg
xchg
sbb
lock
or
cltd
sub
sbb
cmp
ljmp
fnsave
fldt
scas
mov
jecxz
imul
cmp
pop
lcall
inc
stos
hlt
mov
xchg
into
mov
lock
mov
repz
sub
arpl
inc
lock
outsb
xor
repnz
decl
lea
pop
xchg
mov
shlb
std
mov
insl
sub
xchg
mov
fs
std
inc
jmp
jno
xchg
fs
pop
adc
test
xchg
outsb
xchg
rcrl
ljmp
mov
push
jae
icebp
pushl
popa
enter
out
xchg
aas
icebp
les
ja
or
out
dec
jge
cwtl
dec
repnz
ljmp
dec
dec
sub
xlat
add
faddl
cmp
mov
rolb
call
decl
aaa
or
adc
and
in
clc
adc
pop
cli
std
les
es
cmp
mov
add
es
insl
inc
fiadds
in
lods
push
mov
mov
data16
outsl
xlat
cmp
ljmp
in
mov
in
test
cmpsl
mov
dec
and
rclb
lds
loope
cmp
iret
ljmp
cmp
lods
iret
ljmp
push
loop
dec
stos
mov
int3
clc
mov
ret
sbb
incl
sbb
fwait
xchg
idivb
sbb
into
mov
aad
xchg
cli
push
enter
js
mov
popf
dec
movsl
cmpsl
inc
sub
mov
sbb
sbb
mov
outsb
aam
pushf
jg
mov
xor
mov
add
jg
dec
mov
das
cld
in
mov
adc
scas
fldl
je
inc
push
jg
in
repnz
xchg
bound
lods
lahf
push
ss
and
push
das
lock
jns
dec
pop
jp
mov
loope
aam
and
sarl
iret
test
dec
aaa
movb
pushl
or
mov
fisttpl
shlb
dec
clc
int
test
mov
aaa
mov
aas
rolb
mov
jo
movsb
dec
cmp
xchg
inc
dec
push
ret
lock
mov
mov
out
cmp
dec
int3
movsl
les
popf
push
shlb
and
mov
in
inc
inc
sub
out
imul
arpl
add
enter
fnstsw
push
jnp
out
lods
sub
cmp
loop
push
sahf
dec
arpl
mov
test
test
pushl
fildll
out
adc
call
dec
mov
lret
jmp
mov
mov
inc
test
jbe
movl
hlt
or
push
inc
xchg
lock
into
int
mov
jmp
std
mov
jmp
cmp
inc
lock
cmp
mov
lds
ret
mov
jg
mov
pop
lock
fstl
loopne
insb
popf
mov
les
icebp
decl
ja
adc
jge
jge
mov
rcll
sbbb
enter
mov
mov
stos
pop
out
and
jge
loop
lcall
shrb
push
fisubl
lea
xor
insl
sbb
fildll
jne
insb
push
cmp
or
or
ffree
jnp
mov
xor
mov
jmp
push
inc
lcall
mov
imul
adc
fcoms
mov
decl
dec
or
dec
xor
pop
pop
std
jmp
mov
les
jo
scas
jmp
jmp
popa
inc
decl
sbb
push
jns
inc
rorb
int3
adc
dec
subb
fdivrp
jmp
aas
ljmp
das
lcall
add
jo
ljmp
dec
data16
push
popa
cmp
jge
jne
arpl
cs
and
addb
ljmp
out
xchg
das
data16
mulb
inc
adc
int
incb
xchg
jp
mov
push
jge
inc
pushl
push
into
ret
lret
xchg
bound
arpl
pop
mov
in
clc
mov
pop
test
xchg
jb
and
aam
in
lcall
stc
push
jne
decl
inc
data16
fucomp
push
dec
nop
add
jg
sub
mov
xlat
jl
nop
inc
fisttps
cmp
lahf
dec
cmp
stc
mov
mov
shll
popf
xchg
sbb
mov
jne
lcall
jle
out
insb
cmpsb
dec
mov
out
pusha
icebp
lods
and
into
call
jg
mov
push
lret
fwait
xorl
sbb
scas
decb
push
lods
fcomps
dec
imul
xchg
mov
dec
jmp
call
leave
insb
enter
stc
divb
aad
gs
ljmp
push
xor
jecxz
adc
cmp
in
ja
cmpsl
lock
dec
dec
fdivp
add
gs
mov
stc
lcall
movsb
incb
es
push
clc
test
fmulp
lds
jmp
lods
pop
push
fnstsw
sbb
or
xchg
mov
adc
call
pop
jle,pn
nop
outsb
mov
and
ljmp
xor
rcll
mov
vpslld
xchg
mov
mov
add
xor
out
fiadds
sub
dec
dec
cld
pop
call
js
stos
js
push
in
lods
push
decl
cli
outsl
xchg
pop
repnz
cmc
cmp
pop
sub
xor
lcall
pop
push
mov
xchg
push
clc
cmp
arpl
xchg
dec
push
sub
out
ljmp
jl
sub
mov
inc
xlat
test
xchg
jo
popw
in
call
call
rolb
xor
inc
xor
int3
cmpsl
pop
ret
iret
hlt
call
decl
adc
mov
and
xor
mov
mov
mov
test
adcl
push
aaa
jns
lret
sub
dec
pop
adc
scas
inc
xchg
fisttps
rclb
jg
xor
and
cld
jge
sub
movsb
jge
jo
sbb
cmp
incl
fdivr
bound
daa
jp
loop
mov
push
bound
mov
out
mov
inc
rcrl
xchg
fdivrs
pop
xchg
pop
dec
repnz
cmc
add
push
push
xor
mov
cmp
jg
dec
push
rolb
es
sbb
mov
cmp
inc
add
inc
das
mov
push
or
std
rcr
les
jmp
rorl
mov
lock
cmp
push
das
sahf
cmp
call
adc
mov
mov
mov
test
cmc
orl
outsb
xchg
mov
jnp
jno
jnp
push
sahf
mov
jae
push
or
std
jg
rcrb
xor
insb
jle
aaa
cmc
or
mov
cmc
ja
pushl
enter
xchg
jns
fwait
gs
adc
or
jg
aad
push
insl
movsl
das
pop
roll
dec
aam
push
push
cmpsb
mov
add
fbld
test
std
mov
jns
lret
xor
fsubl
lcall
push
nop
ret
sbb
scas
inc
shrb
pusha
rolb
inc
adc
sbb
mov
fnstenv
pop
add
xchg
enter
inc
repnz
popf
movb
add
push
xor
mov
adc
clc
push
sti
es
xchg
sub
imul
sub
outsb
mov
dec
rolb
subb
ljmp
cld
clc
jbe
mov
test
jb
iret
pop
mov
pop
rorb
xor
outsl
cld
pushl
aas
adc
test
repz
pop
loopne
xchg
jle
test
mov
lahf
push
sbb
fsubrs
lods
bnd
push
rcr
outsb
jg
repz
mov
std
jg
jg
pop
mov
fdivl
and
or
repnz
std
lods
lock
lahf
mov
adc
in
int3
ret
iret
mov
lcall
insb
cmp
gs
cld
inc
das
add
pushl
out
xchg
inc
cmp
out
pop
and
cmp
call
jbe
lock
ss
push
int3
fnstcw
inc
aas
fidivs
dec
ljmp
inc
xchg
jecxz
push
pop
mov
sub
cmpsl
sbb
mov
xchg
out
cmp
mov
jo
inc
cwtl
mov
cmp
aad
xor
mov
call
mov
orb
hlt
negb
mov
pop
mov
popf
ljmp
lock
lcall
clc
leave
ror
dec
jns
insl
jmp
std
cmpsl
jmp
pop
sub
and
pop
mov
imul
push
push
std
in
movsb
add
jg
push
fisttps
stos
std
test
xlat
outsl
fisttpl
push
mov
idivb
and
mov
lret
leave
mov
jge
jecxz
adc
cld
inc
mov
inc
inc
cmp
cmpsb
loope
pop
sbb
cli
int3
jb
add
lahf
add
sub
and
push
add
lret
imul
push
jno
lret
test
xor
mov
cmp
add
mov
fisttps
and
ret
les
push
pop
jae
mov
fcmovne
sbb
sbb
insl
push
cmp
adc
inc
addr16
lds
xor
ror
jns
cmpsl
movsb
adc
mov
negl
xchg
or
jmp
jmp
dec
loope
bound
pushl
mov
cmp
ljmp
cmp
std
das
cmc
xchg
mov
test
cltd
pop
arpl
repnz
mov
sub
pop
push
les
lret
xor
repz
fsubrs
lds
adc
mov
fsubl
inc
and
mov
xchg
push
lea
pop
lcall
sbb
movsl
jne
sbb
lods
hlt
lcall
xchg
cmp
mov
mov
cmpsl
jecxz
mov
cmc
xchg
mov
push
and
rol
outsl
out
mov
test
mov
call
inc
mov
jmp
add
movsb
cli
int
add
or
mov
mov
sbb
call
xor
inc
mov
jno
adcb
dec
push
out
xorb
cmp
and
pop
loopne
repnz
in
adc
ret
push
push
cld
jg
test
sub
cmc
cmc
pop
inc
inc
push
test
jp
sbb
cmc
push
jl
data16
cmp
or
call
out
add
stos
lds
outsb
fstp
stos
push
into
shll
pop
fs
mov
jg
ljmp
cmp
pop
sbb
outsl
cld
mov
aas
mulb
mov
xor
mov
inc
cmp
es
cmp
in
ss
in
data16
inc
push
or
dec
outsb
cli
mov
push
out
or
adc
leave
jo
xchg
cmc
or
mov
in
adc
pop
ret
repnz
repnz
sbb
nop
mov
sar
mov
mov
add
fs
shlb
xor
jg
mov
mov
push
dec
dec
js
lock
xchg
rcll
stos
mov
mov
decl
or
sbb
aaa
cmp
mov
test
lahf
lahf
test
sub
dec
mov
fcoml
mov
sbb
mov
xor
pop
rcll
mov
jmp
jl
cwtl
xor
push
fs
sbb
test
outsl
fwait
ror
mov
call
test
sbb
mov
dec
xchg
repnz
clc
setnp
mov
lahf
mov
add
lods
pop
and
divb
and
popl
mov
cli
pop
xlat
in
ds
dec
pop
mov
xor
aam
add
cmp
mov
stos
cltd
jbe
fcmovnb
icebp
dec
lret
das
jg
xchg
cli
jg
lods
xchg
add
ss
imul
call
jne
les
les
sbb
decl
dec
test
sbb
pop
pop
mov
pop
or
in
inc
jge
jg
xchg
iret
pop
inc
popf
dec
loope
xor
pop
loop
mov
incb
push
movsl
rcr
loop
sbb
dec
adc
xor
xchg
pop
sbb
call
std
insl
adc
fmul
inc
fwait
std
mov
xchg
adc
mov
scas
jne
ljmp
xor
or
int3
jmp
mov
ficomps
mov
jge
mov
and
fs
jg
lods
test
ficoml
mov
add
movsl
popa
and
lds
cli
mov
cmova
cmp
inc
clc
incl
mov
cs
xchg
leave
cmp
and
loopne
xchg
cld
aaa
mov
repnz
mov
mov
lcall
incl
aaa
aaa
aas
mov
out
repz
imul
mov
call
mov
and
mov
adc
daa
clc
dec
fadds
ret
jb
idiv
and
xor
cmpsb
sub
mov
inc
add
jne
cmpsl
xor
fistpl
fsqrt
decl
arpl
add
xlat
mov
stc
mov
in
adc
stos
into
mov
fildll
js
pop
inc
stc
dec
xor
js
int3
je
lret
call
lcall
jmp
lea
addr16
xchg
in
inc
mov
jp
xchg
pop
jo
inc
mov
stc
aaa
push
pop
sub
call
xchg
lahf
daa
lea
xlat
pop
movsb
push
lock
jmp
rolb
stos
sbb
aad
add
idivl
in
mov
loop
cmc
mov
sbb
and
sbb
jmp
xchg
mov
out
loopne
xor
inc
mov
outsl
jl
mov
bound
sub
dec
jg
or
jg
orb
outsb
jne
push
jne,pt
xchg
ret
adc
outsl
lds
pop
mov
mov
ljmp
ret
orb
mov
mov
fcomps
ljmp
cli
mov
in
ja
test
sub
test
repnz
sub
jmp
lds
push
lea
push
rorl
xchg
mov
ljmp
sbb
and
mov
insb
sar
cmp
sbb
mov
call
pop
loop
sub
addr16
lock
push
cmpsb
sbb
pop
loop
stc
push
jl
shll
imul
mov
ljmp
frstor
scas
adc
dec
xchg
fwait
les
sbb
inc
and
inc
int
jo
xchg
sub
push
je
push
ljmp
and
jecxz
jmp
ss
into
mov
shrb
mov
or
lcall
stos
jge
sbb
dec
mov
out
rcrl
lock
fs
inc
inc
mov
push
and
xchg
xchg
xchg
aam
sub
or
dec
push
adc
test
dec
fidivrs
out
mov
les
pop
call
adc
inc
inc
mov
imul
add
mov
gs
jge
inc
ror
ljmp
pop
pop
addr16
subb
xor
loopne
sbb
flds
inc
pop
call
das
ret
into
xchg
add
popl
das
xchg
test
pop
lock
mov
lds
jmp
ret
lds
pop
push
jecxz
adc
adc
daa
sub
std
stos
mov
ja
mov
ret
lahf
mov
lahf
pop
cmp
xchg
mov
mov
push
movsb
movsb
xor
jg
mov
lds
pop
cs
pop
pop
cmc
inc
ljmp
inc
cltd
loopne
mov
pushl
dec
xlat
mov
jno
cli
mov
push
mov
sbb
or
in
xchg
in
ja
sub
jg
call
mov
mov
mov
hlt
push
in
dec
adc
pop
pop
pop
ljmp
add
fnstenv
xchg
add
cli
push
jo
shlb
fldpi
dec
xchg
jno
dec
dec
in
pushf
shl
cmp
inc
lock
fnstenv
mov
sarb
dec
fs
jb
mov
ljmp
icebp
cmp
sahf
dec
fs
cmpb
and
sbb
jae
rcll
mov
lcall
inc
dec
arpl
jnp
addb
mov
sub
mov
mov
jae
push
pop
dec
popa
sub
sar
das
push
addl
push
sti
in
xchg
loop
pop
inc
mov
add
sub
fcoms
lcall
jb
enter
and
ss
xchg
push
incl
pop
jns
push
rcrl
int
jecxz
in
and
cmc
icebp
cld
ljmp
aas
pop
and
push
cmp
add
loope
mov
movsl
mov
repz
lcall
stc
mov
push
icebp
lock
jmp
dec
cmp
mov
call
shrl
inc
push
rcrb
das
push
lret
addb
fwait
shrl
fcos
arpl
movsl
sti
add
mov
pop
out
xor
cwtl
imul
pushf
inc
jecxz
mov
jmp
cli
movsb
pop
jnp
je
test
repz
jp
hlt
das
ljmp
notb
cmpsb
adcl
sbb
into
sbb
pop
lret
out
aam
xor
aas
xchg
push
sub
cmpb
adc
aaa
decl
mov
cmp
rcl
rcrl
aam
mov
movsb
jp
arpl
pop
xchg
mov
xor
sbb
fs
push
xor
add
add
loope
xrelease
add
or
mov
dec
sub
push
arpl
incl
pop
push
jnp
inc
dec
cmc
xor
xor
outsb
xchg
xlat
pop
outsb
insb
arpl
mov
mov
incl
popa
cmp
rcrb
dec
mov
xor
lods
ljmp
ljmp
pop
sub
lock
jge
push
je
sahf
rcrb
inc
mov
fstl
or
push
call
ljmp
mov
mov
movsb
cmp
xchg
jb
sbb
pushf
jo
js
xor
and
add
js
cmpsl
xchg
ss
inc
popa
lret
cmpsb
adc
dec
notl
cmpsl
outsb
cmp
fsub
cld
adc
imul
cmp
das
jbe
jg
int
ss
adc
cltd
and
xor
add
dec
jbe
lea
das
les
out
mov
pushf
xor
lock
sarb
pop
mov
std
sbb
aad
cwtl
nop
es
sub
mov
mov
stos
lret
cmp
imul
lea
or
adc
jg
cmc
pop
in
or
and
fldenv
mov
jbe
inc
cmp
jg
jle
mov
outsl
mov
sbb
cmp
sarb
sarl
mov
inc
xlat
int3
mov
imul
lods
mov
adc
and
testb
scas
or
adc
ja
or
stc
adc
mov
lods
decl
ret
imul
imull
lods
sub
mov
add
push
mov
dec
or
cmpsb
xor
pop
pop
jmp
mov
iret
ljmp
push
mov
repnz
popf
scas
ss
sbb
insb
stos
test
mov
arpl
mov
aam
and
ljmp
decl
sbb
addr16
inc
and
ja
push
push
push
pop
cmc
xchg
scas
cmp
mul
incl
inc
sahf
test
cmc
jp
or
fistpl
add
cld
dec
test
push
cmp
push
jp
push
xchg
dec
jns
push
test
lock
jbe
imul
inc
loop
mov
and
les
mov
ret
or
push
hlt
cs
loopne
data16
mov
xor
out
adc
outsl
xor
xorl
push
ret
add
incl
xor
xor
dec
ljmp
mov
inc
div
cld
or
std
mov
and
arpl
cld
jmp
xchg
scas
jno
fdiv
xor
inc
out
pop
sar
test
popl
adc
movsb
xchg
push
lahf
popf
lods
xor
push
les
incl
and
lahf
pusha
pop
aad
adc
push
jmp
or
negl
in
idiv
mov
push
jno
adc
push
mov
and
jp
mov
dec
jmp
or
lock
lret
mov
bound
ljmp
stos
and
xor
sbb
cmp
xlat
push
pop
sub
fbld
xchg
call
call
or
push
push
shrb
or
call
lea
push
and
shlb
stos
notb
int
iret
pop
std
pushf
ret
pushl
sub
mov
inc
lcall
xor
add
lods
dec
sar
push
mov
mov
stos
lods
cmp
mov
cmp
mov
pusha
push
mov
dec
aas
xchg
repz
pop
rol
loopne
fnstenv
aad
outsb
or
decl
xor
fbstp
bound
sbb
fdivrl
lret
fisttps
pushl
jb
aam
out
sbb
orl
xorps
cmc
sub
dec
ljmp
icebp
fucomip
fbld
dec
mov
bswap
mov
jbe
cmp
movsl
xchg
cltd
ljmp
fwait
outsl
repz
in
outsb
mov
push
mov
pop
xlat
stos
adc
lock
jns
push
mov
pop
iret
js
mov
pop
dec
cmc
push
out
push
sbb
test
pushf
mov
mov
std
inc
mov
pop
pop
inc
data16
shll
xor
mov
clc
lcall
mov
in
sbb
popa
test
mov
jmp
sbb
test
popf
ficomps
adc
add
or
mov
ljmp
scas
sbb
movsb
push
inc
adc
adc
push
rorb
subb
inc
pop
movsl
jbe
jne
pop
pop
jbe
and
dec
loope
mov
incl
ljmp
fsubp
divl
push
push
jmp
sbb
ljmp
insb
pop
aas
lock
js
mov
pop
movl
mov
popf
jg
sbb
mulb
cltd
adc
ret
aam
enter
ud1
xchg
jmp
gs
loop
int3
ret
sub
push
lcall
inc
or
fiaddl
pop
mov
out
jg
mov
testl
js
je
inc
sub
xchg
mov
ud0
xchg
clc
daa
in
daa
cmp
or
les
pop
repnz
int3
ja
fidivl
push
out
popa
in
jne
adc
insb
icebp
inc
test
add
mov
dec
adc
lods
mov
je
push
jmp
in
add
pop
loopne
imulb
inc
inc
and
mov
subl
ret
incl
inc
mov
jmp
jge
jb
and
test
pop
sahf
aas
enter
jg
jg
pop
jne
lret
nop
xor
mov
pop
sahf
xchg
jbe
pop
sub
add
xor
cld
lcall
inc
mov
mov
dec
ds
decl
cmp
or
pop
xchg
mov
test
inc
mov
rcrl
sbb
push
in
pusha
or
sub
fs
loop
cmpsb
xor
pop
aaa
popa
pop
mov
mov
push
adc
xor
sti
mov
ljmp
cld
mov
add
mov
sub
xor
pop
or
or
cmc
xor
cmc
or
pushl
imul
xchg
pop
jne
mov
rorb
mov
lock
xchg
shrb
cltd
sbb
lock
shlb
fcomps
mov
jg
mov
lahf
arpl
in
insl
mov
pop
add
cmpsl
out
leave
aam
xchg
dec
mov
repz
fsubrl
mov
push
decl
inc
pop
cmpb
rclb
fisubs
and
out
jbe
mov
push
pop
push
push
xor
jecxz
insb
out
dec
orl
movsl
xor
decl
mov
add
sub
sub
ja
insl
mov
xlat
mov
xchg
cmpl
pop
xor
xor
lretw
lea
jbe
xchg
loop
imul
shll
push
arpl
rorb
daa
sbb
xchg
ljmp
out
cmp
push
sarb
ljmp
mov
fldenv
dec
scas
rcrl
ljmp
push
mov
mov
int3
ret
xchg
ljmp
pop
std
in
dec
stc
in
ja
add
or
movsb
lds
adc
xchg
pushl
xchg
mov
push
jb
clc
fsubrs
mov
movl
jmp
cld
into
sbb
sub
es
cmp
imul
pushl
mov
sbb
dec
rol
in
lds
push
test
mov
add
cmp
cld
imul
jmp
jnp
data16
inc
sbb
add
lock
mov
addl
push
shl
mov
cmp
mov
call
pusha
test
adc
push
sti
sti
cmpsl
shr
or
lcall
movsl
push
add
push
or
mov
lahf
inc
or
ljmp
mov
jae
aad
add
and
sbb
data16
cmp
fcomi
xor
jp
fistl
mov
mov
not
js
inc
mov
xadd
int
mov
xchg
jle
push
push
jg
push
and
sub
rorb
xchg
ljmp
loope
cmpb
xchg
in
cld
les
xchg
cmpsl
mov
jg
dec
fldt
fisubs
subb
rcrb
insb
xorb
sbb
stos
clc
fbld
jl
mov
or
dec
adc
aad
sbb
std
pushl
push
add
xlat
jecxz
popa
pop
dec
fstpt
dec
jge
imul
cltd
lcall
das
inc
and
inc
xchg
ja
xor
loop
sub
sarb
mov
jge
inc
arpl
test
cld
jg
mov
cld
and
movsb
mov
xor
jg
dec
ds
jmp
fnsave
lock
stos
pop
cmc
sti
inc
test
dec
or
shl
xlat
pop
std
ljmp
push
std
ljmp
call
packssdw
or
sbb
lret
std
push
or
inc
inc
test
mov
push
fsubrs
aaa
inc
ljmp
movsl
lret
inc
inc
push
pop
mov
adc
add
xlat
xchg
in
push
xor
mov
shll
mov
add
ljmp
push
dec
ret
dec
xchg
cmp
cmc
std
pop
jns
mov
test
jmp
clc
sarb
pusha
mov
idivl
fiadds
cwtl
or
and
ljmp
repnz
pop
pop
cmp
movl
pop
std
call
pop
or
in
adc
jmp
addr16
xor
pop
jmp
orb
add
fbstp
push
jno
sub
inc
lds
and
jnp
fisubrs
sbb
cmp
ljmp
iret
pop
std
call
or
lret
dec
mov
or
int
imul
mov
call
add
and
and
dec
sbb
loope
mov
lcall
enter
lea
xchg
fwait
xchg
cli
std
test
adc
call
dec
leave
mov
inc
mov
push
inc
pop
repz
push
jl
sahf
push
inc
lcall
incl
pop
push
int3
arpl
push
popf
pop
and
push
pop
or
cmp
mov
out
and
aas
push
fwait
jo
xor
jg
ljmp
bound
xor
roll
hlt
in
cld
jmp
mov
xchg
xor
outsb
dec
das
and
push
imull
cmp
test
pop
mov
addr16
clc
inc
repz
inc
adc
add
das
dec
std
jmp
ja
int3
sub
mov
push
jae
dec
dec
fisubrs
call
call
test
das
xchg
mov
fs
pushl
xchg
xchg
inc
ret
leave
in
popa
xchg
repnz
cld
outsl
pop
sti
in
mov
sahf
xchg
fwait
inc
ror
cmp
ljmp
hlt
stc
xor
cmp
rcrb
add
adc
lcall
std
push
adcb
fimuls
clc
mov
or
add
call
pop
jmp
push
dec
mov
popf
pop
test
loop
hlt
jg
stos
inc
bound
xor
test
enter
add
ret
insl
cmp
jb
out
cltd
repnz
cmc
dec
fadds
push
mov
mov
or
inc
inc
mov
loop
outsl
insb
cmpsb
pop
jmp
int
xor
pop
loope
lret
add
inc
hlt
ret
ret
or
dec
decl
jmp
add
sub
push
pop
idivl
ljmp
mov
lock
or
push
sbb
aaa
clc
mov
call
dec
mov
mov
mov
mov
icebp
fucomip
push
insb
dec
negl
mov
mov
movsb
adc
inc
or
movsl
repz
dec
stc
jle
stc
add
push
repz
or
adc
mov
subl
test
testb
pop
or
pop
jb
leave
cmpsl
and
ljmp
pop
adc
push
outsb
or
je
mov
xor
jne
lods
pop
repnz
lds
jl
mov
cwtl
sahf
popf
ljmp
cmc
incl
stc
adc
pop
pop
and
sbb
aad
push
ficoml
out
jp
dec
stos
push
inc
lods
dec
jge
add
and
std
test
mov
or
jns
inc
sub
xor
test
jmp
imull
cli
mov
mov
lret
sub
aaa
xchg
or
xchg
sbb
lcall
push
cli
aas
ss
push
insb
jnp
and
push
outsb
dec
clc
sub
mov
dec
ljmp
scas
mov
scas
loop
lds
add
sub
mull
mov
rclb
imul
movsl
xchg
aaa
sub
sbb
xchg
mov
xchg
in
dec
dec
adc
xchg
adc
test
pop
lods
aad
push
ds
mov
popl
jnp
jl
add
pop
dec
xchg
loopne
das
xchg
std
lcall
inc
sbb
pop
sub
aam
dec
push
mov
inc
adcl
xchg
cmpsl
pop
push
adc
cltd
fsubp
decl
lret
xchg
xchg
mov
lods
inc
pop
add
incl
data16
lret
cltd
imul
sub
dec
repnz
bound
lcall
outsl
and
std
mov
imul
fstpt
inc
mov
mov
ret
adc
adc
add
pushl
xchg
cmc
sbb
or
push
or
add
jmp
inc
mov
incl
and
call
stos
cmp
mov
mov
push
or
cwtl
push
out
sbb
arpl
fnstenv
xchg
mov
decb
or
in
lcall
sbb
jae
inc
xor
cli
daa
dec
test
cld
lds
iret
loope
mov
push
call
arpl
xchg
or
mov
mov
sar
mov
fwait
inc
dec
ret
sub
mov
mov
sub
in
or
inc
push
fwait
mov
mov
pop
sti
lods
cmpsl
cmc
pushf
imul
pop
pop
pop
push
rcll
in
jle
push
sbb
clc
adc
mov
subl
mov
jg
mov
lods
and
jl
bound
jno
pop
mov
xchg
insl
dec
push
cwtl
and
leavew
mov
jecxz
jg
aas
add
imul
fnstsw
leave
xchg
cli
test
arpl
jne
push
mov
jg
mov
bound
mov
aad
push
dec
push
dec
int3
jmp
enter
jg
push
aaa
ss
xor
and
adc
add
pushf
pop
cmpsl
lcall
decl
adc
mov
adc
jg
jbe
stos
xor
dec
cmp
jg
into
es
sbb
add
push
adc
sbb
sbb
xchg
dec
and
fimull
mov
xlat
adc
jge
push
mov
ret
mov
call
xor
dec
fs
jmp
or
and
cmc
or
dec
mov
stos
dec
xor
das
lock
or
xor
add
add
jmp
cmpb
mov
scas
lcall
cld
das
sub
dec
orb
mov
jno
insb
xchg
jg
test
adc
mov
or
jg
ljmp
xchg
arpl
iret
push
in
dec
adc
shrl
jecxz
test
ret
lds
adc
add
daa
or
dec
jl
in
orb
and
xchg
dec
mov
lock
mov
fidivrs
mov
pop
clc
jg
adcb
push
xlat
push
mov
inc
repz
xchg
dec
shrb
mov
outsl
icebp
sti
fcoml
and
fldt
cmpsl
inc
and
mov
inc
call
movsl
aaa
cli
aaa
iret
jns
jp
cmp
xlat
repz
xchg
insb
pop
pushl
pop
mov
lock
jp
inc
cmpsb
cmc
push
push
jns
cmp
xchg
mov
incl
std
std
xchg
lcall
aas
cmp
jg
jmp
repnz
fcos
das
inc
push
jne
sbb
in
xchg
push
pushl
inc
insl
xor
jp
sbb
cmpsl
jne
push
jo
test
shrb
incl
xchg
imul
js
xchg
or
jg
sub
adc
daa
daa
mov
xchg
xchg
sbb
aam
adc
fldt
add
push
gs
icebp
imul
filds
call
lret
jbe
add
lods
insl
test
incl
call
mov
xchg
in
xchg
jge
cli
mov
sbb
mov
add
pop
loopne
xchg
pop
stos
xchg
jae
hlt
xchg
lea
sub
lods
mov
mov
jl
out
lret
mov
into
add
xlat
mov
sbb
mov
and
shlb
in
mov
loopne
dec
nop
dec
dec
ljmp
xchg
dec
dec
enter
jg
cmp
dec
and
dec
popa
push
lcall
cld
pinsrw
outsb
xor
ficoml
jl
daa
pop
cld
cmp
jbe
je
insl
movsb
dec
ja
mov
or
mov
stos
sbb
shl
xchg
jne
xchg
mov
push
call
mov
jg
adc
sub
mov
ds
xorb
adc
mov
shrb
rol
jmp
or
mov
sbbb
xor
jl
push
push
xlat
in
lock
push
mov
ret
and
sbb
inc
mov
xchg
aam
into
sarb
xor
jecxz
add
push
ljmp
push
push
scas
pushf
ret
mov
jno
aam
mov
test
incb
shl
shlb
lcall
cmp
push
call
data16
scas
jp
adc
sbb
je
sbb
fildll
pop
ret
cmp
add
and
hlt
repz
mov
cmpsl
lret
rorl
sub
or
adc
mov
psubsw
sbb
mov
dec
pop
or
pop
or
pop
dec
mov
jmp
cmp
imul
mov
rsqrtps
push
mov
xchg
mov
decl
mov
push
pop
inc
test
iret
cmp
mov
push
push
call
cmpsl
loopne
inc
shrl
mov
aam
in
mov
rcr
cmp
pop
inc
sub
xchg
inc
mov
testb
mov
sub
pop
movsl
mov
xchg
test
xchg
mov
sbb
cmp
push
in
popa
fdivrl
xchg
xchg
ret
and
hlt
or
ljmp
bound
hlt
push
dec
cmp
mov
call
outsb
xor
xchg
into
add
cltd
add
jle
xor
movsb
pop
jae
aaa
dec
sbb
in
sbb
or
cld
jg
sbb
sbb
cmp
mov
imul
jge
sbb
enter
xor
fldenv
popf
in
add
xchg
xor
sbb
jp
lcall
mov
lock
addr16
jecxz
popa
jbe
add
lret
sbb
mov
pop
add
dec
fnsave
jmp
cmp
or
ret
lea
les
decl
jg
cmp
inc
sbb
out
xor
into
mov
xor
pextrw
insb
sub
popf
lahf
sub
cmp
adc
jb
test
xchg
jns
in
push
xchg
call
and
scas
adc
dec
pop
mov
push
xor
dec
hlt
jo
cltd
adc
dec
inc
cld
pushl
decb
xchg
rcl
jl
popaw
mov
aaa
cs
mov
stc
call
push
jg
pop
adc
push
dec
inc
enter
fldt
xchg
cs
or
or
call
mov
sbb
test
xchg
clc
outsl
sarl
int3
push
push
cmpl
mov
or
popf
add
sbb
and
out
and
fwait
stc
xchg
imul
arpl
jg
lret
sub
ljmp
mov
mov
out
pop
jecxz
in
movsb
xor
ljmp
negl
dec
faddl
xchg
push
pop
xchg
jb
lods
mov
subb
lahf
push
jb
aad
loope
clc
test
add
popf
sbb
inc
sub
add
cmp
adc
test
cld
push
aad
or
call
loopne
fmuls
mov
add
aaa
movsb
lods
jl
xor
sub
mov
jmp
aam
dec
orb
aas
push
orl
repz
add
jge
mov
mov
jbe
sbb
dec
jle
decl
pushl
leave
adc
movsl
into
aad
test
mov
xor
or
cli
ljmp
inc
and
idiv
movsb
adc
test
pop
leave
mov
pop
into
scas
mov
lret
jl
add
out
cld
push
test
pushw
les
js
insb
js
cli
int3
sbb
jge
insb
jp
scas
gs
decl
daa
fnstenv
stos
sbb
push
mov
xor
insl
inc
push
sub
insl
cmovne
jbe
pop
loopne
or
sbb
divb
push
daa
idivb
pop
and
xchg
clc
lcall
cmpb
insb
jmp
test
pusha
gs
cmp
xchg
cmpsl
cld
and
hlt
cmp
pop
lret
push
gs
es
pop
ret
sti
xlat
dec
cmp
pop
inc
lcall
idivl
cltd
mov
mov
and
or
xchg
divb
pushl
xor
cmp
jmp
test
pop
outsl
mov
mov
dec
adcb
xchg
xor
xchg
adc
mov
lock
in
loope
test
lds
sbb
jle
int
inc
lret
sub
sti
xor
nop
call
mov
mov
and
fldcw
mov
adc
cmp
push
test
pushl
lcall
lahf
sti
sub
loopne
push
push
mov
call
lahf
jo
out
movsb
fldenv
scas
add
mov
cmp
sub
and
xchg
mov
ljmp
inc
jnp
fcomp
imul
loop
insl
xor
cli
incl
adcb
push
dec
sbb
repnz
loopne
xchg
pop
mov
shlb
pushf
mov
loop
loopne
pop
add
ljmp
cmpsb
adc
inc
xchg
adc
inc
sbb
das
hlt
aas
addl
cli
inc
lret
faddl
pushl
push
fwait
cmp
add
xor
inc
outsl
push
out
mov
pop
je
icebp
cmp
jg
decl
adc
ljmp
not
or
clc
call
xorl
cli
cmpsb
cmp
pop
lods
sub
fidivs
fisubrs
std
pushl
mov
clc
dec
ret
push
imul
pop
xchg
dec
testb
and
outsl
pop
mov
add
and
cs
mov
jecxz
fnstenv
cmp
nop
incl
js
lret
mov
mov
xchg
xlat
int
lcall
call
pop
roll
pop
xorl
mov
ljmp
inc
push
fisttpl
gs
mov
and
adc
movsl
cs
ljmp
ffree
push
subl
in
mov
lret
movq
mov
push
cwtl
imulb
jmp
repnz
push
and
shr
mov
bound
bound
xchg
test
add
add
sbb
inc
and
fucomip
ret
xchg
fwait
and
inc
jmp
add
mov
ja
in
or
out
sti
imul
jno
fcoms
mov
push
cli
mov
mov
pop
nop
fucomi
hlt
mov
int
or
mov
push
icebp
inc
adc
fsubrp
sbb
mov
out
mov
shll
repz
out
jl
out
popl
mov
xor
out
ljmp
std
jg
js
mov
mov
xchg
adc
add
ljmp
xchg
mov
jbe
iret
call
adc
inc
mov
loope
mov
wbinvd
dec
add
out
jle
pop
stc
add
pop
int
pop
cld
push
xor
push
std
call
sbb
out
gs
xor
or
cmpsb
scas
scas
stc
adc
pushl
data16
gs
cmc
jmp
push
lods
cmp
out
enter
iret
pusha
lea
cld
cld
sub
dec
adc
dec
outsl
imul
mov
push
adcl
push
add
lcall
in
in
pop
decl
std
cmp
push
mov
mov
fstl
sbb
and
push
mov
fstl
movsb
mov
test
aad
sbb
cmc
call
push
pop
pop
inc
mov
ss
push
nop
sbb
xor
fdivrp
ret
in
sub
or
shrb
movsl
xor
cmp
pop
inc
hlt
incl
mov
or
push
call
ljmp
dec
addl
outsb
fdivrs
stos
sbb
pop
faddl
mov
nop
filds
xchg
ljmp
aas
call
ljmp
push
cmp
xor
adc
inc
aam
inc
dec
and
in
das
cmp
jae
aam
pop
sti
mov
roll
and
fucomip
ljmp
pop
incl
add
call
inc
arpl
mov
movsl
dec
mov
lock
xor
repnz
push
sub
fsubrl
or
lock
out
ja
or
adc
movsl
xchg
adc
mov
dec
or
aas
loop
out
faddl
inc
mov
ds
enter
insb
mov
arpl
test
imul
xchg
cwtl
les
jg
lcall
int3
aam
xorl
out
mov
cmp
ret
sahf
int
imul
jae
flds
loop
xchg
jno
aaa
clc
decl
out
bound
cmp
sti
js
xor
and
mov
sbb
shlb
xor
cwtl
addl
mov
movsb
pop
in
in
repnz
mov
xor
mov
int3
pop
lcall
popa
push
mov
or
mov
cmc
scas
xchg
addr16
pop
cmp
decl
leave
dec
cmp
inc
mov
stos
test
mov
lahf
jb
or
ss
testb
notl
int3
jg
pop
sbb
pop
incl
movl
and
lcall
mov
dec
pop
jmp
dec
jp
cmpl
jg
lret
cwtl
lret
cmp
pop
sbb
in
dec
mov
jne
or
ljmp
out
loope
arpl
mov
adc
inc
call
mulb
mov
outsl
pop
test
pop
sub
or
pusha
stos
pop
cmp
xor
incl
insl
inc
add
aam
inc
cli
pop
cld
add
pop
lods
adc
incb
mov
ljmp
inc
rcr
dec
push
push
cmp
ja
ret
loop
sbb
das
and
outsl
jle
mov
rorb
out
mov
fucomip
pop
outsb
scas
lcall
dec
imul
popf
fidivs
movsb
in
fs
jmp
add
jp
inc
sub
enter
pop
repz
pushl
lock
aam
filds
dec
cs
push
xchg
stos
data16
jle
decl
or
lds
mov
popf
repz
mov
and
jb
mov
hlt
enter
movsb
fs
lods
xor
mov
dec
mov
pushl
xor
mov
adc
adc
xor
xchg
fld
mov
sbb
lcall
adcl
lea
mov
stc
es
int
sti
shrl
das
push
push
jle
sbb
rolb
fildll
leave
inc
ret
mov
xor
mov
stos
mov
pop
jg
dec
out
xor
aas
pop
iret
movsl
mov
movl
lcall
adc
xor
roll
xor
fsts
or
outsl
hlt
pushl
cmp
jge
loop
inc
fbstp
jg
hlt
pusha
dec
adc
push
decl
add
cmp
cld
fildll
or
data16
cltd
je
sbb
ljmp
in
sahf
inc
mov
inc
push
adc
push
mov
mov
aaa
clc
incl
pop
jmp
xor
sbb
add
xchg
cmp
mov
hlt
pushl
addr16
push
shlb
jb
fs
and
ret
sub
inc
mov
outsl
sbbl
push
mov
jns
setnp
addr16
push
xor
ja
out
add
daa
cmp
sar
incl
sbb
rol
loope
mov
push
loopne
rcrl
ds
orb
adc
xchg
sar
mov
xor
push
or
inc
jne
cltd
pop
xchg
mov
fwait
mov
jp
xor
mov
mov
adc
cld
jg
into
dec
and
mov
or
shl
xor
ljmp
cmpsb
or
das
fdivrp
cwtl
popf
fs
or
sub
adc
pop
mov
pushl
sahf
or
xlat
xchg
lea
adc
fs
incl
mov
mov
dec
pusha
cmc
dec
and
das
out
push
scas
xor
xchg
je
ds
pop
cmp
dec
cmc
jg
adcb
loop
sbb
dec
popf
loopne
mov
ljmp
mov
imul
icebp
mov
pushl
jge
xchg
popf
pusha
cmpsb
mov
or
jg
ds
inc
add
repz
xor
ljmp
mov
xchg
cli
cmp
mov
fs
mov
std
pop
push
call
outsb
jbe
inc
and
pop
push
mov
add
ljmp
enter
lock
push
in
aad
loop
decl
dec
or
xor
xchg
int
loope
ljmp
jg
jmp
cwtl
push
int3
push
push
js
cmpsl
cmc
xchg
xor
cltd
jmp
incl
rorl
aaa
mov
xor
lcall
loop
inc
xor
xadd
xchg
push
mov
jnp
hlt
aam
cmp
xor
ficompl
sti
xchg
adc
inc
lods
and
fidivl
pusha
jnp
pushl
imull
dec
jmp
out
cltd
imul
fs
jo
mov
decl
dec
sahf
addl
pop
pop
xchg
lods
imul
rol
add
mov
inc
sub
hlt
loop
lock
mov
jb
daa
dec
mov
popa
mov
ja
ret
pop
call
mov
adc
lret
inc
jg
sub
leave
clc
xor
xor
dec
insb
sbb
shlb
dec
inc
lock
inc
inc
in
mov
jo
stc
or
pushl
lret
sub
fcoms
mov
into
cmp
inc
add
push
push
test
pushl
jle
jnp
mov
adc
jmp
pop
call
ss
mov
out
xchg
inc
xchg
jle
cmpsb
inc
add
mov
movsl
push
inc
or
dec
xchg
sbb
insl
push
jae
and
inc
add
fadds
pop
loope
fcoms
mov
pop
mov
decl
xor
cmp
mov
xor
mulb
push
stos
pop
or
fildll
jecxz
stos
inc
mov
and
lcall
add
scas
push
shl
fadd
add
icebp
adc
sub
adc
xchg
lcall
call
cmpsl
inc
hlt
mov
call
loopne
cmp
test
lea
call
cli
call
stos
and
fsubrl
sahf
in
push
dec
in
pop
dec
cs
and
aaa
cltd
xchg
mov
xchg
aad
clc
dec
xchg
xchg
addr16
jg
clc
into
fldl
arpl
icebp
push
shl
ret
sub
pop
mov
jle
cmp
add
sahf
neg
addb
sub
in
dec
mov
dec
jae
jg
mov
mov
imul
dec
mov
mov
rclb
push
pop
push
mov
xor
fmulp
in
inc
inc
nop
sahf
mov
cmc
incl
aas
push
jecxz
or
fdivrs
adc
and
iret
jo
sub
mov
add
loopne
xchg
sbb
andl
movsl
lods
add
das
mov
cmpsb
xor
mov
push
mov
push
sub
jecxz
rcll
addl
lods
mov
stc
mov
fmuls
sbb
and
or
or
push
pushl
sbb
mov
testb
pop
mov
sbb
call
jmp
jge
cmp
mov
and
xor
mov
pop
sarb
popf
ljmp
mov
push
roll
sbb
xchg
scas
pusha
ljmp
js
les
jl
fiadds
dec
or
mov
lret
pop
and
sbb
test
adc
jge
mov
push
cmp
lcall
gs
cli
inc
out
stc
lret
pop
mov
cmc
jno
dec
add
sbb
jo
cmp
sbb
jo
call
js
jbe
popl
imul
jb
repz
dec
lahf
iret
adc
test
dec
lods
or
mov
mov
cmp
loopne
cmpsl
xchg
mov
lea
push
les
stos
mov
mov
shlb
push
mov
aam
aaa
test
cld
jbe,pn
and
mov
imul
jg
cli
sub
xchg
cmc
stos
les
cmp
gs
add
inc
hlt
call
pop
dec
enter
xor
fsubrs
cmpsl
adc
dec
icebp
pop
cld
or
mov
push
mov
ljmp
fwait
or
jno
sbb
sbb
cli
sarb
cmp
inc
out
cwtl
sub
ljmp
fbstp
cmc
int3
cld
inc
fdivl
rcr
stos
mov
mov
std
push
inc
fstp
pop
fdivr
pop
rclb
mov
inc
ror
xor
mov
adc
mov
icebp
jnp
fisubs
out
stos
jecxz
mov
and
ljmp
popf
fnstenv
testl
test
push
mov
jmp
dec
cmpl
adcl
lods
lret
pushf
rcrl
inc
lock
decl
adc
lods
push
mov
stos
outsl
or
or
cmpxchg
sbb
mov
je
adc
jnp
xchg
iret
icebp
adc
cmpsb
jae
jge
jg
jle
inc
xchg
je
movsb
push
sub
insb
cmp
ss
fsubr
mov
pop
and
icebp
adc
adc
xchg
dec
pop
outsl
lock
in
jae
mov
fistl
xchg
push
mov
ljmp
lock
mov
ja
add
xchg
dec
popa
in
call
jle
rolb
jg
add
out
add
push
cmp
xchg
out
or
pushl
clc
inc
imul
into
cli
sbb
mov
mov
cmp
mov
xchg
movsl
fdivrl
sbb
jb
inc
sub
or
mov
sub
leave
popf
adc
stos
pop
pop
mov
incl
iret
dec
inc
in
inc
cmp
push
ret
mov
cs
sarl
stos
shl
call
xchg
mov
test
mov
sub
fidivl
or
mov
cmp
pop
mov
fwait
cmp
ljmp
jle
sbb
or
divb
or
test
mov
test
call
sub
lcall
leave
add
orps
xor
lods
out
or
mov
cltd
rcl
or
into
cltd
adc
add
jge
inc
cs
call
or
mov
dec
or
mov
jge
mov
sti
pushl
outsl
mov
sub
jmp
cmp
lock
inc
pushl
cmp
push
aas
ret
inc
push
fidivs
aam
jae
repnz
test
pop
add
call
es
imul
cmc
insb
cmpsb
and
dec
push
pop
and
add
mov
test
push
jbe
pushl
aad
push
jae
add
ljmp
pop
push
jo
adc
push
lahf
xor
xlat
mov
out
and
sbb
pop
add
fists
iret
xchg
das
mov
mov
call
lea
test
jne
sub
xchg
lock
sbb
pop
ret
jb
xor
mov
pop
dec
das
lock
jl
adc
and
mov
ljmp
or
add
andl
outsl
jp
pop
cmc
popa
lret
incl
mov
adc
cs
out
or
cli
push
js
aaa
arpl
outsl
lock
or
sub
mov
arpl
xor
lea
add
mov
lahf
sub
mov
les
lahf
shrb
add
mov
pop
xor
mov
js
aaa
ror
jb
dec
jbe
mov
fildll
pop
jae
sub
ret
test
cli
jnp
incl
decl
mov
cmp
jb
data16
or
rcr
push
icebp
js
cmp
pushl
push
mov
mov
dec
rclb
repz
pushl
and
xor
pop
repnz
sub
jbe
dec
pushf
push
into
pop
popf
scas
cs
cmp
inc
lcall
cld
cmp
pop
lods
pop
mov
dec
stc
push
push
add
xor
cld
push
or
cli
inc
sti
add
int
imul
xchg
push
clts
arpl
ljmp
pop
adc
insb
pop
mov
adc
sub
decl
insl
enter
mov
jle
mov
clc
inc
mov
rcll
inc
lret
shll
mov
push
jg
sub
pop
aas
js
jae
push
daa
add
ljmp
call
xchg
inc
int3
insb
sahf
cmp
int3
inc
mov
lcall
insb
das
loope
movsb
push
dec
loope
test
gs
xor
popa
inc
dec
mov
mov
pop
scas
xor
and
pop
jmp
repnz
inc
mov
jg
int
in
inc
stos
in
dec
jge
sub
cli
std
dec
out
aam
or
decl
cld
pushl
jne,pt
test
mov
push
scas
fs
scas
pop
push
fimuls
adc
mov
jl
mov
nop
dec
je
pop
clc
sbb
nop
cltd
scas
add
jne
mov
xor
xorl
clc
pushl
mov
pop
fwait
ljmp
jge
sbb
in
adc
orl
inc
mov
fsubl
cmp
stc
lahf
jp
push
cs
sar
pushl
push
sub
pop
jnp
stc
dec
inc
push
sub
in
sub
inc
popf
call
xchg
pop
add
shrb
enter
push
sbb
dec
aaa
cli
push
lcall
fidivrl
or
push
das
lock
pushl
push
je
repz
pop
orb
stc
and
push
dec
ds
lcall
std
xor
push
inc
rcl
int
pusha
push
mov
pop
push
cmp
std
cltd
fdivrp
pop
addb
ror
mov
insl
jge
ud0
lcall
adc
addr16
loope
gs
enter
dec
outsb
sub
pop
inc
std
jmp
or
pusha
fsts
push
lock
dec
lahf
push
cmp
incl
mov
ret
mov
sbb
rcrl
push
les
fdivr
jg
jmp
stc
gs
fwait
sub
repz
push
stos
and
dec
or
mov
adc
xchg
inc
push
push
add
punpcklwd
pop
call
mov
adc
push
lret
lods
inc
sbb
pop
ljmp
enter
xchg
cmp
xchg
xlat
push
pop
and
adc
mov
sti
xor
xlat
jl
outsl
in
mov
mov
mov
js
jo
jne
sbbl
lock
cmp
test
pushl
pop
jg
or
cmp
mov
outsl
cmpsb
daa
sub
hlt
adc
mov
pop
pop
xor
jp
sbb
cmp
shrb
loop
xchg
and
or
negb
int3
sbb
jmp
fdivr
fucomip
jmp
xor
imul
in
mov
jecxz
stos
or
or
pop
mov
dec
dec
sub
filds
ss
cld
dec
xchg
sbb
rorb
mov
mov
call
xor
stos
push
xlat
mov
mov
fistl
xor
push
sbb
icebp
aam
cltd
out
mov
inc
adcl
xchg
dec
xor
ror
cmp
pushl
rcr
adc
movsl
dec
push
out
mov
cmpsb
jecxz
mov
mov
pushf
or
addr16
xchg
ja
cmp
xor
scas
dec
xor
les
adcb
insb
and
loop
push
int
inc
sbb
mov
mov
xchg
out
pop
ljmp
add
pop
cli
push
mov
push
mov
enter
push
xchg
push
scas
pushf
mov
mov
imul
or
sti
inc
mov
cli
out
mov
lds
or
mull
loope
mov
ljmp
lods
push
fadds
dec
jo
fstpt
push
mov
fwait
hlt
mov
adc
loopne
inc
mov
jl
jmp
sti
lods
mov
mov
dec
adc
cmc
cs
fcoml
jmp
js
push
pop
pushf
xlat
nop
lcall
std
fistps
mov
aaa
hlt
repz
insb
jne
cli
ljmp
pusha
mov
add
fmuls
add
sub
xchg
cli
das
je
push
adc
cmpsb
adc
push
or
pop
fbld
jmp
jecxz
jp
lret
mov
cli
das
cmc
jmp
aad
testb
imul
pushf
ja
aas
mov
idiv
test
inc
cmp
adc
sbb
add
jo
sbb
pop
cld
mov
mov
and
jae
mov
jmp
sub
cmp
mov
fs
add
rcrl
xchg
add
mov
adc
jmp
movsl
adc
hlt
test
daa
outsb
add
pop
ljmp
sub
mov
xchg
sti
call
cli
jge
xchg
mov
jcxz
add
jmp
lock
es
xchg
or
cli
decl
jne
dec
outsb
loopne
jp
clc
lahf
inc
mov
pusha
mov
out
out
pushf
jbe
decl
sbb
dec
mov
rorl
incl
dec
mov
cmc
inc
in
out
and
dec
std
mov
jne
pop
xor
mov
push
aam
mov
cmp
mov
or
xor
int
hlt
and
push
pop
cli
loopne
ljmp
movsl
es
xchg
cli
lret
jno
and
in
in
pushf
sahf
xor
mov
punpcklbw
ret
call
add
movsb
sahf
mov
mov
adc
in
repz
rcr
sub
mov
dec
stos
jg
and
jl
and
xor
sahf
inc
fisttpll
sarb
lret
and
ljmp
pop
sub
popf
stos
cmp
xlat
xchg
or
ljmp
and
int3
pop
jge
emms
cmpsl
push
mov
aas
fdivrp
mov
xchg
iret
in
aaa
jle
pop
jno
sub
fnsave
ljmp
std
mov
lcall
add
adc
test
jle
lcall
mov
int
ror
mov
jmp
in
test
cmp
push
ds
std
mov
pop
push
out
jmp
jno
cmp
lahf
jg
sbb
mov
mov
adc
bound
xchg
clc
ljmp
lret
adc
stc
notl
fucomi
inc
mov
test
or
fninit
lock
jp
out
rclb
xor
jmp
pop
cmpsb
pushl
mov
stos
push
test
mov
out
jae
cmpsb
ds
lock
sbb
jmp
xor
or
cmp
lock
lcall
dec
xchg
mov
ret
mov
notl
in
adc
xchg
inc
mov
mov
sbb
mov
and
fists
fisubs
mov
leave
dec
push
or
incl
mov
push
push
sarb
mov
xor
jg
pop
push
pop
pop
cs
push
ja
and
cmp
sub
pop
call
loopne
fbld
dec
push
xchg
test
movsl
iret
shlb
lahf
fnstenv
mov
mov
adc
mov
sbb
lcall
xchg
aad
mov
movsl
mov
jg
sbbb
aaa
sti
loop
movsb
and
lret
sub
sub
sub
in
loop
add
lods
mov
mov
fs
jg
jp
incl
dec
js
jecxz
pop
and
sarb
sar
and
push
lret
cmpl
sar
sahf
sbb
imul
dec
jg
ljmp
xor
xchg
sub
mov
divb
loop
into
out
outsl
sub
adc
inc
mov
maskmovq
idivl
adc
sbbb
repz
das
outsb
push
andl
xlat
adc
add
adcb
mov
mov
dec
push
aas
pop
sbb
mov
ljmp
mov
fs
and
dec
jmp
or
or
fdivr
das
lock
push
idivl
xor
inc
jge
clc
pop
cmpsb
call
mov
mov
popa
sub
lret
xchg
pop
fneni(8087
cmp
aam
ret
pop
das
icebp
movsl
fisubrs
aaa
dec
cmc
push
js
push
ja
pushl
push
adc
xlat
int
shrb
imul
outsb
shl
fs
and
sub
clc
incl
jmp
stos
pop
jmp
sbb
and
bound
push
inc
xor
sbb
bound
jmp
cld
jl
jmp
xchg
cmp
lea
decl
xlat
insb
mov
repnz
outsb
sarb
inc
mov
sbb
mov
out
sbb
jg
push
add
adc
cmp
stc
xchg
shlb
or
das
mov
inc
inc
jge
lcall
pushl
dec
shr
jne
push
imull
mov
lret
outsb
decl
lcall
enter
pop
js
push
mov
mov
and
jmp
push
add
and
add
sub
out
lods
push
xchg
push
push
dec
or
movsl
loop
aas
movsb
test
or
cmp
jne
adc
inc
pop
pop
mov
leave
das
add
data16
push
push
int3
ret
call
ljmp
mov
out
jmp
xchg
inc
mov
insb
ror
mov
dec
cmp
xchg
dec
decl
jne
jb
daa
mov
gs
lods
fstl
std
aas
dec
das
out
fs
mov
mul
and
xchg
lods
push
xor
decl
lea
dec
nop
jmp
subb
mov
push
dec
xchg
lock
sbb
or
std
call
insb
pop
mov
test
jge
add
sbb
rcrb
cltd
mov
shlb
mov
divb
orb
scas
xchg
lcall
ljmp
lret
jecxz
insb
sbb
data16
xchg
push
or
cmp
call
call
repz
jge
into
cmp
inc
cmpsb
jno
incl
dec
test
das
ficompl
cmp
sbb
jecxz
imul
call
aaa
jmp
out
push
xchg
and
mov
mov
lret
call
maxps
aam
shlb
sbb
popa
push
mov
push
aaa
lea
leave
pop
sti
es
adc
ljmp
das
cmc
scas
push
andl
sahf
lods
cmpsl
and
arpl
push
lock
call
scas
ficoml
xchg
aaa
adc
lret
add
clc
das
cld
mov
lods
sbb
and
inc
mov
push
pop
inc
mov
fs
enter
sub
pop
ljmp
add
mov
jbe
loop
push
mov
mov
aad
popf
or
push
out
shlb
aaa
jne
inc
js
aam
mov
push
movsl
ljmp
outsl
or
jo,pn
pop
mov
fucomp
andb
movsl
adc
clc
jg
lret
cwtl
leave
movsl
jbe
adc
arpl
stc
push
pop
pushf
imul
popl
cmp
sbb
lods
lea
fdivl
or
dec
ss
cld
enter
popa
mov
dec
mov
arpl
and
xchg
mov
popf
jbe
inc
sub
rcll
aaa
fbld
decl
jno
pop
push
data16
sub
mov
push
jle
out
mov
lcall
lea
test
push
popf
xlat
xchg
bound
jnp
clc
dec
or
pop
sti
ljmpw
incl
xchg
adc
xorb
mov
scas
cs
mov
lret
rorl
add
mov
outsb
int
popa
dec
rcrb
ljmp
ljmp
mov
cmp
xchg
adc
pop
outsl
icebp
incl
mov
mov
lcall
sbb
imul
shll
stos
repz
jg
sub
iret
inc
mov
xor
mov
cld
jg
out
test
cmp
sub
sub
cld
inc
sbb
xchg
in
push
clc
push
jbe
cmp
fsubp
mov
std
or
add
xchg
jge
sti
ljmp
iret
mov
sub
pop
add
dec
add
push
mov
pushf
aad
sahf
movsl
jne
add
cli
test
rorb
or
mov
lahf
outsb
sbb
push
inc
decl
int
sti
pop
enter
add
sbb
sar
mov
aad
dec
in
add
mov
fs
mov
lock
mov
sub
jo
test
mov
fisttpl
cmpl
pop
and
pusha
add
loopne
push
outsl
aam
shrb
jne
cmp
mov
mov
call
cli
xchg
aad
stos
pop
xchg
insb
xor
mov
into
mov
das
icebp
das
std
add
mov
pop
adc
icebp
mov
incl
sbb
inc
xchg
fidivrs
add
jp
jle
cmpsl
and
dec
cld
ljmp
dec
pop
outsb
mov
xchg
lds
mov
and
mov
jmp
mov
rclb
mov
pop
cwtl
ret
xchg
fsubr
subb
fsubp
adc
dec
adc
cmp
incl
shrl
and
cmp
data16
lcall
inc
dec
jbe
jbe
fists
je
mov
mov
mov
fwait
mov
mov
mov
sarb
pushl
cli
sub
dec
push
adc
xchg
xchg
orl
stos
sbb
pop
inc
pop
rcrl
add
imul
mov
jns
push
loop
cmp
cmp
out
pop
das
icebp
mov
add
lds
xor
or
push
or
adc
add
pop
xor
jo
outsl
sarl
mov
mov
lcall
and
fcomp
push
popf
idiv
and
mov
fs
xchg
push
aam
jo
mov
mov
dec
int
jmp
mov
fs
xchg
sti
cmp
nop
push
sbb
iret
pop
inc
pushl
jns
cld
addr16
test
fnstcw
nop
aad
pop
mov
fucom
jl
push
loopne
cmp
push
lret
stos
sub
or
pop
jns
out
sub
hlt
jmp
jecxz
push
cli
jno
test
pop
into
mov
out
out
mov
jmp
in
fidivrl
out
cli
jae
push
push
dec
hlt
dec
jns
mov
outsl
pusha
lret
mov
in
push
xchg
mov
lret
outsl
scas
pop
push
xchg
test
jb
incl
mov
rolb
inc
fisubl
or
call
mov
movsl
cltd
outsl
jecxz
decl
cmp
jo
cltd
mulb
push
jns
loop
incb
insl
outsl
ret
mov
add
ret
and
sub
pushf
les
dec
sub
js
cmp
shr
dec
mov
xchg
mov
xchg
and
call
adc
int
inc
out
xor
pop
lret
je
xor
pop
dec
js
ficoms
ret
call
pushl
mov
lahf
orl
adc
cmp
stc
jmp
mov
push
test
fsubs
jle
decb
push
fidivl
arpl
pushl
repnz
and
and
adc
imul
inc
in
andl
adc
out
incl
mov
push
gs
mov
pop
stos
outsb
mov
lods
jo
sub
test
outsl
add
pushl
add
mov
ficoms
mov
rorb
dec
adc
inc
push
push
push
dec
fdivrs
mov
pushl
mov
push
roll
lret
xchg
outsl
divb
movsb
or
ljmp
xchg
inc
push
loope
test
pop
cld
jbe
cli
sbb
mov
xor
xor
or
movntq
out
xor
sbb
cs
dec
sti
xchg
jae
and
jg
mov
and
ljmp
iret
cmp
ret
pop
push
sub
test
xchg
sbb
xor
maxps
decl
jns
dec
pop
leave
fwait
mov
es
es
mov
mov
jmp
js
imul
jmp
pop
std
movsb
mov
and
mov
stos
mov
sbb
pop
xor
frstor
adc
testl
lods
addb
popa
cmp
jnp
icebp
cmp
mov
xchg
stc
cmp
cli
inc
lret
inc
and
sbb
pop
or
das
insb
cmp
lcall
out
or
adc
ljmp
dec
hlt
jno
fcmove
dec
xor
cmp
pop
push
ljmp
test
rcl
sbb
mov
mov
ljmp
imulb
addr16
es
jg
aaa
sub
das
jnp,pn
sub
xlat
jl
adc
lods
call
cli
sbb
das
sub
sub
add
daa
push
popf
or
in
sti
sbbl
daa
shl
fsubl
pop
cwtl
lds
out
mov
stos
mov
mov
mov
xor
mov
loopne
lock
sbb
into
bound
push
inc
jbe
lock
in
ljmp
cwtl
mov
push
dec
xorb
mov
push
fistps
and
ja
sti
lret
cld
out
xor
and
pop
hlt
adc
test
sar
mov
mov
lods
cmp
jle
lcall
popa
es
jns
pop
imul
dec
fildll
je
cwtl
lea
idiv
jg
jg
fadds
xchg
ret
xor
xor
outsl
shl
inc
int3
frstor
into
cld
inc
ljmp
lret
test
lahf
mov
insl
push
loop,pn
sub
pop
sbb
add
pop
pop
addr16
push
pop
sbb
imul
jnp
lcall
xchg
clc
pop
mov
jno
sbb
stos
dec
lcall
sub
inc
adc
popa
ljmp
jmp
enter
lret
ss
fnsave
inc
mov
std
incl
dec
adc
jg
pop
mov
sbb
push
packsswb
mov
sarl
dec
stos
das
sbb
mov
insb
mov
push
mov
inc
lea
movsl
decl
enter
add
mov
in
xchg
lret
push
pop
cltd
xchg
insl
sub
dec
pop
add
push
out
pop
pop
dec
mov
shl
lcall
cmp
sbb
or
pop
add
cmc
ljmp
pop
inc
repnz
xchg
testl
dec
mov
ret
popf
repnz
jp
xchg
jne
loope
and
cmpsb
jmp
aaa
sbb
push
mov
push
aas
cs
mov
subl
outsl
mov
push
rolb
sub
mov
fwait
cmp
hlt
sub
int
xchg
test
incl
push
gs
lahf
xchg
adc
ja
pushl
mov
or
nop
cli
inc
daa
mov
sub
mov
test
push
and
sub
mov
push
aas
sub
push
mov
sub
or
add
les
icebp
movsb
in
cli
idiv
ljmp
insb
popl
sarb
mov
jae
mov
push
test
call
mov
inc
lcall
repz
push
or
out
in
jg
lcall
test
mov
ret
sub
pop
andl
scas
repz
dec
mov
push
gs
fcompp
xor
dec
into
aaa
ret
bound
pop
push
pushf
cwtl
dec
mov
data16
int3
pop
xchg
mov
push
add
dec
sub
pop
sub
decl
xchg
js
xchg
push
cltd
out
fcoml
pop
or
cli
pop
or
lcall
adc
xchg
divb
pop
daa
push
cmpl
xchg
push
push
clc
outsl
jg
ljmp
repnz
mov
or
imul
mov
dec
pop
push
arpl
push
mov
fwait
rorb
cmp
pop
ss
in
jg
addb
fstpl
stos
lahf
xchg
scas
xchg
or
fisttpll
inc
je
in
cli
sti
stos
insl
pop
mov
push
mov
nop
clc
scas
xchg
pop
xchg
pop
cld
fists
cltd
psubsw
sbb
jbe
inc
mov
fnstsw
pop
clc
sub
mov
test
fidivrs
mov
jmp
inc
mov
push
jge
jne
add
inc
paddw
or
adc
push
add
dec
rolb
in
gs
inc
jp
pop
test
push
pop
jl
out
add
imul
cmp
jge
testb
sbb
jno
cmpsb
cmpb
out
clc
adc
call
ljmp
lret
insl
ljmp
push
pop
popf
arpl
pop
or
test
call
stos
sti
mov
ret
inc
cld
shrl
cs
ljmp
test
sar
call
pop
stos
out
out
nop
movsb
ja
mov
insl
lds
dec
cmpsb
add
outsl
mov
and
pop
in
nop
adcl
mov
call
and
pop
imul
add
or
fistpl
and
bnd
xchg
pushf
xor
mov
mov
mov
bound
jp
push
or
lcall
adc
clc
aad
add
ljmp
inc
iret
stos
andb
mov
arpl
test
sub
push
or
sub
adc
dec
lcall
sub
cmpsl
lret
dec
fisttpl
je
mov
je
sub
mov
mov
call
in
sbb
inc
pop
push
mov
pop
lock
pushl
insb
icebp
ret
xor
daa
xlat
and
jmp
sbb
sbb
sub
adc
dec
mov
push
add
call
mov
daa
sarl
and
cld
jns
test
rolb
or
add
lcall
js
mov
ja
leave
cli
fnstcw
fucomi
push
int3
mov
sbb
jmp
sbb
ss
nop
inc
imul
mov
pop
daa
inc
adc
add
fsubr
add
add
cmp
jle
mov
mov
mov
loope
fmuls
sub
add
call
faddp
leave
mov
or
movsl
in
dec
sti
repz
and
sbb
mov
xor
pushl
cmp
lds
cmp
push
fstps
pushf
test
xor
les
arpl
and
jbe
pop
sub
jg
mov
pop
ret
rcrb
mov
cmp
movsl
jmp
scas
dec
enter
movsl
sub
sub
inc
xchg
mov
fbld
test
sub
cmp
decl
dec
push
push
iret
orb
test
outsl
imul
jecxz
pop
cld
jmp
cltd
mov
mov
mov
sbb
data16
ss
std
idivl
jno
insl
jg
lcall
imul
or
or
mov
in
dec
cmp
call
and
push
insb
std
or
xor
mov
mov
mov
add
xor
dec
cmp
addr16
ss
pop
cld
add
ds
dec
jge
mov
ficoml
bound
and
jmp
aam
inc
add
data16
jmp
xor
mov
cltd
xchg
jb
nop
jmp
je
add
mov
fnstsw
mov
pop
push
adc
dec
aam
lea
lods
fwait
sbb
sarl
cli
pop
mov
cld
decl
push
jns
mov
aaa
adc
mov
idiv
decl
mov
mov
daa
jne
repz
ljmp
leave
loope
jmp
dec
fmul
sbb
fistps
jmp
addl
mov
pop
roll
aas
adc
mov
jmp
dec
out
in
test
test
push
icebp
lds
jne
imul
jno
mov
add
mov
mov
lods
in
popa
jl
mov
push
aam
icebp
jne
js
jg
fs
mov
cmp
je
incb
stos
xchg
and
xchg
pushl
cmp
cmp
xchg
iret
stc
mov
jb
insb
jecxz
lcall
jecxz
jbe
xchg
out
xor
ljmp
or
test
add
jne
adc
incl
mov
hlt
pop
dec
nop
in
mov
mov
push
into
dec
scas
lods
lcall
xor
add
cwtl
jne
in
ja
aaa
lret
or
cltd
cmp
filds
movsl
mov
rcl
stos
fs
inc
sarl
push
arpl
addr16
cli
enter
subps
decb
sub
inc
aam
mov
or
push
aaa
mov
outsb
fucom
mov
push
mov
or
xor
lds
cld
test
xor
ret
pop
popa
xchg
incl
cmp
or
cmp
jns
test
and
sub
incl
pop
sbb
inc
subl
aaa
bound
ss
push
adc
xchg
int
pop
sub
sub
das
std
add
dec
stos
insl
push
push
mov
dec
xchg
hlt
adc
mov
test
mov
in
inc
es
jp
jmp
enter
push
add
popf
int3
ret
ret
out
add
int3
loope
mov
pushl
ret
jg
shlb
dec
push
cmp
dec
cmpsl
loop
movsl
ja
inc
mov
push
push
popa
mov
ljmp
jbe
xchg
cmp
sti
insl
sub
inc
loop
pop
iret
xor
test
lcall
call
or
inc
mov
or
ljmp
sbb
mov
int3
pop
jge
inc
xchg
mov
and
or
add
out
popf
cmp
bound
inc
lcall
xchg
add
push
aas
cmpl
test
ljmp
dec
sti
vcmppd
sub
cmp
xor
lcall
loope
data16
sub
pop
shrl
test
mov
js
or
dec
cwtl
push
mov
lods
jmp
jle
sbb
dec
adc
movsb
xchg
sti
add
out
ja
ljmp
and
mov
loopne
add
pusha
jl
scas
push
dec
push
call
test
sbb
int
clc
jb
cltd
inc
pop
sti
idivb
in
loopne
cli
cli
mov
add
mov
sub
pushl
pop
int
inc
and
pop
fildl
aas
mov
mov
push
inc
xor
decl
xlat
or
push
nop
js
aas
or
push
dec
or
jne
cmp
psubq
dec
test
pop
outsl
add
scas
lret
cmp
clc
lret
jg
pop
mov
fwait
int3
movsl
call
mov
jo
cmp
dec
jp
jmp
cs
jns
pop
lret
in
shlb
jmp
call
lret
pop
cmp
addr16
lods
or
fadds
inc
out
mov
xlat
into
pop
add
pusha
mov
pop
mov
cmc
dec
inc
xorl
leave
sub
outsl
cld
decl
cwtl
mov
in
fnsave
mov
rclb
sub
jg
cmp
mov
dec
sub
lods
loope
les
cmp
ja
sub
jecxz
test
jg
and
incl
insb
out
push
movsl
fdivrs
jae
mov
mov
xor
sub
aad
stos
aaa
addl
jg
aaa
xor
push
push
mov
scas
lods
cmc
jno,pt
xchg
fwait
int
pop
aaa
fisubrs
loopne
loopne
add
xchg
std
pop
ss
mov
pop
push
inc
cmp
push
add
mov
lret
add
data16
inc
rorb
push
inc
dec
sub
pop
in
jecxz
vunpcklps
ljmp
cwtl
aas
ja
sbb
xchg
sahf
pop
or
je
pusha
jae
loop
adcl
sub
ret
dec
call
cli
jne
pushf
mov
xchg
push
js
lret
cmp
adc
cmc
mov
je
sub
test
push
push
pop
inc
daa
mov
outsl
sti
fadd
ja
enter
out
loopne
icebp
int3
fisubl
dec
movsb
out
xchg
dec
loope
lcall
dec
xchg
cmc
cmc
dec
pop
cwtl
repz
lret
jle
fcompl
pop
out
nop
or
add
loop
icebp
jg
leave
out
ds
inc
mov
fwait
fs
xchg
cltd
rorl
in
mov
ljmp
lret
arpl
mov
xchg
sub
sub
imul
mov
ljmp
call
iret
adc
enter
sub
in
inc
mov
out
jg
push
comiss
or
xchg
push
test
adc
sbb
sbb
fadds
mov
or
mov
or
shl
push
cmp
jmp
sub
repz
mov
jmp
iret
or
pop
cld
mov
xchg
push
dec
scas
xchg
add
ss
sub
data16
decl
fcoml
decl
inc
sti
push
mov
jne
cmc
in
test
jp
or
cmp
add
or
mov
cltd
fucomip
lcall
ret
data16
mov
cltd
out
cmp
rolb
cmp
mov
fsubrl
xor
in
mov
dec
adc
add
test
cmp
pop
pushw
int
pextrw
dec
shll
push
dec
icebp
mov
repz
lds
dec
inc
daa
aad
stc
clc
hlt
mov
and
cmp
icebp
jp
bound
fdivrp
rcrl
mov
mov
pop
ljmp
fidivrl
pushf
fcoms
inc
dec
inc
cmp
add
bound
leave
out
mov
inc
cmp
add
lods
add
mov
mov
decl
adc
sub
cli
pop
bswap
sub
pop
sahf
aad
rcl
in
lds
pushl
movsl
push
xchg
fdivr
jge
insb
mov
sbb
adc
daa
jle
jg
call
in
dec
aaa
or
inc
sbb
mov
jmp
in
jbe
pushl
in
sub
divl
les
cmc
cmp
loop
pushl
xchg
pop
loop
mov
lods
test
ljmp
pop
pop
stc
adc
add
imul
pop
push
add
jecxz
and
fucom
mov
inc
mov
xchg
add
adc
pop
test
jmp
mov
stos
pop
or
pushl
insb
in
ret
iret
dec
loopne
dec
sub
ret
imul
mov
mov
aad
outsl
fcoms
adc
and
cwtl
xchg
add
movsl
stc
fistps
mov
shl
stos
pop
pushl
mov
lock
or
in
jmp
addl
inc
es
push
xor
xor
inc
mov
inc
mov
add
cmp
and
ljmp
es
in
xor
sub
es
test
push
aad
imul
rcrb
lret
imul
mov
xchg
dec
popf
dec
dec
popa
pop
jle
add
pop
cmp
outsl
icebp
into
jmp
insb
ss
mov
outsl
mov
push
add
loope
jmp
cmp
push
adc
xchg
add
in
mov
xlat
stos
lods
and
cmpsb
push
aaa
cmc
lcall
inc
les
insb
mov
sub
push
ljmp
xor
jl
xor
sub
mov
mov
bound
jle
cmc
incl
xor
mov
sbb
les
andb
xchg
js
ds
jno
ret
mov
call
mov
movsl
add
jb
xchg
nop
or
pop
cmp
movsl
outsl
hlt
xchg
cli
and
pushf
inc
daa
loope
or
call
cs
out
push
adc
xor
and
mov
rclb
dec
leave
jmp
mov
xor
sbb
push
inc
push
ret
loop
cmp
cld
mov
xchg
sub
xchg
enter
hlt
jnp
iret
cmp
imul
inc
test
nop
lds
jle
repz
ljmp
push
jne
cmp
iret
push
hlt
les
mov
ficomps
decl
fisttpll
into
xor
movsb
adc
cmp
push
sub
inc
and
and
mov
das
fsubl
mov
fld
or
push
insl
adc
ljmp
mov
pmulhuw
pusha
and
addr16
jbe
push
inc
mov
pushl
lods
outsb
or
or
inc
or
je
test
ss
icebp
mov
test
xchg
mov
pop
js
mov
adcb
push
xchg
jg
pushf
loope
pop
xchg
add
iret
mov
add
push
pop
add
sbb
add
pushl
push
xchg
jg
and
testb
xlat
dec
aaa
popf
inc
or
cmp
outsl
int3
jecxz
mov
mov
jge
repnz
decl
jne
js
int3
popa
xor
dec
enter
mov
mov
pushl
test
push
divb
push
in
mov
loop
xchg
nop
fdivl
aaa
inc
testb
rcrb
jno
jg
mov
outsb
lret
sub
hlt
das
cld
std
add
and
sahf
mov
push
push
jno
daa
dec
loop
out
xor
subl
inc
dec
mov
mov
data16
iret
cmp
xchg
dec
js
ss
jle
mov
cmp
xor
xchg
mov
mov
clc
jns
lret
popf
cmp
int3
dec
in
ljmp
arpl
add
hlt
xor
das
mov
shrl
out
fxch
sub
das
insl
push
lods
in
addl
inc
out
pop
and
jb
mov
ljmp
int3
inc
xchg
je
or
das
mov
ret
dec
lds
adc
mov
cs
icebp
out
inc
pop
and
mov
call
sti
pushf
popf
cmp
insb
mov
movsb
arpl
jle
cmpsl
lcall
stc
outsl
cmc
lcall
lahf
push
test
ss
mov
sub
stc
imul
lcall
or
sub
popa
fisubrs
les
or
test
sahf
jge
adc
in
cmp
cmp
adc
scas
push
aad
stos
jmp
and
sub
pop
xor
test
idiv
std
sub
outsb
popa
fcoml
clc
fucompp
mov
fmuls
cmpsb
sbb
and
call
push
int
push
div
push
in
jno
insb
mov
mov
iret
sahf
mov
outsl
lcall
cld
decl
imul
xor
ret
scas
pop
xchg
imul
call
or
push
jl
cld
mov
fsubl
or
fiaddl
dec
fdivrs
mov
call
mov
sub
stos
add
fsubs
or
sbb
mov
jnp
cmp
fwait
bound
push
push
add
or
out
testl
xchg
mov
lcall
cmpl
ss
mov
cli
inc
inc
xor
mov
fbstp
pop
mov
and
pop
aad
mov
push
cmc
lcall
lcall
mov
lcall
inc
push
clc
dec
aad
sbb
stc
imul
jle
jns
fucomip
ljmp
dec
cmp
fldenv
and
lods
jbe
xchg
clc
push
jns
insl
loop
and
xor
adc
fucomip
shlb
fwait
mov
mov
cmpsb
aam
xchg
test
inc
cltd
push
test
push
or
aaa
mov
sub
inc
xor
xchg
cmpsl
sbb
out
cmp
cld
pushl
andb
das
mov
in
std
cmpsl
outsl
xchg
stos
push
cli
decl
add
loopne
rclw
cmp
jg
sti
dec
sub
in
push
arpl
mov
shll
cmp
dec
dec
idiv
xchg
jg
dec
dec
push
add
pop
rorl
jbe
into
fucom
inc
jmp
test
sbb
jg
decl
jle
sub
mov
outsl
xchg
mov
xor
jge
jae
pop
jno
call
push
mov
add
in
or
addr16
ljmp
out
xor
and
test
loop
enter
cld
decb
sbb
test
pop
std
outsl
in
insl
nop
mov
or
jg
sub
cmp
cltd
loope
mov
int3
jg
xchg
jmp
pop
mov
and
and
pushl
cli
jl
dec
arpl
jmp
mov
cmpsb
cli
sub
cwtl
cmp
xor
sub
or
ja
xor
lods
mov
ret
dec
out
jg
xor
sbb
inc
jmp
ljmp
call
jb
fistl
mov
and
inc
lcall
and
push
scas
test
lcall
mov
mov
pop
mov
and
mov
ret
enter
mov
xchg
mov
shll
adc
call
stc
xor
xchg
cli
lea
mov
and
jge
jmp
call
mov
jg
ljmp
es
inc
inc
jbe
push
clc
clc
sub
push
jle
sbb
add
test
mov
das
icebp
sbb
ret
std
add
outsl
sub
xchg
mov
lcall
jg
shrl
pop
jae
addr16
push
inc
jo
pop
fadd
or
adc
and
fsin
push
mov
arpl
and
sbb
mov
pop
movsl
incl
and
das
cmc
mov
ds
imulb
popa
outsl
jge
pop
incl
out
jne
stos
hlt
add
dec
and
push
flds
ljmp
andb
or
das
call
or
incl
decl
cltd
adc
test
mov
ret
es
daa
dec
pop
cld
inc
jno
mov
pop
or
movsl
sub
cmp
lods
std
push
and
mov
pushl
or
lods
mov
rcl
sbb
xor
and
xor
mov
aad
dec
push
sbb
arpl
mov
ljmp
ljmp
sub
lret
ds
push
ja
repz
inc
xor
outsl
std
ljmp
xor
push
bound
push
and
add
call
xor
xchg
and
xor
outsb
aas
rclb
fdivs
mov
decl
pop
mov
pop
lods
fldl
es
repnz
sti
fwait
add
ljmp
inc
mov
test
and
in
mov
adc
cmpb
pusha
sub
xor
lcall
pop
or
push
xchg
les
fld
cmp
or
jnp
icebp
call
mov
nop
mov
imul
aam
pop
outsl
cld
jmp
sbb
mov
cmp
stc
sahf
xchg
mov
inc
dec
pop
push
inc
xlat
xchg
add
std
in
inc
lret
dec
cmp
push
leave
push
xor
fcos
incl
add
xor
cmp
push
push
xchg
in
mov
loop
imulb
pop
mov
idivb
je
cmp
cmc
dec
out
adc
dec
push
lret
and
daa
jecxz
add
rcl
subl
xlat
sbb
icebp
outsb
lds
das
ss
sar
mov
sbb
adc
je
loopne
fisubrs
mov
inc
cmc
std
test
mov
mov
pushl
add
xchg
cmc
xor
mov
scas
aaa
cmp
sub
or
jns
add
cmp
sahf
call
cmpsb
push
fldt
out
jle
mov
xchg
test
leave
jp
mov
sahf
sub
jg
icebp
std
xchg
inc
cwtl
js
add
out
push
std
cmp
rcl
jg
lcall
jp
jbe
push
mov
nop
cmp
jge
ja
xchg
jg
inc
icebp
dec
pop
dec
xchg
ss
int3
sbb
xchg
dec
cmp
jle
sub
or
inc
dec
lods
jnp,pn
mov
inc
mov
test
adcb
and
mov
and
lds
ds
jnp
add
or
out
mov
into
cmpsl
jns
xchg
xlat
and
shll
cmp
lock
jg
sub
push
pop
imul
mov
outsl
cmc
pushl
pop
inc
cmp
movsl
fldt
in
andl
test
jge
popf
and
cli
mov
sbb
cmpsl
inc
or
mov
dec
movsb
mov
pop
mov
roll
inc
adc
cmpl
jnp
aam
jns
pop
cld
call
sbb
test
cmpsl
imul
jns
xor
mov
or
dec
dec
pop
movsl
ret
insw
pop
jb
ficoml
lret
mov
std
ljmp
push
mov
testb
fdivrl
mov
stc
movsl
fisubl
push
cmc
mov
call
sub
std
jae
test
pop
jge
pop
aaa
jmp
pop
mov
xchg
mov
mov
cld
pop
pusha
scas
push
repz
shll
mov
insb
mov
xchg
incl
add
popa
jl
push
mov
js
aam
aaa
mov
sti
cli
or
ss
push
insb
or
insl
movsl
lcall
das
hlt
cmp
sarb
sub
and
xor
ljmp
hlt
lcall
jg
add
jne
xchg
shlb
dec
dec
ficomps
mov
xchg
dec
outsl
ret
jmp
shrl
pop
cmp
sar
js
mov
mov
xor
pop
jl
pop
or
sbb
push
sbb
and
inc
pop
jmp
stos
sbb
repz
popa
and
clc
add
cli
pop
lcall
push
xchg
scas
pushf
pop
adc
jmp
xor
lock
pop
outsl
cld
and
jae
sti
and
push
or
mov
jl
push
push
jbe
sahf
int
lcall
decl
pop
mov
push
fnstsw
aas
pop
std
fbld
ljmp
mov
psubq
mov
jmp
lock
cmp
ja
jp
jb,pn
cmp
frstor
mov
div
test
ja
push
cmc
movsl
lcall
dec
sub
xor
data16
ljmp
mov
push
into
sub
mov
inc
fdivrs
sbb
mov
sbb
push
add
stc
push
sub
cmpsl
fiadds
push
lds
ljmp
and
cld
notb
ja
cld
aam
lds
mov
aad
cld
xchg
outsb
add
add
push
jg
jno
push
fwait
mov
fxtract
mov
leave
cld
fcmovnb
inc
sub
es
daa
insb
dec
jp
rclb
push
or
fisttps
pop
stos
jl
add
aam
mov
decl
push
scas
inc
dec
imul
mov
int
cmp
add
and
notb
dec
xor
push
in
push
dec
icebp
mov
and
pushl
pop
in
loope
adc
pusha
pop
jb
pop
add
inc
sahf
pushl
clc
dec
testb
out
xchg
cmpsb
pop
or
mov
cmp
incl
cmp
clc
mov
sbbl
pusha
xchg
insl
mov
cmp
cmpsb
cli
test
decl
ficoml
insl
inc
adcl
mov
or
mov
push
pop
aas
jl
jmp
push
xchg
sar
and
sub
sub
rcl
les
rcrl
mov
incl
nop
sub
pop
or
insb
and
subl
jmp
in
mov
xlat
out
incl
outsl
aas
and
xorl
add
clc
sti
jae
shll
insb
jns
cmpsb
ja
incl
jg
cwtl
xor
mov
pushf
subl
scas
es
cmc
ljmp
pop
loope
inc
and
stos
outsl
sub
mov
pop
imul
dec
adc
aad
cmc
jo
or
stos
jl
lcall
mov
mov
cwtl
int
dec
lea
add
push
nop
daa
cli
incl
fcompl
jbe
ficoms
dec
push
shlb
inc
xchg
in
or
inc
add
push
rorb
mov
push
fistps
sbb
sub
jp
push
jg
mov
mov
xchg
test
bound
aas
push
mov
sbbb
shlb
in
unpckhps
and
jb
push
mov
stc
push
shlb
mov
push
loope
aaa
ljmp
or
int3
outsb
sub
mov
pop
pop
shll
pushf
push
test
push
and
mov
jmp
mov
mov
pop
shll
fwait
scas
push
sub
fstpl
les
outsb
decl
dec
lock
jno
hlt
jbe
xchg
dec
push
outsb
js
lock
pop
mov
dec
sahf
lret
loop
cmc
aaa
jecxz
out
cmp
sub
mov
fildll
test
movsl
sub
out
sub
lcall
rol
mov
sbb
hlt
pushl
sub
sub
aaa
int3
mov
orl
cmp
mov
xchg
jle
or
fcmovnu
loop
inc
dec
add
pop
mov
das
cmp
leave
fcos
mov
ret
push
or
sbb
insl
xchg
divb
mov
sub
sar
mov
iret
and
mov
inc
push
or
lea
stc
aas
mov
in
inc
divl
icebp
ljmp
sbb
mov
xor
jge
scas
dec
adc
and
and
mov
jb
inc
pop
xor
push
cs
adc
pop
push
call
sub
popa
es
mov
pop
push
sbb
out
pop
test
daa
mov
outsl
lds
jp
lret
outsb
mov
inc
push
clc
jl
pop
imul
xchg
decl
or
lock
jle
sub
mov
jmp
pop
je
ljmp
das
flds
sub
into
inc
cli
ficoms
sbb
lods
adc
call
scas
add
mov
sub
dec
icebp
pushf
add
pop
out
xchg
dec
sub
in
dec
call
xchg
adc
dec
xlat
sub
repnz
mov
cwtl
nop
mov
adc
push
pop
into
xlat
mov
clc
sarb
dec
sub
push
sub
add
setb
or
push
jmp
std
mov
repnz
iret
dec
mov
pop
stc
inc
push
sub
fisubl
cli
faddl
jle
mov
loope
xor
mov
jo
fstpl
and
lcall
push
cmp
push
cld
jo
mov
xor
test
lods
mov
pop
push
outsb
mov
call
into
jb
aas
xchg
outsl
repz
test
subl
std
pop
adc
fldenv
inc
mov
sbb
cmp
pop
mov
gs
lea
inc
popf
daa
xchg
out
push
add
adc
incl
je
je
add
mov
jb
shr
push
sahf
fisttpll
mov
std
mov
pop
cmpsl
cmpsl
jl
jae
ret
popl
loopne
push
mov
loope
inc
adc
cmp
ss
jp
mov
mov
lcall
ljmp
dec
insb
pop
inc
mov
add
adc
outsl
mov
test
fdivr
test
push
ret
dec
cmp
add
push
dec
sub
sahf
mov
pusha
push
jl
push
in
or
push
cld
dec
sti
xor
and
fidivs
xchg
push
cld
mov
xchg
mull
roll
mov
add
inc
xor
lcall
adc
sub
adc
andl
int3
jnp
jle
inc
jecxz
dec
aaa
push
cmp
jmp
shl
push
ret
jmp
mov
mov
mov
mov
mov
clc
incl
dec
cmp
fdivrl
shlb
ja
sar
or
inc
push
sub
testl
xorb
inc
mov
adc
arpl
add
lcall
pop
mov
push
inc
adc
mov
test
in
pushl
loopne
adc
nop
lods
sahf
sbb
or
push
shrb
push
pop
inc
int3
das
lock
jo
push
arpl
mov
adc
jae
xor
sar
call
hlt
dec
movsb
clc
cmp
sbb
test
cltd
dec
popa
push
dec
fbld
xor
fucomp
incl
xchg
daa
pop
dec
mov
inc
mov
sbb
call
in
cwtl
push
and
pop
sub
sub
ja
pop
cmpb
std
xchg
out
int3
mov
ljmp
push
fsubrl
push
or
jno
or
cmp
gs
adc
or
adc
push
and
incl
stos
mov
or
jo
push
and
clc
shrl
pusha
inc
mov
xlat
jbe
jmp
push
or
or
pop
dec
repnz
movsb
pop
clc
aas
test
ljmp
cmc
call
ror
xchg
adc
lahf
incb
lret
or
add
outsl
lock
mov
decb
popf
and
ret
mov
pop
popa
test
in
loope
in
inc
filds
pushl
gs
pop
fmul
add
or
rclb
or
adcb
mov
aad
leave
sbb
ret
pop
jnp
mov
int3
cmp
pop
jmp
xchg
push
daa
fldenv
mov
jp
cmpl
aaa
pop
js
mov
inc
shll
push
pop
push
sub
in
mov
call
call
jle
add
mov
mov
mov
push
ljmp
mov
adc
adc
insb
xchg
and
adc
mov
ljmp
cmp
mov
push
sub
andl
mov
cmp
and
decl
fadd
mov
scas
xlat
mov
dec
test
ret
and
jmp
das
xchg
push
sahf
mov
aaa
hlt
stos
fnstenv
or
lods
and
hlt
push
push
jge
bound
clc
call
pop
xor
xor
pushl
xchg
test
adc
jecxz
pop
or
iret
inc
mov
sbb
cltd
xor
imul
mov
clc
outsb
inc
out
cmp
xchg
cli
ljmp
push
loope
add
rcll
out
mov
xchg
imul
sarl
in
movsb
test
test
or
rorl
or
out
data16
fnstsw
pop
faddp
loopne
sbb
jl
sbb
fcomip
rcrl
jmp
sbb
jne
xchg
jne
arpl
enter
shlb
xchg
lock
cmp
sub
push
aam
sti
mov
out
es
pushl
fcmovu
push
nop
sbb
cwtl
push
call
ret
insl
je
mov
mov
push
loopne
xchg
out
daa
sub
add
ljmp
out
push
and
mov
ss
lret
insl
ja
dec
out
ss
pop
mov
xchg
loope
mov
inc
jp
scas
cmp
inc
mov
add
mov
test
test
mov
adc
sbb
aad
push
pusha
add
xor
xor
call
sbb
movsb
stos
mov
mov
fwait
aad
xchg
out
or
cmp
call
fisubrl
or
dec
jne
movsb
mov
adc
push
cld
xor
push
gs
neg
mov
cmp
movsl
cld
push
jg
jp
aam
shl
pop
jo
leave
push
insb
inc
dec
xor
ficoml
mov
xchg
sub
js
sbb
das
push
ja
call
cli
inc
int
cltd
jo
fldcw
or
into
or
mov
test
call
out
faddl
mov
pop
push
or
jg
outsl
lods
sbb
add
pusha
cmc
sarb
icebp
loopne
fnstenv
sub
popa
lds
aad
test
push
std
incl
and
mov
adc
dec
xchg
fsubp
jae
pop
incl
cltd
sbb
add
bswap
lret
mov
lret
add
mov
cmp
dec
mov
sbb
mov
mov
mov
icebp
call
aas
ljmp
icebp
int3
aaa
sbb
xchg
fcoms
jg
or
cmp
mov
scas
pop
inc
jnp
dec
out
or
icebp
cmpsb
xchg
cmp
les
std
xor
lea
mov
xchg
jae
clc
fnstsw
pop
stc
mov
pusha
inc
filds
mov
call
mov
push
push
lods
cld
cmp
enter
aam
pop
cmp
aaa
mov
leave
inc
cmpsb
xchg
adc
mov
jmp
es
mov
lods
ret
add
sub
pop
or
inc
mov
dec
xchg
stos
jae
sar
call
aaa
cmc
inc
loope
ret
xor
add
or
lods
xchg
neg
das
cmc
pushl
out
daa
shrl
sub
add
stc
aaa
mov
decl
int3
add
in
jge
cmp
jmp
jle
faddl
in
sbb
std
inc
ljmp
aad
orl
mov
push
int
xlat
pop
jns
sahf
xchg
fdivrs
or
mov
loop
cmp
xor
shrb
loop
mov
insl
mov
nop
aad
xor
jnp
mov
aas
jne
push
adc
aam
lcall
test
lret
lea
lods
mov
mov
jecxz
ljmp
in
roll
fs
push
fbld
jg
adc
and
gs
repnz
pop
adc
aad
jle
mov
mov
repz
sub
ljmp
mov
cmp
repz
and
test
or
push
adc
sbb
fldenv
leave
pop
adc
xchg
test
jmp
cmp
andl
sbb
aas
adcl
out
imul
fisttpl
lcall
jmp
xchg
rolb
xchg
fnstcw
inc
idivl
lods
lods
push
test
fsubrl
ljmp
test
xchg
cli
call
inc
and
jbe
xor
add
or
lret
subl
xchg
mov
inc
fs
loop
inc
pop
and
fwait
insb
popf
dec
sbb
or
test
jns
std
ljmp
push
mov
lea
icebp
shlb
pop
mov
lcall
adc
sbb
pop
in
cmp
mov
fsubl
ret
push
mov
enter
push
ja
pop
jle
cmp
cli
xor
lret
out
enter
sub
mov
cli
ja
pop
add
lcall
rorl
in
nop
movsb
stc
mov
mov
push
add
arpl
call
pop
cmp
mov
sub
pop
or
pop
xchg
xchg
cli
shrl
iret
movsl
bound
incl
xor
or
fsubrl
inc
enter
jmp
or
sbb
fcomp
push
int
je
pop
mov
ds
mov
dec
enter
mov
push
out
add
lahf
or
lahf
into
cli
inc
cmp
add
pop
test
shr
jecxz
fcos
jmp
mov
push
fstpl
pop
shll
mov
xchg
mov
xchg
xchg
adc
and
dec
jne
ret
cs
icebp
mov
adc
mov
cmpsb
std
arpl
jecxz
lock
ljmp
js
mov
mov
mov
fstenv
das
mov
leave
mov
and
outsb
or
xchg
dec
bound
adc
add
test
decl
pushf
ljmp
add
ljmp
fcoms
std
sub
sbb
je
js
pop
jmp
movsl
ljmp
in
dec
inc
ja
cmp
mov
add
xchg
je
mov
test
scas
fs
mov
pop
lods
mov
addr16
mov
jo
push
ret
subb
jbe
sbb
inc
lcallw
cld
dec
stos
insb
shll
clc
add
push
fs
add
dec
test
and
and
test
outsb
jl
fdivrp
outsl
addl
sbb
jle
movsl
jmp
mov
popf
enter
call
or
ss
lret
ljmp
xchg
sub
xchg
and
icebp
or
dec
mov
sub
bound
pop
fdivr
ljmp
lock
mov
je
clc
or
sbb
dec
push
orl
jns
cli
sub
sub
leave
xchg
xchg
jle
int3
pop
adc
xor
je
in
decl
lock
jno
dec
bound
mov
stos
lea
ja
dec
std
decl
mov
mov
or
dec
orb
pop
mov
add
adc
adc
imul
in
jmp
mov
rcl
pusha
ss
push
jmp
repnz
aad
xchg
add
mov
das
adc
mov
lods
adc
xor
inc
jo
xchg
pop
enter
call
lar
inc
jo
lcall
and
push
lods
psllw
mov
or
in
bound
fwait
outsb
daa
pop
cmp
and
dec
repz
jmp
out
psubb
cli
push
lock
jge
dec
lcall
testl
and
loope
divb
jmp
inc
out
cmp
push
mov
pop
pop
xchg
push
divps
xchg
pop
pop
loop
lods
loope
loopne
hlt
loopne
xchg
push
aad
hlt
add
sar
xchg
jle
cmp
je
out
dec
mov
pop
out
xchg
fadds
shlb
sub
popf
dec
cmp
hlt
es
incl
mov
xor
xchg
js
sbb
mov
xchg
push
xchg
adc
stos
loop
pushl
jg
mov
xchg
cmpsb
or
idivb
loopne
pop
imul
add
jge
lcall
mov
and
add
popa
mov
mov
inc
je
xor
mov
call
mov
shrl
es
ljmp
add
jp
push
enter
fwait
lods
pop
lret
in
sub
jp
out
and
add
imul
clc
jne
popf
xor
jg
xchg
ljmp
mov
and
adc
lods
fiaddl
fidivrl
jns
mov
push
stos
mov
jae
dec
fildl
lcall
dec
cli
ret
xchg
movsl
add
cld
or
push
xchg
mov
mov
mov
stos
inc
or
lds
inc
lods
or
pop
mov
in
icebp
xchg
push
fldenv
in
imul
call
and
aam
and
cmp
cmc
test
ljmp
mov
pop
and
push
sub
je
sbb
xor
xchg
mov
jg
jmp
loopne
xor
push
sbb
dec
mov
in
mov
or
jo
add
call
cmp
inc
sub
mov
mov
inc
pop
je
nop
xorb
mov
jb
xor
push
decl
inc
push
mov
inc
das
jge
xlat
insl
or
ja
clc
cmpsl
mov
scas
pop
cltd
pop
push
adc
xor
pushl
or
add
sub
mov
xor
adc
pop
in
lcall
pushl
mov
mov
push
outsl
mov
xchg
lock
call
popf
pop
sbb
cmp
or
add
sub
loopne
mov
movsb
loope
mov
rorl
aam
movsb
fwait
out
cmp
roll
sbb
daa
outsb
push
in
mov
jp
fnstcw
lods
jg
ja
adc
mov
in
jo
jbe
call
add
adc
test
imul
push
jno
insb
cwtl
add
clc
out
xor
xchg
and
sti
jge
sub
sahf
or
cmc
das
cmp
or
mov
lea
mov
test
or
imul
filds
mov
sub
inc
subb
push
pop
mov
int
test
lds
fidivl
mov
or
xor
divb
aas
std
rorl
push
incl
sub
lret
xor
dec
shll
add
inc
mov
jmp
jecxz
cmp
pop
das
ja
add
mov
xchg
mov
dec
movsb
test
dec
sti
ds
jg
pop
xor
roll
xor
xorl
arpl
das
ljmp
test
movsl
lds
adc
push
mov
cmpl
adc
lods
xor
sub
push
cmp
mov
mov
mov
es
loopne
pop
std
in
in
sbb
add
jg
lcall
xchg
jno
xchg
inc
sub
sbb
dec
out
xor
dec
std
ljmp
xchg
inc
out
xchg
xor
leave
add
cwtl
mov
and
pop
xchg
sub
mov
aaa
adcb
call
mov
mov
inc
psubq
push
movsb
dec
rolb
inc
xchg
and
decl
int
out
cmp
inc
nop
fneni(8087
es
dec
xor
das
pop
jge,pt
mov
out
cli
in
rol
xchg
xor
sub
xorb
xchg
in
iret
jmp
aas
sub
mov
lods
xchg
stos
int
inc
gs
outsb
sbb
pop
xor
push
stc
out
mov
aas
and
adc
cmpsb
ret
mov
out
hlt
and
sub
js
scas
or
push
lods
dec
adc
push
dec
xor
push
xor
push
arpl
mov
xor
cmp
repz
adc
arpl
or
push
movsl
mov
in
fucomip
sti
inc
pop
mov
inc
loop
jmp
das
aad
daa
in
jmp
out
aas
lods
sub
jg
enter
mov
push
jp
jbe
adc
and
repz
sbb
sub
push
adc
outsb
stc
jns
adc
sahf
scas
inc
dec
arpl
sar
push
incl
ljmp
ja
sub
inc
icebp
add
ljmp
jae
or
fiadds
repnz
mov
shl
inc
clc
jl
lahf
jg
mov
sbb
mov
xchg
ljmp
fnstcw
xchg
cmp
aam
adc
pop
lahf
dec
imul
sbb
std
call
into
cmp
lods
pop
mov
xchg
sbb
cltd
jns
mov
mov
lcall
jmp
adc
and
pusha
mov
push
insb
xor
idiv
push
test
fisttpll
movsl
mov
ret
and
sti
in
popa
sbb
leave
es
rol
in
jp
repnz
imul
add
xchg
cwtl
xor
adc
xchg
lds
insb
jno
sbb
out
addl
adc
jno
jecxz
xor
test
fidivl
je
rol
jp
lcall
adc
test
xchg
xor
cwtl
sub
or
std
sti
into
jo
rorb
xchg
filds
mov
xchg
sub
push
push
pop
fwait
mov
clc
mov
pop
pop
cmp
shlb
xor
enter
outsl
icebp
mov
xor
or
cld
inc
sbb
imul
xchg
jg
outsb
pop
and
aas
push
andb
cmp
ret
pop
inc
cmpsb
int3
mov
fmuls
pop
movsb
cmp
cld
aaa
clc
inc
mov
rep
adc
call
stc
popa
and
ljmp
sub
jnp
or
inc
pop
lds
cmp
xor
ret
fs
pop
std
ljmp
xchg
cmp
test
cmc
push
adc
popa
out
pop
add
push
stos
decl
push
push
sbb
adc
push
mov
loopne
jmp
jmp
cmp
aas
mov
std
arpl
inc
xor
push
lcall
rorb
sbb
push
frstor
cmp
incl
inc
xchg
fwait
insl
or
jnp
and
add
push
ljmp
mov
pop
ret
movsb
add
dec
jns
in
das
andb
outsb
arpl
test
jmp
in
push
enter
or
push
out
inc
mov
jae
mov
push
insb
out
jbe
mov
lret
add
inc
xchg
pushl
sub
scas
je
subl
mov
mov
mov
and
fistps
mov
mov
rclb
cmpsl
mov
jae
arpl
sbb
das
icebp
pop
bound
jg
pop
stos
push
sub
sbb
sub
add
icebp
idiv
cmp
pop
or
nop
cltd
jae
jns
push
mov
mov
jns
ret
xchg
je
rcrl
push
push
xlat
aas
jle
and
ljmp
jns
cmp
insb
xlat
inc
push
add
xchg
sub
lock
lock
scas
jle
mov
sbb
lret
mov
fs
add
ljmp
adc
add
ljmp
pop
out
out
mov
mov
push
adc
loope
sbb
out
sbb
sbb
dec
xor
or
fisttps
pop
push
dec
subl
or
in
jmp
lret
xchg
mov
outsl
scas
pop
hlt
cmpb
repnz
outsl
cmc
jg
cmpsl
add
sbb
sbb
pop
sbb
sub
lret
mov
incb
aas
add
cwtl
test
inc
repz
xchg
dec
lods
std
cmpsl
mov
push
jg
fistps
lahf
insb
fbld
fldt
sub
mov
enter
insl
fnsave
adc
test
xchg
mov
lea
imul
adc
adc
test
out
mov
mov
pushf
jb
int3
inc
add
xchg
xchg
lods
pop
inc
call
or
ret
jmp
leave
jge
inc
mov
sub
data16
cmp
sbb
outsb
iret
or
cmp
xor
pop
ss
jg
mov
xor
adc
mov
mov
mov
loope
pushl
ror
aaa
enter
adc
xchg
popf
xor
inc
aad
cs
and
call
fsts
and
mov
rol
xchg
mov
daa
insl
jg
and
jae
mov
jne
dec
cld
adc
adc
sub
sbb
and
mov
jg
call
jae
lock
pop
insb
imul
clts
repz
loop
add
data16
ds
loop
pushl
sub
cmovbe
stc
adc
ja
pusha
mov
out
call
pop
xchg
insb
lret
test
movl
je
outsl
je
icebp
mov
jle
scas
push
mov
and
outsl
and
mov
jbe
push
jmp
daa
arpl
inc
jp
ss
pushl
sub
shrb
inc
adc
mov
aad
xor
call
push
nop
pop
mov
inc
mov
cmp
push
insb
adc
fistl
mov
jns
aaa
test
cmp
push
mov
or
mov
decl
mov
sub
adc
push
aaa
cs
aam
ljmp
pop
adc
loop
lea
mov
shr
or
inc
movsl
mov
xor
outsl
inc
insl
mov
lea
push
stc
mov
scas
loop
sub
xchg
scas
out
push
inc
aam
adc
add
std
xchg
jbe
push
loope
adc
sub
aas
addr16
push
daa
or
adcl
sbb
out
or
xchg
fists
arpl
sub
cltd
leave
stos
ret
in
pop
mov
inc
cmp
pop
sub
in
inc
add
adc
pop
and
imul
pop
and
cwtl
mov
add
mov
lcall
dec
pusha
pop
nop
push
inc
pop
into
lods
aaa
jnp
xchg
sbb
jg
mov
adc
das
aaa
xchg
enter
and
inc
jmp
shlb
loope
and
out
std
push
cmpsl
push
in
fildll
ljmp
jno
push
push
mov
in
adc
repnz
jg
incl
inc
dec
sub
js
jae
push
cmc
shrl
add
mov
xlat
fadds
xor
mov
iret
mov
cmp
mov
pop
push
mov
xchg
fcomp
mov
or
icebp
xchg
xchg
adc
test
das
lock
mov
out
inc
addl
dec
call
mov
decl
popw
aad
imul
leave
mov
jnp
push
mov
ljmp
decl
std
mov
push
fists
sbb
insb
add
arpl
dec
push
movsb
xor
jae
mov
jmp
notl
mov
daa
js
out
xchg
jns
or
pop
lock
andb
and
into
jae
test
push
cmp
aaa
adc
cmpsl
mov
lcall
dec
xchg
stos
jge
rcll
ja
sbb
outsl
mov
out
aas
mov
jg
pusha
inc
cld
cmpsb
mov
and
out
mov
ja
mov
divb
pop
pusha
jecxz
sub
jnp
sub
push
ljmp
in
push
mov
insb
scas
jge
shr
inc
mov
mov
sbb
fidivs
dec
test
jb
inc
mov
pop
ljmp
scas
out
and
sub
dec
xor
pop
sub
addr16
push
test
add
jg
cmp
push
fs
sub
mov
sbb
popf
leave
inc
out
mov
stos
in
dec
lock
decl
xor
mov
dec
icebp
jb
xchg
cmp
inc
or
push
fistpll
mov
in
push
loopne
sahf
push
push
or
push
jns
dec
std
pushl
mov
subl
and
into
mov
xchg
adc
inc
leave
mov
and
and
inc
and
das
cmc
call
pop
inc
test
pop
stos
ljmp
in
push
daa
add
xchg
in
arpl
std
notl
xrelease
lods
ljmp
addr16
sti
lock
andl
dec
adc
fisttpl
fldenv
call
aad
inc
adc
addb
lret
pop
jp
call
adc
sub
adc
push
in
out
adc
jg
dec
mov
loop
repnz
sub
cli
ljmp
sbb
lds
mov
or
test
gs
adc
cli
pop
sbb
loopne
mov
sar
cmc
inc
mov
jg
mov
out
xor
test
cmp
mov
in
into
xchg
sti
mov
out
jg
mov
or
cli
sub
icebp
loope
pop
rolb
fnsave
sub
fdivl
aaa
push
xor
stos
popa
ret
mov
aas
push
push
jne
hlt
mov
clc
jg
fwait
mov
adc
icebp
xchg
in
push
cmp
dec
pop
bound
xor
nop
sub
out
fnstsw
decl
es
mov
jns
out
lahf
das
nop
lds
insb
hlt
js
mov
in
fdivs
pop
add
add
jle
and
fadd
test
or
je
mov
in
lret
xchg
ficompl
mov
divb
pop
sub
rorb
scas
inc
stos
pop
sar
mov
push
mov
pop
xchg
sbbb
and
xor
dec
stos
inc
enter
repz
idiv
add
cwtl
or
and
mov
data16
jmp
outsb
mov
je
sbb
out
mov
ret
jg
out
movntq
mov
push
sub
pop
cli
pop
cld
cs
cltd
movsb
lcall
lea
add
sbbb
xchg
sarl
aas
xchg
mov
ficoml
testl
dec
and
cmc
xchg
fimuls
adc
sbb
ret
and
mov
popa
dec
xor
imul
and
cmp
stos
pop
sahf
call
cmp
mov
xchg
hlt
lcall
ja
cmpsl
mov
ret
loopne
clc
jmp
inc
add
int3
dec
mov
jae
aaa
mov
clc
jg
mov
repz
int3
mov
sbb
adc
xchg
pop
bound
pop
mov
sub
inc
hlt
int3
fidivs
fldcw
lcall
xorl
mov
cmp
adc
jg
pushl
popf
rclb
dec
pop
je
and
das
pop
push
mov
sarb
inc
mov
filds
es
aad
cli
xor
out
outsb
decl
aam
add
xor
inc
jmp
mov
sbb
in
das
and
inc
cmp
mov
mov
data16
adc
and
sti
rcrl
outsb
test
mov
or
cmp
xchg
imul
test
decl
mov
popf
insl
mov
adc
test
push
cmpsl
inc
scas
clc
push
daa
mov
xlat
mov
mov
pop
dec
mov
jmp
xchg
loopne
ljmp
xchg
push
and
xor
sub
in
imul
dec
lcall
and
push
fcmovnu
repnz
xchg
and
loope
je
or
pop
cld
dec
ss
adc
aas
ljmp
insl
inc
fcomp
sub
jmp
pop
andb
scas
and
mov
fs
notb
das
cmpsb
test
push
bound
incl
movsl
pop
stc
mov
pop
arpl
mov
mov
dec
add
ret
jg
mov
mov
or
dec
ss
call
push
pop
mov
gs
xchg
cmp
ret
mov
ja
je
fstp
push
sarl
aaa
cltd
inc
mov
sub
mov
leave
jmp
push
call
das
icebp
sbb
mov
je
jp
adc
push
outsb
cld
call
jns
mov
sahf
lret
push
or
int
sub
ja
and
inc
jne
cmp
aaa
int
sbb
clc
shlb
or
lret
push
loop
enter
inc
pushl
or
cltd
in
notb
dec
xchg
mov
mov
xchg
mov
lcall
aaa
sti
jbe
adc
call
cmp
inc
push
aaa
fs
jecxz
jle
or
mov
xor
mov
or
mov
call
cmp
sub
loop
popa
hlt
int
call
cld
sahf
lods
or
mov
outsl
ds
repnz
cmp
lds
dec
xchg
scas
inc
fldl
leave
inc
int3
push
cmpsb
xchg
test
push
dec
cmp
out
dec
stc
les
mov
mov
cmpsl
icebp
pop
sbb
stos
incl
dec
jg
rcrb
faddl
xchg
clc
add
in
push
outsb
lret
insb
mov
lock
sbb
mov
cmpsb
cli
ficoml
or
ss
aad
pop
jg
mov
mov
inc
repnz
sbb
jmp
popa
enter
mov
fs
test
mov
cmp
stc
jg
lcall
jp
xchg
es
insb
data16
jle
test
inc
xorl
ljmp
fwait
stos
leave
imul
aaa
push
les
mov
sbb
rcll
sbb
inc
arpl
cmc
cwtl
stos
jle
test
in
jno
push
pushl
std
dec
mov
bound
mov
pop
orl
imul
pop
fstl
dec
lret
inc
inc
repz
jecxz
mov
push
std
inc
dec
dec
lcall
decl
xchg
push
inc
into
dec
into
fucomp
mov
lock
loopne
in
push
mov
xor
cli
mov
lahf
bound
xchg
out
and
lret
stos
cli
mov
dec
imul
stos
add
dec
xchg
cs
cmp
push
add
ljmp
lock
jns
mov
mov
jg
sbb
roll
jb
jmp
mov
push
xchg
pop
adc
mov
rol
aam
cmpsl
pushl
mov
loope
lcall
cmpsb
icebp
std
cmpsb
and
xor
int3
add
and
sub
inc
cmp
inc
ret
add
dec
cmp
push
xchg
jl
mov
push
xchg
cmpsb
das
push
cmc
inc
pop
jno
mov
jo
lea
bnd
jns
push
push
inc
incl
fwait
nop
and
mov
inc
jp
rcrb
cli
outsl
lock
xchg
jno
add
mov
incl
imul
lods
sub
stc
movsl
mov
inc
test
decl
fiadds
add
dec
xor
or
decb
push
mov
popf
xchg
xchg
jb
mov
mov
cli
add
xor
push
ljmp
or
push
lods
sbb
mov
or
out
inc
jg
add
inc
mov
sub
xor
sub
dec
ficoml
cmp
mull
fwait
insl
dec
lock
loopne
lods
sbb
or
cmp
jno
jg,pt
lcall
push
popa
mov
mov
lods
dec
sub
aad
jmp
inc
inc
ret
mov
push
or
lahf
sti
lahf
add
daa
mov
fsts
cmpb
arpl
das
cmc
dec
jl
sahf
je
dec
cmp
fs
into
cmp
adc
pmaxsw
lods
push
mov
and
xchg
repz
sub
xlat
pinsrw
lea
jo
mov
jnp
dec
mov
mov
cmp
imul
jle
mov
lcall
adc
scas
movsl
inc
aam
cmp
push
mov
push
cmp
dec
lods
pop
clc
lcall
mov
mov
stc
mov
fwait
lea
jne
sbb
dec
std
ljmp
mov
data16
adc
sub
mov
loope
in
ds
scas
push
sub
jl
adc
cwtl
inc
adc
sbb
decl
clc
cli
gs
iret
inc
lahf
lds
test
out
adc
pop
call
das
lock
or
jnp
mov
mov
dec
rcl
out
hlt
jge
jb
add
mov
sub
lea
push
mov
lcall
idivb
call
pop
mov
jno
jo
mov
test
pushl
sarl
ss
jle
mov
addr16
inc
call
popa
add
insb
push
xchg
jl
test
inc
mul
xchg
dec
mov
inc
sbb
lods
mov
cmp
jle
push
ljmp
je
mov
inc
xchg
xlat
jg
jae
cmp
iret
les
and
jnp
sbb
pop
or
jmp
outsl
sub
out
mov
mov
mov
sub
mov
xchg
push
jge
push
daa
xor
dec
adc
mov
cld
adc
cld
adc
mov
inc
fwait
xorb
xor
lock
inc
sub
xor
in
decl
xchg
mov
sub
movsl
or
dec
mov
mov
xor
movsl
ja
ret
addr16
adc
cli
push
push
xchg
cmp
lds
dec
arpl
cmc
nop
test
jo
pop
std
ljmp
leave
xor
xor
pop
adc
mov
lods
cmp
jo
call
xchg
mov
lcall
fistpl
xchg
mov
pop
leave
into
out
jge
ljmp
adc
push
sbb
fisubl
sbb
lock
ss
jno
and
sbb
and
incl
das
mov
popf
mov
aas
movsb
daa
push
jb
int3
cmpsl
push
sbb
or
rol
jmp
pop
out
push
push
jle
mov
adc
sub
xchg
push
enter
sar
mov
aam
iret
stc
pop
mov
test
dec
add
negb
and
pop
fadd
sub
in
cmp
ret
fwait
push
hlt
leave
jne
mov
jbe
popa
incl
aad
out
or
mov
push
and
push
and
push
cwtl
movsb
push
sti
xor
mov
cli
in
jmp
pop
and
jmp
popa
add
ss
std
dec
jae,pt
clc
lods
lods
pop
imul
sbb
gs
and
mov
inc
adc
fistpll
mov
bound
adc
mov
push
jg
in
jmp
cmpsl
mov
adc
ret
mov
mov
inc
loopnew
jl
push
jl
dec
xchg
in
push
pop
and
lods
lret
mov
sub
ficoms
outsl
xchg
and
add
inc
pop
xchg
dec
mov
xchg
mov
jne
pop
sbb
inc
add
bound
fwait
lods
jb
in
test
leave
jg
mov
jge
and
add
in
into
subb
je
decl
bound
lahf
push
inc
lahf
cwtl
ss
js
outsb
adc
jl
mov
lods
or
xchg
xchg
call
xchg
clc
jp
mov
mov
decb
cs
lcall
std
nop
cmpsb
test
sarb
rorl
xchg
divl
das
adc
fildll
sar
negl
cli
ljmp
lds
lcall
mov
shlb
loope
repz
push
notb
das
push
shlb
xchg
das
hlt
jmp
add
out
xor
mov
cmpsl
fsubrp
int
mov
idiv
incl
repnz
add
imulb
xchg
push
sbb
cmp
or
dec
push
jnp
jno
adcb
adc
sub
test
test
jmp
insl
test
vmovlps
jmp
in
inc
xchg
loope
or
call
repnz
or
gs
jle
test
mov
inc
je
in
inc
pop
sub
int
js
dec
es
fldt
add
inc
xchg
jle
out
inc
arpl
xor
adc
push
pop
js
sbb
out
lods
xor
mov
outsl
push
cwtl
js
hlt
loope
jg
lcall
push
nop
mov
cld
mov
sbb
mov
xchg
je
pop
cld
cs
inc
movsb
xor
ror
inc
lahf
lea
roll
add
loopne
bound
jge
test
jno
mov
ret
mov
jl
subb
adc
jg
adc
pushl
cmc
popf
out
iret
and
dec
pop
inc
pop
sbb
inc
dec
lahf
pop
adc
jo
enter
push
push
scas
cmp
outsb
icebp
ljmp
lahf
mov
insl
enter
fcomps
mov
fwait
mov
call
clc
pushl
je
aad
cltd
pop
dec
xchg
cmp
pop
mov
cmpl
adcb
decl
hlt
xchg
insl
jle
push
push
adc
js
fdivr
mov
cmp
jmp
ret
in
stos
lods
and
repz
add
loop
decb
or
and
fisubrs
loop
fbld
mov
int3
gs
dec
in
sub
cmp
xlat
incl
icebp
clc
das
out
xor
mov
pusha
iret
push
cmp
pop
call
sub
push
ljmp
movsb
xor
pop
je
lods
lods
adc
push
xchg
imul
sahf
cmp
push
fcompl
fsubrp
jmp
lods
jmp
in
and
xchg
mov
stos
mov
fstpl
daa
jb
fldcw
pop
ret
and
add
jmp
xorl
clc
or
jle
xchg
popf
push
jl
and
xor
clc
cwtl
addr16
fbld
push
jg
aaa
mov
std
jno
mov
sub
push
sbb
inc
cmp
push
loopne
mov
sub
incl
add
dec
push
mov
pop
incl
outsl
mov
fsts
dec
or
daa
fs
add
inc
test
sub
dec
sub
sbb
out
mov
movsb
jnp
inc
lock
push
pushl
imul
clc
cmp
mov
adc
insl
push
xor
es
xor
pushl
std
cld
push
jb
movl
sbb
mov
shl
mov
jle
decl
test
sbb
xchg
push
dec
pop
add
jne
mov
lock
cmc
insl
sbb
aam
imul
roll
jo
call
scas
in
das
cmp
adc
cmp
or
sbbl
icebp
lcall
hlt
inc
xchg
js
out
inc
gs
arpl
sahf
shrb
push
inc
pop
or
or
ljmp
vshufps
push
mov
and
lds
aaa
sbbl
and
and
sub
repz
in
out
push
mov
lock
fisttpll
fdiv
xchg
mov
decl
pop
ljmp
insb
stc
aas
lods
ds
call
mov
adc
mov
stos
jmp
cld
aas
add
adc
repz
mov
outsl
imulb
fcomi
repnz
pop
aas
mov
sti
sbb
add
add
or
clc
popf
inc
and
sahf
sub
mov
loope
call
mov
cmp
lret
pop
mov
lods
cmpsb
cmp
inc
fwait
clc
lahf
xchg
enter
pop
fdivr
jg
ljmp
repnz
xchg
mov
mov
mov
jp
movsl
jg
push
scas
rorl
flds
sub
or
push
adc
call
push
movsb
jne
enter
adc
dec
loopne
push
adc
mov
cli
and
inc
jl
pop
aaa
inc
add
mov
push
cmp
push
mov
mov
testl
cmc
inc
js
les
iret
pop
push
mov
or
mov
ret
sahf
xlat
dec
movsl
mov
leave
sbb
inc
mov
leave
movsb
sbb
sub
push
mov
subb
mov
in
mov
mov
dec
in
inc
or
cmc
das
mov
jle
xor
out
cmp
fst
pushf
adc
pop
clc
cli
sub
xchg
movsb
adc
sarb
mov
push
and
das
inc
lock
cmp
jne
out
adc
js
idivl
mov
jl
stc
bound
xor
jg
inc
xor
xchg
cmp
cmp
push
cmp
ds
inc
clc
lcall
mov
push
sub
mov
dec
jecxz
and
fldcw
push
in
lods
mov
pop
xor
insl
mov
in
xchg
out
decl
add
gs
fwait
mov
shrl
ret
in
pop
pop
inc
jle
movsl
jnp
xchg
inc
or
pop
mov
leave
jg
or
sahf
xor
inc
arpl
push
push
lcall
cmp
sub
rorb
aas
or
pop
in
out
cmp
jb
pop
clc
lods
push
mov
mov
bound
mov
mov
subb
xor
dec
adc
sbb
decl
in
repnz
jae
insb
je
dec
sbbb
jns
lock
mov
dec
lret
int
xchg
or
mov
or
addb
jnp,pt
ds
ljmp
incl
shrb
xchg
sar
aas
outsl
mov
das
pusha
lods
mov
testl
mov
incl
sub
movsb
mov
adc
cmp
jo
cld
push
sub
add
cli
incl
mov
sub
lds
pushf
dec
sub
aaa
push
add
adc
and
pushl
outsl
subl
xorb
push
dec
cmc
fistpll
mov
xchg
dec
add
sub
xchg
aad
pop
scas
mov
jg
das
lret
mov
push
enter
jb
jnp
cmpb
and
dec
in
and
movsl
mov
mov
pop
pop
or
mov
inc
cmp
addr16
sub
pop
enter
fisttps
lock
call
sub
imul
and
fdivp
or
push
push
jnp
cmc
xor
push
ret
testb
or
inc
lcall
pusha
stos
ljmp
hlt
ljmp
jno
cmp
or
es
js
push
xchg
inc
lock
adc
std
lret
dec
dec
mov
inc
mov
and
test
pop
clc
call
adc
icebp
scas
stos
in
rol
or
jg
add
ret
push
decl
or
sbb
inc
and
mov
cmp
jb
int
fucomip
cmc
shlb
dec
dec
stc
lcall
fnstsw
popa
clc
scas
decl
jns
bnd
sbbb
data16
xchg
jp
inc
sbb
test
in
or
test
xlat
inc
xor
bound
jg
lcall
mov
jae
dec
cmp
mov
jnp
fsubr
call
es
and
pop
add
mov
xchg
xchg
aad
adc
adc
pop
push
shr
dec
xchg
jecxz
pop
cmpsl
clc
mov
scas
mov
icebp
les
sbb
adc
add
xchg
call
pop
pop
jecxz
and
mov
lret
add
test
lods
pop
or
bound
shlb
pushl
add
ffree
push
sahf
fucomi
xchg
mov
mulb
sarl
ljmp
pushf
loope
mov
pop
loop
inc
jo
pop
insb
jg
incl
lea
imul
lret
sbb
enter
xchg
clc
ljmp
hlt
test
cmp
push
imul
daa
sub
aaa
jnp
pushl
jae
cmp
arpl
sbbb
jp
outsb
xchg
xor
idiv
popf
jge
cmp
es
add
or
fmull
push
fldenv
mov
fcmove
cmp
fisttpl
add
test
ret
test
sub
int3
shlb
mov
cmpsl
pop
call
inc
and
inc
mov
and
cmc
lds
jecxz
pushl
adc
mov
push
shlb
lahf
stc
pop
inc
mov
divb
mov
pop
pop
push
push
dec
or
mov
sbb
cmp
sarb
ret
subl
test
movsb
ljmp
loop
pop
sub
jbe
dec
inc
ljmp
jo
jge
mov
mov
pushl
push
dec
pushf
mov
mov
dec
mov
xchg
mov
and
fisttpll
lcall
push
out
imul
loope
add
cmp
cmpsl
scas
in
fcomps
mov
push
dec
dec
mov
push
lret
lds
mov
dec
xchg
mov
xchg
xor
outsl
fisubrs
addr16
repnz
in
aas
push
popf
inc
imul
sbb
paddw
lcall
lcall
pop
jg
incl
pop
ds
push
lods
iret
adc
sub
inc
pushl
test
inc
aaa
sarl
aam
mov
fnstsw
mov
dec
decl
inc
mov
jne
fcmove
pop
enter
dec
cmp
loop
adc
jmp
or
mov
sbb
rol
insb
call
fdivs
shlb
loope
push
ret
cmp
push
sti
or
sti
push
adc
addl
int
mov
pop
adc
stos
aam
pushl
sub
cmc
arpl
mov
call
sub
pop
inc
push
out
loopne
cwtl
fwait
popa
stos
subl
pop
ss
cld
repnz
out
rcrb
sub
mov
push
xlat
sbb
decl
pop
imul
aad
sbb
jmp
jg
xlat
xchg
adc
jg
jmp
lret
scas
ret
xor
rolb
addl
pop
call
out
fistpll
js
repz
cmp
hlt
imul
frstor
fstpt
adc
cmc
ljmp
cld
mov
sbb
jne
das
addr16
jecxz
add
mov
frstor
cmc
mov
jle
lahf
cs
ljmp
mov
fimull
and
fstl
imul
pop
loop
mov
sahf
jns
mov
mov
and
dec
nop
lcall
jmp
sarb
and
and
sbb
pushl
mov
xchg
movsb
inc
push
cs
inc
sbb
outsb
mov
push
fadds
fcmovbe
out
sar
jg
fists
mov
jl
mov
cmp
or
mov
dec
mov
mov
inc
jle
sub
call
push
incl
push
movl
subb
push
ja
lods
push
js
cmp
sbbb
pusha
testb
insl
push
push
lds
pop
or
ljmp
push
dec
add
mov
mov
pop
call
push
hlt
rcrb
xchg
out
lock
jg
xor
movsb
outsl
cltd
lds
leave
push
hlt
out
push
dec
mov
pop
out
adc
dec
ljmp
lock
inc
into
insb
mov
add
mov
sbb
fsubr
lcall
das
fstpl
and
out
fldt
sbb
sarb
push
iret
int
les
sub
inc
int
das
mov
mov
repz
inc
pop
cwtl
out
jmp
mov
fsts
xchg
jbe
iret
shlb
out
icebp
xchg
sub
add
and
jnp
dec
xorb
clc
mov
out
jns
dec
sbb
pop
dec
test
stc
mov
dec
mov
inc
mov
aam
popf
push
sub
je
negl
iret
mov
mov
incl
mov
into
enter
mov
lcall
hlt
call
lcall
psrlq
ror
loope
popa
pop
xchg
jmp
clc
mov
or
insl
cld
dec
push
inc
rorl
fiadds
call
int
imul
adc
adc
dec
cld
push
ljmp
xchg
lret
mov
mov
in
mov
bnd
testb
fisubl
pop
jge
xor
and
cmc
mov
push
je
inc
jecxz
mov
fldenv
add
stos
je
negb
jecxz
cmp
jp
imul
icebp
jge
cmp
xor
cmp
out
stos
mov
xor
incl
subl
jl
cmpsb
test
cld
sub
dec
pushl
jl
mov
xchg
xor
cmc
add
sti
dec
jg
push
mov
out
inc
in
xchg
xchg
inc
adc
push
dec
cld
pushl
mov
fsubs
roll
orl
mov
je
int
test
or
cltd
loope
jne
lcall
dec
pop
lret
int3
inc
dec
add
das
cld
jmp
ljmp
lea
dec
mov
gs
push
adc
push
xchg
mov
ljmp
mov
cmp
mov
add
mov
dec
leave
jmp
xor
mov
pop
xchg
or
mov
mov
and
mov
sbb
sub
int
dec
sub
and
adc
cmpsb
mov
mov
in
stos
push
mov
int3
cs
cli
or
dec
gs
jae
xor
sbb
xor
mov
into
sbb
repnz
mov
mov
dec
add
mov
sbb
iret
mov
popa
dec
lods
sub
pop
sbb
add
clc
xor
int
fsin
nop
pop
nop
mov
aad
push
sub
das
adc
imul
pop
cld
repz
jns
pop
fisubrl
sub
push
pop
call
mov
or
push
push
inc
testb
mov
test
movsl
pop
gs
inc
or
fdivrp
fmul
xchg
lret
mov
stos
movsl
sub
mov
pop
jle
jns
in
popl
or
adc
pusha
out
or
pop
aas
xchg
fldcw
jg
icebp
imul
cmpsl
ja
inc
inc
das
cmp
ljmp
mov
sub
adc
pop
out
and
cmp
dec
stos
test
insl
xor
dec
mov
dec
mov
pop
fnstcw
sahf
push
mov
push
lods
cs
and
icebp
push
mul
ja
and
mov
xchg
pop
loop
aad
int3
js
int
aaa
xlat
xchg
loope
lret
lcall
roll
ljmp
xchg
jg
out
pop
test
fisttps
pop
ljmp
mov
jp
mov
ljmp
loop
js
mov
fmull
sarl
or
bound
outsl
dec
shl
adc
sbb
in
sahf
mov
xchg
xchg
sub
push
out
jne
dec
std
dec
xor
dec
fcomi
and
adc
sub
ljmp
xchg
clc
fisttpll
hlt
mov
xlat
mov
sarb
mov
call
add
test
fs
cmp
jge
or
and
sub
inc
std
xor
incl
divl
aam
ss
or
xchg
inc
loope
xchg
sub
mov
cmp
jnp
dec
lea
test
loop
insl
hlt
test
fidivl
jle
mov
pop
loop
into
gs
and
push
into
sbb
mov
mov
and
pop
pop
in
sbb
mov
inc
cmp
xchg
iret
rcrl
pop
aaa
test
ljmp
dec
cmp
dec
inc
rcll
adcb
xor
lcall
cld
outsl
scas
dec
add
jns
jae
xor
sbb
loope
aam
lcall
mov
stc
frstor
aam
mov
xchg
inc
inc
shlb
in
mov
call
pop
xor
cmp
inc
lret
sub
in
xchg
fisubrl
add
call
mov
out
into
in
mov
test
pop
insl
cmp
loop
cwtl
mov
mov
jmp
jns
lcall
mov
add
incl
fistpll
cltd
lret
or
and
out
cltd
sub
in
test
movsb
and
jg
loope
mov
ljmp
fdivs
mov
outsl
lcall
sub
mov
mov
in
outsb
std
jg
xchg
mov
cltd
cwtl
loop
je
jns
rorb
call
or
movsb
jno
adc
and
dec
jl
xchg
cli
call
outsb
jmp
push
cli
xor
mov
sub
cld
cmp
out
int
bound
push
adc
mov
sbb
rcr
das
in
push
jbe
leave
clc
outsl
hlt
call
lods
clc
mov
dec
and
mov
cli
sub
pusha
push
clc
fidivs
pop
dec
bound
jo
idiv
inc
out
jnp
cmp
loopne
int
hlt
jmp
pop
movsl
mov
arpl
sub
fcomps
leave
stos
aam
lcall
mov
scas
sbb
jnp
mov
mov
jne
cmp
bswap
mov
or
adc
xor
loope
jg
jno
popa
pushf
sub
aaa
cmp
int3
adc
clc
jg
xor
mov
xor
mov
mov
jl
lcall
std
sbb
sbbb
sub
pop
jg
outsl
sub
mov
mov
or
or
insb
orb
inc
mov
mov
sbb
pushl
arpl
dec
inc
out
lahf
rcll
cmp
ret
xchg
mov
ficomps
fdivrs
inc
xchg
adc
movsl
xor
andb
pushf
ss
pushl
xor
popa
ret
push
or
and
push
ljmp
test
add
aaa
cmp
inc
or
xor
sub
pop
std
or
insb
jmp
arpl
scas
sarb
stc
add
decl
lcall
jg
jns
jl
cwtl
inc
loopne
mov
jle
repz
ljmp
cmc
ljmp
in
push
aas
xchg
mov
out
ds
outsl
push
loop
mov
rcl
xchg
test
sub
fdivrp
idiv
dec
cs
loop
dec
adc
fs
fwait
xor
negl
mov
mov
sbb
dec
adc
repnz
lcall
cmp
stc
mov
cmp
add
jbe
dec
mov
mov
and
dec
outsb
or
ret
sub
jecxz
or
je
xor
ljmp
cld
xchg
aad
jmp
sti
or
test
stos
lods
or
dec
aas
cmc
sub
inc
sbb
jmp
add
xchg
jmp
lcall
repz
push
andps
xchg
sar
sbb
daa
hlt
cmpsl
push
mov
pop
ds
xchg
push
pop
outsl
decb
cld
mov
out
push
xchg
stc
bound
add
loopne
push
adc
fistpll
mov
jo
mov
fidivrl
adc
mov
adc
and
fildll
push
dec
sbb
mov
call
pusha
mov
imul
sbb
out
aaa
lcall
in
adc
pusha
mov
adc
and
inc
ret
jle
push
cmpsb
fsubrl
lahf
rorl
jno
sbb
push
cmp
mov
adc
xor
cli
push
out
call
insb
stos
inc
dec
out
popa
mov
dec
and
xor
xor
pop
xor
jp
push
icebp
mov
push
jmp
or
cmp
imul
dec
popa
jno
add
call
or
out
adc
pusha
arpl
scas
jb
inc
js
dec
das
cmc
jg
adc
loope
leave
inc
cmpsb
popa
scas
in
sub
mov
mov
add
jl
pop
inc
jmp
pop
or
xchg
mov
push
cmc
inc
decl
int3
mov
arpl
inc
jg
sbb
cmp
xchg
mov
enter
xor
jo
inc
xchg
sti
dec
jmp
mov
cmp
in
mov
push
adc
jmp
mov
test
aas
loopne
mov
jmp
inc
int3
inc
xchg
xor
pop
out
sbb
lcall
sbb
inc
movsb
leave
rcrb
lock
lock
into
ljmp
jg
xchg
inc
dec
in
sbb
aas
gs
aad
pop
push
and
call
test
fcoms
outsl
pusha
lock
sub
dec
fldpi
cli
push
out
ljmp
jmp
dec
leavew
loopne
ds
mov
insb
and
repnz
pusha
das
dec
shlb
push
jg
and
xchg
fwait
ss
out
pop
int
mov
rclb
jmp
cmpsl
adc
mov
xor
aaa
mov
sarb
cmpsl
xchg
cmp
lods
inc
lcall
inc
xor
in
xor
add
adc
inc
cmovs
aad
mov
lahf
sub
xchg
jp
testb
fcmovnbe
lods
push
sub
xchg
cmp
and
addr16
loopne
jl
mov
mov
add
cs
or
jnp
xor
mov
in
fnstsw
fistps
shl
xchg
test
xor
incl
decl
adc
imul
nop
cmp
loopne
inc
mov
scas
dec
iret
adc
mov
inc
pop
push
outsl
or
je
xor
inc
aaa
lcall
into
mov
sti
lods
es
adc
popf
gs
addl
incl
ss
inc
xchg
mov
cmpsb
mov
jo
sub
lcall
jge
mov
decl
push
cld
jg
dec
lock
push
subl
movsl
push
mov
sub
push
push
js
decl
lret
aaa
push
cmp
xor
ss
ja
and
inc
shrl
cmp
mov
xchg
stos
rep
test
xor
lcall
fsubr
push
rcll
imul
push
adc
dec
adc
xchg
add
maskmovq
lods
push
addr16
call
sbb
push
inc
mov
arpl
fstpl
jb
and
iret
adc
pop
xchg
sar
decl
lods
xchg
clc
jge
iret
pop
xor
in
jl
fldcw
lcall
sbb
lods
add
mov
mov
xchg
loopne
sar
jmp
ret
add
cmp
andb
jg
pop
xchg
imulb
hlt
push
popf
pop
cli
sbb
lcall
outsb
jo
sub
xor
ljmp
icebp
jmp
sarb
mov
insb
lods
ja
jns
js
and
cmp
sbb
dec
lret
jge
inc
rcr
mov
pop
lahf
xor
pop
xchg
lcall
repnz
cmp
fisubrs
pop
jmp
xchg
popf
xor
gs
push
adc
scas
xor
lods
jge
cmp
xor
int
ljmp
push
push
adc
sar
imul
pop
pop
xor
cltd
sub
call
pop
mov
daa
fistps
mov
jne
out
pop
insb
xchg
sbb
or
pop
or
call
push
pop
or
les
jae
mov
jg
ljmp
cmpsb
jp
outsb
pop
lahf
cltd
arpl
in
push
xor
loopne
ficoml
incl
sbb
sbb
dec
mov
inc
inc
mov
add
repnz
dec
sbb
fisttpl
mov
push
negl
adc
pushl
loope
pop
cmc
pop
sub
repnz
adc
push
pop
arpl
fmul
pushf
add
test
lret
jl
out
lcall
cmc
iret
loop
clc
mov
xchg
movsl
icebp
repz
inc
hlt
mov
ret
lock
das
hlt
pop
pop
daa
lock
push
cld
in
xor
popl
lcall
incl
push
mov
incb
sub
sbb
mov
pop
cmp
int3
in
stos
ss
and
xor
xor
mov
push
sub
mov
push
xchg
stc
clc
jae
decl
cli
in
mov
jne
pop
pushf
add
rcrl
outsb
add
pop
js
jmp
inc
mov
sbb
sar
outsl
dec
outsb
mov
lea
in
lahf
push
sub
sbb
les
mov
fiadds
in
push
add
stos
arpl
gs
aad
call
test
loope
dec
xor
ljmp
jae
inc
test
incl
push
loop
mov
push
aam
jbe
mov
test
test
fucomi
dec
mov
mov
or
sub
inc
lods
pop
loop
jmp
aas
sbb
adcb
push
popf
decb
xchg
iret
call
dec
or
xchg
jge,pt
insl
xor
or
out
mov
shlb
out
loopne
cld
inc
cmpsl
fnstcw
pop
mov
mov
lcall
js
scas
inc
pop
int3
sti
jl
filds
pop
jne
iret
add
push
inc
cli
pop
aaa
in
lock
or
call
mov
shr
sti
push
popa
pop
scas
sahf
pop
xor
jmp
jb
cmp
jo
imul
push
xchg
sarl
xchg
in
out
adcb
cltd
mov
pop
stos
sub
and
adc
in
mov
loopne
or
mov
pop
int3
inc
xlat
inc
jo
xchg
fcomip
push
imul
mov
inc
lds
nop
push
xchg
or
fimuls
jge
mov
lcall
repnz
clc
xor
in
leave
mov
sub
aad
inc
xchg
enter
nop
mov
mov
outsl
pushl
lcall
mov
push
jns
scas
js
repnz
jae
pushf
cli
imul
lock
sbbb
dec
and
lahf
fwait
loope
ds
add
hlt
ljmp
fiaddl
scas
jo
mov
jg
inc
movsb
jae
in
dec
cmp
lahf
out
ljmp
dec
in
jae
je
jmp
es
push
mov
nop
test
fcoms
pop
jge
or
lcall
ljmp
xchg
sub
push
mov
loopne
jo
jnp
and
jle
mov
rcrb
js
jecxz
jg
hlt
push
cmp
popa
xchg
aam
lret
rolb
pop
dec
packssdw
xchg
clc
dec
out
iret
ljmp
je
push
outsl
lea
rcrl
jbe
xchg
mov
call
fstps
test
fnsave
mov
xchg
jecxz
cmp
std
das
add
and
dec
decl
dec
mov
mov
loop
jmp
arpl
push
idiv
lret
rcr
xor
jns
push
jae
lcall
fcom
out
in
or
mov
leave
or
xor
adc
and
ljmp
test
ret
cli
jg
cmp
mov
fdivs
mov
mov
mov
fimull
cld
incl
lret
dec
out
test
fsts
mull
call
sbb
cmpsl
inc
hlt
cmp
das
push
sub
cltd
mull
sti
cmc
in
pushl
pushf
mov
pop
jge
divb
lea
push
orb
inc
jno
mov
cld
pop
leave
shlb
jae
xchg
jg
pop
dec
xor
test
pop
ja
mov
fisttpll
add
mov
test
push
inc
dec
flds
push
lock
mull
movsb
into
sub
dec
dec
pop
mov
int
jnp
or
pop
aad
std
ljmp
push
imul
loop
icebp
les
imulb
pop
arpl
mov
push
dec
mov
mov
in
push
push
ss
sar
pop
mov
imul
jecxz
sbb
scas
cmpsl
mov
dec
out
push
int
loope
imulb
cwtl
bswap
hlt
insb
cli
dec
test
sbb
movsb
dec
ljmp
rcl
mov
in
stc
xchg
push
sbb
movsl
repz
out
fcoml
aaa
jae
int3
mov
es
jg
cwtl
adc
iret
inc
dec
lahf
adc
pop
mov
dec
or
popf
loope
scas
xor
mov
ds
lea
cltd
scas
mulb
sbbb
jmp
lock
cwtl
aaa
into
cmp
jl
data16
sub
xlat
mov
aas
dec
imul
cmp
in
sub
jnp
mov
and
ret
in
aad
sub
adcb
call
pop
ljmp
or
shll
inc
mov
xchg
jmp
das
mov
fldenv
mov
push
dec
jge
arpl
rorl
mov
mov
hlt
call
test
jae
cwtl
lock
rclb
cmpsl
cwtl
pop
mov
stc
negb
cmp
ret
outsb
and
arpl
pushl
clc
loope
movsl
pusha
stc
aas
arpl
lods
outsb
and
movsl
cld
mov
push
dec
mov
ljmp
cld
and
cli
inc
clc
out
xor
mov
aam
inc
mov
sub
lcall
addr16
lret
pop
popa
push
mov
mov
subl
aam
or
push
lcall
cld
pushl
and
jl
xor
jno
mov
popf
dec
sub
pop
push
decl
xchg
pop
add
adc
mov
rdpmc
pushf
mov
sub
cmpsb
cmpsl
test
test
jbe
push
mov
sub
pop
jl
sub
sub
mov
push
push
push
setno
mov
mov
mov
test
sbb
adc
lods
pop
mov
mov
fucomip
fstpl
mov
sbb
adc
popf
jae
add
call
pop
mov
pop
lret
pop
pushf
sbb
out
pop
dec
adc
push
dec
in
dec
addr16
ja
imul
ja
mov
dec
pushl
xchg
push
xchg
sub
lods
shrl
aas
filds
aas
js
adc
enter
incl
mov
pop
dec
push
mov
jne
cmp
xor
pop
inc
cmp
sub
mov
cmpl
adc
sbb
sub
rolw
mov
cli
je
sub
fnstsw
incl
add
mov
stc
mov
movsb
xlat
lahf
push
and
add
jg
sub
std
out
mov
cmp
mov
sti
sbb
enter
mov
lcall
lret
sbb
gs
loope
sub
in
ljmp
inc
xchg
rcr
inc
pushl
xor
outsl
xchg
fdivs
out
jp
adc
mov
stos
pop
lcall
cmp
rorl
loop
out
push
and
add
sub
pop
inc
push
add
jg
cmp
rcrb
in
mov
movsl
outsl
pop
insb
fimull
xor
loopne
sti
inc
jae
adc
jae
enter
cmpsb
jae
mov
sahf
inc
mov
add
gs
bnd
test
lcall
das
xlat
jns
fldt
addb
push
sahf
pop
jb
pushf
rorl
orb
outsl
add
xor
xchg
insl
xor
fs
or
decl
xor
daa
and
mov
push
call
je
push
fdivl
push
fadds
cld
xor
push
sub
lods
push
fdivr
test
cwtl
ss
stos
jb
daa
sub
jg
dec
or
mov
out
mov
add
in
jge
pusha
or
in
out
arpl
lock
inc
xor
mov
mov
jmp
mov
mov
mov
adc
lret
insb
and
pop
lods
loope
leave
sbb
jmp
das
dec
jb
aaa
cmc
lds
or
cmc
leave
in
outsb
into
cmp
cwtl
ja
mov
loopne
filds
fnstsw
mov
je
mov
std
and
pushl
mov
add
mov
loopne
add
push
inc
or
mov
fs
lcall
scas
add
lds
jmp
arpl
daa
or
fdivl
lds
ss
add
aaa
sub
pop
pop
cli
pushl
outsb
jne
adc
adc
push
cmp
pop
push
adc
pop
add
cltd
cmp
xchg
or
lds
ljmp
cld
push
dec
mov
bound
jno
xlat
out
xor
jge
and
mov
push
sub
mov
mov
add
sbb
arpl
scas
mov
aas
push
decl
in
rclb
mov
out
aam
test
in
das
fnstsw
add
push
arpl
mov
leave
mov
adc
cld
cmp
in
sub
xchg
or
mov
push
cmpsb
cld
jmp
adc
das
jl
jns
sub
fwait
fwait
or
ja
and
cwtl
jg
pusha
mov
pop
fimuls
jl
std
inc
adc
sbb
jecxz
cmc
mov
and
cmp
movsb
lret
push
mov
xlat
call
ljmp
nop
fucomi
out
jg
ret
imul
dec
lret
jmp
add
cmp
sti
insl
and
jp
mov
adc
mov
fs
pop
stos
inc
lock
ljmp
mov
loopne
add
push
xor
jp
xlat
add
test
decl
inc
movsl
fimull
sti
popa
push
add
xchg
jno
in
add
jg
decl
mov
mov
sti
push
lret
outsl
fwait
and
cli
adc
lock
daa
xor
dec
popa
in
stos
push
call
decb
fnstenv
mov
cmpsb
cmp
xor
out
push
mov
call
pop
inc
or
push
push
outsl
lret
cmpsl
and
or
pop
add
test
enter
jg
jmp
pop
cmp
rcrl
dec
ret
pop
cwtl
or
call
sub
pop
sub
push
pop
loopne
dec
dec
sbb
sub
incl
shlb
pop
cmp
dec
test
or
ja
mov
call
mov
fcmovb
mov
mov
sbb
jmp
or
xchg
cli
and
popa
push
ret
insb
dec
cmpsb
pop
outsb
loope
dec
cltd
xchg
ljmp
dec
aas
push
das
in
xchg
push
xor
push
inc
pop
xor
mov
call
push
mov
add
lock
decl
mov
add
mov
ljmp
pop
ds
outsl
hlt
aaa
repnz
test
xchg
jno
lret
inc
mov
fbld
pusha
dec
aad
cltd
mov
add
outsl
adc
mov
nop
add
ljmp
sub
mov
frstor
aaa
pop
dec
fidivrs
ljmp
mov
mov
into
mov
mov
bnd
jl
cmpsl
pop
mov
fidivl
mov
out
mov
mov
shlb
bnd
decl
mov
test
push
out
repz
adc
fst
call
mov
rcrb
lea
aad
or
outsl
fcmovne
push
call
clc
mov
and
test
lcall
fucomip
fstpt
sub
cmp
xchg
dec
inc
pop
pop
setg
lods
push
inc
pop
decl
fisttpll
sbb
mov
inc
call
out
jge
cs
sti
sbb
fisubrl
or
pop
lret
mov
xchg
fwait
cld
call
add
mov
or
sbb
inc
inc
dec
pop
mov
add
stos
shll
rolb
xchg
cmc
mov
fistps
mov
pop
mov
sti
add
jb
enter
aaa
dec
loop
jns
xor
lock
pop
add
sbb
mov
popa
js
dec
dec
dec
mov
ret
pop
dec
add
sbb
lods
cmp
inc
and
lds
dec
std
xchg
mov
cs
jecxz
mov
leave
push
push
jb
stos
xorb
pop
outsl
sub
test
aam
hlt
call
mov
scas
orb
xchg
sbb
in
inc
pop
fisubs
mov
imul
sbb
push
cmp
rol
mov
bound
mov
daa
push
icebp
pop
jg
cli
ret
and
sub
xlat
lods
les
test
or
cmp
ljmp
jmp
lods
mov
jb
add
jg
inc
js
push
popf
mov
adcl
popf
rcrl
cmp
stos
shlb
pushf
fucomip
outsl
icebp
and
mov
sbb
cmp
ss
jge
ljmp
fstpl
testl
jae
inc
ror
sahf
adc
add
or
ss
inc
mov
xor
push
lds
lock
xchg
cmp
push
pcmpeqw
movsb
dec
jo
jle
xlat
lcall
aaa
pop
rcrb
mov
int3
mov
inc
in
movsl
add
ss
pop
xor
or
fmuls
cli
mov
cmp
nop
ljmp
stos
sub
dec
arpl
aaa
push
mov
push
movsl
mov
pop
inc
aaa
cmp
push
sahf
fsubs
scas
jns
adc
daa
pop
loopne
mov
xlat
outsl
daa
xchg
push
jo
push
push
pop
add
push
orb
fistps
cwtl
cmp
add
je
popa
imul
insb
gs
imul
pop
pop
outsl
dec
gs
outsl
jb
push
sti
jg
arpl
gs
outsl
imul
je
popa
insb
push
and
test
push
arpl
gs
js
dec
outsb
inc
sbb
pushl
gs
dec
imul
sub
popa
push
inc
jb
dec
inc
or
inc
inc
push
pop
push
subl
inc
outsw
push
mov
mov
inc
fs
jae
cmovl
rcll
push
bound
jns
test
pop
insb
imul
insb
insb
xor
nop
mov
outsl
int3
fisttpll
jbe
lcall
jae
mov
mov
sbb
adc
bnd
ss
inc
jo
inc
mov
push
or
inc
outsl
insl
jo
sbb
xor
jne
sub
push
inc
mov
pusha
and
and
adc
shlb
sbb
pop
inc
push
or
adc
adc
sub
fs
xor
mov
jecxz
dec
out
sbb
mov
sub
push
push
rcll
push
pusha
dec
cmpsb
mov
xchg
and
into
fs
lcall
add
ret
lods
inc
pop
sarl
sub
andl
loope
xorb
lock
add
fnsave
aas
inc
pop
xorl
test
or
sbb
incl
sbb
push
and
sbb
dec
and
push
sub
gs
inc
mov
lods
add
cltd
inc
sub
lret
or
push
mov
and
ljmp
or
dec
dec
pusha
inc
ss
mov
xor
cwtl
xor
jae
xorb
xchg
rclb
add
push
or
and
mov
out
xor
and
test
inc
mov
dec
enter
sub
add
popa
sub
fmuls
mov
lods
mov
add
and
into
and
adcb
sub
sub
mov
in
and
push
add
add
nop
xchg
adcl
adc
lock
je
add
ljmp
pop
lods
add
sbb
add
push
and
and
inc
pushf
sbb
push
add
imul
add
orl
add
enter
add
dec
and
movsb
inc
bound
mov
adcb
adc
pusha
les
rolb
xor
dec
aad
bound
mov
push
lods
inc
sbb
pop
or
ret
test
inc
arpl
stos
or
inc
mov
addb
lahf
stos
sub
xchg
add
and
push
lock
adc
add
mov
mov
dec
mov
sub
das
push
mov
movsb
or
mov
cld
adc
and
mov
movsl
lret
jae
xchg
or
pusha
out
sub
mov
and
dec
xchg
push
xchg
or
adcb
xor
add
add
add
sub
add
inc
adc
mov
xor
or
sub
adc
sbb
insb
lods
add
sub
cmpb
push
or
pop
shll
adcb
or
inc
adc
xor
test
stos
mov
jae
mov
bound
in
inc
adcl
add
and
add
frstor
add
inc
std
mov
push
push
sub
and
mov
andl
and
rolb
add
jg
add
push
mov
in
inc
mov
or
dec
add
popa
adc
add
inc
sub
inc
xchg
add
adcb
sub
and
sub
adcb
pop
adcl
ret
adc
sub
pop
or
xchg
add
or
out
add
or
pop
push
addb
les
inc
test
int3
inc
bound
or
inc
movsl
sbb
test
mov
addb
adc
or
inc
aam
add
roll
gs
movsl
adcb
push
add
mov
add
test
shr
gs
sub
sub
mov
adc
push
pop
push
push
sbb
mov
push
dec
adcb
icebp
int
inc
push
stos
inc
pop
les
nop
pusha
add
push
bound
xchg
sub
or
push
and
sbb
mov
outsl
pop
xchg
add
out
movsb
and
mov
adc
and
mov
xchg
add
and
and
add
add
add
dec
xchg
mov
mov
inc
test
dec
adc
add
adc
and
adc
mov
and
and
sub
mov
test
inc
jns
add
adcb
add
and
int3
inc
sbb
add
sub
adc
mov
and
sbb
inc
bound
pop
mov
sbb
adc
xor
inc
add
adc
push
pop
adc
cmp
mov
and
sub
push
xchg
adc
mov
ja
sub
sbb
adc
push
and
mov
sub
add
inc
pusha
mov
jns
adc
add
nop
mov
dec
or
push
pop
dec
inc
add
xchg
pop
mov
icebp
notb
pop
add
cmp
icebp
incl
outsl
ja
push
mov
sbb
and
mov
push
jb
ja
push
mov
cmp
popa
addr16
cmpsl
pusha
or
inc
fdivs
test
or
mov
int
jb
aam
outsl
dec
je
jg
mov
dec
inc
outsl
js
inc
outsl
outsb
imul
inc
jne
and
fidivl
test
push
jae
es
xchg
fnsave
jb
xchg
ss
arpl
xchg
adc
movsb
mov
push
add
or
pop
mov
push
inc
add
add
and
adc
add
fdecstp
in
orl
or
adc
rolb
in
mov
and
add
mov
or
aas
push
aaa
mov
xorl
inc
add
add
orl
pusha
cmp
jne
mov
pop
rolb
mov
add
ret
jge
daa
rolb
fldt
outsb
mov
mov
add
xchg
inc
es
shlb
mov
xor
add
mov
xchg
outsb
daa
orb
pop
mov
fadds
jb
nop
jae
mov
pop
pop
xorb
inc
cmp
lock
pop
sbb
add
mov
gs
cmp
sbb
add
add
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
push
add
add
add
addb
add
add
add
add
add
add
add
add
add
dec
add
addb
add
jo
add
cwtl
add
addb
add
rolb
addb
add
add
add
add
add
add
add
add
add
pusha
add
add
loopne
add
add
add
add
add
add
add
add
mov
add
or
aas
add
add
add
add
add
add
add
add
mov
add
and
aas
add
add
add
add
add
add
add
add
fadds
add
inc
loope
add
add
add
add
add
call
sbb
sub
inc
cmp
ret
shr
les
repz
push
inc
inc
add
add
sbb
sub
inc
cmp
ret
shr
les
repz
push
inc
inc
sbb
add
sbb
sub
inc
cmp
ret
shr
les
repz
push
inc
inc
xor
add
hlt
repnz
and
cli
jmp
mov
aam
es
mov
pop
sbb
xor
lcall
sbb
rcll
adc
test
idivb
movsb
cmp
pop
mov
jge
sub
sar
nop
ljmp
lods
inc
jl
outsb
cmpsl
cmp
arpl
outsb
cwtl
adc
sbb
or
insb
mov
mov
test
cmc
into
or
push
aas
push
mov
je
mov
inc
enter
jmp
mov
xor
mov
lret
movsl
pop
mov
pop
divb
leave
je
test
push
std
adc
pop
outsl
jle
mov
cmp
push
push
cmpsb
sub
or
jno
shld
adc
sub
es
or
jge
daa
pop
hlt
cmp
push
push
jg
push
cmpsl
int
aam
sbb
mov
gs
cmpl
dec
aad
pop
or
int3
aad
outsl
or
mul
loopne
fcoml
sub
fimuls
sbbb
xchg
push
into
paddd
data16
scas
xchg
cmpsl
cs
mov
mov
aad
test
xor
in
xor
jne
int
lods
imul
mov
pop
dec
jl
pop
inc
popa
mov
adc
cld
dec
iret
aaa
add
or
push
cltd
jecxz
xor
mov
pop
push
sbb
sti
xor
inc
xor
aaa
in
push
testb
xorl
mov
lods
xor
in
xchg
nop
fs
lods
ljmp
rcr
stos
or
push
sub
stos
dec
mov
xchg
push
out
pushl
inc
mov
adc
iret
mov
loopne
or
mov
lods
dec
push
mov
cwtl
mov
out
pop
call
fistpl
aad
pusha
mov
mov
and
fsubrl
xorl
jge
fbld
dec
sbb
lret
lret
dec
popa
or
push
scas
orb
rclb
push
dec
test
mov
ljmp
xchg
fisubl
outsl
or
push
ret
popf
mov
into
dec
outsb
fwait
imul
pop
aas
shlb
sub
pop
or
xchg
cmpb
scas
or
sub
cmp
loopne
into
fldl
jle
inc
inc
mov
out
and
jmp
pop
dec
out
fdivr
sbb
repnz
jno
test
adc
push
add
lods
pop
insb
jne
sbb
cmc
jnp
jecxz
popf
cmp
fildll
cwtl
dec
in
sahf
push
lret
xor
mov
lock
sbb
rorl
dec
mov
sbb
shl
loope
adc
push
and
fwait
gs
stos
out
addr16
lret
xchg
fidivs
xor
pushf
out
rolb
pop
sub
adc
pop
cmc
jb
cmpsl
enter
and
pop
leave
cbtw
loopne
mov
lcall
into
mov
xorb
push
add
scas
scas
jns
in
xlat
xor
xchg
stc
divb
out
in
rcrb
and
mov
call
rcll
pop
loopne
imul
push
xchg
mov
adc
pushf
add
lods
jp
pop
mov
lret
fstpl
push
cmpsb
pop
icebp
ret
inc
insl
js
mov
stos
rcrb
shll
popa
mov
jle
push
dec
mov
xchg
ljmp
xchg
out
dec
cmpsb
cmp
sbb
and
sub
sets
mov
repz
jmp
dec
push
xor
inc
push
dec
fildl
add
mov
xchg
rolb
mov
rorb
cmp
outsl
push
call
rcr
imul
testl
adc
cmp
push
xchg
dec
and
xlat
ja
mov
and
push
scas
lret
sub
xchg
sub
addr16
sbb
int3
and
xor
dec
inc
mov
dec
roll
into
or
inc
push
movsl
sbb
sahf
xor
xchg
iret
mov
dec
movsl
sub
testb
jnp,pn
lahf
test
push
cmpsb
out
into
hlt
pop
jns
aam
jno
lahf
flds
test
cmpsl
aad
rol
mov
cs
jecxz
cmp
inc
or
and
popf
insb
cmp
and
cs
mov
mov
xchg
pop
jp
push
push
lea
sti
gs
stc
cmp
ss
sahf
push
hlt
push
fsub
aas
add
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
popa
jo
cs
insb
add
gs
xor
ja
outsb
push
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
outsb
jae
jne
jb
pop
push
add
push
gs
imul
imul
jb
arpl
jb
