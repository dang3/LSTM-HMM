sbb
add
mov
punpckhwd
stos
adc
lds
or
sbb
sbb
and
inc
lods
cmp
sti
cli
mov
mov
pop
or
mov
imul
jmp
mov
push
push
pop
sbb
mov
aam
xor
dec
add
popf
test
pop
incb
push
in
repnz
and
or
xchg
xchg
ss
adc
add
jbe
sbb
ja
xchg
adc
inc
call
push
sahf
lahf
xor
enter
cli
mov
xchg
les
daa
std
mov
out
gs
jns
xchg
push
adc
into
cmpsb
int3
insb
cltd
jmp
xchg
enter
xor
sub
outsb
gs
in
cmc
int
call
push
pop
fistl
xor
cmpsb
mov
test
push
and
stos
mov
inc
mov
cmp
imul
push
mov
mov
into
in
mov
pop
mov
hlt
nop
xchg
and
negb
mov
jb
push
aaa
inc
and
cmp
inc
and
lret
fmull
fs
fists
mov
lcall
loopne
jb
add
lcall
or
rcrl
test
mov
cmp
adc
xor
push
daa
mov
add
mov
inc
inc
aas
or
sub
gs
cltd
and
pushf
fistpll
adc
mov
test
cmp
and
lods
mov
filds
aas
pop
push
push
xchg
mov
xchg
sti
fdivs
cwtl
dec
inc
mov
lret
int
cmp
test
icebp
dec
and
jno
sarl
mov
cli
jb
xor
pushf
in
push
mov
push
or
push
inc
fldcw
add
jge
aas
sbb
pop
xchg
enter
in
sub
push
jge
mov
adc
out
and
insb
in
mov
cmp
test
jb
adc
add
xchg
xlat
xor
insl
jecxz
js
mov
das
loopne
adc
cli
pusha
lret
pop
push
enter
int3
xchg
push
int3
insl
push
js
enter
aaa
cmp
dec
or
test
xchg
in
arpl
rcr
xchg
dec
mov
in
cmp
gs
fstpt
push
fstp
cltd
jae
dec
shrl
mov
inc
sbbl
arpl
xor
ret
push
mov
xchg
and
das
scas
ljmp
fucomi
mulb
ljmp
xchg
xor
inc
pop
fwait
mov
inc
xor
fstl
addr16
xor
pop
sbb
sbb
jb
add
fstl
sahf
fstpl
in
sub
push
add
ret
rcl
mov
fsts
or
jae
push
rolb
lcall
mov
test
push
pop
push
xor
xchg
lcall
and
push
imul
adc
and
pop
imul
mov
aaa
lods
xchg
imul
lock
js
cmp
les
mov
jo
push
nop
xchg
jbe
fwait
into
in
push
jnp
xchg
and
and
cltd
lcall
lock
repnz
inc
pop
cmp
mov
data16
cwtl
mov
dec
sbb
pusha
and
aam
addr16
add
cwtl
aad
arpl
mov
push
cmp
push
jo
push
fistpll
mov
dec
scas
jae
lahf
adc
inc
pop
add
sbb
cmpsb
sub
into
stos
sbb
xchg
scas
iret
fs
jp
les
frstor
adc
sbb
or
mov
ljmp
jl
and
pop
fadds
bound
add
cmp
xchg
cmp
les
aad
outsl
or
mov
roll
andl
push
xorb
xor
mov
xchg
fdivrs
pop
into
cld
incl
dec
dec
xor
addr16
mov
dec
mov
inc
and
add
inc
cmp
cmp
mov
cmpsb
stos
inc
pop
or
mov
xchg
add
mov
xor
mov
sub
mov
mov
xchg
push
divb
out
pop
pop
jae
jl
jno
cld
sti
out
lahf
fimuls
push
mov
or
xchg
mov
mov
dec
sub
or
fwait
imull
lds
dec
push
push
stc
or
sub
rol
repnz
adc
cmp
orl
hlt
out
sbb
inc
dec
mov
fbstp
outsb
pushf
lahf
pushf
cltd
sub
lret
and
loop
and
ss
hlt
insl
jns
jp
dec
call
pop
sub
loop
pusha
fnstenv
cwtl
aas
xlat
add
pop
push
and
mov
inc
mov
mov
xchg
pop
mov
les
jg
jle
xchg
pop
xor
repnz
out
lret
mov
and
pop
ror
jge
shll
ja
addl
inc
push
inc
and
xchg
mov
and
loop
lahf
and
hlt
mov
mov
cli
cli
push
out
test
sbb
cltd
and
sub
fstps
mov
add
dec
xor
cmp
int
call
fisttpll
mov
xlat
push
mov
xor
call
je
mov
and
fisttpll
pop
mov
ret
or
jmp
push
and
loope
pushf
lds
adc
pushf
or
push
in
imul
in
or
push
xchg
leave
fidivl
adc
rcr
mov
ljmp
mov
or
mov
pop
out
mov
movsl
inc
pop
movsb
jo
xchg
mov
stc
cmp
aam
inc
mov
shrb
int3
les
mov
and
out
ret
call
test
add
js
sub
and
push
xchg
and
lret
xlat
jmp
shlb
mov
inc
cmpsl
push
fimull
ljmp
push
insb
dec
out
inc
das
nop
xchg
sahf
in
int3
mov
and
dec
setp
scas
stc
dec
sbb
popa
out
je
inc
insb
jae
aam
xchg
or
push
ffree
jo
cmpsl
mov
rcll
pop
adc
cltd
dec
mov
sbb
add
pop
call
dec
daa
or
dec
les
ljmp
fmulp
cmp
jnp
ffree
fists
push
iret
loopne
mov
sub
into
xchg
jne
test
std
leave
push
add
mov
xor
nop
adc
dec
and
push
mov
je
jl
pusha
lock
sbb
arpl
dec
push
cmp
or
push
fdivrl
pop
ficomps
negl
aad
aaa
shll
adc
jge
xchg
cwtl
ss
add
pop
jne
push
rcr
fwait
or
ror
jl
or
mov
sub
test
push
cmp
add
sahf
or
test
pop
xchg
out
mov
enter
movsb
dec
sub
out
inc
xchg
loope
rcrl
sub
subl
push
mov
es
ret
aad
in
ret
in
xor
pop
mov
xchg
lret
sbb
jb
outsb
sub
loop
scas
mov
sbb
test
shll
orb
mov
mov
inc
ss
rcll
pop
add
cmp
rcr
mov
std
jns
sub
aad
ljmp
adc
xor
sbb
inc
sub
mov
clc
add
negb
test
out
adc
repz
cmpsl
pushf
scas
adc
insl
clc
mov
mov
sub
test
repnz
mov
push
add
adc
jl
mov
fwait
and
fsts
je
cmp
loop
loop
ret
and
pop
sbb
xor
adc
mov
jns
jno
das
mov
sbb
insb
adc
cli
mull
xchg
or
sub
or
mov
jmp
test
out
jmp
ss
insb
adc
mov
jle
xor
push
aam
ss
loopne
pop
lret
addr16
add
aaa
mov
sti
sub
cld
movsl
or
and
adc
or
nop
jne
pop
xorb
sbb
int3
and
clc
enter
loope
movsl
xchg
or
sahf
mov
mov
mov
and
je
ret
xchg
add
xchg
mov
add
mov
ror
loope
test
jae
movsl
inc
lea
mov
lahf
bound
faddp
jle
dec
and
pop
cmp
mov
int
dec
jo
insb
push
jmp
dec
mov
nop
daa
fwait
pop
pop
negl
inc
hlt
mov
rclb
movsl
popa
jb
ljmp
sub
outsl
fldt
xchg
pop
pop
xchg
and
dec
in
ljmp
xlat
ja
jge
rolb
push
cmp
insb
icebp
clc
jbe
addr16
pop
sub
mov
clc
lret
lds
popa
sahf
cmp
addr16
cmc
jle
sub
sbb
or
cmp
fwait
inc
dec
lcall
fcompl
outsb
aas
and
mov
stos
fidivrs
or
stos
mov
pop
ret
mov
push
fistpl
push
sub
xor
sarl
ret
jae
repnz
in
xchg
shlb
cmp
cmc
jl
add
mov
mov
cltd
dec
fldcw
xor
jb
sub
jmp
pop
dec
pop
dec
lock
jno
flds
in
rorb
neg
stc
out
push
inc
dec
in
repnz
icebp
test
jne
add
add
orb
out
and
mov
add
push
dec
or
add
mov
aaa
mov
fldt
subb
testb
fmull
outsl
stos
mov
sti
mov
call
repnz
pop
dec
frstor
es
cmp
aam
fdiv
ficoml
push
leave
testb
testb
dec
cs
test
fsubl
in
repz
test
jns
mov
cmpb
insl
int3
lret
jns
shl
out
ror
jle
hlt
push
and
sub
dec
push
movsl
outsl
xchg
and
or
cmp
add
add
cwtl
jnp
cmc
js
ja
xchg
mov
mov
pop
mov
pop
jae
jo
adc
or
or
jns
adc
add
push
popf
or
sahf
mov
mov
xlat
adc
jnp
iret
push
pop
add
inc
mov
lea
subl
push
outsl
mov
add
dec
les
mov
cltd
and
or
adc
mov
and
test
outsb
add
arpl
repnz
data16
outsl
jg
into
call
jecxz
je
notb
fwait
fdivr
popa
cmpb
mov
pusha
sbb
sub
hlt
pop
mov
in
fwait
lahf
adc
jl
jb
clc
cltd
mov
pop
mov
mov
lea
cltd
jnp
scas
movlps
outsb
inc
sub
sub
lret
mov
add
test
mov
jo
dec
icebp
push
cmp
xchg
hlt
add
pop
fistps
sbb
call
out
adc
aam
adc
or
push
rcr
jb
rcrb
ret
push
or
xor
cmp
jno
inc
xchg
cmp
dec
pop
sbb
jg
cmp
pop
mov
sub
xor
hlt
pop
lods
dec
xchg
add
test
mov
xchg
xor
mov
aad
mov
xchg
inc
les
lahf
xor
adc
xchg
push
out
sbb
mov
in
push
pop
sub
jae
sbb
stos
loope
jnp
cmp
sub
mov
aas
imul
stos
add
push
push
cmpsl
in
and
das
xchg
cmp
pop
jg
add
xor
dec
push
pusha
sarl
imul
repz
movsb
leave
test
jg
lcall
sarb
mov
adc
rol
adc
mov
mov
fs
nop
cmp
or
xchg
ds
lahf
pop
scas
cmp
fdivrs
test
xchg
sub
or
in
adc
test
sbb
push
dec
clc
mov
cmp
mov
xchg
cs
jge
imul
fmuls
lahf
notl
scas
mov
lods
dec
movsl
aam
inc
fs
dec
das
and
mov
rcl
int3
cli
scas
sti
mov
rorb
jo
jo
data16
xlat
negb
je
or
xchg
adc
fmul
push
in
nop
outsl
and
sub
lret
jns
decl
cmp
mov
filds
xchg
mov
in
insl
notl
test
pop
scas
jb
les
gs
aam
imul
mov
test
addr16
add
sub
inc
jmp
xchg
xchg
jecxz
xchg
bound
mov
jecxz
insb
jmp
rcl
pop
lods
jo
sahf
addr16
jno
data16
fwait
gs
das
mov
adc
xor
sub
and
mov
stc
jle
lods
addr16
inc
jle
dec
mov
fisubl
out
stos
mov
add
pop
inc
stc
in
sbb
xchg
lock
repz
clc
push
xchg
adc
adc
subb
shrd
mov
pusha
sub
jne
int3
inc
and
rcr
outsl
fnstsw
sbb
mov
insl
notb
add
pop
fstpt
jbe
out
in
sbb
negb
cwtl
dec
lcall
outsb
cltd
inc
stos
imul
pop
lret
push
cltd
jns
pop
mov
pop
sub
pop
xor
jo
lods
movsb
jmp
enter
and
cmp
cmp
mov
cmpsb
dec
fadd
mov
sub
out
lods
adc
mov
mov
stos
mov
das
scas
push
pop
movsb
fstl
and
js
cmpsb
incl
mov
dec
pop
out
inc
scas
xor
dec
outsl
push
sub
jg
inc
popl
cmp
in
xorb
sub
into
push
ret
pop
sbb
xor
xchg
mov
loop
lahf
sbbb
fisttps
push
inc
test
jb
nop
mov
in
jbe
dec
ret
rolb
cwtl
fstl
stc
xchg
or
mov
adc
arpl
inc
pop
xchg
push
add
or
ret
lods
push
xchg
in
inc
mov
mov
adc
outsl
sub
out
dec
aad
xchg
int3
jecxz
cmpb
mov
xchg
pop
or
inc
add
shlb
call
mov
mov
mov
shll
mov
xor
rcl
cmp
mov
roll
jl
pop
enter
and
out
insl
addb
pop
fadd
repz
aad
mov
ds
lahf
sbb
lret
enter
out
mov
mov
and
das
jg
push
or
or
arpl
ret
mov
or
and
push
dec
in
cmp
imul
pop
insb
rcrl
test
pop
lret
mov
add
movsl
std
popa
cmp
xchg
inc
or
insl
sahf
jg
sbb
fs
dec
pop
xor
pop
xchg
fmul
cmpsb
daa
pop
jp
xchg
test
ljmp
xor
jae
inc
cmp
or
gs
xchg
cmp
cmpsl
sbb
push
jnp
ffreep
pusha
cmp
jae
cmc
mov
js
mov
stos
call
dec
cmp
fcom
push
test
test
pusha
aam
mov
fstps
mov
cli
mov
inc
adc
cmpsl
pop
dec
mov
sub
fisttpll
leave
adc
push
loope
sti
add
mov
push
pop
cmp
pop
arpl
test
pop
sbb
outsb
in
fimuls
movsb
xchg
and
inc
or
jnp
mov
mov
stc
dec
outsl
push
icebp
aam
jae
bound
stc
mov
jg
movsl
test
inc
pop
inc
inc
push
mov
ret
icebp
pushf
imul
sub
mov
imul
xchg
and
sbb
in
and
lret
in
lret
cmpb
inc
fs
mov
fiaddl
jo
aam
pushf
mov
sbb
nop
mov
push
bt
loope
ja
jne
push
stc
push
or
fsubl
in
fsubrp
xor
push
adc
mov
outsl
dec
sub
add
loop
jbe
rorl
loopne
rclb
out
cmp
nop
lds
hlt
sti
outsb
sti
mov
jp
sbb
push
repz
leave
or
mov
ja
imul
jae
je
fcom
je
push
mov
xchg
push
mov
sbb
mov
aam
loopne
jns
dec
mov
int
sub
jecxz
arpl
das
addb
enter
adc
lret
jo
lods
push
mov
fcmovb
sbb
in
mov
icebp
stos
mov
ljmp
fcompl
xor
cs
out
js
in
sbb
pop
push
mov
dec
xchg
mov
shlb
in
jge
fcmovne
dec
incb
mov
icebp
lods
mov
pop
xor
dec
mov
pop
xchg
dec
or
mov
cli
and
push
pushf
push
cmc
fstl
js
test
insl
inc
xchg
jmp
add
cmp
xchg
sbb
xchg
dec
ret
dec
sub
jle
push
cld
out
lahf
les
mov
testl
sbb
rorl
fcom
sub
imul
adc
je
stos
mov
sub
int
cmp
or
mov
fidivrs
sbb
into
hlt
mov
loope
push
xchg
inc
imul
mov
arpl
inc
shll
jl
mov
inc
popf
pusha
xchg
add
cmpsl
testl
cmp
into
push
iret
and
jbe
xchg
sub
push
push
lea
push
inc
inc
loopne
mov
imul
xchg
ja
sub
cmp
pop
rcrl
mov
push
or
add
sbb
mov
sub
xchg
mov
out
shrl
xor
adc
arpl
add
fisubrs
lock
cmc
cmp
movsb
dec
or
push
lcall
test
lret
mov
cld
push
adc
sub
adc
dec
stos
clc
hlt
xchg
pop
push
pop
sub
mov
repnz
dec
ds
and
inc
cmp
push
mov
shll
leave
fidivs
mov
sub
xor
jae
adc
inc
mov
and
inc
push
fisubrs
out
xchg
leave
mov
fnsave
fs
fmuls
push
std
lods
mov
lods
je
mov
adc
rclb
inc
in
nop
mov
push
ss
xchg
cmc
movsb
dec
mov
sub
test
and
aaa
lret
push
loopne
xor
or
mov
and
loop
sbb
lods
and
gs
aad
push
bound
mov
or
lret
mov
sub
subb
fnstsw
ror
divb
mov
gs
mov
scas
out
ds
stos
in
sub
cltd
sub
cld
inc
adc
or
push
negl
scas
arpl
in
add
ja
inc
jne
lods
xchg
lods
adc
aad
xlat
adc
xor
and
icebp
leave
adc
xor
cmc
sub
lods
lcall
jmp
jg
lret
push
pusha
jge
rolb
fwait
push
cmp
lock
ret
cmp
mov
cwtl
aam
and
es
jp
hlt
mov
jmpw
ljmp
mov
mov
fdivrs
pop
push
jecxz
cltd
push
jmp
test
pop
push
push
cs
mov
jo
inc
inc
icebp
stos
push
dec
or
out
xchg
xchg
test
push
scas
jg
push
xor
mov
test
in
jle
cmpsb
in
push
push
mov
iret
popa
ljmp
sub
pop
inc
mov
pop
sub
lret
pop
shll
gs
bound
pop
test
jp
cmp
adcl
jmp
pop
pop
fnsave
dec
inc
jl
je
mov
mov
or
cmp
loope
xchg
test
insb
mov
xor
fldl2t
cmp
dec
dec
ret
data16
mov
push
cmpsl
cmp
and
and
out
into
push
in
dec
js
out
out
imul
insl
or
mov
in
mov
test
cs
cmp
and
push
imul
and
sarl
inc
in
cmp
cmp
mov
mov
mov
lahf
xchg
jmp
rcrl
adc
sub
push
or
sahf
mov
push
dec
mov
pop
sub
xor
stos
repnz
ds
sub
xor
sub
inc
out
pusha
dec
cltd
hlt
nop
pop
dec
sti
jmp
jl
inc
add
fdivrl
push
popa
jge
js
rclb
test
addr16
adc
lods
dec
pushf
lcall
sub
std
push
xchg
loope
shl
lret
leave
in
dec
pop
xor
cld
inc
sbb
and
lret
or
jg
mov
or
xchg
in
push
mov
imul
or
icebp
push
push
xor
mov
xor
cmp
adc
push
xchg
jns
push
rorl
nop
jp
cmp
push
mov
jno
fdecstp
cmp
cs
adc
imul
jle
cmp
cmp
loop
pop
fstl
jecxz
cltd
push
pop
shl
push
push
pop
daa
aad
pop
pop
imul
sbb
rep
mov
dec
arpl
inc
aaa
leave
movsb
xchg
rorb
xor
mov
sti
cli
addr16
jo
xor
fcom
jo
sub
add
iret
inc
lea
xor
repz
dec
icebp
ds
out
and
ret
push
aaa
xchg
ss
dec
repnz
adc
leave
adc
cmpsl
mov
test
fistl
pop
xor
mov
fstpt
repnz
ljmp
xchg
inc
lock
push
lods
and
fdivrp
mov
add
inc
scas
test
stos
xlat
decl
test
in
lods
mov
jmp
cli
or
pop
sbb
arpl
dec
les
or
insb
fwait
pop
je
and
cmp
test
rcr
hlt
dec
gs
fucomp
and
mov
mov
rclb
jno
xor
dec
mov
lds
pop
pop
sbb
jnp
mov
cld
mov
out
xchg
xchg
in
imull
sar
pop
mov
cmpsb
xchg
jmp
mov
sub
jmp
flds
cmc
jo
dec
push
or
pop
xorl
mov
mov
jmp
cmp
fld
sbbl
iret
adc
fcos
out
pop
and
out
jnp
js
clc
loopne
cli
in
push
pop
or
fisttpll
ja
sbb
enter
or
push
aad
repnz
popa
and
cmp
enter
call
or
mov
lods
roll
push
push
jl
sub
in
mov
stos
jmp
jmp
addr16
iret
mov
xchg
mov
mov
and
ljmp
jbe
or
addl
pushf
aaa
mov
mov
push
and
mov
dec
rep
out
sub
cwtl
insb
fisttpl
fisttpll
jecxz
adc
mov
dec
jo
cs
jmp
enter
sbbl
inc
test
pushf
ja
xchg
adc
cmc
popa
sub
add
dec
shr
sub
popf
push
push
arpl
pop
cmp
and
repz
cmp
jge
xchg
xchg
push
ljmp
in
gs
add
stos
sbb
aam
mov
cmp
jp
inc
int
call
out
jbe
sbb
or
imul
scas
push
dec
sbb
xchg
test
ds
jo
dec
ja
cli
ds
int3
sbb
in
push
add
push
bound
cmp
aad
pop
repnz
push
xchg
xchg
rcrb
cmp
xchg
aas
mov
xchg
xchg
xchg
call
jl
pop
stos
mov
pushf
or
and
mov
mov
mov
push
test
aas
xor
adc
xchg
pushl
lds
xor
pop
lret
lds
sub
pop
movsb
lahf
dec
inc
mov
cmp
loope
and
rcr
sbb
insl
sub
jge
clc
xor
mov
stos
or
loop
and
imul
dec
jge
insl
mov
rol
mov
stos
jmp
std
dec
or
sahf
jo
mov
pop
mov
adc
push
and
mov
pop
xor
mov
sbb
jns
dec
cwtl
jecxz
adc
call
daa
ds
jo
outsb
repz
adc
movsb
add
mov
sbb
mov
cmp
fcmovnu
loop
test
popf
add
pusha
mov
and
rcrb
ss
loop
mov
push
mov
jmp
xor
movsl
push
push
cmpl
sbb
es
fmuls
divb
out
push
dec
repnz
sub
inc
add
aas
fldl
or
rorb
aaa
xor
dec
mov
add
push
or
ret
or
clc
les
fwait
lea
dec
adc
sbb
cld
cld
dec
add
pop
out
js
dec
mov
adc
inc
inc
pop
xor
fstl
mov
int3
data16
cmpsl
xor
lea
adc
call
xlat
and
rolb
das
mov
sbb
cmc
xchg
add
inc
jns
nop
sbb
lds
mov
push
sar
sahf
push
out
add
jns
inc
pusha
add
movsl
xor
mov
pop
mov
inc
fnstenv
sbb
test
repz
jge
jb
xchg
jne
enter
sti
adc
and
cli
lret
neg
fwait
mov
push
mov
fnstenv
loop
cmpb
pusha
rcl
and
cmp
div
sub
pop
jmp
mov
outsb
xor
cmp
outsb
arpl
mov
jmp
xchg
pop
insl
shr
adc
addr16
js
iret
aaa
aaa
lods
ret
dec
test
dec
ljmp
les
cmpsb
out
or
add
clc
idivl
fnsave
outsl
xor
arpl
jl
sub
ds
push
sbb
dec
movsl
sbb
fildll
pusha
rcrb
loope
cmp
push
adc
add
loopne
cmp
inc
mov
out
scas
sbb
mov
test
lcall
or
jb
xor
mov
push
aad
pop
sub
jmp
data16
add
sub
sub
gs
jo
addr16
fdivrs
xchg
loopne
and
push
jae
cmp
test
mov
mov
in
les
push
imul
jge
std
jge
in
push
push
and
insb
jl
xchg
push
sar
and
inc
into
sub
rcll
jo
adc
outsb
addr16
je
cmp
rorl
std
adc
mov
outsl
jae
loop
sti
or
sti
inc
adc
add
mov
or
xchg
cmp
outsl
jge
mov
sbb
pop
pop
int3
popf
nop
cmp
adcl
enter
or
or
test
push
lds
cmp
loopne
adc
mov
sbb
push
fmuls
jo
xchg
ficomps
fstpt
addb
das
mov
xchg
mov
xchg
mov
sbb
add
adcb
push
je
xchg
inc
divb
xor
cld
clc
loopne
push
sub
jmp
iret
js
dec
sahf
cmp
mov
sbb
fs
ja
ret
orl
jne,pt
xor
andb
outsl
add
and
insb
rorl
sub
mov
lock
xor
in
outsb
aaa
rcl
and
jle
and
adc
stos
and
mov
mov
sbb
in
add
cmp
and
mov
loopne
adc
pop
inc
pop
pop
fwait
sbb
pop
out
jle
dec
loop
mov
adcl
adc
repnz
mov
push
mov
sti
inc
mov
outsb
lahf
dec
add
pop
daa
shll
sbb
mov
cli
fsubrp
dec
tzcnt
imul
jne
or
lret
cli
in
in
mov
hlt
les
adc
sarl
orl
lret
enter
xchg
out
xchg
xchg
rolb
mov
cmp
pop
rorb
aam
mov
aam
mov
aad
cmc
fnstenv
sbb
mov
subb
ljmp
pop
inc
pop
pushf
jne
jae
aaa
pop
lret
nop
gs
cmp
pop
mov
das
dec
rcr
adc
inc
mov
pop
inc
repz
push
mov
dec
push
xchg
cmpsb
lock
sti
sub
cld
dec
mov
xchg
dec
xchg
sahf
arpl
mov
push
popf
xchg
testb
int3
jno
inc
push
xor
cmp
inc
and
frstor
mov
sub
jg
fs
push
jns
sbb
sbbb
jbe
outsb
push
popa
repz
sub
lcall
or
mov
loope
ret
sub
add
inc
adc
push
xchg
jle
mov
cltd
cmpsl
jbe
es
xor
lahf
mov
jbe
inc
ljmp
add
adc
es
inc
adcl
xorb
sub
jno
mov
adc
push
repz
mov
pop
int3
cli
jnp
pop
jl
leave
mov
and
out
es
test
mov
es
pop
fidivrl
mov
push
leave
cmc
inc
dec
dec
cmp
mov
xchg
lahf
mov
push
sbb
sub
rorl
pop
lods
mov
mov
xor
push
xchg
xor
sbb
test
jo
dec
cltd
vphaddwd
stos
ljmp
jg
jg
ds
mov
sar
dec
sub
jns
pop
add
mov
adc
aaa
out
ss
mov
leave
out
insb
popa
test
loop
test
inc
mov
inc
add
or
roll
mov
add
push
push
mov
xchg
push
mov
stos
xorb
into
pop
push
roll
mov
jns
mov
push
repnz
out
pop
push
xor
pop
add
fisttpl
aas
push
and
and
mov
test
jns
mov
movsl
test
rcll
jb
rcrb
pop
fucomip
and
inc
ret
inc
adc
das
cmpsb
testl
add
mov
xchg
inc
mov
lods
loope
cmp
lds
aas
jo
rorl
imul
jg
lods
pusha
inc
ret
in
inc
push
jecxz
xchg
adc
xor
lock
inc
pop
fwait
add
dec
psubq
idivl
sub
cs
in
and
rorl
pop
orl
sub
fidivs
sbb
push
test
mov
add
clc
mov
fisubl
add
xchg
aas
movsb
jne
mov
cltd
aad
xchg
xchg
dec
mov
jo
mov
and
xor
push
or
and
xchg
jmp
adc
out
daa
adc
je
xor
push
leave
cmp
fadds
xchg
push
mov
mov
scas
cmp
inc
je
insl
sub
andl
xor
jne
aas
outsw
mov
adc
pop
movsb
inc
sbb
mov
fisttps
mov
sbb
mov
mov
stos
mov
dec
inc
jnp
pop
in
fs
inc
adc
mov
mov
sbb
inc
ja
aaa
in
inc
ret
cltd
fisttpll
imul
sub
mov
loop,pn
stos
int
aad
xor
nop
stos
sbb
ss
movsl
xchg
and
push
stos
shlb
dec
mov
out
mov
imull
sbb
decl
mov
negb
test
adc
mov
mov
lret
lds
mov
mov
push
out
fs
adc
es
nop
push
mov
mov
cmp
cmpb
mov
add
mov
push
jl
les
ret
jb
pop
xchg
dec
push
lea
inc
jae
pop
sbb
clc
cmc
xchg
sbb
add
pop
sbb
dec
cmpsl
sub
arpl
out
outsb
push
lods
fst
jae
popf
jecxz
push
sub
xchg
cmp
jne
xlat
insl
mov
std
lret
pop
add
arpl
mov
outsl
sahf
imull
lret
inc
mov
fidivs
mov
mov
or
cmp
jbe
or
sub
cmp
test
pop
nop
xchg
push
movsl
push
mov
push
das
xor
xor
les
adc
pop
cmp
sbb
xchg
outsb
mov
cld
popa
jo
das
cli
nop
js
loopne
nop
and
stos
mov
and
push
adc
cli
jo
push
pushf
jo
ret
imul
or
cmpsb
bsr
ret
fs
dec
add
inc
jmp
lret
add
push
iret
jns
sbb
add
insl
cwtl
inc
xchg
add
out
cmpsb
mov
js
data16
loopne
icebp
push
insb
outsb
dec
inc
aam
out
stos
fidivl
fsts
ret
xor
ds
mov
idivl
xor
or
pusha
movsl
xor
cli
insb
rcrl
mov
mov
pop
xchg
push
xchg
or
lret
lods
cli
or
imul
outsl
sbb
push
mov
or
adc
mov
mov
mov
lea
enter
mov
inc
xor
add
lods
cmpb
pop
pop
test
ss
arpl
sarb
rorb
pop
jne
shrb
jg
push
and
add
lea
repz
lcall
jne
sub
inc
mov
shr
inc
sbb
addl
mov
sbb
lret
pop
data16
adc
add
xorl
lds
inc
shlb
mov
movsl
xchg
pop
xor
and
push
jle
mov
stc
inc
cmp
movl
mov
mov
data16
adc
aas
fcomps
clc
cltd
xchg
js
aaa
push
mull
ud1
mov
in
mov
xor
fcomps
lret
aad
mov
test
xchg
js
nop
idivl
mov
in
test
inc
stc
stos
int3
aad
ja
lahf
xchg
add
jo
sarl
push
mov
push
cltd
xchg
rolb
insl
push
sbb
in
adc
sub
mov
push
push
mov
imul
loopne
cmp
push
pop
jecxz
loopne
mov
repnz
pop
shufps
sbb
test
add
add
icebp
jns
lret
mov
popf
mov
shl
ss
jns
jb
jecxz
cmp
mov
call
testb
mov
push
xor
mov
or
lcall
adc
rcrb
sbbl
outsb
les
xchg
jl
lcall
out
xor
sub
dec
sub
addr16
mov
enter
fistpl
sbb
cmpsb
inc
mov
jns
xor
cld
pop
jl
mov
scas
xor
push
rorl
popa
pushf
jb
lods
adc
inc
out
shlb
ja
xor
mov
inc
pusha
js
xchg
cmc
pop
or
jle
or
dec
and
inc
test
popa
std
lret
xchg
mov
xchg
xor
push
push
jns
test
pop
pushf
push
add
pop
mov
pop
jg
nop
and
mov
xorb
adc
enter
arpl
addl
lahf
mov
or
xchg
sbb
or
lods
enter
xchg
mov
mov
jne
or
insl
xor
pop
mov
push
sub
mov
ds
ljmp
scas
xor
cmpsb
lahf
out
shlb
or
mov
xchg
aam
lahf
or
add
adcl
mov
add
outsl
sarl
dec
in
sbb
lock
movsb
test
aam
cmp
push
mov
nop
in
fnstcw
stc
pop
mov
push
pop
sub
dec
loope
enter
push
testl
cwtl
jnp
loopne
cmc
rcll
sub
fs
lods
cltd
fiaddl
fcoml
shll
loop
mov
adc
dec
mov
jno
sbb
rcr
data16
lods
imul
sbb
xchg
repnz
mov
mov
aaa
lods
inc
fbstp
or
mov
sub
pop
inc
test
popa
daa
sbb
xchg
stos
arpl
loop
pusha
repz
popa
and
aam
ret
xchg
jbe
cmpsl
into
jmp
out
jge
data16
cmc
aam
int
sbb
jb
adc
pop
jecxz
sub
mov
in
and
mov
lock
sub
mov
push
cmp
scas
outsl
xor
push
dec
dec
sti
add
mov
fsubrs
aam
outsl
sahf
ja
je
jbe
cs
mov
pop
pop
sub
add
pop
mov
pop
push
das
inc
movb
xchg
inc
ret
push
jecxz
add
mov
sub
xchg
xor
xchg
addr16
shr
jle
sahf
sub
addr16
mov
mov
outsl
adcl
fwait
jg
mov
sahf
cs
mov
test
aad
fwait
cmp
orb
pop
sub
jns
dec
das
and
dec
or
pop
adc
outsb
ljmp
or
ret
les
and
dec
ds
and
mov
sbb
insb
std
jmp
icebp
push
and
iret
mov
sar
push
and
jb
add
lea
test
xchg
fwait
dec
data16
mov
mov
sub
pushf
xlat
sbb
lcall
lcall
mov
push
aaa
sub
jo
cmp
mov
out
pop
lret
cmp
mov
mov
int
jmp
out
lods
cltd
pop
popa
loope
lcall
rcrb
pop
mov
movsl
sbb
arpl
hlt
lahf
js
push
addr16
mov
fs
adc
movsb
jae
mov
cmc
pusha
and
das
bound
jg
lea
clc
je
notl
das
mov
fcomps
cld
xor
arpl
jl
xchg
mov
test
sub
in
les
fstpl
addb
or
sub
sub
out
pop
sub
rorb
add
jmp
arpl
xchg
icebp
pop
sbb
lea
sub
mov
dec
add
pop
pop
mov
mov
mov
sub
mov
ds
mov
cs
sub
outsb
sbb
mov
sti
sti
in
out
shlb
icebp
lahf
lds
imul
push
jnp
scas
xchg
sbb
ds
mov
xchg
jae
neg
and
jb
neg
aam
mov
pop
cmp
sbb
cmc
negb
xlat
stc
fsubrs
adc
loop
sub
pop
mov
xchg
mov
or
jp
or
testl
fsts
test
lcall
cmp
push
lahf
mov
push
cli
leave
sahf
imull
out
inc
add
aaa
mov
xor
mov
dec
insl
sbb
fstpl
lods
addr16
arpl
push
push
stos
or
lcall
cli
das
sub
stc
or
sbb
pushl
sbb
mov
fs
fldenv
jl
and
pop
shrb
xor
mov
xchg
fiadds
and
sbbl
xchg
popl
mov
mov
sbbb
shlb
jg
sbb
dec
fldl
setns
xchg
xor
fidivs
jno
out
push
sti
push
xor
mov
jmp
stc
imul
mov
sar
sub
fisubl
xchg
pop
sbb
mov
daa
add
popa
mov
adc
jbe
and
fisubs
jo
jp
push
pop
inc
jl
jne
pop
xchg
xor
bound
jl
je
mov
jl
inc
adc
mov
ljmp
icebp
pusha
or
add
fsubrl
pop
lock
lods
xchg
aas
stos
pop
clc
int3
js
scas
sarl
inc
dec
xor
xchg
inc
jg
mov
jecxz
repz
sub
lds
xchg
jmp
xor
jns
sub
sbb
pop
mulb
jmp
mov
mov
daa
arpl
push
loope
push
pop
or
push
mov
mov
mov
push
insl
mov
add
cltd
jp
lods
divb
mov
push
aam
or
xor
cli
sti
mov
mov
jp
aaa
je
xchg
nop
test
inc
mov
aaa
fisttpll
adc
and
push
in
shl
clc
jno
shlb
pop
in
jbe
sub
mov
xchg
ds
fdivrs
mov
ficompl
mov
sbb
rclb
repz
iret
push
sbb
mov
pushf
fisubs
lret
push
je
or
int
pop
dec
cli
je
stc
cmp
jno
cmc
and
dec
loopne
sbb
arpl
lcall
fsubrp
push
sbb
icebp
mov
fldcw
lret
in
xchg
inc
sub
sbb
mov
or
mov
pop
push
dec
or
dec
stos
mov
pop
pusha
sub
sub
scas
fstpt
test
fdivrl
fs
sbb
cld
fbld
xchg
mov
cwtl
push
push
call
cmp
xchg
jg
aam
sub
mov
sbb
pop
mov
push
aas
ficomps
fs
sbb
daa
pop
pop
in
idivl
sbb
int3
sti
push
les
repnz
dec
mov
data16
xlat
pop
bts
and
cwtl
jb
cmc
cmpsb
xor
mov
lea
hlt
addr16
test
jle
rorl
dec
mov
mov
cmp
adc
push
or
and
cs
pop
incb
popa
fs
mov
dec
push
leave
push
adc
das
add
dec
xor
movsb
xor
icebp
outsl
and
xchg
sub
movl
dec
mov
stos
mov
sub
xlat
rcll
cmp
dec
je
dec
mov
inc
sahf
or
sbb
inc
aam
inc
loopne
jae
clc
adcb
int
cmp
jmp
mov
jo
mov
sbb
pusha
addr16
insb
lcall
push
fmul
push
aaa
jae
push
cwtl
xlat
leave
cmpsl
and
imul
jns
loopne
lret
sub
icebp
mov
xor
dec
jb
xor
mov
adc
das
jecxz
inc
cli
and
popa
mov
fcmovnb
daa
xor
ljmp
out
incb
stc
mov
lret
push
cli
sub
dec
mov
enter
jle
stos
inc
test
in
pop
cld
repz
mov
push
or
shl
int
xchg
fisttps
enter
lds
out
je
mov
xchg
movsl
pop
mull
test
lea
addr16
sbb
jge
pop
inc
or
jp
aas
std
pop
mov
in
fwait
mov
rep
pop
popa
out
and
icebp
xchg
jp
ja
pop
fsubrl
mov
cs
dec
and
cmpsl
xor
pop
pusha
xchg
fists
mov
daa
pop
movsl
jb
jne
push
mov
push
or
cltd
loop
out
jb
fimull
in
jo
adc
fwait
lods
xchg
sbb
jl,pn
rcll
mov
imul
pushf
std
pop
sbb
jae
jecxz
scas
das
roll
js
mov
fdivs
mov
mov
sbb
and
inc
mov
jo
jecxz
mov
push
jb
add
test
jno
or
inc
cwtl
and
xchg
aaa
mov
sub
pop
iret
ljmp
outsb
loopne
lret
inc
setl
push
adc
cmpsb
out
lcall
sbb
cmp
les
adc
xchg
adc
test
cmp
lret
mov
daa
xchg
mov
cmp
mov
jle
ds
lcall
sbb
mov
cmpsl
add
push
out
das
dec
xor
sub
insl
les
insl
stos
movsl
cmp
fxtract
call
int
sbb
sbb
pop
dec
fimuls
push
aaa
jne
out
and
mov
xchg
aas
add
imul
mov
xor
mov
enter
jl
sub
stos
add
fwait
clc
dec
inc
call
jb
es
and
leave
imul
adcl
loop
jmp
es
inc
jmp
and
push
movsl
es
out
sarl
in
mov
lcall
mov
aad
jnp
xchg
add
es
add
adc
in
fs
pop
stos
sub
mov
mov
stos
cmpsl
pop
fcomip
mov
sbb
lock
jb
cmpsl
lahf
or
inc
lahf
and
addl
outsb
jl
cmp
dec
stos
cmp
push
rorl
dec
orl
decb
enter
adc
pop
pop
scas
ja
xor
jmp
jno
outsb
sub
idivl
push
adc
ds
cwtl
mov
push
pop
cmp
add
push
adc
push
sbb
add
pop
das
testl
rorl
inc
xor
shl
test
lret
mov
inc
sbb
mov
cmp
dec
int3
xchg
add
cmpsb
insl
push
mov
pop
xchg
pop
cmp
and
adc
stos
addr16
mov
daa
add
sbb
add
xor
ja
mov
pop
push
fnsave
xor
or
xlat
dec
in
lea
divb
rcr
imul
ja
ds
dec
sbb
fstps
out
push
std
idivl
xchg
idivl
sarb
push
push
repnz
les
sbb
sub
push
stc
scas
aaa
mov
pop
lret
cli
mov
cmpsb
leave
test
std
rorl
inc
and
loop
shrl
jne
pop
call
inc
lock
jecxz
sub
rorl
popf
xor
cmp
pop
mov
add
divb
mov
lcall
out
test
mov
lret
iret
and
adc
divb
push
pop
lea
mov
add
leave
push
movsb
enter
jbe
push
cmp
das
ljmp
jns
call
lret
outsb
clc
leave
enter
and
setns
push
in
enter
xchg
sub
inc
sbb
stc
and
mov
xchg
inc
out
shll
mov
jne
stos
ret
bound
cmovo
or
mov
mov
das
fsts
and
scas
fstpl
add
iret
ss
scas
push
popf
out
stc
jmp
push
mov
daa
movsb
xchg
xchg
xor
dec
in
cltd
adc
push
sti
jae
cmpsl
jp
and
ja
cmpsb
cmp
cmp
lods
push
loop
in
dec
ja
mov
fisttpl
out
push
push
insb
mov
dec
inc
cmp
shlb
in
mov
mov
aad
imul
jo
outsb
cmpsl
push
fisubrl
mov
jg
pop
aaa
loope
arpl
jmp
or
add
add
push
leave
sbb
cli
dec
cld
lret
sub
dec
test
pop
cmp
sbb
mov
pusha
sbb
arpl
lock
call
push
mov
and
and
xor
ljmp
ficoml
jbe
xor
aas
mov
das
mov
lahf
test
sarw
mov
inc
dec
mov
jecxz
pop
stos
ljmp
movb
adc
inc
sbb
mov
fisttpll
mov
xlat
sub
mov
inc
popa
cmc
cwtl
inc
mov
push
dec
ret
mov
ds
cli
popf
in
hlt
cmp
adc
out
nop
icebp
xor
mov
sarl
mov
mov
fadd
mov
xchg
nop
aaa
lcall
lcall
xchg
sti
outsb
fs
add
movsb
int3
adcl
add
test
emms
std
iret
xchg
xor
sub
scas
or
aad
enter
mov
lods
adc
push
xchg
ret
and
add
inc
stos
fstpl
jns
outsb
jmp
push
mov
test
imul
pop
inc
push
push
lret
rol
xor
shll
sbb
jg
icebp
cmpsl
adc
fildll
bswap
hlt
popa
cmpsl
rclb
xchg
jg
fidivrl
scas
adc
pushf
dec
sub
rcl
sub
test
ficomps
sti
cmp
jo
imul
or
int3
out
xor
loop
or
js
jecxz
je
and
dec
jmp
push
or
dec
jae
jb
shll
cmc
pop
inc
repnz
call
sti
cmp
jmp
shrb
pop
jae
stos
fcmovbe
inc
loop
bound
popf
mov
jg
xchg
std
aaa
adc
or
inc
sti
loope
shrl
mov
push
scas
push
lock
test
nop
cmp
in
sub
bswap
lret
lahf
pop
and
test
dec
xor
popf
mov
sub
xchg
xchg
push
into
jbe
stos
ret
mov
pop
adc
std
lods
data16
jge
and
sub
clc
movsb
or
mov
cmp
push
sbb
data16
cmp
les
jo
jnp
cmp
xchg
cmp
imul
sbb
pop
mov
cltd
out
mov
adc
mov
add
mov
lret
fstpt
pop
fsubp
daa
cwtl
jb
pop
xchg
mov
mov
mov
in
mov
fimull
jge
jle
ror
fnstsw
call
add
mov
mov
inc
lahf
inc
xchg
add
sbb
addr16
pop
ljmp
xor
xchg
lock
ret
mov
cmp
adc
xor
jecxz
push
imul
fdivrs
ja
mov
outsb
cmp
scas
xchg
arpl
dec
arpl
sub
or
gs
jbe
dec
pop
adc
ret
jae
inc
adc
fimuls
inc
xor
inc
sbb
inc
sub
mov
dec
push
int3
xlat
rcrb
test
cmp
push
or
ds
cld
rcrl
mov
shll
push
sub
aam
out
mov
inc
ror
mov
aam
jo
dec
adc
xor
jnp
cmp
lea
scas
movsl
adc
mov
mov
cmp
inc
outsl
jbe
loopne
inc
ret
scas
outsb
jl
popf
fcmovne
jecxz
mov
aad
fdivrl
push
and
dec
push
and
pop
stos
test
bound
inc
in
mov
pop
push
pop
dec
pop
fxch
dec
pop
inc
jne
ljmp
jp
mov
mov
inc
aas
mov
out
or
mov
imul
pop
ja
loope
mov
popf
mull
shlb
addb
and
popf
add
stc
lods
ficompl
add
sbb
inc
inc
ds
ds
cmp
cs
ds
icebp
pop
dec
or
adc
data16
arpl
jmp
jmp
xchg
dec
pop
fcompl
mov
mov
mov
pop
dec
popf
push
rclb
jnp
test
mov
int
add
arpl
pop
mov
pushf
rcrl
push
mov
sarl
imul
xchg
test
adc
mov
jae
dec
lret
push
in
cmp
pop
gs
daa
sbb
pop
lret
js
leave
icebp
jecxz
sub
inc
dec
lahf
jle
push
loope
out
lods
add
fs
xor
mov
jbe
scas
mov
xor
cwtl
andb
mov
movsl
inc
scas
adc
push
mov
les
test
pop
shr
push
and
idivl
jecxz
les
fwait
lea
mov
xchg
or
fucomp
mov
pusha
xor
mov
mov
ds
mov
xorb
clc
pushf
aad
pop
gs
pop
out
xor
jge
or
sub
pushf
add
adc
out
add
mov
stc
into
repz
jno
jg
add
jecxz
and
sbb
fsubl
cld
mov
jnp
into
push
mov
jo
sbb
fmul
and
jnp
in
fistpll
push
add
and
call
test
jo
mov
outsl
mov
inc
adc
mov
mov
sbb
in
ficoml
das
xchg
dec
sub
xor
cmc
and
jmp
inc
inc
mov
mov
ror
in
stos
mov
cmpsb
sub
cwtl
orb
jo
xchg
jle
jne
in
xor
push
jl
and
ja
sub
add
js
pause
push
sbb
xchg
stc
movsl
and
mov
ret
sbb
gs
repz
shlb
pop
aam
test
pop
mov
or
mov
jmp
adc
lret
gs
jnp
jmp
jp
outsb
mov
or
repnz
or
movsl
dec
sbb
xor
xchg
test
add
daa
push
add
cmc
inc
and
push
pop
adc
mov
and
push
jns
sub
xchg
xlat
fs
mov
or
pusha
dec
js
jp
in
cmp
jecxz
scas
arpl
xchg
fstpt
mov
imull
loopne
sbb
adc
aam
jecxz
sub
lret
xor
inc
inc
cmp
dec
enter
inc
push
pushf
and
and
popf
out
fmulp
mov
lret
adc
push
repz
xchg
rcr
pop
bound
lret
push
mov
es
mov
pop
inc
insl
adc
pop
sahf
ss
jns
fwait
std
push
push
stos
cs
outsl
shll
mov
adc
adc
dec
pusha
loopne
sarb
cmp
std
lea
call
insl
jae
and
or
xchg
call
mov
in
mov
pop
fisubrs
inc
xchg
lahf
sbb
xchg
xchg
and
dec
mov
pop
cmp
jl
cmp
jns
lock
aad
or
iret
push
stc
push
cmpsl
mov
or
out
lods
rclb
test
in
push
andb
push
jb
jl
mov
jnp
fcmovu
sub
jge
xor
divb
std
sahf
jp
clc
test
sbb
mov
in
xorl
pushf
fcomi
gs
pop
push
pop
inc
push
mov
push
sti
xchg
add
in
fiadds
lret
mov
imull
jno
ret
dec
push
lock
mov
rcrb
hlt
mov
ss
iret
lock
mov
mov
adc
cwtl
mov
fdivr
pop
fwait
inc
mov
mov
inc
xor
or
mov
xor
aas
gs
push
in
or
inc
shrb
pop
js
dec
sbb
xlat
cmpsl
mov
push
sahf
jl
pop
jg
dec
pop
mov
rolb
xchg
or
push
shl
nop
adc
jb
lock
lahf
and
mov
shlb
mov
push
dec
adcl
lret
pop
dec
ja
ljmp
mov
mov
dec
mov
into
jne
add
inc
out
jne
push
mov
nop
daa
cmc
xchg
jl
xchg
mov
into
push
cs
subb
dec
push
cld
cmp
xchg
call
and
push
aam
xor
xchg
push
fwait
xchg
ja
jle
cmp
divl
and
loope
idivb
or
add
push
addr16
js
js
stc
pop
andl
or
xor
rcrl
xchg
fs
jnp
inc
std
push
pusha
push
push
xchg
pushf
jge
xor
stos
es
int3
and
push
scas
and
les
cmp
data16
fsubrs
pop
and
aaa
inc
sahf
lea
lock
test
mov
aam
mov
push
and
jae
jge
push
jo
out
mov
cmp
xor
es
dec
inc
inc
xchg
dec
cmp
loope
imul
xchg
inc
cmpsl
mov
xor
rcll
lods
out
outsb
bound
xchg
ret
gs
mov
or
pop
incb
xor
add
dec
inc
sub
push
into
imul
xchg
rolb
sti
gs
and
jge
jecxz
out
or
inc
pop
adc
adc
push
push
loop
dec
hlt
xchg
aaa
mov
in
shr
cmp
and
and
sub
je
ds
jns
cmp
mov
jl
adc
jp
inc
addr16
dec
jo
inc
test
push
cs
mov
push
dec
push
aaa
repz
or
shl
loopne
and
mov
jg
pop
mov
xchg
add
mov
imull
loopne,pn
or
cmpl
sahf
add
cmp
sub
xlat
int
cld
cmc
int
sbbb
lret
jb
ja
xor
jmp
cmpsb
xor
sub
sbb
dec
fwait
sub
xorb
dec
pop
mov
sarb
sbb
xor
lock
sub
xor
jg
mov
mov
mov
cmc
pop
cltd
or
jg
sub
push
lods
push
aad
inc
mov
xor
mov
popf
clc
adcb
shrb
js
mov
data16
fildl
jb
lods
dec
nop
dec
mov
icebp
pop
xchg
lock
mov
xlat
shll
mov
xor
cld
cld
stc
cmp
pushf
scas
xchg
push
faddl
movsl
xchg
jge
xor
cwtl
inc
sahf
pop
mov
mov
lods
xchg
leave
loope
shrb
rcrb
xchg
xchg
ds
cltd
xchg
cld
inc
inc
lahf
adc
mov
loopne
dec
mov
jecxz
xor
xor
sahf
out
mov
mov
scas
xchg
jno
jb
rclb
movsl
movsb
xor
gs
and
daa
mov
pop
mov
stos
jb
push
movsl
ret
mov
add
int
in
dec
push
xchg
mov
das
push
mov
lods
xor
outsb
inc
mov
and
push
rorl
orl
nop
test
xchg
lods
fs
jle
lahf
in
repnz
mov
mov
les
jp
push
nop
cmp
mov
data16
push
push
cmp
mov
sub
scas
sub
mov
in
jle
pop
xchg
dec
pop
or
and
aam
mov
dec
adc
adc
jb
jnp
imul
outsb
jl
sbb
pop
call
inc
inc
xlat
cmp
out
jb
scas
cmp
push
adc
faddl
ret
addl
pop
lods
fdivrp
sub
test
cmpsl
sub
sahf
xchg
scas
xor
sahf
jno
add
shll
or
fcmovbe
dec
lock
sbb
dec
insl
dec
cld
add
cmp
adc
ja
and
test
stos
mov
xor
mov
stc
cmpsl
sbb
xchg
sbb
cld
add
insb
push
inc
xor
jmp
jne
mov
movsb
lods
mov
mov
clc
inc
pop
jae
test
cltd
pop
cmp
xor
das
out
test
dec
adcl
mov
sbb
mov
pop
xor
imul
mov
ss
aaa
loope
pop
pop
sub
inc
dec
add
filds
mov
adc
in
inc
add
loop
push
push
xchg
les
loopne
ret
aad
mov
push
or
lods
jmp
pop
jmp
adc
add
or
mov
inc
xchg
xchg
pop
and
inc
push
inc
jb
jle
push
jmp
inc
mov
cli
or
and
lcall
mov
push
xchg
sahf
lock
daa
mov
out
cmp
and
jge
jae
lret
in
lret
retw
test
sbb
out
das
mov
cwtl
aaa
jne
and
roll
mov
bound
mov
sub
mov
mov
xchg
push
aas
push
pop
fldcw
loopne
testl
inc
shrb
cmc
mov
and
sbbb
and
mov
aaa
clc
dec
cs
xor
int3
adc
pop
ja
dec
cmp
sbb
fnstcw
insl
sbb
jl
mov
shrl
scas
dec
pop
push
jne
xchg
loopne
cmp
mov
cmpl
ds
push
xchg
es
mov
iret
inc
mov
inc
leave
outsb
outsl
xchg
inc
or
mov
pop
pop
xchg
xor
call
outsb
adc
inc
xchg
jbe
jmp
hlt
mov
fnstcw
cmpps
adc
out
mov
cmc
lahf
sub
rcrl
in
in
adc
adc
mov
repnz
scas
jl
in
lea
mov
test
add
lock
mov
jne
fwait
arpl
add
and
lcall
dec
mov
clc
adc
iret
cmp
pop
fxch
sbb
fsub
out
adc
inc
cmpsl
cmp
ret
fwait
cmpsl
jnp
lds
inc
bound
lret
adc
push
lret
dec
mov
sti
mov
fstpl
inc
mov
or
dec
push
sbb
and
jmp
mov
mov
cmpsb
pusha
push
adc
flds
pop
js
test
mov
repnz
sahf
test
mov
xchg
sbb
and
movsl
add
xlat
cmp
or
cmp
or
dec
divb
nop
xchg
repz
pop
clc
jae
push
dec
mov
or
jo
xchg
stos
xor
pop
repnz
fistpll
imul
lret
or
jge
fstpt
lock
call
data16
mov
sub
daa
adc
pop
dec
lret
fisttps
sbb
out
test
and
sbb
add
push
out
div
negl
fstps
in
loopne
jle
and
insb
lods
or
cmp
pop
gs
frstor
jge
je
lret
push
sub
jno
scas
scas
fldenv
sub
je
pand
xchg
int3
dec
mov
movsb
cmp
das
pop
dec
stc
xor
call
jecxz
sar
jno,pn
and
fnstenv
es
dec
lret
push
adc
out
push
cmovs
imul
pop
xchg
ljmp
mov
les
dec
imul
jl
dec
mov
test
xor
fadds
sahf
sbb
cmp
sbb
jge
je
into
pop
push
xchg
fldt
sti
test
mov
inc
jb
rcl
dec
lahf
fdivs
test
cmp
dec
xor
call
mov
and
pop
test
jecxz
or
adcl
in
lods
jp
add
adc
scas
out
inc
andb
ret
mov
mov
add
scas
push
cmp
shrb
push
iret
cmpsb
inc
push
xchg
fsub
out
outsb
out
mov
pop
fnsave
mov
aad
adc
add
aas
dec
leave
adcb
popf
pusha
or
mov
movsl
jo
cmp
outsl
pop
sbb
pop
lcall
divl
dec
lods
lods
xchg
fadd
out
stos
inc
dec
sub
inc
pop
inc
xlat
cmc
pusha
sub
stos
dec
pop
push
in
mov
add
push
fistpl
cmp
add
mov
and
in
dec
aaa
push
xor
mov
rclb
lcall
lret
idivb
test
xchg
jo
hlt
inc
mov
aad
sbb
enter
loopne
xchg
mov
aam
or
mov
dec
or
pop
xor
out
les
and
xor
fdiv
xor
sbb
cld
sbb
cmp
pop
imul
mov
in
push
mov
shlb
out
ret
push
jbe
jp
mov
mov
cmp
sbb
lahf
or
decl
ss
sbb
or
adc
xchg
push
sub
add
in
lret
push
in
das
sub
push
ret
in
adc
jno
mov
sub
dec
add
aaa
push
xchg
nop
ja
bound
pop
int
push
int
sub
pop
and
xchg
xor
data16
adc
lds
add
cmp
xchg
sbb
outsb
ror
mov
push
mov
mov
iret
imul
cld
xchg
push
pop
dec
lds
xchg
cmp
xchg
mov
dec
imul
ja
adc
dec
out
sub
or
adc
mov
fcompl
test
add
adc
sbb
bound
jb
lods
sbb
adc
ljmp
mov
sub
leavew
push
push
cmp
outsl
in
sbb
sub
std
add
nop
rol
daa
jmp
or
movsb
test
xor
lahf
iret
push
xchg
mov
inc
rcll
and
int3
xor
sbb
mov
sub
sub
xor
scas
adc
adc
mov
cld
cs
add
push
xor
xchg
mov
fstpt
and
fcoml
hlt
pop
aam
xchg
scas
cmp
cmpsb
test
clc
xchg
lret
dec
mov
lcall
sbb
icebp
fnclex
leave
leave
xchg
addr16
jecxz
jp
out
xor
mov
dec
imul
ljmp
mov
jl
imul
sbb
cltd
pop
mov
mov
stos
or
inc
mov
pop
push
mov
test
andb
xor
int
cld
ss
mov
push
les
fs
jbe
outsl
inc
lret
add
pop
push
scas
sub
xlat
imul
push
insl
cmpsl
adc
lea
mov
or
inc
and
add
push
dec
enter
incb
sbb
daa
jne
hlt
lock
cmp
push
iret
lods
xchg
push
mov
jecxz
ja
decb
inc
xchg
xchg
mov
jns
lret
dec
mov
pop
cld
inc
adc
dec
adc
fnsave
cmpsb
push
mov
inc
pop
sbb
push
rorb
dec
mov
xchg
enter
cmp
push
push
jnp
in
jae
sbb
sahf
test
push
loopne
mov
xchg
adc
sti
pop
adc
clc
pop
lods
shll
pop
xor
jo
sbb
jbe
movb
add
adc
push
aad
sub
popa
inc
adc
jb
mov
pop
pop
push
dec
hlt
dec
int3
insl
movsb
fwait
add
dec
mov
jnp
addb
mov
or
cmpb
xchg
jecxz
or
mov
ss
push
lock
jle
pop
sbb
adc
into
dec
xor
add
imul
adc
adc
insb
sbb
and
popf
sbbb
lods
add
inc
pop
adcb
into
fchs
or
dec
fsqrt
or
stos
fidivs
loopne
cmp
pushf
mov
lea
lea
out
mov
dec
test
scas
cmp
cmpsl
imul
sbb
cld
inc
pusha
dec
lods
popf
adc
daa
mov
xor
es
mov
cmp
pop
cmpsl
stos
popf
lcall
mov
jnp
aam
movsb
push
dec
lret
or
or
push
push
out
pusha
jnp
cld
divb
mov
mov
inc
mov
rcrb
movsl
mov
adc
sbb
push
insl
out
daa
and
push
push
mov
loope
dec
lcall
out
shr
sbb
pusha
test
arpl
sbb
mov
inc
adc
and
inc
cmp
mov
add
and
jmp
add
out
push
pop
pop
scas
xchg
out
mov
inc
jne
jne
div
idivb
cli
xchg
das
subl
add
xor
jns
add
repz
cmp
stos
inc
jns
sub
das
inc
cld
mov
ret
or
add
or
cmc
fsubrl
or
cld
test
jb
and
movsb
add
jnp
xor
lods
add
xlat
repnz
lret
and
add
sub
lods
push
sti
gs
mov
inc
scas
iret
or
inc
push
add
pop
cmp
mov
cmp
mov
dec
stc
pop
inc
add
ljmp
divb
test
addr16
cs
int3
cmp
loopne
adc
xchg
cmp
add
fstl
mov
lret
mov
mov
add
in
xor
mov
cltd
popf
cltd
mov
mov
pop
sbb
push
sub
outsl
adcl
repnz
adc
insl
int3
inc
sbb
lock
insb
push
jb
pop
xor
push
jno
negl
imul
xchg
test
add
pop
incl
outsl
adc
and
cmp
lods
inc
dec
loopne
inc
lea
lods
data16
fwait
adc
and
push
pop
in
test
imul
jnp
mov
add
jge
fcompl
dec
adc
push
lods
xor
mov
popa
ror
lods
mov
test
outsb
jmp
fcmovne
or
adc
cmp
les
out
rorl
and
out
movsl
and
sbb
and
dec
daa
fcmovnu
icebp
xlat
jle
mov
cmp
or
hlt
cmc
pop
lahf
and
jmp
push
cld
mov
cwtl
stos
sbb
mov
stc
lock
cs
adc
mov
sbbl
ror
jmp
hlt
into
fs
pop
mov
clc
cwtl
lea
xchg
fcomi
icebp
ljmp
mov
pusha
adc
pop
in
jno
data16
pop
fdecstp
push
push
push
clc
push
mov
leave
inc
push
pusha
lock
loopnew
or
mov
mov
xchg
sub
dec
scas
mov
test
pop
jo
cmp
daa
imul
gs
cmp
fwait
or
test
test
movb
lret
fcmovb
sbb
adc
test
outsl
into
xor
loopne
adc
out
cmp
cmc
push
add
sbb
mov
mov
shl
add
dec
dec
jle
repz
xchg
and
sub
xlat
push
aam
xlat
sub
mov
xor
push
xor
inc
enter
sub
aam
sbb
push
add
sbbb
cwtl
or
adc
adc
xlat
jnp
push
and
push
pop
or
pop
lods
out
pop
fwait
mov
and
ljmp
std
pushf
pop
popa
sub
into
sti
dec
data16
loopne
push
data16
loope
test
in
clc
loop
sub
jmp
adc
repz
mov
and
xor
add
dec
fwait
insl
cwtl
xchg
nop
and
fldenv
out
nop
aam
repz
mov
push
mov
fadd
das
mulb
imul
jle
push
imul
cmpsb
sbb
hlt
adc
test
das
andl
imul
adc
repnz
mov
pusha
adc
mov
mov
roll
push
ror
leave
sub
lcall
inc
xchg
xor
lahf
inc
sub
sub
movsb
xor
jl
sbb
test
xchg
dec
sub
push
imul
and
jle
cli
aam
adc
adc
aaa
pop
divps
jae
stos
lods
dec
xchg
imul
out
rclb
les
pop
call
xor
push
cmpsl
dec
push
jbe
xchg
loopne
mov
cmc
sbb
les
jae
cmp
loop
adc
push
and
xchg
adc
push
inc
clc
jmp
mov
out
lret
loope
int
cmp
sahf
mov
add
dec
pop
mov
push
mov
mov
mov
mov
dec
adc
sub
shlb
push
js
hlt
xor
sub
imul
xchg
pusha
xor
loopne
cmc
movsb
push
int3
inc
lret
cmp
mov
in
out
and
fwait
add
pop
mov
add
pop
fcoml
jp
inc
mov
dec
mov
pop
rorl
add
sub
nop
into
xchg
stc
ret
push
dec
icebp
mov
push
lea
add
xchg
bound
repz
loopne
and
pop
or
pop
dec
push
push
notb
dec
add
movsl
xor
sub
into
or
shrb
inc
xor
push
push
inc
inc
adc
or
mov
sub
push
inc
lds
push
lahf
push
fisubrs
pop
dec
adc
sbbl
add
xchg
mov
ret
insl
cwtl
add
mov
outsl
adc
and
fbld
and
lods
jp
je
jns
inc
sub
sbb
and
jne
xor
push
fstl
push
mov
and
dec
sahf
lret
or
push
pop
mov
daa
sub
mov
dec
inc
push
out
scas
dec
insl
hlt
fcoms
mov
insb
inc
rcrl
and
mov
fidivs
sarb
test
out
adc
inc
popf
mov
popf
fisttpl
sarl
xor
mov
stos
cmp
dec
cwtl
pushf
mov
fs
incl
jb
or
jo
test
int3
cmp
jo
and
movsl
and
add
shl
out
es
dec
jmp
mov
or
aaa
jge
and
ja
sbb
leave
pop
xchg
push
bound
sbb
in
jo
mov
cld
sbb
jno
dec
dec
movsb
and
mov
jno
jg
bnd
mov
jo
add
xchg
fldl
mov
inc
xor
popa
pop
mov
mulb
mov
mov
sub
push
sub
or
mov
inc
cmpsl
sarl
pusha
into
rcrl
and
mov
or
fmuls
rorb
cs
imul
push
add
fisttps
add
cld
cmp
jae
outsl
sub
popa
inc
push
in
es
xchg
adc
sub
call
cli
jns
pop
lahf
dec
insb
cld
xchg
push
inc
subb
cmp
pushf
pusha
ja
pusha
aaa
sbb
xor
inc
fstpt
mov
test
sbb
xlat
pop
jae
xor
out
test
lcall
adc
mov
pop
mov
je
pop
out
mov
or
cmp
push
mov
sbb
pop
cmp
mov
rcl
cli
dec
push
imul
ficompl
loopne
pop
fneni(8087
jge
fisubrs
xor
jne
or
std
in
int3
sub
outsl
ja
or
lahf
mov
call
pushw
lea
mov
mov
adc
pushl
xor
pop
xor
jae
lahf
test
lcall
and
js
addl
bound
in
ljmp
mov
ficoml
sub
imul
test
xbegin
dec
std
sahf
test
fcmove
hlt
stos
inc
ret
jecxz
movsl
adc
inc
imul
jnp
mov
push
push
lock
shrb
xor
call
inc
loop
or
jmp
jmp
movb
filds
inc
cli
pop
fistpl
inc
mov
ret
test
fs
mov
sbb
sbb
sub
mov
jmp
bound
orb
lret
outsl
lods
mov
push
mov
in
xchg
dec
xchg
mov
push
js
xchg
push
or
sub
jnp
popf
inc
fs
aaa
xchg
mov
push
outsl
mov
mov
ret
imul
aas
cmpsl
aas
fmuls
sbb
leave
addr16
insb
and
dec
mov
and
cmp
sti
stos
icebp
and
cs
xchg
fbstp
sub
faddl
loopne
sbb
mov
xor
jnp
xlat
mov
stos
jl
fdivr
pop
and
push
mov
dec
and
xor
in
ret
in
nop
xchg
loop
add
jnp
ret
add
icebp
adc
loop
mov
or
sbb
dec
push
lods
xchg
movsl
je
sbb
cmpsl
pop
lock
pop
mov
pop
out
push
sar
lock
pusha
es
sbb
sti
repz
push
add
cmpsb
push
mov
push
out
add
in
push
arpl
loop
neg
dec
mov
cmp
and
jmp
dec
shlb
xchg
fs
ds
push
and
xchg
imul
addr16
movsl
dec
aas
xchg
xchg
daa
sbb
xchg
jns
fcomps
cmp
mov
stc
out
push
mov
xor
outsl
icebp
dec
jmp
sarl
shlb
into
sbb
in
sbb
xlat
add
std
inc
dec
push
out
movsb
push
rclb
pop
in
mov
cld
mov
mov
leave
sbb
jge
pop
call
or
pop
aaa
cmp
xchg
add
add
fcompl
fists
lods
jl
pushf
xor
mov
pop
loopne
cmpsb
sbb
cmp
ret
pop
jmp
xchg
fistl
jle
mov
test
jl
xor
lret
cwtl
inc
popf
dec
outsl
inc
xchg
push
mov
mov
sarb
leave
pop
lods
call
inc
dec
in
pushf
mov
in
jnp
pop
and
insl
ficoms
cwtl
ret
sbb
sbb
xchg
scas
fisttps
mov
add
loopne
cmp
and
and
mov
fmulp
repz
leave
add
cmp
neg
xchg
mov
int
gs
jg
pop
adc
xorl
and
cmp
cmp
jns
scas
dec
aam
push
mov
mov
insl
mov
xchg
jno
insb
adc
adc
xlat
mov
fwait
cmpl
pop
sahf
mov
notl
mov
add
mov
mov
xor
sbbl
jge
push
mov
nop
jno
inc
rcrb
stos
lret
mov
mov
fisttpl
add
cld
xor
shld
lock
aad
mov
jmp
enter
mulb
outsl
cld
cmp
arpl
sbbb
pop
repnz
mov
dec
cli
push
pop
cli
sbb
shl
mov
jbe
rcrl
ja
pop
sbb
imul
push
jmp
cmp
test
imull
add
mov
cs
in
inc
cs
pushf
sahf
push
insb
sub
pop
out
xchg
out
imul
or
sarl
cmp
sub
sub
add
jmp
data16
jg
pop
orl
repz
subl
pop
cld
and
popa
sahf
into
movb
pop
aad
jl
xchg
test
mov
mov
into
jp
jmp
clc
push
adc
cmpsl
jmp
adc
mov
pop
cmp
in
jl
loop
push
js
in
mov
ljmp
mov
push
mov
xchg
into
or
or
jns
aaa
jae
xor
or
mov
aaa
aad
adcb
loopne
inc
push
xorl
jmp
fdivrl
and
lcall
and
mov
mov
mov
sbb
jae
call
or
xchg
sahf
mov
cltd
inc
jg
sysenter
push
inc
rcr
dec
dec
xchg
shlb
cld
imul
jne
je
outsl
mov
rclb
mov
push
pop
loopne
scas
xchg
cwtl
jmp
add
mov
shll
jle
jmp
and
xor
adc
xlat
insl
outsl
push
jl
sub
sbb
dec
sbb
mov
test
loope
sbb
dec
pop
xchg
mov
xchg
or
xchg
imul
test
pop
into
dec
jb
xor
inc
adcl
shll
subl
ret
or
add
cld
inc
test
ss
jno
test
fbld
or
rcrb
in
fbld
xchg
loope
add
push
mov
inc
dec
xlat
mov
pusha
inc
jge
lret
adc
js
cmp
add
pop
pop
cmp
fwait
ss
iret
decb
icebp
cli
negl
jmp
nop
pushf
fnstcw
imul
insb
nop
add
loopne
mull
data16
pop
test
pusha
adc
inc
movlps
mov
pop
ret
pop
rorb
out
jbe
cmpsb
dec
sub
adc
inc
cmp
hlt
cmpsl
movsl
push
mov
push
jl
xchg
push
add
pop
pop
lret
ret
xchg
or
jno
push
pop
lret
push
shl
adc
stos
dec
pop
in
mov
ss
out
push
incl
mov
mov
out
fstps
xchg
ds
cs
pop
and
in
sbb
push
mov
mov
cmp
mov
ficomps
sbb
loopne
scas
addr16
bound
insb
int
and
adc
lret
fs
ljmp
shlb
jnp
imull
sti
in
and
data16
dec
mov
int
mov
jecxz
dec
das
lods
stos
leave
or
mov
out
fisubrs
add
iret
jbe
push
mov
push
push
cs
jno
mov
xchg
xchg
xor
cmpsb
mov
mov
adc
cmc
cmp
mov
stos
out
or
sbb
les
repz
push
mov
das
ret
pushf
or
jo
scas
jnp
int3
mov
add
pop
sti
sub
int
insb
jno
addr16
xor
jge
push
call
bound
std
and
lea
aaa
mov
and
add
sub
sub
in
lock
mov
push
push
ds
jge
add
addb
popa
mov
cld
jmp
xor
jecxz
mov
ja
xchg
sarb
movl
mov
ficoml
jecxz
call
movsl
or
andl
xorl
mov
xor
xor
pop
loopne
cwtl
and
jns
sub
mov
mov
mov
cli
pop
repz
pop
mull
movsb
push
or
ret
imul
pop
lret
sbb
jne
adc
jno
push
push
out
push
shll
mov
dec
loopne
sub
pop
lea
add
imul
divl
mov
mov
add
test
pusha
in
push
fs
bound
or
orl
fiaddl
xchg
mov
sub
push
ret
faddl
jecxz
xchg
and
push
inc
pop
inc
mov
dec
inc
pop
addr16
jg
xchg
push
rol
insl
push
outsb
push
test
push
in
hlt
add
fldenv
sbb
sbb
popf
mov
cli
jecxz
jmp
in
fistpl
pop
xor
push
push
fistpll
mov
add
pop
mov
dec
xor
sti
mov
mov
lcall
pop
jmp
je
mov
xor
xchg
jmp
push
push
out
lret
sub
fstpt
sub
jge
jo
sbb
aas
test
in
sbb
fs
pop
cs
sbb
test
xchg
adc
mov
inc
int3
push
sti
mov
rcrl
lock
negl
xor
sbb
in
rcrl
adc
adc
cmpsl
mov
xchg
lods
dec
xchg
pop
mov
int
adc
fadds
sbb
test
xchg
and
dec
mov
pop
outsb
xchg
movsb
fcoml
jbe
dec
fidivrs
aas
rolb
xchg
aas
sbb
mov
lahf
add
xchg
shrl
pop
xchg
icebp
stos
movb
cwtl
push
cmp
jne
sub
xchg
add
pop
push
insl
and
scas
data16
push
cmpsl
daa
lahf
cmp
es
mov
in
push
xchg
cmp
movsb
jns
xchg
add
imul
inc
jbe
inc
shll
jmp
movsl
xchg
adc
mov
loop
push
popa
sub
or
or
sub
jbe
rclb
adc
or
jnp
push
pop
aad
nop
fwait
pusha
add
push
ljmp
pop
xorb
xchg
leave
pop
arpl
dec
or
incb
mov
in
iret
icebp
fsts
ja
dec
mov
sbb
out
dec
add
sbb
pushf
int
push
sbb
push
mov
pop
xlat
lods
lcall
lcall
pop
push
mov
popl
fists
leave
into
lret
sub
sbb
adc
es
or
inc
inc
not
mov
inc
xchg
pop
pop
popa
insl
insb
cwtl
jle
cmp
lret
mov
jo
cltd
fistl
adc
aam
popa
repz
cmp
mov
ja
imul
push
mov
or
add
xchg
mov
push
jge
add
test
xor
ss
mov
rcl
iret
ja
adc
sahf
cmp
fisubrs
xor
loop
fisttps
pop
jecxz
add
dec
cli
sarl
fildll
fucomi
push
and
and
ret
inc
xor
xor
adcb
data16
movsl
jl
int
fstl
dec
mov
sbb
insb
mov
fwait
jns
fst
ljmp
leave
sub
mov
cs
dec
push
shlb
lds
cmp
mov
test
sub
es
xorb
dec
mov
ss
les
fwait
lret
pusha
xlat
aam
dec
cmc
ficomps
fsubs
stos
xor
jle
and
mov
cmp
in
sti
inc
ficoml
mov
sub
cmp
sub
adcb
cmp
cli
cs
and
aaa
and
mov
add
test
ja
stos
jl,pn
mov
sbb
int3
adc
mov
rcl
cmp
sub
or
lcall
std
stos
mov
add
pop
out
ficoms
andb
aad
call
sub
inc
popf
jge
lea
ss
sbb
mov
fcmovnb
mov
dec
or
pop
loop
out
fmulp
xchg
dec
add
or
add
pop
clc
iret
daa
rol
jecxz
lret
inc
pop
jmp
in
popa
imul
rcll
pop
out
pop
scas
and
push
dec
jg
mov
loope
sbb
jbe
pop
fwait
cmc
ds
data16
xchg
sub
cs
fwait
popf
mov
mov
inc
pop
loope
lods
lods
int
dec
shlb
inc
fs
clc
imul
mov
scas
mov
pop
ss
cwtl
mov
push
fnstcw
data16
movl
addr16
xor
mov
adc
loop
dec
das
pushf
adc
inc
int
mov
inc
xor
fisttpl
sub
stos
xor
les
lock
ljmp
lahf
pop
mov
fwait
mov
sub
test
jmp
cmpsb
adc
inc
xchg
inc
fnstenv
lea
fyl2xp1
subb
cwtl
push
xor
add
nop
inc
leave
push
repnz
cmp
outsb
dec
xchg
leave
pmullw
jae
fiaddl
mov
dec
cmc
sub
test
scas
and
or
sbb
nop
outsl
or
dec
adc
les
rcl
je
loope
test
dec
ljmp
sbb
fisttpll
daa
jne
push
adc
jp
mov
mov
nop
sub
clc
inc
xlat
mov
xchg
inc
push
mov
pop
fistps
ja
pop
mov
out
ljmp
push
mov
in
stc
mov
xor
sub
pusha
addr16
pop
mov
pop
jmp
mov
sbb
mov
test
mov
sbb
sbb
pop
loop
rclb
cmc
sarw
mov
cs
movsb
mov
test
cmp
inc
xor
cld
test
jb
push
xchg
sub
pop
in
xor
mov
sub
arpl
pop
mov
or
sbb
sub
push
lock
mov
cmp
lods
daa
sti
aam
jne
lock
or
ficoms
fidivs
cmp
inc
mov
stc
and
jg
loope
mov
shll
cwtl
dec
sub
mov
xchg
cwtl
jle
mov
jmp
adc
sbb
lahf
enter
add
stc
int3
adc
dec
outsl
test
add
in
arpl
mov
mov
fld
sti
fcmovu
mov
je
dec
mov
addr16
iret
ss
ret
sbb
add
sbb
mov
pop
cmc
fwait
daa
andl
cs
sbb
mov
jnp
mov
sbb
cmp
ret
outsl
jmp
fcoml
mov
inc
mov
xchg
cmp
and
int
pop
and
mov
cmp
sbb
inc
clc
aas
stos
cmp
ret
fidivs
test
and
fcmovne
cld
lds
hlt
aad
push
adc
jb
jecxz
rcll
ss
scas
rcll
xlat
mov
inc
mov
daa
in
jbe
in
pop
add
dec
test
push
sbb
ret
outsl
jmp
push
inc
and
pop
mov
sub
pop
stos
stos
mov
std
jge,pt
inc
and
jno
mov
lock
enter
adc
cmc
icebp
popa
insb
loop
arpl
ret
psubb
mov
inc
test
dec
xor
xchg
pop
mov
xor
mov
andl
rcrb
movsl
dec
jno
push
out
push
add
add
push
push
mov
xor
adc
imul
and
inc
out
inc
or
mov
icebp
repz
mov
push
mov
mov
push
dec
aas
add
add
lahf
pop
sbb
aas
sbb
and
mov
adc
loopne
mov
pop
push
xchg
xor
sub
arpl
lea
mov
mov
es
cmpsb
insl
ja
sbb
mov
cltd
mov
shr
lret
adc
lea
jne
xor
push
xchg
jns
inc
xchg
jp
xorb
inc
lret
test
lea
enter
loop
lock
scas
mov
mov
add
or
mov
jecxz
mov
testb
push
test
stos
push
loopne
adc
push
insl
loopw
sahf
pop
pop
mov
dec
mov
hlt
cwtl
inc
add
popf
jbe
insl
sub
fdivs
mov
push
shll
call
add
xchg
jae
and
rorb
fs
cltd
mov
xor
push
inc
ds
fs
push
je
mov
cmp
cmp
sbb
push
adc
xchg
ja
nop
jg
pop
jecxz
jecxz
cmp
mov
repz
sbb
pop
rclw
movsb
cld
sbb
xor
and
lods
je
je
test
jb
mov
mov
pushf
cmp
fsubr
cld
sti
fmul
packuswb
int
jbe
cmp
fnstsw
pop
push
jp
xchg
cmpsl
cltd
fwait
sahf
lcall
xchg
in
std
lret
aas
pop
addr16
std
xor
mov
xchg
add
push
aas
das
js
pop
scas
add
cmc
ds
or
sbb
daa
cmp
jg
cmpsb
addr16
hlt
add
push
idiv
cmc
fcomps
jmp
imul
adc
clc
rclb
nop
pop
scas
test
sub
testb
insl
push
xlat
sti
cmp
push
push
bound
cmpb
cmpsb
inc
push
ds
adc
cmc
pop
cmc
or
clc
push
fdivs
inc
or
sub
dec
mov
pop
in
cmp
adc
jg
inc
addr16
pop
sti
inc
mov
push
cs
or
adc
pop
push
cwtl
iret
push
push
push
test
loopne
add
xchg
cmp
mov
aaa
mov
in
push
mov
jle
push
mov
jp
mov
cld
add
mov
inc
outsl
lea
sbb
cmp
push
sti
dec
sbb
fstl
out
mov
cmp
int
cmp
clc
lock
dec
xlat
pop
sbb
enter
lcall
push
lods
icebp
mov
cmp
stc
lea
arpl
sbb
add
sub
sbb
jno
mov
adcb
stc
lea
add
cmp
rcrb
dec
daa
outsl
loop
mov
jnp
cmpsl
jmp
sti
push
adc
lds
lret
mov
pusha
cld
sub
int3
lret
addb
mov
out
jno
shrl
stos
cmp
pop
cmpsl
leave
push
lds
sbb
in
push
mov
in
fnstcw
xchg
lret
mov
push
lahf
pop
add
or
out
out
mov
push
mov
sub
cmc
jp
lret
xlat
lea
in
dec
lret
push
jbe
test
insl
movsb
or
add
ja
lret
scas
pop
outsl
int3
jl
cmp
and
xlat
xlat
xor
cli
iret
std
test
push
ljmp
sbb
imul
pushf
call
mov
mov
mov
incl
test
call
sti
out
enter
add
ret
insl
addl
mov
imul
mov
jecxz
test
jmp
icebp
dec
fildl
cli
pop
imull
movsl
cli
mov
xchg
mov
or
jle
mov
out
sub
push
fwait
push
mov
inc
push
notb
ss
sbb
frstor
shll
push
lods
repz
xlat
pop
cmc
add
lods
test
aad
lea
mov
fisttpll
in
xchg
xor
add
dec
mov
test
fldenv
pop
dec
jns
mov
inc
xchg
test
mov
ret
pop
xor
pop
out
cmp
call
out
lock
push
sbb
mov
aaa
testl
fnstsw
dec
int
sbb
cmpb
jmp
sti
in
std
cmp
ret
and
add
notl
jmp
sub
or
mov
pushf
loope
jg
into
imulb
add
lock
fnstenv
shrb
xchg
lret
icebp
sbb
xor
divl
andb
xchg
ret
adc
jno
insl
push
sub
popf
aad
cmp
outsl
xor
pop
loop
mov
pop
enter
push
pop
pop
mov
enter
jbe
xor
mov
daa
sbb
movsl
and
fisubrs
mov
pop
loope
sbb
jae
cmpsl
push
sbb
jae
mov
jecxz
sub
into
out
scas
mov
sub
sub
mov
jp
out
ja
add
adc
push
movsl
movsl
mov
lods
and
bound
xlat
xor
pusha
iret
das
pop
in
roll
jne
pop
in
popa
pop
mov
jmp
or
mov
push
sarb
fisttpll
rorl
es
fdivrl
and
pop
push
jnp
adc
mov
push
mov
inc
fisttps
push
push
cmc
mov
hlt
mov
mov
negl
jae
cmp
iret
pusha
cmp
push
xlat
mov
or
fidivrl
inc
rorl
push
or
stos
fs
movsb
incl
fldl
jp
fwait
mov
mov
clc
in
pusha
movsl
and
xchg
sar
pop
pushf
test
adc
pop
pop
mov
cmc
mov
lahf
sub
call
sti
mov
add
cwtl
or
pushf
test
cmc
jns
in
or
inc
into
in
jb
mov
ss
mov
add
std
jbe
cmc
out
out
jno
xlat
cmpsb
adc
repz
and
outsb
pop
decl
cmp
xchg
mov
loop
loopne
cmp
les
ljmp
jns
iret
fstpt
das
pop
sub
cmpsb
stc
fwait
rcrb
cs
call
imul
and
pop
lret
decl
cmp
aad
sub
outsb
mov
popfw
bound
mov
push
fsubrp
xchg
movsb
out
test
dec
jno
imul
loop
mul
stc
sub
les
inc
adc
mov
mov
add
out
mov
and
dec
mov
iret
cmpsl
lret
xor
insb
cld
inc
and
pop
enter
stc
inc
mov
xor
dec
insl
xchg
pop
int
loop
xor
ja,pn
outsb
cmp
imul
add
lahf
pop
mov
mov
inc
pushf
aad
dec
repz
cld
mov
in
cli
adc
lds
rorb
enter
and
subl
cs
or
lahf
int
cltd
xor
mov
es
pop
lods
ss
cmp
sbb
movsl
leave
mov
xchg
ficoml
in
in
pop
pusha
arpl
and
imul
sub
inc
sbb
adc
insl
enter
jbe
lods
out
dec
gs
xor
into
repz
int3
std
test
test
pop
mov
cmc
sub
call
divl
dec
frstor
inc
movsl
jecxz
int3
out
imul
test
and
outsl
jns
cmpsb
stos
dec
ljmp
mov
rorb
mov
dec
fsubrl
or
ret
mov
hlt
mov
lds
fisubl
add
divl
outsl
dec
enter
add
sub
cmp
and
leave
xchg
pop
icebp
xchg
in
shll
mov
ljmpw
pop
ficoms
sbb
dec
cmp
cmp
xchg
xlat
add
or
insb
mov
andb
in
cltd
xor
mov
jp
dec
out
scas
fists
mov
aaa
jb
lcall
cmp
mov
push
sub
mov
dec
test
rep
ds
pusha
mov
jecxz
daa
and
inc
jo
lahf
cwtl
jnp
ds
fdivl
js
lahf
movsb
push
cmp
fadd
jno
bound
stos
push
sub
mov
mov
xlat
jmp
lcall
iret
into
int3
shr
mov
jl
dec
dec
mov
pop
aaa
fidivl
jno
jne
lea
or
stos
lods
jbe
add
cltd
mov
adcl
push
sbb
xor
xchg
into
push
mov
test
lds
dec
in
push
pop
push
mulb
outsb
leave
adc
stos
lret
mov
pop
cmpsl
ficoms
mov
jb
add
adc
int
imul
iret
sub
pop
popl
or
pop
out
or
sbb
dec
addb
mov
icebp
out
xchg
movsb
pop
jle
nop
mov
ret
inc
pop
adcb
sbb
mov
repz
pop
into
into
pusha
jnp
aad
dec
sub
ret
fidivrl
pop
inc
mov
inc
push
inc
xchg
xor
jg
add
hlt
mov
fstps
jg
cmp
fistpll
pop
pop
and
dec
test
leave
push
adc
sar
sub
push
push
and
cmp
xchg
lahf
jae
dec
lahf
or
int
dec
das
bound
dec
cltd
mov
xchg
aaa
cld
mov
stos
outsb
mov
cmpsb
mov
or
fistpll
add
xchg
sahf
int
mov
xchg
adc
mov
adcb
cmp
cmp
bound
addr16
aam
mov
mov
mov
test
into
aam
pop
in
xchg
xchg
out
push
sub
ljmp
mov
sub
mov
or
arpl
int3
pop
pop
les
hlt
imul
leave
lds
or
lahf
and
roll
jg
insb
out
out
cmpsl
jg
mov
sub
mov
repz
dec
pop
jo
aam
dec
mov
push
pop
enter
jne
dec
adc
xor
movsb
out
insl
dec
add
enter
je
lods
stc
add
stos
rcrb
lds
and
lret
xchg
adc
jbe
aas
sub
popa
push
xchg
mov
push
add
xchg
push
push
loop
sbb
sbb
movsl
out
push
xchg
ret
mov
mov
aas
xor
sub
test
jle
inc
sahf
pop
fisubl
adc
mov
jecxz
cmp
cltd
das
jae
jp
pop
mov
xchg
cmp
ss
xchg
jb
xor
or
enter
or
sbb
jns
xorb
imul
mov
jmp
enter
hlt
leave
push
push
sbb
jle
jo
mov
mov
push
and
imul
jle
lret
cmp
or
lods
mov
outsb
lock
int3
clc
push
push
push
cmp
sbb
mov
or
jmp
icebp
and
push
test
loop
mov
mov
xchg
js
repz
mov
in
cmp
inc
mov
add
test
lahf
and
push
mov
int
insl
je
cmpsl
outsl
inc
mov
stos
insb
hlt
mov
iret
mov
cmp
xor
sarl
xor
scas
sahf
jns
adc
jne
push
jl
push
jl
sub
mov
cmpsb
mov
mov
pop
in
sub
js
and
fucom
cltd
inc
clc
jle
dec
inc
jnp
lcall
pop
in
xchg
pop
dec
jb
pusha
inc
sub
sub
push
jb
jae
jb
pop
dec
scas
in
cwtl
dec
jo
mov
mov
repz
pusha
test
mov
lahf
add
test
dec
imul
and
adc
dec
fs
outsb
call
add
insl
xchg
pop
inc
and
add
shl
jno
stos
cwtl
mov
or
push
test
inc
ficomps
pop
pop
add
or
inc
sbb
sub
and
enter
leave
mov
xorl
jno
xor
in
and
dec
daa
rep
pop
mov
sahf
lcall
cmc
cltd
je
into
es
sahf
xchg
clc
mov
xor
inc
pop
dec
insl
pop
sbb
xor
ds
shlb
dec
push
jnp
pop
inc
adc
dec
jmp
xlat
dec
cmp
movsl
inc
imul
inc
pusha
mov
fsubrl
dec
cmp
adc
clc
jmp
or
jmp
lods
dec
mov
mov
xlat
mov
jp
dec
pop
clc
pop
fdivrp
test
mov
daa
fwait
sub
mov
inc
daa
jle
xchg
xchg
inc
lret
loopne
ret
xchg
jnp
add
hlt
mov
ja
push
xchg
das
push
fbstp
adc
cmpsb
in
pusha
test
imul
or
movsb
sub
xchg
xchg
sub
aad
add
xlat
sub
jge
fcmovnbe
mov
ss
push
sarb
push
xor
cmpsl
sbb
cmpsb
lret
inc
xor
jecxz
mov
stc
mov
scas
stos
fldl
popa
cmp
jnp
pop
inc
cmp
fs
push
cmp
lods
jmp
in
cltd
xchg
insb
leave
nop
popf
sbb
rclb
cli
mov
or
or
mov
xchg
xor
add
insl
or
pop
adc
xchg
sti
rcll
and
in
xchg
mov
pop
push
inc
out
test
jae
dec
test
test
hlt
and
lods
and
push
cli
and
mov
xchg
adcl
loope
sub
pop
lock
addb
pop
mov
sub
push
pushf
shlb
leave
mov
mov
pushf
rcrb
xchg
jb
dec
loope
fcomps
lods
xchg
adc
sub
popf
imul
rclb
scas
adc
fcompp
pop
sbb
xlat
add
mov
dec
jb
cmpsb
lret
sahf
lea
mov
mov
js
add
orl
aaa
inc
aaa
pop
or
test
mov
leave
xchg
xor
leave
or
cmc
sbb
mov
and
fdivrs
mov
push
sub
scas
add
mov
inc
add
rolb
sti
repnz
mov
in
dec
subb
loopne
mov
scas
div
pop
push
insb
hlt
inc
in
push
test
adc
dec
test
lds
xor
xlat
sbb
fsts
pop
rolb
scas
fs
mov
test
rcl
scas
mov
push
lock
imul
int3
cmp
jmp
dec
cmp
ja
orl
dec
sahf
inc
ret
js
jbe
rclb
mov
dec
jmp
outsl
test
or
add
shl
or
cmpsl
mov
call
and
test
or
aas
cmp
mov
mov
out
rcrl
push
push
pop
jmp
xor
cltd
test
in
repz
vunpckhps
xchg
mov
dec
movsb
xchg
mov
push
aaa
push
enter
movsb
loopne
and
inc
stos
test
sub
mov
fsubl
sbb
lss
and
test
fists
jg
addb
shll
test
out
stos
imul
pushf
mov
mov
andb
scas
test
fwait
xchg
outsl
push
push
cmp
ret
js
xlat
sbb
sub
movsl
scas
out
in
pop
add
je
mov
outsb
lds
fdivs
add
mov
cli
xchg
pop
mov
mov
pop
sahf
inc
popa
leave
test
sbb
insl
push
aad
fstpl
data16
jecxz
or
mov
xchg
repz
std
push
add
cmp
orb
add
fs
push
cltd
and
stos
test
mov
jmp
pop
xchg
movsl
lcall
fwait
stc
mov
push
movsb
xor
cmp
push
adcl
jp
cwtl
and
push
and
ret
jnp
out
ds
cmpsl
or
std
out
repz
mov
dec
ljmp
push
addl
mov
inc
mov
inc
jbe
orb
mov
adc
xchg
or
push
dec
idivl
lds
mov
push
out
push
xor
mov
sbb
out
sbb
cli
int
jg
dec
arpl
das
mov
out
cmp
dec
aad
lods
adc
cmpsl
jmp
fidivl
cmpsl
test
cmpsb
lret
rcrb
xchg
jecxz
test
sahf
popa
mov
into
test
push
dec
ret
cld
mov
mov
lea
push
in
fmull
call
das
inc
pop
mov
sub
or
xor
loope
sti
test
icebp
in
pop
jns
pushf
mov
inc
filds
xchg
cltd
jae
mov
push
push
sub
cli
jns
inc
in
stos
pop
andb
rcll
mov
fcomip
jno
mov
sub
adc
push
cmpsb
dec
pop
addr16
or
sbb
xchg
leave
xchg
cli
lods
cwtl
sbb
cmp
xchg
inc
mov
push
push
add
xor
xchg
enter
add
imul
push
and
in
js
add
call
lods
jae
and
jge
insl
pop
cmp
lcall
pusha
lahf
add
lret
or
pop
outsl
sarb
inc
iret
testb
es
cmp
cli
or
jns
in
cwtl
bound
add
leave
fisttps
lea
cmpsb
in
jp
pop
mov
repnz
dec
pop
lds
rol
push
and
push
mov
popf
push
cmpsl
paddsw
cmp
mov
fmuls
cmp
or
repz
xor
roll
jge
push
push
dec
idivl
mov
mov
jno
jae
mov
shlb
xchg
mov
es
cmp
jmp
mov
sub
inc
push
or
adc
or
sub
lods
add
lcall
push
adc
or
xchg
xchg
sub
mov
test
inc
das
ret
and
or
sbb
out
xor
dec
sti
adcb
inc
loop
inc
adc
inc
push
mov
push
repz
mov
bnd
push
fwait
hlt
js
lahf
inc
leave
xorb
push
xlat
scas
gs
push
sbb
mov
dec
xchg
jo,pn
popl
add
mov
jbe
sub
jbe
sbb
lahf
push
mov
mov
xchg
and
xor
out
inc
dec
aam
popa
out
popa
insl
jle
leave
add
jecxz
inc
fimull
mov
jecxz
loopne
or
fmul
fistpl
into
xor
sti
cmc
shl
xlat
inc
sub
movsb
not
push
cmp
sarl
jae
add
addb
inc
fs
sbb
mov
and
ficomps
sub
sti
loopne
stc
mov
push
cmp
cmp
add
imul
push
adc
push
xor
shrb
scas
inc
test
jp
inc
adc
pop
xor
cmp
mov
push
lcall
hlt
mov
xchg
lds
pop
jne
push
add
add
es
in
and
mov
xchg
mov
cmp
outsl
stos
fwait
cmp
sub
in
int3
into
jl
push
add
cmp
pop
lods
mov
bound
push
cmpsl
mov
mov
rcll
test
popa
popa
cmp
cwtl
lret
ret
test
push
jns
mull
cltd
jb
mov
fwait
stc
testl
inc
xchg
cltd
shrl
mov
jae
cld
fwait
out
jle
and
push
test
inc
jmp
iret
inc
pop
sub
inc
js
jns
cmp
inc
outsb
xor
pop
xchg
lock
hlt
inc
pusha
xchg
insl
sti
inc
pop
push
fcmovbe
fwait
inc
jle
andl
mov
mov
inc
sub
test
jb
aam
push
pop
imul
movq
push
in
mov
enter
ss
dec
arpl
dec
rolb
xor
mov
mov
jle
inc
imul
scas
mov
call
out
aad
and
aaa
xlat
out
fistpl
jo
lahf
jl
xchg
xor
pop
mov
sub
je
cmp
cltd
jo
mov
mov
xor
cmp
pushf
push
push
xchg
fidivl
js
inc
or
jb
mov
jno
adc
ds
test
aam
ret
leave
pop
rorl
loope
shlb
fs
aam
out
or
cmc
jmp
dec
xor
fistpl
pop
mov
xor
or
fstpt
push
test
pop
insl
js
pop
data16
and
jmp
pop
stos
lcall
cwtl
add
aad
mov
inc
roll
add
aas
das
rcrl
pop
inc
push
ljmp
xchg
mov
test
and
mov
int
imul
jl
je
cmp
cmpsl
mov
sahf
jge
dec
jo
sbb
movsb
dec
fcompl
push
cwtl
test
out
xor
xchg
add
push
aaa
fcmovnbe
aas
jmp
ss
loop
lea
les
xchg
lahf
ret
jne
pop
fmul
push
jbe
adc
stc
inc
mov
imul
pushf
dec
std
mov
or
stos
mov
gs
add
push
inc
mov
push
sbb
stos
jns
ror
sub
adc
faddp
aam
insb
aad
dec
in
out
push
cld
fisubrs
scas
sub
loop
mov
fcmovu
xchg
add
call
lret
aam
adc
sbb
mov
xor
mov
fdivrs
int3
loope
push
adc
and
scas
in
pop
lcall
cmp
sahf
push
adc
cmp
xor
test
mov
inc
fildll
mov
adc
jnp
dec
push
outsl
aas
test
lahf
jnp
mov
sbb
lret
sub
mov
jbe
pusha
jns
sub
sbb
arpl
fs
arpl
dec
mov
cmpsl
popa
ja
sbb
stos
pop
scas
mov
outsl
cs
in
pop
cmpsb
push
jecxz
fidivl
js
repnz
fsubl
or
mov
loopne
jl
sub
lds
dec
xor
repz
pusha
sub
jns
jmp
enter
testl
jg
test
fs
sti
mov
push
stos
in
push
roll
das
mov
ret
in
xor
je
stos
add
add
mov
push
movsl
sub
out
nop
xor
mov
lahf
dec
repz
mov
in
pop
rorb
dec
icebp
pushf
add
call
mov
mov
xor
popf
pop
sahf
pop
dec
ja
mov
mov
or
xor
popa
sti
fistpll
add
mov
outsl
mov
insl
add
sti
mov
jmp
icebp
mov
push
outsl
fucompp
mov
stc
daa
pop
dec
aad
xor
sub
mov
cmp
loopne
jns
repz
aam
stos
adcb
mov
arpl
jo
adc
inc
xchg
push
cmp
outsl
sbb
scas
pop
inc
mov
lods
adc
pop
ljmp
xchg
cmc
or
dec
and
shr
cmp
fists
aam
nop
int3
lahf
in
jae
sub
aad
add
dec
pop
inc
ficomps
bound
repz
jns
mov
bswap
sbb
test
ja
out
lds
inc
bound
push
in
fdiv
or
push
push
xchg
jne
jno
xlat
dec
jb
ffree
mov
lods
jmp
out
jb
sub
mov
sbb
mov
fistpll
mov
hlt
jnp
cmp
int3
ljmp
ret
pop
cmp
or
cwtl
jno
ret
cmp
aas
mov
movsb
inc
stc
popf
ljmp
mov
or
xorb
adc
mov
adc
loopne
cmp
or
cmp
xor
nop
enter
stos
sbb
jb
ja
scas
add
fwait
lock
pop
dec
ficoms
and
neg
je
out
scas
cli
inc
pushf
xor
mov
adc
shlb
or
lea
std
lahf
addr16
dec
ja
stc
lods
hlt
imul
movsb
out
adc
popa
cld
test
pop
adcb
dec
jecxz
scas
push
mov
add
arpl
rorl
rorl
mov
mov
repz
xchg
mov
cmp
jbe
pop
mov
xchg
push
les
cmp
ficoms
lods
enter
mov
xchg
inc
repz
jb
sub
xor
lahf
lret
in
push
out
mov
stc
pop
je
jg
das
jb
pusha
call
push
xor
cs
xchg
cmpsb
xor
or
in
pop
inc
pop
xor
call
sub
iret
mov
inc
sbb
aas
adc
lock
popa
push
ljmp
testl
dec
pop
jmp
cwtl
xor
incb
jne
pop
repz
lahf
stos
sbb
lds
test
pop
in
push
mov
addr16
pop
cmp
or
mov
inc
or
xlat
outsl
scas
add
ss
addr16
push
add
adc
bound
push
push
cmp
xchg
rclb
jnp
mov
jmp
dec
mov
dec
cmp
add
sbb
adc
test
xor
ret
mov
rolb
mov
hlt
dec
in
push
mov
pop
pop
hlt
adc
or
fcos
stc
daa
hlt
cmc
jns
lahf
push
mov
jmp
cmpsl
sub
inc
mov
xlat
aas
sbb
push
push
inc
inc
mov
and
iret
cwtd
pop
xchg
push
xor
jno
mov
push
inc
mov
jl
testb
test
or
mov
sub
push
xlat
lret
xlat
cmp
int
xchg
push
dec
mov
sub
cmp
out
test
mov
xchg
popa
push
and
adc
lds
lahf
cmc
mov
xor
or
sub
out
roll
cmp
pusha
in
test
lahf
or
xor
pop
arpl
loope
stos
push
leave
or
sub
xor
mov
and
mov
jg
mov
jne
jae
inc
dec
mov
enter
in
inc
push
adc
xor
or
push
sub
cmp
push
mov
cmc
dec
lods
or
pusha
mov
mov
stos
mov
mov
push
movsb
setb
or
pop
dec
pop
call
xchg
add
in
ja
cmp
add
mov
xor
cltd
cmp
aaa
fwait
adc
imulb
mov
lods
inc
cmpsb
in
cmp
push
mov
adc
std
mov
inc
rcrl
mov
hlt
andb
fsubr
xor
arpl
lods
inc
shl
fisubl
mov
jb
jnp
movsl
inc
xchg
add
arpl
inc
pusha
inc
and
jp
int
and
imul
add
add
adc
icebp
sbb
dec
sbb
mov
push
mov
enter
jle
adc
arpl
xchg
loope
rol
inc
in
insl
in
jae
sbb
stos
bound
jo
lock
std
jp
push
adc
inc
shrl
mov
or
push
out
testb
mov
ds
cmp
movsb
aad
out
in
pop
push
cs
lock
pop
rorb
ss
or
inc
loope
xlat
push
add
shrl
push
sti
cmp
xchg
mov
fbstp
test
dec
mov
fwait
movsb
lock
enter
pusha
inc
aas
lock
sbb
xchg
xchg
mov
in
in
push
mov
mov
push
jge
fldl
jnp
inc
ja
std
setp
int
clc
stc
shlb
mov
cmp
add
jmp
lahf
adc
add
pop
inc
adc
jge
leave
insb
sub
lods
adc
sbbl
into
enter
in
test
jno
dec
mov
push
repz
inc
mov
xor
mov
inc
jae
in
jecxz
sbb
xorl
add
aam
jns
stos
add
pop
lret
xor
sub
lods
inc
dec
xchg
jo
and
mov
into
adc
mov
xchg
dec
in
pushf
sarb
push
nop
mov
outsb
test
or
pop
mov
out
pop
ficompl
pop
lock
imulb
mov
loope
cmp
movsl
xchg
xlat
nop
xchg
jp
adc
mov
or
jecxz
jne
pop
pop
repnz
test
jl
mov
popf
scas
xchg
adc
mov
xchg
aaa
mov
mov
call
mov
loopne
mov
loope
sti
adc
push
es
imul
pop
ljmp
pop
mov
and
or
fwait
cmp
mov
in
insb
scas
pop
adc
cli
jb
ds
cwtd
add
dec
xchg
cmp
call
lret
es
lcall
lods
pop
add
hlt
push
dec
mov
stos
lret
xor
push
mov
dec
js
mov
adc
popa
loope
das
sub
and
push
sub
and
jmp
xlat
jno,pt
aad
leave
movsb
mov
mov
test
subl
jnp
or
rcrb
cmpsl
adc
add
add
ss
dec
hlt
push
jo
pop
adc
sbb
pop
or
push
jae
add
addr16
sbbl
dec
test
addr16
push
lahf
push
int3
addr16
pushf
jnp
js
xor
movsb
ficomps
imul
in
imul
and
les
mov
in
sub
daa
sub
lods
jno
lods
popf
sbb
sbb
mov
mov
adc
xchg
iret
insb
rcrl
lods
xor
dec
mov
jle
mov
and
push
sbb
imul
jge
adcl
inc
int
mov
jmp
or
xor
sbb
xchg
daa
mov
insl
out
outsl
aad
jge
cmp
mov
and
mov
icebp
jbe
rclb
ret
mov
and
xchg
mov
scas
cmpsl
adc
xor
iret
mov
xchg
pop
dec
out
test
inc
loope
repz
imul
icebp
insl
or
fstpl
call
dec
test
xchg
and
sbb
mov
fst
sbb
xor
sbb
mov
inc
shlb
pop
or
mov
or
lock
xchg
fisubl
or
ds
in
in
movsb
insl
dec
shlb
out
ficoms
aaa
xchg
fwait
inc
pop
sub
adc
xor
mov
in
mov
and
jns
inc
test
xchg
roll
fwait
add
jns
jnp
jo
mov
ficompl
into
lods
inc
adc
dec
sbb
mov
jb
test
fbld
enter
jp
mov
loope
addl
dec
mov
mov
or
push
adc
rcrb
dec
sbb
sar
add
push
iret
jne
mov
rcrl
stos
or
jns
jnp
adc
imul
inc
add
add
mov
sub
dec
push
inc
xor
xchg
jnp
ljmp
loop
mov
sarl
mov
push
pop
pop
imul
push
shr
std
mov
xor
lea
fdivl
mov
fisubrl
mov
roll
jne
xor
push
jg
aas
cmp
inc
inc
les
add
mov
xchg
lahf
or
adc
test
lock
movsb
pop
inc
push
filds
leave
push
dec
cld
cmp
jg
lcallw
pop
push
int3
mov
cmpb
pop
loopne
pop
sub
push
jno
and
test
scas
lahf
sbb
lea
or
stos
dec
stos
nop
dec
add
loop
ret
subl
imul
cmp
test
arpl
add
inc
inc
test
mov
movsl
mov
fcoms
stos
jmp
scas
xchg
pop
ss
fwait
hlt
imul
cli
lea
dec
loopne
dec
loope
fmulp
stos
jae
popa
push
arpl
mov
mov
lret
lods
aas
cs
push
or
dec
dec
fsubrp
andb
jp
fwait
cmp
jns
lock
mov
dec
sbb
cmp
rorb
push
cmpsb
sbb
stc
enter
imul
fisubs
test
xchg
les
jns
outsl
push
mov
scas
rcrb
jecxz
xchg
repz
xchg
fcomps
jecxz
outsl
mov
clc
and
sub
fimull
roll
mov
mov
xchg
cmpl
pop
mov
and
popa
dec
jnp
lret
xchg
sti
loopne
cmpsl
sti
out
and
jle
fmull
or
mov
fimull
push
sbb
cmp
sbb
ljmp
pop
pusha
lods
push
je
repz
jmp
push
inc
push
mov
jne
std
push
mov
dec
das
mov
aad
mov
call
mov
xchg
cmp
mov
aad
push
int3
xchg
in
fistpll
leave
adc
jge
mov
lcall
lret
les
mov
mov
loopne
pop
jle
js
fs
mov
add
jns
xchg
test
pop
mov
int
ret
inc
sbb
dec
imul
call
sbb
lds
iret
test
or
jl
lods
push
cmp
cmc
sub
add
in
sub
mov
inc
mov
pop
pop
enter
xor
mov
jae
rorb
mov
icebp
testl
popa
and
jp
loopne
inc
mov
dec
shrl
pop
cmc
nop
dec
out
enter
mov
movsl
or
and
adc
mov
inc
xor
mov
dec
jne
test
fidivrl
xchg
in
lods
imul
mov
les
adc
adc
pop
jp
arpl
sbb
mov
test
frstor
pop
outsb
or
xchg
bound
xchg
push
mov
ds
mov
ja
pop
jns
mov
popf
jl
cmc
sbb
or
out
scas
push
push
loope
xchg
or
je
stc
add
add
int
adc
sbb
xor
int
in
gs
xchg
out
dec
int3
jae
xor
sahf
shll
mov
cmp
cmp
fmuls
cmp
sub
call
lcall
shrb
inc
sbb
or
xchg
rorl
aam
and
ss
pushf
lret
pop
in
push
sbb
xchg
movups
mov
std
sbb
shrb
test
add
lret
xor
pand
sbb
adc
xchg
test
cmc
sahf
add
leave
cmp
ja
add
scas
xchg
aas
mov
xor
testb
inc
mov
lods
or
dec
outsl
addr16
jnp
dec
xchg
pop
pushf
mov
add
push
fwait
mov
hlt
mov
loop
mov
testl
rorl
in
adc
mov
mov
sbbl
shlb
mov
jne
popa
daa
mov
pop
aad
xor
pop
in
rorb
ret
lods
ja
stos
or
sahf
sub
mov
lcall
lods
dec
int
jge
pusha
jmp
hlt
bound
addr16
iret
fldl2t
ja
adc
shld
pusha
pop
mov
test
cmp
and
mov
or
mov
lds
int3
jecxz
dec
or
cmc
movsl
in
rcrb
push
data16
cs
mov
ret
scas
xchg
xchg
je
test
or
inc
addl
mov
int
pusha
iret
mov
xorl
sti
cltd
in
out
jns
jg
mov
xchg
repz
mov
hlt
and
out
dec
mov
loopne
ds
cmp
test
push
push
xor
push
cmp
xorb
jmp
mov
or
push
xchg
or
fiaddl
adc
loopne
orl
adcb
cmpsb
dec
js
push
iret
bound
jle
mov
arpl
mov
push
bound
xchg
cmp
std
fistl
mov
sub
xor
fmuls
mov
xor
mov
mov
cmp
and
sub
lcall
orl
add
jp
inc
xor
xor
cmpsl
add
jb
xor
insl
jg
sbb
dec
sub
sti
sbb
cmp
cmp
mov
dec
jo
or
mov
pop
lea
xor
dec
push
scas
sbb
outsl
sbb
mov
sbb
ja
notl
dec
and
pop
lahf
jne
lret
inc
dec
add
or
dec
stos
push
cmp
aas
push
add
sti
add
mov
lods
aas
subl
out
push
mov
jne
push
mov
pusha
xchg
int3
inc
mov
es
repnz
fisubs
ret
sub
cmp
mov
push
mov
dec
aaa
or
jbe
mov
inc
das
sahf
movsb
push
pop
fistps
and
outsl
mov
shl
sbb
pop
into
inc
imul
jae
cltd
lret
fistpl
aas
insb
out
jb
sbb
dec
pop
dec
pop
jns
xchg
out
push
pop
xorb
fstps
fisubs
loop
fcmove
js
stc
out
sbb
clc
cs
dec
jmp
ret
xchg
ja
mov
test
arpl
add
jl
add
sbb
add
movsl
pop
repnz
xchg
mov
mov
jns
mov
shlb
in
fwait
cld
sub
mov
movsl
test
sub
dec
jo
lcall
stos
add
push
loopne
add
loopne
pop
imul
loop
imul
cltd
aad
jae
call
add
sub
movsl
jbe
inc
ds
xor
sti
dec
push
pushf
icebp
js
sar
in
andl
lahf
push
jae
jbe
bound
xchg
mov
inc
movsb
mov
mov
insb
and
insb
ret
adc
jo
daa
sbb
push
jae
mov
xor
hlt
cmp
jle
pusha
adc
jns
add
ljmp
mov
mov
xchg
add
dec
jbe
add
mov
adc
ss
bound
ret
int
mov
mov
sbbb
test
jo
mov
inc
dec
pop
sub
aas
mov
push
adc
adc
dec
and
shr
pop
inc
pop
cmpsb
stos
mov
jge
loop
mov
xchg
jecxz
push
lock
addr16
push
inc
psrlw
cmpsl
imul
xor
dec
movsb
xor
jbe
jp
pop
movsl
faddl
mov
test
shrl
icebp
jno
pop
mov
or
frstor
add
call
in
in
movsl
lods
in
push
and
push
andl
rcll
mov
and
pop
lret
rolb
pop
jecxz
sbbl
cwtl
push
pop
ja
add
loopne
or
dec
pop
cltd
or
or
lret
jecxz
cmp
fisubrs
es
iret
jns
mov
adc
xchg
mov
push
push
hlt
mov
loope
arpl
push
out
roll
fists
mov
leave
dec
cld
and
jne
lods
push
adc
lret
std
int
loope
push
lret
les
out
jecxz
imul
out
std
lahf
seto
lcall
scas
js
cmp
sbb
mov
fisttpl
mov
fucom
popf
insl
adc
pusha
xor
dec
sbb
lret
lods
clc
push
movsb
add
fstps
cmpsb
xchg
test
outsl
std
jp
mov
adc
push
daa
mov
sarb
xor
ss
xorl
jle
adc
or
add
repz
ret
lret
adc
adc
push
jae
sti
into
mov
std
lcall
shlb
aaa
repz
xorb
or
mov
in
sti
mov
dec
mov
test
add
or
xlat
aam
hlt
fstpt
insl
rcll
xor
dec
in
sbb
dec
into
or
xchg
popf
div
test
jecxz
imul
or
int3
cmp
xor
inc
xchg
jae
mov
pop
mulb
cmp
xor
scas
jbe
and
push
fxam
mov
loopne
add
mov
mov
ret
and
pop
xchg
icebp
xchg
out
outsl
push
cmpsb
out
xchg
push
je
mul
cmp
jge
pop
hlt
scas
sahf
fiadds
shll
push
mov
into
sbb
mov
push
faddl
aas
adc
movsl
clc
sub
mov
call
test
ret
pop
jp
jmp
mov
dec
insl
pop
cmc
outsl
mov
shlb
adc
push
sub
jne
jno
dec
add
pop
fsubrp
pop
stc
jns
lgs
mov
dec
cmp
in
dec
mov
inc
leave
pop
nop
dec
xlat
movsb
add
dec
movb
add
cwtl
pushf
xchg
neg
jle
xchg
lock
fs
arpl
nop
mov
popf
ds
and
inc
jg
cltd
aaa
pop
xchg
out
mov
pop
mov
movsl
sub
outsb
sti
gs
lcall
add
insl
mov
inc
arpl
xor
push
test
aaa
ljmp
xchg
pop
or
push
in
lea
xchg
enter
lcall
aam
pop
lods
adc
out
adc
jp
and
sub
ss
xchg
nop
cli
outsb
mov
les
outsb
cmp
adc
in
sub
and
sbb
pop
repnz
pop
cmpsb
setno
insl
push
push
jle
cmp
inc
clc
aad
sbb
lret
in
sbb
pop
mov
lret
mov
addr16
repz
xor
mov
bound
inc
jmp
add
pop
movsb
jbe
hlt
dec
push
pop
das
jbe
rcrb
sbb
xchg
sub
cmpsb
movsb
sbb
adc
mov
insl
gs
repnz
test
jle
imul
lcall
push
xchg
xorl
stc
call
out
aad
pop
jle,pn
sub
popf
mov
cmp
scas
mull
int
push
xor
adcb
in
mov
push
int3
movsb
in
jns
ret
xor
stc
in
into
mov
mov
xor
daa
je
mov
scas
mov
inc
cmp
cmpsl
inc
inc
clc
insl
cmpsl
sbb
mov
cltd
ficoms
enter
fs
popf
xchg
jne
xchg
push
jno
adc
aam
add
popa
out
cmp
shll
enter
push
jge
jp
sub
daa
push
push
lret
sbb
test
pop
dec
mov
in
lret
jae
cmp
dec
cmpl
fsubl
pusha
sbb
push
xor
hlt
scas
nop
jp
push
inc
in
sub
in
push
subl
jl
mov
ret
or
neg
push
mov
cmp
hlt
insb
add
out
mov
xchg
jmp
out
pop
js
cmp
stc
push
pop
jns
scas
loope
xchg
popf
mov
daa
mov
mov
sarl
mov
push
aaa
movsb
pop
notb
xchg
stos
out
out
sub
cmpsl
in
mov
fists
shrb
cmpsb
jo
test
push
jge
mov
or
sub
sbb
push
stos
push
mov
xchg
push
or
xor
mov
call
sbbl
dec
push
int3
movups
cmpsb
les
lahf
pop
les
inc
inc
lcall
push
stos
and
cmpsl
mov
jg
push
push
out
repz
insb
cmp
scas
cmp
cmp
cmp
stc
lea
stc
sarl
adc
loope
mov
lret
sbb
es
mov
and
add
jno
cmpsl
into
push
mov
fwait
push
add
ret
mov
out
add
or
outsl
pushf
fistpll
xor
add
inc
and
mov
and
xchg
int3
adc
inc
xchg
out
outsl
iret
xor
pop
shll
outsl
sub
sbb
jecxz
cmp
in
in
jnp
ret
pop
daa
in
fcmovne
jmp
inc
pop
cli
mov
fcompl
push
lock
mov
js
mov
push
inc
dec
mov
cmc
mov
fistps
inc
in
cltd
test
je
fsubrl
cmp
push
xchg
sbb
adc
xchg
mov
add
iret
push
xchg
push
test
dec
aaa
movsl
fstps
xchg
inc
xor
adc
or
mov
outsb
mov
ret
popf
inc
orl
repz
cltd
cwtl
in
out
push
enter
lret
jns
push
and
and
loope
xor
sarl
pop
pop
shlb
out
lret
sub
and
xchg
or
or
ja
adc
cwtl
in
cmp
push
adc
inc
mov
cltd
outsb
lret
add
push
ljmp
fbstp
jmp
mov
sub
dec
repnz
mov
js
mov
imul
push
stc
ficompl
dec
jbe
mov
cmp
add
cmp
sbbb
dec
xchg
les
mov
push
push
sub
cs
cmp
and
imul
mov
pop
jge
mov
jp
mov
jge
xacquire
pop
sti
mov
aaa
rcrb
mov
dec
mov
arpl
dec
aas
mov
in
mov
sub
sub
sbb
xchg
arpl
popf
mov
icebp
mov
sbb
add
sti
xchg
mov
fisubs
inc
sub
cmp
xor
pushf
mov
es
mov
inc
dec
and
mov
cmpsb
jo
xor
or
sub
pop
fsubl
xor
inc
lods
icebp
adc
mov
push
xchg
and
dec
or
mov
jle
push
cmp
jb,pt
test
and
inc
mov
mov
xchg
rclb
imul
inc
mull
push
imul
add
and
push
mov
jle
adc
lods
iret
lock
sub
je
cmpsl
movl
jb
cmp
sbb
adc
jp
pop
daa
popf
add
ret
or
in
out
bswap
in
xor
pop
sub
jecxz
cmpsl
popa
rcll
inc
je
push
fwait
rcrb
ljmp
stos
movsl
shl
pop
push
mov
mov
movsb
cmpsb
pop
loope
out
push
cmpsb
push
jl
fidivrs
scas
jp
xor
xlat
out
aas
cmpsb
bound
pushf
mov
ss
imul
ror
loope
pop
rcrl
nop
mov
cmpsb
test
sub
sub
pushf
stos
shll
orb
or
int3
mov
aas
sbb
ljmp
mov
insl
jmp
mov
push
sbb
xor
imul
jne
adc
lods
sbb
push
fwait
into
js
inc
addr16
enter
xor
pop
movsb
mov
mov
sub
addr16
cmp
add
push
pop
pop
inc
xor
out
mov
out
loopne
mov
jmp
adc
push
pop
mov
lock
lcall
pop
subb
xchg
and
shl
mov
cld
icebp
ljmp
cmp
sub
hlt
sbb
fwait
push
iret
cli
fdivl
shlb
mov
cli
data16
loopne
mov
jmp
popa
mov
xchg
push
hlt
nop
loopne
inc
js
mov
or
pop
pop
cmpl
aas
xchg
dec
popa
shlb
jno
ds
out
mov
or
orb
imul
enter
lock
mov
ja
sahf
and
xor
hlt
sarl
mov
sbb
adc
pop
outsl
adc
mov
ret
inc
and
sub
cld
adc
test
xchg
iret
fcoms
pop
add
pushf
lahf
add
pop
fmull
lcall
iret
mov
lahf
in
pop
mov
dec
dec
insl
sbb
fdivrl
mov
je
jnp
xor
xchg
insb
or
imul
lret
or
int3
or
ret
fdivs
inc
sbb
cmp
sbb
fidivl
jne
add
int
cmpsb
push
pop
loopne
jmp
aam
hlt
push
out
imul
int3
ds
les
lds
jns
dec
shlb
imul
dec
jle
xor
pop
and
sbb
push
shlb
xchg
and
and
in
and
cltd
mov
loopne
pop
adc
test
pop
lret
idivb
popa
ret
stc
mov
inc
push
ds
and
scas
dec
cmp
dec
mov
and
ja
jle
or
stos
cmpsl
adc
push
cs
shl
adc
sbbl
repnz
push
mov
jne
pop
call
insl
aaa
and
scas
jle
sbb
popa
aas
push
jge
add
fnsave
push
movsl
nop
addr16
mov
pop
xor
mov
lahf
mov
stc
rolb
fbld
cld
inc
pop
mov
mov
popa
mov
or
fdivrl
popf
hlt
adc
mov
js
push
sub
rolb
inc
mov
das
cwtl
lods
sbb
or
jecxz
rorb
sbb
mov
daa
test
dec
lea
rclb
sub
jmp
in
sbb
into
dec
dec
movsl
mov
jmp
xchg
iret
stos
pop
es
dec
inc
loop
mov
in
ret
jb
shl
out
jns
test
push
movsb
adc
pop
add
add
sbb
cmpsl
sahf
nop
insb
jmp
sarl
dec
or
sub
jecxz
cmp
sub
in
pop
add
enter
roll
scas
jecxz
jmp
cmp
out
jo
inc
in
push
in
adc
fadd
jg
lock
or
leave
ss
jge
data16
cmp
xlat
fwait
mov
dec
push
dec
lret
or
fnstsw
jl
sahf
aam
jecxz
xchg
sbb
dec
mov
mov
test
stos
in
jne
cmpsl
add
adc
xchg
sbb
jnp
dec
stos
mov
jnp
fsubr
mov
or
jmp
leave
mov
stos
dec
jl
inc
pop
mov
sbb
pop
icebp
add
pop
dec
insl
aam
and
mov
or
test
dec
repz
sbb
mov
dec
imull
lahf
les
sub
push
add
xorb
pop
pop
fmuls
and
cmp
jge
sub
lcall
aas
outsb
test
outsb
cmp
ret
aas
and
or
and
pop
or
aas
cmp
sub
shr
or
adc
dec
arpl
mov
shrl
adc
xor
mov
pop
leave
fisttpll
lds
jno
les
sub
pushl
into
dec
push
dec
sahf
mov
orb
pop
mov
notl
xor
mov
lret
out
js
dec
xchg
rcrl
pushf
pop
jnp
add
lahf
inc
add
out
mov
sti
cmc
rorl
adc
movsb
inc
iret
mov
xor
and
aad
out
or
dec
cmp
test
fstl
cmp
xchg
in
mov
adc
dec
rcrl
xchg
mov
push
cwtl
jnp
dec
scas
xor
fcoms
xchg
insb
xchg
pop
sbb
inc
mov
in
pop
push
mov
test
popa
dec
xor
loop
mull
les
stos
int
mov
pop
movsl
xlat
aas
mov
frstor
and
mov
gs
mov
mov
out
cmp
pop
adc
xchg
fcom
cli
imul
push
insb
sub
enter
ret
sbb
or
mov
push
dec
xor
mov
lods
cmc
mov
jg
pop
hlt
mov
mov
loopne
pop
pop
in
xlat
xor
arpl
pop
aam
pop
and
pop
sub
dec
fwait
out
movsl
sbb
popf
push
dec
ljmp
ja
fiadds
inc
cld
sub
sbb
movsl
dec
or
cmpl
xchg
mov
jp
fmuls
imul
inc
add
lret
rclb
inc
pop
aaa
push
jo
mov
repnz
push
mov
js
xchg
icebp
mov
dec
mov
lcall
mov
orl
movsb
daa
jmp
roll
dec
iret
das
or
mov
ret
inc
ss
sbb
outsb
mov
hlt
sub
jp
lret
jb
data16
divl
call
ja
es
sbb
xor
pop
or
xor
mov
sbb
gs
xor
mov
fnstenv
shl
dec
xchg
sub
inc
cwtl
sbb
jl
xor
inc
and
jle
mov
les
mov
out
cltd
mov
leave
pusha
test
out
stc
out
loopne
stc
pop
cmp
or
and
inc
icebp
std
popf
imul
ss
jp
sbb
pop
movsl
pop
or
inc
ja
loop
jp
sti
out
outsl
pop
fsub
test
mull
pop
jmp
out
pop
shl
lret
mov
mov
add
mov
push
fcmovu
xchg
inc
aas
mov
test
arpl
hlt
sbb
lret
clc
mov
sub
sub
test
mov
add
sub
sbb
or
repz
mov
mov
call
or
add
dec
inc
xchg
mov
mov
sub
fistpll
add
xchg
push
mov
xlat
sbb
fdivr
cwtl
stos
push
sub
adc
inc
sub
cli
add
cmc
data16
adc
mov
roll
add
mov
inc
xchg
jbe
daa
sbb
ret
dec
rcl
cmp
les
cli
mov
outsl
push
jns
aaa
rolb
out
stos
mov
inc
and
xchg
fnstcw
pop
xchg
movl
imul
clc
pop
sarl
jno
outsb
lods
adc
jne
sub
add
adc
jl
inc
sub
clc
fs
imul
stos
cld
outsb
push
into
scas
in
and
or
imul
cmpsl
or
sub
inc
cmp
out
sbb
pop
mov
sbb
xchg
mov
je
aad
call
or
lret
inc
push
imul
scas
cltd
jae
jp
test
cmp
push
inc
cmc
push
inc
jns
ret
fmull
push
mov
shlb
sbb
loop
ret
jae
xchg
js
add
lcall
out
std
adc
call
mov
pop
mov
addr16
out
jle
push
inc
push
enter
inc
xchg
sarb
movsb
pusha
and
xor
mov
iret
xlat
jo
in
cmp
jns
in
jae
jno
cmp
dec
cmp
adc
repz
daa
cmp
cmp
arpl
and
pop
xchg
das
adc
cwtl
jp
into
adc
jecxz
bound
pop
pop
fsubrl
jecxz
into
popf
xchg
fcmove
scas
in
add
insl
mov
hlt
fs
sbb
cmp
pop
mov
sbb
jge
in
cmp
stos
fcmovnbe
mov
xchg
les
pop
ret
sbb
into
ror
test
ret
into
jb
fnstenv
push
dec
cmp
inc
ss
hlt
cltd
fbstp
dec
ret
out
pop
add
test
mov
sti
mov
cmc
jp
stos
fstp
in
dec
dec
mov
lahf
mov
cli
mov
popf
sbb
pop
int
sbb
push
jmp
xor
mov
add
movsb
dec
movl
int3
es
cltd
lret
sub
mov
jmp
pop
xchg
mov
sahf
xchg
or
mov
int
imul
inc
daa
mov
sub
mov
add
mov
jecxz
hlt
mov
mov
pop
xor
add
lods
scas
jl
lods
adc
cld
mov
ja
scas
icebp
shlb
adc
sbb
inc
mov
sbb
lret
negb
mov
addr16
popf
fwait
aad
iret
mov
in
insl
in
les
push
hlt
inc
pop
cmp
push
dec
lea
jp
cmpsl
and
mov
xchg
adc
and
jae
lahf
test
dec
inc
xchg
shr
fstl
clc
push
stc
mov
sub
call
in
subb
push
inc
inc
or
mov
pop
and
leave
popa
ja
lods
and
sbb
dec
test
or
in
inc
scas
pop
aam
push
sub
adc
adc
jmp
hlt
push
pop
pop
ror
fwait
mov
aas
shll
jbe
clc
xchg
cs
xor
mov
aaa
jne
cmp
xchg
lds
adc
scas
imul
xorb
out
and
cmp
pop
mov
sbb
fimuls
jne
mov
cmpsl
das
cmp
mov
xor
in
fcoms
jmp
cli
push
popf
fst
and
test
les
fcompl
fcmovne
cmp
subb
push
notb
xor
pusha
xchg
mov
loope
movsl
fdivl
ret
xchg
jnp
mov
cmpsl
cmc
mov
sbb
add
fucom
and
test
aad
je
cs
cmp
dec
sub
push
das
in
out
fs
ljmp
scas
push
popa
add
mov
jecxz
add
pop
or
sahf
cli
xchg
dec
inc
lods
pop
popf
and
dec
push
xor
jnp
sbb
ret
inc
popf
adc
sti
cmpsb
adcl
rorb
mov
cmp
xor
add
je
mov
pop
mov
frndint
mull
lock
and
pop
pop
cld
or
xor
mov
cmpsb
dec
mov
int3
xchg
lret
dec
xchg
fidivs
popf
xchg
mov
add
fnstsw
adc
leave
cmp
jno
jle
outsb
fmull
in
loop
mov
fbstp
ror
jne
shll
nop
lock
mov
idivb
jne
mov
xchg
lret
cmp
dec
ja
adc
mov
cld
test
mov
cmp
sbb
lock
xchg
outsl
lea
cmpl
mov
incb
cli
pop
inc
pop
dec
adc
sti
mov
jno
inc
pop
add
es
popf
and
cwtl
jo
and
lock
mov
sbb
push
sbb
push
sub
jle
or
imul
fcmovnbe
lods
cmp
cmp
pop
fiadds
xor
jl
xor
sub
popa
addr16
mov
push
stos
popa
jp
mov
dec
les
fildll
mov
movsb
or
repz
int3
lret
mov
insl
mov
pop
push
das
scas
test
rcl
stc
add
mov
es
push
icebp
xlat
scas
xchg
pusha
rcrl
push
jecxz
lds
out
fnstcw
test
jp
and
xor
test
push
pop
sub
mov
out
push
insl
inc
xchg
sbb
pop
pop
rcll
aas
ja
hlt
subb
mov
cli
or
pusha
pop
fdivr
add
and
andl
roll
xchg
pop
add
les
adc
imul
cmp
xor
int3
mov
imul
jnp
sbb
js
cmp
jecxz
popa
outsb
jnp
ret
add
hlt
xor
into
arpl
imul
sub
mulb
data16
push
pop
in
loop
insb
cmp
jb
xlat
mov
shlb
outsb
int3
in
fistl
or
cmp
fwait
in
push
mov
jecxz
inc
adc
cmc
mov
sub
into
cmp
mov
xor
cmp
movsl
push
sbb
sti
ljmpw
neg
sub
mov
and
dec
mov
cld
sub
xorb
or
pop
stc
enter
or
sub
repz
jmp
and
pop
adc
shrb
leave
dec
xor
dec
shlb
mov
sbb
rcl
cmp
dec
jl
stc
arpl
mov
cmp
mov
fstps
je
add
add
in
jp
aad
pop
mov
pop
nop
aas
bound
cs
pop
xor
cltd
inc
mov
insb
pop
add
adc
or
xchg
aam
out
jmp
sbb
lods
inc
out
loop
push
sub
mov
xchg
and
testb
sbb
jl
sti
sub
cmp
xor
xchg
ljmp
ffree
mov
xor
ss
fcoml
xchg
test
sub
aad
cmp
mov
dec
cmp
dec
sub
cmp
mov
jge
dec
cli
dec
jo
mov
divl
fiaddl
xor
aam
fsts
cwtl
pop
mov
das
jl
les
cmp
fists
or
dec
sbb
pop
jl
push
and
aas
stc
repnz
push
cmp
pop
repz
fcoms
mov
imul
sbb
mov
outsl
and
imul
out
frstor
das
or
xor
sub
fxch
mov
call
int
push
mov
push
mov
jb
mov
packuswb
adc
arpl
mov
sub
adc
jmp
sbb
rorb
sarb
fisubs
lahf
outsb
and
mov
xchg
movsb
adcl
push
jl
pop
jo
in
data16
push
jbe
and
sub
stc
int3
stc
sbb
call
cmp
fsubrl
or
in
ds
xchg
mov
push
jb
loopne
in
mov
cmp
dec
adc
cmp
lcall
notl
outsl
pop
int3
xchg
lahf
pusha
mov
mov
inc
les
out
test
fldenv
repz
popf
xchg
in
enter
push
stc
push
mov
mov
mov
fldenv
pop
and
repnz
es
pop
sbb
mov
xchg
add
xor
push
inc
or
xchg
shlb
inc
mov
imul
mov
push
sub
add
andb
imul
xchg
ss
loopne
pop
call
ret
jle
movsb
int3
push
rcrb
inc
mov
repz
jnp
ja
pop
push
cmpl
adc
and
mov
out
or
jp
push
mov
pop
add
add
mov
cmp
lods
xchg
sbb
mov
insb
aam
cs
pop
js
or
xor
cltd
jnp
mov
jl
into
addr16
js
lods
fsubp
out
fildll
jl
scas
mov
andb
sbb
inc
dec
out
mov
jp
setg
mov
xchg
sbb
shl
mov
jo
outsb
mov
xor
add
movsl
paddw
loop
imul
stos
push
cmp
scas
add
sbb
out
insl
adc
shll
sbb
popa
xchg
adc
mov
dec
enter
dec
inc
out
jmp
sbbb
push
push
imul
outsl
push
dec
xchg
ror
test
xlat
mov
jecxz
andl
arpl
roll
and
pop
int
jl
gs
cmpsl
or
sub
jg
inc
mov
aam
cmpsb
cltd
adc
adcb
inc
das
imul
cli
out
jp
pop
les
outsb
inc
repz
fwait
test
lahf
test
xor
jb
mov
rcll
mov
loopne
mov
jb
inc
adc
ja
pusha
jg
aad
bts
sbb
js
cs
adc
push
pop
daa
push
sahf
push
sbb
and
push
xor
jnp
js
imul
jge
scas
scas
sub
sbb
gs
mov
mov
or
sbb
adc
mov
mov
outsb
fdivl
lock
rcr
sbb
push
cmp
add
out
ss
push
in
inc
cli
mov
lcall
inc
sbb
jne
xor
fnsave
mov
cltd
push
inc
hlt
inc
rcll
cmpsb
cwtl
push
push
cmp
outsl
dec
mov
inc
push
stc
jno
pop
pop
test
hlt
fstps
pop
fistpl
aaa
ss
adcl
scas
stos
pop
out
out
es
int3
pcmpeqd
sub
cwtl
sbb
popf
scas
loopne
or
pop
jo
xor
ljmp
fcompl
add
pop
pop
in
mov
push
rcll
jge
or
push
jnp
lahf
hlt
mov
or
sbb
stos
push
ficoml
movsb
and
mov
mov
cs
and
xor
ds
jl
dec
push
loopne
gs
dec
push
mov
mov
fsubrl
and
addl
mov
inc
dec
jnp
and
rclb
dec
sbb
test
fisttps
dec
sub
inc
lods
and
jle
xor
mov
pop
cmpb
lds
add
adc
repnz
pop
pop
insl
xorb
push
stc
inc
inc
push
jle
fidivs
inc
mov
mov
lods
xchg
iret
cli
stos
fprem1
imul
jle
int
xor
mov
dec
lcall
ja
inc
rorb
outsl
mov
iret
ljmp
sbb
cltd
cmp
pop
push
shlb
and
lock
xchg
fstl
mov
and
jae
sbb
in
and
das
xor
pop
ficompl
xor
cmpsl
das
repz
push
mov
lods
pop
mov
lock
adc
leave
cld
outsb
xchg
insb
arpl
mov
jns
xorb
and
stc
adc
inc
pop
xor
testb
add
xchg
mov
xchg
repz
mov
lds
dec
mov
jo
xchg
sbb
imul
mov
aad
aad
sbb
mov
cmp
push
shrl
jmp
jge
sub
mov
sbb
imul
in
lret
mov
dec
stos
lock
jp
or
sub
xor
in
xlat
add
je
sti
inc
fldln2
xchg
arpl
or
fnstsw
sahf
mov
push
xor
in
inc
push
mov
dec
popa
mov
mov
popa
sahf
inc
ja
dec
jo
mov
inc
sbb
fwait
cmp
lcall
in
mov
add
lds
imul
ja
dec
fcoms
jge
adc
iret
cld
pop
scas
stc
mov
ret
sub
mov
xchg
cltd
ja
sahf
outsb
mov
jl
sbb
mov
gs
sbb
pop
ror
lret
enter
or
sti
sub
mov
js
lods
test
sub
cmp
pusha
mov
in
nop
pop
jp
xlat
add
add
cwtl
inc
push
xlat
ret
or
inc
push
cwtl
lret
int
pop
into
adc
loopne
adc
clc
push
jb
jne
dec
xor
ljmp
repz
pop
repnz
xorb
loope
jae
add
xlat
push
jo
add
jl
loop
mov
sbb
xor
dec
mov
into
js
stos
pusha
movsb
mov
aas
rcrl
cmp
das
add
push
jg
lock
push
aaa
aaa
aam
inc
push
cwtl
xchg
out
inc
scas
adcb
lock
data16
inc
push
int
cmp
pop
jnp
adc
movsl
mov
out
shll
out
xchg
in
imul
xchg
imul
pusha
andl
xchg
fs
xor
popf
mov
push
rorl
mov
arpl
mov
in
es
jns
movsl
pop
in
repz
adc
adc
out
iret
and
fildl
mov
cld
push
pop
dec
mov
scas
out
fildl
shl
sub
xlat
xchg
out
aad
mov
cmpsl
cmpsl
mov
mov
int3
cmp
jecxz
dec
in
mov
dec
xor
push
in
jp
mov
cld
movsb
mov
lret
dec
push
jmp
sub
cld
pop
and
shr
inc
jge
jle
push
xchg
pop
dec
mov
inc
rcr
ret
pop
mov
test
pop
cmp
insb
test
cmpb
shll
in
mov
in
cmp
push
xchg
mov
iret
inc
mov
hlt
sbb
loopne
xor
mov
nop
cli
xor
outsb
es
and
jns
adc
inc
rcrb
add
cltd
fcmovbe
fildll
sbb
mov
mov
mov
into
xchg
mov
mov
or
or
sbb
mov
mov
lahf
xchg
pop
sbbl
in
xor
xor
xor
dec
jmp
dec
mov
aaa
in
mov
sbb
dec
xor
adcl
and
mov
in
ljmp
xor
stos
jmp
out
xor
bound
negl
inc
out
jns
add
shrb
pop
stos
pop
outsl
fdivs
sub
stos
cmp
xchg
mov
ja
movsl
jge
fisubrl
or
cmp
pop
loopne
mull
cs
pusha
fistl
cmp
iret
dec
mov
pop
sarb
call
into
pop
dec
pop
adc
xor
subb
pop
scas
or
or
jbe
scas
mov
push
or
into
fadds
outsb
and
pop
cli
in
or
and
inc
mov
cmp
leave
out
mov
xlat
xchg
jb
pop
cmc
or
cmpsl
jns
mov
das
out
lret
popa
push
nop
jecxz
test
pop
xchg
cmp
or
push
clc
sub
mov
and
std
mov
sub
xchg
pusha
sub
mov
push
stos
dec
inc
push
sbb
cmp
test
fidivs
es
push
int3
dec
in
scas
clc
lods
pop
imul
push
add
dec
ja
inc
adcb
xchg
dec
loop
mov
or
movsb
pop
movsb
push
jo
das
mov
push
or
subb
mov
cmc
lret
push
scas
loop
test
mov
dec
xchg
int3
lock
je
mov
inc
in
fdivrs
cmc
dec
adc
cmp
cli
mov
push
jae
mov
xor
out
fwait
outsl
and
xor
sub
ds
pop
or
add
cwtl
cmp
test
daa
outsl
lahf
cli
jae
inc
idivl
mov
popa
and
inc
jmp
mov
adc
test
sub
popa
ljmp
pop
sub
inc
fsubrl
or
and
mov
xchg
scas
js
js
inc
dec
andb
adc
or
sbb
cmp
xor
loopne
jp
xchg
aas
int
mov
in
mov
je
push
push
and
sti
push
mov
jnp
in
dec
cmp
data16
pop
mov
imul
fmuls
scas
movsb
push
pop
xor
jno
or
dec
pop
outsb
inc
gs
in
lahf
int3
jl
jl
outsb
aas
stc
rcll
popf
push
fwait
mov
xchg
jns
and
es
sbb
fildl
rep
jg
jecxz
or
xchg
mov
jne
cltd
test
mov
adc
jecxz
jne
mov
adc
push
aaa
shlb
in
push
getsec
inc
add
xor
cltd
mov
addb
adc
xchg
nop
push
aad
cmc
xchg
pop
sahf
push
cmp
dec
cld
fisttpll
cld
aam
cmc
or
mov
mov
mov
pop
sub
fcoms
push
fs
push
push
insb
pushf
sbb
popa
xor
and
mov
add
cmovs
or
xchg
ret
pop
cmp
js
mov
push
rclb
sub
outsl
mov
fmuls
repnz
jae
inc
mov
jnp
or
test
jecxz
mov
add
push
xchg
imulb
pop
sub
xor
mov
aad
subl
sbbb
in
inc
mov
clc
scas
rorl
fdivrp
adc
mov
inc
mov
sbb
cmpsl
mov
xor
mov
in
xlat
imul
bound
xchg
inc
xchg
into
idivl
icebp
je
pushl
flds
cltd
outsb
xchg
jp
fwait
in
xchg
ret
enter
imul
and
shr
pop
pop
loop
and
sysexit
out
and
nop
dec
pop
xchg
jae
mov
shlb
lods
mov
divl
lock
sbb
cmp
fwait
pop
mov
mov
inc
xor
imul
add
adc
cltd
nop
xchg
sbb
dec
dec
push
mov
cmp
lahf
jle
mov
sbb
pop
sarb
inc
jmp
xor
cld
decb
inc
lahf
aaa
and
cmp
xlat
out
mov
cmp
pop
lods
cmp
and
mov
dec
or
insl
leave
js
adc
dec
idivl
xchg
mov
arpl
es
push
loop
inc
cs
or
xor
adc
push
test
push
jecxz
and
mov
lea
push
mov
repnz
bound
fmul
hlt
pop
pop
test
popa
and
ljmp
inc
jmp
push
int
js
dec
imulb
sub
addl
inc
add
mov
inc
add
push
mov
jle
pop
cmp
cmpsl
pop
mov
mov
cmp
jns
jecxz
notb
dec
mov
jno
scas
inc
cmp
jmp
popf
loop
aaa
pop
and
mov
sub
aad
inc
dec
cmp
fs
xor
stc
pop
aaa
loope
xlat
scas
test
xlat
mov
mov
pop
insl
sti
fwait
jge
adc
sub
cli
insb
mov
call
je
movsl
and
cmp
test
ss
add
jbe
pop
int3
fidivl
leave
fwait
enter
add
cmp
sub
mov
jbe
daa
jnp
cld
cmp
sbb
repz
jp
adc
sub
insl
ss
out
addr16
jge
jp
mov
bswap
pop
add
test
xchg
in
cli
xlat
mov
pop
dec
xchg
popf
sbb
dec
or
pop
sbb
mov
pop
sub
das
gs
rorl
pop
and
cmpsb
pop
insl
movups
sahf
sbb
mov
dec
mov
rorl
dec
sbb
out
xor
fdivs
or
adc
lods
mov
cld
daa
inc
xor
xchg
dec
cmp
in
dec
or
rcl
xchg
adc
in
sahf
mov
push
cld
jge
lahf
fidivl
adcl
in
addr16
sahf
es
fs
in
xor
push
aaa
adc
int3
in
mov
adc
int
dec
arpl
pop
imul
lods
xor
push
add
push
scas
in
or
rorl
and
jecxz
shrl
inc
daa
jecxz
adc
aad
gs
mov
sbb
mov
xchg
add
xor
aam
xchg
mov
test
jg
push
jnp
dec
mov
mov
sub
cmp
add
inc
iret
repnz
in
ss
ffree
aam
fldl
xchg
and
rclb
cmpl
cmpl
lret
mov
ljmp
sbb
or
mov
mov
pushl
jp
pop
stos
pop
mov
stc
es
sti
add
mov
hlt
jnp
fisttpl
stos
sub
test
cmp
jae
jns
jecxz
jbe
mov
fmul
sbb
or
push
mov
jl
dec
imul
and
popa
sbb
into
xor
jnp
pushf
xor
lods
xchg
mov
jle
mov
or
and
fbld
repz
jno
out
adc
or
daa
lds
push
jle
enter
ljmp
sub
mov
and
dec
cmpsl
inc
sbbb
in
repz
int3
shll
lret
adc
pop
out
lcall
aas
test
push
cs
stc
sub
mov
xchg
je
scas
js
test
aas
cmp
into
repz
mov
push
jns
xchg
or
adc
push
cmp
cmp
jg
lcall
fiadds
scas
xchg
test
out
or
adc
hlt
mov
dec
mov
add
adc
and
pushf
mov
arpl
mov
pop
inc
scas
popa
das
inc
push
adc
or
and
xor
addr16
dec
pop
int3
sbb
lret
cmp
in
push
or
pop
pop
adc
shlb
sub
mov
inc
cmc
adc
je
or
movl
out
clc
mov
fidivs
scas
jmp
testb
push
xor
mov
jg
je
std
loopne
cli
cmpsl
call
fcoml
mov
repz
jle
xor
cmp
int3
test
into
mov
cmp
pop
int3
dec
sbb
lret
cltd
push
mov
in
or
jnp
roll
aaa
jl
cmpsl
mov
insb
std
sub
sti
adc
mov
dec
pop
fstenv
push
call
mov
add
pop
fs
push
es
dec
xor
rcrb
std
pop
jg
imul
sarl
jae
sbb
aam
pop
out
les
dec
dec
jns
xchg
jp
inc
mov
mov
xor
xor
sbb
cwtl
jge
cmpsl
rcrl
sbbl
mov
mov
fldt
das
ficompl
hlt
fisttpl
dec
fidivrl
sbb
sti
sahf
jbe
and
mov
sub
outsl
ss
sub
fidivrl
xchg
and
push
dec
jmp
mov
push
shrl
int
or
and
ds
mov
xor
and
call
fwait
mov
test
shll
inc
mov
popf
ret
xor
mov
cli
das
fcoms
lds
movsb
add
es
adc
cltd
dec
adc
mov
fildll
dec
or
jb
sub
cmpsb
adc
loopne
adc
cltd
xchg
pop
mov
pop
sbb
call
cmp
in
movsl
mov
js
or
pop
cmc
push
push
outsb
and
sub
jecxz
and
push
cmp
pop
mov
pop
in
mov
in
insb
pushf
es
adc
fsub
xchg
adc
xor
mov
insb
aam
jmp
iret
int
nop
sub
lret
adc
mov
lret
jecxz
pop
push
imul
xor
pop
icebp
mov
xchg
out
sbb
inc
push
inc
int
fwait
hlt
gs
xchg
pop
push
xchg
incl
scas
push
mov
pop
outsb
mov
shlb
clc
jl
push
xchg
cli
outsb
gs
inc
in
test
fisttps
lahf
cltd
sbb
dec
mov
mov
clc
sbb
jg
div
cmp
xchg
xor
cmp
shrl
popa
inc
xlat
daa
push
cmpb
out
add
fstpt
mov
das
loop
jl
stos
leave
add
or
sbb
jmp
jmp
adc
pop
push
sarl
mov
xchg
clc
inc
sub
sahf
enter
mov
jne
mov
xchg
stos
es
inc
jl
lret
cmp
vmovmskps
xchg
call
dec
or
mov
or
into
rorb
jae
pop
cld
pop
mov
adc
adc
test
in
arpl
hlt
gs
imul
inc
insl
sbb
jbe
mov
pop
leave
jp
mov
mov
add
stos
push
fwait
aam
mov
vunpckhps
stc
xlat
push
xor
fstpt
cmpsb
fcoms
xchg
cwtl
std
aad
pushf
pop
popf
mov
rcrb
jle
rcr
dec
call
arpl
shll
scas
sub
bound
sahf
shl
cltd
nop
in
scas
or
stos
cmp
leave
pop
pop
bound
push
xor
adc
mov
dec
xchg
sub
stc
test
popf
das
nop
xor
add
popa
dec
dec
cmp
repnz
insb
lahf
mov
xchg
ja
add
sub
sub
xor
imul
std
in
sub
cmp
icebp
fldt
aas
push
dec
fabs
sbbl
xlat
pop
testb
jns
xchg
mov
mov
loopne,pt
loop
xchg
aam
iret
and
jmp
addr16
pushf
push
test
adc
mov
lods
rcrb
stos
out
ret
mov
divl
or
jae
sub
arpl
in
insb
mov
mov
ret
cmpsl
xor
push
shrl
sub
mov
sahf
cmp
mov
popa
and
jle
out
mov
mov
mov
mov
daa
hlt
cmp
icebp
dec
in
and
cmpsb
pop
sub
pop
movsl
dec
sarl
mov
lods
imul
and
push
mov
push
mov
and
pop
sbb
into
dec
xchg
pop
jl
call
and
or
jecxz
test
lea
imul
push
jne
in
fcoml
outsl
lea
call
dec
adc
or
shrl
jp
outsb
or
mov
daa
repz
scas
cld
jnp
xchg
inc
jbe
or
mov
aas
push
loopne
test
cmp
jo
fistl
mov
sbb
jbe
int
repz
pop
repz
test
fwait
adc
jle
cmp
sub
push
mov
push
ja
lcall
add
popa
fcoms
fldl
sub
outsl
mov
out
ljmp
pop
sbb
mov
fimuls
push
push
fsubr
lock
jnp
xchg
cld
jmp
orl
cmp
imul
sub
jno
loop
pop
loop
jmpw
xchg
arpl
sbb
adc
xchg
rclb
lret
jge
mov
ds
mov
cmpb
jno
pop
mov
mov
imul
sbb
dec
cmpb
aad
xchg
mov
cltd
cmp
sub
cmp
icebp
iret
out
push
icebp
pusha
jmp
jl
ret
shrl
lods
mov
or
and
pop
add
jns
mov
in
inc
push
jge
jae
adc
sbb
jecxz
cld
mov
jns
mov
add
fwait
mov
mov
ja
ficoml
mov
jl
int
or
sti
je
inc
xlat
repz
dec
daa
inc
popf
pause
pop
pop
movsl
cs
repnz
xchg
fmull
test
inc
dec
scas
imul
mov
push
pop
and
xchg
and
cwtl
add
pop
xchg
fcomip
cmp
xchg
icebp
ja
ds
nop
xchg
jge
imul
shr
push
fisttps
mov
out
dec
hlt
hlt
sbb
dec
lahf
sbb
pop
pop
lret
int3
mov
je
push
negb
xchg
cmp
push
das
addr16
ret
mov
nop
outsl
pop
cmp
add
jmp
div
xchg
aam
jne
mov
push
sbb
xchg
adcl
pop
jae
mov
sbb
ss
insl
int
xchg
mov
lods
jg
movsl
inc
jae
dec
or
in
and
ret
inc
push
xchg
dec
mov
fcmove
jg
add
fmuls
js
jbe
mov
adc
jecxz
add
inc
xor
inc
js
mov
mov
imul
daa
hlt
jbe
mov
mov
addr16
adc
imul
push
test
xchg
insl
jle
add
mov
mov
pop
xlat
xor
inc
scas
sti
push
jle
jp
push
nop
in
mov
adc
pop
out
sbb
xchg
push
aam
jae
dec
addb
dec
leave
xchg
or
in
push
cs
cmp
push
inc
je
enter
and
pop
mov
cmpsb
lret
ret
xchg
mov
jb
cmpsb
mov
ret
mov
cmpsb
outsb
repnz
fwait
dec
js
jmp
jp
sti
xchg
cmc
xchg
in
outsl
mov
xlat
xor
lods
lods
adc
add
jmp
repnz
mov
rcrl
add
add
lods
outsl
data16
or
in
cmp
jmp
pop
mov
inc
add
sbb
adc
xchg
sub
xchg
ja
jmp
aaa
and
pop
test
cli
addr16
pop
cli
lahf
popa
or
mov
pop
mov
movsb
inc
mov
ds
mov
loop
adc
push
mov
aaa
pop
jg
inc
into
shrl
int
xor
js
out
sub
cli
push
mov
push
mov
mov
gs
xor
and
repz
cwtl
and
jle
test
cwtl
cltd
and
int
das
xchg
adc
inc
mov
dec
cmpsb
in
cmp
fidivl
inc
and
push
mov
aaa
push
shlb
add
in
mov
clc
jle
pop
sahf
fnstsw
add
leave
or
xor
test
adc
aad
sub
icebp
xchg
xchg
leave
rolb
es
sub
sbb
and
mov
add
mov
shrb
xor
push
adc
mov
es
clc
add
push
arpl
jnp
sub
sarb
jge
jae
push
push
or
notb
pop
aaa
daa
icebp
mov
push
mov
push
scas
lret
dec
cmpsl
mov
adc
in
aad
cmp
sbb
and
mov
xor
xchg
mov
push
cmpsl
adc
movsl
stos
cmp
pop
cli
int3
popf
jnp
adc
inc
pop
lods
fisttps
aas
add
lods
xchg
dec
add
cwtl
mov
lods
mov
mov
push
mov
imul
adc
icebp
push
mov
sub
fcomps
sub
int3
inc
dec
iret
push
mov
lret
out
sahf
nop
or
scas
aaa
fwait
mov
pop
ds
in
pop
push
lods
mov
add
testl
std
xchg
mov
out
lahf
jp
in
mov
jnp
aad
inc
xor
adc
mov
adc
dec
xor
adc
or
cmp
jmp
pop
cmc
cli
orl
fiadds
mov
xchg
xchg
sub
and
lahf
dec
ds
call
pop
lea
adc
ficoms
mov
decb
jle
ret
xor
cmp
cmpsl
sti
outsl
shr
lret
fdiv
ds
mov
aad
jge
add
mov
hlt
sti
in
dec
in
xchg
jecxz
mov
push
or
mov
jl
out
jae
pop
inc
mov
cli
pop
xor
mov
lods
mov
sbb
cmp
rdmsr
mov
dec
mov
sub
rclb
rorb
cs
fiaddl
sub
inc
gs
jp
or
pop
cld
jecxz
pop
fiadds
lods
mov
add
xchg
jp
mov
adc
xchg
cmp
push
xchg
std
mov
stc
mov
imull
stos
mov
add
add
fisttpll
fwait
les
mov
inc
dec
mov
insl
imul
jo
jae
mov
loopne
or
sub
mov
add
or
call
xchg
push
jbe
pop
xchg
cmp
inc
mov
xor
adc
xchg
mov
loop
loopne
mov
lods
mov
xor
rcrl
iret
dec
fs
rolb
nop
cwtl
push
or
xchg
mov
or
je
xchg
addr16
cmp
sub
mov
push
sahf
stos
rclb
cmp
mov
cmpl
ljmp
or
sbb
mov
dec
cltd
or
shrb
cwtl
fwait
cld
xchg
int
adc
add
aas
jnp
int3
xchg
out
lds
mov
out
xchg
mov
adc
inc
arpl
jbe
notl
daa
fnstsw
add
faddl
rcll
out
clc
daa
cmp
adc
pop
lret
cmpsl
lea
sub
jo
fdivr
jle
sbb
or
sbb
add
add
add
test
rcll
xor
scas
movsl
popa
es
scas
mov
mov
pop
sbb
add
ljmp
arpl
mov
jne
aas
stos
jl
shl
sub
je
lods
sub
out
loop
fxch
xchg
insb
cmp
pop
cltd
adc
push
add
and
cltd
out
mov
inc
ds
sbb
jmp
fisubrs
jnp
mov
sbb
add
mov
lahf
insb
add
inc
dec
mov
xor
mov
enter
cld
out
push
jo
sub
arpl
mov
loop
pop
mov
ficoml
mov
xchg
test
jge
xchg
int3
and
mov
stc
rcrl
fst
sbbb
jp
lods
test
lods
xor
out
push
dec
jge
or
repz
data16
arpl
lods
sahf
mov
aad
push
lea
pop
addb
xor
xchg
cmpsb
jl
dec
jno
and
sub
xor
cmpsb
fisttpl
and
mov
xchg
lahf
aam
stos
xchg
sbb
call
pop
js
mov
adc
nop
dec
lret
insb
mov
gs
shll
sti
das
aas
xor
mov
dec
in
test
stos
mov
lcall
pop
push
push
jnp
mov
je
fsubs
popa
cmp
dec
push
icebp
in
jl
lcall
jle
sub
andb
push
fs
xchg
push
out
filds
insl
xchg
push
mull
leave
mov
push
mov
test
xchg
cld
insb
inc
inc
loop
pushl
out
and
and
cltd
imul
mov
push
mov
rclb
imul
fwait
xchg
pop
fcoms
test
addr16
imul
cmp
mov
add
movl
pusha
outsb
clc
cmp
xor
faddl
add
aad
das
movsl
cmp
loope
mov
loope
repz
rorl
jb
mov
lock
rorl
repz
popf
pop
int3
or
sbb
cmp
jo
shlb
inc
xchg
adc
adc
in
aam
stos
or
out
cltd
pop
pop
xchg
shl
jg
ffree
fsubrl
dec
sub
mov
mov
inc
push
cmc
ja
idivb
and
les
cmpsb
cmp
cmpl
mov
lea
orb
aas
push
hlt
ret
out
fisttpll
repnz
dec
fstl
inc
xor
in
xlat
cmc
push
push
cmc
loope
je
adc
pop
dec
test
adc
fdivp
dec
xlat
adc
xor
cmp
jmp
call
ss
mov
xor
in
loope
sbb
xor
nop
scas
fucomi
jno
dec
mov
mov
lret
push
cmpsl
xor
popf
in
mov
add
repnz
fnstcw
data16
outsb
fs
and
xor
iret
add
xor
lea
call
pop
or
subb
nop
inc
stos
andl
push
push
adc
fists
mov
xor
pop
jno
cs
leave
or
lds
incl
cmp
test
scas
pop
lock
pop
out
jae
shrb
xchg
adc
nop
add
mov
cmpsl
mov
xor
sahf
pop
nop
adc
jb
jbe
jmp
fdivs
lcall
ret
cmp
mov
xchg
lcall
push
pusha
push
inc
adc
sbb
xor
rclb
mov
jg
lahf
jo
loope
jecxz
lods
pop
add
hlt
cmpsl
and
and
test
andb
mov
sar
repz
ror
mov
insl
scas
cwtl
and
adc
enter
mov
aas
xchg
inc
mov
and
pop
fstp
sub
aad
push
icebp
sbb
out
jp
adc
sbb
in
adc
outsl
arpl
adc
mov
cmp
iret
outsb
lods
jnp
daa
rorl
jle
xor
cmp
scas
mov
repnz
leave
push
loope
mov
push
sbb
cmp
mov
enter
cmova
or
popa
mov
sbb
add
dec
inc
mov
add
lods
cmp
mov
inc
out
sbb
inc
adc
adc
inc
sub
sub
bndstx
lcall
cmp
ss
inc
sub
dec
aad
xchg
sarb
push
fdivl
jp
xor
jle
das
insl
push
mov
xor
stos
xor
pop
or
out
test
gs
mov
int3
mov
add
hlt
mov
fbstp
popa
inc
in
clc
xorl
add
cmpsb
cmp
add
fisubl
pop
xlat
add
cmp
das
inc
pop
cmp
push
or
dec
jle
mov
cmpl
push
outsb
pop
lret
or
insb
leave
das
push
push
out
lock
mulb
cld
es
sbb
xor
mov
idivb
scas
popf
psrlw
sbb
fcmovu
jns
jbe
in
jns
push
cs
sub
or
mov
jle
and
inc
inc
inc
clc
bound
dec
std
mov
jb
test
ret
std
xorb
mov
insb
inc
adc
loop
lret
pop
bound
dec
mov
rorb
cmp
leave
ret
or
add
lcall
inc
fwait
loop
sub
mov
mov
pop
popa
or
das
je
cmp
ret
cmpsl
dec
pop
adc
pop
xchg
jp
jge
jno
and
pop
mov
inc
mov
sbb
inc
xlat
sub
xor
or
sub
pop
mov
mov
push
cmc
jecxz
imul
mov
cli
movsb
scas
inc
es
lods
aaa
xchg
mov
call
cmpsl
mov
and
outsl
data16
or
repz
pusha
mov
or
lods
xor
sbb
mov
xchg
ficoms
sbb
pop
leave
outsb
dec
push
sub
push
rcll
test
sahf
push
xchg
push
mov
mov
inc
and
xor
sub
and
fisttps
jmp
imul
in
repnz
loopne
es
repnz
dec
ja
dec
mov
push
insb
aad
push
xlat
lea
push
pop
mov
add
xor
fsubrs
and
mov
xchg
test
push
or
pop
les
jnp
or
test
insl
mov
insl
xor
dec
push
popf
jl
jae
jp
leave
pop
and
cmp
inc
pop
es
xchg
jle
xchg
repz
xchg
add
test
dec
enter
lds
cwtl
mov
mov
mov
or
arpl
cmp
pop
outsl
add
test
mov
es
add
pushf
test
dec
in
data16
int
movsb
stc
and
fbstp
out
mov
mov
lret
gs
adc
clc
cmpsb
inc
faddl
push
out
mov
xchg
popa
aad
das
test
jb
lahf
inc
mov
insl
dec
lods
dec
ljmp
pop
mov
test
sbb
cmc
ret
jge
fistpl
popf
insb
mov
dec
in
sti
sbb
clc
mov
scas
popf
pushf
adc
mov
test
bound
movsb
adc
inc
test
mov
loopne
xor
mov
gs
add
ret
ja
mov
addr16
add
cmpsb
stc
dec
xor
mov
fucomp
xor
rol
or
call
add
lock
mov
pop
xor
push
data16
dec
cmp
mov
ja
jmp
push
sbb
ret
imul
xor
stos
in
pop
mov
inc
push
ret
inc
movsb
js
push
jp
inc
std
inc
mov
mov
pushf
xor
xchg
dec
pop
pop
inc
cmp
adc
ficompl
or
dec
into
leave
imul
mov
icebp
adc
loopne
shrb
ja
xor
movsb
popf
dec
mov
outsl
inc
or
mov
pop
jns
sbb
lret
mov
insl
int
cmp
jge
add
mov
in
loopne
cmp
adc
cmp
andb
dec
repnz
int
nop
or
jnp
insl
and
jmp
xor
push
mov
dec
jbe
cld
mov
cmp
push
sub
popf
mov
stos
enter
lods
sahf
loop
inc
mov
in
pop
push
sbbb
ss
push
sbb
cli
push
test
pusha
mov
incl
jb
cli
ds
call
mov
loopne
lea
ss
mov
jo
and
fwait
sbb
mov
sbb
out
jmp
and
jg
outsb
push
dec
xlat
stos
les
cli
hlt
cmp
sub
stos
and
jl
nop
jle
sarb
in
iret
or
dec
addb
dec
jns
imul
xchg
outsl
mov
mov
ja
pop
cltd
push
shll
and
cli
and
rcll
cli
adc
fsubrs
mov
outsl
and
or
pop
incb
in
xchg
mov
movsl
xchg
pusha
test
cmc
pop
rcl
sub
imul
sub
loopne
into
or
dec
cmc
pop
rolb
mov
sbb
lcall
xchg
rol
ret
jecxz
repz
xlat
mov
lods
jle
hlt
insb
sbb
mov
dec
or
xchg
or
mov
sbb
add
cli
and
pandn
repz
bound
shlb
daa
add
cmp
push
push
dec
cmp
inc
push
test
cs
aas
jbe
movsl
sub
ret
fdivrs
arpl
fcmovnu
add
push
ret
inc
mov
cmp
xchg
xchg
jne
pop
cmp
loope
xchg
pop
loopne
xchg
cmp
mov
dec
ret
jnp
inc
dec
pop
mov
leave
mov
sbb
push
std
add
mov
inc
jl
ja
pushf
xor
sti
int3
repnz
je
dec
jle
iret
lock
xor
jnp
data16
pop
test
test
cmp
push
pop
xor
ja
shll
decb
sbb
jnp
mov
test
jp
mov
inc
xor
mov
into
xchg
mov
xchg
push
insb
jle
dec
push
mov
sub
mov
adc
dec
jae
nop
push
out
insb
lods
clc
jl
pop
sbb
push
repnz
xor
mov
frstor
sahf
jl
jge
clc
mov
push
or
jb
das
adc
push
mov
jle
repz
jg
inc
push
rcrl
mov
insb
movsl
mov
inc
clc
fcomps
sub
mov
sbb
dec
sub
xchg
jmp
mov
pusha
loopne
push
xchg
stos
dec
jne
inc
jns
push
or
jg
mov
pop
scas
insl
mov
adc
push
mov
sub
pusha
dec
xchg
out
int
in
in
and
enter
mov
andb
pop
push
add
dec
cmc
daa
push
fwait
lds
lock
mov
jbe
mov
jecxz
test
xchg
lret
sbb
mov
dec
int3
jg
mov
and
js
rclb
sbb
rcll
push
rcll
mov
xchg
cmp
addb
push
and
call
out
pop
stos
pop
popf
cli
repnz
pop
fs
dec
imul
lea
ret
jmp
push
stos
sub
test
stos
nop
push
xor
push
ljmp
cmpsb
call
adc
mov
mov
test
and
pop
test
fidivs
out
add
mov
jmp
aas
iret
mov
cmp
int3
or
jns
movsb
imul
or
movsl
in
std
mov
sbb
and
and
popa
mov
popf
shll
idiv
pushf
stos
jle
push
out
dec
inc
shlb
mov
dec
xchg
fcoms
lds
cmp
adc
add
outsb
shlb
sarl
pop
adcb
pop
jnp
xor
inc
and
mov
jnp
popf
mov
sbb
and
pushf
mov
repz
dec
or
lret
call
in
clc
cmp
jns
jo
jl
fs
out
mov
pushf
fstpl
ja
mov
lea
mov
pop
sbb
xchg
bound
sub
dec
jnp
jmp
rorb
daa
call
xor
inc
pop
sub
xor
dec
mov
sbb
mov
mov
cltd
xor
lods
push
mov
pop
out
inc
sar
and
add
imul
mov
jno
xor
imul
mov
dec
push
iret
mov
jae
cli
jle
inc
jnp
and
dec
clc
lods
and
cmc
adc
push
aaa
xor
jl
push
sub
xor
cmp
aad
mov
ja
aaa
jne
adc
mov
xor
jge
notl
aas
scas
ret
shlb
fnstsw
mov
mov
mov
je
push
repnz
loop
inc
jmp
lock
mov
mov
inc
inc
mov
fwait
xor
fcmovnbe
jmp
je
mov
mov
jne
repnz
and
cmp
xor
mov
inc
push
ja
jg
les
mov
cmp
inc
adc
cwtl
ja
xchg
xorl
lea
xchg
jnp
rclb
ds
sub
nop
mov
cmp
mov
ss
rclb
xchg
add
jl
das
and
sub
sarl
mov
imul
sarl
adc
add
adc
loope
cmpl
push
loopne
into
dec
out
mov
sbb
mov
scas
push
dec
xlat
leave
dec
mov
daa
sub
fldt
push
adc
dec
adc
sub
cmpsl
icebp
cld
std
dec
stos
sub
inc
cs
bound
add
jbe
push
test
test
mov
jmp
dec
mov
inc
movsb
dec
xor
imul
jns
cmp
lds
xchg
dec
in
and
fsubrs
adc
fwait
xor
nop
jmp
or
bound
mov
lcall
adc
lods
es
or
add
ds
push
scas
pusha
sahf
xchg
mov
ror
data16
les
and
loope
jl
lea
push
push
bound
fmull
cmpsl
push
cmpb
inc
xchg
jecxz
in
psrlq
mov
adc
outsl
movsb
sub
inc
cltd
dec
lahf
mov
pushf
mov
or
and
icebp
shlb
std
xor
and
ret
dec
jne
inc
add
jnp
mov
test
mov
arpl
faddl
mov
cs
mov
into
pusha
pop
xchg
dec
xlat
mov
add
push
pop
insl
daa
dec
cltd
test
and
inc
fmull
inc
testl
leave
mov
mov
jne
mov
loop
cmp
mov
js
adc
in
jmp
push
dec
inc
xor
fsts
out
pop
lret
fwait
push
sbb
add
push
jle
loopne
xchg
jmp
lock
stc
lock
inc
shrb
pop
fsub
add
push
sub
adcb
sub
xchg
push
lret
ss
push
or
pushf
sbb
and
popa
lahf
xchg
add
not
call
test
iret
cs
and
xchg
lods
in
mov
test
sub
push
mov
adc
cmp
rolb
lea
scas
sub
cmp
fldenv
fisubrs
and
cmpsb
sbb
mov
push
jg
in
popa
andb
xchg
nop
leave
sarb
je
imul
push
mov
fmulp
int
mov
imul
lret
test
pop
push
or
fstpl
xchg
ljmp
mov
mov
scas
mov
jecxz
cltd
or
cmp
inc
jne
or
mov
lret
repnz
dec
icebp
ja
xlat
andl
dec
mov
dec
mov
lds
scas
pushf
subl
xor
js
cmpsl
xor
or
mov
pop
push
fidivrl
aam
stos
sub
icebp
sub
jne
stos
imul
adcl
pop
cwtl
push
or
notl
push
clc
fistl
fsubr
inc
ffree
xchg
in
fcmovbe
cmpsl
rorl
mov
popa
or
adc
lret
icebp
adc
loope
dec
jne
inc
aam
dec
stos
movsb
dec
movsb
push
rcrl
daa
sti
or
xchg
cli
mov
dec
pop
xchg
mov
int3
bound
sub
jg
int
cmpsb
xchg
sub
jl
in
xor
push
fnsave
adc
test
cmp
and
xchg
and
fisttps
mov
shrb
and
jecxz
add
ret
movsb
and
mov
mov
pop
test
sahf
xchg
in
add
jg
stos
jne
mov
mov
int3
test
aas
push
pop
mov
cmp
sbb
push
adc
xchg
popa
mov
sbb
iret
je
imul
add
incb
addr16
pop
into
lock
scas
fildl
int
jbe
cmp
mov
mov
push
fwait
mov
or
lds
xor
ffreep
stos
mov
xchg
pop
fcoml
mov
pop
pop
test
push
lods
pop
xchg
inc
add
mov
out
lret
mov
jg
inc
inc
sti
lret
dec
push
sub
lret
inc
shll
jnp
inc
out
loope
sbbb
dec
xor
mov
lcall
ret
mov
jle
sahf
stc
mov
push
mov
pop
adc
push
and
mov
dec
push
or
pop
sti
push
ljmp
jbe
testl
xchg
mov
aam
sub
dec
xor
add
insb
inc
or
push
cltd
das
fcompl
jmp
inc
jl
aas
mov
insl
or
xlat
and
addr16
mov
out
in
push
test
push
sub
mov
adc
sub
ret
subb
fbstp
dec
in
shl
addr16
jmp
data16
jne
repnz
testb
mov
idivb
nop
in
mov
or
je
fs
mov
addb
hlt
jp
add
rorl
jg
push
es
jmp
shrl
pop
sbb
mov
adc
inc
pop
xor
pop
mov
mov
rclb
xchg
or
push
mov
nop
jmp
addb
mov
dec
cmp
shl
push
pop
xchg
or
cs
dec
dec
mov
cld
or
add
and
lcall
testb
pushf
dec
into
jge
lcall
in
loop
dec
fmuls
push
mov
fwait
in
add
jnp
outsb
enter
inc
jecxz
dec
adc
insb
inc
cmp
jp
cmc
mov
dec
cltd
loop
inc
mov
jl
inc
sti
fstp
jae
insl
cmpsl
and
mov
or
lret
in
jne
mov
jne
jns
int
mov
jae
cld
add
in
rclb
or
cltd
mov
pop
imul
int
roll
jae
cltd
rcrb
push
push
les
fidivl
arpl
xchg
adc
pusha
fs
imul
stos
add
incb
sti
cmp
andl
je
lret
out
xor
push
nop
sbb
roll
hlt
pop
pop
je
xchg
testb
mov
xchg
mov
jb
scas
leave
mov
dec
test
pop
nop
cld
push
inc
or
jl
inc
pop
mov
jno
ret
imul
out
mov
mov
push
and
repnz
cli
jmp
fwait
add
pusha
jo
insl
fcompl
subb
or
dec
inc
jns
fnstenv
insb
mov
test
imul
enter
inc
xchg
pop
and
es
loope
mov
cmpsl
pop
insl
hlt
in
push
std
fmull
ja
ret
stc
and
jmp
fmul
iret
cltd
in
adc
cmc
leave
movsl
sub
and
adc
pop
mov
and
jg
jo
mov
adc
cmc
loope
xor
xor
rcll
imul
cmc
sub
adc
mov
nop
test
in
mov
cs
les
gs
das
sahf
xchg
pusha
push
push
jno
push
out
sub
jg
leave
std
sub
loopne
mov
jmp
adc
mov
inc
testb
stc
mov
push
push
push
mov
jle
sbb
flds
nop
cmc
fs
inc
mov
test
push
jnp
fwait
sti
out
sub
lret
mov
mov
stos
scas
jmp
jno
imul
cmp
inc
inc
loopne
mov
jb
iret
leave
mov
pop
mov
cltd
add
and
into
mov
bound
jge
and
pop
sbb
stos
mov
shl
shl
insb
xchg
and
mov
xchg
jno
test
xorb
into
mov
les
and
leave
lret
mov
call
std
into
int3
xchg
cs
ret
test
sbb
inc
pushf
mov
jge
jo
icebp
les
sbb
xorl
pop
dec
xorb
xchg
jmp
mov
sbb
xchg
imul
dec
out
cs
cltd
mov
mov
mov
cli
std
fisttps
insb
scas
adc
ret
into
adc
jmp
inc
xlat
lods
dec
cwtl
xor
fs
icebp
add
lods
mov
loope
dec
xchg
pop
add
sbb
lahf
xor
jae
adc
rorb
pusha
jbe
cmp
out
mov
daa
lahf
jnp
or
xchg
stc
mov
fistpll
and
mov
xlat
xchg
mov
call
add
jl
cwtl
pop
pop
mov
fildll
push
je
stc
cmpsl
jmp
in
roll
in
adc
xchg
mov
sbb
test
jbe
adc
pop
mov
dec
mov
jmp
leave
pop
or
jbe,pn
outsb
outsb
xor
rcrb
mov
push
insl
sub
es
stos
ljmp
or
xchg
sbb
or
pop
movsl
data16
pop
loop
dec
mov
push
cmp
imul
mov
mov
jle
repz
outsb
push
fidivrs
movsb
xchg
mov
mov
ror
mov
cld
jbe
cmc
in
ljmp
xor
inc
dec
sbb
inc
xchg
jne
push
movsb
dec
or
outsl
push
push
adc
sahf
stc
shl
push
and
out
iret
xor
xchg
adc
xchg
lock
cmpsb
leave
add
jbe
inc
nop
dec
add
je
jg
or
xchg
mov
xchg
mov
push
mov
push
dec
push
rclb
rclb
pop
add
test
xor
xor
dec
mov
sub
xor
xchg
js
test
or
and
pushf
pop
inc
pop
push
dec
sub
pop
or
push
inc
cmp
push
mov
aad
mov
out
in
mov
mov
and
add
bound
fmul
jno
pop
dec
movsb
inc
lcall
and
xor
ss
push
clc
in
add
cmpl
rclb
scas
push
adc
lea
xor
dec
lock
mov
cmp
mov
out
dec
add
jg
mov
shrb
pusha
sti
pop
insl
push
jecxz
adc
push
fdivrp
xchg
and
outsb
cmpsl
in
and
sbb
sti
call
test
mov
sbb
cmp
rolb
lcall
fdivrl
mov
sbb
fcompp
pop
test
je
lret
mov
mov
pushf
xor
loopne
xlat
mov
lret
fistps
icebp
mov
pop
or
xchg
aaa
outsb
jbe
xor
shl
sbb
add
jo
dec
fdivrl
sub
dec
mov
pushf
ss
mov
loope
insl
in
sti
pop
outsb
mov
cltd
mov
mov
hlt
les
fdivl
mov
mov
pop
data16
loope
arpl
xchg
adc
sbb
mov
and
movsb
iret
fs
cmc
jne
mov
into
jmp
push
call
xchg
mov
ret
je
xor
jge
pop
xchg
cmc
bound
push
sahf
push
repnz
fs
sbb
scas
xor
pop
fdivp
subl
stc
lcall
sbb
js
mov
mov
cmp
sub
negb
mov
fwait
sbb
out
inc
notb
aaa
xchg
mull
sub
ljmp
cli
fwait
cwtl
mov
stos
lret
test
push
add
and
movsb
adc
mov
incb
adc
insb
inc
ret
fimuls
push
or
dec
jge
mov
push
inc
mov
jae
xchg
sub
mov
xor
in
sbb
or
mov
jl
scas
mov
inc
movsb
lods
xor
jg
mov
pop
pop
and
fwait
add
test
data16
and
loopne
cmc
mov
stos
jbe
cmpsb
jno
idivb
lahf
cld
xor
lods
imul
aam
cmc
lea
push
add
dec
cmp
inc
xchg
mov
shl
scas
jne
xchg
mov
or
shll
xchg
out
dec
int
mov
test
loop
out
cltd
adc
in
mov
movsl
push
jecxz
and
pop
cmpsl
leave
and
and
call
sub
lcall
int
js
std
xlat
cmpsl
data16
jmp
lds
call
mov
inc
cmpsl
dec
les
push
ror
mov
or
cltd
fldt
mov
push
in
sbb
test
movsb
push
stos
jb
mov
sbb
cmp
adc
jns
icebp
fninit
bound
into
rcrb
dec
mov
jg
iret
jg
rcl
imul
in
adc
shll
and
test
jno
cmp
add
xchg
adc
sbb
push
and
or
or
inc
sub
push
pop
ss
in
call
loop
cwtl
adc
inc
push
rcr
ficompl
push
movsb
pop
insb
nop
jo
ljmp
add
jnp
add
and
pop
and
add
lret
pop
rcrl
inc
add
arpl
out
inc
xchg
scas
test
adc
in
dec
pop
or
test
ss
js
xlat
int
cltd
add
lcall
xchg
add
jns
pop
mov
jle
call
int
dec
push
repz
mov
jns
add
sub
aas
cwtl
inc
fisubs
rcrl
mov
sub
movsb
mov
scas
dec
test
fcompl
pop
aad
repz
jns
mov
lds
mov
in
mov
add
out
sti
add
sbb
lods
xor
mov
push
sti
dec
insb
mov
dec
jl
xor
dec
push
or
mov
lods
rcr
bound
add
fidivl
inc
nop
mov
inc
test
ja
mov
and
fiadds
dec
pop
and
or
adc
add
scas
movsl
fs
cmpsb
pop
mov
shrl
mov
mov
mov
dec
mov
arpl
ljmp
ficoms
mov
cmp
dec
loop
repz
cmp
fldlg2
jns
es
rcrb
inc
cli
sub
loop
cmc
adc
pop
test
mov
imul
mov
xchg
jl
jmp
mov
cmp
pop
xor
mov
pop
and
sahf
pop
repnz
out
int
cmc
cs
push
pusha
inc
and
add
jg
je
cld
adc
in
mov
sub
lock
pop
leave
adc
es
push
adc
in
sub
push
jp
clc
mov
or
dec
cmc
adc
call
jecxz
push
ss
stos
xor
xchg
xor
adc
outsb
push
iret
lods
cs
ret
fdiv
xor
cmp
test
sub
xor
stos
xchg
jb
lret
lds
sbb
cld
xor
movsb
imul
inc
std
pop
imul
enter
xor
mov
push
pushf
movsl
idiv
mov
imul
insb
test
xchg
int
aam
mov
sub
shr
pop
add
lods
adc
rcr
addr16
scas
fs
inc
sub
jmp
stc
sub
je
jl
scas
and
mov
call
stos
mov
clc
jo
xchg
dec
mov
adc
jnp
stos
mov
push
cwtl
repnz
inc
fdivrs
lret
pop
xor
adc
pop
mov
xor
and
jge
jge
stos
mov
jbe
push
shrb
and
pop
inc
jne
xor
push
lcall
popa
push
dec
dec
divl
jae
push
popa
sbb
sbb
sub
jecxz
xor
sbb
lret
test
lea
mov
loope
mov
out
lds
call
xchg
lret
data16
push
ljmp
pusha
lret
lret
sbb
mov
dec
inc
sub
int
rclb
xchg
adc
aas
jno
in
dec
outsb
cmpsl
popf
cmc
loop
sub
mov
lock
mov
data16
gs
cmp
add
out
inc
jnp
scas
mov
sbb
mov
insl
test
popf
xlat
addb
jo
mov
dec
pop
lret
std
adc
jb
andps
dec
pusha
out
mov
jae
daa
xchg
fcomp
jns
rcll
mov
pop
stos
inc
add
jne
bswap
pop
and
xchg
aas
or
enter
lcall
mov
int
out
int3
sbb
jmp
ljmp
add
std
sub
test
sbb
stc
or
nop
pop
cmp
mov
sub
mov
call
lret
inc
fs
fsubs
xor
cmpsl
rcrl
bound
lret
enter
pop
test
dec
loopne
add
add
andb
lods
ss
shll
addr16
dec
cmpsb
shll
mov
mov
push
iret
and
jne
add
xor
bound
testb
cmp
ja
jmp
imul
into
pop
sbb
pop
repnz
add
xchg
xor
jbe
test
leave
adc
push
xchg
out
mov
and
add
jbe
pop
insl
out
xchg
xor
pop
push
rol
roll
adc
inc
sub
outsb
sbb
jns
cmp
cmpsb
arpl
lahf
sbb
out
mov
test
pop
mov
xor
pushf
add
pop
lcall
cmp
xchg
aaa
iret
push
jbe
dec
xchg
push
xor
and
stos
cmc
test
enter
cmp
inc
cmp
out
dec
adc
cmp
add
rcrb
adc
push
bound
sbb
xchg
push
aad
test
shll
popa
pop
scas
mov
loop
enter
and
xchg
mov
sub
jae
repz
rorb
jecxz
test
lea
addr16
jle
or
out
fsub
sub
cwtl
mov
jnp
sbb
xor
mov
insl
add
sub
aam
cmp
movsb
inc
sub
loopne,pt
mov
xchg
nop
sbbb
add
dec
dec
mov
leave
dec
or
inc
lahf
pop
aaa
sbbl
nop
and
pushf
sarl
mov
out
shl
xor
push
mov
or
sub
int
sbb
cmpsl
sarb
ret
mov
inc
jl
pop
in
adc
xor
xchg
movsl
mov
sub
push
repnz
je
cltd
test
inc
or
pop
mov
push
hlt
out
lret
aas
mov
add
paddd
cld
add
xchg
push
pop
pop
out
inc
aad
push
data16
fistpl
mov
lret
addr16
aas
push
sbb
mov
cmp
cmp
push
jno
nop
add
pop
aas
stos
mov
jmp
or
mov
icebp
rolb
adc
out
pop
arpl
mov
mov
mov
shrl
dec
xchg
adc
in
pop
dec
mov
mov
pusha
pop
in
es
push
mov
lahf
mov
ss
fwait
imulb
std
inc
aad
imul
push
inc
push
cmpb
sbb
outsl
mov
aas
clc
and
fwait
aam
data16
loopne
scas
xchg
movsl
ja
aas
jne
sub
xchg
xor
fists
test
loopne
je
das
outsl
pushf
cltd
lods
sarb
cmp
jnp
fcompl
inc
clc
nop
push
fistl
insl
jp
stos
icebp
mov
cltd
movl
movsb
jg
test
arpl
cltd
hlt
and
mov
movsb
push
repz
shr
pop
mov
xlat
jns
repnz
xor
adc
data16
std
sub
xor
int3
sub
jge
icebp
rorl
cwtl
jne
dec
push
push
jo
cmp
test
std
push
xchg
insl
sbb
fdivp
lahf
xchg
xor
xchg
push
jecxz
add
mov
fbld
mov
into
sub
xchg
lcall
test
mov
scas
cmp
mov
push
inc
mov
enter
push
add
pop
jns
or
or
scas
cli
into
shrl
imul
cs
fisttpl
cmp
filds
movsl
mov
mov
or
sahf
inc
loopne
or
adc
mov
sbb
pop
fwait
mov
jae
insb
int3
push
mov
sti
dec
fcmovu
jg
jnp
subw
sub
repz
test
jne
cmp
push
hlt
sarb
jo
xchg
add
push
sahf
fstl
pop
push
loop
jle
pop
dec
mov
push
and
fsubrp
outsb
xor
or
jmp
push
sbb
cmp
push
lret
cld
push
fnstsw
jecxz
stos
orb
or
mov
cli
repz
call
and
inc
cld
decl
push
pop
mov
aad
cmpsl
inc
aad
ficomps
dec
scas
sub
ds
in
sbb
mov
or
fstps
in
lret
out
lahf
clc
out
neg
mov
and
icebp
dec
sub
pop
push
cmp
lea
xor
pop
mul
ja
orl
mov
aam
add
mov
xor
orb
hlt
dec
xorl
aaa
mov
ss
sbb
sub
movhps
out
adc
mov
mov
jns
push
push
xor
loope
mov
mov
dec
fstpt
jns
adc
push
mov
dec
scas
push
movsl
adc
test
in
and
in
xchg
mov
or
out
sbb
mov
ja
xor
jnp
aaa
popa
push
sahf
push
fs
andb
jae
stc
push
lahf
lods
cmc
popf
add
pop
sbb
arpl
hlt
loopne
inc
test
adc
pop
aas
inc
test
arpl
pop
popa
cli
lods
fstpt
mov
stos
rcr
xchg
lahf
fldlg2
dec
xor
hlt
out
adc
xor
jae
out
mov
enter
push
insl
sub
fstps
incl
movsb
push
mov
les
test
push
popa
repnz
cmp
pop
orl
stos
cmc
popa
inc
and
int3
flds
test
int
push
imul
loopne
loopne
mov
clc
xchg
in
iret
stc
dec
cltd
push
into
cmpl
mov
pop
mov
xor
mov
mov
leave
mov
js
mov
es
sbb
or
lcall
pop
fcomps
pop
out
sub
push
and
aam
mov
add
ss
add
jg
adc
leave
rep
sar
out
inc
test
rol
and
adc
cmpsb
mov
add
adc
jno
mov
outsl
mov
mov
mov
test
adc
jmp
mov
stos
faddl
pusha
mov
into
xchg
push
imul
pop
sub
and
jo
rcll
ret
lahf
adc
lods
mov
scas
popf
shl
jmp
xchg
xchg
or
dec
movsb
cmp
cmc
cmp
adc
leave
jp
push
mov
push
out
js
add
mov
push
pop
std
inc
pusha
mov
sub
int
or
out
jbe
push
inc
xor
mov
dec
daa
sbb
dec
dec
fistpl
int
jp
fstps
fnstsw
xchg
mov
lret
add
std
testb
push
movsb
loopne
pushf
sub
jl
data16
aaa
data16
push
xor
aaa
add
shll
sub
jl
loopne
lods
test
stc
int
dec
addr16
and
push
ss
movsl
push
mov
int3
xor
sbb
jle
cmp
sbb
inc
fimuls
in
mov
and
xchg
inc
insb
stos
rorb
lock
lret
fwait
xorl
jae
dec
cmpsb
shrl
push
inc
jne
jns
les
faddl
pop
push
popf
sub
cs
in
iret
mov
jp
add
cmp
inc
arpl
mov
insb
cld
cmp
aam
pop
repz
test
push
pop
hlt
gs
xor
mov
sti
jb
out
inc
push
jnp
nop
loopne
rcr
mov
fcmovne
jecxz
rcll
adc
add
int
mov
fwait
jecxz
mov
pop
push
sub
jmp
insb
cwtl
xchg
and
xchg
aam
lcall
jno
jge
dec
stos
cltd
adc
icebp
popf
mov
insb
das
ja
adcb
js
inc
pusha
mov
jg
in
ja
dec
pusha
xchg
leave
dec
scas
add
mov
cwtl
clc
roll
inc
xorl
cli
push
orb
ror
and
pop
push
incb
clc
fists
movsl
cmpsb
or
dec
shrb
jp
dec
mov
push
mov
pop
rcrb
aam
or
mov
push
idivb
mov
jmp
adc
dec
lahf
lret
pop
leave
adc
or
ja
dec
mov
inc
jg
mov
push
shll
jno
xchg
and
push
xor
dec
cmc
js
jno
inc
ret
dec
loopne
iret
cltd
mov
jl
mov
aaa
and
xchg
inc
pop
fadds
push
xchg
mov
pop
cmp
pop
pop
inc
idiv
es
inc
push
and
cwtl
jmp
mov
jecxz
dec
push
in
hlt
movb
xor
mov
add
jmp
add
testl
xor
addr16
testl
sahf
aad
adc
test
sahf
pop
mov
mov
dec
pop
jo
out
dec
push
push
repz
sar
enter
insl
int3
int
fimull
imul
xorb
push
dec
je
cwtl
or
fbld
or
cmpsl
mov
cli
mov
bnd
jl
adcl
xor
mov
inc
repz
add
push
adc
popa
push
cmp
xor
aas
pusha
flds
lret
ja
ja
in
and
xchg
mov
inc
and
sbb
mov
mov
inc
or
pusha
test
mov
test
iret
add
fstps
and
into
popa
das
mov
fprem1
test
dec
iret
jmp
xor
dec
and
int3
jo
xchg
pop
cli
int
and
rcrl
fwait
jbe
pop
out
out
lock
pop
lret
in
mov
mov
sbb
adc
and
fistps
push
adc
mov
pop
stos
mov
stos
ljmp
xchg
or
jp
addb
fiadds
sub
fwait
pop
jmp
mov
ljmp
dec
push
jmp
rcl
outsb
push
inc
push
out
insl
test
ds
into
xor
hlt
mov
inc
mov
pop
jb
xchg
lock
push
jo
inc
imul
unpckhps
cmp
pop
repnz
mov
je
push
push
xchg
inc
loopne
cmp
into
aaa
repnz
jl
push
mov
cmp
adc
sbb
sbb
popa
xchg
div
pop
mov
dec
pop
mov
pop
and
hlt
inc
pop
sub
mov
inc
jo
fldl
das
mov
xor
loopne
mov
ja
loopne
inc
mov
xor
pop
shll
arpl
loope
xor
pop
cwtl
jmp
pop
scas
add
cmp
push
std
lock
cmp
je
mov
ficoms
sbb
push
push
jl
je
dec
mov
cld
rcl
mov
mov
bound
rcll
pop
sub
xor
dec
dec
mov
or
aam
jnp
call
fwait
insb
enter
mov
js
jns
jge
jb
and
cmp
dec
cs
sbb
shl
mov
cmp
or
add
daa
add
mov
test
je
sbb
lds
movsb
lods
andl
xor
fs
mov
test
jmp
add
ficoms
jbe
and
repnz
xchg
push
sub
shlb
iret
jo
jmp
pop
fsubr
dec
fwait
lret
les
call
ja
adc
std
pop
sahf
dec
and
iret
scas
pop
decl
stos
sbb
addr16
pop
adc
in
pop
ja
in
lods
insl
and
cltd
sahf
mov
jg
data16
adc
mov
aaa
idivb
insb
pop
stos
pusha
mov
lea
lcall
mov
lret
inc
inc
frstor
fwait
push
out
loope
mov
rorl
xchg
movsl
sbb
or
jmp
mov
jmp
in
or
rclb
mov
imul
fadds
subl
roll
dec
jp
mov
into
dec
orb
sets
cld
mov
lea
adc
xor
fcomip
pop
lods
jns
jae
push
and
cs
fists
or
inc
inc
sub
ja
cmc
inc
pop
in
jmp
nop
pop
into
sub
clc
daa
int3
mov
imul
outsl
mov
dec
jp
nop
cld
mov
js
jg
adc
jae
sbb
xor
test
rcl
in
sbb
out
pop
insl
push
mov
or
push
add
mov
xchg
jle
loopne
inc
cltd
lods
dec
or
nop
stos
ljmp
dec
adc
in
roll
js
jno
movsl
fsub
pop
mov
xlat
push
cmp
xor
or
mov
push
pop
icebp
lcall
xchg
xchg
push
ljmp
and
adc
push
mov
and
push
sbb
test
sahf
xchg
and
mov
into
dec
mov
aaa
icebp
or
cmp
sbb
pop
ficoml
jecxz
mov
mov
dec
or
dec
xlat
fs
std
rorb
aaa
push
mov
scas
jecxz
jbe
pop
sbb
nop
pop
ret
jg
popf
icebp
push
jb
sbb
scas
test
mov
imul
pop
jno
sbb
pushf
sub
lcall
sbb
push
rol
sahf
inc
pop
xlat
jnp
xor
es
mov
cmpsb
and
xor
addr16
scas
and
push
xor
cs
sub
push
sub
repz
inc
fdiv
inc
jbe
aas
mov
jl
xchg
jl
mov
pusha
xchg
aam
test
aaa
outsb
fcmove
in
mov
leave
xorps
movl
push
andl
cwtl
addb
jmp
test
sub
sarb
inc
inc
dec
pop
jecxz
adcb
pushf
stos
loop
xor
jbe
repnz
xchg
cmp
pinsrw
shl
xchg
add
sbb
nop
cld
mov
icebp
mov
push
push
lahf
inc
cmp
mov
push
push
dec
icebp
push
mov
jbe
push
lds
sbb
xor
mov
inc
cmc
ljmp
cmpsb
mov
sbb
mov
cld
jae
sub
jge
es
mov
push
sub
adc
cmpsl
xchg
repz
cmp
add
fwait
sub
xchg
mov
cld
aad
mov
pop
shll
je
cmp
roll
in
das
lret
jb
fcom
mov
js
filds
mov
xchg
mov
repnz
xor
inc
cvtps2pd
jp
pushf
lods
inc
fdivrs
fcomps
fcmovbe
push
dec
mov
int3
sti
xor
fdiv
bound
xchg
movsb
jne
pop
pop
into
ret
push
inc
lods
fidivl
idivl
insl
push
divl
cwtl
push
adc
or
cwtl
mov
dec
mov
inc
xor
adc
and
js
dec
cmp
xor
add
jmp
icebp
fisubrs
adc
push
mov
std
pop
imulb
and
mov
orl
push
cmpsl
push
fldenv
xor
jae
cld
xchg
sub
rorl
sbb
xor
pop
int
and
push
test
and
out
mov
les
inc
xor
test
pop
sub
andl
push
push
sub
cmp
mov
cmpsl
add
cmp
mov
cmpsb
jl
hlt
shlb
and
loop
sbb
aam
push
push
jp
xor
aam
ffreep
xchg
mov
enter
sbb
dec
ljmp
fidivrl
fwait
shl
ja
push
inc
push
inc
xchg
cli
mov
in
shr
or
stc
addr16
or
inc
sub
push
jmp
cmp
pop
aas
fdivrl
pop
pop
into
cmc
lea
mov
add
sbb
jno,pt
lret
rclb
call
loopne
and
pop
sbb
xor
xor
mov
out
add
sub
lods
shlb
inc
popa
cmp
sub
out
jno
or
iret
inc
in
sbb
addr16
repnz
sub
fstps
movsl
mov
orb
bound
or
aad
mov
arpl
xchg
jb
add
call
inc
mov
js
ss
jp
xor
loopne
mov
mov
clc
fidivrl
fildll
and
inc
inc
add
cmp
fsts
call
mov
adc
mov
mov
fcmovb
fiaddl
or
or
cmpsb
mov
shlb
pop
inc
sbb
imul
ret
lds
inc
xchg
pop
rorl
js
mov
fwait
negl
call
mov
in
aas
popf
inc
std
sub
xor
push
callw
cmp
scas
jg
add
adc
mov
nop
jbe
mov
sub
cmpsl
xor
mov
and
andl
adc
stc
nop
shll
repnz
push
rclb
dec
mov
mov
in
ds
sub
jl
inc
lahf
sbb
push
scas
outsl
jg
clc
in
loop
cs
repz
out
leave
inc
loopne
push
add
insb
fsubrs
fisttpl
cmp
lods
inc
sbb
outsl
cwtl
fidivs
push
jge
adc
xchg
xor
pop
out
jg
inc
jl
sub
pop
xchg
xor
idiv
push
xchg
push
jecxz
out
ret
pop
movsl
jnp
cmp
jmp
test
xor
stos
les
cmpsb
sbb
das
push
ss
add
push
and
rcrl
stos
call
dec
mov
or
lea
mov
into
add
aad
test
call
add
push
pop
int
mov
jmp
or
xor
imul
mov
jge
jae
cli
mov
fs
and
cmp
sbb
movsb
push
xchg
lahf
aas
ss
popa
mov
addb
mov
mov
jg
ds
dec
ljmp
icebp
mov
frstor
cmp
add
sbb
int
pop
adc
jo
mov
mov
pop
into
mov
cmp
ret
ja
cmp
out
nop
mov
mov
xor
out
cltd
clc
stos
adcb
mov
fildll
dec
rorl
adc
and
add
xchg
fsubp
out
out
xor
push
xor
inc
out
push
outsb
add
cld
pushf
cmp
sub
adc
pop
xor
mov
sbb
test
jbe
inc
sbb
notb
pushf
testb
inc
popf
inc
aaa
xor
popa
xchg
roll
jecxz
divb
cmp
adc
push
je
pop
imul
loope
das
lods
pop
test
jecxz
xchg
nop
pusha
rcrb
mov
adc
lea
sbb
mov
pop
orb
mov
stos
pop
xlat
outsl
jno
cmp
adc
je
xchg
dec
dec
push
iret
jecxz
int3
xor
xor
and
icebp
subb
adc
xchg
pop
xchg
enter
arpl
das
out
dec
push
in
jg
inc
iret
mov
in
push
fcoml
xchg
xor
cld
and
mov
dec
and
push
mov
jle
mov
sbb
faddl
add
repnz
testb
sbb
jg
loop
int
or
test
fucom
idivb
out
nop
sti
mov
adc
push
lds
xor
add
fimuls
xchg
jae
jbe
adc
jb
imul
in
and
adc
stos
jbe
dec
rorb
mov
hlt
fs
mov
push
xchg
out
sub
sbb
popf
jp
dec
add
inc
cmp
leave
aam
mov
incb
mov
xchg
cmp
sbb
push
sub
das
ret
notl
fcmovnu
addr16
and
fdivrs
ret
mov
mov
aad
xor
inc
call
cli
push
test
hlt
test
cli
jns
sbb
iret
mov
rcrl
xor
mov
call
and
sub
push
or
cs
fdiv
lret
jmp
jecxz
dec
cmc
in
push
je
addb
leave
comiss
jg
or
pop
or
push
iret
fadd
outsl
mov
cmp
in
inc
in
pop
inc
push
adc
test
inc
in
ss
mov
hlt
sub
idivb
inc
fsts
and
adc
xchg
cmp
sbb
xchg
mov
jge
das
pop
in
popa
lret
mov
mov
cltd
das
addr16
inc
sbb
lods
dec
pop
insb
aam
mov
mov
int3
cmpsl
cmpsl
jnp
lea
pop
mov
push
ss
cmc
sub
dec
sbb
aaa
adcb
out
mov
scas
pop
pop
fxch
sbb
adc
xchg
stos
sub
jmp
cmp
jo
ret
dec
jne
sbb
or
stos
xchg
push
mov
je
mov
or
and
or
sarb
jmp
or
inc
push
sbb
cs
fnstenv
cmp
les
cmp
mov
popa
and
jecxz
gs
shrl
bound
jb
add
shl
outsl
scas
fnsave
leave
mov
jl
jno
and
pop
ja
add
lea
stc
dec
jmp
or
or
mov
push
add
pop
jb
fadd
fimuls
fadds
rorb
or
pop
cmp
divb
insb
pusha
mov
sbb
lods
mov
test
sbb
xchg
or
into
jmp
mov
mov
push
fdivrp
xchg
js
loop
cli
in
push
mov
xchg
push
fisubrl
pushf
and
mov
inc
dec
xor
popa
mov
popf
dec
pushl
shll
lods
std
out
mov
jo
test
mov
repz
and
aad
out
push
scas
sbb
mov
repz
push
mov
inc
add
dec
mov
stos
clc
jb
nop
inc
mov
sbb
or
xor
push
hlt
lock
shrl
sbb
push
inc
cmp
adc
or
movl
sub
or
pop
idivl
movsl
daa
fdivp
lea
inc
fiaddl
decl
pop
movsl
gs
dec
jns
popf
push
insb
lahf
rol
fldt
mov
fimuls
lds
movsb
gs
mov
data16
cmp
jns
cmc
xchg
lcall
mov
cmp
xor
jg
enter
cwtl
xor
into
xchg
mov
xor
fs
dec
mov
and
add
stos
or
daa
repz
subl
mov
test
or
lea
xchg
cmp
sbb
in
in
stos
cmc
adc
aas
fldt
imul
into
rcrl
adc
mov
xor
push
xorl
test
jg
fiaddl
mov
je
test
push
clc
in
out
aaa
mov
outsl
insb
fisubs
sbb
push
cmp
fcomip
or
mov
jnp
xchg
popa
sbb
pushf
dec
mov
jb
jg
fwait
mov
scas
sbb
mov
aaa
into
pop
popf
loopne
scas
cmp
cltd
pop
or
cs
outsl
ljmp
lcall
mov
lcall
adc
sbb
xor
dec
cltd
outsl
mov
sbb
hlt
sub
jbe
push
or
testb
stc
enter
test
jp
mov
xor
and
add
sub
mov
push
scas
and
adc
into
outsl
inc
jmp
clc
cwtl
jmp
test
insl
sbb
xchg
mov
xor
and
insb
mov
icebp
je
or
divb
mov
sbb
mov
call
out
adcb
lret
mov
adc
int
dec
mov
daa
inc
lock
fcompl
in
mov
and
and
jge
ja
or
push
dec
hlt
inc
jecxz
jle
and
push
or
mov
jg
out
frstor
xor
xchg
jb
mov
and
aad
test
jge
push
imull
pusha
lret
dec
mov
mov
dec
pop
push
sbb
daa
movsb
popa
inc
mov
push
mov
notl
fwait
or
cld
les
fstl
cmp
std
push
gs
in
push
sti
nop
rclb
sbb
mov
dec
push
in
dec
mov
insl
ret
cld
inc
and
stc
daa
xchg
rcr
nop
daa
cmp
xor
lods
aaa
lret
hlt
ss
xchg
inc
arpl
jge
push
adc
lcall
popf
jno
or
loope
cmovp
mov
xor
mov
cwtl
aaa
pop
test
daa
sub
and
cmc
ja
mov
mov
mov
fimull
xor
push
lods
mov
jle
push
pop
insl
mov
outsb
dec
and
push
mov
lock
jnp
sahf
imul
xor
add
outsb
xor
call
push
lret
js
sbb
and
sub
les
or
xor
shll
pop
and
jecxz
mov
lcall
enter
jno
std
out
and
ja
add
leave
into
mov
addr16
aad
push
cmp
pop
adc
pop
shl
loope
adc
shl
outsb
push
or
sbb
sbb
pop
jb
icebp
out
pusha
cmp
scas
in
popf
jnp
mov
ret
jbe
cs
jle
jmp
out
mov
pop
jl
leave
jo
mov
xor
jb
ret
dec
iret
dec
movsl
xchg
mov
sahf
in
pop
ror
cmc
sbb
cli
push
loop
mov
and
mov
in
or
sub
push
adc
dec
int
nop
leave
push
testl
in
test
push
mov
add
aaa
ret
xchg
nop
cli
inc
ret
loopne
push
xlat
je
mov
xchg
mov
ja
hlt
xor
push
dec
push
mov
lock
inc
addr16
push
push
jl
addr16
test
cltd
push
hlt
pop
adc
lock
inc
enter
jmp
test
test
fmulp
xor
call
sub
out
pop
mov
mov
popa
add
movb
mov
pop
dec
std
int3
outsb
mov
cmp
aam
pop
loope
sbb
sbb
test
add
fsubp
out
fdivrs
daa
loope
mov
mov
dec
call
add
jle
mov
xchg
popa
jnp
shrl
loope
sub
ret
fwait
mov
sti
pop
sub
jmp
mov
sahf
addl
xchg
pushf
cs
pop
add
adc
sub
je
mov
fdivp
xor
imulb
imul
add
aas
or
mov
insl
popa
test
push
push
outsb
jb
ficoms
xor
sub
inc
fdivr
jecxz
jl
mov
lods
jno
es
gs
inc
repz
mov
dec
jl
push
push
das
sub
shll
cmp
xor
and
stc
in
fisubrs
imul
in
inc
add
cmpsb
cmp
ja
xlat
movsb
xchg
stos
pushf
sub
sbbb
cmp
xor
dec
enter
mov
xchg
call
cmpsl
out
loop
ljmp
fs
or
xchg
xorb
dec
inc
fsubr
mov
pop
inc
shrl
shlb
or
jg
pusha
stos
subl
scas
pop
outsb
or
int
mov
mov
in
jg
sub
rorb
mov
orps
sbb
lret
pop
cmpb
mov
dec
cmp
cs
lahf
clc
pop
out
mov
mov
fsub
jecxz
mov
add
push
xchg
mov
jge
or
mov
pop
xor
pop
test
pop
cmpsl
push
addr16
jle
cli
fwait
xor
mov
pop
aad
movsb
in
cmc
and
fsts
sub
mov
or
jg
fisttpl
and
andb
jle
je
sbb
inc
mov
mov
dec
and
and
cs
in
std
jmp
popf
ret
and
mov
mov
dec
fwait
xor
and
fistpl
adc
out
xor
lods
in
jne
mov
sti
pop
pop
je
test
mov
push
mov
jns
scas
inc
xchg
leave
dec
popf
pop
insl
leave
pushf
vshufps
adc
push
pusha
inc
in
test
inc
inc
adc
mov
jge
inc
test
mov
mov
xor
out
and
inc
iret
push
jp
aad
adcb
test
xor
outsl
xor
xor
clc
add
cmp
inc
dec
jo
loop
or
sub
es
or
mov
sub
or
cwtl
xchg
fwait
jbe
xor
ds
call
xchg
and
fistpll
andl
repnz
push
aad
xchg
je
mov
pop
xor
xor
cmp
or
mov
outsl
add
xor
mov
pop
shrb
add
mov
popf
movsb
adc
je
filds
pop
lcall
xchg
inc
scas
sbb
or
lock
fbstp
stos
bound
cmpl
movl
jne
sbb
out
sbb
mov
cmp
mov
sti
in
pop
xor
cmp
cmc
mov
add
data16
imull
int3
cmp
ret
and
mov
fdivs
pop
jge
sti
push
icebp
ror
and
out
pop
ret
push
mov
test
add
push
les
aas
lret
cmp
push
jae
ret
cmp
inc
xor
popa
xchg
inc
push
add
sbb
mov
xchg
retw
rcrl
pop
inc
cmc
out
dec
pop
pop
sbb
int
jecxz
push
es
sbb
jmp
stos
adc
jns
scas
mov
loop
js
sbb
xor
cmc
pusha
xchg
mov
adc
mov
jge
mov
mov
stc
mov
daa
mov
test
xchg
stos
test
ret
arpl
test
mov
pop
cmp
sti
sar
lods
push
pop
das
xchg
fnsave
in
and
cmp
sbbl
dec
adc
sbb
icebp
adc
xor
xor
mov
and
mov
out
jecxz
leave
es
popa
out
divl
mov
xor
mov
movsb
setnp
adc
fwait
dec
push
enter
test
add
xchg
in
pop
clc
inc
dec
cs
imul
cwtl
inc
xor
imul
js
and
movaps
adc
cmp
pop
sti
xchg
jne
sub
lods
cmpb
xchg
test
jnp
ss
test
mov
je
mov
in
test
or
nop
fcmovnbe
shll
jbe
and
aad
jmp
cmpsb
push
rcrl
nop
jge
and
xchg
lods
sbb
push
aad
xor
jns
jmp
adc
sbb
scas
loop
fwait
inc
loope
mov
movq
loop
cmp
lcall
jl
xchg
lret
adc
adc
add
jp
ljmp
sbb
fisubs
jg
xchg
sub
mov
orl
pop
fcoms
pop
add
mov
rorb
test
leave
mov
adc
cli
negb
clc
decl
or
cwtl
mov
ds
add
jecxz
pop
jg
mov
mov
inc
or
movd
sub
data16
adc
int
out
test
das
push
add
rep
pop
out
jge
fs
dec
jge
pop
adc
mul
int3
xor
adc
aam
cs
fisubs
enter
cmc
xchg
or
scas
inc
add
out
mov
mov
mov
inc
xor
ja
gs
or
stos
mov
fptan
pop
push
js
xor
xor
push
push
sub
add
insl
xor
rcll
or
imul
aam
aas
jp
xchg
or
iret
mov
xchg
lea
lods
out
and
jns
sbbl
aaa
fildll
mov
and
outsb
cmpsb
mov
scas
repz
adc
xor
or
std
in
jg
es
sti
insl
xlat
jg
popw
xor
mov
cld
imul
push
add
hlt
xchg
das
fstpl
out
cmp
sub
sub
iret
scas
jmp
xor
push
dec
addr16
cmp
xchg
push
insl
sbb
mulb
pop
push
push
jno
popf
sbbl
jmp
pop
ret
jle
jle
rorb
shll
adc
adcl
pop
and
pop
mov
in
adc
outsb
dec
mov
and
xor
cmp
and
sub
sub
nop
jnp
sub
adc
rcrb
lds
xchg
fwait
adc
fs
mov
aas
and
sub
pop
int3
rcll
out
adc
scas
loope
xor
shr
aam
out
and
insl
sbb
ficoms
insl
pop
out
add
xchg
lock
outsb
lret
mov
adc
iret
jne
sbb
cld
mov
sahf
aam
fiaddl
xchg
shlb
mov
leave
mov
dec
loop
sub
jg
xchg
xchg
hlt
xchg
mov
mov
imul
shll
arpl
test
inc
inc
shrl
jp
out
shll
jo
aam
xchg
cwtl
mov
inc
push
mov
ja
pop
cs
adc
lds
imul
aam
roll
jb
or
cld
inc
dec
pop
mov
inc
cwtl
hlt
fcomps
add
sub
roll
pop
jg
cld
xlat
jb,pt
mov
mov
xor
xor
dec
adc
mov
into
push
jbe
xor
pop
or
xor
pop
cmp
bnd
add
pop
mov
sbb
shlb
mov
mull
out
cmc
mov
hlt
das
pavgb
xor
xor
cmpl
and
adc
cwtl
mov
in
stos
mov
mov
std
cltd
mov
repnz
adc
mov
jmp
test
fld
adc
faddl
daa
add
push
jb
xchg
std
cmp
test
push
cmp
mov
ret
in
lods
cli
test
movsb
cmp
or
sub
fstpl
lods
imul
inc
fists
std
mov
pusha
pop
add
cmpsl
and
icebp
outsb
xchg
pop
fcomps
repnz
scas
cmp
mov
mov
shrb
jmp
jp
nop
stc
mov
inc
inc
nop
cmp
dec
pop
popf
cltd
test
into
xchg
xchg
push
stos
add
hlt
inc
repz
push
mov
mov
push
nop
aas
mov
lret
jecxz
sbb
add
insb
fimuls
push
ljmp
aad
cwtl
mov
leave
or
jp
add
jge
xchg
add
or
les
test
hlt
push
xchg
into
push
push
xchg
xchg
add
xor
icebp
rcrb
ja
mov
inc
mov
sub
into
push
lret
lods
stos
lods
jno
jo
pop
sbb
cld
xor
cltd
sbb
jmp
sbb
out
push
sbb
call
xchg
inc
add
sbb
xchg
mov
lds
adc
scas
xor
or
insl
popa
icebp
in
or
arpl
jg
pcmpeqb
pop
mov
lret
cmp
aas
push
sub
xchg
fidivl
xlat
mov
cmp
xor
sti
jg
into
cmp
mov
dec
insb
loop
imull
cmp
cmp
mov
xor
mov
pop
rcll
inc
enter
out
jl
mov
sbb
mov
xor
or
pop
pmuludq
ret
je
pop
push
cmp
cmp
and
mov
mov
or
sub
add
dec
mov
push
pop
adc
inc
inc
mov
sbb
clc
std
clc
mov
cwtl
inc
xor
aam
inc
lods
inc
jae
arpl
aas
repz
cmpsl
popa
xchg
mov
cmp
push
stos
mov
addr16
popf
mov
push
cmpsb
adc
in
ja
adc
sub
iret
cmpsl
loopne
test
loop
fnstsw
add
out
loopne
push
clc
aas
aam
loope
cli
mov
out
dec
cmp
shll
sub
push
fldcw
dec
call
aam
push
and
and
in
mov
iret
pushf
es
mov
sbb
xor
jmp
lret
push
adc
xchg
sub
add
mov
insl
add
ficoml
mov
insb
arpl
pop
or
mov
pop
xchg
inc
xchg
push
das
insb
jnp
add
insl
adcb
add
pop
std
push
sbb
xchg
movb
mov
xor
xor
lods
mov
cmp
pop
enter
scas
mov
xor
insb
jge
lcall
sub
adc
movsb
roll
iret
ja
sahf
jne
cmp
add
inc
rcrl
popf
inc
movsb
inc
cmp
cmp
mov
stos
test
cs
sub
out
test
xchg
jno
xchg
in
pop
pusha
sub
adc
out
iret
push
imul
mov
iret
or
cmp
mov
push
outsb
ss
adc
outsl
mov
mov
repz
sbb
jne
test
repz
xchg
and
out
pop
andl
inc
jnp
inc
jp
sbb
mov
sub
repnz
pushf
cmp
adc
movsl
mov
and
inc
in
repz
loop
sbb
mov
ret
push
popa
lds
push
rcrb
xor
mov
xor
popf
fwait
mov
test
icebp
sbb
adcb
push
out
add
xlat
lods
cmpsb
cmp
sub
lahf
sbb
popa
sbb
mov
jecxz
add
mov
aam
mov
mov
xlat
sar
mov
mov
iret
iret
cmp
push
in
loopne
lret
push
mov
mov
cmp
test
push
stos
jmp
sub
adc
mov
fwait
cmp
cltd
or
jno
sti
mov
fadd
mov
cwtl
into
mov
adc
add
lods
dec
dec
negl
sub
pop
pop
jle
xchg
xchg
jns
xchg
mov
adc
cmp
aas
lahf
loope
ljmp
loope
mov
xchg
jbe
in
push
je
push
imul
jecxz
aam
lret
lcall
in
lock
and
in
ljmp
lods
dec
jge
xor
clc
xchg
inc
xlat
adc
arpl
pop
adc
xor
ja
xchg
cld
xor
sbb
ja
test
mov
fcomp
in
fcoml
mov
pop
lods
dec
ljmp
push
aad
cmp
adc
ret
mov
je
push
pop
out
into
add
rcrb
lret
mov
push
xchg
dec
or
xor
add
rcll
jno
les
jns
das
out
ret
and
dec
dec
fsubrl
mov
xchg
and
lret
lock
mov
mov
pop
pop
daa
mov
add
cli
lea
pop
adcl
into
outsl
inc
cmp
xchg
jb
push
xor
add
pop
xchg
fwait
aad
inc
mov
push
pushf
jg
lock
rorl
cwtl
mov
mov
fnsave
cli
icebp
jecxz
frstor
fxtract
icebp
inc
scas
mov
add
int3
jl
sbb
xchg
xor
or
push
insb
or
daa
sub
insb
cmp
sbb
pop
mov
lods
and
add
ficoms
sub
sti
std
pusha
loop
sub
rcrb
rcl
aas
cmpb
mov
lods
arpl
loope
mov
xor
xchg
outsb
in
mov
pop
jno
pop
jge
add
es
popa
or
and
sbb
mov
jae
inc
add
gs
add
add
lock
out
push
push
negl
push
fcmovnb
popa
or
inc
mov
repz
adc
xchg
and
ljmp
negb
push
je
dec
inc
xor
repnz
or
or
cs
jmp
enter
shlb
xor
out
xor
and
icebp
into
dec
push
hlt
lcall
cmp
jo
xorl
jbe
sti
mov
jge
mov
push
xor
push
scas
ror
dec
sub
add
mov
cmp
mov
mov
jbe
or
call
mov
leave
out
push
jb
pop
lcall
mov
push
sub
loop
pop
lock
lcall
dec
jnp
leave
mov
jge
lcall
popf
dec
cltd
push
mov
xchg
xor
int3
in
mov
sbb
mov
xlat
lret
xor
xchg
pop
inc
rclb
dec
outsb
sbb
ja
mov
or
notl
lss
aaa
fcmovne
int
nop
loope
iret
test
mov
dec
add
pop
and
cmc
aas
leave
sbb
sub
xchg
lahf
dec
icebp
rol
lods
cmp
xlat
loopne
and
xorl
enter
jne
xor
push
inc
insb
bound
jg
and
loope
frstor
and
adc
or
cmpl
xor
scas
cmc
popa
cmp
lret
out
adc
in
fldt
jge
cmpsl
cmp
inc
or
roll
dec
pop
jle
dec
add
jmp
xchg
test
nop
dec
pop
imul
jle
lods
mov
mov
ljmp
add
xchg
fs
jae
add
mov
fs
or
mov
lea
dec
lahf
lods
in
mov
jo
into
add
mov
aas
and
cld
cmp
subl
adc
fsts
jle
push
lret
sbb
sub
out
jae
mov
rcll
iret
syscall
ret
mulb
out
ss
mov
cmpsb
nop
cwtl
mov
lds
movsb
push
xor
mov
push
sbb
add
xchg
mov
mov
push
jae
jae
cld
xlat
mov
into
mov
cmp
jo
jnp
sub
xor
dec
mov
fwait
and
cmp
pusha
idivb
cld
imul
mov
mov
xchg
push
out
mov
xor
imul
sar
and
insb
ja
fdivrp
mov
in
mov
mov
test
push
pop
lock
lods
push
add
mov
dec
jo
fistpll
sub
movsb
or
push
cmp
cli
addr16
xchg
and
dec
pop
cmpsl
pusha
xor
out
lods
mov
ret
mov
dec
jp
fsqrt
mov
jle
leave
adc
jecxz
dec
call
das
pop
push
not
mov
mov
out
mov
mov
jae
mov
sbb
loope
and
add
dec
push
jo
sbb
jecxz
test
test
call
cmc
cwtl
lods
lret
stos
int3
jb
fistpll
and
pop
pop
sbb
movsl
ja
push
sbb
cmp
push
add
cmp
fidivs
lds
push
insb
imul
add
mov
mov
lds
stos
adc
mov
ljmp
fdivs
xchg
outsb
aam
mov
test
bnd
mov
sbb
pop
ds
and
xchg
ret
add
xchg
xor
cmp
hlt
inc
xor
in
adc
or
inc
push
push
ljmp
arpl
lret
lods
stc
jne
dec
push
mov
inc
add
push
enter
push
cmpsl
cmpsb
inc
sub
fimull
mov
dec
nop
pushf
subb
cmpb
mov
mov
daa
mov
sub
or
add
into
adc
mov
jmp
test
aad
xchg
dec
cmp
push
mov
xchg
xchg
mov
repnz
mov
cli
pop
movsb
shll
sub
mov
or
aaa
jo
inc
sub
sub
sti
inc
test
mov
pop
mov
add
mov
dec
repz
mov
and
fs
bound
inc
jge
xchg
push
xchg
mov
ljmp
xchg
cmp
xor
scas
adc
aaa
imul
xchg
adc
rol
popf
dec
out
push
in
cmc
jae
repnz
lea
jne
sub
push
insb
and
insl
jg
jb
inc
dec
xchg
stc
scas
lds
fneni(8087
dec
mov
andl
enter
adc
or
rcll
push
les
push
cmp
mov
sub
push
jns
adc
popa
mov
mov
std
dec
out
ja
inc
in
dec
scas
adc
dec
mov
adc
sarl
or
inc
add
std
popa
addr16
cmp
adc
adc
push
cmpl
fsubr
cmp
mov
adc
pushf
add
roll
jg
loopne
cmc
mov
les
cmp
and
add
jge
aaa
push
pusha
lea
lret
mov
mov
divb
ljmp
adc
test
add
daa
push
mov
divps
imul
dec
jno
cli
adc
mov
repz
or
and
pop
cmpsb
cmp
xchg
lret
sbb
cmp
pop
in
and
push
mov
icebp
xchg
xchg
mov
adc
dec
lret
dec
push
sub
addl
add
add
xor
sbb
sahf
leave
mov
adc
cs
inc
inc
shlb
stc
mov
sub
xchg
sub
cld
jno
adc
insl
inc
jb
and
popa
lods
fisubrl
jo
sahf
aas
in
imul
sub
dec
sbb
cmp
sub
sub
cmp
sbb
arpl
insl
ror
sub
jge
jae
jle
pop
les
pop
xchg
mov
mov
add
or
xlat
cmp
sbbb
test
and
mov
shlb
push
mov
mov
std
sub
jno
push
test
repz
mov
cmp
repnz
mov
sub
out
enter
xchg
cwtl
xchg
aas
insl
std
add
xor
stc
add
jns
pop
std
adc
jle
popf
repz
mov
cs
dec
aaa
cmp
mov
lret
bound
pop
icebp
addr16
ret
stos
addr16
call
test
cs
mov
push
gs
lret
and
lahf
sarb
and
cmp
addl
jns
test
sbb
out
insl
shl
jge
test
imull
daa
jo
mov
jl
shlb
adc
fld
xchg
pop
jg
fstpt
mov
rcll
xor
jae
dec
cs
pushf
lahf
out
jmp
xchg
xchg
jge
ficompl
loopne
sbb
push
add
fistpl
jo
and
push
or
adc
rorb
xor
mov
pop
jmp
shrb
es
xor
push
popa
daa
test
adc
adc
lods
inc
jb
dec
pop
sbb
mov
mull
jle
in
and
ljmp
movsl
push
add
enter
test
push
in
fdivs
es
aas
into
jg
mov
mov
cmp
fldl
sti
jge
jns
and
pop
mov
xchg
jb
es
adc
xchg
and
push
sahf
lock
aas
add
xor
mov
xchg
imul
dec
imul
std
insb
pop
pop
pop
inc
mov
addr16
sahf
mov
out
in
add
jle
lcall
lock
jbe
or
push
aad
bnd
rol
inc
dec
je
mov
outsl
scas
test
mov
mov
push
and
add
data16
loope
pop
leave
test
in
inc
iret
fwait
pop
cmpsb
roll
fisubs
test
jmp
inc
daa
popa
cmp
sbb
dec
xchg
or
addr16
or
test
pop
aam
lock
xor
push
mov
push
fsubrl
mov
into
js
sbb
ss
loop
mov
sbb
or
jo
leave
data16
mov
cltd
outsb
mov
jmp
lock
cmp
pop
aad
lds
lret
and
pop
cmpsb
xchg
ret
cmp
rol
push
sbb
stc
fs
fwait
xchg
mov
int3
adc
adc
dec
push
mov
and
in
fwait
loopne
dec
scas
dec
sub
outsb
jp
jl
popa
outsb
pop
dec
stc
push
inc
pop
jbe
repz
mov
out
push
pop
lock
dec
ret
xchg
adc
ds
inc
in
lods
or
orb
daa
gs
loop
sbb
sbb
dec
pop
scas
mov
and
aad
ljmp
rcrl
mov
ret
hlt
sbb
sub
cmp
add
mov
sub
cld
sub
inc
and
notl
cwtl
arpl
dec
xchg
dec
add
loop
jl
daa
cs
sbb
inc
addr16
and
mov
sub
xor
xor
imul
jb
mov
jbe
xor
pop
and
mov
sbb
fiaddl
ljmp
or
test
push
dec
cmpsl
adc
sbb
lahf
mov
mov
sbb
dec
lods
cltd
mov
sub
leave
fdivr
jge
neg
je
and
test
jns
dec
or
jp
jecxz
sti
mov
jnp
cmp
fisttpl
ficoml
mov
daa
pop
mov
xchg
jecxz
insl
mov
xchg
xchg
jo
icebp
cmpsb
pop
jmp
dec
divb
fldcw
mov
scas
sub
pop
jbe
sbb
enter
xchg
enter
fdivs
lret
enter
sbb
lds
mov
inc
and
and
out
inc
push
mov
jns
fcomps
cld
test
mov
popf
aam
sbb
pop
push
adc
cwtl
push
cwtl
cmp
pop
mov
popf
rcrb
iret
mov
or
mov
push
testb
sub
or
add
mov
sub
movsb
lods
xor
lret
xchg
mov
or
iret
fsub
xchg
jmp
add
test
mov
and
inc
sub
mov
cmp
push
push
test
jbe
push
sub
inc
jp
dec
popa
aam
xchg
pop
lret
insl
mov
ds
in
pusha
ds
ja
cmpsl
aaa
test
push
mov
cmp
fs
bound
cmp
ja
cmc
mov
mov
jne
pop
fwait
outsb
mov
sarb
dec
andl
xor
repnz
sbb
std
movsb
ret
jo
xor
xchg
sbb
xor
mov
jge
addr16
or
push
cmp
fistpl
int
mov
fcoml
sbb
xor
pop
loope
test
inc
push
adc
xchg
cmp
pop
sahf
div
add
loope
pop
aas
pop
mov
sbb
stos
aad
js
mov
mov
sub
iret
jl
dec
stc
sub
jo
insb
xlat
loop
jnp
push
icebp
sbb
inc
dec
mov
mov
in
rcll
or
sbb
test
ds
and
sub
stos
jnp
jmp
mov
test
lods
push
mov
or
call
cmp
imul
sub
xor
in
add
xchg
rcr
pop
repz
subl
mov
imul
xchg
fwait
rolb
or
cmpsb
call
insl
js
aaa
insb
in
je
cli
je
xchg
jmp
add
lret
shl
xchg
sbb
gs
call
jg
fdivrs
cltd
add
mov
mov
dec
fdivr
mov
inc
out
adc
sti
push
das
push
ja
inc
arpl
arpl
aad
mov
inc
out
pop
cmp
cmc
test
test
xor
int
movsb
out
dec
gs
cmpsb
ljmp
mov
dec
xchg
inc
insb
sti
sbb
jle
shlb
loope
loopne
or
inc
push
xor
mov
test
inc
cs
mov
stc
xor
xchg
call
inc
das
push
loopne
mov
xchg
enter
and
lret
inc
add
jecxz
or
stc
bound
xor
and
scas
sub
stos
cs
inc
pop
stos
clc
dec
in
int
sarb
hlt
stos
sbb
xor
inc
push
ret
xchg
adc
jle
rcrb
pushf
ds
mov
mov
mov
lock
cli
insb
push
push
push
ss
pop
icebp
mov
mov
int
push
ja
mov
rcll
mov
and
stos
mov
push
or
add
jb
jle
cld
call
mov
cmp
adc
lret
inc
aaa
mov
mov
mov
loop
shl
aaa
fdivs
gs
insl
aaa
mov
cmp
dec
and
xor
ja
sti
inc
mov
dec
cmp
arpl
jmp
jo
pop
sti
sti
cltd
dec
xchg
out
lods
leave
xor
or
cmc
inc
sti
call
sub
push
and
add
out
push
jne
adc
fcomi
std
imul
mov
loop
mov
dec
sub
loop
cmc
dec
sti
outsl
cmp
and
insb
iret
fdivrl
cmp
adc
aaa
sub
shlb
out
cld
mov
cli
pop
addl
scas
xor
daa
push
fadds
fs
push
pop
popa
jae
and
pushf
das
aad
fadd
icebp
and
fmuls
sub
inc
cmpsl
pop
test
and
mov
repnz
mov
andb
xchg
lea
popa
je
adc
cmp
outsb
jmp
jnp
rol
aaa
mov
jno
out
mov
test
push
pushl
pop
mov
js
sbb
cmp
rcrl
lahf
jnp
insl
aam
dec
fistl
jmp
cltd
mov
insl
popa
adc
ret
mov
lods
ljmp
fisubrl
lock
aam
pop
ja
or
xchg
push
test
fistps
and
push
xchg
jp
lret
pop
cmp
cmpsb
adc
aam
xor
loop
dec
pop
les
pop
gs
mov
cld
sub
add
imul
or
in
mov
das
add
push
push
dec
mov
mov
jl
sbb
adc
jno
hlt
and
mov
push
and
dec
push
popf
or
add
xor
or
idivb
jl
xor
jle
in
dec
or
subb
sub
std
inc
out
out
xchg
mov
dec
insl
movsl
push
inc
cwtl
stos
pop
mov
pop
adc
popa
into
mov
jl
mov
jbe
push
mov
scas
ljmp
mov
movd
mov
rcr
andl
sbb
repnz
adc
push
sbb
not
jmp
cmp
movsb
mov
pmullw
mov
cmpsl
mov
dec
mov
shlb
aas
aam
push
pop
push
mov
jo
sub
inc
and
cs
and
sub
dec
icebp
mov
call
cmp
cli
test
xor
lret
lds
or
pop
sub
in
je
cmp
scas
or
lret
lock
jns
push
clc
aas
sbb
jbe
or
jno
pop
cmp
and
pop
jo
jg
push
and
ret
or
int
sahf
adc
inc
or
xchg
aam
loop
pop
xor
leave
test
shlb
pop
fidivs
shlb
adc
dec
mov
jle
jmp
mov
andl
pop
push
push
cmpsb
lds
cltd
pavgb
adc
jns
arpl
xor
push
and
imul
jo
jmp
dec
maxps
mov
cmp
rclw
ficoms
jae
popa
mov
insb
lretw
add
loopne
lcall
mov
dec
cmp
dec
jmp
rclb
push
inc
cmpl
stos
adc
ret
pop
push
or
cwtl
cmp
lock
add
xchg
mov
jecxz
addr16
das
xor
test
and
ret
loope
inc
rsm
cli
mov
lock
mov
nop
fisubs
imul
in
iret
jo
cmp
pop
es
and
daa
push
jbe
mov
jmp
mov
mov
xor
push
jge
adc
xor
lods
pop
and
scas
cltd
das
push
inc
jp
add
flds
fsts
push
dec
adc
icebp
mov
faddl
push
mov
mov
rcl
adc
pop
fcomps
jp
cld
cmp
out
push
outsb
movsl
lods
insb
loopne
push
fdivl
jae
sbb
pop
ljmp
fsts
cltd
xchg
stos
and
pop
inc
pop
mov
lds
cmpb
adc
cmpsl
cmp
cmc
sbb
xchg
mov
or
jg
sub
dec
xchg
cmc
loope
call
xchg
shll
fwait
test
fst
or
inc
loope
dec
push
insl
cmp
mov
lea
and
or
cmpsl
imull
pop
cmp
lret
cld
pop
enter
jo
rol
xchg
xor
pushf
mov
xlat
js
pop
push
push
scas
mov
pop
sub
xlat
sub
lods
cmp
pop
sbb
test
pop
mov
or
mov
jbe
jg
and
pop
pop
and
pushf
lods
adc
rcrl
movsl
dec
adc
xor
cmp
push
stos
cli
inc
inc
mov
jg
loope
ss
cld
bnd
mov
xchg
push
jecxz
addb
hlt
inc
cli
or
pop
push
cli
cmp
movsb
or
mov
iret
inc
adc
mov
xchg
push
sbb
mov
shlb
scas
addb
push
xchg
xorl
inc
in
jg
loopne
ret
sbb
fidivrs
pop
mov
rorb
fstp
or
pop
daa
out
sub
sub
dec
loop
in
or
stc
ret
in
mov
xchg
test
jmp
int
ja
in
mov
fsubl
dec
mov
or
jge
outsb
or
inc
cwtl
mov
cmpsb
sbb
sti
push
sbb
xchg
cmp
add
xchg
or
sub
testl
ja
xor
ja
dec
pushf
push
and
out
push
push
test
mov
sbb
jo
into
cli
aaa
in
repz
inc
sub
xor
cli
dec
cmp
fwait
dec
testb
mov
xor
pop
mov
mov
cmp
ljmp
xchg
daa
aaa
lahf
dec
push
add
pop
movl
sbb
jmp
fdivrs
cltd
push
outsl
jnp
mov
aas
sbb
pop
lds
inc
popa
jo
sub
inc
xchg
dec
xor
out
call
bound
jbe
or
add
dec
loope
ret
and
add
pop
adc
adc
pop
pop
pop
add
cli
sbb
pushf
jne
mov
inc
mov
icebp
ret
adc
mov
mov
out
pop
xlat
aad
nop
adc
scas
ja
add
pop
xlat
push
iret
xor
cli
add
cmp
mov
aad
stos
es
dec
dec
movsl
sbb
jmp
cmp
cmp
xchg
inc
andb
les
jecxz
pop
inc
lods
aas
xchg
lock
mov
pop
push
out
loopne
hlt
aad
mov
xor
push
in
sbb
popa
jae
mov
sbb
jecxz
lds
mull
pop
fwait
sbb
movsb
fs
popa
push
stc
mov
ret
mov
mov
cmp
inc
pop
aam
rcrb
addb
lds
and
adc
lret
bound
inc
pandn
adc
jo
and
push
testl
sti
jbe
and
pop
orb
jbe
loop
pusha
add
cmpsl
inc
pop
pop
push
jmp
jmp
lods
sub
cmp
add
or
add
cmp
daa
sub
pop
cmp
mov
xor
cmp
dec
xor
push
hlt
jns
sti
pop
pop
imul
fcmovbe
into
mov
mov
dec
cmp
out
mov
cmp
shrb
dec
out
pop
xchg
std
lock
ss
mov
pop
mov
in
mov
in
or
arpl
aas
mov
clc
lret
xchg
push
cmp
insb
and
aas
mov
jp
aad
mov
or
adc
xchg
jno
push
mov
nop
aaa
cwtl
lods
or
stos
int3
push
in
aad
adc
cltd
xchg
jecxz
dec
enter
jnp
mov
cmp
mov
inc
xor
int3
mov
adc
ss
cmp
addr16
sbb
cmp
mov
imul
jp
jns
iret
cmc
stos
jp
mov
lret
bound
ja
push
int3
pusha
jnp
or
inc
sbb
aad
inc
js
das
call
mov
fnstcw
inc
push
adc
enter
sbb
push
xchg
push
inc
dec
mov
adc
repz
aam
jb
mov
pop
std
push
mov
adc
mov
test
jb
cs
iret
cmp
mov
mov
push
je
mov
movsl
cs
sub
in
sub
jnp
xor
sub
sub
or
xchg
sub
fldcw
xchg
scas
mov
sbb
sbb
push
xlat
out
clc
into
push
stos
mov
jg
pop
dec
mov
cmp
or
xchg
xor
cmp
in
and
mov
das
inc
test
add
sub
jge
push
sarl
sbb
pop
mov
loope
stc
jo
rcr
in
push
push
enter
hlt
xor
movsb
sbb
ja
sbb
test
pop
daa
fwait
or
xor
mov
scas
push
insl
sbb
xor
mov
nop
dec
push
out
test
or
aaa
xchg
sbb
cmp
aam
les
out
shr
xchg
inc
adc
mov
aas
cltd
inc
loope
mov
je
mov
inc
adc
or
sub
push
insb
push
push
mov
mov
sti
mov
call
ret
mov
push
dec
inc
mov
jo
movsl
movsb
aas
es
jge
adc
inc
dec
jp
mov
movsb
popf
fwait
and
imul
das
cwtl
addl
cmpsl
xchg
out
add
lret
push
sub
stos
cld
in
jl
sub
pop
es
xchg
ret
push
dec
mov
push
xchg
pop
mov
mov
dec
sahf
jp
jb
psrld
lret
mov
or
jbe
in
mov
xor
sub
xchg
cwtl
lea
out
push
test
push
mov
mov
jo
jmp
pop
lods
leave
leave
xor
push
cmpsb
js
js
xchg
pop
ja
cld
mov
scas
push
sbb
push
push
enter
fildll
push
xchg
mov
adc
lods
dec
jno
push
rorl
sub
and
or
jae
sbb
cli
xchg
decb
mov
fadd
repz
push
mov
ljmp
mov
xchg
mov
sti
mov
enter
in
call
mov
xor
push
in
xchg
jae
and
aas
push
fsubrl
xchg
lret
in
mov
xor
xor
add
xor
sbb
mov
or
xchg
leave
gs
or
jae
gs
popa
jne
loop
mov
sbb
cmp
leave
jne
inc
and
test
fsubr
jne
xchg
iret
pusha
fildl
cmp
ja
insb
jl
ficompl
push
cmp
rcrb
inc
sti
inc
loop
pop
fstps
push
ds
inc
add
push
or
push
icebp
int3
inc
add
rorb
mov
fnstcw
daa
and
push
jle
cwtl
lods
pop
sub
movsb
dec
cmpsb
orl
cmp
push
fdiv
lods
popf
or
pop
mov
mov
push
loop
pop
fisttpll
flds
movsb
int
and
cmpsb
push
push
add
sub
mov
jp
mov
addr16
xchg
ret
icebp
ret
in
push
cld
xchg
mov
cli
inc
jg
push
call
dec
cmc
enter
das
ret
call
les
leave
jle
or
dec
pop
push
shlb
jno
mov
adc
inc
iret
mov
insl
sub
rorl
mov
dec
test
mov
jmp
xor
push
mov
movsb
push
cmpsl
or
gs
mov
addr16
mov
stos
sub
loop
enter
pop
aad
or
inc
shrb
mov
sbb
ret
jo
rolb
sbbl
lcall
add
bound
cmp
pop
in
hlt
pop
outsl
add
fidivs
sub
stos
daa
dec
aas
add
insl
hlt
in
ja
repnz
jg
add
mov
add
fistps
mov
jecxz
dec
add
es
in
sbb
mov
iret
in
adc
mov
add
jl
test
mov
icebp
mov
sbb
jle
mov
gs
je
push
push
mov
in
insb
and
fxch
pop
lds
pop
dec
popf
sbb
imul
pop
movsl
dec
jne
arpl
sahf
mov
mov
cmp
lret
test
or
ftst
mov
adc
ljmp
pop
jne
push
std
jge
inc
push
mov
ds
pusha
dec
call
lahf
imul
aas
je
in
out
or
je
push
sahf
test
dec
aas
or
pop
mov
fisttpl
push
int
jg
push
push
pop
mov
and
pushf
push
or
jmp
std
mov
cmp
js
pushf
lods
xor
fs
jb
aas
jp
hlt
jl
cmp
mov
and
jnp
xor
mov
adc
inc
call
sub
iret
xchg
daa
cmp
popf
popf
in
or
add
sbb
sbb
adc
dec
movsb
jge
pop
sahf
orb
mov
xor
scas
xchg
and
std
add
xchg
pop
lcall
orb
call
xchg
pop
or
cwtl
aad
scas
aaa
or
xchg
dec
test
mov
add
popa
push
out
and
outsb
cmp
pushf
addb
mov
cli
andl
sub
mov
cld
lret
sarl
test
out
cltd
pop
mov
sbb
inc
mov
xchg
shrl
nop
ftst
xor
sti
sub
js
enter
push
add
jmp
clc
pop
inc
cld
ja
test
rcrb
into
icebp
into
or
jb
lret
mov
mov
mov
jb
leave
cmp
mov
fldcw
push
lods
dec
lret
jge
cmpsl
inc
mov
add
cld
aad
pushf
mov
ret
fs
sub
lret
pushf
rcr
fwait
adc
stos
xchg
fsub
fbld
or
stos
cmp
mov
das
jp
mov
lea
cwtl
mov
out
mov
sub
xchg
xor
cli
adc
cltd
clc
insl
sbb
inc
push
jb
iret
xchg
cs
adc
lcall
cld
lds
mov
pop
and
mov
inc
repz
or
cmpsb
xchg
aam
mov
sub
xchg
inc
mov
out
adc
adc
test
push
sarl
push
mov
mov
adc
inc
push
js
add
pop
out
fidivrl
mov
lock
and
or
sbb
aam
mov
inc
pop
or
push
mov
pop
pop
addl
mov
xor
mov
movsl
sbb
and
mov
xchg
and
xchg
push
fldt
jns
or
fdivrl
dec
lods
test
pop
mov
push
call
cs
test
out
mov
cwtl
add
ds
lahf
mov
repnz
fiadds
test
addb
add
leave
or
test
repnz
hlt
repz
xor
mov
outsl
std
lods
imul
adc
stos
in
lock
push
push
std
xor
jge
adc
cwtl
adc
imul
push
aam
cmp
jl
les
cmp
push
mov
in
dec
add
mull
clc
pop
lahf
jno
and
adc
sahf
xchg
pusha
out
add
dec
fwait
icebp
les
aam
lret
fwait
jl
or
jmp
inc
int
es
ljmp
mov
jge
popl
mov
sub
cmp
xchg
mov
je
inc
push
add
sbb
cmp
fiaddl
mov
cmp
cmp
pop
pop
lret
in
or
sbb
shll
mov
jno
out
pop
or
imul
mov
loopne
push
xchg
ja
pop
inc
or
xchg
cwtl
popa
mov
inc
inc
movq
mov
arpl
ds
in
pop
pop
mov
call
dec
push
ror
lods
outsb
adc
lds
cmp
pop
mov
xchg
jns
mov
push
stc
and
push
push
inc
jnp
das
mov
mov
add
xchg
lahf
pop
in
xchg
mov
repnz
dec
movb
jns
sahf
mov
adc
lods
lahf
xor
inc
adcl
jne
adc
sarb
inc
sub
xor
mov
mov
sub
adc
xchg
xchg
adc
cmp
dec
nop
outsb
rcrl
movsl
rolb
pop
add
mov
cmp
test
add
lock
push
imul
popa
adc
xor
enter
lret
pop
scas
mov
xchg
scas
arpl
sahf
mov
or
pop
xchg
cmp
pop
xor
mov
loope
push
push
mov
xor
repz
push
jb
mov
int
xchg
xchg
mov
out
add
jnp
mov
push
push
cli
sbb
sub
jns
movhps
adc
orl
cmp
cmp
cld
movb
jge
jo
adc
adc
mov
adc
fcompl
insb
sbb
mov
call
in
pop
fmuls
add
xor
sbb
sub
sub
scas
push
inc
into
jg
incb
ja
es
hlt
xchg
jne
in
je
sbb
es
fistpll
push
mov
lds
ret
add
jnp
cltd
aaa
bound
xchg
cmp
add
dec
inc
dec
mov
pop
xchg
push
mov
fwait
mov
mov
sbb
dec
cld
mov
mov
bound
insl
aad
jno
sbb
sti
in
mov
cld
jno
xor
mov
in
jae
sbbb
mov
mov
xorl
gs
jo
xchg
stc
testb
fdivrl
enter
push
and
pop
mov
jnp
lods
ds
testl
imul
cs
out
push
ljmp
sbb
xchg
xchg
sub
arpl
out
dec
cmp
std
push
cmc
jmp
mov
push
dec
xor
or
adc
gs
mov
arpl
cmpsb
push
mov
cwtl
mov
jmp
or
fwait
sub
rclb
inc
scas
push
inc
imul
pop
into
ss
mov
xchg
scas
imull
pop
sub
inc
sti
push
sbb
iret
dec
sub
or
inc
xchg
sub
xor
scas
inc
lds
inc
mov
lret
test
inc
lds
cmc
fisubs
fwait
adc
sub
xchg
add
mov
pusha
cli
fcompl
mov
mov
mov
inc
push
adc
cmp
mov
pop
sbb
out
dec
xchg
or
test
jp
pop
sub
stos
mov
js
add
mov
pushf
adc
shlb
arpl
jp
std
clc
popa
sahf
sub
xchg
inc
addr16
mov
jmp
subl
add
stos
cld
xor
mov
or
popa
pop
and
pop
or
sub
mov
mov
imulb
sbb
cmp
xchg
test
jns
sarb
inc
jg
pop
lcall
mov
inc
jo
cmc
xchg
imul
sbb
dec
inc
stos
dec
fisubrs
xlat
pop
mov
adc
mov
adc
mov
in
xor
xchg
leave
lea
mov
jp
adcl
scas
push
loop
in
lret
mov
or
js
xchg
add
sbbl
fisttpll
pop
xchg
xor
dec
mov
xor
cmp
sbb
test
ja
xchg
mov
add
sbb
xchg
xchg
cltd
sub
cs
jbe
mov
inc
push
and
lret
push
imul
lahf
aas
cli
inc
pop
stos
push
in
xlat
mov
rorb
rolb
sub
jg
in
xchg
lea
inc
mov
lock
ret
ss
push
lods
xchg
insb
leave
mov
out
mov
addr16
out
push
in
and
shl
cmp
dec
arpl
aad
divb
outsl
lahf
sbb
ret
dec
fbld
pop
mov
shll
mov
adc
out
enter
fstl
pop
inc
add
imul
xchg
inc
lret
fsubrs
daa
out
sbb
lcall
xor
aad
xchg
int3
mov
test
mov
lahf
shrl
mov
loopne
sub
push
and
sub
xchg
xor
adc
test
adc
test
jge
mov
xchg
fwait
outsb
jl
push
or
jp
push
ja
push
xchg
cmp
cmovge
mov
adc
fwait
xchg
mov
inc
xor
push
adc
xor
psrld
in
inc
stc
push
sub
jg
xchg
push
je
inc
jge
ja
jmp
movsl
mov
jmp
mov
cli
xchg
sbb
fimuls
push
dec
cltd
xor
mov
push
mov
movsl
mov
jo
loop
in
in
add
pop
xchg
int3
imull
les
push
nop
repnz
cmp
cltd
xor
int3
in
adc
dec
in
popa
daa
outsl
jmp
cmp
or
and
imul
lcall
xorb
sbb
xlat
lahf
imul
ja
cmpsb
inc
mov
packuswb
cmpl
or
testl
cmp
pop
cli
fiaddl
cltd
sbb
adc
sbb
mov
stos
or
push
in
lock
lock
in
jo
ja
lret
inc
lret
stos
pop
imul
adc
sbb
adc
rcrl
addr16
mov
dec
adcl
or
sti
shll
jmp
scas
int
adc
dec
pop
mov
addr16
adc
clc
xchg
mov
notl
pop
inc
mov
pop
dec
sub
shl
cmpsl
insl
das
ret
roll
lods
in
inc
cmp
sbb
int
loop
fists
inc
ss
xor
loope
lcall
fs
fistpl
jo
sub
stos
jne
push
clc
lock
cld
pop
and
sbb
insl
mov
into
lods
mov
incl
xchg
icebp
jle
inc
mov
or
jnp
mulb
push
icebp
in
sub
cmp
jmp
dec
insl
cld
fmull
dec
dec
addr16
mov
into
pop
cmp
sub
call
mov
stc
sar
in
and
pop
clc
sbb
adc
cmp
mov
jg
or
push
ds
sub
sbb
jg
lods
pop
pop
or
push
jecxz
fidivrs
sub
xor
sbb
inc
lahf
lods
call
fs
push
mov
jl
pop
shll
das
jecxz
jmp
scas
jecxz
jle
sub
cmp
jns
mov
inc
and
sarb
insb
and
mov
cmp
pop
xchg
data16
fcoms
mov
jmp
pop
xchg
sahf
push
in
jmp
in
je
imul
pushf
fdivrl
jg
sub
lcall
in
leave
mov
xchg
xor
fisttpl
pop
sbb
int
out
push
dec
push
outsb
mov
movl
fcmovu
sub
icebp
loope
in
enter
add
nop
xchg
adc
ss
and
jbe
sbb
sarb
and
dec
fsts
cmp
ja
call
mov
cltd
stos
sbb
je
sbb
loop
push
testb
sub
aas
and
je
fwait
movsb
sub
jge
fs
or
mov
dec
fimuls
js
incl
mov
inc
lret
dec
insb
cmp
jl
ljmp
mov
or
insl
push
cmp
sub
add
fildll
inc
mov
jmp
sahf
push
jae
push
not
add
ss
stos
and
mov
sub
scas
dec
xor
mov
inc
or
xchg
sbb
cld
push
fs
inc
mov
pop
pop
testl
inc
out
xchg
dec
push
inc
cmc
and
adcb
popf
sbb
adc
push
and
pop
or
testl
pop
out
in
data16
cmp
out
inc
clc
sbb
xchg
jle
cmp
push
repz
out
lods
mov
adc
xchg
sahf
aad
dec
pop
cld
jnp
mov
ret
sbb
hlt
mov
testb
and
notl
jmp
cmc
dec
imul
mov
xor
fimull
adc
jge
add
int3
inc
push
xlat
call
popf
mov
daa
mov
sti
imul
add
shll
cmc
dec
les
inc
adc
jmp
sbb
pusha
jne
decl
jp
mov
mull
or
adc
stc
test
dec
push
mov
mov
mov
aas
ds
jae
cmp
dec
adc
lea
cmp
lret
adc
insl
jge
lcall
out
loop
les
xchg
aas
add
dec
cmpsb
push
xchg
cmp
mov
ret
xorb
test
jbe
aad
and
ret
adc
jmp
test
sbb
sbb
or
push
cwtl
subl
stos
stos
call
test
enter
popf
sub
insb
out
addr16
lock
das
imul
mov
sbb
fnstcw
imul
mov
pop
rorb
cmpsl
push
leave
sarl
clc
mov
les
test
pop
pop
int3
mov
orl
xchg
push
and
inc
jae
sbb
int3
ds
movsb
cltd
lret
loop
sti
test
lods
and
pop
mov
jbe
xor
fimull
divl
jae
mov
rolb
cmp
sarl
dec
mov
and
aas
scas
mov
xchg
jmp
xchg
push
dec
push
bnd
lds
stos
push
push
push
pusha
into
lods
or
sbb
shll
push
mov
mov
cli
adc
or
add
sbb
sbb
nop
push
shrl
push
stc
imulb
repnz
loop
pop
and
jne
mov
aam
hlt
idivb
pushf
fcoml
jne
movsb
add
mov
repz
cs
fxch
jp
es
loopne
shrl
ds
in
lock
dec
and
sub
xchg
jb
add
mov
mov
aam
ror
lcall
mov
sbb
sbb
loope
jle
jo
daa
dec
or
jg
lcall
dec
fidivrl
inc
fmuls
cld
cwtl
push
and
pop
aam
and
aam
push
push
push
mov
lahf
outsb
gs
pop
loop
adc
cmovbe
call
fbld
test
xchg
inc
fnstenv
enter
lahf
in
rorl
adc
scas
out
xlat
shlb
in
sub
mov
notb
mov
repnz
cmp
or
dec
push
adc
nop
insb
jne
mov
insl
ja
pop
xor
stc
inc
and
and
mov
dec
scas
cs
aam
mov
sbb
cmp
mov
mov
jb
mov
shl
xor
ljmp
sar
test
xchg
repnz
int
js
dec
call
pusha
loopne
push
dec
frndint
fadd
icebp
movsl
mov
push
lock
imul
lods
mov
fwait
xor
push
ljmp
xchg
cli
and
xchg
les
hlt
cltd
push
add
xlat
and
jmp
mov
dec
mov
push
subb
sbb
out
addr16
incl
movsb
leave
mov
mov
inc
leave
pop
ficoml
sbb
pop
sub
js
int
dec
add
bound
mov
lods
inc
cmp
sub
mov
ds
sbb
inc
les
into
loop
jb
xor
cmc
das
popf
in
hlt
push
jbe
std
test
lret
mov
or
push
les
xor
dec
push
in
push
add
sub
icebp
sub
out
subb
adc
movsl
add
mov
imul
stc
and
sbb
cmp
test
leave
popf
iret
sbb
cmc
inc
jns
jnp
push
std
cmp
xchg
int
lret
push
ficomps
mov
mov
xchg
les
shrd
mov
icebp
jae
cmpsb
jae
gs
add
ret
dec
inc
dec
jle
shl
sbb
push
icebp
mov
loope
xor
je
imul
xchg
rcrl
sbb
cmp
arpl
aas
iret
lret
push
mov
mov
xchg
push
sub
insb
ss
mov
cmp
or
ret
vandps
pop
ficompl
xor
stos
mov
sti
inc
lret
fnstcw
pop
div
jl
retw
std
cmp
jecxz
and
push
and
int3
test
pop
call
push
mov
pusha
mov
xchg
mov
and
iret
test
je
sub
xchg
xchg
cmp
ss
cmp
shl
pop
mov
inc
jb
add
sub
test
fbld
push
push
mulb
aas
and
ljmp
push
ss
stc
stos
rcrl
pop
arpl
mov
inc
sub
inc
push
sbb
add
icebp
es
mov
je
inc
dec
popf
xor
mov
dec
push
outsl
xchg
jns
pushf
lods
cmp
mov
scas
jge
xchg
loope
xchg
test
popl
ss
lcall
test
js
adc
xlat
imul
jl
in
in
int
xor
jle
pusha
sub
stc
std
mov
sbb
test
mov
aaa
mov
push
jge
pusha
or
cmpb
jo
repnz
imul
cmp
jns
repz
jmp
xchg
adc
mov
push
pop
fbstp
repnz
mov
pop
leave
pop
xchg
jmp
movl
add
or
lods
xor
mov
xchg
mov
mov
or
popf
or
stos
testb
and
icebp
add
jmp
lcall
mov
pushf
or
cmp
sbb
pop
push
xchg
test
inc
mov
push
jle
ja
cli
adc
test
xorb
pop
aam
int3
addr16
in
test
mov
xchg
sqrtps
mov
enter
dec
push
xchg
fs
pop
xlat
ljmp
je
fldt
imul
push
inc
mov
mov
daa
and
mov
xor
fidivs
mov
mov
popa
test
push
cld
mov
add
lret
lock
jge
push
pop
negb
in
mov
repz
fnstcw
into
in
aad
jmp
notb
lcall
out
daa
fimuls
ficompl
lcall
bound
in
shr
loopne
adc
shlb
mov
sub
lods
jmp
popa
fistps
out
repz
jae
mov
mov
sub
sbb
loop
pop
popf
and
shrb
bound
cmp
cmc
enter
insb
sub
jl
xor
push
sbb
push
cs
pextrw
push
dec
cs
add
sarb
test
lock
mov
xor
xchg
stc
or
dec
mov
lea
sub
and
lahf
scas
or
mov
add
cmp
xchg
jl
push
nop
icebp
out
ljmp
data16
ljmp
xchg
cmp
ret
push
xchg
fbld
js,pt
pop
pushl
cmp
xchg
jle
ret
or
andl
push
cmp
lea
test
clc
lods
andl
cmp
cld
in
mov
mov
test
lds
icebp
mov
sbb
xchg
jns
test
sbb
std
inc
pop
adc
cwtl
lock
or
xor
rorl
cmpsb
sub
sbb
int
cmpsl
xor
shl
stos
inc
ret
or
divb
shll
data16
leave
adc
mov
enter
clc
out
into
pop
sub
pop
inc
xchg
xor
or
repnz
pop
mov
pop
xchg
jb
out
and
popf
mov
popa
push
and
mov
jno
das
test
stos
out
jecxz
rcrl
push
test
xor
xor
movsl
imul
and
cld
jne
outsl
jg
sub
in
push
cmp
nop
dec
push
sarb
cmp
pop
cmpsb
sbb
cwtl
icebp
xor
dec
pop
xor
sbb
idivl
movsl
dec
jb
ss
pop
xchg
add
into
cmp
lret
fcmovne
xchg
jb
push
in
call
loop
lods
xorl
xor
and
pop
jg
lds
std
icebp
std
test
jne
dec
mov
idivl
in
pusha
pop
jne
outsl
ret
icebp
stos
mov
stos
dec
out
jp
sub
cmp
pop
inc
sbb
mov
push
outsb
xchg
das
mov
dec
lret
jge
ror
pop
adc
stos
roll
dec
sbb
negl
aad
jmp
jne
sbb
cmp
or
xor
mov
mov
out
mov
jns
mov
pop
push
and
scas
inc
xor
mov
pushf
icebp
mov
jae
push
sub
xchg
sbb
jno
test
popa
movsb
lods
int
push
pop
call
pushf
jg
sub
subl
add
imul
mov
cmc
sub
push
jg
lock
push
cmpsb
mov
mov
jb
jns
sarl
jae
mov
jmp
ds
inc
push
cli
dec
cli
iretw
add
or
cltd
mov
fcoml
pushf
gs
push
rorl
xor
ja
orb
popa
in
adc
and
lds
enter
enter
cmp
and
dec
jmp
gs
jle
mov
xchg
xchg
pusha
xor
lcall
xchg
rol
push
jle
adc
daa
lret
sti
push
jne
dec
sub
scas
enter
popl
pop
js
mov
loop
adc
jne
aas
adc
les
stc
xchg
mov
addl
jne
add
xchg
daa
xchg
lds
mov
data16
dec
sbb
outsb
and
addr16
fsts
fnstcw
mov
fs
pop
iret
mov
scas
addr16
shl
adc
or
cmp
jnp
add
xor
fldcw
shlb
adc
fbstp
xchg
or
push
xchg
xchg
mov
xchg
mov
mov
aad
adc
std
shll
ret
lsl
mov
inc
or
sub
in
pop
insb
mov
into
aaa
sbb
and
pop
in
out
clc
mov
div
sub
inc
stc
pop
cmp
mov
xchg
add
sbb
and
adc
dec
push
cmpsl
xor
mov
stos
push
loopne
cmpsl
inc
lahf
xchg
insb
into
inc
pop
cmp
insb
insb
and
add
inc
jbe
loopne
test
cltd
aaa
popf
out
sub
imul
or
ret
cmp
call
fistpl
in
inc
sbb
loopne
jno
hlt
pop
cltd
dec
jno,pn
test
das
inc
cwtl
int
mov
add
lea
fistps
testl
mov
or
sbb
pop
cs
jno
hlt
xchg
dec
mov
inc
mov
mov
adc
push
sbbl
or
jbe
add
mov
push
mov
nop
xchg
cmp
mov
movsb
jns
mov
pop
ds
popa
test
outsl
mov
mul
adc
ret
pop
mull
push
paddusb
dec
push
jmp
pusha
or
adc
fimull
pop
cltd
mov
iret
and
mov
sbb
roll
sub
mov
addr16
or
test
pop
and
dec
aaa
icebp
shrb
jecxz
jns
jne
rcl
mov
adc
enter
xchg
xorps
mov
std
mov
mov
dec
ja
lods
mov
mov
cld
out
sub
push
stos
hlt
xor
lahf
sbb
dec
or
andl
add
inc
dec
aad
lcall
mov
out
popl
cmp
push
jne
out
lret
stos
mov
stc
in
repnz
push
push
lahf
cld
adc
mov
sti
aad
push
xchg
xor
out
lret
cmp
test
sti
je
cs
mov
pop
lds
dec
mov
punpcklwd
mov
mov
inc
sub
cs
sub
cmp
pop
xor
movb
stos
sbb
in
or
orl
int
pop
push
jno
aas
push
leave
mov
lcall
aad
adc
inc
xchg
mov
roll
stos
add
jne
xchg
aam
xchg
movsl
scas
sub
sub
dec
test
aas
or
stc
xchg
jge
shrb
sahf
and
xor
add
xchg
xor
jl
nop
stos
push
xchg
lret
xor
shll
clc
sbb
mov
jns
jb
out
subl
xor
xor
push
arpl
adc
das
repz
xor
jl
test
dec
and
adc
addr16
lret
and
adc
cld
insb
and
xchg
mov
fidivl
add
add
mov
mov
sub
inc
movsb
lret
lret
stos
dec
pop
outsl
lods
or
jecxz
cs
pop
jg
or
mov
mov
divb
dec
arpl
sahf
dec
cmp
int3
pop
jns
xor
setge
mov
pop
xor
mov
popf
jge
push
jmp
and
shlb
sahf
add
adcb
dec
sarb
loopne,pn
ret
mov
sbb
not
insl
add
add
and
pop
shlb
jno
dec
ret
cs
ja
mov
lods
xorl
pop
addb
cmp
dec
xlat
pop
rcrb
add
sbb
mov
lock
jo
or
ja
push
xor
dec
faddl
mov
enter
sub
mov
push
inc
dec
cld
stc
mov
bound
loop
adc
xchg
stos
aaa
sub
insb
fwait
push
push
xchg
sbb
movsb
decl
and
xor
add
push
outsb
insb
mov
sbb
into
xor
sbb
push
sahf
xlat
xor
dec
sti
in
loop
out
test
lahf
loop
dec
jl
aad
idiv
clc
ret
pop
adc
or
loop
fisttpl
cmp
xchg
xchg
sub
mov
xor
lds
hlt
mov
lock
int
shrb
mov
jmp
push
pop
inc
jns
lds
pop
stc
xchg
push
mov
or
inc
xchg
arpl
jno
adc
mov
sbb
lea
clc
inc
push
fwait
xchg
dec
and
sti
mov
in
push
in
insb
jmp
fldl
adc
jmp
sbb
cmp
mov
pop
test
inc
inc
inc
push
push
movsb
adc
mov
push
dec
ret
int3
lock
or
push
mov
xor
mov
and
imul
inc
scas
adc
fildl
test
or
or
aad
into
fs
movsl
dec
in
xchg
or
push
es
aas
sub
lcall
rcrb
shrl
daa
jo
xchg
in
rcrl
sbb
call
pop
jae
cld
fdivrl
adc
mov
xor
jecxz
add
add
add
in
push
cmp
xchg
lock
jl
shlb
mov
stc
pushf
in
pop
push
jmp
bound
fs
push
repz
int3
rcl
jnp
movsb
push
adc
mov
adc
xchg
jae
imul
aas
iret
mov
mov
stc
mov
in
xchg
mov
push
das
das
sbb
inc
notb
or
jb
dec
or
sbb
in
test
mov
mov
scas
scas
mov
adcl
xlat
push
aam
repnz
jge
mov
lods
aas
fsubl
inc
out
push
cltd
mov
adc
gs
rorb
mov
mov
fwait
cli
test
or
dec
stc
inc
pop
mov
and
lahf
insb
push
pop
cmp
test
mull
stos
jnp
pop
adc
repnz
cmpsb
adc
mov
call
and
sub
pop
xchg
sti
nop
adc
cmp
in
push
adc
jae
pop
nop
jns
jae
xor
ret
loop
mov
mov
fwait
xchg
js
dec
jle
mov
mov
cmp
xchg
adc
int3
and
ret
insl
jbe
and
jg
aas
test
mov
xchg
daa
cld
fs
push
test
pop
cmp
into
mov
jmp
cli
fbstp
pop
inc
pop
or
les
mov
and
das
adc
push
leave
xor
cmc
sti
rolb
sub
iret
outsb
cmp
mov
sbb
les
loopne
ret
cltd
inc
mov
test
push
lock
xchg
inc
repnz
push
or
aaa
mov
mov
mov
push
push
push
loope
pop
mov
pop
loope
mov
clc
inc
pushw
fistpl
jge
jle,pt
outsb
lahf
add
push
mov
push
adc
mov
repz
add
mov
imull
mov
jg
jmp
lds
mov
hlt
jg
int
cmp
loop
aad
aaa
jmp
ja
xchg
in
out
push
stos
cwtl
add
jmp
ljmp
mov
fisubl
cmp
lds
and
cs
xor
adc
popa
pusha
jmp
mov
adc
and
mov
sbb
jp
mov
into
xchg
icebp
scas
add
loop
adc
and
xchg
xchg
add
stos
sbb
add
jb
lods
cli
jg
jl
push
sbb
mov
out
test
mov
jge
xchg
jmp
mov
dec
in
cmp
sbb
xchg
cmpsl
das
sub
xlat
nop
call
sbb
int3
jp
pop
or
and
mov
cltd
fistpll
das
jne
inc
pop
push
lods
add
es
scas
pop
sbb
mov
adc
aaa
rcrl
inc
jp
mov
adc
je
jl
inc
cmp
jae
add
and
out
jb
loop
jb
shrl
ds
aam
pusha
mov
outsl
xor
push
pop
inc
inc
test
adc
mov
lock
add
xor
into
mov
cmp
xor
enter
and
fdiv
bound
jmp
mov
sahf
into
nop
pop
mull
sub
jne
xchg
nop
fcmovne
fs
andl
fcoml
push
pop
xchg
mov
ret
ds
mov
call
arpl
test
mov
mov
shlb
cmc
push
inc
push
mov
add
pop
pop
sub
leave
xchg
push
pop
sub
mov
mov
cmp
adc
outsl
push
adc
mov
cmp
xchg
xlat
mov
sub
repnz
int3
mov
push
cmp
pop
sahf
jnp
jge
dec
add
xor
in
shlb
mov
mov
pop
xor
add
ret
in
push
jp
arpl
ljmp
mov
insb
hlt
mov
cmp
mov
lea
cmp
or
sub
xor
mov
movsb
fwait
dec
mov
aaa
mov
jge
mov
mov
lret
stos
lret
gs
xor
insb
mov
cmp
shll
mov
cmp
ds
xor
sbb
dec
outsl
jg
cmp
das
cltd
sbb
repnz
fwait
mov
fxch
cmp
or
lods
jmp
cmp
iret
lret
scas
sbb
movsl
jb
mov
inc
inc
bound
lcall
inc
int
fs
pop
out
mov
xor
and
lret
fwait
add
fildl
dec
inc
xor
or
daa
out
dec
xor
mov
inc
mov
add
pop
shll
mov
scas
sbb
andb
jnp
fwait
out
mov
dec
mov
iret
mov
xor
mov
dec
mov
jbe
and
sub
and
add
fwait
cs
or
test
das
dec
in
into
arpl
jnp
mov
xchg
enter
cmpl
dec
dec
stos
or
loope
pop
outsl
sti
enter
push
mov
daa
push
mov
mov
adc
jo
cmpsb
cmpsl
and
inc
pop
xchg
daa
data16
xchg
rol
mov
push
cwtl
fstps
call
xchg
mov
addr16
inc
xchg
loop
pop
addr16
stos
push
dec
nop
push
clc
repz
aaa
sub
subl
or
push
xchg
adc
nop
jg
insb
pop
popa
mov
pop
lods
push
int
stos
xchg
cmpsb
loop
aaa
xor
pop
popf
mov
stac
sbb
xchg
jbe
push
jbe
push
mov
xchg
fwait
incb
cwtl
and
mov
jnp
clc
mov
dec
lods
inc
sbb
xor
xchg
scas
lods
push
arpl
mov
push
sahf
adc
push
in
lea
pop
add
enter
pushf
mov
out
xor
sub
inc
xor
mov
fnsave
mov
cmpsb
xlat
and
lcall
mov
testl
sar
sub
shl
aam
add
xchg
ss
push
dec
and
and
nop
mov
test
mov
adc
add
jmp
test
and
push
cmp
lret
iret
cld
or
push
clc
test
or
push
imul
dec
and
xor
shrl
push
jo
pop
stos
scas
ja
rorl
test
dec
sbb
inc
mov
repz
shrb
mov
inc
adc
imul
shll
scas
dec
std
imul
adc
mov
out
icebp
ja
or
sti
sahf
mov
mov
cltd
push
inc
bound
das
push
add
imul
inc
and
cmc
cmp
push
dec
sub
sbb
sub
in
adc
cmp
hlt
mov
xchg
fistps
xor
ja
cltd
inc
xchg
in
aaa
call
aam
stc
test
aam
imul
xor
addb
sub
sub
adc
repz
movsb
cmpsl
xchg
sbb
mov
add
test
enter
dec
jge
dec
shlb
pop
sbb
ficoms
aaa
sub
cltd
ss
pop
dec
or
or
test
stos
rolb
ror
stos
fsts
adc
int
push
jns
xor
push
stos
sub
les
mull
mov
cmc
adc
adc
adc
mov
cmp
lret
mov
pop
mov
jmp
or
and
bnd
insb
frstor
push
andb
inc
je
out
loop
push
xor
call
cmp
das
ficoml
in
stos
mov
orl
mov
daa
lods
pushf
cmpb
jecxz
jo
insl
inc
leave
mov
shll
movsl
in
xlat
mov
clc
aaa
mov
mov
xchg
push
and
add
loopne
repz
mov
push
jg
xchg
or
mov
cld
dec
stos
push
push
xchg
sbb
xchg
mov
push
mov
mov
push
out
inc
loope
inc
lock
xchg
pop
pop
lea
in
bound
pushf
xor
ds
loop
mov
push
adcl
jbe
sub
fld
loop
xchg
xor
call
xchg
xor
xchg
sub
loope
or
jne
mov
sbb
pop
pop
cmp
cmpsl
dec
aad
ret
repz
lret
leave
cmpsl
scas
clc
xor
out
test
lea
sbb
add
inc
dec
sub
lods
dec
test
mov
push
sub
jae
fstl
jle
out
int3
add
xchg
in
mov
out
push
jno
and
mov
in
mov
imul
popa
int
mov
sub
shrl
mov
cmpsl
or
fwait
cmpsb
mov
sbb
pop
test
clc
sbb
in
pop
mov
and
push
sub
add
sub
xor
call
jns
fdivs
xchg
dec
adcb
xchg
test
pop
in
cmp
jp
mov
fstp
add
mov
in
mov
into
loopew
mov
shlb
lods
fs
shrb
sub
mov
mov
scas
push
ret
orl
repnz
lret
js
fnstcw
lods
jae
mov
mov
dec
add
adc
mov
rcrb
nop
or
movsl
ljmp
andb
addl
xchg
mov
hlt
and
xor
in
cli
xor
outsb
pop
jb
jbe
sti
movl
call
jo
add
js
scas
mov
cltd
fcomp
mov
je
jmp
mov
in
inc
stos
sbb
xchg
jecxz
push
add
insl
cwtl
inc
jo
push
push
subl
xor
shll
insl
cmp
xchg
pop
loopne
jmp
shrl
jno
cmpsl
iret
fistpll
mov
adc
cs
push
call
das
inc
inc
mov
mov
add
jbe
and
jp
es
js
inc
jge
or
inc
mov
jnp
out
cmc
and
stos
mov
dec
pusha
loope
aam
sub
mov
rol
nop
data16
and
sbb
leave
mov
and
mov
dec
and
push
sbb
xchg
loopne
adc
pop
add
sarl
outsl
shll
cmpsl
mov
mov
cmpsl
jl
sbb
cmp
gs
adc
mov
dec
xchg
lods
test
jg
or
push
and
jo
repz
loop
cmp
arpl
cs
pop
cmp
mov
nop
notl
scas
xor
sbb
testl
inc
xor
fwait
push
sti
lahf
scas
mov
out
add
dec
add
xchg
push
push
pop
out
dec
std
shrl
in
mov
cmp
sub
mov
add
inc
in
jg
cld
pushf
jbe
fldl
and
fimuls
sub
xchg
mov
rolb
mov
dec
cmpsl
hlt
mov
subb
hlt
aas
lods
xor
and
es
mov
mov
movsl
adc
push
loopne
adc
mov
arpl
loop
xor
sub
in
cmp
or
mov
lret
lcall
cmc
ror
add
data16
dec
mov
jp
jbe
lret
popf
or
sub
adc
nop
cli
fimull
cmp
fs
pop
xor
jmp
pop
inc
rep
sub
or
sbb
in
mov
cs
lret
shrb
lcall
insl
dec
imul
xchg
mov
mov
mov
mov
fsub
push
shll
cli
aaa
dec
aaa
adc
icebp
lock
mov
jo
dec
and
sub
and
int3
lahf
pop
out
pop
sub
pop
sti
pop
push
out
mul
in
and
pop
fs
stos
fidivl
adc
sub
mov
mov
fisttps
leave
ds
jo
dec
and
fsts
sti
or
popf
rclb
adc
inc
adc
jae
in
fcmovbe
int3
in
cli
pop
dec
loop
nop
and
test
dec
push
cmp
dec
adc
sub
xor
jp
test
fistpl
cmp
pop
std
addr16
andb
call
dec
and
lcall
fs
adc
jo
sbbl
jmp
xchg
sub
adc
call
and
aad
mov
rcll
stc
pop
es
sbb
jbe
mov
inc
test
shll
xor
repnz
cltd
xchg
jp
xchg
inc
xchg
shll
shrl
mov
iret
sub
imul
dec
add
jne
out
inc
mov
cltd
xor
inc
add
sub
inc
loope
les
inc
mov
mov
inc
sti
inc
sub
adc
addl
add
addr16
pushf
in
pop
test
imul
out
xor
faddl
mov
push
frstor
add
fcom
push
stc
xor
shlb
xchg
mov
aam
mov
or
xchg
test
pop
dec
jne
and
or
cmp
out
arpl
jecxz
enter
mov
adc
mov
cmp
dec
cmc
psllw
dec
jnp
mov
lea
inc
adc
xchg
imul
in
movsl
arpl
add
hlt
sbb
inc
mov
mov
mov
mov
lret
mov
andb
xchg
test
xchg
stc
int3
ja
stc
pop
scas
cld
push
arpl
or
dec
mov
push
xor
or
addb
out
jl
pusha
pop
mov
sbb
adc
jmp
or
or
cltd
jle
loop
sbb
pop
dec
inc
sbb
pop
dec
sbb
popa
test
imul
and
imul
ret
int
add
rorl
inc
mov
mov
xchg
lea
enter
jo
xchg
push
outsb
jnp
adc
and
cli
mov
rclb
jbe
lret
mov
push
xor
or
adc
jmp
leave
mov
jo
test
push
jno
outsl
loop
cltd
mov
xchg
imulb
mov
add
jno
in
inc
xor
dec
iret
insl
mov
adc
and
or
cmpsl
jl
mov
sbb
mov
int3
fcomip
lret
cmp
rclb
xchg
sbb
inc
cmp
sub
call
inc
sbb
jecxz
mov
or
mul
inc
mov
jl
testl
mov
jg
or
mov
mov
cmp
mov
xchg
mov
mov
cmc
jmp
sbbl
mov
inc
pop
jb
mov
inc
andb
pop
and
sbb
mov
pop
jne
mov
inc
repz
push
xchg
xchg
lods
test
sub
std
xor
adc
popa
icebp
sbb
inc
cmc
push
es
out
rol
jg
stc
mov
pusha
dec
out
push
outsl
ror
sbb
cmpsb
out
mov
xor
or
push
call
shll
push
imul
push
jno
sbb
sti
dec
lret
jle
das
dec
jg
pop
loope
sarl
nop
jmp
shrl
fidivs
push
fisubs
dec
cltd
xchg
xor
popa
mov
and
and
pop
add
inc
cmp
mov
mov
inc
xor
repz
sbb
cmc
popf
psubd
push
jne
pop
xlat
loop
inc
and
nop
cmp
push
dec
cwtl
pop
rcl
aad
pop
int
in
mov
push
pop
ds
shll
and
ljmp
or
xchg
lcall
jae
ljmp
in
dec
test
pop
sub
js
mov
aas
sub
cmpsb
mov
jbe
push
xor
lea
cltd
in
inc
push
jns
fsubr
bswap
pop
iret
lock
cld
pop
jg
inc
sub
xor
pop
ljmp
cld
dec
or
push
xchg
mov
jp
xor
sti
mov
aam
lret
sti
mov
or
cmp
mov
test
xchg
jle
outsl
stos
in
inc
cmp
inc
hlt
popf
mov
mov
cmp
xchg
das
les
clc
outsb
je
add
add
and
mov
cmp
xor
int
adc
icebp
cmpsl
sbb
pop
ss
out
jmp
fs
pusha
mov
fwait
orl
mov
mov
fiadds
sbb
jp
imul
pop
das
fwait
lcall
adcl
leave
mov
test
add
das
sbb
ja
and
mov
int3
shrb
lahf
mov
pop
mov
and
cli
push
lock
imul
xchg
mov
pushf
addb
fstpt
pop
add
sbb
cld
and
cmp
xor
pushf
scas
out
xchg
lahf
imul
pop
jp
sub
clc
and
negb
movsl
mov
iret
test
pop
inc
push
mov
sti
ret
push
add
inc
inc
pop
xor
cs
xchg
test
cwtl
adc
and
mov
push
xchg
std
mov
and
fidivrl
mov
ja
scas
cwtl
jne
xchg
enter
mov
jp
insb
lea
mov
lcall
in
rolb
xchg
pop
mov
mov
aaa
fsubrl
into
data16
dec
adc
cmp
mov
adcb
out
cmc
insl
dec
sub
dec
test
mov
sub
enter
mov
stos
repz
xor
add
xchg
call
jmp
jns
push
jl
psubsb
or
pop
push
mov
adc
push
mov
cmc
les
movsl
mov
inc
push
cmpsl
or
push
add
lods
sti
mov
jnp
mov
js
pop
lods
add
push
cltd
mull
dec
loopne
push
mov
sub
or
mov
push
mov
fldl
pushl
push
jno
inc
push
push
fwait
sub
pop
mov
hlt
ljmp
push
out
mov
popf
pop
sbb
insb
ds
js
subb
mov
lret
out
cld
jg
dec
adc
aam
xchg
pop
out
sub
pop
and
ss
inc
xor
aaa
sub
stc
sti
in
stc
nop
subl
mov
aaa
scas
push
xor
scas
mov
clc
daa
or
dec
es
lods
cli
cmp
cli
xchg
adc
push
add
inc
add
stc
test
fisubrs
jae
add
ret
addl
loope
mov
setge
mov
adc
mov
jb
movsl
or
jns
pop
or
sbb
cli
les
pusha
outsl
scas
loope
sbb
inc
imul
mov
loop
cltd
jo
inc
xlat
bound
out
cmp
push
out
jle
xlat
sub
jne
or
and
xor
in
inc
int
in
xor
mov
idivb
testb
cmp
out
mov
movsb
jg
aaa
rcl
adc
incb
add
sbb
add
sub
pop
xor
mov
neg
jg
rolb
sub
aam
xchg
cmp
xorl
sub
cltd
aad
mov
lahf
and
push
scas
inc
add
mov
push
inc
cmp
xor
mov
inc
pop
cltd
icebp
mov
pop
push
push
push
mov
mov
fwait
std
mov
or
and
fwait
bound
add
inc
repnz
adc
sbb
push
and
lods
pushf
lret
and
popf
out
gs
xor
pop
xchg
call
xchg
pop
or
lcall
mov
xchg
cmp
ficomps
jnp
pop
jmp
sbb
cld
sbb
out
or
xchg
inc
jecxz
cmc
cmp
mov
dec
mov
or
in
scas
jmp
xchg
jno
cli
sbb
mov
dec
jnp
clc
fwait
out
aaa
aam
mov
fmuls
cwtl
inc
adc
aam
sbb
in
mov
add
stc
hlt
push
inc
clc
cmp
inc
mov
in
fnstcw
ljmp
ret
add
dec
mov
js
sbb
enter
mov
leave
pop
and
mov
add
into
orb
dec
pop
sbb
test
lret
xchg
stc
std
stos
outsb
cmc
xchg
in
pop
or
add
lock
pop
mov
inc
test
inc
test
pop
add
mov
pop
inc
jg
icebp
cli
sbb
shrb
push
rcll
lods
sbb
sbb
push
lods
pop
in
pop
xchg
fsubrl
add
call
out
or
loope
lds
ret
mov
jge
fimull
cwtl
loopne
pop
mov
test
mov
xor
cmpl
inc
les
ljmp
int3
or
stc
fs
fs
aad
dec
aaa
add
lcall
dec
sub
frstor
ret
mov
call
xchg
int
sub
test
insb
push
out
shll
bndldx
pop
jns
lock
xchg
fidivrl
popa
push
sub
movsl
xor
jg
xchg
imul
add
mov
inc
mov
mov
xlat
loope
arpl
pop
maxps
movb
adc
ds
ret
push
lahf
mov
adc
xorb
cltd
lret
xchg
jmp
cmpsb
push
insl
push
mov
or
xchg
and
clc
inc
imul
jg
in
cltd
add
mov
aam
test
xlat
jae
clc
cmpsl
inc
test
je
pop
outsb
out
add
or
mov
loop
cwtl
xor
jg
sbb
inc
or
add
fidivs
xor
xchg
mov
lret
insl
loop
fdivs
inc
sbb
cmpsb
fstp
ficoml
inc
stos
jle
pop
inc
jecxz
stos
xchg
scas
cmc
mov
test
lret
sub
mov
ficompl
aam
xchg
rcl
inc
bound
fadd
pop
es
push
sbb
scas
das
pop
push
jnp
outsb
sub
jl
addr16
sbb
loope
jmp
mov
popf
lea
sub
mov
sti
push
inc
int3
xor
int
mov
xchg
push
cmp
daa
das
xlat
mov
push
je
out
leave
jmp
dec
shl
cli
or
gs
jge
mov
inc
popl
ret
aam
jmp
test
mov
imul
jg
leavew
inc
mov
icebp
repz
xchg
adc
lods
mov
xchg
xchg
addr16
mov
fdivrs
lods
mov
pop
sbb
clc
xchg
insl
push
enter
icebp
sub
xor
and
xchg
mul
or
xchg
xor
pusha
push
push
dec
frstor
cli
lods
repz
push
mov
inc
imul
inc
cmpsb
call
fstl
push
test
mov
rcl
aad
inc
test
adc
jle
lods
cmp
add
movsl
hlt
cmp
add
addr16
scas
shll
sbb
push
adc
lods
sti
outsl
cmc
enter
mov
dec
push
dec
call
jb
mov
jno
mov
add
int3
ret
out
mov
sarb
sub
ja
pusha
adc
mov
jmp
lods
jl
cmpsl
in
inc
subl
mov
and
cmp
test
inc
and
data16
aas
or
sbb
cmp
adc
mov
popa
push
stc
xchg
sub
cmp
fwait
es
mov
xor
mov
mov
aas
dec
and
inc
call
dec
inc
jecxz
fisubs
jle
lahf
cli
jns
lods
xlat
out
push
dec
lret
pop
inc
push
sub
stos
or
shlb
xlat
adc
clc
lea
mov
shl
stc
inc
sbb
hlt
inc
jne
mov
mov
xchg
imul
ficompl
add
mov
adc
inc
dec
aas
in
movsb
adc
xchg
sub
call
pop
sbb
jge
jno
inc
lcall
ja
xchg
pop
push
cmp
xchg
shrb
in
add
sub
push
into
mov
push
aam
loop
pop
adc
jb
std
icebp
cmc
fsts
mov
jg
loopne
sub
adc
loopne
xchg
sbb
or
iret
sbb
idivl
stos
or
aam
and
loop
xor
jecxz
jo
xchg
dec
pushfw
sti
cmp
out
ljmp
mov
or
sub
jns
lahf
iret
fstl
or
cli
scas
sahf
hlt
loop
imul
mov
das
inc
cmp
lea
jge
pop
loope
xor
insb
loop
test
sub
ficoms
xchg
icebp
cmp
out
gs
ja
les
out
fdivs
in
lcall
cmpsl
icebp
push
faddl
cmp
sbbl
adc
push
movsb
and
dec
out
add
loop
loop
ret
or
hlt
das
mov
cmpsb
cwtl
enter
cs
js
pusha
loopne
jns
mov
push
pusha
mov
sti
pop
fscale
jmp
out
adc
xchg
mov
lahf
flds
call
mov
ds
sahf
fsubp
xchg
push
xchg
jle
mov
sbb
cltd
stc
mov
and
rcll
ss
rorb
push
fcomps
mov
inc
call
adc
sub
pop
lods
jo
stos
sbb
stos
stos
nop
mov
adc
cmp
cmp
imulb
in
int
scas
jmp
push
loop
xchg
jbe
mov
std
mov
lods
pop
mov
rcll
mov
int3
xlat
ret
dec
sub
dec
movsl
xchg
cmp
lds
or
in
enter
or
hlt
dec
jg
testl
xchg
inc
int3
int
pop
adc
jg
cld
mov
lock
adc
or
fistl
inc
and
xor
out
xorb
arpl
jle
mov
out
cmpsl
cmpsb
pop
jnp
pop
punpckhdq
stos
mov
ja
lods
mov
sub
scas
jg
outsb
mov
in
pushf
cmp
push
stos
pusha
adc
fstl
sbb
xor
inc
push
loop
sub
xchg
test
aam
sbb
dec
sti
hlt
es
dec
add
lret
test
mov
insl
sbb
inc
std
jbe
ja
jae
mov
movsb
lret
insl
arpl
cmp
jmp
cmpsb
push
ret
mov
punpckhbw
mov
or
jne
aam
js
fldcw
pcmpgtb
call
mov
push
or
shrb
int
jnp
stos
cmc
sbb
or
repz
and
mov
out
mov
mov
fsts
xchg
inc
call
xor
sub
jl
loope
pusha
xchg
imul
add
stc
or
int3
sbb
sbb
sahf
aas
jp
xor
sarl
sbb
add
stos
insb
dec
mov
mov
pop
fists
mov
loop
jnp
sbb
mov
dec
mov
mov
push
mov
fwait
pushl
jmp
adc
in
xchg
lahf
jns
mov
shl
fwait
sbb
mov
push
test
push
iret
pop
inc
roll
adc
xorl
xchg
cmp
arpl
dec
mov
paddb
cmpsl
in
xchg
je
xor
out
test
gs
mov
push
out
xor
cmp
add
sub
mov
cmp
lret
hlt
cmpsb
lds
fsubs
mov
xchg
mov
dec
mov
xor
clc
or
cld
and
dec
dec
pusha
in
sbb
iret
push
cmp
insb
push
mov
inc
ja
xor
sarb
mov
xchg
cmp
cmp
out
loopne
cmp
incl
mull
je
repnz
mov
scas
clc
or
sub
sbb
mov
push
xchg
sti
push
loope
or
xlat
xor
cmp
out
dec
insb
inc
sbb
test
out
test
xchg
and
or
xor
push
popf
adc
fistpll
stos
xchg
loop
fnstsw
lods
xlat
leave
pop
rcll
sbb
sahf
push
push
hlt
xchg
in
bound
mov
sub
repnz
cmpsl
in
jns
lods
daa
in
dec
inc
iret
gs
pop
pop
xor
aam
into
push
aaa
inc
in
clc
or
test
in
repnz
mov
iret
add
add
test
fcomp
enter
in
jl
mov
or
mov
scas
mov
dec
out
xchg
call
gs
lea
mov
sbb
notl
sub
pop
and
scas
cltd
xchg
jecxz
sub
push
mov
cmc
cmp
mov
divl
cltd
or
jae
jg
pop
movsb
xchg
jb,pn
movsb
stos
or
das
jno
pusha
data16
jmp
sub
scas
fsubrl
mov
lret
dec
mov
cltd
mov
inc
inc
in
fstpt
cmpsb
mov
mov
jl
outsl
out
out
loop
mov
test
mov
xorl
fisubrl
in
xchg
aaa
lea
xchg
popa
and
bnd
xchg
xchg
shl
js
add
xlat
pusha
mov
cs
adc
js
sub
test
cmp
test
test
mov
negb
in
out
xor
pushf
jb
call
push
repz
jb
pushf
mov
popa
out
xchg
pop
mov
loopne
cwtl
lret
or
cmp
mov
clc
js
sub
xor
stos
addr16
xor
orb
fs
xchg
sub
leave
pushf
pop
loope
xchg
pop
sub
cmp
xor
pop
mov
int
test
ss
mov
into
adc
pop
or
sbb
mov
pop
je
icebp
pop
lea
mov
jge
pop
pusha
jno
outsb
cmp
insl
insb
repnz
mov
mov
sti
dec
and
pop
jnp
fwait
repz
push
and
testl
cmp
cmpsl
sbb
fdivr
cmp
stc
fstpt
movsb
xlat
bound
and
jmp
push
pop
and
sbb
out
lods
and
rcrl
mov
push
ret
adc
mulb
or
stos
inc
clc
xlat
repnz
sub
sarb
in
fcoml
sbb
pop
stc
sub
sbb
mov
jno
push
scas
pop
sti
leave
dec
sti
insl
addr16
mov
mov
lods
outsb
ffree
inc
jmp
mov
test
and
xor
dec
inc
loop
aam
push
xchg
loop
or
nop
rorl
test
xor
out
stc
ljmp
dec
rcr
mov
sub
popf
fsubrs
pop
sbb
sarl
test
andb
dec
js
push
or
sub
rcr
dec
lea
bound
jne
mov
and
jae
in
cmp
or
fldenv
cltd
push
lds
arpl
cld
lahf
hlt
mov
adc
mov
loope
cs
popa
and
repz
cmp
popa
adc
and
add
inc
in
sarl
cmp
ss
addl
jbe
xchg
jbe
das
in
ja
cmp
out
xchg
and
inc
mov
mov
mov
sbb
mov
push
insb
xchg
inc
stc
jae
pushl
gs
or
adc
push
jge
push
clc
pusha
test
jo
xchg
sub
ss
and
inc
mov
mov
push
rclb
mov
pop
movsl
sub
scas
xchg
jmp
out
dec
test
mov
cmc
jmp
pop
mov
pop
fwait
inc
imul
popa
out
xor
xchg
fisttpll
sbb
repz
ljmp
sahf
adcl
adc
mov
divb
lcall
pop
xorb
out
mov
adc
push
xchg
xchg
push
cmpsb
dec
dec
frstor
ret
inc
mulb
pop
outsb
popa
popa
inc
or
mov
nop
jmp
jbe
mov
fcoms
dec
adc
mov
mov
lods
fisubrl
jecxz
les
pop
push
scas
xchg
hlt
cld
mov
xchg
xor
out
jle
xorb
inc
daa
push
pop
jns
mov
test
sarl
orb
or
int
mov
pop
pop
dec
add
push
cmp
add
inc
xor
jnp
ret
fwait
dec
mov
push
pushf
call
add
mov
lods
mov
jbe
add
incl
pop
dec
js
loop
xchg
movsl
dec
fbld
movsb
push
dec
aas
cltd
sbbl
dec
out
dec
ja
aaa
pop
call
push
adc
mov
mov
rorb
mov
aam
xchg
jae
std
xchg
mov
cmc
push
pop
dec
or
ljmp
fstpl
xor
cld
mov
push
add
pop
rcr
mov
in
mov
add
sbb
icebp
cs
sbb
cmpsb
bnd
or
inc
test
iret
cli
loop
subl
pop
pop
jbe
aaa
jg
stos
je
jno
mov
inc
fdivl
cld
or
or
movups
dec
pop
cmpsl
and
jb
int3
jl
mov
lret
push
cmp
aam
call
push
das
jns
repz
pop
pop
sbb
push
int
imul
add
loop
addr16
pop
mov
xor
pcmpgtw
icebp
xor
cld
xor
movsb
mov
cmpl
cmp
aam
mov
sbb
lds
les
mov
cmpl
dec
jmp
and
fidivl
iret
enter
loopne
aaa
int
dec
scas
and
fidivl
xchg
shrb
dec
test
adc
aam
inc
js
pop
movsl
or
std
dec
xchg
and
mov
jmp
xor
popf
mov
xlat
fsub
push
and
pop
adc
inc
out
enter
cmc
add
repnz
jne
in
mov
mov
push
inc
mov
or
xchg
jecxz
jle
fdivrl
pop
mov
orb
subl
pushf
rcrb
ljmp
cmp
mov
imul
sbb
ret
push
int
flds
push
mov
mov
mov
icebp
iret
icebp
inc
sbb
stc
js
jb
in
xor
add
xor
sub
cmp
pop
fisttpll
setge
data16
add
roll
and
xor
stc
in
jge
out
out
cli
or
outsb
xlat
mov
xor
pop
xor
jge
es
push
popf
outsl
fdivrs
jmp
popf
stc
jmp
inc
aas
and
shll
push
mov
pop
jae
or
and
daa
dec
ds
add
aas
pop
dec
mov
cld
adc
mov
sbb
jns
clc
mov
pop
jmp
aas
dec
and
sti
incl
sbb
mov
icebp
jle
xchg
inc
sbb
pop
test
stos
clc
adc
shll
iret
dec
inc
es
adc
pop
aam
nop
inc
add
int3
sbb
and
in
jmp
adc
fnstenv
stos
or
enter
hlt
rcll
cld
nop
jne
lods
dec
lock
and
aam
pop
fldcw
sbb
inc
repnz
flds
push
inc
lahf
xor
pop
pop
mov
rcrb
scas
sub
adc
sarb
ja
cmp
dec
or
ja
std
popf
add
scas
fsin
orb
pop
mov
repnz
nop
and
dec
sbb
sbb
mov
add
in
je
xorb
pop
fistl
and
mov
and
div
sbb
repz
adcl
jae
dec
push
xchg
pop
and
xor
sub
iret
pop
lcall
xor
add
or
fucomip
jl
movl
xlat
fs
cmc
lods
jecxz
shrb
add
out
fcomip
push
push
in
in
pop
fists
pushf
push
fsin
or
es
jmp
mov
jns
out
push
dec
xlat
das
mov
jae
xchg
idivb
shll
jno
das
fldt
jnp
mov
pop
call
xchg
adc
pop
pop
imul
out
lret
shlb
add
aas
inc
push
lods
cld
dec
pop
jge
lcall
sbb
dec
hlt
push
dec
cmpsb
mov
outsl
dec
out
adc
insl
sub
loope
xor
or
hlt
sub
hlt
int
dec
sub
cwtl
fiadds
pusha
cmpl
xlat
or
data16
cld
sub
or
leave
sbb
xor
insl
jo
and
mov
and
and
mov
mov
clc
enter
mov
xor
leave
out
dec
addr16
adc
movsb
xchg
loopne
lret
jg
push
adc
mov
je
aam
push
mov
daa
aaa
data16
xor
mov
lods
repnz
adc
pop
dec
push
lds
lock
adc
jb
add
pop
inc
push
sbb
xchg
icebp
ljmp
pop
fstp
fimull
js
fcmovnu
inc
push
testl
test
mov
and
outsl
imul
push
cmpb
lock
mov
test
dec
hlt
push
adc
xor
imul
mov
loopne
add
inc
sub
adc
popf
xor
outsb
mov
mov
pop
sub
mov
push
lahf
fsubl
cmp
xchg
stc
adc
jl
sub
enter
dec
sahf
mov
sub
sub
aam
fcoms
cmpsb
ret
lahf
les
mov
jo
enter
adc
shll
inc
cmp
sub
into
inc
rcr
mov
sbb
pop
mov
std
push
jge
inc
add
jns
repz
lahf
scas
dec
fidivs
or
dec
mov
ret
mov
lret
inc
aaa
stos
push
pop
cmp
repnz
imul
loop
test
call
adc
or
data16
lods
jge
push
cwtl
mov
ds
aad
sbb
or
xchg
fwait
into
jp
sarb
xchg
ja
aam
cmp
fbstp
lcall
mov
in
dec
xchg
push
adc
out
in
popa
xor
cmpsb
xchg
push
ret
clc
push
pop
test
mov
lret
lock
hlt
cmp
mov
jmp
mov
fbstp
in
mov
cmp
out
and
or
ljmp
push
or
mov
je
jb
sti
pop
fdivs
pusha
push
aas
mov
fimull
das
ds
out
pusha
shll
mov
sti
hlt
std
test
adc
xchg
loope
sti
gs
cs
int3
jmp
scas
cmp
rorl
lret
lret
daa
cld
mov
cmpsb
pop
popf
popa
les
hlt
cmp
xchg
dec
dec
lock
or
push
mov
mov
sbb
out
jbe
pop
outsb
int3
fisubs
gs
mov
pop
lcall
mov
pop
xchg
out
ret
sub
fiaddl
cmpsb
repnz
test
stos
cld
xchg
aaa
inc
addb
jbe
call
or
aad
adc
push
ljmp
pop
xchg
hlt
outsb
aas
outsl
aad
inc
es
jb
jmp
cwtl
cmp
push
loopne
pusha
sbb
sbb
sbb
lahf
sub
iret
fsubl
sbb
mull
pop
outsl
inc
loop
mov
mov
fistpl
test
jecxz
xchg
scas
je
lret
lods
push
sbb
cmp
js
xchg
les
stos
xor
sbb
ja
sahf
cmp
xchg
add
adc
pop
adc
out
cs
lods
dec
sbb
in
jmp
xor
mov
cld
ror
outsl
push
int
out
cmpsl
xor
fwait
cmpsl
sbb
xor
pop
add
add
add
cli
jl
aaa
or
sti
cs
inc
fdiv
fstps
inc
std
call
pop
adc
or
sbb
mov
pcmpeqd
ljmp
xor
loopne
cwtl
rorb
rcll
aaa
mov
and
xchg
lahf
idiv
pop
scas
mov
inc
push
ret
mov
mov
arpl
cmp
pop
inc
xor
cmpsl
dec
cmp
adcb
insl
insl
mov
leave
or
js
sub
mov
lahf
sub
jg
inc
inc
pop
mov
insb
shl
inc
insb
push
mov
sti
mov
fists
pop
push
fisttps
adc
into
stc
and
and
imul
fs
push
xchg
dec
cmp
in
into
mov
xchg
mov
xchg
cmpb
push
int
or
mov
std
xlat
jecxz
lods
xchg
fildl
pop
push
xchg
xchg
mov
xchg
add
and
inc
out
xchg
loop
and
jl
xor
lret
inc
into
mov
mov
and
js
js
adc
cmp
movsl
fldenv
fisubrl
in
jns
mov
dec
iret
insl
add
sub
sarl
fisttpll
and
cmpsb
mov
pop
and
add
ficoml
aas
scas
ficompl
fadds
insl
loope
cmp
jecxz
fdivl
out
push
pushf
out
lret
scas
add
lea
popf
addr16
testl
fstl
jecxz,pn
inc
mov
xor
jg
jbe
or
test
lret
and
or
mov
dec
mov
adc
adc
cmp
mov
fldt
xor
in
scas
cli
pop
leave
xor
dec
cmp
lea
jnp
mov
cltd
roll
or
dec
pop
sbb
pop
mov
cmp
cmp
lds
cmp
adc
in
data16
cmp
stc
mov
inc
into
xor
fmul
jmp
lea
xor
test
frstor
lods
xor
mov
enter
not
jle
hlt
repz
adc
outsl
mov
dec
cmpsl
mov
imul
lret
mov
sbb
jmp
cld
fdiv
test
pop
mull
std
sbb
nop
mov
and
dec
std
stos
mov
stc
cld
sub
jmp
loop
imul
movsl
mov
cltd
cmp
jno
sbb
xchg
cmpsb
xlat
push
pop
pop
mov
mov
xor
cmp
fwait
test
fwait
std
cmp
shll
mov
rorb
push
pop
sub
repnz
je
mov
sbb
jecxz
inc
sti
xchg
mov
jnp
sub
ljmp
and
lret
mov
or
ficoml
leave
movsl
push
mov
ja
pop
jmp
lret
ss
mov
cmp
sbb
push
adc
add
mov
into
fcoml
pushf
data16
cwtl
std
lret
and
dec
pop
stc
or
movsb
icebp
ret
push
xchg
jge
xchg
fldt
mov
movsb
cltd
sbb
mov
lods
dec
push
outsl
sarl
xor
xor
mov
push
or
fwait
dec
dec
nop
dec
mov
and
aad
out
cmpsb
sbbb
test
push
cmp
mov
cwtl
or
ja
fcomps
pop
hlt
pop
ja
outsb
sub
test
addl
dec
push
xchg
inc
cmp
mov
lea
adc
test
and
adc
mov
sub
clc
or
fnsave
mov
call
xchg
dec
aam
jns
subl
cltd
les
in
into
insb
cmp
call
and
jb
cmc
mov
testb
leave
pop
sub
cltd
pop
lea
sub
push
xor
test
ror
jg,pt
lret
jl
aas
pop
mov
mov
lret
and
xchg
cmp
adc
inc
cmpb
adc
stos
and
cmpsl
sbbb
call
or
xchg
jg
sahf
push
stc
adc
cli
jg
js
or
lcall
test
pop
or
bound
sbb
aam
fstl
mov
aam
fwait
pop
adcl
cmp
and
out
sbb
mov
cmp
xchg
and
lea
mov
mov
sbbl
push
mov
addr16
mov
cmp
dec
dec
fildll
xor
inc
in
dec
mov
daa
jle
pop
sahf
sub
jnp
inc
dec
andl
fidivrl
or
dec
iret
xchg
test
push
jl
jecxz
or
into
js
inc
mov
push
test
jae
addr16
movsl
sub
mov
cli
lcall
mov
cld
inc
push
fimull
sub
lods
jnp
xchg
and
jle
mov
popa
inc
inc
and
aas
je
add
int
push
nop
push
ss
pusha
push
inc
imul
push
push
test
testl
dec
inc
repnz
pop
xor
pop
push
aaa
jo
xlat
lock
hlt
adc
mov
push
test
push
mov
imul
dec
repz
and
icebp
dec
mov
jbe
mov
adc
movb
sbb
push
repnz
push
push
mov
rol
pop
nop
je
cmp
sbb
jne
repz
mov
mov
mov
cld
mov
adc
jns
stos
mov
lea
mov
ret
mov
cmp
pop
movsb
xchg
mov
xchg
dec
push
in
lods
push
hlt
xor
sbb
xchg
mov
and
nop
imul
cmp
das
inc
pop
je
dec
xchg
xchg
jno
mov
adc
and
cmp
cmpsb
push
dec
nop
in
cld
mov
je
loope
out
jb
rcl
test
mov
test
push
push
adc
push
repnz
dec
xchg
xchg
and
data16
push
lods
sbb
gs
push
cmp
ffreep
add
and
hlt
sti
inc
insb
cmp
and
js
shlb
push
adcb
insb
jmp
xchg
test
into
enter
cmp
scas
adc
xor
pushf
pop
insl
xor
dec
aad
push
or
add
mov
or
jnp
lcall
inc
mov
push
sarb
mov
adcb
int3
pop
adc
pop
pop
sbb
push
pusha
fcomps
inc
mov
int3
in
cmp
fdiv
lds
xchg
cmp
mov
mov
cli
sub
add
dec
mov
jge
fcom
arpl
inc
mov
les
xlat
rcrb
imul
mov
push
daa
call
jae
aad
inc
daa
mov
stos
lret
add
out
pop
sub
mov
loop
sbb
outsb
or
fcom
ss
imul
sbb
mov
jb
lea
ret
mov
pop
lcall
cmpsl
xchg
ret
sbb
sub
add
or
push
jge,pt
stos
jno
mov
movsb
jb
add
ret
clc
adc
aaa
popa
pop
xchg
test
dec
pop
rcl
sbb
inc
test
out
lcall
stc
and
rcl
push
lock
movsl
mov
jp
mov
and
jns
mov
adc
rcrl
int
ljmp
call
pop
rorl
jo
sub
adc
mov
loope
fcomp
sbb
lds
push
in
lea
xor
xor
add
movsb
lock
les
inc
sbb
gs
push
xor
jg
or
fwait
aam
inc
pop
and
cs
divl
ss
fadd
cmc
push
push
push
cmp
adc
ss
notb
stos
xchg
movsb
mov
arpl
jmp
fwait
jb
sbbl
jb
je
jb
pop
mov
xchg
mov
gs
loopne
mov
jae
fsubl
sub
lahf
mov
push
mov
bound
lods
mov
sbb
dec
cld
push
pop
in
inc
insl
push
mov
loope
movb
jp
pop
xchg
mov
cmc
inc
outsb
xchg
dec
aas
xor
push
dec
mov
leave
inc
test
test
mov
loop
fisttpl
fidivl
cmp
call
mov
in
sub
or
xchg
push
xor
adc
and
lret
jmp
jno
mov
mov
rcrl
addr16
rcrb
test
mov
add
or
mov
push
popf
push
das
add
repz
hlt
sbb
mov
nop
fstpt
and
sbb
or
xchg
or
imul
xchg
out
iret
and
pusha
and
mov
sbb
outsl
mov
xor
cmp
sub
cli
xor
dec
fisubrl
cmp
xor
in
mov
cli
cwtl
incb
jns
sub
lcall
test
mov
jmp
test
mov
xor
stos
movsl
push
test
arpl
sbb
push
popf
dec
or
int3
adc
adc
xor
and
lahf
xor
insl
push
adc
fsubrs
movsl
sub
pop
sub
mov
push
ss
repnz
je
mov
pop
orl
and
fstpt
cli
or
cmp
pop
fisttpl
jno
and
ror
das
push
dec
jne
pop
push
add
mov
out
outsb
out
fnstenv
out
xorl
cmp
cmp
jb
pop
lods
ja
xchg
pushl
mov
call
je
sbbl
cs
mov
xor
jnp
mov
les
hlt
jbe
mov
mov
inc
outsl
ret
sub
loope
fmulp
in
and
adc
pop
inc
mov
push
mov
jmp
insw
mov
jmp
test
pop
cmc
ljmp
pop
shlb
in
dec
sub
rorl
pop
repnz
fbld
nop
gs
aad
mov
aad
std
mov
pop
stc
and
mov
outsb
loop
pop
xchg
fstl
std
mov
mov
aaa
add
xchg
add
mov
jp
jb
pop
jmp
outsl
scas
repnz
imul
test
in
lahf
xchg
push
sbb
frstor
cmp
lret
pop
leave
andb
sbb
xor
mov
out
frstor
mov
add
pop
ds
jnp
mov
xor
sbb
or
jl
inc
fcomi
leave
push
ficomps
xchg
leave
inc
push
hlt
jmp
mov
insb
mov
mov
cmpsb
mov
mov
lret
scas
add
fwait
xchg
movsl
imul
inc
ret
mov
pop
rorl
jno
xchg
repnz
int
dec
rorl
mov
lret
inc
in
icebp
push
cmp
add
inc
mov
movsl
fdivl
mov
lods
stc
push
mov
insb
pop
jno
mov
xlat
sti
std
pop
mov
cmp
stc
popa
repz
add
dec
sub
adc
lahf
dec
enter
sarl
or
dec
dec
sti
inc
xchg
shrb
mov
mov
lods
nopl
xchg
lret
add
imul
adc
outsb
rcrl
fcmovb
out
or
lcall
popa
mov
in
pop
int3
pusha
cmp
int3
or
cmc
dec
pop
femms
cmp
pop
incb
jns
cmp
and
fsubs
fnstenv
cmp
mov
pop
stc
xchg
pop
pop
pop
fisubrl
icebp
mov
mov
push
sbb
in
sub
bound
mov
dec
push
int
out
ficompl
adc
fwait
imull
push
inc
icebp
loop
int3
xchg
mov
mov
sbb
mov
dec
jle
pushf
out
fimull
xchg
testl
js
xchg
mov
xchg
fdivs
inc
shlb
loope
popf
or
add
sbb
mov
testl
inc
shlb
pushf
lahf
xor
sub
push
jae
addr16
push
mov
call
in
cltd
insl
js
mov
inc
inc
inc
jge
fisubrs
and
mov
inc
lock
sub
lock
pusha
add
xlat
cmp
mov
push
pop
pop
out
cli
pop
push
ret
ret
repnz
adc
aas
movsl
jo
ss
shr
push
rolb
cmp
aas
jmp
int
jne
mov
pop
xor
aaa
mov
xchg
jp
mov
dec
mov
enter
mov
aaa
popf
fildll
sbb
out
sahf
popa
and
inc
push
push
cmpsl
sbb
adc
lods
jno
cld
in
in
cmp
push
inc
lods
pop
insl
ret
into
mov
stc
inc
mov
ja
daa
arpl
lock
push
xchg
push
ljmp
loope
or
mov
push
inc
or
mov
mov
mov
pop
pop
lret
push
int
adc
adc
nop
add
push
ror
ds
lods
mov
push
scas
aas
sbb
inc
stos
leave
repz
mov
imul
fdivs
adc
dec
fidivrs
and
in
scas
shrb
pop
and
mov
fistpl
aaa
sub
stos
cmp
jl
sbb
or
sub
mov
mov
pop
fisttpl
jns
outsb
adc
ja
xchg
mov
jp
dec
pop
sub
or
sbb
dec
lahf
rol
nopl
push
sbb
lcall
ss
mov
sbb
cmpl
fwait
push
test
das
jge
int
pop
frstor
outsl
ja
iret
js
ds
inc
add
out
gs
sbb
mov
jo
jecxz
movsl
je
xchg
fisubs
testb
mov
and
int
sub
inc
jl
out
or
in
fs
mov
and
fsubl
addr16
lds
mov
xorl
aad
xchg
xor
sbb
and
pop
movsb
cwtl
inc
fldl2e
xor
pop
or
in
sub
xchg
sbb
scas
xor
addb
push
out
lods
test
mov
and
cltd
mov
test
out
mov
inc
sub
jns
fsubl
pushf
or
xor
pusha
out
in
rol
xor
jne
sbbb
es
outsl
jl
andl
jnp
pushf
ret
xchg
mov
dec
mov
int
insb
lea
stos
xchg
sbb
fcom
xor
hlt
jno
pop
pop
cmpsb
lcall
add
dec
aad
xchg
xchg
out
cmp
add
imul
mov
mov
cmp
adc
aas
mov
xchg
mov
out
pop
jmp
int
pop
push
xor
and
mov
lea
mov
mov
dec
jnp
shl
out
into
sbb
ss
shr
and
jle
jl
xchg
sbb
xchg
rolb
insb
dec
xchg
lea
and
or
push
cs
mov
movl
xchg
or
inc
mov
imul
add
sub
aaa
lahf
fwait
push
and
or
pop
inc
pushf
pusha
mov
aam
adc
cmpsb
mov
add
rcrl
std
in
xchg
cltd
movsl
out
or
jno
mov
and
divb
cmpsb
lahf
pop
or
jnp
push
fisubs
fchs
mov
aad
or
loop
inc
gs
in
pop
imul
or
call
pop
or
flds
or
enter
jbe
mov
dec
call
cmp
mov
jmp
cmpsb
push
push
cs
hlt
lods
nop
adc
dec
jb
cmp
and
dec
dec
xchg
mov
enter
mov
ret
dec
push
cs
stos
or
jne
dec
mov
pop
sbb
jae
add
mov
fisubl
out
mov
bound
sbb
out
and
push
jge
outsb
fdivr
jp
fnsave
insl
xor
push
mov
jo
int3
sub
test
cmp
adc
adc
cmp
pop
pop
lcall
and
int
mov
cmp
cmp
outsl
xor
bnd
int
loop
xchg
leave
xchg
scas
and
pop
aaa
or
das
mov
mov
cmc
repz
mov
mov
jmp
cmp
test
loopne
aam
xlat
pop
sub
shlb
es
rorl
inc
dec
cwtl
scas
or
je
sahf
aas
jb
mov
sarb
xchg
add
js
cmp
push
mov
inc
and
daa
leave
push
push
ljmp
xchg
out
mov
mov
in
outsb
xor
cli
aam
andb
pop
lds
push
mov
std
push
jmp
int
inc
movsb
jb
fldenv
xor
sbb
pop
lret
std
mov
pop
fldenv
mov
adc
lock
iret
cwtl
xchg
cmp
aaa
ds
mov
xor
ret
or
jecxz
shrl
xor
sarl
push
nop
scas
mov
clc
shlb
xor
inc
xchg
subl
stos
sbb
or
rcll
fimull
ljmp
mov
sbb
lret
xchg
push
push
stos
inc
lret
fcomi
dec
xchg
lods
arpl
mov
not
xchg
push
mov
push
lret
or
imul
jns
aam
imul
adcb
cli
or
popa
and
xchg
scas
cmpsl
loopne
inc
mov
outsl
cs
pop
test
inc
adc
fwait
shll
mov
test
out
mov
insb
jp
pop
dec
dec
sbb
mov
nop
mov
xchg
shrl
fwait
mov
outsb
gs
inc
loope
loop
les
ss
idivb
int3
loopne
pop
mov
mov
xorl
outsl
outsl
lods
pushf
jge
jbe
daa
arpl
pop
sbb
leave
outsb
jo
lcall
sub
xor
pop
and
les
cmpsb
cmp
mov
push
pop
iret
pop
lods
mov
and
add
mov
mov
clc
shrb
lods
dec
cmp
clc
std
stos
push
inc
adc
into
scas
mov
sar
ss
hlt
shll
cmpsl
fsubrs
sti
jl
out
mov
rol
pop
xchg
adc
out
sbb
jl
rorb
fnstenv
mov
jmp
stos
mov
decb
and
inc
sub
stos
es
leave
iret
pop
fwait
pop
mov
xchg
icebp
sub
cltd
sbb
sahf
pop
push
icebp
call
pop
xor
add
sbb
sbb
clc
inc
ret
push
xchg
movsb
aas
xchg
cmp
sub
jo
xor
xchg
dec
lret
add
or
test
call
cmp
mov
lea
dec
mov
div
orl
mov
adc
ds
add
and
ret
gs
scas
push
inc
movsl
push
jb
sarl
add
xor
rcll
int
pop
iret
dec
pop
cmpsl
sbb
mov
popa
push
dec
fldcw
int
mov
out
push
jle
xor
insb
mov
jbe
in
scas
and
incb
idivl
das
sbb
dec
xor
jbe
pop
sub
negl
inc
dec
and
repz
insb
jp
add
xchg
ss
lahf
sub
adc
out
in
mov
cltd
sub
jno
roll
mov
mov
xor
bound
dec
mov
movsl
imull
jp
mov
mov
stos
sub
shrb
mov
cmp
xchg
test
and
addb
xchg
pop
iret
out
cmp
lods
dec
mov
dec
pop
lcall
mov
sbb
or
xchg
sbb
std
jge
mov
xchg
loop
add
jnp
xlat
pushf
dec
orb
or
adc
push
push
push
mov
stc
sarl
inc
inc
test
ljmp
out
les
and
repz
adc
lea
sub
pusha
es
jae
or
push
adc
cli
cmp
pop
fildl
les
stos
lds
sbb
fwait
xchg
push
sub
addl
mov
loope
out
xchg
sub
movsb
daa
mov
insb
push
push
mov
insl
imul
add
xlat
ret
iret
add
data16
in
pop
lahf
mov
xchg
inc
mov
daa
dec
daa
aaa
inc
xor
push
sub
ror
int3
ljmp
inc
fldl
dec
mov
ret
aaa
dec
cmp
mov
mov
out
fs
xor
imul
popf
repnz
aam
inc
xchg
incb
les
or
xchg
xchg
les
sar
lods
mov
adc
inc
loope
mov
inc
dec
in
lock
and
dec
pop
xor
and
scas
ret
fwait
pop
push
cmp
je
stos
shrl
popa
imul
iret
js
test
pop
mov
lcall
call
mov
pop
mov
aad
ret
pop
in
jp
arpl
js
int3
sbb
outsl
mov
outsb
xor
lret
andl
icebp
hlt
dec
dec
dec
jbe
mov
push
outsb
aad
ret
fbstp
push
mov
cmp
je
and
and
icebp
xchg
mov
inc
mov
fidivrs
sub
into
cmpsb
mov
jl
push
movsl
adcb
mov
sub
push
das
int
inc
stos
mov
sahf
shrl
test
test
lds
in
rolb
pop
adc
cmpsb
iret
adc
sti
sbb
inc
push
cmp
lahf
dec
rclb
pop
push
mov
xor
add
pop
loopne
lods
push
mov
hlt
inc
push
inc
inc
push
mov
jbe
jno
lahf
dec
repz
test
cmc
and
jo
loopne
push
pop
sti
std
push
popf
mov
xchg
xchg
mov
sbb
pop
rol
test
pop
les
arpl
cmp
cmp
add
xor
fdivrl
cmp
out
add
and
rolb
lret
mulb
or
int3
fcoml
xor
test
jbe
movsb
sub
sbb
pop
jl
xor
mov
jge
das
xchg
iret
jne
xor
loopne
rcrl
cmp
pusha
xor
repz
iret
sbbl
pop
mov
add
cmp
mov
or
sahf
mov
push
cmpsl
xor
movsb
std
mov
pushf
mov
pusha
jmp
push
das
xor
movsl
scas
lret
jecxz
add
loope
lret
std
notl
sbb
cmpsb
jl
testl
inc
pop
cmp
sti
out
test
gs
add
clc
aam
pusha
fbld
or
cli
je
leave
mov
add
and
jns
int3
mov
jns
sbb
push
sbb
fcompl
push
cmp
push
jne
fdivl
mov
daa
cmp
mov
fwait
in
cmp
xor
dec
sarl
sbb
cmp
shrb
test
out
xlat
jg
fisubs
rcrb
inc
das
cld
test
push
imul
out
add
outsb
shll
scas
mov
mov
clc
icebp
inc
lds
in
dec
scas
adc
pop
fdiv
mov
sub
inc
popf
sbb
jmp
pop
lahf
jp
daa
fistl
stos
popf
push
and
xlat
repz
lock
jge
addr16
lds
loope
mov
adc
fwait
jl
jbe
fstl
enter
sahf
mov
nop
jnp
mov
cmp
mov
insb
cltd
mov
lods
inc
sti
push
cltd
jbe
or
dec
add
xor
adc
lcall
clc
rcrb
cli
ljmp
sub
mov
or
xchg
xchg
fwait
cwtl
or
dec
add
test
add
push
pusha
shll
pop
adcb
xchg
pop
idiv
jnp
out
cld
outsl
xor
das
repnz
jecxz
mov
add
out
dec
mov
std
loope
mov
inc
scas
lods
movsl
sbb
call
fisubrs
push
jecxz
add
aaa
xchg
testl
fwait
push
jnp
push
dec
or
movsl
clc
mov
aas
pusha
mov
sub
enter
test
jo
pop
add
out
jl
mov
pop
outsl
leave
shrb
mov
xor
adc
cmpsb
stos
out
test
mov
jo
test
add
jne
push
shll
and
xchg
dec
and
ret
add
addl
lret
pop
xor
pop
aam
mov
inc
pop
cmp
mulb
sti
mov
scas
fisubs
adc
insb
icebp
mov
ljmp
jg
loopne
or
adc
xor
push
sbb
cs
fdivl
fidivrl
addr16
add
push
ja
repz
movsb
loopne
sbb
and
sub
mov
cmp
jmp
jmp
inc
jnp
repz
addb
mov
cltd
cmpsl
cld
repnz
leave
adc
sbb
inc
imul
inc
xchg
push
mov
pop
stos
sbb
push
or
mov
out
inc
mov
call
push
xor
sbb
adc
out
fisttps
std
jnp
add
jne
loope
sahf
ljmp
mov
js
movsl
mov
repnz
sub
mov
mov
sbb
cld
cmpsb
add
adc
daa
test
hlt
push
mov
xor
mov
mov
and
jmp
add
fdiv
mov
loop
xchg
inc
or
mov
xlat
and
xor
inc
mov
push
outsl
test
xchg
add
xchg
fmulp
pop
cld
or
mov
fisubrs
es
iret
out
mov
cmpsb
in
push
cmp
xorl
push
push
push
adc
push
adcb
fwait
xor
ficoms
ret
mov
ss
push
out
and
and
mov
lret
push
pop
mov
push
test
cltd
pop
out
and
push
out
pushf
and
dec
or
shlb
jp
int
cmpsb
pop
in
xchg
hlt
add
pop
pop
in
pop
adc
cmpsl
ret
shll
add
sbb
adc
sub
imul
subb
xor
js
rcl
or
int
lcall
pop
test
inc
push
sub
icebp
add
xchg
outsb
cmp
push
loope
xchg
gs
aam
lcall
dec
fimull
and
xchg
adc
or
ss
pop
out
fidivl
imul
push
or
sub
dec
xor
out
lds
out
rcrb
xor
ss
lcall
in
in
stos
dec
scas
mov
loope
sahf
jmp
and
jmp
stos
popa
push
popa
mov
jmp
cmc
test
rcll
icebp
mov
enter
dec
push
and
std
mov
cmp
sahf
add
mov
xchg
mov
xor
push
out
mov
sbb
xchg
cld
sub
or
call
lcall
xor
mov
cld
xchg
faddp
cmp
inc
push
movsl
pushf
lea
mov
rcll
cs
scas
sar
mov
and
inc
icebp
daa
sub
lods
mov
pop
or
push
mov
pushf
mov
cmp
paddw
push
popa
lret
xchg
aaa
pop
add
jecxz
addb
xchg
or
in
xchg
aad
stos
aas
push
in
xor
and
scas
pop
dec
ret
arpl
movsb
adc
lret
movb
scas
addl
iret
adc
xor
cwtl
mov
xor
add
ljmp
in
addr16
inc
shl
cs
je
aad
sub
adc
dec
adc
popa
sub
xchg
mov
hlt
cltd
pop
stos
test
mov
adc
and
pop
adc
adc
mov
xchg
push
jae
push
mov
dec
pop
test
xor
bswap
aaa
or
in
repz
sbb
into
dec
test
stos
iret
arpl
adc
add
mov
fcomps
xchg
stos
xchg
adc
push
je
mov
pop
fwait
mov
rol
mov
sbb
push
adcb
and
out
lahf
insb
xchg
sub
pop
mov
fs
or
lcall
popa
mov
add
fsts
cmpsl
adc
rolb
movsl
mov
inc
test
and
fsts
inc
mov
std
pop
sahf
jl
mov
pop
iret
mov
imul
push
movsb
data16
daa
cmp
jno
and
in
out
mov
insb
adc
push
and
push
push
xor
std
mov
add
push
cmp
push
lahf
bound
das
and
dec
push
or
inc
mov
or
mov
push
xchg
add
data16
pop
add
mov
inc
mov
dec
jle
insl
pop
pop
icebp
inc
add
loop
std
mov
out
mov
lret
jmp
xchg
sbb
fs
jle
xchg
sub
mov
lds
data16
stos
pop
and
adc
mov
aaa
jb
cmpb
stos
jmp
push
rclb
test
cld
ja
cmpsb
push
xchg
pop
roll
lods
adc
mov
sub
nop
or
divb
xchg
ss
jae
add
je
pop
sub
test
sbb
inc
gs
fimuls
mov
lcall
repnz
adc
lock
pushf
and
push
mov
popf
xchg
adc
xchg
mov
inc
mov
jmp
out
inc
aam
sbb
cmp
out
insl
or
push
insb
pop
jp
pop
ds
sahf
sub
in
adc
adc
lea
or
inc
negb
adc
hlt
fistps
or
push
and
loop
pop
out
insl
mov
pusha
push
pop
jb
jo
cmpsl
jb
aam
or
aad
jp
sbb
iret
mov
xor
in
std
loop
outsl
dec
jo
insb
jmp
xchg
js
mov
sub
mov
sub
dec
push
xor
insl
pushf
mov
sbb
dec
push
andb
adc
sub
cs
push
enter
std
ja
gs
mov
inc
and
aam
jb
enter
stos
in
repnz
mov
or
jp
mov
lret
mov
wrmsr
call
or
shll
jge
mov
je
repz
test
aas
jb
cmp
lahf
cmpsl
or
mov
inc
fisttpll
shrl
je
fisubrl
pusha
mov
loop
adc
push
push
jnp
ja
test
inc
or
pushf
inc
cltd
jge
jae
push
push
ficompl
push
cli
jbe
popa
dec
xchg
test
fmuls
mov
xchg
imul
iret
cvtps2pd
ret
aad
adc
mov
pop
mov
lods
fwait
in
out
push
dec
sahf
rorb
pop
pop
dec
ja
dec
cmp
jle
and
pop
pop
adc
gs
jno
fmul
subb
je
dec
data16
cmpsb
inc
pop
dec
dec
push
call
add
push
cmc
xchg
das
ret
ret
xchg
inc
mov
and
aam
pop
shrl
push
push
xchg
adc
add
inc
push
mov
add
fmulp
push
imul
mov
imul
addr16
mov
xchg
mov
pop
cmp
jo
dec
ficomps
andb
pop
enter
insl
add
adc
out
out
jmp
ds
int
or
popa
imul
pop
imul
xchg
inc
mov
xchg
loopne
dec
mov
jb
mov
movsl
inc
rorl
sbb
push
dec
ljmp
push
filds
and
out
pop
lds
dec
jle
les
mov
jecxz
andl
cmp
stos
mov
mov
enter
mov
insb
cld
popa
notb
sbb
xor
pop
in
mov
fildll
arpl
daa
std
cltd
mov
jae
das
bound
pop
xor
repnz
movsl
sub
xchg
push
xchg
jmp
add
xlat
adc
adc
testb
dec
loope
lods
sub
dec
mov
sahf
pushf
or
jns
push
and
jns
aas
add
ret
notb
mov
xchg
sbb
or
jg
xchg
js
dec
fldt
jae
jne,pn
xchg
insl
push
shrb
fsts
adc
lods
inc
aad
lods
add
jne
mov
and
adcl
cmpsl
insb
jae
push
lcall
inc
loop
or
jmp
dec
mov
sub
sbb
and
dec
lds
push
in
adc
mov
rcr
lcall
loope
mov
imulb
xor
sbb
jp
out
xlat
mov
ja
mov
sub
push
push
jb
int
add
cmp
cmp
adc
fld
test
jl
nop
jo
out
push
loopne
xchg
add
shlb
insl
pop
mov
inc
aad
cmp
jmp
popa
mov
dec
in
mov
ficompl
inc
mov
push
or
inc
subl
xor
pop
sub
popf
es
push
jae
mov
movsb
push
cmc
inc
lea
iret
sub
inc
dec
jmp
mov
lret
mov
pop
popa
or
push
shl
sub
sbb
paddq
cmpsl
cli
mov
dec
dec
push
push
sub
repz
sbb
mov
pop
or
or
add
adc
insb
imul
add
outsl
xchg
jg
or
fs
das
mov
cmp
das
into
pop
pop
dec
sub
pop
or
nop
lods
loope
push
out
fildll
adc
cmp
mov
mov
mov
ret
cmc
addr16
into
cmp
ret
cwtl
fwait
push
and
pop
lcall
jns
cwtl
push
std
sbb
das
dec
mov
lcall
adc
add
stos
mov
lock
stos
pop
lock
insb
xor
xorl
jns
mov
xchg
in
es
into
push
xor
pop
test
aam
push
sbb
mov
xchg
call
prefetch
or
lock
ja
ljmp
out
mov
cmp
mov
je
sbb
sbb
cld
cmp
and
std
push
loopne
addl
cmp
aas
adc
sbb
mov
loopne
in
push
push
loope
insb
icebp
cmpsl
cmp
or
mov
push
mov
jb
dec
jns
jns
fdivrl
xor
test
add
subb
lret
xchg
int3
xchg
shll
enter
sub
xorl
push
ljmp
cwtl
mov
je
clc
icebp
xor
ret
je
sbb
andb
fdivp
or
jle
cmp
ret
out
scas
fsubrs
jbe
and
push
imul
lcall
into
mov
pop
push
xchg
sar
add
and
cli
aam
inc
addl
add
sti
clc
inc
xor
ja
sbb
and
adc
adc
das
adc
out
into
cmp
xor
outsl
cltd
mov
imul
adc
shr
nop
add
pop
out
and
fnstsw
jb
ds
pop
mov
data16
lcall
push
je
jae
iret
in
jb
mov
aad
mov
mov
pop
pop
ss
mov
sbb
cmp
mov
mov
in
mov
jns
movsb
js
jmp
js
jg
ljmp
stc
mov
inc
mov
into
mov
cwtl
push
pop
testb
mov
jbe
inc
in
scas
insl
fistps
dec
stc
inc
xchg
inc
jno
adc
mov
xchg
mov
jle
outsl
loopne
push
popf
push
imul
mov
mov
xchg
aam
das
lock
mov
outsb
jmp
pop
cmp
push
add
outsl
mov
sub
push
xchg
iret
sbb
mov
sbb
call
adc
push
mov
stc
js
mov
xchg
shlb
jg
xchg
pusha
add
pushf
lret
and
aaa
leave
inc
pop
mov
pop
adc
ret
in
mov
cmc
xor
and
xchg
sbb
mov
xchg
lcall
mov
mov
push
outsl
out
outsb
cmp
add
cmp
fmuls
loopne
push
lret
push
xchg
nop
add
and
jg
adc
sar
sbb
in
shll
in
iret
lods
cmpsb
and
rcll
cmp
cli
adc
and
outsb
addr16
xchg
push
lret
outsb
push
dec
call
outsl
push
mov
loope
dec
pushf
mov
iret
mov
or
dec
sti
int3
cs
cmc
push
push
movsl
sarb
sbb
dec
rclb
cwtl
arpl
pop
jbe
js
fwait
js
imul
add
mov
stos
sub
mov
scas
stos
pop
mov
in
cmp
outsb
out
push
jb
mov
xor
mov
dec
in
ss
loope
push
dec
push
or
adcb
push
test
dec
stos
or
xor
sub
jmp
inc
adc
fistps
mov
es
sub
push
clc
jb
inc
jl
mov
cwtl
loopne
mov
xor
pop
jl
dec
sub
push
cmp
cmp
push
lret
add
xchg
outsb
std
xor
divb
push
div
ret
push
cmp
jo
lock
sbb
xorl
mov
sbb
lock
imul
lds
ss
xchg
jae
lahf
add
xlat
xchg
push
pusha
int3
das
out
xor
shl
ja
loopne
xchg
es
and
enter
out
out
fistpll
lret
rcrb
or
sub
outsb
push
adc
imul
mov
fsts
lret
stos
mov
dec
test
lahf
push
int3
cwtl
scas
jp
sub
mov
sbb
sbb
inc
add
test
xor
xchg
dec
sub
jo
sub
shl
cmp
sbb
mov
into
jp
sub
mov
call
mov
nop
pop
stos
pop
mov
js
lods
mov
xlat
repnz
pop
in
loopne
incb
xor
sbb
pop
inc
jge
inc
loope
outsl
and
adc
inc
push
gs
push
xchg
dec
out
push
mov
push
mov
cmp
xchg
mov
call
sub
insl
dec
and
cltd
xor
push
mov
daa
jo
iret
es
pop
and
cwtl
inc
or
je
vaddsubps
or
hlt
popf
out
cmp
mov
sub
cli
jmp
lea
and
adc
insb
lods
dec
or
fisttpll
mov
shrb
fsts
cwtl
loopne
jl
lret
loope
fisttpl
sarl
and
mov
sub
call
cwtl
arpl
or
jno
xor
popa
mov
sub
jne
nop
sub
lcall
mov
or
fcmovnu
mov
cmp
cmp
gs
js
xchg
aad
loope
fdivrs
cmc
xchg
push
stos
lods
add
xchg
out
ljmp
fcompl
sarl
ret
call
inc
mov
dec
inc
sub
and
lret
xchg
repnz
hlt
xor
sbb
repnz
pop
out
jg
push
sbb
push
cmpsb
adc
adc
xchg
addb
aam
or
es
push
inc
nop
xor
aam
jnp
andb
inc
mov
mov
popa
add
adc
sti
repz
xchg
xor
lahf
pop
jbe
sbb
mov
aaa
xor
cmpsb
mov
test
cmpsb
jp
mov
in
lea
inc
mov
jp
xorb
add
and
sub
cmp
jnp
mov
push
fcmovb
loopne
push
sub
into
test
cwtl
in
stos
pop
mov
out
push
pop
jnp
insl
pop
jge
cmp
xchg
test
faddl
movaps
lret
mov
dec
mov
jne
xchg
std
push
jecxz
xor
fidivl
adc
xor
lods
nop
xchg
aas
sub
iret
fcoml
lret
mov
ret
scas
imul
js
adc
mov
addr16
imul
enter
push
addr16
popf
repnz
inc
jmp
fidivrs
sub
test
xor
fsubl
movsb
mov
xchg
xchg
pop
fsubs
inc
frstor
mov
push
mov
in
in
inc
jle
xchg
mov
mov
or
lret
pop
inc
push
stc
popf
pusha
nop
jle
or
shr
xor
mov
fwait
idivl
jmp
pop
int
cmp
add
and
push
nop
pop
out
lds
adc
and
xchg
les
in
mov
outsb
xorb
mov
cmpsb
mov
sbb
add
mov
out
push
movsb
lcall
cmp
sub
call
pop
arpl
pop
push
dec
test
pop
loop,pn
push
ja
movsl
fistl
call
insl
push
xchg
or
add
pusha
mov
xchg
mov
into
mov
xchg
iret
and
insl
or
cmp
xchg
sbb
mov
data16
rcll
push
push
fimull
inc
inc
pop
sub
and
adc
and
ret
dec
call
aas
int
daa
cmp
inc
ljmp
fwait
or
mov
je
scas
mov
shr
mov
stc
imul
jno
sti
adc
ror
cld
lds
test
mov
jno
scas
fadds
addr16
mov
mov
rcrl
and
push
adc
xchg
bound
xchg
sbb
cmpsb
push
js
outsb
jl
lret
jp
inc
adc
adc
mov
shll
mov
jo
pop
dec
dec
ffreep
sbb
fmuls
ljmp
pop
rorl
jbe
or
xor
xor
shlb
mov
sub
inc
or
lahf
hlt
loopne
adc
xchg
mov
sbb
lahf
movsl
jo
inc
imul
icebp
shl
cmp
cmp
mov
ds
inc
test
or
out
cmp
jne
cmpsl
jl
movsb
imul
fcmove
add
xor
push
popf
cmpsl
pop
adc
das
notl
xor
addr16
push
fdivrp
xchg
xchg
xor
ja
in
arpl
ss
jmp
sbb
sbb
repz
ja
cmpsb
cmp
std
jp
push
lds
mov
sub
nop
pop
outsb
dec
dec
sub
andl
mov
sub
xor
push
out
stc
popa
dec
call
xor
inc
or
in
xchg
adc
mov
aam
adc
adc
inc
mov
and
or
repnz
sub
subb
mov
adc
xchg
scas
or
fs
push
jl
and
repz
js
popaw
cld
inc
or
rcrl
push
mov
sub
add
inc
das
ret
movsl
loope
das
adc
iret
push
iret
push
jnp
mov
aam
aaa
es
loopne
cs
xlat
test
cld
pop
aam
iret
jecxz
adc
fld
cmp
add
add
dec
dec
cli
sub
repz
mov
data16
jb
orl
sti
jb
xchg
test
pop
add
lahf
inc
nop
cmpb
repz
lret
cltd
add
xchg
mov
in
pop
add
or
xor
mov
jne
push
aam
and
sbb
inc
pusha
gs
jecxz
jno
jnp
ds
clc
inc
sti
mov
sub
sub
xchg
scas
ret
xchg
jl
mov
pop
fmul
mov
push
adc
nop
sub
jnp
jae
mov
mov
cmpsl
jns
mov
mov
test
les
pusha
addr16
pop
xor
fcoms
adc
xchg
lods
out
xlat
cwtl
testl
and
ror
jmp
inc
lock
out
mov
das
ret
dec
jmp
sbb
dec
popa
add
xchg
adc
jb
dec
or
shll
dec
inc
dec
inc
inc
clc
int3
shlb
sbb
cmp
cmc
push
in
scas
xor
inc
mov
mov
mov
or
lock
stc
or
adc
lods
mov
jnp
pop
sbb
gs
push
inc
icebp
mov
push
adc
fstpt
out
push
push
sti
mov
cmp
cmpl
and
and
xchg
sahf
adc
mov
mov
add
fdiv
jb
fs
je
sbb
xor
add
adc
mov
leave
mov
add
fcoms
sub
pop
add
inc
lcall
inc
xor
data16
test
mov
pusha
or
mov
into
jle
shrl
inc
adc
xor
cmc
and
mov
addr16
mov
push
negb
dec
sarl
sub
xchg
data16
leave
mov
outsb
or
dec
and
sub
int3
jbe
ds
call
test
jle
jp
aas
shrl
sub
inc
xchg
mov
inc
dec
ret
sbb
lahf
aad
cmp
jge
sub
and
cmp
sbb
mov
aad
hlt
adc
or
nop
mov
pop
cmp
loope
cmp
sub
pop
test
clc
test
test
lret
xchg
jbe
cmp
push
or
jbe
dec
mov
pop
addl
cmc
xor
subl
lods
or
cmp
sti
or
push
cmp
movb
mov
mov
sub
imul
arpl
dec
daa
jp
mov
in
and
dec
push
clc
int
lods
xchg
aaa
pop
les
test
hlt
loop
inc
mov
xchg
and
int3
lcall
scas
inc
push
push
cs
sarb
add
aam
jae
lods
sub
xor
inc
push
mov
jmp
xchg
add
push
xor
xor
cli
xchg
xchg
mov
xchg
or
das
mov
nop
xor
xor
rol
xor
cmpl
mov
mov
lret
mov
testl
cmc
hlt
mov
mov
pop
sub
xchg
xor
dec
jns
jge
inc
push
add
addr16
mov
mov
cmc
daa
mov
mov
jo
pop
sbb
ret
push
pop
add
fldl
mov
ja
xlat
fisubrs
add
adc
dec
jg
repnz
xchg
inc
sbb
dec
ret
adc
mov
mov
call
mov
cmp
insl
aad
inc
lea
xchg
and
mov
lods
aam
push
jne
lds
jmp
xor
insb
int
pop
std
xchg
pop
jle
inc
xchg
notb
ljmp
pop
vcvtsi2sd
jle
lods
fistps
fcmovnb
xchg
sbb
leave
sbb
stos
in
jb
dec
adc
cmpsl
jecxz
scas
in
jno
shl
mov
push
outsl
or
mov
pop
jmp
adc
ljmp
cli
cmpsb
jb
nop
adc
add
pop
sub
mov
pop
paddb
insl
mov
test
fs
cmp
das
mov
push
imul
push
xchg
int
testl
adc
push
lock
mov
and
rorl
push
jnp
mov
cmpl
aaa
jecxz
out
dec
mov
inc
loopne
repz
js
popf
arpl
out
bnd
jbe
mov
stc
rorb
and
or
cmpb
cmpsl
jns
clc
out
push
cld
dec
cmpb
mov
sub
ja
xchg
inc
dec
iret
ds
sub
loopne
xor
out
sub
inc
les
scas
sbb
or
push
rcll
out
cwtl
pop
lods
sub
in
mov
mov
call
xor
sahf
inc
inc
sbb
in
adc
xchg
jecxz
adc
xor
mov
lea
and
push
and
fs
test
aas
lcall
mov
nop
add
xchg
inc
cmp
jle
push
in
enter
outsb
ss
adc
inc
cld
addr16
push
lods
outsb
enter
out
cmp
jne
mov
stos
jbe
push
popa
popa
sti
adc
fcmovne
mov
mov
outsb
cltd
push
adc
enter
sbb
int3
adc
xchg
cld
xchg
jp
cmp
nop
shll
gs
mov
or
mov
mov
dec
cmp
insl
ja
leave
mov
in
outsl
das
pop
pop
jnp
pop
div
out
jp
rclb
mul
jne
lea
sbb
addr16
xchg
dec
and
push
lods
std
mov
push
or
daa
out
rorb
shrl
cltd
orb
dec
push
xchg
or
jmp
push
adc
out
add
lahf
shll
inc
xchg
pusha
sbb
ja
sarb
lret
aad
xlat
push
lcall
rclb
cld
push
movsb
cmp
into
cltd
push
add
cs
mov
ss
pop
pop
inc
lds
pop
push
lea
jl
pushf
rol
sub
adc
xchg
xchg
ds
pop
imull
loopne
negl
mov
int
add
adc
xchg
loopne
mov
add
in
jae
sahf
mov
cmp
ficomps
ret
and
data16
bound
aad
mov
popf
sub
test
pop
xlat
aas
mov
div
pop
daa
ds
xchg
cmp
jbe
mov
mov
jge
pop
dec
pop
scas
push
rcr
stc
in
inc
push
xchg
jae
lock
inc
mov
cmp
inc
ja
add
jp
dec
fdivrs
mov
mov
inc
push
xchg
aaa
imul
pop
jp
mov
xchg
int
mov
mov
repnz
cmp
cmpsl
cltd
xorb
mov
xor
push
sbb
outsb
cmp
and
scas
adc
movsb
jl
sahf
push
faddl
adcb
lds
mov
dec
sub
inc
jo
leave
cli
data16
sbb
movsl
mov
mov
aad
mov
mov
cmp
out
lods
out
bound
std
or
popf
nop
ss
xchg
rcll
mov
and
xor
push
mov
pop
imul
les
jge
loopne
loopne
mov
andb
or
cmp
push
or
je
xor
cwtl
es
ret
jmp
lea
mov
xchg
clc
out
xchg
popf
or
stc
addr16
movd
xchg
sub
loopne
or
notb
sub
rcll
stos
cwtl
js
sub
cmp
mov
dec
aad
mov
mov
sbb
mov
adc
imul
cli
xchg
sub
and
mov
xchg
popa
and
por
outsb
jae
cmp
insl
pop
xor
sub
imul
dec
fstps
lods
rep
sarb
addb
adc
xor
popa
cwtl
xor
lods
jae
call
mov
ja
jne
scas
pop
mov
cmp
ret
pop
pushf
push
movsl
aaa
xchg
xor
xchg
fisubrs
leave
inc
shrl
aas
lea
popa
mov
xchg
je
test
dec
subl
rcrl
aaa
push
adc
iret
push
cmp
mov
dec
mov
ret
outsl
call
jno
rolb
fwait
xchg
ret
andb
ja
xchg
iret
cmpsb
shl
mov
popa
ja
lahf
jmp
and
les
cli
jbe
inc
pop
insl
fiadds
xor
mov
repnz
test
inc
mov
outsl
sbb
mov
outsl
pop
les
sub
sbb
arpl
mov
fwait
ds
xchg
cmp
imul
insb
mov
and
jbe
ljmp
rorb
pop
cmp
and
lret
jns
popf
test
dec
or
call
hlt
das
pop
in
sbb
mov
jecxz
pop
add
push
mov
or
hlt
push
push
cmp
push
add
ficoml
sub
jae
dec
fstpt
fucomi
rolb
add
fs
sbb
add
int
sub
xchg
mov
xchg
add
jnp
mov
inc
imull
xor
jge
sbb
xchg
mov
push
fimuls
and
int
xchg
xor
out
inc
fucomp
dec
pop
loopne
add
mov
out
enter
cmp
inc
xor
stc
xor
sub
lds
inc
dec
stc
leave
subl
or
faddl
cmc
arpl
xchg
jo
pop
sub
inc
pushf
pop
cld
adc
add
cmp
hlt
loopne
ljmp
pop
outsb
shll
pop
jecxz
dec
je
add
adc
mov
pop
add
popa
jp
dec
cwtl
pop
loop
cltd
mov
cmp
fucomip
es
mov
xchg
aaa
test
test
mov
jle
or
mulb
scas
int
mov
jno
push
adc
jecxz
inc
push
and
insl
jb
fwait
xor
cmp
movsb
and
data16
sbb
pop
sahf
push
mov
inc
mov
add
andl
jnp
dec
push
adc
jo
dec
stos
jae
mov
lahf
jo
rolb
inc
lahf
outsb
xlat
loope
cmp
scas
sarl
mov
lods
iret
mov
adc
aas
js
dec
es
mov
dec
jle
push
push
pop
int3
out
stc
xor
xchg
mov
out
mov
repnz
cli
ret
arpl
push
iret
stc
lret
xchg
jle
popa
and
arpl
mov
out
mov
inc
jns
inc
mov
adcb
icebp
xchg
repnz
xchg
push
xchg
xor
bound
push
cltd
clc
cmp
mov
push
out
sub
cmpb
sbb
cmp
pop
stos
jecxz
fsts
rclb
mov
push
mov
out
dec
cwtl
nop
fcoml
mov
sbb
ljmp
stos
addr16
add
subb
jno
out
dec
fisubs
rolb
jp
es
push
int
sbb
out
test
cmp
pop
fsub
sbb
sbbl
or
cltd
hlt
sar
or
lea
or
in
ret
xchg
lods
andb
or
sub
mov
pop
xor
add
setl
movsl
lock
pushf
xor
push
mov
adc
aaa
jb
fnstcw
mov
pop
lcall
xchg
movsb
pop
or
xchg
loope
inc
xchg
xor
fidivrl
sub
mov
lret
xchg
stc
loop
jecxz
inc
imul
arpl
aad
pop
push
sub
mov
scas
subl
dec
jo
push
in
lea
cmp
cmp
andl
dec
sbb
sahf
or
lock
subl
ficomps
mov
hlt
or
cld
out
or
stos
add
lods
out
xor
mov
test
jno
cltd
pop
repz
movsl
int3
imul
and
ss
ret
mov
pop
sti
movsb
push
shlb
out
and
into
sub
xchg
sbb
cld
jp
movsl
repz
out
notb
push
mov
aas
mov
adc
test
lcall
std
lods
jecxz
lock
enter
pop
xchg
sbb
and
pop
mov
xor
xor
loopne
and
lock
jecxz
push
mov
cmc
je
dec
push
mov
mov
cmp
or
push
xlat
sub
push
std
inc
push
xor
mov
les
ss
lret
adc
push
ds
mov
repnz
sahf
jbe
jp
pop
ds
sti
or
cmc
je
mov
sti
hlt
enter
ds
aas
lahf
pop
loopne
mov
in
popf
dec
mov
sahf
test
dec
jns
jg
add
outsb
cs
sub
jno
loopne
pop
xchg
cmp
mov
lcall
mov
jae
xor
mov
sub
movsl
lret
push
imul
adcb
stos
rcr
xchg
and
cmp
mov
push
movsb
jl
mov
mov
in
rcll
cli
loop
int
cpuid
pop
hlt
pop
xor
inc
in
lret
mulb
data16
mov
ret
out
and
andb
int
fcoml
lcall
mov
int
mov
lock
sbb
out
ss
ds
add
jne
pop
cmp
fdivrs
aad
sbb
mov
mov
into
jns
adc
or
lods
out
mov
in
stos
mov
adcl
add
mov
shll
and
addr16
xor
xchg
cli
jb
and
adc
mov
iret
je
insb
pop
dec
fidivrl
push
jg
mov
imul
mov
ret
fwait
cmc
pop
enter
scas
mov
aad
xor
mov
ret
out
insl
dec
mov
jl
cmp
popa
cmpsl
bound
cmp
out
push
push
push
int
mov
ret
pop
ret
lea
mov
jge
sbb
lods
cltd
mov
add
jne
cmp
pop
cmc
out
js
inc
lcall
mov
jge
cmpsl
lahf
dec
int
adcb
sbb
ret
or
ja
pushf
call
maxps
lods
mov
shll
out
jne
pop
add
sub
inc
popa
scas
stc
xchg
and
jg
push
pop
rorl
stos
outsl
add
add
pushl
cmp
cbtw
in
lea
mov
jg
adc
cmp
fcomp
std
sbb
and
push
push
arpl
xor
xlat
inc
ss
inc
dec
inc
mov
push
lods
shll
jecxz
cmp
pop
mov
mov
loop
and
inc
rorb
mov
mov
mov
cwtl
jns
std
inc
daa
mov
adc
popa
or
xor
nop
data16
loop
mov
jne
sub
aad
lock
inc
in
jne
push
fs
shrl
adc
xor
and
and
jp
inc
fmull
lea
pop
pop
mov
scas
xchg
mov
push
int
mov
xor
push
and
shlb
sbb
lods
inc
xchg
xor
cmp
push
in
mov
xor
inc
pop
mov
mov
fnstcw
add
inc
fmuls
int3
icebp
sub
cmp
jnp
ret
dec
adc
test
in
std
sbb
insb
add
inc
add
pushf
dec
ficomps
sub
adc
arpl
cltd
std
and
xor
mov
jno
mov
int
clc
in
bound
jae
adc
jl
lret
mov
in
movsb
call
imul
pop
mov
icebp
jmp
xorl
xchg
adc
pop
mov
lods
lock
mov
mov
xor
fnstenv
cmp
popa
scas
mov
pop
lret
xchg
adc
inc
mov
ret
out
lret
fxtract
test
int3
int
adc
xchg
imul
ret
lods
scas
cld
mov
dec
cmp
mov
mov
inc
cmc
ret
test
jns
cmp
stos
xor
push
out
mov
jno
pop
or
adc
es
push
lods
fcmovu
out
rorl
ret
daa
repnz
sbbb
cmp
clc
int
sahf
fbstp
out
test
shll
xor
mov
incl
test
push
inc
cmpsl
jecxz
int3
pop
adc
push
xchg
xor
push
loopne
mov
out
mov
inc
xchg
jne
jge,pt
pop
outsl
push
cmpsl
data16
iret
adc
xchg
shl
sahf
push
mov
jmp
inc
imul
and
stos
pop
js
scas
xorl
cs
repnz
popf
or
inc
push
pushf
mov
cmp
jp
shrl
jge
mov
mov
jno
push
sub
push
mov
push
mov
clc
js
push
adc
ficomps
testb
insl
mov
mov
sbb
and
add
fcom
pop
mov
cmp
sti
adc
dec
jne
mov
fbld
push
inc
and
imul
sub
ds
or
inc
sub
xchg
mov
xchg
out
cmp
out
jae
push
outsl
rcrb
sahf
sub
rolb
add
int3
push
cmp
fwait
lock
test
mov
fwait
mov
xor
or
mov
daa
xorl
outsb
movsb
push
jp
int
cmp
xor
xor
test
inc
mov
ss
out
aad
imul
stos
cmc
mov
xchg
add
jno
jmp
and
cmp
aas
in
inc
mov
jnp
adc
pop
mov
repz
xor
mov
cli
movsb
loopne
add
stos
loope
push
cld
inc
xchg
add
stc
xor
cmp
jge
xchg
bnd
data16
mov
aad
fistps
jnp
or
dec
dec
inc
dec
cmp
hlt
jle
push
mov
pop
sub
adc
pop
fstpl
jae
repnz
clc
inc
shll
mov
aad
daa
push
add
add
push
dec
clc
inc
aam
je
loope
test
shl
popa
mov
cmp
jnp
sbb
fnstsw
iret
arpl
or
xchg
addb
subb
scas
cwtl
dec
loopne
mov
pop
movsb
xor
mov
repnz
mov
cmp
stos
sbb
sti
xor
adc
mov
fldenv
inc
or
mov
push
or
dec
dec
daa
aaa
movsl
stos
divb
mov
stos
or
lret
insl
lds
lcall
sbb
mov
jno
xor
mov
mov
jno
in
repnz
scas
mov
xchg
cld
int
mov
push
inc
mov
xchg
fisubs
test
ja
mov
add
mov
xor
push
dec
add
fists
in
cmpsl
loop
in
loope
adc
dec
mov
test
dec
in
fiaddl
daa
mov
xor
push
dec
cmp
cmp
cmp
pop
out
repz
out
jle
sbb
stc
inc
sub
xor
and
gs
mov
xor
loope
ljmp
lret
inc
in
stc
cmpsl
or
test
xorl
movsl
leave
mov
sub
lods
daa
dec
lret
xor
out
sub
fildll
pusha
inc
push
bound
aad
lahf
sahf
cwtl
mov
pusha
stc
repnz
push
das
push
aaa
push
call
rcrl
jne
das
jbe
mov
fidivrl
sub
mov
pop
roll
fidivl
lods
aad
mov
sub
push
in
clc
js
int3
arpl
test
inc
or
inc
lret
imul
arpl
lods
pop
push
fcomp
mov
cs
or
inc
fwait
dec
sbb
pushf
ficomps
mov
mov
dec
push
test
popf
pop
icebp
stos
pop
scas
push
mov
bound
mov
test
inc
fbld
jl
repz
jns
sahf
pop
andb
fidivs
fs
mulb
cli
sti
sub
xor
pop
adc
or
and
jmp
xchg
in
mov
inc
cmpsb
mov
xorl
mov
ret
pop
pop
les
push
loopne
loop
out
daa
xchg
cld
pop
es
in
scas
xor
rclb
shrl
mov
mov
cmpsl
in
push
insl
jle
loop
outsb
loopne
mov
push
xor
mov
and
xchg
push
data16
or
call
push
xchg
movntq
rcrb
dec
dec
add
push
push
mov
ss
ljmp
mov
pop
mov
add
mov
pusha
and
cmc
test
loope
cmp
data16
and
and
cld
sbb
add
pop
dec
and
hlt
insb
xor
inc
xor
mov
clc
or
out
jbe
jnp
xchg
xchg
ss
setb
xor
jl
cmp
xor
popa
xor
add
jno
pop
mov
dec
pop
jo
das
mov
sub
and
cwtl
movd
push
add
movsb
mov
inc
jp
sbb
xchg
xchg
ja
cs
push
ds
xchg
mov
subb
cmp
fcmovnbe
push
push
aas
rcrl
lret
inc
xor
jno
jle
sub
mov
cmc
pushf
and
test
push
pop
orl
icebp
scas
js
enter
and
mov
sbb
cs
inc
push
xor
and
dec
cmp
icebp
jnp
sub
aaa
xchg
pop
push
pop
mov
adc
cwtl
xchg
adc
xchg
das
je
or
pop
push
mov
inc
nop
and
rclb
ds
dec
xchg
mov
jb
mov
cmc
aas
and
cmpb
adc
add
sbb
jns
filds
int3
ljmp
repz
mov
in
jl
mov
imul
sbb
sbbl
loope
shlb
add
pop
sar
aad
pop
and
jno
mov
cmp
inc
jg
popa
ret
dec
out
push
or
arpl
movsb
inc
jl
jno
adc
inc
sti
out
data16
xchg
xor
dec
mov
aam
adc
pop
stos
pop
pop
add
and
clc
repz
mov
mov
push
cltd
popf
and
adc
cltd
jnp
out
int
notb
sub
clc
push
inc
sbb
mov
and
pop
ds
dec
stos
xchg
jecxz
popa
cli
xchg
and
mov
aaa
jp
adc
shlb
sub
inc
cltd
das
leave
ds
jecxz
in
and
sub
jmp
es
jp
cmpsb
scas
in
rcr
es
jge
scas
xchg
cltd
inc
shl
sub
aaa
mov
out
push
data16
dec
sbb
jne
out
lock
jmp
dec
mov
in
cld
add
cmpsl
mov
pop
jg
fiadds
fwait
js
call
fwait
pop
xchg
inc
inc
adc
push
test
mov
adc
out
or
lock
and
loope
aaa
repnz
aas
mov
bound
pop
aam
cmpsb
arpl
gs
sbb
dec
jnp
push
jo
push
std
mov
mov
xor
icebp
fcomps
push
sarl
lret
cmp
mov
add
push
jg
in
cli
adc
cwtl
mov
or
sbb
ret
loopne
push
imul
jb
or
mov
or
inc
iret
js
nop
call
jp
inc
inc
jp
ja
mov
jb
inc
je
test
add
push
pushf
scas
aad
xchg
inc
in
fistl
dec
sub
xchg
or
repnz
roll
dec
insl
movsb
cmp
mov
sbb
daa
inc
xor
add
inc
and
xchg
or
sub
adc
idivb
push
cmp
mov
mov
pushf
adc
mov
mov
imul
and
xchg
add
fildl
imul
fldenv
push
dec
mov
push
jo
clc
cli
jl
ficoms
and
hlt
jbe
fisttpl
ret
adc
vpsubd
sub
jle
xchg
xor
cmc
jno
movsl
mov
add
andl
ljmp
inc
rcrl
aam
shl
gs
mov
fbstp
xchg
xlat
aad
xchg
xlat
xchg
lret
pop
dec
pop
add
mov
pusha
out
nop
mov
loope
sub
daa
addr16
xor
scas
mov
daa
or
sahf
enter
cltd
js
shlb
clc
std
insb
jecxz
mov
and
ror
inc
inc
movsl
push
call
xchg
call
sbb
xor
notl
imul
dec
add
mov
and
mov
ss
in
fnstcw
dec
or
addr16
cli
adcl
pop
pop
mov
push
les
pop
mov
data16
push
mov
xchg
or
xor
jle
test
xchg
or
xchg
outsl
and
movsl
push
xor
mov
jecxz
loopne
shrb
enter
gs
jg
xor
mov
scas
jg
cltd
cmp
and
negb
dec
scas
jo
push
add
mov
cmp
sbb
lcall
mov
mov
flds
and
push
jo
jb
out
sub
mov
test
dec
push
sub
and
jecxz
jnp
sbb
adc
dec
icebp
cltd
jno
add
movsb
stos
lahf
stos
push
fcoms
mov
orl
pop
fnstenv
int3
mov
stc
imul
jge
aad
push
out
jns
adcb
int3
jno
in
in
cmp
pushf
sti
mov
aas
mov
mov
iret
insl
xor
cmp
sub
push
xchg
cmp
jno
cltd
cld
pop
sub
data16
mov
inc
cmp
jnp
pop
fcomip
and
mov
xor
pop
xchg
icebp
aas
sbb
xchg
test
je
xor
push
or
fs
cmpl
pop
int3
fisubs
es
add
decb
out
mov
stc
scas
dec
aas
mov
imul
cmpsl
movsl
jg
stos
jmp
sub
sbb
stos
mov
push
cmp
out
leave
jnp
out
fdivrl
in
test
xchg
push
push
sbb
cmp
dec
jno
or
shrb
and
mov
cmp
repz
lods
aam
xor
jno
lea
mov
movsb
push
mov
fwait
aaa
movsl
fiadds
les
mov
sbb
add
pop
testb
lods
xor
add
jecxz
jnp
inc
jae
mov
and
pop
jecxz
cwtl
outsb
imul
addb
add
xchg
mov
mov
in
test
rorl
inc
inc
sbb
push
mov
xchg
cwtl
push
mov
mov
pand
ficompl
mov
iret
ljmp
inc
mov
or
pop
ss
jnp
std
inc
mov
sub
push
aam
push
aas
push
ret
insb
sarl
sbb
xor
xor
push
lea
pushf
inc
fucomi
dec
sub
sub
or
je
jecxz
mov
fcompl
add
mov
push
js
mov
mov
dec
dec
pop
stc
notb
dec
scas
dec
lcall
pop
adc
loope
push
mov
xor
pushf
adc
call
cmpsl
fimuls
dec
cmp
fistl
fsubs
stos
and
and
mov
pop
cmpsl
mov
pop
inc
out
ljmp
add
cmpsb
cmp
movsl
jnp
lea
sub
xor
inc
mov
and
movsl
or
xor
cmp
add
les
sti
fldcw
and
jecxz
hlt
lock
movsb
out
std
in
movsl
adc
in
xorl
mov
dec
out
shll
pop
shlb
inc
mov
cmp
dec
fbld
inc
mov
ss
push
and
lock
cmpsl
into
sub
mov
test
add
fwait
js
hlt
dec
adc
cmp
xor
push
and
loopne
imul
popa
jp
pop
stos
es
push
lock
lret
pop
xor
xchg
lea
sbb
mov
mov
loop
mov
adc
inc
adc
jmp
inc
sahf
andb
psubd
inc
jp
mov
lea
rep
cli
push
mov
pushf
or
int
cmpsl
sbb
add
add
dec
mov
lds
mov
add
jle
outsl
int3
cmp
call
xchg
pop
outsb
xor
div
out
dec
daa
fdivrs
dec
cwtl
dec
sub
lods
inc
cmpsl
lods
xchg
les
dec
push
insb
shrb
jns
test
inc
fisttps
xor
shll
or
ret
pop
jns
int
adc
stos
pop
mov
jle
pop
hlt
adc
push
popf
push
adc
push
inc
sub
xor
orl
inc
inc
stos
and
aam
mov
rol
ret
adc
xchg
cmp
scas
dec
pop
jecxz
add
mov
addr16
add
adc
cmp
in
jp
xchg
xchg
jmp
and
scas
arpl
xchg
scas
push
in
xor
mov
mov
and
inc
movsb
and
push
cmp
cmp
mov
pop
xchg
les
pop
xor
fnclex
ljmp
addr16
jns
dec
fmull
das
lods
push
stc
lahf
movsb
mov
mov
shll
cmpsb
xlat
hlt
mov
jle
or
pushf
pop
add
ja
rclb
aam
or
imul
pop
mov
out
mov
inc
lret
jo
push
in
in
fisubrl
adcl
mov
or
push
sti
or
jg
jno
fdivrs
std
in
subb
jp
negb
jle
add
dec
xchg
test
add
gs
inc
xchg
sub
shl
fisttps
jl
pop
mov
aaa
jge
or
lret
stc
xor
sub
xchg
mov
xchg
ret
push
enter
add
ficomps
pop
add
cltd
adc
shrb
jg
test
lds
jmp
shlb
cmp
pushl
and
rorb
dec
ljmp
and
dec
cmp
xor
ljmp
push
cmpsb
push
loop
dec
lds
push
roll
mov
mov
lret
nop
aad
movsl
sub
sub
clc
or
call
sub
movsl
and
xor
popa
aaa
pop
bound
cmp
mov
gs
mov
or
adc
pop
push
push
cltd
shrb
pop
pop
xor
fwait
mov
inc
dec
loopne
lahf
pop
clc
test
in
clc
adc
mov
cs
stc
lods
in
clc
add
mov
pop
inc
mov
xchg
aam
cs
fs
daa
pusha
lods
jle
outsl
cmpsl
lcall
rorl
sarl
push
int3
mov
inc
jns
ds
jae
adc
in
jmp
sbb
or
ret
lea
jb
and
inc
dec
push
icebp
mov
pop
sub
stos
push
stos
in
cmc
and
lcall
cmp
or
xor
lcall
sti
mov
sub
push
aad
push
mov
lds
cmp
cmp
enter
push
sub
xor
mov
mov
jae
out
std
adc
jne
outsb
aas
inc
inc
pop
js
add
inc
xchg
mov
ja
iret
mov
push
fidivs
fldl
mov
dec
in
aad
xor
outsb
sbb
fucomp
inc
cmp
dec
cmp
stos
movsl
sahf
stos
dec
loope
pop
rclb
insl
xchg
jo
pop
inc
mov
jmp
scas
call
push
fdivrp
and
stos
jmp
sub
notb
sub
popf
les
ljmp
test
dec
xchg
jp
test
pop
sub
cmp
outsb
push
pop
stc
sub
ret
dec
xlat
mov
push
int
lods
leave
loopne
pop
dec
adc
insl
cld
lds
push
fildll
mov
rcrl
lcall
pop
xchg
cltd
add
call
ss
cmp
adc
pop
add
jbe
xchg
cmc
inc
cmpb
pop
into
and
test
mov
bound
mov
jo
loopne
ficomps
lock
rcll
cmpsb
loop
xlat
mov
mov
jp
data16
cmp
in
mov
popa
mov
and
cmp
sub
jmp
lock
es
cmc
lods
out
xchg
insb
xor
inc
fldt
pushf
jge
aaa
sbb
inc
repz
lea
imul
cmpsl
test
jno
and
fidivs
add
imul
jno
pop
lret
cmp
and
dec
xor
push
mov
jb
push
lret
lods
cmpsb
mov
sub
fidivl
dec
mov
int
xor
and
add
sub
flds
or
pop
cmpsl
test
loop
sub
aaa
fsubl
clc
repz
mov
jno
and
add
sbbw
js
inc
pop
pop
mov
adc
jbe
cmp
int3
out
jmp
arpl
mov
hlt
jne
pop
cmpsb
pusha
ss
mov
jb
fdivp
push
jae
jle
leave
enter
movsl
mov
lds
push
lods
lret
bound
arpl
icebp
insl
arpl
rcrl
or
subb
daa
dec
stos
or
js
gs
inc
ljmp
jl
shlb
push
mov
fs
repnz
xchg
xlat
jne
cmp
dec
lods
push
aas
in
adc
pop
std
hlt
scas
imul
movsb
shlb
push
lret
mov
pop
jmp
aaa
pop
xchg
mov
inc
adc
insl
adc
inc
aam
and
stc
enter
enter
mov
popl
push
jb
push
xor
xchg
jge
mov
push
test
pusha
inc
xchg
sub
push
push
loope
push
pop
mov
ss
jmp
sarl
jo
or
call
jns
or
pop
add
ret
pop
mov
push
xchg
cmp
lahf
mov
push
jle
rorl
ljmp
cmp
aaa
sub
loope
xor
mov
lods
or
leave
and
mov
pushf
fwait
and
flds
mov
and
xchg
dec
insb
push
inc
cmp
into
lods
fists
test
adc
aam
pop
xchg
in
inc
insl
mov
xor
das
sti
jb
repnz
lock
push
loopne
xlat
scas
std
cmp
mov
pushf
cmp
dec
sbb
pop
add
aad
xor
and
mov
cmpsl
pop
jmp
mov
cs
pop
push
dec
nop
xor
es
movsb
dec
sub
jmp
sbb
mov
test
loopne
inc
imul
pop
mov
stos
xchg
mov
lods
imul
ffreep
mov
lea
aad
aam
outsl
push
jae
test
in
cmp
outsl
shl
rclb
in
adc
fldt
js
jae
repnz
xchg
mov
mov
push
xchg
movl
rclb
add
dec
sub
mov
sub
adc
repz
xchg
clc
in
loope
ds
xchg
in
sbb
loop
out
leave
je
out
xor
arpl
adc
mov
imul
ja
movsb
ljmp
test
inc
sbb
test
inc
xchg
fdiv
push
inc
repnz
mov
inc
cmp
rolb
lds
jo
sahf
fcomp
fdivrs
xchg
jecxz
sbb
fiadds
or
cld
shll
pushf
xchg
pop
leave
fstl
cltd
fstpl
test
cwtl
call
jp
sbb
cmp
or
mov
ljmp
cmp
scas
sbb
imul
je
sub
ljmp
dec
cltd
fmull
mov
xor
js
pop
dec
cmp
xchg
mov
push
out
shlb
leave
xchg
mov
sbb
push
div
pop
out
cmp
das
cli
add
xor
rcrb
xor
lret
loope
add
pushl
adc
pusha
scas
push
add
adc
lret
ljmp
mov
stc
popf
xchg
push
sarl
cmpsl
jmp
jp
add
jnp
imul
sti
js
add
in
xor
mov
lcall
int3
add
stos
push
int
xchg
cld
or
jge
mov
rorl
dec
sahf
sub
sub
fildll
pop
outsb
push
mov
daa
out
mov
outsl
orb
sub
push
and
or
inc
dec
sahf
xor
mov
clc
sub
lret
ret
adc
xchg
pop
lock
push
lret
outsl
enter
test
mov
xor
imul
stos
adc
sbb
ss
dec
push
push
lret
repnz
loopne
scas
lock
sbb
cmp
or
jb
mov
sarl
or
icebp
push
inc
and
adc
fldenv
inc
mov
mov
pop
inc
xchg
outsb
iret
dec
jecxz
cmp
cld
mov
jge
xchg
std
xor
je
xor
cmp
and
in
push
jbe
mov
shr
cmp
ja
outsl
pop
push
or
cmpsl
out
rcrb
adc
movsb
add
or
test
adc
pop
es
xchg
stos
mov
or
sahf
enter
xchg
and
ror
and
mov
or
sbb
fbld
jae
outsl
cmp
rorb
arpl
push
xchg
cmp
jb
roll
stc
lods
jae
jo
mov
jnp
dec
das
pop
fmuls
test
out
lods
rol
gs
xchg
outsb
in
cmp
dec
rolb
jns
lods
in
mov
xchg
push
jae
ss
xchg
outsb
scas
or
sbb
sub
dec
stos
xor
insl
jp
repnz
ret
inc
loopne
xchg
cmp
dec
rcpps
scas
inc
adc
dec
jo
or
add
or
insl
mov
inc
fwait
xlat
dec
mov
pop
roll
mov
inc
insl
lea
fisubrl
cmc
jb
push
xchg
sbb
inc
outsb
push
cmp
pop
das
cmp
das
lods
mov
inc
test
addr16
aad
dec
fcmovnu
nop
test
xor
in
mov
hlt
ror
bound
jp
sbb
imul
mov
imul
push
lea
mov
popa
lods
cmp
jae
rcll
adc
rolb
iret
sub
sub
jmp
arpl
pop
xchg
js
pusha
fs
shr
outsl
daa
jbe
sbb
shrl
shr
in
loop
sti
dec
in
jb
cmpsl
daa
mov
adc
mov
xor
shll
mov
js
xchg
out
lret
jmp
lcall
push
mov
pop
jl
aaa
push
sub
lea
cld
movsb
lds
cmp
pcmpeqw
lcall
addr16
mov
inc
nop
mov
push
xor
test
sbb
pop
mov
and
das
aam
mov
jmp
push
add
mov
cmp
mov
or
faddp
mov
lods
repnz
lds
shll
mov
inc
sub
je
xor
pop
sub
sbb
aas
lcall
gs
lret
call
fisttps
and
cld
mov
cmpsl
pop
scas
inc
dec
dec
sub
scas
dec
lahf
lods
pusha
mov
pop
adcb
jmp
adc
lods
push
and
scas
mov
and
iret
pushf
jae
ret
aaa
or
mov
mov
xor
movsl
sbb
push
jmp
jne
mov
out
out
iret
sbb
fdiv
ficoml
inc
xor
out
or
out
cmc
mov
sub
aad
test
xchg
xchg
add
xor
jb
sub
mov
inc
lds
push
add
loope
clc
xchg
aad
push
sbb
movsl
add
data16
cmp
imul
sarb
fidivs
mov
mov
data16
insl
cmp
mov
pop
aas
mov
jp
mov
mov
push
icebp
xor
sbb
pop
incb
mov
add
pop
inc
in
pop
repz
aas
imul
adc
outsl
pop
fldenv
test
test
shlb
insb
dec
cmp
sbb
xchg
jl
jno
add
imul
test
or
out
push
iret
scas
cmp
out
test
dec
icebp
add
aad
sti
pop
xchg
xor
sub
add
inc
sub
andl
insl
adc
or
in
jbe
cs
and
in
jo
push
fsts
push
pusha
data16
outsb
xchg
sub
cmp
and
mov
cmp
jbe
pop
pop
add
cmp
shl
popa
out
imul
sbb
flds
divl
inc
ja
dec
jbe
xor
imul
out
jp
scas
roll
inc
xchg
inc
std
sub
ljmp
mov
mov
jb
negb
sub
out
repnz
add
dec
push
mov
and
bound
call
xchg
cmp
fwait
pop
mov
mov
repnz
ret
nop
push
cmp
mov
aad
aas
jae
mov
xchg
shlb
pop
or
push
movsl
xchg
inc
xchg
shl
mov
fidivrs
cltd
pusha
lret
popf
test
imul
cwtl
push
xor
mov
insl
and
ja
scas
jp
or
xchg
pop
mov
outsl
ja
rsm
arpl
stc
mov
adc
sbb
pop
adcl
shlb
mov
sbb
sub
or
lret
add
and
xor
insl
inc
std
out
and
push
mov
test
aas
or
pop
scas
enter
xchg
stc
and
xor
shrl
popa
out
mov
icebp
cs
and
pushf
dec
mov
sub
popf
mov
rorw
cmp
mov
jmp
jg
or
scas
inc
in
push
mov
cmp
xchg
adc
notb
cli
xchg
xchg
sbb
shll
outsb
lcall
enter
mov
push
ret
imul
cmpsb
gs
add
dec
jne
loop
jge
mov
leave
hlt
and
aad
xor
xchg
jp
test
jmp
sbb
jle
cmp
sub
add
push
sbb
andb
xchg
jne
das
sub
push
movsl
jno
out
cmpsl
xor
xchg
fistpl
push
or
and
xor
ds
pusha
push
pop
adc
outsb
xchg
movsl
jmp
jmp
je
mov
sbbb
jmp
jg
mov
pop
xchg
ds
clc
sbb
push
ljmp
test
aad
insl
push
xlat
mov
and
shll
ret
faddl
sbb
jg
popa
cmp
movsb
mov
mov
ret
and
pop
jmp
and
pop
in
push
cmp
loopne
mov
test
cmpsb
icebp
cmp
jmp
push
mov
icebp
ret
pop
and
in
jnp
pop
gs
in
in
imul
mov
in
mul
jb
xlat
mov
mov
pop
lcall
jge
popa
xor
movsl
cmp
sahf
mov
fbstp
mov
sub
cmp
mov
jno
lahf
push
mov
jnp
fwait
movsl
cli
pop
clc
popf
stos
push
xchg
movsb
sbbb
cmp
push
data16
jne
rcrl
cmp
jecxz
or
mov
js
std
fistps
mov
nopl
or
repz
sbb
outsl
lret
insl
jno
lcall
out
xor
jno
mov
push
mov
ljmp
std
jg
fmulp
pop
shlb
sbb
jb
repnz
idivb
push
lret
pop
out
cmp
cmp
mov
mov
xor
push
sub
test
out
pop
dec
icebp
cli
dec
aad
mov
fildll
test
idivb
jp
mov
cmp
cmp
sahf
lret
push
adc
in
cltd
movsl
fisubrs
movl
pop
cld
psubw
jns,pt
add
cmp
xor
lret
out
pop
lods
mov
add
pop
and
stos
xor
and
cmpsl
loopne
fstpt
mov
pop
sbb
seta
jle
imul
repz
outsb
mov
pop
mov
jno
lret
fcmovu
test
lods
jns
push
int
jmp
xor
xchg
mov
cwtl
xor
popa
fdivrl
mov
push
notb
loope
jg
loope
jnp
rolb
or
lret
push
jnp
lods
jle
insb
mov
test
int3
add
dec
int
xor
fadds
clc
scas
std
lds
cli
lcall
inc
push
xchg
adc
adc
push
mov
gs
movb
sbb
cmpsb
cmpsb
out
push
popf
loopne
in
rcrb
cmp
sub
pop
out
push
inc
cmpl
push
testb
out
int3
pop
mov
inc
jge
xor
mov
bound
pop
in
sbb
jmp
je
insl
mov
push
jge
xchg
out
fucom
js
adc
inc
shl
xchg
sub
push
repz
xchg
add
cmp
mov
lret
sbb
dec
cmp
cli
mov
ror
pop
jge
push
push
in
das
getsec
cltd
pop
dec
sbb
inc
insb
call
pop
jbe
sub
rcrb
sbb
addl
xchg
fmuls
add
push
jno
xchg
push
mov
sbb
push
ret
xor
es
stc
push
add
bound
rcrl
push
pop
fcmovnb
cmp
movsb
mov
out
push
jecxz
dec
xchg
inc
mov
or
cmpsl
rorl
adc
cwtl
popa
shll
sbb
or
test
test
mov
sub
sahf
pop
cmc
adc
les
mov
imul
sbb
dec
test
xchg
aam
pop
xchg
push
mov
inc
xchg
and
shll
stc
mov
mov
out
sbb
aam
mov
repz
pop
mov
int3
xor
jo
loopne
inc
divb
cmpsb
jecxz
ss
divl
imul
add
push
dec
xor
imul
fsts
jne
je
dec
pop
xor
add
fistpl
ss
cli
ja
lea
xor
adcb
xor
pop
dec
lock
sti
push
ss
push
adc
push
add
inc
in
arpl
mov
adc
cmp
dec
clc
sahf
fcomp
ss
sbbb
adc
inc
das
dec
sbb
jo
xchg
js
clc
mov
pop
scas
dec
jb
push
jb
in
and
sub
or
jg
hlt
popa
pop
lods
mov
scas
aaa
fs
inc
test
cs
int
cmp
or
in
cs
push
mov
cld
shrl
lcall
add
xchg
cwtl
ret
add
add
pop
lods
into
adc
fmull
jg
sub
dec
jne
in
sbb
or
push
mov
rcr
shll
jb
stos
cmp
sub
cs
mov
sub
push
cmpsb
push
dec
lahf
adc
jbe
inc
pop
popf
add
ffree
hlt
sub
add
js
scas
cmp
pop
inc
inc
enter
stos
xchg
mov
imul
orl
push
cmp
pop
in
sub
pop
add
xor
test
cmp
sbb
mov
push
lahf
hlt
leave
ljmp
push
jl
imull
push
leave
xor
aas
add
xchg
leave
dec
subl
stc
xchg
fcoml
and
mov
sub
mov
dec
or
test
mov
enter
mov
movsb
fwait
out
jne
test
adc
cld
andl
les
add
test
inc
xor
cmp
mov
sbb
ljmp
hlt
xor
jle
push
mov
rorl
push
iret
out
mov
mov
ds
sbb
aaa
mov
repz
and
push
inc
out
push
adc
cmp
mov
addb
jno
dec
jle
jns
mov
xor
leave
xor
je
jmp
xchg
inc
mov
dec
rcll
sti
into
orb
pop
cmp
popa
sti
inc
dec
dec
lret
lret
mov
pop
stos
xor
jbe
mov
add
in
jge
add
dec
sub
xchg
xchg
xchg
push
xchg
or
push
rorb
cmpsl
dec
or
fsubrl
aad
out
out
push
sbb
bound
cld
push
test
mov
arpl
icebp
dec
int
adc
inc
sub
xor
shrb
enter
lcall
movsl
xor
cmpsb
sti
insb
ret
dec
cmc
movsl
gs
test
test
call
xchg
pop
cmp
and
fiadds
cmp
clc
sub
and
xor
inc
sarb
add
orb
xor
adc
inc
cltd
fnstcw
mulb
out
sbb
test
push
pop
push
lret
sub
push
sub
aas
and
scas
or
adc
mov
iret
fadds
mov
shr
and
push
mov
cltd
cmp
call
out
cs
lea
enter
push
cmp
or
pop
into
das
or
xor
fmul
ss
in
cmpsb
mov
push
cwtl
sub
push
mov
ret
addb
xchg
scas
sub
mov
imul
pop
push
leave
inc
out
call
jbe
hlt
adc
xchg
xchg
movsl
insb
adc
jl
or
out
mov
or
jecxz
lcall
lret
cwtl
or
out
mov
inc
jl
clc
xchg
inc
dec
pop
les
mov
ret
out
out
or
push
dec
and
fists
push
push
pop
xchg
loope
xor
push
iret
push
in
mov
push
mov
push
addr16
xchg
out
roll
cmp
loope
ret
cltd
mov
jecxz
loope
xchg
dec
or
push
or
xchg
mov
repz
pushf
pop
leave
xchg
xor
movsl
lcall
scas
and
pushf
mov
jne
sti
es
inc
push
fsub
cmpb
adc
nopl
mov
mov
int3
insl
dec
enter
js
insl
ret
icebp
lds
test
mov
daa
pop
and
test
ror
push
test
outsb
xor
sbb
push
xor
mov
push
mov
stos
mov
jne
sbb
rorb
push
setns
add
or
in
cmp
push
mov
cmpsl
pop
push
jo
xlat
out
inc
sti
xor
outsb
es
fadds
add
and
loop
and
and
loopne
xchg
xor
and
sar
sbb
pop
mov
aas
cmpb
xchg
add
push
das
es
push
mov
pop
sub
out
int3
adc
push
clc
aaa
shlb
mov
mov
pop
int3
outsb
push
inc
lock
xor
jns
lret
xlat
bound
je
and
inc
push
mov
mov
mov
pop
rcr
arpl
mov
ror
popa
mov
push
or
jno
aam
lods
popf
in
aaa
loope
push
rcr
clc
stc
rcrl
ret
test
push
outsb
and
push
jecxz
mov
shlb
rcrl
jnp
loop
mov
mov
bound
sarb
iret
pop
int3
mov
mov
mov
in
xchg
mov
call
or
cmpsl
xorb
jl
ja
test
repnz
cmp
cmp
mov
adc
hlt
fs
pop
hlt
and
test
jbe
mov
pop
push
js
ljmp
inc
negb
sub
test
notb
lahf
pop
cmp
ss
dec
lds
jg
ja
pop
inc
xchg
push
push
sahf
sub
aas
jnp
push
xlat
or
pop
xor
mov
out
es
insl
movsb
dec
in
xchg
xchg
repnz
sub
adc
sti
adc
push
dec
add
insl
stos
mov
stc
xchg
repnz
jo
fs
jp
lret
iret
mov
jnp
jl
out
dec
sti
xchg
daa
push
gs
movsl
mov
xchg
dec
jecxz
bnd
fwait
xchg
jp
mov
sbb
sub
into
sti
add
dec
pop
jbe
cmp
mov
loope
in
das
add
cmpl
cwtl
sub
stos
cmp
cld
push
mov
mov
push
cli
mov
jne
xor
dec
push
push
mov
scas
jne
jnp
sbb
dec
cmp
adcb
inc
or
lret
rolb
xchg
xor
inc
aas
ret
shll
xchg
mov
or
scas
sbb
inc
push
lods
push
je
push
lahf
fnsave
sbb
hlt
mov
dec
repz
mov
xchg
dec
pop
leave
mov
cli
mov
adc
xchg
outsl
xor
push
add
jne
arpl
movsb
mov
aaa
xor
popa
daa
stc
xchg
mov
add
push
out
cmp
bound
or
mov
push
jecxz
pop
mov
jle
mov
fildll
or
pop
jmp
imul
adc
loop
xchg
mov
jecxz
inc
xchg
cmpl
std
pop
mov
mov
cmp
cmp
aas
jno
sub
push
fildll
cmc
outsb
stc
ret
leave
pushf
cld
jo
dec
jle
mov
mov
rcll
ljmp
push
xor
stos
or
loopne
divl
and
add
adc
cmc
test
je
fcomi
mov
and
dec
testb
jmp
insb
jmp
xchg
addb
xchg
push
ja
lahf
call
sbb
data16
pop
cld
loopne
outsb
adcb
mov
test
into
stos
inc
and
jge
rol
jns
in
pop
xchg
jmp
dec
test
push
in
ss
mov
rcrb
mov
outsl
xchg
jne
jb
or
sbb
lods
add
pop
loope
in
inc
and
or
xchg
push
cli
enter
loopne
movsb
inc
add
lods
shrb
mov
insb
push
and
and
nop
cmp
xchg
test
ret
leave
mov
das
les
mov
shlb
js
xchg
test
insl
imul
cwtl
lahf
xor
xchg
mov
mov
cmpsb
adc
push
lcall
imul
mov
bound
xor
push
ret
cs
addr16
mov
or
lahf
adc
or
jne
in
clc
xor
cmp
outsb
enter
xchg
std
dec
pusha
in
pop
les
ds
cmp
jo
push
cld
fwait
movsb
mov
or
push
cli
std
sbb
xorl
out
or
sub
push
push
lea
mov
pop
icebp
out
cs
fs
inc
push
sub
rclb
std
xchg
cli
rcl
or
push
fwait
lahf
dec
jecxz
jo
inc
mov
adc
dec
loopne
inc
insl
imul
jl
addb
sub
jmp
xor
mov
pop
in
pop
mov
data16
mov
out
cmp
sbb
repnz
repz
clc
test
rclb
xor
fwait
push
filds
stos
jg
int
mov
filds
mov
adc
std
in
mov
cli
imul
add
mov
sub
cmp
js
dec
add
cmp
dec
lcall
add
mov
xchg
or
xlat
test
ja
inc
pop
jne
mov
nop
sbb
sub
push
nop
dec
fisttpl
inc
jg
mov
sub
pop
xchg
out
fs
es
bound
add
mov
dec
mulb
fldcw
xchg
movsb
cmc
jge
ja
popf
stos
imul
adc
xchg
mov
lods
mov
and
jecxz
or
hlt
adc
mov
xlat
testb
add
xchg
mov
enter
xchg
xchg
or
mov
insb
and
sahf
lret
jnp
add
jbe
sub
scas
jg
fs
pop
push
sbb
pusha
sbb
jge
pop
mov
add
je
dec
push
iret
sub
out
mov
or
adc
das
roll
push
adc
or
hlt
mulps
mov
rcr
fstl
push
out
cltd
pop
xor
adc
pop
sub
xchg
shlb
inc
jle
pop
dec
jo
xor
shld
pop
xchg
int
or
mov
cmc
aas
dec
jnp
cmp
or
add
push
cmp
xchg
mov
jge
sbb
dec
push
dec
pop
push
or
ss
jmp
cmpsb
popa
mulb
cmc
idivb
or
xchg
adc
lock
pop
aam
rcrb
pushf
das
scas
sub
scas
and
pop
jecxz
scas
cmpsl
xchg
xor
repnz
out
inc
mov
ss
jle
jp
add
dec
mov
xor
shlb
mov
cld
xor
out
out
sub
imul
loopne
push
xchg
out
mov
sti
test
mov
in
loop
dec
aas
push
push
test
pop
aad
add
sahf
pop
cmpsl
jl
push
aad
cmpsb
jge
imul
jg
mov
cmp
xchg
fistl
and
and
popf
call
dec
fcoml
outsl
pop
aas
xchg
jnp
jo
cmp
add
xchg
std
xchg
pop
sti
cmpsb
adc
fldt
jecxz
jl
stos
insb
out
push
dec
shlb
inc
mov
out
sub
sarb
xchg
es
sub
cmpsl
shll
xor
mov
aam
call
aad
in
fcomp
pushf
scas
jns
add
xchg
gs
jb
in
outsl
jnp
rcl
xchg
ds
aam
lcall
mov
mov
pop
lock
pop
mov
daa
add
hlt
lods
notl
icebp
or
mov
test
mov
inc
jns
add
cmp
xchg
fistps
or
stos
inc
rcrb
add
sbb
push
in
cmp
cmp
pop
movsl
clc
stos
mov
gs
loop
ss
hlt
ficompl
pop
push
fmull
cmp
arpl
push
aam
jecxz
in
inc
clc
adc
ret
jg
imul
jae
fwait
repz
pop
cmp
add
mov
dec
ja
mov
jg
dec
push
mov
lret
mov
xor
mull
inc
call
jle
out
add
push
pop
sbb
in
incl
sbb
jae
out
jmp
mov
shrl
xchg
push
cmp
in
mov
loope
loope
xor
stos
add
pop
or
cld
iret
ljmp
insl
dec
int
fs
mov
xor
imul
adc
aam
pop
sub
and
or
xchg
clc
call
xor
roll
inc
mov
cmpsl
push
dec
inc
mov
dec
roll
mov
push
mov
cs
fwait
aad
sub
xchg
pusha
insb
adc
mov
jbe
dec
sub
sub
lcall
into
push
add
daa
jne
scas
xlat
movl
out
or
sub
jae
outsb
in
dec
adc
sbb
lret
pop
popa
xor
sub
cs
rolb
xchg
int3
test
mov
dec
lcall
cmp
dec
in
or
nop
xor
cli
bound
fnstcw
ja
out
and
aam
imul
dec
fldt
push
add
hlt
jo
xchg
iret
fstps
call
xor
jl
jl
stos
adc
dec
pusha
ljmp
rclb
xor
psrld
cld
pop
addb
insl
popa
cs
xor
pop
and
in
test
mov
pop
mov
nop
movb
popa
inc
addr16
loop
out
fdivl
mov
inc
lret
mov
fdivrs
jbe
xchg
iret
fistps
arpl
ljmp
in
jle
and
repnz
or
faddl
js
shl
xchg
mov
orl
pop
xor
je
or
pushf
cs
push
addl
lods
loopne
cs
or
jl
pop
cmp
int3
shrb
repz
cmp
rorl
sub
add
cmc
cmp
xor
scas
imul
sub
out
pop
pusha
push
jge
mov
cwtl
filds
xor
adc
mov
clc
sbb
gs
xchg
daa
dec
fwait
jmp
ss
rorb
bound
dec
lock
daa
ret
aas
jp
call
jmp
sub
cmpsl
sbb
mov
in
flds
dec
pop
fstpt
fcmovbe
outsb
jp
loop
jg
movzbl
xchg
xchg
pusha
cmpsl
stos
pop
adc
daa
mov
leave
call
xchg
in
and
mov
adcl
ds
rcl
pop
out
jle
push
popa
xor
pop
out
mov
in
mov
test
in
lahf
fsubs
cmpl
aas
lea
pop
or
repnz
loope
loop
mov
push
flds
add
ds
repnz
xchg
push
xchg
bound
fmuls
fs
repnz
mov
cmpsl
jnp
dec
cmp
rcrb
bound
fucomp
push
mov
repz
adc
vmread
jae
and
push
pop
pop
les
cli
jno
jg
cmc
push
fsubrl
cmpsb
jo
adc
syscall
mov
and
aaa
cmp
mov
addr16
dec
adc
adc
dec
push
mov
popf
movsl
cltd
pop
pushfw
clc
mov
fldz
jbe
in
adcl
jb,pn
lcall
pusha
test
test
int3
cmp
jbe
test
mov
mov
aaa
test
inc
inc
xchg
push
out
push
adc
push
lods
sbbl
out
aas
cmp
add
and
sub
insb
jle
or
pop
mov
rclb
lret
add
fstpl
sub
jo
jecxz
int3
or
loopne
arpl
or
or
cmp
gs
enter
das
enter
fcmovnbe
or
ret
sbb
pop
xlat
or
faddl
xor
xchg
lds
nop
aaa
adc
cmp
imul
dec
insl
fisubl
jle
mov
cltd
adc
xor
fisttpll
push
je
push
cwtl
aad
into
adc
jb
inc
xor
mov
inc
loopne
push
xchg
sarb
mov
shll
pop
xorb
mov
aaa
fwait
sub
adc
jne
push
sub
adc
leave
xchg
call
lds
or
lahf
adc
jae
bound
je
mov
popa
pushf
pop
adc
cmc
int
xchg
enter
popf
push
pushf
push
insb
sbb
push
icebp
in
fcomps
jns
cmpsb
inc
cmp
jb
jl
imull
jle
mov
lock
popf
push
sbb
adc
inc
pop
in
mov
jle
pop
daa
js
xchg
call
fs
test
pop
mov
cmp
jecxz
mov
adc
rolb
mov
inc
mov
mov
pop
inc
cmp
pop
jge
push
mov
mov
mov
mov
fidivrs
lahf
fwait
and
aas
fadd
push
push
pop
cltd
stc
push
mov
push
xor
imul
fidivrs
lcall
mov
xchg
cmp
ljmp
ficoms
out
mov
jge
insb
js
imul
sbb
cli
and
ja
xchg
pop
push
jge
dec
call
stc
ret
movsl
mov
repnz
sub
cmpsl
mov
repz
iret
loope
jne
push
in
push
test
mov
scas
fistpl
mov
pusha
scas
push
mov
push
dec
adc
dec
cmp
rcrb
icebp
dec
mov
mov
xor
aas
sahf
jae
add
iret
out
nop
xchg
or
into
pop
stos
pushf
in
call
imul
imul
mov
das
pop
or
lret
out
cmp
pushf
sbb
gs
push
mov
adcb
outsb
cltd
test
insb
cmp
fmull
fnsave
sbb
mov
nop
add
push
sbb
jp
jae,pn
inc
es
ss
mov
pop
and
jp
sarb
js
stc
sub
lea
and
ficoml
mov
outsl
imulb
imul
rcr
dec
test
fistps
push
mov
add
aad
cmp
cmpsl
lret
dec
mov
into
push
loopne
insb
xor
push
push
push
int
cwtl
fiaddl
pushf
jmp
es
out
xchg
sub
pop
dec
jmp
in
test
pusha
cmpsl
out
mov
pop
and
push
mov
mov
rcrl
mov
jmp
add
call
rcll
dec
mov
fwait
cmc
int3
xor
jle
push
ret
rorb
int
mov
movq
mov
popa
lret
ss
sbb
inc
mov
push
imul
push
inc
inc
push
scas
push
pop
ror
adc
add
dec
jns
add
add
mov
lea
mov
rcr
lret
das
daa
lahf
sbb
daa
daa
scas
call
xchg
mov
and
and
addb
test
and
popa
inc
sbb
pusha
inc
push
mov
xchg
fs
pop
xchg
push
jbe
in
pop
or
cmp
lahf
jmp
xchg
shll
movsl
pop
imul
cs
loope
js
inc
cld
int3
fucomip
sub
adc
inc
movsb
cmp
inc
das
clc
scas
std
sub
movsb
fldl
sub
pop
add
xor
sbb
mov
xchg
push
popa
stos
dec
repnz
cmp
mul
movsb
xchg
dec
mov
in
xor
mov
daa
mov
test
pop
loop
add
mov
ja
or
test
or
sarb
sbb
ss
cli
rol
mov
int3
imul
jle
inc
jb
imul
ss
cmp
adc
pop
cmp
orl
mov
into
and
xchg
repnz
hlt
pop
mov
cmpsb
divl
cmp
xor
mov
in
xchg
cmp
jnp
shl
aas
mov
push
xor
inc
inc
pop
pushf
jecxz
cmp
add
and
ss
dec
lods
daa
mov
or
push
aad
lea
fsts
and
xchg
ret
loop
test
lock
dec
dec
fmull
inc
or
inc
xchg
sub
test
fs
xchg
cmp
sub
or
sbb
pop
pop
ds
sub
jge
cltd
in
cmp
test
add
test
int
jb
add
jnp
mov
or
mov
jo
into
adc
or
add
inc
jb
and
pop
int3
sub
xor
fdivrs
in
mov
push
fbld
push
das
fidivl
outsl
mov
add
and
pushf
pusha
mov
jl
sbb
jmp
xor
add
stos
jle
mov
stc
test
das
jae
adc
daa
test
push
mov
outsb
push
mov
dec
lahf
mov
xchg
mov
add
int3
adc
shl
mov
mov
orb
adc
scas
mov
or
xor
jl
xor
mov
loop
fldt
xchg
ds
imul
inc
mov
or
pop
xor
xlat
add
nop
mov
dec
fsts
sbb
mov
pop
popf
fwait
and
fsubr
popf
call
hlt
push
cmpsb
inc
imul
das
idivl
lret
adc
je
push
adc
adc
lea
mov
dec
orl
add
pop
in
stos
pop
cwtl
inc
fnstsw
sahf
shll
jnp
xchg
outsb
outsl
cmpsb
dec
sti
jns
pop
mov
sarb
mov
je
adc
push
cs
loope
jns
popf
adc
out
mov
enter
and
or
dec
mov
sub
test
lods
out
jo
pop
cmp
aad
mov
push
mov
addr16
hlt
push
icebp
cmp
sbb
jne
sbb
bound
scas
pop
sbb
out
cld
loopne
and
xchg
mov
sbbl
cld
jmp
loop
mov
les
lret
dec
dec
push
into
ss
scas
add
pop
shr
insl
sbb
bound
push
ficompl
jecxz
outsl
stc
nop
popf
lods
sub
imulb
xor
add
pop
out
cld
xor
pop
xor
or
clc
pop
psubw
lods
xor
inc
or
jno
inc
mov
mul
xor
in
sbb
ret
ret
sbb
jns
push
jno
mov
or
addl
push
lahf
dec
xchg
andl
adc
lods
pop
cs
add
je
xor
imul
loop
sbb
fidivrl
fildl
lds
std
out
movsb
je
dec
push
loope
cmp
outsl
fimuls
int3
xor
gs
jae
push
insl
add
sub
out
xor
or
push
adc
ljmp
adc
loope
xor
mov
xor
xchg
push
ljmp
cs
add
dec
scas
popf
rol
dec
inc
xchg
les
pop
lds
cmpsl
push
xor
push
dec
mov
adc
js
cs
pop
mov
out
negl
cmc
mov
aad
xor
or
pop
pushf
or
mov
cmp
cmpsb
data16
mov
mov
decb
data16
mov
xlat
jl
loop
aaa
repnz
outsw
add
fistl
mov
aaa
mov
les
das
das
sbb
xchg
roll
adc
add
rclb
aaa
or
icebp
push
push
xor
mov
movsl
jne
cmp
fs
rcll
or
in
jecxz
loope
out
mov
lods
jb
mov
push
scas
loopne
sub
loope
pop
add
dec
in
std
adc
int3
add
sar
repz
pop
mov
aaa
outsb
push
adc
insb
add
mov
xchg
push
and
mov
data16
dec
sti
mov
push
mov
fiaddl
sbb
sbbb
dec
roll
cmp
loope
test
xor
lret
mov
lea
lods
js
sub
stos
movsb
xchg
lcall
mov
add
jmp
mov
sbb
adc
jecxz
fldt
or
inc
mov
jmp
jecxz
insl
rol
cli
stc
lock
sub
fistpl
test
jge
push
sub
stc
inc
imul
add
sbb
sbb
xor
fcompl
jmp
mov
out
push
pop
in
push
lds
arpl
dec
mov
jmp
or
jecxz
bound
loopne
dec
jmp
dec
xchg
enter
icebp
and
adc
mulb
push
popf
ret
rclb
or
sahf
mov
mov
adc
fwait
sar
push
ljmp
xor
pushf
insb
or
sbb
add
outsb
in
lret
xor
mov
dec
inc
imul
scas
pop
andl
pop
clc
cmpsl
jb
or
cmpsl
je
shlb
cs
movb
dec
mov
and
jbe
data16
dec
add
adc
test
repnz
add
mov
int
push
xchg
jl
pusha
out
sub
pop
pop
out
mull
add
neg
mov
sub
dec
int3
testl
pop
popa
jl
sub
cmp
fisubrs
lea
iret
or
xchg
mov
pop
jo
inc
out
push
aam
stc
cltd
pop
int
push
out
xchg
dec
sub
push
cmp
jp
std
pusha
push
insl
sbb
jge
sub
out
inc
gs
mov
int3
xchg
mov
add
dec
xlat
sbb
adcb
adc
aaa
sti
mov
mov
mov
insb
lods
fwait
std
cmp
xchg
jmp
fcoms
or
dec
call
outsl
ret
cmp
faddp
jge
dec
call
jae
data16
ret
test
adc
movsl
jecxz
clc
inc
pop
xchg
mov
xor
shll
and
addr16
xor
or
mov
and
mov
adc
jb
ret
ret
sub
movsb
adc
or
popf
xchg
sbb
inc
into
ja
pop
aad
push
mov
sbb
mov
jle
data16
xchg
and
test
les
ficomps
das
and
out
add
pop
mov
imul
inc
cwtl
ljmp
sahf
inc
xchg
popf
cmp
loop
inc
scas
jno
insb
out
inc
mov
jns
push
dec
rol
cmp
les
inc
sub
cmp
mov
aas
cli
es
jns
fidivl
js
xor
sbb
add
test
push
sub
div
cmc
scas
stos
aad
insb
push
add
flds
xchg
out
push
fimuls
push
loope
push
shlb
mov
cli
mov
adc
dec
fstpt
fdivrl
leave
mov
ljmp
xchg
fldt
push
out
pop
mov
mov
ljmp
mov
add
lret
push
aam
and
arpl
fmul
in
xchg
lret
add
jg
or
push
cmc
sbb
push
popa
int3
push
pop
cmp
fistpl
outsb
lea
add
std
out
insb
jnp
repnz
or
movsb
jnp
popa
ljmp
call
or
popf
push
sbb
xor
lea
fiaddl
in
pop
cmpsb
ret
dec
xor
mulps
cmp
pop
xor
jno
daa
adcb
leave
and
fnstenv
sub
mov
mov
lcall
sbb
xchg
cmpsb
cli
pop
pop
adc
ss
fisubs
ret
scas
out
fwait
inc
dec
in
cmp
lods
loopne
cli
movsl
in
mov
repz
fcomps
pusha
std
ja
andb
add
jecxz
and
leave
lret
fwait
into
es
inc
lret
or
cmp
mov
and
jecxz
rcl
in
push
stc
xor
pop
cmc
add
in
pop
xor
test
loop
or
sub
repz
dec
mov
cwtl
add
mov
into
mov
lahf
adc
mov
sbb
adc
into
adc
in
aam
push
mov
adc
mov
adc
imul
sub
pop
out
inc
pop
xor
mov
lods
inc
arpl
dec
jle
popa
outsl
fisttpll
clc
jae
lret
jle
cmp
mov
stos
es
push
fdivrp
test
mov
fisubrl
jmp
add
mov
push
pop
mov
or
xchg
shl
or
mov
push
or
pop
adc
mov
adc
mov
jb
push
js
loop
in
mov
push
and
jnp
dec
outsl
fcoml
xor
loop
frstor
imul
dec
in
add
push
add
push
xchg
fcomi
icebp
dec
mov
pushf
xorb
xor
mov
pop
popa
sar
lret
movsl
sbb
out
lds
dec
and
cltd
mov
sub
dec
pushf
negl
lea
push
dec
or
dec
cld
ss
fldenv
pusha
jmp
mov
push
repz
imul
mov
push
shll
inc
xor
adc
xor
ret
ss
cmp
pop
lcall
and
adc
flds
loop
je
pop
and
aaa
dec
xchg
cmp
inc
adc
cmpsb
push
adc
or
fdivr
and
sbb
and
or
push
push
adc
stos
jp
and
lea
sbb
mov
into
sub
call
pop
xor
in
mov
cs
xor
sub
inc
mov
inc
jbe
das
xchg
cmp
ficoml
in
jne
xor
cwtl
pushf
ret
jle
scas
aam
sub
jle
xor
je
inc
out
stc
adcl
sub
cmp
inc
dec
hlt
scas
add
lods
pop
dec
mov
cmp
add
or
dec
cmp
mov
out
inc
in
mov
mov
mov
data16
xchg
adc
repz
adc
or
push
add
das
mov
movl
mov
push
stc
adc
mov
icebp
leave
and
shl
pop
xchg
clc
sbb
xchg
push
out
mov
loope
int
mov
inc
fs
icebp
outsb
stos
imul
test
stos
lret
cwtl
ficompl
jp
dec
daa
addr16
inc
hlt
out
pop
mov
jle
std
xchg
push
adc
mov
sub
jno,pn
mov
stos
adc
cmpsl
sti
ja
popf
shrl
mov
lahf
push
mov
xor
xchg
inc
mov
push
pop
cli
into
in
mov
dec
jb
dec
lods
adc
xor
es
xor
xor
sbb
xor
data16
movaps
lahf
btc
inc
sbb
cmp
outsl
sbb
xchg
mov
fwait
adcl
aaa
mov
pusha
xor
inc
pop
sub
cwtl
xorl
verr
loopne
xor
imul
clc
cwtl
jg
cld
fwait
jp
push
rorl
mov
inc
cld
js
dec
sbb
shrl
pop
add
ja
rcrb
dec
pop
aaa
mov
add
cmp
cmpsb
add
pop
jge
repz
rol
pop
outsb
pop
faddp
cmp
adc
inc
mov
bnd
cmpsb
fcmovu
lods
fimull
shll
mov
xchg
cld
mov
cmp
movsl
lcall
inc
mov
jo
popf
add
aad
adc
pop
pop
fucomip
orl
scas
push
xchg
shll
cltd
pop
imul
pavgw
push
inc
pop
call
cs
ret
sahf
or
ret
outsl
aaa
xchg
loop
cmpsl
or
jge
xchg
jp
xchg
cli
cmp
jecxz
cmp
dec
pushf
fwait
or
stc
scas
push
push
lcall
cmpsb
imulb
jmp
sbb
fistl
pop
xor
mov
and
fstl
mov
or
sbb
push
stos
inc
mov
testb
lret
leave
negl
popaw
mov
dec
out
out
sahf
jecxz
inc
pop
icebp
sbb
movsb
lea
ja
cbtw
jl
mov
sub
add
subl
add
fisttpll
dec
jbe
push
mov
cmc
je
jno
jecxz
cmovae
jmp
adc
sub
pushf
mov
insl
ret
mov
lret
and
jae
inc
movsl
mov
or
shlb
add
xchg
mov
dec
pop
int
sarb
imul
mov
add
mov
dec
mov
inc
jecxz
pop
test
test
outsb
mov
mov
cli
add
out
mov
jne
cmpsb
mov
repz
add
and
mov
js
cmpsb
popa
sub
and
xor
cmp
cmp
ss
imul
inc
adc
mov
leave
popa
imul
je
pusha
inc
ljmp
ljmp
xlat
mov
inc
je
fmuls
push
cmp
lds
push
push
sti
sub
dec
add
adc
adc
add
lods
push
fstl
in
insl
pop
and
insl
jmp
jg
scas
sbb
dec
neg
jecxz
cld
or
je
ror
mov
mov
sbb
jg
jb
cmp
iret
cs
jae
mul
arpl
adc
pop
jbe
pop
or
xchg
test
pushf
dec
mov
cmpsl
and
lods
ror
ljmp
mov
mov
xlat
and
pop
add
addb
inc
push
xor
or
lcall
inc
sbb
imul
dec
inc
inc
mov
or
mov
ret
sub
fwait
sub
nop
xchg
sub
outsb
push
or
pop
inc
int
je
pop
in
mov
out
std
stc
ja
cmpsl
mov
pop
pusha
sub
andl
sub
adc
mov
scas
ja
mov
sub
dec
mov
into
push
adc
bound
xchg
cmpsb
sbb
pop
adcb
and
push
sarb
fwait
sbb
daa
push
das
js
push
je
adc
pop
adc
in
inc
push
pusha
pop
movsb
daa
xor
iret
sub
mov
sbb
push
xchg
cwtl
mov
inc
lea
in
std
popa
pop
int3
sub
and
ret
out
mov
mov
lds
sub
std
mov
jne
mov
mov
fldt
addr16
scas
mov
lret
push
mov
push
lret
and
lods
cltd
push
push
dec
cwtd
rorb
cli
xchg
mov
and
insb
roll
adc
jne
outsb
jb
stos
sahf
addr16
sahf
jp,pn
in
xor
sub
imul
imul
adc
mov
sahf
in
push
mov
adcl
cmpsl
cmc
aad
inc
jg
ja
shrb
sbb
ss
in
std
nop
mov
push
jne
adc
xor
and
pop
push
sti
push
push
pop
out
or
pop
push
aas
dec
insb
cmp
jmp
insl
dec
pop
fxch
push
repnz
xor
decb
cs
sbb
jae
lds
lret
lret
jge
ds
or
cmpsb
cltd
movsb
or
cmp
and
push
bound
push
enter
fnstenv
ret
sti
gs
data16
int
sbb
dec
lock
pop
out
test
inc
fdivr
jbe
or
dec
push
dec
mov
and
mov
sbb
push
adc
mov
sbb
fsts
nop
sbb
sbb
push
or
std
test
xchg
lock
das
ror
mov
push
pop
insl
pop
pop
loope
sub
cmpb
jp
mov
les
out
pop
and
mov
into
xchg
xchg
arpl
movsb
add
pop
int3
adc
rorb
sbb
add
pop
scas
dec
and
cld
mov
ficomps
shll
into
aas
into
cwtl
popf
jno
leave
js
mov
imul
cmp
lcall
repz
jmp
int
std
xchg
or
test
pop
rcll
sbb
xchg
adc
stos
xor
inc
inc
and
push
sub
pop
mov
lds
xchg
sarb
cwtl
xchg
mov
inc
add
or
jmp
fmuls
frstor
or
cmpsb
stos
adc
aaa
cmp
ret
sahf
cmp
pop
negb
lret
adc
or
popf
test
mov
add
xchg
and
ficomps
cmpsl
movsb
clc
arpl
loope
testl
mov
fisubrl
inc
pextrw
xchg
test
stc
into
push
pop
pcmpgtb
xchg
push
xchg
mov
cld
cwtl
inc
jg
adc
loopne
mov
inc
adc
xchg
addb
dec
pop
shl
subl
out
add
inc
enter
das
lock
sbbl
cmp
cmp
pop
mov
push
gs
mov
sub
and
or
lcall
jbe
push
xchg
insl
std
xor
cmp
or
mov
nop
mov
jne
or
mov
in
jae
out
dec
push
jle
dec
call
pop
jae
mov
sbb
fstpl
lods
fcompl
cld
notl
mov
imul
add
aas
rolb
add
xor
sbb
and
or
mov
in
mov
rcr
and
add
cltd
and
xchg
repz
xchg
in
cmp
sbb
mov
xor
sbb
scas
push
sar
mov
mov
add
mov
mov
or
popf
test
into
xor
mov
cmp
fld
cli
outsb
lods
stc
mov
push
aaa
adc
dec
les
adc
cmc
lret
movsl
dec
into
daa
xor
aam
repz
xchg
push
adc
fwait
cmpl
cltd
mov
inc
testl
andb
shrb
js
xchg
or
iret
scas
mov
cmp
ja
lahf
jb
ja
mov
and
push
sbbl
stc
and
xor
pop
cld
lcall
ja
add
enter
xor
loop
ds
mov
sahf
lods
mov
insl
in
mov
sarb
lahf
scas
ljmp
jne
fwait
cwtl
mov
pop
inc
loopne
bound
jbe
sbb
arpl
add
mov
and
sub
shrb
stos
ficomps
add
jmp
mov
sbb
in
jg
push
xchg
arpl
or
cmpsl
in
aaa
loop
in
xor
pop
lock
fmulp
xchg
push
mov
sbb
inc
jp
dec
clc
shrl
dec
popa
jo
xor
fwait
mov
lcall
rorl
leave
pop
jo
movsb
movsb
cmc
push
popa
scas
fdivr
mov
push
push
insl
sub
and
push
repnz
jmp
sub
test
popf
aam
lcall
cmp
pop
sbb
or
adc
addl
push
mov
adc
push
or
test
int3
jb
into
fxam
incb
fstl
ficompl
movsl
sub
or
adc
jp
mov
rep
movsl
stc
aas
mov
movsb
add
int3
dec
mov
rclb
mov
and
stc
lods
mov
cmp
push
lret
inc
movlps
xchg
push
mov
aaa
mov
mov
or
es
das
xchg
out
mov
xlat
adc
lret
outsl
xchg
mov
insl
xor
push
pop
pop
in
xchg
cli
or
outsb
mov
jno
insb
mov
js
stos
mov
pop
lcall
inc
and
xor
or
jno
movsl
or
xor
jl
ret
loope
int3
daa
outsl
les
pop
in
lock
sbb
fmull
mov
ds
xor
mov
add
rol
outsb
ds
aam
pop
cmp
subl
push
jg
imul
leave
dec
out
cmpsb
jnp
loopne
ficoms
dec
fisttpll
data16
xchg
ds
jge
jmp
loope
sbb
shrb
fs
xor
sub
inc
repnz
xor
xchg
out
lret
xor
subb
pop
mov
mov
or
mov
dec
push
inc
jg
dec
dec
movsl
lret
xchg
mov
hlt
xor
loope
mov
pop
loope
loopne
into
jle
pop
rorl
out
push
jmp
push
inc
or
aas
sahf
mov
jnp
jle
jl
in
orb
outsb
hlt
scas
cmpsl
pop
xchg
test
fxch
cwtl
pop
dec
shrl
jle
mov
lods
ret
jno
jle
ret
lret
mov
pop
and
out
sbb
xchg
jno
daa
xchg
mov
cmp
inc
pop
out
ret
mov
cmp
.byte
.byte
.byte
sbb
add
mov
punpckhwd
stos
adc
lds
or
sbb
sbb
and
inc
lods
cmp
sti
cli
mov
mov
pop
or
mov
imul
jmp
mov
push
push
pop
sbb
mov
aam
xor
dec
add
popf
test
pop
incb
push
in
repnz
and
or
xchg
xchg
ss
adc
add
jbe
sbb
ja
xchg
adc
inc
call
push
sahf
lahf
xor
enter
cli
mov
xchg
les
daa
std
mov
out
gs
jns
xchg
push
adc
into
cmpsb
int3
insb
cltd
jmp
xchg
enter
xor
sub
outsb
gs
in
cmc
int
call
push
pop
fistl
xor
cmpsb
mov
test
push
and
stos
mov
inc
mov
cmp
imul
push
mov
mov
into
in
mov
pop
mov
hlt
nop
xchg
and
negb
mov
jb
push
aaa
inc
and
cmp
inc
and
lret
fmull
fs
fists
mov
lcall
loopne
jb
add
lcall
or
rcrl
test
mov
cmp
adc
xor
push
daa
mov
add
mov
inc
inc
aas
or
sub
gs
cltd
and
pushf
fistpll
adc
mov
test
cmp
and
lods
mov
filds
aas
pop
push
push
xchg
mov
xchg
sti
fdivs
cwtl
dec
inc
mov
lret
int
cmp
test
icebp
dec
and
jno
sarl
mov
cli
jb
xor
pushf
in
push
mov
push
or
push
inc
fldcw
add
jge
aas
sbb
pop
xchg
enter
in
sub
push
jge
mov
adc
out
and
insb
in
mov
cmp
test
jb
adc
add
xchg
xlat
xor
insl
jecxz
js
mov
das
loopne
adc
cli
pusha
lret
pop
push
enter
int3
xchg
push
int3
insl
push
js
enter
aaa
cmp
dec
or
test
xchg
in
arpl
rcr
xchg
dec
mov
in
cmp
gs
fstpt
push
fstp
cltd
jae
dec
shrl
mov
inc
sbbl
arpl
xor
ret
push
mov
xchg
and
das
scas
ljmp
fucomi
mulb
ljmp
xchg
xor
inc
pop
fwait
mov
inc
xor
fstl
addr16
xor
pop
sbb
sbb
jb
add
fstl
sahf
fstpl
in
sub
push
add
ret
rcl
mov
fsts
or
jae
push
rolb
lcall
mov
test
push
pop
push
xor
xchg
lcall
and
push
imul
adc
and
pop
imul
mov
aaa
lods
xchg
imul
lock
js
cmp
les
mov
jo
push
nop
xchg
jbe
fwait
into
in
push
jnp
xchg
and
and
cltd
lcall
lock
repnz
inc
pop
cmp
mov
data16
cwtl
mov
dec
sbb
pusha
and
aam
addr16
add
cwtl
aad
arpl
mov
push
cmp
push
jo
push
fistpll
mov
dec
scas
jae
lahf
adc
inc
pop
add
sbb
cmpsb
sub
into
stos
sbb
xchg
scas
iret
fs
jp
les
frstor
adc
sbb
or
mov
ljmp
jl
and
pop
fadds
bound
add
cmp
xchg
cmp
les
aad
outsl
or
mov
roll
andl
push
xorb
xor
mov
xchg
fdivrs
pop
into
cld
incl
dec
dec
xor
addr16
mov
dec
mov
inc
and
add
inc
cmp
cmp
mov
cmpsb
stos
inc
pop
or
mov
xchg
add
mov
xor
mov
sub
mov
mov
xchg
push
divb
out
pop
pop
jae
jl
jno
cld
sti
out
lahf
fimuls
push
mov
or
xchg
mov
mov
dec
sub
or
fwait
imull
lds
dec
push
push
stc
or
sub
rol
repnz
adc
cmp
orl
hlt
out
sbb
inc
dec
mov
fbstp
outsb
pushf
lahf
pushf
cltd
sub
lret
and
loop
and
ss
hlt
insl
jns
jp
dec
call
pop
sub
loop
pusha
fnstenv
cwtl
aas
xlat
add
pop
push
and
mov
inc
mov
mov
xchg
pop
mov
les
jg
jle
xchg
pop
xor
repnz
out
lret
mov
and
pop
ror
jge
shll
ja
addl
inc
push
inc
and
xchg
mov
and
loop
lahf
and
hlt
mov
mov
cli
cli
push
out
test
sbb
cltd
and
sub
fstps
mov
add
dec
xor
cmp
int
call
fisttpll
mov
xlat
push
mov
xor
call
je
mov
and
fisttpll
pop
mov
ret
or
jmp
push
and
loope
pushf
lds
adc
pushf
or
push
in
imul
in
or
push
xchg
leave
fidivl
adc
rcr
mov
ljmp
mov
or
mov
pop
out
mov
movsl
inc
pop
movsb
jo
xchg
mov
stc
cmp
aam
inc
mov
shrb
int3
les
mov
and
out
ret
call
test
add
js
sub
and
push
xchg
and
lret
xlat
jmp
shlb
mov
inc
cmpsl
push
fimull
ljmp
push
insb
dec
out
inc
das
nop
xchg
sahf
in
int3
mov
and
dec
setp
scas
stc
dec
sbb
popa
out
je
inc
insb
jae
aam
xchg
or
push
ffree
jo
cmpsl
mov
rcll
pop
adc
cltd
dec
mov
sbb
add
pop
call
dec
daa
or
dec
les
ljmp
fmulp
cmp
jnp
ffree
fists
push
iret
loopne
mov
sub
into
xchg
jne
test
std
leave
push
add
mov
xor
nop
adc
dec
and
push
mov
je
jl
pusha
lock
sbb
arpl
dec
push
cmp
or
push
fdivrl
pop
ficomps
negl
aad
aaa
shll
adc
jge
xchg
cwtl
ss
add
pop
jne
push
rcr
fwait
or
ror
jl
or
mov
sub
test
push
cmp
add
sahf
or
test
pop
xchg
out
mov
enter
movsb
dec
sub
out
inc
xchg
loope
rcrl
sub
subl
push
mov
es
ret
aad
in
ret
in
xor
pop
mov
xchg
lret
sbb
jb
outsb
sub
loop
scas
mov
sbb
test
shll
orb
mov
mov
inc
ss
rcll
pop
add
cmp
rcr
mov
std
jns
sub
aad
ljmp
adc
xor
sbb
inc
sub
mov
clc
add
negb
test
out
adc
repz
cmpsl
pushf
scas
adc
insl
clc
mov
mov
sub
test
repnz
mov
push
add
adc
jl
mov
fwait
and
fsts
je
cmp
loop
loop
ret
and
pop
sbb
xor
adc
mov
jns
jno
das
mov
sbb
insb
adc
cli
mull
xchg
or
sub
or
mov
jmp
test
out
jmp
ss
insb
adc
mov
jle
xor
push
aam
ss
loopne
pop
lret
addr16
add
aaa
mov
sti
sub
cld
movsl
or
and
adc
or
nop
jne
pop
xorb
sbb
int3
and
clc
enter
loope
movsl
xchg
or
sahf
mov
mov
mov
and
je
ret
xchg
add
xchg
mov
add
mov
ror
loope
test
jae
movsl
inc
lea
mov
lahf
bound
faddp
jle
dec
and
pop
cmp
mov
int
dec
jo
insb
push
jmp
dec
mov
nop
daa
fwait
pop
pop
negl
inc
hlt
mov
rclb
movsl
popa
jb
ljmp
sub
outsl
fldt
xchg
pop
pop
xchg
and
dec
in
ljmp
xlat
ja
jge
rolb
push
cmp
insb
icebp
clc
jbe
addr16
pop
sub
mov
clc
lret
lds
popa
sahf
cmp
addr16
cmc
jle
sub
sbb
or
cmp
fwait
inc
dec
lcall
fcompl
outsb
aas
and
mov
stos
fidivrs
or
stos
mov
pop
ret
mov
push
fistpl
push
sub
xor
sarl
ret
jae
repnz
in
xchg
shlb
cmp
cmc
jl
add
mov
mov
cltd
dec
fldcw
xor
jb
sub
jmp
pop
dec
pop
dec
lock
jno
flds
in
rorb
neg
stc
out
push
inc
dec
in
repnz
icebp
test
jne
add
add
orb
out
and
mov
add
push
dec
or
add
mov
aaa
mov
fldt
subb
testb
fmull
outsl
stos
mov
sti
mov
call
repnz
pop
dec
frstor
es
cmp
aam
fdiv
ficoml
push
leave
testb
testb
dec
cs
test
fsubl
in
repz
test
jns
mov
cmpb
insl
int3
lret
jns
shl
out
ror
jle
hlt
push
and
sub
dec
push
movsl
outsl
xchg
and
or
cmp
add
add
cwtl
jnp
cmc
js
ja
xchg
mov
mov
pop
mov
pop
jae
jo
adc
or
or
jns
adc
add
push
popf
or
sahf
mov
mov
xlat
adc
jnp
iret
push
pop
add
inc
mov
lea
subl
push
outsl
mov
add
dec
les
mov
cltd
and
or
adc
mov
and
test
outsb
add
arpl
repnz
data16
outsl
jg
into
call
jecxz
je
notb
fwait
fdivr
popa
cmpb
mov
pusha
sbb
sub
hlt
pop
mov
in
fwait
lahf
adc
jl
jb
clc
cltd
mov
pop
mov
mov
lea
cltd
jnp
scas
movlps
outsb
inc
sub
sub
lret
mov
add
test
mov
jo
dec
icebp
push
cmp
xchg
hlt
add
pop
fistps
sbb
call
out
adc
aam
adc
or
push
rcr
jb
rcrb
ret
push
or
xor
cmp
jno
inc
xchg
cmp
dec
pop
sbb
jg
cmp
pop
mov
sub
xor
hlt
pop
lods
dec
xchg
add
test
mov
xchg
xor
mov
aad
mov
xchg
inc
les
lahf
xor
adc
xchg
push
out
sbb
mov
in
push
pop
sub
jae
sbb
stos
loope
jnp
cmp
sub
mov
aas
imul
stos
add
push
push
cmpsl
in
and
das
xchg
cmp
pop
jg
add
xor
dec
push
pusha
sarl
imul
repz
movsb
leave
test
jg
lcall
sarb
mov
adc
rol
adc
mov
mov
fs
nop
cmp
or
xchg
ds
lahf
pop
scas
cmp
fdivrs
test
xchg
sub
or
in
adc
test
sbb
push
dec
clc
mov
cmp
mov
xchg
cs
jge
imul
fmuls
lahf
notl
scas
mov
lods
dec
movsl
aam
inc
fs
dec
das
and
mov
rcl
int3
cli
scas
sti
mov
rorb
jo
jo
data16
xlat
negb
je
or
xchg
adc
fmul
push
in
nop
outsl
and
sub
lret
jns
decl
cmp
mov
filds
xchg
mov
in
insl
notl
test
pop
scas
jb
les
gs
aam
imul
mov
test
addr16
add
sub
inc
jmp
xchg
xchg
jecxz
xchg
bound
mov
jecxz
insb
jmp
rcl
pop
lods
jo
sahf
addr16
jno
data16
fwait
gs
das
mov
adc
xor
sub
and
mov
stc
jle
lods
addr16
inc
jle
dec
mov
fisubl
out
stos
mov
add
pop
inc
stc
in
sbb
xchg
lock
repz
clc
push
xchg
adc
adc
subb
shrd
mov
pusha
sub
jne
int3
inc
and
rcr
outsl
fnstsw
sbb
mov
insl
notb
add
pop
fstpt
jbe
out
in
sbb
negb
cwtl
dec
lcall
outsb
cltd
inc
stos
imul
pop
lret
push
cltd
jns
pop
mov
pop
sub
pop
xor
jo
lods
movsb
jmp
enter
and
cmp
cmp
mov
cmpsb
dec
fadd
mov
sub
out
lods
adc
mov
mov
stos
mov
das
scas
push
pop
movsb
fstl
and
js
cmpsb
incl
mov
dec
pop
out
inc
scas
xor
dec
outsl
push
sub
jg
inc
popl
cmp
in
xorb
sub
into
push
ret
pop
sbb
xor
xchg
mov
loop
lahf
sbbb
fisttps
push
inc
test
jb
nop
mov
in
jbe
dec
ret
rolb
cwtl
fstl
stc
xchg
or
mov
adc
arpl
inc
pop
xchg
push
add
or
ret
lods
push
xchg
in
inc
mov
mov
adc
outsl
sub
out
dec
aad
xchg
int3
jecxz
cmpb
mov
xchg
pop
or
inc
add
shlb
call
mov
mov
mov
shll
mov
xor
rcl
cmp
mov
roll
jl
pop
enter
and
out
insl
addb
pop
fadd
repz
aad
mov
ds
lahf
sbb
lret
enter
out
mov
mov
and
das
jg
push
or
or
arpl
ret
mov
or
and
push
dec
in
cmp
imul
pop
insb
rcrl
test
pop
lret
mov
add
movsl
std
popa
cmp
xchg
inc
or
insl
sahf
jg
sbb
fs
dec
pop
xor
pop
xchg
fmul
cmpsb
daa
pop
jp
xchg
test
ljmp
xor
jae
inc
cmp
or
gs
xchg
cmp
cmpsl
sbb
push
jnp
ffreep
pusha
cmp
jae
cmc
mov
js
mov
stos
call
dec
cmp
fcom
push
test
test
pusha
aam
mov
fstps
mov
cli
mov
inc
adc
cmpsl
pop
dec
mov
sub
fisttpll
leave
adc
push
loope
sti
add
mov
push
pop
cmp
pop
arpl
test
pop
sbb
outsb
in
fimuls
movsb
xchg
and
inc
or
jnp
mov
mov
stc
dec
outsl
push
icebp
aam
jae
bound
stc
mov
jg
movsl
test
inc
pop
inc
inc
push
mov
ret
icebp
pushf
imul
sub
mov
imul
xchg
and
sbb
in
and
lret
in
lret
cmpb
inc
fs
mov
fiaddl
jo
aam
pushf
mov
sbb
nop
mov
push
bt
loope
ja
jne
push
stc
push
or
fsubl
in
fsubrp
xor
push
adc
mov
outsl
dec
sub
add
loop
jbe
rorl
loopne
rclb
out
cmp
nop
lds
hlt
sti
outsb
sti
mov
jp
sbb
push
repz
leave
or
mov
ja
imul
jae
je
fcom
je
push
mov
xchg
push
mov
sbb
mov
aam
loopne
jns
dec
mov
int
sub
jecxz
arpl
das
addb
enter
adc
lret
jo
lods
push
mov
fcmovb
sbb
in
mov
icebp
stos
mov
ljmp
fcompl
xor
cs
out
js
in
sbb
pop
push
mov
dec
xchg
mov
shlb
in
jge
fcmovne
dec
incb
mov
icebp
lods
mov
pop
xor
dec
mov
pop
xchg
dec
or
mov
cli
and
push
pushf
push
cmc
fstl
js
test
insl
inc
xchg
jmp
add
cmp
xchg
sbb
xchg
dec
ret
dec
sub
jle
push
cld
out
lahf
les
mov
testl
sbb
rorl
fcom
sub
imul
adc
je
stos
mov
sub
int
cmp
or
mov
fidivrs
sbb
into
hlt
mov
loope
push
xchg
inc
imul
mov
arpl
inc
shll
jl
mov
inc
popf
pusha
xchg
add
cmpsl
testl
cmp
into
push
iret
and
jbe
xchg
sub
push
push
lea
push
inc
inc
loopne
mov
imul
xchg
ja
sub
cmp
pop
rcrl
mov
push
or
add
sbb
mov
sub
xchg
mov
out
shrl
xor
adc
arpl
add
fisubrs
lock
cmc
cmp
movsb
dec
or
push
lcall
test
lret
mov
cld
push
adc
sub
adc
dec
stos
clc
hlt
xchg
pop
push
pop
sub
mov
repnz
dec
ds
and
inc
cmp
push
mov
shll
leave
fidivs
mov
sub
xor
jae
adc
inc
mov
and
inc
push
fisubrs
out
xchg
leave
mov
fnsave
fs
fmuls
push
std
lods
mov
lods
je
mov
adc
rclb
inc
in
nop
mov
push
ss
xchg
cmc
movsb
dec
mov
sub
test
and
aaa
lret
push
loopne
xor
or
mov
and
loop
sbb
lods
and
gs
aad
push
bound
mov
or
lret
mov
sub
subb
fnstsw
ror
divb
mov
gs
mov
scas
out
ds
stos
in
sub
cltd
sub
cld
inc
adc
or
push
negl
scas
arpl
in
add
ja
inc
jne
lods
xchg
lods
adc
aad
xlat
adc
xor
and
icebp
leave
adc
xor
cmc
sub
lods
lcall
jmp
jg
lret
push
pusha
jge
rolb
fwait
push
cmp
lock
ret
cmp
mov
cwtl
aam
and
es
jp
hlt
mov
jmpw
ljmp
mov
mov
fdivrs
pop
push
jecxz
cltd
push
jmp
test
pop
push
push
cs
mov
jo
inc
inc
icebp
stos
push
dec
or
out
xchg
xchg
test
push
scas
jg
push
xor
mov
test
in
jle
cmpsb
in
push
push
mov
iret
popa
ljmp
sub
pop
inc
mov
pop
sub
lret
pop
shll
gs
bound
pop
test
jp
cmp
adcl
jmp
pop
pop
fnsave
dec
inc
jl
je
mov
mov
or
cmp
loope
xchg
test
insb
mov
xor
fldl2t
cmp
dec
dec
ret
data16
mov
push
cmpsl
cmp
and
and
out
into
push
in
dec
js
out
out
imul
insl
or
mov
in
mov
test
cs
cmp
and
push
imul
and
sarl
inc
in
cmp
cmp
mov
mov
mov
lahf
xchg
jmp
rcrl
adc
sub
push
or
sahf
mov
push
dec
mov
pop
sub
xor
stos
repnz
ds
sub
xor
sub
inc
out
pusha
dec
cltd
hlt
nop
pop
dec
sti
jmp
jl
inc
add
fdivrl
push
popa
jge
js
rclb
test
addr16
adc
lods
dec
pushf
lcall
sub
std
push
xchg
loope
shl
lret
leave
in
dec
pop
xor
cld
inc
sbb
and
lret
or
jg
mov
or
xchg
in
push
mov
imul
or
icebp
push
push
xor
mov
xor
cmp
adc
push
xchg
jns
push
rorl
nop
jp
cmp
push
mov
jno
fdecstp
cmp
cs
adc
imul
jle
cmp
cmp
loop
pop
fstl
jecxz
cltd
push
pop
shl
push
push
pop
daa
aad
pop
pop
imul
sbb
rep
mov
dec
arpl
inc
aaa
leave
movsb
xchg
rorb
xor
mov
sti
cli
addr16
jo
xor
fcom
jo
sub
add
iret
inc
lea
xor
repz
dec
icebp
ds
out
and
ret
push
aaa
xchg
ss
dec
repnz
adc
leave
adc
cmpsl
mov
test
fistl
pop
xor
mov
fstpt
repnz
ljmp
xchg
inc
lock
push
lods
and
fdivrp
mov
add
inc
scas
test
stos
xlat
decl
test
in
lods
mov
jmp
cli
or
pop
sbb
arpl
dec
les
or
insb
fwait
pop
je
and
cmp
test
rcr
hlt
dec
gs
fucomp
and
mov
mov
rclb
jno
xor
dec
mov
lds
pop
pop
sbb
jnp
mov
cld
mov
out
xchg
xchg
in
imull
sar
pop
mov
cmpsb
xchg
jmp
mov
sub
jmp
flds
cmc
jo
dec
push
or
pop
xorl
mov
mov
jmp
cmp
fld
sbbl
iret
adc
fcos
out
pop
and
out
jnp
js
clc
loopne
cli
in
push
pop
or
fisttpll
ja
sbb
enter
or
push
aad
repnz
popa
and
cmp
enter
call
or
mov
lods
roll
push
push
jl
sub
in
mov
stos
jmp
jmp
addr16
iret
mov
xchg
mov
mov
and
ljmp
jbe
or
addl
pushf
aaa
mov
mov
push
and
mov
dec
rep
out
sub
cwtl
insb
fisttpl
fisttpll
jecxz
adc
mov
dec
jo
cs
jmp
enter
sbbl
inc
test
pushf
ja
xchg
adc
cmc
popa
sub
add
dec
shr
sub
popf
push
push
arpl
pop
cmp
and
repz
cmp
jge
xchg
xchg
push
ljmp
in
gs
add
stos
sbb
aam
mov
cmp
jp
inc
int
call
out
jbe
sbb
or
imul
scas
push
dec
sbb
xchg
test
ds
jo
dec
ja
cli
ds
int3
sbb
in
push
add
push
bound
cmp
aad
pop
repnz
push
xchg
xchg
rcrb
cmp
xchg
aas
mov
xchg
xchg
xchg
call
jl
pop
stos
mov
pushf
or
and
mov
mov
mov
push
test
aas
xor
adc
xchg
pushl
lds
xor
pop
lret
lds
sub
pop
movsb
lahf
dec
inc
mov
cmp
loope
and
rcr
sbb
insl
sub
jge
clc
xor
mov
stos
or
loop
and
imul
dec
jge
insl
mov
rol
mov
stos
jmp
std
dec
or
sahf
jo
mov
pop
mov
adc
push
and
mov
pop
xor
mov
sbb
jns
dec
cwtl
jecxz
adc
call
daa
ds
jo
outsb
repz
adc
movsb
add
mov
sbb
mov
cmp
fcmovnu
loop
test
popf
add
pusha
mov
and
rcrb
ss
loop
mov
push
mov
jmp
xor
movsl
push
push
cmpl
sbb
es
fmuls
divb
out
push
dec
repnz
sub
inc
add
aas
fldl
or
rorb
aaa
xor
dec
mov
add
push
or
ret
or
clc
les
fwait
lea
dec
adc
sbb
cld
cld
dec
add
pop
out
js
dec
mov
adc
inc
inc
pop
xor
fstl
mov
int3
data16
cmpsl
xor
lea
adc
call
xlat
and
rolb
das
mov
sbb
cmc
xchg
add
inc
jns
nop
sbb
lds
mov
push
sar
sahf
push
out
add
jns
inc
pusha
add
movsl
xor
mov
pop
mov
inc
fnstenv
sbb
test
repz
jge
jb
xchg
jne
enter
sti
adc
and
cli
lret
neg
fwait
mov
push
mov
fnstenv
loop
cmpb
pusha
rcl
and
cmp
div
sub
pop
jmp
mov
outsb
xor
cmp
outsb
arpl
mov
jmp
xchg
pop
insl
shr
adc
addr16
js
iret
aaa
aaa
lods
ret
dec
test
dec
ljmp
les
cmpsb
out
or
add
clc
idivl
fnsave
outsl
xor
arpl
jl
sub
ds
push
sbb
dec
movsl
sbb
fildll
pusha
rcrb
loope
cmp
push
adc
add
loopne
cmp
inc
mov
out
scas
sbb
mov
test
lcall
or
jb
xor
mov
push
aad
pop
sub
jmp
data16
add
sub
sub
gs
jo
addr16
fdivrs
xchg
loopne
and
push
jae
cmp
test
mov
mov
in
les
push
imul
jge
std
jge
in
push
push
and
insb
jl
xchg
push
sar
and
inc
into
sub
rcll
jo
adc
outsb
addr16
je
cmp
rorl
std
adc
mov
outsl
jae
loop
sti
or
sti
inc
adc
add
mov
or
xchg
cmp
outsl
jge
mov
sbb
pop
pop
int3
popf
nop
cmp
adcl
enter
or
or
test
push
lds
cmp
loopne
adc
mov
sbb
push
fmuls
jo
xchg
ficomps
fstpt
addb
das
mov
xchg
mov
xchg
mov
sbb
add
adcb
push
je
xchg
inc
divb
xor
cld
clc
loopne
push
sub
jmp
iret
js
dec
sahf
cmp
mov
sbb
fs
ja
ret
orl
jne,pt
xor
andb
outsl
add
and
insb
rorl
sub
mov
lock
xor
in
outsb
aaa
rcl
and
jle
and
adc
stos
and
mov
mov
sbb
in
add
cmp
and
mov
loopne
adc
pop
inc
pop
pop
fwait
sbb
pop
out
jle
dec
loop
mov
adcl
adc
repnz
mov
push
mov
sti
inc
mov
outsb
lahf
dec
add
pop
daa
shll
sbb
mov
cli
fsubrp
dec
tzcnt
imul
jne
or
lret
cli
in
in
mov
hlt
les
adc
sarl
orl
lret
enter
xchg
out
xchg
xchg
rolb
mov
cmp
pop
rorb
aam
mov
aam
mov
aad
cmc
fnstenv
sbb
mov
subb
ljmp
pop
inc
pop
pushf
jne
jae
aaa
pop
lret
nop
gs
cmp
pop
mov
das
dec
rcr
adc
inc
mov
pop
inc
repz
push
mov
dec
push
xchg
cmpsb
lock
sti
sub
cld
dec
mov
xchg
dec
xchg
sahf
arpl
mov
push
popf
xchg
testb
int3
jno
inc
push
xor
cmp
inc
and
frstor
mov
sub
jg
fs
push
jns
sbb
sbbb
jbe
outsb
push
popa
repz
sub
lcall
or
mov
loope
ret
sub
add
inc
adc
push
xchg
jle
mov
cltd
cmpsl
jbe
es
xor
lahf
mov
jbe
inc
ljmp
add
adc
es
inc
adcl
xorb
sub
jno
mov
adc
push
repz
mov
pop
int3
cli
jnp
pop
jl
leave
mov
and
out
es
test
mov
es
pop
fidivrl
mov
push
leave
cmc
inc
dec
dec
cmp
mov
xchg
lahf
mov
push
sbb
sub
rorl
pop
lods
mov
mov
xor
push
xchg
xor
sbb
test
jo
dec
cltd
vphaddwd
stos
ljmp
jg
jg
ds
mov
sar
dec
sub
jns
pop
add
mov
adc
aaa
out
ss
mov
leave
out
insb
popa
test
loop
test
inc
mov
inc
add
or
roll
mov
add
push
push
mov
xchg
push
mov
stos
xorb
into
pop
push
roll
mov
jns
mov
push
repnz
out
pop
push
xor
pop
add
fisttpl
aas
push
and
and
mov
test
jns
mov
movsl
test
rcll
jb
rcrb
pop
fucomip
and
inc
ret
inc
adc
das
cmpsb
testl
add
mov
xchg
inc
mov
lods
loope
cmp
lds
aas
jo
rorl
imul
jg
lods
pusha
inc
ret
in
inc
push
jecxz
xchg
adc
xor
lock
inc
pop
fwait
add
dec
psubq
idivl
sub
cs
in
and
rorl
pop
orl
sub
fidivs
sbb
push
test
mov
add
clc
mov
fisubl
add
xchg
aas
movsb
jne
mov
cltd
aad
xchg
xchg
dec
mov
jo
mov
and
xor
push
or
and
xchg
jmp
adc
out
daa
adc
je
xor
push
leave
cmp
fadds
xchg
push
mov
mov
scas
cmp
inc
je
insl
sub
andl
xor
jne
aas
outsw
mov
adc
pop
movsb
inc
sbb
mov
fisttps
mov
sbb
mov
mov
stos
mov
dec
inc
jnp
pop
in
fs
inc
adc
mov
mov
sbb
inc
ja
aaa
in
inc
ret
cltd
fisttpll
imul
sub
mov
loop,pn
stos
int
aad
xor
nop
stos
sbb
ss
movsl
xchg
and
push
stos
shlb
dec
mov
out
mov
imull
sbb
decl
mov
negb
test
adc
mov
mov
lret
lds
mov
mov
push
out
fs
adc
es
nop
push
mov
mov
cmp
cmpb
mov
add
mov
push
jl
les
ret
jb
pop
xchg
dec
push
lea
inc
jae
pop
sbb
clc
cmc
xchg
sbb
add
pop
sbb
dec
cmpsl
sub
arpl
out
outsb
push
lods
fst
jae
popf
jecxz
push
sub
xchg
cmp
jne
xlat
insl
mov
std
lret
pop
add
arpl
mov
outsl
sahf
imull
lret
inc
mov
fidivs
mov
mov
or
cmp
jbe
or
sub
cmp
test
pop
nop
xchg
push
movsl
push
mov
push
das
xor
xor
les
adc
pop
cmp
sbb
xchg
outsb
mov
cld
popa
jo
das
cli
nop
js
loopne
nop
and
stos
mov
and
push
adc
cli
jo
push
pushf
jo
ret
imul
or
cmpsb
bsr
ret
fs
dec
add
inc
jmp
lret
add
push
iret
jns
sbb
add
insl
cwtl
inc
xchg
add
out
cmpsb
mov
js
data16
loopne
icebp
push
insb
outsb
dec
inc
aam
out
stos
fidivl
fsts
ret
xor
ds
mov
idivl
xor
or
pusha
movsl
xor
cli
insb
rcrl
mov
mov
pop
xchg
push
xchg
or
lret
lods
cli
or
imul
outsl
sbb
push
mov
or
adc
mov
mov
mov
lea
enter
mov
inc
xor
add
lods
cmpb
pop
pop
test
ss
arpl
sarb
rorb
pop
jne
shrb
jg
push
and
add
lea
repz
lcall
jne
sub
inc
mov
shr
inc
sbb
addl
mov
sbb
lret
pop
data16
adc
add
xorl
lds
inc
shlb
mov
movsl
xchg
pop
xor
and
push
jle
mov
stc
inc
cmp
movl
mov
mov
data16
adc
aas
fcomps
clc
cltd
xchg
js
aaa
push
mull
ud1
mov
in
mov
xor
fcomps
lret
aad
mov
test
xchg
js
nop
idivl
mov
in
test
inc
stc
stos
int3
aad
ja
lahf
xchg
add
jo
sarl
push
mov
push
cltd
xchg
rolb
insl
push
sbb
in
adc
sub
mov
push
push
mov
imul
loopne
cmp
push
pop
jecxz
loopne
mov
repnz
pop
shufps
sbb
test
add
add
icebp
jns
lret
mov
popf
mov
shl
ss
jns
jb
jecxz
cmp
mov
call
testb
mov
push
xor
mov
or
lcall
adc
rcrb
sbbl
outsb
les
xchg
jl
lcall
out
xor
sub
dec
sub
addr16
mov
enter
fistpl
sbb
cmpsb
inc
mov
jns
xor
cld
pop
jl
mov
scas
xor
push
rorl
popa
pushf
jb
lods
adc
inc
out
shlb
ja
xor
mov
inc
pusha
js
xchg
cmc
pop
or
jle
or
dec
and
inc
test
popa
std
lret
xchg
mov
xchg
xor
push
push
jns
test
pop
pushf
push
add
pop
mov
pop
jg
nop
and
mov
xorb
adc
enter
arpl
addl
lahf
mov
or
xchg
sbb
or
lods
enter
xchg
mov
mov
jne
or
insl
xor
pop
mov
push
sub
mov
ds
ljmp
scas
xor
cmpsb
lahf
out
shlb
or
mov
xchg
aam
lahf
or
add
adcl
mov
add
outsl
sarl
dec
in
sbb
lock
movsb
test
aam
cmp
push
mov
nop
in
fnstcw
stc
pop
mov
push
pop
sub
dec
loope
enter
push
testl
cwtl
jnp
loopne
cmc
rcll
sub
fs
lods
cltd
fiaddl
fcoml
shll
loop
mov
adc
dec
mov
jno
sbb
rcr
data16
lods
imul
sbb
xchg
repnz
mov
mov
aaa
lods
inc
fbstp
or
mov
sub
pop
inc
test
popa
daa
sbb
xchg
stos
arpl
loop
pusha
repz
popa
and
aam
ret
xchg
jbe
cmpsl
into
jmp
out
jge
data16
cmc
aam
int
sbb
jb
adc
pop
jecxz
sub
mov
in
and
mov
lock
sub
mov
push
cmp
scas
outsl
xor
push
dec
dec
sti
add
mov
fsubrs
aam
outsl
sahf
ja
je
jbe
cs
mov
pop
pop
sub
add
pop
mov
pop
push
das
inc
movb
xchg
inc
ret
push
jecxz
add
mov
sub
xchg
xor
xchg
addr16
shr
jle
sahf
sub
addr16
mov
mov
outsl
adcl
fwait
jg
mov
sahf
cs
mov
test
aad
fwait
cmp
orb
pop
sub
jns
dec
das
and
dec
or
pop
adc
outsb
ljmp
or
ret
les
and
dec
ds
and
mov
sbb
insb
std
jmp
icebp
push
and
iret
mov
sar
push
and
jb
add
lea
test
xchg
fwait
dec
data16
mov
mov
sub
pushf
xlat
sbb
lcall
lcall
mov
push
aaa
sub
jo
cmp
mov
out
pop
lret
cmp
mov
mov
int
jmp
out
lods
cltd
pop
popa
loope
lcall
rcrb
pop
mov
movsl
sbb
arpl
hlt
lahf
js
push
addr16
mov
fs
adc
movsb
jae
mov
cmc
pusha
and
das
bound
jg
lea
clc
je
notl
das
mov
fcomps
cld
xor
arpl
jl
xchg
mov
test
sub
in
les
fstpl
addb
or
sub
sub
out
pop
sub
rorb
add
jmp
arpl
xchg
icebp
pop
sbb
lea
sub
mov
dec
add
pop
pop
mov
mov
mov
sub
mov
ds
mov
cs
sub
outsb
sbb
mov
sti
sti
in
out
shlb
icebp
lahf
lds
imul
push
jnp
scas
xchg
sbb
ds
mov
xchg
jae
neg
and
jb
neg
aam
mov
pop
cmp
sbb
cmc
negb
xlat
stc
fsubrs
adc
loop
sub
pop
mov
xchg
mov
or
jp
or
testl
fsts
test
lcall
cmp
push
lahf
mov
push
cli
leave
sahf
imull
out
inc
add
aaa
mov
xor
mov
dec
insl
sbb
fstpl
lods
addr16
arpl
push
push
stos
or
lcall
cli
das
sub
stc
or
sbb
pushl
sbb
mov
fs
fldenv
jl
and
pop
shrb
xor
mov
xchg
fiadds
and
sbbl
xchg
popl
mov
mov
sbbb
shlb
jg
sbb
dec
fldl
setns
xchg
xor
fidivs
jno
out
push
sti
push
xor
mov
jmp
stc
imul
mov
sar
sub
fisubl
xchg
pop
sbb
mov
daa
add
popa
mov
adc
jbe
and
fisubs
jo
jp
push
pop
inc
jl
jne
pop
xchg
xor
bound
jl
je
mov
jl
inc
adc
mov
ljmp
icebp
pusha
or
add
fsubrl
pop
lock
lods
xchg
aas
stos
pop
clc
int3
js
scas
sarl
inc
dec
xor
xchg
inc
jg
mov
jecxz
repz
sub
lds
xchg
jmp
xor
jns
sub
sbb
pop
mulb
jmp
mov
mov
daa
arpl
push
loope
push
pop
or
push
mov
mov
mov
push
insl
mov
add
cltd
jp
lods
divb
mov
push
aam
or
xor
cli
sti
mov
mov
jp
aaa
je
xchg
nop
test
inc
mov
aaa
fisttpll
adc
and
push
in
shl
clc
jno
shlb
pop
in
jbe
sub
mov
xchg
ds
fdivrs
mov
ficompl
mov
sbb
rclb
repz
iret
push
sbb
mov
pushf
fisubs
lret
push
je
or
int
pop
dec
cli
je
stc
cmp
jno
cmc
and
dec
loopne
sbb
arpl
lcall
fsubrp
push
sbb
icebp
mov
fldcw
lret
in
xchg
inc
sub
sbb
mov
or
mov
pop
push
dec
or
dec
stos
mov
pop
pusha
sub
sub
scas
fstpt
test
fdivrl
fs
sbb
cld
fbld
xchg
mov
cwtl
push
push
call
cmp
xchg
jg
aam
sub
mov
sbb
pop
mov
push
aas
ficomps
fs
sbb
daa
pop
pop
in
idivl
sbb
int3
sti
push
les
repnz
dec
mov
data16
xlat
pop
bts
and
cwtl
jb
cmc
cmpsb
xor
mov
lea
hlt
addr16
test
jle
rorl
dec
mov
mov
cmp
adc
push
or
and
cs
pop
incb
popa
fs
mov
dec
push
leave
push
adc
das
add
dec
xor
movsb
xor
icebp
outsl
and
xchg
sub
movl
dec
mov
stos
mov
sub
xlat
rcll
cmp
dec
je
dec
mov
inc
sahf
or
sbb
inc
aam
inc
loopne
jae
clc
adcb
int
cmp
jmp
mov
jo
mov
sbb
pusha
addr16
insb
lcall
push
fmul
push
aaa
jae
push
cwtl
xlat
leave
cmpsl
and
imul
jns
loopne
lret
sub
icebp
mov
xor
dec
jb
xor
mov
adc
das
jecxz
inc
cli
and
popa
mov
fcmovnb
daa
xor
ljmp
out
incb
stc
mov
lret
push
cli
sub
dec
mov
enter
jle
stos
inc
test
in
pop
cld
repz
mov
push
or
shl
int
xchg
fisttps
enter
lds
out
je
mov
xchg
movsl
pop
mull
test
lea
addr16
sbb
jge
pop
inc
or
jp
aas
std
pop
mov
in
fwait
mov
rep
pop
popa
out
and
icebp
xchg
jp
ja
pop
fsubrl
mov
cs
dec
and
cmpsl
xor
pop
pusha
xchg
fists
mov
daa
pop
movsl
jb
jne
push
mov
push
or
cltd
loop
out
jb
fimull
in
jo
adc
fwait
lods
xchg
sbb
jl,pn
rcll
mov
imul
pushf
std
pop
sbb
jae
jecxz
scas
das
roll
js
mov
fdivs
mov
mov
sbb
and
inc
mov
jo
jecxz
mov
push
jb
add
test
jno
or
inc
cwtl
and
xchg
aaa
mov
sub
pop
iret
ljmp
outsb
loopne
lret
inc
setl
push
adc
cmpsb
out
lcall
sbb
cmp
les
adc
xchg
adc
test
cmp
lret
mov
daa
xchg
mov
cmp
mov
jle
ds
lcall
sbb
mov
cmpsl
add
push
out
das
dec
xor
sub
insl
les
insl
stos
movsl
cmp
fxtract
call
int
sbb
sbb
pop
dec
fimuls
push
aaa
jne
out
and
mov
xchg
aas
add
imul
mov
xor
mov
enter
jl
sub
stos
add
fwait
clc
dec
inc
call
jb
es
and
leave
imul
adcl
loop
jmp
es
inc
jmp
and
push
movsl
es
out
sarl
in
mov
lcall
mov
aad
jnp
xchg
add
es
add
adc
in
fs
pop
stos
sub
mov
mov
stos
cmpsl
pop
fcomip
mov
sbb
lock
jb
cmpsl
lahf
or
inc
lahf
and
addl
outsb
jl
cmp
dec
stos
cmp
push
rorl
dec
orl
decb
enter
adc
pop
pop
scas
ja
xor
jmp
jno
outsb
sub
idivl
push
adc
ds
cwtl
mov
push
pop
cmp
add
push
adc
push
sbb
add
pop
das
testl
rorl
inc
xor
shl
test
lret
mov
inc
sbb
mov
cmp
dec
int3
xchg
add
cmpsb
insl
push
mov
pop
xchg
pop
cmp
and
adc
stos
addr16
mov
daa
add
sbb
add
xor
ja
mov
pop
push
fnsave
xor
or
xlat
dec
in
lea
divb
rcr
imul
ja
ds
dec
sbb
fstps
out
push
std
idivl
xchg
idivl
sarb
push
push
repnz
les
sbb
sub
push
stc
scas
aaa
mov
pop
lret
cli
mov
cmpsb
leave
test
std
rorl
inc
and
loop
shrl
jne
pop
call
inc
lock
jecxz
sub
rorl
popf
xor
cmp
pop
mov
add
divb
mov
lcall
out
test
mov
lret
iret
and
adc
divb
push
pop
lea
mov
add
leave
push
movsb
enter
jbe
push
cmp
das
ljmp
jns
call
lret
outsb
clc
leave
enter
and
setns
push
in
enter
xchg
sub
inc
sbb
stc
and
mov
xchg
inc
out
shll
mov
jne
stos
ret
bound
cmovo
or
mov
mov
das
fsts
and
scas
fstpl
add
iret
ss
scas
push
popf
out
stc
jmp
push
mov
daa
movsb
xchg
xchg
xor
dec
in
cltd
adc
push
sti
jae
cmpsl
jp
and
ja
cmpsb
cmp
cmp
lods
push
loop
in
dec
ja
mov
fisttpl
out
push
push
insb
mov
dec
inc
cmp
shlb
in
mov
mov
aad
imul
jo
outsb
cmpsl
push
fisubrl
mov
jg
pop
aaa
loope
arpl
jmp
or
add
add
push
leave
sbb
cli
dec
cld
lret
sub
dec
test
pop
cmp
sbb
mov
pusha
sbb
arpl
lock
call
push
mov
and
and
xor
ljmp
ficoml
jbe
xor
aas
mov
das
mov
lahf
test
sarw
mov
inc
dec
mov
jecxz
pop
stos
ljmp
movb
adc
inc
sbb
mov
fisttpll
mov
xlat
sub
mov
inc
popa
cmc
cwtl
inc
mov
push
dec
ret
mov
ds
cli
popf
in
hlt
cmp
adc
out
nop
icebp
xor
mov
sarl
mov
mov
fadd
mov
xchg
nop
aaa
lcall
lcall
xchg
sti
outsb
fs
add
movsb
int3
adcl
add
test
emms
std
iret
xchg
xor
sub
scas
or
aad
enter
mov
lods
adc
push
xchg
ret
and
add
inc
stos
fstpl
jns
outsb
jmp
push
mov
test
imul
pop
inc
push
push
lret
rol
xor
shll
sbb
jg
icebp
cmpsl
adc
fildll
bswap
hlt
popa
cmpsl
rclb
xchg
jg
fidivrl
scas
adc
pushf
dec
sub
rcl
sub
test
ficomps
sti
cmp
jo
imul
or
int3
out
xor
loop
or
js
jecxz
je
and
dec
jmp
push
or
dec
jae
jb
shll
cmc
pop
inc
repnz
call
sti
cmp
jmp
shrb
pop
jae
stos
fcmovbe
inc
loop
bound
popf
mov
jg
xchg
std
aaa
adc
or
inc
sti
loope
shrl
mov
push
scas
push
lock
test
nop
cmp
in
sub
bswap
lret
lahf
pop
and
test
dec
xor
popf
mov
sub
xchg
xchg
push
into
jbe
stos
ret
mov
pop
adc
std
lods
data16
jge
and
sub
clc
movsb
or
mov
cmp
push
sbb
data16
cmp
les
jo
jnp
cmp
xchg
cmp
imul
sbb
pop
mov
cltd
out
mov
adc
mov
add
mov
lret
fstpt
pop
fsubp
daa
cwtl
jb
pop
xchg
mov
mov
mov
in
mov
fimull
jge
jle
ror
fnstsw
call
add
mov
mov
inc
lahf
inc
xchg
add
sbb
addr16
pop
ljmp
xor
xchg
lock
ret
mov
cmp
adc
xor
jecxz
push
imul
fdivrs
ja
mov
outsb
cmp
scas
xchg
arpl
dec
arpl
sub
or
gs
jbe
dec
pop
adc
ret
jae
inc
adc
fimuls
inc
xor
inc
sbb
inc
sub
mov
dec
push
int3
xlat
rcrb
test
cmp
push
or
ds
cld
rcrl
mov
shll
push
sub
aam
out
mov
inc
ror
mov
aam
jo
dec
adc
xor
jnp
cmp
lea
scas
movsl
adc
mov
mov
cmp
inc
outsl
jbe
loopne
inc
ret
scas
outsb
jl
popf
fcmovne
jecxz
mov
aad
fdivrl
push
and
dec
push
and
pop
stos
test
bound
inc
in
mov
pop
push
pop
dec
pop
fxch
dec
pop
inc
jne
ljmp
jp
mov
mov
inc
aas
mov
out
or
mov
imul
pop
ja
loope
mov
popf
mull
shlb
addb
and
popf
add
stc
lods
ficompl
add
sbb
inc
inc
ds
ds
cmp
cs
ds
icebp
pop
dec
or
adc
data16
arpl
jmp
jmp
xchg
dec
pop
fcompl
mov
mov
mov
pop
dec
popf
push
rclb
jnp
test
mov
int
add
arpl
pop
mov
pushf
rcrl
push
mov
sarl
imul
xchg
test
adc
mov
jae
dec
lret
push
in
cmp
pop
gs
daa
sbb
pop
lret
js
leave
icebp
jecxz
sub
inc
dec
lahf
jle
push
loope
out
lods
add
fs
xor
mov
jbe
scas
mov
xor
cwtl
andb
mov
movsl
inc
scas
adc
push
mov
les
test
pop
shr
push
and
idivl
jecxz
les
fwait
lea
mov
xchg
or
fucomp
mov
pusha
xor
mov
mov
ds
mov
xorb
clc
pushf
aad
pop
gs
pop
out
xor
jge
or
sub
pushf
add
adc
out
add
mov
stc
into
repz
jno
jg
add
jecxz
and
sbb
fsubl
cld
mov
jnp
into
push
mov
jo
sbb
fmul
and
jnp
in
fistpll
push
add
and
call
test
jo
mov
outsl
mov
inc
adc
mov
mov
sbb
in
ficoml
das
xchg
dec
sub
xor
cmc
and
jmp
inc
inc
mov
mov
ror
in
stos
mov
cmpsb
sub
cwtl
orb
jo
xchg
jle
jne
in
xor
push
jl
and
ja
sub
add
js
pause
push
sbb
xchg
stc
movsl
and
mov
ret
sbb
gs
repz
shlb
pop
aam
test
pop
mov
or
mov
jmp
adc
lret
gs
jnp
jmp
jp
outsb
mov
or
repnz
or
movsl
dec
sbb
xor
xchg
test
add
daa
push
add
cmc
inc
and
push
pop
adc
mov
and
push
jns
sub
xchg
xlat
fs
mov
or
pusha
dec
js
jp
in
cmp
jecxz
scas
arpl
xchg
fstpt
mov
imull
loopne
sbb
adc
aam
jecxz
sub
lret
xor
inc
inc
cmp
dec
enter
inc
push
pushf
and
and
popf
out
fmulp
mov
lret
adc
push
repz
xchg
rcr
pop
bound
lret
push
mov
es
mov
pop
inc
insl
adc
pop
sahf
ss
jns
fwait
std
push
push
stos
cs
outsl
shll
mov
adc
adc
dec
pusha
loopne
sarb
cmp
std
lea
call
insl
jae
and
or
xchg
call
mov
in
mov
pop
fisubrs
inc
xchg
lahf
sbb
xchg
xchg
and
dec
mov
pop
cmp
jl
cmp
jns
lock
aad
or
iret
push
stc
push
cmpsl
mov
or
out
lods
rclb
test
in
push
andb
push
jb
jl
mov
jnp
fcmovu
sub
jge
xor
divb
std
sahf
jp
clc
test
sbb
mov
in
xorl
pushf
fcomi
gs
pop
push
pop
inc
push
mov
push
sti
xchg
add
in
fiadds
lret
mov
imull
jno
ret
dec
push
lock
mov
rcrb
hlt
mov
ss
iret
lock
mov
mov
adc
cwtl
mov
fdivr
pop
fwait
inc
mov
mov
inc
xor
or
mov
xor
aas
gs
push
in
or
inc
shrb
pop
js
dec
sbb
xlat
cmpsl
mov
push
sahf
jl
pop
jg
dec
pop
mov
rolb
xchg
or
push
shl
nop
adc
jb
lock
lahf
and
mov
shlb
mov
push
dec
adcl
lret
pop
dec
ja
ljmp
mov
mov
dec
mov
into
jne
add
inc
out
jne
push
mov
nop
daa
cmc
xchg
jl
xchg
mov
into
push
cs
subb
dec
push
cld
cmp
xchg
call
and
push
aam
xor
xchg
push
fwait
xchg
ja
jle
cmp
divl
and
loope
idivb
or
add
push
addr16
js
js
stc
pop
andl
or
xor
rcrl
xchg
fs
jnp
inc
std
push
pusha
push
push
xchg
pushf
jge
xor
stos
es
int3
and
push
scas
and
les
cmp
data16
fsubrs
pop
and
aaa
inc
sahf
lea
lock
test
mov
aam
mov
push
and
jae
jge
push
jo
out
mov
cmp
xor
es
dec
inc
inc
xchg
dec
cmp
loope
imul
xchg
inc
cmpsl
mov
xor
rcll
lods
out
outsb
bound
xchg
ret
gs
mov
or
pop
incb
xor
add
dec
inc
sub
push
into
imul
xchg
rolb
sti
gs
and
jge
jecxz
out
or
inc
pop
adc
adc
push
push
loop
dec
hlt
xchg
aaa
mov
in
shr
cmp
and
and
sub
je
ds
jns
cmp
mov
jl
adc
jp
inc
addr16
dec
jo
inc
test
push
cs
mov
push
dec
push
aaa
repz
or
shl
loopne
and
mov
jg
pop
mov
xchg
add
mov
imull
loopne,pn
or
cmpl
sahf
add
cmp
sub
xlat
int
cld
cmc
int
sbbb
lret
jb
ja
xor
jmp
cmpsb
xor
sub
sbb
dec
fwait
sub
xorb
dec
pop
mov
sarb
sbb
xor
lock
sub
xor
jg
mov
mov
mov
cmc
pop
cltd
or
jg
sub
push
lods
push
aad
inc
mov
xor
mov
popf
clc
adcb
shrb
js
mov
data16
fildl
jb
lods
dec
nop
dec
mov
icebp
pop
xchg
lock
mov
xlat
shll
mov
xor
cld
cld
stc
cmp
pushf
scas
xchg
push
faddl
movsl
xchg
jge
xor
cwtl
inc
sahf
pop
mov
mov
lods
xchg
leave
loope
shrb
rcrb
xchg
xchg
ds
cltd
xchg
cld
inc
inc
lahf
adc
mov
loopne
dec
mov
jecxz
xor
xor
sahf
out
mov
mov
scas
xchg
jno
jb
rclb
movsl
movsb
xor
gs
and
daa
mov
pop
mov
stos
jb
push
movsl
ret
mov
add
int
in
dec
push
xchg
mov
das
push
mov
lods
xor
outsb
inc
mov
and
push
rorl
orl
nop
test
xchg
lods
fs
jle
lahf
in
repnz
mov
mov
les
jp
push
nop
cmp
mov
data16
push
push
cmp
mov
sub
scas
sub
mov
in
jle
pop
xchg
dec
pop
or
and
aam
mov
dec
adc
adc
jb
jnp
imul
outsb
jl
sbb
pop
call
inc
inc
xlat
cmp
out
jb
scas
cmp
push
adc
faddl
ret
addl
pop
lods
fdivrp
sub
test
cmpsl
sub
sahf
xchg
scas
xor
sahf
jno
add
shll
or
fcmovbe
dec
lock
sbb
dec
insl
dec
cld
add
cmp
adc
ja
and
test
stos
mov
xor
mov
stc
cmpsl
sbb
xchg
sbb
cld
add
insb
push
inc
xor
jmp
jne
mov
movsb
lods
mov
mov
clc
inc
pop
jae
test
cltd
pop
cmp
xor
das
out
test
dec
adcl
mov
sbb
mov
pop
xor
imul
mov
ss
aaa
loope
pop
pop
sub
inc
dec
add
filds
mov
adc
in
inc
add
loop
push
push
xchg
les
loopne
ret
aad
mov
push
or
lods
jmp
pop
jmp
adc
add
or
mov
inc
xchg
xchg
pop
and
inc
push
inc
jb
jle
push
jmp
inc
mov
cli
or
and
lcall
mov
push
xchg
sahf
lock
daa
mov
out
cmp
and
jge
jae
lret
in
lret
retw
test
sbb
out
das
mov
cwtl
aaa
jne
and
roll
mov
bound
mov
sub
mov
mov
xchg
push
aas
push
pop
fldcw
loopne
testl
inc
shrb
cmc
mov
and
sbbb
and
mov
aaa
clc
dec
cs
xor
int3
adc
pop
ja
dec
cmp
sbb
fnstcw
insl
sbb
jl
mov
shrl
scas
dec
pop
push
jne
xchg
loopne
cmp
mov
cmpl
ds
push
xchg
es
mov
iret
inc
mov
inc
leave
outsb
outsl
xchg
inc
or
mov
pop
pop
xchg
xor
call
outsb
adc
inc
xchg
jbe
jmp
hlt
mov
fnstcw
cmpps
adc
out
mov
cmc
lahf
sub
rcrl
in
in
adc
adc
mov
repnz
scas
jl
in
lea
mov
test
add
lock
mov
jne
fwait
arpl
add
and
lcall
dec
mov
clc
adc
iret
cmp
pop
fxch
sbb
fsub
out
adc
inc
cmpsl
cmp
ret
fwait
cmpsl
jnp
lds
inc
bound
lret
adc
push
lret
dec
mov
sti
mov
fstpl
inc
mov
or
dec
push
sbb
and
jmp
mov
mov
cmpsb
pusha
push
adc
flds
pop
js
test
mov
repnz
sahf
test
mov
xchg
sbb
and
movsl
add
xlat
cmp
or
cmp
or
dec
divb
nop
xchg
repz
pop
clc
jae
push
dec
mov
or
jo
xchg
stos
xor
pop
repnz
fistpll
imul
lret
or
jge
fstpt
lock
call
data16
mov
sub
daa
adc
pop
dec
lret
fisttps
sbb
out
test
and
sbb
add
push
out
div
negl
fstps
in
loopne
jle
and
insb
lods
or
cmp
pop
gs
frstor
jge
je
lret
push
sub
jno
scas
scas
fldenv
sub
je
pand
xchg
int3
dec
mov
movsb
cmp
das
pop
dec
stc
xor
call
jecxz
sar
jno,pn
and
fnstenv
es
dec
lret
push
adc
out
push
cmovs
imul
pop
xchg
ljmp
mov
les
dec
imul
jl
dec
mov
test
xor
fadds
sahf
sbb
cmp
sbb
jge
je
into
pop
push
xchg
fldt
sti
test
mov
inc
jb
rcl
dec
lahf
fdivs
test
cmp
dec
xor
call
mov
and
pop
test
jecxz
or
adcl
in
lods
jp
add
adc
scas
out
inc
andb
ret
mov
mov
add
scas
push
cmp
shrb
push
iret
cmpsb
inc
push
xchg
fsub
out
outsb
out
mov
pop
fnsave
mov
aad
adc
add
aas
dec
leave
adcb
popf
pusha
or
mov
movsl
jo
cmp
outsl
pop
sbb
pop
lcall
divl
dec
lods
lods
xchg
fadd
out
stos
inc
dec
sub
inc
pop
inc
xlat
cmc
pusha
sub
stos
dec
pop
push
in
mov
add
push
fistpl
cmp
add
mov
and
in
dec
aaa
push
xor
mov
rclb
lcall
lret
idivb
test
xchg
jo
hlt
inc
mov
aad
sbb
enter
loopne
xchg
mov
aam
or
mov
dec
or
pop
xor
out
les
and
xor
fdiv
xor
sbb
cld
sbb
cmp
pop
imul
mov
in
push
mov
shlb
out
ret
push
jbe
jp
mov
mov
cmp
sbb
lahf
or
decl
ss
sbb
or
adc
xchg
push
sub
add
in
lret
push
in
das
sub
push
ret
in
adc
jno
mov
sub
dec
add
aaa
push
xchg
nop
ja
bound
pop
int
push
int
sub
pop
and
xchg
xor
data16
adc
lds
add
cmp
xchg
sbb
outsb
ror
mov
push
mov
mov
iret
imul
cld
xchg
push
pop
dec
lds
xchg
cmp
xchg
mov
dec
imul
ja
adc
dec
out
sub
or
adc
mov
fcompl
test
add
adc
sbb
bound
jb
lods
sbb
adc
ljmp
mov
sub
leavew
push
push
cmp
outsl
in
sbb
sub
std
add
nop
rol
daa
jmp
or
movsb
test
xor
lahf
iret
push
xchg
mov
inc
rcll
and
int3
xor
sbb
mov
sub
sub
xor
scas
adc
adc
mov
cld
cs
add
push
xor
xchg
mov
fstpt
and
fcoml
hlt
pop
aam
xchg
scas
cmp
cmpsb
test
clc
xchg
lret
dec
mov
lcall
sbb
icebp
fnclex
leave
leave
xchg
addr16
jecxz
jp
out
xor
mov
dec
imul
ljmp
mov
jl
imul
sbb
cltd
pop
mov
mov
stos
or
inc
mov
pop
push
mov
test
andb
xor
int
cld
ss
mov
push
les
fs
jbe
outsl
inc
lret
add
pop
push
scas
sub
xlat
imul
push
insl
cmpsl
adc
lea
mov
or
inc
and
add
push
dec
enter
incb
sbb
daa
jne
hlt
lock
cmp
push
iret
lods
xchg
push
mov
jecxz
ja
decb
inc
xchg
xchg
mov
jns
lret
dec
mov
pop
cld
inc
adc
dec
adc
fnsave
cmpsb
push
mov
inc
pop
sbb
push
rorb
dec
mov
xchg
enter
cmp
push
push
jnp
in
jae
sbb
sahf
test
push
loopne
mov
xchg
adc
sti
pop
adc
clc
pop
lods
shll
pop
xor
jo
sbb
jbe
movb
add
adc
push
aad
sub
popa
inc
adc
jb
mov
pop
pop
push
dec
hlt
dec
int3
insl
movsb
fwait
add
dec
mov
jnp
addb
mov
or
cmpb
xchg
jecxz
or
mov
ss
push
lock
jle
pop
sbb
adc
into
dec
xor
add
imul
adc
adc
insb
sbb
and
popf
sbbb
lods
add
inc
pop
adcb
into
fchs
or
dec
fsqrt
or
stos
fidivs
loopne
cmp
pushf
mov
lea
lea
out
mov
dec
test
scas
cmp
cmpsl
imul
sbb
cld
inc
pusha
dec
lods
popf
adc
daa
mov
xor
es
mov
cmp
pop
cmpsl
stos
popf
lcall
mov
jnp
aam
movsb
push
dec
lret
or
or
push
push
out
pusha
jnp
cld
divb
mov
mov
inc
mov
rcrb
movsl
mov
adc
sbb
push
insl
out
daa
and
push
push
mov
loope
dec
lcall
out
shr
sbb
pusha
test
arpl
sbb
mov
inc
adc
and
inc
cmp
mov
add
and
jmp
add
out
push
pop
pop
scas
xchg
out
mov
inc
jne
jne
div
idivb
cli
xchg
das
subl
add
xor
jns
add
repz
cmp
stos
inc
jns
sub
das
inc
cld
mov
ret
or
add
or
cmc
fsubrl
or
cld
test
jb
and
movsb
add
jnp
xor
lods
add
xlat
repnz
lret
and
add
sub
lods
push
sti
gs
mov
inc
scas
iret
or
inc
push
add
pop
cmp
mov
cmp
mov
dec
stc
pop
inc
add
ljmp
divb
test
addr16
cs
int3
cmp
loopne
adc
xchg
cmp
add
fstl
mov
lret
mov
mov
add
in
xor
mov
cltd
popf
cltd
mov
mov
pop
sbb
push
sub
outsl
adcl
repnz
adc
insl
int3
inc
sbb
lock
insb
push
jb
pop
xor
push
jno
negl
imul
xchg
test
add
pop
incl
outsl
adc
and
cmp
lods
inc
dec
loopne
inc
lea
lods
data16
fwait
adc
and
push
pop
in
test
imul
jnp
mov
add
jge
fcompl
dec
adc
push
lods
xor
mov
popa
ror
lods
mov
test
outsb
jmp
fcmovne
or
adc
cmp
les
out
rorl
and
out
movsl
and
sbb
and
dec
daa
fcmovnu
icebp
xlat
jle
mov
cmp
or
hlt
cmc
pop
lahf
and
jmp
push
cld
mov
cwtl
stos
sbb
mov
stc
lock
cs
adc
mov
sbbl
ror
jmp
hlt
into
fs
pop
mov
clc
cwtl
lea
xchg
fcomi
icebp
ljmp
mov
pusha
adc
pop
in
jno
data16
pop
fdecstp
push
push
push
clc
push
mov
leave
inc
push
pusha
lock
loopnew
or
mov
mov
xchg
sub
dec
scas
mov
test
pop
jo
cmp
daa
imul
gs
cmp
fwait
or
test
test
movb
lret
fcmovb
sbb
adc
test
outsl
into
xor
loopne
adc
out
cmp
cmc
push
add
sbb
mov
mov
shl
add
dec
dec
jle
repz
xchg
and
sub
xlat
push
aam
xlat
sub
mov
xor
push
xor
inc
enter
sub
aam
sbb
push
add
sbbb
cwtl
or
adc
adc
xlat
jnp
push
and
push
pop
or
pop
lods
out
pop
fwait
mov
and
ljmp
std
pushf
pop
popa
sub
into
sti
dec
data16
loopne
push
data16
loope
test
in
clc
loop
sub
jmp
adc
repz
mov
and
xor
add
dec
fwait
insl
cwtl
xchg
nop
and
fldenv
out
nop
aam
repz
mov
push
mov
fadd
das
mulb
imul
jle
push
imul
cmpsb
sbb
hlt
adc
test
das
andl
imul
adc
repnz
mov
pusha
adc
mov
mov
roll
push
ror
leave
sub
lcall
inc
xchg
xor
lahf
inc
sub
sub
movsb
xor
jl
sbb
test
xchg
dec
sub
push
imul
and
jle
cli
aam
adc
adc
aaa
pop
divps
jae
stos
lods
dec
xchg
imul
out
rclb
les
pop
call
xor
push
cmpsl
dec
push
jbe
xchg
loopne
mov
cmc
sbb
les
jae
cmp
loop
adc
push
and
xchg
adc
push
inc
clc
jmp
mov
out
lret
loope
int
cmp
sahf
mov
add
dec
pop
mov
push
mov
mov
mov
mov
dec
adc
sub
shlb
push
js
hlt
xor
sub
imul
xchg
pusha
xor
loopne
cmc
movsb
push
int3
inc
lret
cmp
mov
in
out
and
fwait
add
pop
mov
add
pop
fcoml
jp
inc
mov
dec
mov
pop
rorl
add
sub
nop
into
xchg
stc
ret
push
dec
icebp
mov
push
lea
add
xchg
bound
repz
loopne
and
pop
or
pop
dec
push
push
notb
dec
add
movsl
xor
sub
into
or
shrb
inc
xor
push
push
inc
inc
adc
or
mov
sub
push
inc
lds
push
lahf
push
fisubrs
pop
dec
adc
sbbl
add
xchg
mov
ret
insl
cwtl
add
mov
outsl
adc
and
fbld
and
lods
jp
je
jns
inc
sub
sbb
and
jne
xor
push
fstl
push
mov
and
dec
sahf
lret
or
push
pop
mov
daa
sub
mov
dec
inc
push
out
scas
dec
insl
hlt
fcoms
mov
insb
inc
rcrl
and
mov
fidivs
sarb
test
out
adc
inc
popf
mov
popf
fisttpl
sarl
xor
mov
stos
cmp
dec
cwtl
pushf
mov
fs
incl
jb
or
jo
test
int3
cmp
jo
and
movsl
and
add
shl
out
es
dec
jmp
mov
or
aaa
jge
and
ja
sbb
leave
pop
xchg
push
bound
sbb
in
jo
mov
cld
sbb
jno
dec
dec
movsb
and
mov
jno
jg
bnd
mov
jo
add
xchg
fldl
mov
inc
xor
popa
pop
mov
mulb
mov
mov
sub
push
sub
or
mov
inc
cmpsl
sarl
pusha
into
rcrl
and
mov
or
fmuls
rorb
cs
imul
push
add
fisttps
add
cld
cmp
jae
outsl
sub
popa
inc
push
in
es
xchg
adc
sub
call
cli
jns
pop
lahf
dec
insb
cld
xchg
push
inc
subb
cmp
pushf
pusha
ja
pusha
aaa
sbb
xor
inc
fstpt
mov
test
sbb
xlat
pop
jae
xor
out
test
lcall
adc
mov
pop
mov
je
pop
out
mov
or
cmp
push
mov
sbb
pop
cmp
mov
rcl
cli
dec
push
imul
ficompl
loopne
pop
fneni(8087
jge
fisubrs
xor
jne
or
std
in
int3
sub
outsl
ja
or
lahf
mov
call
pushw
lea
mov
mov
adc
pushl
xor
pop
xor
jae
lahf
test
lcall
and
js
addl
bound
in
ljmp
mov
ficoml
sub
imul
test
xbegin
dec
std
sahf
test
fcmove
hlt
stos
inc
ret
jecxz
movsl
adc
inc
imul
jnp
mov
push
push
lock
shrb
xor
call
inc
loop
or
jmp
jmp
movb
filds
inc
cli
pop
fistpl
inc
mov
ret
test
fs
mov
sbb
sbb
sub
mov
jmp
bound
orb
lret
outsl
lods
mov
push
mov
in
xchg
dec
xchg
mov
push
js
xchg
push
or
sub
jnp
popf
inc
fs
aaa
xchg
mov
push
outsl
mov
mov
ret
imul
aas
cmpsl
aas
fmuls
sbb
leave
addr16
insb
and
dec
mov
and
cmp
sti
stos
icebp
and
cs
xchg
fbstp
sub
faddl
loopne
sbb
mov
xor
jnp
xlat
mov
stos
jl
fdivr
pop
and
push
mov
dec
and
xor
in
ret
in
nop
xchg
loop
add
jnp
ret
add
icebp
adc
loop
mov
or
sbb
dec
push
lods
xchg
movsl
je
sbb
cmpsl
pop
lock
pop
mov
pop
out
push
sar
lock
pusha
es
sbb
sti
repz
push
add
cmpsb
push
mov
push
out
add
in
push
arpl
loop
neg
dec
mov
cmp
and
jmp
dec
shlb
xchg
fs
ds
push
and
xchg
imul
addr16
movsl
dec
aas
xchg
xchg
daa
sbb
xchg
jns
fcomps
cmp
mov
stc
out
push
mov
xor
outsl
icebp
dec
jmp
sarl
shlb
into
sbb
in
sbb
xlat
add
std
inc
dec
push
out
movsb
push
rclb
pop
in
mov
cld
mov
mov
leave
sbb
jge
pop
call
or
pop
aaa
cmp
xchg
add
add
fcompl
fists
lods
jl
pushf
xor
mov
pop
loopne
cmpsb
sbb
cmp
ret
pop
jmp
xchg
fistl
jle
mov
test
jl
xor
lret
cwtl
inc
popf
dec
outsl
inc
xchg
push
mov
mov
sarb
leave
pop
lods
call
inc
dec
in
pushf
mov
in
jnp
pop
and
insl
ficoms
cwtl
ret
sbb
sbb
xchg
scas
fisttps
mov
add
loopne
cmp
and
and
mov
fmulp
repz
leave
add
cmp
neg
xchg
mov
int
gs
jg
pop
adc
xorl
and
cmp
cmp
jns
scas
dec
aam
push
mov
mov
insl
mov
xchg
jno
insb
adc
adc
xlat
mov
fwait
cmpl
pop
sahf
mov
notl
mov
add
mov
mov
xor
sbbl
jge
push
mov
nop
jno
inc
rcrb
stos
lret
mov
mov
fisttpl
add
cld
xor
shld
lock
aad
mov
jmp
enter
mulb
outsl
cld
cmp
arpl
sbbb
pop
repnz
mov
dec
cli
push
pop
cli
sbb
shl
mov
jbe
rcrl
ja
pop
sbb
imul
push
jmp
cmp
test
imull
add
mov
cs
in
inc
cs
pushf
sahf
push
insb
sub
pop
out
xchg
out
imul
or
sarl
cmp
sub
sub
add
jmp
data16
jg
pop
orl
repz
subl
pop
cld
and
popa
sahf
into
movb
pop
aad
jl
xchg
test
mov
mov
into
jp
jmp
clc
push
adc
cmpsl
jmp
adc
mov
pop
cmp
in
jl
loop
push
js
in
mov
ljmp
mov
push
mov
xchg
into
or
or
jns
aaa
jae
xor
or
mov
aaa
aad
adcb
loopne
inc
push
xorl
jmp
fdivrl
and
lcall
and
mov
mov
mov
sbb
jae
call
or
xchg
sahf
mov
cltd
inc
jg
sysenter
push
inc
rcr
dec
dec
xchg
shlb
cld
imul
jne
je
outsl
mov
rclb
mov
push
pop
loopne
scas
xchg
cwtl
jmp
add
mov
shll
jle
jmp
and
xor
adc
xlat
insl
outsl
push
jl
sub
sbb
dec
sbb
mov
test
loope
sbb
dec
pop
xchg
mov
xchg
or
xchg
imul
test
pop
into
dec
jb
xor
inc
adcl
shll
subl
ret
or
add
cld
inc
test
ss
jno
test
fbld
or
rcrb
in
fbld
xchg
loope
add
push
mov
inc
dec
xlat
mov
pusha
inc
jge
lret
adc
js
cmp
add
pop
pop
cmp
fwait
ss
iret
decb
icebp
cli
negl
jmp
nop
pushf
fnstcw
imul
insb
nop
add
loopne
mull
data16
pop
test
pusha
adc
inc
movlps
mov
pop
ret
pop
rorb
out
jbe
cmpsb
dec
sub
adc
inc
cmp
hlt
cmpsl
movsl
push
mov
push
jl
xchg
push
add
pop
pop
lret
ret
xchg
or
jno
push
pop
lret
push
shl
adc
stos
dec
pop
in
mov
ss
out
push
incl
mov
mov
out
fstps
xchg
ds
cs
pop
and
in
sbb
push
mov
mov
cmp
mov
ficomps
sbb
loopne
scas
addr16
bound
insb
int
and
adc
lret
fs
ljmp
shlb
jnp
imull
sti
in
and
data16
dec
mov
int
mov
jecxz
dec
das
lods
stos
leave
or
mov
out
fisubrs
add
iret
jbe
push
mov
push
push
cs
jno
mov
xchg
xchg
xor
cmpsb
mov
mov
adc
cmc
cmp
mov
stos
out
or
sbb
les
repz
push
mov
das
ret
pushf
or
jo
scas
jnp
int3
mov
add
pop
sti
sub
int
insb
jno
addr16
xor
jge
push
call
bound
std
and
lea
aaa
mov
and
add
sub
sub
in
lock
mov
push
push
ds
jge
add
addb
popa
mov
cld
jmp
xor
jecxz
mov
ja
xchg
sarb
movl
mov
ficoml
jecxz
call
movsl
or
andl
xorl
mov
xor
xor
pop
loopne
cwtl
and
jns
sub
mov
mov
mov
cli
pop
repz
pop
mull
movsb
push
or
ret
imul
pop
lret
sbb
jne
adc
jno
push
push
out
push
shll
mov
dec
loopne
sub
pop
lea
add
imul
divl
mov
mov
add
test
pusha
in
push
fs
bound
or
orl
fiaddl
xchg
mov
sub
push
ret
faddl
jecxz
xchg
and
push
inc
pop
inc
mov
dec
inc
pop
addr16
jg
xchg
push
rol
insl
push
outsb
push
test
push
in
hlt
add
fldenv
sbb
sbb
popf
mov
cli
jecxz
jmp
in
fistpl
pop
xor
push
push
fistpll
mov
add
pop
mov
dec
xor
sti
mov
mov
lcall
pop
jmp
je
mov
xor
xchg
jmp
push
push
out
lret
sub
fstpt
sub
jge
jo
sbb
aas
test
in
sbb
fs
pop
cs
sbb
test
xchg
adc
mov
inc
int3
push
sti
mov
rcrl
lock
negl
xor
sbb
in
rcrl
adc
adc
cmpsl
mov
xchg
lods
dec
xchg
pop
mov
int
adc
fadds
sbb
test
xchg
and
dec
mov
pop
outsb
xchg
movsb
fcoml
jbe
dec
fidivrs
aas
rolb
xchg
aas
sbb
mov
lahf
add
xchg
shrl
pop
xchg
icebp
stos
movb
cwtl
push
cmp
jne
sub
xchg
add
pop
push
insl
and
scas
data16
push
cmpsl
daa
lahf
cmp
es
mov
in
push
xchg
cmp
movsb
jns
xchg
add
imul
inc
jbe
inc
shll
jmp
movsl
xchg
adc
mov
loop
push
popa
sub
or
or
sub
jbe
rclb
adc
or
jnp
push
pop
aad
nop
fwait
pusha
add
push
ljmp
pop
xorb
xchg
leave
pop
arpl
dec
or
incb
mov
in
iret
icebp
fsts
ja
dec
mov
sbb
out
dec
add
sbb
pushf
int
push
sbb
push
mov
pop
xlat
lods
lcall
lcall
pop
push
mov
popl
fists
leave
into
lret
sub
sbb
adc
es
or
inc
inc
not
mov
inc
xchg
pop
pop
popa
insl
insb
cwtl
jle
cmp
lret
mov
jo
cltd
fistl
adc
aam
popa
repz
cmp
mov
ja
imul
push
mov
or
add
xchg
mov
push
jge
add
test
xor
ss
mov
rcl
iret
ja
adc
sahf
cmp
fisubrs
xor
loop
fisttps
pop
jecxz
add
dec
cli
sarl
fildll
fucomi
push
and
and
ret
inc
xor
xor
adcb
data16
movsl
jl
int
fstl
dec
mov
sbb
insb
mov
fwait
jns
fst
ljmp
leave
sub
mov
cs
dec
push
shlb
lds
cmp
mov
test
sub
es
xorb
dec
mov
ss
les
fwait
lret
pusha
xlat
aam
dec
cmc
ficomps
fsubs
stos
xor
jle
and
mov
cmp
in
sti
inc
ficoml
mov
sub
cmp
sub
adcb
cmp
cli
cs
and
aaa
and
mov
add
test
ja
stos
jl,pn
mov
sbb
int3
adc
mov
rcl
cmp
sub
or
lcall
std
stos
mov
add
pop
out
ficoms
andb
aad
call
sub
inc
popf
jge
lea
ss
sbb
mov
fcmovnb
mov
dec
or
pop
loop
out
fmulp
xchg
dec
add
or
add
pop
clc
iret
daa
rol
jecxz
lret
inc
pop
jmp
in
popa
imul
rcll
pop
out
pop
scas
and
push
dec
jg
mov
loope
sbb
jbe
pop
fwait
cmc
ds
data16
xchg
sub
cs
fwait
popf
mov
mov
inc
pop
loope
lods
lods
int
dec
shlb
inc
fs
clc
imul
mov
scas
mov
pop
ss
cwtl
mov
push
fnstcw
data16
movl
addr16
xor
mov
adc
loop
dec
das
pushf
adc
inc
int
mov
inc
xor
fisttpl
sub
stos
xor
les
lock
ljmp
lahf
pop
mov
fwait
mov
sub
test
jmp
cmpsb
adc
inc
xchg
inc
fnstenv
lea
fyl2xp1
subb
cwtl
push
xor
add
nop
inc
leave
push
repnz
cmp
outsb
dec
xchg
leave
pmullw
jae
fiaddl
mov
dec
cmc
sub
test
scas
and
or
sbb
nop
outsl
or
dec
adc
les
rcl
je
loope
test
dec
ljmp
sbb
fisttpll
daa
jne
push
adc
jp
mov
mov
nop
sub
clc
inc
xlat
mov
xchg
inc
push
mov
pop
fistps
ja
pop
mov
out
ljmp
push
mov
in
stc
mov
xor
sub
pusha
addr16
pop
mov
pop
jmp
mov
sbb
mov
test
mov
sbb
sbb
pop
loop
rclb
cmc
sarw
mov
cs
movsb
mov
test
cmp
inc
xor
cld
test
jb
push
xchg
sub
pop
in
xor
mov
sub
arpl
pop
mov
or
sbb
sub
push
lock
mov
cmp
lods
daa
sti
aam
jne
lock
or
ficoms
fidivs
cmp
inc
mov
stc
and
jg
loope
mov
shll
cwtl
dec
sub
mov
xchg
cwtl
jle
mov
jmp
adc
sbb
lahf
enter
add
stc
int3
adc
dec
outsl
test
add
in
arpl
mov
mov
fld
sti
fcmovu
mov
je
dec
mov
addr16
iret
ss
ret
sbb
add
sbb
mov
pop
cmc
fwait
daa
andl
cs
sbb
mov
jnp
mov
sbb
cmp
ret
outsl
jmp
fcoml
mov
inc
mov
xchg
cmp
and
int
pop
and
mov
cmp
sbb
inc
clc
aas
stos
cmp
ret
fidivs
test
and
fcmovne
cld
lds
hlt
aad
push
adc
jb
jecxz
rcll
ss
scas
rcll
xlat
mov
inc
mov
daa
in
jbe
in
pop
add
dec
test
push
sbb
ret
outsl
jmp
push
inc
and
pop
mov
sub
pop
stos
stos
mov
std
jge,pt
inc
and
jno
mov
lock
enter
adc
cmc
icebp
popa
insb
loop
arpl
ret
psubb
mov
inc
test
dec
xor
xchg
pop
mov
xor
mov
andl
rcrb
movsl
dec
jno
push
out
push
add
add
push
push
mov
xor
adc
imul
and
inc
out
inc
or
mov
icebp
repz
mov
push
mov
mov
push
dec
aas
add
add
lahf
pop
sbb
aas
sbb
and
mov
adc
loopne
mov
pop
push
xchg
xor
sub
arpl
lea
mov
mov
es
cmpsb
insl
ja
sbb
mov
cltd
mov
shr
lret
adc
lea
jne
xor
push
xchg
jns
inc
xchg
jp
xorb
inc
lret
test
lea
enter
loop
lock
scas
mov
mov
add
or
mov
jecxz
mov
testb
push
test
stos
push
loopne
adc
push
insl
loopw
sahf
pop
pop
mov
dec
mov
hlt
cwtl
inc
add
popf
jbe
insl
sub
fdivs
mov
push
shll
call
add
xchg
jae
and
rorb
fs
cltd
mov
xor
push
inc
ds
fs
push
je
mov
cmp
cmp
sbb
push
adc
xchg
ja
nop
jg
pop
jecxz
jecxz
cmp
mov
repz
sbb
pop
rclw
movsb
cld
sbb
xor
and
lods
je
je
test
jb
mov
mov
pushf
cmp
fsubr
cld
sti
fmul
packuswb
int
jbe
cmp
fnstsw
pop
push
jp
xchg
cmpsl
cltd
fwait
sahf
lcall
xchg
in
std
lret
aas
pop
addr16
std
xor
mov
xchg
add
push
aas
das
js
pop
scas
add
cmc
ds
or
sbb
daa
cmp
jg
cmpsb
addr16
hlt
add
push
idiv
cmc
fcomps
jmp
imul
adc
clc
rclb
nop
pop
scas
test
sub
testb
insl
push
xlat
sti
cmp
push
push
bound
cmpb
cmpsb
inc
push
ds
adc
cmc
pop
cmc
or
clc
push
fdivs
inc
or
sub
dec
mov
pop
in
cmp
adc
jg
inc
addr16
pop
sti
inc
mov
push
cs
or
adc
pop
push
cwtl
iret
push
push
push
test
loopne
add
xchg
cmp
mov
aaa
mov
in
push
mov
jle
push
mov
jp
mov
cld
add
mov
inc
outsl
lea
sbb
cmp
push
sti
dec
sbb
fstl
out
mov
cmp
int
cmp
clc
lock
dec
xlat
pop
sbb
enter
lcall
push
lods
icebp
mov
cmp
stc
lea
arpl
sbb
add
sub
sbb
jno
mov
adcb
stc
lea
add
cmp
rcrb
dec
daa
outsl
loop
mov
jnp
cmpsl
jmp
sti
push
adc
lds
lret
mov
pusha
cld
sub
int3
lret
addb
mov
out
jno
shrl
stos
cmp
pop
cmpsl
leave
push
lds
sbb
in
push
mov
in
fnstcw
xchg
lret
mov
push
lahf
pop
add
or
out
out
mov
push
mov
sub
cmc
jp
lret
xlat
lea
in
dec
lret
push
jbe
test
insl
movsb
or
add
ja
lret
scas
pop
outsl
int3
jl
cmp
and
xlat
xlat
xor
cli
iret
std
test
push
ljmp
sbb
imul
pushf
call
mov
mov
mov
incl
test
call
sti
out
enter
add
ret
insl
addl
mov
imul
mov
jecxz
test
jmp
icebp
dec
fildl
cli
pop
imull
movsl
cli
mov
xchg
mov
or
jle
mov
out
sub
push
fwait
push
mov
inc
push
notb
ss
sbb
frstor
shll
push
lods
repz
xlat
pop
cmc
add
lods
test
aad
lea
mov
fisttpll
in
xchg
xor
add
dec
mov
test
fldenv
pop
dec
jns
mov
inc
xchg
test
mov
ret
pop
xor
pop
out
cmp
call
out
lock
push
sbb
mov
aaa
testl
fnstsw
dec
int
sbb
cmpb
jmp
sti
in
std
cmp
ret
and
add
notl
jmp
sub
or
mov
pushf
loope
jg
into
imulb
add
lock
fnstenv
shrb
xchg
lret
icebp
sbb
xor
divl
andb
xchg
ret
adc
jno
insl
push
sub
popf
aad
cmp
outsl
xor
pop
loop
mov
pop
enter
push
pop
pop
mov
enter
jbe
xor
mov
daa
sbb
movsl
and
fisubrs
mov
pop
loope
sbb
jae
cmpsl
push
sbb
jae
mov
jecxz
sub
into
out
scas
mov
sub
sub
mov
jp
out
ja
add
adc
push
movsl
movsl
mov
lods
and
bound
xlat
xor
pusha
iret
das
pop
in
roll
jne
pop
in
popa
pop
mov
jmp
or
mov
push
sarb
fisttpll
rorl
es
fdivrl
and
pop
push
jnp
adc
mov
push
mov
inc
fisttps
push
push
cmc
mov
hlt
mov
mov
negl
jae
cmp
iret
pusha
cmp
push
xlat
mov
or
fidivrl
inc
rorl
push
or
stos
fs
movsb
incl
fldl
jp
fwait
mov
mov
clc
in
pusha
movsl
and
xchg
sar
pop
pushf
test
adc
pop
pop
mov
cmc
mov
lahf
sub
call
sti
mov
add
cwtl
or
pushf
test
cmc
jns
in
or
inc
into
in
jb
mov
ss
mov
add
std
jbe
cmc
out
out
jno
xlat
cmpsb
adc
repz
and
outsb
pop
decl
cmp
xchg
mov
loop
loopne
cmp
les
ljmp
jns
iret
fstpt
das
pop
sub
cmpsb
stc
fwait
rcrb
cs
call
imul
and
pop
lret
decl
cmp
aad
sub
outsb
mov
popfw
bound
mov
push
fsubrp
xchg
movsb
out
test
dec
jno
imul
loop
mul
stc
sub
les
inc
adc
mov
mov
add
out
mov
and
dec
mov
iret
cmpsl
lret
xor
insb
cld
inc
and
pop
enter
stc
inc
mov
xor
dec
insl
xchg
pop
int
loop
xor
ja,pn
outsb
cmp
imul
add
lahf
pop
mov
mov
inc
pushf
aad
dec
repz
cld
mov
in
cli
adc
lds
rorb
enter
and
subl
cs
or
lahf
int
cltd
xor
mov
es
pop
lods
ss
cmp
sbb
movsl
leave
mov
xchg
ficoml
in
in
pop
pusha
arpl
and
imul
sub
inc
sbb
adc
insl
enter
jbe
lods
out
dec
gs
xor
into
repz
int3
std
test
test
pop
mov
cmc
sub
call
divl
dec
frstor
inc
movsl
jecxz
int3
out
imul
test
and
outsl
jns
cmpsb
stos
dec
ljmp
mov
rorb
mov
dec
fsubrl
or
ret
mov
hlt
mov
lds
fisubl
add
divl
outsl
dec
enter
add
sub
cmp
and
leave
xchg
pop
icebp
xchg
in
shll
mov
ljmpw
pop
ficoms
sbb
dec
cmp
cmp
xchg
xlat
add
or
insb
mov
andb
in
cltd
xor
mov
jp
dec
out
scas
fists
mov
aaa
jb
lcall
cmp
mov
push
sub
mov
dec
test
rep
ds
pusha
mov
jecxz
daa
and
inc
jo
lahf
cwtl
jnp
ds
fdivl
js
lahf
movsb
push
cmp
fadd
jno
bound
stos
push
sub
mov
mov
xlat
jmp
lcall
iret
into
int3
shr
mov
jl
dec
dec
mov
pop
aaa
fidivl
jno
jne
lea
or
stos
lods
jbe
add
cltd
mov
adcl
push
sbb
xor
xchg
into
push
mov
test
lds
dec
in
push
pop
push
mulb
outsb
leave
adc
stos
lret
mov
pop
cmpsl
ficoms
mov
jb
add
adc
int
imul
iret
sub
pop
popl
or
pop
out
or
sbb
dec
addb
mov
icebp
out
xchg
movsb
pop
jle
nop
mov
ret
inc
pop
adcb
sbb
mov
repz
pop
into
into
pusha
jnp
aad
dec
sub
ret
fidivrl
pop
inc
mov
inc
push
inc
xchg
xor
jg
add
hlt
mov
fstps
jg
cmp
fistpll
pop
pop
and
dec
test
leave
push
adc
sar
sub
push
push
and
cmp
xchg
lahf
jae
dec
lahf
or
int
dec
das
bound
dec
cltd
mov
xchg
aaa
cld
mov
stos
outsb
mov
cmpsb
mov
or
fistpll
add
xchg
sahf
int
mov
xchg
adc
mov
adcb
cmp
cmp
bound
addr16
aam
mov
mov
mov
test
into
aam
pop
in
xchg
xchg
out
push
sub
ljmp
mov
sub
mov
or
arpl
int3
pop
pop
les
hlt
imul
leave
lds
or
lahf
and
roll
jg
insb
out
out
cmpsl
jg
mov
sub
mov
repz
dec
pop
jo
aam
dec
mov
push
pop
enter
jne
dec
adc
xor
movsb
out
insl
dec
add
enter
je
lods
stc
add
stos
rcrb
lds
and
lret
xchg
adc
jbe
aas
sub
popa
push
xchg
mov
push
add
xchg
push
push
loop
sbb
sbb
movsl
out
push
xchg
ret
mov
mov
aas
xor
sub
test
jle
inc
sahf
pop
fisubl
adc
mov
jecxz
cmp
cltd
das
jae
jp
pop
mov
xchg
cmp
ss
xchg
jb
xor
or
enter
or
sbb
jns
xorb
imul
mov
jmp
enter
hlt
leave
push
push
sbb
jle
jo
mov
mov
push
and
imul
jle
lret
cmp
or
lods
mov
outsb
lock
int3
clc
push
push
push
cmp
sbb
mov
or
jmp
icebp
and
push
test
loop
mov
mov
xchg
js
repz
mov
in
cmp
inc
mov
add
test
lahf
and
push
mov
int
insl
je
cmpsl
outsl
inc
mov
stos
insb
hlt
mov
iret
mov
cmp
xor
sarl
xor
scas
sahf
jns
adc
jne
push
jl
push
jl
sub
mov
cmpsb
mov
mov
pop
in
sub
js
and
fucom
cltd
inc
clc
jle
dec
inc
jnp
lcall
pop
in
xchg
pop
dec
jb
pusha
inc
sub
sub
push
jb
jae
jb
pop
dec
scas
in
cwtl
dec
jo
mov
mov
repz
pusha
test
mov
lahf
add
test
dec
imul
and
adc
dec
fs
outsb
call
add
insl
xchg
pop
inc
and
add
shl
jno
stos
cwtl
mov
or
push
test
inc
ficomps
pop
pop
add
or
inc
sbb
sub
and
enter
leave
mov
xorl
jno
xor
in
and
dec
daa
rep
pop
mov
sahf
lcall
cmc
cltd
je
into
es
sahf
xchg
clc
mov
xor
inc
pop
dec
insl
pop
sbb
xor
ds
shlb
dec
push
jnp
pop
inc
adc
dec
jmp
xlat
dec
cmp
movsl
inc
imul
inc
pusha
mov
fsubrl
dec
cmp
adc
clc
jmp
or
jmp
lods
dec
mov
mov
xlat
mov
jp
dec
pop
clc
pop
fdivrp
test
mov
daa
fwait
sub
mov
inc
daa
jle
xchg
xchg
inc
lret
loopne
ret
xchg
jnp
add
hlt
mov
ja
push
xchg
das
push
fbstp
adc
cmpsb
in
pusha
test
imul
or
movsb
sub
xchg
xchg
sub
aad
add
xlat
sub
jge
fcmovnbe
mov
ss
push
sarb
push
xor
cmpsl
sbb
cmpsb
lret
inc
xor
jecxz
mov
stc
mov
scas
stos
fldl
popa
cmp
jnp
pop
inc
cmp
fs
push
cmp
lods
jmp
in
cltd
xchg
insb
leave
nop
popf
sbb
rclb
cli
mov
or
or
mov
xchg
xor
add
insl
or
pop
adc
xchg
sti
rcll
and
in
xchg
mov
pop
push
inc
out
test
jae
dec
test
test
hlt
and
lods
and
push
cli
and
mov
xchg
adcl
loope
sub
pop
lock
addb
pop
mov
sub
push
pushf
shlb
leave
mov
mov
pushf
rcrb
xchg
jb
dec
loope
fcomps
lods
xchg
adc
sub
popf
imul
rclb
scas
adc
fcompp
pop
sbb
xlat
add
mov
dec
jb
cmpsb
lret
sahf
lea
mov
mov
js
add
orl
aaa
inc
aaa
pop
or
test
mov
leave
xchg
xor
leave
or
cmc
sbb
mov
and
fdivrs
mov
push
sub
scas
add
mov
inc
add
rolb
sti
repnz
mov
in
dec
subb
loopne
mov
scas
div
pop
push
insb
hlt
inc
in
push
test
adc
dec
test
lds
xor
xlat
sbb
fsts
pop
rolb
scas
fs
mov
test
rcl
scas
mov
push
lock
imul
int3
cmp
jmp
dec
cmp
ja
orl
dec
sahf
inc
ret
js
jbe
rclb
mov
dec
jmp
outsl
test
or
add
shl
or
cmpsl
mov
call
and
test
or
aas
cmp
mov
mov
out
rcrl
push
push
pop
jmp
xor
cltd
test
in
repz
vunpckhps
xchg
mov
dec
movsb
xchg
mov
push
aaa
push
enter
movsb
loopne
and
inc
stos
test
sub
mov
fsubl
sbb
lss
and
test
fists
jg
addb
shll
test
out
stos
imul
pushf
mov
mov
andb
scas
test
fwait
xchg
outsl
push
push
cmp
ret
js
xlat
sbb
sub
movsl
scas
out
in
pop
add
je
mov
outsb
lds
fdivs
add
mov
cli
xchg
pop
mov
mov
pop
sahf
inc
popa
leave
test
sbb
insl
push
aad
fstpl
data16
jecxz
or
mov
xchg
repz
std
push
add
cmp
orb
add
fs
push
cltd
and
stos
test
mov
jmp
pop
xchg
movsl
lcall
fwait
stc
mov
push
movsb
xor
cmp
push
adcl
jp
cwtl
and
push
and
ret
jnp
out
ds
cmpsl
or
std
out
repz
mov
dec
ljmp
push
addl
mov
inc
mov
inc
jbe
orb
mov
adc
xchg
or
push
dec
idivl
lds
mov
push
out
push
xor
mov
sbb
out
sbb
cli
int
jg
dec
arpl
das
mov
out
cmp
dec
aad
lods
adc
cmpsl
jmp
fidivl
cmpsl
test
cmpsb
lret
rcrb
xchg
jecxz
test
sahf
popa
mov
into
test
push
dec
ret
cld
mov
mov
lea
push
in
fmull
call
das
inc
pop
mov
sub
or
xor
loope
sti
test
icebp
in
pop
jns
pushf
mov
inc
filds
xchg
cltd
jae
mov
push
push
sub
cli
jns
inc
in
stos
pop
andb
rcll
mov
fcomip
jno
mov
sub
adc
push
cmpsb
dec
pop
addr16
or
sbb
xchg
leave
xchg
cli
lods
cwtl
sbb
cmp
xchg
inc
mov
push
push
add
xor
xchg
enter
add
imul
push
and
in
js
add
call
lods
jae
and
jge
insl
pop
cmp
lcall
pusha
lahf
add
lret
or
pop
outsl
sarb
inc
iret
testb
es
cmp
cli
or
jns
in
cwtl
bound
add
leave
fisttps
lea
cmpsb
in
jp
pop
mov
repnz
dec
pop
lds
rol
push
and
push
mov
popf
push
cmpsl
paddsw
cmp
mov
fmuls
cmp
or
repz
xor
roll
jge
push
push
dec
idivl
mov
mov
jno
jae
mov
shlb
xchg
mov
es
cmp
jmp
mov
sub
inc
push
or
adc
or
sub
lods
add
lcall
push
adc
or
xchg
xchg
sub
mov
test
inc
das
ret
and
or
sbb
out
xor
dec
sti
adcb
inc
loop
inc
adc
inc
push
mov
push
repz
mov
bnd
push
fwait
hlt
js
lahf
inc
leave
xorb
push
xlat
scas
gs
push
sbb
mov
dec
xchg
jo,pn
popl
add
mov
jbe
sub
jbe
sbb
lahf
push
mov
mov
xchg
and
xor
out
inc
dec
aam
popa
out
popa
insl
jle
leave
add
jecxz
inc
fimull
mov
jecxz
loopne
or
fmul
fistpl
into
xor
sti
cmc
shl
xlat
inc
sub
movsb
not
push
cmp
sarl
jae
add
addb
inc
fs
sbb
mov
and
ficomps
sub
sti
loopne
stc
mov
push
cmp
cmp
add
imul
push
adc
push
xor
shrb
scas
inc
test
jp
inc
adc
pop
xor
cmp
mov
push
lcall
hlt
mov
xchg
lds
pop
jne
push
add
add
es
in
and
mov
xchg
mov
cmp
outsl
stos
fwait
cmp
sub
in
int3
into
jl
push
add
cmp
pop
lods
mov
bound
push
cmpsl
mov
mov
rcll
test
popa
popa
cmp
cwtl
lret
ret
test
push
jns
mull
cltd
jb
mov
fwait
stc
testl
inc
xchg
cltd
shrl
mov
jae
cld
fwait
out
jle
and
push
test
inc
jmp
iret
inc
pop
sub
inc
js
jns
cmp
inc
outsb
xor
pop
xchg
lock
hlt
inc
pusha
xchg
insl
sti
inc
pop
push
fcmovbe
fwait
inc
jle
andl
mov
mov
inc
sub
test
jb
aam
push
pop
imul
movq
push
in
mov
enter
ss
dec
arpl
dec
rolb
xor
mov
mov
jle
inc
imul
scas
mov
call
out
aad
and
aaa
xlat
out
fistpl
jo
lahf
jl
xchg
xor
pop
mov
sub
je
cmp
cltd
jo
mov
mov
xor
cmp
pushf
push
push
xchg
fidivl
js
inc
or
jb
mov
jno
adc
ds
test
aam
ret
leave
pop
rorl
loope
shlb
fs
aam
out
or
cmc
jmp
dec
xor
fistpl
pop
mov
xor
or
fstpt
push
test
pop
insl
js
pop
data16
and
jmp
pop
stos
lcall
cwtl
add
aad
mov
inc
roll
add
aas
das
rcrl
pop
inc
push
ljmp
xchg
mov
test
and
mov
int
imul
jl
je
cmp
cmpsl
mov
sahf
jge
dec
jo
sbb
movsb
dec
fcompl
push
cwtl
test
out
xor
xchg
add
push
aaa
fcmovnbe
aas
jmp
ss
loop
lea
les
xchg
lahf
ret
jne
pop
fmul
push
jbe
adc
stc
inc
mov
imul
pushf
dec
std
mov
or
stos
mov
gs
add
push
inc
mov
push
sbb
stos
jns
ror
sub
adc
faddp
aam
insb
aad
dec
in
out
push
cld
fisubrs
scas
sub
loop
mov
fcmovu
xchg
add
call
lret
aam
adc
sbb
mov
xor
mov
fdivrs
int3
loope
push
adc
and
scas
in
pop
lcall
cmp
sahf
push
adc
cmp
xor
test
mov
inc
fildll
mov
adc
jnp
dec
push
outsl
aas
test
lahf
jnp
mov
sbb
lret
sub
mov
jbe
pusha
jns
sub
sbb
arpl
fs
arpl
dec
mov
cmpsl
popa
ja
sbb
stos
pop
scas
mov
outsl
cs
in
pop
cmpsb
push
jecxz
fidivl
js
repnz
fsubl
or
mov
loopne
jl
sub
lds
dec
xor
repz
pusha
sub
jns
jmp
enter
testl
jg
test
fs
sti
mov
push
stos
in
push
roll
das
mov
ret
in
xor
je
stos
add
add
mov
push
movsl
sub
out
nop
xor
mov
lahf
dec
repz
mov
in
pop
rorb
dec
icebp
pushf
add
call
mov
mov
xor
popf
pop
sahf
pop
dec
ja
mov
mov
or
xor
popa
sti
fistpll
add
mov
outsl
mov
insl
add
sti
mov
jmp
icebp
mov
push
outsl
fucompp
mov
stc
daa
pop
dec
aad
xor
sub
mov
cmp
loopne
jns
repz
aam
stos
adcb
mov
arpl
jo
adc
inc
xchg
push
cmp
outsl
sbb
scas
pop
inc
mov
lods
adc
pop
ljmp
xchg
cmc
or
dec
and
shr
cmp
fists
aam
nop
int3
lahf
in
jae
sub
aad
add
dec
pop
inc
ficomps
bound
repz
jns
mov
bswap
sbb
test
ja
out
lds
inc
bound
push
in
fdiv
or
push
push
xchg
jne
jno
xlat
dec
jb
ffree
mov
lods
jmp
out
jb
sub
mov
sbb
mov
fistpll
mov
hlt
jnp
cmp
int3
ljmp
ret
pop
cmp
or
cwtl
jno
ret
cmp
aas
mov
movsb
inc
stc
popf
ljmp
mov
or
xorb
adc
mov
adc
loopne
cmp
or
cmp
xor
nop
enter
stos
sbb
jb
ja
scas
add
fwait
lock
pop
dec
ficoms
and
neg
je
out
scas
cli
inc
pushf
xor
mov
adc
shlb
or
lea
std
lahf
addr16
dec
ja
stc
lods
hlt
imul
movsb
out
adc
popa
cld
test
pop
adcb
dec
jecxz
scas
push
mov
add
arpl
rorl
rorl
mov
mov
repz
xchg
mov
cmp
jbe
pop
mov
xchg
push
les
cmp
ficoms
lods
enter
mov
xchg
inc
repz
jb
sub
xor
lahf
lret
in
push
out
mov
stc
pop
je
jg
das
jb
pusha
call
push
xor
cs
xchg
cmpsb
xor
or
in
pop
inc
pop
xor
call
sub
iret
mov
inc
sbb
aas
adc
lock
popa
push
ljmp
testl
dec
pop
jmp
cwtl
xor
incb
jne
pop
repz
lahf
stos
sbb
lds
test
pop
in
push
mov
addr16
pop
cmp
or
mov
inc
or
xlat
outsl
scas
add
ss
addr16
push
add
adc
bound
push
push
cmp
xchg
rclb
jnp
mov
jmp
dec
mov
dec
cmp
add
sbb
adc
test
xor
ret
mov
rolb
mov
hlt
dec
in
push
mov
pop
pop
hlt
adc
or
fcos
stc
daa
hlt
cmc
jns
lahf
push
mov
jmp
cmpsl
sub
inc
mov
xlat
aas
sbb
push
push
inc
inc
mov
and
iret
cwtd
pop
xchg
push
xor
jno
mov
push
inc
mov
jl
testb
test
or
mov
sub
push
xlat
lret
xlat
cmp
int
xchg
push
dec
mov
sub
cmp
out
test
mov
xchg
popa
push
and
adc
lds
lahf
cmc
mov
xor
or
sub
out
roll
cmp
pusha
in
test
lahf
or
xor
pop
arpl
loope
stos
push
leave
or
sub
xor
mov
and
mov
jg
mov
jne
jae
inc
dec
mov
enter
in
inc
push
adc
xor
or
push
sub
cmp
push
mov
cmc
dec
lods
or
pusha
mov
mov
stos
mov
mov
push
movsb
setb
or
pop
dec
pop
call
xchg
add
in
ja
cmp
add
mov
xor
cltd
cmp
aaa
fwait
adc
imulb
mov
lods
inc
cmpsb
in
cmp
push
mov
adc
std
mov
inc
rcrl
mov
hlt
andb
fsubr
xor
arpl
lods
inc
shl
fisubl
mov
jb
jnp
movsl
inc
xchg
add
arpl
inc
pusha
inc
and
jp
int
and
imul
add
add
adc
icebp
sbb
dec
sbb
mov
push
mov
enter
jle
adc
arpl
xchg
loope
rol
inc
in
insl
in
jae
sbb
stos
bound
jo
lock
std
jp
push
adc
inc
shrl
mov
or
push
out
testb
mov
ds
cmp
movsb
aad
out
in
pop
push
cs
lock
pop
rorb
ss
or
inc
loope
xlat
push
add
shrl
push
sti
cmp
xchg
mov
fbstp
test
dec
mov
fwait
movsb
lock
enter
pusha
inc
aas
lock
sbb
xchg
xchg
mov
in
in
push
mov
mov
push
jge
fldl
jnp
inc
ja
std
setp
int
clc
stc
shlb
mov
cmp
add
jmp
lahf
adc
add
pop
inc
adc
jge
leave
insb
sub
lods
adc
sbbl
into
enter
in
test
jno
dec
mov
push
repz
inc
mov
xor
mov
inc
jae
in
jecxz
sbb
xorl
add
aam
jns
stos
add
pop
lret
xor
sub
lods
inc
dec
xchg
jo
and
mov
into
adc
mov
xchg
dec
in
pushf
sarb
push
nop
mov
outsb
test
or
pop
mov
out
pop
ficompl
pop
lock
imulb
mov
loope
cmp
movsl
xchg
xlat
nop
xchg
jp
adc
mov
or
jecxz
jne
pop
pop
repnz
test
jl
mov
popf
scas
xchg
adc
mov
xchg
aaa
mov
mov
call
mov
loopne
mov
loope
sti
adc
push
es
imul
pop
ljmp
pop
mov
and
or
fwait
cmp
mov
in
insb
scas
pop
adc
cli
jb
ds
cwtd
add
dec
xchg
cmp
call
lret
es
lcall
lods
pop
add
hlt
push
dec
mov
stos
lret
xor
push
mov
dec
js
mov
adc
popa
loope
das
sub
and
push
sub
and
jmp
xlat
jno,pt
aad
leave
movsb
mov
mov
test
subl
jnp
or
rcrb
cmpsl
adc
add
add
ss
dec
hlt
push
jo
pop
adc
sbb
pop
or
push
jae
add
addr16
sbbl
dec
test
addr16
push
lahf
push
int3
addr16
pushf
jnp
js
xor
movsb
ficomps
imul
in
imul
and
les
mov
in
sub
daa
sub
lods
jno
lods
popf
sbb
sbb
mov
mov
adc
xchg
iret
insb
rcrl
lods
xor
dec
mov
jle
mov
and
push
sbb
imul
jge
adcl
inc
int
mov
jmp
or
xor
sbb
xchg
daa
mov
insl
out
outsl
aad
jge
cmp
mov
and
mov
icebp
jbe
rclb
ret
mov
and
xchg
mov
scas
cmpsl
adc
xor
iret
mov
xchg
pop
dec
out
test
inc
loope
repz
imul
icebp
insl
or
fstpl
call
dec
test
xchg
and
sbb
mov
fst
sbb
xor
sbb
mov
inc
shlb
pop
or
mov
or
lock
xchg
fisubl
or
ds
in
in
movsb
insl
dec
shlb
out
ficoms
aaa
xchg
fwait
inc
pop
sub
adc
xor
mov
in
mov
and
jns
inc
test
xchg
roll
fwait
add
jns
jnp
jo
mov
ficompl
into
lods
inc
adc
dec
sbb
mov
jb
test
fbld
enter
jp
mov
loope
addl
dec
mov
mov
or
push
adc
rcrb
dec
sbb
sar
add
push
iret
jne
mov
rcrl
stos
or
jns
jnp
adc
imul
inc
add
add
mov
sub
dec
push
inc
xor
xchg
jnp
ljmp
loop
mov
sarl
mov
push
pop
pop
imul
push
shr
std
mov
xor
lea
fdivl
mov
fisubrl
mov
roll
jne
xor
push
jg
aas
cmp
inc
inc
les
add
mov
xchg
lahf
or
adc
test
lock
movsb
pop
inc
push
filds
leave
push
dec
cld
cmp
jg
lcallw
pop
push
int3
mov
cmpb
pop
loopne
pop
sub
push
jno
and
test
scas
lahf
sbb
lea
or
stos
dec
stos
nop
dec
add
loop
ret
subl
imul
cmp
test
arpl
add
inc
inc
test
mov
movsl
mov
fcoms
stos
jmp
scas
xchg
pop
ss
fwait
hlt
imul
cli
lea
dec
loopne
dec
loope
fmulp
stos
jae
popa
push
arpl
mov
mov
lret
lods
aas
cs
push
or
dec
dec
fsubrp
andb
jp
fwait
cmp
jns
lock
mov
dec
sbb
cmp
rorb
push
cmpsb
sbb
stc
enter
imul
fisubs
test
xchg
les
jns
outsl
push
mov
scas
rcrb
jecxz
xchg
repz
xchg
fcomps
jecxz
outsl
mov
clc
and
sub
fimull
roll
mov
mov
xchg
cmpl
pop
mov
and
popa
dec
jnp
lret
xchg
sti
loopne
cmpsl
sti
out
and
jle
fmull
or
mov
fimull
push
sbb
cmp
sbb
ljmp
pop
pusha
lods
push
je
repz
jmp
push
inc
push
mov
jne
std
push
mov
dec
das
mov
aad
mov
call
mov
xchg
cmp
mov
aad
push
int3
xchg
in
fistpll
leave
adc
jge
mov
lcall
lret
les
mov
mov
loopne
pop
jle
js
fs
mov
add
jns
xchg
test
pop
mov
int
ret
inc
sbb
dec
imul
call
sbb
lds
iret
test
or
jl
lods
push
cmp
cmc
sub
add
in
sub
mov
inc
mov
pop
pop
enter
xor
mov
jae
rorb
mov
icebp
testl
popa
and
jp
loopne
inc
mov
dec
shrl
pop
cmc
nop
dec
out
enter
mov
movsl
or
and
adc
mov
inc
xor
mov
dec
jne
test
fidivrl
xchg
in
lods
imul
mov
les
adc
adc
pop
jp
arpl
sbb
mov
test
frstor
pop
outsb
or
xchg
bound
xchg
push
mov
ds
mov
ja
pop
jns
mov
popf
jl
cmc
sbb
or
out
scas
push
push
loope
xchg
or
je
stc
add
add
int
adc
sbb
xor
int
in
gs
xchg
out
dec
int3
jae
xor
sahf
shll
mov
cmp
cmp
fmuls
cmp
sub
call
lcall
shrb
inc
sbb
or
xchg
rorl
aam
and
ss
pushf
lret
pop
in
push
sbb
xchg
movups
mov
std
sbb
shrb
test
add
lret
xor
pand
sbb
adc
xchg
test
cmc
sahf
add
leave
cmp
ja
add
scas
xchg
aas
mov
xor
testb
inc
mov
lods
or
dec
outsl
addr16
jnp
dec
xchg
pop
pushf
mov
add
push
fwait
mov
hlt
mov
loop
mov
testl
rorl
in
adc
mov
mov
sbbl
shlb
mov
jne
popa
daa
mov
pop
aad
xor
pop
in
rorb
ret
lods
ja
stos
or
sahf
sub
mov
lcall
lods
dec
int
jge
pusha
jmp
hlt
bound
addr16
iret
fldl2t
ja
adc
shld
pusha
pop
mov
test
cmp
and
mov
or
mov
lds
int3
jecxz
dec
or
cmc
movsl
in
rcrb
push
data16
cs
mov
ret
scas
xchg
xchg
je
test
or
inc
addl
mov
int
pusha
iret
mov
xorl
sti
cltd
in
out
jns
jg
mov
xchg
repz
mov
hlt
and
out
dec
mov
loopne
ds
cmp
test
push
push
xor
push
cmp
xorb
jmp
mov
or
push
xchg
or
fiaddl
adc
loopne
orl
adcb
cmpsb
dec
js
push
iret
bound
jle
mov
arpl
mov
push
bound
xchg
cmp
std
fistl
mov
sub
xor
fmuls
mov
xor
mov
mov
cmp
and
sub
lcall
orl
add
jp
inc
xor
xor
cmpsl
add
jb
xor
insl
jg
sbb
dec
sub
sti
sbb
cmp
cmp
mov
dec
jo
or
mov
pop
lea
xor
dec
push
scas
sbb
outsl
sbb
mov
sbb
ja
notl
dec
and
pop
lahf
jne
lret
inc
dec
add
or
dec
stos
push
cmp
aas
push
add
sti
add
mov
lods
aas
subl
out
push
mov
jne
push
mov
pusha
xchg
int3
inc
mov
es
repnz
fisubs
ret
sub
cmp
mov
push
mov
dec
aaa
or
jbe
mov
inc
das
sahf
movsb
push
pop
fistps
and
outsl
mov
shl
sbb
pop
into
inc
imul
jae
cltd
lret
fistpl
aas
insb
out
jb
sbb
dec
pop
dec
pop
jns
xchg
out
push
pop
xorb
fstps
fisubs
loop
fcmove
js
stc
out
sbb
clc
cs
dec
jmp
ret
xchg
ja
mov
test
arpl
add
jl
add
sbb
add
movsl
pop
repnz
xchg
mov
mov
jns
mov
shlb
in
fwait
cld
sub
mov
movsl
test
sub
dec
jo
lcall
stos
add
push
loopne
add
loopne
pop
imul
loop
imul
cltd
aad
jae
call
add
sub
movsl
jbe
inc
ds
xor
sti
dec
push
pushf
icebp
js
sar
in
andl
lahf
push
jae
jbe
bound
xchg
mov
inc
movsb
mov
mov
insb
and
insb
ret
adc
jo
daa
sbb
push
jae
mov
xor
hlt
cmp
jle
pusha
adc
jns
add
ljmp
mov
mov
xchg
add
dec
jbe
add
mov
adc
ss
bound
ret
int
mov
mov
sbbb
test
jo
mov
inc
dec
pop
sub
aas
mov
push
adc
adc
dec
and
shr
pop
inc
pop
cmpsb
stos
mov
jge
loop
mov
xchg
jecxz
push
lock
addr16
push
inc
psrlw
cmpsl
imul
xor
dec
movsb
xor
jbe
jp
pop
movsl
faddl
mov
test
shrl
icebp
jno
pop
mov
or
frstor
add
call
in
in
movsl
lods
in
push
and
push
andl
rcll
mov
and
pop
lret
rolb
pop
jecxz
sbbl
cwtl
push
pop
ja
add
loopne
or
dec
pop
cltd
or
or
lret
jecxz
cmp
fisubrs
es
iret
jns
mov
adc
xchg
mov
push
push
hlt
mov
loope
arpl
push
out
roll
fists
mov
leave
dec
cld
and
jne
lods
push
adc
lret
std
int
loope
push
lret
les
out
jecxz
imul
out
std
lahf
seto
lcall
scas
js
cmp
sbb
mov
fisttpl
mov
fucom
popf
insl
adc
pusha
xor
dec
sbb
lret
lods
clc
push
movsb
add
fstps
cmpsb
xchg
test
outsl
std
jp
mov
adc
push
daa
mov
sarb
xor
ss
xorl
jle
adc
or
add
repz
ret
lret
adc
adc
push
jae
sti
into
mov
std
lcall
shlb
aaa
repz
xorb
or
mov
in
sti
mov
dec
mov
test
add
or
xlat
aam
hlt
fstpt
insl
rcll
xor
dec
in
sbb
dec
into
or
xchg
popf
div
test
jecxz
imul
or
int3
cmp
xor
inc
xchg
jae
mov
pop
mulb
cmp
xor
scas
jbe
and
push
fxam
mov
loopne
add
mov
mov
ret
and
pop
xchg
icebp
xchg
out
outsl
push
cmpsb
out
xchg
push
je
mul
cmp
jge
pop
hlt
scas
sahf
fiadds
shll
push
mov
into
sbb
mov
push
faddl
aas
adc
movsl
clc
sub
mov
call
test
ret
pop
jp
jmp
mov
dec
insl
pop
cmc
outsl
mov
shlb
adc
push
sub
jne
jno
dec
add
pop
fsubrp
pop
stc
jns
lgs
mov
dec
cmp
in
dec
mov
inc
leave
pop
nop
dec
xlat
movsb
add
dec
movb
add
cwtl
pushf
xchg
neg
jle
xchg
lock
fs
arpl
nop
mov
popf
ds
and
inc
jg
cltd
aaa
pop
xchg
out
mov
pop
mov
movsl
sub
outsb
sti
gs
lcall
add
insl
mov
inc
arpl
xor
push
test
aaa
ljmp
xchg
pop
or
push
in
lea
xchg
enter
lcall
aam
pop
lods
adc
out
adc
jp
and
sub
ss
xchg
nop
cli
outsb
mov
les
outsb
cmp
adc
in
sub
and
sbb
pop
repnz
pop
cmpsb
setno
insl
push
push
jle
cmp
inc
clc
aad
sbb
lret
in
sbb
pop
mov
lret
mov
addr16
repz
xor
mov
bound
inc
jmp
add
pop
movsb
jbe
hlt
dec
push
pop
das
jbe
rcrb
sbb
xchg
sub
cmpsb
movsb
sbb
adc
mov
insl
gs
repnz
test
jle
imul
lcall
push
xchg
xorl
stc
call
out
aad
pop
jle,pn
sub
popf
mov
cmp
scas
mull
int
push
xor
adcb
in
mov
push
int3
movsb
in
jns
ret
xor
stc
in
into
mov
mov
xor
daa
je
mov
scas
mov
inc
cmp
cmpsl
inc
inc
clc
insl
cmpsl
sbb
mov
cltd
ficoms
enter
fs
popf
xchg
jne
xchg
push
jno
adc
aam
add
popa
out
cmp
shll
enter
push
jge
jp
sub
daa
push
push
lret
sbb
test
pop
dec
mov
in
lret
jae
cmp
dec
cmpl
fsubl
pusha
sbb
push
xor
hlt
scas
nop
jp
push
inc
in
sub
in
push
subl
jl
mov
ret
or
neg
push
mov
cmp
hlt
insb
add
out
mov
xchg
jmp
out
pop
js
cmp
stc
push
pop
jns
scas
loope
xchg
popf
mov
daa
mov
mov
sarl
mov
push
aaa
movsb
pop
notb
xchg
stos
out
out
sub
cmpsl
in
mov
fists
shrb
cmpsb
jo
test
push
jge
mov
or
sub
sbb
push
stos
push
mov
xchg
push
or
xor
mov
call
sbbl
dec
push
int3
movups
cmpsb
les
lahf
pop
les
inc
inc
lcall
push
stos
and
cmpsl
mov
jg
push
push
out
repz
insb
cmp
scas
cmp
cmp
cmp
stc
lea
stc
sarl
adc
loope
mov
lret
sbb
es
mov
and
add
jno
cmpsl
into
push
mov
fwait
push
add
ret
mov
out
add
or
outsl
pushf
fistpll
xor
add
inc
and
mov
and
xchg
int3
adc
inc
xchg
out
outsl
iret
xor
pop
shll
outsl
sub
sbb
jecxz
cmp
in
in
jnp
ret
pop
daa
in
fcmovne
jmp
inc
pop
cli
mov
fcompl
push
lock
mov
js
mov
push
inc
dec
mov
cmc
mov
fistps
inc
in
cltd
test
je
fsubrl
cmp
push
xchg
sbb
adc
xchg
mov
add
iret
push
xchg
push
test
dec
aaa
movsl
fstps
xchg
inc
xor
adc
or
mov
outsb
mov
ret
popf
inc
orl
repz
cltd
cwtl
in
out
push
enter
lret
jns
push
and
and
loope
xor
sarl
pop
pop
shlb
out
lret
sub
and
xchg
or
or
ja
adc
cwtl
in
cmp
push
adc
inc
mov
cltd
outsb
lret
add
push
ljmp
fbstp
jmp
mov
sub
dec
repnz
mov
js
mov
imul
push
stc
ficompl
dec
jbe
mov
cmp
add
cmp
sbbb
dec
xchg
les
mov
push
push
sub
cs
cmp
and
imul
mov
pop
jge
mov
jp
mov
jge
xacquire
pop
sti
mov
aaa
rcrb
mov
dec
mov
arpl
dec
aas
mov
in
mov
sub
sub
sbb
xchg
arpl
popf
mov
icebp
mov
sbb
add
sti
xchg
mov
fisubs
inc
sub
cmp
xor
pushf
mov
es
mov
inc
dec
and
mov
cmpsb
jo
xor
or
sub
pop
fsubl
xor
inc
lods
icebp
adc
mov
push
xchg
and
dec
or
mov
jle
push
cmp
jb,pt
test
and
inc
mov
mov
xchg
rclb
imul
inc
mull
push
imul
add
and
push
mov
jle
adc
lods
iret
lock
sub
je
cmpsl
movl
jb
cmp
sbb
adc
jp
pop
daa
popf
add
ret
or
in
out
bswap
in
xor
pop
sub
jecxz
cmpsl
popa
rcll
inc
je
push
fwait
rcrb
ljmp
stos
movsl
shl
pop
push
mov
mov
movsb
cmpsb
pop
loope
out
push
cmpsb
push
jl
fidivrs
scas
jp
xor
xlat
out
aas
cmpsb
bound
pushf
mov
ss
imul
ror
loope
pop
rcrl
nop
mov
cmpsb
test
sub
sub
pushf
stos
shll
orb
or
int3
mov
aas
sbb
ljmp
mov
insl
jmp
mov
push
sbb
xor
imul
jne
adc
lods
sbb
push
fwait
into
js
inc
addr16
enter
xor
pop
movsb
mov
mov
sub
addr16
cmp
add
push
pop
pop
inc
xor
out
mov
out
loopne
mov
jmp
adc
push
pop
mov
lock
lcall
pop
subb
xchg
and
shl
mov
cld
icebp
ljmp
cmp
sub
hlt
sbb
fwait
push
iret
cli
fdivl
shlb
mov
cli
data16
loopne
mov
jmp
popa
mov
xchg
push
hlt
nop
loopne
inc
js
mov
or
pop
pop
cmpl
aas
xchg
dec
popa
shlb
jno
ds
out
mov
or
orb
imul
enter
lock
mov
ja
sahf
and
xor
hlt
sarl
mov
sbb
adc
pop
outsl
adc
mov
ret
inc
and
sub
cld
adc
test
xchg
iret
fcoms
pop
add
pushf
lahf
add
pop
fmull
lcall
iret
mov
lahf
in
pop
mov
dec
dec
insl
sbb
fdivrl
mov
je
jnp
xor
xchg
insb
or
imul
lret
or
int3
or
ret
fdivs
inc
sbb
cmp
sbb
fidivl
jne
add
int
cmpsb
push
pop
loopne
jmp
aam
hlt
push
out
imul
int3
ds
les
lds
jns
dec
shlb
imul
dec
jle
xor
pop
and
sbb
push
shlb
xchg
and
and
in
and
cltd
mov
loopne
pop
adc
test
pop
lret
idivb
popa
ret
stc
mov
inc
push
ds
and
scas
dec
cmp
dec
mov
and
ja
jle
or
stos
cmpsl
adc
push
cs
shl
adc
sbbl
repnz
push
mov
jne
pop
call
insl
aaa
and
scas
jle
sbb
popa
aas
push
jge
add
fnsave
push
movsl
nop
addr16
mov
pop
xor
mov
lahf
mov
stc
rolb
fbld
cld
inc
pop
mov
mov
popa
mov
or
fdivrl
popf
hlt
adc
mov
js
push
sub
rolb
inc
mov
das
cwtl
lods
sbb
or
jecxz
rorb
sbb
mov
daa
test
dec
lea
rclb
sub
jmp
in
sbb
into
dec
dec
movsl
mov
jmp
xchg
iret
stos
pop
es
dec
inc
loop
mov
in
ret
jb
shl
out
jns
test
push
movsb
adc
pop
add
add
sbb
cmpsl
sahf
nop
insb
jmp
sarl
dec
or
sub
jecxz
cmp
sub
in
pop
add
enter
roll
scas
jecxz
jmp
cmp
out
jo
inc
in
push
in
adc
fadd
jg
lock
or
leave
ss
jge
data16
cmp
xlat
fwait
mov
dec
push
dec
lret
or
fnstsw
jl
sahf
aam
jecxz
xchg
sbb
dec
mov
mov
test
stos
in
jne
cmpsl
add
adc
xchg
sbb
jnp
dec
stos
mov
jnp
fsubr
mov
or
jmp
leave
mov
stos
dec
jl
inc
pop
mov
sbb
pop
icebp
add
pop
dec
insl
aam
and
mov
or
test
dec
repz
sbb
mov
dec
imull
lahf
les
sub
push
add
xorb
pop
pop
fmuls
and
cmp
jge
sub
lcall
aas
outsb
test
outsb
cmp
ret
aas
and
or
and
pop
or
aas
cmp
sub
shr
or
adc
dec
arpl
mov
shrl
adc
xor
mov
pop
leave
fisttpll
lds
jno
les
sub
pushl
into
dec
push
dec
sahf
mov
orb
pop
mov
notl
xor
mov
lret
out
js
dec
xchg
rcrl
pushf
pop
jnp
add
lahf
inc
add
out
mov
sti
cmc
rorl
adc
movsb
inc
iret
mov
xor
and
aad
out
or
dec
cmp
test
fstl
cmp
xchg
in
mov
adc
dec
rcrl
xchg
mov
push
cwtl
jnp
dec
scas
xor
fcoms
xchg
insb
xchg
pop
sbb
inc
mov
in
pop
push
mov
test
popa
dec
xor
loop
mull
les
stos
int
mov
pop
movsl
xlat
aas
mov
frstor
and
mov
gs
mov
mov
out
cmp
pop
adc
xchg
fcom
cli
imul
push
insb
sub
enter
ret
sbb
or
mov
push
dec
xor
mov
lods
cmc
mov
jg
pop
hlt
mov
mov
loopne
pop
pop
in
xlat
xor
arpl
pop
aam
pop
and
pop
sub
dec
fwait
out
movsl
sbb
popf
push
dec
ljmp
ja
fiadds
inc
cld
sub
sbb
movsl
dec
or
cmpl
xchg
mov
jp
fmuls
imul
inc
add
lret
rclb
inc
pop
aaa
push
jo
mov
repnz
push
mov
js
xchg
icebp
mov
dec
mov
lcall
mov
orl
movsb
daa
jmp
roll
dec
iret
das
or
mov
ret
inc
ss
sbb
outsb
mov
hlt
sub
jp
lret
jb
data16
divl
call
ja
es
sbb
xor
pop
or
xor
mov
sbb
gs
xor
mov
fnstenv
shl
dec
xchg
sub
inc
cwtl
sbb
jl
xor
inc
and
jle
mov
les
mov
out
cltd
mov
leave
pusha
test
out
stc
out
loopne
stc
pop
cmp
or
and
inc
icebp
std
popf
imul
ss
jp
sbb
pop
movsl
pop
or
inc
ja
loop
jp
sti
out
outsl
pop
fsub
test
mull
pop
jmp
out
pop
shl
lret
mov
mov
add
mov
push
fcmovu
xchg
inc
aas
mov
test
arpl
hlt
sbb
lret
clc
mov
sub
sub
test
mov
add
sub
sbb
or
repz
mov
mov
call
or
add
dec
inc
xchg
mov
mov
sub
fistpll
add
xchg
push
mov
xlat
sbb
fdivr
cwtl
stos
push
sub
adc
inc
sub
cli
add
cmc
data16
adc
mov
roll
add
mov
inc
xchg
jbe
daa
sbb
ret
dec
rcl
cmp
les
cli
mov
outsl
push
jns
aaa
rolb
out
stos
mov
inc
and
xchg
fnstcw
pop
xchg
movl
imul
clc
pop
sarl
jno
outsb
lods
adc
jne
sub
add
adc
jl
inc
sub
clc
fs
imul
stos
cld
outsb
push
into
scas
in
and
or
imul
cmpsl
or
sub
inc
cmp
out
sbb
pop
mov
sbb
xchg
mov
je
aad
call
or
lret
inc
push
imul
scas
cltd
jae
jp
test
cmp
push
inc
cmc
push
inc
jns
ret
fmull
push
mov
shlb
sbb
loop
ret
jae
xchg
js
add
lcall
out
std
adc
call
mov
pop
mov
addr16
out
jle
push
inc
push
enter
inc
xchg
sarb
movsb
pusha
and
xor
mov
iret
xlat
jo
in
cmp
jns
in
jae
jno
cmp
dec
cmp
adc
repz
daa
cmp
cmp
arpl
and
pop
xchg
das
adc
cwtl
jp
into
adc
jecxz
bound
pop
pop
fsubrl
jecxz
into
popf
xchg
fcmove
scas
in
add
insl
mov
hlt
fs
sbb
cmp
pop
mov
sbb
jge
in
cmp
stos
fcmovnbe
mov
xchg
les
pop
ret
sbb
into
ror
test
ret
into
jb
fnstenv
push
dec
cmp
inc
ss
hlt
cltd
fbstp
dec
ret
out
pop
add
test
mov
sti
mov
cmc
jp
stos
fstp
in
dec
dec
mov
lahf
mov
cli
mov
popf
sbb
pop
int
sbb
push
jmp
xor
mov
add
movsb
dec
movl
int3
es
cltd
lret
sub
mov
jmp
pop
xchg
mov
sahf
xchg
or
mov
int
imul
inc
daa
mov
sub
mov
add
mov
jecxz
hlt
mov
mov
pop
xor
add
lods
scas
jl
lods
adc
cld
mov
ja
scas
icebp
shlb
adc
sbb
inc
mov
sbb
lret
negb
mov
addr16
popf
fwait
aad
iret
mov
in
insl
in
les
push
hlt
inc
pop
cmp
push
dec
lea
jp
cmpsl
and
mov
xchg
adc
and
jae
lahf
test
dec
inc
xchg
shr
fstl
clc
push
stc
mov
sub
call
in
subb
push
inc
inc
or
mov
pop
and
leave
popa
ja
lods
and
sbb
dec
test
or
in
inc
scas
pop
aam
push
sub
adc
adc
jmp
hlt
push
pop
pop
ror
fwait
mov
aas
shll
jbe
clc
xchg
cs
xor
mov
aaa
jne
cmp
xchg
lds
adc
scas
imul
xorb
out
and
cmp
pop
mov
sbb
fimuls
jne
mov
cmpsl
das
cmp
mov
xor
in
fcoms
jmp
cli
push
popf
fst
and
test
les
fcompl
fcmovne
cmp
subb
push
notb
xor
pusha
xchg
mov
loope
movsl
fdivl
ret
xchg
jnp
mov
cmpsl
cmc
mov
sbb
add
fucom
and
test
aad
je
cs
cmp
dec
sub
push
das
in
out
fs
ljmp
scas
push
popa
add
mov
jecxz
add
pop
or
sahf
cli
xchg
dec
inc
lods
pop
popf
and
dec
push
xor
jnp
sbb
ret
inc
popf
adc
sti
cmpsb
adcl
rorb
mov
cmp
xor
add
je
mov
pop
mov
frndint
mull
lock
and
pop
pop
cld
or
xor
mov
cmpsb
dec
mov
int3
xchg
lret
dec
xchg
fidivs
popf
xchg
mov
add
fnstsw
adc
leave
cmp
jno
jle
outsb
fmull
in
loop
mov
fbstp
ror
jne
shll
nop
lock
mov
idivb
jne
mov
xchg
lret
cmp
dec
ja
adc
mov
cld
test
mov
cmp
sbb
lock
xchg
outsl
lea
cmpl
mov
incb
cli
pop
inc
pop
dec
adc
sti
mov
jno
inc
pop
add
es
popf
and
cwtl
jo
and
lock
mov
sbb
push
sbb
push
sub
jle
or
imul
fcmovnbe
lods
cmp
cmp
pop
fiadds
xor
jl
xor
sub
popa
addr16
mov
push
stos
popa
jp
mov
dec
les
fildll
mov
movsb
or
repz
int3
lret
mov
insl
mov
pop
push
das
scas
test
rcl
stc
add
mov
es
push
icebp
xlat
scas
xchg
pusha
rcrl
push
jecxz
lds
out
fnstcw
test
jp
and
xor
test
push
pop
sub
mov
out
push
insl
inc
xchg
sbb
pop
pop
rcll
aas
ja
hlt
subb
mov
cli
or
pusha
pop
fdivr
add
and
andl
roll
xchg
pop
add
les
adc
imul
cmp
xor
int3
mov
imul
jnp
sbb
js
cmp
jecxz
popa
outsb
jnp
ret
add
hlt
xor
into
arpl
imul
sub
mulb
data16
push
pop
in
loop
insb
cmp
jb
xlat
mov
shlb
outsb
int3
in
fistl
or
cmp
fwait
in
push
mov
jecxz
inc
adc
cmc
mov
sub
into
cmp
mov
xor
cmp
movsl
push
sbb
sti
ljmpw
neg
sub
mov
and
dec
mov
cld
sub
xorb
or
pop
stc
enter
or
sub
repz
jmp
and
pop
adc
shrb
leave
dec
xor
dec
shlb
mov
sbb
rcl
cmp
dec
jl
stc
arpl
mov
cmp
mov
fstps
je
add
add
in
jp
aad
pop
mov
pop
nop
aas
bound
cs
pop
xor
cltd
inc
mov
insb
pop
add
adc
or
xchg
aam
out
jmp
sbb
lods
inc
out
loop
push
sub
mov
xchg
and
testb
sbb
jl
sti
sub
cmp
xor
xchg
ljmp
ffree
mov
xor
ss
fcoml
xchg
test
sub
aad
cmp
mov
dec
cmp
dec
sub
cmp
mov
jge
dec
cli
dec
jo
mov
divl
fiaddl
xor
aam
fsts
cwtl
pop
mov
das
jl
les
cmp
fists
or
dec
sbb
pop
jl
push
and
aas
stc
repnz
push
cmp
pop
repz
fcoms
mov
imul
sbb
mov
outsl
and
imul
out
frstor
das
or
xor
sub
fxch
mov
call
int
push
mov
push
mov
jb
mov
packuswb
adc
arpl
mov
sub
adc
jmp
sbb
rorb
sarb
fisubs
lahf
outsb
and
mov
xchg
movsb
adcl
push
jl
pop
jo
in
data16
push
jbe
and
sub
stc
int3
stc
sbb
call
cmp
fsubrl
or
in
ds
xchg
mov
push
jb
loopne
in
mov
cmp
dec
adc
cmp
lcall
notl
outsl
pop
int3
xchg
lahf
pusha
mov
mov
inc
les
out
test
fldenv
repz
popf
xchg
in
enter
push
stc
push
mov
mov
mov
fldenv
pop
and
repnz
es
pop
sbb
mov
xchg
add
xor
push
inc
or
xchg
shlb
inc
mov
imul
mov
push
sub
add
andb
imul
xchg
ss
loopne
pop
call
ret
jle
movsb
int3
push
rcrb
inc
mov
repz
jnp
ja
pop
push
cmpl
adc
and
mov
out
or
jp
push
mov
pop
add
add
mov
cmp
lods
xchg
sbb
mov
insb
aam
cs
pop
js
or
xor
cltd
jnp
mov
jl
into
addr16
js
lods
fsubp
out
fildll
jl
scas
mov
andb
sbb
inc
dec
out
mov
jp
setg
mov
xchg
sbb
shl
mov
jo
outsb
mov
xor
add
movsl
paddw
loop
imul
stos
push
cmp
scas
add
sbb
out
insl
adc
shll
sbb
popa
xchg
adc
mov
dec
enter
dec
inc
out
jmp
sbbb
push
push
imul
outsl
push
dec
xchg
ror
test
xlat
mov
jecxz
andl
arpl
roll
and
pop
int
jl
gs
cmpsl
or
sub
jg
inc
mov
aam
cmpsb
cltd
adc
adcb
inc
das
imul
cli
out
jp
pop
les
outsb
inc
repz
fwait
test
lahf
test
xor
jb
mov
rcll
mov
loopne
mov
jb
inc
adc
ja
pusha
jg
aad
bts
sbb
js
cs
adc
push
pop
daa
push
sahf
push
sbb
and
push
xor
jnp
js
imul
jge
scas
scas
sub
sbb
gs
mov
mov
or
sbb
adc
mov
mov
outsb
fdivl
lock
rcr
sbb
push
cmp
add
out
ss
push
in
inc
cli
mov
lcall
inc
sbb
jne
xor
fnsave
mov
cltd
push
inc
hlt
inc
rcll
cmpsb
cwtl
push
push
cmp
outsl
dec
mov
inc
push
stc
jno
pop
pop
test
hlt
fstps
pop
fistpl
aaa
ss
adcl
scas
stos
pop
out
out
es
int3
pcmpeqd
sub
cwtl
sbb
popf
scas
loopne
or
pop
jo
xor
ljmp
fcompl
add
pop
pop
in
mov
push
rcll
jge
or
push
jnp
lahf
hlt
mov
or
sbb
stos
push
ficoml
movsb
and
mov
mov
cs
and
xor
ds
jl
dec
push
loopne
gs
dec
push
mov
mov
fsubrl
and
addl
mov
inc
dec
jnp
and
rclb
dec
sbb
test
fisttps
dec
sub
inc
lods
and
jle
xor
mov
pop
cmpb
lds
add
adc
repnz
pop
pop
insl
xorb
push
stc
inc
inc
push
jle
fidivs
inc
mov
mov
lods
xchg
iret
cli
stos
fprem1
imul
jle
int
xor
mov
dec
lcall
ja
inc
rorb
outsl
mov
iret
ljmp
sbb
cltd
cmp
pop
push
shlb
and
lock
xchg
fstl
mov
and
jae
sbb
in
and
das
xor
pop
ficompl
xor
cmpsl
das
repz
push
mov
lods
pop
mov
lock
adc
leave
cld
outsb
xchg
insb
arpl
mov
jns
xorb
and
stc
adc
inc
pop
xor
testb
add
xchg
mov
xchg
repz
mov
lds
dec
mov
jo
xchg
sbb
imul
mov
aad
aad
sbb
mov
cmp
push
shrl
jmp
jge
sub
mov
sbb
imul
in
lret
mov
dec
stos
lock
jp
or
sub
xor
in
xlat
add
je
sti
inc
fldln2
xchg
arpl
or
fnstsw
sahf
mov
push
xor
in
inc
push
mov
dec
popa
mov
mov
popa
sahf
inc
ja
dec
jo
mov
inc
sbb
fwait
cmp
lcall
in
mov
add
lds
imul
ja
dec
fcoms
jge
adc
iret
cld
pop
scas
stc
mov
ret
sub
mov
xchg
cltd
ja
sahf
outsb
mov
jl
sbb
mov
gs
sbb
pop
ror
lret
enter
or
sti
sub
mov
js
lods
test
sub
cmp
pusha
mov
in
nop
pop
jp
xlat
add
add
cwtl
inc
push
xlat
ret
or
inc
push
cwtl
lret
int
pop
into
adc
loopne
adc
clc
push
jb
jne
dec
xor
ljmp
repz
pop
repnz
xorb
loope
jae
add
xlat
push
jo
add
jl
loop
mov
sbb
xor
dec
mov
into
js
stos
pusha
movsb
mov
aas
rcrl
cmp
das
add
push
jg
lock
push
aaa
aaa
aam
inc
push
cwtl
xchg
out
inc
scas
adcb
lock
data16
inc
push
int
cmp
pop
jnp
adc
movsl
mov
out
shll
out
xchg
in
imul
xchg
imul
pusha
andl
xchg
fs
xor
popf
mov
push
rorl
mov
arpl
mov
in
es
jns
movsl
pop
in
repz
adc
adc
out
iret
and
fildl
mov
cld
push
pop
dec
mov
scas
out
fildl
shl
sub
xlat
xchg
out
aad
mov
cmpsl
cmpsl
mov
mov
int3
cmp
jecxz
dec
in
mov
dec
xor
push
in
jp
mov
cld
movsb
mov
lret
dec
push
jmp
sub
cld
pop
and
shr
inc
jge
jle
push
xchg
pop
dec
mov
inc
rcr
ret
pop
mov
test
pop
cmp
insb
test
cmpb
shll
in
mov
in
cmp
push
xchg
mov
iret
inc
mov
hlt
sbb
loopne
xor
mov
nop
cli
xor
outsb
es
and
jns
adc
inc
rcrb
add
cltd
fcmovbe
fildll
sbb
mov
mov
mov
into
xchg
mov
mov
or
or
sbb
mov
mov
lahf
xchg
pop
sbbl
in
xor
xor
xor
dec
jmp
dec
mov
aaa
in
mov
sbb
dec
xor
adcl
and
mov
in
ljmp
xor
stos
jmp
out
xor
bound
negl
inc
out
jns
add
shrb
pop
stos
pop
outsl
fdivs
sub
stos
cmp
xchg
mov
ja
movsl
jge
fisubrl
or
cmp
pop
loopne
mull
cs
pusha
fistl
cmp
iret
dec
mov
pop
sarb
call
into
pop
dec
pop
adc
xor
subb
pop
scas
or
or
jbe
scas
mov
push
or
into
fadds
outsb
and
pop
cli
in
or
and
inc
mov
cmp
leave
out
mov
xlat
xchg
jb
pop
cmc
or
cmpsl
jns
mov
das
out
lret
popa
push
nop
jecxz
test
pop
xchg
cmp
or
push
clc
sub
mov
and
std
mov
sub
xchg
pusha
sub
mov
push
stos
dec
inc
push
sbb
cmp
test
fidivs
es
push
int3
dec
in
scas
clc
lods
pop
imul
push
add
dec
ja
inc
adcb
xchg
dec
loop
mov
or
movsb
pop
movsb
push
jo
das
mov
push
or
subb
mov
cmc
lret
push
scas
loop
test
mov
dec
xchg
int3
lock
je
mov
inc
in
fdivrs
cmc
dec
adc
cmp
cli
mov
push
jae
mov
xor
out
fwait
outsl
and
xor
sub
ds
pop
or
add
cwtl
cmp
test
daa
outsl
lahf
cli
jae
inc
idivl
mov
popa
and
inc
jmp
mov
adc
test
sub
popa
ljmp
pop
sub
inc
fsubrl
or
and
mov
xchg
scas
js
js
inc
dec
andb
adc
or
sbb
cmp
xor
loopne
jp
xchg
aas
int
mov
in
mov
je
push
push
and
sti
push
mov
jnp
in
dec
cmp
data16
pop
mov
imul
fmuls
scas
movsb
push
pop
xor
jno
or
dec
pop
outsb
inc
gs
in
lahf
int3
jl
jl
outsb
aas
stc
rcll
popf
push
fwait
mov
xchg
jns
and
es
sbb
fildl
rep
jg
jecxz
or
xchg
mov
jne
cltd
test
mov
adc
jecxz
jne
mov
adc
push
aaa
shlb
in
push
getsec
inc
add
xor
cltd
mov
addb
adc
xchg
nop
push
aad
cmc
xchg
pop
sahf
push
cmp
dec
cld
fisttpll
cld
aam
cmc
or
mov
mov
mov
pop
sub
fcoms
push
fs
push
push
insb
pushf
sbb
popa
xor
and
mov
add
cmovs
or
xchg
ret
pop
cmp
js
mov
push
rclb
sub
outsl
mov
fmuls
repnz
jae
inc
mov
jnp
or
test
jecxz
mov
add
push
xchg
imulb
pop
sub
xor
mov
aad
subl
sbbb
in
inc
mov
clc
scas
rorl
fdivrp
adc
mov
inc
mov
sbb
cmpsl
mov
xor
mov
in
xlat
imul
bound
xchg
inc
xchg
into
idivl
icebp
je
pushl
flds
cltd
outsb
xchg
jp
fwait
in
xchg
ret
enter
imul
and
shr
pop
pop
loop
and
sysexit
out
and
nop
dec
pop
xchg
jae
mov
shlb
lods
mov
divl
lock
sbb
cmp
fwait
pop
mov
mov
inc
xor
imul
add
adc
cltd
nop
xchg
sbb
dec
dec
push
mov
cmp
lahf
jle
mov
sbb
pop
sarb
inc
jmp
xor
cld
decb
inc
lahf
aaa
and
cmp
xlat
out
mov
cmp
pop
lods
cmp
and
mov
dec
or
insl
leave
js
adc
dec
idivl
xchg
mov
arpl
es
push
loop
inc
cs
or
xor
adc
push
test
push
jecxz
and
mov
lea
push
mov
repnz
bound
fmul
hlt
pop
pop
test
popa
and
ljmp
inc
jmp
push
int
js
dec
imulb
sub
addl
inc
add
mov
inc
add
push
mov
jle
pop
cmp
cmpsl
pop
mov
mov
cmp
jns
jecxz
notb
dec
mov
jno
scas
inc
cmp
jmp
popf
loop
aaa
pop
and
mov
sub
aad
inc
dec
cmp
fs
xor
stc
pop
aaa
loope
xlat
scas
test
xlat
mov
mov
pop
insl
sti
fwait
jge
adc
sub
cli
insb
mov
call
je
movsl
and
cmp
test
ss
add
jbe
pop
int3
fidivl
leave
fwait
enter
add
cmp
sub
mov
jbe
daa
jnp
cld
cmp
sbb
repz
jp
adc
sub
insl
ss
out
addr16
jge
jp
mov
bswap
pop
add
test
xchg
in
cli
xlat
mov
pop
dec
xchg
popf
sbb
dec
or
pop
sbb
mov
pop
sub
das
gs
rorl
pop
and
cmpsb
pop
insl
movups
sahf
sbb
mov
dec
mov
rorl
dec
sbb
out
xor
fdivs
or
adc
lods
mov
cld
daa
inc
xor
xchg
dec
cmp
in
dec
or
rcl
xchg
adc
in
sahf
mov
push
cld
jge
lahf
fidivl
adcl
in
addr16
sahf
es
fs
in
xor
push
aaa
adc
int3
in
mov
adc
int
dec
arpl
pop
imul
lods
xor
push
add
push
scas
in
or
rorl
and
jecxz
shrl
inc
daa
jecxz
adc
aad
gs
mov
sbb
mov
xchg
add
xor
aam
xchg
mov
test
jg
push
jnp
dec
mov
mov
sub
cmp
add
inc
iret
repnz
in
ss
ffree
aam
fldl
xchg
and
rclb
cmpl
cmpl
lret
mov
ljmp
sbb
or
mov
mov
pushl
jp
pop
stos
pop
mov
stc
es
sti
add
mov
hlt
jnp
fisttpl
stos
sub
test
cmp
jae
jns
jecxz
jbe
mov
fmul
sbb
or
push
mov
jl
dec
imul
and
popa
sbb
into
xor
jnp
pushf
xor
lods
xchg
mov
jle
mov
or
and
fbld
repz
jno
out
adc
or
daa
lds
push
jle
enter
ljmp
sub
mov
and
dec
cmpsl
inc
sbbb
in
repz
int3
shll
lret
adc
pop
out
lcall
aas
test
push
cs
stc
sub
mov
xchg
je
scas
js
test
aas
cmp
into
repz
mov
push
jns
xchg
or
adc
push
cmp
cmp
jg
lcall
fiadds
scas
xchg
test
out
or
adc
hlt
mov
dec
mov
add
adc
and
pushf
mov
arpl
mov
pop
inc
scas
popa
das
inc
push
adc
or
and
xor
addr16
dec
pop
int3
sbb
lret
cmp
in
push
or
pop
pop
adc
shlb
sub
mov
inc
cmc
adc
je
or
movl
out
clc
mov
fidivs
scas
jmp
testb
push
xor
mov
jg
je
std
loopne
cli
cmpsl
call
fcoml
mov
repz
jle
xor
cmp
int3
test
into
mov
cmp
pop
int3
dec
sbb
lret
cltd
push
mov
in
or
jnp
roll
aaa
jl
cmpsl
mov
insb
std
sub
sti
adc
mov
dec
pop
fstenv
push
call
mov
add
pop
fs
push
es
dec
xor
rcrb
std
pop
jg
imul
sarl
jae
sbb
aam
pop
out
les
dec
dec
jns
xchg
jp
inc
mov
mov
xor
xor
sbb
cwtl
jge
cmpsl
rcrl
sbbl
mov
mov
fldt
das
ficompl
hlt
fisttpl
dec
fidivrl
sbb
sti
sahf
jbe
and
mov
sub
outsl
ss
sub
fidivrl
xchg
and
push
dec
jmp
mov
push
shrl
int
or
and
ds
mov
xor
and
call
fwait
mov
test
shll
inc
mov
popf
ret
xor
mov
cli
das
fcoms
lds
movsb
add
es
adc
cltd
dec
adc
mov
fildll
dec
or
jb
sub
cmpsb
adc
loopne
adc
cltd
xchg
pop
mov
pop
sbb
call
cmp
in
movsl
mov
js
or
pop
cmc
push
push
outsb
and
sub
jecxz
and
push
cmp
pop
mov
pop
in
mov
in
insb
pushf
es
adc
fsub
xchg
adc
xor
mov
insb
aam
jmp
iret
int
nop
sub
lret
adc
mov
lret
jecxz
pop
push
imul
xor
pop
icebp
mov
xchg
out
sbb
inc
push
inc
int
fwait
hlt
gs
xchg
pop
push
xchg
incl
scas
push
mov
pop
outsb
mov
shlb
clc
jl
push
xchg
cli
outsb
gs
inc
in
test
fisttps
lahf
cltd
sbb
dec
mov
mov
clc
sbb
jg
div
cmp
xchg
xor
cmp
shrl
popa
inc
xlat
daa
push
cmpb
out
add
fstpt
mov
das
loop
jl
stos
leave
add
or
sbb
jmp
jmp
adc
pop
push
sarl
mov
xchg
clc
inc
sub
sahf
enter
mov
jne
mov
xchg
stos
es
inc
jl
lret
cmp
vmovmskps
xchg
call
dec
or
mov
or
into
rorb
jae
pop
cld
pop
mov
adc
adc
test
in
arpl
hlt
gs
imul
inc
insl
sbb
jbe
mov
pop
leave
jp
mov
mov
add
stos
push
fwait
aam
mov
vunpckhps
stc
xlat
push
xor
fstpt
cmpsb
fcoms
xchg
cwtl
std
aad
pushf
pop
popf
mov
rcrb
jle
rcr
dec
call
arpl
shll
scas
sub
bound
sahf
shl
cltd
nop
in
scas
or
stos
cmp
leave
pop
pop
bound
push
xor
adc
mov
dec
xchg
sub
stc
test
popf
das
nop
xor
add
popa
dec
dec
cmp
repnz
insb
lahf
mov
xchg
ja
add
sub
sub
xor
imul
std
in
sub
cmp
icebp
fldt
aas
push
dec
fabs
sbbl
xlat
pop
testb
jns
xchg
mov
mov
loopne,pt
loop
xchg
aam
iret
and
jmp
addr16
pushf
push
test
adc
mov
lods
rcrb
stos
out
ret
mov
divl
or
jae
sub
arpl
in
insb
mov
mov
ret
cmpsl
xor
push
shrl
sub
mov
sahf
cmp
mov
popa
and
jle
out
mov
mov
mov
mov
daa
hlt
cmp
icebp
dec
in
and
cmpsb
pop
sub
pop
movsl
dec
sarl
mov
lods
imul
and
push
mov
push
mov
and
pop
sbb
into
dec
xchg
pop
jl
call
and
or
jecxz
test
lea
imul
push
jne
in
fcoml
outsl
lea
call
dec
adc
or
shrl
jp
outsb
or
mov
daa
repz
scas
cld
jnp
xchg
inc
jbe
or
mov
aas
push
loopne
test
cmp
jo
fistl
mov
sbb
jbe
int
repz
pop
repz
test
fwait
adc
jle
cmp
sub
push
mov
push
ja
lcall
add
popa
fcoms
fldl
sub
outsl
mov
out
ljmp
pop
sbb
mov
fimuls
push
push
fsubr
lock
jnp
xchg
cld
jmp
orl
cmp
imul
sub
jno
loop
pop
loop
jmpw
xchg
arpl
sbb
adc
xchg
rclb
lret
jge
mov
ds
mov
cmpb
jno
pop
mov
mov
imul
sbb
dec
cmpb
aad
xchg
mov
cltd
cmp
sub
cmp
icebp
iret
out
push
icebp
pusha
jmp
jl
ret
shrl
lods
mov
or
and
pop
add
jns
mov
in
inc
push
jge
jae
adc
sbb
jecxz
cld
mov
jns
mov
add
fwait
mov
mov
ja
ficoml
mov
jl
int
or
sti
je
inc
xlat
repz
dec
daa
inc
popf
pause
pop
pop
movsl
cs
repnz
xchg
fmull
test
inc
dec
scas
imul
mov
push
pop
and
xchg
and
cwtl
add
pop
xchg
fcomip
cmp
xchg
icebp
ja
ds
nop
xchg
jge
imul
shr
push
fisttps
mov
out
dec
hlt
hlt
sbb
dec
lahf
sbb
pop
pop
lret
int3
mov
je
push
negb
xchg
cmp
push
das
addr16
ret
mov
nop
outsl
pop
cmp
add
jmp
div
xchg
aam
jne
mov
push
sbb
xchg
adcl
pop
jae
mov
sbb
ss
insl
int
xchg
mov
lods
jg
movsl
inc
jae
dec
or
in
and
ret
inc
push
xchg
dec
mov
fcmove
jg
add
fmuls
js
jbe
mov
adc
jecxz
add
inc
xor
inc
js
mov
mov
imul
daa
hlt
jbe
mov
mov
addr16
adc
imul
push
test
xchg
insl
jle
add
mov
mov
pop
xlat
xor
inc
scas
sti
push
jle
jp
push
nop
in
mov
adc
pop
out
sbb
xchg
push
aam
jae
dec
addb
dec
leave
xchg
or
in
push
cs
cmp
push
inc
je
enter
and
pop
mov
cmpsb
lret
ret
xchg
mov
jb
cmpsb
mov
ret
mov
cmpsb
outsb
repnz
fwait
dec
js
jmp
jp
sti
xchg
cmc
xchg
in
outsl
mov
xlat
xor
lods
lods
adc
add
jmp
repnz
mov
rcrl
add
add
lods
outsl
data16
or
in
cmp
jmp
pop
mov
inc
add
sbb
adc
xchg
sub
xchg
ja
jmp
aaa
and
pop
test
cli
addr16
pop
cli
lahf
popa
or
mov
pop
mov
movsb
inc
mov
ds
mov
loop
adc
push
mov
aaa
pop
jg
inc
into
shrl
int
xor
js
out
sub
cli
push
mov
push
mov
mov
gs
xor
and
repz
cwtl
and
jle
test
cwtl
cltd
and
int
das
xchg
adc
inc
mov
dec
cmpsb
in
cmp
fidivl
inc
and
push
mov
aaa
push
shlb
add
in
mov
clc
jle
pop
sahf
fnstsw
add
leave
or
xor
test
adc
aad
sub
icebp
xchg
xchg
leave
rolb
es
sub
sbb
and
mov
add
mov
shrb
xor
push
adc
mov
es
clc
add
push
arpl
jnp
sub
sarb
jge
jae
push
push
or
notb
pop
aaa
daa
icebp
mov
push
mov
push
scas
lret
dec
cmpsl
mov
adc
in
aad
cmp
sbb
and
mov
xor
xchg
mov
push
cmpsl
adc
movsl
stos
cmp
pop
cli
int3
popf
jnp
adc
inc
pop
lods
fisttps
aas
add
lods
xchg
dec
add
cwtl
mov
lods
mov
mov
push
mov
imul
adc
icebp
push
mov
sub
fcomps
sub
int3
inc
dec
iret
push
mov
lret
out
sahf
nop
or
scas
aaa
fwait
mov
pop
ds
in
pop
push
lods
mov
add
testl
std
xchg
mov
out
lahf
jp
in
mov
jnp
aad
inc
xor
adc
mov
adc
dec
xor
adc
or
cmp
jmp
pop
cmc
cli
orl
fiadds
mov
xchg
xchg
sub
and
lahf
dec
ds
call
pop
lea
adc
ficoms
mov
decb
jle
ret
xor
cmp
cmpsl
sti
outsl
shr
lret
fdiv
ds
mov
aad
jge
add
mov
hlt
sti
in
dec
in
xchg
jecxz
mov
push
or
mov
jl
out
jae
pop
inc
mov
cli
pop
xor
mov
lods
mov
sbb
cmp
rdmsr
mov
dec
mov
sub
rclb
rorb
cs
fiaddl
sub
inc
gs
jp
or
pop
cld
jecxz
pop
fiadds
lods
mov
add
xchg
jp
mov
adc
xchg
cmp
push
xchg
std
mov
stc
mov
imull
stos
mov
add
add
fisttpll
fwait
les
mov
inc
dec
mov
insl
imul
jo
jae
mov
loopne
or
sub
mov
add
or
call
xchg
push
jbe
pop
xchg
cmp
inc
mov
xor
adc
xchg
mov
loop
loopne
mov
lods
mov
xor
rcrl
iret
dec
fs
rolb
nop
cwtl
push
or
xchg
mov
or
je
xchg
addr16
cmp
sub
mov
push
sahf
stos
rclb
cmp
mov
cmpl
ljmp
or
sbb
mov
dec
cltd
or
shrb
cwtl
fwait
cld
xchg
int
adc
add
aas
jnp
int3
xchg
out
lds
mov
out
xchg
mov
adc
inc
arpl
jbe
notl
daa
fnstsw
add
faddl
rcll
out
clc
daa
cmp
adc
pop
lret
cmpsl
lea
sub
jo
fdivr
jle
sbb
or
sbb
add
add
add
test
rcll
xor
scas
movsl
popa
es
scas
mov
mov
pop
sbb
add
ljmp
arpl
mov
jne
aas
stos
jl
shl
sub
je
lods
sub
out
loop
fxch
xchg
insb
cmp
pop
cltd
adc
push
add
and
cltd
out
mov
inc
ds
sbb
jmp
fisubrs
jnp
mov
sbb
add
mov
lahf
insb
add
inc
dec
mov
xor
mov
enter
cld
out
push
jo
sub
arpl
mov
loop
pop
mov
ficoml
mov
xchg
test
jge
xchg
int3
and
mov
stc
rcrl
fst
sbbb
jp
lods
test
lods
xor
out
push
dec
jge
or
repz
data16
arpl
lods
sahf
mov
aad
push
lea
pop
addb
xor
xchg
cmpsb
jl
dec
jno
and
sub
xor
cmpsb
fisttpl
and
mov
xchg
lahf
aam
stos
xchg
sbb
call
pop
js
mov
adc
nop
dec
lret
insb
mov
gs
shll
sti
das
aas
xor
mov
dec
in
test
stos
mov
lcall
pop
push
push
jnp
mov
je
fsubs
popa
cmp
dec
push
icebp
in
jl
lcall
jle
sub
andb
push
fs
xchg
push
out
filds
insl
xchg
push
mull
leave
mov
push
mov
test
xchg
cld
insb
inc
inc
loop
pushl
out
and
and
cltd
imul
mov
push
mov
rclb
imul
fwait
xchg
pop
fcoms
test
addr16
imul
cmp
mov
add
movl
pusha
outsb
clc
cmp
xor
faddl
add
aad
das
movsl
cmp
loope
mov
loope
repz
rorl
jb
mov
lock
rorl
repz
popf
pop
int3
or
sbb
cmp
jo
shlb
inc
xchg
adc
adc
in
aam
stos
or
out
cltd
pop
pop
xchg
shl
jg
ffree
fsubrl
dec
sub
mov
mov
inc
push
cmc
ja
idivb
and
les
cmpsb
cmp
cmpl
mov
lea
orb
aas
push
hlt
ret
out
fisttpll
repnz
dec
fstl
inc
xor
in
xlat
cmc
push
push
cmc
loope
je
adc
pop
dec
test
adc
fdivp
dec
xlat
adc
xor
cmp
jmp
call
ss
mov
xor
in
loope
sbb
xor
nop
scas
fucomi
jno
dec
mov
mov
lret
push
cmpsl
xor
popf
in
mov
add
repnz
fnstcw
data16
outsb
fs
and
xor
iret
add
xor
lea
call
pop
or
subb
nop
inc
stos
andl
push
push
adc
fists
mov
xor
pop
jno
cs
leave
or
lds
incl
cmp
test
scas
pop
lock
pop
out
jae
shrb
xchg
adc
nop
add
mov
cmpsl
mov
xor
sahf
pop
nop
adc
jb
jbe
jmp
fdivs
lcall
ret
cmp
mov
xchg
lcall
push
pusha
push
inc
adc
sbb
xor
rclb
mov
jg
lahf
jo
loope
jecxz
lods
pop
add
hlt
cmpsl
and
and
test
andb
mov
sar
repz
ror
mov
insl
scas
cwtl
and
adc
enter
mov
aas
xchg
inc
mov
and
pop
fstp
sub
aad
push
icebp
sbb
out
jp
adc
sbb
in
adc
outsl
arpl
adc
mov
cmp
iret
outsb
lods
jnp
daa
rorl
jle
xor
cmp
scas
mov
repnz
leave
push
loope
mov
push
sbb
cmp
mov
enter
cmova
or
popa
mov
sbb
add
dec
inc
mov
add
lods
cmp
mov
inc
out
sbb
inc
adc
adc
inc
sub
sub
bndstx
lcall
cmp
ss
inc
sub
dec
aad
xchg
sarb
push
fdivl
jp
xor
jle
das
insl
push
mov
xor
stos
xor
pop
or
out
test
gs
mov
int3
mov
add
hlt
mov
fbstp
popa
inc
in
clc
xorl
add
cmpsb
cmp
add
fisubl
pop
xlat
add
cmp
das
inc
pop
cmp
push
or
dec
jle
mov
cmpl
push
outsb
pop
lret
or
insb
leave
das
push
push
out
lock
mulb
cld
es
sbb
xor
mov
idivb
scas
popf
psrlw
sbb
fcmovu
jns
jbe
in
jns
push
cs
sub
or
mov
jle
and
inc
inc
inc
clc
bound
dec
std
mov
jb
test
ret
std
xorb
mov
insb
inc
adc
loop
lret
pop
bound
dec
mov
rorb
cmp
leave
ret
or
add
lcall
inc
fwait
loop
sub
mov
mov
pop
popa
or
das
je
cmp
ret
cmpsl
dec
pop
adc
pop
xchg
jp
jge
jno
and
pop
mov
inc
mov
sbb
inc
xlat
sub
xor
or
sub
pop
mov
mov
push
cmc
jecxz
imul
mov
cli
movsb
scas
inc
es
lods
aaa
xchg
mov
call
cmpsl
mov
and
outsl
data16
or
repz
pusha
mov
or
lods
xor
sbb
mov
xchg
ficoms
sbb
pop
leave
outsb
dec
push
sub
push
rcll
test
sahf
push
xchg
push
mov
mov
inc
and
xor
sub
and
fisttps
jmp
imul
in
repnz
loopne
es
repnz
dec
ja
dec
mov
push
insb
aad
push
xlat
lea
push
pop
mov
add
xor
fsubrs
and
mov
xchg
test
push
or
pop
les
jnp
or
test
insl
mov
insl
xor
dec
push
popf
jl
jae
jp
leave
pop
and
cmp
inc
pop
es
xchg
jle
xchg
repz
xchg
add
test
dec
enter
lds
cwtl
mov
mov
mov
or
arpl
cmp
pop
outsl
add
test
mov
es
add
pushf
test
dec
in
data16
int
movsb
stc
and
fbstp
out
mov
mov
lret
gs
adc
clc
cmpsb
inc
faddl
push
out
mov
xchg
popa
aad
das
test
jb
lahf
inc
mov
insl
dec
lods
dec
ljmp
pop
mov
test
sbb
cmc
ret
jge
fistpl
popf
insb
mov
dec
in
sti
sbb
clc
mov
scas
popf
pushf
adc
mov
test
bound
movsb
adc
inc
test
mov
loopne
xor
mov
gs
add
ret
ja
mov
addr16
add
cmpsb
stc
dec
xor
mov
fucomp
xor
rol
or
call
add
lock
mov
pop
xor
push
data16
dec
cmp
mov
ja
jmp
push
sbb
ret
imul
xor
stos
in
pop
mov
inc
push
ret
inc
movsb
js
push
jp
inc
std
inc
mov
mov
pushf
xor
xchg
dec
pop
pop
inc
cmp
adc
ficompl
or
dec
into
leave
imul
mov
icebp
adc
loopne
shrb
ja
xor
movsb
popf
dec
mov
outsl
inc
or
mov
pop
jns
sbb
lret
mov
insl
int
cmp
jge
add
mov
in
loopne
cmp
adc
cmp
andb
dec
repnz
int
nop
or
jnp
insl
and
jmp
xor
push
mov
dec
jbe
cld
mov
cmp
push
sub
popf
mov
stos
enter
lods
sahf
loop
inc
mov
in
pop
push
sbbb
ss
push
sbb
cli
push
test
pusha
mov
incl
jb
cli
ds
call
mov
loopne
lea
ss
mov
jo
and
fwait
sbb
mov
sbb
out
jmp
and
jg
outsb
push
dec
xlat
stos
les
cli
hlt
cmp
sub
stos
and
jl
nop
jle
sarb
in
iret
or
dec
addb
dec
jns
imul
xchg
outsl
mov
mov
ja
pop
cltd
push
shll
and
cli
and
rcll
cli
adc
fsubrs
mov
outsl
and
or
pop
incb
in
xchg
mov
movsl
xchg
pusha
test
cmc
pop
rcl
sub
imul
sub
loopne
into
or
dec
cmc
pop
rolb
mov
sbb
lcall
xchg
rol
ret
jecxz
repz
xlat
mov
lods
jle
hlt
insb
sbb
mov
dec
or
xchg
or
mov
sbb
add
cli
and
pandn
repz
bound
shlb
daa
add
cmp
push
push
dec
cmp
inc
push
test
cs
aas
jbe
movsl
sub
ret
fdivrs
arpl
fcmovnu
add
push
ret
inc
mov
cmp
xchg
xchg
jne
pop
cmp
loope
xchg
pop
loopne
xchg
cmp
mov
dec
ret
jnp
inc
dec
pop
mov
leave
mov
sbb
push
std
add
mov
inc
jl
ja
pushf
xor
sti
int3
repnz
je
dec
jle
iret
lock
xor
jnp
data16
pop
test
test
cmp
push
pop
xor
ja
shll
decb
sbb
jnp
mov
test
jp
mov
inc
xor
mov
into
xchg
mov
xchg
push
insb
jle
dec
push
mov
sub
mov
adc
dec
jae
nop
push
out
insb
lods
clc
jl
pop
sbb
push
repnz
xor
mov
frstor
sahf
jl
jge
clc
mov
push
or
jb
das
adc
push
mov
jle
repz
jg
inc
push
rcrl
mov
insb
movsl
mov
inc
clc
fcomps
sub
mov
sbb
dec
sub
xchg
jmp
mov
pusha
loopne
push
xchg
stos
dec
jne
inc
jns
push
or
jg
mov
pop
scas
insl
mov
adc
push
mov
sub
pusha
dec
xchg
out
int
in
in
and
enter
mov
andb
pop
push
add
dec
cmc
daa
push
fwait
lds
lock
mov
jbe
mov
jecxz
test
xchg
lret
sbb
mov
dec
int3
jg
mov
and
js
rclb
sbb
rcll
push
rcll
mov
xchg
cmp
addb
push
and
call
out
pop
stos
pop
popf
cli
repnz
pop
fs
dec
imul
lea
ret
jmp
push
stos
sub
test
stos
nop
push
xor
push
ljmp
cmpsb
call
adc
mov
mov
test
and
pop
test
fidivs
out
add
mov
jmp
aas
iret
mov
cmp
int3
or
jns
movsb
imul
or
movsl
in
std
mov
sbb
and
and
popa
mov
popf
shll
idiv
pushf
stos
jle
push
out
dec
inc
shlb
mov
dec
xchg
fcoms
lds
cmp
adc
add
outsb
shlb
sarl
pop
adcb
pop
jnp
xor
inc
and
mov
jnp
popf
mov
sbb
and
pushf
mov
repz
dec
or
lret
call
in
clc
cmp
jns
jo
jl
fs
out
mov
pushf
fstpl
ja
mov
lea
mov
pop
sbb
xchg
bound
sub
dec
jnp
jmp
rorb
daa
call
xor
inc
pop
sub
xor
dec
mov
sbb
mov
mov
cltd
xor
lods
push
mov
pop
out
inc
sar
and
add
imul
mov
jno
xor
imul
mov
dec
push
iret
mov
jae
cli
jle
inc
jnp
and
dec
clc
lods
and
cmc
adc
push
aaa
xor
jl
push
sub
xor
cmp
aad
mov
ja
aaa
jne
adc
mov
xor
jge
notl
aas
scas
ret
shlb
fnstsw
mov
mov
mov
je
push
repnz
loop
inc
jmp
lock
mov
mov
inc
inc
mov
fwait
xor
fcmovnbe
jmp
je
mov
mov
jne
repnz
and
cmp
xor
mov
inc
push
ja
jg
les
mov
cmp
inc
adc
cwtl
ja
xchg
xorl
lea
xchg
jnp
rclb
ds
sub
nop
mov
cmp
mov
ss
rclb
xchg
add
jl
das
and
sub
sarl
mov
imul
sarl
adc
add
adc
loope
cmpl
push
loopne
into
dec
out
mov
sbb
mov
scas
push
dec
xlat
leave
dec
mov
daa
sub
fldt
push
adc
dec
adc
sub
cmpsl
icebp
cld
std
dec
stos
sub
inc
cs
bound
add
jbe
push
test
test
mov
jmp
dec
mov
inc
movsb
dec
xor
imul
jns
cmp
lds
xchg
dec
in
and
fsubrs
adc
fwait
xor
nop
jmp
or
bound
mov
lcall
adc
lods
es
or
add
ds
push
scas
pusha
sahf
xchg
mov
ror
data16
les
and
loope
jl
lea
push
push
bound
fmull
cmpsl
push
cmpb
inc
xchg
jecxz
in
psrlq
mov
adc
outsl
movsb
sub
inc
cltd
dec
lahf
mov
pushf
mov
or
and
icebp
shlb
std
xor
and
ret
dec
jne
inc
add
jnp
mov
test
mov
arpl
faddl
mov
cs
mov
into
pusha
pop
xchg
dec
xlat
mov
add
push
pop
insl
daa
dec
cltd
test
and
inc
fmull
inc
testl
leave
mov
mov
jne
mov
loop
cmp
mov
js
adc
in
jmp
push
dec
inc
xor
fsts
out
pop
lret
fwait
push
sbb
add
push
jle
loopne
xchg
jmp
lock
stc
lock
inc
shrb
pop
fsub
add
push
sub
adcb
sub
xchg
push
lret
ss
push
or
pushf
sbb
and
popa
lahf
xchg
add
not
call
test
iret
cs
and
xchg
lods
in
mov
test
sub
push
mov
adc
cmp
rolb
lea
scas
sub
cmp
fldenv
fisubrs
and
cmpsb
sbb
mov
push
jg
in
popa
andb
xchg
nop
leave
sarb
je
imul
push
mov
fmulp
int
mov
imul
lret
test
pop
push
or
fstpl
xchg
ljmp
mov
mov
scas
mov
jecxz
cltd
or
cmp
inc
jne
or
mov
lret
repnz
dec
icebp
ja
xlat
andl
dec
mov
dec
mov
lds
scas
pushf
subl
xor
js
cmpsl
xor
or
mov
pop
push
fidivrl
aam
stos
sub
icebp
sub
jne
stos
imul
adcl
pop
cwtl
push
or
notl
push
clc
fistl
fsubr
inc
ffree
xchg
in
fcmovbe
cmpsl
rorl
mov
popa
or
adc
lret
icebp
adc
loope
dec
jne
inc
aam
dec
stos
movsb
dec
movsb
push
rcrl
daa
sti
or
xchg
cli
mov
dec
pop
xchg
mov
int3
bound
sub
jg
int
cmpsb
xchg
sub
jl
in
xor
push
fnsave
adc
test
cmp
and
xchg
and
fisttps
mov
shrb
and
jecxz
add
ret
movsb
and
mov
mov
pop
test
sahf
xchg
in
add
jg
stos
jne
mov
mov
int3
test
aas
push
pop
mov
cmp
sbb
push
adc
xchg
popa
mov
sbb
iret
je
imul
add
incb
addr16
pop
into
lock
scas
fildl
int
jbe
cmp
mov
mov
push
fwait
mov
or
lds
xor
ffreep
stos
mov
xchg
pop
fcoml
mov
pop
pop
test
push
lods
pop
xchg
inc
add
mov
out
lret
mov
jg
inc
inc
sti
lret
dec
push
sub
lret
inc
shll
jnp
inc
out
loope
sbbb
dec
xor
mov
lcall
ret
mov
jle
sahf
stc
mov
push
mov
pop
adc
push
and
mov
dec
push
or
pop
sti
push
ljmp
jbe
testl
xchg
mov
aam
sub
dec
xor
add
insb
inc
or
push
cltd
das
fcompl
jmp
inc
jl
aas
mov
insl
or
xlat
and
addr16
mov
out
in
push
test
push
sub
mov
adc
sub
ret
subb
fbstp
dec
in
shl
addr16
jmp
data16
jne
repnz
testb
mov
idivb
nop
in
mov
or
je
fs
mov
addb
hlt
jp
add
rorl
jg
push
es
jmp
shrl
pop
sbb
mov
adc
inc
pop
xor
pop
mov
mov
rclb
xchg
or
push
mov
nop
jmp
addb
mov
dec
cmp
shl
push
pop
xchg
or
cs
dec
dec
mov
cld
or
add
and
lcall
testb
pushf
dec
into
jge
lcall
in
loop
dec
fmuls
push
mov
fwait
in
add
jnp
outsb
enter
inc
jecxz
dec
adc
insb
inc
cmp
jp
cmc
mov
dec
cltd
loop
inc
mov
jl
inc
sti
fstp
jae
insl
cmpsl
and
mov
or
lret
in
jne
mov
jne
jns
int
mov
jae
cld
add
in
rclb
or
cltd
mov
pop
imul
int
roll
jae
cltd
rcrb
push
push
les
fidivl
arpl
xchg
adc
pusha
fs
imul
stos
add
incb
sti
cmp
andl
je
lret
out
xor
push
nop
sbb
roll
hlt
pop
pop
je
xchg
testb
mov
xchg
mov
jb
scas
leave
mov
dec
test
pop
nop
cld
push
inc
or
jl
inc
pop
mov
jno
ret
imul
out
mov
mov
push
and
repnz
cli
jmp
fwait
add
pusha
jo
insl
fcompl
subb
or
dec
inc
jns
fnstenv
insb
mov
test
imul
enter
inc
xchg
pop
and
es
loope
mov
cmpsl
pop
insl
hlt
in
push
std
fmull
ja
ret
stc
and
jmp
fmul
iret
cltd
in
adc
cmc
leave
movsl
sub
and
adc
pop
mov
and
jg
jo
mov
adc
cmc
loope
xor
xor
rcll
imul
cmc
sub
adc
mov
nop
test
in
mov
cs
les
gs
das
sahf
xchg
pusha
push
push
jno
push
out
sub
jg
leave
std
sub
loopne
mov
jmp
adc
mov
inc
testb
stc
mov
push
push
push
mov
jle
sbb
flds
nop
cmc
fs
inc
mov
test
push
jnp
fwait
sti
out
sub
lret
mov
mov
stos
scas
jmp
jno
imul
cmp
inc
inc
loopne
mov
jb
iret
leave
mov
pop
mov
cltd
add
and
into
mov
bound
jge
and
pop
sbb
stos
mov
shl
shl
insb
xchg
and
mov
xchg
jno
test
xorb
into
mov
les
and
leave
lret
mov
call
std
into
int3
xchg
cs
ret
test
sbb
inc
pushf
mov
jge
jo
icebp
les
sbb
xorl
pop
dec
xorb
xchg
jmp
mov
sbb
xchg
imul
dec
out
cs
cltd
mov
mov
mov
cli
std
fisttps
insb
scas
adc
ret
into
adc
jmp
inc
xlat
lods
dec
cwtl
xor
fs
icebp
add
lods
mov
loope
dec
xchg
pop
add
sbb
lahf
xor
jae
adc
rorb
pusha
jbe
cmp
out
mov
daa
lahf
jnp
or
xchg
stc
mov
fistpll
and
mov
xlat
xchg
mov
call
add
jl
cwtl
pop
pop
mov
fildll
push
je
stc
cmpsl
jmp
in
roll
in
adc
xchg
mov
sbb
test
jbe
adc
pop
mov
dec
mov
jmp
leave
pop
or
jbe,pn
outsb
outsb
xor
rcrb
mov
push
insl
sub
es
stos
ljmp
or
xchg
sbb
or
pop
movsl
data16
pop
loop
dec
mov
push
cmp
imul
mov
mov
jle
repz
outsb
push
fidivrs
movsb
xchg
mov
mov
ror
mov
cld
jbe
cmc
in
ljmp
xor
inc
dec
sbb
inc
xchg
jne
push
movsb
dec
or
outsl
push
push
adc
sahf
stc
shl
push
and
out
iret
xor
xchg
adc
xchg
lock
cmpsb
leave
add
jbe
inc
nop
dec
add
je
jg
or
xchg
mov
xchg
mov
push
mov
push
dec
push
rclb
rclb
pop
add
test
xor
xor
dec
mov
sub
xor
xchg
js
test
or
and
pushf
pop
inc
pop
push
dec
sub
pop
or
push
inc
cmp
push
mov
aad
mov
out
in
mov
mov
and
add
bound
fmul
jno
pop
dec
movsb
inc
lcall
and
xor
ss
push
clc
in
add
cmpl
rclb
scas
push
adc
lea
xor
dec
lock
mov
cmp
mov
out
dec
add
jg
mov
shrb
pusha
sti
pop
insl
push
jecxz
adc
push
fdivrp
xchg
and
outsb
cmpsl
in
and
sbb
sti
call
test
mov
sbb
cmp
rolb
lcall
fdivrl
mov
sbb
fcompp
pop
test
je
lret
mov
mov
pushf
xor
loopne
xlat
mov
lret
fistps
icebp
mov
pop
or
xchg
aaa
outsb
jbe
xor
shl
sbb
add
jo
dec
fdivrl
sub
dec
mov
pushf
ss
mov
loope
insl
in
sti
pop
outsb
mov
cltd
mov
mov
hlt
les
fdivl
mov
mov
pop
data16
loope
arpl
xchg
adc
sbb
mov
and
movsb
iret
fs
cmc
jne
mov
into
jmp
push
call
xchg
mov
ret
je
xor
jge
pop
xchg
cmc
bound
push
sahf
push
repnz
fs
sbb
scas
xor
pop
fdivp
subl
stc
lcall
sbb
js
mov
mov
cmp
sub
negb
mov
fwait
sbb
out
inc
notb
aaa
xchg
mull
sub
ljmp
cli
fwait
cwtl
mov
stos
lret
test
push
add
and
movsb
adc
mov
incb
adc
insb
inc
ret
fimuls
push
or
dec
jge
mov
push
inc
mov
jae
xchg
sub
mov
xor
in
sbb
or
mov
jl
scas
mov
inc
movsb
lods
xor
jg
mov
pop
pop
and
fwait
add
test
data16
and
loopne
cmc
mov
stos
jbe
cmpsb
jno
idivb
lahf
cld
xor
lods
imul
aam
cmc
lea
push
add
dec
cmp
inc
xchg
mov
shl
scas
jne
xchg
mov
or
shll
xchg
out
dec
int
mov
test
loop
out
cltd
adc
in
mov
movsl
push
jecxz
and
pop
cmpsl
leave
and
and
call
sub
lcall
int
js
std
xlat
cmpsl
data16
jmp
lds
call
mov
inc
cmpsl
dec
les
push
ror
mov
or
cltd
fldt
mov
push
in
sbb
test
movsb
push
stos
jb
mov
sbb
cmp
adc
jns
icebp
fninit
bound
into
rcrb
dec
mov
jg
iret
jg
rcl
imul
in
adc
shll
and
test
jno
cmp
add
xchg
adc
sbb
push
and
or
or
inc
sub
push
pop
ss
in
call
loop
cwtl
adc
inc
push
rcr
ficompl
push
movsb
pop
insb
nop
jo
ljmp
add
jnp
add
and
pop
and
add
lret
pop
rcrl
inc
add
arpl
out
inc
xchg
scas
test
adc
in
dec
pop
or
test
ss
js
xlat
int
cltd
add
lcall
xchg
add
jns
pop
mov
jle
call
int
dec
push
repz
mov
jns
add
sub
aas
cwtl
inc
fisubs
rcrl
mov
sub
movsb
mov
scas
dec
test
fcompl
pop
aad
repz
jns
mov
lds
mov
in
mov
add
out
sti
add
sbb
lods
xor
mov
push
sti
dec
insb
mov
dec
jl
xor
dec
push
or
mov
lods
rcr
bound
add
fidivl
inc
nop
mov
inc
test
ja
mov
and
fiadds
dec
pop
and
or
adc
add
scas
movsl
fs
cmpsb
pop
mov
shrl
mov
mov
mov
dec
mov
arpl
ljmp
ficoms
mov
cmp
dec
loop
repz
cmp
fldlg2
jns
es
rcrb
inc
cli
sub
loop
cmc
adc
pop
test
mov
imul
mov
xchg
jl
jmp
mov
cmp
pop
xor
mov
pop
and
sahf
pop
repnz
out
int
cmc
cs
push
pusha
inc
and
add
jg
je
cld
adc
in
mov
sub
lock
pop
leave
adc
es
push
adc
in
sub
push
jp
clc
mov
or
dec
cmc
adc
call
jecxz
push
ss
stos
xor
xchg
xor
adc
outsb
push
iret
lods
cs
ret
fdiv
xor
cmp
test
sub
xor
stos
xchg
jb
lret
lds
sbb
cld
xor
movsb
imul
inc
std
pop
imul
enter
xor
mov
push
pushf
movsl
idiv
mov
imul
insb
test
xchg
int
aam
mov
sub
shr
pop
add
lods
adc
rcr
addr16
scas
fs
inc
sub
jmp
stc
sub
je
jl
scas
and
mov
call
stos
mov
clc
jo
xchg
dec
mov
adc
jnp
stos
mov
push
cwtl
repnz
inc
fdivrs
lret
pop
xor
adc
pop
mov
xor
and
jge
jge
stos
mov
jbe
push
shrb
and
pop
inc
jne
xor
push
lcall
popa
push
dec
dec
divl
jae
push
popa
sbb
sbb
sub
jecxz
xor
sbb
lret
test
lea
mov
loope
mov
out
lds
call
xchg
lret
data16
push
ljmp
pusha
lret
lret
sbb
mov
dec
inc
sub
int
rclb
xchg
adc
aas
jno
in
dec
outsb
cmpsl
popf
cmc
loop
sub
mov
lock
mov
data16
gs
cmp
add
out
inc
jnp
scas
mov
sbb
mov
insl
test
popf
xlat
addb
jo
mov
dec
pop
lret
std
adc
jb
andps
dec
pusha
out
mov
jae
daa
xchg
fcomp
jns
rcll
mov
pop
stos
inc
add
jne
bswap
pop
and
xchg
aas
or
enter
lcall
mov
int
out
int3
sbb
jmp
ljmp
add
std
sub
test
sbb
stc
or
nop
pop
cmp
mov
sub
mov
call
lret
inc
fs
fsubs
xor
cmpsl
rcrl
bound
lret
enter
pop
test
dec
loopne
add
add
andb
lods
ss
shll
addr16
dec
cmpsb
shll
mov
mov
push
iret
and
jne
add
xor
bound
testb
cmp
ja
jmp
imul
into
pop
sbb
pop
repnz
add
xchg
xor
jbe
test
leave
adc
push
xchg
out
mov
and
add
jbe
pop
insl
out
xchg
xor
pop
push
rol
roll
adc
inc
sub
outsb
sbb
jns
cmp
cmpsb
arpl
lahf
sbb
out
mov
test
pop
mov
xor
pushf
add
pop
lcall
cmp
xchg
aaa
iret
push
jbe
dec
xchg
push
xor
and
stos
cmc
test
enter
cmp
inc
cmp
out
dec
adc
cmp
add
rcrb
adc
push
bound
sbb
xchg
push
aad
test
shll
popa
pop
scas
mov
loop
enter
and
xchg
mov
sub
jae
repz
rorb
jecxz
test
lea
addr16
jle
or
out
fsub
sub
cwtl
mov
jnp
sbb
xor
mov
insl
add
sub
aam
cmp
movsb
inc
sub
loopne,pt
mov
xchg
nop
sbbb
add
dec
dec
mov
leave
dec
or
inc
lahf
pop
aaa
sbbl
nop
and
pushf
sarl
mov
out
shl
xor
push
mov
or
sub
int
sbb
cmpsl
sarb
ret
mov
inc
jl
pop
in
adc
xor
xchg
movsl
mov
sub
push
repnz
je
cltd
test
inc
or
pop
mov
push
hlt
out
lret
aas
mov
add
paddd
cld
add
xchg
push
pop
pop
out
inc
aad
push
data16
fistpl
mov
lret
addr16
aas
push
sbb
mov
cmp
cmp
push
jno
nop
add
pop
aas
stos
mov
jmp
or
mov
icebp
rolb
adc
out
pop
arpl
mov
mov
mov
shrl
dec
xchg
adc
in
pop
dec
mov
mov
pusha
pop
in
es
push
mov
lahf
mov
ss
fwait
imulb
std
inc
aad
imul
push
inc
push
cmpb
sbb
outsl
mov
aas
clc
and
fwait
aam
data16
loopne
scas
xchg
movsl
ja
aas
jne
sub
xchg
xor
fists
test
loopne
je
das
outsl
pushf
cltd
lods
sarb
cmp
jnp
fcompl
inc
clc
nop
push
fistl
insl
jp
stos
icebp
mov
cltd
movl
movsb
jg
test
arpl
cltd
hlt
and
mov
movsb
push
repz
shr
pop
mov
xlat
jns
repnz
xor
adc
data16
std
sub
xor
int3
sub
jge
icebp
rorl
cwtl
jne
dec
push
push
jo
cmp
test
std
push
xchg
insl
sbb
fdivp
lahf
xchg
xor
xchg
push
jecxz
add
mov
fbld
mov
into
sub
xchg
lcall
test
mov
scas
cmp
mov
push
inc
mov
enter
push
add
pop
jns
or
or
scas
cli
into
shrl
imul
cs
fisttpl
cmp
filds
movsl
mov
mov
or
sahf
inc
loopne
or
adc
mov
sbb
pop
fwait
mov
jae
insb
int3
push
mov
sti
dec
fcmovu
jg
jnp
subw
sub
repz
test
jne
cmp
push
hlt
sarb
jo
xchg
add
push
sahf
fstl
pop
push
loop
jle
pop
dec
mov
push
and
fsubrp
outsb
xor
or
jmp
push
sbb
cmp
push
lret
cld
push
fnstsw
jecxz
stos
orb
or
mov
cli
repz
call
and
inc
cld
decl
push
pop
mov
aad
cmpsl
inc
aad
ficomps
dec
scas
sub
ds
in
sbb
mov
or
fstps
in
lret
out
lahf
clc
out
neg
mov
and
icebp
dec
sub
pop
push
cmp
lea
xor
pop
mul
ja
orl
mov
aam
add
mov
xor
orb
hlt
dec
xorl
aaa
mov
ss
sbb
sub
movhps
out
adc
mov
mov
jns
push
push
xor
loope
mov
mov
dec
fstpt
jns
adc
push
mov
dec
scas
push
movsl
adc
test
in
and
in
xchg
mov
or
out
sbb
mov
ja
xor
jnp
aaa
popa
push
sahf
push
fs
andb
jae
stc
push
lahf
lods
cmc
popf
add
pop
sbb
arpl
hlt
loopne
inc
test
adc
pop
aas
inc
test
arpl
pop
popa
cli
lods
fstpt
mov
stos
rcr
xchg
lahf
fldlg2
dec
xor
hlt
out
adc
xor
jae
out
mov
enter
push
insl
sub
fstps
incl
movsb
push
mov
les
test
push
popa
repnz
cmp
pop
orl
stos
cmc
popa
inc
and
int3
flds
test
int
push
imul
loopne
loopne
mov
clc
xchg
in
iret
stc
dec
cltd
push
into
cmpl
mov
pop
mov
xor
mov
mov
leave
mov
js
mov
es
sbb
or
lcall
pop
fcomps
pop
out
sub
push
and
aam
mov
add
ss
add
jg
adc
leave
rep
sar
out
inc
test
rol
and
adc
cmpsb
mov
add
adc
jno
mov
outsl
mov
mov
mov
test
adc
jmp
mov
stos
faddl
pusha
mov
into
xchg
push
imul
pop
sub
and
jo
rcll
ret
lahf
adc
lods
mov
scas
popf
shl
jmp
xchg
xchg
or
dec
movsb
cmp
cmc
cmp
adc
leave
jp
push
mov
push
out
js
add
mov
push
pop
std
inc
pusha
mov
sub
int
or
out
jbe
push
inc
xor
mov
dec
daa
sbb
dec
dec
fistpl
int
jp
fstps
fnstsw
xchg
mov
lret
add
std
testb
push
movsb
loopne
pushf
sub
jl
data16
aaa
data16
push
xor
aaa
add
shll
sub
jl
loopne
lods
test
stc
int
dec
addr16
and
push
ss
movsl
push
mov
int3
xor
sbb
jle
cmp
sbb
inc
fimuls
in
mov
and
xchg
inc
insb
stos
rorb
lock
lret
fwait
xorl
jae
dec
cmpsb
shrl
push
inc
jne
jns
les
faddl
pop
push
popf
sub
cs
in
iret
mov
jp
add
cmp
inc
arpl
mov
insb
cld
cmp
aam
pop
repz
test
push
pop
hlt
gs
xor
mov
sti
jb
out
inc
push
jnp
nop
loopne
rcr
mov
fcmovne
jecxz
rcll
adc
add
int
mov
fwait
jecxz
mov
pop
push
sub
jmp
insb
cwtl
xchg
and
xchg
aam
lcall
jno
jge
dec
stos
cltd
adc
icebp
popf
mov
insb
das
ja
adcb
js
inc
pusha
mov
jg
in
ja
dec
pusha
xchg
leave
dec
scas
add
mov
cwtl
clc
roll
inc
xorl
cli
push
orb
ror
and
pop
push
incb
clc
fists
movsl
cmpsb
or
dec
shrb
jp
dec
mov
push
mov
pop
rcrb
aam
or
mov
push
idivb
mov
jmp
adc
dec
lahf
lret
pop
leave
adc
or
ja
dec
mov
inc
jg
mov
push
shll
jno
xchg
and
push
xor
dec
cmc
js
jno
inc
ret
dec
loopne
iret
cltd
mov
jl
mov
aaa
and
xchg
inc
pop
fadds
push
xchg
mov
pop
cmp
pop
pop
inc
idiv
es
inc
push
and
cwtl
jmp
mov
jecxz
dec
push
in
hlt
movb
xor
mov
add
jmp
add
testl
xor
addr16
testl
sahf
aad
adc
test
sahf
pop
mov
mov
dec
pop
jo
out
dec
push
push
repz
sar
enter
insl
int3
int
fimull
imul
xorb
push
dec
je
cwtl
or
fbld
or
cmpsl
mov
cli
mov
bnd
jl
adcl
xor
mov
inc
repz
add
push
adc
popa
push
cmp
xor
aas
pusha
flds
lret
ja
ja
in
and
xchg
mov
inc
and
sbb
mov
mov
inc
or
pusha
test
mov
test
iret
add
fstps
and
into
popa
das
mov
fprem1
test
dec
iret
jmp
xor
dec
and
int3
jo
xchg
pop
cli
int
and
rcrl
fwait
jbe
pop
out
out
lock
pop
lret
in
mov
mov
sbb
adc
and
fistps
push
adc
mov
pop
stos
mov
stos
ljmp
xchg
or
jp
addb
fiadds
sub
fwait
pop
jmp
mov
ljmp
dec
push
jmp
rcl
outsb
push
inc
push
out
insl
test
ds
into
xor
hlt
mov
inc
mov
pop
jb
xchg
lock
push
jo
inc
imul
unpckhps
cmp
pop
repnz
mov
je
push
push
xchg
inc
loopne
cmp
into
aaa
repnz
jl
push
mov
cmp
adc
sbb
sbb
popa
xchg
div
pop
mov
dec
pop
mov
pop
and
hlt
inc
pop
sub
mov
inc
jo
fldl
das
mov
xor
loopne
mov
ja
loopne
inc
mov
xor
pop
shll
arpl
loope
xor
pop
cwtl
jmp
pop
scas
add
cmp
push
std
lock
cmp
je
mov
ficoms
sbb
push
push
jl
je
dec
mov
cld
rcl
mov
mov
bound
rcll
pop
sub
xor
dec
dec
mov
or
aam
jnp
call
fwait
insb
enter
mov
js
jns
jge
jb
and
cmp
dec
cs
sbb
shl
mov
cmp
or
add
daa
add
mov
test
je
sbb
lds
movsb
lods
andl
xor
fs
mov
test
jmp
add
ficoms
jbe
and
repnz
xchg
push
sub
shlb
iret
jo
jmp
pop
fsubr
dec
fwait
lret
les
call
ja
adc
std
pop
sahf
dec
and
iret
scas
pop
decl
stos
sbb
addr16
pop
adc
in
pop
ja
in
lods
insl
and
cltd
sahf
mov
jg
data16
adc
mov
aaa
idivb
insb
pop
stos
pusha
mov
lea
lcall
mov
lret
inc
inc
frstor
fwait
push
out
loope
mov
rorl
xchg
movsl
sbb
or
jmp
mov
jmp
in
or
rclb
mov
imul
fadds
subl
roll
dec
jp
mov
into
dec
orb
sets
cld
mov
lea
adc
xor
fcomip
pop
lods
jns
jae
push
and
cs
fists
or
inc
inc
sub
ja
cmc
inc
pop
in
jmp
nop
pop
into
sub
clc
daa
int3
mov
imul
outsl
mov
dec
jp
nop
cld
mov
js
jg
adc
jae
sbb
xor
test
rcl
in
sbb
out
pop
insl
push
mov
or
push
add
mov
xchg
jle
loopne
inc
cltd
lods
dec
or
nop
stos
ljmp
dec
adc
in
roll
js
jno
movsl
fsub
pop
mov
xlat
push
cmp
xor
or
mov
push
pop
icebp
lcall
xchg
xchg
push
ljmp
and
adc
push
mov
and
push
sbb
test
sahf
xchg
and
mov
into
dec
mov
aaa
icebp
or
cmp
sbb
pop
ficoml
jecxz
mov
mov
dec
or
dec
xlat
fs
std
rorb
aaa
push
mov
scas
jecxz
jbe
pop
sbb
nop
pop
ret
jg
popf
icebp
push
jb
sbb
scas
test
mov
imul
pop
jno
sbb
pushf
sub
lcall
sbb
push
rol
sahf
inc
pop
xlat
jnp
xor
es
mov
cmpsb
and
xor
addr16
scas
and
push
xor
cs
sub
push
sub
repz
inc
fdiv
inc
jbe
aas
mov
jl
xchg
jl
mov
pusha
xchg
aam
test
aaa
outsb
fcmove
in
mov
leave
xorps
movl
push
andl
cwtl
addb
jmp
test
sub
sarb
inc
inc
dec
pop
jecxz
adcb
pushf
stos
loop
xor
jbe
repnz
xchg
cmp
pinsrw
shl
xchg
add
sbb
nop
cld
mov
icebp
mov
push
push
lahf
inc
cmp
mov
push
push
dec
icebp
push
mov
jbe
push
lds
sbb
xor
mov
inc
cmc
ljmp
cmpsb
mov
sbb
mov
cld
jae
sub
jge
es
mov
push
sub
adc
cmpsl
xchg
repz
cmp
add
fwait
sub
xchg
mov
cld
aad
mov
pop
shll
je
cmp
roll
in
das
lret
jb
fcom
mov
js
filds
mov
xchg
mov
repnz
xor
inc
cvtps2pd
jp
pushf
lods
inc
fdivrs
fcomps
fcmovbe
push
dec
mov
int3
sti
xor
fdiv
bound
xchg
movsb
jne
pop
pop
into
ret
push
inc
lods
fidivl
idivl
insl
push
divl
cwtl
push
adc
or
cwtl
mov
dec
mov
inc
xor
adc
and
js
dec
cmp
xor
add
jmp
icebp
fisubrs
adc
push
mov
std
pop
imulb
and
mov
orl
push
cmpsl
push
fldenv
xor
jae
cld
xchg
sub
rorl
sbb
xor
pop
int
and
push
test
and
out
mov
les
inc
xor
test
pop
sub
andl
push
push
sub
cmp
mov
cmpsl
add
cmp
mov
cmpsb
jl
hlt
shlb
and
loop
sbb
aam
push
push
jp
xor
aam
ffreep
xchg
mov
enter
sbb
dec
ljmp
fidivrl
fwait
shl
ja
push
inc
push
inc
xchg
cli
mov
in
shr
or
stc
addr16
or
inc
sub
push
jmp
cmp
pop
aas
fdivrl
pop
pop
into
cmc
lea
mov
add
sbb
jno,pt
lret
rclb
call
loopne
and
pop
sbb
xor
xor
mov
out
add
sub
lods
shlb
inc
popa
cmp
sub
out
jno
or
iret
inc
in
sbb
addr16
repnz
sub
fstps
movsl
mov
orb
bound
or
aad
mov
arpl
xchg
jb
add
call
inc
mov
js
ss
jp
xor
loopne
mov
mov
clc
fidivrl
fildll
and
inc
inc
add
cmp
fsts
call
mov
adc
mov
mov
fcmovb
fiaddl
or
or
cmpsb
mov
shlb
pop
inc
sbb
imul
ret
lds
inc
xchg
pop
rorl
js
mov
fwait
negl
call
mov
in
aas
popf
inc
std
sub
xor
push
callw
cmp
scas
jg
add
adc
mov
nop
jbe
mov
sub
cmpsl
xor
mov
and
andl
adc
stc
nop
shll
repnz
push
rclb
dec
mov
mov
in
ds
sub
jl
inc
lahf
sbb
push
scas
outsl
jg
clc
in
loop
cs
repz
out
leave
inc
loopne
push
add
insb
fsubrs
fisttpl
cmp
lods
inc
sbb
outsl
cwtl
fidivs
push
jge
adc
xchg
xor
pop
out
jg
inc
jl
sub
pop
xchg
xor
idiv
push
xchg
push
jecxz
out
ret
pop
movsl
jnp
cmp
jmp
test
xor
stos
les
cmpsb
sbb
das
push
ss
add
push
and
rcrl
stos
call
dec
mov
or
lea
mov
into
add
aad
test
call
add
push
pop
int
mov
jmp
or
xor
imul
mov
jge
jae
cli
mov
fs
and
cmp
sbb
movsb
push
xchg
lahf
aas
ss
popa
mov
addb
mov
mov
jg
ds
dec
ljmp
icebp
mov
frstor
cmp
add
sbb
int
pop
adc
jo
mov
mov
pop
into
mov
cmp
ret
ja
cmp
out
nop
mov
mov
xor
out
cltd
clc
stos
adcb
mov
fildll
dec
rorl
adc
and
add
xchg
fsubp
out
out
xor
push
xor
inc
out
push
outsb
add
cld
pushf
cmp
sub
adc
pop
xor
mov
sbb
test
jbe
inc
sbb
notb
pushf
testb
inc
popf
inc
aaa
xor
popa
xchg
roll
jecxz
divb
cmp
adc
push
je
pop
imul
loope
das
lods
pop
test
jecxz
xchg
nop
pusha
rcrb
mov
adc
lea
sbb
mov
pop
orb
mov
stos
pop
xlat
outsl
jno
cmp
adc
je
xchg
dec
dec
push
iret
jecxz
int3
xor
xor
and
icebp
subb
adc
xchg
pop
xchg
enter
arpl
das
out
dec
push
in
jg
inc
iret
mov
in
push
fcoml
xchg
xor
cld
and
mov
dec
and
push
mov
jle
mov
sbb
faddl
add
repnz
testb
sbb
jg
loop
int
or
test
fucom
idivb
out
nop
sti
mov
adc
push
lds
xor
add
fimuls
xchg
jae
jbe
adc
jb
imul
in
and
adc
stos
jbe
dec
rorb
mov
hlt
fs
mov
push
xchg
out
sub
sbb
popf
jp
dec
add
inc
cmp
leave
aam
mov
incb
mov
xchg
cmp
sbb
push
sub
das
ret
notl
fcmovnu
addr16
and
fdivrs
ret
mov
mov
aad
xor
inc
call
cli
push
test
hlt
test
cli
jns
sbb
iret
mov
rcrl
xor
mov
call
and
sub
push
or
cs
fdiv
lret
jmp
jecxz
dec
cmc
in
push
je
addb
leave
comiss
jg
or
pop
or
push
iret
fadd
outsl
mov
cmp
in
inc
in
pop
inc
push
adc
test
inc
in
ss
mov
hlt
sub
idivb
inc
fsts
and
adc
xchg
cmp
sbb
xchg
mov
jge
das
pop
in
popa
lret
mov
mov
cltd
das
addr16
inc
sbb
lods
dec
pop
insb
aam
mov
mov
int3
cmpsl
cmpsl
jnp
lea
pop
mov
push
ss
cmc
sub
dec
sbb
aaa
adcb
out
mov
scas
pop
pop
fxch
sbb
adc
xchg
stos
sub
jmp
cmp
jo
ret
dec
jne
sbb
or
stos
xchg
push
mov
je
mov
or
and
or
sarb
jmp
or
inc
push
sbb
cs
fnstenv
cmp
les
cmp
mov
popa
and
jecxz
gs
shrl
bound
jb
add
shl
outsl
scas
fnsave
leave
mov
jl
jno
and
pop
ja
add
lea
stc
dec
jmp
or
or
mov
push
add
pop
jb
fadd
fimuls
fadds
rorb
or
pop
cmp
divb
insb
pusha
mov
sbb
lods
mov
test
sbb
xchg
or
into
jmp
mov
mov
push
fdivrp
xchg
js
loop
cli
in
push
mov
xchg
push
fisubrl
pushf
and
mov
inc
dec
xor
popa
mov
popf
dec
pushl
shll
lods
std
out
mov
jo
test
mov
repz
and
aad
out
push
scas
sbb
mov
repz
push
mov
inc
add
dec
mov
stos
clc
jb
nop
inc
mov
sbb
or
xor
push
hlt
lock
shrl
sbb
push
inc
cmp
adc
or
movl
sub
or
pop
idivl
movsl
daa
fdivp
lea
inc
fiaddl
decl
pop
movsl
gs
dec
jns
popf
push
insb
lahf
rol
fldt
mov
fimuls
lds
movsb
gs
mov
data16
cmp
jns
cmc
xchg
lcall
mov
cmp
xor
jg
enter
cwtl
xor
into
xchg
mov
xor
fs
dec
mov
and
add
stos
or
daa
repz
subl
mov
test
or
lea
xchg
cmp
sbb
in
in
stos
cmc
adc
aas
fldt
imul
into
rcrl
adc
mov
xor
push
xorl
test
jg
fiaddl
mov
je
test
push
clc
in
out
aaa
mov
outsl
insb
fisubs
sbb
push
cmp
fcomip
or
mov
jnp
xchg
popa
sbb
pushf
dec
mov
jb
jg
fwait
mov
scas
sbb
mov
aaa
into
pop
popf
loopne
scas
cmp
cltd
pop
or
cs
outsl
ljmp
lcall
mov
lcall
adc
sbb
xor
dec
cltd
outsl
mov
sbb
hlt
sub
jbe
push
or
testb
stc
enter
test
jp
mov
xor
and
add
sub
mov
push
scas
and
adc
into
outsl
inc
jmp
clc
cwtl
jmp
test
insl
sbb
xchg
mov
xor
and
insb
mov
icebp
je
or
divb
mov
sbb
mov
call
out
adcb
lret
mov
adc
int
dec
mov
daa
inc
lock
fcompl
in
mov
and
and
jge
ja
or
push
dec
hlt
inc
jecxz
jle
and
push
or
mov
jg
out
frstor
xor
xchg
jb
mov
and
aad
test
jge
push
imull
pusha
lret
dec
mov
mov
dec
pop
push
sbb
daa
movsb
popa
inc
mov
push
mov
notl
fwait
or
cld
les
fstl
cmp
std
push
gs
in
push
sti
nop
rclb
sbb
mov
dec
push
in
dec
mov
insl
ret
cld
inc
and
stc
daa
xchg
rcr
nop
daa
cmp
xor
lods
aaa
lret
hlt
ss
xchg
inc
arpl
jge
push
adc
lcall
popf
jno
or
loope
cmovp
mov
xor
mov
cwtl
aaa
pop
test
daa
sub
and
cmc
ja
mov
mov
mov
fimull
xor
push
lods
mov
jle
push
pop
insl
mov
outsb
dec
and
push
mov
lock
jnp
sahf
imul
xor
add
outsb
xor
call
push
lret
js
sbb
and
sub
les
or
xor
shll
pop
and
jecxz
mov
lcall
enter
jno
std
out
and
ja
add
leave
into
mov
addr16
aad
push
cmp
pop
adc
pop
shl
loope
adc
shl
outsb
push
or
sbb
sbb
pop
jb
icebp
out
pusha
cmp
scas
in
popf
jnp
mov
ret
jbe
cs
jle
jmp
out
mov
pop
jl
leave
jo
mov
xor
jb
ret
dec
iret
dec
movsl
xchg
mov
sahf
in
pop
ror
cmc
sbb
cli
push
loop
mov
and
mov
in
or
sub
push
adc
dec
int
nop
leave
push
testl
in
test
push
mov
add
aaa
ret
xchg
nop
cli
inc
ret
loopne
push
xlat
je
mov
xchg
mov
ja
hlt
xor
push
dec
push
mov
lock
inc
addr16
push
push
jl
addr16
test
cltd
push
hlt
pop
adc
lock
inc
enter
jmp
test
test
fmulp
xor
call
sub
out
pop
mov
mov
popa
add
movb
mov
pop
dec
std
int3
outsb
mov
cmp
aam
pop
loope
sbb
sbb
test
add
fsubp
out
fdivrs
daa
loope
mov
mov
dec
call
add
jle
mov
xchg
popa
jnp
shrl
loope
sub
ret
fwait
mov
sti
pop
sub
jmp
mov
sahf
addl
xchg
pushf
cs
pop
add
adc
sub
je
mov
fdivp
xor
imulb
imul
add
aas
or
mov
insl
popa
test
push
push
outsb
jb
ficoms
xor
sub
inc
fdivr
jecxz
jl
mov
lods
jno
es
gs
inc
repz
mov
dec
jl
push
push
das
sub
shll
cmp
xor
and
stc
in
fisubrs
imul
in
inc
add
cmpsb
cmp
ja
xlat
movsb
xchg
stos
pushf
sub
sbbb
cmp
xor
dec
enter
mov
xchg
call
cmpsl
out
loop
ljmp
fs
or
xchg
xorb
dec
inc
fsubr
mov
pop
inc
shrl
shlb
or
jg
pusha
stos
subl
scas
pop
outsb
or
int
mov
mov
in
jg
sub
rorb
mov
orps
sbb
lret
pop
cmpb
mov
dec
cmp
cs
lahf
clc
pop
out
mov
mov
fsub
jecxz
mov
add
push
xchg
mov
jge
or
mov
pop
xor
pop
test
pop
cmpsl
push
addr16
jle
cli
fwait
xor
mov
pop
aad
movsb
in
cmc
and
fsts
sub
mov
or
jg
fisttpl
and
andb
jle
je
sbb
inc
mov
mov
dec
and
and
cs
in
std
jmp
popf
ret
and
mov
mov
dec
fwait
xor
and
fistpl
adc
out
xor
lods
in
jne
mov
sti
pop
pop
je
test
mov
push
mov
jns
scas
inc
xchg
leave
dec
popf
pop
insl
leave
pushf
vshufps
adc
push
pusha
inc
in
test
inc
inc
adc
mov
jge
inc
test
mov
mov
xor
out
and
inc
iret
push
jp
aad
adcb
test
xor
outsl
xor
xor
clc
add
cmp
inc
dec
jo
loop
or
sub
es
or
mov
sub
or
cwtl
xchg
fwait
jbe
xor
ds
call
xchg
and
fistpll
andl
repnz
push
aad
xchg
je
mov
pop
xor
xor
cmp
or
mov
outsl
add
xor
mov
pop
shrb
add
mov
popf
movsb
adc
je
filds
pop
lcall
xchg
inc
scas
sbb
or
lock
fbstp
stos
bound
cmpl
movl
jne
sbb
out
sbb
mov
cmp
mov
sti
in
pop
xor
cmp
cmc
mov
add
data16
imull
int3
cmp
ret
and
mov
fdivs
pop
jge
sti
push
icebp
ror
and
out
pop
ret
push
mov
test
add
push
les
aas
lret
cmp
push
jae
ret
cmp
inc
xor
popa
xchg
inc
push
add
sbb
mov
xchg
retw
rcrl
pop
inc
cmc
out
dec
pop
pop
sbb
int
jecxz
push
es
sbb
jmp
stos
adc
jns
scas
mov
loop
js
sbb
xor
cmc
pusha
xchg
mov
adc
mov
jge
mov
mov
stc
mov
daa
mov
test
xchg
stos
test
ret
arpl
test
mov
pop
cmp
sti
sar
lods
push
pop
das
xchg
fnsave
in
and
cmp
sbbl
dec
adc
sbb
icebp
adc
xor
xor
mov
and
mov
out
jecxz
leave
es
popa
out
divl
mov
xor
mov
movsb
setnp
adc
fwait
dec
push
enter
test
add
xchg
in
pop
clc
inc
dec
cs
imul
cwtl
inc
xor
imul
js
and
movaps
adc
cmp
pop
sti
xchg
jne
sub
lods
cmpb
xchg
test
jnp
ss
test
mov
je
mov
in
test
or
nop
fcmovnbe
shll
jbe
and
aad
jmp
cmpsb
push
rcrl
nop
jge
and
xchg
lods
sbb
push
aad
xor
jns
jmp
adc
sbb
scas
loop
fwait
inc
loope
mov
movq
loop
cmp
lcall
jl
xchg
lret
adc
adc
add
jp
ljmp
sbb
fisubs
jg
xchg
sub
mov
orl
pop
fcoms
pop
add
mov
rorb
test
leave
mov
adc
cli
negb
clc
decl
or
cwtl
mov
ds
add
jecxz
pop
jg
mov
mov
inc
or
movd
sub
data16
adc
int
out
test
das
push
add
rep
pop
out
jge
fs
dec
jge
pop
adc
mul
int3
xor
adc
aam
cs
fisubs
enter
cmc
xchg
or
scas
inc
add
out
mov
mov
mov
inc
xor
ja
gs
or
stos
mov
fptan
pop
push
js
xor
xor
push
push
sub
add
insl
xor
rcll
or
imul
aam
aas
jp
xchg
or
iret
mov
xchg
lea
lods
out
and
jns
sbbl
aaa
fildll
mov
and
outsb
cmpsb
mov
scas
repz
adc
xor
or
std
in
jg
es
sti
insl
xlat
jg
popw
xor
mov
cld
imul
push
add
hlt
xchg
das
fstpl
out
cmp
sub
sub
iret
scas
jmp
xor
push
dec
addr16
cmp
xchg
push
insl
sbb
mulb
pop
push
push
jno
popf
sbbl
jmp
pop
ret
jle
jle
rorb
shll
adc
adcl
pop
and
pop
mov
in
adc
outsb
dec
mov
and
xor
cmp
and
sub
sub
nop
jnp
sub
adc
rcrb
lds
xchg
fwait
adc
fs
mov
aas
and
sub
pop
int3
rcll
out
adc
scas
loope
xor
shr
aam
out
and
insl
sbb
ficoms
insl
pop
out
add
xchg
lock
outsb
lret
mov
adc
iret
jne
sbb
cld
mov
sahf
aam
fiaddl
xchg
shlb
mov
leave
mov
dec
loop
sub
jg
xchg
xchg
hlt
xchg
mov
mov
imul
shll
arpl
test
inc
inc
shrl
jp
out
shll
jo
aam
xchg
cwtl
mov
inc
push
mov
ja
pop
cs
adc
lds
imul
aam
roll
jb
or
cld
inc
dec
pop
mov
inc
cwtl
hlt
fcomps
add
sub
roll
pop
jg
cld
xlat
jb,pt
mov
mov
xor
xor
dec
adc
mov
into
push
jbe
xor
pop
or
xor
pop
cmp
bnd
add
pop
mov
sbb
shlb
mov
mull
out
cmc
mov
hlt
das
pavgb
xor
xor
cmpl
and
adc
cwtl
mov
in
stos
mov
mov
std
cltd
mov
repnz
adc
mov
jmp
test
fld
adc
faddl
daa
add
push
jb
xchg
std
cmp
test
push
cmp
mov
ret
in
lods
cli
test
movsb
cmp
or
sub
fstpl
lods
imul
inc
fists
std
mov
pusha
pop
add
cmpsl
and
icebp
outsb
xchg
pop
fcomps
repnz
scas
cmp
mov
mov
shrb
jmp
jp
nop
stc
mov
inc
inc
nop
cmp
dec
pop
popf
cltd
test
into
xchg
xchg
push
stos
add
hlt
inc
repz
push
mov
mov
push
nop
aas
mov
lret
jecxz
sbb
add
insb
fimuls
push
ljmp
aad
cwtl
mov
leave
or
jp
add
jge
xchg
add
or
les
test
hlt
push
xchg
into
push
push
xchg
xchg
add
xor
icebp
rcrb
ja
mov
inc
mov
sub
into
push
lret
lods
stos
lods
jno
jo
pop
sbb
cld
xor
cltd
sbb
jmp
sbb
out
push
sbb
call
xchg
inc
add
sbb
xchg
mov
lds
adc
scas
xor
or
insl
popa
icebp
in
or
arpl
jg
pcmpeqb
pop
mov
lret
cmp
aas
push
sub
xchg
fidivl
xlat
mov
cmp
xor
sti
jg
into
cmp
mov
dec
insb
loop
imull
cmp
cmp
mov
xor
mov
pop
rcll
inc
enter
out
jl
mov
sbb
mov
xor
or
pop
pmuludq
ret
je
pop
push
cmp
cmp
and
mov
mov
or
sub
add
dec
mov
push
pop
adc
inc
inc
mov
sbb
clc
std
clc
mov
cwtl
inc
xor
aam
inc
lods
inc
jae
arpl
aas
repz
cmpsl
popa
xchg
mov
cmp
push
stos
mov
addr16
popf
mov
push
cmpsb
adc
in
ja
adc
sub
iret
cmpsl
loopne
test
loop
fnstsw
add
out
loopne
push
clc
aas
aam
loope
cli
mov
out
dec
cmp
shll
sub
push
fldcw
dec
call
aam
push
and
and
in
mov
iret
pushf
es
mov
sbb
xor
jmp
lret
push
adc
xchg
sub
add
mov
insl
add
ficoml
mov
insb
arpl
pop
or
mov
pop
xchg
inc
xchg
push
das
insb
jnp
add
insl
adcb
add
pop
std
push
sbb
xchg
movb
mov
xor
xor
lods
mov
cmp
pop
enter
scas
mov
xor
insb
jge
lcall
sub
adc
movsb
roll
iret
ja
sahf
jne
cmp
add
inc
rcrl
popf
inc
movsb
inc
cmp
cmp
mov
stos
test
cs
sub
out
test
xchg
jno
xchg
in
pop
pusha
sub
adc
out
iret
push
imul
mov
iret
or
cmp
mov
push
outsb
ss
adc
outsl
mov
mov
repz
sbb
jne
test
repz
xchg
and
out
pop
andl
inc
jnp
inc
jp
sbb
mov
sub
repnz
pushf
cmp
adc
movsl
mov
and
inc
in
repz
loop
sbb
mov
ret
push
popa
lds
push
rcrb
xor
mov
xor
popf
fwait
mov
test
icebp
sbb
adcb
push
out
add
xlat
lods
cmpsb
cmp
sub
lahf
sbb
popa
sbb
mov
jecxz
add
mov
aam
mov
mov
xlat
sar
mov
mov
iret
iret
cmp
push
in
loopne
lret
push
mov
mov
cmp
test
push
stos
jmp
sub
adc
mov
fwait
cmp
cltd
or
jno
sti
mov
fadd
mov
cwtl
into
mov
adc
add
lods
dec
dec
negl
sub
pop
pop
jle
xchg
xchg
jns
xchg
mov
adc
cmp
aas
lahf
loope
ljmp
loope
mov
xchg
jbe
in
push
je
push
imul
jecxz
aam
lret
lcall
in
lock
and
in
ljmp
lods
dec
jge
xor
clc
xchg
inc
xlat
adc
arpl
pop
adc
xor
ja
xchg
cld
xor
sbb
ja
test
mov
fcomp
in
fcoml
mov
pop
lods
dec
ljmp
push
aad
cmp
adc
ret
mov
je
push
pop
out
into
add
rcrb
lret
mov
push
xchg
dec
or
xor
add
rcll
jno
les
jns
das
out
ret
and
dec
dec
fsubrl
mov
xchg
and
lret
lock
mov
mov
pop
pop
daa
mov
add
cli
lea
pop
adcl
into
outsl
inc
cmp
xchg
jb
push
xor
add
pop
xchg
fwait
aad
inc
mov
push
pushf
jg
lock
rorl
cwtl
mov
mov
fnsave
cli
icebp
jecxz
frstor
fxtract
icebp
inc
scas
mov
add
int3
jl
sbb
xchg
xor
or
push
insb
or
daa
sub
insb
cmp
sbb
pop
mov
lods
and
add
ficoms
sub
sti
std
pusha
loop
sub
rcrb
rcl
aas
cmpb
mov
lods
arpl
loope
mov
xor
xchg
outsb
in
mov
pop
jno
pop
jge
add
es
popa
or
and
sbb
mov
jae
inc
add
gs
add
add
lock
out
push
push
negl
push
fcmovnb
popa
or
inc
mov
repz
adc
xchg
and
ljmp
negb
push
je
dec
inc
xor
repnz
or
or
cs
jmp
enter
shlb
xor
out
xor
and
icebp
into
dec
push
hlt
lcall
cmp
jo
xorl
jbe
sti
mov
jge
mov
push
xor
push
scas
ror
dec
sub
add
mov
cmp
mov
mov
jbe
or
call
mov
leave
out
push
jb
pop
lcall
mov
push
sub
loop
pop
lock
lcall
dec
jnp
leave
mov
jge
lcall
popf
dec
cltd
push
mov
xchg
xor
int3
in
mov
sbb
mov
xlat
lret
xor
xchg
pop
inc
rclb
dec
outsb
sbb
ja
mov
or
notl
lss
aaa
fcmovne
int
nop
loope
iret
test
mov
dec
add
pop
and
cmc
aas
leave
sbb
sub
xchg
lahf
dec
icebp
rol
lods
cmp
xlat
loopne
and
xorl
enter
jne
xor
push
inc
insb
bound
jg
and
loope
frstor
and
adc
or
cmpl
xor
scas
cmc
popa
cmp
lret
out
adc
in
fldt
jge
cmpsl
cmp
inc
or
roll
dec
pop
jle
dec
add
jmp
xchg
test
nop
dec
pop
imul
jle
lods
mov
mov
ljmp
add
xchg
fs
jae
add
mov
fs
or
mov
lea
dec
lahf
lods
in
mov
jo
into
add
mov
aas
and
cld
cmp
subl
adc
fsts
jle
push
lret
sbb
sub
out
jae
mov
rcll
iret
syscall
ret
mulb
out
ss
mov
cmpsb
nop
cwtl
mov
lds
movsb
push
xor
mov
push
sbb
add
xchg
mov
mov
push
jae
jae
cld
xlat
mov
into
mov
cmp
jo
jnp
sub
xor
dec
mov
fwait
and
cmp
pusha
idivb
cld
imul
mov
mov
xchg
push
out
mov
xor
imul
sar
and
insb
ja
fdivrp
mov
in
mov
mov
test
push
pop
lock
lods
push
add
mov
dec
jo
fistpll
sub
movsb
or
push
cmp
cli
addr16
xchg
and
dec
pop
cmpsl
pusha
xor
out
lods
mov
ret
mov
dec
jp
fsqrt
mov
jle
leave
adc
jecxz
dec
call
das
pop
push
not
mov
mov
out
mov
mov
jae
mov
sbb
loope
and
add
dec
push
jo
sbb
jecxz
test
test
call
cmc
cwtl
lods
lret
stos
int3
jb
fistpll
and
pop
pop
sbb
movsl
ja
push
sbb
cmp
push
add
cmp
fidivs
lds
push
insb
imul
add
mov
mov
lds
stos
adc
mov
ljmp
fdivs
xchg
outsb
aam
mov
test
bnd
mov
sbb
pop
ds
and
xchg
ret
add
xchg
xor
cmp
hlt
inc
xor
in
adc
or
inc
push
push
ljmp
arpl
lret
lods
stc
jne
dec
push
mov
inc
add
push
enter
push
cmpsl
cmpsb
inc
sub
fimull
mov
dec
nop
pushf
subb
cmpb
mov
mov
daa
mov
sub
or
add
into
adc
mov
jmp
test
aad
xchg
dec
cmp
push
mov
xchg
xchg
mov
repnz
mov
cli
pop
movsb
shll
sub
mov
or
aaa
jo
inc
sub
sub
sti
inc
test
mov
pop
mov
add
mov
dec
repz
mov
and
fs
bound
inc
jge
xchg
push
xchg
mov
ljmp
xchg
cmp
xor
scas
adc
aaa
imul
xchg
adc
rol
popf
dec
out
push
in
cmc
jae
repnz
lea
jne
sub
push
insb
and
insl
jg
jb
inc
dec
xchg
stc
scas
lds
fneni(8087
dec
mov
andl
enter
adc
or
rcll
push
les
push
cmp
mov
sub
push
jns
adc
popa
mov
mov
std
dec
out
ja
inc
in
dec
scas
adc
dec
mov
adc
sarl
or
inc
add
std
popa
addr16
cmp
adc
adc
push
cmpl
fsubr
cmp
mov
adc
pushf
add
roll
jg
loopne
cmc
mov
les
cmp
and
add
jge
aaa
push
pusha
lea
lret
mov
mov
divb
ljmp
adc
test
add
daa
push
mov
divps
imul
dec
jno
cli
adc
mov
repz
or
and
pop
cmpsb
cmp
xchg
lret
sbb
cmp
pop
in
and
push
mov
icebp
xchg
xchg
mov
adc
dec
lret
dec
push
sub
addl
add
add
xor
sbb
sahf
leave
mov
adc
cs
inc
inc
shlb
stc
mov
sub
xchg
sub
cld
jno
adc
insl
inc
jb
and
popa
lods
fisubrl
jo
sahf
aas
in
imul
sub
dec
sbb
cmp
sub
sub
cmp
sbb
arpl
insl
ror
sub
jge
jae
jle
pop
les
pop
xchg
mov
mov
add
or
xlat
cmp
sbbb
test
and
mov
shlb
push
mov
mov
std
sub
jno
push
test
repz
mov
cmp
repnz
mov
sub
out
enter
xchg
cwtl
xchg
aas
insl
std
add
xor
stc
add
jns
pop
std
adc
jle
popf
repz
mov
cs
dec
aaa
cmp
mov
lret
bound
pop
icebp
addr16
ret
stos
addr16
call
test
cs
mov
push
gs
lret
and
lahf
sarb
and
cmp
addl
jns
test
sbb
out
insl
shl
jge
test
imull
daa
jo
mov
jl
shlb
adc
fld
xchg
pop
jg
fstpt
mov
rcll
xor
jae
dec
cs
pushf
lahf
out
jmp
xchg
xchg
jge
ficompl
loopne
sbb
push
add
fistpl
jo
and
push
or
adc
rorb
xor
mov
pop
jmp
shrb
es
xor
push
popa
daa
test
adc
adc
lods
inc
jb
dec
pop
sbb
mov
mull
jle
in
and
ljmp
movsl
push
add
enter
test
push
in
fdivs
es
aas
into
jg
mov
mov
cmp
fldl
sti
jge
jns
and
pop
mov
xchg
jb
es
adc
xchg
and
push
sahf
lock
aas
add
xor
mov
xchg
imul
dec
imul
std
insb
pop
pop
pop
inc
mov
addr16
sahf
mov
out
in
add
jle
lcall
lock
jbe
or
push
aad
bnd
rol
inc
dec
je
mov
outsl
scas
test
mov
mov
push
and
add
data16
loope
pop
leave
test
in
inc
iret
fwait
pop
cmpsb
roll
fisubs
test
jmp
inc
daa
popa
cmp
sbb
dec
xchg
or
addr16
or
test
pop
aam
lock
xor
push
mov
push
fsubrl
mov
into
js
sbb
ss
loop
mov
sbb
or
jo
leave
data16
mov
cltd
outsb
mov
jmp
lock
cmp
pop
aad
lds
lret
and
pop
cmpsb
xchg
ret
cmp
rol
push
sbb
stc
fs
fwait
xchg
mov
int3
adc
adc
dec
push
mov
and
in
fwait
loopne
dec
scas
dec
sub
outsb
jp
jl
popa
outsb
pop
dec
stc
push
inc
pop
jbe
repz
mov
out
push
pop
lock
dec
ret
xchg
adc
ds
inc
in
lods
or
orb
daa
gs
loop
sbb
sbb
dec
pop
scas
mov
and
aad
ljmp
rcrl
mov
ret
hlt
sbb
sub
cmp
add
mov
sub
cld
sub
inc
and
notl
cwtl
arpl
dec
xchg
dec
add
loop
jl
daa
cs
sbb
inc
addr16
and
mov
sub
xor
xor
imul
jb
mov
jbe
xor
pop
and
mov
sbb
fiaddl
ljmp
or
test
push
dec
cmpsl
adc
sbb
lahf
mov
mov
sbb
dec
lods
cltd
mov
sub
leave
fdivr
jge
neg
je
and
test
jns
dec
or
jp
jecxz
sti
mov
jnp
cmp
fisttpl
ficoml
mov
daa
pop
mov
xchg
jecxz
insl
mov
xchg
xchg
jo
icebp
cmpsb
pop
jmp
dec
divb
fldcw
mov
scas
sub
pop
jbe
sbb
enter
xchg
enter
fdivs
lret
enter
sbb
lds
mov
inc
and
and
out
inc
push
mov
jns
fcomps
cld
test
mov
popf
aam
sbb
pop
push
adc
cwtl
push
cwtl
cmp
pop
mov
popf
rcrb
iret
mov
or
mov
push
testb
sub
or
add
mov
sub
movsb
lods
xor
lret
xchg
mov
or
iret
fsub
xchg
jmp
add
test
mov
and
inc
sub
mov
cmp
push
push
test
jbe
push
sub
inc
jp
dec
popa
aam
xchg
pop
lret
insl
mov
ds
in
pusha
ds
ja
cmpsl
aaa
test
push
mov
cmp
fs
bound
cmp
ja
cmc
mov
mov
jne
pop
fwait
outsb
mov
sarb
dec
andl
xor
repnz
sbb
std
movsb
ret
jo
xor
xchg
sbb
xor
mov
jge
addr16
or
push
cmp
fistpl
int
mov
fcoml
sbb
xor
pop
loope
test
inc
push
adc
xchg
cmp
pop
sahf
div
add
loope
pop
aas
pop
mov
sbb
stos
aad
js
mov
mov
sub
iret
jl
dec
stc
sub
jo
insb
xlat
loop
jnp
push
icebp
sbb
inc
dec
mov
mov
in
rcll
or
sbb
test
ds
and
sub
stos
jnp
jmp
mov
test
lods
push
mov
or
call
cmp
imul
sub
xor
in
add
xchg
rcr
pop
repz
subl
mov
imul
xchg
fwait
rolb
or
cmpsb
call
insl
js
aaa
insb
in
je
cli
je
xchg
jmp
add
lret
shl
xchg
sbb
gs
call
jg
fdivrs
cltd
add
mov
mov
dec
fdivr
mov
inc
out
adc
sti
push
das
push
ja
inc
arpl
arpl
aad
mov
inc
out
pop
cmp
cmc
test
test
xor
int
movsb
out
dec
gs
cmpsb
ljmp
mov
dec
xchg
inc
insb
sti
sbb
jle
shlb
loope
loopne
or
inc
push
xor
mov
test
inc
cs
mov
stc
xor
xchg
call
inc
das
push
loopne
mov
xchg
enter
and
lret
inc
add
jecxz
or
stc
bound
xor
and
scas
sub
stos
cs
inc
pop
stos
clc
dec
in
int
sarb
hlt
stos
sbb
xor
inc
push
ret
xchg
adc
jle
rcrb
pushf
ds
mov
mov
mov
lock
cli
insb
push
push
push
ss
pop
icebp
mov
mov
int
push
ja
mov
rcll
mov
and
stos
mov
push
or
add
jb
jle
cld
call
mov
cmp
adc
lret
inc
aaa
mov
mov
mov
loop
shl
aaa
fdivs
gs
insl
aaa
mov
cmp
dec
and
xor
ja
sti
inc
mov
dec
cmp
arpl
jmp
jo
pop
sti
sti
cltd
dec
xchg
out
lods
leave
xor
or
cmc
inc
sti
call
sub
push
and
add
out
push
jne
adc
fcomi
std
imul
mov
loop
mov
dec
sub
loop
cmc
dec
sti
outsl
cmp
and
insb
iret
fdivrl
cmp
adc
aaa
sub
shlb
out
cld
mov
cli
pop
addl
scas
xor
daa
push
fadds
fs
push
pop
popa
jae
and
pushf
das
aad
fadd
icebp
and
fmuls
sub
inc
cmpsl
pop
test
and
mov
repnz
mov
andb
xchg
lea
popa
je
adc
cmp
outsb
jmp
jnp
rol
aaa
mov
jno
out
mov
test
push
pushl
pop
mov
js
sbb
cmp
rcrl
lahf
jnp
insl
aam
dec
fistl
jmp
cltd
mov
insl
popa
adc
ret
mov
lods
ljmp
fisubrl
lock
aam
pop
ja
or
xchg
push
test
fistps
and
push
xchg
jp
lret
pop
cmp
cmpsb
adc
aam
xor
loop
dec
pop
les
pop
gs
mov
cld
sub
add
imul
or
in
mov
das
add
push
push
dec
mov
mov
jl
sbb
adc
jno
hlt
and
mov
push
and
dec
push
popf
or
add
xor
or
idivb
jl
xor
jle
in
dec
or
subb
sub
std
inc
out
out
xchg
mov
dec
insl
movsl
push
inc
cwtl
stos
pop
mov
pop
adc
popa
into
mov
jl
mov
jbe
push
mov
scas
ljmp
mov
movd
mov
rcr
andl
sbb
repnz
adc
push
sbb
not
jmp
cmp
movsb
mov
pmullw
mov
cmpsl
mov
dec
mov
shlb
aas
aam
push
pop
push
mov
jo
sub
inc
and
cs
and
sub
dec
icebp
mov
call
cmp
cli
test
xor
lret
lds
or
pop
sub
in
je
cmp
scas
or
lret
lock
jns
push
clc
aas
sbb
jbe
or
jno
pop
cmp
and
pop
jo
jg
push
and
ret
or
int
sahf
adc
inc
or
xchg
aam
loop
pop
xor
leave
test
shlb
pop
fidivs
shlb
adc
dec
mov
jle
jmp
mov
andl
pop
push
push
cmpsb
lds
cltd
pavgb
adc
jns
arpl
xor
push
and
imul
jo
jmp
dec
maxps
mov
cmp
rclw
ficoms
jae
popa
mov
insb
lretw
add
loopne
lcall
mov
dec
cmp
dec
jmp
rclb
push
inc
cmpl
stos
adc
ret
pop
push
or
cwtl
cmp
lock
add
xchg
mov
jecxz
addr16
das
xor
test
and
ret
loope
inc
rsm
cli
mov
lock
mov
nop
fisubs
imul
in
iret
jo
cmp
pop
es
and
daa
push
jbe
mov
jmp
mov
mov
xor
push
jge
adc
xor
lods
pop
and
scas
cltd
das
push
inc
jp
add
flds
fsts
push
dec
adc
icebp
mov
faddl
push
mov
mov
rcl
adc
pop
fcomps
jp
cld
cmp
out
push
outsb
movsl
lods
insb
loopne
push
fdivl
jae
sbb
pop
ljmp
fsts
cltd
xchg
stos
and
pop
inc
pop
mov
lds
cmpb
adc
cmpsl
cmp
cmc
sbb
xchg
mov
or
jg
sub
dec
xchg
cmc
loope
call
xchg
shll
fwait
test
fst
or
inc
loope
dec
push
insl
cmp
mov
lea
and
or
cmpsl
imull
pop
cmp
lret
cld
pop
enter
jo
rol
xchg
xor
pushf
mov
xlat
js
pop
push
push
scas
mov
pop
sub
xlat
sub
lods
cmp
pop
sbb
test
pop
mov
or
mov
jbe
jg
and
pop
pop
and
pushf
lods
adc
rcrl
movsl
dec
adc
xor
cmp
push
stos
cli
inc
inc
mov
jg
loope
ss
cld
bnd
mov
xchg
push
jecxz
addb
hlt
inc
cli
or
pop
push
cli
cmp
movsb
or
mov
iret
inc
adc
mov
xchg
push
sbb
mov
shlb
scas
addb
push
xchg
xorl
inc
in
jg
loopne
ret
sbb
fidivrs
pop
mov
rorb
fstp
or
pop
daa
out
sub
sub
dec
loop
in
or
stc
ret
in
mov
xchg
test
jmp
int
ja
in
mov
fsubl
dec
mov
or
jge
outsb
or
inc
cwtl
mov
cmpsb
sbb
sti
push
sbb
xchg
cmp
add
xchg
or
sub
testl
ja
xor
ja
dec
pushf
push
and
out
push
push
test
mov
sbb
jo
into
cli
aaa
in
repz
inc
sub
xor
cli
dec
cmp
fwait
dec
testb
mov
xor
pop
mov
mov
cmp
ljmp
xchg
daa
aaa
lahf
dec
push
add
pop
movl
sbb
jmp
fdivrs
cltd
push
outsl
jnp
mov
aas
sbb
pop
lds
inc
popa
jo
sub
inc
xchg
dec
xor
out
call
bound
jbe
or
add
dec
loope
ret
and
add
pop
adc
adc
pop
pop
pop
add
cli
sbb
pushf
jne
mov
inc
mov
icebp
ret
adc
mov
mov
out
pop
xlat
aad
nop
adc
scas
ja
add
pop
xlat
push
iret
xor
cli
add
cmp
mov
aad
stos
es
dec
dec
movsl
sbb
jmp
cmp
cmp
xchg
inc
andb
les
jecxz
pop
inc
lods
aas
xchg
lock
mov
pop
push
out
loopne
hlt
aad
mov
xor
push
in
sbb
popa
jae
mov
sbb
jecxz
lds
mull
pop
fwait
sbb
movsb
fs
popa
push
stc
mov
ret
mov
mov
cmp
inc
pop
aam
rcrb
addb
lds
and
adc
lret
bound
inc
pandn
adc
jo
and
push
testl
sti
jbe
and
pop
orb
jbe
loop
pusha
add
cmpsl
inc
pop
pop
push
jmp
jmp
lods
sub
cmp
add
or
add
cmp
daa
sub
pop
cmp
mov
xor
cmp
dec
xor
push
hlt
jns
sti
pop
pop
imul
fcmovbe
into
mov
mov
dec
cmp
out
mov
cmp
shrb
dec
out
pop
xchg
std
lock
ss
mov
pop
mov
in
mov
in
or
arpl
aas
mov
clc
lret
xchg
push
cmp
insb
and
aas
mov
jp
aad
mov
or
adc
xchg
jno
push
mov
nop
aaa
cwtl
lods
or
stos
int3
push
in
aad
adc
cltd
xchg
jecxz
dec
enter
jnp
mov
cmp
mov
inc
xor
int3
mov
adc
ss
cmp
addr16
sbb
cmp
mov
imul
jp
jns
iret
cmc
stos
jp
mov
lret
bound
ja
push
int3
pusha
jnp
or
inc
sbb
aad
inc
js
das
call
mov
fnstcw
inc
push
adc
enter
sbb
push
xchg
push
inc
dec
mov
adc
repz
aam
jb
mov
pop
std
push
mov
adc
mov
test
jb
cs
iret
cmp
mov
mov
push
je
mov
movsl
cs
sub
in
sub
jnp
xor
sub
sub
or
xchg
sub
fldcw
xchg
scas
mov
sbb
sbb
push
xlat
out
clc
into
push
stos
mov
jg
pop
dec
mov
cmp
or
xchg
xor
cmp
in
and
mov
das
inc
test
add
sub
jge
push
sarl
sbb
pop
mov
loope
stc
jo
rcr
in
push
push
enter
hlt
xor
movsb
sbb
ja
sbb
test
pop
daa
fwait
or
xor
mov
scas
push
insl
sbb
xor
mov
nop
dec
push
out
test
or
aaa
xchg
sbb
cmp
aam
les
out
shr
xchg
inc
adc
mov
aas
cltd
inc
loope
mov
je
mov
inc
adc
or
sub
push
insb
push
push
mov
mov
sti
mov
call
ret
mov
push
dec
inc
mov
jo
movsl
movsb
aas
es
jge
adc
inc
dec
jp
mov
movsb
popf
fwait
and
imul
das
cwtl
addl
cmpsl
xchg
out
add
lret
push
sub
stos
cld
in
jl
sub
pop
es
xchg
ret
push
dec
mov
push
xchg
pop
mov
mov
dec
sahf
jp
jb
psrld
lret
mov
or
jbe
in
mov
xor
sub
xchg
cwtl
lea
out
push
test
push
mov
mov
jo
jmp
pop
lods
leave
leave
xor
push
cmpsb
js
js
xchg
pop
ja
cld
mov
scas
push
sbb
push
push
enter
fildll
push
xchg
mov
adc
lods
dec
jno
push
rorl
sub
and
or
jae
sbb
cli
xchg
decb
mov
fadd
repz
push
mov
ljmp
mov
xchg
mov
sti
mov
enter
in
call
mov
xor
push
in
xchg
jae
and
aas
push
fsubrl
xchg
lret
in
mov
xor
xor
add
xor
sbb
mov
or
xchg
leave
gs
or
jae
gs
popa
jne
loop
mov
sbb
cmp
leave
jne
inc
and
test
fsubr
jne
xchg
iret
pusha
fildl
cmp
ja
insb
jl
ficompl
push
cmp
rcrb
inc
sti
inc
loop
pop
fstps
push
ds
inc
add
push
or
push
icebp
int3
inc
add
rorb
mov
fnstcw
daa
and
push
jle
cwtl
lods
pop
sub
movsb
dec
cmpsb
orl
cmp
push
fdiv
lods
popf
or
pop
mov
mov
push
loop
pop
fisttpll
flds
movsb
int
and
cmpsb
push
push
add
sub
mov
jp
mov
addr16
xchg
ret
icebp
ret
in
push
cld
xchg
mov
cli
inc
jg
push
call
dec
cmc
enter
das
ret
call
les
leave
jle
or
dec
pop
push
shlb
jno
mov
adc
inc
iret
mov
insl
sub
rorl
mov
dec
test
mov
jmp
xor
push
mov
movsb
push
cmpsl
or
gs
mov
addr16
mov
stos
sub
loop
enter
pop
aad
or
inc
shrb
mov
sbb
ret
jo
rolb
sbbl
lcall
add
bound
cmp
pop
in
hlt
pop
outsl
add
fidivs
sub
stos
daa
dec
aas
add
insl
hlt
in
ja
repnz
jg
add
mov
add
fistps
mov
jecxz
dec
add
es
in
sbb
mov
iret
in
adc
mov
add
jl
test
mov
icebp
mov
sbb
jle
mov
gs
je
push
push
mov
in
insb
and
fxch
pop
lds
pop
dec
popf
sbb
imul
pop
movsl
dec
jne
arpl
sahf
mov
mov
cmp
lret
test
or
ftst
mov
adc
ljmp
pop
jne
push
std
jge
inc
push
mov
ds
pusha
dec
call
lahf
imul
aas
je
in
out
or
je
push
sahf
test
dec
aas
or
pop
mov
fisttpl
push
int
jg
push
push
pop
mov
and
pushf
push
or
jmp
std
mov
cmp
js
pushf
lods
xor
fs
jb
aas
jp
hlt
jl
cmp
mov
and
jnp
xor
mov
adc
inc
call
sub
iret
xchg
daa
cmp
popf
popf
in
or
add
sbb
sbb
adc
dec
movsb
jge
pop
sahf
orb
mov
xor
scas
xchg
and
std
add
xchg
pop
lcall
orb
call
xchg
pop
or
cwtl
aad
scas
aaa
or
xchg
dec
test
mov
add
popa
push
out
and
outsb
cmp
pushf
addb
mov
cli
andl
sub
mov
cld
lret
sarl
test
out
cltd
pop
mov
sbb
inc
mov
xchg
shrl
nop
ftst
xor
sti
sub
js
enter
push
add
jmp
clc
pop
inc
cld
ja
test
rcrb
into
icebp
into
or
jb
lret
mov
mov
mov
jb
leave
cmp
mov
fldcw
push
lods
dec
lret
jge
cmpsl
inc
mov
add
cld
aad
pushf
mov
ret
fs
sub
lret
pushf
rcr
fwait
adc
stos
xchg
fsub
fbld
or
stos
cmp
mov
das
jp
mov
lea
cwtl
mov
out
mov
sub
xchg
xor
cli
adc
cltd
clc
insl
sbb
inc
push
jb
iret
xchg
cs
adc
lcall
cld
lds
mov
pop
and
mov
inc
repz
or
cmpsb
xchg
aam
mov
sub
xchg
inc
mov
out
adc
adc
test
push
sarl
push
mov
mov
adc
inc
push
js
add
pop
out
fidivrl
mov
lock
and
or
sbb
aam
mov
inc
pop
or
push
mov
pop
pop
addl
mov
xor
mov
movsl
sbb
and
mov
xchg
and
xchg
push
fldt
jns
or
fdivrl
dec
lods
test
pop
mov
push
call
cs
test
out
mov
cwtl
add
ds
lahf
mov
repnz
fiadds
test
addb
add
leave
or
test
repnz
hlt
repz
xor
mov
outsl
std
lods
imul
adc
stos
in
lock
push
push
std
xor
jge
adc
cwtl
adc
imul
push
aam
cmp
jl
les
cmp
push
mov
in
dec
add
mull
clc
pop
lahf
jno
and
adc
sahf
xchg
pusha
out
add
dec
fwait
icebp
les
aam
lret
fwait
jl
or
jmp
inc
int
es
ljmp
mov
jge
popl
mov
sub
cmp
xchg
mov
je
inc
push
add
sbb
cmp
fiaddl
mov
cmp
cmp
pop
pop
lret
in
or
sbb
shll
mov
jno
out
pop
or
imul
mov
loopne
push
xchg
ja
pop
inc
or
xchg
cwtl
popa
mov
inc
inc
movq
mov
arpl
ds
in
pop
pop
mov
call
dec
push
ror
lods
outsb
adc
lds
cmp
pop
mov
xchg
jns
mov
push
stc
and
push
push
inc
jnp
das
mov
mov
add
xchg
lahf
pop
in
xchg
mov
repnz
dec
movb
jns
sahf
mov
adc
lods
lahf
xor
inc
adcl
jne
adc
sarb
inc
sub
xor
mov
mov
sub
adc
xchg
xchg
adc
cmp
dec
nop
outsb
rcrl
movsl
rolb
pop
add
mov
cmp
test
add
lock
push
imul
popa
adc
xor
enter
lret
pop
scas
mov
xchg
scas
arpl
sahf
mov
or
pop
xchg
cmp
pop
xor
mov
loope
push
push
mov
xor
repz
push
jb
mov
int
xchg
xchg
mov
out
add
jnp
mov
push
push
cli
sbb
sub
jns
movhps
adc
orl
cmp
cmp
cld
movb
jge
jo
adc
adc
mov
adc
fcompl
insb
sbb
mov
call
in
pop
fmuls
add
xor
sbb
sub
sub
scas
push
inc
into
jg
incb
ja
es
hlt
xchg
jne
in
je
sbb
es
fistpll
push
mov
lds
ret
add
jnp
cltd
aaa
bound
xchg
cmp
add
dec
inc
dec
mov
pop
xchg
push
mov
fwait
mov
mov
sbb
dec
cld
mov
mov
bound
insl
aad
jno
sbb
sti
in
mov
cld
jno
xor
mov
in
jae
sbbb
mov
mov
xorl
gs
jo
xchg
stc
testb
fdivrl
enter
push
and
pop
mov
jnp
lods
ds
testl
imul
cs
out
push
ljmp
sbb
xchg
xchg
sub
arpl
out
dec
cmp
std
push
cmc
jmp
mov
push
dec
xor
or
adc
gs
mov
arpl
cmpsb
push
mov
cwtl
mov
jmp
or
fwait
sub
rclb
inc
scas
push
inc
imul
pop
into
ss
mov
xchg
scas
imull
pop
sub
inc
sti
push
sbb
iret
dec
sub
or
inc
xchg
sub
xor
scas
inc
lds
inc
mov
lret
test
inc
lds
cmc
fisubs
fwait
adc
sub
xchg
add
mov
pusha
cli
fcompl
mov
mov
mov
inc
push
adc
cmp
mov
pop
sbb
out
dec
xchg
or
test
jp
pop
sub
stos
mov
js
add
mov
pushf
adc
shlb
arpl
jp
std
clc
popa
sahf
sub
xchg
inc
addr16
mov
jmp
subl
add
stos
cld
xor
mov
or
popa
pop
and
pop
or
sub
mov
mov
imulb
sbb
cmp
xchg
test
jns
sarb
inc
jg
pop
lcall
mov
inc
jo
cmc
xchg
imul
sbb
dec
inc
stos
dec
fisubrs
xlat
pop
mov
adc
mov
adc
mov
in
xor
xchg
leave
lea
mov
jp
adcl
scas
push
loop
in
lret
mov
or
js
xchg
add
sbbl
fisttpll
pop
xchg
xor
dec
mov
xor
cmp
sbb
test
ja
xchg
mov
add
sbb
xchg
xchg
cltd
sub
cs
jbe
mov
inc
push
and
lret
push
imul
lahf
aas
cli
inc
pop
stos
push
in
xlat
mov
rorb
rolb
sub
jg
in
xchg
lea
inc
mov
lock
ret
ss
push
lods
xchg
insb
leave
mov
out
mov
addr16
out
push
in
and
shl
cmp
dec
arpl
aad
divb
outsl
lahf
sbb
ret
dec
fbld
pop
mov
shll
mov
adc
out
enter
fstl
pop
inc
add
imul
xchg
inc
lret
fsubrs
daa
out
sbb
lcall
xor
aad
xchg
int3
mov
test
mov
lahf
shrl
mov
loopne
sub
push
and
sub
xchg
xor
adc
test
adc
test
jge
mov
xchg
fwait
outsb
jl
push
or
jp
push
ja
push
xchg
cmp
cmovge
mov
adc
fwait
xchg
mov
inc
xor
push
adc
xor
psrld
in
inc
stc
push
sub
jg
xchg
push
je
inc
jge
ja
jmp
movsl
mov
jmp
mov
cli
xchg
sbb
fimuls
push
dec
cltd
xor
mov
push
mov
movsl
mov
jo
loop
in
in
add
pop
xchg
int3
imull
les
push
nop
repnz
cmp
cltd
xor
int3
in
adc
dec
in
popa
daa
outsl
jmp
cmp
or
and
imul
lcall
xorb
sbb
xlat
lahf
imul
ja
cmpsb
inc
mov
packuswb
cmpl
or
testl
cmp
pop
cli
fiaddl
cltd
sbb
adc
sbb
mov
stos
or
push
in
lock
lock
in
jo
ja
lret
inc
lret
stos
pop
imul
adc
sbb
adc
rcrl
addr16
mov
dec
adcl
or
sti
shll
jmp
scas
int
adc
dec
pop
mov
addr16
adc
clc
xchg
mov
notl
pop
inc
mov
pop
dec
sub
shl
cmpsl
insl
das
ret
roll
lods
in
inc
cmp
sbb
int
loop
fists
inc
ss
xor
loope
lcall
fs
fistpl
jo
sub
stos
jne
push
clc
lock
cld
pop
and
sbb
insl
mov
into
lods
mov
incl
xchg
icebp
jle
inc
mov
or
jnp
mulb
push
icebp
in
sub
cmp
jmp
dec
insl
cld
fmull
dec
dec
addr16
mov
into
pop
cmp
sub
call
mov
stc
sar
in
and
pop
clc
sbb
adc
cmp
mov
jg
or
push
ds
sub
sbb
jg
lods
pop
pop
or
push
jecxz
fidivrs
sub
xor
sbb
inc
lahf
lods
call
fs
push
mov
jl
pop
shll
das
jecxz
jmp
scas
jecxz
jle
sub
cmp
jns
mov
inc
and
sarb
insb
and
mov
cmp
pop
xchg
data16
fcoms
mov
jmp
pop
xchg
sahf
push
in
jmp
in
je
imul
pushf
fdivrl
jg
sub
lcall
in
leave
mov
xchg
xor
fisttpl
pop
sbb
int
out
push
dec
push
outsb
mov
movl
fcmovu
sub
icebp
loope
in
enter
add
nop
xchg
adc
ss
and
jbe
sbb
sarb
and
dec
fsts
cmp
ja
call
mov
cltd
stos
sbb
je
sbb
loop
push
testb
sub
aas
and
je
fwait
movsb
sub
jge
fs
or
mov
dec
fimuls
js
incl
mov
inc
lret
dec
insb
cmp
jl
ljmp
mov
or
insl
push
cmp
sub
add
fildll
inc
mov
jmp
sahf
push
jae
push
not
add
ss
stos
and
mov
sub
scas
dec
xor
mov
inc
or
xchg
sbb
cld
push
fs
inc
mov
pop
pop
testl
inc
out
xchg
dec
push
inc
cmc
and
adcb
popf
sbb
adc
push
and
pop
or
testl
pop
out
in
data16
cmp
out
inc
clc
sbb
xchg
jle
cmp
push
repz
out
lods
mov
adc
xchg
sahf
aad
dec
pop
cld
jnp
mov
ret
sbb
hlt
mov
testb
and
notl
jmp
cmc
dec
imul
mov
xor
fimull
adc
jge
add
int3
inc
push
xlat
call
popf
mov
daa
mov
sti
imul
add
shll
cmc
dec
les
inc
adc
jmp
sbb
pusha
jne
decl
jp
mov
mull
or
adc
stc
test
dec
push
mov
mov
mov
aas
ds
jae
cmp
dec
adc
lea
cmp
lret
adc
insl
jge
lcall
out
loop
les
xchg
aas
add
dec
cmpsb
push
xchg
cmp
mov
ret
xorb
test
jbe
aad
and
ret
adc
jmp
test
sbb
sbb
or
push
cwtl
subl
stos
stos
call
test
enter
popf
sub
insb
out
addr16
lock
das
imul
mov
sbb
fnstcw
imul
mov
pop
rorb
cmpsl
push
leave
sarl
clc
mov
les
test
pop
pop
int3
mov
orl
xchg
push
and
inc
jae
sbb
int3
ds
movsb
cltd
lret
loop
sti
test
lods
and
pop
mov
jbe
xor
fimull
divl
jae
mov
rolb
cmp
sarl
dec
mov
and
aas
scas
mov
xchg
jmp
xchg
push
dec
push
bnd
lds
stos
push
push
push
pusha
into
lods
or
sbb
shll
push
mov
mov
cli
adc
or
add
sbb
sbb
nop
push
shrl
push
stc
imulb
repnz
loop
pop
and
jne
mov
aam
hlt
idivb
pushf
fcoml
jne
movsb
add
mov
repz
cs
fxch
jp
es
loopne
shrl
ds
in
lock
dec
and
sub
xchg
jb
add
mov
mov
aam
ror
lcall
mov
sbb
sbb
loope
jle
jo
daa
dec
or
jg
lcall
dec
fidivrl
inc
fmuls
cld
cwtl
push
and
pop
aam
and
aam
push
push
push
mov
lahf
outsb
gs
pop
loop
adc
cmovbe
call
fbld
test
xchg
inc
fnstenv
enter
lahf
in
rorl
adc
scas
out
xlat
shlb
in
sub
mov
notb
mov
repnz
cmp
or
dec
push
adc
nop
insb
jne
mov
insl
ja
pop
xor
stc
inc
and
and
mov
dec
scas
cs
aam
mov
sbb
cmp
mov
mov
jb
mov
shl
xor
ljmp
sar
test
xchg
repnz
int
js
dec
call
pusha
loopne
push
dec
frndint
fadd
icebp
movsl
mov
push
lock
imul
lods
mov
fwait
xor
push
ljmp
xchg
cli
and
xchg
les
hlt
cltd
push
add
xlat
and
jmp
mov
dec
mov
push
subb
sbb
out
addr16
incl
movsb
leave
mov
mov
inc
leave
pop
ficoml
sbb
pop
sub
js
int
dec
add
bound
mov
lods
inc
cmp
sub
mov
ds
sbb
inc
les
into
loop
jb
xor
cmc
das
popf
in
hlt
push
jbe
std
test
lret
mov
or
push
les
xor
dec
push
in
push
add
sub
icebp
sub
out
subb
adc
movsl
add
mov
imul
stc
and
sbb
cmp
test
leave
popf
iret
sbb
cmc
inc
jns
jnp
push
std
cmp
xchg
int
lret
push
ficomps
mov
mov
xchg
les
shrd
mov
icebp
jae
cmpsb
jae
gs
add
ret
dec
inc
dec
jle
shl
sbb
push
icebp
mov
loope
xor
je
imul
xchg
rcrl
sbb
cmp
arpl
aas
iret
lret
push
mov
mov
xchg
push
sub
insb
ss
mov
cmp
or
ret
vandps
pop
ficompl
xor
stos
mov
sti
inc
lret
fnstcw
pop
div
jl
retw
std
cmp
jecxz
and
push
and
int3
test
pop
call
push
mov
pusha
mov
xchg
mov
and
iret
test
je
sub
xchg
xchg
cmp
ss
cmp
shl
pop
mov
inc
jb
add
sub
test
fbld
push
push
mulb
aas
and
ljmp
push
ss
stc
stos
rcrl
pop
arpl
mov
inc
sub
inc
push
sbb
add
icebp
es
mov
je
inc
dec
popf
xor
mov
dec
push
outsl
xchg
jns
pushf
lods
cmp
mov
scas
jge
xchg
loope
xchg
test
popl
ss
lcall
test
js
adc
xlat
imul
jl
in
in
int
xor
jle
pusha
sub
stc
std
mov
sbb
test
mov
aaa
mov
push
jge
pusha
or
cmpb
jo
repnz
imul
cmp
jns
repz
jmp
xchg
adc
mov
push
pop
fbstp
repnz
mov
pop
leave
pop
xchg
jmp
movl
add
or
lods
xor
mov
xchg
mov
mov
or
popf
or
stos
testb
and
icebp
add
jmp
lcall
mov
pushf
or
cmp
sbb
pop
push
xchg
test
inc
mov
push
jle
ja
cli
adc
test
xorb
pop
aam
int3
addr16
in
test
mov
xchg
sqrtps
mov
enter
dec
push
xchg
fs
pop
xlat
ljmp
je
fldt
imul
push
inc
mov
mov
daa
and
mov
xor
fidivs
mov
mov
popa
test
push
cld
mov
add
lret
lock
jge
push
pop
negb
in
mov
repz
fnstcw
into
in
aad
jmp
notb
lcall
out
daa
fimuls
ficompl
lcall
bound
in
shr
loopne
adc
shlb
mov
sub
lods
jmp
popa
fistps
out
repz
jae
mov
mov
sub
sbb
loop
pop
popf
and
shrb
bound
cmp
cmc
enter
insb
sub
jl
xor
push
sbb
push
cs
pextrw
push
dec
cs
add
sarb
test
lock
mov
xor
xchg
stc
or
dec
mov
lea
sub
and
lahf
scas
or
mov
add
cmp
xchg
jl
push
nop
icebp
out
ljmp
data16
ljmp
xchg
cmp
ret
push
xchg
fbld
js,pt
pop
pushl
cmp
xchg
jle
ret
or
andl
push
cmp
lea
test
clc
lods
andl
cmp
cld
in
mov
mov
test
lds
icebp
mov
sbb
xchg
jns
test
sbb
std
inc
pop
adc
cwtl
lock
or
xor
rorl
cmpsb
sub
sbb
int
cmpsl
xor
shl
stos
inc
ret
or
divb
shll
data16
leave
adc
mov
enter
clc
out
into
pop
sub
pop
inc
xchg
xor
or
repnz
pop
mov
pop
xchg
jb
out
and
popf
mov
popa
push
and
mov
jno
das
test
stos
out
jecxz
rcrl
push
test
xor
xor
movsl
imul
and
cld
jne
outsl
jg
sub
in
push
cmp
nop
dec
push
sarb
cmp
pop
cmpsb
sbb
cwtl
icebp
xor
dec
pop
xor
sbb
idivl
movsl
dec
jb
ss
pop
xchg
add
into
cmp
lret
fcmovne
xchg
jb
push
in
call
loop
lods
xorl
xor
and
pop
jg
lds
std
icebp
std
test
jne
dec
mov
idivl
in
pusha
pop
jne
outsl
ret
icebp
stos
mov
stos
dec
out
jp
sub
cmp
pop
inc
sbb
mov
push
outsb
xchg
das
mov
dec
lret
jge
ror
pop
adc
stos
roll
dec
sbb
negl
aad
jmp
jne
sbb
cmp
or
xor
mov
mov
out
mov
jns
mov
pop
push
and
scas
inc
xor
mov
pushf
icebp
mov
jae
push
sub
xchg
sbb
jno
test
popa
movsb
lods
int
push
pop
call
pushf
jg
sub
subl
add
imul
mov
cmc
sub
push
jg
lock
push
cmpsb
mov
mov
jb
jns
sarl
jae
mov
jmp
ds
inc
push
cli
dec
cli
iretw
add
or
cltd
mov
fcoml
pushf
gs
push
rorl
xor
ja
orb
popa
in
adc
and
lds
enter
enter
cmp
and
dec
jmp
gs
jle
mov
xchg
xchg
pusha
xor
lcall
xchg
rol
push
jle
adc
daa
lret
sti
push
jne
dec
sub
scas
enter
popl
pop
js
mov
loop
adc
jne
aas
adc
les
stc
xchg
mov
addl
jne
add
xchg
daa
xchg
lds
mov
data16
dec
sbb
outsb
and
addr16
fsts
fnstcw
mov
fs
pop
iret
mov
scas
addr16
shl
adc
or
cmp
jnp
add
xor
fldcw
shlb
adc
fbstp
xchg
or
push
xchg
xchg
mov
xchg
mov
mov
aad
adc
std
shll
ret
lsl
mov
inc
or
sub
in
pop
insb
mov
into
aaa
sbb
and
pop
in
out
clc
mov
div
sub
inc
stc
pop
cmp
mov
xchg
add
sbb
and
adc
dec
push
cmpsl
xor
mov
stos
push
loopne
cmpsl
inc
lahf
xchg
insb
into
inc
pop
cmp
insb
insb
and
add
inc
jbe
loopne
test
cltd
aaa
popf
out
sub
imul
or
ret
cmp
call
fistpl
in
inc
sbb
loopne
jno
hlt
pop
cltd
dec
jno,pn
test
das
inc
cwtl
int
mov
add
lea
fistps
testl
mov
or
sbb
pop
cs
jno
hlt
xchg
dec
mov
inc
mov
mov
adc
push
sbbl
or
jbe
add
mov
push
mov
nop
xchg
cmp
mov
movsb
jns
mov
pop
ds
popa
test
outsl
mov
mul
adc
ret
pop
mull
push
paddusb
dec
push
jmp
pusha
or
adc
fimull
pop
cltd
mov
iret
and
mov
sbb
roll
sub
mov
addr16
or
test
pop
and
dec
aaa
icebp
shrb
jecxz
jns
jne
rcl
mov
adc
enter
xchg
xorps
mov
std
mov
mov
dec
ja
lods
mov
mov
cld
out
sub
push
stos
hlt
xor
lahf
sbb
dec
or
andl
add
inc
dec
aad
lcall
mov
out
popl
cmp
push
jne
out
lret
stos
mov
stc
in
repnz
push
push
lahf
cld
adc
mov
sti
aad
push
xchg
xor
out
lret
cmp
test
sti
je
cs
mov
pop
lds
dec
mov
punpcklwd
mov
mov
inc
sub
cs
sub
cmp
pop
xor
movb
stos
sbb
in
or
orl
int
pop
push
jno
aas
push
leave
mov
lcall
aad
adc
inc
xchg
mov
roll
stos
add
jne
xchg
aam
xchg
movsl
scas
sub
sub
dec
test
aas
or
stc
xchg
jge
shrb
sahf
and
xor
add
xchg
xor
jl
nop
stos
push
xchg
lret
xor
shll
clc
sbb
mov
jns
jb
out
subl
xor
xor
push
arpl
adc
das
repz
xor
jl
test
dec
and
adc
addr16
lret
and
adc
cld
insb
and
xchg
mov
fidivl
add
add
mov
mov
sub
inc
movsb
lret
lret
stos
dec
pop
outsl
lods
or
jecxz
cs
pop
jg
or
mov
mov
divb
dec
arpl
sahf
dec
cmp
int3
pop
jns
xor
setge
mov
pop
xor
mov
popf
jge
push
jmp
and
shlb
sahf
add
adcb
dec
sarb
loopne,pn
ret
mov
sbb
not
insl
add
add
and
pop
shlb
jno
dec
ret
cs
ja
mov
lods
xorl
pop
addb
cmp
dec
xlat
pop
rcrb
add
sbb
mov
lock
jo
or
ja
push
xor
dec
faddl
mov
enter
sub
mov
push
inc
dec
cld
stc
mov
bound
loop
adc
xchg
stos
aaa
sub
insb
fwait
push
push
xchg
sbb
movsb
decl
and
xor
add
push
outsb
insb
mov
sbb
into
xor
sbb
push
sahf
xlat
xor
dec
sti
in
loop
out
test
lahf
loop
dec
jl
aad
idiv
clc
ret
pop
adc
or
loop
fisttpl
cmp
xchg
xchg
sub
mov
xor
lds
hlt
mov
lock
int
shrb
mov
jmp
push
pop
inc
jns
lds
pop
stc
xchg
push
mov
or
inc
xchg
arpl
jno
adc
mov
sbb
lea
clc
inc
push
fwait
xchg
dec
and
sti
mov
in
push
in
insb
jmp
fldl
adc
jmp
sbb
cmp
mov
pop
test
inc
inc
inc
push
push
movsb
adc
mov
push
dec
ret
int3
lock
or
push
mov
xor
mov
and
imul
inc
scas
adc
fildl
test
or
or
aad
into
fs
movsl
dec
in
xchg
or
push
es
aas
sub
lcall
rcrb
shrl
daa
jo
xchg
in
rcrl
sbb
call
pop
jae
cld
fdivrl
adc
mov
xor
jecxz
add
add
add
in
push
cmp
xchg
lock
jl
shlb
mov
stc
pushf
in
pop
push
jmp
bound
fs
push
repz
int3
rcl
jnp
movsb
push
adc
mov
adc
xchg
jae
imul
aas
iret
mov
mov
stc
mov
in
xchg
mov
push
das
das
sbb
inc
notb
or
jb
dec
or
sbb
in
test
mov
mov
scas
scas
mov
adcl
xlat
push
aam
repnz
jge
mov
lods
aas
fsubl
inc
out
push
cltd
mov
adc
gs
rorb
mov
mov
fwait
cli
test
or
dec
stc
inc
pop
mov
and
lahf
insb
push
pop
cmp
test
mull
stos
jnp
pop
adc
repnz
cmpsb
adc
mov
call
and
sub
pop
xchg
sti
nop
adc
cmp
in
push
adc
jae
pop
nop
jns
jae
xor
ret
loop
mov
mov
fwait
xchg
js
dec
jle
mov
mov
cmp
xchg
adc
int3
and
ret
insl
jbe
and
jg
aas
test
mov
xchg
daa
cld
fs
push
test
pop
cmp
into
mov
jmp
cli
fbstp
pop
inc
pop
or
les
mov
and
das
adc
push
leave
xor
cmc
sti
rolb
sub
iret
outsb
cmp
mov
sbb
les
loopne
ret
cltd
inc
mov
test
push
lock
xchg
inc
repnz
push
or
aaa
mov
mov
mov
push
push
push
loope
pop
mov
pop
loope
mov
clc
inc
pushw
fistpl
jge
jle,pt
outsb
lahf
add
push
mov
push
adc
mov
repz
add
mov
imull
mov
jg
jmp
lds
mov
hlt
jg
int
cmp
loop
aad
aaa
jmp
ja
xchg
in
out
push
stos
cwtl
add
jmp
ljmp
mov
fisubl
cmp
lds
and
cs
xor
adc
popa
pusha
jmp
mov
adc
and
mov
sbb
jp
mov
into
xchg
icebp
scas
add
loop
adc
and
xchg
xchg
add
stos
sbb
add
jb
lods
cli
jg
jl
push
sbb
mov
out
test
mov
jge
xchg
jmp
mov
dec
in
cmp
sbb
xchg
cmpsl
das
sub
xlat
nop
call
sbb
int3
jp
pop
or
and
mov
cltd
fistpll
das
jne
inc
pop
push
lods
add
es
scas
pop
sbb
mov
adc
aaa
rcrl
inc
jp
mov
adc
je
jl
inc
cmp
jae
add
and
out
jb
loop
jb
shrl
ds
aam
pusha
mov
outsl
xor
push
pop
inc
inc
test
adc
mov
lock
add
xor
into
mov
cmp
xor
enter
and
fdiv
bound
jmp
mov
sahf
into
nop
pop
mull
sub
jne
xchg
nop
fcmovne
fs
andl
fcoml
push
pop
xchg
mov
ret
ds
mov
call
arpl
test
mov
mov
shlb
cmc
push
inc
push
mov
add
pop
pop
sub
leave
xchg
push
pop
sub
mov
mov
cmp
adc
outsl
push
adc
mov
cmp
xchg
xlat
mov
sub
repnz
int3
mov
push
cmp
pop
sahf
jnp
jge
dec
add
xor
in
shlb
mov
mov
pop
xor
add
ret
in
push
jp
arpl
ljmp
mov
insb
hlt
mov
cmp
mov
lea
cmp
or
sub
xor
mov
movsb
fwait
dec
mov
aaa
mov
jge
mov
mov
lret
stos
lret
gs
xor
insb
mov
cmp
shll
mov
cmp
ds
xor
sbb
dec
outsl
jg
cmp
das
cltd
sbb
repnz
fwait
mov
fxch
cmp
or
lods
jmp
cmp
iret
lret
scas
sbb
movsl
jb
mov
inc
inc
bound
lcall
inc
int
fs
pop
out
mov
xor
and
lret
fwait
add
fildl
dec
inc
xor
or
daa
out
dec
xor
mov
inc
mov
add
pop
shll
mov
scas
sbb
andb
jnp
fwait
out
mov
dec
mov
iret
mov
xor
mov
dec
mov
jbe
and
sub
and
add
fwait
cs
or
test
das
dec
in
into
arpl
jnp
mov
xchg
enter
cmpl
dec
dec
stos
or
loope
pop
outsl
sti
enter
push
mov
daa
push
mov
mov
adc
jo
cmpsb
cmpsl
and
inc
pop
xchg
daa
data16
xchg
rol
mov
push
cwtl
fstps
call
xchg
mov
addr16
inc
xchg
loop
pop
addr16
stos
push
dec
nop
push
clc
repz
aaa
sub
subl
or
push
xchg
adc
nop
jg
insb
pop
popa
mov
pop
lods
push
int
stos
xchg
cmpsb
loop
aaa
xor
pop
popf
mov
stac
sbb
xchg
jbe
push
jbe
push
mov
xchg
fwait
incb
cwtl
and
mov
jnp
clc
mov
dec
lods
inc
sbb
xor
xchg
scas
lods
push
arpl
mov
push
sahf
adc
push
in
lea
pop
add
enter
pushf
mov
out
xor
sub
inc
xor
mov
fnsave
mov
cmpsb
xlat
and
lcall
mov
testl
sar
sub
shl
aam
add
xchg
ss
push
dec
and
and
nop
mov
test
mov
adc
add
jmp
test
and
push
cmp
lret
iret
cld
or
push
clc
test
or
push
imul
dec
and
xor
shrl
push
jo
pop
stos
scas
ja
rorl
test
dec
sbb
inc
mov
repz
shrb
mov
inc
adc
imul
shll
scas
dec
std
imul
adc
mov
out
icebp
ja
or
sti
sahf
mov
mov
cltd
push
inc
bound
das
push
add
imul
inc
and
cmc
cmp
push
dec
sub
sbb
sub
in
adc
cmp
hlt
mov
xchg
fistps
xor
ja
cltd
inc
xchg
in
aaa
call
aam
stc
test
aam
imul
xor
addb
sub
sub
adc
repz
movsb
cmpsl
xchg
sbb
mov
add
test
enter
dec
jge
dec
shlb
pop
sbb
ficoms
aaa
sub
cltd
ss
pop
dec
or
or
test
stos
rolb
ror
stos
fsts
adc
int
push
jns
xor
push
stos
sub
les
mull
mov
cmc
adc
adc
adc
mov
cmp
lret
mov
pop
mov
jmp
or
and
bnd
insb
frstor
push
andb
inc
je
out
loop
push
xor
call
cmp
das
ficoml
in
stos
mov
orl
mov
daa
lods
pushf
cmpb
jecxz
jo
insl
inc
leave
mov
shll
movsl
in
xlat
mov
clc
aaa
mov
mov
xchg
push
and
add
loopne
repz
mov
push
jg
xchg
or
mov
cld
dec
stos
push
push
xchg
sbb
xchg
mov
push
mov
mov
push
out
inc
loope
inc
lock
xchg
pop
pop
lea
in
bound
pushf
xor
ds
loop
mov
push
adcl
jbe
sub
fld
loop
xchg
xor
call
xchg
xor
xchg
sub
loope
or
jne
mov
sbb
pop
pop
cmp
cmpsl
dec
aad
ret
repz
lret
leave
cmpsl
scas
clc
xor
out
test
lea
sbb
add
inc
dec
sub
lods
dec
test
mov
push
sub
jae
fstl
jle
out
int3
add
xchg
in
mov
out
push
jno
and
mov
in
mov
imul
popa
int
mov
sub
shrl
mov
cmpsl
or
fwait
cmpsb
mov
sbb
pop
test
clc
sbb
in
pop
mov
and
push
sub
add
sub
xor
call
jns
fdivs
xchg
dec
adcb
xchg
test
pop
in
cmp
jp
mov
fstp
add
mov
in
mov
into
loopew
mov
shlb
lods
fs
shrb
sub
mov
mov
scas
push
ret
orl
repnz
lret
js
fnstcw
lods
jae
mov
mov
dec
add
adc
mov
rcrb
nop
or
movsl
ljmp
andb
addl
xchg
mov
hlt
and
xor
in
cli
xor
outsb
pop
jb
jbe
sti
movl
call
jo
add
js
scas
mov
cltd
fcomp
mov
je
jmp
mov
in
inc
stos
sbb
xchg
jecxz
push
add
insl
cwtl
inc
jo
push
push
subl
xor
shll
insl
cmp
xchg
pop
loopne
jmp
shrl
jno
cmpsl
iret
fistpll
mov
adc
cs
push
call
das
inc
inc
mov
mov
add
jbe
and
jp
es
js
inc
jge
or
inc
mov
jnp
out
cmc
and
stos
mov
dec
pusha
loope
aam
sub
mov
rol
nop
data16
and
sbb
leave
mov
and
mov
dec
and
push
sbb
xchg
loopne
adc
pop
add
sarl
outsl
shll
cmpsl
mov
mov
cmpsl
jl
sbb
cmp
gs
adc
mov
dec
xchg
lods
test
jg
or
push
and
jo
repz
loop
cmp
arpl
cs
pop
cmp
mov
nop
notl
scas
xor
sbb
testl
inc
xor
fwait
push
sti
lahf
scas
mov
out
add
dec
add
xchg
push
push
pop
out
dec
std
shrl
in
mov
cmp
sub
mov
add
inc
in
jg
cld
pushf
jbe
fldl
and
fimuls
sub
xchg
mov
rolb
mov
dec
cmpsl
hlt
mov
subb
hlt
aas
lods
xor
and
es
mov
mov
movsl
adc
push
loopne
adc
mov
arpl
loop
xor
sub
in
cmp
or
mov
lret
lcall
cmc
ror
add
data16
dec
mov
jp
jbe
lret
popf
or
sub
adc
nop
cli
fimull
cmp
fs
pop
xor
jmp
pop
inc
rep
sub
or
sbb
in
mov
cs
lret
shrb
lcall
insl
dec
imul
xchg
mov
mov
mov
mov
fsub
push
shll
cli
aaa
dec
aaa
adc
icebp
lock
mov
jo
dec
and
sub
and
int3
lahf
pop
out
pop
sub
pop
sti
pop
push
out
mul
in
and
pop
fs
stos
fidivl
adc
sub
mov
mov
fisttps
leave
ds
jo
dec
and
fsts
sti
or
popf
rclb
adc
inc
adc
jae
in
fcmovbe
int3
in
cli
pop
dec
loop
nop
and
test
dec
push
cmp
dec
adc
sub
xor
jp
test
fistpl
cmp
pop
std
addr16
andb
call
dec
and
lcall
fs
adc
jo
sbbl
jmp
xchg
sub
adc
call
and
aad
mov
rcll
stc
pop
es
sbb
jbe
mov
inc
test
shll
xor
repnz
cltd
xchg
jp
xchg
inc
xchg
shll
shrl
mov
iret
sub
imul
dec
add
jne
out
inc
mov
cltd
xor
inc
add
sub
inc
loope
les
inc
mov
mov
inc
sti
inc
sub
adc
addl
add
addr16
pushf
in
pop
test
imul
out
xor
faddl
mov
push
frstor
add
fcom
push
stc
xor
shlb
xchg
mov
aam
mov
or
xchg
test
pop
dec
jne
and
or
cmp
out
arpl
jecxz
enter
mov
adc
mov
cmp
dec
cmc
psllw
dec
jnp
mov
lea
inc
adc
xchg
imul
in
movsl
arpl
add
hlt
sbb
inc
mov
mov
mov
mov
lret
mov
andb
xchg
test
xchg
stc
int3
ja
stc
pop
scas
cld
push
arpl
or
dec
mov
push
xor
or
addb
out
jl
pusha
pop
mov
sbb
adc
jmp
or
or
cltd
jle
loop
sbb
pop
dec
inc
sbb
pop
dec
sbb
popa
test
imul
and
imul
ret
int
add
rorl
inc
mov
mov
xchg
lea
enter
jo
xchg
push
outsb
jnp
adc
and
cli
mov
rclb
jbe
lret
mov
push
xor
or
adc
jmp
leave
mov
jo
test
push
jno
outsl
loop
cltd
mov
xchg
imulb
mov
add
jno
in
inc
xor
dec
iret
insl
mov
adc
and
or
cmpsl
jl
mov
sbb
mov
int3
fcomip
lret
cmp
rclb
xchg
sbb
inc
cmp
sub
call
inc
sbb
jecxz
mov
or
mul
inc
mov
jl
testl
mov
jg
or
mov
mov
cmp
mov
xchg
mov
mov
cmc
jmp
sbbl
mov
inc
pop
jb
mov
inc
andb
pop
and
sbb
mov
pop
jne
mov
inc
repz
push
xchg
xchg
lods
test
sub
std
xor
adc
popa
icebp
sbb
inc
cmc
push
es
out
rol
jg
stc
mov
pusha
dec
out
push
outsl
ror
sbb
cmpsb
out
mov
xor
or
push
call
shll
push
imul
push
jno
sbb
sti
dec
lret
jle
das
dec
jg
pop
loope
sarl
nop
jmp
shrl
fidivs
push
fisubs
dec
cltd
xchg
xor
popa
mov
and
and
pop
add
inc
cmp
mov
mov
inc
xor
repz
sbb
cmc
popf
psubd
push
jne
pop
xlat
loop
inc
and
nop
cmp
push
dec
cwtl
pop
rcl
aad
pop
int
in
mov
push
pop
ds
shll
and
ljmp
or
xchg
lcall
jae
ljmp
in
dec
test
pop
sub
js
mov
aas
sub
cmpsb
mov
jbe
push
xor
lea
cltd
in
inc
push
jns
fsubr
bswap
pop
iret
lock
cld
pop
jg
inc
sub
xor
pop
ljmp
cld
dec
or
push
xchg
mov
jp
xor
sti
mov
aam
lret
sti
mov
or
cmp
mov
test
xchg
jle
outsl
stos
in
inc
cmp
inc
hlt
popf
mov
mov
cmp
xchg
das
les
clc
outsb
je
add
add
and
mov
cmp
xor
int
adc
icebp
cmpsl
sbb
pop
ss
out
jmp
fs
pusha
mov
fwait
orl
mov
mov
fiadds
sbb
jp
imul
pop
das
fwait
lcall
adcl
leave
mov
test
add
das
sbb
ja
and
mov
int3
shrb
lahf
mov
pop
mov
and
cli
push
lock
imul
xchg
mov
pushf
addb
fstpt
pop
add
sbb
cld
and
cmp
xor
pushf
scas
out
xchg
lahf
imul
pop
jp
sub
clc
and
negb
movsl
mov
iret
test
pop
inc
push
mov
sti
ret
push
add
inc
inc
pop
xor
cs
xchg
test
cwtl
adc
and
mov
push
xchg
std
mov
and
fidivrl
mov
ja
scas
cwtl
jne
xchg
enter
mov
jp
insb
lea
mov
lcall
in
rolb
xchg
pop
mov
mov
aaa
fsubrl
into
data16
dec
adc
cmp
mov
adcb
out
cmc
insl
dec
sub
dec
test
mov
sub
enter
mov
stos
repz
xor
add
xchg
call
jmp
jns
push
jl
psubsb
or
pop
push
mov
adc
push
mov
cmc
les
movsl
mov
inc
push
cmpsl
or
push
add
lods
sti
mov
jnp
mov
js
pop
lods
add
push
cltd
mull
dec
loopne
push
mov
sub
or
mov
push
mov
fldl
pushl
push
jno
inc
push
push
fwait
sub
pop
mov
hlt
ljmp
push
out
mov
popf
pop
sbb
insb
ds
js
subb
mov
lret
out
cld
jg
dec
adc
aam
xchg
pop
out
sub
pop
and
ss
inc
xor
aaa
sub
stc
sti
in
stc
nop
subl
mov
aaa
scas
push
xor
scas
mov
clc
daa
or
dec
es
lods
cli
cmp
cli
xchg
adc
push
add
inc
add
stc
test
fisubrs
jae
add
ret
addl
loope
mov
setge
mov
adc
mov
jb
movsl
or
jns
pop
or
sbb
cli
les
pusha
outsl
scas
loope
sbb
inc
imul
mov
loop
cltd
jo
inc
xlat
bound
out
cmp
push
out
jle
xlat
sub
jne
or
and
xor
in
inc
int
in
xor
mov
idivb
testb
cmp
out
mov
movsb
jg
aaa
rcl
adc
incb
add
sbb
add
sub
pop
xor
mov
neg
jg
rolb
sub
aam
xchg
cmp
xorl
sub
cltd
aad
mov
lahf
and
push
scas
inc
add
mov
push
inc
cmp
xor
mov
inc
pop
cltd
icebp
mov
pop
push
push
push
mov
mov
fwait
std
mov
or
and
fwait
bound
add
inc
repnz
adc
sbb
push
and
lods
pushf
lret
and
popf
out
gs
xor
pop
xchg
call
xchg
pop
or
lcall
mov
xchg
cmp
ficomps
jnp
pop
jmp
sbb
cld
sbb
out
or
xchg
inc
jecxz
cmc
cmp
mov
dec
mov
or
in
scas
jmp
xchg
jno
cli
sbb
mov
dec
jnp
clc
fwait
out
aaa
aam
mov
fmuls
cwtl
inc
adc
aam
sbb
in
mov
add
stc
hlt
push
inc
clc
cmp
inc
mov
in
fnstcw
ljmp
ret
add
dec
mov
js
sbb
enter
mov
leave
pop
and
mov
add
into
orb
dec
pop
sbb
test
lret
xchg
stc
std
stos
outsb
cmc
xchg
in
pop
or
add
lock
pop
mov
inc
test
inc
test
pop
add
mov
pop
inc
jg
icebp
cli
sbb
shrb
push
rcll
lods
sbb
sbb
push
lods
pop
in
pop
xchg
fsubrl
add
call
out
or
loope
lds
ret
mov
jge
fimull
cwtl
loopne
pop
mov
test
mov
xor
cmpl
inc
les
ljmp
int3
or
stc
fs
fs
aad
dec
aaa
add
lcall
dec
sub
frstor
ret
mov
call
xchg
int
sub
test
insb
push
out
shll
bndldx
pop
jns
lock
xchg
fidivrl
popa
push
sub
movsl
xor
jg
xchg
imul
add
mov
inc
mov
mov
xlat
loope
arpl
pop
maxps
movb
adc
ds
ret
push
lahf
mov
adc
xorb
cltd
lret
xchg
jmp
cmpsb
push
insl
push
mov
or
xchg
and
clc
inc
imul
jg
in
cltd
add
mov
aam
test
xlat
jae
clc
cmpsl
inc
test
je
pop
outsb
out
add
or
mov
loop
cwtl
xor
jg
sbb
inc
or
add
fidivs
xor
xchg
mov
lret
insl
loop
fdivs
inc
sbb
cmpsb
fstp
ficoml
inc
stos
jle
pop
inc
jecxz
stos
xchg
scas
cmc
mov
test
lret
sub
mov
ficompl
aam
xchg
rcl
inc
bound
fadd
pop
es
push
sbb
scas
das
pop
push
jnp
outsb
sub
jl
addr16
sbb
loope
jmp
mov
popf
lea
sub
mov
sti
push
inc
int3
xor
int
mov
xchg
push
cmp
daa
das
xlat
mov
push
je
out
leave
jmp
dec
shl
cli
or
gs
jge
mov
inc
popl
ret
aam
jmp
test
mov
imul
jg
leavew
inc
mov
icebp
repz
xchg
adc
lods
mov
xchg
xchg
addr16
mov
fdivrs
lods
mov
pop
sbb
clc
xchg
insl
push
enter
icebp
sub
xor
and
xchg
mul
or
xchg
xor
pusha
push
push
dec
frstor
cli
lods
repz
push
mov
inc
imul
inc
cmpsb
call
fstl
push
test
mov
rcl
aad
inc
test
adc
jle
lods
cmp
add
movsl
hlt
cmp
add
addr16
scas
shll
sbb
push
adc
lods
sti
outsl
cmc
enter
mov
dec
push
dec
call
jb
mov
jno
mov
add
int3
ret
out
mov
sarb
sub
ja
pusha
adc
mov
jmp
lods
jl
cmpsl
in
inc
subl
mov
and
cmp
test
inc
and
data16
aas
or
sbb
cmp
adc
mov
popa
push
stc
xchg
sub
cmp
fwait
es
mov
xor
mov
mov
aas
dec
and
inc
call
dec
inc
jecxz
fisubs
jle
lahf
cli
jns
lods
xlat
out
push
dec
lret
pop
inc
push
sub
stos
or
shlb
xlat
adc
clc
lea
mov
shl
stc
inc
sbb
hlt
inc
jne
mov
mov
xchg
imul
ficompl
add
mov
adc
inc
dec
aas
in
movsb
adc
xchg
sub
call
pop
sbb
jge
jno
inc
lcall
ja
xchg
pop
push
cmp
xchg
shrb
in
add
sub
push
into
mov
push
aam
loop
pop
adc
jb
std
icebp
cmc
fsts
mov
jg
loopne
sub
adc
loopne
xchg
sbb
or
iret
sbb
idivl
stos
or
aam
and
loop
xor
jecxz
jo
xchg
dec
pushfw
sti
cmp
out
ljmp
mov
or
sub
jns
lahf
iret
fstl
or
cli
scas
sahf
hlt
loop
imul
mov
das
inc
cmp
lea
jge
pop
loope
xor
insb
loop
test
sub
ficoms
xchg
icebp
cmp
out
gs
ja
les
out
fdivs
in
lcall
cmpsl
icebp
push
faddl
cmp
sbbl
adc
push
movsb
and
dec
out
add
loop
loop
ret
or
hlt
das
mov
cmpsb
cwtl
enter
cs
js
pusha
loopne
jns
mov
push
pusha
mov
sti
pop
fscale
jmp
out
adc
xchg
mov
lahf
flds
call
mov
ds
sahf
fsubp
xchg
push
xchg
jle
mov
sbb
cltd
stc
mov
and
rcll
ss
rorb
push
fcomps
mov
inc
call
adc
sub
pop
lods
jo
stos
sbb
stos
stos
nop
mov
adc
cmp
cmp
imulb
in
int
scas
jmp
push
loop
xchg
jbe
mov
std
mov
lods
pop
mov
rcll
mov
int3
xlat
ret
dec
sub
dec
movsl
xchg
cmp
lds
or
in
enter
or
hlt
dec
jg
testl
xchg
inc
int3
int
pop
adc
jg
cld
mov
lock
adc
or
fistl
inc
and
xor
out
xorb
arpl
jle
mov
out
cmpsl
cmpsb
pop
jnp
pop
punpckhdq
stos
mov
ja
lods
mov
sub
scas
jg
outsb
mov
in
pushf
cmp
push
stos
pusha
adc
fstl
sbb
xor
inc
push
loop
sub
xchg
test
aam
sbb
dec
sti
hlt
es
dec
add
lret
test
mov
insl
sbb
inc
std
jbe
ja
jae
mov
movsb
lret
insl
arpl
cmp
jmp
cmpsb
push
ret
mov
punpckhbw
mov
or
jne
aam
js
fldcw
pcmpgtb
call
mov
push
or
shrb
int
jnp
stos
cmc
sbb
or
repz
and
mov
out
mov
mov
fsts
xchg
inc
call
xor
sub
jl
loope
pusha
xchg
imul
add
stc
or
int3
sbb
sbb
sahf
aas
jp
xor
sarl
sbb
add
stos
insb
dec
mov
mov
pop
fists
mov
loop
jnp
sbb
mov
dec
mov
mov
push
mov
fwait
pushl
jmp
adc
in
xchg
lahf
jns
mov
shl
fwait
sbb
mov
push
test
push
iret
pop
inc
roll
adc
xorl
xchg
cmp
arpl
dec
mov
paddb
cmpsl
in
xchg
je
xor
out
test
gs
mov
push
out
xor
cmp
add
sub
mov
cmp
lret
hlt
cmpsb
lds
fsubs
mov
xchg
mov
dec
mov
xor
clc
or
cld
and
dec
dec
pusha
in
sbb
iret
push
cmp
insb
push
mov
inc
ja
xor
sarb
mov
xchg
cmp
cmp
out
loopne
cmp
incl
mull
je
repnz
mov
scas
clc
or
sub
sbb
mov
push
xchg
sti
push
loope
or
xlat
xor
cmp
out
dec
insb
inc
sbb
test
out
test
xchg
and
or
xor
push
popf
adc
fistpll
stos
xchg
loop
fnstsw
lods
xlat
leave
pop
rcll
sbb
sahf
push
push
hlt
xchg
in
bound
mov
sub
repnz
cmpsl
in
jns
lods
daa
in
dec
inc
iret
gs
pop
pop
xor
aam
into
push
aaa
inc
in
clc
or
test
in
repnz
mov
iret
add
add
test
fcomp
enter
in
jl
mov
or
mov
scas
mov
dec
out
xchg
call
gs
lea
mov
sbb
notl
sub
pop
and
scas
cltd
xchg
jecxz
sub
push
mov
cmc
cmp
mov
divl
cltd
or
jae
jg
pop
movsb
xchg
jb,pn
movsb
stos
or
das
jno
pusha
data16
jmp
sub
scas
fsubrl
mov
lret
dec
mov
cltd
mov
inc
inc
in
fstpt
cmpsb
mov
mov
jl
outsl
out
out
loop
mov
test
mov
xorl
fisubrl
in
xchg
aaa
lea
xchg
popa
and
bnd
xchg
xchg
shl
js
add
xlat
pusha
mov
cs
adc
js
sub
test
cmp
test
test
mov
negb
in
out
xor
pushf
jb
call
push
repz
jb
pushf
mov
popa
out
xchg
pop
mov
loopne
cwtl
lret
or
cmp
mov
clc
js
sub
xor
stos
addr16
xor
orb
fs
xchg
sub
leave
pushf
pop
loope
xchg
pop
sub
cmp
xor
pop
mov
int
test
ss
mov
into
adc
pop
or
sbb
mov
pop
je
icebp
pop
lea
mov
jge
pop
pusha
jno
outsb
cmp
insl
insb
repnz
mov
mov
sti
dec
and
pop
jnp
fwait
repz
push
and
testl
cmp
cmpsl
sbb
fdivr
cmp
stc
fstpt
movsb
xlat
bound
and
jmp
push
pop
and
sbb
out
lods
and
rcrl
mov
push
ret
adc
mulb
or
stos
inc
clc
xlat
repnz
sub
sarb
in
fcoml
sbb
pop
stc
sub
sbb
mov
jno
push
scas
pop
sti
leave
dec
sti
insl
addr16
mov
mov
lods
outsb
ffree
inc
jmp
mov
test
and
xor
dec
inc
loop
aam
push
xchg
loop
or
nop
rorl
test
xor
out
stc
ljmp
dec
rcr
mov
sub
popf
fsubrs
pop
sbb
sarl
test
andb
dec
js
push
or
sub
rcr
dec
lea
bound
jne
mov
and
jae
in
cmp
or
fldenv
cltd
push
lds
arpl
cld
lahf
hlt
mov
adc
mov
loope
cs
popa
and
repz
cmp
popa
adc
and
add
inc
in
sarl
cmp
ss
addl
jbe
xchg
jbe
das
in
ja
cmp
out
xchg
and
inc
mov
mov
mov
sbb
mov
push
insb
xchg
inc
stc
jae
pushl
gs
or
adc
push
jge
push
clc
pusha
test
jo
xchg
sub
ss
and
inc
mov
mov
push
rclb
mov
pop
movsl
sub
scas
xchg
jmp
out
dec
test
mov
cmc
jmp
pop
mov
pop
fwait
inc
imul
popa
out
xor
xchg
fisttpll
sbb
repz
ljmp
sahf
adcl
adc
mov
divb
lcall
pop
xorb
out
mov
adc
push
xchg
xchg
push
cmpsb
dec
dec
frstor
ret
inc
mulb
pop
outsb
popa
popa
inc
or
mov
nop
jmp
jbe
mov
fcoms
dec
adc
mov
mov
lods
fisubrl
jecxz
les
pop
push
scas
xchg
hlt
cld
mov
xchg
xor
out
jle
xorb
inc
daa
push
pop
jns
mov
test
sarl
orb
or
int
mov
pop
pop
dec
add
push
cmp
add
inc
xor
jnp
ret
fwait
dec
mov
push
pushf
call
add
mov
lods
mov
jbe
add
incl
pop
dec
js
loop
xchg
movsl
dec
fbld
movsb
push
dec
aas
cltd
sbbl
dec
out
dec
ja
aaa
pop
call
push
adc
mov
mov
rorb
mov
aam
xchg
jae
std
xchg
mov
cmc
push
pop
dec
or
ljmp
fstpl
xor
cld
mov
push
add
pop
rcr
mov
in
mov
add
sbb
icebp
cs
sbb
cmpsb
bnd
or
inc
test
iret
cli
loop
subl
pop
pop
jbe
aaa
jg
stos
je
jno
mov
inc
fdivl
cld
or
or
movups
dec
pop
cmpsl
and
jb
int3
jl
mov
lret
push
cmp
aam
call
push
das
jns
repz
pop
pop
sbb
push
int
imul
add
loop
addr16
pop
mov
xor
pcmpgtw
icebp
xor
cld
xor
movsb
mov
cmpl
cmp
aam
mov
sbb
lds
les
mov
cmpl
dec
jmp
and
fidivl
iret
enter
loopne
aaa
int
dec
scas
and
fidivl
xchg
shrb
dec
test
adc
aam
inc
js
pop
movsl
or
std
dec
xchg
and
mov
jmp
xor
popf
mov
xlat
fsub
push
and
pop
adc
inc
out
enter
cmc
add
repnz
jne
in
mov
mov
push
inc
mov
or
xchg
jecxz
jle
fdivrl
pop
mov
orb
subl
pushf
rcrb
ljmp
cmp
mov
imul
sbb
ret
push
int
flds
push
mov
mov
mov
icebp
iret
icebp
inc
sbb
stc
js
jb
in
xor
add
xor
sub
cmp
pop
fisttpll
setge
data16
add
roll
and
xor
stc
in
jge
out
out
cli
or
outsb
xlat
mov
xor
pop
xor
jge
es
push
popf
outsl
fdivrs
jmp
popf
stc
jmp
inc
aas
and
shll
push
mov
pop
jae
or
and
daa
dec
ds
add
aas
pop
dec
mov
cld
adc
mov
sbb
jns
clc
mov
pop
jmp
aas
dec
and
sti
incl
sbb
mov
icebp
jle
xchg
inc
sbb
pop
test
stos
clc
adc
shll
iret
dec
inc
es
adc
pop
aam
nop
inc
add
int3
sbb
and
in
jmp
adc
fnstenv
stos
or
enter
hlt
rcll
cld
nop
jne
lods
dec
lock
and
aam
pop
fldcw
sbb
inc
repnz
flds
push
inc
lahf
xor
pop
pop
mov
rcrb
scas
sub
adc
sarb
ja
cmp
dec
or
ja
std
popf
add
scas
fsin
orb
pop
mov
repnz
nop
and
dec
sbb
sbb
mov
add
in
je
xorb
pop
fistl
and
mov
and
div
sbb
repz
adcl
jae
dec
push
xchg
pop
and
xor
sub
iret
pop
lcall
xor
add
or
fucomip
jl
movl
xlat
fs
cmc
lods
jecxz
shrb
add
out
fcomip
push
push
in
in
pop
fists
pushf
push
fsin
or
es
jmp
mov
jns
out
push
dec
xlat
das
mov
jae
xchg
idivb
shll
jno
das
fldt
jnp
mov
pop
call
xchg
adc
pop
pop
imul
out
lret
shlb
add
aas
inc
push
lods
cld
dec
pop
jge
lcall
sbb
dec
hlt
push
dec
cmpsb
mov
outsl
dec
out
adc
insl
sub
loope
xor
or
hlt
sub
hlt
int
dec
sub
cwtl
fiadds
pusha
cmpl
xlat
or
data16
cld
sub
or
leave
sbb
xor
insl
jo
and
mov
and
and
mov
mov
clc
enter
mov
xor
leave
out
dec
addr16
adc
movsb
xchg
loopne
lret
jg
push
adc
mov
je
aam
push
mov
daa
aaa
data16
xor
mov
lods
repnz
adc
pop
dec
push
lds
lock
adc
jb
add
pop
inc
push
sbb
xchg
icebp
ljmp
pop
fstp
fimull
js
fcmovnu
inc
push
testl
test
mov
and
outsl
imul
push
cmpb
lock
mov
test
dec
hlt
push
adc
xor
imul
mov
loopne
add
inc
sub
adc
popf
xor
outsb
mov
mov
pop
sub
mov
push
lahf
fsubl
cmp
xchg
stc
adc
jl
sub
enter
dec
sahf
mov
sub
sub
aam
fcoms
cmpsb
ret
lahf
les
mov
jo
enter
adc
shll
inc
cmp
sub
into
inc
rcr
mov
sbb
pop
mov
std
push
jge
inc
add
jns
repz
lahf
scas
dec
fidivs
or
dec
mov
ret
mov
lret
inc
aaa
stos
push
pop
cmp
repnz
imul
loop
test
call
adc
or
data16
lods
jge
push
cwtl
mov
ds
aad
sbb
or
xchg
fwait
into
jp
sarb
xchg
ja
aam
cmp
fbstp
lcall
mov
in
dec
xchg
push
adc
out
in
popa
xor
cmpsb
xchg
push
ret
clc
push
pop
test
mov
lret
lock
hlt
cmp
mov
jmp
mov
fbstp
in
mov
cmp
out
and
or
ljmp
push
or
mov
je
jb
sti
pop
fdivs
pusha
push
aas
mov
fimull
das
ds
out
pusha
shll
mov
sti
hlt
std
test
adc
xchg
loope
sti
gs
cs
int3
jmp
scas
cmp
rorl
lret
lret
daa
cld
mov
cmpsb
pop
popf
popa
les
hlt
cmp
xchg
dec
dec
lock
or
push
mov
mov
sbb
out
jbe
pop
outsb
int3
fisubs
gs
mov
pop
lcall
mov
pop
xchg
out
ret
sub
fiaddl
cmpsb
repnz
test
stos
cld
xchg
aaa
inc
addb
jbe
call
or
aad
adc
push
ljmp
pop
xchg
hlt
outsb
aas
outsl
aad
inc
es
jb
jmp
cwtl
cmp
push
loopne
pusha
sbb
sbb
sbb
lahf
sub
iret
fsubl
sbb
mull
pop
outsl
inc
loop
mov
mov
fistpl
test
jecxz
xchg
scas
je
lret
lods
push
sbb
cmp
js
xchg
les
stos
xor
sbb
ja
sahf
cmp
xchg
add
adc
pop
adc
out
cs
lods
dec
sbb
in
jmp
xor
mov
cld
ror
outsl
push
int
out
cmpsl
xor
fwait
cmpsl
sbb
xor
pop
add
add
add
cli
jl
aaa
or
sti
cs
inc
fdiv
fstps
inc
std
call
pop
adc
or
sbb
mov
pcmpeqd
ljmp
xor
loopne
cwtl
rorb
rcll
aaa
mov
and
xchg
lahf
idiv
pop
scas
mov
inc
push
ret
mov
mov
arpl
cmp
pop
inc
xor
cmpsl
dec
cmp
adcb
insl
insl
mov
leave
or
js
sub
mov
lahf
sub
jg
inc
inc
pop
mov
insb
shl
inc
insb
push
mov
sti
mov
fists
pop
push
fisttps
adc
into
stc
and
and
imul
fs
push
xchg
dec
cmp
in
into
mov
xchg
mov
xchg
cmpb
push
int
or
mov
std
xlat
jecxz
lods
xchg
fildl
pop
push
xchg
xchg
mov
xchg
add
and
inc
out
xchg
loop
and
jl
xor
lret
inc
into
mov
mov
and
js
js
adc
cmp
movsl
fldenv
fisubrl
in
jns
mov
dec
iret
insl
add
sub
sarl
fisttpll
and
cmpsb
mov
pop
and
add
ficoml
aas
scas
ficompl
fadds
insl
loope
cmp
jecxz
fdivl
out
push
pushf
out
lret
scas
add
lea
popf
addr16
testl
fstl
jecxz,pn
inc
mov
xor
jg
jbe
or
test
lret
and
or
mov
dec
mov
adc
adc
cmp
mov
fldt
xor
in
scas
cli
pop
leave
xor
dec
cmp
lea
jnp
mov
cltd
roll
or
dec
pop
sbb
pop
mov
cmp
cmp
lds
cmp
adc
in
data16
cmp
stc
mov
inc
into
xor
fmul
jmp
lea
xor
test
frstor
lods
xor
mov
enter
not
jle
hlt
repz
adc
outsl
mov
dec
cmpsl
mov
imul
lret
mov
sbb
jmp
cld
fdiv
test
pop
mull
std
sbb
nop
mov
and
dec
std
stos
mov
stc
cld
sub
jmp
loop
imul
movsl
mov
cltd
cmp
jno
sbb
xchg
cmpsb
xlat
push
pop
pop
mov
mov
xor
cmp
fwait
test
fwait
std
cmp
shll
mov
rorb
push
pop
sub
repnz
je
mov
sbb
jecxz
inc
sti
xchg
mov
jnp
sub
ljmp
and
lret
mov
or
ficoml
leave
movsl
push
mov
ja
pop
jmp
lret
ss
mov
cmp
sbb
push
adc
add
mov
into
fcoml
pushf
data16
cwtl
std
lret
and
dec
pop
stc
or
movsb
icebp
ret
push
xchg
jge
xchg
fldt
mov
movsb
cltd
sbb
mov
lods
dec
push
outsl
sarl
xor
xor
mov
push
or
fwait
dec
dec
nop
dec
mov
and
aad
out
cmpsb
sbbb
test
push
cmp
mov
cwtl
or
ja
fcomps
pop
hlt
pop
ja
outsb
sub
test
addl
dec
push
xchg
inc
cmp
mov
lea
adc
test
and
adc
mov
sub
clc
or
fnsave
mov
call
xchg
dec
aam
jns
subl
cltd
les
in
into
insb
cmp
call
and
jb
cmc
mov
testb
leave
pop
sub
cltd
pop
lea
sub
push
xor
test
ror
jg,pt
lret
jl
aas
pop
mov
mov
lret
and
xchg
cmp
adc
inc
cmpb
adc
stos
and
cmpsl
sbbb
call
or
xchg
jg
sahf
push
stc
adc
cli
jg
js
or
lcall
test
pop
or
bound
sbb
aam
fstl
mov
aam
fwait
pop
adcl
cmp
and
out
sbb
mov
cmp
xchg
and
lea
mov
mov
sbbl
push
mov
addr16
mov
cmp
dec
dec
fildll
xor
inc
in
dec
mov
daa
jle
pop
sahf
sub
jnp
inc
dec
andl
fidivrl
or
dec
iret
xchg
test
push
jl
jecxz
or
into
js
inc
mov
push
test
jae
addr16
movsl
sub
mov
cli
lcall
mov
cld
inc
push
fimull
sub
lods
jnp
xchg
and
jle
mov
popa
inc
inc
and
aas
je
add
int
push
nop
push
ss
pusha
push
inc
imul
push
push
test
testl
dec
inc
repnz
pop
xor
pop
push
aaa
jo
xlat
lock
hlt
adc
mov
push
test
push
mov
imul
dec
repz
and
icebp
dec
mov
jbe
mov
adc
movb
sbb
push
repnz
push
push
mov
rol
pop
nop
je
cmp
sbb
jne
repz
mov
mov
mov
cld
mov
adc
jns
stos
mov
lea
mov
ret
mov
cmp
pop
movsb
xchg
mov
xchg
dec
push
in
lods
push
hlt
xor
sbb
xchg
mov
and
nop
imul
cmp
das
inc
pop
je
dec
xchg
xchg
jno
mov
adc
and
cmp
cmpsb
push
dec
nop
in
cld
mov
je
loope
out
jb
rcl
test
mov
test
push
push
adc
push
repnz
dec
xchg
xchg
and
data16
push
lods
sbb
gs
push
cmp
ffreep
add
and
hlt
sti
inc
insb
cmp
and
js
shlb
push
adcb
insb
jmp
xchg
test
into
enter
cmp
scas
adc
xor
pushf
pop
insl
xor
dec
aad
push
or
add
mov
or
jnp
lcall
inc
mov
push
sarb
mov
adcb
int3
pop
adc
pop
pop
sbb
push
pusha
fcomps
inc
mov
int3
in
cmp
fdiv
lds
xchg
cmp
mov
mov
cli
sub
add
dec
mov
jge
fcom
arpl
inc
mov
les
xlat
rcrb
imul
mov
push
daa
call
jae
aad
inc
daa
mov
stos
lret
add
out
pop
sub
mov
loop
sbb
outsb
or
fcom
ss
imul
sbb
mov
jb
lea
ret
mov
pop
lcall
cmpsl
xchg
ret
sbb
sub
add
or
push
jge,pt
stos
jno
mov
movsb
jb
add
ret
clc
adc
aaa
popa
pop
xchg
test
dec
pop
rcl
sbb
inc
test
out
lcall
stc
and
rcl
push
lock
movsl
mov
jp
mov
and
jns
mov
adc
rcrl
int
ljmp
call
pop
rorl
jo
sub
adc
mov
loope
fcomp
sbb
lds
push
in
lea
xor
xor
add
movsb
lock
les
inc
sbb
gs
push
xor
jg
or
fwait
aam
inc
pop
and
cs
divl
ss
fadd
cmc
push
push
push
cmp
adc
ss
notb
stos
xchg
movsb
mov
arpl
jmp
fwait
jb
sbbl
jb
je
jb
pop
mov
xchg
mov
gs
loopne
mov
jae
fsubl
sub
lahf
mov
push
mov
bound
lods
mov
sbb
dec
cld
push
pop
in
inc
insl
push
mov
loope
movb
jp
pop
xchg
mov
cmc
inc
outsb
xchg
dec
aas
xor
push
dec
mov
leave
inc
test
test
mov
loop
fisttpl
fidivl
cmp
call
mov
in
sub
or
xchg
push
xor
adc
and
lret
jmp
jno
mov
mov
rcrl
addr16
rcrb
test
mov
add
or
mov
push
popf
push
das
add
repz
hlt
sbb
mov
nop
fstpt
and
sbb
or
xchg
or
imul
xchg
out
iret
and
pusha
and
mov
sbb
outsl
mov
xor
cmp
sub
cli
xor
dec
fisubrl
cmp
xor
in
mov
cli
cwtl
incb
jns
sub
lcall
test
mov
jmp
test
mov
xor
stos
movsl
push
test
arpl
sbb
push
popf
dec
or
int3
adc
adc
xor
and
lahf
xor
insl
push
adc
fsubrs
movsl
sub
pop
sub
mov
push
ss
repnz
je
mov
pop
orl
and
fstpt
cli
or
cmp
pop
fisttpl
jno
and
ror
das
push
dec
jne
pop
push
add
mov
out
outsb
out
fnstenv
out
xorl
cmp
cmp
jb
pop
lods
ja
xchg
pushl
mov
call
je
sbbl
cs
mov
xor
jnp
mov
les
hlt
jbe
mov
mov
inc
outsl
ret
sub
loope
fmulp
in
and
adc
pop
inc
mov
push
mov
jmp
insw
mov
jmp
test
pop
cmc
ljmp
pop
shlb
in
dec
sub
rorl
pop
repnz
fbld
nop
gs
aad
mov
aad
std
mov
pop
stc
and
mov
outsb
loop
pop
xchg
fstl
std
mov
mov
aaa
add
xchg
add
mov
jp
jb
pop
jmp
outsl
scas
repnz
imul
test
in
lahf
xchg
push
sbb
frstor
cmp
lret
pop
leave
andb
sbb
xor
mov
out
frstor
mov
add
pop
ds
jnp
mov
xor
sbb
or
jl
inc
fcomi
leave
push
ficomps
xchg
leave
inc
push
hlt
jmp
mov
insb
mov
mov
cmpsb
mov
mov
lret
scas
add
fwait
xchg
movsl
imul
inc
ret
mov
pop
rorl
jno
xchg
repnz
int
dec
rorl
mov
lret
inc
in
icebp
push
cmp
add
inc
mov
movsl
fdivl
mov
lods
stc
push
mov
insb
pop
jno
mov
xlat
sti
std
pop
mov
cmp
stc
popa
repz
add
dec
sub
adc
lahf
dec
enter
sarl
or
dec
dec
sti
inc
xchg
shrb
mov
mov
lods
nopl
xchg
lret
add
imul
adc
outsb
rcrl
fcmovb
out
or
lcall
popa
mov
in
pop
int3
pusha
cmp
int3
or
cmc
dec
pop
femms
cmp
pop
incb
jns
cmp
and
fsubs
fnstenv
cmp
mov
pop
stc
xchg
pop
pop
pop
fisubrl
icebp
mov
mov
push
sbb
in
sub
bound
mov
dec
push
int
out
ficompl
adc
fwait
imull
push
inc
icebp
loop
int3
xchg
mov
mov
sbb
mov
dec
jle
pushf
out
fimull
xchg
testl
js
xchg
mov
xchg
fdivs
inc
shlb
loope
popf
or
add
sbb
mov
testl
inc
shlb
pushf
lahf
xor
sub
push
jae
addr16
push
mov
call
in
cltd
insl
js
mov
inc
inc
inc
jge
fisubrs
and
mov
inc
lock
sub
lock
pusha
add
xlat
cmp
mov
push
pop
pop
out
cli
pop
push
ret
ret
repnz
adc
aas
movsl
jo
ss
shr
push
rolb
cmp
aas
jmp
int
jne
mov
pop
xor
aaa
mov
xchg
jp
mov
dec
mov
enter
mov
aaa
popf
fildll
sbb
out
sahf
popa
and
inc
push
push
cmpsl
sbb
adc
lods
jno
cld
in
in
cmp
push
inc
lods
pop
insl
ret
into
mov
stc
inc
mov
ja
daa
arpl
lock
push
xchg
push
ljmp
loope
or
mov
push
inc
or
mov
mov
mov
pop
pop
lret
push
int
adc
adc
nop
add
push
ror
ds
lods
mov
push
scas
aas
sbb
inc
stos
leave
repz
mov
imul
fdivs
adc
dec
fidivrs
and
in
scas
shrb
pop
and
mov
fistpl
aaa
sub
stos
cmp
jl
sbb
or
sub
mov
mov
pop
fisttpl
jns
outsb
adc
ja
xchg
mov
jp
dec
pop
sub
or
sbb
dec
lahf
rol
nopl
push
sbb
lcall
ss
mov
sbb
cmpl
fwait
push
test
das
jge
int
pop
frstor
outsl
ja
iret
js
ds
inc
add
out
gs
sbb
mov
jo
jecxz
movsl
je
xchg
fisubs
testb
mov
and
int
sub
inc
jl
out
or
in
fs
mov
and
fsubl
addr16
lds
mov
xorl
aad
xchg
xor
sbb
and
pop
movsb
cwtl
inc
fldl2e
xor
pop
or
in
sub
xchg
sbb
scas
xor
addb
push
out
lods
test
mov
and
cltd
mov
test
out
mov
inc
sub
jns
fsubl
pushf
or
xor
pusha
out
in
rol
xor
jne
sbbb
es
outsl
jl
andl
jnp
pushf
ret
xchg
mov
dec
mov
int
insb
lea
stos
xchg
sbb
fcom
xor
hlt
jno
pop
pop
cmpsb
lcall
add
dec
aad
xchg
xchg
out
cmp
add
imul
mov
mov
cmp
adc
aas
mov
xchg
mov
out
pop
jmp
int
pop
push
xor
and
mov
lea
mov
mov
dec
jnp
shl
out
into
sbb
ss
shr
and
jle
jl
xchg
sbb
xchg
rolb
insb
dec
xchg
lea
and
or
push
cs
mov
movl
xchg
or
inc
mov
imul
add
sub
aaa
lahf
fwait
push
and
or
pop
inc
pushf
pusha
mov
aam
adc
cmpsb
mov
add
rcrl
std
in
xchg
cltd
movsl
out
or
jno
mov
and
divb
cmpsb
lahf
pop
or
jnp
push
fisubs
fchs
mov
aad
or
loop
inc
gs
in
pop
imul
or
call
pop
or
flds
or
enter
jbe
mov
dec
call
cmp
mov
jmp
cmpsb
push
push
cs
hlt
lods
nop
adc
dec
jb
cmp
and
dec
dec
xchg
mov
enter
mov
ret
dec
push
cs
stos
or
jne
dec
mov
pop
sbb
jae
add
mov
fisubl
out
mov
bound
sbb
out
and
push
jge
outsb
fdivr
jp
fnsave
insl
xor
push
mov
jo
int3
sub
test
cmp
adc
adc
cmp
pop
pop
lcall
and
int
mov
cmp
cmp
outsl
xor
bnd
int
loop
xchg
leave
xchg
scas
and
pop
aaa
or
das
mov
mov
cmc
repz
mov
mov
jmp
cmp
test
loopne
aam
xlat
pop
sub
shlb
es
rorl
inc
dec
cwtl
scas
or
je
sahf
aas
jb
mov
sarb
xchg
add
js
cmp
push
mov
inc
and
daa
leave
push
push
ljmp
xchg
out
mov
mov
in
outsb
xor
cli
aam
andb
pop
lds
push
mov
std
push
jmp
int
inc
movsb
jb
fldenv
xor
sbb
pop
lret
std
mov
pop
fldenv
mov
adc
lock
iret
cwtl
xchg
cmp
aaa
ds
mov
xor
ret
or
jecxz
shrl
xor
sarl
push
nop
scas
mov
clc
shlb
xor
inc
xchg
subl
stos
sbb
or
rcll
fimull
ljmp
mov
sbb
lret
xchg
push
push
stos
inc
lret
fcomi
dec
xchg
lods
arpl
mov
not
xchg
push
mov
push
lret
or
imul
jns
aam
imul
adcb
cli
or
popa
and
xchg
scas
cmpsl
loopne
inc
mov
outsl
cs
pop
test
inc
adc
fwait
shll
mov
test
out
mov
insb
jp
pop
dec
dec
sbb
mov
nop
mov
xchg
shrl
fwait
mov
outsb
gs
inc
loope
loop
les
ss
idivb
int3
loopne
pop
mov
mov
xorl
outsl
outsl
lods
pushf
jge
jbe
daa
arpl
pop
sbb
leave
outsb
jo
lcall
sub
xor
pop
and
les
cmpsb
cmp
mov
push
pop
iret
pop
lods
mov
and
add
mov
mov
clc
shrb
lods
dec
cmp
clc
std
stos
push
inc
adc
into
scas
mov
sar
ss
hlt
shll
cmpsl
fsubrs
sti
jl
out
mov
rol
pop
xchg
adc
out
sbb
jl
rorb
fnstenv
mov
jmp
stos
mov
decb
and
inc
sub
stos
es
leave
iret
pop
fwait
pop
mov
xchg
icebp
sub
cltd
sbb
sahf
pop
push
icebp
call
pop
xor
add
sbb
sbb
clc
inc
ret
push
xchg
movsb
aas
xchg
cmp
sub
jo
xor
xchg
dec
lret
add
or
test
call
cmp
mov
lea
dec
mov
div
orl
mov
adc
ds
add
and
ret
gs
scas
push
inc
movsl
push
jb
sarl
add
xor
rcll
int
pop
iret
dec
pop
cmpsl
sbb
mov
popa
push
dec
fldcw
int
mov
out
push
jle
xor
insb
mov
jbe
in
scas
and
incb
idivl
das
sbb
dec
xor
jbe
pop
sub
negl
inc
dec
and
repz
insb
jp
add
xchg
ss
lahf
sub
adc
out
in
mov
cltd
sub
jno
roll
mov
mov
xor
bound
dec
mov
movsl
imull
jp
mov
mov
stos
sub
shrb
mov
cmp
xchg
test
and
addb
xchg
pop
iret
out
cmp
lods
dec
mov
dec
pop
lcall
mov
sbb
or
xchg
sbb
std
jge
mov
xchg
loop
add
jnp
xlat
pushf
dec
orb
or
adc
push
push
push
mov
stc
sarl
inc
inc
test
ljmp
out
les
and
repz
adc
lea
sub
pusha
es
jae
or
push
adc
cli
cmp
pop
fildl
les
stos
lds
sbb
fwait
xchg
push
sub
addl
mov
loope
out
xchg
sub
movsb
daa
mov
insb
push
push
mov
insl
imul
add
xlat
ret
iret
add
data16
in
pop
lahf
mov
xchg
inc
mov
daa
dec
daa
aaa
inc
xor
push
sub
ror
int3
ljmp
inc
fldl
dec
mov
ret
aaa
dec
cmp
mov
mov
out
fs
xor
imul
popf
repnz
aam
inc
xchg
incb
les
or
xchg
xchg
les
sar
lods
mov
adc
inc
loope
mov
inc
dec
in
lock
and
dec
pop
xor
and
scas
ret
fwait
pop
push
cmp
je
stos
shrl
popa
imul
iret
js
test
pop
mov
lcall
call
mov
pop
mov
aad
ret
pop
in
jp
arpl
js
int3
sbb
outsl
mov
outsb
xor
lret
andl
icebp
hlt
dec
dec
dec
jbe
mov
push
outsb
aad
ret
fbstp
push
mov
cmp
je
and
and
icebp
xchg
mov
inc
mov
fidivrs
sub
into
cmpsb
mov
jl
push
movsl
adcb
mov
sub
push
das
int
inc
stos
mov
sahf
shrl
test
test
lds
in
rolb
pop
adc
cmpsb
iret
adc
sti
sbb
inc
push
cmp
lahf
dec
rclb
pop
push
mov
xor
add
pop
loopne
lods
push
mov
hlt
inc
push
inc
inc
push
mov
jbe
jno
lahf
dec
repz
test
cmc
and
jo
loopne
push
pop
sti
std
push
popf
mov
xchg
xchg
mov
sbb
pop
rol
test
pop
les
arpl
cmp
cmp
add
xor
fdivrl
cmp
out
add
and
rolb
lret
mulb
or
int3
fcoml
xor
test
jbe
movsb
sub
sbb
pop
jl
xor
mov
jge
das
xchg
iret
jne
xor
loopne
rcrl
cmp
pusha
xor
repz
iret
sbbl
pop
mov
add
cmp
mov
or
sahf
mov
push
cmpsl
xor
movsb
std
mov
pushf
mov
pusha
jmp
push
das
xor
movsl
scas
lret
jecxz
add
loope
lret
std
notl
sbb
cmpsb
jl
testl
inc
pop
cmp
sti
out
test
gs
add
clc
aam
pusha
fbld
or
cli
je
leave
mov
add
and
jns
int3
mov
jns
sbb
push
sbb
fcompl
push
cmp
push
jne
fdivl
mov
daa
cmp
mov
fwait
in
cmp
xor
dec
sarl
sbb
cmp
shrb
test
out
xlat
jg
fisubs
rcrb
inc
das
cld
test
push
imul
out
add
outsb
shll
scas
mov
mov
clc
icebp
inc
lds
in
dec
scas
adc
pop
fdiv
mov
sub
inc
popf
sbb
jmp
pop
lahf
jp
daa
fistl
stos
popf
push
and
xlat
repz
lock
jge
addr16
lds
loope
mov
adc
fwait
jl
jbe
fstl
enter
sahf
mov
nop
jnp
mov
cmp
mov
insb
cltd
mov
lods
inc
sti
push
cltd
jbe
or
dec
add
xor
adc
lcall
clc
rcrb
cli
ljmp
sub
mov
or
xchg
xchg
fwait
cwtl
or
dec
add
test
add
push
pusha
shll
pop
adcb
xchg
pop
idiv
jnp
out
cld
outsl
xor
das
repnz
jecxz
mov
add
out
dec
mov
std
loope
mov
inc
scas
lods
movsl
sbb
call
fisubrs
push
jecxz
add
aaa
xchg
testl
fwait
push
jnp
push
dec
or
movsl
clc
mov
aas
pusha
mov
sub
enter
test
jo
pop
add
out
jl
mov
pop
outsl
leave
shrb
mov
xor
adc
cmpsb
stos
out
test
mov
jo
test
add
jne
push
shll
and
xchg
dec
and
ret
add
addl
lret
pop
xor
pop
aam
mov
inc
pop
cmp
mulb
sti
mov
scas
fisubs
adc
insb
icebp
mov
ljmp
jg
loopne
or
adc
xor
push
sbb
cs
fdivl
fidivrl
addr16
add
push
ja
repz
movsb
loopne
sbb
and
sub
mov
cmp
jmp
jmp
inc
jnp
repz
addb
mov
cltd
cmpsl
cld
repnz
leave
adc
sbb
inc
imul
inc
xchg
push
mov
pop
stos
sbb
push
or
mov
out
inc
mov
call
push
xor
sbb
adc
out
fisttps
std
jnp
add
jne
loope
sahf
ljmp
mov
js
movsl
mov
repnz
sub
mov
mov
sbb
cld
cmpsb
add
adc
daa
test
hlt
push
mov
xor
mov
mov
and
jmp
add
fdiv
mov
loop
xchg
inc
or
mov
xlat
and
xor
inc
mov
push
outsl
test
xchg
add
xchg
fmulp
pop
cld
or
mov
fisubrs
es
iret
out
mov
cmpsb
in
push
cmp
xorl
push
push
push
adc
push
adcb
fwait
xor
ficoms
ret
mov
ss
push
out
and
and
mov
lret
push
pop
mov
push
test
cltd
pop
out
and
push
out
pushf
and
dec
or
shlb
jp
int
cmpsb
pop
in
xchg
hlt
add
pop
pop
in
pop
adc
cmpsl
ret
shll
add
sbb
adc
sub
imul
subb
xor
js
rcl
or
int
lcall
pop
test
inc
push
sub
icebp
add
xchg
outsb
cmp
push
loope
xchg
gs
aam
lcall
dec
fimull
and
xchg
adc
or
ss
pop
out
fidivl
imul
push
or
sub
dec
xor
out
lds
out
rcrb
xor
ss
lcall
in
in
stos
dec
scas
mov
loope
sahf
jmp
and
jmp
stos
popa
push
popa
mov
jmp
cmc
test
rcll
icebp
mov
enter
dec
push
and
std
mov
cmp
sahf
add
mov
xchg
mov
xor
push
out
mov
sbb
xchg
cld
sub
or
call
lcall
xor
mov
cld
xchg
faddp
cmp
inc
push
movsl
pushf
lea
mov
rcll
cs
scas
sar
mov
and
inc
icebp
daa
sub
lods
mov
pop
or
push
mov
pushf
mov
cmp
paddw
push
popa
lret
xchg
aaa
pop
add
jecxz
addb
xchg
or
in
xchg
aad
stos
aas
push
in
xor
and
scas
pop
dec
ret
arpl
movsb
adc
lret
movb
scas
addl
iret
adc
xor
cwtl
mov
xor
add
ljmp
in
addr16
inc
shl
cs
je
aad
sub
adc
dec
adc
popa
sub
xchg
mov
hlt
cltd
pop
stos
test
mov
adc
and
pop
adc
adc
mov
xchg
push
jae
push
mov
dec
pop
test
xor
bswap
aaa
or
in
repz
sbb
into
dec
test
stos
iret
arpl
adc
add
mov
fcomps
xchg
stos
xchg
adc
push
je
mov
pop
fwait
mov
rol
mov
sbb
push
adcb
and
out
lahf
insb
xchg
sub
pop
mov
fs
or
lcall
popa
mov
add
fsts
cmpsl
adc
rolb
movsl
mov
inc
test
and
fsts
inc
mov
std
pop
sahf
jl
mov
pop
iret
mov
imul
push
movsb
data16
daa
cmp
jno
and
in
out
mov
insb
adc
push
and
push
push
xor
std
mov
add
push
cmp
push
lahf
bound
das
and
dec
push
or
inc
mov
or
mov
push
xchg
add
data16
pop
add
mov
inc
mov
dec
jle
insl
pop
pop
icebp
inc
add
loop
std
mov
out
mov
lret
jmp
xchg
sbb
fs
jle
xchg
sub
mov
lds
data16
stos
pop
and
adc
mov
aaa
jb
cmpb
stos
jmp
push
rclb
test
cld
ja
cmpsb
push
xchg
pop
roll
lods
adc
mov
sub
nop
or
divb
xchg
ss
jae
add
je
pop
sub
test
sbb
inc
gs
fimuls
mov
lcall
repnz
adc
lock
pushf
and
push
mov
popf
xchg
adc
xchg
mov
inc
mov
jmp
out
inc
aam
sbb
cmp
out
insl
or
push
insb
pop
jp
pop
ds
sahf
sub
in
adc
adc
lea
or
inc
negb
adc
hlt
fistps
or
push
and
loop
pop
out
insl
mov
pusha
push
pop
jb
jo
cmpsl
jb
aam
or
aad
jp
sbb
iret
mov
xor
in
std
loop
outsl
dec
jo
insb
jmp
xchg
js
mov
sub
mov
sub
dec
push
xor
insl
pushf
mov
sbb
dec
push
andb
adc
sub
cs
push
enter
std
ja
gs
mov
inc
and
aam
jb
enter
stos
in
repnz
mov
or
jp
mov
lret
mov
wrmsr
call
or
shll
jge
mov
je
repz
test
aas
jb
cmp
lahf
cmpsl
or
mov
inc
fisttpll
shrl
je
fisubrl
pusha
mov
loop
adc
push
push
jnp
ja
test
inc
or
pushf
inc
cltd
jge
jae
push
push
ficompl
push
cli
jbe
popa
dec
xchg
test
fmuls
mov
xchg
imul
iret
cvtps2pd
ret
aad
adc
mov
pop
mov
lods
fwait
in
out
push
dec
sahf
rorb
pop
pop
dec
ja
dec
cmp
jle
and
pop
pop
adc
gs
jno
fmul
subb
je
dec
data16
cmpsb
inc
pop
dec
dec
push
call
add
push
cmc
xchg
das
ret
ret
xchg
inc
mov
and
aam
pop
shrl
push
push
xchg
adc
add
inc
push
mov
add
fmulp
push
imul
mov
imul
addr16
mov
xchg
mov
pop
cmp
jo
dec
ficomps
andb
pop
enter
insl
add
adc
out
out
jmp
ds
int
or
popa
imul
pop
imul
xchg
inc
mov
xchg
loopne
dec
mov
jb
mov
movsl
inc
rorl
sbb
push
dec
ljmp
push
filds
and
out
pop
lds
dec
jle
les
mov
jecxz
andl
cmp
stos
mov
mov
enter
mov
insb
cld
popa
notb
sbb
xor
pop
in
mov
fildll
arpl
daa
std
cltd
mov
jae
das
bound
pop
xor
repnz
movsl
sub
xchg
push
xchg
jmp
add
xlat
adc
adc
testb
dec
loope
lods
sub
dec
mov
sahf
pushf
or
jns
push
and
jns
aas
add
ret
notb
mov
xchg
sbb
or
jg
xchg
js
dec
fldt
jae
jne,pn
xchg
insl
push
shrb
fsts
adc
lods
inc
aad
lods
add
jne
mov
and
adcl
cmpsl
insb
jae
push
lcall
inc
loop
or
jmp
dec
mov
sub
sbb
and
dec
lds
push
in
adc
mov
rcr
lcall
loope
mov
imulb
xor
sbb
jp
out
xlat
mov
ja
mov
sub
push
push
jb
int
add
cmp
cmp
adc
fld
test
jl
nop
jo
out
push
loopne
xchg
add
shlb
insl
pop
mov
inc
aad
cmp
jmp
popa
mov
dec
in
mov
ficompl
inc
mov
push
or
inc
subl
xor
pop
sub
popf
es
push
jae
mov
movsb
push
cmc
inc
lea
iret
sub
inc
dec
jmp
mov
lret
mov
pop
popa
or
push
shl
sub
sbb
paddq
cmpsl
cli
mov
dec
dec
push
push
sub
repz
sbb
mov
pop
or
or
add
adc
insb
imul
add
outsl
xchg
jg
or
fs
das
mov
cmp
das
into
pop
pop
dec
sub
pop
or
nop
lods
loope
push
out
fildll
adc
cmp
mov
mov
mov
ret
cmc
addr16
into
cmp
ret
cwtl
fwait
push
and
pop
lcall
jns
cwtl
push
std
sbb
das
dec
mov
lcall
adc
add
stos
mov
lock
stos
pop
lock
insb
xor
xorl
jns
mov
xchg
in
es
into
push
xor
pop
test
aam
push
sbb
mov
xchg
call
prefetch
or
lock
ja
ljmp
out
mov
cmp
mov
je
sbb
sbb
cld
cmp
and
std
push
loopne
addl
cmp
aas
adc
sbb
mov
loopne
in
push
push
loope
insb
icebp
cmpsl
cmp
or
mov
push
mov
jb
dec
jns
jns
fdivrl
xor
test
add
subb
lret
xchg
int3
xchg
shll
enter
sub
xorl
push
ljmp
cwtl
mov
je
clc
icebp
xor
ret
je
sbb
andb
fdivp
or
jle
cmp
ret
out
scas
fsubrs
jbe
and
push
imul
lcall
into
mov
pop
push
xchg
sar
add
and
cli
aam
inc
addl
add
sti
clc
inc
xor
ja
sbb
and
adc
adc
das
adc
out
into
cmp
xor
outsl
cltd
mov
imul
adc
shr
nop
add
pop
out
and
fnstsw
jb
ds
pop
mov
data16
lcall
push
je
jae
iret
in
jb
mov
aad
mov
mov
pop
pop
ss
mov
sbb
cmp
mov
mov
in
mov
jns
movsb
js
jmp
js
jg
ljmp
stc
mov
inc
mov
into
mov
cwtl
push
pop
testb
mov
jbe
inc
in
scas
insl
fistps
dec
stc
inc
xchg
inc
jno
adc
mov
xchg
mov
jle
outsl
loopne
push
popf
push
imul
mov
mov
xchg
aam
das
lock
mov
outsb
jmp
pop
cmp
push
add
outsl
mov
sub
push
xchg
iret
sbb
mov
sbb
call
adc
push
mov
stc
js
mov
xchg
shlb
jg
xchg
pusha
add
pushf
lret
and
aaa
leave
inc
pop
mov
pop
adc
ret
in
mov
cmc
xor
and
xchg
sbb
mov
xchg
lcall
mov
mov
push
outsl
out
outsb
cmp
add
cmp
fmuls
loopne
push
lret
push
xchg
nop
add
and
jg
adc
sar
sbb
in
shll
in
iret
lods
cmpsb
and
rcll
cmp
cli
adc
and
outsb
addr16
xchg
push
lret
outsb
push
dec
call
outsl
push
mov
loope
dec
pushf
mov
iret
mov
or
dec
sti
int3
cs
cmc
push
push
movsl
sarb
sbb
dec
rclb
cwtl
arpl
pop
jbe
js
fwait
js
imul
add
mov
stos
sub
mov
scas
stos
pop
mov
in
cmp
outsb
out
push
jb
mov
xor
mov
dec
in
ss
loope
push
dec
push
or
adcb
push
test
dec
stos
or
xor
sub
jmp
inc
adc
fistps
mov
es
sub
push
clc
jb
inc
jl
mov
cwtl
loopne
mov
xor
pop
jl
dec
sub
push
cmp
cmp
push
lret
add
xchg
outsb
std
xor
divb
push
div
ret
push
cmp
jo
lock
sbb
xorl
mov
sbb
lock
imul
lds
ss
xchg
jae
lahf
add
xlat
xchg
push
pusha
int3
das
out
xor
shl
ja
loopne
xchg
es
and
enter
out
out
fistpll
lret
rcrb
or
sub
outsb
push
adc
imul
mov
fsts
lret
stos
mov
dec
test
lahf
push
int3
cwtl
scas
jp
sub
mov
sbb
sbb
inc
add
test
xor
xchg
dec
sub
jo
sub
shl
cmp
sbb
mov
into
jp
sub
mov
call
mov
nop
pop
stos
pop
mov
js
lods
mov
xlat
repnz
pop
in
loopne
incb
xor
sbb
pop
inc
jge
inc
loope
outsl
and
adc
inc
push
gs
push
xchg
dec
out
push
mov
push
mov
cmp
xchg
mov
call
sub
insl
dec
and
cltd
xor
push
mov
daa
jo
iret
es
pop
and
cwtl
inc
or
je
vaddsubps
or
hlt
popf
out
cmp
mov
sub
cli
jmp
lea
and
adc
insb
lods
dec
or
fisttpll
mov
shrb
fsts
cwtl
loopne
jl
lret
loope
fisttpl
sarl
and
mov
sub
call
cwtl
arpl
or
jno
xor
popa
mov
sub
jne
nop
sub
lcall
mov
or
fcmovnu
mov
cmp
cmp
gs
js
xchg
aad
loope
fdivrs
cmc
xchg
push
stos
lods
add
xchg
out
ljmp
fcompl
sarl
ret
call
inc
mov
dec
inc
sub
and
lret
xchg
repnz
hlt
xor
sbb
repnz
pop
out
jg
push
sbb
push
cmpsb
adc
adc
xchg
addb
aam
or
es
push
inc
nop
xor
aam
jnp
andb
inc
mov
mov
popa
add
adc
sti
repz
xchg
xor
lahf
pop
jbe
sbb
mov
aaa
xor
cmpsb
mov
test
cmpsb
jp
mov
in
lea
inc
mov
jp
xorb
add
and
sub
cmp
jnp
mov
push
fcmovb
loopne
push
sub
into
test
cwtl
in
stos
pop
mov
out
push
pop
jnp
insl
pop
jge
cmp
xchg
test
faddl
movaps
lret
mov
dec
mov
jne
xchg
std
push
jecxz
xor
fidivl
adc
xor
lods
nop
xchg
aas
sub
iret
fcoml
lret
mov
ret
scas
imul
js
adc
mov
addr16
imul
enter
push
addr16
popf
repnz
inc
jmp
fidivrs
sub
test
xor
fsubl
movsb
mov
xchg
xchg
pop
fsubs
inc
frstor
mov
push
mov
in
in
inc
jle
xchg
mov
mov
or
lret
pop
inc
push
stc
popf
pusha
nop
jle
or
shr
xor
mov
fwait
idivl
jmp
pop
int
cmp
add
and
push
nop
pop
out
lds
adc
and
xchg
les
in
mov
outsb
xorb
mov
cmpsb
mov
sbb
add
mov
out
push
movsb
lcall
cmp
sub
call
pop
arpl
pop
push
dec
test
pop
loop,pn
push
ja
movsl
fistl
call
insl
push
xchg
or
add
pusha
mov
xchg
mov
into
mov
xchg
iret
and
insl
or
cmp
xchg
sbb
mov
data16
rcll
push
push
fimull
inc
inc
pop
sub
and
adc
and
ret
dec
call
aas
int
daa
cmp
inc
ljmp
fwait
or
mov
je
scas
mov
shr
mov
stc
imul
jno
sti
adc
ror
cld
lds
test
mov
jno
scas
fadds
addr16
mov
mov
rcrl
and
push
adc
xchg
bound
xchg
sbb
cmpsb
push
js
outsb
jl
lret
jp
inc
adc
adc
mov
shll
mov
jo
pop
dec
dec
ffreep
sbb
fmuls
ljmp
pop
rorl
jbe
or
xor
xor
shlb
mov
sub
inc
or
lahf
hlt
loopne
adc
xchg
mov
sbb
lahf
movsl
jo
inc
imul
icebp
shl
cmp
cmp
mov
ds
inc
test
or
out
cmp
jne
cmpsl
jl
movsb
imul
fcmove
add
xor
push
popf
cmpsl
pop
adc
das
notl
xor
addr16
push
fdivrp
xchg
xchg
xor
ja
in
arpl
ss
jmp
sbb
sbb
repz
ja
cmpsb
cmp
std
jp
push
lds
mov
sub
nop
pop
outsb
dec
dec
sub
andl
mov
sub
xor
push
out
stc
popa
dec
call
xor
inc
or
in
xchg
adc
mov
aam
adc
adc
inc
mov
and
or
repnz
sub
subb
mov
adc
xchg
scas
or
fs
push
jl
and
repz
js
popaw
cld
inc
or
rcrl
push
mov
sub
add
inc
das
ret
movsl
loope
das
adc
iret
push
iret
push
jnp
mov
aam
aaa
es
loopne
cs
xlat
test
cld
pop
aam
iret
jecxz
adc
fld
cmp
add
add
dec
dec
cli
sub
repz
mov
data16
jb
orl
sti
jb
xchg
test
pop
add
lahf
inc
nop
cmpb
repz
lret
cltd
add
xchg
mov
in
pop
add
or
xor
mov
jne
push
aam
and
sbb
inc
pusha
gs
jecxz
jno
jnp
ds
clc
inc
sti
mov
sub
sub
xchg
scas
ret
xchg
jl
mov
pop
fmul
mov
push
adc
nop
sub
jnp
jae
mov
mov
cmpsl
jns
mov
mov
test
les
pusha
addr16
pop
xor
fcoms
adc
xchg
lods
out
xlat
cwtl
testl
and
ror
jmp
inc
lock
out
mov
das
ret
dec
jmp
sbb
dec
popa
add
xchg
adc
jb
dec
or
shll
dec
inc
dec
inc
inc
clc
int3
shlb
sbb
cmp
cmc
push
in
scas
xor
inc
mov
mov
mov
or
lock
stc
or
adc
lods
mov
jnp
pop
sbb
gs
push
inc
icebp
mov
push
adc
fstpt
out
push
push
sti
mov
cmp
cmpl
and
and
xchg
sahf
adc
mov
mov
add
fdiv
jb
fs
je
sbb
xor
add
adc
mov
leave
mov
add
fcoms
sub
pop
add
inc
lcall
inc
xor
data16
test
mov
pusha
or
mov
into
jle
shrl
inc
adc
xor
cmc
and
mov
addr16
mov
push
negb
dec
sarl
sub
xchg
data16
leave
mov
outsb
or
dec
and
sub
int3
jbe
ds
call
test
jle
jp
aas
shrl
sub
inc
xchg
mov
inc
dec
ret
sbb
lahf
aad
cmp
jge
sub
and
cmp
sbb
mov
aad
hlt
adc
or
nop
mov
pop
cmp
loope
cmp
sub
pop
test
clc
test
test
lret
xchg
jbe
cmp
push
or
jbe
dec
mov
pop
addl
cmc
xor
subl
lods
or
cmp
sti
or
push
cmp
movb
mov
mov
sub
imul
arpl
dec
daa
jp
mov
in
and
dec
push
clc
int
lods
xchg
aaa
pop
les
test
hlt
loop
inc
mov
xchg
and
int3
lcall
scas
inc
push
push
cs
sarb
add
aam
jae
lods
sub
xor
inc
push
mov
jmp
xchg
add
push
xor
xor
cli
xchg
xchg
mov
xchg
or
das
mov
nop
xor
xor
rol
xor
cmpl
mov
mov
lret
mov
testl
cmc
hlt
mov
mov
pop
sub
xchg
xor
dec
jns
jge
inc
push
add
addr16
mov
mov
cmc
daa
mov
mov
jo
pop
sbb
ret
push
pop
add
fldl
mov
ja
xlat
fisubrs
add
adc
dec
jg
repnz
xchg
inc
sbb
dec
ret
adc
mov
mov
call
mov
cmp
insl
aad
inc
lea
xchg
and
mov
lods
aam
push
jne
lds
jmp
xor
insb
int
pop
std
xchg
pop
jle
inc
xchg
notb
ljmp
pop
vcvtsi2sd
jle
lods
fistps
fcmovnb
xchg
sbb
leave
sbb
stos
in
jb
dec
adc
cmpsl
jecxz
scas
in
jno
shl
mov
push
outsl
or
mov
pop
jmp
adc
ljmp
cli
cmpsb
jb
nop
adc
add
pop
sub
mov
pop
paddb
insl
mov
test
fs
cmp
das
mov
push
imul
push
xchg
int
testl
adc
push
lock
mov
and
rorl
push
jnp
mov
cmpl
aaa
jecxz
out
dec
mov
inc
loopne
repz
js
popf
arpl
out
bnd
jbe
mov
stc
rorb
and
or
cmpb
cmpsl
jns
clc
out
push
cld
dec
cmpb
mov
sub
ja
xchg
inc
dec
iret
ds
sub
loopne
xor
out
sub
inc
les
scas
sbb
or
push
rcll
out
cwtl
pop
lods
sub
in
mov
mov
call
xor
sahf
inc
inc
sbb
in
adc
xchg
jecxz
adc
xor
mov
lea
and
push
and
fs
test
aas
lcall
mov
nop
add
xchg
inc
cmp
jle
push
in
enter
outsb
ss
adc
inc
cld
addr16
push
lods
outsb
enter
out
cmp
jne
mov
stos
jbe
push
popa
popa
sti
adc
fcmovne
mov
mov
outsb
cltd
push
adc
enter
sbb
int3
adc
xchg
cld
xchg
jp
cmp
nop
shll
gs
mov
or
mov
mov
dec
cmp
insl
ja
leave
mov
in
outsl
das
pop
pop
jnp
pop
div
out
jp
rclb
mul
jne
lea
sbb
addr16
xchg
dec
and
push
lods
std
mov
push
or
daa
out
rorb
shrl
cltd
orb
dec
push
xchg
or
jmp
push
adc
out
add
lahf
shll
inc
xchg
pusha
sbb
ja
sarb
lret
aad
xlat
push
lcall
rclb
cld
push
movsb
cmp
into
cltd
push
add
cs
mov
ss
pop
pop
inc
lds
pop
push
lea
jl
pushf
rol
sub
adc
xchg
xchg
ds
pop
imull
loopne
negl
mov
int
add
adc
xchg
loopne
mov
add
in
jae
sahf
mov
cmp
ficomps
ret
and
data16
bound
aad
mov
popf
sub
test
pop
xlat
aas
mov
div
pop
daa
ds
xchg
cmp
jbe
mov
mov
jge
pop
dec
pop
scas
push
rcr
stc
in
inc
push
xchg
jae
lock
inc
mov
cmp
inc
ja
add
jp
dec
fdivrs
mov
mov
inc
push
xchg
aaa
imul
pop
jp
mov
xchg
int
mov
mov
repnz
cmp
cmpsl
cltd
xorb
mov
xor
push
sbb
outsb
cmp
and
scas
adc
movsb
jl
sahf
push
faddl
adcb
lds
mov
dec
sub
inc
jo
leave
cli
data16
sbb
movsl
mov
mov
aad
mov
mov
cmp
out
lods
out
bound
std
or
popf
nop
ss
xchg
rcll
mov
and
xor
push
mov
pop
imul
les
jge
loopne
loopne
mov
andb
or
cmp
push
or
je
xor
cwtl
es
ret
jmp
lea
mov
xchg
clc
out
xchg
popf
or
stc
addr16
movd
xchg
sub
loopne
or
notb
sub
rcll
stos
cwtl
js
sub
cmp
mov
dec
aad
mov
mov
sbb
mov
adc
imul
cli
xchg
sub
and
mov
xchg
popa
and
por
outsb
jae
cmp
insl
pop
xor
sub
imul
dec
fstps
lods
rep
sarb
addb
adc
xor
popa
cwtl
xor
lods
jae
call
mov
ja
jne
scas
pop
mov
cmp
ret
pop
pushf
push
movsl
aaa
xchg
xor
xchg
fisubrs
leave
inc
shrl
aas
lea
popa
mov
xchg
je
test
dec
subl
rcrl
aaa
push
adc
iret
push
cmp
mov
dec
mov
ret
outsl
call
jno
rolb
fwait
xchg
ret
andb
ja
xchg
iret
cmpsb
shl
mov
popa
ja
lahf
jmp
and
les
cli
jbe
inc
pop
insl
fiadds
xor
mov
repnz
test
inc
mov
outsl
sbb
mov
outsl
pop
les
sub
sbb
arpl
mov
fwait
ds
xchg
cmp
imul
insb
mov
and
jbe
ljmp
rorb
pop
cmp
and
lret
jns
popf
test
dec
or
call
hlt
das
pop
in
sbb
mov
jecxz
pop
add
push
mov
or
hlt
push
push
cmp
push
add
ficoml
sub
jae
dec
fstpt
fucomi
rolb
add
fs
sbb
add
int
sub
xchg
mov
xchg
add
jnp
mov
inc
imull
xor
jge
sbb
xchg
mov
push
fimuls
and
int
xchg
xor
out
inc
fucomp
dec
pop
loopne
add
mov
out
enter
cmp
inc
xor
stc
xor
sub
lds
inc
dec
stc
leave
subl
or
faddl
cmc
arpl
xchg
jo
pop
sub
inc
pushf
pop
cld
adc
add
cmp
hlt
loopne
ljmp
pop
outsb
shll
pop
jecxz
dec
je
add
adc
mov
pop
add
popa
jp
dec
cwtl
pop
loop
cltd
mov
cmp
fucomip
es
mov
xchg
aaa
test
test
mov
jle
or
mulb
scas
int
mov
jno
push
adc
jecxz
inc
push
and
insl
jb
fwait
xor
cmp
movsb
and
data16
sbb
pop
sahf
push
mov
inc
mov
add
andl
jnp
dec
push
adc
jo
dec
stos
jae
mov
lahf
jo
rolb
inc
lahf
outsb
xlat
loope
cmp
scas
sarl
mov
lods
iret
mov
adc
aas
js
dec
es
mov
dec
jle
push
push
pop
int3
out
stc
xor
xchg
mov
out
mov
repnz
cli
ret
arpl
push
iret
stc
lret
xchg
jle
popa
and
arpl
mov
out
mov
inc
jns
inc
mov
adcb
icebp
xchg
repnz
xchg
push
xchg
xor
bound
push
cltd
clc
cmp
mov
push
out
sub
cmpb
sbb
cmp
pop
stos
jecxz
fsts
rclb
mov
push
mov
out
dec
cwtl
nop
fcoml
mov
sbb
ljmp
stos
addr16
add
subb
jno
out
dec
fisubs
rolb
jp
es
push
int
sbb
out
test
cmp
pop
fsub
sbb
sbbl
or
cltd
hlt
sar
or
lea
or
in
ret
xchg
lods
andb
or
sub
mov
pop
xor
add
setl
movsl
lock
pushf
xor
push
mov
adc
aaa
jb
fnstcw
mov
pop
lcall
xchg
movsb
pop
or
xchg
loope
inc
xchg
xor
fidivrl
sub
mov
lret
xchg
stc
loop
jecxz
inc
imul
arpl
aad
pop
push
sub
mov
scas
subl
dec
jo
push
in
lea
cmp
cmp
andl
dec
sbb
sahf
or
lock
subl
ficomps
mov
hlt
or
cld
out
or
stos
add
lods
out
xor
mov
test
jno
cltd
pop
repz
movsl
int3
imul
and
ss
ret
mov
pop
sti
movsb
push
shlb
out
and
into
sub
xchg
sbb
cld
jp
movsl
repz
out
notb
push
mov
aas
mov
adc
test
lcall
std
lods
jecxz
lock
enter
pop
xchg
sbb
and
pop
mov
xor
xor
loopne
and
lock
jecxz
push
mov
cmc
je
dec
push
mov
mov
cmp
or
push
xlat
sub
push
std
inc
push
xor
mov
les
ss
lret
adc
push
ds
mov
repnz
sahf
jbe
jp
pop
ds
sti
or
cmc
je
mov
sti
hlt
enter
ds
aas
lahf
pop
loopne
mov
in
popf
dec
mov
sahf
test
dec
jns
jg
add
outsb
cs
sub
jno
loopne
pop
xchg
cmp
mov
lcall
mov
jae
xor
mov
sub
movsl
lret
push
imul
adcb
stos
rcr
xchg
and
cmp
mov
push
movsb
jl
mov
mov
in
rcll
cli
loop
int
cpuid
pop
hlt
pop
xor
inc
in
lret
mulb
data16
mov
ret
out
and
andb
int
fcoml
lcall
mov
int
mov
lock
sbb
out
ss
ds
add
jne
pop
cmp
fdivrs
aad
sbb
mov
mov
into
jns
adc
or
lods
out
mov
in
stos
mov
adcl
add
mov
shll
and
addr16
xor
xchg
cli
jb
and
adc
mov
iret
je
insb
pop
dec
fidivrl
push
jg
mov
imul
mov
ret
fwait
cmc
pop
enter
scas
mov
aad
xor
mov
ret
out
insl
dec
mov
jl
cmp
popa
cmpsl
bound
cmp
out
push
push
push
int
mov
ret
pop
ret
lea
mov
jge
sbb
lods
cltd
mov
add
jne
cmp
pop
cmc
out
js
inc
lcall
mov
jge
cmpsl
lahf
dec
int
adcb
sbb
ret
or
ja
pushf
call
maxps
lods
mov
shll
out
jne
pop
add
sub
inc
popa
scas
stc
xchg
and
jg
push
pop
rorl
stos
outsl
add
add
pushl
cmp
cbtw
in
lea
mov
jg
adc
cmp
fcomp
std
sbb
and
push
push
arpl
xor
xlat
inc
ss
inc
dec
inc
mov
push
lods
shll
jecxz
cmp
pop
mov
mov
loop
and
inc
rorb
mov
mov
mov
cwtl
jns
std
inc
daa
mov
adc
popa
or
xor
nop
data16
loop
mov
jne
sub
aad
lock
inc
in
jne
push
fs
shrl
adc
xor
and
and
jp
inc
fmull
lea
pop
pop
mov
scas
xchg
mov
push
int
mov
xor
push
and
shlb
sbb
lods
inc
xchg
xor
cmp
push
in
mov
xor
inc
pop
mov
mov
fnstcw
add
inc
fmuls
int3
icebp
sub
cmp
jnp
ret
dec
adc
test
in
std
sbb
insb
add
inc
add
pushf
dec
ficomps
sub
adc
arpl
cltd
std
and
xor
mov
jno
mov
int
clc
in
bound
jae
adc
jl
lret
mov
in
movsb
call
imul
pop
mov
icebp
jmp
xorl
xchg
adc
pop
mov
lods
lock
mov
mov
xor
fnstenv
cmp
popa
scas
mov
pop
lret
xchg
adc
inc
mov
ret
out
lret
fxtract
test
int3
int
adc
xchg
imul
ret
lods
scas
cld
mov
dec
cmp
mov
mov
inc
cmc
ret
test
jns
cmp
stos
xor
push
out
mov
jno
pop
or
adc
es
push
lods
fcmovu
out
rorl
ret
daa
repnz
sbbb
cmp
clc
int
sahf
fbstp
out
test
shll
xor
mov
incl
test
push
inc
cmpsl
jecxz
int3
pop
adc
push
xchg
xor
push
loopne
mov
out
mov
inc
xchg
jne
jge,pt
pop
outsl
push
cmpsl
data16
iret
adc
xchg
shl
sahf
push
mov
jmp
inc
imul
and
stos
pop
js
scas
xorl
cs
repnz
popf
or
inc
push
pushf
mov
cmp
jp
shrl
jge
mov
mov
jno
push
sub
push
mov
push
mov
clc
js
push
adc
ficomps
testb
insl
mov
mov
sbb
and
add
fcom
pop
mov
cmp
sti
adc
dec
jne
mov
fbld
push
inc
and
imul
sub
ds
or
inc
sub
xchg
mov
xchg
out
cmp
out
jae
push
outsl
rcrb
sahf
sub
rolb
add
int3
push
cmp
fwait
lock
test
mov
fwait
mov
xor
or
mov
daa
xorl
outsb
movsb
push
jp
int
cmp
xor
xor
test
inc
mov
ss
out
aad
imul
stos
cmc
mov
xchg
add
jno
jmp
and
cmp
aas
in
inc
mov
jnp
adc
pop
mov
repz
xor
mov
cli
movsb
loopne
add
stos
loope
push
cld
inc
xchg
add
stc
xor
cmp
jge
xchg
bnd
data16
mov
aad
fistps
jnp
or
dec
dec
inc
dec
cmp
hlt
jle
push
mov
pop
sub
adc
pop
fstpl
jae
repnz
clc
inc
shll
mov
aad
daa
push
add
add
push
dec
clc
inc
aam
je
loope
test
shl
popa
mov
cmp
jnp
sbb
fnstsw
iret
arpl
or
xchg
addb
subb
scas
cwtl
dec
loopne
mov
pop
movsb
xor
mov
repnz
mov
cmp
stos
sbb
sti
xor
adc
mov
fldenv
inc
or
mov
push
or
dec
dec
daa
aaa
movsl
stos
divb
mov
stos
or
lret
insl
lds
lcall
sbb
mov
jno
xor
mov
mov
jno
in
repnz
scas
mov
xchg
cld
int
mov
push
inc
mov
xchg
fisubs
test
ja
mov
add
mov
xor
push
dec
add
fists
in
cmpsl
loop
in
loope
adc
dec
mov
test
dec
in
fiaddl
daa
mov
xor
push
dec
cmp
cmp
cmp
pop
out
repz
out
jle
sbb
stc
inc
sub
xor
and
gs
mov
xor
loope
ljmp
lret
inc
in
stc
cmpsl
or
test
xorl
movsl
leave
mov
sub
lods
daa
dec
lret
xor
out
sub
fildll
pusha
inc
push
bound
aad
lahf
sahf
cwtl
mov
pusha
stc
repnz
push
das
push
aaa
push
call
rcrl
jne
das
jbe
mov
fidivrl
sub
mov
pop
roll
fidivl
lods
aad
mov
sub
push
in
clc
js
int3
arpl
test
inc
or
inc
lret
imul
arpl
lods
pop
push
fcomp
mov
cs
or
inc
fwait
dec
sbb
pushf
ficomps
mov
mov
dec
push
test
popf
pop
icebp
stos
pop
scas
push
mov
bound
mov
test
inc
fbld
jl
repz
jns
sahf
pop
andb
fidivs
fs
mulb
cli
sti
sub
xor
pop
adc
or
and
jmp
xchg
in
mov
inc
cmpsb
mov
xorl
mov
ret
pop
pop
les
push
loopne
loop
out
daa
xchg
cld
pop
es
in
scas
xor
rclb
shrl
mov
mov
cmpsl
in
push
insl
jle
loop
outsb
loopne
mov
push
xor
mov
and
xchg
push
data16
or
call
push
xchg
movntq
rcrb
dec
dec
add
push
push
mov
ss
ljmp
mov
pop
mov
add
mov
pusha
and
cmc
test
loope
cmp
data16
and
and
cld
sbb
add
pop
dec
and
hlt
insb
xor
inc
xor
mov
clc
or
out
jbe
jnp
xchg
xchg
ss
setb
xor
jl
cmp
xor
popa
xor
add
jno
pop
mov
dec
pop
jo
das
mov
sub
and
cwtl
movd
push
add
movsb
mov
inc
jp
sbb
xchg
xchg
ja
cs
push
ds
xchg
mov
subb
cmp
fcmovnbe
push
push
aas
rcrl
lret
inc
xor
jno
jle
sub
mov
cmc
pushf
and
test
push
pop
orl
icebp
scas
js
enter
and
mov
sbb
cs
inc
push
xor
and
dec
cmp
icebp
jnp
sub
aaa
xchg
pop
push
pop
mov
adc
cwtl
xchg
adc
xchg
das
je
or
pop
push
mov
inc
nop
and
rclb
ds
dec
xchg
mov
jb
mov
cmc
aas
and
cmpb
adc
add
sbb
jns
filds
int3
ljmp
repz
mov
in
jl
mov
imul
sbb
sbbl
loope
shlb
add
pop
sar
aad
pop
and
jno
mov
cmp
inc
jg
popa
ret
dec
out
push
or
arpl
movsb
inc
jl
jno
adc
inc
sti
out
data16
xchg
xor
dec
mov
aam
adc
pop
stos
pop
pop
add
and
clc
repz
mov
mov
push
cltd
popf
and
adc
cltd
jnp
out
int
notb
sub
clc
push
inc
sbb
mov
and
pop
ds
dec
stos
xchg
jecxz
popa
cli
xchg
and
mov
aaa
jp
adc
shlb
sub
inc
cltd
das
leave
ds
jecxz
in
and
sub
jmp
es
jp
cmpsb
scas
in
rcr
es
jge
scas
xchg
cltd
inc
shl
sub
aaa
mov
out
push
data16
dec
sbb
jne
out
lock
jmp
dec
mov
in
cld
add
cmpsl
mov
pop
jg
fiadds
fwait
js
call
fwait
pop
xchg
inc
inc
adc
push
test
mov
adc
out
or
lock
and
loope
aaa
repnz
aas
mov
bound
pop
aam
cmpsb
arpl
gs
sbb
dec
jnp
push
jo
push
std
mov
mov
xor
icebp
fcomps
push
sarl
lret
cmp
mov
add
push
jg
in
cli
adc
cwtl
mov
or
sbb
ret
loopne
push
imul
jb
or
mov
or
inc
iret
js
nop
call
jp
inc
inc
jp
ja
mov
jb
inc
je
test
add
push
pushf
scas
aad
xchg
inc
in
fistl
dec
sub
xchg
or
repnz
roll
dec
insl
movsb
cmp
mov
sbb
daa
inc
xor
add
inc
and
xchg
or
sub
adc
idivb
push
cmp
mov
mov
pushf
adc
mov
mov
imul
and
xchg
add
fildl
imul
fldenv
push
dec
mov
push
jo
clc
cli
jl
ficoms
and
hlt
jbe
fisttpl
ret
adc
vpsubd
sub
jle
xchg
xor
cmc
jno
movsl
mov
add
andl
ljmp
inc
rcrl
aam
shl
gs
mov
fbstp
xchg
xlat
aad
xchg
xlat
xchg
lret
pop
dec
pop
add
mov
pusha
out
nop
mov
loope
sub
daa
addr16
xor
scas
mov
daa
or
sahf
enter
cltd
js
shlb
clc
std
insb
jecxz
mov
and
ror
inc
inc
movsl
push
call
xchg
call
sbb
xor
notl
imul
dec
add
mov
and
mov
ss
in
fnstcw
dec
or
addr16
cli
adcl
pop
pop
mov
push
les
pop
mov
data16
push
mov
xchg
or
xor
jle
test
xchg
or
xchg
outsl
and
movsl
push
xor
mov
jecxz
loopne
shrb
enter
gs
jg
xor
mov
scas
jg
cltd
cmp
and
negb
dec
scas
jo
push
add
mov
cmp
sbb
lcall
mov
mov
flds
and
push
jo
jb
out
sub
mov
test
dec
push
sub
and
jecxz
jnp
sbb
adc
dec
icebp
cltd
jno
add
movsb
stos
lahf
stos
push
fcoms
mov
orl
pop
fnstenv
int3
mov
stc
imul
jge
aad
push
out
jns
adcb
int3
jno
in
in
cmp
pushf
sti
mov
aas
mov
mov
iret
insl
xor
cmp
sub
push
xchg
cmp
jno
cltd
cld
pop
sub
data16
mov
inc
cmp
jnp
pop
fcomip
and
mov
xor
pop
xchg
icebp
aas
sbb
xchg
test
je
xor
push
or
fs
cmpl
pop
int3
fisubs
es
add
decb
out
mov
stc
scas
dec
aas
mov
imul
cmpsl
movsl
jg
stos
jmp
sub
sbb
stos
mov
push
cmp
out
leave
jnp
out
fdivrl
in
test
xchg
push
push
sbb
cmp
dec
jno
or
shrb
and
mov
cmp
repz
lods
aam
xor
jno
lea
mov
movsb
push
mov
fwait
aaa
movsl
fiadds
les
mov
sbb
add
pop
testb
lods
xor
add
jecxz
jnp
inc
jae
mov
and
pop
jecxz
cwtl
outsb
imul
addb
add
xchg
mov
mov
in
test
rorl
inc
inc
sbb
push
mov
xchg
cwtl
push
mov
mov
pand
ficompl
mov
iret
ljmp
inc
mov
or
pop
ss
jnp
std
inc
mov
sub
push
aam
push
aas
push
ret
insb
sarl
sbb
xor
xor
push
lea
pushf
inc
fucomi
dec
sub
sub
or
je
jecxz
mov
fcompl
add
mov
push
js
mov
mov
dec
dec
pop
stc
notb
dec
scas
dec
lcall
pop
adc
loope
push
mov
xor
pushf
adc
call
cmpsl
fimuls
dec
cmp
fistl
fsubs
stos
and
and
mov
pop
cmpsl
mov
pop
inc
out
ljmp
add
cmpsb
cmp
movsl
jnp
lea
sub
xor
inc
mov
and
movsl
or
xor
cmp
add
les
sti
fldcw
and
jecxz
hlt
lock
movsb
out
std
in
movsl
adc
in
xorl
mov
dec
out
shll
pop
shlb
inc
mov
cmp
dec
fbld
inc
mov
ss
push
and
lock
cmpsl
into
sub
mov
test
add
fwait
js
hlt
dec
adc
cmp
xor
push
and
loopne
imul
popa
jp
pop
stos
es
push
lock
lret
pop
xor
xchg
lea
sbb
mov
mov
loop
mov
adc
inc
adc
jmp
inc
sahf
andb
psubd
inc
jp
mov
lea
rep
cli
push
mov
pushf
or
int
cmpsl
sbb
add
add
dec
mov
lds
mov
add
jle
outsl
int3
cmp
call
xchg
pop
outsb
xor
div
out
dec
daa
fdivrs
dec
cwtl
dec
sub
lods
inc
cmpsl
lods
xchg
les
dec
push
insb
shrb
jns
test
inc
fisttps
xor
shll
or
ret
pop
jns
int
adc
stos
pop
mov
jle
pop
hlt
adc
push
popf
push
adc
push
inc
sub
xor
orl
inc
inc
stos
and
aam
mov
rol
ret
adc
xchg
cmp
scas
dec
pop
jecxz
add
mov
addr16
add
adc
cmp
in
jp
xchg
xchg
jmp
and
scas
arpl
xchg
scas
push
in
xor
mov
mov
and
inc
movsb
and
push
cmp
cmp
mov
pop
xchg
les
pop
xor
fnclex
ljmp
addr16
jns
dec
fmull
das
lods
push
stc
lahf
movsb
mov
mov
shll
cmpsb
xlat
hlt
mov
jle
or
pushf
pop
add
ja
rclb
aam
or
imul
pop
mov
out
mov
inc
lret
jo
push
in
in
fisubrl
adcl
mov
or
push
sti
or
jg
jno
fdivrs
std
in
subb
jp
negb
jle
add
dec
xchg
test
add
gs
inc
xchg
sub
shl
fisttps
jl
pop
mov
aaa
jge
or
lret
stc
xor
sub
xchg
mov
xchg
ret
push
enter
add
ficomps
pop
add
cltd
adc
shrb
jg
test
lds
jmp
shlb
cmp
pushl
and
rorb
dec
ljmp
and
dec
cmp
xor
ljmp
push
cmpsb
push
loop
dec
lds
push
roll
mov
mov
lret
nop
aad
movsl
sub
sub
clc
or
call
sub
movsl
and
xor
popa
aaa
pop
bound
cmp
mov
gs
mov
or
adc
pop
push
push
cltd
shrb
pop
pop
xor
fwait
mov
inc
dec
loopne
lahf
pop
clc
test
in
clc
adc
mov
cs
stc
lods
in
clc
add
mov
pop
inc
mov
xchg
aam
cs
fs
daa
pusha
lods
jle
outsl
cmpsl
lcall
rorl
sarl
push
int3
mov
inc
jns
ds
jae
adc
in
jmp
sbb
or
ret
lea
jb
and
inc
dec
push
icebp
mov
pop
sub
stos
push
stos
in
cmc
and
lcall
cmp
or
xor
lcall
sti
mov
sub
push
aad
push
mov
lds
cmp
cmp
enter
push
sub
xor
mov
mov
jae
out
std
adc
jne
outsb
aas
inc
inc
pop
js
add
inc
xchg
mov
ja
iret
mov
push
fidivs
fldl
mov
dec
in
aad
xor
outsb
sbb
fucomp
inc
cmp
dec
cmp
stos
movsl
sahf
stos
dec
loope
pop
rclb
insl
xchg
jo
pop
inc
mov
jmp
scas
call
push
fdivrp
and
stos
jmp
sub
notb
sub
popf
les
ljmp
test
dec
xchg
jp
test
pop
sub
cmp
outsb
push
pop
stc
sub
ret
dec
xlat
mov
push
int
lods
leave
loopne
pop
dec
adc
insl
cld
lds
push
fildll
mov
rcrl
lcall
pop
xchg
cltd
add
call
ss
cmp
adc
pop
add
jbe
xchg
cmc
inc
cmpb
pop
into
and
test
mov
bound
mov
jo
loopne
ficomps
lock
rcll
cmpsb
loop
xlat
mov
mov
jp
data16
cmp
in
mov
popa
mov
and
cmp
sub
jmp
lock
es
cmc
lods
out
xchg
insb
xor
inc
fldt
pushf
jge
aaa
sbb
inc
repz
lea
imul
cmpsl
test
jno
and
fidivs
add
imul
jno
pop
lret
cmp
and
dec
xor
push
mov
jb
push
lret
lods
cmpsb
mov
sub
fidivl
dec
mov
int
xor
and
add
sub
flds
or
pop
cmpsl
test
loop
sub
aaa
fsubl
clc
repz
mov
jno
and
add
sbbw
js
inc
pop
pop
mov
adc
jbe
cmp
int3
out
jmp
arpl
mov
hlt
jne
pop
cmpsb
pusha
ss
mov
jb
fdivp
push
jae
jle
leave
enter
movsl
mov
lds
push
lods
lret
bound
arpl
icebp
insl
arpl
rcrl
or
subb
daa
dec
stos
or
js
gs
inc
ljmp
jl
shlb
push
mov
fs
repnz
xchg
xlat
jne
cmp
dec
lods
push
aas
in
adc
pop
std
hlt
scas
imul
movsb
shlb
push
lret
mov
pop
jmp
aaa
pop
xchg
mov
inc
adc
insl
adc
inc
aam
and
stc
enter
enter
mov
popl
push
jb
push
xor
xchg
jge
mov
push
test
pusha
inc
xchg
sub
push
push
loope
push
pop
mov
ss
jmp
sarl
jo
or
call
jns
or
pop
add
ret
pop
mov
push
xchg
cmp
lahf
mov
push
jle
rorl
ljmp
cmp
aaa
sub
loope
xor
mov
lods
or
leave
and
mov
pushf
fwait
and
flds
mov
and
xchg
dec
insb
push
inc
cmp
into
lods
fists
test
adc
aam
pop
xchg
in
inc
insl
mov
xor
das
sti
jb
repnz
lock
push
loopne
xlat
scas
std
cmp
mov
pushf
cmp
dec
sbb
pop
add
aad
xor
and
mov
cmpsl
pop
jmp
mov
cs
pop
push
dec
nop
xor
es
movsb
dec
sub
jmp
sbb
mov
test
loopne
inc
imul
pop
mov
stos
xchg
mov
lods
imul
ffreep
mov
lea
aad
aam
outsl
push
jae
test
in
cmp
outsl
shl
rclb
in
adc
fldt
js
jae
repnz
xchg
mov
mov
push
xchg
movl
rclb
add
dec
sub
mov
sub
adc
repz
xchg
clc
in
loope
ds
xchg
in
sbb
loop
out
leave
je
out
xor
arpl
adc
mov
imul
ja
movsb
ljmp
test
inc
sbb
test
inc
xchg
fdiv
push
inc
repnz
mov
inc
cmp
rolb
lds
jo
sahf
fcomp
fdivrs
xchg
jecxz
sbb
fiadds
or
cld
shll
pushf
xchg
pop
leave
fstl
cltd
fstpl
test
cwtl
call
jp
sbb
cmp
or
mov
ljmp
cmp
scas
sbb
imul
je
sub
ljmp
dec
cltd
fmull
mov
xor
js
pop
dec
cmp
xchg
mov
push
out
shlb
leave
xchg
mov
sbb
push
div
pop
out
cmp
das
cli
add
xor
rcrb
xor
lret
loope
add
pushl
adc
pusha
scas
push
add
adc
lret
ljmp
mov
stc
popf
xchg
push
sarl
cmpsl
jmp
jp
add
jnp
imul
sti
js
add
in
xor
mov
lcall
int3
add
stos
push
int
xchg
cld
or
jge
mov
rorl
dec
sahf
sub
sub
fildll
pop
outsb
push
mov
daa
out
mov
outsl
orb
sub
push
and
or
inc
dec
sahf
xor
mov
clc
sub
lret
ret
adc
xchg
pop
lock
push
lret
outsl
enter
test
mov
xor
imul
stos
adc
sbb
ss
dec
push
push
lret
repnz
loopne
scas
lock
sbb
cmp
or
jb
mov
sarl
or
icebp
push
inc
and
adc
fldenv
inc
mov
mov
pop
inc
xchg
outsb
iret
dec
jecxz
cmp
cld
mov
jge
xchg
std
xor
je
xor
cmp
and
in
push
jbe
mov
shr
cmp
ja
outsl
pop
push
or
cmpsl
out
rcrb
adc
movsb
add
or
test
adc
pop
es
xchg
stos
mov
or
sahf
enter
xchg
and
ror
and
mov
or
sbb
fbld
jae
outsl
cmp
rorb
arpl
push
xchg
cmp
jb
roll
stc
lods
jae
jo
mov
jnp
dec
das
pop
fmuls
test
out
lods
rol
gs
xchg
outsb
in
cmp
dec
rolb
jns
lods
in
mov
xchg
push
jae
ss
xchg
outsb
scas
or
sbb
sub
dec
stos
xor
insl
jp
repnz
ret
inc
loopne
xchg
cmp
dec
rcpps
scas
inc
adc
dec
jo
or
add
or
insl
mov
inc
fwait
xlat
dec
mov
pop
roll
mov
inc
insl
lea
fisubrl
cmc
jb
push
xchg
sbb
inc
outsb
push
cmp
pop
das
cmp
das
lods
mov
inc
test
addr16
aad
dec
fcmovnu
nop
test
xor
in
mov
hlt
ror
bound
jp
sbb
imul
mov
imul
push
lea
mov
popa
lods
cmp
jae
rcll
adc
rolb
iret
sub
sub
jmp
arpl
pop
xchg
js
pusha
fs
shr
outsl
daa
jbe
sbb
shrl
shr
in
loop
sti
dec
in
jb
cmpsl
daa
mov
adc
mov
xor
shll
mov
js
xchg
out
lret
jmp
lcall
push
mov
pop
jl
aaa
push
sub
lea
cld
movsb
lds
cmp
pcmpeqw
lcall
addr16
mov
inc
nop
mov
push
xor
test
sbb
pop
mov
and
das
aam
mov
jmp
push
add
mov
cmp
mov
or
faddp
mov
lods
repnz
lds
shll
mov
inc
sub
je
xor
pop
sub
sbb
aas
lcall
gs
lret
call
fisttps
and
cld
mov
cmpsl
pop
scas
inc
dec
dec
sub
scas
dec
lahf
lods
pusha
mov
pop
adcb
jmp
adc
lods
push
and
scas
mov
and
iret
pushf
jae
ret
aaa
or
mov
mov
xor
movsl
sbb
push
jmp
jne
mov
out
out
iret
sbb
fdiv
ficoml
inc
xor
out
or
out
cmc
mov
sub
aad
test
xchg
xchg
add
xor
jb
sub
mov
inc
lds
push
add
loope
clc
xchg
aad
push
sbb
movsl
add
data16
cmp
imul
sarb
fidivs
mov
mov
data16
insl
cmp
mov
pop
aas
mov
jp
mov
mov
push
icebp
xor
sbb
pop
incb
mov
add
pop
inc
in
pop
repz
aas
imul
adc
outsl
pop
fldenv
test
test
shlb
insb
dec
cmp
sbb
xchg
jl
jno
add
imul
test
or
out
push
iret
scas
cmp
out
test
dec
icebp
add
aad
sti
pop
xchg
xor
sub
add
inc
sub
andl
insl
adc
or
in
jbe
cs
and
in
jo
push
fsts
push
pusha
data16
outsb
xchg
sub
cmp
and
mov
cmp
jbe
pop
pop
add
cmp
shl
popa
out
imul
sbb
flds
divl
inc
ja
dec
jbe
xor
imul
out
jp
scas
roll
inc
xchg
inc
std
sub
ljmp
mov
mov
jb
negb
sub
out
repnz
add
dec
push
mov
and
bound
call
xchg
cmp
fwait
pop
mov
mov
repnz
ret
nop
push
cmp
mov
aad
aas
jae
mov
xchg
shlb
pop
or
push
movsl
xchg
inc
xchg
shl
mov
fidivrs
cltd
pusha
lret
popf
test
imul
cwtl
push
xor
mov
insl
and
ja
scas
jp
or
xchg
pop
mov
outsl
ja
rsm
arpl
stc
mov
adc
sbb
pop
adcl
shlb
mov
sbb
sub
or
lret
add
and
xor
insl
inc
std
out
and
push
mov
test
aas
or
pop
scas
enter
xchg
stc
and
xor
shrl
popa
out
mov
icebp
cs
and
pushf
dec
mov
sub
popf
mov
rorw
cmp
mov
jmp
jg
or
scas
inc
in
push
mov
cmp
xchg
adc
notb
cli
xchg
xchg
sbb
shll
outsb
lcall
enter
mov
push
ret
imul
cmpsb
gs
add
dec
jne
loop
jge
mov
leave
hlt
and
aad
xor
xchg
jp
test
jmp
sbb
jle
cmp
sub
add
push
sbb
andb
xchg
jne
das
sub
push
movsl
jno
out
cmpsl
xor
xchg
fistpl
push
or
and
xor
ds
pusha
push
pop
adc
outsb
xchg
movsl
jmp
jmp
je
mov
sbbb
jmp
jg
mov
pop
xchg
ds
clc
sbb
push
ljmp
test
aad
insl
push
xlat
mov
and
shll
ret
faddl
sbb
jg
popa
cmp
movsb
mov
mov
ret
and
pop
jmp
and
pop
in
push
cmp
loopne
mov
test
cmpsb
icebp
cmp
jmp
push
mov
icebp
ret
pop
and
in
jnp
pop
gs
in
in
imul
mov
in
mul
jb
xlat
mov
mov
pop
lcall
jge
popa
xor
movsl
cmp
sahf
mov
fbstp
mov
sub
cmp
mov
jno
lahf
push
mov
jnp
fwait
movsl
cli
pop
clc
popf
stos
push
xchg
movsb
sbbb
cmp
push
data16
jne
rcrl
cmp
jecxz
or
mov
js
std
fistps
mov
nopl
or
repz
sbb
outsl
lret
insl
jno
lcall
out
xor
jno
mov
push
mov
ljmp
std
jg
fmulp
pop
shlb
sbb
jb
repnz
idivb
push
lret
pop
out
cmp
cmp
mov
mov
xor
push
sub
test
out
pop
dec
icebp
cli
dec
aad
mov
fildll
test
idivb
jp
mov
cmp
cmp
sahf
lret
push
adc
in
cltd
movsl
fisubrs
movl
pop
cld
psubw
jns,pt
add
cmp
xor
lret
out
pop
lods
mov
add
pop
and
stos
xor
and
cmpsl
loopne
fstpt
mov
pop
sbb
seta
jle
imul
repz
outsb
mov
pop
mov
jno
lret
fcmovu
test
lods
jns
push
int
jmp
xor
xchg
mov
cwtl
xor
popa
fdivrl
mov
push
notb
loope
jg
loope
jnp
rolb
or
lret
push
jnp
lods
jle
insb
mov
test
int3
add
dec
int
xor
fadds
clc
scas
std
lds
cli
lcall
inc
push
xchg
adc
adc
push
mov
gs
movb
sbb
cmpsb
cmpsb
out
push
popf
loopne
in
rcrb
cmp
sub
pop
out
push
inc
cmpl
push
testb
out
int3
pop
mov
inc
jge
xor
mov
bound
pop
in
sbb
jmp
je
insl
mov
push
jge
xchg
out
fucom
js
adc
inc
shl
xchg
sub
push
repz
xchg
add
cmp
mov
lret
sbb
dec
cmp
cli
mov
ror
pop
jge
push
push
in
das
getsec
cltd
pop
dec
sbb
inc
insb
call
pop
jbe
sub
rcrb
sbb
addl
xchg
fmuls
add
push
jno
xchg
push
mov
sbb
push
ret
xor
es
stc
push
add
bound
rcrl
push
pop
fcmovnb
cmp
movsb
mov
out
push
jecxz
dec
xchg
inc
mov
or
cmpsl
rorl
adc
cwtl
popa
shll
sbb
or
test
test
mov
sub
sahf
pop
cmc
adc
les
mov
imul
sbb
dec
test
xchg
aam
pop
xchg
push
mov
inc
xchg
and
shll
stc
mov
mov
out
sbb
aam
mov
repz
pop
mov
int3
xor
jo
loopne
inc
divb
cmpsb
jecxz
ss
divl
imul
add
push
dec
xor
imul
fsts
jne
je
dec
pop
xor
add
fistpl
ss
cli
ja
lea
xor
adcb
xor
pop
dec
lock
sti
push
ss
push
adc
push
add
inc
in
arpl
mov
adc
cmp
dec
clc
sahf
fcomp
ss
sbbb
adc
inc
das
dec
sbb
jo
xchg
js
clc
mov
pop
scas
dec
jb
push
jb
in
and
sub
or
jg
hlt
popa
pop
lods
mov
scas
aaa
fs
inc
test
cs
int
cmp
or
in
cs
push
mov
cld
shrl
lcall
add
xchg
cwtl
ret
add
add
pop
lods
into
adc
fmull
jg
sub
dec
jne
in
sbb
or
push
mov
rcr
shll
jb
stos
cmp
sub
cs
mov
sub
push
cmpsb
push
dec
lahf
adc
jbe
inc
pop
popf
add
ffree
hlt
sub
add
js
scas
cmp
pop
inc
inc
enter
stos
xchg
mov
imul
orl
push
cmp
pop
in
sub
pop
add
xor
test
cmp
sbb
mov
push
lahf
hlt
leave
ljmp
push
jl
imull
push
leave
xor
aas
add
xchg
leave
dec
subl
stc
xchg
fcoml
and
mov
sub
mov
dec
or
test
mov
enter
mov
movsb
fwait
out
jne
test
adc
cld
andl
les
add
test
inc
xor
cmp
mov
sbb
ljmp
hlt
xor
jle
push
mov
rorl
push
iret
out
mov
mov
ds
sbb
aaa
mov
repz
and
push
inc
out
push
adc
cmp
mov
addb
jno
dec
jle
jns
mov
xor
leave
xor
je
jmp
xchg
inc
mov
dec
rcll
sti
into
orb
pop
cmp
popa
sti
inc
dec
dec
lret
lret
mov
pop
stos
xor
jbe
mov
add
in
jge
add
dec
sub
xchg
xchg
xchg
push
xchg
or
push
rorb
cmpsl
dec
or
fsubrl
aad
out
out
push
sbb
bound
cld
push
test
mov
arpl
icebp
dec
int
adc
inc
sub
xor
shrb
enter
lcall
movsl
xor
cmpsb
sti
insb
ret
dec
cmc
movsl
gs
test
test
call
xchg
pop
cmp
and
fiadds
cmp
clc
sub
and
xor
inc
sarb
add
orb
xor
adc
inc
cltd
fnstcw
mulb
out
sbb
test
push
pop
push
lret
sub
push
sub
aas
and
scas
or
adc
mov
iret
fadds
mov
shr
and
push
mov
cltd
cmp
call
out
cs
lea
enter
push
cmp
or
pop
into
das
or
xor
fmul
ss
in
cmpsb
mov
push
cwtl
sub
push
mov
ret
addb
xchg
scas
sub
mov
imul
pop
push
leave
inc
out
call
jbe
hlt
adc
xchg
xchg
movsl
insb
adc
jl
or
out
mov
or
jecxz
lcall
lret
cwtl
or
out
mov
inc
jl
clc
xchg
inc
dec
pop
les
mov
ret
out
out
or
push
dec
and
fists
push
push
pop
xchg
loope
xor
push
iret
push
in
mov
push
mov
push
addr16
xchg
out
roll
cmp
loope
ret
cltd
mov
jecxz
loope
xchg
dec
or
push
or
xchg
mov
repz
pushf
pop
leave
xchg
xor
movsl
lcall
scas
and
pushf
mov
jne
sti
es
inc
push
fsub
cmpb
adc
nopl
mov
mov
int3
insl
dec
enter
js
insl
ret
icebp
lds
test
mov
daa
pop
and
test
ror
push
test
outsb
xor
sbb
push
xor
mov
push
mov
stos
mov
jne
sbb
rorb
push
setns
add
or
in
cmp
push
mov
cmpsl
pop
push
jo
xlat
out
inc
sti
xor
outsb
es
fadds
add
and
loop
and
and
loopne
xchg
xor
and
sar
sbb
pop
mov
aas
cmpb
xchg
add
push
das
es
push
mov
pop
sub
out
int3
adc
push
clc
aaa
shlb
mov
mov
pop
int3
outsb
push
inc
lock
xor
jns
lret
xlat
bound
je
and
inc
push
mov
mov
mov
pop
rcr
arpl
mov
ror
popa
mov
push
or
jno
aam
lods
popf
in
aaa
loope
push
rcr
clc
stc
rcrl
ret
test
push
outsb
and
push
jecxz
mov
shlb
rcrl
jnp
loop
mov
mov
bound
sarb
iret
pop
int3
mov
mov
mov
in
xchg
mov
call
or
cmpsl
xorb
jl
ja
test
repnz
cmp
cmp
mov
adc
hlt
fs
pop
hlt
and
test
jbe
mov
pop
push
js
ljmp
inc
negb
sub
test
notb
lahf
pop
cmp
ss
dec
lds
jg
ja
pop
inc
xchg
push
push
sahf
sub
aas
jnp
push
xlat
or
pop
xor
mov
out
es
insl
movsb
dec
in
xchg
xchg
repnz
sub
adc
sti
adc
push
dec
add
insl
stos
mov
stc
xchg
repnz
jo
fs
jp
lret
iret
mov
jnp
jl
out
dec
sti
xchg
daa
push
gs
movsl
mov
xchg
dec
jecxz
bnd
fwait
xchg
jp
mov
sbb
sub
into
sti
add
dec
pop
jbe
cmp
mov
loope
in
das
add
cmpl
cwtl
sub
stos
cmp
cld
push
mov
mov
push
cli
mov
jne
xor
dec
push
push
mov
scas
jne
jnp
sbb
dec
cmp
adcb
inc
or
lret
rolb
xchg
xor
inc
aas
ret
shll
xchg
mov
or
scas
sbb
inc
push
lods
push
je
push
lahf
fnsave
sbb
hlt
mov
dec
repz
mov
xchg
dec
pop
leave
mov
cli
mov
adc
xchg
outsl
xor
push
add
jne
arpl
movsb
mov
aaa
xor
popa
daa
stc
xchg
mov
add
push
out
cmp
bound
or
mov
push
jecxz
pop
mov
jle
mov
fildll
or
pop
jmp
imul
adc
loop
xchg
mov
jecxz
inc
xchg
cmpl
std
pop
mov
mov
cmp
cmp
aas
jno
sub
push
fildll
cmc
outsb
stc
ret
leave
pushf
cld
jo
dec
jle
mov
mov
rcll
ljmp
push
xor
stos
or
loopne
divl
and
add
adc
cmc
test
je
fcomi
mov
and
dec
testb
jmp
insb
jmp
xchg
addb
xchg
push
ja
lahf
call
sbb
data16
pop
cld
loopne
outsb
adcb
mov
test
into
stos
inc
and
jge
rol
jns
in
pop
xchg
jmp
dec
test
push
in
ss
mov
rcrb
mov
outsl
xchg
jne
jb
or
sbb
lods
add
pop
loope
in
inc
and
or
xchg
push
cli
enter
loopne
movsb
inc
add
lods
shrb
mov
insb
push
and
and
nop
cmp
xchg
test
ret
leave
mov
das
les
mov
shlb
js
xchg
test
insl
imul
cwtl
lahf
xor
xchg
mov
mov
cmpsb
adc
push
lcall
imul
mov
bound
xor
push
ret
cs
addr16
mov
or
lahf
adc
or
jne
in
clc
xor
cmp
outsb
enter
xchg
std
dec
pusha
in
pop
les
ds
cmp
jo
push
cld
fwait
movsb
mov
or
push
cli
std
sbb
xorl
out
or
sub
push
push
lea
mov
pop
icebp
out
cs
fs
inc
push
sub
rclb
std
xchg
cli
rcl
or
push
fwait
lahf
dec
jecxz
jo
inc
mov
adc
dec
loopne
inc
insl
imul
jl
addb
sub
jmp
xor
mov
pop
in
pop
mov
data16
mov
out
cmp
sbb
repnz
repz
clc
test
rclb
xor
fwait
push
filds
stos
jg
int
mov
filds
mov
adc
std
in
mov
cli
imul
add
mov
sub
cmp
js
dec
add
cmp
dec
lcall
add
mov
xchg
or
xlat
test
ja
inc
pop
jne
mov
nop
sbb
sub
push
nop
dec
fisttpl
inc
jg
mov
sub
pop
xchg
out
fs
es
bound
add
mov
dec
mulb
fldcw
xchg
movsb
cmc
jge
ja
popf
stos
imul
adc
xchg
mov
lods
mov
and
jecxz
or
hlt
adc
mov
xlat
testb
add
xchg
mov
enter
xchg
xchg
or
mov
insb
and
sahf
lret
jnp
add
jbe
sub
scas
jg
fs
pop
push
sbb
pusha
sbb
jge
pop
mov
add
je
dec
push
iret
sub
out
mov
or
adc
das
roll
push
adc
or
hlt
mulps
mov
rcr
fstl
push
out
cltd
pop
xor
adc
pop
sub
xchg
shlb
inc
jle
pop
dec
jo
xor
shld
pop
xchg
int
or
mov
cmc
aas
dec
jnp
cmp
or
add
push
cmp
xchg
mov
jge
sbb
dec
push
dec
pop
push
or
ss
jmp
cmpsb
popa
mulb
cmc
idivb
or
xchg
adc
lock
pop
aam
rcrb
pushf
das
scas
sub
scas
and
pop
jecxz
scas
cmpsl
xchg
xor
repnz
out
inc
mov
ss
jle
jp
add
dec
mov
xor
shlb
mov
cld
xor
out
out
sub
imul
loopne
push
xchg
out
mov
sti
test
mov
in
loop
dec
aas
push
push
test
pop
aad
add
sahf
pop
cmpsl
jl
push
aad
cmpsb
jge
imul
jg
mov
cmp
xchg
fistl
and
and
popf
call
dec
fcoml
outsl
pop
aas
xchg
jnp
jo
cmp
add
xchg
std
xchg
pop
sti
cmpsb
adc
fldt
jecxz
jl
stos
insb
out
push
dec
shlb
inc
mov
out
sub
sarb
xchg
es
sub
cmpsl
shll
xor
mov
aam
call
aad
in
fcomp
pushf
scas
jns
add
xchg
gs
jb
in
outsl
jnp
rcl
xchg
ds
aam
lcall
mov
mov
pop
lock
pop
mov
daa
add
hlt
lods
notl
icebp
or
mov
test
mov
inc
jns
add
cmp
xchg
fistps
or
stos
inc
rcrb
add
sbb
push
in
cmp
cmp
pop
movsl
clc
stos
mov
gs
loop
ss
hlt
ficompl
pop
push
fmull
cmp
arpl
push
aam
jecxz
in
inc
clc
adc
ret
jg
imul
jae
fwait
repz
pop
cmp
add
mov
dec
ja
mov
jg
dec
push
mov
lret
mov
xor
mull
inc
call
jle
out
add
push
pop
sbb
in
incl
sbb
jae
out
jmp
mov
shrl
xchg
push
cmp
in
mov
loope
loope
xor
stos
add
pop
or
cld
iret
ljmp
insl
dec
int
fs
mov
xor
imul
adc
aam
pop
sub
and
or
xchg
clc
call
xor
roll
inc
mov
cmpsl
push
dec
inc
mov
dec
roll
mov
push
mov
cs
fwait
aad
sub
xchg
pusha
insb
adc
mov
jbe
dec
sub
sub
lcall
into
push
add
daa
jne
scas
xlat
movl
out
or
sub
jae
outsb
in
dec
adc
sbb
lret
pop
popa
xor
sub
cs
rolb
xchg
int3
test
mov
dec
lcall
cmp
dec
in
or
nop
xor
cli
bound
fnstcw
ja
out
and
aam
imul
dec
fldt
push
add
hlt
jo
xchg
iret
fstps
call
xor
jl
jl
stos
adc
dec
pusha
ljmp
rclb
xor
psrld
cld
pop
addb
insl
popa
cs
xor
pop
and
in
test
mov
pop
mov
nop
movb
popa
inc
addr16
loop
out
fdivl
mov
inc
lret
mov
fdivrs
jbe
xchg
iret
fistps
arpl
ljmp
in
jle
and
repnz
or
faddl
js
shl
xchg
mov
orl
pop
xor
je
or
pushf
cs
push
addl
lods
loopne
cs
or
jl
pop
cmp
int3
shrb
repz
cmp
rorl
sub
add
cmc
cmp
xor
scas
imul
sub
out
pop
pusha
push
jge
mov
cwtl
filds
xor
adc
mov
clc
sbb
gs
xchg
daa
dec
fwait
jmp
ss
rorb
bound
dec
lock
daa
ret
aas
jp
call
jmp
sub
cmpsl
sbb
mov
in
flds
dec
pop
fstpt
fcmovbe
outsb
jp
loop
jg
movzbl
xchg
xchg
pusha
cmpsl
stos
pop
adc
daa
mov
leave
call
xchg
in
and
mov
adcl
ds
rcl
pop
out
jle
push
popa
xor
pop
out
mov
in
mov
test
in
lahf
fsubs
cmpl
aas
lea
pop
or
repnz
loope
loop
mov
push
flds
add
ds
repnz
xchg
push
xchg
bound
fmuls
fs
repnz
mov
cmpsl
jnp
dec
cmp
rcrb
bound
fucomp
push
mov
repz
adc
vmread
jae
and
push
pop
pop
les
cli
jno
jg
cmc
push
fsubrl
cmpsb
jo
adc
syscall
mov
and
aaa
cmp
mov
addr16
dec
adc
adc
dec
push
mov
popf
movsl
cltd
pop
pushfw
clc
mov
fldz
jbe
in
adcl
jb,pn
lcall
pusha
test
test
int3
cmp
jbe
test
mov
mov
aaa
test
inc
inc
xchg
push
out
push
adc
push
lods
sbbl
out
aas
cmp
add
and
sub
insb
jle
or
pop
mov
rclb
lret
add
fstpl
sub
jo
jecxz
int3
or
loopne
arpl
or
or
cmp
gs
enter
das
enter
fcmovnbe
or
ret
sbb
pop
xlat
or
faddl
xor
xchg
lds
nop
aaa
adc
cmp
imul
dec
insl
fisubl
jle
mov
cltd
adc
xor
fisttpll
push
je
push
cwtl
aad
into
adc
jb
inc
xor
mov
inc
loopne
push
xchg
sarb
mov
shll
pop
xorb
mov
aaa
fwait
sub
adc
jne
push
sub
adc
leave
xchg
call
lds
or
lahf
adc
jae
bound
je
mov
popa
pushf
pop
adc
cmc
int
xchg
enter
popf
push
pushf
push
insb
sbb
push
icebp
in
fcomps
jns
cmpsb
inc
cmp
jb
jl
imull
jle
mov
lock
popf
push
sbb
adc
inc
pop
in
mov
jle
pop
daa
js
xchg
call
fs
test
pop
mov
cmp
jecxz
mov
adc
rolb
mov
inc
mov
mov
pop
inc
cmp
pop
jge
push
mov
mov
mov
mov
fidivrs
lahf
fwait
and
aas
fadd
push
push
pop
cltd
stc
push
mov
push
xor
imul
fidivrs
lcall
mov
xchg
cmp
ljmp
ficoms
out
mov
jge
insb
js
imul
sbb
cli
and
ja
xchg
pop
push
jge
dec
call
stc
ret
movsl
mov
repnz
sub
cmpsl
mov
repz
iret
loope
jne
push
in
push
test
mov
scas
fistpl
mov
pusha
scas
push
mov
push
dec
adc
dec
cmp
rcrb
icebp
dec
mov
mov
xor
aas
sahf
jae
add
iret
out
nop
xchg
or
into
pop
stos
pushf
in
call
imul
imul
mov
das
pop
or
lret
out
cmp
pushf
sbb
gs
push
mov
adcb
outsb
cltd
test
insb
cmp
fmull
fnsave
sbb
mov
nop
add
push
sbb
jp
jae,pn
inc
es
ss
mov
pop
and
jp
sarb
js
stc
sub
lea
and
ficoml
mov
outsl
imulb
imul
rcr
dec
test
fistps
push
mov
add
aad
cmp
cmpsl
lret
dec
mov
into
push
loopne
insb
xor
push
push
push
int
cwtl
fiaddl
pushf
jmp
es
out
xchg
sub
pop
dec
jmp
in
test
pusha
cmpsl
out
mov
pop
and
push
mov
mov
rcrl
mov
jmp
add
call
rcll
dec
mov
fwait
cmc
int3
xor
jle
push
ret
rorb
int
mov
movq
mov
popa
lret
ss
sbb
inc
mov
push
imul
push
inc
inc
push
scas
push
pop
ror
adc
add
dec
jns
add
add
mov
lea
mov
rcr
lret
das
daa
lahf
sbb
daa
daa
scas
call
xchg
mov
and
and
addb
test
and
popa
inc
sbb
pusha
inc
push
mov
xchg
fs
pop
xchg
push
jbe
in
pop
or
cmp
lahf
jmp
xchg
shll
movsl
pop
imul
cs
loope
js
inc
cld
int3
fucomip
sub
adc
inc
movsb
cmp
inc
das
clc
scas
std
sub
movsb
fldl
sub
pop
add
xor
sbb
mov
xchg
push
popa
stos
dec
repnz
cmp
mul
movsb
xchg
dec
mov
in
xor
mov
daa
mov
test
pop
loop
add
mov
ja
or
test
or
sarb
sbb
ss
cli
rol
mov
int3
imul
jle
inc
jb
imul
ss
cmp
adc
pop
cmp
orl
mov
into
and
xchg
repnz
hlt
pop
mov
cmpsb
divl
cmp
xor
mov
in
xchg
cmp
jnp
shl
aas
mov
push
xor
inc
inc
pop
pushf
jecxz
cmp
add
and
ss
dec
lods
daa
mov
or
push
aad
lea
fsts
and
xchg
ret
loop
test
lock
dec
dec
fmull
inc
or
inc
xchg
sub
test
fs
xchg
cmp
sub
or
sbb
pop
pop
ds
sub
jge
cltd
in
cmp
test
add
test
int
jb
add
jnp
mov
or
mov
jo
into
adc
or
add
inc
jb
and
pop
int3
sub
xor
fdivrs
in
mov
push
fbld
push
das
fidivl
outsl
mov
add
and
pushf
pusha
mov
jl
sbb
jmp
xor
add
stos
jle
mov
stc
test
das
jae
adc
daa
test
push
mov
outsb
push
mov
dec
lahf
mov
xchg
mov
add
int3
adc
shl
mov
mov
orb
adc
scas
mov
or
xor
jl
xor
mov
loop
fldt
xchg
ds
imul
inc
mov
or
pop
xor
xlat
add
nop
mov
dec
fsts
sbb
mov
pop
popf
fwait
and
fsubr
popf
call
hlt
push
cmpsb
inc
imul
das
idivl
lret
adc
je
push
adc
adc
lea
mov
dec
orl
add
pop
in
stos
pop
cwtl
inc
fnstsw
sahf
shll
jnp
xchg
outsb
outsl
cmpsb
dec
sti
jns
pop
mov
sarb
mov
je
adc
push
cs
loope
jns
popf
adc
out
mov
enter
and
or
dec
mov
sub
test
lods
out
jo
pop
cmp
aad
mov
push
mov
addr16
hlt
push
icebp
cmp
sbb
jne
sbb
bound
scas
pop
sbb
out
cld
loopne
and
xchg
mov
sbbl
cld
jmp
loop
mov
les
lret
dec
dec
push
into
ss
scas
add
pop
shr
insl
sbb
bound
push
ficompl
jecxz
outsl
stc
nop
popf
lods
sub
imulb
xor
add
pop
out
cld
xor
pop
xor
or
clc
pop
psubw
lods
xor
inc
or
jno
inc
mov
mul
xor
in
sbb
ret
ret
sbb
jns
push
jno
mov
or
addl
push
lahf
dec
xchg
andl
adc
lods
pop
cs
add
je
xor
imul
loop
sbb
fidivrl
fildl
lds
std
out
movsb
je
dec
push
loope
cmp
outsl
fimuls
int3
xor
gs
jae
push
insl
add
sub
out
xor
or
push
adc
ljmp
adc
loope
xor
mov
xor
xchg
push
ljmp
cs
add
dec
scas
popf
rol
dec
inc
xchg
les
pop
lds
cmpsl
push
xor
push
dec
mov
adc
js
cs
pop
mov
out
negl
cmc
mov
aad
xor
or
pop
pushf
or
mov
cmp
cmpsb
data16
mov
mov
decb
data16
mov
xlat
jl
loop
aaa
repnz
outsw
add
fistl
mov
aaa
mov
les
das
das
sbb
xchg
roll
adc
add
rclb
aaa
or
icebp
push
push
xor
mov
movsl
jne
cmp
fs
rcll
or
in
jecxz
loope
out
mov
lods
jb
mov
push
scas
loopne
sub
loope
pop
add
dec
in
std
adc
int3
add
sar
repz
pop
mov
aaa
outsb
push
adc
insb
add
mov
xchg
push
and
mov
data16
dec
sti
mov
push
mov
fiaddl
sbb
sbbb
dec
roll
cmp
loope
test
xor
lret
mov
lea
lods
js
sub
stos
movsb
xchg
lcall
mov
add
jmp
mov
sbb
adc
jecxz
fldt
or
inc
mov
jmp
jecxz
insl
rol
cli
stc
lock
sub
fistpl
test
jge
push
sub
stc
inc
imul
add
sbb
sbb
xor
fcompl
jmp
mov
out
push
pop
in
push
lds
arpl
dec
mov
jmp
or
jecxz
bound
loopne
dec
jmp
dec
xchg
enter
icebp
and
adc
mulb
push
popf
ret
rclb
or
sahf
mov
mov
adc
fwait
sar
push
ljmp
xor
pushf
insb
or
sbb
add
outsb
in
lret
xor
mov
dec
inc
imul
scas
pop
andl
pop
clc
cmpsl
jb
or
cmpsl
je
shlb
cs
movb
dec
mov
and
jbe
data16
dec
add
adc
test
repnz
add
mov
int
push
xchg
jl
pusha
out
sub
pop
pop
out
mull
add
neg
mov
sub
dec
int3
testl
pop
popa
jl
sub
cmp
fisubrs
lea
iret
or
xchg
mov
pop
jo
inc
out
push
aam
stc
cltd
pop
int
push
out
xchg
dec
sub
push
cmp
jp
std
pusha
push
insl
sbb
jge
sub
out
inc
gs
mov
int3
xchg
mov
add
dec
xlat
sbb
adcb
adc
aaa
sti
mov
mov
mov
insb
lods
fwait
std
cmp
xchg
jmp
fcoms
or
dec
call
outsl
ret
cmp
faddp
jge
dec
call
jae
data16
ret
test
adc
movsl
jecxz
clc
inc
pop
xchg
mov
xor
shll
and
addr16
xor
or
mov
and
mov
adc
jb
ret
ret
sub
movsb
adc
or
popf
xchg
sbb
inc
into
ja
pop
aad
push
mov
sbb
mov
jle
data16
xchg
and
test
les
ficomps
das
and
out
add
pop
mov
imul
inc
cwtl
ljmp
sahf
inc
xchg
popf
cmp
loop
inc
scas
jno
insb
out
inc
mov
jns
push
dec
rol
cmp
les
inc
sub
cmp
mov
aas
cli
es
jns
fidivl
js
xor
sbb
add
test
push
sub
div
cmc
scas
stos
aad
insb
push
add
flds
xchg
out
push
fimuls
push
loope
push
shlb
mov
cli
mov
adc
dec
fstpt
fdivrl
leave
mov
ljmp
xchg
fldt
push
out
pop
mov
mov
ljmp
mov
add
lret
push
aam
and
arpl
fmul
in
xchg
lret
add
jg
or
push
cmc
sbb
push
popa
int3
push
pop
cmp
fistpl
outsb
lea
add
std
out
insb
jnp
repnz
or
movsb
jnp
popa
ljmp
call
or
popf
push
sbb
xor
lea
fiaddl
in
pop
cmpsb
ret
dec
xor
mulps
cmp
pop
xor
jno
daa
adcb
leave
and
fnstenv
sub
mov
mov
lcall
sbb
xchg
cmpsb
cli
pop
pop
adc
ss
fisubs
ret
scas
out
fwait
inc
dec
in
cmp
lods
loopne
cli
movsl
in
mov
repz
fcomps
pusha
std
ja
andb
add
jecxz
and
leave
lret
fwait
into
es
inc
lret
or
cmp
mov
and
jecxz
rcl
in
push
stc
xor
pop
cmc
add
in
pop
xor
test
loop
or
sub
repz
dec
mov
cwtl
add
mov
into
mov
lahf
adc
mov
sbb
adc
into
adc
in
aam
push
mov
adc
mov
adc
imul
sub
pop
out
inc
pop
xor
mov
lods
inc
arpl
dec
jle
popa
outsl
fisttpll
clc
jae
lret
jle
cmp
mov
stos
es
push
fdivrp
test
mov
fisubrl
jmp
add
mov
push
pop
mov
or
xchg
shl
or
mov
push
or
pop
adc
mov
adc
mov
jb
push
js
loop
in
mov
push
and
jnp
dec
outsl
fcoml
xor
loop
frstor
imul
dec
in
add
push
add
push
xchg
fcomi
icebp
dec
mov
pushf
xorb
xor
mov
pop
popa
sar
lret
movsl
sbb
out
lds
dec
and
cltd
mov
sub
dec
pushf
negl
lea
push
dec
or
dec
cld
ss
fldenv
pusha
jmp
mov
push
repz
imul
mov
push
shll
inc
xor
adc
xor
ret
ss
cmp
pop
lcall
and
adc
flds
loop
je
pop
and
aaa
dec
xchg
cmp
inc
adc
cmpsb
push
adc
or
fdivr
and
sbb
and
or
push
push
adc
stos
jp
and
lea
sbb
mov
into
sub
call
pop
xor
in
mov
cs
xor
sub
inc
mov
inc
jbe
das
xchg
cmp
ficoml
in
jne
xor
cwtl
pushf
ret
jle
scas
aam
sub
jle
xor
je
inc
out
stc
adcl
sub
cmp
inc
dec
hlt
scas
add
lods
pop
dec
mov
cmp
add
or
dec
cmp
mov
out
inc
in
mov
mov
mov
data16
xchg
adc
repz
adc
or
push
add
das
mov
movl
mov
push
stc
adc
mov
icebp
leave
and
shl
pop
xchg
clc
sbb
xchg
push
out
mov
loope
int
mov
inc
fs
icebp
outsb
stos
imul
test
stos
lret
cwtl
ficompl
jp
dec
daa
addr16
inc
hlt
out
pop
mov
jle
std
xchg
push
adc
mov
sub
jno,pn
mov
stos
adc
cmpsl
sti
ja
popf
shrl
mov
lahf
push
mov
xor
xchg
inc
mov
push
pop
cli
into
in
mov
dec
jb
dec
lods
adc
xor
es
xor
xor
sbb
xor
data16
movaps
lahf
btc
inc
sbb
cmp
outsl
sbb
xchg
mov
fwait
adcl
aaa
mov
pusha
xor
inc
pop
sub
cwtl
xorl
verr
loopne
xor
imul
clc
cwtl
jg
cld
fwait
jp
push
rorl
mov
inc
cld
js
dec
sbb
shrl
pop
add
ja
rcrb
dec
pop
aaa
mov
add
cmp
cmpsb
add
pop
jge
repz
rol
pop
outsb
pop
faddp
cmp
adc
inc
mov
bnd
cmpsb
fcmovu
lods
fimull
shll
mov
xchg
cld
mov
cmp
movsl
lcall
inc
mov
jo
popf
add
aad
adc
pop
pop
fucomip
orl
scas
push
xchg
shll
cltd
pop
imul
pavgw
push
inc
pop
call
cs
ret
sahf
or
ret
outsl
aaa
xchg
loop
cmpsl
or
jge
xchg
jp
xchg
cli
cmp
jecxz
cmp
dec
pushf
fwait
or
stc
scas
push
push
lcall
cmpsb
imulb
jmp
sbb
fistl
pop
xor
mov
and
fstl
mov
or
sbb
push
stos
inc
mov
testb
lret
leave
negl
popaw
mov
dec
out
out
sahf
jecxz
inc
pop
icebp
sbb
movsb
lea
ja
cbtw
jl
mov
sub
add
subl
add
fisttpll
dec
jbe
push
mov
cmc
je
jno
jecxz
cmovae
jmp
adc
sub
pushf
mov
insl
ret
mov
lret
and
jae
inc
movsl
mov
or
shlb
add
xchg
mov
dec
pop
int
sarb
imul
mov
add
mov
dec
mov
inc
jecxz
pop
test
test
outsb
mov
mov
cli
add
out
mov
jne
cmpsb
mov
repz
add
and
mov
js
cmpsb
popa
sub
and
xor
cmp
cmp
ss
imul
inc
adc
mov
leave
popa
imul
je
pusha
inc
ljmp
ljmp
xlat
mov
inc
je
fmuls
push
cmp
lds
push
push
sti
sub
dec
add
adc
adc
add
lods
push
fstl
in
insl
pop
and
insl
jmp
jg
scas
sbb
dec
neg
jecxz
cld
or
je
ror
mov
mov
sbb
jg
jb
cmp
iret
cs
jae
mul
arpl
adc
pop
jbe
pop
or
xchg
test
pushf
dec
mov
cmpsl
and
lods
ror
ljmp
mov
mov
xlat
and
pop
add
addb
inc
push
xor
or
lcall
inc
sbb
imul
dec
inc
inc
mov
or
mov
ret
sub
fwait
sub
nop
xchg
sub
outsb
push
or
pop
inc
int
je
pop
in
mov
out
std
stc
ja
cmpsl
mov
pop
pusha
sub
andl
sub
adc
mov
scas
ja
mov
sub
dec
mov
into
push
adc
bound
xchg
cmpsb
sbb
pop
adcb
and
push
sarb
fwait
sbb
daa
push
das
js
push
je
adc
pop
adc
in
inc
push
pusha
pop
movsb
daa
xor
iret
sub
mov
sbb
push
xchg
cwtl
mov
inc
lea
in
std
popa
pop
int3
sub
and
ret
out
mov
mov
lds
sub
std
mov
jne
mov
mov
fldt
addr16
scas
mov
lret
push
mov
push
lret
and
lods
cltd
push
push
dec
cwtd
rorb
cli
xchg
mov
and
insb
roll
adc
jne
outsb
jb
stos
sahf
addr16
sahf
jp,pn
in
xor
sub
imul
imul
adc
mov
sahf
in
push
mov
adcl
cmpsl
cmc
aad
inc
jg
ja
shrb
sbb
ss
in
std
nop
mov
push
jne
adc
xor
and
pop
push
sti
push
push
pop
out
or
pop
push
aas
dec
insb
cmp
jmp
insl
dec
pop
fxch
push
repnz
xor
decb
cs
sbb
jae
lds
lret
lret
jge
ds
or
cmpsb
cltd
movsb
or
cmp
and
push
bound
push
enter
fnstenv
ret
sti
gs
data16
int
sbb
dec
lock
pop
out
test
inc
fdivr
jbe
or
dec
push
dec
mov
and
mov
sbb
push
adc
mov
sbb
fsts
nop
sbb
sbb
push
or
std
test
xchg
lock
das
ror
mov
push
pop
insl
pop
pop
loope
sub
cmpb
jp
mov
les
out
pop
and
mov
into
xchg
xchg
arpl
movsb
add
pop
int3
adc
rorb
sbb
add
pop
scas
dec
and
cld
mov
ficomps
shll
into
aas
into
cwtl
popf
jno
leave
js
mov
imul
cmp
lcall
repz
jmp
int
std
xchg
or
test
pop
rcll
sbb
xchg
adc
stos
xor
inc
inc
and
push
sub
pop
mov
lds
xchg
sarb
cwtl
xchg
mov
inc
add
or
jmp
fmuls
frstor
or
cmpsb
stos
adc
aaa
cmp
ret
sahf
cmp
pop
negb
lret
adc
or
popf
test
mov
add
xchg
and
ficomps
cmpsl
movsb
clc
arpl
loope
testl
mov
fisubrl
inc
pextrw
xchg
test
stc
into
push
pop
pcmpgtb
xchg
push
xchg
mov
cld
cwtl
inc
jg
adc
loopne
mov
inc
adc
xchg
addb
dec
pop
shl
subl
out
add
inc
enter
das
lock
sbbl
cmp
cmp
pop
mov
push
gs
mov
sub
and
or
lcall
jbe
push
xchg
insl
std
xor
cmp
or
mov
nop
mov
jne
or
mov
in
jae
out
dec
push
jle
dec
call
pop
jae
mov
sbb
fstpl
lods
fcompl
cld
notl
mov
imul
add
aas
rolb
add
xor
sbb
and
or
mov
in
mov
rcr
and
add
cltd
and
xchg
repz
xchg
in
cmp
sbb
mov
xor
sbb
scas
push
sar
mov
mov
add
mov
mov
or
popf
test
into
xor
mov
cmp
fld
cli
outsb
lods
stc
mov
push
aaa
adc
dec
les
adc
cmc
lret
movsl
dec
into
daa
xor
aam
repz
xchg
push
adc
fwait
cmpl
cltd
mov
inc
testl
andb
shrb
js
xchg
or
iret
scas
mov
cmp
ja
lahf
jb
ja
mov
and
push
sbbl
stc
and
xor
pop
cld
lcall
ja
add
enter
xor
loop
ds
mov
sahf
lods
mov
insl
in
mov
sarb
lahf
scas
ljmp
jne
fwait
cwtl
mov
pop
inc
loopne
bound
jbe
sbb
arpl
add
mov
and
sub
shrb
stos
ficomps
add
jmp
mov
sbb
in
jg
push
xchg
arpl
or
cmpsl
in
aaa
loop
in
xor
pop
lock
fmulp
xchg
push
mov
sbb
inc
jp
dec
clc
shrl
dec
popa
jo
xor
fwait
mov
lcall
rorl
leave
pop
jo
movsb
movsb
cmc
push
popa
scas
fdivr
mov
push
push
insl
sub
and
push
repnz
jmp
sub
test
popf
aam
lcall
cmp
pop
sbb
or
adc
addl
push
mov
adc
push
or
test
int3
jb
into
fxam
incb
fstl
ficompl
movsl
sub
or
adc
jp
mov
rep
movsl
stc
aas
mov
movsb
add
int3
dec
mov
rclb
mov
and
stc
lods
mov
cmp
push
lret
inc
movlps
xchg
push
mov
aaa
mov
mov
or
es
das
xchg
out
mov
xlat
adc
lret
outsl
xchg
mov
insl
xor
push
pop
pop
in
xchg
cli
or
outsb
mov
jno
insb
mov
js
stos
mov
pop
lcall
inc
and
xor
or
jno
movsl
or
xor
jl
ret
loope
int3
daa
outsl
les
pop
in
lock
sbb
fmull
mov
ds
xor
mov
add
rol
outsb
ds
aam
pop
cmp
subl
push
jg
imul
leave
dec
out
cmpsb
jnp
loopne
ficoms
dec
fisttpll
data16
xchg
ds
jge
jmp
loope
sbb
shrb
fs
xor
sub
inc
repnz
xor
xchg
out
lret
xor
subb
pop
mov
mov
or
mov
dec
push
inc
jg
dec
dec
movsl
lret
xchg
mov
hlt
xor
loope
mov
pop
loope
loopne
into
jle
pop
rorl
out
push
jmp
push
inc
or
aas
sahf
mov
jnp
jle
jl
in
orb
outsb
hlt
scas
cmpsl
pop
xchg
test
fxch
cwtl
pop
dec
shrl
jle
mov
lods
ret
jno
jle
ret
lret
mov
pop
and
out
sbb
xchg
jno
daa
xchg
mov
cmp
inc
pop
out
ret
mov
cmp
mov
add
sbb
pop
push
out
shlb
cmp
adc
enter
repnz
lods
notb
out
lret
inc
or
xchg
out
addb
lods
jns
or
adc
jge
prefetch
or
cli
dec
xchg
sub
aam
movsl
inc
in
aad
jae
cld
inc
into
sub
or
pop
hlt
adc
adc
daa
push
scas
or
push
pop
lcall
enter
mov
or
push
dec
push
push
and
inc
mov
dec
mov
and
xor
mov
pop
shl
pop
mov
jo
shll
in
jns
aas
push
roll
jecxz
mov
jns
dec
push
push
out
aad
js
lcall
les
lret
stos
out
popf
inc
cmp
pop
jle
les
int
adc
pop
and
push
add
and
lods
loope
cld
test
frstor
add
sbb
fnstcw
xor
jge
sbb
dec
out
scas
ds
lret
mov
pop
adc
jns
out
adc
aam
jo
cltd
inc
inc
add
mov
cmp
aam
mov
pop
cmp
arpl
js
pop
icebp
mov
jbe
daa
cmp
scas
test
and
lcall
dec
cld
inc
pop
sbb
sub
push
outsb
xor
cmp
push
out
cmc
outsl
adc
pop
sti
shlb
test
imul
in
int
imul
or
int3
int
sub
imul
dec
addl
cmp
je
pop
daa
cld
xor
adc
mov
mov
stc
outsb
test
cmp
jbe
xchg
leave
ja
dec
mov
fwait
shll
jle
loopne
or
jne
popf
cmp
cmpsl
and
inc
scas
fsubrs
lods
daa
pushf
int3
scas
add
shrb
add
mov
xor
pop
mov
jne
adc
dec
daa
out
pop
adc
mov
jae
rcll
dec
out
push
imul
mov
mov
out
adc
sahf
inc
into
sbb
pop
movsl
add
mov
sbb
pop
push
dec
pop
cmp
ljmp
outsb
clc
fldln2
add
outsb
xchg
mov
sub
sbb
sub
cwtl
pop
clc
fsubl
xor
cs
sub
mov
sbb
xchg
mov
fidivrs
jbe
pop
shlb
sti
loop
icebp
mov
or
les
arpl
ds
xor
cld
and
shll
clc
inc
dec
cmpsl
push
movsl
mov
mov
push
jmp
test
pushf
mov
sarl
insb
sbb
xchg
sub
das
out
or
add
out
bound
mov
sub
arpl
rorb
stos
fisubrs
cmp
jmp
jle
xchg
push
xchg
and
xchg
xor
fcompl
mov
pusha
mov
mov
and
mov
int
fldcw
inc
push
cmp
push
scas
pop
sbb
add
inc
or
in
dec
mov
mov
subps
mov
sbb
push
ss
and
jge
xchg
push
test
mov
mov
int3
arpl
xchg
add
add
mov
jecxz
les
lahf
scas
and
inc
adcl
aam
sbb
aas
pop
xchg
aaa
xchg
int
cmp
sbb
loope
sysret
test
adcl
sub
adc
ret
cld
fildll
insl
pop
add
adc
mov
mov
sub
xchg
pop
jl
push
shlb
or
pop
pusha
test
jge
sbb
add
sub
add
adc
lret
mov
rclb
adc
add
je
push
jle
and
sahf
mov
adc
out
shlb
pop
rol
cmovno
aas
fnsave
push
ljmp
shll
jp
repz
add
push
push
add
fcmovb
popa
cli
insl
inc
mov
add
call
jg
cwtl
rorb
movb
push
out
inc
nop
push
rcrb
inc
adc
jns
mov
push
imul
test
rol
push
lahf
fstp
fldenv
sarb
insl
xor
fnstenv
mov
cmp
xor
xchg
lcall
repz
push
pop
fnstsw
xlat
or
push
fcomi
pop
fdivrl
bound
or
mov
in
cmp
push
sbb
lds
push
cld
rol
cmp
cmp
imulb
push
pop
jecxz
iret
jle
mull
pop
pop
sbb
or
jnp
data16
fidivrs
pop
mov
pop
sbb
mov
sbbb
loope
fsubr
repz
subb
mov
jecxz
jne
push
mov
nop
outsb
shl
dec
imul
xchg
fildll
sub
sub
sub
shl
xor
push
inc
cmp
inc
jge
data16
fs
fists
testb
sub
push
icebp
pop
shlb
sbbb
add
push
lods
out
cli
mov
fwait
add
sarl
inc
repz
aad
lea
insl
in
lcall
stos
sub
out
ljmp
test
sti
dec
movsb
popa
push
sub
mov
sub
cltd
mov
xchg
leave
ja
push
inc
mov
xor
add
and
mov
mov
and
repz
pop
and
pop
jecxz
jp
jl
clc
in
xlat
in
aaa
mov
aad
push
pop
jae
push
dec
push
or
ljmp
pop
pushf
pusha
outsb
sub
mov
pop
shlb
cmp
iret
icebp
movsb
pop
lahf
or
pop
jne
inc
sub
sbb
jbe
or
cs
fidivl
jae
xor
pop
push
loop
sub
out
pop
mov
mov
mov
mov
mov
jnp
shrb
add
movsb
mov
fildll
hlt
jecxz
outsl
pop
mov
dec
mov
dec
mov
in
pushf
shrl
push
movsl
or
shrl
mov
xchg
aaa
div
aam
sbbb
mov
jbe
push
jo
push
or
xchg
sbb
cmp
stc
sahf
push
xchg
adc
ja
xchg
push
aas
fstl
in
addl
mov
mov
icebp
movsb
sahf
mov
andl
stos
popf
push
jae
stos
push
pop
pop
push
add
dec
mov
sub
decb
push
jnp
jbe
mov
dec
or
imul
adcb
in
mov
daa
loopne
icebp
push
xchg
mov
enter
imul
adc
repnz
loope
xchg
xor
jne
xchg
mov
int
clc
jp
int
dec
popa
lods
pop
bound
push
pop
lcall
pop
jno
fists
fmuls
cmpsb
mov
jmp
cmc
jl
or
or
fdivrs
mov
mov
sub
sub
mov
cmp
push
movsb
loope,pt
and
push
test
lock
dec
xchg
xor
mov
and
out
or
enter
inc
cmp
cli
xor
movsb
lcall
out
and
adc
fisttps
mov
mov
js
sub
addr16
xchg
pop
xor
mov
nop
sahf
xchg
in
repz
sbb
movsb
roll
ret
push
dec
inc
orb
flds
inc
cmp
js
rolb
sbb
mov
push
cmp
daa
mov
sub
aaa
bound
dec
pop
xchg
and
or
fldenv
inc
mov
outsb
mov
sbb
and
cmp
les
xchg
push
or
jp
or
add
push
ret
cmpsb
sbb
fwait
cmpsb
mov
pop
inc
cmp
mov
push
sub
pop
add
popa
pop
mov
lods
hlt
lods
test
inc
call
push
ficoml
xchg
sbb
out
enter
outsb
dec
scas
test
jmp
daa
cmp
pop
sub
push
sahf
pop
jns
and
gs
xchg
out
mov
dec
movsl
pop
cmp
fldt
mov
sbb
cmpsl
imull
sub
lds
jo
cmpsl
push
cmpsb
mov
shrl
stos
or
mov
mov
test
jmp
sti
bound
int3
xorl
sub
push
push
arpl
sti
lahf
or
cmp
pop
mov
movsl
xchg
dec
mov
icebp
hlt
hlt
nop
mov
mov
mov
mov
mov
sahf
sbb
movsb
mov
imul
push
dec
sbb
inc
fstps
notl
adc
or
mov
repnz
and
push
xor
sbbl
lods
jge
movsb
outsl
mov
mov
inc
push
lcall
and
sbb
cmpl
mov
mov
jo
loopne
fsub
adc
ds
xchg
mov
push
cmp
fidivl
push
sbb
stc
ds
xchg
mov
adc
dec
outsl
cmp
mov
insl
add
inc
sbb
mov
sub
push
inc
imul
out
test
decl
inc
mov
mov
jnp
aaa
bound
sub
pusha
jae
arpl
add
insl
int3
out
pop
clc
data16
rcrl
push
pop
mov
jmp
add
push
lcall
out
dec
xchg
lock
mov
cmp
outsb
icebp
adc
xchg
mov
fcoms
movsl
ja
into
dec
insl
adc
mov
mov
adcl
rclb
mov
stos
lahf
adc
scas
mov
rcll
pop
sbb
sub
jne
shl
jo
mov
fstl
out
jge
mov
jnp
cmp
sub
push
mov
cmp
lcall
lds
jo
iret
lahf
insb
jecxz
and
es
mov
dec
mov
in
sbb
dec
cmc
xor
dec
push
data16
adc
scas
add
jns
aad
pop
or
in
pushf
int3
xor
pop
inc
pop
pop
xor
les
scas
sti
scas
outsl
outsb
arpl
inc
clc
popf
push
loope
or
js
lods
push
add
imul
cmp
insb
pushf
sub
sbb
call
icebp
rcrb
cwtl
out
mov
mov
push
push
mov
xor
pop
enter
mov
push
aam
scas
lahf
cmp
mov
data16
out
xchg
sub
mov
stc
xchg
mov
loope
pop
push
jno
xor
mov
fdivrs
cmp
push
jge
push
sub
je
mov
sub
push
cli
cwtl
adc
pop
int3
push
loope
inc
sbb
into
adc
ror
mov
movsl
in
inc
sub
out
rolb
vcvtdq2ps
mov
jo
xchg
mov
fcom
mov
mov
imulb
push
mov
xor
add
int3
sub
outsb
stos
inc
dec
rcl
lcall
sub
cmp
adc
iret
out
mov
mov
cs
push
xor
rcrb
mov
dec
mov
cmpsl
pop
out
loop
cmp
inc
mov
xor
push
push
or
cmp
icebp
shrl
pop
mov
popa
dec
ret
jne
xor
mov
push
rolb
cmp
in
xor
lea
daa
xchg
mov
cmp
dec
dec
dec
mov
cmp
jmp
ljmp
nop
xlat
adc
fs
sub
dec
xchg
dec
pop
lea
mov
rcll
gs
out
mov
out
xlat
movsl
test
lret
inc
cmp
fsts
ds
mov
push
sbb
test
inc
out
xlat
out
enter
add
test
stc
adc
xor
pop
les
dec
jl
and
mov
hlt
popl
in
aaa
xchg
sbb
nop
cli
fsts
push
shrb
jb
in
cmpsl
jae
lock
or
cmp
lea
cmpsl
mov
sbb
enter
or
fwait
pop
adc
je
fcoml
or
xchg
bound
pop
dec
sub
es
pusha
fiaddl
mov
mov
popa
fmul
cli
fnstenv
jbe
adc
add
push
stos
sti
insb
jp,pt
pop
mov
dec
ret
mov
jmp
cmp
out
movsb
imul
mov
sub
sbb
nop
jbe
cmp
call
push
aaa
outsl
jae
sub
push
pushf
push
addr16
cmpsb
add
jle
add
das
daa
popf
pop
mov
dec
push
mov
es
and
jge
inc
fsts
ljmp
adc
dec
and
mov
jne
mov
in
rcrl
rcrb
mov
popl
pushf
ficomps
in
and
pcmpgtb
cmp
cmp
xor
and
push
mov
dec
dec
mov
scas
mov
push
add
mov
fstpt
stos
sub
or
push
jle
fidivrs
mov
les
hlt
and
shll
loopne
cltd
notl
fisubs
mov
stos
jge
or
xor
cmp
jg
sbb
sbb
add
arpl
jnp
push
int
je
fwait
push
stc
mov
pop
and
cmpl
mov
dec
push
jno
das
pop
shll
pop
addr16
stos
inc
inc
xor
mov
push
fwait
push
into
stc
jbe
add
mov
push
or
cmpsb
loop
jbe
loopne
jnp
outsb
cld
xchg
jle
jb
adc
mov
mov
mov
xchg
xchg
cmpsl
cmp
push
test
lock
or
sarb
push
inc
lods
push
add
das
and
cmp
xchg
out
in
sub
mov
xchg
push
inc
stos
jmp
insl
les
pop
push
add
xchg
mov
lods
shrb
jmp
mov
and
xchg
cmp
or
add
push
outsl
in
test
lods
dec
inc
add
das
sbb
fistpl
mov
daa
jg
jmp
jecxz
mov
cld
push
test
testb
inc
nop
xor
pop
push
pop
xor
pusha
ret
xchg
add
iret
insb
outsl
lods
aas
ret
fldenv
repnz
jp
jbe
inc
out
inc
test
enter
popa
xor
popf
arpl
adc
pop
shrb
mov
sub
inc
sbb
mov
fst
and
and
sahf
fcoms
jp
out
xor
push
cmpb
cmpsb
pop
and
adc
push
mov
add
ret
xor
xchg
inc
hlt
mov
lret
cld
mov
fwait
push
mov
fidivrs
movsb
lds
or
pop
popf
stc
inc
sbb
aad
repz
lcall
adc
xchg
popa
movsl
or
rolb
cmpsl
push
xchg
push
arpl
insb
push
fstpl
fistpl
ds
aam
mov
jns
sarl
push
or
dec
mov
js
mov
in
je
arpl
jb
into
popf
int
mov
fs
fsub
leave
cmp
popf
dec
cmp
stc
fnstsw
call
ds
in
in
pop
xor
inc
es
xchg
pop
add
in
repz
ror
bound
aas
pop
aad
jbe
xchg
and
stc
inc
mov
dec
fiadds
je
cmp
iret
aaa
lahf
or
pop
fdivrs
pushf
jo
lcall
xor
test
rorb
jmp
lret
out
adcb
push
cld
outsl
cwtl
xor
sub
in
clc
iret
add
mov
xchg
cmp
jne
ss
jns
xor
or
jg
test
fbld
aaa
lcall
push
in
xchg
xchg
das
outsb
pop
lahf
push
mov
sbb
push
outsl
push
or
mov
mov
pop
pop
ret
add
out
out
repnz
mov
lahf
repz
fnsetpm(287
adc
sahf
sbb
sbb
inc
movsb
int
and
loop
xor
icebp
mov
pop
mov
sahf
sbb
mov
sbb
leave
add
out
add
fiadds
mov
inc
outsl
push
or
push
or
dec
add
push
mov
repnz
fwait
dec
int3
add
pop
sbb
cmp
xchg
jae
cld
int
jae
movsb
cli
shr
out
rclb
and
fwait
mov
sbb
add
inc
mov
neg
jecxz
sbb
xchg
ror
fisubrs
test
les
sbb
sbb
vshufps
rclb
aam
fiadds
es
pushf
sbb
jb
ss
or
mov
sub
xchg
aaa
out
sbb
rcrl
push
shrb
jb
fimuls
popa
or
xchg
dec
call
outsb
inc
cs
shll
pop
imul
test
jle
mov
mov
dec
pop
mov
xor
call
xchg
pop
xor
out
shll
mov
cmp
jge,pn
pop
nop
mov
ret
adc
cmp
jecxz
sub
add
push
mov
adc
sarl
push
mov
lret
je
mov
out
jne
cld
cmp
insb
cmp
dec
dec
add
test
mov
mov
dec
mov
cmp
xchg
es
imul
jg
lock
enter
in
cld
mov
lods
test
add
mov
lods
fmull
pop
popf
cmpsb
jnp
arpl
in
outsb
fdivr
es
pusha
inc
popf
ja
ficoml
sub
xchg
cltd
mov
cmp
insb
or
aam
mov
mov
in
test
xor
mov
sbb
and
into
mov
adc
add
push
inc
or
addr16
mov
inc
push
call
cmpsl
ds
cmc
sub
loope
repnz
rcrb
lods
addr16
addr16
mov
scas
ds
push
dec
fsub
sub
lods
out
adc
adc
pop
in
lock
jbe
lret
out
int
sbb
add
pop
in
push
jp
cmp
out
jae
outsb
cmpsl
xchg
lods
std
jns
lcall
or
xchg
mov
icebp
or
push
sbb
shlb
jnp
xor
xchg
push
cmp
jbe
xchg
sahf
mov
jl
push
pop
mov
in
inc
push
mov
xchg
lahf
mov
mov
rorb
sub
into
clc
xor
int3
cmpsl
lods
lea
or
stos
sbb
adc
insl
sub
pop
mov
outsl
and
movl
je
sbb
dec
and
into
jecxz
inc
or
inc
out
xor
cmp
or
or
in
add
cmp
jb
push
jae
jbe
jnp
into
cmp
push
sub
adc
or
movsl
add
pop
out
gs
shll
ret
xor
sbb
add
sarl
call
mov
ret
dec
ljmp
mov
cmove
mov
cld
cmp
cltd
rcrb
jo
outsl
jne
das
adc
jle
in
test
cltd
pop
dec
or
scas
fisubrl
sbb
imul
cmp
fnsave
js
int
xor
lods
mov
fsub
fldcw
lcall
outsl
das
aaa
sub
sbb
stos
js
je
or
fistpl
mov
flds
mov
in
or
push
mov
adc
mov
mov
faddl
mov
mov
mov
mov
outsl
xlat
mov
sahf
insb
je
jns
dec
inc
out
mov
vcvtps2dq
cmp
dec
imul
insb
cmc
xchg
sti
out
stos
inc
lock
pop
jbe
xchg
in
xchg
lret
or
or
sbb
movsl
xchg
aam
xchg
xor
push
mov
add
int3
cli
mov
xor
pop
or
cmpsb
ljmp
movsl
jno
es
and
mov
xor
adc
push
cs
daa
push
mov
mov
das
stc
gs
loope
push
stos
pusha
ljmp
movsl
out
and
push
scas
or
push
fdiv
jnp
movb
sar
mov
sbb
rol
int3
mov
xor
mov
mov
add
dec
push
dec
in
sarb
adc
aad
or
aaa
fildll
das
out
mov
js
pusha
cmpsb
add
lcall
fadd
or
jecxz
ss
sub
into
push
xchg
and
cltd
mov
or
fucomip
dec
lods
movsb
lea
inc
dec
in
sub
mov
mov
jae
sub
fdivl
sbb
in
repz
sti
test
jbe
xchg
arpl
push
into
jecxz
pop
sbb
adc
mov
fiadds
test
and
outsb
pop
cmp
stos
pop
adc
xor
cmpsb
sbb
fimuls
movsb
push
mov
lret
cwtl
in
sahf
subb
sbb
push
in
fidivrs
mov
jmp
int
rcrb
push
aam
mov
dec
aas
jge
dec
adcb
xchg
mov
cmpsl
iret
std
test
out
jl
das
mov
sbb
cli
mov
stos
int3
icebp
jne
push
out
ret
sub
loope
int
repnz
or
jae
into
addr16
ljmp
bound
pushf
jmp
add
pop
loop
xor
icebp
stos
popa
mov
std
push
cmp
cmpb
jmp
cmpsl
mov
pop
cmpsb
lods
ficomps
mov
cltd
push
jbe
movsl
jmp
cmp
push
loop
loopne
xor
mov
sbb
lahf
pop
inc
xchg
xorb
or
in
mov
fcompl
ja
jle
aad
ds
cld
das
push
xor
push
stc
cs
push
adc
hlt
fisubrs
loope
nop
cltd
arpl
inc
xor
adc
xchg
mov
jb
lock
sub
cmpsb
mull
and
add
inc
iret
mov
aam
clc
inc
xchg
or
shl
and
lods
pop
gs
mov
xor
dec
push
int
or
mov
pop
or
cmpb
or
and
xor
nop
jl
cmp
ss
adc
and
hlt
sub
cmp
call
cmp
cmp
ss
push
add
insb
mov
cmpl
dec
sbb
and
cmp
adcl
addb
mov
and
stos
xor
push
testb
test
ja
sbb
and
lods
mov
xchg
ret
scas
cmp
fsubs
inc
mov
out
shl
fdivrs
incl
xor
cltd
int
test
mov
sti
sbb
pop
xor
and
into
cmpsl
sbb
mov
mov
clc
inc
cmc
test
scas
add
movsl
jmp
push
testb
and
dec
loop
cmp
adc
lret
frstpm(287
and
loopne,pn
lret
mov
mov
jmp
jb
inc
mov
idivb
lods
fwait
lahf
je
mov
lock
sbb
into
cmovo
outsl
fwait
mov
pop
mov
pop
cwtl
push
pop
idivb
jge
push
lcall
push
out
int3
sub
push
sub
popf
or
pop
jae
js
imul
lret
mov
jbe
lret
pop
jo
jecxz
lret
mov
fdivp
adc
and
mov
orb
dec
or
pop
out
sub
jl
mov
xchg
je
and
mov
jno
hlt
in
cmp
popf
cmpsb
jl
aam
ja
sbb
popa
shlb
or
cmp
in
jbe
mov
inc
add
pop
push
in
jmp
leave
mul
and
mov
mov
fwait
or
jmp
mov
mov
insb
push
sub
jp
dec
cmp
leave
loope
aas
and
jle
movsb
es
leave
pushf
pop
imul
adc
push
ds
sub
jmp
popa
fucomi
cld
pop
out
enter
add
jbe
sbb
mov
xor
lret
dec
sarb
and
mov
push
jbe
js
movsb
adc
test
xor
jge
aaa
hlt
mov
sub
imulb
sbb
mov
stos
scas
xchg
dec
xchg
ds
std
xor
and
aas
adc
lcall
mov
and
loope
xchg
xor
call
fsubrl
mov
jle
cmpsl
jns
aaa
out
mov
rolb
mov
in
and
mov
clc
or
int3
xor
add
mov
jb
seta
mov
pop
aam
aad
pop
into
insl
out
ret
mov
xor
and
inc
inc
push
shlb
test
fsubrl
adc
xchg
sahf
loopne
popa
and
sarl
cmp
mov
inc
lret
xor
scas
xor
jmp
movsbl
xchg
pop
mov
sub
pusha
repnz
enter
cmpsb
mov
lret
repnz
ficoml
scas
and
pusha
jge
pop
loop
dec
xchg
or
push
jle
xor
dec
or
inc
mov
popf
insb
leave
mov
xchg
mov
pop
add
insl
imul
call
stos
lret
mov
repnz
sub
daa
dec
mov
jnp
ret
adc
or
push
lods
mov
ja
jo
outsl
sbb
and
aaa
inc
stc
out
jns
icebp
push
loopne
dec
fbld
mov
mov
xor
jmp
xchg
test
call
das
cs
pusha
mov
scas
cmp
sbb
sbb
adc
shlb
loop
cmc
int
in
fcmovnbe
inc
push
pusha
pop
fcoms
jns
add
xchg
aaa
fisubrl
loope
mov
pop
fidivrl
stc
inc
stos
add
cld
fisttpl
jb
inc
in
ss
add
dec
fsubrl
inc
and
lods
scas
in
gs
pop
sub
sbb
inc
jo
pop
shr
lcall
loop
sti
enter
or
insl
push
jp
stos
sub
add
sbb
les
mov
push
push
enter
jnp
or
sub
pop
jle
es
fisttpl
test
jbe
cmp
aam
sahf
xchg
nop
ret
jnp
dec
pop
dec
jl
push
cmpsb
jg
out
lods
xor
stc
adc
add
sbb
jge
cmp
cwtl
xchg
outsl
cmp
jbe
aam
xchg
aad
lods
sbb
adc
imul
jnp
test
popa
aas
rcrl
inc
inc
cld
sbb
pop
insl
pop
out
fistps
imul
loop
xor
stos
lret
das
xor
lea
jo
loope
mov
sbb
pop
adc
fisubrs
or
xor
xchg
aaa
int
and
adc
ja
jp
mov
sub
dec
leave
and
or
mov
loopne
idivl
sbb
fsub
pop
mov
inc
fstl
mov
push
dec
jecxz
add
jl
and
inc
lds
cli
jae
leave
inc
imul
ffree
mov
dec
cmpsb
cwtl
and
lock
ret
ljmp
aam
push
lea
popf
inc
mov
ss
pop
fnstsw
aad
xchg
lods
and
cmp
fdivs
rorb
pop
adc
rcll
ja
jne
loope
cwtl
sbb
adc
jb
ljmp
sbb
xchg
rcl
subb
push
cs
add
jnp
push
popa
cmp
rolb
push
add
xor
or
icebp
or
jg
mov
lods
inc
pop
adc
fnstenv
fidivs
cmpsl
pop
stos
test
sarb
and
int3
xchg
sbb
sub
jo
mov
sub
xor
cmp
movsb
fmul
push
and
addr16
mov
push
fwait
push
call
fisttps
push
add
outsb
pop
daa
call
js
test
adc
out
and
std
inc
xchg
inc
aas
sti
add
pop
scas
inc
inc
lret
mov
adc
push
push
repz
adc
jge
insl
fcmovbe
xor
subb
loope
and
ret
xchg
pop
push
dec
mov
mov
and
js
pop
jle
pop
mov
or
js
sahf
les
fcomi
and
lods
mov
lret
pop
lret
enter
or
fincstp
cmpsl
insb
int
popf
add
je
loop
cmp
mov
fdivp
xor
xchg
outsl
iret
mov
add
test
adc
lods
in
push
jbe
mov
dec
inc
mov
in
movb
pop
out
push
or
and
sub
mov
inc
jge
or
and
lret
lahf
inc
fsubl
jno
cld
sub
push
push
sbb
xchg
mov
out
mov
ficoml
popa
div
xchg
out
movsl
lret
inc
addr16
je
lds
cmp
and
adc
mov
imul
xlat
test
jg
das
movsl
and
adc
add
push
xor
sbb
mov
and
push
xchg
lahf
lret
add
leave
es
gs
dec
mov
jl
jae
and
arpl
fldl
add
adc
aaa
mov
into
push
xchg
ja
pop
push
clc
fsub
lods
add
mov
mov
into
and
xchg
sub
lret
jns
sbb
xor
into
stc
dec
or
cld
dec
jmp
push
rcll
sub
aas
mov
loop
sbb
int
xor
cmc
mov
arpl
jns
push
sbb
and
call
add
movsl
cmp
mov
fcmovbe
fincstp
or
xor
mov
cs
mov
dec
jns
cmpsb
fimull
lcall
ds
sub
or
dec
xchg
mov
lcall
int
enter
push
sbb
clc
ljmp
lcall
bound
xchg
je
jbe
outsb
sbb
hlt
outsl
inc
gs
aam
lds
mov
cmpsl
ret
pop
xor
fstpl
mov
mov
in
mov
popa
inc
es
push
insb
ss
push
jo
jle
push
loop
cmc
inc
jo
dec
mov
gs
jge
cs
cmpsb
fnstsw
adc
outsl
mov
cwtl
xor
pop
xchg
or
and
sub
loopne
push
addb
push
xor
shll
cltd
mov
pop
adc
loopne
pop
insb
and
or
ret
or
sbb
inc
test
in
adc
jecxz
xchg
das
cmp
mov
loope
enter
mov
and
sub
inc
dec
and
cs
push
mov
ret
or
aad
pop
lods
lea
cld
or
or
incw
bound
add
fwait
push
mov
mov
movsb
cmpsb
inc
pop
cwtl
mov
jmp
pop
stos
and
sbb
shrb
call
jb
enter
inc
rolb
int
sub
push
adc
leave
sar
mov
sub
pop
sub
aad
add
fcmovb
mov
adc
adc
dec
add
pop
mov
and
mov
pop
inc
aas
xor
iret
aad
adc
mov
shll
dec
inc
mov
test
cmp
add
aam
sti
es
jmp
dec
jecxz
lods
insl
cmp
sbb
mov
inc
pop
adc
les
popa
leave
and
push
fsubp
xchg
aad
mov
clc
and
mov
jnp
jne
out
mov
dec
fsts
leave
mov
andl
jne
iret
mov
push
mov
aas
mov
mov
xchg
les
inc
insl
add
inc
int3
sbb
mov
cli
sub
and
pop
popa
dec
cmpsl
mov
in
nop
fdivrl
dec
pop
daa
sub
enter
outsl
add
fdivr
popf
mov
cmp
mov
xchg
push
daa
xor
mov
and
adc
notb
xor
dec
loope
mov
aad
jne
mov
mov
mov
pop
popf
dec
scas
or
popf
and
test
and
aas
xchg
or
inc
jp
stos
add
aaa
and
popa
adc
and
mov
xor
add
adc
ret
fbld
push
loop
test
inc
nopl
insl
ret
adc
pop
and
mov
and
adc
sbb
or
mov
mov
cld
sti
jp
mov
push
add
dec
push
jne
xchg
pop
sub
lods
dec
cmp
sub
push
push
pop
or
push
mov
sub
dec
jl
incl
adc
xor
dec
add
mov
fiadds
lea
aas
or
js
fildl
adc
mov
aas
fcompl
jl
cmp
cs
loop
clc
cmp
cmc
rcrl
push
lcall
and
cwtl
insl
dec
mov
sahf
mov
xchg
or
imul
sub
jo
push
dec
outsb
inc
popa
push
test
ljmp
adc
jbe
fcomps
popa
in
js
pop
xchg
stos
imul
sbbl
or
adc
int
adc
pop
scas
loopne
js
xchg
es
or
rcll
sti
insl
sbb
sub
loope
push
dec
arpl
xchg
pop
outsl
sti
sub
mov
ficoml
nop
and
mov
and
sahf
cwtl
mov
shlb
fwait
inc
cmp
mov
movsb
lret
nop
xchg
and
mov
cmpsb
inc
fists
dec
shlb
andl
xchg
cmc
xchg
jbe
subl
pop
push
and
fucom
xor
push
sbb
test
and
mov
or
jb
inc
lret
push
mov
pop
fucom
cmp
or
enter
mov
stc
mov
enter
inc
xor
push
popf
dec
xchg
xchg
fnsave
inc
pop
les
mov
mov
mov
jne
mov
sub
sbb
adc
in
cmc
cmp
pop
cld
jg
rol
adc
shrb
aaa
inc
in
fucomp
lea
pop
mov
call
cs
rolb
jb
mov
pop
inc
decl
lods
outsb
cmp
pop
pop
and
arpl
add
or
adc
movsb
push
testl
cmpsl
push
xchg
popa
cli
ja
jns
jne
fbstp
scas
add
jle
mov
cmp
jmp
xor
xchg
dec
outsl
inc
or
pop
test
adc
lret
or
dec
inc
ret
dec
push
js
sub
sarl
wrmsr
sbb
loopne
mov
cmp
jb
add
test
sbb
mov
add
leave
enter
lret
inc
fdivs
ja
movsb
mov
push
sbb
mov
loop
dec
aaa
xor
aas
and
clc
push
push
jecxz
dec
icebp
pop
xor
cld
fsubrp
push
jne
jns
mov
and
icebp
jp
daa
data16
ret
int
mov
xchg
push
xor
popf
sub
push
xchg
cmp
fnsave
out
pusha
pop
stos
into
add
daa
cmpsl
arpl
sbb
add
jae
das
andl
cmp
cli
xchg
aam
cmc
push
jns
lret
cmpxchg
inc
test
dec
outsl
cmp
adc
jg
imul
js
mov
ret
out
dec
insl
xchg
fndisi(8087
ljmp
jge
push
int3
xor
fisttpll
pop
sub
int
scas
loope
push
fs
ss
ror
xor
jae
lods
jb
sub
out
cli
mov
xchg
and
push
pop
aad
test
paddsw
rclb
jecxz
lods
and
lea
mov
inc
cwtl
es
mov
shll
or
lods
testb
cmp
push
jb
lods
popf
sbb
pop
outsl
in
loop
sahf
js
sub
mov
scas
icebp
adcb
or
xchg
mov
xor
pop
movb
add
cmp
std
mov
dec
insl
cmp
sub
mov
jnp
inc
push
ja
add
and
inc
call
jne
cmpsl
xchg
xor
daa
js
push
sbb
les
cmc
inc
inc
push
imul
mov
push
inc
push
pop
inc
xor
xor
pop
fnstsw
jns
dec
ja
sub
ljmp
into
outsb
mov
ljmp
lret
pop
loope
mov
cmpb
popf
push
lea
jmp
mov
test
push
xor
jecxz
jae
xchg
call
inc
pop
pushl
mov
jmp
sti
xorb
mov
insb
dec
sub
inc
jl
in
mov
jg
xchg
mov
and
mov
inc
cmp
push
cmp
shlb
ja
aaa
sub
adc
push
test
repz
daa
jae
pop
push
iret
fdivrp
sbb
xchg
les
or
xorb
cmp
in
add
and
sti
and
ja
scas
cs
movsb
cmp
test
subl
stc
pandn
inc
xor
insb
es
xchg
ror
mov
xchg
push
cmp
sahf
pop
shlb
pop
jnp
push
insb
sub
add
inc
shlb
adc
dec
push
push
gs
xchg
dec
jb
out
outsl
inc
repz
push
cmp
adc
movb
sarl
sarb
jecxz
mov
ss
jns
aad
add
pop
pop
cmc
inc
divl
repz
jge
pop
mov
stc
inc
push
lea
sub
dec
sub
aam
xor
int3
gs
mov
test
push
or
and
pop
aad
inc
sub
out
sti
inc
jmp
notl
icebp
push
icebp
mov
out
in
call
fsub
insl
push
xlat
pop
mov
ret
mov
push
sub
or
xchg
enter
sbb
cmp
and
jne
nop
mov
out
ret
jg
inc
adc
add
or
idiv
jmp
mov
daa
jmp
pop
or
shlb
bound
pop
or
sbb
push
popa
sbb
out
fs
cmc
outsb
mov
call
dec
mov
dec
sub
xor
sub
jb
lods
les
leave
or
out
arpl
lods
dec
mov
xchg
mov
in
pop
inc
inc
mov
inc
rcl
mov
adc
out
test
nop
test
pop
inc
and
int
mov
mov
movsl
pushf
aas
or
push
std
mov
push
lods
ficomps
cmp
and
arpl
sub
repz
fistps
mov
pop
cld
mov
mov
and
movups
clc
push
cli
lods
cmp
lret
mov
icebp
test
adc
test
cmc
jg
mov
stos
test
mov
push
in
mov
stos
fimull
mov
aad
sbb
mov
daa
orl
sarb
add
mov
stc
add
mov
sub
pusha
cmc
addb
imul
sahf
outsl
dec
cli
adc
xor
xor
sbb
cmp
loope
mov
or
jge
sbb
pop
add
scas
sub
sbbb
sti
cwtl
inc
inc
mov
adc
mov
arpl
pop
mov
mov
aam
loop
push
lcall
dec
sbb
out
xor
repnz
push
into
outsb
test
lret
mov
insl
jno
mov
xchg
stos
lea
or
xchg
inc
cmp
dec
ja
fidivl
fisubrl
mov
ja
hlt
sub
in
repnz
xor
nop
xchg
jo
sbb
lock
xchg
fbld
inc
mov
mov
faddl
mov
mov
lds
mov
mov
stos
stos
pop
aaa
add
jl
stos
int
cmp
or
mov
jno
mov
aam
cli
mov
repz
add
shlb
push
lock
pushf
incb
jmp
jne
sub
xor
or
mov
insl
lock
push
sbb
pop
fcmovne
and
jle
cltd
pop
stc
mov
lahf
std
or
orb
xor
cs
movsb
arpl
mov
fwait
inc
call
pusha
adc
dec
rorb
xor
sub
mov
pop
cmp
clc
subl
dec
jno
add
divb
adc
icebp
pop
dec
xor
subl
mov
insl
call
in
sbb
div
mov
xor
cmc
std
addr16
add
aaa
lods
dec
mov
jp
and
lock
rolb
test
out
test
cmc
xchg
mov
imul
mov
outsb
fnstsw
cmp
std
das
inc
in
add
push
call
ret
or
popf
and
insb
sbb
and
cmp
cmp
cwtl
daa
out
jmp
or
pop
mov
cmpsb
pop
inc
fidivrs
inc
repnz
cltd
mov
push
jmp
roll
cmp
mov
inc
js
in
fwait
bound
sar
sub
cmp
subl
rep
cmc
subb
or
mov
push
test
sub
mov
push
iret
dec
mov
xchg
hlt
xchg
divl
cltd
xchg
and
hlt
cwtl
mov
inc
dec
xchg
xor
lods
sub
adc
jo
loopne
and
cld
or
loop
adcl
out
sub
mov
notb
dec
sti
xor
jo
leave
add
call
jg
cmp
jno
mov
shlb
fcoms
fs
outsl
xor
inc
mov
aas
mov
jl
sub
jg
popa
lods
ja
rcrl
dec
mov
outsb
jmp
jo
lahf
pop
mov
and
jno
inc
das
xor
cltd
loopne
add
aaa
jge
jnp
cmp
fiadds
aam
mov
daa
sbb
jnp
jge
add
out
pop
xchg
mov
bound
sub
fisubrl
jnp
mov
mov
outsl
addr16
sub
lret
loop
cmp
pop
sub
adc
dec
lret
xor
mov
out
mov
hlt
adc
sbb
push
rorb
les
jnp
mov
mov
aam
or
xchg
outsl
call
jmp
pop
and
pop
pop
pop
addr16
je
dec
fisttps
sub
push
mov
ds
int
fistl
ficoms
jne
and
mov
or
out
lret
iret
outsb
fldt
inc
dec
and
and
clc
test
sub
push
out
jo
mov
jg
push
hlt
or
lret
and
stc
subb
lods
pop
xchg
jno
mov
in
adc
cmpb
les
jae
xor
sbb
mov
xor
sbb
inc
or
xchg
cli
jmp
iret
pop
sub
sti
add
mov
lcall
lds
jbe
hlt
scas
pop
pop
cltd
mov
mov
dec
push
xor
les
hlt
lcall
mov
cmpsl
cmp
std
das
fwait
int
sarl
fwait
loop
adc
xor
add
test
aas
sub
and
jge
sbb
or
test
push
adc
fwait
push
cmp
cmpsl
stos
aaa
aad
mov
sub
mov
stc
lock
arpl
in
movsl
js
jge
pop
movsb
xor
test
sbb
xchg
jno
popl
in
dec
lret
mov
xor
push
dec
sub
ds
ret
push
and
cltd
shrb
shll
pop
es
pop
fs
mov
jle
mov
inc
inc
clc
gs
and
cmpl
mov
fisttps
add
jnp
pop
push
cmp
mov
cmp
sahf
outsb
in
xor
dec
jo
dec
jmp
inc
push
xorl
adc
mov
jl
or
aas
push
adcb
sahf
mov
pop
test
mov
js
popf
lods
add
sbb
pop
daa
add
dec
scas
pusha
adc
pushf
pop
lods
mov
adc
cmpsb
lock
mov
pop
pop
rcll
repz
jo
sbb
or
lds
jmp
or
sub
les
fwait
xor
insl
cmp
mov
cmp
xchg
dec
adc
cmp
jo
and
or
push
outsb
mov
pop
cmpsl
sub
and
pusha
dec
and
fxch
jmp
sbb
stc
inc
add
repnz
roll
in
popa
lock
mov
orb
je
popf
adc
sbb
adc
loopne
xor
movsl
bnd
xor
sbb
push
jge
loope
or
cmp
or
or
popa
into
arpl
ljmp
into
xchg
test
cmpsl
xor
fdivr
call
cli
outsb
fdivs
push
repnz
xor
add
mov
inc
mov
dec
jg
xchg
pop
lods
mov
imul
mov
pop
imull
sub
ljmp
xor
movsl
sti
xor
push
hlt
je
jae
insb
push
sbb
imul
cmp
lock
mov
nop
out
adc
push
cli
gs
cmp
loopne
dec
mov
or
les
in
movsl
pop
ja
aaa
jecxz
lahf
pop
fs
jnp
adc
or
pop
lods
es
outsb
out
dec
push
and
movsl
push
addl
sti
cmp
push
fwait
sub
mov
xor
dec
aad
aaa
sbb
inc
outsl
push
insl
mov
out
add
testl
mov
add
jl
lea
xchg
adc
daa
arpl
out
xchg
sbb
inc
hlt
xchg
imul
inc
shl
leave
cmc
test
fiadds
repz
push
mov
loopne
repnz
sub
stos
dec
in
lods
sti
dec
adc
push
js
imul
sbb
adc
or
shl
aas
adc
pop
or
shll
gs
xor
mov
int3
mov
sti
add
sbbl
push
test
pcmpeqb
scas
mov
movsl
ret
ljmp
mov
out
aam
add
ja
pop
jge
pop
dec
push
cmp
js
sbb
and
insb
dec
xchg
adc
jbe
add
or
sub
inc
push
mov
mov
xchg
mov
mov
je
add
lods
jnp
lds
out
or
mov
xchg
movsb
fwait
movsl
jmp
inc
inc
mov
es
inc
mov
bound
cmp
icebp
bound
fdivrl
out
inc
jle
or
dec
shlb
or
mov
lods
inc
sbb
cmpsl
test
call
and
enter
cmpsl
das
mov
push
dec
mov
iret
and
mov
daa
cmp
mov
fiadds
popa
sbb
ljmp
std
ss
mov
xchg
xor
push
mov
aad
mov
and
push
test
or
js
pushf
push
pop
mov
adc
xchg
adc
out
xor
dec
bound
stos
js
and
push
fcompl
and
js,pt
cmp
inc
mov
xlat
mov
xchg
push
sub
fwait
sbb
push
inc
sbbl
daa
stos
or
dec
arpl
loopne
ficoml
push
pop
pop
mov
sub
mov
mov
jo
dec
stc
jo
fs
add
movsl
lret
shrb
jl
sub
dec
push
pop
push
mov
out
cs
out
jle
lock
scas
mov
inc
adc
push
jle
rolb
cmpsb
push
sub
xor
xchg
add
mov
cmpsl
pop
iret
popa
loope
int
mov
push
or
push
push
and
mov
sub
std
iret
mov
mov
cmpl
lea
lcall
idivl
cmp
or
adc
mov
cmp
bound
pop
fwait
inc
jno
add
sub
pop
pop
das
jl
loop
push
cmp
jbe
cmp
cli
pop
jecxz
cld
xchg
enter
cmp
stos
enter
out
pop
test
mov
cmpsb
dec
sub
cwtl
sbb
xchg
fbld
xor
adc
pop
xchg
mov
or
jbe
push
mov
stc
ret
rcl
nop
into
push
or
dec
aad
push
test
lret
pushf
and
call
and
sbb
jno
mov
mov
xchg
cmc
pop
stos
mov
adc
xchg
and
in
psllq
adc
push
mov
lcall
mov
xorb
scas
xchg
loope
subb
mov
cld
stc
jle
mov
cmpsl
fs
lea
lods
movsl
fists
or
out
icebp
lahf
es
test
push
in
int
fists
mov
mov
sbb
pop
mov
fs
sti
mov
pop
push
fcoms
mov
gs
adc
inc
lods
ja
scas
data16
pop
rcll
mov
pop
adc
mov
testl
inc
out
inc
jo
cmpsb
std
inc
jg
mov
movsl
fidivrl
jne
mov
xor
repz
lahf
divb
ja
int
sub
push
jb
js
rclb
mov
aaa
jb
and
dec
hlt
cltd
shl
and
jne
xor
mov
pop
mov
xchg
dec
data16
xor
push
test
dec
subb
jbe
jp
inc
insb
int
sub
mov
sub
test
jne
outsl
xchg
push
push
aas
int
and
aaa
ss
push
repnz
test
and
mulb
jne
xor
mov
mov
mov
sbb
jb
pop
xchg
cmp
jl
jecxz
lock
dec
push
mov
add
jmp
divb
cmp
sti
imul
mov
push
cltd
pop
rclb
out
xchg
dec
scas
bound
aam
or
clc
jnp
adc
fcoms
imul
les
sarb
not
lods
ss
test
adc
das
inc
es
popf
jle
ret
xor
pop
sbb
push
loope
inc
pop
adc
jmp
add
mov
push
int3
cmp
stos
cli
mov
or
sub
push
addr16
push
push
aad
repz
adc
js,pn
adcl
ljmp
insl
xchg
icebp
mov
pop
stos
sbb
stc
inc
adc
mov
mov
aas
pop
lcall
repz
div
addr16
pop
sbb
not
xor
dec
roll
daa
dec
add
clc
jp
push
cli
cmp
jns
add
push
js
mov
sahf
cmpsb
pushf
cmc
xchg
je
xor
push
js
push
ret
repnz
sub
xchg
insb
inc
mov
push
pusha
jb
repnz
fisubrl
jg
inc
mov
jae
pop
hlt
es
mov
jne
ret
in
stos
insb
mov
add
add
inc
add
jl
add
in
sbb
pop
xor
xchg
sub
mov
hlt
mov
clc
xchg
movsb
roll
fidivrs
push
sbb
mov
mov
ljmp
xchg
popf
cmp
repnz
inc
lods
sub
imul
cmp
lahf
je
clc
dec
dec
or
lods
test
stos
jecxz
in
jg
inc
retw
cmp
das
jmp
xchg
test
add
movsl
out
fbld
sub
mov
icebp
jo
insl
inc
sbb
jmp
cmp
nop
or
inc
test
jp
xchg
mov
mov
cmpsb
bound
mov
mov
dec
mov
sub
ss
mov
inc
gs
cmp
push
inc
jg
test
mov
sbb
push
mov
notb
inc
xor
fstpt
je
pop
stc
lahf
lock
cmc
jl
fs
hlt
mov
js
adc
cmc
dec
loopne
lds
lea
push
xchg
loopne
or
leave
adc
lea
pop
xchg
loopne
pop
pop
test
adc
mov
pop
dec
outsl
pop
addr16
mov
xor
sub
dec
out
or
mov
mov
sarb
cwtl
mov
pop
sub
xchg
mov
jg,pt
xor
mov
xor
sub
fpatan
popa
gs
test
jmp
jno
dec
adc
lcall
and
add
imul
mov
icebp
inc
jg
imul
xor
aad
jne
das
sub
stc
xchg
mov
jecxz
pusha
das
lret
aam
mov
dec
scas
xlat
lcall
inc
loope
cmc
fdivs
xor
or
lock
pop
or
sbb
imul
jns
or
or
push
jmp
lahf
lahf
insb
loop
loope
into
imul
inc
add
and
pop
ja
test
mov
jg
popa
movl
adc
outsb
insl
testl
inc
push
sbb
cwtl
jmp
frstor
xor
jg
xor
xor
inc
dec
push
outsl
mov
inc
mul
pop
push
xor
outsl
adc
cmc
inc
in
out
fsubrs
xor
mov
cmp
pop
push
push
imul
shrl
mov
push
adc
in
xchg
lods
xlat
mov
sbb
inc
outsb
jecxz
cmp
mov
add
mov
xchg
ds
pop
adc
ror
in
aaa
push
dec
popa
inc
mov
or
xor
add
push
inc
add
and
lcall
jns
imul
addr16
pop
outsb
in
out
add
lea
or
xor
push
sub
shll
enter
shl
xor
sahf
xchg
in
stc
mov
cmpsl
outsb
movb
jge
and
or
inc
push
loope
xlat
xlat
adc
add
pop
incl
stc
dec
sbb
push
mov
jns
mov
dec
loope
pop
sti
inc
mov
in
nop
clc
add
push
lret
incl
or
inc
dec
movsl
lods
cwtl
in
jmp
push
dec
mov
and
sbb
nop
iret
pop
lret
or
sub
adc
sub
cmp
jns
ds
add
mov
sbb
orl
pop
jge
adc
lcall
sbb
dec
cmc
push
out
out
loopne
pop
push
xchg
dec
out
pushf
xchg
xor
push
int3
sahf
pop
sbb
test
jnp
aam
add
mov
shrl
add
dec
push
sub
inc
insl
mov
fnstcw
adc
inc
xchg
xchg
gs
push
loope
andl
mov
pop
mull
roll
jmp
dec
nop
loope
cmc
jb
push
test
jo
add
inc
sub
push
clc
fistpl
add
movsl
and
sbb
inc
daa
stos
rorb
xor
in
jnp
sar
or
sbb
aad
dec
adc
or
pop
les
gs
adc
xchg
sahf
fsubr
push
stc
jae
dec
jle
and
mov
lret
jg
add
xor
and
clc
push
bound
dec
jp
xchg
push
inc
pop
aad
popf
jnp
xor
mov
jmp
adcl
icebp
in
sub
loopne
testb
arpl
gs
lods
push
mov
and
or
sub
cmp
std
rolb
loop
jae
out
mov
pop
pop
sti
sbb
jg
xlat
jle
in
daa
inc
and
popa
mov
sti
pop
pop
stos
out
or
add
mov
or
pop
inc
xlat
mov
mov
inc
scas
mov
jo
fldl
movsl
test
xor
les
or
mov
cmp
push
xchg
or
insb
lds
sarl
xchg
add
fstpt
jmp
xchg
sbb
pop
mov
and
call
inc
pop
dec
xchg
dec
mov
gs
fstl
and
dec
ja
leave
pop
push
xchg
xchg
and
adc
nop
mov
push
jne
pop
push
xor
in
ss
int
cmp
ret
test
loop
mov
cmp
fldcw
xchg
test
and
add
cmpsl
lds
sub
mov
adc
sub
jo
test
jmp
dec
sbb
std
sub
xchg
sbbl
xor
adc
inc
push
jnp
inc
push
je
movb
push
adc
xchg
fcoms
or
lret
or
in
shrl
adc
dec
scas
cmc
sahf
lret
push
push
jg
stos
lods
cwtl
cmp
mov
sub
hlt
imul
divb
shlb
mov
daa
jle
mov
jae
cs
outsl
cli
or
rorb
mov
pop
push
test
scas
shll
cmpsb
mov
cs
and
ret
lods
decb
into
dec
sbbl
mov
dec
testb
mov
jo
movsb
fisubrs
mov
test
cli
jp
inc
push
stos
orb
sahf
push
mov
fmulp
sti
push
mov
leave
mov
pop
adc
sbb
xchg
cmp
push
andb
leave
mov
outsl
mov
cmc
push
dec
fscale
int
cmp
test
or
xor
jle
jecxz
rolb
mov
rolb
gs
xor
dec
sbb
ss
xor
cs
sahf
push
mov
dec
xlat
and
mov
sub
inc
mov
mulb
jno
push
push
mov
push
dec
push
xchg
mov
outsl
pop
xor
imul
add
out
xchg
jl
mov
lahf
dec
or
mov
push
enter
dec
rorb
ss
in
cmpsl
mov
pop
pop
mov
or
xchg
mov
test
push
mov
das
fwait
pop
mov
xchg
imul
pop
sub
or
sbb
dec
outsl
jnp
in
jp
jge
jmp
scas
bound
push
popf
pop
aas
push
mov
sti
into
andb
adc
xchg
aas
sahf
mov
xor
aam
out
push
push
movsb
and
scas
jae
pop
sub
nopl
mov
cld
cmp
outsl
push
sbb
jae
or
scas
sbb
sar
inc
mov
lret
jne
popf
cli
adc
sub
sub
xchg
sub
daa
and
pop
lret
jbe
cmp
jb
sbb
dec
sbb
mov
pmulhuw
mov
inc
jge
outsb
es
pop
enter
imul
fwait
adc
jmp
mov
cld
cmp
cmpsb
imul
pusha
repnz
mov
shlb
inc
out
clc
cmp
add
dec
pop
sbb
ljmp
fcoms
jge
dec
in
aaa
ficoms
jle
dec
mov
adc
and
mul
mov
add
fwait
pushf
sahf
shrb
cwtl
dec
sti
repz
cltd
stos
push
lds
aas
mov
pop
fs
pop
and
rcrb
xor
cltd
ffreep
cmc
xor
mov
xor
in
xchg
adc
imulb
adc
filds
fcomps
int3
data16
scas
mov
jmp
mov
rclb
pop
jmp
xlat
adc
les
mov
stos
xchg
mov
xchg
mov
jmp
das
incl
dec
out
pop
sbb
rcrb
mov
into
pop
push
xor
lock
daa
sub
sbb
test
fs
lds
cmp
cmp
shl
and
pop
test
xchg
add
mov
test
bound
xor
push
movsl
sub
clc
cltd
pop
jne
sub
jo
dec
dec
adc
outsl
push
sarl
ljmp
or
lock
adcl
pop
js
pop
jmp
pshufw
pop
jecxz
mov
xchg
mov
add
mov
movswl
mov
in
aas
inc
data16
shrl
es
fdivrl
adc
fs
das
popa
or
shll
ret
pushf
adc
mov
xor
mov
pusha
mov
fwait
dec
xchg
rcll
sbb
aam
icebp
fidivrs
pop
dec
xor
push
ds
inc
xor
fldcw
gs
cltd
out
aad
popa
clc
test
pop
inc
xchg
pop
loop
sub
sub
out
mov
icebp
stos
js
push
lods
pop
pop
dec
dec
rcrb
leave
pop
xlat
scas
loop
mov
and
leave
sub
xchg
cmp
sbb
ss
mov
aaa
inc
dec
adc
hlt
sbb
into
lods
sbb
mov
cmpsl
push
imul
daa
cmpsb
test
lds
es
scas
add
cmpsb
push
imul
out
std
xor
and
fcoml
pop
out
add
aaa
xor
cmc
arpl
movsb
push
ret
dec
jnp
xchg
or
lock
mov
and
popf
sti
cmp
add
jge
push
ret
lcall
sub
aam
pop
sahf
icebp
into
mov
push
cmpsb
sub
and
pop
sub
fs
stos
push
addl
lahf
add
mov
xor
cmpsl
bound
jmp
and
rcrl
out
sbb
cmp
sbb
aam
insl
adc
insl
xorb
and
js
gs
xor
sub
les
or
cmpsb
in
xor
test
or
mov
push
repz
cld
aaa
jns
cmp
mov
decb
pop
add
push
and
outsl
ja
scas
pop
xor
ljmp
pop
movsl
xchg
das
mov
test
and
dec
add
pusha
pop
xor
mov
sbb
or
add
jecxz
sbb
push
sti
mov
popa
xor
loope
push
jmp
lret
outsb
pop
mov
scas
xchg
add
les
fwait
repnz
xchg
adc
cmpsl
testb
fmuls
and
lea
test
inc
add
inc
aad
test
shrb
cmp
dec
xor
insl
dec
mov
mov
enter
call
jnp
aaa
inc
enter
or
mov
test
inc
mov
addr16
dec
stc
shlb
iret
sbb
dec
xorl
jmp
ret
rorl
mov
add
fsts
dec
popa
aad
fwait
cmpsl
pop
popf
lcall
insb
andl
jns
leave
repz
outsl
jnp
aam
xor
cmp
fwait
add
adc
dec
mov
movsl
int3
lds
inc
sub
sti
mov
mov
in
sahf
push
or
movsb
mov
xchg
ds
and
iret
test
xchg
mov
dec
inc
dec
int3
jle
push
pop
pop
sub
mov
mov
in
subl
mov
jge
js
lock
and
add
arpl
mov
lret
xchg
rcl
pop
and
sbb
iret
push
pop
popf
sbb
jnp
or
xor
int3
popa
cmp
imul
es
mov
dec
xchg
jb
subb
ret
xchg
mul
adc
xchg
jnp
xchg
push
fsubrl
mov
jecxz
inc
repnz
inc
ja
outsb
mov
and
mov
and
pop
ss
jns
mov
fadds
out
lret
inc
cwtl
imull
jp
mov
rcll
mov
cmpl
mov
xchg
jbe
jno
inc
lret
fildl
lahf
in
cld
or
push
lock
xor
movsb
scas
sub
or
dec
or
jl
dec
adc
pop
or
inc
mov
ljmp
sbb
or
adc
jnp
inc
cmp
cmpsb
inc
mov
add
loop
fisttps
mov
lock
xor
inc
inc
js
dec
int
push
mov
pop
cs
popa
mov
aad
sbb
mov
pusha
cmp
shll
mov
stos
sub
cld
xchg
sbb
dec
mov
mov
pop
jns,pt
out
sar
mov
inc
shrb
xchg
xchg
mov
fucomi
hlt
inc
mov
int3
out
xchg
cmpsb
enter
sti
and
ljmp
stos
xor
dec
jo
lock
xchg
insb
mov
fwait
adcl
mov
xlat
mov
pushf
fstp
cltd
lcall
fsubr
mov
das
scas
push
and
arpl
mov
outsl
sub
jle
out
popf
mov
ds
cmp
mov
push
mov
movsl
push
mov
sub
icebp
and
push
fld
popa
loop
xor
out
pop
negl
cmp
in
push
sbb
inc
pop
add
xchg
int3
aad
out
push
insb
insb
mov
mov
rcrl
shll
inc
or
jb
cs
js
scas
aad
pusha
jmp
xchg
pop
cmp
pop
jb
test
lret
mov
es
sarb
jb
aaa
lods
decl
inc
testl
cmpb
mov
sbb
mov
jnp
jmp
xchg
jnp
xchg
mov
int3
faddl
sub
sub
jmp
aam
mov
fs
mov
test
adc
sbb
mov
adc
jo
inc
push
sbb
pop
mov
cltd
adc
nop
sub
push
es
fwait
sbb
in
cld
lds
into
xorw
mov
sbb
pop
mov
in
adc
out
jnp
pop
adc
pop
movsl
jge
in
add
jle
mov
fdivrl
movsl
inc
stos
cmc
lods
or
xchg
nop
inc
sbb
and
bound
fsub
jge
fldcw
push
fwait
add
inc
lcall
or
mov
mov
jmp
push
and
mov
pop
ret
xchg
jecxz
test
jg
push
mov
jno
dec
xchg
ja
mov
xor
insl
mov
xor
dec
pop
mov
mov
call
icebp
mov
shrl
sub
mov
cmc
bound
stos
scas
xchg
push
into
enter
std
pop
mov
or
inc
leave
jmp
stos
jmp
fstpl
stc
xchg
pop
sub
lods
push
add
sbb
rcrl
movsb
sbb
push
lock
adc
push
testl
sbb
push
and
xchg
pushf
icebp
pop
cmp
jl
fdivl
imul
mov
dec
jbe
adc
or
fidivl
dec
sar
cs
inc
mov
inc
xor
adc
cmp
cmpsb
xor
fistl
cmp
in
cltd
out
dec
jae
push
adc
adc
xor
mov
mov
call
add
xchg
gs
sub
pop
pop
push
notl
je
fisttpll
add
dec
loop
lret
add
adc
xchg
loopne
xchg
jl
pushl
lea
mov
and
mov
int
rcr
rorb
inc
rcrb
jne
cmpb
sub
popa
loop
xor
insb
jmp
jge
in
enter
movups
fwait
cmpsl
iret
lds
push
int3
in
stos
xchg
fs
fdivr
int
jns
cmp
sbb
adc
cmp
fwait
pop
add
or
push
dec
iret
pop
or
jb
mov
adc
es
mov
out
leave
dec
scas
clc
pop
scas
cwtl
iret
add
push
jno
outsl
pop
sub
sahf
jbe
xchg
inc
pop
lret
arpl
ljmp
add
pushf
sbb
in
in
call
mov
adc
or
adc
push
jl
jno
fldenv
pushf
mov
std
jno
push
rcl
psrlw
adc
in
stc
xor
mov
xchg
std
aaa
mov
push
test
jmp
aam
fidivrs
mov
shlb
xor
enter
or
repz
out
inc
fistl
xchg
pop
push
aas
mov
mov
dec
ljmp
and
xchg
fcoml
xchg
outsl
nop
idiv
loope
jmp
lds
mov
sti
dec
popf
cmp
ja
and
aaa
and
aaa
stos
xchg
rcrb
adc
jo
lods
ret
dec
cmp
dec
sbb
andl
sbb
sti
std
jp
xorb
clc
test
dec
addr16
in
dec
mov
decl
cmc
gs
imul
in
call
imul
hlt
cmp
mov
movsl
insb
imul
jge
gs
inc
lock
outsl
pop
int
inc
xor
jmp
out
jl
popl
cmp
and
scas
mov
push
pop
in
insl
add
clc
enter
int3
js
xchg
int3
aad
repz
cmp
movsl
mov
stos
dec
lret
sbb
int3
inc
or
enter
push
and
inc
and
mov
movsl
jo
arpl
mov
and
and
arpl
xchg
inc
mov
lcall
in
jns
jb
dec
mov
mov
mov
arpl
into
sahf
add
push
xor
daa
mov
jle
mov
xor
xchg
stos
addr16
add
push
stc
mov
jns
dec
jo
xor
scas
ret
iret
push
cmpsb
test
cltd
add
arpl
xorl
sub
inc
push
test
cmp
cmp
aas
lock
imul
sbb
insl
adc
push
or
or
in
pushf
outsl
repz
xchg
mov
cwtl
mov
adcb
lock
popa
fisubl
das
jmp
inc
in
std
jb
dec
xchg
fnstenv
pusha
lea
mov
fistpll
cmp
js
mov
out
ret
subl
pop
rorb
sbb
jecxz
ja
enter
sub
pcmpgtw
sarl
stos
xor
int
inc
shll
adc
cltd
mov
inc
rcrl
mov
test
out
jmp
mul
iret
mov
leave
push
outsl
shl
hlt
test
shlb
mov
dec
dec
das
daa
or
mov
cwtl
out
ficompl
xchg
rolb
ss
sub
iret
js
xor
dec
and
hlt
push
jecxz
ljmp
mov
add
inc
sub
insl
xor
jbe
insb
lods
cmpsb
xchg
test
rclb
orl
xlat
repz
mov
jp
sub
hlt
out
mov
pop
cmpsb
dec
lea
jl
test
call
or
loop
ja
fmull
xor
idivl
cmc
mov
sub
mov
loopne
cli
pop
adc
pushf
jp
jp
dec
sbb
xor
int3
push
mov
mov
fsts
adc
insb
fdivrl
aad
loope
popf
outsl
roll
fimuls
out
in
aam
push
sbb
data16
lret
dec
mov
mov
sbb
push
cmpl
jns
push
xorl
jno
nop
push
jmp
cmc
daa
inc
and
xchg
outsb
adc
incb
jns
mov
test
dec
in
fmul
int3
cmp
push
lea
cmp
mov
test
aaa
cltd
xchg
js
shl
mov
fucomp
sub
and
dec
jp
and
push
ret
call
into
mov
mov
mov
dec
incb
cld
arpl
pop
xchg
or
ror
or
cs
jmp
add
cmpsl
in
enter
add
shlb
push
ret
push
sub
jns
inc
leave
addr16
pop
arpl
jno
cmp
addr16
sub
xchg
xchg
sub
push
iret
ds
push
mov
dec
mov
jno
leave
shll
fmulp
adc
cmp
xor
fstpl
xchg
or
xchg
stos
pop
je
cmp
in
cld
lods
mov
stc
push
loope
sub
mov
loop
jae
adc
daa
mov
pop
or
call
imul
outsl
jge
repnz
cwtl
mov
mov
mov
stos
mov
repnz
push
fwait
push
lea
add
bswap
cld
js
mov
mov
dec
dec
cmpsb
sub
cmp
push
add
dec
sub
sahf
and
jmp
pusha
adc
and
or
mov
pop
sbb
lock
and
out
ja
or
xchg
mov
jl
sti
mov
call
ja
je
jg
sbb
jmp
push
add
lods
les
std
iret
cmp
mov
out
sub
out
push
sub
clc
push
jp
repnz
sub
outsl
and
and
jle
test
dec
add
mov
xchg
pop
mov
cmpsl
loop
imul
push
clc
mov
or
mov
sub
lea
lods
outsb
leave
jle
pop
cld
xchg
call
sbb
fucom
jo
pop
and
dec
jge
push
push
filds
or
test
or
xchg
mov
jl
lret
test
adc
mov
adc
dec
and
adc
and
inc
inc
fidivs
xchg
test
leave
in
sarl
mov
cmp
xor
mov
add
jmp
and
shrl
push
dec
inc
sbb
push
push
popl
enter
push
sahf
cmp
jmp
test
cltd
in
or
xchg
cmp
adcl
adc
shlb
xchg
and
mov
fistl
arpl
push
jnp
cmp
push
arpl
dec
mov
xor
in
cmp
push
cmpsl
sub
insb
dec
popa
sbb
dec
mov
jle
jmp
jge
pop
sub
push
mov
or
adc
imul
and
cli
push
add
ret
out
hlt
mov
and
out
scas
cwtl
jbe
aam
scas
pop
into
stos
movb
and
in
ds
push
and
imul
jns
or
in
divl
jno
orb
jg
nop
push
mov
sbb
or
dec
jne
lds
into
cmp
mov
fnstenv
push
xor
cmpsl
or
shl
xchg
or
fcoml
push
xchg
adc
mov
mov
pop
das
jg
into
adc
scas
cmp
xor
imul
shrb
add
push
in
mov
mov
idivl
fsubs
sbb
call
mov
je
push
mov
ja
mov
xor
mov
push
pushf
roll
ret
jno
mov
aam
jb
sbb
fsub
xor
lea
mov
sub
or
pop
icebp
mov
mov
shrl
sbbl
lcall
ret
cltd
mov
push
and
out
xchg
mov
jecxz
cmp
add
idivb
cmp
ret
and
sub
addr16
icebp
pop
jo
xchg
or
orw
test
dec
jge
fstl
inc
cs
or
mov
pop
gs
insb
or
cmp
loop
into
inc
sbb
bound
cltd
rclb
lahf
faddl
mov
lods
or
lock
sub
mov
popf
cmp
mov
lahf
adc
aaa
mov
out
pop
fldenv
fnsave
add
xor
mov
icebp
cwtl
out
fwait
enter
xor
frstor
in
mov
push
mov
or
popa
test
cmpsb
mov
xchg
pop
xor
test
pop
xchg
mov
add
mov
mov
mov
imul
pop
push
mov
test
mov
push
lcall
adc
ja
fmuls
xchg
push
jb
or
imul
ficoml
jl
aam
fwait
scas
dec
xchg
jb
cmpsb
or
sti
jae
fsubr
sbb
inc
test
ret
aas
xor
pop
out
dec
or
arpl
pop
scas
inc
ds
outsl
test
jnp
xchg
inc
xor
cmc
pop
dec
icebp
adc
fs
loop
sbb
pop
bound
popa
push
mov
jl
clc
loop
or
imul
adc
inc
movsl
rep
sbb
ss
repz
int
ja
push
rorb
dec
mov
in
mov
adc
push
mov
loopne
xchg
rcrb
in
sub
dec
add
xlat
xor
and
clc
bsr
cld
in
aas
xchg
out
jecxz
fwait
shlb
push
lahf
push
add
test
adc
movsl
aaa
sub
xchg
arpl
negl
or
mov
dec
dec
fiaddl
in
in
push
mov
sub
push
lret
xchg
adc
bound
jl
data16
sti
cs
inc
cmp
mov
add
xor
sub
sub
sbbl
daa
adcb
mull
loopne
dec
pushf
cmp
and
adc
out
mov
xchg
inc
shrl
or
sbb
xchg
xchg
sbb
pusha
xchg
or
lcall
pushf
xor
push
aad
sbb
xchg
lret
shll
outsb
and
mov
leave
std
in
repz
push
fsubs
or
push
xlat
push
push
bswap
xchg
pusha
sahf
sbb
ljmp
stos
add
out
fsub
out
inc
imul
xor
pop
push
ss
insl
insl
jmp
sub
mov
aaa
sbb
fs
lods
mov
cmp
push
jb
mov
mov
rolb
bound
add
mov
jl
shlb
gs
xchg
pop
cmp
mov
aam
sub
xchg
inc
insb
rcr
int3
mov
inc
mov
push
pushf
fistpll
xchg
data16
or
xchg
cmp
sbb
sahf
jg
lret
adc
sbb
loope
xorl
mov
fiaddl
pop
push
mov
fbld
addr16
cmc
popf
stos
or
loope
and
mov
add
inc
inc
andb
enter
data16
xchg
push
scas
enter
jle
out
hlt
xchg
test
push
aas
add
xchg
push
cmp
push
mov
jl
xchg
lret
hlt
in
xor
stc
je
xchg
xchg
and
jae
xor
cmp
fxch
and
xor
inc
jb
xor
imul
dec
mov
dec
pop
subl
hlt
or
cmp
xchg
repnz
add
xchg
inc
or
xor
sub
mov
clc
add
adcl
sbb
mov
addr16
pop
test
push
or
cmp
push
sarl
call
dec
push
push
pop
xor
jle
pop
mov
or
es
and
xchg
cmpsb
add
pop
xchg
xor
int
stos
repnz
das
icebp
adc
fisubrs
cmp
arpl
iret
and
lds
dec
xor
enter
iret
decb
ljmp
adc
inc
xchg
mov
lea
test
jne
mov
xchg
bnd
enter
js
mov
out
jle
sarb
lahf
cmp
jns
xchg
je
shlb
out
out
inc
dec
pop
mov
mov
mov
ret
inc
jne
fisubrl
mov
push
jmp
lret
mov
push
mov
cmp
lret
mov
sbb
push
xchg
or
in
inc
mov
jp
mov
sub
dec
pop
sti
xor
stos
in
inc
aaa
out
mov
sti
dec
mov
dec
jp
in
outsb
inc
add
xor
shr
jns
and
mov
add
outsb
xlat
sahf
mov
xchg
loop
outsb
imul
mov
xlat
les
insb
dec
xchg
jg
sbb
inc
pop
push
xchg
je
sub
jnp
test
adc
jl
xchg
addr16
adc
push
scas
orl
sub
sti
fs
push
pop
add
and
mov
lret
xor
iret
and
lcall
in
icebp
int
lods
inc
inc
push
cmp
repz
or
inc
shrl
in
mov
jl
xor
lcall
andl
movb
imul
nop
ss
hlt
ret
xchg
sbb
sub
dec
popa
push
aas
rolb
mov
out
mov
lcall
sar
push
sub
add
push
adc
mov
adc
sub
fiadds
cmp
pop
add
test
dec
imul
int
imul
ja
mov
cmp
ret
ds
jmp
jb
in
dec
cmp
je
adc
fwait
cmp
orb
repnz
lds
test
out
mov
jmp
ss
fdivl
test
cmp
iret
movsl
push
adcl
xchg
mov
sbb
lahf
pusha
mov
add
jg
sbb
jb
add
insl
xor
das
sub
sarl
jle
or
mov
clc
adc
lret
mov
jae
jle
inc
inc
jg
jnp
and
iret
sbb
xor
mov
cli
repz
stc
add
sbb
mov
cmp
test
adc
xchg
add
sub
movsl
notb
inc
jne
xchg
rcrl
dec
adc
dec
rcrb
mov
loop
popf
shlb
pop
ljmp
pop
sbb
pushf
popf
and
or
xchg
out
jecxz
push
xor
mov
cwtl
pushf
fiadds
js
pop
jnp
leave
add
repnz
shlb
xor
sti
or
add
cwtl
call
jge
cltd
inc
cwtl
push
mov
fmull
arpl
mov
cmc
xchg
ss
xchg
out
movsb
arpl
int3
lods
and
adc
sbb
push
xchg
std
cli
mov
jo,pn
daa
pop
div
adc
sub
fcom
sti
in
push
pop
mov
and
xchg
mov
sbb
inc
iret
jmp
and
or
push
neg
cmc
dec
jle
test
adc
mov
popa
add
push
into
mov
lahf
xor
insl
xor
jo
mov
das
mov
add
mov
mov
xorb
js
jno
mov
dec
jo
mov
loopne
sbb
cmp
and
cmp
daa
inc
add
lods
and
mov
adc
inc
dec
bndstx
ljmp
insl
int
sub
pushl
mov
mov
add
lea
dec
sub
notl
lods
cwtl
jbe
adcl
adc
mov
or
call
cmp
and
pop
sbbl
outsl
jge
lock
ret
mov
inc
inc
dec
popa
pusha
push
add
push
subb
sti
sub
repz
sahf
pop
outsl
sub
hlt
in
sbb
in
das
testl
aam
stos
mov
out
jbe
bound
insb
pop
add
cmpb
enter
dec
lret
jp
movsb
sub
push
xchg
les
cs
dec
dec
out
ror
repnz
xor
dec
stos
iret
call
add
addl
inc
sahf
jmp
ljmp
and
jbe
fisubrs
jb
jl
mov
je
jne
mov
mov
fnstsw
or
aad
jg
inc
pop
jne
mov
insb
xchg
and
mov
mov
pop
pop
mov
ret
jle
arpl
xor
hlt
xchg
repnz
xlat
lea
adcb
sbb
pusha
ffreep
add
pop
xor
cmp
jp
je
mov
adc
mov
std
outsl
xor
mov
loope
popl
xchg
dec
shll
cli
int
xchg
jl
inc
pop
mov
cmp
sahf
jb
movsl
xchg
mov
daa
xor
popa
dec
stos
cmc
pop
pop
xchg
cmp
jge
sbb
shlb
xor
mov
in
pusha
lea
mov
popa
pop
cmp
pop
mov
xor
addl
ficomps
mov
pop
flds
xor
and
test
leave
and
arpl
fs
incb
es
inc
sbb
das
movsb
sub
pushf
pusha
incb
cwtl
sti
or
jle
xchg
fimuls
xor
movsb
mov
jno
stos
xchg
in
inc
jns
xor
icebp
add
sar
xor
addl
xor
add
mov
sbb
mov
sub
lea
mov
inc
and
jle
stos
add
ror
pop
add
jnp
add
ret
fisubrl
fstpt
xor
lea
movsb
jmp
sahf
gs
out
leave
add
fs
in
ds
inc
neg
in
and
cmp
push
push
pop
mov
xchg
hlt
ret
and
mov
cld
sub
cmp
lret
nop
loop
lea
jp
mulb
lret
ret
fwait
dec
push
aas
or
push
inc
in
push
xor
sbb
addr16
scas
cmp
add
push
pop
pop
or
jl
adc
mov
dec
pop
jg
push
adc
jns
xchg
mov
jbe
inc
lcall
data16
cmp
sub
add
cmp
sbb
icebp
nop
lds
or
cwtl
jp
fwait
adc
scas
jns
bndstx
mov
enter
mov
and
or
imul
sbb
inc
cld
dec
test
xor
adc
mov
xlat
bound
xor
shlb
inc
arpl
arpl
pop
hlt
xor
ljmp
addr16
pop
dec
hlt
clc
cmpsb
call
dec
xchg
shll
and
cmp
lret
jg
and
outsl
xor
pop
cs
loope
testb
aas
push
or
xor
outsl
scas
arpl
out
cwtl
adc
xor
jp
loope
ss
lods
loope
adc
insl
dec
js
ja
ljmp
fldl
and
xor
scas
mov
jecxz
dec
or
push
jae
and
ret
push
dec
sub
inc
push
icebp
ljmp
aad
xchg
xchg
pop
ficomps
into
jp
not
mov
ja
push
jbe
out
mov
mov
mov
inc
sub
das
fs
rcll
movsl
adc
add
dec
test
addr16
outsl
sahf
sub
inc
imul
push
filds
testb
or
popf
mov
loop
jp
push
arpl
mov
xchg
xchg
push
nop
fsubl
adc
mov
loopne
mov
test
inc
pusha
fnstsw
test
cltd
push
jae
xor
sub
in
xchg
jno
dec
hlt
je
jmp
ljmp
mov
daa
xchg
dec
jnp
repz
pop
and
push
mov
out
aaa
mov
in
xchg
pop
sub
add
loop
mov
xor
add
jp
mov
outsb
bound
ret
add
xor
pop
pop
pop
push
fwait
movsb
pop
fs
xor
stos
jmp
in
jg
loope
sub
mov
not
clc
out
jl
cwtl
xchg
mov
loope
insl
js
popf
mov
push
mov
jge
jge
out
push
cmp
sbb
adc
fcoms
inc
mov
xor
and
mov
out
aad
push
aaa
xlat
stc
cmp
mov
lock
sub
in
jecxz
shr
cmp
dec
test
mov
sti
adc
add
loope
ret
insl
fisubs
sub
sbb
push
ret
inc
scas
push
mov
iret
imul
sbb
jbe
cmp
std
mov
ljmp
dec
ja
arpl
hlt
test
lret
mov
cmp
cwtl
ret
fists
ret
bnd
inc
insb
add
gs
adcb
mov
xlat
lock
push
adc
push
rcr
mov
std
inc
xlat
xchg
pop
mov
clc
xchg
mov
jle
adc
and
mov
loop
or
adc
mov
inc
test
pop
xchg
insl
das
out
rcrb
lock
inc
mov
xchg
xchg
mov
sbbb
scas
and
and
dec
mov
inc
arpl
mov
xor
or
into
dec
popa
dec
in
push
dec
push
test
mov
xchg
popa
hlt
scas
adc
push
jp
mov
mov
out
jae
test
je
or
sub
xchg
mov
mov
mov
xchg
fbstp
xchg
rol
jge
cmc
mov
stos
pop
xor
out
inc
xchg
rcrb
cli
mov
add
jnp
or
xor
sahf
sbb
and
pop
cmc
fnsave
jle
fldcw
adc
cmp
insl
mov
mov
push
enter
aam
mov
into
fcmove
rolb
cwtl
out
cwtl
dec
fwait
in
lea
sbb
rcl
mov
cmp
notl
jp
out
dec
lahf
adc
xor
stos
jecxz
mov
orw
adc
aaa
jle
sub
mov
pop
push
xchg
orl
cli
jmp
lods
outsb
adc
jne
dec
das
test
lods
jecxz
adc
cmc
fsubrs
pop
out
xor
fs
push
movsl
jae
sbb
aaa
mov
sti
xor
add
les
sarl
aas
std
xchg
cmpl
mov
dec
testl
fidivl
hlt
push
cmp
in
pop
add
mov
nop
add
or
xchg
pop
inc
outsl
xor
jo
jne
cmp
repz
fcmovbe
cmpsl
fistl
or
push
add
adc
mov
aas
sti
mov
inc
arpl
mov
mov
hlt
arpl
xchg
jo
cli
fmuls
cli
faddp
out
lret
imul
shrb
cmpsb
lcall
ja
push
out
pop
icebp
pop
mov
shr
stc
ret
xchg
push
ljmp
xchg
xchg
sbb
loop
test
inc
outsl
lcall
adc
shrl
pop
or
sbb
lret
sbb
roll
sub
xor
jle
lods
mov
out
sahf
insl
sti
out
int
loope
in
jne
add
and
pop
pop
xor
cwtl
out
sub
adc
jl
or
fcomip
sbbl
sbb
dec
fstl
sub
out
sbb
bound
mov
and
add
jl
test
cmpsl
mov
adc
loop
inc
mov
push
pop
mov
push
add
dec
cld
inc
xchg
or
sub
pxor
sub
jbe
inc
nop
out
insl
rcl
arpl
ss
sbb
and
mov
imul
lcall
jecxz
enter
pop
dec
fsts
outsl
jno
divb
test
in
or
jnp
call
imul
cmp
lahf
jb
xchg
or
jg
adc
faddl
sti
mov
cmp
add
jo
outsl
cs
out
or
lret
xor
lret
les
jo
mov
pop
pop
push
or
add
mov
fildl
cmc
rclb
sbbl
or
cmp
cmp
mov
test
je
mov
xchg
cmp
mov
jl
je
cmp
stc
push
jmp
xchg
pop
repnz
popf
sub
das
popa
lea
sub
mov
mov
pop
cli
out
add
repz
aas
adc
and
lods
mov
dec
out
fstl
pop
mov
lret
out
leave
popa
daa
inc
cli
mov
xor
test
stos
push
popf
mov
add
sub
inc
cmp
nop
lret
pop
paddq
cmc
notl
inc
call
pop
jne
dec
mov
in
adc
pop
jbe
cltd
adc
int3
push
push
jp
xchg
jae
das
lret
mov
sarl
fimuls
sub
clc
sub
dec
outsb
shrb
dec
ss
add
push
sub
mov
mov
inc
loope
and
insb
and
inc
lret
cltd
mov
lcall
out
dec
insl
mov
inc
jecxz
dec
or
aas
push
mov
lcall
popf
cmp
or
test
cmp
jmp
je
dec
sti
push
push
sub
xlat
dec
ret
xchg
mov
leave
mov
fnstenv
out
aaa
loope
cmp
mov
imul
fildll
daa
inc
mov
adc
aam
mov
ud2
roll
imul
je
push
andb
sbb
mov
addr16
vorps
add
xor
or
fiaddl
cs
and
icebp
mov
xchg
push
fcmovbe
les
mov
sti
mov
xchg
cmp
mov
cld
in
mov
and
vmread
or
nop
enter
mov
pop
or
jge
cmpsl
rorb
push
adc
xor
xor
je
clc
int
lea
stc
fucomp
cmp
pop
shlb
jnp
mov
push
fisubs
mov
inc
lods
mov
add
pop
sub
mov
pop
mov
xor
ja
lea
aam
js
push
mov
in
and
mov
ljmp
sbb
mov
mov
push
adc
or
sub
std
test
cmc
test
inc
decl
mov
or
xorb
pushf
jl
mov
mov
and
jg
rorb
mov
or
imul
nop
xchg
mov
fistpl
pop
xlat
xchg
outsb
xor
outsl
mov
inc
shrl
and
inc
sbb
cmp
jg
add
mov
mov
inc
test
aam
dec
leave
adc
out
xor
pop
xor
outsl
inc
lahf
mov
cmc
sbb
pushf
mov
lock
rolb
xchg
pop
cmp
inc
add
and
push
push
mov
mov
lahf
aam
enter
and
mov
sahf
sbb
aam
mov
pop
mov
adc
adc
xor
push
lock
outsb
rorb
push
or
and
sarb
xchg
inc
sarb
add
lods
jb
mov
xchg
icebp
nop
cmp
inc
inc
in
sar
inc
pop
fidivrl
test
pushf
mov
cmpsl
stc
dec
das
pop
test
icebp
pop
addr16
aad
mov
rcrb
data16
or
xchg
out
iret
outsl
orl
jae
xchg
lcall
fucompp
insb
inc
fiaddl
dec
jns
sub
popa
add
insb
cmp
mov
shl
fwait
inc
cmpsb
lods
jae
fnstcw
cmpsl
and
xchg
sbb
or
adc
mov
cmp
dec
clc
adc
adc
mov
xchg
xor
mov
in
insl
mov
fwait
pop
pop
xor
rorb
stc
sub
xchg
dec
je
jle
jge
dec
mov
cmpsb
pop
mov
xor
mov
xor
jmp
mov
fwait
lods
inc
out
xlat
test
pop
inc
jg
out
popl
sub
inc
push
int3
insb
add
fs
out
jae
inc
mov
aam
insl
xchg
es
xchg
push
lcall
xchg
mov
pop
mov
sti
sub
fwait
jge
pop
std
push
mov
rcr
sahf
adc
loope
sbb
adc
jle
sbb
mov
inc
call
mov
mov
nop
stos
shlb
mov
sub
sarl
xor
punpckldq
mov
test
out
lods
idivb
dec
aad
pop
stos
push
and
cli
sbb
sub
inc
pushf
into
or
pop
out
xor
fiadds
icebp
push
xchg
cmp
push
mov
xchg
mov
and
xlat
jns
pop
hlt
pop
popf
repz
inc
jo
cld
enter
push
enter
xchg
jo
xchg
or
xchg
sbb
xorl
ret
repz
fnsave
sbb
xor
pushf
adc
clc
xor
dec
push
mov
rolb
push
mov
xchg
addr16
lea
ja
leave
and
add
xor
pop
cs
sbb
repz
test
xchg
mov
inc
adc
imul
jle
test
mov
out
xor
int
adc
mov
rcrb
shl
adc
repnz
int3
jmp
jecxz
out
jl
test
mov
or
repz
aad
or
cmp
arpl
int
jns
popf
adc
std
sbb
cs
cpuid
ss
dec
mov
push
fildl
cli
push
mov
leave
and
xchg
enter
pop
jne
mov
xor
cmp
cmpsl
lods
rcr
jge
stos
push
inc
lret
mov
fadds
insl
push
into
insb
test
inc
or
xor
outsl
imul
insb
jge
push
fstpt
test
sbb
push
fsts
adc
fstl
mov
adc
xor
nop
inc
aas
lea
pushf
fstpl
mov
mov
inc
add
cmp
je
inc
and
testl
inc
mov
cmp
and
test
adc
mov
outsb
jb
int3
mulps
push
dec
cmp
hlt
pop
sbb
xor
lret
fiadds
pop
cmp
repz
xor
sub
pop
mov
mov
mov
cltd
aad
xchg
popf
repnz
scas
loope
inc
fs
or
fs
lods
mov
outsl
push
adc
insl
rcrb
aad
inc
cmp
dec
cmpsb
shlb
sub
mov
xchg
add
sahf
dec
adc
and
adc
les
mov
scas
xor
xchg
cmp
arpl
and
loope
mov
xor
pusha
popf
or
inc
lock
in
inc
roll
xchg
loopne
js
or
sbb
imul
addr16
cld
pusha
jae
out
leave
roll
and
and
stc
cmc
cwtl
mov
inc
fdivl
sbb
dec
in
rorb
shrl
data16
inc
mov
jbe
push
dec
add
add
out
stos
addr16
push
sti
ret
dec
mov
xchg
cmp
rep
dec
lock
mov
repz
adc
fsts
inc
movsl
rorl
jae
lods
jns
aaa
test
lcall
cmp
pop
insl
pop
hlt
mov
push
loop
lock
push
sahf
sub
xchg
pop
lea
mov
push
insb
lds
cld
push
repz
push
or
test
mov
arpl
out
ljmp
xor
clc
add
xlat
adc
call
gs
test
and
inc
sahf
hlt
jecxz
in
into
push
inc
mov
imul
int3
inc
mov
sahf
stos
jno
mov
les
push
fbstp
xor
jne
mov
lcall
lret
les
cltd
xor
sbb
xlat
push
xchg
sub
int3
xchg
imul
inc
or
push
dec
arpl
or
lods
and
dec
cli
add
mov
scas
imul
mov
fwait
subb
pop
dec
pop
stc
jno
adc
test
shr
fldt
daa
call
ds
gs
out
mov
lods
arpl
cmp
jp
cmp
mov
sbb
out
loope
sbb
push
hlt
mov
xchg
mov
jecxz
mov
shr
popf
xchg
jne
in
in
or
out
aaa
lcall
jmp
movsb
subl
mov
test
xor
into
sub
lds
jae
enter
jecxz
int3
add
mov
and
dec
pop
mov
enter
mov
mov
outsl
aaa
mov
add
push
mov
xlat
iret
leave
inc
mov
sbb
jg
mov
fstpl
push
mov
cmp
xor
aad
and
pop
lret
lret
pop
fsubrl
fsubrs
mov
push
pop
sahf
rorl
dec
orl
fisubs
and
jns
inc
out
xor
jo
stos
sbb
cmpsb
int3
shll
insl
stos
sbb
pop
sub
inc
or
xchg
cmpsl
pop
sub
sti
xchg
fdiv
mov
test
and
mov
and
inc
lea
xchg
adc
sub
test
push
jne
mov
sub
and
lret
dec
xchg
mov
lret
in
inc
xor
dec
gs
fcmovnb
dec
or
mov
mov
mov
inc
rolb
lea
aam
or
xchg
and
sub
pop
mov
ds
ljmp
pop
lea
dec
adcb
xchg
or
mov
inc
mov
mov
stos
xor
push
out
es
xchg
repz
push
xlat
adcl
pcmpgtb
in
fisubrs
mov
push
mov
sbb
les
das
lds
push
mov
stos
scas
incl
adc
into
cli
jmp
push
adc
popf
xchg
mov
xchg
push
xchg
or
mov
mov
lahf
adc
addr16
mov
aaa
sub
imul
mov
mov
orb
fnstsw
imul
mov
data16
pop
sti
cmp
xchg
scas
xchg
sbb
adc
stc
add
push
jg
adc
or
inc
out
fcompl
fs
jle
into
dec
cld
rolb
add
rcll
or
adc
xchg
pushf
rcll
jle
jge
fstps
rolb
bound
bound
push
push
sbb
pop
or
push
add
frstor
inc
sbb
sub
rclb
rclb
in
cmp
cmpsl
push
je
xchg
repnz
inc
or
mov
add
push
fiadds
out
test
mov
hlt
orl
ret
dec
xchg
repz
xor
sbb
es
mov
push
adc
pop
fs
out
les
in
jae
and
roll
sub
das
sub
sahf
cmp
add
pusha
push
xchg
test
lock
pushf
inc
je
repz
mov
mov
pop
int
xchg
and
cmpsb
rorb
adc
test
scas
pop
mov
cmp
pop
pop
sub
das
arpl
dec
jmp
inc
cmp
jbe
das
fstpl
or
pop
bound
stc
sub
loop
test
lret
test
aas
or
ret
push
jbe
push
lock
mov
rclb
dec
test
push
bound
pop
lret
push
dec
pop
fidivl
andb
movsb
jb
ds
or
insl
movsl
cli
scas
cmp
push
xor
sub
mov
loopne
fadds
mov
adcl
inc
cmp
popf
mov
dec
cs
mov
push
pusha
cld
or
in
mov
push
addr16
cld
mov
test
cmp
xor
jae
sahf
or
cmpsb
inc
data16
push
mov
lea
cmp
push
pop
xchg
inc
ds
sbb
cmp
out
sub
sbb
repnz
sti
jo
sahf
lds
jmp
test
dec
std
addb
mov
fcmovne
mov
sub
mov
pusha
fwait
mov
jns
shlb
adc
mov
or
xor
rorl
fyl2xp1
sub
test
dec
pop
fildll
mov
and
lcall
cmp
je
push
pop
dec
pop
xchg
out
mov
xchg
les
jmp
sbb
pop
xchg
jo
dec
repz
sbb
jle
lret
mov
inc
cmp
cli
or
out
jle
sbb
sti
jle
push
sbb
inc
and
into
adc
loop
lods
les
aas
jne
fsubl
lock
out
dec
push
sub
xchg
sub
rcr
stos
or
sbb
pop
popa
push
pusha
lods
xlat
das
xchg
lcall
xor
xor
arpl
scas
push
jp
pushf
ret
pop
data16
repz
cli
in
imul
and
arpl
inc
xor
add
jmp
add
sarb
xor
ficompl
jbe
push
mov
imul
xchg
sbb
rcrl
mov
in
xchg
call
adc
push
cmpsb
cwtl
push
jle
clc
fldl
mov
pop
pusha
xchg
mov
out
or
notb
pop
out
sbb
inc
out
cmpsb
int3
sbb
movsl
push
pushf
movsl
nop
or
inc
cmp
fadds
dec
and
sub
in
gs
mov
pop
imull
adc
cmp
push
jge
jnp
mov
addr16
cmpsl
arpl
mov
push
gs
jg
ljmp
or
cmp
das
popa
shlb
xor
mov
push
pop
jge
xchg
into
jge
or
arpl
pop
repnz
test
jp
clc
jmp
sbb
mov
adc
psubusw
pop
adc
das
lock
jnp
sbb
mov
push
data16
rcrl
insb
push
into
push
enter
mov
push
inc
ljmp
movsl
cmc
push
xchg
adc
loope
xor
mov
add
adc
cmp
jmp
movsl
repnz
xchg
fs
shrl
mov
or
clc
xor
xchg
out
insb
adc
int3
incl
xor
xchg
fstpl
fs
cltd
jmp
sbbb
pop
and
jbe
jb
xlat
pop
mul
inc
push
sub
call
xlat
aaa
sbb
out
cltd
test
pop
jo
out
sbb
add
fnstsw
dec
and
push
mov
xchg
cwtl
fidivs
xchg
popa
daa
push
arpl
or
sub
jnp
mov
push
xchg
push
xlat
repz
lods
hlt
jne
sub
ljmp
ja
xchg
xlat
jl
dec
cmp
inc
out
fists
xchg
or
lret
jno
rorb
or
addr16
in
xor
movsl
jecxz
inc
pop
cs
loope
add
or
cld
or
inc
lcall
imul
dec
mov
cwtl
dec
jecxz
jecxz
pop
mov
mov
cld
insl
dec
dec
mov
es
icebp
sbb
push
dec
js
scas
mov
das
and
cmp
mov
jle
pop
test
jne
enter
push
sbb
pushf
ja
mov
or
inc
sub
mov
push
xor
incl
adcl
aas
xchg
mov
aad
inc
adc
sub
push
sbb
pop
rclb
fsubl
jns
adc
push
cmp
pop
outsb
and
fimull
or
add
pop
insl
fsubrs
xchg
mov
shll
mov
bound
mov
or
idiv
hlt
out
addr16
imul
ljmp
jo
jl
adcl
mov
aaa
movsl
jo
mov
mov
adc
jbe
cmc
lcall
mov
aas
pop
pop
xchg
mov
xchg
out
mov
adc
push
repz
fidivrl
lahf
in
push
aad
inc
js
pop
icebp
push
push
out
mov
movsb
outsb
lret
push
insb
mov
sub
iret
aas
std
adc
ss
jecxz
sbb
pop
test
pop
adc
mov
mov
pop
xchg
xor
cltd
pop
ljmp
fidivs
push
test
sub
push
mov
push
cmpb
fiadds
mov
ror
jmp
jns
mov
loop
xchg
dec
mov
or
pop
mov
mov
daa
jno
dec
dec
gs
std
pop
jb
inc
inc
sahf
outsb
lcall
or
enter
and
test
sbb
ret
inc
aam
xor
fdivr
lret
sbb
mov
inc
fcmovb
dec
sbb
ja
sahf
out
xchg
call
sbb
add
pusha
push
lods
aad
xchg
cmp
mov
lock
outsb
vmread
es
push
jns
fdiv
loop
xchg
or
test
sub
xor
fwait
add
xor
cltd
xchg
push
insl
gs
jae
insl
dec
pop
decl
jge
mov
fxam
push
sub
xchg
pop
xchg
dec
xchg
jb
loopne
js
adc
xchg
mov
mov
mov
ljmp
add
xor
jns
icebp
jno
add
jo
and
sar
fcompl
js
push
dec
sbb
cmpsb
ss
mov
sbb
push
jne
xchg
shrl
rcl
js
or
dec
mov
mov
jmp
out
pop
add
mov
cmp
cld
mov
dec
dec
xor
cmp
icebp
inc
insl
xchg
imulb
push
jecxz
xchg
jnp
inc
inc
pop
jp
pop
xor
dec
mov
xor
sbb
scas
out
gs
shll
les
mov
ficompl
test
lcall
mov
and
cmp
dec
and
jecxz
push
push
mov
sbb
xchg
rorl
iret
mov
xchg
adc
mov
lret
inc
add
hlt
pop
push
xchg
ficompl
test
ss
arpl
fbld
sbb
lret
cmpsb
jg
scas
fucomi
out
add
pop
pop
std
jne
push
shrl
subl
fiadds
cld
adc
jne
frstor
mov
js
sub
sub
mov
cmpsl
outsb
stos
adc
cmp
outsb
mov
add
ret
lods
cmpl
ljmp
hlt
sti
push
push
bound
dec
fldl
lock
repz
pop
fidivl
dec
lea
or
jle
out
pushf
dec
clc
adc
mov
add
pop
dec
inc
cmp
addr16
in
mov
call
lea
cwtl
jg
rorl
push
push
lret
jnp
jl
in
push
fcmovnu
push
xor
mov
xchg
push
jae
ret
data16
int3
jns
ss
sbb
pop
mov
in
pop
push
xchg
xchg
fsubp
push
lret
popf
pop
in
test
jl
sub
inc
ja
shrl
push
sub
adc
mov
iret
in
ror
imul
in
rcrb
int
pop
sub
fcomp
mov
mov
fisubrs
mov
movsl
lods
fisttpll
out
xor
xchg
call
shrl
or
in
push
dec
mov
cmp
loopne
imul
movsb
daa
test
dec
lods
inc
and
std
jae
xchg
inc
ss
push
adc
mov
in
push
movsb
inc
rcrb
push
sub
dec
icebp
test
scas
xor
outsb
addr16
popa
lds
sar
aaa
in
adc
imul
adc
cwtl
dec
pop
into
or
pushf
loope
or
mov
cli
test
popa
into
dec
mov
outsb
mov
lods
pop
mov
cmp
mov
imul
jne
or
push
pusha
pop
pavgw
aas
pop
xor
or
mov
loope
das
jecxz
pop
push
cmp
lock
or
mov
sub
pop
cmp
popa
push
movsl
sub
out
pushf
adc
pop
mov
mov
dec
fistps
popa
mov
out
cli
aad
outsl
into
lretw
xor
dec
jp
xchg
sbb
push
jmp
subb
in
out
jge
ficoms
pop
sbb
repz
out
lock
les
jmp
sub
shll
jno
addl
pop
or
mov
xor
xchg
inc
ficoms
popf
mov
mov
cmp
mov
pushf
cmp
adc
mov
loopne
repz
sub
cmp
or
push
push
daa
aad
jp
insl
sub
je
adcb
jp
jb
adc
and
das
pop
sbb
sub
mov
inc
xor
lods
xor
test
fiadds
pusha
push
std
out
mov
sub
pusha
fdivrl
fimull
xor
xchg
inc
cmpsl
adcb
pop
pusha
xlat
add
ljmp
and
jg
push
push
mov
jo
xor
mov
and
sarl
mov
jmp
in
add
or
fsubp
data16
pusha
faddp
mov
lds
loopne
pop
or
lods
arpl
sbb
mov
add
xchg
sbb
dec
pop
mov
leave
insb
xor
outsb
mov
jb
or
ljmp
cmp
or
or
sbb
adc
or
fcoms
pop
sub
popa
mov
flds
push
sub
sub
mov
cmc
push
adc
pop
adc
dec
out
sbb
loope
lret
imul
int
test
cmpsl
mov
enter
push
jne
cmc
mov
ja
aaa
rolb
and
inc
loope
or
js
cmp
lods
iret
mov
daa
pop
or
pop
lret
xlat
push
imul
jbe
push
mov
dec
or
out
fidivrl
push
lcall
divb
mov
insl
jb
dec
repz
add
mov
pop
jne
jmp
sbb
imul
mov
mov
and
xchg
push
fsubrp
sub
inc
in
mov
mov
or
les
sub
sahf
int
mov
jno
pop
sbb
ja
ljmp
push
or
lea
xor
hlt
loop
lret
mov
adc
mov
push
bound
lock
lret
bound
jns
mov
aad
adc
int
and
lret
cltd
ret
dec
test
js
fadds
jle
loope
or
push
pop
pop
or
sarb
xor
xor
movsb
int3
sahf
mov
mov
cmp
andnps
pop
add
and
push
ljmp
cld
jo
enter
loop
pop
mov
xor
jg
jmp
div
pop
div
xchg
push
mov
pusha
adc
sahf
jno
xor
pop
jne
jge
in
std
mov
dec
sarb
sarb
inc
movhps
mov
loope,pn
push
outsb
mov
sbb
in
lods
stos
dec
fstps
aam
cwtl
loop
pusha
in
jp
push
xchg
jmp
movsl
in
push
test
mov
push
fcomps
repnz
mov
dec
mov
xchg
dec
fsubl
xchg
cmpl
inc
pop
das
adc
adc
roll
ss
shlb
adc
mov
jnp
iret
les
ja
mov
cmpsb
mov
lods
sbb
movsb
lcall
and
jp
cmp
in
mov
add
mov
xorb
enter
jbe
mov
std
sbb
or
pop
push
sti
or
out
xor
jp
push
cmp
adc
sarl
jl
cmp
mov
cltd
movsl
addr16
bnd
mov
enter
popa
push
inc
psllq
repz
and
sub
and
cmp
test
es
add
dec
into
aad
pop
insb
dec
and
subb
in
dec
mov
cmp
stos
cmp
push
clc
push
shll
push
dec
ret
xor
cmp
inc
das
lahf
pop
mov
pop
add
imul
pop
movb
cld
pop
add
inc
jae
fwait
jmp
cmp
mov
stos
add
nop
push
out
inc
es
sub
test
ret
les
jnp
mov
sub
pop
stos
in
pop
test
push
mov
jb
xchg
dec
test
popa
jmp
test
and
sbb
mov
repnz
jmp
dec
sub
stc
adc
pop
xchg
in
div
push
jge
notl
shlb
rclb
lds
cmpw
pop
ss
lret
sub
dec
mov
popl
rcl
inc
inc
inc
ret
aad
and
out
ja
xchg
mov
mov
cmp
lea
sbb
insl
jp
jl
in
mov
out
std
mov
dec
adc
inc
push
xlat
push
aaa
outsb
push
iret
jno
ja
test
inc
mov
in
insl
ss
pop
add
shlb
mov
sbbl
lahf
xchg
popf
mov
push
cmp
fmul
ja
cmc
jae
insb
pop
inc
mov
vpmacsdqh
sarl
cmc
ds
subb
and
out
mov
inc
inc
push
add
push
and
in
cmp
pop
add
ret
es
pop
lea
xchg
adc
stos
jp
rcrb
and
pop
addr16
repnz
cmp
in
lahf
jno
iret
dec
adc
call
sub
pop
aad
data16
push
mov
push
or
leave
cmp
mov
fdivrs
lock
les
xor
outsb
pop
jbe
pop
in
out
push
scas
jecxz
add
mov
inc
ja
push
mov
cmp
inc
fnstenv
cmc
cmpsb
rclb
add
cmpsl
stos
add
or
sub
jle
subl
pop
jnp,pn
bound
jecxz
push
adc
jg
mov
cmc
pushw
inc
add
xchg
int3
jne
or
cli
sbb
fsubs
jae
outsb
push
pop
das
mov
mov
or
push
outsl
push
push
mov
mov
popf
repnz
dec
mov
mov
and
fists
mov
cwtl
in
xchg
lea
xchg
add
enter
repnz
sti
xor
lods
fimull
mov
or
gs
sub
jle
sarl
push
js
bound
dec
jmp
jge
fwait
iret
shll
mov
scas
enter
in
mov
addr16
jae
pop
int
bound
dec
out
shll
pop
lret
sub
mov
sarl
pop
test
pop
cli
push
sbb
scas
test
lds
testb
pop
push
bound
lahf
fistpll
fimull
cmp
push
sbb
loop
pop
add
add
ret
mov
xchg
mov
mov
sti
in
aas
push
inc
mov
inc
pop
dec
jmp
daa
pop
sub
pop
cmp
cmpsb
xor
mov
repnz
push
adc
xor
sbb
pop
mov
xchg
std
ja
fbld
jae
dec
cmpsl
shlb
mov
lods
jle
daa
in
out
aad
or
test
fadd
pushf
mov
mov
add
sbb
pop
adc
aaa
mov
adc
and
inc
ljmp
fwait
out
cmp
jbe
jp
lcall
stc
push
sbb
cmp
add
lret
test
cmp
ss
xchg
lret
and
nop
aam
push
les
fs
div
inc
cmp
stos
sub
xorl
ljmp
xorb
fs
fcmovnbe
pop
je
dec
xor
stc
jmp
leave
mov
clc
out
mov
xor
inc
fs
lret
xchg
popf
mov
int
shrl
fwait
push
cmp
mov
cmp
es
push
mov
sbb
aaa
int
cmp
fs
popf
push
adc
outsb
mov
mov
adc
cld
aam
scas
popa
push
xor
in
mov
out
push
sbb
add
sub
btr
xlat
jbe
fidivl
cmp
sar
jl
push
imul
repz
stos
imul
outsl
fs
sub
adc
lret
std
lahf
ret
sub
xor
fs
pop
andb
cmp
jecxz
sub
lods
negb
mov
dec
fbstp
pop
cmp
insb
adc
jge
or
ljmp
out
and
dec
sub
cli
mov
mov
jae
loop
mov
das
push
adc
bound
addr16
test
mov
aam
xlat
pop
imulb
add
ljmp
loopne
xor
xchg
mov
repnz
or
mov
xorb
mov
xchg
push
test
dec
jecxz
in
xor
pusha
and
dec
mov
sar
in
sbb
adc
mov
inc
xchg
leave
sub
rcrb
loopne
xchg
xor
fsubp
int3
jno
rclb
insb
or
jg
bound
dec
pusha
pop
fcmovu
pop
push
and
cmpsl
aam
fs
sub
scas
in
mov
inc
stos
xchg
dec
cmp
sub
mov
mov
mov
mov
mov
lcall
adc
sbb
xlat
mov
adc
mov
mov
jno
call
lcall
mov
pop
jae
outsb
or
add
int3
lret
mov
inc
inc
dec
stos
sbb
dec
sbb
pop
idivl
dec
mov
dec
adc
xchg
incl
adc
mov
out
xlat
into
mov
mov
sub
mov
xorb
jns
add
cmpsl
jle
adc
lds
inc
jl
mov
pop
inc
cmp
arpl
xor
div
mov
xlat
popa
sbb
or
shl
sbb
jmp
popf
ss
add
js
sarl
test
mov
stc
sub
sub
mov
sbb
ret
push
idivl
push
pop
fisubrl
adc
scas
data16
mov
cmp
adc
enter
call
pop
lcall
cmp
movsb
xchg
mov
mov
dec
pop
mov
or
jmp
pop
inc
std
sti
dec
pop
adc
pushf
iret
jle
loope
jge
stos
pop
push
inc
xor
cs
scas
ret
inc
mov
aad
mov
mov
pop
orl
ja
ds
enter
xchg
ljmp
popf
xchg
in
mov
lods
mov
aas
or
lock
jp
push
push
add
dec
orl
ds
jno
pop
xor
or
cmc
add
dec
idiv
mov
dec
xchg
jp
sub
scas
std
xor
call
jl
roll
push
mov
notb
cmp
cltd
pop
andb
xor
cmpl
in
cld
fwait
popl
xchg
fsubl
add
repz
repz
loope
imulb
shll
xor
aad
fimuls
stos
arpl
adc
dec
mov
je
cwtl
imul
int
mov
adc
add
mov
xor
mov
shll
dec
into
fdivrl
cmpsl
ss
aad
cld
dec
mov
jne
xlat
mov
scas
cs
sbb
out
imul
punpckhwd
xchg
xchg
pop
xchg
fisttpl
jle
sbb
or
xor
fbld
adc
ret
fcompl
xchg
and
js
test
jne
xchg
mov
xchg
cmp
loope
push
xchg
dec
inc
scas
mov
mov
jne
xchg
test
dec
mov
jnp
movsl
add
push
lret
or
add
icebp
jne
shlb
cmp
adc
gs
cmp
insb
enter
sbb
sub
cs
fstpt
xchg
mov
mov
mov
mov
xor
xchg
cwtl
sbb
sbb
cs
repz
leave
stos
mov
pushf
sub
jno
rep
xor
mov
push
movb
cld
jae
les
inc
lock
cmpsb
icebp
cld
mov
mov
sub
imul
jb
ret
je
js
add
add
xchg
daa
xchg
adc
inc
xor
push
clc
loope
bnd
cmp
mov
inc
or
out
fs
insl
sub
ds
pop
aad
fs
push
imul
pop
scas
ja
push
mov
adc
out
shl
adc
pop
push
or
xchg
or
lret
xor
cmp
mov
cmp
sbb
push
idivb
jbe
pushf
stos
jo
outsb
jns
push
and
fimuls
leave
jg
or
fidivrl
jae
jbe
jg
xchg
sbb
aam
dec
test
ficoms
pminub
mov
dec
sahf
popa
cmpsl
push
faddl
mov
jp
call
lahf
lea
or
sarl
cmc
fs
xchg
jo
mov
mov
mov
add
jp
pushf
or
fwait
sbb
jmp
sub
xchg
int
data16
sbb
clc
push
xchg
inc
test
mov
mov
pushf
sub
pop
fistps
adc
rcrb
inc
dec
test
or
cwtl
sub
ficoms
cmp
sbb
fwait
dec
sbb
repnz
lahf
pop
inc
mov
xchg
adc
insb
dec
mov
in
mov
movsl
jbe
pop
repnz
adc
addr16
xchg
dec
sub
rorb
les
jle
push
aam
hlt
outsl
and
pop
gs
and
test
sub
test
mov
repnz
outsl
push
push
enter
nop
and
cmp
cwtl
xor
push
or
xlat
mov
andb
xor
sub
push
cmp
mov
fmull
push
dec
sub
das
push
lret
je
test
mov
xchg
testl
xor
out
dec
cld
mov
repz
xor
xor
xor
test
adc
pop
ret
stc
adc
sar
add
enter
or
insb
adc
jge
mov
in
das
iret
jg
dec
fstl
sub
out
pop
sub
enter
jbe
rolb
jne
jns
sarb
mov
popa
into
inc
into
push
call
sub
mov
out
cmp
lahf
out
mov
adc
cli
mov
xor
push
popf
and
ficoms
aaa
lret
js
or
add
push
test
dec
scas
xor
push
out
lods
sahf
dec
dec
xchg
pop
imul
loopne
sub
xchg
sbb
jb
xor
divl
sub
cmp
add
push
jle
sub
jge
push
shrl
inc
push
adc
or
setae
loopne
push
pop
add
arpl
add
int3
add
pusha
lea
in
jg
jnp
es
mov
movsb
mov
xor
pop
jp
lret
lea
xor
cmp
push
cmpsl
ljmp
cmpsb
or
mov
xor
push
lret
mov
daa
rcrb
inc
dec
inc
aaa
xchg
push
testl
add
and
cmc
mov
lods
mov
and
jno
inc
ljmp
lahf
test
mov
sahf
jecxz
mov
sub
dec
aas
add
ret
xor
test
fs
sub
add
fimull
sbb
psllq
js
fbld
adc
push
aad
or
out
in
inc
ljmp
aas
or
ret
and
push
xchg
rclb
inc
inc
test
shrb
pop
fcmovu
cmp
das
ja
add
dec
gs
sbb
call
cmp
mov
sbb
xlat
add
in
es
out
jne
cld
insl
bnd
sar
in
ss
dec
mov
add
out
sub
cwtl
push
inc
dec
add
jmp
push
inc
jns
cmpsb
fdivrp
aam
inc
ret
in
popa
push
sub
jg
cmc
mov
lret
in
idivb
dec
hlt
pop
jo
xchg
pop
adc
push
imul
das
out
add
sbb
idivl
xchg
mov
sahf
pop
inc
insl
push
pop
push
popf
jo
mov
mov
inc
aad
jmp
sub
data16
cld
or
rclb
lock
jbe
jl
mov
outsb
out
xchg
push
and
pop
sub
fnstenv
leave
test
mov
lods
stc
xor
mov
dec
test
cmp
out
cmp
dec
sub
addr16
test
mulb
cmp
mov
inc
push
ss
loopne
jp
nop
mov
in
sbb
and
adc
mov
jp
or
cmp
subl
mov
lcall
loop
xor
pop
pop
out
sub
xor
and
lcall
enter
hlt
cmp
xchg
xor
mov
jbe
jp
and
jbe
dec
movsb
dec
insl
or
orl
dec
filds
rcrb
adc
jmp
jmp
or
pop
mov
inc
mov
jecxz
xor
dec
dec
cmp
jo
inc
loope
push
or
cwtl
in
inc
xchg
sti
jecxz
ds
out
and
imul
or
idivb
call
mov
aam
pop
ss
iret
lret
jbe
inc
jns
imul
add
negb
ret
lret
lods
cmp
mov
pop
sub
mov
subb
lahf
cmp
sub
sub
cmp
mov
jle
mov
loope
pop
sbb
pop
pushf
mov
call
dec
cmp
mov
sbb
imul
push
mov
mov
icebp
je
cmp
jmp
pop
lahf
jo
neg
pop
iret
aaa
cmp
jb
dec
cs
idivb
popa
ja
inc
sbb
and
xor
mov
imulb
xor
sbb
and
cmp
int
pop
dec
int3
add
cmpsb
sbb
dec
popf
cmp
int3
push
nop
std
es
add
sub
dec
pop
mov
dec
popa
mov
dec
insl
inc
push
mov
out
out
push
cli
aad
or
dec
cltd
or
test
xlat
mov
sbb
hlt
bound
dec
sahf
fisubs
mov
push
sbb
movsl
and
mov
int
cmp
pop
dec
mov
imul
sub
in
pusha
cmp
mov
xor
test
sarl
push
mov
test
stos
mov
pusha
xchg
add
xor
push
pop
clc
mov
adc
and
clc
jmp
pop
cwtl
push
mov
cltd
inc
jb
rolb
rcrb
push
mov
push
std
sbb
mov
or
arpl
pop
xchg
gs
lret
mov
ficoml
imul
ror
fldln2
and
mov
push
sub
pop
sarl
es
fldcw
and
mov
lds
insb
insl
push
fwait
sbbb
arpl
lods
aad
dec
and
xchg
mov
mov
fs
or
int3
mov
in
imul
mov
mov
cwtl
mov
pop
arpl
lret
shl
inc
mov
mov
nop
bound
xchg
insb
repz
push
orl
xor
testb
push
mov
dec
xchg
xchg
ficoml
add
jg
and
fcoms
push
aad
cmc
popa
mov
pop
adc
ret
scas
aad
sbb
test
mov
out
out
movsl
clc
sbb
fldt
push
cmpsb
lods
or
dec
dec
lds
arpl
dec
call
lret
adc
xor
dec
jnp
in
xor
mov
loop
lcall
jle
test
adc
mov
roll
cwtl
hlt
jmp
sbb
scas
movsb
test
mov
add
adc
mov
mov
push
fisttps
jbe
je
outsb
mov
aad
add
inc
das
repnz
mov
mov
lahf
xchg
test
mov
sahf
mov
fadds
outsb
pop
nop
inc
cld
dec
sbb
fiadds
jns
test
leave
mov
test
or
imul
inc
clc
push
mov
aas
jne
dec
add
faddl
clc
pop
das
or
int3
push
ja
dec
call
and
and
inc
mov
clc
mov
dec
test
fbld
sarb
divb
dec
cmp
jno
lret
fmuls
cmp
push
fildll
scas
fidivs
scas
jae
or
inc
lock
fbld
mov
mov
and
sub
pop
cmp
pop
push
xlat
popa
mov
ss
mov
push
pop
mov
stos
stos
in
int3
sub
out
shr
aas
push
inc
mov
cmp
mov
pop
adc
daa
lock
lcall
mov
dec
mov
mov
mov
mov
xlat
fnstcw
andl
loopne
and
out
add
stos
add
xchg
sbb
pop
cmp
stc
dec
ja
push
bound
adc
cltd
out
test
std
aam
ljmp
sbb
test
mov
sahf
stc
mov
mov
lea
add
fstpt
inc
sbb
mov
jnp
lds
xchg
inc
cmp
insb
gs
pop
push
and
lret
sbbb
mov
in
fs
sub
or
sub
shl
popf
ret
aad
cmp
leave
push
adc
and
jmp
pop
int
int3
mov
fs
clc
mov
push
mov
arpl
cmp
sbb
xor
flds
mov
stc
xchg
xlat
sbb
incl
xchg
or
mov
pop
addb
inc
aad
jecxz
fsubrs
in
mov
repz
enter
sahf
hlt
xor
std
fldl
daa
push
xor
jg
lods
nop
popf
sbb
inc
icebp
mov
cmp
jbe
ret
or
sbbl
or
popa
leave
inc
and
insb
xor
xor
dec
lret
dec
sbb
lea
xchg
sbb
adc
dec
popf
das
cli
cld
ret
cltd
push
cmp
cmp
dec
push
out
dec
mov
hlt
dec
adc
mov
ret
mov
andl
sub
dec
push
lods
adc
inc
mov
jbe
nopl
fst
out
pushl
fdivl
or
icebp
repz
test
test
imul
dec
pop
xor
hlt
leave
ss
mov
pop
pushl
pop
fsubs
xchg
clc
das
scas
les
pop
xchg
sbb
add
jns
in
test
and
lcall
xor
xchg
loopne
xor
fmuls
and
mov
sbb
lcall
cwtl
hlt
std
dec
cwtl
sahf
fs
or
sub
stc
and
fidivl
push
jne
adc
dec
loop
loope
mov
fidivl
vpunpcklwd
in
cmpsb
xchg
dec
adc
cltd
lds
and
test
adc
fwait
dec
call
mov
ret
addr16
nop
dec
cs
icebp
mov
idivb
dec
or
mov
inc
ficomps
sbb
loope
xor
adc
jb
cmp
imul
cmpsl
cltd
outsl
sbb
sarb
aaa
pushl
lahf
xor
push
xchg
push
fimull
sbb
fwait
sahf
dec
rcll
jnp
mov
daa
mov
inc
or
sub
pop
cld
cmp
push
and
mov
adc
dec
dec
jmp
fistpl
sti
out
sub
cmp
roll
loope
in
xchg
xchg
daa
mov
add
fsubr
push
stos
test
test
inc
outsl
xchg
cld
xchg
popa
push
int3
in
mov
push
es
mov
sbb
cmp
cltd
mov
sub
int3
leave
mov
mov
push
mov
xchg
imul
aam
fcoml
fdivr
cmpsl
addb
daa
lods
sub
inc
inc
ss
mov
notb
jle
pop
jg
mov
add
mov
jp
and
arpl
cld
lds
dec
inc
or
stos
leave
or
mov
rorb
mov
push
pop
ljmp
inc
jne
mov
xor
xor
pop
into
orb
push
pop
and
jmp
ret
pop
push
out
je
push
test
push
jbe
jl
cmpsl
je
cwtl
mov
out
outsl
int3
mov
adc
lea
xchg
mov
lods
xor
test
jg
test
mov
pop
xor
fcoms
loope
push
dec
xchg
xchg
les
std
push
add
jae
push
dec
sbb
in
popl
frstor
fisttps
stos
add
or
sub
je
cwtl
mov
sbb
mov
out
cmp
repnz
aad
sti
neg
pop
or
jno
mov
dec
daa
xor
add
inc
arpl
clc
ficomps
sub
jbe
cli
test
pop
scas
and
inc
pop
ret
mov
and
int3
out
rclb
movsb
daa
cmpsb
je
mov
xor
adc
dec
mov
sbb
push
adc
leave
pop
pop
or
jnp
jnp
repnz
cwtl
fwait
sub
sub
call
mov
xchg
mov
xchg
jecxz
push
mov
sub
movsb
push
mov
arpl
add
int
mov
mov
std
mov
js
and
mov
scas
push
hlt
cli
or
leave
cmp
and
fdivrs
mov
call
mov
fisubrs
add
not
mov
add
mov
imul
aaa
enter
push
mov
in
push
int
pop
aam
cld
cmpsb
jmp
ds
inc
bound
inc
repnz
test
mov
out
cmp
pop
popa
fidivs
icebp
aaa
imul
add
out
inc
nop
pop
xchg
sub
es
dec
sarl
and
mov
iret
cmp
jle
gs
mov
push
stc
jg
or
or
imul
repz
ja
out
sub
mov
decb
and
mov
inc
mov
xorl
mov
std
add
mov
cli
cmp
in
in
lods
jns
in
jnp
xor
div
mov
out
je
xor
lret
cltd
int
inc
sub
xor
ret
xchg
pop
or
fldcw
mov
push
add
jns
out
dec
popf
shlb
dec
loop
and
sub
inc
fs
in
dec
lea
testb
bound
cmp
hlt
cmp
aaa
push
mov
jg
imul
lahf
xor
pop
dec
jg
div
adc
in
mov
push
popa
lds
test
int
aaa
sub
adc
fs
pop
xchg
push
add
loope
or
lcall
stos
push
or
js
sbb
fdivp
mov
addr16
std
inc
xor
lock
sarl
sbbb
fcomp
inc
pushf
sahf
jo
xchg
cwtl
xchg
jns
dec
pop
mov
shrb
shll
sub
out
xor
dec
ja
xchg
je
popf
mov
mov
pusha
stos
lea
mov
adc
adc
cmp
sub
test
cld
or
out
jl
sarl
icebp
add
movsl
mov
xorb
cmpsl
jg
leave
mov
movsl
pandn
xor
negl
mov
lock
or
stos
xchg
dec
ret
clc
clc
lds
push
fdivrl
cwtl
insl
xor
jno
sub
cmp
jnp
test
sub
dec
mov
mov
mov
dec
pop
push
sub
sub
or
movsb
push
in
rorb
icebp
es
adc
fdivrl
fs
cmp
push
out
ret
adc
push
mov
in
jmp
cmp
inc
pushf
in
loopne
sub
mov
xor
imul
loopne
push
cmp
cld
packuswb
cmc
sbb
ds
pop
add
or
lock
sbb
sbb
jge
push
dec
iret
ds
and
stos
cmp
xor
repnz
xchg
mov
sbb
jns
cmp
pop
sub
in
push
gs
rclb
cmp
scas
pop
sbb
or
aaa
jns
ds
imul
outsb
fcoml
or
xchg
outsl
pusha
stos
xlat
sbb
cmc
fsubrl
xor
pop
push
vmulps
and
cmp
jmp
outsb
pop
and
fcomps
jmp
add
mov
ja
jge
jbe
addr16
loope
test
ja
mull
jp
push
mov
cwtl
ds
sbb
into
xchg
rcrb
push
clc
jl
ret
inc
test
and
decl
or
xchg
jnp
scas
push
dec
xchg
fsubrl
fadd
adc
push
and
mov
and
in
pusha
fcomi
pop
bound
pop
test
popa
or
cmc
imul
mov
shll
inc
cmp
std
jno
outsl
test
and
xor
xlat
out
sahf
aas
aad
xchg
mov
or
ljmp
xchg
add
nop
repnz
mov
cltd
push
cmp
rclb
cli
dec
stos
xchg
mov
cli
sub
mov
mov
xchg
or
xchg
and
ljmp
push
add
aad
int
mov
cmc
and
and
push
addr16
cli
jge
pop
aam
rcll
add
sub
aad
dec
int3
pmullw
sbb
gs
and
fucomip
jmp
cli
mov
push
mov
xchg
iret
out
out
pop
mul
mov
xchg
cmp
adc
ja
daa
fs
cmp
mov
dec
movb
orb
das
jmp
inc
rol
bound
xchg
arpl
aad
daa
test
push
ret
mov
cmp
adc
jbe
scas
push
and
add
mov
push
icebp
cltd
adc
sbb
mov
outsl
movb
fnsave
jnp
xchg
leave
bnd
dec
in
incl
inc
sub
rorb
mov
dec
stos
pop
sbb
inc
rorb
xor
inc
push
adcl
in
pop
xlat
or
or
mov
pusha
mov
or
repnz
mov
add
cmpsb
lds
add
pop
jb
orl
leave
cs
into
sbb
std
lods
test
mov
movsb
jnp
int3
add
inc
lret
mov
div
lods
daa
cmc
je
mov
in
pop
int
adc
pop
sbb
mov
or
adc
jge
fdivrl
fwait
clc
dec
out
xchg
and
arpl
add
or
ss
pop
nop
clc
cli
outsb
lcall
sbb
outsl
lahf
xchg
sub
in
add
or
repz
mov
dec
icebp
jnp
mov
or
or
push
xchg
jecxz
aam
mov
mov
rorb
fldt
push
fs
and
js
pusha
mov
ds
pop
mov
push
shrl
jo
loope
xchg
aad
into
enterw
pusha
aam
xchg
lcall
push
jnp
jo
add
test
mov
push
popl
lds
leave
shl
out
in
lret
mov
mov
test
xchg
xlat
fsubs
cmpsl
jp
sub
pop
dec
inc
adc
sub
das
inc
and
push
paddq
shl
and
mov
jns
jne
xor
fmul
jbe,pn
out
pop
or
add
jae
sbb
repnz
out
or
pop
imul
jo
leave
repz
mov
ss
out
and
popw
xchg
jl
lcall
or
push
mov
push
mov
shll
cltd
dec
out
mov
add
xchg
int3
add
ret
ljmp
bound
sbb
sbb
fs
mov
ficoms
enter
aad
fucompp
iret
scas
jmp
sub
frstor
aas
push
and
inc
repz
subb
aam
mov
aam
add
mov
jecxz
mov
adc
mov
es
cmp
popa
adc
jg
push
xor
inc
mov
sub
lcall
sbb
xor
pop
adc
mov
add
push
sar
lret
jb
jecxz
out
mov
in
xchg
and
test
mov
ret
insl
mov
sbbb
mov
lret
pop
test
hlt
lea
nop
pushf
aad
xlat
cmp
rclb
pop
mov
lret
push
sbb
es
inc
pop
push
add
sbb
cmpsl
fcomps
push
pop
ficoms
pop
jae
cmp
jl
lea
xchg
pop
fistpl
cltd
xchg
jo
pushf
cmp
sbb
hlt
cmp
or
into
push
push
jnp
mov
stos
fistl
aas
add
mov
xlat
gs
mov
dec
cli
add
jb
jae
pusha
mov
mov
xor
adc
fdivs
nop
push
mov
icebp
insb
sub
movups
mov
push
fimuls
and
outsb
add
jmp
and
fs
inc
dec
jecxz
les
inc
test
scas
and
xchg
jmp
pop
sbb
or
cmpl
or
xchg
and
jg
cs
adc
sbb
or
stos
inc
pop
sub
sbb
pop
nop
lret
xchg
jp
shl
xchg
cmp
or
push
inc
das
in
jb
jo
pop
mov
cli
cmpb
int3
mov
ljmp
repnz
out
xchg
js
xor
dec
dec
lahf
or
jmp
xchg
addr16
mov
iret
adc
repz
dec
jne
popf
iret
add
in
aas
and
sbb
in
ja
sarb
or
mov
stos
mov
push
pop
loop
xor
or
leave
adcl
jno
inc
lods
pop
lea
jnp
popa
lret
pushl
sbb
mov
test
add
arpl
je
push
push
data16
adc
clc
mov
cwtl
mov
loop
mov
data16
xchg
mov
sub
ljmp
popf
lds
sub
cmpsl
lods
test
sub
mov
cli
fidivl
sub
dec
push
insb
scas
jmp
pop
shlb
gs
fistl
mov
sub
xlat
aam
adc
mov
test
aam
mov
popf
testl
fs
ljmp
roll
aam
in
pushf
mov
int
push
jno
push
dec
mov
sbbl
mov
mov
test
xor
mov
mov
mov
addb
fs
in
fwait
add
jo
mov
mov
out
xor
xchg
mov
mov
test
aaa
mov
fld
ljmp
pop
inc
lds
add
in
out
ds
jne
and
mov
daa
pop
int
xchg
inc
insl
dec
test
fwait
adc
int
pop
dec
xchg
loop
adc
enter
out
adc
cwtl
xchg
imull
aam
mov
xor
jecxz
aaa
rol
lea
ds
jge
rcrl
cwtl
dec
sub
mov
or
ljmp
cmpsb
or
xor
mov
filds
add
cmpsb
das
mov
lahf
mov
jp
out
sub
in
test
icebp
cmpsb
inc
and
inc
inc
or
int
sti
push
hlt
dec
mov
jns
mov
nop
dec
repnz
movl
push
push
or
adc
mov
cmp
es
ljmp
sub
or
rorl
es
sbb
xchg
jb
inc
popa
cmp
scas
push
shl
push
jno
inc
lret
xchg
sub
inc
shlb
cli
outsl
mov
inc
pop
or
cmp
sbbl
or
sbb
cmp
xchg
push
out
sub
cmp
enter
loop
out
sbb
loopne
xchg
mov
in
mull
push
and
push
sbb
outsl
in
push
mov
and
lock
stc
sub
sbb
pushf
mov
sub
inc
pop
mov
add
in
jle
xor
xchg
cmpsb
mov
bound
or
xlat
in
push
pop
sbbl
sub
in
push
inc
adcl
pcmpgtb
outsl
adcb
jge
push
inc
pop
mov
dec
fldl
fwait
adc
out
sbb
and
fnstcw
jge
test
jb
or
mov
mov
xor
push
jb
and
loopne
loop
inc
or
adc
out
or
aas
inc
jmp
out
loop
and
xchg
lcall
xor
fdivrl
loop
sub
scas
mov
jg
push
and
ret
xor
sbb
shll
mov
push
pop
xor
mov
popl
adcl
incb
cs
cmpsb
ret
std
loopne
push
data16
aas
sbb
cmp
jmp
inc
cmp
inc
lret
sti
rcr
je
cmpsl
ror
push
cs
pop
sub
dec
xchg
or
ss
sub
sbb
nop
mov
std
push
lock
add
js
jne
jns
int
aad
mov
push
negl
int
cmp
rcr
enter
hlt
sub
je
sbbl
scas
and
lods
xchg
or
insl
push
pop
xchg
dec
lock
shrl
xchg
ret
push
or
inc
insb
and
out
cmc
mov
xlat
sbb
or
sub
jo
sahf
pop
xchg
fbld
push
jl
push
xchg
cmp
jb
inc
inc
and
dec
arpl
ds
push
pop
int
adc
scas
and
sbb
mov
push
sub
cs
cmc
int
push
pusha
sub
je
add
add
inc
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
push
push
push
push
nop
mov
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
or
add
add
push
add
addb
add
lock
addb
add
add
mov
add
add
add
orb
add
mov
add
add
add
adcb
add
xor
add
add
add
incb
add
js
add
mov
add
add
add
addb
add
or
add
cmpsb
add
xor
add
or
add
cmpsl
add
xor
add
or
add
add
add
test
add
add
push
add
add
add
addb
add
cmp
add
add
add
or
add
add
add
add
call
add
add
add
add
add
hlt
mov
add
add
add
add
add
add
add
add
or
add
mov
add
push
add
add
add
add
adcb
add
or
add
xor
add
pop
add
addb
add
addb
xor
add
test
add
add
add
or
add
add
add
ret
add
add
or
add
add
add
ret
add
push
add
add
add
add
add
xor
add
pop
add
add
add
add
add
add
add
mov
add
dec
add
add
add
add
add
add
enter
add
add
add
add
add
add
add
add
lret
add
pusha
add
add
add
add
add
add
add
sub
add
push
add
sub
add
js
add
add
add
or
add
add
add
iret
add
and
add
or
add
add
inc
roll
add
add
or
add
add
dec
rolb
jl
add
or
add
rolb
jb
push
add
add
add
add
addb
add
or
cmp
add
xor
xor
add
pop
add
sub
add
addb
jmp
add
addb
add
or
add
add
add
roll
xor
add
or
add
add
add
add
cwtl
add
add
add
add
add
add
add
xor
add
or
add
add
xor
add
rolb
add
add
add
add
add
aam
add
add
or
add
add
add
aad
add
add
add
add
add
inc
add
add
push
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
adc
add
or
add
add
jl
add
adc
add
or
add
aad
add
add
or
add
aad
add
add
or
add
add
add
adc
add
or
add
add
add
adc
add
or
add
push
add
loopne
add
adc
add
add
add
dec
push
add
add
add
or
add
add
je
add
add
aad
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
or
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
push
add
outsl
add
je
ja
popa
add
add
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
add
imul
add
popa
add
insb
add
add
imul
add
add
add
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
cmp
add
add
add
adc
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
imul
jae
and
push
add
jb
add
je
and
inc
add
insb
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jne
jb
outsb
add
add
add
sub
and
xor
xor
xor
xor
sub
add
add
add
add
adc
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
jae
insb
add
add
jns
data16
bound
jae
outsl
add
add
add
add
js
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
add
insb
add
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
cmp
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
add
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
insb
add
gs
xor
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
insb
jne
push
add
inc
gs
outsl
insl
bound
outsl
js
outsb
outsw
