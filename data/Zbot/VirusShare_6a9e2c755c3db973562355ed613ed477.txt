sbb
add
repnz
cltd
fdivr
and
mov
adc
lds
gs
lods
scas
mov
andb
push
aaa
jns
pop
jae
loope
xchg
adc
jbe
fdivrl
test
lods
int
das
ss
xlat
mov
inc
cmpl
jl
decb
aaa
xor
loopne
inc
jne
inc
rclw
enter
push
jecxz
ljmp
daa
inc
pushf
add
fsubs
sub
cmp
dec
out
out
adc
inc
rcl
dec
incl
lods
fildl
inc
push
ficomps
fnsave
sbb
add
add
adc
sahf
into
movsb
outsl
notl
inc
add
int3
int3
sbb
dec
xor
filds
xor
jle
mov
hlt
loopne
dec
in
jmp
call
push
movsl
wrmsr
pop
and
push
scas
mov
adc
fistps
fcoms
sub
aaa
stos
sub
mov
jne
loopne
fildll
or
movsb
xchg
and
test
leave
stc
outsl
jl
rclb
or
nop
loope
pushf
push
dec
mov
cmc
fst
loope
cmc
or
imul
fnstenv
sub
pop
mov
add
movb
and
in
or
inc
in
pop
cmp
lock
fists
fwait
xchg
inc
jge
push
xchg
pop
inc
pop
lds
aad
cmc
daa
jbe
mov
pop
and
clc
subl
mov
xor
xchg
dec
xchg
cmp
or
cmp
xchg
push
dec
mov
in
outsl
jo
fmul
scas
cmpsl
mov
or
stc
sub
pop
pop
and
cli
jo
xor
ds
xchg
sti
dec
aad
in
loope
mov
lds
fdiv
addr16
adc
std
int3
bound
or
pop
in
icebp
ds
jecxz
push
push
sub
insb
and
mov
inc
mov
out
int
test
and
jp
das
mov
adc
mov
jp
clc
imul
mov
or
or
push
cwtl
sbb
cmpsl
mov
pop
jmp
push
dec
jns
int3
mov
mov
lcall
shrl
stos
pusha
sub
imul
mov
sbb
mov
mov
out
test
sub
jae
aad
mov
outsl
fstpl
shll
mov
xor
jns
push
sub
and
or
mov
sub
into
les
add
jge
adc
sbb
movntq
sub
and
inc
ror
cmp
xchg
lds
dec
jg
lods
cmc
les
xlat
xor
pop
mov
repnz
in
jmp
in
call
xchg
leave
ds
add
add
in
popf
test
pop
sahf
fmul
xchg
push
jg
js
icebp
jmp
push
ljmp
lds
xchg
fdivs
decl
scas
fsubl
js
dec
pop
inc
in
sbb
xchg
xor
dec
or
xor
into
repnz
xor
js
inc
mov
sub
xor
cmpsl
shlb
pop
xchg
add
in
sbb
push
dec
cwtl
loope
xor
int3
mov
rcrb
test
lock
fiadds
or
cmp
icebp
cmc
call
push
mov
leave
push
xor
xor
add
adc
divw
add
std
mov
fadd
repz
mov
sub
movsb
loop
mov
mov
scas
out
icebp
pop
ret
sub
sbb
mov
jnp
leave
fs
test
in
mov
adc
dec
jecxz
sub
mov
mov
push
add
and
jns
dec
xor
mov
pop
and
pop
stos
addr16
mov
fisttpll
sbb
jp
dec
inc
in
add
movsb
test
nop
dec
sbb
sub
iret
cmpsl
sbb
xchg
add
jne
push
mov
lods
xor
mov
xor
adc
cmp
int3
dec
iret
sbb
imul
lods
push
add
lds
pop
addl
outsl
in
fstl
into
sbb
ja
xchg
xchg
jmp
cmp
out
lods
push
pop
adc
jp,pn
push
mov
dec
mov
mov
adc
cld
in
int
scas
and
push
mov
dec
inc
dec
stc
lcall
loop
mov
pop
ss
push
sbb
orl
mov
out
in
push
inc
adc
popl
dec
stos
ret
ret
or
adc
sti
xchg
push
push
in
ljmp
rclb
jnp
pop
adc
add
leave
movsl
gs
sbbb
rcrl
mov
popf
test
jecxz
stos
sbb
mov
mov
and
push
adc
sahf
push
dec
dec
jnp
inc
sbb
cwtl
mov
loopne
roll
mov
addb
add
pop
cmp
jp
fdivr
lds
outsb
mov
testb
pop
int
scas
pop
loope
je
pop
pusha
sti
jecxz
dec
sti
jecxz
popf
bound
push
pushl
jp
push
jnp
mov
jbe
inc
push
dec
inc
mov
lret
dec
repnz
pop
imul
pop
add
lret
xor
enter
jg
jecxz
push
xor
leave
ja
cmp
aaa
out
cltd
outsb
sbb
mov
pusha
mov
xchg
mov
rorb
sub
dec
add
ret
push
mov
mov
das
jecxz
push
gs
fwait
adc
ja
xchg
push
pop
jmp
outsl
mov
xchg
enter
incb
pop
push
lds
cmp
sar
add
adc
mov
xor
inc
mov
xorb
sbb
movsb
adc
inc
dec
jns
mov
mov
adc
mov
mov
xchg
mov
repz
mov
lock
in
and
sbb
sahf
lea
ss
cmp
mov
decl
je
pop
rorl
in
pop
xor
adc
int3
ja
cmpsb
and
mov
js
sbbl
sbb
jns
push
jl
fwait
cmc
mov
mov
jge
add
add
sub
test
push
mov
clc
fdivp
xor
jg
je
sub
xlat
jmp
jl
xchg
notb
xor
jmp
mov
sbb
sub
mov
xor
mov
inc
outsb
repz
xchg
xor
data16
sbb
ficoms
jns
das
adc
enter
stos
pop
and
cmpl
fs
lcall
ret
mov
cmp
repz
adc
ja
outsb
push
cmc
dec
mov
jb
dec
and
and
cmp
test
push
push
jno
hlt
lret
mov
sub
mov
sub
fiadds
notb
push
leave
push
enter
sub
fbld
pop
adc
sbb
push
mov
push
or
mov
dec
cmp
add
jno
fists
add
aad
adc
sub
push
cmpb
negl
adc
push
dec
adc
in
cmpsl
cmp
scas
adc
mov
adc
sub
add
sbb
inc
arpl
sub
fs
mov
mov
test
sti
sub
sub
pop
pop
in
pop
ds
mov
insl
lea
fdivs
jo
ljmp
xchg
stos
jle
jg
dec
lret
test
mov
and
mov
loope
pop
call
xchg
daa
mull
mov
sbb
pop
sbb
fisubl
lock
xchg
jg
mov
mov
xor
cmp
sbb
lcall
adcw
in
aam
imul
dec
arpl
jecxz
fwait
in
lret
cli
cmp
test
dec
xchg
pxor
add
mov
lahf
or
sub
movsb
xchg
pushf
jmp
rcrb
les
fstpt
daa
adc
mov
mov
sbb
imul
push
sbb
push
lret
aaa
lcall
cltd
push
jnp
and
jae
sbb
xlat
or
adc
and
bnd
leave
js
jecxz
xchg
mov
xchg
lds
nop
sub
into
jmp
gs
aaa
dec
inc
dec
mov
xor
daa
cwtl
push
aam
stc
push
push
sub
inc
fisttpll
xorb
jge
jmp
xor
xchg
pop
mov
jbe
and
mov
enter
les
push
push
fadds
iret
mov
shll
lea
mov
add
or
shrb
pop
aaa
cmp
out
push
xor
sub
mov
test
dec
call
jae
pusha
movsl
loope
xor
push
xchg
mov
lcall
enter
xchg
in
adc
into
xor
push
or
pop
pop
xor
pushf
lcall
cmp
pop
test
clc
inc
and
inc
push
xor
out
bsr
add
push
ret
scas
outsl
aad
pushf
icebp
mov
inc
mov
dec
lahf
scas
inc
xchg
cmp
imul
sbb
stc
aam
ret
stos
push
push
das
jb
pop
adc
cmpsb
idivl
hlt
dec
mov
lea
mov
loopne
or
mov
push
inc
xchg
int
mov
ja
leave
mov
cld
js
lret
or
jmp
sub
inc
push
or
cmp
cld
aas
or
scas
iret
fstpl
lcall
out
mov
push
iret
out
dec
push
shll
outsl
test
mov
repnz
pop
int3
lock
cmp
jbe
lahf
sahf
imul
add
push
push
dec
xchg
adc
aaa
cmpsl
cmp
std
daa
xor
push
cmpsb
dec
je
lret
xor
lock
xchg
lods
idivb
mov
test
movsl
pop
jno
lahf
pusha
jns
cmp
jno
jae
in
pushf
jne
inc
mov
das
sub
xchg
mov
adc
xchg
and
pop
scas
int
jns
stos
outsl
call
dec
mov
mov
pop
sbb
cmp
add
mov
std
int
outsb
enter
mov
push
adc
fistpll
enter
push
popf
in
sahf
xchg
repnz
add
xchg
cmp
mov
mov
add
pop
cmp
push
scas
mov
mov
mov
and
mov
fs
adc
fs
and
pop
addr16
adc
das
push
inc
xor
adc
fisttps
add
xor
stc
pop
lock
test
es
cld
test
xchg
push
mov
imul
dec
xchg
daa
fstl
outsb
inc
sti
stos
xchg
mov
pop
add
hlt
adc
lcall
outsb
cmp
cmpb
adc
dec
inc
add
data16
fstpt
xchg
inc
sbb
and
testl
rcr
inc
inc
add
or
xchg
es
lods
fadd
movsl
push
mov
mov
mov
test
push
lds
or
in
push
pop
or
inc
lahf
ficoms
addr16
mov
pop
dec
mov
jmp
out
dec
sbb
pop
add
mov
fldt
sbb
sahf
or
inc
sub
adc
add
pop
ds
sbb
cmp
sahf
lret
lcall
cltd
js
pop
xchg
cs
push
cmp
test
push
jmp
lcall
lods
nop
mov
mov
cmpsb
adc
fidivl
push
push
mov
mov
push
pushl
sbb
fdivrs
jle
arpl
dec
inc
dec
add
cmp
daa
xor
or
push
jbe
xchg
shlb
fucomip
lods
fs
cli
mov
gs
subl
xor
dec
cwtl
push
mov
jg
sahf
lret
dec
adc
xor
mov
ljmp
lods
test
mov
or
fmul
lds
push
pop
stos
pop
xchg
mov
or
sbb
jle
cs
fsubrl
mov
lret
popa
cmp
push
enter
loopne
mov
and
cmp
or
inc
dec
xchg
jl
adc
and
and
aam
roll
movsl
orb
out
out
dec
push
stos
push
cmpsb
je
popa
dec
pop
cmpsb
shrl
add
jle
ret
push
xchg
adc
mov
fwait
or
add
loop
cmc
in
rorl
jnp
cmp
and
mov
lahf
xor
jns
or
fstpl
nop
sbb
mov
jns
push
outsl
flds
inc
mov
cwtl
sbb
xchg
lcall
sbb
sub
dec
cmp
subl
cmp
loope
xlat
jne
sahf
pop
mov
fldcw
cmp
mov
shlb
and
or
xlat
fdivl
es
hlt
mov
stc
inc
xor
movsb
insl
int
test
mov
cwtl
in
add
movsl
mov
inc
mov
add
aas
or
mov
mov
data16
dec
jp
iret
test
push
enter
in
xchg
sub
shll
pop
xor
inc
push
sbb
and
mov
mov
adc
in
push
push
push
xlat
push
jae
and
pop
xor
jo,pt
push
in
adc
jns
jp
ret
ss
aad
xor
fstl
and
scas
xchg
cmp
pop
push
push
arpl
cld
nop
test
imul
fdivs
cmp
lea
mov
popa
xchg
xchg
test
push
pop
cld
xchg
cmp
push
enter
adc
push
pop
xchg
and
inc
insl
fs
es
in
pop
pop
jne
mov
lock
xorl
or
pop
mov
in
enter
inc
pop
in
pop
pop
sti
mov
push
xor
cmpsl
arpl
andb
mov
xchg
movsl
cmp
sbb
cs
clc
mov
pusha
fidivl
addr16
testb
and
or
dec
mov
add
js
popaw
enter
xor
sbb
shl
clc
data16
inc
in
js
shl
and
popf
and
push
jns
inc
filds
pop
fdivl
cwtl
jge
ja
mov
push
stc
mov
mov
jmp
push
add
faddl
sahf
mov
add
stc
mov
cmp
cmp
fwait
aam
and
test
sahf
jns
rorb
dec
mov
or
mov
arpl
aaa
movsb
andl
fwait
cltd
cmp
jno
insb
inc
add
out
test
jl
push
jp
pop
pop
out
insb
or
nop
aad
popf
testb
jecxz
add
mov
sbb
fwait
xchg
sub
test
sbb
jg
mov
enter
pop
push
insb
sub
xchg
dec
mov
push
flds
pop
pop
rcll
add
aam
stc
xchg
or
insl
push
mov
or
cmp
cmpsb
mov
lret
add
leave
lods
idiv
jno
jb
xchg
push
pop
add
sahf
push
xchg
sarb
jb
popa
aam
dec
imul
les
adc
mov
lock
fwait
xor
jnp
cwtl
cmp
mov
adc
sub
jge,pn
cmp
cmpsb
jo
cmp
inc
push
mov
movsb
nop
ljmp
xchg
mov
inc
aaa
mov
add
pop
enter
pop
lcall
jp
cmp
rcrb
pusha
xor
dec
out
not
test
pop
nop
call
inc
cld
movb
add
xchg
mov
adc
inc
fdivs
imul
fisttpl
les
daa
iret
sbb
out
pop
xchg
sti
cld
and
mov
scas
aas
pop
lea
jb
mov
into
or
enter
nopl
lahf
cwtl
arpl
sti
negl
dec
sahf
sub
inc
rcr
lock
mov
cmc
or
pop
push
shl
scas
add
mov
cmpl
cmp
push
ja
adcb
sbb
inc
pop
xor
std
mov
enter
mov
jp
push
mov
adc
mov
mov
cs
dec
cmpsl
iret
add
mov
fnsave
inc
xor
xorb
js
sub
ret
mov
jne
aas
pushf
mov
xchg
insb
aas
sub
sahf
adc
pop
mov
loope
filds
loope
test
mov
cmpsl
jbe
add
pushf
lods
mov
and
js
clc
mov
gs
rolb
push
jmp
and
fs
push
fdivr
jecxz
sarb
loope
xor
dec
mov
pop
add
adc
cld
inc
xchg
scas
xchg
jp
mov
jp
inc
ds
jo
ret
mov
mov
out
lock
ret
out
sub
cs
insl
imul
movsl
or
cmpsb
mov
hlt
xor
adc
pop
or
cltd
cmp
loop
mov
lea
dec
xchg
mov
addb
mov
jp
jp
lahf
pop
lret
ret
test
sbb
scas
xchg
xchg
addl
cmp
aam
xlat
mov
loopne
jle
sbb
shll
adc
out
lahf
adc
aaa
lods
popa
mov
xor
mov
or
push
mov
sub
out
or
stos
clc
xor
pop
xor
aaa
sbb
pop
cmp
data16
fsubl
fnstsw
enter
fsubrp
xor
ret
fmuls
fcmovnb
ret
adc
or
mov
or
cld
xbegin
xchg
sahf
and
loop
mov
or
jb
xchg
xchg
popa
arpl
inc
push
xchg
rclb
jbe
dec
popl
jg
xor
mov
aaa
leave
cmpb
sub
inc
xor
in
inc
arpl
stc
xor
mov
inc
mov
lock
shll
mov
daa
call
imul
mov
frstor
mov
fwait
outsl
sub
push
xlat
cmp
mov
or
stc
mov
cmp
pop
dec
cmp
xchg
add
enter
popf
xchg
jo
push
hlt
sub
mov
sti
jecxz
push
cli
mov
or
insb
mov
pop
xorl
pop
cltd
xor
dec
jg
push
push
sti
cmpl
and
xchg
js
push
out
inc
pushf
cmpsb
push
xchg
sbb
fimull
pop
jnp
or
jne
mov
pop
out
subb
je
inc
pop
scas
loop
pop
out
notl
pusha
or
mov
push
sub
lcall
mov
std
sti
cmpsl
addr16
pop
test
and
ror
mov
mov
mov
ds
stos
lahf
sub
pop
je
sbb
movsl
mov
cmpsb
push
in
push
or
cmp
sub
add
jbe
mov
push
xlat
add
sub
stc
imul
test
jno
in
jecxz
lock
pop
pusha
push
aaa
insl
mov
fdivl
xchg
xor
sbb
shlb
mov
push
push
inc
cmpsb
fwait
push
and
je
and
mov
mov
arpl
xchg
jl
fnstsw
imul
repnz
pop
outsb
sarb
mov
pop
lds
cmp
lock
testl
test
insl
push
shlb
fdivrs
push
add
movsb
xor
add
add
fldz
xor
ss
scas
out
and
lods
clc
das
sbb
loop
add
mov
test
test
mov
pop
popa
in
sbb
mov
dec
mov
push
fldl
sbb
shlb
cltd
ret
lea
xor
add
adc
in
enter
sub
sub
test
xor
mov
sub
xor
xor
jb
shlb
fisttpl
mov
in
mov
push
jg
in
mov
sbb
cmpsb
pop
add
xchg
inc
fs
ja
filds
xchg
push
jg
loopne
outsb
lock
jl
xchg
subl
jmp
cmpsl
shll
loopne
in
jmp
into
inc
out
inc
mov
sbb
daa
dec
repnz
push
mov
jnp
inc
iret
and
push
sar
ljmp
inc
or
inc
mov
sbb
adc
mov
and
jo
or
xchg
jle
out
adc
pop
sbb
xchg
and
jmp
out
es
xor
int
cmp
fisubl
cmp
mov
ljmp
loop
insb
cmp
negl
out
xor
pop
lret
adc
pop
sarb
mov
je
pop
out
sbb
bound
and
and
repnz
cmp
outsb
jne
icebp
xchg
xorl
fmul
jle
ja
mov
loopne
cltd
out
mov
cmp
lock
ljmp
call
adc
mov
stos
ret
rolb
xor
sti
add
cs
push
lcall
clc
into
jns
test
and
sub
stc
adcb
jecxz
or
fstl
and
mov
inc
and
cmpsb
jg
call
orb
jne
adc
dec
vmptrst
out
pop
xor
adc
repz
push
stos
dec
arpl
mov
adc
push
inc
imul
push
jmp
ss
out
loopne
pop
push
xor
xor
jae
rolb
push
fs
jp
xchg
popa
adc
mov
fwait
mov
or
stc
mov
cld
mov
xlat
gs
jg
inc
inc
nop
mov
and
pop
dec
ficomps
imul
aas
repnz
push
dec
js
popa
loop
dec
mov
cli
jae
ret
fnstsw
ret
aas
push
jle
rorl
pop
dec
lea
sti
xchg
xorl
cs
addr16
ficoms
addr16
inc
cmp
roll
xchg
rorb
jg
sbb
or
lods
pop
mov
sub
xchg
mov
das
mov
mov
leave
sbb
add
rcll
and
pop
loop
push
arpl
out
mov
sbb
outsb
fisttps
mov
fcompl
xor
jno
std
jbe
in
aaa
js
fcoms
fidivrs
xchg
les
stos
loopne
pop
in
ljmp
xchg
popa
and
aad
mov
mov
outsb
popf
movsb
es
jp
xchg
ret
pop
out
sub
test
jecxz
gs
pop
fcmovu
out
cli
inc
or
test
xchg
rorb
inc
test
push
jno
adc
mov
lea
je
sbbb
inc
cmp
sbb
jl
pop
mov
jmp
sbb
scas
dec
outsb
aas
in
mov
adc
inc
and
fcmovu
lds
inc
out
ret
add
cmp
push
sub
xchg
xchg
cmp
je
xlat
jnp
aam
cmp
inc
dec
mov
pop
inc
push
mov
dec
aam
dec
lea
jmp
int
xor
emms
dec
pop
cmp
fstpt
movsb
xchg
xchg
push
or
das
scas
inc
xor
jl
arpl
fistps
mov
or
push
movb
pop
cld
pop
sbb
iret
popf
adc
lock
std
imul
inc
in
mov
adc
or
pop
jl
shll
dec
in
jl
push
mov
push
cs
out
mov
ret
test
das
adc
test
pop
out
lock
mov
adcb
push
scas
jns
pusha
and
es
push
sub
bound
adc
or
cmp
stos
jmp
cmc
movsl
inc
dec
movsb
xchg
bound
das
aaa
or
jbe
or
call
leave
es
outsb
push
dec
cmc
push
hlt
push
jecxz
sub
addl
std
push
add
loope
push
mov
sbb
xchg
andb
cmp
out
or
pop
imul
add
xchg
mov
lods
jg
sub
mov
cmp
aaa
fdivs
pop
dec
push
cs
imul
jns
out
or
sarl
in
jb
popa
pop
mov
cmpsb
bound
cld
pop
cmpb
add
push
fsubrp
add
jecxz
xchg
push
lret
inc
loop
xor
and
inc
aam
xchg
push
cmp
sbb
test
cmpsb
rol
shlb
aas
lock
add
sbb
insb
test
fcompl
test
shrl
adc
xor
jmp
sarb
sbb
push
sub
pop
pop
dec
insb
fsubs
lret
es
jg
inc
mov
adc
sub
fldenv
push
jle
pushf
movsl
lcall
lahf
out
insl
arpl
add
xchg
add
mov
mov
lahf
mov
pop
aad
inc
xor
jg
mov
jae
lods
pop
cmc
out
dec
push
xor
imul
mov
lret
sbb
lcall
test
push
sti
rorl
or
mov
inc
and
out
dec
lods
or
out
and
rcrb
out
stos
movsb
mov
xchg
cmp
arpl
stos
mov
rcrb
jae
or
cmp
je
call
inc
outsl
out
cmp
jbe
bound
test
sub
test
inc
sbb
jge
sub
xor
hlt
out
inc
push
adcb
insb
mov
pop
jbe
xchg
adc
std
pop
iret
mov
out
xor
rolb
shlb
push
pop
imul
fimuls
inc
xchg
gs
nop
cwtl
mov
or
test
adc
in
mov
into
mov
jl
add
add
cs
dec
subl
and
aaa
xor
add
clc
jmp
lcall
call
mov
jns
test
mov
icebp
or
imul
lret
push
adc
push
je
insl
xchg
mov
inc
and
lcall
fdivrl
push
bound
dec
or
fistpll
push
dec
mov
call
data16
push
xchg
xor
cwtl
rcl
adc
movsb
test
mov
and
dec
in
insb
and
loop
ljmp
sbb
das
mov
aad
jl
std
mov
push
mov
mov
xlat
fsub
inc
les
sbb
roll
cmc
jg
stos
sti
nop
loope
repz
inc
xchg
cmp
or
dec
popf
push
movsl
cmc
push
xchg
mov
mov
xchg
or
mov
js
imul
js
out
loop
daa
lret
or
loope
rcr
inc
lret
mov
cmp
add
mov
test
push
dec
or
xchg
aaa
inc
push
xor
stos
push
in
cltd
fists
movsb
cmp
test
sub
filds
leave
mov
push
lea
xor
sahf
clc
sahf
mov
sub
jo
cwtl
pushf
xchg
popa
sub
in
or
aad
andb
cmc
movsl
and
mov
push
loopne
push
cmp
cmpsl
mov
push
dec
adc
mov
ljmp
mov
mov
iret
lahf
sbb
push
cli
xor
dec
fsubrl
outsb
ds
les
jo
or
inc
dec
sbb
je
fisttpll
fsubrl
xorl
xchg
or
pop
pop
jb
cmp
scas
or
fmulp
or
mov
sbb
fs
gs
cmp
push
pushf
ror
test
add
call
andb
es
jecxz
xor
in
pop
sub
lcall
mov
mov
jecxz
push
scas
insl
sub
js
pushf
mov
imul
jbe
andb
sti
aaa
add
icebp
jne
jns
jb
cmc
lods
mov
pop
mov
mulb
sbb
mov
repnz
in
adc
jmp
push
sti
pusha
xchg
orl
loopne
inc
mov
fs
and
jmp
fcomip
rcr
movsb
xchg
loop
ja
subl
out
jp
loop
loop
xrelease
or
mov
push
test
decb
out
ret
shll
lds
shr
dec
pushf
outsl
das
cmpsl
pop
mov
sti
fstpl
pop
cli
sub
sub
int
shll
add
push
out
pop
adc
sub
pop
out
jne
mov
mov
mov
jge
mov
ret
cmpsl
ret
fld1
cmpsb
in
pop
aam
mov
test
jecxz
imul
shrl
popa
nop
nop
ficoms
insl
dec
into
ret
lcall
insl
mov
xlat
sub
xor
dec
ret
jb
xor
add
insb
jp
cmp
xchg
std
int
xchg
jmp
and
repnz
cmp
jo
mov
inc
in
and
xchg
mov
xchg
xchg
stos
xchg
push
inc
add
je
inc
rorb
sti
and
addl
bound
std
std
addr16
sub
fistpll
xacquire
leave
in
scas
fcoms
in
mov
cmp
stc
xchg
mov
jge
xchg
mov
xor
mov
test
mov
fstpt
or
inc
sbb
cmc
push
jo
and
or
jo
arpl
and
into
pop
push
scas
adc
dec
jne
andb
or
jbe
mov
inc
lahf
mov
mov
fstp
add
push
mov
sbb
pop
adc
jmp
xor
and
out
inc
sub
sub
in
or
and
inc
fisubrl
js
sarl
or
pop
adc
cmp
pop
jp
lods
cmp
adc
sbb
sbb
mov
lret
and
add
mov
ja
inc
add
sub
mov
daa
add
xor
mov
adc
dec
or
hlt
faddl
inc
clc
scas
pop
sahf
int3
imul
fs
int
dec
or
dec
xchg
or
mov
stc
pop
sbb
es
xlat
std
test
pushf
das
mov
xor
stos
fisttpll
mov
mov
stos
shl
rcrb
rcrl
pop
in
call
sbb
bound
in
js
inc
lods
in
stc
hlt
xor
sub
lahf
lahf
pop
adc
cli
sarl
inc
out
fsubl
gs
sub
push
out
rol
lret
mov
cs
lret
loope
in
test
jp
test
jae
decl
mov
cwtl
les
sub
scas
push
adc
ret
add
stos
imul
test
cld
push
in
and
mov
jmp
and
iret
stos
jl
push
mov
fwait
mov
loop
pop
insl
or
and
lret
xchg
ret
adc
cltd
cmpb
pushf
sbb
mov
jmp
mov
jl
imul
shll
imul
sub
jmp
inc
add
fcomp
push
mov
scas
mov
xor
sahf
sub
lret
popf
sub
push
push
jl
je
cmp
sbb
js
push
jmp
xor
pop
and
mov
lds
jp
push
insl
and
faddl
and
iret
push
mov
sbb
out
xchg
dec
aas
scas
cmp
or
add
movl
push
add
movsl
gs
pop
sub
add
mov
and
cmp
mov
push
pop
sarl
cmpsl
xchg
jmp
mov
fcomps
fidivrl
cmpsb
xor
adc
and
popa
iret
sbb
fnstenv
lcall
mov
sbb
xor
sti
xchg
dec
jnp
adc
inc
lret
stos
sub
push
orl
adc
jl
xchg
mov
stc
outsb
jns
adc
imul
pop
out
clc
leave
js
aas
pop
orl
ds
scas
dec
shll
mov
mov
cmp
cmp
cmp
sbb
mov
sub
jns
xchg
fsubrs
push
push
fwait
xchg
dec
mov
imull
ja
sbb
xchg
jo
in
xorb
pop
lods
lret
or
addr16
cmpsb
fbld
iret
push
dec
test
sub
mov
adc
lcall
push
insb
add
popa
scas
repnz
jg
inc
and
dec
fsubl
mov
mov
fsubs
leave
inc
fidivl
addr16
sarl
mov
mov
xchg
mov
add
jnp
mov
call
fldcw
fidivrl
mov
pop
xor
jnp
mov
data16
imul
iret
pop
mov
push
mov
xor
popa
inc
data16
aam
and
ds
cmp
xor
mov
dec
fdivl
and
pop
jmp
cmpsl
stos
cmp
scas
cmp
xor
cmp
cmp
lds
inc
loop
mov
cmp
lret
stos
clc
jge
aas
ss
loopne
sbb
pop
jne
mov
xor
out
out
fimuls
xchg
out
push
dec
mov
push
lret
dec
fidivrs
jmp
inc
fldt
cmpsl
push
pop
xchg
cli
call
nop
movsl
andb
jbe
test
in
push
aas
pop
nop
and
jl
jbe
js
jecxz
xor
orl
dec
scas
push
sarb
movsb
pop
push
add
out
jp
jnp
inc
je
inc
xor
sti
sub
rcrl
cmpsl
sahf
pxor
shrd
in
hlt
mov
outsb
add
xchg
pop
and
add
mov
mov
fstp
push
sbb
mov
insl
sti
adc
call
adc
jg
pop
lahf
sub
inc
and
sahf
cmpsl
jnp
push
mov
pop
add
std
out
stc
cltd
and
inc
add
clc
aas
xchg
cmpsb
sub
xor
jb
cmpsl
fdivs
outsb
push
xor
in
inc
xchg
push
das
dec
inc
clc
addr16
or
lret
jns
int
adc
aas
or
ljmp
xor
xchg
mov
test
loopne
lea
sti
pop
sbb
push
xchg
inc
cmp
es
xchg
cmp
jne
lods
pop
sub
subb
fcmovnbe
ja
jae
in
in
inc
push
lds
adc
add
inc
jae
cs
popa
insb
arpl
pop
fdivrp
mov
xchg
fs
mov
loop
and
in
and
sbb
sub
adc
add
pushf
test
sbb
sub
lret
sbb
das
mov
cmc
pop
imulb
cltd
cwtl
out
inc
rcrb
das
sbb
vlddqu
cmc
ljmp
adc
xor
in
jg
test
in
xchg
mov
les
push
and
imul
jb
popf
and
imul
inc
xchg
ds
adc
in
jne
enter
mov
cltd
adc
adc
cltd
dec
xchg
sbb
je
dec
or
shlb
mov
pop
insb
cmp
sarl
inc
js
mov
aas
xchg
pushf
movsb
test
fcmovnbe
jbe
mov
icebp
xlat
sbbl
sbb
xor
jnp
out
or
test
jns
adc
rcr
adc
fistps
je
push
mov
mov
je
push
test
xchg
cltd
testb
and
jp
test
lret
adc
movsl
fstp
out
jb
adc
mov
hlt
xor
xor
les
cmp
sarl
xor
sub
es
and
fadd
mov
out
sbb
add
lods
fwait
xor
cltd
cmp
or
dec
jle
jge
dec
stc
add
test
mov
cmpsl
and
and
pop
and
in
fistpl
daa
dec
mov
aam
xor
fidivl
ret
bound
inc
or
pop
call
cmpsb
lods
sub
orl
push
push
xchg
les
xchg
xor
faddl
or
ret
ret
xor
mov
insb
mov
jo
xchg
xor
jl
pop
inc
add
test
mov
mov
sti
loop
xchg
cmp
ret
xor
insl
cmp
call
sbb
rclb
icebp
loop
xchg
in
push
jl
cmp
outsb
add
lds
mov
addr16
and
mov
nop
sub
cmp
xchg
mov
fsubp
loopne
add
sbb
repnz
pop
movsb
repnz
mov
add
je
hlt
and
inc
xor
je
inc
rol
xor
pop
fwait
orb
inc
or
cmp
cld
mov
inc
out
cmpsl
sub
cltd
inc
add
mov
pop
xlat
jecxz
outsb
mov
mov
lcall
in
data16
inc
in
dec
repnz
inc
xchg
and
mov
fsqrt
push
jge
ret
ret
dec
jg
add
xchg
xchg
das
into
xchg
sbb
shlb
test
sbb
pushf
imul
jae
xor
xlat
adc
or
inc
leave
out
leave
xor
dec
sub
out
inc
mov
fldl
xor
xor
inc
cwtl
test
sbb
test
pushf
or
imul
stos
push
loop
dec
ss
rorb
xor
push
sbb
sbb
dec
lock
repz
mov
dec
adc
xchg
mov
insl
jge
xchg
lods
adc
imul
insl
mov
pop
negl
fs
inc
jo
daa
sbb
mov
cwtl
test
pop
mov
mov
xchg
dec
ja
je
add
sub
fwait
adcl
mov
repz
hlt
mov
pop
xor
cmp
aaa
mov
push
mov
loope
lea
push
fadds
fdivs
lods
push
fs
lds
adc
pusha
xchg
lods
mov
nop
add
sbb
out
shll
jae
sub
outsl
xor
das
xchg
push
in
fcomps
xor
cmp
scas
cmp
xor
push
out
in
adc
push
adc
mov
roll
mov
test
leave
leave
les
or
pop
sbb
xor
push
shll
dec
xlat
cmp
pushf
repnz
scas
in
jge,pt
pushf
xchg
push
sahf
inc
mov
es
sub
mov
inc
dec
into
pop
xchg
push
stos
push
stos
push
hlt
les
push
rorl
adc
arpl
movsb
test
mov
cltd
out
xor
inc
iret
push
push
sub
lgs
mov
add
xchg
inc
mov
or
stc
adc
push
std
fmull
lods
xor
xchg
or
cmp
ret
mov
divb
mov
xchg
xor
fadd
jg
stos
and
cld
cli
and
orl
scas
mov
xor
sbb
test
add
clc
test
mov
add
xchg
nop
pop
jbe
pop
mov
gs
popa
insl
mov
inc
push
sub
popa
lods
and
lds
push
out
je
js
pushf
inc
sbbb
fistpl
mov
call
push
adc
push
mov
cmpsl
ret
mov
out
sub
dec
sbb
stc
cwtl
cmp
mov
testb
pop
mov
mov
mov
mov
xor
leave
dec
les
addr16
scas
cmp
clc
lods
push
mov
inc
cmp
push
push
cltd
push
add
ds
pop
mov
mov
insl
inc
push
sbb
loop
pop
and
fsts
and
packuswb
add
sahf
cmp
mov
push
imul
dec
sti
xor
test
adc
pop
shl
lret
adc
xchg
sbb
leave
lret
aam
inc
push
in
jecxz
adc
push
ds
test
les
cmp
and
ljmp
negb
xor
adc
outsb
ret
pop
cltd
lret
div
mov
or
push
scas
inc
adc
test
mov
mov
xchg
pop
ljmp
rcl
movsb
repnz
xchg
data16
dec
stc
push
test
iret
dec
clc
icebp
repz
jge
imul
out
sub
daa
inc
xchg
rcl
in
dec
sub
jp
cld
adc
stos
xchg
je
jmp
mov
mov
int
inc
mov
xchg
stc
insl
fwait
andl
push
aad
lds
cmp
jnp
test
add
js
push
inc
xor
mov
jo
xchg
mov
inc
or
push
lock
fmull
aam
stc
insb
mov
testb
test
cld
and
ret
cmp
loope
andb
jbe
pop
pop
add
ss
and
push
xchg
dec
loop
push
stos
ret
xor
test
xchg
dec
shlb
inc
sub
js
cli
scas
jns
jb
inc
sub
mov
mov
cltd
daa
push
imulb
lods
xchg
adc
xor
mov
outsl
jge
xchg
testb
xor
inc
data16
cli
ds
and
inc
pop
jb
mov
sbb
and
daa
jecxz
ret
add
test
push
inc
add
sbb
in
adc
popa
aam
pop
gs
clc
adcl
daa
inc
cli
rorl
xor
cwtl
stos
xchg
adc
xor
cli
mov
jecxz
ss
das
mov
lea
xor
aam
xor
ss
daa
outsb
xor
push
cmp
movsl
ja
xchg
jp
mov
push
push
out
repz
jmp
xor
cmp
stc
and
pop
fsub
or
xor
pop
xor
jnp
call
in
cltd
pop
leave
out
aam
jl
mov
rcr
mov
mov
xor
or
arpl
ret
add
mov
fcompl
jmp
add
fdiv
sbb
jecxz
mov
dec
lea
dec
mov
fs
mov
lds
sbb
mov
mov
popa
pop
sbb
and
stc
insl
push
sbb
adc
xchg
or
std
out
add
jae
das
leave
inc
int
loope
popl
fistps
xor
sarb
mov
jle
sbb
mov
mov
cmp
cmovno
iret
and
orl
repz
cmp
add
and
dec
dec
push
arpl
mov
loop
subl
mov
dec
pop
mov
daa
imul
xor
pop
mov
test
data16
fidivs
and
out
popa
divl
cltd
lods
xlat
fcoms
inc
add
jmp
mov
mov
adc
add
mov
add
dec
sti
inc
dec
jp
jle
sub
aas
leave
and
jl
mov
loopne
lock
mov
jge
sbb
jecxz,pn
push
fs
cmpsb
cmp
mov
pop
add
test
sbb
push
mov
add
or
lahf
leave
inc
mov
mov
push
pushf
addl
iret
xor
clc
mov
mov
xor
aas
pop
mov
adc
mov
mov
cmc
cmp
mov
inc
push
mov
jmp
jecxz
rcrl
inc
jne
cld
mov
sbb
fstpt
pop
cs
push
push
fisubrl
out
adc
aaa
lods
outsl
xor
sbbl
xchg
mov
add
sub
stc
clc
mov
inc
ja
mov
dec
imul
mov
add
xorb
add
cmpsl
cltd
lea
dec
mov
pop
cmpsb
fstpl
adc
mov
cli
bnd
aam
daa
test
mov
inc
repz
adc
or
cmpsb
mov
dec
into
inc
pusha
jecxz
das
adc
mov
dec
cmp
dec
jp
loopne
fldl
xrelease
rclb
xor
mov
adc
aam
push
xor
in
mov
mov
inc
shlb
push
insl
push
xchg
cli
sbbl
aas
mov
jbe
lcall
mov
shll
push
pop
pushf
lds
or
sbb
call
aaa
dec
cmp
add
fcoml
jge
adc
xchg
pop
ljmp
sbbb
cmp
add
ja
lret
pop
and
mov
mov
sbb
mov
xor
pop
xchg
jp
in
lods
mov
mov
repz
push
aad
lret
lock
or
jge
adc
imul
mov
cwtl
add
xor
mov
cmp
cltd
or
incl
testb
shrb
add
out
mov
mov
mov
and
mov
lcall
pusha
orb
in
insb
into
cltd
or
push
cmpsb
call
push
decb
sbbb
dec
mov
mov
add
mov
ret
sub
pop
push
ja
daa
cmpsb
mov
popa
outsb
cmp
nop
ss
mov
fisttpll
mov
xor
into
dec
jmp
cmp
mov
gs
or
fcoms
push
inc
stc
xchg
mov
stc
push
jl
adc
ds
xchg
mov
dec
loop
sub
aas
ss
lcall
rcrl
popf
adc
xor
jns
in
mov
pushf
imul
jmp
dec
cwtl
xor
mov
aas
negl
or
jmp
mov
xchg
aam
cmp
xor
into
test
nop
repnz
sbb
sub
xchg
xchg
adc
ds
js
dec
and
jbe
push
shl
cmp
insl
mov
push
xor
jno
add
cmp
into
cmpb
push
mov
push
pop
dec
cwtl
shll
inc
jle
int3
stos
inc
lahf
inc
jae
jb
dec
lods
dec
jnp
imul
mov
scas
ss
mov
push
mov
sahf
insb
xchg
xor
jnp
cmc
inc
aad
mov
xchg
mov
mov
mov
punpcklwd
jp
xor
inc
inc
popf
addb
pop
insb
ds
in
in
add
cmp
arpl
das
mov
xchg
ljmp
outsl
mov
in
jo
lcall
add
test
inc
adc
add
mov
std
js
bound
xchg
mov
jl
cli
mov
xchg
sub
into
out
xlat
imul
xorl
and
sub
add
mov
aas
test
mov
data16
pushl
test
std
mov
aad
sub
push
mov
mov
adc
dec
leave
mov
leave
inc
dec
adc
stc
xchg
mov
xchg
xchg
cmp
inc
cld
aaa
ds
cli
xchg
push
mov
xlat
inc
sub
cltd
adc
mov
cmp
ret
mov
pop
add
push
insl
fimuls
adc
push
pusha
test
sahf
iret
or
mov
out
mov
pop
in
jnp
jne
std
cwtl
add
pop
xchg
stos
jl
pop
inc
xchg
xchg
inc
gs
icebp
push
cmpb
xor
rclb
sbb
mov
push
mull
mov
in
popf
iret
ss
push
pushf
and
cmpb
dec
xor
push
pop
push
cmp
out
popaw
out
mov
pushf
add
add
leave
fistpl
or
mov
icebp
insl
lods
fistps
aas
dec
mov
das
imull
out
ret
or
arpl
jle
sbb
push
mov
stc
fucompp
hlt
or
nop
mov
xchg
mov
jl
sub
jecxz
xor
dec
arpl
sbb
xchg
jge
inc
es
jg
mov
ret
rorb
xchg
fistpll
mov
pop
cltd
sub
in
cmp
and
ja
out
fstl
stc
xchg
je
cli
movsb
mov
sub
arpl
or
mov
nop
push
mov
adc
add
pop
lret
sbb
push
adc
and
pop
jne
mov
jle
aam
push
push
sbb
mov
mov
mov
or
pop
vextractps
pop
cmp
xor
movsb
dec
sub
xor
seto
and
adc
push
fnstenv
insb
push
adc
add
push
xor
fsubs
cmp
aas
imul
sub
xchg
and
popa
pusha
shlb
adc
fs
jle
adc
pop
pop
fnstenv
mov
mov
xchg
mov
jmp
hlt
xor
test
pop
add
or
add
insb
jnp
and
mov
sti
xchg
ja
xor
pop
cli
dec
pop
mov
push
cmp
mov
movsl
andb
notl
sbb
lret
jmp
pop
pushf
nop
cmp
mov
fsubr
mov
jae
and
push
or
loop
lock
add
lahf
dec
lret
xchg
daa
pop
adc
stos
out
add
aaa
mov
dec
dec
jbe
popf
mov
inc
movsb
adc
add
mov
push
lahf
adc
aaa
ret
je
sbb
out
or
negl
dec
add
mov
mov
lahf
icebp
and
cmp
mov
jle
cmpsb
out
inc
inc
sbb
xor
pop
cmp
jae
mov
inc
sbb
loop
push
fiaddl
push
into
lea
pop
jmp
imul
push
addl
fucom
dec
push
dec
mov
cltd
sbb
pop
in
add
pop
xor
loopne
add
std
sti
inc
arpl
pusha
jp
or
loopne
ficomps
lock
mov
mov
or
lods
fists
fs
mov
dec
loope
xchg
std
int3
xor
cmpsb
cmp
inc
dec
ljmp
mov
xlat
inc
adc
jg
adc
mov
shrl
push
adc
imul
icebp
mov
jp
jge
mov
sbb
rolb
push
ja
rol
lcall
xor
je
dec
pop
fimull
mov
xchg
inc
ljmp
pushf
jbe
movsb
shl
xchg
xor
push
ja
test
push
int3
xor
xor
and
fcomi
mov
pusha
mov
mov
push
test
call
out
mov
xchg
movb
les
out
loopne
xor
andb
fwait
mov
lods
clc
and
fwait
push
add
xchg
or
xchg
cmp
mov
cld
inc
vcvttpd2dqy
xor
pop
push
cmc
js
adc
cwtl
iret
lock
imulb
rcll
cli
insl
repnz
ret
data16
les
mov
inc
in
xor
lcall
cmpsl
icebp
xchg
push
bound
push
popf
cmpsl
push
pop
sbbb
add
xchg
lock
jbe
out
addr16
jno
lods
cmp
jmp
scas
leave
cmc
movsl
xor
fldt
push
push
shll
test
loopne
push
mov
cli
mov
test
mov
add
jbe
dec
or
cmpsl
sbb
and
ss
jnp
mov
pop
aas
js
addr16
push
add
js
xor
pop
jno
or
bound
jns
inc
cmpsl
mov
mov
push
test
xor
ljmp
cmpsb
cmpb
lods
pushf
push
push
cwtl
clc
cltd
jmp
pop
jne
push
in
test
pushf
jmp
pop
sbbb
orb
adc
add
ja
xchg
in
decl
ret
sarl
scas
xor
ds
push
cltd
call
outsb
or
add
push
insb
outsl
in
and
out
and
mov
mov
xor
shrb
jmp
aaa
inc
in
push
adc
data16
repnz
inc
je
fnstenv
fwait
jmp
sbb
addr16
pop
lcall
idivl
loop
mov
jle
push
inc
mov
jnp
int3
les
sbb
pop
adc
sub
fdivl
dec
test
mov
rcrb
mov
mov
in
add
divl
lods
mov
js
fsubr
sub
adc
mov
clc
dec
call
hlt
add
out
push
fisubl
xchg
addl
lahf
cld
jns
cmp
mov
stos
cltd
xlat
pop
mov
mov
das
repnz
mov
xor
jnp
or
push
mov
dec
imul
aas
xor
rcl
dec
test
dec
cmp
out
push
imul
fsubl
bound
push
jg
sbb
test
dec
mov
fisttpl
adc
aad
push
insl
cmp
mov
bound
push
nop
sbb
ss
pusha
out
sbb
lcall
push
jo
fdivr
std
cwtl
pop
inc
fbld
inc
je
ja
pop
lods
lret
sub
sub
mov
fwait
or
lods
sahf
loope
mov
pop
jo
repz
fbstp
xlat
daa
aad
call
sahf
pop
pop
insl
mov
decl
sbb
in
push
jae
insb
lcall
mov
mov
mov
mov
mov
lea
scas
icebp
outsb
or
mov
insb
fbld
movsb
dec
lret
addr16
fsts
jle
out
lods
sbb
fistps
inc
push
xchg
mov
add
bnd
dec
out
xchg
jae
in
inc
pop
mov
adc
pop
mov
lcall
hlt
sbb
shrb
inc
lret
cld
rorb
out
dec
pop
pop
dec
test
adc
and
cltd
xchg
mov
pop
loop
shll
stc
cmp
jno
dec
into
cld
scas
das
cmp
sahf
int3
xchg
ret
pop
pop
cmpsb
mov
inc
arpl
xor
mov
mov
or
inc
out
fimull
jbe
add
push
das
adc
data16
popf
mov
and
add
mov
push
xchg
stos
call
pushl
adc
jecxz
cmc
out
mov
cmp
lret
adc
aaa
in
imulb
cmp
imul
xchg
jne
xor
cmc
cmp
int3
in
cmp
cwtl
loope
popa
stos
or
pusha
fcoms
faddl
push
add
stos
mov
andb
mov
js
push
pusha
add
mov
jne
jns
aam
testl
movl
xchg
cmp
jecxz
jbe
dec
mov
aad
lock
mov
gs
and
mov
bound
jns
stc
sub
dec
in
loopne
stc
jne
repz
movsl
add
repz
dec
mov
dec
jle
cltd
and
mov
mov
test
stos
fsubrl
bound
shlb
add
insl
push
es
mov
inc
cmp
fists
xchg
pop
pusha
sahf
sahf
arpl
adc
sarl
adc
jbe
jae
stos
imul
lret
loop
jae
fmulp
jne
lahf
and
add
mov
aas
xchg
cmp
aaa
mov
xchg
push
or
inc
inc
outsl
out
sti
scas
in
outsl
movb
cmp
mov
outsb
call
cs
ds
lret
sbb
scas
scas
leave
and
test
lea
jmp
aad
insb
test
push
push
icebp
and
sarb
dec
sbb
out
xchg
inc
shlb
dec
shrb
xchg
shl
rorl
pop
mov
mov
frstor
mov
lds
cwtl
sbb
push
pop
dec
mov
inc
int3
pop
iret
fdivrl
pop
xor
jae
xchg
outsb
xchg
cltd
push
and
leave
imul
gs
loop
xrelease
mov
pop
jae
int3
push
js
out
out
mov
rcll
cmp
sub
fbstp
into
rcll
add
data16
dec
je
inc
ficoml
pop
sub
adc
rolb
push
push
lea
xorl
insl
push
mov
mov
xchg
ret
or
xchg
outsl
jo
push
jge
popf
jno
push
daa
popa
and
mov
jg
icebp
arpl
dec
test
push
sub
jb
lcall
jae
movsb
jg
movsl
movsb
repz
and
sti
jns
xchg
push
jp
orb
and
adc
push
es
inc
lret
sub
out
lcall
das
sub
jns,pn
repnz
push
pop
push
adc
call
cs
pop
outsl
loop
pop
in
mov
in
cmp
cmpsb
inc
decl
arpl
inc
shll
arpl
sub
sbb
fdivl
sub
daa
fs
in
inc
sub
aad
gs
hlt
out
inc
push
adc
sti
ror
rcl
inc
popa
ja
ret
outsb
sahf
sbb
xchg
mov
jae
sub
out
sub
negl
cld
inc
xchg
cmp
sahf
pop
fcmovbe
add
sarb
cmpsl
sbb
jae
les
add
in
xchg
std
and
shr
jecxz
jge
fwait
das
jmp
sub
ljmp
sub
outsb
call
inc
mov
mov
gs
stos
pusha
pop
int
cmp
arpl
int
and
dec
out
das
test
jns
lcall
out
xor
push
mov
test
jno
aad
jle
out
jp
test
sbb
std
mov
stos
das
daa
in
inc
xor
xchg
jae
in
cmp
mov
add
cwtl
gs
cmp
in
es
jl
loop
jae
mov
jb
sbb
scas
pop
jno
jmp
or
dec
mov
outsl
dec
pop
dec
lcall
insl
jl
push
mov
int
sar
aaa
popf
sahf
negb
push
sub
sbb
jno
xor
outsb
jno
in
imul
pop
imul
cmpsl
popf
mov
mov
inc
push
test
test
mov
int
andl
movsl
sbb
mov
jns
adc
sbb
lret
push
rol
fisttps
mov
mov
inc
mov
sbb
jbe
scas
pop
jmp
lret
xor
jl
movsb
mov
fstps
and
dec
add
fisttpl
mov
xchg
sub
sbb
mov
out
cmc
sub
std
or
add
or
out
stos
lock
xchg
and
mov
jo
add
add
cmpsb
dec
sbb
add
mov
repnz
inc
call
xor
pop
mov
addb
int
push
insb
lcall
loopne
jge
rcrb
int3
rol
stc
in
mov
jecxz
push
xlat
cmp
in
mov
jmp
xchg
jno
aam
jns
mov
mov
mov
test
push
addr16
and
es
fldenv
xor
jecxz
adc
inc
outsb
sahf
mov
movsb
jge
cmp
and
add
dec
mov
insb
cs
sub
popf
in
out
inc
fsubr
mov
push
pop
mov
adc
mov
lods
xor
fcmovnu
imul
mov
mov
xor
sahf
dec
push
std
mov
or
xor
mov
pop
aas
sbb
inc
enter
js
or
out
mov
mov
adc
xchg
cmpsb
xchg
out
sub
xchg
lret
push
bound
jno
int3
repz
push
xchg
aaa
sub
dec
es
mov
adc
push
arpl
ret
jge
arpl
mov
ljmp
in
or
incl
cwtl
push
daa
les
enter
xchg
mov
clc
sbb
pop
daa
out
and
mov
pop
mov
dec
push
test
rorl
popa
cld
push
adc
inc
jae
scas
jmp
ror
mov
xchg
adc
jge
stos
pop
lret
xor
dec
lods
fistl
addr16
adc
inc
enter
nop
xchg
xor
push
or
or
sub
ja
sti
mov
jnp
movb
mov
push
inc
fcmovu
imull
pop
mov
mov
and
stos
lods
sbb
mov
gs
fimull
cmp
xchg
insb
daa
and
sbb
inc
jne
in
rcr
sbb
mov
xchg
dec
xor
push
stc
stos
jne
pop
arpl
or
pop
inc
stos
cmpsl
push
fbld
flds
sub
push
pop
pop
gs
pop
pop
dec
stc
out
add
in
imul
sbbl
inc
add
jae
in
test
cmp
sahf
shll
lret
push
and
data16
js
cmp
std
ljmp
sub
cld
and
in
in
out
jns
rcrb
inc
push
ret
dec
sbb
in
lcall
sub
int3
mov
or
adc
cs
sub
iret
aam
out
dec
adcl
ret
pusha
cli
adc
sbb
mov
inc
cmpsl
jmp
xlat
sbb
adc
mov
fucomi
lods
pop
mov
repz
jmp
daa
xchg
add
push
push
mov
cmp
sahf
xor
shll
stc
das
push
xchg
hlt
mov
ficompl
sub
sbb
and
mov
outsb
jb
sub
push
sbb
shll
mull
int
cmp
in
decl
ret
imul
sbb
mov
jne
icebp
in
cmp
bound
aaa
mov
dec
stc
push
add
arpl
into
shll
fimuls
sti
xor
mov
push
lret
jno
sbb
jns
push
in
xor
lds
jo
cli
adc
add
mov
mov
pop
xlat
scas
pushf
in
jo
mov
mov
loope
in
inc
sbb
xchg
jmp
jbe
add
or
add
in
test
jg
stos
cli
push
inc
popa
mov
fdivrl
push
pop
fs
pop
fwait
js
inc
pop
sarl
cmc
lods
jns
aam
mov
loopne
cmpsl
out
data16
jmp
mov
ss
lret
clc
push
in
fiaddl
pusha
in
out
xorb
mov
adcb
mov
enter
or
mov
mov
push
in
roll
mov
outsb
or
pop
dec
mov
loop
insb
mov
jge
fs
fwait
sbb
push
mov
scas
jns
ds
jmp
or
mov
push
sub
mov
pusha
hlt
add
popf
mov
popa
xlat
insb
ja
mov
ss
fisubrl
lret
lea
pop
dec
push
mov
lds
out
das
sbb
loop
cld
in
cmc
cmp
jns
int3
out
mov
orl
and
jbe
imul
cs
mov
pop
or
push
popa
jmp
push
sbb
cli
dec
insl
xchg
xchg
push
and
mov
loop
mov
outsb
cld
ljmp
adc
lea
leave
push
aaa
insb
insl
data16
addr16
shl
sub
pop
push
mov
scas
bnd
mov
adc
cmp
call
dec
fldl
repnz
daa
daa
rcrl
pop
cmp
dec
pop
inc
jno
cmpl
xor
or
xorl
or
iret
inc
sub
mov
pusha
or
imul
int
mov
jo
test
mov
je
push
clc
jge
dec
clc
lret
in
in
je
dec
loope
inc
push
in
ds
add
test
clc
inc
jnp
inc
fwait
imul
dec
mov
xor
push
pop
cmp
pusha
xor
ret
cmp
xor
aas
movsb
les
jbe
les
jb
test
pop
xchg
leave
popf
in
pop
roll
push
ret
cld
loope
popa
test
arpl
jge
aam
mov
dec
push
mov
sub
jge
sub
lcall
adc
out
ret
dec
and
imul
test
in
in
xor
xchg
lods
pop
cmpl
pusha
out
cmc
adc
add
jl
mov
dec
loopne
jbe
push
imul
je
add
mov
lret
sbb
mov
imul
daa
xor
mov
sahf
ss
pushf
or
mov
sbb
in
xchg
push
clc
cmp
std
push
push
jmp
dec
mov
jno
sub
int3
jb
nop
pop
roll
xor
dec
rcll
aam
cld
popa
jnp
mov
call
scas
or
xchg
inc
aam
and
jmp
jnp
mov
addl
push
cmp
xrelease
cmp
dec
decb
insl
fmull
xchg
xchg
ja
jae
jns
push
add
inc
push
and
cltd
fstl
test
ss
icebp
into
sbb
push
scas
movaps
mov
sub
icebp
test
mov
xorb
js
sub
and
and
push
sbb
out
xor
and
fistl
and
mov
adc
xchg
call
cs
mov
pop
clc
mov
cld
add
popa
jmp
push
stos
popf
sbbb
shrb
ss
enter
sarl
mov
push
mov
iret
push
out
inc
lea
inc
add
sub
lods
push
mov
out
cmovae
fstps
adc
xchg
or
test
adc
add
inc
stos
ds
xchg
mov
jbe
shlb
cmpsl
in
lea
jb
xchg
es
inc
jmp
mov
scas
sahf
mov
dec
sti
sbb
or
fwait
stos
or
and
lahf
sbb
test
xchg
and
mov
pop
dec
nop
cs
mov
icebp
xor
cmpsl
jb
ja
aas
push
mov
ds
adc
or
inc
jecxz
ffree
push
shll
cmpsb
mov
ret
movsl
rorl
mov
lea
and
push
ds
and
mov
push
push
mov
pop
xor
xchg
leave
fdivr
mov
fldcw
fs
cmpsl
rclb
rcr
dec
add
inc
test
daa
cld
or
mov
xor
adc
fadds
mov
js
inc
xchg
mulb
dec
scas
ds
xchg
jnp
jle
cmp
lods
ja
mov
std
aad
xor
hlt
push
fs
and
rol
and
push
lret
fimuls
out
jl
mov
cmp
fs
inc
push
out
dec
lahf
pop
iret
jg
test
sub
and
inc
imul
lcall
push
cld
rolb
pop
adc
add
es
stc
scas
jo,pt
jmp
mov
mov
inc
xchg
loopne
pop
or
mov
stos
fs
jmp
ret
mov
inc
movsb
pop
aaa
and
add
lahf
pop
emms
daa
push
or
sub
arpl
in
lea
fadds
xchg
fisubl
aam
scas
xchg
inc
int
pop
pop
and
push
inc
mov
inc
aam
mov
imul
sbb
cmp
jns
push
mov
insb
or
jns
jo
pop
mov
inc
data16
pusha
test
ja
xlat
lret
mov
jo
mov
dec
adc
test
or
incl
jnp
xchg
in
pusha
jnp
xchg
xchg
mov
stos
cwtl
xchg
ret
lea
or
scas
pusha
repnz
in
lcall
test
loope
fldl
in
xor
xchg
inc
sbb
adc
xchg
sbb
cli
lock
fisubrl
push
sahf
dec
ljmp
pushf
push
or
ss
iret
sub
aaa
and
jg
adc
pop
jg
adc
jne
xor
call
mov
ficoml
jne
jge
add
mov
mov
fs
pop
cli
add
xor
xchg
inc
xor
idiv
sbb
scas
mov
mov
dec
or
xor
mov
cmp
mov
push
jbe
adc
into
js
sbb
imul
mov
icebp
dec
repz
push
cli
push
push
push
scas
add
sbb
je
mov
repnz
stos
jg
jecxz
scas
mov
bswap
and
xor
or
cmpsb
push
mov
int3
mov
js
or
cmp
in
pop
cltd
repnz
adc
mov
ss
inc
xchg
int
dec
int3
mov
fbld
jmp
loop
sbb
jne
into
stos
or
sbb
sbb
and
dec
jo
dec
and
in
aas
fwait
push
lock
imul
mov
iret
xchg
fbstp
stos
je
mov
xchg
sti
inc
and
push
pop
xor
mov
bound
cmp
mov
dec
add
repz
imul
jp
mov
addr16
scas
subb
xchg
inc
ss
cwtl
push
cltd
or
adc
iret
jmp
or
cmp
insb
popa
add
xor
adc
movsb
inc
and
pop
push
in
loopne
mov
int
mov
ret
int3
or
cmp
test
push
mov
iret
insb
jnp
push
lods
rcrl
sarb
sub
mov
mov
stos
fwait
je
in
in
cmp
jl
in
out
cld
repz
adc
push
jnp
and
mov
cmpsb
sbb
popf
orl
mov
dec
prefetchw
mov
sub
inc
stos
cmp
ss
xchg
daa
dec
push
fisubrl
ss
clc
and
and
cmp
xchg
mov
pop
repz
jp
xchg
iret
add
or
xlat
inc
adc
mov
push
sti
fisttpl
lock
bound
push
jecxz
outsb
mov
xor
loopne
imul
sub
into
adc
mov
add
test
jnp
dec
imul
adc
pushf
mov
add
ret
jae
cli
jmp
xchg
xchg
push
mov
lods
cltd
iret
push
aaa
fs
in
mov
std
or
push
add
inc
mov
lock
sti
lds
les
insl
add
sbb
dec
inc
dec
lret
mov
jg
mov
mov
sbb
icebp
jb
push
mov
xlat
pop
mov
outsl
add
add
cmp
push
mov
inc
mov
push
out
jp
xchg
mov
in
cmp
pop
cmp
sub
push
addr16
pop
jg
outsl
dec
inc
push
push
ja
pop
popl
xchg
and
mov
xchg
sbb
fs
loop
pavgw
mov
xchg
sbb
sub
dec
add
sti
sbbb
push
add
jg
loop
and
aas
adc
jge
ljmp
rorb
pushf
push
adc
out
pop
push
decl
aaa
push
lods
or
and
je,pn
dec
negl
rolb
mov
xor
es
adc
stos
sub
nop
pop
mov
outsb
add
xchg
lret
stos
or
dec
and
pop
jle
add
sbb
add
mov
fwait
pop
jb
jbe
mov
cmp
cmp
outsl
xchg
cmp
cmpl
jae
add
mov
repz
add
xor
rcl
or
aad
sub
cwtl
fisubl
jo
add
shl
out
ret
xchg
imul
add
mov
add
mov
inc
scas
out
jns
jae
mov
pminsw
inc
mov
push
add
fistpl
inc
mov
leave
adc
addr16
insb
pop
out
cmpl
leave
loope
cmp
xor
rolb
cmp
dec
inc
lahf
aas
cmp
and
xchg
int3
mov
and
mov
jne
movsb
or
js,pn
mov
push
insb
movsl
mov
aaa
push
pop
mov
into
fsubl
adc
xchg
outsb
jmp
mov
call
adc
jle
dec
mov
sub
dec
push
test
mov
adc
dec
psubd
lahf
mov
lret
pusha
ret
cld
sbb
or
pop
in
pusha
test
push
rcr
or
sub
dec
inc
fcomip
pop
int3
mov
mov
xchg
and
outsb
cli
mov
inc
or
hlt
and
stos
ret
mov
pushf
insl
fisubs
cmp
mull
addb
insl
inc
in
inc
jb
jp
jbe
or
cmc
xchg
mov
fldt
mov
cmp
adc
sub
sub
not
or
sub
rorb
int
insl
loopne
leave
jb
clc
mov
data16
cld
jbe
push
mov
mov
loopne
mov
jl
fdivrl
push
out
lret
sub
xlat
nop
mov
sbb
scas
clc
lea
cmpsb
out
out
sbb
mov
xchg
cltd
jns
ss
xor
lcall
fldcw
mov
mov
adc
cmp
and
shll
shrl
mov
and
fcomip
out
dec
add
fistps
jo
lds
and
cltd
fcmovne
iret
aaa
into
stos
pop
lcall
enter
xor
mov
sbb
loopne
xorb
and
mov
fimuls
adc
cmp
dec
pop
mov
xchg
mov
dec
insl
mov
mov
lods
iret
scas
flds
push
or
cwtl
xor
pop
xor
rolb
popf
insb
pop
sub
cmp
pop
ret
jnp
int3
cmp
mov
adc
xlat
pop
sbb
sub
adc
mov
lock
mov
ljmp
xor
cmp
sbb
mov
jecxz
sbb
push
enter
lods
ret
arpl
jo
fistl
xchg
xchg
xor
pop
cmp
adc
repnz
push
in
mov
jbe
pop
outsl
pop
add
stos
mov
loope
cmpsl
sti
cwtl
mov
and
and
ja
std
idivl
or
sub
push
shr
insl
or
decb
dec
fistl
sbb
pop
mov
cmpsb
into
pop
cs
ljmp
add
popa
push
sub
push
loope
mov
ret
fisttpll
insl
dec
cmp
outsb
aaa
nop
out
fcoml
push
popa
add
and
push
ljmp
fdiv
je
popa
jp
dec
data16
adc
lods
aas
in
in
push
cld
and
cmpsl
xchg
fiadds
adc
mov
pop
popf
cmp
stos
ljmp
cmpb
push
int3
arpl
scas
ds
shll
push
mov
pop
push
jbe
xor
sub
xchg
popa
in
test
mov
jg
push
or
inc
fidivrs
and
in
gs
mov
adc
and
bound
stos
scas
push
jg
aad
xchg
adc
sub
lahf
cmpb
aas
stos
add
mov
insl
in
aam
outsl
es
imul
sub
jno
xchg
test
and
mov
add
cmpl
xor
clc
cmpsb
cs
sbb
jle
stos
imul
sbbl
push
xchg
je
mov
lods
mov
jl
inc
sbbb
bound
ret
es
mov
push
mov
adc
pop
xchg
test
dec
adc
lret
mov
xchg
jp
stos
sbb
lds
lds
rcrb
xlat
xchg
jo
test
inc
xor
inc
mov
adc
lcall
adc
xchg
loope
mov
movl
out
push
leave
out
inc
les
mov
ret
cli
test
ret
call
out
adc
and
add
ret
mov
jne
test
outsb
imul
cmpsb
mov
xchg
lock
imul
ret
xor
gs
sub
int3
loopne
hlt
sub
add
push
xor
outsl
sbb
test
cwtl
mov
push
pushf
xorl
pop
sub
mov
idiv
call
sub
jns
outsl
or
cld
or
mov
push
cld
mov
push
jo
pop
out
jb
stos
add
mov
testl
sub
mov
cli
lcall
mov
enter
in
adc
sub
pop
loope
inc
rep
jle
orl
inc
push
clc
testb
xchg
sbb
negl
and
or
outsl
pop
mov
enter
xchg
or
pop
pop
sti
subb
sarl
out
je
movsl
or
stc
popf
jecxz
scas
push
xchg
addl
pushf
xchg
or
pop
ret
jecxz
rcrb
jno
ss
and
sub
mov
repnz
inc
add
inc
or
sbb
or
inc
int
jns
addr16
or
add
ljmp
jmp
cltd
test
and
test
inc
adc
or
clc
xor
insb
icebp
push
sub
jle
mov
sahf
mov
xchg
jae
xchg
fucomi
lods
rcrl
xchg
jbe
mov
add
shrb
pop
xchg
push
pop
gs
xor
mov
mov
or
mov
gs
inc
ss
adc
lea
lea
mov
inc
lea
rcrl
and
add
xchg
cld
pop
aam
movsb
jecxz
xchg
dec
enter
sub
sahf
mov
xchg
out
fistps
shl
mov
cmpsl
orb
cmp
mov
mov
xor
add
mov
sub
inc
lea
ds
jmp
sbb
push
cmc
out
and
negl
push
repnz
add
lods
jp
push
popa
mov
xor
mov
jb
push
ret
jbe
mov
inc
stc
sbb
xchg
pushf
stos
jo
rol
pop
fldl2t
aaa
xor
inc
xor
mov
bound
fs
sub
lcall
jae
std
jb
lcall
push
and
inc
aas
sti
cs
dec
test
xlat
stos
jno
dec
pop
loop
sub
fnstsw
add
mov
cli
xor
jecxz,pn
stos
inc
dec
ret
mov
xchg
out
cmp
pop
ss
fmul
xor
xor
jp
scas
sti
and
pop
jmp
jne
fs
xchg
jo
mov
clc
adcl
int3
xchg
or
pop
xor
sbb
movsl
or
adc
xchg
data16
sub
mov
adc
popa
mov
pop
cmp
test
inc
mov
cmpsb
push
push
xchg
pop
data16
daa
std
movsl
pop
or
ss
fs
sbb
or
sbb
fcompp
in
mov
and
push
xchg
cli
pop
into
xchg
mov
les
adc
push
or
jg
mov
mov
xlat
xlat
pop
and
cmp
xlat
cmp
insb
test
cmp
xchg
xchg
je
mov
cmp
cwtl
mov
lods
dec
pop
adc
sub
cmp
mov
sub
sub
es
inc
lock
insl
out
scas
cmpsb
push
test
fs
rcrl
xlat
xchg
xor
xor
mov
into
daa
ss
aad
mov
aad
sbb
dec
ds
fptan
mov
rcrl
pop
cmp
dec
loop
ja
out
testl
push
stos
cwtl
ud1
mov
pop
gs
push
cmp
adc
pop
inc
add
mov
xor
repnz
in
inc
add
xor
cmpsl
pop
dec
xchg
or
or
into
cld
push
jecxz
adc
fbld
sub
imul
add
gs
vmovdqa
rcrl
mov
xor
push
xor
cmpl
aaa
add
and
pusha
out
cmc
push
arpl
mov
cld
faddp
pop
dec
fists
sahf
mov
cmpsl
adc
jle
or
mov
dec
mov
pop
int
inc
sbb
mov
rcll
jp
xchg
out
fistps
ret
jecxz
sahf
mov
shrl
daa
push
add
or
daa
sbb
mov
inc
dec
jns
mov
xchg
cmp
iret
pop
repz
push
movsb
jmp
mov
loopne
sbb
add
imull
imul
jne
dec
stos
jp
les
cmp
dec
jno
pop
dec
out
add
add
sbb
lret
cli
pop
cmc
js
ret
jle
xlat
std
cmp
sub
lahf
jge
pushfw
dec
bnd
shrl
push
xor
loope
jno
or
int
fcoml
aas
movsl
mov
fs
stc
test
int
pop
int
sbb
cmpsl
or
adc
ds
in
mov
or
mov
dec
push
fimuls
push
cmp
jmp
fidivl
jp
pop
test
add
fdiv
add
sbb
addr16
and
out
add
sub
lds
mov
sbb
add
iret
fcomip
jmp
test
or
fwait
xchg
test
rorl
mov
data16
adc
cmpsl
mov
inc
push
movsl
xchg
fwait
sub
stos
in
incb
xor
push
lcall
dec
dec
or
lcall
mov
jmp
js
xchg
shlb
mov
loopne
dec
lcall
gs
mov
jae
fbstp
inc
filds
jmp
inc
loopne
xchg
arpl
pop
cmp
mov
cmc
sub
jns
mov
ret
or
dec
loope
arpl
mov
sti
stc
pushf
sbb
mov
dec
push
jg
icebp
xchg
push
inc
add
mov
insl
push
pushf
add
stos
push
xchg
mov
clc
pop
pop
sub
adc
out
icebp
mov
ds
sbb
das
jnp
movsl
lods
mov
lds
mov
cmpsb
or
cmp
add
dec
hlt
fisttpll
mov
or
sub
mov
and
testl
fs
enter
call
mov
xchg
jg
dec
adc
cmp
or
sbb
mov
adc
ret
cmp
mov
add
and
sub
das
dec
adc
test
orl
pop
xchg
ja
es
add
dec
dec
sub
xchg
ja
cmp
int3
xor
jns
inc
enter
sbb
dec
xor
pop
loop
sbbb
dec
stos
mov
out
or
mov
pop
fs
xchg
mov
push
mov
addr16
test
sar
xchg
clc
sub
pop
push
sar
xchg
add
mov
rcrl
xchg
mov
push
xchg
push
dec
sub
repnz
add
fstl
fwait
ja
inc
dec
outsb
enter
or
and
repz
jbe
adc
test
loopne
lds
pop
push
shl
nop
clc
push
ret
push
adc
pusha
pop
data16
mov
aam
outsl
mov
test
inc
addb
mov
decb
mov
jmp
mov
mov
mov
mov
or
pop
pop
mov
push
iret
lahf
loop
mov
int
loopne
xor
cmpb
pop
push
in
cmp
xchg
pop
xchg
or
ret
jp
push
je
lods
mov
mov
push
pop
inc
fimull
jle
pop
sub
test
pop
lret
iret
add
gs
data16
add
arpl
jg
enter
adc
add
imul
rcrb
lret
repnz
adc
outsb
dec
dec
shll
pusha
movsl
jb
mov
test
cmp
popf
add
jo
cld
jo
inc
xor
stc
into
sarb
mov
and
sbb
pop
or
inc
inc
mov
push
xor
lcall
mov
mov
movsl
and
mull
jbe
into
imul
inc
jne
imul
aad
sbb
loopne
addb
mov
inc
xchg
cmp
mov
sahf
lock
lret
ret
mov
fwait
nop
add
scas
mov
cmc
inc
jecxz
pushf
adc
loope
mov
jmp
les
notb
xchg
cmc
dec
cmp
cmp
mov
push
movsl
mov
jne
xchg
mov
shll
xor
or
fdivl
mov
repz
push
jl
fnstenv
fwait
cs
insl
and
jle
rclb
mov
add
sub
aam
into
popa
bound
call
into
addr16
push
xchg
inc
fstps
out
pop
cmp
lcall
stc
jae
ficoms
repz
arpl
xchg
enter
xchg
and
into
sbb
mov
jle
add
jne
jno
mov
mov
mov
mov
push
loopne
stc
jmp
cmp
mov
push
xlat
push
and
icebp
pushf
sbb
mov
fwait
pop
jl
push
mov
pop
adc
pop
shlb
out
or
repnz
lds
add
fwait
emms
jecxz
std
xchg
fistpl
sar
lcall
in
xor
add
ret
jmp
idiv
mov
mov
in
ja
js
add
mov
es
pop
ret
repnz
gs
loop
loope
push
add
es
jno
xchg
pop
ficoml
push
cmp
mov
pusha
mov
jne
call
mov
and
add
sub
adcl
jbe
std
cmc
aam
mov
mov
in
popa
xor
rorb
mov
mov
xchg
shrb
leave
nop
inc
loope
rcl
mov
aad
cld
cwtl
dec
push
cli
fadds
dec
call
out
pop
ret
jg
lods
inc
xlat
xchg
imul
scas
push
jp
insb
add
mov
lods
out
stos
xchg
imul
lahf
and
and
aaa
or
outsl
loopne
js
movsb
add
mov
mov
ds
or
cmc
sbb
test
sub
pushf
push
and
pushf
out
xor
je
outsb
int
cmpsl
dec
push
imul
cld
sbb
addb
jge
stos
fldcw
adc
xchg
stos
and
jae
mov
rol
std
sbb
mov
out
fcoms
std
sub
dec
jecxz
notb
push
jl
jmp
das
insb
cmp
out
push
ret
adc
push
mov
dec
decb
mov
inc
dec
cs
sbb
cmp
aad
dec
jno
fadd
sub
adc
cmc
cmp
pop
je
out
lock
stc
xchg
add
add
mov
mov
inc
and
push
enter
or
add
mov
jno
xor
lret
insl
push
imul
lahf
out
in
int
push
jb
js
fs
add
sub
arpl
clc
fwait
xor
xor
adc
sahf
fiadds
insb
aaa
rclb
xor
inc
mov
sub
adc
pop
cmpsl
mov
cmp
scas
daa
sub
ja
push
lods
jmp
stos
or
push
or
mov
and
xorb
addb
int3
fbld
push
push
test
adc
mov
adc
mov
sti
inc
dec
aam
fisubl
cwtl
inc
jg
and
adc
aad
daa
testb
lret
jno
cmp
lret
fnstcw
fstpl
bound
lcall
and
insb
test
push
in
mov
nopl
insl
cli
adc
push
mov
dec
daa
xor
bswap
fucomip
or
in
mov
aas
push
hlt
xlat
cmpsl
adc
mov
sbb
xor
jl
mov
mov
enter
xchg
mov
adc
aaa
jmp
out
jne
jp
mov
push
inc
int
ljmp
add
pop
shll
mov
dec
lock
pop
push
jns
cmpsl
cmp
cwtl
mov
dec
ret
xor
bnd
leave
mov
std
mov
inc
inc
repz
fadds
lods
or
js
sub
inc
adc
loop
pop
jbe
popl
add
adcb
pushf
or
pop
lods
jno
inc
pushf
mov
lods
pop
jl
in
jne
mov
push
ret
iret
pop
imul
in
add
xchg
jmp
ja
cmc
cmpsl
in
mov
and
xor
out
inc
rolb
and
jecxz
inc
mov
fisubrs
or
pop
les
add
or
lahf
in
jae
adc
pop
pop
and
sbb
cmp
cmp
jl
popa
and
sub
add
xchg
inc
adcl
mov
cli
xor
stc
adc
dec
add
jno
mov
nop
mov
jl
imull
aam
je
add
rcll
int3
cmp
mov
aaa
add
push
fcmovnu
jle
jb
jmp
and
pop
and
test
out
fnstsw
pavgw
mov
push
movsl
repz
lcall
fdivs
jge
mov
scas
push
mov
sbb
jg
cmp
rolb
dec
and
sub
aad
dec
ss
arpl
cmp
out
xchg
ret
dec
mov
pop
roll
mov
push
adc
push
push
stos
popa
jecxz
test
and
pusha
cltd
inc
daa
and
in
lret
mov
adc
test
mov
jo
mov
pop
mov
mov
mov
pop
addb
pop
mov
fs
cli
mov
aaa
inc
or
lahf
lret
inc
hlt
imul
cwtl
and
or
cmc
fisttps
pusha
data16
lret
or
jge
je
aad
and
xchg
add
push
mov
jb
sbb
push
cmp
nop
outsb
cmpsl
sbb
and
mov
and
add
out
xchg
sbb
orb
lret
popf
fimuls
fsubl
push
rcll
lock
mov
push
inc
cs
xchg
push
popa
test
push
push
aaa
cmp
sub
inc
insb
aam
mov
lret
aas
and
sub
jge
pop
add
dec
dec
jnp
add
loope
fwait
lock
sbb
fwait
out
mov
lret
or
into
xchg
dec
scas
jb
sarb
pushw
pop
mov
push
sub
xor
popa
pop
out
pop
push
outsl
pop
mov
pop
sub
das
rcl
dec
popa
sub
and
pop
jge
mov
pop
xchg
mov
orb
dec
adc
jmp
push
adc
sbb
js
xchg
dec
sbb
decb
outsb
jne
je
cmp
jo
rorb
sbb
shl
or
cmp
out
inc
ret
sbb
push
inc
mov
lcall
in
lahf
adc
mov
rcll
xchg
fs
repz
jecxz
sarl
fs
xchg
cmp
cmp
push
or
cmpsb
and
sub
mov
xor
pop
push
mov
fistl
pop
add
sub
iret
test
mov
xor
adc
vmptrld
andl
gs
jb
xchg
sub
lea
and
dec
mov
push
mov
in
inc
loope
mov
loopne
int3
sbb
mov
xor
or
push
mov
inc
add
cmp
xchg
cmp
xchg
aas
fisttpll
mov
sub
or
mov
mov
xor
pusha
subb
jmp
push
push
mov
inc
jae
imul
lds
ds
or
cs
pop
outsl
fisttps
dec
scas
cmpsb
push
cmp
je
pop
mov
xchg
fbld
popa
notb
pop
pop
push
push
ljmp
ret
ds
mov
aas
cmpsl
jp
sbb
or
dec
repz
clc
ja
mov
insl
lods
je
mov
inc
ret
adc
nop
rclb
dec
push
mov
and
inc
scas
sahf
ja
mov
mov
xor
ds
addl
xor
shl
mov
shrb
mov
jp
mov
jmp
enter
jp
inc
roll
lahf
adc
rorb
adc
test
add
mov
and
stos
cltd
and
pusha
xchg
inc
jne
push
cmp
inc
xchg
in
xor
adc
sbb
mov
test
pop
xchg
sbb
dec
iret
jb
js
daa
jns
dec
add
pushl
mov
pop
inc
xor
arpl
mov
je
inc
xchg
pushf
inc
es
sbb
rolb
mov
adcb
nop
push
rcr
lea
cmp
sbb
outsb
adc
sub
ljmp
cmp
icebp
int
sub
cmp
push
cmp
xchg
sub
roll
dec
mov
rol
shlb
insl
mov
xlat
ret
insl
fisttps
jbe
es
inc
sbb
jle
inc
rcll
cmc
cwtl
fldt
push
loope
test
and
adc
sahf
xor
push
xchg
pop
push
dec
pop
mov
test
mov
or
sbb
push
push
mov
pusha
sar
mov
xchg
push
aad
call
aam
jne
push
sahf
mov
cmp
bound
and
fidivl
or
xor
jbe
sub
xchg
jnp
mov
xchg
dec
and
pop
rorb
lret
push
inc
sub
ficoml
push
dec
jns
fldenv
mov
mov
in
mov
iret
movsl
sub
test
inc
jns
push
jo
jmp
or
lods
test
in
xchg
mov
cmpsl
pop
pop
mov
out
clc
loopne
fisttpll
xchg
sti
cli
sub
cmp
xchg
in
call
and
push
add
add
ret
jmp
out
sub
push
xor
cmc
ficompl
or
mov
jo
jns
sbb
xchg
out
xor
xchg
xor
add
cmpsl
push
inc
mov
out
cmp
fisttpll
mov
js
mov
inc
out
inc
cmp
ljmp
mov
fs
popf
push
lods
in
jae
in
add
dec
fs
fwait
pushf
adc
imul
add
sub
xchg
lret
daa
xchg
jo
xchg
add
out
adcl
mov
xor
mov
dec
adc
loop
adc
add
loopne
pop
cmp
sbb
nop
adc
add
jb
add
mov
cmp
out
xor
out
cmp
xchg
mov
sbb
or
sbb
or
loopne
mov
sub
nop
cmp
rol
stc
int
lret
ret
clc
hlt
mov
inc
cmp
sbb
pop
adc
mov
fisttpll
pusha
mov
iret
fnstenv
stos
pop
fcoml
jmp
xchg
mov
repnz
xchg
iret
dec
lock
test
sbb
test
jo
jmp
movsb
push
je
mov
mov
das
jb
out
lret
and
jae
out
dec
and
jp
out
adc
mov
xchg
rcl
pop
sub
iret
fisttps
pop
mov
insb
push
bound
cmp
iretw
popa
and
inc
loope
xchg
fbld
jne
adc
je
push
and
jno
push
or
scas
xchg
jmp
xor
mov
push
xor
add
cmc
mov
jne
lahf
lret
repz
loop
dec
dec
ja
inc
pop
int
push
ret
imul
pop
and
add
pushf
or
iret
pop
mov
push
sbb
mov
in
adc
dec
lock
mov
pop
inc
addr16
sahf
stc
and
int
int
sub
mov
pop
xchg
pop
lods
push
lret
xor
stos
sbb
inc
sub
push
push
cmpsb
iret
adc
xchg
pop
movntq
popw
jecxz
lea
push
push
and
nop
xlat
dec
add
scas
cwtl
xchg
fs
repnz
xor
pusha
add
push
sbb
es
int3
inc
stc
inc
mov
mov
and
test
push
sbb
lcall
hlt
cli
lret
add
xchg
xor
push
or
jecxz
jl
and
sahf
mov
mov
or
fadds
loope
je
cltd
sbb
sbb
jbe,pn
mov
adc
push
jecxz
mov
mov
testl
mov
or
lahf
aam
jnp
xchg
or
in
cwtl
xor
xchg
adc
fcompl
ss
divl
adc
lods
sti
jno
clc
aam
jl
xor
std
sar
lahf
ret
out
cwtl
lcall
into
inc
add
pop
imul
xlat
push
mov
test
mov
add
out
test
sbb
les
pop
test
xchg
dec
jmp
sbb
std
push
jl
fdivrl
repz
sbb
shrl
insl
push
pop
and
cli
inc
cwtl
push
lret
lret
and
in
pop
clc
dec
xor
popf
imulb
push
aaa
xchg
loopne
je
les
rcl
push
push
and
jae
inc
sti
out
testl
jne
inc
in
cmp
out
mov
push
leave
xor
mov
in
popf
inc
xor
inc
sbb
mov
rcl
icebp
mov
adc
sbb
nop
ret
stos
test
mov
in
loopne
aad
into
dec
push
imul
jecxz
dec
fdivr
movl
sbb
adc
jge
aad
xchg
popf
jo
lock
sub
test
lcall
cmp
or
cmc
or
push
mov
dec
push
mov
stc
pop
inc
and
test
bound
pop
push
divl
in
nop
jge
rcrb
xor
xor
mov
xor
sarb
pop
in
movsb
dec
xor
loopne
insl
push
out
shl
aam
push
mov
cmp
mov
xchg
in
cmp
pop
xchg
cltd
push
pop
inc
in
hlt
lcall
daa
xor
cmp
add
test
cltd
inc
push
jp
push
pop
cwtl
outsl
adc
cmp
leave
xchg
pop
pop
outsb
mov
ficomps
jb
mov
popa
in
decl
mov
and
fstpt
notb
lea
xchg
mov
cltd
mov
xchg
fcoml
or
xchg
mov
xlat
shr
aaa
scas
lods
in
aam
test
xor
or
out
xchg
cmp
loopne
inc
sbb
lods
dec
in
popa
mov
imul
mov
js
into
jae
add
cmpl
jg
jb
mov
mov
sti
or
add
cmp
xchg
sbb
movsb
sbb
push
cmpsb
lods
adc
lds
je
mov
mov
popa
add
pop
xorb
mov
jmp
jno
push
sub
mov
in
fisttps
inc
inc
outsl
push
xchg
int3
and
mov
mov
push
test
mov
stos
jnp
subl
adc
mov
sbb
adc
les
imul
push
mov
imul
xor
mov
std
les
sub
les
pop
ret
mov
sub
test
mov
or
pop
xchg
enter
xor
iret
push
cld
inc
in
js
sub
add
push
pop
movsl
jl
cld
cmp
mov
or
pop
int3
xorl
pop
negb
add
bextr
push
or
fstl
imul
adc
fidivs
pop
stos
je
ljmp
push
loop
out
push
and
xchg
gs
jg
pop
pop
dec
fmul
add
lahf
lods
xchg
inc
xor
out
sub
adc
and
dec
inc
push
rcll
call
lds
mov
mov
test
or
dec
mov
popa
shrl
insb
inc
xchg
and
cmpsb
call
jmp
xchg
insb
jmp
dec
and
mov
mov
sti
or
add
out
fistps
ret
loopne
sbb
mov
and
inc
inc
arpl
in
nop
xchg
test
shlb
fimull
xor
lahf
add
test
pop
inc
cltd
and
leave
add
lret
pop
sub
into
loop
inc
ficoms
xchg
adc
stos
xor
xor
ror
fs
or
xor
pop
loope
mov
popf
mov
inc
addr16
lods
aas
in
xchg
inc
enter
imul
cs
sub
add
add
leave
enter
inc
ffreep
inc
jle
aas
loope
movsl
cmp
add
lods
lret
outsb
inc
mov
mov
adc
addr16
lret
addr16
lret
mov
xchg
sub
mov
jns
dec
cmpsb
call
xlat
dec
scas
xor
fistpl
popf
ds
mov
test
call
lahf
lea
jne
mov
out
adc
out
push
stos
mov
shl
mov
aas
and
sub
xchg
inc
rcrb
jmp
in
gs
mov
mov
lret
leave
and
add
test
sbb
test
jne
mov
xlat
stos
jbe
mov
into
xchg
mov
pop
push
ja
hlt
rorb
mov
xchg
das
sbb
stos
mov
push
add
sbb
jnp
mov
aas
or
rcrl
xor
cmc
lea
sbb
jg
ret
popa
mov
out
pop
fucomi
mov
scas
dec
jne
cmp
movsl
inc
aad
or
call
aas
movsl
cwtl
mov
test
sar
cs
stc
xchg
les
adc
test
jnp
inc
mov
push
xchg
notb
and
adc
iret
loopne
inc
cs
shrb
inc
xor
cmp
sub
lret
loopne
mov
push
outsl
test
mov
dec
mov
fbstp
xor
ret
mov
push
and
add
or
in
shlb
subl
sbb
mov
push
mov
mov
xchg
aad
jb
pop
xor
ret
aaa
cli
xor
jge
mov
mov
add
scas
loopne
jns
mov
das
fisubl
fndisi(8087
lahf
jecxz
cltd
mov
leave
and
mov
ret
and
and
xor
cmp
mov
or
aad
fwait
xor
orb
jo
iret
sbb
je
mov
test
cmpsb
pop
xchg
popf
loop
out
inc
add
or
pop
jnp
inc
mov
imul
jl
stc
popa
dec
xor
lock
mov
ficompl
out
push
jmp
int3
mov
les
pop
in
nop
xor
add
imul
repz
scas
inc
or
scas
xchg
sti
aaa
fldt
test
mov
outsl
lret
ja
std
es
xchg
push
fisubl
in
outsb
or
lds
scas
pop
cmpsb
call
cli
lods
add
xor
pop
add
imul
xor
iret
pop
aaa
jg
frstor
cltd
mov
xlat
adc
movsb
les
ljmp
cltd
lret
sbb
ficoms
jne
mov
adcb
mov
or
jne
scas
mov
dec
gs
xor
mov
xor
enter
cmp
xchg
cmp
pop
repnz
cli
and
out
lret
pop
aam
rcll
push
sbb
mov
repnz
and
int
push
pop
xchg
pop
movb
mov
jecxz
daa
subb
jns
sbb
inc
andl
out
cwtl
std
add
test
pop
add
leave
xor
jae
dec
fwait
sbb
jne
nop
inc
push
int
mov
addr16
mov
mov
or
mov
add
add
cmpsl
adc
mov
cmp
xchg
push
xchg
jl
sbb
es
bnd
enter
movl
xchg
xchg
stc
data16
stc
jno
inc
fidivl
loop
push
popf
push
pushf
lahf
lret
xchg
add
cmpsb
push
add
mov
or
je
cmp
or
das
jns
in
jge
shr
push
pushf
popa
or
clc
cmp
fucom
push
out
and
xor
in
inc
daa
aas
icebp
repnz
jo
movsb
adc
push
icebp
inc
jle
inc
push
pushf
xor
mov
lret
xor
orb
insb
cli
push
sbb
xchg
repnz
mov
shl
leave
cmp
mov
lret
mov
push
xchg
adc
in
ss
cmp
mov
sbb
imul
jl
test
dec
imul
pop
adc
xchg
sbb
sbb
aas
and
xor
addl
stos
push
sub
iret
jnp
repnz
and
scas
jae
imul
iret
in
data16
fstpt
push
jecxz
push
or
test
movsl
rcll
mov
psubsb
mul
iret
ds
jo
inc
jl
mov
fcmovnu
js
scas
xchg
shll
pop
cld
jo
sbb
fcompl
std
push
nop
lcall
test
jl
dec
andl
mov
popl
pop
mov
mov
adc
jne
xchg
xlat
push
aad
sahf
add
or
shlb
inc
stos
jp
dec
filds
mov
out
cmp
mov
outsl
or
orb
or
sub
pusha
neg
idivb
outsl
fsubl
movsb
sub
das
cmp
nop
pcmpgtd
stc
incl
jne
icebp
xor
xchg
mov
cli
inc
or
add
push
fwait
or
mov
xchg
mov
arpl
stos
mov
mov
icebp
xchg
fbld
out
mov
hlt
pop
mov
sti
pop
std
xor
aam
xlat
and
pop
mov
ret
int
mov
and
aad
roll
mov
push
and
leave
test
bound
inc
pop
out
xchg
jle
mov
push
dec
pop
xlat
mov
pop
sbb
add
push
mov
pop
cwtl
sbb
ret
aas
test
loope
xor
xchg
and
test
inc
inc
lret
out
aam
adc
lods
xor
cs
sbbb
movsl
pop
inc
push
clc
pop
xchg
movsb
dec
pop
mov
ljmp
test
inc
stc
push
adc
das
dec
push
das
fiadds
xlat
loopne
lods
fwait
dec
inc
xchg
pop
jp
sbb
lods
jbe
cmpsl
mov
mov
mov
movsl
mov
adc
add
in
pop
shll
mov
cs
xchg
nop
pushf
push
push
loop
mov
sahf
lret
shrl
ja
push
lods
rcr
dec
mov
push
mov
lods
dec
jno
das
mov
je
ret
xchg
dec
jo
aaa
mov
loope
lods
imul
icebp
sarl
mov
dec
lds
in
dec
mov
pop
cmp
cwtl
mov
xor
outsl
je
cli
and
add
fisubrs
adc
add
aam
pop
scas
adc
pop
mull
fs
loope
cmc
mov
fisubs
push
pop
mov
fidivs
xor
dec
cmp
push
and
roll
ficoms
adc
jno
dec
cmp
shrb
cmp
fcmovnb
sbbb
xor
sbb
data16
sarl
pop
movsl
jbe
push
ret
outsl
dec
in
rcr
and
jecxz
adc
xchg
jne
lods
iret
out
stc
lods
adc
xchg
and
leave
and
sub
inc
outsl
xchg
mov
sub
sbbl
daa
push
xor
and
fdivrs
dec
xorl
outsl
inc
sbb
xor
cmp
or
jns
movhps
test
inc
movsl
ljmp
sbb
add
cmpsl
dec
sbb
into
mov
mov
lahf
loope
out
leave
movsb
fwait
lods
lock
adcb
mov
pop
std
js
movsl
fnstcw
adc
pop
out
mov
stos
cwtl
pop
pop
cs
or
fistpl
jge
shlb
lret
stc
rcr
mov
outsl
push
ss
lcall
rorl
movsl
pop
jmp
fimuls
test
push
or
push
aas
fucomip
cmp
or
add
push
into
adc
or
int
popf
hlt
xchg
sbb
mov
push
arpl
and
hlt
mov
ret
test
and
cmpsl
ds
dec
mov
jge
push
jp
ret
mov
xchg
jae
mov
test
fnstenv
into
adc
mov
fcoml
sub
jg
pop
fs
scas
aad
or
lock
mov
aas
xor
fs
and
pop
push
imul
push
jecxz
pop
xor
out
jle
loope
and
push
in
incl
les
mov
cmc
jle
das
ljmp
shll
sub
int
hlt
in
or
inc
push
in
xor
sbb
pushf
icebp
ja
sub
call
stc
and
xchg
shrl
mov
mov
adc
add
inc
and
sub
mov
das
leave
push
out
sub
out
add
jae
pop
test
cmp
adc
or
inc
jp
scas
add
sbb
fldcw
xor
ja
adc
pop
outsb
mov
mov
dec
adc
sub
call
push
jbe
enter
int
aam
das
js
xor
xchg
mov
dec
or
cld
cmp
xchg
push
push
icebp
push
arpl
mov
mov
mov
shrb
clc
lret
adcl
outsb
shrl
packuswb
cmp
mov
sub
in
shrb
sbb
into
jp
mov
fstpt
jp
sbb
data16
pop
xor
mov
jae
aad
pop
aad
push
sub
jbe
cmpsl
rorl
push
in
dec
or
inc
jl
mov
pop
rorl
cwtl
sbb
mov
sarl
ss
or
inc
xchg
xor
idivb
xchg
xor
sbb
cmpsl
test
int
das
jecxz
mov
push
pop
cmp
add
out
mov
push
xorb
and
push
sbb
in
inc
and
inc
arpl
and
ja
or
inc
xor
notb
in
lds
cld
inc
cmp
add
inc
cmp
adc
adc
inc
mov
xchg
rol
adc
insl
pushf
dec
aaa
in
repnz
cwtl
push
dec
nop
push
sar
jle
pop
or
mov
es
add
sub
imul
mov
jmp
out
push
scas
pop
sbb
sub
xchg
lret
ds
fldenv
push
xchg
int3
dec
push
pushf
mov
repnz
fsubl
es
jg
in
movsl
xchg
rcll
add
pop
or
addr16
mov
lock
or
mov
in
mov
push
pop
add
push
sbb
pop
or
es
dec
mov
movsb
push
push
call
clc
outsb
push
idivl
push
jle
mov
lret
in
or
dec
test
cmpsl
cmc
xchg
jo
cmpl
jge
mov
sub
xor
mov
idiv
jbe
fadds
pop
scas
push
cmc
fcmovu
out
pop
orb
decb
jle
xor
jno
or
xor
fwait
inc
incb
je
xor
pop
ja
dec
vcvtdq2pd
pop
xorl
jns
xchg
es
lret
call
xchg
out
aad
bound
je
push
jge
jae
in
enter
jp
cmp
loopew
mov
outsb
add
fnsave
into
inc
into
movsl
inc
popa
cmp
lock
fistps
iret
int3
mov
addb
std
fdivs
mov
sub
jns
jecxz
xor
xor
fcmove
in
xlat
mov
shlb
subb
adc
push
daa
add
frstor
out
loop
shrb
pushf
ss
out
repz
movsl
lcall
pop
pushl
inc
and
adc
pop
scas
mov
inc
xchg
lods
xchg
jmp
sahf
inc
and
sbb
call
push
insb
mov
loop
push
or
push
push
cs
pop
xchg
or
cmc
push
sahf
cmp
mov
cmp
lds
clc
clc
mov
in
sub
dec
push
pop
pusha
push
call
pop
shlb
dec
xchg
aam
jg
and
outsb
jmp
jno
push
je
sbb
push
fcom
leave
pusha
outsl
insl
outsl
out
jle
loope
adc
call
test
dec
jae
jo
fidivrs
jge
sub
xlat
dec
xor
mov
mov
jl
jmp
xchg
out
xchg
sbb
pop
push
mov
mulb
aas
adc
clc
ds
sub
out
push
ljmp
inc
stc
out
xchg
sbb
adc
cmp
xchg
adc
cmc
cltd
sti
ret
xor
aad
loopne
int
pusha
pop
sub
and
inc
inc
xor
xor
std
dec
into
xchg
xchg
lcall
pop
out
rcl
inc
or
mov
jecxz
pop
js
push
push
ss
add
lcall
push
sub
push
sbb
add
push
int3
jecxz
lock
enter
sbb
inc
scas
jmp
js
jp
push
cmp
rol
data16
push
add
aam
out
jo
cmp
xchg
mov
or
and
xor
push
push
mov
xchg
add
mov
xorb
xchg
xchg
in
cmp
lods
je
sub
adc
sub
xchg
xor
mov
pop
push
fisubs
mov
jge
repnz
jne
jns
not
repz
fdivr
shl
outsb
inc
pop
cmpb
mov
mov
xchg
cld
outsb
pop
notb
pop
shrb
pop
cmp
and
scas
mov
lea
imul
std
jo
pop
mov
bound
pop
jg
ret
add
xchg
push
mulb
insl
cmpsl
mov
xor
cli
jns
xor
icebp
and
dec
cmpl
inc
push
mov
sub
arpl
jmp
aam
mov
and
ficompl
out
add
jmp
push
mov
sbb
sbb
int3
mov
inc
add
stos
imul
pop
xlat
out
hlt
hlt
nop
cmp
pop
sub
dec
repz
popl
jb
leave
sbb
or
mov
mov
into
loop
inc
dec
repnz
ret
int
pop
push
out
mov
enter
je
fldl
stos
out
push
sub
stos
or
stos
rclb
dec
mov
imul
mov
mov
ret
xchg
and
ss
je
divb
addl
fwait
jg
push
cli
mov
mov
sub
cmp
xor
xor
mov
pushf
insl
dec
shr
sbb
mov
movl
ret
mov
mov
lret
push
jmp
and
je
not
aam
push
sarb
cmp
sub
sub
pushf
push
jmp
push
pop
add
push
ds
dec
sub
xor
cwtl
jge
xchg
in
cmp
mov
insb
sub
in
fsts
adc
js
cmpb
ret
add
push
test
and
dec
adc
mov
insb
xchg
dec
lcall
ror
push
std
les
cwtl
pop
sub
inc
pop
movsl
lret
push
jge
lea
fcomps
out
mov
decb
lock
pusha
cmp
test
pop
daa
mov
xor
dec
pop
sub
push
cmp
mov
lret
test
jb
aam
pop
cmp
push
mov
lea
test
dec
cmpsl
adcb
xor
aam
sar
loop
xor
clc
cmp
addr16
lret
insb
shlb
and
je
test
iret
push
adc
cmpsl
dec
mov
in
test
aaa
and
sub
decl
add
loopne
mov
adc
lcall
jno
adc
pop
sbb
popa
and
cld
lret
and
test
mov
and
popf
dec
cltd
sub
int3
jae
leave
dec
dec
dec
fwait
or
call
mov
scas
imul
pop
es
mov
sub
insb
icebp
test
cs
xchg
mov
stc
imull
out
push
aaa
push
adcl
in
leave
repz
and
stc
stc
push
shlb
cld
test
pop
dec
aad
and
and
nop
imul
jmp
pop
stos
or
adc
rcr
cli
lret
ret
dec
jae
out
addr16
xchg
aas
out
leave
pop
cmp
xchg
pop
xchg
push
mov
out
jns
daa
mov
pushf
rolb
mov
or
inc
arpl
jge
int
jno
lcall
rorb
adc
add
xchg
inc
aam
push
push
addr16
pop
enter
sti
in
fwait
cmp
mov
mov
fsts
sarb
jle
mov
ds
push
imul
mov
add
iret
int3
cmpsb
pusha
jns
subl
cmpl
push
shrb
sbb
mov
lock
daa
in
outsb
sbbb
adc
mov
out
jg
mov
jmp
mov
rorl
push
sbb
pop
and
jg
inc
daa
mov
push
aad
add
and
int
sbb
fisttpll
mov
shrl
sub
lods
gs
data16
mov
mov
cs
xor
jmp
xor
sahf
aas
add
sub
mov
fdivrl
loopne
sub
dec
shlb
cmp
aas
ret
adc
xchg
adc
jecxz
sub
in
neg
pop
lock
cmp
mov
or
dec
scas
cld
lea
repz
jns
fs
mov
mov
sub
aas
xchg
sub
mov
mov
pop
int
cmp
popa
and
fildl
into
jns
out
jne
xchg
jns
fsubr
lcall
adc
movsb
adc
aaa
mov
xchg
jl
mov
mov
xor
xchg
push
pop
jp
dec
inc
or
fbld
pop
xor
jmp
lock
inc
mul
ljmp
sub
mov
loopne
pop
es
xchg
xchg
jo
popa
gs
mov
movsb
fucomi
or
mov
cwtl
rcr
sahf
jb
add
roll
mov
fsub
cmp
xor
test
pop
faddl
lods
pop
sahf
dec
cmpsl
dec
xchg
sbb
imul
sub
notl
movsl
enter
xchg
fdivp
sbb
add
mov
pop
fmuls
fucomi
jns
jo
jl
push
dec
sub
shll
dec
mov
popf
mov
dec
data16
and
mov
pop
mov
iret
sbb
daa
adc
in
pusha
and
cld
mov
clc
jmp
out
sti
adc
aas
repz
add
inc
push
or
out
push
mov
xor
mov
inc
bound
int
mov
or
fisubs
sbb
icebp
and
popf
mov
pushf
mov
pop
bound
in
or
mov
cli
fcmove
ret
adc
dec
adc
data16
daa
insb
lock
sbb
ret
adc
or
arpl
jae
sbbl
push
outsl
cmpsl
push
insb
mov
add
adc
test
jbe
cwtd
lods
adc
mov
sbb
decl
aas
inc
dec
xlat
cmp
mov
daa
sbb
test
jge
mov
mov
or
shll
cli
dec
imul
push
xchg
dec
jmp
mov
jp
dec
xor
mov
xor
icebp
mov
jecxz
or
ret
popf
sub
sbb
in
sbb
fidivrl
int
rorb
sub
lock
gs
out
jns
push
imull
adc
pop
mov
imul
jns
jle
mov
mov
mov
lods
sti
jl
negb
or
mov
xchg
sbb
cmc
sub
addb
out
fidivs
jb
scas
test
inc
mov
gs
dec
rorb
sbb
dec
pop
or
jne
scas
push
xor
iret
adc
adc
and
out
jnp
imul
add
mov
or
dec
popa
and
mov
bound
mov
aaa
imul
lea
fidivrl
add
test
pop
ss
inc
sub
pop
aas
int3
mov
add
mov
cmp
in
xor
jnp
xchg
adc
out
xor
pop
inc
xor
xchg
outsl
push
popl
or
cmp
sbb
sbb
xchg
mov
shlb
data16
pop
jbe
je
and
mov
or
mov
jecxz
cmpsl
outsl
push
sbbb
mov
or
lds
or
dec
loope
outsb
mov
jmp
subb
enter
dec
shll
leave
add
push
adc
push
mov
outsb
dec
mov
out
xor
jecxz
or
mov
outsb
xchg
testl
aam
xchg
dec
cmp
sar
cmp
out
dec
fs
and
push
xor
push
add
adc
pop
sbb
mov
jg
rolb
mov
ss
mov
shl
jnp
rolb
adc
test
repnz
mov
sbb
xchg
push
sbb
js
insl
dec
mov
testl
jecxz
push
int
inc
shrb
lock
les
mov
sub
test
loopne
add
mov
jb
movb
xchg
xchg
orl
cmp
or
ret
and
inc
cs
adc
mov
add
xor
sub
mov
pop
push
rolb
mov
jns
push
ja
or
jnp
adc
sub
sbb
std
ljmp
popa
cmpsl
aam
and
lods
lea
sub
add
in
jnp
idiv
adc
gs
push
pop
pop
xor
and
sbb
lock
ds
inc
xchg
xchg
leave
repnz
inc
imul
shlb
fistl
dec
or
xlat
addr16
out
dec
and
test
adc
in
push
sbb
lcall
mov
ljmp
add
mov
mov
rolb
hlt
mov
stc
sub
adc
sahf
pop
sub
pop
cld
ret
sbb
data16
je
rolb
lods
stc
mov
mov
fisubs
cmp
inc
push
xor
pop
push
out
add
jno
shlb
pop
lock
sahf
xchg
and
xchg
gs
lock
sbb
rcrb
bound
dec
shll
lds
das
pushf
or
aam
xchg
mov
push
jae
dec
dec
cmp
jnp
jns
adc
scas
xchg
jnp
fcomps
orb
iret
sbb
scas
inc
pop
and
call
cmp
js
jp
sub
xchg
fisttps
int3
jne
dec
fimull
pop
mov
fcoms
pusha
rcll
push
daa
pop
bound
xor
outsb
sub
cmp
les
dec
test
das
and
mov
fsts
add
mov
inc
sbb
xchg
or
xlat
cmp
jmp
mov
pop
push
mov
push
jp
popf
cmpsl
mov
loopne
fistpl
sti
outsb
pop
in
into
xor
lods
cs
sahf
mov
push
push
xor
or
pusha
push
mov
es
cmp
adcb
mov
test
sti
cmp
adcl
imul
out
push
rorb
enter
pop
sub
mov
int
pop
sahf
pusha
or
leave
cmp
les
xorb
push
add
sbb
ja
and
jl
xchg
fcoml
and
loope
adc
mov
adc
movsl
test
mov
mov
sahf
insb
pop
mov
daa
push
adc
repz
in
fildll
inc
push
adc
adc
pop
pop
inc
popa
sbb
leave
push
sub
je
or
push
dec
cmp
xchg
lcall
push
or
loopne
andb
mov
xchg
insl
inc
sbb
movsb
js
jge
fists
scas
mov
hlt
out
lret
cwtl
aas
inc
mov
or
jno
outsb
mov
push
adc
xchg
loope
addr16
adc
xor
jg
add
clc
out
outsl
hlt
dec
dec
test
mov
dec
jb
aam
movsl
jns
mov
mov
arpl
fwait
call
hlt
dec
hlt
cmpsb
sub
inc
push
pop
xchg
mull
push
lock
mov
dec
dec
fstpl
fadds
lods
lret
lods
int
dec
add
mov
js
xchg
ret
mov
into
push
xor
and
pop
push
push
daa
fisttps
addr16
sub
sbb
mov
stc
mov
into
xchg
add
jo
dec
mov
mov
in
emms
loopne
loopne
jbe
push
or
cwtl
push
jle
push
mov
setno
data16
lock
mov
mov
xchg
sub
in
dec
pop
cmp
inc
aas
jb
dec
adc
into
sbb
mov
pop
inc
xor
push
daa
and
call
je
fildll
aam
jle
mov
push
ret
insb
inc
mov
sahf
je
or
insb
xor
ss
sbb
or
aaa
add
ljmp
inc
iret
jle
aam
adc
adc
cld
loop
mov
ja
xchg
push
icebp
dec
xchg
cmp
xor
icebp
xchg
repnz
jne
xor
mov
mov
mov
imul
inc
cmp
xor
inc
es
add
into
or
mov
popa
je
shll
movsl
cmp
mov
sbb
adc
pop
inc
std
test
ja
mov
xchg
fincstp
scas
imul
push
mov
dec
inc
mov
push
popa
cmp
push
push
mov
xor
popf
adc
add
adcb
or
mov
xlat
and
cmp
inc
or
sarb
loopne
or
mov
aas
lcall
imul
xchg
mov
and
inc
add
pop
cmpsb
and
repz
adc
das
pop
out
jae
das
pop
bound
push
mov
test
fistpl
mov
sbb
stos
mov
movsl
std
mov
leave
ret
mov
pop
mov
sub
std
insl
pop
shl
and
inc
mov
jp
lods
pop
cmp
popa
enter
adc
add
sbb
add
lds
adc
adc
dec
cltd
xor
or
dec
gs
pop
and
out
sub
and
and
out
jne
xchg
xchg
fimuls
jns
xchg
and
adc
dec
mov
mov
lret
adcb
or
movsl
dec
mov
adc
scas
sahf
es
push
or
and
mov
call
dec
dec
inc
jb
jge
mov
mov
mov
mov
cwtl
sub
into
sub
push
loopne
dec
lock
adc
outsb
sbb
adc
loopne
sbb
fs
or
sub
push
ss
std
int3
out
push
rcll
movsl
fbstp
addr16
gs
or
jecxz
sub
daa
aaa
xchg
and
scas
pop
hlt
or
test
sub
pushf
aam
pop
xor
and
mov
and
dec
inc
std
es
les
bound
jmp
lock
lods
xor
sub
idiv
and
sbbl
jp
lods
mov
into
lret
insb
mov
int
scas
add
cmp
inc
lret
or
and
movsl
inc
ficoms
jl
int
ret
dec
testl
xchg
xchg
loopne
loopne
or
test
xor
fsubp
insb
andb
dec
add
ja
cmp
gs
mull
ja
loope
aam
xor
cltd
jo
or
adc
sbb
mov
xor
int3
fimuls
insl
lret
int
mov
cmp
xor
into
shrl
jp
cmovnp
dec
aas
rcll
addb
xchg
fcompl
js
fldt
and
add
clc
inc
push
int
leave
mov
repz
push
mov
mov
sub
mov
in
repz
icebp
cmp
adc
std
mov
mov
aam
sub
jl
in
stos
lcall
test
dec
sbb
inc
and
fcomps
shrb
ljmp
ja
or
loop
ss
bound
sub
pop
cmp
mov
out
lds
les
dec
mov
scas
pop
xchg
pop
outsl
pop
adc
mov
out
add
idiv
nop
add
stos
sub
das
push
xor
lcall
cwtl
out
jnp
mov
inc
dec
out
mulb
xor
cmp
xchg
aad
inc
dec
test
or
data16
sbb
mov
arpl
sahf
cmpb
mov
and
ljmp
mov
adc
bound
pushf
mov
fstpt
sbb
je
xchg
mov
imul
shr
movsl
adc
sti
fwait
push
inc
add
pop
xor
out
imul
jne
mov
mov
cmp
rolb
aam
cltd
jo
push
pop
cmc
mov
shll
movnti
inc
sub
mov
xchg
icebp
cmpsl
and
sbbl
lahf
mov
les
adc
and
pop
dec
ret
adc
lods
dec
mov
cmp
mov
in
mov
xchg
pop
in
or
jle
int3
cli
pop
arpl
push
inc
or
bound
lods
xchg
ja
add
nop
adc
pop
ret
push
sahf
sbb
jg
sbb
and
dec
and
fimull
rcrb
pushf
jbe
mov
jl
sub
in
in
jmp
sbb
mov
sbb
clc
inc
xchg
push
mov
xor
cmc
gs
icebp
mov
xchg
fmul
add
rcr
or
push
pop
mov
jnp
adc
fdivrp
cmc
in
mov
lds
sbb
pop
sti
dec
or
pop
es
lcall
xchg
cmp
addr16
or
jg
fnstcw
pop
push
xchg
daa
mov
pop
imul
lea
lea
adc
sub
not
pop
call
es
stos
jecxz
incb
cmp
xchg
cli
ds
xchg
insl
cwtl
cmpsl
in
cmp
ds
and
sbb
push
xorl
stos
jns
push
hlt
xchg
xchg
dec
imul
movsl
sbb
jns
outsb
pop
movsl
mov
rcl
fsubrl
sub
pop
scas
std
lret
mov
loop
mov
imul
mov
mov
ja
in
fldt
adc
sub
sbb
xchg
add
rcrb
aad
cmp
add
ss
push
pop
cmpl
cmp
pusha
mov
and
ret
ja
add
sub
es
sbb
out
daa
call
lods
lea
arpl
mov
pop
cmp
xor
gs
repnz
mov
lds
cmpsl
sbb
std
movsl
lea
aas
lock
xchg
lret
or
in
clc
dec
mulb
push
enter
xor
test
test
sbb
push
int
mov
mov
cltd
rorb
push
xchg
ja
xor
cli
mov
sub
push
xor
push
notb
imul
mov
addr16
or
xchg
outsb
jbe
add
mov
inc
fsubp
mov
into
pop
xor
cmp
mov
jmp
sbb
ljmp
cmp
cmp
and
or
pop
and
push
xchg
mov
sbb
pusha
rcrb
lahf
push
pop
mulb
ret
xor
sbb
loope
mov
fisttpl
push
add
adc
xchg
outsl
arpl
imul
jbe
pop
dec
cmpsl
fcoml
inc
mov
cwtl
sub
daa
ficoms
js
dec
ret
cld
jno
jp
pushf
jns
test
in
dec
fcompl
xchg
scas
pop
push
or
call
mov
lea
xchg
pop
jmp
sbb
ror
add
mov
cmp
sbb
enter
inc
sub
ss
scas
mov
mov
push
lcall
xor
inc
out
out
mov
sahf
in
imul
dec
lds
pop
xchg
mov
sub
fs
insl
pop
clc
popa
inc
jne
aad
loope
rep
push
in
sti
cmc
cmp
outsl
jae
in
out
int
cmpsb
shrb
adc
xorl
push
and
dec
pop
cmpb
xchg
pusha
cwtl
insl
inc
pop
aas
adc
repz
jae
shl
sti
dec
xor
xchg
jge
rcrb
jmp
les
fiadds
jns
push
and
in
or
pop
jbe
xchg
test
sti
outsb
out
mulb
inc
or
arpl
adc
insb
imul
and
inc
mov
insl
adc
add
pop
test
mull
out
cmp
ss
test
jp
mov
add
dec
imul
mov
jge
sub
add
ja
sub
mov
shrb
xor
scas
sbb
push
pop
in
or
mov
std
inc
and
and
dec
addr16
sub
ljmp
aad
dec
or
push
aaa
fisubrs
inc
mov
lds
sub
fcoml
mov
xor
cmpl
gs
mov
je
hlt
xchg
and
pop
mov
addr16
push
push
mov
cmpsl
jmp
mov
mov
loop
cmp
fidivrl
lcall
filds
dec
shrb
add
shr
xor
and
idivl
jg
pushf
fcoms
push
pusha
inc
jecxz
imul
imul
pop
sbb
dec
fnstenv
popa
xlat
sbb
inc
in
jecxz
mov
in
testl
add
jge
mov
xchg
dec
sub
pop
ja
rcr
fsubrl
in
sub
notb
pusha
xor
jb
cli
lahf
and
insl
out
xor
fnstsw
test
cmp
hlt
xchg
movsl
dec
out
sbb
test
stos
jecxz
stos
iret
mov
mov
xor
lds
call
in
jle
stos
push
mov
xorl
lds
insl
dec
das
xchg
mov
xchg
and
in
clc
stos
sub
sbb
mov
outsb
or
push
es
out
subl
mov
mov
lods
add
sar
fdiv
pop
mov
arpl
mov
sbb
rclb
insl
pop
inc
xchg
je
imul
adc
fmulp
sub
js
adc
mov
cltd
push
call
sti
fiadds
adc
pusha
jbe
adc
addr16
push
daa
push
add
lods
mov
mov
in
sbb
aad
movsl
inc
and
leave
lea
les
shlb
lahf
stc
add
ss
jns
cmp
jp
xor
push
mov
loopne
int3
xchg
or
pop
jl
sbb
sahf
inc
out
popa
cmp
out
dec
sbb
clc
xlat
ret
test
je
and
xorb
cmp
aad
stc
int
push
cmc
jne
movsl
xchg
add
push
jnp
xchg
aas
pop
pop
rorl
movsb
mov
sub
icebp
data16
out
mov
fidivrs
cmp
dec
out
cmp
xchg
ss
xor
test
jle
int3
adc
es
popf
cmp
and
in
pop
push
lds
xchg
leave
or
ljmp
fs
cmc
imul
cmp
push
xor
jne
jns
pop
inc
cmpsb
mov
outsl
push
stc
inc
jb
xchg
enter
into
or
push
fwait
inc
lret
mov
cmp
cmp
jg
test
adc
call
es
cmp
lods
jae
imul
roll
pop
push
or
lret
adc
cmpsl
stos
rcr
xchg
es
fcoms
inc
pop
add
adc
gs
insb
cmp
std
shlb
xor
cmp
mov
jecxz
mov
dec
sub
jecxz
aaa
and
aam
out
loope
fs
and
add
push
cmp
andl
sbb
xchg
imul
inc
stos
mov
pop
popf
lods
xchg
inc
mov
and
daa
scas
inc
push
int3
jmp
ret
add
lea
test
cs
adc
pop
or
mov
test
push
push
mov
pop
fwait
pop
lods
fldenv
push
dec
inc
insb
or
out
pop
inc
sbb
mov
sahf
sarl
movsb
jno
pop
push
imul
sub
xchg
je
fsub
jecxz
xor
add
xor
xchg
jp
imul
aad
sub
xchg
int3
cmpsl
xchg
add
ljmp
sub
dec
dec
jbe
push
std
dec
insb
push
loop
sahf
and
nop
jo
inc
fisubl
and
add
sti
outsl
idivl
out
jmp
pop
loop
pop
mov
push
fdivrp
stos
subl
dec
aad
sti
fldln2
mov
addl
lahf
pop
lret
pop
mov
fldt
dec
lods
mov
sti
pop
xchg
test
pop
or
repnz
cli
pop
xchg
loopne
or
xor
sbb
cmp
jo
enter
imul
add
lret
addr16
test
sahf
mov
into
and
jecxz
jo
xor
sub
push
mov
int3
xchg
add
enter
ret
sub
pop
add
movsb
sti
xor
loope
sbb
or
imul
and
jge
cmc
mov
dec
mov
and
rdmsr
fdivrl
push
xchg
inc
jne
pop
insl
outsl
into
push
jl
xor
push
test
shl
dec
dec
fcmovnb
ljmp
and
leave
shlb
add
rcl
jnp
push
lods
dec
cli
dec
mov
fidivl
jns
adc
mov
icebp
es
xchg
pusha
jmp
add
sub
mov
aam
movsl
xor
ja
pop
sub
rclb
sbb
js
sub
push
fstpl
scas
sub
xchg
sbb
ljmp
xor
pop
pop
test
loop
xchg
adcb
into
jle
push
xor
push
cmp
lock
aad
pop
andb
mov
or
loopne
add
jnp
cs
insl
mov
inc
sub
jb
ret
scas
sbb
and
mov
jne
insl
and
outsl
dec
adc
pop
sahf
into
jmp
cmp
fcompp
mov
pop
pop
fnsave
sbb
decl
faddl
lds
xchg
pop
mov
mov
push
subb
mov
sbbb
xor
ret
lds
or
cmp
es
dec
sbb
in
imul
mov
stos
inc
call
or
es
push
nop
jo
data16
fsubrl
addr16
enter
data16
pop
xor
jns
push
mov
mov
call
pop
sbb
cmpsl
call
out
sbb
rcrb
pop
xor
rcr
sub
movsb
xchg
adc
pop
xchg
sub
mov
cwtl
hlt
stc
cwtl
js
sub
or
test
adcb
pop
inc
inc
ficompl
pop
dec
sbb
jg
xor
sbb
add
aam
or
sub
xor
mov
mov
addr16
imul
adc
fs
xor
xor
add
mov
aam
or
mov
xchg
dec
pop
dec
fsubrs
mov
lea
or
in
xor
mov
lock
dec
rorl
cli
test
icebp
inc
mov
ret
cmp
shrb
or
clc
xor
std
adc
jae
xchg
xchg
pop
adc
adc
push
xor
sti
fistl
popf
call
and
cli
inc
pop
and
xor
les
lock
out
sbb
into
mov
test
mov
mov
loope
jmp
dec
bound
iret
mov
ret
push
lahf
cmc
jae
adc
add
xor
repnz
cmpsb
bound
mov
sahf
rorb
and
das
outsl
loopne
jb
push
dec
mov
js
cmp
mov
aas
outsb
cmc
bound
ret
insl
mov
out
ds
loopne
xor
ds
int
cs
and
cmpsl
iret
popa
lahf
leave
jnp
jg
sub
xchg
mov
jp
mov
push
negl
sbb
ds
psrld
adc
stos
pop
fstps
lods
call
jnp
push
imul
adc
sti
sbb
xor
xlat
or
ljmp
mov
dec
push
cs
push
movb
stos
xor
mov
addb
add
out
pop
mov
pop
xchg
xchg
scas
cld
push
arpl
outsb
dec
or
hlt
push
loope
sub
insl
test
xor
rclb
push
ffreep
push
popa
mov
xchg
add
pop
or
out
add
int
or
and
sbb
ljmp
dec
mov
out
lahf
cmpsb
out
jg
inc
xchg
and
dec
dec
mov
rcrl
or
and
and
addb
movsl
and
nop
sbb
mov
nop
popf
and
or
outsl
test
add
mov
rol
adc
insl
sbb
mov
cmp
sub
movsb
xchg
lea
out
repz
test
mov
jo
sub
cmp
push
test
xlat
and
hlt
mov
add
cli
movsl
iret
out
or
pusha
inc
jae
int
lods
mov
popa
jno
mov
or
push
adc
sub
roll
pushf
add
ficompl
ficoml
std
scas
cmp
sub
mov
add
mov
and
cli
aad
xchg
stos
cmp
jbe
inc
lock
sub
jb
lea
jge
push
fwait
pop
xor
sbbb
jae
daa
adc
lds
sbb
xchg
jbe
xchg
add
into
aas
in
cmp
or
mov
push
lock
icebp
mov
cmp
enter
fisubrl
add
lret
cmp
je
mov
pop
daa
addb
mov
push
cmp
sti
popa
in
pop
pop
xor
mov
test
sahf
imul
xchg
adc
orl
mov
sbb
pop
mov
sbb
cmp
add
les
repz
out
adc
lods
mov
fs
mov
out
inc
jae
cwtl
and
leave
fdivrs
and
jno
ret
rclb
dec
lods
pop
mov
dec
adc
das
mov
std
in
xor
cmc
push
iret
mov
xchg
push
add
movsl
outsl
dec
leave
push
add
xchg
pop
adc
insl
repz
ja
mov
mov
xchg
xorb
push
or
xchg
push
mov
cmp
cmpsb
push
mov
xor
stos
fwait
test
jae
mov
jge
sbb
insl
arpl
sar
stos
ret
jb
mulb
inc
mov
mov
push
das
inc
mov
mov
push
test
insl
pop
roll
repnz
jle
inc
mov
pop
adc
jmp
sub
aad
les
pop
gs
pop
push
lret
scas
and
or
add
push
push
movsb
ret
pop
loope
jns
insb
pop
fcompl
inc
cli
pop
out
outsb
xchg
inc
movsb
fstpl
pop
inc
inc
shll
imul
pop
stc
mov
rclb
ret
mov
cmp
loopne
adc
addr16
subb
gs
jae
cmpsl
push
sbb
cmp
jno
inc
sub
dec
out
and
jne
pop
int
and
cs
xor
cltd
arpl
add
cwtl
jmp
lret
sbb
pop
test
lods
orb
aas
cmp
push
stos
jmp
cmpsb
test
cltd
frstor
add
or
aam
cmpsl
popa
das
adc
lahf
or
add
lret
or
xchg
xor
outsl
ret
pop
push
and
repz
and
lea
test
lods
jmp
sbb
xor
icebp
or
jo
sbb
jle
std
ss
mov
test
shl
or
jp
sbb
dec
sub
fisubl
aas
into
ret
jp
jp
or
cli
add
sarb
ret
jecxz
out
dec
lret
pop
aaa
jle
xorl
fstl
loopne
xor
shl
push
inc
add
mov
ret
in
call
mov
jecxz
sub
int
xchg
xor
dec
pop
fdivp
mov
cwtl
mov
xor
lock
shrb
inc
pop
dec
mov
mov
fsubrl
jecxz
loop
std
mov
push
scas
es
jns
jno
push
js
scas
or
test
mov
mov
sub
inc
sbb
std
pop
pop
inc
imul
fwait
pop
mov
loope
fstpt
leave
daa
mov
push
dec
sbb
scas
scas
or
iret
jns
imulb
sub
cmp
pop
addl
jno
daa
outsl
sbb
jecxz
dec
scas
pop
xchg
stc
push
and
das
mov
add
push
push
inc
push
loop
jne
push
inc
cwtl
sub
and
push
punpckhdq
rcrl
in
jg
inc
xchg
ret
ret
mov
xor
push
mov
sti
cmp
cs
repz
push
mov
pop
sbb
nop
adc
bnd
popf
lods
and
test
enter
xchg
pop
sbb
sub
cli
cmp
mov
insl
or
adc
push
and
dec
cmp
shl
lock
xor
dec
jmp
cwtl
pop
add
lods
or
aaa
sub
jnp
and
add
cmp
jo,pn
inc
andb
xor
rcrl
in
test
sbb
xchg
jo
dec
xchg
push
pop
jmp
test
addl
ss
fwait
push
push
push
mov
push
lret
sub
xor
mov
aaa
mov
push
pop
sbb
int3
cmp
fdivl
add
jle
lods
dec
push
inc
fsubs
xchg
lds
pminsw
movsl
cmp
cmpsb
cmc
hlt
movsb
lret
cmpsl
cmp
outsb
dec
mov
ds
popf
insb
loop
shrl
scas
jmp
adc
loope
xor
push
fldenv
and
enter
cmp
scas
fstpl
cwtl
mov
jns
das
jmp
ljmp
jnp
sub
nop
les
popf
cwtl
ljmp
gs
jb
mov
dec
popf
sub
into
scas
incl
xchg
insb
lea
push
push
or
cmp
or
mov
andb
test
mov
jne
cmp
inc
cmpsl
mov
jb
jbe
ret
orb
sbb
out
lret
aad
pop
out
mov
les
sub
mov
dec
rcrl
mov
bound
stos
addl
jbe
dec
popf
push
imul
add
sbb
rorb
dec
pop
xchg
cmp
cmpsl
aam
mov
add
xor
mov
jecxz
inc
cmc
rolb
mov
jo
lds
xor
fwait
pop
xor
js
test
outsb
fildl
sub
sub
rorb
jp
xchg
mov
xchg
jge
cmp
mov
frstor
mov
pop
adc
adc
jne
inc
cmp
mov
pop
rcrb
or
jg
decl
mov
repnz
shll
bound
xchg
push
cmp
mov
das
idivl
enter
jae
jecxz
jno
pop
mov
movsl
mov
push
mov
and
jns
inc
inc
jl
push
or
sub
mov
out
xor
cli
imul
xor
mov
fildl
es
sub
ja
clc
movsl
push
push
cmp
stos
cwtl
jnp
sbb
cmp
xchg
lock
nop
adc
arpl
push
xchg
jmp
dec
mov
jmp
mov
bound
mov
imul
test
inc
fisttps
pop
xor
cmp
add
shll
mov
jmp
test
lods
push
cmpsl
jnp
enter
stos
ljmp
xchg
fs
xor
in
inc
movsb
in
push
and
pop
test
add
xchg
addr16
icebp
jp
jp
jno
js
sahf
mov
mov
and
dec
loope
jecxz
lret
andb
xor
push
pop
movsb
lock
mov
sbbb
sub
xor
aad
xlat
sub
mov
pusha
jg
mov
fldt
lcall
pop
ficomps
pop
imul
jns
in
call
cmp
lret
mov
pop
ja
imul
daa
movd
cmp
adc
aas
sub
jb
fucomp
sub
pop
scas
ds
fxtract
xor
das
lahf
inc
push
jge
cltd
lret
push
dec
hlt
cmc
dec
fstps
xlat
or
adc
in
sti
inc
add
mov
fisttpll
fisubrl
sub
idivl
pop
sub
loope
xchg
movsb
call
push
sbb
sub
mov
test
das
push
add
ds
es
inc
negb
and
ljmp
push
das
test
int3
ds
jno
add
cmp
ljmp
sbb
inc
xor
add
add
lods
add
xchg
push
sub
popa
xor
ja
lock
inc
push
mov
mov
mov
sbb
jmp
add
ds
cwtl
mov
mov
fcomps
xlat
jge
in
sub
sbb
ja
or
fcmove
sub
adc
fadds
mov
rcll
xor
repz
in
stc
sub
mov
mov
imul
testl
push
fadds
sub
sar
addr16
scas
sub
iret
fcompl
inc
cmp
ror
add
jecxz
out
xor
cmpsl
jg
in
pop
sbb
lret
adc
sub
inc
daa
xchg
lcall
xlat
cld
pop
pop
das
or
mov
fdivl
sbb
into
in
mov
and
jne
lock
int
mov
xchg
cmp
or
sbb
sub
adc
scas
dec
dec
lcall
iret
pushl
xchg
and
mov
dec
cmp
fsubs
cmp
in
mov
fidivrl
push
mov
les
push
fwait
jae
int
sbb
sbbl
subl
loopne
scas
push
int3
outsl
push
in
in
mov
xchg
push
push
loop
popf
and
sarb
into
jns
xor
enter
clc
push
prefetchw
or
nop
call
jae
mov
mov
and
cmp
adc
sbb
dec
xchg
xchg
pop
enter
clc
jnp
imulb
loop
push
ret
lods
pop
pop
ss
cmpsb
cmp
mov
out
jo
pop
add
sub
shll
into
add
je
in
cli
cmp
scas
jle
jbe
js
jecxz
xchg
loope
mov
jg
dec
es
xor
jo
jp
mov
lahf
pop
les
jnp
lcall
inc
xchg
xchg
in
icebp
xchg
add
xchg
pop
ja
out
xor
ja
jl
cmpsl
push
push
cmp
into
aad
jmp
push
add
leave
mov
cmp
jmp
test
sub
adc
xor
pop
jmp
cmp
push
arpl
fdivl
inc
or
ret
sub
pop
dec
pop
incl
xor
mov
pusha
sub
enter
push
das
fnstenv
rcl
insb
xchg
imulb
mov
into
adc
lods
push
mov
adc
loopne
add
dec
mov
xor
ret
and
in
loope
data16
into
addr16
bswap
out
add
movsl
add
pusha
nop
jb
dec
pop
pop
out
icebp
fsubrs
scas
mov
fstpt
cmp
out
push
aad
sbb
out
das
xchg
mov
xchg
mov
es
xchg
push
dec
inc
adcb
jno
fdivl
imul
and
inc
inc
scas
mov
add
cmp
repz
adc
mov
cmp
cs
push
inc
sub
inc
push
sub
dec
jo
pop
mov
cmp
jb
inc
ds
pop
adc
and
sbb
sbb
adc
out
icebp
scas
repz
out
cltd
adc
or
loope
dec
cld
dec
repnz
aaa
lret
mov
mov
in
xor
icebp
pop
and
inc
fldenv
inc
jno
jle
mov
jge
xor
pop
cs
jge
pop
repnz
cmp
scas
scas
movsl
sbb
scas
and
je
adc
cmp
icebp
cwtl
or
scas
mov
xchg
xor
iret
add
xchg
mov
add
or
movsb
xchg
and
insl
ret
jno
adc
iret
cmp
ss
pop
mov
xor
push
xchg
xchg
jmp
or
gs
movsb
dec
push
xchg
ljmp
ds
fsubrs
sbb
test
jmp
xchg
cmp
cmpsb
xor
inc
hlt
add
scas
enter
repnz
mov
jnp
push
mov
sbb
mov
fdivrl
int3
sub
enter
sti
repnz
mov
gs
stos
das
pop
sub
or
lock
das
sbb
andb
cld
mov
jp
imul
jle
xchg
jno
push
or
fmull
hlt
add
adc
inc
imul
xchg
test
testl
or
repnz
das
and
popa
mov
hlt
sbb
lret
fisubl
pop
lods
sahf
push
add
cmp
imul
xchg
test
jno
xchg
imul
lret
pop
fistl
insb
push
mov
in
gs
sbbb
xor
loop
imul
or
movsl
xchg
sbb
push
sbb
add
out
mov
jo
jno
arpl
dec
lret
jo
dec
xchg
inc
adc
mov
push
lock
add
sub
xor
sub
fisttps
rorl
xor
mov
scas
pop
mov
cmpsb
push
push
popa
dec
jb
hlt
mov
or
add
rcrb
sub
out
push
sub
ds
mov
adc
push
mov
gs
movsl
xlat
lock
sub
repnz
rorb
mov
shr
mov
ret
and
negl
dec
push
stc
dec
movsb
mov
mov
icebp
shlb
add
ds
jae
mov
dec
call
out
jno
mov
adc
mov
push
xor
mov
or
aas
adc
clc
insb
pushf
xor
js
cmp
jecxz
jb
fists
mov
leave
lds
insl
jecxz
pop
fdivrl
cwtl
out
aaa
adc
stos
sbb
dec
adc
mov
cmp
fildl
adc
shlb
ret
jb
and
loop
cli
movsl
mov
sub
dec
fs
ds
sarb
fisttpl
arpl
and
imul
add
inc
xorb
xlat
shll
fcmovnbe
lahf
push
xchg
fcmovu
sbb
pop
sub
inc
shr
or
stos
cmp
sbb
fsts
adc
mov
movsb
lahf
fildll
ror
cmpsb
fidivs
inc
or
push
cmp
pop
ljmp
inc
pop
inc
xchg
imul
and
rol
xor
orb
dec
cli
xlat
push
gs
jle
popf
push
push
add
and
or
lahf
mov
cmp
lcall
xor
mov
jns
push
mov
mov
int
test
movb
or
adc
cmpsl
leave
cld
and
test
push
fisubrl
lret
push
sbb
add
addr16
add
push
subl
jge
xor
xchg
cmp
mov
sbb
mov
out
cld
dec
lret
test
insb
notb
xorb
aad
jmp
out
pop
and
rcr
cld
and
mov
xchg
les
popl
ret
mov
cmpsl
sub
test
loopne
push
daa
test
pushl
dec
and
pop
loop
mov
jbe
sbb
jp
xor
xor
push
adc
pop
pusha
mov
xor
jg
lret
mov
and
push
and
hlt
jp
push
mov
scas
jno
xorb
roll
sbb
mov
call
mov
mov
push
fistpll
pop
cmc
sysexit
xor
subb
add
stc
testb
mov
pop
pop
sub
fs
into
sahf
in
popa
test
nop
jp
xor
xor
sub
jle
pop
pop
dec
int
rcrl
adc
xor
out
adc
mov
jo
scas
xor
repz
and
cmp
insl
jge
loopne
xor
pop
inc
fsubl
hlt
adc
push
lock
imul
mov
sbbl
mov
fmulp
xor
fistpl
inc
lahf
test
pusha
mov
bound
es
in
leave
push
aam
mov
or
jae
inc
out
and
and
jmp
pop
popf
int
cmpsl
fidivs
pop
cmp
jle
stos
in
into
roll
push
addl
dec
lock
sub
insl
das
xchg
scas
dec
mov
jno
sbb
int
imul
out
dec
roll
cmp
outsl
scas
pop
add
fdivrl
imul
cld
pop
sub
dec
pop
push
cmc
fcmovnu
les
fldenv
and
inc
xchg
or
pop
pushf
mov
lret
pop
mov
mov
imul
mov
add
ficoml
mov
ljmp
fdiv
adc
aas
fsts
pop
jbe
lahf
xchg
sbb
push
das
add
push
pop
or
mov
push
dec
add
dec
mov
aam
mov
push
and
lea
lods
mov
cmc
pop
gs
pop
xchg
ss
push
fiaddl
stc
inc
mov
out
dec
lcall
mov
lods
cli
test
jp
dec
bound
leave
mov
mov
pop
out
and
out
sbb
pop
test
or
stc
dec
push
std
jae
xchg
ss
mov
jo
cmpsl
lret
into
mov
aaa
outsl
pop
addl
test
movsl
dec
ret
xor
push
lcall
xor
aaa
mov
mov
call
ficomps
pop
orb
bsr
icebp
aaa
mov
sbb
sahf
xor
xor
push
dec
test
lret
cld
out
and
xor
ss
mov
repz
xchg
int3
ds
popa
cwtl
push
sti
nop
lret
leave
addr16
jecxz
cli
stc
jg
add
aaa
inc
lock
test
xchg
pop
jmp
cmp
cmp
cli
push
imul
adc
sub
in
imul
xchg
add
punpckhwd
inc
inc
gs
inc
mov
jge
shlb
sbb
sbb
icebp
adc
mov
ja
jge
inc
inc
cli
mov
inc
outsb
cmc
cld
pop
add
dec
in
sub
pushw
push
stc
xor
addb
mov
cmp
shrl
sub
xor
jle
lds
aas
leave
addr16
xchg
fwait
inc
pushf
lahf
xlat
cmpl
mov
addr16
subl
pop
add
jb
sbb
test
sbb
jmp
daa
enter
fimull
add
je
stc
adc
loop
das
sub
sub
adc
data16
jnp
outsl
in
push
jno
aas
pop
dec
pop
aam
xlat
shlb
neg
cmp
inc
sahf
lds
xor
push
sti
lcall
adc
sti
sbb
sarl
ret
pop
dec
or
rorl
and
test
movsl
cmp
out
rcl
into
repnz
daa
adc
mov
cwtl
and
or
in
sub
addr16
out
out
mov
push
dec
icebp
sbb
fmull
andl
insb
jl
mov
xchg
sarl
lret
cmp
jg
sti
jo
mov
in
aas
ljmp
insl
call
adc
lock
cmp
jmp
dec
cs
mov
pushf
jo
or
js
fimuls
jns
and
jecxz
lods
outsl
roll
inc
inc
aas
and
mov
xor
adc
inc
or
adc
or
lods
fisttps
insl
mov
push
cmpsl
lock
mov
loop
xorb
dec
es
jns
jmp
fsubr
arpl
cmpsl
mov
cld
push
mov
cli
xchg
movsb
jno
out
jno
dec
lods
and
pop
fsubrl
jo
dec
or
andl
leave
sub
cld
mov
cmpsb
fs
pop
daa
push
jbe
ss
gs
sub
cmp
test
jns,pn
xchg
loope
jmp
ffree
stc
out
mov
sub
jae
xchg
fstps
inc
dec
loope
pop
push
push
adc
dec
xchg
inc
mov
lods
mov
adc
testl
xchg
sub
mov
pop
int3
in
div
or
xchg
ljmp
cld
ja
cmp
shl
jge
ja
push
dec
xor
mov
std
pop
addr16
imulb
inc
pop
addb
pushf
repz
cmp
cmp
icebp
loop
and
psubw
fs
xchg
sub
in
imul
repz
enter
fsubrl
xor
stc
push
push
in
out
adc
xor
inc
in
mov
sbb
test
and
jnp
xor
insb
jns
jo
dec
dec
add
imul
stos
mov
mov
je
lcall
mov
xchg
out
cltd
insl
inc
pop
sub
jb
mov
cmc
pop
inc
imulb
cmp
jo
bswap
dec
or
cmp
ror
fdivl
or
pop
js
cmpsl
cld
xor
test
mov
or
xor
cmp
pushf
dec
adc
pmuludq
out
test
daa
sbb
pop
lcall
pop
pop
out
or
addr16
xchg
xchg
cld
addr16
mov
jnp
fstpt
or
cmpsl
dec
lcall
sti
adc
add
inc
stos
xchg
mov
cmp
ljmp
xor
push
adc
mov
pop
push
test
mov
pop
lret
sub
aad
push
pop
pop
data16
cmp
jb
aam
nop
or
sbb
inc
aas
fisttps
xor
testl
cltd
cmp
add
popa
inc
adc
inc
mov
push
and
xchg
jno
inc
mov
cld
sbb
popa
cmp
imul
stos
or
insl
add
mov
pop
xchg
mov
mov
scas
add
fmuls
aaa
cmp
data16
pop
imul
ffreep
pop
cltd
pop
xor
hlt
sbb
add
cli
test
xchg
fwait
in
out
loop
fwait
insl
cmc
test
jl
xor
in
jp
aaa
test
adc
insb
scas
or
add
lea
clc
outsb
xchg
ffree
aad
mov
ftst
mov
adc
mov
sbb
cmp
push
cs
testl
in
mov
ja
inc
in
add
mov
dec
sbb
mov
jb
adc
rclb
ret
xor
jns
dec
xchg
je
push
jo
adcl
xchg
nop
pop
fwait
out
dec
inc
xchg
cmp
into
adc
or
imul
sti
mov
outsl
mov
lock
or
mov
xchg
rorb
insb
mov
push
mov
xchg
jbe
pushf
outsb
jecxz
mov
and
shl
xor
xchg
insl
lcall
cmc
dec
ss
fdivs
fidivl
lahf
push
lcall
jle
std
int
into
mov
pavgw
mov
call
and
inc
mov
jle
cmp
insl
ds
mov
cmp
inc
cmp
sbb
les
scas
dec
push
pop
wrmsr
dec
test
dec
pop
test
sub
jo
cmpsb
push
in
sahf
dec
jbe
lcall
dec
adc
movsb
mov
add
addr16
mov
inc
fwait
mov
push
mov
test
adc
pushl
fistps
in
sbb
push
xor
and
ljmp
push
jg
ja
fisubs
push
lock
pop
hlt
loopne
inc
in
fstl
adc
popa
sbb
xor
psrad
pop
in
add
gs
jb
jae
shlb
dec
pop
out
gs
lea
lock
in
xor
cmp
jne
push
pop
mov
shlb
test
push
and
ss
and
fmuls
insl
ret
inc
mov
fnstcw
pop
or
rclb
ljmp
insl
clc
daa
scas
test
lea
rcl
mov
push
inc
add
ficomps
insb
dec
stos
adc
mov
je
push
mov
fs
data16
pop
push
xor
cmp
mov
mov
andb
cmp
loope
mov
jb
jp
inc
sbb
or
in
fucomi
mov
inc
pop
test
jbe
pop
rolb
bound
in
ds
test
aas
fbstp
pop
das
dec
fnsave
push
mov
or
mov
dec
hlt
sbb
pop
push
lock
fnsave
lcall
add
arpl
sub
mov
xchg
lds
leave
jbe,pt
fs
sub
les
mov
lcall
mov
cmp
and
push
ja
loop
dec
repnz
jns
add
lods
iret
xchg
in
inc
xchg
aad
inc
mov
fidivrs
sahf
mov
ja
inc
lea
cmp
das
inc
adc
sahf
inc
or
out
adc
in
mov
mov
push
mov
dec
cmovae
outsl
mov
cmc
iret
mov
in
sbb
icebp
into
or
adcb
pop
dec
rclb
xlat
lods
popa
xchg
mov
sub
pop
sti
test
fstp
push
lea
xchg
pop
inc
dec
mov
aaa
jmp
cwtl
sub
in
push
mov
push
dec
and
int
loope
hlt
xor
mov
fists
xor
mov
and
nop
xchg
mov
jns
adc
cmpsb
push
popf
jno
mov
ljmp
pusha
xchg
lahf
jle
mov
addr16
mov
or
cmp
cmp
aam
add
and
inc
cmpsl
in
sbb
mov
xchg
or
or
jge
xor
cld
dec
mov
mov
sbbb
cwtl
mov
mov
pop
aas
mov
xchg
cmpsl
xor
popa
inc
push
jl
sub
adc
mov
jns
push
add
jg
inc
test
sub
insb
ss
push
loopne
sub
xchg
inc
xchg
mov
push
or
stos
testl
jmp
xchg
sub
add
lds
dec
push
outsb
pop
mov
cmp
movsb
push
adc
push
mov
and
adc
enter
gs
push
mov
mov
cmp
movl
test
dec
push
imul
pop
insb
xchg
mov
push
sahf
push
lret
xchg
in
lea
lcall
jnp
rol
push
fiadds
mov
fs
inc
fdivr
or
test
test
jae
push
dec
sub
fisubrs
in
in
cmp
mov
pop
fdivrl
cld
dec
add
fldl
dec
mov
xchg
mov
cmp
and
jae
jmp
rcrl
push
push
sub
sub
add
xchg
and
push
shrl
dec
and
dec
das
push
sub
pushf
mov
stos
std
imul
pop
dec
mov
popa
rcr
fwait
or
xchg
pop
je
mov
imul
ss
push
out
dec
pop
jmp
jg,pt
dec
mov
inc
dec
sub
outsb
lret
xchg
jg
lods
out
push
aad
addr16
in
rcll
add
push
test
ja
sub
in
dec
aaa
stos
dec
xorl
pop
dec
nop
int3
out
aam
mov
ret
es
daa
push
das
mov
inc
mov
cmp
sbb
pop
add
xchg
xor
jge
in
rclb
push
add
jecxz
push
sbb
xchg
push
mov
call
push
sbb
dec
adc
dec
sub
mov
adc
jb
dec
add
xchg
xlat
mov
jae
inc
jecxz
rol
jae
stc
fisttpl
cltd
aad
scas
loop
or
sbb
aas
pusha
or
test
insb
rol
adc
xchg
imul
les
adc
sti
cmpsl
cmp
fwait
mov
insb
leave
cmc
mov
adc
jae
xchg
sbb
push
xor
ret
mov
and
loop
cltd
mov
pop
dec
lret
loop
cmp
lods
add
xlat
inc
inc
pop
in
fstpt
ret
pop
inc
mov
mov
es
xchg
mov
movsl
dec
enter
into
jl
add
lds
push
mov
sub
or
xor
inc
fisttps
mov
jl
mov
ret
add
mov
out
insb
push
inc
cmp
cmpsb
cmp
adc
and
enter
mov
loopne
int3
jle
in
test
sahf
stos
jns
jp
bound
arpl
jo
les
jecxz
and
sub
xchg
inc
cmp
push
in
mov
push
inc
popl
icebp
or
testb
pop
push
inc
jae
mov
dec
cmp
popf
push
and
pusha
mov
pop
and
xchg
test
test
fs
repz
stos
pop
xchg
mov
cmc
jbe
jnp
cmpsb
add
lock
fstp
out
xchg
fldenv
push
jo
jp
push
pop
int
sbb
add
movsl
mov
ja
inc
cmpsl
add
ficomps
aaa
cmp
stos
imul
adc
dec
insb
jns
pop
gs
mov
frstpm(287
outsb
jns
pop
out
lods
adc
push
cmpsl
cld
mov
andl
push
insb
mov
sub
lahf
stos
cmp
push
or
lret
seto
cli
adc
sbb
inc
test
dec
xchg
inc
mov
pop
sub
ret
cmp
cmp
aaa
movsb
mov
fwait
out
imul
or
mov
push
and
in
addb
pop
cmp
lea
mul
in
out
xadd
pop
shll
out
popf
inc
or
mov
pop
xor
cmp
js
dec
or
std
loopne
pop
pop
jns
xor
enter
in
cltd
testb
jl
push
jns
insb
mov
lds
jl
or
cmp
mov
xor
paddb
mov
int3
cmpsl
dec
imul
and
lock
pushf
addl
fistpl
inc
sub
in
mul
ss
sub
enter
mov
flds
mov
les
daa
pushf
fdivrp
cmpsb
push
jle
jbe
movsl
cmc
cmpsb
outsb
mov
fidivs
jp
aad
jne
adc
aad
pop
dec
lret
stos
ds
and
jnp
mov
dec
insl
push
xchg
in
dec
repz
cmp
sub
js
pop
insl
loopne
sbb
push
clc
popa
bound
push
jae
pop
shrb
push
add
xor
adc
in
push
push
es
or
cmp
cltd
scas
mov
clc
mov
fldln2
xchg
jb
sarb
outsl
jnp
cmp
xchg
push
mov
cmp
mov
stos
or
leave
pop
scas
mov
add
pusha
sub
shll
out
sbb
lods
les
pushl
or
lahf
clc
inc
push
dec
js
in
gs
adc
lret
jl
adc
cwtl
mov
enter
jae
sbb
int
xchg
and
xchg
xor
fs
mov
roll
mov
dec
xchg
inc
out
push
sbb
les
mov
repz
test
cs
imulb
push
rcr
out
cmp
jp
js
add
jle
mov
dec
xchg
sbb
fcoms
enter
das
push
cs
pop
ret
push
xor
repnz
mov
out
inc
outsb
jno
rcrl
repnz
push
push
pop
mov
and
push
addb
cmp
push
adc
js
cmp
inc
in
sub
shlb
test
cmp
add
neg
push
pop
in
icebp
cmp
inc
xor
mov
mov
add
cltd
xchg
setg
jbe
scas
xor
enter
insl
pop
pushf
call
adc
mov
inc
gs
bound
or
mov
aaa
add
and
jmp
test
imul
aad
inc
mov
mov
je
jmp
sub
xor
ret
mov
lret
int3
mov
push
xor
icebp
das
shlb
movsb
sbb
jmp
add
mov
dec
ljmp
dec
dec
sahf
xchg
leave
lret
cltd
xchg
adc
cmp
aas
pushf
into
sbb
xor
mov
fists
adc
lret
pop
xlat
loop
mov
add
push
push
pop
sub
and
mov
sbb
stos
outsb
leave
push
cmp
outsb
cmp
and
sbb
pop
lods
xchg
push
mov
pop
data16
mov
push
rolb
dec
sub
inc
xor
into
leave
je
cmp
add
lret
push
dec
add
roll
and
std
std
jmp
cmc
aas
scas
lock
mov
aad
dec
in
or
mov
or
adc
pop
adc
movsb
push
rcll
cmp
jbe
mov
mov
or
popf
lahf
xor
mov
add
out
repz
scas
das
ja
jecxz
ja
xor
inc
mov
sbb
inc
ljmp
int3
add
sub
push
add
mov
sti
cs
xchg
cmp
pusha
push
cwtl
cmpsb
jbe
jo
xor
out
mov
ja
pop
bound
pop
mov
das
xchg
jb
or
push
mov
mov
xchg
adc
mov
pop
xor
lret
lret
in
inc
insb
mov
jg
mov
popf
sbb
mov
sub
mov
fcomps
in
xor
fsubrl
dec
divb
mov
xor
mov
sti
xchg
sub
dec
xor
cmp
dec
cmp
loope
adc
sbb
dec
call
jmp
push
pop
add
addr16
std
in
pop
add
div
divl
enter
dec
fdivrs
push
jne
jecxz
dec
insb
sbbl
push
mov
pop
pop
aad
hlt
testb
les
xchg
ja
push
inc
push
mov
ss
faddl
rolb
orl
gs
subl
cmpsb
je
jle
sbb
mov
or
push
fsubs
ret
push
jo
sub
mov
out
leave
nop
push
sub
mov
jge
dec
sti
xchg
mov
out
fcmovbe
xor
add
pop
or
push
jle
push
adc
mov
xchg
fwait
pusha
mov
lret
arpl
and
sarl
mov
and
jb
mov
xchg
jno
xor
lcall
test
sub
push
mov
dec
insl
lea
loop
dec
mov
push
or
lret
or
cmp
mov
sbb
jns
cltd
lret
or
lds
adc
repz
sahf
mov
push
shll
push
daa
es
sub
mov
cmp
je
adc
mov
lock
xchg
xchg
stc
push
in
mov
cmp
lods
repz
mov
jae
mov
insl
shlw
popa
push
int3
add
and
add
fdivl
sbb
in
push
pop
setne
popa
fcoml
jmp
adc
imul
ret
add
xor
push
mov
push
sbb
outsb
loopne
ficompl
movsb
dec
jnp
pop
ret
rcrl
add
xchg
js
cltd
and
in
push
mov
test
je
rcrl
sarl
pop
or
lahf
orl
mov
jne
roll
add
pop
adc
mov
cmp
inc
jo
add
nop
dec
jbe
outsl
popf
xchg
sub
inc
ljmp
fwait
mov
aas
push
jb
mov
jecxz
xor
pop
xchg
aam
pop
adc
xor
mov
into
sub
xor
mov
push
out
lret
pop
adc
pop
cld
lahf
jns
movsl
popa
aad
and
push
mov
and
pop
lcall
or
cmp
inc
cmpsb
add
iret
pop
cmpsb
daa
test
mov
mov
pop
mov
pop
cmc
and
ljmp
xchg
sub
mov
jg
mov
cmpsl
cltd
xchg
fwait
jmp
les
xchg
bound
enter
movsb
jmp
clc
xor
int3
and
fdivrl
loop
js
pop
add
mov
in
cltd
mov
jle
movsb
mov
cld
sbb
loopne
or
or
inc
push
add
push
pusha
fbld
andl
aam
push
lods
stos
stos
mul
or
and
push
sub
testl
orl
paddw
xchg
pop
cmp
std
nop
adc
or
std
push
jae
jmp
dec
sbb
daa
divl
inc
nop
cmpb
loope
pop
nop
arpl
inc
rcr
mov
mov
daa
pop
test
push
insb
push
inc
sbb
jmp
fdivs
pop
aaa
jecxz
out
cmp
add
shll
cmpb
cmp
stos
dec
fsubs
insb
stc
jmp
pop
dec
sub
mov
loopne
mov
pop
push
notb
jo
mov
xchg
sub
jmp
and
loopne
arpl
icebp
mov
cld
std
and
imul
ja
ja
aam
mov
in
jl
mov
sub
mov
sarb
scas
out
aas
outsb
pop
xor
add
loopne
push
push
addr16
dec
lock
push
push
push
pop
push
xor
adc
aad
xchg
in
xor
xchg
inc
div
xchg
xor
pusha
pop
push
inc
rcl
cmpsl
call
jno
sete
lock
rol
aam
lret
popf
mov
ja
fcoms
push
les
mov
leave
popf
sbb
insl
sbb
sub
shlb
fs
xor
dec
add
and
xchg
xchg
xor
add
stc
xchg
mov
sbb
mov
rcll
out
inc
into
mov
pop
fsubrs
xlat
iret
jno
and
add
sbb
mov
lahf
ja
cld
or
xor
and
lea
jg
cwtl
push
xchg
pop
xchg
scas
xlat
pop
mov
gs
stos
push
jmp
pop
testb
pop
push
add
aad
outsb
and
cmp
movsb
dec
add
mov
int
mov
ljmp
lcall
lock
xchg
int3
dec
cmp
and
test
pop
jbe
stc
dec
fisubrl
cltd
ret
sub
sahf
dec
dec
ss
or
sarb
daa
jp
fcoml
sbb
fidivs
and
or
ret
cmc
imul
in
call
imul
out
xor
leave
mov
jle
cmpsb
int
out
xor
ret
mov
test
add
test
repnz
adc
out
lods
mov
ds
jb
inc
sub
sub
scas
dec
out
inc
xchg
jge
cmp
fwait
scas
call
inc
insb
in
xor
fucomi
test
out
sub
loop
mov
xor
aam
and
or
mov
js
xchg
inc
add
cmpsb
int3
inc
rcrl
mov
icebp
mov
xor
js
stos
fnstcw
dec
clc
pusha
xchg
xchg
sbb
add
adc
jmp
scas
ljmp
int
popa
jno
test
jecxz
cmp
lret
jg
shr
pushf
outsb
inc
or
dec
fs
negb
adc
outsl
aaa
iret
ljmp
mov
mov
adc
pushf
or
and
int3
push
data16
pusha
lahf
mov
mov
jge
rorb
xchg
mov
inc
sar
out
or
xchg
js
sub
fsubl
mov
in
inc
sub
outsl
shlb
cwtl
in
pop
inc
sarl
out
mov
loop
sbb
mov
mov
pop
imulb
xchg
fbld
pop
loope
dec
ds
cmpl
pop
notb
jmp
clc
lods
xor
cltd
leave
daa
push
jae
mov
dec
sbb
sbb
rorl
dec
or
cwtl
rcl
hlt
popa
adc
dec
cmp
push
inc
pushf
sbb
dec
fwait
mov
bound
popf
ds
cmp
cmpl
lret
push
sbb
xor
xorl
sbb
adc
and
mov
testl
fildll
inc
dec
xchg
imul
fcom
push
xor
pop
jno
push
lahf
mov
scas
repnz
hlt
inc
or
xchg
rorl
mov
jecxz
stos
outsb
mov
xchg
dec
xor
jno
rcll
lea
cwtl
ret
cltd
lcall
lods
xchg
mov
mov
sub
cmc
pop
dec
stos
add
mov
mov
lea
jno
xor
dec
ret
cmpsb
cld
mov
sbb
sub
addr16
jns
mov
xchg
pop
and
add
mov
scas
int3
scas
and
js
sub
jl
add
imul
jbe
sbb
jl
inc
outsb
adc
icebp
add
pusha
lcall
aaa
leave
add
andl
lds
inc
or
mov
das
daa
imul
fistpll
hlt
add
fcmovbe
loop
hlt
cmp
imul
sub
aas
outsb
add
jnp
and
push
movl
stos
or
loopne
push
arpl
pop
adc
arpl
xchg
push
jge
popf
push
jbe
adc
movsl
aam
das
adc
cmp
cmp
aaa
jmp
ja
push
mov
dec
ds
adc
clc
hlt
daa
popa
into
jmp
es
and
jecxz
inc
outsl
arpl
xchg
xchg
mov
mov
sbb
xor
jl
push
fmuls
ds
out
je
sub
xchg
test
mov
sbb
jecxz
arpl
sub
dec
cs
pop
mov
push
jmp
call
xor
sbb
inc
xor
or
push
mov
fs
jge
mov
cmp
lret
inc
dec
add
ja
in
leave
ficoml
lds
dec
sub
jae
adc
test
test
xchg
cmc
sub
movsb
mov
adcb
xlat
ljmp
xchg
out
cs
outsb
jmp
jp
out
mov
sbb
xor
dec
xor
test
je
push
mov
push
and
cmp
rcr
icebp
out
sbb
daa
cmpsb
loop
scas
stos
test
mov
cmpsl
mov
lret
lahf
subl
adc
pop
lahf
imul
icebp
aas
mov
or
fwait
int3
outsl
call
push
xchg
lret
jg
jl
lahf
jge
int
scas
mov
or
cmp
sbb
add
dec
adc
or
andb
subb
movsb
in
pop
imul
lcall
and
movsl
pop
push
jge
repnz
cld
jl
fstl
cmp
jnp
add
xchg
inc
cmpsb
outsl
inc
mov
out
adc
sub
pop
mov
xchg
in
pushf
out
xchg
fadds
test
rcll
fsubl
aam
add
inc
stos
lds
xchg
pushf
fisttpl
data16
lds
repnz
sub
xchg
push
ja
inc
shll
repnz
cwtl
add
pop
mov
popf
rorl
adc
pop
icebp
and
jbe
push
sbb
cltd
mov
sbb
gs
sbb
cmc
pop
je
clc
in
xchg
or
lods
idiv
cmc
je
dec
or
sbb
daa
mov
adc
pop
or
jns
fsubs
dec
mov
subb
icebp
mov
sbb
popa
outsl
xchg
add
out
lock
jbe
test
shrb
fmuls
je
or
push
add
clc
aam
cmp
sub
loope
jns
icebp
sub
mov
dec
fidivrs
inc
pop
or
jb
insb
cmp
mov
movsl
push
fs
dec
push
xchg
xor
test
xor
sbb
adc
dec
cmp
xchg
pop
pop
adc
or
adc
xchg
cmp
xchg
mov
gs
jno
inc
test
sbb
pop
jle
into
lret
in
adc
xor
int
xchg
lods
orl
mov
and
rcr
mov
xchg
adc
push
and
std
das
pop
aam
push
popa
out
add
idivb
push
jne
movb
hlt
mov
mov
fistl
and
mov
pusha
add
cli
aas
push
mov
pop
sub
sbb
pop
roll
add
fisubs
ljmp
mov
xchg
mov
movsl
fstpt
addr16
xchg
cli
xor
mov
mov
and
cvttps2pi
fstps
lret
dec
cmpsl
mov
or
movsl
push
stos
les
inc
mov
mov
shlb
in
and
out
es
dec
mov
rol
xchg
dec
sti
cmp
lods
push
lea
adc
lret
icebp
dec
mov
fs
in
hlt
fstps
jle
push
xor
sbb
xchg
int
je
or
add
jo
xlat
into
dec
mov
shlb
leave
inc
xor
sbb
push
push
arpl
and
xchg
sbb
mov
lods
xor
sub
push
imul
ljmp
xorl
movsb
cltd
repnz
and
loope
shrl
lret
loopne
je
mov
call
lods
les
fisubrl
sbbb
inc
inc
fidivl
or
aad
mov
mov
fs
daa
insb
bound
addr16
pop
add
insb
cmp
xchg
mov
aaa
pop
sbb
lds
mov
ret
rcrb
mov
lea
cli
mov
stos
daa
hlt
outsl
adc
pop
rorb
stos
movsb
jo
data16
ret
fidivs
loope
ret
iret
fs
xchg
xchg
clc
dec
mov
in
pushf
sbb
repz
rcll
das
sbb
xchg
add
test
in
dec
mov
push
adc
lods
push
call
ret
addr16
mov
xchg
mov
sarb
xor
js
pop
cmp
pmulhw
push
cs
int3
and
scas
test
jnp
sbb
in
jp
mov
jb
imul
mov
stos
fs
sub
mov
aaa
sub
jae
adc
mov
inc
in
add
int
push
add
adc
in
and
test
test
pop
test
fcmovnb
dec
imul
pop
or
push
jae
add
jmp
in
cmp
xor
push
and
add
out
into
into
add
inc
stos
std
popa
dec
and
pop
iret
push
inc
mov
adc
aas
push
int
mov
sbb
xorb
xchg
jne
fcoml
fildl
scas
adcb
sub
sub
xor
inc
test
mov
dec
cld
pop
leave
imul
pop
filds
sbb
jmp
iret
das
in
or
mov
xor
adc
sbb
pusha
popf
mov
push
or
push
sub
in
dec
fistpll
xchg
adc
rcr
nop
xor
sbb
sar
mov
dec
cld
data16
jle
popf
test
je
xlat
or
fiaddl
pop
pop
jmp
pop
sbb
jl
pop
and
xchg
in
jnp
lea
addl
movsb
fwait
add
mov
ja
stos
cmp
add
int3
icebp
mov
rolb
dec
std
js
nop
jl
out
popf
lahf
mov
addr16
std
test
pop
push
out
insb
lods
xor
pop
cs
cli
test
jge
fmuls
xor
cmp
pop
imul
push
or
outsl
lock
and
mov
imul
std
enter
dec
repnz
xor
imul
fldenv
mov
push
pavgb
gs
loopne
xchg
inc
negb
int3
or
jg
movsb
scas
shlb
inc
in
xchg
push
pop
push
cmp
roll
mov
imul
lret
sub
dec
insl
jmp
in
jo
shufps
jb
add
xchg
popa
xchg
jae
lods
je
cmp
cmp
shll
rcl
xor
mov
xchg
and
jge
cmc
int3
repnz
jae
push
push
mov
pushf
jo
adc
mov
and
push
xor
mov
push
add
or
pop
xchg
outsb
push
and
in
hlt
mov
xchg
std
push
jb
or
jne
push
stos
sub
pop
stos
es
shlb
arpl
test
addr16
insl
test
insl
mov
push
sahf
add
mov
inc
loope
mov
inc
enter
pop
push
icebp
sbb
jne
jle
xor
mov
fcmovnb
xor
push
push
mov
inc
sub
mov
loop
jp
fcom
loope
push
adc
fcompl
jge
in
push
scas
jae
cmp
int
sahf
pop
push
and
mov
test
in
leave
movsl
pop
dec
lret
xchg
push
insb
jns
mov
in
pop
cmpb
ret
test
icebp
jge
iret
push
fwait
shrl
and
pop
idivb
jp
les
notl
mov
cld
mov
jmp
shrb
std
movsl
jge
adc
mov
add
aaa
or
daa
cs
hlt
jp
fwait
sub
setns
jno
xor
mov
incb
pop
lods
mov
push
jno
andb
shrb
int
cmc
mov
xor
ret
pop
pop
inc
push
or
pop
add
jle
xor
pushl
adc
fcompl
jbe
and
push
dec
lret
leave
mov
and
mov
dec
cmp
sbb
dec
test
cltd
pop
sti
push
lock
mov
add
lea
test
loopne
push
add
jb
das
rcl
jge
decl
loop
js
add
push
gs
popa
xchg
scas
xchg
and
leave
mov
mov
inc
enter
xor
cmp
mov
imul
jmp
pop
icebp
xchg
jbe
sub
int3
iret
sub
and
pusha
sbb
pop
dec
lret
pop
sbb
xchg
push
lret
lds
insl
lret
cmp
xlat
hlt
sbb
pop
gs
pusha
cmp
clc
cmpsb
jle
sbb
jne
ljmp
push
dec
ret
mov
sahf
lret
pop
mov
adc
cld
pusha
push
dec
jno
dec
mov
movsl
aad
xor
mov
jae
test
ret
pop
movsl
in
jne
leave
push
and
push
jecxz
ds
jne
pop
add
stc
jecxz
and
call
retw
mov
add
push
xlat
enter
adc
sub
nop
jp
and
cld
movb
jl
dec
repz
dec
mov
out
fldenv
lock
divl
repnz
dec
lahf
aaa
jp
pop
xchg
pusha
mov
loope
icebp
inc
stos
stos
movsl
cmpsl
mov
mov
xchg
lcall
cmp
cli
sbb
xlat
xor
and
mov
loopne
mov
shll
mov
jl
cmp
pop
adc
jmp
jge
adc
fcmovne
push
mov
dec
adc
lds
inc
pusha
shlb
dec
pop
pop
cmp
jo
sub
in
xor
pop
xor
xchg
xor
inc
push
insb
sub
add
mov
sbb
mov
ds
pop
rorl
pop
or
dec
cmp
xor
dec
pop
int3
and
cltd
test
movsl
pop
mov
dec
enter
push
jp
pusha
mov
jo
mov
push
icebp
inc
in
mov
or
popl
push
push
add
cmp
push
cmc
xchg
rcll
push
lcall
cmpsb
add
inc
call
testb
sub
inc
cmp
outsl
inc
pop
xor
push
mov
cmp
jo
add
or
lods
sbb
outsb
and
cwtl
enter
jb
sub
mov
mov
push
mov
sar
lahf
mov
daa
mov
imul
xor
rcl
mov
xor
movsb
inc
mov
enter
mov
in
cmp
bound
stos
xchg
aas
and
dec
jmp
sbb
scas
or
sbb
cmp
inc
aad
scas
das
pop
addr16
aaa
data16
and
pushf
hlt
cmp
add
dec
inc
addr16
std
pop
push
or
adc
xchg
and
sti
or
mov
xchg
sbb
or
aad
pushf
adc
xchg
lods
push
mov
sahf
fisubl
dec
les
scas
das
stos
or
mov
mov
scas
dec
enter
mov
sub
mov
mov
lret
push
pop
jl
lret
inc
cmp
or
or
addr16
pop
sbb
xor
stc
sub
movsb
mov
dec
test
pop
insb
and
mov
xchg
pop
scas
pushf
push
jnp
cmp
mov
cmc
or
jecxz
out
mov
lcall
add
mov
mov
insl
fadds
out
fnsave
lea
and
fsubrl
inc
pop
lret
fwait
xchg
arpl
fistpl
lcall
test
or
dec
popf
jns
jp
scas
sbb
jnp
fldl
push
inc
push
and
loopne
jl
scas
cmpsl
test
lret
pop
dec
in
fsub
adc
xchg
mov
mov
cmpsl
dec
out
push
insl
dec
xchg
sarl
into
jmp
mov
pop
out
loopne
or
test
jae
mov
test
pop
push
sbbl
add
mov
stos
lock
add
sub
sub
pop
dec
fs
add
cmp
fildll
xchg
xor
fiadds
jge
mov
inc
mov
sub
or
fcomps
sub
das
shrb
push
pop
enter
loop
mov
sbb
push
sahf
mov
sub
bswap
dec
insl
into
loopne
sti
or
cmp
add
adc
mov
sti
and
stc
sub
outsl
js
adc
jl
jmp
xchg
stos
xchg
adcl
into
xchg
mov
push
push
xor
in
mov
xchg
mov
fsubrs
fbld
pop
ss
mov
jmp
es
or
sahf
xchg
scas
adc
inc
loop
inc
fstl
pop
dec
faddp
and
cltd
or
repz
frstors
int
pop
lcall
inc
xor
or
pop
push
xchg
dec
dec
jp
inc
in
cmp
mov
sub
and
sub
js
test
scas
or
jb
outsl
mov
jb
roll
das
jo
ss
mov
jecxz
sahf
sbb
clc
cmpsb
mov
fdiv
pop
fnsave
fwait
jmp
orl
push
cmp
mov
sahf
jg
lret
fsubl
push
jge
push
sub
dec
leave
jl
test
adc
outsl
inc
ret
mov
adc
sub
xchg
fdivl
dec
mov
int3
xlat
lock
fidivrs
xchg
icebp
insl
mov
mov
jae
shl
inc
push
data16
popa
and
dec
rcrl
in
out
test
adc
dec
stos
cmpsb
jmp
insb
inc
ja
in
push
pop
int
fsubrl
cmp
mov
test
mov
and
movsl
add
ficompl
data16
add
mov
push
adc
sub
retw
movsb
push
pop
mov
lods
mov
fisubrs
jb
insl
ljmp
add
mov
xchg
xchg
stos
dec
les
push
inc
movsb
inc
loopne
lahf
jno
shlb
xchg
fcomi
pcmpgtb
mov
sub
inc
xchg
pop
icebp
call
data16
lahf
in
gs
sub
iret
out
movsb
cltd
mov
or
inc
or
aad
cmovnp
cltd
push
or
loop
cltd
aas
cmp
and
movsl
in
pop
clc
pop
xor
rclb
js
arpl
inc
loop
adc
clc
adc
test
mov
cmp
testb
xchg
scas
bound
push
cwtl
mov
dec
ja
or
sub
inc
dec
mov
inc
pop
stos
aaa
lahf
push
jp
or
fninit
mov
xchg
and
add
cmp
lcall
jecxz
sub
pop
jns
jg
dec
cmp
pop
add
cli
popa
into
add
mov
adc
mov
leave
and
cmp
inc
pop
lret
push
test
mov
mov
shrl
cs
sub
inc
rcr
mov
mov
lahf
push
dec
cmp
mov
outsl
outsl
pop
pop
jno
and
mov
inc
pop
sbb
dec
adc
push
hlt
sbb
loop
push
inc
add
out
and
imul
pushf
les
mov
loopne
pop
inc
shl
dec
fmul
std
daa
scas
sbb
sub
cmp
sbb
sti
jmp
cwtl
mov
inc
ljmp
in
enter
inc
mov
mov
xchg
jge
inc
out
mov
fwait
xchg
jbe
push
addl
into
das
jg
push
les
int3
lds
adc
hlt
push
and
cwtl
cwtl
dec
adc
xor
repz
push
pop
push
jmp
dec
insl
bswap
dec
gs
sahf
sti
pop
cmp
mov
and
sub
in
push
loopne
sahf
xor
lods
push
mov
imul
out
cmc
idiv
enter
xchg
jg
add
jns
lock
jns
dec
dec
aas
aas
ss
push
cmpsb
fcomps
jns
xor
jne
call
jle
jmp
inc
arpl
shrl
or
das
cmp
lcall
notb
jns
cmpsl
nop
sbb
add
sbb
xlat
cmp
cltd
in
repnz
pop
inc
xchg
jle
lds
sub
int3
mov
push
mov
stc
insb
dec
nop
rol
aas
loope
enter
les
mov
mov
pusha
loope
push
daa
xor
jne
out
and
push
hlt
or
adc
int3
repz
and
jo
arpl
mov
popa
or
jle
add
inc
cs
sarl
or
jnp
ljmp
out
cmp
cwtl
add
lock
xorl
call
mov
mov
and
ret
in
sahf
rcrb
iret
xchg
stc
mov
xchg
push
stc
cmpsb
mov
rclb
dec
fsubrl
nop
sbb
flds
pop
add
push
sbb
mov
adc
inc
mov
test
test
sbb
push
loop
xchg
mov
sahf
and
out
rorl
idivl
inc
sbb
rorb
push
and
pushf
jp
out
push
pusha
mov
movsl
xchg
inc
loopne
scas
loop
xor
icebp
mov
add
out
lret
push
aaa
xor
sub
iret
mov
xchg
data16
pop
arpl
in
ja
sti
sarl
subl
mov
nop
sahf
push
adc
ret
inc
pop
ljmp
les
ds
test
adc
push
jb
add
nop
pop
in
mov
inc
jl
jecxz
fs
xor
ja
dec
ror
and
push
pop
clc
addr16
rcl
jne
mov
jne
sti
cmpl
adc
and
jmp
inc
popf
lret
outsb
and
jg
add
lret
mov
push
mov
movsb
push
es
lar
das
movsl
push
mov
ror
and
in
loope
adc
jle
insl
dec
xor
mov
adc
inc
mov
test
sub
lea
daa
shrb
cmp
mov
mov
popl
mov
dec
js
sbb
mov
rorb
sti
stos
sbb
add
jle
aad
fcompl
repz
cmp
shl
in
int
stos
cld
sub
es
aas
inc
mov
add
mov
mov
or
jno
test
je
pop
jne
shll
push
imul
inc
call
fs
mov
in
adc
add
mov
xchg
cmp
js
popf
adc
push
loopne
and
jmp
and
push
test
pop
fisttps
add
adcl
jo
add
in
fisubrl
mov
orb
arpl
and
roll
ds
loopne
test
jl
shlb
lahf
cmp
jae
movsb
loope
pop
pop
mov
push
adc
popf
mov
or
nop
shll
adc
pop
dec
sbb
in
cmp
cmpsl
and
and
stos
mov
push
add
fistpll
cmp
adc
mov
push
adcl
repnz
outsl
adc
jmp
pop
mov
ds
ljmp
cmp
lea
mov
lods
mov
ret
jno
lods
movsl
jno
add
mov
lret
xchg
mov
xlat
fldl
dec
mov
inc
mov
mov
insl
test
mov
ljmp
jo
inc
add
add
hlt
in
xchg
push
xchg
movsb
rcl
inc
inc
lods
xchg
les
sbb
lcall
jae
xchg
xchg
pusha
lret
sbb
pusha
mov
xchg
adc
jge
enter
nop
cmp
aas
sti
gs
insl
in
xchg
jg
or
test
pop
adc
fidivs
mov
pusha
daa
fs
arpl
pop
xchg
mov
les
test
insl
jl
vsubss
mov
outsl
das
loope
popf
test
add
in
ss
jb
mov
add
cwtl
das
push
incb
xchg
hlt
outsl
or
outsb
adc
cmp
add
stos
push
add
std
repnz
outsb
mov
enter
sub
out
or
add
xchg
xchg
repz
fadd
call
cli
pop
or
cmc
js
xchg
sbb
in
sti
dec
dec
test
loope
pop
dec
push
cmp
filds
cmp
jns
ret
imul
ret
scas
and
pusha
mov
and
add
xchg
mov
adc
sub
cmp
rcrb
xor
enter
or
popa
fistl
mov
add
xor
les
insl
insl
cmpsb
cmp
stos
lahf
adc
dec
lea
push
fs
jl
cmp
call
dec
cmp
ficompl
fwait
push
xchg
jp
or
out
add
mov
cli
mov
int3
jp
roll
adcl
fwait
mov
dec
xor
subl
sahf
sti
and
jo
fsts
cmp
push
push
jg
mov
dec
fwait
scas
aad
andl
jnp
iret
je
adc
pop
fdivrl
sub
fbld
mov
enter
inc
imul
or
adc
js
pop
jle
or
pop
ret
push
or
imul
xchg
int3
mov
test
pop
sub
mov
icebp
mov
xchg
and
ss
pusha
jp
push
test
lods
adc
std
and
insb
adcl
fisubs
xchg
dec
push
pop
push
push
pop
dec
popf
xchg
add
mov
loop
int
iret
xchg
push
xor
push
cmp
loopne
arpl
adc
sbb
jecxz
in
pop
movsl
pop
sbb
inc
cwtl
es
pop
and
push
mov
lea
outsb
jecxz
arpl
dec
sub
adcl
mov
pusha
jb
sbb
jl
mov
sub
out
sbb
js
cs
addb
div
jne
stc
outsb
fldl
popf
ficomps
and
insl
or
and
loope
mov
adc
push
sbb
and
mov
mov
sub
ja
push
push
push
in
ret
inc
add
dec
xchg
sbb
in
inc
aaa
popa
dec
xchg
add
imul
popa
push
aad
cmp
ja
mov
or
adcl
mov
jp
inc
cmp
mov
inc
leave
adc
daa
in
add
insb
pop
addb
add
push
jp
stos
cmp
mov
ds
pop
es
inc
mov
or
scas
dec
fxch
cli
loopne
or
add
mov
ljmp
ja
ja
daa
dec
cmpsb
add
fldcw
shlb
inc
xchg
adc
mov
push
dec
inc
repz
in
iret
lret
addr16
push
pop
punpckldq
nop
mov
or
test
xabort
pop
mov
fdivrs
xchg
fldcw
mov
push
xor
adc
add
jg
pop
pop
es
sub
mov
movsb
hlt
jbe
gs
adc
gs
add
es
pop
push
out
out
mov
movsl
aam
leave
xchg
sti
lret
adc
adcl
jg
scas
int
stc
cmpsb
and
or
pop
je
popa
movsb
mov
iret
mov
dec
push
sub
scas
mov
mov
push
mov
fistl
gs
scas
and
fcomp
outsb
xor
mov
test
int3
rcrl
add
es
jne
pop
imulb
inc
dec
adc
stc
dec
add
pushf
out
enter
stc
pop
js
and
test
push
scas
fcmovne
in
jne
mov
loope
fstl
xchg
call
pop
lahf
fwait
mov
sbb
adc
cmpsl
mov
and
xlat
nop
aam
sub
sbb
adc
mov
sub
stos
adc
movd
adc
adc
mov
xor
push
pop
pushf
dec
xchg
int3
sub
int3
dec
dec
sub
add
filds
push
inc
ret
adc
lea
sub
pop
mov
or
push
sub
int3
sbb
out
stos
cli
jbe
or
pop
pop
outsl
cmpsb
ret
inc
popf
sbb
or
roll
dec
imul
mov
mov
addb
repz
imul
mov
call
int
mov
sahf
sbb
dec
mov
lock
lock
mov
inc
cltd
ret
xchg
jbe
xor
je
add
mov
dec
enter
and
orb
lock
adc
push
xchg
xchg
mov
push
test
insb
cmp
mov
mov
insl
dec
push
cmp
push
push
pop
mov
pop
pop
xor
jae
cwtl
loop
xchg
add
xor
lret
dec
pop
adc
std
aam
lods
push
jecxz
cltd
sbb
xor
ds
test
and
push
mov
daa
push
cmp
xor
xor
or
std
ficompl
jge
sahf
stc
insb
inc
out
jg
lahf
add
cwtl
sbb
out
ret
push
pop
inc
std
popa
imul
cmp
lret
into
adc
scas
iret
aam
add
mov
fimull
sub
pop
insl
in
sub
dec
adc
jns
rcrl
in
sub
cmp
adc
lea
pop
mov
mov
add
aas
decb
pushf
dec
inc
or
sarl
xor
fwait
jno
shll
inc
push
inc
or
rsqrtps
repz
push
test
pushf
push
ljmp
push
or
xor
push
dec
xchg
call
inc
mov
mov
push
stos
sbb
test
lea
push
das
outsl
mov
xor
mov
imul
lea
adc
adc
mov
xor
sbb
je
fisubl
cmp
div
faddl
lahf
ret
fwait
js
mov
pop
popa
nop
scas
mov
xchg
pop
sub
lods
push
jb
mov
movsl
ss
cmp
jmp
movsl
ret
mov
iret
movsb
sbb
dec
int3
cmp
ja
push
or
mov
push
ljmp
adc
cmpsl
or
cs
ror
pop
push
cmpsl
dec
jg
and
pop
xchg
pop
test
or
popf
cmp
add
and
movsl
cmp
in
bound
lcall
fidivl
add
ds
mov
cs
xor
les
cld
insl
add
dec
test
cmpsl
fnstsw
pop
outsb
mov
call
pop
lds
mov
movsb
sbb
push
xor
clc
pop
sar
arpl
iret
ja
data16
mov
xor
sub
mov
lock
sbb
xor
xor
sarb
jbe
add
mov
xchg
stos
dec
in
mov
mov
jge
push
mov
lock
subl
test
inc
push
adc
cmc
shl
xor
bound
ss
fs
sub
scas
xor
and
inc
adc
or
aad
push
push
rcrl
stc
shlb
sbb
push
push
out
fistpll
in
pushf
addl
ljmp
mov
rclb
sub
ret
imul
std
negl
arpl
fadds
xchg
xor
pop
daa
xchg
pushf
pop
cmc
pop
cmp
mov
pop
cltd
push
adc
xchg
jl
xchg
stos
pop
jae
scas
sti
sub
xor
mov
and
cmp
call
mov
sbb
imul
out
cmp
rcrl
jno
pop
mov
dec
push
adcl
or
mov
jnp
call
pop
in
mov
repnz
insl
pushf
hlt
and
xchg
dec
inc
push
loope
sub
pop
jno
or
xchg
ss
lods
sub
cmp
sub
ljmp
mov
inc
mov
fs
lahf
in
mov
out
mov
fcomps
inc
sbb
jle
rorl
mov
pop
push
mov
add
scas
sub
push
outsb
mov
jbe
outsb
push
mov
adc
xor
pushf
cmpsl
gs
out
xchg
stc
lcall
stc
ljmp
pop
jbe
aaa
xchg
xor
mov
mov
sbb
lock
jae
mov
mov
int3
adc
popf
daa
lahf
loope
jge
jnp
mov
push
loopne
pop
rcrl
cwtl
jmp
dec
cwtl
mov
js
mov
cmp
and
push
es
inc
adc
dec
fs
mov
mov
test
gs
sub
shrl
popf
mov
pop
mov
cwtl
pusha
fiadds
sbb
push
pusha
in
negl
mov
int3
mov
xchg
gs
cmpsb
push
repz
pushf
lods
cmp
adc
push
pop
call
movsl
in
test
in
sub
add
sub
leave
push
loope
push
xchg
sbbl
inc
stos
pop
hlt
pop
mov
sub
sbbl
pop
dec
sub
jbe
or
jbe
lods
sti
call
icebp
dec
mov
stc
jmp
xor
cs
pop
in
stos
lods
gs
mov
bound
test
adc
jle
xchg
mov
xor
push
pusha
mov
sub
adc
mov
cs
das
xchg
in
sahf
loope
pop
into
sbb
rep
xor
xchg
ljmp
imul
pop
mov
lahf
push
gs
push
inc
pop
or
mov
rorb
mov
dec
fsubs
cli
fcomp
test
add
out
dec
pop
mov
dec
pop
shrb
sbb
test
xlat
rcrl
cmp
pop
jl
fdecstp
dec
cmc
hlt
and
sbb
jmp
imul
iret
cmp
cmp
jmp
arpl
arpl
jns
jno
mov
xor
xlat
or
push
ljmp
adc
cmp
cmp
dec
cld
gs
jno
push
ss
int
test
xchg
pop
fldl
add
notl
call
mov
js
pop
les
fcmovu
iret
dec
cld
fs
ss
adc
aam
add
xor
orl
shrl
pop
pop
or
mov
sbb
xor
clc
xchg
add
pop
fsubl
lods
push
mov
pop
cli
sub
pop
outsl
dec
jle
pop
dec
sub
idiv
stc
xchg
jecxz
pop
mov
dec
inc
or
fwait
push
sti
in
xchg
out
out
ss
jno
cmp
loop
xchg
outsb
push
pushf
xchg
sub
leave
xor
mov
xchg
repnz
jl
test
sbb
mov
cmp
cmp
loopne
out
mov
mov
loop
pop
and
xor
adc
adc
jg
push
xor
ficoml
xor
xchg
add
fs
push
lods
lea
cs
add
inc
imul
mov
push
faddl
add
adc
dec
add
shll
pop
cmp
lret
cmp
sub
add
mov
lods
and
gs
jecxz
or
jle
dec
inc
icebp
repnz
aam
push
mov
fiadds
add
in
xchg
aad
inc
nop
push
pop
and
rclb
movsl
adc
mov
lret
out
addb
stc
inc
in
dec
test
mov
mov
enter
movsl
aam
jb
mov
mov
cmp
lods
out
cmp
pop
xchg
xchg
hlt
inc
pop
xchg
loop
or
adc
mov
es
mov
mov
sub
jg
jge
mov
and
inc
pop
cmp
testb
sbb
cmpb
pop
mov
jmp
dec
and
repnz
scas
sub
inc
mov
out
push
in
dec
js
stc
divb
mov
lea
inc
std
adc
push
xchg
fdivrl
sti
adc
adc
test
and
pusha
cwtl
negb
test
test
cli
mov
ss
ss
rol
xchg
cltd
sbb
clc
js
jecxz
dec
fdivl
push
and
sbb
mov
shlb
mov
pushf
cmp
jb
or
test
or
push
shrl
test
add
repz
ja
pop
push
mov
and
jns
es
pop
jmp
repz
jle
loopne
andl
out
enter
loopne
hlt
ret
dec
ds
shrl
neg
mov
cmc
mov
int3
int
not
xchg
pop
icebp
shll
pop
shll
xor
es
and
jne
push
daa
mov
cmpsl
dec
sbb
xchg
or
cltd
out
sub
sahf
gs
inc
scas
sub
inc
inc
call
sbb
aam
icebp
cmp
sbb
and
or
sub
or
sti
sub
enter
jg
dec
loope
mov
add
add
fwait
mov
xor
out
scas
or
sbb
push
xor
jno
sub
sub
addl
add
test
lahf
cli
ljmp
xor
add
add
push
stc
and
fcmovnbe
or
fcomps
lcall
mov
cmp
sbbl
popf
sub
jno
pop
jecxz
fs
mov
adc
fidivrs
scas
fs
lods
dec
in
in
xor
out
ret
mov
mov
dec
adc
popa
call
mov
in
dec
stc
dec
leave
jmp
int3
inc
rcrb
pop
ret
orl
adc
xchg
jo
stc
push
std
pop
mov
sbb
sbb
inc
xchg
loopne
fnsave
xchg
add
push
mov
cmpsl
jle
dec
inc
pop
stos
rorl
les
mov
lahf
inc
fiaddl
int
jo
imul
stos
test
push
test
jnp
jmp
push
lea
inc
fidivrl
add
or
sbb
jge
and
data16
lahf
data16
sbb
movsl
into
mov
pop
jae
jnp
lods
out
clc
mov
jmp
fldt
cmp
add
or
aam
test
gs
push
cmp
mov
jge
cmp
fdivrl
leave
mov
roll
mov
pop
faddl
hlt
add
mov
add
jne
test
imul
andl
ret
mov
pop
jmp
les
negl
xor
pop
lret
jo
cmp
sbb
cmp
lahf
pop
and
adc
outsb
push
inc
pop
sarl
cwtl
push
adc
pop
inc
sbb
xchg
push
sub
out
pop
ljmp
daa
jbe
out
inc
nop
pop
pushl
jl
inc
mov
pop
xchg
jbe
lea
arpl
lea
mov
data16
mov
ja
nop
sbb
add
or
sub
sub
mov
mov
xor
and
ret
mov
test
inc
jecxz
sbb
xchg
add
cltd
or
dec
xchg
in
mov
mov
and
pop
jnp
pop
sbb
xlat
xchg
out
add
and
or
xchg
outsb
sbb
cmp
jle
mov
fnstsw
aam
dec
cs
dec
sub
xchg
in
pop
adc
xor
shlb
adcb
scas
loop
pop
aas
adc
in
sbb
push
les
dec
sbb
sahf
aaa
jge
notb
adc
jno
cmpsl
inc
mov
cld
call
xchg
jns
lret
pop
bound
and
cmpl
mov
out
mov
imul
sub
adc
jns,pn
mov
clc
aad
in
inc
lods
add
lods
in
cmp
in
sti
in
mov
dec
jg
cltd
out
aam
test
xchg
or
ds
sub
sbb
or
and
pop
es
scas
cld
lahf
cmpb
outsb
pop
mov
and
pop
jmp
jo
push
and
mov
lret
add
loop
cmp
jns
add
ds
add
mov
cmpsb
fcompl
cmpl
push
dec
test
jle
in
add
je
jb
mov
aad
into
jle
flds
mov
popa
dec
jne
je
push
mov
loope
lods
ffree
mov
add
das
das
cwtl
aam
sar
iret
pop
aas
decb
dec
xchg
dec
js
xchg
ds
outsl
mov
cmpb
es
in
test
into
dec
jmp
outsl
adc
and
mov
lahf
ret
xor
inc
int3
pop
or
lret
mov
mov
aam
xor
xor
in
push
add
xor
popa
push
xchg
sbb
cmp
xchg
sub
idivb
movsl
fyl2xp1
dec
mov
xchg
mov
loope
orl
inc
loope
cmp
repnz
mov
jp
out
push
or
xchg
jmp
pop
push
lock
test
iret
js
adc
cmc
pushf
push
sbb
xchg
inc
fwait
stc
cmpsl
imul
jne
int3
sbbl
aam
push
inc
outsb
and
push
std
xchg
xchg
xchg
cmp
dec
sbb
xchg
sub
cmp
xchg
data16
mov
ret
inc
or
cmp
dec
lods
imul
push
movsb
or
jg
stc
xor
adc
roll
xchg
data16
xor
push
pusha
push
xor
shlb
push
movsl
push
pop
jnp
fisubrl
sbb
int3
xchg
pop
dec
dec
je
xor
xor
fsubl
mov
into
jno
push
sti
aad
cmp
shll
fsubs
push
cmp
shrl
and
push
imul
cmp
cmpl
shll
add
lcall
adc
mov
fs
sub
sub
sbb
mov
lret
mov
je
cmpl
adc
ljmp
fldcw
movb
enter
hlt
cltd
inc
mov
or
mov
fs
push
ss
mov
pop
popa
fwait
sub
mov
push
add
xchg
jmp
cmpsb
and
in
xchg
xchg
xchg
and
mov
or
notl
pushf
jae
outsl
lods
pop
test
pop
rorb
add
pop
dec
mov
jl
push
rorb
cmp
mov
xor
push
xchg
dec
ljmp
adc
mov
les
sub
jl
adc
rorl
mov
mov
jnp
dec
dec
push
shr
mov
js
mov
mov
push
cltd
repz
adc
ds
and
mov
pop
in
mov
jb
push
notl
jae
stos
or
xchg
fimull
sbb
mov
xchg
int
fmul
xchg
lret
in
cmp
pop
pop
lock
test
call
add
sbb
and
sbb
es
or
inc
mov
xlat
cmp
bound
movsl
push
insb
pop
cmp
pop
pusha
adc
les
mov
cmp
inc
push
fiadds
clc
push
dec
stos
xchg
or
cmp
inc
rcrl
fs
flds
insb
jns
xor
test
pop
nop
call
leave
or
loope
sub
jmp
out
mov
jmp
ja
add
pop
cltd
in
xchg
fldt
cmp
cmp
xchg
das
inc
cmc
daa
push
nop
in
rcrb
loopne
loopne
sbb
je
xor
pop
xchg
mov
aam
sbb
lock
loope
scas
sub
adc
add
std
sub
sbb
cmovle
inc
mov
pop
or
cwtl
outsb
push
loopne
dec
ret
dec
bnd
dec
test
sbb
inc
fsubrp
lods
das
dec
mov
enter
jmp
mov
mov
stc
xor
xchg
stos
fcmovu
ret
push
lret
loope
test
pop
loope
or
aas
xor
push
add
mov
xor
pusha
sbb
leave
mov
out
repz
ficompl
dec
rcrb
and
adc
fnsave
inc
loope
stos
and
and
test
int
bnd
jle
and
scas
imul
cmp
movb
icebp
mov
inc
xlat
aas
cmp
push
icebp
in
cmpsb
dec
jl
mov
sub
das
mov
xchg
and
out
dec
sub
mov
out
lahf
xchg
lock
iret
and
sbb
movsb
or
sbb
jb
orl
lea
cmpsb
adc
inc
mov
cs
aam
sbb
sahf
xchg
cmc
sbb
shlb
es
cmp
dec
pop
mov
adc
push
jmp
out
push
pop
sarl
inc
push
testl
sbb
je
aaa
mov
dec
cwtl
pop
insl
mov
mov
cmp
adc
sub
push
fstps
out
fsubl
outsb
pop
xchg
test
sbb
rorl
addl
fs
call
sub
loope
call
in
cmpsb
xchg
mov
js
jnp
dec
dec
int
jo
inc
pop
daa
mov
in
fidivl
lea
pop
sbb
xchg
push
pop
or
mov
pop
mov
sti
outsl
sbb
cmpsl
in
lahf
sub
cld
aad
push
jne
cmp
adc
rcl
and
ror
int3
cwtl
ret
add
or
bound
lods
rorl
imull
pop
ljmp
jo
jle
xor
jge
jnp
push
les
sbb
add
cmp
filds
in
dec
add
pop
inc
push
bound
je
nop
push
sub
and
insb
cmp
insl
push
adc
negl
push
out
sarl
mov
mov
push
dec
ret
pop
dec
pop
outsl
movsl
pop
orl
cltd
add
in
fisttpll
pop
push
ret
cmp
outsl
cmc
cmp
jo
inc
leave
enter
pop
mov
sahf
ds
repz
adc
iret
mov
fiadds
push
xor
cmpsb
imul
repnz
push
bound
xor
mov
xor
aas
mov
add
push
mov
mov
inc
jge
dec
sbb
xchg
pop
or
aad
or
mov
mov
push
sub
arpl
mov
outsl
mov
and
in
icebp
lahf
lea
mov
dec
push
sub
adc
or
xchg
repnz
add
dec
movsl
dec
and
jle
stos
nop
mov
imul
mov
testl
imul
fcmove
hlt
dec
stos
jb
push
imul
mov
adc
push
lret
fists
bound
lret
jmp
xchg
roll
cmp
jl
add
loopne
adc
pop
cmovnp
mov
mov
adc
xchg
pop
jmp
inc
and
jne
shlb
loopne
pop
mov
iret
je
xorl
ljmp
out
mov
jbe
aaa
out
mov
cmpsl
pop
movsb
push
dec
into
mov
xchg
sbb
push
fs
mov
jp
faddl
mov
fidivrl
xor
mov
outsl
push
hlt
fdivrs
push
jne
lcall
popf
pop
out
mov
mov
lret
push
imul
pop
sbb
mov
mov
cmp
and
pop
push
sbb
jae
mov
or
std
addb
lea
inc
adc
cmp
mov
push
nop
addr16
inc
cmp
sbbl
xchg
fmuls
imul
cmp
xor
xor
fsubrl
sub
xlat
cmpsb
icebp
xchg
clc
dec
inc
jle
testb
cmpsb
fistl
and
cmpsl
pop
add
jne
movsb
mov
pushf
fcoms
sbb
pop
push
sbbl
fbld
fs
aas
mov
sub
pop
pop
mov
or
jecxz
mov
or
jecxz
ficoml
popf
clc
mov
into
xchg
mov
sub
enter
pusha
jecxz
add
loopne
sub
icebp
sub
cmp
popf
cmp
cmp
xchg
adc
in
ljmp
rcrb
pop
cmpb
push
push
adc
stos
sarb
or
mov
mov
mov
mulb
in
popf
jecxz
rsqrtps
scas
fdivl
popf
cmp
iret
mov
push
addl
jl
pop
daa
sti
xor
stos
repz
jnp
orb
dec
or
add
or
imull
jg
sub
stos
xchg
push
push
and
insb
and
push
hlt
lock
jmp
repz
pop
or
in
inc
stos
pop
push
xchg
test
sub
cli
mov
mov
aas
mov
aaa
sbb
cmp
push
int3
cmp
push
notb
jge
cmp
jge
mov
stos
into
daa
imul
int
stos
lcall
xchg
pop
ret
fidivrs
adc
xchg
fsubl
mov
ja
insl
xchg
jmp
or
cmpsl
pop
pop
dec
mov
xchg
repz
ret
inc
lahf
call
xlat
dec
pop
loopne
lods
sbb
cmp
cmpsl
or
sbb
jb
cwtl
stos
lds
pusha
adc
outsb
dec
movsl
adc
inc
dec
sub
and
push
cmp
data16
adc
outsl
dec
insl
aad
jns,pn
sbb
push
push
sub
sbb
cmp
in
push
enter
fimull
xchg
lods
push
xchg
leave
sbbb
loope
testl
bound
hlt
and
mov
dec
lock
mov
cmpb
adc
cmpsb
inc
stos
lcall
leave
xor
in
loopne
pop
pop
fs
dec
or
dec
xchg
push
cmc
dec
pop
lret
je
or
xor
adc
or
gs
sub
jecxz
rorl
inc
xchg
adc
subb
std
add
xchg
loop
mov
adc
fcom
ja
pop
aad
cmp
xchg
or
out
jg
js
je
push
or
das
sbb
stos
cmp
add
nop
inc
push
leave
data16
int
test
push
pop
dec
fs
stos
pop
dec
pop
cwtl
into
mov
sub
sbb
pusha
ljmp
push
and
fiaddl
inc
movsl
cld
mov
out
clc
and
shrb
cs
std
in
push
mov
adc
cmpsl
cltd
add
movsl
jne
in
shrb
mov
mov
insl
inc
int3
cmp
add
enter
shll
popf
jnp
leave
sti
repz
aad
scas
adc
cmpsl
mov
aad
pop
xor
push
mov
push
in
mov
xor
into
and
pusha
js
push
leave
hlt
push
jecxz
adc
mov
das
sbb
jo
cli
adc
dec
loopne
jae
inc
xchg
pop
incl
push
sub
mov
sub
aam
dec
mov
imul
or
xor
lods
mov
xor
insl
test
mov
inc
insb
cmp
pop
pop
mov
mov
mov
cmp
aas
jmp
test
repnz
xor
cmp
mov
in
bound
sub
ret
xor
pop
mov
adc
add
add
mov
or
cmp
pop
mov
incl
call
sbb
push
and
mov
test
inc
nop
jp
xlat
inc
mov
jecxz
inc
dec
movsb
jl
insl
lods
ds
test
or
fldenv
jmp
mov
pushf
addb
cmpsb
shrb
jnp
or
jbe
mov
mov
pop
sti
testb
add
mul
test
or
repnz
lods
push
xchg
sti
shl
inc
clc
push
rcll
nop
jecxz
lret
pushf
xor
jmp
cld
and
cmc
shr
or
fwait
cmp
mov
sbb
and
ljmp
or
stos
dec
call
imul
xchg
push
iret
xor
enter
inc
cld
addr16
shlb
dec
dec
adc
xor
rclb
push
cli
sub
bound
cwtl
mov
test
push
adc
inc
push
sti
outsl
lock
jae
lea
adc
cld
loope
in
sbb
fwait
subb
sti
xchg
xor
out
cmp
imul
mov
sahf
int
sub
sti
push
add
or
dec
or
xchg
inc
int
out
outsl
cmp
lret
insb
mov
movzwl
jo
fildl
add
mov
mov
xchg
xor
stos
xchg
fs
inc
jmp
xchg
jecxz
mov
mov
in
jnp
mov
push
push
dec
push
inc
inc
fdivs
jmp
es
fildll
push
in
cmc
scas
das
in
in
jecxz
xor
mov
add
xlat
es
in
ljmp
in
mov
daa
inc
add
dec
mov
mov
negb
mov
in
leave
pop
lret
jno
lock
jb
test
pop
lea
xor
or
fldenv
lret
or
xchg
xor
push
rcll
std
xchg
inc
push
jno
adc
sub
outsl
out
in
inc
fwait
and
jmp
pop
and
add
shll
mov
and
jecxz
mov
pop
xchg
push
xor
ret
sbb
jmp
jae
imul
popf
sbb
inc
mov
les
jne
outsl
in
mov
daa
cmc
testb
in
divl
shlb
ror
insb
stc
ret
testl
mov
mov
rolb
pop
aam
xchg
xchg
jg
sbb
mov
call
pop
std
push
push
inc
loope
sub
mov
sub
rep
out
fsubrs
sub
outsl
outsb
cmpl
scas
jb
add
adc
jmp
out
int
xor
cmpsb
xor
mov
push
mov
icebp
ficoms
dec
test
test
cli
inc
ljmp
sbb
es
jb
ret
inc
mov
mov
mov
clc
pop
sub
xchg
test
mov
sub
cmpl
mov
mov
ljmp
xor
bound
sbbb
inc
mov
mov
les
outsb
mov
xabort
add
lea
jb
es
leave
and
dec
lock
sub
jno
sbb
cmc
xchg
daa
aas
fwait
sbb
mov
ja
fs
ss
lret
pushf
pop
addr16
xchg
out
test
push
or
mov
jge
lods
push
ds
sbb
adc
gs
mov
popf
ds
mov
sbb
les
xchg
mov
loop
dec
sbb
push
icebp
in
shll
popf
nop
mov
or
cld
sbb
mulb
cmp
xlat
add
test
push
movsb
rolb
sub
nop
mov
cmc
pop
push
aam
mov
fisubrs
bound
sbb
cmp
mov
and
xchg
mov
jnp
mov
and
jmp
mov
addb
xor
jl
jle
add
into
imul
cmpsb
jnp
push
sbbb
sbb
pop
inc
test
jl
sub
sub
cld
stos
lock
das
aad
sti
hlt
dec
sub
mov
rolb
inc
mov
and
add
jmp
cmp
rorl
cwtl
mov
sbb
lret
push
push
mov
add
mov
and
sbb
or
push
adc
js
nop
xchg
mov
xor
inc
js
dec
jbe
popa
mov
pop
or
mov
pushf
imul
loopne
imul
xchg
add
in
std
sub
repnz
fmul
inc
inc
add
jb
xor
test
lret
xchg
lods
or
lret
std
out
adc
mov
or
aad
sub
xchg
popf
sbb
cmp
jge
push
imul
frstor
inc
xor
add
mov
lahf
int3
mov
lods
mov
test
mov
ret
push
test
in
push
push
push
lds
icebp
imulb
out
cmp
xchg
push
sahf
dec
xor
xchg
dec
rorl
mov
add
push
test
xchg
jb
mov
fwait
decl
xchg
out
in
pop
mov
out
sbb
fs
pusha
mov
int
push
mov
mov
clc
xchg
adc
je
mov
sub
movsl
dec
div
pusha
pop
inc
cs
loopne
xchg
fisubl
cli
xor
dec
mov
pop
in
mov
std
decb
andb
dec
xlat
fildl
jg
iret
dec
xchg
fstps
jne
adc
or
jp
adc
push
data16
push
pop
cmpl
cmp
push
mov
inc
mov
faddp
sub
ror
iret
aas
jns
add
out
xchg
insl
push
cmp
adc
ja
mov
sbb
inc
and
adc
push
jl
add
lods
lods
sbb
and
xchg
add
test
fdiv
xchg
cwtl
lds
nop
jae
dec
jae
inc
push
pop
stos
xchg
push
mov
push
test
jno
add
push
sbb
jge
xchg
int
or
cli
mov
and
dec
call
mov
sbb
lock
cmpsl
push
mov
inc
cmp
mov
sub
push
jbe
mov
push
or
mov
ljmp
jno
pop
mov
jo
std
dec
negl
mov
movsb
sbb
pop
into
jbe
call
outsb
ds
mov
push
jno
adc
xor
sub
sub
adc
sub
movsl
or
subb
or
push
xchg
mov
repnz
scas
xor
pop
imul
int
imul
in
dec
and
ss
mov
int3
mov
test
mov
popa
mov
mov
loope
mov
inc
dec
mov
repnz
mov
xor
out
xchg
push
and
lret
inc
bound
cmp
xor
mov
pop
cmpsb
pushf
lret
mov
push
nop
xor
xor
sub
aam
jp
ss
in
adc
in
jne
insb
call
push
pop
loop
outsl
rcrb
dec
push
mov
out
out
or
pop
repz
lds
xchg
insb
mov
in
sahf
enter
ret
incl
push
xor
adcb
mov
jl
add
ficompl
push
scas
in
arpl
clc
xor
inc
xor
cli
adc
push
fldcw
orb
push
or
rcl
insb
pop
mov
or
int
enter
hlt
dec
xchg
dec
bnd
pop
lahf
jne
xchg
outsl
scas
jns
xchg
fldl
repz
data16
jo
jmp
cmpsl
jb
ds
xor
add
mov
sbb
out
mov
test
fisubs
jp
test
jge
inc
test
shlb
lods
loop
into
sbb
push
sbb
mov
push
lock
inc
dec
xchg
arpl
adc
pop
xchg
sbb
pcmpgtb
dec
fwait
jns
jge
in
in
dec
fldenv
or
jno
fwait
sbb
out
movsb
jg
inc
sbb
jecxz
sub
pop
icebp
enter
stos
pushf
jmp
mov
mov
mov
movsb
rcl
sti
xor
jl
leave
popa
out
pusha
jecxz
and
fidivrl
repnz
add
pop
add
sub
xor
sahf
cmp
dec
push
hlt
leave
ss
or
fcomp
sbb
enter
mov
xchg
imul
or
mov
jmp
xor
push
je
push
push
mov
mov
sbb
xor
out
lods
push
iret
jb
add
sub
jmp
lock
mov
cmp
fs
and
mulb
push
xor
mov
push
sbb
cmp
mov
filds
rclb
mov
xchg
cmp
dec
sbb
orb
arpl
lcall
sub
lret
in
inc
addr16
add
mov
adc
jecxz
std
inc
stos
ficomps
pop
aam
fcoms
fwait
sbb
fwait
js
xor
cmp
sbb
xor
int3
jmp
mov
add
xchg
leave
push
mov
gs
outsb
and
aad
sub
jbe
dec
pop
bound
add
and
dec
cmp
mov
add
aas
lret
mov
rcr
dec
xor
mov
in
sbb
dec
sub
rcrl
sbb
or
sbbl
inc
inc
inc
pop
out
lret
cli
xor
int
adc
mov
push
xchg
popl
jae
orl
cwtl
adcb
pop
mov
fldenv
add
imul
in
repnz
or
pop
lods
aad
mov
lcall
insb
pushf
dec
or
mov
sti
mov
enter
test
scas
leave
mov
mov
mov
sahf
fistl
adc
xorl
faddp
in
loop
icebp
das
jge
sub
sbb
in
int3
xchg
lock
nop
push
jb
xor
mov
push
das
xor
faddl
add
jmp
pusha
pop
jns
cmp
filds
xchg
loopne
adc
ja
sbb
cmp
push
xchg
int
cs
sbbb
add
cmpsb
je
repnz
aam
sub
ja
daa
fidivl
decb
leave
clc
inc
cs
lret
mov
popa
and
leave
es
ss
cmp
pop
xchg
push
inc
lock
mov
lret
pop
xchg
popa
or
out
mov
ficompl
rclb
lahf
lret
xor
or
addr16
inc
lahf
icebp
adc
inc
fs
mov
push
sbb
adc
out
andb
push
popa
mov
cmc
lods
lea
int
adc
push
mov
xor
xchg
fisttpl
xor
or
lea
dec
bswap
rcll
clc
scas
aas
movsl
mov
or
mov
sbb
stos
xor
sti
sub
lret
dec
mov
leave
mov
rcrb
dec
mov
ret
mov
fwait
iret
xchg
sub
divb
sub
xchg
add
out
call
jne
xchg
out
popf
test
xor
in
jecxz
jbe
sub
sub
mov
rolb
imul
and
sub
faddl
loope
ss
ljmp
inc
push
movsl
xchg
cli
into
pop
insl
nop
popa
aam
movl
addb
icebp
nop
inc
sbb
cmp
push
or
test
int3
fmuls
daa
xchg
fmulp
mov
aas
jae
sub
outsb
inc
push
pop
call
notl
dec
sub
add
adc
loope
iret
jle
jp
mov
in
push
sub
out
pusha
scas
jg,pn
cmp
add
idivl
push
icebp
xor
xchg
gs
scas
leave
cmp
mov
call
xor
and
ljmp
pusha
and
inc
mov
aas
in
pop
enter
push
mov
into
xor
pop
negl
xor
xchg
dec
add
sub
add
or
pop
add
iret
pop
pop
pop
cmc
cmp
clc
sub
push
mov
cld
inc
adc
movsl
sub
push
sbb
or
push
divl
or
aas
ds
cmp
mov
xchg
cmp
movsl
iret
aaa
and
or
pop
push
subb
repz
fs
cmpsb
adc
popa
dec
sub
lahf
xchg
xchg
xchg
sub
mov
idivl
mov
ret
push
adc
sub
add
repnz
mov
inc
aas
call
fstps
sbb
xchg
mov
adc
into
clc
lea
jl
xchg
fstps
jnp
popf
or
and
xchg
inc
inc
outsl
ljmp
int3
or
or
cmp
jge
pop
std
or
out
fmuls
fistl
jl
or
inc
adc
lret
pusha
pushf
pop
imul
add
mov
cmp
mov
xor
and
outsl
mov
xchg
loop
jo
push
add
int
loopne
push
add
cmpb
fwait
xchg
pop
push
sub
pop
pop
arpl
sub
clc
das
mov
stos
dec
inc
pop
ficomps
pusha
pop
inc
xchg
inc
pop
ja
inc
pop
data16
test
stos
inc
mov
mov
jge
dec
or
adc
push
inc
push
mov
jmp
cmp
cli
dec
add
shlb
rolb
mov
loop
dec
cmp
and
push
adc
and
push
sahf
mov
test
sti
sbb
outsl
jg
xor
cs
cs
dec
and
pop
cs
and
ret
jnp
hlt
pop
fsubp
fstpl
sub
pop
lods
jle
bound
je
add
das
push
ja
cmc
orl
lods
mov
adc
mov
or
mov
xchg
test
push
sbbb
add
enter
insl
in
add
ret
add
insb
push
or
jnp
test
andb
je
jecxz
mov
lret
xchg
leave
dec
rorb
mov
mov
stc
out
in
jo
cmp
sub
mov
je
repz
data16
data16
jo
push
pop
adcl
mov
mov
test
int
aad
jne
inc
cmpsl
cld
stos
add
lock
in
jp
sbb
mov
arpl
daa
jl
sub
or
dec
outsl
and
loope
addr16
aaa
popa
aad
gs
roll
pop
into
test
aaa
lret
inc
sbb
rcrb
je
cmpb
sbb
xchg
push
push
mov
inc
xor
mov
mov
jp
sbb
or
add
iret
dec
or
jno
xchg
jne
fwait
mov
xor
jnp
jle
or
enter
movsb
cwtl
cmc
hlt
mov
push
push
xchg
and
push
out
pop
adc
test
sbb
dec
xchg
mov
or
les
cmpsl
inc
xchg
cmp
jp
cmpl
mov
out
sbb
mov
sbb
loop
sub
cmp
test
dec
or
cwtl
jns
pushf
sub
add
dec
andb
punpckldq
int3
test
notb
push
aam
xorb
gs
pop
cld
pop
mov
mov
push
test
incb
pop
stos
and
in
je
fdivs
pop
mov
stc
sub
adcb
or
ds
imul
sbb
xlat
inc
fisttps
push
or
push
sti
mov
rol
clc
inc
cmpsb
das
icebp
pop
inc
aam
sub
mov
mov
in
push
lret
outsl
or
fstpt
rcl
rclw
cmp
negl
pop
mov
out
fnstsw
pop
sub
mov
mov
mov
push
aas
out
cmp
and
std
ror
inc
and
mov
lahf
sbb
scas
push
movb
push
mov
bound
sub
idivl
aam
movl
inc
push
movsb
addr16
mov
cltd
xchg
inc
add
pop
push
loope
push
fcoml
popa
ss
add
and
jge
pusha
dec
mov
lahf
mov
stos
add
cld
imul
mov
test
sarl
dec
pop
pop
mov
rcrb
shlb
pop
adc
sub
add
rclb
es
dec
sbb
addr16
mov
loop,pn
inc
repnz
cmp
pushf
adc
sub
mov
mov
out
out
push
fnstsw
out
inc
or
dec
pop
jne
cmp
pop
sbb
pop
jmp
enter
lds
lods
cltd
jb
insl
sub
add
lcall
loopne
je
mov
fs
sti
cmp
inc
push
mov
arpl
cld
pop
pop
dec
not
xor
xlat
aam
xor
sbb
mov
push
adc
lods
nop
aad
fdivrs
inc
rclb
xchg
mov
add
jae
inc
mov
std
loop
push
jmp
push
hlt
sbbl
stc
mov
sahf
in
add
push
mov
xchg
jmp
sub
repnz
sahf
or
hlt
lods
xchg
xor
xchg
into
mov
adc
xor
into
pop
push
movsb
adc
push
xchg
and
sub
int3
lock
js
mov
pop
aas
in
xchg
jmp
mov
std
mov
lcall
cmp
inc
jno
in
sub
adc
aaa
push
lods
icebp
outsb
jl
cmp
xlat
stos
shll
push
cld
mov
data16
fnstsw
dec
mov
dec
leave
dec
mul
mov
ja
mov
aad
jae
insl
loopne
jne
outsl
insb
cmc
or
lock
sti
inc
mov
pop
xor
scas
xor
mov
push
es
pusha
daa
aam
push
repz
jl
aas
push
test
and
sti
mov
pop
insb
mov
xorl
addr16
ret
cmp
jno
loop
sbb
adc
jbe
sbb
fnstcw
jmp
cli
xor
fbstp
xchg
roll
sub
jl
cli
dec
scas
hlt
jecxz
ficoms
xchg
jbe
int3
dec
lret
inc
test
lret
dec
adc
add
dec
cmp
inc
pop
inc
je
adc
lea
inc
fwait
jp
push
and
lret
adc
mov
cmp
pop
push
mov
add
clc
jge
cld
bound
dec
mov
stos
rorl
jg
cwtl
jl
sahf
inc
sub
inc
daa
icebp
out
aam
push
and
js
inc
xchg
dec
aam
fisttpll
testl
fcmovne
xchg
in
sbb
xor
ret
test
aas
test
sbb
adc
sbb
in
jge
lret
adc
cmp
sub
fs
std
clc
movsl
cmp
rorl
xor
mov
dec
jmp
sub
mov
mov
cmc
pop
arpl
push
mov
push
mov
sub
hlt
mov
add
scas
sti
push
addr16
pop
jp
out
push
mov
push
call
ljmp
pusha
fsubrs
mov
or
push
fsin
and
xor
xor
daa
or
addr16
mov
sahf
pop
out
xor
icebp
mov
ss
negb
outsb
fists
cmpsl
jae
mov
mov
push
fcmove
out
adc
dec
inc
xor
cli
imul
nop
add
sti
divl
sub
dec
stos
jecxz
pusha
inc
sub
icebp
mov
insl
jbe
sub
fisttpl
ljmp
sahf
cmpps
pop
shlb
dec
mov
jl
popa
mov
cmc
sti
outsl
rcl
jecxz
sbb
push
testl
jae
stos
out
shrl
pop
cmpsb
mull
data16
xchg
xchg
rclb
aas
loopne
sbb
into
mov
pop
fmulp
in
xor
add
es
scas
mov
or
loope
test
mov
adc
xor
push
aam
out
lea
daa
lds
iret
mov
lods
test
repnz
subb
loop
inc
mov
mov
cli
mov
sub
in
mov
fwait
ljmp
scas
push
imul
mov
adc
or
in
pop
lds
sbb
xchg
xchg
dec
mov
rorb
call
and
sar
stc
cmp
enter
pop
sub
cmp
data16
fldt
and
add
es
push
dec
xor
cmc
push
clc
enter
pop
xchg
jno
push
mov
shl
cmp
xchg
lzcnt
aad
xor
adc
and
mov
lahf
movsb
jg
aad
add
out
xchg
repnz
jl
sub
sub
les
js
xchg
dec
push
fnstsw
in
mov
mov
pop
sbb
mov
fidivs
out
cmp
int
rorb
stc
cmp
ret
sub
push
jb
or
ss
cli
cmc
xchg
aad
inc
pop
xor
jmp
adc
das
xchg
divb
std
lahf
fcoml
outsb
cmpsb
dec
fimull
gs
add
sbb
fimuls
sub
or
je
lods
scas
mov
mov
rorb
leave
sbb
sbb
push
mov
cwtl
sbb
sbb
or
xor
xchg
or
fdivrl
pop
adc
xor
cmp
push
test
push
in
dec
cli
rcll
xlat
lahf
enter
push
mov
movsl
dec
out
xor
jg
into
mov
test
or
fcmovne
ss
xchg
pop
stc
or
push
orb
jae
sub
add
adc
xchg
sbb
xlat
xor
sub
imul
movsl
jb
cmp
xchg
aam
lods
dec
fistpll
pop
push
out
imul
loopne
imul
mov
mov
mov
sub
es
pushf
ficoms
imul
jo
mov
out
push
xchg
popa
shll
pop
mov
scas
inc
xor
sti
movsb
cmc
enter
sbbl
xchg
loop
clc
cmp
or
push
hlt
push
push
push
cs
lret
dec
pop
out
and
stos
stc
mov
test
pop
mov
mov
xor
jle
pop
xor
pop
fwait
cwtl
andb
sti
test
or
mov
pop
outsb
mov
jl
fwait
jecxz
cli
movsb
clc
jg
inc
into
daa
hlt
inc
mov
outsl
inc
jns
adc
sarb
or
movsb
lea
xor
icebp
mov
pop
cmpb
jle
sub
loope
or
pop
rcrl
int3
push
mov
inc
fildl
cmc
jb
cmc
stc
inc
mov
ss
xchg
xchg
shll
mov
xchg
and
out
and
cmp
aaa
push
ja
sbb
cmp
pop
sub
aas
outsl
cmpsb
mov
pop
cmpsb
pop
inc
lret
arpl
jno
xchg
ds
mov
sub
pop
lock
push
movsl
mov
subb
dec
or
roll
pop
sahf
cli
mov
pop
data16
pusha
das
int3
mov
sbb
ljmp
shl
jp
push
test
leave
gs
push
jns
ljmp
std
adc
divl
pop
pop
cmp
mov
data16
in
push
sbb
inc
cmpb
push
jbe
out
loopne
mov
push
xchg
data16
imul
pop
or
adc
scas
dec
out
add
xor
pop
fdecstp
and
test
push
mov
adc
adc
in
popf
out
jnp
ljmp
aad
outsb
test
cmp
outsb
stos
int
pop
pop
fcomp
cmp
bound
xor
std
mov
inc
cli
pop
aas
push
ret
jge
rolb
mov
push
adc
push
mov
add
or
incb
daa
push
jl
lret
in
es
loopne
pop
xchg
inc
pop
fcmovnb
movsl
jg
clc
cmpsb
ljmp
dec
mov
dec
xor
push
out
test
aad
mov
js
adc
inc
test
scas
lock
mov
notl
jb
std
insb
cmpl
movsb
arpl
inc
mov
inc
mov
mov
inc
sbb
test
sbb
lcall
sti
push
or
xor
ret
mov
add
out
push
stos
pop
adc
jl
sbb
sbb
add
aas
cmp
lret
jns
mov
cs
clc
daa
mov
jecxz
sarb
xchg
in
fs
or
insb
push
or
rclb
adc
inc
jle
out
int3
loop
fcompl
jnp
pop
xchg
mov
and
and
xorb
or
pop
adc
add
push
inc
or
cwtl
add
push
sbb
xor
jo
xchg
jp
add
data16
aad
pop
repz
jbe
jle
aad
mov
aad
sbb
fwait
sub
sub
jo
add
ret
xchg
pop
dec
push
scas
push
test
add
pop
mov
push
mov
cmp
inc
push
shll
dec
inc
jle
sbb
mov
bound
bound
push
xor
aam
jae
inc
mov
jle
or
ja
jge
pop
jge
xor
cld
or
std
cwtl
xlat
add
xor
and
pop
cwtl
push
imulb
fwait
cmpsl
frstor
and
lcall
test
dec
sahf
mov
mov
stos
dec
and
cmpsl
or
fs
cmp
frstpm(287
and
lods
mov
pusha
push
mov
test
push
jmp
fs
ss
push
and
data16
pop
fisubl
ret
out
fists
cmpsb
test
add
insb
stos
ret
fstp
inc
sbb
aas
jge
stc
sbb
std
xchg
lahf
cmp
inc
cmp
cmc
aam
mov
jge
dec
mov
in
sub
adc
push
xchg
sbb
cmp
sub
testl
jp
rolb
out
jp
orb
repnz
inc
fs
push
andl
ljmp
in
repnz
sub
mov
test
push
rorb
cmp
push
inc
orl
or
xlat
or
in
aam
iret
pop
jo
dec
adc
and
mov
cmpsb
xor
push
les
jecxz
mov
jg
pop
shll
mov
outsb
cmpsl
sub
add
mov
inc
lock
out
mov
shll
repz
cmp
cld
aam
cli
ret
xor
cmpsl
testb
and
cmp
lahf
add
pop
sahf
cmp
and
pop
jecxz
enter
idivb
aaa
imul
fmul
movaps
mov
xor
adc
sbb
jno
aas
sti
cmp
and
out
adc
sub
mov
cld
pop
and
imul
push
cmc
mov
adc
cmp
in
add
cmp
cli
xchg
test
or
mov
mov
xchg
std
cmpsb
mov
in
cmpsb
in
imul
sub
pusha
inc
xor
aam
cmp
inc
jnp
mov
xchg
fsubs
stos
add
mov
pop
shll
cmpsl
stos
test
jo
push
cmp
rcl
and
pop
adc
add
sti
fcompl
cmp
stos
adcl
insl
sub
adc
sub
loopne
rcr
sbb
push
cmp
mov
sarb
push
test
and
and
push
loope
push
pushf
xchg
and
and
inc
xchg
jb
mov
pop
adc
out
pop
lahf
inc
pop
inc
ds
mov
leave
mov
xchg
pop
inc
push
sub
aas
rcl
adc
loop
jge
js
fcompl
add
mov
lock
test
subl
rcl
aad
xchg
addr16
fldcw
cld
fisubl
fdivs
and
mov
jnp
adc
out
mov
stos
push
inc
push
mov
out
push
call
dec
or
push
xchg
arpl
sub
cmp
call
into
aas
adc
aad
test
shl
call
rorb
dec
icebp
add
outsl
sub
out
cmp
jl
sti
push
imul
dec
push
mov
lock
pop
and
push
mov
and
xor
mov
jg
add
pop
enter
ficoml
adc
and
scas
mov
leave
mov
divl
or
xacquire
cmc
sub
or
outsb
xor
cmpsl
int
fwait
sbb
mov
and
cmp
or
cmp
gs
popl
and
inc
xchg
adc
mov
and
xchg
mov
js
out
jge
call
and
sahf
mov
sub
js
cld
arpl
mov
or
pushf
outsb
adc
sub
movsl
test
negl
lock
stc
outsb
push
test
les
inc
cmp
pop
hlt
push
in
jp
movsb
mov
xchg
mov
mov
sti
jecxz
xor
loopne
jbe
out
or
stos
xchg
jns
lcall
xchg
andl
sub
lea
push
cmc
xchg
dec
mov
add
mov
loope
testl
addr16
sub
jg
icebp
lock
and
mov
and
xor
lcall
cmp
icebp
mov
arpl
mov
xchg
mov
test
loope
mov
pop
jge
in
jmp
aad
test
jns
jno
mov
push
int3
push
add
pop
sahf
stos
stc
xchg
lock
push
into
sbb
mov
jae
inc
xchg
movsl
pop
sarb
scas
stos
in
mov
push
leave
xchg
mov
mov
repnz
jne
fs
pop
adc
hlt
pop
mov
xchg
popf
in
and
cmpsl
push
lahf
ficompl
or
out
dec
int
xor
imulb
out
cmp
jns
orb
jecxz
outsl
out
lods
adc
lods
negl
xchg
decb
cltd
int3
dec
xlat
inc
addr16
hlt
jle
sbb
mov
pop
mov
in
pop
cmp
outsb
jnp
mov
cli
cs
and
pop
inc
inc
fdivl
mov
jne
arpl
ja
add
cli
jno
fs
mov
pop
sub
fdivl
punpcklbw
addb
pop
push
testb
push
lock
pop
divb
xchg
adc
push
sbb
add
inc
imul
dec
fcoml
testb
andb
lcall
push
aam
cwtl
adc
push
pop
push
push
hlt
dec
jbe
leave
jns
ficompl
add
xchg
rcll
rorb
addr16
inc
out
fadds
pusha
sub
mov
push
fidivs
pushf
add
push
lret
ficompl
addl
inc
stos
mov
cmpsb
mov
fsubl
aad
mov
lods
adc
int
sti
movsl
sub
sbb
xchg
add
or
ret
bound
mov
jnp
lret
test
mov
dec
popa
pusha
jp
idiv
dec
inc
xchg
add
mov
and
stc
fldlg2
mov
xor
adc
mov
push
pop
scas
pop
pop
movsl
cmc
jae
cmp
out
cmp
pop
pop
jae
xor
int
push
sbb
outsb
xchg
dec
mov
lods
cmpsl
sub
int3
lock
mov
mov
js
sbb
movsb
js
and
adc
xor
push
sub
stos
mov
or
ss
adc
mov
imul
sub
push
xchg
xchg
cmp
ret
push
sti
xchg
cmpsl
inc
add
xchg
std
insl
aad
push
inc
stos
xchg
push
hlt
pop
sbb
pushf
test
push
loop
cwtl
cltd
int3
icebp
out
adc
push
daa
cmp
fnsave
pop
repnz
xchg
cltd
stos
fsubrs
or
jecxz
rclb
sbb
add
push
and
scas
rorl
mov
add
into
add
aaa
mov
adc
clc
popf
sbb
sbb
ss
rol
test
mov
mov
addl
mov
fists
mov
xchg
cmpsl
cwtl
add
push
xchg
push
jmp
adc
testl
cmp
adcl
insl
mov
inc
bound
push
stos
xchg
mov
add
jg
ret
inc
shrb
or
and
test
cmp
add
dec
mov
cmpb
and
jbe
adc
int
addr16
ficoms
mov
pop
jne
out
pushf
add
xchg
pusha
push
ljmp
xor
mov
jl
pop
repz
lahf
xlat
leave
add
stos
mov
jl
cmp
iret
cmp
fcmovb
xchg
jp
jge
sbb
rcrb
mov
xor
mov
into
cmp
inc
jb
add
sbb
dec
xlat
les
cmovge
jbe
lahf
aad
outsl
mov
loop
add
lcall
or
rolb
xor
leave
enter
iret
jmp
dec
sbb
fidivrl
test
mov
lea
notb
push
pop
roll
cmpsl
jb
imul
cltd
xchg
xor
test
enter
dec
fisubrs
cltd
inc
loopne
je
inc
aad
loop
loope
xchg
aaa
push
mov
or
mov
add
dec
enter
adc
mov
sbb
or
or
jo
pop
and
push
push
jecxz
or
dec
xchg
imul
cmp
and
mov
pop
xor
sub
sbb
ficoms
das
add
mov
ljmp
addr16
divl
in
xor
sub
push
fbld
pop
push
and
lret
mov
cmpsb
add
adcb
mov
icebp
repz
dec
xlat
nop
push
in
pop
fs
mov
and
inc
stc
push
adc
mov
outsl
xchg
or
jg
adc
jns
lret
divb
push
lret
xor
in
ja
mov
inc
mov
mov
adc
dec
imul
pop
das
hlt
mov
sub
cmpsl
repnz
icebp
push
dec
mov
and
pushf
cltd
push
sbb
jge
mov
push
xlat
popf
dec
scas
repnz
pop
scas
mov
jo
mov
cmc
add
mov
sbb
jmp
sti
add
inc
cmp
mov
jecxz
cli
iret
push
adc
sbb
std
lods
aas
lcall
xchg
cwtl
xchg
shll
xchg
fisubrs
mov
jne
mov
and
jbe
popf
pop
adc
in
jecxz
pop
pop
cmp
xor
cmp
pop
mov
or
popf
stc
addr16
nop
xor
ja
aaa
sarb
mov
out
jne
adc
loopne
loope
jmp
mov
imul
lock
loop
sbb
es
hlt
mov
insl
enter
jb
dec
pop
inc
mov
int
xor
fucomp
dec
cmp
stc
jge
push
ljmp
add
adc
jl
subl
mov
aaa
and
mov
inc
push
fcmovu
loop
inc
loop
dec
or
mov
jae
fs
bound
xacquire
xchg
xor
rorb
test
mov
or
in
pop
stc
sbb
sub
adc
cmc
fimull
movsl
mov
xchg
cmp
outsb
call
mull
push
sti
lds
js
and
loopne
lods
test
je
cmp
push
andl
pop
data16
mov
ja
xor
js
cld
in
rorl
add
fsubrl
in
fnstenv
mov
jmp
dec
mov
jg
jp
ja
movsl
push
imul
lods
push
or
and
sub
je
jmp
xchg
add
inc
shlb
mov
pushf
out
lea
scas
jo
lcall
outsl
movsb
dec
and
xchg
add
test
scas
into
hlt
pop
pop
add
sbb
push
cmp
mov
dec
ljmp
pushl
xchg
scas
inc
cmp
push
sbb
jae
loopne
andl
aas
pop
inc
jno
ret
mov
push
mov
mov
jb
loope
les
int
jle
jno
subb
outsb
into
dec
xchg
jle
lret
aas
mov
and
clc
es
mov
pop
test
push
mulps
or
or
ret
jg
frstor
in
out
fcoms
cmc
jae
stc
push
or
fildll
test
cmpsl
addr16
stc
push
and
cmc
fidivrl
jmp
cwtl
mov
cmp
push
icebp
sbbb
cli
insl
push
outsl
lock
jge
repnz
into
jecxz
and
xchg
cmp
fimuls
adc
es
daa
and
mov
xor
add
mov
adc
cmpsl
pushf
pop
ds
lock
jno
ja
je
push
mov
or
clc
lret
cmpb
cwtl
inc
or
sar
pop
jge
mov
lret
add
xor
jge
aad
ja
loope
out
imul
adc
shrl
add
sahf
fwait
in
dec
sub
sbb
mov
js
roll
sub
fwait
dec
adc
xchg
sub
inc
mov
in
add
jg
imul
fistps
insb
dec
aad
sbb
cmp
in
sub
mov
adc
mov
mov
imul
push
adc
pop
or
sub
enter
mov
fildll
fwait
shl
mov
insl
in
fmuls
outsl
and
icebp
or
adc
loopne
enter
adc
jge
movsl
sub
fstpl
xor
xchg
mov
xor
dec
lods
dec
loope
xchg
inc
mov
dec
sbb
inc
iret
push
mov
cmpsb
jecxz
or
push
shrb
adcl
adc
xchg
pop
and
pop
jo
xchg
arpl
mov
mov
jl
push
sahf
inc
mov
in
inc
cmp
adc
pop
pop
sbb
das
test
inc
jge
iret
sahf
andb
imul
out
cmpsl
inc
xchg
insb
jb,pt
or
inc
push
mov
in
movsl
cmp
clc
push
sbb
mov
sti
rcl
mulb
shrl
xchg
push
pop
leave
adc
jae
or
cmp
sti
or
dec
lds
aad
sahf
aad
iret
xor
arpl
std
lods
popa
out
jb
xchg
lds
call
push
add
and
sbb
vpsubusb
cmp
xchg
mov
ret
sbb
icebp
test
push
jae
ret
add
xor
fwait
adc
orb
pushf
push
add
jp
gs
add
fdivr
rcrl
sti
add
cli
pushl
sar
push
loope
pop
dec
test
jb
and
lcall
xchg
cld
and
cmp
ljmp
out
in
lret
loope
aas
mov
add
cmp
clc
mov
mov
lea
jmp
cmp
lds
scas
stc
lret
mov
xor
loop
dec
sqrtps
rcr
mov
adc
lcall
push
test
clc
cwtl
cmp
add
repz
fisubrs
or
enter
dec
fisubs
jl
cld
ja
inc
mov
mov
hlt
pop
test
pop
pop
loopne
xor
and
sahf
mov
mov
cmp
negb
cmp
ds
pop
shll
cmp
cmpsl
or
es
mov
xchg
xor
push
pop
outsl
clc
into
outsb
mov
inc
movsl
sbb
sbbb
xlat
add
add
dec
dec
inc
fstp
sub
adc
dec
inc
icebp
cmp
imul
xorb
cmp
aas
inc
cmp
push
jl
push
gs
in
scas
push
int3
jl
cmc
lcall
insl
nop
aaa
andb
loop
aas
out
sbb
inc
loopne
fs
push
test
or
sti
psubsw
sbbl
sahf
push
xchg
loope
inc
notb
cmpb
xchg
pop
sbb
mov
jge
mov
andl
jp
ret
cmpsl
jne
stos
addr16
pushf
pop
xchg
xor
testb
jo
loop
push
out
nop
add
xchg
icebp
pop
rcrl
sbb
dec
out
mov
popf
cmp
adc
iret
cmp
and
loopne
loope
scas
xor
jl
js
arpl
adc
jge
cmc
cltd
jecxz
lock
insl
mov
mov
repnz
add
add
test
daa
ja
repnz
out
test
mov
mov
fwait
mov
adc
jae
mov
repnz
jg
cwtl
aam
hlt
mov
pop
ret
les
push
filds
pop
out
fists
inc
jmp
xchg
lea
std
lock
dec
les
push
adc
jge
and
push
cmpsb
push
imul
cmp
fsubs
fisttpl
sub
das
add
lods
pop
pop
dec
cmpsl
sbb
inc
aad
daa
mov
jmp
and
dec
pop
lea
dec
xchg
dec
loop
xchg
out
mov
scas
mov
ss
cmpsl
movsb
xchg
aam
popa
pop
popf
or
mov
lds
sbb
push
cmp
roll
arpl
xor
inc
inc
test
cmp
adcl
dec
mov
and
sbb
sbb
stos
inc
jbe
pop
clc
mov
push
outsb
mov
insl
jb
notb
xchg
mov
aaa
pop
mov
push
hlt
pop
xchg
mov
sti
mov
out
sub
pusha
fisttps
fs
mov
mov
shlb
hlt
jae
push
scas
lret
add
cmp
pop
hlt
int3
scas
fwait
decl
ja
dec
fildll
imul
ret
repz
dec
lea
mov
or
add
jl
pop
imul
adc
test
mov
repnz
mov
sbb
cmp
adc
test
xor
ss
fldcw
leave
cmc
xor
insl
in
fildll
mov
mov
or
mov
out
lds
lock
xor
sbb
dec
test
push
jecxz
mov
push
push
mov
push
fsubrl
jo
push
push
mov
les
nop
sbb
jo
push
pop
popf
jp
mov
push
test
jns
jne
movsb
push
mov
loope
mov
loopne
jo
push
cltd
cmp
aaa
mov
fwait
clc
mov
iret
push
mov
mov
xor
mov
mov
hlt
aad
lods
lea
enter
popf
sub
mov
orb
lret
add
movl
jl
mov
sbb
cmp
sub
xchg
scas
add
push
sub
sub
push
push
mov
xor
mov
sahf
into
mov
add
dec
popf
adc
jae
mov
adc
ret
iret
bound
enter
repnz
cmp
stos
jmp
pop
adc
jp
inc
subl
add
cmp
lahf
push
call
inc
inc
mov
test
sbb
out
in
int
xchg
adc
mov
test
cs
xor
sub
in
add
mov
rolb
dec
fisttpl
mov
iret
les
into
inc
out
jns
fistpl
cltd
insb
sub
shrb
sub
inc
push
mov
jmp
dec
jbe
ret
loopne
lock
lock
cs
roll
jno
add
push
sub
pop
xor
jecxz
add
leave
jno
lret
fcmovnb
mov
and
outsb
leave
cmpsb
lds
js
and
aad
sbb
nop
dec
nop
add
sub
adc
mov
and
push
adc
fisubl
push
aas
and
loope
scas
loope
dec
add
xchg
ror
lea
sub
stc
xchg
add
outsl
inc
outsb
ret
dec
in
xor
aad
add
mov
in
mov
rcl
idivl
outsb
mov
loopne
bound
cwtl
stos
fmull
add
arpl
pop
cmp
test
cmp
mov
jno
lret
dec
mov
sub
mov
mov
pop
xchg
aad
mov
sub
xorl
xorb
lods
fistl
push
arpl
loop
movsb
cmp
or
aad
mov
mov
jb
arpl
cmc
stc
pop
dec
shlb
pop
aad
mov
dec
xor
pop
mov
fmulp
push
inc
add
jmp
outsb
inc
stos
xor
adc
xchg
push
fnstenv
cmc
sbb
dec
out
fcmovu
mov
pop
mov
push
inc
test
or
pop
cmpsl
cs
in
addb
push
push
stc
cwtl
jnp
lret
cmp
call
int3
xchg
leave
push
lock
adc
push
xor
test
rol
mov
loopne
pop
ja
aas
add
pop
out
pop
dec
fsubrl
out
or
xchg
adc
cmpsb
dec
divb
push
aad
add
sub
mov
xchg
ror
imul
sub
pop
inc
imul
push
out
or
and
sub
daa
das
imul
dec
inc
into
and
sub
and
mov
scas
xor
mov
or
aas
mov
sarb
adc
or
gs
push
mov
and
or
scas
fstps
je
sub
fsubs
ss
xor
icebp
popa
movsb
outsb
dec
cld
je
pop
dec
pusha
mov
andb
adc
mov
xor
jl
push
inc
dec
aas
repz
and
testl
ret
cmp
mov
and
add
popf
add
push
popf
daa
inc
mov
cmp
dec
pop
mov
or
addr16
jmp
fwait
jl
addr16
ja
fs
pop
int3
nop
mov
mov
fcmovbe
imul
push
lahf
outsb
adc
mov
mov
add
mov
out
mov
orl
dec
or
nop
xchg
add
into
sbb
inc
dec
xor
in
sbb
dec
into
pop
inc
push
in
dec
pop
ss
rcl
or
mov
xor
xchg
cmpb
push
cmpsl
push
xchg
mov
mov
push
das
aam
stos
les
cltd
cmp
mov
jl
mov
pushf
inc
mov
in
jl
jle
inc
dec
lcall
adc
push
out
mov
pop
insl
bound
xor
out
sbb
outsb
mov
lock
movsb
jmp
sub
pop
push
out
ficoml
and
mov
pop
or
sbbl
and
bound
data16
data16
repz
scas
mov
inc
sbb
sbb
lcall
je
mov
sub
lock
pushf
sbb
or
push
jns
jno
or
test
jmp
mov
test
push
ret
cltd
lret
or
adcl
jge
enter
lahf
cmpsb
iret
jg
lods
fistpl
adc
inc
mov
aam
dec
jno
jbe
inc
int3
or
push
adc
pop
cmp
es
dec
xchg
int
fs
jns
dec
ljmp
iret
sbb
imul
js
ljmp
sub
cmp
in
sbb
sbb
ss
mov
in
aas
push
pushf
mov
xchg
repnz
jge
mov
mov
aas
gs
aas
mov
cmp
aam
int
or
pop
inc
xlat
shlb
cmp
cmp
sbb
cltd
leave
adc
mov
push
fists
rcrb
int
pop
loope
jp
mov
int
outsb
lock
fcmovu
stos
cs
sub
cmpsl
leave
in
mov
cmp
sub
pop
loop
movsb
inc
loope
sbb
sbb
push
into
scas
jne
in
imul
add
jl
in
mov
jnp
fcomi
mov
mov
pop
sti
data16
cld
neg
clc
lods
sbb
incb
pop
loopne
lret
int3
bound
jne
or
xchg
adc
test
push
ja
cli
inc
inc
scas
xor
stc
mov
mov
push
clc
repnz
sub
test
pop
mov
adc
push
imull
fisubrs
sbb
shlb
jge
jp
push
lret
mov
imul
cltd
sbb
jbe
or
mov
out
pusha
adc
rcll
mov
jecxz
rol
scas
je
or
cmp
xchg
lds
mov
cld
mov
sbb
test
aas
sbb
test
mov
je
out
test
movsl
cmp
fs
sahf
cmp
mov
add
ljmp
sysret
add
adc
jle
and
out
cmpsb
call
fcmovnbe
dec
cmpsl
adc
cli
test
and
push
and
sub
and
mov
in
cmp
or
push
out
shr
mov
cmp
movsl
mov
and
push
repz
or
out
mov
insb
std
imul
sbb
xor
xchg
sub
xor
insb
into
inc
sub
dec
add
add
pushf
or
cmpsb
mov
push
mov
je
test
test
out
fsts
xchg
lahf
in
jl
cwtl
pop
sub
sub
push
push
push
push
pop
dec
lea
mov
nop
test
push
jge
mov
push
shrl
jecxz
pop
inc
aas
inc
addl
js
sbb
cmc
insb
and
mov
sub
out
add
scas
or
int3
push
int
into
or
fbld
pop
loopne
or
cmp
sbb
xchg
fmuls
filds
mov
testl
stc
mov
lret
std
daa
mov
add
xor
scas
mov
scas
xlat
adcl
mov
fdivr
jnp
into
orb
pop
cltd
cmp
dec
adc
or
lock
mov
leave
dec
rclb
inc
movsb
add
sub
aam
popa
and
pop
das
cs
mov
pop
mov
mov
divb
mov
ds
push
pop
je
xchg
shlb
in
cmpsb
sub
jg
stos
or
ljmp
incb
and
xchg
idiv
pop
pop
mov
movsb
pusha
pop
cld
in
repnz
adc
jbe
mov
xchg
mov
scas
mov
out
xchg
movsb
int3
mov
ds
fs
inc
sub
fnstenv
scas
jns
xchg
aad
xor
rcl
aam
lret
stos
gs
mov
mov
mov
rcrb
icebp
fldt
pusha
dec
mov
push
and
daa
and
pop
scas
inc
lods
into
cltd
mov
mov
outsl
cld
adc
adc
sbb
push
in
ret
sub
mov
sbb
test
popf
cmpsb
shrl
xchg
add
sub
inc
or
dec
insl
idivb
cmp
fiadds
stos
rcr
jg
fcompl
test
ds
jno
mov
jecxz
mov
fiaddl
leave
mov
adc
test
inc
add
int
pop
nopl
out
adc
ds
sbb
mov
push
jl
into
ds
push
pusha
mov
js
ds
subb
jmp
pop
jno
pop
mov
push
push
mulb
dec
cmpsl
pop
add
es
sub
imul
mov
cmpsl
or
fcmovnb
lock
mov
inc
movsb
add
cmp
inc
xor
repz
push
mov
shl
adc
sbb
pop
mov
jle
or
jl
dec
call
mov
pop
sbb
inc
pop
push
xchg
sub
mov
adc
dec
push
arpl
dec
int
shll
add
cmp
mov
mov
aaa
xchg
dec
jno
and
shl
sub
xchg
mov
ja
and
ljmp
pop
mov
push
ja
ds
into
adc
repnz
mov
xchg
xchg
ds
pop
sub
dec
gs
xchg
mov
lcall
packssdw
push
sbb
and
in
mov
lret
jnp
adcb
xchg
mov
and
push
lds
lods
sarl
cmpsl
lret
sub
jae
js
call
dec
mov
mov
push
adc
sbb
jg
mov
xor
pop
inc
dec
add
mov
ljmp
lcall
shrl
dec
push
sbb
pop
cli
mov
pop
imul
lods
xlat
lods
jns
jbe
xchg
addr16
mov
daa
or
dec
iret
stos
jmp
lock
int3
out
mov
xchg
sub
outsl
inc
add
pop
add
cmpsl
ja
lock
mov
dec
cmpsl
repz
lds
es
jl
lret
cmp
add
dec
jb
inc
jl
test
pop
xchg
pop
inc
push
xchg
and
gs
sbb
pop
cmp
aam
loopne
dec
dec
push
or
xchg
mov
jns
sub
mov
inc
es
test
jecxz
xchg
cltd
out
mov
mov
shlb
je
stc
xchg
sti
aam
mov
mov
inc
push
outsb
ret
shlb
inc
lahf
cmp
xchg
std
aam
lcall
rcrb
xchg
sub
call
in
out
sti
push
lcall
aam
andb
sbb
js
cs
outsb
inc
xor
leave
clc
mov
test
mov
adc
pop
mov
mov
sahf
int3
cli
xor
pop
adc
adc
push
cs
jl
stos
inc
ret
xchg
loop
test
stos
mov
cmp
inc
xlat
push
mov
xor
and
xlat
dec
call
clc
stos
orb
mov
sbb
ja
je
sete
sub
adc
adc
shr
test
fcoms
inc
dec
sahf
jl
andb
in
xchg
add
adcb
pop
jb
outsl
popf
or
xlat
ficompl
mov
divl
dec
bound
adc
scas
cmpsb
inc
mov
bndldx
mov
les
andl
js
mov
fstps
xor
jb
push
fmuls
sbb
ljmp
out
mov
dec
jle
test
outsb
adc
add
jbe
jns
push
lret
aas
inc
jns
or
mov
jp
outsl
and
or
add
andb
mov
pop
mov
dec
sub
pop
jnp
stc
daa
sub
or
testb
mov
dec
pushf
popa
add
popf
mov
mov
mov
xchg
pusha
jge
vcmpss
jle
popf
mov
jnp
xor
es
sbb
adc
jecxz
mov
inc
xorl
imulb
xchg
bound
push
sub
or
ret
repnz
sti
sbb
insb
mov
cli
pop
js
sbb
rcrl
in
sbb
xor
or
jb
jecxz
add
cmp
cld
icebp
mov
mov
test
xor
sub
daa
push
lahf
fistl
or
pushf
test
lea
out
mov
outsl
lahf
int
frstor
push
xchg
shll
mov
fwait
lahf
cmpb
mov
mov
add
push
icebp
sub
mov
push
pop
sbb
dec
sbb
cltd
stos
rcll
fs
mov
cltd
jl
fcoml
loopne
pushf
stos
movl
xor
in
mov
push
add
jmp
cmp
xchg
rcr
bound
xchg
push
push
dec
mov
sub
pop
addb
jnp
mov
mov
adc
sub
adc
dec
iret
dec
push
arpl
rcl
pop
cmp
fcompl
inc
xchg
mov
dec
in
inc
outsl
jae
dec
sub
dec
lock
dec
es
fyl2x
push
bound
xlat
mov
jbe
mov
pop
cmp
and
into
dec
mov
int3
xchg
cmp
lds
dec
lds
mov
es
ja
dec
fstpt
in
mov
fisttpl
loop
scas
inc
mov
js
cmp
inc
push
or
push
add
mov
mov
or
jg
sbb
fisubrs
gs
notl
lahf
gs
adc
inc
mov
mov
lcall
xchg
jg
sbb
cld
jo
push
push
sub
push
mov
pop
testb
fwait
lcall
test
push
fcoml
and
jge
insb
in
adc
outsl
aas
icebp
add
pop
fcoml
mov
adc
and
clc
push
mov
jl
bound
insb
dec
sahf
mov
and
mov
scas
outsl
and
xlat
cs
jns
add
and
test
scas
inc
cmc
adc
stos
loop
push
aam
xor
jmp
shlb
sbb
pop
pop
mov
test
lock
jae
fwait
jae
pusha
pop
jle
inc
test
cwtl
mov
popf
ja
call
or
cli
enter
movsl
jb
mov
ss
mov
sbb
cmc
clc
scas
scas
jge
xor
jmp
inc
jle
mov
cmp
ds
xor
subb
xchg
sbb
pop
xchg
pop
adc
shl
out
add
push
in
icebp
ss
jnp
fs
fwait
xor
test
xor
mov
pop
aas
fsubs
adc
push
cmpsb
lcall
scas
push
xchg
lods
cs
sub
xor
rclb
sarl
lds
je
cmc
and
aam
jg
push
aaa
xor
in
sbb
call
jle
mov
daa
jno
lods
movsl
imull
adc
pop
dec
mov
dec
adc
and
in
rorl
mov
add
loopne
push
jo
out
jns
xchg
cli
add
jmp
shl
rcll
cmp
je
xchg
cmp
jle
movb
enter
dec
loopne
jne
mov
mov
push
sbb
loope
jbe
pop
je
sub
test
cmp
loopne
dec
popa
je
or
mov
adc
shll
cltd
inc
pop
aaa
add
arpl
mov
add
push
mov
lcall
cmpsl
mov
xchg
lea
fisubl
aas
xchg
lret
pop
push
mov
push
sbbl
data16
cmc
and
das
inc
push
fisubrl
pop
pop
inc
stc
xor
rcrb
not
cmp
xchg
adc
pop
cmp
push
mov
add
add
pusha
xchg
std
cmc
aam
mov
dec
lock
in
es
push
iret
fstl
xchg
js
pop
fisubrl
in
add
dec
pop
rcl
imul
leave
cmp
cmc
cmpsl
push
cmp
sahf
push
bound
pop
loop
jbe
iret
mov
enter
es
pop
adc
and
loopne
or
jmp
sub
idiv
inc
pop
sbb
das
stos
repz
scas
xchg
ljmp
mov
sbb
adc
imul
mov
jl
sahf
aam
gs
sub
pop
inc
xchg
mov
push
adc
int
cwtl
shll
stc
jecxz
sbb
sbb
aam
loop
ds
data16
jmp
xchg
jnp
in
addr16
lret
lret
movsl
cmp
sub
sub
and
int3
adc
and
pop
xor
sbb
in
jbe
stc
inc
jno
lock
push
sbb
add
dec
inc
push
test
das
fiadds
test
lods
rclb
jno
inc
jp
cmp
jge
mov
out
ret
out
jnp
xor
das
std
shlb
test
lds
movsl
xchg
mov
mov
das
test
inc
cmc
lahf
pop
add
fidivrs
mov
add
mov
pop
pushf
xlat
or
daa
stc
adcb
push
or
loop
adc
int3
test
mov
push
in
cltd
enter
add
decl
shlb
imul
xchg
mov
and
loopne
in
xor
sarb
mov
out
mov
cmpsl
push
fwait
dec
sahf
ja
ljmp
stos
movsl
xchg
outsb
out
mov
pop
cmp
or
jecxz
mov
clc
xor
dec
pop
mov
and
lock
adc
out
add
ret
pop
arpl
scas
mov
dec
lahf
gs
pop
mov
sbb
adc
xchg
cmpb
sti
cwtl
inc
add
hlt
pop
lea
aad
jnp
xor
push
mov
stos
test
call
push
push
jl
xor
cltd
jl
add
or
data16
mov
mov
rcrb
iret
pop
jns
fistpll
push
dec
idivl
pop
xchg
leave
mov
cli
movsl
xchg
inc
inc
mov
stos
and
inc
hlt
in
add
arpl
call
adcb
push
push
test
int
add
xchg
cmp
and
lret
mov
loope
mov
push
mov
adc
mov
xchg
xchg
jne
stos
clc
ret
mov
mov
cmpsl
cwtl
mov
stos
lock
jne
das
cmp
outsb
stos
pop
sahf
xchg
sbb
add
shll
cmp
mov
das
mov
push
jle
aad
aaa
jecxz
dec
aaa
ss
mov
fwait
inc
cmp
sub
adc
pop
mov
push
mov
orl
ret
sbb
mov
mov
call
fldl
dec
sub
pop
mov
mov
cltd
fadd
out
sbb
xor
cmc
mov
add
call
pop
aas
mov
xor
jno
fidivrl
push
daa
out
nop
inc
ss
sbb
in
mov
sub
cmpb
inc
inc
out
rorb
add
pusha
ret
xchg
mov
lret
lret
nop
inc
adc
jge
dec
push
jne
mov
cmpsl
data16
mov
movsb
shll
into
jecxz
lahf
mov
dec
fstpt
cli
jmp
addr16
xor
mov
mov
nop
xor
adc
imul
mov
cwtl
mov
inc
mov
mov
mov
and
sbb
ret
push
aam
in
cld
and
jmp
fcomip
and
rcrb
or
mov
xor
sub
add
mov
cmpsl
popa
icebp
rclb
cmc
add
arpl
xchg
popa
mov
xchg
sub
lret
roll
mov
add
test
mov
xor
das
mov
es
cld
fisttps
mov
outsb
inc
int3
faddl
ficompl
loope
adc
fsin
mov
hlt
mov
xor
or
subb
adc
fwait
hlt
das
inc
ljmp
xlat
daa
pop
fildll
jnp
lea
aam
adc
add
and
push
aam
lods
cmp
in
add
jmp
test
dec
adc
not
out
adc
jbe
xor
xchg
push
push
sbb
lahf
fstpl
pop
mov
inc
mov
std
cs
lods
add
stos
push
pop
bound
in
lea
inc
movl
cmp
out
movsl
or
popf
inc
aaa
cmp
mov
cmc
xor
mov
jno
imul
mov
cmp
jo
cli
test
jns
aaa
lret
mov
mov
lods
out
push
aam
cli
or
fnstsw
cmp
push
sub
mov
negl
push
lret
inc
int3
sbb
rol
pause
aaa
dec
idivb
cmp
mov
imulb
xorl
xchg
shll
aaa
fisttpll
ds
mov
push
xchg
xlat
mov
push
dec
leave
jo
shll
cmpb
insl
jmp
xor
mov
fsubl
das
mov
mov
dec
cmpsb
es
push
dec
add
inc
addr16
mov
clc
cli
imul
mov
mov
popa
xor
mov
cmp
mov
mov
cmc
mov
daa
cmpsb
xor
divl
xor
stos
sbb
aad
push
lahf
sub
xlat
out
xchg
pusha
cmp
mov
mov
std
dec
jp
sub
mov
mov
or
push
ret
xchg
push
in
mov
pushf
xchg
in
dec
adc
sub
inc
mov
jae
add
and
xor
inc
sbb
scas
adc
rorb
jbe
mov
jbe
es
cli
nop
mov
es
popa
xchg
out
mov
inc
push
popa
jb
cmp
dec
jl
pop
push
sub
cld
iret
xchg
movsl
sbb
das
test
movsl
and
mov
incl
mov
add
repz
shrl
sbb
mov
mov
cmc
sbb
or
xchg
xor
add
pop
mov
ja
cmpsb
xorb
xchg
xor
mov
filds
inc
popf
mov
ljmp
aad
loopne
jae
cld
ret
adc
lahf
mov
nop
ja
push
or
xchg
push
jg
push
stc
movsl
insl
movsl
sbb
push
pop
popf
push
or
cmp
int3
mov
inc
notl
pop
loopne
xchg
shlb
sbb
test
cmp
push
fcmove
rcl
fld
jno
mov
sbb
push
das
sbbl
mulb
mov
push
repz
idivb
aaa
mov
xchg
daa
outsl
adc
ret
out
data16
xor
sub
in
cli
fcmovnu
mov
pop
cmp
xor
lret
inc
inc
stos
mov
xor
xchg
insb
mov
adc
daa
xor
lahf
stos
test
push
adc
ret
insb
push
xchg
push
jge
xlat
lods
lret
xlat
xor
jae
test
cli
inc
out
hlt
mov
movsb
cmp
mov
add
dec
es
push
or
mov
adc
in
jae
mov
inc
dec
cmp
mov
inc
pop
dec
add
outsl
inc
xchg
in
test
sub
push
xchg
mov
mov
adc
lods
loop
mov
pop
add
jb
andb
sti
outsl
xorb
aad
mov
outsl
cmp
inc
mov
dec
pop
psllq
pop
adc
sar
xor
ds
nop
pop
pop
add
and
jmp
mov
pop
shl
or
adc
mov
mov
ret
jne
push
xchg
shrb
or
lcall
jmp
or
stc
xlat
lret
test
testb
idivb
and
mov
out
or
push
out
mov
sti
imul
cld
cmp
mov
xchg
jge
dec
into
es
xchg
bound
jge
cli
mov
jns
ja
mov
mov
add
and
dec
xchg
dec
pop
mov
pop
push
xchg
jbe
gs
add
pop
stos
push
and
jno
jne
pop
xor
scas
stos
repz
xchg
xor
clc
sti
jnp
xchg
inc
push
xchg
lds
xor
cmp
js
push
dec
pop
cmpsl
push
xchg
pop
push
mov
jmp
sbb
divl
cmpsb
sub
mov
popl
pop
xor
gs
ficoms
mov
jnp
mov
xchg
lret
cwtl
rcrb
jge
cmp
test
pop
jns
jno
xchg
dec
mov
sbb
stc
imul
jno
pop
enter
adc
inc
mov
push
hlt
sbb
filds
cmp
ja
or
jle
pop
fldenv
gs
jae
push
inc
fcmovnb
iret
jne
repnz
shll
mov
pop
jecxz
in
push
mov
loope
add
jns
daa
mov
repz
add
call
mov
in
pop
insb
jg
mov
adc
push
cmp
mov
add
addb
mov
jle
push
nop
cli
mov
in
sti
xchg
mov
and
xchg
ja
sahf
pop
push
cltd
sbb
mov
into
and
push
and
push
insb
or
out
ret
pushf
sub
lea
jmp
inc
jo
leave
cmp
jmp
push
sub
loop
daa
lcall
jmp
repz
adc
in
xchg
xor
or
mov
cmp
js
push
sahf
pop
xor
and
and
movsb
jns
stos
aam
inc
negl
mov
adc
mov
xlat
push
mov
pusha
mov
ljmp
out
test
pusha
movsb
mov
movsb
xchg
mov
inc
lock
insl
xor
dec
mov
ret
mov
mov
loop
push
mov
xchg
dec
loopne
icebp
sbb
push
mov
popf
sti
mov
inc
stc
scas
add
inc
out
jno
outsl
mov
cmpsl
sahf
cwtl
daa
and
jg
loopne
pop
pop
or
cmp
push
lods
aam
jge
xor
or
in
jbe
mov
in
push
test
outsb
push
mov
push
push
sbb
ja
xor
cmc
sub
outsb
pop
sub
xchg
xchg
into
and
or
mov
inc
stos
sub
cmc
insb
and
jne
mov
mov
dec
cli
sbb
xor
int3
mov
ljmp
adc
inc
pop
popa
jl
in
jg
jnp
push
jns
lret
dec
xchg
sahf
dec
test
xchg
mov
cmp
add
dec
pop
ret
mov
iret
lds
rcl
push
dec
pushf
jno
in
sti
push
ret
popf
filds
mov
sub
mov
jns
jno
scas
pushf
xor
ret
imul
mov
and
mov
stos
mov
push
out
fadds
rcl
imul
cmp
vpunpcklqdq
sbb
sbb
stc
daa
outsl
aaa
and
insl
test
push
dec
pop
imul
sub
roll
ljmp
jbe
test
or
cmp
in
cmp
ds
ret
outsb
mov
inc
sbb
lret
inc
mov
loope
jecxz
cmp
mov
add
in
pop
insl
testl
scas
inc
jbe
sbb
mov
rcr
mov
xchg
pop
sub
sti
gs
inc
cmpsl
jge
jge
rcrl
rcrb
mov
jmp
imul
jb
mov
push
fists
fwait
inc
mov
mov
lock
dec
out
mov
dec
int
out
fnsave
aam
push
sbb
shrb
out
shll
xchg
sub
sti
fs
repz
add
jne
fwait
jae
push
mov
jmp
or
inc
cmpsl
or
lea
ss
mov
stos
jo
mov
and
bound
mov
push
incb
ffree
js
int
pop
in
int3
fwait
xchg
loop
push
cld
cld
xchg
in
rcrb
sub
je
mov
cmpsl
cwtl
adc
gs
jl
movsl
stos
pop
out
in
sub
cmpsb
add
add
subl
out
addl
rcll
and
mov
sub
xor
pop
adc
xor
xchg
mov
cmpsb
fwait
cmp
repz
mov
and
fistps
jecxz
push
pop
clc
test
test
push
sbb
call
loope
repz
xchg
dec
mov
dec
cmp
arpl
and
inc
or
fimuls
sub
pop
sahf
mov
adc
lcall
push
lods
cmp
aaa
jae
and
testb
gs
pop
cs
fistps
lret
in
sahf
inc
lcall
mov
lods
adc
hlt
fld
lods
loop
dec
orl
das
jbe
das
rcrb
rcrl
sahf
and
mov
in
or
xchg
popa
and
add
repz
out
leave
lods
scas
shrb
xlat
inc
adc
aaa
pop
or
fidivs
add
cmp
or
dec
xchg
movsl
stos
sub
adc
xchg
or
filds
test
cltd
mov
subb
popa
or
fwait
mov
mov
dec
movsl
daa
call
and
cmp
mov
push
outsl
scas
sti
fs
scas
or
out
cmc
jne
movsl
enter
lret
imul
out
and
cmp
push
shrb
fnstsw
inc
jmp
ss
jg
jle
in
movlps
sub
mov
adc
cs
cld
test
pop
adc
je
push
pop
lahf
popf
mov
xchg
cltd
out
mov
mov
stc
in
xchg
xor
jp
mov
nop
jle
xor
sub
movsb
or
jnp
mov
push
xor
movsl
cmp
popa
fwait
cmpsl
cmpsl
sbb
cmp
in
popf
test
xchg
xor
ss
sub
jo
int3
movsl
lret
imul
dec
fistps
mov
fistps
or
mov
lods
pop
arpl
sub
push
dec
pop
je
test
fldenv
cld
jbe
sarb
sub
inc
xchg
sbb
sub
mov
inc
add
arpl
scas
pop
dec
aam
cmp
movsb
mov
mov
or
int
insl
sarb
in
fsts
xchg
pusha
sbb
stc
push
inc
mov
ret
push
sub
test
lds
rcrl
test
jp
lahf
not
ret
js
pop
popa
pop
or
cmp
push
stc
aaa
mov
jb
dec
repz
and
sub
mov
push
jo
inc
icebp
dec
mov
sub
dec
mov
shl
loopne
add
jns
mov
div
fstps
stos
nop
cmp
mov
inc
lcall
push
movsl
pop
push
fs
andb
lcall
ja
out
movsl
lock
sub
jge
mov
mov
push
es
inc
sbb
loopne
pushf
sub
mov
jge
test
hlt
adc
notb
jnp
ljmp
adcb
es
aaa
hlt
fisttpl
sub
and
jne
cmp
out
mov
mov
cltd
int3
dec
lea
sub
push
mov
stc
aam
mov
xchg
cmpsl
out
test
mov
mov
notl
in
daa
xor
aas
pop
sub
or
je
lahf
dec
cmp
rcl
sub
pop
andl
jp
cmpsb
fsubs
sahf
stos
push
fildl
sbbl
aad
cwtl
adc
aam
seta
in
adc
aaa
jae
fwait
push
std
fcomip
pop
rcrb
xchg
mov
mov
xchg
add
test
jecxz
leave
decl
pop
add
dec
mov
or
sub
fsubrl
addr16
xchg
mov
jbe
lret
imulb
pop
or
jp
or
scas
outsb
inc
outsb
mov
aas
inc
fcmovnb
dec
fsubs
jecxz
mov
add
ret
pop
in
aam
fwait
or
xor
pop
imul
mov
popf
dec
sti
outsb
sub
push
sub
imul
sti
jmp
mov
adc
mov
stos
add
cld
hlt
sub
xorb
cmp
sti
fmul
add
cmpsb
jg
mov
pushf
imul
cwtl
in
jl
jmp
jmp
es
ret
fs
int
mov
inc
jo
dec
sahf
sub
popa
insl
pinsrw
dec
jg
jbe
sahf
daa
mov
cwtl
test
aaa
loopne
inc
sbb
push
mov
add
rcll
loop
push
mov
shll
jg
pop
lahf
mov
mov
out
add
repnz
aas
pop
test
and
add
stos
pop
push
loopne
mov
popf
jno
pop
push
cmp
mov
jle
mov
mov
xchg
clc
and
lret
push
mov
in
imul
add
ljmp
push
rcrl
push
cs
shll
jnp
cmpsl
mov
mov
mov
mov
jp
jae
in
sarl
push
sbb
and
rolb
fistps
xor
jnp
or
out
insl
cli
fildl
pop
sub
insb
push
call
pop
mov
lcall
in
jae
jge
vpmaxsw
cmp
addl
lock
lock
hlt
mov
sbb
adc
push
bound
out
pop
inc
mull
pop
pop
push
rolb
lcall
jbe
add
push
inc
fistpll
mov
jl
test
dec
aam
mov
movsb
mov
out
xchg
repz
push
dec
imul
test
mov
es
mov
mov
lahf
xchg
xchg
sub
mov
mov
pop
or
sub
test
testl
ret
add
cmp
imul
push
jnp
pop
notb
add
pop
inc
dec
and
adc
cltd
lock
gs
pop
repnz
jg
adc
iret
popa
lea
fwait
and
outsl
lret
lea
dec
jae
hlt
jecxz
xor
dec
xchg
lcall
decb
cmpsb
pop
mov
cli
pusha
mov
pusha
fsts
popa
sahf
ss
sub
lahf
cmp
fdivrl
cmpsb
jbe
stos
adc
lcall
pop
xor
js
xor
jg
mov
jne
xchg
test
mov
aad
insb
pop
jbe
cli
adc
mov
enter
clc
xlat
xlat
lds
cmpsl
daa
movsw
jecxz
mov
inc
ja
dec
xorb
sti
sarb
ds
pop
repnz
rep
xor
cmpxchg
push
adc
sbb
mov
mov
insl
loope
lods
mull
mov
xchg
mov
bound
je
js
pusha
adc
dec
stos
pop
xchg
je
sub
sub
xor
lods
mov
xchg
mov
pop
xchg
pop
mov
xor
movsb
push
push
scas
mov
das
out
fs
insb
data16
pusha
ljmp
fldcw
imul
jl
je
and
jo
fdivrl
andl
fisubrl
push
or
mov
cltd
mov
dec
pop
out
fnstsw
mov
lcall
test
push
mov
je
inc
mov
or
xor
fwait
int3
in
sub
das
bound
add
sub
jbe
cmp
or
scas
clc
imul
xchg
int3
xchg
cmpsl
enter
call
test
add
jns
push
shll
mov
xlat
shr
out
mov
dec
pushf
push
push
lock
imul
inc
pop
jge
scas
insb
and
fadds
xor
aas
push
insb
push
mov
sbb
xor
lock
fwait
js
ljmp
push
bound
imul
fwait
push
mov
pop
mov
sbb
dec
ljmp
loop
insb
pop
mov
cli
dec
add
or
js
mov
xchg
jmp
das
in
das
adc
jg
add
push
xchg
push
shrb
outsl
js
jne
dec
and
aaa
dec
pop
xorb
xchg
push
inc
dec
stos
lods
insl
popf
add
inc
stos
aaa
adc
negl
scas
pushf
adc
call
test
pop
mov
out
push
mov
loope
sub
and
stos
and
add
xchg
inc
mov
adcb
dec
mov
jg
sbb
imul
stc
icebp
mov
adc
sub
mov
xchg
sbb
lret
dec
xchg
cs
loop
sub
jp
sub
mov
sarb
out
push
rcr
sahf
test
mov
mov
pop
mov
stc
addr16
ja
je
sub
repz
lods
xchg
movsl
stos
xor
loopne
cmp
cs
sbb
xchg
fstps
mov
lods
mov
call
inc
ret
bound
adc
push
cli
call
cli
dec
xchg
outsl
mov
pop
mov
jb
clc
popa
mov
push
push
sti
cmp
jne
xchg
fldl
pop
xchg
jg
cwtl
mov
push
addr16
inc
dec
push
fnstcw
gs
jg
cmp
xchg
cli
inc
jo
pop
dec
call
push
xchg
and
sbb
xchg
mov
jo
or
jae
dec
inc
push
shll
mov
and
out
test
aam
push
cmp
mov
pop
mov
inc
and
cwtl
les
push
dec
xor
jo
mov
popa
negb
imul
pop
fsubr
testl
mov
mov
cmp
leave
cmpsl
sub
pop
or
cmp
mov
iret
or
xchg
shlb
jmp
loopne
loope
mov
movsl
notb
jb
xchg
retw
leave
cld
mov
mov
insb
jae
sub
xor
dec
out
test
ja
mov
sbb
or
adc
loop
stos
das
cli
lea
psubb
jecxz
pop
je
lock
push
dec
lcall
icebp
push
lods
pop
push
icebp
lea
aad
arpl
das
pop
fwait
sbb
sarb
je
pop
notb
in
mov
in
add
push
lea
cltd
test
test
aam
lret
aad
xchg
mov
cld
andl
adc
loopne
and
mov
icebp
and
pop
push
int
inc
fcom
push
push
push
addr16
cwtl
push
pop
into
cmp
aas
fs
mov
adc
rorl
jns
jbe
jne
inc
in
add
xor
lock
mov
pop
lods
sub
jns
jbe
inc
cmpsl
mov
sbb
sub
mulb
insl
mov
in
cmp
cltd
push
and
andl
or
stos
pushf
hlt
adc
lds
aad
mov
xor
xchg
mov
fistl
and
pop
aad
dec
push
call
stc
push
cld
scas
mov
cmp
xchg
adc
adc
pop
addb
test
mov
je
or
ds
mov
jl
xchg
mov
dec
or
add
mov
inc
ljmp
inc
mov
xor
lock
test
negb
arpl
cmp
xchg
lahf
cmpsb
lret
cld
mov
inc
cld
cmpsl
adc
arpl
pop
sbb
or
int
jnp
lds
push
int
dec
lret
andl
xchg
mov
call
and
orb
mov
lcall
repz
mov
aaa
jb
mov
rorl
push
roll
outsb
popa
dec
sub
push
aas
pushl
insb
cmp
pop
pop
imul
xor
sbb
xchg
jns
aas
ret
or
mov
sub
cli
mov
stc
sub
or
sub
andl
mov
movsb
jmp
aaa
mov
mov
add
cmpsb
pushf
xor
dec
or
arpl
cltd
xchg
in
lds
sub
mov
aad
out
into
dec
call
pop
sbb
pop
xchg
cli
sub
icebp
sbb
outsb
icebp
push
pop
ja
add
das
or
pop
pop
cli
lods
push
mov
dec
xchg
sbb
test
insl
in
sbb
frstor
dec
imul
outsl
pop
int3
dec
cmp
cmc
clc
xor
jl
fmull
jg
cmp
mov
fisubl
sbb
int
in
inc
sbb
adc
pop
and
mov
and
pop
or
stc
add
mov
mov
imul
stc
jbe
mov
or
lods
jns
mov
scas
xchg
movsb
lods
or
mov
xor
cld
fsubs
and
nop
loopne
test
fistpl
dec
int
punpckhwd
add
ficoms
test
push
or
or
xorb
clc
sub
dec
js
mov
mov
ds
jecxz
add
push
out
lahf
mov
adc
insb
fists
adc
sub
dec
loopne
mov
dec
push
dec
rol
cmp
sti
sub
pop
stc
rorb
in
pop
ds
test
popf
mov
push
cmp
cli
lods
es
jge
sub
out
pop
push
xor
xchg
push
xor
jmp
int
push
pop
or
mov
out
ja
push
loope
xchg
lds
mov
jo
movl
fidivl
in
pop
cmp
cli
adc
sbb
es
insl
lea
jge
xchg
pop
in
pop
mov
int3
fimull
push
jae
frstor
fst
xchg
push
out
lock
push
and
or
or
imul
xor
lds
xchg
pop
js
sbb
push
add
jge
stos
decb
fadds
and
and
push
sbb
sbb
inc
xchg
stos
aad
pop
jg
out
test
int
dec
lods
pop
mov
mov
mov
mov
ret
insb
shrb
jl
cli
pusha
shl
mov
aam
or
cmpl
mov
adc
mov
pop
out
nop
or
psubq
rcr
xchg
and
daa
andb
pop
stc
fnsave
and
testl
rcrb
ds
mov
push
xchg
mov
js
or
sub
lods
popf
adc
inc
pop
jno
out
jmp
ficomps
shll
insb
sub
pushf
cmpsb
sbb
adc
push
dec
es
inc
hlt
sub
dec
popf
add
jp
adc
es
ds
sub
popf
imul
fcmovnu
ljmp
lret
gs
cmp
movsl
adc
mov
sub
inc
test
xor
push
js
loop
lods
or
rorl
in
cmp
cmp
push
xlat
test
int
rcrl
or
mov
test
inc
cmc
jl
sub
cmp
icebp
out
pop
push
inc
inc
pop
mov
out
ret
cmp
out
lods
xchg
ds
pop
fidivs
pop
faddl
cwtl
ret
negb
adc
fadds
lock
jl
sti
movsb
push
jp
lock
mov
shlb
xchg
jbe
jl
lods
test
push
pop
xchg
add
repnz
lret
push
imul
mov
ret
shrb
dec
pop
lds
lcall
add
adc
jbe
imul
inc
pop
aaa
and
push
push
and
inc
and
lds
gs
jle
movl
aam
iret
cmc
jno
shll
jg
bswap
adc
imul
add
xor
jl
out
push
fdivr
cmp
push
sti
cmp
lahf
mov
mov
or
mov
aam
ds
fwait
push
lret
das
cmp
imul
into
incb
mov
push
jnp
mov
scas
aam
arpl
xchg
int
mov
outsb
fwait
sbb
and
outsl
clc
fldt
jb
xchg
mov
mov
mov
xchg
cltd
jo
outsb
push
sub
jne
and
sar
out
pop
nop
and
insb
xchg
insb
jo
ret
lret
jbe
xchg
add
inc
fnstcw
push
mov
mov
aas
loopne
xchg
lds
rep
popa
ds
pop
or
shll
add
fstpl
imul
ret
frstor
pop
adc
repz
je
push
add
divl
add
ja
fmull
mov
mov
fdiv
jp
addb
fisttpll
cmp
cmp
repz
shl
rcrl
mov
pop
cli
movsb
dec
les
movsl
adc
push
mov
mov
mov
inc
push
add
adc
imul
pusha
inc
xlat
cltd
add
ret
dec
out
mov
sbb
push
inc
fs
add
inc
loop
xchg
stos
mov
lock
sub
shlb
sub
cmp
in
mov
xorl
fidivs
movsl
push
imul
fildll
mov
sbb
mov
jle
cmp
and
in
cmpsl
nop
push
scas
and
js
aam
dec
push
push
xor
out
xlat
dec
out
and
inc
pushf
cmp
test
dec
out
cmp
test
dec
xorb
jmp
std
cwtl
stos
sub
imul
mov
xchg
cli
pop
push
or
and
xchg
insl
addr16
xchg
neg
xor
pusha
mov
xchg
addb
cmp
sti
or
ljmp
add
lea
out
and
dec
test
dec
sub
mov
jp
xchg
xlat
adc
pop
fidivrs
pop
pop
or
fcoml
cmp
dec
fisttps
pop
out
data16
cmpsb
jp
mov
out
aas
add
cli
jp
jp
imul
push
popa
in
lds
pop
and
pop
jbe
mov
sub
add
pop
mov
jno
cwtl
mov
hlt
loopne
scas
xchg
arpl
push
xor
mov
sub
push
mov
fwait
sahf
out
aas
xchg
nop
jb
add
xor
fcomps
jbe
push
sub
test
cmc
ljmp
fsts
fisubs
dec
call
mov
in
aas
outsl
mov
dec
push
inc
lahf
push
pop
pop
repz
push
out
mov
pop
pop
je
frstor
push
ss
fsubrs
cmp
sub
psubusb
xchg
je
xchg
or
add
in
or
outsl
cld
adc
inc
std
divl
addr16
sub
ljmp
jg,pt
repnz
outsb
jne
xchg
mov
xor
sbb
sub
and
add
mov
out
pop
fisubs
push
jno
scas
dec
mov
js
cld
int3
icebp
cwtl
push
sub
je
inc
notl
out
mov
mov
push
xor
sbb
fwait
outsl
xor
test
cmp
mov
xor
push
shlb
loope
jg
and
lea
loopne
shll
xlat
pop
mov
jmp
xchg
add
dec
mov
test
push
mov
dec
jmp
scas
mov
pushf
and
repz
ja
in
lods
pushl
divb
add
dec
in
shll
stos
sub
imul
inc
imul
in
jae
cmp
loop
addr16
mov
stos
jns
mov
clc
cmpsl
outsl
pop
movsb
jne
sahf
adc
rclb
mov
cmp
aam
enter
mov
aad
cmp
push
xchg
ljmp
mov
pop
outsl
aam
scas
push
xorb
les
push
cltd
sbb
loop
cld
pop
not
shll
dec
outsl
jb
and
xor
arpl
ljmp
jb
jl
outsl
mov
cltd
pushf
mov
push
cmp
rorl
jmp
jp
cmpl
popa
cmp
jp
das
jb
inc
push
cmp
jno
sbb
mov
mov
adc
or
addr16
cwtl
and
jmp
hlt
jo
mov
vmaxpd
cs
lcall
movsl
ja
xorl
dec
lds
ficompl
and
jno
xor
jo
aad
movl
cld
mov
adc
pop
sub
mov
xchg
loope
adc
cmc
xorb
divl
mov
mov
mov
lods
pop
cld
sbb
cs
cmpsb
in
ss
lods
and
fldl
popf
jnp
sbb
and
xchg
mov
dec
push
movsl
xor
pop
mov
dec
inc
ljmp
movsb
dec
adc
jg
call
mov
imul
aas
or
fs
mov
xchg
push
lcall
cmp
mov
dec
and
sbb
pop
mov
mov
add
int
dec
adc
xchg
xlat
sub
imul
gs
pop
dec
shlb
xchg
jg
push
pop
or
xchg
add
xchg
lret
push
and
adcb
sub
adc
inc
stos
cmpl
inc
pop
and
push
cmp
insb
xchg
adc
xlat
push
int
push
mov
ret
jp
call
cli
loopne
lds
sub
fs
pop
stos
pop
sahf
and
repz
in
ret
fmuls
mov
sbb
push
scas
xor
jl
sahf
add
dec
jnp
mov
cmp
in
inc
lds
nop
imul
std
test
out
adc
add
xchg
cmp
push
scas
add
out
cld
mov
add
push
fwait
xchg
mov
cltd
xchg
inc
in
cld
adc
arpl
xor
mov
mov
inc
fbstp
adc
adc
push
push
sub
adc
and
jp
fisubrs
call
sbb
jno
daa
mov
lods
jmp
mov
ljmp
bound
ret
xorl
jg
int3
jp
and
jp
adc
xchg
neg
movsl
or
fdivl
pop
shrb
mov
push
mov
xchg
inc
data16
stos
pop
int
das
mov
popa
sbbb
mov
es
sbbb
sub
andb
push
push
dec
push
mov
push
inc
cmp
lcall
rcr
sbbb
pop
adc
cwtl
lret
mov
stos
imul
add
into
fsts
add
rolb
pop
or
test
cli
mov
add
jno
adc
xchg
xchg
sub
jge
jo
fcoml
sbb
hlt
add
push
mov
ljmp
and
pop
xor
nop
sub
arpl
lcall
sbb
sahf
mov
or
pop
or
in
fcmovnb
jo
js
mov
ret
icebp
inc
ficomps
jecxz
and
fldt
outsb
inc
addr16
mov
js
sub
sti
pop
leave
fcmovb
push
out
sti
mov
insl
xorb
cmp
sub
mov
mov
sbb
adc
xchg
jle
daa
inc
inc
rcll
add
adc
mov
pop
and
ljmp
jp
inc
mov
pop
mov
jo
xor
inc
push
ficomps
movsl
jmp
dec
add
xorb
scas
inc
lret
xchg
punpckhdq
scas
in
pop
pop
loope
imul
mov
flds
xor
inc
push
jmp
test
jne
aad
push
hlt
out
fldt
mov
mov
mov
jae
pop
inc
and
loop
mov
mov
xchg
inc
and
cli
vpcomq
add
xor
cmpsl
mov
sub
xor
shlb
xchg
pop
mov
shlb
or
push
fldt
inc
push
idivl
adc
sar
mov
mov
cwtl
idivl
pop
insl
es
cmp
cmp
sub
inc
inc
adc
dec
incb
dec
fisubl
cmp
mov
fdivrs
fisubs
mov
ds
pop
adc
jns
rcrb
add
imul
lahf
fwait
inc
xchg
insl
xchg
stos
int3
insl
xor
ret
insb
mov
xchg
pop
add
mov
repz
rcrb
ja
mov
jns
cmp
xlat
cmp
dec
jbe
mov
xor
dec
mov
mov
xchg
xor
in
dec
repnz
movsb
mov
xlat
call
pop
sbbb
sub
lret
dec
rorl
fcmovne
mov
ds
test
pop
clc
cmp
ds
sbb
pop
hlt
int3
mov
push
aaa
out
add
out
mov
lret
aam
xor
ds
xchg
cmp
mov
outsb
orl
xor
ja
mov
insl
sub
inc
nop
enter
pusha
dec
sub
cld
xchg
and
call
sub
inc
dec
add
stc
bound
in
jb
xor
outsl
xor
mov
push
mov
movsb
push
in
cwtl
cmp
pop
inc
xchg
cmp
or
movsb
arpl
adc
inc
or
push
aas
push
scas
lods
lahf
mov
push
aaa
pop
enter
mov
push
pop
add
mov
pop
sub
fwait
or
sbbl
adc
xor
xchg
lea
mov
push
push
loop
xchg
push
sub
sbb
mov
into
dec
push
cmpsb
ja
inc
sbb
movsb
add
inc
fldl
shrl
xor
in
pop
nop
jg
adc
sbb
popa
xchg
adc
pcmpeqw
xchg
mov
push
test
jno
and
add
in
xor
js
ljmp
stos
test
out
shl
and
mov
mov
scas
push
xlat
lret
sub
or
mov
cld
jne
add
out
out
cmp
push
cmp
mov
fcoms
int3
fcmovbe
mov
mov
fsubs
mov
sbb
hlt
popf
jmp
popf
add
ss
mov
and
and
xchg
jns
scas
push
popf
dec
les
lret
popa
jb
add
fsubl
push
jg
inc
in
faddl
movb
fnstsw
dec
mov
mov
imul
xchg
shrb
fs
mov
mov
push
xor
or
cmpsb
dec
scas
in
fcmovnu
dec
or
jae
push
mov
or
dec
xchg
xchg
movsb
mov
scas
and
gs
jb
das
lds
mov
jno
mov
rcll
iret
inc
ficoms
loopne
jns
movsl
add
push
sbb
lret
das
xor
fadds
shrl
cmpl
inc
sbb
das
xchg
pop
pushf
mov
les
scas
icebp
scas
lret
mov
call
outsb
das
inc
shll
or
dec
cld
mov
adc
gs
inc
or
rorl
call
fldl
orl
imul
fildl
xchg
addr16
filds
xchg
repz
sub
call
mov
loop
jp
inc
fnstcw
js
jmp
ficoms
mov
sub
jmp
movsb
in
xorb
jl
fldcw
push
out
dec
lahf
or
add
sti
pop
movsb
lods
mov
sub
jns
mov
xchg
fimuls
and
mov
jae
into
push
dec
imul
sub
out
inc
mov
mov
sub
movsl
mov
in
inc
fprem1
ficompl
jecxz
inc
dec
xchg
pop
mov
sbb
shl
push
or
add
adc
jecxz
cmp
aam
pop
adc
rorl
test
pop
test
add
fmuls
stos
stos
or
xchg
mov
mov
shll
pop
testl
mov
test
loop
mov
and
lods
mov
into
dec
dec
xchg
mov
jo
fadd
xor
dec
or
and
je
stos
cmp
cwtl
nop
adc
fistl
scas
push
lcall
xchg
clc
popf
and
pop
mov
or
fsubrs
inc
mov
cmp
pusha
icebp
dec
dec
xchg
hlt
sbb
out
or
jp
mov
sub
mov
mov
popf
jmp
push
jecxz
push
push
test
and
pop
popa
dec
cwtl
lret
mov
push
xor
or
inc
and
cltd
mov
insb
adc
inc
aas
sub
out
ds
out
mov
add
popa
and
push
add
ficompl
inc
xor
jnp
std
ret
mov
int
xchg
repnz
ffree
das
xchg
sbb
mov
nop
xchg
and
pop
add
fmuls
bswap
in
cmc
jo
fldcw
lahf
stos
push
lret
pop
xchg
mov
sbbl
pushf
push
mov
xchg
sahf
jge
pop
sbb
cmpb
jg
enter
xor
inc
xor
cs
stc
sub
fists
mov
das
dec
mov
mov
subb
dec
aas
pop
fldl
mov
dec
xor
and
into
ss
cs
std
sub
hlt
loope
clc
mov
inc
addr16
je
and
popa
pop
fbstp
aam
outsl
in
mov
in
sbb
cltd
inc
loopne
loopne
fimuls
xor
and
or
test
dec
testb
sub
add
inc
sub
cmp
adc
fisubrs
add
cli
cltd
rolb
mov
push
jmp
jbe
sbb
dec
sub
mov
add
or
es
ljmp
lods
inc
and
ja
add
dec
xorb
xlat
sarl
and
sbb
mov
add
xchg
mov
std
sbb
hlt
pop
clc
add
dec
cs
jmp
sbb
mov
inc
sub
lock
or
mov
sti
test
mov
outsb
cltd
mov
int
and
jmp
fists
inc
cmpsb
jnp
pop
arpl
inc
enter
leave
fs
movsb
mov
jecxz
sbb
and
xabort
dec
mov
xchg
xor
push
mov
out
pop
jo
or
lds
xchg
xor
lods
lcall
inc
dec
test
xchg
sbb
xor
mov
sbb
jae
xor
fcmovnu
mov
cltd
inc
nop
int
stc
jns
inc
add
outsb
jns
dec
lcall
push
test
imul
pop
inc
inc
in
rcr
leave
daa
push
mov
lret
dec
adc
mov
fdiv
mov
call
enter
mov
in
jmp
or
enter
lods
mov
xlat
jl
adc
jmp
sbb
mov
mov
or
and
nop
mov
jp
pop
movsb
jg
inc
test
sub
ja
mov
mov
mov
js
loop
xor
insl
ljmp
ja
fiadds
daa
sti
xor
and
sbb
cltd
int3
je
mov
scas
push
fld
fcoml
xchg
cmpsb
rorl
testl
jno
sub
sub
in
mov
in
sub
fiadds
lock
rorb
dec
and
out
addl
movsl
subb
sub
jnp
ljmp
mov
xchg
cmpsb
inc
push
aaa
inc
movb
test
add
out
mov
in
cmp
frstor
mov
cmp
enter
clc
add
mov
or
cs
jg
inc
inc
push
push
pusha
mov
sbb
bound
push
popf
in
in
push
cmpl
jno
sbb
jo
push
inc
clc
je
mov
bound
jmp
iret
sub
into
lds
or
cmp
and
cmp
jno
add
std
jb
mov
adc
pop
outsb
xlat
mov
xchg
mov
shlb
addb
mov
lahf
inc
push
xchg
xchg
lcall
roll
lcall
int
fisttps
in
sar
cmp
push
cmp
dec
adc
mov
push
inc
sarl
stos
dec
addr16
dec
mov
mov
and
push
jbe
inc
sub
dec
inc
in
testb
push
sub
push
loop
sti
jle
sub
loopne
aas
in
dec
daa
imul
pop
test
into
in
mov
fistpll
addb
aam
xor
aaa
pop
lods
mov
dec
dec
jg
outsl
addb
ret
ja
js
xor
lahf
mov
xor
iret
stos
xor
lcall
inc
in
test
push
jns
mov
sbb
cmc
dec
mov
jl
and
xor
int
inc
mov
mov
out
add
jae
cmp
sub
push
jmp
lods
clc
mov
jmp
add
sub
insl
shlb
inc
xchg
or
inc
in
outsb
jl
mov
or
gs
sub
scas
cmp
ja
popf
je
add
sbb
out
enter
add
pop
mov
add
dec
xchg
int3
dec
std
cmc
xchg
repz
dec
repnz
in
sbb
shlb
mov
push
in
lret
fnstenv
cmp
ret
clc
js
pusha
subb
lods
sub
push
ret
push
or
inc
add
arpl
xor
pop
dec
adc
popf
out
jb
pop
addl
lret
pop
mov
repnz
push
sbb
xor
add
jg
jp
inc
loope
mov
and
adc
xchg
mov
push
jns
andl
jmp
cmc
and
imul
push
dec
in
pop
movsb
ss
test
jecxz
mov
sbb
es
and
mov
jl
popa
addb
inc
imul
negl
outsb
xchg
pusha
xor
jecxz
data16
sbb
xor
inc
aas
xchg
and
leave
out
jecxz
hlt
loope
pusha
in
xchg
push
xchg
push
out
mov
lar
in
test
and
arpl
test
inc
mov
iret
ror
sbb
jmp
or
lock
inc
dec
out
outsb
mov
add
mov
ficoml
mov
popf
add
insb
mov
popa
mov
sub
lahf
std
cmc
dec
fiaddl
lock
cld
cmp
insb
in
je
stos
inc
push
mov
jge
icebp
fcompl
aas
inc
call
js
mov
xor
jl
mov
jno
add
pop
xchg
repz
mov
popa
add
push
pop
mov
out
imul
out
push
ds
dec
pop
shl
mov
cmc
ficompl
nop
popa
or
sbb
mov
faddp
mov
rcrl
xchg
rcl
sub
nop
fistpll
ret
sbb
dec
push
push
cs
aam
mov
pop
mov
lock
fs
loope
or
or
mov
adcl
shll
fisubrl
pop
jl
adc
xor
push
sbb
lret
pop
addr16
jge
add
int3
loope
adc
sbb
mov
inc
gs
loop
mov
sbbb
lcall
hlt
fldcw
mov
sbb
mov
xchg
xor
jno
adc
cmp
pop
jne
stc
inc
hlt
int
pop
and
pop
jns
stos
push
inc
cmc
adc
sbb
ss
out
imul
inc
nop
shll
sbb
jge
rclb
dec
xor
add
sub
stc
lcall
cmpb
mov
sbb
sub
or
addr16
push
jmp
xchg
shll
add
mov
push
sub
hlt
lods
mov
cmp
leave
jns
mov
leave
fstps
add
insb
pop
js
scas
test
int3
push
adcl
shll
insb
sahf
out
imul
sahf
aam
lcall
xor
pop
pop
mov
add
into
jl
sbb
out
jnp
bound
aas
inc
outsl
and
sbb
xchg
dec
lcall
testl
pop
bound
fidivs
add
cld
imul
sbb
stos
push
lds
mov
int
inc
rorl
mov
lods
leave
sub
std
and
adc
fxam
in
xchg
dec
mov
out
sbb
dec
lods
add
adc
inc
cmpsb
push
or
cmp
mov
mov
outsl
and
xor
push
xlat
lods
inc
inc
pusha
mov
and
pop
notb
out
cli
mov
icebp
cld
cmp
cmpsl
fsts
mov
dec
sub
dec
ljmp
lahf
lods
add
push
cmc
ret
cmpl
sbb
int3
insl
insb
mov
rcr
inc
cmpsl
sbb
scas
xchg
mov
test
mov
mov
xchg
iret
adc
imul
shrb
popa
add
add
push
xor
mov
pop
dec
sub
cld
int
jo,pt
call
jne
jne
jl
and
int3
lret
adc
call
jmp
and
in
mov
leave
cmp
push
ret
lods
xchg
adc
nop
jmp
push
and
test
inc
or
inc
and
sbb
int3
and
or
push
outsb
imul
shll
and
fs
adc
rcr
or
outsb
out
inc
push
negb
sub
inc
adc
ret
outsb
mov
sbb
and
fistpl
in
and
jl
scas
xlat
je
sbb
sti
andnps
jbe
jge
stos
fldenv
scas
xchg
push
out
sbb
cltd
mov
pusha
or
mov
mov
lret
xor
push
mov
xchg
and
cld
scas
insl
mov
sub
gs
jge
insl
cmpsb
push
cmp
jp
mov
loop
gs
insb
std
scas
testl
add
or
imul
mov
mov
mov
push
jns
inc
arpl
jnp
loope
movsl
jecxz
xchg
push
push
push
xchg
xlat
repnz
xor
mov
aad
xor
xchg
dec
ror
ret
out
int3
mov
push
inc
push
fcoml
shr
out
lods
mov
and
fistps
pop
leave
xchg
push
test
icebp
add
clc
cmp
fidivrs
daa
cmp
orl
pop
pop
popa
jne
insb
cmpsb
push
fidivrl
mov
jns
push
cmp
jo
insb
in
cmpsl
out
pop
imul
add
xchg
mov
lret
test
mov
and
and
stc
fidivrs
ja
popa
jge
mov
pop
jne
xchg
push
inc
dec
adc
sub
repz
enter
dec
mov
jmp
lret
and
mov
pop
sub
data16
sbb
mul
sbb
inc
pop
add
jle
add
out
and
sti
cmp
fisubs
sahf
out
popa
mov
mov
movsl
fsub
add
sub
adc
mov
adc
push
push
insb
xchg
sbb
jl
int
mov
xchg
in
enter
imull
adc
add
fsubl
push
scas
cmp
test
js
sub
jne
out
inc
mov
add
xor
sbbb
lds
and
sub
addr16
jns
mov
inc
popa
in
shrb
mov
fiaddl
enter
cmpsl
sub
pop
push
sub
clc
jbe
fisubrl
push
push
test
lret
adc
dec
daa
out
dec
popa
mov
xor
push
dec
das
inc
cmpsl
jo
lret
add
fwait
scas
mov
inc
fsubs
inc
cmp
pop
addr16
popf
mov
push
cmp
repnz
mov
fisubl
loope
loopw
dec
dec
mov
xor
xchg
addr16
adc
les
mov
test
push
inc
inc
adcb
popa
pop
test
sub
pop
pop
xorl
js
std
fbstp
cmp
or
push
rcll
push
cld
iret
mov
cmp
cwtl
push
and
pop
jns
or
loope
cmp
dec
cli
lds
clc
daa
imul
push
movsl
adcl
lret
je
adc
push
ja
cmc
addl
das
or
dec
into
sbb
imulb
pop
js
out
repnz
rcr
mov
dec
sub
pop
cmp
cld
sbb
add
adc
fistl
inc
bound
xlat
out
outsl
test
mov
pop
popa
jl
or
mov
in
les
mov
imul
mov
repnz
inc
iret
push
and
shrl
adc
inc
xchg
push
in
xchg
pop
imul
fstpt
lea
iret
ds
push
cwtl
sbb
dec
movups
mov
outsl
std
lcall
in
iret
ud0
mov
mov
int3
mov
mov
xor
mov
push
mov
fsts
xchg
inc
ficomps
jp
or
divb
adc
or
push
xchg
in
in
fsubrp
pop
in
cmp
incb
push
lds
jp
add
pop
cmc
and
mov
andb
aaa
mov
xor
rorb
ss
xchg
mov
or
jle
lret
sbb
and
imul
push
xchg
or
inc
arpl
pop
iret
push
cs
mov
and
and
xchg
popf
jbe
dec
aas
dec
std
mov
idivl
mov
ja
adc
les
fwait
js
gs
fdivs
data16
or
mov
daa
clc
dec
dec
adc
mov
mov
out
sbb
jns
cmc
popa
adc
xchg
mov
ret
stos
fwait
ret
sub
imul
push
mov
gs
int3
ja
jle
jmp
sub
cmpsb
mov
dec
cmc
int3
les
je
jp
xchg
sub
fistpll
out
xor
lret
fs
or
gs
mov
clc
aas
es
pop
mov
aad
popf
outsl
rcll
aaa
inc
fmul
fdivs
mulb
pop
gs
aad
lret
dec
jo
std
inc
daa
push
push
mov
popf
stos
aas
mov
adc
insb
outsb
push
aad
sbb
sbb
push
sub
push
or
arpl
jae
sti
adc
stos
pop
pop
and
jle
inc
in
xchg
push
jo
mov
or
sub
adc
adc
or
ret
ss
and
cli
aaa
push
out
or
imul
cwtl
jl
lret
push
shl
insl
cmp
or
cmpsl
int
aam
sbb
xchg
ret
xor
fdivr
push
popf
and
sub
push
js
pop
jl
mov
mov
push
inc
lcall
mov
xlat
mov
int3
jae
mov
mov
lea
ds
shlb
sbb
dec
repnz
lret
cwtl
mov
sub
cmp
jo
sbb
lock
notl
aaa
out
ja
insb
add
jp
rcll
imul
push
push
jno
sahf
outsb
das
int3
mov
inc
xchg
into
aas
lods
lahf
adc
iret
ss
jns
fdiv
std
imul
and
sbb
int
jns
push
sbb
cmp
xor
pop
or
mov
loop
sub
shlb
mov
scas
inc
jo
jp
jle
dec
push
int3
pop
iret
fmull
mov
add
or
test
test
mov
jb
and
jb
fs
mov
bound
loop
mov
cmp
adc
dec
mov
inc
stos
xor
sarb
xchg
js
lods
xchg
out
xor
xchg
ja
sbb
pop
cmp
jp
mov
nop
xchg
push
jne
rclb
pop
xor
nop
mov
lods
inc
inc
and
jns
sub
mov
int
ror
jmp
cmp
inc
mov
in
into
hlt
sub
inc
das
mov
xchg
xchg
mov
call
pop
or
aaa
push
std
cmpsb
faddp
shl
call
jmp
lods
ds
cwtl
lea
xchg
je
inc
lret
fwait
dec
ficoms
inc
mov
je
test
xchg
add
dec
or
jbe
in
adc
out
or
jo
xchg
sbb
jp
mov
lret
sbbb
mov
sub
xchg
push
dec
add
subb
pop
xlat
leave
daa
das
pavgw
push
movhps
shr
movsb
aad
sbb
or
xor
enter
sahf
les
repz
xor
lock
imul
outsb
lcall
mov
pop
jmp
negl
add
fsubrs
std
push
inc
ret
add
or
xchg
add
push
jle
lret
gs
sahf
scas
sub
pop
lret
and
and
inc
jle
lcall
jbe
xor
cmp
push
mov
hlt
mov
hlt
fcmovnbe
mov
xlat
lds
divb
ret
sbb
in
fisttpll
jae
sbb
fcos
sub
cmc
push
mov
add
mov
and
push
mov
xorl
adc
mov
pop
scas
xchg
adc
shlb
sahf
cmp
adc
je
and
or
dec
iret
pop
push
out
cmp
int
bound
dec
and
lea
adc
jb
push
mov
push
test
shll
xchg
imul
xor
lock
mov
xchg
out
push
and
sbb
ljmp
hlt
push
push
and
das
adc
arpl
mov
and
movsb
fld
ljmp
cmpsb
inc
cld
incb
lock
pop
pop
scas
fcoms
push
push
mov
data16
repz
xorb
jg,pn
daa
enter
sub
in
out
push
add
imul
push
mov
xor
adc
and
mov
scas
sub
jg
enter
lock
fisubs
ret
mov
ss
pop
lods
jno
dec
aam
test
jno
mov
cltd
jno
testb
dec
fs
add
or
ss
imul
shld
and
and
inc
sbb
mov
adc
popa
push
sub
loope
inc
sub
push
and
sbb
loope
int3
into
push
roll
inc
dec
dec
outsb
icebp
loope
loop
cwtl
lods
mov
dec
jmp
mov
out
and
shl
fbstp
inc
rorb
xlat
test
push
dec
mov
sub
and
pop
pop
lods
pop
push
fwait
xchg
dec
jmp
scas
pop
dec
xchg
cmpsb
lock
inc
cmp
scas
xor
push
dec
imul
xchg
and
sub
or
xor
pop
insl
adc
addr16
or
out
in
or
addr16
add
pop
sub
aaa
aad
xlat
pop
out
jae
mov
cmp
xchg
jle
adc
insb
mov
push
in
fdivrs
mov
add
push
xlat
push
and
mov
filds
add
repnz
push
xlat
adc
sbb
out
mov
cmp
fimuls
call
cld
repz
and
adc
pop
es
adc
xor
shll
or
aam
cmp
imul
pushl
pop
adc
sbb
cmp
xor
push
or
outsb
fdivrl
pop
pushf
cmp
test
mov
xchg
icebp
dec
repz
pushf
mov
out
jmp
sub
mov
lock
incl
mov
xchg
test
fisubs
ljmp
mov
sbb
shlb
dec
xlat
fcompl
xor
xchg
push
in
jle
xchg
stos
or
xchg
sti
mov
mov
jmp
mov
icebp
les
push
scas
in
repnz
jns
mov
add
and
stos
in
mov
jge
push
outsl
cltd
push
push
lret
mov
test
dec
cmp
cmpsl
xchg
ljmp
scas
and
inc
pop
mov
dec
sub
xor
mov
je
jmp
fists
aas
mov
hlt
adc
cltd
sbb
adc
shrl
out
into
pop
sbbl
xchg
insb
cmp
add
imul
cmpb
xlat
outsb
rcll
mov
pop
rolb
mov
scas
inc
lahf
cwtl
scas
jl
jae
jp
lea
scas
pop
push
test
push
test
fcmovnbe
loop
pop
push
sbb
and
xor
jmp
fwait
mov
mov
cld
rcll
adc
repnz
test
and
les
bound
lds
xor
push
and
inc
add
sub
das
fwait
sub
push
xchg
dec
icebp
fdivr
adc
lods
fdivr
adc
xchg
push
out
test
add
ss
add
mov
xchg
aam
mov
jae
cmpl
xchg
addr16
aas
mov
sbb
test
addb
pop
cmc
mov
lret
loopne
jp
jmp
lods
mov
int
adc
mov
out
dec
dec
andb
repnz
jl
fwait
adc
sbb
mov
rclb
xor
pop
icebp
out
cmpsl
xchg
push
pop
jo
ficompl
outsb
insl
test
inc
mov
rolb
mov
pop
roll
push
sub
sub
mov
mov
jo
mov
adc
dec
cld
push
jae
fwait
or
adc
cld
mov
sbb
mov
cmp
loope
movsb
sub
test
mov
and
and
mov
push
call
pop
loope
and
es
mov
or
rorl
xor
push
hlt
pusha
sbb
mov
jne
data16
cld
mov
pop
pop
add
push
mov
add
push
and
fistpll
xor
nop
dec
outsb
xor
fisttpl
add
scas
repz
push
data16
leave
push
out
xor
pop
ffreep
das
adc
push
inc
mov
dec
arpl
popa
dec
cmpsb
pop
mov
ficompl
je
sub
pop
mov
addl
inc
dec
push
aaa
addb
pop
ds
jb
cmp
movsl
leave
inc
mov
inc
in
xchg
inc
pop
push
cmp
add
inc
mov
scas
jnp
sahf
fs
sbb
hlt
scas
push
xchg
xchg
cmp
notb
cmpsb
pop
fwait
adc
pop
xchg
enter
jae
ja
ss
lret
mov
nop
pop
and
mov
pop
sbb
xor
and
push
inc
aam
jg
adc
iret
ja
xor
insl
xchg
aas
pop
push
mov
inc
pop
cltd
rcrb
addr16
movsb
ds
sbb
inc
lcall
dec
xor
mov
pop
repnz
adc
sahf
loop
mov
cmc
push
pop
dec
lods
jp
inc
xchg
outsl
out
adc
mov
push
adcl
mov
add
adc
dec
xchg
repz
movsl
lahf
in
popa
push
push
adc
cli
imul
jp
sbb
inc
and
sbbl
xor
pop
dec
mov
out
test
stc
test
add
pop
cld
jmp
ret
fs
add
or
cli
push
mov
sbb
stos
rolb
scas
pop
ss
mov
push
mov
jecxz
mov
fs
cld
lock
push
aad
inc
sti
scas
jo
lods
fsubrs
loope
stos
stc
out
jl
cmp
enter
dec
insb
mov
clc
adc
movsl
cmp
mov
stc
xor
sub
nop
mov
push
outsl
pop
pop
mov
dec
jnp
push
testb
in
mov
gs
inc
cmp
rolb
or
fists
inc
mov
aam
inc
jno
fcoml
push
xor
fcmovnu
add
out
dec
popa
inc
data16
jb
push
mov
pop
pop
enter
mov
jmp
lret
add
ja
cmpsl
xchg
call
addr16
repz
cs
lds
scas
in
pop
sub
jg
ret
in
pop
xlat
in
xchg
repnz
mov
and
subl
cmpsb
and
add
rolb
sbb
int3
pop
mov
sub
out
inc
fcompl
jmp
mov
insb
stos
adcl
cmp
mov
mov
mov
pop
imul
fcomps
and
cmp
mov
scas
cmp
mov
jb
popf
ficomps
lret
scas
inc
rcl
xchg
dec
inc
sub
sub
push
mov
mov
call
cmp
dec
and
sbb
rcrb
arpl
sub
rcrl
std
pop
stos
rolb
mov
pop
scas
xor
add
and
cmp
inc
mov
mov
xor
xchg
loopne
xchg
mov
pop
push
pop
push
adc
mov
and
adc
stos
xchg
sbb
fcom
pop
mov
pop
pusha
cli
std
sub
xchg
mov
sbb
or
in
test
xor
and
xor
xchg
imul
es
and
je
fwait
sub
jns
mov
outsb
mov
sub
dec
push
jae
push
test
cmp
push
and
mov
rcll
cmp
inc
xchg
test
pop
push
sbb
mov
imul
xor
test
je
clc
sbb
adc
pushf
lods
inc
mov
mov
test
adc
sahf
jle
and
roll
outsl
jns
int
fwait
call
in
add
push
hlt
xchg
add
gs
cmp
jl
sub
sti
sbb
dec
and
add
mov
dec
ficoml
mov
cli
jb
sub
or
out
cmpsl
pushf
pop
sti
mov
pop
jnp
out
dec
mov
ljmp
enter
jp
int3
icebp
xor
testb
fnstcw
js
int
xchg
insb
add
jns
mov
lods
push
sub
ret
hlt
jnp
in
cmc
cmpsl
mov
lahf
cmp
xchg
movsl
orb
dec
mov
pop
adc
add
mov
push
movsl
and
iret
lock
mov
and
mov
in
popl
loope
cs
stos
aaa
pop
icebp
in
movsl
mov
stos
jne
mov
sbb
cltd
push
insl
lods
dec
popf
xchg
xchg
push
sbb
insl
sbb
cmp
stos
mov
fidivs
xor
aad
popl
stc
jmp
push
cmp
scas
xor
xchg
xchg
shrl
mov
sub
jb
out
out
pop
lcall
add
out
js
ds
mov
pop
std
sbb
sbb
jle
fnsaves
and
insl
leave
and
xchg
rclb
jbe
icebp
mov
in
sub
fmulp
dec
inc
adc
outsl
movsb
out
mov
es
mov
in
mov
outsl
push
jo
leave
inc
adc
dec
cmp
mull
add
pushf
or
dec
inc
out
inc
mov
movsl
int
mov
shr
std
jno
cld
jo
jo
stc
fs
sub
fidivs
xor
sbb
mov
dec
negb
shll
add
into
jle
aaa
cmp
popa
fstpl
shlb
xchg
inc
sbbb
pop
stos
or
jnp
mov
cmp
add
jg
adc
dec
mov
cmp
cmp
cmp
adc
and
mov
dec
dec
mov
out
cs
dec
mov
fsubs
jle
cmp
test
inc
mov
mov
call
lret
mov
pop
popf
xchg
push
mov
or
jno
out
mov
in
sbb
inc
xchg
sbb
cmp
mov
mov
jne
adc
push
lret
filds
data16
sbb
mov
popw
adc
clc
ja
pop
mov
dec
sbb
jo
addr16
lcall
shrl
call
inc
int3
js
stos
mov
cmp
adc
jns
fdivr
mov
je
ja
sbb
mov
int3
es
mov
dec
push
or
add
mov
lcall
jecxz
adc
popa
sar
outsb
popf
sbb
inc
sbb
divl
fsub
and
jb
mov
push
inc
pusha
or
add
cmpsb
jmp
mov
daa
repnz
mov
push
hlt
xchg
xor
pop
js
add
rol
cwtl
repz
mov
pusha
mov
add
mov
daa
or
mov
mov
xchg
xchg
dec
stc
shrl
inc
add
lret
push
fcmovbe
imul
sub
mov
imul
in
adc
test
mov
push
cs
dec
jmp
lods
rclb
jo
insb
add
ljmp
jns
icebp
out
arpl
jmp
insl
mov
xchg
lds
call
rol
jnp
cli
lahf
inc
mov
pop
rcll
jge
mov
sub
loop
test
push
dec
icebp
mov
fistps
push
jecxz
out
pop
inc
xor
push
push
test
mov
pop
sbb
xor
or
mov
je
iret
xor
and
mov
adc
or
xorb
fs
loope
dec
dec
push
push
cld
inc
pop
mov
sub
lcall
cmp
ja
clc
dec
lahf
or
inc
pop
arpl
scas
leave
inc
add
daa
test
aad
stc
xor
ret
inc
sub
ljmp
mov
push
mov
out
push
clc
iret
dec
sub
test
aad
adc
test
rcrb
stc
jae
lcall
sbb
idivl
ja
in
xor
and
add
leave
mov
cmp
push
pushf
test
add
ficoms
jmp
pop
dec
or
jge
testb
pop
and
inc
repz
xlat
add
loop
push
lret
mov
aas
mov
lods
dec
push
mov
addr16
mov
xlat
insl
imulb
and
sub
fbld
mov
insb
pop
and
mov
mov
pop
cmpsl
mov
or
out
nop
mov
mov
adc
mov
xchg
xor
adc
popf
cmp
push
jecxz
repz
jo
daa
inc
sarb
arpl
sbb
xor
sahf
jg
and
mov
in
push
decb
outsb
mov
or
sub
jmp
sbb
lock
fidivl
or
iret
pminub
imul
mov
ficoml
popa
push
lds
aad
je
jl
mov
mov
lahf
xor
shlb
jno
ljmp
loop
dec
sub
shrl
jne
je
sub
xchg
xor
cmc
inc
add
js,pt
mov
nop
jmp
cmp
movsb
pop
adc
mov
scas
jle
cli
xchg
dec
cmp
lcall
clc
ljmp
insb
inc
sub
sub
jmp
in
icebp
andl
cmp
icebp
sbb
aas
hlt
inc
xor
aam
pusha
les
mov
mov
out
add
imul
dec
pop
add
scas
jne
pop
stos
outsb
mov
icebp
mov
mov
jnp
repz
out
mov
gs
lret
xchg
daa
mov
rcr
sub
xchg
push
jecxz
mov
mov
in
pop
aas
adc
pop
test
inc
popa
sub
adc
jb
dec
js
test
notl
clc
lret
test
es
jae
popf
sti
test
repnz
or
and
lret
outsl
cmp
jbe
sti
sbb
pop
mov
shll
rcl
sbb
mov
jbe
dec
push
imul
sbb
stos
mov
xor
sub
jmp
repnz
in
inc
cmp
push
out
mov
arpl
and
imul
cmpsb
and
jmp
add
ficomps
cmp
push
xchg
ficoms
xchg
or
inc
xchg
xor
or
std
xchg
or
lret
xchg
mov
cmp
inc
jo
sbb
mov
fisttps
cs
xor
cmc
ja
sub
mov
cmp
inc
sub
dec
test
das
cli
aas
out
in
test
leave
pop
sbb
pushf
cmpsl
jae
jbe
into
repz
fldt
test
ljmp
je
iret
push
jmp
call
aad
ficoms
add
sub
sub
pop
lods
add
add
and
jmp
sbb
in
mov
aas
dec
lcall
div
call
test
inc
xchg
jns
and
add
ss
aas
stc
inc
mov
out
cmpsl
lcall
stos
ja
push
pop
fdivrl
gs
cli
xchg
add
mov
cld
and
imul
or
push
imul
and
xchg
icebp
inc
mulb
loop
mov
mov
or
add
mov
ret
sti
out
lods
mov
add
ljmp
and
inc
mov
mov
or
cmp
dec
icebp
rorl
popa
in
int3
fcmovu
mov
jne
sbb
cmpsl
std
inc
jb
xchg
cli
xor
push
jnp
push
stos
std
xor
mov
add
xor
mov
shlb
xorl
push
mov
loopne
incl
mov
inc
or
mov
ja
outsl
mov
or
jge
repnz
xor
adc
int
mov
je
jg
push
test
jecxz
mov
sbb
xchg
adc
mov
xchg
imul
xchg
mov
mov
subl
cmp
jns
scas
mov
jb
movsl
mov
xchg
pop
fdivr
inc
icebp
sahf
pop
daa
pushf
adc
push
lods
lcall
rclb
push
push
cltd
icebp
cld
mov
mov
push
repz
or
in
insl
movsb
add
mov
fs
int
add
xor
add
cwtl
fwait
imul
lret
and
rcr
arpl
lret
out
or
pop
repz
push
fisubl
aad
inc
or
push
inc
sahf
mov
iret
sbb
dec
stos
aaa
adc
mov
ret
shlb
mov
sbb
pushf
inc
pop
rcr
mov
inc
or
fimuls
mov
jge
adc
mov
cmp
xor
mov
jp
jge
mov
mov
fstpl
lcall
pop
lock
lods
mov
jo
nop
insb
dec
ret
mov
lahf
push
mov
mov
pop
mov
mov
sbb
fidivrl
std
inc
mov
jo
mov
cmp
dec
cltd
jne
sub
xor
pop
jae
insl
jo
mov
sti
ljmp
xchg
and
fdiv
lcall
pop
inc
or
xlat
jbe
insl
fnstenv
addr16
fcmovu
jno
div
ja
stos
movsb
jle
test
loope
fcoml
stc
fistpll
add
push
outsb
xor
xchg
mov
sarl
test
fcoms
sbb
sbb
fisubrs
sub
ret
ficomps
or
and
mov
fldt
adc
push
inc
lahf
mov
mov
xor
xor
rcrb
je
call
rcrb
jl
jge
int3
in
mov
test
mov
push
test
jl
push
rorl
cmp
jns
xor
mov
mov
add
push
les
push
ss
or
fdivr
ret
insb
mov
popa
ss
popa
ret
pop
out
in
inc
ss
push
int3
imul
mov
jle
addr16
adc
cli
lahf
sub
inc
gs
repnz
xchg
cmp
sbb
addl
sub
or
mov
add
pop
jp
mov
lods
rolb
adc
mov
sbbb
aad
lret
dec
test
pop
pop
add
pop
ds
inc
sysenter
mov
mov
mov
dec
mov
lds
loopne
mov
cmp
loopne
test
call
call
ret
pop
stos
xchg
in
sub
dec
fs
adc
in
adc
addl
outsb
inc
stc
incb
cld
sbb
jl
aas
mov
add
or
test
in
arpl
lea
jp
sbb
arpl
xchg
ja
or
push
arpl
imul
outsl
xchg
mov
icebp
inc
cmp
std
in
adc
sbb
fcmovb
xchg
je
adcb
pusha
dec
rorb
push
sub
xchg
push
mov
fwait
shlb
jmp
jecxz
add
fdivrl
mov
pop
mov
pop
popa
pop
dec
loope
pop
adc
and
int
add
mov
clc
dec
inc
data16
data16
mov
xchg
lock
cmp
cmp
ds
pop
lods
shlb
pop
push
and
or
stos
adc
pop
lret
inc
xlat
je
stos
and
jecxz
or
mov
mov
xchg
pop
aas
fnstcw
cmp
push
out
hlt
inc
inc
push
jp
loope
xchg
inc
in
jno
in
leave
mov
xor
or
mov
inc
jecxz
jb
sar
lret
or
add
mov
mov
fcomps
cmp
mov
movsl
sbb
rcrl
fcomip
jo
lahf
fimull
push
cmc
push
test
inc
push
loopne
fidivl
inc
xchg
cmp
inc
mov
inc
scas
stos
inc
jmp
push
test
adc
sti
fstps
push
mov
mov
shr
inc
inc
out
and
repnz
insl
in
inc
push
repnz
ret
cmc
dec
adc
scas
inc
cmp
mov
shll
sub
testl
ja
add
movsb
mov
mov
inc
push
mov
in
bound
outsl
mov
sarl
pop
or
jmp
or
repz
xchg
ja
out
jle
xchg
ss
xor
imul
jbe
gs
and
mov
mov
sub
add
xchg
add
outsb
xor
push
adc
dec
shll
aam
nop
add
adc
sbb
ret
stc
int
sarl
push
cmpsb
pushf
pusha
xorb
mov
dec
daa
pop
xchg
lcall
lcall
mov
lds
and
mov
or
inc
cmp
mov
xchg
dec
pop
mov
imul
push
in
push
cltd
cmpsl
mov
outsb
into
enter
sti
test
test
das
lret
data16
or
jp
out
sub
imul
pop
xorb
push
call
or
pop
test
sahf
inc
push
into
ffree
mov
orl
shll
cmc
std
ret
push
das
pop
jns
mov
and
fildll
add
cltd
repnz
notb
lret
and
icebp
jge
dec
cltd
jp
dec
cmpsb
jb
inc
arpl
pop
mov
mov
pop
and
jns
fisubrs
sbb
lods
loopne
rcl
xchg
dec
push
fwait
or
inc
adc
sarb
push
push
sub
test
xlat
xor
xor
xchg
nop
pop
repz
cmp
imul
mov
inc
lsl
insb
mov
push
pop
lock
push
mov
cmp
xchg
xor
pop
mov
or
stos
cmp
fildl
mov
mov
jle
push
fidivs
in
cs
shrl
mov
mov
repnz
in
adc
test
mov
cmc
dec
add
repnz
clc
or
enter
push
negl
pop
pop
dec
outsb
xchg
and
jnp
shll
fimull
mov
int
pusha
and
push
lret
push
push
lods
xchg
lock
push
nop
mov
in
fdivrs
mov
insb
inc
pusha
lcall
sub
dec
mov
loope
mov
push
jg
push
sbb
adc
mov
cmp
xor
jb
push
inc
cli
adc
outsb
adc
jo
in
jb
lret
xlat
test
sbb
xchg
mov
lods
mov
into
mov
dec
jecxz
lret
cmp
push
or
mov
sahf
inc
hlt
test
out
js
ljmp
mov
dec
test
lcall
or
rorl
xor
xor
mov
divb
fs
add
popa
dec
pusha
jnp
out
fld1
cmp
ret
inc
add
pushf
xchg
pcmpeqb
xlat
xorw
push
jno
push
mov
iret
fistpl
adc
out
mov
add
inc
in
dec
and
stos
out
or
pop
jecxz
pop
sub
loopne
les
jb
inc
mov
hlt
ljmp
mov
and
int
fbstp
cmp
out
lods
imul
push
pop
pop
jbe
xor
faddl
clc
jecxz
cmc
daa
xchg
lret
xchg
sub
fisubs
sahf
push
aad
mov
cmpsl
aad
fcomp
out
jns
sub
or
push
ret
pop
fstl
adc
pop
push
xor
test
mov
and
xor
pop
dec
or
jne
stos
in
inc
insb
push
pop
sbb
pop
cmp
icebp
xchg
shlb
mov
stos
insl
shl
inc
stos
add
jp
lock
out
pusha
mov
or
insb
imul
inc
cmp
xchg
pop
call
xchg
dec
xor
cwtl
mov
lods
jnp
cmp
adc
loope
ja
pop
mov
jmp
mov
scas
push
jno
add
hlt
fs
nop
aas
or
sbb
inc
divl
xchg
pushf
jmp
add
iret
orl
push
arpl
repnz
ja
std
dec
ljmp
jecxz
imul
cwtl
outsb
xchg
test
xor
mov
xor
xor
sub
mov
xchg
dec
adcl
aam
paddsw
imul
pop
pop
pop
push
mov
mov
xor
pop
mov
shrl
mov
mov
in
out
cmp
jl
std
fildl
sbb
movb
adc
dec
rol
icebp
cmc
aaa
mov
push
imul
xor
fwait
jmp
std
sahf
mov
int
roll
add
mov
mov
loope
xchg
pop
jbe
xchg
mov
ds
fimull
fs
or
dec
add
lock
jl
and
xor
mov
push
sbb
lods
sub
outsb
cmp
inc
or
lret
mov
xlat
test
inc
movsb
ret
aas
xlat
rcll
sarl
sbb
inc
into
cld
sub
scas
push
xor
js,pn
scas
sbb
sbb
pop
sbb
daa
mov
adc
ds
fsin
out
add
mov
cwtl
pop
xchg
movsb
xchg
andl
jecxz
mov
es
out
mov
pop
out
jmp
shlb
mov
xor
fsubr
jmp
push
dec
in
dec
push
jb
lahf
inc
jecxz
orl
fcmovnu
mov
mov
loop
or
shlb
movsb
push
mov
aas
and
popf
inc
int
mov
xchg
test
pop
nop
jno
mov
sbb
cmp
mov
or
rclb
push
xchg
adc
dec
xlat
lds
decb
push
inc
cmp
xchg
sbb
fiadds
scas
iret
xchg
push
sbb
mov
or
nop
mov
dec
iret
pop
dec
testl
ds
out
sub
imul
out
adc
loope
adc
das
mov
push
addr16
cmpsl
adc
insl
adcb
push
into
mov
iret
sbb
sbb
pop
jae
push
jmp
hlt
jno
orb
leave
es
cmp
stos
jne
pop
jl
nop
add
das
xchg
xchg
mov
and
xor
inc
inc
movsb
sbb
fdivrp
les
mov
pop
scas
pop
ljmp
inc
push
int3
ljmp
pop
movsl
dec
mov
adc
ret
fdiv
es
aad
or
mov
fcmovnbe
jb
cmp
push
fcmove
or
test
mov
outsb
sbb
arpl
mov
adc
scas
jo
jb
loope
mov
cmp
stc
lahf
mov
vmovupd
test
sub
cld
or
dec
and
mov
xchg
aaa
push
shrb
cmp
loopne
ljmp
fists
and
jbe
inc
push
daa
or
jecxz
mov
jns
add
push
jo
jecxz
fbstp
aas
cmp
xchg
orl
inc
mov
fbstp
xchg
std
mov
mov
inc
in
mov
push
and
in
cld
inc
push
xchg
popf
cmpsl
cli
loope
bound
pop
lds
cmp
test
paddd
xchg
cli
push
push
jno
and
xchg
inc
dec
push
add
gs
push
push
int
and
sbb
iret
imulb
add
les
add
mov
cmp
inc
sbb
das
jp
repz
imul
lods
jle
mov
add
xchg
mov
sub
fwait
lret
add
xchg
pop
push
ret
push
add
cmp
cmp
mov
jge
jb
xchg
lock
pop
mov
jle
inc
xor
icebp
daa
insb
andb
cmp
dec
push
cmp
jle
daa
lock
lds
mov
lea
es
and
dec
inc
mov
adc
inc
lods
add
dec
aas
cmc
insl
or
stos
mov
jp
jg
es
loop
pop
or
and
and
cmp
or
inc
daa
dec
xchg
inc
psubusb
mov
mov
lods
xlat
incb
push
divl
sub
xor
mov
mov
fucomi
fsubp
lea
push
cmpl
mov
lret
out
mov
call
fists
mov
or
lods
xor
stc
arpl
clc
or
pusha
rorl
cmpsb
xchg
sub
sub
cmp
sub
add
jecxz
clc
andb
mov
pcmpgtw
cmpsl
fs
out
into
shl
xor
sub
mov
repz
xchg
dec
adc
hlt
inc
xchg
push
lret
xor
push
mov
sub
lds
into
dec
in
jne
bound
xchg
outsl
enter
cmp
adc
push
cmp
mov
popa
xchg
dec
pop
outsl
fistpll
jnp
mov
jge
jbe
push
push
pushf
pop
call
out
push
ljmp
lods
pop
sahf
outsb
cs
sub
sub
jecxz
jmp
sbb
dec
daa
pop
push
ficomps
or
dec
inc
xor
fsubrs
fidivl
xor
xchg
test
jnp
cmp
arpl
push
jge
std
es
pop
jno
or
shrb
in
jnp
call
mov
sub
dec
sbb
ja
ret
call
pop
nop
sbb
hlt
fimuls
adc
pop
dec
push
outsl
lods
loop
add
push
dec
xchg
movsb
add
mov
pop
jmp
jg
sbb
lea
adc
and
mov
inc
test
aaa
jbe
adc
inc
xor
es
jge
pushf
stos
pop
dec
cmp
mov
cmpl
and
inc
sbb
jo
cli
bnd
pop
jae
lds
push
hlt
ret
jo
xchg
mov
adc
cmp
lret
test
cmc
push
jbe
sahf
cmp
lret
push
shr
inc
dec
std
mov
test
push
xchg
push
xor
mov
test
mov
mov
dec
es
pushf
out
push
ret
dec
and
test
subb
mov
aas
outsb
ja
leave
mov
inc
shrl
lods
std
xchg
xchg
out
pop
cwtl
mov
jbe
jns
sub
xor
push
fcomip
cmp
inc
jns
xchg
sti
ret
sub
push
outsl
sub
xchg
lods
inc
dec
inc
dec
cmp
or
stos
ret
mov
mov
push
aad
pop
insw
and
lods
inc
inc
inc
cmp
sub
adc
outsl
fadds
or
test
movsb
into
sub
std
mov
aad
fs
adc
or
or
aas
aam
xor
cmp
add
retw
fcomp
fadd
loope
xchg
cld
mov
inc
insb
cwtl
add
cmc
push
iret
es
cmp
jae
inc
dec
out
xchg
in
stos
cmpsb
mov
lods
mov
adc
or
pop
sub
xchg
or
jp
add
push
jns
hlt
xor
jge
add
sub
xchg
pop
jno
adc
mov
subb
dec
cmpsl
nop
push
out
gs
inc
scas
data16
and
adc
pop
shll
cld
cmpsb
and
jp
shlb
xor
mov
vmwrite
mov
or
xor
mov
push
lock
cmp
sub
cli
jbe
sbb
or
mov
and
cld
fidivs
or
cmp
xchg
mov
lahf
xor
mov
imul
leave
dec
gs
jno
cmp
mov
in
and
test
xchg
test
push
rcrl
mov
scas
or
into
cld
lahf
adc
cmpsl
into
out
shrl
pusha
call
cmp
insb
shlb
sbb
xlat
mov
mov
stos
push
xor
push
jecxz
adc
enter
cmpsl
jae
or
test
lret
push
arpl
pop
out
xor
in
pop
lcall
pop
outsb
xchg
icebp
push
es
shlb
out
into
xchg
jp
sub
in
jns
jo
decb
lock
das
shll
rcrl
jno
adc
je
dec
int3
hlt
sti
int3
in
flds
jmp
mov
fxch
outsb
cmpb
and
lret
int3
push
jmp
jp
ss
xor
js
repnz
xchg
mov
fwait
xorb
mov
jle
fistps
ret
stos
adc
xchg
js
xor
jmp
stos
hlt
xor
and
fdivs
shlb
sub
shl
sub
cmp
sub
mov
and
sti
das
mov
lcall
mov
push
xor
inc
dec
mov
dec
in
or
xor
push
movsb
pop
sub
arpl
xchg
mov
movsl
notl
stc
std
stos
jge
mov
aam
pop
xchg
sub
fstl
or
fs
push
insb
inc
adc
inc
adc
sub
or
iret
mov
pushf
jecxz
jb
mov
mov
mov
xchg
mov
mov
or
in
shlb
enter
add
out
pop
pop
lcall
orb
lcall
mov
les
insl
orl
jne
sbb
or
or
inc
sub
cltd
cmp
leave
mov
jb
imul
jmp
dec
scas
ljmp
sub
dec
or
ret
cld
cmpsb
inc
in
mov
and
outsl
xchg
rol
sbb
addl
jbe
mov
cwtl
movsb
xchg
ss
fdivl
jns
dec
ja
inc
jp
movsb
pop
repz
cli
inc
fprem
pop
pop
mov
jmp
fdivrs
es
xchg
mov
jmp
add
mov
repnz
loop
add
out
dec
pop
dec
mov
add
ds
mov
jns
sub
mov
imul
leave
movsl
adc
dec
cmpsb
out
inc
daa
es
push
aad
imul
jae
mov
or
mov
adc
out
dec
cmp
mov
cli
jbe
cmp
mov
addr16
inc
leave
mov
idivl
inc
imul
jle
adc
pop
mov
push
or
movsb
sub
ja
sub
jg
sbb
dec
and
shll
fld
aaa
mov
add
or
fs
and
sub
and
and
push
aam
lock
aad
cmc
inc
sti
inc
int3
xchg
xchg
xchg
sub
je
sbb
iret
or
sarl
jbe
ffree
jmp
pop
mov
enter
outsb
dec
fisttpll
and
fs
xchg
xor
dec
sbb
sbb
sub
and
adc
pop
out
pop
popf
addr16
mov
pop
jae
sahf
cwtl
add
fs
sbb
jae
sahf
push
dec
inc
dec
xchg
and
dec
dec
xchg
push
int3
push
ficompl
mov
rcl
add
xchg
pushf
popa
stos
shlb
jecxz
aaa
call
jp
scas
inc
imul
jns
push
fstpl
imul
cld
xor
cmp
jbe
and
jnp
fbld
xor
mov
movsl
cmp
pushf
sub
jb
imul
mov
inc
push
into
mov
inc
inc
imul
cmp
add
xchg
in
ljmp
jl
mov
test
dec
adc
cmc
cmp
mov
xor
adcl
jg
hlt
lahf
ljmp
loop
popf
into
adc
repz
xchg
ljmp
fisubrl
out
negb
andb
or
aad
stc
movsb
mov
adc
int3
add
loope
lahf
lods
incl
sbb
ljmp
das
pop
ja
into
mov
cwtl
push
std
jl
cld
imul
pop
or
dec
push
xchg
repnz
les
rclb
mov
movb
xchg
mov
cld
das
sbbl
lcall
mov
mov
cmpsl
jb
pop
gs
call
mov
pop
das
mov
sub
sub
out
jbe
dec
subb
or
xor
inc
int3
or
mov
cmpsb
dec
xor
jmp
imul
pop
xlat
lods
inc
out
popa
inc
mov
push
bound
jmp
test
aas
pop
pop
xor
lret
jne
dec
cmpb
xchg
movsb
arpl
cmp
ret
mov
clc
sub
xchg
jl
and
fistl
popa
cli
jmp
adc
mov
out
dec
lods
adc
mov
imul
inc
pop
popf
xchg
call
fsubr
sub
mov
cld
push
push
mov
add
push
in
test
pushf
imul
sbb
lds
hlt
cmpsb
ficoms
mov
inc
pushf
inc
jbe
sti
push
loope
mov
stos
push
cs
push
mov
jp
xchg
jnp
cmp
ljmp
sbb
adc
je
popl
cmpsb
adc
dec
and
js
out
je
ss
xchg
popl
xor
movsb
cmp
xor
sub
push
mov
loopne
adc
and
rcll
scas
movsb
pop
adc
pop
aam
pushf
sub
dec
test
inc
xchg
inc
test
rcl
or
jbe
cmpl
jle
lret
jmp
or
xor
test
sarl
pop
inc
push
adc
jle
inc
loop
out
into
sub
and
xor
adc
gs
int3
mov
fiaddl
icebp
sub
mov
inc
cltd
je
cmp
loop
scas
or
adc
mov
push
push
clc
xchg
and
andl
and
xchg
mov
mov
aad
imul
scas
mov
cs
or
mull
add
lock
out
mov
cmp
push
push
dec
push
in
or
clc
imulb
mov
daa
mov
mov
rol
push
push
dec
and
xor
lahf
cmp
cli
fwait
insl
iret
mov
fisttpl
repnz
push
dec
sbbb
sbbl
loope
addr16
aam
mov
movsl
scas
and
loope
pop
ret
adc
sub
ffree
sti
out
in
rclb
cmp
and
out
xorb
mov
xchg
and
inc
fsubs
call
push
ja
movsl
xor
xchg
add
pop
and
jecxz
data16
xlat
into
repz
lcall
mov
lahf
ud1
push
pop
fnstenv
cmp
lock
and
xchg
push
rolb
add
enter
add
stos
mov
fsubrp
pop
push
cs
mov
daa
dec
and
daa
test
add
mov
dec
daa
stc
xchg
lods
in
lock
out
push
aam
jo
push
in
add
test
xor
loopne
adcb
jg
or
push
add
mov
sub
push
jmp
mov
test
jbe
inc
sub
shlb
sub
jge
inc
mov
loop
mov
in
xchg
bnd
jb
and
jge
push
mov
dec
adc
test
jae
out
lods
cmp
int
add
pop
adc
mov
lret
repnz
dec
push
mov
pop
push
xchg
sub
dec
cld
stc
push
mov
call
leave
in
sub
adc
and
pop
popa
cmpsb
push
enter
push
imul
cli
out
sub
cltd
push
fildl
ds
push
fnsave
push
aam
cmp
stc
jb
dec
pop
clc
es
lods
pop
jl
mov
push
inc
aad
popf
xorb
flds
inc
lret
add
pusha
int
jne
mov
pop
mov
inc
xor
lea
sub
dec
lock
enter
fidivrs
in
aas
popa
push
and
in
xchg
or
aad
mov
imul
cmp
mov
rolb
sub
lock
jns
xchg
ret
or
outsl
dec
adc
pop
stc
push
mov
subl
inc
pop
popf
or
jb
in
xchg
jl
out
call
mov
fimuls
insl
rorb
jmp
data16
nop
ss
cld
pop
mov
adc
mov
dec
sub
les
insb
jae
pop
test
mov
jo
fbld
outsl
jle
dec
cmc
xor
idivb
iret
jp
cmc
fwait
popf
icebp
cs
daa
out
pop
enter
in
mov
sbb
and
ljmp
adc
mov
lea
dec
mov
xor
ja
xchg
in
fwait
lret
adc
scas
push
jle
and
scas
add
and
jg
shr
pop
dec
sub
lock
xchg
xchg
into
insb
mov
push
fldl2e
data16
mov
mov
mov
leave
cmp
xchg
jnp
loop
jl
mov
enter
pop
testb
xor
shrl
jge
into
insl
cmc
pop
enter
push
ljmp
pop
jae
adc
inc
sahf
adc
inc
mov
mov
aam
push
or
scas
adc
les
xorl
or
pop
pop
mov
inc
dec
push
inc
adc
mov
pop
test
push
mov
loop
cmp
pop
pop
dec
out
sub
push
sarb
jns
aas
cmp
insl
leave
sub
mov
stos
adcl
insb
jno
or
lret
push
cld
adc
fisubrs
loop
test
or
mov
mov
add
rclb
sbb
adc
loopne
xchg
mov
fimuls
fs
mov
daa
popa
add
gs
pop
inc
push
sbb
movsl
jmp
xor
arpl
pop
js
inc
pop
ret
dec
or
movsb
inc
or
jl
dec
movsl
mov
negl
fucom
loop
fisttpll
fs
pushf
dec
dec
mov
ljmp
inc
sub
mov
dec
sbbb
mov
sub
inc
and
xchg
ja
leave
mov
jo
mov
aam
imul
adc
leave
or
pop
xchg
push
or
fidivrs
out
mov
mov
xchg
pop
pavgb
imul
repnz
pop
push
ds
popa
xchg
je
inc
mov
sub
pop
pop
cwtl
sub
or
aas
pop
or
dec
pop
call
dec
scas
aaa
stos
sbb
aam
fistpll
ljmp
pop
sahf
mov
scas
loopne
rcrb
or
popf
and
sbb
cmp
fwait
add
sbb
xchg
ss
xchg
and
and
fisubrs
popf
shlb
cs
cmp
xor
nop
sub
dec
bound
dec
std
js
mov
arpl
lcall
push
pushf
aaa
mov
cwtl
pop
sahf
test
in
ret
cmc
stc
mov
adcl
inc
fwait
push
sub
xchg
add
and
add
pop
add
aad
add
fwait
insl
xor
jno
fildll
mov
outsl
repz
inc
fwait
push
daa
pop
outsb
test
stc
in
mov
mov
jecxz
aam
inc
arpl
xor
fdiv
jo
inc
outsb
jg
or
lret
sub
out
out
outsb
push
adc
add
dec
add
iret
push
sub
lret
mov
sahf
iret
ds
mov
push
aaa
repnz
int
inc
es
sub
test
lods
test
jmp
jno
pop
inc
repz
pop
out
or
bnd
adc
mov
bound
push
mov
push
and
insb
xor
cli
mov
push
pop
pop
icebp
add
cmp
leave
insl
xchg
stc
adcl
stc
pusha
clc
lods
mov
mov
mov
dec
pop
xor
push
push
or
xchg
push
cmpsb
outsl
or
xor
out
push
push
push
es
arpl
sar
push
shlb
ds
dec
fildll
or
gs
jnp
cwtl
add
in
xchg
insb
movb
mov
xchg
std
add
ja
pop
mov
nop
loope
pop
shrb
pushf
jmp
adc
jmp
and
pop
dec
fidivrs
repz
lret
call
shrb
pop
lea
cli
pop
inc
imul
adc
jno
jp
adc
icebp
adc
ds
out
cmp
cmp
cli
mov
sbb
xlat
pop
testl
push
pop
and
movsl
mov
xchg
push
inc
aad
mov
sub
pop
ja
js
and
in
mov
fwait
xchg
insl
add
test
add
add
mov
lahf
outsl
sub
jnp
sbb
add
in
test
mov
pop
in
mov
add
lret
mov
pop
sarb
hlt
loop
shll
rcll
fldl
sub
es
es
test
lret
ret
and
xchg
dec
out
lock
mov
fmul
dec
dec
cmpl
jg
mov
shll
xchg
rep
inc
notb
std
sub
sti
mov
repz
xor
iret
inc
add
cmpsl
das
dec
adc
ljmp
xchg
into
fwait
sub
mov
xor
cmp
mov
sahf
cwtl
inc
fiaddl
les
pop
repnz
cmpsl
cli
xor
fwait
jae
scas
mov
lahf
lock
test
das
push
jmp
enter
fiadds
mov
ljmp
and
sti
or
insb
mov
push
cltd
cmpsb
fsts
jl
ja
push
scas
fldl
arpl
push
testb
mov
cmpsb
ljmp
outsl
mov
leave
es
popa
cld
repz
mov
out
fs
sub
pop
aas
fisubrl
dec
jecxz
fwait
sbb
xchg
pop
movsb
lds
fnstenv
inc
add
leave
lahf
jp
movsb
arpl
push
iret
ffreep
push
sbb
mov
lds
inc
add
mov
stos
loopne
lods
dec
add
adc
sbb
out
xchg
mov
into
add
adc
xor
jo
ss
fisubs
adc
data16
test
jecxz
mov
mov
fnstsw
aas
push
pop
push
je
mov
ret
test
cltd
xchg
out
jp
ds
dec
sub
jp
lods
cmp
mov
cmpsl
inc
xchg
xlat
cmp
notb
or
ret
inc
jmp
jl
and
into
cmpsb
test
add
aam
and
push
in
scas
and
addr16
call
lcall
orl
add
ret
repnz
jnp
cmp
cmp
cltd
xchg
sub
pop
cs
decb
ss
sbb
dec
out
mov
or
add
push
inc
mov
test
test
mov
cld
scas
push
rolb
cld
lock
xchg
push
aam
shlb
sbb
mov
fbld
je
push
inc
aad
jne
push
test
xchg
repz
push
add
dec
jbe
mov
adc
adc
inc
fistl
fwait
sub
call
loop
imul
mov
in
adc
pop
cmc
pop
xchg
xchg
prefetch
leave
push
lcall
stos
jecxz
add
mov
sbb
jge
inc
out
lock
fwait
pop
xor
mov
daa
ret
adc
lcall
mov
pusha
ret
jno
scas
pop
aaa
sbb
clc
pop
dec
cld
push
lahf
fdivr
aaa
sub
add
fisubs
inc
fs
faddl
daa
jmp
loope
xor
jno
and
mov
int
pop
pop
addb
arpl
jns
arpl
fucomp
pusha
jle
inc
xchg
push
adc
cmp
jae
add
sub
fisubl
pop
xor
loope
cltd
stos
xchg
adc
push
cmpsl
out
out
sub
outsl
xchg
sub
fisubrl
incl
lods
dec
jbe
xchg
cmp
bound
fs
scas
lea
cmpsb
sbb
mov
lret
cwtl
js
in
jne
dec
shl
push
mov
fldl
fs
mov
xor
sub
aaa
xchg
call
insb
cld
adc
cmp
movb
movsl
std
and
push
sti
cmp
cmp
or
sub
int3
movsb
les
call
mov
cmp
lcall
jns
mov
mov
jne
jge
push
push
adc
mov
or
inc
pop
xchg
push
sarb
loopne
dec
jmp
test
mov
iret
loopne
ljmp
xchg
sbb
inc
call
inc
jbe
int
and
jo
jge
push
mov
jmp
loopne
mov
mov
pop
xlat
jnp
cwtl
out
mov
shld
mov
fwait
daa
jbe
xchg
xchg
mov
fnsave
sub
int3
div
pop
xorl
or
push
cmp
mov
adc
lahf
shl
movsb
inc
lods
repz
fs
testl
add
pop
lea
mov
adc
mov
push
push
pop
cmpsl
fsts
or
jmp
lret
inc
cmpsl
sbb
xor
inc
pop
movaps
mov
jbe
jns
mov
cltd
mov
xchg
in
lret
jae
jg
idiv
fildl
push
rcrb
pop
fldt
pop
addl
push
iret
mov
in
sbb
jno
faddl
add
lea
popl
pop
jp
jb
push
mov
int
lods
xchg
cmp
add
clc
add
and
outsb
xchg
xor
jbe
xorl
xor
stc
mov
fistl
jge
add
fcomp
ret
pop
sbb
inc
cmc
dec
ja
sahf
cmpsl
hlt
mov
inc
pop
jl
repnz
sbb
cmp
xchg
pop
and
dec
xor
push
xor
icebp
mov
pop
nop
out
jle
pop
adc
cmpsb
ds
lods
loopne
jae
test
testb
add
cmp
mov
adc
dec
xchg
scas
dec
shrb
es
push
ret
sub
mov
stos
or
movb
jg
jmp
push
pop
lret
push
lods
mov
ds
jne
cld
push
loope
pop
sbb
cwtl
std
aas
dec
cmpb
mov
jnp
xchg
pop
and
clc
pop
in
sbb
arpl
fnstcw
inc
punpckhbw
or
and
mov
cmp
imul
repnz
pop
mov
mov
shrb
mov
ret
repz
sub
push
jp
jge,pt
fwait
xor
and
hlt
and
pop
lcall
test
sub
xchg
dec
dec
enter
ljmp
xlat
cmp
push
push
sbb
imul
and
negb
push
std
js
shlb
or
jecxz
mov
cmp
rcrb
pop
cmp
mov
loope
sahf
mov
pusha
xchg
and
fs
push
and
sbb
push
jno
jp
aas
dec
jp
pop
popf
aas
inc
sub
shl
mov
and
ja
sub
or
xor
cwtl
insb
in
iret
jge
push
inc
daa
sahf
pop
push
in
jno
cltd
leave
push
adc
xchg
mov
adc
icebp
push
add
je
insb
jmp
pushf
enter
jge
jp
add
cmp
push
cmp
fcoml
push
xchg
and
xor
or
imul
mov
inc
test
push
in
idivl
jg
aaa
fsubl
mov
cmp
or
sub
xor
ficompl
pop
call
xchg
dec
mov
std
sbb
jmp
pop
fists
cmp
inc
rcrb
gs
fsubs
clc
inc
imul
jmp
bound
idivl
out
out
addr16
add
add
les
mov
les
or
popa
sub
lods
insl
mov
iret
fidivs
nop
or
pusha
push
lea
mov
movsl
rcll
adc
lods
sbb
cli
sub
push
cmc
xchg
add
adc
int
adc
das
dec
push
arpl
mov
gs
push
push
insl
lea
cmpsl
mov
and
xor
les
push
xor
add
call
sub
lods
xor
add
mov
xor
and
or
bnd
sub
rorl
outsb
nop
sbb
repnz
rcrl
not
pop
out
les
pop
xchg
pushf
fdiv
adc
adc
jnp
rolb
sbb
xchg
pop
movsb
mov
inc
icebp
add
outsb
outsb
xchg
and
xchg
bound
xlat
xor
mov
icebp
mov
ss
jb
popa
cmpsl
mov
cmc
cmp
add
inc
int3
mov
in
xor
adc
icebp
decl
mov
rclb
std
and
add
inc
and
sbb
aaa
push
gs
jmp
and
cld
jno
or
daa
mov
movsl
or
or
cwtl
pusha
xchg
sub
xlat
adcb
push
jnp
push
adc
aad
add
scas
mov
daa
stos
mov
xor
daa
adc
pop
imul
xor
pop
mov
pop
cli
sar
in
jbe
jne
imul
or
cmpsl
cmp
mov
mov
mov
jg
mov
adc
daa
mov
adc
adc
sti
add
arpl
rol
jnp
xor
push
xchg
movsl
sarb
inc
outsl
iret
in
in
movb
mov
aad
push
pop
bound
sbb
mov
cmp
outsb
aaa
add
lods
fstp
push
dec
inc
inc
lret
das
pushf
and
popf
testl
out
das
pusha
adc
mov
ret
xor
scas
add
mov
sbb
aas
repz
out
fsubr
mov
arpl
adc
lcall
sete
jecxz
mov
fidivrs
rorl
lock
adc
xor
inc
cmp
xlat
addr16
jbe
mov
pop
push
lods
or
call
mov
les
push
in
cmpsl
jecxz
xor
cwtl
mov
dec
in
enter
xchg
or
push
pop
xor
cmc
jno
aas
pop
dec
mov
out
loopne
dec
cli
xor
pop
inc
cwtl
repz
xor
cmp
rcrb
incl
dec
stos
mov
fadds
pop
xor
test
cli
mov
inc
jno
cli
cltd
repz
into
fldt
push
test
les
test
stos
in
mov
fs
lock
inc
mov
cmp
gs
sar
sub
les
imull
faddl
pop
fidivrs
cmpsb
cmp
fistpl
jo
sub
incb
push
lahf
shlb
test
pop
inc
mov
and
dec
int3
jg
cwtl
lds
sbb
rcrb
daa
cs
rcrl
push
fcomps
sbb
fs
lahf
cmpsl
inc
mov
fmull
and
cmp
jo
fld
xor
xchg
jno
in
pop
lods
shll
sbb
aas
sub
lret
xor
push
call
loopne
fcoms
cmp
or
mov
cmp
cmp
ss
cmpsb
stc
out
xor
mov
outsl
push
mov
xor
mov
rcrl
xchg
in
fwait
ljmp
sbb
inc
clc
or
pop
enter
inc
dec
lods
mov
push
pop
dec
hlt
out
das
xchg
popf
sbb
test
xor
lahf
incb
rclb
mov
cmp
xchg
iret
lods
in
sub
mov
ss
fwait
sub
pusha
xchg
dec
das
lcall
sbb
int
test
stc
mov
push
fildl
mov
xchg
jbe
cmp
mov
popa
jbe
add
or
or
and
cld
loopne
mov
dec
test
add
aam
out
std
js
les
lcall
mov
cli
and
mov
cld
add
movsl
sti
jecxz
fadds
sbb
inc
mov
lea
pushf
sbb
mov
in
pushf
gs
cmp
test
js,pt
mov
fldl
adc
and
in
hlt
ffreep
xor
iret
sbb
shlb
loopne
jns
mov
stos
movsl
outsl
clc
inc
push
mov
ja
out
out
dec
jl
jne
sub
es
xchg
andb
aam
mov
dec
pop
into
sbb
imul
aas
and
xchg
add
out
rcl
pop
and
enter
cmpsb
cmc
and
in
cmp
ret
outsl
js
test
test
enter
das
test
sbb
cmpsl
or
cmp
cld
xor
jge
adc
push
in
sub
adc
mov
sub
stos
xchg
shrl
in
movsl
cmp
insl
cmpsb
roll
dec
inc
adc
xor
mov
mov
loop
shrl
shrl
dec
outsl
adc
mov
or
sub
insb
xor
into
mov
lret
fsubl
dec
in
nop
and
ret
outsb
add
testb
mov
xchg
cmp
lds
lret
push
xchg
shlb
jbe
mov
lock
sub
mov
cmp
in
and
cltd
cmp
xor
rorb
ja
dec
fistpl
iret
rcrl
sub
cltd
fldcw
sbb
std
mov
aam
dec
cmp
stos
mov
jae
mov
hlt
xchg
push
pop
sub
out
pop
scas
std
addr16
lods
iret
jge
mov
mov
dec
in
das
lock
mov
mov
sub
adc
jo
sbb
les
sub
fwait
daa
movsb
aas
lret
add
xchg
sbb
or
cmc
pop
push
leave
cmp
cmp
cmp
sub
adc
arpl
inc
les
inc
jo
pop
pop
dec
mov
sub
aam
cltd
rcr
std
js
pop
mov
push
lea
inc
andl
cmp
xor
push
mov
push
inc
pop
enter
jno
and
adc
inc
pop
lds
sub
or
shl
aaa
lcall
pop
lcall
jmp
sti
fists
push
cmp
dec
fbld
aad
jbe
add
sub
xor
scas
sarb
xchg
iret
lods
mov
imul
add
lds
jg
test
aaa
test
aad
or
das
popf
cmc
add
pop
repz
jecxz
fbstp
pop
or
or
lcall
lahf
je
xchg
jge
nop
add
outsl
dec
addr16
mov
inc
xchg
aas
jp
adc
mov
repz
cmc
jg
sarb
rolb
inc
scas
xor
xchg
mov
jno
fmull
sbb
movsb
and
fwait
cmp
daa
jmp
and
lock
mov
cmp
in
inc
cmp
jnp
lcall
jno
sti
sub
lock
stos
cmp
or
popa
mov
pop
add
add
aad
inc
mov
testb
or
dec
loopne
adc
mov
jmp
gs
sub
sbb
add
aad
ret
lahf
lods
add
adc
ror
mov
pop
in
mov
mov
pop
ja
or
xor
bound
fdivrl
xchg
xlat
jnp
gs
push
scas
mov
cltd
jbe
lods
out
dec
sbb
fstps
sub
outsb
testl
leave
clc
xor
mov
mov
sbb
push
inc
sbb
fs
push
xor
out
sbb
out
push
xchg
or
in
and
fcomip
pop
and
xchg
test
sub
adc
test
sbb
call
shlb
lods
hlt
arpl
and
inc
stos
push
data16
xor
jmp
cmp
lods
hlt
and
dec
lock
stos
lcall
fsubs
test
and
loopne
cltd
xchg
mov
mov
pop
push
hlt
xor
loopne
dec
xchg
add
in
cltd
mov
into
stos
mov
mov
jnp
inc
add
sbb
cmc
negl
mov
jns
lahf
xor
in
inc
mov
xchg
test
bound
push
dec
shll
sti
jg
loop
dec
add
fstpt
adcl
ret
int
sbb
dec
mov
movb
cmpl
pop
mov
mov
sahf
sbb
in
xchg
jecxz
nop
shlb
sbb
in
dec
push
adc
jbe
sbb
popa
addb
mov
aas
out
push
jg
push
rcr
shr
inc
insb
fcmovnbe
repnz
mov
jae
dec
lea
imul
or
addr16
mov
lahf
mov
clc
pushf
fiadds
notb
popa
bound
jge
dec
insb
cltd
je
dec
xchg
add
add
cmc
iret
cs
xchg
pop
xchg
pop
insl
sub
ficompl
popf
xchg
cltd
ret
andl
fstl
sbb
xchg
pushf
jmp
mov
fdivr
sbb
int3
cmp
mov
pop
jnp
add
stc
inc
mov
cmp
movsl
loopne
and
lock
or
and
mov
scas
xchg
jg
mov
repz
jb
or
aad
xlat
neg
push
pushf
stos
hlt
mov
in
pop
notb
dec
popa
jp
cmp
jnp
push
sbb
jmp
ficomps
xor
call
int
jb
pop
adc
and
mov
shrb
fisubl
jns
pop
cmp
sahf
pushf
dec
ds
add
fmuls
cld
cli
pop
ret
leave
adc
jmp
shlb
xor
mov
hlt
shrb
popaw
fsincos
popf
sub
cmp
pop
minps
inc
mov
sub
mov
sbb
lcall
mov
mov
loopne
or
mov
xchg
shlb
das
lcall
stc
rcrb
mov
dec
das
jecxz
dec
mov
dec
gs
adc
jb
stos
xchg
cltd
pop
scas
inc
mov
push
fcoml
inc
test
imul
je
dec
jbe
sub
gs
jge
ja
imul
inc
or
sbb
cltd
push
out
xchg
xchg
sbb
add
aam
lods
or
cmc
xchg
mov
repnz
in
fistps
lcall
xor
or
xor
xchg
jp
sbb
cmc
jecxz
jge
fdivl
arpl
adc
add
xchg
stos
dec
jge
and
xchg
pop
mov
adc
pusha
add
inc
pop
inc
xchg
cs
xor
pop
mov
mov
or
and
xor
xor
jbe
pop
pop
js
jb
mov
loop
lds
xchg
sub
lock
insl
out
sub
push
insb
int
insb
out
cmpsb
mov
jnp
add
imul
mov
flds
sbb
popa
ja
dec
fisttps
ss
mov
cmp
popf
lahf
cmp
mov
in
cmp
lea
cmp
push
jb
scas
rcll
fdivrl
clc
dec
bound
pop
sub
mov
insl
dec
pusha
inc
inc
or
xchg
jnp
xor
fsubl
loopne
and
mov
cmpsl
adc
insl
push
arpl
lcall
push
cmpsb
adc
pop
adc
notl
sub
nop
sub
mov
sub
pop
je
xor
int
pop
in
scas
repz
xor
jge
xor
sarl
sahf
push
sub
fmuls
jns
pop
cwtl
fcompl
sbb
adc
ficoms
addr16
jg
mov
mov
xor
fstps
nop
out
mov
les
cltd
aam
fldl
aam
imul
gs
cwtl
mov
sti
sbb
mov
jnp
mov
sbbb
adc
iret
xor
clc
mov
orb
sbbl
push
jne
mov
push
mov
pop
stos
add
lahf
mov
das
ljmp
sub
leavew
dec
xchg
mov
xchg
pusha
add
cmp
insb
push
or
sbb
adc
mov
mov
aad
mov
xchg
xor
adc
jne
dec
cmpsb
pop
dec
test
cmp
test
test
adc
ret
cmpl
clc
inc
fnsave
and
jecxz
in
daa
gs
out
dec
xchg
and
add
clc
cmp
jecxz
out
popf
lds
popa
jne
jae
inc
xchg
ja
jge
add
sbbl
and
push
mov
rcrl
loope
and
aaa
stos
lds
loop
cmp
mov
or
pop
cmpsb
sbb
mul
ss
lret
lret
stos
scas
mov
mov
sbb
and
cmpsb
inc
jmp
test
mov
imul
popa
pop
insb
mov
jno
fldcw
cld
clc
mov
iret
sbb
movsl
cld
sbb
push
call
jle
stos
push
arpl
cmp
mov
jb
stos
lods
dec
sbb
xor
loopne
jb
out
bound
je
push
jmp
jecxz
push
jb
pop
popa
or
ss
push
or
ss
mov
push
jg
dec
cmp
loope
sti
test
ficoml
mov
xchg
negl
iret
divb
sbb
popf
in
push
cmp
cmp
xchg
mov
jg
and
push
cs
jns
aas
xor
sub
add
nop
aas
stos
int
dec
sub
adc
push
test
mov
dec
add
mov
fimuls
enter
mov
xor
jge
sbb
movsl
and
outsb
mov
and
in
mov
ss
inc
aam
fcmovne
and
inc
sub
xlat
fisubs
mov
call
and
nop
jo
enter
mov
inc
imul
push
repnz
out
add
jmp
cmp
cmp
lods
icebp
jns
or
mov
inc
mov
fwait
xchg
adc
shr
jl
dec
xchg
test
xchg
push
or
mov
sub
dec
jae
mov
jge
and
dec
cmp
cli
push
push
push
adc
into
jnp
push
and
cmp
mov
inc
inc
negb
adc
aaa
mov
mov
push
fldcw
adc
cld
sub
and
xchg
push
mov
insb
mov
xor
lcall
gs
or
hlt
adc
mov
jmp
out
jbe
add
aas
mov
or
pop
daa
cltd
push
enter
hlt
inc
test
xchg
cmp
hlt
stos
loope
push
test
mov
sbb
inc
pop
int
loop
jne
push
stc
test
xor
aam
imul
fnstenv
outsb
push
xchg
test
out
gs
sarb
stos
mov
and
jo
adc
lods
jne
jecxz
adcl
pusha
jbe
push
pop
out
adc
ss
mov
pusha
xchg
sbb
cmpb
dec
xchg
add
aam
cmp
fwait
mov
mov
fdivp
xchg
or
dec
addr16
inc
pushf
repnz
sub
out
out
insb
ficomps
xchg
pop
xor
add
jg
dec
adc
cmpsl
push
jb
in
inc
nop
cmp
mov
lret
inc
test
inc
loope
out
add
bndstx
aad
and
loope
enter
rclb
or
xor
filds
jg
lcall
sub
loopne
cmpb
in
dec
inc
push
int
pop
mov
mov
xchg
ss
das
cmp
jmp
dec
dec
mov
mov
dec
ret
pop
sub
jns
repnz
and
sbb
out
dec
sbb
inc
push
pop
in
dec
or
jae
dec
out
cs
xchg
and
mov
cmp
push
movsb
andl
ds
adc
neg
add
cld
test
or
call
outsb
push
into
sub
push
or
mov
inc
jge
into
pushf
pop
pop
xor
mov
ds
aam
inc
push
les
jne
push
mulb
std
enter
cld
ds
xchg
dec
xchg
testl
sti
arpl
add
jmp
dec
sbb
xor
je
stc
sbb
daa
adc
adcl
popf
xchg
inc
xchg
aaa
std
jb
enter
lret
jmp
push
mov
mov
mov
mov
push
jne
lods
ret
push
xor
mov
daa
outsb
pop
lds
xchg
ficompl
int3
mov
in
es
enter
sahf
mov
imul
aad
xlat
lds
and
lods
push
adc
and
and
jne
jo
lahf
or
lods
insl
mov
adc
out
cmp
inc
add
mov
fsubp
mov
fs
pop
mov
sti
mov
xchg
flds
dec
int3
mov
jb
push
jmp
push
cmp
icebp
dec
enter
pushf
xor
add
addr16
mov
test
rcl
mov
stos
mov
push
xchg
push
add
out
pop
repnz
dec
js
cmpsl
outsb
das
pop
mov
adc
and
outsb
sahf
mov
ror
sbb
pushf
jne
dec
push
xor
popf
jne
mov
aas
inc
fidivs
daa
jns
add
inc
cmpsl
sub
dec
xchg
icebp
bound
push
mov
fld
and
add
and
fsub
xchg
test
clc
repz
test
out
dec
ss
faddp
outsb
xor
sbbl
lods
outsl
xor
fwait
aas
push
jns
hlt
ret
pop
xchg
movsl
dec
test
add
movsl
fcoms
js
in
mov
fdivp
mov
xchg
jb
push
test
push
push
cmp
daa
mov
je
jecxz
aas
subb
or
push
stos
mov
lret
aad
sbb
jle
dec
inc
rorl
fimuls
movsb
lock
jmp
negb
imull
aaa
loope
adc
in
adc
pop
loop
addr16
jne
scas
sub
stos
ja
icebp
fnstcw
jmp
xchg
lods
push
sub
cmp
hlt
js
sbb
jbe
jns
test
repnz
push
es
jg
fyl2x
or
mov
orl
out
aas
lea
movsl
xchg
pop
cmpsl
mov
movsl
cmpsb
inc
test
sbb
outsb
mov
jecxz
adc
clc
cwtl
jbe
scas
sbb
out
push
sub
or
shrb
inc
push
js
movsl
pop
sarl
inc
mov
out
inc
mov
rcrl
cs
add
iret
mov
in
xor
test
push
fildll
xchg
and
jl
mov
pop
xor
pop
inc
fsubrs
mov
xchg
icebp
stc
call
dec
mov
xor
mov
insb
fisttps
call
loope
adc
loop
lea
iret
lods
cli
popa
fwait
cmpsb
mov
test
sub
push
jle
inc
push
dec
in
mov
rorl
cmp
lahf
js
jbe
sub
pushf
std
loope
add
mov
sub
cmpsl
ljmp
sub
je
lods
dec
jg
xchg
xchg
add
push
mov
stos
into
inc
cmp
test
mov
mov
pop
out
movsb
sub
pop
jb
stos
xchg
cbtw
jl
dec
push
out
push
stos
jmp
mull
mov
std
or
cmpl
jg
or
mov
es
xor
lret
iret
rclb
dec
sub
insb
loop
fistl
sahf
push
pcmpeqw
into
out
inc
push
push
lcall
xlat
lret
decb
and
jp
mov
loope
pop
jge
sub
outsl
in
xchg
int
inc
addr16
adc
cmp
and
mov
xchg
cltd
pop
in
in
pop
and
mov
push
int
jne
jecxz
stos
mov
mov
xor
fcomp
and
das
fnsave
idivl
jle
and
mov
in
mov
push
dec
sbb
sbb
aad
cmp
jge
or
mov
outsl
push
daa
push
jo
and
cltd
fisttps
dec
add
xorb
mov
cwtl
or
xchg
ret
mov
stos
in
out
adc
call
ja
in
repz
loop
out
jmp
bound
xor
inc
jle
sbb
mov
pop
movsb
jg
cmpsb
push
or
movsl
in
lock
in
rorl
and
dec
test
adc
mov
dec
cmp
sub
lock
add
mov
into
iret
adc
xor
adc
test
jmp
and
mov
jo
stos
sub
subl
and
mov
or
mov
into
mov
xor
mov
dec
jecxz
or
outsl
mov
or
subb
sub
push
mov
mov
into
lahf
stos
add
pop
mov
aad
jge
mov
enter
stos
xlat
xchg
inc
xor
les
arpl
jae
shlb
lds
fidivs
fninit
loopne
lret
push
test
sbb
mov
inc
iret
xlat
icebp
adc
and
int
movsb
je
les
jne
sbb
push
je
jb
jno
sbb
ror
test
pop
inc
push
push
aad
fidivs
lods
pop
mov
push
scas
cmp
dec
js
push
mov
ret
sti
fidivrl
jecxz
stos
lea
inc
dec
ds
dec
xor
mov
das
push
mov
fs
mov
imul
sbb
sbb
dec
inc
stos
xchg
lods
jnp
hlt
xchg
xchg
jno
sub
cmp
cld
sbb
adc
or
and
inc
pusha
fisttpl
add
sbb
lret
dec
fiaddl
insb
mov
jmp
adc
ss
in
xchg
sub
add
xor
mov
bound
adc
adc
adc
test
daa
push
ljmp
shlb
stc
mov
out
pop
bound
insl
test
sbb
pop
cwtl
dec
hlt
andl
inc
clc
hlt
push
pop
into
xchg
sti
push
jmp
mov
hlt
xchg
push
fildl
jge
mov
xchg
jno
mov
xor
xchg
cmp
sub
ljmp
or
push
mov
in
add
lahf
cmp
out
pop
sub
xchg
aas
shrb
scas
rcll
jge
inc
xchg
sbb
mov
jb
mov
pushf
sbb
ljmp
and
divl
mov
std
sub
fimuls
clc
jg
mov
dec
dec
cmp
push
inc
test
aam
jnp
lods
cmp
mov
imul
mov
jnp
lea
and
cmpsb
push
pop
jecxz
outsl
mov
mov
add
repz
je
insb
aam
imul
bound
xchg
cli
dec
movsb
popa
movsl
xchg
pop
cmp
scas
insl
bound
xor
push
repnz
int
xchg
xchg
push
lock
movsl
mov
or
in
mov
xor
mov
dec
in
mov
mov
insb
scas
sbb
es
test
dec
cmp
sub
push
scas
jnp
orl
push
mov
push
cmp
outsl
aaa
jg
jno
or
inc
ret
iret
or
dec
jmp
add
dec
push
xor
in
add
xlat
add
mov
xchg
pusha
or
xor
sbb
jl
sbb
sub
sbb
imul
add
xchg
jge
push
pop
int3
dec
mov
ds
leave
mov
dec
inc
movsl
push
in
loope
pop
xor
jno
ss
iret
add
xor
xor
lretw
gs
inc
ficomps
adc
ret
cmp
and
inc
jg
xchg
xchg
je
and
les
sbb
jo
sub
ja
inc
decl
add
cmpl
in
jo
jno,pn
leave
jne
and
jne
jle
adc
test
test
push
into
sub
lods
adc
sahf
fisubrl
inc
push
es
std
jmp
js
mov
mov
cmp
not
pop
ret
cltd
test
mov
push
es
inc
std
pop
frstor
add
push
ror
popa
cmp
iret
imul
sub
sbb
loopne
hlt
test
pop
xlat
orl
ljmp
je
pop
adc
jae
call
repnz
mov
imul
repnz
push
cmp
sbb
das
fbstp
fisubs
aas
pop
sub
and
sar
out
push
jo
mov
fimuls
mov
cmp
jno
xorb
les
cmpsl
in
dec
jp
inc
in
push
add
inc
subb
adc
fmulp
loope
push
icebp
xchg
dec
adc
in
cwtl
xchg
jl
or
sub
jb
xchg
and
repnz
jbe
sbb
mov
sbb
mov
rclb
cmp
stos
mov
push
mov
xchg
cmp
iret
pushf
mov
xlat
loop
pop
into
lock
jle
push
les
cmp
jbe
fldl
mov
mov
sub
pop
pop
ja
adc
ds
cmpsl
out
dec
imul
mov
int3
pop
cs
iret
test
adc
fs
sub
lahf
cmp
xchg
jnp
rcrb
jge
ja
das
mov
lea
xchg
jge
ret
arpl
and
data16
ficoml
rorl
jno
and
push
mov
cmp
pop
adc
aad
mov
ljmp
xchg
pop
lret
dec
inc
add
adc
cli
mov
fidivrl
fsubrs
aaa
fistps
or
adc
adc
lret
mov
sarb
lock
mov
adc
jo
dec
push
fwait
testl
imull
shll
lahf
push
mov
push
mov
in
sub
ret
aad
pop
lcall
adc
jno
test
loopne
mov
aad
or
imull
in
mov
mov
outsb
fists
cmp
pusha
xor
shrl
push
cmp
mov
mov
xchg
les
test
and
and
ljmp
fwait
push
cmc
scas
cmp
pop
sar
add
cld
jbe
stc
push
in
test
mov
out
sbb
or
jle
adc
xchg
mov
inc
or
js
push
arpl
push
insl
je
arpl
cmp
std
mov
mov
sub
xchg
sbb
sti
xor
push
xchg
jbe
out
dec
mov
push
and
mov
mov
mov
mov
lahf
or
mov
cmpsb
rcl
test
inc
mov
xor
pop
in
sarl
and
fists
mov
mov
cli
cmp
clts
add
stos
pop
push
push
mov
cmc
mov
hlt
push
sub
dec
out
in
or
cmp
lods
cltd
sub
push
test
outsb
cmp
lods
out
test
test
xchg
sbb
jmp
jecxz
inc
dec
test
aaa
dec
adc
mov
jmp
mov
stc
adc
mov
dec
push
repz
mov
or
decb
loopne
sub
push
or
cmpsb
sbb
pop
cltd
inc
push
imul
mov
pop
push
lret
push
sbb
jge
call
inc
mov
or
mov
sahf
or
xchg
sub
es
je
push
les
mov
outsl
and
adcb
ss
lods
fs
add
pop
jp
sub
mov
nop
inc
mov
sub
pop
nop
jl
cmp
push
mov
in
fistpll
mov
sbb
cltd
sahf
addr16
pop
mov
xchg
cltd
xchg
mov
inc
adc
movsb
loope
in
mov
jo
nop
add
xchg
lods
out
lret
ficomps
mov
gs
add
pushf
int3
mov
in
jo
jb
push
shrl
aad
adc
cmp
adc
sub
pushf
dec
scas
or
sbb
jo
add
rcr
jnp
pop
xchg
lods
mov
arpl
inc
inc
sbb
int3
jae
xchg
and
out
insl
repz
push
mov
and
pop
cvtps2pi
ljmp
sub
and
xchg
mov
gs
jno
jmp
and
xlat
test
sub
add
pop
pop
jl
sbbb
repz
lret
push
inc
xor
pop
push
push
xor
fwait
mov
stc
std
cmpsl
or
or
cmpsb
xchg
jp
or
xchg
jne
sub
xor
mov
ret
out
push
stos
jne
pop
bound
mov
push
mov
jno
js
shrl
lock
mov
sub
idivl
pop
xor
mov
bound
outsb
lahf
imul
mov
int
or
dec
and
jmp
mov
lods
mov
test
fwait
jp
in
orb
cmp
jne
adc
inc
mov
clc
in
mov
ja
jbe
push
cli
cwtl
leave
imul
inc
inc
repnz
jg
cwtl
outsl
daa
xchg
mov
gs
fmuls
sbb
mov
outsl
or
das
repz
pop
ja
sti
fcompl
xchg
push
dec
xchg
mov
insl
jl
mov
lahf
sub
pop
push
loope
in
clc
sub
dec
insb
inc
or
shrb
out
mov
mov
fidivrs
inc
sub
xchg
cld
loopne
stos
out
sub
push
js
pop
pop
lea
adc
mov
pop
jae
pop
cmp
inc
cmp
sub
push
stos
jno
enter
ljmp
fst
or
pop
xchg
xchg
ds
es
xchg
popf
movsb
fimuls
xchg
and
mov
mov
xlat
xor
xor
push
call
add
jbe
je
and
aam
lock
out
lea
dec
test
insb
pop
push
mov
mov
xor
pop
push
fistpll
inc
lret
mov
pop
push
fstps
sub
stc
push
sbb
in
adc
push
mov
push
and
ljmp
sti
int3
adc
sbb
dec
push
repnz
dec
mov
push
inc
xchg
imul
ret
pop
insb
rcrl
ja
mov
lret
sbb
imul
stos
xchg
inc
cmpsl
mov
aas
cmc
or
dec
bound
dec
add
sar
arpl
enter
push
daa
in
into
into
aaa
lret
sub
rcrb
cli
add
addb
or
pop
test
test
into
in
cli
inc
or
jno
jge
jp
ss
shll
subb
mov
outsl
fyl2x
std
push
es
cli
mov
lock
xor
jbe
lds
icebp
les
and
bnd
stos
dec
insl
mov
cmc
nop
cmc
sub
xchg
push
scas
push
arpl
push
and
xchg
es
aad
jo
shr
aad
stc
sbb
and
xchg
cld
xchg
jno
shlb
xor
mov
jecxz
mov
inc
add
or
mov
mov
inc
repz
cmp
sbb
push
jl
enter
cmp
inc
les
into
inc
mov
enter
test
push
in
cmp
xchg
movsl
orb
mov
ret
pop
pop
pop
aam
in
iret
pop
mov
int
jne
subb
dec
pushf
lahf
jns
pop
or
mov
jmp
push
aaa
xlat
and
adc
insb
out
lahf
inc
jle
das
aad
cmpsb
cmpsl
dec
lock
data16
jp
or
fndisi(8087
dec
jmp
fldt
add
test
cs
in
push
nop
jbe
inc
test
push
out
fistl
mov
add
iret
xor
mov
stc
or
imul
pop
mov
cmp
inc
fldl
enter
dec
ja
inc
fs
xor
xor
dec
adc
mov
aaa
in
cmp
rcll
lds
mov
fs
pop
cmp
or
sub
push
dec
std
mov
fs
das
repnz
insb
mov
xorb
push
xlat
push
add
sbb
sahf
mov
inc
dec
mov
push
jl
push
mov
inc
xlat
aad
lret
test
xchg
cmpsb
fld
lock
push
sub
popf
lret
push
jno
cmpsb
push
scas
or
sub
push
cwtl
scas
andl
xor
pmulhw
sti
mov
cmp
movsl
mov
push
cmc
cld
test
add
ljmp
push
cwtl
xlat
xchg
fcoml
or
mov
push
mov
and
test
push
sbbb
aaa
iret
insl
inc
or
lcall
cli
je
and
jb
xor
and
mov
adc
xchg
test
outsb
add
mov
mov
out
mov
cld
or
cli
adc
les
cs
outsb
xchg
pop
mov
into
dec
xchg
cltd
aad
cmp
pop
pop
icebp
adc
xchg
pop
push
push
push
jns
push
inc
add
push
iret
hlt
fidivs
and
ss
cmpsl
inc
xor
pop
dec
fs
fwait
xor
popf
and
jmp
test
pop
pop
inc
stos
and
xor
sbb
mov
mov
test
xor
and
int3
stc
pop
pop
mov
mull
xor
push
jmp
mov
sbb
test
ss
aad
inc
jno
xorb
dec
add
adc
jge
addr16
mov
dec
or
inc
jmp
scas
jnp,pn
pushf
push
pop
pop
xchg
fidivl
and
unpcklps
lds
imul
sbb
lret
push
dec
scas
gs
sti
push
stos
jnp
jge
aam
pusha
jnp
aas
gs
jge
jecxz
sbb
in
push
xchg
pop
or
push
idiv
mov
les
sbb
or
sub
jmp
adc
pop
push
shl
dec
sbb
cmp
test
pop
inc
xor
and
cmp
in
xor
ds
in
pop
rol
pushf
jnp
inc
mov
ret
mov
lods
clc
jno
mov
sbb
insl
mov
ds
ja
push
inc
data16
adc
fidivrs
or
sbb
sub
sbb
ds
xor
pop
aam
stos
out
ret
fwait
cwtl
mov
sarb
inc
test
lret
sub
fnsave
arpl
sub
sbb
lods
adc
inc
addr16
iret
cmp
sub
sub
ja
or
lods
pop
ljmp
lretw
pop
cmc
fidivl
push
movsl
sub
scas
lds
movsb
push
jno
roll
add
ffree
add
and
push
inc
call
pop
mov
and
mov
pop
mov
mov
or
jno
xor
iret
push
das
jbe
aas
xor
out
stos
jecxz
inc
sbb
loope
push
fucomip
scas
es
mov
adc
pop
inc
leave
cmp
or
dec
mov
xor
pusha
adc
into
mov
aas
push
push
cltd
lcall
int
or
dec
addl
jecxz
cmc
pop
jl
dec
aas
mulb
mov
fsubl
lock
fucom
sbb
data16
addr16
je
sub
stos
mov
mov
jne
enter
pop
push
xchg
js
inc
mov
inc
cmp
cmpsb
dec
lds
loope
cmp
inc
jmp
pop
pop
push
adc
out
imul
aaa
or
test
pop
mov
js
vpmacsdql
daa
mov
pop
or
xchg
fldl
push
inc
scas
mov
shll
fisubl
lea
ret
dec
out
decl
daa
jns
sahf
adc
or
in
sbb
xchg
mov
add
bound
jnp
adc
pop
dec
xorb
cmc
mov
add
cmpsl
scas
movsl
mov
xchg
add
cmpsl
addr16
sbb
dec
pushf
jns
test
nop
jmp
or
pusha
test
sub
xor
scas
sub
clc
pop
or
sbb
cmp
xchg
or
dec
mov
mov
push
add
sbb
loope
rorl
in
mov
xor
mov
mov
sbb
fisubl
pusha
inc
gs
popf
jle
adc
arpl
iret
ss
fmuls
fwait
xchg
lret
in
stc
aas
insb
rorb
idivl
aas
pop
je
mov
pop
mov
jl
shll
mov
sub
jns
imul
xor
cmp
ret
das
loop
sub
push
cmpsl
leave
icebp
jl
sbbl
adc
pushf
leave
pusha
test
icebp
or
xchg
enter
sti
notl
test
leave
aam
cmp
pop
insl
pop
sarb
inc
cld
sub
aas
pop
paddsb
imul
push
adc
adc
roll
lret
pop
fchs
es
pop
mov
push
jo
sbb
mov
push
cmp
add
xlat
mul
or
or
mov
movsl
jg
mov
sti
shll
lcall
jne
je
inc
push
fldt
data16
mov
and
cmp
std
push
imulb
and
mov
add
adc
aam
test
mov
fst
aad
cmp
shrb
int3
call
adc
xor
sub
mov
mov
fildll
pop
aad
pop
les
dec
lret
lea
addb
scas
xchg
jge
dec
or
pop
stos
pop
mov
imul
addr16
inc
cmp
push
adc
sbb
adc
pusha
push
inc
int3
insl
addb
jecxz
inc
adc
outsb
call
sahf
out
arpl
push
addr16
outsb
clc
dec
loop
jae
push
dec
es
sarb
fwait
xor
inc
dec
fwait
sahf
push
aam
gs
or
and
aad
mov
cmp
dec
push
test
jno
xor
or
test
repnz
pusha
mov
mov
sbb
mov
push
icebp
mov
sub
sub
aam
pop
pop
xacquire
aad
lock
jns
xchg
mov
rolb
das
into
out
int3
cmc
xlat
fmull
movb
mov
push
dec
or
dec
mov
dec
pushw
mov
mov
insb
cltd
mov
cld
pop
inc
outsl
jbe
sub
jbe
adc
fcomip
dec
pop
aad
imul
sub
sbb
mov
or
push
stos
int
dec
pop
add
loope
pop
push
and
xor
fdivl
mov
xchg
xchg
divb
icebp
cld
aaa
loop
mov
mov
imul
push
mov
scas
test
jo
repz
xchg
mov
loopne
in
test
rcll
mov
cli
fsubr
mov
sub
lret
sub
push
mov
addr16
lock
pushf
fwait
out
std
int
add
dec
gs
pusha
int3
push
add
inc
dec
scas
sub
hlt
cld
jle
insl
lret
sarl
loop
dec
inc
cmp
loop
jecxz
xchg
int3
sbb
addr16
cmp
mov
dec
add
adc
out
dec
fists
xor
push
mov
inc
add
out
std
xor
mov
out
cmp
ffreep
sbbb
insb
xor
and
mov
movsl
out
xchg
lret
pop
dec
mov
ds
stos
sarl
in
xchg
inc
xor
and
pop
hlt
cs
sahf
filds
repnz
mov
mov
les
inc
in
adc
inc
jne
adc
xchg
rorl
sbb
dec
adc
pop
sarb
xchg
xor
pop
or
inc
in
fucomp
pop
test
dec
scas
jl
in
lock
sub
inc
mov
cs
sbb
or
incb
fldenv
mov
xchg
ret
push
xor
jns
cmp
lcall
cmc
dec
xor
dec
push
mov
add
sahf
add
les
add
cltd
or
add
fnsave
mov
test
cwtl
flds
testl
out
in
faddl
jb
add
rcll
fldenv
or
test
shl
in
jmp
sub
sbb
loope
stos
xchg
int3
xor
mov
jnp
popf
sub
cmpsl
test
pop
push
fstpl
push
into
fwait
jmp
push
dec
das
mov
aas
fisubl
mov
js
inc
aam
out
fsubrp
and
push
dec
aam
jns
cmpsl
push
push
pop
das
pop
movsb
daa
hlt
inc
ss
add
push
push
insl
stos
popa
adc
icebp
roll
mov
hlt
mov
arpl
xlat
cmpl
pop
repnz
ret
test
sub
ret
mov
aad
iret
daa
xor
sub
out
out
int3
or
push
push
sub
adc
fsubl
outsl
adc
dec
pop
call
adc
mov
dec
pop
jne
repnz
and
add
sub
scas
aas
jle
sub
or
lea
mov
in
xorb
subl
nop
xchg
jnp
cmp
jle
jmp
repnz
dec
into
mov
pop
addl
adcl
mov
out
pop
fsub
gs
add
dec
stc
sub
aad
and
xchg
push
or
call
or
dec
jg
pop
outsb
in
xchg
int3
sub
movsl
dec
int3
jecxz
jl
inc
xlat
les
inc
popf
or
outsb
push
xchg
dec
sbb
mov
adc
pop
nop
rcrl
jae
xchg
sbb
adcl
lock
insl
pop
push
push
pop
out
inc
dec
mov
aad
es
or
adc
push
mov
mov
outsl
repz
or
sbb
addr16
inc
sub
mov
mov
mov
add
mov
sti
pop
mov
in
push
xor
popa
je
insl
and
call
cwtl
aam
popf
mov
xor
ret
test
mov
jmp
xchg
sbbl
lods
dec
xor
jg
jmp
mov
paddd
and
sbb
push
fwait
ret
mov
adc
mov
and
sub
add
sahf
jmp
push
add
pop
pop
mov
and
mov
iret
cmpsb
outsb
aad
pushf
jge
mov
mov
addl
in
jecxz
mov
aad
loope
ljmp
cmp
xchg
sahf
add
inc
faddl
sub
iret
add
imul
mov
xchg
jo
cmp
or
sbb
cmpb
and
jbe
mov
adc
orb
lcall
inc
push
mov
sbb
xor
inc
mov
sahf
xchg
push
js
jp
xchg
vmwrite
add
mov
cs
ss
mov
cld
lret
pop
pop
sbb
xchg
lret
sbb
push
rorl
add
inc
mov
and
xor
mov
mov
mov
rolb
mov
cld
xor
jmp
in
fs
jbe
lret
stc
mov
adc
adc
mov
cmp
sti
loope
fwait
add
push
lret
push
jno
sbb
leave
movsb
lods
push
pop
out
popf
mov
sbb
inc
dec
int3
lock
xchg
stos
xor
fsubrl
cmpl
stos
fcmovnu
add
cmpsb
dec
cmp
les
repnz
aas
mov
mov
aad
std
adc
lret
cmp
cltd
cmpsl
repnz
test
sub
leave
int
mov
push
loop
jns
xchg
outsb
scas
movsl
out
iret
dec
das
and
sub
mov
cmp
enter
mov
mov
pop
push
jne
int
adc
jp
popa
mov
clc
or
push
xchg
sub
sbb
sub
mov
dec
pushf
xor
test
lea
adc
cmp
int
or
add
cwtl
push
imul
insb
push
and
mov
mov
cmpl
pop
inc
jge
popa
popf
dec
xorb
jge
ds
iret
shrl
sbb
loope
bound
mov
loop
roll
sti
dec
outsb
divl
pusha
xor
rol
enter
jle
add
jbe
inc
push
pop
jle
mov
push
and
dec
sbb
xchg
pop
push
cmc
js
xchg
adc
sbb
dec
mov
arpl
mov
mov
mov
xor
push
js
jl
sub
cmpl
push
xchg
inc
and
sub
pop
xchg
test
rolb
push
cmc
inc
and
pop
cli
sbb
outsl
out
insb
jne
add
ret
ss
fimuls
imul
sub
mov
and
push
pop
mov
or
mov
test
inc
popf
xchg
or
mov
vpaddsw
push
push
test
jge
xor
int
fidivs
jnp
inc
push
push
xchg
stos
mov
xlat
jp
outsb
or
pop
mov
or
rcrb
and
mov
cmpsb
push
inc
xor
dec
push
test
dec
out
sahf
frstor
sub
and
cmp
dec
cwtl
test
imul
sub
std
and
rcl
pop
xor
out
shlb
daa
push
mov
je
sbb
pusha
lret
dec
inc
loope
popa
shl
ds
push
adc
das
jle
pop
ret
test
mov
mov
les
cmp
scas
or
cs
insl
cltd
mov
ret
imul
xchg
sbb
out
in
sbb
push
mov
test
push
sahf
das
sbb
pop
mov
sub
rol
xor
cld
arpl
loopne
mov
rcl
xchg
loopne
sbb
test
rorb
inc
daa
adc
dec
scas
repnz
xchg
xchg
cmp
cmp
scas
dec
repz
xor
leave
pop
mov
mov
pop
pop
jo
pop
add
pop
pop
xor
mov
fs
repz
xchg
ja
mov
jno
mov
cli
sub
test
xor
out
in
or
lcall
mov
inc
mov
test
enter
rclb
push
mov
loopne
loop
mov
pop
jo
addr16
test
xor
sahf
xchg
push
out
into
push
iret
xchg
mov
adc
add
push
or
loop
js
std
into
or
jne
inc
cltd
sbb
sub
inc
dec
add
aaa
xchg
cld
rorl
int
mov
push
stc
pop
xor
jo
aam
mov
loop
pop
mov
mov
add
repz
aas
movb
loope
pop
lods
in
sub
mov
pushf
or
popa
lret
fnstcw
pop
loop
add
leave
push
xchg
xchg
jb
cmpsl
mov
lahf
outsb
sub
lods
cmp
xchg
pop
push
es
sub
cli
pushf
scas
out
jg
xchg
aaa
leave
or
lods
sub
mov
test
icebp
jae
push
mov
inc
clc
mov
or
faddl
jae
xor
or
ljmp
cmc
mov
icebp
out
cmp
jb
xor
pop
add
orl
aaa
push
mov
ja
dec
adc
imul
adc
pop
mov
mov
ret
jae
pushf
push
popa
xor
inc
leave
out
aad
loopne
fsub
out
mov
jmp
repnz
hlt
stos
arpl
imul
fmull
aaa
fwait
lret
xchg
je
xor
mov
mov
jecxz
sbb
jg
out
dec
test
mov
fadd
cmpsb
aas
or
rcl
push
js
inc
pop
adc
fwait
in
mov
adc
mov
test
jecxz
das
testb
ret
in
push
cli
cltd
mov
arpl
jnp
mov
andb
mov
lahf
jmp
leave
orl
push
pop
shl
push
loope
fdivrp
jge
cmpsl
inc
insb
lds
sbb
jp
daa
push
js
out
test
mov
ja
or
dec
add
dec
mov
lock
jns
mov
ficompl
lcall
lods
cmp
push
sbb
pop
enter
repz
inc
mov
dec
pop
mov
jmp
inc
jmp
fldl
repnz
in
lods
mov
or
lret
ds
jb
pop
sbb
cmpsl
and
sti
sbb
ret
adc
dec
or
push
loope
out
and
or
push
or
sub
mov
lds
lcall
sub
cmp
mov
std
clc
pop
cmp
insb
mov
cmp
push
add
loopne
pushf
or
add
insl
and
in
xchg
ror
and
mov
mov
lods
sbb
or
sahf
cmp
mov
jnp
sub
sub
enter
mov
mov
out
jne
add
shrb
add
dec
and
ret
test
testb
cwtl
notl
and
jno
dec
dec
jecxz
lds
scas
aaa
lret
inc
rcr
jge
insl
es
test
lock
fbld
dec
enter
pop
mov
std
repnz
push
mov
jbe
dec
adc
mov
add
stos
idivb
fwait
xchg
jge,pt
fwait
popa
ret
scas
fmull
dec
pop
adc
xlat
loopne
and
lcall
nop
xchg
jmp
sub
dec
rorb
fidivs
inc
and
or
cld
hlt
test
push
clc
test
scas
xchg
mov
aaa
dec
jmp
mov
popa
lret
push
mov
das
in
icebp
inc
xchg
inc
adc
test
popa
or
mov
cmpsl
out
pop
jns
mov
push
mov
aas
jo
mov
mull
stos
and
xor
test
rolb
jae
inc
or
mov
push
popa
divl
test
dec
pop
mov
push
pop
testl
loop
push
push
ja
dec
scas
imul
mov
loopne
sub
add
mov
add
jae
int3
sbb
cmp
int3
lea
or
jge
rorb
imul
and
in
mov
nop
cmp
fwait
dec
cld
xor
push
cmpsl
add
cwtl
jge
int
lret
sbb
pop
sub
movsl
sbb
add
pushw
sub
in
ja
xor
mov
adc
hlt
jle
xor
push
pop
pop
sub
repnz
ret
mov
jb
jle
enter
lods
lods
cmpsl
sub
push
adc
iret
dec
sbb
cmp
lret
jge
inc
mov
xor
pop
lods
aas
insb
ja
xchg
stos
in
push
adc
mov
stos
shll
in
mov
call
ret
cwtl
int
sbb
stc
mov
insb
call
loopne
fsubr
out
inc
pop
push
or
sbb
xchg
jmp
push
sbbl
push
or
ss
xor
push
jmp
adc
jne
iret
jae
test
ret
mov
or
and
mov
jmp
adc
test
std
orb
test
xchg
add
xor
push
shl
mov
mov
cmpsb
jp
push
into
iret
inc
ds
jecxz
mov
dec
sbb
in
adc
in
lret
push
inc
mov
stos
jecxz
outsl
cmp
inc
or
mov
scas
pop
cmp
and
jmp
pop
add
jge
movsb
bound
jns
imul
into
fcomi
dec
push
repnz
cwtl
xchg
sbb
in
inc
dec
das
cwtl
arpl
cmp
enterw
cmpsb
jg
pop
jns
mov
jl
pop
lods
xor
stos
fistl
ret
and
mov
pop
pop
pop
jecxz
fsubrs
add
aam
addr16
mov
adc
mov
shll
mov
push
add
sub
mov
ret
daa
shll
jb
nop
cmp
push
ret
pop
in
fmull
pusha
shll
xor
inc
pop
jle
sub
xchg
xchg
sti
push
lret
jg
aaa
sub
dec
or
jg
sub
pop
ljmp
aam
lods
cli
push
icebp
out
cmpsb
test
pop
int
mov
jecxz
in
sub
cld
dec
pop
mov
into
lahf
test
mov
int3
imul
lea
jecxz
ss
lahf
insb
data16
pushf
lds
pop
push
push
dec
movsb
cmp
icebp
or
cmp
pop
adc
rorb
icebp
sbb
ja
xchg
push
dec
into
mov
out
sub
sbb
ljmp
call
imul
lcall
jg
jge
popl
inc
sarb
pop
jb
inc
sbb
dec
pop
adc
insl
jae
in
push
bnd
test
push
addr16
loope
mov
pop
test
movsb
fs
jne
inc
push
inc
xor
xor
cli
outsb
lds
movsb
mov
mov
pop
test
jb
jae
cmp
ret
dec
aam
fucomip
xchg
and
icebp
pop
xchg
xor
in
or
js
in
out
mov
aaa
ss
hlt
gs
mov
test
lahf
sbbl
sub
pop
sub
and
xchg
mov
ret
adc
dec
in
insb
jb
push
test
xchg
jle
aas
int
inc
int3
loop
in
mov
ljmp
imul
and
mov
cmp
iret
mov
std
add
mov
nop
int3
mov
cmp
push
lahf
sbbl
icebp
cmpsl
mov
stos
xor
pop
in
fucomip
sarl
sbb
enter
dec
push
or
leave
mov
sub
lret
pop
pop
push
test
and
and
inc
andl
or
xchg
mov
push
hlt
cmp
mov
push
xor
and
test
jecxz
rcr
sarb
popa
jnp
mov
into
int
inc
inc
inc
int3
loop
mov
js
mov
or
inc
inc
cmp
jno
shrb
loope
push
rcrl
insb
or
inc
adc
popf
ret
mov
lock
into
nop
push
mov
pushf
mov
adc
sbbb
pop
xor
pop
scas
or
dec
lds
movsl
add
inc
or
aaa
and
xchg
in
and
movsb
dec
out
xor
push
outsb
push
shrl
mov
pop
and
jnp
jne
aaa
dec
out
xchg
mov
js
inc
jnp
hlt
pusha
xor
f2xm1
and
cli
mov
clc
push
jge
or
cmp
mov
pop
push
call
inc
jp
add
jg
xchg
add
daa
stc
mov
adc
or
data16
test
cmp
out
xor
sbb
dec
ja
cmc
cld
andb
xchg
cwtl
push
test
fcomps
repnz
inc
add
fwait
cmp
adc
cmp
mov
cmp
popf
cmp
fwait
cmp
xchg
bound
cltd
es
jmp
mov
sbb
push
iret
add
stos
std
mov
inc
lock
testl
outsl
les
inc
test
lods
out
jp
cmp
gs
les
mov
lds
imul
sbb
clc
xchg
pop
movsl
xchg
jno
popa
mov
dec
scas
fsub
adc
arpl
xchg
test
gs
adc
dec
dec
es
mov
mov
or
inc
xchg
xchg
pusha
loop
rcll
icebp
dec
pop
ds
lret
pop
cmpsb
pop
jae
int3
or
mov
scas
sbb
out
and
pop
mov
sti
leave
dec
sub
std
leave
add
inc
xchg
test
mov
inc
movsl
shll
mov
inc
lret
call
sbb
ss
or
fsubs
ss
mov
inc
cmp
mov
mov
push
aad
adc
imul
cmp
mov
mov
aad
inc
jecxz
sbb
ljmp
call
push
adc
mov
lods
int3
pop
dec
inc
fidivl
dec
sub
cmpsb
aas
pushl
int
xchg
mov
outsb
sbb
call
fsubrl
in
inc
lods
je
imulb
add
push
add
addr16
mov
daa
movsl
or
mov
mov
inc
xor
addl
add
fldenv
dec
mov
cmpb
out
adc
dec
xchg
push
xor
sbb
cmp
data16
add
xchg
push
gs
jnp
push
ds
loopne
stc
fldpi
push
jno
pop
or
xchg
enter
insl
rcrb
inc
push
inc
and
scas
push
fs
movl
lret
ja
pop
add
mov
xchg
adc
and
mov
popa
pop
sub
ret
lahf
mov
inc
in
push
stc
pop
cmp
push
cs
xor
jae
adc
xchg
sahf
leave
out
lcall
imul
pop
pushf
popa
imul
mov
inc
dec
xlat
and
xchg
popl
ret
cmp
sub
pop
sub
arpl
imul
jmp
adc
xchg
out
mov
jns
push
lods
cmpsb
push
movsb
mov
cltd
scas
inc
ret
repnz
and
sarl
in
fdivs
scas
pop
mov
pop
mov
sbb
jp
or
adc
fnstenv
cmp
mov
add
daa
xor
and
jmp
addb
inc
push
test
push
inc
int3
subb
sahf
cld
sahf
iret
lods
lock
data16
inc
jl
push
aam
mov
pop
sbb
into
mov
or
mov
flds
jge
mov
xor
fsub
hlt
adc
push
xor
add
and
sub
push
pusha
notl
push
cmpsl
in
lret
mov
xchg
movsb
movsb
outsl
mov
mov
idivl
mov
out
add
xchg
shlb
cmp
repz
fbstp
fimull
rcrl
sub
push
stos
mov
lds
ret
jmp
jge
mov
cmp
push
arpl
xchg
jg
xor
xchg
repz
xchg
sbbl
imul
sub
bound
push
push
jb
push
mov
into
iret
pushl
nop
mov
sbb
cwtl
mov
rorb
sbb
or
addr16
lods
jl
xor
ss
push
loopne
fs
mov
aam
mov
out
loope
pop
adc
inc
enter
aas
bound
enter
cmpsb
hlt
inc
in
push
shrb
test
pop
in
fsubr
enter
popf
call
adc
lahf
rorl
imul
cmpsb
dec
cmc
and
jae
shlb
sahf
dec
push
xor
adc
cltd
aaa
idivb
or
pop
push
pop
mov
sub
into
rcl
mov
addr16
push
or
mov
mov
inc
outsl
xchg
test
inc
mov
enter
jg
jo
ljmp
in
outsl
jmp
hlt
gs
adc
test
push
shll
add
ret
mov
call
shlb
inc
and
mov
mov
aaa
outsl
repz
push
and
xchg
add
push
ret
lods
test
sub
insl
sub
test
push
dec
push
stos
pop
out
insb
std
lahf
xor
push
xchg
pop
push
cmp
mov
call
adc
mov
sub
mov
not
mov
inc
mov
test
adc
imul
mov
or
repz
cmp
adc
dec
insb
test
lds
mov
cmc
ret
int
and
mov
and
dec
and
inc
inc
push
push
cli
hlt
mov
dec
add
fdivs
fsubrl
cld
insl
adc
aas
sub
test
stos
and
inc
xchg
sub
mov
mov
fsubs
arpl
mov
push
punpckldq
xchg
sbb
mov
pop
adc
pop
pushf
mov
ficompl
lods
sub
jle,pt
xchg
andl
mov
pop
xchg
int3
adc
sub
push
inc
ror
sub
fdivr
xchg
enter
or
das
add
dec
lcall
xchg
into
aaa
adc
loopne
iret
lea
push
movsb
js
ss
sahf
adc
je
add
push
jmp
clc
lock
cmpsb
loopne
enter
cwtl
jg
aam
lret
and
ffree
cmp
lahf
cmp
cmp
push
jne
in
mulb
and
mov
push
out
in
push
jbe
loopne
loop
add
pop
sub
shl
lret
or
cmp
jne
mov
sbb
jno
mov
mov
fisttps
sbb
in
es
subl
fsts
das
push
rcll
xor
inc
clc
loope
push
xchg
inc
ret
xor
hlt
pushf
inc
mov
notl
sub
and
cmp
mov
push
test
ja
in
mov
xor
dec
or
lret
xor
rcl
lcall
push
repnz
out
xor
xor
shll
test
jnp
add
xor
mov
test
add
jo
ds
js
jmp
pavgw
repz
popf
or
pusha
je
push
cld
dec
out
and
gs
push
sub
sahf
js
pop
orl
sub
icebp
mov
mov
xchg
cmp
sbb
push
loop
pop
mov
mov
inc
mov
pop
testb
movsb
mov
lods
mov
aad
mov
out
mov
imul
aad
sbb
cmp
int
out
arpl
jmp
push
fsts
jl
inc
shr
shll
repz
jecxz
cmp
adcl
jl
repz
daa
add
test
jb
out
and
adc
into
xorps
ja
sbb
pop
sub
inc
lods
pop
stc
dec
fimull
ss
ss
imul
enter
jb
mul
pop
mov
sbbb
fcomps
stos
loop
dec
xchg
in
aam
mov
mov
push
dec
jecxz
sbb
imul
mov
into
and
push
aad
inc
inc
sub
imul
jbe
ss
das
test
mov
adc
pop
sbb
xchg
dec
sbb
mov
push
lds
and
and
lret
mov
out
test
out
movsl
arpl
mov
shl
iret
and
pop
and
mov
pop
xor
sahf
fmuls
xchg
add
testb
mov
or
pop
or
movsl
mov
jg
or
stc
and
push
pop
mov
scas
test
stos
arpl
mov
mov
out
cmp
push
mov
cmpb
cmp
push
ja
iret
rep
loopne
sbb
fcomp
push
insb
fadds
aam
jle
bound
dec
out
out
pop
jmp
int3
inc
lcall
out
adc
andb
das
fwait
pop
stc
xor
mov
pop
lcall
mov
push
push
jb
cmp
imull
mov
les
xchg
loop
ret
stc
mov
or
inc
adc
cmp
cmp
pop
mov
xchg
das
loope
add
imul
mov
jae
stos
dec
pop
dec
stc
scas
out
pop
cmp
cwtl
aad
xor
cmp
js
xor
jnp
fcomp
cmpb
jp
cmp
clc
inc
xor
mov
push
mov
pop
pop
syscall
cmp
mov
lea
push
lea
xor
mov
mov
jl
pop
inc
jns
ljmp
inc
test
pop
sub
gs
xchg
lods
push
rolb
outsb
mov
add
jo
mov
push
js
outsb
lea
icebp
fnclex
xor
mov
mov
insb
shlb
xchg
xchg
cwtl
fwait
cmp
mov
xchg
sbb
dec
inc
mov
call
sbb
jg
lea
scas
pop
push
jb
in
pop
xchg
jbe
push
aas
and
jle
inc
repz
pop
adc
sub
or
addr16
shrb
lds
fstps
idiv
outsl
jbe
pop
andl
inc
test
jne
xchg
idivl
push
nop
push
fdiv
fidivl
arpl
jne
into
or
sub
mov
add
test
sub
mov
or
in
pop
mov
mov
and
bound
jbe
push
jae
mov
aas
jl
add
fisubrs
mov
in
inc
sbb
xchg
cli
pop
sub
subl
iret
fidivs
clc
insb
xchg
lea
lahf
mov
sub
push
fwait
cmp
cli
mov
adc
and
add
mov
and
addb
dec
xchg
arpl
xchg
movd
or
sub
inc
loop
xor
loope
mov
ljmp
pushf
subl
add
add
repnz
roll
hlt
in
cmp
xchg
insl
sahf
xchg
loope
sub
stc
test
andb
je
jne
pop
movsl
into
jmp
mov
shlb
or
fcoml
or
cmp
jmp
pop
movsb
pop
cld
aad
dec
insb
loop
sbb
sub
xchg
or
out
pop
fisttpl
dec
stc
test
inc
popf
ds
fistpll
rorb
loop
sbb
sub
fnstsw
dec
adc
dec
roll
sub
push
stos
and
stos
xor
inc
and
pop
aam
scas
divl
int3
mov
add
adc
adc
mov
out
icebp
lods
xchg
mov
std
lock
cmpsl
in
add
jp
mov
stc
fidivrs
out
push
pmuludq
in
into
cmpsl
adc
mov
lock
cwtl
xor
fidivrl
mov
insl
fdivs
ljmp
and
aas
mov
dec
popa
jbe
push
dec
icebp
and
mov
mov
and
insb
add
mov
jp
mov
outsl
pop
adc
sub
sti
sub
cmp
jb
xchg
inc
xchg
shl
rcrb
adc
jo
iret
leave
jmp
shll
mov
jge
bound
in
lahf
insl
and
push
fnstenv
into
push
negl
add
aas
ss
sbb
dec
testb
or
sahf
movsb
mov
inc
popa
mov
jecxz
inc
ljmp
pop
or
sub
sbb
and
jne
mov
jns
pop
lock
rcrl
mov
lcall
ss
popa
imul
mov
jle
cmp
enter
xchg
clc
inc
imul
sti
lods
jns
add
push
ja
xchg
popf
mov
rcll
xchg
jnp
gs
outsb
xchg
bound
test
adc
clc
add
hlt
cli
mov
xorb
dec
dec
fistps
push
enter
or
fwait
mov
push
cmp
sti
cld
out
cmp
jnp
mov
cmp
aam
scas
xchg
xchg
lcall
cli
iret
xchg
push
adc
inc
jo
mov
cmp
les
push
xchg
dec
negb
jmp
inc
packsswb
pop
adc
jne
jl
cmpsl
out
or
mov
mov
inc
cmp
outsl
or
jbe
in
dec
adc
mov
sar
mov
pop
sbb
lret
jl
ljmp
mov
les
roll
cmp
lods
sbb
jnp
loopne
stos
push
push
xchg
call
stos
lahf
push
icebp
adc
sbb
lds
les
cmc
cmp
ret
mov
int
adc
out
add
cwtl
insb
jns
inc
daa
test
in
enter
ret
and
mov
popa
js
jmp
mov
jnp
dec
mov
outsb
pop
xchg
hlt
push
pusha
mov
addr16
es
jmp
scas
fisttpl
cld
aad
cmp
xchg
mov
rorb
shl
adc
sbb
icebp
mov
in
lock
sar
pop
push
in
lods
inc
fimull
jg
sub
mov
mov
sub
fld
add
adc
lahf
fs
sbb
xorb
lret
call
gs
in
xor
loop
or
lds
pushf
inc
adc
sar
movsl
inc
and
test
sub
push
mov
movsb
mov
xchg
repnz
sbb
shr
cltd
lret
in
sar
cmp
test
mov
push
jmp
mov
sub
fwait
xchg
sbb
addr16
dec
mov
and
push
ret
in
loop
add
aas
inc
xchg
iret
data16
imul
sbb
subl
mov
outsl
lods
push
pop
lret
add
lods
cmp
sbb
arpl
mov
in
movsb
push
or
jbe
int3
test
adc
jle
fdivrl
mov
jecxz
std
pushf
roll
lea
push
outsb
ds
fldt
aad
mov
sbb
int
inc
pop
mov
push
fxch
mov
scas
dec
mov
ret
rcrl
dec
shl
daa
decl
or
sub
insl
jecxz
test
xchg
adc
bnd
fwait
pusha
cltd
bound
push
cmc
or
mov
mov
mov
mov
inc
std
mov
stc
dec
sub
dec
mov
enter
lret
sti
sbb
cmpxchg
lods
inc
and
jne
jbe
cmp
jle
pop
adc
hlt
imul
push
push
jb
inc
in
jnp
mov
clc
hlt
cli
xchg
in
aam
xor
cltd
in
sbb
push
fiaddl
loope
sbbb
fistpl
fistpl
sbb
push
add
subl
jne
hlt
mov
cwtl
shl
adc
stos
shll
imul
cmpsl
jo
sub
fldenv
pushf
jbe
or
sbb
push
mov
les
jl
mov
mov
lret
jbe
push
sbb
xchg
shl
lea
cmpsb
add
punpckhbw
fbstp
inc
notb
pusha
xchg
lea
push
mov
jle
fisttps
and
fmull
movsl
fisubrl
push
fldenv
dec
dec
pop
test
cmpsl
dec
sub
sub
pop
fldt
xor
cmp
lds
jmp
sbb
out
stos
int
pop
inc
sahf
jo
dec
cmc
fcompl
shlb
sbb
push
fcmovu
and
int
or
fnsave
out
dec
imul
pop
pop
in
movsb
cmp
add
sti
jae
in
ds
aam
std
pop
into
lret
subl
arpl
pushf
mov
push
popa
jns
loope
fucom
lcall
sbb
frstor
rorb
dec
mov
sbb
fiadds
ret
push
punpckldq
inc
sub
mov
test
lret
or
pop
std
addr16
stc
or
fwait
ljmp
popf
lret
push
mov
pop
jp
ds
mov
mov
and
arpl
sahf
leave
sbb
test
pop
mov
and
stos
mov
cld
arpl
into
sub
and
hlt
jnp
jbe
jge
xchg
dec
cli
dec
in
clc
mov
enter
sub
sbb
js
imul
cmp
loopne
push
or
mov
sbb
mov
dec
ret
fdivl
mov
scas
outsb
sub
mov
xor
ljmp
test
lods
push
pusha
jl
das
jmp
addl
xor
or
out
sbbb
fdivs
loope
loope
in
pop
mov
lds
adc
hlt
leave
jle
mov
jae
mov
divl
sbb
cmovno
adc
fimull
mov
test
jl
sbb
or
ja
or
int
jnp
mov
mov
dec
out
leave
stos
insb
jp
sub
sub
inc
inc
sbb
cld
and
cmp
in
loopne
adc
jo
test
xchg
and
test
arpl
push
repnz
dec
sbb
mov
and
sbb
push
push
popl
lcall
and
nop
out
or
push
push
jmp
shlb
in
dec
push
and
mov
test
dec
ret
mov
pop
dec
sub
jbe
fs
pop
cmp
lods
sti
cmp
movsb
sub
daa
mov
test
inc
stc
add
rorl
push
dec
xor
push
pop
xlat
cld
ffreep
jge
clc
jge
push
xor
addb
in
stos
xchg
iret
dec
mov
sbb
pop
xchg
mov
xchg
lods
divl
mov
sub
jl
aad
sbb
cmp
mov
adc
mov
hlt
mov
mov
sub
rcrl
mov
pushf
mov
ret
popa
not
nop
rorb
mov
mov
fldl
sub
jmp
sbb
shl
test
sub
xor
out
inc
push
mov
push
adc
inc
jbe
push
test
add
insl
push
mov
test
sbb
xor
into
adc
jnp
aam
bound
into
mov
call
outsb
cmp
scas
icebp
or
hlt
push
lret
sbb
in
shl
icebp
xor
divb
les
aad
pop
pop
xchg
int3
sub
mov
adc
lcall
fsts
jl
sbb
mov
inc
cmp
push
and
divb
cwtl
gs
mov
mov
sbb
shlb
sub
inc
test
ss
sarl
xchg
dec
mov
mov
mov
inc
xor
or
psubsw
psubb
scas
les
into
mov
mov
or
sbb
add
cmp
enter
pop
decl
sti
dec
xchg
jno
ret
lahf
aaa
inc
pop
sub
lock
mov
mov
or
stc
es
dec
mov
shr
ret
jmp
push
mov
inc
or
negl
push
pop
call
xor
add
dec
xor
lahf
push
stos
inc
sahf
mov
and
sub
loop
pop
sub
pop
pushl
pop
jns
data16
push
pop
inc
lahf
popa
pop
mov
jne
arpl
imul
or
subb
lea
and
adc
mov
mov
sub
jns
sub
cmpsl
roll
or
sti
cmp
push
xor
fs
adc
and
int3
pop
aad
pop
ds
es
ret
arpl
stc
aas
aam
adc
jo
repz
imul
add
sub
mov
or
cmp
ret
cs
jmp
int
sbb
pop
pushf
mov
push
ds
sub
push
insb
jge
inc
lcall
cmp
dec
xchg
or
xor
popf
adc
int
lods
mov
loop
pop
aam
popa
js
out
movsb
shr
jno
mov
fisttpll
out
pop
test
jbe
dec
sub
cmc
ret
sti
jo
iret
inc
mov
mov
dec
lret
and
mov
rcrl
insb
pop
bound
sub
cltd
mov
inc
out
fsubp
sbb
inc
lds
lds
sub
dec
out
scas
test
jnp
cld
enter
mov
shlb
test
jle
adc
lea
sbb
dec
sbb
mov
jle
sti
or
mov
push
loopne
ds
mov
adc
ds
inc
mov
add
leave
pusha
adc
xchg
mov
fiadds
cmp
insb
mov
arpl
dec
xchg
pop
das
cmpsb
jno
lods
add
pop
in
ret
or
addb
loopne
rorb
mov
les
xchg
lret
inc
popa
pop
fstps
pusha
push
jp
nop
xchg
mov
cmp
rorl
xchg
push
sub
sbb
push
xchg
loope
jnp
jne
cmpb
shr
aas
fcoml
jp,pt
lret
xor
lock
mov
mov
adc
daa
out
pop
mov
fimull
out
mov
adc
mov
idivl
inc
push
out
add
and
clc
pop
test
or
repnz
shll
sub
xor
jp
imul
push
adc
fmulp
xor
push
test
pusha
xchg
jg
cs
leave
jg
rcl
jo
or
add
daa
push
outsl
adc
mov
mov
sbb
iret
push
in
and
das
int3
xchg
mov
jg
xor
fsub
icebp
xchg
cld
enter
dec
mov
push
sbb
push
jle
jmp
jecxz
inc
std
in
in
mov
loope
negl
xor
sub
out
adc
test
add
push
imul
lahf
xchg
xchg
sbb
push
shlb
lret
cltd
fdivp
lahf
lret
cmp
mov
test
dec
jge
lods
adc
jmp
not
gs
mov
lcall
mov
popf
jnp
pop
cwtl
xchg
bound
test
dec
mov
scas
or
and
jg
jle
std
adc
mov
lods
mov
fiaddl
fwait
sub
icebp
ss
add
jo
test
mov
mov
push
icebp
sbb
cmpl
lahf
mov
into
adc
into
pop
fistl
xor
out
mov
das
mov
jle
cmp
push
mov
fbld
popa
mov
or
ss
in
pop
jo
sbb
and
cmp
sbb
jle
push
xor
mov
inc
sti
dec
jne
shll
imul
jecxz
lahf
aam
xchg
mov
inc
mov
outsl
llwpcb
mov
xchg
and
jns
out
pop
and
aam
xchg
sbb
and
inc
in
int3
push
loopne
callw
inc
pushf
cwtl
mov
inc
cwtl
sbb
loope
or
pop
in
jmp
jo
insl
stos
sbb
dec
stos
vpsrlw
gs
stc
aaa
mov
rolb
jae
ljmp
sbb
aaa
cld
int3
xchg
mov
xor
xchg
jl
mov
mov
es
popf
xorb
loopne
popf
rcll
push
sbbb
xchg
dec
fcoms
cs
dec
mov
pop
popf
pop
xor
pop
adc
lret
outsl
dec
pxor
mov
jmp
clc
std
push
mov
xchg
in
pop
xchg
rol
add
inc
mov
jge
push
push
jo
loop
xchg
jne
popf
jle
lcall
outsl
mov
loopne
inc
pop
sub
in
mov
bound
fs
jmp
mov
lds
jp
or
inc
mov
add
sbb
shlb
mov
cmp
icebp
jg
dec
push
push
pop
mov
mov
pop
in
movsb
inc
ja
or
idivl
rol
popa
repz
mov
add
add
addr16
imul
lods
sti
inc
inc
push
jle
xchg
sub
int3
stos
mov
xchg
inc
test
sbb
ficompl
pop
lcall
gs
adc
jmp
push
enter
test
push
fwait
addr16
sti
dec
int
xor
or
push
filds
mov
mov
lock
in
fistl
sub
sti
iret
aas
sub
ss
inc
mov
pop
loopne
jne
push
iret
and
mov
push
call
xor
out
call
loop
jns
cld
jbe
aas
sub
push
rorb
js
cltd
cwtl
out
cmp
fidivl
cmpsl
add
fwait
cmpsl
cs
adc
sbb
adcb
dec
addl
push
in
xchg
mov
inc
fwait
cmp
in
xchg
inc
ja
pop
scas
xchg
push
lcall
rorb
push
sub
xor
add
adcl
push
cli
xor
shlb
jmp
dec
lods
into
cs
pusha
das
xor
and
pop
xor
stos
fisttps
out
out
test
call
test
xor
mov
add
adc
dec
jp
cmp
cmp
lock
rol
ret
js
shll
cli
mov
xchg
fldcw
pushf
and
stos
gs
movsl
js
and
cmp
frstors
and
fs
shl
test
test
loop
or
ret
mov
repz
out
bound
pop
in
adc
jne
mov
test
cmp
jnp
int3
jo
jnp
in
xor
sub
test
jge
and
or
divb
sbb
pop
and
pop
add
movsb
je
fucom
enter
xchg
mov
sbb
mov
enter
and
cltd
cmp
jb
adc
mov
inc
push
push
and
frstor
dec
popa
mov
pop
inc
int3
xchg
repz
bound
ljmp
pop
jmp
add
inc
sbb
sbb
loopne
mov
inc
mov
dec
loopne
add
aam
cmp
fiadds
ficoml
lea
sub
nop
push
or
mov
inc
add
shll
jg
adc
inc
dec
inc
ljmp
jns
adc
mov
testb
xor
and
test
dec
jle
icebp
xor
subb
std
adc
rcll
adc
out
mov
and
lods
adc
pop
aam
in
pop
es
lahf
or
repnz
adcl
or
inc
xchg
aam
ret
adc
mov
pop
in
mov
cmp
mov
adc
fstps
sub
repnz
aaa
imulb
mov
sbb
stc
imul
jg
push
push
pop
outsl
scas
cmp
or
loope
fs
in
mov
outsl
decl
notb
jp
out
mov
dec
xor
mov
mov
adc
dec
idivb
xor
pop
stc
adc
or
dec
mov
mov
outsl
or
scas
inc
lret
clc
shr
push
push
xorb
out
call
adc
pop
pop
mov
clc
arpl
repz
pop
stos
int3
call
enter
pusha
fsubl
pop
or
push
subl
inc
xchg
call
mov
bound
mov
mov
mov
stc
bound
adc
pop
insb
repz
xor
adc
pop
mov
xchg
or
add
add
ja
cltd
stos
or
fdivrl
cmp
mov
mov
filds
ret
xchg
test
in
rclb
xchg
mov
pop
les
dec
gs
pop
setae
and
fstps
lcall
cmp
cwtl
outsb
sti
dec
insb
rolb
in
lods
mov
xchg
and
into
mov
in
jle
lds
stc
pop
sub
out
add
bound
sbb
add
adc
push
xor
sub
rolb
gs
test
andl
out
shrl
cli
xchg
in
push
dec
out
mov
add
das
cmp
pop
push
imul
adc
fcoms
push
mov
mov
lcall
lea
sarl
mov
imulb
ss
ret
mov
mov
mov
fstl
adc
push
stc
loop
push
jge
xor
mov
jmp
pop
sub
pop
outsl
addl
push
pop
mov
mov
mov
cmpsl
cmp
jmp
imul
cwtl
mov
aam
cli
test
repz
jg
dec
add
inc
pusha
stos
mov
cld
lock
fwait
xlat
insb
push
loop
xchg
inc
cld
inc
or
add
sbb
sbb
and
leave
or
xor
sbb
inc
cld
cltd
add
ficoms
adc
out
inc
mov
popa
mov
loop
repz
push
lds
rorb
stc
sbb
dec
cmc
test
nop
push
cld
add
bound
std
ret
clc
repnz
mov
xchg
les
stos
and
push
scas
jle
cmp
pop
dec
test
daa
int
and
dec
mov
clc
fdivl
mov
fsubp
in
jo
sarl
bound
jno
dec
xor
negb
test
push
aaa
loopne
aam
call
int
add
xlat
dec
mov
push
add
mov
jmp
and
sub
mov
add
pop
mov
dec
adc
sbb
fsts
nop
jecxz
hlt
dec
mov
movsb
xchg
inc
pop
sbb
outsb
std
psubsb
lods
imulb
sarl
jge
sbb
dec
lods
arpl
push
scas
push
mov
gs
addr16
xor
fwait
adc
daa
es
inc
mov
test
cmp
bound
lret
inc
je
lea
in
sub
loope
push
pop
mov
cld
lret
mov
out
pop
push
add
movsl
in
icebp
or
adc
dec
cmp
dec
iret
sub
inc
dec
xchg
hlt
xchg
insl
es
jns
orl
cmpsb
pop
pop
adc
mov
lahf
cwtl
and
adc
orl
inc
mov
pop
repnz
push
outsb
lods
daa
add
push
and
scas
std
pop
mov
push
xchg
in
fstl
lret
xor
lret
push
xchg
mov
fmull
inc
enter
dec
adc
iret
xchg
and
pop
inc
pop
fwait
xchg
add
adc
sbb
push
xor
mov
inc
dec
cld
and
xchg
sub
mov
or
cmpsl
dec
fimuls
movsb
pop
sbb
inc
sub
sbb
jns
xchg
inc
cmp
std
dec
out
outsl
xchg
subl
add
mov
out
fs
clc
pop
push
in
ud2
mov
insl
xchg
ret
int3
xchg
sahf
push
dec
jmp
dec
in
hlt
nop
push
mov
gs
adc
dec
inc
fs
js
push
or
xlat
shl
js
incb
aaa
adc
add
cmp
mov
aaa
addl
ret
imul
xchg
aaa
sbb
sbb
jge
jns
push
stos
xor
mov
loope
dec
mov
xchg
roll
pop
and
andb
xchg
test
fcomps
add
push
adc
arpl
sbb
or
mov
fldenv
sbb
das
subl
jbe
je
fwait
push
adc
jg
mov
jmp
jb
dec
dec
jge
outsl
sbb
mov
ret
push
inc
into
cmc
cmp
jle
mov
lcall
dec
xchg
std
xchg
pop
mov
pushf
sbb
and
in
pop
xor
lret
inc
xor
mov
popf
aam
mov
jl
adc
stos
inc
lock
std
mov
push
gs
gs
sub
fucomp
mov
enter
xchg
mov
or
insb
jecxz
inc
jg
xchg
fwait
cmc
inc
lock
and
sub
push
daa
subb
clc
stc
negb
rolb
movsl
or
rol
lea
test
jge
jo
addl
lret
das
es
ja
out
out
pop
mov
mov
cs
push
jb
notl
fsub
sti
call
push
cltd
mov
adc
int3
xchg
and
leave
in
sub
add
insb
inc
mov
push
repz
fmulp
mov
fistl
mov
jp
loop
and
xor
sbb
stc
adc
mov
adc
push
hlt
mov
addr16
inc
and
jb
rolb
and
mov
push
adcl
stc
mov
ficoms
lods
roll
mov
dec
mov
icebp
sub
sti
mov
pop
mov
sti
jmp
mov
int
and
xor
jb
mov
mov
aaa
test
push
out
outsb
bound
roll
pop
mov
fcoms
jg
nop
repz
mov
mov
insl
mov
lds
adc
int
cld
sar
ljmp
cli
pop
push
mov
fwait
stos
nop
xor
movsb
rcrl
pop
cmpsb
nop
or
test
sbb
cmp
sbb
mov
jmp
aas
jns
arpl
jg
jno
jmp
dec
pop
mov
mov
decl
mov
mov
or
jecxz
xor
cmp
out
test
jp
repnz
outsb
dec
cmp
popf
mov
sti
dec
fidivrl
jne
sarb
sub
inc
dec
push
and
enter
lds
sbb
repnz
lcall
shlb
pop
sbb
adc
xchg
pusha
jmp
mov
daa
loopne
mov
jmp
inc
or
lds
filds
inc
andb
mov
pushf
shll
aas
sbb
rclb
int
int
test
fistpll
add
or
jp
mov
data16
mov
jge
mov
dec
cwtl
in
hlt
cs
insb
hlt
inc
pop
in
test
repnz
outsl
xor
jnp
or
xor
mov
or
xchg
inc
mov
xchg
pop
mov
shll
sub
addl
sbb
fwait
sbb
fdivr
mov
sub
bound
out
add
into
mov
loope
xor
pop
mov
or
call
xchg
ja
mov
pop
mov
mov
stc
mov
cld
dec
jno
pusha
jecxz
jns
das
mov
sti
cmc
push
mov
or
ss
pop
scas
pop
mov
xchg
pop
cwtl
repz
insb
pop
and
pusha
orb
add
mov
dec
push
xchg
enter
dec
mov
xchg
mov
xchg
repnz
cmpsl
inc
jmp
jnp
addr16
add
popf
sbb
icebp
std
sub
test
push
inc
cs
popa
ja
test
xchg
repnz
sbb
les
dec
pop
test
push
mov
popl
or
sub
xchg
fcoms
xchg
xchg
test
push
std
loopne
rcll
push
dec
pop
out
arpl
out
std
scas
xor
cmp
or
shll
rcrb
cli
dec
push
push
and
pop
push
cmpsl
inc
or
mov
jle
stos
push
into
cmp
jge
loope
add
clc
loopne
or
stc
adc
adc
aam
mov
dec
mov
add
or
stos
cmovo
mov
ljmp
in
jle
mov
nop
lcall
test
pusha
popf
in
jmp
cmp
mov
push
lret
enter
cmpsl
push
sbb
loope
lods
in
push
loopne
jno
fadd
outsb
outsb
sub
into
out
loopne
cli
je
cmp
out
cmc
test
out
jmp
out
lcall
data16
sbbl
cmp
ror
or
sbb
imul
sbb
push
mov
clc
mov
adc
adc
stos
movsl
data16
jmp
cmp
cmp
pop
jg
mov
aam
enter
jge,pn
adc
cmpsl
and
inc
test
pop
mov
xchg
cmp
iret
mov
inc
cmp
aaa
lods
jle
mov
sbbb
mov
dec
lcall
fdivl
jge
pushf
mov
cmp
mov
pop
xchg
mov
leave
int
sub
ja
or
add
cmp
xor
add
push
mov
sbb
jg
push
cltd
jp
mov
roll
sub
subb
cmp
roll
outsl
shrb
lods
add
dec
es
jle
push
push
or
mov
inc
mov
or
arpl
repnz
and
adc
stos
mov
andb
leave
jge
jo
nop
adc
in
pop
es
test
movsl
js
xchg
sbb
les
fwait
mov
lds
add
ret
cmp
pusha
adc
dec
daa
mov
dec
std
and
push
lds
lcall
mov
inc
roll
imulb
inc
outsb
js
loopne
testl
arpl
loop
repz
pop
mov
jnp
pop
xchg
jbe
or
shr
xlat
ja
xlat
or
push
outsl
push
inc
out
lret
cmp
fs
mov
icebp
addr16
cmp
insb
pushw
test
aad
jl
lsl
loope
and
out
ret
jecxz
cwtl
sbb
dec
pusha
dec
in
add
movl
dec
faddl
sub
daa
pop
daa
pop
push
cmp
loope
add
cmc
xor
adc
push
mov
xchg
mov
ljmp
stos
adc
xor
data16
jo,pt
inc
addr16
dec
sbb
inc
mov
inc
jg
fisubl
loop
orb
adc
cmp
inc
ret
and
dec
jp
movsb
xor
adc
fucomip
arpl
aas
mov
in
and
lahf
jne
xchg
rcrl
adc
cmp
cmp
jnp
push
out
scas
jns
jg
sti
or
and
mov
or
pop
loop
cmp
insb
pop
mov
add
inc
sbb
test
mov
or
mov
aas
mov
fsubrs
pop
pop
lea
push
fistl
out
jns
add
jmp
pop
out
outsb
stos
add
std
or
ja
les
imul
lea
das
lock
xchg
push
push
lds
pop
add
cmc
and
flds
repz
enter
insl
ret
sarb
call
or
push
stc
in
dec
dec
pushf
cmpsb
sarb
mov
daa
sbb
scas
mov
pop
sbb
add
fnstsw
in
fwait
xchg
xchg
shll
dec
and
leave
add
xlat
pop
cltd
in
in
cmp
mov
adc
jae
mov
hlt
rol
shlb
insb
cltd
pop
lods
jecxz
divl
test
mov
and
in
ja
pop
jae
mov
popf
mov
pop
test
inc
aad
fsubs
xor
push
or
mov
pusha
aas
add
lahf
negb
pop
pop
adc
mov
loope
dec
icebp
mov
cmp
mov
xchg
xor
in
lods
andb
push
adc
divl
or
mov
clc
pop
out
fs
aaa
ret
ret
xor
stos
ret
mov
andl
imul
ljmp
das
das
mov
and
daa
inc
sbb
push
loope
lret
push
lds
sub
pop
mov
pop
lds
aad
imul
int
popf
or
mov
aaa
sub
pop
xor
mov
pop
fstpt
shlb
int
inc
dec
sub
cli
mov
jb
adc
lock
inc
fidivl
std
mov
push
and
push
ror
pop
adc
xchg
pop
mov
lret
sbb
push
sbb
dec
dec
inc
test
ja
xchg
and
les
int3
pop
mov
lods
aam
mov
push
pop
mov
and
sbb
stc
stos
in
inc
push
pushf
jg
addr16
cmp
push
cmp
clc
sbbb
and
cmp
sub
push
xor
data16
out
adc
jno
pop
mov
inc
mov
jb
pop
or
cwtl
xchg
mov
dec
addl
test
popf
jecxz
adc
ret
imul
push
lahf
fs
xchg
push
xchg
popa
pop
fidivl
incl
pop
insl
lcall
and
xor
addb
xlat
sbb
bnd
ja
outsb
push
mov
jbe
and
stos
push
mov
cmc
addb
loope,pn
cmp
cli
sbb
mov
insb
jg
test
lods
adc
sbb
xlat
fnstenv
push
mov
jns
sbb
insl
out
push
in
push
hlt
rorb
inc
dec
inc
test
ror
xchg
sahf
pop
xchg
sub
jge
test
push
cmpsb
inc
cwtl
test
push
xchg
and
and
fdivrs
adc
movsb
xor
sbb
inc
pop
cwtl
mov
js
dec
out
push
cmp
cmc
lea
mov
ja
in
cld
jg
pop
enter
add
mov
jmp
imul
add
mov
gs
je
cmc
xor
scas
daa
in
add
cmp
xchg
dec
sbb
stos
pop
add
fimull
test
ret
add
cltd
pop
rep
movsl
add
adc
xor
or
push
add
enter
insl
mov
mov
insb
popf
lret
divl
push
out
test
inc
or
stc
mov
sbb
mov
mov
test
xor
add
mov
xchg
fstps
dec
into
pop
jae
xor
pop
jno
pop
cmpsb
adc
sbb
mov
jp
push
and
andl
mov
popf
pop
addl
arpl
jp
shll
cmpsb
mov
or
loopne
mov
push
xor
fstps
jmp
pop
sub
add
int3
add
mov
mov
push
ja
pop
sbbb
test
test
test
popf
scas
stos
scas
int3
aam
ret
mov
xor
loop
dec
pusha
popf
jae
mov
aaa
incb
inc
or
fistpl
xchg
push
push
sbb
testb
jmp
cmp
enter
mov
sti
sub
test
adc
inc
adc
pop
test
or
cmp
popf
mov
insl
add
or
jno
cltd
or
add
sbb
outsb
ret
enter
dec
jle
xlat
lds
shrl
daa
movsl
inc
mov
nop
mov
ret
dec
fsubrl
cwtl
xchg
dec
xor
out
or
fadds
mov
insl
scas
jnp
push
and
aad
mov
pop
xor
or
fisubrs
ret
popf
sbb
pop
loop
push
clc
mov
in
adc
cs
push
jae
push
into
sbb
cwtl
push
sub
fsubrl
ret
insb
sahf
mov
popf
arpl
dec
sbb
jno
pop
pop
pop
pop
mov
push
mov
fsts
je
imul
icebp
mov
cmpsb
xor
out
adc
lcall
jne
mov
sbb
sub
sub
jle
jp
mov
pop
pop
out
or
jae
adc
nop
push
mov
sarl
leave
jnp
xchg
jge
mov
cmp
push
gs
addr16
orl
stos
shll
nop
pop
gs
repnz
scas
in
fildl
cmpsb
fdivs
dec
stos
pop
dec
or
addb
push
dec
lret
cltd
inc
arpl
ja
mov
test
cltd
mov
popa
cmpsl
inc
add
scas
int3
rcrl
nop
in
cmp
ret
sbb
mov
push
xchg
lds
testb
fists
incb
aas
inc
push
nop
hlt
push
xchg
and
lods
hlt
nop
pop
loopne
je
pushf
xor
addl
mov
outsb
ffreep
out
xor
cmp
xor
movsl
dec
sahf
ds
insb
add
mov
xor
mov
dec
push
jb
and
aas
inc
push
aam
xor
mov
inc
and
cmp
mov
inc
mov
sbb
in
loopne
mov
mov
xchg
int3
sub
in
andl
pusha
lret
jmp
sub
or
cltd
and
jno
aam
sbb
stos
fldenv
sti
pop
fcompl
lea
pop
or
sbb
xchg
popf
mov
inc
mov
shlb
loope
insb
xchg
rclb
xchg
subl
inc
insb
pop
or
fdivs
in
pop
sub
cmp
lcall
pop
adc
mov
mov
scas
in
rcrb
fwait
sub
mov
and
sub
test
pushf
jno
xchg
dec
divb
sbb
inc
push
mov
std
nop
std
outsl
insb
lret
push
insb
and
arpl
or
xor
sub
sti
jp
xor
pop
rorl
sub
bound
or
ss
sub
orl
inc
les
jle
aam
in
pop
add
jecxz
daa
sbb
pop
xor
add
fisttps
mov
cmp
xor
das
rorl
in
add
out
frstor
dec
and
dec
fiaddl
imul
fisubrs
sbb
pop
jae
repnz
imul
fstpt
jne
lret
shlb
and
jbe,pn
hlt
or
adc
adc
mov
xchg
insb
fwait
jg
mov
xor
into
sbb
xor
mov
pop
dec
jge
xchg
jge
daa
dec
arpl
dec
rcrb
sub
push
dec
xchg
jecxz
pop
sub
repz
pop
push
aad
inc
test
xchg
inc
and
mov
jbe
out
fsubl
clc
mov
stos
pop
arpl
addr16
pop
test
push
shll
loopne
out
je
dec
cmp
outsl
pop
movsl
pop
outsl
jl
pusha
xlat
mov
cmp
jge
push
pop
xchg
aad
ret
das
sub
std
and
dec
fcompl
sti
sub
xorl
cmp
sub
mov
mov
dec
aad
pop
and
xchg
or
pop
mulb
fcoml
int
mov
adc
xchg
sti
in
loope
sbb
fdivrs
and
inc
adc
imul
mov
addr16
jmp
fwait
lds
test
int
lods
cmp
lret
cmp
gs
shlb
push
mov
rcll
lock
out
lahf
gs
insl
loopne
sti
xor
jbe
movsl
mov
mov
and
fs
in
dec
mov
mov
rolb
pop
cli
sbb
rcr
icebp
push
push
add
adc
imul
icebp
mov
xchg
cltd
or
ret
and
push
add
call
cli
jg
add
outsl
das
adc
sub
rcrb
int3
dec
xchg
fmull
add
xchg
outsl
call
sub
stc
inc
fstps
in
xor
xchg
cltd
fldenv
mov
or
cli
lea
mov
mov
insb
jle
xchg
inc
repz
shl
shrl
in
inc
cmc
push
fnstcw
int3
jbe
pushf
push
popa
lcallw
clc
mov
push
sbb
xchg
mov
inc
vpminub
xchg
scas
push
out
push
add
mov
mov
adc
jp
inc
cmp
fnstsw
call
pop
inc
dec
adc
inc
imulb
inc
jo
arpl
lret
push
movsl
rcrl
mov
int3
clc
ja
pop
and
int3
push
gs
jnp
mov
cs
fisttpll
xor
cwtl
ret
sub
or
and
add
inc
les
add
ret
imul
sbb
aas
aas
aad
mov
pusha
rorl
pop
inc
add
pop
sbb
mov
jne
adc
xchg
xlat
test
jb
lcall
mov
call
arpl
es
loope
xor
pushf
fldt
js
xchg
lea
cmp
sub
cmp
mov
xchg
pop
imul
mov
in
and
mov
lock
sahf
mov
mov
adc
jb
aam
movsl
push
loope
hlt
mov
clc
out
imul
xchg
mov
push
mov
push
enter
dec
mov
cmp
outsl
outsb
fmuls
loope
xchg
inc
pop
outsb
mov
cmpsl
push
fidivrl
ret
mov
add
repz
fldenv
es
add
inc
nop
push
rorl
xchg
xor
testb
bound
xor
add
sarl
or
adc
dec
out
fwait
jb
insl
aaa
or
loope
mov
cli
sbb
popa
cwtl
enter
lcall
enter
mov
mov
or
ds
div
fcoms
cmp
cltd
pop
scas
xchg
and
mov
ficoms
xchg
mov
sbb
mov
jnp
jbe
mov
imulb
pop
mov
lcall
xchg
cs
fmuls
jmp
or
or
data16
loopne
mov
mov
xor
inc
lods
jbe
in
cli
pop
jne
test
fdivr
inc
dec
arpl
int
sti
xchg
push
mov
je
notb
pop
push
in
ffreep
outsl
pop
adc
fwait
push
in
movsb
cwtl
adc
fs
inc
jbe
inc
xor
or
inc
nop
pop
jae
dec
push
lret
lahf
jmp
sbb
xor
push
inc
mov
test
insb
arpl
mov
cmpl
enter
sub
dec
test
mov
sbb
add
inc
jno
push
sub
push
xchg
xor
clc
mov
adc
cmp
pop
push
lods
adc
add
xlat
add
sbb
dec
inc
mov
dec
inc
adc
cltd
jg
xrelease
cmp
shlb
xor
or
movsl
jns
adc
jp
sbb
mov
xchg
stos
in
mov
daa
in
lock
icebp
outsb
inc
test
mov
push
decl
aaa
mov
add
in
inc
xor
jno
mov
and
jne
xchg
jae
lret
xor
scas
inc
mov
pop
dec
outsb
clc
outsl
xor
pop
cmp
mov
in
dec
cltd
in
cmp
sub
call
loop
add
in
mov
cld
into
std
sbb
test
stos
cld
cmpsl
adc
pop
push
mov
repz
fiadds
mov
mov
pop
fxtract
repz
adc
cmpl
fisubrs
js
pop
cmp
stos
icebp
rorl
out
testb
mov
repnz
out
in
cs
mov
xorl
lahf
add
pop
add
xor
and
cmpsl
or
jns
movsl
scas
bound
icebp
sbb
lea
daa
sbb
inc
mov
ret
mov
pushf
sarb
jmp
sub
xchg
lock
sub
into
sub
mov
mov
fldt
inc
orb
xor
inc
sbb
push
lret
and
or
ja
push
out
ret
mov
add
or
adc
mov
push
cs
hlt
insb
jne
lods
sbb
mov
add
jne
stos
sub
out
inc
mov
push
mov
in
jo
aaa
out
pushf
call
jmp
dec
inc
jns
pop
mov
inc
ss
cmp
inc
mov
nop
and
leave
movsl
ds
hlt
pop
push
ds
cmp
push
push
mov
cmpsl
cld
pusha
negb
push
dec
cmpsb
insl
dec
sbb
adc
mov
mov
test
jge
lret
push
loope
mov
push
std
add
cmpsl
cmc
mov
mov
xor
fisubl
xor
std
and
scas
pusha
imul
dec
out
inc
add
stc
leave
test
stc
aad
out
push
cmp
jo
lock
xchg
outsb
jl
je
pop
stc
mov
sub
sub
enter
jb
enter
pop
sbb
mov
test
or
or
xchg
sti
lock
ret
push
out
or
stos
sub
cld
or
cld
sub
push
out
dec
xchg
jge
sbb
and
call
movl
mov
mov
mov
or
fdivr
mov
insb
or
xor
cs
cmc
mov
and
pop
fisttpll
sti
lea
add
xchg
bound
dec
ficompl
sub
bound
jb
ror
sahf
mov
dec
jne
mov
and
sbb
jl
bound
sbb
and
mov
inc
inc
lahf
sbb
xchg
sub
aad
mov
dec
in
filds
fidivrs
sub
cwtl
and
cmp
jns
mov
push
je
xchg
or
pop
mov
mov
pushf
in
pop
test
add
dec
mov
mov
and
popa
dec
cltd
adcl
cmp
outsb
xor
pop
arpl
or
xor
mov
cwtl
es
pop
lea
push
out
sti
lea
dec
jecxz
push
in
and
bound
pop
mov
jle
sbb
jo
aas
mov
sbb
push
or
mov
jns
movsl
fwait
jns
inc
mov
sub
out
and
pop
pushf
loop
mov
or
push
jbe
mov
add
sbb
lds
cmp
and
cli
scas
je
push
les
pusha
xor
and
mov
inc
in
js
push
ljmp
push
xchg
and
mov
inc
stc
bound
lcall
push
cmpsb
pushl
test
lods
daa
jns
push
lock
imul
stc
in
stc
push
mov
fmull
mov
fmuls
and
add
cmp
cmpsl
or
jp
cli
pushf
cmp
fs
add
popl
fcoml
loop
in
xchg
aam
insl
push
and
in
mov
mov
xchg
inc
repnz
clc
outsb
sbb
mov
jae
xchg
xlat
mov
lock
lret
push
cmp
cmc
mov
outsb
mov
leave
cmp
jb
sbb
cld
or
scas
xchg
inc
nop
repz
jge
mov
push
enter
sbb
ret
xor
test
in
das
lahf
data16
xchg
or
xlat
jp
add
imul
hlt
repz
cmp
jl
pushf
jp
jns
mov
push
lds
scas
test
add
test
daa
sti
test
into
mov
pop
or
cmp
repnz
dec
inc
mov
xor
inc
push
out
push
in
test
add
enter
xchg
mov
shl
lret
or
sbb
mov
andb
fidivl
shrl
pop
call
int
xlat
mov
sbb
out
cwtl
stos
in
popf
jg
mov
lods
cmp
lock
sbb
aam
push
xchg
sbb
mov
addr16
shlb
jg
cmpsb
push
addl
cmp
imul
mov
pop
js
movsl
ss
dec
sbb
push
test
xor
jno
movsb
sbbl
rol
sub
cmp
lds
je
jl
mov
inc
sbb
aaa
dec
out
xchg
nop
inc
sub
pushf
mov
or
arpl
filds
jg
lret
and
fnstcw
xor
jg
mov
jns
and
jo
outsb
adc
ja
dec
adc
cltd
inc
fiadds
add
xchg
cwtl
idivl
scas
sub
pop
fildll
sub
mov
pop
or
push
mov
imul
mov
movsb
in
and
xchg
dec
movsl
inc
dec
lods
inc
mov
push
stos
or
lods
pop
cmp
out
roll
fsub
add
dec
jns
xor
pushf
outsb
mov
fists
pop
lret
sbb
shll
dec
nop
imul
mov
dec
jl
insl
flds
push
mov
jle
mov
test
popa
dec
fldt
jg
dec
adc
adc
cmp
and
mov
ljmp
fwait
sbb
shll
lods
arpl
sub
popa
xor
cmp
hlt
loope
rcll
jg
ret
inc
adc
push
lods
push
pop
lcall
mov
shlb
test
int3
sub
rcrb
roll
sbb
or
jle
out
mov
insl
push
inc
adc
sbb
test
xchg
jecxz
out
fsubs
mov
test
in
adc
addl
enter
pop
aam
movsl
arpl
lahf
and
jl
xchg
mov
mov
cmpsb
pop
sbb
cmpsb
repz
dec
dec
xchg
dec
and
dec
sahf
or
shl
sub
dec
es
das
in
mov
xchg
dec
shll
loope
pop
or
xchg
pop
dec
xor
out
push
fsubr
data16
divb
int
lea
pop
cmp
push
enter
sbb
push
cmp
cltd
flds
mov
mov
daa
jno
fnstcw
gs
mov
repnz
popf
cltd
push
popf
pop
push
cmc
or
out
jl
cmp
and
add
xchg
fsubp
xchg
xchg
arpl
jp
jge
pop
mov
xchg
push
jb
pusha
andb
sbb
cmpsl
sahf
daa
push
jno
imul
adc
sub
mov
imul
lea
pop
jbe
bound
icebp
sbb
call
neg
test
xor
inc
ja
aaa
xor
push
cltd
sbb
push
xor
adc
orb
add
push
pop
ret
xor
ja
out
sbb
ljmp
xchg
mov
dec
jo
into
lods
pusha
push
lods
mov
push
stos
movsl
or
jnp
add
mov
fcoms
mov
in
mov
fadds
cmp
scas
sti
and
inc
addr16
jnp
aam
jae
rcll
and
push
mov
pop
pop
andb
cltd
dec
xchg
stos
sahf
shr
xchg
push
pop
idivl
daa
repz
cltd
lods
orl
lock
lcall
xlat
in
push
insl
xchg
inc
or
les
xlat
imul
lods
dec
mov
scas
sub
in
mov
mov
jl
mov
and
push
xor
mov
mov
mov
xchg
sub
mov
add
aad
xchg
mov
inc
pop
call
insb
test
push
xor
add
mov
ljmp
cmp
imul
icebp
jae
es
fs
mov
sbb
jae
push
and
mov
insb
pop
jnp
dec
mov
jp
test
and
sub
pop
cmc
repz
ds
mov
rep
sahf
outsb
push
test
cmc
push
jmp
lret
pop
mov
lods
mov
inc
shll
mov
cld
subl
inc
inc
sbb
cmp
imul
sub
and
ret
sbb
je
scas
test
scas
mov
loop
call
test
xor
sub
loopne
or
pop
das
out
popa
xchg
lea
call
sti
pop
scas
je
xchg
cmp
push
and
data16
call
dec
stos
test
inc
sub
faddp
mov
pop
int
movsl
into
fadds
jle
rorl
movsb
adc
push
jg
mov
movsb
xlat
paddusw
cmp
pop
movsl
int
push
sti
xchg
mov
adc
mov
ror
aaa
test
and
sub
cmpsl
cltd
add
ror
or
mov
das
in
lock
andb
mov
je
sub
roll
inc
int
push
or
xor
xlat
insb
es
mull
mov
test
adc
dec
xchg
loop
mov
add
dec
bound
mov
inc
mov
dec
xchg
and
add
in
push
int
or
pusha
xchg
jl
test
pop
jge
dec
outsl
dec
stos
pushw
stc
cs
cmp
imul
jmp
movsl
cli
mov
sub
xor
aad
int3
dec
sub
jbe
xchg
rorb
cwtl
cmpsl
aam
sbb
in
jmp
mov
jnp
dec
push
in
inc
imul
inc
or
jmp
inc
enter
mov
sub
movsb
fiadds
and
xchg
add
sbb
sbb
repnz
ret
or
shrb
fsts
add
sbb
xchg
push
ljmp
out
daa
and
lods
sub
inc
mov
dec
push
mov
push
arpl
xchg
sbb
fimull
add
add
rolb
and
sbb
out
push
mov
xor
jne
push
sub
inc
mov
jge
dec
and
js
mov
nop
push
jmp
add
rcl
clc
movsb
inc
and
rorl
mov
lds
je
inc
shl
lcall
clc
or
lcall
loopne
stc
and
or
lcall
xchg
cmp
ja
nop
and
popf
sahf
add
cmpl
sbb
push
cmp
flds
cmpl
sbb
cmpl
out
lea
fbld
xor
lods
or
cmp
fwait
sub
cmpsl
xchg
int3
popa
and
jmp
adc
pop
les
push
rcll
out
cs
incb
jmp
pop
mov
lahf
gs
mov
sbb
js
loopne
nop
xchg
aad
add
and
mov
sbb
daa
and
mov
adc
mov
xchg
pcmpgtw
adc
fistpll
iret
test
loope
lahf
je
xor
inc
push
repz
rolb
cmp
jle
sbb
insb
int3
aad
push
ficoms
add
lods
sahf
in
or
das
adc
pop
imul
pop
pop
dec
and
push
inc
es
mov
jns
mov
fstps
xor
push
cmpsb
xor
flds
inc
xlat
mov
push
add
jg
movsb
jmp
mov
adc
sub
xor
sti
in
call
nop
pop
push
xor
insl
lcall
sub
paddsw
mov
test
sbb
adc
andb
dec
xor
dec
jae
imul
push
sbb
stos
push
stos
mov
sbb
cmp
cmp
mov
movsb
cltd
add
push
adc
iret
and
pop
dec
inc
xor
xor
iret
sbb
leave
hlt
int
or
popf
pop
mov
cmc
inc
arpl
rclb
fs
adc
stc
hlt
push
addr16
cs
add
ss
xchg
sub
and
scas
sub
arpl
push
pop
out
pop
add
sbb
jecxz
cmp
inc
ret
xor
imul
jbe
aaa
xchg
and
inc
xchg
lret
push
and
sahf
pop
and
pop
sbb
pop
je
or
int3
xchg
xor
adc
inc
loop
lahf
xor
movsb
fwait
xchg
jb
out
cmpsb
add
mov
movsl
dec
dec
mov
movsl
xchg
dec
pusha
inc
data16
aam
mov
xchg
nop
addr16
icebp
lock
in
or
fwait
lret
or
hlt
mov
pop
cmpsb
out
es
jge
add
inc
mov
xchg
lahf
sub
or
jle
mov
xchg
sub
mov
orl
xor
fnop
push
add
rcrb
add
push
xor
sub
loop
push
int
push
gs
mov
dec
and
xchg
daa
sub
fldl
in
adc
sbb
push
pop
lods
push
outsl
and
movsl
jae
sub
push
mov
loop
les
sbb
out
icebp
sub
dec
test
mov
in
scas
or
push
insb
cs
mov
pusha
lret
jbe
cmp
lcall
lods
and
cmpb
adc
mov
dec
stc
test
loop
add
xchg
imul
sbb
add
and
jno
jg
inc
loope
leave
sub
sub
sub
shlb
xchg
nop
inc
cmc
sub
sbb
dec
mov
xchg
stos
mov
and
sub
out
inc
inc
jecxz
lock
popa
pop
or
sub
repnz
pusha
arpl
pushf
das
jg,pt
out
pop
mov
in
aaa
in
mov
imul
jp
xchg
xlat
mov
lock
sbb
cmp
cmpsb
scas
das
mov
inc
cmp
leave
std
mov
scas
loope
les
inc
out
inc
jb
insl
jnp
pop
adc
iret
push
jp
lcall
push
insb
jmp
push
jns
jns
cltd
xchg
xchg
jns
stos
adc
mov
xchg
cs
movsl
mov
inc
cli
jns
movsb
lahf
dec
mov
stos
sarb
lea
or
mov
mov
in
test
mov
xchg
push
jl
mov
dec
loop
mov
cmpsl
call
or
sub
je
iret
ret
xlat
jle
dec
mov
sbb
adc
cmpsb
out
int
in
mov
add
sub
xchg
loopne
rcll
aam
mov
lods
inc
sub
loop
int3
loope
push
cmp
xchg
and
in
add
adc
xchg
clc
sbb
stos
mov
repz
test
mov
and
pop
jmp
out
shrb
push
sub
lret
cmp
pop
icebp
scas
scas
inc
std
mov
xor
ror
cmp
jg
jo
das
inc
mov
xor
push
and
sbb
sbb
lock
dec
nop
xchg
adc
decl
fcom
push
fisttps
dec
jmp
dec
repz
hlt
adc
ss
adc
sbb
and
jb
cmpsb
inc
out
ljmp
mov
subb
rorl
inc
jne
mov
cltd
push
sub
out
xchg
sbb
mov
out
lds
rcr
gs
mov
sub
movsb
push
insb
cmc
call
stc
xchg
mov
dec
sahf
jno
std
neg
and
cmp
arpl
add
cmc
push
push
mov
mov
std
cmpsl
push
dec
add
dec
adc
mov
stos
push
std
sbb
scas
je
or
jmp
push
popa
inc
test
enter
inc
or
mov
xchg
xor
lahf
movsb
fmul
xor
lods
mov
call
jle
jns
out
dec
cmp
push
je
mov
hlt
mov
lea
mov
sahf
jmp
insl
fldl
inc
adc
xchg
dec
jmp
dec
pop
cmp
pop
sahf
adc
in
add
insl
inc
xchg
dec
lods
xor
pusha
test
mov
pop
fsts
xchg
stos
addr16
stos
js
loopne
push
outsl
es
mov
add
jl
dec
imul
jae
and
pop
xor
mov
mov
jge
cmp
pop
sbb
cmp
jbe
std
hlt
shrb
out
cs
repz
mov
mov
sbb
mov
push
test
bound
add
xor
and
sbb
pop
in
push
and
sbbl
pop
das
adc
push
pop
add
cld
cmp
aas
add
int3
test
sbb
fidivrs
test
movsl
scas
or
pop
ror
mov
jne
scas
cmp
dec
cmc
sub
xchg
lahf
jno
adcl
adc
aam
xchg
cli
or
xchg
inc
adc
push
inc
inc
cmpsb
mov
imul
cmpsb
lock
adc
sbb
sub
fmull
mov
cltd
scas
mov
int3
arpl
xchg
mov
aad
xchg
push
sbb
cmp
push
jbe
ret
sub
hlt
shl
addr16
jmp
inc
add
jns
sbb
clc
lods
pop
push
inc
aaa
cmpsb
subb
inc
ret
mov
xlat
hlt
orb
scas
inc
and
push
jp
sub
stos
sub
sbbl
pop
jg
pushf
stos
call
test
out
repnz
inc
add
xor
adc
daa
xchg
adc
jne
lahf
stos
mov
adc
ds
sti
fwait
loop,pn
aas
dec
mov
scas
sbb
xor
mov
pop
std
ljmp
pop
sbb
cmp
lods
inc
mov
cmp
ss
or
cli
xchg
icebp
stos
dec
cmp
xor
addr16
int
and
sahf
out
mov
jns
stos
jle
jecxz
xchg
push
jg
sbb
mov
insb
sub
sub
cmpsl
ja
roll
mov
lods
mov
sub
scas
pop
fmulp
and
adc
lds
lock
ret
sbb
divb
adc
mov
sub
bound
lahf
or
stos
ret
cmp
sub
mov
fwait
sbb
mov
cmp
std
ljmp
cmpl
arpl
xlat
pop
push
emms
aam
xchg
pusha
jl
and
iret
repnz
sahf
cltd
xor
jmp
cwtl
dec
fstps
int3
dec
ret
stos
push
out
xor
mov
inc
cs
arpl
mov
repnz
lea
push
dec
sub
dec
xchg
mov
mov
xlat
dec
mov
push
outsl
bound
insl
ret
sbb
pop
outsl
ljmp
cld
jl
or
in
sahf
jae
hlt
test
cs
pop
sbb
lret
cmp
push
leave
cltd
mov
int
push
mov
or
fsubrl
aaa
outsl
shrb
ds
imul
test
int3
test
xchg
call
mov
cwtl
sbb
adc
mov
fs
cmp
pop
pop
sub
inc
cmpl
insb
pop
sub
rcll
jb
fcmovbe
hlt
test
pop
mov
mov
lds
add
iret
jecxz
fucomi
pop
sbb
pop
adc
push
push
cmp
mov
clc
addr16
pop
adc
leave
inc
mov
sti
mov
sbb
and
adc
dec
movsb
and
mul
xor
cmpl
xchg
inc
movsl
outsl
adc
xor
ror
and
in
cmp
add
pop
jge
mov
jle
mov
cmp
xor
loopne
mov
ret
sub
push
xchg
adc
dec
fstp
mov
movsb
jne
out
adc
sti
sti
stc
pop
clc
jle
mov
aaa
sub
inc
es
shlb
mov
pop
les
cwtl
test
cmpsb
add
xchg
sub
loop
subb
movl
adc
cmp
pop
and
movsl
dec
lahf
add
test
add
jg
fs
iret
mov
stos
aad
cld
add
adcl
subl
or
mov
cmp
adc
pop
lret
imul
lods
shlb
fldcw
or
nop
jns
inc
out
jge
cmpsl
scas
in
jbe
adc
push
stc
rclb
imul
inc
add
mov
stos
pop
jnp
test
in
xchg
or
mov
pop
push
jns
jo
lahf
faddl
xlat
add
pop
fcmovnbe
dec
nop
lods
lea
ss
adc
xchg
cmp
push
call
mov
or
mov
andl
jg
int
gs
jle
and
frstor
in
mov
sub
mov
enter
sahf
loopne
test
into
xchg
sub
out
inc
fiaddl
rcrl
loopne
out
dec
in
repnz
insb
inc
fimuls
dec
and
mov
cmp
sub
sahf
and
loope
push
xchg
out
mov
jl
call
push
and
out
mov
jp
mov
stos
or
pop
cmp
mov
stos
push
sbb
pop
ficomps
popf
fidivl
push
out
push
insl
cmpsb
adc
mov
pushf
mov
cmp
in
rclb
out
adc
dec
pop
loope
or
dec
daa
test
jno
xchg
rcrb
mov
mov
ljmp
lock
cmp
pop
data16
push
or
jnp
xchg
sub
addl
bound
in
in
cmp
or
push
in
push
repz
or
loope
sbb
out
lahf
jmp
push
sub
bound
lret
inc
outsb
mov
pop
xchg
dec
hlt
pop
jo
push
fsubl
sbb
adc
adc
out
sahf
fmull
std
add
pop
shrb
inc
call
shrb
ljmp
add
sub
pop
mov
js
scas
ret
fadd
dec
lahf
test
xchg
repz
sti
aaa
fidivrs
bnd
cmc
mov
xlat
repz
in
mov
sub
es
iret
jg
mov
call
mov
inc
jns
mov
mov
es
rolb
mov
sbb
push
push
aaa
int
out
inc
sub
sti
pop
add
movsl
subb
mov
pinsrw
dec
mov
or
sbb
add
mov
and
pop
sub
mov
outsb
stos
sbb
jge
cmp
jp
mov
sti
pusha
popf
data16
lret
sub
jb
loop
mov
mov
cli
xor
test
pop
enter
insl
stos
jl
cwtl
ljmp
cltd
sbb
inc
in
and
mov
lret
add
inc
lea
std
test
xchg
add
loop
clc
xchg
cld
jl
divl
shrl
in
ljmp
cmp
inc
cs
jns
sub
jge
jg
cmpl
stc
sub
icebp
fistl
mov
ljmp
pop
cmp
jle
mov
xchg
cwtl
xchg
int
jle
mov
nop
cwtl
jecxz
mov
sahf
shlb
jmp
adc
jo
mov
pop
push
popf
lods
jg
or
pop
push
in
jbe
cmp
movhps
hlt
js
fnstsw
mov
daa
call
fidivrl
push
mov
push
add
or
cld
xor
incl
adc
jp
pusha
fisttpl
out
mov
bound
push
je
mov
imul
out
inc
jb
ja
xchg
mov
adc
out
or
dec
lods
repnz
fsubs
inc
inc
mov
fcomps
arpl
push
cmp
iret
mov
cmp
jmp
ret
xchg
cmp
pop
dec
sub
xor
stos
adc
mov
daa
sub
test
pop
jno
cmp
sub
out
mov
jb
and
add
loope
std
xchg
cmp
rcll
out
sub
je
mov
push
sti
push
xor
mov
jo
stos
inc
ljmp
in
call
pop
aas
dec
fbstp
leave
fstps
mov
ret
test
fdivrp
mov
mov
mov
fwait
imul
imul
subl
push
in
daa
or
out
push
test
lfs
popf
push
sub
int3
or
jle
addr16
outsb
arpl
mov
pop
xchg
cmpsb
js
aam
mov
incb
inc
jmp
cmp
push
jmp
icebp
and
aam
es
test
sub
add
push
xchg
jnp
or
push
jp
ja
dec
dec
jns
xchg
lret
xor
fcompl
sub
shl
cmc
fsubl
into
test
xor
stos
repnz
push
xor
out
xlat
mov
add
sbb
rolb
out
ret
sbb
outsb
mov
cld
mov
add
sub
gs
or
sbb
aas
mov
xor
inc
mov
mov
pop
mov
or
in
shlb
jbe
xchg
aam
lods
lds
mov
dec
hlt
add
loopne
negl
or
xlat
out
lret
sbb
aaa
bnd
jge
push
popa
out
cld
aas
call
nop
jae
orb
js
jbe
cmp
push
mov
fmul
pop
decl
rol
push
jno
sbb
das
mov
dec
or
stc
pushf
sbb
in
pop
xchg
inc
mov
lds
in
xchg
jbe
xchg
adc
xchg
ror
pop
pushf
test
cmp
stos
push
and
shl
jmp
pop
addr16
js
ja
mov
cmp
test
outsl
in
fs
jge
xor
mov
dec
cli
dec
jmp
xor
mov
pushf
pop
xchg
mov
mov
inc
pop
cltd
daa
idiv
push
xchg
lret
sub
cmc
adc
cmpl
call
repz
ret
dec
aam
jae
inc
cmp
jmp
jo
cld
adc
adc
mov
fadds
sbbb
dec
push
jmp
ljmp
imul
shl
jecxz
lcall
cli
mov
test
and
push
xchg
or
ja
dec
xchg
movsl
fsubl
out
loopne
enter
push
imulb
fsts
mov
pop
mov
les
pop
dec
inc
sbb
mov
mov
push
fs
sbb
test
xor
loopne
jnp
leave
sub
insl
jmp
fsubp
je
sub
imul
xor
fs
cltd
add
dec
test
mov
test
scas
mov
enter
je
ret
jno
mull
xchg
sahf
out
jle
or
int
jns
xor
mov
hlt
sbb
sub
push
dec
int
jns
gs
icebp
test
adc
sbb
fistpll
push
xlat
jg
xchg
or
or
outsl
xor
xor
add
mov
cmp
xchg
xor
and
dec
add
dec
sbb
inc
mov
sbb
fnstenv
mov
int
leave
sbb
pop
mov
cld
xchg
pop
xchg
xlat
mov
test
xchg
jecxz
insb
inc
fldenv
and
outsl
into
push
dec
loop
sub
dec
mov
xor
mov
xchg
push
pop
jg
sub
fistpll
xchg
lcall
outsl
xor
mov
call
xchg
sarb
push
data16
mov
adc
xchg
fs
adc
lcall
inc
dec
mov
incb
sub
lahf
xor
sbb
adc
sbb
popf
mov
pop
frstor
or
insl
mov
sub
aad
das
mov
cmc
insb
pop
jle
xchg
jne
adc
dec
lds
mov
popf
loope
outsl
ret
xor
in
sbbl
call
test
scas
pop
mov
sbb
pop
outsl
in
imul
jg
movsb
stos
push
cltd
ss
xchg
jae
in
and
popa
rcr
and
sub
cld
cli
test
shlb
mov
repz
imul
mov
hlt
fsub
add
test
xchg
or
xlat
mov
and
outsb
sti
icebp
cmp
subb
mov
out
pop
dec
or
jae
add
jb
mov
dec
mov
mov
jo
jo
mul
or
push
pushf
int3
adc
movsb
mov
jo
xchg
aam
push
pop
push
dec
dec
adc
add
mov
scas
cmp
pop
cmp
mov
and
or
or
lret
mov
sub
nop
lret
sub
xchg
shll
in
mov
data16
push
std
inc
xchg
inc
lods
outsb
lds
sub
loopne
rorl
sub
enter
add
out
jmp
add
je
lcall
mov
adc
icebp
in
sarb
xchg
inc
inc
mov
xchg
sbb
cli
sahf
pop
ret
scas
cmp
popa
inc
int
test
dec
into
push
push
lcall
or
arpl
cld
ficoms
jecxz
stos
sub
dec
sti
adc
sbb
dec
lock
cmpsb
jl
cli
in
ret
cs
dec
loope
movsl
push
scas
inc
leave
stos
or
sub
es
dec
enter
push
cmpsb
inc
bound
test
and
fiadds
push
pop
xchg
push
or
or
ss
movsb
jno
mov
stc
clc
adc
adc
add
cld
push
outsl
jns
mov
sbb
call
enter
lcall
test
fistpll
cmp
aam
cmp
stc
cmp
in
enter
jl
cli
loopne
xor
xchg
jmp
or
movsl
lea
add
cmpsb
inc
adc
ja
in
push
dec
fstl
mov
xor
outsb
xor
movsb
int
or
dec
sbb
mov
push
push
das
sub
mov
inc
js
iret
sbb
ret
xor
jge
out
ror
in
pusha
cli
push
outsb
int3
flds
xor
pop
scas
xlat
lock
popa
mov
push
or
jecxz
outsb
ja
test
cmp
sub
fwait
lret
push
push
leave
lods
push
jp
push
and
out
fcomi
dec
mov
sub
sub
mov
bound
dec
sti
jg
stos
pop
jno
jmp
xchg
jmp
xchg
jns
jo
xor
add
add
addr16
sub
or
pop
scas
enter
push
cmp
ret
inc
jge
dec
jno
int
ret
sub
mov
push
loopne
je
xchg
or
jns
scas
cmp
ret
imul
daa
xor
push
gs
out
jmp
pusha
int3
xlat
cmc
or
pop
mov
inc
out
imul
mov
mov
dec
add
data16
stos
push
notb
loope
gs
dec
ret
clc
adc
test
jp
jns
inc
fldl
mov
xor
dec
pusha
xor
fdivs
pop
mov
sub
nop
push
jbe
negl
sbb
sbb
int
insb
test
cmpsb
fdivrp
dec
xor
mov
jbe
lock
aas
jb
ror
sub
repz
repnz
sbb
dec
jne
cmp
inc
lret
mov
imul
add
mov
jp
outsl
ret
js
aaa
in
fnstsw
cli
xor
inc
incb
or
vphaddwd
repz
test
cltd
pop
xor
into
int
dec
fcoms
pop
push
mov
repnz
dec
adc
mov
mov
sbb
inc
fidivl
mov
mov
aas
int
mov
pop
lcall
int
lcall
je
inc
jle
lock
mov
shll
pop
pop
or
jnp
divl
out
out
mov
push
adcb
fwait
xlat
adc
add
xchg
jecxz
jo
in
lods
data16
sub
ss
enter
xor
test
repz
mov
sbb
push
pop
mov
pop
mov
clc
data16
imul
pop
push
push
popf
dec
mov
xchg
sahf
daa
call
mov
fdivp
xchg
pop
jl
xchg
jle
lods
lahf
or
imul
shlb
bound
aaa
mov
imul
and
mov
sbb
sbb
out
xchg
rcrb
jb
faddl
in
dec
mov
cmp
mov
add
and
lahf
sub
adc
sub
adc
addr16
add
inc
adc
mov
push
stc
scas
push
jnp
pop
mov
dec
adc
xchg
jbe
std
mov
adc
push
sarb
inc
cmp
sti
mov
bts
cs
test
push
add
data16
pop
adc
cld
cmp
adc
shufps
clc
sub
dec
xlat
in
push
sbb
xorl
fsubrs
dec
daa
das
mov
mov
addl
inc
inc
jnp
out
dec
mov
clc
pop
cmp
ret
lcall
jns
cmpsl
call
mov
jno
dec
dec
loope
sbb
xchg
inc
inc
dec
imul
lret
or
pop
mov
popa
enter
push
and
and
pusha
cmp
sub
scas
jecxz
mov
insb
ds
and
mov
fcomp
cmpsb
adc
scas
adc
xlat
lds
xor
daa
xchg
inc
xor
shlb
out
std
or
jb
mov
or
out
out
jl
sbb
enter
lods
cmp
lret
xchg
dec
lea
jmp
jns
mov
xchg
mov
xor
xor
sti
stc
sbb
mov
out
add
and
sub
cmpsl
jnp
cmp
je
fs
mov
loope
shrl
pop
sbb
mov
leave
sub
test
jo
mov
push
fldt
xchg
add
jb
jl
inc
and
mov
xor
xor
mov
out
sub
xlat
stos
xchg
dec
es
push
rorl
in
jae
adc
imul
push
inc
xchg
daa
jge
pop
pop
pop
jnp
jge
push
cltd
sti
pop
notl
and
fldl
scas
dec
mov
mov
xor
sbb
out
rolb
jg
push
push
lea
sub
stos
mov
jae
cmp
fidivs
shlb
cmp
add
pop
movsb
ret
mov
arpl
mov
pop
jnp
or
nop
faddp
and
sarb
pusha
imulb
hlt
inc
mov
shrl
movsb
or
cltd
mov
shlb
pop
xchg
sbb
mov
in
mov
cmp
adc
push
pop
inc
dec
xchg
push
out
cwtl
lock
add
adc
and
jae
flds
mov
ds
fbstp
mov
loop
out
inc
lds
ljmp
mov
iret
out
pop
lods
out
jmp
loope
sub
sbb
xchg
pop
mov
enter
xchg
cmp
and
and
pop
lret
sarl
push
and
xchg
adc
fisubl
rcl
mov
push
inc
pop
push
inc
mov
dec
outsl
push
popf
fistps
setno
rorb
fistl
jbe
insl
cmovae
and
popa
jmp
shlb
pop
xor
xor
jne
mov
pop
xchg
mov
pushf
and
inc
jne
test
xor
push
jne
repz
shrl
pop
or
jle
or
dec
jge
jmp
js
iret
in
adc
in
jno
push
lds
fs
add
or
aas
daa
add
xor
cmp
mov
pop
mov
pop
mov
cmp
cmpsl
mov
lods
xchg
out
orl
dec
add
idivl
pop
or
in
cmp
mov
jb
mov
in
add
sub
sbb
rorl
cli
xchg
addr16
and
push
mov
add
fisubrs
lock
xor
nop
lods
xor
mov
scas
mov
adc
imul
push
dec
lock
fsts
pop
mov
fbstp
xor
std
hlt
loop
xchg
out
lock
lds
push
mov
rorl
lcall
add
xor
pop
pop
push
adcl
cmp
frstor
mov
inc
das
cmpsl
adc
notl
lahf
lcall
cmp
push
or
sub
aad
push
inc
insb
enter
in
pavgb
es
push
pop
mov
iret
xchg
repz
pop
test
icebp
adc
xor
pop
cmpl
scas
cmpsb
dec
push
adc
jg
jb
jne
stos
pop
add
cs
push
xchg
add
mov
bnd
mov
jle
adc
dec
divb
jo
iret
dec
aam
jmp
call
or
sub
sub
jae
inc
jl
and
in
enter
pop
jmp
mov
sbb
push
push
sub
pop
aam
das
dec
rorb
push
inc
jecxz
xlat
fcompl
adc
cmp
xchg
out
mov
push
mov
push
mov
divl
pop
pushf
adc
loopne
cmc
bound
sbb
mov
lods
test
les
mov
mov
xchg
addl
pop
xchg
and
call
jle
xchg
inc
or
jno
push
loopne
push
xchg
cltd
dec
jbe
sub
shlb
outsl
dec
add
inc
ror
xchg
ret
jp
insl
push
push
notl
js
or
push
push
push
cld
fs
xlat
push
mov
jle
jg
pop
jne
lcall
adc
cs
add
add
inc
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
push
nop
push
push
nop
push
mov
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
addb
add
add
addb
add
test
add
js
add
add
add
std
add
add
add
nop
add
xor
add
mov
add
add
add
addb
add
or
add
mov
add
or
add
scas
add
mov
add
or
add
add
add
mov
add
add
add
add
add
add
add
out
add
add
push
add
add
add
addb
add
pusha
add
sub
add
mov
add
mov
add
add
add
or
add
add
pusha
call
add
or
add
add
lods
hlt
add
dec
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
xor
add
pop
add
xor
add
addb
addb
add
or
add
add
add
add
add
or
add
add
sbb
add
add
add
add
add
add
add
rorb
add
add
or
add
adc
add
add
incl
add
fadds
add
add
add
sub
add
push
add
addb
add
or
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
enter
xor
add
or
add
add
clc
adc
add
add
add
nop
add
addb
add
or
add
push
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
sbb
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
insb
add
imul
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
add
jae
and
dec
add
popa
add
add
jne
je
je
jns
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
adc
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
jo
add
add
add
add
add
add
add
jae
add
pop
add
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
add
je
and
sub
push
add
imul
and
inc
add
jne
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
add
add
jns
insb
add
xor
xor
arpl
outsl
add
add
add
js
add
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
add
insl
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
add
push
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
insb
add
gs
xor
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
insb
outsl
jae
dec
gs
add
inc
gs
gs
outsl
popa
jb
dec
popa
jns
jne
dec
popa
insl
gs
