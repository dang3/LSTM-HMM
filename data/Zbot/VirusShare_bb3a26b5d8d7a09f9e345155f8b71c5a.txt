lcall
push
mov
add
lods
outsb
dec
push
add
jne
push
call
stc
jg
leave
ret
and
loopne
push
lea
push
push
mov
bnd
pushf
sub
sbb
push
push
push
pushl
in
cs
in
sar
in
sbb
push
jge
ficomps
andl
lock
lea
std
mov
sti
push
jae
xor
scas
adc
pop
in
mov
add
xor
cmp
push
popa
insl
jg
fildl
dec
jb
add
mov
push
ja
out
mov
push
add
in
neg
mov
add
and
lea
push
mov
std
pusha
iret
cld
fiaddl
xorl
leave
add
cmp
add
pop
adc
xor
leave
or
push
dec
inc
jmp
insb
push
test
sbb
push
jle
push
lcall
adc
gs
jb
dec
gs
daa
sti
mov
icebp
push
mov
inc
lea
push
in
xchg
je
or
pop
loopne
add
notl
dec
insb
lock
jecxz
imul
out
inc
mov
insl
xor
clc
push
jge
mov
insb
test
inc
outsl
test
es
inc
pop
nop
xchg
lock
cmp
pop
mov
and
or
cmp
js
frstor
mov
add
popa
mov
call
add
ljmp
sbb
in
jbe
ret
push
jbe
sbb
hlt
outsb
pop
xor
adc
xor
out
push
sbb
mov
inc
dec
jbe
xor
jne
pushf
xchg
ret
jae
mov
pop
or
movl
loope
or
imul
pop
ljmp
ss
ret
jge
stc
xchg
add
loopne
sub
dec
mov
lock
jl
jo
mov
insl
pop
push
hlt
push
push
jno
and
and
pop
cmpsl
enter
test
push
push
inc
hlt
add
loopne
dec
xchg
sub
dec
mov
ret
jmp
xor
out
xor
subb
dec
fsubr
pop
mov
jp
mov
aaa
cmp
dec
inc
push
fcompl
push
jecxz
sti
fnstsw
pop
push
push
xor
xlat
pop
push
push
mov
inc
shl
mov
fimull
add
fcoms
mov
aas
add
add
xchg
push
es
adcl
dec
hlt
imulb
push
adc
movl
jecxz
inc
add
ja
leave
cmp
lock
cwtl
jo
fs
aaa
insl
jns
dec
jbe
hlt
inc
add
lock
sbb
sub
jle
add
inc
pusha
clc
push
shll
xchg
cmp
push
scas
pop
cwtl
test
test
push
lock
inc
push
jb
xchg
call
mov
movsb
lea
push
jno
xlat
frstor
pop
add
test
cltd
in
testl
inc
loope
sarl
nop
dec
popf
mov
in
jb
xor
or
cwtl
in
push
das
adc
sbb
mov
scas
add
push
push
mov
shll
mov
test
fs
insl
mov
fbstp
and
dec
add
fadds
daa
js
scas
dec
pop
sahf
fwait
rolb
inc
das
cmp
or
cld
push
xor
popa
fistpll
push
jnp
mov
leave
xor
mov
push
pop
jp
sarl
ret
push
loop
xlat
rorb
push
push
int
fimull
mov
loop
aaa
fs
lock
push
aaa
cld
cmpsl
and
sub
es
cmp
call
decl
gs
or
adc
pop
pop
sahf
in
imul
movsb
jl
push
loop
push
xor
or
inc
jl
pop
xchg
idivl
mov
mov
mov
sti
aaa
leave
imul
push
inc
aaa
mov
cwtl
sub
push
dec
push
ss
hlt
adc
mov
add
jnp
xchg
xchg
mov
pop
push
es
lock
add
mov
inc
sub
sbb
xor
xor
sbb
push
mov
inc
pusha
cmc
enter
dec
push
std
hlt
push
ss
in
inc
sub
popa
add
sti
ss
jnp
sar
inc
outsb
add
adcb
cld
shrl
push
inc
xchg
inc
es
in
insb
xor
je
xchg
lock
cmpsl
call
scas
inc
xor
jge
dec
dec
dec
test
insb
sub
adc
hlt
pop
dec
jne
cmpsb
dec
push
in
xor
add
and
and
clc
add
jb
gs
pop
jg
jecxz
lods
das
imul
cmpsb
push
in
les
mov
call
test
stos
popa
mov
add
inc
pushl
xchg
add
mov
fimuls
into
sub
nop
add
cld
jb
insl
push
mov
mov
pop
add
das
icebp
cld
lods
mov
sbb
inc
mov
inc
add
add
mov
inc
sub
sbb
lods
daa
and
shll
lret
std
mov
pop
mov
add
icebp
cli
add
add
jmp
add
jns
adc
dec
inc
sub
insl
jae
sbb
add
out
sti
iret
add
mov
sbb
xchg
pop
add
sbb
imulb
stos
add
pop
and
ret
adc
jg
add
test
test
ficomps
les
sbb
test
dec
test
add
aaa
or
mov
testl
add
jae
in
out
cmp
gs
fadds
outsb
out
sahf
popf
xchg
sbb
cmp
js
xchg
cmp
sti
adc
pop
add
jl
outsl
mov
xor
add
add
add
sub
cmp
sbb
ret
fdivs
cmpsl
inc
das
and
pop
outsb
or
leave
inc
pushf
add
sahf
inc
jle
std
xchg
in
sbb
lds
mov
and
test
enter
loop
pop
in
pop
fwait
mov
cld
test
mov
add
xlat
sub
and
add
out
adcb
and
loope
jbe
or
push
push
in
pusha
das
je
fcmovnu
cmp
rorl
fstps
movb
dec
popf
fldl
mov
jbe
insl
xchg
mov
adc
movsl
cmp
mov
into
push
popf
or
xchg
push
add
or
shlb
stos
sbb
mov
filds
movsb
adc
fs
add
cmp
inc
mov
add
stc
add
pop
mov
sbb
add
xor
mov
popa
or
or
and
mov
jne
es
push
iret
cs
popf
aad
sbb
xchg
add
inc
jno
sub
add
loop
movsl
fdivrs
xchg
or
je
push
pop
mov
xchg
lea
sub
jecxz
outsb
adc
sbb
add
cmpsl
fld
insl
outsl
xlat
popl
lret
ja
sar
add
nop
sub
aam
fisttpl
mov
test
adc
aam
mov
fmull
pop
fisubl
scas
add
jb
addl
xor
add
les
inc
pop
rolb
fisubrs
mov
dec
gs
xor
addl
jcxz
lock
mov
adc
ret
pop
testb
scas
andb
fidivrs
push
inc
in
inc
pop
jp
repz
and
cwtl
repz
lods
mov
fwait
add
and
cmp
call
sbb
stc
fadds
fwait
sub
mov
dec
xchg
mov
std
push
es
xor
push
outsb
arpl
mov
lea
sarb
fnstenv
pop
push
cltd
mov
fadd
mov
cmp
dec
aaa
fcoml
cs
or
or
lods
lods
shrb
jnp
jne
mov
pop
push
ret
push
cld
add
dec
dec
mov
bound
dec
mov
in
mov
push
movsb
mov
leave
xchg
daa
add
add
mov
in
pop
call
push
inc
inc
pop
jnp
movsb
jl
aad
dec
fcoml
frstor
jg
cmpb
lahf
xor
adc
push
sbb
add
movsl
dec
sub
add
and
push
pusha
sub
sub
cmp
roll
mov
pop
mov
outsb
mov
mov
mov
jno
and
leave
dec
jb
mov
lea
cltd
js
and
cs
movsl
test
test
scas
filds
movsb
mov
cmpsb
or
dec
insl
lods
into
insw
push
jb
repnz
sub
popf
inc
mov
xchg
mov
pop
xlat
flds
cmp
lea
movsl
adc
or
stos
add
stc
pop
and
lods
add
sub
jl
dec
dec
pop
sbb
lods
fdivr
sbb
outsb
dec
xlat
and
es
into
ds
and
xchg
mov
cld
outsb
outsl
sbb
ficoml
addb
adc
xchg
pop
mov
sbb
in
insl
mov
mov
add
sub
lods
adc
popf
mov
or
and
inc
outsb
mov
pusha
movsb
in
pop
outsb
loopne
push
mov
dec
add
loope
fiadds
add
jb
cmp
xor
xorl
divl
inc
leave
insb
jecxz
or
insl
xor
fldl
testb
xlat
or
or
jl
jg
xor
loop
jns
rorb
adc
mov
cmp
scas
fs
jmp
xor
sub
ficoml
push
pop
fcoms
push
inc
addr16
xchg
mov
hlt
les
leave
jns
mov
mov
sbb
add
jbe
pop
cmp
ffree
scas
in
sub
cmp
test
cmp
sbb
jmp
mov
inc
in
sbb
ds
data16
insl
pop
call
pusha
adc
pop
lods
push
sarb
jmp
jle
and
jae
aad
dec
mov
push
pop
fsubrs
sahf
mov
pusha
insl
imul
xor
shrl
push
ret
je
ret
fwait
jns
roll
and
and
cmp
inc
orl
add
imul
mov
inc
mov
sbb
shll
adc
mov
pop
cs
jl
sbbl
inc
mov
rolb
scas
cmc
dec
fwait
pop
jno
inc
xor
jg
stos
js
lret
mov
jmp
push
xlat
inc
mov
push
jecxz
push
push
data16
xbegin
movsl
daa
cld
call
mov
pushfw
bound
js
inc
xchg
in
add
jl
jp
pop
pop
clc
test
nop
scas
jle
sub
mov
pop
jbe
jp
or
pop
sub
xor
mov
sbb
and
dec
sub
mov
fistpll
in
data16
imul
xor
dec
pop
dec
or
frstor
mov
pop
jne
clc
test
loopne
fdivrs
jb
fidivrl
xchg
jo
decb
out
pop
frstor
repz
dec
test
sbb
or
mov
mov
scas
in
icebp
or
outsb
aas
loope
enter
rolb
movsb
sbb
mov
xchg
jne
pop
jle
mov
push
arpl
js
mov
add
and
in
sti
fadds
sbb
push
loop
punpcklwd
sarb
fadds
insl
add
gs
jnp
jge
rol
jno
icebp
insl
outsl
scas
add
js
xor
cmp
and
inc
sbb
es
cmp
or
adc
jno
mov
lret
push
mov
les
enter
push
je
call
mov
bnd
imul
in
out
jmp
shll
testb
daa
subl
lret
push
fidivrs
pop
or
adc
cltd
pop
fnstsw
jmp
cmp
pop
ljmp
or
addr16
sbb
popa
push
sub
das
int3
je
push
and
inc
xor
xlat
jb
outsb
outsl
cmc
in
mov
adc
sub
mov
pop
mov
cli
jbe
loop
mov
in
mov
in
jae
jg
or
or
xor
dec
adc
nop
sbb
push
dec
test
jo
and
idiv
sbb
inc
lahf
jb
jl
loop
add
lock
test
jge
push
jae,pt
cld
arpl
adc
cs
add
and
idivl
and
sbb
pcmpgtw
mov
movsb
inc
adc
mov
jle
and
add
mov
cltd
popf
mov
push
stos
or
or
fimull
loope
and
pop
outsb
sub
testb
mov
adc
add
jge
js
aam
test
movsb
mov
arpl
test
inc
in
dec
sbb
pop
xchg
add
test
pop
mov
inc
cli
add
push
or
push
fmulp
int3
dec
sub
adc
sbb
cmpl
data16
xchg
push
inc
jge
sub
mov
icebp
xchg
lret
sbbb
lods
or
jge
fstl
adc
scas
or
lret
aam
stos
inc
in
imul
fwait
aaa
or
xchg
or
aad
daa
xchg
push
adc
adc
fwait
sbb
pop
int3
movsl
jle
add
mov
insl
pop
pmaxub
xlat
dec
sub
mov
loopne
sarl
loopne
add
jb
call
int
aad
les
sub
scas
mov
ret
std
jo
cmpb
cltd
adc
insl
cli
fwait
pusha
lret
add
mov
stos
cld
or
lods
out
sbb
popa
jb
pop
sbb
and
xor
add
imul
scas
sbb
mov
jnp
jmp
push
sub
inc
ret
mov
xchg
pop
mov
fimull
xlat
push
mov
ds
je
adc
ja
mov
enter
inc
cmovns
orl
int3
clc
mov
mov
dec
jmp
pop
shr
cwtl
insb
jp
inc
cmc
inc
jnp
scas
mov
adc
loope
enter
ljmp
popa
cmp
in
jbe
adc
add
pop
inc
std
je
jbe
scas
sahf
loopne
lods
sub
mov
scas
pop
jg
xchg
mov
inc
andl
leave
cltd
sarl
mov
xchg
push
cmp
clc
movsl
inc
pop
sbb
mul
xchg
pop
rcll
adc
jmp
sbb
dec
push
cli
cmc
testl
fcomps
cmpsl
repz
lods
fildll
mov
cmpsl
pop
arpl
add
fidivrs
scas
cmc
sbb
xlat
or
adc
incb
rcll
mov
adc
mov
fs
arpl
cmpsb
cld
inc
pop
mov
jg
enter
dec
jne
mov
and
sbb
sub
or
mov
sbb
push
sub
push
movsb
leave
and
in
imul
adc
aam
sbb
aad
sbb
mov
jbe
jb
dec
addps
inc
pop
test
out
inc
jle
aad
aaa
fbstp
mov
sub
insb
dec
sahf
into
push
jae
dec
push
dec
pop
cmp
mov
clc
leave
nop
or
cmp
fdivrs
rcr
test
outsl
cmp
dec
add
cwtl
loopne
repnz
lods
and
mov
xchg
imul
jae
not
imul
sbbb
mov
adc
das
mov
jae
les
out
xor
pop
pop
push
add
in
cli
mov
ficompl
mov
mov
insb
shlb
fldenv
cmp
aas
mull
inc
or
and
sbb
mov
sbb
pushf
adc
shrl
xchg
jmp
pop
fildll
mov
lods
divb
add
shlb
es
push
adc
xchg
in
fadds
aas
inc
push
mov
mov
shrl
aad
adc
call
sbb
in
addr16
mov
push
sti
shrb
or
mov
sub
in
cmpsl
ret
inc
inc
int3
into
xchg
stc
or
roll
fcmovnb
sbb
push
fucomi
and
jne
lock
dec
push
add
mov
lods
jbe
inc
popa
xchg
jmp
mov
fwait
pextrw
addl
push
loop
inc
nop
and
cmp
push
or
xlat
mov
je
cmp
fisubrl
sbb
fs
icebp
jmp
daa
jecxz
ja
pop
insl
xchg
std
pusha
jno
shrb
mov
inc
sti
jge
out
repz
and
arpl
or
jecxz
loope
insl
negb
mov
loope
mov
jne
mov
push
dec
jmp
adc
ds
int
iret
push
ljmp
xchg
hlt
adc
jecxz
add
push
hlt
mov
sbbl
test
cmp
outsl
cld
push
pop
fsubrs
pop
shrl
mov
sub
cmp
lret
inc
mov
das
xor
aam
addr16
mov
and
push
or
cltd
repz
out
sbb
test
clc
mov
ret
ret
lret
sub
lcall
mov
icebp
mov
mov
mov
mov
add
add
repz
xchg
dec
aas
test
dec
outsl
mov
or
mov
lea
mov
lods
jbe
popf
movsb
mov
insl
in
jno
push
mov
cmpsl
adc
sbb
add
out
dec
es
sbb
and
inc
hlt
dec
pop
pop
dec
adc
out
add
adc
pop
pop
mov
ljmp
add
inc
ficoml
xor
nopl
mov
or
dec
iret
jge
jns
mov
jbe
and
stc
jp
adc
outsb
sbb
lea
push
pop
sub
mov
cmpsl
sbb
loop
or
xor
aas
outsb
sub
imul
pop
es
xor
pop
in
xchg
fcmovne
sub
xchg
pop
adc
mov
xchg
ds
adc
movsl
pop
arpl
and
add
fadd
xchg
insb
fildll
shll
cmc
and
mov
sarl
call
ljmp
mov
cwtl
jbe
mov
pop
push
mov
rol
lds
cmpb
adc
push
jae
jbe
insl
and
xchg
mov
jo
fistps
add
nop
imul
dec
push
sbb
ret
faddl
fdivrs
decb
js
and
add
ds
xchg
ds
xor
and
scas
push
cwtl
hlt
ficompl
pop
push
mov
push
add
movsl
add
sahf
adc
popf
shrl
mov
sub
negb
test
xlat
subl
cmpl
fcmovnb
sub
sub
pop
out
addr16
movsl
add
sbb
pop
sub
movsb
dec
fstl
dec
pop
pop
xchg
cmpb
andl
cs
call
test
add
sub
mov
cs
mov
dec
mov
push
pop
jp
lahf
and
adc
std
lcall
and
adc
push
inc
aas
pop
and
sbb
lahf
pop
in
movsb
push
into
out
call
lock
in
cmp
push
into
xor
mov
jne
sbb
insl
mov
sub
shll
mov
fcomps
xor
adc
inc
sub
push
arpl
inc
imul
mov
lahf
ficompl
outsb
andl
push
xchg
or
mov
sbb
popf
jecxz
push
loope
and
popf
arpl
jecxz,pt
sbb
jne
aad
xchg
mov
in
push
add
mov
scas
mov
cs
in
sbb
pop
and
sbb
das
outsb
popf
hlt
lcall
outsb
or
sar
push
xchg
sub
incb
and
add
stc
cmpsl
cmp
es
sub
add
fists
in
mov
push
pop
adc
adc
lock
dec
rorl
adc
or
js
mov
nop
test
js
and
fildl
jmp
loope
pop
clc
mov
ja
sub
inc
xor
push
inc
inc
ficompl
out
or
push
mov
dec
add
xchg
inc
mov
pusha
mov
add
add
roll
pop
and
cwtl
scas
imul
cmp
or
push
sahf
mov
das
insl
adc
add
cmp
push
in
inc
cmp
je
icebp
pusha
mov
fiaddl
dec
xchg
cmp
std
fcoms
addl
push
stos
repz
dec
push
jecxz
inc
xchg
mov
lahf
dec
jne
data16
or
test
xor
mov
pop
mov
xchg
inc
sbb
inc
inc
and
cmp
sbb
mov
loope
iret
call
inc
mov
rcr
push
imul
fidivrl
mov
mov
sub
sbb
test
xchg
arpl
inc
movsb
insl
mov
adc
mov
shlb
sti
xor
in
or
pop
sti
adc
dec
xor
inc
dec
ret
and
lods
add
jge
sahf
popf
pusha
pop
pop
inc
pusha
ret
mov
notb
or
shrb
cmpsb
loop
dec
push
int3
or
pushf
add
xchg
adc
xor
pop
push
sarl
lock
mov
xor
mov
mov
push
in
push
into
mov
sub
decl
pop
push
or
clc
jnp
mov
cs
xlat
dec
imull
mov
jbe
int
jae
push
mov
or
dec
adc
push
popf
sub
negb
mov
in
bound
jl
movsl
movsl
or
movsl
xorl
jge
or
packssdw
sbb
iret
lods
xchg
and
or
fistpll
and
stc
inc
dec
xchg
adc
insl
je
ja
ret
fnstcw
pop
dec
into
roll
xor
aad
inc
das
jne
adc
pop
cli
cmc
xchg
and
and
push
out
aad
push
and
push
lahf
scas
imul
bound
popa
sti
in
pushl
fnstenv
pop
adcb
dec
lea
sbb
cmc
addr16
imul
or
call
insb
add
fistps
and
lods
pop
and
push
add
cmpsb
jp
inc
xor
bound
mov
ficoms
lods
pop
jg
cmc
arpl
sbb
sub
pop
cmp
lods
fsubl
adc
sub
aaa
orb
and
test
adcb
xlat
xor
add
xchg
pop
lcall
test
jmp
jecxz
jo
pop
lods
imul
ljmp
push
xchg
insl
xchg
call
cmp
bound
clc
jle
sub
test
jmp
jne
jae
dec
jecxz
out
clc
popa
pop
jno
pop
adc
nop
jo
cwtl
jno
push
outsl
leave
test
call
loopne
loope
or
or
arpl
shrb
adc
aam
add
data16
shrb
popf
mov
pop
mov
call
outsb
mov
ret
mov
ret
push
fbstp
pop
xlat
imul
mov
mov
pop
jl
lret
imul
loope
xchg
popl
and
mov
xlat
aam
mov
lret
add
mov
xor
repz
jmp
inc
xor
mov
imul
orl
push
cli
cmpsb
jmp
sbb
jg
push
mov
xchg
pop
cmc
xchg
adc
loopne
inc
add
shlb
jge
ret
inc
inc
push
push
test
out
or
fistl
pop
fnsave
repz
mov
dec
sbb
push
lods
fwait
sbb
js
add
aam
dec
loope
out
mov
sub
nop
xchg
mov
jmp
rolb
ds
cmpsb
mov
cs
xlat
cmpsb
daa
aas
inc
lods
mov
sub
loop
jecxz
and
lea
pop
sbb
xor
cmp
lods
ret
lea
loopne
in
cld
bound
mov
mov
das
xchg
cmp
xor
into
repnz
push
cld
dec
pop
js
add
outsb
aaa
adc
push
shll
stos
or
jmp
jle
add
push
cmp
or
or
aad
fstl
jl
loopne
sahf
fwait
push
adc
mov
mov
inc
arpl
mov
pop
mov
jg
int
jecxz
imul
std
sbbb
dec
mov
push
dec
mov
cmp
fisubs
adc
xor
cld
push
xor
sbb
pop
mov
pop
lods
mov
dec
lods
imulb
pop
pop
jl
popf
xchg
mov
cs
or
in
xor
sbb
mov
mov
xchg
sbb
mov
lds
adc
aas
popf
mov
mov
adc
adc
mov
add
mov
andl
mov
cmp
inc
mov
scas
aad
scas
add
dec
mov
insb
adc
loop
cld
in
test
jnp
call
sbbb
mov
enter
aas
xchg
int3
scas
outsb
fcmovu
movsb
cwtl
addr16
mov
cmp
das
xlat
inc
push
inc
add
add
cli
sbb
sbb
sbb
jb
nop
fisubl
dec
sbb
pop
xchg
lea
sbb
je
push
lock
pop
lret
ds
mov
sub
shlb
je
sti
subl
jecxz
leave
jne
jg
data16
test
sbb
and
mov
cmp
pop
outsb
pop
roll
ja
dec
repnz
mov
mov
enter
or
push
push
in
rclb
cli
rcl
inc
insl
xchg
mov
outsb
lock
pusha
bts
bound
adc
cld
pusha
pop
sbb
and
inc
fldt
pop
jle,pt
testb
jecxz
mov
sub
push
add
out
mov
frstor
lock
sub
mul
pop
or
cld
cmpsb
insl
add
out
outsl
jbe
inc
stc
loope
enter
mov
ljmp
shrl
mov
inc
adc
jo
call
arpl
inc
aad
push
add
inc
and
or
es
xchg
cmp
pop
adc
fmulp
fcoms
movsb
pop
pop
test
pushf
fs
test
pop
btc
jae
inc
roll
fists
push
repz
insl
lock
scas
cli
pop
inc
shrb
mov
aam
enter
stos
pop
js
clc
sub
enter
imul
jno
pop
ds
rorl
divb
sarl
sbb
mov
xor
call
jno
loope
add
mov
insb
nop
popf
movsl
aaa
sub
movsb
mov
sub
mov
stos
add
or
jns
adc
inc
sbb
jmp
mov
push
pop
mov
add
mov
mov
lea
cmpxchg
adc
adc
aaa
cmp
test
das
cwtl
test
negl
mov
fistps
or
call
sbb
cs
adc
fs
mov
push
mov
xor
dec
sti
mov
mov
and
or
lods
jo
mov
or
push
cmp
cmpsb
cmpsl
shll
pop
fcomp
ficoml
mov
add
cmp
or
bound
mov
sbb
insl
add
divl
lock
lods
jne
popf
ljmp
pop
sub
or
cmc
jmp
movsb
into
fstpl
int
movsb
sbb
or
aam
cmpl
and
sbb
lret
or
add
jb
add
leave
loope
fnsave
scas
insb
pop
cltd
testl
les
dec
lods
ror
mov
inc
xchg
imul
jnp
mov
movsl
loopew
inc
add
test
fistps
in
rcl
andb
sub
pop
or
and
adc
sbb
jne
je
stos
lods
mov
jl
jg
arpl
jecxz
mov
sbb
aas
cmp
nop
into
mov
je
lods
scas
test
mov
test
jnp
mov
mov
divb
or
xlat
in
xchg
mov
dec
cwtl
arpl
inc
mov
shr
out
sarb
std
push
cld
xchg
movsl
jmp
lock
vorps
inc
pop
cmp
hlt
je
or
roll
push
aas
jo
push
and
insb
mov
add
dec
xchg
decb
and
ret
xchg
shlb
jge
push
pusha
adc
add
sbb
lds
mov
sub
mov
cs
cmp
inc
movsb
dec
mov
xor
add
or
fucomp
push
xor
test
xchg
push
dec
cmp
lods
xor
pop
das
mov
aam
adc
jmp
loop
jae
adc
xor
fldt
push
stos
pop
mov
pop
push
cmc
cmp
mov
pop
pushf
add
dec
xchg
stc
test
mov
sub
rorb
mov
mov
aad
cmpsb
sub
repnz
mov
jne
push
je
jo
or
roll
pop
push
iret
adc
loop,pt
push
test
test
scas
ja
loop
cwtl
jno
test
pop
roll
inc
out
addr16
lret
mov
stos
push
cs
imul
adc
lds
pop
imul
adc
movsl
and
fcmovnbe
push
sub
and
pop
mov
pop
dec
and
mov
pop
int3
movsl
cmp
stos
sahf
mov
in
in
xor
or
push
xor
nop
jge
add
lcall
idivb
ret
jmp
jbe
add
dec
inc
cmp
popf
clc
xchg
or
dec
ja,pt
mov
out
aas
push
fadds
insl
mov
mov
cld
pop
pop
test
fsts
and
subl
lahf
jp
popf
xor
shrl
add
or
cmpsl
aam
dec
push
inc
scas
and
cmp
xchg
xor
fistpl
lods
jno
adc
xor
roll
in
or
push
lods
and
aas
inc
or
dec
push
push
pop
lods
ud2
dec
adc
dec
push
inc
arpl
mov
adc
or
sarb
xor
add
sub
in
xor
mov
xor
ja
or
sarb
inc
and
push
pop
dec
shll
push
pushf
add
stos
mov
lahf
push
add
inc
cmp
aad
add
xor
shl
jbe
sub
rcrb
jnp
and
and
fs
fstp
loop
enter
enter
xor
sti
popa
or
pusha
mov
aaa
std
js
test
sbbl
mov
sub
popa
adc
out
xor
nop
dec
lcall
add
fdivrs
negb
mov
loope
lods
sahf
das
jno
xor
pop
mov
cmp
add
push
pop
in
nop
aam
rorb
repnz
mov
push
testl
jne
mov
push
scas
sub
decb
fstpl
xchg
dec
pop
arpl
push
dec
lret
pop
mov
subl
aaa
xlat
shl
adc
popf
add
cmc
or
pusha
mov
add
mov
xlat
shlb
outsl
imul
dec
cwtl
test
jae
add
cmc
or
sbb
bound
pop
cmp
and
insl
cs
inc
xlat
lock
cmpsl
and
fnstsw
xor
jg
arpl
hlt
test
mov
jmp
adc
pop
cmp
dec
in
xor
testl
lcall
xchg
mov
adc
push
mov
andb
add
jnp
cmp
pop
out
mov
ljmp
outsl
jnp
inc
jl
or
jbe
jecxz
out
subl
fs
lcall
cmpsb
rclb
lea
sub
xchg
xchg
pop
sub
lds
call
push
add
sbb
outsl
sub
jecxz
inc
or
sub
ret
in
jp
inc
insb
add
loop
mov
pop
inc
out
lods
cmp
mov
sub
adc
cmpsb
pusha
jno
jl
pushf
push
repz
or
cwtl
movsb
in
call
lcall
push
sub
add
mov
pop
stos
xchg
aas
scas
and
mov
push
push
jbe
movb
lret
mov
test
loopne
lcall
cmp
add
adc
arpl
adc
sbb
mov
fs
jl
cmp
adc
cltd
pop
mov
mov
fstpt
dec
jmp
mov
pop
fisttpl
add
jg
pop
sbb
loopne
hlt
or
test
mov
shll
and
outsb
fadd
lds
cmpsb
xchg
adc
mov
and
xor
or
movl
call
or
add
xor
push
adc
nop
mov
mov
jle
sub
sahf
fs
push
lods
in
cmpsb
sub
fadds
out
pop
jle
fsubrs
mov
add
shr
sbb
ret
out
dec
sub
popa
inc
dec
xchg
leave
pushf
fisttpll
push
roll
xchg
ret
add
dec
idiv
mov
sbb
add
popa
repz
jle
sar
or
sub
push
dec
nop
jbe
fs
decb
jg
adc
xchg
icebp
scas
divb
loopne
dec
sbbl
mov
loop
push
iret
push
test
lahf
pop
test
xchg
mov
push
cmp
xchg
aaa
js
xchg
or
lahf
push
into
sbb
sub
inc
or
and
cmp
mov
imul
addr16
ret
xor
jge
inc
pop
rolb
and
mov
pop
mov
rol
repnz
icebp
in
outsb
cmp
scas
sbb
nop
jae
stos
outsl
xor
sub
fildl
push
mov
xor
ds
jne
call
cmpsb
jnp
sub
data16
pop
stos
shlb
pusha
sbb
pop
xor
xchg
testl
push
jno
insb
je
mov
cld
ds
mov
inc
fisttpll
fsub
popf
pusha
sbb
pop
lds
jg
push
aaa
push
xor
xlat
stc
and
imul
nop
outsl
aas
into
dec
inc
sbb
jbe
out
outsl
stc
and
and
das
js,pt
test
aam
fxtract
adc
int
cltd
cltd
push
adc
iret
sub
or
push
add
rorl
mov
jns
je
adc
enter
inc
push
daa
popa
loope
or
test
sbb
int3
je
rorb
add
icebp
rep
inc
mov
roll
fdivrl
mov
out
mov
enter
xchg
lods
es
mov
xlat
lea
add
lret
or
fwait
std
jp
add
lock
lods
sahf
jp
andb
or
add
adcb
sub
dec
daa
xlat
hlt
push
loopne
jne
scas
sbbl
or
or
xor
cmp
or
fdivrs
mov
pop
jnp
mov
add
jmp
or
sub
lret
ret
cwtl
lret
add
or
in
xchg
enter
sbb
outsl
rcrb
dec
pop
outsb
push
or
mov
sahf
sarl
inc
or
in
test
pop
std
cmp
stc
loope
test
push
lods
add
xchg
mov
jnp
je
inc
and
mov
aaa
mov
cmc
pop
dec
neg
push
dec
cmp
repnz
xchg
pop
xchg
lock
pop
pop
and
js
cmc
xor
pushw
mov
sbb
pop
pop
push
pop
push
pop
xor
inc
sub
pop
fldcw
loop
add
sub
add
arpl
or
mov
jns
pushf
js
out
or
mov
std
pop
out
cmp
add
sub
out
loopne
clc
adc
ret
or
in
sbb
mov
std
rol
pop
std
sub
xchg
xchg
aad
mov
mov
cmpsb
movsb
mov
push
insl
mov
rorl
mov
and
fsubrs
orl
inc
dec
jge
out
xchg
and
popf
nop
popa
stos
cmpsl
shlb
mov
jbe
pop
fs
and
mov
mov
push
jno
movsb
push
add
mov
fmuls
int
mov
xchg
imul
mov
adc
data16
inc
icebp
loope
and
jmp
cli
out
push
and
lret
rcl
push
pop
leave
inc
pop
dec
cmc
fisubs
outsb
roll
or
scas
out
xor
dec
cmpsb
inc
ja
mov
mov
inc
mov
js
cmpsb
bound
push
clc
ret
mov
pop
fdivl
add
shll
mov
mov
mov
sahf
ljmp
pop
repnz
in
or
dec
scas
popa
add
cli
js
dec
popf
or
filds
in
jp
dec
jge
xchg
and
mov
insl
loope
pusha
sub
inc
mov
add
arpl
inc
push
shl
mov
outsl
aas
in
dec
mov
js
and
and
outsb
adc
adc
pop
and
ja
fs
cwtl
mov
inc
movsb
out
insb
lea
mov
xchg
dec
xchg
jbe
xor
cs
lods
addb
xchg
repz
inc
add
loope
popf
test
xor
pusha
es
xor
stos
or
inc
rclb
sbb
mov
loope
and
xchg
stos
es
clc
jno
loope
insl
shlb
scas
mov
rorb
rolb
adc
aam
loope
add
sub
divb
dec
mov
adc
mov
push
sbb
nop
pop
loopne
int3
push
cmpsb
outsl
ljmp
into
insl
sbb
jns
xchg
nop
jbe
rcrb
addb
mov
lret
adc
or
push
clc
inc
xchg
mov
arpl
jnp
xor
lds
mov
mov
inc
cmp
mov
push
jmp
sbb
in
cli
sti
jmp
sub
popa
cmp
inc
loop
add
shll
ret
imul
aaa
in
mov
lcall
mov
call
xchg
jbe
sbb
cmp
add
out
dec
enter
inc
ret
std
sbbl
fdivrl
and
insl
cli
and
dec
lcall
mov
xor
push
fistl
in
ret
or
nop
movsl
inc
inc
cmp
ds
jne
inc
inc
mov
xlat
icebp
rcl
jg
inc
adcb
mov
inc
jo
adc
leave
je
cmc
pop
mov
mov
lods
push
out
add
jbe
pop
mov
int
aad
mov
cmp
clc
dec
xor
and
hlt
sahf
and
ss
bound
aam
out
mov
inc
sbb
loope
xor
mov
lds
lock
bound
ret
imul
in
loop
filds
cmp
sbb
sbb
mov
xor
mov
cmc
xchg
cmp
sbb
sbb
popf
mov
sarb
sbbb
ficompl
mov
mov
outsb
pop
and
or
arpl
loop
dec
jno,pn
jecxz
mov
movsb
aas
les
test
jecxz
cmp
cmp
lret
add
dec
jo
call
rcll
push
cmp
jmp
push
dec
stos
data16
int3
add
je
stc
xchg
aam
and
xchg
ss
sbb
les
mov
jecxz
in
adc
arpl
mov
mov
cmp
faddp
jg
daa
clc
or
dec
test
xchg
shlb
push
nop
or
or
enter
insb
enter
add
ja
jmp
imul
mov
lahf
bound
push
add
addr16
test
in
mov
or
ljmp
xchg
mov
bt
jnp
popa
pop
mov
daa
mov
fbstp
or
add
insb
xor
insb
dec
int3
addl
enter
iret
mov
pop
inc
mul
cmp
push
fstpl
pop
test
test
lret
shrb
cmp
insl
pop
cmp
inc
or
inc
insb
inc
adc
and
cmp
jns
cs
test
or
rorl
and
cmp
bound
and
popf
imul
add
inc
cmp
outsb
mov
and
les
daa
add
mov
push
iret
push
dec
adc
jns
pop
pop
inc
pop
xorb
lahf
shll
sbb
stos
lods
jecxz
cld
add
call
push
xor
cmpsb
rcrl
mov
dec
cmp
lods
lods
jbe
int
cwtl
fsubr
adc
xor
xor
aam
and
lcall
cmp
movsb
jp
add
enter
dec
mov
push
or
stc
aas
repz
inc
aaa
dec
aas
sbb
dec
addr16
sbb
add
andl
out
std
nop
xor
jo
xchg
icebp
jmp
mov
lret
test
movb
cmp
inc
nop
dec
push
and
sub
pop
js
cmc
pop
fistl
cmpsl
jle
adc
lret
lret
add
dec
movsb
ja
js,pt
adc
xorb
pop
add
and
lea
fsubp
inc
ret
cmpsl
addb
push
sbb
dec
js
into
jbe
pop
neg
cmp
cmp
pop
insb
outsl
sbb
mov
cltd
popf
add
ja
and
dec
xor
pop
in
ljmp
jmp
fcmovnbe
dec
push
sahf
or
or
movsb
jo
mov
mov
pop
mov
dec
dec
dec
pusha
sbb
sbb
fs
inc
xlat
jge
mov
mov
std
push
push
pop
jno
lock
mov
icebp
or
loopne
pop
adc
push
pop
or
rcrb
jno
sbb
mov
pop
jo
out
adc
cs
movsb
pop
or
push
adc
xchg
push
shlb
popf
xlat
xchg
cmpsl
fcom
pop
enter
mov
fs
insl
stos
and
or
adc
test
adc
jg
push
call
or
lcall
xor
ds
jg
cmpsb
test
aad
mov
cmp
out
icebp
test
fcoml
xchg
orb
lods
ja
xor
addr16
inc
ja
inc
cs
mov
xor
rcrb
pop
or
add
push
adc
aam
hlt
and
adc
popa
mov
std
pop
rolb
and
add
bound
push
jl
sub
push
nop
add
dec
push
mov
push
dec
xor
pop
sbb
inc
jbe
sbb
adc
ja
inc
mov
pop
adc
pop
insb
daa
sub
test
imulb
xchg
and
mov
stc
fdivrl
in
pop
scas
mov
push
aas
mov
xlat
outsl
and
test
jl
ret
mov
mov
push
inc
lods
fildll
test
adc
pop
mov
cld
rorl
pop
ja
aam
cltd
fstpt
lret
incb
int
or
push
notb
fcomp
inc
bnd
jns
repnz
and
rcr
loope
mov
cld
pop
sbb
aas
push
rcll
add
push
fidivl
and
push
or
ret
push
popa
int3
test
mov
adc
lds
or
rcll
loopne
aaa
cltd
jnp
sarl
jecxz
cmpl
rcrl
subl
sbb
ljmp
lds
mov
mov
test
divl
das
les
jbe
push
inc
cld
cltd
inc
femms
dec
jl
xchg
aam
jmp
xor
cmp
push
push
sahf
inc
insb
aam
mov
push
mov
aas
mov
inc
mov
lret
les
xlat
incl
pop
xor
mov
in
xchg
jle
shrb
std
mov
test
mov
mov
dec
jl
ret
sub
repz
pop
enter
sbb
jne
fwait
inc
test
sbb
mov
mov
jp
repnz
adc
cmc
cltd
test
inc
adc
fwait
sbb
mov
icebp
into
mov
lock
add
adc
lods
pop
and
jge
dec
ret
test
xchg
daa
enter
aas
ds
push
test
sbb
fistpll
test
in
adc
pop
push
loope
in
add
ficoms
stc
add
add
in
xor
mov
sbb
ljmp
mov
fs
mov
lds
push
mov
ljmp
mov
sbb
insb
pop
dec
aam
in
mov
push
int
pusha
shr
shlb
push
xor
jg
push
or
mov
sahf
push
adcl
orl
sti
push
or
pushf
lods
add
or
mov
fnsave
testb
jp
cmpsb
lahf
jg
fstps
faddl
fdivl
add
pop
stos
jp
dec
lret
and
inc
sub
mov
xchg
push
pop
pop
lods
sbb
iret
lret
rorb
jbe
push
dec
out
or
add
cmp
sub
sbb
mov
clc
mov
or
pop
sahf
mov
mov
and
xor
jno
inc
ljmp
fdivrs
xchg
fisubs
sub
push
jb
aas
inc
lods
hlt
test
pop
add
rol
mov
add
jge
outsl
jl
dec
pushf
nop
inc
bnd
ja
imul
movsb
shr
aaa
xchg
mov
or
sbb
mov
mov
lds
aad
push
insl
sbb
jg
fdivr
push
roll
pop
jne
pop
ljmp
cmp
xchg
xor
outsl
cmp
aas
push
ljmp
xchg
pop
cmc
ret
dec
lcall
std
jne
loopne
rclb
cs
jno
or
cmp
mov
xor
sbb
rcrb
xchg
jo
rolb
push
repnz
or
mov
mov
mov
orl
xor
inc
inc
stos
es
movb
jmp
cmp
mov
push
pop
lcall
pushf
inc
add
fsubr
or
test
sub
pop
test
std
cs
jp
test
lret
add
insb
sbb
pop
mov
insb
pop
movl
movsl
mov
xchg
out
jb
inc
mov
loopne
or
inc
movl
pop
jae
cmp
rcll
clc
dec
and
adc
or
ljmp
mov
movsb
push
xor
pop
das
je
xchg
pop
das
xchg
stos
nop
das
and
sarl
dec
mov
ds
addr16
cli
sub
pop
sti
lods
mov
loopne
addr16
push
data16
je
or
adc
mov
andl
mov
mov
pusha
push
lds
arpl
lret
cltd
add
xchg
mov
dec
jp
jno
dec
pop
sub
xorb
pop
and
jp
mov
dec
cmp
aad
jno
mov
adc
ss
repnz
pop
cmp
push
jo
outsb
cmp
cmp
bound
cmpsl
fisttpl
call
sub
mov
and
cmp
loope
jbe
push
cmp
out
enter
mov
dec
pop
xchg
aam
inc
dec
lret
cltd
bound
stos
cmp
test
mov
das
aam
adc
mov
adc
xor
mov
cmc
add
sti
dec
push
sbb
add
push
leave
icebp
or
xchg
pop
mov
test
test
push
test
mov
sbb
pop
xchg
jb
mov
pop
shl
or
pop
icebp
outsb
add
fsubp
pop
icebp
call
decl
cmpsb
pusha
sbb
add
push
movsl
sarl
push
adc
ljmp
mov
sti
xor
bound
shrb
pop
std
out
mov
pop
push
dec
inc
cmp
fisttpl
mov
inc
outsb
xchg
outsl
jl
inc
scas
ret
push
and
popf
mov
and
jle
nop
loopne
and
mov
ja
jne
jp
movsl
or
pop
mov
or
jbe
shlb
sti
imul
orl
sbb
or
mov
pop
and
add
xchg
into
dec
mov
sbb
dec
jp
ret
imul
push
xor
push
jle
pop
lcall
push
sbb
pop
test
sub
mov
lods
mov
sbbl
stos
and
data16
cmpsl
pop
xchg
enter
stc
add
int3
dec
and
dec
cmp
add
imul
jns
scas
xor
pop
movsl
push
add
or
rcr
adc
mov
sbb
adc
daa
sub
mov
sbb
add
inc
ljmp
or
add
xchg
or
jne
in
inc
sub
ss
inc
enter
outsb
add
and
mov
pop
sti
jnp
and
mov
mov
sub
lahf
sub
in
into
inc
push
pop
pusha
inc
mov
push
xor
loop
xchg
scas
arpl
lret
push
jmp
mov
test
jle
inc
jg
out
push
iret
push
add
add
fldenv
mov
mov
int3
sbb
inc
lock
sub
fucomp
pop
out
test
xor
loopne
mov
adc
lahf
xor
or
jne
jb
lcall
cli
adc
mov
adc
test
test
adc
jnp
jge
scas
mov
test
push
daa
xchg
xchg
push
mov
sbb
iret
and
xchg
mov
outsl
lock
nop
pop
dec
js
clc
outsb
jle
dec
scas
psllw
sbbb
dec
test
bnd
mov
add
inc
mov
lret
mov
popa
jo
std
cmp
jge
mov
pusha
rcl
sbb
call
je
cmp
jb
imul
data16
and
adc
adc
xor
adc
jb
lcall
mov
jbe
mov
jne
aad
insl
sub
test
mov
ljmp
subl
and
lods
stos
mov
test
mov
pusha
mov
inc
cmpsb
test
cmp
mov
xor
fmull
jl
jns
push
mov
dec
mov
int
sbb
push
xchg
lret
lds
adc
add
nop
cmp
daa
cmp
mov
cmp
xor
inc
jle
add
in
es
punpckhwd
lahf
dec
cmc
mov
jmp
loop
sahf
loop
inc
xor
xor
and
xor
repnz
or
testl
dec
xchg
loope
test
pop
clc
push
sbb
sbb
dec
pushf
dec
cs
jg
les
out
cmp
mov
push
mov
mov
mov
enter
or
mov
and
icebp
dec
sub
cmpsb
mov
push
add
out
push
xchg
push
sbbb
icebp
outsl
pop
stos
cmp
mov
test
xor
sahf
hlt
dec
fistpl
dec
inc
dec
lea
and
test
inc
cs
xchg
roll
mov
dec
jle
mov
insb
cmp
mov
outsl
out
push
or
inc
jg
rolb
sarl
rcll
push
dec
xorb
xchg
daa
mov
aad
loop
ret
jns
das
mov
call
ret
sbb
jbe
dec
mov
adc
arpl
adc
in
scas
jne
imul
sub
sahf
fistpl
mov
cmc
push
bound
mov
test
les
out
popf
sub
call
xchg
incb
xor
pusha
lds
dec
shll
push
and
outsl
sbb
mov
nop
mov
sub
rclb
mov
int3
jns
jne
lods
jge
popa
das
enter
xchg
lds
mov
scas
loopne
aam
adc
adc
rcr
jle
pushf
jns
xor
popf
jecxz
sub
add
push
and
inc
test
addr16
repnz
cmp
dec
neg
pop
fcompl
fistl
inc
jmp
inc
stos
fldt
mov
sbb
dec
pushl
adc
js
jae
push
xchg
pop
mov
ud0
dec
shlb
jg
mov
cmpsb
and
fisttpll
jle
shlb
mov
mov
push
loop
and
sbb
ss
dec
in
adc
sbb
jmp
outsb
pop
call
mov
sub
sub
insb
pop
bound
popa
stos
add
sbb
mov
jmp
jge
int3
nop
pop
mov
rcrl
inc
and
lahf
stos
call
or
and
and
adc
mov
sub
inc
adc
jp
xchg
mov
add
xlat
es
outsb
cmp
mov
stc
lcall
mov
sbb
add
fildl
lret
cli
adc
jno
test
dec
ja
popf
push
inc
mov
fiadds
icebp
pop
incb
sbbb
xlat
mov
aas
jmp
fdivrs
ret
test
add
add
jp
jle
and
xchg
and
inc
mov
ss
dec
popf
mov
lret
cmc
cmp
rol
dec
stc
fldt
fnstsw
filds
pop
inc
dec
push
and
sbb
mov
popa
fsubs
shl
int3
mov
push
test
fsubl
mov
mov
push
mov
iret
insl
inc
gs
xor
mov
inc
and
insl
push
andl
mov
cmpsb
fidivrs
pop
sub
cmc
nop
stos
imulb
inc
scas
xchg
push
aam
clc
stos
jp
or
mov
push
sub
cmpsb
pop
cmp
popa
sbb
add
dec
out
mov
fimull
add
mov
xor
lock
insl
or
ret
fs
leave
negb
mov
in
jne
sbb
pusha
imul
jecxz
inc
imul
in
cmpsb
aaa
xlat
repnz
dec
fisttpll
ja
std
fldenv
or
outsb
mov
cmp
or
or
repnz
add
arpl
mov
jne
cmpsl
loop
in
inc
arpl
jns
jo
data16
iret
mov
cs
jecxz
jbe
lds
push
jecxz
add
mov
scas
mov
int
mov
xchg
je
js
inc
lret
xchg
cmc
pop
inc
es
mov
pop
loopne
mov
arpl
xor
xchg
loope
sbb
mov
push
insl
in
scas
pop
cmp
mov
outsb
in
ljmp
jl
push
fidivl
fsubr
push
fs
mov
cwtl
push
push
icebp
jge
mov
pusha
jne
pop
push
shlb
sub
fistpl
outsl
or
cs
adc
xchg
insb
add
popf
sbb
push
sub
aas
call
in
or
ror
and
mov
and
inc
cmp
adc
mov
mov
add
imul
add
les
test
fistpll
jg
sbb
out
popf
and
clc
or
ljmp
or
fldl
xchg
mov
add
stos
inc
scas
mov
fiadds
jge
stc
ret
adc
fld
or
xchg
ljmp
fidivl
cmp
sahf
arpl
test
nop
clc
cmp
mov
inc
push
sbb
and
call
mov
call
loopne
lahf
leave
std
add
jge
loop
xchg
dec
cli
mov
mov
decl
sbb
mov
mov
idivb
pop
jno
or
and
xor
enter
adc
or
cwtl
mov
ret
or
jecxz
sbb
test
int
jge
mov
je
mov
sbb
cmp
jmp
stc
jne
negl
sbb
pop
jg
xchg
mov
jg
mov
pusha
sti
add
dec
fadds
and
mov
fldcw
lock
inc
and
arpl
mov
jp
loopne
test
pushf
mulb
mov
push
lds
ret
mov
int3
mov
inc
cmpb
pop
scas
clc
rorl
and
ret
mov
popa
sub
push
es
daa
sbb
mov
xchg
out
inc
je
inc
dec
icebp
fcoml
cmp
lret
pop
lods
ficompl
mov
scas
cli
shl
jb
iret
jne
push
lahf
xchg
mov
xchg
push
jbe
pushf
je
jecxz
mov
jmp
filds
sub
mov
jo
push
lock
orl
pop
sbbb
mov
pop
loopne
daa
cmc
int
jge
aaa
cmp
cwtl
fdivr
inc
fildll
push
xchg
add
mov
mov
mov
outsb
mov
loope
push
xor
and
pop
jle
stos
insl
pop
mov
push
stos
xchg
outsb
cmpsl
movsb
in
jmp
ja
and
mov
mov
fsubrs
mov
push
xor
jne
fadds
dec
insl
arpl
fstpl
dec
arpl
xor
mov
mov
fsubrl
xor
loop
addb
lea
pop
bound
data16
hlt
pop
sbb
movsl
cmpsb
sbb
add
push
popf
in
mov
rolb
mov
lret
adc
addr16
and
dec
lods
sbb
hlt
rol
jg
mov
sub
mov
sbb
add
sub
cmp
add
test
js
pusha
jns
mov
xchg
add
lods
test
jmp
add
jecxz
xlat
xlat
and
fnstenv
cmpsl
movsl
jb
sti
outsb
shl
shl
dec
es
arpl
mov
mov
fldl
cmpsb
vcvtsd2ss
ficoml
je
xorl
push
mov
or
jge
pop
test
shr
mov
mov
pop
mov
mov
inc
mov
cltd
sub
clc
push
repz
mov
cmp
scas
nop
mov
clc
loop
jae
out
out
pop
sbb
dec
aas
pop
das
pop
lock
cld
mov
pop
scas
cwtl
adc
inc
div
dec
mov
mov
cmp
xchg
imul
push
fstpl
jo
sahf
adc
je
pop
inc
and
mull
pop
cld
jbe
sbb
and
cli
nop
decl
adc
add
ljmp
stos
cld
repz
pop
push
mov
mov
sbb
and
pushf
mov
ljmp
test
cmp
mov
fdivs
dec
test
jne
and
add
dec
mov
test
dec
orb
ljmp
xchg
or
push
mov
lock
mov
mov
cmp
mov
outsl
and
call
mov
faddl
adc
fcmovb
fldt
or
repnz
in
adc
sbb
jp
rorl
mov
popf
sbb
mov
lret
inc
incb
pop
dec
mov
pop
ljmp
leave
adc
lret
cmp
fstps
out
mov
dec
loope
xchg
mov
jp
shrb
fwait
sbbl
mov
push
cmc
xchg
sahf
ficoml
jae
jbe
sub
mov
sbb
imul
mov
fimull
repz
movsl
data16
push
lds
lods
adcl
faddp
or
dec
cwtl
mov
push
push
mov
addr16
je
cmp
jne
pop
lock
popa
push
mov
ret
xor
fisttps
mov
outsl
sub
or
jo
pop
addl
sub
cmpsb
jp
xchg
lret
out
scas
jmp
lock
jne
mov
cmc
into
dec
or
push
and
or
mov
xchg
cli
js
mov
pop
ja
add
aam
scas
xchg
jle
sbb
jae
fs
mov
sbb
loopne
xchg
jns
cli
sbb
sub
aaa
je
stos
adc
push
test
and
cmp
push
mov
loope
mov
or
sub
jl
jae
nop
clc
dec
xchg
mov
xor
pushf
push
xchg
mov
data16
jns
cmpsl
popf
and
incl
mov
dec
cs
pop
shlb
adc
jb
mov
add
xor
shl
xor
and
in
and
fistpl
push
imul
push
loopne
aam
push
loope
inc
cmp
xor
std
scas
loopne
ret
xor
mov
mov
mov
loopne
lcall
out
mov
xchg
mov
xchg
and
or
inc
or
push
mov
aam
es
addl
leave
mov
xchg
and
and
insl
movsl
dec
jge
repz
popa
mov
mov
outsl
pop
add
mov
and
sub
and
and
lret
lcall
aas
jge
add
aad
or
push
xchg
lcall
adc
pop
jb
xor
ja
repnz
sbb
jo
jb
cli
push
xchg
adc
test
or
call
inc
add
inc
jae
adc
cld
mov
adc
mov
pop
mov
in
lret
into
dec
std
inc
mov
test
sub
icebp
outsb
mov
mov
adc
scas
les
das
inc
xor
fcomps
pop
cmpsl
ss
push
jo
sbb
or
sub
data16
hlt
sub
jp
mov
pop
lret
mov
jo
in
xchg
xor
data16
sahf
xor
imul
cmp
mov
sarl
dec
les
lods
or
ret
lahf
lret
dec
mov
xorl
push
decl
je
subl
pop
incl
xchg
mov
cli
inc
into
nop
enter
pop
jns
popa
xchg
sub
imul
loopne
jmp
pop
pop
sub
sbb
test
add
sbb
pop
pusha
pop
mov
je
not
sti
lods
test
call
sub
inc
xor
push
mov
mov
add
inc
xchg
jp
repz
or
jne
xchg
xor
xlat
in
ss
lcall
push
mov
inc
fistpll
mov
gs
dec
jg
fs
les
imul
lds
and
decl
jo
mov
cwtl
scas
repnz
pop
icebp
inc
ds
jp
xchg
mov
bound
out
sbb
add
mov
pcmpeqd
mov
mov
lea
aas
push
addr16
xchg
out
sar
addr16
and
not
movsb
cmp
xchg
call
or
nop
dec
mov
add
adc
pop
std
orb
stos
mov
cmp
mov
leave
mov
jo
cwtl
loope
loop
fdivrs
pop
roll
fcomps
sbb
and
inc
mov
lahf
xor
inc
sbb
sub
ds
sbb
push
xchg
subb
xchg
sbb
mov
test
ret
push
dec
add
test
mov
ds
push
xor
fwait
iret
xchg
mov
or
cmp
or
cmp
sbb
xor
add
xchg
cmpsl
xorb
mov
or
lret
lds
addr16
push
bound
jo
mov
xlat
lea
std
mov
arpl
adc
out
inc
push
data16
mov
mov
test
sub
pop
mov
leave
les
lds
repnz
pusha
pop
inc
adc
push
call
insl
cvtps2pd
clc
adc
jo,pn
dec
iret
inc
mov
push
aad
jg
mov
hlt
or
add
mov
rorl
sbb
lock
add
push
ret
sub
js
in
jp
aaa
shrl
shll
push
loope
daa
mov
jg
sub
in
or
dec
dec
mov
dec
xchg
inc
iret
cwtl
inc
xchg
mov
mov
cmp
add
mov
adc
inc
movsl
in
daa
call
mov
lods
in
add
dec
lea
je
mov
inc
adc
or
call
lret
mov
jo
mov
xchg
fistl
dec
cs
popf
inc
arpl
rolb
xor
cmpsb
addb
andb
call
sub
lea
add
inc
inc
add
mov
dec
mov
js
dec
out
mov
jmp
cli
jnp
cmc
jo
sbb
push
popf
jle
sbb
mov
dec
ljmp
push
mov
mov
dec
clc
push
gs
mov
xorl
and
insb
cmpsl
mov
push
fs
and
inc
inc
sub
pop
icebp
popf
fmuls
outsb
jp
dec
sti
or
lds
push
cltd
sub
pop
rcll
xchg
cmc
add
aaa
mov
outsb
inc
xorb
jo
push
out
insl
sti
mov
xor
jo
and
dec
or
lea
mov
sub
jb
fxch
daa
sub
insl
or
inc
inc
push
cmpsl
pop
popf
xchg
cmp
push
fdivr
mov
sbb
xchg
popa
test
cmp
sarl
lods
fdivrp
mov
push
jg
call
das
sbb
pop
je
incb
sbb
mov
fildll
insl
clc
es
ljmp
xor
mov
cld
insb
pop
in
cmovge
mov
jle
xchg
pop
mov
mov
bound
xor
mov
mov
inc
sti
sub
data16
ja
mov
mov
push
pop
push
test
int3
push
or
popa
xchg
inc
cmc
cli
in
sahf
sahf
add
enter
es
incb
dec
ret
ja
mov
sub
or
and
sbb
pop
lahf
scas
jl
inc
ja
add
mov
test
xor
adc
sti
cmpsl
stc
xor
fldl
dec
mov
cvtdq2ps
es
push
stc
cmp
cmc
mov
jno
push
ja
adc
lock
mov
sbb
push
imul
pop
push
jnp
aam
mov
push
stos
inc
movsl
adcb
imul
adc
data16
aad
and
xchg
ds
or
pop
loop
adc
dec
push
add
test
icebp
into
push
or
cmp
ret
call
pop
or
bound
fildl
int
mov
out
or
mov
add
sub
cmc
adc
das
std
aad
jb
xor
loope
mov
mov
inc
adc
mov
fnsave
outsb
push
mov
fidivrs
cwtl
adc
in
fwait
mov
sub
jnp
in
pop
adc
pop
and
dec
cmpsl
fcoml
push
and
and
insl
sub
sbb
pusha
add
jl
cmp
jb
jne
mov
loop
add
repnz
cmp
mov
inc
push
sub
pushl
xorl
sti
popf
outsb
dec
lret
sbb
dec
xor
cmp
test
clc
sbb
sub
sub
fidivrl
adc
test
iret
push
mov
mov
fcompl
js
pop
dec
push
inc
movsb
adcl
push
lds
push
mov
pop
sbb
push
sti
adc
jl
push
mov
test
mov
push
decb
mov
adc
cmp
sub
outsb
insl
add
or
sbb
test
subb
pop
jp
mov
push
adc
mov
and
pop
xchg
popa
push
js
add
jns
or
aad
outsb
test
sub
leave
or
xlat
sub
gs
mov
les
mov
icebp
mov
jnp
jg
bound
pop
rolb
ss
outsb
xchg
fsubrs
mov
xchg
inc
and
pop
incl
icebp
and
es
call
inc
mov
inc
pop
mov
xor
jg
adc
sarb
das
popa
orl
ret
sbb
sahf
mov
push
pop
push
into
jecxz,pt
sbb
andl
adc
subl
rclb
js
push
jle
xor
jl
add
test
and
push
je
xor
jnp
jmp
mov
push
mov
mov
xchg
stos
xor
adc
rclb
cs
test
adc
mov
mov
insb
push
jmp
lods
outsb
jo
or
repz
cmp
sub
cmc
lock
fs
test
mov
mov
xchg
test
lods
ljmp
pop
pop
or
call
sub
ret
mov
mov
iret
test
jae
pop
inc
arpl
outsb
repnz
insb
loopne
aam
mov
adcb
idivl
jmp
push
ds
sbb
sub
repnz
int3
mov
jne
mov
es
mov
jecxz
and
xor
jle
inc
mov
pop
stos
inc
push
mov
add
xor
shrl
rcl
jecxz
sahf
test
mov
aas
jl
xchg
aas
in
push
xchg
incb
push
mov
push
mov
sub
jne
pop
hlt
xchg
push
push
ror
adc
push
daa
jne
test
jg
fnstsw
lret
cwtl
fs
mov
idivb
rcll
mov
aad
in
add
aam
ds
push
sub
or
add
lods
xchg
loop
aam
add
retw
iret
lods
inc
mov
lcall
and
mov
fnstenv
out
sub
or
pop
movsb
adc
fst
in
push
adc
cmp
jmp
mov
out
adc
insb
xchg
shlb
or
ljmp
cmpsb
stc
xchg
pop
jno
rcrl
aas
aam
add
inc
pushf
xchg
or
clc
inc
push
xchg
lea
mov
push
jle
je
or
shlb
fadds
jecxz
fcomi
jo
mov
fists
add
inc
rclb
add
push
cli
inc
fadds
movsl
dec
pop
jne
inc
dec
dec
mov
adc
imul
ret
lret
lea
jp
imul
push
rorb
js
mov
pop
js
xorb
xor
sub
cmp
and
or
repz
xor
std
jbe
add
xchg
push
mov
mov
push
and
cwtl
lods
test
jl
in
ja
arpl
lods
dec
jae
ljmp
stos
sub
inc
int3
cltd
sbb
call
cmp
xor
daa
adc
xor
xchg
mov
jp
mov
inc
sub
lods
shrb
in
cmp
leave
push
sbb
pop
cwtl
mov
clc
repnz
das
test
in
ret
cwtl
dec
loope
jge
outsl
loopne
sahf
jnp
repnz
adc
shr
and
or
ja
scas
scas
nop
ret
inc
rorl
int
loopne
mov
mov
movsl
jbe
sti
xor
fldcw
mov
or
add
shll
sahf
movsb
adc
fildl
sbb
mov
add
sub
shr
mov
xor
lahf
dec
cmp
push
hlt
inc
out
mov
push
or
lea
cmc
jno
pusha
lea
cwtl
test
cmp
xchg
mov
dec
lds
arpl
sub
xor
test
and
adc
out
jnp
add
daa
jb
xor
sarl
xlat
sbb
insl
out
jnp
ja
jmp
test
fcmovnbe
pop
jo
in
push
stc
test
lcall
dec
mov
in
pusha
nop
aaa
inc
or
sub
inc
stc
xor
add
int
pop
in
outsl
scas
inc
xchg
dec
das
incl
das
enter
jb
ljmp
fstl
and
adc
or
stos
ret
leave
int3
popf
orl
cltd
add
pushf
sub
stos
cvtps2pi
mov
add
insb
fwait
dec
mov
pop
dec
mov
lock
mov
push
jnp
sti
rcrb
xor
inc
std
int3
pop
dec
sub
std
push
insb
jo
adc
fdivl
mov
push
stos
adc
inc
sahf
in
dec
int
mov
sbb
int
dec
outsb
jecxz
test
das
call
xchg
push
iret
sbbb
push
incb
int3
xchg
sbbl
jle
shll
push
jb
adc
and
push
inc
adc
pop
push
hlt
inc
out
fdiv
loop
sbb
cmc
xchg
stos
gs
mov
test
xor
sahf
js
pop
adc
inc
sarl
jo
jne
mov
add
scas
fcom
push
loop
fwait
xchg
jge
cmpsl
loope
sti
pop
dec
cmp
xchg
adc
aam
xchg
stc
pop
imul
clc
lods
cli
call
test
out
mov
or
mov
sbb
jg
or
call
outsl
aam
sahf
adc
subb
lret
in
push
cli
adc
out
push
jne
iret
cld
fucomip
aad
daa
mov
test
jo
cmp
sarl
pop
cld
es
sbb
into
xchg
or
int
aad
orl
incl
or
outsb
jecxz
and
test
das
push
cmp
paddd
sbb
add
shr
jno
xchg
xchg
popf
mov
mov
ljmp
std
inc
nop
mov
mov
cmp
cmp
dec
cmp
sbb
mov
adc
dec
push
cli
jecxz
adc
je
daa
cli
cltd
loope
jb
out
out
xchg
push
inc
mov
push
fs
stos
enter
pop
adc
or
mov
aad
lea
mov
inc
mul
mov
jnp
cltd
mov
dec
add
or
rorl
lods
test
jbe
enter
push
test
lods
sbb
stos
sub
mov
xchg
imul
or
dec
mov
jecxz
push
mov
ss
sub
sub
ret
cs
clc
je
cltd
in
pop
iret
add
jmp
or
adc
enter
ffree
or
adc
xor
xchg
pop
jae
icebp
inc
and
or
sahf
and
sbb
outsl
xchg
ret
push
lods
mov
cmp
pusha
int3
add
lock
lahf
and
adc
xchg
out
cmp
mov
dec
insb
insb
outsl
pop
add
push
and
ret
dec
dec
mov
inc
rclb
arpl
mov
sub
sbb
out
sub
xchg
aam
outsb
xor
sti
rorb
sub
cltd
andl
icebp
xchg
inc
xchg
or
sarl
sbb
and
fimuls
xor
push
jg
and
xor
xor
insl
push
or
add
mov
lret
mov
shll
lcall
scas
outsl
mov
dec
aaa
es
xchg
fcmovbe
add
mov
stc
lods
and
stos
jbe
out
insb
je
imul
sbb
aas
ror
xor
xor
enter
adc
xchg
sbb
xorb
or
inc
inc
pop
sub
test
cs
push
jo
pusha
dec
mov
sbb
iret
pop
inc
inc
imul
push
inc
add
out
andl
movsl
xor
inc
cld
loopne
ss
xchg
fdiv
xor
jmp
dec
dec
sub
jns
jle
pop
ds
mov
dec
sbb
fisubrl
mov
xchg
pop
hlt
lcall
jle
push
mov
push
call
roll
pop
pop
sti
jmp
pushf
inc
xchg
test
ret
push
cs
mov
aam
les
iret
add
loop
out
dec
pushf
enter
adc
mov
jne
aas
div
fistl
dec
cmp
add
inc
push
jmp
out
dec
in
jbe
incl
sbb
adcb
sub
pop
and
mov
loopne
loop
ret
lods
ret
fists
xchg
pop
fcomi
scas
add
movsb
pop
mov
jl
inc
jbe
jecxz
xchg
and
ret
jg
ds
push
pop
call
and
sub
aaa
mov
xor
mov
mov
outsb
mov
inc
ret
inc
xor
or
lods
aas
clc
push
int
or
cltd
xchg
out
popl
addb
pop
add
fisttps
repnz
call
cmp
lea
xchg
xchg
cmp
inc
icebp
jb
push
das
rol
add
sbb
fwait
mov
inc
fisttpl
push
adc
js
mov
pop
aaa
pop
or
or
add
sub
jle
call
or
xchg
lret
and
add
jns
int3
push
arpl
mov
mov
ljmp
push
mov
std
repnz
pop
lea
add
daa
call
imul
cs
fwait
ret
icebp
dec
test
fisubrs
push
ret
movsb
xchg
and
not
insl
adc
dec
outsl
push
pop
adcl
mov
push
xor
std
inc
sub
jmp
pop
pop
cmp
iret
mov
mov
add
or
movsl
mov
cmp
test
cmp
movnti
nop
add
ds
inc
or
outsl
add
ficompl
cs
cmpsl
xlat
mov
sbb
inc
loop
aas
xchg
push
cwtl
rolb
fcmovnbe
or
jne
fmuls
jge
xlat
shr
push
cltd
icebp
fcmovne
outsl
iret
mov
inc
and
out
adc
clc
xchg
or
sbb
dec
scas
in
mov
jle
cmp
mov
mov
push
dec
addr16
aas
lahf
std
mov
insb
nop
mov
pop
add
mov
jo
pop
incb
lcall
pop
inc
mov
insb
cwtl
lock
ja
xchg
xor
inc
cwtl
mov
cmp
add
push
push
fs
mov
xchg
clc
clc
inc
jbe
xor
les
bound
push
xchg
mov
cli
out
xchg
cmp
lock
or
inc
inc
cmp
mov
loop
push
cmp
in
ljmp
jecxz
scas
xor
push
int3
or
lea
mov
shll
adc
cmp
dec
xchg
xchg
sub
sub
jecxz
testb
pushf
into
lahf
cmpsb
jge
int3
cmp
prefetch
out
adc
inc
les
dec
xorl
inc
add
add
shlb
push
jp
sbb
or
inc
lods
fs
push
mov
data16
inc
cmp
js
pop
cmp
std
mov
push
pop
movsl
and
inc
mov
pop
mov
push
test
int
outsb
add
mov
sub
mov
in
scas
lock
fcoml
push
pusha
or
sbbl
fadds
dec
cld
fwait
and
out
jo
sub
insl
lds
inc
push
add
pop
inc
push
adc
inc
pop
adc
ljmp
adc
fisttpl
insl
jnp
ja
pop
test
bound
fsts
imul
mov
scas
mov
pop
push
sbb
in
das
add
shrl
add
cmpsl
jne
movsb
add
jae
pop
enter
push
add
cs
mulb
pop
xor
call
sbbl
arpl
mov
jae
mov
lret
pop
into
inc
mov
fdivs
sub
push
sub
iret
inc
lock
pop
fadds
mov
inc
pushf
loop
shr
clc
jl
lds
and
dec
mov
lahf
push
or
mov
adc
push
mov
mov
lods
mov
add
add
cmpsl
pop
in
aam
loope
ret
mov
repnz
loopne
repz
std
pop
lahf
ret
sub
xchg
imul
sbb
lods
imul
push
push
fcmovbe
out
dec
mov
arpl
mov
dec
cmp
repnz
mov
scas
pusha
jecxz
rorb
arpl
jno
mov
es
cmpsb
fincstp
fucomip
dec
jge
sub
push
rolb
add
xchg
mov
push
mov
stc
rcrb
jb
test
jb
sub
push
jno
jbe
inc
sahf
pop
sub
ret
cli
outsl
fcmovnu
pop
jno
ficomps
inc
addr16
or
imul
xchg
in
cmp
scas
pop
xor
pop
jmp
add
test
adcb
out
jne
cli
add
sbb
mov
arpl
sar
mov
lds
cwtl
inc
xchg
dec
call
icebp
add
jmp
push
test
mov
cltd
test
mov
lahf
or
loopne
or
jbe
dec
dec
xor
test
fisttpl
mov
movsl
push
clc
xlat
and
fildll
xchg
sarb
cmpsb
fldl
test
repnz
inc
out
pop
mov
xchg
pavgw
mov
jle
and
push
je
mov
or
aad
mov
jl
test
dec
mov
ja
sub
and
jbe
push
into
push
xor
andps
or
faddp
je
cs
test
jbe
ret
popa
int
into
mov
sub
call
std
add
add
mov
mov
mov
mov
arpl
cs
lds
lahf
adc
mov
xchg
ret
in
or
dec
lcall
popf
mov
or
cmp
das
int3
sub
sub
pop
shl
jecxz
pop
xor
push
aaa
adc
xor
and
in
pop
flds
mov
ds
ljmp
inc
je
jmp
roll
insb
push
xor
loop
pop
lock
jle
mov
das
fidivl
pushf
add
pop
fsubr
ret
jmp
outsb
fdivs
mov
mov
scas
and
push
pop
in
leave
in
out
movsl
jns
bound
cmpb
test
push
mov
rorl
pusha
addr16
lahf
call
mov
mov
loop
ljmp
mov
call
loopne
sub
sbb
test
cltd
or
dec
dec
test
jo
out
or
xor
test
pop
int
pop
push
gs
lea
movsb
enter
insl
sti
ss
mov
in
cmc
push
pusha
push
mov
ss
int
call
jo
mov
sub
xchg
push
dec
scas
sbb
mov
push
hlt
loop
push
and
and
rorl
jg
pop
xchg
gs
hlt
mov
and
jbe
xchg
inc
pop
negl
icebp
push
aam
mov
jae
inc
xchg
rolb
sbb
lret
mov
add
or
jl
stos
or
jmp
and
sbb
dec
xchg
pop
or
adc
test
push
ficomps
sub
aaa
fwait
into
cwtl
mov
gs
sbb
mov
or
sub
pop
cmpsl
data16
sbb
xlat
subl
cmpb
and
push
pop
or
cmp
inc
jns
adcb
test
xor
js
lods
pop
and
jg
std
mov
and
cmpsl
xor
shll
aam
test
xchg
push
aaa
mov
push
xlat
pop
cli
push
fsts
fadd
in
xor
jecxz
sbb
stos
int
addr16
add
sbb
aad
jno
pop
cmp
pushf
pop
lret
sub
scas
mov
pop
push
xchg
fbld
stos
fs
lea
inc
fildl
pop
pop
mov
jo
out
jle
out
dec
rorl
xor
sub
xlat
out
jbe
pop
adc
cmc
test
lahf
mov
mov
lret
shr
adc
xor
ss
jg
push
sub
jmp
fs
push
mov
push
sub
mov
mov
cli
xchg
jg
imul
mov
mov
leave
insl
scas
sbb
mov
ret
mov
shrl
pop
pop
test
sbb
dec
fbstp
mov
outsl
lods
push
cmp
jmp
jg
inc
aaa
sarl
cltd
xchg
es
sahf
pushf
imul
push
movsl
pop
or
in
int
xchg
into
pusha
sti
das
cld
jle
shll
and
xchg
push
pop
dec
imul
lds
and
xchg
lcall
jnp
ret
push
cli
jae
stos
add
push
xchg
incl
add
or
les
mov
cmp
mov
jp
aam
sahf
inc
xor
cld
dec
add
scas
xor
insb
pop
sbb
mov
out
lret
add
jg
adc
mov
jmp
mov
icebp
fisubs
sbb
sbb
into
lret
adc
loopne,pn
lock
add
hlt
into
push
fs
test
ljmp
outsl
mov
sub
dec
sbb
in
push
pop
lahf
cmp
mov
push
jle
mov
aaa
shl
ljmp
mov
sbb
xor
jl
or
mov
mov
push
movsb
adc
arpl
ljmp
fsubs
dec
push
push
add
cmp
push
stc
jae
xchg
lock
mov
xor
pop
cli
cltd
scas
clc
pop
or
lret
fcompl
lock
cmp
orb
rcr
mov
sbb
outsb
mov
xorb
add
xchg
and
daa
mov
cmp
das
mov
sahf
cmp
clc
pop
dec
mov
push
sti
add
mov
sbb
ret
dec
or
fistps
xor
fwait
out
enter
cmc
push
add
sahf
sub
and
dec
push
dec
into
pop
or
jg
shl
andnps
shr
mov
lock
xchg
add
inc
popa
or
push
icebp
and
pusha
add
push
mov
clc
inc
pop
jne
pusha
pop
sbb
in
out
stos
ror
push
iret
jmp
push
inc
push
pusha
sub
sbb
and
iret
mov
jecxz
int3
or
or
sub
sarb
sub
mov
idivb
mov
mov
xchg
outsb
add
and
fisubrs
out
dec
sub
inc
lea
xlat
sti
lret
push
icebp
int3
cmp
pop
lret
jmp
mov
ja
test
xorb
inc
fidivrl
adc
mov
inc
mov
add
push
push
dec
jae
pop
add
mov
sub
into
mov
sbb
xlat
insb
test
in
jle
call
lock
and
ret
jge
ret
aad
adc
outsb
inc
jl
or
pop
enter
adc
call
mov
jno
mov
test
fdivp
movsb
lea
call
xor
add
sub
shl
and
pop
jne
adc
and
sbb
jl,pn
insl
push
mov
out
xchg
fld
cld
adc
jp
lods
inc
aam
dec
mov
mov
les
and
jo,pt
clc
dec
pop
lret
into
arpl
or
xor
sbb
pop
call
push
xor
pop
and
gs
inc
rep
clc
rorb
cmc
xorl
pushw
sbb
xchg
mov
xor
clc
outsl
scas
sbb
sbb
lods
xchg
cmp
xlat
ja
fsubrs
mov
mov
orl
lock
aaa
lock
insl
pop
int
push
cmp
rcrl
or
sub
mov
arpl
subl
xor
stos
mov
sbb
lahf
sbb
movsl
cmp
ljmp
popa
test
xchg
and
sbb
lret
xchg
dec
in
cmpsb
mov
sbb
inc
or
in
pop
rcr
mov
or
dec
cmp
add
clc
push
lcall
js
aad
dec
decb
or
jno
outsl
inc
mov
cltd
movl
sub
je
jb
lret
pop
je
scas
cmp
orb
inc
aas
clc
outsl
lret
ds
pop
out
jmp
ret
cli
add
xchg
and
and
lea
sahf
test
adc
pop
test
mov
fcoms
outsl
insl
hlt
filds
lods
xlat
pop
rclb
mov
cltd
mov
push
and
mov
sub
stc
punpckldq
push
hlt
and
movsl
js
ret
test
in
cmpsl
inc
rol
cwtl
push
push
fiaddl
xchg
xchg
mov
adc
xchg
arpl
cmp
iret
pop
pop
clc
jecxz
mov
sub
push
and
pop
rolb
ret
and
nop
sub
cld
mov
test
sbb
pop
rcrb
lds
pop
mov
das
pop
sbbb
gs
and
test
dec
into
cmp
sbb
arpl
push
movsl
in
mov
pop
clc
orb
jns
adc
or
shll
mov
dec
jmp
insl
add
in
jne
cld
sbb
mov
dec
cwtl
call
and
fdivr
lds
ja
sbb
push
lahf
pop
lods
cmpsl
stc
cld
lahf
subl
js
jae
enter
jns
mov
cmpsb
dec
mov
sbb
jns
cld
mov
push
pushf
shll
jae
mov
inc
mov
stos
or
ret
pop
scas
das
mov
push
pop
pop
popf
or
xor
pop
pop
push
mov
mov
add
or
adc
and
jbe
bound
xor
mov
fimuls
pop
mov
pusha
insl
sarl
cmpsl
in
rclb
jle
daa
or
pop
or
and
loop
xor
or
pop
xchg
and
ret
jge
xor
icebp
inc
jbe
xor
push
aam
sbb
test
mov
imul
arpl
mov
dec
jne
sbb
inc
adc
in
mov
mov
add
or
aas
jl
lock
outsl
push
dec
xor
mov
push
test
cld
and
hlt
inc
mov
xchg
push
fisttpl
lds
and
cmpsl
mov
mov
mov
test
mov
sbbb
sbb
jl
fisubrs
repnz
push
mov
sbb
xor
mov
pop
out
nop
pop
enter
outsb
loope
pop
sub
das
and
sub
test
or
pop
stos
stos
popa
push
xor
icebp
rorb
sbb
movsl
pop
adc
inc
and
cmpsb
mov
push
add
adc
mov
call
ds
push
ror
in
pop
rorb
lret
in
test
dec
lcall
mov
aaa
outsb
lods
mov
xor
sub
jo
dec
inc
aam
je
call
jns
and
inc
sbb
and
jb
fcomip
pushf
rclb
xchg
fs
push
std
add
inc
push
adc
dec
stos
fucomi
jbe
mov
pop
or
sarb
mov
xor
fiaddl
and
push
lock
test
stos
outsl
fisttpl
dec
sbb
pop
aam
dec
add
aam
add
pop
sub
and
dec
rorl
call
js
dec
cmc
addb
dec
jp
popa
mov
ljmp
or
movsb
xchg
and
filds
jae
stos
js
adc
xchg
sbb
cmpl
pop
subb
iret
cmp
pusha
sti
call
test
push
insb
bound
leave
add
jnp
fidivs
mov
incb
jg
in
sbb
mov
push
mov
jle
inc
shll
ljmp
add
push
adc
adc
dec
jge
cmpsb
sub
or
loope
cld
add
pop
pusha
test
iret
mov
rol
inc
das
mov
outsl
xchg
divl
enter
xchg
sar
movb
cs
faddl
enter
movsl
enter
xor
and
sbb
jbe
imul
push
hlt
cld
dec
or
inc
xchg
jne
lahf
nop
adc
xor
xchg
xchg
aam
outsb
adc
sub
push
in
sub
add
ds
leave
jbe
push
mov
add
lds
into
popl
dec
xor
xchg
mov
loope
imul
cmp
lea
xchg
ret
adc
js
dec
fnstsw
testb
shlb
mov
shrb
lea
jbe
inc
in
ret
mov
push
ja
mov
cmc
lret
push
add
sti
cmp
sahf
popa
xor
and
or
jg
mov
push
and
loopne
fwait
pop
or
jl
mov
clc
pop
rclb
mov
cmp
bound
lock
pop
lock
lret
jecxz
pop
leave
mov
jo
lods
je
std
and
ljmp
in
js
mov
or
js
or
jb
rorl
out
outsl
mov
stc
mov
lods
or
and
jmp
mov
sbb
out
test
fwait
and
inc
shl
add
adc
das
mov
aad
xchg
mov
ljmp
mov
cld
cli
in
fcompl
pusha
sub
jle
int
ret
push
das
jl
out
loope
and
and
cmc
push
clc
mov
bound
popf
scas
pop
adc
jmp
xchg
outsb
fwait
es
and
mov
adc
js
mov
cmp
jmp
fsubrs
push
cli
shlb
cld
cwtl
repnz
out
lea
and
adc
clc
ret
jo
mull
pushf
and
and
mov
insb
insl
popa
jmp
xorl
fisttpll
ss
jno
jg
mov
icebp
mov
mov
pop
xor
jmp
cs
lret
mov
jp
xor
push
push
rcl
inc
jle
xor
jae
mov
clc
and
hlt
push
push
mov
or
sub
lods
inc
mov
xchg
jno
outsl
pop
push
sarb
push
cmp
loopne
xchg
decb
pop
aad
fucomip
jno
popa
lahf
cld
jp
addb
out
insl
jno
dec
jg
or
mov
sbb
dec
and
mov
xor
loope
orb
cmp
mov
jns
jmp
xor
out
jle
adc
rorb
dec
divb
popa
inc
pop
sub
movsl
in
test
and
cld
mov
std
pop
or
lret
push
pushf
adcl
fwait
or
ficoms
adc
incb
xor
push
mov
and
and
cld
shrb
das
pop
lret
pusha
orb
daa
fiadds
insl
std
loop
mov
lcall
int3
push
bound
vpsrlq
mov
inc
out
imul
loop
ret
ret
xchg
cmc
ret
adc
jmp
mov
push
das
fdivrl
push
mov
outsl
and
outsb
jg
outsb
mov
inc
xchg
movsb
xor
ss
inc
pmullw
insb
inc
xor
xor
testl
xor
lahf
push
push
popa
cltd
pop
orb
fbstp
dec
sbbb
sub
enter
test
scas
mov
and
out
pop
xor
mov
addl
push
sub
loop
mov
pop
lea
pop
xchg
mov
pop
mov
ret
jo
stos
or
into
loopne
sbb
xchg
xchg
or
inc
jl
jbe
cmpb
mov
sbb
dec
lock
xlat
inc
js
outsl
negl
sbb
inc
jl
pop
in
sub
push
adcb
sbb
in
cli
lcall
pop
daa
jo
sub
shll
push
js
jecxz
xchg
dec
lcall
aam
cmp
pushf
inc
lds
fsubs
push
mov
jne
add
sub
sub
ret
jo
push
shll
mov
xchg
lcall
ret
or
lods
inc
sti
and
xchg
outsb
mov
push
jge
inc
daa
out
sub
call
in
mov
jl
enter
push
rcrb
loop
mov
fstpl
aaa
fmul
out
jo
daa
into
or
jg
popa
outsl
jle
stos
or
das
jmp
jle
inc
and
and
mov
jo
pushf
lds
fwait
shll
cmp
inc
loop
fldl
aaa
xchg
cmp
repnz
pop
and
add
jne
adc
aaa
push
mov
test
dec
subl
dec
add
push
jne
call
adc
and
mov
ja
iret
push
push
sbb
jg
movsl
inc
sahf
mov
nop
into
cld
inc
loop
movsl
xchg
ret
jno
add
ss
jle
mov
mov
out
stos
stos
aas
add
or
scas
leave
or
jecxz
xor
repnz
pop
inc
xchg
loopne
sbb
fnsave
push
es
mov
out
mov
mov
adc
inc
arpl
or
or
mov
and
sub
dec
call
cmpsb
cmp
pop
and
scas
movups
fbstp
mov
push
bound
pop
xchg
insl
in
push
test
outsl
inc
lock
sbb
sbb
add
jo
dec
scas
fwait
or
mov
mov
insl
mov
pop
notb
std
mov
testb
and
subb
das
sahf
loope
or
add
xchg
and
xchg
mov
in
outsl
fildl
and
xchg
out
enter
push
jle
fistpl
stos
and
pop
sbb
xor
push
sub
lea
pop
or
push
add
pop
mov
xor
xchg
aad
roll
mov
mov
loopne
out
mov
repz
mov
andb
and
outsb
push
mov
adc
outsb
sbb
pop
xor
std
jmp
cmp
aad
mov
dec
pop
aaa
insb
incl
std
add
stc
push
popa
push
inc
push
movsl
aaa
cwtl
xor
es
and
mov
lods
or
movsl
lea
dec
or
mov
addl
mov
sbb
roll
mov
outsl
test
or
xchg
je
daa
adc
mov
xchg
mov
jb
push
aas
cmp
aam
dec
cs
pop
outsb
popf
adcl
cmp
orb
popa
sbb
stos
ficoml
and
call
lret
or
push
xor
out
in
repz
ds
call
int3
imul
xchg
aaa
xlat
mov
and
test
lods
inc
cmp
loope
js
mov
stc
add
ja
push
mov
inc
sti
mov
call
jbe
int
add
mov
adc
aas
js
fdivrl
sub
add
xchg
xchg
sahf
xchg
dec
orl
sub
mov
inc
sar
jns
inc
adc
into
sub
adc
push
ja
dec
es
mov
ret
xchg
aaa
or
mov
loope
jg
jg
data16
mov
addl
fbstp
adc
out
cwtl
into
mov
mov
mov
lds
loop
cs
addr16
movsl
jle
and
jnp
xor
or
scas
add
int
cmp
mov
cmp
pop
dec
xchg
and
in
mov
jg
lods
fisttpl
out
dec
sar
adc
xor
and
xchg
mov
mov
mov
out
push
jl
rolb
sbb
movsl
pop
pusha
xchg
rorb
cmp
push
mov
neg
adc
imul
out
mov
push
jl
push
nop
cltd
mov
aaa
test
stos
sub
add
imul
test
inc
inc
push
fs
jmp
int3
icebp
push
lea
mov
sbb
pop
das
jns
int
push
sbb
adc
jbe
les
mov
xchg
cs
rcll
pop
xor
inc
sub
mov
dec
cwtl
mov
rol
mov
pop
sbb
adc
xchg
cmp
dec
mov
ret
dec
cmp
cmpl
orb
aad
lock
popf
mov
cmpsb
call
adc
roll
jne
jne
push
repz
pop
push
xchg
mov
notl
mov
pop
dec
dec
lds
aaa
aaa
sbb
clc
mov
pop
test
sti
inc
push
or
fsubrs
aas
mov
test
test
aas
push
popl
inc
xor
clc
adc
xor
inc
and
jg
popf
adc
daa
fists
pop
xchg
outsb
cmp
idiv
push
fs
cmp
xchg
sub
xchg
pop
pop
pop
jne
out
outsl
mov
aad
das
jecxz
pop
push
test
xor
pop
clc
mov
imul
inc
mov
loopne
push
cld
je
push
push
mov
cld
cmp
popa
arpl
fwait
pop
or
out
jl
insb
in
sub
inc
mov
insl
cmp
rcl
cmp
sub
jo
sub
xchg
sti
xor
stc
out
pushf
jo
or
pop
push
test
negl
das
fsubr
mov
std
pop
aaa
sbb
xchg
bound
xor
and
mov
aaa
fnsave
sub
ret
sbb
jo
adc
nop
mov
loopne
in
mov
addl
sbb
pop
sub
or
iret
mov
and
imul
pop
inc
sbb
cmpsb
shlb
fisubs
hlt
fldl
jle
cmpsb
cmpsb
inc
cmp
icebp
mov
popa
mov
jg
sbb
push
inc
lret
sub
dec
mov
pop
pop
sbb
and
mov
in
add
jg
adc
lods
dec
adc
dec
insb
or
mov
push
jge
je
loope
mov
inc
enter
mov
cmc
popl
mov
mov
js
inc
jle
inc
cwtl
inc
cmpsl
sbb
push
pusha
push
shl
cmp
aaa
dec
dec
add
jmp
repnz
lods
mov
popl
ds
and
lcall
xchg
test
aam
sbb
stos
fcomps
push
rcrb
negb
sbb
jmp
sbb
scas
pcmpeqb
sub
outsb
mov
int
mov
xchg
push
pop
adc
jp
inc
fildl
jg
imul
pop
daa
xor
add
in
pop
mov
cmovne
jbe
and
fsub
in
and
push
jnp
mov
mov
cli
or
adc
cmc
outsl
frstor
pop
sub
cs
mov
and
hlt
or
mov
ss
fcompl
mov
ljmp
mov
ss
iret
mov
sbb
test
add
sub
push
aaa
xor
sub
lret
aas
orl
outsb
jge
push
popa
lods
cmpl
sub
addl
push
fdivs
lods
mov
cmp
and
or
cwtl
mov
mov
iret
mov
push
insl
daa
sub
mov
adc
or
xor
cltd
iret
mov
inc
push
std
rcrl
dec
int
jge
ds
test
pop
lock
je
and
mov
jg
aas
and
sbb
and
sarl
cltd
mov
pop
or
scas
into
add
and
mov
hlt
push
fmull
lock
mov
fistpl
adc
stos
cmp
add
mov
cmpl
jne
push
push
push
out
fsub
mov
enter
dec
and
sub
ja
mov
nop
or
outsl
adc
decl
jecxz
mov
addr16
and
jo
mov
out
xor
push
mov
scas
push
add
aas
mov
dec
mov
ret
and
xchg
jle
add
add
mov
in
sbb
lahf
push
mov
inc
mov
sub
sbbb
push
push
xchg
je
inc
negl
mov
popa
aaa
fisttps
mov
sub
mov
or
dec
js
icebp
test
inc
and
push
std
or
out
sbb
push
add
pop
dec
xlat
pop
inc
jno
dec
jl
ja
fs
mov
inc
push
jmp
in
popa
mov
add
mov
cmpsl
add
jecxz
ret
in
test
push
sub
or
out
jne
stos
sbb
xor
jno
mov
push
inc
loop
mov
sub
leave
daa
cs
sarb
push
std
sti
inc
mov
sbb
mov
fmulp
mov
push
adc
lods
loopne
xchg
add
jg
aas
xchg
shrb
sub
icebp
mov
std
mov
lea
rolb
adc
fwait
adc
fdivl
daa
lcall
mov
aas
sub
jl
jg
push
arpl
mov
jno
xchg
clc
cmc
cmpsb
sbb
adc
cmpsb
iret
cmp
ljmp
xor
mov
xlat
dec
push
call
dec
data16
scas
pop
insb
xor
mov
insl
mov
daa
sub
mov
js
adc
sti
or
xchg
jb
mov
xchg
xor
jle
xor
jae
pop
sbbb
sbb
ret
inc
ja
cwtl
cmp
mov
in
cli
jl
fsub
sahf
mov
jg
movsb
and
enter
and
sub
sub
filds
rcrb
inc
sbb
cmp
add
vmwrite
pop
decl
aam
xchg
xor
fwait
pop
ja
jmp
and
rolb
pusha
xchg
ja
xlat
xor
pop
into
mov
or
movsl
out
or
test
pop
sbb
mov
lcall
jno
lods
enter
std
decl
mov
hlt
jle
push
jg
in
jno
cmp
mov
pop
mov
mov
ret
dec
sub
fcmovb
sbb
movsb
mov
sti
inc
pop
fidivrl
int3
jecxz
xor
adc
or
dec
out
push
or
cwtl
xor
mov
fisttps
pop
sub
lea
aam
ret
jecxz
dec
jo
movsl
push
loopne
in
pop
in
movsb
or
mov
rorl
test
mov
mov
push
dec
jge
push
movsb
inc
jo
and
pop
in
test
cmpsb
adc
jg
pusha
push
subl
push
mov
pop
cs
mov
loop
or
push
sub
cmp
push
lods
decl
arpl
xchg
cmp
xchg
cs
dec
cmpsl
sbb
mov
test
mov
pop
xor
ljmp
mov
inc
cmp
outsb
lock
out
repz
cld
test
lods
or
stos
adc
sub
sbb
ret
adc
dec
lock
lea
xor
pop
fadds
mov
mov
cmp
arpl
xorl
icebp
flds
and
repz
sarb
aaa
cs
push
mov
inc
jbe
or
mov
sbb
dec
repz
clc
and
dec
xor
pop
pop
mov
dec
push
lea
push
or
std
sahf
cmp
or
push
pop
std
or
mov
frndint
mov
mull
sub
in
repz
mov
inc
call
cli
inc
sub
xor
mov
cmc
jecxz
std
ffreep
inc
xchg
icebp
push
shlb
call
lcall
push
sbb
aad
mov
mov
xor
mov
sub
stos
enter
shl
ret
cmp
mov
adc
enter
insl
pop
cmc
movsl
xchg
ds
not
xchg
sub
mov
testl
inc
mov
lahf
and
push
aaa
mov
pop
outsb
sbb
insb
cs
adc
push
loopne
fadds
sub
clc
lcall
loop
or
out
repz
jmp
in
cld
mov
pusha
mov
push
pop
fisttpl
push
pop
popf
mov
insb
dec
outsb
cmp
shrl
push
jp
add
fsubrs
or
dec
jl
mov
xchg
push
sub
test
push
test
pop
jns
mov
jb
imul
push
mov
and
ds
xorl
pop
stos
sub
mov
out
xchg
push
adc
or
outsl
dec
sbb
inc
aas
pop
clc
call
sbb
sub
pusha
xorl
iret
push
jbe
test
pop
lock
xchg
mov
out
cmp
push
dec
fistl
sbb
push
das
sbb
inc
mov
iret
setle
lahf
test
daa
cmpb
aad
inc
and
stc
movsl
test
pop
xchg
gs
push
and
lock
jl
inc
dec
cmp
repnz
cmp
push
movsb
mov
sarl
aas
call
call
push
jno
xchg
sub
loop
inc
int3
mov
and
lock
xchg
and
sub
aaa
push
mov
dec
mov
lcall
loop
xchg
and
jbe
dec
sbb
test
ss
mov
loop
mov
mov
inc
out
cmp
mov
popl
adc
or
mov
addl
push
lds
sub
aad
xor
jbe
xor
cmp
push
add
inc
push
repnz
aas
push
mov
and
sub
xchg
clc
push
loopne
into
add
mov
or
push
gs
mov
andl
dec
cld
das
mov
push
ja
xor
movsb
jb
cmp
xchg
adc
xchg
insl
jmp
into
ss
arpl
jbe
pop
jae
xchg
fiadds
js
imul
insb
sbb
aaa
in
addl
dec
or
aam
lea
xchg
les
mov
adc
or
xor
out
add
pop
hlt
cmp
adcb
cmpsl
int
xchg
fidivs
jns
ja
pop
fldl
neg
shrl
pop
dec
push
test
sub
pop
out
cmp
sbb
jmp
test
push
sbbl
pop
mov
sbb
lock
mov
ret
xchg
das
call
cld
add
cli
xchg
addr16
cmpsb
stos
clc
ljmp
or
sbb
mov
bound
or
push
add
pop
mov
test
lods
daa
add
aam
mov
fisubl
adc
xchg
sar
fildl
clc
popf
pop
pop
cmp
shll
pop
das
mov
sahf
roll
cmp
add
fstpt
jle
mov
sub
mov
leave
icebp
lock
sbb
inc
aam
mov
xor
inc
push
xor
and
decl
rol
cwtl
daa
lds
and
mov
lea
cltd
xor
sbb
das
mov
pop
je
lds
pop
push
push
fnstsw
es
lahf
subl
sahf
jb
dec
cltd
jnp
notw
popa
outsl
outsb
sti
or
push
test
ljmp
adc
popf
jle
inc
nop
xor
sbb
xchg
mov
sbb
mov
adc
faddl
aaa
jle
repnz
jno
js
mov
or
xchg
loopne
out
dec
pushl
add
adc
sub
movzbl
xchg
in
leave
sbb
orb
mov
pop
mov
out
add
cmp
xor
cmpl
subl
mov
and
lds
sub
cmp
inc
imull
sbb
cmp
fmull
pop
push
mov
and
inc
cltd
push
das
pushf
add
cmp
push
lods
out
fcmovbe
add
adc
loop
jnp
sti
and
addr16
in
xor
shr
hlt
sbb
jl
jp
test
add
enter
sub
fildll
cmc
rorb
or
pop
icebp
lods
adc
pushf
add
js
sbb
add
das
xor
movsl
arpl
movsb
or
test
cld
push
call
lods
popl
int
mov
dec
mov
ficoml
mov
cmp
aad
xchg
outsl
outsb
fidivrl
ss
and
sub
xlat
in
pop
adc
test
add
mov
mov
xor
mulb
mov
adc
in
mov
into
data16
ficoms
clc
adc
fwait
mov
add
inc
gs
jp
stos
sub
mov
clc
inc
pop
shlb
pushf
pop
jbe
fbstp
mov
mov
mov
and
xchg
xorl
out
mov
sbb
jnp
sub
jg
mov
pop
jmp
xchg
inc
adc
cmp
aaa
mov
pop
xor
pop
cmpsl
mov
outsb
mov
and
cmpsb
add
mov
aaa
cld
cmc
mov
push
mov
fiadds
sub
ret
push
lods
hlt
pop
rcll
loope
mov
fwait
decb
sbb
das
in
call
loope
xchg
aam
movsb
sbb
movsl
outsb
xor
popf
ljmp
pop
xor
or
cmpsb
mov
xor
or
dec
xor
adc
push
or
lock
lcall
rcrl
subb
leave
add
or
xlat
lcall
sar
or
or
xchg
pop
or
pop
jae
out
add
loop
mov
and
sbb
jbe
fucomp
insl
cmpsl
mov
jb
mov
aad
test
loop
mov
sub
add
lret
sarb
out
mov
orl
inc
add
mov
cmp
and
xor
pop
sbb
stos
addl
popl
aas
ret
ds
mov
fcoms
add
movsl
adc
aaa
in
scas
dec
in
loop
add
jmp
mov
dec
icebp
lods
mov
test
inc
or
sbb
out
add
adc
add
js
xchg
and
pop
out
into
add
fistps
cltd
jne
xor
ljmp
ljmp
fadds
lret
inc
aad
test
inc
mov
sti
adc
cs
aaa
adcb
inc
push
adc
push
decl
adc
test
xor
and
or
xor
mov
mov
sub
pop
test
mov
cmpsl
daa
push
adc
mov
push
push
iret
nop
push
imul
fildll
adc
adc
adc
clc
push
sbb
dec
pusha
jecxz
dec
or
jne
and
es
out
fidivrl
cmp
jp
adc
mov
mov
jb
pop
inc
not
negb
and
or
ljmp
in
pop
js
push
mov
cwtl
mov
repz
cmpsl
cmp
xchg
cmp
pop
rorb
fcoms
sbb
sbb
mov
call
fists
dec
clc
sbb
sbb
mov
pop
jl
pop
fistps
pop
fcom
xor
call
add
imul
add
jl
mov
pushl
or
push
xchg
rol
push
bound
mov
mov
icebp
test
xor
cmpsl
test
dec
rcll
pop
lcall
jmp
inc
pushf
push
xchg
dec
and
mov
xchg
mov
inc
fldcw
mulps
sub
inc
rol
mov
xchg
adc
sub
or
sub
jle
mov
movb
sbb
cmp
ficompl
sbb
adc
mov
ffreep
and
dec
lret
cwtl
mov
es
andb
lcall
insb
scas
pop
mov
cld
pop
jle
lahf
inc
scas
cmp
loope
stc
das
stc
add
pop
in
inc
icebp
sub
sarl
shrl
jo
push
or
xchg
ret
push
popf
fdivl
js
pop
push
pop
mov
jp
and
aad
pop
add
ret
pop
lods
mov
and
mov
icebp
loopne
in
or
jae
pop
add
cmp
outsl
or
add
jb
mov
mov
stos
sub
xchg
loop
lea
in
or
or
xlat
das
jl
test
xchg
adc
pop
push
call
mov
mov
pop
fcompl
push
push
mov
mov
jo
loopne
pop
pop
mov
fcomps
jp
popa
stos
jp
sub
stc
xlat
inc
fnsave
xor
sub
jle
nop
fs
movsb
pop
subb
je
push
cmp
movsl
call
and
pop
popa
lret
dec
stos
xchg
lods
cwtl
push
xchg
push
or
push
xchg
test
pop
enter
dec
push
adc
push
jl
fsubrs
inc
mov
insl
stos
mov
pop
push
and
loop
sbb
icebp
in
dec
pop
inc
lret
mov
mov
aad
or
add
pop
inc
mov
mov
popa
xchg
fidivs
mov
lret
pop
sub
and
pop
jecxz
sub
mov
or
mov
cmpb
loop
inc
inc
mov
pop
pop
sub
and
add
adc
dec
shll
inc
pop
icebp
lods
and
int3
inc
mov
mov
fwait
jg
sbb
push
mov
aaa
push
loopne
fwait
nop
inc
sbb
lock
sbb
cmovle
cmp
xchg
gs
push
push
daa
adc
push
clc
fisubrl
lret
orb
mov
push
test
icebp
push
mov
icebp
lds
mov
or
inc
scas
test
stos
stos
jle
ljmp
adc
movsb
and
repnz
leave
fsts
mov
mov
lahf
stos
inc
xor
dec
push
movsb
inc
mov
sbb
sbb
xchg
jb
cmp
addb
add
adc
jae
and
std
and
jle
dec
fld
out
and
dec
decl
repz
or
test
adc
mov
js
insb
sbb
mov
insb
xchg
outsb
or
dec
popa
sbb
ja
xchg
fidivs
ret
pop
adc
stos
xchg
mov
mov
in
sub
and
jns
xchg
xchg
mov
scas
daa
icebp
cmp
sbb
mov
inc
sub
aad
movsl
jns
sbb
mov
repz
pop
mov
jp
mov
shrl
sbb
movsl
in
fists
aaa
mov
mov
jge
mov
out
rolb
or
fsts
and
je
ljmp
sbb
adc
mov
daa
sbb
and
cmp
mov
and
mov
push
mov
xchg
cmp
jae
adc
push
mov
pop
dec
imul
push
outsb
insl
mov
aas
and
es
incl
xor
or
dec
outsl
scas
call
arpl
std
and
in
cmc
pop
icebp
inc
cmp
and
dec
int
int3
jne
or
jo
and
xlat
and
fdivrl
ljmp
push
addr16
incl
outsl
cld
mov
dec
les
sbb
das
xor
xchg
and
lds
push
shrb
sub
push
jno
fadds
dec
dec
mov
xchg
inc
jg
xchg
sahf
sub
xor
lea
out
rcll
call
imul
ljmp
test
jle
scas
aam
or
ret
int
addl
inc
push
mov
imul
inc
pop
outsb
popa
adc
into
and
mov
push
mov
pop
dec
fildll
out
cwtl
hlt
add
mov
testb
jbe
movsl
lret
rorb
in
xor
mov
mov
sti
fwait
sbb
int3
add
mov
lea
and
fidivs
gs
mov
cld
loope
out
or
mov
mov
push
daa
lods
pop
in
in
bound
decl
cmp
scas
addr16
cltd
shlb
test
outsl
push
ret
adc
jg
mov
outsl
inc
pushf
repnz
lahf
lods
das
mov
jle
lods
sbbl
mov
sbb
loope
loope
fadd
mov
imul
loope
push
pop
pop
add
stc
or
push
xor
xchg
jnp
jnp
test
pop
fiadds
add
fisttps
cmc
mov
repz
in
leave
sti
xchg
and
aam
adc
aam
adc
jns
dec
lock
test
push
dec
pop
std
cmp
mov
pop
shl
push
xor
push
push
imull
lods
xchg
hlt
mov
push
push
add
gs
or
or
fs
shll
scas
jno
mov
and
loopne
xor
cmp
std
and
ja
mov
in
xchg
std
sbb
imul
dec
inc
jmp
sbb
mov
sub
sbb
jp
adc
push
out
jno
arpl
daa
sti
filds
shrl
lahf
xchg
xchg
fs
add
jmp
mov
shr
inc
sbb
std
and
movb
fs
ret
dec
cmp
insl
outsb
sbbb
mov
or
loopne
jno
divps
cmp
divb
outsl
repnz
push
add
rcr
xor
push
or
outsl
and
insb
arpl
out
jmp
dec
sbb
lret
sti
dec
ror
lock
push
shll
xchg
shl
fsubrp
sahf
xor
jg
xchg
cli
push
pop
cli
dec
int3
repz
mov
fdivp
dec
sub
pop
mov
out
add
add
inc
jle
pop
xchg
mov
or
sbb
ljmp
cld
loope
sbb
dec
inc
push
mov
xchg
sbb
dec
aad
add
cwtl
ja
adc
mov
fsubl
gs
push
daa
adc
dec
inc
shll
test
jle
enter
xchg
adc
jl
icebp
inc
testb
clc
mov
mov
jl
cltd
xchg
or
fwait
mov
xchg
jle
sbb
jo
outsl
mov
jle
js
mov
cmp
loope
cli
mov
jmp
dec
mov
xchg
sub
loop
mov
push
inc
and
mov
testl
inc
addr16
mov
iret
stos
xor
xchg
clc
arpl
std
xor
stos
and
pop
mov
call
rcrl
push
sbb
push
and
outsb
pusha
xor
test
add
push
push
roll
pop
loope
js
jmp
cld
bound
mov
xchg
outsl
push
stos
pop
orl
lds
jo
fs
in
sarb
jg
aam
inc
pop
movsb
daa
addl
xchg
xchg
mov
mov
sbb
sbb
adc
popf
daa
adc
int
clc
jae
jno
add
out
jns
dec
std
pop
cmp
fists
sub
mov
lock
movsb
mov
gs
int3
cs
push
mov
mov
or
sbb
push
or
shr
lret
pop
rcl
mov
subl
rcll
mov
ja
divl
lock
mov
in
mov
pop
pop
ljmp
and
stos
adc
ljmp
inc
add
lock
rcrl
into
mov
dec
xchg
adc
ja
bound
mov
xor
aad
icebp
fwait
rcl
std
test
es
push
jle
aam
ret
cmc
sbb
mov
in
sub
inc
sbb
ds
inc
pop
sbbb
pushf
cld
pop
lahf
fisubrs
flds
cltd
rcl
scas
rclb
mov
shlb
sub
sub
nop
mov
or
iret
lret
cs
rclb
enter
ret
or
icebp
int
mov
rol
sbbl
pop
cmp
test
out
push
or
sub
jl
push
sub
cmp
std
cmp
aad
test
outsl
jmp
or
les
sbb
jp
pushf
sbb
pop
gs
test
stos
cmp
aad
inc
es
push
inc
sbb
add
dec
mov
cmpsl
sub
mov
sub
dec
dec
mov
add
push
mov
dec
jnp
outsl
dec
jl
adc
sub
js
and
aad
cld
repz
pusha
sub
loope
mov
lcall
or
ja
xor
adc
lea
mov
in
dec
xor
fcmovnb
or
cmpsb
adc
shl
sbb
shrl
fcmovnbe
cmp
sbb
jno
xchg
mov
icebp
cli
test
jg
mov
clc
mov
rolb
or
ss
or
cpuid
sbb
fsubs
cld
mov
mov
sti
mov
adc
push
out
ret
dec
and
mov
mov
cmpb
into
mov
testl
mov
std
test
xchg
adc
lds
mulb
inc
add
push
xor
mov
jmp
sbb
sahf
das
mov
or
icebp
and
xchg
cld
ffreep
mov
std
xor
outsb
dec
outsl
or
ret
add
mov
cmpsl
mov
ja
test
jle
pop
test
push
subl
shlb
addl
aam
dec
inc
mov
imul
imul
xor
and
add
and
fildl
in
int
jmp
or
loope
push
sbb
arpl
lods
mov
dec
pusha
adc
xchg
xchg
or
mov
shrl
add
repz
sub
push
fildl
fldt
insb
sub
pop
and
std
mov
sarl
subb
subb
xchg
jo
pop
mov
movsl
sbb
in
das
mov
mov
pop
test
jmp
mov
pop
mov
adc
ficoml
je
das
or
jnp
push
push
xchg
inc
and
jmp
mov
inc
jmp
jb
mov
shlb
sbb
pop
popf
bound
mov
adc
aaa
dec
mov
dec
ja
cmpsb
sub
fcoms
ss
fbstp
mov
test
pop
out
push
push
pop
dec
repnz
stos
orl
popf
loope
xor
aad
or
fdivrs
mov
ret
jnp
adc
xchg
push
popl
icebp
rorl
in
inc
sub
sahf
jbe
or
cli
mov
std
push
mov
arpl
adc
insb
sahf
aad
je
hlt
outsl
add
ret
mov
data16
out
pop
clc
cli
int
push
pop
jb
adc
loop
ljmp
enter
stos
je
mov
decl
inc
sbb
sbb
icebp
out
push
loop
mov
add
cli
in
dec
dec
mov
inc
es
iret
sbb
enter
cmp
in
pop
test
cmc
mov
pop
mov
adc
shlb
and
push
enter
js
arpl
lock
add
mov
or
mov
and
dec
aaa
hlt
outsl
push
sbb
pop
adc
ss
add
clc
ret
and
mov
mov
daa
ret
jo
sbb
nop
imul
outsl
insl
mov
and
std
pop
mov
or
mov
lea
insl
inc
lock
cmpsl
jecxz
fists
call
nop
mov
mov
scas
and
daa
sbb
mov
aas
xor
sahf
adc
call
mov
in
xor
xchg
cli
test
lods
pop
cmp
icebp
mov
fcmovnbe
out
or
fwait
add
clc
rol
sbb
mov
imul
aam
sub
adc
not
lahf
sbb
dec
push
outsl
out
mov
inc
xchg
arpl
aam
jmp
jecxz
mov
jno
mov
mov
mov
jns
mov
popa
repnz
push
pop
shlb
push
push
jl
mov
addr16
movsl
add
fisttps
jo
icebp
xchg
cwtl
mov
test
push
inc
jne
push
or
jle
push
jp
ss
lret
aad
icebp
arpl
cmp
pop
les
aad
fmuls
cmpsl
scas
xor
imulb
cmp
lcall
sub
push
fdivrs
jmp
xor
test
pushf
pop
insb
cmp
adcb
adc
add
adcb
or
in
or
pushw
mov
add
xchg
inc
cld
adc
xchg
or
shr
btr
mov
adc
mov
sbb
inc
cwtl
arpl
or
xlat
mov
scas
or
repnz
add
clc
add
stos
or
dec
data16
data16
out
mov
imulb
out
test
dec
xchg
inc
ss
ss
push
push
mov
mul
lods
xor
imul
xor
add
add
cli
push
mov
mov
scas
adc
push
subl
push
cwtl
movsb
jmp
clc
mov
jg
adc
dec
addl
shll
inc
fldl
scas
out
adc
and
xor
scas
movl
shll
mov
mov
add
add
mov
sub
mov
mov
fdivrp
das
into
push
jb
or
fisubrl
add
sub
xor
loop
sub
jle
push
call
jmp
jnp
int
add
fcompl
cmp
cld
add
test
icebp
cmp
bound
or
dec
jp
cmp
es
fidivrs
push
add
sub
cmpsl
pusha
sti
xor
in
loope
adc
icebp
mov
sbb
push
xchg
sub
mov
push
ret
in
pusha
jg
outsl
xchg
pop
aas
sbb
sub
not
daa
lods
icebp
xor
shrb
dec
daa
add
sahf
sbb
push
outsl
mov
notb
xor
mov
insl
push
jno
or
jge
cwtl
xlat
sub
cmp
imul
dec
icebp
push
xchg
jp
cs
stos
iret
mov
rcrl
push
or
std
mov
xchg
stc
fstps
minps
mov
out
mov
and
test
jb
sbb
fs
xchg
push
popf
jle
cmp
fs
out
out
mov
mov
cmc
insl
mov
adc
fwait
jno
jbe
mov
aaa
dec
inc
mov
add
test
push
popf
imul
inc
movsb
shrb
adc
mov
lea
sub
jmp
pop
mov
icebp
or
push
pop
mov
dec
inc
xor
rorb
adc
jo
ja
pop
lea
push
cmpsb
cltd
mov
imul
jb
and
sub
nop
cmp
pushf
push
cs
test
pop
add
mov
inc
das
pop
lods
repnz
inc
movsb
pop
cmpb
mov
xchg
inc
xor
pop
adc
mov
inc
js
push
xor
mov
and
adc
push
shl
dec
add
push
daa
ret
push
test
movsl
sti
dec
or
insl
int3
fbld
mov
std
pop
fdivrs
add
int
xor
lock
mov
pop
fiaddl
xor
xlat
fdivl
sub
das
das
clc
loope
call
sbb
movsb
test
sbb
inc
sbb
jecxz
add
inc
fildll
jmp
mov
adc
stos
aad
mov
cli
subb
or
xchg
mov
call
mov
jb
xor
in
pop
aad
pop
pop
enter
jl
and
mov
fdivs
jle
xchg
add
adc
adc
push
or
imul
sbb
mov
push
cs
sub
fmuls
in
rcrb
add
sbb
jl
mov
pop
sbb
jmp
push
shlb
jnp
cmp
dec
scas
mov
mov
loopne
hlt
jae
xlat
sti
int3
or
fisubrl
stos
jns
push
fdivs
ret
adc
mov
shl
cmp
lahf
mov
jmp
mov
sbb
adc
cli
insl
lret
pop
pop
fcomp
push
aas
dec
cli
movsl
and
xor
xor
testb
idivb
clc
jl
enter
inc
aam
add
xor
or
cmp
push
lds
in
in
in
mov
cmp
test
fwait
loope
das
dec
mov
movsb
xor
inc
imul
xchg
int
sbb
nop
cmp
add
mov
outsl
push
cmp
in
pop
lock
ljmp
ljmp
aaa
rol
pushf
cmc
out
dec
aaa
inc
in
xor
das
insl
mov
adc
out
mov
inc
cmpl
push
pushf
dec
sub
push
inc
mov
in
xor
sub
and
stos
bound
shrl
sub
call
in
mov
icebp
sbb
adc
add
jg
ret
push
jne
sti
lock
or
inc
add
test
jns
and
dec
mov
imul
icebp
dec
stos
lahf
mov
xchg
push
iret
pusha
loope
dec
mov
mov
jnp
adc
scas
add
jl
mov
call
test
xchg
jo
inc
add
test
jp
cli
lods
call
lcall
jecxz
cli
and
lcallw
add
jg
std
jl
xor
enter
jb
incb
lods
mov
and
js
and
jecxz
clc
aaa
into
cltd
jmp
jl
rclb
xchg
push
push
outsw
or
mov
mov
cmp
in
pop
out
mov
jecxz
sbb
pop
subl
loope
aas
cmpsb
jecxz
jmp
or
mov
jge
pop
pushf
icebp
sub
testb
mov
test
clc
and
sbb
outsl
dec
sbb
jo
jg
and
xchg
ret
xorb
inc
in
mov
or
out
loopne
jb
test
mov
arpl
aas
sub
push
dec
call
add
outsl
out
jo
out
xchg
aam
das
xor
sti
cmp
shrd
shll
fdivr
jne
jge
dec
jb
ret
bound
inc
xor
cmp
call
insl
mov
sar
jae
bound
into
xor
cmpl
filds
lcall
sbb
sahf
or
sbb
jl
add
rcll
out
scas
into
stos
mov
xlat
pop
pop
xchg
imul
pop
pop
add
fisubl
or
mov
in
xchg
inc
frstor
es
divb
out
inc
jmp
mov
add
cmpsl
cmp
sarb
push
ss
push
test
nop
js
je
mov
sarb
mov
or
cmpsb
daa
out
adc
inc
cli
sbb
insb
std
subl
and
pushl
lds
push
mov
sahf
mov
and
aam
cltd
jne
aam
pop
testb
xor
push
jmp
mov
stos
and
test
or
sahf
es
pop
rolb
inc
roll
dec
sbb
cld
sbb
sbb
xor
enter
xchg
adc
fistps
insb
imull
leave
icebp
popf
cmp
fdivrp
push
scas
or
aas
sbb
cmovo
cmpsb
mov
push
push
and
ds
mov
sbb
imul
int
inc
mov
inc
jle
shl
lock
loop
jmp
imul
xor
mov
adc
ss
inc
lock
movsl
xlat
mov
pop
out
dec
lret
iret
or
lea
mov
jbe
sub
push
adc
push
sbb
xor
push
adc
loopne
jbe
test
imul
add
test
pop
jp
jg
mov
sbb
jl
cmp
sbb
add
outsl
pop
mov
push
pusha
adc
inc
and
jg
test
dec
push
sbb
cmp
aaa
lcall
xor
mov
jle
or
fimull
popf
loope
lock
stos
inc
std
inc
lcall
cld
xchg
jle
pusha
fiaddl
repz
adc
and
adc
dec
and
dec
mov
test
mov
fwait
inc
nop
mov
mov
pop
and
aas
fdivrs
out
cli
mov
pusha
pop
push
mov
mov
mov
call
lahf
push
mov
jno
jne
mov
pop
ljmp
inc
repz
xor
mov
aaa
fisubl
inc
test
cmp
out
call
cmpsl
enter
mov
decl
enter
mov
rcl
jle
pop
cld
adc
jp
adc
jg
stos
std
and
and
xor
adc
push
shll
mov
das
xchg
aas
ds
pop
loop
ret
dec
pop
test
arpl
hlt
aaa
mov
jg
arpl
jns
sbb
loope
xor
aas
adc
add
cmp
pop
mov
jnp
add
push
cmc
in
lock
inc
cmc
incl
pop
arpl
dec
hlt
lds
mov
fcomip
xchg
rclb
movsb
hlt
pop
pop
add
loop
sub
sub
inc
add
sarl
das
cmp
jg
outsl
push
loope
xchg
sbb
sbb
xchg
and
popa
test
ret
adc
jno
out
or
es
loopne
sbb
inc
in
mov
testl
mov
push
stc
out
das
insb
mov
ljmp
jnp
fbld
mov
adc
xchg
push
jecxz
mov
stos
mov
fsubrl
mov
insb
sbb
cmc
cmp
xor
aaa
and
add
xchg
test
mov
lcall
inc
push
cmp
out
icebp
aaa
mov
cmp
push
rcll
cmp
pop
fisubl
shl
xor
daa
push
pop
mov
xchg
cld
outsl
pop
push
test
fistl
ja
inc
or
mov
sub
dec
scas
or
jbe
decl
mov
add
push
aas
cmp
dec
ds
sbb
xlat
aam
test
fbstp
push
outsb
jp
idivb
popf
push
ljmp
movsb
and
mov
or
mov
dec
inc
sub
inc
push
adc
loopne
pusha
pop
movsb
lret
into
jae
xorb
mov
ret
decl
pusha
pop
fdivrs
adc
aaa
ljmp
fimuls
ja
lret
xchg
inc
mov
nop
clc
pop
mov
out
xor
test
jg
push
ljmp
xchg
bound
hlt
insl
mov
icebp
pop
hlt
lods
fildl
das
sub
test
pop
push
and
cmp
in
test
imul
sub
push
push
mov
stc
adc
inc
test
adc
mov
add
mov
shl
hlt
pusha
push
push
daa
xor
aas
sbbb
push
aaa
pop
mov
pushf
cmpl
ds
dec
test
scas
enter
push
dec
cmp
lods
cmp
pop
jbe
nop
loope
stos
push
mov
pop
lret
cmp
pushw
loop
std
in
frstor
aad
pop
pusha
xor
adc
push
mov
inc
or
push
pop
das
sub
test
fucomip
fs
jmp
clc
jbe
add
xchg
jbe
inc
imul
xchg
cmp
mov
dec
push
add
test
add
scas
inc
push
inc
mov
adcl
scas
cmp
add
pop
push
jge
mov
mov
or
fwait
ss
inc
lock
mov
adc
ljmp
std
dec
movsb
lods
enter
outsl
add
rolb
pop
sti
loopne
lahf
popa
pushl
push
lret
cli
xor
mov
mov
and
mov
shrl
adc
jmp
push
mov
jne
in
lds
sub
orb
ret
loope
add
fists
aaa
insb
jg
je
mov
fsubrl
stos
sahf
inc
push
call
inc
sub
xor
xlat
call
incl
mov
repnz
test
add
cmp
jge
in
je
out
jno
sbbb
imul
jecxz
xchg
inc
xor
popf
shll
call
test
aad
push
mov
pop
jbe
dec
in
xchg
cs
int3
sub
adc
inc
mov
icebp
inc
dec
dec
fwait
cmp
ffreep
pop
leave
add
xchg
inc
dec
sbb
pop
rcll
in
xchg
loopne
in
sbb
leave
sub
xor
into
jne
xlat
jbe
in
sub
sub
lcall
js
xchg
or
xchg
add
std
scas
jge
test
mov
add
int
mulb
test
and
getsec
ret
fiaddl
imul
add
dec
inc
scas
sub
pushf
shrb
adc
popa
xlat
sbbb
test
mov
js
or
aad
repz
mov
aam
popf
jae
jmp
fdivl
hlt
scas
jb
add
sbb
pop
pop
and
cs
xor
ljmp
aaa
adc
adc
std
push
sub
pushf
cmc
inc
roll
pop
or
push
iret
jbe
jp
incl
dec
xor
ja
jmp
pushl
outsl
leave
mov
pop
jo
sbb
adc
aas
mov
iret
adc
sar
dec
sti
jge
pop
mov
cmp
push
inc
sub
inc
es
out
add
not
ficoml
cmc
jge
cmpsl
cmp
mov
xor
cmp
xchg
test
shll
or
jo
jg
int3
cwtl
or
or
sbb
outsb
cmp
sbb
sbb
pusha
mov
mov
sbb
pop
shl
mov
jnp
add
inc
xor
push
ds
adc
xchg
ja
cmpsl
dec
test
or
mov
jmp
pop
and
or
mov
push
mov
adc
dec
and
inc
insl
xchg
pop
rolb
and
push
push
jg
stos
inc
push
fimull
lds
xor
xor
ljmp
dec
push
enter
rol
mov
divb
mov
pop
stos
pop
repz
adc
outsl
psraw
adc
jp
jge
hlt
cmp
cmpl
push
std
mov
add
xchg
cmp
pop
add
pop
icebp
movsb
push
lcall
fdivrl
mov
xchg
and
cmpxchg
xchg
daa
dec
mov
push
shlb
jl
fistpl
adc
and
scas
pushf
inc
adc
or
cs
adc
rorb
mov
fsubr
adc
icebp
or
inc
push
mov
mov
sub
lahf
popf
movsl
loop
cmp
hlt
mov
js
jo
jge
xor
adc
movsb
jl
and
adc
mov
jns
xor
and
movhps
insl
inc
les
neg
dec
repz
jnp
jmp
stos
lods
scas
mov
cmc
push
cld
inc
aam
mov
sub
test
xchg
sbb
lret
dec
outsl
mov
fisubrl
sbb
shll
ficompl
cmp
or
mov
lods
pop
orl
sub
cmpsb
and
inc
outsl
enter
je
mov
or
fsubrl
cmp
fistl
mov
int3
push
push
push
lods
and
mov
pop
sub
add
adc
dec
mov
ds
xchg
mov
pop
mov
in
mov
cli
fldt
mov
vmovups
cmp
lahf
xor
inc
or
jg
pushf
cmp
pop
add
out
adc
add
jbe
cli
mov
mov
lods
adc
or
and
mov
rcll
mov
imul
cmp
sarl
inc
inc
cli
stc
fprem
call
mov
xchg
push
loopne
call
out
sbb
or
dec
mov
xchg
inc
ret
sahf
fisubl
test
dec
loop
dec
ret
pop
jg
loop
pop
psubusw
into
in
daa
cmp
loopne
or
mov
test
xchg
jle
jge
test
cmp
or
sub
mov
movsl
and
or
and
mov
adc
push
cmp
mov
and
pop
cltd
lcall
push
fmuls
in
jmp
pop
arpl
push
and
push
inc
out
cmc
aaa
test
test
inc
or
lods
jle
loope
jg
xlat
jle
sbb
xor
sub
test
lods
sbb
jmp
push
mov
movsl
push
shrl
and
outsl
cmp
jo
mov
enter
add
push
js
push
divl
nop
test
mov
adc
cmp
xor
push
test
and
cld
out
sub
addr16
adc
call
xchg
in
fildl
push
xor
cmp
add
ljmp
arpl
sbb
les
jo
adc
int
jo
popa
xchg
stos
stc
mov
incb
jecxz
movsl
fisubrl
loopne
decl
sbb
cmc
insb
push
test
pushf
cmp
inc
fldl
and
rol
pushl
adc
imul
stos
jnp
and
stos
fidivrl
lds
push
outsl
sub
sbb
push
jo
sbb
aam
enter
mov
xchg
repz
sub
out
cs
inc
sbb
cmp
shl
mov
movsw
call
mov
and
push
sbb
and
jnp
call
adc
jae
dec
shlb
cs
jae
ljmp
and
jle
and
mov
mov
xchg
data16
dec
adc
aas
cs
orl
inc
sub
ret
sbb
gs
in
call
inc
inc
sub
sbb
sbb
mov
inc
inc
sub
insl
stos
sub
aad
xchg
cmc
arpl
pop
sub
xor
sub
mov
fwait
add
es
cmpsl
lahf
mov
push
mov
sbb
or
cmp
das
sarb
jo
shrb
push
xchg
mov
hlt
mov
adc
mov
scas
fiadds
aas
mov
lea
ljmp
loopw
xlat
push
push
je
imul
cmpsl
and
fcomip
jmp
pushf
or
jecxz
loop
jge
outsl
mov
cmp
or
mov
pop
loopne
out
pop
ret
sahf
sti
push
push
inc
push
inc
jmp
loope
mov
jo
cmp
dec
fbld
outsl
pop
push
roll
and
push
aad
test
adc
stos
xlat
mov
mov
pop
cmp
xor
push
and
cmp
ja
sysret
mov
ret
ret
mov
out
cmc
and
cmp
int3
cmpsb
jl
mov
mov
xor
ja
dec
fisttpl
add
cwtl
loopne
jbe
push
mov
jge
rcrl
es
fstpt
call
nop
int3
lret
or
insl
pop
test
call
cmp
inc
add
add
mov
cli
hlt
push
pshufw
push
mov
dec
add
xor
sbb
cmp
push
xor
test
dec
mov
pop
jge
inc
in
sub
out
xor
dec
push
ffreep
dec
add
pop
fidivrs
lods
mov
sub
push
sahf
push
pushl
sbb
xchg
js
mov
pusha
adc
ret
aas
mov
pop
dec
dec
arpl
push
and
pop
cmp
call
fisubl
das
adc
mov
sub
jl
data16
mov
jl
add
push
rcl
aam
insb
in
push
or
xchg
scas
rcrb
addr16
inc
sub
das
loop
loop
cmp
jmp
movsl
mov
movsl
add
mov
cmc
mov
push
je
sbb
or
cld
je
fldl
mov
cld
inc
mov
loop
dec
loop
mov
xchg
stos
divl
sbb
ja
mov
mov
cmp
jl
xor
mov
inc
cmpsl
mov
aam
mov
sub
adc
shr
inc
incl
push
sbb
cmpsl
adc
ds
add
sub
jge
add
hlt
ds
jge
cwtl
rcll
adc
adc
and
sbb
dec
mov
repz
sbb
xchg
dec
add
adc
std
in
cmp
out
stc
push
icebp
outsl
inc
shlb
mov
aaa
scas
popa
pop
loope
pop
mov
and
test
js
inc
add
cs
dec
mov
xor
add
subb
sbb
cwtl
pushf
inc
imul
call
imul
xor
inc
mov
aas
cmp
push
leave
mov
movsb
mov
outsl
adc
outsl
outsl
cmp
inc
lcall
sub
push
dec
sub
sub
sbb
inc
inc
mov
sbbb
loopne
inc
rcrb
fistl
cwtl
dec
mov
or
xor
cwtl
out
mov
inc
mov
movsb
je
aaa
inc
cltd
inc
push
xchg
popa
fistl
movsb
outsb
cli
icebp
xlat
mov
mov
push
addl
cmpsb
push
jmp
cmp
mov
bound
cli
push
bound
vphaddubw
rorl
test
lods
mov
movsb
and
dec
push
or
ss
dec
test
fistpll
lret
dec
xor
test
mov
insl
popa
jg
or
shlb
mov
out
inc
push
jmp
sbb
adc
and
and
adc
or
mov
sub
push
test
xor
lock
push
fsubrl
adc
aad
mov
jl
fistl
icebp
or
mov
repz
add
inc
test
lret
insb
xchg
adc
mov
xor
icebp
inc
xorb
dec
icebp
call
lock
gs
inc
aam
and
fwait
or
jbe
adc
aad
test
cli
pop
xorb
pop
insl
enter
sbb
loop
sar
rcll
daa
enter
pusha
insb
hlt
aam
aaa
lcall
movsb
sub
cmpsb
insl
sti
test
xor
out
sbb
jg
jns
sub
jl
mov
rclb
out
xchg
mov
es
mov
push
add
das
mov
test
cmp
mov
xorl
cmpsl
pop
loop
mov
adc
shll
mov
jmp
pop
insl
nop
dec
stos
sbb
and
push
mov
xchg
mov
or
roll
sub
lahf
mov
mov
pushl
mov
cmp
pop
add
pop
add
add
icebp
cmpsb
xor
adc
aaa
insl
shll
out
adc
nop
out
mov
scas
mov
add
movsl
mov
mov
adc
nop
sub
clc
or
icebp
push
mov
in
inc
pop
in
xchg
incb
pop
ljmp
jo
push
add
sub
jp
and
cmc
lret
xor
xchg
orl
das
mov
and
mov
sbb
xchg
shrb
jg
lods
jle
test
lret
mov
rclb
mov
pop
fadds
les
or
add
jecxz
sbb
movl
adc
adc
fsubrl
and
incl
out
std
add
int3
and
pop
in
jp
jne
out
cmc
sbb
mov
jmp
dec
stos
lods
mov
dec
push
popa
mov
mov
mul
push
aas
repnz
icebp
pop
push
mov
adc
mov
jno
push
out
xorl
jmp
js
icebp
dec
jns
into
sub
push
pusha
mov
notl
lods
mov
scas
in
push
mov
or
aam
sub
sub
ja
mov
loopnew
rcll
cld
or
xchg
push
xchg
popa
mov
dec
and
inc
push
push
xchg
pop
scas
sarl
iret
sub
in
lahf
or
rcr
ljmp
and
int
mov
ss
and
xor
insl
xchg
push
jle
lret
icebp
mov
dec
inc
inc
fisttps
sub
aam
pop
jno
mov
mov
aaa
pop
in
push
add
fnsave
dec
inc
outsl
fsubl
pop
pop
out
test
sbb
in
mov
adc
incl
xchg
incl
xor
std
fidivrl
adc
push
loop
cli
orl
mov
add
aaa
jae
and
jle
clc
adc
adc
stos
mov
cmp
pop
movsb
into
in
outsl
mov
or
subb
jg
repnz
les
je
iret
mov
adc
push
mov
xor
mov
sti
xor
daa
popf
add
aaa
mov
js
mov
sub
fnstenv
dec
mov
mov
mov
mov
xor
test
pop
cld
cmpsb
js
cmp
add
xor
jg
pop
mov
in
aas
sub
mov
add
in
push
mov
cmovo
xchg
ja
cwtl
xor
mov
push
mov
push
xchg
push
ja
jle
mov
mov
xchg
icebp
int3
outsl
sarb
es
in
jno
add
stos
sbb
loopne
jl
loop
lea
ss
jmp
jne
inc
xchg
jmp
mov
pop
add
mov
outsb
cmp
push
sub
ret
icebp
jle
insl
pop
ficomps
xor
call
mov
xorl
dec
rclb
cmp
xchg
inc
mov
pop
sbbb
mov
dec
leave
xor
test
ret
cmp
addl
jmp
or
loope
add
mov
sub
add
sub
jne
es
loope
rcr
or
push
movsl
xadd
addb
lock
pop
scas
mov
dec
stos
or
ljmp
sbb
mov
pop
and
push
stos
test
xchg
jge
and
pop
mov
pop
test
repnz
std
pop
mov
push
mov
aaa
jmp
in
push
daa
mov
or
inc
fcomi
jo
mov
inc
daa
xchg
addl
sbb
xor
jnp
push
loop,pn
clc
outsl
mov
popl
cld
adc
test
mov
out
add
jbe
xchg
lcall
xor
jge
cmc
mov
data16
les
jbe
mov
sbb
sbb
cmpl
or
shrl
pop
ja
sub
push
xchg
pop
or
pop
in
dec
stos
mov
idiv
xchg
push
xchg
mov
cmpsb
adc
loope
lahf
mov
fs
enter
adc
sti
xlat
aam
call
js
cmovp
ret
push
pop
mov
ss
sbb
jl
scas
sub
inc
xchg
dec
daa
adc
aas
pop
in
incl
fbld
ret
sbb
mov
add
loope
jns
jg
mov
mov
mov
dec
iret
sti
cmp
loope
xor
std
ds
xchg
or
push
mov
icebp
adc
dec
mov
icebp
sbb
loopne
mov
lods
aad
sbb
pop
popa
mov
sti
pusha
popa
clc
jmp
andb
jns
sub
mov
popl
mov
fisttpll
adc
mov
inc
fistpl
clc
pop
les
out
or
sti
clc
mov
imul
sahf
fists
xor
push
ret
std
std
push
pop
mov
push
push
push
ret
adc
test
inc
or
dec
push
inc
ljmp
sbb
dec
pop
lds
mov
mov
sarb
int
mov
ljmp
and
inc
loop
mov
xchg
xchg
mov
fldcw
pop
inc
repz
and
mov
xorl
loope
lcall
stos
sub
addr16
dec
pop
pop
mov
test
fcmovne
inc
push
fcoml
in
sub
data16
xlat
fcmovnb
dec
mov
lret
popf
add
or
inc
xlat
std
xchg
jle
add
std
mov
inc
loope
dec
lcall
clc
idivl
mov
push
sub
add
cmp
cld
movsl
das
mov
in
nop
enter
mov
push
sbb
aad
lcall
xor
inc
dec
lods
cld
in
mov
out
xchg
push
cmc
sub
mov
sbb
pop
adc
inc
mov
inc
sub
mov
ror
jmp
pusha
or
push
inc
insl
lods
jp
mov
aaa
mov
arpl
and
or
loope
adc
adc
push
or
decb
pop
sbb
fldl
stos
xlat
push
out
lock
roll
cld
outsl
loopne
aad
sbb
and
jne
mov
jb
cmpsb
in
sbb
xor
outsl
sbbb
adcb
jae
and
jg
jmp
push
flds
stos
loopne
mov
in
add
fcom
mov
dec
mov
jle
jmp
movsl
mov
rcr
jno
xchg
dec
divb
sbb
cmp
dec
or
cmp
call
rclb
mov
ret
jmp
cwtl
loopne
or
sub
loope
daa
push
mov
cld
std
or
dec
push
mov
rorb
and
pop
mov
jmp
mov
fmull
popa
mov
sarl
cwtl
lret
jmp
push
divl
and
fildl
mov
sub
inc
adc
sbb
push
movsl
outsb
ret
mov
les
push
xchg
and
popf
push
stos
ljmp
jecxz
lcall
addr16
pop
adc
movb
popf
insl
sbb
ss
xchg
sbb
jp
cld
sbb
mov
adc
inc
add
adc
xor
push
in
sbb
fbstp
xchg
call
jl
dec
xor
add
jo
cwtl
adc
nop
sarl
pop
push
pushf
bound
fisttpl
std
sbb
sub
jnp
or
dec
in
jmp
or
add
sbb
or
sub
pop
cwtl
gs
es
insb
dec
insl
mov
mov
mov
cs
jg
push
inc
dec
shlb
add
sbb
add
and
test
pushf
movsl
xor
out
int
aas
inc
lret
add
sbb
fildl
push
sbb
loop
sub
jns
int3
inc
lds
jg
daa
ds
jge
cmp
fidivs
shlb
push
sbb
add
ss
sub
cmp
fnstsw
mov
mov
fwait
inc
sbb
insb
ss
in
inc
rolb
pop
outsl
jl
adc
push
cmp
sarb
push
cld
scas
mov
idivl
sti
sbb
push
lret
add
push
mov
scas
adc
cli
jb
and
push
pushf
push
sub
adc
push
fs
call
daa
pop
dec
notl
mov
movl
mov
sub
mov
rcr
cmp
mov
shrb
mov
insb
xchg
pushl
dec
mov
or
sarl
std
mov
sub
or
inc
dec
iret
inc
in
jns
je
rcll
push
ja
ljmp
lock
add
add
imul
xchg
lahf
xor
cmp
inc
popf
imul
jmp
or
int3
test
testl
or
adc
pop
stos
nop
ljmp
cmp
push
mov
inc
adc
dec
or
or
cli
mov
stos
xor
repnz
movsb
fucomp
outsl
decl
mov
sbb
mov
fiadds
cmp
jb
jns,pt
int3
jno
sub
sbbl
and
es
les
jle
xor
sbb
data16
xchg
and
inc
in
dec
out
hlt
add
out
dec
bndstx
mov
pop
pop
sbb
cwtl
or
inc
sub
lea
icebp
mov
jle
call
insl
in
xor
aam
cmp
ficoml
mov
cld
testb
fdivl
aaa
xchg
insb
lcall
pop
sub
je
mov
jno
jp
in
out
clc
add
mov
adc
sub
adc
shll
outsb
sub
cmp
dec
insl
jge
js
xor
test
add
xchg
or
inc
stos
sbb
sub
ja
lcall
xor
mov
mov
mov
cli
outsb
aam
inc
mov
int
jmp
aaa
mov
clc
or
int
jmp
fs
incl
jecxz
mov
xor
mov
inc
insb
adc
push
sbb
rcll
sub
xor
popa
push
pop
cmp
arpl
aaa
xchg
jp
loopne
adc
push
xchg
jb
pop
cmp
clc
xchg
mov
jecxz
movsb
push
loopne
mov
daa
pushf
sub
ljmp
adc
xchg
mov
pop
lods
push
add
andnps
icebp
pop
in
jno
leave
xor
cmp
adc
ja
clc
xchg
pop
fisttpl
sub
sbb
lock
ja
jp
or
fdivs
shrb
mov
test
adc
xor
and
inc
and
jns
les
std
mov
mov
adc
lods
and
and
pop
push
dec
push
mov
or
pop
in
jmp
and
lahf
test
adc
mov
push
aas
sub
hlt
in
jns
jp
cwtl
jbe
cmp
in
outsl
xchg
mov
mov
inc
mov
add
ss
gs
cmp
sbbb
push
lock
jae
test
insb
or
sbb
test
xlat
movsl
incb
mov
push
in
inc
movsl
push
insb
jae
jge
decl
out
aas
jmp
xor
test
cld
sbb
push
pop
fstl
and
test
xchg
call
pushf
push
neg
andb
xor
inc
jo
test
and
pop
adc
aam
add
test
xchg
loopne
les
mov
or
adcl
lahf
push
mov
add
outsb
cmc
jg
cmpsb
cmp
cltd
adc
lcall
rolb
addl
jmp
das
inc
and
xchg
push
push
adc
mov
pop
xchg
xor
iret
rcl
jno
icebp
push
or
hlt
sbb
sbb
mov
mov
lods
mov
inc
cld
sbb
mov
and
jo
scas
add
mov
adc
addl
out
in
push
sarl
push
xor
mov
and
call
push
jecxz
imul
pop
xor
nop
test
loop
jp
xor
mov
fdivp
pop
out
dec
mov
je
outsl
pop
pop
iret
insb
addl
lahf
xlat
cmp
inc
add
sub
outsl
push
and
add
or
sar
mov
mov
iret
lods
sub
sub
lea
and
xchg
dec
incb
imul
sub
aas
and
nop
repz
sbb
outsl
inc
popf
xlat
hlt
pop
and
or
inc
or
push
std
cmp
ds
sub
and
push
movlps
fwait
push
hlt
or
jns
in
and
insb
pop
dec
cltd
pop
or
jmp
mov
sub
mov
gs
dec
je
sbb
sbb
iret
shrb
or
hlt
and
insb
sbb
jno
mov
test
das
addr16
cli
or
cld
fwait
lock
jge
insl
ret
test
mov
xor
mov
adc
pop
ds
shlb
out
cmp
mov
sbb
loop
in
and
outsl
xchg
cld
repnz
mov
cmpb
call
xor
scas
sar
xor
and
jo
sub
out
jo
mov
aaa
mov
cwtl
mov
push
xlat
adc
stos
js
mov
repz
jb
jp
mov
mov
test
adc
test
shl
aad
int3
or
mov
stc
adc
push
cld
mov
mov
ror
fcomps
or
arpl
mov
push
in
jg
mov
test
sbb
or
adc
shrl
shr
lods
sbb
mov
lret
pop
jmp
orl
or
xchg
or
imul
mov
dec
inc
arpl
out
incl
jo
stos
bound
mov
inc
fnstsw
push
sbb
mov
dec
pop
sahf
movsl
movl
fwait
push
xchg
shl
add
loopne
or
mov
dec
sub
sub
sbb
mov
test
insl
or
pinsrw
xor
cmpsl
cmp
scas
stos
xor
insl
mov
lahf
dec
pop
cs
cs
dec
test
mov
mov
cmp
sti
inc
inc
das
dec
and
sahf
mov
sub
or
jp
negb
mov
xor
stos
scas
outsb
mov
outsl
sub
outsb
loopne
pop
stc
dec
dec
inc
std
test
hlt
pop
lret
sub
pop
pusha
inc
pop
push
adc
ss
add
push
cmp
sti
aas
fwait
mov
test
enter
and
adc
mov
xor
das
dec
pop
mov
jns
sub
or
insb
cmp
cmp
mov
pop
cmp
pusha
and
push
jb
mov
mov
lds
fidivs
aaa
insb
jp
shl
imul
js
addb
pusha
imul
xor
xchg
aam
add
push
jl
xor
outsb
std
and
js
and
push
dec
and
pop
mov
stos
sub
test
icebp
add
adc
lods
jmp
cmc
push
pop
and
mov
mov
mov
aad
lret
into
xchg
fcoml
cmc
push
dec
int3
dec
cmp
xor
sbb
fdivrp
frstor
pop
in
loop
gs
dec
and
aad
push
dec
shll
cmp
rol
and
mov
pop
xor
pop
mov
daa
mov
lods
mov
add
bound
sbb
mov
push
js
inc
sub
ljmp
mov
cmp
lods
stos
cmp
jo
nop
das
xchg
test
cmc
lods
mov
inc
popf
xchg
das
test
cmc
stc
movsb
jno
dec
divb
nop
xorb
jbe
cmpsl
xor
inc
sbb
test
scas
push
cld
aaa
jbe
push
push
jae
cltd
pop
adc
and
push
ffreep
and
data16
mov
sbb
lds
es
cmp
jmp
ret
loope
cwtl
mov
and
mov
cld
mov
sarb
pop
jbe
xor
sub
inc
stos
xchg
add
in
or
les
mov
into
popf
pop
loop
xchg
or
fmuls
mov
outsl
insb
in
push
and
xor
jecxz
stc
dec
les
cmp
pop
mov
xchg
sarb
sar
jmp
xchg
sbbb
cmpsl
sub
ret
bnd
test
push
adc
sbb
insb
sub
mov
mov
lock
or
into
out
inc
test
in
mov
push
sti
lods
dec
pop
movsl
sub
adc
sarb
or
pop
lods
add
fidivrl
lcall
mov
or
je
imul
or
or
xor
mov
lock
push
add
push
add
xchg
mov
mov
je
push
mov
outsb
scas
outsb
aas
sub
mov
call
rcrb
jge
test
sbb
lods
popl
xchg
cmp
inc
and
dec
cmp
mov
repz
adc
mov
fstpt
adc
and
xor
mov
jl
fiaddl
out
mov
leave
fstps
inc
sbb
push
xor
or
push
or
jne
out
std
sub
dec
sarl
add
ds
adc
cmpl
aad
aaa
test
mov
sub
push
jae
push
mov
add
jecxz
mov
sub
fwait
push
adc
xor
cltd
scas
aaa
gs
fdivr
iret
divl
scas
xorb
bound
mov
mov
lock
adc
clc
and
int
jge
adc
mov
or
loopne
jp
pop
xor
add
mov
add
mov
pop
jmp
jno
js
in
stos
cmp
push
sbb
loopne
adc
sbb
cmp
pop
jl
jle,pn
and
lret
subb
pop
mov
arpl
shll
insl
mov
mov
sub
mov
clc
or
jecxz
arpl
out
inc
pop
int
jg
and
insl
jae
cltd
lahf
add
sarl
adc
sub
pop
test
mov
fwait
nop
rorl
mov
je
push
cmpb
xor
rclb
out
jnp
mov
or
and
or
pop
out
in
or
pop
repnz
and
pop
sub
outsb
clc
or
loopne
xlat
dec
xlat
push
subl
jle
frstor
es
or
and
inc
jge
jg
mov
frstor
dec
jecxz
scas
dec
aam
loopne
xchg
test
add
decb
sbb
aas
sahf
add
mov
js
sbb
clc
aaa
ja
sbb
add
xchg
dec
fwait
cmpsb
scas
sbb
pop
rcrb
jbe
inc
pop
inc
test
jge
aas
xchg
mov
out
pop
shlb
add
mov
dec
dec
call
cs
in
in
adc
xchg
loop
mov
pusha
jl
ljmp
inc
mov
push
push
popl
rolb
push
mov
xchg
adc
mov
mov
in
shr
xchg
pop
inc
push
idiv
cmc
cs
inc
aas
pusha
iret
sbb
jb
sbbl
bound
cmc
or
imul
or
lock
cpuid
mov
mov
loope
fsqrt
mov
mov
xchg
inc
or
or
xor
inc
xor
cmp
cmc
inc
outsl
adc
jno
ficoml
jecxz
js
lock
in
rcr
jnp
sbb
pcmpgtd
or
cmp
dec
lahf
mov
movsb
daa
stos
gs
sahf
mov
enter
mov
nop
inc
xor
push
aam
jg
popf
ljmp
fcoms
lret
test
mov
rorb
jno
fs
cli
adc
fisubl
xchg
lcall
mov
mov
jo
in
lret
or
pushl
xor
lods
sbb
jae
push
popa
inc
or
decl
mov
sub
cmpsb
lret
pushf
fists
mov
lock
ss
pushl
jbe
out
cwtl
lock
test
push
sub
jbe
sti
movsl
cmp
mov
add
out
nop
jns
mov
stos
xchg
mov
mov
mov
arpl
inc
loope
std
ret
pusha
push
add
or
xchg
cs
jge
cmpl
inc
sti
es
lea
adc
push
sub
and
adc
add
sub
jecxz
inc
in
mov
mov
flds
loop
cli
mov
or
xchg
push
mov
pop
add
imul
mov
mov
outsb
pop
push
dec
sbb
mov
pop
sbb
imul
ljmp
imul
insl
or
fistpl
mov
jg
scas
fdiv
in
daa
sub
shll
pop
dec
pop
sub
daa
add
or
mov
enter
or
xchg
jmp
mov
adc
loope
mov
or
lahf
lock
sbb
push
or
outsl
scas
imull
mov
loopne
xchg
add
fiadds
push
push
fiadds
pand
jmp
jle
and
rcrl
adc
cld
aaa
jle
xor
rol
jns
add
mov
mov
lret
or
cmp
mov
call
test
xor
adc
jno
mov
jae
mov
or
pop
data16
outsb
jl
and
mov
mov
pop
bound
subb
jmp
addb
test
mov
adc
xor
out
mov
aas
inc
test
add
cli
push
imul
jne
fucomip
mov
jg
mov
adc
cld
icebp
ror
bound
xor
jns
add
push
jnp
sbb
mov
mov
add
inc
inc
push
in
sbbb
jl
scas
jecxz
mov
addr16
xchg
mov
mov
pusha
mov
sbb
hlt
xchg
jae
decl
ss
test
push
inc
mov
sti
adc
mov
push
inc
ja
push
out
aas
test
inc
inc
jnp
inc
pop
clc
cld
push
shlb
outsl
push
add
popa
mov
inc
xor
mov
add
jmp
scas
lret
ss
cmp
arpl
xor
pop
dec
fstps
in
pop
popa
ljmp
inc
pop
mov
xchg
lods
push
adc
sbb
stos
dec
jp
inc
lock
inc
xchg
popf
iret
outsl
cmp
adc
mov
mov
or
cld
gs
mov
dec
fwait
pop
andb
and
or
loope
jne
jmp
pop
or
outsl
push
in
loop
repnz
arpl
inc
std
call
mov
aad
mov
mov
test
call
jne
movsl
fistpll
pop
sbb
jno
inc
mov
call
repnz
cmp
fbld
jge
bound
or
mov
bnd
dec
fwait
test
movsb
aaa
xor
pop
test
loop
in
sti
mov
ret
dec
push
out
inc
out
movsl
jg
adc
push
aas
adc
adc
das
clc
and
jns
or
mov
xor
arpl
cmc
push
ds
push
outsl
aaa
sti
pop
faddl
or
rclb
jecxz
mov
mov
cld
fcmovne
test
sti
add
movsl
dec
xchg
pop
enter
out
testb
sub
fisubrl
je
push
sub
test
xchg
lret
cwtl
mov
pop
add
fwait
cs
xor
bound
pop
std
adc
daa
outsb
dec
mov
pop
insb
mov
nop
mov
roll
loopne
sbb
adcl
repnz
pop
push
nop
cmpsl
cmp
jne
cmpsb
lret
pop
mov
pusha
popf
jae
and
sbb
push
jp
sahf
bound
icebp
lcall
sub
lock
jmp
sub
and
mov
mov
or
push
rclb
xchg
jp
mov
fwait
mov
lcall
mov
pop
pop
mov
hlt
loop
pop
test
data16
jno
orl
les
icebp
mov
add
mov
je
xor
mov
or
hlt
inc
jb
mov
icebp
movsb
adc
mov
dec
into
enter
push
ljmp
cmp
jns
dec
mov
ss
inc
fidivrl
loope
mov
ret
mov
or
xchg
dec
in
and
add
ja
movsb
mov
jb
and
and
shr
daa
sub
out
jge
pop
xchg
fcom
jb
mov
mov
inc
ret
xchg
adc
push
inc
cli
or
fcmovb
repnz
arpl
push
cmpsl
dec
lods
dec
inc
pop
cmp
or
jmp
xlat
cmpsl
shrb
nop
xor
and
das
inc
mov
sub
jl
add
fildl
xor
add
push
lcall
stos
int
popf
xor
inc
xlat
add
pop
mov
cmp
cwtl
loopne
stos
inc
ljmp
pop
movsl
mov
addb
and
push
test
imulb
out
and
daa
scas
push
mov
insl
decb
sbb
arpl
in
test
inc
dec
rol
mov
stos
xorl
mov
test
jecxz
aam
add
call
bound
sbb
sbb
ljmp
xor
loop
push
ret
dec
mov
pop
clc
xchg
ret
inc
ret
mov
push
or
shrb
and
mulb
in
jnp
repnz
dec
arpl
push
imul
int
sbb
pop
dec
jg
insl
dec
scas
rcll
nop
pop
dec
mov
push
mov
rol
push
rorb
pop
data16
cmp
push
xor
daa
lcall
mov
ja
sub
lret
add
mov
xchg
inc
or
adc
pop
std
repz
outsb
and
shll
cmp
push
daa
mov
add
je
lcall
daa
lcall
aam
mov
add
imul
inc
jo
or
cmc
push
adc
pop
aas
aad
cld
ror
jae
mov
fidivrl
sbb
inc
imul
fisttpll
xor
adc
mov
outsl
cmp
ljmp
fnstsw
xor
aam
or
lock
mov
je
movsb
cwtl
sbb
std
lahf
mov
add
dec
xor
fucomi
fcoms
outsb
loope
dec
or
jle
shll
lea
das
cmp
mov
sbb
cwtl
jbe
xor
mov
mov
fidivrl
sbb
outsb
mov
pop
bound
mov
adc
inc
mov
call
sub
adc
loopne
and
pop
mov
xchg
data16
into
adc
xchg
nop
mov
sbb
xor
cmp
mov
mov
popf
imul
ret
aad
pop
inc
sub
std
cld
pop
push
insb
push
addr16
inc
ja
iret
push
lret
js
popa
lock
fisttpll
mov
out
mov
repnz
and
das
pop
adc
jl
lcall
lock
dec
add
jo
mov
dec
or
ret
mov
inc
ljmp
pop
aad
adc
cmp
xchg
fucom
pop
outsb
xor
lret
imul
sbb
lea
cmpsb
ret
call
fldenv
mov
xor
dec
xchg
sbb
pop
xor
or
data16
cwtl
adc
xchg
push
aad
std
aas
or
outsb
xlat
adc
add
rorb
cmp
mov
lds
setne
sub
movsl
mov
scas
dec
and
shrd
popf
mul
icebp
inc
cwtl
cwtl
fwait
in
add
sarb
or
xor
xor
adcb
inc
pop
jbe
or
inc
pusha
or
test
es
pop
push
jge
fstps
push
rcll
mov
andb
js
mov
add
rolb
mov
js
push
xchg
cltd
hlt
mov
mov
inc
adcb
hlt
ret
adc
sub
aas
jmp
dec
push
sbb
jg
push
pushf
mov
push
sbbb
inc
jo
rorl
pop
cmpsl
cltd
sbb
ret
adc
sti
lret
lret
mov
mov
cmp
popl
inc
add
adc
popa
inc
std
mov
xchg
push
into
sbbl
push
sbb
push
mov
jge
jo
mov
and
push
adc
loope
dec
push
mov
filds
es
out
sub
mov
xchg
pop
clc
push
mov
push
insl
fistpll
sbb
inc
aas
xchg
pusha
test
push
mov
mov
sbb
mov
mov
sarl
mov
xor
hlt
loopne
je
test
lahf
jb
fldt
inc
mov
aaa
ret
pop
adcb
mov
xor
jl
dec
adc
into
jle
mov
lds
or
sbbb
test
sbb
ss
mov
cli
fcmovnb
nop
xor
les
popa
aaa
repnz
je
test
rol
je
lods
pop
pop
std
repz
lea
mov
sbb
fnstcw
push
hlt
mov
faddl
push
inc
jb
xchg
lods
xchg
data16
xchg
push
lock
sub
mov
sahf
xchg
ss
xchg
pusha
mov
jge
js
popa
sub
addr16
sub
xor
cli
and
insl
sbb
jp
sub
cmp
fldt
jl
jle
mov
cli
pop
dec
imul
hlt
mov
jge
lahf
xchg
nop
shl
test
lahf
lock
lcall
js
cli
fldt
fildl
adc
mov
jl
call
shll
mov
push
lods
cwtl
lock
jp
dec
arpl
push
jmp
roll
mov
inc
sti
dec
into
xor
cmpsl
jmp
cmp
test
fs
xchg
sub
pop
cli
mov
adc
pop
cmp
movsl
add
test
ja
shr
andl
clc
jns
cmpsb
push
mov
aas
adc
dec
xchg
decl
repz
seta
test
incl
mov
mov
or
inc
mov
inc
jnp
fimull
pop
das
nop
test
and
in
xchg
jmp
andl
cwtl
repnz
jns
pop
push
push
negl
pop
or
sbb
push
jg
xchg
jecxz
mov
rolb
outsl
rclb
ja
pop
push
sub
fwait
adc
mov
mov
inc
xor
push
jne
pop
pop
mov
fwait
inc
ret
aaa
outsb
pop
xor
sbb
aaa
in
push
fstps
aam
sub
test
and
test
loopne
mov
and
pop
pusha
sbb
jmp
fadd
sub
sbb
add
and
pop
jmp
jg
or
ret
mov
xlat
loopne
cmpsl
sarb
dec
in
in
sbb
mov
int
push
mov
std
and
pop
pusha
jmp
or
cmp
rolb
mov
lcall
jne
or
sbb
xor
add
cmp
inc
cmp
sar
lret
lock
mov
lods
dec
xchg
xchg
inc
jnp
mov
ret
dec
test
xchg
xchg
add
aam
shrl
mov
mov
loopne
adc
out
mov
cmp
sub
lahf
decl
repnz
icebp
mov
jg
add
aam
sarb
repnz
fiaddl
mov
xchg
xor
xchg
into
imul
xchg
sbb
mov
inc
inc
cld
int
leave
and
hlt
add
popa
mov
jmp
pop
mov
out
mov
loopne
mov
mov
jne
shrb
add
dec
push
xlat
or
mov
mov
scas
aad
aaa
adc
decl
test
lods
popf
adc
shlb
dec
mov
cmp
loopne
pop
in
xor
lds
stos
rolb
loop
outsb
sub
lods
push
or
add
push
loop
aas
jbe
mov
add
pop
add
add
jmp
in
cltd
loopne
jecxz
or
shll
not
push
je
jae
insl
loope
and
sti
push
popf
pusha
jp
adc
or
je
aas
aaa
push
call
push
inc
aam
sub
push
scas
pop
out
jo
mov
int3
call
icebp
adc
mov
add
or
fstp
adcb
and
mov
cld
dec
push
push
ljmp
cmp
mov
jmp
lret
test
adc
ja
in
push
xor
push
xchg
loope
js
into
adc
stc
rolb
jl
jp
push
pop
fcmovbe
inc
jmp
outsb
sti
in
inc
mov
and
fwait
add
data16
movsl
rolb
sub
add
jne
or
pop
fdivrl
add
xor
xor
sbb
mov
mov
adc
test
inc
inc
lcall
out
inc
out
stos
hlt
pop
sarb
pop
push
pop
sarb
call
aad
aaa
jecxz
fmull
push
aam
pop
mov
mov
loop
sbb
sti
lea
inc
cltd
sub
jle
mov
lcall
rcll
or
inc
aad
cmp
in
sbb
aad
push
and
popl
xorl
pop
stos
ljmp
hlt
inc
inc
or
lcall
clc
jg
xchg
loop
push
in
cmc
scas
stos
xor
jg
lret
and
iret
or
out
cmp
mov
mov
or
sbb
sub
pop
cli
or
or
movsl
jle
sahf
fsqrt
adc
addb
imul
movsb
lods
add
and
popf
sub
fs
mov
repnz
in
adc
mov
mulps
aaa
gs
cmpsb
dec
shlb
and
mov
mov
xlat
pop
jo
adcl
sbb
test
stos
mov
mov
inc
jno
nop
jbe
jge
xor
jmp
or
mov
cli
cs
jle
push
shll
xchg
jmp
fnstsw
pop
mov
addr16
jmp
add
sub
mov
and
jb
xadd
mov
jge
dec
add
insl
mov
cmpsl
test
push
out
sub
rcrb
mov
lock
shr
ja
hlt
mov
mov
stc
xchg
and
or
adc
dec
out
clc
aaa
ljmp
sbb
data16
in
xor
mov
inc
mov
pop
pop
or
mov
into
lcall
cwtl
int
gs
jge
cld
cmpsb
xor
bound
iret
mov
sbb
push
xor
cmc
pop
aas
jl,pn
cld
xor
cs
aaa
jns
std
call
loop
dec
lret
stos
push
inc
mov
in
in
aaa
cs
fisttps
arpl
ret
roll
test
cmp
inc
rolb
scas
dec
in
adc
xlat
pop
mov
ds
sahf
mov
jb
xchg
ss
jle
cld
add
lcall
pop
ss
sub
test
mov
jne
mov
pusha
cltd
popf
adc
idivb
sbb
pushl
rcl
imul
jecxz
sarb
or
lcallw
sub
out
dec
adc
inc
add
mov
mov
jmp
rclb
cmp
and
scas
jbe
push
imul
adc
inc
aad
adc
adc
cmp
or
pop
arpl
sbb
pop
or
sub
lods
cmp
cmc
or
jno
inc
decl
cs
cwtl
test
fstps
mov
push
and
adc
add
pop
pop
aaa
cmc
in
lea
inc
mov
fidivl
ja
jo
icebp
jb
fsubl
rorb
cmp
adc
mov
jl
sub
and
rcrl
and
rcr
mov
sarb
push
or
sub
icebp
stc
ffreep
xchg
cs
xor
fwait
xchg
sbb
aad
mov
mov
xor
cmc
jne
or
shlb
sub
mov
dec
inc
dec
rcr
add
insl
lret
inc
xchg
mov
jb
and
inc
movsb
or
xor
hlt
das
mov
loopne
jge
mov
jg
xchg
rep
or
push
test
inc
jno
orb
addb
mov
repnz
xchg
push
fildll
xchg
ret
sbb
jge
xchg
jmp
and
inc
fs
outsl
mov
cwtl
iret
pop
icebp
xor
fstpt
lods
mov
fmuls
jmp
sbb
mov
sahf
bound
sbb
stos
mov
lea
add
add
push
addr16
mov
and
out
and
cltd
sti
dec
rorb
jmp
mov
outsl
nop
icebp
outsl
cwtl
cmp
pop
mov
push
cli
es
xor
mov
stos
push
mov
inc
adc
cmp
mov
sub
pop
sub
clc
mov
sbb
outsb
and
mov
in
pop
rcr
notb
in
cmp
fidivrs
sub
inc
add
jg
sbb
sub
adc
jne
or
cld
adc
push
pop
sahf
addb
mov
mov
shlb
cld
add
push
mov
push
xor
xchg
or
loopne
in
aaa
out
add
lahf
jge
xlat
dec
and
fst
ss
or
decl
sar
sbbl
stos
pop
stos
in
inc
or
and
jbe
mov
nop
push
ret
popa
iret
scas
and
push
rcr
mov
mov
add
cmpsl
sbb
or
dec
sti
sbb
sahf
xchg
ret
push
movsl
lods
cli
pop
dec
xlat
sti
xchg
adcb
fistpll
idivb
insb
enter
adc
push
push
mov
in
and
pusha
imul
push
pop
rcll
sub
adc
dec
fimuls
jmp
push
jnp
ds
xchg
hlt
cltd
sbb
or
pop
mov
insl
cmp
loopne
add
inc
add
pop
into
ss
fdivrs
and
adc
leave
aad
mov
sbb
wrmsr
adc
xchg
jmp
pusha
icebp
jb
adc
adc
mov
lods
andb
jge
inc
cmp
popf
mov
jl
mov
pop
jle
into
cwtl
pusha
dec
ret
rcrl
xchg
jbe
sbb
sbb
cltd
cld
incl
pop
sub
ret
sbb
xor
add
dec
cmp
mov
dec
cmpsl
loopne
mov
cmp
push
test
pop
mov
or
and
mov
pop
xor
mov
flds
adcb
cmp
jecxz
mov
jo
mov
pushf
test
sti
test
fisubrl
roll
cmp
sub
inc
xor
in
mov
add
add
cmc
or
lods
push
imul
sbb
mov
lea
and
cwtl
sub
push
push
or
xor
sbb
lcall
and
insb
adc
cs
cmpsb
test
rcrb
adc
mov
push
mov
mov
sub
out
test
sub
sahf
inc
and
add
cmc
shll
cmp
stos
cmp
shlb
cmp
xchg
cwtl
and
lds
aad
fst
clc
fstpt
pop
cli
xchg
mov
mov
roll
rolb
cmc
lds
and
or
lret
cs
hlt
mov
mov
and
mov
mov
push
inc
xchg
outsl
sbb
sbb
cli
pop
mov
insl
mov
dec
xchg
cld
test
cmp
pop
sahf
adc
xchg
mov
sub
in
and
pop
imul
rclb
sahf
add
xchg
cltd
mov
fcmovnbe
loop
jno
cmpsb
sub
insl
adc
ja
cld
mov
in
cltd
xor
dec
gs
or
ficomps
out
add
sub
subl
scas
dec
out
mov
rorb
and
cmp
sbb
sub
push
pusha
sbb
and
add
decl
sbb
outsl
addb
lds
stos
test
inc
out
xlat
fsubrl
push
jmp
les
inc
lods
jg
dec
popa
clc
aaa
mov
call
jne
fidivs
mov
inc
cmovns
xor
das
lret
loop
and
sub
and
repz
adc
mov
lahf
xor
add
mov
sub
das
cmp
xor
call
jmp
sbb
mov
inc
pusha
pop
add
insb
cmp
cli
test
daa
push
mov
adc
push
lods
adc
jb
bound
pop
sti
mov
lods
sbb
inc
and
mov
inc
mov
clc
mov
pusha
into
frstor
scas
enter
lods
dec
and
es
jg
arpl
and
jg
xchg
cltd
sbb
mov
arpl
inc
dec
mov
fldenv
pushf
inc
jg
pop
mov
pusha
enter
sbb
pop
mov
in
push
cli
or
scas
bound
cmp
adc
pop
xchg
cs
inc
add
data16
fs
fildll
dec
sti
mov
pop
aad
pop
sub
add
or
pop
and
dec
hlt
arpl
outsl
fwait
std
cmp
push
or
loop
pop
push
sub
mov
cld
test
bound
adc
or
repnz
push
mov
dec
xor
cmpsb
inc
int
movsb
enter
lret
repnz
mov
mov
addr16
bound
add
jl
addb
movlps
test
outsl
mov
sbb
ss
mov
jp
and
testb
xchg
sbb
xchg
inc
xor
cmp
ss
mov
pop
add
mov
ja
loopne
pop
cmp
mov
scas
xchg
push
sahf
xchg
and
cmp
adc
clc
push
jecxz
hlt
daa
aam
inc
or
roll
mov
xor
arpl
popf
sub
inc
cmc
mov
adc
push
inc
in
ss
lea
es
cltd
repz
mov
push
lret
cmpl
mov
and
movaps
lcall
push
xor
mov
lahf
in
pop
xor
push
cmp
js
pushl
jne
and
js
sbb
push
jne
cmp
and
adc
stos
or
push
ss
cmpl
fdivl
test
pop
adc
iret
sbb
loope
jecxz
lahf
mov
jo
jo
clc
cmpsb
jo
nop
mov
jnp
xor
or
push
and
pop
repnz
jg,pt
insl
insl
dec
dec
add
rclb
adc
xchg
mov
orl
mov
xchg
das
mov
sbb
mov
test
mov
add
mov
in
shlb
fisttps
dec
lock
jbe
or
sti
insl
push
or
mov
mov
popa
ds
and
pop
adcl
jp
repnz
cmpsl
mov
pop
xchg
jo
jbe
sti
call
rolb
gs
lret
clc
das
stc
and
inc
push
lret
sbb
push
clc
aam
pusha
and
dec
fcmovnb
and
filds
dec
mov
mov
pop
cs
sbb
xchg
bound
pusha
fistpll
mov
and
test
lret
push
xchg
cld
ret
add
out
arpl
dec
movsl
divb
cli
stos
scas
add
fs
bound
test
pop
dec
roll
or
xchg
cmp
xor
mov
push
inc
add
sbb
scas
clc
adc
jp
stos
jl
shr
movsl
push
shlb
ret
sub
pop
fnsave
inc
mov
out
ds
int
cmp
icebp
mov
cwtl
mov
or
mov
xchg
inc
jecxz
pop
lods
cmp
inc
je
pop
je
repnz
xchg
in
xor
cmp
aad
dec
negl
faddl
lock
jle
xor
in
lcall
and
push
jo
adc
pusha
sub
gs
mov
jmp
sub
adc
xchg
jno
mov
push
cmpl
pop
fs
xor
pop
out
or
xchg
scas
lds
aaa
jae
jno
jnp
fwait
cli
pop
insl
mov
fmuls
cwtl
in
insb
clc
mov
lret
data16
movd
imul
add
inc
jg
fs
inc
daa
clc
clc
in
or
je
insl
fnstenv
fstpt
into
adc
sbb
test
mov
scas
arpl
dec
inc
xchg
xor
xor
or
jg
lock
imul
insb
pop
pop
cmp
xor
dec
je
imul
and
and
push
sahf
lcall
js
add
popf
inc
je
repnz
fsubrl
fldt
cld
imulb
dec
gs
jle
and
mov
ret
stos
js
jecxz
cltd
and
inc
popf
or
push
movsb
ss
pop
fs
test
jg
lea
or
jns
addl
xor
lock
outsl
iret
loopne
das
mov
push
add
loope
rorb
cmp
cmp
dec
outsl
paddb
sub
add
sar
rcl
pop
jle
sbb
gs
lcall
xchg
mov
adc
inc
test
out
sub
outsb
mov
jno
sbb
decl
pop
ja
jp
jecxz
cmp
roll
nop
fs
test
xor
cmpsb
or
mov
mov
mov
insb
stos
dec
into
icebp
fimull
lahf
push
sahf
daa
adc
hlt
imul
aaa
mov
mov
mov
int
adc
jge
add
mov
test
sbb
std
jmp
in
fsub
xor
and
add
call
mov
add
call
cmp
outsl
pop
call
cmp
cmpsl
dec
mov
mov
arpl
and
imul
xchg
psrld
lds
mov
adcb
pushf
or
call
int
sbb
popf
adc
and
stc
and
call
mov
orl
repnz
dec
and
dec
jl
test
lods
mov
add
pop
lds
imul
adc
mov
pop
aas
ss
or
into
ljmp
cmpsl
fists
in
lret
inc
pop
imulb
hlt
movsl
mov
mov
xchg
and
add
adc
ret
adc
pop
or
xchg
imul
dec
xor
sahf
xor
dec
nop
sbb
cs
std
test
xor
sbb
aaa
push
sub
cmp
lahf
cmpsb
leave
negl
inc
xchg
add
inc
push
lods
dec
imul
mov
stos
jmp
add
lret
js
jns
pushf
pop
sub
shl
mov
fistps
jno
shr
add
xor
xor
inc
jno
inc
adc
rol
std
scas
lock
clc
jbe
push
inc
mov
mov
jo
hlt
imull
or
cltd
ljmp
imul
cmp
scas
mov
xchg
test
fstps
jns
add
inc
sub
push
mov
mov
rolb
sbb
mov
cli
inc
decl
flds
fidivrl
mov
inc
inc
dec
mov
mov
fsubl
sbb
call
or
inc
xchg
std
nop
pop
cmp
das
and
fsubrl
add
int3
jno
stos
fwait
pop
sti
push
imul
pop
sbb
inc
cld
xlat
ljmp
and
inc
inc
es
roll
and
dec
lods
roll
fidivrl
call
lret
mov
ja
daa
and
scas
rcr
push
inc
sub
mov
xchg
xchg
cmpsb
add
jbe
rcrb
push
dec
mov
and
sub
mov
les
lcall
push
xor
ficoml
loop
mov
fbld
jo
test
pop
dec
mov
sbb
inc
pop
dec
jnp
loop
mov
pop
sti
inc
jno
callw
shrl
icebp
popf
sub
mov
loope
adc
mov
xorl
pushl
dec
loope
and
cmpsl
xchg
xor
xor
fisubl
and
push
pop
adc
les
mov
or
mov
jl
lret
mov
and
jecxz
jp
sbb
mov
test
cmp
push
je
push
inc
push
testl
lds
clc
inc
ja
jno
add
les
adc
push
lods
dec
fld
decb
sub
inc
dec
or
mov
es
sub
loopne
test
xor
and
ss
lcall
fsubp
rcll
xchg
outsb
jge
sbb
mov
add
hlt
push
test
cltd
push
inc
mov
and
pop
or
or
sahf
or
ja
mov
imul
daa
cli
negb
jg
addl
dec
sub
fsubs
add
push
ror
sub
sbbw
xchg
pushf
jmp
jg
ret
xchg
cs
sbb
add
cwtl
fcoms
lods
test
jbe
in
xor
jl
fdivs
sub
popa
mov
cmpsl
xchg
scas
sub
or
push
push
stos
adc
adc
jg
lock
mov
mov
pusha
jmp
mov
mov
adc
fnsave
dec
fs
shlb
std
test
push
pushf
sbb
rcll
aaa
loope
lock
push
jne
adc
adc
int
aaa
mov
cmpsl
mov
movsl
jmp
je
js
rclb
pop
test
jmp
sbb
in
scas
and
mov
in
push
hlt
cld
sbb
repnz
aam
je
jne
ret
lods
lea
cwtl
outsb
insl
adc
imul
fdivrp
inc
shll
dec
ret
int
outsb
mov
int3
jl
sbb
stos
inc
sbb
cltd
xor
fisttpll
pop
push
idiv
mov
push
mov
add
int3
and
icebp
add
pop
int
jns
pop
pop
sub
xchg
scas
add
or
push
les
das
std
js
inc
push
scas
outsb
subl
and
scas
andb
mov
daa
mov
mov
lret
and
insb
cld
and
push
add
out
xor
pop
std
decb
push
sbb
jecxz
adc
lea
push
add
cmp
lahf
jno
subb
dec
xlat
ret
mov
mov
in
dec
ret
sbb
xchg
or
lret
sbb
sbb
aad
dec
in
ja
xor
xor
dec
push
out
mov
rcr
sbb
adc
pop
add
sti
fwait
jl
sar
jne
test
mov
mov
inc
mov
sub
orb
jp
xchg
push
xor
iret
shrb
js
push
shll
adc
outsb
outsl
das
loop
push
icebp
xchg
addr16
movsb
in
ljmp
test
push
jge
xor
xor
rol
mov
mov
mov
das
and
test
test
xchg
subl
add
loopne
jg
jp
mov
mov
adc
mov
jb
movsl
jno
lret
aas
xlat
xorb
or
dec
add
aam
adc
mov
decb
inc
adc
pop
imul
scas
inc
push
js
jmp
aam
adc
aaa
cwtl
sub
mov
mov
and
notb
fstpl
pop
mov
imul
decb
sar
inc
rorb
push
mov
push
add
icebp
test
stos
adcl
ljmp
mov
outsl
lods
mov
mov
adc
push
xchg
daa
mov
aad
cmp
in
loopne
sbb
in
push
mov
dec
rcrb
jne
push
push
push
mov
pushl
sub
lret
rorb
inc
inc
cmp
xchg
shll
or
test
sub
xchg
imul
adc
clc
xor
movb
sbb
faddl
jmp
jge
mov
push
push
mov
loop
in
cltd
pop
std
jg
icebp
and
mov
sarl
xor
jmp
xchg
stos
pop
stc
cmpsb
movd
adc
adc
aas
insb
in
cmp
inc
add
push
pop
xchg
aas
mov
cmp
adc
jb
lock
mov
cmp
sub
push
push
pop
mov
imul
mov
mov
dec
push
add
and
movsl
shll
stos
decl
fisttpll
xor
jne
in
inc
decl
sub
jns
add
add
sbb
dec
adc
shl
repz
add
icebp
nop
scas
mov
fstpl
mov
mov
das
sub
mov
xchg
adc
xchg
cmp
or
stos
add
cmc
jmp
xor
push
cmp
mov
insl
dec
aad
test
add
jecxz
mov
adc
scas
fcompl
pop
neg
and
or
pop
loopne
xor
cwtl
and
and
mov
inc
mov
pop
pop
loopne
push
jl
mov
adc
adcl
inc
ret
addl
sti
mov
sub
aam
fistps
push
mov
sub
nop
fsubrs
in
outsl
xchg
cwtl
jl
inc
mov
cmp
xchg
ljmp
push
mul
pushf
cmp
push
int3
jmp
dec
dec
loopne
imul
dec
fdiv
mov
cmp
xchg
insb
sub
nop
jle
nop
jbe
sub
add
cmp
add
mov
dec
iret
jo
xchg
sti
fisubs
cmp
inc
push
lcall
sbb
ret
mov
mov
mov
outsl
sub
and
mov
inc
and
add
jecxz
lret
fdivrs
push
mov
jl
mov
pop
mov
mov
mov
hlt
lods
pop
and
fistpl
in
xrelease
or
sub
mov
fs
ljmp
jge
cli
pushl
add
lds
mov
cmp
push
mov
inc
lahf
andb
add
adc
iret
inc
lea
mov
in
mov
pop
xchg
and
and
int
mov
cmp
lds
ljmp
pop
mov
dec
mov
nop
sbb
fistl
fwait
mov
imul
xchg
test
stos
add
inc
and
push
pop
mov
adcl
jmp
push
lcall
cltd
fwait
inc
loope
loopne
jno
xchg
add
inc
sub
push
push
and
push
dec
push
mov
addb
and
adc
pop
jns
inc
sub
pop
pop
out
sbb
js
xorl
mov
dec
jo
jp
enter
push
pop
test
or
inc
pusha
mov
aad
cmpsb
jecxz
or
imul
fs
pop
das
orl
jmp
pop
inc
mov
jg
ja
loope
mov
addr16
xlat
addl
inc
cmc
inc
pushf
movsb
orl
filds
xchg
and
fdivs
scas
cmp
call
inc
ds
push
ret
ds
nop
adc
or
js
xchg
push
shl
dec
push
add
stos
sbb
or
cli
loopne
jb
sbb
jecxz
inc
jl
fildll
ret
adc
xor
pop
lds
movsb
dec
push
insb
aaa
inc
jnp
lods
sub
in
or
insb
push
jns
call
mov
test
lret
orb
test
mov
shrb
xchg
add
scas
and
in
sub
add
cmc
xchg
inc
xlat
loop
jbe
dec
nop
sbb
and
icebp
sbb
lea
cmp
dec
lret
cmpsl
ds
mov
adc
bound
xchg
test
outsb
test
ret
lds
mov
dec
or
xor
ret
adc
push
popf
shr
bound
clc
jg
jae
out
and
add
xchg
add
fisttpll
add
inc
push
decl
das
jge
ljmp
stc
sbb
push
sub
dec
xorl
scas
das
inc
and
mov
mov
dec
push
decl
jle
pop
mov
push
sbb
addr16
aas
lods
push
pop
sub
sbb
hlt
sbb
mov
hlt
sbb
sub
insl
dec
mov
leave
bound
dec
jge
jecxz
jecxz
test
sub
outsb
mov
and
mov
call
pushf
or
add
xchg
jae
sub
imul
into
incl
inc
push
insb
jg
cmp
mov
adc
xchg
in
mov
sub
inc
filds
in
nop
jo
jge
sbb
mov
stos
mov
sbb
xchg
push
jge
outsl
inc
repnz
sub
push
cli
movsl
xchg
clc
movl
cmp
dec
scas
cmp
fsubs
xor
and
jne
pop
addr16
sbb
mov
mov
jo
sahf
ret
mov
xor
dec
pop
rcl
mov
adc
or
xor
hlt
pop
dec
mov
and
int
or
and
lcall
pop
inc
push
cs
lahf
push
xchg
add
xchg
mov
std
lods
out
fucomp
movsl
fildl
xorl
mov
and
jo
lds
pop
pop
lock
lret
sbb
mov
ja
aam
in
stos
insl
pop
insl
xchg
mov
out
mov
sbb
addr16
insl
xlat
inc
xor
sahf
pop
or
mov
jb
leave
pusha
dec
xor
dec
jle
stos
aad
jmp
pop
adc
les
dec
push
push
mov
enter
mov
in
add
inc
sbb
mov
dec
mov
push
sub
outsl
sub
popa
mov
movsl
movsb
dec
and
bound
ss
inc
fs
lahf
inc
dec
mov
pop
cmpsb
scas
test
outsl
js
ds
cltd
or
mov
xchg
push
rcrb
cmpsl
jle
and
scas
cld
and
je
push
cmpsl
repz
das
std
pushl
xor
dec
in
lahf
inc
les
popf
or
jge
jg
mov
inc
jmp
test
stos
xor
mov
and
add
push
jb
out
mov
dec
loope
and
mov
enter
sbb
clc
mov
and
push
ret
dec
mov
cmp
sbb
push
push
push
add
sbb
adc
and
insl
fisttps
mov
or
pop
repz
shlb
je
aaa
adc
sarb
ss
ja
inc
adc
fldenv
lock
lock
cmp
mov
lret
inc
stos
pushf
cmc
shl
stc
xchg
xchg
add
add
cmp
mov
sub
inc
les
mov
shl
or
add
mov
sub
ret
xchg
dec
call
dec
aam
push
lock
adc
mov
icebp
jg
test
popa
fs
test
incb
mov
pop
adc
push
mov
pushf
mov
bound
inc
sti
sbb
jnp
inc
xchg
xor
adc
jl
jnp
adc
clc
jg
xchg
addb
movsb
push
out
mov
adc
adc
je,pn
lods
mov
add
mov
sub
mov
pop
pushf
sbb
inc
in
push
dec
loope
xchg
loope
cmp
outsb
adc
cmpsb
sub
insl
ds
dec
orb
in
inc
mov
xor
xchg
ljmp
mov
xor
mov
mov
xchg
push
lea
repz
mov
das
sbbl
fwait
push
orb
outsl
fcoms
rcrw
push
or
xor
cmpsb
pop
popf
loop
push
xchg
pop
jg
push
dec
mov
popf
or
std
hlt
je
lock
das
test
or
jl
mov
cmp
xor
test
cld
sbb
fcoms
fcoml
test
aad
mov
jo
push
push
stos
insl
outsl
and
push
lds
cmp
push
mov
pop
adc
pop
movsl
dec
movsl
sbb
lea
jo
inc
push
or
sbb
idivb
imul
or
mov
and
cmp
mov
pop
aas
pusha
adc
outsl
lock
out
add
outsb
movsl
and
jb
or
fiadds
push
hlt
fbld
cmp
cmc
test
out
pop
ja
fs
scas
jnp
push
in
jo
mov
xlat
mov
arpl
out
jle
clc
and
add
mov
mov
repz
sahf
inc
inc
push
shlb
inc
cmp
test
test
and
jle
push
adc
dec
cli
mov
into
in
lods
and
movsl
mov
adc
inc
es
cmp
and
lret
lea
in
cld
sub
mov
aaa
sbb
pop
adc
and
inc
jmp
les
mov
push
outsl
ficomps
add
ret
in
pusha
xor
jecxz
jg
inc
dec
mov
sti
test
outsb
push
in
pop
adc
jne
mov
js
int3
add
inc
std
pop
std
stos
jp
jb
push
and
inc
outsl
js
pop
lock
test
filds
mov
inc
adc
add
test
sub
add
cs
test
rol
fdiv
pop
xchg
mov
and
pop
sub
das
push
xor
mov
push
mov
push
in
push
jnp
pop
sahf
and
rol
mov
mov
ss
ret
jecxz
sbb
mov
add
dec
or
mov
rcrl
adc
cwtl
and
hlt
inc
pop
xchg
add
je
sub
shll
mov
int3
pop
adc
insl
std
mov
push
aaa
stos
and
scas
pop
clc
ja
ret
and
sbb
add
sbbb
adc
adc
fldenv
mov
push
rorb
loope
arpl
in
push
or
icebp
lods
sahf
int3
cmp
imul
adc
add
mov
ds
dec
dec
sub
in
sub
popa
add
mulb
in
pop
cmpb
daa
rclb
adc
pusha
adc
push
mov
movb
mov
mov
fstpt
outsl
sbb
push
out
outsl
mov
xchg
mov
lock
xor
inc
mov
test
fldt
aam
in
adc
push
loopew
and
fidivrs
inc
add
inc
sbb
mov
clc
push
icebp
das
push
mov
scas
sub
ja
and
incl
mul
mov
stc
jns
adc
in
fimull
sub
mov
pop
xor
push
pop
jo
test
addl
sub
int
push
repnz
mov
inc
sbb
les
jb
mov
call
xchg
in
xchg
mov
push
xor
incl
loopne
mov
aas
pop
push
scas
jle
mov
add
inc
cld
jl
movb
and
add
adc
ret
addr16
fwait
imul
or
add
std
fildll
je
add
add
xchg
jecxz
test
std
ds
jecxz
and
or
cmp
mov
es
xorb
add
sub
adc
hlt
jmp
xchg
arpl
hlt
xchg
mov
jle
mov
push
shr
xor
popa
mov
add
icebp
test
jecxz
mov
xchg
jne
lcall
and
add
cli
scas
jecxz
rclb
cmpsl
add
pop
insl
mov
inc
arpl
in
jg,pt
dec
pop
repnz
sub
ret
mov
movsb
add
imul
mov
add
push
shll
out
cs
paddd
add
xchg
dec
aad
aad
mov
out
retw
jo
pop
sbb
sbb
jge
nop
push
dec
scas
push
aam
jl
je
imul
test
push
add
mov
pop
mov
sti
cmp
jg
push
outsb
fiaddl
xchg
test
cmpsb
push
xchg
or
rcll
sub
jmp
shrl
fbld
ljmp
enter
movsb
cmp
mov
xchg
cmc
das
push
sub
test
in
icebp
cmp
sahf
xor
sti
jg
inc
sbb
fistl
or
mov
dec
adc
ss
and
and
mov
or
mov
inc
fistpl
arpl
xchg
mov
icebp
pop
gs
in
pop
dec
sbb
sbb
dec
pop
xchg
aad
mov
lds
leave
lds
mov
cmc
arpl
incl
push
xchg
fidivs
push
pop
sti
adc
pop
xlat
fcomps
aas
sbb
loop
or
ffreep
cli
jg
lock
in
fmull
aam
jae
rcr
fcom
rorb
movsb
call
inc
fists
rep
mov
push
push
mov
dec
cmp
fwait
cld
fistl
int3
hlt
jge
fcoms
outsl
jl
add
idiv
push
push
mov
adc
lds
or
adc
pop
into
mov
and
adc
outsl
jnp
movsl
xor
mov
fdivrl
sbb
pop
fadds
xchg
jns
icebp
test
mov
pop
add
sub
int3
imul
ljmp
roll
movsl
mov
sahf
jne
negb
cmpb
outsb
mov
in
mov
or
sbb
ret
jbe
shll
or
mov
test
jp
popf
mov
ja
xchg
mov
ss
push
cwtl
sub
pop
inc
pop
sub
sti
push
hlt
mov
add
stos
sbb
or
shl
push
add
sbb
xor
jne
fsubr
jg
mov
mulb
cs
xchg
les
test
jg
test
jl
into
in
push
mov
or
mov
mov
pop
fwait
xchg
cmc
xchg
sbb
push
inc
rorb
jle
lock
cltd
pop
inc
pop
test
out
loopne
stos
jo
or
fucom
cwtl
and
xchg
outsl
mov
mov
movsl
lock
and
in
sbb
int
adcb
movsl
mov
mulb
xchg
mov
or
les
xchg
mov
out
ss
add
out
pop
adc
sahf
call
mov
int3
push
and
inc
lahf
push
fcomps
fwait
mov
cwtl
loop
xor
jl
or
enter
stos
inc
push
dec
fwait
rcr
bound
mov
xor
push
xchg
xchg
xchg
ds
mov
mov
fcomi
fiadds
push
xor
mov
xchg
sbb
popa
inc
les
mov
push
xchg
clc
fisttps
mov
mov
pop
mov
pop
add
je
mov
mov
rcll
xor
jecxz
sti
add
xchg
xor
out
pop
ficoml
xchg
jecxz
cli
jmp
js
test
add
fs
mov
mov
xchg
out
addr16
add
adc
xchg
or
xor
lahf
ss
cli
in
in
rcll
jb
mov
push
cmpsb
fidivs
loope
loopne
test
jp
push
or
jne
xor
call
xchg
bound
das
mov
decl
sub
cmp
sahf
cmp
jb
or
cld
test
inc
push
adc
in
inc
push
scas
mov
add
sbb
insb
stc
inc
mov
mov
mov
notb
add
jno
lea
ret
sub
call
adc
mov
in
inc
or
call
andb
cs
and
add
mov
pop
dec
cmp
mov
mov
jp
aaa
rorl
or
flds
imul
test
cmp
jbe
std
in
cmc
aaa
inc
popf
lds
aaa
lret
sub
add
add
cmp
jecxz
enter
add
outsl
add
dec
jp
movsl
and
push
xchg
clc
and
push
jno
in
add
adc
xchg
test
test
lea
inc
xor
add
mov
ljmp
mov
dec
ret
mov
sbb
mov
rcrb
sub
in
loopne
dec
pop
dec
fwait
and
cmc
fimull
mov
imul
clc
aaa
inc
or
and
pop
lods
outsb
adc
fmull
shlb
test
sahf
imul
pop
pushf
test
xchg
test
in
ja
xor
xchg
int
xor
ds
pop
adc
push
inc
pop
push
add
sub
mov
popf
enter
aad
push
lds
push
add
shrl
int3
add
adc
pop
sbb
or
fsubrs
cmpsb
js
ljmp
cld
jg
mov
jl
jmp
xchg
cmp
jp
roll
xor
dec
dec
pop
fdivrp
and
icebp
andl
and
popa
inc
icebp
mov
xchg
out
iret
xchg
xlat
loope
pop
jle
pop
xchg
imul
popa
sti
lcall
les
add
adc
pop
sahf
fisubrl
scas
xchg
push
add
clc
mov
fsubp
sub
push
cmp
adc
nopl
adc
fldl
in
cwtl
addl
or
lods
test
dec
shr
or
push
sbb
call
push
sbb
mov
sbb
lock
incb
pop
test
mov
std
popf
add
lock
pop
cmp
jmp
fisubrs
insb
loopne
mov
xchg
xor
or
inc
lea
and
push
or
sub
mov
push
aam
lahf
push
leave
pop
aam
sbb
and
xchg
mov
ficoml
sbb
sub
ljmp
mov
loope
jo
in
mov
clc
int3
aaa
dec
scas
jp
xlat
sbb
in
jbe
sub
ljmp
fldt
daa
and
push
pop
push
adc
cmp
mov
xchg
mov
das
pop
lret
xchg
loop
aam
xlat
inc
sar
mov
xchg
pop
or
fnstcw
mov
mov
cwtl
dec
xlat
cmp
fisttpl
daa
lahf
adc
sub
xor
clc
mov
or
cmpb
je
xlat
mov
fisubl
sbb
dec
jl
pop
mov
or
add
out
pusha
jnp
int
stos
stc
std
lret
fneni(8087
leave
daa
fldt
movl
int3
inc
mov
loope
loope
xchg
cmc
push
test
jmp
in
jge
mov
xor
xor
call
je
jecxz
nop
mov
mov
xchg
cmp
and
cmp
and
test
or
std
mov
leave
mov
loop
in
mov
mov
mov
in
add
mov
addl
enter
jge
insb
push
mov
dec
pop
lock
mov
adc
or
aas
push
aam
adcl
addr16
mov
or
cwtl
dec
cmp
mov
mov
sbb
out
inc
pop
je
mov
lret
out
cltd
aas
loopne
xlat
sub
fisttps
jns
cmp
push
test
mov
adc
je
roll
test
sub
dec
lea
add
jnp
leave
stc
add
out
jl
aaa
push
jo
or
xor
or
fiadds
inc
xchg
int
ss
inc
aaa
mov
mov
push
mov
lret
inc
sbb
dec
mov
aaa
push
aad
inc
push
shlb
out
jecxz
jg
xchg
icebp
inc
adc
ret
cmp
sbb
xchg
mov
popf
fcomps
cwtl
imul
cwtl
ds
mov
shlb
shlb
pop
inc
cmp
mov
jnp
inc
cld
in
mov
sbb
xor
pop
xchg
sbbb
je
pop
mov
pop
daa
or
jmp
pop
push
aaa
adc
cld
pop
add
lock
out
jg
add
inc
fs
mov
int3
and
adcb
add
rcr
sahf
mov
inc
dec
cmp
rolb
les
arpl
sahf
jp
xchg
jecxz
insl
inc
xchg
jg
rorl
jb
fnstcw
js
mov
inc
aaa
adc
cmpsb
add
dec
sbb
jp
mov
add
lahf
popa
test
pop
adc
ja
lahf
push
cltd
andb
cmpb
mov
push
mov
inc
mov
pop
sbb
lds
inc
jge
getsec
ret
sbb
out
sub
adc
fsubrp
cmp
jae
sub
push
add
xchg
loop
inc
xchg
dec
sub
js
das
cmovp
mov
pop
sub
loop
mov
pop
sub
inc
cmp
and
xor
mov
jns
ret
daa
inc
movsb
fs
clc
inc
mov
sbbl
pop
lock
and
cmp
pop
call
ret
xchg
loopne
jb
add
ljmp
inc
cld
adc
lock
mov
sbb
rep
les
jnp
jbe
ljmp
in
imul
inc
int3
pusha
fs
aaa
jle
std
and
and
inc
dec
or
dec
mov
mov
or
xchg
filds
fbld
pop
icebp
adc
testl
incl
test
pusha
sbb
stos
cmpl
ljmp
orl
stos
mov
mov
pop
mov
jb
jb,pt
and
movsb
or
inc
inc
shl
cmp
in
pop
incb
mov
in
pop
add
call
out
mov
sbb
add
adc
push
rorb
mov
in
dec
movsb
add
mov
sbb
fisubrs
cmc
xchg
xor
mov
mov
lock
repnz
cmpsl
sub
loop
jg
jl
inc
ficoml
push
in
jmp
outsl
cmp
xchg
rclb
cmp
pop
and
iret
jge
mov
test
das
mov
pop
push
sub
nop
sbb
xor
pop
sbb
test
mov
adc
sbb
dec
imul
and
lret
adc
test
cmp
loop
add
adc
xor
jmp
sbbl
inc
orb
sbb
push
or
xchg
dec
movsb
cmpb
loope
mov
movsl
mov
xor
dec
add
mov
inc
sub
das
gs
mov
adc
mov
out
in
je
out
gs
adcb
es
mov
dec
adc
inc
inc
or
jbe
sub
std
add
pop
adc
xor
mov
cmp
icebp
in
mov
jg
mov
mov
ljmp
arpl
div
and
mov
loope
scas
pop
push
pop
stos
out
or
push
in
call
mov
pusha
or
movsl
es
pop
push
cmc
mov
xor
push
cld
jl
outsl
mov
aas
mov
jne
stos
fimuls
enter
testl
pop
repz
je
push
push
adc
repnz
decl
mov
adc
xchg
sbb
push
mov
test
stc
or
sub
sub
jg
lret
stc
pop
push
and
outsl
add
inc
aad
jge
mov
idivb
insl
incl
dec
es
xorb
xor
add
inc
ja
inc
jmp
outsl
ficoms
mov
jl
dec
inc
push
stos
int3
xchg
xchg
mov
shl
lock
mov
outsl
cmpps
hlt
add
adc
outsb
cld
mov
or
pop
and
ror
scas
ret
adc
cmp
push
cmp
add
stos
xor
mov
std
in
cmp
cmp
lea
les
jo
loope
jle,pn
cmp
dec
sti
inc
fdivrs
repnz
pop
jg
les
in
sub
push
mov
jecxz
fadds
shlb
mov
movb
xor
jno
loope
and
inc
lods
outsl
mov
repnz
leave
pop
xor
fldcw
cmpsb
lret
sbb
loope
sbb
js
xchg
or
dec
push
bound
push
inc
cltd
and
pop
adc
pop
loope
mov
and
test
stc
sbb
std
sarb
sbb
into
fdivl
sub
xor
sbb
leave
cmp
lcall
shl
add
outsb
imul
cmp
nop
mov
xchg
add
das
arpl
rcrl
and
lret
bound
fdivrs
adc
pop
dec
sbb
mov
stos
add
lods
out
mov
mov
movsl
ljmp
mov
call
cmp
insl
pop
mov
ror
push
xor
pop
aad
xchg
std
ja
push
and
std
and
fnsave
mov
pop
std
adc
movsb
jmp
pop
inc
mov
dec
stos
mov
jle
inc
adcb
xchg
add
icebp
lcall
outsb
scas
cmp
xchg
add
cs
inc
in
idiv
push
push
xor
cli
dec
push
jbe
loopne
movsb
inc
movsl
fidivrs
mov
sub
mov
fildll
push
xor
xchg
jb
jbe
loopne,pt
mov
shlb
push
pop
cmc
pop
pop
into
idiv
movsl
pushl
pop
push
sbb
sti
push
jge
push
add
aas
pop
sub
cmp
jg
cmp
testb
xor
out
enter
xor
adc
or
shlb
jo
cli
mov
scas
mov
loop
jecxz
test
push
call
xor
leave
sub
das
cld
sbb
sub
mov
sbb
or
cmc
outsb
cmp
fsubrs
arpl
pushl
outsl
scas
xchg
mov
jmp
sbb
dec
loopne
dec
into
jge
mov
push
incl
add
mov
jecxz
lret
or
movsl
mov
lret
push
jnp
xor
lock
rorb
or
or
mov
rcl
inc
mov
das
inc
aas
jle
ret
scas
xor
jo
jp
pop
in
fdivrl
pop
std
inc
mov
fucomp
test
into
aas
xchg
mov
aad
xchg
push
mov
sarb
jg
lock
xchg
in
repnz
adc
cld
nop
sub
test
mov
movsl
insl
cmp
sub
pop
leave
or
mov
lcall
or
movb
dec
ret
lcall
mov
push
inc
les
mov
mov
jnp
enter
or
cmp
or
hlt
frstor
mov
sbbb
incb
sub
inc
mov
dec
push
fcmovb
es
sbb
das
mov
sbbl
sti
mov
aam
push
xchg
ja
mov
pop
jne
push
adc
add
lcall
stos
cli
daa
sub
cltd
pop
movsb
in
ret
pop
hlt
mov
mov
xlat
sub
pop
movsl
das
mov
out
les
push
add
mov
inc
daa
cwtl
mov
inc
aam
jg
flds
test
dec
scas
jbe
fisttps
cmp
movsl
andb
cmc
cs
xorl
dec
sub
dec
das
jge
dec
iret
mov
testl
popl
ja
xchg
sbb
jge
cwtl
mov
cli
sbb
push
sti
pop
jp
hlt
sbb
jo
lret
dec
in
testb
arpl
jnp
lret
pop
xchg
xchg
lea
into
dec
fnsave
cmpsb
sbb
out
call
scas
add
and
mov
test
inc
pop
test
mov
clc
dec
in
mov
mov
xor
inc
mov
push
ds
in
inc
and
xchg
je
adc
add
add
dec
mov
push
dec
fsubs
push
lret
movsl
sbb
adc
cs
xor
fldt
dec
xchg
pop
mov
and
loopw
movsb
pop
std
add
inc
jp
jmp
insb
ljmp
add
cld
je
int3
jnp
sbb
fstps
pop
adc
dec
mov
pop
mov
jge
fwait
dec
mov
fldenv
push
les
icebp
inc
add
adc
pusha
jmp
mov
inc
rol
out
jp
add
adc
mov
addl
push
xor
or
jge
fisttpll
and
out
inc
ljmp
sbb
fxam
lods
cmp
lea
mov
nop
pop
cs
mov
inc
mov
nop
jbe
aaa
push
call
cmp
or
push
inc
or
enter
inc
out
or
sahf
sub
lahf
sub
cli
ja
inc
psrlw
adc
subb
mov
in
cmp
in
fs
ret
xor
lahf
lahf
bound
fcoml
loop
mov
adc
hlt
out
leave
or
mov
test
neg
xchg
test
ss
mov
mov
jo
lock
clc
incb
scas
ds
xchg
xor
pop
push
xchg
pop
out
push
xchg
mov
dec
adc
daa
mov
pop
mov
pop
inc
jg
test
test
push
jg
aad
stos
shrb
sub
in
call
cmc
pop
ret
lods
jmp
add
cwtl
xor
adc
cmc
adc
push
loopne
sti
push
dec
stc
rcrl
clc
aas
data16
or
nop
mov
adc
in
mov
xchg
and
mov
pop
aam
add
and
aad
adc
cs
mov
adc
push
lret
mov
pop
push
push
push
outsl
loopne
xorl
test
cwtl
ret
mov
mov
inc
sub
outsb
mov
add
das
in
ja
jnp
movsl
push
jnp
loope
movsb
mov
int3
lahf
add
shrb
dec
xchg
in
pop
sub
insb
insb
in
mov
test
cmpsl
ss
or
inc
icebp
pop
lock
mov
inc
mov
inc
sbb
inc
repnz
sub
push
pushf
xchg
mov
icebp
outsl
sub
pop
push
ljmp
mov
and
mov
xchg
outsl
mov
ljmp
int3
js
cwtl
or
and
and
lea
and
mov
push
adc
mov
push
xchg
xlat
push
sbb
mov
test
or
fsubrp
stos
jge
jno
ljmp
fisttpl
pop
ficomps
inc
mov
and
add
int3
hlt
inc
mov
imul
ficompl
pushw
loopne
inc
pop
mov
lcall
pop
lret
jns
arpl
pop
repnz
add
movsl
sbb
call
decl
fdivs
sub
adc
adcb
stos
fwait
and
push
sarb
pop
mov
pop
rcr
sarb
push
fidivrl
jns
xchg
cli
and
test
scas
sub
mov
loopne
jnp
dec
push
mov
mov
fldl
test
lahf
ds
aas
pop
rcrl
pop
and
cmpsb
insb
mov
jg
scas
ret
lods
mov
jne
repnz
icebp
or
or
iret
aam
js
sbbl
mov
and
aas
pusha
cld
addr16
sbb
leave
cli
inc
loopne
sbb
mov
out
loopne
inc
out
divl
adc
test
loopne,pn
sbb
or
ficoms
jnp
sub
mov
xchg
insl
mov
imul
bnd
outsl
sbb
enter
je
mov
les
jge
pusha
push
lcall
mov
and
push
shrb
add
xorl
sub
sbb
lret
and
cmp
mov
es
int3
mov
mov
test
int
ljmp
test
jmp
push
fwait
imul
jbe
push
dec
and
sub
ljmp
out
cli
ljmp
cld
inc
push
inc
popf
or
aas
dec
mov
stos
add
adcl
adc
adcl
and
lock
mov
imul
sbb
loope
push
and
aam
and
push
mov
std
lret
ret
addb
sbb
je
cmp
les
push
gs
dec
sbb
divl
add
pop
adc
imul
mov
or
bound
inc
shll
jmp
dec
cmp
or
lea
rolb
inc
loope
movsb
mov
or
test
xchg
jecxz
insl
inc
out
loopne
jle
sbb
sbb
cmpsl
mov
xlat
jae
jb
mov
in
push
lea
mov
jle
mov
ret
push
subl
test
mov
xchg
call
call
sarb
jmp
inc
pop
xchg
out
xor
ret
push
xchg
jecxz
jle
cmpsb
dec
std
jge
test
sub
call
inc
xchg
pop
test
cwtl
insb
icebp
cld
mov
ss
pushf
negl
mov
or
inc
addr16
adc
xchg
mov
imul
jne
cmp
dec
rol
sti
dec
outsl
std
mov
cmc
aas
lods
xchg
ficoms
and
lret
rolb
xor
jmp
xchg
adc
sbb
fwait
dec
fisubrs
lcall
inc
leave
push
mov
dec
mov
imul
shrl
insb
pop
stos
js
inc
jno
repnz
adc
sbb
add
mov
and
cmc
iret
cmpb
lret
int3
lock
adc
jmp
test
pop
cs
xor
push
xchg
mov
sahf
cmp
jg
js
push
rorl
call
nop
jp
dec
jl
adc
ret
addl
or
pop
aaa
or
es
and
mov
iret
mov
adc
fs
ljmp
mov
sbb
or
cmp
stos
or
incl
mov
aaa
mov
icebp
test
shrb
add
mov
insl
loopne
sbb
jg
push
cltd
inc
cmpsb
or
loope
dec
movl
iret
fs
out
jmp
ret
std
xchg
paddb
jno
das
les
mov
cmc
call
dec
push
pop
call
and
insl
sub
push
daa
cmp
cmc
push
testb
insl
mov
daa
imul
fstpt
inc
xlat
nop
inc
adc
pop
rcr
ret
hlt
cld
sbb
xor
std
loop
outsb
roll
orl
test
jl
mov
mov
cld
mov
roll
dec
scas
aaa
es
inc
adc
bound
mov
jae
fsubs
adc
push
fidivrl
add
cmp
shlb
xor
cmpb
jge
aas
sub
aaa
aaa
ficomps
fisubrs
push
fdecstp
je
add
pop
cli
mov
push
sub
lret
mov
pop
jecxz
repz
popf
xchg
push
scas
xchg
add
sub
lds
add
ja
aas
sbb
dec
unpcklps
sub
stos
push
cmc
incl
mov
loopne
mov
jp
xchg
outsl
mov
fldt
cmpsb
or
sub
sbb
pop
xchg
fwait
mov
jnp
pop
mov
or
xchg
sub
push
add
jo
jne
je
in
mov
loopne
add
pop
ds
clc
lret
and
inc
cld
aam
push
sbb
scas
adc
out
cmpsl
mov
arpl
sbb
data16
cmp
fcomps
mov
push
out
mov
cmp
sbb
xor
pop
stc
xor
xor
dec
mov
mov
jmp
mov
adc
fldln2
dec
hlt
decl
outsb
int
mov
test
cmp
ljmp
je
shll
mov
push
in
push
jne
pop
xor
fstpt
inc
addb
xorb
jecxz
mov
scas
int
jae
xchg
hlt
int
loop
mov
jp
call
sbbl
inc
and
dec
outsl
shrb
push
xchg
jle
shll
inc
cmc
jbe
adc
sub
es
ljmp
outsl
xchg
cmp
mov
jmp
ror
sbbb
or
cmpsl
jecxz
cs
mov
or
mov
shll
test
aas
xorb
push
mov
rolb
in
or
pop
loope
aaa
movsl
data16
je
cmp
mov
xchg
in
or
pmulhw
xor
in
aam
adc
inc
fsubr
cli
ret
aad
clc
enter
fdivrl
cmpb
fldcw
mov
or
ficoml
mov
mov
mov
add
pop
ret
pop
mov
and
test
das
movsb
jbe
leave
pop
push
push
std
add
sub
jg
mov
dec
adc
or
cltd
iret
iret
adcb
push
outsb
movsb
cmp
mov
add
and
cmp
pushl
js
orl
pop
add
adc
sub
sbb
sub
fadd
xor
cmp
xchg
dec
push
mov
mov
sub
add
loopne
shll
scas
cmovp
sbb
xor
mov
cmpsb
or
pop
outsb
movsl
cmp
jbe
filds
push
scas
and
jp
out
mov
mov
subb
aaa
ret
xor
sbb
pushf
in
xchg
test
and
inc
inc
sbb
outsl
push
popa
mov
lea
add
xorl
add
sahf
dec
fstpl
sub
loopne
push
scas
addr16
ret
sub
mov
pop
rcl
in
inc
ss
jg
inc
rcrb
or
leave
movsl
clc
popf
sbb
sub
arpl
je
ret
xor
xor
and
mov
mov
sub
les
fmull
jecxz
ret
test
xchg
xchg
push
in
fdivr
push
roll
out
dec
stos
divb
pop
into
test
aaa
add
push
push
jl
inc
testl
in
fistpl
pushf
mov
jmp
jno
inc
push
rcll
mov
sub
inc
repz
enter
popf
cli
cmpsb
or
jno
imul
or
adc
out
mov
push
shlb
ret
xchg
push
test
sbb
jle
pop
out
xor
inc
jnp
bound
test
dec
pushl
jne
add
xor
dec
stos
mov
enter
dec
or
jne
sbb
sub
shlb
rcr
mov
mov
mov
jmp
arpl
or
adc
pop
sbb
xor
push
mov
mov
test
adc
mov
dec
cmp
sbb
in
push
lret
arpl
std
test
mov
add
adc
mov
mov
push
les
negb
loop
subl
cmp
rcr
sahf
fs
adc
mov
lods
into
or
test
pop
push
scas
push
subb
jb
cmp
xchg
inc
insb
in
scas
lock
fs
pop
and
stos
xchg
rorl
adc
sbb
movsl
xlat
stos
pop
pusha
inc
loop
xchg
mov
jno
adc
and
leave
mov
pop
inc
or
fsubl
mov
aam
push
dec
inc
jp
sub
incl
nop
add
adc
dec
test
add
inc
pop
or
std
add
push
add
xchg
adc
add
pop
aam
leave
xor
mov
cmp
mov
jg
jae
aas
mov
out
xchg
decl
add
cwtl
jns
fstpt
mov
cwtl
sahf
jecxz
mov
incb
mov
gs
cs
fnstenv
enter
mov
outsl
mov
loopne
and
add
out
outsl
xor
subb
mov
enter
or
jnp
mov
cmpsl
lret
pop
jb
mov
xchg
pop
rclb
ss
mov
pusha
jg
dec
xchg
jno
movsl
js
xor
das
mov
in
outsl
adc
stc
test
and
dec
pop
cwtl
mov
sbb
sub
and
test
pop
rolb
mov
jg
push
push
ja
test
xchg
sbb
sub
sbb
test
int
cmpsl
jne
and
inc
mov
adc
into
arpl
push
mov
stos
jnp
sub
adc
mov
stos
ss
bound
cltd
mov
mov
add
adc
pop
fcomps
sub
cmp
aas
subb
jb
pop
push
fs
imul
mov
pushf
cmc
sub
cltd
dec
xchg
in
inc
lahf
lods
dec
mov
std
ja
push
int3
mov
mov
mov
ss
rcll
test
rolb
push
in
inc
hlt
pop
jns
dec
jg
scas
cmp
lds
adc
je
aaa
cli
mov
xor
jb
and
leave
cwtl
js
ja
push
mov
fwait
xchg
test
adc
jnp
out
mov
enter
mov
sarl
jmp
aad
or
in
cmc
push
inc
inc
mov
push
addb
sub
shlb
cmp
bound
adc
lock
jae
lods
pop
cli
add
jge
xlat
repz
lret
mov
icebp
sti
push
into
xor
cmpsl
mov
scas
mov
leave
aaa
imul
cmp
repnz
or
jg
dec
adc
sub
test
and
sarb
movsl
xchg
lods
jne
sbb
jp
ljmp
mov
adc
jge
pop
inc
sbb
adc
sbb
xor
jmp
decl
jp
adc
lock
sub
bound
mov
jmp
pop
and
sti
push
adc
inc
aad
or
lahf
xorl
adc
les
mov
jbe
mov
and
mov
sarb
mov
cmp
ffree
mov
push
cmp
and
das
das
test
jge
leave
inc
sub
add
stos
ret
lock
out
hlt
je
jl
shl
popa
arpl
int3
mov
clc
jmp
jl
daa
sub
movsb
or
popl
pop
hlt
sbb
repnz
or
xchg
push
dec
mov
stc
pop
add
cmp
data16
pop
push
xchg
sub
subb
lods
incb
sbb
aad
shrb
adcb
sub
imul
fists
mov
fsubl
dec
sbb
ds
aaa
insl
cmpsb
aaa
dec
out
inc
pusha
pop
push
jg
mov
aam
jae
addr16
mov
adc
aam
adcl
fisttpll
cmp
loop
ffreep
movsl
adc
sbb
inc
lea
pushf
push
dec
pop
jne
call
out
jno
and
imul
or
add
ja
movsb
or
xchg
test
aam
add
ret
daa
rorl
or
int3
lret
fs
call
push
dec
mov
inc
push
out
dec
dec
mov
or
es
sbb
shlb
subl
and
mov
sbb
jmp
or
mov
or
mov
cmp
jg
push
pusha
add
xor
mov
add
ret
lds
jle
out
jmp
aad
or
rol
or
cld
mov
test
dec
rorl
aaa
ret
insl
or
push
ret
pusha
jbe
ret
rclb
insb
out
pop
pop
mov
std
push
dec
sbb
test
pop
in
dec
stc
mov
shrb
and
outsl
and
sbb
push
movd
push
jns
jmp
cmp
je
addr16
inc
xchg
cmpsl
stos
mov
and
in
outsl
add
pop
ljmp
push
sbb
sbb
fs
pusha
ret
aaa
add
cmp
mov
sub
sub
xchg
xchg
mov
ret
sbb
add
dec
jg
movsl
push
dec
lahf
leave
adc
inc
xchg
aas
jp
movsl
jle
xchg
aaa
in
dec
aaa
in
sub
mov
fldt
or
outsb
jnp
cli
pop
ja
sbb
imul
or
xchg
push
jle
mov
test
outsb
das
cli
pop
scas
test
fidivrs
lds
gs
cmpsb
and
dec
loope
or
adcb
clc
mov
cld
inc
loop
and
add
jecxz
in
lahf
bound
je
mov
test
adc
add
add
ret
pop
push
test
pop
les
add
sbb
pop
adc
movsl
lahf
push
or
rorb
cld
bndldx
aaa
ljmp
loop
lods
adc
push
arpl
repz
dec
or
push
sub
out
jmp
shl
xor
xorb
jp
cld
mov
cmp
add
push
rcr
shll
jbe
inc
push
loope
fs
xchg
mov
out
dec
arpl
inc
test
shl
lods
jns
leave
add
rcrb
pavgw
fs
in
pop
cmpsb
and
xchg
xor
sub
sarb
ret
pop
adc
hlt
xchg
sbb
jmp
push
hlt
aas
shlb
test
nop
push
or
xor
std
ffree
adc
add
call
jecxz
aam
mov
mov
adc
xor
iret
outsl
aaa
loop
sbb
out
sbb
cld
add
xlat
pop
adc
jl
fstl
pop
or
int
sub
dec
jl
lds
les
lret
aad
repnz
inc
das
mov
dec
jnp
jno
int3
dec
hlt
jmp
cmp
popl
or
push
inc
repnz
mov
dec
jmp
add
cmp
add
mov
aas
icebp
mov
loope
push
cmp
xchg
shrb
xor
outsb
pop
ja
mov
mov
ret
movsb
mov
inc
sbb
add
jge
add
inc
popa
push
mov
inc
xor
and
jb
in
sub
das
jbe
pop
cwtl
xchg
jo
bound
adc
pop
push
cmp
fdivrl
or
or
sbb
mov
inc
push
pusha
fadds
pop
push
mov
std
dec
aaa
lds
sub
mov
sarb
inc
in
mov
lock
in
mov
dec
fldl
mov
mov
jle
addr16
out
jno
xchg
or
adc
shrl
or
std
xor
movswl
mov
fbld
pop
inc
or
shrb
addr16
test
filds
mov
ljmp
lahf
stos
add
inc
dec
lods
clc
sub
or
sub
daa
std
mov
cld
push
sbb
pop
mov
cmc
lret
mov
sub
ja
ret
sub
xor
mov
mov
sbb
je
add
es
inc
xchg
inc
insl
testl
hlt
ss
sbb
outsl
and
dec
movsb
jb
aad
sub
dec
movsl
stc
pop
dec
scas
sbb
fistpll
jbe
mov
or
lret
mov
mov
inc
sar
mov
rorl
adcl
pop
test
and
mov
or
cld
push
xchg
es
add
pop
pop
stos
add
mov
pop
mov
pop
jmp
xchg
fnstsw
sbb
push
sub
push
test
and
das
pop
xor
dec
jge
adc
jmp
and
mov
movb
cmp
jnp
sbb
scas
jp
xor
push
add
xchg
lods
sub
sub
push
mov
cmc
rorl
mov
fisubs
inc
mov
aam
je
outsl
jmp
lock
cli
inc
add
rorl
or
sbb
sub
cmp
sahf
clc
inc
aas
js
test
push
pusha
sub
cwtl
cmp
enter
lsl
lds
std
add
or
cwtl
leave
orl
fcomi
and
jg
push
lea
xchg
inc
clc
dec
orl
movsb
test
stc
add
mov
jge
sub
outsl
dec
pop
adc
mov
fisttpll
das
mov
inc
inc
mov
dec
pop
cmp
shlb
or
aad
jb
fcoml
decl
inc
fcoml
cmp
ds
outsb
xchg
xor
sbb
es
push
in
in
lahf
mov
pop
aaa
adc
fildll
push
push
aaa
add
lret
rcrb
mov
mov
fdivrl
pop
pop
mov
sbb
dec
cmp
cmpb
lcall
mov
rorb
inc
add
inc
inc
pop
push
adc
sarl
rorb
jbe
mov
fcomip
mov
pop
sub
pop
jle
outsl
loope
fdivrl
repz
data16
das
add
imul
push
mov
jo
out
dec
cli
loop
push
out
xchg
fisttps
in
stos
outsl
fwait
add
xchg
ja
adc
out
mov
and
push
addb
mov
push
mov
loopne
push
lds
jg
dec
std
out
aaa
push
xchg
outsl
jg
mov
push
inc
xchg
cwtl
or
jl
lea
jae
stc
inc
adc
ds
and
gs
push
or
mov
xor
add
bound
inc
inc
and
push
sub
test
add
mov
adc
bound
sti
mov
mov
pop
xor
aam
mov
mov
out
inc
inc
jp
push
lret
movsl
ret
dec
sti
xchg
es
cmp
pop
ljmp
or
test
js
inc
jg
and
cmp
pop
xchg
aad
cmp
xchg
das
daa
pusha
fdivr
test
jg
imul
jg
push
aad
mov
push
jmp
mov
clc
decb
imul
pop
js
push
pop
leave
rcrb
shlb
pop
cmpl
test
xchg
jne
push
into
mov
mov
mov
mov
mov
dec
cmpb
jge
or
mov
push
mov
dec
dec
arpl
inc
pusha
arpl
push
fdivrp
lock
pushf
xchg
and
sbb
nop
adc
daa
xchg
pop
orb
fdivl
and
mov
sub
in
inc
pop
stc
mov
add
and
repz
cmp
push
cld
and
cmc
xchg
mov
xchg
in
inc
mov
ss
mov
mov
lea
add
leave
and
outsb
fwait
in
movsb
in
aaa
loopne
inc
jmp
xchg
iret
scas
ljmp
adc
shll
loope
pusha
mov
add
in
jmp
and
xchg
mov
jne
inc
sub
sbb
fsub
nop
sub
pop
out
leave
punpckhbw
mov
es
and
in
sbb
pop
or
adc
cwtl
mov
fmull
jnp
xor
dec
sub
rcrl
sbb
adc
xchg
testb
mov
pop
adc
iret
jp
lods
subl
pop
aas
fnop
lock
ljmp
gs
adc
pop
dec
orl
xchg
fidivl
hlt
xorl
pop
out
xchg
mov
and
pop
loop
call
loop
std
ja
sbb
push
dec
popa
js
bound
cmpsl
add
leave
cmc
sub
ja
daa
dec
jmp
outsl
add
fstpt
inc
push
adc
lods
xlat
cmp
loope
fsubrs
pop
loopne
or
in
cmp
mov
adc
outsl
jecxz
xchg
data16
inc
mov
pop
mov
ja
push
xor
lret
std
cmp
hlt
xchg
dec
mov
push
cmpb
int3
and
out
mov
orb
xorl
pop
add
xchg
adcb
pop
call
inc
in
xchg
mov
or
xor
mov
jecxz
test
fcmovnbe
sti
scas
dec
mov
sbb
mov
iret
inc
cmpl
lcall
mov
sbb
insl
xchg
xchg
or
push
outsb
mov
or
mov
add
scas
fucomi
cmp
repnz
mov
sub
sbb
fildll
or
icebp
mov
or
mov
in
lcall
lea
call
dec
dec
jno
inc
inc
test
lahf
mov
xorl
or
xchg
mov
sti
push
rcrl
rcl
roll
cld
call
push
jp
ljmp
sbb
rorl
mov
pop
js
inc
ss
adcl
aaa
sahf
push
movswl
mov
dec
push
sub
fadd
inc
jno
inc
fs
mov
cmp
pop
decl
cmp
mov
sarl
inc
add
negb
outsl
loope
push
dec
mov
cmp
testb
sbb
lock
in
cmc
or
ret
adc
pop
enter
ficoml
gs
sar
cs
cmp
rorl
aam
inc
test
pushf
xor
jl
xor
sbb
xor
add
inc
cmp
int3
imul
mov
movsl
ljmp
and
xor
mov
fidivrl
add
push
jne
or
sbb
xor
or
inc
je
popf
push
fnstsw
aam
inc
nop
mov
das
into
jecxz
cmp
fcmovu
test
sbb
inc
sub
loop
je
lods
pop
sub
inc
fstl
or
or
in
and
dec
bound
push
shlb
notb
pop
add
and
js
push
jns
jg
sbb
lods
ja
adc
ja
dec
push
and
sbbb
fcompl
out
je,pt
in
mov
lret
and
incl
jge
inc
xchg
add
jmp
insb
fisttpl
xchg
xchg
int3
aam
jmp
push
lock
shr
pop
addr16
sub
fadds
or
test
xchg
dec
hlt
pop
mov
cs
adc
xchg
fidivl
cmp
xchg
cmp
xchg
xchg
xor
add
and
mov
push
and
pop
imul
call
dec
adc
in
int
shrb
popa
or
fwait
outsb
dec
enter
and
das
xchg
mov
andb
lea
pusha
inc
cli
test
jne
test
lcall
lock
cmp
imul
xchg
adc
add
mov
in
testb
jno
leave
mov
lahf
es
pusha
add
pop
test
jne
or
es
enter
roll
mov
sbb
out
mov
push
jb
pusha
inc
ja
mov
std
call
adc
jae
sub
leave
xor
mov
push
lret
and
test
orb
rcr
iret
sub
mov
cltd
ret
add
orb
pop
nop
inc
in
push
mov
idivb
mov
sub
and
jns
adc
stos
iret
jbe
clc
aam
mov
gs
or
or
sbb
xchg
sbb
mov
add
inc
push
ret
lods
das
rorl
mov
shll
pusha
testl
popf
mov
xchg
jecxz
aad
and
mov
int
jg
out
mov
fisttpll
mov
into
incb
shll
stc
jl
and
imul
insl
cmp
ret
nop
mov
lds
das
mov
aam
pop
jne
jb
pop
clc
scas
xor
jecxz
jle
push
leave
add
data16
aad
lahf
popa
jg
inc
jp
data16
xor
push
inc
cld
mov
ficompl
push
inc
cmp
not
aas
loop
cmp
fbld
mov
sarl
add
lret
sub
jmp
inc
cmp
hlt
ret
adc
pop
ret
sbb
sub
mov
stos
jge
push
jae
ljmp
les
sbb
add
and
jb
mov
mov
in
dec
inc
rcl
push
stos
lock
outsl
add
clc
and
loopne
testb
mov
or
adc
in
out
jo
pop
enter
add
mov
xchg
xlat
icebp
push
sbbl
inc
mov
clc
shl
mov
insl
ljmp
mov
test
pop
cwtl
in
cmp
loop
xor
jge
jb
fimuls
pop
and
sub
xchg
loope
xchg
mov
lea
sub
fsub
fcmovb
mov
jle
cwtl
imul
dec
push
popa
js
sbb
or
nop
ss
or
aas
fisubl
or
loopne
inc
jno
stos
icebp
call
mov
sbb
mov
pop
xchg
mov
mov
pop
insb
mov
mov
dec
outsb
pop
fildll
sbb
movsb
in
jnp
lods
call
test
sahf
mov
and
sub
jne
push
or
add
outsl
adc
outsb
ss
sub
movsl
insl
mov
test
jge
xor
mov
fisttps
mov
push
int3
lret
js
inc
xor
testb
outsl
xchg
dec
mov
dec
jo
in
pop
sar
and
mov
out
das
sub
lcall
pop
pop
pop
sbb
sub
sbb
add
push
loop
xor
clc
mov
xor
jge,pn
sar
jg
out
pop
fwait
dec
adc
jle
cmp
in
mov
pop
push
mov
dec
xorl
adc
pop
jne
dec
cmp
mov
mov
shll
call
jl
mov
jg
dec
dec
push
clc
mov
adc
inc
push
loope
xchg
jo
or
je
push
outsl
xor
mov
aaa
jbe
cmpsl
call
insb
mov
lea
lret
fildl
cli
jg
mov
jle
push
sbb
in
mov
stos
fldenv
inc
adc
sub
nop
nop
cli
sbb
aad
aas
cld
lea
fdivr
testb
test
insb
or
xor
sbb
test
gs
iret
adc
lods
and
jle
insb
and
ds
push
jo
adc
lret
dec
xchg
inc
sti
inc
icebp
subl
and
and
pop
and
ljmp
loop
inc
mov
sub
mov
dec
adc
lea
mov
xchg
dec
inc
mov
sbb
ss
push
add
inc
mov
mov
rcll
testl
xor
push
adc
dec
push
xor
mov
adcb
inc
push
inc
push
push
sti
push
leave
arpl
ja
sub
repz
fldcw
mov
mov
mov
loop
pusha
and
push
push
mov
push
mov
test
and
outsb
pusha
sti
mov
andb
push
jne
pop
or
ljmp
jne,pt
mov
sahf
push
mov
test
test
pop
nop
je
sub
mov
in
sbb
call
mov
add
jle
mov
push
adc
jb
sub
push
push
jnp
jns
adc
sti
pushf
fsubs
fsubs
xor
inc
insb
cmp
push
insb
mov
mov
std
jge
repnz
lea
xor
je
mov
jg
jo
sbb
push
push
in
test
insl
jne
jbe
outsl
inc
cwtl
xorb
jno
push
ss
js
popf
sub
xchg
adc
fstps
dec
leave
xchg
dec
inc
pop
rorb
ss
push
jbe
dec
dec
in
mov
rorl
aaa
xor
fwait
in
push
add
andb
ss
test
push
mull
xchg
inc
xchg
je
pop
sbb
aam
ss
jb
int3
adc
or
jne
fisubs
les
xlat
movsl
dec
je
dec
repnz
enter
dec
ret
mov
nop
adc
mov
cmpsl
add
pop
jbe
insb
pop
add
jne
push
add
sub
ja
inc
neg
mov
push
inc
dec
mov
inc
dec
sub
add
sar
rcll
roll
shl
fidivrl
filds
neg
ret
outsb
jecxz
push
cs
cmpxchg
dec
sarb
mov
mov
data16
jb
sbb
mov
fs
xor
aas
and
sbb
lea
inc
cmpb
lcall
xor
pop
xlat
and
cmpsl
lods
ret
mov
add
std
cmpb
mov
addr16
inc
je
ja
mov
nop
add
dec
rcrb
xorl
mov
cld
dec
popf
pop
sti
imull
test
inc
les
pop
mov
sub
mov
lea
fidivs
sub
imul
jl
jns
cmp
xorl
xchg
jo
icebp
add
or
aaa
pandn
and
js
inc
xor
cld
subb
fsubs
sti
incl
pop
dec
neg
dec
pushl
mov
pop
not
and
or
aaa
fisubl
inc
jb
adc
imulb
insl
sbb
inc
or
daa
or
add
divb
in
rolb
in
addr16
not
daa
inc
dec
not
mov
adc
out
hlt
push
inc
or
jns
pop
sti
lea
cmp
dec
inc
add
andb
fistps
pop
inc
pop
insl
pop
dec
sub
add
inc
mov
dec
add
inc
push
aad
fidivrs
flds
pop
sub
add
dec
inc
dec
mov
lret
inc
push
cmp
rorb
dec
mov
dec
cld
or
sahf
shll
hlt
jne
leave
sbb
das
inc
hlt
add
xor
fisubrs
jns
outsl
ja
test
or
addr16
dec
push
dec
push
pop
inc
and
cltd
in
jp
cmp
and
push
leave
stos
xor
add
bound
movsb
xchg
cmp
out
xchg
jb
inc
jbe
call
inc
adc
test
or
adc
fbld
inc
mov
leave
das
mov
dec
xor
out
sbb
or
in
subb
les
das
mov
inc
jmp
jne
insb
cmp
lock
aas
movsb
pop
push
leave
pop
outsb
mov
xchg
insb
sbb
push
je
push
std
lcall
cmc
and
or
ds
mov
inc
mov
or
shlb
pop
das
sti
adc
xor
out
mov
push
push
fnstenv
and
outsl
cli
push
push
xchg
push
add
push
push
daa
inc
jecxz
jmp
push
jbe
jle
mov
xchg
dec
push
pop
add
dec
pushl
xor
add
mov
subb
divb
dec
cwtl
lret
push
push
shlb
jl
rcr
lock
adc
push
xchg
jo
lds
add
inc
rcrb
push
ja
dec
cld
dec
jbe
dec
sub
gs
jbe
movsb
xchg
mov
push
push
xchg
mov
rorl
pop
adc
mov
mov
pop
cli
fldt
mov
dec
mov
lods
dec
dec
add
inc
inc
xor
loope
adc
roll
js
add
leave
pop
pop
mov
aas
push
daa
pop
movsb
push
outsb
inc
inc
jle
add
je
push
inc
adc
ficoms
out
push
or
push
adc
popa
out
subl
mov
notl
xor
adc
inc
ds
test
pop
mov
adc
pop
inc
clc
jp
add
and
push
jb
testb
adc
dec
les
addr16
or
xchg
arpl
mov
je
mov
ret
push
std
sbb
pop
movsl
sar
rol
nop
js
dec
iret
out
or
sbb
out
roll
lds
dec
lea
push
sbb
sub
imul
rclb
cmp
push
jmp
jns
jle,pn
loopne
fdivs
push
stc
cmp
add
test
lock
mov
mov
mov
insl
mov
add
in
lea
hlt
mov
inc
mov
in
push
pop
jno
mov
add
mov
inc
loopne
insl
jg
fs
nop
adc
push
das
cs
or
add
cwtl
test
adc
push
xor
ss
imul
mov
sti
cs
xchg
push
xor
inc
pop
rorb
add
notw
jo
mov
lds
lea
rol
dec
or
pop
inc
aaa
insl
mov
es
ret
dec
xlat
add
shrb
pop
cmp
cmp
insl
inc
lahf
das
mov
shrl
inc
ja
rcrl
add
out
xchg
jg
and
cwtl
push
push
mov
pop
test
inc
popa
or
xor
jnp
push
xor
loop
sbb
jecxz
cmp
ret
inc
loopne
or
push
add
fprem
pop
data16
push
inc
pop
cmp
hlt
std
sbb
sbb
int
dec
dec
xor
popf
jae
xchg
dec
repz
or
push
adc
aaa
push
inc
loop
xor
jnp
sti
lret
hlt
jo
push
mov
xor
jno
test
jecxz
fsubs
ds
inc
fwait
hlt
xor
push
pop
sub
push
xor
cmp
dec
pop
inc
adc
pop
insl
xchg
sbb
dec
push
gs
popf
aad
mov
scas
mov
loopne
frstor
dec
int
sub
xchg
inc
mov
inc
test
pop
push
and
ret
sub
in
xor
and
ss
or
test
add
lahf
sbb
jnp
clc
mov
cmpsl
testb
add
push
dec
mov
or
test
jne
je
xor
cld
ficoms
push
jmp
push
inc
push
or
sbb
push
das
cmpl
mov
mov
gs
mov
xor
inc
add
sti
idivl
mov
xor
dec
jl
inc
test
dec
dec
imul
out
jnp
nop
outsl
dec
jns
dec
jbe
jle
ja
loopne
ja
and
xor
add
js
pop
adc
sbb
jo
movl
pop
dec
xor
ret
pop
sub
cmp
add
push
movb
mov
jp
pop
mov
sub
dec
mov
aaa
cwtl
mov
and
test
xchg
cwtl
dec
mov
outsl
test
adc
cmp
push
mov
jmp
jl
dec
test
das
cmc
sub
or
lea
inc
sub
mov
outsl
leave
pushf
push
sub
sub
xchg
jbe
jmp
sahf
pop
inc
sbb
and
inc
inc
dec
jp
xor
push
inc
lret
push
add
inc
gs
lahf
sar
and
sub
add
mov
add
fs
add
leave
jbe
push
inc
pushl
dec
jbe
push
dec
popa
and
xor
pop
add
arpl
pop
xchg
add
hlt
jb
add
cmp
sarb
mov
cmp
aas
push
add
in
add
push
sbb
imul
lcall
subl
jnp
and
xadd
inc
into
or
and
sub
popf
jecxz
add
arpl
push
jp
inc
std
das
push
mov
sti
mov
std
sub
push
adc
push
pop
movsb
and
cli
ret
movsb
arpl
fxch
add
adc
inc
mov
jmp
dec
jne
add
sbb
pusha
orb
add
mov
add
mov
adc
mov
movsl
or
add
jl
es
cmp
cmp
popa
mov
fisttpl
cmp
inc
je
dec
js
push
mov
mov
dec
xor
mov
scas
rcl
jae
inc
add
call
cmpsb
enter
ds
sbb
add
or
jns
orl
inc
pop
jl
lods
orl
push
cwtl
ret
push
icebp
testb
add
xor
movsl
mov
ss
xor
pushl
ror
jnp
dec
mov
mov
test
hlt
pop
iret
add
jae
repz
mov
lock
pop
jecxz
jb
pop
clc
data16
imulb
add
xor
adc
sub
mov
lock
push
pop
or
jle
lret
arpl
xchg
out
test
add
in
cmc
jle
push
popw
mov
mov
pop
jnp
les
mov
and
inc
addr16
push
push
adc
fbld
mov
cs
add
mov
imul
lar
testb
push
cmp
cs
push
pushf
cmp
adc
push
xchg
test
sub
testb
paddw
fldcw
lahf
pop
imul
xchg
mov
jno
add
fistl
push
sahf
xor
aaa
repnz
pop
or
pushf
test
inc
pushl
cwtl
icebp
and
frstor
and
pop
js
cmp
add
push
add
movb
cmp
rol
cmc
iret
inc
mov
test
outsl
enter
nop
xchg
movsb
testb
dec
push
lock
xchg
mov
jmp
mov
sub
sbb
add
ret
movsb
lods
jns
test
mov
cld
pop
or
inc
lea
mov
stos
or
int
and
jg
incl
push
aam
add
inc
nop
adcl
das
inc
arpl
push
push
xor
inc
mov
dec
js
test
add
lcall
dec
push
movsb
add
push
outsb
insb
mov
lods
jbe
pushl
fstpt
add
je
dec
loopne
stos
test
lods
lds
pop
pop
je
outsl
mov
aad
sub
adc
push
jae
repnz
adc
sub
aad
dec
inc
jecxz
in
in
in
lea
cld
stc
scas
sbb
adc
fmulp
repz
push
pushf
add
lret
add
jle
es
adc
dec
std
lcall
roll
fcomip
bound
adc
push
shrb
ret
ds
ds
aad
mov
adc
shrb
adc
lret
js
mov
iret
cld
iret
insb
fnsave
cmp
jle
in
add
or
xor
mov
loopne
push
pop
jmp
iret
inc
sarl
gs
sub
fisubrs
lea
clc
lret
outsb
mov
movsl
pop
adc
xor
jg
ljmp
xchg
loop
mov
sbb
popa
cli
xlat
or
sbb
sbb
pop
fcmovu
jle
je
inc
icebp
and
int
add
adc
jmp
out
xbegin
stos
add
sbbb
dec
call
push
pop
fmuls
adc
pushl
loopne
test
orb
iret
pop
push
das
jge
add
or
cld
sbb
lods
imul
push
add
add
std
and
mov
mov
cltd
das
clc
adc
mov
jge
pop
lret
fs
and
inc
jp
jae
push
add
mov
lods
je
cmp
fdivrp
inc
sti
and
mov
and
insb
inc
fistpll
push
test
sbb
outsl
mov
les
mov
jmp
enter
ret
rol
int3
jecxz
je
push
and
sbb
adc
mov
push
jecxz
xor
push
sub
mov
jae
popf
add
xor
out
fdivp
xchg
inc
std
je
repnz
inc
ja
xchg
mov
pop
add
or
pop
sub
sub
popa
jge
mov
ja
mov
les
xchg
cs
repnz
xlat
push
aaa
push
sbb
addb
mov
cmpsl
daa
inc
dec
daa
or
xchg
xor
dec
outsl
or
lret
je
add
cld
jo
mov
bound
mov
mov
adc
mov
loope,pn
lock
testb
test
push
pop
xchg
cmp
call
clc
xor
cs
daa
nop/reserved
std
push
jns
mov
add
mov
jae
inc
jl
mov
push
pop
push
or
fildll
in
xor
lahf
sbb
sub
fwait
pop
push
fstpt
and
or
push
xchg
clc
and
cld
add
out
out
sub
ljmp
and
push
mov
std
outsl
ja
mov
mov
xor
and
push
inc
add
jnp
in
and
decb
rclb
pop
cli
lahf
imul
mov
lods
stc
xchg
xchg
shlb
loope
push
mov
rcr
call
pop
jb
xor
sbb
lahf
roll
sti
ret
xor
jne
push
ds
out
filds
cmp
mov
adc
add
add
inc
pop
dec
movsb
fldt
lahf
sbb
mov
mov
add
sbbb
lcall
int
mov
mov
inc
jae
mov
dec
fldt
pop
inc
cmp
xor
or
mov
pop
pop
icebp
xchg
daa
mov
push
cltd
push
fisubrs
test
xor
leave
fildl
pop
fists
stc
jecxz
jecxz
shrb
pop
push
mov
push
cs
inc
and
cmc
in
fnsave
pop
push
or
mov
mov
test
jo
and
push
push
add
jns
fistpll
sti
add
xchg
icebp
pushf
sbb
jo
lea
push
or
mov
lock
call
ljmp
cmp
scas
andl
lea
jmp
add
xchg
xor
cmp
cmp
test
cmpsb
lcall
mov
aam
mov
cmpsb
shlb
test
jge
jmp
daa
mov
cmp
std
scas
jo
xchg
cltd
stos
lgs
dec
xor
jae
fidivrs
fwait
pop
lea
clc
hlt
lock
jg
inc
inc
test
or
add
rcl
enter
jecxz
or
jg
pop
out
cmp
mov
add
inc
push
inc
daa
pop
fdivr
mov
loop
xor
xor
roll
xchg
or
je
inc
pop
xchg
lret
lock
pop
jmp
pop
pop
pop
cmpl
ds
and
inc
in
in
cwtl
pop
add
nop
lcall
decl
jmp
loopne
jns
ljmp
mov
mov
sub
mov
pop
es
xor
or
enter
or
add
fcmovnbe
adc
cmp
int
sti
add
pushf
xchg
sub
and
fmul
leave
lods
int3
scas
mov
dec
jg
inc
or
xor
sbb
xchg
lds
pop
jle
push
pop
pop
andb
push
jmp
std
sub
adc
popa
sti
icebp
enter
cmp
sbb
xlat
adc
lock
mov
repnz
test
dec
pop
pop
xor
pop
xchg
xchg
pop
inc
mov
pop
stos
mov
push
and
outsl
in
jns
push
adc
dec
outsb
int3
and
mov
sub
inc
leave
mov
subb
or
dec
add
lcall
jge
aam
repnz
dec
outsl
vmovaps
dec
inc
push
outsb
sbb
mov
pop
mov
mov
imul
add
xchg
imul
test
xchg
inc
and
adc
mov
adc
nop
mov
inc
pushf
mov
ds
mov
or
flds
inc
aaa
mov
decb
jg
repz
push
inc
loopne
out
jb
jecxz
decl
adc
pushf
mov
cmpsl
loopne
inc
shll
lahf
mov
mov
dec
ljmp
repnz
mov
sub
neg
xchg
jmp
aad
pop
add
mov
imul
popf
cli
daa
xor
outsl
pop
fistpll
add
jno
push
daa
shrb
pop
orl
das
test
ljmp
xor
or
and
fisttpl
idivl
push
xchg
mov
cmp
mov
ret
xchg
push
pushl
movsb
stc
out
clc
insl
sti
or
ret
push
xor
push
bound
sti
orb
test
xor
adc
icebp
enter
je
add
mov
xchg
insb
cmpb
cmc
mov
clc
xchg
xor
arpl
dec
and
jo
cmc
movsb
mov
and
cmp
inc
push
jb
mov
in
or
orb
cld
in
repnz
lds
jge
js
push
xchg
stos
mov
xchg
loopne
ficoms
test
or
inc
inc
pop
cwtl
inc
lock
test
xchg
sub
xlat
fmuls
jecxz
push
sti
ret
pusha
mov
rorb
nop
adc
lret
xorl
and
or
rol
jns
jne
ljmp
jp
inc
sti
lods
pop
mov
dec
xchg
cmp
sub
lcall
inc
dec
add
mov
shll
loope
fbld
sub
es
call
pop
loopne
leave
mov
adc
stos
shll
fmul
mov
mov
dec
orl
ljmp
sbb
cs
pop
sbb
adc
cmc
push
push
mov
or
shl
aaa
sbb
addr16
xchg
ret
std
dec
xchg
es
enter
in
xor
adc
std
pop
sbb
and
push
mov
sbb
mov
sub
data16
stos
pusha
pop
outsb
outsl
xchg
aam
imul
ret
mov
sub
seto
call
xor
jo
add
pushl
pop
sbb
cltd
dec
and
fcmovnbe
inc
push
and
ret
inc
outsl
inc
mov
subb
adc
mov
cmp
xchg
ljmp
adc
push
pop
cmp
add
add
mov
daa
inc
mov
into
xor
shrb
insl
call
scas
inc
jp
out
fbld
adc
inc
adc
outsl
out
test
inc
dec
faddl
ret
sbb
bound
dec
pushf
mov
in
add
or
mov
pop
pusha
fldt
decl
sub
ljmp
test
ds
pop
inc
sub
in
inc
push
mov
mov
shll
sub
sbb
sahf
cli
das
jge
cld
mov
hlt
jle
mov
fldt
imull
jae
outsl
sbb
scas
sahf
sti
pushf
mov
movsb
mov
or
sbb
sarl
mov
mov
mov
test
or
repnz
fstps
sahf
sbb
inc
aaa
rcl
clc
mov
or
fisubrs
movsb
nop
in
pushf
rcll
jmp
mov
jae
insb
fbstp
test
cvtdq2ps
call
insb
or
push
inc
add
jo
leave
insl
scas
decb
push
mov
insl
xchg
sub
sbbb
repnz
mov
ficomps
xchg
mov
ret
pop
push
jne
pop
jnp
decl
push
dec
repnz
shll
adc
lods
adc
addl
and
ja
je
mov
dec
push
int
cmp
movl
pop
repz
jle
daa
mov
cvtdq2ps
dec
push
imul
in
cwtl
pop
cmpl
es
fsubrp
enter
fisttps
scas
pop
add
popa
repz
jb
add
lea
insl
xor
jnp
imul
adc
xchg
ret
not
dec
mov
mov
mov
negl
call
mov
lods
push
inc
and
adc
js
call
mov
dec
xor
dec
and
fcomps
lahf
sub
inc
es
xchg
nop
cld
movsl
dec
cmpsb
in
jge
pop
int
add
std
pop
push
dec
adc
dec
jecxz
mov
jg
xchg
ror
mov
punpckhdq
call
insl
xchg
inc
fistpll
adc
outsl
loope
subl
push
fdiv
inc
movsl
dec
test
jb
xchg
pop
jg
xor
lods
pop
test
mov
aaa
out
and
bnd
movsl
stos
lahf
inc
cli
xchg
ficompl
cli
sub
mov
mov
movsb
sbbl
repnz
sbb
aad
imul
iret
into
sbb
cmc
ljmp
arpl
aaa
mov
push
add
ja
cmp
push
xor
mov
out
arpl
sbb
idivb
jne
and
dec
enter
adc
jecxz
movsl
movsl
mov
inc
jmp
mov
sti
adc
and
cmp
les
jnp
jae
lahf
js
xchg
leave
and
ficomps
push
in
jp
ss
xchg
ficoms
inc
fcoms
xchg
mov
insl
fsubs
jno
sub
mov
lods
fwait
push
push
insl
test
cld
or
pop
lret
sub
xchg
mov
xor
mov
pop
push
lods
lds
dec
jg
clc
repnz
mov
or
pop
fsubs
cmc
in
je
mov
inc
outsl
fistpll
loopne
and
fstpl
ret
dec
cld
notb
mov
adc
insb
jo
jne
imul
pop
pusha
jmp
jg
sub
fcompl
pop
push
dec
cwtl
push
cmpsl
pop
cmc
push
push
sbb
sbb
aaa
xchg
inc
cmpsl
rcll
and
or
outsb
pushl
or
pop
pop
sub
testl
mov
mov
xor
and
jp,pt
idivb
outsl
std
and
stos
pop
add
mov
jo
cmp
mov
in
xchg
mov
ss
xchg
movb
mov
or
fmuls
lock
inc
enter
arpl
std
push
negl
pop
dec
xchg
lods
insb
mov
sbb
es
mov
ret
xchg
imulb
cmp
lret
xchg
cltd
xchg
cmp
push
ss
xchg
test
inc
aam
sahf
jae
push
lahf
xor
mov
sbb
and
cmp
push
pushf
push
mov
mov
movsl
adc
ret
mov
add
mov
push
or
inc
add
push
jmp
mov
js
sarb
push
xor
fucomip
shl
hlt
inc
xlat
dec
or
popa
sub
ljmp
lret
stos
sub
in
testb
aaa
add
mov
mov
mov
adc
icebp
pop
cmp
das
jecxz
adc
jns
inc
sbb
bound
jb
mov
aad
fimuls
insb
icebp
lods
repnz
cltd
movsb
mov
das
insb
lods
xchg
and
xchg
jp
aaa
outsb
scas
pushl
ret
and
mov
cmpsl
addl
pop
call
out
add
add
aad
adc
inc
mov
cwtl
cs
push
push
add
jno
cmp
pop
repnz
dec
add
xchg
jle
test
ljmp
pop
or
sub
not
lock
push
jmp
mov
add
das
std
add
lods
dec
xchg
in
inc
sub
xor
or
ljmp
stos
jae
inc
jecxz
mov
pop
push
pop
jmp
nop
je
sub
scas
shlb
adc
test
sbb
mov
sub
sti
mov
pop
mov
ds
das
lock
clc
test
push
aas
sbb
out
inc
cld
cmc
fsubrl
addb
sub
mov
outsl
aaa
mov
movsl
push
nop
mov
dec
lock
sbb
mov
ds
sbb
or
stc
sahf
je
fwait
or
ret
sub
xor
mov
cmp
sub
sbb
daa
pop
shl
mov
jl
ror
test
jno
jne
mov
addr16
outsb
jmp
repz
jp
pop
movsb
inc
sub
sbbl
xchg
or
idivb
andb
in
jl
clc
adc
bound
mov
jge
ret
cs
pop
lcall
adc
mov
das
mov
scas
orl
call
rcrl
lea
mov
rclb
test
cld
dec
sub
jle,pn
sub
or
inc
inc
outsb
frstor
sub
mov
xchg
sarb
xchg
sub
or
lcall
loope
inc
outsl
icebp
mov
fnstenv
pop
out
daa
push
enter
push
fst
idivb
lret
movsb
lret
insl
push
mov
mov
mov
in
jbe
das
push
inc
enter
dec
jge
mov
push
int3
mov
in
lcall
test
test
ret
adc
mov
xchg
pop
pop
hlt
subb
inc
lret
jne
adc
fldt
dec
scas
enter
fiadds
sbb
add
mov
inc
adcb
movsl
jnp
daa
push
icebp
int3
inc
mov
push
movsb
inc
mov
mulb
jo
mov
fldenv
sbb
adc
push
pop
test
cltd
mov
popf
add
jl
cmc
pop
fwait
mov
push
xchg
mov
mov
cmpxchg
fs
rclb
mov
data16
je
cmpsb
xor
dec
push
ja
dec
and
dec
jge
sub
inc
mov
pop
fstp
or
lods
adc
xor
jg
mov
mov
add
push
mov
mul
xor
add
pop
cmc
push
shrl
sbb
add
add
dec
cli
mov
mov
insl
cmpsl
jmp
push
pop
xchg
mov
sbb
and
pop
dec
jo
and
dec
jl
xor
xor
jae
jb
dec
mov
das
mov
inc
subb
sub
out
outsl
pop
jb
sar
fs
sub
loop
xchg
arpl
jmp
pop
testl
loop
lock
nop
mov
aas
xor
dec
stc
sbb
imul
push
dec
mov
mov
dec
and
scas
cs
sbb
int
mov
push
jl
mov
stos
rcrl
mov
dec
pop
cmpb
push
lock
ret
mov
cmpsb
adc
dec
xchg
and
xor
sub
movsl
dec
mov
movsl
add
inc
pop
jl
or
xor
jns
ret
mov
xorl
aas
rcrl
inc
out
mov
mov
jmp
adc
inc
mov
and
sbb
idivl
push
xor
cmpsb
xor
jecxz
and
sti
hlt
testl
push
repnz
inc
orb
adc
fwait
adcb
cmp
bound
nopl
xchg
add
popf
fst
or
pop
push
ret
dec
pop
xchg
cmp
xlat
out
data16
repnz
mov
fwait
pop
mov
and
mov
push
mov
jnp
sub
insl
stos
ds
mov
movsl
outsl
movsl
cmp
dec
jmp
mov
sbb
.byte
lcall
push
mov
add
lods
outsb
dec
push
add
jne
push
call
stc
jg
leave
ret
and
loopne
push
lea
push
push
mov
bnd
pushf
sub
sbb
push
push
push
pushl
in
cs
in
sar
in
sbb
push
jge
ficomps
andl
lock
lea
std
mov
sti
push
jae
xor
scas
adc
pop
in
mov
add
xor
cmp
push
popa
insl
jg
fildl
dec
jb
add
mov
push
ja
out
mov
push
add
in
neg
mov
add
and
lea
push
mov
std
pusha
iret
cld
fiaddl
xorl
leave
add
cmp
add
pop
adc
xor
leave
or
push
dec
inc
jmp
insb
push
test
sbb
push
jle
push
lcall
adc
gs
jb
dec
gs
daa
sti
mov
icebp
push
mov
inc
lea
push
in
xchg
je
or
pop
loopne
add
notl
dec
insb
lock
jecxz
imul
out
inc
mov
insl
xor
clc
push
jge
mov
insb
test
inc
outsl
test
es
inc
pop
nop
xchg
lock
cmp
pop
mov
and
or
cmp
js
frstor
mov
add
popa
mov
call
add
ljmp
sbb
in
jbe
ret
push
jbe
sbb
hlt
outsb
pop
xor
adc
xor
out
push
sbb
mov
inc
dec
jbe
xor
jne
pushf
xchg
ret
jae
mov
pop
or
movl
loope
or
imul
pop
ljmp
ss
ret
jge
stc
xchg
add
loopne
sub
dec
mov
lock
jl
jo
mov
insl
pop
push
hlt
push
push
jno
and
and
pop
cmpsl
enter
test
push
push
inc
hlt
add
loopne
dec
xchg
sub
dec
mov
ret
jmp
xor
out
xor
subb
dec
fsubr
pop
mov
jp
mov
aaa
cmp
dec
inc
push
fcompl
push
jecxz
sti
fnstsw
pop
push
push
xor
xlat
pop
push
push
mov
inc
shl
mov
fimull
add
fcoms
mov
aas
add
add
xchg
push
es
adcl
dec
hlt
imulb
push
adc
movl
jecxz
inc
add
ja
leave
cmp
lock
cwtl
jo
fs
aaa
insl
jns
dec
jbe
hlt
inc
add
lock
sbb
sub
jle
add
inc
pusha
clc
push
shll
xchg
cmp
push
scas
pop
cwtl
test
test
push
lock
inc
push
jb
xchg
call
mov
movsb
lea
push
jno
xlat
frstor
pop
add
test
cltd
in
testl
inc
loope
sarl
nop
dec
popf
mov
in
jb
xor
or
cwtl
in
push
das
adc
sbb
mov
scas
add
push
push
mov
shll
mov
test
fs
insl
mov
fbstp
and
dec
add
fadds
daa
js
scas
dec
pop
sahf
fwait
rolb
inc
das
cmp
or
cld
push
xor
popa
fistpll
push
jnp
mov
leave
xor
mov
push
pop
jp
sarl
ret
push
loop
xlat
rorb
push
push
int
fimull
mov
loop
aaa
fs
lock
push
aaa
cld
cmpsl
and
sub
es
cmp
call
decl
gs
or
adc
pop
pop
sahf
in
imul
movsb
jl
push
loop
push
xor
or
inc
jl
pop
xchg
idivl
mov
mov
mov
sti
aaa
leave
imul
push
inc
aaa
mov
cwtl
sub
push
dec
push
ss
hlt
adc
mov
add
jnp
xchg
xchg
mov
pop
push
es
lock
add
mov
inc
sub
sbb
xor
xor
sbb
push
mov
inc
pusha
cmc
enter
dec
push
std
hlt
push
ss
in
inc
sub
popa
add
sti
ss
jnp
sar
inc
outsb
add
adcb
cld
shrl
push
inc
xchg
inc
es
in
insb
xor
je
xchg
lock
cmpsl
call
scas
inc
xor
jge
dec
dec
dec
test
insb
sub
adc
hlt
pop
dec
jne
cmpsb
dec
push
in
xor
add
and
and
clc
add
jb
gs
pop
jg
jecxz
lods
das
imul
cmpsb
push
in
les
mov
call
test
stos
popa
mov
add
inc
pushl
xchg
add
mov
fimuls
into
sub
nop
add
cld
jb
insl
push
mov
mov
pop
add
das
icebp
cld
lods
mov
sbb
inc
mov
inc
add
add
mov
inc
sub
sbb
lods
daa
and
shll
lret
std
mov
pop
mov
add
icebp
cli
add
add
jmp
add
jns
adc
dec
inc
sub
insl
jae
sbb
add
out
sti
iret
add
mov
sbb
xchg
pop
add
sbb
imulb
stos
add
pop
and
ret
adc
jg
add
test
test
ficomps
les
sbb
test
dec
test
add
aaa
or
mov
testl
add
jae
in
out
cmp
gs
fadds
outsb
out
sahf
popf
xchg
sbb
cmp
js
xchg
cmp
sti
adc
pop
add
jl
outsl
mov
xor
add
add
add
sub
cmp
sbb
ret
fdivs
cmpsl
inc
das
and
pop
outsb
or
leave
inc
pushf
add
sahf
inc
jle
std
xchg
in
sbb
lds
mov
and
test
enter
loop
pop
in
pop
fwait
mov
cld
test
mov
add
xlat
sub
and
add
out
adcb
and
loope
jbe
or
push
push
in
pusha
das
je
fcmovnu
cmp
rorl
fstps
movb
dec
popf
fldl
mov
jbe
insl
xchg
mov
adc
movsl
cmp
mov
into
push
popf
or
xchg
push
add
or
shlb
stos
sbb
mov
filds
movsb
adc
fs
add
cmp
inc
mov
add
stc
add
pop
mov
sbb
add
xor
mov
popa
or
or
and
mov
jne
es
push
iret
cs
popf
aad
sbb
xchg
add
inc
jno
sub
add
loop
movsl
fdivrs
xchg
or
je
push
pop
mov
xchg
lea
sub
jecxz
outsb
adc
sbb
add
cmpsl
fld
insl
outsl
xlat
popl
lret
ja
sar
add
nop
sub
aam
fisttpl
mov
test
adc
aam
mov
fmull
pop
fisubl
scas
add
jb
addl
xor
add
les
inc
pop
rolb
fisubrs
mov
dec
gs
xor
addl
jcxz
lock
mov
adc
ret
pop
testb
scas
andb
fidivrs
push
inc
in
inc
pop
jp
repz
and
cwtl
repz
lods
mov
fwait
add
and
cmp
call
sbb
stc
fadds
fwait
sub
mov
dec
xchg
mov
std
push
es
xor
push
outsb
arpl
mov
lea
sarb
fnstenv
pop
push
cltd
mov
fadd
mov
cmp
dec
aaa
fcoml
cs
or
or
lods
lods
shrb
jnp
jne
mov
pop
push
ret
push
cld
add
dec
dec
mov
bound
dec
mov
in
mov
push
movsb
mov
leave
xchg
daa
add
add
mov
in
pop
call
push
inc
inc
pop
jnp
movsb
jl
aad
dec
fcoml
frstor
jg
cmpb
lahf
xor
adc
push
sbb
add
movsl
dec
sub
add
and
push
pusha
sub
sub
cmp
roll
mov
pop
mov
outsb
mov
mov
mov
jno
and
leave
dec
jb
mov
lea
cltd
js
and
cs
movsl
test
test
scas
filds
movsb
mov
cmpsb
or
dec
insl
lods
into
insw
push
jb
repnz
sub
popf
inc
mov
xchg
mov
pop
xlat
flds
cmp
lea
movsl
adc
or
stos
add
stc
pop
and
lods
add
sub
jl
dec
dec
pop
sbb
lods
fdivr
sbb
outsb
dec
xlat
and
es
into
ds
and
xchg
mov
cld
outsb
outsl
sbb
ficoml
addb
adc
xchg
pop
mov
sbb
in
insl
mov
mov
add
sub
lods
adc
popf
mov
or
and
inc
outsb
mov
pusha
movsb
in
pop
outsb
loopne
push
mov
dec
add
loope
fiadds
add
jb
cmp
xor
xorl
divl
inc
leave
insb
jecxz
or
insl
xor
fldl
testb
xlat
or
or
jl
jg
xor
loop
jns
rorb
adc
mov
cmp
scas
fs
jmp
xor
sub
ficoml
push
pop
fcoms
push
inc
addr16
xchg
mov
hlt
les
leave
jns
mov
mov
sbb
add
jbe
pop
cmp
ffree
scas
in
sub
cmp
test
cmp
sbb
jmp
mov
inc
in
sbb
ds
data16
insl
pop
call
pusha
adc
pop
lods
push
sarb
jmp
jle
and
jae
aad
dec
mov
push
pop
fsubrs
sahf
mov
pusha
insl
imul
xor
shrl
push
ret
je
ret
fwait
jns
roll
and
and
cmp
inc
orl
add
imul
mov
inc
mov
sbb
shll
adc
mov
pop
cs
jl
sbbl
inc
mov
rolb
scas
cmc
dec
fwait
pop
jno
inc
xor
jg
stos
js
lret
mov
jmp
push
xlat
inc
mov
push
jecxz
push
push
data16
xbegin
movsl
daa
cld
call
mov
pushfw
bound
js
inc
xchg
in
add
jl
jp
pop
pop
clc
test
nop
scas
jle
sub
mov
pop
jbe
jp
or
pop
sub
xor
mov
sbb
and
dec
sub
mov
fistpll
in
data16
imul
xor
dec
pop
dec
or
frstor
mov
pop
jne
clc
test
loopne
fdivrs
jb
fidivrl
xchg
jo
decb
out
pop
frstor
repz
dec
test
sbb
or
mov
mov
scas
in
icebp
or
outsb
aas
loope
enter
rolb
movsb
sbb
mov
xchg
jne
pop
jle
mov
push
arpl
js
mov
add
and
in
sti
fadds
sbb
push
loop
punpcklwd
sarb
fadds
insl
add
gs
jnp
jge
rol
jno
icebp
insl
outsl
scas
add
js
xor
cmp
and
inc
sbb
es
cmp
or
adc
jno
mov
lret
push
mov
les
enter
push
je
call
mov
bnd
imul
in
out
jmp
shll
testb
daa
subl
lret
push
fidivrs
pop
or
adc
cltd
pop
fnstsw
jmp
cmp
pop
ljmp
or
addr16
sbb
popa
push
sub
das
int3
je
push
and
inc
xor
xlat
jb
outsb
outsl
cmc
in
mov
adc
sub
mov
pop
mov
cli
jbe
loop
mov
in
mov
in
jae
jg
or
or
xor
dec
adc
nop
sbb
push
dec
test
jo
and
idiv
sbb
inc
lahf
jb
jl
loop
add
lock
test
jge
push
jae,pt
cld
arpl
adc
cs
add
and
idivl
and
sbb
pcmpgtw
mov
movsb
inc
adc
mov
jle
and
add
mov
cltd
popf
mov
push
stos
or
or
fimull
loope
and
pop
outsb
sub
testb
mov
adc
add
jge
js
aam
test
movsb
mov
arpl
test
inc
in
dec
sbb
pop
xchg
add
test
pop
mov
inc
cli
add
push
or
push
fmulp
int3
dec
sub
adc
sbb
cmpl
data16
xchg
push
inc
jge
sub
mov
icebp
xchg
lret
sbbb
lods
or
jge
fstl
adc
scas
or
lret
aam
stos
inc
in
imul
fwait
aaa
or
xchg
or
aad
daa
xchg
push
adc
adc
fwait
sbb
pop
int3
movsl
jle
add
mov
insl
pop
pmaxub
xlat
dec
sub
mov
loopne
sarl
loopne
add
jb
call
int
aad
les
sub
scas
mov
ret
std
jo
cmpb
cltd
adc
insl
cli
fwait
pusha
lret
add
mov
stos
cld
or
lods
out
sbb
popa
jb
pop
sbb
and
xor
add
imul
scas
sbb
mov
jnp
jmp
push
sub
inc
ret
mov
xchg
pop
mov
fimull
xlat
push
mov
ds
je
adc
ja
mov
enter
inc
cmovns
orl
int3
clc
mov
mov
dec
jmp
pop
shr
cwtl
insb
jp
inc
cmc
inc
jnp
scas
mov
adc
loope
enter
ljmp
popa
cmp
in
jbe
adc
add
pop
inc
std
je
jbe
scas
sahf
loopne
lods
sub
mov
scas
pop
jg
xchg
mov
inc
andl
leave
cltd
sarl
mov
xchg
push
cmp
clc
movsl
inc
pop
sbb
mul
xchg
pop
rcll
adc
jmp
sbb
dec
push
cli
cmc
testl
fcomps
cmpsl
repz
lods
fildll
mov
cmpsl
pop
arpl
add
fidivrs
scas
cmc
sbb
xlat
or
adc
incb
rcll
mov
adc
mov
fs
arpl
cmpsb
cld
inc
pop
mov
jg
enter
dec
jne
mov
and
sbb
sub
or
mov
sbb
push
sub
push
movsb
leave
and
in
imul
adc
aam
sbb
aad
sbb
mov
jbe
jb
dec
addps
inc
pop
test
out
inc
jle
aad
aaa
fbstp
mov
sub
insb
dec
sahf
into
push
jae
dec
push
dec
pop
cmp
mov
clc
leave
nop
or
cmp
fdivrs
rcr
test
outsl
cmp
dec
add
cwtl
loopne
repnz
lods
and
mov
xchg
imul
jae
not
imul
sbbb
mov
adc
das
mov
jae
les
out
xor
pop
pop
push
add
in
cli
mov
ficompl
mov
mov
insb
shlb
fldenv
cmp
aas
mull
inc
or
and
sbb
mov
sbb
pushf
adc
shrl
xchg
jmp
pop
fildll
mov
lods
divb
add
shlb
es
push
adc
xchg
in
fadds
aas
inc
push
mov
mov
shrl
aad
adc
call
sbb
in
addr16
mov
push
sti
shrb
or
mov
sub
in
cmpsl
ret
inc
inc
int3
into
xchg
stc
or
roll
fcmovnb
sbb
push
fucomi
and
jne
lock
dec
push
add
mov
lods
jbe
inc
popa
xchg
jmp
mov
fwait
pextrw
addl
push
loop
inc
nop
and
cmp
push
or
xlat
mov
je
cmp
fisubrl
sbb
fs
icebp
jmp
daa
jecxz
ja
pop
insl
xchg
std
pusha
jno
shrb
mov
inc
sti
jge
out
repz
and
arpl
or
jecxz
loope
insl
negb
mov
loope
mov
jne
mov
push
dec
jmp
adc
ds
int
iret
push
ljmp
xchg
hlt
adc
jecxz
add
push
hlt
mov
sbbl
test
cmp
outsl
cld
push
pop
fsubrs
pop
shrl
mov
sub
cmp
lret
inc
mov
das
xor
aam
addr16
mov
and
push
or
cltd
repz
out
sbb
test
clc
mov
ret
ret
lret
sub
lcall
mov
icebp
mov
mov
mov
mov
add
add
repz
xchg
dec
aas
test
dec
outsl
mov
or
mov
lea
mov
lods
jbe
popf
movsb
mov
insl
in
jno
push
mov
cmpsl
adc
sbb
add
out
dec
es
sbb
and
inc
hlt
dec
pop
pop
dec
adc
out
add
adc
pop
pop
mov
ljmp
add
inc
ficoml
xor
nopl
mov
or
dec
iret
jge
jns
mov
jbe
and
stc
jp
adc
outsb
sbb
lea
push
pop
sub
mov
cmpsl
sbb
loop
or
xor
aas
outsb
sub
imul
pop
es
xor
pop
in
xchg
fcmovne
sub
xchg
pop
adc
mov
xchg
ds
adc
movsl
pop
arpl
and
add
fadd
xchg
insb
fildll
shll
cmc
and
mov
sarl
call
ljmp
mov
cwtl
jbe
mov
pop
push
mov
rol
lds
cmpb
adc
push
jae
jbe
insl
and
xchg
mov
jo
fistps
add
nop
imul
dec
push
sbb
ret
faddl
fdivrs
decb
js
and
add
ds
xchg
ds
xor
and
scas
push
cwtl
hlt
ficompl
pop
push
mov
push
add
movsl
add
sahf
adc
popf
shrl
mov
sub
negb
test
xlat
subl
cmpl
fcmovnb
sub
sub
pop
out
addr16
movsl
add
sbb
pop
sub
movsb
dec
fstl
dec
pop
pop
xchg
cmpb
andl
cs
call
test
add
sub
mov
cs
mov
dec
mov
push
pop
jp
lahf
and
adc
std
lcall
and
adc
push
inc
aas
pop
and
sbb
lahf
pop
in
movsb
push
into
out
call
lock
in
cmp
push
into
xor
mov
jne
sbb
insl
mov
sub
shll
mov
fcomps
xor
adc
inc
sub
push
arpl
inc
imul
mov
lahf
ficompl
outsb
andl
push
xchg
or
mov
sbb
popf
jecxz
push
loope
and
popf
arpl
jecxz,pt
sbb
jne
aad
xchg
mov
in
push
add
mov
scas
mov
cs
in
sbb
pop
and
sbb
das
outsb
popf
hlt
lcall
outsb
or
sar
push
xchg
sub
incb
and
add
stc
cmpsl
cmp
es
sub
add
fists
in
mov
push
pop
adc
adc
lock
dec
rorl
adc
or
js
mov
nop
test
js
and
fildl
jmp
loope
pop
clc
mov
ja
sub
inc
xor
push
inc
inc
ficompl
out
or
push
mov
dec
add
xchg
inc
mov
pusha
mov
add
add
roll
pop
and
cwtl
scas
imul
cmp
or
push
sahf
mov
das
insl
adc
add
cmp
push
in
inc
cmp
je
icebp
pusha
mov
fiaddl
dec
xchg
cmp
std
fcoms
addl
push
stos
repz
dec
push
jecxz
inc
xchg
mov
lahf
dec
jne
data16
or
test
xor
mov
pop
mov
xchg
inc
sbb
inc
inc
and
cmp
sbb
mov
loope
iret
call
inc
mov
rcr
push
imul
fidivrl
mov
mov
sub
sbb
test
xchg
arpl
inc
movsb
insl
mov
adc
mov
shlb
sti
xor
in
or
pop
sti
adc
dec
xor
inc
dec
ret
and
lods
add
jge
sahf
popf
pusha
pop
pop
inc
pusha
ret
mov
notb
or
shrb
cmpsb
loop
dec
push
int3
or
pushf
add
xchg
adc
xor
pop
push
sarl
lock
mov
xor
mov
mov
push
in
push
into
mov
sub
decl
pop
push
or
clc
jnp
mov
cs
xlat
dec
imull
mov
jbe
int
jae
push
mov
or
dec
adc
push
popf
sub
negb
mov
in
bound
jl
movsl
movsl
or
movsl
xorl
jge
or
packssdw
sbb
iret
lods
xchg
and
or
fistpll
and
stc
inc
dec
xchg
adc
insl
je
ja
ret
fnstcw
pop
dec
into
roll
xor
aad
inc
das
jne
adc
pop
cli
cmc
xchg
and
and
push
out
aad
push
and
push
lahf
scas
imul
bound
popa
sti
in
pushl
fnstenv
pop
adcb
dec
lea
sbb
cmc
addr16
imul
or
call
insb
add
fistps
and
lods
pop
and
push
add
cmpsb
jp
inc
xor
bound
mov
ficoms
lods
pop
jg
cmc
arpl
sbb
sub
pop
cmp
lods
fsubl
adc
sub
aaa
orb
and
test
adcb
xlat
xor
add
xchg
pop
lcall
test
jmp
jecxz
jo
pop
lods
imul
ljmp
push
xchg
insl
xchg
call
cmp
bound
clc
jle
sub
test
jmp
jne
jae
dec
jecxz
out
clc
popa
pop
jno
pop
adc
nop
jo
cwtl
jno
push
outsl
leave
test
call
loopne
loope
or
or
arpl
shrb
adc
aam
add
data16
shrb
popf
mov
pop
mov
call
outsb
mov
ret
mov
ret
push
fbstp
pop
xlat
imul
mov
mov
pop
jl
lret
imul
loope
xchg
popl
and
mov
xlat
aam
mov
lret
add
mov
xor
repz
jmp
inc
xor
mov
imul
orl
push
cli
cmpsb
jmp
sbb
jg
push
mov
xchg
pop
cmc
xchg
adc
loopne
inc
add
shlb
jge
ret
inc
inc
push
push
test
out
or
fistl
pop
fnsave
repz
mov
dec
sbb
push
lods
fwait
sbb
js
add
aam
dec
loope
out
mov
sub
nop
xchg
mov
jmp
rolb
ds
cmpsb
mov
cs
xlat
cmpsb
daa
aas
inc
lods
mov
sub
loop
jecxz
and
lea
pop
sbb
xor
cmp
lods
ret
lea
loopne
in
cld
bound
mov
mov
das
xchg
cmp
xor
into
repnz
push
cld
dec
pop
js
add
outsb
aaa
adc
push
shll
stos
or
jmp
jle
add
push
cmp
or
or
aad
fstl
jl
loopne
sahf
fwait
push
adc
mov
mov
inc
arpl
mov
pop
mov
jg
int
jecxz
imul
std
sbbb
dec
mov
push
dec
mov
cmp
fisubs
adc
xor
cld
push
xor
sbb
pop
mov
pop
lods
mov
dec
lods
imulb
pop
pop
jl
popf
xchg
mov
cs
or
in
xor
sbb
mov
mov
xchg
sbb
mov
lds
adc
aas
popf
mov
mov
adc
adc
mov
add
mov
andl
mov
cmp
inc
mov
scas
aad
scas
add
dec
mov
insb
adc
loop
cld
in
test
jnp
call
sbbb
mov
enter
aas
xchg
int3
scas
outsb
fcmovu
movsb
cwtl
addr16
mov
cmp
das
xlat
inc
push
inc
add
add
cli
sbb
sbb
sbb
jb
nop
fisubl
dec
sbb
pop
xchg
lea
sbb
je
push
lock
pop
lret
ds
mov
sub
shlb
je
sti
subl
jecxz
leave
jne
jg
data16
test
sbb
and
mov
cmp
pop
outsb
pop
roll
ja
dec
repnz
mov
mov
enter
or
push
push
in
rclb
cli
rcl
inc
insl
xchg
mov
outsb
lock
pusha
bts
bound
adc
cld
pusha
pop
sbb
and
inc
fldt
pop
jle,pt
testb
jecxz
mov
sub
push
add
out
mov
frstor
lock
sub
mul
pop
or
cld
cmpsb
insl
add
out
outsl
jbe
inc
stc
loope
enter
mov
ljmp
shrl
mov
inc
adc
jo
call
arpl
inc
aad
push
add
inc
and
or
es
xchg
cmp
pop
adc
fmulp
fcoms
movsb
pop
pop
test
pushf
fs
test
pop
btc
jae
inc
roll
fists
push
repz
insl
lock
scas
cli
pop
inc
shrb
mov
aam
enter
stos
pop
js
clc
sub
enter
imul
jno
pop
ds
rorl
divb
sarl
sbb
mov
xor
call
jno
loope
add
mov
insb
nop
popf
movsl
aaa
sub
movsb
mov
sub
mov
stos
add
or
jns
adc
inc
sbb
jmp
mov
push
pop
mov
add
mov
mov
lea
cmpxchg
adc
adc
aaa
cmp
test
das
cwtl
test
negl
mov
fistps
or
call
sbb
cs
adc
fs
mov
push
mov
xor
dec
sti
mov
mov
and
or
lods
jo
mov
or
push
cmp
cmpsb
cmpsl
shll
pop
fcomp
ficoml
mov
add
cmp
or
bound
mov
sbb
insl
add
divl
lock
lods
jne
popf
ljmp
pop
sub
or
cmc
jmp
movsb
into
fstpl
int
movsb
sbb
or
aam
cmpl
and
sbb
lret
or
add
jb
add
leave
loope
fnsave
scas
insb
pop
cltd
testl
les
dec
lods
ror
mov
inc
xchg
imul
jnp
mov
movsl
loopew
inc
add
test
fistps
in
rcl
andb
sub
pop
or
and
adc
sbb
jne
je
stos
lods
mov
jl
jg
arpl
jecxz
mov
sbb
aas
cmp
nop
into
mov
je
lods
scas
test
mov
test
jnp
mov
mov
divb
or
xlat
in
xchg
mov
dec
cwtl
arpl
inc
mov
shr
out
sarb
std
push
cld
xchg
movsl
jmp
lock
vorps
inc
pop
cmp
hlt
je
or
roll
push
aas
jo
push
and
insb
mov
add
dec
xchg
decb
and
ret
xchg
shlb
jge
push
pusha
adc
add
sbb
lds
mov
sub
mov
cs
cmp
inc
movsb
dec
mov
xor
add
or
fucomp
push
xor
test
xchg
push
dec
cmp
lods
xor
pop
das
mov
aam
adc
jmp
loop
jae
adc
xor
fldt
push
stos
pop
mov
pop
push
cmc
cmp
mov
pop
pushf
add
dec
xchg
stc
test
mov
sub
rorb
mov
mov
aad
cmpsb
sub
repnz
mov
jne
push
je
jo
or
roll
pop
push
iret
adc
loop,pt
push
test
test
scas
ja
loop
cwtl
jno
test
pop
roll
inc
out
addr16
lret
mov
stos
push
cs
imul
adc
lds
pop
imul
adc
movsl
and
fcmovnbe
push
sub
and
pop
mov
pop
dec
and
mov
pop
int3
movsl
cmp
stos
sahf
mov
in
in
xor
or
push
xor
nop
jge
add
lcall
idivb
ret
jmp
jbe
add
dec
inc
cmp
popf
clc
xchg
or
dec
ja,pt
mov
out
aas
push
fadds
insl
mov
mov
cld
pop
pop
test
fsts
and
subl
lahf
jp
popf
xor
shrl
add
or
cmpsl
aam
dec
push
inc
scas
and
cmp
xchg
xor
fistpl
lods
jno
adc
xor
roll
in
or
push
lods
and
aas
inc
or
dec
push
push
pop
lods
ud2
dec
adc
dec
push
inc
arpl
mov
adc
or
sarb
xor
add
sub
in
xor
mov
xor
ja
or
sarb
inc
and
push
pop
dec
shll
push
pushf
add
stos
mov
lahf
push
add
inc
cmp
aad
add
xor
shl
jbe
sub
rcrb
jnp
and
and
fs
fstp
loop
enter
enter
xor
sti
popa
or
pusha
mov
aaa
std
js
test
sbbl
mov
sub
popa
adc
out
xor
nop
dec
lcall
add
fdivrs
negb
mov
loope
lods
sahf
das
jno
xor
pop
mov
cmp
add
push
pop
in
nop
aam
rorb
repnz
mov
push
testl
jne
mov
push
scas
sub
decb
fstpl
xchg
dec
pop
arpl
push
dec
lret
pop
mov
subl
aaa
xlat
shl
adc
popf
add
cmc
or
pusha
mov
add
mov
xlat
shlb
outsl
imul
dec
cwtl
test
jae
add
cmc
or
sbb
bound
pop
cmp
and
insl
cs
inc
xlat
lock
cmpsl
and
fnstsw
xor
jg
arpl
hlt
test
mov
jmp
adc
pop
cmp
dec
in
xor
testl
lcall
xchg
mov
adc
push
mov
andb
add
jnp
cmp
pop
out
mov
ljmp
outsl
jnp
inc
jl
or
jbe
jecxz
out
subl
fs
lcall
cmpsb
rclb
lea
sub
xchg
xchg
pop
sub
lds
call
push
add
sbb
outsl
sub
jecxz
inc
or
sub
ret
in
jp
inc
insb
add
loop
mov
pop
inc
out
lods
cmp
mov
sub
adc
cmpsb
pusha
jno
jl
pushf
push
repz
or
cwtl
movsb
in
call
lcall
push
sub
add
mov
pop
stos
xchg
aas
scas
and
mov
push
push
jbe
movb
lret
mov
test
loopne
lcall
cmp
add
adc
arpl
adc
sbb
mov
fs
jl
cmp
adc
cltd
pop
mov
mov
fstpt
dec
jmp
mov
pop
fisttpl
add
jg
pop
sbb
loopne
hlt
or
test
mov
shll
and
outsb
fadd
lds
cmpsb
xchg
adc
mov
and
xor
or
movl
call
or
add
xor
push
adc
nop
mov
mov
jle
sub
sahf
fs
push
lods
in
cmpsb
sub
fadds
out
pop
jle
fsubrs
mov
add
shr
sbb
ret
out
dec
sub
popa
inc
dec
xchg
leave
pushf
fisttpll
push
roll
xchg
ret
add
dec
idiv
mov
sbb
add
popa
repz
jle
sar
or
sub
push
dec
nop
jbe
fs
decb
jg
adc
xchg
icebp
scas
divb
loopne
dec
sbbl
mov
loop
push
iret
push
test
lahf
pop
test
xchg
mov
push
cmp
xchg
aaa
js
xchg
or
lahf
push
into
sbb
sub
inc
or
and
cmp
mov
imul
addr16
ret
xor
jge
inc
pop
rolb
and
mov
pop
mov
rol
repnz
icebp
in
outsb
cmp
scas
sbb
nop
jae
stos
outsl
xor
sub
fildl
push
mov
xor
ds
jne
call
cmpsb
jnp
sub
data16
pop
stos
shlb
pusha
sbb
pop
xor
xchg
testl
push
jno
insb
je
mov
cld
ds
mov
inc
fisttpll
fsub
popf
pusha
sbb
pop
lds
jg
push
aaa
push
xor
xlat
stc
and
imul
nop
outsl
aas
into
dec
inc
sbb
jbe
out
outsl
stc
and
and
das
js,pt
test
aam
fxtract
adc
int
cltd
cltd
push
adc
iret
sub
or
push
add
rorl
mov
jns
je
adc
enter
inc
push
daa
popa
loope
or
test
sbb
int3
je
rorb
add
icebp
rep
inc
mov
roll
fdivrl
mov
out
mov
enter
xchg
lods
es
mov
xlat
lea
add
lret
or
fwait
std
jp
add
lock
lods
sahf
jp
andb
or
add
adcb
sub
dec
daa
xlat
hlt
push
loopne
jne
scas
sbbl
or
or
xor
cmp
or
fdivrs
mov
pop
jnp
mov
add
jmp
or
sub
lret
ret
cwtl
lret
add
or
in
xchg
enter
sbb
outsl
rcrb
dec
pop
outsb
push
or
mov
sahf
sarl
inc
or
in
test
pop
std
cmp
stc
loope
test
push
lods
add
xchg
mov
jnp
je
inc
and
mov
aaa
mov
cmc
pop
dec
neg
push
dec
cmp
repnz
xchg
pop
xchg
lock
pop
pop
and
js
cmc
xor
pushw
mov
sbb
pop
pop
push
pop
push
pop
xor
inc
sub
pop
fldcw
loop
add
sub
add
arpl
or
mov
jns
pushf
js
out
or
mov
std
pop
out
cmp
add
sub
out
loopne
clc
adc
ret
or
in
sbb
mov
std
rol
pop
std
sub
xchg
xchg
aad
mov
mov
cmpsb
movsb
mov
push
insl
mov
rorl
mov
and
fsubrs
orl
inc
dec
jge
out
xchg
and
popf
nop
popa
stos
cmpsl
shlb
mov
jbe
pop
fs
and
mov
mov
push
jno
movsb
push
add
mov
fmuls
int
mov
xchg
imul
mov
adc
data16
inc
icebp
loope
and
jmp
cli
out
push
and
lret
rcl
push
pop
leave
inc
pop
dec
cmc
fisubs
outsb
roll
or
scas
out
xor
dec
cmpsb
inc
ja
mov
mov
inc
mov
js
cmpsb
bound
push
clc
ret
mov
pop
fdivl
add
shll
mov
mov
mov
sahf
ljmp
pop
repnz
in
or
dec
scas
popa
add
cli
js
dec
popf
or
filds
in
jp
dec
jge
xchg
and
mov
insl
loope
pusha
sub
inc
mov
add
arpl
inc
push
shl
mov
outsl
aas
in
dec
mov
js
and
and
outsb
adc
adc
pop
and
ja
fs
cwtl
mov
inc
movsb
out
insb
lea
mov
xchg
dec
xchg
jbe
xor
cs
lods
addb
xchg
repz
inc
add
loope
popf
test
xor
pusha
es
xor
stos
or
inc
rclb
sbb
mov
loope
and
xchg
stos
es
clc
jno
loope
insl
shlb
scas
mov
rorb
rolb
adc
aam
loope
add
sub
divb
dec
mov
adc
mov
push
sbb
nop
pop
loopne
int3
push
cmpsb
outsl
ljmp
into
insl
sbb
jns
xchg
nop
jbe
rcrb
addb
mov
lret
adc
or
push
clc
inc
xchg
mov
arpl
jnp
xor
lds
mov
mov
inc
cmp
mov
push
jmp
sbb
in
cli
sti
jmp
sub
popa
cmp
inc
loop
add
shll
ret
imul
aaa
in
mov
lcall
mov
call
xchg
jbe
sbb
cmp
add
out
dec
enter
inc
ret
std
sbbl
fdivrl
and
insl
cli
and
dec
lcall
mov
xor
push
fistl
in
ret
or
nop
movsl
inc
inc
cmp
ds
jne
inc
inc
mov
xlat
icebp
rcl
jg
inc
adcb
mov
inc
jo
adc
leave
je
cmc
pop
mov
mov
lods
push
out
add
jbe
pop
mov
int
aad
mov
cmp
clc
dec
xor
and
hlt
sahf
and
ss
bound
aam
out
mov
inc
sbb
loope
xor
mov
lds
lock
bound
ret
imul
in
loop
filds
cmp
sbb
sbb
mov
xor
mov
cmc
xchg
cmp
sbb
sbb
popf
mov
sarb
sbbb
ficompl
mov
mov
outsb
pop
and
or
arpl
loop
dec
jno,pn
jecxz
mov
movsb
aas
les
test
jecxz
cmp
cmp
lret
add
dec
jo
call
rcll
push
cmp
jmp
push
dec
stos
data16
int3
add
je
stc
xchg
aam
and
xchg
ss
sbb
les
mov
jecxz
in
adc
arpl
mov
mov
cmp
faddp
jg
daa
clc
or
dec
test
xchg
shlb
push
nop
or
or
enter
insb
enter
add
ja
jmp
imul
mov
lahf
bound
push
add
addr16
test
in
mov
or
ljmp
xchg
mov
bt
jnp
popa
pop
mov
daa
mov
fbstp
or
add
insb
xor
insb
dec
int3
addl
enter
iret
mov
pop
inc
mul
cmp
push
fstpl
pop
test
test
lret
shrb
cmp
insl
pop
cmp
inc
or
inc
insb
inc
adc
and
cmp
jns
cs
test
or
rorl
and
cmp
bound
and
popf
imul
add
inc
cmp
outsb
mov
and
les
daa
add
mov
push
iret
push
dec
adc
jns
pop
pop
inc
pop
xorb
lahf
shll
sbb
stos
lods
jecxz
cld
add
call
push
xor
cmpsb
rcrl
mov
dec
cmp
lods
lods
jbe
int
cwtl
fsubr
adc
xor
xor
aam
and
lcall
cmp
movsb
jp
add
enter
dec
mov
push
or
stc
aas
repz
inc
aaa
dec
aas
sbb
dec
addr16
sbb
add
andl
out
std
nop
xor
jo
xchg
icebp
jmp
mov
lret
test
movb
cmp
inc
nop
dec
push
and
sub
pop
js
cmc
pop
fistl
cmpsl
jle
adc
lret
lret
add
dec
movsb
ja
js,pt
adc
xorb
pop
add
and
lea
fsubp
inc
ret
cmpsl
addb
push
sbb
dec
js
into
jbe
pop
neg
cmp
cmp
pop
insb
outsl
sbb
mov
cltd
popf
add
ja
and
dec
xor
pop
in
ljmp
jmp
fcmovnbe
dec
push
sahf
or
or
movsb
jo
mov
mov
pop
mov
dec
dec
dec
pusha
sbb
sbb
fs
inc
xlat
jge
mov
mov
std
push
push
pop
jno
lock
mov
icebp
or
loopne
pop
adc
push
pop
or
rcrb
jno
sbb
mov
pop
jo
out
adc
cs
movsb
pop
or
push
adc
xchg
push
shlb
popf
xlat
xchg
cmpsl
fcom
pop
enter
mov
fs
insl
stos
and
or
adc
test
adc
jg
push
call
or
lcall
xor
ds
jg
cmpsb
test
aad
mov
cmp
out
icebp
test
fcoml
xchg
orb
lods
ja
xor
addr16
inc
ja
inc
cs
mov
xor
rcrb
pop
or
add
push
adc
aam
hlt
and
adc
popa
mov
std
pop
rolb
and
add
bound
push
jl
sub
push
nop
add
dec
push
mov
push
dec
xor
pop
sbb
inc
jbe
sbb
adc
ja
inc
mov
pop
adc
pop
insb
daa
sub
test
imulb
xchg
and
mov
stc
fdivrl
in
pop
scas
mov
push
aas
mov
xlat
outsl
and
test
jl
ret
mov
mov
push
inc
lods
fildll
test
adc
pop
mov
cld
rorl
pop
ja
aam
cltd
fstpt
lret
incb
int
or
push
notb
fcomp
inc
bnd
jns
repnz
and
rcr
loope
mov
cld
pop
sbb
aas
push
rcll
add
push
fidivl
and
push
or
ret
push
popa
int3
test
mov
adc
lds
or
rcll
loopne
aaa
cltd
jnp
sarl
jecxz
cmpl
rcrl
subl
sbb
ljmp
lds
mov
mov
test
divl
das
les
jbe
push
inc
cld
cltd
inc
femms
dec
jl
xchg
aam
jmp
xor
cmp
push
push
sahf
inc
insb
aam
mov
push
mov
aas
mov
inc
mov
lret
les
xlat
incl
pop
xor
mov
in
xchg
jle
shrb
std
mov
test
mov
mov
dec
jl
ret
sub
repz
pop
enter
sbb
jne
fwait
inc
test
sbb
mov
mov
jp
repnz
adc
cmc
cltd
test
inc
adc
fwait
sbb
mov
icebp
into
mov
lock
add
adc
lods
pop
and
jge
dec
ret
test
xchg
daa
enter
aas
ds
push
test
sbb
fistpll
test
in
adc
pop
push
loope
in
add
ficoms
stc
add
add
in
xor
mov
sbb
ljmp
mov
fs
mov
lds
push
mov
ljmp
mov
sbb
insb
pop
dec
aam
in
mov
push
int
pusha
shr
shlb
push
xor
jg
push
or
mov
sahf
push
adcl
orl
sti
push
or
pushf
lods
add
or
mov
fnsave
testb
jp
cmpsb
lahf
jg
fstps
faddl
fdivl
add
pop
stos
jp
dec
lret
and
inc
sub
mov
xchg
push
pop
pop
lods
sbb
iret
lret
rorb
jbe
push
dec
out
or
add
cmp
sub
sbb
mov
clc
mov
or
pop
sahf
mov
mov
and
xor
jno
inc
ljmp
fdivrs
xchg
fisubs
sub
push
jb
aas
inc
lods
hlt
test
pop
add
rol
mov
add
jge
outsl
jl
dec
pushf
nop
inc
bnd
ja
imul
movsb
shr
aaa
xchg
mov
or
sbb
mov
mov
lds
aad
push
insl
sbb
jg
fdivr
push
roll
pop
jne
pop
ljmp
cmp
xchg
xor
outsl
cmp
aas
push
ljmp
xchg
pop
cmc
ret
dec
lcall
std
jne
loopne
rclb
cs
jno
or
cmp
mov
xor
sbb
rcrb
xchg
jo
rolb
push
repnz
or
mov
mov
mov
orl
xor
inc
inc
stos
es
movb
jmp
cmp
mov
push
pop
lcall
pushf
inc
add
fsubr
or
test
sub
pop
test
std
cs
jp
test
lret
add
insb
sbb
pop
mov
insb
pop
movl
movsl
mov
xchg
out
jb
inc
mov
loopne
or
inc
movl
pop
jae
cmp
rcll
clc
dec
and
adc
or
ljmp
mov
movsb
push
xor
pop
das
je
xchg
pop
das
xchg
stos
nop
das
and
sarl
dec
mov
ds
addr16
cli
sub
pop
sti
lods
mov
loopne
addr16
push
data16
je
or
adc
mov
andl
mov
mov
pusha
push
lds
arpl
lret
cltd
add
xchg
mov
dec
jp
jno
dec
pop
sub
xorb
pop
and
jp
mov
dec
cmp
aad
jno
mov
adc
ss
repnz
pop
cmp
push
jo
outsb
cmp
cmp
bound
cmpsl
fisttpl
call
sub
mov
and
cmp
loope
jbe
push
cmp
out
enter
mov
dec
pop
xchg
aam
inc
dec
lret
cltd
bound
stos
cmp
test
mov
das
aam
adc
mov
adc
xor
mov
cmc
add
sti
dec
push
sbb
add
push
leave
icebp
or
xchg
pop
mov
test
test
push
test
mov
sbb
pop
xchg
jb
mov
pop
shl
or
pop
icebp
outsb
add
fsubp
pop
icebp
call
decl
cmpsb
pusha
sbb
add
push
movsl
sarl
push
adc
ljmp
mov
sti
xor
bound
shrb
pop
std
out
mov
pop
push
dec
inc
cmp
fisttpl
mov
inc
outsb
xchg
outsl
jl
inc
scas
ret
push
and
popf
mov
and
jle
nop
loopne
and
mov
ja
jne
jp
movsl
or
pop
mov
or
jbe
shlb
sti
imul
orl
sbb
or
mov
pop
and
add
xchg
into
dec
mov
sbb
dec
jp
ret
imul
push
xor
push
jle
pop
lcall
push
sbb
pop
test
sub
mov
lods
mov
sbbl
stos
and
data16
cmpsl
pop
xchg
enter
stc
add
int3
dec
and
dec
cmp
add
imul
jns
scas
xor
pop
movsl
push
add
or
rcr
adc
mov
sbb
adc
daa
sub
mov
sbb
add
inc
ljmp
or
add
xchg
or
jne
in
inc
sub
ss
inc
enter
outsb
add
and
mov
pop
sti
jnp
and
mov
mov
sub
lahf
sub
in
into
inc
push
pop
pusha
inc
mov
push
xor
loop
xchg
scas
arpl
lret
push
jmp
mov
test
jle
inc
jg
out
push
iret
push
add
add
fldenv
mov
mov
int3
sbb
inc
lock
sub
fucomp
pop
out
test
xor
loopne
mov
adc
lahf
xor
or
jne
jb
lcall
cli
adc
mov
adc
test
test
adc
jnp
jge
scas
mov
test
push
daa
xchg
xchg
push
mov
sbb
iret
and
xchg
mov
outsl
lock
nop
pop
dec
js
clc
outsb
jle
dec
scas
psllw
sbbb
dec
test
bnd
mov
add
inc
mov
lret
mov
popa
jo
std
cmp
jge
mov
pusha
rcl
sbb
call
je
cmp
jb
imul
data16
and
adc
adc
xor
adc
jb
lcall
mov
jbe
mov
jne
aad
insl
sub
test
mov
ljmp
subl
and
lods
stos
mov
test
mov
pusha
mov
inc
cmpsb
test
cmp
mov
xor
fmull
jl
jns
push
mov
dec
mov
int
sbb
push
xchg
lret
lds
adc
add
nop
cmp
daa
cmp
mov
cmp
xor
inc
jle
add
in
es
punpckhwd
lahf
dec
cmc
mov
jmp
loop
sahf
loop
inc
xor
xor
and
xor
repnz
or
testl
dec
xchg
loope
test
pop
clc
push
sbb
sbb
dec
pushf
dec
cs
jg
les
out
cmp
mov
push
mov
mov
mov
enter
or
mov
and
icebp
dec
sub
cmpsb
mov
push
add
out
push
xchg
push
sbbb
icebp
outsl
pop
stos
cmp
mov
test
xor
sahf
hlt
dec
fistpl
dec
inc
dec
lea
and
test
inc
cs
xchg
roll
mov
dec
jle
mov
insb
cmp
mov
outsl
out
push
or
inc
jg
rolb
sarl
rcll
push
dec
xorb
xchg
daa
mov
aad
loop
ret
jns
das
mov
call
ret
sbb
jbe
dec
mov
adc
arpl
adc
in
scas
jne
imul
sub
sahf
fistpl
mov
cmc
push
bound
mov
test
les
out
popf
sub
call
xchg
incb
xor
pusha
lds
dec
shll
push
and
outsl
sbb
mov
nop
mov
sub
rclb
mov
int3
jns
jne
lods
jge
popa
das
enter
xchg
lds
mov
scas
loopne
aam
adc
adc
rcr
jle
pushf
jns
xor
popf
jecxz
sub
add
push
and
inc
test
addr16
repnz
cmp
dec
neg
pop
fcompl
fistl
inc
jmp
inc
stos
fldt
mov
sbb
dec
pushl
adc
js
jae
push
xchg
pop
mov
ud0
dec
shlb
jg
mov
cmpsb
and
fisttpll
jle
shlb
mov
mov
push
loop
and
sbb
ss
dec
in
adc
sbb
jmp
outsb
pop
call
mov
sub
sub
insb
pop
bound
popa
stos
add
sbb
mov
jmp
jge
int3
nop
pop
mov
rcrl
inc
and
lahf
stos
call
or
and
and
adc
mov
sub
inc
adc
jp
xchg
mov
add
xlat
es
outsb
cmp
mov
stc
lcall
mov
sbb
add
fildl
lret
cli
adc
jno
test
dec
ja
popf
push
inc
mov
fiadds
icebp
pop
incb
sbbb
xlat
mov
aas
jmp
fdivrs
ret
test
add
add
jp
jle
and
xchg
and
inc
mov
ss
dec
popf
mov
lret
cmc
cmp
rol
dec
stc
fldt
fnstsw
filds
pop
inc
dec
push
and
sbb
mov
popa
fsubs
shl
int3
mov
push
test
fsubl
mov
mov
push
mov
iret
insl
inc
gs
xor
mov
inc
and
insl
push
andl
mov
cmpsb
fidivrs
pop
sub
cmc
nop
stos
imulb
inc
scas
xchg
push
aam
clc
stos
jp
or
mov
push
sub
cmpsb
pop
cmp
popa
sbb
add
dec
out
mov
fimull
add
mov
xor
lock
insl
or
ret
fs
leave
negb
mov
in
jne
sbb
pusha
imul
jecxz
inc
imul
in
cmpsb
aaa
xlat
repnz
dec
fisttpll
ja
std
fldenv
or
outsb
mov
cmp
or
or
repnz
add
arpl
mov
jne
cmpsl
loop
in
inc
arpl
jns
jo
data16
iret
mov
cs
jecxz
jbe
lds
push
jecxz
add
mov
scas
mov
int
mov
xchg
je
js
inc
lret
xchg
cmc
pop
inc
es
mov
pop
loopne
mov
arpl
xor
xchg
loope
sbb
mov
push
insl
in
scas
pop
cmp
mov
outsb
in
ljmp
jl
push
fidivl
fsubr
push
fs
mov
cwtl
push
push
icebp
jge
mov
pusha
jne
pop
push
shlb
sub
fistpl
outsl
or
cs
adc
xchg
insb
add
popf
sbb
push
sub
aas
call
in
or
ror
and
mov
and
inc
cmp
adc
mov
mov
add
imul
add
les
test
fistpll
jg
sbb
out
popf
and
clc
or
ljmp
or
fldl
xchg
mov
add
stos
inc
scas
mov
fiadds
jge
stc
ret
adc
fld
or
xchg
ljmp
fidivl
cmp
sahf
arpl
test
nop
clc
cmp
mov
inc
push
sbb
and
call
mov
call
loopne
lahf
leave
std
add
jge
loop
xchg
dec
cli
mov
mov
decl
sbb
mov
mov
idivb
pop
jno
or
and
xor
enter
adc
or
cwtl
mov
ret
or
jecxz
sbb
test
int
jge
mov
je
mov
sbb
cmp
jmp
stc
jne
negl
sbb
pop
jg
xchg
mov
jg
mov
pusha
sti
add
dec
fadds
and
mov
fldcw
lock
inc
and
arpl
mov
jp
loopne
test
pushf
mulb
mov
push
lds
ret
mov
int3
mov
inc
cmpb
pop
scas
clc
rorl
and
ret
mov
popa
sub
push
es
daa
sbb
mov
xchg
out
inc
je
inc
dec
icebp
fcoml
cmp
lret
pop
lods
ficompl
mov
scas
cli
shl
jb
iret
jne
push
lahf
xchg
mov
xchg
push
jbe
pushf
je
jecxz
mov
jmp
filds
sub
mov
jo
push
lock
orl
pop
sbbb
mov
pop
loopne
daa
cmc
int
jge
aaa
cmp
cwtl
fdivr
inc
fildll
push
xchg
add
mov
mov
mov
outsb
mov
loope
push
xor
and
pop
jle
stos
insl
pop
mov
push
stos
xchg
outsb
cmpsl
movsb
in
jmp
ja
and
mov
mov
fsubrs
mov
push
xor
jne
fadds
dec
insl
arpl
fstpl
dec
arpl
xor
mov
mov
fsubrl
xor
loop
addb
lea
pop
bound
data16
hlt
pop
sbb
movsl
cmpsb
sbb
add
push
popf
in
mov
rolb
mov
lret
adc
addr16
and
dec
lods
sbb
hlt
rol
jg
mov
sub
mov
sbb
add
sub
cmp
add
test
js
pusha
jns
mov
xchg
add
lods
test
jmp
add
jecxz
xlat
xlat
and
fnstenv
cmpsl
movsl
jb
sti
outsb
shl
shl
dec
es
arpl
mov
mov
fldl
cmpsb
vcvtsd2ss
ficoml
je
xorl
push
mov
or
jge
pop
test
shr
mov
mov
pop
mov
mov
inc
mov
cltd
sub
clc
push
repz
mov
cmp
scas
nop
mov
clc
loop
jae
out
out
pop
sbb
dec
aas
pop
das
pop
lock
cld
mov
pop
scas
cwtl
adc
inc
div
dec
mov
mov
cmp
xchg
imul
push
fstpl
jo
sahf
adc
je
pop
inc
and
mull
pop
cld
jbe
sbb
and
cli
nop
decl
adc
add
ljmp
stos
cld
repz
pop
push
mov
mov
sbb
and
pushf
mov
ljmp
test
cmp
mov
fdivs
dec
test
jne
and
add
dec
mov
test
dec
orb
ljmp
xchg
or
push
mov
lock
mov
mov
cmp
mov
outsl
and
call
mov
faddl
adc
fcmovb
fldt
or
repnz
in
adc
sbb
jp
rorl
mov
popf
sbb
mov
lret
inc
incb
pop
dec
mov
pop
ljmp
leave
adc
lret
cmp
fstps
out
mov
dec
loope
xchg
mov
jp
shrb
fwait
sbbl
mov
push
cmc
xchg
sahf
ficoml
jae
jbe
sub
mov
sbb
imul
mov
fimull
repz
movsl
data16
push
lds
lods
adcl
faddp
or
dec
cwtl
mov
push
push
mov
addr16
je
cmp
jne
pop
lock
popa
push
mov
ret
xor
fisttps
mov
outsl
sub
or
jo
pop
addl
sub
cmpsb
jp
xchg
lret
out
scas
jmp
lock
jne
mov
cmc
into
dec
or
push
and
or
mov
xchg
cli
js
mov
pop
ja
add
aam
scas
xchg
jle
sbb
jae
fs
mov
sbb
loopne
xchg
jns
cli
sbb
sub
aaa
je
stos
adc
push
test
and
cmp
push
mov
loope
mov
or
sub
jl
jae
nop
clc
dec
xchg
mov
xor
pushf
push
xchg
mov
data16
jns
cmpsl
popf
and
incl
mov
dec
cs
pop
shlb
adc
jb
mov
add
xor
shl
xor
and
in
and
fistpl
push
imul
push
loopne
aam
push
loope
inc
cmp
xor
std
scas
loopne
ret
xor
mov
mov
mov
loopne
lcall
out
mov
xchg
mov
xchg
and
or
inc
or
push
mov
aam
es
addl
leave
mov
xchg
and
and
insl
movsl
dec
jge
repz
popa
mov
mov
outsl
pop
add
mov
and
sub
and
and
lret
lcall
aas
jge
add
aad
or
push
xchg
lcall
adc
pop
jb
xor
ja
repnz
sbb
jo
jb
cli
push
xchg
adc
test
or
call
inc
add
inc
jae
adc
cld
mov
adc
mov
pop
mov
in
lret
into
dec
std
inc
mov
test
sub
icebp
outsb
mov
mov
adc
scas
les
das
inc
xor
fcomps
pop
cmpsl
ss
push
jo
sbb
or
sub
data16
hlt
sub
jp
mov
pop
lret
mov
jo
in
xchg
xor
data16
sahf
xor
imul
cmp
mov
sarl
dec
les
lods
or
ret
lahf
lret
dec
mov
xorl
push
decl
je
subl
pop
incl
xchg
mov
cli
inc
into
nop
enter
pop
jns
popa
xchg
sub
imul
loopne
jmp
pop
pop
sub
sbb
test
add
sbb
pop
pusha
pop
mov
je
not
sti
lods
test
call
sub
inc
xor
push
mov
mov
add
inc
xchg
jp
repz
or
jne
xchg
xor
xlat
in
ss
lcall
push
mov
inc
fistpll
mov
gs
dec
jg
fs
les
imul
lds
and
decl
jo
mov
cwtl
scas
repnz
pop
icebp
inc
ds
jp
xchg
mov
bound
out
sbb
add
mov
pcmpeqd
mov
mov
lea
aas
push
addr16
xchg
out
sar
addr16
and
not
movsb
cmp
xchg
call
or
nop
dec
mov
add
adc
pop
std
orb
stos
mov
cmp
mov
leave
mov
jo
cwtl
loope
loop
fdivrs
pop
roll
fcomps
sbb
and
inc
mov
lahf
xor
inc
sbb
sub
ds
sbb
push
xchg
subb
xchg
sbb
mov
test
ret
push
dec
add
test
mov
ds
push
xor
fwait
iret
xchg
mov
or
cmp
or
cmp
sbb
xor
add
xchg
cmpsl
xorb
mov
or
lret
lds
addr16
push
bound
jo
mov
xlat
lea
std
mov
arpl
adc
out
inc
push
data16
mov
mov
test
sub
pop
mov
leave
les
lds
repnz
pusha
pop
inc
adc
push
call
insl
cvtps2pd
clc
adc
jo,pn
dec
iret
inc
mov
push
aad
jg
mov
hlt
or
add
mov
rorl
sbb
lock
add
push
ret
sub
js
in
jp
aaa
shrl
shll
push
loope
daa
mov
jg
sub
in
or
dec
dec
mov
dec
xchg
inc
iret
cwtl
inc
xchg
mov
mov
cmp
add
mov
adc
inc
movsl
in
daa
call
mov
lods
in
add
dec
lea
je
mov
inc
adc
or
call
lret
mov
jo
mov
xchg
fistl
dec
cs
popf
inc
arpl
rolb
xor
cmpsb
addb
andb
call
sub
lea
add
inc
inc
add
mov
dec
mov
js
dec
out
mov
jmp
cli
jnp
cmc
jo
sbb
push
popf
jle
sbb
mov
dec
ljmp
push
mov
mov
dec
clc
push
gs
mov
xorl
and
insb
cmpsl
mov
push
fs
and
inc
inc
sub
pop
icebp
popf
fmuls
outsb
jp
dec
sti
or
lds
push
cltd
sub
pop
rcll
xchg
cmc
add
aaa
mov
outsb
inc
xorb
jo
push
out
insl
sti
mov
xor
jo
and
dec
or
lea
mov
sub
jb
fxch
daa
sub
insl
or
inc
inc
push
cmpsl
pop
popf
xchg
cmp
push
fdivr
mov
sbb
xchg
popa
test
cmp
sarl
lods
fdivrp
mov
push
jg
call
das
sbb
pop
je
incb
sbb
mov
fildll
insl
clc
es
ljmp
xor
mov
cld
insb
pop
in
cmovge
mov
jle
xchg
pop
mov
mov
bound
xor
mov
mov
inc
sti
sub
data16
ja
mov
mov
push
pop
push
test
int3
push
or
popa
xchg
inc
cmc
cli
in
sahf
sahf
add
enter
es
incb
dec
ret
ja
mov
sub
or
and
sbb
pop
lahf
scas
jl
inc
ja
add
mov
test
xor
adc
sti
cmpsl
stc
xor
fldl
dec
mov
cvtdq2ps
es
push
stc
cmp
cmc
mov
jno
push
ja
adc
lock
mov
sbb
push
imul
pop
push
jnp
aam
mov
push
stos
inc
movsl
adcb
imul
adc
data16
aad
and
xchg
ds
or
pop
loop
adc
dec
push
add
test
icebp
into
push
or
cmp
ret
call
pop
or
bound
fildl
int
mov
out
or
mov
add
sub
cmc
adc
das
std
aad
jb
xor
loope
mov
mov
inc
adc
mov
fnsave
outsb
push
mov
fidivrs
cwtl
adc
in
fwait
mov
sub
jnp
in
pop
adc
pop
and
dec
cmpsl
fcoml
push
and
and
insl
sub
sbb
pusha
add
jl
cmp
jb
jne
mov
loop
add
repnz
cmp
mov
inc
push
sub
pushl
xorl
sti
popf
outsb
dec
lret
sbb
dec
xor
cmp
test
clc
sbb
sub
sub
fidivrl
adc
test
iret
push
mov
mov
fcompl
js
pop
dec
push
inc
movsb
adcl
push
lds
push
mov
pop
sbb
push
sti
adc
jl
push
mov
test
mov
push
decb
mov
adc
cmp
sub
outsb
insl
add
or
sbb
test
subb
pop
jp
mov
push
adc
mov
and
pop
xchg
popa
push
js
add
jns
or
aad
outsb
test
sub
leave
or
xlat
sub
gs
mov
les
mov
icebp
mov
jnp
jg
bound
pop
rolb
ss
outsb
xchg
fsubrs
mov
xchg
inc
and
pop
incl
icebp
and
es
call
inc
mov
inc
pop
mov
xor
jg
adc
sarb
das
popa
orl
ret
sbb
sahf
mov
push
pop
push
into
jecxz,pt
sbb
andl
adc
subl
rclb
js
push
jle
xor
jl
add
test
and
push
je
xor
jnp
jmp
mov
push
mov
mov
xchg
stos
xor
adc
rclb
cs
test
adc
mov
mov
insb
push
jmp
lods
outsb
jo
or
repz
cmp
sub
cmc
lock
fs
test
mov
mov
xchg
test
lods
ljmp
pop
pop
or
call
sub
ret
mov
mov
iret
test
jae
pop
inc
arpl
outsb
repnz
insb
loopne
aam
mov
adcb
idivl
jmp
push
ds
sbb
sub
repnz
int3
mov
jne
mov
es
mov
jecxz
and
xor
jle
inc
mov
pop
stos
inc
push
mov
add
xor
shrl
rcl
jecxz
sahf
test
mov
aas
jl
xchg
aas
in
push
xchg
incb
push
mov
push
mov
sub
jne
pop
hlt
xchg
push
push
ror
adc
push
daa
jne
test
jg
fnstsw
lret
cwtl
fs
mov
idivb
rcll
mov
aad
in
add
aam
ds
push
sub
or
add
lods
xchg
loop
aam
add
retw
iret
lods
inc
mov
lcall
and
mov
fnstenv
out
sub
or
pop
movsb
adc
fst
in
push
adc
cmp
jmp
mov
out
adc
insb
xchg
shlb
or
ljmp
cmpsb
stc
xchg
pop
jno
rcrl
aas
aam
add
inc
pushf
xchg
or
clc
inc
push
xchg
lea
mov
push
jle
je
or
shlb
fadds
jecxz
fcomi
jo
mov
fists
add
inc
rclb
add
push
cli
inc
fadds
movsl
dec
pop
jne
inc
dec
dec
mov
adc
imul
ret
lret
lea
jp
imul
push
rorb
js
mov
pop
js
xorb
xor
sub
cmp
and
or
repz
xor
std
jbe
add
xchg
push
mov
mov
push
and
cwtl
lods
test
jl
in
ja
arpl
lods
dec
jae
ljmp
stos
sub
inc
int3
cltd
sbb
call
cmp
xor
daa
adc
xor
xchg
mov
jp
mov
inc
sub
lods
shrb
in
cmp
leave
push
sbb
pop
cwtl
mov
clc
repnz
das
test
in
ret
cwtl
dec
loope
jge
outsl
loopne
sahf
jnp
repnz
adc
shr
and
or
ja
scas
scas
nop
ret
inc
rorl
int
loopne
mov
mov
movsl
jbe
sti
xor
fldcw
mov
or
add
shll
sahf
movsb
adc
fildl
sbb
mov
add
sub
shr
mov
xor
lahf
dec
cmp
push
hlt
inc
out
mov
push
or
lea
cmc
jno
pusha
lea
cwtl
test
cmp
xchg
mov
dec
lds
arpl
sub
xor
test
and
adc
out
jnp
add
daa
jb
xor
sarl
xlat
sbb
insl
out
jnp
ja
jmp
test
fcmovnbe
pop
jo
in
push
stc
test
lcall
dec
mov
in
pusha
nop
aaa
inc
or
sub
inc
stc
xor
add
int
pop
in
outsl
scas
inc
xchg
dec
das
incl
das
enter
jb
ljmp
fstl
and
adc
or
stos
ret
leave
int3
popf
orl
cltd
add
pushf
sub
stos
cvtps2pi
mov
add
insb
fwait
dec
mov
pop
dec
mov
lock
mov
push
jnp
sti
rcrb
xor
inc
std
int3
pop
dec
sub
std
push
insb
jo
adc
fdivl
mov
push
stos
adc
inc
sahf
in
dec
int
mov
sbb
int
dec
outsb
jecxz
test
das
call
xchg
push
iret
sbbb
push
incb
int3
xchg
sbbl
jle
shll
push
jb
adc
and
push
inc
adc
pop
push
hlt
inc
out
fdiv
loop
sbb
cmc
xchg
stos
gs
mov
test
xor
sahf
js
pop
adc
inc
sarl
jo
jne
mov
add
scas
fcom
push
loop
fwait
xchg
jge
cmpsl
loope
sti
pop
dec
cmp
xchg
adc
aam
xchg
stc
pop
imul
clc
lods
cli
call
test
out
mov
or
mov
sbb
jg
or
call
outsl
aam
sahf
adc
subb
lret
in
push
cli
adc
out
push
jne
iret
cld
fucomip
aad
daa
mov
test
jo
cmp
sarl
pop
cld
es
sbb
into
xchg
or
int
aad
orl
incl
or
outsb
jecxz
and
test
das
push
cmp
paddd
sbb
add
shr
jno
xchg
xchg
popf
mov
mov
ljmp
std
inc
nop
mov
mov
cmp
cmp
dec
cmp
sbb
mov
adc
dec
push
cli
jecxz
adc
je
daa
cli
cltd
loope
jb
out
out
xchg
push
inc
mov
push
fs
stos
enter
pop
adc
or
mov
aad
lea
mov
inc
mul
mov
jnp
cltd
mov
dec
add
or
rorl
lods
test
jbe
enter
push
test
lods
sbb
stos
sub
mov
xchg
imul
or
dec
mov
jecxz
push
mov
ss
sub
sub
ret
cs
clc
je
cltd
in
pop
iret
add
jmp
or
adc
enter
ffree
or
adc
xor
xchg
pop
jae
icebp
inc
and
or
sahf
and
sbb
outsl
xchg
ret
push
lods
mov
cmp
pusha
int3
add
lock
lahf
and
adc
xchg
out
cmp
mov
dec
insb
insb
outsl
pop
add
push
and
ret
dec
dec
mov
inc
rclb
arpl
mov
sub
sbb
out
sub
xchg
aam
outsb
xor
sti
rorb
sub
cltd
andl
icebp
xchg
inc
xchg
or
sarl
sbb
and
fimuls
xor
push
jg
and
xor
xor
insl
push
or
add
mov
lret
mov
shll
lcall
scas
outsl
mov
dec
aaa
es
xchg
fcmovbe
add
mov
stc
lods
and
stos
jbe
out
insb
je
imul
sbb
aas
ror
xor
xor
enter
adc
xchg
sbb
xorb
or
inc
inc
pop
sub
test
cs
push
jo
pusha
dec
mov
sbb
iret
pop
inc
inc
imul
push
inc
add
out
andl
movsl
xor
inc
cld
loopne
ss
xchg
fdiv
xor
jmp
dec
dec
sub
jns
jle
pop
ds
mov
dec
sbb
fisubrl
mov
xchg
pop
hlt
lcall
jle
push
mov
push
call
roll
pop
pop
sti
jmp
pushf
inc
xchg
test
ret
push
cs
mov
aam
les
iret
add
loop
out
dec
pushf
enter
adc
mov
jne
aas
div
fistl
dec
cmp
add
inc
push
jmp
out
dec
in
jbe
incl
sbb
adcb
sub
pop
and
mov
loopne
loop
ret
lods
ret
fists
xchg
pop
fcomi
scas
add
movsb
pop
mov
jl
inc
jbe
jecxz
xchg
and
ret
jg
ds
push
pop
call
and
sub
aaa
mov
xor
mov
mov
outsb
mov
inc
ret
inc
xor
or
lods
aas
clc
push
int
or
cltd
xchg
out
popl
addb
pop
add
fisttps
repnz
call
cmp
lea
xchg
xchg
cmp
inc
icebp
jb
push
das
rol
add
sbb
fwait
mov
inc
fisttpl
push
adc
js
mov
pop
aaa
pop
or
or
add
sub
jle
call
or
xchg
lret
and
add
jns
int3
push
arpl
mov
mov
ljmp
push
mov
std
repnz
pop
lea
add
daa
call
imul
cs
fwait
ret
icebp
dec
test
fisubrs
push
ret
movsb
xchg
and
not
insl
adc
dec
outsl
push
pop
adcl
mov
push
xor
std
inc
sub
jmp
pop
pop
cmp
iret
mov
mov
add
or
movsl
mov
cmp
test
cmp
movnti
nop
add
ds
inc
or
outsl
add
ficompl
cs
cmpsl
xlat
mov
sbb
inc
loop
aas
xchg
push
cwtl
rolb
fcmovnbe
or
jne
fmuls
jge
xlat
shr
push
cltd
icebp
fcmovne
outsl
iret
mov
inc
and
out
adc
clc
xchg
or
sbb
dec
scas
in
mov
jle
cmp
mov
mov
push
dec
addr16
aas
lahf
std
mov
insb
nop
mov
pop
add
mov
jo
pop
incb
lcall
pop
inc
mov
insb
cwtl
lock
ja
xchg
xor
inc
cwtl
mov
cmp
add
push
push
fs
mov
xchg
clc
clc
inc
jbe
xor
les
bound
push
xchg
mov
cli
out
xchg
cmp
lock
or
inc
inc
cmp
mov
loop
push
cmp
in
ljmp
jecxz
scas
xor
push
int3
or
lea
mov
shll
adc
cmp
dec
xchg
xchg
sub
sub
jecxz
testb
pushf
into
lahf
cmpsb
jge
int3
cmp
prefetch
out
adc
inc
les
dec
xorl
inc
add
add
shlb
push
jp
sbb
or
inc
lods
fs
push
mov
data16
inc
cmp
js
pop
cmp
std
mov
push
pop
movsl
and
inc
mov
pop
mov
push
test
int
outsb
add
mov
sub
mov
in
scas
lock
fcoml
push
pusha
or
sbbl
fadds
dec
cld
fwait
and
out
jo
sub
insl
lds
inc
push
add
pop
inc
push
adc
inc
pop
adc
ljmp
adc
fisttpl
insl
jnp
ja
pop
test
bound
fsts
imul
mov
scas
mov
pop
push
sbb
in
das
add
shrl
add
cmpsl
jne
movsb
add
jae
pop
enter
push
add
cs
mulb
pop
xor
call
sbbl
arpl
mov
jae
mov
lret
pop
into
inc
mov
fdivs
sub
push
sub
iret
inc
lock
pop
fadds
mov
inc
pushf
loop
shr
clc
jl
lds
and
dec
mov
lahf
push
or
mov
adc
push
mov
mov
lods
mov
add
add
cmpsl
pop
in
aam
loope
ret
mov
repnz
loopne
repz
std
pop
lahf
ret
sub
xchg
imul
sbb
lods
imul
push
push
fcmovbe
out
dec
mov
arpl
mov
dec
cmp
repnz
mov
scas
pusha
jecxz
rorb
arpl
jno
mov
es
cmpsb
fincstp
fucomip
dec
jge
sub
push
rolb
add
xchg
mov
push
mov
stc
rcrb
jb
test
jb
sub
push
jno
jbe
inc
sahf
pop
sub
ret
cli
outsl
fcmovnu
pop
jno
ficomps
inc
addr16
or
imul
xchg
in
cmp
scas
pop
xor
pop
jmp
add
test
adcb
out
jne
cli
add
sbb
mov
arpl
sar
mov
lds
cwtl
inc
xchg
dec
call
icebp
add
jmp
push
test
mov
cltd
test
mov
lahf
or
loopne
or
jbe
dec
dec
xor
test
fisttpl
mov
movsl
push
clc
xlat
and
fildll
xchg
sarb
cmpsb
fldl
test
repnz
inc
out
pop
mov
xchg
pavgw
mov
jle
and
push
je
mov
or
aad
mov
jl
test
dec
mov
ja
sub
and
jbe
push
into
push
xor
andps
or
faddp
je
cs
test
jbe
ret
popa
int
into
mov
sub
call
std
add
add
mov
mov
mov
mov
arpl
cs
lds
lahf
adc
mov
xchg
ret
in
or
dec
lcall
popf
mov
or
cmp
das
int3
sub
sub
pop
shl
jecxz
pop
xor
push
aaa
adc
xor
and
in
pop
flds
mov
ds
ljmp
inc
je
jmp
roll
insb
push
xor
loop
pop
lock
jle
mov
das
fidivl
pushf
add
pop
fsubr
ret
jmp
outsb
fdivs
mov
mov
scas
and
push
pop
in
leave
in
out
movsl
jns
bound
cmpb
test
push
mov
rorl
pusha
addr16
lahf
call
mov
mov
loop
ljmp
mov
call
loopne
sub
sbb
test
cltd
or
dec
dec
test
jo
out
or
xor
test
pop
int
pop
push
gs
lea
movsb
enter
insl
sti
ss
mov
in
cmc
push
pusha
push
mov
ss
int
call
jo
mov
sub
xchg
push
dec
scas
sbb
mov
push
hlt
loop
push
and
and
rorl
jg
pop
xchg
gs
hlt
mov
and
jbe
xchg
inc
pop
negl
icebp
push
aam
mov
jae
inc
xchg
rolb
sbb
lret
mov
add
or
jl
stos
or
jmp
and
sbb
dec
xchg
pop
or
adc
test
push
ficomps
sub
aaa
fwait
into
cwtl
mov
gs
sbb
mov
or
sub
pop
cmpsl
data16
sbb
xlat
subl
cmpb
and
push
pop
or
cmp
inc
jns
adcb
test
xor
js
lods
pop
and
jg
std
mov
and
cmpsl
xor
shll
aam
test
xchg
push
aaa
mov
push
xlat
pop
cli
push
fsts
fadd
in
xor
jecxz
sbb
stos
int
addr16
add
sbb
aad
jno
pop
cmp
pushf
pop
lret
sub
scas
mov
pop
push
xchg
fbld
stos
fs
lea
inc
fildl
pop
pop
mov
jo
out
jle
out
dec
rorl
xor
sub
xlat
out
jbe
pop
adc
cmc
test
lahf
mov
mov
lret
shr
adc
xor
ss
jg
push
sub
jmp
fs
push
mov
push
sub
mov
mov
cli
xchg
jg
imul
mov
mov
leave
insl
scas
sbb
mov
ret
mov
shrl
pop
pop
test
sbb
dec
fbstp
mov
outsl
lods
push
cmp
jmp
jg
inc
aaa
sarl
cltd
xchg
es
sahf
pushf
imul
push
movsl
pop
or
in
int
xchg
into
pusha
sti
das
cld
jle
shll
and
xchg
push
pop
dec
imul
lds
and
xchg
lcall
jnp
ret
push
cli
jae
stos
add
push
xchg
incl
add
or
les
mov
cmp
mov
jp
aam
sahf
inc
xor
cld
dec
add
scas
xor
insb
pop
sbb
mov
out
lret
add
jg
adc
mov
jmp
mov
icebp
fisubs
sbb
sbb
into
lret
adc
loopne,pn
lock
add
hlt
into
push
fs
test
ljmp
outsl
mov
sub
dec
sbb
in
push
pop
lahf
cmp
mov
push
jle
mov
aaa
shl
ljmp
mov
sbb
xor
jl
or
mov
mov
push
movsb
adc
arpl
ljmp
fsubs
dec
push
push
add
cmp
push
stc
jae
xchg
lock
mov
xor
pop
cli
cltd
scas
clc
pop
or
lret
fcompl
lock
cmp
orb
rcr
mov
sbb
outsb
mov
xorb
add
xchg
and
daa
mov
cmp
das
mov
sahf
cmp
clc
pop
dec
mov
push
sti
add
mov
sbb
ret
dec
or
fistps
xor
fwait
out
enter
cmc
push
add
sahf
sub
and
dec
push
dec
into
pop
or
jg
shl
andnps
shr
mov
lock
xchg
add
inc
popa
or
push
icebp
and
pusha
add
push
mov
clc
inc
pop
jne
pusha
pop
sbb
in
out
stos
ror
push
iret
jmp
push
inc
push
pusha
sub
sbb
and
iret
mov
jecxz
int3
or
or
sub
sarb
sub
mov
idivb
mov
mov
xchg
outsb
add
and
fisubrs
out
dec
sub
inc
lea
xlat
sti
lret
push
icebp
int3
cmp
pop
lret
jmp
mov
ja
test
xorb
inc
fidivrl
adc
mov
inc
mov
add
push
push
dec
jae
pop
add
mov
sub
into
mov
sbb
xlat
insb
test
in
jle
call
lock
and
ret
jge
ret
aad
adc
outsb
inc
jl
or
pop
enter
adc
call
mov
jno
mov
test
fdivp
movsb
lea
call
xor
add
sub
shl
and
pop
jne
adc
and
sbb
jl,pn
insl
push
mov
out
xchg
fld
cld
adc
jp
lods
inc
aam
dec
mov
mov
les
and
jo,pt
clc
dec
pop
lret
into
arpl
or
xor
sbb
pop
call
push
xor
pop
and
gs
inc
rep
clc
rorb
cmc
xorl
pushw
sbb
xchg
mov
xor
clc
outsl
scas
sbb
sbb
lods
xchg
cmp
xlat
ja
fsubrs
mov
mov
orl
lock
aaa
lock
insl
pop
int
push
cmp
rcrl
or
sub
mov
arpl
subl
xor
stos
mov
sbb
lahf
sbb
movsl
cmp
ljmp
popa
test
xchg
and
sbb
lret
xchg
dec
in
cmpsb
mov
sbb
inc
or
in
pop
rcr
mov
or
dec
cmp
add
clc
push
lcall
js
aad
dec
decb
or
jno
outsl
inc
mov
cltd
movl
sub
je
jb
lret
pop
je
scas
cmp
orb
inc
aas
clc
outsl
lret
ds
pop
out
jmp
ret
cli
add
xchg
and
and
lea
sahf
test
adc
pop
test
mov
fcoms
outsl
insl
hlt
filds
lods
xlat
pop
rclb
mov
cltd
mov
push
and
mov
sub
stc
punpckldq
push
hlt
and
movsl
js
ret
test
in
cmpsl
inc
rol
cwtl
push
push
fiaddl
xchg
xchg
mov
adc
xchg
arpl
cmp
iret
pop
pop
clc
jecxz
mov
sub
push
and
pop
rolb
ret
and
nop
sub
cld
mov
test
sbb
pop
rcrb
lds
pop
mov
das
pop
sbbb
gs
and
test
dec
into
cmp
sbb
arpl
push
movsl
in
mov
pop
clc
orb
jns
adc
or
shll
mov
dec
jmp
insl
add
in
jne
cld
sbb
mov
dec
cwtl
call
and
fdivr
lds
ja
sbb
push
lahf
pop
lods
cmpsl
stc
cld
lahf
subl
js
jae
enter
jns
mov
cmpsb
dec
mov
sbb
jns
cld
mov
push
pushf
shll
jae
mov
inc
mov
stos
or
ret
pop
scas
das
mov
push
pop
pop
popf
or
xor
pop
pop
push
mov
mov
add
or
adc
and
jbe
bound
xor
mov
fimuls
pop
mov
pusha
insl
sarl
cmpsl
in
rclb
jle
daa
or
pop
or
and
loop
xor
or
pop
xchg
and
ret
jge
xor
icebp
inc
jbe
xor
push
aam
sbb
test
mov
imul
arpl
mov
dec
jne
sbb
inc
adc
in
mov
mov
add
or
aas
jl
lock
outsl
push
dec
xor
mov
push
test
cld
and
hlt
inc
mov
xchg
push
fisttpl
lds
and
cmpsl
mov
mov
mov
test
mov
sbbb
sbb
jl
fisubrs
repnz
push
mov
sbb
xor
mov
pop
out
nop
pop
enter
outsb
loope
pop
sub
das
and
sub
test
or
pop
stos
stos
popa
push
xor
icebp
rorb
sbb
movsl
pop
adc
inc
and
cmpsb
mov
push
add
adc
mov
call
ds
push
ror
in
pop
rorb
lret
in
test
dec
lcall
mov
aaa
outsb
lods
mov
xor
sub
jo
dec
inc
aam
je
call
jns
and
inc
sbb
and
jb
fcomip
pushf
rclb
xchg
fs
push
std
add
inc
push
adc
dec
stos
fucomi
jbe
mov
pop
or
sarb
mov
xor
fiaddl
and
push
lock
test
stos
outsl
fisttpl
dec
sbb
pop
aam
dec
add
aam
add
pop
sub
and
dec
rorl
call
js
dec
cmc
addb
dec
jp
popa
mov
ljmp
or
movsb
xchg
and
filds
jae
stos
js
adc
xchg
sbb
cmpl
pop
subb
iret
cmp
pusha
sti
call
test
push
insb
bound
leave
add
jnp
fidivs
mov
incb
jg
in
sbb
mov
push
mov
jle
inc
shll
ljmp
add
push
adc
adc
dec
jge
cmpsb
sub
or
loope
cld
add
pop
pusha
test
iret
mov
rol
inc
das
mov
outsl
xchg
divl
enter
xchg
sar
movb
cs
faddl
enter
movsl
enter
xor
and
sbb
jbe
imul
push
hlt
cld
dec
or
inc
xchg
jne
lahf
nop
adc
xor
xchg
xchg
aam
outsb
adc
sub
push
in
sub
add
ds
leave
jbe
push
mov
add
lds
into
popl
dec
xor
xchg
mov
loope
imul
cmp
lea
xchg
ret
adc
js
dec
fnstsw
testb
shlb
mov
shrb
lea
jbe
inc
in
ret
mov
push
ja
mov
cmc
lret
push
add
sti
cmp
sahf
popa
xor
and
or
jg
mov
push
and
loopne
fwait
pop
or
jl
mov
clc
pop
rclb
mov
cmp
bound
lock
pop
lock
lret
jecxz
pop
leave
mov
jo
lods
je
std
and
ljmp
in
js
mov
or
js
or
jb
rorl
out
outsl
mov
stc
mov
lods
or
and
jmp
mov
sbb
out
test
fwait
and
inc
shl
add
adc
das
mov
aad
xchg
mov
ljmp
mov
cld
cli
in
fcompl
pusha
sub
jle
int
ret
push
das
jl
out
loope
and
and
cmc
push
clc
mov
bound
popf
scas
pop
adc
jmp
xchg
outsb
fwait
es
and
mov
adc
js
mov
cmp
jmp
fsubrs
push
cli
shlb
cld
cwtl
repnz
out
lea
and
adc
clc
ret
jo
mull
pushf
and
and
mov
insb
insl
popa
jmp
xorl
fisttpll
ss
jno
jg
mov
icebp
mov
mov
pop
xor
jmp
cs
lret
mov
jp
xor
push
push
rcl
inc
jle
xor
jae
mov
clc
and
hlt
push
push
mov
or
sub
lods
inc
mov
xchg
jno
outsl
pop
push
sarb
push
cmp
loopne
xchg
decb
pop
aad
fucomip
jno
popa
lahf
cld
jp
addb
out
insl
jno
dec
jg
or
mov
sbb
dec
and
mov
xor
loope
orb
cmp
mov
jns
jmp
xor
out
jle
adc
rorb
dec
divb
popa
inc
pop
sub
movsl
in
test
and
cld
mov
std
pop
or
lret
push
pushf
adcl
fwait
or
ficoms
adc
incb
xor
push
mov
and
and
cld
shrb
das
pop
lret
pusha
orb
daa
fiadds
insl
std
loop
mov
lcall
int3
push
bound
vpsrlq
mov
inc
out
imul
loop
ret
ret
xchg
cmc
ret
adc
jmp
mov
push
das
fdivrl
push
mov
outsl
and
outsb
jg
outsb
mov
inc
xchg
movsb
xor
ss
inc
pmullw
insb
inc
xor
xor
testl
xor
lahf
push
push
popa
cltd
pop
orb
fbstp
dec
sbbb
sub
enter
test
scas
mov
and
out
pop
xor
mov
addl
push
sub
loop
mov
pop
lea
pop
xchg
mov
pop
mov
ret
jo
stos
or
into
loopne
sbb
xchg
xchg
or
inc
jl
jbe
cmpb
mov
sbb
dec
lock
xlat
inc
js
outsl
negl
sbb
inc
jl
pop
in
sub
push
adcb
sbb
in
cli
lcall
pop
daa
jo
sub
shll
push
js
jecxz
xchg
dec
lcall
aam
cmp
pushf
inc
lds
fsubs
push
mov
jne
add
sub
sub
ret
jo
push
shll
mov
xchg
lcall
ret
or
lods
inc
sti
and
xchg
outsb
mov
push
jge
inc
daa
out
sub
call
in
mov
jl
enter
push
rcrb
loop
mov
fstpl
aaa
fmul
out
jo
daa
into
or
jg
popa
outsl
jle
stos
or
das
jmp
jle
inc
and
and
mov
jo
pushf
lds
fwait
shll
cmp
inc
loop
fldl
aaa
xchg
cmp
repnz
pop
and
add
jne
adc
aaa
push
mov
test
dec
subl
dec
add
push
jne
call
adc
and
mov
ja
iret
push
push
sbb
jg
movsl
inc
sahf
mov
nop
into
cld
inc
loop
movsl
xchg
ret
jno
add
ss
jle
mov
mov
out
stos
stos
aas
add
or
scas
leave
or
jecxz
xor
repnz
pop
inc
xchg
loopne
sbb
fnsave
push
es
mov
out
mov
mov
adc
inc
arpl
or
or
mov
and
sub
dec
call
cmpsb
cmp
pop
and
scas
movups
fbstp
mov
push
bound
pop
xchg
insl
in
push
test
outsl
inc
lock
sbb
sbb
add
jo
dec
scas
fwait
or
mov
mov
insl
mov
pop
notb
std
mov
testb
and
subb
das
sahf
loope
or
add
xchg
and
xchg
mov
in
outsl
fildl
and
xchg
out
enter
push
jle
fistpl
stos
and
pop
sbb
xor
push
sub
lea
pop
or
push
add
pop
mov
xor
xchg
aad
roll
mov
mov
loopne
out
mov
repz
mov
andb
and
outsb
push
mov
adc
outsb
sbb
pop
xor
std
jmp
cmp
aad
mov
dec
pop
aaa
insb
incl
std
add
stc
push
popa
push
inc
push
movsl
aaa
cwtl
xor
es
and
mov
lods
or
movsl
lea
dec
or
mov
addl
mov
sbb
roll
mov
outsl
test
or
xchg
je
daa
adc
mov
xchg
mov
jb
push
aas
cmp
aam
dec
cs
pop
outsb
popf
adcl
cmp
orb
popa
sbb
stos
ficoml
and
call
lret
or
push
xor
out
in
repz
ds
call
int3
imul
xchg
aaa
xlat
mov
and
test
lods
inc
cmp
loope
js
mov
stc
add
ja
push
mov
inc
sti
mov
call
jbe
int
add
mov
adc
aas
js
fdivrl
sub
add
xchg
xchg
sahf
xchg
dec
orl
sub
mov
inc
sar
jns
inc
adc
into
sub
adc
push
ja
dec
es
mov
ret
xchg
aaa
or
mov
loope
jg
jg
data16
mov
addl
fbstp
adc
out
cwtl
into
mov
mov
mov
lds
loop
cs
addr16
movsl
jle
and
jnp
xor
or
scas
add
int
cmp
mov
cmp
pop
dec
xchg
and
in
mov
jg
lods
fisttpl
out
dec
sar
adc
xor
and
xchg
mov
mov
mov
out
push
jl
rolb
sbb
movsl
pop
pusha
xchg
rorb
cmp
push
mov
neg
adc
imul
out
mov
push
jl
push
nop
cltd
mov
aaa
test
stos
sub
add
imul
test
inc
inc
push
fs
jmp
int3
icebp
push
lea
mov
sbb
pop
das
jns
int
push
sbb
adc
jbe
les
mov
xchg
cs
rcll
pop
xor
inc
sub
mov
dec
cwtl
mov
rol
mov
pop
sbb
adc
xchg
cmp
dec
mov
ret
dec
cmp
cmpl
orb
aad
lock
popf
mov
cmpsb
call
adc
roll
jne
jne
push
repz
pop
push
xchg
mov
notl
mov
pop
dec
dec
lds
aaa
aaa
sbb
clc
mov
pop
test
sti
inc
push
or
fsubrs
aas
mov
test
test
aas
push
popl
inc
xor
clc
adc
xor
inc
and
jg
popf
adc
daa
fists
pop
xchg
outsb
cmp
idiv
push
fs
cmp
xchg
sub
xchg
pop
pop
pop
jne
out
outsl
mov
aad
das
jecxz
pop
push
test
xor
pop
clc
mov
imul
inc
mov
loopne
push
cld
je
push
push
mov
cld
cmp
popa
arpl
fwait
pop
or
out
jl
insb
in
sub
inc
mov
insl
cmp
rcl
cmp
sub
jo
sub
xchg
sti
xor
stc
out
pushf
jo
or
pop
push
test
negl
das
fsubr
mov
std
pop
aaa
sbb
xchg
bound
xor
and
mov
aaa
fnsave
sub
ret
sbb
jo
adc
nop
mov
loopne
in
mov
addl
sbb
pop
sub
or
iret
mov
and
imul
pop
inc
sbb
cmpsb
shlb
fisubs
hlt
fldl
jle
cmpsb
cmpsb
inc
cmp
icebp
mov
popa
mov
jg
sbb
push
inc
lret
sub
dec
mov
pop
pop
sbb
and
mov
in
add
jg
adc
lods
dec
adc
dec
insb
or
mov
push
jge
je
loope
mov
inc
enter
mov
cmc
popl
mov
mov
js
inc
jle
inc
cwtl
inc
cmpsl
sbb
push
pusha
push
shl
cmp
aaa
dec
dec
add
jmp
repnz
lods
mov
popl
ds
and
lcall
xchg
test
aam
sbb
stos
fcomps
push
rcrb
negb
sbb
jmp
sbb
scas
pcmpeqb
sub
outsb
mov
int
mov
xchg
push
pop
adc
jp
inc
fildl
jg
imul
pop
daa
xor
add
in
pop
mov
cmovne
jbe
and
fsub
in
and
push
jnp
mov
mov
cli
or
adc
cmc
outsl
frstor
pop
sub
cs
mov
and
hlt
or
mov
ss
fcompl
mov
ljmp
mov
ss
iret
mov
sbb
test
add
sub
push
aaa
xor
sub
lret
aas
orl
outsb
jge
push
popa
lods
cmpl
sub
addl
push
fdivs
lods
mov
cmp
and
or
cwtl
mov
mov
iret
mov
push
insl
daa
sub
mov
adc
or
xor
cltd
iret
mov
inc
push
std
rcrl
dec
int
jge
ds
test
pop
lock
je
and
mov
jg
aas
and
sbb
and
sarl
cltd
mov
pop
or
scas
into
add
and
mov
hlt
push
fmull
lock
mov
fistpl
adc
stos
cmp
add
mov
cmpl
jne
push
push
push
out
fsub
mov
enter
dec
and
sub
ja
mov
nop
or
outsl
adc
decl
jecxz
mov
addr16
and
jo
mov
out
xor
push
mov
scas
push
add
aas
mov
dec
mov
ret
and
xchg
jle
add
add
mov
in
sbb
lahf
push
mov
inc
mov
sub
sbbb
push
push
xchg
je
inc
negl
mov
popa
aaa
fisttps
mov
sub
mov
or
dec
js
icebp
test
inc
and
push
std
or
out
sbb
push
add
pop
dec
xlat
pop
inc
jno
dec
jl
ja
fs
mov
inc
push
jmp
in
popa
mov
add
mov
cmpsl
add
jecxz
ret
in
test
push
sub
or
out
jne
stos
sbb
xor
jno
mov
push
inc
loop
mov
sub
leave
daa
cs
sarb
push
std
sti
inc
mov
sbb
mov
fmulp
mov
push
adc
lods
loopne
xchg
add
jg
aas
xchg
shrb
sub
icebp
mov
std
mov
lea
rolb
adc
fwait
adc
fdivl
daa
lcall
mov
aas
sub
jl
jg
push
arpl
mov
jno
xchg
clc
cmc
cmpsb
sbb
adc
cmpsb
iret
cmp
ljmp
xor
mov
xlat
dec
push
call
dec
data16
scas
pop
insb
xor
mov
insl
mov
daa
sub
mov
js
adc
sti
or
xchg
jb
mov
xchg
xor
jle
xor
jae
pop
sbbb
sbb
ret
inc
ja
cwtl
cmp
mov
in
cli
jl
fsub
sahf
mov
jg
movsb
and
enter
and
sub
sub
filds
rcrb
inc
sbb
cmp
add
vmwrite
pop
decl
aam
xchg
xor
fwait
pop
ja
jmp
and
rolb
pusha
xchg
ja
xlat
xor
pop
into
mov
or
movsl
out
or
test
pop
sbb
mov
lcall
jno
lods
enter
std
decl
mov
hlt
jle
push
jg
in
jno
cmp
mov
pop
mov
mov
ret
dec
sub
fcmovb
sbb
movsb
mov
sti
inc
pop
fidivrl
int3
jecxz
xor
adc
or
dec
out
push
or
cwtl
xor
mov
fisttps
pop
sub
lea
aam
ret
jecxz
dec
jo
movsl
push
loopne
in
pop
in
movsb
or
mov
rorl
test
mov
mov
push
dec
jge
push
movsb
inc
jo
and
pop
in
test
cmpsb
adc
jg
pusha
push
subl
push
mov
pop
cs
mov
loop
or
push
sub
cmp
push
lods
decl
arpl
xchg
cmp
xchg
cs
dec
cmpsl
sbb
mov
test
mov
pop
xor
ljmp
mov
inc
cmp
outsb
lock
out
repz
cld
test
lods
or
stos
adc
sub
sbb
ret
adc
dec
lock
lea
xor
pop
fadds
mov
mov
cmp
arpl
xorl
icebp
flds
and
repz
sarb
aaa
cs
push
mov
inc
jbe
or
mov
sbb
dec
repz
clc
and
dec
xor
pop
pop
mov
dec
push
lea
push
or
std
sahf
cmp
or
push
pop
std
or
mov
frndint
mov
mull
sub
in
repz
mov
inc
call
cli
inc
sub
xor
mov
cmc
jecxz
std
ffreep
inc
xchg
icebp
push
shlb
call
lcall
push
sbb
aad
mov
mov
xor
mov
sub
stos
enter
shl
ret
cmp
mov
adc
enter
insl
pop
cmc
movsl
xchg
ds
not
xchg
sub
mov
testl
inc
mov
lahf
and
push
aaa
mov
pop
outsb
sbb
insb
cs
adc
push
loopne
fadds
sub
clc
lcall
loop
or
out
repz
jmp
in
cld
mov
pusha
mov
push
pop
fisttpl
push
pop
popf
mov
insb
dec
outsb
cmp
shrl
push
jp
add
fsubrs
or
dec
jl
mov
xchg
push
sub
test
push
test
pop
jns
mov
jb
imul
push
mov
and
ds
xorl
pop
stos
sub
mov
out
xchg
push
adc
or
outsl
dec
sbb
inc
aas
pop
clc
call
sbb
sub
pusha
xorl
iret
push
jbe
test
pop
lock
xchg
mov
out
cmp
push
dec
fistl
sbb
push
das
sbb
inc
mov
iret
setle
lahf
test
daa
cmpb
aad
inc
and
stc
movsl
test
pop
xchg
gs
push
and
lock
jl
inc
dec
cmp
repnz
cmp
push
movsb
mov
sarl
aas
call
call
push
jno
xchg
sub
loop
inc
int3
mov
and
lock
xchg
and
sub
aaa
push
mov
dec
mov
lcall
loop
xchg
and
jbe
dec
sbb
test
ss
mov
loop
mov
mov
inc
out
cmp
mov
popl
adc
or
mov
addl
push
lds
sub
aad
xor
jbe
xor
cmp
push
add
inc
push
repnz
aas
push
mov
and
sub
xchg
clc
push
loopne
into
add
mov
or
push
gs
mov
andl
dec
cld
das
mov
push
ja
xor
movsb
jb
cmp
xchg
adc
xchg
insl
jmp
into
ss
arpl
jbe
pop
jae
xchg
fiadds
js
imul
insb
sbb
aaa
in
addl
dec
or
aam
lea
xchg
les
mov
adc
or
xor
out
add
pop
hlt
cmp
adcb
cmpsl
int
xchg
fidivs
jns
ja
pop
fldl
neg
shrl
pop
dec
push
test
sub
pop
out
cmp
sbb
jmp
test
push
sbbl
pop
mov
sbb
lock
mov
ret
xchg
das
call
cld
add
cli
xchg
addr16
cmpsb
stos
clc
ljmp
or
sbb
mov
bound
or
push
add
pop
mov
test
lods
daa
add
aam
mov
fisubl
adc
xchg
sar
fildl
clc
popf
pop
pop
cmp
shll
pop
das
mov
sahf
roll
cmp
add
fstpt
jle
mov
sub
mov
leave
icebp
lock
sbb
inc
aam
mov
xor
inc
push
xor
and
decl
rol
cwtl
daa
lds
and
mov
lea
cltd
xor
sbb
das
mov
pop
je
lds
pop
push
push
fnstsw
es
lahf
subl
sahf
jb
dec
cltd
jnp
notw
popa
outsl
outsb
sti
or
push
test
ljmp
adc
popf
jle
inc
nop
xor
sbb
xchg
mov
sbb
mov
adc
faddl
aaa
jle
repnz
jno
js
mov
or
xchg
loopne
out
dec
pushl
add
adc
sub
movzbl
xchg
in
leave
sbb
orb
mov
pop
mov
out
add
cmp
xor
cmpl
subl
mov
and
lds
sub
cmp
inc
imull
sbb
cmp
fmull
pop
push
mov
and
inc
cltd
push
das
pushf
add
cmp
push
lods
out
fcmovbe
add
adc
loop
jnp
sti
and
addr16
in
xor
shr
hlt
sbb
jl
jp
test
add
enter
sub
fildll
cmc
rorb
or
pop
icebp
lods
adc
pushf
add
js
sbb
add
das
xor
movsl
arpl
movsb
or
test
cld
push
call
lods
popl
int
mov
dec
mov
ficoml
mov
cmp
aad
xchg
outsl
outsb
fidivrl
ss
and
sub
xlat
in
pop
adc
test
add
mov
mov
xor
mulb
mov
adc
in
mov
into
data16
ficoms
clc
adc
fwait
mov
add
inc
gs
jp
stos
sub
mov
clc
inc
pop
shlb
pushf
pop
jbe
fbstp
mov
mov
mov
and
xchg
xorl
out
mov
sbb
jnp
sub
jg
mov
pop
jmp
xchg
inc
adc
cmp
aaa
mov
pop
xor
pop
cmpsl
mov
outsb
mov
and
cmpsb
add
mov
aaa
cld
cmc
mov
push
mov
fiadds
sub
ret
push
lods
hlt
pop
rcll
loope
mov
fwait
decb
sbb
das
in
call
loope
xchg
aam
movsb
sbb
movsl
outsb
xor
popf
ljmp
pop
xor
or
cmpsb
mov
xor
or
dec
xor
adc
push
or
lock
lcall
rcrl
subb
leave
add
or
xlat
lcall
sar
or
or
xchg
pop
or
pop
jae
out
add
loop
mov
and
sbb
jbe
fucomp
insl
cmpsl
mov
jb
mov
aad
test
loop
mov
sub
add
lret
sarb
out
mov
orl
inc
add
mov
cmp
and
xor
pop
sbb
stos
addl
popl
aas
ret
ds
mov
fcoms
add
movsl
adc
aaa
in
scas
dec
in
loop
add
jmp
mov
dec
icebp
lods
mov
test
inc
or
sbb
out
add
adc
add
js
xchg
and
pop
out
into
add
fistps
cltd
jne
xor
ljmp
ljmp
fadds
lret
inc
aad
test
inc
mov
sti
adc
cs
aaa
adcb
inc
push
adc
push
decl
adc
test
xor
and
or
xor
mov
mov
sub
pop
test
mov
cmpsl
daa
push
adc
mov
push
push
iret
nop
push
imul
fildll
adc
adc
adc
clc
push
sbb
dec
pusha
jecxz
dec
or
jne
and
es
out
fidivrl
cmp
jp
adc
mov
mov
jb
pop
inc
not
negb
and
or
ljmp
in
pop
js
push
mov
cwtl
mov
repz
cmpsl
cmp
xchg
cmp
pop
rorb
fcoms
sbb
sbb
mov
call
fists
dec
clc
sbb
sbb
mov
pop
jl
pop
fistps
pop
fcom
xor
call
add
imul
add
jl
mov
pushl
or
push
xchg
rol
push
bound
mov
mov
icebp
test
xor
cmpsl
test
dec
rcll
pop
lcall
jmp
inc
pushf
push
xchg
dec
and
mov
xchg
mov
inc
fldcw
mulps
sub
inc
rol
mov
xchg
adc
sub
or
sub
jle
mov
movb
sbb
cmp
ficompl
sbb
adc
mov
ffreep
and
dec
lret
cwtl
mov
es
andb
lcall
insb
scas
pop
mov
cld
pop
jle
lahf
inc
scas
cmp
loope
stc
das
stc
add
pop
in
inc
icebp
sub
sarl
shrl
jo
push
or
xchg
ret
push
popf
fdivl
js
pop
push
pop
mov
jp
and
aad
pop
add
ret
pop
lods
mov
and
mov
icebp
loopne
in
or
jae
pop
add
cmp
outsl
or
add
jb
mov
mov
stos
sub
xchg
loop
lea
in
or
or
xlat
das
jl
test
xchg
adc
pop
push
call
mov
mov
pop
fcompl
push
push
mov
mov
jo
loopne
pop
pop
mov
fcomps
jp
popa
stos
jp
sub
stc
xlat
inc
fnsave
xor
sub
jle
nop
fs
movsb
pop
subb
je
push
cmp
movsl
call
and
pop
popa
lret
dec
stos
xchg
lods
cwtl
push
xchg
push
or
push
xchg
test
pop
enter
dec
push
adc
push
jl
fsubrs
inc
mov
insl
stos
mov
pop
push
and
loop
sbb
icebp
in
dec
pop
inc
lret
mov
mov
aad
or
add
pop
inc
mov
mov
popa
xchg
fidivs
mov
lret
pop
sub
and
pop
jecxz
sub
mov
or
mov
cmpb
loop
inc
inc
mov
pop
pop
sub
and
add
adc
dec
shll
inc
pop
icebp
lods
and
int3
inc
mov
mov
fwait
jg
sbb
push
mov
aaa
push
loopne
fwait
nop
inc
sbb
lock
sbb
cmovle
cmp
xchg
gs
push
push
daa
adc
push
clc
fisubrl
lret
orb
mov
push
test
icebp
push
mov
icebp
lds
mov
or
inc
scas
test
stos
stos
jle
ljmp
adc
movsb
and
repnz
leave
fsts
mov
mov
lahf
stos
inc
xor
dec
push
movsb
inc
mov
sbb
sbb
xchg
jb
cmp
addb
add
adc
jae
and
std
and
jle
dec
fld
out
and
dec
decl
repz
or
test
adc
mov
js
insb
sbb
mov
insb
xchg
outsb
or
dec
popa
sbb
ja
xchg
fidivs
ret
pop
adc
stos
xchg
mov
mov
in
sub
and
jns
xchg
xchg
mov
scas
daa
icebp
cmp
sbb
mov
inc
sub
aad
movsl
jns
sbb
mov
repz
pop
mov
jp
mov
shrl
sbb
movsl
in
fists
aaa
mov
mov
jge
mov
out
rolb
or
fsts
and
je
ljmp
sbb
adc
mov
daa
sbb
and
cmp
mov
and
mov
push
mov
xchg
cmp
jae
adc
push
mov
pop
dec
imul
push
outsb
insl
mov
aas
and
es
incl
xor
or
dec
outsl
scas
call
arpl
std
and
in
cmc
pop
icebp
inc
cmp
and
dec
int
int3
jne
or
jo
and
xlat
and
fdivrl
ljmp
push
addr16
incl
outsl
cld
mov
dec
les
sbb
das
xor
xchg
and
lds
push
shrb
sub
push
jno
fadds
dec
dec
mov
xchg
inc
jg
xchg
sahf
sub
xor
lea
out
rcll
call
imul
ljmp
test
jle
scas
aam
or
ret
int
addl
inc
push
mov
imul
inc
pop
outsb
popa
adc
into
and
mov
push
mov
pop
dec
fildll
out
cwtl
hlt
add
mov
testb
jbe
movsl
lret
rorb
in
xor
mov
mov
sti
fwait
sbb
int3
add
mov
lea
and
fidivs
gs
mov
cld
loope
out
or
mov
mov
push
daa
lods
pop
in
in
bound
decl
cmp
scas
addr16
cltd
shlb
test
outsl
push
ret
adc
jg
mov
outsl
inc
pushf
repnz
lahf
lods
das
mov
jle
lods
sbbl
mov
sbb
loope
loope
fadd
mov
imul
loope
push
pop
pop
add
stc
or
push
xor
xchg
jnp
jnp
test
pop
fiadds
add
fisttps
cmc
mov
repz
in
leave
sti
xchg
and
aam
adc
aam
adc
jns
dec
lock
test
push
dec
pop
std
cmp
mov
pop
shl
push
xor
push
push
imull
lods
xchg
hlt
mov
push
push
add
gs
or
or
fs
shll
scas
jno
mov
and
loopne
xor
cmp
std
and
ja
mov
in
xchg
std
sbb
imul
dec
inc
jmp
sbb
mov
sub
sbb
jp
adc
push
out
jno
arpl
daa
sti
filds
shrl
lahf
xchg
xchg
fs
add
jmp
mov
shr
inc
sbb
std
and
movb
fs
ret
dec
cmp
insl
outsb
sbbb
mov
or
loopne
jno
divps
cmp
divb
outsl
repnz
push
add
rcr
xor
push
or
outsl
and
insb
arpl
out
jmp
dec
sbb
lret
sti
dec
ror
lock
push
shll
xchg
shl
fsubrp
sahf
xor
jg
xchg
cli
push
pop
cli
dec
int3
repz
mov
fdivp
dec
sub
pop
mov
out
add
add
inc
jle
pop
xchg
mov
or
sbb
ljmp
cld
loope
sbb
dec
inc
push
mov
xchg
sbb
dec
aad
add
cwtl
ja
adc
mov
fsubl
gs
push
daa
adc
dec
inc
shll
test
jle
enter
xchg
adc
jl
icebp
inc
testb
clc
mov
mov
jl
cltd
xchg
or
fwait
mov
xchg
jle
sbb
jo
outsl
mov
jle
js
mov
cmp
loope
cli
mov
jmp
dec
mov
xchg
sub
loop
mov
push
inc
and
mov
testl
inc
addr16
mov
iret
stos
xor
xchg
clc
arpl
std
xor
stos
and
pop
mov
call
rcrl
push
sbb
push
and
outsb
pusha
xor
test
add
push
push
roll
pop
loope
js
jmp
cld
bound
mov
xchg
outsl
push
stos
pop
orl
lds
jo
fs
in
sarb
jg
aam
inc
pop
movsb
daa
addl
xchg
xchg
mov
mov
sbb
sbb
adc
popf
daa
adc
int
clc
jae
jno
add
out
jns
dec
std
pop
cmp
fists
sub
mov
lock
movsb
mov
gs
int3
cs
push
mov
mov
or
sbb
push
or
shr
lret
pop
rcl
mov
subl
rcll
mov
ja
divl
lock
mov
in
mov
pop
pop
ljmp
and
stos
adc
ljmp
inc
add
lock
rcrl
into
mov
dec
xchg
adc
ja
bound
mov
xor
aad
icebp
fwait
rcl
std
test
es
push
jle
aam
ret
cmc
sbb
mov
in
sub
inc
sbb
ds
inc
pop
sbbb
pushf
cld
pop
lahf
fisubrs
flds
cltd
rcl
scas
rclb
mov
shlb
sub
sub
nop
mov
or
iret
lret
cs
rclb
enter
ret
or
icebp
int
mov
rol
sbbl
pop
cmp
test
out
push
or
sub
jl
push
sub
cmp
std
cmp
aad
test
outsl
jmp
or
les
sbb
jp
pushf
sbb
pop
gs
test
stos
cmp
aad
inc
es
push
inc
sbb
add
dec
mov
cmpsl
sub
mov
sub
dec
dec
mov
add
push
mov
dec
jnp
outsl
dec
jl
adc
sub
js
and
aad
cld
repz
pusha
sub
loope
mov
lcall
or
ja
xor
adc
lea
mov
in
dec
xor
fcmovnb
or
cmpsb
adc
shl
sbb
shrl
fcmovnbe
cmp
sbb
jno
xchg
mov
icebp
cli
test
jg
mov
clc
mov
rolb
or
ss
or
cpuid
sbb
fsubs
cld
mov
mov
sti
mov
adc
push
out
ret
dec
and
mov
mov
cmpb
into
mov
testl
mov
std
test
xchg
adc
lds
mulb
inc
add
push
xor
mov
jmp
sbb
sahf
das
mov
or
icebp
and
xchg
cld
ffreep
mov
std
xor
outsb
dec
outsl
or
ret
add
mov
cmpsl
mov
ja
test
jle
pop
test
push
subl
shlb
addl
aam
dec
inc
mov
imul
imul
xor
and
add
and
fildl
in
int
jmp
or
loope
push
sbb
arpl
lods
mov
dec
pusha
adc
xchg
xchg
or
mov
shrl
add
repz
sub
push
fildl
fldt
insb
sub
pop
and
std
mov
sarl
subb
subb
xchg
jo
pop
mov
movsl
sbb
in
das
mov
mov
pop
test
jmp
mov
pop
mov
adc
ficoml
je
das
or
jnp
push
push
xchg
inc
and
jmp
mov
inc
jmp
jb
mov
shlb
sbb
pop
popf
bound
mov
adc
aaa
dec
mov
dec
ja
cmpsb
sub
fcoms
ss
fbstp
mov
test
pop
out
push
push
pop
dec
repnz
stos
orl
popf
loope
xor
aad
or
fdivrs
mov
ret
jnp
adc
xchg
push
popl
icebp
rorl
in
inc
sub
sahf
jbe
or
cli
mov
std
push
mov
arpl
adc
insb
sahf
aad
je
hlt
outsl
add
ret
mov
data16
out
pop
clc
cli
int
push
pop
jb
adc
loop
ljmp
enter
stos
je
mov
decl
inc
sbb
sbb
icebp
out
push
loop
mov
add
cli
in
dec
dec
mov
inc
es
iret
sbb
enter
cmp
in
pop
test
cmc
mov
pop
mov
adc
shlb
and
push
enter
js
arpl
lock
add
mov
or
mov
and
dec
aaa
hlt
outsl
push
sbb
pop
adc
ss
add
clc
ret
and
mov
mov
daa
ret
jo
sbb
nop
imul
outsl
insl
mov
and
std
pop
mov
or
mov
lea
insl
inc
lock
cmpsl
jecxz
fists
call
nop
mov
mov
scas
and
daa
sbb
mov
aas
xor
sahf
adc
call
mov
in
xor
xchg
cli
test
lods
pop
cmp
icebp
mov
fcmovnbe
out
or
fwait
add
clc
rol
sbb
mov
imul
aam
sub
adc
not
lahf
sbb
dec
push
outsl
out
mov
inc
xchg
arpl
aam
jmp
jecxz
mov
jno
mov
mov
mov
jns
mov
popa
repnz
push
pop
shlb
push
push
jl
mov
addr16
movsl
add
fisttps
jo
icebp
xchg
cwtl
mov
test
push
inc
jne
push
or
jle
push
jp
ss
lret
aad
icebp
arpl
cmp
pop
les
aad
fmuls
cmpsl
scas
xor
imulb
cmp
lcall
sub
push
fdivrs
jmp
xor
test
pushf
pop
insb
cmp
adcb
adc
add
adcb
or
in
or
pushw
mov
add
xchg
inc
cld
adc
xchg
or
shr
btr
mov
adc
mov
sbb
inc
cwtl
arpl
or
xlat
mov
scas
or
repnz
add
clc
add
stos
or
dec
data16
data16
out
mov
imulb
out
test
dec
xchg
inc
ss
ss
push
push
mov
mul
lods
xor
imul
xor
add
add
cli
push
mov
mov
scas
adc
push
subl
push
cwtl
movsb
jmp
clc
mov
jg
adc
dec
addl
shll
inc
fldl
scas
out
adc
and
xor
scas
movl
shll
mov
mov
add
add
mov
sub
mov
mov
fdivrp
das
into
push
jb
or
fisubrl
add
sub
xor
loop
sub
jle
push
call
jmp
jnp
int
add
fcompl
cmp
cld
add
test
icebp
cmp
bound
or
dec
jp
cmp
es
fidivrs
push
add
sub
cmpsl
pusha
sti
xor
in
loope
adc
icebp
mov
sbb
push
xchg
sub
mov
push
ret
in
pusha
jg
outsl
xchg
pop
aas
sbb
sub
not
daa
lods
icebp
xor
shrb
dec
daa
add
sahf
sbb
push
outsl
mov
notb
xor
mov
insl
push
jno
or
jge
cwtl
xlat
sub
cmp
imul
dec
icebp
push
xchg
jp
cs
stos
iret
mov
rcrl
push
or
std
mov
xchg
stc
fstps
minps
mov
out
mov
and
test
jb
sbb
fs
xchg
push
popf
jle
cmp
fs
out
out
mov
mov
cmc
insl
mov
adc
fwait
jno
jbe
mov
aaa
dec
inc
mov
add
test
push
popf
imul
inc
movsb
shrb
adc
mov
lea
sub
jmp
pop
mov
icebp
or
push
pop
mov
dec
inc
xor
rorb
adc
jo
ja
pop
lea
push
cmpsb
cltd
mov
imul
jb
and
sub
nop
cmp
pushf
push
cs
test
pop
add
mov
inc
das
pop
lods
repnz
inc
movsb
pop
cmpb
mov
xchg
inc
xor
pop
adc
mov
inc
js
push
xor
mov
and
adc
push
shl
dec
add
push
daa
ret
push
test
movsl
sti
dec
or
insl
int3
fbld
mov
std
pop
fdivrs
add
int
xor
lock
mov
pop
fiaddl
xor
xlat
fdivl
sub
das
das
clc
loope
call
sbb
movsb
test
sbb
inc
sbb
jecxz
add
inc
fildll
jmp
mov
adc
stos
aad
mov
cli
subb
or
xchg
mov
call
mov
jb
xor
in
pop
aad
pop
pop
enter
jl
and
mov
fdivs
jle
xchg
add
adc
adc
push
or
imul
sbb
mov
push
cs
sub
fmuls
in
rcrb
add
sbb
jl
mov
pop
sbb
jmp
push
shlb
jnp
cmp
dec
scas
mov
mov
loopne
hlt
jae
xlat
sti
int3
or
fisubrl
stos
jns
push
fdivs
ret
adc
mov
shl
cmp
lahf
mov
jmp
mov
sbb
adc
cli
insl
lret
pop
pop
fcomp
push
aas
dec
cli
movsl
and
xor
xor
testb
idivb
clc
jl
enter
inc
aam
add
xor
or
cmp
push
lds
in
in
in
mov
cmp
test
fwait
loope
das
dec
mov
movsb
xor
inc
imul
xchg
int
sbb
nop
cmp
add
mov
outsl
push
cmp
in
pop
lock
ljmp
ljmp
aaa
rol
pushf
cmc
out
dec
aaa
inc
in
xor
das
insl
mov
adc
out
mov
inc
cmpl
push
pushf
dec
sub
push
inc
mov
in
xor
sub
and
stos
bound
shrl
sub
call
in
mov
icebp
sbb
adc
add
jg
ret
push
jne
sti
lock
or
inc
add
test
jns
and
dec
mov
imul
icebp
dec
stos
lahf
mov
xchg
push
iret
pusha
loope
dec
mov
mov
jnp
adc
scas
add
jl
mov
call
test
xchg
jo
inc
add
test
jp
cli
lods
call
lcall
jecxz
cli
and
lcallw
add
jg
std
jl
xor
enter
jb
incb
lods
mov
and
js
and
jecxz
clc
aaa
into
cltd
jmp
jl
rclb
xchg
push
push
outsw
or
mov
mov
cmp
in
pop
out
mov
jecxz
sbb
pop
subl
loope
aas
cmpsb
jecxz
jmp
or
mov
jge
pop
pushf
icebp
sub
testb
mov
test
clc
and
sbb
outsl
dec
sbb
jo
jg
and
xchg
ret
xorb
inc
in
mov
or
out
loopne
jb
test
mov
arpl
aas
sub
push
dec
call
add
outsl
out
jo
out
xchg
aam
das
xor
sti
cmp
shrd
shll
fdivr
jne
jge
dec
jb
ret
bound
inc
xor
cmp
call
insl
mov
sar
jae
bound
into
xor
cmpl
filds
lcall
sbb
sahf
or
sbb
jl
add
rcll
out
scas
into
stos
mov
xlat
pop
pop
xchg
imul
pop
pop
add
fisubl
or
mov
in
xchg
inc
frstor
es
divb
out
inc
jmp
mov
add
cmpsl
cmp
sarb
push
ss
push
test
nop
js
je
mov
sarb
mov
or
cmpsb
daa
out
adc
inc
cli
sbb
insb
std
subl
and
pushl
lds
push
mov
sahf
mov
and
aam
cltd
jne
aam
pop
testb
xor
push
jmp
mov
stos
and
test
or
sahf
es
pop
rolb
inc
roll
dec
sbb
cld
sbb
sbb
xor
enter
xchg
adc
fistps
insb
imull
leave
icebp
popf
cmp
fdivrp
push
scas
or
aas
sbb
cmovo
cmpsb
mov
push
push
and
ds
mov
sbb
imul
int
inc
mov
inc
jle
shl
lock
loop
jmp
imul
xor
mov
adc
ss
inc
lock
movsl
xlat
mov
pop
out
dec
lret
iret
or
lea
mov
jbe
sub
push
adc
push
sbb
xor
push
adc
loopne
jbe
test
imul
add
test
pop
jp
jg
mov
sbb
jl
cmp
sbb
add
outsl
pop
mov
push
pusha
adc
inc
and
jg
test
dec
push
sbb
cmp
aaa
lcall
xor
mov
jle
or
fimull
popf
loope
lock
stos
inc
std
inc
lcall
cld
xchg
jle
pusha
fiaddl
repz
adc
and
adc
dec
and
dec
mov
test
mov
fwait
inc
nop
mov
mov
pop
and
aas
fdivrs
out
cli
mov
pusha
pop
push
mov
mov
mov
call
lahf
push
mov
jno
jne
mov
pop
ljmp
inc
repz
xor
mov
aaa
fisubl
inc
test
cmp
out
call
cmpsl
enter
mov
decl
enter
mov
rcl
jle
pop
cld
adc
jp
adc
jg
stos
std
and
and
xor
adc
push
shll
mov
das
xchg
aas
ds
pop
loop
ret
dec
pop
test
arpl
hlt
aaa
mov
jg
arpl
jns
sbb
loope
xor
aas
adc
add
cmp
pop
mov
jnp
add
push
cmc
in
lock
inc
cmc
incl
pop
arpl
dec
hlt
lds
mov
fcomip
xchg
rclb
movsb
hlt
pop
pop
add
loop
sub
sub
inc
add
sarl
das
cmp
jg
outsl
push
loope
xchg
sbb
sbb
xchg
and
popa
test
ret
adc
jno
out
or
es
loopne
sbb
inc
in
mov
testl
mov
push
stc
out
das
insb
mov
ljmp
jnp
fbld
mov
adc
xchg
push
jecxz
mov
stos
mov
fsubrl
mov
insb
sbb
cmc
cmp
xor
aaa
and
add
xchg
test
mov
lcall
inc
push
cmp
out
icebp
aaa
mov
cmp
push
rcll
cmp
pop
fisubl
shl
xor
daa
push
pop
mov
xchg
cld
outsl
pop
push
test
fistl
ja
inc
or
mov
sub
dec
scas
or
jbe
decl
mov
add
push
aas
cmp
dec
ds
sbb
xlat
aam
test
fbstp
push
outsb
jp
idivb
popf
push
ljmp
movsb
and
mov
or
mov
dec
inc
sub
inc
push
adc
loopne
pusha
pop
movsb
lret
into
jae
xorb
mov
ret
decl
pusha
pop
fdivrs
adc
aaa
ljmp
fimuls
ja
lret
xchg
inc
mov
nop
clc
pop
mov
out
xor
test
jg
push
ljmp
xchg
bound
hlt
insl
mov
icebp
pop
hlt
lods
fildl
das
sub
test
pop
push
and
cmp
in
test
imul
sub
push
push
mov
stc
adc
inc
test
adc
mov
add
mov
shl
hlt
pusha
push
push
daa
xor
aas
sbbb
push
aaa
pop
mov
pushf
cmpl
ds
dec
test
scas
enter
push
dec
cmp
lods
cmp
pop
jbe
nop
loope
stos
push
mov
pop
lret
cmp
pushw
loop
std
in
frstor
aad
pop
pusha
xor
adc
push
mov
inc
or
push
pop
das
sub
test
fucomip
fs
jmp
clc
jbe
add
xchg
jbe
inc
imul
xchg
cmp
mov
dec
push
add
test
add
scas
inc
push
inc
mov
adcl
scas
cmp
add
pop
push
jge
mov
mov
or
fwait
ss
inc
lock
mov
adc
ljmp
std
dec
movsb
lods
enter
outsl
add
rolb
pop
sti
loopne
lahf
popa
pushl
push
lret
cli
xor
mov
mov
and
mov
shrl
adc
jmp
push
mov
jne
in
lds
sub
orb
ret
loope
add
fists
aaa
insb
jg
je
mov
fsubrl
stos
sahf
inc
push
call
inc
sub
xor
xlat
call
incl
mov
repnz
test
add
cmp
jge
in
je
out
jno
sbbb
imul
jecxz
xchg
inc
xor
popf
shll
call
test
aad
push
mov
pop
jbe
dec
in
xchg
cs
int3
sub
adc
inc
mov
icebp
inc
dec
dec
fwait
cmp
ffreep
pop
leave
add
xchg
inc
dec
sbb
pop
rcll
in
xchg
loopne
in
sbb
leave
sub
xor
into
jne
xlat
jbe
in
sub
sub
lcall
js
xchg
or
xchg
add
std
scas
jge
test
mov
add
int
mulb
test
and
getsec
ret
fiaddl
imul
add
dec
inc
scas
sub
pushf
shrb
adc
popa
xlat
sbbb
test
mov
js
or
aad
repz
mov
aam
popf
jae
jmp
fdivl
hlt
scas
jb
add
sbb
pop
pop
and
cs
xor
ljmp
aaa
adc
adc
std
push
sub
pushf
cmc
inc
roll
pop
or
push
iret
jbe
jp
incl
dec
xor
ja
jmp
pushl
outsl
leave
mov
pop
jo
sbb
adc
aas
mov
iret
adc
sar
dec
sti
jge
pop
mov
cmp
push
inc
sub
inc
es
out
add
not
ficoml
cmc
jge
cmpsl
cmp
mov
xor
cmp
xchg
test
shll
or
jo
jg
int3
cwtl
or
or
sbb
outsb
cmp
sbb
sbb
pusha
mov
mov
sbb
pop
shl
mov
jnp
add
inc
xor
push
ds
adc
xchg
ja
cmpsl
dec
test
or
mov
jmp
pop
and
or
mov
push
mov
adc
dec
and
inc
insl
xchg
pop
rolb
and
push
push
jg
stos
inc
push
fimull
lds
xor
xor
ljmp
dec
push
enter
rol
mov
divb
mov
pop
stos
pop
repz
adc
outsl
psraw
adc
jp
jge
hlt
cmp
cmpl
push
std
mov
add
xchg
cmp
pop
add
pop
icebp
movsb
push
lcall
fdivrl
mov
xchg
and
cmpxchg
xchg
daa
dec
mov
push
shlb
jl
fistpl
adc
and
scas
pushf
inc
adc
or
cs
adc
rorb
mov
fsubr
adc
icebp
or
inc
push
mov
mov
sub
lahf
popf
movsl
loop
cmp
hlt
mov
js
jo
jge
xor
adc
movsb
jl
and
adc
mov
jns
xor
and
movhps
insl
inc
les
neg
dec
repz
jnp
jmp
stos
lods
scas
mov
cmc
push
cld
inc
aam
mov
sub
test
xchg
sbb
lret
dec
outsl
mov
fisubrl
sbb
shll
ficompl
cmp
or
mov
lods
pop
orl
sub
cmpsb
and
inc
outsl
enter
je
mov
or
fsubrl
cmp
fistl
mov
int3
push
push
push
lods
and
mov
pop
sub
add
adc
dec
mov
ds
xchg
mov
pop
mov
in
mov
cli
fldt
mov
vmovups
cmp
lahf
xor
inc
or
jg
pushf
cmp
pop
add
out
adc
add
jbe
cli
mov
mov
lods
adc
or
and
mov
rcll
mov
imul
cmp
sarl
inc
inc
cli
stc
fprem
call
mov
xchg
push
loopne
call
out
sbb
or
dec
mov
xchg
inc
ret
sahf
fisubl
test
dec
loop
dec
ret
pop
jg
loop
pop
psubusw
into
in
daa
cmp
loopne
or
mov
test
xchg
jle
jge
test
cmp
or
sub
mov
movsl
and
or
and
mov
adc
push
cmp
mov
and
pop
cltd
lcall
push
fmuls
in
jmp
pop
arpl
push
and
push
inc
out
cmc
aaa
test
test
inc
or
lods
jle
loope
jg
xlat
jle
sbb
xor
sub
test
lods
sbb
jmp
push
mov
movsl
push
shrl
and
outsl
cmp
jo
mov
enter
add
push
js
push
divl
nop
test
mov
adc
cmp
xor
push
test
and
cld
out
sub
addr16
adc
call
xchg
in
fildl
push
xor
cmp
add
ljmp
arpl
sbb
les
jo
adc
int
jo
popa
xchg
stos
stc
mov
incb
jecxz
movsl
fisubrl
loopne
decl
sbb
cmc
insb
push
test
pushf
cmp
inc
fldl
and
rol
pushl
adc
imul
stos
jnp
and
stos
fidivrl
lds
push
outsl
sub
sbb
push
jo
sbb
aam
enter
mov
xchg
repz
sub
out
cs
inc
sbb
cmp
shl
mov
movsw
call
mov
and
push
sbb
and
jnp
call
adc
jae
dec
shlb
cs
jae
ljmp
and
jle
and
mov
mov
xchg
data16
dec
adc
aas
cs
orl
inc
sub
ret
sbb
gs
in
call
inc
inc
sub
sbb
sbb
mov
inc
inc
sub
insl
stos
sub
aad
xchg
cmc
arpl
pop
sub
xor
sub
mov
fwait
add
es
cmpsl
lahf
mov
push
mov
sbb
or
cmp
das
sarb
jo
shrb
push
xchg
mov
hlt
mov
adc
mov
scas
fiadds
aas
mov
lea
ljmp
loopw
xlat
push
push
je
imul
cmpsl
and
fcomip
jmp
pushf
or
jecxz
loop
jge
outsl
mov
cmp
or
mov
pop
loopne
out
pop
ret
sahf
sti
push
push
inc
push
inc
jmp
loope
mov
jo
cmp
dec
fbld
outsl
pop
push
roll
and
push
aad
test
adc
stos
xlat
mov
mov
pop
cmp
xor
push
and
cmp
ja
sysret
mov
ret
ret
mov
out
cmc
and
cmp
int3
cmpsb
jl
mov
mov
xor
ja
dec
fisttpl
add
cwtl
loopne
jbe
push
mov
jge
rcrl
es
fstpt
call
nop
int3
lret
or
insl
pop
test
call
cmp
inc
add
add
mov
cli
hlt
push
pshufw
push
mov
dec
add
xor
sbb
cmp
push
xor
test
dec
mov
pop
jge
inc
in
sub
out
xor
dec
push
ffreep
dec
add
pop
fidivrs
lods
mov
sub
push
sahf
push
pushl
sbb
xchg
js
mov
pusha
adc
ret
aas
mov
pop
dec
dec
arpl
push
and
pop
cmp
call
fisubl
das
adc
mov
sub
jl
data16
mov
jl
add
push
rcl
aam
insb
in
push
or
xchg
scas
rcrb
addr16
inc
sub
das
loop
loop
cmp
jmp
movsl
mov
movsl
add
mov
cmc
mov
push
je
sbb
or
cld
je
fldl
mov
cld
inc
mov
loop
dec
loop
mov
xchg
stos
divl
sbb
ja
mov
mov
cmp
jl
xor
mov
inc
cmpsl
mov
aam
mov
sub
adc
shr
inc
incl
push
sbb
cmpsl
adc
ds
add
sub
jge
add
hlt
ds
jge
cwtl
rcll
adc
adc
and
sbb
dec
mov
repz
sbb
xchg
dec
add
adc
std
in
cmp
out
stc
push
icebp
outsl
inc
shlb
mov
aaa
scas
popa
pop
loope
pop
mov
and
test
js
inc
add
cs
dec
mov
xor
add
subb
sbb
cwtl
pushf
inc
imul
call
imul
xor
inc
mov
aas
cmp
push
leave
mov
movsb
mov
outsl
adc
outsl
outsl
cmp
inc
lcall
sub
push
dec
sub
sub
sbb
inc
inc
mov
sbbb
loopne
inc
rcrb
fistl
cwtl
dec
mov
or
xor
cwtl
out
mov
inc
mov
movsb
je
aaa
inc
cltd
inc
push
xchg
popa
fistl
movsb
outsb
cli
icebp
xlat
mov
mov
push
addl
cmpsb
push
jmp
cmp
mov
bound
cli
push
bound
vphaddubw
rorl
test
lods
mov
movsb
and
dec
push
or
ss
dec
test
fistpll
lret
dec
xor
test
mov
insl
popa
jg
or
shlb
mov
out
inc
push
jmp
sbb
adc
and
and
adc
or
mov
sub
push
test
xor
lock
push
fsubrl
adc
aad
mov
jl
fistl
icebp
or
mov
repz
add
inc
test
lret
insb
xchg
adc
mov
xor
icebp
inc
xorb
dec
icebp
call
lock
gs
inc
aam
and
fwait
or
jbe
adc
aad
test
cli
pop
xorb
pop
insl
enter
sbb
loop
sar
rcll
daa
enter
pusha
insb
hlt
aam
aaa
lcall
movsb
sub
cmpsb
insl
sti
test
xor
out
sbb
jg
jns
sub
jl
mov
rclb
out
xchg
mov
es
mov
push
add
das
mov
test
cmp
mov
xorl
cmpsl
pop
loop
mov
adc
shll
mov
jmp
pop
insl
nop
dec
stos
sbb
and
push
mov
xchg
mov
or
roll
sub
lahf
mov
mov
pushl
mov
cmp
pop
add
pop
add
add
icebp
cmpsb
xor
adc
aaa
insl
shll
out
adc
nop
out
mov
scas
mov
add
movsl
mov
mov
adc
nop
sub
clc
or
icebp
push
mov
in
inc
pop
in
xchg
incb
pop
ljmp
jo
push
add
sub
jp
and
cmc
lret
xor
xchg
orl
das
mov
and
mov
sbb
xchg
shrb
jg
lods
jle
test
lret
mov
rclb
mov
pop
fadds
les
or
add
jecxz
sbb
movl
adc
adc
fsubrl
and
incl
out
std
add
int3
and
pop
in
jp
jne
out
cmc
sbb
mov
jmp
dec
stos
lods
mov
dec
push
popa
mov
mov
mul
push
aas
repnz
icebp
pop
push
mov
adc
mov
jno
push
out
xorl
jmp
js
icebp
dec
jns
into
sub
push
pusha
mov
notl
lods
mov
scas
in
push
mov
or
aam
sub
sub
ja
mov
loopnew
rcll
cld
or
xchg
push
xchg
popa
mov
dec
and
inc
push
push
xchg
pop
scas
sarl
iret
sub
in
lahf
or
rcr
ljmp
and
int
mov
ss
and
xor
insl
xchg
push
jle
lret
icebp
mov
dec
inc
inc
fisttps
sub
aam
pop
jno
mov
mov
aaa
pop
in
push
add
fnsave
dec
inc
outsl
fsubl
pop
pop
out
test
sbb
in
mov
adc
incl
xchg
incl
xor
std
fidivrl
adc
push
loop
cli
orl
mov
add
aaa
jae
and
jle
clc
adc
adc
stos
mov
cmp
pop
movsb
into
in
outsl
mov
or
subb
jg
repnz
les
je
iret
mov
adc
push
mov
xor
mov
sti
xor
daa
popf
add
aaa
mov
js
mov
sub
fnstenv
dec
mov
mov
mov
mov
xor
test
pop
cld
cmpsb
js
cmp
add
xor
jg
pop
mov
in
aas
sub
mov
add
in
push
mov
cmovo
xchg
ja
cwtl
xor
mov
push
mov
push
xchg
push
ja
jle
mov
mov
xchg
icebp
int3
outsl
sarb
es
in
jno
add
stos
sbb
loopne
jl
loop
lea
ss
jmp
jne
inc
xchg
jmp
mov
pop
add
mov
outsb
cmp
push
sub
ret
icebp
jle
insl
pop
ficomps
xor
call
mov
xorl
dec
rclb
cmp
xchg
inc
mov
pop
sbbb
mov
dec
leave
xor
test
ret
cmp
addl
jmp
or
loope
add
mov
sub
add
sub
jne
es
loope
rcr
or
push
movsl
xadd
addb
lock
pop
scas
mov
dec
stos
or
ljmp
sbb
mov
pop
and
push
stos
test
xchg
jge
and
pop
mov
pop
test
repnz
std
pop
mov
push
mov
aaa
jmp
in
push
daa
mov
or
inc
fcomi
jo
mov
inc
daa
xchg
addl
sbb
xor
jnp
push
loop,pn
clc
outsl
mov
popl
cld
adc
test
mov
out
add
jbe
xchg
lcall
xor
jge
cmc
mov
data16
les
jbe
mov
sbb
sbb
cmpl
or
shrl
pop
ja
sub
push
xchg
pop
or
pop
in
dec
stos
mov
idiv
xchg
push
xchg
mov
cmpsb
adc
loope
lahf
mov
fs
enter
adc
sti
xlat
aam
call
js
cmovp
ret
push
pop
mov
ss
sbb
jl
scas
sub
inc
xchg
dec
daa
adc
aas
pop
in
incl
fbld
ret
sbb
mov
add
loope
jns
jg
mov
mov
mov
dec
iret
sti
cmp
loope
xor
std
ds
xchg
or
push
mov
icebp
adc
dec
mov
icebp
sbb
loopne
mov
lods
aad
sbb
pop
popa
mov
sti
pusha
popa
clc
jmp
andb
jns
sub
mov
popl
mov
fisttpll
adc
mov
inc
fistpl
clc
pop
les
out
or
sti
clc
mov
imul
sahf
fists
xor
push
ret
std
std
push
pop
mov
push
push
push
ret
adc
test
inc
or
dec
push
inc
ljmp
sbb
dec
pop
lds
mov
mov
sarb
int
mov
ljmp
and
inc
loop
mov
xchg
xchg
mov
fldcw
pop
inc
repz
and
mov
xorl
loope
lcall
stos
sub
addr16
dec
pop
pop
mov
test
fcmovne
inc
push
fcoml
in
sub
data16
xlat
fcmovnb
dec
mov
lret
popf
add
or
inc
xlat
std
xchg
jle
add
std
mov
inc
loope
dec
lcall
clc
idivl
mov
push
sub
add
cmp
cld
movsl
das
mov
in
nop
enter
mov
push
sbb
aad
lcall
xor
inc
dec
lods
cld
in
mov
out
xchg
push
cmc
sub
mov
sbb
pop
adc
inc
mov
inc
sub
mov
ror
jmp
pusha
or
push
inc
insl
lods
jp
mov
aaa
mov
arpl
and
or
loope
adc
adc
push
or
decb
pop
sbb
fldl
stos
xlat
push
out
lock
roll
cld
outsl
loopne
aad
sbb
and
jne
mov
jb
cmpsb
in
sbb
xor
outsl
sbbb
adcb
jae
and
jg
jmp
push
flds
stos
loopne
mov
in
add
fcom
mov
dec
mov
jle
jmp
movsl
mov
rcr
jno
xchg
dec
divb
sbb
cmp
dec
or
cmp
call
rclb
mov
ret
jmp
cwtl
loopne
or
sub
loope
daa
push
mov
cld
std
or
dec
push
mov
rorb
and
pop
mov
jmp
mov
fmull
popa
mov
sarl
cwtl
lret
jmp
push
divl
and
fildl
mov
sub
inc
adc
sbb
push
movsl
outsb
ret
mov
les
push
xchg
and
popf
push
stos
ljmp
jecxz
lcall
addr16
pop
adc
movb
popf
insl
sbb
ss
xchg
sbb
jp
cld
sbb
mov
adc
inc
add
adc
xor
push
in
sbb
fbstp
xchg
call
jl
dec
xor
add
jo
cwtl
adc
nop
sarl
pop
push
pushf
bound
fisttpl
std
sbb
sub
jnp
or
dec
in
jmp
or
add
sbb
or
sub
pop
cwtl
gs
es
insb
dec
insl
mov
mov
mov
cs
jg
push
inc
dec
shlb
add
sbb
add
and
test
pushf
movsl
xor
out
int
aas
inc
lret
add
sbb
fildl
push
sbb
loop
sub
jns
int3
inc
lds
jg
daa
ds
jge
cmp
fidivs
shlb
push
sbb
add
ss
sub
cmp
fnstsw
mov
mov
fwait
inc
sbb
insb
ss
in
inc
rolb
pop
outsl
jl
adc
push
cmp
sarb
push
cld
scas
mov
idivl
sti
sbb
push
lret
add
push
mov
scas
adc
cli
jb
and
push
pushf
push
sub
adc
push
fs
call
daa
pop
dec
notl
mov
movl
mov
sub
mov
rcr
cmp
mov
shrb
mov
insb
xchg
pushl
dec
mov
or
sarl
std
mov
sub
or
inc
dec
iret
inc
in
jns
je
rcll
push
ja
ljmp
lock
add
add
imul
xchg
lahf
xor
cmp
inc
popf
imul
jmp
or
int3
test
testl
or
adc
pop
stos
nop
ljmp
cmp
push
mov
inc
adc
dec
or
or
cli
mov
stos
xor
repnz
movsb
fucomp
outsl
decl
mov
sbb
mov
fiadds
cmp
jb
jns,pt
int3
jno
sub
sbbl
and
es
les
jle
xor
sbb
data16
xchg
and
inc
in
dec
out
hlt
add
out
dec
bndstx
mov
pop
pop
sbb
cwtl
or
inc
sub
lea
icebp
mov
jle
call
insl
in
xor
aam
cmp
ficoml
mov
cld
testb
fdivl
aaa
xchg
insb
lcall
pop
sub
je
mov
jno
jp
in
out
clc
add
mov
adc
sub
adc
shll
outsb
sub
cmp
dec
insl
jge
js
xor
test
add
xchg
or
inc
stos
sbb
sub
ja
lcall
xor
mov
mov
mov
cli
outsb
aam
inc
mov
int
jmp
aaa
mov
clc
or
int
jmp
fs
incl
jecxz
mov
xor
mov
inc
insb
adc
push
sbb
rcll
sub
xor
popa
push
pop
cmp
arpl
aaa
xchg
jp
loopne
adc
push
xchg
jb
pop
cmp
clc
xchg
mov
jecxz
movsb
push
loopne
mov
daa
pushf
sub
ljmp
adc
xchg
mov
pop
lods
push
add
andnps
icebp
pop
in
jno
leave
xor
cmp
adc
ja
clc
xchg
pop
fisttpl
sub
sbb
lock
ja
jp
or
fdivs
shrb
mov
test
adc
xor
and
inc
and
jns
les
std
mov
mov
adc
lods
and
and
pop
push
dec
push
mov
or
pop
in
jmp
and
lahf
test
adc
mov
push
aas
sub
hlt
in
jns
jp
cwtl
jbe
cmp
in
outsl
xchg
mov
mov
inc
mov
add
ss
gs
cmp
sbbb
push
lock
jae
test
insb
or
sbb
test
xlat
movsl
incb
mov
push
in
inc
movsl
push
insb
jae
jge
decl
out
aas
jmp
xor
test
cld
sbb
push
pop
fstl
and
test
xchg
call
pushf
push
neg
andb
xor
inc
jo
test
and
pop
adc
aam
add
test
xchg
loopne
les
mov
or
adcl
lahf
push
mov
add
outsb
cmc
jg
cmpsb
cmp
cltd
adc
lcall
rolb
addl
jmp
das
inc
and
xchg
push
push
adc
mov
pop
xchg
xor
iret
rcl
jno
icebp
push
or
hlt
sbb
sbb
mov
mov
lods
mov
inc
cld
sbb
mov
and
jo
scas
add
mov
adc
addl
out
in
push
sarl
push
xor
mov
and
call
push
jecxz
imul
pop
xor
nop
test
loop
jp
xor
mov
fdivp
pop
out
dec
mov
je
outsl
pop
pop
iret
insb
addl
lahf
xlat
cmp
inc
add
sub
outsl
push
and
add
or
sar
mov
mov
iret
lods
sub
sub
lea
and
xchg
dec
incb
imul
sub
aas
and
nop
repz
sbb
outsl
inc
popf
xlat
hlt
pop
and
or
inc
or
push
std
cmp
ds
sub
and
push
movlps
fwait
push
hlt
or
jns
in
and
insb
pop
dec
cltd
pop
or
jmp
mov
sub
mov
gs
dec
je
sbb
sbb
iret
shrb
or
hlt
and
insb
sbb
jno
mov
test
das
addr16
cli
or
cld
fwait
lock
jge
insl
ret
test
mov
xor
mov
adc
pop
ds
shlb
out
cmp
mov
sbb
loop
in
and
outsl
xchg
cld
repnz
mov
cmpb
call
xor
scas
sar
xor
and
jo
sub
out
jo
mov
aaa
mov
cwtl
mov
push
xlat
adc
stos
js
mov
repz
jb
jp
mov
mov
test
adc
test
shl
aad
int3
or
mov
stc
adc
push
cld
mov
mov
ror
fcomps
or
arpl
mov
push
in
jg
mov
test
sbb
or
adc
shrl
shr
lods
sbb
mov
lret
pop
jmp
orl
or
xchg
or
imul
mov
dec
inc
arpl
out
incl
jo
stos
bound
mov
inc
fnstsw
push
sbb
mov
dec
pop
sahf
movsl
movl
fwait
push
xchg
shl
add
loopne
or
mov
dec
sub
sub
sbb
mov
test
insl
or
pinsrw
xor
cmpsl
cmp
scas
stos
xor
insl
mov
lahf
dec
pop
cs
cs
dec
test
mov
mov
cmp
sti
inc
inc
das
dec
and
sahf
mov
sub
or
jp
negb
mov
xor
stos
scas
outsb
mov
outsl
sub
outsb
loopne
pop
stc
dec
dec
inc
std
test
hlt
pop
lret
sub
pop
pusha
inc
pop
push
adc
ss
add
push
cmp
sti
aas
fwait
mov
test
enter
and
adc
mov
xor
das
dec
pop
mov
jns
sub
or
insb
cmp
cmp
mov
pop
cmp
pusha
and
push
jb
mov
mov
lds
fidivs
aaa
insb
jp
shl
imul
js
addb
pusha
imul
xor
xchg
aam
add
push
jl
xor
outsb
std
and
js
and
push
dec
and
pop
mov
stos
sub
test
icebp
add
adc
lods
jmp
cmc
push
pop
and
mov
mov
mov
aad
lret
into
xchg
fcoml
cmc
push
dec
int3
dec
cmp
xor
sbb
fdivrp
frstor
pop
in
loop
gs
dec
and
aad
push
dec
shll
cmp
rol
and
mov
pop
xor
pop
mov
daa
mov
lods
mov
add
bound
sbb
mov
push
js
inc
sub
ljmp
mov
cmp
lods
stos
cmp
jo
nop
das
xchg
test
cmc
lods
mov
inc
popf
xchg
das
test
cmc
stc
movsb
jno
dec
divb
nop
xorb
jbe
cmpsl
xor
inc
sbb
test
scas
push
cld
aaa
jbe
push
push
jae
cltd
pop
adc
and
push
ffreep
and
data16
mov
sbb
lds
es
cmp
jmp
ret
loope
cwtl
mov
and
mov
cld
mov
sarb
pop
jbe
xor
sub
inc
stos
xchg
add
in
or
les
mov
into
popf
pop
loop
xchg
or
fmuls
mov
outsl
insb
in
push
and
xor
jecxz
stc
dec
les
cmp
pop
mov
xchg
sarb
sar
jmp
xchg
sbbb
cmpsl
sub
ret
bnd
test
push
adc
sbb
insb
sub
mov
mov
lock
or
into
out
inc
test
in
mov
push
sti
lods
dec
pop
movsl
sub
adc
sarb
or
pop
lods
add
fidivrl
lcall
mov
or
je
imul
or
or
xor
mov
lock
push
add
push
add
xchg
mov
mov
je
push
mov
outsb
scas
outsb
aas
sub
mov
call
rcrb
jge
test
sbb
lods
popl
xchg
cmp
inc
and
dec
cmp
mov
repz
adc
mov
fstpt
adc
and
xor
mov
jl
fiaddl
out
mov
leave
fstps
inc
sbb
push
xor
or
push
or
jne
out
std
sub
dec
sarl
add
ds
adc
cmpl
aad
aaa
test
mov
sub
push
jae
push
mov
add
jecxz
mov
sub
fwait
push
adc
xor
cltd
scas
aaa
gs
fdivr
iret
divl
scas
xorb
bound
mov
mov
lock
adc
clc
and
int
jge
adc
mov
or
loopne
jp
pop
xor
add
mov
add
mov
pop
jmp
jno
js
in
stos
cmp
push
sbb
loopne
adc
sbb
cmp
pop
jl
jle,pn
and
lret
subb
pop
mov
arpl
shll
insl
mov
mov
sub
mov
clc
or
jecxz
arpl
out
inc
pop
int
jg
and
insl
jae
cltd
lahf
add
sarl
adc
sub
pop
test
mov
fwait
nop
rorl
mov
je
push
cmpb
xor
rclb
out
jnp
mov
or
and
or
pop
out
in
or
pop
repnz
and
pop
sub
outsb
clc
or
loopne
xlat
dec
xlat
push
subl
jle
frstor
es
or
and
inc
jge
jg
mov
frstor
dec
jecxz
scas
dec
aam
loopne
xchg
test
add
decb
sbb
aas
sahf
add
mov
js
sbb
clc
aaa
ja
sbb
add
xchg
dec
fwait
cmpsb
scas
sbb
pop
rcrb
jbe
inc
pop
inc
test
jge
aas
xchg
mov
out
pop
shlb
add
mov
dec
dec
call
cs
in
in
adc
xchg
loop
mov
pusha
jl
ljmp
inc
mov
push
push
popl
rolb
push
mov
xchg
adc
mov
mov
in
shr
xchg
pop
inc
push
idiv
cmc
cs
inc
aas
pusha
iret
sbb
jb
sbbl
bound
cmc
or
imul
or
lock
cpuid
mov
mov
loope
fsqrt
mov
mov
xchg
inc
or
or
xor
inc
xor
cmp
cmc
inc
outsl
adc
jno
ficoml
jecxz
js
lock
in
rcr
jnp
sbb
pcmpgtd
or
cmp
dec
lahf
mov
movsb
daa
stos
gs
sahf
mov
enter
mov
nop
inc
xor
push
aam
jg
popf
ljmp
fcoms
lret
test
mov
rorb
jno
fs
cli
adc
fisubl
xchg
lcall
mov
mov
jo
in
lret
or
pushl
xor
lods
sbb
jae
push
popa
inc
or
decl
mov
sub
cmpsb
lret
pushf
fists
mov
lock
ss
pushl
jbe
out
cwtl
lock
test
push
sub
jbe
sti
movsl
cmp
mov
add
out
nop
jns
mov
stos
xchg
mov
mov
mov
arpl
inc
loope
std
ret
pusha
push
add
or
xchg
cs
jge
cmpl
inc
sti
es
lea
adc
push
sub
and
adc
add
sub
jecxz
inc
in
mov
mov
flds
loop
cli
mov
or
xchg
push
mov
pop
add
imul
mov
mov
outsb
pop
push
dec
sbb
mov
pop
sbb
imul
ljmp
imul
insl
or
fistpl
mov
jg
scas
fdiv
in
daa
sub
shll
pop
dec
pop
sub
daa
add
or
mov
enter
or
xchg
jmp
mov
adc
loope
mov
or
lahf
lock
sbb
push
or
outsl
scas
imull
mov
loopne
xchg
add
fiadds
push
push
fiadds
pand
jmp
jle
and
rcrl
adc
cld
aaa
jle
xor
rol
jns
add
mov
mov
lret
or
cmp
mov
call
test
xor
adc
jno
mov
jae
mov
or
pop
data16
outsb
jl
and
mov
mov
pop
bound
subb
jmp
addb
test
mov
adc
xor
out
mov
aas
inc
test
add
cli
push
imul
jne
fucomip
mov
jg
mov
adc
cld
icebp
ror
bound
xor
jns
add
push
jnp
sbb
mov
mov
add
inc
inc
push
in
sbbb
jl
scas
jecxz
mov
addr16
xchg
mov
mov
pusha
mov
sbb
hlt
xchg
jae
decl
ss
test
push
inc
mov
sti
adc
mov
push
inc
ja
push
out
aas
test
inc
inc
jnp
inc
pop
clc
cld
push
shlb
outsl
push
add
popa
mov
inc
xor
mov
add
jmp
scas
lret
ss
cmp
arpl
xor
pop
dec
fstps
in
pop
popa
ljmp
inc
pop
mov
xchg
lods
push
adc
sbb
stos
dec
jp
inc
lock
inc
xchg
popf
iret
outsl
cmp
adc
mov
mov
or
cld
gs
mov
dec
fwait
pop
andb
and
or
loope
jne
jmp
pop
or
outsl
push
in
loop
repnz
arpl
inc
std
call
mov
aad
mov
mov
test
call
jne
movsl
fistpll
pop
sbb
jno
inc
mov
call
repnz
cmp
fbld
jge
bound
or
mov
bnd
dec
fwait
test
movsb
aaa
xor
pop
test
loop
in
sti
mov
ret
dec
push
out
inc
out
movsl
jg
adc
push
aas
adc
adc
das
clc
and
jns
or
mov
xor
arpl
cmc
push
ds
push
outsl
aaa
sti
pop
faddl
or
rclb
jecxz
mov
mov
cld
fcmovne
test
sti
add
movsl
dec
xchg
pop
enter
out
testb
sub
fisubrl
je
push
sub
test
xchg
lret
cwtl
mov
pop
add
fwait
cs
xor
bound
pop
std
adc
daa
outsb
dec
mov
pop
insb
mov
nop
mov
roll
loopne
sbb
adcl
repnz
pop
push
nop
cmpsl
cmp
jne
cmpsb
lret
pop
mov
pusha
popf
jae
and
sbb
push
jp
sahf
bound
icebp
lcall
sub
lock
jmp
sub
and
mov
mov
or
push
rclb
xchg
jp
mov
fwait
mov
lcall
mov
pop
pop
mov
hlt
loop
pop
test
data16
jno
orl
les
icebp
mov
add
mov
je
xor
mov
or
hlt
inc
jb
mov
icebp
movsb
adc
mov
dec
into
enter
push
ljmp
cmp
jns
dec
mov
ss
inc
fidivrl
loope
mov
ret
mov
or
xchg
dec
in
and
add
ja
movsb
mov
jb
and
and
shr
daa
sub
out
jge
pop
xchg
fcom
jb
mov
mov
inc
ret
xchg
adc
push
inc
cli
or
fcmovb
repnz
arpl
push
cmpsl
dec
lods
dec
inc
pop
cmp
or
jmp
xlat
cmpsl
shrb
nop
xor
and
das
inc
mov
sub
jl
add
fildl
xor
add
push
lcall
stos
int
popf
xor
inc
xlat
add
pop
mov
cmp
cwtl
loopne
stos
inc
ljmp
pop
movsl
mov
addb
and
push
test
imulb
out
and
daa
scas
push
mov
insl
decb
sbb
arpl
in
test
inc
dec
rol
mov
stos
xorl
mov
test
jecxz
aam
add
call
bound
sbb
sbb
ljmp
xor
loop
push
ret
dec
mov
pop
clc
xchg
ret
inc
ret
mov
push
or
shrb
and
mulb
in
jnp
repnz
dec
arpl
push
imul
int
sbb
pop
dec
jg
insl
dec
scas
rcll
nop
pop
dec
mov
push
mov
rol
push
rorb
pop
data16
cmp
push
xor
daa
lcall
mov
ja
sub
lret
add
mov
xchg
inc
or
adc
pop
std
repz
outsb
and
shll
cmp
push
daa
mov
add
je
lcall
daa
lcall
aam
mov
add
imul
inc
jo
or
cmc
push
adc
pop
aas
aad
cld
ror
jae
mov
fidivrl
sbb
inc
imul
fisttpll
xor
adc
mov
outsl
cmp
ljmp
fnstsw
xor
aam
or
lock
mov
je
movsb
cwtl
sbb
std
lahf
mov
add
dec
xor
fucomi
fcoms
outsb
loope
dec
or
jle
shll
lea
das
cmp
mov
sbb
cwtl
jbe
xor
mov
mov
fidivrl
sbb
outsb
mov
pop
bound
mov
adc
inc
mov
call
sub
adc
loopne
and
pop
mov
xchg
data16
into
adc
xchg
nop
mov
sbb
xor
cmp
mov
mov
popf
imul
ret
aad
pop
inc
sub
std
cld
pop
push
insb
push
addr16
inc
ja
iret
push
lret
js
popa
lock
fisttpll
mov
out
mov
repnz
and
das
pop
adc
jl
lcall
lock
dec
add
jo
mov
dec
or
ret
mov
inc
ljmp
pop
aad
adc
cmp
xchg
fucom
pop
outsb
xor
lret
imul
sbb
lea
cmpsb
ret
call
fldenv
mov
xor
dec
xchg
sbb
pop
xor
or
data16
cwtl
adc
xchg
push
aad
std
aas
or
outsb
xlat
adc
add
rorb
cmp
mov
lds
setne
sub
movsl
mov
scas
dec
and
shrd
popf
mul
icebp
inc
cwtl
cwtl
fwait
in
add
sarb
or
xor
xor
adcb
inc
pop
jbe
or
inc
pusha
or
test
es
pop
push
jge
fstps
push
rcll
mov
andb
js
mov
add
rolb
mov
js
push
xchg
cltd
hlt
mov
mov
inc
adcb
hlt
ret
adc
sub
aas
jmp
dec
push
sbb
jg
push
pushf
mov
push
sbbb
inc
jo
rorl
pop
cmpsl
cltd
sbb
ret
adc
sti
lret
lret
mov
mov
cmp
popl
inc
add
adc
popa
inc
std
mov
xchg
push
into
sbbl
push
sbb
push
mov
jge
jo
mov
and
push
adc
loope
dec
push
mov
filds
es
out
sub
mov
xchg
pop
clc
push
mov
push
insl
fistpll
sbb
inc
aas
xchg
pusha
test
push
mov
mov
sbb
mov
mov
sarl
mov
xor
hlt
loopne
je
test
lahf
jb
fldt
inc
mov
aaa
ret
pop
adcb
mov
xor
jl
dec
adc
into
jle
mov
lds
or
sbbb
test
sbb
ss
mov
cli
fcmovnb
nop
xor
les
popa
aaa
repnz
je
test
rol
je
lods
pop
pop
std
repz
lea
mov
sbb
fnstcw
push
hlt
mov
faddl
push
inc
jb
xchg
lods
xchg
data16
xchg
push
lock
sub
mov
sahf
xchg
ss
xchg
pusha
mov
jge
js
popa
sub
addr16
sub
xor
cli
and
insl
sbb
jp
sub
cmp
fldt
jl
jle
mov
cli
pop
dec
imul
hlt
mov
jge
lahf
xchg
nop
shl
test
lahf
lock
lcall
js
cli
fldt
fildl
adc
mov
jl
call
shll
mov
push
lods
cwtl
lock
jp
dec
arpl
push
jmp
roll
mov
inc
sti
dec
into
xor
cmpsl
jmp
cmp
test
fs
xchg
sub
pop
cli
mov
adc
pop
cmp
movsl
add
test
ja
shr
andl
clc
jns
cmpsb
push
mov
aas
adc
dec
xchg
decl
repz
seta
test
incl
mov
mov
or
inc
mov
inc
jnp
fimull
pop
das
nop
test
and
in
xchg
jmp
andl
cwtl
repnz
jns
pop
push
push
negl
pop
or
sbb
push
jg
xchg
jecxz
mov
rolb
outsl
rclb
ja
pop
push
sub
fwait
adc
mov
mov
inc
xor
push
jne
pop
pop
mov
fwait
inc
ret
aaa
outsb
pop
xor
sbb
aaa
in
push
fstps
aam
sub
test
and
test
loopne
mov
and
pop
pusha
sbb
jmp
fadd
sub
sbb
add
and
pop
jmp
jg
or
ret
mov
xlat
loopne
cmpsl
sarb
dec
in
in
sbb
mov
int
push
mov
std
and
pop
pusha
jmp
or
cmp
rolb
mov
lcall
jne
or
sbb
xor
add
cmp
inc
cmp
sar
lret
lock
mov
lods
dec
xchg
xchg
inc
jnp
mov
ret
dec
test
xchg
xchg
add
aam
shrl
mov
mov
loopne
adc
out
mov
cmp
sub
lahf
decl
repnz
icebp
mov
jg
add
aam
sarb
repnz
fiaddl
mov
xchg
xor
xchg
into
imul
xchg
sbb
mov
inc
inc
cld
int
leave
and
hlt
add
popa
mov
jmp
pop
mov
out
mov
loopne
mov
mov
jne
shrb
add
dec
push
xlat
or
mov
mov
scas
aad
aaa
adc
decl
test
lods
popf
adc
shlb
dec
mov
cmp
loopne
pop
in
xor
lds
stos
rolb
loop
outsb
sub
lods
push
or
add
push
loop
aas
jbe
mov
add
pop
add
add
jmp
in
cltd
loopne
jecxz
or
shll
not
push
je
jae
insl
loope
and
sti
push
popf
pusha
jp
adc
or
je
aas
aaa
push
call
push
inc
aam
sub
push
scas
pop
out
jo
mov
int3
call
icebp
adc
mov
add
or
fstp
adcb
and
mov
cld
dec
push
push
ljmp
cmp
mov
jmp
lret
test
adc
ja
in
push
xor
push
xchg
loope
js
into
adc
stc
rolb
jl
jp
push
pop
fcmovbe
inc
jmp
outsb
sti
in
inc
mov
and
fwait
add
data16
movsl
rolb
sub
add
jne
or
pop
fdivrl
add
xor
xor
sbb
mov
mov
adc
test
inc
inc
lcall
out
inc
out
stos
hlt
pop
sarb
pop
push
pop
sarb
call
aad
aaa
jecxz
fmull
push
aam
pop
mov
mov
loop
sbb
sti
lea
inc
cltd
sub
jle
mov
lcall
rcll
or
inc
aad
cmp
in
sbb
aad
push
and
popl
xorl
pop
stos
ljmp
hlt
inc
inc
or
lcall
clc
jg
xchg
loop
push
in
cmc
scas
stos
xor
jg
lret
and
iret
or
out
cmp
mov
mov
or
sbb
sub
pop
cli
or
or
movsl
jle
sahf
fsqrt
adc
addb
imul
movsb
lods
add
and
popf
sub
fs
mov
repnz
in
adc
mov
mulps
aaa
gs
cmpsb
dec
shlb
and
mov
mov
xlat
pop
jo
adcl
sbb
test
stos
mov
mov
inc
jno
nop
jbe
jge
xor
jmp
or
mov
cli
cs
jle
push
shll
xchg
jmp
fnstsw
pop
mov
addr16
jmp
add
sub
mov
and
jb
xadd
mov
jge
dec
add
insl
mov
cmpsl
test
push
out
sub
rcrb
mov
lock
shr
ja
hlt
mov
mov
stc
xchg
and
or
adc
dec
out
clc
aaa
ljmp
sbb
data16
in
xor
mov
inc
mov
pop
pop
or
mov
into
lcall
cwtl
int
gs
jge
cld
cmpsb
xor
bound
iret
mov
sbb
push
xor
cmc
pop
aas
jl,pn
cld
xor
cs
aaa
jns
std
call
loop
dec
lret
stos
push
inc
mov
in
in
aaa
cs
fisttps
arpl
ret
roll
test
cmp
inc
rolb
scas
dec
in
adc
xlat
pop
mov
ds
sahf
mov
jb
xchg
ss
jle
cld
add
lcall
pop
ss
sub
test
mov
jne
mov
pusha
cltd
popf
adc
idivb
sbb
pushl
rcl
imul
jecxz
sarb
or
lcallw
sub
out
dec
adc
inc
add
mov
mov
jmp
rclb
cmp
and
scas
jbe
push
imul
adc
inc
aad
adc
adc
cmp
or
pop
arpl
sbb
pop
or
sub
lods
cmp
cmc
or
jno
inc
decl
cs
cwtl
test
fstps
mov
push
and
adc
add
pop
pop
aaa
cmc
in
lea
inc
mov
fidivl
ja
jo
icebp
jb
fsubl
rorb
cmp
adc
mov
jl
sub
and
rcrl
and
rcr
mov
sarb
push
or
sub
icebp
stc
ffreep
xchg
cs
xor
fwait
xchg
sbb
aad
mov
mov
xor
cmc
jne
or
shlb
sub
mov
dec
inc
dec
rcr
add
insl
lret
inc
xchg
mov
jb
and
inc
movsb
or
xor
hlt
das
mov
loopne
jge
mov
jg
xchg
rep
or
push
test
inc
jno
orb
addb
mov
repnz
xchg
push
fildll
xchg
ret
sbb
jge
xchg
jmp
and
inc
fs
outsl
mov
cwtl
iret
pop
icebp
xor
fstpt
lods
mov
fmuls
jmp
sbb
mov
sahf
bound
sbb
stos
mov
lea
add
add
push
addr16
mov
and
out
and
cltd
sti
dec
rorb
jmp
mov
outsl
nop
icebp
outsl
cwtl
cmp
pop
mov
push
cli
es
xor
mov
stos
push
mov
inc
adc
cmp
mov
sub
pop
sub
clc
mov
sbb
outsb
and
mov
in
pop
rcr
notb
in
cmp
fidivrs
sub
inc
add
jg
sbb
sub
adc
jne
or
cld
adc
push
pop
sahf
addb
mov
mov
shlb
cld
add
push
mov
push
xor
xchg
or
loopne
in
aaa
out
add
lahf
jge
xlat
dec
and
fst
ss
or
decl
sar
sbbl
stos
pop
stos
in
inc
or
and
jbe
mov
nop
push
ret
popa
iret
scas
and
push
rcr
mov
mov
add
cmpsl
sbb
or
dec
sti
sbb
sahf
xchg
ret
push
movsl
lods
cli
pop
dec
xlat
sti
xchg
adcb
fistpll
idivb
insb
enter
adc
push
push
mov
in
and
pusha
imul
push
pop
rcll
sub
adc
dec
fimuls
jmp
push
jnp
ds
xchg
hlt
cltd
sbb
or
pop
mov
insl
cmp
loopne
add
inc
add
pop
into
ss
fdivrs
and
adc
leave
aad
mov
sbb
wrmsr
adc
xchg
jmp
pusha
icebp
jb
adc
adc
mov
lods
andb
jge
inc
cmp
popf
mov
jl
mov
pop
jle
into
cwtl
pusha
dec
ret
rcrl
xchg
jbe
sbb
sbb
cltd
cld
incl
pop
sub
ret
sbb
xor
add
dec
cmp
mov
dec
cmpsl
loopne
mov
cmp
push
test
pop
mov
or
and
mov
pop
xor
mov
flds
adcb
cmp
jecxz
mov
jo
mov
pushf
test
sti
test
fisubrl
roll
cmp
sub
inc
xor
in
mov
add
add
cmc
or
lods
push
imul
sbb
mov
lea
and
cwtl
sub
push
push
or
xor
sbb
lcall
and
insb
adc
cs
cmpsb
test
rcrb
adc
mov
push
mov
mov
sub
out
test
sub
sahf
inc
and
add
cmc
shll
cmp
stos
cmp
shlb
cmp
xchg
cwtl
and
lds
aad
fst
clc
fstpt
pop
cli
xchg
mov
mov
roll
rolb
cmc
lds
and
or
lret
cs
hlt
mov
mov
and
mov
mov
push
inc
xchg
outsl
sbb
sbb
cli
pop
mov
insl
mov
dec
xchg
cld
test
cmp
pop
sahf
adc
xchg
mov
sub
in
and
pop
imul
rclb
sahf
add
xchg
cltd
mov
fcmovnbe
loop
jno
cmpsb
sub
insl
adc
ja
cld
mov
in
cltd
xor
dec
gs
or
ficomps
out
add
sub
subl
scas
dec
out
mov
rorb
and
cmp
sbb
sub
push
pusha
sbb
and
add
decl
sbb
outsl
addb
lds
stos
test
inc
out
xlat
fsubrl
push
jmp
les
inc
lods
jg
dec
popa
clc
aaa
mov
call
jne
fidivs
mov
inc
cmovns
xor
das
lret
loop
and
sub
and
repz
adc
mov
lahf
xor
add
mov
sub
das
cmp
xor
call
jmp
sbb
mov
inc
pusha
pop
add
insb
cmp
cli
test
daa
push
mov
adc
push
lods
adc
jb
bound
pop
sti
mov
lods
sbb
inc
and
mov
inc
mov
clc
mov
pusha
into
frstor
scas
enter
lods
dec
and
es
jg
arpl
and
jg
xchg
cltd
sbb
mov
arpl
inc
dec
mov
fldenv
pushf
inc
jg
pop
mov
pusha
enter
sbb
pop
mov
in
push
cli
or
scas
bound
cmp
adc
pop
xchg
cs
inc
add
data16
fs
fildll
dec
sti
mov
pop
aad
pop
sub
add
or
pop
and
dec
hlt
arpl
outsl
fwait
std
cmp
push
or
loop
pop
push
sub
mov
cld
test
bound
adc
or
repnz
push
mov
dec
xor
cmpsb
inc
int
movsb
enter
lret
repnz
mov
mov
addr16
bound
add
jl
addb
movlps
test
outsl
mov
sbb
ss
mov
jp
and
testb
xchg
sbb
xchg
inc
xor
cmp
ss
mov
pop
add
mov
ja
loopne
pop
cmp
mov
scas
xchg
push
sahf
xchg
and
cmp
adc
clc
push
jecxz
hlt
daa
aam
inc
or
roll
mov
xor
arpl
popf
sub
inc
cmc
mov
adc
push
inc
in
ss
lea
es
cltd
repz
mov
push
lret
cmpl
mov
and
movaps
lcall
push
xor
mov
lahf
in
pop
xor
push
cmp
js
pushl
jne
and
js
sbb
push
jne
cmp
and
adc
stos
or
push
ss
cmpl
fdivl
test
pop
adc
iret
sbb
loope
jecxz
lahf
mov
jo
jo
clc
cmpsb
jo
nop
mov
jnp
xor
or
push
and
pop
repnz
jg,pt
insl
insl
dec
dec
add
rclb
adc
xchg
mov
orl
mov
xchg
das
mov
sbb
mov
test
mov
add
mov
in
shlb
fisttps
dec
lock
jbe
or
sti
insl
push
or
mov
mov
popa
ds
and
pop
adcl
jp
repnz
cmpsl
mov
pop
xchg
jo
jbe
sti
call
rolb
gs
lret
clc
das
stc
and
inc
push
lret
sbb
push
clc
aam
pusha
and
dec
fcmovnb
and
filds
dec
mov
mov
pop
cs
sbb
xchg
bound
pusha
fistpll
mov
and
test
lret
push
xchg
cld
ret
add
out
arpl
dec
movsl
divb
cli
stos
scas
add
fs
bound
test
pop
dec
roll
or
xchg
cmp
xor
mov
push
inc
add
sbb
scas
clc
adc
jp
stos
jl
shr
movsl
push
shlb
ret
sub
pop
fnsave
inc
mov
out
ds
int
cmp
icebp
mov
cwtl
mov
or
mov
xchg
inc
jecxz
pop
lods
cmp
inc
je
pop
je
repnz
xchg
in
xor
cmp
aad
dec
negl
faddl
lock
jle
xor
in
lcall
and
push
jo
adc
pusha
sub
gs
mov
jmp
sub
adc
xchg
jno
mov
push
cmpl
pop
fs
xor
pop
out
or
xchg
scas
lds
aaa
jae
jno
jnp
fwait
cli
pop
insl
mov
fmuls
cwtl
in
insb
clc
mov
lret
data16
movd
imul
add
inc
jg
fs
inc
daa
clc
clc
in
or
je
insl
fnstenv
fstpt
into
adc
sbb
test
mov
scas
arpl
dec
inc
xchg
xor
xor
or
jg
lock
imul
insb
pop
pop
cmp
xor
dec
je
imul
and
and
push
sahf
lcall
js
add
popf
inc
je
repnz
fsubrl
fldt
cld
imulb
dec
gs
jle
and
mov
ret
stos
js
jecxz
cltd
and
inc
popf
or
push
movsb
ss
pop
fs
test
jg
lea
or
jns
addl
xor
lock
outsl
iret
loopne
das
mov
push
add
loope
rorb
cmp
cmp
dec
outsl
paddb
sub
add
sar
rcl
pop
jle
sbb
gs
lcall
xchg
mov
adc
inc
test
out
sub
outsb
mov
jno
sbb
decl
pop
ja
jp
jecxz
cmp
roll
nop
fs
test
xor
cmpsb
or
mov
mov
mov
insb
stos
dec
into
icebp
fimull
lahf
push
sahf
daa
adc
hlt
imul
aaa
mov
mov
mov
int
adc
jge
add
mov
test
sbb
std
jmp
in
fsub
xor
and
add
call
mov
add
call
cmp
outsl
pop
call
cmp
cmpsl
dec
mov
mov
arpl
and
imul
xchg
psrld
lds
mov
adcb
pushf
or
call
int
sbb
popf
adc
and
stc
and
call
mov
orl
repnz
dec
and
dec
jl
test
lods
mov
add
pop
lds
imul
adc
mov
pop
aas
ss
or
into
ljmp
cmpsl
fists
in
lret
inc
pop
imulb
hlt
movsl
mov
mov
xchg
and
add
adc
ret
adc
pop
or
xchg
imul
dec
xor
sahf
xor
dec
nop
sbb
cs
std
test
xor
sbb
aaa
push
sub
cmp
lahf
cmpsb
leave
negl
inc
xchg
add
inc
push
lods
dec
imul
mov
stos
jmp
add
lret
js
jns
pushf
pop
sub
shl
mov
fistps
jno
shr
add
xor
xor
inc
jno
inc
adc
rol
std
scas
lock
clc
jbe
push
inc
mov
mov
jo
hlt
imull
or
cltd
ljmp
imul
cmp
scas
mov
xchg
test
fstps
jns
add
inc
sub
push
mov
mov
rolb
sbb
mov
cli
inc
decl
flds
fidivrl
mov
inc
inc
dec
mov
mov
fsubl
sbb
call
or
inc
xchg
std
nop
pop
cmp
das
and
fsubrl
add
int3
jno
stos
fwait
pop
sti
push
imul
pop
sbb
inc
cld
xlat
ljmp
and
inc
inc
es
roll
and
dec
lods
roll
fidivrl
call
lret
mov
ja
daa
and
scas
rcr
push
inc
sub
mov
xchg
xchg
cmpsb
add
jbe
rcrb
push
dec
mov
and
sub
mov
les
lcall
push
xor
ficoml
loop
mov
fbld
jo
test
pop
dec
mov
sbb
inc
pop
dec
jnp
loop
mov
pop
sti
inc
jno
callw
shrl
icebp
popf
sub
mov
loope
adc
mov
xorl
pushl
dec
loope
and
cmpsl
xchg
xor
xor
fisubl
and
push
pop
adc
les
mov
or
mov
jl
lret
mov
and
jecxz
jp
sbb
mov
test
cmp
push
je
push
inc
push
testl
lds
clc
inc
ja
jno
add
les
adc
push
lods
dec
fld
decb
sub
inc
dec
or
mov
es
sub
loopne
test
xor
and
ss
lcall
fsubp
rcll
xchg
outsb
jge
sbb
mov
add
hlt
push
test
cltd
push
inc
mov
and
pop
or
or
sahf
or
ja
mov
imul
daa
cli
negb
jg
addl
dec
sub
fsubs
add
push
ror
sub
sbbw
xchg
pushf
jmp
jg
ret
xchg
cs
sbb
add
cwtl
fcoms
lods
test
jbe
in
xor
jl
fdivs
sub
popa
mov
cmpsl
xchg
scas
sub
or
push
push
stos
adc
adc
jg
lock
mov
mov
pusha
jmp
mov
mov
adc
fnsave
dec
fs
shlb
std
test
push
pushf
sbb
rcll
aaa
loope
lock
push
jne
adc
adc
int
aaa
mov
cmpsl
mov
movsl
jmp
je
js
rclb
pop
test
jmp
sbb
in
scas
and
mov
in
push
hlt
cld
sbb
repnz
aam
je
jne
ret
lods
lea
cwtl
outsb
insl
adc
imul
fdivrp
inc
shll
dec
ret
int
outsb
mov
int3
jl
sbb
stos
inc
sbb
cltd
xor
fisttpll
pop
push
idiv
mov
push
mov
add
int3
and
icebp
add
pop
int
jns
pop
pop
sub
xchg
scas
add
or
push
les
das
std
js
inc
push
scas
outsb
subl
and
scas
andb
mov
daa
mov
mov
lret
and
insb
cld
and
push
add
out
xor
pop
std
decb
push
sbb
jecxz
adc
lea
push
add
cmp
lahf
jno
subb
dec
xlat
ret
mov
mov
in
dec
ret
sbb
xchg
or
lret
sbb
sbb
aad
dec
in
ja
xor
xor
dec
push
out
mov
rcr
sbb
adc
pop
add
sti
fwait
jl
sar
jne
test
mov
mov
inc
mov
sub
orb
jp
xchg
push
xor
iret
shrb
js
push
shll
adc
outsb
outsl
das
loop
push
icebp
xchg
addr16
movsb
in
ljmp
test
push
jge
xor
xor
rol
mov
mov
mov
das
and
test
test
xchg
subl
add
loopne
jg
jp
mov
mov
adc
mov
jb
movsl
jno
lret
aas
xlat
xorb
or
dec
add
aam
adc
mov
decb
inc
adc
pop
imul
scas
inc
push
js
jmp
aam
adc
aaa
cwtl
sub
mov
mov
and
notb
fstpl
pop
mov
imul
decb
sar
inc
rorb
push
mov
push
add
icebp
test
stos
adcl
ljmp
mov
outsl
lods
mov
mov
adc
push
xchg
daa
mov
aad
cmp
in
loopne
sbb
in
push
mov
dec
rcrb
jne
push
push
push
mov
pushl
sub
lret
rorb
inc
inc
cmp
xchg
shll
or
test
sub
xchg
imul
adc
clc
xor
movb
sbb
faddl
jmp
jge
mov
push
push
mov
loop
in
cltd
pop
std
jg
icebp
and
mov
sarl
xor
jmp
xchg
stos
pop
stc
cmpsb
movd
adc
adc
aas
insb
in
cmp
inc
add
push
pop
xchg
aas
mov
cmp
adc
jb
lock
mov
cmp
sub
push
push
pop
mov
imul
mov
mov
dec
push
add
and
movsl
shll
stos
decl
fisttpll
xor
jne
in
inc
decl
sub
jns
add
add
sbb
dec
adc
shl
repz
add
icebp
nop
scas
mov
fstpl
mov
mov
das
sub
mov
xchg
adc
xchg
cmp
or
stos
add
cmc
jmp
xor
push
cmp
mov
insl
dec
aad
test
add
jecxz
mov
adc
scas
fcompl
pop
neg
and
or
pop
loopne
xor
cwtl
and
and
mov
inc
mov
pop
pop
loopne
push
jl
mov
adc
adcl
inc
ret
addl
sti
mov
sub
aam
fistps
push
mov
sub
nop
fsubrs
in
outsl
xchg
cwtl
jl
inc
mov
cmp
xchg
ljmp
push
mul
pushf
cmp
push
int3
jmp
dec
dec
loopne
imul
dec
fdiv
mov
cmp
xchg
insb
sub
nop
jle
nop
jbe
sub
add
cmp
add
mov
dec
iret
jo
xchg
sti
fisubs
cmp
inc
push
lcall
sbb
ret
mov
mov
mov
outsl
sub
and
mov
inc
and
add
jecxz
lret
fdivrs
push
mov
jl
mov
pop
mov
mov
mov
hlt
lods
pop
and
fistpl
in
xrelease
or
sub
mov
fs
ljmp
jge
cli
pushl
add
lds
mov
cmp
push
mov
inc
lahf
andb
add
adc
iret
inc
lea
mov
in
mov
pop
xchg
and
and
int
mov
cmp
lds
ljmp
pop
mov
dec
mov
nop
sbb
fistl
fwait
mov
imul
xchg
test
stos
add
inc
and
push
pop
mov
adcl
jmp
push
lcall
cltd
fwait
inc
loope
loopne
jno
xchg
add
inc
sub
push
push
and
push
dec
push
mov
addb
and
adc
pop
jns
inc
sub
pop
pop
out
sbb
js
xorl
mov
dec
jo
jp
enter
push
pop
test
or
inc
pusha
mov
aad
cmpsb
jecxz
or
imul
fs
pop
das
orl
jmp
pop
inc
mov
jg
ja
loope
mov
addr16
xlat
addl
inc
cmc
inc
pushf
movsb
orl
filds
xchg
and
fdivs
scas
cmp
call
inc
ds
push
ret
ds
nop
adc
or
js
xchg
push
shl
dec
push
add
stos
sbb
or
cli
loopne
jb
sbb
jecxz
inc
jl
fildll
ret
adc
xor
pop
lds
movsb
dec
push
insb
aaa
inc
jnp
lods
sub
in
or
insb
push
jns
call
mov
test
lret
orb
test
mov
shrb
xchg
add
scas
and
in
sub
add
cmc
xchg
inc
xlat
loop
jbe
dec
nop
sbb
and
icebp
sbb
lea
cmp
dec
lret
cmpsl
ds
mov
adc
bound
xchg
test
outsb
test
ret
lds
mov
dec
or
xor
ret
adc
push
popf
shr
bound
clc
jg
jae
out
and
add
xchg
add
fisttpll
add
inc
push
decl
das
jge
ljmp
stc
sbb
push
sub
dec
xorl
scas
das
inc
and
mov
mov
dec
push
decl
jle
pop
mov
push
sbb
addr16
aas
lods
push
pop
sub
sbb
hlt
sbb
mov
hlt
sbb
sub
insl
dec
mov
leave
bound
dec
jge
jecxz
jecxz
test
sub
outsb
mov
and
mov
call
pushf
or
add
xchg
jae
sub
imul
into
incl
inc
push
insb
jg
cmp
mov
adc
xchg
in
mov
sub
inc
filds
in
nop
jo
jge
sbb
mov
stos
mov
sbb
xchg
push
jge
outsl
inc
repnz
sub
push
cli
movsl
xchg
clc
movl
cmp
dec
scas
cmp
fsubs
xor
and
jne
pop
addr16
sbb
mov
mov
jo
sahf
ret
mov
xor
dec
pop
rcl
mov
adc
or
xor
hlt
pop
dec
mov
and
int
or
and
lcall
pop
inc
push
cs
lahf
push
xchg
add
xchg
mov
std
lods
out
fucomp
movsl
fildl
xorl
mov
and
jo
lds
pop
pop
lock
lret
sbb
mov
ja
aam
in
stos
insl
pop
insl
xchg
mov
out
mov
sbb
addr16
insl
xlat
inc
xor
sahf
pop
or
mov
jb
leave
pusha
dec
xor
dec
jle
stos
aad
jmp
pop
adc
les
dec
push
push
mov
enter
mov
in
add
inc
sbb
mov
dec
mov
push
sub
outsl
sub
popa
mov
movsl
movsb
dec
and
bound
ss
inc
fs
lahf
inc
dec
mov
pop
cmpsb
scas
test
outsl
js
ds
cltd
or
mov
xchg
push
rcrb
cmpsl
jle
and
scas
cld
and
je
push
cmpsl
repz
das
std
pushl
xor
dec
in
lahf
inc
les
popf
or
jge
jg
mov
inc
jmp
test
stos
xor
mov
and
add
push
jb
out
mov
dec
loope
and
mov
enter
sbb
clc
mov
and
push
ret
dec
mov
cmp
sbb
push
push
push
add
sbb
adc
and
insl
fisttps
mov
or
pop
repz
shlb
je
aaa
adc
sarb
ss
ja
inc
adc
fldenv
lock
lock
cmp
mov
lret
inc
stos
pushf
cmc
shl
stc
xchg
xchg
add
add
cmp
mov
sub
inc
les
mov
shl
or
add
mov
sub
ret
xchg
dec
call
dec
aam
push
lock
adc
mov
icebp
jg
test
popa
fs
test
incb
mov
pop
adc
push
mov
pushf
mov
bound
inc
sti
sbb
jnp
inc
xchg
xor
adc
jl
jnp
adc
clc
jg
xchg
addb
movsb
push
out
mov
adc
adc
je,pn
lods
mov
add
mov
sub
mov
pop
pushf
sbb
inc
in
push
dec
loope
xchg
loope
cmp
outsb
adc
cmpsb
sub
insl
ds
dec
orb
in
inc
mov
xor
xchg
ljmp
mov
xor
mov
mov
xchg
push
lea
repz
mov
das
sbbl
fwait
push
orb
outsl
fcoms
rcrw
push
or
xor
cmpsb
pop
popf
loop
push
xchg
pop
jg
push
dec
mov
popf
or
std
hlt
je
lock
das
test
or
jl
mov
cmp
xor
test
cld
sbb
fcoms
fcoml
test
aad
mov
jo
push
push
stos
insl
outsl
and
push
lds
cmp
push
mov
pop
adc
pop
movsl
dec
movsl
sbb
lea
jo
inc
push
or
sbb
idivb
imul
or
mov
and
cmp
mov
pop
aas
pusha
adc
outsl
lock
out
add
outsb
movsl
and
jb
or
fiadds
push
hlt
fbld
cmp
cmc
test
out
pop
ja
fs
scas
jnp
push
in
jo
mov
xlat
mov
arpl
out
jle
clc
and
add
mov
mov
repz
sahf
inc
inc
push
shlb
inc
cmp
test
test
and
jle
push
adc
dec
cli
mov
into
in
lods
and
movsl
mov
adc
inc
es
cmp
and
lret
lea
in
cld
sub
mov
aaa
sbb
pop
adc
and
inc
jmp
les
mov
push
outsl
ficomps
add
ret
in
pusha
xor
jecxz
jg
inc
dec
mov
sti
test
outsb
push
in
pop
adc
jne
mov
js
int3
add
inc
std
pop
std
stos
jp
jb
push
and
inc
outsl
js
pop
lock
test
filds
mov
inc
adc
add
test
sub
add
cs
test
rol
fdiv
pop
xchg
mov
and
pop
sub
das
push
xor
mov
push
mov
push
in
push
jnp
pop
sahf
and
rol
mov
mov
ss
ret
jecxz
sbb
mov
add
dec
or
mov
rcrl
adc
cwtl
and
hlt
inc
pop
xchg
add
je
sub
shll
mov
int3
pop
adc
insl
std
mov
push
aaa
stos
and
scas
pop
clc
ja
ret
and
sbb
add
sbbb
adc
adc
fldenv
mov
push
rorb
loope
arpl
in
push
or
icebp
lods
sahf
int3
cmp
imul
adc
add
mov
ds
dec
dec
sub
in
sub
popa
add
mulb
in
pop
cmpb
daa
rclb
adc
pusha
adc
push
mov
movb
mov
mov
fstpt
outsl
sbb
push
out
outsl
mov
xchg
mov
lock
xor
inc
mov
test
fldt
aam
in
adc
push
loopew
and
fidivrs
inc
add
inc
sbb
mov
clc
push
icebp
das
push
mov
scas
sub
ja
and
incl
mul
mov
stc
jns
adc
in
fimull
sub
mov
pop
xor
push
pop
jo
test
addl
sub
int
push
repnz
mov
inc
sbb
les
jb
mov
call
xchg
in
xchg
mov
push
xor
incl
loopne
mov
aas
pop
push
scas
jle
mov
add
inc
cld
jl
movb
and
add
adc
ret
addr16
fwait
imul
or
add
std
fildll
je
add
add
xchg
jecxz
test
std
ds
jecxz
and
or
cmp
mov
es
xorb
add
sub
adc
hlt
jmp
xchg
arpl
hlt
xchg
mov
jle
mov
push
shr
xor
popa
mov
add
icebp
test
jecxz
mov
xchg
jne
lcall
and
add
cli
scas
jecxz
rclb
cmpsl
add
pop
insl
mov
inc
arpl
in
jg,pt
dec
pop
repnz
sub
ret
mov
movsb
add
imul
mov
add
push
shll
out
cs
paddd
add
xchg
dec
aad
aad
mov
out
retw
jo
pop
sbb
sbb
jge
nop
push
dec
scas
push
aam
jl
je
imul
test
push
add
mov
pop
mov
sti
cmp
jg
push
outsb
fiaddl
xchg
test
cmpsb
push
xchg
or
rcll
sub
jmp
shrl
fbld
ljmp
enter
movsb
cmp
mov
xchg
cmc
das
push
sub
test
in
icebp
cmp
sahf
xor
sti
jg
inc
sbb
fistl
or
mov
dec
adc
ss
and
and
mov
or
mov
inc
fistpl
arpl
xchg
mov
icebp
pop
gs
in
pop
dec
sbb
sbb
dec
pop
xchg
aad
mov
lds
leave
lds
mov
cmc
arpl
incl
push
xchg
fidivs
push
pop
sti
adc
pop
xlat
fcomps
aas
sbb
loop
or
ffreep
cli
jg
lock
in
fmull
aam
jae
rcr
fcom
rorb
movsb
call
inc
fists
rep
mov
push
push
mov
dec
cmp
fwait
cld
fistl
int3
hlt
jge
fcoms
outsl
jl
add
idiv
push
push
mov
adc
lds
or
adc
pop
into
mov
and
adc
outsl
jnp
movsl
xor
mov
fdivrl
sbb
pop
fadds
xchg
jns
icebp
test
mov
pop
add
sub
int3
imul
ljmp
roll
movsl
mov
sahf
jne
negb
cmpb
outsb
mov
in
mov
or
sbb
ret
jbe
shll
or
mov
test
jp
popf
mov
ja
xchg
mov
ss
push
cwtl
sub
pop
inc
pop
sub
sti
push
hlt
mov
add
stos
sbb
or
shl
push
add
sbb
xor
jne
fsubr
jg
mov
mulb
cs
xchg
les
test
jg
test
jl
into
in
push
mov
or
mov
mov
pop
fwait
xchg
cmc
xchg
sbb
push
inc
rorb
jle
lock
cltd
pop
inc
pop
test
out
loopne
stos
jo
or
fucom
cwtl
and
xchg
outsl
mov
mov
movsl
lock
and
in
sbb
int
adcb
movsl
mov
mulb
xchg
mov
or
les
xchg
mov
out
ss
add
out
pop
adc
sahf
call
mov
int3
push
and
inc
lahf
push
fcomps
fwait
mov
cwtl
loop
xor
jl
or
enter
stos
inc
push
dec
fwait
rcr
bound
mov
xor
push
xchg
xchg
xchg
ds
mov
mov
fcomi
fiadds
push
xor
mov
xchg
sbb
popa
inc
les
mov
push
xchg
clc
fisttps
mov
mov
pop
mov
pop
add
je
mov
mov
rcll
xor
jecxz
sti
add
xchg
xor
out
pop
ficoml
xchg
jecxz
cli
jmp
js
test
add
fs
mov
mov
xchg
out
addr16
add
adc
xchg
or
xor
lahf
ss
cli
in
in
rcll
jb
mov
push
cmpsb
fidivs
loope
loopne
test
jp
push
or
jne
xor
call
xchg
bound
das
mov
decl
sub
cmp
sahf
cmp
jb
or
cld
test
inc
push
adc
in
inc
push
scas
mov
add
sbb
insb
stc
inc
mov
mov
mov
notb
add
jno
lea
ret
sub
call
adc
mov
in
inc
or
call
andb
cs
and
add
mov
pop
dec
cmp
mov
mov
jp
aaa
rorl
or
flds
imul
test
cmp
jbe
std
in
cmc
aaa
inc
popf
lds
aaa
lret
sub
add
add
cmp
jecxz
enter
add
outsl
add
dec
jp
movsl
and
push
xchg
clc
and
push
jno
in
add
adc
xchg
test
test
lea
inc
xor
add
mov
ljmp
mov
dec
ret
mov
sbb
mov
rcrb
sub
in
loopne
dec
pop
dec
fwait
and
cmc
fimull
mov
imul
clc
aaa
inc
or
and
pop
lods
outsb
adc
fmull
shlb
test
sahf
imul
pop
pushf
test
xchg
test
in
ja
xor
xchg
int
xor
ds
pop
adc
push
inc
pop
push
add
sub
mov
popf
enter
aad
push
lds
push
add
shrl
int3
add
adc
pop
sbb
or
fsubrs
cmpsb
js
ljmp
cld
jg
mov
jl
jmp
xchg
cmp
jp
roll
xor
dec
dec
pop
fdivrp
and
icebp
andl
and
popa
inc
icebp
mov
xchg
out
iret
xchg
xlat
loope
pop
jle
pop
xchg
imul
popa
sti
lcall
les
add
adc
pop
sahf
fisubrl
scas
xchg
push
add
clc
mov
fsubp
sub
push
cmp
adc
nopl
adc
fldl
in
cwtl
addl
or
lods
test
dec
shr
or
push
sbb
call
push
sbb
mov
sbb
lock
incb
pop
test
mov
std
popf
add
lock
pop
cmp
jmp
fisubrs
insb
loopne
mov
xchg
xor
or
inc
lea
and
push
or
sub
mov
push
aam
lahf
push
leave
pop
aam
sbb
and
xchg
mov
ficoml
sbb
sub
ljmp
mov
loope
jo
in
mov
clc
int3
aaa
dec
scas
jp
xlat
sbb
in
jbe
sub
ljmp
fldt
daa
and
push
pop
push
adc
cmp
mov
xchg
mov
das
pop
lret
xchg
loop
aam
xlat
inc
sar
mov
xchg
pop
or
fnstcw
mov
mov
cwtl
dec
xlat
cmp
fisttpl
daa
lahf
adc
sub
xor
clc
mov
or
cmpb
je
xlat
mov
fisubl
sbb
dec
jl
pop
mov
or
add
out
pusha
jnp
int
stos
stc
std
lret
fneni(8087
leave
daa
fldt
movl
int3
inc
mov
loope
loope
xchg
cmc
push
test
jmp
in
jge
mov
xor
xor
call
je
jecxz
nop
mov
mov
xchg
cmp
and
cmp
and
test
or
std
mov
leave
mov
loop
in
mov
mov
mov
in
add
mov
addl
enter
jge
insb
push
mov
dec
pop
lock
mov
adc
or
aas
push
aam
adcl
addr16
mov
or
cwtl
dec
cmp
mov
mov
sbb
out
inc
pop
je
mov
lret
out
cltd
aas
loopne
xlat
sub
fisttps
jns
cmp
push
test
mov
adc
je
roll
test
sub
dec
lea
add
jnp
leave
stc
add
out
jl
aaa
push
jo
or
xor
or
fiadds
inc
xchg
int
ss
inc
aaa
mov
mov
push
mov
lret
inc
sbb
dec
mov
aaa
push
aad
inc
push
shlb
out
jecxz
jg
xchg
icebp
inc
adc
ret
cmp
sbb
xchg
mov
popf
fcomps
cwtl
imul
cwtl
ds
mov
shlb
shlb
pop
inc
cmp
mov
jnp
inc
cld
in
mov
sbb
xor
pop
xchg
sbbb
je
pop
mov
pop
daa
or
jmp
pop
push
aaa
adc
cld
pop
add
lock
out
jg
add
inc
fs
mov
int3
and
adcb
add
rcr
sahf
mov
inc
dec
cmp
rolb
les
arpl
sahf
jp
xchg
jecxz
insl
inc
xchg
jg
rorl
jb
fnstcw
js
mov
inc
aaa
adc
cmpsb
add
dec
sbb
jp
mov
add
lahf
popa
test
pop
adc
ja
lahf
push
cltd
andb
cmpb
mov
push
mov
inc
mov
pop
sbb
lds
inc
jge
getsec
ret
sbb
out
sub
adc
fsubrp
cmp
jae
sub
push
add
xchg
loop
inc
xchg
dec
sub
js
das
cmovp
mov
pop
sub
loop
mov
pop
sub
inc
cmp
and
xor
mov
jns
ret
daa
inc
movsb
fs
clc
inc
mov
sbbl
pop
lock
and
cmp
pop
call
ret
xchg
loopne
jb
add
ljmp
inc
cld
adc
lock
mov
sbb
rep
les
jnp
jbe
ljmp
in
imul
inc
int3
pusha
fs
aaa
jle
std
and
and
inc
dec
or
dec
mov
mov
or
xchg
filds
fbld
pop
icebp
adc
testl
incl
test
pusha
sbb
stos
cmpl
ljmp
orl
stos
mov
mov
pop
mov
jb
jb,pt
and
movsb
or
inc
inc
shl
cmp
in
pop
incb
mov
in
pop
add
call
out
mov
sbb
add
adc
push
rorb
mov
in
dec
movsb
add
mov
sbb
fisubrs
cmc
xchg
xor
mov
mov
lock
repnz
cmpsl
sub
loop
jg
jl
inc
ficoml
push
in
jmp
outsl
cmp
xchg
rclb
cmp
pop
and
iret
jge
mov
test
das
mov
pop
push
sub
nop
sbb
xor
pop
sbb
test
mov
adc
sbb
dec
imul
and
lret
adc
test
cmp
loop
add
adc
xor
jmp
sbbl
inc
orb
sbb
push
or
xchg
dec
movsb
cmpb
loope
mov
movsl
mov
xor
dec
add
mov
inc
sub
das
gs
mov
adc
mov
out
in
je
out
gs
adcb
es
mov
dec
adc
inc
inc
or
jbe
sub
std
add
pop
adc
xor
mov
cmp
icebp
in
mov
jg
mov
mov
ljmp
arpl
div
and
mov
loope
scas
pop
push
pop
stos
out
or
push
in
call
mov
pusha
or
movsl
es
pop
push
cmc
mov
xor
push
cld
jl
outsl
mov
aas
mov
jne
stos
fimuls
enter
testl
pop
repz
je
push
push
adc
repnz
decl
mov
adc
xchg
sbb
push
mov
test
stc
or
sub
sub
jg
lret
stc
pop
push
and
outsl
add
inc
aad
jge
mov
idivb
insl
incl
dec
es
xorb
xor
add
inc
ja
inc
jmp
outsl
ficoms
mov
jl
dec
inc
push
stos
int3
xchg
xchg
mov
shl
lock
mov
outsl
cmpps
hlt
add
adc
outsb
cld
mov
or
pop
and
ror
scas
ret
adc
cmp
push
cmp
add
stos
xor
mov
std
in
cmp
cmp
lea
les
jo
loope
jle,pn
cmp
dec
sti
inc
fdivrs
repnz
pop
jg
les
in
sub
push
mov
jecxz
fadds
shlb
mov
movb
xor
jno
loope
and
inc
lods
outsl
mov
repnz
leave
pop
xor
fldcw
cmpsb
lret
sbb
loope
sbb
js
xchg
or
dec
push
bound
push
inc
cltd
and
pop
adc
pop
loope
mov
and
test
stc
sbb
std
sarb
sbb
into
fdivl
sub
xor
sbb
leave
cmp
lcall
shl
add
outsb
imul
cmp
nop
mov
xchg
add
das
arpl
rcrl
and
lret
bound
fdivrs
adc
pop
dec
sbb
mov
stos
add
lods
out
mov
mov
movsl
ljmp
mov
call
cmp
insl
pop
mov
ror
push
xor
pop
aad
xchg
std
ja
push
and
std
and
fnsave
mov
pop
std
adc
movsb
jmp
pop
inc
mov
dec
stos
mov
jle
inc
adcb
xchg
add
icebp
lcall
outsb
scas
cmp
xchg
add
cs
inc
in
idiv
push
push
xor
cli
dec
push
jbe
loopne
movsb
inc
movsl
fidivrs
mov
sub
mov
fildll
push
xor
xchg
jb
jbe
loopne,pt
mov
shlb
push
pop
cmc
pop
pop
into
idiv
movsl
pushl
pop
push
sbb
sti
push
jge
push
add
aas
pop
sub
cmp
jg
cmp
testb
xor
out
enter
xor
adc
or
shlb
jo
cli
mov
scas
mov
loop
jecxz
test
push
call
xor
leave
sub
das
cld
sbb
sub
mov
sbb
or
cmc
outsb
cmp
fsubrs
arpl
pushl
outsl
scas
xchg
mov
jmp
sbb
dec
loopne
dec
into
jge
mov
push
incl
add
mov
jecxz
lret
or
movsl
mov
lret
push
jnp
xor
lock
rorb
or
or
mov
rcl
inc
mov
das
inc
aas
jle
ret
scas
xor
jo
jp
pop
in
fdivrl
pop
std
inc
mov
fucomp
test
into
aas
xchg
mov
aad
xchg
push
mov
sarb
jg
lock
xchg
in
repnz
adc
cld
nop
sub
test
mov
movsl
insl
cmp
sub
pop
leave
or
mov
lcall
or
movb
dec
ret
lcall
mov
push
inc
les
mov
mov
jnp
enter
or
cmp
or
hlt
frstor
mov
sbbb
incb
sub
inc
mov
dec
push
fcmovb
es
sbb
das
mov
sbbl
sti
mov
aam
push
xchg
ja
mov
pop
jne
push
adc
add
lcall
stos
cli
daa
sub
cltd
pop
movsb
in
ret
pop
hlt
mov
mov
xlat
sub
pop
movsl
das
mov
out
les
push
add
mov
inc
daa
cwtl
mov
inc
aam
jg
flds
test
dec
scas
jbe
fisttps
cmp
movsl
andb
cmc
cs
xorl
dec
sub
dec
das
jge
dec
iret
mov
testl
popl
ja
xchg
sbb
jge
cwtl
mov
cli
sbb
push
sti
pop
jp
hlt
sbb
jo
lret
dec
in
testb
arpl
jnp
lret
pop
xchg
xchg
lea
into
dec
fnsave
cmpsb
sbb
out
call
scas
add
and
mov
test
inc
pop
test
mov
clc
dec
in
mov
mov
xor
inc
mov
push
ds
in
inc
and
xchg
je
adc
add
add
dec
mov
push
dec
fsubs
push
lret
movsl
sbb
adc
cs
xor
fldt
dec
xchg
pop
mov
and
loopw
movsb
pop
std
add
inc
jp
jmp
insb
ljmp
add
cld
je
int3
jnp
sbb
fstps
pop
adc
dec
mov
pop
mov
jge
fwait
dec
mov
fldenv
push
les
icebp
inc
add
adc
pusha
jmp
mov
inc
rol
out
jp
add
adc
mov
addl
push
xor
or
jge
fisttpll
and
out
inc
ljmp
sbb
fxam
lods
cmp
lea
mov
nop
pop
cs
mov
inc
mov
nop
jbe
aaa
push
call
cmp
or
push
inc
or
enter
inc
out
or
sahf
sub
lahf
sub
cli
ja
inc
psrlw
adc
subb
mov
in
cmp
in
fs
ret
xor
lahf
lahf
bound
fcoml
loop
mov
adc
hlt
out
leave
or
mov
test
neg
xchg
test
ss
mov
mov
jo
lock
clc
incb
scas
ds
xchg
xor
pop
push
xchg
pop
out
push
xchg
mov
dec
adc
daa
mov
pop
mov
pop
inc
jg
test
test
push
jg
aad
stos
shrb
sub
in
call
cmc
pop
ret
lods
jmp
add
cwtl
xor
adc
cmc
adc
push
loopne
sti
push
dec
stc
rcrl
clc
aas
data16
or
nop
mov
adc
in
mov
xchg
and
mov
pop
aam
add
and
aad
adc
cs
mov
adc
push
lret
mov
pop
push
push
push
outsl
loopne
xorl
test
cwtl
ret
mov
mov
inc
sub
outsb
mov
add
das
in
ja
jnp
movsl
push
jnp
loope
movsb
mov
int3
lahf
add
shrb
dec
xchg
in
pop
sub
insb
insb
in
mov
test
cmpsl
ss
or
inc
icebp
pop
lock
mov
inc
mov
inc
sbb
inc
repnz
sub
push
pushf
xchg
mov
icebp
outsl
sub
pop
push
ljmp
mov
and
mov
xchg
outsl
mov
ljmp
int3
js
cwtl
or
and
and
lea
and
mov
push
adc
mov
push
xchg
xlat
push
sbb
mov
test
or
fsubrp
stos
jge
jno
ljmp
fisttpl
pop
ficomps
inc
mov
and
add
int3
hlt
inc
mov
imul
ficompl
pushw
loopne
inc
pop
mov
lcall
pop
lret
jns
arpl
pop
repnz
add
movsl
sbb
call
decl
fdivs
sub
adc
adcb
stos
fwait
and
push
sarb
pop
mov
pop
rcr
sarb
push
fidivrl
jns
xchg
cli
and
test
scas
sub
mov
loopne
jnp
dec
push
mov
mov
fldl
test
lahf
ds
aas
pop
rcrl
pop
and
cmpsb
insb
mov
jg
scas
ret
lods
mov
jne
repnz
icebp
or
or
iret
aam
js
sbbl
mov
and
aas
pusha
cld
addr16
sbb
leave
cli
inc
loopne
sbb
mov
out
loopne
inc
out
divl
adc
test
loopne,pn
sbb
or
ficoms
jnp
sub
mov
xchg
insl
mov
imul
bnd
outsl
sbb
enter
je
mov
les
jge
pusha
push
lcall
mov
and
push
shrb
add
xorl
sub
sbb
lret
and
cmp
mov
es
int3
mov
mov
test
int
ljmp
test
jmp
push
fwait
imul
jbe
push
dec
and
sub
ljmp
out
cli
ljmp
cld
inc
push
inc
popf
or
aas
dec
mov
stos
add
adcl
adc
adcl
and
lock
mov
imul
sbb
loope
push
and
aam
and
push
mov
std
lret
ret
addb
sbb
je
cmp
les
push
gs
dec
sbb
divl
add
pop
adc
imul
mov
or
bound
inc
shll
jmp
dec
cmp
or
lea
rolb
inc
loope
movsb
mov
or
test
xchg
jecxz
insl
inc
out
loopne
jle
sbb
sbb
cmpsl
mov
xlat
jae
jb
mov
in
push
lea
mov
jle
mov
ret
push
subl
test
mov
xchg
call
call
sarb
jmp
inc
pop
xchg
out
xor
ret
push
xchg
jecxz
jle
cmpsb
dec
std
jge
test
sub
call
inc
xchg
pop
test
cwtl
insb
icebp
cld
mov
ss
pushf
negl
mov
or
inc
addr16
adc
xchg
mov
imul
jne
cmp
dec
rol
sti
dec
outsl
std
mov
cmc
aas
lods
xchg
ficoms
and
lret
rolb
xor
jmp
xchg
adc
sbb
fwait
dec
fisubrs
lcall
inc
leave
push
mov
dec
mov
imul
shrl
insb
pop
stos
js
inc
jno
repnz
adc
sbb
add
mov
and
cmc
iret
cmpb
lret
int3
lock
adc
jmp
test
pop
cs
xor
push
xchg
mov
sahf
cmp
jg
js
push
rorl
call
nop
jp
dec
jl
adc
ret
addl
or
pop
aaa
or
es
and
mov
iret
mov
adc
fs
ljmp
mov
sbb
or
cmp
stos
or
incl
mov
aaa
mov
icebp
test
shrb
add
mov
insl
loopne
sbb
jg
push
cltd
inc
cmpsb
or
loope
dec
movl
iret
fs
out
jmp
ret
std
xchg
paddb
jno
das
les
mov
cmc
call
dec
push
pop
call
and
insl
sub
push
daa
cmp
cmc
push
testb
insl
mov
daa
imul
fstpt
inc
xlat
nop
inc
adc
pop
rcr
ret
hlt
cld
sbb
xor
std
loop
outsb
roll
orl
test
jl
mov
mov
cld
mov
roll
dec
scas
aaa
es
inc
adc
bound
mov
jae
fsubs
adc
push
fidivrl
add
cmp
shlb
xor
cmpb
jge
aas
sub
aaa
aaa
ficomps
fisubrs
push
fdecstp
je
add
pop
cli
mov
push
sub
lret
mov
pop
jecxz
repz
popf
xchg
push
scas
xchg
add
sub
lds
add
ja
aas
sbb
dec
unpcklps
sub
stos
push
cmc
incl
mov
loopne
mov
jp
xchg
outsl
mov
fldt
cmpsb
or
sub
sbb
pop
xchg
fwait
mov
jnp
pop
mov
or
xchg
sub
push
add
jo
jne
je
in
mov
loopne
add
pop
ds
clc
lret
and
inc
cld
aam
push
sbb
scas
adc
out
cmpsl
mov
arpl
sbb
data16
cmp
fcomps
mov
push
out
mov
cmp
sbb
xor
pop
stc
xor
xor
dec
mov
mov
jmp
mov
adc
fldln2
dec
hlt
decl
outsb
int
mov
test
cmp
ljmp
je
shll
mov
push
in
push
jne
pop
xor
fstpt
inc
addb
xorb
jecxz
mov
scas
int
jae
xchg
hlt
int
loop
mov
jp
call
sbbl
inc
and
dec
outsl
shrb
push
xchg
jle
shll
inc
cmc
jbe
adc
sub
es
ljmp
outsl
xchg
cmp
mov
jmp
ror
sbbb
or
cmpsl
jecxz
cs
mov
or
mov
shll
test
aas
xorb
push
mov
rolb
in
or
pop
loope
aaa
movsl
data16
je
cmp
mov
xchg
in
or
pmulhw
xor
in
aam
adc
inc
fsubr
cli
ret
aad
clc
enter
fdivrl
cmpb
fldcw
mov
or
ficoml
mov
mov
mov
add
pop
ret
pop
mov
and
test
das
movsb
jbe
leave
pop
push
push
std
add
sub
jg
mov
dec
adc
or
cltd
iret
iret
adcb
push
outsb
movsb
cmp
mov
add
and
cmp
pushl
js
orl
pop
add
adc
sub
sbb
sub
fadd
xor
cmp
xchg
dec
push
mov
mov
sub
add
loopne
shll
scas
cmovp
sbb
xor
mov
cmpsb
or
pop
outsb
movsl
cmp
jbe
filds
push
scas
and
jp
out
mov
mov
subb
aaa
ret
xor
sbb
pushf
in
xchg
test
and
inc
inc
sbb
outsl
push
popa
mov
lea
add
xorl
add
sahf
dec
fstpl
sub
loopne
push
scas
addr16
ret
sub
mov
pop
rcl
in
inc
ss
jg
inc
rcrb
or
leave
movsl
clc
popf
sbb
sub
arpl
je
ret
xor
xor
and
mov
mov
sub
les
fmull
jecxz
ret
test
xchg
xchg
push
in
fdivr
push
roll
out
dec
stos
divb
pop
into
test
aaa
add
push
push
jl
inc
testl
in
fistpl
pushf
mov
jmp
jno
inc
push
rcll
mov
sub
inc
repz
enter
popf
cli
cmpsb
or
jno
imul
or
adc
out
mov
push
shlb
ret
xchg
push
test
sbb
jle
pop
out
xor
inc
jnp
bound
test
dec
pushl
jne
add
xor
dec
stos
mov
enter
dec
or
jne
sbb
sub
shlb
rcr
mov
mov
mov
jmp
arpl
or
adc
pop
sbb
xor
push
mov
mov
test
adc
mov
dec
cmp
sbb
in
push
lret
arpl
std
test
mov
add
adc
mov
mov
push
les
negb
loop
subl
cmp
rcr
sahf
fs
adc
mov
lods
into
or
test
pop
push
scas
push
subb
jb
cmp
xchg
inc
insb
in
scas
lock
fs
pop
and
stos
xchg
rorl
adc
sbb
movsl
xlat
stos
pop
pusha
inc
loop
xchg
mov
jno
adc
and
leave
mov
pop
inc
or
fsubl
mov
aam
push
dec
inc
jp
sub
incl
nop
add
adc
dec
test
add
inc
pop
or
std
add
push
add
xchg
adc
add
pop
aam
leave
xor
mov
cmp
mov
jg
jae
aas
mov
out
xchg
decl
add
cwtl
jns
fstpt
mov
cwtl
sahf
jecxz
mov
incb
mov
gs
cs
fnstenv
enter
mov
outsl
mov
loopne
and
add
out
outsl
xor
subb
mov
enter
or
jnp
mov
cmpsl
lret
pop
jb
mov
xchg
pop
rclb
ss
mov
pusha
jg
dec
xchg
jno
movsl
js
xor
das
mov
in
outsl
adc
stc
test
and
dec
pop
cwtl
mov
sbb
sub
and
test
pop
rolb
mov
jg
push
push
ja
test
xchg
sbb
sub
sbb
test
int
cmpsl
jne
and
inc
mov
adc
into
arpl
push
mov
stos
jnp
sub
adc
mov
stos
ss
bound
cltd
mov
mov
add
adc
pop
fcomps
sub
cmp
aas
subb
jb
pop
push
fs
imul
mov
pushf
cmc
sub
cltd
dec
xchg
in
inc
lahf
lods
dec
mov
std
ja
push
int3
mov
mov
mov
ss
rcll
test
rolb
push
in
inc
hlt
pop
jns
dec
jg
scas
cmp
lds
adc
je
aaa
cli
mov
xor
jb
and
leave
cwtl
js
ja
push
mov
fwait
xchg
test
adc
jnp
out
mov
enter
mov
sarl
jmp
aad
or
in
cmc
push
inc
inc
mov
push
addb
sub
shlb
cmp
bound
adc
lock
jae
lods
pop
cli
add
jge
xlat
repz
lret
mov
icebp
sti
push
into
xor
cmpsl
mov
scas
mov
leave
aaa
imul
cmp
repnz
or
jg
dec
adc
sub
test
and
sarb
movsl
xchg
lods
jne
sbb
jp
ljmp
mov
adc
jge
pop
inc
sbb
adc
sbb
xor
jmp
decl
jp
adc
lock
sub
bound
mov
jmp
pop
and
sti
push
adc
inc
aad
or
lahf
xorl
adc
les
mov
jbe
mov
and
mov
sarb
mov
cmp
ffree
mov
push
cmp
and
das
das
test
jge
leave
inc
sub
add
stos
ret
lock
out
hlt
je
jl
shl
popa
arpl
int3
mov
clc
jmp
jl
daa
sub
movsb
or
popl
pop
hlt
sbb
repnz
or
xchg
push
dec
mov
stc
pop
add
cmp
data16
pop
push
xchg
sub
subb
lods
incb
sbb
aad
shrb
adcb
sub
imul
fists
mov
fsubl
dec
sbb
ds
aaa
insl
cmpsb
aaa
dec
out
inc
pusha
pop
push
jg
mov
aam
jae
addr16
mov
adc
aam
adcl
fisttpll
cmp
loop
ffreep
movsl
adc
sbb
inc
lea
pushf
push
dec
pop
jne
call
out
jno
and
imul
or
add
ja
movsb
or
xchg
test
aam
add
ret
daa
rorl
or
int3
lret
fs
call
push
dec
mov
inc
push
out
dec
dec
mov
or
es
sbb
shlb
subl
and
mov
sbb
jmp
or
mov
or
mov
cmp
jg
push
pusha
add
xor
mov
add
ret
lds
jle
out
jmp
aad
or
rol
or
cld
mov
test
dec
rorl
aaa
ret
insl
or
push
ret
pusha
jbe
ret
rclb
insb
out
pop
pop
mov
std
push
dec
sbb
test
pop
in
dec
stc
mov
shrb
and
outsl
and
sbb
push
movd
push
jns
jmp
cmp
je
addr16
inc
xchg
cmpsl
stos
mov
and
in
outsl
add
pop
ljmp
push
sbb
sbb
fs
pusha
ret
aaa
add
cmp
mov
sub
sub
xchg
xchg
mov
ret
sbb
add
dec
jg
movsl
push
dec
lahf
leave
adc
inc
xchg
aas
jp
movsl
jle
xchg
aaa
in
dec
aaa
in
sub
mov
fldt
or
outsb
jnp
cli
pop
ja
sbb
imul
or
xchg
push
jle
mov
test
outsb
das
cli
pop
scas
test
fidivrs
lds
gs
cmpsb
and
dec
loope
or
adcb
clc
mov
cld
inc
loop
and
add
jecxz
in
lahf
bound
je
mov
test
adc
add
add
ret
pop
push
test
pop
les
add
sbb
pop
adc
movsl
lahf
push
or
rorb
cld
bndldx
aaa
ljmp
loop
lods
adc
push
arpl
repz
dec
or
push
sub
out
jmp
shl
xor
xorb
jp
cld
mov
cmp
add
push
rcr
shll
jbe
inc
push
loope
fs
xchg
mov
out
dec
arpl
inc
test
shl
lods
jns
leave
add
rcrb
pavgw
fs
in
pop
cmpsb
and
xchg
xor
sub
sarb
ret
pop
adc
hlt
xchg
sbb
jmp
push
hlt
aas
shlb
test
nop
push
or
xor
std
ffree
adc
add
call
jecxz
aam
mov
mov
adc
xor
iret
outsl
aaa
loop
sbb
out
sbb
cld
add
xlat
pop
adc
jl
fstl
pop
or
int
sub
dec
jl
lds
les
lret
aad
repnz
inc
das
mov
dec
jnp
jno
int3
dec
hlt
jmp
cmp
popl
or
push
inc
repnz
mov
dec
jmp
add
cmp
add
mov
aas
icebp
mov
loope
push
cmp
xchg
shrb
xor
outsb
pop
ja
mov
mov
ret
movsb
mov
inc
sbb
add
jge
add
inc
popa
push
mov
inc
xor
and
jb
in
sub
das
jbe
pop
cwtl
xchg
jo
bound
adc
pop
push
cmp
fdivrl
or
or
sbb
mov
inc
push
pusha
fadds
pop
push
mov
std
dec
aaa
lds
sub
mov
sarb
inc
in
mov
lock
in
mov
dec
fldl
mov
mov
jle
addr16
out
jno
xchg
or
adc
shrl
or
std
xor
movswl
mov
fbld
pop
inc
or
shrb
addr16
test
filds
mov
ljmp
lahf
stos
add
inc
dec
lods
clc
sub
or
sub
daa
std
mov
cld
push
sbb
pop
mov
cmc
lret
mov
sub
ja
ret
sub
xor
mov
mov
sbb
je
add
es
inc
xchg
inc
insl
testl
hlt
ss
sbb
outsl
and
dec
movsb
jb
aad
sub
dec
movsl
stc
pop
dec
scas
sbb
fistpll
jbe
mov
or
lret
mov
mov
inc
sar
mov
rorl
adcl
pop
test
and
mov
or
cld
push
xchg
es
add
pop
pop
stos
add
mov
pop
mov
pop
jmp
xchg
fnstsw
sbb
push
sub
push
test
and
das
pop
xor
dec
jge
adc
jmp
and
mov
movb
cmp
jnp
sbb
scas
jp
xor
push
add
xchg
lods
sub
sub
push
mov
cmc
rorl
mov
fisubs
inc
mov
aam
je
outsl
jmp
lock
cli
inc
add
rorl
or
sbb
sub
cmp
sahf
clc
inc
aas
js
test
push
pusha
sub
cwtl
cmp
enter
lsl
lds
std
add
or
cwtl
leave
orl
fcomi
and
jg
push
lea
xchg
inc
clc
dec
orl
movsb
test
stc
add
mov
jge
sub
outsl
dec
pop
adc
mov
fisttpll
das
mov
inc
inc
mov
dec
pop
cmp
shlb
or
aad
jb
fcoml
decl
inc
fcoml
cmp
ds
outsb
xchg
xor
sbb
es
push
in
in
lahf
mov
pop
aaa
adc
fildll
push
push
aaa
add
lret
rcrb
mov
mov
fdivrl
pop
pop
mov
sbb
dec
cmp
cmpb
lcall
mov
rorb
inc
add
inc
inc
pop
push
adc
sarl
rorb
jbe
mov
fcomip
mov
pop
sub
pop
jle
outsl
loope
fdivrl
repz
data16
das
add
imul
push
mov
jo
out
dec
cli
loop
push
out
xchg
fisttps
in
stos
outsl
fwait
add
xchg
ja
adc
out
mov
and
push
addb
mov
push
mov
loopne
push
lds
jg
dec
std
out
aaa
push
xchg
outsl
jg
mov
push
inc
xchg
cwtl
or
jl
lea
jae
stc
inc
adc
ds
and
gs
push
or
mov
xor
add
bound
inc
inc
and
push
sub
test
add
mov
adc
bound
sti
mov
mov
pop
xor
aam
mov
mov
out
inc
inc
jp
push
lret
movsl
ret
dec
sti
xchg
es
cmp
pop
ljmp
or
test
js
inc
jg
and
cmp
pop
xchg
aad
cmp
xchg
das
daa
pusha
fdivr
test
jg
imul
jg
push
aad
mov
push
jmp
mov
clc
decb
imul
pop
js
push
pop
leave
rcrb
shlb
pop
cmpl
test
xchg
jne
push
into
mov
mov
mov
mov
mov
dec
cmpb
jge
or
mov
push
mov
dec
dec
arpl
inc
pusha
arpl
push
fdivrp
lock
pushf
xchg
and
sbb
nop
adc
daa
xchg
pop
orb
fdivl
and
mov
sub
in
inc
pop
stc
mov
add
and
repz
cmp
push
cld
and
cmc
xchg
mov
xchg
in
inc
mov
ss
mov
mov
lea
add
leave
and
outsb
fwait
in
movsb
in
aaa
loopne
inc
jmp
xchg
iret
scas
ljmp
adc
shll
loope
pusha
mov
add
in
jmp
and
xchg
mov
jne
inc
sub
sbb
fsub
nop
sub
pop
out
leave
punpckhbw
mov
es
and
in
sbb
pop
or
adc
cwtl
mov
fmull
jnp
xor
dec
sub
rcrl
sbb
adc
xchg
testb
mov
pop
adc
iret
jp
lods
subl
pop
aas
fnop
lock
ljmp
gs
adc
pop
dec
orl
xchg
fidivl
hlt
xorl
pop
out
xchg
mov
and
pop
loop
call
loop
std
ja
sbb
push
dec
popa
js
bound
cmpsl
add
leave
cmc
sub
ja
daa
dec
jmp
outsl
add
fstpt
inc
push
adc
lods
xlat
cmp
loope
fsubrs
pop
loopne
or
in
cmp
mov
adc
outsl
jecxz
xchg
data16
inc
mov
pop
mov
ja
push
xor
lret
std
cmp
hlt
xchg
dec
mov
push
cmpb
int3
and
out
mov
orb
xorl
pop
add
xchg
adcb
pop
call
inc
in
xchg
mov
or
xor
mov
jecxz
test
fcmovnbe
sti
scas
dec
mov
sbb
mov
iret
inc
cmpl
lcall
mov
sbb
insl
xchg
xchg
or
push
outsb
mov
or
mov
add
scas
fucomi
cmp
repnz
mov
sub
sbb
fildll
or
icebp
mov
or
mov
in
lcall
lea
call
dec
dec
jno
inc
inc
test
lahf
mov
xorl
or
xchg
mov
sti
push
rcrl
rcl
roll
cld
call
push
jp
ljmp
sbb
rorl
mov
pop
js
inc
ss
adcl
aaa
sahf
push
movswl
mov
dec
push
sub
fadd
inc
jno
inc
fs
mov
cmp
pop
decl
cmp
mov
sarl
inc
add
negb
outsl
loope
push
dec
mov
cmp
testb
sbb
lock
in
cmc
or
ret
adc
pop
enter
ficoml
gs
sar
cs
cmp
rorl
aam
inc
test
pushf
xor
jl
xor
sbb
xor
add
inc
cmp
int3
imul
mov
movsl
ljmp
and
xor
mov
fidivrl
add
push
jne
or
sbb
xor
or
inc
je
popf
push
fnstsw
aam
inc
nop
mov
das
into
jecxz
cmp
fcmovu
test
sbb
inc
sub
loop
je
lods
pop
sub
inc
fstl
or
or
in
and
dec
bound
push
shlb
notb
pop
add
and
js
push
jns
jg
sbb
lods
ja
adc
ja
dec
push
and
sbbb
fcompl
out
je,pt
in
mov
lret
and
incl
jge
inc
xchg
add
jmp
insb
fisttpl
xchg
xchg
int3
aam
jmp
push
lock
shr
pop
addr16
sub
fadds
or
test
xchg
dec
hlt
pop
mov
cs
adc
xchg
fidivl
cmp
xchg
cmp
xchg
xchg
xor
add
and
mov
push
and
pop
imul
call
dec
adc
in
int
shrb
popa
or
fwait
outsb
dec
enter
and
das
xchg
mov
andb
lea
pusha
inc
cli
test
jne
test
lcall
lock
cmp
imul
xchg
adc
add
mov
in
testb
jno
leave
mov
lahf
es
pusha
add
pop
test
jne
or
es
enter
roll
mov
sbb
out
mov
push
jb
pusha
inc
ja
mov
std
call
adc
jae
sub
leave
xor
mov
push
lret
and
test
orb
rcr
iret
sub
mov
cltd
ret
add
orb
pop
nop
inc
in
push
mov
idivb
mov
sub
and
jns
adc
stos
iret
jbe
clc
aam
mov
gs
or
or
sbb
xchg
sbb
mov
add
inc
push
ret
lods
das
rorl
mov
shll
pusha
testl
popf
mov
xchg
jecxz
aad
and
mov
int
jg
out
mov
fisttpll
mov
into
incb
shll
stc
jl
and
imul
insl
cmp
ret
nop
mov
lds
das
mov
aam
pop
jne
jb
pop
clc
scas
xor
jecxz
jle
push
leave
add
data16
aad
lahf
popa
jg
inc
jp
data16
xor
push
inc
cld
mov
ficompl
push
inc
cmp
not
aas
loop
cmp
fbld
mov
sarl
add
lret
sub
jmp
inc
cmp
hlt
ret
adc
pop
ret
sbb
sub
mov
stos
jge
push
jae
ljmp
les
sbb
add
and
jb
mov
mov
in
dec
inc
rcl
push
stos
lock
outsl
add
clc
and
loopne
testb
mov
or
adc
in
out
jo
pop
enter
add
mov
xchg
xlat
icebp
push
sbbl
inc
mov
clc
shl
mov
insl
ljmp
mov
test
pop
cwtl
in
cmp
loop
xor
jge
jb
fimuls
pop
and
sub
xchg
loope
xchg
mov
lea
sub
fsub
fcmovb
mov
jle
cwtl
imul
dec
push
popa
js
sbb
or
nop
ss
or
aas
fisubl
or
loopne
inc
jno
stos
icebp
call
mov
sbb
mov
pop
xchg
mov
mov
pop
insb
mov
mov
dec
outsb
pop
fildll
sbb
movsb
in
jnp
lods
call
test
sahf
mov
and
sub
jne
push
or
add
outsl
adc
outsb
ss
sub
movsl
insl
mov
test
jge
xor
mov
fisttps
mov
push
int3
lret
js
inc
xor
testb
outsl
xchg
dec
mov
dec
jo
in
pop
sar
and
mov
out
das
sub
lcall
pop
pop
pop
sbb
sub
sbb
add
push
loop
xor
clc
mov
xor
jge,pn
sar
jg
out
pop
fwait
dec
adc
jle
cmp
in
mov
pop
push
mov
dec
xorl
adc
pop
jne
dec
cmp
mov
mov
shll
call
jl
mov
jg
dec
dec
push
clc
mov
adc
inc
push
loope
xchg
jo
or
je
push
outsl
xor
mov
aaa
jbe
cmpsl
call
insb
mov
lea
lret
fildl
cli
jg
mov
jle
push
sbb
in
mov
stos
fldenv
inc
adc
sub
nop
nop
cli
sbb
aad
aas
cld
lea
fdivr
testb
test
insb
or
xor
sbb
test
gs
iret
adc
lods
and
jle
insb
and
ds
push
jo
adc
lret
dec
xchg
inc
sti
inc
icebp
subl
and
and
pop
and
ljmp
loop
inc
mov
sub
mov
dec
adc
lea
mov
xchg
dec
inc
mov
sbb
ss
push
add
inc
mov
mov
rcll
testl
xor
push
adc
dec
push
xor
mov
adcb
inc
push
inc
push
push
sti
push
leave
arpl
ja
sub
repz
fldcw
mov
mov
mov
loop
pusha
and
push
push
mov
push
mov
test
and
outsb
pusha
sti
mov
andb
push
jne
pop
or
ljmp
jne,pt
mov
sahf
push
mov
test
test
pop
nop
je
sub
mov
in
sbb
call
mov
add
jle
mov
push
adc
jb
sub
push
push
jnp
jns
adc
sti
pushf
fsubs
fsubs
xor
inc
insb
cmp
push
insb
mov
mov
std
jge
repnz
lea
xor
je
mov
jg
jo
sbb
push
push
in
test
insl
jne
jbe
outsl
inc
cwtl
xorb
jno
push
ss
js
popf
sub
xchg
adc
fstps
dec
leave
xchg
dec
inc
pop
rorb
ss
push
jbe
dec
dec
in
mov
rorl
aaa
xor
fwait
in
push
add
andb
ss
test
push
mull
xchg
inc
xchg
je
pop
sbb
aam
ss
jb
int3
adc
or
jne
fisubs
les
xlat
movsl
dec
je
dec
repnz
enter
dec
ret
mov
nop
adc
mov
cmpsl
add
pop
jbe
insb
pop
add
jne
push
add
sub
ja
inc
neg
mov
push
inc
dec
mov
inc
dec
sub
add
sar
rcll
roll
shl
fidivrl
filds
neg
ret
outsb
jecxz
push
cs
cmpxchg
dec
sarb
mov
mov
data16
jb
sbb
mov
fs
xor
aas
and
sbb
lea
inc
cmpb
lcall
xor
pop
xlat
and
cmpsl
lods
ret
mov
add
std
cmpb
mov
addr16
inc
je
ja
mov
nop
add
dec
rcrb
xorl
mov
cld
dec
popf
pop
sti
imull
test
inc
les
pop
mov
sub
mov
lea
fidivs
sub
imul
jl
jns
cmp
xorl
xchg
jo
icebp
add
or
aaa
pandn
and
js
inc
xor
cld
subb
fsubs
sti
incl
pop
dec
neg
dec
pushl
mov
pop
not
and
or
aaa
fisubl
inc
jb
adc
imulb
insl
sbb
inc
or
daa
or
add
divb
in
rolb
in
addr16
not
daa
inc
dec
not
mov
adc
out
hlt
push
inc
or
jns
pop
sti
lea
cmp
dec
inc
add
andb
fistps
pop
inc
pop
insl
pop
dec
sub
add
inc
mov
dec
add
inc
push
aad
fidivrs
flds
pop
sub
add
dec
inc
dec
mov
lret
inc
push
cmp
rorb
dec
mov
dec
cld
or
sahf
shll
hlt
jne
leave
sbb
das
inc
hlt
add
xor
fisubrs
jns
outsl
ja
test
or
addr16
dec
push
dec
push
pop
inc
and
cltd
in
jp
cmp
and
push
leave
stos
xor
add
bound
movsb
xchg
cmp
out
xchg
jb
inc
jbe
call
inc
adc
test
or
adc
fbld
inc
mov
leave
das
mov
dec
xor
out
sbb
or
in
subb
les
das
mov
inc
jmp
jne
insb
cmp
lock
aas
movsb
pop
push
leave
pop
outsb
mov
xchg
insb
sbb
push
je
push
std
lcall
cmc
and
or
ds
mov
inc
mov
or
shlb
pop
das
sti
adc
xor
out
mov
push
push
fnstenv
and
outsl
cli
push
push
xchg
push
add
push
push
daa
inc
jecxz
jmp
push
jbe
jle
mov
xchg
dec
push
pop
add
dec
pushl
xor
add
mov
subb
divb
dec
cwtl
lret
push
push
shlb
jl
rcr
lock
adc
push
xchg
jo
lds
add
inc
rcrb
push
ja
dec
cld
dec
jbe
dec
sub
gs
jbe
movsb
xchg
mov
push
push
xchg
mov
rorl
pop
adc
mov
mov
pop
cli
fldt
mov
dec
mov
lods
dec
dec
add
inc
inc
xor
loope
adc
roll
js
add
leave
pop
pop
mov
aas
push
daa
pop
movsb
push
outsb
inc
inc
jle
add
je
push
inc
adc
ficoms
out
push
or
push
adc
popa
out
subl
mov
notl
xor
adc
inc
ds
test
pop
mov
adc
pop
inc
clc
jp
add
and
push
jb
testb
adc
dec
les
addr16
or
xchg
arpl
mov
je
mov
ret
push
std
sbb
pop
movsl
sar
rol
nop
js
dec
iret
out
or
sbb
out
roll
lds
dec
lea
push
sbb
sub
imul
rclb
cmp
push
jmp
jns
jle,pn
loopne
fdivs
push
stc
cmp
add
test
lock
mov
mov
mov
insl
mov
add
in
lea
hlt
mov
inc
mov
in
push
pop
jno
mov
add
mov
inc
loopne
insl
jg
fs
nop
adc
push
das
cs
or
add
cwtl
test
adc
push
xor
ss
imul
mov
sti
cs
xchg
push
xor
inc
pop
rorb
add
notw
jo
mov
lds
lea
rol
dec
or
pop
inc
aaa
insl
mov
es
ret
dec
xlat
add
shrb
pop
cmp
cmp
insl
inc
lahf
das
mov
shrl
inc
ja
rcrl
add
out
xchg
jg
and
cwtl
push
push
mov
pop
test
inc
popa
or
xor
jnp
push
xor
loop
sbb
jecxz
cmp
ret
inc
loopne
or
push
add
fprem
pop
data16
push
inc
pop
cmp
hlt
std
sbb
sbb
int
dec
dec
xor
popf
jae
xchg
dec
repz
or
push
adc
aaa
push
inc
loop
xor
jnp
sti
lret
hlt
jo
push
mov
xor
jno
test
jecxz
fsubs
ds
inc
fwait
hlt
xor
push
pop
sub
push
xor
cmp
dec
pop
inc
adc
pop
insl
xchg
sbb
dec
push
gs
popf
aad
mov
scas
mov
loopne
frstor
dec
int
sub
xchg
inc
mov
inc
test
pop
push
and
ret
sub
in
xor
and
ss
or
test
add
lahf
sbb
jnp
clc
mov
cmpsl
testb
add
push
dec
mov
or
test
jne
je
xor
cld
ficoms
push
jmp
push
inc
push
or
sbb
push
das
cmpl
mov
mov
gs
mov
xor
inc
add
sti
idivl
mov
xor
dec
jl
inc
test
dec
dec
imul
out
jnp
nop
outsl
dec
jns
dec
jbe
jle
ja
loopne
ja
and
xor
add
js
pop
adc
sbb
jo
movl
pop
dec
xor
ret
pop
sub
cmp
add
push
movb
mov
jp
pop
mov
sub
dec
mov
aaa
cwtl
mov
and
test
xchg
cwtl
dec
mov
outsl
test
adc
cmp
push
mov
jmp
jl
dec
test
das
cmc
sub
or
lea
inc
sub
mov
outsl
leave
pushf
push
sub
sub
xchg
jbe
jmp
sahf
pop
inc
sbb
and
inc
inc
dec
jp
xor
push
inc
lret
push
add
inc
gs
lahf
sar
and
sub
add
mov
add
fs
add
leave
jbe
push
inc
pushl
dec
jbe
push
dec
popa
and
xor
pop
add
arpl
pop
xchg
add
hlt
jb
add
cmp
sarb
mov
cmp
aas
push
add
in
add
push
sbb
imul
lcall
subl
jnp
and
xadd
inc
into
or
and
sub
popf
jecxz
add
arpl
push
jp
inc
std
das
push
mov
sti
mov
std
sub
push
adc
push
pop
movsb
and
cli
ret
movsb
arpl
fxch
add
adc
inc
mov
jmp
dec
jne
add
sbb
pusha
orb
add
mov
add
mov
adc
mov
movsl
or
add
jl
es
cmp
cmp
popa
mov
fisttpl
cmp
inc
je
dec
js
push
mov
mov
dec
xor
mov
scas
rcl
jae
inc
add
call
cmpsb
enter
ds
sbb
add
or
jns
orl
inc
pop
jl
lods
orl
push
cwtl
ret
push
icebp
testb
add
xor
movsl
mov
ss
xor
pushl
ror
jnp
dec
mov
mov
test
hlt
pop
iret
add
jae
repz
mov
lock
pop
jecxz
jb
pop
clc
data16
imulb
add
xor
adc
sub
mov
lock
push
pop
or
jle
lret
arpl
xchg
out
test
add
in
cmc
jle
push
popw
mov
mov
pop
jnp
les
mov
and
inc
addr16
push
push
adc
fbld
mov
cs
add
mov
imul
lar
testb
push
cmp
cs
push
pushf
cmp
adc
push
xchg
test
sub
testb
paddw
fldcw
lahf
pop
imul
xchg
mov
jno
add
fistl
push
sahf
xor
aaa
repnz
pop
or
pushf
test
inc
pushl
cwtl
icebp
and
frstor
and
pop
js
cmp
add
push
add
movb
cmp
rol
cmc
iret
inc
mov
test
outsl
enter
nop
xchg
movsb
testb
dec
push
lock
xchg
mov
jmp
mov
sub
sbb
add
ret
movsb
lods
jns
test
mov
cld
pop
or
inc
lea
mov
stos
or
int
and
jg
incl
push
aam
add
inc
nop
adcl
das
inc
arpl
push
push
xor
inc
mov
dec
js
test
add
lcall
dec
push
movsb
add
push
outsb
insb
mov
lods
jbe
pushl
fstpt
add
je
dec
loopne
stos
test
lods
lds
pop
pop
je
outsl
mov
aad
sub
adc
push
jae
repnz
adc
sub
aad
dec
inc
jecxz
in
in
in
lea
cld
stc
scas
sbb
adc
fmulp
repz
push
pushf
add
lret
add
jle
es
adc
dec
std
lcall
roll
fcomip
bound
adc
push
shrb
ret
ds
ds
aad
mov
adc
shrb
adc
lret
js
mov
iret
cld
iret
insb
fnsave
cmp
jle
in
add
or
xor
mov
loopne
push
pop
jmp
iret
inc
sarl
gs
sub
fisubrs
lea
clc
lret
outsb
mov
movsl
pop
adc
xor
jg
ljmp
xchg
loop
mov
sbb
popa
cli
xlat
or
sbb
sbb
pop
fcmovu
jle
je
inc
icebp
and
int
add
adc
jmp
out
xbegin
stos
add
sbbb
dec
call
push
pop
fmuls
adc
pushl
loopne
test
orb
iret
pop
push
das
jge
add
or
cld
sbb
lods
imul
push
add
add
std
and
mov
mov
cltd
das
clc
adc
mov
jge
pop
lret
fs
and
inc
jp
jae
push
add
mov
lods
je
cmp
fdivrp
inc
sti
and
mov
and
insb
inc
fistpll
push
test
sbb
outsl
mov
les
mov
jmp
enter
ret
rol
int3
jecxz
je
push
and
sbb
adc
mov
push
jecxz
xor
push
sub
mov
jae
popf
add
xor
out
fdivp
xchg
inc
std
je
repnz
inc
ja
xchg
mov
pop
add
or
pop
sub
sub
popa
jge
mov
ja
mov
les
xchg
cs
repnz
xlat
push
aaa
push
sbb
addb
mov
cmpsl
daa
inc
dec
daa
or
xchg
xor
dec
outsl
or
lret
je
add
cld
jo
mov
bound
mov
mov
adc
mov
loope,pn
lock
testb
test
push
pop
xchg
cmp
call
clc
xor
cs
daa
nop/reserved
std
push
jns
mov
add
mov
jae
inc
jl
mov
push
pop
push
or
fildll
in
xor
lahf
sbb
sub
fwait
pop
push
fstpt
and
or
push
xchg
clc
and
cld
add
out
out
sub
ljmp
and
push
mov
std
outsl
ja
mov
mov
xor
and
push
inc
add
jnp
in
and
decb
rclb
pop
cli
lahf
imul
mov
lods
stc
xchg
xchg
shlb
loope
push
mov
rcr
call
pop
jb
xor
sbb
lahf
roll
sti
ret
xor
jne
push
ds
out
filds
cmp
mov
adc
add
add
inc
pop
dec
movsb
fldt
lahf
sbb
mov
mov
add
sbbb
lcall
int
mov
mov
inc
jae
mov
dec
fldt
pop
inc
cmp
xor
or
mov
pop
pop
icebp
xchg
daa
mov
push
cltd
push
fisubrs
test
xor
leave
fildl
pop
fists
stc
jecxz
jecxz
shrb
pop
push
mov
push
cs
inc
and
cmc
in
fnsave
pop
push
or
mov
mov
test
jo
and
push
push
add
jns
fistpll
sti
add
xchg
icebp
pushf
sbb
jo
lea
push
or
mov
lock
call
ljmp
cmp
scas
andl
lea
jmp
add
xchg
xor
cmp
cmp
test
cmpsb
lcall
mov
aam
mov
cmpsb
shlb
test
jge
jmp
daa
mov
cmp
std
scas
jo
xchg
cltd
stos
lgs
dec
xor
jae
fidivrs
fwait
pop
lea
clc
hlt
lock
jg
inc
inc
test
or
add
rcl
enter
jecxz
or
jg
pop
out
cmp
mov
add
inc
push
inc
daa
pop
fdivr
mov
loop
xor
xor
roll
xchg
or
je
inc
pop
xchg
lret
lock
pop
jmp
pop
pop
pop
cmpl
ds
and
inc
in
in
cwtl
pop
add
nop
lcall
decl
jmp
loopne
jns
ljmp
mov
mov
sub
mov
pop
es
xor
or
enter
or
add
fcmovnbe
adc
cmp
int
sti
add
pushf
xchg
sub
and
fmul
leave
lods
int3
scas
mov
dec
jg
inc
or
xor
sbb
xchg
lds
pop
jle
push
pop
pop
andb
push
jmp
std
sub
adc
popa
sti
icebp
enter
cmp
sbb
xlat
adc
lock
mov
repnz
test
dec
pop
pop
xor
pop
xchg
xchg
pop
inc
mov
pop
stos
mov
push
and
outsl
in
jns
push
adc
dec
outsb
int3
and
mov
sub
inc
leave
mov
subb
or
dec
add
lcall
jge
aam
repnz
dec
outsl
vmovaps
dec
inc
push
outsb
sbb
mov
pop
mov
mov
imul
add
xchg
imul
test
xchg
inc
and
adc
mov
adc
nop
mov
inc
pushf
mov
ds
mov
or
flds
inc
aaa
mov
decb
jg
repz
push
inc
loopne
out
jb
jecxz
decl
adc
pushf
mov
cmpsl
loopne
inc
shll
lahf
mov
mov
dec
ljmp
repnz
mov
sub
neg
xchg
jmp
aad
pop
add
mov
imul
popf
cli
daa
xor
outsl
pop
fistpll
add
jno
push
daa
shrb
pop
orl
das
test
ljmp
xor
or
and
fisttpl
idivl
push
xchg
mov
cmp
mov
ret
xchg
push
pushl
movsb
stc
out
clc
insl
sti
or
ret
push
xor
push
bound
sti
orb
test
xor
adc
icebp
enter
je
add
mov
xchg
insb
cmpb
cmc
mov
clc
xchg
xor
arpl
dec
and
jo
cmc
movsb
mov
and
cmp
inc
push
jb
mov
in
or
orb
cld
in
repnz
lds
jge
js
push
xchg
stos
mov
xchg
loopne
ficoms
test
or
inc
inc
pop
cwtl
inc
lock
test
xchg
sub
xlat
fmuls
jecxz
push
sti
ret
pusha
mov
rorb
nop
adc
lret
xorl
and
or
rol
jns
jne
ljmp
jp
inc
sti
lods
pop
mov
dec
xchg
cmp
sub
lcall
inc
dec
add
mov
shll
loope
fbld
sub
es
call
pop
loopne
leave
mov
adc
stos
shll
fmul
mov
mov
dec
orl
ljmp
sbb
cs
pop
sbb
adc
cmc
push
push
mov
or
shl
aaa
sbb
addr16
xchg
ret
std
dec
xchg
es
enter
in
xor
adc
std
pop
sbb
and
push
mov
sbb
mov
sub
data16
stos
pusha
pop
outsb
outsl
xchg
aam
imul
ret
mov
sub
seto
call
xor
jo
add
pushl
pop
sbb
cltd
dec
and
fcmovnbe
inc
push
and
ret
inc
outsl
inc
mov
subb
adc
mov
cmp
xchg
ljmp
adc
push
pop
cmp
add
add
mov
daa
inc
mov
into
xor
shrb
insl
call
scas
inc
jp
out
fbld
adc
inc
adc
outsl
out
test
inc
dec
faddl
ret
sbb
bound
dec
pushf
mov
in
add
or
mov
pop
pusha
fldt
decl
sub
ljmp
test
ds
pop
inc
sub
in
inc
push
mov
mov
shll
sub
sbb
sahf
cli
das
jge
cld
mov
hlt
jle
mov
fldt
imull
jae
outsl
sbb
scas
sahf
sti
pushf
mov
movsb
mov
or
sbb
sarl
mov
mov
mov
test
or
repnz
fstps
sahf
sbb
inc
aaa
rcl
clc
mov
or
fisubrs
movsb
nop
in
pushf
rcll
jmp
mov
jae
insb
fbstp
test
cvtdq2ps
call
insb
or
push
inc
add
jo
leave
insl
scas
decb
push
mov
insl
xchg
sub
sbbb
repnz
mov
ficomps
xchg
mov
ret
pop
push
jne
pop
jnp
decl
push
dec
repnz
shll
adc
lods
adc
addl
and
ja
je
mov
dec
push
int
cmp
movl
pop
repz
jle
daa
mov
cvtdq2ps
dec
push
imul
in
cwtl
pop
cmpl
es
fsubrp
enter
fisttps
scas
pop
add
popa
repz
jb
add
lea
insl
xor
jnp
imul
adc
xchg
ret
not
dec
mov
mov
mov
negl
call
mov
lods
push
inc
and
adc
js
call
mov
dec
xor
dec
and
fcomps
lahf
sub
inc
es
xchg
nop
cld
movsl
dec
cmpsb
in
jge
pop
int
add
std
pop
push
dec
adc
dec
jecxz
mov
jg
xchg
ror
mov
punpckhdq
call
insl
xchg
inc
fistpll
adc
outsl
loope
subl
push
fdiv
inc
movsl
dec
test
jb
xchg
pop
jg
xor
lods
pop
test
mov
aaa
out
and
bnd
movsl
stos
lahf
inc
cli
xchg
ficompl
cli
sub
mov
mov
movsb
sbbl
repnz
sbb
aad
imul
iret
into
sbb
cmc
ljmp
arpl
aaa
mov
push
add
ja
cmp
push
xor
mov
out
arpl
sbb
idivb
jne
and
dec
enter
adc
jecxz
movsl
movsl
mov
inc
jmp
mov
sti
adc
and
cmp
les
jnp
jae
lahf
js
xchg
leave
and
ficomps
push
in
jp
ss
xchg
ficoms
inc
fcoms
xchg
mov
insl
fsubs
jno
sub
mov
lods
fwait
push
push
insl
test
cld
or
pop
lret
sub
xchg
mov
xor
mov
pop
push
lods
lds
dec
jg
clc
repnz
mov
or
pop
fsubs
cmc
in
je
mov
inc
outsl
fistpll
loopne
and
fstpl
ret
dec
cld
notb
mov
adc
insb
jo
jne
imul
pop
pusha
jmp
jg
sub
fcompl
pop
push
dec
cwtl
push
cmpsl
pop
cmc
push
push
sbb
sbb
aaa
xchg
inc
cmpsl
rcll
and
or
outsb
pushl
or
pop
pop
sub
testl
mov
mov
xor
and
jp,pt
idivb
outsl
std
and
stos
pop
add
mov
jo
cmp
mov
in
xchg
mov
ss
xchg
movb
mov
or
fmuls
lock
inc
enter
arpl
std
push
negl
pop
dec
xchg
lods
insb
mov
sbb
es
mov
ret
xchg
imulb
cmp
lret
xchg
cltd
xchg
cmp
push
ss
xchg
test
inc
aam
sahf
jae
push
lahf
xor
mov
sbb
and
cmp
push
pushf
push
mov
mov
movsl
adc
ret
mov
add
mov
push
or
inc
add
push
jmp
mov
js
sarb
push
xor
fucomip
shl
hlt
inc
xlat
dec
or
popa
sub
ljmp
lret
stos
sub
in
testb
aaa
add
mov
mov
mov
adc
icebp
pop
cmp
das
jecxz
adc
jns
inc
sbb
bound
jb
mov
aad
fimuls
insb
icebp
lods
repnz
cltd
movsb
mov
das
insb
lods
xchg
and
xchg
jp
aaa
outsb
scas
pushl
ret
and
mov
cmpsl
addl
pop
call
out
add
add
aad
adc
inc
mov
cwtl
cs
push
push
add
jno
cmp
pop
repnz
dec
add
xchg
jle
test
ljmp
pop
or
sub
not
lock
push
jmp
mov
add
das
std
add
lods
dec
xchg
in
inc
sub
xor
or
ljmp
stos
jae
inc
jecxz
mov
pop
push
pop
jmp
nop
je
sub
scas
shlb
adc
test
sbb
mov
sub
sti
mov
pop
mov
ds
das
lock
clc
test
push
aas
sbb
out
inc
cld
cmc
fsubrl
addb
sub
mov
outsl
aaa
mov
movsl
push
nop
mov
dec
lock
sbb
mov
ds
sbb
or
stc
sahf
je
fwait
or
ret
sub
xor
mov
cmp
sub
sbb
daa
pop
shl
mov
jl
ror
test
jno
jne
mov
addr16
outsb
jmp
repz
jp
pop
movsb
inc
sub
sbbl
xchg
or
idivb
andb
in
jl
clc
adc
bound
mov
jge
ret
cs
pop
lcall
adc
mov
das
mov
scas
orl
call
rcrl
lea
mov
rclb
test
cld
dec
sub
jle,pn
sub
or
inc
inc
outsb
frstor
sub
mov
xchg
sarb
xchg
sub
or
lcall
loope
inc
outsl
icebp
mov
fnstenv
pop
out
daa
push
enter
push
fst
idivb
lret
movsb
lret
insl
push
mov
mov
mov
in
jbe
das
push
inc
enter
dec
jge
mov
push
int3
mov
in
lcall
test
test
ret
adc
mov
xchg
pop
pop
hlt
subb
inc
lret
jne
adc
fldt
dec
scas
enter
fiadds
sbb
add
mov
inc
adcb
movsl
jnp
daa
push
icebp
int3
inc
mov
push
movsb
inc
mov
mulb
jo
mov
fldenv
sbb
adc
push
pop
test
cltd
mov
popf
add
jl
cmc
pop
fwait
mov
push
xchg
mov
mov
cmpxchg
fs
rclb
mov
data16
je
cmpsb
xor
dec
push
ja
dec
and
dec
jge
sub
inc
mov
pop
fstp
or
lods
adc
xor
jg
mov
mov
add
push
mov
mul
xor
add
pop
cmc
push
shrl
sbb
add
add
dec
cli
mov
mov
insl
cmpsl
jmp
push
pop
xchg
mov
sbb
and
pop
dec
jo
and
dec
jl
xor
xor
jae
jb
dec
mov
das
mov
inc
subb
sub
out
outsl
pop
jb
sar
fs
sub
loop
xchg
arpl
jmp
pop
testl
loop
lock
nop
mov
aas
xor
dec
stc
sbb
imul
push
dec
mov
mov
dec
and
scas
cs
sbb
int
mov
push
jl
mov
stos
rcrl
mov
dec
pop
cmpb
push
lock
ret
mov
cmpsb
adc
dec
xchg
and
xor
sub
movsl
dec
mov
movsl
add
inc
pop
jl
or
xor
jns
ret
mov
xorl
aas
rcrl
inc
out
mov
mov
jmp
adc
inc
mov
and
sbb
idivl
push
xor
cmpsb
xor
jecxz
and
sti
hlt
testl
push
repnz
inc
orb
adc
fwait
adcb
cmp
bound
nopl
xchg
add
popf
fst
or
pop
push
ret
dec
pop
xchg
cmp
xlat
out
data16
repnz
mov
fwait
pop
mov
and
mov
push
mov
jnp
sub
insl
stos
ds
mov
movsl
outsl
movsl
cmp
dec
jmp
mov
sbb
cmpl
cmp
dec
cmp
pop
popf
mov
jns
mov
dec
add
lods
or
fiadds
pop
dec
outsl
jg
push
das
cld
dec
js
inc
sub
inc
jle
aaa
pop
mov
add
fnstenv
das
lock
mov
inc
jg
jo
pop
adc
lcall
test
in
add
adc
fucomip
mov
test
arpl
rorb
cmp
rcrl
stc
and
mov
je
inc
dec
ret
and
js
dec
adc
shlb
divb
ljmp
stos
jmp
sbbb
rorl
push
das
mov
ficomps
pop
mov
or
and
shl
fbld
fwait
shl
push
ficomps
xor
add
movsl
les
call
loope
cmp
push
xor
push
or
hlt
jecxz
cmp
es
xchg
inc
dec
ret
jecxz
jnp
and
or
mov
std
lret
fucomp
stc
mov
mov
das
add
nop
mov
mov
call
imul
subb
mov
mov
xchg
aam
in
lea
xchg
jnp
inc
add
mov
fcmovbe
mov
stc
les
fidivl
add
cli
subb
add
mov
shlw
add
mov
or
aam
negb
inc
inc
xlat
test
xor
jo
mov
dec
jge
inc
ds
ljmp
mov
loope
arpl
and
cmpsl
mov
rol
inc
jmp
cli
outsl
rolb
mov
pop
inc
hlt
out
inc
hlt
outsb
push
mov
jl
sub
scas
fisttps
sarl
leave
cs
pop
scas
sbb
jnp
inc
sub
add
popf
mov
or
rcrl
outsl
ffree
mov
ret
sarl
cmp
sub
inc
enter
cmpsb
push
pop
jbe
or
xchg
adc
aas
adc
ljmp
xchg
lret
sti
push
fistl
mov
adc
fistl
gs
sub
popa
sbbl
or
cmp
mov
or
or
add
mov
call
cli
or
mov
add
mov
stos
dec
or
dec
lcall
into
dec
mov
adc
jge
mov
jle
jecxz
popf
pop
ss
ss
push
push
adcl
out
shrb
jne
movb
out
lahf
push
add
testb
xchg
or
out
daa
sbb
xor
or
fists
ja
sub
insb
in
adc
mov
mov
lods
push
cmc
mov
rorb
jb
ja
add
aas
inc
arpl
adc
mov
add
xchg
xor
pop
adc
pop
pop
fisttps
incb
cwtl
pusha
movsl
adc
mov
fnsave
nop
por
pop
lahf
push
insb
lods
push
jae
std
or
inc
fs
push
rcll
filds
loopne,pn
add
fisubl
stc
mov
mov
push
ret
xchg
addr16
xor
aam
push
inc
adc
push
fildll
outsl
mov
xor
and
xor
add
inc
adc
and
pop
add
xor
push
jns
imul
or
sub
aad
xchg
aas
int
sti
imul
push
jl
in
outsl
sbb
pop
andl
or
mov
add
incb
dec
fcmovne
lea
mov
xchg
adc
xchg
xchg
add
mov
out
mov
iret
push
in
lcall
dec
adc
or
add
outsl
inc
rsm
cmp
jo
mov
mov
out
rorb
lret
popa
fildll
arpl
shll
push
mov
call
inc
fistpll
cmp
subl
jno
mov
dec
cmp
mov
dec
push
lock
pop
xchg
add
fistpll
jle
inc
sub
push
mov
add
insb
adc
mov
adc
mov
mov
pop
mov
mov
and
int
mov
and
jg
adc
adcl
fdivrs
push
dec
clts
mov
sti
push
mov
scas
add
pop
jmp
push
in
mov
mov
orb
xchg
sub
mov
add
sub
inc
add
jmp
jo
popa
push
jg
movsl
jg
mov
iret
test
stos
inc
push
mov
inc
stc
sub
rcrb
or
jno
incl
divb
or
inc
jb
mov
orl
dec
mov
push
mov
rcll
fwait
stos
cmc
stc
cmpsb
in
adc
cmp
jecxz
rcr
mov
lock
xchg
bound
das
cmp
ret
imull
out
loope
push
jp
pop
stos
add
ror
sub
cmp
mov
hlt
mov
pop
pop
shll
mov
inc
add
adc
sbb
imull
pop
loope
mov
mov
mov
or
pop
rcrl
and
es
inc
mov
stos
mov
shrb
and
mov
sbb
cli
pop
jno
fstpt
and
sbb
fistpll
sub
imul
ret
insb
outsb
and
pop
push
or
daa
inc
and
outsl
popa
leave
nop
jns
mov
sbb
scas
repz
cs
sti
push
shlb
pop
daa
jno
add
push
fisubl
inc
cmpsl
scas
inc
inc
fldt
and
and
lea
push
push
fistps
aas
dec
sarl
cmpsl
pop
ret
leave
sub
in
lds
repnz
outsb
outsb
sbb
and
mov
lret
fisttpl
ficomps
lods
and
mov
sbb
dec
hlt
inc
gs
sbb
in
jbe
fldcw
jecxz
add
loopne
outsw
pop
call
fstl
adc
loope
mov
dec
and
fistpll
push
cmp
lahf
ljmp
xchg
and
dec
xchg
mov
cld
lods
add
mov
iret
xor
test
icebp
fildl
idiv
imul
mov
dec
fidivrl
push
enter
mov
lock
and
loop
bound
fidivrs
idivl
cmp
rcrb
add
pusha
mov
mov
jb,pt
adc
idivl
adc
shll
pop
adc
and
int
dec
adc
and
xchg
insb
in
flds
and
adcb
ljmp
jge
sbb
sub
pop
andb
mov
rorb
cwtl
adc
pop
mov
jg
dec
mov
jb
call
pop
test
incb
fsubr
mov
jo
pop
out
iret
mov
dec
iret
test
rol
pushf
repnz
push
jp
loope
push
jle
xor
repz
int3
mov
out
outsl
pop
scas
in
xor
inc
daa
xlat
out
rolb
xor
stc
aas
cmc
in
xchg
cmp
sbb
adc
nop
rolb
imul
mov
jg
pop
movsb
add
call
pop
test
in
sub
loopne
pop
repz
inc
fxch
mov
dec
test
push
xchg
add
insl
jp
iret
ss
jo
fildll
add
decb
dec
or
pop
push
loopne
sarb
sbb
insb
lods
mov
mov
mov
lret
test
adc
jns
cli
loop
xlat
mov
inc
cltd
adc
test
adc
xchg
xchg
out
insb
xchg
out
mov
test
and
mov
lods
sub
lea
push
inc
popa
jecxz
pop
add
lods
scas
movsl
testb
ljmp
pop
mov
mov
rol
aaa
mov
test
loope
push
pop
daa
xor
jbe
add
xor
in
cmp
and
fistl
and
sbb
jmp
jg
std
or
xor
and
xchg
mov
add
mov
mov
hlt
mov
sbb
aad
iret
pop
movsl
lds
sahf
mov
aam
pusha
mov
rorl
xchg
mov
jecxz
add
shrl
cwtl
sbb
addb
add
jnp
pop
mov
cmpsl
ljmp
stc
fimuls
sti
lods
test
and
pop
int3
or
ret
andb
out
loope
cld
inc
imul
inc
lock
push
insl
push
ljmp
ja
sub
imul
inc
lods
sti
push
jb
mov
pop
pusha
imul
out
pop
jge
sub
cmp
inc
inc
pop
add
lret
and
in
adc
xor
and
mov
fisttpl
cwtl
xchg
cmp
push
sti
or
int
inc
pop
call
cmpsb
gs
pushf
fildl
outsb
xor
gs
lods
cmp
ret
push
push
push
pop
dec
inc
mov
jbe
fmuls
adc
lcall
decb
sbb
or
ja
xchg
pop
mov
mov
jp
mov
insl
imul
push
sub
shrl
enter
insl
inc
and
outsl
insl
push
push
outsl
sahf
and
jae
pop
xchg
mov
xor
xchg
movsl
outsl
pushf
mov
cld
sbb
fiadds
jno
movsb
filds
sbb
jae
xor
cmpsl
outsb
les
inc
mov
or
cmp
push
cmp
sbb
push
bound
or
es
ljmp
pushf
mov
xor
add
movl
mov
xor
cld
aaa
mov
cmp
lret
push
sahf
inc
test
jge
es
lret
cmp
lret
lds
jp
retw
sub
pushl
call
scas
adc
lret
bound
adc
or
std
and
cwtl
jp
test
scas
ss
jne
ljmp
mov
popl
mov
out
int3
sbb
aaa
and
popa
testb
pop
cli
decl
stos
nop
cmp
add
out
fnstenv
and
adcb
test
add
xchg
pop
sbb
adc
fidivrs
sbb
inc
into
xor
mov
mov
and
cmpb
stos
cmp
call
mov
repnz
sbb
shlb
movd
pop
xchg
push
push
cmp
movsb
dec
aaa
jl
mov
sbb
mov
jo
rcl
add
sti
cmp
cmp
push
aam
mov
sahf
call
mov
outsl
enter
aas
in
sar
arpl
sub
push
mov
mov
sub
xchg
popf
inc
testb
sarl
fwait
mov
mov
push
sub
test
cld
int
sbb
aaa
and
push
test
mov
loopne
test
sub
cltd
sbb
dec
jg
aam
cmpsb
add
ret
push
xchg
fbld
mov
arpl
lret
shl
xchg
repnz
add
sarl
and
lea
add
je
movsl
pop
das
bound
mov
lods
rolb
mov
mov
mov
out
shr
sub
insb
mov
mov
inc
and
jmp
icebp
push
setg
icebp
xor
jg
loopne
ret
xlat
scas
xchg
ds
nop
sbb
mov
mov
jecxz
daa
inc
pop
push
pop
dec
hlt
pusha
leave
cld
jmp
call
jnp
cmpb
and
sbb
cld
push
adc
jp
js
adc
test
pop
inc
and
dec
std
movsl
call
outsl
xchg
mov
add
test
in
loope
inc
adc
pop
mov
mov
loopne
xor
int3
js
jg
inc
pop
pop
cmp
movsb
push
setno
ljmp
rolb
mov
cld
sub
cli
mov
fsubl
cmc
xchg
mov
int3
imul
cmp
sahf
ficomps
pop
push
lods
rcll
add
jmp
push
sbb
jl
sbb
imull
subl
lcall
cmp
jnp
int3
dec
cmp
mov
lock
xor
jmp
ret
or
dec
xlat
mov
loop
jg
in
call
or
scas
or
out
icebp
mov
movl
stc
adc
sbb
add
sbb
mov
mov
shrl
sub
in
test
mov
stc
flds
or
add
sbb
push
addr16
cmpb
mov
or
cli
dec
xor
mov
sbb
ss
stos
jge
fbstp
in
jle
mov
arpl
jmp
adc
sbb
pushf
ficompl
loop
sbb
dec
add
lret
xchg
call
popa
in
mov
jge
mov
cmp
add
adc
loopne
inc
sub
push
mov
pusha
mov
push
sbb
xchg
or
jge
int3
fisttpl
fldt
out
out
sub
das
jl
jns
adc
add
cwtl
adc
adc
aam
lds
arpl
adc
sbb
dec
insl
sbbb
xchg
add
fwait
sub
inc
in
mov
inc
loop
cmp
test
push
mov
in
movsl
push
ret
lahf
les
xchg
aam
test
or
xor
or
pop
icebp
xor
pop
mov
shrl
test
jne
jg
jp
push
fstl
pop
xchg
frstor
xchg
int
lret
pop
jl
lea
sbb
and
je
sarb
nop
stos
sub
cmp
mov
imul
or
xchg
jmp
sbb
sti
sbb
add
in
lds
sbb
mov
pop
mov
cmp
adc
repnz
cmp
fcomip
mov
mov
xchg
fwait
add
ret
jl
sbb
xchg
es
in
icebp
pop
ret
and
lods
cmp
mov
push
mov
imul
hlt
mov
pusha
xorl
insb
loope
cmp
mov
insb
inc
inc
mov
lds
or
dec
dec
out
inc
push
mov
add
adc
outsl
or
push
pusha
mov
lods
adc
movsb
js
fldt
dec
test
mov
and
call
mov
or
bound
inc
js
lret
mov
lods
xor
testb
imul
sub
lcall
sub
daa
mov
add
mov
cli
mov
sti
fdivs
fsub
add
movl
sbb
jp
repz
in
dec
fbld
sub
aam
ja
icebp
inc
fmull
mov
jo
sbb
push
fildll
sti
outsl
bound
sbb
mov
mov
xchg
addb
push
popf
icebp
lds
mov
les
std
mov
ret
daa
cmpsb
aas
leave
test
adc
incl
jo
dec
cli
popf
fstl
mov
jle
pop
andb
je
stos
cmp
or
pop
xor
fiaddl
or
push
add
xor
imul
daa
xor
sub
clc
hlt
and
or
add
out
ljmp
jl
add
jg
sti
jae
xchg
out
or
lahf
xor
cmpsl
lock
sbb
imul
incb
push
shrl
ret
push
and
pop
js
or
inc
cmp
add
xor
push
cmpsl
fcmovne
pop
call
dec
inc
sbbl
std
push
leave
bound
or
dec
inc
movsl
xor
insb
aaa
jbe
outsl
push
repnz
imull
aaa
pop
push
adc
or
lds
and
mov
sub
xchg
dec
and
xor
out
mov
cld
inc
mov
jbe
mov
or
mov
fsubl
jge
mov
inc
stc
or
mov
mov
adc
and
and
inc
cltd
scas
mov
or
pop
test
leave
roll
fsubrl
cmp
stc
add
mov
mov
pop
fdivrs
in
and
icebp
movsl
sbb
lods
mov
ret
iret
pop
mov
lret
pop
push
cmp
lods
testl
out
test
test
mov
or
les
jbe
xlat
dec
lret
cli
shll
lock
or
xor
das
mov
mov
or
mov
adc
test
xor
lods
loopne
jns
fildl
cmpsb
mov
push
sub
fbstp
lea
jmp
aaa
add
sar
add
out
jns
sub
imul
call
rol
lcall
mov
jae
add
adc
fistl
or
sbb
sub
push
push
bound
mov
aad
fs
sub
loope
mull
jb
jecxz
mov
mov
rcrb
inc
cli
insb
xchg
cltd
mov
cmova
push
imul
dec
mov
icebp
lods
mov
lods
loope
mov
in
push
mov
and
inc
cwtl
mov
add
js
sub
mov
shrb
into
dec
mov
and
and
inc
aam
jo
pop
mov
adcb
in
and
rclb
xor
rolb
push
dec
movsl
xchg
adc
add
dec
jg
mov
adc
and
dec
mov
imul
fdivrp
sbb
test
push
mov
fstl
xchg
pop
cmpsl
adc
cmpsb
pop
add
xchg
pop
clc
mov
jae
cmc
rolb
fucomip
push
in
add
loopne
jns
push
push
popa
ljmp
jmp
test
cmp
mov
mul
sahf
dec
pushf
adcb
dec
aad
jo
dec
dec
icebp
push
jl
pop
arpl
rol
mov
dec
sbbl
cmpsl
fsubrl
xchg
xchg
jo
or
cmpsb
push
cld
adc
ja
mov
por
mov
push
sub
add
or
les
orl
fs
in
or
cli
push
sahf
xor
or
mov
xlat
mov
je
inc
jbe
mov
lds
loop
pop
sbb
sahf
add
lcall
sets
cmpsl
cmp
mov
inc
jecxz
inc
pop
and
xchg
or
js
jae
mov
sub
ss
lods
cmc
sarb
sbb
gs
push
mov
mov
jg
test
push
xor
xchg
test
adc
bound
pusha
sub
in
xchg
lods
cwtl
sar
sub
fbstp
add
std
les
outsl
jne
xchg
rorb
int3
push
xchg
outsb
cmp
inc
cmpsb
inc
ret
ficompl
push
incb
sbb
fisubrl
jb
scas
push
dec
jnp
sbb
sbb
pop
stos
std
pop
std
mull
adc
jnp
pop
push
sbb
mov
xchg
test
clc
outsl
inc
xchg
mov
push
mov
decb
cltd
or
insb
jnp
sbb
jmp
inc
mov
mov
xchg
decl
aad
inc
adc
push
dec
iret
xlat
inc
sub
add
jle
pop
push
imul
inc
fs
pop
push
mov
jnp
cmp
add
add
jb
enter
push
sub
pushl
jno
xchg
fsubrl
stos
hlt
mov
mov
lahf
jnp
test
adc
add
mov
cs
xchg
mov
pop
cld
jmp
sbb
and
mov
pop
mov
dec
je
pusha
sarl
pop
sbb
repnz
lcall
xor
adc
std
popa
inc
jl
ljmp
mov
cmpsl
lods
push
fst
in
mov
mov
push
loopne
lock
sbb
cli
in
shlb
jns
mov
das
cld
mov
test
add
sbb
pop
mov
jno
cmp
les
iret
push
jge
adc
outsl
std
out
and
jge
mov
push
in
jg
xor
adc
mov
les
fisubl
push
adc
push
push
cmp
leave
mov
out
sbb
rcr
push
ret
clc
iret
add
repnz
pushf
mov
std
in
aaa
loopne
mov
iret
sub
adc
fisubrl
sbb
insb
icebp
sbb
sub
mov
lods
sub
xchg
cwtl
hlt
outsl
outsb
mov
shrl
aam
adc
xlat
sub
ret
or
pop
or
std
test
loopne
fwait
jne
mov
push
jp
jle
push
xchg
xor
mov
inc
sbb
movsl
push
push
push
jge
addl
cmpsl
cmpb
adc
add
stos
insl
in
xchg
les
lcall
orb
movsl
fildll
mov
sbb
xchg
dec
mov
inc
les
xchg
mov
fimull
ret
outsb
outsl
test
cwtl
lahf
add
jns
push
jnp
adc
ret
lea
outsl
ret
adc
decb
cli
add
adc
decl
adc
mov
fidivl
pop
clc
movsb
out
rcrb
push
push
xchg
in
dec
push
inc
fdivrs
cmp
pop
fstl
push
push
mov
add
out
adc
sarb
push
push
es
xor
xor
das
inc
pop
icebp
daa
adc
ljmp
fucom
push
arpl
push
mov
mov
sti
insl
dec
xchg
xchg
mov
fnstcw
cwtl
mulb
mov
inc
stc
cmp
pop
xchg
fmuls
pusha
imul
push
jbe
roll
lods
inc
call
daa
sbb
xor
inc
das
sub
dec
or
or
and
mov
mov
mov
pusha
add
inc
sub
mov
stc
sub
ljmp
lea
or
push
lods
adc
jnp
lods
pop
mov
or
cmpl
jne
adc
fiadds
std
mov
mov
iret
jle
sub
seta
mov
push
je
std
or
inc
ja
into
ljmp
sub
pop
inc
into
push
jae
pop
insb
aaa
mov
sub
cs
out
cmovno
add
push
dec
shlb
movb
sub
adc
je
out
ja
dec
push
or
test
shrl
lea
sbb
ds
std
lret
js
mov
rcll
push
loopne
or
pushf
loope
insb
sahf
mov
fidivl
outsl
push
jo
test
bnd
fidivs
pop
aad
mov
clc
pop
insb
bnd
mov
test
mov
lahf
lock
pop
cmpl
pushw
rorb
pop
push
add
push
sbb
xchg
shlb
dec
cmpsb
aad
scas
push
movsb
jbe
enter
or
repnz
dec
scas
cmpsb
dec
ljmp
movlhps
push
adc
sbb
movsb
add
lea
mov
daa
dec
scas
add
xor
adc
pop
cmpl
dec
sub
inc
dec
mov
mov
add
add
add
dec
pop
aad
fisttpl
and
cmp
addr16
mov
sub
sbb
inc
mov
shl
pop
add
filds
and
js
push
lea
aad
pop
and
cmp
dec
push
aaa
loop
sbb
out
adc
sub
jecxz
aaa
inc
in
lea
popa
addr16
and
mov
mov
cmp
int
into
imul
mov
es
push
and
fldl
sbb
aam
stc
nop
fwait
ljmp
push
fstpt
dec
lds
dec
inc
icebp
or
outsl
lods
ret
insl
jecxz
jo
stc
dec
adc
fstps
xor
and
loop
fisubs
sub
and
adc
out
add
cmp
jg
lods
mov
jge
mov
cmp
rcrb
sahf
movb
out
lods
cmpsl
pop
jbe
mov
mov
sub
test
lea
arpl
shrl
cs
mov
push
or
loop
cli
loop
inc
rolb
sbb
fsubl
fcompl
rclb
loop
rcr
mov
mov
jno
xor
sbb
loop
adcb
inc
mov
lock
jbe
repnz
push
sbb
mov
pop
lret
add
stos
outsb
and
sti
dec
push
cmc
dec
repnz
mov
sti
pop
fistps
and
and
pop
popa
jne
rclb
fistpll
cli
mov
sbbb
inc
or
inc
push
lret
out
jns
les
add
cltd
push
mov
mov
lret
xor
mov
or
inc
xchg
mov
repnz
cmpl
push
dec
stos
sub
add
icebp
or
xor
mov
lret
mov
jo
pop
pushf
aam
and
sti
pop
popa
jmp
jmp
cmp
jp
pop
adc
leave
adc
mov
lcall
hlt
outsl
mov
xchg
mov
adc
mov
repz
add
inc
mov
addl
repz
xchg
fstl
lcall
aaa
adc
sub
outsl
loopne
das
fsubl
jns
insb
rorl
or
aam
ds
xchg
push
cld
mov
cld
les
pop
loopne
jno
push
and
jmp
xlat
sbbb
shl
jnp
xor
dec
pop
fmul
lds
cmp
xchg
ret
std
push
lods
push
fdivp
dec
inc
clc
xchg
andb
jne
pushf
xchg
mov
clc
pop
cmp
pop
inc
je
adc
mov
jl
scas
lahf
fdivl
pop
arpl
loope
jo
icebp
xchg
xchg
je
pop
add
repnz
fsts
pop
cwtl
push
or
mov
fmul
dec
stc
repnz
pop
xor
testb
and
or
jg
cmp
rclb
mov
pop
push
sbb
loope
pop
mov
sbb
idivl
push
dec
lds
lret
cld
js
into
push
js
mov
and
cmp
pop
dec
es
aad
sbb
movsl
pushl
cli
mov
xchg
xor
push
test
lock
lods
nop
jbe
xor
push
pop
add
jae
pusha
dec
jl
inc
inc
punpcklwd
shll
sbb
test
mov
movsl
aaa
mov
aam
sub
push
inc
stos
cmpsb
pop
mov
inc
in
das
pop
aad
inc
xlat
fistps
adc
ljmp
sarb
sbb
mov
dec
mov
xlat
inc
dec
shll
and
cvttps2pi
outsb
nop
pop
jp
xchg
mov
les
push
mov
jp
jnp
or
cmp
mov
ljmp
iret
inc
scas
imul
pop
cmp
shr
icebp
mov
cmp
test
inc
test
add
add
pop
inc
add
xor
and
outsb
je
test
cmp
jno
mov
xor
pop
pop
mov
jle
jae
xchg
adc
and
cwtl
insb
incl
mov
sbb
setl
add
push
lods
daa
nop
inc
add
cmpsb
enter
mov
adc
bound
push
lock
add
jns
fidivrl
add
inc
enter
jp
lock
les
sub
sub
or
lcall
xlat
ljmp
shll
inc
mov
mov
lahf
aas
mov
leave
push
xchg
xchg
js
inc
pop
mov
lock
es
xchg
ljmp
rorl
rolb
xchg
add
adc
repnz
or
sti
movsb
add
ficoms
fnstsw
outsl
mov
iret
xchg
mov
pop
ss
int3
push
shll
loope
lods
js
pop
cltd
test
clc
or
aam
or
inc
dec
mov
lret
jne
fmul
daa
jg
std
dec
push
sub
adc
inc
in
daa
pop
nop
jge
test
hlt
push
jecxz
push
dec
std
xor
cld
mov
mov
or
daa
std
dec
les
aam
xlat
push
push
clc
and
pop
push
mov
arpl
mov
push
sti
aad
add
ss
sub
mov
sub
cmpsb
jle
jecxz
pop
adc
loopne
cmp
inc
xchg
dec
jmp
in
movsl
not
lahf
jae
or
cmpl
sti
xchg
decl
mov
out
jbe
inc
sbb
cmp
mov
sub
arpl
mov
push
add
xchg
add
dec
out
test
and
jno
aam
mov
shll
pop
pop
aad
dec
rorb
adc
fnsave
push
xor
lahf
sub
insb
shlb
jb
sub
out
jg
test
cmp
cmp
cld
jl
push
enter
cld
mov
mov
lahf
inc
enter
in
push
push
lret
andb
ss
stos
jecxz
icebp
cmp
jg
dec
fisttpll
and
outsl
js
add
repnz
stos
lcall
rcll
nop
scas
lock
and
std
test
btr
insl
inc
dec
xchg
jp
xlat
stc
fs
xor
sbb
add
jb
lods
mov
jbe
lods
ss
ss
insl
xor
test
jg
cmc
ret
addr16
xchg
mov
jg
mov
ret
sub
pop
pop
jb
clc
das
popf
pop
addb
es
ret
enter
sub
call
fstpt
sub
push
pop
stos
sbb
ljmp
mov
sbb
add
in
xor
in
or
mov
sub
pop
sub
push
das
jp
cld
push
jne
addr16
inc
push
popa
sub
jb
pop
ljmp
and
or
or
pop
sti
test
in
das
fsubrl
pusha
lods
sbb
xorb
pop
les
pop
adc
insb
fsub
shll
add
lret
inc
push
pop
mov
mov
cwtl
pusha
sub
cmp
divb
adc
xchg
xor
or
cs
mov
sbb
movzwl
cmp
dec
lcall
add
mov
jg
sbb
pop
jecxz
das
mov
sub
loop
adc
outsl
lds
cmp
sbb
jbe
scas
sbb
or
cwtl
popa
ljmp
call
jb
sbb
inc
es
mov
movsb
ret
rorl
jle
pop
lods
or
cmp
mov
pop
decb
jg
dec
or
rcrb
cmp
mov
sbb
sub
push
test
jmp
and
xchg
js
xchg
jo
pop
adc
rorb
pop
fwait
mov
es
ljmp
jge
nop
add
jecxz
lcall
add
pop
fidivs
test
add
add
cmp
pop
test
cmp
pop
sub
les
adc
add
cmp
mov
cmc
adc
subb
pop
xchg
lock
push
leave
add
cwtl
subl
rolb
dec
mov
mov
mov
and
sub
jnp
jmp
add
ret
aam
aaa
lock
and
or
je
loope
add
imul
sub
pop
pop
sbb
test
adc
cld
lods
jnp
aas
sub
or
mov
xor
jne
call
and
inc
pop
fs
pop
outsl
lds
imul
lret
jo
mov
push
adc
dec
gs
out
jg
pop
rol
jnp
in
shrl
cmc
insb
adc
jl
xor
xorl
sti
lock
mov
pop
dec
cmpb
push
mov
or
push
pusha
fsubl
outsl
aas
pop
cmpb
inc
pop
xchg
cltd
rcrb
fisubrs
dec
xchg
addr16
shlb
or
and
xor
fisttpl
jo
adc
push
mov
cmp
jbe
jl
xchg
cmp
push
push
add
mov
sarb
sar
mov
fwait
mov
stos
adcb
inc
mov
push
or
inc
add
mov
inc
test
pop
js
movsl
jbe
sbb
sbb
testl
dec
in
popa
ret
dec
jle
jg
les
jo
cmpsb
adc
pop
xlat
shrl
adc
dec
dec
pushf
fsts
daa
mov
pop
jp
cli
jae
jns
inc
iret
xchg
jp
or
incl
jmp
in
push
xor
push
xchg
fwait
add
mov
add
inc
orl
push
fbstp
lret
mov
mov
ss
imul
add
pop
dec
iret
ja
or
dec
mov
rclb
mov
xor
jecxz
xchg
add
cmpsl
das
out
cs
push
sbb
rcl
add
mov
mov
mov
fildl
sub
and
jge
arpl
sbb
push
mov
xchg
movsl
fists
inc
rclb
stos
push
sarb
test
add
or
je
cmp
outsl
les
mov
dec
fdivrs
call
pop
xor
mov
xchg
pusha
in
adc
push
cltd
pop
adc
aas
jmp
xchg
lret
test
xchg
ret
andb
fistl
das
pop
fbld
pop
sbb
mov
rcrb
mov
in
xchg
xor
push
mov
aam
fbstp
sti
push
rcll
dec
lods
ja
fmul
fmull
mov
lahf
jmp
ret
adcb
dec
push
cmpsl
cli
inc
add
pop
push
stc
leave
sarb
imul
or
sub
cmc
popa
ja
test
add
cld
je
jg
das
jne
and
sti
xor
lods
sbb
mov
mov
sbb
push
ja
fstps
data16
mov
movsb
mov
insb
adc
sub
test
pop
lock
jo
rclb
push
pop
jl
xlat
adcb
add
clc
dec
insl
pop
call
lds
push
std
mov
outsl
xlat
push
icebp
add
adc
les
popa
incb
sbbb
mov
call
mov
test
inc
test
inc
xchg
nop
inc
in
and
mov
call
out
cmp
daa
dec
push
dec
dec
mov
mov
outsl
pushl
loop
insb
stos
sbb
or
imul
dec
mov
movsb
inc
out
ret
mov
loop,pt
sbb
mov
sub
jl
dec
pushf
mov
call
les
out
mov
xchg
push
das
iret
adc
out
jne
and
sub
cs
clc
add
mulps
and
movl
inc
enter
mov
or
adc
ret
iret
test
lods
and
push
test
and
mov
cli
mov
dec
inc
out
loope
or
inc
repnz
lahf
inc
add
add
pop
xchg
fidivs
adc
sub
ja
adc
push
mov
xlat
cli
loope
jno
push
or
inc
push
js
ret
popa
pushf
leave
mov
push
or
jle
decb
xor
mov
cmp
dec
pop
mov
mov
mov
dec
sbb
ja
pop
lcall
daa
data16
mov
sarb
cmp
add
lock
das
movsb
mov
adc
and
jne
fs
mov
xlat
gs
lahf
push
pop
push
popf
sbb
xor
shl
imul
test
shll
es
lahf
test
jb
fldt
call
cwtl
outsl
aad
and
jg
das
dec
pop
xchg
es
dec
sub
pop
mov
push
test
pop
push
test
mov
mov
push
neg
aam
jnp
pusha
xchg
cmp
insb
xor
outsl
imul
popa
inc
mov
push
aam
outsl
jne
adc
push
outsb
pusha
test
add
sub
xchg
mov
push
aaa
insl
adc
jle
mov
mov
pushl
or
lea
cmc
or
dec
adc
mov
test
cld
dec
inc
or
dec
fs
adc
gs
add
and
imul
mov
imul
in
rcll
dec
jne
lcall
loopne
inc
cmp
negb
fmuls
ss
and
jecxz
jp
mov
jbe
fbld
and
mov
addl
and
jns
add
mov
sbb
pop
mov
mov
xchg
hlt
sub
xchg
fildl
adc
add
cmpsb
mov
negb
std
out
test
aaa
dec
adc
pusha
push
jg
fstp
pusha
cmpsl
mov
and
test
and
xorl
ljmp
mov
lock
inc
mov
push
sbb
in
xor
add
inc
repnz
rcrl
les
mov
clc
and
cld
inc
add
scas
fisubl
push
mov
dec
inc
leave
pop
jmp
adc
mov
mov
sub
call
test
jb
aam
into
or
dec
dec
addb
pop
dec
or
adc
sarb
cmp
loop
jno
push
push
das
pusha
imul
xchg
sub
adc
push
outsl
outsl
push
fisubs
mov
mov
andb
pop
inc
push
orb
adc
ss
lcall
pop
jnp
test
psrld
dec
ret
push
push
jb
ret
and
fistps
xchg
movsb
lds
lea
dec
bound
testb
test
adc
inc
pop
icebp
xchg
and
dec
fnsave
push
lock
mov
xchg
and
and
or
aas
jns
iret
adc
and
in
or
jmp
shr
inc
test
sub
call
cmp
loop
loop
aaa
xor
inc
adc
add
pop
or
adc
lret
push
repnz
and
enter
mov
jo
icebp
incl
inc
out
cmp
movsl
clc
add
dec
insb
fiaddl
fsubr
int3
cmpsb
pop
mov
icebp
das
sbb
inc
fldenv
std
mov
pop
iret
and
in
mov
test
dec
mov
push
sub
sub
adc
dec
enter
pop
fsubs
dec
pop
hlt
adc
jo
inc
movsl
pop
mov
ret
hlt
std
loop
lret
inc
jmp
subl
inc
mov
sbbb
xchg
ja
xor
jp
ds
hlt
push
and
xor
insl
adc
and
pushl
push
fnstsw
inc
cmpsl
test
inc
mov
ret
mov
sub
int
add
mov
jmp
pop
sbb
ret
jl
fdivrp
fildl
out
sub
mov
pop
mov
jecxz
cmp
out
jbe
imul
ljmp
outsl
and
mov
scas
mov
sub
cmp
dec
cmp
jg
sbb
fucom
xorb
push
add
inc
or
lret
or
sub
sahf
bound
arpl
cmp
push
adc
ret
and
in
mov
or
mov
pop
pop
loop
cld
andb
jp
cmpsb
xchg
inc
jno
or
and
mov
loope,pt
mov
cmc
or
repz
adc
mov
xchg
das
xchg
outsb
outsb
add
xor
loop
ds
or
mov
inc
cwtl
fs
mov
or
pop
mov
daa
in
mov
decb
fmull
nop
les
or
pop
aaa
mov
daa
pushf
sbb
add
scas
inc
shrb
inc
mov
sbb
das
pop
jmp
mov
add
ret
es
ja
jecxz
cmc
loop
fwait
in
pop
and
cli
mov
mov
jo
mov
cmp
xor
adc
pusha
addr16
loop
outsl
loopne
in
pop
xchg
and
std
jl
add
jae
xchg
mov
mov
dec
push
lock
out
mov
mov
jmp
dec
addb
cmp
fildl
mov
repnz
std
push
loope
aas
mov
mov
dec
imul
fcomps
or
dec
or
mov
xor
jb
aaa
lock
and
adc
ja
pop
subb
push
cmc
push
enter
sar
imul
mov
lods
lds
mov
sbb
subb
insb
ret
dec
cmpsb
pop
test
fnstenv
push
call
shll
jne
cmc
repnz
mov
std
cmp
dec
into
push
mov
or
adc
pop
push
dec
in
call
xor
mov
sub
outsl
popa
dec
std
push
jo
xor
sbb
mov
push
addl
sti
xchg
cs
loope
inc
stos
scas
inc
cmp
sub
or
pop
adc
jo
push
dec
xlat
cmc
jmp
and
mov
scas
mov
mov
xor
mov
mov
ljmp
push
cmp
adc
aaa
inc
mov
insl
push
dec
pop
sbb
jo
pop
pop
or
push
xchg
inc
roll
push
insb
ret
mov
cmp
ljmp
lods
je
push
and
mov
add
sbb
shrb
inc
flds
adc
aaa
das
aas
ss
outsb
xchg
add
mov
dec
mov
add
jb
cld
pop
aas
mov
scas
pop
sti
bound
dec
nop
sbb
std
adc
call
jmp
jnp
sbb
mov
pop
pop
mov
pusha
fidivrs
stos
inc
and
mov
xor
add
lds
xor
mov
subb
subl
pop
insb
repz
dec
push
cli
movsb
addr16
cld
sub
xor
jl
cs
mov
enter
pop
mov
ret
out
fnstsw
sbb
pop
mov
and
dec
jbe
ja
jmp
sbb
push
nop
mov
cmp
hlt
inc
addl
add
jbe
or
jmp
in
movsl
js
xor
ficomps
leave
test
mov
adc
jl
lea
aam
insl
xchg
sarl
dec
sti
pop
rcr
psllq
mov
popa
mov
imul
or
or
imul
in
fists
rclb
popa
xchg
xor
push
jl
pop
mov
je
cmp
and
push
mov
outsl
xlat
fwait
jbe
out
cmp
daa
repz
push
imul
ds
jo
jne
fistps
adc
add
or
cltd
dec
mov
mov
insb
mov
sbb
and
repnz
push
and
test
inc
popf
and
inc
bound
push
jp
mov
ficomps
xchg
dec
nop
mov
cmpl
adcl
icebp
xchg
mov
mov
cmc
push
adc
mov
or
mov
mov
push
cmp
das
rcrb
adc
push
lock
test
jg
mov
jae
sbb
outsl
or
pusha
cli
test
jge
mov
fwait
mov
orb
push
push
es
push
pop
icebp
sbb
leave
lahf
push
fisttpll
inc
or
dec
popf
repnz
lds
add
mov
xlat
aaa
push
or
sbb
xchg
insb
nop
insl
rclb
adc
repz
out
das
lds
ss
mov
or
sbb
loope
mov
loop
inc
dec
mov
test
sbb
bnd
push
push
adc
sbb
or
test
fstps
sbb
add
xor
pop
movsl
xchg
pop
aad
aaa
mov
loope
sub
cmpsb
jecxz
cmp
das
scas
adcl
sub
lock
cmpsb
mov
sbb
pusha
cmp
or
and
test
cmp
les
jecxz
movsl
lods
sti
fcmovnb
subb
adc
pop
cmp
jne
dec
xlat
xchg
dec
xchg
test
mov
cs
push
fimull
add
jmp
adc
insb
loopne
mov
jbe
loop
push
test
push
mov
ss
rorb
lret
aad
jnp
mov
adc
test
inc
jmp
xchg
cmp
xchg
mov
inc
adc
lds
outsl
arpl
test
sbb
cmp
add
inc
sti
inc
cwtl
or
lods
imul
iret
into
outsl
mov
mov
pop
fidivl
aas
xor
jecxz
pop
test
loop
push
mov
pop
or
ds
cwtl
xchg
bound
xor
movsl
popa
lock
push
cld
ret
clc
mov
fcomp
sub
aam
or
cmp
fdivl
stos
les
daa
cwtl
jg
outsl
jg
aaa
lds
test
fstl
jae
sub
push
testb
xchg
dec
cltd
dec
adc
insb
mov
lret
mov
and
pop
cwtl
pop
iret
pop
jnp
dec
cmpsb
and
cmp
xchg
repz
mov
je
subb
ss
iret
sahf
xchg
out
xchg
cmpsb
adcb
rorb
xor
outsb
cmc
push
xor
mov
into
sbb
subb
add
and
out
mov
add
in
pop
mov
lds
push
lds
push
test
mov
insb
test
mov
or
lods
ja
loop
jb
js
notl
mov
xchg
xor
outsb
stc
enter
scas
icebp
pop
cmpsl
cmp
in
dec
sub
mov
jg
xorb
fs
sub
dec
popf
or
xchg
mov
add
push
inc
aad
shrb
mov
shlb
pusha
outsl
jbe
mov
mov
call
jns
shrl
test
nop
fildl
and
push
shlb
inc
pop
dec
test
xchg
inc
mov
and
inc
aaa
or
mov
movsl
scas
fimuls
sbb
pop
inc
or
push
jbe
jge
push
xchg
inc
mov
xor
add
ja
shll
pushf
in
cld
ret
cltd
dec
fwait
rolb
push
mov
push
in
unpckhps
mov
fidivs
iret
and
out
push
fisttpl
aaa
xor
push
cli
mov
test
insl
rclb
inc
pushf
rcrb
fucomip
in
adcb
dec
pop
aas
imul
add
fcompl
lods
insl
sarb
xor
dec
lret
jne
pop
pop
dec
mov
fildll
mov
xor
call
add
mov
or
nop
pop
and
push
cmovns
cltd
notb
add
inc
xor
add
cmpb
roll
in
fistl
mov
and
mov
cmc
das
jle
mov
loopne
fstps
mov
call
inc
inc
xlat
and
cs
dec
push
mull
and
or
andl
test
aam
push
icebp
filds
mov
test
outsb
sbb
or
mov
mov
mov
jg,pn
repz
popf
pop
xor
lea
mov
or
in
jecxz
jecxz
jo
les
jecxz
jge
cs
aaa
movl
jmp
mov
scas
arpl
cld
mov
jecxz
adc
xor
fcomip
xchg
das
outsb
mov
and
xchg
cmpsb
jae
push
mov
ljmp
jge
sti
aaa
insb
loope
adcb
in
dec
xchg
es
jns
dec
movsl
das
adc
scas
push
dec
and
ja
or
or
subl
inc
mov
test
shll
mov
mov
mov
mov
jecxz
and
rcl
or
mov
out
jbe
je
xchg
xchg
add
cmc
add
pop
cli
fmull
mov
out
jmp
cltd
mov
cwtl
cmp
cmp
cwtl
scas
mov
add
lock
mov
pop
sub
mov
xchg
jae
sbb
js
js
test
and
adc
arpl
or
sbb
dec
lods
pop
mov
mov
pop
test
pushl
mov
sbb
push
jge
fsts
test
fistps
push
add
cmpsb
inc
lcall
xchg
mov
mov
jnp
sbb
popf
jle
dec
ret
mov
cld
inc
cmp
daa
lahf
mov
add
inc
es
dec
and
lods
das
push
js
js
cmp
cmc
cmp
cmp
xorl
dec
aaa
jne
inc
mov
pusha
mov
inc
icebp
or
lds
jge
test
dec
mov
femms
lret
pop
das
inc
jecxz
xchg
imul
sbb
movb
inc
adc
aaa
and
testb
push
dec
mov
xor
cs
mov
stos
or
mov
dec
push
aad
lods
es
lock
orl
add
faddl
mov
inc
push
sub
or
incl
sbb
sub
inc
cmpsb
imul
ret
jae
and
orb
adc
cltd
stos
loopne
das
pop
inc
pop
mov
adc
or
xchg
jle
mov
xchg
es
sub
rorb
push
nop
xor
inc
adc
mov
test
add
sub
jge
or
xchg
mov
movsl
mov
scas
test
pop
aas
dec
icebp
ljmp
and
adc
std
icebp
dec
leave
mov
cmpsb
pusha
cmp
xor
push
push
dec
fdivs
out
adc
pop
orl
push
cmp
or
cmc
mov
lret
ja
arpl
std
aas
outsb
jno
sbb
add
push
rcr
inc
inc
cld
mov
lock
mov
dec
xor
imul
stc
iret
pop
fs
ret
adc
and
dec
dec
incl
sbb
insl
adc
adc
ja
sub
rorl
icebp
adc
test
loopne
cmp
add
cltd
ljmp
xchg
or
and
and
je
js
sub
shr
test
sub
loop
jo
add
jmp
repnz
mov
mov
cs
arpl
ljmp
movsl
jl
sbb
les
and
inc
add
mov
xchg
xor
push
mov
sbb
mov
xor
js
adc
test
jo
fdivrl
aad
sahf
mov
jmp
adc
test
mov
push
xchg
sub
pop
ss
add
dec
arpl
adc
jge
in
sub
out
jge
mov
pop
ds
andl
addl
loope
js
shl
test
push
cld
mov
mov
mov
mov
stc
jbe
lods
inc
lahf
fistpll
cmp
jns
addl
cmpsb
fisubl
push
sbb
inc
daa
inc
sbb
or
push
inc
imul
jnp
mov
add
adc
cmpsb
test
es
mov
mov
adc
fildll
loopne
push
lcall
mov
sub
adc
shr
adc
inc
rolb
sbb
pop
xor
divb
xorb
and
ss
scas
movsl
aaa
pop
aaa
push
leave
stc
dec
or
xor
pop
testl
push
xor
imull
dec
sbb
adc
or
jb
hlt
xchg
inc
outsl
test
cmp
cwtl
xor
cli
sub
out
mov
pop
push
loopne
adc
sbb
or
test
sbb
pop
repz
roll
mov
subl
and
xor
pop
lock
sub
pop
dec
mov
ja
call
jecxz
push
mov
cld
ret
push
sub
xor
xor
and
jle
pop
adc
out
imul
mov
mov
add
mov
or
daa
mov
push
inc
aas
or
inc
dec
cmp
pop
addr16
adc
jne
mov
stos
shl
jo
sahf
jmp
pop
aaa
mov
pop
cmp
push
inc
mov
sub
lcall
stos
repz
fimull
mov
in
sub
popa
xor
enter
inc
repz
mov
xchg
mov
or
mov
inc
and
adc
ja
mov
push
std
test
inc
jle
outsl
sub
test
xorl
ljmp
pop
pop
outsl
daa
scas
test
cli
pop
pop
cld
es
xchg
mov
jecxz
aad
loop
ja
xchg
aas
and
xor
push
ss
test
movsl
int
pminsw
icebp
or
imul
dec
shlb
fst
or
in
arpl
mov
ljmp
xchg
pop
les
cvtpi2ps
pop
sub
shrb
repnz
xor
ljmp
push
add
nop
sub
cli
aaa
jg
dec
stc
jl
add
pop
push
es
xchg
out
mov
pushf
adc
adc
outsl
cmp
jb
adc
test
add
adc
popl
ret
mov
cmp
mov
lahf
cmp
testb
mov
add
enter
testb
rcrl
ss
lods
lea
and
das
jge
and
out
insb
and
cmp
int
cs
xor
ljmp
or
and
loope
mov
pushf
or
cmp
leave
dec
sbb
in
mov
loopne
jo
push
and
mov
jae
mov
outsl
test
and
pop
dec
xchg
mov
fcmovbe
mov
xchg
cld
jmp
insl
or
sbb
dec
movb
xor
pop
cmpb
jge
push
sti
dec
push
push
pusha
xor
imul
mov
fisubrl
add
adc
ja
inc
pop
mov
loop
inc
les
inc
scas
outsb
lods
sbb
or
mov
sub
lods
negb
lods
insb
and
movsl
std
loop
jge
push
sub
mov
dec
jno
mov
iret
frstor
cltd
mov
and
popa
cmp
push
adc
xchg
movsl
movsl
dec
mov
push
rcll
mov
mov
lcall
push
mov
adc
mov
mov
adc
ds
add
dec
jmp
add
test
lods
int3
lds
imul
push
mov
adc
test
jns
loop
les
and
push
xchg
imul
jne
jmp
dec
mov
pop
gs
cltd
push
mov
addb
rolb
push
ss
xor
out
push
lods
jecxz
mov
in
dec
mov
push
push
shr
inc
sbb
jno
xlat
fildll
pushf
inc
mov
mov
mov
push
fildll
movsb
mov
subb
clc
loopne
int
adc
dec
dec
mov
push
mov
jbe
sarb
jo
add
mov
or
jg
adc
imul
sbb
arpl
add
daa
out
lock
add
jl
inc
test
scas
rcll
sbbl
hlt
mov
sub
jge
xlat
push
roll
stc
xor
sbb
sti
testb
addb
stos
cmp
jge
test
clc
mov
int3
cmp
push
add
mov
dec
pop
mulb
lcall
ljmp
cs
and
mov
sbb
gs
jecxz
jg
fs
test
xchg
movsb
movsb
mov
push
imul
cmp
xchg
xlat
shlb
sbb
popf
mov
sbb
fbstp
enter
rorl
outsl
dec
jae
fsubs
push
xchg
out
adc
ljmp
js
unpckhps
js
into
xchg
scas
push
jne,pn
pushl
adc
jo
xchg
shrb
outsl
ss
adc
gs
jb
movsl
sbb
mov
call
mov
lahf
outsb
or
clc
xor
push
and
ja
fistps
test
inc
shll
add
ja
ja
jo
mov
addr16
fnstsw
jmp
mull
ds
inc
lods
leave
fisubl
rcrl
pop
mov
lcall
inc
dec
sub
add
arpl
dec
stc
mov
lret
mov
jle
movl
mov
dec
and
push
and
ss
cmp
add
dec
fildll
mov
stos
sub
jg
stos
fists
mov
mov
mov
and
mov
cmpsb
sbb
addr16
jmp
shlb
fdivr
aaa
lret
pop
jmp
out
jle
mov
and
sub
in
rolb
enter
add
loop
mov
mov
imul
mov
push
xchg
and
outsl
push
add
xchg
and
fsubrs
cmp
mov
fimuls
aam
call
ret
and
pop
mov
rcll
push
push
imul
jbe
popa
and
xor
dec
shl
dec
aaa
scas
mov
divl
aam
arpl
cmpsl
or
inc
sbb
shll
rcl
mov
mov
clc
jbe,pn
add
jno
xor
cmp
pushf
test
mov
fwait
test
jo
xchg
pop
clc
pop
js
mov
aas
ds
lahf
and
call
cmp
or
inc
fucomip
inc
ljmp
xchg
cmc
in
cmp
push
or
xchg
insl
mov
iret
fwait
and
pop
mov
ljmp
fwait
call
addr16
or
out
cld
loop
push
mov
or
lock
roll
xchg
or
or
pop
inc
sub
jmp
cltd
test
ja
sbb
loopne
inc
mov
aaa
pop
pop
ss
mov
xor
push
insl
pushf
out
xor
dec
lds
cmp
ds
add
cli
orl
jno
es
call
mov
fiaddl
or
shll
das
ror
cmp
add
lret
push
imul
add
jns
movsl
fisttps
je
andl
inc
xor
add
decb
jl
push
fstpl
inc
fdivrs
nop
outsl
adc
ljmp
je
push
mov
pop
adc
sti
fwait
out
mov
xor
lcall
pop
cmp
push
test
pop
inc
inc
jnp
scas
mov
icebp
or
cmp
lret
stos
pop
push
rclb
test
pop
jge
cmp
mov
mov
mov
fidivrl
pusha
popa
rorl
rep
fcmove
cmc
roll
fiadds
cwtl
adc
and
in
or
sub
add
stos
mov
pop
jge
popa
inc
add
lcall
mov
gs
xchg
loop
sbb
cmp
jle
add
ret
push
insb
xor
or
push
pusha
cmpsl
movsb
rcrl
insl
mov
clc
xor
je
push
lahf
jle
jg
jle
or
cmp
inc
popa
or
sub
mov
push
mov
dec
fstpl
aas
dec
mov
fs
test
add
or
sub
pop
arpl
or
or
xor
inc
fcomip
aaa
cmp
ja
jno
jg
outsb
and
mov
aad
xlat
add
fptan
les
xor
push
add
sti
scas
dec
jecxz
addb
std
mov
icebp
lods
je
push
popf
sbb
jae
movsl
sbb
xchg
push
mov
icebp
pop
sub
stos
push
and
inc
cld
les
das
cld
mov
xor
sub
dec
cmpsb
xor
dec
mov
cs
mov
sbb
inc
imul
insl
std
out
sub
sbb
jg
pop
push
jmp
clc
imul
fists
dec
pop
fcom
mov
cwtl
loope
cwtl
hlt
repz
cltd
repz
inc
aaa
jo
pop
call
out
mov
cli
sbb
lock
or
mov
ja
pop
insl
stos
adc
fcomps
cwtl
inc
mov
push
add
lret
cmp
clc
mov
int3
notl
xor
test
pop
mov
scas
in
xor
pop
add
cmpb
mov
push
lcall
fsubrl
in
incl
jp
adc
call
cld
adc
dec
ja
lods
mov
jns
shlb
outsl
mov
xchg
xlat
jecxz
or
aaa
hlt
adc
pop
mov
and
cmp
test
in
cmp
dec
sub
icebp
mov
popf
popl
and
push
add
mov
in
mov
in
push
lahf
or
mov
test
sbb
into
jg
aaa
hlt
sbb
dec
or
xchg
and
rcl
addb
fisubl
mov
push
orl
lock
loop
std
push
insb
popa
adc
push
rol
lods
addb
mov
insl
insl
mov
jmp
jbe
push
clc
push
lds
and
mov
or
push
sahf
enter
jnp
cli
daa
xor
add
shll
mov
insl
dec
xor
mov
aad
add
inc
sbb
push
xchg
cmpsl
test
mov
dec
pop
or
sbb
cmp
lea
lret
push
pushf
inc
dec
sbb
stos
in
xchg
hlt
or
nop
xor
decb
ljmp
movsb
or
jg
les
shlb
mov
mov
mov
mov
dec
mov
mov
adc
jl
dec
mov
sub
decl
cmp
gs
push
add
dec
movsb
jbe
iret
rolb
test
xlat
mov
inc
push
jo
inc
lock
jecxz
xor
ret
pop
mov
ss
test
shrl
or
inc
in
std
add
xchg
adc
jbe
jp
sti
mov
stos
inc
into
sub
mov
mov
cltd
push
gs
push
shll
fdivr
decl
xbegin
dec
sbb
dec
les
mov
and
mov
adc
pop
jmp
xchg
in
mov
push
daa
or
adc
loop
fs
cld
shrb
or
mov
scas
hlt
pop
inc
arpl
sbb
cmp
xchg
sbb
or
aam
inc
stc
mov
cmp
fldenv
cmp
std
rol
push
sbbb
in
dec
inc
push
mov
xor
insb
and
cmp
cs
push
stos
mov
enter
xchg
mov
rcl
add
adc
pushl
mov
cmp
ret
inc
mov
push
mov
cmp
ret
or
insl
dec
mov
and
mov
sbb
hlt
aas
push
imul
stos
movsl
lahf
push
outsl
mov
pop
ret
in
shl
xor
jnp
fsubrs
fsubrp
xor
rol
rol
adc
add
jne
push
mov
inc
dec
fildll
andl
lea
cmp
adc
lcall
dec
inc
imul
and
jo
pop
cmp
mov
pop
or
stc
sbb
sub
mov
and
test
dec
sub
loopne
push
dec
mov
pushl
stc
adc
dec
aam
or
cs
pop
and
sbb
ret
push
and
ljmp
pop
dec
aaa
ss
ror
in
xor
fs
loop
add
outsl
rorl
pusha
or
add
mov
test
nop
scas
mov
inc
sar
mov
dec
jmp
inc
mov
mov
icebp
mov
jo
xchg
and
test
mov
mov
cmpsl
cmp
test
popf
inc
push
and
aaa
ljmp
stos
repnz
pop
push
sub
push
in
mov
test
call
imul
push
insb
lret
test
imul
enter
pop
mov
popf
push
mov
or
fcomps
sub
lods
cli
out
scas
out
ds
jns
mov
mov
aaa
cs
dec
fisubl
mov
jle
inc
mov
adc
pusha
jmp
sti
rcll
or
jl
cmp
scas
mov
mov
cmc
sub
mov
stos
mov
jp
pop
and
test
cltd
lds
dec
dec
adc
popf
pop
jmp
ljmp
mov
mov
jge
and
jmp
in
testb
jl
arpl
sub
cmp
mov
stc
test
xchg
sbb
cmp
and
lods
lock
in
or
push
iret
add
outsl
mov
jns
mov
mov
dec
lods
std
bound
lahf
dec
xchg
jp
dec
cmp
xor
add
mov
push
cli
or
xchg
test
add
mov
fucomip
jb
ds
pushf
adc
jne
mov
jg
mov
aam
fistpll
fsubl
dec
sub
lods
cwtl
dec
je
dec
insl
sbb
and
adc
inc
push
das
inc
mov
adc
andb
insl
mov
or
inc
jo
xor
in
sti
aaa
lds
mov
inc
mov
aas
sahf
mov
push
rcll
mov
negl
ljmp
or
in
pop
xor
in
pop
in
fbstp
mov
aam
mov
int3
gs
in
cmpsb
enter
shlb
imul
lock
das
lds
xor
inc
cwtl
mov
sti
pop
mov
sub
sbb
inc
loopne
rclb
cmpb
jbe
inc
cmp
sub
test
mov
xchg
bound
cmp
mov
loop
in
pushf
repnz
cltd
jle
fisubrl
fistps
and
mov
imul
inc
jl
test
scas
adc
imul
and
and
out
fdivs
popa
stos
imulb
sbb
mov
xchg
xor
inc
adc
xchg
jl
and
jae
sbb
adc
aam
xchg
sub
push
mov
cwtl
adc
xor
cmp
jge
sbb
lods
sbb
and
ljmp
out
adc
data16
dec
cmc
popa
add
aaa
cld
je
jne
inc
push
dec
pop
cmp
xchg
mov
lea
cwtl
xchg
clc
or
adc
dec
jl
pop
ret
out
mov
mov
mov
popf
cli
xchg
sbb
cmp
pop
rcrl
and
add
ljmp
dec
out
mov
and
jns
addr16
cmp
movsl
insb
repz
xchg
sbb
shld
dec
cltd
or
mov
lock
test
repnz
cltd
rcrb
pop
push
sub
xor
jl
push
leave
pop
hlt
es
jmp
ret
imul
cli
das
mov
les
call
jge
ja
pop
orb
repnz
test
bound
sarl
adc
rclb
in
cs
push
mov
mov
lahf
jle
cs
adc
push
fwait
xlat
enter
mov
es
cmp
js
js
sahf
lcall
hlt
orl
es
pop
mov
mov
fsubrs
jge
xchg
movsb
mov
jbe
test
je
or
test
push
mov
cmp
mov
xor
outsb
mov
mov
imul
std
ret
lret
je
lds
push
sbb
push
scas
or
dec
cli
jmp
cld
aam
test
test
inc
inc
xor
add
push
mov
loope
mov
pop
mov
inc
ss
sahf
mov
pop
fildl
jo
or
dec
into
add
jecxz
popa
bound
adc
mov
mov
mov
xor
jmp
daa
jmp
mov
mov
bound
add
sub
push
push
repz
in
push
filds
loopne
adc
jle
or
mov
movsb
shl
xchg
dec
icebp
movsl
clc
sbb
ret
addr16
sbb
xor
mov
outsl
xchg
mov
ret
mov
call
lods
xor
sub
dec
add
jb
xlat
hlt
fucomi
sbb
and
sub
push
xor
sub
cltd
mov
repnz
and
or
jb
add
outsl
fsub
shrl
test
jecxz
outsb
jp
ret
stc
pusha
xor
fwait
xor
sub
xchg
mov
mov
push
mov
or
mov
mov
and
push
pop
jns
mov
popl
mov
and
push
lock
xchg
mov
lock
mov
xorl
rclb
and
sti
in
pop
mov
fiadds
add
push
push
and
movsb
das
push
xor
sbb
mov
jge
adc
imul
jg
or
jb
testl
test
mov
shr
jle
xchg
mov
je
push
enter
outsl
or
push
cmpsb
dec
dec
movb
or
test
add
and
xor
mov
outsl
loop
sbb
scas
je
mov
insl
mov
push
sub
imul
jge
mov
mov
push
jp
decl
daa
dec
xchg
mov
pop
or
rcll
xchg
sub
inc
cmp
jge
or
mov
mov
cmp
mov
stos
dec
and
cmc
push
xor
das
inc
jno
addb
fistps
dec
jecxz
jecxz
rclb
test
into
or
sub
push
filds
or
add
stc
cwtl
cmp
adc
mov
sbb
push
fcmovnb
or
add
bound
dec
mov
sarl
xchg
sbb
call
cmp
xorl
sub
cmp
cmp
dec
movsl
fimull
subb
mov
arpl
or
fwait
nop
mov
lret
sub
mov
lock
add
je
sub
les
mov
int3
sarl
jg
fisttpl
jnp
dec
or
inc
sarb
pop
cltd
shrb
faddl
sbb
cmpb
pop
dec
adc
icebp
sbb
push
mov
fs
dec
std
lea
mov
je
loope
and
mov
lahf
insb
push
mov
push
sbb
and
push
inc
mov
in
or
movsl
jne
inc
and
sbb
pop
xor
jmp
push
sub
adc
mov
incl
jno
xor
mov
add
je
push
sub
lock
dec
aaa
push
pusha
in
cmc
out
lods
dec
pop
je
xor
lcall
testl
ss
pushf
or
pop
pop
fbld
fbstp
push
pop
sbb
js
and
inc
mov
mov
testl
inc
mov
adc
cmpb
xchg
push
mov
clc
lcall
dec
out
test
fisttpl
mov
negl
addb
adc
push
push
cli
bound
dec
and
mov
mov
xchg
mov
testb
out
movsb
mov
xor
push
fistpll
add
push
bound
push
inc
push
mov
adc
add
aad
and
inc
jl
jp
fwait
add
jnp
push
outsb
inc
or
mov
fldcw
icebp
cmp
and
or
jp
and
rclb
decl
lods
fistpll
mov
push
adc
and
clc
jo
sub
add
lods
mov
roll
and
xchg
call
rcrl
push
inc
or
adc
push
sbb
mov
das
cmc
ret
stc
cmp
adc
sbb
test
repnz
cmp
dec
popf
or
xchg
jp
addr16
inc
hlt
pop
sti
test
popf
stc
stc
push
ds
std
sbb
lcall
mov
decb
cli
test
mov
inc
addr16
or
jmp
ja
and
sti
fiaddl
add
loop
scas
mov
mov
and
int
push
or
pop
add
xlat
pop
cld
and
mov
jle
or
push
stc
and
inc
mov
nop
sbb
xchg
hlt
out
dec
xchg
sub
cmp
jmp
in
xchg
pop
mov
jl
inc
xor
and
js
add
fwait
lcall
jmp
xor
xchg
adc
push
sbb
push
cli
or
aad
insb
out
pop
mov
xchg
pop
stos
inc
gs
aad
push
jge
lock
pop
jnp
push
mov
xchg
adc
ret
adc
push
xor
add
mov
jmp
loopne
xchg
mov
mov
mov
add
lds
inc
xchg
push
outsb
mov
imul
mov
ret
mov
ret
decl
inc
xor
pop
int
stos
push
jmp
insb
imul
add
flds
xchg
inc
roll
adc
mov
adc
lret
fcomp
loopne
icebp
arpl
lahf
notb
xlat
or
lcall
in
cmp
lea
mov
shlb
in
lods
mov
outsl
xor
fs
sub
sbb
mov
and
out
das
xchg
or
sub
inc
mov
out
aad
nop
insl
sbb
ljmp
mov
arpl
fcmovnu
clc
lahf
icebp
out
xor
adc
scas
adc
loope
pop
add
sar
push
outsl
shlb
aas
call
cltd
and
sub
pop
and
movsl
fiaddl
imul
adc
adc
mov
inc
out
mov
mov
adc
xchg
out
xchg
push
mov
arpl
push
inc
xchg
xchg
adc
out
insl
test
cmp
push
fidivrs
test
fucomip
adc
xchg
cld
hlt
mulb
jmp
inc
jne
cmpsl
loop
sub
jmp
frstor
push
cmpl
das
jbe
push
scas
bound
dec
in
lea
dec
mov
into
jnp
sub
or
fiaddl
mov
cmc
decl
ss
push
mov
test
fmulp
enter
popa
sbb
xchg
test
out
es
mov
xchg
mov
mov
sbb
out
test
pop
out
mov
lock
dec
dec
dec
jbe
test
jp
pop
or
mov
aas
pop
cmp
sbb
notl
dec
arpl
xchg
push
inc
incl
popf
les
lock
mov
adc
add
cmp
jne
push
icebp
outsl
dec
fmull
xor
movsb
xor
cmp
or
sbb
inc
test
cli
mov
cltd
scas
adc
xchg
mov
daa
pushf
cmp
sbb
daa
mov
bound
nop
hlt
test
das
lcall
sub
sbb
inc
in
test
xor
clc
xchg
pop
sbb
test
pushf
das
mov
inc
fsubrl
rclb
inc
les
shl
mov
pop
aaa
std
add
ss
std
scas
rorb
out
pop
filds
fidivl
and
in
mov
fucom
jb
mov
stc
push
fdivp
loopne
xchg
mov
leave
sub
cmc
pop
fisttps
addb
sub
xchg
inc
fldl
mov
adc
inc
jb
jae
dec
lock
adc
xchg
test
lock
add
inc
or
test
xchg
lods
lea
cld
movsb
mov
jle
mov
and
jecxz
dec
sub
mov
leave
stos
mov
jae
mov
sbb
adc
mov
movsl
mov
mov
iret
adc
outsb
mov
lds
inc
mov
orl
mov
addl
sbb
mov
and
call
mov
cmp
daa
ss
jp
rolb
add
outsl
pop
fists
add
call
xchg
inc
inc
jp
shlb
jo
or
or
movswl
in
add
push
jb
cmpsl
int3
fisttps
sbb
dec
mov
outsb
mov
scas
xchg
cwtl
je
adc
xlat
add
adc
lret
fiadds
aad
pop
shll
inc
in
scas
and
lds
mov
ret
sti
mov
jp
xlat
decl
add
or
mulb
mov
mov
lret
loop
xchg
or
in
sbb
fstl
dec
popa
loope
add
jg
iret
xchg
popa
add
aad
adc
sahf
pop
mov
mov
sub
jns
insb
mov
mov
dec
pop
mov
loopne
lret
flds
pop
rcll
pop
aam
es
dec
daa
inc
int
mov
call
lea
jo
outsl
jg
cmp
jmp
push
sbbb
cwtl
loopne
pop
cmp
insb
in
xor
test
insb
decl
xchg
cwtl
aaa
mov
xor
rorl
jno
xor
cli
out
jne
mov
sarl
xchg
adc
outsb
mov
cmpsb
cs
scas
clc
sub
adc
out
xchg
mov
int3
fiadds
jmp
add
and
mov
imulb
rcrl
jl
mov
inc
js
inc
maxps
jp
sbb
adc
insb
mov
hlt
loopne
cmpsl
inc
xchg
pop
mov
rcr
aam
in
imul
jbe
push
cmp
dec
xchg
iret
dec
cmpsb
js
jg
adc
mov
out
mov
cmpl
gs
sbb
pop
xchg
or
out
mov
fisttpl
out
addr16
xor
inc
mov
aas
and
jmp
or
das
stos
enter
outsl
fdivr
add
ret
iret
xorl
dec
in
mov
xor
jmp
pop
cli
aad
out
xchg
cli
jno
jbe
mov
fwait
in
loope
test
jb
mov
and
inc
pop
rorb
push
jl
push
scas
pop
mov
movsl
icebp
fs
ja
sbb
add
sub
xrelease
and
lock
sub
fcompl
sbb
dec
lea
std
fistpll
and
push
mov
pop
xchg
repz
mov
inc
mov
jge
mov
push
rorb
aaa
mov
dec
adc
fildll
mov
insb
insl
addl
jno
push
sahf
std
xchg
insb
lds
fs
mov
sbb
stc
jbe
xor
imull
leave
sub
mov
test
mov
pop
push
mov
leave
xchg
jp
dec
repnz
sub
xchg
adc
stos
in
loopne
outsl
fistpll
shlb
outsb
adc
popa
das
and
jb
insl
jnp
test
mov
push
in
xor
sbb
outsl
pop
sbb
xchg
jno
add
cmpb
jne
jae
inc
jb
ja
sbb
ret
out
mov
leave
and
push
test
cmp
inc
les
jnp
loope
clc
xchg
xor
lcall
jecxz
xchg
js
insl
enter
cli
push
xor
or
inc
pop
push
add
mov
loopne
shr
push
pmulhw
call
cld
pop
push
fs
and
add
mov
jno
mov
push
push
jle
and
idivl
loopne
les
lcall
mov
int3
add
inc
das
pop
loopne
inc
push
pop
adc
adc
cltd
out
fsubs
rcrb
mov
ret
data16
pop
das
cwtl
imul
das
dec
out
imul
jnp
or
push
xchg
shlb
xlat
and
sub
mov
push
add
mov
filds
push
loop
lock
rcrb
sbb
inc
push
popa
inc
jmp
mov
call
mov
pop
es
mov
mov
loope
dec
cmp
and
out
mov
int
scas
hlt
xlat
sub
push
outsl
sbb
sbb
jo
ret
movsl
lods
sbb
adc
lea
loopne
scas
adc
rolb
pusha
mov
pusha
mov
es
jecxz
mov
in
jg
pop
inc
pop
and
inc
xchg
or
mov
mov
jecxz
ljmp
mov
ds
insl
int
add
in
inc
enter
lahf
popa
cs
adc
or
ret
pop
push
lods
push
ud0
push
jae
ds
cmp
rorb
sub
jae
pop
adc
mov
shrl
filds
jb
icebp
cs
add
adcb
sbb
ja
push
mov
pop
sbb
push
mov
sub
mov
cmc
cli
or
jmp
mov
aad
push
and
ret
mov
aad
rcrl
jle
subl
fprem
in
addr16
ss
push
pop
mov
test
mov
rol
mov
in
push
push
xlat
inc
jbe
sub
mov
in
imul
sub
in
jl
mov
lcall
mov
sahf
iret
mov
push
clc
in
mov
fistps
imul
xlat
jb
icebp
out
out
fcmovnb
in
arpl
pop
sbb
jns
outsl
ret
or
popa
adc
adcl
and
or
stos
pushf
pop
in
cmp
mov
add
mov
sbb
push
pop
or
mov
lea
cmovp
mov
pop
push
mov
or
sbb
inc
push
dec
jmp
int3
pop
jecxz
add
fisttps
pop
xchg
lret
add
or
push
mov
sti
jo
mov
sub
call
in
ret
loope
js
add
jae
xor
stos
lcall
push
adc
adc
mov
push
jl
push
dec
xlat
dec
cmp
test
mov
movsb
nop
fcomi
mov
aam
clc
negb
jno
xlat
je
in
adc
insl
fldt
xchg
mov
inc
pop
lea
add
mov
xor
push
pop
outsb
mov
jne
push
xor
xor
push
cmpsl
mov
mov
mov
pop
leave
jb
xchg
loope
cmp
outsl
sbb
aaa
cwtl
mov
push
mov
mov
ror
push
testb
jecxz
add
xchg
push
cmpl
sbb
es
pop
lahf
pop
adc
int3
adc
arpl
fistps
ror
icebp
pop
cmp
movsb
sbb
popa
jle
in
mov
xor
inc
jecxz
mov
dec
push
and
push
loopne
and
mov
adc
jbe
es
mov
addl
iret
aam
nop
inc
jbe
adc
lret
into
outsl
fmull
cltd
clc
push
add
clc
ret
into
ret
and
jmp
fs
stos
inc
out
icebp
xchg
mov
jmp
jp
loop
and
jbe
gs
fwait
and
push
mov
pop
pop
mov
adc
add
fldcw
adcb
lcall
jl
dec
xor
xchg
decl
jmp
popa
or
xchg
cli
mov
dec
mov
push
and
loope
xchg
out
stos
imul
or
pop
bound
mov
sbb
sbbb
or
lret
test
dec
pop
jmp
pop
test
and
fdivrs
flds
cli
xor
sub
sub
push
sarb
pop
mov
push
fisubrl
dec
adc
xor
adc
mov
jne
pop
mov
aad
dec
aad
sahf
cli
cmp
push
push
fdivl
sbb
or
fstpt
add
or
cmp
dec
cmp
imul
mov
loopne
add
fdivr
xchg
js
scas
jnp
fcoml
dec
das
add
out
ret
or
fistpll
jns
pop
into
fsubrl
in
fstl
mov
fisubrl
xchg
cmp
xchg
fimuls
jns
leave
lcall
cmpsb
lcall
outsl
ret
mov
mov
inc
pusha
cmc
sarb
xchg
movsb
cltd
repz
rcrb
mov
movups
pushf
mov
adc
mov
and
fbstp
sub
es
stos
add
mov
cmc
adc
adc
cwtl
cltd
sub
sub
popf
shrb
icebp
pop
aas
sbb
push
mov
pusha
xchg
sbb
call
roll
and
pop
push
imul
clc
adc
dec
cli
pop
ja
dec
fists
and
out
jmp
jbe
ficompl
push
or
scas
fimull
popa
mov
cmp
repz
mov
jne
out
mov
sbb
shll
xchg
fmuls
loopne
xchg
sti
or
push
pop
jle
dec
sbb
push
jne
jno
push
insb
fadds
test
sbb
add
jle
push
lds
inc
or
movups
push
inc
mov
jge
lock
stos
push
gs
les
lods
add
imul
xchg
xor
add
loopne
cmp
mov
ficomps
jo
pop
fsts
daa
les
not
fwait
cmp
and
fists
pop
pop
xlat
adcl
pop
pop
xorb
push
pop
cli
jle
jle
xchg
inc
test
dec
add
cli
loope
jne
mov
mov
scas
adc
pop
inc
cmc
in
sub
and
mov
aas
mov
lds
test
adc
inc
jle
add
push
xchg
jge
add
adc
sbb
insb
mov
adc
inc
push
sub
in
sbb
fistpl
out
dec
or
cmp
lcall
inc
pop
add
lcall
call
pop
insb
mov
rcll
addb
fcoml
cmp
mov
jecxz
lret
inc
repz
push
mov
mov
hlt
sbb
outsb
cld
or
xor
adc
jae
in
mov
sbb
call
icebp
outsl
sbb
dec
lahf
inc
push
ret
push
enter
sti
mov
loope
nop
and
push
adc
jg
sarl
mov
sub
xorb
mov
xor
fistl
mov
sbb
mov
pop
pop
mov
lea
add
fwait
mov
jb
std
or
rclb
inc
pop
cltd
add
sbb
fstl
xor
adc
loop
dec
aam
adc
mov
movsl
pop
xchg
pop
push
fwait
add
sbb
pop
stos
push
xlat
outsl
dec
hlt
jb
enter
aad
stos
sub
ret
fwait
cli
push
xlat
shll
rcrb
mov
mov
rep
out
into
adc
fcomp
fdivs
mov
add
inc
aaa
adc
dec
push
sbb
adc
lds
loope
jne
sub
push
hlt
es
out
cmp
inc
stos
push
push
insl
jns
or
lods
idivl
mov
test
dec
test
xchg
rol
pop
jp
dec
shlb
in
and
loop
inc
jmp
movsl
into
push
addb
xchg
stc
ss
rcrb
ficomps
pop
dec
inc
jmp
js
in
jle
xor
aas
addr16
pop
add
ss
push
or
push
scas
xlat
push
jae
enter
in
rcrb
push
mov
aad
das
insb
pop
add
sub
lahf
out
loopne
aas
jne
mov
push
aaa
cmc
jbe
or
dec
cli
or
jg
je
inc
or
mov
add
mov
mov
arpl
dec
fwait
adc
mov
outsl
jmp
add
mov
dec
fistps
pop
jo
push
daa
mov
loopne
aaa
je
or
pop
lds
adc
pusha
repnz
pop
aas
inc
mov
sub
push
out
cmpsl
ss
fsubrs
and
and
xchg
inc
xchg
in
dec
adc
dec
daa
cltd
fsubs
push
mov
fidivrs
clc
stos
sahf
sub
pop
rcr
out
out
adc
je
dec
and
and
outsb
sbb
les
jecxz
clc
mov
dec
mov
iret
int3
pop
xchg
push
stos
dec
es
subb
enter
xor
cli
and
push
repnz
addl
add
cmp
sbb
sbb
cmp
jbe
je
sbbl
ljmp
ss
and
add
mov
or
inc
movsl
fsubrs
mov
gs
jmp
mov
xlat
dec
or
jp
lock
or
cmp
lods
sti
pushf
sub
push
repnz
xchg
mov
ret
fadd
mov
movsb
mov
adc
enter
xchg
out
sub
xchg
movsb
pop
cmc
sub
pop
clc
sbb
mov
test
pop
hlt
inc
and
xchg
mov
outsl
rolb
fsub
mov
push
add
je
lahf
jnp
cli
ret
inc
mov
push
pop
or
lea
loop
jmp
jno
cmpb
jg
jecxz
ljmp
xchg
js
fcmovnu
fidivrl
xor
aam
in
push
adc
adc
cmpps
mov
add
add
or
mov
mov
cmp
ljmp
addl
aas
mov
inc
js
jb
push
pop
mov
add
pop
and
stc
sarb
push
ss
into
sub
push
cmp
fdiv
test
in
movsl
int
adc
sub
or
pop
and
xchg
sbbb
jmp
inc
mov
loope
cld
ret
pop
jnp
mov
cmp
jecxz
sahf
loop
ficoml
and
adc
sub
inc
dec
adc
jns
mov
subl
inc
pop
sub
out
pop
cmc
adc
mov
mov
jg
fucomp
sub
sub
nop
adc
adc
sbb
into
insl
lods
fbld
fs
mov
add
or
in
outsl
subb
inc
inc
and
lahf
mov
sbb
cmp
shll
sbb
rorb
fs
outsb
mov
mov
xchg
fisubrs
std
imul
lret
rorb
xchg
ret
ficoml
pop
mov
jp
push
pop
cmp
sub
add
movsl
mov
out
add
push
ficompl
sub
dec
mov
mov
adc
inc
aaa
insl
iret
aas
push
jb
in
pop
dec
or
cmp
gs
lods
mov
fstp
inc
dec
jecxz
shlb
push
lret
mov
div
ss
aas
test
bnd
cmc
aaa
adc
fdiv
sub
mov
push
aad
das
adc
mov
sbb
outsb
sbb
dec
ret
hlt
pop
push
in
orl
outsl
jmp
movsl
jg
pop
mov
pop
or
lock
mov
or
mov
sbb
push
mov
in
pop
sub
add
xor
fnsave
push
add
bound
in
mov
pop
and
pop
mov
xor
dec
inc
pop
dec
sbb
push
shrb
ds
repz
pop
ljmp
cmp
clc
xchg
or
clc
cmp
into
mov
stos
push
outsl
add
in
and
mov
fimull
pusha
pop
mov
dec
pop
adc
pop
cmp
dec
push
add
inc
pop
fisubrs
je
and
mov
sbbb
push
pop
adc
inc
dec
jg
out
add
adc
or
mov
cs
lret
testb
daa
push
outsl
xor
dec
push
dec
dec
push
mov
mul
mov
dec
mov
dec
and
aam
lret
add
pushf
out
and
pop
pop
cmp
subb
or
aam
clc
or
push
push
jae
ljmp
lds
jle
mov
scas
pop
fidivrl
nop
je
inc
pop
nop
clc
adc
imul
test
jecxz
outsl
outsl
mov
cmc
or
test
or
dec
jp
das
je
cld
cmp
stc
cmp
mov
rcrl
insl
rclb
in
addl
ret
add
cld
push
mov
fisttpll
pop
repz
jle
lods
sarb
mov
test
inc
enter
cmp
add
mov
mov
faddl
in
cmp
or
aaa
subb
sbb
sub
pop
notl
inc
lahf
clc
and
push
aam
sbb
adc
xor
xchg
fcoms
pop
xchg
add
add
or
or
cwtl
test
lock
sbb
push
adc
cmp
jl
outsl
ja
das
sbb
jmp
push
aaa
add
clc
inc
fdivrs
sarb
subb
imul
call
shlb
fs
into
mov
fisubs
jg
and
mov
jg
popa
adc
inc
xlat
xchg
cli
dec
xchg
repz
sub
add
out
sbb
adc
or
jno
or
push
cmp
pop
insl
adc
pop
or
xchg
or
inc
pop
hlt
ja
adc
push
mov
mov
or
rcll
sub
loopne
into
cmp
call
push
aaa
subb
or
pop
faddl
cmpsl
lcall
fwait
cli
das
add
mov
add
jge
and
add
dec
fwait
inc
call
jmp
push
xor
and
lock
xchg
loopne
xchg
jg
mov
fwait
mov
shlb
paddusb
pusha
cmpsb
out
test
jmp
ret
js
push
popa
fistpl
jmp
dec
stos
cmp
scas
test
lcall
mov
push
xorb
clc
push
lret
arpl
fwait
loope
fidivrl
inc
dec
dec
jmp
int3
sub
nop
outsl
xchg
push
cmp
mov
fdivl
and
ljmp
in
add
add
daa
mov
mov
mov
mov
aad
sbb
cld
lods
daa
inc
jp
fcoms
dec
aad
cwtl
fbld
cmp
sub
xchg
pop
cmp
mov
pusha
xchg
and
notb
imul
jne
mov
mov
lock
mov
sbb
mov
popf
loop
mov
loopne
inc
leave
faddp
jg
jge
test
or
pop
fdivs
clc
sbb
add
mov
add
lahf
addb
fsub
xchg
xor
adc
ret
outsl
jle
adc
xchg
sub
or
out
jl
add
sbb
lods
pop
int3
mov
or
in
insl
pop
mov
adc
push
jb
inc
inc
lods
rcrl
mov
cmp
push
mov
cs
mov
les
sbb
push
mov
testb
push
sbb
test
mov
mov
outsb
dec
cmp
insb
mov
cs
inc
jecxz
xor
je
sub
or
sbb
shll
jl
std
aaa
sar
loopne
call
add
dec
mov
cli
loopne
gs
cmp
xor
inc
xor
test
sbb
xchg
hlt
dec
shlb
mov
mov
sbbb
inc
xchg
and
aad
incl
sbb
fidivl
inc
imul
daa
ds
xchg
cwtl
adc
or
pop
mov
adc
fmull
aas
clc
sub
xor
inc
inc
clc
jp,pn
mov
cmp
popa
in
lcall
cmc
pop
or
insl
insb
aas
mov
subl
xchg
shrb
mov
pop
call
popf
ficoms
and
cmp
scas
test
aam
push
mov
adc
sti
sbb
subl
incb
sti
mov
and
dec
xor
inc
les
in
es
or
pop
out
cvtdq2ps
subb
jl
outsl
cltd
cs
sbb
jb
and
jae
pop
clc
out
or
inc
cmp
clc
lods
mov
mov
adc
push
and
mov
or
cmp
lret
pop
inc
insb
in
cmpb
xor
sub
cltd
jo
out
sbb
fnstsw
sub
clc
rolb
dec
es
fnstsw
dec
lea
sub
mov
or
movb
cmpsb
push
cltd
das
pop
roll
cli
dec
std
or
xchg
push
movsl
or
lock
das
push
jns
push
bound
arpl
outsl
cmpsb
pop
jnp
mov
aad
push
xor
addr16
in
mov
adcb
sbb
gs
fstpt
push
mov
pop
jae
sub
loope
jp
push
lcall
inc
pop
ja
jecxz
or
fistpll
mov
jbe
fldt
aam
mov
sub
mov
adc
adc
sbb
movsl
addb
mov
or
mov
clc
loop
jmp
decl
jge
sbb
rcll
mov
push
jmp
negl
fstpl
stos
int
fcmovne
mov
push
jmp
gs
cmp
sti
mov
mov
int
or
repz
mov
and
jo
and
out
jl
mov
mov
add
cwtl
pop
and
adcb
fistps
and
daa
lcall
jg
lea
stos
jle
in
push
xchg
in
push
dec
push
aad
lods
aaa
in
adc
jl
insb
adc
mov
adc
jmp
inc
sub
fnsave
mov
mov
mov
or
cli
leave
mov
and
in
lock
mov
jl
cmp
call
test
nop
call
stos
inc
lahf
jae
adc
ret
and
mov
add
push
fsubl
loope
sbb
xor
adc
inc
jg
mov
shl
fmul
clc
jo
xchg
imul
pop
fadd
sub
cmp
sbb
lds
test
jle
push
sbb
sbb
cmc
mov
sub
mov
repz
scas
inc
mov
jbe
es
movsb
mov
sbb
or
sbb
and
and
xchg
pop
outsb
xor
jb
cmp
testb
decb
aad
loope
and
push
mov
jge
mov
loope
jae
insl
fldt
xor
xchg
mov
pop
imul
mov
shrb
std
movsl
mov
loop
insb
mov
adc
test
sahf
add
hlt
inc
jmp
mov
jl
fcmovbe
std
sub
negl
mov
loope
js
or
cmp
loope
inc
call
jecxz
ja
push
loopne
push
mov
add
and
mov
and
sbb
sbb
mov
push
mov
xchg
jo
mov
mov
icebp
pop
js
cli
rcll
or
add
and
cld
pop
cmp
and
and
mov
cmp
jmp
lahf
mov
or
out
call
xchg
xchg
cmp
stc
mov
insb
scas
push
mov
jp
xor
lods
shlb
jge
and
lret
jg
addb
dec
add
ja
ret
mov
sbb
jmp
mov
ret
std
popf
mov
push
sbb
and
and
imul
fbstp
icebp
in
xchg
mov
pusha
rorl
push
pop
mov
out
out
mov
add
repz
xor
mov
in
test
or
sbb
dec
aam
test
push
xor
sahf
sbb
or
adc
lcall
jg
add
imul
xchg
pop
push
cmp
dec
sbb
dec
pusha
movsl
lods
dec
dec
movaps
cmpsl
outsb
mov
mov
test
rol
or
into
inc
cs
mov
iret
je
jecxz
inc
pop
push
jo
aam
mov
das
sbb
les
jmp
add
outsl
icebp
repz
in
ffreep
test
ja
leave
test
ja
insb
ds
mov
inc
push
and
mov
das
insb
aaa
push
or
inc
jg
pushf
pop
mov
inc
subl
adc
add
jle
repnz
sbb
push
pop
mov
pusha
js
scas
fs
incl
or
cmpsb
fmuls
inc
dec
add
xchg
mov
aad
lea
jp
mov
adc
stc
movsl
mov
fwait
pop
cmp
dec
enter
mov
pop
mov
mov
adc
imul
pop
test
jg
xor
and
sbb
stos
stos
ret
incb
dec
or
in
mov
inc
loopne
lds
jecxz
xor
cli
cld
inc
mov
add
or
subb
fwait
pop
push
mov
cli
mov
std
xchg
rcrl
iret
movsb
popf
xchg
xorb
mov
out
cld
js
insl
mov
outsb
cmc
xor
xchg
test
inc
adc
sub
cmp
fs
test
adc
outsb
jecxz
and
push
repz
in
cmpsb
cld
test
pop
mov
cld
adc
mov
rcrb
sbb
inc
rclb
sbb
fidivrs
mov
push
cltd
pusha
or
mov
mov
add
xchg
in
xchg
push
icebp
movsl
adcb
mov
inc
in
jmp
fwait
sub
dec
cmp
mov
push
xchg
call
int3
test
sbb
mov
ds
insl
cmc
loopne
and
fmuls
stos
out
fstl
or
mov
sub
xor
das
jo
pop
mov
sub
cmp
xlat
lret
out
sub
or
dec
lret
arpl
add
jae
imul
pop
pop
clc
or
and
and
jns
add
fucomip
push
fiadds
lock
mov
lcall
cmpsl
jl
add
inc
repz
or
stos
adc
cmpsb
xchg
sbbb
xchg
push
ficoml
add
mov
mov
mov
mov
push
cwtl
mov
jg
mov
icebp
pop
pop
inc
cwtl
or
in
mov
fisttps
push
jne
leave
sub
mov
pop
push
nop
imul
xchg
in
mov
stos
add
adc
adc
in
decl
adc
fmul
rorl
andb
mov
fsubp
aaa
xlat
cmp
out
icebp
iret
cmp
mulps
sbb
lock
int3
xchg
cmp
sub
aad
outsb
rcrl
in
lods
inc
or
xor
bound
jp
push
cmp
add
dec
mov
cmpsl
adc
mov
aaa
sub
shl
or
add
and
pop
inc
cld
push
mov
scas
lcall
xor
pop
lcall
outsl
mov
jb
push
popa
cwtl
cmpsb
mov
incb
outsb
rclb
into
mov
sbb
out
ja
adc
rol
arpl
push
xchg
jle
dec
lcall
inc
nop
xchg
jb
and
push
loope
sbb
and
call
rorb
and
shrb
mov
leave
and
add
shll
fsubrs
mov
bound
test
xchg
jne
mov
js
aaa
xchg
cmp
mov
add
add
mov
mov
mov
outsl
int3
in
mov
sub
iret
jns
push
andb
xchg
popa
outsl
andl
pop
loope
in
add
mov
lock
cld
loopne
adc
arpl
sub
or
dec
jns
push
cld
pop
cwtl
cld
shlb
or
mov
rcrb
sub
push
mov
out
gs
pop
xor
ss
add
add
lds
add
adc
add
aad
enter
mov
seto
mov
cmp
lods
or
mov
fimuls
adc
pusha
pop
mov
pop
js
fwait
sbb
nop
add
xchg
call
pop
sub
or
mov
mov
mov
loopne
inc
and
popf
mov
ljmp
outsl
loopne
jmp
scas
adc
out
or
push
orl
cld
aam
push
mov
push
insl
cmc
outsl
popa
mov
xchg
push
mov
dec
andb
jae
push
or
push
inc
push
jl
outsb
mov
mov
add
mov
xor
shr
insb
sbb
lret
stos
mov
jo
les
pop
ret
jns
pop
add
mov
es
adc
push
insb
mov
mov
pushf
jle
pushl
cs
test
add
es
jl
cmpsl
push
loopne
adc
mov
cmpsb
es
fcmovu
test
push
notb
call
add
imul
sbb
std
lods
je
icebp
stc
jo
and
add
out
les
rcrl
addr16
fsubs
jecxz
push
xor
dec
dec
jae
decb
std
push
push
inc
xor
xor
or
xchg
inc
test
jb
jne
insb
inc
insb
insb
outsl
enter
bound
imul
jg
inc
dec
push
popa
push
cmp
dec
push
gs
idiv
fldt
add
dec
push
push
dec
dec
inc
push
dec
inc
dec
fisubrs
cld
outsl
call
stos
xor
xchg
insl
outsb
bound
insl
arpl
jg
fs
cld
ja
addr16
jne
inc
jns
pop
outsb
gs
jge
jb
imul
xor
outsl
add
fisubrs
sub
jo
and
cmp
decb
push
inc
inc
dec
pop
and
jo
outsb
popa
push
push
fisttps
push
push
adc
dec
ss
mov
push
outsb
pop
xchg
sub
decl
inc
mov
cltd
mov
insb
icebp
fsubrl
or
lret
out
mov
mov
xchg
jne
push
pushf
sub
mov
ljmp
test
mov
push
aam
xchg
cmp
in
push
pop
mov
decl
mov
cmpsl
adc
dec
std
pop
inc
inc
inc
lcall
test
incl
outsb
jb
pop
or
mov
cmp
std
ret
and
ljmp
icebp
out
lcall
pop
mov
mov
adc
sub
jmp
dec
pop
inc
sahf
pop
je
dec
cwtl
pop
or
dec
dec
in
or
cmc
decl
es
jl
out
pop
inc
mov
mov
lds
xchg
push
out
mov
fdivr
pushl
pop
and
in
flds
mov
call
test
pop
cli
lcall
aad
push
or
in
mov
dec
sbb
jns
lods
sarl
mul
dec
mov
xchg
push
mov
cmc
shll
inc
adc
into
jp
or
pop
outsl
add
movsl
test
aad
sub
clc
ret
jbe
adc
or
cmpsl
adc
icebp
js
jb
fisttpl
das
cltd
jmp
in
test
cmp
cmp
sub
add
bound
stc
call
ljmp
jb
inc
in
lea
and
xchg
push
mov
mov
lcall
and
orb
xchg
lock
fiadds
ljmpw
or
pop
jle
icebp
call
pop
inc
sub
in
rorb
xchg
xchg
jbe
or
sbb
adc
mov
sti
gs
fs
lahf
or
push
fcomi
pushf
sub
mov
mov
mov
pmulhw
xor
jbe
dec
dec
sbb
sti
lock
inc
loop
adc
outsb
scas
push
ljmp
out
in
inc
movsl
pandn
pushl
negl
push
add
push
es
sub
inc
cmp
mov
dec
inc
cmc
mov
adc
add
repz
xchg
jno
aad
xchg
lods
jno
jg
mov
pop
das
inc
gs
sub
jge
movsl
inc
test
jmp
enter
jmp
adc
jl
lds
stc
pusha
lret
ss
cmp
sbb
xor
push
mulb
mov
add
int3
clc
jb
xor
pushl
fildl
mov
xor
arpl
xor
inc
scas
ljmp
push
mov
rolb
inc
mov
adc
push
shlb
mov
jmp
test
sub
sub
negb
push
mov
out
jmp
sar
incl
cmp
or
push
ret
jmp
adc
jge
fildll
mov
rcr
test
mov
fwait
mov
in
clc
pop
lds
and
pusha
adc
xchg
xor
and
nop
jg
mov
in
pop
jcxz
mov
xor
fdivl
pop
int3
mov
aas
mov
push
pop
leave
sbb
jno
addr16
dec
mov
fldl2e
xchg
out
mul
inc
lods
jg
push
push
in
clc
clc
and
test
ljmp
sub
pop
mov
out
sub
jne
mov
daa
jp
popa
cli
push
or
stc
mov
insb
jle
mov
push
push
dec
ret
mov
jg
xor
jo
jmp
push
jne
mov
shrl
cld
mov
sbb
sub
js
dec
pushf
sub
sub
pop
sarl
sub
cwtl
lret
sbb
decl
xor
xchg
lods
clc
and
or
pusha
les
into
out
stc
inc
out
mov
into
test
mov
cmp
sbb
int
mov
pop
sbb
insb
aad
mov
mov
push
mov
xchg
call
cli
insb
inc
ljmp
mov
pop
xchg
push
or
aam
pop
jle
adc
test
popf
xchg
mov
inc
outsb
outsl
push
sarb
xor
sbb
jnp
add
ljmp
insb
mov
inc
lahf
stc
mov
sbb
loope
adc
pushl
lea
jns
imul
mov
pop
xchg
inc
call
mov
dec
xchg
cmp
sbb
mov
add
stc
jne
decb
push
adc
or
mov
imul
ljmp
loope
popf
adc
sbb
mov
testl
incl
pop
or
pop
mov
push
movsl
decl
push
mov
pop
mov
mov
push
insl
jb
call
ljmp
cmp
dec
mov
clc
mov
mov
jge
ljmp
push
or
sub
xchg
iret
imul
ljmp
popf
adc
adc
sub
pop
adc
shlb
jecxz
add
insb
shl
mov
sbb
jb
movsb
add
add
jg
lods
sbb
stc
mov
push
cmpsb
negl
dec
pop
cli
jg
dec
sahf
aaa
shll
jge
test
sbb
into
mov
ljmp
mov
or
shrb
out
int
mov
ds
fcoms
rcrl
xchg
out
shll
push
aam
adc
ja
fimull
lods
test
jle
lods
outsl
enter
inc
jnp
lret
ror
repnz
mov
pop
clc
xchg
inc
push
leave
cwtl
cli
dec
loopne
mov
jecxz
ds
add
sbb
adc
push
sbb
and
out
mov
mov
cld
and
push
pushl
leave
movsb
mov
mov
xchg
stos
lea
ljmp
sub
xchg
movsl
daa
push
inc
call
jecxz
mov
cld
cltd
nop
rcl
shll
loope
sbb
xchg
jmp
fdivl
dec
sub
mov
imul
or
shrb
outsl
imul
ljmp
std
mov
mov
or
xchg
xchg
ss
xor
xorl
push
repnz
lea
cmpb
aas
aad
jmp
cmp
adc
adc
lods
mov
outsl
fistpll
pop
call
xlat
mov
je
cmp
incl
jmp
mov
or
add
inc
xor
xor
cld
mov
xor
mov
push
push
xchg
fwait
jne
enter
pop
nop
stc
int
xchg
adc
out
arpl
orl
pop
inc
test
lret
das
cld
jbe
addr16
dec
loop
loope
mov
das
lock
pushl
popf
mov
xorl
scas
shlb
inc
jne
jbe
mov
cs
lock
add
in
push
sbb
mov
adc
pop
incl
pushl
mov
inc
inc
inc
jne
mov
mov
jnp
out
inc
pop
and
xchg
lcall
out
pop
ret
repnz
mov
loope
pop
rcll
aad
jb
popf
xchg
sub
decl
psraw
test
les
pxor
fstpt
cld
aas
jae
pop
lds
or
aad
cmpsl
xchg
lahf
loopne
cmc
jg
mov
data16
mov
test
data16
mov
mov
inc
stos
jl
scas
out
pusha
out
popf
sbb
clc
mov
test
sub
adc
stos
ds
mov
fnstsw
fldl
or
lretw
xor
jns
xchg
clc
pop
std
std
mov
or
fwait
xchg
lahf
cwtl
mov
lods
pushf
add
mov
pop
cli
shlb
xchg
mov
ss
mov
insb
adc
jnp
dec
mov
int
pop
mov
jmp
sub
jb
iret
scas
jbe
cmp
inc
mov
fadds
mov
add
pushl
test
xchg
inc
jno
xchg
inc
fwait
hlt
testl
lods
cmp
shll
cmp
and
sub
lods
int
inc
out
xchg
adc
decl
cld
cmpsb
push
mov
jb
jne
fistpl
push
fisubl
inc
adc
in
mov
outsl
push
mov
int3
shlb
out
mov
push
jg
aad
sbb
or
ror
rcrl
dec
cld
mov
loope
xchg
loopne
call
clc
pusha
fnstenv
pop
push
push
popl
out
aaa
jnp
outsl
call
ret
mov
enter
ret
sub
cmp
aam
ret
jg,pn
decl
sarl
das
addr16
loopne
sbb
push
add
jg
pop
lods
pop
xchg
jo
mov
dec
sub
outsl
mov
fwait
stc
jg
push
sub
jno
hlt
iret
pop
add
xor
call
and
and
mov
loope
sbb
mov
add
mov
mov
testl
jle
mov
and
mov
inc
jmp
loop
cmp
movsl
sub
flds
sahf
leave
lret
incl
lret
sbb
mov
movsl
pop
or
clc
jg
int3
scas
repnz
dec
ja
push
and
jno
mov
xor
xchg
idiv
xchg
fscale
cmp
aaa
and
xlat
jno
sbb
test
pop
lcall
mov
jae
inc
jg
pop
loopne
ror
cmc
int
or
bound
inc
add
in
pop
popf
pop
loop
in
mov
aas
shl
mov
arpl
mov
mov
int3
xchg
xlat
ret
shrb
sbbl
inc
cmc
pop
push
xchg
das
insb
icebp
test
pop
out
sarl
cli
bound
mov
imull
je
incl
pop
jnp
pop
xchg
das
push
push
pop
das
aam
js
ret
std
adc
aaa
es
jp
fbld
sarl
xchg
sub
adc
sbb
outsl
icebp
fldt
stc
mov
lds
xor
or
gs
fisttps
mov
mov
sub
loop
jle
jg
mov
stos
enter
cld
outsl
lcall
inc
push
shl
dec
sbb
jmp
rorb
insb
xchg
mov
pop
mull
push
test
pop
cld
jg
jle
ss
cmp
je
push
repnz
mov
ret
mov
cmp
jl
sti
mov
outsl
insl
xchg
pop
call
jne
hlt
ljmp
cld
enter
ja
rorl
push
cmpsl
vmwrite
hlt
xor
lock
loop
les
cmp
stc
adc
pop
sub
stos
xor
andl
mov
mov
pop
test
mov
mov
aaa
clc
push
mov
test
mov
lcall
lret
push
push
pop
leave
pop
xlat
mov
mov
mov
js
mov
int
mov
push
popa
and
xor
adc
adc
xchg
imul
lock
xchg
sub
in
aaa
mov
xchg
pushl
clc
hlt
fs
dec
xchg
cmp
xchg
mov
sub
repz
sbb
ljmp
adc
mov
dec
repnz
dec
xorl
mov
in
outsl
aas
sarl
mov
xchg
outsl
fstpl
dec
jl
pop
mov
mov
in
imull
lcall
std
aad
inc
sub
mov
xchg
xchg
cld
push
inc
imul
add
aas
jg
or
test
scas
mov
icebp
out
cld
and
sub
outsl
pop
loop
outsl
sahf
inc
xor
lods
mov
les
lret
mov
sub
jmp
adc
pop
imul
push
cmp
push
jl
cwtl
mov
dec
incl
outsl
mov
xor
cmp
sub
adc
call
clc
call
mov
cmc
sub
frstor
jbe
mov
adc
pushl
call
mov
daa
xchg
test
add
inc
das
pop
cli
sub
ret
sub
push
adc
push
incl
sbb
mov
mov
enter
mov
dec
mov
fcmovnu
jo
xlat
and
sti
notb
loopne
sbb
ret
xchg
inc
cmp
and
fistps
mov
dec
stos
lahf
jmp
pop
test
call
pop
xchg
lods
pusha
subb
loopne
mov
fistpll
cmp
mov
mov
cwtl
pop
mov
sub
sbb
push
xor
gs
cmc
ret
ss
jmp
divb
inc
dec
test
pop
or
mov
in
daa
std
mov
push
dec
sub
cli
js
gs
lock
div
jecxz
inc
jp
pop
mov
mov
aas
pop
pop
push
push
mov
mov
jns
insb
icebp
das
push
incb
or
popf
cmp
outsb
sar
pushl
cli
cld
out
or
jl
sbb
decl
popa
pop
inc
dec
jo
pop
lret
out
lods
out
jmp
popa
outsl
hlt
mov
xchg
mov
fimull
in
sbb
incl
ss
mov
pop
or
sti
imul
mov
lds
add
push
dec
insl
mov
fwait
daa
inc
fs
jmp
xor
in
sub
shlb
pop
clc
in
aas
shll
adc
bound
sar
xchg
sbb
ljmp
icebp
push
lock
ss
push
sbb
sub
or
jg
rcrb
xor
cmp
ret
sub
in
das
mov
lret
or
popa
cs
sub
sbb
call
jnp
pop
int
cwtl
fcompl
ljmp
cld
mov
cld
add
test
out
sbb
add
sub
pop
pop
mov
or
leave
or
aaa
jle
aam
jle
call
and
imul
sahf
dec
addl
mov
stc
push
call
cli
lods
fldl
scas
into
les
add
sbb
xchg
xor
inc
lcall
outsb
lcall
jp
jo
rcl
mov
mov
lea
std
call
shll
les
data16
mov
push
int
add
jg
lahf
lret
out
cmp
mov
js
sub
jg
sti
mov
loopne
dec
stos
cs
push
xor
push
outsl
sar
or
cmpsl
jns
jle
aad
mov
pop
jb
loop
jge
jp
ret
lahf
fidivrl
dec
mov
insb
notb
adcb
icebp
xchg
mov
xlat
sbb
sub
lret
jbe
mov
xchg
incl
ja
ds
fbld
xchg
std
push
out
das
mov
mov
outsb
mov
outsl
call
adc
push
mov
mov
ljmp
cmp
pushf
adc
mov
insl
pop
push
and
add
push
mov
jb
push
jnp
dec
ja
inc
or
jmp
or
in
or
add
pop
jo
mov
and
jg
decl
in
xor
inc
push
ret
out
and
mov
leave
jne
ret
jecxz
cmc
and
inc
push
lretw
pop
push
outsl
icebp
mov
mov
lock
outsb
xchg
testb
or
incl
sub
cli
std
dec
jbe
sahf
or
cmp
cld
filds
xchg
bound
movsb
je
std
scas
fs
mov
ret
pushl
push
add
push
lcall
gs
cmpsl
push
push
cli
das
sbb
in
mov
iret
loopne
ret
jmp
popf
call
cmp
in
negl
insl
lahf
push
jg
inc
cmpsb
clc
aad
enter
mov
mov
outsl
or
adc
inc
cltd
sub
loopne
lds
rorb
imul
in
in
jo
loope
sti
mov
or
mov
call
push
sar
incl
add
cwtl
lock
jmp
xchg
mov
decb
jnp
dec
stos
psubsb
das
icebp
pop
xchg
jo
int3
fstpl
lret
std
pop
pop
ljmp
dec
xchg
test
aaa
incl
ja
lret
adc
fs
jae
shl
out
mov
xchg
push
adc
xor
aad
movsb
fwait
mov
inc
ss
jmp
and
cld
jne
mov
inc
pop
inc
inc
add
mov
outsl
push
outsl
imul
dec
inc
dec
inc
cli
lcall
add
inc
push
push
inc
inc
inc
push
inc
push
inc
mov
cld
incl
rorb
push
add
add
je
jb
arpl
fs
jae
insl
dec
outsl
fs
gs
popa
outsb
fs
in
mov
gs
imul
insl
jo
jb
std
dec
mov
push
imul
outsb
inc
arpl
idivb
jns
bound
dec
popa
push
add
sub
ljmp
in
inc
push
insl
push
adc
dec
fs
insl
popa
addr16
js
fcmovnbe
insb
inc
ljmp
jne
jns
fucomp
dec
mov
cmc
sub
je
push
cwtl
push
outsl
pop
push
mov
inc
bound
je
jns
imul
lods
push
or
and
outsl
outsl
je
inc
pop
xor
outsl
jbe
es
arpl
pusha
outsl
mov
cmovns
dec
inc
or
mov
faddl
cs
mov
push
outsb
xchg
add
push
ja
jae
rcr
jo
outsb
je
inc
or
push
in
mov
pop
dec
gs
jo
push
popa
insb
imul
arpl
or
mov
imul
adcl
mov
inc
inc
inc
insb
xorb
pop
int3
mov
push
imul
jae
or
insb
push
jnp
xchg
inc
arpl
gs
push
push
inc
xor
jo
jo
mov
insl
push
icebp
jge
outsb
jae
outsb
outsw
cmpsb
push
push
ja
arpl
imul
sbb
sbb
push
and
scas
add
add
dec
push
and
push
cmc
or
or
loopne
mov
orl
arpl
mov
push
fs
je
inc
or
inc
insb
addr16
mov
push
insb
inc
inc
pop
iret
pop
or
and
insb
push
push
inc
xchg
sti
sbb
fsubrs
push
imul
imul
inc
clc
inc
outsl
js
lods
mov
gs
aaa
lret
dec
outsl
popa
shrl
or
lea
adc
cmp
sti
inc
outsb
popa
bound
adc
mov
outsb
mov
sbb
outsb
push
sbbb
mov
cwtl
cmp
or
ss
movups
aam
popa
cmp
fnsave
jo
xor
inc
ret
inc
inc
sbb
dec
gs
scas
rcrl
jg
adc
dec
adc
jecxz
xchg
gs
fistpl
psrlw
cmp
adc
push
jne
fnstenv
inc
bound
das
popaw
ret
mov
je
rorb
dec
lret
xchg
je
dec
imul
jnp
xchg
lcall
lcall
pcmpgtb
imul
mov
mov
je
adc
and
cmp
push
and
sub
call
das
rorb
adc
jb
in
in
push
inc
pop
inc
jno
lods
xor
adc
testb
addr16
ss
cwtl
xor
mov
jmp
popf
and
xor
cmp
test
inc
fs
jb
int
xchg
xchg
je
sub
inc
popf
je
lea
push
insb
push
jo
sbb
adc
lret
fildl
idivl
fdivs
or
jae
lods
push
or
cwtl
insl
out
and
xchg
adc
or
lea
push
outsl
pushf
adc
dec
push
or
shrb
loop
mov
mov
xorps
cwtl
mov
push
mov
and
std
mov
and
push
xchg
dec
add
insb
jmp
inc
adc
add
add
test
adc
data16
test
adc
add
or
out
out
cmp
add
add
dec
mov
push
sub
pop
in
pop
testb
int3
popa
and
adc
shll
pop
popa
push
je,pn
test
nop
jmp
inc
and
shrl
jb
jge
or
or
inc
adc
mov
add
es
daa
jo
cmpsb
movsb
imul
jnp
add
pop
inc
add
cmpb
and
pop
loop
add
add
add
add
add
add
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
mov
push
test
inc
xor
nop
test
mov
mov
adc
push
jo
and
add
dec
mov
mov
or
out
add
push
stc
pop
push
jecxz
mov
mov
add
idivb
dec
sub
in
jno
test
fisubl
pop
sbb
das
inc
dec
sarl
xchg
mov
mov
jge
sub
out
mov
movsb
inc
xchg
jno
mov
dec
pop
xor
in
cs
popa
xchg
mov
jp
cmpsl
call
pop
dec
fbstp
dec
and
lahf
or
pushf
jge
dec
inc
lods
add
push
scas
mov
into
mov
fbld
mov
sbb
mov
bound
cli
pop
inc
out
lock
xchg
pushf
push
sbb
jne
sbb
pop
ljmp
cmp
fs
mov
inc
das
bound
push
dec
pop
pop
cmpsl
lods
fsubs
outsb
or
jecxz
lds
loope
xchg
int
add
cli
push
sbb
or
into
mov
out
add
inc
cmp
mov
xchg
fwait
inc
xlat
mov
jnp
pop
test
inc
pusha
ficoml
xlat
sahf
inc
popa
scas
addr16
or
mov
es
push
sahf
mov
sti
add
test
xchg
pop
or
mov
push
xchg
inc
cmp
movsb
inc
mov
sub
or
xor
jmp
stos
cli
xor
pop
mov
lea
movsl
inc
add
mov
repnz
js
xchg
insl
xchg
out
fisttps
rcll
loope
inc
xchg
mov
into
mov
sub
movsb
cli
out
xor
jnp
xchg
scas
cmc
in
and
jg
and
jmp
inc
add
add
add
add
sub
add
enter
adc
add
or
add
add
add
add
add
push
add
addb
add
js
add
mov
add
add
add
add
add
dec
push
add
push
add
add
add
add
push
add
mov
add
sbb
add
pop
add
push
add
add
add
add
add
addb
add
sbb
add
add
add
pop
add
xor
add
add
add
and
add
add
add
sbb
add
add
add
add
clc
add
add
add
sub
add
xor
add
pusha
add
add
add
std
add
jg
add
fcomi
add
pop
jg
jg
add
jg
add
add
sti
ja
mov
sti
ja
mov
jnp
add
popa
xor
inc
and
jns
fsubl
xor
fs
test
arpl
mov
jecxz
push
pop
push
js
adc
std
into
pop
mov
cmp
ljmp
int
js
inc
inc
cli
mov
sti
inc
sbb
out
ret
ret
push
xchg
xchg
mov
daa
jle
or
adc
ret
or
icebp
dec
scas
cmp
mov
daa
fcoml
pop
add
stos
push
pop
dec
sub
nop
cmc
dec
test
push
std
in
dec
xchg
sbb
popf
cmp
dec
pop
addl
cmp
sub
call
mov
sub
das
aaa
xor
insb
mov
jne
out
jg
jns
and
jle
mov
loopne
aad
push
add
in
lret
test
cwtl
sbb
das
fimuls
loope
push
xlat
movsb
and
call
repnz
call
sub
fstp
mov
in
ret
shlb
popa
in
and
cmpsb
jp
enter
push
cmp
test
repnz
jbe
fbstp
lods
mov
call
test
insl
and
bound
or
sti
cld
in
repnz
fimuls
cmp
mov
jnp
scas
je
fstpl
jge
lret
and
adc
jnp
inc
mov
and
fs
addr16
xor
cmp
nop
cld
adc
add
dec
inc
testb
stc
or
outsl
push
mov
inc
popa
adc
cmp
push
mov
sub
mov
pop
ror
push
dec
adc
mov
xchg
and
sub
xchg
sbb
mov
mov
mov
xchg
bnd
jo
mov
mov
in
int3
fdiv
mov
add
xchg
mov
mov
mov
xchg
insl
fnsave
test
ret
loop
or
test
movsl
dec
jg
and
lods
fwait
jno
fwait
lcall
rcl
ja
pop
or
xchg
int
mov
sbb
cmp
lock
jnp
cs
int
cmp
imul
lods
mov
push
out
dec
mov
into
cmp
shlb
mov
lahf
dec
fs
adc
filds
mov
xor
inc
mov
not
sbb
hlt
repz
gs
sbb
pop
xchg
ret
and
icebp
inc
mov
inc
jae
pop
je
je
movsb
mov
sbb
xchg
sar
jne
adcb
stos
subl
add
mov
mov
adc
and
mov
icebp
sahf
push
mov
pop
inc
xchg
idivb
in
xor
ss
push
mov
mov
mov
icebp
js
push
jmp
je
mov
and
mov
sbb
add
cld
mov
sub
ja
mov
repnz
testl
cmpsl
dec
sub
loope
lock
push
aad
cli
push
add
and
pop
movb
addb
pop
push
mov
xchg
cli
fwait
lret
nop
popa
insl
dec
in
mov
data16
mov
xchg
and
sbb
xor
adc
outsl
and
dec
leave
rclb
inc
mov
mov
outsb
xlat
xor
jmp
pop
shrb
push
pop
sbb
pop
enter
push
adc
xlat
xor
out
sbb
push
mov
ss
mov
xchg
das
in
dec
ror
dec
push
notb
fisubrl
repnz
out
mov
add
mov
scas
mov
xchg
mov
pop
push
adc
cld
lcall
cmc
jno
pushf
lret
sub
cwtd
fwait
add
or
in
add
adc
inc
cmp
pop
rcrb
jno
nop
pop
push
inc
scas
pop
cs
and
cmp
push
jns
nop
and
divl
push
and
and
stos
loop
icebp
push
inc
xor
cmp
jnp
dec
mov
xchg
xor
push
loope
bound
jmp
mov
mov
aas
add
add
mov
add
sub
add
and
add
inc
add
add
add
add
incl
js
adc
ss
dec
fistpll
sub
sbb
ss
imul
xorb
stos
lret
lds
mov
sub
in
daa
stos
out
pop
cli
ret
rcrb
bound
fidivs
cmp
stc
lds
cmp
ret
pop
pop
addb
mov
sarb
imul
pop
cmp
add
add
sub
add
adc
add
and
add
add
add
jmp
mov
add
mov
add
imul
jmp
sti
add
mov
mov
add
ds
add
sub
add
repz
jmp
add
xchg
test
test
and
out
mov
xlat
aaa
mov
sbb
sar
leave
fwait
stc
cmp
lods
pop
fsubrs
cs
test
dec
sbb
mov
fldl
mov
fisubl
xor
stos
shll
jo
dec
adc
xchg
rcrb
fdivrl
pop
cs
xchg
cmpsb
push
add
and
add
sub
add
add
add
add
xor
add
add
push
add
and
add
add
add
add
adc
add
add
push
add
sub
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
xor
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
add
xor
and
push
add
data16
add
jb
add
add
add
pop
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
add
xor
and
dec
add
je
add
outsb
add
je
and
inc
add
outsl
add
jae
add
add
add
sub
add
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
cmp
xor
add
add
sub
push
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jo
add
xor
add
outsb
add
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
xor
and
push
add
data16
add
jb
add
add
add
add
add
add
add
add
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
add
xor
add
js
add
add
pop
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
add
xor
and
dec
add
je
add
outsb
add
je
and
inc
add
outsl
add
jae
add
add
add
xor
push
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
pop
add
nop
pop
add
loope
add
lods
pop
add
out
pop
add
mov
add
stc
pop
add
mov
add
add
pop
add
adc
add
pop
add
sbb
add
sub
add
pop
add
dec
pop
add
pop
pop
add
pop
add
add
add
je
add
add
add
sbbb
add
add
mov
add
add
add
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
popa
addr16
insb
insb
add
gs
cs
insb
add
insb
ja
jo
cs
insb
add
gs
xor
fs
insb
add
outsb
jae
outsl
outsl
insb
cs
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
imul
gs
js
add
dec
insb
gs
dec
inc
jne
jns
add
push
popa
je
dec
jae
dec
inc
push
add
push
gs
outsb
jne
add
dec
jo
outsb
push
jb
outsb
je
jb
