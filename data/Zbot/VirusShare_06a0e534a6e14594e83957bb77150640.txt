stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
xor
mov
mov
pusha
call
add
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
pop
push
mov
sub
push
push
push
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
mov
add
call
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
jmp
ret
cld
xor
lea
add
mov
mov
shl
sub
sub
mov
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
je
mov
sub
ja
push
pop
je
popf
push
pushl
decl
ret
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
mov
add
call
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
mov
add
call
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
mov
add
call
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
add
lea
sub
sub
mov
pop
mov
mov
lea
mov
push
mov
xorl
pop
sub
or
xor
cmp
je
sub
mov
push
push
push
pop
push
pop
stos
shr
stos
shr
stos
shr
stos
pop
pop
subl
neg
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
mov
add
call
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
mov
add
call
stos
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
mov
add
call
stos
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
mov
add
call
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
stos
stos
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
push
push
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
.byte
add
add
pusha
and
add
and
add
and
add
and
add
and
add
and
add
add
dec
and
add
and
add
and
add
and
add
add
repnz
add
add
outsb
and
add
and
add
and
add
add
add
add
push
add
mov
add
cld
and
add
and
add
add
pushf
and
add
and
add
and
add
add
les
add
test
add
add
add
inc
and
add
and
add
add
sbb
add
add
add
jp
add
add
add
adc
add
cmp
add
add
add
push
add
add
add
add
and
add
add
mov
add
add
add
add
add
and
add
add
add
add
pusha
and
add
and
add
and
add
and
add
and
add
and
add
add
dec
and
add
and
add
and
add
and
add
add
repnz
add
add
outsb
and
add
and
add
and
add
add
add
add
push
add
mov
add
cld
and
add
and
add
add
pushf
and
add
and
add
and
add
add
les
add
test
add
add
add
inc
and
add
and
add
add
sbb
add
add
add
jp
add
add
add
cmp
push
jb
jbe
je
push
jb
imul
inc
add
add
popa
jo
jb
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
addl
jb
popa
je
inc
imul
jns
add
push
push
je
imul
inc
add
ret
gs
jne
jb
outsb
je
jb
arpl
jae
repnz
imul
jb
je
arpl
add
aad
inc
imul
gs
add
je
imul
bound
gs
add
rolb
insb
outsl
bound
dec
outsl
arpl
add
add
je
imul
bound
gs
add
movsl
add
je
gs
imul
xchg
add
je
jne
jb
outsb
je
push
add
and
gs
outsl
insl
insl
inc
jb
popa
imul
je
push
gs
popa
jae
inc
jb
outsl
jb
add
insb
outsl
jae
dec
popa
outsb
fs
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
dec
outsl
arpl
inc
insb
popa
addr16
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
gs
outsl
jbe
inc
imul
jns
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
pushf
pop
dec
outsb
jae
jb
dec
outsb
jne
add
jo
je
push
popa
addr16
add
pop
or
jae
dec
gs
popa
addr16
add
jae
push
gs
jne
jae
jb
outsl
jae
add
inc
gs
imul
outsb
addr16
add
rolb
jae
imul
xchg
push
push
gs
jae
addr16
add
movl
outsl
insl
gs
sbb
ja
jo
imul
pop
dec
outsl
popa
fs
jne
jae
jb
add
push
gs
outsl
arpl
add
xchg
inc
gs
imul
js
push
add
mov
dec
jae
imul
jae
popa
addr16
add
push
push
inc
push
xor
cs
insb
add
add
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
add
jb
popa
je
inc
gs
je
jo
arpl
add
add
push
imul
jb
gs
dec
inc
push
push
dec
inc
dec
dec
cs
insb
add
xor
jae
push
push
popa
je
add
push
pop
push
dec
inc
dec
inc
cs
insb
add
push
fisubrs
mov
aas
outsb
loopne
rcl
pop
and
fmuls
test
adc
es
push
ja
mov
mov
or
cmc
iret
xor
or
shrb
dec
xchg
icebp
fildl
adc
mov
adc
leave
das
push
pop
ljmp
sbb
adc
adc
loope
cld
aam
repnz
shlb
mov
pushl
loop
jle
lods
scas
ret
and
in
jl
int3
and
push
inc
sbb
fs
xchg
cmp
sub
sbb
and
sub
mov
sub
mov
in
cmpsl
sahf
fisubl
fistl
mov
push
das
sbb
fucomi
xchg
dec
mov
idiv
inc
int3
insb
push
out
cld
fsts
loop
adc
cmp
cltd
mov
push
mov
mov
dec
mov
movsb
dec
pop
add
xor
add
adc
scas
jmp
adc
fcompl
mov
je
lods
das
jle
sub
pop
and
leave
push
sbb
rcll
push
push
rcll
insl
aaa
fsubl
das
std
sub
rclb
sub
cmp
pusha
or
push
xchg
dec
xchg
push
mov
test
mov
rcll
addr16
mov
fcmovne
sbb
inc
mov
cwtl
fs
mov
push
pop
ss
rcrl
xor
xor
jo
xor
scas
xchg
out
inc
jo
cmpsl
pop
push
cltd
jge
out
cmp
clc
xchg
push
mov
xlat
adc
stos
mov
sarl
out
push
xor
xor
mov
mov
out
lods
mov
adcl
xlat
sbb
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
popa
add
test
add
clc
xchg
add
add
add
add
add
or
add
mov
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
xchg
xchg
xchg
add
scas
lods
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
stos
lods
mov
mov
fwait
pop
xchg
xchg
xchg
or
jge
jp
jp
lods
stos
stos
add
test
mov
mov
mov
les
int
int3
rcl
in
rcl
shl
ror
iret
hlt
int
int
leave
leave
enter
out
in
mov
mov
stos
stos
lods
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
sahf
add
mov
jae
mov
lret
lret
not
rcl
cld
fcom
xlat
std
fcom
fdivr
xlat
xlat
aad
ror
sar
into
int3
int
aam
iret
ror
inc
ret
mov
mov
scas
iret
movsl
movsl
mov
dec
das
das
xor
add
add
add
add
add
add
add
add
add
add
lods
lods
stos
add
lods
sbb
mov
jnp
mov
mov
dec
lret
lret
call
rcl
aam
aam
fcom
call
xlat
xlat
call
aam
dec
int3
int3
dec
int3
int3
call
aam
dec
int3
int
rol
mov
mov
scas
std
test
test
xchg
xchg
xchg
mov
push
pop
or
or
add
add
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
inc
add
pop
add
push
or
or
sbb
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
dec
enter
into
into
call
rcl
call
fcomp
call
fdivr
aad
dec
int
dec
lret
leave
dec
int3
int
rol
mov
mov
jmp
mov
fwait
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
push
imul
aas
cmp
das
or
sbb
cmp
cmp
cmp
and
and
pop
push
push
pop
add
add
add
add
gs
mov
pop
mov
mov
mov
mov
mov
rol
ret
mov
call
aad
call
aam
call
iret
sar
mov
ret
ret
mov
mov
scas
scas
scas
jmp
pushf
xchg
xchg
xchg
lcall
test
pop
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
jo
jge
jl
jg
jle
jno
jo
arpl
mov
cmp
cmp
mov
outsl
jo
nop
arpl
pusha
inc
inc
inc
xor
add
add
add
add
movsb
movsb
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
lret
dec
lret
leave
inc
leave
inc
mov
mov
scas
lods
scas
jmp
fwait
call
xchg
xchg
xchg
xchg
xchg
cltd
cltd
lcall
ds
push
push
push
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
jo
jo
pop
pop
pop
or
pusha
lea
incb
jp
jp
jnp
outsl
outsb
outsb
out
push
push
ret
jle
jns
js
arpl
inc
inc
inc
cmp
sbb
sbb
movups
stos
stos
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
test
lcall
xchg
incl
addb
xchg
xchg
lahf
lahf
lahf
sti
mov
xchg
cwtl
mov
jns
js
das
das
xor
add
add
add
add
add
add
add
add
add
add
mov
push
push
addl
in
mov
incl
xchg
std
xchg
jg
jo
jo
jne
jae
jge
jg
test
jnp
push
cmp
ss
jle
jg
lcall
shrb
stos
stos
sti
stos
lods
lods
lods
lods
stos
stos
stos
test
std
cltd
fwait
cltd
xchg
xchg
xchg
decl
jle
js
jp
jp
jnp
xchg
xchg
movsl
mov
scas
sti
mov
mov
mov
mov
mov
lods
scas
stos
test
push
adc
add
or
add
add
add
add
add
add
push
pop
adc
mov
mov
xchg
xchg
xchg
incl
xchg
lea
std
xchg
cwtl
cwtl
stc
xchg
xchg
xchg
in
mov
or
addl
mov
push
pop
push
push
or
inc
dec
insb
imul
xchg
leave
fwait
cltd
lcall
lcall
mov
mov
mov
mov
mov
fwait
jmp
scas
scas
mov
mov
mov
mov
mov
std
mov
mov
movsl
mov
jnp
lods
cmpsb
lods
add
pop
adc
scas
call
cltd
xchg
cwtl
incl
xchg
decb
xchg
xchg
pushf
sahf
pushf
std
mov
mov
xchg
in
nop
xchg
in
xchg
push
jne
cmovp
add
or
sub
dec
dec
data16
jno
mov
xchg
rclb
xchg
xchg
std
lea
call
lahf
mov
ljmp
lods
pushl
lahf
mov
mov
xchg
mov
mov
ljmp
mov
add
pop
adc
scas
mov
ret
lcall
xchg
mov
call
nop
xchg
xchg
xchg
xchg
pushf
pushf
popf
movsl
movsb
movsb
test
movsl
movsb
notl
jl
movsl
push
push
push
outsl
dec
dec
dec
pop
bound
jno
jae
jnp
jge
test
mov
mov
xchg
testl
lea
jmp
mov
mov
pop
nop
mov
ss
mov
ja
mov
movsb
mov
mov
lods
stos
mov
movsb
movsb
add
pop
pop
adc
mov
ljmp
popf
decl
xchg
nop
call
xchg
xchg
call
xchg
cwtl
fwait
lcall
sahf
lahf
mov
std
mov
lcall
nop
nop
xchg
les
cwtl
fwait
in
xchg
xchg
out
mov
stc
xchg
xchg
std
xchg
jb
lcall
jmp
inc
jl
mov
jns
mov
jb
mov
outsl
ljmp
adc
stos
or
or
pushl
mov
mov
pushf
movsl
movsl
mov
add
pop
pusha
adc
mov
ljmp
popf
call
xchg
xchg
lcall
sahf
sahf
jmp
sahf
pushf
lcall
xchg
xchg
call
xchg
nop
call
xchg
fwait
cld
xchg
cltd
popf
stc
sahf
lcall
sahf
mov
xchg
push
xchg
pop
jge
xchg
dec
jns
fwait
jbe,pt
fwait
sub
pop
push
jmp
adc
stos
adc
lods
adc
stos
adc
scas
adc
mov
imul
mov
imul
aas
cmp
fwait
lods
mov
lods
lods
scas
movsb
movsb
mov
add
add
add
add
add
pop
pop
adc
mov
ljmp
popf
call
sahf
jmp
movsl
movsl
jmp
mov
xchg
decl
mov
decl
js
fwait
jb
cltd
bound
call
cs
decl
adc
xchg
or
call
add
lcall
ljmp
sbb
pushl
sbb
jo
mov
and
mov
and
aas
test
ret
mov
scas
scas
mov
mov
movsb
mov
add
add
add
pop
pop
adc
lods
mov
shlb
lcall
movsl
movsl
ljmp
cmpsl
test
test
cmpsb
cmpsl
lcall
orb
mov
decl
popa
decl
pop
incl
add
incl
add
lea
push
decl
add
lcall
ljmp
push
outsl
pushl
sub
mov
sub
les
jge
jg,pn
leave
das
cmp
inc
mov
leave
scas
mov
mov
lret
movsl
dec
mov
movsb
movsb
add
push
adc
test
ljmp
lahf
jmp
stos
test
stos
lods
stos
ljmp
mov
ljmp
mov
mov
mov
push
incl
or
addl
incl
add
addb
incl
add
xchg
add
xchg
add
fwait
add
lahf
add
mov
adc
mov
ss
enter
lret
dec
cmp
call
cmp
mov
rorb
dec
mov
std
mov
mov
movsb
movsl
movsb
push
mov
mov
add
add
add
mov
dec
dec
adc
mov
mov
lahf
fwait
sahf
ljmp
lods
scas
pushl
mov
pushl
mov
ljmp
decl
or
mov
pop
decl
or
test
push
incl
add
mov
push
call
add
pushf
add
mov
add
stos
add
sbb
inc
cmp
int3
inc
call
inc
call
dec
mov
fmuls
call
dec
xchg
fisttpll
ficoml
call
test
std
mov
mov
movsb
movsb
movsl
arpl
mov
add
add
add
fwait
xchg
cltd
add
inc
adc
jl
sahf
mov
jmp
test
pushl
mov
mov
mov
mov
mov
mov
mov
jmp
outsl
decl
sbb
call
push
pop
decl
push
decl
add
xchg
add
sahf
add
add
cmpsb
add
test
pop
gs
mov
dec
mov
push
xchg
fcoms
ficoml
fstl
ficoms
fistps
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
cmpsb
cmpsb
test
mov
sahf
sahf
add
inc
inc
adc
jns
mov
mov
lahf
ljmp
mov
pushl
mov
mov
pushl
xchg
mov
decl
and
xchg
and
xchg
and
xchg
sbb
or
call
add
lcall
jmp
add
mov
data16
mov
xor
fcomps
fisubs
jmp
arpl
jmp
data16
out
cmpsl
call
push
test
dec
mov
mov
mov
mov
add
add
add
xchg
xchg
xchg
add
aas
adc
jp
xchg
lcall
pushf
lahf
ljmp
mov
pushl
mov
mov
mov
mov
jle
xchg
sub
fwait
xor
lcall
lcall
or
xchg
add
lcall
jmp
add
mov
pushw
adc
rolb
fldt
jmp
outsb
lods
jmp
jno
jmp
jno
ljmp
in
jae
out
je
in
je
out
jb
jmp
mov
mov
cmpsl
cmpsb
lcall
lahf
add
add
imul
mov
lcall
mov
mov
mov
mov
mov
mov
mov
cmpsl
lods
lcall
jo
sahf
aaa
jne
mov
xor
lcall
call
add
movsb
add
add
mov
popa
pushl
add
sbb
fsts
jecxz
mov
jmp
jge
in
xorb
lock
push
test
ljmp
mov
test
cmpsl
popf
popf
pushf
daa
sahf
mov
mov
add
popa
add
aaa
cmp
pop
pop
push
jne
jge
out
xchg
xchg
xchg
xchg
pushl
mov
mov
mov
ret
sar
mov
jmp
cmp
movsb
inc
jle
mov
cmp
fwait
sbb
xchg
add
sahf
add
movsl
add
add
lods
add
mov
data16
mov
add
shlb
movsb
jmp
mov
push
sar
pop
push
pop
push
xchg
push
xchg
push
xchg
clc
mov
out
pop
clc
stos
lods
stos
mov
popf
sahf
xor
sahf
popf
add
add
add
aas
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
xchg
pushl
mov
mov
inc
inc
inc
mov
jl
lcall
cmp
dec
test
mov
adc
cltd
add
mov
add
stos
add
mov
arpl
mov
add
leave
add
fdivs
mov
in
xchg
ret
push
fwait
push
lcall
cmc
fwait
enter
leave
clc
pushf
int3
cld
sahf
int3
sti
lahf
int
cld
cltd
lret
push
xchg
ret
jmp
mov
cli
mov
mov
sahf
mov
nop
add
add
add
add
cs
cmp
dec
jecxz
pop
decl
mov
mov
mov
sar
ret
inc
enter
mov
mov
ljmp
push
mov
movsl
sub
lcall
jmp
add
mov
popa
mov
add
movl
jne
filds
out
lea
push
movsb
int
cmc
movsb
int
clc
cmpsl
iret
cld
test
sti
cmpsl
sar
sti
test
iret
test
iret
push
lahf
jmp
mov
dec
lret
mov
mov
mov
xchg
xchg
add
cltd
cltd
add
add
add
xor
daa
sub
or
bound
pop
xlat
je
jo
mov
mov
mov
inc
mov
leave
leave
leave
inc
ret
mov
cmpsl
jmp
push
mov
scas
dec
test
mov
add
mov
add
mov
fs
mov
add
int3
add
fadds
jae
loopne
jge
out
pop
cmpsb
push
popf
leave
cld
lods
sar
cld
mov
sti
scas
aam
cld
mov
mov
mov
cld
mov
std
mov
pushl
sar
mulb
call
lret
mov
mov
sahf
sahf
lahf
pusha
xchg
xchg
xchg
or
add
add
xor
sbb
dec
outsl
outsb
outsl
mov
mov
fcom
jmp
fcomp
test
into
into
dec
leave
lret
leave
lret
dec
leave
lret
inc
leave
mov
scas
ljmp
push
mov
stos
jg,pt
mov
add
add
mov
arpl
mov
add
roll
outsl
call
add
add
ljmp
cld
lods
sar
std
mov
cld
mov
fcos
cld
mov
xlat
mov
fdivr
std
mov
xlat
push
mov
jmp
mov
call
lret
int3
mov
sahf
lahf
jo
xchg
xchg
or
add
add
xor
xor
add
add
pop
pop
pop
or
leave
movb
loop
call
call
jecxz
fucom
fcmovnu
fcomi
fcomp
fsqrt
aad
fdivr
int3
iret
iret
mov
push
test
test
jb
mov
add
mov
popa
mov
add
lret
call
add
faddl
ja
jecxz
js
out
das
xchg
stc
mov
cli
mov
inc
loopne
inc
loope
inc
loopne
inc
fdivrp
dec
loopne
std
fdivrp
dec
fdivrp
std
leave
fdivrp
std
lret
loopne
sti
mov
enter
iret
mov
mov
xchg
adc
add
add
incb
std
std
add
incl
repnz
hlt
or
out
in
pop
jmp
out
sub
out
in
dec
ljmp
xchg
out
jmp
aad
fstp
jmp
mov
xchg
cmpsl
cmp
mov
add
test
pop
pushl
add
lds
imul
add
add
call
inc
popf
cld
mov
jecxz
cld
int3
loop
dec
in
std
int3
in
dec
loop
dec
loop
dec
loopne
std
shl
std
shl
std
shl
call
in
cli
out
mov
xlat
inc
cmpsl
cmpsl
mov
cwtl
xchg
add
add
add
std
add
std
incl
div
testb
repnz
repz
push
in
repnz
pop
out
icebp
out
cmp
out
in
pop
loopne
loop
mov
xchg
sti
lahf
es
pop
pop
jmp
add
mov
inc
add
enter
rolb
jb
fildl
jne
in
jp
in
adc
negl
sti
mov
shl
cld
shl
std
shr
std
shl
std
shl
std
aam
std
fsub
xlat
call
std
fucompp
fucompp
std
shl
push
ret
jmp
rcr
dec
lret
test
stos
fwait
xchg
xchg
xchg
and
xchg
cwtl
add
std
cli
add
cld
stc
add
cld
cli
add
cmc
cmc
or
shlb
sarl
negb
add
cmpsb
add
lods
add
mov
add
leave
add
roll
jb
fildl
jne
out
js
in
sbb
cli
fldl2e
fldl2t
fldpi
fldl2e
std
fldl2e
fucomp
fsubr
std
fucomi
fsubrp
fsubrp
std
fsubrp
std
shl
push
aam
out
fdivr
rcl
iret
clc
lods
lods
stos
lods
xchg
xchg
xchg
outsl
outsl
jo
xchg
xchg
xchg
add
loop
add
enter
mov
cwtl
repnz
and
lahf
add
test
pusha
pushl
add
ret
dec
add
aad
jae
filds
jne
call
sub
shl
fucomip
std
fucomi
std
fucompp
fldl2t
std
call
cld
shl
sti
iret
loop
cld
iret
loopne
test
test
out
mov
fcos
fcom
sti
mov
mov
fwait
fwait
cltd
cmp
fwait
add
add
mov
subb
insb
lcall
add
mov
arpl
mov
add
rolb
outsl
call
add
loope
jp
ljmp
cli
xchg
sti
lret
cld
lret
cld
stc
rcr
idivl
push
mov
iret
out
mov
int3
ljmp
std
call
shl
ljmp
in
mov
mov
xchg
add
add
add
lret
add
mov
cmpsl
loopne
xor
jmp
add
mov
addr16
mov
add
dec
or
rorl
je
fisttpl
jns
loop
cmp
dec
cwtl
jmp
mov
call
mov
std
loop
scas
ret
cli
enter
lret
vpmulhw
leave
into
rcl
shl
xlat
fcmovb
out
loope
in
in
test
out
out
popf
ljmp
push
stos
lods
lods
adc
cmpsl
test
add
ret
rolb
ret
mov
sahf
lods
aam
dec
cmp
cmpsb
sbb
jb
mov
jns
mov
inc
test
ret
stc
lret
test
mov
shll
enter
leave
lret
lret
rcl
lret
mov
iret
shlb
xlat
rcl
jg
fcmovnu
jb
gs
jecxz
out
call
xor
div
cmc
and
repnz
sbb
or
mov
int3
add
add
add
rol
mov
scas
mov
test
lcall
je
ljmp
mov
sarb
test
mov
mov
cmpsl
mov
mov
leave
int
ror
shlb
ror
push
rcl
rorb
fcom
inc
rcl
aam
aam
fldenv
fcomp
ficompl
fchs
fcoml
fsubp
loop
loopne
jecxz
out
ljmp
cli
testb
sti
add
std
add
std
incb
mov
mov
mov
mov
stos
mov
mov
mov
mov
mov
ret
push
rol
inc
ret
xor
into
lret
rcl
and
rcrl
iret
aam
rcl
aam
rcr
push
aam
add
add
add
jecxz
add
in
ljmp
std
add
mov
add
ret
ret
sub
ret
ret
sub
mov
mov
push
ret
or
leave
movl
int
add
roll
rcl
add
xlat
aad
aam
aad
aam
add
fchs
add
aad
add
loope
add
fstp
add
out
add
lock
add
std
incl
std
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
mov
ret
ret
mov
mov
ja
test
test
xchg
xchg
xchg
pop
add
add
add
add
add
add
mov
mov
mov
mov
mov
into
iret
shr
aad
aad
aam
sar
into
ror
cli
int
int
lret
hlt
mov
mov
stos
fwait
xchg
xchg
xchg
dec
ds
add
add
add
add
add
add
add
addl
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
enter
sar
xlat
xlat
aad
aad
aad
rcl
sar
into
into
int
lret
int3
lret
mov
mov
stos
stos
stos
icebp
xchg
xchg
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
jae
je
jne
fs
dec
inc
inc
cmp
sub
sub
aaa
xor
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
dec
lret
rcl
sar
rcl
aam
lret
lret
mov
inc
mov
mov
test
lahf
lahf
xchg
cwtl
cwtl
jmp
jo
xchg
pop
push
pop
dec
add
add
add
add
add
add
jg
jg
jl
jnp
test
jnp
imul
movsb
push
push
push
stos
imul
push
pop
pop
cmp
cmp
pop
jno
jno
scas
scas
scas
pop
mov
mov
mov
mov
mov
rol
mov
inc
mov
mov
jmp
lcall
xchg
xchg
xchg
fwait
fwait
fwait
out
addb
adc
adc
add
add
add
add
add
pop
cltd
cltd
lcall
cwtl
cwtl
fcoml
addb
jnp
jge
jp
jns
jns
jns
jp
jp
jb
jae
push
push
push
cmp
jne
sahf
sahf
sahf
mov
lods
scas
rep
scas
scas
sti
scas
scas
scas
std
test
test
pushf
pushf
sahf
call
xchg
call
mov
lods
jmp
scas
lods
leave
movsb
movsl
cmpsb
cltd
jae
jb
adc
adc
add
add
add
add
outsb
insl
insl
pop
nop
mov
loop
cwtl
popf
incl
mov
sti
xchg
xchg
xchg
lock
nop
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsl
outsb
jo
mov
cwtl
cltd
cltd
cwtl
repnz
xchg
xchg
std
mov
call
popf
sahf
ljmp
test
mov
mov
mov
xlat
cmpsb
mov
jg
popa
pop
pusha
or
lods
mov
cmpsl
lahf
mov
decl
call
lahf
mov
negl
addb
push
pop
pop
outsl
imul
jge
subl
mov
std
xchg
xchg
ljmp
jle
pushl
pop
mov
jnp
mov
lods
stos
insl
stos
stos
test
add
add
add
popa
or
mov
in
movsb
test
call
xchg
call
cwtl
fwait
fwait
popf
lcall
xchg
xchg
jmp
xchg
lea
jecxz
orl
cld
xchg
pop
jg
popf
dec
jl
movsl
inc
jp
lods
ss
scas
daa
jb
mov
insl
pushl
sbb
pop
mov
scas
scas
jle
movsl
mov
add
add
add
pop
or
mov
in
movsl
cmpsl
call
popf
popf
jmp
mov
cwtl
decl
addb
xchg
jno
cld
cwtl
popa
cmp
dec
js
cmp
xchg
sub
xchg
sbb
lcall
punpcklbw
test
sbb
mov
outsb
pushl
pop
jae
mov
pop
xchg
mov
scas
scas
xchg
popf
sahf
popf
adc
add
add
pop
pop
popa
or
stos
mov
stos
mov
lahf
ljmp
stos
test
lcall
pop
jp
mov
push
mov
decl
adc
or
mov
call
add
fwait
add
or
pushl
jnp
mov
xor
leave
xor
dec
pop
cwtl
inc
test
divl
test
add
add
add
pop
popa
pop
or
cmpsb
stos
in
mov
test
mov
mov
mov
mov
mov
mov
movsb
cwtl
mov
decl
push
push
incl
add
decl
add
xchg
add
sahf
add
cmpsb
add
mov
insb
inc
aaa
test
lret
dec
inc
mov
roll
call
inc
nop
fimull
call
arpl
stc
mov
mov
movsb
movsl
mov
add
add
add
popa
or
sahf
mov
ljmp
mov
mov
mov
stos
lcall
pop
popa
call
push
pop
decl
push
call
pop
jmp
add
mov
dec
xchg
call
pop
lcall
pop
lahf
jmp
pop
mov
jmp
insb
test
int3
cmpsl
mov
ret
movsl
xor
add
add
dec
pop
jle
jnp
pushf
xchg
cltd
jecxz
lahf
mov
pushl
mov
mov
lcall
sub
insb
call
cvtdq2ps
xchg
add
sahf
add
add
mov
arpl
mov
xor
jmp
outsb
test
ljmp
in
jae
jmp
jp
call
cmpsl
mov
shrl
addl
pop
outsl
insl
push
mov
xchg
pushl
mov
mov
mov
jne
lcall
cmp
pushf
sub
xchg
or
lcall
pop
ljmp
add
or
aad
xchg
jmp
js
jmp
mov
push
xchg
hlt
xchg
fisubl
mov
push
fwait
fwait
cltd
add
sub
sub
push
push
dec
pop
gs
loopne
mov
mov
mov
inc
mov
pushf
jmp
inc
jg
mov
push
pop
jmp
add
mov
gs
mov
push
jbe
loope
mov
push
xchg
cwtl
push
cwtl
push
fwait
leave
stc
lcall
loope
inc
mov
stos
popa
lahf
mov
add
xor
add
pop
pop
push
fisttpl
mov
mov
ret
ret
pushl
pop
xchg
lods
dec
cmp
and
lahf
add
popa
pushl
add
leave
add
fisubl
cmp
cmc
mov
into
stc
stos
into
sti
stos
sar
std
stos
sar
lods
sar
sti
cmpsl
int
call
mov
stos
jne
pushf
sahf
or
add
add
dec
dec
dec
aaa
jb
jb
stos
stos
stos
ror
int3
into
out
int
cmc
lret
lret
int3
sti
enter
enter
mov
pusha
mov
stos
inc
jle
mov
add
mov
gs
add
int
outsl
flds
je
call
xchg
cld
mov
cld
mov
xlat
mov
std
mov
sar
jmp
lret
rol
scas
lods
lods
mov
add
add
add
add
pop
or
rcl
dec
loope
jecxz
loopne
loopne
fstp
fadd
fcmovnu
fcmovu
aad
fsubr
shll
test
jae
cmpsb
or
scas
add
mov
add
add
in
jl
icebp
push
mov
cld
std
loope
inc
loopne
std
leave
fdivrp
std
leave
std
leave
loope
cld
out
mov
leave
divb
popf
sbb
add
add
incb
std
add
jmp
or
out
out
sbb
in
in
xor
loopne
jecxz
les
mov
mov
add
pushl
add
int
insl
faddl
jne
ljmp
sti
ret
cld
shl
shl
call
in
call
out
std
xlat
out
fsub
aam
push
enter
int
stc
mov
mov
add
std
add
incb
std
cld
incb
aad
push
mov
pop
xchg
lahf
or
test
add
add
rolb
jo
filds
jne
in
and
std
shl
fldl2t
std
fsubr
cld
fld1
cld
fldl2t
sti
fld1
cld
fld1
std
aam
push
jmp
iret
sti
mov
sahf
sahf
das
add
add
into
into
int3
or
bound
ljmp
gs
add
add
loop
jns
out
xor
sti
int
cli
lret
test
xlat
bnd
std
out
aam
in
sar
in
shl
jmp
shl
in
fsubr
enter
stos
test
std
add
add
add
aam
push
mov
jb
push
addr16
mov
insb
inc
pop
jae
int3
and
sub
fwait
clc
loop
mov
out
jecxz
lret
mov
lret
fadd
lret
sarb
jecxz
fcompl
in
jmp
rorl
mov
add
stos
stos
lods
add
xchg
movsl
les
pop
xchg
mov
fidivrl
jg
rol
lods
mov
lahf
mov
shlb
jge
int
aad
into
pop
rcl
iret
dec
xlat
xlat
fnstcw
loopne
fildll
jecxz
fisubs
in
repnz
in
jmp
fildl
std
std
add
add
add
std
incb
mov
mov
outsb
scas
mov
scas
mov
push
mov
mov
xor
mov
rcll
sarb
or
loopne
or
int
add
incb
std
std
add
add
add
into
int
mov
or
into
into
int
stos
stos
lods
add
std
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
lcall
rol
enter
leave
enter
mov
mov
mov
insb
stos
lods
lods
xor
je
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
jmp
aam
aad
rcl
sar
into
into
iret
std
mov
mov
cmpsl
test
sarl
gs
pop
pop
add
add
add
add
add
add
add
add
jno
jno
push
dec
dec
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
int3
int3
call
aad
dec
int
inc
mov
ljmp
lahf
sahf
sti
mov
xor
add
xor
add
sbb
jae
jae
test
adc
jo
ret
popa
mov
push
outsl
jb
popa
pusha
cmp
pop
sbb
mov
in
mov
mov
mov
lods
stos
lcall
xchg
lcall
cltd
cltd
lds
jb
and
add
pop
add
add
jb
jb
fwait
xchg
pushf
mov
xchg
mov
xchg
or
addb
dec
push
push
inc
mov
pushf
into
mov
lahf
lahf
sti
xchg
xchg
xchg
decb
lea
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
jg
adcb
movsl
cmpsl
cmpsl
stos
mov
mov
mov
xchg
cld
sahf
sahf
popf
cmc
cltd
lcall
push
push
push
imul
jg
lea
xchg
notl
mov
mov
cltd
pushl
jo
mov
lods
lods
push
stos
stos
stos
add
add
add
cmpsl
scas
test
xchg
xchg
xchg
call
lcall
cltd
lcall
xchg
mov
loope
jbe
out
xchg
fs
push
jl
lcall
ljmp
pop
jno
mov
outsb
pushl
pushf
scas
lock
mov
imul
int3
add
xchg
pop
scas
movsb
stos
test
sahf
sahf
lahf
jmp
movsb
movsb
call
jle
lea
xchg
inc
jb
mov
imul
sbb
pop
call
or
ljmp
and
jbe
shrl
inc
inc
xchg
rcrl
subl
jae
push
mov
mov
cmpsl
pushl
mov
jmp
sub
adc
mov
push
incl
add
xchg
add
mov
adc
shll
lret
inc
mov
rolb
call
inc
call
push
xchg
dec
cwtl
mov
mov
mov
movsl
movsb
movsl
push
add
add
push
push
xchg
xchg
xchg
test
mov
lods
pushl
mov
movsb
call
decl
push
push
call
add
add
mov
push
xchg
fistpl
fistps
jmp
pusha
movsl
jmp
data16
call
lcall
test
cmpsb
pop
add
add
popa
popa
arpl
popf
fwait
pushf
cld
mov
mov
mov
mov
scas
lcall
jo
lcall
lcall
add
mov
xor
jmp
jns
jmp
mov
out
jle
push
jle
fistpl
mov
and
add
add
adc
push
cmp
mov
ret
mov
bound
lcall
add
pop
pushl
pop
insl
fimull
in
lea
push
xchg
clc
cwtl
push
xchg
jmp
movsl
mov
movsl
sub
inc
inc
inc
adc
push
xchg
xchg
mov
inc
ret
ret
inc
mov
cwtl
ljmp
sbb
movsl
add
mov
fs
add
adc
ljmp
stc
stos
sar
cld
scas
sar
cld
lods
sar
std
lods
iret
in
mov
inc
mov
cmpsb
ds
incl
xor
xor
jno
jo
mov
mov
aad
aad
aam
aam
rcl
shr
leave
lret
mov
mov
jmp
inc
add
add
call
mov
mov
std
rcr
cld
ret
std
ret
fcos
out
mov
ret
in
cmpsl
cmpsl
dec
jg
addl
stos
stos
stos
add
in
jmp
jmp
out
inc
loop
in
fcomp
fldenv
mov
add
mov
add
fldl
out
cmp
cld
iret
in
std
iret
in
std
shl
std
aad
std
aad
push
leave
aam
int3
in
scas
lods
lods
popa
cmpb
std
std
add
std
incl
int
shrl
mov
add
mov
add
loope
jp
cmc
push
cmpsl
cld
loopne
std
xlat
out
out
aam
cld
aam
stc
shl
push
enter
int3
shl
mov
mov
xchg
xchg
xchg
pop
ret
mov
cld
lods
add
mov
push
je
fistps
cmp
insl
lods
cld
out
mov
aam
call
ror
jmp
lret
aam
jmp
scas
ret
les
cltd
cltd
add
sarb
xchg
inc
and
ret
int3
lret
mov
fdivrs
adc
int
xlat
int
pop
fst
aad
in
loope
call
in
out
sbb
mov
mov
cmp
movsb
scas
arpl
mov
ret
mov
les
ret
sbb
bswap
int
or
aam
push
incl
cmpl
add
add
add
sarb
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
leave
fdivs
xchg
sub
push
out
test
add
or
in
test
inc
and
or
ja
sub
add
inc
ficoms
add
sbb
cmp
sbbl
vprotb
mov
fstl
outsb
rclb
fs
fs
repz
xchg
inc
fsubs
mov
sub
shr
jle
jae
or
out
cmp
pop
jbe
xchg
and
scas
push
mov
sub
jbe
int
add
push
jmp
pop
shrl
sbb
dec
stos
out
xchg
insl
xchg
sub
shrl
adcl
loopne
addr16
sbbl
or
js
sub
ds
mov
ficoms
mov
cld
jecxz
fbstp
add
sbb
xchg
std
xchg
les
cmp
stos
rclb
cmp
push
mov
mov
fdivl
push
movsl
sbb
popa
idivl
iret
sub
cwtl
jbe
or
push
mov
jns
test
inc
fsubl
lret
repz
pop
cmc
jne
xchg
sub
dec
jl
cmpb
stos
pusha
or
or
out
xchg
inc
fistl
or
cld
test
sub
add
adcb
and
push
popf
sahf
xor
movsb
lock
sbb
inc
pop
bnd
mov
adc
insb
rclb
xchg
cs
into
repnz
test
out
xchg
fs
xchg
decb
sub
push
sub
orl
dec
loopne
pop
into
mov
arpl
pop
xchg
push
pop
movsb
cmp
ret
enter
add
js
sbb
dec
enter
insb
and
dec
mov
movsb
cmp
rol
pop
add
lea
mov
stos
jecxz
xchg
test
xor
xchg
std
inc
fldcw
mov
mov
cld
lret
sbb
dec
stc
call
icebp
mov
ret
hlt
sahf
and
iret
adc
jl
inc
ret
call
sub
loope
cmp
call
xchg
sub
cmp
pop
and
mov
movsl
mov
jp
out
data16
jecxz
cwtl
das
and
test
jno
mov
jbe
mov
sub
push
jmp
dec
sbb
shrb
mov
mov
fcompl
or
das
js
popa
aaa
sub
push
mov
mov
fsubrl
or
xchg
scas
andl
pop
and
push
sub
ja
je
loope
jnp
xchg
lods
push
mov
sbb
rclb
movsl
cmp
jb
lock
les
notb
loop
inc
pop
xchg
sub
xchg
push
dec
pushf
mov
mov
mov
cmp
mov
pop
repnz
cmpsb
xchg
lods
jns
fidivs
xchg
xor
dec
jecxz
push
mov
test
add
mov
icebp
mov
add
cmpsb
jl
lds
sub
jp
out
dec
loop
sti
add
je
pop
mov
xchg
xchg
lahf
cmp
cmp
repnz
repnz
pop
outsb
inc
jns
jbe
loope
rcll
xchg
adc
mov
sbb
shrl
mov
sarb
ficompl
or
xsha256
cmpsb
push
sub
sub
sub
mov
mov
fsubrl
push
daa
shrl
das
xchg
popa
jp
xchg
or
pop
pop
and
push
sub
js
jb
loope
jnp
xchg
lods
les
cmc
into
sbb
push
inc
and
xchg
pop
fdivl
enter
sub
or
fbstp
fnstsw
dec
std
or
pop
push
in
xchg
lret
sti
add
aaa
cmp
add
adc
dec
loopne
or
pop
cmp
push
out
push
loope
pusha
adc
jno
cli
nop/reserved
push
call
shrl
or
sbb
call
out
xchg
and
push
out
call
adc
inc
pop
jae
dec
fidivrs
psubusw
or
pusha
testl
adc
xchg
mov
sbb
dec
add
popa
clc
mov
ret
hlt
mov
pop
icebp
inc
cli
lahf
xor
xchg
push
int
xchg
mov
call
xor
push
lea
mov
fists
and
xchg
jnp
xor
scas
push
mov
fwait
xor
and
cld
pop
inc
aaa
into
jno
cmc
mov
movsb
icebp
mov
adc
bound
adc
add
jecxz
inc
dec
daa
mov
or
sbb
iret
dec
xor
sbb
or
sbb
dec
cmp
push
jno
aad
push
cmpsl
xor
lret
dec
inc
lahf
ss
test
push
mov
push
dec
dec
sti
xchg
jl
jmp
cli
flds
stc
xor
mov
adc
add
imulb
outsl
push
adc
xchg
insb
loope
pop
adc
in
icebp
add
inc
pop
in
js
int
push
add
xchg
inc
aam
int
aad
inc
or
mov
push
pop
inc
fmull
lret
fstpt
or
fnsave
fidivl
ret
repz
dec
push
sbb
push
push
rcll
dec
loopne
and
fbstp
shrb
shl
mov
call
add
pop
lock
sbb
repnz
das
or
repnz
add
sbb
push
hlt
fnsave
leave
jnp
push
pop
mov
int3
cld
loopne
test
das
repz
scas
inc
aaa
sarb
add
push
clc
popl
lea
xlat
push
jmp
add
adc
jae
or
pop
fs
dec
sbb
lret
loope
xor
jns
push
add
jmp
clc
call
pop
repnz
or
dec
loopne
lock
or
in
iret
and
imul
and
pop
cmc
cmp
jmp
arpl
in
or
and
jmp
and
les
clc
adc
addl
and
fnstenv
cmp
arpl
sbb
test
movsl
xorb
cmpsb
lea
in
repnz
fstl
xor
imul
mov
test
in
xlat
jbe
add
es
stos
push
bound
inc
stos
mov
xor
lret
aad
std
pop
mov
aam
jmp
stos
inc
cli
cmp
lds
xor
pop
scas
pop
ffreep
push
insb
cmc
add
jb
sub
lcall
fnsave
mov
xor
in
dec
jecxz
mov
into
gs
shrl
icebp
fidivl
lds
shl
cli
cmp
sub
andb
mov
icebp
js
and
cmpsl
ds
in
out
fdivl
cmp
pop
jno
out
cs
xor
hlt
ljmp
cli
ds
ljmp
and
inc
jle
ja
push
call
in
adc
inc
cmp
push
mov
mov
stos
inc
dec
ss
addr16
pop
add
mov
jnp
cs
pop
rcll
cmpsl
add
dec
sbb
pop
dec
and
xchg
pop
aam
decb
ret
int3
arpl
adc
orb
lea
mov
dec
out
adc
inc
or
mov
xchg
fs
xchg
mov
test
call
or
pop
cmp
imul
sub
call
or
jp
cld
mov
sub
dec
pop
idivb
inc
pop
in
insl
test
add
pop
push
and
mov
stos
inc
xchg
fwait
mov
add
ss
inc
adc
icebp
mov
scas
gs
test
jnp
add
xlat
xor
add
andl
mov
fnstenv
jl
cli
push
out
sub
lret
adcl
sbbb
mov
jo
jne
pop
outsl
aas
xchg
sbb
enter
xchg
jmp
testb
pop
xchg
sub
mov
rclb
mov
imul
scas
jns
fdivrl
sbb
lods
mov
ss
sbbl
outsb
repnz
mov
xchg
mov
jno
mov
loop
jno
pushf
or
inc
lds
push
pop
gs
mov
std
xchg
pop
dec
jecxz
pop
jns
mov
test
in
outsl
sbb
lret
negb
pop
addr16
stos
mov
loop
dec
lret
and
mov
cmp
push
sbb
icebp
sahf
sub
xchg
pop
fmulp
out
sarb
add
push
lock
stos
xor
stos
icebp
sbb
fs
push
imul
sbb
push
insb
jb
ja
xor
mov
fwait
and
inc
sub
lds
sub
add
push
cmp
lods
popf
and
sub
cmpsl
cld
mov
push
call
or
outsb
sub
adc
add
fwait
add
pop
nop
test
push
inc
push
jns
jbe
imul
inc
pushf
cmc
pop
mov
cmp
mov
push
stos
scas
movsb
sub
arpl
mov
or
loopne
push
iret
pusha
mov
int3
or
lcall
dec
andl
dec
cmpsb
in
sbb
xchg
xchg
fsubl
xchg
push
sbb
jno
divl
or
jp
test
sbb
mov
inc
mov
pop
mov
push
or
gs
adc
imul
sbb
sub
xchg
sub
fwait
xorl
xchg
push
sub
jbe
pop
mov
dec
sub
int
xor
mov
dec
popf
cmp
jge
mov
sub
jns
mov
scas
mov
in
insb
js
sub
ret
cmp
in
mov
xor
mov
sub
movsb
fnsave
jbe
push
adc
jbe
add
mov
enter
and
mov
add
push
incl
cmp
out
add
fildll
mov
inc
inc
lcall
jns
fucom
popa
add
pop
cli
int
xchg
inc
iret
jne
dec
mov
jl
ja
loop
ljmp
mov
adc
aam
xchg
ss
icebp
enter
das
adc
test
and
xchg
pop
aas
test
sub
jnp
in
fcompl
sbb
fs
jb
inc
mov
mov
or
mov
dec
add
dec
and
shrl
adc
sahf
lret
push
xor
sub
mov
sub
push
xor
push
mul
xor
test
adc
inc
mov
inc
and
scas
and
test
std
jg
dec
sub
jae
ljmp
add
xchg
jnp
pop
test
push
dec
and
or
movsb
dec
popa
pushf
inc
or
dec
push
xchg
cmpsb
or
insl
dec
cltd
mov
fidivrl
rcrl
es
fistpll
shl
mov
pop
lock
cmc
mov
movsb
xsha256
cmpsb
rcrl
scas
inc
mov
pop
hlt
stc
lods
enter
insb
add
lods
mov
xchg
in
jae
mov
cmpsb
fdivs
ljmp
ret
adc
xor
mov
add
sub
ljmp
jmp
vaddsubpd
out
cmpsb
pop
mov
andl
sub
ja
test
nop
dec
mov
pop
scas
pushf
cmc
lds
xor
jnp
lcall
adc
lock
cmp
cmp
montmul
cmpsb
add
xor
test
push
mov
aam
outsb
push
lea
aas
das
cmc
mov
leave
adc
mov
xor
bound
dec
out
test
xchg
add
insb
inc
or
and
lock
leave
loop
inc
cld
loop
icebp
adcl
pusha
push
lods
js
push
jns
jle
jg
sub
shl
pop
in
and
push
dec
ss
cmp
xchg
test
jb
or
nop
daa
xor
scas
inc
xchg
fbstp
lea
xchg
sub
pop
ljmp
scas
or
adc
mov
jbe
inc
fdivl
loopne
cli
sub
sbbl
loopne
lahf
ss
or
mov
mov
xor
xchg
fdivl
outsb
stos
inc
outsb
lock
xchg
adc
leave
pusha
pop
cmp
cli
xchg
cmp
rorb
inc
fcompp
out
fdivl
loopne
cli
jne
sbbl
sahf
sbbl
data16
ss
mov
inc
mov
aad
bound
sti
xchg
cmp
sbb
iret
mov
into
fsubr
daa
mov
or
inc
fcompl
mov
cli
outsl
ja
sub
sbbl
mov
es
fs
out
inc
sbb
lods
inc
push
aas
fidivs
jg
popa
jnp
cld
xchg
mov
or
repnz
mov
dec
or
mov
fsubs
gs
clc
mov
int
push
add
sub
les
test
loop
cmp
fnstenv
popa
repnz
testl
jmp
add
jge
dec
in
xchg
push
jmp
inc
lock
adc
rcrb
cltd
xor
lock
mov
jle
ja
sbbb
cmp
in
repz
adc
pop
loop
adc
mov
aad
cwtl
push
nop
cli
insb
add
adc
lds
rcrl
fstps
xchg
bnd
push
mov
mov
push
or
jl
jp
aas
cli
jl
lcall
and
dec
fistpll
or
repz
pop
hlt
popa
adcb
mov
imul
aad
rcl
cld
mov
sti
cli
pop
lock
adc
call
jp
pop
xchg
cmp
sbb
out
loope
cmp
mov
and
cs
aas
and
out
test
pop
hlt
dec
and
scas
mov
adc
movsl
cltd
xor
into
data16
aam
mov
sbb
insl
mov
int3
hlt
mov
fistl
test
mov
xor
fucomip
orl
lock
scas
dec
bnd
repz
sub
ret
dec
jp
sbbb
xchg
shrb
cwtl
mov
xchg
mov
sti
push
movsl
sub
inc
sub
mov
ljmp
xchg
sbb
push
ss
rcll
pop
xchg
mov
push
pop
inc
imul
pop
cmp
test
ret
push
stos
shrl
das
jnp
dec
cld
add
adc
mov
lods
mov
aad
sub
insb
or
loop
and
mov
imul
push
mov
add
xchg
sub
cli
ret
mov
add
ret
mov
xor
and
aas
test
cmpsl
pop
lods
pop
mov
lds
jnp
sub
sub
cltd
xchg
ljmp
xor
call
dec
pusha
push
popf
inc
popa
dec
loopne
fs
lods
inc
enter
outsl
xor
filds
sbb
stc
stc
lret
cmp
jecxz
pop
je
ret
popf
sahf
xor
dec
push
xchg
xchg
popa
mov
sbb
aad
call
shl
out
and
dec
or
test
movsl
cs
ja
xchg
sub
mov
mov
insb
push
adc
shrl
ds
xor
sub
xchg
cmpsl
movsl
mov
pop
pop
call
insl
aas
sbb
hlt
mov
je
or
in
mov
adc
aas
cmpsb
cmp
dec
push
pop
hlt
jl
iret
data16
xchg
jnp
scas
adc
test
mov
enter
test
shrl
ret
into
mov
in
dec
filds
push
shlb
sub
outsb
das
cld
xchg
jne
test
fstpl
mov
iret
das
inc
rclb
push
in
loop
fidivs
push
test
stos
cld
xchg
jmp
mov
movsl
pop
pop
mov
pop
jno
ret
je
into
gs
adc
xchg
movsb
out
push
mov
sbb
iret
popa
movsl
cmp
mov
mov
enter
shl
or
and
mov
jecxz
sbb
push
xlat
cmp
cmc
sub
pop
icebp
gs
sbb
ud1
shrb
xchg
sub
loope
mov
sbb
push
imul
mov
jae
xchg
sub
pushf
into
gs
mov
push
imul
subl
loop
push
inc
or
or
mov
add
fidivs
cmp
dec
fwait
gs
ret
imul
in
sbbl
nop
push
cmp
jb
push
js
push
js
nop
daa
aam
fnsave
mov
xchg
sub
fidivl
inc
sbb
pop
xchg
aaa
into
or
and
push
jmp
jg
or
leave
cmpsb
cmp
and
pop
inc
pop
rcrl
loop
cltd
and
data16
add
outsl
out
push
mov
mov
mov
cmp
shl
pop
icebp
mov
pop
out
nop
mov
jbe
pop
add
jno,pn
movsl
cmp
lcall
in
shrl
add
push
aaa
icebp
mov
icebp
mov
push
xsha256
cmpsb
adc
sub
sti
rorb
pop
push
pop
repz
imul
leave
adcb
int3
divb
cmp
inc
mov
mov
shrl
xchg
adc
popf
lock
or
in
stos
cmp
sub
add
fisttpl
add
lods
mov
test
iret
mov
jp
std
xlat
outsb
js
add
push
sub
mov
jp
stos
mov
cmp
fdivs
fistps
dec
push
insl
add
imul
mov
and
aad
test
dec
ret
pop
ljmp
jge
xchg
repz
add
inc
outsl
adc
pushf
fistpll
mov
inc
xlat
pop
hlt
jp
pop
cmc
in
addr16
push
adc
aas
test
xchg
fwait
xor
mov
dec
cmp
outsb
jnp
shrl
xchg
cmc
mov
es
xchg
cmp
stos
outsl
and
xor
ror
cmp
std
stc
sti
sbb
popf
adc
lds
stos
jle
jecxz
into
jbe
fcmovne
push
push
cmc
xchg
sub
mov
push
lcall
ret
daa
les
in
xchg
in
mov
jns
add
add
ret
fistpl
mov
in
inc
fsubl
cmp
push
test
sbb
jae
mov
xlat
xchg
sub
mov
mov
mov
jp
sti
out
sub
jmp
mov
push
lcall
mov
leave
push
out
sbb
sub
cmp
lds
xchg
sub
out
stc
nop
and
mov
popf
cmc
scas
sbb
inc
push
cmp
cmp
aam
pusha
push
call
loope
jl
mov
xchg
sub
push
in
sub
xchg
fnstcw
shlb
mov
inc
jns
int3
arpl
movsb
repnz
lock
and
scas
jl
xor
ja
sub
int
dec
jecxz
out
push
in
pop
jmp
mov
push
add
loope
pop
mov
imul
ljmp
inc
int
jb
cmp
cmpsb
jne,pt
mov
pop
mov
pop
xor
orl
push
loop
inc
outsb
fwait
and
sti
jno
jne
test
jns
bound
lret
les
mov
movsb
dec
push
xor
push
inc
imul
lods
js
cs
xor
adc
mov
push
mov
mov
or
je
int
jg
int3
decb
mov
cli
xchg
lcall
outsl
fwait
je
jl
mov
in
xchg
lock
into
or
pop
insl
jecxz
out
inc
test
icebp
cmp
cmpsb
mov
cwtl
inc
test
inc
cmpsl
jg
dec
xchg
add
lcall
pop
jp
xchg
cmp
in
hlt
jp
popa
subl
jmp
lea
insl
scas
je
inc
stos
cmp
inc
mov
push
neg
sub
push
cwtl
pushl
mov
xchg
xor
lods
mov
stc
cmc
sub
movb
mov
daa
cmp
xlat
sub
and
jbe
fptan
add
ds
clc
in
loopne
inc
sub
es
aaa
push
popa
mov
mov
or
enter
aad
xor
idivl
in
out
sbb
xchg
aad
mov
xchg
pop
std
jp
push
dec
mov
push
adc
or
in
int
inc
inc
cltd
jb
inc
or
int3
inc
fstps
add
gs
mov
mov
aaa
scas
push
mov
ja,pn
xor
mov
add
sub
cwtl
mov
xor
sub
mov
cli
addr16
cmp
inc
ss
push
shl
aaa
lea
dec
push
cmpsl
and
xor
push
jmp
mov
icebp
test
mov
mov
cmp
jg
and
mov
push
cld
shrl
aam
mov
sti
cmp
shr
mov
stc
les
notl
adc
jecxz
movb
pop
loope
lcall
add
xchg
shr
test
push
xchg
xlat
push
push
fstps
lcall
sti
mov
lahf
and
mov
xchg
mov
fcmovne
push
fwait
jnp
add
aad
jl
imul
and
sbb
xchg
movsb
int3
loope
xlat
cmp
mov
aad
nop
call
cmp
push
mov
ss
pop
out
jb
xchg
in
pop
dec
push
or
adc
or
std
or
leave
mov
cmp
push
jg
dec
or
fwait
xor
mov
in
xchg
icebp
mov
outsb
add
push
push
jmp
pop
jl
mov
or
dec
mov
mov
xchg
push
jle
mov
fadd
outsb
jg
das
push
aaa
sub
mov
mov
jnp
mov
dec
jle
or
pusha
mov
and
lods
sbb
push
dec
mov
sub
xchg
mov
xchg
pop
cmp
mov
jno
call
or
add
dec
test
xchg
rcrl
roll
cmp
jg
mov
lods
fwait
fwait
idiv
mov
rorl
cwtl
pop
push
sbbl
cld
xchg
pop
adcl
mov
add
int3
das
insb
jbe
icebp
loopne
pop
cmp
cmp
or
popa
cmp
jg
imul
xchg
pop
iret
mov
imul
data16
xor
add
scas
xor
test
jns
pop
jle
arpl
add
jp
jnp
adc
sbb
fnstenv
sub
test
mov
adc
push
pushf
shrb
jecxz
daa
sub
jmp
iret
adc
stos
decb
add
nop
mov
insb
push
push
jp
push
xor
mov
inc
ret
ret
and
cltd
or
daa
add
fsubrl
dec
rcll
iret
add
cmp
cltd
xor
pusha
inc
xchg
inc
pop
jl
lret
test
out
stc
cmp
and
iret
sub
cmp
imulb
aad
ret
lret
push
mulb
shll
decb
mov
add
aad
dec
loop
into
das
std
add
sub
subl
fcomp
push
mov
faddl
into
cmp
mov
andl
sbb
out
scas
cmpsb
xchg
jmp
movsb
out
lret
and
mov
outsb
int3
push
jae
idivb
pop
ja,pt
cmp
xor
nop
push
ficoml
inc
xchg
movsb
dec
dec
hlt
fs
imul
divl
lds
in
adc
stos
mov
adc
loop
stos
movsl
stc
xchg
xchg
jp
cmpsb
mov
into
sbb
sbb
scas
mov
enter
subb
out
into
inc
mov
cmpsb
inc
shll
fsubs
cltd
jge
jp
lret
cmc
lock
addb
pop
sahf
in
push
xor
adc
push
jnp
out
push
es
ret
jmp
iret
lret
push
into
jne
fldl
pushf
stos
lds
adc
sti
xchg
insl
xor
jmp
in
ss
push
cmpsl
pop
pop
mov
sbbl
lods
loopne
xchg
out
adc
sub
dec
pushf
popf
or
pop
cmp
or
mov
mov
dec
pop
sub
je
enter
cmp
jae
in
sbbl
add
lods
adc
mov
les
sub
mov
aas
push
fninit
xchg
or
push
xchg
insb
pusha
enter
push
insl
imul
pop
jb
mov
cltd
cwtl
and
inc
sub
shrl
call
mov
leave
inc
pusha
cltd
rep
iret
ja
cmp
pusha
cmp
mov
xor
les
mov
fwait
mov
cmp
and
jo
cmc
mov
cmp
dec
movsb
xor
push
mov
loope
cmp
sbb
add
bound
ret
outsl
jmp
rolb
clc
sub
mov
and
rorl
js
aad
mov
loop
mov
cmp
xchg
addr16
xchg
movsb
cmc
add
adc
fnstcw
mov
sub
cmpsl
dec
mov
jmp
xor
xor
lret
add
push
add
into
shl
lahf
orl
mov
push
ljmp
ret
lret
ljmp
push
mov
sbb
movsl
loope
dec
or
lcall
ljmp
int
push
jo
rol
cmpsb
fidivrl
cmp
jge
xor
hlt
jno
sub
or
mov
mov
lret
mov
mov
sbb
pushf
xchg
stos
bound
int
int
jnp
mov
add
lahf
test
in
cmp
xchg
ficomps
sub
les
push
push
jl
inc
push
jne
mov
addr16
lret
or
pushf
mov
call
mov
repnz
into
push
iret
and
dec
jl
loope
in
or
fcoml
pusha
cs
mov
and
dec
push
je
insl
mov
jp
lea
fwait
inc
fisttpl
jg
aad
dec
lock
nop
sub
addl
cmp
mov
lret
xor
xchg
inc
mov
cmpsl
jns
fwait
sub
jne
pop
leave
pushf
pop
and
cs
fcomps
push
jl
push
testl
adc
sarb
pop
jecxz
jns
test
stc
addl
pop
lcall
addr16
arpl
or
out
cli
shll
mov
adc
fdivrs
mov
jle
out
ss
repz
scas
out
xchg
xor
movsb
xor
jae
inc
sbb
xor
jle
mov
adc
pop
inc
cld
mov
push
cmp
stc
addr16
je
ret
addb
cmpsb
mov
ds
fcompl
fistps
push
adc
mov
aas
out
pop
cwtl
xorb
cwtl
cmpb
mov
push
ret
push
adcl
cmp
orb
sbb
sbb
push
push
mov
fimuls
jns
ja
mov
pop
cmp
mov
decb
or
xor
sbb
iret
ljmp
fcos
mov
jae
js
cld
ss
push
push
xlat
not
dec
push
aaa
into
inc
ret
cmpsl
and
hlt
lahf
sub
out
sbb
and
test
mov
xor
outsb
sbb
jae
pop
popf
sbb
mov
lahf
push
es
out
fwait
push
cmpsl
nop
xchg
add
roll
mov
std
data16
test
pop
adc
loope
in
jp
dec
cmp
jo
adc
adc
movsb
mov
test
addl
js
jecxz
fstpl
lods
sti
scas
mov
add
pop
sub
xlat
and
loopne
leave
push
pushl
sub
sarb
inc
xchg
or
push
and
cmpsl
pop
push
int
mov
sub
les
dec
roll
and
dec
repnz
iret
mov
jno
je
push
jne
and
xor
inc
pop
push
pop
mov
testl
out
lods
outsl
lahf
and
int3
jbe
ret
push
lock
hlt
popf
mov
mov
or
daa
out
imul
jmp
mov
mov
cmpl
dec
insl
dec
das
fnstsw
pop
das
and
mov
cltd
decl
cs
adc
cli
xchg
ret
rcll
jmp
inc
je
fnstenv
and
jmp
call
inc
lods
cmp
or
pop
xor
cmp
push
jne
cmc
in
mov
cmp
test
pop
xchg
lds
packuswb
cmp
or
push
hlt
mov
lods
aad
addr16
cmp
iret
mov
jle
sarb
lcall
jmp
scas
leave
jl
push
sub
es
push
lds
mov
add
xor
xlat
cmp
push
fldz
dec
push
pushf
stos
shr
push
sbb
mov
mov
rcll
bound
in
std
push
push
push
sub
rol
ret
rcll
push
xchg
push
shlb
mov
dec
call
adc
sbb
xchg
loopne
sub
aad
adc
adc
sub
dec
ret
imul
lcall
roll
ljmp
xor
je
mov
fldl
lret
cmc
jp
out
in
cmp
xor
hlt
mov
stos
mov
mov
sub
int3
or
push
shrb
push
nop
mov
dec
repnz
jecxz
setg
add
push
fisttpl
mov
mov
rcl
cwtl
add
add
or
cmpsl
in
out
mov
aad
jo
push
fwait
jbe
rolb
dec
mov
xchg
mov
out
xor
jecxz
mov
cmp
pop
pusha
ds
cmc
leave
add
cs
push
repz
stos
ret
bound
test
ror
int
xchg
jne
adc
in
jmp
lea
hlt
movsl
aad
bound
cli
ss
pop
cmp
or
pop
mov
mov
xchg
xchg
jge
mov
mov
or
push
xchg
mov
ljmp
inc
jbe
js
pop
xlat
loope
jp
imul
enter
clc
add
jne
cld
cmp
lods
std
or
cmc
je
loope
push
dec
dec
add
sarb
test
dec
cmp
mov
adc
cmp
xchg
cmp
nop
sub
jle
xchg
push
das
jb
dec
add
lea
stc
and
add
aad
jle
lea
jge
inc
scas
cs
movsl
adc
pushf
xor
sti
and
xchg
sbb
mov
pop
mov
inc
aaa
aad
jns
loope
subb
in
faddl
test
xorl
inc
mov
dec
je
test
and
aaa
sub
mov
inc
push
mov
ss
mov
xor
mov
pop
jle
add
rclb
xchg
push
cld
jne
mov
jmp
pop
xchg
push
sbb
ficoms
lds
or
and
mov
jmp
ret
jae
cmp
pop
jbe
pop
shrl
mov
rcrl
inc
stc
or
adc
ja
sub
mov
popa
cmpb
bound
in
not
pminsw
notb
sub
shrb
sbb
les
je
sbbl
jmp
hlt
outsb
aam
les
iret
imull
adc
mov
rcl
fidivrs
pusha
scas
adc
sbb
int
or
in
cmp
fstl
inc
mull
xor
je
pushf
push
sarb
pop
mov
cwtl
icebp
xor
pushf
jge
stc
dec
mov
fsubrs
cmpsb
and
add
cltd
xchg
mov
ja
xor
or
rorl
dec
sbb
insb
adc
adc
xchg
xor
pop
stos
out
sahf
pop
idiv
inc
push
fstpt
or
fildll
iret
fcmovu
mov
fs
add
iret
mov
popf
repnz
sbb
mov
mov
mov
mov
mov
stos
daa
shlb
mul
mov
and
in
or
xlat
sbb
cld
lds
add
jnp
pop
pop
jl
add
sub
sbb
fisubs
sbb
push
or
cmpb
mov
add
sub
jno
xchg
icebp
mov
push
mov
push
mov
add
mov
mov
dec
xor
das
cmc
lret
and
test
or
cli
push
xor
push
xchg
out
rorl
xor
jl
xor
hlt
int
test
popf
lds
xor
call
ja
loope
clc
repnz
outsl
mov
push
shr
lret
jae
popf
test
mov
mov
adc
ret
rcr
fs
xchg
test
mov
and
loopne
sub
sti
mov
adc
inc
insb
add
adc
xchg
or
scas
popfw
loop
repnz
sbb
cwtl
add
sbb
popf
jae
aaa
push
dec
ret
rcrb
dec
icebp
dec
popf
mov
mov
inc
dec
mov
cmp
pop
adc
mov
xchg
cmp
jecxz
fdivrs
add
ja
adc
jmp
hlt
xchg
cmp
mov
std
pop
mov
jo
cmp
jnp
pusha
xlat
mov
sub
xor
cmp
nop
out
in
cmp
adc
xchg
pop
pop
xchg
push
mov
mov
xchg
arpl
sub
fmuls
cmpsl
imul
push
xchg
leave
popa
repnz
cmp
fwait
push
shrl
gs
mov
mov
pop
sbbb
lods
xlat
mov
jns
pop
js
mov
js
je
int
shlb
hlt
cwtl
cmp
pop
mov
outsb
mov
mov
lret
jnp
adc
pushf
rcrb
sahf
shlb
jnp
out
sar
and
push
jl
add
dec
jmp
push
lods
sbb
xchg
imul
stc
movsb
stos
lahf
xchg
fsubr
aas
jle
fistps
xchg
push
cmp
imul
and
pop
sbb
pop
mov
dec
jle
ret
test
dec
negb
enter
fcomps
sti
mov
xchg
test
bound
in
add
inc
rorb
ret
lcall
push
cmp
adc
lods
adc
xchg
push
mov
fimuls
adc
je
ljmp
loope
jb
inc
les
cli
push
insb
or
sub
xor
lcall
fldt
out
sub
cs
fcmovne
jne
jns
add
ret
cmp
sub
pop
dec
xchg
sbb
mov
sbb
mov
insb
cld
adc
mov
dec
out
add
adc
in
push
das
adc
xor
test
xchg
aaa
mov
cli
inc
push
jno
repz
dec
adc
ss
xchg
inc
and
xchg
imul
sahf
sbb
ret
jno
sti
cmp
xchg
out
jp
pop
cmp
in
or
sbb
mov
lock
xchg
sbb
fsubl
leave
xchg
jnp
repz
push
out
adcb
mov
add
sarb
inc
mov
mov
in
and
sbb
popf
jae
push
ror
add
jle
jecxz
flds
jne
ret
addl
das
sub
fmulp
jl
mov
dec
add
fidivs
fcomps
mov
push
xlat
xor
inc
and
jge
pop
test
aas
iret
bound
loop
jne
mov
testl
arpl
xor
push
sbb
xchg
pop
adc
mov
pushf
push
pushf
dec
shld
or
lea
cmp
xchg
mov
jae
out
bound
mov
movsb
cmpps
xchg
push
push
push
mov
xchg
pop
push
cmpsb
sti
xchg
mov
sbb
xor
push
mov
jl
dec
cmp
or
mov
pop
ja
idivl
xlat
sbb
loop
mov
movsb
dec
lret
ja
icebp
dec
xorl
jno
dec
adc
pop
or
out
andl
adc
xchg
jbe
ret
sarb
cmpsl
fnclex
cs
repnz
cli
sub
aad
jmp
push
sbb
jmp
adc
jb
test
push
sbb
jg
push
sahf
mov
lea
mov
and
jb
push
fistpl
sti
xor
shlb
mov
inc
pusha
pop
scas
cmp
jmp
dec
out
xchg
push
or
push
sbbb
cmc
fistpl
pop
int3
lods
fsubl
and
cs
movsl
pop
mov
pop
outsl
sub
mov
sbb
stos
xchg
jnp
sub
inc
inc
cmp
stc
push
and
push
jno
xchg
ret
loope
push
add
movsb
call
mov
push
movsl
iret
xor
xor
pop
mov
mov
out
and
das
jae
addl
out
cs
cwtl
push
sbb
sbb
xor
dec
dec
adc
mov
daa
cmc
mov
cs
inc
mov
xor
inc
in
addr16
les
add
cmp
add
adc
jne
or
insb
pushf
test
movsl
jo
pop
fstpt
call
push
shrl
xchg
xor
inc
fsubs
movsl
cltd
clc
or
out
add
in
xchg
push
out
lret
mov
mov
xchg
fadds
dec
sbb
sbb
dec
mov
fildll
cmc
add
imul
mov
shl
push
popf
shrl
sbb
sbb
push
and
dec
inc
scas
pop
add
lds
imull
or
or
mov
inc
imul
dec
jge
jmp
lret
das
cmpsb
xor
adc
jbe
xchg
ffree
sbb
pop
jnp
jb
jp
lds
xor
insb
dec
cmpsl
outsb
enter
not
xchg
add
sbb
and
adcl
data16
orl
jecxz
jne
dec
popf
cli
pop
shrb
addl
in
cld
fisubs
mov
mov
ja
pop
push
divl
mov
xlat
push
adc
dec
xlat
or
popa
orl
inc
lcall
add
sbb
nop
cmp
bound
test
lea
out
lahf
cwtl
loopne
sbb
cmp
cmp
shlb
lea
addl
mov
mov
mov
adc
adc
jno
xchg
inc
mov
nop
sahf
pop
repnz
daa
mov
in
gs
or
sub
out
loope
cmpsb
mov
adc
ljmp
inc
lret
in
push
lds
adc
or
movl
in
and
jecxz
dec
gs
aas
les
add
xchg
ds
add
inc
sbb
xor
xlat
push
sbb
cmp
aad
sub
mov
test
xor
add
mov
mov
mov
bound
pop
in
or
sub
sub
lods
pop
inc
xor
or
gs
movsl
cmp
mov
pop
jb
mov
sbb
dec
xor
data16
lock
vmovntdq
gs
dec
cmp
pop
les
push
xchg
jne
idiv
test
jo
adc
jg
movsl
and
dec
push
cmp
aas
xor
dec
je
pushf
mov
inc
mov
pop
and
call
add
insb
ljmp
pop
jl
add
popf
cmp
in
in
out
or
sub
xchg
mov
iret
cltd
pop
add
test
push
cmp
aas
xchg
dec
jge
mov
mov
pop
mov
int
inc
mov
lods
xchg
in
push
insl
ficompl
imul
lock
sti
cld
fcmovnu
aam
popf
and
and
fcoms
lea
scas
bound
jno
xchg
mov
insb
call
cmpl
push
adc
scas
lcall
pop
pop
jecxz
inc
dec
loop
int3
fwait
mov
loopne
xchg
sahf
cmovo
inc
cs
aas
mov
lret
or
push
ljmp
pop
and
dec
mov
arpl
mov
cmp
or
jge
mov
loope
ret
inc
imul
xchg
lods
mov
xor
sbb
xor
rorl
jmp
sbb
jae
outsl
push
mov
movsb
fnstsw
ja
and
jb
cmp
fstpl
loopne
inc
xchg
mov
jo
mov
popf
js
pop
inc
dec
or
mov
scas
out
pop
sti
mov
cmpsl
push
pop
pop
push
pushf
mov
xor
fcmovne
push
pop
in
sbb
inc
out
cmp
add
int3
test
out
xchg
cli
test
mov
pop
cmp
mov
mulb
inc
xor
and
add
pop
mov
xchg
pusha
int3
loop
xchg
loop
nop
cmp
xor
jo
xor
inc
lret
pusha
es
lods
pinsrw
fcomip
out
push
xor
rcrb
pop
xchg
dec
pushf
jl
or
or
js
add
lret
xor
cld
cmc
out
insb
xor
inc
sbb
cld
dec
jb
loope
test
xacquire
pop
aad
nop
xchg
inc
pop
loope
xchg
push
mov
xchg
cmp
pop
mov
pushl
mov
jne
mov
sbb
and
ss
add
or
outsb
jo
inc
xchg
adc
adc
pop
out
jns
cwtl
cld
inc
mov
adc
loop
dec
mov
leave
hlt
mov
scas
scas
loope
leave
aas
mov
mov
and
mov
push
xor
cmpsb
in
jg
pop
push
or
cwtl
popf
in
shlb
clc
fldl2t
pop
sti
add
stos
inc
add
adc
lock
or
aad
lcall
aas
pop
popa
pop
outsb
adc
ss
sub
jbe
sbb
ss
lock
or
adc
pop
and
push
imul
inc
inc
jno
lods
mov
mov
jmp
xchg
out
loope
fimuls
sub
xor
ret
out
orb
in
in
mov
fildl
sbb
pop
sbb
lcall
adc
test
cli
iret
and
or
mov
ret
xor
push
xlat
jmp
mov
test
testb
xor
sbb
leave
xor
clc
bound
test
pop
cmp
mov
push
leave
mov
adc
xlat
xor
inc
xor
ret
jbe
pushf
je
out
jg
pusha
xchg
pusha
mov
js
cmp
test
pop
or
pop
push
xchg
add
sub
lods
mov
test
xor
enter
sub
add
aam
xor
pop
and
adc
xchg
and
or
xchg
data16
cmpsb
fdivl
mov
pop
sub
fs
push
inc
lret
mov
int
aaa
pop
cmc
enter
nop
in
lock
jno
mov
mov
aam
pushf
mov
stos
dec
xchg
xor
mov
jmp
call
mov
and
and
jbe
cmp
xor
mov
scas
ret
sbb
test
movsb
or
cmc
jae
sub
xor
jns
xlat
pop
test
dec
mov
addr16
out
add
jecxz
pop
push
push
mov
int3
mov
pop
pop
pop
icebp
or
inc
ss
cmp
jge
pop
mov
lcall
lret
je
sarl
lods
mov
sbb
sahf
pop
lds
das
loopne
imul
cmp
xor
mov
mov
repz
sub
mov
inc
sbb
mov
cmp
cltd
fisubrl
and
dec
int
loope
sbb
iret
data16
mov
sub
hlt
pop
nop
shll
or
jle
sub
shll
out
xor
loopne
cmp
mov
dec
mov
shll
shrl
rclb
adc
mov
ja
mov
and
xchg
or
push
jnp
xor
xchg
not
jns
push
mov
lea
out
data16
aaa
dec
mov
outsl
mov
lcall
insb
popf
scas
mov
jecxz
pop
sub
inc
stos
mov
sti
xor
push
and
in
mov
out
les
xchg
es
les
xchg
rol
mov
sbb
movsb
fdivrl
lods
push
jp
outsb
xor
leave
aam
jnp
push
mov
inc
and
lods
test
cmp
push
sbbb
and
outsb
movsl
loopne
stos
sbb
insb
mov
dec
out
add
add
push
cli
jg
test
das
pop
and
xor
cmpsl
fdivs
pop
ret
outsb
jae
inc
jbe
scas
xchg
xor
andb
mov
adc
xchg
mov
outsb
jecxz
sub
jno
mov
inc
xchg
addr16
mov
insl
stos
jae
dec
push
or
adc
adc
sub
xchg
pop
jecxz
in
xchg
in
xor
inc
lea
jae
push
add
lcall
or
js
mov
lds
test
cmpsb
push
sub
xor
mov
and
cwtl
movsl
ljmp
jo
ret
cmp
xchg
cmp
in
test
and
and
out
jecxz
xor
loope
sub
enter
push
data16
lods
sti
cmpsl
dec
add
jb
xchg
jb
add
mov
mov
adc
loop
addl
and
mov
rcll
test
dec
mov
lahf
stc
sbb
jb
sub
fwait
and
addr16
cmp
adc
sbb
dec
repz
and
mov
push
dec
imul
jle
sbb
or
fldcw
mov
adc
sub
aas
stos
sbb
inc
ret
pop
jl
out
hlt
jnp
ret
fimuls
notl
sbb
mov
or
sub
sub
mov
sub
mov
rolb
sti
jecxz
pop
into
pop
daa
adc
cmp
mov
js
xor
enter
shlb
push
or
mov
inc
shrb
add
jae
ficoml
inc
or
adc
sbb
dec
mov
dec
or
xchg
inc
jle
xor
pcmpgtb
adc
int3
loop
dec
popf
mov
pop
push
incb
jmp
mov
mov
mov
loop
mov
mov
cmp
sub
mov
xchg
ret
jne
aam
dec
mul
or
or
mov
pop
rol
adc
jne
imul
fs
xchg
xchg
mov
sbb
inc
or
sarb
arpl
out
mov
jbe
fisttps
out
cmp
xchg
sub
pop
push
popf
lea
inc
test
int3
arpl
add
xor
out
sub
cld
test
jge
jg
xlat
sahf
es
sub
inc
xlat
and
jle
pop
lock
fnsave
jl
repnz
xchg
adc
mov
and
and
aaa
into
mov
into
gs
push
in
add
in
andl
mov
stos
xchg
daa
mov
std
jmp
shrb
cmp
insb
jb
mov
adc
xor
sbb
leave
dec
xor
in
fwait
xchg
jae
mov
add
inc
sub
scas
pop
arpl
ret
mov
out
or
jle
and
push
pop
cli
xchg
je
and
test
into
xor
enter
push
in
test
jge
cmpsb
jae
fadd
add
icebp
stc
xchg
sub
adc
mov
jle
inc
fcoms
mov
imul
bnd
and
jle
cmp
pop
sahf
jbe
popf
xor
xchg
and
ljmp
std
xor
push
mov
mov
jmp
pop
out
adc
jp
imul
orl
jne
mov
sub
nop
daa
insl
dec
cmp
inc
mov
aam
and
std
xchg
arpl
std
xchg
mov
loopne
and
daa
mov
adc
addb
xchg
pop
push
loope
push
sbb
xchg
sub
gs
gs
jg
xchg
jae
loope
sbb
sbb
adc
gs
lods
rol
cmp
loope
xchg
sbb
and
mov
data16
mov
ret
sti
loope
jo
sbb
cmp
cli
mov
shll
cli
loope
xchg
sbb
lret
inc
cmp
and
and
lahf
xchg
rol
stos
stc
loop
rcrb
gs
inc
cmp
push
data16
lahf
xchg
rol
jl
loope
push
sbb
jno
cmp
sbb
cmpsb
cmp
rol
inc
cld
loop
test
push
cmpsl
ds
cmp
xchg
imul
mov
jle
loop
aam
adc
sahf
dec
cmp
jae
push
std
xchg
xchg
rol
mov
cli
in
loope
sbb
and
pop
xor
addb
mov
loop
or
push
movsl
daa
ds
xlat
addr16
pop
bnd
lods
inc
mov
sbbb
rcll
out
xlat
outsb
sbb
test
arpl
pop
mov
les
fistpll
mov
sub
mov
mov
bound
and
enter
test
aam
movsl
jbe
fisubrs
rolb
mov
add
cmpsb
jne
lods
scas
movsl
cmp
sarb
or
jo
pop
sub
shlb
enter
shl
jge
adc
in
dec
sub
dec
push
outsb
cmpsl
ds
ja
xorl
add
jnp
sub
insl
add
js
xchg
ret
inc
frndint
hlt
shrl
push
sub
inc
dec
sbb
ja
push
out
xchg
xchg
daa
mov
jmp
mov
sbb
lahf
ss
mov
add
loopne
dec
sbb
push
jmp
cmp
addb
arpl
loope
xchg
sbb
out
xchg
cmp
xchg
sub
les
xchg
out
shl
xchg
cs
cmp
sub
add
jg
ja
scas
inc
rcrb
or
ds
imul
sbb
mov
fbstp
shrl
or
je
cvtpi2ps
jnp
xor
outsb
imul
scas
mov
mov
insb
add
fsubrs
add
push
push
and
fistpl
je
mov
daa
mov
or
sub
in
orl
mov
les
lock
pushf
xor
int3
arpl
jnp
xchg
imul
xchg
mov
push
out
mov
jecxz
adc
push
or
cmp
xchg
xchg
pop
lret
bound
mov
or
dec
std
mov
es
push
xchg
inc
cld
xchg
xorb
ficoml
jl
dec
sti
fdivl
insb
stos
inc
xchg
inc
dec
loop
mov
adc
sahf
sbb
enter
dec
jmp
sti
xchg
cltd
xor
mov
mov
mov
mov
mov
pop
mov
bound
jl
rorl
ret
pop
sub
dec
loop
dec
jl
js
adc
imul
cld
xchg
and
add
cmovb
stos
jl
mov
imul
fwait
mov
xchg
sub
fmul
bound
xor
in
pop
nop
mov
lret
orb
jmp
adc
and
push
aaa
repz
lret
bound
cld
xchg
movl
daa
mov
jbe
xor
sbb
scas
jecxz
mov
rcrl
loope
sub
cmpsl
movl
sti
xchg
cmovae
xorl
mov
xchg
dec
in
mov
scas
mov
loope
fcoms
cmp
jo
jae
jno
and
lret
daa
int3
jmp
push
adc
aaa
sbb
jo
sub
lret
andl
in
push
jmp
fiadds
sbb
xchg
cs
mov
dec
lods
fcoml
cld
sub
push
pop
sbb
enter
cld
xchg
mov
rcrl
sbb
xchg
dec
push
inc
faddl
test
gs
xchg
mov
jns
jmp
or
push
xchg
rclb
xchg
sub
mov
ret
adc
cwtl
dec
pop
leave
pusha
mov
mov
fistpll
pop
test
adc
inc
dec
ss
jo
push
stos
lahf
fs
les
xor
dec
xor
arpl
push
mov
mov
das
mov
add
das
push
repz
pop
dec
fadds
stos
pop
out
fmul
mov
repnz
imul
pop
inc
ja
jge
fldcw
xchg
cmpsb
inc
into
fsubrp
ja
in
jb
sub
mov
data16
iret
lods
mov
shlb
frstor
add
sub
ss
arpl
sahf
jnp
dec
cmpsl
mov
or
lret
mulb
sbb
fsubrl
popf
sub
fisubrs
movsl
out
mov
aam
jl
pop
movsl
pop
bound
lret
xlat
outsl
imulb
call
sub
mov
mov
and
leave
or
lods
aaa
out
hlt
sbb
mov
push
cmp
xchg
out
sbb
fistpl
sub
push
test
jo
hlt
xlat
push
adc
and
jbe
push
adc
rolb
rcll
repnz
fs
aad
sahf
jnp
mov
push
jecxz
shrb
cld
stc
xorb
or
aas
pop
jg
daa
xchg
lods
dec
scas
scas
les
aad
pop
add
cmc
test
cmp
insl
pop
dec
and
jge
mov
in
sti
in
test
and
sbb
jnp
mov
shl
xchg
add
rsm
push
sbb
jo
mov
mov
mov
fcoml
fnstsw
loope
cmp
inc
dec
jmp
push
lods
inc
jp
jle
fisttpll
outsb
or
cld
adc
sbb
or
fs
cmp
fnstenv
ret
cmc
es
dec
insl
or
inc
xchg
ficomps
jl
and
mov
jb
aaa
xchg
addr16
stc
xchg
sub
movb
push
repz
jae
pop
sti
test
es
dec
fwait
push
mov
mov
mov
pusha
lret
lret
stc
sbbb
sbb
fistpl
jne
adc
and
addr16
jp
xchg
lcall
lock
sbb
test
cmp
lods
popf
mov
mov
int3
mov
or
ss
aad
cltd
xlat
data16
push
jecxz
int3
add
xor
ds
push
inc
mov
nop
outsl
bound
test
lods
dec
in
xchg
and
sbb
ret
jno
push
lret
js
lea
stos
push
fwait
loope
hlt
test
sbb
shrl
les
mov
push
ffree
xorb
call
mov
push
xchg
loop
rorl
mov
push
sub
fstps
push
in
push
mov
mov
fstl
xor
xor
push
test
lret
cld
loopne
or
call
pop
jno
mov
lods
ret
inc
into
and
inc
and
test
push
outsl
push
movsb
mov
in
test
push
int
inc
sbb
xchg
imul
mov
and
mov
test
cmp
cmpsl
ds
pop
lds
ret
pop
xchg
lods
out
fidivs
add
cmp
pop
or
aam
or
daa
add
xor
xchg
jp
add
jae
test
mov
pop
std
inc
fsubrs
ds
das
jo
pop
idivb
dec
leave
xchg
jge
out
imul
fwait
xor
and
mov
push
pop
test
cmpsl
mov
xlat
outsb
jno
lds
hlt
mov
inc
inc
fidivrs
adc
fidivs
mov
sbb
lret
mov
inc
mov
cltd
xor
lret
fadds
push
shlb
push
out
push
mov
test
add
pop
inc
mov
cmpsb
out
ret
enter
push
shrb
sub
add
mov
adc
hlt
adc
or
push
ljmp
jb
sahf
jp
fsubrs
iret
pop
out
pop
push
ret
pop
imul
mov
mov
push
into
outsl
adc
lahf
jmp
insb
sbb
das
into
jmp
ljmp
jb
push
jmp
xchg
out
xchg
push
mov
rcll
xor
les
push
push
out
je
aam
xchg
adcb
out
xchg
xor
xchg
sub
push
adc
test
iret
popw
fstps
adc
lcall
or
sbb
lea
sub
jge
pop
inc
add
movsb
pusha
push
lcall
jl
leave
cwtl
sub
push
lcall
mov
dec
and
sahf
xor
hlt
cltd
mov
inc
jl
out
das
bound
ficompl
es
into
inc
adc
jno
xchg
inc
jp
cmp
sub
ds
dec
pop
insb
dec
sbb
or
out
in
andl
adc
lea
stc
fwait
push
add
test
xchg
sub
mov
cli
inc
sbb
popa
lea
push
jne
in
test
pop
and
jne
jbe
in
add
push
jne
jnp
or
mov
adcb
wrmsr
movl
dec
jecxz
cmp
push
outsb
mov
add
fsubrs
pop
mov
cmp
lock
jb
lea
mov
loopne
jne
mov
fnsave
and
mov
and
jae
movsl
or
cmp
mov
clc
pop
xchg
sub
mov
sub
insl
xchg
sub
xor
es
mov
in
cmpsb
movsb
cmp
jo
int3
stos
or
ss
push
aad
jle
dec
test
mov
lea
cmp
and
jno
xchg
lods
jne
loopne
mov
pop
lret
pop
clc
jl
fs
mov
mov
sbb
or
frstpm(287
pop
dec
dec
jle
sbb
or
inc
pop
dec
lods
mov
pop
sub
pop
repz
call
mov
ss
jmp
cmpsb
push
mov
in
mov
xchg
mov
adc
ret
movsl
or
adc
sub
xor
inc
stos
and
inc
adc
sub
aas
xor
mov
mov
jl
insb
fcompl
inc
and
jno
fisubrs
push
sbb
inc
ja
test
leave
jle
sbb
xchg
rorb
outsb
and
sbb
mov
shll
cmpsl
adc
popa
push
sbb
jecxz
divl
dec
roll
add
leave
insl
hlt
call
iret
nop
xchg
mov
add
sarl
popf
xor
jns
icebp
imul
pop
enter
sahf
xchg
sub
adc
adc
mov
inc
outsl
sbb
mov
int3
xchg
sub
lcall
dec
push
or
xchg
je
ret
data16
gs
jmp
dec
cwtl
decb
data16
cwtl
cmp
adc
scas
mov
mov
push
ret
push
es
sbb
mov
loope
rclb
sbb
jecxz
push
out
mov
lret
std
pop
pop
out
xchg
test
mov
mov
mov
push
mov
movsb
int3
arpl
gs
xchg
push
cld
xchg
dec
rolb
sbb
scas
dec
std
inc
fsubr
arpl
loopne
mov
sbbl
dec
pusha
mov
push
add
les
mov
inc
out
int
pop
push
sbbl
pop
insb
sub
movsl
push
mov
or
cmp
inc
or
xor
mov
fsubs
loopne
sub
cltd
push
in
subb
loopne
sub
mov
sub
dec
loopne
pop
adc
dec
fwait
out
test
mov
mov
sbb
xor
lds
mov
shrl
add
dec
xor
adc
mov
fmuls
or
sbb
out
out
test
or
lods
sbb
mov
lds
or
push
mov
insl
add
sub
or
sbb
sub
pop
sahf
sahf
lods
and
jmp
add
lahf
xor
and
xchg
sub
or
sbb
sub
test
lods
and
in
sub
push
popf
aaa
loopne
add
pop
mov
bound
enter
push
loop
cmp
test
lods
and
shl
lds
sbb
add
push
mov
add
insb
es
mov
inc
cltd
inc
inc
fdivl
nop
daa
iret
mov
hlt
mov
lds
mov
and
sub
cltd
out
stc
and
jo
into
dec
add
jbe
xchg
mov
inc
outsb
loope
fcoml
outsb
sahf
xor
push
in
test
test
xchg
push
out
or
and
ds
pop
outsl
cmp
stc
mov
sbbl
adc
pop
xchg
cmp
cmp
mov
mov
pop
sahf
jnp
loop
adc
jecxz
cmp
fstpl
mov
pmaxub
pop
adc
fidivrs
cmp
imul
add
sbb
or
and
jg
lret
jns
or
xchg
jp
test
jns
push
push
and
pop
imul
pushf
cltd
jbe
or
icebp
mov
syscall
pushf
aas
cmp
test
lods
push
mov
mov
data16
dec
sti
loop
sub
sbb
sbb
inc
pop
divb
xchg
and
movsl
out
lds
pop
cmc
sbb
stc
jl
and
enter
adc
mov
mov
ds
dec
in
lcall
mov
test
mov
and
sahf
cltd
lds
inc
in
stc
adc
cmp
cmp
and
cmp
sbb
jb
int3
fs
sub
pusha
xchg
ds
lea
lods
test
fmul
and
sbb
push
lds
ret
inc
fdivs
test
jbe
and
arpl
adc
int3
xchg
push
mov
out
cmp
pop
mov
faddl
lods
loop
out
out
repnz
or
sub
movsl
hlt
xor
out
pop
pmaddwd
pop
out
popa
clc
push
addb
ret
hlt
push
popf
out
mov
xor
inc
inc
fldl
mov
js
hlt
loop
out
xchg
out
and
jecxz
pop
mov
int3
popa
clc
sbb
mov
pop
sahf
dec
leave
jmp
mov
mov
aaa
into
repnz
cltd
sbb
push
iret
addr16
cwtl
push
test
xorl
mov
inc
mov
push
es
out
and
out
jmp
add
pop
jp
es
imul
data16
and
add
inc
cwtl
cmpsb
cmp
hlt
in
fcoms
cmp
cmp
faddl
stc
nop
nop
shlb
mov
mov
rclb
jle
mov
mov
rcl
outsb
add
xchg
outsb
sub
pop
insl
ret
pop
pop
je
xchg
roll
flds
and
hlt
jae
dec
movsb
call
push
call
mov
testb
jne
sub
shll
int
xor
inc
cmpsl
sub
push
sbb
or
dec
rclb
test
mov
pop
inc
es
stos
xor
testb
and
aaa
dec
jnp
int3
lods
jnp
lods
imul
nop
cli
fwait
fwait
xor
mov
inc
pusha
xsha256
cmpsb
push
outsb
push
out
xchg
movsb
cmp
lret
out
cld
inc
push
movsl
xor
sbbl
cmpsl
popa
es
sbb
mov
xor
pop
add
xor
mov
movsl
add
adc
sbb
outsb
xchg
dec
testb
das
iret
data16
mov
mov
xchg
and
push
in
in
fsub
jge
add
cmp
jl
xchg
sub
jg
aaa
jo
xor
ljmp
insl
ss
hlt
push
pusha
jno
xchg
xchg
rclb
push
lods
out
dec
and
cmp
push
in
test
int
shrl
cmp
push
cmp
push
sbb
sub
scas
inc
loope
dec
fistps
ficoms
test
lods
mov
ffreep
push
call
daa
mov
leave
pusha
subl
mov
stos
outsb
add
adc
or
dec
dec
scas
inc
orb
loopne
jmp
test
hlt
outsb
add
jb
popa
clc
fcomps
aaa
mov
leave
pusha
sbb
pop
hlt
ret
add
jb
or
popa
ljmp
push
xor
push
jmp
rorl
cmp
mov
sbb
push
call
data16
xchg
sbb
pusha
jle
push
in
outsb
add
add
or
cmp
push
lods
fisttps
cmpxchg
test
jle
xchg
jae
and
cs
outsl
push
in
adc
jle
loopne
movsb
cmp
mov
jle
mov
mov
mov
and
cld
mov
mov
fs
push
pop
out
inc
cmpsl
add
idiv
movsb
cmp
notl
out
inc
fimull
in
fstps
call
and
pushf
xor
dec
and
jle
push
in
jbe
ret
pop
lret
xor
loop
add
mov
addr16
outsb
mov
ret
cmc
mov
shl
jl
pop
adc
dec
inc
hlt
mov
leave
lcall
out
cmpsl
xor
fmuls
pop
cmc
dec
pusha
lea
mov
mov
mov
lret
popa
ss
out
mov
outsl
xchg
stos
add
in
pop
mov
pop
push
scas
aaa
dec
cmp
jnp
xor
xchg
push
ljmp
outsl
add
jo
mov
adcl
into
popa
push
repnz
cmp
jg
dec
out
jnp
add
aad
and
sub
fstps
inc
fnstsw
imull
sarb
push
ljmp
pop
cmp
mov
push
ret
outsl
add
fsubrs
and
lea
lea
adc
cmpsb
mov
mov
fdivl
leave
or
cs
out
insb
outsl
push
sahf
subb
fisttpll
mov
andl
int
mov
dec
loopne
mov
test
fucomi
test
and
and
mov
inc
fdivrl
lret
mov
mov
or
movsb
into
scas
inc
add
dec
loopne
pop
into
gs
jbe
test
ret
mov
cmc
push
adc
dec
ja
les
enter
push
jmp
jecxz
adcb
or
and
push
dec
out
scas
mov
jg
and
gs
jg
xor
clc
scas
mov
and
aad
ss
decb
das
daa
popa
clc
xchg
inc
fbstp
addr16
xchg
js
lds
outsl
push
jl
sbb
xor
test
in
aas
shr
inc
fucomi
fsubrs
adc
jnp
xor
gs
andl
lahf
mov
xlat
lahf
or
iret
push
std
and
mov
sbb
loop
push
scas
aam
call
xchg
das
lods
rcll
stos
ret
lds
div
adc
dec
adc
jp
ret
mov
test
in
adc
aas
or
mov
adc
rorl
or
jl
add
pop
inc
movsb
cmp
or
lds
lods
pop
in
pop
negb
ss
test
orl
mov
pop
sub
mov
movsb
xchg
xchg
or
mov
pop
mov
mov
in
int
pop
out
adc
dec
push
sbb
xchg
rcll
cmpsl
ret
shlb
je
inc
fimull
push
movsl
push
gs
xchg
data16
lock
movsb
pop
sbb
mov
outsb
imul
arpl
popa
add
stos
inc
cmpsl
pop
call
and
push
jg
cmp
sub
sbb
imulb
mov
je
adcb
sahf
fbstp
inc
out
ss
js
sub
mov
cmpsb
ja
lahf
ss
lahf
test
rorl
fwait
aas
stc
aas
sub
cmc
inc
inc
fsubrs
je
data16
pop
mov
std
or
scas
dec
lahf
ss
into
rcll
push
aam
iret
popw
out
push
fdivs
push
imul
call
cwtl
das
adc
es
das
imul
xchg
pop
mulb
ficomps
addps
pop
jl
mov
jno
mov
int3
sub
xchg
adc
lods
inc
sbb
out
mov
leave
lock
lods
lock
adc
pop
inc
das
pop
negb
scas
sbb
dec
cld
das
pop
repz
push
push
out
ficomps
scas
shlb
jle
adc
mov
push
lods
and
cmc
mov
push
dec
out
push
jge
xchg
sahf
arpl
adcb
push
mov
inc
push
push
popf
inc
push
rcrl
fs
add
xor
pop
or
mov
test
push
xor
inc
testb
dec
imul
in
cmp
mov
test
mov
cmpsb
pop
testb
mov
cmp
jae
adc
iret
jb
adc
mov
test
adc
or
lock
stc
or
sbb
test
mov
test
jnp
lahf
pushf
and
dec
call
sbb
or
leave
pop
jg
jge
jne
xchg
xchg
jae
and
inc
out
js
mov
cmp
pop
ds
ljmp
mov
and
mov
sub
ds
mov
movsb
cmp
push
movsb
insb
add
push
fidivs
decl
mov
stc
inc
lods
inc
js
pop
mov
xchg
dec
loop
in
pop
fsubrp
in
andl
pop
notb
roll
ret
xchg
sub
movb
ss
lret
bound
jns
fldcw
insb
add
jne
xchg
or
adc
lods
inc
adc
cmp
mov
cmpl
mov
add
cs
pop
sub
lret
bound
ret
hlt
push
pop
inc
push
or
dec
ja
call
cltd
xchg
testl
lods
or
xchg
cmp
push
fwait
xor
mov
shl
pop
jbe
push
or
jae
popa
pop
scas
push
push
jnp
test
dec
push
lods
sbb
fisubs
push
clc
mov
insl
testb
in
ljmp
shlb
out
mov
fs
loop
xor
fs
mov
imul
xlat
sti
xchg
or
pop
and
arpl
shrb
fdivl
xorl
inc
add
xorb
mov
test
push
jmp
add
mov
cld
pop
sti
xchg
mov
icebp
mov
mov
inc
and
cmp
and
push
fdivl
fsubrs
ror
jnp
fimuls
cli
xchg
jp
sbb
sub
inc
insl
inc
mov
adc
pop
repz
bound
lds
xchg
sbb
pushf
xor
lods
inc
cmp
sub
repz
sub
shll
xchg
push
adc
pushf
xor
fidivrl
rorb
sbb
mov
push
frstor
adc
sbb
clc
fsubl
inc
sbb
pop
repnz
fisubs
shlb
ret
pop
ja
pushf
xor
and
cltd
idiv
xchg
jmp
in
or
adc
or
sbb
dec
scas
mov
sbb
scas
pop
out
pop
push
clc
jg
dec
lods
inc
ds
jg
loope
montmul
cmpsb
inc
or
mov
je
mov
mov
arpl
dec
lock
xor
pop
or
xchg
imul
adc
scas
pop
mov
dec
dec
fistpll
idivl
sub
lods
jg
push
lahf
call
loopne
stc
jg
sub
sbb
cmpsb
lahf
cwtl
das
rcr
sti
xchg
lret
stc
das
sub
shrb
inc
enter
aaa
into
outsl
pushf
pop
test
fwait
xor
clc
sbb
pop
push
xor
stc
add
dec
stos
inc
cmp
mov
mov
push
stos
in
sbbl
ljmp
xchg
out
add
lahf
jbe
inc
and
shll
loopne
test
lods
sbb
js
xchg
xchg
add
and
cmp
pop
mov
and
out
xlat
outsb
mov
or
mov
lods
jge
data16
jle
stc
mov
sbb
xchg
imul
pop
mov
icebp
out
lret
bound
stos
sbb
lahf
cs
cmp
out
xor
rorl
push
loop
aaa
into
xchg
roll
mov
ds
sub
ds
jae
test
push
push
stos
in
fsubl
leave
push
testb
pop
inc
and
rcrb
pop
int
mov
popa
in
cld
push
xchg
inc
flds
add
test
lods
inc
ficompl
call
lods
inc
xor
shrl
push
lret
mov
mov
fsts
add
push
mov
sub
imul
ss
lds
ss
pop
xchg
push
test
movsl
add
enter
mov
test
add
sub
lcall
ds
rorb
clc
es
outsb
lds
cmp
sub
push
push
scas
dec
movsl
popa
pop
in
arpl
dec
cwtl
xchg
sahf
jl
cmp
fwait
jg
cltd
mov
sbb
loop
jno
fcoml
stc
add
imul
push
call
outsb
fimuls
andl
jl
sub
adc
fcom
es
add
outsb
inc
packsswb
sahf
jl,pn
mov
aaa
jnp
insl
mov
test
push
fs
mov
jle
jne
add
fstpl
adc
sbb
and
pop
repz
jle
inc
jecxz
mov
jp
icebp
pop
jae
or
xchg
mov
jne
xlat
iret
jnp
ljmp
inc
call
aaa
mov
cmpsb
fistpl
sbb
ret
cmpsl
lret
jmp
fmul
enter
loopne
or
stos
movsb
xchg
es
xor
mov
add
and
push
fisubl
and
jnp
add
insl
xlat
dec
sbb
add
xor
movsl
int
out
xchg
pop
movsl
shl
jns
dec
or
lret
xchg
loope
pusha
outsb
add
fadds
mov
popa
jno
sub
xchg
les
cs
fwait
jno
cmp
popa
imul
xchg
loope
mov
in
cwtl
nop
xchg
push
movsb
lcall
mov
js
cs
push
xor
push
test
fsubl
jmp
add
or
push
mov
mov
aad
fistpl
inc
mov
repz
lods
int3
arpl
dec
adc
xor
pop
divb
xchg
xchg
fwait
xor
clc
ret
cld
mov
ja
push
fsubrs
sahf
xchg
shrb
sbb
and
adc
cs
cmp
jne
xor
adcb
push
sarb
fdivl
setl
inc
inc
cli
xchg
js
mov
scas
lret
outsl
out
ss
scas
push
dec
out
mov
int
mov
push
jmp
or
es
cld
pop
out
xor
cli
xchg
push
push
jbe
xchg
scas
mov
les
int
sti
mov
xor
in
mov
inc
dec
data16
xchg
cwtl
outsb
leave
pusha
mov
shl
repz
pop
es
xor
push
jne
mov
scas
mov
ret
repz
mov
sub
dec
insb
stos
jg
pusha
divl
sarb
add
push
out
es
cli
or
lahf
ss
sub
sbb
mov
ss
pop
repnz
mov
adc
dec
pop
scas
jns
stc
nop
stos
cltd
xor
scas
std
jmp
ljmp
jno
outsl
jno
in
mov
ret
repz
lds
xchg
and
sub
addr16
hlt
pushf
xchg
lods
int
ficomps
clc
xor
adc
jno
and
mov
clc
xchg
xor
dec
xor
cmpsl
mov
cli
std
clc
andb
adc
xor
mov
mov
test
daa
cld
xchg
and
scas
inc
cs
sbb
adcl
push
in
sbb
or
outsb
dec
es
rcrl
inc
adc
stc
push
ss
gs
mov
cmpl
or
sbb
sub
imul
mov
loopne
lods
adc
sbbb
xor
arpl
aaa
stos
test
mov
mov
rclb
sbb
mov
ret
xor
cmp
and
movsb
sub
fistps
mov
popf
xor
or
rcr
test
and
test
paddsw
jl
clc
add
movsb
fucom
mov
int3
jp
imul
pushf
hlt
inc
adc
out
inc
jnp
fidivs
inc
movsl
xchg
xorb
popa
in
push
mov
fcomip
inc
or
int
and
js
sub
int
js
jmp
xor
icebp
add
adc
movl
scas
mov
ret
xor
mov
das
jae
push
movsb
jge
add
jne
fistps
ret
add
mov
or
fidivs
test
pop
mov
xchg
mov
fistps
mov
iret
jmp
rcrl
or
lods
outsb
sub
fwait
iret
jp
mov
xchg
cs
or
add
mov
pushf
xchg
shll
mov
inc
inc
sub
jno
shll
xchg
dec
out
mov
outsb
add
push
push
sahf
inc
xor
xchg
xchg
out
ret
pop
or
jge
std
sub
xor
push
jg
push
mov
mov
js
das
cltd
cmpl
xchg
mov
jo
jne
mov
push
es
inc
cmp
stc
jl
insb
bound
lret
pop
add
and
popf
pop
inc
ljmp
mov
push
jbe
jne
xchg
xor
adc
test
adc
adc
mov
outsb
lret
test
in
inc
jae
test
xchg
psadbw
push
pop
in
adc
mov
xchg
jns
cld
sti
xor
shl
push
mov
rorb
pop
jge
add
cmp
inc
int3
adc
fdivl
mov
add
adc
or
and
dec
movsl
and
incl
jne
xchg
cwtl
mulb
ret
sub
ret
push
fmull
pop
addr16
repz
push
sarb
cmpsb
mov
jl
lahf
test
xchg
fstl
cli
sub
outsb
or
push
mov
pusha
ret
mov
add
push
sarl
adc
jmp
test
aam
jg
sub
lret
mov
cmp
jl
out
mov
push
std
pop
cs
cmp
addl
mov
add
pop
into
cmp
jo
jne
mov
out
pushf
stc
mov
fistl
jmp
xchg
xor
push
inc
jae
scas
cmc
pop
push
pop
add
xor
mov
or
push
mov
in
sbb
sub
jmp
sarl
cmpsl
adc
fdivrp
or
fisubs
cmp
cmpsb
inc
inc
cli
aaa
loopne
jns
movsl
gs
add
mov
sub
jae
das
shll
lret
cmp
add
add
dec
adc
push
and
fs
mov
sbb
cmp
hlt
mov
cmp
test
inc
inc
outsb
arpl
xor
pop
rcr
cmp
add
mov
push
mov
sbb
mov
dec
add
dec
cmp
jl
jmp
sbb
mov
int3
cmp
out
adc
in
in
repnz
adc
push
push
insb
rorb
adc
movsl
lret
push
mov
sbb
add
fwait
ror
lret
fadd
hlt
jecxz
shrb
dec
and
int
adc
out
loope
add
mov
jp
jae
xchg
dec
shrl
pusha
xchg
mov
push
cli
push
iret
jbe
testb
dec
pop
xchg
push
imul
iret
sarb
and
cwtl
mov
fwait
xor
imul
pop
das
or
or
adc
daa
ret
hlt
cmp
cmpsl
adc
dec
or
pmuludq
cmp
xlat
pop
daa
icebp
popa
xor
das
aam
es
je
cltd
pop
pop
add
add
mov
mov
cmpsb
scas
mov
mov
jns
je
popa
icebp
lea
test
test
gs
fnstcw
jno
push
dec
daa
cwtl
push
shr
push
add
jge
sbb
mov
movsb
xchg
inc
bound
popa
ret
push
xchg
loope
rcll
inc
adc
sub
jge
shl
jnp
or
nop
arpl
fsubrs
out
push
aaa
imul
les
and
pop
jo
mov
aam
cmp
imul
lcall
fnsave
shll
jae
mov
imul
push
mov
lock
dec
mov
fs
jne
jne
and
shrl
cmc
bound
ss
mov
push
fucomi
pop
xchg
clc
mov
cmp
jg
clc
xor
mov
stc
pop
mov
movsl
clc
pop
adc
jb
mov
sarb
fmuls
dec
push
repz
cmc
adc
sbb
push
inc
adc
int
xor
cld
xchg
popa
xor
lret
into
mov
cmpsb
loopne
jecxz
int3
mov
sub
pop
es
repz
arpl
fimull
cmp
faddl
aaa
lret
mov
dec
sbb
test
push
sub
jge
pop
mov
loope
out
jle
sbb
movsb
xor
inc
pop
sti
xchg
push
mov
adc
pushf
or
inc
popf
or
sub
and
les
xchg
adc
cmpsb
fmul
int3
mov
and
mov
push
outsl
out
out
in
andl
mov
mov
test
dec
push
sub
push
test
iret
fnsave
xor
add
inc
push
das
mov
arpl
or
scas
arpl
je
sub
sub
sub
mov
or
in
inc
pop
cmp
adc
je
data16
mov
mov
push
pusha
dec
sbb
loop
dec
pop
inc
mov
sbb
sbb
xchg
pushl
cld
and
int3
mov
cmc
js
out
sub
jbe
mov
int3
mov
out
fadd
jae
push
cltd
hlt
jne
mov
ja
inc
sbb
cs
pop
out
cmc
xchg
cmp
das
jb
fisubl
mov
sbb
daa
cmp
and
lock
jg
cmpsl
xor
loope
imulb
push
add
jne
jmp
mov
andb
sti
fimull
cmp
out
lahf
cwtl
cmp
leave
shlb
mov
out
dec
xchg
sbb
mov
movsb
aas
sub
ss
enter
inc
or
enter
xchg
lds
negl
xchg
push
stos
lods
js
push
data16
dec
scas
xor
dec
and
jg
push
aad
es
movsl
pop
mov
inc
cmp
sub
sub
loope
jno
mov
sbb
push
and
cmp
push
mov
int3
arpl
rcll
fldt
adc
ret
iret
add
fcoms
out
xchg
aad
dec
loope
sub
dec
mov
adc
out
and
dec
jno
and
bound
jle
adc
subb
icebp
jge
cld
xchg
sbb
sbb
inc
mov
iret
mov
frstor
push
fwait
xor
das
sbbl
sbb
cmp
mov
repnz
je
adc
jae
xorb
or
jp
pop
test
mov
mov
mov
loope
mov
outsl
xor
cmp
pop
into
leave
je
sti
dec
lds
icebp
call
mov
or
inc
push
sub
movsl
inc
adc
loope
sarb
xlat
mov
repnz
in
rcl
jmp
xchg
inc
test
stc
je
daa
mov
enter
jle
sahf
xor
sarl
push
outsb
repnz
ret
ss
clc
adc
ss
lods
addr16
mov
mov
fistl
or
pop
scas
les
xor
and
push
mov
mov
fisttpll
jg
xor
popf
incl
and
jb
movhps
aad
push
nop
xor
xchg
out
mulb
neg
out
push
sub
mov
into
shlb
rcll
pop
out
cmp
outsl
or
mov
mov
test
lds
cld
dec
add
inc
or
adc
push
cs
add
aaa
pop
cs
jno
inc
daa
outsl
jl
add
lea
mov
sahf
dec
jecxz
call
cmp
push
iret
es
mov
fisttps
cmpsb
adc
movsl
xor
pop
clc
orl
sbb
add
insl
mov
push
pop
rcr
bnd
cmp
adc
xchg
inc
into
ret
pop
add
scas
cwtl
and
js
mov
call
cmp
sbb
or
mov
sub
imul
add
pxor
mov
xchg
cs
test
mov
xchg
cld
or
jmp
pushf
inc
jp
enter
mov
std
mov
outsb
add
jnp
int3
arpl
popf
imul
repz
dec
ret
ret
dec
loop
push
loope
movl
mov
xor
rclb
and
ret
cld
mov
aad
ret
les
or
jno
inc
fcmove
push
in
orl
fucompp
cli
xchg
sub
jne
out
iret
sbb
adcb
popa
adc
sbb
and
stos
mov
ficoml
shl
add
test
push
xlat
add
imul
jle
add
es
fists
mov
fdivl
dec
jg
cmp
pop
xor
dec
jnp
arpl
push
sub
test
nop
daa
pop
push
jns
mov
jle
das
stos
jmp
out
mov
and
rcr
jae
mov
in
ds
pop
jp
test
es
addr16
xchg
xchg
cs
pushf
mov
push
shl
mov
xor
iret
mov
ret
mov
cmp
cmc
dec
jno
shrl
sbb
cmp
dec
loopne
loopne
scas
sbb
mov
stc
lahf
adc
xlat
xor
cwtl
mov
ret
pop
out
mov
mov
nop
aad
and
aaa
outsb
add
dec
loopne
cli
sbbb
mov
testb
mov
lahf
xchg
sub
jno
pop
mov
push
call
mov
cli
xchg
mov
push
ljmp
jge
sub
or
cld
cld
in
out
pushf
cmc
mov
adc
movb
sub
mov
pop
lahf
ss
or
mov
fdivs
ss
in
mov
adc
incl
xchg
adc
xorl
push
push
movsb
adc
push
aaa
push
test
lret
mov
fsub
jge
fs
hlt
test
lods
inc
loope
aas
mov
mov
pop
xchg
pushf
xor
imulb
sub
fnstenv
ret
or
jnp
call
subl
lods
jbe
sbb
dec
in
mov
cmp
rcrl
mov
pop
scas
mov
and
call
add
push
mov
inc
fsubrl
or
jbe
push
jbe
pusha
imull
mov
pop
mov
push
sbbl
and
pop
xchg
fisubrl
rorb
addr16
mov
lret
bound
jb
or
cmp
insl
insl
pop
cmc
pop
add
sub
jo
pop
out
add
jb
lock
movsb
cmp
mov
sub
xor
cmp
inc
out
xchg
jns
pusha
jmp
in
pop
adc
hlt
mov
adc
or
sbb
loop
cmp
xchg
stos
xor
mov
int3
std
xchg
mov
fisttps
push
repz
in
mov
jecxz
dec
out
mov
mov
cwtl
shrl
popa
pushf
xor
inc
push
movsl
jb
fs
das
sbb
nop
inc
push
push
in
inc
jmp
inc
fistl
mov
addr16
cmpsb
lea
sbb
rorl
add
enter
inc
xor
xchg
fwait
data16
data16
sub
ds
fs
aam
negl
clc
nop
popf
push
jmp
and
test
xchg
sub
inc
push
lods
jae
in
dec
and
jnp
cld
dec
loop
jle
mov
jns
add
xchg
sub
and
xchg
sub
mov
mov
fidivrs
pop
push
jmp
vdivsd
jb
sub
add
test
mull
xchg
sbb
cwtl
mov
mov
dec
sbb
les
cmp
shrl
iret
pop
repz
dec
fndisi(8087
sub
movsl
repz
sub
dec
xor
xor
push
cltd
add
inc
sub
mov
jl
adc
ss
push
sbbb
cltd
mov
shlb
push
jle
leave
scas
jbe
dec
push
mov
rcll
and
mov
add
loopne
in
and
int3
dec
jecxz
pop
pop
cmc
dec
scas
sub
fisubrl
icebp
pop
jne
mov
outsb
cmp
jo
mov
test
and
lods
xchg
sti
mov
push
mov
shlb
dec
loopne
inc
les
sbb
rorb
sub
dec
pop
xor
daa
jno
inc
fcomps
xchg
dec
out
mov
jo
xchg
bound
cltd
mov
daa
mov
cmp
pop
cmc
cmp
fisttps
or
add
stos
stc
jmp
les
test
mov
push
lcall
inc
and
cmpl
scas
sub
rorl
adc
loop
add
add
hlt
loopne
out
scas
inc
push
or
in
xor
or
pop
icebp
shrl
mov
mov
outsb
add
out
cld
xchg
sbb
scas
jb
fdivr
cmp
jmp
or
leave
jnp
mov
push
pushf
in
test
in
sti
adc
inc
fsubl
ret
mov
pop
out
xchg
aam
mov
push
sbb
xor
push
inc
or
dec
out
mov
pop
testb
dec
out
das
cld
xchg
mov
ret
mov
inc
fiaddl
cmp
or
push
sub
test
or
jmp
mov
cmpsb
or
cmp
dec
loop
lahf
cli
xchg
adc
adc
xor
ja
aaa
es
lds
mov
popf
xor
fnstenv
lret
fildl
lcall
jns
fdivr
mov
lock
cmp
rorb
ficoml
ss
xor
sahf
add
mov
fcoml
int
inc
fsubrs
push
jmp
pop
xor
inc
add
gs
dec
loope
fbstp
pop
daa
pop
sahf
cwtl
mov
mov
sub
jae
js,pt
movsl
movsl
pop
cmpsb
cmp
je
push
out
or
jb
test
cmc
lds
mov
mov
mov
jo
cmp
out
xchg
jb
rorl
fisttpll
lods
inc
aam
and
call
or
cmpl
xchg
lahf
aas
sbb
mov
mov
jns
in
adc
out
sbb
lods
daa
mov
in
push
sbb
or
lcall
xor
cmp
in
mov
sbb
jb
les
jbe
movsl
push
test
mov
ret
jge
rep
adc
pop
hlt
test
loope
mov
les
iret
fists
in
xorl
test
xchg
pop
repnz
sbbl
jbe
clc
jne
inc
fsubrl
xchg
sbbl
dec
inc
fmuls
int
mov
iret
xor
aas
dec
sub
pop
test
lret
ljmp
ja
push
or
or
out
inc
sub
jge
push
xchg
sub
insl
stc
enter
and
repz
jb
jle
rcrl
loopne
sub
movsl
cmp
sub
outsl
fs
mov
sub
pop
and
push
addb
test
sbb
pop
mov
jbe
mov
fbstp
fadds
xchg
or
in
andl
mov
mov
ds
shrl
roll
out
add
dec
loop
and
xchg
loope
rcl
and
mov
pop
and
mov
out
sbb
in
aas
xor
sub
mov
ds
inc
ret
xor
and
daa
mov
lcall
sbb
pop
and
js
lret
push
push
out
xor
inc
push
push
lods
data16
jns
xchg
pop
shrl
pop
pop
hlt
pushf
mov
adc
loopne
mov
int
lods
je
icebp
into
popf
xor
adc
jbe
leave
sbbb
repnz
xchg
leave
sbb
push
stos
ljmp
cmp
push
popf
push
nop
mov
insl
nop
pop
shlb
jmp
outsl
push
data16
xchg
lcall
into
or
in
mov
lahf
cmp
mov
stos
cmc
jl
mov
and
pop
loop
mov
xchg
mov
js
imulb
mov
xchg
adc
xchg
inc
sahf
mov
cmpl
pop
das
xchg
or
xor
rclb
sbb
leave
dec
test
ret
sub
push
bound
lahf
dec
and
inc
push
cmp
loope
mov
arpl
fcmovne
push
or
push
pop
mov
push
xor
fldt
add
jmp
add
lods
dec
icebp
les
mov
in
add
push
dec
jns
testb
cmp
add
ljmp
arpl
dec
pop
clc
cwtl
addr16
cmp
outsl
test
or
andl
inc
mov
sub
mov
inc
loopne
aam
push
jno
push
xlat
cs
dec
jo
lods
packsswb
push
jne
ret
je
icebp
movsl
in
btr
and
jmp
or
lahf
sbb
cmpsl
shlb
icebp
enter
mov
testl
cwtl
sbb
add
pop
cmc
fisubrl
out
sahf
notb
stos
daa
sarb
arpl
xchg
les
rcrl
adc
movsb
fiaddl
lret
mov
xchg
popa
mov
mov
push
mov
inc
rcll
roll
mov
ret
rol
adcb
repnz
movsl
xlat
or
jb
clc
push
jge
rclb
les
inc
xlat
out
arpl
cmp
stos
add
je
xlat
outsb
add
cmc
mov
rclb
push
out
adc
arpl
rclb
push
lods
sbb
mov
jle
scas
call
push
out
and
pop
inc
mov
mov
dec
inc
mov
push
inc
orb
xor
stc
nop
je
cmpsl
ds
xchg
cmp
push
mov
jge
jns
mov
data16
shlb
out
shrb
jne
test
lret
bound
daa
mov
sbb
ja
outsb
adc
add
mov
push
cwtl
pop
xchg
scas
inc
pop
mov
pop
mul
add
je
repnz
add
rcll
pop
hlt
addl
fs
mov
cmpsl
xchg
xchg
jp
mov
filds
stc
ret
xchg
fisubl
lret
mov
gs
fsts
push
lahf
ss
adc
jge
add
scas
mov
les
test
jmp
insb
add
push
movsl
inc
and
sahf
andb
aad
mov
adc
xlat
outsb
mov
movsb
cmp
sub
or
dec
testb
test
sbb
adc
mov
insl
add
das
aas
lahf
fs
gs
pop
jns
mov
test
adc
mov
mov
les
lcall
fld1
stc
nop
gs
mov
fwait
pushf
xor
lds
negb
mov
mov
test
fnstcw
int
enter
jp
mov
pop
fwait
add
mov
sbb
and
mov
out
push
popf
jns
arpl
inc
mov
push
and
mov
pop
out
pop
scas
dec
dec
sbbl
int3
fptan
mov
push
out
xchg
jmp
cld
sbb
push
call
ja
aad
das
jp
mov
mov
inc
movsl
mov
sbb
lods
gs
xchg
int
mov
lahf
fsubs
adc
sbb
mov
mov
ret
pop
repz
add
xchg
xor
lds
cwtl
scas
inc
or
sbb
push
inc
dec
loopne
xor
add
add
lea
ds
pop
jle
dec
add
mov
or
push
adcl
cmpsl
xlat
fnstenv
add
dec
adc
mov
outsl
jmp
aad
sbb
mov
fisttpl
push
sti
ljmp
mov
inc
mov
sbb
andl
or
out
cmc
sub
lods
pop
je
mov
mov
loopne
push
lds
jle
fdivl
lahf
stos
inc
pop
add
shrb
pop
cltd
xor
xchg
sub
jecxz
sbb
jge
cmp
cwtl
xchg
sbbb
sbb
jl
sbb
xchg
dec
mov
jge
xor
adcl
mov
decl
sbb
das
sbb
xor
sbbl
test
sbb
xchg
ficoml
jge
dec
arpl
push
out
shlb
cmpsb
movsb
icebp
push
lods
mov
dec
jecxz
aad
mul
pop
scas
int3
add
mov
in
popa
clc
into
push
push
out
push
out
sbb
dec
aam
icebp
add
es
jns
or
imulb
pop
repnz
mov
dec
and
dec
jb
mov
push
mov
xor
mov
xor
adc
dec
push
or
lahf
andb
daa
rorl
pop
clc
adc
mov
das
into
rorl
out
out
xor
mov
fidivrl
shl
mov
xor
inc
sub
mov
inc
xchg
pop
lock
gs
cmp
mov
xchg
xor
adc
xor
bound
inc
xlat
jp
ss
fwait
cmp
loopne
inc
add
add
xchg
cltd
mov
fsubrs
fadds
and
or
lea
shrl
shl
mov
loopne
adc
jnp
mov
cmpsb
cmp
pop
in
xor
push
jnp
out
lods
aas
push
out
int
adc
xchg
xchg
jnp
xlat
outsb
enter
and
mov
mov
fcomip
mov
mov
addl
daa
jbe
jne
in
subl
dec
and
inc
ret
out
push
jp
dec
inc
aas
xchg
sub
cmpsl
ds
xchg
sub
mov
push
adc
jnp
xor
sub
les
js
dec
nop
daa
jp
call
mov
out
lcall
and
cmpsl
xchg
inc
sub
mov
int
ja
and
mov
pushf
xor
out
push
cmp
lods
jmp
pop
fstl
mov
mov
les
mov
ljmp
xchg
ljmp
add
adc
in
adc
push
in
testl
or
bound
jne
outsl
push
cmpsl
cmp
cld
xchg
pop
push
adc
xchg
xchg
test
enter
out
jecxz
sub
pop
xchg
xor
xor
push
mov
xlat
outsb
leave
out
xchg
jmp
jl
push
cmp
lcall
and
in
xor
mov
movsb
cmp
push
dec
filds
bound
push
sbbl
daa
testb
jge
xor
xchg
sub
and
jae
test
loope
gs
lds
or
pop
flds
int3
push
arpl
jge
es
add
sbb
std
and
adc
and
inc
enter
mov
xor
adc
cltd
sbb
mov
dec
fidivs
sub
or
push
lahf
and
push
dec
imul
jb
xor
mov
test
jno
popa
xor
push
es
mov
lret
sbb
loopne
xchg
insb
js
sahf
xor
fs
inc
fdivr
push
cmpsl
ds
inc
jne
aaa
mov
or
or
das
stos
inc
popa
daa
inc
fistpl
fnsave
jb
rorl
adc
pop
inc
fidivs
fcoml
test
imul
daa
rclb
xor
ja
xchg
outsb
ret
push
and
sbb
ja
adc
popa
in
popa
adc
cwtl
jne
mov
inc
pop
cmc
inc
sub
mov
push
dec
sbbl
aas
add
je
into
insb
mov
and
jge
out
mov
sahf
js
out
inc
sub
pop
testb
add
enter
jmp
ret
ror
cmp
lods
mov
data16
mov
cmc
dec
cwtl
aam
mov
cmpsl
sbb
pushf
pop
fdivs
cmpsb
stc
out
fldl
data16
fidivrs
xchg
mov
and
mov
adcb
cld
jle
lret
and
dec
inc
fnstsw
in
push
out
push
pmuludq
cltd
xor
and
lods
out
fmulp
pop
mov
lods
mov
fsubrp
jnp
mov
mov
fdiv
push
out
fsubs
or
xchg
mov
in
sbb
push
insb
dec
arpl
movsl
dec
inc
nop
mov
push
out
push
addl
jge
pop
into
test
pusha
imull
xor
repz
mov
incb
dec
loop
mov
adc
movsl
mov
pop
mov
repnz
negb
inc
jmp
fildl
hlt
dec
mov
dec
mov
insb
cli
dec
in
ds
mov
adc
popa
add
xchg
inc
push
int
add
inc
gs
or
mov
add
int
mov
xor
adc
scas
movsl
jae
xrelease
lods
data16
mov
mov
repnz
mov
das
loope
stc
inc
fldcw
subb
jo
add
lcall
dec
popa
imul
gs
jge
or
les
xchg
cmp
sub
mov
insl
sbb
push
lods
add
scas
mov
mov
add
arpl
stos
jae
lea
jmp
fbld
cmc
sbb
aam
mov
lds
cmp
rcl
das
jge
aas
repnz
mov
xchg
sub
add
testb
cmp
adc
add
sahf
icebp
sbb
and
jmp
rolb
into
push
movsl
push
inc
mov
loopne
pop
icebp
xchg
mov
pop
sbb
cli
xchg
inc
test
lods
mov
test
rcrb
leave
sbbb
push
add
pop
int3
or
jo
sbb
sbb
pop
xor
bound
pop
dec
arpl
lods
lcall
loopne
adc
pop
push
imul
imul
pop
xor
sub
and
push
outsb
inc
or
sbb
jbe
xchg
cmp
shlb
mov
out
and
or
sub
aad
xlat
cmp
stos
inc
add
sbbl
jnp
mov
fwait
xchg
daa
push
or
loop
int
xchg
nop
stos
fidivrl
shr
addl
out
or
int
insb
mov
add
mov
push
mov
pop
lock
cwtl
jg
daa
pop
cmp
cmp
mov
jmp
stc
test
mov
stos
aad
lds
dec
jecxz
adc
xchg
mov
push
lods
adc
cwtl
imul
or
and
rcrl
or
pop
xchg
mov
les
or
sarl
jecxz
shl
js
add
add
nop
jp
add
cmp
ljmp
lret
jl
std
xor
xchg
ret
into
in
mov
or
mov
sarl
push
insl
add
pop
iret
lods
neg
ja
adc
add
call
andl
mov
ja
pushf
movsl
or
jnp
push
jp
pop
add
push
sbb
ljmp
xor
jle
rol
andb
int
fwait
inc
push
pushf
jb
call
xorl
push
mov
fcoml
mov
sti
cmpsb
jecxz
ret
popf
and
icebp
xor
js
adc
rcl
cmp
pop
aam
mov
in
filds
mov
test
rorl
add
mov
cld
dec
mov
lock
das
jmp
or
jo
cmc
enter
outsb
push
mov
and
sti
in
xchg
jne
mov
mov
xchg
push
out
shl
inc
shrb
cmpsb
cmp
mov
loopne
mov
inc
pop
sbb
mov
dec
das
sbb
insb
mov
adc
arpl
ja
mov
xchg
or
cmpsb
sub
shl
fs
push
sbb
notl
ret
andl
orl
xchg
insl
stos
adc
gs
mov
repz
adc
jo
aaa
jmp
jne
mov
fstpl
aad
imul
popf
pop
imul
fcom
sti
dec
in
negb
and
sbb
pushf
inc
and
stos
sub
aam
enter
push
jne
sub
xchg
pusha
fimull
push
push
fistps
mov
out
std
sti
xchg
sbb
je
daa
push
movsl
pop
fs
adc
jle
ss
popl
les
adc
jnp
mov
cmp
clc
dec
xor
push
movsl
lret
jl
jg
repz
pop
inc
fs
adc
sbb
mov
or
jp
pusha
cld
lret
fcoml
xor
pusha
mov
jl
jnp
hlt
inc
and
inc
pop
arpl
ljmp
push
repnz
adc
jb
mov
rcll
and
aas
stos
or
cmpsb
sub
xor
aas
push
sbb
insb
inc
popa
std
push
xor
mov
ret
mov
xchg
fadds
fs
add
inc
adc
add
in
ja
sub
adcb
pop
js
fldcw
cmp
and
je
push
cmpsb
cmp
xchg
dec
das
cs
ds
pop
xlat
lcall
mov
rcl
bound
inc
iret
mov
lret
mov
in
push
or
das
scas
cmp
jl
insb
push
pop
pushf
mov
out
mov
mov
aas
insb
sarl
add
sub
xlat
nop
or
pop
push
mov
outsb
push
arpl
out
ds
xchg
cmp
xor
jp
sbb
pop
mov
test
xchg
cwtl
and
xor
fwait
sahf
sbb
sub
dec
jle
adc
movsl
loope
xlat
jle
push
pop
cmpsb
mov
je
mov
scas
cmp
lods
inc
gs
divl
jl
shll
mov
jae
lahf
lret
xchg
out
repz
add
or
pop
test
lret
stos
mov
add
or
add
pop
inc
xchg
in
xchg
or
bound
mov
mov
movsl
cmp
xor
adc
xchg
and
ret
mov
push
in
insl
sbb
leave
jl
pop
cmc
arpl
mov
xor
push
out
adc
sbb
adc
dec
sub
cld
rcrl
mov
push
xlat
enter
mov
adc
shlb
fmul
daa
notb
cmp
test
sub
fwait
inc
pop
sti
or
repz
fidivs
loop
fadds
jbe
lret
mov
fists
mov
mov
call
mov
pop
jmp
jle
das
xor
xor
inc
jbe
js
xchg
ret
pop
lods
sbb
dec
mov
xchg
xchg
or
lahf
int
add
rcrb
inc
test
lds
push
or
xor
in
push
dec
stos
cmp
out
xor
in
mov
and
xor
cmp
mov
sahf
mov
push
je
ret
push
sbb
ja
movsl
stc
push
pop
sub
xchg
pop
pop
pop
pushf
mov
add
cli
xor
inc
push
fldenv
rorl
or
inc
sub
pop
ljmp
loopne
inc
jmp
loope
lcall
cli
mov
out
ja
sbb
xor
cld
int3
push
fiadds
or
mov
lods
and
or
popa
dec
out
and
xchg
lock
dec
inc
dec
jecxz
out
lods
aas
ds
xlat
outsl
vlddqu
rorb
call
jb
cmp
nop
add
jae
test
dec
ja
or
ficoml
daa
push
cs
pop
sbb
imul
out
pop
imulb
xor
inc
add
icebp
push
xchg
leave
das
test
xor
sbbl
dec
scas
out
or
jb
insb
cld
sbb
sub
mov
cmp
inc
fstpl
aaa
into
dec
inc
sub
aas
push
push
mov
inc
rol
popf
scas
jne
bound
adc
jb
loop
div
lea
fistl
mov
out
xchg
dec
sbb
jl
fisubrs
les
out
mov
in
mov
aas
dec
adc
push
fstpt
lods
fcomps
jle
lock
call
or
dec
lods
dec
push
insl
cmp
xor
cmp
sbb
mov
cmp
pop
mov
fnsave
call
mov
int3
out
insb
cmp
in
push
or
mov
add
xchg
movl
and
sbb
jecxz
cld
sub
cmp
frstor
int3
jmp
cmp
pushf
fisttpll
inc
push
loope
repz
sahf
push
or
sahf
mov
ss
les
outsb
dec
xrelease
mov
fisttps
cmpsl
test
add
pop
add
lahf
gs
sbb
in
lods
nop
sub
add
scas
nop
addl
xchg
imul
mov
movsl
int
dec
mov
cmc
aas
add
cmp
or
iret
sbb
adcb
xlat
jecxz
jb
add
dec
movsb
mov
lds
xchg
bnd
cmp
hlt
sahf
mov
mov
sub
xchg
add
sar
pop
imul
cltd
cmp
cld
xchg
xor
sbb
inc
xor
pop
cmc
pushf
test
scas
jp
adc
lret
repz
outsl
out
xchg
add
leave
sbb
sub
and
dec
fldcw
pop
dec
loopne
xchg
jmp
pushl
inc
or
xor
and
mov
in
jg
fisubl
add
lret
push
insl
repnz
push
ret
pop
dec
into
and
sbb
in
jle
je
or
or
push
lret
sub
ret
xor
push
inc
adc
movsb
add
aad
stos
sub
dec
mov
bound
xor
pusha
nop
inc
adc
jg
pop
imul
mov
xchg
pop
into
xchg
inc
in
cmpsb
jmp
xor
inc
fiaddl
sub
incl
add
mov
mov
pop
push
sub
xor
ljmp
mov
loopne
xchg
leave
data16
xor
jl
loopne
push
sbb
pop
shll
sub
inc
jbe
scas
push
and
scas
mov
ret
jb
fdecstp
xlat
fdivrs
push
or
dec
jp
les
inc
addr16
and
mov
stos
pop
mov
lret
mov
adc
xchg
mov
aaa
nop
in
mov
xchg
push
cmp
or
fistps
cmp
push
mov
jno
lods
jne
xchg
cmpsl
into
push
xchg
iret
mov
gs
fwait
push
mov
pop
test
arpl
pop
mov
out
lods
push
jnp
sub
cmpsl
cmp
dec
mov
sbb
shll
sbbl
xor
clc
es
sahf
push
xchg
cmp
push
es
or
shll
cwtl
mov
xchg
push
xor
sub
mov
ficompl
sbb
clc
andb
or
imull
stos
dec
or
insl
and
push
mov
aas
div
xchg
popa
mov
stos
jbe
fdivl
lea
adc
xlat
outsb
push
jnp
ret
insl
ret
fwait
cmp
xor
sbb
xor
dec
dec
and
subb
push
mov
jmp
xorb
das
les
jne
enter
pop
mov
mov
mov
js
mov
or
cmp
insl
jo
jns
inc
pushf
add
in
roll
adc
fisubs
push
push
jl
mov
cmp
ljmp
push
pop
mov
mov
sarl
cld
mov
fists
gs
add
adc
outsb
cmp
pop
push
lods
dec
ds
popf
mov
cli
xor
push
sub
nop
test
push
add
lods
or
cs
mov
xor
je
mov
lea
or
xchg
xchg
popf
iret
dec
rcl
add
inc
imul
mov
leave
iret
inc
lds
mov
scas
and
push
xchg
jo
xor
jle
mov
push
or
repnz
shl
mov
pusha
std
adc
idiv
into
movsb
rcll
push
jb
icebp
into
cli
push
es
rorb
dec
fists
ds
ret
fisubs
cmp
mov
ja
sti
test
push
push
fcoml
stos
pop
popa
out
pop
cmc
pop
andl
push
rcl
out
nop
pop
xlat
out
mov
push
std
add
pop
jnp
mov
jo
and
outsl
push
xor
insb
lcall
push
push
cmp
cmp
jp
push
jo
out
insl
xchg
lea
fldl
mov
cmp
rep
sub
fcoml
inc
inc
movsb
pop
cmc
aad
lret
mov
clc
cmp
xor
mov
adc
out
push
aaa
hlt
cmp
xlat
imul
popf
clc
inc
loopne
movsb
fdivrl
pop
test
ja
lock
xchg
jp
dec
arpl
and
imul
inc
or
cmp
insl
lea
add
cmp
push
popf
aad
dec
out
imul
or
fisttps
jno
push
stos
jp
mov
push
movsb
cs
pushl
and
adc
mov
imul
or
pop
rcl
sahf
inc
mov
xchg
sub
mov
lods
inc
rcrb
outsl
movsl
hlt
pushf
dec
and
pop
add
cli
mov
push
cmc
ja
push
test
or
addr16
mov
push
mov
shl
sub
les
fildl
xchg
pop
icebp
ret
and
push
lahf
xchg
stos
mov
lret
in
cli
addr16
sub
ret
lret
or
sbb
ficoml
movsb
xchg
shll
aam
flds
push
fst
jle
add
fdivl
and
aaa
jp
idivb
dec
lret
sbb
stos
mov
adc
cli
xchg
jl
ficoms
adc
lock
pop
pop
mov
jns
mov
fld
inc
mov
scas
inc
mulb
adc
jle
xor
mov
sbb
and
pop
aam
jp
and
stc
insb
or
daa
adc
adc
ss
cmp
dec
out
push
fdivl
mov
cmp
stos
cwtl
xor
xchg
cli
xchg
enter
out
into
mov
mov
jnp
movsb
xor
clc
fs
mov
inc
pop
jae
xor
sub
movlps
ljmp
sub
mov
add
dec
pop
lahf
psllq
xchg
out
andb
or
in
mov
add
loope
mov
scas
and
out
dec
int3
jecxz
dec
into
les
push
pushl
mov
xor
pop
fldenv
test
jnp
xchg
loop
out
addb
mov
dec
sbb
add
ds
test
insb
sub
loop
dec
inc
dec
es
or
leave
inc
xor
sub
adc
mov
jns
xor
imul
inc
adc
pusha
xchg
es
push
test
xor
mov
adc
aad
cmp
rol
lcall
inc
inc
xor
push
popaw
leave
adc
leave
sub
xchg
or
in
and
mov
pop
pop
ljmp
gs
xor
or
jle
mov
clc
pushf
sub
cli
xchg
pop
rolb
pop
push
cld
dec
fidivrs
fistps
sbb
xor
gs
mov
push
mov
aam
mov
lahf
in
jmp
mov
mov
add
xor
cmp
jge
lods
out
push
scas
mov
popf
movsl
and
adc
mov
fldl
getsec
test
jns
dec
push
sub
adc
in
inc
imul
mov
test
fwait
sarb
je
repz
fcoms
pushf
or
fiaddl
pushf
xor
adc
push
cmp
add
jl
imul
stos
inc
adc
addr16
dec
test
mov
jo
out
test
movsl
and
outsl
ret
and
test
push
add
je
or
mov
xor
movsl
mov
out
daa
out
aad
cmpsl
push
adc
clc
xchg
jl
xchg
add
lret
flds
mov
jmp
push
shrl
jnp
pop
lods
movsl
pushl
iret
mov
jp
pop
gs
popa
push
mov
mov
mov
add
aas
addl
inc
into
xchg
sub
addr16
hlt
ret
xchg
dec
addr16
xor
sub
repnz
pop
lods
xchg
popf
loopne
daa
cmc
rcl
pop
lods
mov
xor
aam
pop
cltd
addb
inc
cmp
pusha
jecxz
adc
stos
test
mov
cmp
in
icebp
and
icebp
push
xor
cmp
movsb
push
scas
bound
mov
mov
leave
das
aam
dec
or
fldt
mov
lods
mov
xor
mov
or
inc
jns
dec
out
push
mov
in
les
push
mov
sahf
jno
adc
ss
pushf
jnp
loop
dec
mov
in
ficoms
pop
aas
sub
and
jo
sbb
mov
sbb
dec
pop
add
sbb
mov
cmpl
dec
in
lea
iret
lods
in
mov
cli
dec
sarl
hlt
aas
andb
mov
cmp
shll
sub
lds
xchg
xchg
lock
adc
or
jbe
shrb
sbb
add
mov
repz
xor
push
pop
sbb
xchg
pop
sbb
aaa
and
test
or
pusha
or
jmp
lcall
jb
or
mov
jle
imul
es
addr16
or
mov
js
and
or
xor
fidivs
es
ss
arpl
jo
scas
and
pop
clc
mov
pop
adc
mov
mov
and
dec
mov
lahf
ss
jnp
jg
sahf
fwait
xor
pop
push
movsl
dec
pop
adc
lahf
imul
icebp
mov
imul
inc
xchg
xchg
popa
ret
pop
xchg
mov
loope
out
les
pop
add
nop
pop
push
mov
mov
xchg
loop
cmp
and
repnz
inc
pop
icebp
jb
jns
mov
ret
jnp
cmp
lcall
bnd
adcb
adcb
repz
js
xchg
insl
add
insl
les
adc
sub
dec
push
rorb
mov
inc
sub
xchg
ret
jnp
pop
cmp
add
adc
push
xor
dec
push
mov
dec
popf
outsl
pusha
mov
sub
loope
mov
jecxz
fcmovnbe
ret
push
push
cs
insl
dec
mov
bound
mov
cmp
cwtl
or
sub
movsb
push
aas
adc
lahf
xor
fwait
sti
jp
cwtl
out
cltd
cmpsb
mov
mov
nop
daa
cmp
lcall
and
xchg
jnp
fdivs
imul
xor
jae
and
pop
call
in
mov
mov
data16
cld
jecxz
pushf
adc
dec
sbb
test
xor
fnstenv
js
push
stos
jne
filds
mov
mov
fcompl
sub
repz
push
jns
mov
test
mov
sbbb
popl
mov
jg
mov
ss
xor
cmp
nop
jnp
fiadds
out
and
jno
pop
pusha
pop
inc
cwtl
das
jb
pcmpgtb
dec
mov
dec
sub
andb
or
sub
mov
push
xchg
add
pop
adcl
in
pusha
cmp
and
cli
xchg
mov
dec
in
jne
les
mov
cli
xchg
dec
repnz
aas
sbb
stos
inc
add
add
mov
filds
adc
dec
xor
dec
movsl
xor
aaa
lret
or
cmp
sbb
mov
push
sub
cmp
adc
test
push
xcrypt-ofb
cmpsl
sub
pop
push
mov
xor
add
cs
inc
andb
data16
pop
in
loop
icebp
cmpsb
inc
lods
mov
aaa
inc
mov
sbbb
dec
adc
inc
xor
lcall
inc
lret
xlat
loop
mov
cmp
enter
pop
out
nop
adc
mov
jmp
xorl
test
mov
mov
stos
test
ret
je
and
aad
int
mov
pop
and
jnp
sub
pop
jp
sbbl
add
mov
scas
push
add
pop
sbb
inc
add
or
adc
adc
int3
ja
jnp
stos
inc
xchg
mov
dec
pop
push
ljmp
pusha
clc
mov
les
notb
sbb
cmpsl
sti
movsb
cs
inc
cld
xor
jne
iret
fildl
mov
popa
imull
int3
xchg
adc
aam
mov
xchg
mov
or
inc
in
add
loope
shll
xchg
fucomip
mov
lea
bound
mov
xor
lock
or
mov
jo
dec
xchg
or
mov
adc
in
xchg
fsubrs
stos
or
push
mov
xor
jno
leave
push
adc
int3
push
hlt
cmpsb
add
pop
loopne
mov
and
fucomp
movsl
adc
addr16
in
ficomps
cltd
test
inc
sub
push
leave
cltd
test
lea
out
add
sub
movsl
or
scas
dec
jnp
push
das
inc
push
sbb
rclb
mov
movb
xchg
shlb
and
inc
mov
pop
jno
jno
std
jmp
dec
loope
cwtl
xlat
stos
xchg
push
pop
xchg
push
pop
and
in
iret
out
lret
lock
lods
mov
loopne
or
das
rorb
out
enter
mov
arpl
xchg
pop
jno
xor
popa
jmp
push
add
int3
fs
into
mov
sub
daa
xorb
mov
imul
pminsw
sub
fidivl
lret
mov
pop
push
fisubrl
out
notl
cmpsb
andl
mov
lcall
mov
xor
cmp
in
out
aaa
sub
xor
sahf
cmp
int
push
mov
mov
jo
and
aam
jnp
out
jl
sub
sarl
pop
sarb
loopne
jae
pop
fs
dec
ja
sub
add
dec
cltd
push
fstps
dec
testb
and
mov
mov
jl
out
jle
jmp
andl
cmp
inc
pop
hlt
test
jae
lea
ljmp
fbstp
xchg
fninit
outsb
xor
enter
call
outsl
js
inc
scas
adc
js
mov
out
mov
lods
xor
mov
mov
arpl
dec
inc
push
aas
mov
icebp
or
xchg
out
mov
and
adc
or
push
js
bound
jmp
push
pop
and
mov
push
test
push
lret
push
rorb
xchg
ficoms
lods
jmp
add
std
bound
dec
pusha
lret
icebp
inc
aas
loop
loop
leave
pushf
testl
pop
shr
imul
lea
popf
pop
sub
mov
inc
les
jge
loope
push
xor
add
pop
xor
dec
test
in
addl
aad
pop
sub
push
pop
cs
mulb
arpl
aaa
or
mov
pop
pop
imulb
lret
cld
jge
sub
push
popf
dec
jb
cmp
hlt
adcl
jb
lahf
cmpsl
int3
sbb
jns
out
push
cmpsb
pop
jmp
pop
lcall
and
xchg
pop
pop
adc
gs
pop
faddl
out
fwait
fwait
add
aad
in
inc
out
sbb
andb
fisubrl
push
adc
inc
fdecstp
cltd
dec
loop
sbb
jo
stos
mov
shll
lods
icebp
sbb
cltd
lods
xchg
sti
scas
mov
jmp
dec
pop
push
int3
jb
ljmp
lods
sbb
push
xor
in
dec
fdivs
mov
pop
das
mov
shrl
mov
adc
cmp
pop
shlb
setp
push
jp
push
loope
inc
sti
xchg
push
in
hlt
dec
mov
or
jge
imul
push
sbb
fucomip
gs
popf
test
sar
cmp
andl
call
out
xor
and
push
xchg
inc
imull
cmp
push
stos
jmp
pop
pop
cmpsb
push
adc
pop
adc
andl
jmp
push
cltd
fsubrs
shlw
cmpsb
or
jmp
mov
cmp
mov
loope
mov
iret
or
sbb
inc
and
movsl
mov
lds
jge
add
mov
adc
scas
loopne
lock
leave
fisttps
mov
std
loope
push
push
mov
jmp
mov
mov
test
mov
ljmp
jl
inc
lret
ja
push
inc
push
fists
adc
inc
xor
je
xchg
outsb
push
movsl
jno
push
push
pop
pop
add
mov
mov
imul
cli
inc
pushl
aas
push
dec
aam
aas
sub
stos
or
jns
jbe
mov
loope
sub
mull
fdivrl
jo
es
jle
mov
movsb
in
and
fiadds
xchg
fsubr
lcall
push
jmp
out
mov
dec
mov
push
push
mov
pushf
int3
xor
fcmovu
jne
cs
stos
scas
test
pop
int3
sbbb
rcl
or
in
mov
mov
faddl
and
and
mov
cmp
in
adc
fcmovnb
dec
data16
sub
ljmp
fisubl
and
pop
mov
inc
pop
pop
popf
loopne
iret
jp
mov
cmp
sub
aad
mov
sub
loopne
inc
adc
hlt
jge
insl
test
fisubrs
sub
leave
ret
ds
add
inc
pop
add
aam
dec
inc
mov
push
inc
mov
bound
in
jmp
mov
fwait
adc
rol
out
scas
pop
push
sub
jb
inc
adc
lcall
cmpsl
filds
fdivrl
inc
call
outsb
adc
jnp
or
or
scas
adc
xchg
sbb
cmc
and
shrb
fwait
testl
faddl
push
xor
jg
cmpsl
push
cld
xchg
xchg
sub
and
sbb
or
loope
cmpsl
ss
ss
pop
xchg
shlb
in
and
test
jecxz
insb
jns
sbb
stos
dec
sbb
pop
push
inc
xor
mov
pop
jmp
out
clc
insl
aad
mov
or
fbstp
ja
push
pop
or
int3
js
and
xchg
stos
sub
mov
and
mov
out
push
and
int
push
stos
and
lahf
xor
cmp
in
inc
lcall
push
out
inc
sub
dec
adc
push
mov
mov
cmc
shlb
rorb
scas
push
out
stc
mov
cmp
sub
mov
inc
dec
loopne
mov
mov
fdivl
jbe
fs
sbb
lcall
fsubrl
jle
stc
int3
fdivrs
iret
popa
out
push
xchg
lock
divb
daa
stc
dec
in
lcall
cwtl
xor
mov
mov
andl
enter
outsl
rcrl
jecxz
xor
in
jnp
mov
xchg
cli
add
fiaddl
into
mov
fistl
dec
jle
inc
out
aaa
test
out
fxch
pop
or
out
push
out
pushf
test
sbbl
sbb
dec
jg
jecxz
lret
shl
in
inc
xchg
xchg
add
mov
mov
cmp
fidivl
push
mov
pop
stos
jae
xchg
cmp
lret
fucomi
dec
mov
jno
jbe
mov
add
mov
xor
xchg
mov
mov
jg
and
outsl
cli
xchg
mov
imul
in
lds
lock
cmpsb
lods
gs
inc
cmp
jne
sub
inc
pop
out
pop
add
stos
cmpb
lods
out
add
cmp
in
sbb
and
mov
imul
inc
aad
dec
stc
push
xchg
sub
push
mov
lret
sub
shl
movsb
xchg
mov
fwait
sbb
mov
or
mov
test
mov
movzwl
mov
adc
inc
fdivr
pop
add
lods
mov
fistpll
adc
dec
add
stos
int
sub
xchg
push
sbb
cmp
cwtl
insl
dec
mov
adc
in
xlat
mov
rol
xor
dec
cmp
jmp
daa
out
ret
repz
push
adc
scas
jno
jns
jae
push
movsl
dec
call
jbe
sbb
bound
popa
mov
shlb
and
in
lea
and
insl
pushf
bound
dec
jbe
jae
push
daa
add
sbbb
das
push
jecxz
orl
or
addr16
pop
imul
cmp
mov
mov
bound
loopne
dec
ret
jae
add
sub
mov
push
dec
test
lcall
and
and
inc
mov
inc
xchg
rcrb
dec
fbstp
out
jecxz
mov
push
js
roll
rorl
test
nop
gs
ljmp
or
mov
mov
sub
outsb
or
fs
insb
sbb
inc
or
into
std
xchg
xchg
rcll
mov
fsubrl
imul
jp
ja
xor
jge
jg
sub
sbb
sbb
imul
out
mov
or
mov
icebp
test
outsb
cmc
dec
dec
out
imul
push
in
rcrb
inc
std
test
dec
lcall
icebp
outsb
jl
adc
mov
gs
repnz
lret
add
sub
lret
push
add
sub
jne,pn
push
push
arpl
xor
sbb
or
aas
testl
xor
cli
pop
inc
lods
test
sub
int
scas
inc
scas
jb
loopne
inc
int3
fsubrp
es
mov
dec
xor
mull
out
push
mov
rol
sarb
aad
inc
pop
mov
nop
pop
add
ret
add
test
rorb
jae
mov
fnstsw
stos
jne
fistpl
aad
jo
sub
inc
sbb
inc
xor
mov
ret
ret
mov
shr
out
fisttpl
inc
push
test
push
push
js
in
sbb
inc
dec
shll
jge
call
aas
out
jae
insl
ljmp
cmpsl
or
cld
test
adc
outsb
nop
xchg
mov
jcxz
xor
inc
xchg
cli
push
pop
sbb
mov
and
jmp
cmp
lahf
xor
jne
fidivrl
dec
stos
fwait
mov
scas
dec
mov
jno
movsl
in
mov
fwait
movb
das
mov
sub
repnz
fbld
inc
ljmp
shlb
adc
xor
sarl
imul
lock
xchg
icebp
jge
out
daa
packssdw
mov
push
mov
ds
lahf
add
and
cltd
scas
addl
sub
dec
xchg
das
pop
out
jecxz
add
push
mov
test
std
push
mov
ja
aas
out
sub
insl
pop
mov
repz
dec
movsl
icebp
xchg
xchg
sub
outsb
aad
lods
push
add
pusha
call
test
enter
and
and
je
dec
lcall
adc
out
sub
fwait
cmpsl
dec
jmp
movsl
jo
pushf
sub
mov
xor
ljmp
push
aad
lcall
dec
out
xchg
push
jne
insw
aam
add
add
pop
fstpl
mov
lret
sub
outsl
add
div
cmp
sub
cmc
jge
pop
and
mov
es
xchg
das
pop
ljmp
push
adc
jl
mov
add
fbstp
cwtl
lods
stos
sub
ret
stos
les
testb
jg
adc
mov
in
adc
push
leave
pop
xchg
or
popa
cmp
or
call
je
xor
hlt
ljmp
in
and
aad
push
sub
sbb
bound
outsl
enter
nop
iret
xchg
ret
push
pushf
enter
icebp
xchg
leave
push
arpl
mov
scas
mov
or
clc
cmp
fwait
clc
or
mov
xchg
xchg
icebp
cmp
and
es
stc
and
xchg
loopne
push
popf
inc
add
arpl
cltd
test
in
jl
insl
mov
sub
pushf
repz
pop
push
mov
pop
push
bound
roll
pop
jg
mov
pop
outsb
cmp
mov
popf
pop
outsl
add
mov
pop
sbb
mov
adc
rolb
int
xor
cmpsl
inc
out
mov
mov
pop
pop
test
movaps
sub
fidivl
arpl
pop
jmp
push
mov
sti
lahf
or
lea
icebp
incl
sub
xor
stos
jmp
xchg
inc
frstor
call
cmp
lahf
pop
mov
sub
sub
or
mov
and
dec
in
js
push
mov
call
hlt
iret
push
mov
shlb
pop
xor
addr16
test
xor
arpl
sbbb
push
mov
xchg
test
lret
sbb
sti
test
cmp
cmp
fsubrs
xlat
xor
push
je
out
push
cmpsb
fwait
gs
sbb
int
jecxz
rclb
fidivrl
sti
icebp
adc
cld
or
sub
push
mov
leave
pusha
std
daa
xchg
sub
xchg
mov
sahf
and
dec
ds
idivl
push
repnz
leave
js
fsubs
mov
sbbb
jbe
ds
pop
rcl
cs
push
push
dec
movl
rcrl
lcall
fistps
imul
loope
jb
inc
repnz
cmp
and
mov
mov
jmp
mov
pop
ja
adcl
test
cmpsl
and
add
dec
out
cltd
jp
imul
adc
rorl
mov
mov
adc
mov
push
jb
xor
ret
inc
pop
jo
les
dec
fucomi
orb
push
adc
je
std
inc
test
inc
push
les
int3
arpl
lds
push
mov
mov
mov
mov
or
or
mov
ret
jo
jp
out
test
jnp
jp
add
add
jle
and
les
cli
xchg
shrl
call
cmp
loope
js
mov
push
sub
test
rcrb
push
mov
jg
fistps
lods
inc
in
outsl
and
add
pop
mov
fndisi(8087
jb
aas
repnz
cli
jne
sbb
inc
push
xchg
in
ret
lea
loopne
push
repz
pusha
lret
pop
leave
lods
test
lret
cmp
gs
xchg
mov
out
stos
inc
cld
pusha
rep
add
addb
fwait
outsl
es
jo
dec
in
adc
sub
insb
js
dec
dec
jecxz
inc
sbbl
lret
fdivs
shrb
nop
sub
dec
scas
test
dec
adc
jb
iret
push
imul
pop
leave
inc
in
adc
jns
pop
in
lcall
mov
lods
xchg
and
pop
and
jne
push
adc
sub
repnz
fcompl
arpl
rcrb
ffree
sbb
and
sbb
inc
adc
lret
pop
scas
int
bound
push
aam
jmp
mov
cs
insl
adc
lods
stos
cmpsb
test
pop
jbe
jb
dec
xchg
dec
std
lock
nop
and
or
int3
dec
sbb
jecxz
mov
mov
aam
scas
cmp
sub
or
jmp
inc
pop
cmp
pop
mov
add
or
adc
sub
jns
jne
enter
es
xchg
xchg
inc
icebp
adc
sub
fdivrl
xchg
fucomip
es
jge
std
cmp
xorb
mov
aam
decl
mov
pop
mov
cltd
mov
xorb
mov
pop
xchg
sub
dec
in
pusha
cmc
mov
push
mov
sahf
push
mov
insl
and
cmp
cmp
or
orb
pop
pop
cmp
mov
mov
enter
sub
int3
push
xchg
sub
icebp
push
shr
std
mov
jmp
push
stos
fs
mov
add
cli
mov
mov
jb
add
rcrl
and
xor
mov
ja
popa
leave
enter
lock
aad
inc
dec
ljmp
cltd
testl
sub
sbb
lret
in
mov
xchg
xor
push
loopne
lock
mov
sub
movsl
jo
cmp
add
mov
mov
xor
iret
das
xlat
xor
aaa
cmp
cmp
or
sbb
fxch
shrl
jns
jnp
lcall
mov
mov
cmp
lods
mov
mov
or
je
enter
in
sub
popf
lods
xor
xor
jne
sti
push
inc
stc
adcl
fcomi
out
jl
push
mov
scas
sub
xchg
arpl
lahf
pusha
push
iret
cmc
les
call
out
jp
and
xor
cmpsl
stc
sbbl
loope
jg
add
or
cmp
jae
and
test
add
dec
enter
sub
addr16
pop
out
popa
cmp
enter
sub
cmp
pop
enter
sbb
sub
rsqrtps
xor
mov
enter
lahf
inc
cli
add
imul
lea
xor
xorl
imul
sbb
push
outsl
pop
jecxz
push
and
loope
pop
bound
pop
cs
and
cli
or
out
mov
mov
and
pop
or
loop
push
test
xchg
push
sti
cwtl
push
shll
dec
insb
mov
cld
dec
adc
stos
fbld
cmp
ds
cmpsl
aaa
adc
in
gs
mov
fildll
xchg
jg
sbb
les
in
add
movsb
mov
dec
xor
pop
fsubr
mov
push
scas
cmpsb
mov
xlat
shr
push
into
adc
mov
mov
lds
mov
daa
or
add
push
sbb
cs
dec
popa
mov
xor
and
cld
das
cli
mov
adc
mov
cld
clc
sti
stc
sbb
sub
add
jp
jnp
xchg
gs
out
mov
add
adc
test
add
mov
adc
xor
and
cwtl
sub
jl
xchg
inc
pop
repz
sub
and
movb
push
arpl
call
into
data16
add
fisubrs
cmp
xchg
repz
sbb
ja
adc
popf
push
ds
addr16
adc
xchg
out
lods
xor
incl
and
mov
outsl
jnp
or
outsl
push
cmpsb
mov
push
sub
std
sbb
jnp
dec
jns
nop
cmp
inc
test
sti
repnz
ret
dec
pop
mov
dec
cmp
sub
cmovno
mov
dec
test
xor
dec
mov
std
pop
enter
pop
scas
adc
mov
push
lods
inc
pushf
ljmp
lcall
push
frndint
cli
push
inc
or
popa
jg
dec
mov
inc
das
lods
fdivrl
ret
imul
shrl
ljmp
fistpll
fnsave
popa
ret
in
jl
aam
mov
ret
jle
mov
in
loop
lds
nop
mov
jle
ret
ds
add
movsl
xchg
rorb
inc
cld
xchg
icebp
cmc
fdivr
ss
push
stos
arpl
jne
pop
ffreep
inc
inc
lea
xchg
in
mov
mov
dec
das
fistl
dec
add
rorb
mov
sub
out
ljmp
int
push
in
add
iret
and
xor
sub
sahf
imul
lods
jg
jge
xchg
es
push
jle
and
inc
jnp
in
or
inc
arpl
ds
pop
js
dec
lods
pop
sub
stos
add
xchg
mov
lahf
sub
clc
cmp
stc
in
add
pop
mov
xorb
int
aad
mov
xorl
jns
lahf
push
in
iret
cld
mov
arpl
cmpsl
loop
xchg
push
xchg
rclb
mov
hlt
mov
insl
sbb
jle
fidivs
sbb
sahf
cvtps2pd
jns
mov
lcall
mov
and
addb
lahf
xor
adc
sub
jae
mov
dec
push
or
jl
ficoml
push
jle
mov
gs
mov
lret
mov
aas
jmp
pop
jl
hlt
cmp
cltd
repz
jge
adc
xchg
stos
and
sbb
jg
jne
int3
popa
sbb
and
ret
push
lret
push
lds
aas
fwait
xchg
fstps
cmp
mov
imull
inc
xchg
pushf
cli
int
xchg
pop
fucomip
adc
fucomi
jle
adc
cmpsl
ds
sbb
iret
mov
dec
pop
xor
inc
iret
lcall
insb
out
cmp
add
xorl
scas
lea
jb
sahf
or
xchg
jnp
sbb
aad
repnz
pusha
jl
dec
xchg
popa
mov
adc
dec
jae
cs
or
adc
shlb
mov
inc
rorb
test
daa
into
mov
xchg
cmp
xorb
hlt
jge
in
mov
subb
push
out
adc
movsb
les
rclb
call
imul
add
push
ret
bound
fstpt
push
int3
lret
addr16
dec
shlb
mov
adc
inc
gs
enter
bound
insb
xchg
add
scas
push
mov
mov
lds
inc
push
add
add
pop
int
popa
push
aam
int3
push
or
or
mov
pop
jmp
jg
sti
adc
addb
or
testl
cmp
xchg
mov
movl
xchg
xchg
repz
repnz
jnp
ret
loop
sbb
xchg
sbb
lods
loop
and
push
lcall
out
test
bound
out
pop
lock
jg
mov
dec
ficoms
aam
push
or
inc
push
and
fildll
incl
das
jbe
mov
dec
mov
mov
daa
ljmp
jne
inc
xchg
push
stos
mov
cmp
inc
sub
or
push
call
aaa
add
fldcw
mov
or
push
pop
lods
ja
fldl
xchg
xlat
shlb
add
jecxz
mov
les
mov
ljmp
iret
push
rorb
push
jge
fstpl
ds
xor
mov
mov
jns
pushf
cmpb
insl
adcl
pop
add
jge
icebp
in
cmp
jge
fdivl
dec
or
outsl
lahf
mov
sub
cmpsl
out
call
fsts
mov
insl
jecxz
mov
shr
mov
mov
ja
sbb
or
add
mov
mov
mov
test
xor
push
flds
mov
sbb
and
out
ret
mulb
and
out
mov
int
xchg
pop
lret
and
inc
pop
push
rorb
xchg
pop
jae
dec
sub
xchg
fidivrs
pop
push
ret
inc
add
cwtl
xorl
les
popa
test
xchg
es
das
aam
pop
popa
cmp
test
rol
pushf
cmp
test
nopl
push
int
inc
idivb
pop
outsb
add
arpl
sahf
cmp
shlb
mov
testl
jno
jp
iret
xor
aad
mov
mov
fsubl
leave
jne
mov
inc
std
in
insl
cmp
sahf
and
push
mov
dec
cmp
sub
push
jl
push
popa
jbe
aaa
cltd
ret
xor
mov
pop
cmp
gs
lcall
xchg
bound
inc
mov
out
inc
fiaddl
out
sub
out
ljmp
bound
cwtl
lods
fdivrl
mov
push
fimull
and
add
ss
scas
xchg
ljmp
loope
aam
imul
cmp
pop
sbb
add
sub
aas
scas
push
loope
test
aam
popf
subb
psraw
cltd
sub
xchg
ret
movsb
add
xchg
pop
imulb
xchg
cmpsl
pop
rolb
jne
xchg
mov
sar
and
stc
xor
imul
and
scas
data16
enter
aaa
or
cmpsl
and
mov
jb
in
enter
sbb
xchg
push
movsl
fwait
mov
mov
mov
lea
dec
xor
cld
push
lds
ret
insl
jge
lahf
inc
or
or
adc
cmpsl
xor
inc
filds
add
orps
sbbb
pop
and
inc
pop
repnz
cmc
push
push
insb
rorb
add
fisttps
or
cltd
push
xchg
sub
mov
arpl
push
jmp
or
pop
shr
xchg
pop
sub
xlat
and
cmp
jecxz
nop
cltd
loopne
lods
adc
loope
mov
adc
dec
pop
js
imul
aaa
sahf
imul
es
sbb
xchg
adc
out
xchg
adc
cmpsb
sbb
xchg
cs
mov
movl
push
out
cwtl
mov
cwtl
lds
lods
dec
dec
andb
cs
pop
push
roll
xor
mov
shl
jmp
lahf
jns
sbb
jno
fbstp
mov
into
jmp
or
xor
testb
mov
xor
add
ljmp
imul
daa
inc
cmp
mov
js
adcl
dec
fists
popf
mov
out
in
dec
add
out
pop
mov
xor
pusha
sbb
cli
xchg
jg
adc
xchg
pop
data16
lret
pushl
pop
leave
xchg
mov
cwtl
sahf
push
or
xchg
push
cltd
and
mov
add
lahf
xor
subb
dec
fistpll
cmc
add
dec
cmpsl
insb
fists
in
mov
enter
testl
jge
repz
xchg
mov
les
stos
lret
jge
sub
lds
push
add
push
outsb
jl
insb
mov
fisubl
jecxz
mov
jbe
and
stos
dec
push
fcoml
fisttpll
mov
lahf
arpl
bound
dec
iret
ja
andl
test
stos
and
or
ret
and
negb
fidivrl
mov
cmp
sti
xchg
fcomip
mov
repz
dec
adc
iret
gs
inc
mov
pop
pop
adc
and
push
inc
xchg
fwait
sti
ret
and
jns
pop
jne
mov
add
dec
aaa
or
xchg
pop
jno
mov
cwtl
rclb
enter
jp
mov
jge
sarb
sub
in
icebp
int3
fnsave
cli
xchg
or
cs
pop
mov
out
mov
lea
dec
mov
icebp
sbb
aaa
pop
sbb
out
sbb
bound
out
decl
or
int
rorl
repnz
sub
ljmp
divb
test
insl
cmpsb
es
inc
cld
fwait
cli
cwtl
fmul
cwtl
es
test
test
jbe
int
jge
ja
pushf
pop
mov
in
and
fs
xor
addr16
push
sbb
dec
das
dec
loopne
dec
loop
xor
flds
out
cmp
in
repz
sub
jae
add
sbb
ret
xor
and
mov
xor
iret
movsb
mov
lcall
cmp
mov
repnz
mov
xor
ja
lods
jmp
xor
or
ljmp
pushf
out
repnz
mov
loop
std
xlat
pop
and
test
popa
cmp
imul
mov
adc
std
inc
ret
dec
jne
ljmp
dec
xchg
add
loop
cltd
adc
out
cmp
imul
xchg
fs
xchg
jne
mov
dec
pop
or
mov
das
lret
sub
add
push
cmp
dec
mov
imul
sub
push
lods
mov
lret
and
outsb
mov
vmulss
je
jb
imul
push
das
popa
aad
leave
cmp
and
insl
shrl
stos
xor
andb
scas
mov
xchg
in
mov
pop
rep
inc
inc
insb
addb
scas
cmp
jle
cmpsb
or
leave
test
fistpll
flds
sahf
pop
cmpsl
and
cld
mov
addr16
orb
scas
in
add
xchg
xor
fs
imul
mov
out
test
or
dec
or
out
repz
dec
lahf
and
cmp
and
loop
cmp
es
sub
pop
inc
inc
xor
cmp
or
mov
pop
sub
dec
mov
and
stos
rcl
cmpsb
imul
jl
mov
stc
jnp
cs
jb
sti
scas
sub
xchg
mov
lcall
out
jbe
or
dec
mov
add
push
sub
cmp
dec
mov
cwtl
test
imul
sbb
repz
test
sahf
out
bound
mov
ss
jns
adc
js
enter
jne
inc
xor
sub
xor
jns
mov
sbb
cmp
sbb
cmp
aam
push
ret
mov
out
movsl
mov
xchg
mov
fidivs
test
cmp
mov
pop
adc
shrl
push
pop
cmc
dec
dec
dec
mov
sub
or
adcb
lds
test
inc
lods
sub
pushf
lea
out
out
jno
inc
popa
jmp
clc
adc
dec
xor
insb
adc
push
stc
scas
ljmp
pushf
xor
ret
lods
sub
dec
fcmovne
ret
int3
push
inc
mov
jne
pop
clc
test
nop
dec
xchg
popf
inc
push
lahf
xor
ss
lret
pop
push
mov
mov
leave
add
push
mov
and
xchg
jbe
std
xchg
xchg
add
sbbb
rcr
fs
lret
xchg
inc
aad
es
push
fs
test
jne
pop
ja
inc
pop
mov
and
call
pop
push
cmp
imul
push
lea
lods
cli
lret
cmp
or
ret
adc
cmp
out
pop
lock
out
xchg
loope
rolb
fstl
loop
arpl
push
sbb
repz
adc
pushf
cmpsb
jecxz
fdivrs
iret
loop
test
data16
stos
leave
jle
out
pop
mov
add
leave
dec
popf
sub
or
stos
mov
sbb
test
cmpsl
je
jmp
cmpsb
repnz
flds
jne
pushf
mov
xchg
jbe
fstps
mov
or
push
cmp
xchg
scas
fidivs
jp
pop
inc
jmp
sahf
xor
into
ja
lcall
movsl
push
pop
add
lcall
les
pop
addl
cmp
rorl
pop
mull
lds
jp
xor
sub
sub
rcll
cmc
or
std
inc
insl
clc
dec
test
dec
dec
cli
scas
adc
in
jne
insl
inc
sub
dec
lcall
xor
sbb
push
cmp
or
clc
cmp
fnstsw
adc
jecxz
pop
ret
cmp
out
pop
out
add
adc
dec
inc
push
ret
pop
int
sub
test
loope
mov
sbb
stos
outsl
adc
bound
xor
shrl
cmp
inc
dec
fadds
movsb
xor
inc
scas
push
pop
sub
mov
in
aaa
lret
lcall
dec
lds
fstpl
mov
cmp
test
add
shrb
mov
mov
fcoml
cmp
sub
push
popf
push
daa
push
fnstcw
and
and
push
cmc
dec
dec
jp
xchg
popf
xchg
inc
daa
mov
iret
test
jg
adc
mov
cld
and
push
xchg
mov
shrl
repnz
les
dec
loop
aaa
stos
pushf
adc
out
push
xor
sub
imul
fmull
jns
aam
in
add
sub
jge
or
inc
pop
add
and
mov
xor
stos
inc
rcpps
es
xor
ss
in
inc
adc
imul
and
cltd
int3
ficomps
testl
cmp
push
ja
xchg
pop
lock
add
jge
leave
dec
iret
addr16
push
lret
or
int3
inc
pop
cmpsb
testl
mov
lcall
inc
jns
push
addl
aam
rolb
lock
mov
insl
stc
inc
push
mov
adc
jnp
jmp
cmp
pop
or
or
jl
pop
mov
loopne
out
adc
add
push
xor
popf
cmpsl
mov
mov
mov
mov
mov
rorl
sbb
test
cmp
inc
shrb
incl
lds
jmp
notb
cmc
push
inc
ret
mov
ret
lea
std
mov
aam
fcoms
xor
mov
imull
mov
addb
std
jo
test
out
push
test
jge
sbb
xor
sahf
push
fldenv
cmp
mov
leave
je
in
fnop
or
cld
pop
dec
imul
xlat
mov
jmp
cmp
les
mov
pop
movsb
pop
xchg
repnz
xchg
push
mov
test
mov
lret
es
mov
mov
testl
in
cmp
xor
lahf
cmp
out
cmp
iret
fidivrs
jb
xor
test
cli
pushf
push
mov
adc
dec
pop
and
ss
aaa
pop
fstpt
fwait
repnz
jle
pop
cmp
adc
cmp
clc
out
dec
sub
inc
jnp
mov
adc
inc
inc
imul
mov
jne
adcl
ret
cmp
add
mov
lock
pop
cwtl
dec
cmp
sahf
ret
cld
adc
adc
lea
cmp
clc
xchg
packssdw
sbb
and
sub
setns
push
inc
push
out
pushf
outsl
ret
loopne
mov
int3
adc
adc
dec
popf
fidivl
xor
outsl
jb
and
shlb
pop
add
mov
in
push
push
jb
lret
or
push
into
lods
push
test
mov
aam
ja
xchg
test
push
aaa
mov
add
fs
in
mov
movsb
and
pop
mov
mov
stos
out
adc
lret
push
jecxz
imul
imul
sarb
xchg
jge
sbb
adc
sbb
inc
add
cmp
dec
fucomp
xorb
outsb
push
pop
mov
aas
insb
addl
jno
addr16
loope
xchg
pusha
int
out
stos
lret
mov
cmp
sbb
ss
inc
call
mov
aas
push
lods
xchg
ficomps
insb
mov
outsb
or
mov
mov
aam
negl
cwtl
jp
or
adc
aad
xlat
out
stc
enter
lcall
mov
mov
aaa
jbe
pop
shrl
incl
pushl
roll
or
inc
lea
rcl
pop
iret
dec
stc
xchg
js
bound
push
mov
push
es
or
and
adc
test
ja
push
rcll
cmp
push
inc
gs
repnz
inc
or
ja
or
jg
sbbb
sbb
cmp
test
lcall
clc
xchg
sti
xor
xor
mov
mov
ljmp
out
xchg
sub
mov
shll
push
sub
enter
lret
pop
jmp
popf
xor
jb
lcall
sarb
mov
insl
pop
dec
out
pop
or
mov
subb
decb
or
xchg
pop
outsl
lods
mov
and
adc
js
sub
push
movb
jle
push
in
pusha
loopne
jbe
cmc
push
int3
jmp
ljmp
dec
and
cs
or
add
setne
neg
and
imul
cmp
in
mov
xor
stos
jae
push
int3
cwtl
xor
ret
inc
inc
ds
mov
push
ror
cmp
imul
arpl
cmp
inc
push
orb
mov
sub
ret
dec
and
xchg
add
js
mov
push
ljmp
xor
imull
mov
divl
das
cmp
jp
stc
nop
int
sti
pop
out
pop
stc
pop
std
xchg
lea
out
mov
aaa
mov
mull
inc
int3
adc
fisubrs
cmp
fdivrl
jnp
int3
or
nop
daa
or
sti
xchg
movsl
pop
or
clc
sub
fcoms
out
xlat
jbe
push
test
or
add
js
pusha
jl
int
gs
add
insl
add
sahf
das
fcompl
mov
xchg
sub
sbb
sub
mov
mov
or
push
mov
adc
and
jmp
push
sbb
xchg
imul
cltd
sar
add
or
inc
push
pusha
and
cmpsl
push
out
popf
lods
movsb
ljmp
insl
mov
les
inc
aaa
sub
xchg
repnz
sub
imul
rolb
iret
and
sub
mov
lret
pop
dec
cli
ret
cwtl
aam
fucomip
cwtl
cmc
adc
adc
jl,pt
add
jbe
sub
push
mov
mov
clc
popl
and
lret
loop
jno
enter
xchg
cs
push
pop
mov
rcl
add
sub
mov
mov
sub
push
mov
dec
loop
push
imul
xchg
dec
shlb
dec
lret
xor
mov
or
cmp
xchg
adc
lret
arpl
sub
jo
sub
inc
sbb
jo
pop
and
push
js
add
adc
lds
push
lock
jl
jp
xor
icebp
mov
out
cmp
lcall
das
jbe
cmp
jnp
xor
push
int3
and
stc
shll
lods
cmpsl
cmp
nop
aam
ret
in
mov
aad
inc
rcrb
stos
out
pop
mov
or
cmp
cmp
gs
stos
es
or
outsb
cld
pop
sub
mov
pop
lds
int
out
ja
cwtl
fistpl
mov
mov
loope
mov
in
jecxz
jecxz
bswap
stc
mov
cmp
lock
in
ja
fs
inc
insb
cwtl
decb
aam
or
addr16
mov
sbb
jns
test
and
and
sbbl
hlt
sarl
inc
push
stc
dec
rorb
xor
lods
xchg
mov
in
cmp
mov
push
jns
dec
repnz
lea
into
push
jle
fidivrl
fstl
jl
xchg
cmp
aaa
pop
bound
daa
mov
sub
insb
shrb
inc
or
in
mov
and
mov
popf
push
mov
out
inc
daa
sahf
push
mov
push
outsl
insl
sbb
clc
mov
sbb
xchg
sbb
lods
jg
movsl
sub
test
pop
rclb
dec
fmuls
sahf
jmp
addr16
lds
jnp
xchg
mov
rol
xchg
fldt
mov
adc
cmp
mov
jecxz
mov
inc
arpl
idiv
or
repnz
and
mov
push
mov
lret
lea
stos
cmp
es
das
pop
mov
es
adc
add
push
inc
mov
adc
add
xorl
sbb
mov
push
call
test
jno
das
push
sar
push
test
repz
mov
lret
pop
xor
push
popf
add
jmp
inc
mov
imul
dec
mov
lahf
dec
stos
xlat
stos
mov
or
add
loopne
call
mov
cmp
mov
test
aad
fsubrp
cmp
loopne
out
pop
fsubrl
or
or
loopne
mov
xchg
scas
add
shrl
test
gs
adc
std
adc
sub
add
inc
rol
xor
add
add
pop
jmp
cmp
mov
mov
pop
insb
mov
cmp
pop
repz
jnp
inc
bound
loopne
dec
pop
jne
shr
dec
imul
inc
add
fmull
push
xor
cmp
gs
sahf
lret
sub
incb
jge
xor
and
inc
or
push
mov
jo
lock
xchg
cmp
shlb
mov
ret
sub
pop
loope
add
mov
mov
call
cmp
fucomi
repnz
stc
dec
test
and
lahf
sub
mov
fucomip
rorb
xor
xor
js
dec
mov
and
mov
mov
sahf
sub
xlat
shrl
dec
or
dec
xchg
movsl
pop
ret
cmp
jmp
xchg
out
rclb
push
dec
aad
stos
dec
frstor
sub
add
inc
mov
dec
sarb
out
filds
data16
push
pop
inc
push
scas
push
xor
std
jp
inc
jg
mov
rolb
shrl
clc
jae
mov
call
hlt
pop
ljmp
and
lds
hlt
mov
xor
cmpsb
bound
adc
inc
popf
in
scas
dec
aas
xor
sbbb
push
aad
mov
in
call
push
enter
out
aad
cmp
cmp
ljmp
mov
push
cmpsb
icebp
mov
js
inc
addr16
mov
sub
pushf
scas
jmp
jmp
fdivl
cmp
pop
out
xchg
test
pop
cltd
test
cmp
and
sbb
pop
fs
insl
adc
dec
jg
test
out
mov
xor
lock
std
rol
cltd
sti
cmp
rol
xor
mov
inc
push
rcr
inc
add
mov
pop
xorb
daa
adcl
mov
inc
adc
dec
push
test
int3
ds
mov
nopl
iret
repnz
sbb
movsb
cmpl
sub
push
mov
sub
daa
pushf
fs
push
imul
add
jo
xchg
dec
fidivs
push
inc
lods
cmc
aas
clc
mov
cltd
xchg
xor
mov
dec
adc
rcrb
adc
movsl
inc
aaa
lahf
pop
loopne
sub
jg
loopne
xor
std
pop
ja
inc
aad
loope
int3
mov
push
bound
pop
pop
adc
mov
mov
out
aaa
or
mov
lcall
lods
scas
into
ret
subb
clc
aad
xchg
outsl
sbb
nop
sbb
nop
cmp
dec
clc
pop
sbb
jbe
filds
sbb
pop
adc
xor
out
xchg
aam
sbb
mov
icebp
add
jp
push
out
push
adc
inc
sub
inc
jmp
fs
pop
add
cmpsb
in
xor
and
scas
mov
cmp
cmp
adc
mov
mov
push
call
or
lock
nop
in
test
addb
daa
cmp
sub
popf
add
test
xchg
fidivl
enter
cmpsb
xor
jp
imul
stos
mov
mov
jns
pop
in
rcrl
inc
xchg
fldenv
adc
xchg
mov
jl
xorl
or
je
loope
fsubrl
test
ret
daa
adc
mov
dec
scas
inc
jle
adc
jnp
pop
icebp
push
mov
pop
add
push
cmpsl
andl
sub
inc
movsl
xor
or
push
insb
jle
dec
dec
in
cli
mov
in
pop
push
scas
test
lret
sti
hlt
sub
sub
fidivrl
popa
cmp
mov
lds
js
mov
sub
mov
sub
mov
std
mov
dec
ret
nop
rcrl
xor
repnz
inc
lret
in
and
int3
or
inc
xor
cmpsb
arpl
mov
in
lods
ret
xchg
test
in
sub
or
xlat
imul
les
push
ret
sub
cmp
sub
xor
jne
adc
xchg
out
jno
lret
dec
ret
aad
div
jle
dec
lahf
mov
cli
xchg
or
imul
jl
cmp
ret
cmpsb
imul
lret
xchg
add
mov
inc
cmp
push
xchg
fiadds
inc
cmp
jge
push
dec
adc
mov
jne
lret
add
outsl
shrl
mov
data16
sub
mov
xchg
insl
sbbb
push
repnz
push
adc
out
xchg
sub
dec
pop
lock
fsubrs
fnstenv
dec
jo
stc
mov
inc
inc
leave
jge
mov
in
fwait
xor
adc
xchg
cmp
rcrl
xor
mov
mov
outsl
jnp
mov
xchg
and
adcb
gs
or
xchg
pop
fiadds
or
inc
pop
or
mov
jbe
es
mov
mov
jge
cmp
dec
mov
push
mov
push
lods
das
shrb
add
addl
sbb
push
push
xor
dec
hlt
mov
xchg
in
lds
adc
popa
test
gs
cmpsl
jmp
addl
stos
lock
push
call
and
ret
xchg
mov
ficoms
fadd
outsb
sti
mov
ss
sbb
dec
enter
lock
or
add
sbb
int3
pusha
fucomi
inc
sti
lods
pusha
lahf
pop
pop
sbb
daa
jnp
insb
and
outsb
stos
ficoms
pop
test
fcoms
in
jb
mov
icebp
mov
mov
push
cli
pop
mov
aas
insb
cli
icebp
mov
xchg
sub
sarl
jle
test
sbb
ja
push
xchg
shrl
sbb
sti
mov
jmp
jmp
push
mov
adc
pop
bound
inc
mov
es
push
xlat
push
push
stos
jno
cmpl
add
jp
cwtl
stos
stos
pushf
subl
xor
mov
fdivp
jecxz
cmp
fisttps
jl
sub
hlt
sahf
pop
dec
andb
xor
icebp
jno
xlat
mov
in
fucomp
dec
or
out
mov
es
cmp
lret
sti
cld
xchg
sub
xor
rorl
rol
push
jl
repnz
sbb
mov
movsb
pop
fwait
push
and
mov
xchg
sub
mov
jl
inc
mov
add
push
sub
pop
jle
outsl
cmp
push
aas
lret
add
push
bound
inc
xchg
jbe
mov
popf
cvtdq2ps
cmp
fmuls
cmp
push
std
out
sub
scas
fidivl
shrb
xchg
jne
cmc
test
pop
fcomi
stos
push
add
pop
jge
popa
int
sbb
and
push
mov
adc
xor
roll
loop
inc
leave
inc
fs
mov
adc
push
push
xchg
loopne
js
adc
mov
ja
movsb
mov
jo
stos
cmp
in
adc
ss
jno
and
ret
gs
clc
pop
cmc
inc
pop
out
ja
out
jl
push
and
pop
je
cmp
mov
push
cmpl
jae
scas
jge
push
sbb
adc
jnp
dec
movsl
bound
gs
bound
test
push
cmpsb
fidivrs
lahf
mov
loopne
and
fwait
xor
sbb
dec
in
inc
ficoms
xor
cmpsb
mov
push
sahf
xor
int3
in
push
push
out
addr16
test
les
addr16
cwtl
push
dec
mov
adc
imul
jg
and
aad
test
mov
fdivrl
ret
jg
fsincos
flds
popf
pop
lods
sub
arpl
or
sbbb
adc
clc
push
push
imul
gs
pusha
ja
imul
sbb
adc
xchg
push
push
mov
sub
xor
dec
dec
xor
push
nop
outsb
cmp
mov
pusha
fmull
cmpsl
sub
or
dec
push
lcall
jns
and
add
cmp
test
jle
in
add
mov
je
push
test
mov
xor
minps
sti
fisubl
mov
push
mov
and
lea
ljmp
xor
inc
fs
mov
xchg
jg
shll
jns
andl
sub
pop
jmp
mov
add
mov
add
sti
push
sub
ljmp
mov
cmp
les
in
pop
iret
push
mov
sub
pop
movsl
jo
xchg
and
fistpll
xor
dec
fistl
loope
scas
pop
lahf
stos
cmp
enter
out
mov
jb
incl
pop
push
cld
dec
imul
or
sbb
lds
cld
imul
shrb
outsb
out
hlt
xor
mov
pushf
mov
xlat
clc
xchg
test
out
stos
nop
add
jl
in
movsb
sahf
inc
push
rolb
out
inc
inc
cltd
int
jb
int
lahf
sahf
mov
rol
pop
mov
xchg
movsl
cmp
pop
cmp
pop
js
mov
idiv
das
repnz
xchg
and
stc
pusha
or
sub
jp
aas
mov
in
loop
dec
jle
dec
or
jae
ficompl
cltd
sti
or
scas
adc
call
imul
loopne
inc
pop
dec
out
jle
jl
orl
push
xchg
es
jmp
jg
sub
mov
push
pop
pop
int
loop
adc
sbb
test
mov
fs
or
rolb
mov
lods
cmp
push
push
inc
in
sub
shrl
dec
aaa
scas
cmpsb
loope
cmpb
cld
cltd
or
push
icebp
mov
jecxz
cmp
fisttpl
or
push
push
lods
xchg
xchg
test
ret
repnz
aas
inc
lahf
mov
and
push
cltd
jg
lret
ds
aad
pop
sarl
fidivl
movsb
jmp
sti
lds
jmp
push
inc
clc
cmpb
loop
fs
pop
jno
sbbl
jne
shrl
sbb
ret
stos
imul
add
scas
mov
mov
pop
dec
or
js
das
jb
fcomip
mov
mov
lcall
bound
pop
add
in
fstpt
std
adc
xor
inc
xor
out
shll
dec
cli
pop
sbb
sbbb
xchg
dec
adc
xchg
cs
xor
icebp
imul
push
nop
inc
xchg
stos
int
lds
repnz
push
cli
jns
mov
jns
xchg
test
data16
or
call
movsb
sub
cmp
dec
pop
jo
mov
lret
and
or
dec
inc
pushf
fisubrl
jecxz
loopne
dec
addl
shll
aam
push
iret
xchg
adc
shll
jns
jp
pop
adc
pop
or
fnstenv
or
int
xor
dec
adc
out
inc
ljmp
mov
xchg
sub
xor
loopne
test
push
call
mov
cmp
leave
push
push
and
jno
mov
xchg
sahf
incl
mov
jl
mov
mov
mov
outsb
jge
push
out
cmc
or
mov
mov
adc
cli
and
mov
inc
pop
or
out
int3
loopne
std
sbb
sbb
xor
and
movsb
mov
dec
xor
jne
xorl
rorl
aad
pop
leave
scas
adc
add
fstpt
mov
call
xchg
cs
mov
mov
sub
jo
cmp
jl
inc
icebp
mov
addr16
mov
pop
xchg
insl
ja
jl
xlat
cltd
add
pop
xor
pop
pop
xor
aas
cmp
insb
and
mov
jle
ret
pop
mov
outsb
fnsave
aad
pop
mov
imul
mov
js
in
sbb
dec
inc
mov
pop
bnd
mov
in
fcoms
leave
sub
mov
fidivl
fcoms
cmp
daa
sub
xchg
mov
cs
aad
jae
push
jge
imul
mov
xor
dec
int3
dec
loop
push
clc
cmp
cmp
rorl
fcompl
dec
frstor
adc
lret
jg
dec
mov
inc
sub
aam
hlt
leave
push
int3
cli
adc
jl
cld
pushf
pop
into
lcall
xor
and
cmpsl
mov
xchg
into
jns
mov
scas
or
int
jl
call
int
pop
inc
xchg
or
dec
mov
pop
ja
fbstp
pusha
add
mov
fldt
jae
mov
ret
inc
scas
mov
sub
cmp
pushf
pop
xor
and
push
shll
arpl
int3
enter
jo
in
test
testb
std
in
dec
test
mov
test
cli
dec
push
data16
aad
scas
roll
sbb
scas
imul
aam
pop
dec
xchg
clc
lock
sbbb
lret
icebp
sub
push
jmp
loop
pop
adc
sub
and
dec
and
or
out
stos
jbe
andl
pop
mov
dec
pushf
or
pop
decb
sub
fildll
adc
sub
lahf
cmc
mov
adc
xchg
fcomps
push
scas
inc
and
cli
xchg
test
movsl
sbb
jg
lret
pop
stos
add
mov
mov
push
jmp
adc
setg
lcall
jecxz
je
lods
bound
or
out
push
popf
int3
test
sahf
jecxz
xor
in
aam
repnz
testl
cmp
repz
jp
sbb
ret
jns
push
dec
ret
push
jno
mov
inc
daa
inc
les
clc
test
pop
inc
arpl
shrb
pop
jmp
into
push
cli
call
sbb
and
notb
dec
xor
insb
mov
xchg
lret
push
mov
sbb
fmuls
sbb
inc
sbb
adc
clc
and
ss
out
ss
rclb
stos
nop
cmp
pop
jg
jp
sub
in
pop
or
mov
cmpsb
mov
inc
dec
xchg
xchg
scas
out
mov
sbb
ds
inc
pop
cwtl
js
add
aaa
mov
xchg
mov
lods
jmp
arpl
jb
push
lea
js
sub
cmp
and
and
and
push
std
sub
adc
repz
sub
aaa
pop
add
mov
stos
mov
xchg
aam
cmpsl
out
ret
lock
insl
clc
rolb
mov
cld
into
aas
push
fs
xor
in
sub
nop
daa
iret
add
sbb
insb
or
cs
ret
fildll
addb
mov
jne
stos
das
fisubrl
jge
jb
in
mov
dec
dec
and
mov
in
shlb
loope
jge
movsl
cmp
mov
ret
inc
ret
dec
arpl
jno
dec
aam
repz
mov
loopne
sub
les
int
xor
mov
out
pop
mov
lret
mov
mov
daa
xchg
cmp
imul
sbb
and
fisubrl
lods
lds
shrb
les
xlat
incb
adc
lret
push
inc
mov
mov
inc
xor
pushl
mov
xor
mov
xor
dec
pop
fisttps
mov
cmpsl
in
pop
mov
icebp
lahf
or
xchg
jecxz
fwait
mov
jge
int3
mov
daa
and
xor
xor
inc
adc
xlat
in
cmpsl
jbe
scas
mov
push
pop
jmp
mov
jbe
in
pop
push
lret
pop
ret
sub
imul
cmpb
fmull
mov
jns
jae
cmpsl
sbb
addl
scas
test
lcall
rclb
mov
add
xor
push
and
hlt
push
pop
test
imul
add
pop
pop
es
insl
sub
jecxz
stc
daa
adc
push
push
pusha
add
icebp
mov
popa
mov
rorb
push
jmp
sbbl
clc
rcrl
xchg
jbe
popf
adc
sbb
data16
adc
mov
jg
lcall
jmp
les
mov
add
sbb
xor
shll
adc
and
push
xchg
jne
ficoml
repnz
out
mov
and
pop
xlat
popa
int
sub
sbb
inc
or
bound
and
cli
xchg
mov
xor
sarl
out
adc
mov
xor
bound
lods
aas
push
filds
jmp
xlat
lahf
fisubl
imul
js
sbb
push
mov
popa
cli
inc
imul
inc
out
push
sahf
sbbl
addr16
mov
nop
stc
nop
ret
bound
imul
mov
js
adc
push
cwtl
mov
fsubs
rcrb
cmp
mov
jp
inc
adc
ja
sub
mov
pushf
arpl
push
fsubrl
jbe
xor
dec
push
or
je
xor
and
mov
aas
lcall
sbbl
xchg
mov
divb
cmp
pop
inc
scas
test
aam
lret
mov
scas
jnp
sbb
sub
ja
jb
jge
ja
xchg
dec
daa
in
nop
pop
dec
aad
mov
push
into
and
and
insl
mov
aaa
scas
add
bound
jns
xchg
repz
scas
dec
and
outsb
es
inc
or
in
and
add
push
jo
xadd
jnp
jbe
and
loop
mov
call
aam
xchg
mov
dec
add
add
xor
shr
push
mov
testl
sar
std
test
idivb
adc
out
add
loope
sub
pop
or
sbb
insl
ror
aad
outsl
push
xor
data16
adc
sahf
pop
cltd
test
aam
insb
sbb
ret
hlt
shlb
insb
adc
inc
inc
lea
sarb
jle
push
xchg
test
jp
add
cwtl
adc
sti
ja
and
cwtl
out
fwait
mov
sbb
jmp
mov
test
pop
fs
addr16
xor
jno
xor
stc
popa
sub
push
push
or
das
idivb
aam
shll
mov
fcoms
add
xchg
push
loope
cmpsb
popf
jb
test
fnstcw
scas
pop
leave
xchg
xchg
push
test
mov
cmp
popf
and
xor
adc
out
outsb
cmc
inc
mov
mov
xchg
call
and
mov
cli
out
and
fmuls
dec
pop
mov
jg
leave
xlat
mov
iret
lret
pop
and
sarl
or
icebp
adc
xchg
mov
mov
xchg
xchg
out
inc
mov
mov
pop
aad
in
cmp
stos
imul
xchg
or
rcr
sub
mov
mov
xchg
or
mov
rol
mov
jge
pop
fisttpll
jo
popf
mov
inc
popf
out
jae
sbb
lret
pusha
test
int3
xor
push
sti
push
out
sub
shr
and
repnz
in
mov
inc
out
in
cmpsb
ret
xchg
push
lret
cmp
jge
and
call
xorb
mov
adc
out
int
and
repnz
insb
and
add
xchg
inc
mov
shlb
frstor
add
jno
fwait
mov
mul
mov
in
das
gs
dec
inc
icebp
pminub
mov
cmp
xchg
lds
mov
jae
cmp
push
mov
int
daa
loopne
sbb
cmpsl
dec
mov
popf
or
test
lahf
or
sar
jb
push
mov
dec
repnz
cltd
jno
sbb
mov
lock
or
or
mov
pop
pop
xchg
mov
ffreep
mov
lods
inc
aaa
mov
xchg
pop
add
mov
stos
dec
lods
sbb
jb
int
aad
mov
and
mov
pop
dec
jo
mov
insb
add
test
mov
fsubrs
arpl
push
imul
mov
ss
mov
push
push
jmp
push
leave
jo
cmpb
lods
popa
adc
adcb
orl
iret
xor
mov
test
scas
outsb
mov
mov
xor
ljmp
mov
mov
imul
add
adc
cwtl
ja
jae
idiv
adc
cs
mov
repnz
orb
mov
test
cmp
pop
mov
cmpsb
bnd
cmp
sub
cmp
sbb
and
cwtl
stos
in
clc
outsl
loope
int
mov
repz
push
lcall
hlt
cmp
clc
addr16
ficoml
xor
inc
fs
pop
jae
xor
xchg
stos
in
xchg
popf
test
add
mov
add
insl
sub
sbb
push
xor
push
jecxz
jge
std
and
dec
idivb
lahf
out
xchg
aam
inc
push
xchg
call
push
aas
adc
shlb
adc
gs
in
cmp
jb
in
pop
mov
lods
mov
dec
lds
std
xchg
fcom
and
pop
rclb
xchg
std
or
sbb
mov
les
mov
mov
call
inc
mov
lods
adc
fisubrl
add
cmc
jb
add
das
jp
xchg
iret
xchg
rcrb
js
sbb
mov
nop
push
shlb
jno
js
aam
popa
pop
xor
or
push
ljmp
es
mov
mov
fisubrl
jns
sub
fdiv
mov
and
push
and
rclb
je
imul
outsl
andl
pop
shrb
sti
mov
sub
cmc
adc
rorl
inc
pop
sub
test
sbb
bound
iret
dec
fs
push
inc
and
or
mulb
test
lret
cmc
cmc
jg
sub
push
mov
fmull
mov
hlt
es
push
movlps
fistpll
xchg
and
lea
leave
push
lret
stos
ss
lret
mov
lahf
aam
popa
xchg
repnz
cmpsl
test
fnstenv
loope
ds
push
pop
cmp
and
lret
sbb
pop
mov
loopne
push
popf
or
xorb
inc
sbb
or
xchg
xor
out
leave
hlt
push
jb
test
lret
lcall
popf
adc
ficompl
loopne
xchg
push
jbe
rclb
dec
aaa
inc
clc
or
pop
aam
xor
jbe
push
pop
testb
cmp
or
jns
pop
dec
pop
rcrb
sub
add
push
push
xchg
daa
mov
push
movsb
inc
push
sub
push
jo
les
mov
stos
inc
js
pop
sub
push
out
test
sub
rep
ljmp
mov
mov
fldcw
ret
call
loopne
test
pop
inc
addr16
and
dec
pop
rcr
arpl
outsb
cmp
jbe
or
lcall
inc
xchg
in
shl
xor
cmp
dec
imul
pop
lock
xchg
push
and
cmc
push
insl
sbb
add
lods
out
sub
add
cmp
xchg
sbb
fsts
cli
call
in
adc
xor
and
enter
push
pop
mov
sbb
test
dec
stos
mov
push
jge
neg
call
mov
and
jge
adc
mov
iret
test
jb
gs
je
into
jno
bound
add
pusha
xor
movb
cmp
fs
inc
mov
out
clc
jns
das
push
in
ret
push
xchg
imul
jb
les
jne
push
icebp
outsb
sar
inc
out
inc
ficompl
repz
mov
cs
roll
sub
cli
aam
lock
add
es
movsb
aam
inc
or
test
push
mov
mov
adc
and
test
cmc
inc
es
fs
stc
pusha
inc
and
ror
xchg
test
fadds
jecxz
sub
jnp
enter
inc
leave
push
aaa
jo
aaa
loopne
jbe
jge
shll
sub
shr
cmpsl
push
loope
ffreep
xchg
arpl
mov
mov
xchg
std
stc
sti
leave
movsb
sub
loop
mov
sbb
test
fs
mov
shr
push
add
inc
jge
gs
cli
fsubrs
adc
out
xchg
jae
testl
xor
mov
sbb
sub
pop
imul
fnsave
add
sahf
or
pusha
inc
fidivl
inc
xchg
popa
clc
leave
aad
lret
push
sub
pop
loope
pop
jo
sub
mov
xor
imul
je
add
stos
push
dec
int3
repnz
fwait
xchg
jnp
dec
sub
hlt
and
xor
cmpsl
mov
or
outsb
jp
push
pop
cmp
xrelease
dec
icebp
inc
call
cmp
cmp
cld
int3
and
xor
add
mov
or
sbb
push
cmp
cmc
popf
cmp
xchg
xlat
mov
adc
in
push
xchg
pop
jmp
mov
pop
bnd
shl
sar
xchg
pop
cmc
xchg
jae
push
lea
push
cmp
inc
imul
xor
xor
fidivrs
pop
icebp
xchg
or
jl
cltd
mov
ficomps
pop
and
mov
lods
inc
int
pop
out
test
cmp
jl
add
jge
pop
xor
sahf
scas
mov
int
mov
mov
pop
hlt
pop
mov
pop
pop
xor
outsl
cltd
std
rcrl
bound
mov
adc
push
out
test
pop
popl
cmp
push
xchg
test
repnz
scas
mov
cmp
sub
shrl
push
popf
cli
in
test
and
sbb
jl
outsb
adc
jmp
sahf
cltd
push
ficoml
int3
sbb
mov
jnp,pt
cmp
cmpsb
add
rdtsc
outsb
xorl
xchg
fiaddl
mov
sbb
data16
sbb
mov
loope
xchg
dec
loope
not
jge
push
sub
incl
inc
jns
add
enter
add
cmc
mov
mov
xchg
in
fstpt
or
push
cmpsl
pop
cwtl
decb
jb
xor
sti
xchg
call
test
xor
xchg
lea
scas
ss
xchg
arpl
nop
es
cmp
nop
push
fldenv
adc
outsl
in
ja
add
pusha
test
and
stos
inc
mov
pop
leave
call
int
cltd
mov
mov
aaa
into
ret
and
jl
popa
clc
pop
push
cli
and
sub
mov
aad
loop
insl
jp
lahf
icebp
movsb
dec
mov
sbb
cmpsb
sbb
adc
inc
jmp
sarb
mov
imul
push
cltd
mov
xchg
loop
cmp
sub
popf
pop
outsb
pushf
sub
or
adc
in
enter
aam
push
scas
push
ret
inc
nop
jb
cmpsl
mov
pop
daa
leave
shrl
sub
or
mov
lret
xor
and
ja
inc
fs
pop
xor
xlat
pop
js
leave
add
mov
push
pop
shr
jae
loopne
push
cli
and
xchg
pop
in
push
inc
sbb
clc
rolb
test
mov
inc
ljmp
hlt
stc
inc
fldl2t
jge
les
cmpsl
adc
mov
push
movsb
or
out
pop
aad
adc
jl
mov
imul
stos
xchg
jle
out
cltd
sbb
fnstenv
fs
jb
jecxz
mov
ljmp
sarl
mov
daa
cmpsl
ds
cmc
pop
in
add
cmp
and
push
jge
sbb
movsl
inc
fs
mov
jns
lds
mov
out
sub
into
mov
xchg
or
fldcw
roll
lret
js
xchg
pop
scas
lea
fisttpl
mov
xor
ja
pop
adc
inc
adc
in
cmpsl
sahf
dec
sbbb
push
xor
add
lahf
and
and
test
sub
push
sub
pop
jae
lret
push
xchg
mov
cmpsb
ret
shll
sarl
jecxz
sbb
mov
loope
push
sub
mulb
pusha
test
jle
sahf
lods
leave
aam
or
mov
dec
in
clc
out
push
xchg
lock
ret
das
or
cmp
int3
arpl
sub
pop
in
cmpl
lea
push
push
insb
jo
cwtl
fildll
or
and
mov
push
es
orl
add
es
fidivl
push
sbb
add
pusha
or
pop
mov
dec
dec
dec
pop
mov
dec
fidivs
or
mov
jg
pop
orl
dec
rcll
adc
call
mov
std
mov
filds
xor
int3
jg
and
stos
inc
adc
adc
mov
fnsave
mov
dec
pop
leave
stc
xchg
notl
sbb
mov
icebp
cmpsl
sbb
lds
inc
dec
fnstenv
subl
push
divl
shl
shl
data16
pop
pop
mulb
shrb
ja
rorl
in
cmp
fisttpl
or
mov
nop
fistl
dec
test
lret
cld
xlat
sahf
xchg
in
mov
cld
testb
push
into
pusha
fdivs
lock
nop
lcall
stc
popf
dec
fcoml
shrl
ss
mov
cmp
out
cmp
and
pop
pushf
inc
pop
icebp
inc
mov
dec
jo
pop
in
fs
and
cmp
pop
pop
fnstenv
jg
decl
andb
popa
xchg
xchg
cmc
sub
or
scas
dec
lods
fstp
xchg
or
mov
testb
rclb
cmp
jmp
cmpsl
fs
lods
xchg
jl
pop
bound
aad
stos
in
les
pop
repz
push
hlt
mov
or
in
aas
adc
insl
add
pop
add
es
push
or
cmp
movsl
insl
test
aad
mulb
and
ffreep
pop
xchg
mov
repz
jp
test
mov
add
test
cld
push
and
jecxz
inc
pop
ss
rcrb
and
pop
inc
ds
cwtl
aad
inc
nop
mov
sub
testl
mov
push
repz
mov
loop
push
sub
xchg
jmp
and
mov
es
nop
mov
int
xchg
pushl
xchg
pop
pop
sbb
ret
xor
inc
test
imul
inc
fdivrl
cmpsl
cmp
shrb
inc
pop
cmp
pop
faddl
adc
in
sbb
sub
aam
inc
loop
xor
lcall
mov
xchg
xchg
mov
mov
inc
sbb
mov
xchg
orb
fstpt
xor
gs
cltd
cmpl
push
shlb
sub
push
adc
mov
inc
mov
insl
inc
push
sti
scas
inc
sub
xchg
xor
cmpb
imul
mov
nop
cmc
dec
dec
in
in
loope
jne
xchg
jnp
mov
xchg
out
add
cmp
push
in
cmp
push
sbbl
push
lods
out
imul
das
dec
inc
push
sub
cmpsl
jle
or
or
or
jns
outsl
cmp
sub
sub
xor
out
xor
test
adc
vpackssdw
push
dec
pop
xlat
mov
push
clc
jae
sub
inc
inc
inc
test
stos
dec
push
lret
add
lods
andl
push
stos
outsl
outsl
push
imul
cld
pop
andl
push
outsl
enter
aam
lods
xchg
xor
call
add
repnz
movsb
pop
stos
decb
enter
adc
mov
mov
lods
push
in
je
push
je
movsl
adc
push
add
outsl
cmp
data16
xchg
mov
add
dec
pop
arpl
mov
loopne
sahf
out
pushf
js
cmp
jge
pop
pop
aad
faddl
jecxz
inc
test
aas
push
bnd
and
push
adc
inc
js
add
push
adc
gs
ljmp
out
jne
cmp
mov
inc
repz
mov
push
call
nop
cli
in
subl
es
jne
sbb
mov
push
mov
pop
pop
out
pop
inc
fmul
xchg
xor
sub
std
xchg
aad
and
jns
mov
pushf
push
popf
inc
sub
push
fucomip
test
out
pop
dec
and
mov
or
adc
or
subl
stc
addr16
cs
rol
test
mov
fidivl
mov
mulb
cmpsl
push
pop
sub
cld
movsl
dec
mov
xchg
push
ficomps
in
jne
xchg
loope
dec
insl
mov
test
xchg
sub
inc
fimuls
in
mov
in
ret
add
add
add
xchg
inc
jns
lret
gs
sub
add
sub
loop
jmp
test
fwait
pop
stos
pushf
dec
cmp
and
inc
inc
movb
mov
xor
sbb
cmpsb
mov
push
adc
inc
xor
stc
inc
movsl
push
push
xor
xchg
push
out
scas
pop
ret
outsb
lds
and
mov
subl
or
sbb
out
in
adc
push
xor
cwtl
cmp
rcrl
shlb
xor
xlat
xchg
mov
cmpsl
pop
insl
xorl
cmpsb
pop
sbb
mov
dec
push
sub
cmpsb
outsl
arpl
fdivrs
in
mov
les
push
clc
nop
lret
inc
xchg
call
and
inc
xor
ja
loopne
jbe
enter
ja
dec
mov
xchg
adc
mov
test
sbb
jne
popf
into
into
or
lock
dec
movsb
sbb
popa
cmp
stos
fwait
outsb
mov
je
ss
xchg
jge
jmp
fstp
je
jmp
jecxz
subl
adc
inc
fldt
stc
xchg
imul
insb
test
mov
cmp
lods
cmp
fnstenv
incb
jmp
imull
mov
int3
shll
pop
sub
mov
int3
and
pushf
push
lret
add
ror
jg
or
sbb
jmp
push
pop
push
insb
jae
adc
pop
sub
cmpsb
pop
jb
insl
fs
outsl
daa
loope
ret
push
xor
pop
inc
shr
in
repnz
jb
mov
vshufps
mov
cmpsl
clc
addr16
cmp
mov
mov
add
xor
or
dec
mov
jae
lods
out
xor
push
sbb
push
clc
jae
add
aaa
das
repnz
mov
ja
hlt
daa
outsl
cs
inc
lds
inc
icebp
cmp
bound
fmul
movsb
mov
jne
or
xor
add
test
outsl
xchg
push
sub
mov
mov
jo
and
insb
push
decb
cs
add
cmpsl
scas
fisubl
or
jmp
adc
add
ljmp
sbb
xor
mov
icebp
aam
clc
inc
pop
adcb
lcall
out
shl
inc
out
sbbb
jecxz
fidivrs
push
jle
mov
mov
push
xor
inc
sub
adc
in
pushf
xlat
mov
adc
pop
into
shl
pop
ds
dec
push
fsubrl
out
inc
ficompl
fdivs
pop
dec
popa
and
aad
insl
subb
push
add
scas
mov
data16
add
flds
sbb
les
dec
dec
push
mov
popf
pop
nop
xor
cld
xchg
mov
out
inc
call
xor
out
dec
lea
test
mov
or
lods
or
push
stos
adc
push
and
sbb
sub
add
fwait
ss
and
out
int
jnp
and
ret
stos
in
imul
lcall
or
inc
xchg
inc
leave
lea
addr16
sbb
xchg
lret
test
fstps
jnp
pusha
xor
pop
sub
mov
xor
adcl
add
push
les
push
divb
lods
sahf
inc
insb
in
dec
jge
jp
cmc
hlt
pop
out
ret
jl
xchg
lcall
and
dec
aas
inc
repnz
insb
add
push
repz
jno
pop
mov
push
cmpsb
cmp
mov
hlt
mov
aam
and
cwtl
sub
clc
fidivs
nop
pop
sbb
xchg
xchg
stos
decl
test
mov
push
sbb
loopne
mov
ficompl
dec
call
push
cmc
pop
xchg
adc
adc
mov
push
andb
daa
adc
mov
cmp
fwait
cmpsb
divb
scas
rorl
adc
ss
push
insl
mov
lahf
test
or
fsubp
sub
les
mov
pop
sub
hlt
cmp
movsb
rclb
bound
push
mov
ljmp
lahf
addr16
lahf
sbb
lret
addb
push
push
test
test
fisubl
fstpt
cmc
fs
jmp
or
lods
mov
sub
repz
cli
adc
in
mov
push
xchg
fdivrl
sar
les
repnz
xchg
lds
mov
sti
nop
insb
hlt
in
mov
pop
js
shll
mov
mov
imul
ret
pop
inc
inc
ljmp
jle
pop
pop
dec
mov
pushl
sub
inc
shlb
mov
xchg
xor
pop
mov
push
test
scas
sahf
lods
out
inc
push
sub
cwtl
and
dec
mov
stc
mov
or
xchg
cmp
movsl
scas
rcrl
scas
mov
mov
ss
or
loope,pn
pop
push
mov
daa
xchg
or
dec
cmpsb
ds
dec
push
shufps
mov
jno
fildll
ret
orb
fwait
dec
mov
adc
out
call
and
mov
scas
imul
icebp
iret
ss
jae
mov
and
and
fisubrs
sbb
adc
leave
mov
mov
fcomip
ret
mov
das
push
adc
push
push
cmpsl
mull
fs
pop
jns
loop
lea
mov
aad
out
popf
fcompl
scas
inc
push
movsl
pushf
scas
out
mov
cmp
ljmp
sahf
xchg
mov
mov
ja
or
sbb
inc
arpl
popf
int3
lret
mov
sub
dec
mov
out
inc
mov
jb
and
jecxz
imull
fwait
sbb
pop
rclb
pop
sub
sti
stos
adc
or
jp
addr16
pop
inc
xchg
aam
pop
hlt
arpl
pop
or
push
lret
mov
mov
repz
dec
int
cmpb
rcrl
int3
push
cmc
sbb
movsb
pop
sbb
jg
xchg
dec
mov
ja
out
das
cld
lods
clc
adc
inc
cmp
cmp
mov
jge
jae
and
or
jb
in
pop
or
std
cwtl
cmpsl
add
inc
and
loope
mov
in
jnp
insl
nop
and
ja
call
add
cmova
push
je
out
insb
stc
or
scas
xchg
xor
movsb
fldenv
xor
push
mov
jno
in
or
xorl
jb
push
stc
lods
push
push
loope
xorl
das
divb
rcl
push
mov
pop
dec
sub
jo
mov
cs
idivl
sbb
cmp
cld
push
outsl
arpl
cmpsb
pop
add
cmp
in
xor
inc
mov
les
mov
add
xchg
test
mov
insl
scas
loop
loopne
inc
test
mov
pop
push
shll
pushl
sbb
cmpsb
dec
sub
lock
sub
rcr
dec
psllq
mov
jns
mov
sarl
or
cmp
fistpll
mov
add
mov
or
cwtl
jge
leave
mov
jbe
arpl
aam
in
xor
jmp
test
or
lret
cmp
das
test
mov
inc
ret
pop
jns
jg
cld
cs
jecxz
mov
push
push
ret
mov
jecxz
je
adc
imul
lock
and
jmp
call
lea
ficoml
cld
xchg
lock
fwait
and
mov
sub
jl
mov
aam
pop
pop
jo
addr16
cwtl
out
call
das
push
jo
arpl
add
push
jecxz
or
mov
pop
xchg
inc
fcmovnb
cmp
fldcw
pop
cli
sub
jecxz
orl
jg
int
lret
mov
and
fidivrs
or
rcll
pop
adc
outsb
xchg
add
adc
mov
pop
xchg
int
push
jg
jle
add
out
mov
iret
call
xchg
scas
and
into
repnz
rclb
xor
js
sub
jnp
das
xor
xchg
pop
add
pop
mov
cmp
and
and
jecxz
jne
cld
xchg
dec
mov
add
lret
sbb
add
jns
vpunpckhbw
dec
add
fcomps
mov
adc
insb
push
in
test
jnp
mov
or
das
add
add
repnz
shrb
imul
mov
xlat
lods
test
das
mov
jno
lds
shl
push
jmp
pop
jns
or
xor
fisttpll
cmc
cmp
mov
aas
loopne
cmp
add
pop
xor
push
arpl
inc
aad
dec
sub
lret
jg
pop
outsb
and
mov
add
notl
xchg
arpl
js
fistl
push
test
xlat
outsb
push
lea
push
rorl
pop
xchg
lock
and
stc
nop
cmpsl
iret
js
pop
enter
jnp
jecxz
out
popa
in
cmp
ja
fdivrl
add
mov
sbb
loopne
jp
aaa
lret
enter
fnstcw
scas
xchg
adc
dec
iret
fwait
cmp
push
jno
jl
mov
sarl
xchg
ja
jae
shrb
push
lcall
iret
les
jmp
and
or
dec
dec
mov
mov
xor
cmp
stc
aad
movsb
inc
sub
rcll
inc
das
and
scas
movsb
sahf
mov
inc
ret
jbe
xor
xchg
cwtl
movsl
movsl
cmpb
lret
dec
push
insl
sub
cmpsb
inc
mov
popf
arpl
or
fldenv
cmp
lret
mov
sub
shrl
rorb
mov
push
adc
dec
sub
dec
aam
mov
mov
add
repz
jle
sub
aad
sub
scas
and
andb
ret
hlt
mov
or
pusha
jge
cmp
lods
fsubl
out
push
pop
fisubs
arpl
in
fimull
mov
jp
jbe
shrb
push
and
add
xor
jle
mov
push
lods
mov
rclb
xor
mov
call
into
fsubr
stc
dec
push
je
mov
les
es
stos
and
sub
cld
adc
imul
sub
mov
enter
mov
or
add
add
test
leave
sub
sub
insl
imul
mov
test
pop
inc
loop
push
in
xchg
cmpsl
push
clc
xlat
outsb
sub
jmp
inc
psadbw
andb
imul
inc
es
jge
fldl
adc
inc
inc
int3
lock
adc
inc
mov
lret
push
cmp
push
faddl
fidivs
ja
hlt
pop
push
cli
pushf
ficoms
push
push
mov
push
outsl
jg
mov
aam
fadd
inc
mov
ja
pop
aaa
insl
jl
cmc
in
or
cmp
mov
mov
xor
or
mov
mov
aas
in
jae
pusha
mov
test
or
jo
loop
adc
sbb
mulb
xchg
lods
pop
mov
push
fdivrl
call
lea
jp
outsl
and
notl
idiv
xor
inc
fisttpl
dec
arpl
push
dec
cs
xorb
jecxz
ds
fs
mov
call
scas
mov
add
inc
push
xchg
stc
add
addr16
std
call
imul
dec
and
mov
mov
stc
divb
fdivr
cmpsl
ds
push
call
arpl
mov
movsb
stos
mov
xchg
jge
js
dec
ds
xchg
insb
cwtl
xor
dec
cmp
pushf
mov
test
jne
jbe
gs
sbb
insb
xchg
sbb
mov
ja
mov
aad
test
int3
dec
mov
sti
push
pop
mov
mov
cmp
aaa
push
jge
into
int
addr16
sahf
je
jo
push
inc
push
in
xor
adc
mov
bound
xchg
push
sub
sub
inc
mov
mov
jne
push
lods
ljmp
inc
fcmovb
mov
popa
int3
lcall
loop
mov
xor
es
out
sub
jecxz
lds
orl
dec
sub
lcall
fstps
dec
or
jp
xsha1
cmpsb
setge
imul
mov
jp
insl
aad
xchg
lahf
push
hlt
cmp
pop
cmc
xchg
add
iret
and
xlat
push
push
mov
sahf
xor
pop
mov
or
and
negb
dec
sub
nop
sub
dec
scas
cmp
and
daa
lods
mov
sbbb
mov
out
push
push
jbe
cmp
stos
jmp
cmp
pop
imulb
mov
mov
pop
out
lea
add
sahf
data16
lret
mov
push
imul
push
int
jg
repz
insl
dec
fistps
xchg
fstpt
stos
sbb
daa
filds
mov
xchg
adc
pop
ljmp
push
jmp
adc
pusha
xchg
push
fsts
mov
push
jo
mov
nop
mov
add
lret
aaa
rcrb
mov
lods
fcoms
test
out
lds
and
pop
ljmp
int
shll
lds
shrl
ja
aad
out
sub
mov
jbe
inc
add
xor
pop
jmp
push
dec
popf
stc
xchg
fsubrl
sti
jbe
or
outsb
fldl2t
xchg
pop
xchg
pop
push
aam
std
pop
bound
and
jge
mov
xor
test
leave
add
stos
mov
xor
cwtl
adc
notb
dec
mov
and
lods
cld
jmp
icebp
loope
and
js
clc
pop
mov
adcl
ja
inc
mov
in
xchg
movsl
push
sbb
clc
rcll
add
gs
int3
pop
fdivrl
mov
jno
imulb
jne
mov
add
cmp
pop
sahf
sub
xor
xchg
push
push
stc
mov
xchg
pop
cmp
ret
sub
push
inc
inc
or
lock
inc
aas
fnstcw
xchg
cli
pop
inc
loope
sub
imul
xor
dec
iret
xor
arpl
mov
pop
mov
inc
lock
outsl
jo
or
cmp
pop
loopne
mov
cmpsb
cmp
aas
jne
aad
xchg
jne
aad
push
jecxz
scas
call
int
lahf
notl
dec
cmp
hlt
es
loopne
mov
dec
jne
inc
shrl
add
cmpsl
dec
negb
in
or
xchg
add
adc
jmp
sbb
or
push
cmp
pusha
addr16
push
xor
push
insb
fiadds
sbb
mov
std
push
inc
xor
mov
xchg
push
pushf
sahf
sbb
jnp
and
mov
inc
rorl
repz
adc
into
and
or
test
or
fisubl
or
ret
xor
sub
push
push
lods
fcom
pop
stos
fdivs
pop
xor
shl
fiadds
push
add
pop
rolb
push
pop
pop
addr16
sbb
sbb
jge
movsb
fmul
mov
or
pop
sahf
in
dec
pop
fidivrl
xchg
cltd
adc
int
out
mov
pop
ret
mov
ja
pop
ror
lahf
mov
repnz
and
sub
ja
es
subb
repnz
jne,pt
out
aam
enter
scas
ljmp
inc
sbb
cwtl
into
das
call
sbb
mov
lods
movsb
repz
iret
jns
stc
dec
sbb
xor
xchg
inc
mov
or
into
hlt
xchg
mov
inc
xor
or
loope
cmc
sub
das
xchg
les
pop
scas
fnsave
stc
pop
insb
fdivs
xchg
call
or
add
lds
jp
pop
outsb
cld
cmp
mov
mov
outsb
dec
pop
shlb
popa
lret
mov
lret
mov
xor
stc
inc
in
jp
mov
add
push
jle
dec
push
movsl
xlat
sahf
scas
sbb
sbb
je
jg
popf
loop
cld
adc
shrl
imul
mov
nop
out
push
divl
pop
sahf
and
jnp
and
lahf
scas
push
mov
push
mov
lret
loope
and
jo
loop
add
jmp
dec
pop
mov
cmp
mov
dec
setae
mov
push
xchg
inc
nop
and
rcr
popa
sub
inc
mov
repnz
lret
or
int
sahf
data16
jns
or
icebp
test
inc
xchg
out
lahf
lret
jno
adc
xchg
test
pop
test
insb
adc
inc
fs
mov
clc
sbb
movsl
mov
outsb
in
lods
xchg
xchg
cmc
push
and
pop
cmpsl
cmpsb
mov
cld
sub
fcomps
aam
cmp
add
pop
jbe
dec
pop
andl
jecxz
stc
aaa
jp
push
inc
xlat
mov
fsubs
outsl
sbb
icebp
mov
dec
int3
arpl
lds
repz
sub
inc
push
jnp
or
jno
mov
xchg
fwait
and
sbb
jb
sbb
xor
std
xchg
ret
insl
bswap
adc
push
pop
adc
nop
mov
sub
rorb
lea
les
xchg
mov
shlb
loopne
mov
pop
adc
inc
push
ret
idivb
push
repnz
mov
lcall
cltd
std
inc
dec
inc
mov
jns
fwait
imul
popa
lods
ja
pop
pop
loop
aaa
and
inc
mov
lods
mov
sbb
push
cwtl
cmpb
stc
and
les
mov
jmp
or
xor
mov
int3
adc
mov
and
sahf
test
mov
mov
inc
and
sub
aam
sub
push
rcr
mov
mov
insl
cmpsb
xchg
inc
cltd
int
sbb
jmp
hlt
stos
outsb
iret
cltd
out
dec
xor
mov
mov
sub
sbb
testl
test
stos
jne
js
cmp
xor
mov
test
shlb
aas
mov
sub
pop
es
mov
push
les
jbe
mov
xchg
xchg
adc
sbb
aad
cmc
mov
jne
cmp
mov
addr16
imul
orps
mov
mov
fsubrs
xchg
xchg
daa
push
jp
decl
cwtl
add
inc
pop
push
jae
lea
in
push
sub
sbbb
mov
jl
into
sub
bound
stos
popf
sbb
psrlq
push
pop
aaa
adc
in
into
sub
mov
call
es
mov
jae
and
clc
dec
icebp
js
aad
dec
push
xor
dec
and
popa
xor
mov
sub
hlt
fcmovb
mov
cltd
and
adcl
fnstenv
add
aaa
sbb
mov
cmc
mov
lret
sub
testl
pop
imul
cwtl
les
adc
jnp
dec
push
mulb
shll
cmp
sub
shll
ret
pop
mov
lods
lods
in
out
mov
mov
dec
out
push
sti
sbb
push
jnp
sbb
mov
mov
lahf
outsl
xor
mov
pop
pop
loop
shl
aaa
nop
dec
add
cmp
ss
mov
push
call
outsl
jmp
icebp
sbb
and
int3
cld
adc
inc
movsb
ret
nop
sbb
pop
xor
call
cmp
jp
xor
sub
mov
xor
cmc
dec
xchg
cli
mov
cmp
jno
sub
or
jno
enter
or
add
push
shll
and
jb
subl
stos
inc
and
jb
adc
loopne
cmc
aaa
arpl
scas
out
inc
insl
sahf
scas
in
mov
addr16
xor
adc
int3
getsec
scas
push
pop
jbe
in
ret
and
pop
mov
pop
jb
scas
xchg
test
pushf
icebp
and
sti
mov
jb
pop
mov
or
mov
and
leave
pop
dec
xor
imul
syscall
rcrl
mov
jno
test
in
out
sub
insb
pop
test
sar
jg
jns
sub
sbb
inc
addl
add
pop
insb
arpl
sarb
nop
jae
imul
daa
jle
ret
jp
xchg
jl
and
cmp
add
sbb
fcomi
push
or
addr16
xchg
in
int
mov
icebp
add
fwait
in
imull
test
mov
adc
pop
jmp
push
push
pop
sub
mov
add
push
pusha
orb
fidivl
fdivs
add
mov
push
stos
out
je
pop
mov
pop
adc
add
lret
scas
es
dec
cmpsl
mov
dec
dec
es
inc
fsts
rolb
and
frstor
jbe
inc
mov
loopne
adc
das
mov
mov
pop
pop
inc
aas
dec
dec
or
test
psadbw
xchg
adc
dec
nop
push
jmp
int
fdivr
inc
mov
inc
xor
jo
xor
jne
rolb
add
fwait
and
out
xchg
fstpl
xchg
push
mov
inc
xchg
pusha
pop
lods
bound
inc
popa
aaa
jmp
xchg
push
sub
arpl
jge
xor
test
repz
pushf
scas
and
mov
les
clc
adc
mov
pop
shl
or
clc
mov
daa
lcall
cs
mov
fmulp
add
pop
loope
data16
je
repz
push
das
inc
icebp
jl
fsubrs
fidivrs
mov
pop
cmpsb
sbb
xor
pop
loopne
popf
mov
inc
bound
push
cld
popf
add
lds
xchg
outsb
inc
pushf
cmp
xor
xor
jnp
loop
sbb
dec
aas
lcall
bound
das
hlt
arpl
push
jae
aam
test
mov
fbstp
jno
loope
xchg
sub
daa
mov
ficoms
or
cld
call
or
push
mov
scas
aad
cwtl
or
inc
int
cmp
dec
add
cs
dec
adc
push
sub
addb
xchg
mov
mov
inc
fmull
mov
mov
xchg
push
in
push
mov
adc
cli
fstps
nop
iret
cmp
inc
xchg
lock
sbb
sub
notl
inc
lods
jae
mov
sbb
sub
out
insl
mov
dec
mov
mov
shll
jo
mov
pop
and
sbb
mov
pop
insl
fdivp
imul
or
stos
stos
bnd
loopne
sub
mov
in
scas
lods
adc
jecxz
sub
int3
aam
or
pop
fneni(8087
pop
shl
outsb
int3
dec
jmp
cmpsb
outsl
mov
cmp
add
mov
inc
daa
ljmp
ja
sbb
jle
cmp
shll
or
into
cld
inc
outsb
outsl
fidivl
mov
pcmpeqb
push
lods
cmp
imul
jne
pushl
test
call
xor
fisttpll
aaa
mov
adc
clc
sahf
pop
push
fnstsw
adc
sarb
addb
rclb
call
fwait
jae
dec
out
in
je
frstor
jnp
dec
ret
or
fsubrl
jne
xlat
jg
xor
mov
loope
popf
cmp
mov
jl
inc
movsl
jg
shll
inc
adc
push
jnp
nop
ret
repnz
mov
inc
pop
cli
lods
jg
lcall
lock
aad
add
enter
xor
testl
add
or
mov
pop
out
mov
sub
lret
xor
xor
adc
adc
addr16
lods
inc
lahf
dec
jne
cmpl
push
rcr
out
and
ret
je
jg
mov
xchg
notl
lea
lret
pop
push
test
sbb
pop
stc
sbb
fmuls
sbb
inc
add
shlb
nop
shlb
mov
dec
fidivrl
fdiv
inc
push
jmp
mov
jp
in
in
fucomp
push
lsl
sub
sti
aam
fstl
mov
ja
dec
test
push
pop
xor
fstl
movsl
xor
xor
mov
aas
orl
ljmp
pop
lock
cmp
dec
push
xor
leave
out
pop
xor
dec
in
ds
bound
mulb
or
cmc
popa
in
pop
dec
addl
scas
sbb
dec
int
mov
add
jns
cmp
je
bound
mov
jg
cmp
test
insl
seto
rcrb
mov
test
cmp
sub
and
mov
ds
cs
lods
push
mov
in
sti
insb
mov
andl
in
inc
cmp
popa
jg
xchg
sub
lahf
sbb
repz
aas
sub
sti
rorb
pop
subl
sub
in
loopne
in
call
sbb
dec
dec
push
adc
ror
cmp
cltd
lcall
and
push
inc
rclb
fwait
xor
popf
call
jb
mov
xor
or
or
sbb
and
push
rolb
fnstcw
jecxz
push
cltd
movsl
dec
movsb
jne
and
stos
inc
sbb
call
push
dec
ljmp
add
bound
scas
cmc
push
push
clc
pop
xor
imul
lods
in
xor
dec
add
ss
mov
les
dec
xor
int
sbb
inc
push
add
pop
cmpsl
jne
pop
add
inc
data16
cmp
fwait
out
jns
jbe
shlb
sub
sbb
add
xchg
ljmp
xchg
mov
insl
cld
or
js
adc
iret
fwait
push
and
cli
lret
xchg
inc
sub
xchg
sbb
add
and
sub
outsl
mov
notl
mov
aam
mov
or
cmp
push
sahf
shll
and
mov
lods
mov
shlb
not
mov
sub
sbb
jnp
lcall
dec
push
insb
pop
adcl
or
mov
ret
adc
jg
scas
inc
and
fnstenv
inc
or
fnsave
test
je
push
add
xchg
xchg
pop
fwait
stc
test
cwtl
pop
loope
dec
into
lea
lahf
sub
xlat
out
push
xchg
shl
repnz
popf
in
adc
xchg
mov
arpl
es
lahf
je
loopne
push
sbb
push
out
fstps
sub
cmp
mov
xchg
or
movd
xchg
sub
arpl
sub
aas
push
sbb
scas
stc
sbb
lret
popa
iret
test
sbb
sub
jg
aaa
and
stc
stc
jns
aaa
xor
and
push
fstl
rcrl
xor
lcall
dec
lahf
orb
adc
hlt
mov
andl
pop
insl
sbb
mov
sahf
lods
movsb
sbb
pop
dec
dec
xor
pop
outsl
jnp
lods
xchg
push
sbb
rorb
sbbb
mov
sbb
add
out
lds
fs
test
inc
aaa
into
xor
jb
out
pop
andb
jmp
mov
nop
lret
shl
mov
xchg
insb
sbb
fnstenv
test
aad
sbb
imul
fldenv
xchg
in
aas
or
adc
mov
mov
shll
and
xorl
fwait
push
adc
rolb
cmp
rcr
es
dec
and
mov
les
mov
ret
cld
mov
dec
addr16
sbb
shrl
movl
mov
std
out
mov
inc
mov
and
out
add
pop
aam
test
xchg
cmc
mov
ret
sub
imul
push
sarl
or
stos
jnp
daa
inc
leave
and
arpl
enter
mov
incb
movsb
xchg
xchg
leave
xor
pop
ret
cli
xor
sub
xchg
enter
stos
lahf
cmp
mov
add
xlat
popa
cmpsb
push
lods
inc
mov
fbld
mov
test
xchg
stc
test
sub
cltd
sbb
iret
mov
jns
push
loop
push
jb
pushf
addr16
jecxz
in
adc
adc
insl
adc
icebp
mov
cld
xchg
dec
jmp
popa
jge
insl
cwtd
pop
push
popf
dec
movsl
dec
jecxz
imul
test
adc
cmpl
xchg
jl
mov
jno
mov
sbb
lcall
cmpsb
pop
xchg
xchg
out
movsb
daa
shll
insl
lock
push
sbb
inc
repnz
xor
xchg
add
test
int
aam
adc
dec
xchg
aaa
sahf
jmp
movsl
mov
ret
jnp
iret
and
call
mov
jmp
jbe
xchg
call
dec
sahf
xor
fiadds
out
scas
adc
jnp
ljmp
cli
pop
fiaddl
lods
cmp
xorl
data16
lcall
and
mov
andl
shl
or
push
pop
pushf
sbb
pop
repz
xchg
hlt
inc
addr16
pop
or
pop
dec
pop
call
clc
pop
sahf
sub
shrb
and
stos
sbb
jae
adcl
sub
ja
pop
lahf
mov
push
shl
jo
fstpl
inc
add
xchg
icebp
xor
sbb
aam
vmptrld
int3
jecxz
test
dec
inc
test
jo
aaa
ret
pop
mov
dec
aad
push
sub
mov
adc
test
ret
sub
dec
imul
imul
mov
adc
gs
mov
les
xchg
sbb
test
push
in
cmp
and
jbe
sarl
sbb
jecxz
outsl
jo
cmp
test
pop
push
push
rorb
cmp
mov
xor
mov
out
test
les
push
and
lea
ret
imul
fsubr
out
inc
mov
dec
aad
pop
xsha256
cmpsb
nop
sbb
mov
mulb
loope
mov
aad
inc
insb
sar
incl
dec
mov
push
xor
pop
add
jl
loop
cmp
xor
or
sbb
jmp
in
cwtl
jnp
mov
std
sub
cmp
add
fs
ljmp
mov
fdiv
ret
adc
dec
inc
xchg
cltd
lret
mov
les
mov
jae
mov
cltd
and
lock
lahf
pop
daa
jp
add
mov
cmp
push
mov
sub
out
scas
sbb
int
fisttpl
adc
cld
mov
inc
subl
jg
mov
loop
popa
cli
mov
dec
jbe
sub
and
push
inc
insl
jg
int
movsl
sbb
mov
sbb
mov
shl
stos
mov
xor
inc
push
push
cmp
push
out
inc
fidivl
cmp
nop
mov
push
rol
das
mov
pop
in
in
das
adcb
inc
pop
in
mov
xchg
shr
sbb
cmp
pusha
testb
jo
mov
aam
out
jne
xor
insb
stos
cwtl
das
mov
clc
mov
cmp
inc
pop
fldl
sbb
cwtl
stc
pop
sbb
push
mov
adc
clc
mov
jmp
push
pop
cmpsb
cmp
fldcw
cmpb
add
push
out
out
addl
loop
repnz
outsl
mov
xchg
sarb
or
jecxz
add
sbb
inc
int
sbb
out
jp
inc
leave
mov
jbe
bound
adc
inc
push
push
jb
iret
jbe
scas
sbb
pushf
pop
jmp
mov
xchg
jne
cmc
sbb
in
lcall
jbe
mov
ljmp
fsubrl
pop
and
adc
stc
pusha
jl
xchg
pop
mov
adc
popf
mov
addb
pop
sti
push
sbb
fmull
xor
aam
mov
pop
je
pop
repz
pop
xlat
pop
hlt
les
stc
or
xchg
sub
adc
mov
jle
add
mov
sbb
and
leave
aas
in
in
push
sub
repz
mov
aam
xor
add
add
mov
cmpsb
subb
push
int3
pusha
cmp
add
pop
add
jecxz
sub
mov
add
int
syscall
xchg
in
xor
sbb
jb
mov
fmull
and
stos
cmpsl
mov
push
fucomip
fistps
add
xor
inc
xchg
sahf
mov
xchg
adc
adc
daa
lret
adc
jecxz
pop
cmp
ja
scas
call
mov
pop
in
pop
arpl
or
int3
mov
addb
aaa
sub
cmc
repz
stos
idiv
or
sbb
inc
aad
mov
dec
ljmp
xor
xchg
adc
pop
xchg
cs
insl
xor
pop
jb
js
dec
mov
push
testb
push
cld
daa
out
test
stc
stc
popf
es
push
pop
mov
add
rcrl
xor
inc
ret
stc
nop
mov
xlat
pop
sub
rcr
dec
sub
repz
call
pop
xchg
dec
pop
lds
adc
dec
nop
daa
inc
add
scas
inc
adc
or
lcall
insl
xor
notl
push
loopne
fcmovnb
pop
dec
imul
pop
add
cmpsb
inc
std
movntq
andl
test
mov
or
dec
sbb
sub
jg
scas
jb
ret
mov
shlb
adc
dec
xor
movsb
aaa
stc
and
inc
jbe
loope
into
or
shll
mov
xor
shll
mov
inc
push
ljmp
mov
gs
mov
aas
int3
sub
mov
pop
dec
fucomi
push
fs
fnsave
sbb
in
inc
sarb
jb
int
xlat
jp
stc
xchg
test
mov
lods
cmp
and
cmp
cs
test
xlat
negl
push
fld
es
dec
mov
test
fwait
sbb
jo
outsb
movsb
dec
pop
lahf
mov
loope
sbb
movsl
jnp
or
inc
dec
insb
cli
shl
out
adc
add
ret
mov
jbe
sub
mov
call
cmp
jno
sbb
les
add
push
jbe
sub
shrl
xchg
sub
xchg
dec
stos
push
xchg
sub
cmp
adc
mov
in
out
cmpsl
loopne
das
cli
push
decl
add
repnz
dec
mov
inc
cmpsl
icebp
or
jb
mov
mov
lahf
ss
pushf
cmp
dec
aaa
es
imul
jo
cmp
lds
pop
dec
inc
jecxz
in
in
stc
sbb
loop
dec
add
cli
xor
push
sbb
pop
xor
xor
js
pop
mov
stc
push
into
jb
pop
push
out
inc
leave
cmp
jmp
jge
addr16
adc
add
or
in
cmp
jbe
cmp
aaa
add
loop
xor
lahf
or
inc
test
lret
pop
and
jp
es
pushl
lods
push
fimuls
jne
enter
or
aam
ficoms
or
fbld
fmulp
mov
loope
cld
idivb
int
mov
movq
test
ja
mov
sub
adc
clc
popa
pop
sbb
mov
push
out
repnz
sub
sbb
fwait
clc
lret
jl
fidivrl
xor
mov
and
addr16
cmp
frstor
pop
fsubrl
rorb
idiv
xchg
insl
cmpsb
testl
cmp
mov
cwtl
add
sub
and
es
pop
push
mov
or
lods
push
ja
dec
mov
xchg
cmpsb
dec
jno
shl
aas
xchg
xchg
pop
loopne
aaa
dec
jecxz
mov
mov
aad
xchg
test
jl
mov
mov
stc
nop
cld
mov
sbb
sbb
es
xlat
mov
clc
sahf
inc
sub
xchg
dec
mov
ja
mov
ja
insl
rolb
xchg
loopne
int
sub
jae
shll
xchg
mov
punpckhdq
adc
cmpb
inc
insl
or
das
push
sahf
push
ds
cmpsl
xor
add
inc
inc
pop
in
fidivl
cmpb
and
adc
mov
leave
in
xchg
mov
enter
pop
rcrb
jle
std
xchg
or
mov
sarb
ror
jb
pop
jmp
mov
test
push
sbb
pop
mov
or
jmp
popa
and
rcrb
in
dec
jp
lret
addb
clc
push
inc
jp
mov
fwait
leave
mov
xor
mov
loopne
xor
dec
pop
dec
cmp
add
push
into
insl
in
pop
xlat
mov
inc
insl
jle
or
int3
jne
imul
icebp
aad
nop
jmp
cmp
fdivr
cmp
jae
dec
rcrl
in
xchg
leave
dec
ss
in
jb
in
dec
and
je
ss
addr16
nop
jge
jmp
push
gs
daa
xchg
jle
mov
ret
call
mov
mov
inc
ja
pop
mov
mov
jae
stos
jno
add
mov
scas
pusha
dec
aad
mov
push
inc
aas
into
and
std
aam
ss
and
nop
or
out
lcall
stos
and
rcrl
adc
xor
xrstor
sub
pop
mov
and
testb
jl
mov
testl
dec
cmp
push
mov
jnp
jno
popf
push
mov
lret
or
and
sub
cmp
mov
and
jl
sti
jbe
adc
nop
sub
aad
pop
dec
or
lods
popf
xor
mov
sbb
sarl
push
dec
fisttpll
repz
outsb
fcomps
pop
in
push
sub
lods
in
xor
aam
movsb
jmp
pop
lea
imul
popa
cmpsb
add
sub
dec
call
xchg
push
push
addb
jmp
push
rorb
pop
push
sti
test
mov
cmp
pop
mov
mov
pushf
arpl
jge
cli
xchg
rcrl
aad
mov
pusha
pop
mov
mov
lcall
xchg
and
test
aad
incl
stos
shl
push
jl
ja
adc
lcall
cmp
pushf
repnz
add
pusha
js
rclb
or
test
imul
adc
stc
popf
push
pop
lret
xor
imul
aam
mov
lods
out
and
xchg
lock
and
xchg
test
enter
jo
push
in
rcll
cmpsl
mov
push
jle
roll
popf
mov
mov
rcrb
dec
xlat
jnp
out
add
xchg
mov
add
sbb
std
loop
push
fmuls
jmp
lods
cmpb
add
mov
cld
mov
scas
xor
es
insl
pushf
out
hlt
mov
mov
jae
insl
add
int3
push
push
mov
pop
mov
cmp
es
inc
pusha
enter
adcb
loopne
mov
sub
test
and
dec
pop
cmp
xor
cmp
pop
sub
inc
fxch
mov
push
jmp
mov
scas
xchg
xlat
jp
and
mov
fistps
push
mov
mov
cmp
ljmp
sbb
nop
mov
add
ds
or
jle
dec
loope
xor
mov
cmp
rcrb
push
mov
push
add
push
mov
ss
xchg
lcall
ja
xlat
pusha
addb
int3
pop
lods
push
mov
mov
mov
mov
jl
repnz
or
pop
jne
xchg
and
arpl
dec
cmp
pushf
mov
jns
mov
and
jnp
fs
test
and
pop
outsb
add
outsl
push
test
push
inc
fcompl
add
sub
jmp
out
aam
inc
mov
rclb
push
movsl
cmp
js
push
in
out
push
pop
sub
daa
xor
sbb
bound
aad
ja
stc
push
dec
lds
mov
sub
pop
xor
xor
addr16
pop
add
sbb
xchg
sub
andb
es
jno
sti
xlat
cmp
or
je
test
in
adc
into
xor
insb
fldt
aaa
adc
nop
sub
lahf
push
push
jno
fsubl
pop
or
add
mov
fcompp
add
push
pop
into
sahf
mov
xchg
push
push
adc
ret
shl
insl
add
mov
cltd
fiaddl
xor
sub
xchg
imul
mov
or
and
sub
mov
jno
add
pop
stos
xchg
daa
repnz
outsb
shrl
out
into
movsl
sub
xchg
lret
mov
jne
negb
in
fimuls
sahf
push
cs
jmp
mov
addr16
int
dec
mov
jb
and
mov
mov
pushf
or
int3
inc
fadd
popa
cmpsb
outsb
aas
mov
pushf
lret
pop
imul
call
add
push
or
mov
sbb
jno
sbb
xchg
dec
testb
ljmp
divb
in
cli
sbb
mov
lds
add
shll
jns
ret
sub
or
and
mov
jge
out
enter
mov
push
or
fisubl
frstor
xor
mov
sbb
cli
inc
pop
insl
sbb
cmp
imul
sbbl
rorb
jg
cmp
add
mov
stc
test
xor
sbb
popf
mov
es
sub
jp
and
mov
or
xor
cltd
pop
sub
pop
cmp
mov
movsb
hlt
jle
cmp
cmpsb
imul
pop
ds
dec
dec
repnz
sti
dec
and
lock
pop
jle
push
cltd
mov
adc
leave
xchg
lea
sbb
shll
popf
lods
push
pop
cltd
aaa
flds
decl
lods
inc
aaa
ljmp
out
and
fsubrs
or
adc
push
out
outsl
fldl2t
push
stos
mov
mov
or
xor
gs
test
gs
lret
jnp
stos
sbb
pushf
mov
xchg
sar
push
mov
mov
in
pop
lret
xchg
or
punpckhbw
jae
sub
insb
xlat
jg
nop
test
jecxz
adc
bound
push
repnz
xchg
pop
inc
fnstsw
cltd
pop
mov
mov
dec
dec
mov
ja
in
aad
jb
call
mov
or
repz
sbb
mov
ljmp
dec
push
push
pushf
push
pop
imul
xchg
add
cmp
add
inc
clc
orl
cmc
pop
lsl
inc
aaa
imul
movb
in
insb
ss
cmp
lret
je
xor
pop
push
pusha
je
ss
cmp
in
push
mov
or
adc
sub
testb
sub
out
loopne
pop
outsb
fucomp
lahf
imul
pop
xor
test
cmp
movsb
dec
dec
dec
daa
shrl
push
push
cmpsl
sti
mov
mov
popa
xor
push
jno
push
xchg
cmp
pop
and
mov
stos
jmp
sbb
sub
pop
adc
es
pop
mov
cmp
dec
pushf
test
xlat
outsb
incb
divl
pop
inc
xchg
jle
push
sbb
or
add
cmp
push
mull
sub
lahf
out
or
pop
subps
jns
mov
inc
das
xchg
lea
push
fimull
adc
sub
ret
repz
ljmp
adc
jecxz
xor
sti
inc
movl
cmp
xchg
cmp
mov
repnz
pop
xor
shlb
mov
js
or
pop
popf
fstps
inc
lret
mov
xchg
iret
sub
and
jp
xor
and
orb
cmpsl
xchg
cmp
loop
push
sub
notl
test
sbb
les
add
mov
xlat
xchg
insl
lcall
cs
mov
cmp
mull
mov
sub
aas
into
jns
jno
sub
out
xchg
xchg
lds
pop
push
rcrb
jge
xchg
das
mov
pop
cltd
inc
clc
push
clc
inc
cli
ret
js
sarb
pop
push
inc
rclb
inc
fmuls
roll
inc
push
jmp
lret
cld
aas
push
fs
mov
xchg
mov
or
cmpl
nop
push
sbb
sbbb
std
or
inc
dec
mov
jle
mov
out
mov
fwait
mov
repz
jne
or
stc
nop
nop
stos
out
fwait
xor
leave
pusha
stos
lods
xchg
mov
std
xor
adc
xchg
cs
mov
in
into
gs
decl
xchg
add
int3
cld
inc
repnz
fs
fists
jge
adc
dec
mov
or
in
xor
adc
popf
stos
stc
adc
push
dec
cli
rorl
xchg
and
mov
mov
enter
xor
push
xor
ljmp
aas
mov
addr16
cli
mov
cld
xchg
call
popf
pop
cmp
fcomip
cmp
jecxz
jbe
xor
cld
sahf
adc
pop
movsl
cld
jecxz
aam
std
jecxz
fstps
xchg
mov
dec
push
js
jmp
adc
idivb
push
in
jno
xchg
shll
jp
sub
mov
mov
fldt
mov
pop
scas
das
aad
xor
pop
shrl
add
mov
inc
fldenv
push
cmp
pop
pop
push
jl
sub
and
pop
push
mov
insb
andb
push
sbb
test
mov
dec
dec
in
xchg
push
jno
cmp
sbb
mov
cld
xorl
pusha
test
movsb
repnz
test
push
out
adc
ret
ljmp
or
call
arpl
mov
mov
cmpsb
call
jnp
sbb
scas
dec
adc
jb
into
fidivrs
sbb
rcrl
jno
not
insl
sub
hlt
lahf
test
dec
outsb
cmpsb
es
daa
nop
xchg
cltd
mov
ret
repz
adc
inc
fstpl
ss
mov
js
lods
pop
sub
add
cmp
adc
mov
lcall
sub
cmpsb
mov
jl
scas
out
cli
adc
leave
sbb
pop
sub
outsl
fnstsw
xchg
les
xor
testl
das
mov
adc
sub
ret
popf
pop
call
orl
jge
insb
or
outsb
sbb
cmpb
sbb
sub
lods
dec
insb
mov
insb
fldenv
stc
sti
jno
jl
mov
pop
enter
jne
les
fisttpll
or
sbb
adc
imul
add
push
ret
mov
fadds
mov
adc
in
fbstp
into
adc
fucomi
or
xor
sahf
pop
sbbl
mov
ret
xor
xchg
scas
scas
dec
hlt
xchg
shll
jo
insb
jle
pop
xchg
add
lods
incl
jae
jmp
mov
mov
adc
orb
mov
je
sbb
repz
dec
mov
int3
outsl
adc
dec
mov
mov
aad
pop
psrld
fwait
gs
popf
lcall
data16
pop
add
mov
jle
pop
lcall
sahf
sbb
rclb
inc
loopne
ljmp
sub
inc
insl
stos
mov
dec
jo
clc
sbb
fcmovnb
std
jle
inc
push
xchg
sbb
jnp
pop
pop
jnp
push
cmc
mov
sbb
push
test
xor
jbe
mov
int3
mov
icebp
push
jne
inc
daa
mov
sarl
shrl
pop
addb
test
mov
sbb
jb
or
jmp
xor
push
xchg
mov
push
dec
push
sbb
jnp
sub
test
mov
iret
push
mov
xchg
push
pusha
adc
or
jle
stos
mov
jl
fcmovne
fdivl
ja
int
lret
xchg
enter
push
pop
cmc
dec
jp
lret
and
inc
aad
jb
daa
rorb
sbb
or
mov
insb
adc
repnz
jae
adc
stos
and
sbb
popa
das
mov
push
aas
sbb
dec
dec
pop
int
je
shr
outsl
aas
in
dec
xor
xor
sub
add
push
inc
int
aam
cmp
mov
mov
cmpl
mov
pop
fistl
mov
jmp
insb
clc
ret
jnp
outsb
loope
pop
data16
dec
add
mov
cmpsb
cmpsb
jns
aas
psrad
outsl
in
mov
dec
push
cmp
add
out
cmp
cmc
iret
sbb
subl
cmp
std
out
lods
inc
aaa
xor
sub
out
sbb
jmp
and
lods
cmp
dec
mov
pop
sbb
adc
sub
int
mov
addps
dec
fists
push
movsl
stos
shr
and
sub
pop
or
stc
mov
stc
popa
test
sbb
mov
fstpl
out
push
pop
pushf
cmp
fstps
jmp
dec
ret
out
test
imul
inc
into
adc
ror
mov
jnp
ds
ret
cmp
sub
loope
or
cmp
cmp
xchg
sub
flds
fldl
mov
adc
fsubr
xchg
mov
test
adcl
sub
adc
popf
cmpsl
push
lock
lods
mov
movsl
cmp
pop
pop
scas
jl
test
int
fdivrs
jmp
mov
aaa
clc
jb
inc
cmp
mov
inc
mov
mov
inc
movsl
faddl
sbb
inc
cmp
dec
push
imul
call
push
sub
jno
push
xchg
dec
icebp
xchg
pop
or
fimuls
lret
jo
ja
or
xlat
mov
mov
xor
cmp
add
stc
pusha
dec
arpl
sbb
dec
mov
xchg
fadds
add
jecxz
mov
std
sbb
push
rcrb
mov
out
jp
cmp
mov
pop
or
nop
pop
and
cmp
lret
dec
add
lret
mov
pop
pop
cmp
lods
es
push
vmovntps
inc
cmpsl
xchg
mov
das
out
fnsave
sti
dec
pop
sub
cli
pushf
fst
sahf
lds
pop
sub
in
mov
jbe
xchg
cs
dec
mov
pop
xchg
sub
dec
inc
in
dec
gs
sub
scas
out
sub
sub
addr16
and
enter
inc
ficomps
mov
js
imul
adc
jl
pop
push
jno
mov
xchg
dec
out
iret
lret
mov
loope
and
mov
sbb
jp
fbstp
mov
dec
pop
dec
outsl
fs
jo
movsl
xor
inc
lahf
idivl
scas
test
icebp
imul
clc
xchg
movsb
in
fisubrs
mov
or
hlt
adc
out
inc
adc
add
lret
sbb
add
iret
pop
mov
xlat
cmp
test
adc
cs
andb
mov
shlb
rcrl
and
aad
je
or
sbb
imul
movsl
xchg
andl
xchg
in
mov
jle
pop
inc
mov
movb
idivb
out
adc
jmp
add
ret
xchg
sbb
addr16
pop
std
push
lea
out
scas
fwait
lock
and
add
dec
xor
jp
mov
cmovae
mov
test
cld
xchg
sub
xchg
ja
cwtl
xor
dec
stc
movsl
cmpsl
inc
mov
add
scas
jg
xor
loop
sub
pop
ret
xor
adc
arpl
repnz
clc
mov
aaa
jge
imul
inc
lock
mov
mov
nop
sbb
mov
dec
jle
inc
cmpl
lock
in
add
mov
sbb
cltd
push
push
push
lret
rol
add
jne
mov
pop
xchg
xor
inc
in
jg
mov
hlt
fmuls
insb
dec
lods
push
in
xchg
sbb
jno
mov
and
int
out
fs
mov
dec
popa
xor
pop
mov
mov
loope
fiaddl
test
lock
lret
cmp
nop
mov
flds
test
in
add
xor
pop
int3
jae
leave
cmc
jg
loopne
push
pop
pop
xor
js
cmp
and
iret
jp
cmp
mov
jnp
rcrb
adc
or
sbb
test
loope
sub
adc
dec
call
jl
mov
pop
xchg
xchg
loope
in
pusha
cmp
insl
test
jp
push
es
test
scas
rcrb
stos
push
mov
aas
lock
icebp
adc
mov
int
push
xorb
cmp
push
hlt
addr16
stos
sbb
jno
inc
or
xchg
sbb
dec
popf
pop
adc
in
or
lret
mov
dec
xchg
jg,pn
fnstenv
adc
inc
sbb
mov
mov
lcall
and
repnz
aaa
stc
aas
push
xchg
cmpsb
nop
fiadds
cmp
jbe
sbb
push
je
test
aaa
cmp
repnz
mov
pop
lock
aad
les
ja
jno
enter
iret
dec
mov
mov
pop
and
jmp
pop
scas
and
hlt
mov
add
push
mov
cmc
stc
jns
sub
mov
cmp
popa
mov
es
ljmp
frstor
pop
rcrl
aaa
stc
test
jecxz
xchg
fwait
arpl
dec
push
addr16
outsl
push
xchg
push
stc
bound
and
inc
shrl
xor
jbe
dec
push
fidivl
insl
cmc
xchg
jl
sbb
dec
jg
sub
sahf
adc
into
hlt
xor
sbb
pop
ja
dec
test
inc
mov
jecxz
xchg
cmp
loope
cmp
imul
cmp
jns
sbb
popa
xchg
and
mov
push
pop
int
push
jb
mov
jns
insl
stos
out
icebp
adc
bound
cmp
xchg
jle
xlat
jae
test
stos
xchg
pop
cs
imul
pop
insb
xor
repnz
jae
cmp
inc
jl
stos
out
aad
fs
and
push
test
mov
out
insl
sbb
cmp
jbe
les
test
and
sti
pusha
jge,pt
sbb
test
mov
pop
pop
jns
adc
or
cltd
push
xchg
xor
movsl
inc
mov
sbb
or
movsb
pop
add
or
pop
scas
popa
notb
adc
sbb
jae
pop
pop
call
pop
mov
mov
fildll
out
sbb
pop
lret
jp
cmc
or
mov
jo
inc
pop
mov
rcrb
ret
and
xchg
sub
add
pop
lea
and
dec
mov
jo
jecxz
iret
imul
cmp
in
jle
cltd
out
mov
xor
xchg
test
push
add
sub
or
push
stos
sub
adc
dec
fadds
sbb
inc
lds
add
fsubr
sahf
push
jb
pop
mov
xchg
aad
dec
fcoms
mov
adc
mov
dec
shrb
faddl
lea
sbb
pop
xor
gs
cltd
arpl
push
in
mov
mov
std
xlat
cld
je
outsb
je
sbb
dec
mov
push
add
xorl
fsub
push
pop
sbb
mov
mov
add
ror
adc
xchg
jo
shr
lds
mov
test
stos
xchg
int3
xorl
insb
test
sbb
sub
cwtl
lea
sub
fldenv
and
addr16
lds
push
pop
cmpsl
adc
ret
or
je
fdivl
lcall
jno
sbb
xor
push
mulb
aam
dec
add
clc
adc
xchg
xchg
ficoml
jl
or
pop
push
inc
ror
je
add
push
mov
xor
or
jmp
cwtl
jno
aad
jnp
mov
push
fs
adc
jo
popf
mov
sub
mov
daa
sub
cltd
mov
mov
test
pushf
enter
add
cwtl
push
loop
push
mov
or
mov
call
and
xchg
xlat
push
add
pop
insl
popf
enter
in
adc
and
sub
xchg
lock
ret
test
int3
fwait
jle
aam
in
push
dec
mov
lods
mov
push
mov
cmp
shll
cmp
scas
mov
xlat
xchg
jmp
adc
push
jle
sahf
jmp
sbb
and
lock
xor
adc
mov
xor
gs
mov
xchg
and
xchg
ds
call
mov
xor
mov
push
out
pop
mov
lock
inc
mov
push
test
mov
lods
or
fnstenv
xchg
or
sbb
int3
jb
je
das
xchg
das
pop
test
pop
lds
frstor
in
stos
mov
mov
inc
fistpll
rcrl
cmpsl
ret
xchg
pop
fdivl
sbb
fldcw
aas
add
fidivrs
std
fldt
ret
jge
lock
pop
outsb
lcall
nop
js
lret
jb
inc
mov
jp
inc
lods
xor
stos
jns
test
adc
lock
rcl
ret
pop
jmp
pop
lds
mov
jne
mull
lods
test
outsb
test
inc
xlat
jmp
jle
jge
push
insl
imul
lahf
shlb
cwtl
js
xor
xchg
mov
das
mov
or
mov
test
push
in
sahf
repnz
sub
out
xchg
lods
pusha
nop
lods
shr
repz
jns
mull
dec
push
push
fadds
jmp
scas
lea
and
or
insb
dec
cmpsl
arpl
pop
in
shll
and
fxch
in
xor
pop
xor
pop
mull
or
mov
andl
shrl
test
testb
add
push
push
mov
jp
shrb
fiaddl
pop
push
jbe
sub
sti
ja
dec
insl
xchg
lcall
pop
inc
add
push
imul
adc
std
mov
lret
popf
fldcw
cmp
adc
mov
rorl
or
nop
xchg
mov
stos
mov
inc
mov
ljmp
and
cmpsb
popa
leave
xor
jmp
xchg
cmp
loopne
negl
xchg
and
mov
rcr
inc
into
pop
mov
push
in
aaa
inc
fwait
add
out
dec
int
add
in
mov
imul
aaa
cwtl
sbb
inc
lea
or
push
adc
imul
xchg
scas
and
jbe
jae
jb
loope
adc
inc
enter
xchg
mov
sub
dec
cmp
arpl
inc
inc
xchg
test
rorl
aad
fs
mov
mov
push
mov
je
xchg
push
sbb
sbbl
leave
mov
xor
mov
aad
cmpsl
sub
adcb
bound
test
push
sbb
jae
inc
add
pop
xrelease
fyl2x
pop
pusha
sbb
jo
mov
movsb
jp
scas
ret
sbb
jns
les
scas
inc
xor
mov
cmc
mov
lock
negb
ja
inc
stos
inc
js
xchg
movsb
pop
push
insl
jp
std
xchg
scas
pop
push
flds
and
out
dec
test
mov
popa
mov
push
and
and
aaa
or
dec
addr16
call
mov
data16
rolb
aaa
clc
out
jno
pop
mov
push
sub
mov
xchg
jne
int
mov
mov
fsubrs
shl
and
test
sti
add
pop
ds
xorl
inc
jge
divb
lods
bound
push
xchg
sub
gs
movsb
popa
into
aad
aad
loop
mov
cmp
xchg
ret
rolb
pop
jno
pop
in
mov
fistl
sub
vpinsrw
mov
dec
fimuls
lock
push
outsl
cmp
and
call
ds
icebp
xchg
cwtl
mov
sbb
dec
jle
adc
ja
stos
xchg
fs
mov
sub
inc
and
repz
js
and
mov
jmp
add
jbe
push
rclb
jne
and
jg
lods
fmull
cld
sub
dec
pextrw
js
in
mov
cmpsb
scas
aaa
dec
ret
cmp
mov
and
mov
outsb
mov
fnstcw
scas
outsb
jne
mov
or
cmpl
inc
repz
inc
out
and
imul
and
stos
je
cmp
shrl
enter
mov
sub
mov
jecxz
enter
nop
jmp
add
lahf
mov
shl
lahf
push
jl
sti
xchg
lods
sahf
std
stos
inc
cwtl
mov
pop
push
add
bound
ret
pop
scas
dec
mov
and
push
pop
in
lock
out
inc
jns
push
pop
mov
mov
fisubrl
movsl
jne
sub
push
xchg
sub
fcoms
push
sahf
push
rclb
jb
jo
mov
adc
out
pop
dec
inc
ljmp
cmp
les
lret
lock
das
lahf
cs
in
pop
pop
xchg
mov
rcll
jb
mov
adcl
jp
imul
movsl
mov
loopne
or
sahf
shl
iret
mov
mov
lcall
adc
mov
mov
dec
sbb
mov
adc
sti
adc
sub
repz
popa
std
pop
in
jo
gs
inc
inc
lods
jnp
ret
sub
add
cs
push
xchg
and
push
mov
cwtl
jno
dec
mov
icebp
xchg
sbb
movsb
xchg
insl
movsl
pop
mov
jno
loope
dec
popa
imulb
lock
adc
or
dec
jecxz
scas
xchg
js
jne
xor
pop
addr16
adc
xchg
and
orb
lods
xchg
pop
push
add
sbb
lods
mov
mov
mov
mov
add
testb
mov
pop
sub
mov
dec
cmp
pop
sbb
dec
outsb
stos
ljmp
cmp
pusha
xor
mov
in
lahf
and
dec
sub
xor
daa
jbe
aad
sti
cmp
loopne
add
add
and
inc
int
xchg
dec
mov
push
bound
gs
dec
inc
mov
xchg
ja
arpl
add
push
inc
repnz
jo
push
add
mov
and
test
pop
pop
test
mov
in
je
inc
shl
xchg
subl
and
jmp
cld
sbb
mov
insb
cmpsl
cmp
bound
data16
inc
push
popa
clc
sub
mov
ffreep
jg
clc
call
jb
test
jge
dec
adc
in
push
popf
mov
pop
xor
lods
jbe
popf
fs
push
xor
push
lret
fs
out
test
inc
cmc
sbb
in
adc
xor
jne
cmp
in
cmpl
cwtl
push
xor
or
mov
push
adc
sahf
bound
inc
iret
xor
mov
mov
pop
pop
popa
imul
mov
daa
and
std
xor
or
jnp
mov
call
mov
out
inc
cltd
sub
jg
imul
push
jg
mov
or
push
jnp
aad
pop
jb
movsb
sbb
dec
adc
dec
out
pop
ja
xchg
dec
push
in
cltd
add
addl
sbb
test
insl
popf
mov
pop
mov
dec
pop
aam
adc
dec
cli
push
jbe
pop
rcl
push
jae
pop
mov
mov
jae
cwtl
bound
loope
outsb
cmpsl
adcl
mov
cmpsb
dec
movsb
loope
fsubrp
lds
inc
and
pop
xor
jmp
pop
sbb
sub
subb
pop
imul
jg
andl
je
cmpl
xchg
cltd
and
mov
lea
call
mov
or
push
inc
jmp
sub
nop
inc
je
mov
test
mov
sub
jno
shll
in
cmp
push
add
in
mov
xor
cmp
test
lock
adc
std
jb
cs
jl
leave
cltd
jnp
idivb
mov
insl
push
sub
insb
pop
enter
dec
mov
mov
or
test
push
cmp
fmull
mov
in
push
or
lret
iret
jp
push
jo
dec
and
xor
pop
scas
mov
aaa
arpl
imul
push
popf
xchg
stos
inc
clc
mov
push
adc
mov
out
hlt
sub
loop
mov
pusha
out
pop
sub
mov
cli
loopne
out
popa
adc
lea
or
fsts
mov
xchg
jmp
in
dec
or
inc
hlt
or
test
jne
test
or
stos
mov
out
sub
lds
dec
repz
adc
add
lock
lods
sbbl
dec
xor
inc
mov
or
mov
ror
jo
loope
fidivrl
fldt
and
mov
fs
popf
out
orl
or
sbb
dec
loopne
mov
mov
mov
xor
mov
xchg
push
pop
mov
sar
add
jbe
jns
jle
mov
mov
negl
in
push
in
scas
cmpsl
out
out
xchg
es
pop
fcom
add
sahf
mov
xor
mov
mov
imul
add
inc
mov
cmp
call
mov
sahf
imul
jmp
pop
push
stos
jl
call
mov
test
add
das
cmp
adc
shrb
les
mov
leave
lods
jecxz
test
ss
cmp
arpl
ss
dec
scas
sahf
push
sub
aaa
fsubl
or
iret
bsr
push
pop
loope
xchg
inc
das
pop
negb
loop
je
adc
jl
movsb
in
out
dec
dec
and
mov
mov
sahf
sub
lret
mov
mov
popa
adc
aaa
into
daa
inc
and
je
fwait
hlt
xchg
cltd
xchg
xor
jp
and
jae
iret
dec
loopne
or
outsl
arpl
imul
sub
sbb
push
dec
mov
add
mov
lret
sbb
mov
push
es
fsubl
add
push
mov
sahf
out
out
inc
mov
std
and
iret
outsb
sub
out
int3
sub
inc
and
mov
nop
or
rcll
daa
call
jae
mov
mov
inc
xchg
and
andl
cs
cmp
pop
push
cs
scas
jae
xor
daa
inc
rcr
fwait
pop
imul
out
xchg
testb
pushf
mov
sbb
fs
or
cltd
out
push
or
aaa
ds
xor
mov
mov
inc
les
mov
hlt
xchg
daa
cmpsl
mov
mov
not
movsb
inc
aam
and
mov
dec
fs
out
popf
add
mov
jmp
or
pop
in
adc
lahf
mov
clc
dec
imul
sub
add
pop
sbb
adc
iret
in
add
push
jmp
std
xlat
sbb
and
or
xchg
xor
loop
push
inc
int
xchg
mov
sub
jbe
xchg
or
aas
arpl
xchg
jno
cwtl
fsubl
cli
call
pushf
and
sbb
imul
ret
insb
lods
push
and
in
insl
sti
xorb
clc
or
std
xchg
push
push
sbb
dec
in
aad
mov
push
xor
add
rorb
icebp
mov
xchg
xchg
mov
dec
mov
sub
or
stc
cmpl
push
sub
jbe
pop
rcll
pusha
test
call
and
xchg
fsubs
es
add
adc
fisttpll
cmp
data16
jle
js
imul
dec
xchg
xchg
push
or
dec
mov
xor
fnsave
ficoms
in
pop
xchg
sub
rcl
mov
ret
xor
arpl
fadds
mov
lea
imul
mov
bound
sub
push
test
push
jne
cmpsb
dec
mov
lret
rcl
mov
popa
xor
sti
adc
lock
aam
sahf
push
pop
cmp
xorl
dec
pop
sbb
adc
mov
inc
orps
lock
push
jno
xor
jmp
or
aaa
pop
push
jmp
push
repz
jecxz
xchg
stc
bnd
xchg
mov
push
inc
scas
and
stc
mov
dec
repz
insb
das
movsl
aaa
mov
cltd
out
jl
das
or
clc
lds
pop
inc
pop
cmp
test
in
es
aam
push
adc
icebp
ja
int3
add
mov
mov
dec
mov
ss
adc
insl
mov
mov
scas
hlt
xor
cmp
xor
sbb
mov
data16
jns
cs
negl
test
sbb
push
scas
out
into
xchg
repnz
push
bnd
mov
jmp
mov
xchg
test
sbb
pop
pop
pause
imul
jp
popa
clc
ret
imul
jg
xchg
mov
and
sbb
pushf
pop
out
dec
xchg
jg
jmp
loope
jno
push
bound
aam
pushl
dec
xchg
sub
cwtl
mov
les
mov
arpl
pop
lock
ret
sub
lods
cmp
mov
aam
cmc
jbe
mov
pop
lret
sahf
xor
adc
in
add
push
in
das
cmp
es
xchg
cmp
mov
filds
adc
pop
iret
inc
dec
jl
jmp
sbb
add
or
shlb
inc
add
cltd
pop
and
pop
repz
push
ret
or
xchg
dec
sub
mov
sub
sub
arpl
cmpsl
jmp
mov
mov
rorl
add
sub
in
mov
inc
push
addr16
outsb
bound
xchg
lea
loop
mov
fmuls
mov
ror
hlt
fwait
cmp
inc
mov
call
jb
out
subl
stos
shrl
sahf
or
es
sub
out
mov
testb
movsl
mov
ljmp
fisubs
dec
ficoms
iret
add
aam
mov
inc
rcll
bnd
je
enter
pop
jle
sub
pusha
ret
inc
stc
rorb
popl
adc
xor
push
aas
fcmove
mov
movsl
push
cmpsl
rcll
aam
jo
aas
dec
dec
xchg
sti
nop
mov
pop
mov
les
xor
add
cmp
fisttpll
add
add
mov
add
pop
mov
out
xchg
mov
loop,pn
xchg
fwait
pop
mov
mov
xchg
xchg
push
jmp
sub
mov
pop
movsb
loop
push
sti
pop
mov
stc
and
mov
lcall
nop
jle,pt
ret
scas
mov
pop
loope
xor
cmp
in
lahf
xchg
roll
xchg
jp
mov
ja
iret
std
aam
and
jb
mov
adc
mov
jb
cli
icebp
mov
sbb
pop
or
push
sub
in
jno
test
fistpl
js
push
pop
mov
popf
arpl
inc
and
inc
sbb
sub
out
inc
jg
aas
pop
stos
jne
xlat
lret
testl
ja
outsb
push
outsb
push
andl
cmp
fst
sbbl
mov
and
inc
sbb
ficoms
outsb
icebp
nop
push
mov
mulb
stc
pop
mov
pop
xor
mov
hlt
cmp
xlat
icebp
lret
or
call
or
lds
mov
iret
addr16
adc
cltd
mov
xchg
mov
cmpsl
mov
sbb
xchg
popf
scas
std
andl
sub
leave
mov
arpl
mov
dec
inc
test
out
mov
cmpb
int
popf
adc
inc
push
mov
jno
mov
sbb
and
adc
mov
js
rolb
insb
mov
push
push
stos
pop
mov
out
xlat
jb
push
in
jbe
push
nop
sarb
ss
int
ljmp
scas
fcoml
test
add
add
jmp
faddl
and
fstpt
ljmp
popf
add
orb
cld
pop
lcall
ja
cmp
sbb
dec
pop
in
idivl
cmp
mov
ror
mov
or
sahf
daa
fstl
xlat
es
or
xchg
mov
mov
push
adcl
popf
fisubrl
add
jae
nop
lock
scas
push
arpl
lds
jo
mov
xchg
scas
cmp
jp
jbe
icebp
cmp
sub
lea
std
cmp
aaa
pop
inc
cmpsl
into
pop
jns
inc
mov
lock
mov
inc
cmp
xor
xor
add
add
and
pop
and
xor
cmc
hlt
mov
mov
fstpl
rclb
decl
xor
add
outsl
and
mov
jno
sub
pop
out
ret
cli
pop
mov
out
mov
pop
sbb
jo
or
sub
lea
inc
flds
cmc
adc
pop
mov
mov
or
outsl
jns
push
ljmp
inc
pop
in
std
aam
or
mov
rorl
das
cmp
es
adc
lcall
jmp
adc
je
data16
mull
cmp
psrlq
jae
sub
jp
cmpsb
xor
cmp
loopne
pop
fdivrs
fdiv
jno
push
sub
lahf
mov
aas
rcrb
cmp
sub
push
xlat
rcrl
popf
add
hlt
push
loopne
scas
adc
sub
and
mov
push
outsb
xlat
fidivl
pushf
xchg
mov
jns,pn
mov
adc
and
mov
cmpl
stos
scas
ret
fmull
xchg
jo
out
mov
dec
mov
push
and
por
leave
sbb
adc
jmp
dec
ljmp
leave
rol
lret
jge
hlt
pop
jmp
mov
loop
adc
leave
aad
xchg
pop
outsl
movsl
push
sahf
lea
call
add
mov
dec
jmp
frstor
xlat
frstor
xchg
cs
jnp
xlat
jo
or
rclb
fcoml
push
mov
out
xor
inc
dec
insl
shrb
imul
push
mov
into
idivb
and
adc
fs
lea
pop
fucom
pop
lret
xchg
aas
mov
rcrb
sbb
inc
mov
loope
jmp
repz
imul
addr16
cmp
aas
call
call
cmp
mov
shlb
aam
add
xor
pop
out
jo
add
mov
inc
cmpsl
aaa
insl
xchg
jns
mov
les
inc
pop
mul
pop
cmpsl
out
inc
mov
rolb
or
cmc
sbb
or
lods
sub
adc
pushf
ds
or
insb
pop
jecxz
fidivl
int3
repnz
sub
xchg
mov
sbb
repz
sbb
and
push
icebp
mov
inc
or
insb
push
clc
fsubrl
mov
and
xor
pop
les
das
imul
inc
das
mov
stc
push
cmp
pop
jb
inc
popa
cld
xchg
fxam
loopne
mov
add
mov
and
sub
jb
push
xchg
sti
inc
push
fsts
push
push
loop
sti
in
adc
test
push
lea
sbb
ret
mov
call
mov
hlt
cmc
les
adc
repnz
fidivs
xchg
ret
jne
xchg
jmp
ficompl
push
xor
in
add
jb
xchg
shl
jl
or
mov
mov
jnp
test
fidivrl
and
pop
loope
test
push
ja
std
adc
push
dec
mov
test
shr
mov
mov
cmp
jne
adc
mov
dec
push
bnd
add
mov
jp
xchg
lcall
pop
repnz
sbb
push
int
dec
es
call
in
xchg
jge
xchg
pop
or
xchg
dec
gs
or
call
enter
cmp
ja
cltd
mov
lods
jecxz
fwait
sarb
xor
push
or
sub
xchg
xor
pop
push
mov
dec
fs
inc
dec
stos
rcl
mov
push
sub
mov
sub
out
stc
pop
orb
stc
and
cli
cmp
cmc
popa
mov
clc
mov
sbb
es
inc
xchg
mov
fistps
mov
push
mov
inc
or
js
dec
cmp
outsb
sub
xchg
sub
les
lds
inc
mov
jno
jl
and
es
fistps
fidivrs
add
int
icebp
cmp
rcrb
mov
dec
div
nop
xor
xchg
push
sbb
or
sub
ss
xchg
add
bound
pop
std
rorb
mov
mov
sbb
xor
add
push
add
stos
push
add
xchg
xor
add
ja
jne
dec
push
adcb
lret
mov
mov
sub
lods
decb
inc
pop
ret
xchg
adc
test
aas
gs
cmp
insl
fstpl
stos
and
popf
xorb
xchg
xchg
xchg
das
movsl
scas
xchg
add
nop
jmp
negl
popf
lea
mov
mov
fmull
pushf
outsb
jp
mov
add
and
adc
pop
or
push
mov
movsb
jo
out
sarl
fsubrp
in
cmp
xchg
mov
shrb
push
jecxz
mov
enter
loopne
popa
pop
daa
lock
xorb
leave
or
push
jnp
cmp
movsl
mov
cmp
sub
xchg
ja
into
mov
adc
inc
test
mov
adc
je
rcrb
repnz
mov
mov
sbb
dec
jecxz
int
jae
or
push
inc
xchg
dec
js
clc
pop
cltd
shll
insl
loope
rcll
inc
sbb
mov
ret
fisttpl
dec
sub
sahf
ja
ret
loope
xor
adc
rcl
aaa
fucomi
outsl
and
pop
outsb
sahf
xor
and
jp
push
inc
dec
ret
dec
mov
dec
mov
cli
pop
repnz
sub
or
dec
stos
sub
jnp
mov
lret
push
jo
fstl
jp
cmp
pop
dec
and
shrb
inc
sub
or
stos
pop
and
xlat
inc
xor
pop
jmp
or
push
mov
cmp
mov
repnz
loop
popf
sub
sbb
lret
ljmp
pop
and
sub
test
fsubrp
mov
stos
stc
fsubrs
sbbl
push
sub
mov
pop
loopne
lods
int
test
dec
pop
xor
mov
dec
push
stos
xlat
loopne
aas
notl
out
xor
pop
xor
rorb
push
jae
jnp
jl
add
data16
jle
jbe
fcompl
mov
ret
dec
cmp
sub
dec
pop
pop
je
btr
xlat
or
mov
data16
rorb
ljmp
pusha
mov
lea
mov
mov
movups
jp
sbb
pop
sahf
clc
icebp
std
pushf
jae
xchg
je
lods
lret
cli
push
adc
xchg
sub
fwait
scas
push
push
add
mov
in
sub
lods
loope
pop
mov
cli
out
xchg
data16
jns
fistpl
mov
jno
adc
jae
push
subb
adc
cmpsb
sbb
jo
mov
lret
lock
es
in
repnz
pop
icebp
in
xor
inc
enter
sbb
mov
addr16
aam
adc
jge
clc
xor
push
add
icebp
pop
and
loope
data16
mov
fs
adc
xor
pop
leave
arpl
in
adc
xchg
test
xlat
loop
xor
in
filds
cmp
loop
gs
cmc
mov
mov
sub
sub
push
or
add
std
call
push
leave
xchg
lods
mov
data16
jg
pusha
in
inc
pop
or
inc
ss
cltd
mov
mov
jle
cmp
scas
mov
xor
movsb
mov
sbb
shlb
insb
fists
out
mov
flds
ds
into
arpl
dec
mov
cmp
outsb
clc
or
push
aas
cli
and
imul
lds
aam
mov
pop
into
fdivrl
je
cmpsb
xchg
inc
das
addr16
mov
stos
aam
stc
mov
xor
lea
cmp
dec
adc
sarb
out
xor
cmp
xor
lret
cmc
inc
out
push
push
sbb
mov
movups
adc
data16
lret
and
pop
mov
roll
into
and
pop
arpl
lods
gs
aad
cmc
cmp
jp
adc
imul
adc
rorl
flds
sbb
testl
fldcw
cli
imul
jge
xchg
in
shlb
stos
aaa
xor
mov
ret
aas
xor
mov
ficoml
push
out
or
lea
out
pop
lret
push
adc
jecxz
sub
mov
mov
pop
lea
xchg
and
cmp
aam
jo
ret
sbb
pop
push
je
xor
mov
test
xchg
xchg
bound
dec
loop
inc
dec
xor
inc
xchg
sbb
pop
nop
icebp
or
jg
dec
mov
xchg
dec
pop
pop
shr
pushf
hlt
loope
fsub
scas
add
cmpsb
fwait
and
mov
push
lret
icebp
mov
mov
orl
adc
inc
cltd
jnp
stc
imul
cmc
inc
push
adc
lea
sbb
mov
loope
mov
push
repz
xchg
nop
mov
js
push
add
mov
inc
das
mov
popw
mov
jge
bound
add
sbbb
decl
adc
lret
cmpl
popf
fs
mov
sub
and
loope
jmp
ret
cmp
hlt
jg
xor
sub
pop
je
push
addb
and
cmc
push
cmc
xchg
sahf
inc
sub
lcall
out
lock
push
daa
mov
sbb
mov
fidivrs
adc
lret
sub
pop
clc
sub
inc
ja
jne
mov
cmp
pop
in
das
xchg
lea
fisubrs
mov
fldenv
or
lret
xchg
dec
in
add
jp
lcall
adc
out
stos
dec
fidivrl
mov
push
iret
int3
xchg
mov
and
ja
out
mov
lahf
xchg
icebp
popf
sbb
push
sub
jbe
lock
call
sbb
xchg
cmp
inc
or
cmp
inc
adc
add
add
outsl
xchg
or
rcr
stc
aad
movsb
repnz
bound
add
sbb
rolb
mov
mov
inc
in
rcrb
sti
push
jb
mov
fdivs
stos
jno
rol
mov
sbb
jo
in
sbb
jl
das
outsb
shrb
js
or
jne
pop
outsl
movsb
sahf
push
js
jl
movsb
outsb
jnp
repnz
xchg
imul
and
push
sub
jns
jp
cmp
gs
test
jp
int
push
daa
es
inc
add
mov
pop
pushf
mov
cmp
mov
lret
std
jmp
add
jae
cld
sub
jns
dec
ja
lcall
fcmovnb
negl
mov
mov
ret
js
and
push
or
mov
cmp
inc
jo
sub
push
cmp
sub
cmc
mov
es
movsb
mov
push
movsb
fistps
aam
in
aad
shrb
shrb
lods
sbb
adcb
inc
sbb
sub
xchg
sahf
and
stos
mov
mov
jmp
cmp
cmpsl
add
hlt
aam
pop
add
mov
xchg
fisubrs
push
push
movq
xchg
cmp
sub
jb
mov
jne
fxam
ret
in
push
cmp
adc
ret
pop
push
mov
mov
das
sbb
fcmove
cs
insl
inc
mov
gs
and
das
inc
pop
mov
push
xchg
sbb
push
les
test
rcrb
xchg
push
mov
or
repz
push
add
pop
pop
add
stc
xchg
ret
dec
lret
mov
lods
push
jl
push
fistps
insb
jecxz
in
adc
adc
mov
xchg
cld
test
xor
dec
popf
nop
or
push
or
jg
gs
xchg
inc
dec
jp
clc
jo
shl
inc
es
xor
data16
push
popf
xchg
xor
pop
mov
add
cmpb
cmp
adc
inc
push
push
jp
je
jno
aas
arpl
in
daa
cmp
dec
add
stc
repnz
mov
jnp
push
pop
imul
mov
cmpsl
push
out
psrld
add
xchg
lock
cs
jnp
jnp
or
in
sbb
loopne
in
movsl
sub
ret
add
mov
lcallw
sbb
mov
inc
shll
jge
cmp
aaa
int
pop
add
or
inc
cmp
lock
jbe
add
xchg
lods
orl
scas
ror
or
jne
mov
mov
shll
je
jp
fmuls
mov
dec
iret
inc
in
cmp
call
pop
mov
psubsw
lret
xchg
outsl
and
lcall
jge
aam
aad
jecxz
add
je
fpatan
jle
xor
enter
sahf
jle
sbb
fisttpll
push
test
out
xchg
ja
shlb
mov
movsb
and
bound
jo
ja
fidivl
jl
roll
cmp
xchg
divl
mov
adc
test
lcallw
mov
mov
mov
cmp
rcl
dec
cmp
add
hlt
dec
and
addr16
mov
mov
adc
ret
dec
inc
xchg
aas
rorl
mov
mov
fldl
or
jecxz
test
icebp
mov
xlat
call
cmp
sbb
push
push
mov
sbb
or
pop
inc
or
dec
loope
repz
and
push
pusha
ja
or
fistps
cmp
inc
inc
mov
ss
push
mov
iret
and
cli
jge
rcrl
xor
mov
mov
bound
jb
inc
sub
push
xor
pop
call
push
and
ja
and
mov
mov
fcomi
sub
push
jmp
fldl
into
xchg
lcall
jb
fstpt
mov
xlat
pop
jecxz
push
js
xor
les
jae
add
jbe
inc
mov
and
aad
pop
mov
repnz
add
loopne
pop
push
or
testl
push
mov
aad
test
decb
dec
leave
pusha
sbbb
add
out
pop
push
xchg
test
cmp
hlt
lret
mov
xor
sbb
adc
pop
lret
ja
push
dec
lods
mov
xor
mov
lea
jbe
out
mov
es
aaa
lahf
push
gs
ss
push
nop
jnp
cmc
sub
clc
push
lds
mov
fdivl
leave
mov
xchg
repnz
leave
int
and
mov
cmp
das
mov
testl
jg
loopne
dec
arpl
idivb
and
xor
inc
scas
test
xchg
faddl
or
inc
and
insb
fwait
push
xlat
cs
movsb
add
imul
out
sti
test
jne
jbe
jae
sub
aaa
xchg
test
and
mov
aad
shll
movsl
daa
mov
lds
push
cmpl
cmp
bound
xor
cwtl
and
xor
sub
nop
stos
and
sbb
xlat
push
jb
cmp
add
push
shlb
cli
std
bsr
dec
enter
enter
jmp
les
xor
sahf
daa
lret
out
into
dec
xlat
ljmp
xchg
or
push
pop
xchg
fnstenv
lock
jp
add
sbb
jns
aaa
ds
movsl
call
inc
push
push
pop
sub
call
or
mull
dec
lret
mov
sub
xor
in
aas
pusha
lcall
sbb
into
in
mov
sahf
iret
mov
mov
cmp
pop
adc
cltd
test
dec
adc
ss
cmc
dec
sbb
aas
iret
icebp
push
dec
out
cmp
or
mov
cmp
xchg
pop
xlat
test
jecxz
or
leave
xor
dec
dec
xchg
inc
push
lods
xchg
xor
push
cli
subl
dec
fsubs
sub
mov
pop
push
jg
icebp
js
adc
sub
fwait
enter
and
sub
aas
push
ret
mov
mov
dec
test
icebp
or
movsb
data16
jno
int3
inc
inc
pop
jle
ret
pop
xchg
pop
mov
mov
pop
pop
cwtl
push
icebp
nop
xor
dec
lods
pop
loopne
mov
imul
pop
jae
fucomp
xchg
stc
sahf
inc
loop
sbb
loopne
xchg
xor
dec
sub
add
xchg
jae
push
rcl
in
mov
and
mov
popf
lods
mov
adc
mov
add
int3
repnz
fldln2
or
imul
ljmp
and
push
sti
mov
pop
or
negl
bound
shlb
mov
pop
fildll
dec
fbstp
lds
das
fistpl
lahf
dec
cmpsb
dec
mov
dec
movsb
inc
xchg
mov
jnp
xor
mov
sub
xchg
sbb
enter
cmpsb
lcall
sbb
cmp
lods
imul
add
mov
cli
sbb
aaa
loop
adc
jp
out
scas
inc
add
int
pop
push
adc
mov
imul
adc
adc
movsb
repnz
jbe
pop
icebp
outsb
jl
hlt
push
xchg
cmp
imul
xor
cmp
lods
push
mov
cmp
lcall
mov
xor
int
es
jno
mov
or
add
es
xchg
adc
fstpt
fdivl
adc
cmp
pop
in
filds
xor
stos
movsb
xchg
rclb
add
inc
scas
fiadds
loop
notl
dec
add
mov
pop
or
lds
enter
xchg
push
inc
push
pop
das
jg
or
mov
test
scas
fsubrl
loop
and
scas
push
mov
aas
iret
test
add
subl
jae
repnz
lods
jg
test
aad
repz
repz
adc
iret
daa
lock
inc
adc
mov
xor
and
cs
xchg
xlat
addr16
add
pop
cmp
leave
sbb
mov
sub
mov
jns
and
data16
jbe
dec
sub
js
sbb
pop
insb
mov
aas
push
pop
test
fmul
daa
stos
ficoms
xor
push
in
add
outsb
mov
scas
sub
shlb
dec
cmpsl
scas
loop
leave
mov
fcoms
mov
cmp
adc
inc
mov
xlat
out
sbb
pop
negl
addr16
push
test
xchg
sub
ds
out
xchg
cmc
xchg
sbb
sub
mov
xchg
in
mov
sbb
jae
mov
xor
inc
hlt
push
lcall
loopne
lret
pop
xchg
push
ret
xor
out
xchg
adc
pop
out
xchg
xchg
mov
sub
xor
shlb
jo
cwtl
aam
inc
dec
cmpsl
ret
leave
lea
cmc
mov
pop
jnp
popa
cmp
dec
repz
mov
wrmsr
lahf
jle
es
cmp
sahf
cld
xchg
adc
popf
addl
sbb
mov
sbb
in
gs
and
xor
lods
dec
adc
jp
mov
jle
jl
mov
test
sub
mov
xchg
dec
fdivr
and
in
jb
jmp
fsubs
stc
xorb
mov
fldl2t
mov
pcmpgtd
push
mov
jle
test
pusha
cld
push
orl
jb
mov
adc
push
mov
and
inc
ficoms
lea
sbb
in
fwait
mov
or
insl
popf
dec
mov
test
dec
fwait
jecxz
pop
ds
xchg
es
cmc
test
cmp
in
push
mov
lret
xor
mov
lea
add
popa
dec
inc
adc
test
stc
pop
add
repz
sti
mov
stos
cmp
push
in
jnp
jb
adc
xor
pusha
inc
adc
mov
mov
sbb
cwtl
dec
jbe
cltd
in
mov
lahf
jmp
push
xor
dec
xchg
push
stos
adc
js
lods
mov
shl
test
sub
push
test
ljmp
cld
cld
movsl
lds
mov
mov
insl
add
insb
pop
cmp
or
cmpsb
xchg
stos
je
lock
push
push
cmp
jo
pusha
inc
bound
divl
popf
mov
inc
mov
std
mov
fwait
xor
shlb
xor
jmp
push
pop
mov
pop
cmp
shll
push
les
test
mov
xor
xchg
test
mov
popa
mov
mov
dec
data16
jbe
nop
cs
inc
fidivrl
ja
mov
push
leave
xor
sub
and
dec
loope
cmp
jecxz
inc
inc
xor
xchg
fidivrl
sbbl
or
inc
xor
cmp
jbe
out
lock
push
ret
mov
or
icebp
adc
lods
loopne
mov
push
insl
cmp
jp
lahf
xor
daa
sbb
inc
ret
ret
out
mov
insl
in
pop
cld
inc
addb
loope
and
inc
test
je
rolb
mov
mov
and
cmp
push
fistl
daa
mov
push
and
cld
jge
mov
loopne
xchg
add
xlat
sbb
xchg
mov
subl
jne
xchg
mov
rol
push
cmp
shll
adc
mov
push
lret
add
icebp
imul
sahf
stos
lea
je
or
fnstenv
imul
push
es
add
ret
sarb
pop
fists
and
push
mov
inc
orb
testl
shrl
fsubl
int3
dec
xchg
jge
push
jmp
dec
stos
lret
pushf
lahf
push
adc
pusha
pop
int
imul
jno
loop
aam
lret
addr16
mov
lcall
test
mov
mov
dec
addl
incb
cmc
fwait
cmp
push
xchg
out
cmp
lret
shlb
push
and
std
nop
xchg
addr16
jge
inc
inc
fidivs
ffree
mov
leave
cmp
gs
lret
pushf
add
popf
lods
sub
int3
mov
pop
sub
sbb
pop
into
gs
mov
mov
sub
pop
xor
mov
or
sbb
jbe
test
push
cld
mov
das
add
mov
fistpl
fs
mov
mov
sub
add
call
cmpsl
sbb
icebp
rcll
or
fbstp
lcall
inc
cmpsl
xchg
cmc
int3
test
cmpsb
add
es
xchg
and
out
pop
jne
dec
and
iret
lea
mov
lods
scas
push
aad
or
jp
and
push
fcomps
sbb
xchg
sub
int
inc
cmp
xchg
lret
pop
dec
aaa
aas
loopne
jo
mov
adc
add
cmc
mov
adc
sbbb
mov
push
cmp
lds
xchg
mov
out
int
or
xchg
mov
mov
lcall
leave
xchg
outsb
cmc
ss
mov
movsl
jle
popf
xor
and
inc
xlat
ret
test
jecxz
stos
outsl
push
jbe
jecxz
repz
cmp
cmp
in
stos
lods
push
mov
push
fisttpll
mov
fs
inc
dec
ljmp
imul
pushf
sub
mov
popf
mov
mov
mov
mov
cwtl
inc
xchg
out
mov
outsl
insl
les
mov
push
sbb
pop
cmc
push
mov
jge
sbb
std
adc
cmp
nop
insb
jo
xchg
adc
sub
out
stos
inc
and
mov
adc
das
adc
mov
and
dec
jl
push
ds
mov
and
push
repnz
mov
mov
repnz
test
js
lods
sbb
xor
imul
es
ja
loopne
addb
iret
jb
in
xchg
loopne
fiaddl
shr
ja
out
sti
les
icebp
xchg
and
sbb
aas
sbb
jecxz
pop
dec
lds
dec
aam
rolb
xor
mov
loope
xchg
rcrl
mov
je
jecxz
stos
or
xor
pop
mov
sub
mov
popa
mov
jp
pop
outsb
dec
sbb
sub
pop
or
mov
mov
xor
es
gs
int3
jmp
add
and
xor
ds
xchg
add
ret
hlt
int
ret
mov
mov
add
enter
ret
xchg
out
inc
dec
dec
jns
scas
imul
out
jo
loope
test
adc
xchg
jmp
jnp
cmpsl
and
stos
sahf
pop
insl
in
out
ficomps
andl
mov
lods
lds
adc
cmp
adc
inc
cli
test
push
or
cwtl
inc
xorl
xchg
clc
nop
xor
and
and
scas
dec
popf
jns
iret
imul
std
xchg
std
leave
dec
bndstx
sub
add
xlat
int3
or
inc
shlb
mov
mov
jle
stos
pop
mov
xchg
dec
lods
inc
hlt
andl
push
lods
popa
push
jo
xor
mov
lods
and
iret
add
iret
mov
lahf
andb
inc
movsl
int3
sub
sub
jbe
rolb
adc
lea
mov
dec
fsub
aaa
sti
jae
mov
xchg
fmuls
fsubr
aas
into
fldpi
cmc
lods
mov
repz
mov
shrb
pop
fwait
stos
inc
cmp
pop
leave
pusha
xchg
and
sbb
xorb
and
or
push
fyl2x
test
movsb
pop
add
xor
pop
mov
push
inc
out
inc
mov
add
repnz
sub
nop
andl
enter
lret
pop
cmp
repz
dec
add
xchg
imul
cmp
mov
imul
adc
and
dec
lea
pop
ds
xor
shll
pop
scas
adc
bound
inc
lea
pop
cmp
add
xor
mov
cmp
repz
or
outsl
xor
xlat
je
daa
daa
inc
push
scas
push
cltd
addr16
sub
sub
and
in
dec
pop
or
cmpsl
mov
jge
xlat
stos
jns
fdiv
sbb
push
decb
mov
adc
fidivl
hlt
stos
inc
jbe
and
xor
int3
inc
jp
mov
ss
lock
dec
push
test
xchg
imul
dec
adcl
loope
fidivs
lcall
call
test
mov
and
cltd
icebp
dec
inc
stos
xchg
daa
bnd
add
int
loope
xchg
jle
aad
cmp
pushf
fidivl
jmp
mov
leave
mov
sub
shlb
xchg
dec
sbb
inc
jmp
daa
sbb
stc
inc
pop
mov
push
fwait
mov
push
cwtl
sti
test
arpl
fldl2t
cmp
dec
in
mov
fsub
int3
push
es
fwait
out
and
imul
xchg
dec
xlat
or
push
or
test
mov
sahf
sub
pop
sbb
mov
pop
lock
shr
pop
push
std
nop
xorb
imul
sub
xchg
xlat
jb
cmpsl
sub
add
mov
filds
nop
out
andb
pop
sbb
mov
daa
xchg
add
dec
ficoms
cmpsb
icebp
or
and
test
loop
movsl
inc
in
cmc
pusha
mul
and
or
sti
pop
pop
push
icebp
gs
push
xchg
jb
sahf
xor
pop
scas
inc
arpl
lds
sbb
outsb
push
pop
jecxz
outsb
adc
rcrb
bnd
mov
cwtl
das
pop
mov
adc
test
aam
stos
jmp
ret
adc
xor
outsb
std
xchg
pop
ds
in
cmp
mov
jbe
insl
test
movsb
jle
mov
jl
jl
test
push
fstl
push
sub
adc
shrb
fsubrs
inc
imul
repnz
mov
or
push
jo
push
mov
dec
nop
daa
jp
fnsave
and
aam
mov
pop
jne
notl
mov
test
sub
inc
push
dec
mov
mov
icebp
xor
stc
xor
inc
cld
out
test
mov
fisubl
adc
cmp
jno
lods
aaa
pop
adc
lcall
je
xchg
jns
fwait
xchg
rcr
pop
jno
add
movsb
lods
dec
xlat
insl
sbb
hlt
mov
mov
mov
mov
fnstcw
repz
xlat
loope
mov
cmp
popa
sbbl
lea
loope
push
mov
cmpsb
mov
inc
mov
pusha
cmp
shll
xor
and
cld
xchg
push
pop
push
and
sbb
adc
jne
imul
clc
mov
sbb
mov
xchg
fs
cmp
and
push
add
clc
dec
cmp
pop
and
sti
nop
lods
sub
and
jp
cmp
inc
loop
aas
cltd
loopne
cmp
cmp
xor
mov
lahf
gs
imul
push
addr16
into
iret
push
add
mov
push
rolb
rorb
xor
daa
or
jecxz
dec
adc
mov
fsubrs
add
shlb
jge
aaa
cmp
call
mov
shrl
repz
and
or
adc
aad
cmp
jo
jmp
jns
aaa
adc
lods
sub
mov
sbb
add
daa
jb
mov
adc
xchg
push
lods
and
pusha
mov
jge
inc
and
idivb
push
aam
test
cld
movsl
int
mov
mov
out
ret
mov
les
cmp
mov
push
and
dec
jg
out
test
and
lcall
insl
loopne
cld
pop
xchg
add
or
lea
fnstcw
jnp
mov
or
cmp
in
dec
push
inc
in
inc
cld
or
nop
jnp
rolb
fstl
iret
stos
pop
fisttpll
out
push
aad
cmp
or
sbb
dec
dec
mov
cmp
popa
jmp
andb
mov
sbb
aad
mov
or
adc
jge
xchg
xor
pop
jmp
fsubl
rol
sbb
js
mov
enter
dec
jb
ss
inc
adc
push
mov
pop
pop
push
sbb
jns
out
sbb
push
movsb
sahf
out
cmpsl
or
stos
out
push
jo
adc
cltd
push
jl
adc
insb
clc
stos
out
cltd
inc
push
add
cmp
dec
push
in
xchg
pushf
int3
xchg
pop
sub
ret
mov
mov
cmp
scas
cmp
jne
mov
pop
in
pushf
fcmovne
jb
out
mov
rcll
pusha
ror
ss
es
and
jo
dec
cld
xchg
jl
mov
cmp
cmp
imull
cmp
jnp
push
pop
adc
cmp
xor
jae
call
cld
test
lds
jns
ret
aad
xor
notl
outsl
xchg
dec
push
cmpsw
fwait
inc
pop
push
mov
push
push
sub
push
mov
fistps
pop
repnz
cs
jne
mov
lods
ss
ficoms
lcall
jno
sub
mov
aad
jno
sbb
jbe
cmp
sbb
scas
dec
xor
pop
pop
jbe
addl
fbstp
movsb
pop
xchg
jle
dec
bound
sub
dec
adc
xchg
cmp
int3
js
push
addr16
lds
cmp
or
dec
gs
outsb
popf
inc
stos
jne
fcmovb
inc
gs
jbe
test
pop
dec
sbbl
and
jbe
in
pushf
mov
js
cmp
shl
daa
cmpl
sub
jmp
inc
leave
popf
subb
std
imul
test
ret
enter
or
cwtl
int
scas
out
push
pop
ja
lods
sbb
sub
pop
or
inc
mov
xadd
dec
lock
jl
pop
xor
lock
and
mov
lods
hlt
and
movsb
xchg
pop
lds
jmp
ds
daa
mov
lret
out
dec
dec
loope
xlat
lds
pop
jg
fsubl
adc
mov
mov
movsb
dec
cmpsb
pop
lods
dec
xchg
or
data16
push
push
add
mov
pop
sub
pop
nop
pop
cli
cmp
jne
inc
sub
fs
test
sub
fistps
inc
ficoms
fdivs
mov
sbb
xchg
lret
addr16
cmp
cmp
pop
imul
stc
mov
push
xchg
js
pop
sub
lods
inc
int3
inc
xor
jg
xchg
pop
dec
dec
repnz
adc
fwait
iret
scas
dec
fistpl
rclw
pushf
daa
sbb
imull
sarb
popf
jno
ret
xchg
test
and
dec
inc
call
jns
xchg
arpl
pmaddwd
daa
and
adc
shll
jnp
xchg
loopne,pn
inc
fidivrl
aad
sahf
popa
clc
mov
jg
loop
idivb
adc
rcrl
cmpsl
cmp
inc
cmp
pop
imul
mov
xchg
xchg
das
push
lods
adc
ss
addr16
jecxz
enter
gs
and
sbb
mov
test
push
and
les
icebp
nop
xor
mov
idivb
stos
adc
jg
fwait
sbb
lock
adc
bound
ja
test
add
fildl
jl
jg
jg
decl
pop
fcomp
cmpsl
sub
loope
andl
lea
scas
sti
repz
ret
iret
test
lea
xchg
mov
inc
popa
clc
jbe
pop
mov
dec
pop
xor
sti
push
scas
addr16
fbstp
cli
and
movsl
inc
xchg
orb
mov
pop
insl
or
stc
nop
notb
pop
ds
mov
pop
pop
out
or
imul
lea
sbb
call
lcall
movsb
ljmp
dec
lret
or
lods
jg
cmp
inc
mov
inc
ficoms
mov
jns
ficompl
or
in
jae
push
popf
pop
nop
iret
jg
sub
mov
out
in
sub
hlt
mov
and
jae
inc
lods
xchg
stos
push
or
pop
testb
jg
and
out
xor
sti
icebp
xchg
mov
ret
cld
icebp
lods
insl
xor
adc
out
cmpsl
ret
rclb
rolb
rorb
mov
or
cltd
fistps
ja
nop
dec
cltd
dec
icebp
mov
ret
int3
imul
out
dec
gs
xor
aam
sbb
pop
xchg
cltd
cmp
inc
outsl
das
dec
pop
jno
push
fdivrp
lcall
inc
popa
mov
xchg
je
divl
aam
pop
or
fsub
mov
hlt
mov
xchg
jle,pn
in
pop
jae
mov
test
shr
xor
inc
jg
fnstenv
stc
xchg
push
popf
andb
or
fwait
and
xchg
testl
flds
test
out
and
fistl
loopne
pop
xchg
cmpsl
pop
cmp
mov
lds
inc
iret
mov
xchg
aaa
jl
sbb
lods
cs
cmp
sub
sub
pop
fidivrl
cld
cwtl
jle
sbb
stos
sbbl
ds
dec
add
aam
cwtl
add
es
adc
mov
and
cli
or
inc
jge
cmp
inc
cld
fsub
jecxz
adc
addr16
cmc
pop
sti
inc
shll
xchg
mov
jo
leave
test
pop
lods
pop
mov
mov
mov
sar
add
fs
jle
adc
scas
mov
inc
inc
xchg
sub
ret
push
out
scas
out
stc
out
lahf
mull
or
dec
int3
outsl
inc
jnp
jne
sub
shll
jg
aaa
cli
lcall
or
cs
icebp
pop
ljmp
daa
rcrb
xlat
mov
pop
repnz
pop
jp
adc
adc
aas
and
push
imul
xor
leave
mov
fdivs
sbb
dec
mov
je
test
fdivrs
sbb
adc
aad
mov
arpl
aam
cmp
in
sub
mov
fwait
pop
push
cmpsl
push
xchg
nop
mov
fbstp
dec
insl
dec
pop
sbb
push
mov
rcr
jo
call
clc
mov
aam
mov
mov
jo
sbb
gs
imul
out
xor
mov
jle
pcmpgtd
out
ret
neg
sbb
pop
push
sbb
into
mov
es
fsts
push
out
stos
mov
ret
bound
test
or
cwtl
push
and
or
ss
jge
imul
sahf
xor
xor
or
xchg
sarl
mov
and
mov
push
fucomp
pop
xchg
pop
jp
fs
lods
not
pop
cmpb
sub
scas
popa
adc
lcall
jbe
mov
mov
fsubs
inc
cltd
lock
and
sarl
pop
pop
nop
cmp
xor
pop
mov
lret
insl
push
cli
roll
mov
enter
dec
fmulp
sub
inc
inc
scas
and
adc
loop
pop
jns
popf
cld
loopne
fdivl
pop
jecxz
adc
push
jmp
pop
xor
dec
aam
enter
int
test
dec
hlt
iret
sbb
adc
xchg
icebp
stos
cmp
cmpsl
pop
inc
mov
mov
cmp
cmp
pop
adc
inc
jl
sub
mov
add
repnz
mov
addr16
jmp
pop
mov
sar
and
fsubl
sahf
lea
mov
add
inc
andl
pop
scas
fadd
mov
enter
insl
add
aas
xor
daa
in
mov
bound
mov
mov
adc
in
jbe
fcomip
repnz
ss
xchg
cmpsl
mov
xor
out
cmpsl
push
lods
mov
jne
jnp
adc
pop
pop
sbb
xor
push
mov
cwtl
adc
sahf
xor
arpl
dec
cs
mov
inc
pop
shlb
rol
push
gs
negb
clc
and
sbb
lods
add
jecxz
jmp
sbb
imul
repnz
jge
mov
sbb
imul
ds
jge
push
in
subl
aas
shrl
inc
cmc
mov
dec
rclb
adc
sbb
pushf
fdivl
inc
add
cmc
xor
inc
adc
inc
ret
repz
loope
sbb
push
movsb
imul
fs
out
test
xchg
and
dec
aaa
or
scas
js
sahf
push
cmp
int
gs
arpl
aam
mov
jg
in
gs
and
pusha
push
mov
mov
out
push
push
fldl
test
xchg
xchg
add
mov
rcll
xchg
loopne
mov
int
mov
and
stos
jmp
push
icebp
aas
imul
addr16
push
mov
scas
pop
inc
lea
mov
cltd
ds
push
idivl
cmp
xchg
fistpll
ret
mov
dec
sbb
das
lret
inc
fisttps
cwtl
jl
inc
push
xor
adc
aaa
xchg
data16
call
lods
outsl
repz
shl
mov
ret
or
je
xor
push
int
dec
scas
jno
aaa
push
jo
test
xlat
mov
sbb
out
pop
jge
mov
data16
rorb
in
notl
popf
int3
loopne
sbb
dec
mov
or
cmpsl
jge
push
movsl
mov
fisttpl
out
or
xchg
ljmp
jns
mov
loope
rorb
cwtl
test
xchg
cli
pushf
or
fcompl
mov
in
into
sbb
push
leave
mov
cmpsb
cmpsl
mov
fdivrs
pop
out
pop
push
jmp
andl
inc
out
mov
pop
or
cmp
mov
cmp
push
pop
mov
sub
or
cltd
stos
jb
loopne
js
je
sbbl
lret
mov
push
call
mov
inc
pop
push
pop
test
mov
loopne
outsb
test
loop
popf
xor
dec
dec
add
push
mov
mov
fsubr
cld
cmp
aad
or
mov
xchg
mov
movsb
jo
out
adc
xchg
inc
dec
rcrl
sub
fidivs
xchg
xor
gs
mov
popf
push
mov
js
rcrb
sbb
dec
xor
aas
shll
movsl
cmp
inc
mov
push
inc
fwait
cmp
aam
jo
lds
lds
mov
mov
or
xor
pop
aam
mov
imull
sub
mov
jnp
insl
inc
fmull
and
lret
sti
jle
push
mov
fisubl
in
xor
cmpsl
insl
inc
call
adc
dec
dec
push
inc
fsts
outsb
pop
ficoml
test
in
sbb
adc
pop
icebp
and
sub
push
hlt
repz
xchg
add
imul
popf
add
dec
sbb
int3
std
xchg
xor
xchg
pop
inc
push
call
test
sysret
sahf
inc
xchg
pop
jo
mov
cmpsl
inc
ficompl
cmpb
fnstcw
movsb
sbb
notl
dec
dec
cmpsb
repz
pop
pop
or
into
dec
cltd
fidivl
outsl
lods
jmp
mov
popf
push
shll
fisubrs
iret
jle
mov
test
mov
or
jle
dec
dec
test
cmpsb
loop
mov
cmc
jge
jg
inc
cmp
orb
push
test
push
jb
mov
xchg
test
cmpsb
movsb
shll
aas
in
mul
orb
into
pop
lods
mov
fdivrl
mov
ljmp
es
jne
out
inc
xchg
mov
fisubrl
or
xchg
cmp
call
hlt
fdivl
or
insl
mov
dec
es
push
jae
scas
xchg
xor
and
test
lahf
add
mov
les
leave
jmp
push
sbb
or
push
jp
js
xor
xor
pop
push
mov
shlb
shrb
loopne
aaa
push
and
fdivs
cmp
mov
push
ret
and
xlat
pop
inc
dec
repnz
mov
push
cmp
addl
cwtl
pop
and
xchg
and
pop
or
out
cmp
dec
lods
repnz
sbb
xor
and
cltd
and
lcall
and
dec
jae
xchg
cs
xchg
and
jecxz
dec
pushf
xor
fsts
push
in
inc
aaa
stos
hlt
sbb
mov
stos
and
mov
sub
sub
cmc
adc
test
test
test
push
mov
or
rorl
ret
js
jecxz
insl
fwait
inc
pop
icebp
add
xor
in
inc
mov
imul
adc
inc
jns
add
xchg
push
sub
fsubs
lcall
push
je
int3
imul
jmp
dec
call
and
out
xchg
lea
inc
and
push
stos
and
adc
and
leave
std
sbbb
xchg
rorl
lock
xor
pusha
adc
call
shlb
imul
push
push
mov
jl
movsb
sahf
cmc
xchg
cmpsl
dec
popf
push
das
cli
sarl
push
xchg
pop
addr16
sti
daa
or
sub
dec
repnz
dec
add
jecxz
das
dec
and
adc
mov
jb
push
out
out
xchg
ja
push
mov
mov
and
xor
je
cld
inc
push
stos
pop
cld
inc
push
mov
ljmp
jne
jmp
jg
adc
fwait
repnz
rcl
test
outsl
inc
inc
mov
mov
xchg
add
pop
cli
imul
scas
loope
sbb
xchg
jge
and
leave
fwait
xor
pop
xor
dec
add
mov
add
idivl
mov
jns
fwait
cmp
leave
lcall
iret
push
stos
ja
sarl
sbb
cltd
xor
std
cmp
inc
push
or
nop
push
mov
xchg
cs
xor
fwait
mov
rcll
arpl
mov
in
push
dec
loop
xchg
aam
mov
insb
bound
out
js
xlat
loop
aad
lret
popa
dec
dec
test
imul
dec
pop
int3
mov
into
fmuls
or
xor
push
es
xchg
lds
mov
dec
push
nop
mov
data16
out
mov
orb
adc
sti
out
mov
add
add
xchg
pmaddwd
cmp
dec
jp
and
mov
sbb
mov
adc
call
dec
or
stos
pop
ret
in
jno
nop
jl
fcmovbe
in
sub
lret
fsubrs
out
lods
dec
sub
xchg
shll
adc
enter
inc
pop
hlt
js
int3
out
test
outsb
enter
push
mov
orb
lock
leave
rorb
jnp
sbb
cld
xor
xor
mov
fisubrl
lods
into
jb
mov
xlat
loop
mov
imul
lahf
sub
and
jmp
aaa
mov
shl
mov
jge
dec
push
pop
icebp
xchg
adc
jge
cmc
cmpsl
rep
add
test
andb
push
pushf
mov
sub
js
clc
cmp
or
add
iret
sbbl
test
jae
lahf
dec
loop
ret
adc
icebp
and
aaa
mov
push
xor
mov
mov
push
fdivrs
in
jmp
cmc
xchg
shlb
jecxz
repz
jge
lods
mov
cltd
popa
jns
jge
xchg
imul
cmp
test
aad
mov
ja
sub
movsb
icebp
lahf
imul
jne
and
cmp
sub
mov
pop
js
inc
mov
mov
lds
xchg
adc
jg
sarb
loope
loope
fwait
vpor
cmp
pop
jno
xchg
cli
pop
cmpsl
and
rclb
push
out
test
jno
test
les
dec
orl
xor
push
aas
xor
push
int3
dec
fisttpl
stos
addr16
repz
jge
and
imul
mov
mov
sub
es
test
call
jmp
xchg
push
sub
sub
mov
in
and
fstpt
cmpsb
push
orl
add
out
dec
mov
lods
call
cmp
xchg
or
jp
popa
pop
jle
repz
js
pop
int3
pop
pop
movb
inc
mov
into
andb
jbe
jle
push
mov
cmpsl
ret
mov
mov
and
lret
adc
popa
push
and
xor
mov
add
sbb
icebp
int
test
sti
pop
imul
xchg
fidivs
fmul
loopne
adc
pop
mov
mov
cmc
outsl
jge
mov
xor
repnz
in
test
lods
adc
or
mov
push
sub
mov
sahf
clc
mov
hlt
push
and
mov
ror
pop
outsl
aam
popa
add
insl
sbb
adc
sub
dec
je
shrb
lcall
adc
rclb
ja
jae
testl
lods
add
icebp
mov
fldenv
inc
and
xchg
cs
pop
xchg
mov
gs
push
pop
mov
mov
es
pusha
jecxz
adc
aaa
push
cmp
bound
and
out
int
dec
fldl
sub
clc
jg
das
fists
in
pop
dec
ficomps
out
mov
in
pop
ljmp
adc
loop
pop
repnz
pop
mov
pop
cmp
shlb
xchg
inc
add
es
jp
loopne
mov
add
dec
cli
hlt
inc
lods
push
movsl
scas
xor
arpl
sarb
jnp
popf
dec
shl
test
test
dec
cmpsb
add
pop
push
repnz
ds
call
frstor
ja
add
push
mov
xor
and
fstl
loopne
adc
ret
mov
adc
xchg
aas
jmp
icebp
shr
mov
into
scas
out
adcb
xor
data16
loope
lcall
jns
lds
shlb
push
mov
fimull
sbb
dec
mov
repz
jnp
adcl
push
and
pop
fistpl
int3
inc
decb
and
fs
insl
negl
enter
ds
aas
lret
dec
mov
lahf
into
ss
arpl
popf
pushf
into
pop
cmp
or
jnp
scas
mov
ret
ljmp
mov
cmpsl
out
pop
lods
xor
pusha
mov
ljmp
sbb
dec
dec
pushf
pop
jb
imul
lods
or
push
ficoms
fstpt
adc
or
lret
lds
std
xchg
insl
cmpsb
mov
inc
insb
xlat
shr
mov
call
loope
push
push
adc
movsl
icebp
imul
scas
addr16
inc
mov
iret
call
ret
sub
cltd
cmpsl
movsb
pop
add
jne
nop
iret
pop
sbb
rclb
and
je
mov
cmpsl
cmp
in
mov
shlb
xchg
sbbb
mov
push
out
or
iret
push
shlb
insb
sbb
xor
mov
jno
jbe
adc
or
int3
je
and
in
jns
pop
dec
cmp
fwait
xchg
jae
dec
test
stos
sub
pushf
lcall
mov
repz
lret
aam
in
push
bnd
pop
fdivrs
push
into
enter
sarb
cmp
sub
and
das
dec
lods
outsl
mov
data16
loope
test
dec
sbb
xchg
js
sahf
cs
pusha
add
push
call
out
and
mov
popa
and
push
fwait
out
add
or
adc
pop
test
dec
loope
jle
push
jne
jnp
call
stos
mov
mov
xor
fldenv
adc
mov
mov
pop
jg
outsl
add
add
insl
inc
aam
dec
xor
mov
xchg
xor
loope
hlt
loop
test
mov
icebp
lods
and
stos
mov
or
lock
jns
pop
pop
cs
jp
mov
leave
xchg
lret
push
mov
pop
ret
test
mov
cmp
enter
sbb
xchg
stc
fnsave
and
push
adc
push
pusha
mov
arpl
push
mov
pop
insl
push
lret
or
mov
jo
in
fmull
pop
fdivrl
sahf
test
inc
and
and
add
bound
xor
cli
adc
lods
jle
sub
dec
fstpt
xor
test
int
lcall
lcall
mov
sbb
sbb
mov
jns
daa
lcall
cmp
cmpsb
mov
pop
les
xchg
dec
mov
fcmovnbe
lods
nop
or
pusha
mov
dec
jecxz
or
add
gs
xchg
insb
in
dec
jbe
stos
stos
lret
ficompl
and
pop
scas
scas
xorl
or
mov
jae
inc
sub
or
xchg
mov
loop
rep
mov
pop
stc
je
sahf
jmp
xchg
loop
pop
mov
and
push
mov
cmp
mov
jno
fisttpl
inc
push
adc
mov
shl
out
imul
je
lret
scas
in
sbb
shlb
mov
je
fiaddl
out
sbb
adc
loopne
cmp
pushf
aad
iret
repz
jecxz
push
dec
int3
popa
clc
mov
data16
mov
fists
test
orb
repz
cwtl
popf
pop
mov
mov
pop
jle
pop
outsl
daa
mov
loope
fsubrs
and
mov
jbe
shll
or
adc
int3
fs
mov
push
jp
ja
test
xchg
adc
push
bound
andb
cltd
xchg
dec
nop
cmp
loopne
jle
andl
andl
shrb
shll
pop
pop
or
icebp
inc
out
call
testl
lds
and
faddl
pop
xor
bnd
sub
enter
dec
sub
sbb
xor
out
test
fidivs
dec
clc
inc
lea
cld
lret
clc
mov
test
lods
sbbb
cmpsb
jge
lods
lods
pushf
addr16
int
xor
fwait
js
leave
cmp
scas
popa
mov
mov
jbe
jo
dec
push
loopne
das
cmp
subb
jecxz
add
xor
push
push
cwtl
xor
fadd
pop
or
jg
out
dec
in
jge
test
insl
pop
add
push
lds
stos
loop
aad
fadds
bound
test
xchg
insb
add
or
cmp
pop
fists
std
loope
es
popf
xchg
les
jecxz
lods
in
mov
jecxz
mov
out
mov
or
mov
imul
push
cltd
xchg
adc
icebp
test
cmp
jnp
int3
cmp
or
jmp
cmpsl
aaa
iret
clc
pop
andb
inc
cmp
int3
or
xchg
out
and
fucomip
xor
cmp
scas
cmp
dec
mov
out
mov
mov
push
mov
push
shrl
fucomi
clc
lret
int
xor
cmpsb
rolb
xchg
andl
push
push
fsts
jns
stos
pop
cmpsl
ds
pop
enter
lds
in
pop
xlat
pop
in
ret
fistps
jle
imul
pop
out
sbb
movsb
cmp
in
insb
jg
and
push
popf
out
sti
mov
push
sbb
sub
das
mov
jns
repnz
insl
fists
addl
stos
dec
fld
gs
subb
and
cwtl
imul
mov
cmovl
jno
sbb
mov
mov
xchg
xor
pop
popf
dec
mov
rcll
xor
and
push
lods
adc
in
add
cs
push
lods
sub
inc
mov
pop
out
or
loope
cwtl
stos
push
mov
and
and
jbe
fidivrl
mov
ficoml
ljmp
lret
mov
xor
andl
dec
dec
and
mov
add
fprem1
loope
inc
push
out
mov
mov
int3
mov
fisttpll
mov
or
cltd
mov
into
gs
mov
sbb
ret
ficoms
add
stc
jno
mov
push
pop
and
arpl
fimull
and
and
inc
and
fidivs
addl
ss
out
loopne
ja
lea
sahf
std
mov
jno
ljmp
stc
test
dec
lods
adc
fcmovu
scas
out
stos
xor
sarl
sbb
sbb
jnp
imul
in
pop
adc
mov
or
ror
sub
pop
fnstenv
sbb
mov
cmp
xor
jno
es
fbstp
mov
pop
xor
mov
in
ret
add
lret
test
jnp
or
out
iret
scas
xor
ret
or
pushf
shll
in
pop
leave
and
leave
dec
gs
pop
test
out
xor
inc
push
mov
stos
mov
xor
cli
jbe
pop
add
mov
mov
mov
pop
ljmp
mov
fldl
out
sub
out
lea
jge
push
inc
push
sub
add
sahf
or
scas
cmp
mov
das
mov
sbb
push
movsb
inc
pop
daa
jmp
adc
push
imul
loopne
ds
sub
and
addr16
movsb
mov
es
imul
repnz
aad
and
push
jp
push
and
inc
pusha
mov
dec
and
out
out
rcrl
adc
sbb
les
pop
repnz
add
cmp
cmp
cmp
adc
and
adc
jo
sti
jge
cmp
jecxz
and
dec
in
dec
cmp
inc
aaa
imul
cmp
adc
adc
lret
mov
aad
int3
arpl
jg
ret
jg
in
jle
mov
mov
scas
xchg
adc
adcb
mov
movq
xchg
imul
aam
in
loope
and
sub
aad
loope
rcll
orb
sbb
aas
aad
andl
adc
les
mov
push
push
and
inc
cmp
sub
dec
mov
mov
cmpsl
and
or
xor
shlb
xor
or
adc
cmp
dec
add
dec
pusha
mov
jbe
fldenv
daa
jbe
xchg
push
shr
inc
fsubs
repnz
cmpsb
out
adc
lods
ja
in
into
stos
cld
jbe
mulb
add
out
cmp
imul
shl
adc
clc
mov
test
fisubrs
dec
mov
jle
mov
xchg
imul
inc
mov
outsl
mov
mov
push
sub
sti
ja
lcall
mov
mov
fs
inc
pusha
nop
leave
mov
fcoml
xchg
cmp
fcomip
cmp
xchg
sbbb
add
jge
fnstenv
cltd
jg
lods
stc
inc
ficoml
push
leave
adc
fwait
mov
out
lock
adc
ret
cmpsb
lods
imul
add
addr16
cmp
roll
shr
sbb
xlat
outsb
sbb
jnp
in
cmpsl
cmpsl
iret
repz
jmp
jecxz
inc
adc
in
push
xor
inc
scas
rorl
add
cli
inc
lret
cmp
testl
cmp
push
aam
mov
and
loopne
and
and
jae
xor
push
test
mov
ljmp
xor
adc
test
jb
sub
ds
arpl
push
test
into
mov
ficoml
sub
stos
repnz
jle
or
dec
mov
shlb
loope
mov
xchg
lds
iret
movb
shll
int3
inc
enter
and
pop
imul
mov
lret
jg
add
mov
adc
int3
out
ja
inc
mov
jae
sbb
push
sub
push
add
repz
jge
dec
push
mov
dec
pop
cli
pop
lods
movsb
rorl
dec
cld
push
inc
jle
sbb
arpl
negl
xchg
xor
xchg
xchg
sbb
lods
jnp
mov
push
aas
dec
xlat
ret
js
mov
cmp
mov
jg
into
pop
jb
sbb
pop
push
cmp
sbbl
add
leave
add
push
add
push
inc
jle
jmp
jae
mov
and
sbb
sbb
push
mov
add
xchg
mov
clc
insb
enter
lea
jl
jl
mov
fdiv
mov
ljmp
mov
lret
jl
sbb
jle
mov
mov
ret
mov
and
cmp
xor
sbb
mov
add
fnsave
pop
mov
movsl
and
adc
inc
lods
or
mov
adc
lods
and
xchg
je
sub
mov
movsl
add
daa
jno
sbb
cmp
jo
repz
mov
cs
add
mov
mov
test
pop
and
jnp
pop
cld
pop
rcrb
cmp
sub
xchg
test
lods
andl
es
fcomip
jae
xchg
les
xor
push
add
enter
ret
fnstsw
xor
xor
fidivrs
std
push
in
into
sub
pop
sub
cmp
andb
shlb
scas
adc
loopne
imul
lods
pop
jmp
or
xchg
sub
inc
sahf
mov
mov
push
mov
enter
push
push
mov
loope
and
xlat
int
hlt
imul
popf
aad
push
xor
fdivrl
jbe
fldenv
adc
push
out
cld
imull
movsb
sub
int
pop
clc
dec
scas
fdivrs
hlt
cltd
jecxz
aam
mov
and
and
scas
mov
shll
aam
movsb
sbb
sarb
sahf
dec
movsl
jecxz
push
fmulp
add
pusha
int3
sbb
mov
xchg
pop
stc
xor
push
mov
addr16
test
sub
jb
fldenv
dec
xchg
cli
cld
dec
cli
dec
jecxz
iret
les
cmc
dec
xor
enter
xor
movsl
cmp
popf
adc
cwtl
mov
push
or
push
push
and
flds
addl
jp
and
mov
or
imul
shl
pop
push
lret
lret
movsb
aaa
in
sub
loope
mov
enter
cmp
inc
push
cmp
inc
cmp
pop
xor
hlt
mov
or
pop
jbe
ljmp
sbb
cmp
gs
lahf
mov
mov
loope
pusha
loop
stos
adc
scas
sbb
test
icebp
test
mov
insl
adc
jb
xor
lret
jg
push
jmp
push
mov
sarb
shll
movsl
mov
and
xchg
sbb
mov
push
lcall
push
test
in
adcb
sub
xchg
enter
ds
imul
push
das
movsl
push
clc
shl
pop
sbb
popf
pop
clc
mov
xor
sbb
inc
mov
mov
jle
and
xor
idivb
adc
lret
jge
and
stc
out
sbb
xor
mov
jp
xor
mov
rcrl
cmpsl
imul
mov
jl
xor
inc
adc
cmp
nop
push
pop
push
jle
loope
mov
jno
fstps
out
lods
mov
test
test
cs
and
dec
in
aas
add
popf
imulb
rorl
jns
les
add
mov
pop
adc
pop
and
lods
mov
fstp
cli
pushf
push
inc
movsl
dec
xchg
push
cmpsb
sbb
shrl
cmp
mov
fldenv
cli
mov
push
or
outsb
and
pop
push
fisubs
jge
xor
into
hlt
adc
pop
loop
jno
add
mov
arpl
mov
outsl
mov
fistl
into
loopne
push
mov
sub
push
add
adc
in
je
cli
test
push
or
sbbl
int
mov
pop
mov
dec
fidivl
insb
out
jp
andl
push
xor
rsqrtps
cmpsb
push
test
lds
into
dec
cmp
icebp
jle
inc
lds
loop
and
mov
ja
jo
arpl
mov
jp
mov
and
or
xor
in
in
sbb
dec
out
test
sub
dec
inc
jnp
lret
and
adc
das
xor
idiv
fstsw
iret
xor
enter
and
cmp
mov
lret
sub
rol
bnd
inc
out
int
ss
xchg
fisttpll
inc
pusha
adc
es
xchg
ret
push
mov
lret
xchg
sub
add
adcl
add
mov
das
and
adc
test
cmpsl
das
cmp
inc
dec
dec
pop
lahf
imull
add
outsb
test
cwtl
mov
in
cwtl
inc
mov
add
sbb
inc
mov
movsb
enter
jle
sbb
sbbb
xchg
lcall
hlt
call
lock
dec
dec
scas
dec
sub
repnz
in
lods
divb
sub
je
jge
adc
sbb
push
xchg
scas
popf
outsb
jl
ret
fistpll
mov
adc
sub
push
lods
xchg
enter
lret
pop
inc
push
cmpsb
ds
pop
xchg
adc
jge
push
out
sub
popf
mov
xchg
cltd
lret
loop
movsb
pop
std
adc
in
mov
fnstenv
jecxz
lret
jae
rdpmc
dec
inc
push
stc
les
or
cmp
mov
jbe
lock
aad
idivl
pop
mov
iret
out
push
lds
gs
sbb
push
out
push
jne
cs
scas
xchg
mov
enter
sbb
lods
inc
fistpl
pop
aaa
scas
inc
imul
xchg
adc
push
ljmp
mov
out
adc
dec
mov
push
or
mov
sbb
cmp
pminub
fwait
ret
dec
dec
jo
jns
jne
cmp
dec
and
insl
ret
in
sub
push
fsubl
aad
push
or
cmp
and
sub
outsl
sbb
test
loope
movsl
push
stos
pop
mov
lock
std
xchg
pushf
mov
mov
sahf
push
inc
mov
mov
mov
addr16
pop
cltd
cmpsb
dec
in
repnz
gs
pop
lret
pop
pop
shlb
subb
repnz
adc
lret
dec
repz
lods
lret
jle
jmp
add
seta
cmp
cli
pushf
cmp
mov
mov
loopne
in
push
fldl
and
xchg
pop
and
pop
hlt
and
dec
add
sub
sahf
shl
pop
shll
fimuls
cmpl
dec
xchg
inc
mov
lock
insb
and
mov
fwait
jb
std
inc
or
mov
scas
pop
xchg
js
jge
cwtl
cltd
sbb
mov
xlat
xor
mov
jae
push
movsl
notl
mov
fsubrp
in
into
mov
dec
push
mov
or
cmp
xor
loop
cmovg
jg
lods
or
pusha
push
test
jmp
jbe
xchg
push
push
out
movsl
cwtl
push
and
xchg
sub
dec
and
mov
fs
ret
lret
in
jmp
add
movsb
hlt
mov
jmp
sub
push
cltd
or
adc
ss
push
pushl
ds
xchg
xor
popl
stos
mov
adc
jns
xchg
out
in
pop
mov
repz
clc
lock
psubq
ret
pop
sbb
pushf
hlt
adc
imul
mov
mov
jae
add
sub
enter
insl
je
mov
push
xchg
shrb
push
loopne
and
xchg
mov
stos
sahf
es
push
xchg
jns
aam
mov
cmp
pop
loopne
mov
pop
jbe
and
or
cmp
xor
jmp
mov
mov
or
pop
sub
sti
push
mov
inc
or
lds
dec
dec
jmp
fs
call
out
fwait
insb
enter
inc
pusha
clc
imul
in
cmp
stos
ljmp
divb
fwait
mov
icebp
nop
jbe
fs
shlb
mov
cmp
sbb
push
jmp
test
xlat
daa
cmp
mov
cmp
dec
cmpsb
mov
fs
sub
ss
dec
arpl
test
sbb
pop
mov
xor
mov
or
jbe
mov
push
pop
es
aam
icebp
inc
ret
stos
cltd
bound
push
adc
out
push
mov
ds
inc
loope
mov
adcb
in
jmp
fbstp
and
arpl
rcrb
push
pop
or
enter
stos
hlt
mov
sbb
xchg
imul
mov
scas
ret
jb
jne
scas
dec
imul
add
mov
das
call
push
pop
jg
inc
sahf
fwait
mov
iret
fnstenv
mov
out
lret
jbe
lods
ljmp
sbb
subb
enter
lds
xchg
xchg
out
or
sub
mov
mov
cmp
and
xor
nop
data16
bndldx
or
pop
pop
fwait
push
inc
repnz
in
shl
test
and
cmpsl
insl
test
fwait
xlat
mov
pop
pop
mov
pop
sbb
test
loopne
or
pop
in
mov
push
pop
rcl
xchg
sarb
int
outsl
ret
sbbb
lret
sub
push
mov
jnp
imul
dec
xor
mov
cltd
sahf
call
dec
shlb
dec
xchg
pop
lea
xor
sahf
cs
pushl
xor
loope
push
or
movsl
sub
dec
jne
clc
ss
xchg
shl
lcall
pop
gs
pop
fsts
push
aas
out
inc
mov
pop
test
add
pop
cmp
out
mov
aas
loop
pop
mov
cs
loop
cmp
fwait
mov
cmp
or
sbb
and
in
mov
in
push
outsl
es
scas
xchg
and
push
sbb
nop
jb
ret
and
mov
stc
lret
cmp
fcmovnb
jnp
push
mov
sar
pop
mov
sbb
mov
sahf
xchg
xorb
xchg
mov
lret
mov
mov
pop
inc
bound
daa
in
in
push
outsl
mov
sub
inc
outsl
push
dec
shll
out
and
fldl
mov
or
sub
and
gs
insb
movl
insb
xor
test
je
adc
movsb
dec
jl
pop
xor
daa
out
stos
aam
lfs
fcmovnbe
or
aaa
pop
fwait
pop
shll
insl
fistpll
mov
out
sti
xor
mov
je
dec
push
mov
and
cli
or
ss
mov
fwait
sti
fnstenv
clc
shrb
inc
push
sbb
mov
add
xor
mov
into
jmp
outsb
rcrl
mov
add
nop
popf
add
insb
or
jecxz
insb
cltd
or
cwtl
jno
lret
int3
lret
xlat
les
cwtl
enter
sbb
mov
adc
adc
mov
dec
dec
mov
mov
adc
adc
jmp
push
outsb
addr16
bound
sub
xor
dec
inc
je
jb
sub
sbb
dec
mov
ja
fcomps
outsl
test
mov
imul
fs
stos
and
imull
insb
lahf
in
movsl
inc
out
jecxz
mov
insb
subb
sahf
adc
mov
out
jnp
ljmp
inc
imul
fdivl
pop
aas
mov
aad
js
popa
push
cmp
cltd
xor
sbb
jno
sub
mov
ja
mov
js
clc
rcrb
push
hlt
lcall
sahf
lret
push
mov
rclb
popf
cld
inc
cmc
shrl
fiaddl
mov
pop
sub
scas
mov
es
xchg
xchg
jns
fiaddl
imul
sub
push
cmpsb
pop
movsb
xchg
push
mov
adcb
push
in
stc
cmpsl
outsl
add
fwait
cltd
lock
add
pop
mov
loope
nop
mov
add
faddp
and
cmp
lods
push
lods
lahf
inc
push
test
in
sbb
inc
mov
mov
sbb
pop
dec
ror
faddl
inc
sbb
push
mull
mov
mov
xor
cmp
cmp
xchg
sub
sbb
sbb
in
test
xchg
xor
test
xchg
fnstcw
pushf
add
in
xchg
rcrl
dec
je
scas
in
pushf
sbbb
adc
out
iret
js
jge
add
lods
push
pop
testl
xchg
jle
insl
mov
pushf
sbb
jne
jo
inc
and
loope
jbe
fdivrs
jb
aas
mov
pop
cmp
add
xchg
xor
mov
dec
and
arpl
popf
dec
add
pop
shr
nop
jbe
mov
xor
add
push
mov
ret
add
sub
pop
xchg
mov
inc
mov
sti
sarl
and
jnp
dec
pop
icebp
pushf
jnp
dec
jecxz
mov
sub
scas
ds
in
jno
mov
rcl
push
repnz
push
cmp
inc
fmuls
scas
fidivl
xorl
mov
mov
add
mov
nop
daa
xor
into
movsl
mov
add
aad
xor
jmp
jmp
sub
dec
fbld
jg
dec
and
or
xor
inc
popf
arpl
cmp
cli
push
mov
xchg
in
rolb
pop
lock
cmpsb
push
out
pop
loope
movsb
into
orb
pushf
mov
xlat
outsb
imul
mov
std
mov
jno
jne
test
rcrb
inc
leave
mov
je
aam
mov
fidivs
cwtl
data16
ds
push
push
add
dec
sbb
outsl
stos
jecxz
sahf
or
mov
mov
pop
and
out
in
add
lcall
adc
xor
in
sub
dec
mov
cmpsl
sbb
mov
test
jecxz
and
inc
pop
inc
pop
mov
out
sbb
mov
jmp
or
inc
enter
sub
popf
cltd
mov
jae
jge
fs
js
imul
lahf
jns
add
xchg
xor
mov
and
sbb
dec
lock
adc
ret
movsl
cmp
dec
or
jbe
inc
xchg
cmc
jae
mov
stos
imul
test
sahf
sbb
outsb
or
jl
push
das
jmp
in
adcl
fwait
fwait
add
lret
adc
mov
loopne
add
out
jmp
push
and
sbb
das
jmp
popf
add
popf
stos
sti
imul
ja
xchg
out
fimull
fmull
outsl
aam
mov
inc
pop
and
xchg
and
test
mov
pushf
adc
lcall
and
add
sbb
fcompl
pop
mov
in
sbbl
fnstcw
mov
repnz
push
push
xchg
inc
test
arpl
adc
stos
inc
xorl
cmp
notl
into
ret
divb
xchg
jns
imul
dec
sbb
pop
pop
or
data16
testl
outsb
lcall
rcr
sub
or
lods
cli
and
inc
cmp
xchg
cld
aam
enter
pop
sub
mov
lahf
lods
lahf
rcrl
push
fs
mov
adcl
inc
pop
roll
nop
outsl
mov
mov
stos
rclb
rolb
int
pop
imul
sbbb
int3
sbb
add
pop
jle
sahf
push
data16
xor
dec
mov
push
fdivs
jae
xchg
xchg
bound
test
push
cs
shll
icebp
insb
or
or
sbb
outsl
ret
mov
push
xchg
gs
cmpb
ljmp
shll
enter
xchg
xor
dec
sbb
jne
lret
scas
xor
lock
iret
popa
mov
jbe
jno
or
inc
cmp
je
xchg
js
pop
outsb
ja
outsl
jnp
je
cmp
testb
not
jg
mov
mov
cli
inc
loop
cmp
dec
mov
in
pop
les
adc
push
pop
das
in
scas
pop
jb
mov
in
sbb
pop
int3
in
andl
cld
inc
adc
lret
sub
adc
xchg
test
loop
mov
fimuls
push
xor
and
in
xchg
jno
hlt
es
push
frndint
add
dec
mov
add
or
jnp
ja
pop
dec
pop
xchg
push
lahf
xor
cmpsb
sarb
leave
dec
mov
sub
cmpsb
sub
fidivrs
mov
fs
imul
or
pop
xchg
sub
das
lcall
cltd
cmpsl
inc
xor
xor
test
pop
push
jnp
test
into
fs
je
scas
mov
outsb
cwtl
jl
lret
cmp
out
jg
push
add
sub
rcll
sub
jo
mov
xchg
xor
jb
jg
mov
mov
push
mov
mov
das
lods
mov
mov
push
arpl
xchg
mov
imul
test
jnp
xor
cwtl
mov
or
test
cmp
add
sbb
cld
push
sub
mov
xchg
pushf
xor
call
sub
cmp
inc
jbe
xor
cmp
mov
nop
rcll
sbb
jle
ss
data16
pop
mov
mov
xchg
xchg
jge
lods
ss
mov
or
cs
adcb
scas
jno
lcall
outsb
popa
clc
popf
ret
int
sbb
es
sahf
add
nop
cltd
lods
and
aas
in
add
adcb
test
mov
sbb
push
jno
cmp
and
sti
jle
imull
out
push
sbb
lcall
sahf
ss
xlat
in
dec
popa
mov
sub
xlat
or
aam
add
mov
sbb
adc
mov
push
pop
jmp
mov
xchg
cs
imul
decl
icebp
adc
push
adc
fistps
lcall
cmpsb
lock
push
push
cmp
inc
add
out
or
scas
stc
popf
jns
imul
int
decb
and
inc
rcll
push
aas
into
outsl
dec
jae
jg
mov
cmpxchg
mov
sti
es
js
sub
mov
sub
out
and
pop
lcall
cmpsb
cmp
daa
adc
mov
int3
dec
aam
jg
pop
and
and
testb
lock
inc
pushf
cmp
shr
test
or
lds
mov
xor
sarb
jmp
and
sbb
ret
pop
ret
pop
mov
iret
pushf
out
rolb
push
in
fnsave
or
loope
les
iret
mov
nop
ror
out
out
pop
ja
jle
adc
xor
out
mov
mov
scas
sbb
adc
xor
push
scas
fnsave
add
movsl
movb
and
push
fadds
push
aaa
cmp
out
je
shrl
or
jle
int3
pop
clc
cmp
push
test
dec
dec
ds
lods
movsl
adc
xchg
inc
inc
leave
aad
adc
mov
and
fwait
into
mov
mov
cmp
addr16
inc
sti
jo
push
loopne
mov
imul
aas
dec
in
push
sbbb
popf
ljmp
jne
xchg
addr16
jo
and
sub
sbbl
or
xchg
lahf
push
repz
dec
mov
jmp
ds
inc
sbb
xchg
xchg
aas
ss
lock
pop
inc
xchg
ljmp
dec
cmp
imul
push
add
imul
lods
xor
lods
jbe
xchg
cmp
xchg
add
or
jns
pop
jb
mov
clc
int
dec
in
sub
mov
out
popa
sbb
mov
add
imul
adc
mov
shrl
in
xor
out
mov
insl
add
xchg
sub
mov
push
aam
xchg
addr16
and
shrb
lea
sbb
out
sub
incl
sarl
fldenv
mov
popa
push
outsl
cmp
mov
testb
pop
imul
adc
mov
push
xchg
dec
mov
pop
or
rcrb
inc
daa
jle
fcomps
mov
xor
and
lock
and
repz
mov
daa
stos
call
leave
repnz
pop
dec
inc
dec
jge
mov
and
xchg
or
insl
jl
pop
sahf
or
pusha
in
mov
mov
xchg
dec
cmp
and
and
mov
pop
or
adc
sub
scas
add
dec
int
outsl
lock
mov
pop
sarl
mov
dec
dec
lcall
pop
dec
loope
lahf
fwait
jo
fisubs
dec
push
scas
mov
push
hlt
adc
dec
xchg
outsl
add
call
mov
mov
aaa
dec
lret
mov
divl
mov
sbb
jle
pop
test
mov
mov
pusha
fmulp
imul
mov
sahf
outsb
inc
sub
push
pop
mov
cmpb
xor
mov
add
sbb
imul
inc
ja
cmp
outsl
enter
and
fcmove
sti
or
stos
or
pusha
cmp
push
insb
add
cmp
fmull
jb
push
aam
outsl
in
add
rolb
add
mov
inc
inc
mov
jns
add
ficoml
mov
push
dec
mov
loope
jl
fnsave
pop
or
sti
jbe
push
rep
je
jmp
loopne
mov
int
xchg
dec
mul
mov
cli
outsb
pop
out
lea
call
test
fsubl
mov
jo
sbb
or
xchg
push
xor
cmpsl
add
push
scas
mov
pop
outsl
jnp
inc
fcmove
sub
push
sbb
cmp
popf
push
jge
addr16
sbb
lds
push
inc
cwtl
hlt
push
lret
push
jno
pop
cwtl
test
int
sub
loop
pop
dec
lds
push
mov
sub
test
and
push
jge
mov
cmp
movsb
fnstcw
xor
sti
in
cli
and
inc
out
daa
jbe
push
in
insl
push
ret
or
mov
loopne
sbb
sub
outsb
lods
jnp
negl
int
sti
jbe
imul
dec
std
or
fyl2xp1
fyl2xp1
je
in
mov
inc
notl
push
rclb
int
sub
outsl
loopne
sub
imul
and
call
sbb
jb
dec
mov
rcr
xor
dec
cmp
int3
and
pop
adc
pop
cmpsb
xor
inc
loopne
cld
scas
fnstenv
idivb
adc
scas
mov
add
push
mov
shlb
add
pop
lret
push
mov
cmp
add
and
mov
or
inc
mov
mov
rorb
mov
out
mov
sbb
test
sbb
inc
fbstp
ficoml
mov
mov
pop
adc
test
dec
mov
data16
or
nop
and
iret
fistl
cmp
fsubrs
inc
inc
fildl
mulb
mov
mov
add
adcb
les
filds
sti
mov
jo
arpl
inc
fdivl
and
fsubr
and
out
pop
dec
pusha
inc
dec
mov
mov
aam
test
es
jecxz
popa
pop
ljmp
mov
inc
in
mov
pop
mov
dec
loopne
fsubs
in
fcmovu
into
pop
stos
leave
js
pop
cmp
leave
push
imul
std
or
pop
mov
ret
mov
popa
jg
inc
sub
lods
mov
repnz
mov
inc
inc
xchg
push
xchg
add
aas
lahf
lods
popa
or
movsl
cmp
adc
leave
sbb
cmp
xor
push
nop
push
movsb
dec
pop
cmp
mov
jl
dec
loope
imul
xlat
push
fstpt
mov
add
inc
sbb
aaa
mov
dec
dec
div
xor
fsubs
jg
gs
push
jmp
jg
mov
and
mov
cmc
stos
aas
shr
test
stos
xchg
push
jne
and
shlb
nop
xchg
lret
les
and
call
cld
inc
std
jmp
pop
popa
xorl
aam
rcl
pop
add
cltd
flds
movsl
hlt
dec
insl
push
test
imul
dec
jae
mov
pop
xor
adc
leave
inc
mov
adc
and
movl
lea
push
jb
repnz
xlat
sub
xor
mov
cli
fwait
mov
xor
popf
pop
and
sub
pushf
sbb
call
dec
cli
adc
rol
lcall
pop
aas
ljmp
call
push
xor
lods
jmp
std
push
sahf
mov
add
mov
ds
sahf
mov
lahf
stos
mov
mov
es
push
mov
mov
incl
fnsave
mov
iret
push
mov
mov
xrelease
and
pop
jmp
xchg
and
cwtl
out
or
xchg
xchg
dec
mov
jo
push
loope
dec
add
dec
stos
dec
jecxz
test
lods
inc
adc
mov
dec
test
xor
xchg
subl
fadds
sbb
xor
enter
push
outsb
or
push
sbb
xor
inc
out
stos
jg
push
mov
xor
xor
sub
out
bound
mov
gs
icebp
xchg
sub
ljmp
cmp
nop
popf
and
xor
or
jae
jno
out
outsb
scas
fucomp
loopne
mov
mov
ss
stos
cmc
loope
int
mov
leave
testb
scas
and
jecxz
dec
jne
jge
adc
sbb
arpl
out
int
mov
lods
outsl
adc
xor
cmpl
adc
imul
movsl
js
popf
jge
xchg
jns
jp
mov
jp
or
add
movsb
push
inc
call
add
mov
cmpsl
in
adc
jle
jbe
mov
sub
xchg
jg
daa
ljmp
andl
mov
das
cmpsb
out
fwait
xor
popf
mov
lret
hlt
mov
jecxz
in
pop
mov
push
repnz
cmp
jns
add
pusha
fisubs
inc
gs
sbb
pop
dec
loopne
cmp
push
adc
pop
pop
dec
cwtl
in
fbld
adc
sbb
in
push
lea
pop
shll
fstpl
call
fnstcw
push
sub
dec
sub
mov
aam
scas
jns
aam
mov
push
xchg
dec
adc
cmpsb
data16
and
cld
pop
and
sub
inc
mov
cmpsl
and
or
push
jg
jnp
clc
sbb
mov
les
cld
jle
jecxz
dec
xchg
sbb
ret
shlb
push
mov
push
mov
les
aaa
push
jno
push
movsl
mov
and
add
inc
adc
xorb
dec
loopne
and
das
out
inc
int
mov
cmp
inc
mov
add
xchg
inc
lods
adc
mov
dec
mov
out
adc
and
xor
bound
xor
add
add
fs
jno
popa
xchg
jns
add
cmp
jge
ja
arpl
cmp
and
repnz
fidivs
popf
sub
dec
inc
pop
outsb
sub
push
cmc
aas
outsb
aam
pop
cmp
sub
insl
push
ficoms
out
add
push
shll
mov
mov
jmp
dec
mov
insb
dec
jecxz
xchg
lea
outsb
fdivrp
leave
popa
les
jno
add
shr
mov
stos
add
cmp
adcl
or
xchg
cli
or
test
iret
add
push
orl
je
shll
mov
ret
jno
loop
mov
cmp
mov
fcoml
test
mov
outsb
test
popa
fimull
pop
fsubrl
jae
sub
lret
jb
data16
jne
mov
rorb
lods
dec
stos
and
icebp
inc
pop
lret
mov
fistpll
or
popf
pushf
imul
xchg
pop
jo
pop
and
sbb
mov
jle
inc
test
xor
dec
loopne
adc
outsl
int
sub
loope
pop
jle
add
add
jl
xchg
lret
mov
pop
aas
fisubrs
int3
sbb
mov
xchg
push
mov
sahf
imul
call
loop
pop
xor
mov
ret
jl
xor
fs
cmp
subl
xor
cmp
push
shrb
fnstenv
es
push
push
ja
aas
test
ret
in
popa
enter
js
xor
pop
mov
call
add
and
cli
xor
push
aam
jp
out
ljmp
mov
push
das
stos
out
das
inc
scas
call
aad
and
aam
cld
push
test
ficoms
mov
adc
fadds
xchg
cld
add
xor
jmp
push
sbb
fs
mov
test
das
mov
pop
mov
aam
push
fdivr
loop
test
sbb
lahf
mov
outsl
in
or
sbb
add
push
mov
jg
or
jns
in
push
jge
pop
xchg
aas
arpl
lret
pop
pusha
cmc
mov
sbb
and
sbb
xchg
mov
adc
in
push
mov
scas
mov
sarl
mov
jae
imull
sbb
dec
lret
lds
pop
xlat
sbb
and
cs
jl
stc
sub
adc
mov
add
pop
jmp
and
cli
lods
add
inc
inc
cli
mov
fisttpl
fildl
leave
pusha
imul
shrb
mov
out
pop
mov
ficomps
clc
lcall
in
addl
fisubl
mov
lock
adc
cmpl
or
push
out
cmpsl
cmpsb
in
fidivrl
pop
sub
fidivs
mov
aas
je
fdivrl
mov
jmp
push
dec
or
mov
mov
or
jo
dec
mov
fdivrs
xchg
adc
bound
add
jmp
add
xchg
or
sarl
sbb
fbld
push
pop
repnz
jecxz
orb
incb
xchg
push
mov
push
aas
push
stos
jmp
jp
inc
fwait
cmp
shll
xor
js
orb
call
popf
xchg
sti
jbe
sarb
int3
sbb
mov
adc
insl
jl
lret
sbb
sbb
inc
inc
lods
jnp
scas
dec
lds
popf
mov
mov
cltd
push
mov
jle
out
clc
inc
and
push
in
jecxz
aaa
adc
out
daa
lock
iret
mov
clc
xchg
sub
fsin
or
rcl
rcrb
movsl
push
xchg
lds
cld
lcall
in
push
and
mov
sbb
and
xor
pop
aas
lea
adc
scas
cltd
test
dec
mov
cmc
push
or
jns
aad
pushf
adc
pop
mov
mov
test
pop
ret
imul
push
jo
jbe
in
push
jl
cmp
mov
or
outsl
pop
sahf
mov
or
pop
cmpsl
xchg
notl
xchg
dec
sarl
repz
mov
neg
pop
or
pop
clc
nop
imul
pop
push
cld
out
cs
mov
shlb
jg
adc
pop
xor
stos
repnz
mov
push
cld
push
push
add
insb
xor
mov
dec
cmp
jae
pop
jecxz
pop
pop
jge
fwait
cmp
sarb
data16
pop
imul
daa
out
cs
mov
lret
jns
fsub
jmp
ret
lea
mov
ror
ret
cmp
cmc
mov
add
cmp
fdivrs
pop
movsb
pop
shll
sub
mov
in
pop
test
mov
cmp
jno
add
mov
push
inc
xchg
insl
aaa
mov
xchg
mov
clc
je
pop
mov
jb
sti
pusha
shrb
or
inc
fiadds
outsb
sbb
dec
mov
inc
pushf
xchg
je
neg
pop
sahf
cltd
xor
mov
fnsave
or
shll
push
pop
mov
fstps
out
push
and
cmp
mov
popf
xchg
fsubrl
mov
imul
adc
dec
aaa
out
xchg
sbb
pop
out
dec
cmp
pusha
repnz
lods
idivb
movsl
add
cld
adc
popf
dec
cmpsb
jg
pop
mov
aad
jno
test
adc
sbb
lods
int
popf
arpl
cmp
mov
xlat
insl
jg
and
cmp
push
jmp
imul
bound
adc
inc
mov
decb
push
test
shrl
and
hlt
jmp
and
data16
mov
rclb
pop
dec
mov
popf
jae
loopne
insb
daa
and
mov
jl
mov
mov
mov
pop
cltd
xchg
mov
cli
cltd
das
jl
mov
or
inc
fsubrl
mov
add
mov
mov
cmp
or
das
pop
clc
jp
pop
int3
and
les
lock
pop
fcomps
pop
loopne
jmp
push
fsubrs
daa
mov
fwait
lcall
and
sbb
ficomps
hlt
xor
bound
mov
fiaddl
inc
sub
push
adc
mov
xchg
and
ret
xchg
mov
pop
push
out
xchg
mov
jns
sub
sbb
movsl
sbbl
in
xchg
jg
add
fnstenv
xchg
pusha
cli
mov
flds
testl
sti
inc
xchg
sub
sub
aad
ret
sbb
ret
jge
or
and
inc
fisubrs
mov
out
cli
dec
push
pop
lods
mov
cmp
or
idiv
push
lret
fidivl
aad
adc
bound
mov
lcall
add
outsb
cmc
mov
and
adc
inc
add
movsl
cmp
sub
in
pop
mov
mov
xorl
cld
sub
pop
jo
mov
loope,pt
je
dec
insb
aam
push
int
repz
icebp
movsl
mov
mov
cmp
in
addr16
daa
cli
pushf
or
ss
shl
mov
fmull
rolb
push
sbb
pop
pop
je
mov
fnstenv
loopne
call
mov
mov
mov
xor
push
add
roll
push
add
or
dec
notb
cmp
outsb
imul
sbbb
enter
sahf
cmovns
add
push
repz
aas
dec
jl
shrb
lret
push
dec
dec
shll
scas
push
xchg
hlt
mov
mov
xchg
mov
fldl
lods
es
push
or
cmp
inc
xchg
out
jne
xchg
jge
outsl
hlt
xchg
sar
fwait
jg
pop
je
mov
ds
insl
fbld
jmp
mov
bound
bound
adc
add
jg
pusha
stc
xchg
popa
pop
dec
shll
in
clc
lods
add
negb
fidivs
test
xchg
ret
xor
bound
imul
test
xlat
fdivp
push
xor
jg
out
std
js
cmpb
pop
fiaddl
out
sbb
pop
ds
fisttpl
lods
mov
lcall
in
push
repnz
pop
pop
cld
outsl
pushf
jmp
movsb
cmp
mov
fnstcw
or
xchg
cwtl
pusha
mov
scas
sarb
mov
out
dec
popf
xchg
cmpsl
out
hlt
jmp
sub
cld
aam
aas
and
aaa
mov
inc
or
jle
push
test
ja
push
xchg
popf
push
pop
jecxz
mov
inc
outsl
icebp
cmp
mov
jne
loop
push
adc
jo
test
ret
jecxz
and
popa
push
in
js
add
xchg
pop
dec
inc
xor
ret
push
xor
or
bound
push
inc
fmul
adc
lret
stos
or
sub
ds
out
mov
jnp
push
outsl
jnp
inc
aaa
adc
das
cmp
jecxz
test
es
mov
push
mov
inc
sub
cmp
pusha
leave
ficoms
dec
in
mov
xchg
push
decb
fwait
xor
shr
dec
cwtl
inc
xlat
lret
sub
test
jp
fcmovnbe
and
mov
std
inc
rcl
xchg
movsb
je
sbb
push
fcomps
jae
ret
aaa
mov
mov
loop
cwtl
sub
aas
ljmp
mov
dec
bound
jnp
jge
pop
cmp
jl
or
sub
jno
add
mov
xchg
cmp
mov
pop
xor
bndmov
stos
xchg
dec
push
jno
outsl
sub
mov
xchg
repz
xor
push
mov
sar
xchg
incl
lcall
arpl
cmp
xchg
and
loope
push
push
mov
pop
cmpsb
mov
pop
hlt
ds
shl
call
sub
adc
inc
and
cmp
lds
lds
mov
add
aad
dec
mov
pusha
xchg
les
sahf
aam
pop
addb
mov
mov
in
sbb
mov
lret
push
fisubs
cmp
pop
es
mov
popf
sub
sub
pop
cld
xchg
mov
jp
es
mov
stos
mov
sub
pushf
and
push
pushf
xor
sarb
mov
lea
xchg
push
call
pop
xor
pop
roll
pop
jnp
mov
popf
lds
jb
sbb
mov
int
cmp
push
jle
inc
dec
mov
jge
pop
je
ss
sub
mov
cmp
cmpsw
les
xchg
aam
push
push
icebp
jp
lods
xchg
mov
jp
call
ja
jle
push
or
call
or
push
xchg
repnz
movsl
cmc
or
popf
call
mov
incb
test
sbb
xchg
sbb
into
sti
and
pop
add
mov
loope
fmul
dec
ja
jae
and
inc
std
adc
sbb
mov
or
scas
fnstcw
in
xor
inc
lcall
in
mov
ja
fldcw
or
jae
lahf
jnp
rorl
jg
lea
or
daa
popa
clc
push
frstor
push
aam
push
outsl
movsb
outsb
add
mov
add
adc
mov
mov
fisttps
adc
fdivrl
dec
fwait
rcll
jno
pop
xchg
mov
sub
pop
icebp
sbbl
pmullw
mov
or
or
call
int
cmp
add
push
sbb
xor
jle
cmp
fbstp
cmc
cmp
or
dec
rcr
inc
sub
cwtl
push
lods
ror
cmp
gs
inc
not
inc
jne
cld
movsb
outsl
test
sub
xchg
jns
xchg
mov
icebp
jns
xor
inc
mov
lret
inc
test
cmc
mov
jg
lahf
mov
dec
adc
mov
shll
cltd
pop
imul
push
int3
mov
std
and
scas
lret
lret
iret
pop
lret
fbstp
das
mov
aad
fidivl
jl
inc
mov
popf
jnp
iret
mov
cmp
mov
and
mov
inc
inc
jo
mov
loop
scas
cmp
aad
or
jg
xchg
jle
rorb
xor
dec
pushf
fwait
sbb
arpl
into
xchg
aam
mov
cmp
dec
push
adc
cmpsl
sub
pop
mov
mov
sar
mov
jl
cmp
push
cs
push
sbb
mov
mov
ljmp
cli
push
inc
repnz
and
xchg
sub
push
cld
push
insb
push
rcrl
int
push
mov
rolb
pusha
inc
subb
jae
jp
sbb
out
stos
add
fldl
pop
mov
push
xchg
mov
dec
cmp
mov
cmpl
cmc
dec
xchg
pop
hlt
cmpsb
insl
and
lahf
cmp
dec
cmp
rorl
inc
ficomps
orl
dec
xor
dec
mov
xlat
jl
or
ss
jae
bndstx
insb
in
pop
jb
ret
mov
or
repnz
aam
test
andl
dec
lahf
data16
sbb
in
test
mov
or
add
xor
mov
in
xchg
adc
push
insb
sub
cmp
addr16
in
rcll
or
dec
gs
jl
out
inc
fsubl
adcb
enter
or
xchg
in
adc
nop
sbb
out
ret
jp
or
xchg
xlat
jns
jno
repz
fsts
push
inc
repz
push
std
lock
inc
push
dec
sbb
dec
sbb
sarl
pop
repnz
in
cltd
jecxz
aad
lds
push
or
mov
mov
cmp
inc
push
out
pop
pop
dec
aad
orb
mov
fs
bswap
mov
int3
cmp
es
fisubl
mov
dec
mov
lods
ljmp
ret
ret
adc
fisubrl
mov
pop
cmp
sub
aaa
lcall
jns
add
rorl
push
sbb
lret
pop
repz
cwtl
test
push
mov
lods
push
mov
cmpsb
adc
test
pop
push
stos
fimull
fdivs
mov
pop
mov
mov
lods
subb
xchg
sbb
lldt
aad
push
fimull
mov
jg
or
outsb
mov
cmpsb
dec
pop
ds
idivl
inc
in
xor
negl
aas
lret
in
inc
mov
fs
dec
lods
rcrb
jo
jecxz
cmpb
dec
cmpsb
or
dec
or
cmp
mov
xlat
sbb
or
into
mov
jge
add
js
mov
in
mov
pop
int3
xor
outsl
sbbl
aas
or
xor
loop
inc
aas
call
outsl
push
testl
cmp
aad
xorb
and
xchg
xchg
xor
leave
cmp
jbe
xchg
std
add
xchg
adc
rolb
jns
xchg
loopne
and
shrb
xchg
inc
pop
and
pop
and
xchg
xchg
cmp
cwtl
lcall
int3
dec
stos
js
jne
call
cli
or
mov
stos
popa
int
xchg
je
rcr
es
xchg
imul
rorb
enter
out
add
in
in
mov
ret
shll
xlat
jecxz
aaa
stc
les
push
fstps
push
pop
clc
push
in
mov
sahf
push
jmp
or
popa
imul
jmp
notl
pop
fbld
repz
rorb
stos
lea
add
aam
cmp
push
jae
mov
and
xor
xchg
popa
mov
and
cmpsb
inc
fcmovbe
scas
mov
and
fsubrs
add
mov
ret
push
jo
cmp
int3
dec
movsl
jns
movsl
push
mov
loop
push
xlat
lahf
mov
ret
xor
inc
jg
popf
push
stos
mov
add
mov
mov
inc
lds
pop
fmuls
mov
jle
fdivrl
rcrl
dec
roll
push
pusha
mov
test
jnp
out
dec
cld
adc
pop
jno
mov
push
loopne
sar
jo
sub
jecxz
adcl
enter
scas
sbb
mov
jbe
arpl
sahf
pop
jne
sti
cmp
stc
jnp
std
pop
int
add
rorb
imul
addb
fimuls
add
sbbl
dec
sub
sahf
and
fisttpll
in
ja
inc
dec
cmp
mov
mov
imul
xorl
sbb
lcall
lods
push
push
out
lret
add
lods
or
pop
out
mov
icebp
and
xor
pop
jbe
dec
sahf
push
popf
sub
xchg
inc
stos
incb
rcrl
gs
pop
insb
aas
pop
cwtl
xchg
push
cmp
adc
sub
jo
dec
jg
jp
fcmovnu
adc
mov
cld
mov
imul
and
add
js
mov
outsl
sbb
jmp
insb
adc
fisttps
cmp
xlat
data16
fdivs
lahf
inc
je
push
sub
jb
std
dec
sbb
mov
push
call
insl
loopne
mov
jge
int
push
js
popl
push
cs
add
xchg
sbb
mov
push
jae
inc
lret
clc
repz
loop
ds
adc
jle
sub
and
xchg
scas
inc
ret
dec
es
imul
fs
lea
add
mov
mov
lcall
ret
movsb
push
sub
and
and
mov
sbb
out
fdivs
inc
cmp
cmp
lahf
in
shlb
cld
push
jnp
and
cmpsb
sub
or
push
fadds
pop
cmc
fbld
fldcw
fistps
into
daa
push
jbe
or
jp
mov
push
into
in
ja
je
shlb
mov
add
aaa
inc
pop
and
aas
jbe
xor
ljmp
gs
inc
sub
subb
dec
int
loop
call
and
jbe
stos
mov
adc
jo
andb
daa
jb
repnz
insl
mov
shrl
xor
mulb
lds
push
inc
pop
sub
adc
jmp
mov
sbb
mov
cmp
inc
sub
jne
out
xor
dec
pop
test
sbb
jbe
mov
lret
inc
in
stc
je
cmp
aam
fucom
scas
xchg
mov
in
mov
lcall
cmp
or
push
cwtl
std
out
rcrl
cmp
mov
out
dec
sbb
mov
mov
mov
xchg
push
outsb
int3
and
loopne
cwtl
std
mov
enter
xchg
mov
mov
sbb
mov
lret
and
les
xchg
fildl
ret
ret
sub
sub
pop
sub
pop
mov
cld
sbb
out
jle
dec
sti
push
pop
pushf
sbb
push
mov
imul
addl
repz
add
jbe
cmp
or
sbb
movsl
dec
daa
push
mov
stc
jno
jbe
push
testb
push
mov
js
pop
icebp
sbb
or
cmp
jle
pop
xorl
xor
dec
int
mov
imul
jmp
jecxz
in
jae
call
ficomps
ficompl
rorb
ljmp
pop
adc
inc
dec
sub
dec
and
shl
dec
inc
push
ds
rorb
xor
roll
mov
inc
sbb
jmp
in
jnp
enter
dec
stos
and
xchg
test
cwtl
pop
add
or
fsubrs
xchg
mov
and
cmp
in
testl
popf
inc
sub
or
imul
pop
in
xchg
loop
jp
jns
inc
test
std
xchg
scas
out
pop
xchg
adc
lahf
arpl
inc
adc
fcomps
push
out
fnstenv
hlt
lea
adc
nop
daa
ret
testl
cmp
add
xchg
dec
leave
sbbb
inc
orl
sub
stos
jb
in
mov
adcl
sbb
jne
lds
xchg
gs
jne
daa
arpl
ret
shrl
push
test
fimuls
into
push
daa
and
cmp
stos
dec
sbb
in
mov
push
mov
movsb
cld
dec
dec
stos
jp
stos
sub
sub
add
or
repnz
cld
xchg
in
mov
cmp
adcb
inc
sub
inc
pop
and
leave
mov
add
sahf
xor
dec
inc
popa
pusha
sub
sysret
cmp
jge
sbb
fsubs
ret
push
out
bound
jecxz
jmp
add
inc
in
out
push
clc
mov
sub
push
add
stos
jns
xor
mov
inc
inc
mov
or
mov
fiaddl
lea
aaa
xchg
mov
ja
roll
xchg
pop
xchg
xchg
sbb
fnstenv
fbstp
mov
test
sub
jmp
pop
add
hlt
push
mulb
lahf
xor
addr16
subb
add
into
ret
xlat
ljmp
stc
sbb
jg
xor
xlat
aam
outsl
mov
lock
xchg
daa
adc
xchg
sbb
addr16
pop
adcb
push
mov
out
xor
mov
andb
adc
sbbl
inc
mov
xchg
push
je
lcall
sub
mov
xor
lods
js
aaa
jp
adc
in
and
mov
data16
enter
ja
pop
testl
pop
dec
test
cmp
movsb
je
sbb
frstor
push
push
push
mov
and
sarb
push
shrb
inc
add
cld
test
xor
push
cltd
cli
neg
adc
sbb
mov
adc
ss
inc
nop
mov
adc
dec
push
jecxz
jo
jg
push
js
test
xchg
daa
jl
adc
popf
scas
or
test
loopne
pop
xchg
pop
sarl
dec
repnz
cmpsl
es
mov
int3
push
push
xor
or
mov
outsb
add
test
push
daa
das
sbb
ror
fldl
xor
into
shlb
les
and
subb
daa
pushw
aam
orl
and
jmp
lock
and
xchg
inc
mov
add
adc
jmp
fisubrl
lret
ret
popa
jnp
xor
fsubrl
inc
fidivrl
in
and
popa
push
add
mov
mov
xor
mov
jnp
xchg
lock
inc
lods
lret
add
or
fnstsw
ret
or
add
xchg
ljmp
inc
popa
sub
out
test
mov
jmp
mov
inc
repnz
lcall
ficomps
xchg
dec
popf
cmpsl
jle
rcl
leave
jnp
and
xor
aaa
mov
sbb
adc
repz
sti
mov
add
cli
shr
dec
mov
pop
mov
xchg
imul
test
aad
std
mov
pop
mov
xchg
push
aas
imul
or
mov
jb
inc
sub
mov
out
or
inc
inc
or
adc
insb
jg
xor
fidivrl
mov
pop
jg
jb
xchg
xor
imul
es
bound
out
cmp
shll
cmc
jno
lods
cwtl
jmp
mov
into
sti
inc
or
push
addr16
mov
and
or
ret
dec
push
and
lret
stos
mov
jp
adc
outsl
insl
iret
insl
pop
xchg
cmp
pop
and
adc
arpl
mov
push
andl
sub
xchg
dec
fmuls
cmp
jl
push
mov
shrl
push
push
sub
imul
sahf
jl
adc
cmp
fs
mov
xlat
push
and
mov
mov
mov
inc
lret
jnp
mov
stos
stos
in
es
jbe
jo
mov
cmp
sahf
xlat
ret
aam
aaa
push
aas
push
mov
and
jg
lock
cltd
sbb
push
jmp
or
cltd
xlat
nop
adc
lods
ss
sub
mov
xor
mov
sbb
sub
jg
xlat
int3
int
addb
mov
push
push
mov
enter
sbb
xchg
xchg
clc
pop
mov
mov
xchg
arpl
sbb
insl
popa
aaa
ficompl
shlb
lahf
and
popf
fcompl
push
js
xchg
mov
cmpsl
repz
mov
push
stos
es
shl
ret
fcoms
cmp
insb
repnz
out
int
mov
mov
out
sbb
add
fs
clc
inc
mov
xchg
mov
js
mov
out
es
imul
aaa
roll
gs
and
jns
jns
adc
adc
movsb
cs
inc
cmpl
mov
lods
loopne
out
test
loope
fnsave
xchg
mov
pop
lahf
loop
vcvtsd2ss
scas
pusha
sbb
insb
in
mov
adc
and
aad
jo
jb
fnstenv
popa
cli
cmpsl
test
shrl
fistpl
adc
mov
and
push
add
notl
or
in
lods
push
test
dec
clc
inc
mov
movsb
aad
cwtl
daa
imul
movsb
pop
pushf
into
mov
push
shrb
push
dec
sbb
imul
iret
sbb
mov
sahf
test
test
push
clc
ret
cld
dec
or
pop
lret
pop
sub
daa
daa
addb
inc
insl
repnz
addb
lea
rcr
and
scas
test
mov
andl
push
pop
adc
jb
movsb
mov
or
mov
lcall
push
imul
test
pop
pop
xchg
mov
sahf
sarl
fs
insb
mov
std
jmp
fcoml
stos
inc
jb
into
xor
pop
lock
mov
inc
popf
rcrl
aas
mov
jl
jbe
xchg
in
test
add
stos
xchg
popf
out
movsb
sbbb
mov
cld
cmp
pop
fisubrl
add
jecxz
jecxz
adc
movsl
pop
in
lods
and
push
mov
or
mov
les
mov
insb
inc
leave
inc
mov
jp
inc
cmp
ljmp
jns
test
lcall
ja
xor
in
cmp
ss
pop
pop
jmp
or
xchg
mov
inc
nop
outsl
jnp
mov
ret
jge
xor
cmp
jl
mov
lret
inc
pop
dec
inc
lods
mov
push
scas
mov
stc
inc
cwtl
inc
lret
bound
je
inc
scas
mov
iret
dec
lock
leave
sub
stos
xchg
xchg
dec
and
fwait
fs
int3
std
sub
stc
add
push
es
fmull
and
adc
sbb
cmpsb
adc
fadds
mov
push
pop
orl
aas
mov
insl
or
lds
testb
mov
mov
xchg
and
xor
jle
pop
pop
adc
lds
push
jbe
and
fisubrl
in
adc
push
loope
xchg
lea
jl
dec
jecxz
mov
cwtl
mov
lods
and
in
mov
loop
adcl
stos
or
pop
push
std
push
cmpb
outsb
lahf
xlat
outsb
pusha
imul
push
cld
push
fnstenv
xor
cwtl
inc
cwtl
mov
inc
adc
cld
xchg
inc
inc
xchg
jno
cmp
leave
rolb
xchg
lds
in
cmpl
dec
rcrl
dec
sbb
int
mov
add
add
insl
push
in
or
push
aaa
push
mov
inc
adc
lods
adc
jmp
enter
fildll
and
xlat
xor
jno
stc
bound
das
out
dec
addb
test
sub
stos
add
pusha
or
add
dec
hlt
sbb
insl
mov
pop
ficompl
mov
sti
jecxz
mov
fdivl
aas
mov
lds
dec
ret
sahf
or
xchg
push
imul
dec
jns
out
enter
sub
pop
ds
out
mov
xchg
js
arpl
jl
pop
add
ja
and
leave
mov
out
mov
pop
in
add
in
xor
loop
orb
sbb
sbb
inc
pushf
inc
xchg
fwait
push
call
cli
test
push
dec
push
fs
push
cwtl
aad
xchg
dec
loop
push
stc
ds
or
je
mov
js
lods
sahf
es
stc
or
lods
mov
test
scas
cmp
fistps
xor
sbb
jne
sahf
xor
inc
push
aas
mov
lea
test
jbe
pop
jmp
popa
lahf
fisttpl
push
cltd
call
andb
mov
pop
mov
pop
loop
mov
or
adc
sub
dec
ret
ret
mov
adc
dec
dec
test
jnp
mov
popa
or
adc
std
xor
dec
scas
int3
popl
sub
loop
lret
pop
shrl
mov
push
in
test
les
xor
adc
lcall
fistl
enter
xchg
pop
push
stos
inc
xor
aaa
in
leave
jno
in
and
cwtl
mov
cmp
lods
mov
movsl
sbb
aas
mov
cmp
mov
inc
push
mov
das
push
test
loop
call
lock
mov
pop
mov
into
xchg
xchg
sub
pop
sub
sahf
pop
pop
ret
mov
and
adc
in
xor
mov
push
mov
pop
scas
mov
insl
fisubrl
dec
fstps
subb
aas
stc
shll
movsb
sbb
mov
scas
xor
mov
push
cwtl
adc
xchg
sub
xchg
popa
xor
mov
adc
in
insl
sahf
sub
lods
add
xor
mov
pop
fyl2xp1
sbb
pop
xchg
cld
lret
cmp
mov
clc
lcall
in
cmp
dec
mov
lahf
loop
gs
adc
mov
fcom
push
lods
mov
adc
insl
jg
fstl
cmc
mov
adc
mov
ja
movsb
pushf
lds
pusha
jmp
mov
ror
xchg
jl
adc
mov
sbbl
sbb
aas
sub
sbbb
inc
mov
fwait
std
xor
sub
xchg
push
mov
cmp
stos
loopne
add
and
xchg
inc
fwait
mov
mov
ret
mov
jmp
insb
adc
into
mov
inc
insl
push
sbb
insl
adc
fbstp
cmp
add
ds
fiadds
cltd
mov
dec
pop
gs
inc
ja
mov
push
std
lcall
mov
push
shrl
mull
xchg
sbbl
repnz
dec
dec
add
sbb
dec
lds
fcomip
sub
and
popf
xor
xor
mov
js
and
ret
mov
repnz
inc
mov
fsubr
test
push
xor
cmpb
xlat
add
push
sub
inc
out
fisubrs
sbb
xor
cmp
aas
adc
stos
jle
pusha
mov
fbstp
in
lahf
jge
jno
lds
mov
and
pop
movsl
xchg
pusha
in
jp
lret
xor
in
mov
daa
ljmp
push
out
jg
adc
and
mov
daa
lods
inc
xor
lret
pop
push
mov
ja
inc
test
rcrl
in
adc
int3
out
cli
push
sub
pop
add
sbb
dec
pop
jl
sahf
xor
mov
pop
jne
cmpsb
std
lods
stos
outsl
add
popfw
les
xchg
dec
cmp
aam
push
pop
push
sbbl
xchg
cld
push
repnz
shll
insb
fnstenv
mov
mov
popf
adc
and
xor
std
daa
mov
stos
pop
mov
data16
imul
push
pop
push
mov
jp
add
test
jp
fnstenv
out
imul
je
sahf
push
sbb
cmp
inc
lods
xchg
rep
dec
jecxz
and
stos
lds
out
sub
pop
shl
negl
std
adc
push
ret
sub
sbb
push
mov
push
mov
mov
and
mov
push
stos
add
xchg
add
pop
outsl
xor
inc
inc
fwait
sub
dec
mov
fdivrp
xchg
adc
push
pop
push
pop
stos
ret
outsl
mov
mov
sahf
loop
mov
out
sub
jp
popa
add
pop
hlt
data16
push
in
scas
push
enter
cmpb
repnz
stc
sub
cmp
adc
inc
xchg
out
push
xchg
jmp
aad
xor
or
outsl
cmp
mov
sub
mov
pop
or
shrb
mov
mov
hlt
xor
mov
es
push
adc
stos
mov
mov
xchg
and
jle
cmp
add
and
lahf
push
mov
decb
fadd
xchg
dec
mov
js
jmp
movsl
adc
sbb
add
ss
in
mov
int
rcrb
push
adc
ficoms
nop
mov
xchg
out
xorb
stos
ds
and
mov
test
jno
adc
fwait
pop
sub
int3
and
bound
divl
jbe
hlt
fidivl
adc
mov
mov
cmp
aaa
popa
sub
dec
out
add
add
sbb
test
mov
adc
jbe
pop
adc
pop
sub
ljmp
cmp
cmpsl
movsb
outsl
pop
cmp
fs
shrb
aad
jecxz
shl
fsub
push
jbe
lret
iret
and
dec
add
dec
fsubrl
sub
cmp
negl
xchg
pop
pusha
mov
pop
xchg
inc
iret
gs
xor
lods
mov
jp
add
popa
aaa
rolb
cld
push
mov
arpl
out
imul
inc
xchg
mov
mov
mov
and
sub
add
lods
push
cmc
mov
mov
aaa
fstpt
xor
js
test
out
pop
dec
sbb
lea
dec
arpl
sub
ds
enter
inc
fadd
mov
repnz
std
xchg
pop
std
imul
xchg
cmp
divl
sarl
pop
mov
movsb
scas
inc
out
add
mov
fmull
ror
jns
outsl
mov
mov
std
add
xor
xchg
push
add
mov
lods
add
xchg
daa
cmp
sub
test
mov
sbb
inc
push
fisttpll
mov
sub
aam
jno
mov
mov
cmp
mov
mov
inc
pop
inc
inc
jne
cmp
pop
push
jge
bswap
loop
jg
or
sub
sarb
jnp
adc
aas
imul
and
scas
cs
test
pop
ret
rol
xlat
lcall
xchg
add
pop
sbb
inc
bound
pop
sbb
fcompl
jmp
dec
nop
xchg
adc
cmc
lea
push
pop
mov
dec
aam
or
pop
adc
arpl
push
add
mov
xchg
mov
sbb
push
pop
push
pop
pop
repz
mov
push
cli
in
xor
add
adc
lret
fisttpl
mov
or
push
jmp
out
jo
sbb
jbe
mov
lds
mov
insl
mov
adc
jae
test
inc
push
js
sub
xchg
imul
icebp
mov
xor
and
cli
xchg
xchg
xchg
lea
dec
test
rcrb
jp
in
cli
fidivs
lds
mov
lcall
jp
inc
nop
push
adc
test
divl
out
xchg
inc
sub
ja
insl
hlt
dec
loope
data16
in
or
push
test
jbe
out
pop
ljmp
sbb
mov
pop
cs
cmp
shrd
dec
iret
push
jle
lock
rcrb
into
aam
sbb
scas
les
fwait
loope
and
and
add
je
stos
mov
mov
lds
dec
aam
lods
mov
ret
pop
into
mov
aam
lock
es
xlat
sbb
xchg
cwtl
sbb
in
cli
mov
in
cmp
mov
mov
cmp
cmp
fldt
mov
dec
jae
mov
ficoms
scas
push
rorb
stc
popf
inc
movsl
pusha
enter
adc
mov
mov
pusha
pop
sub
test
scas
add
fisubl
push
insl
std
cmpl
cmpsl
repz
ds
add
and
lret
bound
aam
add
das
xchg
add
in
mov
push
mov
mov
push
dec
fists
inc
xlat
bound
inc
jnp
push
sub
xchg
mov
movb
inc
jno
mov
jle
add
mov
aam
fstl
out
leave
jno
test
jle
jbe
nop
jo
inc
fnstsw
iret
adc
ss
push
mov
arpl
mov
mov
dec
xlat
mov
xor
ret
adc
xor
rorb
cli
fndisi(8087
imul
mov
sarl
cmp
and
fnstenv
inc
jns
jno
stc
pop
out
cmp
lods
in
and
add
je
sbb
out
sbb
jnp
and
inc
pop
cmp
add
fwait
aas
xchg
jo
add
dec
add
pushf
cltd
push
sub
rorl
mov
xor
das
pop
mov
mov
daa
push
fildl
call
loope
test
out
and
call
les
mov
ret
mov
or
lods
and
ljmp
jl
jo
sub
fbstp
out
add
into
mov
testb
mov
and
and
xor
lcall
sub
sbb
out
popf
pop
cs
sbb
fbld
adc
outsl
seta
or
out
sbb
cmp
int3
pusha
push
cli
mov
pop
loop
or
shlb
cmpsl
cli
adc
ja
call
or
aad
pop
sbb
aad
test
cmp
out
iret
xchg
xor
hlt
xor
jmp
outsb
ror
or
aam
mov
stc
sbb
add
mov
and
repz
jp
adc
cmp
mov
jle
sub
fmuls
gs
sub
out
es
xor
and
in
insb
mov
dec
add
gs
out
xchg
sbb
xchg
lcall
cli
test
gs
js
rorb
pop
sub
fbld
out
jbe
add
xlat
jno
mov
cmp
leave
pusha
sbb
xchg
dec
shll
test
mov
in
std
pop
in
push
push
push
sahf
cmp
sarl
jp
testl
jno
loop
mov
xor
mov
xchg
adc
pop
sbb
fidivrs
mov
sbb
fwait
pop
mov
xchg
loopne
pushf
inc
outsb
mov
push
dec
mov
or
insb
pop
adc
xchg
js
cmp
lcall
push
stc
dec
pushl
lods
jecxz
mov
inc
les
dec
jnp
dec
in
sbb
imul
cli
push
aas
cmc
out
cmpsl
cmp
sahf
in
leave
rolb
inc
add
inc
outsb
inc
ss
mov
fwait
push
je
and
lret
and
and
cld
xchg
xchg
or
mov
add
pop
jne,pn
jae
call
cmp
test
xlat
mov
push
adc
arpl
lcall
push
incl
loope
in
stos
dec
push
stos
addb
loope
out
lock
adc
aad
mov
add
leave
icebp
bound
test
popf
mov
mov
xor
data16
mov
addr16
mov
cmp
fwait
ss
jns
outsb
xor
pop
push
mov
or
int3
xchg
push
pop
pop
cmp
xor
push
lahf
daa
sti
rcrb
popf
inc
pushl
loope
xchg
iret
adc
jl
inc
fldcw
push
loopne
dec
fnstenv
lock
ret
sbb
add
xor
jo
loopne
push
lret
insl
inc
jmp
lds
shll
xchg
scas
push
and
inc
lods
cltd
das
push
lea
test
pop
sub
leave
xchg
cs
incl
mov
push
shrb
ficoms
sub
je
fwait
bound
lcall
push
cld
xor
imul
fbld
fdivs
imul
fdivl
cltd
std
push
outsb
adc
push
je
cmpsb
xor
cmp
hlt
aad
cmp
pop
cltd
push
dec
test
rorl
pop
insb
inc
movsb
sbb
lock
je
pop
enter
int3
mov
inc
ficoml
mov
popa
iret
in
xchg
je
dec
dec
sub
cltd
fsubs
push
inc
push
fs
adc
scas
inc
in
icebp
je
push
mulb
hlt
add
cmp
negl
or
jbe
pop
mov
insb
imul
jb
inc
cmp
fidivs
stc
or
xchg
popf
stc
sahf
movsb
js
dec
mov
cmpsb
les
and
lods
jae
insl
jno
repnz
outsb
scas
add
mov
cwtl
repz
cltd
pop
stc
mov
xchg
iret
xor
out
or
adc
pop
sbb
ss
inc
sub
dec
push
popa
xor
dec
fdivrl
jg
js
iret
stos
sti
negb
sub
cmp
leave
mov
inc
cmpsl
sbb
hlt
addr16
mov
data16
add
xadd
insl
sbb
out
adc
and
push
push
cmp
pop
negl
mov
frstor
pop
push
call
adc
adc
addb
movb
push
dec
mov
fnstsw
icebp
and
cmp
je
push
aas
aaa
mov
mov
push
in
incb
push
mov
cmp
int3
mov
mov
fadds
in
cmp
sub
jo
cli
sbb
mov
int
xor
lods
ljmp
js
test
xor
xor
mov
xor
fsts
xchg
sub
mov
cmp
loop
pop
dec
lret
out
rorb
test
stos
lret
sub
popa
cmp
shlb
cmpsb
test
cmp
push
xchg
cmp
and
mov
stos
add
mov
push
test
aaa
outsb
cmp
jg
sbb
sbb
mov
mov
fs
inc
ret
popf
pusha
and
mov
rcrl
jnp
lods
mov
test
jg
mov
mov
cmpsb
and
push
xchg
lret
aam
and
or
xchg
leave
push
adc
imul
sbb
cmpl
pop
sub
out
fcoms
add
les
jb
and
clc
leave
loopne
sbb
sub
dec
xchg
jbe
dec
imul
clc
lods
insl
in
test
fwait
mov
and
jge
or
bound
mov
xchg
jno
cmpl
inc
and
jl
add
jb
and
sub
push
das
nop
mov
xchg
js
mov
lock
cmpsb
cmp
push
pop
add
and
test
jge
dec
in
adc
test
out
clc
mov
movsl
jge
push
test
fwait
push
push
repnz
into
sub
pop
es
fsubrp
sbb
inc
mov
fwait
mov
loope
mov
mov
add
cmp
jg
pop
jmp
cmp
sub
out
ss
fldl
pop
mov
dec
sbb
xchg
add
mov
andl
jmp
aaa
and
jnp
pop
cmpsb
inc
pop
mov
add
sbb
daa
leave
cmp
scas
push
cmovle
mov
cmpsl
pushl
rorb
ror
loopne
das
push
negb
cmp
dec
gs
dec
xchg
sub
xchg
sub
leave
mov
les
jne
dec
mov
cmpsl
adcb
cmp
sbb
push
aas
dec
cld
adc
and
inc
xlat
in
adc
cwtl
inc
repnz
aad
lcall
testb
push
jns
insb
cmpb
shr
rol
mov
fmuls
add
fwait
mov
xlat
and
dec
jmp
xchg
push
leave
imul
pop
adc
dec
pop
xchg
jo
lahf
aad
fbld
pop
outsl
add
adc
das
add
insb
popa
or
jle
pop
add
pushf
or
mov
ds
xchg
loopne
leave
jns
adc
sub
xchg
nop
xchg
fsubrp
repz
and
std
sub
jnp
inc
clc
or
data16
shrb
inc
dec
iret
pop
testb
ss
fadds
fmull
xchg
jns
into
lods
dec
arpl
dec
xor
push
jo
mov
jg
idiv
dec
jae
shlb
sbb
add
mov
push
fdivrl
in
and
xchg
mov
pop
jecxz
iret
dec
push
loopne
jns
je
shr
icebp
in
lcall
dec
mov
mov
sub
loop
cmc
or
sbb
subl
pusha
les
add
sub
push
cs
add
ds
and
bound
mov
cmpsb
xchg
mov
push
out
cs
mov
and
xorl
in
or
lret
aad
not
dec
call
mov
lea
int
xchg
out
xchg
sub
test
jecxz
js
loopne
ljmp
imul
lock
xchg
adc
mov
or
ret
mov
clc
mov
inc
loope
push
imul
cltd
aad
sub
sub
mov
ljmp
insl
outsb
imul
mov
enter
fldt
or
jp
fsubrs
pushf
fucomp
int
xor
push
jmp
mov
jmp
mov
mov
js
stos
je
ret
popl
pop
and
in
mov
xor
xor
frstor
leave
inc
sbbb
push
shrb
push
lahf
jb
imulb
sub
fnsave
push
lret
ja
negb
cmp
rcr
push
fadds
and
inc
or
cmpsl
aas
mov
daa
sbb
add
sub
dec
std
fwait
and
pop
push
imul
jnp
sub
out
shrb
nop
fdivs
in
repnz
repz
xchg
stc
xchg
sub
mov
lahf
rcll
mov
jg
cmp
sbb
sub
notb
sbb
or
push
out
imul
xor
sbb
add
adc
cmpl
sbb
push
stos
test
sub
pop
xor
dec
dec
pop
cltd
cltd
repnz
ret
test
outsb
repnz
pop
dec
sbb
xor
adc
xor
xor
lcall
outsl
push
and
fcmovbe
std
xor
or
loop
sbb
insl
jg
rcrb
adc
sbbl
pop
mov
and
jle
outsl
xor
xchg
mov
adc
xor
ss
jo
int
shl
push
test
sub
mov
ret
and
and
stos
mov
mov
outsl
xorl
enter
xor
and
test
pop
mov
int
data16
movsb
out
push
mov
dec
push
test
cmp
add
aas
cmpsl
mov
mov
cwtl
lds
mov
inc
ds
mov
mov
jb
bound
mov
outsb
jle
ret
testl
pop
aam
inc
xlat
add
mov
ja
mov
daa
pushf
xchg
insb
bound
xlat
push
lock
lods
dec
icebp
pop
out
lret
bound
cmp
stc
popf
pushf
xchg
in
jmp
inc
add
hlt
cltd
dec
mov
push
pop
mov
sbb
lods
cmp
adc
pop
stos
clc
jae
stc
pop
ljmp
jo
lcall
inc
jmp
out
mov
ja
scas
xor
lods
loop
cmpps
andl
lods
cmpps
adc
jb
popf
lock
loopne
and
fistps
mov
cmpsl
cs
pop
cmp
push
popa
leave
add
push
aaa
loop
sbb
push
vpcmpeqw
daa
push
addr16
int
push
fsts
out
fdivs
dec
fcomps
in
and
gs
stos
aas
dec
mov
jne
test
pusha
lods
cmp
pop
pop
popf
repz
inc
mov
xchg
pop
ss
ret
cmp
in
sub
int
pushf
jo
add
dec
pop
sbb
xor
inc
gs
mov
ret
dec
cltd
push
nop
lret
loopne
sub
pop
icebp
sar
xor
xchg
sub
push
pop
test
xor
push
push
pop
and
lret
hlt
add
lahf
or
cmp
push
iret
jge
in
dec
jl
es
xor
cwtl
xor
mov
jle
into
jbe
cmp
inc
fistl
neg
inc
daa
rcll
or
daa
lahf
lock
pop
sub
js
fisttpll
movsw
jp
xlat
xchg
push
int3
testl
jle
scas
push
xchg
int3
pushf
add
and
cmpl
pop
mov
sbb
imul
insl
mov
fwait
mov
and
call
sub
cmp
imul
out
xor
xor
cmovg
fisubrs
lods
pop
sbb
mov
scas
mov
inc
lea
dec
xor
inc
loope
icebp
fst
popa
imul
mov
push
push
clc
xchg
or
movsb
add
or
cmp
jge
gs
les
or
and
sti
adc
push
inc
addb
movsl
adc
and
loope
inc
sub
jge
dec
mov
cs
test
push
movsb
mov
data16
dec
jnp
xlat
jmp
push
push
sbb
ja
int3
push
fdiv
and
mov
add
subb
mov
pusha
jp
adc
pop
xor
push
inc
pop
sarl
hlt
mov
push
inc
pop
dec
dec
xchg
mov
fistps
push
dec
icebp
mov
jp
and
les
cmp
xor
add
xor
loope
jp
test
subb
add
es
shll
xor
std
jo
or
stc
mov
mov
in
or
inc
ret
in
adc
test
cmp
fstps
rcll
mov
sbb
mov
cltd
fsubp
xor
mov
xchg
ret
lcall
adc
mov
mov
iret
repnz
int
adc
imul
inc
fs
iret
je
add
or
shll
pop
pop
push
lods
mov
jnp
lods
mov
mov
lods
cmc
xor
inc
mov
ss
or
xchg
pop
shll
cmp
pop
fistps
aam
jle
leave
pop
sub
xchg
lods
test
pusha
sarl
cmc
sahf
lods
inc
rclb
lcall
cmp
mov
sbb
ds
and
adc
sub
js
ds
sub
dec
cmp
repnz
inc
inc
fucomip
cmc
gs
cmpsb
repnz
movsb
or
loopne
push
add
scas
int
mov
ret
push
insb
cmc
aad
test
incb
jmp
int3
stos
inc
lods
mov
stc
push
xor
fsubrl
popa
fdivp
xchg
insl
out
sbb
sbb
pop
push
sbb
push
bound
mov
cli
xor
mov
fprem
xor
loope
shrl
add
mov
push
add
sbb
xor
cs
mov
mov
lahf
mov
rolb
mov
and
movsb
mov
cmp
cmp
lahf
inc
adc
jbe
fucom
mov
push
sub
in
mov
in
jbe
sub
rcll
pop
xor
or
imul
jp
xchg
call
adc
inc
add
lods
popf
jno
and
sbbl
add
mov
scas
inc
xchg
insb
lret
cmc
xchg
mov
push
sbb
loopne
outsb
insb
sahf
sbb
jle
mov
shlb
imul
jns
icebp
dec
push
es
fs
rorl
daa
xchg
lret
stos
mov
outsb
push
pop
into
xor
cmp
in
jbe
cmc
mov
shll
push
out
pop
adcl
test
pop
insb
add
push
ljmp
pop
loope
jns
pop
cmp
imul
mov
stos
adc
xchg
dec
fmuls
sub
push
push
pop
int
or
pusha
mov
cmp
push
jge
insb
cmp
jmp
lea
dec
and
mov
ljmp
or
insb
sub
mov
inc
add
jg
popf
pop
jle
pop
mov
fists
cmp
dec
out
stos
push
bnd
mov
mov
imul
leave
jne
nop
dec
mov
out
cmp
das
fstpl
ret
std
mov
sub
sbb
jle
inc
push
sub
repz
mov
mov
popl
jo
ja
push
out
mov
pop
rcr
outsl
sub
sti
pop
rorl
clc
insl
jge
les
xlat
outsb
pop
dec
mov
loopne
imul
inc
jle
pop
mov
js
jge
out
out
mov
mov
and
inc
ds
jnp
das
pusha
or
jnp
inc
popf
imul
inc
adcl
test
mov
stc
and
inc
push
sbb
jns,pn
mov
imul
mov
pop
int
and
or
inc
shrl
ljmp
mov
loope
lcall
mov
push
insl
xor
or
or
dec
sub
mov
lods
js
xchg
divb
cli
xor
fcmovnbe
mov
mov
lahf
es
cmp
hlt
adc
pop
push
mov
dec
mov
cmpsl
loope
outsb
pusha
xorb
mov
jecxz
cmp
cmp
mov
mov
inc
push
xor
test
cwtl
mov
mov
movsl
xor
mov
nop
sub
dec
es
inc
push
mov
in
xor
jb
jno
jb
fs
lds
xchg
adc
popa
pop
mov
push
pop
jl
scas
adc
aaa
jno
out
cwtl
movsb
push
test
and
cmpsb
xchg
insb
popa
xchg
stc
arpl
lea
xchg
fs
xor
push
ffreep
add
xchg
mov
fwait
in
test
out
inc
outsl
idivl
aaa
aad
dec
dec
in
ffree
iret
sarl
sub
pop
scas
jb
fs
ds
xchg
jmp
je
mov
cmp
jo
repnz
jp
ret
cmpsl
loop
mov
xchg
push
or
mov
aas
inc
rclb
js
in
popa
xor
lcall
out
inc
sbb
add
and
ret
pop
cmp
jle
repz
and
lahf
xor
and
jne
cmp
adc
lods
jnp
jns
push
jmp
or
lds
xor
outsl
adc
pop
inc
in
pop
call
call
mov
push
aaa
pop
fsubrl
sbb
bound
mulb
jnp
inc
cs
jns
or
ret
insl
pop
push
test
nop
push
or
xor
pusha
push
nop
fcoml
pop
ss
int
xor
cli
notb
fadd
xor
rclb
pop
cli
xchg
mov
cmp
popa
xor
xchg
pop
cmpsl
push
xor
xor
inc
scas
jns
cs
idivl
cmc
push
and
push
fucomi
mov
cmpsl
mov
push
or
push
in
subb
jne
or
enter
sbb
fcmovnbe
lea
pop
out
add
pusha
cmpsb
data16
sbb
mov
and
and
sahf
adc
and
test
lahf
mov
test
notb
mov
pop
cmp
mov
sar
jae
jae
mov
stc
pop
mov
push
xchg
cli
or
fmulp
pusha
shrb
pusha
jp
andb
sbb
sub
add
cmp
inc
or
pop
inc
push
fnsave
repz
adc
aas
mov
icebp
jae
inc
bound
fs
jno
pop
ss
aas
sbb
enter
test
ljmp
and
adc
and
sbbl
cld
jns
fnstenv
mov
jp
ja
pop
test
out
std
mov
mov
ficompl
ds
into
mov
jb
xorl
ljmp
jb,pt
gs
add
in
sbb
lret
sub
pop
aas
jecxz
lods
arpl
repz
pop
inc
push
imul
adcb
fsubl
xor
mov
test
inc
das
xchg
dec
negb
stos
stc
imul
jle
insb
movsl
scas
gs
loopne
cli
fldl
dec
mov
and
aad
je
xor
aam
bound
and
shl
hlt
cmc
dec
scas
pop
cmp
jno
dec
mov
push
dec
pop
test
and
daa
cmp
adc
test
add
xor
lods
inc
push
mov
clc
sub
pushf
and
rorb
jns
xchg
xchg
dec
xor
mov
into
mov
fildll
popa
popf
add
arpl
mov
inc
push
cmp
pop
mov
xchg
enter
cmp
pop
fwait
mov
rol
leave
cmc
mov
adc
jecxz
rorb
divps
jo
xlat
push
aad
repnz
jae
mov
sbb
or
xchg
xchg
cld
dec
xchg
push
lahf
xchg
iret
jns
jb
or
stc
je
adc
mov
inc
loope
pop
and
jo
stos
mov
inc
js
test
mov
into
aas
xor
and
ss
cmp
push
or
in
sub
push
lcall
adc
jecxz
dec
stc
cmc
mov
push
int
or
cld
nop
dec
ljmp
cmp
and
leave
push
cmp
xor
in
nop
mov
push
push
xor
popf
je
jnp
mov
cwtl
push
jns
mov
add
inc
mov
scas
int3
mov
mov
rol
fldt
pop
adc
cmp
xchg
mov
in
pop
cmp
shlb
xchg
dec
pusha
push
andb
mov
lret
jne
add
fdivl
movsb
push
cmp
loopne
aam
pop
les
dec
xchg
push
mov
mov
dec
xorb
test
nop
adc
mov
mov
or
xchg
sub
fnsave
sub
xor
mov
mov
or
xor
in
xor
inc
insl
adc
or
pushf
out
and
xchg
test
and
jmp
cmpl
fs
ss
mov
mov
cmp
inc
inc
and
fiadds
mov
rcrb
push
jne
mov
and
out
xchg
std
inc
jo
cmp
dec
aad
sub
jno
mov
add
or
add
sti
xor
xor
dec
fs
inc
adc
sub
xor
addb
and
inc
gs
xchg
mov
loopne
aam
enter
push
mov
and
loopne
inc
cmp
out
push
jb
add
enter
leave
insb
dec
push
sbb
ds
sbb
insb
outsl
jg
dec
mov
jo
mov
gs
jno
xchg
xchg
lds
sbbb
add
push
icebp
mov
xlat
psrad
and
cltd
push
lods
test
mov
jno
cli
sbb
push
fwait
or
xor
lock
mov
fcomps
mov
lret
push
int
test
ret
fwait
aad
adc
cltd
pusha
adc
out
push
sub
das
mov
sub
fisubl
jmp
shrb
dec
orl
lret
mov
popa
loop
aaa
clc
inc
leave
sub
and
gs
push
sahf
dec
fdivl
sbb
popa
clc
mov
loop
lret
pushf
xor
or
cmpsl
imull
push
push
sbb
in
lret
insb
xchg
fistpll
mov
sbb
xchg
sub
enter
adc
fldenv
dec
in
dec
adc
mov
in
cwtl
popf
dec
enter
ja
loope
mov
and
jl
lods
jle
lahf
aaa
pushl
or
jbe
cmp
xchg
out
xor
push
decl
insl
test
test
pushf
xor
mov
mov
dec
jns
negb
icebp
sbb
lods
mov
ja
andb
push
or
fisttps
mov
sub
pop
push
inc
mov
scas
cwtl
cli
xor
and
mov
push
mov
fdivl
outsl
push
inc
inc
roll
les
lret
test
popa
xchg
stos
sbb
pop
xor
jl
js
and
push
or
out
and
push
jb
xchg
cli
insb
inc
sbb
jb
leave
mov
outsb
stos
cmpsl
mov
nop
add
inc
out
lret
dec
xor
andl
pop
xor
arpl
stc
popf
push
test
pop
arpl
jne
hlt
mov
stos
fmuls
fwait
sbb
inc
in
movsb
push
movsl
out
popa
adc
repz
sbb
fistps
push
sub
pushf
jnp
jns
std
lods
xor
dec
add
and
pop
cmp
mov
mov
pop
fidivrs
je
cli
sub
pop
or
gs
sub
ja
xor
cmp
pop
outsl
fildll
gs
test
std
xchg
jnp
das
and
popa
jnp
push
rolb
mov
lock
add
ret
add
sbb
insl
jge
add
sub
push
xchg
sbb
inc
mov
cmp
shlb
dec
ss
pop
push
imul
das
addr16
pusha
loopne
mov
cmp
mov
out
into
lahf
lods
sub
loop
pop
pop
fidivs
popf
push
cmp
ret
out
vcvttps2qq
mov
in
in
pop
and
daa
adc
jmp
add
and
adc
cltd
cltd
lods
xchg
out
out
nop
xchg
add
jb
rcrl
mov
aaa
mov
dec
mov
sbb
ret
fsub
jg
mov
in
inc
sbb
mov
mov
mov
push
cltd
jmp
aam
mov
mov
fcmove
mov
stos
fsts
or
dec
inc
repnz
es
in
xor
fnstsw
out
out
pop
fldt
lods
lret
pop
adc
pusha
xchg
sahf
roll
and
jp
lods
inc
or
lret
imull
pop
sub
xor
cs
cwtl
jb
leave
and
daa
ja
arpl
ret
addb
es
pop
aas
adc
sub
test
mov
lock
push
js
insb
popl
insl
loop
imul
mov
add
sbb
push
iret
orb
cmp
push
and
icebp
cmpsl
ljmp
dec
pop
fucomip
push
pop
add
mov
mov
cmc
rcrl
push
inc
jg
jl
test
adc
jb
dec
loope
inc
in
test
cwtl
xor
jbe
ss
xchg
loope
sub
or
add
imul
enter
hlt
jp
lret
outsl
mov
mov
mov
lret
push
fisubs
out
xchg
or
enter
stos
add
xorb
push
cmpsb
or
push
jge
shrb
lea
and
and
fsubl
ficoms
push
mov
sbb
cmp
mov
jle
clc
mov
ret
ja
inc
test
inc
fdivl
leave
test
rcr
xchg
daa
lods
xchg
sbb
rcrl
ss
jno
add
xor
test
or
imul
ja
or
inc
pop
cltd
adcl
push
cwtl
test
fdivs
mov
lcall
and
lods
xor
test
das
push
jnp
cmpsb
test
int
fsubrs
outsb
out
and
js
pusha
movl
imul
xchg
loope
pop
call
or
sbb
and
daa
dec
xchg
pop
addl
sbb
das
mov
nop
or
movsb
repnz
cli
jne
mov
insb
mov
sahf
lods
jmp
clc
ds
icebp
outsl
inc
lods
xor
dec
popf
adc
shlb
cwtl
pop
icebp
ret
xchg
in
movhlps
push
cmpsb
daa
js
stos
pop
inc
pop
icebp
xor
jmp
outsl
sbb
into
icebp
sub
enter
repnz
andb
sti
test
jne
std
movsl
inc
push
and
inc
int3
xor
mov
aas
fnsave
push
ret
sub
mov
cs
fidivs
ret
ficomps
mov
fdivp
movsb
popf
xor
add
add
push
cwtl
fs
mov
test
negb
les
in
data16
inc
mov
movsl
shlb
popa
jmp
repz
sbb
pop
test
fadds
popa
jnp
aaa
cmpb
testl
test
pop
xchg
fnsave
mov
arpl
push
sbb
mov
xchg
cwtl
outsl
ds
sub
pop
pop
sub
xchg
sub
js
xor
inc
cld
inc
dec
add
xchg
into
insl
and
push
fildl
mov
filds
je
sub
mov
fs
ss
pushf
gs
mov
xchg
sbb
jmp
cld
bound
outsb
sub
imul
stc
or
mov
adc
cltd
jno
push
inc
mov
popa
dec
in
add
insl
adc
ds
inc
les
mov
negl
push
movsl
out
jle
cltd
iret
mov
fisttps
adc
sbb
jne,pn
ret
frstor
pop
jg
mov
pushf
fnsave
ret
sub
in
sti
cmpsl
test
fdivs
mov
in
xchg
ss
add
jmp
repnz
add
leave
xor
out
movsb
cmp
xor
ret
lcall
push
push
mov
pushf
std
mov
cs
push
jmp
repz
fbld
sti
mov
pop
mov
cmpsl
ret
mov
cmp
xchg
push
ret
clc
dec
lahf
pop
loopne
or
xchg
sub
fnstenv
out
dec
dec
and
enter
stos
mov
mov
mov
clc
call
mov
in
jbe
xlat
xchg
std
xchg
pop
popf
fnstenv
stos
inc
ljmp
pusha
jge
adc
xchg
adc
rcrb
sbb
jge
jg
add
shr
repz
loop
sbb
push
fmul
jecxz
push
movsl
das
cmpxchg
cwtl
and
lods
inc
jl
pop
sti
cs
lret
bound
pop
xchg
outsb
sbb
xchg
je
xchg
les
push
fisubl
dec
or
mov
popa
mov
push
mov
gs
push
pop
cli
cmovno
xchg
mov
ja
icebp
xchg
sbb
popf
dec
js
sarl
repnz
add
xor
aaa
mov
fisubl
add
mov
stos
dec
adc
push
or
xor
jno
add
cmp
mov
add
or
fidivrs
fidivs
pop
mov
in
leave
cltd
push
xlat
aam
cmp
sti
test
out
jmp
pop
push
cltd
pop
les
mov
cld
inc
lods
divb
sbb
xchg
pop
mov
add
xor
jecxz
lods
xchg
jle
enter
inc
stos
or
and
push
mov
jb
push
dec
inc
sbb
adc
cwtl
pop
jbe
cli
es
sub
xchg
and
or
sbb
in
sub
in
inc
xchg
test
xchg
cmpsl
outsb
push
idivl
mov
mov
sti
test
int3
add
pusha
aad
clc
sbb
sahf
xor
pop
mov
xchg
mov
mov
subl
pop
sbb
push
jns
mov
jbe
mov
jns
pop
mov
imul
jg
scas
shll
pop
xor
pusha
mov
cmp
popa
push
sub
sbb
bound
repnz
repnz
testl
in
dec
xor
js
pusha
mov
pop
pop
cli
mov
mov
addl
repnz
out
adc
dec
mov
call
dec
jmp
in
sub
imul
into
bound
cmp
shrb
pop
sub
insl
aad
imul
in
cld
pop
inc
push
or
test
mov
xchg
fldenv
imul
nop
adc
enter
adc
xchg
out
inc
push
lods
pusha
push
jmp
cwtl
stos
sti
int3
int3
movsb
ret
mov
pop
sbb
cmp
in
notl
push
mov
lcall
aam
xchg
sub
xchg
sub
sahf
fucom
jl
lods
std
xchg
stc
pusha
jle
test
lret
mov
gs
xchg
hlt
pop
inc
mov
scas
inc
jecxz
inc
fmul
sbb
outsl
sbb
pop
scas
mov
popf
mov
test
mov
push
fistpl
dec
es
and
popf
push
jne
cmpsb
xor
xor
popf
loopne
inc
cmp
inc
bound
push
call
lods
outsl
sahf
xor
out
xorl
mov
jne
mov
xor
ret
shl
pushf
ret
hlt
mov
adc
cmp
ja
add
inc
inc
iret
repnz
push
mov
shll
ret
fildl
or
xchg
xchg
pop
jbe
mov
addr16
mov
mov
mov
xchg
jb
push
in
imul
xchg
sub
mov
mov
repnz
cmpsl
movsb
shlb
or
lds
and
jbe
notb
pop
or
jg
jg
push
daa
mov
insl
cmp
scas
lea
jg
jecxz
push
cmp
dec
lock
fisubrs
mov
fldenv
into
test
add
psubq
out
dec
in
mov
mov
pusha
xor
stos
or
sbb
call
lret
sub
fs
mov
les
pusha
shll
jo
or
lds
ds
jmp
int
arpl
adc
sbbl
mov
popf
mov
inc
loope
movsb
repnz
test
pop
jb
or
scas
xchg
xor
ret
repz
mov
cmc
loopne
mov
fimull
in
es
popf
adc
push
lods
pop
negb
aad
es
or
cmp
pop
iret
sbb
in
aad
inc
aas
lds
in
jns
cmp
jo
dec
outsb
popa
stos
fucomip
pusha
fcmovnu
jne
sti
out
xorl
adc
mov
out
dec
push
push
mov
sub
and
frstor
mov
pop
jp
rcll
movsl
xchg
jne
mov
out
out
fcomps
jbe
fnstsw
dec
lods
adc
jnp
out
push
xchg
push
bswap
jne
xchg
xor
mov
and
shrb
push
mov
mov
adc
pop
fwait
lret
push
xchg
scas
xor
test
or
lcall
insb
push
and
sbb
fcomi
or
ret
or
pop
repnz
int
or
pop
xchg
mov
cmc
and
clc
iret
mov
add
pusha
or
ds
outsl
push
xchg
sub
push
push
sbb
jl
push
inc
scas
cmp
in
imul
push
out
out
jg
or
xchg
lcall
fsubl
inc
push
sahf
mov
lret
icebp
mov
jbe
inc
pop
push
sub
aas
mov
in
out
sub
ljmp
rclb
je
pusha
cli
arpl
sub
jbe
movsb
add
or
test
mov
int3
mov
cltd
lret
lret
movsl
xchg
jp
popl
push
jnp
xor
jecxz
cmpsb
jbe
jge
imul
dec
mov
pop
dec
mov
loope
pop
pop
pop
rorb
les
xor
lret
ja
in
cld
outsb
adc
lock
sbb
jo
jge
int3
lret
andl
clc
mov
cmp
push
push
cld
cmp
mov
xchg
ret
mov
iret
xor
ret
push
lret
dec
jecxz
aaa
adc
sti
cmp
sbb
sti
dec
loopne
push
bound
cmpb
test
or
sub
adc
insb
subl
ljmp
inc
push
ficompl
arpl
dec
ljmp
and
stc
sub
xchg
or
mov
mov
jo
scas
sarb
add
test
ds
push
and
ds
adc
fsubl
movsl
mov
and
ja
andb
test
jecxz
inc
cmp
inc
fstl
mov
repz
jbe
mov
xchg
or
lods
sbb
scas
outsb
inc
pop
inc
ret
push
cmp
jecxz
movsl
inc
and
sub
fstpt
outsl
and
pop
es
dec
shl
dec
push
fpatan
mov
pop
push
sbb
call
ds
jl
sub
rcll
lds
push
xor
inc
mov
or
aad
mov
or
cmpsl
insl
test
test
jmp
push
lds
and
and
out
testl
test
nop
pop
insb
out
xorb
cmpsl
aaa
add
nop
daa
mov
or
dec
inc
jmp
cmp
mov
stos
xchg
pop
cmc
push
inc
jo
cmp
push
inc
fmull
test
xor
push
jl
loopne
shl
sub
divb
mov
ficomps
mov
sti
in
arpl
scas
cs
mov
aaa
stos
adc
shll
push
dec
adc
int
ja
lcall
cmpsl
dec
jae
outsl
sub
fbstp
fldt
aaa
mov
stc
mov
scas
push
or
jae
pop
xchg
int
or
fs
scas
jns
sahf
sub
mov
shr
rcrl
pop
or
sub
dec
dec
pop
in
shll
sbb
xor
movsb
sub
dec
sub
sbbb
maxps
pop
pop
loope,pt
jb
insl
test
movlps
iret
xchg
jp
pop
sub
fwait
xchg
xchg
outsl
push
cld
push
cmp
jle
test
xchg
mov
mov
sub
out
mov
pop
cmp
adc
mov
divb
jno
test
outsb
mov
xor
inc
or
and
call
and
lods
lods
xchg
dec
add
sub
shll
subl
dec
add
jmp
out
out
inc
or
inc
loopne
jnp
push
popf
mov
jge
out
push
pop
jno
ds
fucomip
sub
adc
adc
aam
xchg
cmp
mov
push
mov
jl
push
scas
pop
dec
decl
dec
jb
sahf
jns
pop
inc
jne
es
addb
cmpsl
das
cmc
or
sbb
cmp
popf
cmp
enter
push
mov
jecxz
into
dec
dec
data16
gs
repnz
arpl
jecxz
sub
pop
divl
aaa
add
pop
xchg
adc
rcrl
sbb
xchg
sub
mov
jp
dec
out
mov
mov
pop
jmp
mov
xchg
xorl
dec
push
cmp
test
push
lcall
cmp
divb
sbbb
outsb
sbb
ja
nop
push
sub
rcll
sub
insb
sbb
cltd
xor
fidivs
imul
cmp
jl
inc
pop
jno
add
sbb
nop
mov
ljmp
xor
rclb
inc
xor
or
rclb
sbb
xchg
jp
cmp
sub
mov
pop
adc
mov
xor
aad
cmp
sbbb
or
push
lea
push
sub
jo
repz
push
out
repnz
jp
or
fmuls
mov
insl
xchg
sti
jp
mov
pop
jmp
mov
xorl
imul
call
adc
negl
adc
sti
push
sbb
push
and
jp
fidivs
int3
push
jno
push
push
jmp
and
pop
shlb
orb
pop
andb
or
sti
mov
push
push
sub
sbb
dec
adc
outsl
shr
test
lret
dec
jno
aad
mov
push
lret
aam
and
sbb
ja
mov
nop
das
lea
jb
cs
pop
fsub
mov
fs
cmpl
rcl
cmpb
stos
mov
jge
cmp
fnsave
xor
push
and
sti
cmp
addb
inc
mov
dec
add
add
stos
jle
and
stc
dec
jmp
mov
xchg
adc
lds
fisttpl
sbb
sbb
sbb
xchg
jb
adc
adc
adc
divl
jns
in
xchg
mov
xor
cmpsb
je
jae
or
mov
sbb
jo
jge
xchg
push
mov
adc
cwtl
pushfw
popa
mov
xor
shl
dec
lea
xor
rcll
loopne
outsb
aam
and
cmp
mov
mov
cbtw
mov
pop
adc
shrb
jbe
adc
fmuls
mov
shll
into
pop
mov
popw
in
xchg
xchg
adc
push
fstp
andl
add
fnstsw
mov
enter
ret
cmc
xor
mov
or
or
mov
and
xchg
enter
mov
and
jno
and
jge
ret
in
ret
test
mov
mov
leave
push
sti
out
mov
push
fldenv
xchg
stos
push
mov
notb
mov
divl
call
push
xchg
xor
jns
mov
pusha
fistl
add
rorl
scas
sbb
loope
ficoml
mov
and
arpl
or
jae
sub
mov
cmpsl
out
mov
dec
mov
add
movsl
fs
inc
enter
cld
jg
es
and
xchg
stos
xchg
loope
js
add
outsl
mov
imul
adc
or
imul
lods
test
cs
inc
data16
in
loopne
xor
imul
mov
dec
lods
decl
mov
cmp
test
mov
mov
sub
mov
leave
pusha
fs
lret
test
es
xchg
push
fsubrs
mov
inc
jmp
jecxz
lret
mov
aam
sbb
sub
insl
ja
jp
mov
rcrl
out
movsl
jbe
add
xor
stc
jae
nop
adc
push
jb
cmp
push
outsl
push
rolb
xlat
std
xchg
jns
movsl
incb
lahf
mov
int
sbb
pop
sbb
or
jl
pop
jge
mov
imul
and
adc
leave
add
push
imul
movsb
push
sub
clc
pop
jge
popf
cmp
push
cltd
mov
push
leave
mov
and
sub
cmp
cmp
inc
jmp
daa
mov
hlt
or
sbb
aad
dec
inc
mov
sbb
jo
jns
add
mov
icebp
sub
pushf
dec
dec
mov
sti
and
push
cmp
pop
rcrl
mov
cmp
xchg
add
testl
lahf
rolb
loop
cmpsb
adc
fwait
clc
test
negb
cltd
test
cmp
sti
movsb
repnz
cmp
jle
popf
and
mov
test
out
test
test
lea
movsl
jae
mov
cmpsl
sahf
mov
pop
adc
bt
loop
es
xlat
outsb
js
and
sbb
pop
pop
lods
popa
int
fisttpl
and
jb
andl
aaa
or
mov
dec
ja
jnp
lods
mov
pushf
xor
sub
mov
movsl
cmpsb
cld
jle
sbb
add
xchg
jp
inc
pop
pop
cmpsl
nop
pop
mov
sbb
inc
sub
test
inc
ja
loop
dec
fbld
jb
lcall
pop
addb
sub
out
add
jmp
out
pop
mov
adc
in
mov
cmp
mov
aad
pop
mov
cli
or
push
add
lcall
arpl
dec
fs
push
adc
clc
dec
mov
outsl
mov
shrb
add
pop
call
mov
in
dec
inc
mov
mov
pop
lret
push
and
sbb
stc
aaa
push
out
sti
xchg
movsl
les
xor
pop
dec
mov
aam
adc
imul
fimuls
sbb
mov
aas
dec
ficompl
movsb
sub
push
das
mov
stc
in
das
shrl
inc
ljmp
cmpsb
jecxz
ffreep
aas
push
add
popf
mov
aas
mov
jno
push
fidivrs
fisubl
pop
outsb
xor
mov
cmp
sub
xchg
test
rolb
insb
mov
add
repz
or
and
jl
lahf
insl
sub
push
or
xlat
loopne
sbb
push
fnstenv
out
js
rcl
das
add
mov
cmp
bound
mov
add
pusha
push
or
imul
pop
mov
into
rorl
add
insb
ljmp
lods
push
loope,pt
inc
iret
xor
fildll
add
in
hlt
cs
js
lahf
popa
cld
fdivrs
mov
push
push
std
cwtl
jbe
adc
imul
jne
push
lret
adc
fdivrl
decl
jl
popa
jno
jle
orl
dec
jl
stc
dec
and
jge
mov
cmpb
dec
cmp
imul
push
lcall
movsl
cmp
or
pop
pop
mov
xchg
xor
icebp
pusha
cmpsl
push
pop
insl
ficomps
mov
mov
pop
adc
insb
pop
aam
mov
test
sbb
and
dec
add
fnsave
icebp
add
shlb
in
icebp
test
jp
enter
js
push
in
dec
outsl
xor
push
push
push
mov
dec
fnstsw
mov
pop
and
int
lds
ljmp
pop
jno
lods
jne
or
lea
mov
adc
in
jmp
push
xor
lods
pop
mov
dec
scas
xor
movsb
sub
cmp
sub
dec
pop
popf
das
mov
sub
xchg
mov
and
ret
mov
cld
lret
sub
ss
mov
jecxz
pop
repnz
xor
popf
invd
sub
mov
mov
add
lea
push
mov
sub
cs
mov
ss
or
push
iret
loop
sbb
inc
dec
lods
dec
add
ror
pop
inc
rclb
pop
les
int
in
add
mov
stc
lea
filds
setno
test
lret
ljmp
or
test
cltd
xchg
and
js
jl
mov
xchg
sbb
dec
pop
aaa
into
lea
insl
mov
adc
dec
rcrb
mov
mov
loope
mov
push
mov
rol
push
mov
dec
pushl
xchg
sbb
add
repnz
and
jns
aad
rorl
negb
cwtl
push
or
mov
stc
nop
fst
and
mov
je
clc
shll
jl
sti
es
popf
xchg
add
mov
mov
push
sbbl
xchg
and
pop
fbstp
mov
pop
aad
insl
inc
shlb
mov
pop
cmc
inc
stos
ljmp
mov
push
and
out
mov
mov
subb
push
jmp
pop
out
aas
cltd
push
out
inc
adc
push
xor
rcrl
sub
mov
xchg
sub
movb
pop
arpl
ss
xchg
out
inc
push
mov
bound
outsb
lock
jl
xor
mov
push
jo
or
shlb
sbb
out
pop
movsb
ret
jp
mov
pop
sbbl
mov
xchg
and
ljmp
xor
aas
xlat
pop
adc
xlat
fstl
std
cmpsl
mov
scas
jl
pop
fwait
jp
inc
in
and
push
js
pop
outsb
cli
push
hlt
in
jg
push
aaa
aad
xor
dec
loop
xor
imul
andb
add
pop
leave
test
xor
add
inc
lahf
fistpl
inc
fidivrl
fisubs
daa
xchg
jnp
lret
jge
lock
int
mov
mov
add
dec
jg
xchg
push
or
out
mov
fildll
outsl
mov
add
mov
sbb
fmuls
xor
dec
jg,pn
out
lahf
dec
cld
int
lock
dec
roll
iret
jl
divl
jp
inc
and
int
ret
mov
lret
das
mov
mov
lods
sub
sbb
xor
mov
adc
lds
rolb
in
sbb
dec
mov
sub
inc
xor
aam
fsubr
or
jg
pop
mov
mov
and
add
jl
mov
add
ret
add
fadd
cmp
dec
call
or
enter
cli
bound
std
ss
imul
ja
push
shrl
sbb
addr16
fwait
lods
mov
ret
pop
xchg
hlt
inc
incb
push
addr16
dec
imull
jg
insb
out
mov
pop
xchg
inc
mov
dec
fs
fsubr
pop
andb
cwtl
inc
aaa
enter
push
push
leave
sub
xchg
pop
mov
jo
ss
inc
cmp
iret
adc
xor
ds
nop
loope
push
adc
push
aas
shrl
insl
push
lcall
sbb
add
mov
inc
and
fistl
xor
data16
mov
cmp
pop
adc
dec
pop
into
jno
xchg
popa
cmp
bound
scas
jg
mov
jnp
mov
lods
inc
out
test
scas
arpl
movsb
fidivs
icebp
movsb
outsl
outsl
add
fistpll
and
ss
push
dec
jecxz
bswap
mov
pop
popa
cmp
mov
clc
mulb
outsb
adc
mov
icebp
adc
cwtl
xchg
and
mov
adc
push
dec
and
jbe
popf
pop
cmc
into
aaa
test
and
mov
das
inc
sub
cmp
enter
push
scas
aas
jle
js
pusha
xor
in
mov
loope
mov
jecxz
dec
test
cmp
xchg
sub
pop
test
pop
lock
cld
cmp
lock
jo
test
xchg
adc
into
js
fstpt
push
mov
enter
stos
inc
test
enter
dec
fisttpll
arpl
xchg
in
loop
cwtl
scas
pop
repz
test
out
mov
inc
and
push
in
xchg
je
aas
shlb
mov
movsb
push
shll
adc
jle
xor
xchg
inc
out
es
adc
je
mov
jbe
loope
adc
imul
mov
pop
sub
mov
ja
stos
sbb
popf
shlb
call
cmp
ret
inc
inc
mov
pushfw
ds
push
rolb
jp
push
lods
in
out
inc
jno
lea
daa
rolb
push
adc
ficompl
mov
xor
push
ljmp
fmuls
sbb
aas
test
test
jmp
or
stc
ss
inc
cmp
mov
in
xchg
mov
es
ret
testb
imul
lret
flds
ds
mov
jo
in
dec
and
jae
lcall
data16
xchg
mov
pop
lahf
addb
imul
clc
xchg
inc
subl
xor
fdivrp
xchg
mov
jp
mov
in
std
rcl
addr16
out
lock
out
add
cmp
jns
lods
aaa
aam
pop
pop
imul
mov
lock
in
es
mov
mov
inc
ja
push
shl
test
xchg
movsl
roll
jl
sbb
sti
fiadds
push
mov
xchg
sub
sbb
gs
mov
mov
add
pop
outsl
push
nop
adc
sbb
cmp
adc
mov
mov
iret
inc
add
xor
jae
mov
fcoml
cwtl
repz
mov
popa
test
fidivs
mov
hlt
insb
fs
xchg
stc
push
or
mov
cmp
mov
sbb
negb
mov
mov
sub
shlb
repz
lods
and
mov
mov
hlt
add
shrb
call
out
scas
jecxz
adcl
push
xor
push
pusha
mov
lds
or
or
sub
cmp
adc
mov
xorb
sbb
lcall
mov
dec
test
adc
mov
pop
es
data16
int
sbb
popa
hlt
mov
fsub
push
test
jl
pop
clc
sbb
shlb
or
inc
push
subb
out
das
sub
cmc
mov
inc
adc
repz
je
jle
push
xchg
mov
call
cli
arpl
int3
int
mov
fistpll
leave
insl
add
cmp
mov
xor
dec
or
sbb
cmp
adc
enter
lock
adc
lock
cmpsb
fsubs
mov
dec
loop
lcall
aam
xor
das
add
test
shlb
add
aam
or
pop
test
add
dec
loop
lock
or
test
inc
adc
loopw
cld
adc
inc
fldcw
sub
icebp
cmp
adc
dec
dec
push
xor
lahf
dec
andb
lock
jb
cmp
dec
ja
pop
stos
imul
add
aam
xchg
jno
fidivrs
repnz
pop
lcall
arpl
pop
les
push
lods
add
jno
xor
insl
scas
jb
loope
adcb
adc
shrb
punpcklwd
cmp
pop
cmc
mov
jbe
leave
push
adc
fcoml
das
add
jne
daa
es
jbe
es
rcrl
push
push
orl
aad
or
jnp
mov
dec
pop
xchg
repnz
aaa
jle
add
test
mov
pop
test
jb
xchg
jae
loope
cld
or
or
icebp
adc
jle
xlat
repnz
ss
sub
mov
cmpsl
push
ffreep
dec
arpl
test
adc
dec
gs
mov
inc
pusha
shrb
shlb
inc
data16
ret
cmpsb
push
lret
dec
movsb
jge
enter
pop
fisubrs
push
jo
andl
in
outsb
adc
pop
jg
cmpb
lock
mov
fsts
add
rcrb
xor
mov
sti
cmpsb
out
lahf
xchg
or
dec
fildl
dec
lcall
and
inc
test
in
addr16
loopne
inc
icebp
insb
inc
xor
sub
call
out
int3
outsb
add
xor
lret
pop
xchg
mov
sub
inc
sbb
lret
xchg
pop
inc
jno
test
xor
lods
sbbl
int
imul
out
push
sbb
dec
dec
adc
jg
jne
cmp
repnz
push
sbbl
sti
pop
outsl
sbb
mov
adc
and
or
xlat
pushf
and
xchg
pop
test
pushl
lret
cld
fnstenv
push
inc
andb
sbb
lock
dec
dec
pop
clc
jo
movsb
rcrb
enter
inc
pop
sub
mov
jno
xchg
push
call
push
and
adc
adc
mov
add
dec
sub
adc
out
sbb
dec
ds
cs
mov
mov
sysret
mov
inc
fidivs
in
xor
lods
gs
loop
sti
xchg
jmp
imul
mov
dec
cmpsl
idivl
ror
rcrb
lret
cli
dec
and
xor
popf
mov
jnp
push
scas
or
dec
test
pushl
imul
cmpsb
ret
sbb
push
imul
call
les
lds
and
jae
xchg
dec
in
ss
rclb
xchg
jo
dec
imul
out
lret
xlat
push
pop
jns
stc
mov
fildl
pop
out
sbb
xchg
aas
jbe
test
addr16
shll
popa
fistps
mov
sti
cmp
imul
std
lea
imul
into
rcrb
lock
jmp
and
inc
dec
lock
lds
shlb
inc
pop
cli
je
push
gs
adc
pop
inc
in
stc
jbe
lds
ret
sbb
sbb
ljmp
sub
dec
mov
cmpsb
aam
test
mov
in
pop
dec
push
mov
rcll
std
pop
pop
add
mov
popa
out
sub
jb
pop
jle
leave
jne
push
xchg
sub
dec
adc
pop
outsl
and
sti
into
ja
add
test
cltd
xchg
ret
cltd
mov
insb
sub
and
clc
insl
mov
in
ret
pop
jmp
mov
in
inc
nop
xchg
adc
pop
test
hlt
fadd
sub
mov
mov
pop
aad
outsb
cmp
adc
jae
or
sbb
in
pop
push
mov
cmpsb
cmp
mov
mov
rol
adc
or
xchg
and
ss
xlat
into
sub
pop
orb
dec
cwtl
pop
pop
out
dec
hlt
out
xchg
sbb
fwait
or
cmp
or
jmp
ja
fidivrl
sarl
cmc
outsb
popa
negl
shlb
cmpb
adc
ret
outsb
mov
fists
sar
pop
sbbl
loop
js
movsb
sub
adc
lea
xor
dec
sbb
fmulp
lock
mov
xchg
pop
push
flds
cli
and
fsubr
aad
sub
std
sub
jg
pop
sub
ret
lret
addb
daa
mov
sarb
sbb
jnp
adc
and
adc
insb
mov
xchg
sbb
das
dec
aad
sbb
and
jae
lahf
outsl
sbb
xor
inc
xor
clc
loop
movsb
ror
les
push
hlt
inc
test
aad
testl
lahf
lock
mov
add
mov
icebp
gs
imul
and
or
adc
mov
jecxz
ljmp
inc
in
jle
outsb
mov
test
insl
cwtl
aad
fildl
cmpsl
xchg
cs
and
out
sub
icebp
jge
into
frstor
popf
loop
cmp
cld
adc
pushf
mov
les
dec
insl
push
jb
sbb
aas
jnp
int3
mov
push
push
gs
inc
pop
enter
jnp
int
sbb
movsl
or
es
jecxz
jns
outsb
les
int3
mov
mov
ljmp
cmp
scas
call
das
inc
or
test
fstps
stos
sub
jg
xchg
and
pop
dec
lods
cmp
out
cwtl
mov
ret
add
push
jo
cmp
lock
sub
push
inc
jne
push
shr
push
inc
adc
xor
pop
mov
lods
loop
push
in
inc
sbb
repz
pop
pop
imul
xchg
jb
shll
leave
pusha
xchg
xchg
sbb
testb
arpl
je
add
es
iret
or
fadds
mov
stc
addb
ja
jp
mov
lcall
xor
into
jno
sahf
pop
adc
sub
mov
ss
rorb
lret
push
outsb
loop
sbb
jecxz
mov
outsl
jbe
xchg
test
dec
rorb
movsl
test
jecxz
in
test
dec
xchg
mov
sahf
adc
mov
sbb
sub
out
push
mov
cltd
sub
testb
es
pusha
lcall
mov
mov
fwait
xor
adc
lea
or
jmp
inc
sbbb
push
scas
cmp
int
mov
ret
mov
into
or
pop
icebp
pop
repnz
mov
cli
test
stc
jl
int
sbb
mov
push
xchg
scas
nop
lock
test
aad
mov
inc
out
jle
rol
xor
arpl
pop
push
imul
lret
cld
pop
lret
lds
sbb
cmp
lods
push
or
testb
lock
ja
push
dec
cmp
jno
push
outsb
push
xchg
mov
jae
cmc
sub
and
pop
out
mov
sahf
jnp
ja
lds
pop
and
and
insb
and
cmp
jns
jno
jne
addr16
cmpsb
jnp
insl
pop
idivb
sub
movl
iret
mov
pop
addr16
dec
fmul
sahf
out
je
movsl
cmc
push
scas
loopw
mov
sbb
inc
xchg
iret
dec
add
jnp
sar
fwait
push
leave
sbb
mov
and
xchg
jmp
aad
jae
das
mov
and
imul
sub
xor
std
ljmp
stos
pop
fidivrl
shld
jl
pop
xor
inc
push
jmp
cmpsb
jp
jae
neg
sbb
sub
pop
cmp
jno
xchg
push
adc
fists
inc
gs
cmc
mov
mov
jp
push
and
in
pop
jne
outsb
loopne,pn
or
sub
loope
out
or
nop
adc
mov
stos
fs
jb
lahf
xchg
push
lods
mov
pop
lret
xor
xchg
nopl
cwtl
mov
mov
cmp
cwtl
out
shll
shlb
stos
inc
mov
into
mov
cmp
mov
jbe
mov
in
mov
pusha
cmp
out
cltd
mov
mov
jle
mov
dec
inc
lds
fbld
je
sub
mov
inc
lcall
aad
or
lods
mov
mov
aad
xchg
test
cli
sbb
mov
mov
shrl
cs
sbb
ss
enter
mov
pop
scas
lods
ret
sbb
cmpsb
adc
roll
subb
adcb
adc
dec
xchg
inc
cmpsb
fbld
popa
jno
push
jl
lea
gs
sbb
lods
cmp
xor
adc
test
cmc
dec
push
aam
pop
adc
out
jbe
fldenv
outsl
loop
or
dec
xchg
mov
push
push
mov
test
push
nop
or
fisubrs
or
jae
jb
dec
in
xchg
cmp
das
out
add
int
lret
daa
adc
push
ja
out
test
jno
shlb
xlat
push
jae
pushf
imul
mov
mov
fwait
and
fstpt
push
fsubs
in
lret
jno
cmp
iret
and
inc
push
push
loopne
dec
dec
cmp
jbe
cwtl
scas
int
sbb
mov
mov
das
inc
pop
and
stc
and
insb
cli
mov
sbb
lods
dec
arpl
inc
push
jl
int3
mov
ret
mov
shrb
jle
jo
or
mov
mov
xor
arpl
paddd
and
test
lret
bound
bound
cmp
dec
adcl
and
dec
mov
stos
mov
lret
lret
rcll
imull
sub
movsl
cmp
cmp
insb
jne
adc
adc
pop
cmpsb
push
or
sub
cmp
pop
scas
sbb
cmp
xor
jmp
stc
fwait
and
lret
out
xchg
cmpps
mov
inc
in
adc
mov
aaa
out
movsl
rclb
in
mov
outsb
rorl
lds
pop
cmc
leave
lcall
jns
ja
gs
aaa
pop
inc
adc
sub
imul
adc
push
inc
xor
xchg
mov
js
adc
push
mov
or
lods
out
lret
std
rorb
ret
sbb
sbb
insl
jg
cmp
dec
pusha
int
mov
jg
lea
sbb
lock
xor
test
sub
push
mov
inc
out
inc
jecxz
iret
gs
ja
dec
xchg
in
add
add
mov
cld
cli
mov
fs
andl
jne
jbe
test
pop
mov
lods
sbbl
or
cwtl
or
mov
pop
push
sbb
pop
adc
mov
cmp
mov
sub
sahf
dec
daa
mov
push
test
and
cmp
pop
sub
movsb
add
arpl
pushf
fbstp
cmp
mov
rorl
and
mov
mov
pop
je
andb
fsub
cmp
mov
jb
pusha
cmp
xchg
sub
pop
add
dec
xchg
adc
add
mov
fidivs
mov
push
jb
mov
dec
mov
inc
aas
push
repz
or
cmp
push
mov
bound
inc
test
lcall
pop
out
lret
mov
jbe
xchg
jg
testl
dec
add
mov
cmpsb
mov
jae
sub
in
aam
enter
or
xchg
jl
mov
dec
sbb
shlb
fnstcw
adc
leave
and
call
das
push
orb
inc
es
loop
inc
mov
jmp
sbb
mov
cld
sub
movsl
inc
call
fs
cltd
outsb
in
mov
addr16
cmp
add
sbb
fistps
daa
jge
ds
sub
or
cmp
mov
pop
sub
inc
aam
lods
fdivp
adc
or
ret
shr
pop
jg
data16
mov
jne
xchg
hlt
dec
out
test
adc
cmpsb
std
sub
es
cmpsl
movb
cmp
pop
andl
sub
ljmp
sub
jbe
sbb
aad
daa
pop
popa
movsb
sub
push
push
dec
imul
lahf
aas
adc
mov
dec
fs
fwait
cmp
lret
cmp
and
jmp
movsl
xchg
adc
or
push
bswap
loopne
imul
push
arpl
sub
pop
outsb
sti
dec
out
add
mov
sub
xor
sahf
cmp
jb
imul
sti
add
jne
xlat
mov
loope
and
push
pop
shl
aaa
add
pop
sahf
dec
cmp
mov
popa
xor
mov
push
imul
ss
pusha
pop
mov
inc
int
lods
sub
scas
movb
stos
out
cmp
divl
add
repnz
xchg
iret
data16
cs
add
stos
outsb
cmc
test
rcrb
test
divb
addr16
jnp
mov
lahf
dec
cmp
test
imul
icebp
xchg
jle
les
loopne
pop
xor
jns
push
inc
fiaddl
fwait
popa
clc
int3
pop
xchg
adc
push
inc
pop
jnp
push
pop
xchg
insb
ret
out
adc
and
dec
cwtl
outsb
sub
cmpl
sub
movsb
ja
or
jnp
mov
ficomps
mov
xor
orl
sbb
mov
mov
out
test
cmp
std
lods
enter
fdivrp
pop
repz
add
sub
cmpl
mov
adc
mov
stos
cmpsb
test
mov
mov
call
int
xchg
jno
jecxz
cmp
mov
ficoms
sub
outsl
push
xor
inc
loopne
mov
pop
mov
shl
pop
sub
mov
pop
pop
sub
lods
repnz
and
xchg
cmp
outsb
pop
cmp
jmp
or
mov
popa
imul
jne
int3
pop
add
cmp
xor
loopne
mov
in
int
insb
stos
scas
cmp
loopne
mov
and
jnp
inc
or
faddl
arpl
ret
shl
hlt
adc
mov
cmpsl
adc
sbb
pop
and
and
push
roll
cld
loop
inc
adc
or
cmp
xchg
addr16
fdivl
adc
ret
rcll
mov
movsb
cwtl
add
or
and
push
movsb
dec
je
aam
mov
mov
mov
xor
sub
sbb
andl
hlt
or
mov
sub
cs
les
add
test
rorb
outsl
imul
mov
int3
jecxz
mov
and
lods
xchg
jecxz
xor
xchg
pusha
cmpsb
aas
dec
sbb
mov
cmp
adc
clc
add
shl
sbb
into
fwait
popa
mov
push
jns
inc
loope
dec
pop
mov
aas
pop
sbb
jl
fcomp
lcall
out
in
aad
popa
jg
adc
fs
ret
inc
out
cwtl
dec
push
popf
fwait
std
mov
or
pushf
test
sub
leave
int
shr
xor
mov
push
adc
fwait
test
mov
mov
cmp
mov
mov
dec
push
clc
push
jecxz
scas
shl
loope
push
in
sbb
sbb
pop
xor
inc
lret
cmpsl
js
mov
mov
adc
inc
hlt
andb
mov
push
shlb
add
mov
in
push
mov
shr
cmpsl
or
push
add
test
cmp
movsl
cmp
movsl
daa
rolb
xchg
mov
xchg
mov
test
lret
shlb
aam
and
stos
xchg
ds
dec
clc
in
push
and
push
insl
stc
movsb
cwtl
add
mov
and
jle
adc
out
or
push
clc
subl
sub
sti
std
push
and
fs
lret
enter
and
iret
loope
je
inc
pop
jmp
pop
push
pop
push
xchg
inc
adc
dec
aam
push
iret
adc
aam
in
inc
mov
cmp
enter
and
mov
and
and
adc
jg
sbb
mov
test
loop
ficoms
mov
jmp
mov
sbb
loopne
std
xchg
pop
adc
rcrb
pop
cmp
sub
popf
push
inc
mov
insl
push
mov
adc
out
xchg
and
fmul
add
jae
and
xchg
mov
fmul
mov
scas
sbbb
inc
adc
jae
mov
nop
xchg
aad
xor
push
in
mov
pop
test
mov
add
fbstp
gs
nop
or
lret
push
scas
out
adc
stos
mov
pop
cltd
hlt
aam
js
sbb
or
cmp
imul
cs
ret
jns
je
dec
lcall
nop
mov
es
dec
nop
jecxz
addl
mov
lods
dec
fsubrl
sbb
inc
loope
sbb
adc
push
aaa
adc
dec
jae
lcall
dec
inc
cld
cmp
mov
and
ss
mov
inc
out
adc
mov
shlb
shll
aam
pop
or
cmpsl
fnsave
pop
mov
jne
mov
scas
roll
lahf
fsubr
mov
ss
into
movsl
xchg
push
rorl
lahf
pop
mov
cmp
push
daa
add
out
cmpsl
lcall
in
mov
and
outsl
inc
es
sub
fcmovnb
shrl
cld
pop
push
aam
mov
outsl
lret
adc
add
mov
inc
ss
cld
xchg
out
je
sbb
inc
lds
int3
pop
mov
shll
or
cs
loope
fcompl
outsb
lods
inc
mov
add
push
shlb
sub
push
xchg
je
loope
shlb
decb
mov
pop
insl
add
mov
mov
xchg
dec
mov
add
sub
lret
lret
mov
mov
mov
or
dec
mov
mov
cmp
je
out
gs
xor
inc
jge
nop
jmp
mov
std
mov
mov
icebp
xchg
ret
pop
sub
imul
xchg
andb
push
mov
jbe
repz
test
mov
pop
popa
xor
out
dec
xor
cwtl
je
and
dec
xchg
jg
xor
mov
adc
js
adc
enter
inc
stos
jge
ret
jne
or
push
and
dec
jno
cmp
inc
add
mov
mov
inc
jecxz
gs
pusha
add
sub
pop
pop
jg
ja
lcall
jne
in
das
lods
lcall
sub
fcomps
jns
push
sub
pop
xor
jp
les
neg
lods
faddl
lret
jo
aaa
cmp
lahf
insl
sub
aad
pop
daa
mov
or
jb
jecxz
jb
out
in
jae
pop
add
mov
pop
xchg
aas
push
pop
mov
ljmp
pop
rol
or
sub
cmp
sbb
mov
lock
dec
add
inc
data16
test
push
nop
int
rorl
sbb
je
cmp
repz
lea
in
stos
or
leave
mov
leave
mov
mov
dec
or
xor
dec
loop
movl
popf
jge
xchg
mov
in
inc
mov
pop
out
outsb
test
jb
hlt
scas
pop
add
sub
sub
xor
adc
push
inc
add
repz
mov
arpl
mov
dec
dec
xchg
or
cmp
mov
loope
and
imul
pop
rorl
cmp
jle
sub
pop
sbb
arpl
mov
loopne
mov
movsl
jns
lcall
mov
jns
ret
mov
addr16
cs
add
movsl
stos
lea
xchg
aas
sti
int
xchg
lcall
push
jg
and
and
jecxz
dec
dec
ja
or
in
sahf
stc
cmpsl
mov
fnstenv
out
jl
enter
mov
fildll
xchg
pop
icebp
out
sub
and
mov
push
xchg
push
sbb
mov
lea
pop
cltd
xlat
movsb
icebp
xlat
cmp
dec
xchg
cmp
and
out
adc
pop
inc
scas
movsb
mov
jle
or
lahf
mov
push
js
inc
andb
outsl
insb
jg
mov
jg
nop
cmp
fisttpll
les
adc
loop
cltd
push
lcall
jp
push
outsl
nopl
pop
fildl
leave
lds
dec
mov
aaa
mov
leave
dec
adcl
push
aaa
push
nop
jne
ds
fwait
mov
aad
rcrb
push
fwait
dec
cmp
pop
js
inc
push
movsl
sub
movsl
mov
outsl
jo
mov
add
add
lods
out
add
mov
test
movsb
adc
clc
nop
mov
loope
cmp
jl
jo
mov
add
adc
scas
call
faddp
sahf
push
je
cwtl
stos
lods
das
lds
aas
dec
sbb
pop
or
insl
cld
or
fdivrl
lret
inc
push
repz
push
insb
aam
ret
cmc
cwtl
xor
sub
mov
test
push
xor
outsl
cmp
pop
divb
xchg
inc
push
inc
inc
ljmp
cmp
fcomps
pop
scas
aas
jmp
andb
cmpsl
negl
fsubl
push
sub
into
loop
in
jl
sahf
popa
in
fwait
jle
scas
mov
push
sbb
jnp
std
lea
dec
xchg
popa
sahf
adcb
adc
ss
push
mov
push
call
test
jo
andb
lahf
sahf
pop
xchg
mov
dec
pop
push
jg
sbb
xor
in
push
sub
sub
mov
fnstenv
xchg
popf
in
fldenv
mov
push
test
movl
lret
and
aad
pop
inc
lcall
in
push
push
push
ficoms
add
or
fisubs
into
data16
movb
shr
inc
out
push
rcrl
bound
sbbb
cmpb
pop
repnz
cmp
cmp
clc
add
mov
sbb
cli
pushf
push
sarl
pop
pop
das
jbe
jp
lods
scas
in
orb
movsl
push
sub
mov
popa
dec
add
lahf
dec
sbb
mov
jg
bound
xchg
loopne
int3
or
adc
dec
pop
mov
or
adc
sbb
mov
lret
arpl
mov
and
aas
mov
rol
pop
add
push
inc
jae
test
xor
adc
or
cld
xchg
test
sbb
dec
dec
cmp
cltd
sbb
pop
sbb
sahf
or
jbe
mov
in
lods
cli
das
mov
mov
xor
cltd
pop
push
outsb
xchg
mov
shl
repnz
inc
ficomps
push
cld
outsl
add
mov
icebp
cmp
sbb
shr
xchg
jbe
out
mov
adcb
bound
mov
mov
ljmp
test
sub
push
in
mov
insl
jle
clc
ss
repz
call
lret
pop
aas
jmp
out
add
adc
mov
enter
nop
dec
push
aas
adc
imul
addl
or
in
std
stos
jo
shrb
fwait
loope
add
loope
fdivp
jl
cwtl
lds
lock
push
cmp
ljmp
test
fisubrs
cmpl
addr16
leave
pop
dec
in
mov
cltd
scas
in
repnz
test
subb
mov
or
pop
mov
bswap
pop
dec
push
rcrb
push
ja
cwtl
pop
xchg
xlat
insl
negb
cmc
jb,pt
cmp
outsl
pop
jmp
xor
xor
mov
fwait
jbe
xor
jg
fnstcw
cmp
leave
push
xchg
test
mov
ljmp
nop
adc
les
das
addr16
jge
lea
pop
adc
and
mov
pop
push
mov
sbb
xor
int3
aam
cwtl
push
into
mov
aaa
scas
pop
fidivrl
fsubl
mov
rorb
roll
push
lds
adcb
xchg
jno
dec
movsb
and
imul
mov
or
fnstenv
lea
adc
hlt
out
es
int3
mov
adc
shrl
mov
fwait
dec
in
fwait
sarl
push
into
scas
mov
pop
xchg
into
aam
popa
add
inc
inc
leave
and
and
insb
cmp
pop
mov
hlt
xor
das
jns
push
mov
dec
fnstenv
lea
fisubl
subb
mov
outsb
mov
stc
lahf
les
bound
icebp
mov
dec
int
sub
pop
dec
arpl
fwait
or
mov
jne
insl
xchg
movsb
inc
push
pop
or
mov
outsb
divb
mov
mov
addr16
fwait
icebp
xchg
loop
dec
cwtl
mov
shlb
or
and
ljmp
ret
aam
out
push
pop
sub
dec
in
inc
lock
lahf
cli
ds
mov
push
imul
aas
fldcw
pop
inc
and
cmp
cmp
mov
mov
ja
inc
mov
in
push
push
push
cmp
fisubs
mov
mov
ds
imul
test
jb
movswl
adcb
push
push
movsl
and
leave
push
ret
jno
icebp
dec
shrl
xchg
mov
fisttpll
mov
jge
jne
adc
sahf
sbb
xchg
inc
fwait
enter
mov
adcb
sbb
iret
jge
pop
push
adc
fdivrp
sub
inc
inc
les
movsb
insb
mov
mov
call
mov
movsl
add
adc
pop
loope
pop
lret
bound
daa
jmp
in
into
push
mov
dec
insb
and
popf
inc
dec
jecxz
fcmovu
mov
ret
mov
xlat
int
pop
cmp
adc
leave
and
test
and
mov
sbb
and
xchg
outsl
mov
xor
inc
pop
lock
pop
cmp
pusha
jmp
insl
jge
or
xchg
movsb
or
pop
cmp
push
cmpsl
add
sub
jbe
sub
xor
clc
dec
cmp
sahf
insl
mov
adc
ss
scas
std
cltd
or
cltd
jo
aas
sub
or
dec
adc
in
dec
cmp
pushf
cmc
repnz
jbe
jmp
pop
push
sbb
pop
in
mov
jmp
shlb
sbb
or
adcl
cmc
mov
jae
dec
out
xchg
add
test
lock
jb
in
cmovns
test
add
xchg
pop
js
ja
dec
mov
std
rorl
imul
xchg
daa
push
pop
cmp
dec
aaa
scas
and
mov
cmp
lea
mov
xlat
mov
pop
cmp
movsb
xchg
mov
push
aaa
xchg
fnstcw
addb
dec
add
jbe
push
fcomip
fcmovnu
and
shr
pop
addr16
dec
or
lock
xchg
fsubrp
pop
xchg
in
or
test
add
loop
mov
test
lcall
adc
xor
enter
xor
arpl
pop
int
or
cmp
dec
jmp
xor
icebp
addb
or
adc
jno
loop
xchg
fcmovnu
repnz
mov
cmp
pop
cmp
subb
sub
jnp
push
adc
pop
fistps
fsubs
insb
out
inc
mov
icebp
test
push
ficoml
cmp
cmp
fidivl
add
rclb
sub
jno
mov
fdivrl
jge
leave
scas
adc
mov
pop
lock
mov
inc
out
repz
add
adc
cld
xchg
imul
loop
cltd
xchg
inc
dec
mov
shrl
xchg
xchg
out
les
add
ljmp
outsl
sarl
scas
loop
mov
scas
les
add
xchg
les
mov
mov
mov
pop
leave
or
mov
mov
fildl
or
and
jp
hlt
dec
loop
pop
jnp
cmp
add
and
push
push
mov
cmp
das
push
rorl
add
cmp
in
jo
mov
gs
clc
xchg
pop
clc
or
sbbb
push
xor
imul
or
add
inc
xlat
adc
lahf
jge
out
test
dec
data16
mov
jo
adc
inc
xchg
clc
jecxz
xor
dec
add
stos
in
sarb
stos
loope
rorl
icebp
loopne
lret
lret
cmpb
push
stc
js
cmp
xchg
xor
dec
out
ret
loope
test
xchg
dec
sbb
sub
adc
push
sbb
inc
loope
cmp
add
fsts
stos
ljmp
shll
aam
pop
sub
cmp
xchg
xor
testl
cmp
jecxz
push
pop
fbstp
imul
ficompl
push
mov
test
clc
cmp
mov
aad
bsr
mov
aad
popf
pop
mov
outsl
jg
nop
lods
inc
ret
sbb
shlb
push
popf
sub
pop
gs
mov
inc
mov
movsb
ja
lods
mov
in
push
fdivrs
cmp
jae
aam
add
ss
hlt
out
aaa
adc
in
add
mov
mov
inc
sti
add
sub
std
jle
inc
mov
pop
adc
pop
shrl
stc
xlat
outsb
xchg
sub
cmc
mov
push
in
pop
mov
fimull
jg
cmp
mov
jg
or
test
mov
das
and
xor
mov
pop
call
loopne
lods
adc
stos
mov
das
fcmovne
pusha
lock
inc
aam
pop
or
sbb
mov
flds
jno
xchg
lods
xchg
push
mov
cmp
shl
xchg
add
bound
cmc
mov
cld
outsl
sahf
cli
movsb
cmp
mov
clc
out
bound
and
std
xchg
mov
in
xchg
xchg
pop
xchg
xchg
jb
mov
js
mov
call
xor
xchg
les
fbstp
mov
jne
push
mov
es
and
inc
aam
in
sbb
shlb
std
xchg
stos
and
loop
pushf
dec
test
aam
add
je
cltd
das
inc
jno
adc
arpl
adc
fwait
pop
int
sub
aaa
push
inc
sahf
lods
xor
sahf
mov
and
dec
mov
inc
fdivrp
mov
lret
jg
data16
dec
inc
jbe
add
adc
mov
jecxz
bound
pop
in
test
cltd
bound
ret
ljmp
repnz
pop
pop
dec
xlat
mov
je
pop
out
call
inc
ret
fists
data16
mov
mov
jecxz
sub
sbb
sub
das
pop
jnp
int
mov
outsb
stos
adc
xchg
dec
ds
and
imul
push
mov
add
into
add
sbb
and
pop
push
mov
imul
lods
cmp
add
int
mov
mov
mov
inc
xor
xchg
pop
dec
fs
fistpll
arpl
addr16
call
xchg
xchg
mov
fidivrl
pop
or
sub
lret
scas
popa
and
inc
test
jns
inc
lods
pop
pushf
xor
fidivrl
repnz
fwait
aam
xlat
popf
push
xlat
scas
or
sub
push
rol
or
push
inc
adc
ss
pop
pushf
test
icebp
mov
fildll
push
sub
dec
xchg
add
lds
and
loop
cli
mov
push
adcl
push
xor
xor
pop
clc
inc
cmp
and
adc
push
pusha
ja
push
xor
decb
rcrb
sbb
cmc
pop
stc
out
mov
xchg
movsl
sbb
lahf
cmp
imul
fldcw
addr16
cli
adc
rcl
jle
xchg
push
jb
xorb
daa
push
push
pop
and
scas
inc
stos
ja
sbb
leave
cld
jne
shl
mov
insl
inc
lods
sar
mov
mov
stos
adc
int
mov
movsl
mov
aam
push
ss
fcompl
mov
mov
inc
dec
shr
sub
imul
sub
cld
xchg
shr
cwtl
outsl
hlt
sbb
outsb
cli
cmp
push
gs
mov
push
icebp
popa
sar
cwtl
jbe
mov
and
or
cmp
notl
add
sti
xchg
test
inc
and
cmpsl
jge
pushf
aas
lock
mov
pusha
enter
or
insl
dec
mov
pop
xor
test
add
mov
push
push
mov
mov
mov
lret
push
fucomip
lcall
jo
in
aaa
ja
jl
stos
pop
lcall
push
xchg
mov
test
sub
sub
out
sahf
sbbb
jmp
icebp
adc
and
mov
popa
je
push
sahf
xchg
mov
mov
lea
pushf
mov
pop
mov
and
loopne
or
lock
add
es
or
push
frstor
or
push
lods
xchg
xor
mov
filds
sub
mov
mov
sbb
stc
decb
icebp
mov
in
cwtl
into
enter
insb
mov
mov
jg
or
pusha
testb
hlt
sbb
dec
adc
xor
or
add
nop
ficoms
fcomps
lods
rcl
lds
cld
addr16
int
inc
xchg
mov
aaa
xor
xchg
xchg
push
shll
jo
fldl2t
and
mov
push
adc
pusha
aaa
mov
rcrl
add
mov
push
xor
std
push
fldenv
or
ret
jmp
push
jb
mov
je
and
inc
call
icebp
pop
pop
fisubrl
in
nop
daa
mov
inc
xor
movsb
and
dec
imul
js
add
and
adc
adc
push
stos
into
cmpsl
or
out
xor
bound
ret
mov
xor
push
aaa
ljmp
add
sbb
sbb
js
mov
add
dec
lds
mov
cltd
inc
inc
cltd
test
ja
sub
and
pop
or
sbbl
sub
cmp
xchg
insl
jne
rcrl
xor
dec
popa
sub
sub
sbb
lea
je
in
sahf
in
inc
lcall
and
lds
sbbl
arpl
cmp
mov
hlt
dec
xchg
jp
jne
sub
fadd
mov
adc
inc
adc
mov
adc
outsb
lcall
and
dec
pop
dec
xor
jbe
shlb
add
xchg
insl
es
subl
or
jo
aam
or
addr16
or
inc
popf
pop
in
adc
nopl
into
push
test
adc
push
imul
pop
mov
sbb
jnp
inc
jmp
test
lret
add
ret
out
push
mov
dec
pushf
pusha
sbb
ds
push
mov
mov
aas
mov
fidivl
mov
insl
orl
mov
push
push
arpl
jge
inc
mov
inc
sbb
fstps
and
in
xchg
mov
std
hlt
push
fucomi
fsubs
push
sbb
mov
push
test
mov
cli
mov
push
scas
stos
mov
xor
cmp
aaa
xchg
outsb
dec
xchg
rcrl
js
dec
mov
mov
cs
pop
call
mov
jmp
fdivl
cmp
jne
test
cmc
jne
push
scas
subl
push
pop
sbb
jo
xchg
outsb
in
or
adc
cmc
dec
push
ja
outsl
mov
testb
mov
rorl
pop
cmp
test
ja
loopne
lret
push
test
fildl
or
inc
cwtl
cmpsb
mov
hlt
and
out
inc
pop
pop
jnp
test
lret
and
pusha
push
lods
and
jl
pop
xor
bound
xchg
insl
cmc
cwtl
pop
cli
movsl
xchg
hlt
push
mov
sbb
or
mov
jecxz
mov
push
cmpsb
test
dec
movsb
addr16
leave
dec
hlt
dec
pop
xlat
mov
sahf
lret
mov
cmc
push
loope
or
pop
stos
jge
divl
hlt
push
imul
sahf
adc
mov
pop
imul
sub
push
lock
mov
sub
dec
fcomip
jecxz
stc
clc
insl
scas
rcrb
add
lds
inc
dec
cmp
adc
push
inc
add
insb
ja
xchg
test
shl
dec
mov
sub
sbb
and
loop
shl
push
mov
ret
xchg
mov
cmpsb
jb
test
shlb
bound
mov
sbb
push
int
or
lods
mov
push
les
cmc
aam
jmp
lds
xchg
mov
outsl
mov
inc
fcom
mov
pop
ror
fs
mov
xchg
in
cld
aam
or
data16
out
decb
mov
iret
loop
rol
pop
add
sub
mov
cmp
dec
outsl
ss
xor
insb
mov
mov
mov
mov
popf
adc
into
fistpl
rcll
mov
xlat
cmp
xlat
insl
call
adc
pop
push
xchg
mov
pop
cli
push
sub
jle
xchg
mov
push
sub
fnstenv
das
jl
cmp
movl
dec
pop
aaa
in
sub
push
cmpsl
inc
push
or
push
icebp
adc
xchg
fmulp
xor
push
scas
out
loope
mov
pop
inc
jl
mov
test
or
mov
pop
pop
add
xor
in
adc
or
inc
push
imul
sub
shll
lods
loope
call
adc
mov
jns
mov
gs
inc
shlb
jmp
and
mov
fucomip
insb
add
inc
in
and
inc
fwait
inc
xlat
int3
lds
cmc
xchg
int3
adc
sbb
add
sub
and
xor
rcll
mov
dec
xchg
sbb
lea
andb
sub
js
bound
pushf
sarb
hlt
or
push
ret
push
xor
sub
out
jnp
dec
dec
pop
inc
loop
data16
imul
into
aas
xchg
imul
bound
push
test
test
aaa
xchg
into
mov
sarb
dec
sbb
cwtl
pop
in
sbbb
fdivs
cltd
mov
jbe
lret
outsl
mov
mov
jbe
jb
mov
shl
aas
cli
sahf
xor
pop
jecxz
data16
push
add
add
or
leave
bound
cmpsl
or
or
push
cmp
cld
popa
pop
adc
xchg
jae
outsb
aad
sahf
xchg
and
movsb
add
push
mov
push
and
jno
mov
pushf
mov
aaa
scas
mov
sahf
sar
movsb
shrb
pop
adc
lock
mov
push
cmp
rcrl
pop
cmp
pop
push
inc
cli
aam
stos
in
lds
jecxz
xor
sub
pop
mov
fld
daa
das
mov
xor
sarb
ret
cmp
ja
dec
loopne
cwtl
ljmp
mov
mov
iret
enter
jb
jg
mov
jp
push
into
mov
std
mov
push
imul
mov
xlat
push
mov
mov
cli
xchg
mov
push
out
aad
xor
insb
xchg
push
jno
mov
rcr
je
push
icebp
sahf
push
mov
dec
lds
pushf
pop
inc
lret
pop
das
pop
add
imul
test
fwait
cs
lds
int3
das
mov
rclb
push
ror
out
xchg
push
cmpsl
in
jg
sub
rcrb
mov
push
cmpsl
sti
or
ror
xlat
cs
aad
aas
sub
lods
pushf
cmp
frstor
mov
jns
outsl
sbbb
jmp
mov
sbb
outsl
loop
sbb
sbb
scas
test
out
and
push
ucomiss
mov
fmull
lods
inc
cmpsb
xchg
outsb
jle
popf
pushf
out
mov
pop
leave
cltd
loope
call
cmp
imull
aad
lds
mov
mov
scas
and
cmp
mov
aas
push
mov
mov
call
jg
popf
hlt
popa
inc
aam
cld
jb
lahf
mov
imul
pop
in
xor
xchg
xor
aam
inc
repnz
orb
jecxz
cli
cltd
sbb
cld
and
sbbl
mov
jo
xchg
xor
push
scas
jno
pop
cmp
insb
subb
rorb
fnstcw
aam
mov
fnsave
fs
inc
xchg
out
jmp
popa
push
or
in
and
das
add
popa
pop
test
mov
cmp
lds
aam
jge
add
push
mov
and
cs
inc
lret
jge
repnz
enter
dec
loop
popf
movsl
insb
fwait
mov
push
or
mov
jmp
pusha
sub
fadds
xchg
jge
scas
jns
lahf
sbb
xchg
in
push
pusha
rcll
or
fwait
jecxz
int3
pop
dec
loop
cmpsl
imul
movsb
int
sub
in
gs
imul
push
mov
cwtl
xor
jo
in
lret
mov
add
dec
xor
or
jmp
dec
les
sub
stc
and
add
inc
insb
in
jns
or
mov
xor
sbb
add
xchg
mov
insl
mov
mov
adc
cmp
fsubl
xchg
sub
adc
fstps
outsb
push
cs
call
mov
pop
sub
scas
scas
jo
int
insl
push
xor
out
cwtl
nop
outsb
clc
mov
sub
mov
data16
cmpsl
mov
xor
add
stc
sbb
mov
jo
sub
pop
push
pop
and
outsb
fistpll
lods
pusha
rorl
imull
scas
test
shlb
lcall
lcall
test
int3
mov
inc
sti
sub
test
stos
cmp
lds
testl
sub
push
jno
int
leave
mov
adc
cmpb
pop
jmp
or
in
int3
pop
or
sub
push
pop
divl
shll
movl
jmp
mov
jmp
sbb
pop
or
int3
jg
xchg
push
jg
or
addl
mov
push
add
test
mov
dec
jl
in
enter
mov
sub
iret
stc
inc
sarb
jp
rcll
cmc
scas
cmpsl
arpl
or
xchg
outsb
and
xchg
push
popa
icebp
rclb
mov
and
xchg
sub
fnstcw
stc
mov
neg
push
mov
cmp
cs
xorb
popa
jl
popl
jle
jle
jo
adc
daa
addb
and
mov
xchg
sub
addr16
dec
cmc
popf
cwtl
scas
inc
loope
jbe
inc
mov
call
insl
out
adc
mov
dec
jmp
pop
xchg
and
pop
out
push
add
in
push
es
test
dec
movsb
mov
mov
sub
inc
aas
add
mov
leave
pusha
fidivl
out
es
fsts
xor
pop
inc
mov
add
and
daa
subl
sbb
js
call
stos
cli
sbb
jbe
adc
dec
sbb
add
mov
push
ss
push
push
in
jle
mov
jecxz
jae
shlb
sub
sub
xor
xchg
outsb
inc
daa
jp
xor
push
sarb
sub
ret
mov
jne
sbb
jecxz
and
add
push
xchg
jge
call
int
ljmp
stc
pop
test
mov
in
xor
ja
mov
daa
loop
cmp
push
das
xor
hlt
mulb
out
adc
inc
push
mov
movsl
test
xchg
mov
rcl
cmc
mov
mov
bound
fstpt
daa
jp
xor
mov
xor
jl
xchg
add
adc
aaa
sub
test
add
filds
leave
cs
shrb
push
sbb
call
sahf
mov
test
fwait
cmp
inc
push
lock
lock
mulb
addb
xchg
mov
cmpsl
insb
idivl
mov
incl
sbb
push
in
fsubl
scas
in
call
aas
lods
jns
outsb
mov
js
mov
or
pop
cmp
es
out
lds
dec
call
ret
sbb
stos
inc
cmp
jb
and
dec
or
cmpsl
ds
jp
xchg
out
test
pop
pop
jae
in
test
leave
dec
frstor
test
inc
ljmp
xor
jle
iret
pop
mov
xchg
pop
inc
pushf
mov
hlt
mov
mov
ljmp
pop
adc
rcrl
sbb
pop
repnz
lret
pop
mov
leave
cmpsb
ja
js
insl
aam
push
loope
pop
adc
mov
xchg
call
mov
ljmp
dec
jge
leave
mov
fists
sub
decb
ffreep
xchg
adc
dec
cmc
mov
arpl
xlat
jl
or
add
cld
in
dec
dec
push
fisubl
idiv
or
jl
in
pusha
ret
pop
add
ljmp
pop
cmp
xchg
hlt
cvtps2pd
dec
adc
cmpsl
rorl
cs
lods
sahf
mov
inc
mov
cld
inc
ret
mov
inc
popf
stos
inc
iret
mov
add
enter
mov
fwait
jbe
xor
pop
icebp
jle
pop
xchg
inc
cwtl
or
dec
insb
or
jo
jbe
fldt
inc
icebp
cltd
mov
out
lods
adc
cs
xlat
mov
jne
repz
data16
mov
pop
popf
in
test
mov
insb
bound
lock
lahf
mul
adc
data16
sbbb
in
jne
jo
add
adc
inc
imul
adc
out
sbb
push
mov
into
cmp
ds
adc
sbb
lods
pop
dec
dec
jle
jge
arpl
add
xor
sbb
les
lahf
test
mov
push
clc
jnp
sub
lea
rcrb
adcl
into
adc
stos
xor
scas
xchg
adc
jnp
xlat
popa
clc
or
cli
inc
pop
shll
push
jo
fdivrs
cli
xchg
add
mov
pop
imul
out
sbb
mov
clc
push
push
and
aad
sub
mov
mov
imul
rcrl
addr16
in
enter
into
mov
mov
fsubp
aaa
std
clc
mov
outsb
lahf
mov
push
aam
lahf
pusha
dec
icebp
cld
xchg
push
xor
mov
sbb
and
insb
sbb
into
cli
mov
mov
inc
fsubr
jnp
in
movsl
cld
lcall
add
ds
fistpll
jg
into
and
push
jne
data16
mov
pop
cmc
mov
dec
daa
or
popa
das
pop
cmp
sub
or
jg
test
xchg
or
cmc
pop
xchg
fsub
jp
mov
in
jp
movsb
gs
jnp
push
ds
repnz
or
cmp
lds
idivl
scas
sbb
pop
mov
inc
repnz
ds
xor
pop
repz
ljmp
jp
mov
mov
addr16
sbb
shrl
popf
push
nop
iret
data16
adc
fsubr
lds
cltd
test
les
insb
add
push
out
test
adc
outsb
add
adc
or
ja
jns
mov
inc
pop
push
mov
inc
ja
pop
loopne
adc
ret
lea
add
lcall
xchg
cmpsl
jl
dec
cmp
sbb
enter
xor
shlb
mov
lods
jnp
shrl
loop
pop
sub
in
lods
lcall
sbb
or
ja
pop
cld
stos
ret
xchg
subb
and
sahf
push
int
test
mov
dec
loop
mov
call
add
pop
inc
adc
or
xor
mov
add
push
lods
insb
iret
dec
sub
lock
fisubl
sbb
sub
in
jno
inc
hlt
sbb
jmp
and
rcr
es
je
xlat
ja
sbb
scas
cmpsb
cmpsb
cmp
lods
insb
scas
mov
loope
stos
jne
xchg
outsl
cmpb
push
out
xor
lea
mov
inc
mov
xchg
inc
dec
push
cmp
mov
fwait
adc
xchg
iret
mov
add
sbb
sahf
adc
je
fcom
push
pop
mov
mov
xchg
test
movsb
push
mov
push
dec
add
pop
cmp
aad
lahf
ss
jmp
inc
adc
fcmovne
push
mov
sarl
adc
lahf
xchg
push
cld
inc
shl
aad
popa
add
sub
rcl
add
hlt
mov
inc
jo
jae
dec
out
js
pop
test
arpl
mov
lret
xor
mov
pop
mov
shl
outsl
dec
sbb
dec
push
jo
ret
loopne
push
mov
mov
in
xchg
fcmovne
ret
test
cmp
pop
or
pop
scas
mov
pop
jnp
jae
das
push
xchg
or
xchg
popl
mov
int3
xchg
popf
xchg
andl
push
jns
mov
jne
cmpsl
movsl
push
jecxz
cwtl
outsl
jmp
xor
adc
enter
ja
mov
ret
jne
adc
dec
test
iret
pop
sbb
pop
call
stos
dec
pop
or
mov
push
out
btc
inc
stc
xor
ljmp
jae
call
popa
mov
mov
inc
movsl
les
add
dec
adc
repnz
ss
loop
cmp
xor
or
xchg
jne
sahf
push
scas
sub
js
andb
negl
jo
sbb
and
pop
pop
testb
xor
pop
cmp
dec
lods
clc
sahf
xor
jg
sbb
inc
fcoml
fcomps
cmp
in
outsb
jp
incb
xor
push
lcall
das
test
hlt
clc
inc
std
outsl
aaa
outsl
cmpb
mov
push
mov
push
push
adc
cwtl
mov
xchg
push
outsb
sub
aad
lret
leave
dec
adc
mov
sbb
aam
lds
mov
pop
cmp
cmp
test
test
jmp
sarb
cltd
pusha
push
sbb
int3
push
stos
xchg
and
cld
xchg
push
repnz
cmp
dec
es
sbb
or
pop
insb
into
push
and
jle
fcom
cmp
add
push
fwait
out
or
mov
pushf
ss
imul
adc
jg
decb
int3
in
jle
xchg
daa
add
adc
push
sub
fisubl
xchg
pop
pop
inc
and
out
mov
ret
fidivs
fisubrl
lods
inc
fisubs
cmpsb
sub
lret
push
enter
in
pop
int
sbb
test
es
int
out
push
lahf
lret
and
pop
pop
dec
push
jecxz
add
xlat
outsb
pop
mov
jmp
push
mov
inc
stc
jne
push
xchg
xor
test
sub
mov
fwait
loop
test
cltd
jb
scas
mov
imul
test
xchg
add
test
xchg
sbb
mov
mov
sbb
add
mov
fmulp
loop
call
leave
loopne
xor
jmp
adc
aad
fcomps
addr16
and
xor
cmp
lods
ss
imul
lds
lds
hlt
dec
jecxz
popa
rcll
adc
add
out
popf
mov
outsl
sbbb
adc
mov
mov
jp
loop
cmpsl
mov
ss
bound
sar
add
sbbb
xchg
scas
mov
jecxz
push
fwait
shl
jns
jmp
inc
or
cmp
es
dec
testb
mov
mov
xchg
mov
add
inc
push
xchg
dec
int3
jmp
fcomps
shrl
movsl
mov
xchg
repnz
enter
cmp
inc
idivl
out
inc
pushf
xchg
sub
lret
andb
xchg
movsb
xchg
scas
push
imul
pop
push
popf
cmpsl
lock
into
sub
aas
les
js
popf
mov
mov
lret
mov
lock
jne
add
mov
sub
bound
ret
repz
mov
dec
repnz
jns
mov
hlt
mov
lock
fstp
dec
in
sub
push
in
incl
fucomp
push
loop
outsl
and
lret
push
jo
dec
pop
mov
sbb
adc
mov
and
push
lret
cld
pop
xor
lods
cltd
stos
xchg
lret
into
mov
bound
sbb
ds
stc
push
stc
sbb
xor
call
mov
mov
sbb
pop
cmpsb
push
lea
lods
mov
mov
icebp
adc
daa
push
xchg
push
inc
mov
or
mov
sbb
ljmp
sub
mov
orb
sbb
inc
and
mov
lock
int3
jmp
cwtl
dec
daa
insb
test
mov
mov
xchg
xchg
lret
rolb
mov
out
mov
push
out
nop
aas
mov
mov
addr16
and
loopne
xor
loopne
in
decb
push
test
pop
mov
lods
pop
stc
sub
fidivrl
cmp
cmpl
mov
jb
add
ljmp
fbld
push
mov
sti
ret
outsl
clc
mov
das
test
inc
jmp
or
mulb
and
jns
mov
mov
dec
mov
sbb
cmp
pusha
adc
jbe
rep
lcall
cwtl
out
mov
movsl
cwtl
or
push
jmp
rorl
in
das
push
dec
cmp
jg
mov
add
mov
test
out
jnp
lahf
test
or
or
std
je
or
or
jno
int3
jb
sbb
rolb
pusha
imul
push
add
jg
jns
add
arpl
pop
inc
ret
filds
loope
inc
push
cmc
sbb
and
cmp
repnz
adc
pop
das
push
pop
cmp
sbb
aas
outsl
negl
push
jmp
adc
jo
push
mov
fidivrl
sbb
sbb
and
js
jmp
mov
cmp
xor
in
mov
push
or
sub
add
into
dec
sub
leave
pusha
xchg
into
insl
jnp
fucom
add
sub
pop
out
jle
ds
out
xchg
ljmp
and
mov
stc
jo
mov
arpl
or
pop
jp
add
mov
in
dec
cwtl
inc
arpl
insb
xchg
add
stos
lret
adc
gs
leave
lds
int3
mov
xor
jns
mov
pop
sahf
jle
addr16
xchg
popl
ss
shl
sahf
xchg
xor
nop
ret
inc
dec
xor
lret
dec
jns
bound
and
jmp
mov
lret
lock
icebp
adc
cmpsl
aam
leave
in
mov
out
pop
hlt
xchg
push
xor
pop
add
xchg
fidivl
or
fdivl
insb
mov
scas
iret
xchg
fdivl
fcmovne
clc
fmuls
pop
sub
cmp
xlat
and
or
mov
pop
jmp
ret
hlt
lds
add
lds
inc
sbb
add
mov
mov
sbb
mov
pop
repz
inc
in
push
repz
pop
hlt
loope
in
jl
dec
int3
rolb
add
popf
xor
imul
frndint
aaa
test
pop
mov
mov
jo
in
lret
mov
or
jbe
bnd
out
sahf
push
lods
sbb
mov
nop
fidivl
inc
loopne
mov
stos
scas
cmp
or
dec
test
pusha
scas
scas
mov
mov
mov
mov
mov
outsl
push
cltd
insl
test
into
mov
aaa
ljmp
pop
in
inc
push
loop
and
aad
pop
nop
xor
cmp
pop
adc
push
fdiv
push
andl
jne
lods
fdivs
jmp
pop
loope
icebp
cmc
xor
icebp
or
aad
jne
push
push
outsl
xor
mov
sti
dec
sbb
sarb
lahf
cmp
divl
pop
popf
icebp
sbb
fidivrl
insb
aas
ljmp
addr16
inc
into
movsb
aam
xchg
inc
mov
and
arpl
mov
sbb
pushf
repnz
or
outsl
cmp
mov
icebp
and
stc
pop
insb
sbb
cmp
cmp
xchg
call
xchg
xor
out
filds
or
add
xchg
aam
xchg
pop
out
xor
and
les
and
mov
mov
hlt
rcrb
repz
jb
xchg
push
fsub
cmc
fldt
cmp
cmpsl
mov
push
decl
push
lahf
pop
push
faddl
xor
mov
xor
sub
enter
out
movsb
push
mov
adc
push
ja
andl
idivb
mov
sahf
jp
mov
and
sbb
mov
cmpsl
xor
xchg
lock
or
aad
icebp
pop
jp
std
jmp
xchg
sub
jp
mov
pusha
push
es
ffreep
sub
addr16
imul
push
jp
cmp
std
test
aam
orl
dec
andb
cmc
loope
push
pushf
adc
xor
xor
mov
xchg
lea
lcall
inc
jl
outsl
mov
pop
insb
push
clc
and
xor
dec
mov
addb
mov
int3
push
iret
test
insb
bswap
movsl
cmp
mov
fwait
adcb
mov
ljmp
pop
adc
and
dec
sbb
xor
neg
call
aam
push
inc
repnz
test
je
ljmp
jno
dec
ds
lahf
cmp
pop
scas
add
ds
jbe
mov
iret
add
add
ljmp
fwait
int
inc
push
xchg
insb
pop
lcall
mov
out
rorb
pusha
adc
mov
and
or
mov
loopne
outsb
sub
mov
mov
lds
mov
cmpsl
mov
cmp
test
mov
sbb
mulb
imul
xchg
inc
xor
xchg
stc
cltd
mov
scas
clc
sbb
cltd
inc
scas
mov
xor
cmc
fsubrl
push
xchg
mov
dec
dec
jecxz
les
aam
mov
pop
pop
push
stos
pusha
nop
and
test
mov
shrb
sub
mov
sbb
pusha
js
gs
clc
xchg
movl
lcall
lds
ds
and
lds
rorb
dec
pop
sub
mov
ss
xor
xor
push
pushf
stos
psraw
jb
xor
jmp
sbb
test
fwait
in
loope
jbe
bound
std
sub
xchg
add
lret
push
in
sti
mov
jae
push
sbb
les
mov
insl
xlat
mov
fld
movsb
addr16
aad
out
outsl
pop
test
mov
mov
jno
scas
ret
mov
add
int
into
cs
xsha1
cmpsb
dec
push
shr
mov
sub
add
jo
cmp
rol
jnp
ss
das
jne
dec
cmpsl
dec
push
xor
dec
out
cwtl
push
fsubr
push
cmc
cmp
inc
fsubrp
jmp
mov
lret
jae
in
mov
jb
ds
fdivrl
sbb
frstor
test
roll
mov
pop
sbb
push
es
mov
sahf
lea
sbb
pop
mov
imul
adc
pop
shrb
stos
test
mov
inc
pusha
mov
xor
lret
jne
xchg
adc
in
and
das
sahf
add
push
cmp
mov
sbb
mov
fdivs
adc
and
jmp
pop
clc
or
and
adc
push
mov
lock
sbb
cmpsb
shrl
fldenv
mov
sub
inc
lcall
call
and
outsl
push
cmc
xchg
sti
mov
push
not
add
push
movsl
and
cs
outsl
inc
fnstenv
fwait
loope
mov
daa
sbb
add
testl
push
mov
addr16
pop
ret
lods
das
jae
add
test
jbe
outsb
dec
imul
xorl
inc
xchg
xchg
inc
cs
cmp
lock
pop
push
push
pop
cwtl
pop
dec
and
inc
int3
dec
orl
pop
shr
push
dec
add
lahf
subl
sbb
jg
push
mov
nop
push
push
mov
std
or
mov
popa
jecxz
sub
sahf
insb
out
push
fadds
xchg
cs
jne
mov
push
adc
pop
repz
fdivrl
pop
xor
fldenv
fldl
sti
xchg
jns
aaa
stos
hlt
jo
aad
shl
stc
adc
adc
push
xchg
mov
iret
data16
je
mov
cmc
js
fisttpl
cmp
es
adc
cld
shll
xor
mov
addr16
fcomip
pop
dec
ret
xor
xchg
fidivs
ret
adc
fstpl
mov
mov
mov
inc
in
jmp
cmc
mov
sahf
mov
mov
adc
sbb
jl
mov
insl
jnp
out
or
js
jns
ljmp
mov
jo
clc
leave
cvtdq2ps
test
xor
jbe
add
sub
ficompl
dec
imul
mov
jo
xchg
jmp
lret
cmp
gs
sbb
jle
out
pop
dec
dec
pop
out
jnp
jmp
sbbb
mov
hlt
inc
lods
add
sub
cltd
sbb
pop
jae
pop
jnp
xchg
adc
fidivs
and
push
lcall
and
push
pop
imul
les
loopne
mov
ret
fwait
es
pop
shrb
inc
sub
ds
push
imul
push
inc
aam
sub
pop
repnz
pop
mov
fisubrs
sub
pop
sti
mov
mov
sub
push
repnz
fcoml
sahf
clc
outsl
inc
mov
scas
aaa
icebp
cmp
inc
mov
ss
push
aam
stos
mov
inc
push
js
mull
es
test
ret
cli
jg
dec
add
rorl
xor
jbe
dec
mov
sbb
sbb
test
fildl
and
mov
xchg
add
stos
movsl
aas
arpl
int
mov
hlt
repz
and
push
enter
daa
inc
stos
mov
lock
xchg
add
shl
and
jbe
orb
insl
mov
repz
adc
sub
scas
dec
xor
filds
lods
add
cmp
orb
push
inc
mov
loope
dec
mov
cmc
sub
out
hlt
pop
adc
les
stos
push
ss
xchg
data16
insb
push
jb
lret
mov
add
nop
imul
movsb
shl
aad
jecxz
stos
adc
icebp
pop
pop
cmc
mov
stos
jns
lret
xor
aam
pop
mov
and
or
pusha
aas
or
fdivrl
pop
mov
pop
mov
or
jae
imull
popf
bound
sbb
outsb
or
lret
shl
jnp
or
push
jmp
push
pop
fcmovnb
jnp
stos
repnz
stos
ds
mov
pop
pushf
push
clc
das
pop
jbe
clc
dec
add
iret
dec
mov
cmc
and
add
inc
jg
arpl
mov
out
sub
repnz
out
push
push
leave
addl
std
xor
sbb
inc
pusha
idiv
adc
out
je
jg
sbbb
ljmp
push
scas
fbld
aaa
mov
add
out
sbb
aam
out
test
int
aaa
or
pop
dec
push
imul
jno
jns
movsb
adc
and
lahf
aam
pop
xor
adc
movb
inc
jmp
popl
mov
lea
pop
xchg
addb
sbb
out
imul
shrb
and
fdiv
xor
in
xor
rcrb
inc
cwtl
les
dec
dec
mov
out
loopne
xchg
aas
imul
mov
xlat
outsb
and
pop
pop
int3
cmc
mov
sub
push
sarl
clc
sub
daa
hlt
test
jno
mov
clc
mov
xchg
pop
inc
sub
cmp
inc
cmpsb
mov
dec
and
aam
test
es
das
dec
out
sti
xchg
cmp
push
xchg
cmp
je
and
push
mov
fistl
xor
sbb
jbe
sbb
imul
js
outsl
mov
mov
xchg
mov
dec
dec
outsl
sub
sbb
xor
mov
bound
jecxz
inc
scas
inc
jae
or
or
fcompl
dec
cltd
cltd
mov
repnz
and
stc
icebp
and
mov
cmp
fs
clc
int3
popa
loopne
or
push
jb
xchg
incl
push
xor
mov
test
mov
push
cltd
lret
in
pop
mov
test
stos
inc
shrl
add
bound
lock
mov
push
jnp
mov
insb
pop
inc
fcmovnu
adc
adc
addr16
mov
fwait
lock
adc
sbb
mov
mov
sbb
fdivs
xchg
and
mov
jmp
cmc
mov
jge
add
or
xchg
and
repnz
and
stos
flds
jmp
das
jg
testl
in
pop
push
outsb
xchg
aam
inc
divb
out
cli
mov
add
ret
in
pop
sub
mov
dec
fs
rcr
mov
mov
in
and
fwait
rclb
sbb
cli
dec
sarb
cmp
out
jle
pop
mov
push
jle
data16
bound
ficompl
and
add
repz
or
dec
fstpl
stos
ds
sub
push
aam
enter
cmp
jno
sbb
mov
fnsaves
pop
int3
push
pop
xchg
cs
test
mov
lcall
cltd
orl
test
inc
je
js
adc
ja
dec
xlat
mov
xchg
arpl
int3
lret
or
sbb
sti
rcll
lock
out
fidivrs
inc
inc
jo
lock
adc
inc
xor
ja
je
lods
loopne
cli
push
test
inc
daa
sbbl
pop
rcrl
loopne
ret
push
jb
and
mov
push
testl
rol
sbb
fs
adc
lods
rcll
inc
in
cmp
fs
lret
popf
ret
fs
sbb
popa
xor
xchg
xchg
adc
xchg
stc
addr16
orl
insl
add
mov
mov
mov
push
jo
pusha
or
pop
jge
push
out
lea
aad
sub
sbb
pop
jno
sub
and
push
xor
das
addr16
sti
lahf
xor
pop
sub
aaa
push
add
cmpsb
inc
bound
lock
push
xor
mov
mov
xchg
mov
adc
cmp
mov
mov
daa
repnz
aad
lds
cmc
pusha
xchg
push
xchg
pop
jae
cld
dec
scas
loopne
es
add
cmp
push
mov
or
inc
enter
in
dec
data16
loop
testb
ds
jg
mov
aaa
adc
ja
pushf
adc
adc
push
gs
imul
add
xchg
out
arpl
repnz
dec
daa
xlat
rorl
aas
into
pop
in
clc
es
cmc
cmp
shrl
xor
lods
imul
subl
cmp
lods
int3
mov
push
xchg
xchg
fisttpl
in
pop
lea
mov
cs
ljmp
js
xchg
out
fnstcw
in
mov
or
iret
divb
mov
shrl
add
xor
or
call
sbb
pop
mov
sahf
hlt
mov
std
setl
ss
in
pop
push
cmpsl
dec
scas
ret
jb
mov
xchg
sub
add
jb
mov
in
push
mov
lds
aam
cmpsb
lock
lods
aaa
push
sbb
in
inc
dec
sbb
xor
xchg
sub
imul
loop
arpl
add
setp
xchg
cmc
ret
or
movsb
xchg
sbb
xchg
or
xchg
jbe
mov
pop
hlt
ja
stc
fwait
xchg
scas
int3
sbb
push
loop
jnp
xor
sbb
inc
lret
movq
lea
cmp
stc
stos
pushf
fstl
push
test
inc
lods
repnz
sbb
mov
fldenv
cmp
aad
jecxz
push
push
pop
xor
ljmp
fcmovnb
pop
ljmp
push
xchg
mov
mov
ret
dec
mov
jne
push
jg
rorl
out
inc
fstl
lock
xor
mov
insl
jne
lahf
mov
pop
xchg
ljmp
addr16
out
arpl
xchg
mov
jbe
add
push
jbe
ret
jp
jecxz
xlat
xchg
iret
fsts
mov
or
sub
push
dec
dec
faddl
xchg
inc
inc
pusha
js
or
dec
aad
jecxz
cmp
lds
mov
std
xchg
jno
sbb
xchg
sbb
inc
xlat
fildll
outsl
dec
pop
mov
lods
dec
enter
pop
mov
in
and
in
das
flds
jbe
sahf
jae
push
cltd
jmp
pop
in
jno
sub
sbb
aaa
xchg
cmp
jp
jp
lds
add
adc
cmp
or
aam
aam
cs
push
fbld
sbb
fiadds
mov
jae
test
add
mov
lods
mov
ljmp
dec
jmp
int
cld
in
in
aaa
pop
inc
popa
fldl2t
xor
lret
insb
in
lret
mov
sub
fucom
jge
popa
aas
mov
mov
push
rorl
sub
xor
sbb
cmp
pop
outsb
adc
pop
mov
xchg
in
add
sbb
jmp
xchg
dec
cmp
add
lahf
pop
xchg
mov
push
mov
or
shll
test
dec
movsb
lahf
jle
xchg
sub
je
inc
sbb
jb
cld
scas
lahf
sbb
ss
lds
and
mov
add
push
fwait
sub
pusha
das
cmp
lock
pop
and
mov
xor
pop
push
ss
xchg
ds
jl
pop
dec
adc
jp
ret
jns
jp
xor
dec
pop
pop
pop
jno
clc
pop
outsb
movsl
and
and
mov
pop
inc
insb
pop
sti
imul
test
lret
into
mov
xchg
stos
insb
mov
sahf
lea
iret
cld
dec
fs
adc
jae
push
sti
scas
into
imul
or
push
iret
data16
xchg
loop
inc
adc
inc
cwtl
fs
push
inc
push
and
xor
shrl
movsb
cmp
div
inc
pop
imul
adc
andb
je
mov
cmpl
rorb
popa
add
lcall
in
cmp
outsl
fisubl
loop
jg
adc
outsb
pusha
ss
sahf
mov
mov
xlat
or
dec
sub
mov
icebp
jb
nop
adc
flds
aaa
nop
daa
dec
mov
push
out
dec
and
stc
lcall
ficoms
xchg
aaa
inc
decl
adc
repnz
jne
lds
cwtl
pop
lret
fcompl
loopne
mov
sub
add
push
sub
mov
mov
icebp
pop
inc
inc
mov
jg
xchg
mov
jne
aas
stc
dec
mov
xor
mov
aas
loopne
les
icebp
test
or
loope
andb
xchg
addr16
lcall
sbb
std
cmp
fcomps
out
dec
loop
push
cli
push
inc
out
cld
dec
sbb
sub
sub
xchg
outsl
out
add
pop
push
or
mov
jg
fnstenv
in
dec
aaa
call
nop
ljmp
mov
lods
imul
pop
cmp
mov
movsl
outsl
sbb
push
imul
push
in
loope
inc
add
loop
das
imul
aaa
rol
push
pop
mov
or
mov
sub
push
or
pushf
iret
mov
and
jl
cltd
and
mov
mov
outsl
leave
insl
adc
nop
iret
push
mov
jg
xchg
mov
and
ljmp
or
add
jae
lock
fs
mov
inc
scas
jl
loopne
inc
in
loope
test
pop
push
sub
cmpsl
aam
mov
pop
mov
fisubl
or
aad
sub
lods
andb
jnp
in
add
in
mov
fisttpll
jae
leave
imul
adc
sahf
mov
cmc
dec
in
mov
adc
jnp
loope
inc
pusha
mov
adcl
lahf
or
xchg
ljmp
push
sub
jne
repnz
int3
mov
lcall
ss
pop
xor
jne
jb
adc
sub
lret
mov
push
rclb
dec
movsl
jl
cmp
xlat
xchg
fisubl
popa
jmp
rorb
mov
adc
test
jge
enter
mov
imul
aam
inc
xor
dec
xchg
add
clc
mov
sbb
cmpsb
xchg
imul
cltd
xor
sbb
or
mov
pop
mov
push
and
lahf
sbb
push
sarl
mov
inc
sbb
xorl
pop
popf
mov
xor
or
jnp
aam
sbb
cmp
cmp
popf
nop
sub
jb
ss
pop
sub
in
cli
popa
out
rcrb
xor
call
inc
lret
cld
and
addr16
cmp
rorb
stos
inc
jl
stos
push
loopne
inc
sub
add
or
mov
xlat
cmp
pop
pushf
loopne
les
mov
or
push
call
push
ljmp
jno
and
or
add
sub
add
xor
sti
inc
jle
mov
inc
rolb
shlb
nop
shl
mov
scas
add
mov
push
nop
in
sub
int3
dec
push
mov
pop
cmp
addr16
push
mov
adc
rcrb
mov
mov
push
inc
stos
pop
fcoms
sahf
sbb
jae
push
movsl
rcrl
dec
inc
lret
adc
movsl
ret
or
xor
jecxz
dec
aaa
pushf
repnz
and
mov
sub
int3
push
pusha
sub
lds
sarl
data16
test
or
pop
adc
shl
pop
mov
rol
sbb
dec
rorl
inc
dec
lret
fiadds
lods
out
lods
xchg
mov
popa
repnz
mov
inc
and
inc
gs
inc
adc
test
jnp
fisttpl
inc
fnstcw
stc
cmp
adc
shlb
jp
shl
popf
jmp
xchg
ds
fisubrs
leave
push
dec
xor
xchg
sub
negb
test
dec
fs
mov
jecxz
dec
ljmp
out
add
or
cmp
push
test
jge
pop
rorl
jnp
xchg
sub
aaa
mov
cwtl
sbb
movsl
push
dec
sbb
out
cmp
test
dec
pop
ret
movb
add
sub
jbe
or
lahf
testb
repnz
ds
ds
inc
pop
jns
iret
cmc
mov
loop
fwait
shrb
testl
adc
loope
sub
lahf
nop
sub
mov
sbb
stos
addr16
bound
adc
sti
sub
rcrl
xchg
js
loope
pop
jg
xor
shlb
mov
pop
jecxz
cmp
dec
sub
sti
pop
imul
rclb
add
scas
inc
pop
mov
dec
lds
or
lods
insb
dec
repz
pop
and
pop
insl
out
fstpl
dec
mov
cmp
fildl
mov
ficoms
outsl
jl
dec
loopne
dec
xor
in
jge
xor
pop
sbb
or
test
jg
out
aad
fsubrs
or
mov
ret
xor
lea
or
pop
out
sti
xchg
xchg
jmp
dec
call
xchg
dec
push
pop
pop
imul
cmp
xchg
mov
leave
sub
adc
shrl
imul
add
xor
f2xm1
jno
xor
add
mov
adc
daa
cmp
lret
pop
out
outsb
sub
movsl
jl
or
es
add
or
push
sar
gs
adc
into
gs
inc
ds
in
fsub
fdiv
sti
sbb
mov
cmp
int3
rcl
int
rcl
cmp
test
icebp
loopne
mov
sbb
aaa
xchg
pop
testl
pop
cmc
lods
jmp
adc
cs
ret
dec
cwtl
and
cltd
ss
sti
ljmp
scas
cmp
jl
sbb
sub
jecxz
test
jmp
int3
std
push
and
shll
or
gs
adc
leave
dec
push
mov
push
std
notb
sbb
xchg
outsb
sti
xor
lahf
cmp
push
pop
aaa
xor
or
pusha
popa
shll
fistps
push
xchg
outsb
adcb
push
out
mov
push
clc
adc
dec
daa
pop
lock
cmp
mov
sbb
cmc
enter
cmp
testl
dec
jp
mov
roll
inc
cmp
xor
xchg
out
test
addr16
sbb
pop
adc
and
imul
fwait
cs
mov
cmp
mov
popf
repnz
sti
cmpl
sbb
sub
or
sub
mov
dec
add
xchg
loop
pop
inc
mov
jo
daa
lock
pop
aam
testl
mov
dec
repz
xchg
xchg
cltd
push
in
mov
mov
pop
add
push
cltd
xor
push
jecxz
fwait
mov
out
xor
xchg
cmc
push
inc
orl
int3
add
sbb
adc
mull
mov
pusha
ret
loop
mov
mov
movsb
aas
adc
pop
call
dec
cmp
xchg
jmp
mov
bswap
mov
ja
adc
adc
arpl
add
aas
lods
lret
mov
mov
fmulp
mov
ljmp
xor
push
repz
orl
aaa
xchg
dec
xchg
mov
mov
sbb
into
cltd
data16
and
in
adc
movsl
adc
push
ljmp
jno
dec
stc
rep
cs
xlat
js
mov
fdivrs
dec
lock
nop
daa
or
add
lods
cmp
xor
sbb
sti
lock
or
das
jo
and
xchg
or
mov
xchg
pop
pusha
es
imul
fstpt
fdivl
pop
cmp
mov
or
orb
dec
in
mov
xor
lea
ret
sub
int3
int3
and
cs
push
cmp
arpl
test
mov
hlt
or
lahf
notl
mov
push
xchg
add
adc
sub
sbb
lods
inc
inc
sub
pop
or
pushf
repnz
mov
loopne
iret
push
inc
or
loop
ret
fwait
mov
push
repnz
test
pop
imulb
mov
or
loop
inc
test
mov
dec
dec
push
push
mov
fistpl
add
and
lds
push
in
insb
push
adc
addb
daa
jge
jecxz
ret
push
add
mov
lea
sahf
pop
xchg
pop
add
jp
je
cmpsl
mov
pusha
fists
pop
and
flds
mov
hlt
jbe
gs
test
ja
pop
and
cmpsb
mov
mov
movb
mov
or
add
iret
inc
mov
repz
ficoms
fmul
cmp
repnz
pop
or
and
lcall
jmp
add
sub
fcmovnb
repz
add
test
xchg
mov
cwtl
jg
or
sub
cmp
xchg
add
daa
js
mov
jmp
inc
or
and
jo
cmp
dec
add
and
jne
jmp
enter
popa
data16
pushf
xor
jmp
stos
xor
dec
push
scas
fiaddl
int3
outsb
hlt
jae
daa
decl
push
ss
bswap
fwait
test
adc
adc
into
inc
push
ret
fndisi(8087
xchg
adc
jno
inc
shlb
cmp
push
lea
cwtl
jecxz
or
xchg
out
popf
lahf
arpl
fidivrl
push
mov
sahf
pop
fucomi
push
cmp
stc
jp
scas
addb
sub
mov
lods
out
lret
je
lret
dec
jno
push
mov
jmp
fwait
dec
out
into
aas
jae
fs
pop
sbb
btc
push
movsl
xchg
xlat
and
xlat
rclb
out
out
sub
cmp
jb
jle
adc
mov
add
push
xchg
addr16
fmul
mov
cmpsb
inc
data16
xor
push
stos
mov
call
test
and
test
andb
pusha
repnz
push
cmpsb
arpl
xor
pop
xchg
and
push
mov
std
outsl
pushf
fimuls
stc
adc
ljmp
inc
lcall
dec
sbbb
adc
sbb
mov
into
mov
cs
fcmovnb
rorb
bound
aad
enter
add
into
push
adc
push
scas
xchg
xchg
and
mov
insl
in
outsb
pop
out
sbb
lahf
pop
in
mov
cs
jp
adc
push
push
inc
sub
mov
push
fucomp
aaa
pusha
sub
xor
sti
or
add
rol
pop
and
or
pop
aaa
lock
dec
sar
add
aaa
aam
push
insb
xchg
add
aad
aas
outsb
dec
int3
scas
out
xor
jmp
ss
dec
jle
jne
push
fwait
cld
mov
in
decb
dec
lods
repz
ljmp
inc
xlat
adc
cmp
insl
jg
cltd
orl
std
out
rcll
imul
iret
push
test
pop
jge
jg
lcall
push
jmp
push
in
popf
pusha
sub
sub
and
add
orl
cmp
jge
mov
xor
pushf
jp
jle
xor
sub
mov
or
inc
xor
mov
ficoms
cmp
jg
fldenv
lret
leave
loopne
cmp
ljmp
mov
loopne
sbb
adc
xor
or
loop
dec
fwait
xchg
icebp
mov
into
inc
loop
inc
cmp
add
sbb
mov
sbb
mov
rorl
outsl
in
int
push
or
shr
sbb
or
push
fidivrs
dec
insl
lds
xchg
jecxz
rcl
cmp
pop
jp
in
jb
movsb
cmp
adc
mov
clc
hlt
insl
mov
or
ret
or
cs
jecxz
mov
jecxz
sbb
add
jge
push
jmp
mov
lods
outsl
jb
add
cmp
xor
xor
enter
pop
mov
stos
movsb
sub
clc
inc
bound
cld
das
jo
test
lahf
aad
in
pop
xor
add
mov
mov
cmpsb
add
pusha
pop
jnp
mov
push
incl
insl
or
and
test
int
mov
push
or
shlb
dec
decl
sub
sahf
cmpl
aam
jp
inc
push
mov
in
ss
sub
jbe
decb
lret
test
sub
dec
lods
aas
lea
mov
inc
jl
imull
jae
push
cmp
enter
js
mov
adcb
scas
mov
cmpb
or
mov
nop
or
push
lods
fmuls
stos
jmp
sbb
inc
cmp
out
loop
mov
psadbw
repnz
cmc
test
jae
data16
ret
das
and
repz
call
pop
cmp
lea
shlb
inc
dec
std
cmpsb
and
in
jp
lahf
mov
pop
in
testl
loopne
adc
cltd
dec
pop
cwtl
in
sub
pushf
scas
out
xchg
jno
or
int3
mov
popl
push
fwait
movsl
aaa
ss
mov
ds
or
mov
xchg
inc
fistl
inc
sahf
cmp
mov
jge
enter
pop
mov
mov
cmpsb
in
sbb
arpl
dec
mov
jnp
jns
clc
xchg
mov
scas
xor
or
and
push
push
inc
jae
fldt
pop
ja
inc
dec
mov
loopne
ret
subb
imul
mov
jg
xor
daa
subl
dec
mov
cmpsl
mov
pusha
mov
pop
lock
mov
xchg
dec
mov
inc
out
cmp
std
test
xchg
push
xchg
sub
xlat
data16
ss
mov
in
daa
scas
insb
jle
cltd
jl
cs
cmp
mov
xlat
scas
xor
rep
mov
or
gs
mov
arpl
lods
cmp
je
push
cmpsb
sub
cs
push
repz
ds
jo
and
lea
lock
mov
call
cmp
adc
ss
or
push
push
cmp
add
jle
pop
jno
cwtl
gs
push
mov
and
adc
push
jle
or
aaa
shlb
lahf
ss
push
mov
sub
movsb
mov
or
inc
xlat
sbb
xor
sti
repnz
outsb
push
push
push
insb
inc
push
push
rorb
jmp
and
push
cmovno
xchg
test
dec
jmp
cmp
push
jmp
adc
aam
or
lret
jnp
push
aaa
xor
leave
pop
nop
xchg
xchg
clc
sub
mov
inc
cmpsl
jmp
lds
pop
loopne
lret
jl
adc
sti
dec
loopne
scas
addl
xor
popa
cs
test
or
test
gs
test
dec
les
dec
pushf
or
mov
sbb
outsl
mov
lcall
mov
jnp
fidivl
cmpb
and
fnsave
clc
sub
subl
test
mov
das
add
mov
inc
push
dec
rcrl
sub
outsb
lcall
and
push
scas
mov
adc
shll
je
mov
ds
sub
cmc
nop
sub
pushf
pop
xor
pop
dec
dec
aad
cmp
xchg
fld
sub
jmp
cwtl
sbb
pop
hlt
xchg
cmp
sub
sbb
xchg
sub
not
cmc
cmp
xchg
jle
fisttpll
stos
and
mov
idivl
ja
pushf
dec
shrl
mulb
adc
xchg
sub
mov
xchg
xor
sub
jmp
jo
xor
aam
sbb
stos
mov
or
das
sub
std
xchg
adc
rorb
lods
xchg
insb
or
pushf
mov
add
jecxz
and
cs
sbb
mov
cmpb
adcl
dec
cmp
xor
jo
adc
out
iret
sti
fwait
lret
xlat
mov
insl
lods
int3
arpl
imul
xchg
pop
fwait
inc
push
mov
mov
clc
mov
push
cmp
lds
add
push
rcll
cwtl
cs
inc
push
fldl
xchg
add
mov
or
mov
addr16
sahf
cmp
inc
popa
cli
jbe
mov
aas
aam
push
daa
into
jns
xchg
es
sbb
mov
lret
mov
push
mov
push
jae
sahf
cmp
lcall
mov
ljmp
inc
pop
mov
mul
pop
fnstenv
xchg
or
adc
shrl
rep
cld
aaa
icebp
or
std
xor
mov
mov
xchg
ja
inc
jle
lods
pop
bound
mov
imul
out
test
jle
cs
insb
enter
push
jnp
jbe
addps
dec
testb
cli
inc
pusha
add
lahf
rorb
add
push
ljmp
xchg
scas
jl
mov
fwait
scas
inc
fwait
sarb
cmp
mov
lahf
outsl
add
jae
loopne
mov
dec
inc
test
push
mov
pop
das
mov
into
xor
in
dec
jl
sub
outsb
dec
rol
pop
dec
rcl
or
and
or
test
mov
in
repz
sub
mov
mov
pop
sub
mov
lcall
repz
bound
push
imul
mov
push
sbb
push
int
scas
push
mov
leave
frndint
aas
insb
lret
popf
imulb
int3
jns
imul
loopne
cs
xor
pop
div
dec
outsb
rcll
cs
xor
pop
xor
mov
gs
ljmp
mov
sub
adc
add
mov
jp
mov
jae
sti
jo
cmpsl
in
push
sub
cmp
rcl
lea
loope
inc
dec
data16
jp
cmpsb
and
in
repz
dec
adc
dec
gs
in
push
pop
xchg
adc
data16
sbb
push
lods
jg
shrb
aad
adc
sahf
test
movsb
dec
pushf
pop
rcrl
fidivs
test
inc
xor
bound
call
enter
lods
pop
std
sahf
pop
push
cltd
mov
or
adc
loope
outsl
or
popf
jmp
dec
outsb
jne
maxps
sub
lods
pop
mov
out
dec
in
push
mov
clc
andl
es
push
daa
insl
pop
mov
hlt
xor
push
dec
loope
daa
cli
jne
jg
fs
cli
xchg
cwtl
mov
lahf
sbb
pushl
adc
ret
xchg
cltd
mov
pop
jae
push
outsl
jge
jbe
xor
mov
and
dec
inc
pushf
icebp
sbb
adc
mov
mov
outsb
ret
inc
negb
sarl
movsl
shl
nop
stc
mov
pop
stos
fdiv
fs
push
pop
es
xchg
sub
loope
in
adc
xor
mov
mov
into
xchg
cmp
ret
fisubrl
mov
mov
loop
push
outsb
clc
sub
push
dec
xchg
push
lcall
jns
push
lret
jae
dec
dec
ret
cli
orl
loop
xlat
and
sub
leave
addr16
fcmove
arpl
movsb
fnsave
cmp
cltd
push
jno
cwtl
cmp
movsb
lock
cmpsb
js
dec
and
rcl
flds
shll
enter
adc
fwait
jbe
lcall
cltd
pusha
dec
popf
xor
into
insb
gs
add
cmp
lock
and
mov
adc
or
dec
mov
cltd
stos
call
in
jbe
dec
dec
insl
adc
imul
dec
jge
shll
movsl
fcoml
jne
mov
inc
add
out
inc
test
hlt
out
ja
sbb
cmp
pushf
xchg
pop
dec
jne
jecxz
mov
cld
and
insl
into
shll
pop
push
icebp
movsb
fwait
jle
int3
mov
sub
cmc
nop
popf
mov
aas
or
xor
sub
xlat
hlt
and
mov
inc
dec
imul
sbb
cmp
scas
cmp
les
push
dec
mov
mov
adc
lods
push
ja
lret
xlat
xlat
cwtl
push
pop
fldl
xor
movsb
pop
outsb
fsubl
cmp
adc
dec
loope
xor
test
jae
pop
lods
push
test
xchg
je
push
mov
xchg
stos
cmp
arpl
repnz
dec
negb
testl
sbb
xchg
repnz
outsb
xchg
xor
mov
arpl
cs
xchg
cmpsb
jne
lock
sub
lock
rcl
jnp
outsb
add
push
scas
out
pusha
push
insb
pop
push
lahf
jg
popa
ss
push
mov
test
sbbl
and
cmp
xchg
inc
lods
cmc
clc
shl
dec
es
jne
sbb
fwait
sbb
cs
inc
popa
enter
add
arpl
lret
imul
ljmp
mov
xor
xchg
hlt
lea
adc
stc
jg
outsl
sub
pop
lock
out
js
ja
imul
cld
pop
iret
sbb
xchg
fwait
mov
rorb
mov
or
in
mov
dec
mov
in
jle
add
jg
loop
sbb
fwait
into
add
insb
scas
add
cmpsl
sub
orl
movsb
mov
mov
insl
xor
adc
bound
jb
data16
lahf
jecxz
repnz
in
mull
adc
sub
mov
mulb
es
dec
jge
jp
sub
fs
lods
cmp
jno
and
outsb
push
push
mov
mov
loop
adc
sub
lret
insl
or
inc
lret
xchg
out
pop
sub
mov
icebp
stos
es
xlat
imul
icebp
insb
adc
ss
mov
add
inc
mov
mov
adc
repz
pop
and
out
popa
es
mov
add
ja
cs
add
adc
mov
add
xchg
cwtl
lea
push
sub
pop
push
pop
nop
int3
nop
cmpsb
sbb
arpl
or
js
pop
stos
lds
and
cld
fnstsw
adc
in
loope
mov
sbb
lods
enter
test
pop
fadd
inc
lret
xchg
mov
popaw
sti
mov
les
mov
pop
js
sbb
mov
leave
push
sub
dec
cmp
rcrb
mov
iret
hlt
add
or
fimuls
in
mov
xchg
stos
call
testb
fcoml
popf
jle
xchg
mov
pop
inc
push
mov
loopne
and
into
mov
int3
mov
or
adcb
sub
push
insl
and
adc
and
pop
insl
fsubrs
daa
sub
push
cs
insb
xor
xor
cmpb
mov
jecxz
jne
mov
stc
popf
jecxz
jg
jecxz
jmp
lods
dec
addb
push
data16
jp
fnstcw
xchg
mov
sub
or
lret
mov
les
call
lcall
push
mov
adc
fsubs
sahf
cli
pusha
pop
jne
fistl
pop
lock
xchg
cmp
mov
push
insl
sahf
daa
inc
mov
push
inc
jl
jb
cltd
or
arpl
mov
les
adc
negl
fldenv
mov
pop
mov
sub
imul
dec
lret
roll
pop
xor
mov
dec
sbb
mov
xchg
pop
push
push
adc
imul
xchg
pushf
jl
lahf
cmp
pop
dec
cmpsl
pop
fwait
jae
sbb
xor
jbe
enter
scas
adcl
mov
push
cmp
aaa
cmp
xchg
inc
dec
mov
xlat
add
aad
mov
cmp
sbb
inc
dec
in
jl
cli
push
push
sub
add
dec
mov
mov
stos
and
dec
in
test
xchg
cmp
mov
sub
shll
inc
sti
mov
clc
and
add
push
imulb
mov
pop
scas
pop
imul
mov
mov
xor
test
out
aad
or
xor
push
gs
data16
pop
pop
add
inc
mov
xchg
mov
add
xchg
adc
cltd
fsubl
inc
xlat
ljmp
jns
xchg
dec
in
jns
cmp
inc
sbb
mov
jnp
mov
andl
es
pusha
jne
adc
adcb
dec
in
jmp
ret
dec
lcall
mov
and
mov
lods
xchg
adc
imul
and
mov
fldcw
adc
fs
test
sub
pop
mov
pop
mov
xor
into
sub
cmc
push
mov
loop
ds
push
jmp
and
iret
scas
inc
add
stos
or
dec
fists
cli
adc
les
std
cmp
push
outsb
push
push
pop
int3
and
mov
fbld
lds
rcrb
aad
inc
rcrl
mov
outsb
push
and
add
mov
xchg
jmp
jmp
cli
inc
icebp
jbe
jns
or
das
pushf
dec
xchg
stos
xchg
sti
rcrl
mov
fsubs
and
or
sbbl
into
gs
pop
jbe
dec
out
inc
icebp
jle
cli
mov
into
xchg
mov
xor
mov
and
or
inc
mov
pop
cmc
mov
dec
iret
sbb
fs
test
push
cmpsl
jp
aas
xor
ja
out
dec
pusha
out
push
ret
xchg
jl
rcrb
jnp
and
dec
mov
imul
pop
pop
mov
or
ss
push
stos
mov
ljmp
jno
addr16
pushf
xor
mov
mov
in
fldcw
cli
cmp
xor
cmpsl
or
scas
movsb
sub
push
pop
inc
les
sub
jecxz
or
xor
mov
out
push
sahf
pop
insl
into
pop
pop
repz
inc
sub
or
cltd
std
push
inc
pop
daa
test
in
les
fcom
push
mov
lods
push
icebp
adc
sahf
adc
dec
iret
into
pop
inc
out
cmp
pop
jno
xlat
data16
ja
push
push
jmp
jnp
jo
out
jnp
xchg
iret
ret
shll
fcoms
jp
popf
xor
pushf
mov
cmc
je
pop
insl
cmpsb
push
sub
decb
into
push
pop
sub
xchg
cmp
mov
rcrl
inc
js
iret
scas
test
insb
loop
adc
push
add
pop
out
cmpsb
fisubrs
and
out
sub
and
xor
rclb
sbb
pop
insl
push
pop
sbb
stos
inc
rolb
sbb
sbb
xor
loopne
orl
clc
rcll
sahf
jge
or
xor
sbb
xchg
mov
cmp
dec
and
mov
es
testb
scas
test
inc
mov
mov
cs
add
dec
add
inc
movsb
jg
adc
aaa
cmc
icebp
sbb
cmp
das
popa
mov
sub
dec
lods
sbb
mov
push
inc
push
adc
or
ss
dec
inc
pop
push
aam
mov
es
push
shrb
icebp
push
cld
push
loopne
pop
mov
aad
in
xchg
rcrb
lahf
repz
jmp
adc
xchg
ret
gs
pop
filds
sbb
mov
mull
fidivs
lock
aas
push
lock
mov
sbb
iret
mov
scas
mul
cmp
nop
incb
mov
mov
test
leave
fldenv
pop
lcall
xor
pop
stos
push
xor
mov
aam
adc
add
ret
outsb
in
popa
sbb
into
mov
xchg
in
loop
repz
mov
fsubs
aaa
lods
or
push
mov
loope
or
icebp
inc
pushf
and
jle
sbb
push
push
popf
aas
mov
and
cmc
loopne
xor
rcl
xor
mov
int
popa
dec
sbb
scas
jae
add
inc
push
lds
shrl
jge
or
cmp
cmpsl
movsb
push
in
hlt
fstpl
xor
cmpsb
xchg
mov
jg
lahf
cmp
dec
in
mov
xchg
imul
sub
bound
mov
insb
mov
dec
ret
adc
cmp
lds
rcrb
cmpsb
out
scas
shlb
cmc
adc
mov
lret
sub
mov
cmp
sbb
and
xchg
cmp
mov
lahf
mov
jno
cmp
iret
add
pushf
popf
and
sarl
repnz
aas
and
repnz
nop
cmp
sahf
mov
pop
call
lea
aam
and
sbb
fmuls
int3
mov
nop
leave
aam
not
test
repz
sbb
sub
sbb
inc
mov
sub
lret
test
xchg
hlt
pop
shrl
lods
cltd
xor
mov
mov
les
jge
and
nop
sub
mov
jge
jbe
dec
mov
jmp
sbb
mov
fcoms
or
xchg
bound
pop
es
into
pop
addr16
or
xchg
in
out
pop
sbb
or
test
in
sub
push
in
stos
sbb
push
jae
lret
pop
dec
loop
arpl
aas
popf
sub
xchg
mov
push
insl
push
cmp
les
movsb
cmp
incl
aaa
mov
pop
rcrl
inc
cld
xor
mov
in
pop
das
clc
or
sbb
lods
test
mov
jmp
mov
dec
lret
cmp
int
lea
jne
mov
and
pop
cmp
jb
shr
pop
lock
lods
and
mov
fildll
mov
insb
out
popf
or
push
mov
fistpl
ret
xor
jmp
jle
xchg
out
shl
push
insb
and
dec
push
lea
jl
pop
pop
rep
mov
push
adcl
nop
movsb
frstor
aad
leave
ret
push
adc
insb
psubw
sbb
xor
cmp
and
sbb
pop
sbb
in
aaa
pop
loope
mov
leave
cmpsb
setl
xchg
sub
jl
pushf
popa
mov
or
push
ret
movsb
out
fstpt
or
mov
jo
dec
mov
inc
lret
add
loop
scas
add
xchg
push
add
aad
xchg
lahf
and
fwait
repnz
xchg
adc
in
lock
loop
lods
in
push
or
std
inc
test
dec
mov
jecxz
cmp
add
pop
inc
aad
xor
les
adcb
orl
inc
or
mov
inc
jg
ja
push
mov
xlat
popa
les
mov
fucomip
sbb
popa
xchg
sbb
loopne
ret
iret
fldt
mov
xchg
insb
or
lock
scas
rol
sub
pop
cli
out
inc
and
iret
frstor
pop
dec
in
out
jb
ljmp
xor
ret
add
cli
and
inc
sarb
or
test
jo
pop
aaa
lods
loopne
fs
dec
dec
popa
jp
lret
das
test
das
addr16
dec
add
stos
pop
mov
dec
and
fstl
push
outsb
inc
test
aam
pop
scas
inc
inc
xlat
pop
mov
fildl
fsubs
ss
cld
mov
lret
pusha
shll
mov
sbb
fcmovnb
jle
scas
data16
shr
add
pop
je
adc
or
test
adc
lcall
push
mov
lds
nopl
cmpsl
fsubr
sbb
adc
es
inc
xchg
mov
shlb
testl
pop
lds
out
sahf
push
add
rclb
fistl
lods
mov
ret
xor
cwtl
adc
xchg
mov
fidivs
add
loope
addr16
jnp
jecxz
je
and
jo
fisubrl
mov
int
push
jb
and
inc
mov
out
decl
rolb
adc
jl
push
sahf
shll
test
pop
repz
cld
dec
cltd
xchg
cmpsl
out
mov
test
add
fsubl
cmpl
lahf
fidivl
push
pop
test
loop
dec
stc
sarl
jg
scas
fwait
add
setge
mov
jne
push
add
jp
stos
popf
or
mov
mov
mov
insb
add
pop
adc
pop
roll
mov
lock
cwtl
jb
dec
cmpsb
test
cmpl
pop
outsl
popf
aam
mov
in
daa
test
xchg
sub
call
jmp
cmp
push
cs
lds
push
ljmp
jno
sbb
mov
cmp
push
lret
jp
mov
mov
imul
xchg
subl
mov
pushf
cld
loop
enter
popa
sti
repz
lods
or
add
xchg
popa
ret
xchg
jp
imul
stos
mov
sbb
sbb
add
inc
lock
or
es
push
cs
and
shrb
cld
xchg
mov
xchg
dec
shl
xchg
cmp
jo
mov
flds
add
addr16
or
adc
es
cwtl
repnz
push
xor
movsl
sarb
cmp
or
push
mov
movsl
mov
jnp
lret
mov
xchg
fcoms
pop
test
jmp
addr16
mov
aam
mov
and
xchg
or
xchg
icebp
sub
fmuls
imul
mov
ficoms
repz
int
ds
mov
std
rorl
sbb
push
cmc
mov
jmp
lcall
or
inc
pop
xor
lret
push
scas
xchg
sti
jbe
xor
jns
cmp
mov
xorl
ret
cwtl
dec
loop
mov
imul
inc
out
cwtl
sahf
xchg
std
add
int3
sub
testb
adc
add
jnp
sub
cmp
js
and
inc
xchg
js
ret
cmpsl
cmp
rcrl
cmpps
mov
mov
gs
xchg
cmp
or
aad
xor
lods
inc
jp
jno
dec
fwait
lret
dec
movsb
xor
xorb
loop
mov
rolb
pop
sub
inc
jbe
cld
int
imul
and
mov
bound
ret
adc
jmp
leave
iret
pop
or
mov
lret
mov
pop
mov
int3
xor
lock
fsubr
jmp
data16
arpl
xrelease
pushf
push
cwtl
lahf
push
push
cmpsl
xor
mov
dec
xchg
mov
inc
or
cwtl
cltd
or
jg
jp
seto
inc
pop
mov
clc
pop
xchg
sarl
ja
mov
xor
repz
cwtl
das
iret
push
cli
lcall
cwtl
pop
inc
ljmp
es
mov
cltd
call
ficoms
and
sbb
je
stos
inc
sbb
mov
inc
test
adc
pop
dec
inc
sahf
sub
push
push
addb
xchg
pop
outsb
hlt
push
pop
cmpsb
aas
icebp
mov
push
fnsave
mov
and
mov
into
movsl
out
mov
imul
aam
cs
imul
and
dec
dec
adc
rorb
xorb
aam
mov
dec
cmp
sbb
jbe
stos
adc
scas
lds
push
shlb
push
insb
loope
lds
mov
loope
push
mov
dec
pop
cmpb
out
mov
cmpsb
mov
cmpsl
adc
and
in
cmp
push
mov
inc
jne
mov
mov
xor
cmp
mov
or
sub
jle
pop
push
sub
shl
sbb
pop
lahf
rorb
xor
fcomi
add
shrl
pop
and
xchg
cmp
mov
ss
sbb
push
cmovb
or
stos
lcall
sbbl
addr16
and
jae
lock
or
loop
xchg
scas
stos
sub
in
ror
xor
sub
mov
inc
clc
add
leave
cmp
jbe
jae
sbb
jo
push
andb
fstpt
fcoml
jnp
lcall
cmp
sbb
xor
mov
test
cs
inc
insb
inc
push
jno
dec
push
je
idivb
loopne
inc
push
dec
mov
cmc
rcll
push
fmuls
jnp
xchg
pop
pusha
mov
and
and
mov
ret
push
gs
sub
dec
fcomip
jge
fbstp
outsb
xchg
push
mov
enter
fs
lahf
inc
add
shll
or
data16
push
mov
repnz
cs
dec
xchg
lcall
sub
je
shll
sub
scas
sbb
jge
mov
aas
hlt
sbb
ds
fwait
push
insb
fs
sbb
jmp
push
cmp
mov
xor
pop
adc
push
jmp
jmp
xchg
out
xor
orl
movsb
adc
mov
imull
cld
dec
and
mov
add
mov
mov
mov
jmp
fadds
xor
xchg
jmp
icebp
das
cmpsb
sahf
sub
sub
scas
ja
jg
stos
add
push
xchg
mov
lcall
je
int3
jne
pusha
mov
ficoms
popl
sub
icebp
lcall
xor
ja
test
addb
outsl
aaa
loope
adc
xchg
sub
sbb
rorl
popa
or
out
cmpsl
mov
outsb
sbb
mov
mov
mov
mov
ret
lock
mov
jno
rclb
in
inc
fldl
data16
shlb
test
fnstenv
xchg
loop
add
push
test
dec
shrb
fisubl
sbb
add
int
dec
insb
fwait
jb
cmp
xchg
ffreep
mov
loope
jbe
pop
mov
sbb
aas
cmpsl
jo,pt
fmull
andl
aas
out
addr16
stos
push
fmull
inc
sbb
mov
call
inc
sbb
popf
lock
inc
mov
mov
jle
or
mov
ss
mov
inc
push
and
cmpsb
and
add
mov
enter
dec
or
jmp
hlt
adc
ss
jmp
jl
mov
loope
push
pushf
int
pop
mov
push
dec
out
pop
ret
fmull
push
add
pop
scas
adc
jb
loopne
ss
bound
fbstp
rolb
sahf
xor
pop
sub
and
mov
xor
push
lods
fldl
mov
pusha
mov
icebp
pusha
test
sbb
mov
sbb
aas
mov
and
adc
bound
popa
enter
mov
lahf
mov
mov
out
jns
jo
xchg
xchg
lahf
outsb
pop
inc
outsl
incb
icebp
orb
mov
sbb
xchg
sub
hlt
cmpsb
inc
stos
xchg
mov
jno
add
enter
jb
mov
or
sub
push
mov
inc
daa
filds
rcrl
lret
xor
or
pop
or
mov
mov
mov
xchg
ja
imul
add
stc
test
stos
dec
loop
or
out
cmpsl
js
in
ret
sbb
push
mov
xor
es
cwtl
and
pop
out
add
mov
std
pusha
insb
mov
pusha
cwtl
push
inc
int3
fidivrl
in
cmp
jecxz
add
jecxz
cltd
cwtl
add
xor
inc
sbbl
cltd
fisubl
pop
shr
repz
mov
xor
push
arpl
je
dec
cmpsb
sub
xchg
loopne
seta
add
xorb
cmpsl
mov
ja
icebp
xchg
jo
arpl
loope
lcall
sub
pop
and
push
xor
dec
rcrl
test
mov
mov
ret
push
inc
adc
test
inc
and
add
mov
mov
mov
xchg
and
mov
mov
cmp
enter
out
and
mov
jle
xchg
popa
test
into
mov
loope
pop
jo
enter
outsl
mov
cmpsb
stos
inc
fmuls
insb
stc
sbbb
cvtss2si
in
test
mov
scas
cmp
cmpsl
shrb
jecxz
push
popa
mov
decb
jmp
out
popa
bound
std
pop
aaa
mov
push
mov
loope
repz
mov
inc
add
and
sub
das
sub
repnz
sub
jecxz
cmc
xchg
ss
pop
imul
jb
jo
es
adc
loopne
loop
sbb
clc
sub
or
out
in
adc
jae
mov
stos
in
leave
jecxz
sbb
lcall
cli
inc
fsubrs
pop
shlb
push
inc
mov
push
inc
decb
push
push
add
mov
fsubrl
jg
pop
sbb
fwait
xor
mov
rorb
shrb
sub
lock
fimuls
punpckldq
sub
push
stos
mov
push
ja
loop
adc
mov
and
addb
mov
shll
add
sbb
and
cld
xchg
lods
pop
xchg
xor
dec
xorb
mov
xor
jno
push
aas
aam
insb
push
outsl
push
outsl
aas
inc
dec
nop
test
and
subb
mov
push
jg
test
mov
fucomp
or
cmp
and
scas
adc
lea
and
mov
jecxz
rorb
adc
push
mov
jnp
test
jecxz
mov
xchg
dec
sub
imul
dec
push
ljmp
out
test
cmpsb
xor
xchg
push
fidivs
dec
fstl
add
mov
mov
cltd
and
into
mov
aad
sub
mov
dec
dec
sti
leave
cmp
outsb
iret
adcb
mov
jge
test
sbb
jnp
in
mov
cwtl
das
aas
pop
cmp
sbb
mov
adc
aam
fs
popl
or
stc
decb
mov
in
mov
jb
js
pop
outsl
jle
push
or
or
jge
lret
pop
pop
mov
pusha
fwait
push
mov
hlt
mov
and
mov
jle
mov
ret
add
xchg
mov
or
inc
hlt
jno
es
sbb
gs
or
hlt
xchg
decb
fcompl
pop
popa
jnp
shrl
int3
roll
or
clc
jg
or
pusha
or
pop
or
jne
sub
movsl
scas
fwait
rcl
outsb
iret
loope
ja
jno
mov
jl
push
test
scas
js
fdecstp
cmp
addr16
sub
in
mov
aas
push
ss
dec
dec
mov
lock
and
adc
cmp
xchg
andb
stc
aad
int
arpl
mov
jne
ss
mov
mov
adc
adc
sub
popf
or
dec
inc
pop
jne
adc
loop
mov
jae
aaa
aaa
ds
mov
in
add
jl
inc
cld
aas
shll
test
stos
inc
ss
repnz
xor
adc
jmp
cmp
xchg
shlb
add
imul
mov
cmp
rcrb
iret
pop
pusha
mov
adc
cmp
sub
xchg
test
cmpsb
mov
push
leave
jo
mov
stos
push
fdivrs
icebp
insb
dec
adc
push
inc
cmp
xor
pop
setle
lods
inc
adc
adc
jle
pushf
test
aas
push
dec
jge
imul
loope
loope
jne
inc
cmpsl
pop
imul
xor
xchg
ret
repz
in
movsb
xchg
inc
stc
cmp
imul
stos
cmp
mov
push
jg
inc
gs
ret
scas
mov
and
iret
push
mov
mov
push
in
out
test
add
sbbl
fists
sub
daa
dec
test
pop
dec
cmp
xor
push
pop
in
mov
sbb
pushf
les
dec
loop
insb
sti
stos
fsubrs
imul
pop
mov
xor
orb
and
mov
or
int3
stc
dec
jae
jnp
xchg
sub
repnz
fldenv
inc
and
ret
clc
jae
push
pop
jle
into
out
test
pop
inc
xchg
sarl
adc
xchg
push
pushf
cli
loope
or
mov
sbb
lcall
xor
mov
stos
imul
xchg
inc
js
insb
push
in
sbb
daa
scas
cmpsl
sbb
and
xor
ret
les
cmp
push
ss
pop
pop
mov
into
popa
pop
mov
xor
cmpsb
cmp
fs
inc
jmp
push
cltd
and
aas
mov
outsb
mov
jg
pop
jno
ror
int
insb
jp
push
inc
frstor
xchg
jmp
dec
testb
rcrl
clc
push
or
sbb
cmp
cwtl
sub
sbb
ss
lahf
movsl
leave
icebp
jae
inc
push
jmp
cld
xor
cmpsb
and
push
push
cmp
jl
aas
popf
hlt
jmp
mov
imul
dec
cmp
mov
pop
sahf
dec
in
jmp
pop
data16
cmp
fisttpl
jge
in
sbbb
or
out
push
or
lock
popa
add
pop
mov
repnz
pop
mov
sti
xchg
repnz
movsl
sbb
lcall
leave
ljmp
add
dec
lret
cmc
sbb
dec
mov
jo
pop
jecxz
jb
daa
inc
dec
add
mov
sub
add
testb
jl
ds
stos
add
push
cmpsb
sub
test
mov
scas
jp
or
clc
cmp
lods
faddl
dec
cmp
lods
mov
mov
imul
jns
sbb
fsubs
xchg
inc
test
and
sbb
popa
sbb
adc
push
fwait
pop
shrb
loope
bound
add
push
cltd
adc
xchg
xor
add
sbb
fistpl
xlat
repz
or
sub
mov
ret
lret
sbb
sub
push
pushf
xor
and
jae
dec
jb
ds
cmpsb
dec
fwait
lock
addl
add
arpl
sbbb
daa
repz
jmp
subl
loope
sti
xlat
cmp
mov
mov
inc
xchg
sub
data16
push
cwtl
xchg
push
inc
mov
popa
push
repnz
arpl
mov
push
cli
call
push
leave
lods
aas
call
mov
add
sbb
mov
enter
sbb
fiaddl
iret
test
js
gs
adc
fidivrs
insb
lret
push
ret
outsl
int
add
rcrl
inc
lea
loopne
popf
stc
xchg
xor
scas
cmp
cmpsb
cmp
inc
xor
lret
lret
repz
ror
lds
dec
adc
xchg
mov
push
out
inc
shrl
aam
jae
add
jne
mov
pop
int
push
repz
loop
adcb
mov
adc
mov
test
js
gs
data16
pop
lret
lock
jno
into
loop
push
sbb
test
insl
jg
notb
xchg
push
sub
je
or
and
xor
int3
lret
mov
pop
hlt
xorb
sbb
lock
pop
icebp
xor
cmp
addl
pop
mov
mov
inc
rolb
push
cmc
xor
push
icebp
lds
or
cmp
push
ljmp
inc
repz
jns
dec
and
mov
mov
mov
out
adc
mov
je
inc
ds
test
xor
les
rorl
nop
test
jge
fsts
sbb
lds
imul
call
int3
mov
xchg
adc
inc
and
ljmp
insl
insb
imul
arpl
pop
cltd
pop
je
aaa
stc
and
stc
cmp
loop
ficompl
add
lods
ljmp
insb
mov
sub
adc
lods
cmp
cltd
mov
sbbb
add
adc
and
ret
or
mov
push
or
fstl
fbld
testl
adcb
xchg
out
xor
xor
xor
push
sbb
mov
mov
rcr
inc
dec
mov
in
xchg
dec
push
out
ds
in
mov
push
iret
and
js
fsubr
xor
inc
xor
test
jbe
mov
test
imul
xchg
clc
push
cs
lahf
mov
cmp
or
ds
ljmp
pusha
testl
scas
jle
pop
xchg
test
or
pop
pop
xchg
repz
movl
int
mov
hlt
push
stos
mov
pop
jne
fimuls
flds
cs
fiaddl
test
outsl
or
jbe
out
mov
roll
fdivrl
adc
jb
int
mov
pop
gs
cmpsb
cld
dec
pop
fbstp
push
push
fimuls
arpl
jns
xchg
popf
cmp
sbb
sbb
mov
bound
loopne
xor
cli
push
dec
sbb
ret
xchg
ds
test
test
jno
repnz
aam
shll
or
cmpl
cmp
cltd
call
jge
sahf
xor
and
test
test
sbb
outsb
mov
push
jae
imul
mov
lcall
sbb
pop
pop
xchg
sbbb
out
sbb
enter
dec
add
dec
aam
or
je
icebp
pop
xor
fmul
pop
rcl
test
inc
or
inc
mov
add
lods
or
fcmovu
xlat
jo
repz
scas
sbb
push
mov
incb
jmp
and
out
jg
sbb
xor
ds
dec
bound
add
sub
fwait
test
adc
out
adcl
jle
xor
dec
xchg
das
mov
sbb
ret
aad
xor
fistpll
in
hlt
xor
mov
clc
jns
mov
sahf
and
push
pop
movsb
gs
inc
loopne
add
out
orb
cmpsb
push
adc
rorb
lcall
jbe
sub
int3
outsl
cmp
mov
insb
jmp
stos
test
rorl
les
mov
outsl
ja
nop
test
mov
das
test
xlat
jmp
mov
sub
inc
sub
std
xor
inc
enter
in
cld
push
rcll
mov
pop
test
mov
and
test
lds
repz
sub
jbe
jb
pusha
mov
push
roll
xchg
daa
dec
pop
jo
mov
cmp
int3
cltd
loopne
inc
adc
xor
add
out
rorb
sbb
js
mov
inc
and
cmpsl
inc
data16
push
jmp
sbb
mov
stos
dec
loopne
push
xor
in
sarb
into
adc
and
pop
mov
in
jne
push
jge
lods
stos
sbb
jg
xor
aaa
mov
lea
jb
cld
sub
test
pop
lock
fwait
lcall
sbb
div
push
sbb
jns
shl
lcall
add
imul
mov
in
pop
and
ret
inc
mov
ljmp
pop
mov
pop
cld
psubsw
pop
das
popf
arpl
lret
jge
fldl
int3
daa
xchg
repnz
jae
out
mov
push
mov
into
addr16
fs
js
or
and
add
cld
or
jno
out
pop
mov
add
data16
into
push
sub
fucomi
mov
enter
int
xchg
xor
inc
ret
ret
sub
das
insl
or
js
iret
lea
inc
xchg
mov
and
fmul
or
adc
inc
imul
push
cmp
jnp
subl
xchg
cmpsb
mov
lds
int
scas
imul
lahf
sub
and
sub
insl
out
ret
call
sarl
sbb
jbe
push
dec
fsubl
jl
pop
cmp
dec
jg
std
lods
xchg
add
inc
xor
cld
sub
mov
dec
pop
sbb
sub
pusha
mov
repnz
or
jno
cmp
pop
insl
pop
mov
and
movsb
jne
jbe
mov
jge
jmp
mov
pop
addl
mov
sarl
pop
sub
std
mov
insl
inc
add
sub
insl
addr16
push
icebp
frstor
ret
movsl
loope
xchg
pushf
scas
cmp
out
outsl
cltd
stos
fmuls
loop
outsl
add
ret
mov
loop
sahf
out
sbb
cmp
ret
jo
insl
or
sbb
dec
ret
xchg
sahf
repnz
mov
mov
mov
jp
hlt
cmp
xchg
adc
gs
sbb
jge
cmp
addr16
addb
outsb
inc
lret
popa
dec
cmpsl
int3
and
jle
lods
inc
dec
mov
xor
scas
data16
jo
stc
xchg
addr16
test
sub
pop
mov
mov
jnp
movaps
pop
push
into
in
mov
test
push
daa
out
pop
fmuls
lcall
fwait
cmp
clc
les
repz
aam
rorb
pavgw
jl
mov
add
xchg
loopne
xchg
push
lea
inc
mov
pop
ss
or
fs
repz
mov
ja
sbb
ljmp
std
test
das
mov
or
lods
sub
mov
mov
push
frstor
lds
insb
mov
shrb
mov
dec
push
out
mov
pop
inc
cli
pusha
std
outsb
sbb
rorl
dec
and
dec
dec
inc
cmp
iret
adc
xchg
cs
adc
lds
mov
lock
adc
push
clc
mov
scas
mov
mov
mov
lret
movsb
mov
adc
mov
jl
lea
or
cmp
and
jge
sbb
out
shlb
enter
mov
fwait
std
xor
jmp
sbb
pop
mov
mov
pop
adc
jge
cwtl
stos
fstpl
leave
maskmovq
imull
scas
adc
test
jmp
pop
sti
or
push
rcrl
mov
pop
push
add
and
stc
pop
mov
xchg
loop
jae
jp
popa
movsb
jns
pop
ret
sar
out
mov
push
stos
push
cmp
stos
arpl
loop
push
cmp
dec
push
jmp
pop
adc
cld
test
repnz
dec
pop
mov
push
scas
outsl
fstl
repnz
je
sub
sbb
test
xchg
cwtl
inc
cmc
sbb
mov
xchg
xor
sbb
out
pop
dec
rcrl
out
inc
jb
ja
lahf
jbe
sub
arpl
cwtl
std
lods
mov
sbb
push
dec
mov
dec
mov
fidivrs
or
mov
cltd
mov
popf
sub
sub
clc
push
fisttpl
insl
cli
pushf
aam
lock
mov
push
lods
dec
jo
shll
xchg
jno
push
cmpsl
add
inc
xchg
in
lds
ljmp
mov
loope
push
push
jl
mov
out
pop
loope
out
cmp
lock
push
jbe
sub
push
and
outsb
sub
mov
scas
dec
cmc
orb
sarb
shlb
fdivrl
movsb
loope
fwait
adc
mov
mov
pop
push
scas
test
fstpt
lock
pop
mov
and
and
jmp
or
push
inc
mov
xor
xor
out
cmp
mov
xor
decl
sbb
lea
in
cmp
clc
inc
inc
mov
xor
adc
push
mov
mov
fcoms
insl
lea
xchg
ja
mov
cmp
adc
out
xchg
mov
and
or
imul
es
or
sbb
mov
xor
iret
mov
jmp
inc
mov
jo
fwait
pop
loop
xchg
adc
loopne
stos
push
lods
ffreep
dec
jns
inc
xor
imul
and
xchg
push
mov
cwtl
or
cmp
mov
add
sub
push
sbb
and
dec
jecxz
inc
dec
cmp
adc
push
sahf
mov
dec
das
xchg
ljmp
inc
fs
mov
fidivrs
jno
or
enter
mov
push
movsl
insb
cmc
rcrb
sar
lcall
in
nop
pop
inc
fnstcw
adcb
mov
pop
xchg
movsb
and
mov
xor
out
push
push
cltd
push
pop
dec
rep
ss
fwait
and
mov
jnp
and
pop
frstor
int
sbb
sub
cmp
into
mull
mov
sbb
xchg
sbb
pop
mov
movsl
pop
stos
fld
dec
scas
out
pop
bound
cwtl
push
mov
nop
push
stc
xchg
push
mov
jmp
fistl
daa
add
sub
push
add
sbb
cmc
dec
push
arpl
pop
mov
aas
push
xchg
clc
xchg
push
shlb
lret
add
cmp
cli
xchg
stos
dec
jne
testl
xchg
sub
jno
mov
jo
and
ljmp
outsb
pop
dec
loope
jbe
xchg
leave
int
in
fbstp
push
and
cmp
adc
xchg
jge
add
jg
push
or
and
xchg
push
ljmp
dec
mov
xor
sub
sarl
dec
fdivr
pusha
or
pop
loop
rolb
mov
cld
inc
ss
aaa
cld
inc
inc
test
inc
test
jge
xchg
dec
xor
aad
int
in
pop
cld
fwait
cld
push
rclb
mov
mov
data16
ja
xchg
mov
cs
xlat
pop
cmp
pushf
sub
add
mov
mov
and
sbb
cmc
je
addr16
sub
mov
mov
jae
jb
xor
in
pushf
inc
outsb
cltd
std
ret
scas
adc
push
inc
test
or
test
lret
cld
ror
enter
xor
and
cmpsb
mov
inc
shlb
int
push
fxch
popa
out
dec
aad
sub
cmp
data16
stos
out
mov
push
shrl
sbb
outsb
push
std
nop
pushf
iret
and
mov
jecxz
sbb
xchg
repnz
insl
push
repz
lahf
dec
add
imulb
sbb
adc
jge
movsb
fwait
xor
bound
outsb
testl
in
push
ljmp
mov
xor
ljmp
inc
mov
cmc
ret
ljmp
lock
scas
adc
jmp
sqrtps
dec
xor
ret
sub
dec
leave
or
cmpsl
and
push
mov
add
addr16
xchg
mov
jp
adc
push
movb
cli
xchg
and
ret
mov
mov
or
adc
fildl
es
add
enter
lods
xchg
mov
xchg
sub
mov
push
gs
push
int3
jl
daa
leave
stc
stc
nop
adc
mov
inc
fnsave
cld
aaa
lret
mov
lret
cld
cwtl
xor
cmpsl
mov
xor
sahf
stc
push
jb
xor
popa
xor
aam
pop
xor
push
dec
sub
mov
mov
mov
adc
rol
stos
xor
mov
pop
hlt
lods
mov
fmul
popa
and
adc
pop
jle
sahf
outsl
pop
sarl
or
pop
cmp
pop
in
xchg
push
movsl
mov
cmpsl
bound
push
fwait
mov
stc
movsl
sbbb
in
sbb
inc
stos
jmp
mov
es
js
dec
push
jg
pop
imulb
xchg
jns
sbb
std
mov
inc
mulb
dec
in
xor
inc
pop
mov
inc
xchg
jno
call
or
mov
rorb
pop
add
jle
pop
hlt
pop
sub
or
cltd
in
out
sti
push
dec
dec
cmp
lock
icebp
int
xor
in
lea
add
or
push
ret
rcrl
mov
loope
ja
mov
and
inc
pop
hlt
pop
imul
mov
or
jbe
sub
inc
cli
js
lcall
repz
icebp
jl
sub
fimuls
stos
cmc
mov
hlt
sub
cltd
add
mov
jnp
lods
enter
sbb
mov
mov
lret
sbb
out
hlt
pop
jb
out
stos
test
mov
addr16
subb
or
and
mov
push
repz
xchg
mov
lods
int3
jae
shl
cmp
leave
sub
mov
aad
mov
pushw
decb
std
repnz
jb
arpl
add
shrl
mov
mov
inc
push
inc
pop
cmp
test
iret
sbb
negl
and
inc
fimuls
mov
in
jp
mov
jp
sti
rcr
test
and
mov
push
and
leave
pop
out
push
mov
movsl
pop
mov
pop
stc
js
cmp
pop
mov
pop
sbb
fnstsw
shrb
push
lahf
idivl
ss
es
mov
lods
push
aas
notl
aam
xchg
sub
and
mov
xchg
mov
lcall
movsb
cs
fnstsw
push
pop
dec
dec
or
inc
or
dec
push
daa
or
and
test
fisubs
fildl
pop
xchg
sahf
jbe
shll
or
inc
pop
mov
aam
push
xchg
xchg
addr16
ficomps
sbb
mov
pop
repnz
fwait
imul
push
cmpsb
cmc
cmc
cmp
movsb
loope
adc
xchg
xchg
es
fsubp
gs
addl
sbb
push
je
jnp
mov
clc
jmp
inc
add
pop
fs
sbb
repnz
add
jae
shrl
mov
or
scas
jno
mov
call
lock
jnp
and
add
xchg
imul
int3
and
ror
test
jb
mov
icebp
pop
daa
popw
adc
shrl
aam
imull
jl
lea
jns
and
jno
add
push
rcrl
jbe
cmpsb
test
mov
jno
adcb
lret
aaa
push
xor
push
cltd
mov
daa
fucomip
pop
push
int
pop
fsubrs
ss
add
gs
stos
aam
sub
push
out
xchg
adc
push
popf
push
mov
add
fdivs
pop
push
add
jl
loop
out
push
mov
in
mov
adc
push
fmuls
and
mov
mov
repnz
cmc
adc
mov
sbb
fwait
cld
mov
fsubr
mov
jno
arpl
insb
or
in
loopne
lahf
and
xlat
lods
inc
leave
add
push
cmp
dec
xchg
pop
repnz
frstor
sbb
mov
push
cmp
int
xchg
add
lret
push
js
or
sub
in
mov
icebp
pop
icebp
cmp
lcall
mov
push
cmp
dec
sbb
jle
ret
ss
push
in
stos
xchg
mov
add
push
popf
pop
jle
mov
pop
or
cmpsb
push
insb
ror
cmpsl
push
sbb
mov
scas
xchg
sub
mov
mov
and
adcl
inc
scas
cmp
xor
pop
pop
sub
data16
cmpsb
sub
dec
stc
iret
xor
ljmp
cmpsb
andb
push
outsl
adc
and
lock
push
jae
mov
aam
mov
cmp
mov
cmp
addl
shrl
adc
inc
dec
dec
fistpll
dec
out
and
xlat
push
insl
sub
in
imul
icebp
insb
or
stos
and
mov
insb
sbb
inc
cmpsl
xchg
mov
dec
pop
enter
scas
xor
insb
stos
repz
or
aad
add
sub
pop
jo
jb
sub
scas
ret
sub
fisubs
and
in
or
ljmp
les
sub
pusha
xor
mov
adc
aas
sahf
outsb
add
inc
imul
adc
addb
and
jecxz
pusha
incl
mov
fwait
push
mov
or
aam
popa
push
outsl
cmp
mov
rcll
jg
xchg
insl
inc
dec
or
add
jmp
cmc
das
es
mov
js
les
pop
nop
sbb
add
fsubrs
sub
inc
xor
jo
xorl
jb
or
insl
scas
in
js
je
lock
frstor
xor
cld
scas
insl
out
enter
inc
fildl
xlat
lret
sarw
sti
arpl
xchg
mov
aad
xchg
mov
mov
add
fucomp
sbbw
out
cs
jno
mov
lea
cmp
scas
cmpsb
ffreep
in
pop
and
lds
or
dec
fsubr
test
sarl
pop
jae
cld
leave
and
in
sbb
test
out
scas
out
push
mov
xor
loope
inc
in
pop
mov
mov
les
add
inc
pop
inc
cmp
mov
cmp
push
sub
sub
cmp
jbe
adc
add
ds
jo
mov
and
xchg
filds
mov
xor
xchg
mov
aaa
push
cltd
xor
outsl
xchg
sahf
cltd
or
mulb
adc
outsl
orb
mov
push
and
jp
enter
aam
dec
pop
fucomp
cmp
sbb
pop
mov
ja
sbb
mov
and
or
imul
mov
push
enter
cli
mov
push
sbbl
insl
jb
out
and
mov
push
fistps
xchg
cmp
jg
ljmp
adc
pop
loope
divb
sub
sbb
adc
fs
cmpsl
ds
idivl
fisttpll
cmovbe
lcall
and
dec
aas
jns
xchg
or
mov
mov
fsubr
mov
das
test
sti
or
cmpsb
jge
mov
lds
aad
sub
mov
mov
lcall
imul
and
mov
add
leave
fnstsw
pop
dec
mov
jae
xchg
sub
xchg
std
lcall
in
jp
test
push
xchg
lea
insb
movsl
mov
sbb
add
cmpsl
and
out
push
xorb
pop
mov
js
jl
in
pop
fucomi
inc
dec
jge
aam
mov
xchg
cmpsb
rcrb
xlat
repz
and
shlb
outsl
jmp
pop
inc
lcall
and
imul
out
notb
aad
and
fildll
mov
pusha
sub
jp
enter
mov
in
add
daa
out
dec
inc
fidivrs
insl
mov
mov
sbb
mov
or
xchg
sub
rorl
mov
push
jae
stos
xchg
sarb
stos
aad
in
or
inc
sbb
xor
cmp
es
and
xor
cmc
jns
cmpsl
mov
jo
mov
stc
int
loope
jae
add
xchg
push
rep
pop
mov
mov
add
or
into
xchg
jmp
pop
dec
ds
xchg
pop
xor
dec
mov
fistl
movsb
cmp
ds
dec
add
shlb
adc
mov
dec
sti
jbe
shrb
icebp
and
pop
iret
fwait
push
mov
out
divl
pusha
and
test
call
xchg
sbb
mov
mov
movsl
lock
and
mov
mov
shlb
bound
push
mov
int
add
sbb
mov
out
jl
jp
mov
mov
jg
pop
sbb
push
or
out
aas
data16
jp
notl
dec
xlat
xchg
sbb
mov
sbb
mov
xchg
add
and
inc
lods
inc
pushf
mov
int3
inc
outsl
movsb
aaa
fcmovbe
sub
aaa
pop
sub
lock
mov
mov
sbb
dec
mov
shr
faddl
inc
lret
sbb
and
push
daa
mov
addl
jbe
and
cmc
or
fisubs
popa
dec
or
jnp
loope
xor
pusha
sub
mov
mov
pop
ljmp
repz
out
push
call
push
pop
mov
add
xchg
arpl
mov
pop
xor
mov
icebp
push
add
cmp
daa
pop
out
pop
notl
stos
mov
icebp
insl
test
cmpsb
mov
or
inc
inc
daa
outsl
out
jl
adc
out
mov
dec
xor
sbb
cmp
dec
bound
sbb
push
mov
jle
or
cmp
mov
sub
jl
pop
cmp
push
movsl
call
sbb
les
pop
ljmp
cmp
push
movsb
add
popf
sub
fucomp
cli
movsb
dec
fsubl
mov
jl
cmp
jbe
iret
pusha
mov
and
adc
push
jbe
push
shrb
es
lock
mov
add
cmp
negb
xor
push
mov
mov
pushf
mov
rcll
mov
ret
test
cmp
test
cmpl
nop
sbb
dec
out
pop
mov
push
mov
cmp
push
jo
xchg
xchg
jge
push
sub
sbb
dec
mov
outsl
mulb
pop
je
push
imul
jecxz
inc
inc
int3
mov
pop
stos
in
jnp
aad
fildl
cmpl
stos
jne
fisttps
js
into
clc
add
add
xchg
enter
cwtl
test
ret
mov
mov
pop
in
cmp
nop
in
sub
mov
push
jb
scas
jb
inc
mov
jae
cld
xchg
imul
jp
and
outsb
pop
xchg
in
mov
or
inc
outsl
fwait
test
xchg
xchg
push
outsl
add
ret
add
lcall
and
je
test
xchg
icebp
jmp
sbb
cs
mov
ljmp
push
sahf
punpckldq
jmp
push
in
adc
test
xlat
pop
jbe
push
js
mov
push
movsl
repz
push
push
mov
mov
cmp
pop
pop
cmp
or
in
jg
int
mov
mov
push
add
mov
ret
jae
in
mov
test
clc
xchg
sbb
jmp
mov
cmp
xor
repnz
xlat
cwtl
sbb
call
js
pop
mulb
or
cld
cmpsb
cwtl
dec
int
pop
or
cwtl
les
dec
and
testb
adc
mov
xchg
arpl
pusha
std
imul
mov
jg
pop
out
xchg
add
test
subb
mov
repz
out
mov
push
jnp
ror
js
sub
shrl
lods
jo
clc
daa
push
loopne
ljmp
add
out
push
sbb
dec
sbb
daa
or
pop
jae
dec
cmpsl
sbb
bound
push
mov
push
je
lds
pop
lods
xchg
movsb
jmp
bound
push
in
dec
fisubrl
iret
sub
cmpl
jle
test
or
mov
je
out
or
out
mov
scas
xchg
inc
repz
mov
push
mov
fsubr
aad
push
push
repnz
inc
sbb
cli
mov
push
hlt
inc
xchg
add
and
fsubrl
mov
shl
hlt
stos
ds
jmp
or
mov
mov
xchg
push
or
and
mov
insb
cmp
mov
dec
lods
cmc
and
dec
push
mov
mov
mov
push
scas
ret
hlt
fsubrs
xchg
fstps
inc
out
jle
enter
aad
jmp
loopne
or
mov
and
mov
stos
arpl
sbb
push
cmp
or
xrelease
leave
push
push
je
je
fsubs
inc
loopne
jle
sub
movsb
mov
loop
xchg
inc
notl
loop
pop
mov
nop
inc
fisubrs
dec
call
pushl
mov
icebp
addb
ljmp
pop
cmp
pop
shlb
pop
jns
mov
loope
stos
fdiv
mov
fsubr
jp
xchg
inc
icebp
jg
repz
movsb
and
imulb
shrl
or
cmp
out
push
add
nop
out
test
dec
xchg
xlat
cmp
ret
dec
mov
pop
insl
ret
iret
xor
add
popf
xchg
fwait
sub
fidivrs
push
xlat
xor
xorb
cmp
lock
push
or
leave
jg
mov
jnp
or
in
call
xchg
cld
adc
test
push
mov
adc
insl
aaa
arpl
mov
sub
out
in
push
push
xor
into
pop
jo
or
mov
inc
pop
xlat
dec
rcrl
and
ret
pop
xrelease
dec
pop
cmc
shlb
adc
jb
sbb
inc
js
repnz
sbb
cmp
xchg
andb
in
mov
repz
shl
jge
mov
push
fs
lods
and
mov
mov
clc
dec
inc
loop
fbstp
pushf
scas
test
push
mov
cmp
sub
test
inc
pop
jp
sbbl
jb
mov
imul
mov
push
popa
orb
dec
loopne
std
in
cmp
cmp
pop
lods
inc
scas
or
inc
mov
mov
pop
cmpsl
inc
cmc
add
add
fistps
mov
sbb
cmp
ds
mov
pop
xchg
jl
xchg
popa
imul
adc
mov
mov
jno
ljmp
push
adc
jns
xchg
js
adc
movd
xchg
mov
pop
jecxz
or
je
mov
es
loopne
jb
adc
aas
fnstsw
sub
testb
mov
pop
jne
or
movsl
in
leave
push
sub
mov
int3
mov
loopne
jmp
pop
sub
scas
cs
xorb
sbb
into
cmp
and
mov
idivb
ds
push
sbb
sbb
fnstcw
jne
and
test
dec
dec
les
push
pushf
sarb
pop
cli
lock
fisubrs
leave
cmp
cmp
cmp
inc
pcmpgtd
jno
dec
sub
cltd
sub
sub
cli
pop
xor
fs
ret
shrl
sbb
mov
test
cmc
jne
out
out
sbb
hlt
dec
pop
es
daa
push
aas
cmp
shl
jne
cmc
out
jbe
fdivrs
pop
inc
call
dec
jecxz
dec
jl
mov
add
js
fwait
pop
pop
icebp
cmp
dec
leave
inc
inc
hlt
lret
je
inc
pop
jo
aam
es
pop
cmpsl
inc
add
mov
fnstsw
js
adc
das
sbb
js
push
jb
insb
mov
scas
xor
fs
js
xchg
mov
imul
cmp
test
incb
fidivs
into
and
push
call
in
out
push
ret
or
pusha
jl
test
jns
outsl
adc
mov
mov
pop
andb
sti
cmpsl
les
dec
shll
icebp
sbb
lods
adc
dec
cmp
push
adc
inc
ret
insb
sbb
addr16
out
mov
inc
test
insl
rcr
mov
push
or
xchg
gs
loop
lcall
cmpsl
cmp
mov
jae
and
fists
pop
aaa
and
mov
sub
dec
pop
and
xor
out
jmp
ret
sbb
pop
insl
les
es
dec
in
lods
mov
pop
push
js
jge
push
imul
xchg
jo
inc
sub
dec
mov
and
jns
adc
clc
mov
add
cmpsb
jp
stos
jo
dec
pop
jnp
adcb
test
cld
fsubp
mov
movsb
or
lret
es
inc
ficomps
pop
outsb
add
aas
cmc
inc
xchg
inc
mov
push
scas
sub
dec
push
lods
cmpsb
sub
inc
or
fildl
jne
outsb
es
loope
lahf
jmp
scas
jp
stos
inc
das
pushf
jae
or
rclb
sbb
inc
lds
pop
ds
inc
lahf
cmp
out
fsubrs
mov
les
shrl
push
mov
aas
cmc
emms
inc
clc
push
out
push
mov
fnsave
movsb
dec
sub
inc
inc
popf
sub
nop
stos
gs
pop
mov
dec
jne
mov
cmp
test
mov
je
or
jbe
lods
arpl
addl
push
in
addl
sti
xor
bound
testb
or
and
lock
push
or
add
iret
mov
jp
push
icebp
pusha
out
lahf
mov
jmp
mov
ret
push
cmp
insl
test
ss
or
or
out
push
pop
outsb
ret
sbb
movsl
insb
in
mov
dec
jmp
dec
insl
mov
lds
scas
dec
fistps
jmp
into
in
adc
mov
in
lods
push
inc
mov
bound
cmp
je
add
push
jae
pushf
inc
jmp
xchg
sub
mov
dec
mov
rclb
xchg
push
xor
icebp
xor
jmp
repz
test
in
rcrl
adc
dec
jb
dec
mov
dec
mov
es
insb
lock
jnp
adc
insl
xor
rclb
jo
jns
pop
sbb
hlt
les
pushf
jo
iret
sub
or
in
shlb
push
cmp
push
stos
jmp
outsb
pop
popf
fmulp
fwait
lock
subl
cmp
fiadds
out
adc
inc
call
je
pop
mov
mov
push
sbb
lahf
jbe
push
sbb
dec
inc
jl
mov
cmp
jnp
addr16
cmpsb
cwtl
mov
cmpb
sti
or
popf
pop
iret
movl
cmp
fldt
imul
pop
ret
mov
jle
jns
fwait
inc
pop
int
lock
repnz
pop
mov
movsb
dec
shll
stos
call
mov
les
xchg
cmp
ja
out
mov
jnp
fcompl
jb
arpl
stc
xchg
stc
inc
mov
int3
inc
sbb
idivb
addr16
mov
popa
stos
jmp
andl
sub
push
lods
scas
rcl
jmp
inc
xor
xchg
inc
movsb
repnz
mov
push
jl
stos
insl
popa
or
push
push
mov
fs
jmp
ljmp
movl
inc
or
les
cmpsb
push
mov
jecxz
scas
cli
test
dec
push
data16
inc
xorb
or
ret
pop
into
mov
ficoml
xchg
xchg
xor
fwait
jp
cld
aaa
sub
scas
push
addl
subb
xchg
pop
in
test
pop
xchg
bound
ds
lahf
out
push
push
pop
xor
decb
inc
stos
jae
fwait
call
and
test
mov
loope
mov
pop
test
jne
movsl
jne
cld
mov
lock
inc
es
xchg
imul
addb
xor
adc
leave
repz
pop
sbb
add
loop
gs
add
lock
lret
lret
roll
cwtl
add
es
negl
xlat
inc
push
xor
mov
add
mov
mov
sbb
mov
inc
in
movsb
push
loope
jnp
xor
xchg
mov
jecxz
ds
fistpl
xchg
pop
stos
pop
sub
movsl
dec
pop
mov
and
mov
rol
cs
imull
and
mov
dec
jg
mov
aas
adc
cltd
seta
jecxz
out
cld
sbb
scas
loopne
js
ficompl
cltd
push
jae
sahf
push
push
pop
sbb
ror
add
push
arpl
scas
mov
mov
push
xlat
mov
cmpsb
das
xchg
push
sub
mov
mov
jmp
or
jnp
lods
nop
inc
jae
stos
inc
lods
mov
leave
out
lcall
or
mov
push
push
aaa
test
mov
pop
enter
sub
pop
xlat
and
sbb
loopne
sub
clc
lahf
loope
andb
cld
xchg
sbb
icebp
movsl
add
inc
jne
lock
push
dec
jecxz
lret
int
shll
sbb
das
push
cltd
and
add
int3
fs
or
fs
jmp
scas
pop
mov
addr16
sbb
clc
push
je
fwait
aas
push
xchg
mov
and
int3
mov
mov
jbe
inc
fsubl
xchg
gs
xchg
or
inc
daa
pushf
mov
pop
sub
ljmp
lods
xchg
je
movzbl
dec
scas
xor
iret
sub
mov
sahf
lahf
push
fiadds
cmp
xchg
jg
adc
idivl
mov
clc
cmpsl
adc
cwtl
es
jns
sbb
sub
adcb
xlat
push
lods
and
and
pop
int
nop
in
pop
push
jl
sub
pusha
mov
pop
enter
cmpsb
faddl
stc
dec
cmp
add
pop
shrl
sub
xchg
push
pop
loope
sbb
pop
lea
test
mov
shr
pop
test
pop
repz
sbb
cmp
xor
aam
jnp
xor
fcoms
push
aas
mov
sbb
orb
mov
sub
loope
jge
and
int3
loope
xlat
fwait
in
mov
enter
or
jle
cmp
dec
aad
repnz
pop
and
pop
jp
icebp
dec
pop
and
mov
repnz
xor
xchg
sbb
jb
outsl
mov
sbb
pop
pop
and
mov
push
sbb
std
add
clc
jns
and
xchg
cld
and
push
and
fisubl
subb
jg
push
mov
cli
push
sbbb
xchg
jecxz
sbb
mov
jmp
lret
sbb
or
cli
notb
ja
rcrb
mov
je
xor
fwait
int3
out
dec
mov
cmpsb
lock
and
jnp
mov
jge
in
stos
stos
jg
add
fnstcw
pminub
imul
sbb
xor
xchg
sub
sti
push
mov
inc
inc
inc
xlat
jb
push
std
push
scas
imul
mov
sbb
lahf
dec
jo
jo
insl
sbb
ret
adc
mov
fs
dec
fmull
jb
push
push
xchg
loopne
sbb
lock
loopne
lret
mov
jmp
cmp
sbb
cmp
pop
mov
and
nop
add
xor
in
dec
cmp
pop
jp
fisubs
sbb
aas
daa
sbbl
lods
pushf
pop
loope
aad
aas
mov
mov
lds
cmp
mov
sbb
cmp
shr
mov
dec
push
stc
lahf
lods
mov
add
inc
fcoml
subb
mov
push
jbe
mov
inc
push
adc
xchg
jmp
push
mov
mov
pop
mov
dec
pop
or
sub
jge
fbstp
xchg
cmp
loope
lods
ja
sbb
pop
pop
iret
fidivl
mov
es
cmp
inc
cmpsb
mov
aam
xchg
std
sar
sub
xlat
les
pop
je
xor
xchg
and
cmp
xchg
sbb
sarb
adc
insb
jnp
scas
fwait
mov
sub
mov
clc
xchg
adc
add
inc
xor
fbld
mov
cmc
add
cwtl
jecxz
movsb
push
iret
idivb
orl
cmp
sbb
je
fdivl
push
pop
mov
cmpsl
jmp
inc
stos
cmp
adc
shlb
mov
mov
aas
cmp
dec
into
repz
pop
push
cmp
cs
mov
mov
add
nop
adcb
mov
js
sub
aad
pop
rol
add
sar
add
and
popa
ljmp
mov
xchg
nop
mov
and
ret
jns
xor
fnstsw
inc
mov
xor
sbb
roll
add
aaa
insb
inc
ds
fwait
mov
mov
jp,pt
add
aas
mov
mov
sbb
sti
repnz
jns
dec
lds
lds
or
dec
insl
mov
movsl
sti
int3
pop
adc
and
or
clc
int
sub
xor
pusha
jp
cmpsl
je
loopne
or
cmpsb
adc
lods
aaa
mov
adc
mov
add
jns
adc
cmp
sahf
stos
je
sub
xchg
cwtl
popa
idivb
scas
repnz
repz
cwtl
push
sbb
leave
subb
pushl
dec
sbb
call
fcomps
aam
mov
inc
in
pop
mov
xlat
add
outsl
sub
jl
xchg
insl
aas
test
aad
or
outsl
lcall
mov
adc
adc
fisubl
jno
jns
mov
movsl
js
divl
pop
sub
mov
ret
sbb
shl
subb
lahf
sub
inc
jmp
xor
cmp
push
jle
push
mov
push
mov
xlat
sbb
lret
cld
pop
add
and
xchg
iret
es
stos
in
in
imul
mov
andb
push
xchg
pop
mov
xor
cld
je
test
xor
pop
imul
ret
and
pextrw
sbb
mov
pop
add
mov
scas
push
xchg
out
ret
or
xor
test
sbb
das
lock
movsl
xor
adc
fmull
xchg
inc
jae
aas
push
movsl
sbb
loope
int3
jg
aas
sub
les
mov
push
jmp
or
xor
push
pusha
cmp
pop
les
cmp
sub
fiadds
out
lret
push
insl
setno
ret
and
out
mov
cmp
aad
mov
shl
movsb
adc
hlt
gs
outsl
sbb
dec
outsl
cmp
les
aad
pop
in
loop
push
add
imul
ficompl
fistpll
mov
add
popa
fiaddl
rcrb
mov
and
mov
je
pop
loope
in
pushf
sub
test
in
insb
cli
dec
cmp
nop
outsb
scas
add
scas
cmp
xlat
ss
out
pop
mov
rorb
sbb
xor
mov
je
xchg
fs
mov
ret
mov
mov
dec
xor
ljmp
or
xchg
pop
aam
lds
scas
out
mov
dec
mov
mov
je
jmp
xor
call
into
cwtl
xor
sbb
lds
xchg
push
hlt
outsb
test
insl
popf
add
or
xor
shrb
mov
dec
cmc
jb
call
mov
fs
cmp
pop
mov
or
sbb
inc
pop
or
scas
sub
and
xlat
push
in
adc
pop
test
jo
or
clc
add
cmpsl
stos
cmp
lcall
dec
push
and
ret
cli
lock
movsl
ret
inc
fnstsw
dec
dec
fisubs
inc
pop
cld
jmp
mov
xchg
les
mov
lock
xor
jae
aas
cmpsb
test
sub
jge
jb
cmp
jbe
cmp
xor
inc
std
dec
pop
mov
into
xchg
in
js
xor
loopne
aam
push
movsl
xchg
ja
push
arpl
fcmovnbe
xchg
dec
pop
sub
in
lcall
cmp
cmc
xchg
jge
fwait
sub
pop
nop
sbb
in
push
inc
adc
add
sbb
rcrb
adc
xorl
arpl
call
and
addr16
aad
cltd
pop
inc
loope
adc
lods
jmp
lret
jae
adc
sbb
jl
in
imul
mov
fs
xchg
push
nop
mov
test
repnz
pop
outsb
push
inc
sub
cwtl
cltd
std
xchg
lock
cmc
sti
xchg
mov
popf
sub
iret
pusha
data16
jge
aad
movl
jl
cs
dec
frstor
sti
dec
repz
push
mov
dec
cmpsb
push
gs
out
cwtl
call
je
pop
addb
pop
mov
jo
pop
xchg
sbb
scas
pop
in
add
cmp
daa
pop
jecxz
repnz
sbb
dec
push
stos
pushf
sbb
xor
mov
arpl
xchg
add
iret
test
movsl
dec
adc
xchg
addr16
mov
pop
dec
in
inc
lock
xor
dec
and
sub
sub
add
mov
push
add
mov
xchg
or
push
add
push
lods
outsl
mov
aaa
rorb
gs
and
bound
outsb
inc
xchg
fnsave
cmpsl
jb
and
add
jp
and
lods
xchg
xchg
ja
dec
cmp
push
sbb
dec
ja
pop
test
inc
les
push
ficomps
movsl
sub
add
mov
jne
cltd
subl
lea
mov
fists
push
push
pusha
rolb
lret
jns
in
jmp
test
pop
mov
div
outsb
add
inc
cli
je
in
and
clc
aaa
mov
out
sbb
shl
push
and
bound
mov
and
mov
imull
xor
lcall
cmc
mov
jg
push
shrl
or
mov
je
add
lods
cmp
call
loope
mov
test
in
int
icebp
mov
aad
cs
adc
cmp
mull
xor
jecxz
push
adc
fmul
adc
push
adc
cmpsl
ljmp
sti
cmp
mov
inc
cmpsl
sbb
dec
rol
jl
loop
push
popf
outsl
loop
std
sbb
mov
addl
int3
inc
pop
push
jge
andl
mov
fistl
lret
movsb
rcrb
stc
lds
pop
jle
mov
sub
in
cld
jnp
pop
pop
mov
or
mov
dec
jle
push
jo
lds
das
xchg
sbb
push
cli
jne
scas
and
mov
jmp
cmc
jb
dec
lock
push
repz
scas
inc
jle
or
scas
rolb
pop
fnstsw
std
mov
xor
movsl
xchg
push
stos
adc
imul
into
push
loopne
test
adc
sbb
aad
adc
enter
lret
adc
inc
insb
xchg
adc
testb
stc
movsb
add
imul
gs
fsubrl
lods
hlt
dec
mov
cmp
rcrb
call
xchg
les
push
popa
cmc
jbe
push
mov
xchg
xchg
adc
aaa
mov
pop
sbb
mov
das
xor
scas
cli
mov
mov
test
jecxz
pop
or
and
leave
popa
test
inc
mov
cmp
cmc
dec
test
notl
add
shl
cmc
dec
addr16
repz
int
xlat
jp
cmpsl
cmp
shrb
or
pop
jne
push
xor
sbb
lret
pop
ss
push
fisttpll
fyl2x
add
lahf
dec
inc
rcl
mov
addr16
mov
sbb
mov
cmp
sbb
add
adc
aad
mov
shll
pop
scas
adc
sub
in
scas
push
mov
lret
icebp
dec
sub
aad
mov
sbb
std
jo
mov
outsb
fsts
icebp
or
imul
xchg
xchg
add
inc
lcall
movsl
and
dec
or
es
mov
ss
popf
out
cld
lods
inc
test
inc
rcll
jle
iret
scas
imul
xor
hlt
cs
xor
adc
xor
pop
ss
pop
adc
into
mov
add
push
and
mov
xchg
adc
add
and
mov
xlat
push
lock
ja
mov
std
xorl
nop
daa
dec
repnz
shl
outsb
scas
inc
mov
mov
fiadds
and
add
jns
xchg
cmp
aas
pop
push
push
inc
mov
out
cmp
mov
in
out
and
clc
in
cmp
jb
push
adc
mov
pop
insb
xchg
sarb
xor
popf
or
lcall
push
loopne
jbe
cmp
jnp
lds
adc
adc
dec
xchg
bswap
out
mov
loopne
mov
adc
loopne
arpl
dec
in
jne
pop
adc
lret
pop
addr16
and
js
out
pxor
adcb
or
dec
sahf
out
sbb
pop
adc
sarl
repz
int
jecxz
dec
push
imul
pop
adc
cwtl
rorb
lock
mov
sbb
lret
sbb
popa
adc
xorb
adc
inc
std
mov
xlat
mov
repz
lods
dec
lahf
fwait
push
xor
lret
push
imul
ret
cmp
add
daa
xchg
inc
xchg
xchg
cmp
rcrb
sub
jnp
cmpl
fisttpl
mov
sbb
testb
imul
pop
int
mov
popa
das
ret
gs
dec
sbb
jp
mov
adc
cld
popa
aas
sarb
pop
loop
xchg
test
movsb
imul
popa
or
xchg
inc
leavew
ficoml
sbb
inc
mov
movsl
jge,pn
test
into
sub
sbb
pop
sub
xchg
mov
xchg
sti
cmc
mov
shll
jp
or
jl
lods
mov
int3
mov
mov
faddl
sbbb
addr16
ja
lret
cmpsl
ds
push
jns
dec
in
pop
cmpsb
in
xchg
jno
enter
sub
add
mov
push
adc
aam
jle
mov
jecxz
out
add
int3
les
aaa
dec
shll
xchg
outsb
repz
cwtl
std
jo
insl
mov
outsl
mov
mov
push
mov
ret
bnd
mov
or
pop
das
inc
sub
jbe
in
scas
xchg
cmp
cmp
sub
jns
sti
push
cld
sarb
movsb
push
add
mov
xor
pop
inc
and
mov
add
adc
cmp
adc
jo
push
popf
dec
lods
fcmovne
popf
popf
and
into
shlb
mov
mov
arpl
cmpsl
cmpsb
xor
pop
xor
insl
pop
ficompl
jmp
jb
aad
adc
ss
pop
adc
dec
dec
dec
jno
cs
imul
stc
mov
out
xor
jno
dec
xchg
jnp
loop
sub
aam
pushl
push
js
dec
frstor
inc
es
mov
cmpsb
shlb
out
addr16
jns
mov
pop
fistpl
fsubrs
data16
loope
notb
mov
mov
int
pop
xor
push
arpl
dec
cmp
ja
ja
cmp
fwait
jle
sub
xor
movsb
inc
inc
fs
jb
jnp
jbe
nop
mov
push
in
or
cmp
xchg
daa
mov
aad
not
jae
fs
mov
add
addb
inc
pop
push
out
std
lea
cmp
mov
mov
push
add
aas
roll
popa
in
pop
ja
pushf
sub
jecxz
stc
dec
in
xchg
xchg
push
in
test
inc
mov
xlat
icebp
fbstp
jno
mov
inc
into
lret
test
imul
mov
adc
mov
jmp
or
aad
test
loope
mov
cmp
xchg
dec
movsl
rcll
les
lcall
and
insb
fnstsw
push
ja
mov
pop
and
leave
into
dec
push
add
bound
not
dec
and
repz
sbb
push
in
add
jae
paddsb
cmp
gs
add
mov
cli
xchg
stos
divl
in
jl
stc
mov
pop
cmc
dec
aaa
cli
xchg
sub
les
lret
dec
jmp
ret
repz
cmp
and
cmp
ret
pop
dec
sbb
pop
pop
xchg
push
or
or
pop
lcall
mov
roll
pop
shrl
cmp
stos
in
pop
xchg
fs
xor
jnp
fs
adc
mov
jmp
shrd
mov
adc
xchg
sub
lret
or
push
jbe
cs
gs
popf
aaa
into
sarb
adc
sahf
movsb
push
jmp
inc
adc
xchg
in
pusha
and
cld
dec
cmp
iret
mov
pop
arpl
mov
xor
add
fs
dec
imul
sti
mov
lahf
stos
out
jle
mov
pop
adc
stos
rcll
mov
out
enter
jle
mov
sbb
mov
imulb
aam
mov
mov
ret
movl
xchg
mov
mov
or
aas
mov
sub
sbb
xor
cmp
lahf
insb
std
pop
scas
cmp
and
adc
inc
push
xchg
jb
inc
scas
jle
mov
cmc
and
mov
push
cmc
cltd
inc
xchg
pop
inc
aad
jne
ds
pop
ret
test
or
sub
pusha
aas
xchg
repnz
and
push
mov
push
mov
adc
nop
inc
xor
jg
xchg
mov
loop
inc
mov
js
in
push
daa
dec
test
cld
iret
movsb
xchg
cs
out
test
jb
ds
mov
sub
aam
test
ljmp
sahf
sub
loopne
xchg
dec
fbld
sti
mov
xor
push
sbb
cmpsb
cmp
scas
adc
cmpsl
pop
lock
add
lret
mov
ja
lods
push
fsubrl
mov
xor
ret
insl
add
push
cld
push
aas
xor
push
xor
pop
jmp
xor
pop
insl
aaa
push
jmp
int
jo
push
out
pushf
xchg
std
fistps
das
mov
sbb
mov
add
out
cli
cmp
sbb
insb
pop
inc
call
icebp
addr16
cmpsl
mov
bound
inc
sub
int3
dec
not
inc
fidivl
jb
es
sbb
nop
dec
mov
pop
scas
insl
xchg
subl
in
negl
cli
push
shrl
xchg
out
dec
sbb
mov
cmp
dec
out
xchg
cwtl
dec
bswap
clc
ss
jo
jecxz
and
mov
inc
xchg
pop
inc
cmpsl
mov
ljmp
sub
nop
push
inc
and
cmp
inc
inc
bound
imul
ljmp
cmc
arpl
xlat
push
mov
cmp
add
mov
pop
mov
dec
dec
movsl
inc
in
mov
cmp
jbe
lahf
data16
jb
pop
ja
and
lahf
js
jnp
push
inc
adc
test
lret
je
dec
sbb
xlat
mov
mov
mov
push
mov
push
fbstp
pop
pop
faddl
loop
jne
mov
jo
cs
sub
inc
pop
or
pop
push
or
sub
jb
out
sti
inc
arpl
loopne
push
mov
ret
fimuls
fildl
fbstp
pop
fnsave
and
cmp
pop
xor
es
movsb
shlb
mov
fidivrs
outsb
ret
into
gs
cltd
mov
testb
or
and
cmp
jecxz
aaa
jbe
adc
sbb
movl
rol
push
rcrl
jecxz
jne
bound
adc
int
pop
iret
push
add
ret
xchg
lods
inc
xor
jmp
mov
adc
jnp
cli
sbb
cltd
fcoml
lea
leave
jp
cld
push
inc
das
js
das
add
fmul
cmc
and
aas
cmp
pop
xchg
pop
sbbl
sbb
xchg
dec
sub
pop
xchg
out
test
imulb
mov
cmp
into
data16
loopne
pop
loop
in
inc
or
rorb
pusha
and
dec
push
addl
or
sub
pop
out
add
xor
data16
sbb
mov
das
mov
jecxz
ret
aas
add
filds
sbb
fistpll
rcrb
fadds
scas
mov
test
popf
sbb
test
outsb
nop
mov
and
dec
push
icebp
shrb
ja
jne
lods
loop
sarl
mov
fadds
dec
dec
dec
lea
icebp
jle
cmp
data16
lret
stos
sub
and
adc
cs
mov
ret
xlat
sbb
mov
push
movsb
and
stc
out
addl
mov
push
and
test
and
mov
arpl
pop
arpl
pop
icebp
xor
popf
mov
ret
clc
cmpsb
mov
pop
sbbl
inc
popa
cld
xor
jbe
lcall
dec
repz
loopne
sbb
sbb
inc
sub
add
cmpsl
ret
mov
rclb
stc
data16
or
cwtl
adcl
daa
aaa
icebp
xor
out
add
mov
or
iret
mov
pop
retw
stos
push
xor
jecxz
std
in
mov
and
or
leave
cmpsb
mov
mov
push
pushf
push
push
cwtl
fwait
mov
test
negl
sbb
call
in
scas
add
fcomps
or
xchg
popf
filds
dec
std
mov
insb
and
pop
shrl
out
test
dec
cld
dec
std
xchg
sbb
add
xchg
lahf
adc
stc
inc
jno
pusha
jp
inc
inc
mov
ljmp
pop
sub
call
cwtl
popf
dec
mov
in
cmp
dec
and
cmpsl
cmp
sbb
or
xchg
add
bound
nop
dec
decl
divb
fdivrl
xlat
mov
mov
fisttps
jge
jp
mov
test
adc
mov
sbb
daa
pop
aam
adc
dec
pop
cwtl
jb
dec
and
dec
dec
pop
push
cmc
mov
adc
jno
xor
std
lcall
fisttpll
ror
test
push
push
adc
jge
or
push
clc
lock
fwait
es
mov
gs
dec
dec
fstpt
xchg
cmp
add
cltd
push
es
lret
int3
mov
mov
sub
xchg
xor
mov
mov
dec
dec
enter
testb
dec
xchg
jp
add
loop
xor
lcall
in
and
insb
ja
xchg
jp
sahf
and
jae
pusha
lods
sar
mov
cs
js
sub
ficompl
mov
adc
andb
mov
enter
dec
pop
adc
nop
movaps
les
out
rclb
push
dec
pop
mov
mov
or
movsl
in
sbb
xchg
adc
pop
movsb
cmp
mov
ret
jle
dec
enter
aas
push
imul
mov
sbb
scas
insb
mov
in
push
xchg
pushf
popa
or
xor
jge
jne
andb
jo
mov
jmp
mov
out
pop
ds
loope
and
shrl
rcrl
ljmp
std
cmpsb
arpl
fs
adc
test
loope
fnstsw
xchg
enter
or
add
rcrl
inc
add
aaa
pop
jbe
push
cmpl
rol
movsl
mov
push
cmp
add
shll
add
aas
lahf
cwtl
push
jns
xor
jns
lret
adc
leave
cwtl
fisubrl
sub
mov
pop
rorb
roll
ss
ret
push
sub
sbb
movsb
pop
lret
or
mov
sbb
push
lds
sub
dec
cmp
imul
cmp
aaa
mov
sub
repnz
push
sub
push
test
adc
lock
xchg
push
push
cmp
or
pop
daa
add
add
cld
pop
hlt
mov
cmp
cmpb
test
fwait
cmp
movsb
or
inc
es
dec
sub
and
add
in
std
movsb
cwtl
hlt
popf
mov
nop
test
ret
lcall
jmp
dec
adc
adc
jo
out
stc
loope
fisubrs
mov
xchg
push
mov
xchg
out
add
pop
decl
lods
xchg
cmc
mov
push
mov
insl
sbb
mov
jmp
cli
pop
fsub
scas
mov
cmp
lahf
pop
add
bound
inc
sbb
pop
outsl
rorl
test
in
aad
jbe
xlat
push
xlat
jbe
or
add
xchg
or
shlb
fs
movsl
or
lods
xor
cld
xchg
inc
lret
mov
mov
mov
aad
shlb
arpl
push
inc
int
nop
cmp
or
mov
add
or
out
dec
cmp
scas
jb
or
pop
jge
push
mov
pop
jmp
mov
sub
mov
subb
orb
lret
jp
mov
sbb
or
inc
in
mov
and
and
xor
mov
dec
sub
xchg
sub
add
test
cli
dec
nop
test
jge
jns
pop
data16
mov
shlb
fld
test
movsb
out
lahf
sub
sbb
xchg
add
add
jae
stos
adc
shrb
cmp
iret
xchg
data16
dec
loopne
xchg
or
cmp
push
into
push
adc
je
pusha
push
add
sbb
je
fwait
or
xchg
pop
in
push
ret
sub
clc
test
inc
mov
dec
in
xlat
inc
push
pop
and
jne
cmp
xor
es
icebp
mov
or
and
push
sbb
dec
shl
bound
test
mov
pop
hlt
lcall
pop
and
insl
push
les
rorb
loopne
dec
cltd
or
cmp
test
sbb
popl
movsb
fidivs
popa
lods
mov
or
adc
mov
cmp
movsl
ret
push
popf
jne
inc
lea
loopne
out
out
pop
fptan
dec
test
into
sbb
sbb
push
mov
pop
inc
rcr
jae
addr16
mov
repnz
test
lods
inc
push
pop
ljmp
push
lods
or
pop
lret
scas
inc
popl
hlt
nop
mov
mov
addr16
icebp
imul
jecxz
outsb
dec
jnp
or
jb
outsb
pop
sbbb
xor
pushl
mov
dec
inc
out
adc
push
aaa
xlat
mov
or
pop
jns
push
es
sbb
jmp
jg
xor
and
shlb
jmp
push
movsb
inc
or
adc
jb
mov
sbb
cmpb
stos
nop
jecxz
mov
pop
shll
dec
jmp
adc
jge
clc
imul
or
int3
daa
gs
jae
pop
sti
xchg
popa
sub
jnp
pop
jo
mov
int
sbb
jecxz
sti
pop
push
sbb
mov
test
aam
scas
mov
int
ret
push
mov
in
dec
pop
lea
fwait
mov
rorl
das
aaa
fcoms
rclb
adc
or
int
pop
or
push
mov
xor
fdivl
fcomi
orb
xchg
fldcw
pop
push
cmp
ja
ja
or
adc
clc
test
repnz
jle
cld
scas
jns
jno
inc
inc
xchg
sbb
sbb
mov
or
lods
adc
pop
scas
mov
mov
jae
lods
inc
subl
lahf
js
jnp
stc
dec
jecxz
mov
iret
out
fmuls
mov
pusha
inc
push
add
xor
movsb
ret
insb
xchg
mov
sahf
stc
fisubs
add
sysenter
aaa
mov
mov
inc
fidivrl
or
dec
jge
inc
sbb
xchg
sub
and
cmp
mov
orb
jbe
int3
xchg
xor
outsl
mov
dec
push
pop
cmpsb
cmp
pop
std
repz
jg
mov
lds
psllq
ret
pop
ljmp
lock
jbe
repnz
cltd
call
jge
jne
xor
push
jle
outsl
insb
sbbb
mov
inc
arpl
test
mov
mov
mov
stos
pop
mov
cmp
pop
adc
jne
xor
add
mov
js
fidivrl
pop
jmp
pop
jmp
mov
xor
dec
inc
fidivrs
loop
sub
xchg
mov
push
push
xor
lea
lahf
mov
mov
stos
xor
push
inc
sbb
ja
sar
pop
das
mov
insl
insb
hlt
sbb
mov
dec
jge
and
out
aam
int3
sub
lods
mov
popf
nop
call
and
dec
shrl
lds
cmp
insb
inc
dec
aaa
not
mov
inc
jg
xchg
scas
or
in
fwait
outsb
dec
jp
loop
add
jne
adc
adc
xchg
sub
mov
cmp
rolb
push
int3
xor
jno
cli
test
les
ja
inc
and
jbe
in
mov
imul
xchg
mov
pop
dec
out
dec
push
and
ljmp
test
mov
cmp
repz
mov
xchg
sub
repz
sbb
xchg
enter
cmp
dec
inc
jecxz
and
js
sub
jmp
call
lds
dec
stc
and
rcrl
das
mov
iret
in
divb
lds
add
jo
push
bnd
bound
xchg
out
mov
pop
adc
adc
lods
pop
sub
mov
or
pop
xchg
lds
cmp
pop
outsb
add
movsl
mov
pop
lcall
xor
or
push
jae
mov
inc
shll
and
inc
jecxz
add
add
add
dec
int
call
imul
add
adc
xchg
xor
or
ret
repnz
sub
jge
sbb
gs
pop
and
dec
xchg
jb
xchg
xchg
jb
ret
add
or
jb
push
add
flds
xchg
movsb
cmpsb
mov
xlat
jns
cs
jno
mov
inc
push
pop
ficoml
mov
xor
or
out
jbe
push
push
inc
jmp
movsl
mov
xor
movsb
outsb
xlat
xchg
mov
lds
xchg
sbb
ficomps
adc
rorb
cmp
je
pusha
mov
shrl
sbb
imul
pop
std
mov
jae
fidivl
mov
scas
insb
adc
jno
sub
sbb
and
push
mov
repnz
jns
inc
es
mov
jns
inc
xor
push
mov
imulb
cmp
xor
lret
fdivl
fiaddl
dec
je
lret
sarl
jle
repnz
sub
loope
shrl
in
jne
scas
out
jg
xor
stos
lahf
push
add
xlat
mov
mov
movsl
fcomps
mov
xchg
pop
scas
cmc
dec
cmp
nop
jae
jge
push
and
and
aad
jmp
addr16
sub
mov
call
fmulp
aam
fdivrs
stos
es
inc
insl
je
push
sub
stos
pop
jle
push
jb
dec
addl
scas
inc
add
push
push
in
negb
call
fnstsw
fidivl
inc
jle
dec
popa
repz
pop
sbb
out
stc
sub
cmpsl
pop
sbb
shrl
mov
js
adc
and
sbbl
inc
cld
outsl
aaa
orl
inc
mov
push
inc
test
loopne
cmc
mov
mov
lods
call
xchg
sub
or
dec
pop
ds
shr
mov
fadd
mov
adc
mov
mov
fs
stos
test
bound
push
stc
decl
sub
jmp
lret
out
xchg
mov
adc
icebp
fisubs
aaa
iret
pop
jge
add
test
cs
xor
mov
adc
mov
stos
pop
xchg
mov
movsl
inc
testl
mov
dec
mov
mov
cwtl
push
sub
jns
arpl
ljmp
leave
inc
leave
addr16
or
mov
lods
jmp
cmpsl
push
testb
cmc
lods
outsb
sbb
inc
clc
cmp
clc
outsl
in
push
shlb
ljmp
mov
mov
mov
jle
iret
pop
movsb
dec
sub
mov
call
cmp
stos
sti
rcrl
adc
rol
lahf
clc
jecxz
cmp
push
mov
test
lods
cli
cmp
test
mov
mov
lds
lret
sub
bnd
movsb
mov
jno
pop
jno
cli
push
adcl
jg
push
mov
mov
fprem
adc
add
fwait
jle
mov
cli
lret
inc
popa
jno
lods
and
in
xor
jp
add
popf
pushl
call
or
sub
pusha
pop
cltd
das
sbb
loope
dec
aaa
addr16
sub
loopne
mov
in
xchg
fdivrl
cs
leave
fstl
orb
scas
fwait
xor
and
mov
xor
imul
adc
notl
addr16
push
xchg
sbb
sub
sub
sbb
outsl
lret
add
add
or
inc
push
sub
xchg
sbb
pop
loop
push
sbb
int
test
lcall
push
int3
dec
sbb
loop
mov
mov
pop
xor
sub
cmp
pop
inc
sbb
and
jo
dec
add
xchg
icebp
pop
add
and
mov
push
loopne
mov
sarb
pop
rolb
sbb
cmpsl
dec
lahf
fidivl
inc
arpl
sbbb
xor
xor
icebp
adc
or
and
xor
les
add
scas
fs
xchg
cltd
ret
loope
das
out
mov
lods
aam
xchg
ds
xor
rorl
xchg
js
xor
mov
pop
dec
cmp
fsubrp
outsb
in
xchg
int3
mov
pop
jp
into
dec
pop
repz
xchg
test
enter
cs
out
cli
arpl
inc
popl
mov
pusha
pusha
clc
mov
fnstsw
mov
jmp
iret
aam
sbbl
negb
fisttps
cmpsb
pop
cmp
filds
jg
jle
hlt
das
pop
jl
adc
subl
pop
push
jo
cltd
cmp
fs
push
mov
xorb
outsb
add
cli
scas
mov
ret
pop
and
rcrl
sbb
mov
sbb
ss
xlat
insl
outsb
aam
cmpsl
out
hlt
cmpsb
inc
inc
shll
jo
adc
imul
popf
mov
lahf
lret
xchg
insb
mov
cmp
push
mov
repz
push
jo
sub
cmp
xor
daa
pop
mov
das
icebp
bound
mov
clc
idivb
mov
addr16
aad
test
rcrl
aas
pop
dec
jb
insb
pop
dec
mov
inc
je
cmc
imul
fiadds
or
adc
mov
imul
or
rorl
cmp
stos
push
insb
aam
jmp
mov
push
dec
add
in
add
out
sarb
cmpsb
dec
adc
add
mov
mov
pop
lret
push
jb
enter
out
lock
mov
in
xor
in
adc
xchg
sub
mov
sub
xchg
stos
subb
dec
mov
jg
cs
aad
clc
pop
ret
jmp
and
ds
cmp
mov
pop
adc
mov
push
push
inc
add
jge
sub
sbb
cmp
or
arpl
ds
inc
idiv
xchg
dec
loop
test
cmpsb
mov
idivb
ret
sbb
ret
imul
fidivl
fnstsw
push
xchg
and
xchg
cltd
cmp
sub
jmp
fnstenv
das
sahf
in
out
loope
cmp
xchg
fwait
psubq
adc
testl
mov
push
sub
add
fnstsw
push
push
pushf
adc
and
mov
aas
or
mov
mov
xor
push
cmp
lahf
int3
mov
sti
sub
arpl
dec
dec
mov
xchg
test
ret
cmp
xor
sbb
popa
and
mov
int3
xchg
ret
jg
dec
repnz
cmc
push
xor
or
int
sub
sub
cmp
jecxz
lods
shll
cmp
push
fbld
fdivrs
test
clc
push
daa
fidivrs
mov
movsbl
pop
cltd
sbb
mov
fstl
imul
jl
in
jg
push
mov
push
xor
scas
inc
divl
pop
dec
data16
test
mov
das
fiadds
mov
in
lods
mov
cmp
cmp
mov
fcmovnbe
insb
das
mov
jbe
ror
imul
and
mov
mov
jbe
inc
pop
dec
mov
daa
mov
cmp
cmpsl
mov
adc
jecxz
out
mov
inc
or
in
out
mov
add
add
xchg
and
jno
pop
push
adc
adc
aam
gs
lock
push
mov
pop
sub
out
jo
jae
jp
hlt
pop
subb
or
xchg
outsb
lods
mov
pop
sbb
cmp
dec
mov
cltd
sbb
aam
ds
sub
or
mov
leave
xchg
adc
cmp
mov
rcll
xchg
cmc
pop
pop
jnp
ss
aad
pop
inc
or
cld
outsb
jecxz
pop
or
mov
scas
xchg
xor
scas
dec
mov
roll
sub
push
test
jecxz
and
data16
push
into
cmp
or
xor
std
mov
adc
repnz
pop
and
sub
pop
sbb
and
xorl
cmp
call
jo,pt
sbb
hlt
pop
xchg
daa
mov
fisubrs
sti
dec
int3
inc
fsts
fmuls
icebp
test
fdiv
mov
repz
jmp
insl
mov
adc
dec
in
cmpsb
mov
xchg
rolb
cmp
cli
mov
ret
lcall
jne
fcmovbe
mov
jae
mov
test
fsubl
push
shll
xchg
cmp
loope
add
mov
aad
dec
adc
int
out
and
xchg
enter
ret
dec
outsb
into
fwait
nop
out
sbbb
sbb
sub
xchg
in
cmp
int3
mov
add
les
popf
lods
push
in
imul
sbb
mov
cltd
outsl
cmp
xchg
out
cmpb
xchg
add
imul
mov
pop
cmp
sbb
imul
sub
mov
out
les
jmp
pop
sub
cmc
push
pop
insb
fnstcw
mov
das
adc
xchg
shll
repnz
fstpt
test
and
mov
add
cmc
movsb
je
pusha
push
sub
into
xchg
push
inc
or
mov
aad
test
adc
xor
and
decb
mov
dec
mov
add
hlt
sbb
sbb
stos
sbb
mull
xor
jg
pop
mov
jo
push
and
jg
lret
int
fidivrl
pop
out
jge
fisubrl
scas
mov
push
inc
xor
cli
in
fistpl
cmc
cmp
mov
cs
push
dec
adc
adc
aam
pop
ud1
fst
push
jmp
out
and
mov
xchg
cmp
fdivp
push
jno
enter
cld
out
pop
pop
mov
jge
xor
mull
jmp
cmpsb
cmp
scas
out
mov
lahf
popa
lret
lahf
lock
cmp
push
cmp
scas
in
test
add
cs
test
xchg
xor
jae
pusha
movsl
dec
rol
loop
imul
test
push
pusha
dec
xor
mov
movsb
cli
jp
fidivl
pushf
inc
push
xchg
mov
jl
xor
popa
call
mov
rolb
pop
mov
jns
mov
sub
xor
pop
icebp
jnp
popa
lds
mov
rcll
sub
mov
pop
sub
push
pop
cmpb
enter
mov
xlat
adc
add
xor
xlat
ret
lret
push
fs
test
leave
int3
push
sti
outsl
data16
outsb
lcall
sub
test
cmp
add
lock
push
test
or
or
cmp
addr16
or
pop
push
xchg
adc
shrl
fwait
and
lret
jns
ljmp
imul
cmp
mov
pop
cmp
shrl
lahf
sarl
pop
lds
mov
mov
sarb
jmp
mov
sbb
mov
cmp
subb
fcomp
sub
adc
ret
cltd
push
mov
adc
mov
push
outsb
dec
add
mov
mov
imul
leave
sbb
ds
in
stc
lea
mov
int
hlt
push
fsubr
lock
inc
lcall
or
dec
dec
adc
add
pop
ja
std
lds
jecxz
sahf
and
decl
les
mov
or
mov
nop
pop
cs
pop
and
pop
cmp
inc
sbb
cld
lock
mov
iret
sbb
add
sahf
outsl
or
repz
bnd
outsl
xchg
andl
inc
cmc
movsl
repnz
xchg
push
aaa
dec
adc
cmp
repnz
notb
push
or
sbb
mov
data16
adc
shl
mov
test
in
sbb
adcb
movsl
cmp
mov
jle
sbb
xor
push
js
int3
lret
shlb
shrl
repnz
sub
out
popf
adc
adc
or
cmp
push
mov
push
pminub
rcrb
shrl
xor
ljmp
popa
or
pop
mov
int3
add
push
cs
mov
pop
popf
test
mov
push
mov
int3
pop
sub
pop
xor
test
mov
cmp
aaa
ret
xor
or
add
scas
inc
arpl
iret
int
xchg
scas
leave
rcrl
loop
test
mov
insb
rcrb
cmc
mov
or
sbb
pop
xor
pop
int
adcl
fstpl
jg
mov
pop
outsl
dec
aad
add
cwtl
sbb
lcall
sbb
adc
pop
lods
jp
rcrl
addr16
adc
xchg
outsb
cmc
sub
xor
pop
gs
xchg
cmp
in
xchg
cmc
movsl
in
or
int3
mov
loope
lock
lcall
mov
shll
scas
daa
test
idivl
jne
jo
sbb
cmpsb
fdivrs
mov
fwait
mov
xchg
daa
outsl
popf
sti
xchg
xor
ds
xor
int
pop
movsl
adc
inc
into
adcl
cmp
aam
jb
int3
in
sub
pop
push
insb
sbb
or
and
push
js
jmp
mov
push
mov
xor
xor
imul
dec
mov
push
shrl
test
data16
xorl
lcall
je
aas
xchg
add
nop
outsb
lods
orl
sti
dec
ja
movsl
addb
adc
stos
push
insl
mov
or
push
inc
pop
sub
or
mov
and
stos
xchg
cmp
jle
and
das
mov
push
mov
aaa
jo
push
inc
flds
xchg
xor
jp
or
or
call
outsl
out
repnz
pop
add
test
mull
fistpll
rorl
fsubrs
or
out
pushf
pop
call
cmpsl
pop
hlt
jns
cmpb
rol
std
lods
repnz
jecxz
push
inc
sbb
jl
jl
in
neg
stos
add
aas
adc
sub
mov
mov
fsubrp
lahf
ljmp
rclb
out
pop
testb
test
pop
out
xchg
mov
cwtl
jp
mov
ret
jbe
xlat
icebp
js
in
scas
sub
sahf
dec
dec
ss
xchg
pop
and
pusha
mov
fldcw
mov
pop
lock
pop
ja
or
xor
xchg
push
fidivrs
aad
jl
mov
pushf
xchg
cmp
mov
add
leavew
pop
mov
xchg
aaa
int
scas
xor
aas
nop
or
std
stos
push
aas
pop
hlt
jo
repnz
test
sti
insl
xchg
push
ja
add
insb
enter
jl
pop
in
shrl
out
dec
fsubl
cld
mov
jl
cmp
jmp
jecxz
aas
into
jb
adc
pop
dec
push
inc
sbb
shl
outsl
cmp
xchg
lods
je
fisubrs
inc
fisubrs
bound
sbb
jge
lock
into
lds
push
ljmp
push
inc
in
inc
dec
in
xchg
xchg
gs
cmp
jle
cltd
stc
pushf
jne
jecxz
or
jo
mov
testb
mov
fs
pop
ljmp
cmpsb
inc
loop
stc
push
lock
insb
and
jne
xor
out
decb
xor
pop
mov
inc
je
loopne
in
cmpsb
sbb
imul
inc
inc
fdivs
xchg
pop
jno
push
imul
push
repnz
js
sub
xchg
imul
inc
pop
pop
mov
cltd
pop
pop
dec
in
push
mov
daa
pop
ljmp
movb
cmp
or
xchg
test
neg
or
inc
pop
popa
sub
mov
movb
in
jmp
call
in
enter
out
fs
aad
jnp
incl
scas
mov
int
jl
mov
pusha
dec
adc
aaa
shr
push
push
push
jmp
cwtl
inc
xchg
lock
jbe
mov
xlat
pusha
push
jbe
sbbl
jb
stos
cmp
stos
out
fiadds
inc
xlat
jbe
add
xchg
sarb
mov
or
pop
xchg
adc
jp
imul
or
in
dec
push
or
mov
mov
xor
rcr
daa
adc
jge
stc
xor
scas
ljmp
stos
pop
mov
leave
inc
jo
jecxz
mov
sbb
jo
and
mov
and
mov
jp
pop
push
mov
mov
fsubs
addr16
repz
insl
or
daa
cmp
scas
sbb
inc
mov
mov
cmc
and
sbb
leave
out
pop
cmp
idivb
repz
fisubrs
cmpsl
cli
pushf
lea
ljmp
pop
sub
xlat
loopne
mov
loope
repnz
pushf
xor
sbb
in
mov
push
jmp
shl
mov
inc
imul
imul
mov
movsl
inc
cmp
out
push
call
nop
pushf
lcall
mov
inc
in
aad
or
fadd
daa
lahf
ss
cmp
pusha
ja
les
dec
push
push
jg
fidivs
lahf
sbb
pop
mov
loopne
lds
inc
mov
lret
inc
push
data16
and
decl
lret
shl
xor
ljmp
push
inc
pushl
xor
mov
xor
imul
out
in
data16
test
arpl
out
stc
loopne
daa
scas
inc
push
addb
sti
push
out
bound
notb
cmp
pop
test
xchg
dec
movsb
push
arpl
xchg
cs
jp
fwait
adcb
inc
push
and
adc
and
adc
dec
movsl
or
jbe
mov
jp
in
outsl
xchg
std
adc
mov
push
mov
mov
sar
imul
jmp
xchg
mov
dec
fidivl
bound
stc
fiaddl
cmp
mov
push
sbb
and
cltd
idiv
std
std
stos
daa
sbb
pop
adc
jne
je
dec
popa
mov
dec
cli
mov
and
rcrl
sub
mov
fisubrs
test
push
mov
or
arpl
fidivl
loop
jge
adc
jne
dec
jns
lods
mov
add
push
movsl
scas
inc
adc
sbb
out
mov
sub
jp
dec
insl
lahf
pop
sbb
insb
scas
xor
xlat
mov
and
xchg
gs
lock
cmc
cmp
mov
dec
push
insl
mov
pop
int
adc
xchg
incl
pop
dec
imul
fsubrs
cwtl
aaa
push
rorb
add
andb
lcall
insb
cmp
enter
lock
dec
pushf
push
adc
lea
push
push
test
lods
or
pop
push
add
insl
push
push
mov
movsb
sbb
pop
dec
push
arpl
fwait
sub
mov
clc
sahf
xor
fistl
push
jnp
call
mov
mov
hlt
popa
in
ss
xor
cmpsl
aas
ds
leave
and
inc
jmp
icebp
fwait
repz
das
add
pop
nop
cmc
add
lods
mov
dec
addb
jg
push
sub
popf
and
into
fucomp
sub
sbb
jno
jge
in
ret
mov
lock
dec
shlb
pop
shr
sbb
or
loop
jecxz
filds
fdiv
push
aaa
and
movsl
test
ja
stos
ljmp
jno
xchg
imul
push
adc
or
cmp
xor
lret
stc
mov
mov
adc
bswap
mov
int
xor
enter
pop
push
mov
mov
ret
shl
aaa
fildl
sub
outsl
sahf
imul
test
dec
lret
mov
jge
jecxz
pop
pop
add
cmp
mov
mov
sbb
add
mov
adc
mov
add
add
gs
sub
js
mov
notl
lods
ret
dec
lock
xor
add
push
je
and
stos
adc
icebp
push
lock
cmp
fdivrp
mov
rcl
les
cmpsb
cli
dec
shrl
mov
sub
lahf
push
gs
int3
testl
cmp
bound
dec
sbb
mov
pop
mov
dec
cli
sbb
incl
xchg
sahf
sub
xor
jno
addr16
lret
cli
add
push
mov
adc
pop
les
je
or
shr
mov
fmull
dec
push
push
lods
rcrb
sub
and
add
into
jecxz
dec
push
call
shll
in
pop
jb
mov
adc
test
lret
andb
adc
mov
scas
outsl
jnp
xor
jmp
mov
and
outsl
xchg
sub
dec
inc
xor
out
xchg
sub
lea
mov
scas
les
lret
jl
sbb
in
inc
add
xor
jnp
or
sbb
sbb
inc
mov
adc
add
jg
je
out
push
enter
inc
scas
adc
inc
or
pop
cmp
leave
les
xchg
ja
sub
adcl
shl
js
push
sbb
mov
mov
icebp
test
stos
pop
mov
call
xor
fstl
mov
fisttpll
ss
rep
rorl
out
xchg
cltd
mov
test
dec
adc
out
adc
sub
add
jle
pop
jo
subl
ds
jae
lods
xor
cmp
clc
dec
mov
cli
lret
push
sarl
repz
xchg
test
add
sub
mov
push
outsl
pop
js
insb
popf
cltd
stos
in
xchg
jecxz
jmp
ds
lods
shl
orl
cmp
insb
mov
ret
push
pop
jecxz
push
aas
cwtl
adc
out
dec
pop
loope
lock
adc
into
dec
jecxz
movsl
subb
cs
xchg
pop
out
lds
outsb
push
jbe
lods
push
shrb
inc
cwtl
es
lock
aam
cmp
nop
mov
adc
dec
movsb
in
je
leave
loop
inc
enter
cwtl
add
iret
in
jp
mov
dec
shll
adc
test
dec
and
jg
dec
xor
xlat
dec
call
inc
xchg
mov
mov
adc
sbb
jae
mov
dec
enter
mov
sbb
and
jno
xor
insb
sbb
lods
and
loop
pop
imul
mov
imul
jg
mov
out
cmpsl
jb
or
test
mov
iret
lretw
inc
rolb
cmp
test
testl
mov
insl
add
jg
add
xchg
fbstp
mov
insb
add
xchg
mov
hlt
adc
fdivl
add
push
mov
jne
imul
xor
sub
push
hlt
lea
cmp
iret
scas
jg
cmpsb
outsb
jge
js
mov
je
sbb
dec
loop
or
push
call
push
subb
repz
addb
xchg
cs
sti
xchg
add
adc
popl
xchg
call
xchg
pmulhw
ret
test
loop
xchg
insb
add
pusha
notl
and
arpl
xor
or
pushf
adc
mov
stc
lea
add
int
sahf
push
popa
clc
test
mov
pop
popa
clc
xchg
test
adc
push
lods
jne
sbbb
movsl
pop
inc
pusha
arpl
test
push
aam
std
icebp
popa
int
cmp
andl
jne
sbb
movsb
adc
and
outsl
lea
rolb
les
mov
test
or
scas
aas
pop
dec
mov
iretw
andb
mov
mov
pop
ljmp
mov
inc
nop
testb
mov
xorl
adc
cwtl
jno
ficoms
push
sti
clc
xchg
ret
jb
cmp
and
dec
sub
push
dec
mov
jp
repz
das
gs
scas
cmp
xchg
popa
js
fidivrl
fisttps
adc
inc
fmull
mov
out
and
add
cmpsb
ret
sbb
jnp
popa
imul
ja
jmp
inc
mov
mov
lahf
ss
imul
jge
jb,pt
xchg
in
data16
sbb
push
test
pop
jne
inc
pusha
add
push
stc
and
sbbl
lret
inc
xor
push
mov
mov
sbb
daa
mov
aas
adc
into
pop
imul
fisubl
dec
adc
test
xchg
lret
mov
adc
add
cltd
sarl
pop
xorl
lahf
out
arpl
call
and
roll
mov
sbb
lahf
jp
lidtl
cmp
mov
cmc
mov
stos
inc
jg
loope
pop
mov
clc
inc
mov
and
mov
and
xor
dec
cwtl
mull
dec
fldl
xchg
cmpsb
test
fcoms
rolb
adc
fidivs
das
dec
in
das
pop
insb
adc
rcl
icebp
pop
jne
lods
mov
aam
adc
loope
inc
add
mov
clc
into
rorl
unpcklps
stos
jmp
or
mov
or
outsl
js
or
add
pop
dec
popa
pop
xchg
aam
add
and
sbb
sub
dec
push
dec
and
je
cmp
mov
insl
movsb
add
xchg
jg
int
mov
lret
and
mov
fidivrl
pop
jne
repnz
idivb
push
jle
mov
or
sbb
pop
jb
xchg
cli
inc
or
jg
gs
pop
outsb
mov
popf
hlt
mov
sub
sbb
pop
loope
pop
movsb
sbbb
incl
cmpsb
xchg
mov
data16
stos
in
cmp
xchg
cmp
jge
call
xor
xchg
pop
mov
fldcw
inc
or
inc
enter
push
cmp
dec
mov
push
outsb
push
popa
stos
aas
cmp
inc
pop
mov
imul
add
cmp
jb
and
cmp
sbb
arpl
mov
ficoml
leave
jle
push
pop
inc
push
push
jae
rcrl
dec
scas
pop
lahf
lods
cs
mov
leave
int
stos
jb
pop
out
mov
movsl
mov
cli
pushf
pop
or
shll
jns
test
loop
xchg
xchg
mov
loope
test
arpl
out
jmp
stos
je
es
push
stos
sub
loope
jo
cmp
adc
rcll
push
cmp
enter
sub
or
inc
mov
lret
push
stos
inc
jns
adc
popa
sbb
jp
and
negb
add
inc
sub
cmp
lcall
push
loopne
int
dec
and
scas
pop
and
or
enter
dec
mov
inc
popa
outsl
or
jle
sarl
addr16
sub
xor
mov
jl
mov
stos
jle
fisubrl
ja
sub
dec
cwtl
ds
shl
subb
ret
int
jg
sub
inc
leave
pusha
jns
enter
int3
push
clc
inc
xor
in
ret
movsb
aaa
repz
outsl
and
jno
decb
negb
sbb
stc
in
sarb
fwait
xchg
daa
mov
test
aaa
fstl
dec
aam
icebp
and
add
test
adc
out
test
bound
dec
mov
adc
push
jae
movsl
mov
dec
ss
mov
lods
testl
and
dec
pop
xchg
scas
jge
sub
fidivs
enter
sub
fsubrl
orl
arpl
add
jmp
mov
xchg
push
jae
xchg
inc
lods
or
pop
loop
cmp
mov
lret
xchg
mov
push
mov
jmp
in
push
fucom
mov
mov
fwait
push
outsb
js
or
adc
inc
xlat
roll
jbe
xor
out
sahf
dec
pop
dec
push
mov
xchg
mov
repnz
ljmp
mov
push
daa
cld
xchg
pop
cmp
dec
dec
clc
sbb
rclb
sub
and
xchg
dec
popa
fwait
ljmp
cs
lcall
neg
xor
sahf
xor
cs
mov
subb
mov
dec
pop
adc
push
cwtl
mov
insb
cli
push
sahf
sbb
cmp
leave
int
es
pop
mov
and
es
sbb
into
movsb
sti
jecxz,pn
mov
push
stc
mov
cmp
mov
mov
sub
icebp
adc
adc
fisubrs
dec
and
cmp
fldt
shl
int3
add
aaa
into
push
sahf
notl
loope
lock
out
mov
loop
xor
inc
or
orl
mov
cmp
pop
push
jmp
ds
jo
pop
xchg
inc
fstpt
adc
iret
inc
addr16
in
inc
arpl
xor
call
popf
add
arpl
cwtd
jne
out
stos
fisubs
xchg
push
mov
jmp
sbbl
dec
mov
or
rcrb
xchg
mov
fldt
jp
or
jne
ljmp
pop
scas
sbb
cwtl
sbb
mov
insb
jmp
dec
outsl
jbe
lds
push
stc
out
xchg
addr16
pop
std
dec
xchg
ljmp
in
inc
stos
push
ret
jnp
test
push
jge
mov
add
testl
lods
xor
push
in
je
cmp
je
inc
fsts
les
sti
pop
test
lcall
ss
push
imulb
test
sub
inc
mov
jbe
fcompl
inc
push
adc
adc
mov
adc
loop
cli
push
push
stos
shlb
mov
mov
lret
xchg
cmpsl
ds
mov
fldcw
dec
in
test
pop
mov
mov
cmc
sbb
pusha
sbb
push
outsl
sbb
jb
pushf
or
fldl
les
fcoml
out
cmc
shll
jl
incb
aam
bound
pushf
sbb
test
pushf
lahf
repnz
std
cwtl
push
jmp
out
mov
shr
add
insl
sahf
es
adc
rep
subb
sbb
movsl
xor
fs
fstpt
cmp
dec
dec
loope
pop
les
dec
push
iret
sbb
pop
mov
push
mov
icebp
insl
pop
loope
cmpsb
xchg
arpl
push
js
ret
fidivrl
test
icebp
leave
dec
push
pop
adc
or
movsl
inc
mov
out
lock
sbb
jp
out
push
pop
jne
xchg
in
cmpl
in
or
ds
outsl
push
jg
mov
insb
enter
shl
iret
cmp
mov
mov
dec
ret
fnstsw
cmp
movsb
enter
int3
or
mov
xchg
xchg
inc
ret
or
jb
mov
mov
xchg
cmp
xchg
mov
mov
ljmp
push
popa
and
sbb
jne
jbe
dec
dec
ljmp
aad
scas
and
jg
scas
fs
and
enter
outsb
mov
test
jns
cmpb
stos
cmp
push
mov
nop
aad
sbb
je
rorl
js
xor
mov
jnp
and
cmp
pop
push
add
cmpsb
inc
cwtl
flds
mov
xor
sub
incb
inc
and
mov
dec
div
cmp
cmp
sarb
xlat
mov
lret
adc
jae
loopne
dec
je
and
and
push
add
fdivl
and
xchg
inc
movsb
jg
aam
popf
xor
fwait
or
iret
mov
pop
lds
cmpsl
jge
bound
lahf
je
dec
cmpsb
sarb
dec
or
jle
xlat
pop
xchg
or
cmp
fs
xchg
dec
ret
aaa
adc
or
sub
sub
and
pop
jo
js
lcall
mov
push
lcall
mov
xor
inc
adc
mov
or
jbe
ljmp
cwtl
sahf
mov
xchg
push
jmp
sbb
jp
sub
lcall
cwtl
das
and
in
sahf
adc
sbb
call
cmpb
xlat
push
addr16
pop
jle
push
loop
imul
add
stos
adc
repz
cmp
xor
and
lea
sbb
pushf
jg
adc
cmc
and
sub
pop
jno
inc
mov
clc
int
int
in
or
stos
lds
xchg
rcr
xor
mov
sti
pop
cli
mov
cmp
das
adc
mov
out
inc
mov
jmp
gs
subl
std
push
jbe
std
lods
dec
adc
lds
idiv
jno
movsb
pushf
push
repnz
nop
ss
idivl
aas
insb
in
test
fisubs
xchg
int
xchg
add
in
cs
stos
jb
lret
movsb
add
popa
ja
push
fldt
ja
xchg
sub
xchg
mov
add
mov
pop
jo
or
cld
sbb
adc
mov
stc
aaa
into
sub
aam
lods
bound
sbb
repz
inc
mov
sahf
stos
mov
pop
out
mov
jae
psrld
daa
sub
insl
loopne
jmp
pop
xor
push
icebp
out
add
in
or
jae
inc
xlat
mov
imul
pop
jb
xchg
push
dec
inc
out
dec
sbb
imul
xor
or
cmp
adc
das
push
imul
popf
cmpsl
and
in
bound
jp
cmp
xlat
cwtl
arpl
into
loop
ret
dec
and
test
imull
and
mov
add
mov
jge
sbb
or
sti
cmp
lcall
jmp
inc
sbb
mov
mov
inc
loopne
outsb
daa
fdivr
sub
mov
mov
jle
sbb
addr16
scas
ljmp
adc
je
xchg
jno
push
push
mov
nop
les
or
pop
cmc
mov
fwait
mov
xchg
pop
fldl2t
push
mov
inc
rcll
cmp
xor
rol
inc
fsubr
inc
test
jg
mov
dec
mov
lods
xchg
xor
mov
sbb
js
xor
xchg
stos
add
cmp
xchg
out
insb
pop
cli
xchg
xchg
mov
sub
sub
pop
insb
gs
and
jg
xchg
pusha
xchg
repz
mov
jmp
or
movsl
cmp
mov
cmp
test
xor
jmp
into
push
lret
mull
std
loope
ss
sbb
stos
in
inc
push
or
outsl
cld
xchg
fnstcw
outsl
inc
inc
dec
add
lcall
mov
dec
dec
push
les
sahf
fwait
ret
mov
into
movsl
dec
jns
xchg
sahf
pop
subl
cld
lcall
jne
adc
xor
jns
lret
lahf
mov
push
pop
push
mov
neg
mulb
add
lods
test
aam
daa
rorb
in
jne
xor
mov
jg
sub
mul
lock
aam
push
cmpsb
filds
xchg
lcall
push
mov
push
jbe
pop
dec
enter
leave
cld
std
sbb
dec
dec
fiadds
ljmp
pusha
mov
mov
dec
push
sub
je
pop
xor
ret
pop
mov
and
mov
ficomps
out
and
cs
jmp
pop
mov
gs
ja
adc
aam
call
ds
hlt
mov
pop
pushf
xor
push
inc
es
cld
cmp
add
ja
es
or
mov
lods
sbb
pop
push
sub
iret
loope
enter
test
sarb
push
fdivl
mov
stos
aaa
fildll
in
inc
jmp
mov
sub
stc
and
and
out
xor
std
pop
cmp
shrl
or
sub
inc
xchg
sub
rep
fistpll
imul
cmc
fwait
les
iret
xchg
jbe
inc
cld
xor
fsubl
pushf
jmp
adc
cmp
dec
hlt
cmp
outsl
sub
inc
add
aaa
inc
std
je
ret
jle
sbb
and
mov
and
sets
subl
in
inc
out
cld
out
push
stos
cmpsb
inc
jo
xor
xor
add
push
aad
outsl
stc
dec
mov
mov
mov
push
call
cwtl
icebp
aas
push
and
fdivrl
subl
or
nop
mov
rcrl
mov
lods
pop
imul
int
fbstp
jp
into
pop
add
out
xchg
and
cmp
leave
es
call
pop
ss
jg
loope
outsb
mov
test
xchg
repnz
ret
sbb
mov
pop
outsb
adc
sahf
das
pushf
sbb
mov
jb
adc
push
mov
push
push
outsl
rcrl
lds
dec
jb
xchg
xchg
dec
movsl
push
nop
scas
call
or
ss
sub
jne
xchg
cmp
mov
call
jp
xchg
inc
enter
gs
int
cmp
fld
sub
cmpsl
mov
sbb
or
hlt
adc
bound
mov
xchg
jmp
stos
into
sahf
and
in
mov
je
mov
or
pop
aas
test
idivl
fwait
pop
add
mov
rolb
jae
xor
je
lods
repnz
mov
xchg
jmp
lods
dec
repnz
and
aam
pusha
fildl
cs
or
add
mov
ret
pop
mov
xchg
pop
test
cmpl
test
xchg
xchg
cmp
hlt
dec
scas
mov
test
inc
push
sahf
fcoml
pop
or
push
cmc
or
daa
xchg
jg
daa
into
cmp
pop
adc
mov
jg
jecxz
xchg
mov
pop
jo
movsl
pop
cmp
aaa
push
ret
lds
outsl
sbb
pushf
jg
mov
mov
and
xor
xchg
ja
adc
js
lock
test
adc
xor
push
mov
sbb
xlat
aam
or
mov
test
imul
add
dec
ficompl
mov
cmpb
fnsave
dec
mov
sub
cltd
xchg
dec
rcrb
subb
mov
pop
in
push
and
xchg
cmc
dec
pop
push
or
add
call
lock
inc
pop
xchg
aad
mov
popf
scas
clc
sbb
xor
out
mov
push
clc
daa
ds
cs
inc
repz
imul
sub
outsl
loop
leave
pop
mov
adc
imul
cmp
std
dec
dec
mov
mov
xor
add
mov
pop
sub
test
popf
das
add
das
inc
and
int
mov
data16
mov
mov
std
fstpt
adc
or
ds
push
mov
pop
roll
or
push
cmpsb
jne
adc
cmp
adc
int3
lret
out
shufps
adc
jb
std
xor
push
and
lret
push
mov
pop
adc
adc
bound
pop
stc
imul
pop
mul
movsb
fdivrs
xchg
mov
dec
cmp
sti
mov
add
mov
ret
jne
pop
adc
and
cmp
iret
push
lss
insl
pop
icebp
mov
js
mov
scas
push
aam
push
popf
push
push
jo
in
and
les
shll
inc
cmp
lock
pop
iret
data16
jg
dec
cmpsl
mov
out
mov
push
nop
and
mov
cmp
sub
test
pop
ja
dec
fbstp
fbld
mov
rclb
pop
xor
out
aad
inc
jno
movsb
add
xchg
dec
mov
test
jg
movsl
mov
pop
dec
inc
dec
arpl
adc
out
nop
inc
xlat
mov
mov
inc
les
idivl
cmp
daa
xlat
icebp
mov
cmpsb
cmp
mov
pop
lahf
popa
aad
sbb
out
xor
dec
ljmp
mov
hlt
mov
mov
xchg
es
out
fdivrl
xchg
xor
fwait
pop
and
scas
adc
or
cltd
mov
dec
push
mov
inc
jns
mov
loopw
mov
in
xorb
test
dec
pop
pop
mov
cmp
test
sbb
xchg
dec
cld
shrl
and
cmp
movsb
cmp
in
aaa
xchg
pop
int3
test
leave
cs
ss
inc
push
in
inc
test
insl
mov
out
insl
mov
add
adc
or
into
cli
test
inc
adc
lahf
test
les
sbb
out
leave
pop
nop
and
push
mov
dec
pop
and
mov
jno
std
aam
out
mov
addr16
pushf
divb
push
pop
enter
ret
imul
push
cmpsl
test
out
or
and
xchg
mov
test
enter
xor
mov
jae
fdivrs
pop
jmp
daa
inc
lds
inc
pop
xor
or
ret
ficoms
cmp
mov
xchg
pop
or
shrb
lods
stos
out
cmp
xorl
adc
fistl
mov
push
inc
pop
stos
and
rclb
jns
mov
pop
test
stc
cmpsl
add
in
sti
ret
mull
or
test
or
or
test
mov
push
or
fnstenv
add
stos
les
or
mov
rol
mov
lods
out
sbb
lds
xor
mov
movsb
rclb
inc
add
out
cs
out
scas
mov
mov
mov
mov
fldl
decl
jp
push
mov
pop
jge
call
or
add
sbb
insl
mov
push
in
mov
sbb
int3
arpl
or
rclb
sahf
cmpsl
loop
jbe
mov
mov
jmp
and
pop
sub
cmp
jns
mov
mov
sbb
inc
cmp
test
dec
lahf
clc
inc
lods
cmp
dec
in
mov
test
cmpsl
dec
dec
pop
sub
dec
fimull
mov
rorb
sub
out
insb
jne
pop
fnstenv
sub
and
mov
mov
jg
nop
imul
cmp
divl
lcall
cwtl
sub
cmpsb
stc
dec
xchg
stc
test
adc
sbb
inc
cmpsb
aad
aaa
xor
sahf
inc
inc
outsl
push
xor
xchg
push
inc
je
jge
sub
add
mov
bound
xor
pop
push
adcb
push
or
mov
jge
aas
scas
sti
dec
pop
ficomps
hlt
or
jbe
mov
mov
lret
lret
sahf
and
rcr
cmpb
cmp
shlb
pop
push
xor
xor
cmp
cmp
sti
negl
xrelease
popf
xchg
add
movsb
push
sbb
jl
mov
pop
stos
es
shrl
sub
shll
repnz
add
aas
orb
xchg
or
leave
lods
xor
pop
pop
pop
movsb
cmp
stc
hlt
pop
hlt
mov
ret
andb
mov
stos
jge
fdivrs
cwtl
cmp
pop
fistpll
dec
and
es
or
push
sbbb
addb
leave
and
std
out
imul
std
fidivl
and
dec
imull
mov
cmp
xor
cwtl
xchg
ror
popa
add
aas
shll
hlt
mov
outsl
inc
xchg
je
xor
lds
popf
ja
jae
inc
and
js
push
push
movsl
stc
mov
add
push
paddb
jae
jno
xchg
xchg
push
js
cmpsb
inc
repz
iret
sbbl
cs
and
cmp
into
gs
sub
adc
fstp
xchg
ret
fidivl
pop
pop
out
mov
cmp
rcrl
mov
fsubr
into
fsubl
and
xor
mov
sub
mov
dec
xchg
out
adc
inc
testl
xchg
fistpl
movsl
loope
loopne
mov
fsubrs
xlat
mov
pop
ljmp
dec
cmp
cmp
lods
outsl
jnp
jge
lret
mov
pusha
imul
mov
pop
insl
out
les
lret
lock
xchg
cmp
add
sub
sub
dec
inc
xor
dec
mov
stos
orl
aam
and
mov
pop
mov
cmp
or
negb
loope
sbb
clc
dec
fbld
jge
cmp
popa
xor
jae
scas
jb
pop
xchg
subb
dec
loopne
sbb
jne
and
inc
aad
movsb
dec
dec
cmpsb
lret
bound
adcl
push
js
jne
test
fbld
rol
pop
cmp
lcall
gs
mov
bound
sub
rcrb
test
ret
dec
in
cmpl
pop
nop
adc
push
testl
jp
or
cmpsb
and
mov
repz
shl
int
fwait
dec
sub
addr16
fwait
cli
cs
sbb
dec
nop
orl
dec
in
vpmulhw
or
cmp
xor
into
mov
jg
xchg
mov
icebp
popf
jne
push
inc
push
imul
das
sub
imul
sub
sbb
js
mov
push
xor
mov
sahf
fs
imul
xchg
jo
jbe
and
pop
push
movsl
icebp
int3
mov
test
xlat
add
xor
in
xchg
xor
call
add
mov
xor
mov
cwtl
adc
mov
insl
and
and
das
xchg
inc
push
lahf
xchg
add
mov
pop
pop
stos
seto
adc
bound
cmpsb
mov
xlat
push
push
pushf
loopne
stc
out
xlat
push
pop
cmp
xor
and
cmp
jecxz
or
sub
mov
or
cld
cmp
xor
jns
or
sbb
jbe
push
daa
sbb
orb
outsb
lcall
in
rcrb
loop
mov
cwtl
dec
arpl
movntps
inc
sub
cmp
jp
jp
and
stc
orb
push
roll
push
push
gs
mov
lods
cmp
testl
popa
jne
cltd
scas
sub
clc
rcr
jae
rcll
decl
fs
int3
and
xchg
bound
test
out
rcrl
insb
incl
sahf
mov
sbb
mov
cmpsb
inc
cwtl
and
aam
out
push
psubsb
sub
pop
mov
into
hlt
xor
incb
icebp
mov
sbb
dec
cld
jbe
cmp
push
out
jge
push
xlat
mov
push
fmull
fs
xchg
xchg
lods
push
call
call
ficompl
lea
cmpsl
out
ret
es
arpl
aad
aam
jge
pop
xor
iret
enter
dec
fcomp
sbb
into
dec
dec
loopne
jno
cmc
sbb
dec
add
lock
stos
inc
lcall
inc
jbe
aad
cmpsb
or
adc
mov
loope
push
jmp
mov
cli
and
imul
dec
jge
mov
sti
pop
dec
pop
mov
and
xchg
sub
inc
adc
sub
adc
inc
inc
mull
divb
sahf
dec
test
call
push
out
xlat
fs
xor
clc
cld
fwait
ds
adc
and
mov
xchg
lret
jns
fs
xchg
cmp
jae
fistpl
test
imul
dec
divb
fistpll
pop
adc
or
movsb
lcall
mov
push
xor
mov
pop
jecxz
cmp
mov
xchg
fwait
ret
dec
in
test
pop
out
adc
fidivrl
cmpsb
in
adc
push
das
out
lods
jo
test
mov
jecxz
push
scas
mov
and
imul
scas
mov
mov
cmp
ss
dec
cmp
aad
jp
cld
pop
hlt
dec
adc
sbb
fcompl
ljmp
push
jne
or
or
pop
add
out
out
std
repz
xchg
adc
daa
stos
cmp
fdivrl
je
xor
push
dec
cmp
cmp
pop
call
dec
mov
pop
xorl
fmull
push
adc
mov
les
sbb
stos
xor
sbb
fdivrl
xor
popa
out
adc
mov
jnp
jmp
inc
mov
pop
inc
fmuls
cmpsb
pop
imul
mov
lcall
sahf
aam
jp
xchg
dec
cmpsb
mov
ljmp
dec
pop
repnz
and
icebp
inc
or
pop
mov
push
ljmp
jb
and
ja
gs
insl
rorb
mov
xor
jae
pop
test
hlt
cmp
inc
pusha
lret
xor
leave
sub
push
adc
pusha
ja
sbb
or
xor
inc
mov
pop
rorl
add
orl
jo
add
push
loop
sub
mov
cmpsb
mov
call
mov
data16
aaa
cmp
xlat
rcrl
shrl
push
out
xchg
jb
jns
loop
adc
mov
sbb
jnp
addr16
je
clc
sub
jae
es
jnp
or
jge
imul
xchg
sub
outsl
dec
stc
dec
hlt
nop
cmp
sbb
push
mov
xchg
mov
scas
mov
and
cmovp
jl
rcrb
cmp
out
sahf
outsb
fidivrs
es
xchg
jno
dec
pop
xchg
rolb
pop
aaa
cmp
out
sub
add
lds
insl
push
aad
xchg
xlat
fwait
leave
loope
mov
mov
xlat
scas
inc
outsl
test
aaa
sub
push
pop
clc
mov
divb
movsb
repz
or
and
fidivrl
incl
add
push
mov
sbb
aad
xchg
add
sbb
mov
ret
ss
push
call
test
out
icebp
loop
popa
dec
xchg
cli
subl
dec
jb
loope
adc
push
mov
lods
test
jbe
lret
lahf
add
dec
cmp
push
aad
pop
pop
cmc
dec
or
xchg
add
lea
cld
or
mov
xor
mov
inc
fdivrl
mov
inc
cwtl
jne
and
cwtl
pop
jo
movsb
dec
sub
daa
mov
add
and
fnstsw
add
mov
lahf
aam
dec
sub
cmp
mov
sub
es
aas
add
ficomps
push
daa
mov
mov
mov
mov
xlat
dec
pop
pop
nop
pop
test
loope
out
les
cmp
or
adc
test
icebp
movsl
stos
sbb
jmp
dec
lock
cmp
xchg
cmp
sti
and
sbb
cmpsl
mov
shlb
jge
jnp
or
cmpsl
pop
fsts
mov
mov
mov
test
int3
mov
cwtl
mov
dec
mov
mov
mov
push
pop
or
xor
inc
sbb
lahf
daa
hlt
test
dec
mov
mov
insb
xchg
or
data16
pop
cmpsl
rclb
test
clc
push
fidivs
sub
rcl
cmp
cmpsb
sbb
sub
bound
xchg
jne
push
xor
into
xor
push
jge
imul
xor
and
jne
mov
fstpl
cmp
repnz
add
cmp
stos
xchg
orb
lea
decl
movsb
popa
or
and
xchg
inc
mov
push
pop
aaa
es
stc
lock
cmpsb
xchg
or
xor
mov
xchg
xchg
jo
ret
pop
ret
dec
pop
mov
insl
jg
mov
pop
scas
lods
push
xor
mov
stos
adc
inc
jae
in
cmp
aaa
ds
out
cmpsb
jbe
fmull
jb
js
lret
sbb
bound
arpl
insb
jle
adc
lcall
and
ja
xor
cmp
stc
adc
jne
data16
pushf
inc
shrl
sbb
test
nop
and
in
ds
inc
nop
lret
sti
cmp
xor
test
and
sahf
fwait
add
lods
bound
ds
orl
out
xor
mov
jg
xchg
cmpsl
scas
push
mov
fidivrs
dec
stos
inc
pop
in
inc
shlb
repz
xchg
mov
adc
dec
push
push
in
std
adc
test
jno
arpl
inc
mov
adcb
fsubrp
xor
push
ljmp
mov
mov
gs
push
mov
fisttps
push
lret
fdivrs
mov
enter
orl
imul
xor
fs
in
dec
jns
xlat
cs
mov
clc
mov
addr16
cmp
mov
inc
in
push
movsl
pop
dec
xchg
std
sbb
jo
cltd
and
lret
pop
popf
arpl
daa
mov
dec
test
notb
add
scas
mov
dec
xchg
xor
fwait
idivb
mov
jle
hlt
jbe
and
mov
lods
loopne
mov
xchg
scas
mov
in
inc
xchg
sub
call
mov
sbb
inc
inc
subl
xchg
movsl
mov
push
sbb
movsb
dec
loope
pushf
sub
sbb
push
mulb
sbb
popf
and
pop
or
add
mov
jge
jno
lret
jnp
add
lcall
adc
insl
jmp
pop
dec
push
pop
out
mov
pop
lods
xchg
aam
jmp
test
fisubrs
orb
adc
hlt
fiaddl
mov
inc
int
sbb
add
cmp
lea
cmp
aam
mov
loopne
pop
out
and
jmp
inc
out
add
cmpsb
rcl
cltd
pop
inc
push
mov
cmp
dec
push
adc
aad
lahf
adc
xchg
add
cltd
test
repnz
out
test
sti
cwtl
das
movsl
test
xchg
mov
loope
lods
pusha
pop
add
push
mov
pop
sub
push
stos
or
test
arpl
jae
jne
dec
mov
es
cld
xchg
addr16
xor
inc
jmp
in
mov
mov
fldenv
es
aas
push
xor
clc
popl
mov
into
sub
mov
cmpl
inc
ret
pushl
lods
gs
xchg
int
mov
jecxz
pop
pushf
jno
xchg
mov
aad
xor
add
sub
mov
and
pop
sub
jp
jge
cmp
or
outsl
test
sbb
push
movsb
push
add
mov
sbb
lds
push
js
out
jbe
mov
adc
sub
add
pushf
xor
icebp
mov
jecxz
mov
cmp
lods
hlt
in
mov
pop
aam
mov
je
jnp
sbbl
push
insl
add
subl
push
ss
xor
das
cmp
rolb
std
mov
sbb
push
mov
stos
mov
xchg
xchg
inc
fld
mov
sbb
movsl
nop
push
jmp
xchg
ja
cltd
pop
fcmovbe
insl
or
pop
cmc
adc
and
sub
lret
and
arpl
mov
push
mov
scas
mov
fistps
nop
xor
mov
and
imul
or
xchg
mov
cmc
call
popf
nop
outsl
shrl
jne
and
lcall
inc
push
cmc
pop
or
cmp
mov
cwtl
pop
aaa
xchg
add
bound
xchg
daa
fnstenv
xor
xchg
or
loop
dec
stos
add
mov
cmpsb
cmp
add
popf
mov
pop
sbb
loopne
mov
xchg
aad
sub
dec
xchg
imul
shl
leave
mov
mov
daa
cwtl
cs
push
mov
ljmp
pop
and
jg
xchg
sahf
jmp
jecxz
xchg
insb
sbb
fldenv
into
and
xchg
jnp
jl
lret
test
sbb
addb
hlt
mov
dec
pop
lret
sbb
sub
inc
mov
sbb
xchg
push
mov
popa
xor
dec
ljmp
sub
std
mov
outsb
movsbl
out
repnz
push
in
or
dec
clc
mov
mov
push
aaa
popa
pushf
or
lods
push
filds
out
outsb
ds
ret
xor
mov
ror
fldt
and
inc
push
lret
add
into
lds
ds
repz
inc
xrelease
cmp
in
jmp
lret
test
inc
jb
sbb
aas
mov
ffreep
insl
shlb
andl
int
pop
inc
lcall
sub
dec
je
pushf
add
inc
mov
push
cwtl
add
cmp
mov
rcll
or
mov
pop
repz
cld
daa
in
jp
pop
sbb
cld
leave
pusha
cs
aad
push
jne
mov
out
or
adc
dec
loopne
clc
and
frstor
push
pop
lea
das
outsl
js
adc
insb
lods
pop
dec
in
int
jle
in
out
movl
mov
das
xchg
insl
shrb
test
imul
xchg
ss
sahf
or
jne
es
mov
adc
popa
jno
fmull
in
js
fs
jg
in
sbb
mov
add
fpatan
mov
or
add
sbb
push
fstl
fsubrs
mov
mov
jle
repz
negl
dec
cli
fwait
imull
xchg
add
pop
stc
push
or
jge
fistl
lret
adc
std
aaa
sub
lahf
ss
sti
rolb
adc
pop
test
lods
inc
outsb
jl
pusha
stos
add
loope
xchg
shrb
jge
addr16
ret
xor
lret
cld
sub
push
push
inc
scas
xor
test
mov
es
lahf
push
fstl
sti
dec
aaa
sti
sar
adc
jae
je
jl
pop
dec
ljmp
fcmove
aaa
mov
jge
fsubl
mov
hlt
push
xor
cmp
mov
xchg
cmp
sbb
in
jnp
adc
jge
shll
fwait
xlat
repnz
mov
adc
scas
xchg
loope
and
mov
movsb
ret
or
and
test
clc
and
mov
mov
jns
shl
leave
sub
cmp
fwait
xchg
in
aam
pop
mov
and
movsl
in
popa
mov
rcr
add
das
xchg
pop
mov
dec
xchg
jge,pn
loop
aaa
pop
mov
dec
pop
pushf
scas
jnp
lahf
ss
mov
test
mov
inc
cmpsl
lahf
inc
testl
data16
aaa
mov
mov
mov
mov
imul
pop
lock
outsl
push
insb
fsubrs
push
data16
inc
fmull
stos
arpl
fldt
adc
ss
cmc
pop
and
pop
add
mov
aas
cs
fcmovne
push
test
lods
mov
scas
dec
out
sbb
ds
push
scas
icebp
out
xchg
rorl
cmp
sbb
int3
nop
mov
icebp
adc
push
add
cmp
mov
pop
js
jg
push
imul
int
test
ja
jmp
leave
loope
cmpsb
inc
cmpsb
cmp
sti
sbb
jae
push
clc
in
pusha
out
cmpsb
xchg
scas
xchg
out
pop
sbb
scas
and
mov
xor
cmp
mov
out
out
insl
pop
mov
rcll
fidivl
cld
jecxz
add
test
jno
aaa
fwait
mov
and
sar
movsb
jmp
fcompl
mov
and
add
sbb
mov
decl
jp
ds
das
test
push
pop
fxch
pop
das
dec
xor
call
xor
jecxz
push
pop
xor
cmc
dec
add
mov
imul
add
mov
jae
sahf
xchg
lods
push
fsubr
push
jmp
xchg
xchg
jge
push
gs
pop
xchg
dec
push
movsl
jge
push
jbe
adc
xchg
inc
in
mov
pop
mov
stos
inc
jb
mov
jno
stc
repnz
mov
scas
inc
xchg
int
fsts
ds
jbe
dec
pop
gs
jl
in
aas
imul
adc
sbb
xchg
mov
cmp
jecxz
inc
into
loope
stos
sub
add
ret
repnz
lcall
mov
push
push
js
mov
jp
mov
fisubs
mov
adc
add
adc
nop
aam
push
les
flds
insb
add
ret
mov
fiadds
or
addl
dec
sahf
sti
sub
dec
add
or
movsl
cld
cmp
mov
subl
and
sti
inc
rcrb
pushf
xor
push
arpl
push
xchg
into
jb
or
and
out
in
push
pop
iret
adc
sub
scas
xchg
or
sbb
decl
mov
scas
imul
mov
or
adc
dec
push
orb
xor
mov
xor
jae
jnp
inc
loop
inc
sbb
dec
imul
loope,pt
pushf
mov
movsb
icebp
arpl
paddusw
jp
mov
out
enter
dec
fsubrl
fcmove
fdivs
or
loop
mov
imul
mov
repnz
in
jl
adcl
xchg
adc
or
test
jmp
popf
fs
inc
jp
push
lahf
and
or
test
mov
mov
add
push
jp
push
push
sub
jno
das
mov
ret
xchg
sub
push
mov
or
cmp
adcb
mov
mov
rcrb
cmpsl
jp
push
pop
adc
repz
pushf
icebp
mov
mov
sbb
dec
ret
mov
cld
mov
push
out
push
shl
sub
xchg
arpl
inc
lret
bound
adc
add
push
jnp
pop
in
xor
mov
push
test
pop
pop
sub
fisttpl
mov
and
into
movsl
push
dec
enter
push
or
mov
movsl
cmp
lods
shll
pop
inc
and
outsl
pop
fscale
add
cltd
lods
mov
stc
rcrl
push
aam
sti
xchg
xor
cmp
mov
in
es
mov
in
dec
cmp
inc
pop
add
xor
or
das
aas
or
lahf
test
adc
fsubrl
mov
mov
pushf
mov
sbb
fdivl
or
fcmove
jecxz
ret
jmp
movl
ret
xor
xchg
arpl
add
pop
scas
mov
sbb
push
xlat
mov
stos
inc
xor
push
sub
cmp
aaa
pushf
inc
push
sarb
data16
faddp
and
add
xor
subb
push
adc
sbb
lods
jns
cmp
cld
aaa
add
movsb
xchg
out
enter
inc
jmp
ja
dec
jae
push
in
lock
xor
bound
jae
and
adc
push
cli
fxch
fnstenv
lods
xchg
dec
push
ret
pop
gs
lret
mov
cmpb
fcmove
sbb
mov
loopne
and
imul
loopne
aam
fs
pop
inc
shlb
iret
add
mov
aaa
pop
in
push
adc
fsubrl
and
sarl
lods
sub
jns
stos
les
notb
jo
sbb
xchg
shlb
or
sarl
outsl
scas
loopne
rcl
addb
mov
xlat
mov
pop
push
arpl
mov
aam
aad
inc
enter
sarb
jo
cmp
inc
arpl
loopne
jb
sbb
lahf
sub
add
cmpsb
dec
popf
sub
fisubs
ds
cli
test
dec
add
and
mov
cld
xchg
push
push
jle
test
repz
lock
aam
sbb
inc
jnp
sahf
push
jb
mov
mov
mov
dec
insl
cmpsb
jl
sub
pop
es
push
xlat
scas
nop
mov
shl
push
fiaddl
and
stc
xor
bound
push
shlb
bound
out
out
adc
pop
dec
int
mov
std
push
add
cmp
ss
int
loopne
subb
sub
sbb
jl
pop
les
sub
sub
jae
and
mov
xchg
cmpb
arpl
or
cli
or
leave
xor
cmp
sbb
push
push
enter
pop
or
incl
ret
mov
jecxz
adc
and
add
fistps
scas
mov
sbb
pusha
cmp
push
orl
push
push
push
adcb
roll
in
jle
adc
sbb
mov
dec
loop
leave
in
bound
lret
mov
pop
mull
push
rcll
dec
test
xchg
ret
mov
out
cmp
lods
popa
mov
jg
or
loopne
or
xchg
test
ret
stc
ja
cmp
adc
in
test
jbe
fidivrl
jo
cmpsb
mov
or
ljmp
jno
dec
sub
aas
and
sbb
lds
inc
jge
sahf
sub
sub
mov
mov
popf
sub
outsb
hlt
mov
shrb
jp
movsb
cmpsb
test
xchg
and
out
in
adc
imull
shlb
cs
inc
sbb
lds
jb
jl
loope
rcrl
and
xchg
mov
ljmp
mov
cmc
mov
push
lods
roll
lds
jno
popa
mov
arpl
add
or
sub
xor
jmp
mov
mov
push
adc
xchg
out
sahf
stc
sub
add
pushf
aas
pop
pop
mov
jns
and
dec
cmp
push
daa
mov
lret
es
inc
fstpl
cli
adc
outsb
jns
or
pusha
or
cmp
mov
ljmp
push
or
mov
ss
jge
popa
mov
test
movsl
cs
mov
bound
lahf
mov
push
outsl
inc
push
mov
out
dec
into
and
repnz
sub
stc
and
dec
mov
sti
and
and
mov
stos
mov
aas
in
adc
pop
movsl
mov
mov
iret
fwait
ja
fnsave
push
fstpt
lret
and
mov
jbe
fisubrl
dec
test
sbb
cmp
add
inc
rorl
lea
pop
lea
cmp
pop
cmp
mov
inc
inc
nop
dec
fildll
xor
jns
xchg
int3
xchg
frstor
int
cmc
adc
or
cmpsl
fildl
sbb
inc
loopne
jl
out
sbb
pop
lahf
jbe
mov
call
mov
cmp
pextrw
inc
and
cmp
cmp
orl
sbb
arpl
pop
xor
dec
dec
cmp
cmp
aas
pop
ljmp
push
in
xchg
push
into
pop
inc
inc
imul
cmc
and
movlps
push
mov
xchg
mov
call
out
sahf
sub
push
hlt
push
imul
mov
divl
mov
dec
xchg
add
out
mov
or
push
mov
add
aaa
xchg
pop
cmp
shl
cmp
jo
into
mov
push
iret
enter
in
or
mov
sbb
mov
scas
push
repnz
inc
xor
jge
les
rol
and
arpl
rorl
ficompl
ss
add
mov
rorl
ret
lea
pop
mov
sbb
das
cmp
add
push
idivb
and
jecxz
sar
inc
data16
jle
jns
inc
popa
adc
xor
adc
ds
popa
outsl
jmp
sub
lea
and
movsl
popa
stc
jg
mov
pop
xchg
jb
in
sub
push
rcll
roll
add
mov
daa
adc
xor
vsubsd
aaa
aad
scas
cmp
mov
mov
and
jo
cltd
push
decl
mov
mov
sbb
ljmp
cltd
inc
jle
das
mov
sbb
insl
imul
leave
sbb
push
mov
ss
push
call
ret
mul
push
or
mov
sahf
jne
lea
jl
xor
push
mov
cmp
dec
xor
jns
jg
fmull
cmp
rol
xor
pop
adc
mov
out
mov
jne
test
mov
xor
xorb
repnz
dec
mov
out
add
pop
fsubr
mov
xchg
mov
rcrl
add
fcoms
push
inc
sub
mov
adc
mov
lea
out
popf
stos
and
nop
sarb
jmp
out
add
pop
add
push
addr16
add
inc
inc
ja
cli
pop
xor
mov
or
rorl
dec
pop
rcrl
movsb
pop
inc
enter
lods
arpl
push
jp
mov
or
and
push
std
push
xor
popa
test
sti
pop
cmpsb
fmull
fbld
jl
mov
mov
mov
add
fmuls
sbb
pop
push
lods
push
mulb
cmp
xchg
je
and
mov
and
mov
dec
fsub
aam
xchg
mov
dec
nop
xchg
repz
jle
aas
aad
pop
rclb
out
pop
repz
movsb
scas
jmp
gs
sub
pop
pop
and
jge
push
lahf
push
mov
popa
jo
iret
sub
mov
in
pop
out
stos
pop
faddl
int3
sbb
ds
jmp
jle
and
xchg
xchg
pusha
sarb
adc
push
sub
lods
mov
jge
mov
ljmp
fucom
ret
xor
ja
dec
pop
fs
pop
push
cmp
ja
je
fdivs
push
push
jo
cmovp
cmpsl
mov
xlat
icebp
dec
repz
popf
in
cwtl
adc
hlt
push
mov
repnz
cmpsl
mov
mov
add
imul
hlt
arpl
and
sub
pop
pop
call
pop
aam
cmpsl
cmp
idivb
sub
outsb
add
or
xor
sub
scas
sbb
mov
adc
dec
jle
lock
mov
sbb
xchg
fldcw
pop
jnp
and
iret
jnp
push
mov
ljmp
xor
push
sub
push
mov
cld
cmpsl
sbb
sbb
mov
push
adc
adc
fists
popf
mov
sbb
stc
or
incl
test
loop
mov
fwait
xor
shlb
add
xor
xchg
pop
out
jge
pushf
mov
jo
and
push
inc
subb
nop
das
in
mov
mov
lods
cmp
mov
dec
mov
xchg
add
icebp
mov
icebp
xchg
push
les
adcb
xor
push
cmc
dec
imul
xor
in
push
js
jmp
out
jge
add
pop
xchg
or
lahf
sub
stos
fdivrs
or
jp
pusha
jp
aad
jae
adc
push
add
jl
movsb
repnz
push
scas
cmp
cmpsl
notb
call
sub
sbb
mov
out
pop
cld
push
out
jg
sbb
cmp
aas
aaa
cmp
inc
xor
xchg
movsl
js
push
xchg
pusha
mov
adc
mov
jno
sbb
int
xchg
movsb
mov
pop
int
xchg
sub
push
into
xor
lods
sbb
pop
and
mov
adc
out
das
fwait
pop
push
inc
sarl
xor
pop
jnp
add
insb
adc
and
lahf
ss
scas
mov
addr16
add
mov
adc
rolb
xlat
insl
idiv
xchg
sub
sahf
or
mov
and
lahf
ss
pop
std
lods
mov
pop
dec
dec
imul
fistps
mov
cmp
sahf
sub
dec
aaa
mov
pop
stos
cmp
push
test
or
xor
jl
mov
push
jle
mov
lret
stc
roll
add
cmpsb
xor
or
loopne
and
adc
cmp
push
test
sub
sub
sbb
out
into
movsb
scas
or
dec
dec
xchg
fucomip
add
pushf
ds
xor
and
pushf
scas
clc
push
lret
fs
out
or
jmp
shrl
pop
xor
mov
lret
mov
xchg
adc
rcll
add
xor
jae
jns
int
dec
add
adc
je
jnp
in
xor
sub
jmp
sbb
outsl
add
adc
clc
xchg
out
dec
cmp
cltd
shrb
stc
or
out
in
int3
hlt
enter
out
stos
jbe
ljmp
inc
mov
pop
scas
int
mov
fdivs
xor
mov
xor
shll
add
je
inc
je
inc
xchg
loop
int3
lcall
dec
lds
mov
les
push
mov
inc
sub
push
pop
arpl
sub
mov
stos
insl
rclb
xchg
inc
mov
xchg
in
dec
fwait
mov
and
mov
xor
mov
dec
in
mov
insb
pop
mov
jmp
push
mov
sub
mov
mov
pop
insb
add
es
sbb
cmpsl
mov
xchg
dec
fistps
int3
pop
mov
cmp
adc
stc
test
notb
mov
fucomp
shlb
xchg
test
sub
scas
bound
ds
mov
cmpsl
pop
cmc
int
cltd
outsl
add
je
dec
je
push
das
jb
loop
sub
jnp
bound
xchg
push
cmc
adc
mov
outsb
or
jne
out
fisubrs
pushl
nop
and
mov
xor
ljmp
push
adc
add
xor
daa
cli
adc
xor
inc
gs
jle
fnsave
je
adc
push
push
inc
sbb
jg
test
rol
xor
or
push
jg
push
and
ss
mov
iret
ljmp
push
rclb
sub
mov
mov
cmpsb
xor
mov
lret
test
out
push
push
cmpsl
lock
pop
inc
sbb
xchg
mov
lea
clc
pushf
in
mov
xchg
cli
add
mov
iret
pop
icebp
or
ja
push
js
mov
add
pop
cmp
mov
mov
jl
aas
sub
ret
lock
mov
fistps
shlb
pop
push
jl
pop
push
jmp
cmpsb
outsb
push
aad
add
clc
test
xor
imul
mov
or
dec
push
push
movsb
mov
loope
rcl
jge
and
jp
mov
ja
xor
mov
sahf
sbb
lret
cmp
cmp
mov
jecxz
dec
adc
jp
imul
movsb
insb
sub
outsl
adc
into
leave
test
je
ljmp
mov
cmp
cmc
pop
out
xchg
aad
inc
incb
pop
leave
pop
and
dec
icebp
test
cmp
cmpsl
js
and
inc
mov
xchg
mov
sub
cli
sbb
add
loope
in
pushf
mov
dec
sub
scas
lds
fsubs
mov
jmp
std
cs
and
or
les
pushf
lea
cli
pop
addl
repz
sub
clc
lret
lods
cs
push
xor
fimull
jnp
sbb
jle
xchg
mov
roll
dec
or
jne
add
std
mov
inc
cs
mov
fstpt
in
test
scas
xchg
fisttpl
push
outsl
outsb
mov
push
mov
mov
adc
mov
xchg
jecxz
lcall
adc
sub
mov
xor
xor
cmc
out
int
test
rorb
mov
cmp
jecxz
adc
inc
inc
clc
xchg
sahf
xor
jl
inc
ret
mov
dec
dec
shll
inc
sarb
pop
repz
pushf
fcmovnu
cmp
jge
inc
stos
jmp
cmpsl
fidivl
out
test
jl
mov
push
gs
scas
and
dec
cmp
into
pop
outsl
pop
cmp
mov
iret
stos
jecxz
test
inc
mov
ret
pop
xchg
ret
pop
jge
and
mov
insb
lea
push
loop
orl
mov
cmp
jnp
sub
imul
orl
inc
jns
fisubrl
ffreep
sbb
mov
ljmp
xchg
and
test
add
mov
out
repnz
or
loopne
enter
lret
nopl
in
adc
mov
das
cwtl
push
and
repnz
test
addr16
neg
pop
leave
lods
sbb
pop
out
fdivrs
or
dec
aam
idiv
scas
enter
data16
inc
adc
rclb
rcl
stos
xchg
fisubs
jbe
loope
xor
addr16
out
outsb
jb
jnp
and
mov
fists
daa
adc
push
shll
lret
sub
inc
stos
add
ficompl
jo
sarl
in
mov
mov
rcl
repnz
cwtl
stc
ja
scas
xchg
mov
dec
lret
lret
push
sbb
data16
insb
sub
or
insl
adc
mov
in
add
sbb
imul
xor
ret
jecxz
lods
cmp
cmp
dec
loope
mov
scas
out
xchg
sub
or
sbbb
icebp
rol
mov
adc
sahf
push
cltd
cmpsl
or
add
cmpsl
inc
push
movsl
jbe
jb
rorl
lds
pop
or
aad
scas
jle
pop
pop
xchg
mov
in
sub
push
xchg
fdivp
popf
std
xor
jl
loopne
lahf
popf
mov
iret
sarb
push
xchg
lea
push
into
popf
push
sti
jg
and
add
inc
int3
mov
pusha
adc
inc
cmp
dec
jl
ret
jns
mov
fimuls
das
icebp
jne
dec
add
fisubrl
jp
cmp
mov
rcll
inc
jecxz
cmp
nop
push
mov
std
mov
push
jl
mov
xchg
scas
and
mov
imul
stos
jo
jge
shll
sub
aaa
jo
faddl
rcl
movsb
scas
jge
in
movsb
mov
mov
in
rorl
filds
pop
daa
xor
jne
insl
push
je
out
in
lahf
pop
mov
pop
push
cmp
or
xchg
mov
inc
aad
fsubs
push
movsl
cltd
cltd
jle
mov
mov
cwtl
mov
jb
int
data16
icebp
push
sub
sbb
xchg
pop
rclb
imul
cmp
mov
aam
pop
jecxz
mov
inc
mov
mov
mov
icebp
cmp
xor
popa
and
or
in
mov
fbstp
adc
push
out
popa
jl
xor
push
adc
inc
add
sub
cltd
loopne
outsb
inc
adc
add
rorl
jb
and
shlb
mov
rclb
shrb
inc
dec
pop
lods
sub
btc
in
jmp
xlat
sub
rcrb
outsl
jns
mov
mov
addr16
adc
adcl
inc
enter
dec
shrb
adc
ja
jmp
aas
pop
pop
sar
lods
and
xchg
subb
jp
lods
xchg
xchg
sub
lds
andb
sub
xchg
aaa
adc
es
lea
jg
dec
mov
jae
inc
sub
dec
push
add
addr16
rorl
adc
inc
sahf
repnz
data16
in
test
fnsave
mull
sub
fisttpll
leave
mov
sbb
inc
mov
loop
ss
out
xor
xchg
jae
mov
fdivrp
or
mov
insl
jp
daa
xchg
mov
hlt
mov
cmc
adc
nop
lret
fsubs
lds
std
cs
loop
aam
js
shrl
repnz
ja
rorb
inc
push
insl
clc
testb
or
xor
sub
cmp
insl
and
imul
pop
fdivrs
lock
and
jecxz
popa
fsubr
mov
scas
and
sbb
push
xchg
std
pop
cmp
lods
mov
push
clc
dec
jo
les
inc
push
aas
ret
jnp
add
mov
out
push
out
sub
js
xor
adc
in
cmp
loope
cs
inc
leave
aas
xchg
repnz
and
push
popf
sub
sahf
lods
sub
ret
pop
loope
mov
shl
imul
or
fadd
nop
adc
in
nop
in
push
fldenv
xor
add
cmpsl
pop
inc
loopne
data16
ja
std
xor
cmp
mov
mov
xchg
mov
loop
mov
push
add
or
addr16
cmp
mov
mov
cs
jle
mov
mov
sub
imul
lret
lock
xorl
into
mov
jbe
xchg
dec
rolb
inc
cld
xchg
jne
aas
mov
stos
mov
lods
and
popf
cld
les
fucomi
dec
rolb
fnstcw
sub
mov
jns
pushf
pop
jae
pop
test
and
gs
pushl
xor
cmp
hlt
inc
push
decl
push
xchg
mov
ss
leave
push
add
arpl
pop
sbb
mov
inc
je
pop
pop
addl
out
push
mov
jnp
out
push
lcall
int
add
movsb
incb
mov
lret
mov
sbb
jo
push
in
mov
pushf
shll
inc
pop
and
push
pop
stc
js
in
int3
daa
lret
push
xchg
pop
insb
add
sbb
xor
or
jp
adcb
push
jecxz
shr
repnz
into
cmp
xchg
mov
mov
jae
lods
jecxz
dec
loope
out
push
out
shlb
into
adcl
popf
lret
std
fcompl
rclb
out
aam
add
jecxz
inc
daa
pushf
lods
push
sbb
iret
ds
outsl
mov
xor
or
scas
mov
roll
fbld
inc
sbb
ret
xor
xchg
and
ds
adc
loop
fidivrs
push
pop
vmovups
fadds
sub
push
je
adc
ret
cmc
jp
lods
stos
jae
shrl
xor
out
dec
adc
push
cmp
pop
lock
dec
mov
hlt
jecxz
inc
stos
xchg
call
frstor
xchg
lods
call
cmp
xchg
xchg
and
add
jbe
cmc
push
mov
ficoml
or
dec
mov
test
imul
mov
add
xchg
push
call
cs
outsl
push
cmp
sub
sub
push
ds
mov
push
dec
inc
fidivrl
adc
dec
outsb
ret
pop
ja
cmp
mov
loop
xchg
add
xchg
adc
mov
aad
mov
mov
jg
enter
dec
inc
fldl2e
lds
aas
add
xrelease
fucom
mov
pusha
enter
jbe
cmp
stos
and
rcll
pop
mov
lds
cmpsb
mov
daa
mov
pop
sub
das
pop
mov
and
push
or
in
sub
jnp
subl
je
popf
lahf
xchg
sbb
scas
cmp
jp
sbb
add
cmp
jl
fcmovnu
lret
lods
push
lcall
in
loop
cmpsb
add
sarb
push
pop
movsb
push
popf
jno
shrl
iret
mov
inc
jnp
dec
cmp
orb
cltd
mov
aad
jecxz
or
adc
es
mov
push
jp
dec
cmpsl
int3
dec
xchg
sub
and
shrl
loop
mov
jmp
add
enter
jmp
mov
pop
push
cmp
push
clc
nop
mov
cmp
add
pop
sbb
push
loop
add
xor
shrb
popf
and
ds
shrb
fstl
add
inc
mov
popf
push
clc
mov
inc
pop
movl
pop
adc
ja
push
ljmp
sbb
insb
push
sub
dec
aas
cmpl
cmp
or
dec
lahf
rol
nop
gs
cmp
ret
mov
loopne
adc
jp
lcall
mov
add
outsb
aaa
push
mov
out
pop
cmc
pop
fnstenv
leave
fisttpl
js
repnz
or
push
mov
and
fwait
mov
pop
push
outsl
add
mov
jl
lods
and
push
js
fidivrs
push
push
cmpsb
jbe
cmp
push
dec
dec
dec
fmulp
orb
es
mov
shlb
or
test
cmpb
xchg
popa
sub
mov
jno
cmovge
dec
pop
adc
push
mov
push
mov
in
mov
adc
jo
push
xlat
lods
sbb
mov
sub
ss
out
addr16
je
cli
pushf
rorb
sti
mov
xchg
notl
ret
push
mov
ds
stos
cmp
push
add
hlt
pop
int
movsl
lds
xchg
jne
cmc
shlb
adcb
xchg
jecxz
cs
mov
enter
xchg
hlt
lods
xlat
mov
lea
add
mov
js
xchg
xor
fmull
cs
pop
mov
lods
inc
adcl
aam
sarb
xor
int
xor
push
fisttpl
sarl
push
cli
mov
sub
test
outsb
imul
pop
cli
jns
sahf
orl
mov
jns
push
mov
frstor
jmp
mov
sbb
test
pop
xchg
dec
or
mov
dec
sbb
cmp
js
in
or
fiadds
ljmp
in
enter
xor
lods
gs
iret
add
mov
or
jg
sahf
lret
xlat
mov
pop
mov
adc
xchg
mov
les
xchg
dec
sub
jg
aaa
jbe
adc
jge
xor
sbbl
pop
lods
lahf
stc
pop
jecxz
pop
pop
repnz
aas
test
jge
jns
lcall
xchg
and
push
mov
sub
dec
cmp
rol
rcrb
popf
imul
repz
mov
xchg
leave
pushl
mov
cmp
jmp
sbb
push
sbb
aas
lahf
fisubs
std
cmp
fldt
xor
cld
imul
jno
xorl
mov
cld
push
daa
add
lods
andb
je
fistpl
push
inc
lods
dec
setbe
xchg
add
cld
push
frstor
and
not
subl
test
adc
mov
cmc
add
mov
sarb
aad
loopne
pop
idivb
daa
rcrb
aam
rorl
pop
jo
aam
divb
out
jl
jg
std
adc
push
imul
inc
fisttpl
pusha
or
stos
push
enter
pop
sub
fisttps
and
shrb
xchg
sbb
movsb
movsb
cmp
cmp
xor
pop
ss
sarl
roll
xchg
cmp
lds
pop
ret
xchg
imul
jle
js
cwtl
dec
loopne
insb
mov
jno
pop
sahf
clc
jmp
inc
xorb
test
lret
dec
mov
cmc
pop
call
imul
push
sbb
das
movsl
sbb
push
scas
add
mov
jae
adc
xlat
mov
mov
insb
test
mov
aaa
inc
fistpll
arpl
mov
cmp
push
mov
dec
repnz
retw
nop
daa
mov
inc
lretw
stc
stos
mov
lahf
mov
jno
cmpsl
movsb
aas
clc
and
push
popf
scas
cmpsl
jecxz
mov
test
mov
add
clc
sbb
mov
arpl
les
dec
push
adc
pop
lret
fiaddl
mov
inc
adc
adc
imul
add
outsb
jb
ret
adc
sahf
sbb
xor
or
fistl
addl
pop
adc
cmp
lea
cmp
lret
in
outsl
out
sbb
jecxz
cmp
adc
push
cmp
imulb
jns
push
mov
adc
test
inc
push
dec
mov
push
xor
mov
ds
popf
test
inc
inc
pop
xor
lds
andb
insb
mov
das
cmp
mov
loopne
sbb
je
imul
outsb
mov
scas
adc
scas
stos
push
sbb
fs
push
lret
dec
mov
add
es
pop
aas
fcoml
push
aad
outsl
sub
ja
pop
dec
sbb
cmp
mov
bound
popa
fsubr
xchg
ret
jnp
and
and
xchg
test
scas
ja
subl
pusha
fistpl
jnp
out
adc
pop
std
stos
dec
jno
inc
aas
insb
inc
aad
cmp
scas
shlb
idiv
test
ss
incl
cmc
sbb
xor
mov
pop
aas
xor
pop
sbbb
dec
out
out
shlb
cmp
addl
add
push
xorb
jae
mov
and
notb
jp
xchg
sbb
xchg
scas
lret
lods
outsl
sbb
pop
mov
mov
hlt
jge
fistps
cmpsb
rcrl
mov
xchg
cmp
inc
jmp
sbb
repnz
mov
jge
es
inc
adc
aam
xchg
fbstp
fwait
push
jo
imul
data16
mov
dec
add
mov
xor
push
xlat
push
enterw
push
cli
mov
jle
sbb
push
fsubl
and
ss
frndint
sti
shrb
dec
fs
mull
fdivp
int3
and
mov
or
and
mov
jle
xor
xor
jmp
ret
sub
jmp
dec
stc
popf
out
adc
sbb
jle
pusha
popa
mov
iret
rcrb
repnz
lds
cltd
sub
and
fcompl
popf
adc
mov
xchg
mov
xchg
adc
daa
jnp
push
out
aas
mov
or
pop
sbb
mov
nop
jg
inc
pop
outsb
pop
mov
loop
adc
bound
and
gs
xchg
or
jnp
mov
adc
in
xor
loop
in
xchg
pop
out
lret
je
sub
into
adc
outsl
push
test
xchg
pop
xchg
aaa
adc
or
popf
arpl
stos
add
sub
ljmp
mov
pushf
mov
jne
bound
es
cmp
mov
fcoml
pop
push
push
xor
rcr
xchg
xchg
lret
push
cmpsl
sub
jo
jo
mov
lahf
push
loopne
cmp
cmp
cld
out
rorl
shl
fildl
repnz
push
sub
lret
push
mov
jno
mov
dec
sbb
xchg
decb
aad
adcb
mov
adc
jb
mov
mov
lea
into
les
push
std
dec
adc
add
lods
fsubrl
push
inc
xchg
cmp
aad
sbb
repnz
jle
inc
sub
inc
data16
inc
push
popa
sub
xchg
mov
adc
inc
dec
popa
lock
aad
and
inc
push
dec
pop
lods
icebp
xorb
insb
and
mov
arpl
insl
push
pop
cmp
adc
pop
push
jge
or
aad
sub
and
int3
rclb
mov
cmc
testb
aad
push
das
or
pop
pop
rcrl
cmc
mov
leave
add
fidivrl
cmp
rcrl
cmpsl
mov
incb
vpaddusw
ret
sub
mov
lea
push
and
les
lahf
fnclex
leave
les
cld
arpl
out
insl
mov
inc
mov
xchg
enter
mov
inc
jnp
mov
loopne
jecxz
sbb
mov
and
scas
ret
call
add
in
cmp
jo
out
test
fdivl
adc
pop
iret
repnz
add
push
jg,pt
pop
inc
pop
test
jno
in
popa
jnp
mov
addr16
inc
xchg
je
pop
in
cmp
mov
lcall
jmp
mov
ds
jmp
pop
push
out
in
mov
stc
shrb
outsb
loop
xchg
adc
iret
dec
cmp
insl
das
jbe
add
sbb
sahf
and
sub
jno
iret
cmp
cli
cwtl
add
sbb
gs
std
sbb
fdivl
mov
jp
enter
sbb
cltd
mov
inc
das
aaa
xlat
and
sub
enter
icebp
jmp
sub
sti
adc
mov
ret
loope
movsl
mov
ret
sub
fmull
dec
mov
sbb
sub
cmp
or
cmp
nop
jp
ret
push
sar
jne
movsl
hlt
lcall
out
xchg
movsl
adc
outsb
lret
sbb
or
push
jl
int3
push
call
add
lahf
imul
inc
pop
jg
mov
subb
lahf
adc
inc
cwtl
cmc
enter
call
adc
mov
add
sub
aad
loop
outsl
jnp
das
xchg
sub
dec
pusha
dec
and
leave
test
imul
jge
add
xor
mov
xchg
cli
inc
pusha
shll
push
mov
cld
adc
cmp
or
or
shll
sbb
mov
or
iret
sar
sbb
cmp
sahf
or
nop
test
mov
lods
popf
jae
mov
push
mov
les
out
push
in
xor
or
jo
insl
hlt
lret
nop
adc
adc
xchg
inc
adc
mov
push
or
addb
sbbl
mov
sub
xchg
xor
jmp
cmpsb
les
push
shlb
outsl
push
inc
pusha
add
or
jecxz
mov
mov
int
mov
dec
insb
aam
xchg
lret
or
jge
popa
loope
push
fcmovbe
iret
pushf
xor
in
or
pop
aaa
push
add
mov
lea
mov
adc
cmp
pop
and
mov
jmp
mov
addr16
data16
pop
push
mov
mov
xchg
movsl
push
mov
cmpsb
or
test
ljmp
popa
add
cltd
aam
add
pop
std
mov
inc
dec
jo
adc
and
aam
or
ljmp
pop
cmp
add
sbb
or
es
ret
and
pusha
mov
jmp
les
adc
mov
jmp
cmpsb
add
lds
ljmp
ljmp
in
mov
xor
xchg
mov
in
jo
add
cli
test
xchg
xor
test
inc
lods
sub
sub
fwait
xor
fbstp
lods
dec
ds
push
mov
xor
lahf
mov
call
addr16
push
scas
test
fwait
inc
sub
jbe
stos
arpl
xchg
mov
movsb
out
push
call
and
enter
or
pop
adc
jo
jl
mov
pushf
jbe
adc
xor
into
xchg
scas
outsl
push
jo
cmp
icebp
push
push
mov
push
mov
pop
repz
fistpl
cmpsl
push
push
adc
sub
xor
push
mov
sbb
lcall
dec
scas
xchg
cmp
inc
mov
mov
pop
lock
fcmovnu
dec
mov
or
mov
push
push
fisttpl
sub
push
mov
pop
adc
cs
add
aas
dec
loopne
bound
popa
inc
sbb
xor
xchg
mov
sub
dec
pop
cmp
cmpsl
das
pop
mov
std
inc
clc
loopne
sub
faddl
lcall
gs
fisubs
lock
mov
clc
into
enter
decl
inc
push
adc
jle
mov
loop
push
mov
std
insb
fistl
nop
mov
sti
jbe
pop
and
jmp
pop
divl
addr16
jg
xchg
decb
dec
insl
jg
mov
adc
incb
cmp
test
sti
xchg
pop
negl
lods
lods
jbe
add
rorb
push
cmc
adc
hlt
push
outsb
sbb
inc
lods
jno
sbb
push
notl
mov
mov
mov
push
adc
cwtl
cmp
mov
iret
rcrb
mov
xchg
cmp
cmp
bound
xchg
xor
imul
mov
push
repnz
cmp
cs
jmp
sbb
lods
jo
aaa
iret
sbbl
xchg
lret
mov
inc
fldt
fcmovb
iret
cmp
imul
insl
cli
pushfw
xor
push
ljmp
cmp
and
aam
sbb
dec
pop
mov
fcmovbe
xchg
cmpsb
mov
adc
shrl
add
xor
stos
mov
and
pop
lock
ja
mov
ret
cmp
cwtl
push
in
aad
int3
testb
push
jl
in
aaa
dec
cmp
fs
and
mov
push
dec
rolb
add
xor
jno
mov
and
fiadds
adc
xchg
sub
setp
icebp
popa
test
into
sub
dec
ror
mov
cmpsl
dec
and
mov
test
clc
mov
shlb
pusha
dec
cmp
xchg
adc
stos
push
mov
sbb
inc
test
push
fldl
mov
or
insb
fnstsw
jns
int
fcoml
ret
shll
je
lret
xchg
xor
push
hlt
outsl
mov
pop
inc
mov
int3
xor
dec
popa
pop
popf
into
shll
andl
in
push
mov
add
lret
cltd
and
aad
xor
xor
adc
fiaddl
sbb
cmp
mov
push
pop
clc
xchg
jle
jmp
mov
testl
cli
inc
loopne
lock
mov
push
cmpsb
jae
xchg
push
fsubl
hlt
lods
pop
add
mov
adcb
adc
or
add
cmpsb
add
ret
sti
pop
aaa
lret
rol
pushl
test
call
das
mov
cmp
repnz
notb
icebp
hlt
mov
cmp
shll
pop
lock
subl
das
loope
psubw
ja
test
scas
xchg
int3
divl
fdivrs
mov
repnz
sti
xchg
mov
ret
icebp
outsl
lahf
ss
dec
jmp
je
cmp
cmp
mov
test
or
int3
dec
or
cld
imul
push
paddd
fidivrl
js
shlb
cmp
jecxz
inc
pop
add
mov
pusha
subb
nop
pushf
jb
mov
sbb
xchg
inc
fmuls
test
dec
mov
jge
out
push
cmp
adc
jns
js
jb
into
dec
xchg
sub
std
imul
ds
jbe
inc
out
and
sbb
out
pop
mov
ret
hlt
and
addl
insl
and
xchg
pop
cmp
push
lcall
adc
adc
imul
push
sub
jp
dec
fwait
mov
xchg
sub
aaa
cwtl
add
mov
or
xor
xor
mov
outsb
push
dec
add
repnz
pop
mov
add
mov
shl
mov
fs
xchg
mov
sbb
push
sub
pop
fwait
addr16
inc
jl
xorb
shrl
faddl
jp
aaa
pop
mov
cmp
push
or
or
add
mov
xor
test
push
roll
sarl
push
jb
inc
jecxz
dec
dec
andl
xchg
add
xchg
daa
pop
loope
jbe
jnp
ret
cmp
xchg
fisttpl
xchg
add
sbb
lcall
daa
sbb
mov
lods
and
fldl
fbstp
mov
subl
cmp
shl
in
test
adc
and
mov
stos
cmp
jl
sub
fnstenv
pop
and
adc
mull
push
addl
mov
fs
cmp
sahf
stc
gs
nop
stos
jl
and
and
outsb
mov
push
cmp
and
add
mov
adc
lahf
xchg
xor
and
scas
inc
out
popf
xchg
scas
lret
xchg
xchg
sub
int3
mov
lock
pop
scas
mov
inc
dec
shrl
mov
addr16
dec
mov
xor
movsb
sub
stc
pop
testb
pop
adc
inc
movsb
jae
icebp
insb
movsl
mov
sbb
and
test
mov
fbstp
pop
fnsave
add
call
icebp
lret
and
inc
icebp
mov
imul
repnz
add
lea
push
jmp
add
add
xchg
inc
nop
adc
dec
adc
insl
jge
loopne
mov
inc
ret
aaa
cmp
cmp
jns
fsubrs
cmp
jmp
fs
fcompl
int
xchg
pop
adc
mov
lret
push
call
stos
subb
mov
jl
push
cwtl
pusha
stc
nop
push
jmp
ret
jg
jbe
dec
mov
xchg
push
std
enter
aad
inc
ret
aad
pop
scas
and
sti
test
movsb
xor
push
or
adc
add
sub
loop
ljmp
jno
sbb
mov
adc
add
bound
jae
loopne
sarw
add
push
ss
mov
adc
sbb
xor
sub
das
cld
add
loope
inc
adc
jle
mov
xor
stos
mov
imul
mov
xchg
imul
orl
push
inc
mov
stc
push
enter
fistpl
shlb
andb
and
dec
add
jecxz
int
repnz
shll
sbbb
jb
and
xlat
push
pop
das
cmpsl
ds
das
and
sbb
frstor
repnz
in
inc
or
mov
or
int3
lahf
int3
and
test
negl
aam
orl
dec
in
enter
sbb
or
cmpsl
add
pop
add
and
insb
xchg
inc
fwait
cmpsl
inc
cmp
fnstsw
sub
leave
cmpsb
inc
shr
mov
insl
push
out
adc
shll
xchg
out
mov
inc
xchg
shlb
clc
inc
inc
sub
stos
push
cwtl
cs
hlt
fcoms
xor
sti
mov
cs
sbb
mov
imul
hlt
adc
adc
lret
cmp
scas
mov
mov
repnz
xlat
pop
outsb
mov
and
jg
pushf
cmp
js
jl
sahf
lock
pop
jnp
cmp
push
pushf
mov
or
or
ds
push
adc
dec
sbb
es
jp
pop
gs
jmp
rol
mov
pop
test
mov
xor
pop
and
inc
lret
pop
dec
jns
lcall
or
lea
sub
cmp
xchg
xchg
fwait
icebp
mov
push
decl
adc
push
movsb
repnz
xchg
int
xchg
add
ficompl
movsb
push
add
xchg
jne
arpl
and
out
rorb
cmp
insb
jne
sbb
cmp
sub
push
popf
xchg
test
lret
jge
std
das
sti
pusha
repnz
or
pop
jle
mov
dec
push
lret
jb
filds
vhaddpd
fcoms
xor
fs
lock
xchg
mov
mov
popf
std
mov
pcmpgtd
mov
cmp
and
popa
std
aas
mov
shl
xor
mov
stos
adc
addb
shlb
mov
sub
sub
mov
arpl
add
cli
lods
jno
push
adc
loop
xlat
icebp
lcall
cmpsb
inc
inc
mov
test
insl
fwait
js
inc
fdivrs
xor
cmp
fbld
cs
call
pop
in
mov
adc
popa
cmp
cmp
jl
pop
enter
sbb
loopne
mov
jle
push
fisubrl
mov
mov
inc
adc
jl
jmp
mov
add
sbb
hlt
cmp
fsubrl
pop
xchg
add
in
cld
mov
bndstx
movsb
test
and
leave
pop
pop
push
sub
push
or
push
sbb
pusha
sbb
int3
data16
pop
pop
mov
lahf
shll
repnz
shll
insl
adc
les
xchg
js
ljmp
mov
or
iret
mov
or
insb
fdivl
hlt
scas
mov
scas
cli
sub
mov
jge
popa
pop
aaa
push
lock
ror
inc
dec
scas
sbb
bound
std
or
addr16
cwtl
enter
hlt
push
sub
hlt
push
add
push
icebp
pusha
test
mov
je
xchg
add
cmp
pop
cmp
pop
dec
sti
pop
mov
roll
and
mov
fs
xchg
xor
jb
dec
sahf
and
jb
repnz
and
notl
cmp
pop
sub
in
faddl
inc
inc
push
push
jmp
or
cmp
fistpll
dec
clc
inc
push
cmp
and
aad
dec
jle
out
iret
fwait
adc
xchg
mov
imul
negb
bound
imull
bound
xlat
jae
mov
imulb
dec
jg
jo
mov
jl
jp
sub
clc
adc
rorb
mov
psrlq
adc
push
shll
lret
shll
outsb
insl
repnz
push
nop
jecxz
mov
clc
mov
adcb
icebp
jg
xor
std
push
push
adc
ret
icebp
sbb
add
jnp
and
cmp
pusha
jp
in
shll
push
loopne
dec
mov
xchg
dec
cwtl
lea
das
lret
std
jmp
xor
hlt
ret
jle
sub
clc
add
cli
mov
jge
sbb
repz
add
push
ret
xor
or
hlt
mov
or
idivb
mov
or
xor
pop
dec
pop
jecxz
ret
cmpsb
bound
imul
jecxz
cmp
push
outsb
repnz
xlat
pop
lea
roll
push
nop
or
out
mov
data16
stos
mov
xor
sub
cmp
test
dec
xchg
sub
add
mov
popf
pop
insb
jl
loope
test
movsl
jp
mov
sbb
rorl
inc
fcmove
mov
loop
ret
popa
mov
imul
int3
dec
test
mov
inc
pop
cli
inc
cmpsl
jbe,pt
xor
and
lret
push
call
xchg
cmpsl
outsl
jnp
lock
lods
jbe
cld
insb
inc
sub
fnstenv
shl
dec
push
popf
jg
pop
divl
iret
movsl
imul
jmp
int3
mov
int
aas
dec
call
sub
pop
fs
push
pop
inc
lret
ret
imul
add
cmp
insl
push
rcl
orl
stos
jae
aaa
neg
cmp
pop
popf
mov
mov
pop
inc
ret
fbld
psraw
mov
je
mov
fisubl
and
gs
gs
lods
cs
push
jo
in
dec
xchg
push
mov
pop
jnp
stc
cmpl
cmpsb
jbe,pt
mov
pop
mov
scas
push
mov
call
mov
lret
mov
xchg
adc
sti
add
imul
pop
mov
inc
les
jp
fidivrl
je
js
stos
repz
stos
fnstenv
sub
and
xchg
cmp
mov
dec
xchg
mov
adc
in
and
and
xchg
popf
cwtl
in
cwtl
mov
xor
cmp
ret
lods
test
fimuls
nop
xchg
cmp
xlat
popa
push
fadds
sub
xlat
sbb
or
js
jp
push
sbb
mov
sub
out
cmp
lea
adcl
or
imul
and
mov
ja
cmp
rclb
xchg
inc
mov
ret
fsubrs
in
push
test
jp
fs
or
lahf
mov
fisubl
mov
xchg
add
xor
and
cmp
clc
xlat
mov
push
jge
repz
test
inc
xchg
mov
fstl
mov
adc
mov
hlt
jl
sbb
xchg
sub
outsl
add
movsb
lea
mov
idivb
fxch
push
out
mov
sbb
inc
ret
jp
sub
mov
sbb
or
mov
inc
test
jmp
jb
xor
frstor
xor
mov
sti
repz
pop
xchg
mov
sbb
add
sub
push
int
sub
outsl
pop
daa
fstp
pop
sarl
test
rcrb
rclb
mov
mov
fwait
leave
push
inc
in
push
jmp
aad
testb
pop
stos
jmp
mov
out
sarb
xchg
pop
push
stos
mov
inc
cmp
std
xchg
mov
fdivrl
adc
int
negb
ljmp
push
mov
pop
repnz
mov
stos
adc
push
jb
leave
cmpsl
sti
cmp
scas
leave
nop
mov
jno
mov
mov
jp
imulb
sarl
mov
mov
jnp
ret
movsb
lods
fldl
outsb
inc
cld
jae
and
cld
xor
xchg
lods
pop
call
cmc
mov
movsb
repnz
xchg
daa
hlt
enter
xchg
scas
mov
jmp
loop,pt
and
pop
sub
ret
xchg
mov
pop
cmp
inc
dec
pop
mov
jno
jne
and
cmp
outsl
stc
aas
pop
mov
jmp
push
adc
adc
pushf
jno
jmp
test
inc
lcall
pop
icebp
push
or
in
xor
jp
xor
xchg
jle
icebp
lar
fdivl
jmp
lods
adc
xchg
lods
xchg
iret
inc
jl
repz
add
aam
les
lea
lret
xlat
pop
enter
jno
inc
ret
ss
outsl
mov
mov
push
jnp
cltd
mov
mov
lea
fcomps
mov
sbb
or
jge
pop
arpl
cltd
cmp
push
arpl
inc
or
or
jns
pop
lcall
xor
and
std
fisubrl
addr16
cmp
aas
xchg
jge
out
clc
test
lods
adc
add
clc
mov
inc
popf
pop
mov
lock
das
or
lret
and
add
ljmp
test
dec
loopne
mov
sbb
sub
add
mov
clc
sbb
cli
add
sub
xchg
push
negb
aad
sub
jg
fdivl
xchg
out
lock
scas
pop
mov
pop
and
pop
outsl
xor
jo
gs
and
mov
out
xchg
ljmp
lods
jne
shrb
je
push
ret
addr16
stc
mov
aaa
push
adc
jle
xor
mov
subb
pop
aaa
test
dec
dec
jecxz
pop
dec
pop
xlat
fsub
dec
orl
add
out
outsl
add
sub
lds
int3
sbb
mov
jg
roll
outsl
loope
data16
mov
dec
shlb
out
orl
push
stos
xchg
mov
jg
sub
xchg
lock
dec
imul
add
pop
jbe
pop
push
sub
popa
cmp
jmp
adcl
outsb
aad
xchg
mov
cmc
pop
xchg
cwtl
adc
mov
jle
dec
sub
dec
mov
cmp
cwtl
xor
mov
jg
repz
outsb
adc
aad
mov
fbstp
movsl
mov
mov
jae
pop
ds
pop
push
clc
mov
cmc
repz
gs
adc
fimull
daa
pushf
mov
js
cmp
add
int3
and
popf
clc
aad
scas
shl
add
pusha
adc
xchg
mov
fs
cmp
idivl
mov
pop
adc
mov
xchg
push
cmc
les
xchg
ret
clc
repnz
inc
fs
cwtl
push
pop
mov
es
int3
push
bound
jecxz
cmp
mov
js
and
cwtl
xchg
cs
push
sub
xor
mov
lahf
fwait
add
cld
out
pop
mov
xor
cmp
cld
arpl
adc
pushf
mov
lret
int3
dec
mull
jnp
mov
int
aaa
mov
in
mov
test
add
jns
into
sub
std
fsub
sarl
jecxz
xchg
lds
dec
push
cmpsl
cs
inc
sbb
jbe
out
add
mov
aas
lea
stos
orl
clc
inc
push
ds
and
idiv
xchg
cmc
or
lret
mov
data16
xor
xor
gs
shlb
pop
sub
enter
lods
jmp
cli
scas
popf
ss
pushf
jno
cmc
inc
push
shlb
mov
mov
lret
xchg
adc
enter
ret
loopne
fdivrs
adc
fidivrs
push
lods
popf
dec
stc
test
aaa
and
cli
popa
fwait
mov
pop
js
popl
std
lock
xlat
fdivrl
xchg
or
xlat
cmpsl
pop
xor
mov
loop
popl
mov
mov
rcr
cli
and
fndisi(8087
scas
dec
pusha
mov
lods
mov
cmpsl
fcmove
es
sbb
xchg
or
mov
inc
jp
and
mov
push
xchg
inc
push
pop
xchg
es
cmp
imul
lea
mov
adc
adc
out
mov
xchg
or
sub
push
jmp
lods
into
push
cmc
pusha
out
lret
push
dec
xchg
sub
mov
int
sub
xchg
pushw
xchg
sbb
push
xchg
scas
push
sbb
or
add
mov
or
insl
jge
xor
pop
mov
pop
loopne
pusha
movsb
rcr
int3
sbbb
pop
outsb
xor
loopne
cli
cmp
loope
jmp
or
mov
xor
pop
and
into
cld
movsl
mov
hlt
test
clc
lds
mov
xchg
andb
mov
mov
out
cmp
cmp
mov
or
je
push
jmp
inc
dec
sbb
imul
xor
mov
adc
or
into
rcrb
addr16
daa
aas
add
aad
cwtl
pop
orb
mov
imul
lret
es
sbb
in
mov
push
inc
les
push
dec
pop
inc
xchg
push
out
cmp
mov
pop
call
add
mov
insl
loopne
lahf
xchg
jno
xchg
repnz
and
cmp
loop
pop
push
inc
fbld
sti
shr
xchg
popf
jp
inc
adc
push
pop
lock
or
pop
popf
sub
pop
push
sarl
sti
mov
fcmovnb
sbb
stos
cwtl
add
call
test
mov
negl
mov
cmp
pop
outsl
sarl
mov
sahf
jecxz
sbb
cmpsl
xchg
lret
add
jno
movsb
cltd
int3
pop
inc
clc
or
ljmp
jno
faddp
addr16
mov
popa
clc
fwait
aam
fidivrl
and
js
adc
jbe
sbbb
sbb
push
jp
mov
insl
leave
imul
fs
and
cmp
inc
add
xchg
dec
adc
mov
pop
arpl
nop
je
cmpsl
cltd
sub
jmp
fsubrs
mov
test
jae
je
clc
push
xor
adc
and
and
mov
sub
add
loopne
mov
xchg
mov
mov
pop
je
shlb
mov
pop
sbb
call
mov
cmp
loop
out
mov
sbb
mov
xor
into
sahf
and
and
adc
xchg
cs
jg
dec
insb
repz
add
add
mov
pop
je
sub
shlb
cli
inc
xlat
sub
pop
xor
clc
or
sbb
fidivs
aaa
gs
frstpm(287
push
int3
inc
push
gs
sahf
cmc
jl
sbb
or
pop
ficompl
loopne
jnp
mov
xor
dec
pop
decl
and
lods
pop
add
cmp
enter
push
adc
mov
pop
test
push
pop
outsb
jo
jns
repnz
cmpsl
pop
or
nop
idivb
add
cmp
cmp
stc
nop
mov
mov
fsubrs
cmpsl
inc
cmp
pop
cmp
pop
mov
push
or
shll
cmp
adc
fdiv
dec
aas
pop
pop
push
rol
fisubs
adc
dec
shrb
sbb
ds
out
xchg
je
lds
mov
daa
leave
das
addr16
dec
jae
dec
and
lock
enter
xchg
sub
xorb
mov
cli
es
add
pop
loope
int3
lret
fbstp
imul
and
and
data16
lret
jae
daa
mov
xchg
cmp
roll
cmc
mov
jb
sub
rolb
dec
popa
add
pop
adc
rorb
hlt
iret
int3
in
mov
sti
adc
vshufps
movsl
pop
cmp
xor
adc
aad
js
les
xchg
mov
sub
jmp
cmp
lret
cs
aad
push
dec
and
or
add
pop
scas
or
mov
add
xor
xchg
lds
sub
dec
ljmp
outsb
icebp
mov
cmc
mov
xor
dec
insb
rclb
stos
add
dec
cmc
jno
xor
or
jl
jmp
push
insl
jo
hlt
cmpsb
dec
mov
shrb
inc
sti
mov
lock
mov
xor
insb
aaa
int
sar
sbb
movsb
lcall
mov
sbb
dec
sbb
nop
hlt
mov
fwait
xor
adc
sahf
push
stc
and
jbe
imulb
insb
inc
sahf
push
xor
fidivs
adc
ds
mov
in
in
pop
das
sub
mov
icebp
cmpsb
adcb
adc
and
shrb
xchg
shll
in
xor
xor
inc
insl
mov
mov
pop
jecxz
cmp
jle
xor
dec
mov
push
pushf
out
add
xchg
std
daa
movsb
jnp
sbb
jns
and
dec
sub
sub
push
ss
sti
je
sub
rclb
pusha
fcomps
cvtsi2ssl
add
xchg
sub
pop
daa
jo
xlat
jb
idivl
push
or
jno
adc
and
jl
add
repz
jmp
push
stc
add
mov
aaa
cwtl
das
fimull
dec
enterw
clc
mov
pop
int
inc
flds
int3
cli
mov
xrstor
nop
and
int
pop
mov
fisubrl
mov
outsb
int3
dec
dec
fisubs
mov
pop
xchg
mov
dec
ret
push
mov
xor
test
xlat
fnstsw
or
and
push
testb
out
scas
fld
push
or
les
out
test
mov
mov
fimull
xlat
insl
aaa
jp
mov
pop
into
sub
or
xchg
dec
lods
push
test
fdiv
inc
mov
pop
movb
rcrb
xor
xor
or
lods
incl
xor
push
daa
loope
std
cld
xchg
inc
mov
in
push
lea
cmpsl
sub
dec
pop
cltd
dec
inc
cmp
jbe
dec
loop
adc
sti
dec
jge
add
xchg
pop
outsb
mov
and
dec
lods
xor
loopne
imul
clc
popf
xchg
sahf
mov
jp
pop
movsb
movsb
push
call
inc
outsl
push
ret
sbb
fs
push
es
dec
mov
addr16
fwait
xlat
outsb
adc
mov
or
push
mov
pop
cli
iret
jnp
cli
int
pushf
push
xor
sub
adc
inc
out
xor
lods
xor
push
inc
bound
fimull
insl
ror
cmpsb
adc
mov
mov
sub
in
pusha
dec
rcrl
imul
pop
sub
cmp
outsb
push
sub
or
sub
mov
push
decl
dec
sub
xor
addr16
mov
sti
mov
xor
andl
fucomip
fwait
xor
out
sahf
in
mov
xchg
sbb
ss
xor
ljmp
push
cltd
jnp
mov
jle
jmp
je
mov
xchg
jae
gs
lods
dec
pop
xor
mov
das
out
dec
cmp
mov
loope
cmp
sarb
xchg
je
fsubp
push
test
test
pushf
jns
mov
inc
imul
inc
or
loop
cli
movsl
mov
arpl
mov
outsb
das
inc
pushf
sub
and
mov
pusha
add
test
mov
bound
sbb
push
xor
inc
push
pop
cmc
inc
inc
arpl
sub
pop
cmp
or
jo
les
push
mov
fldenv
shl
and
retw
jmp
movsb
outsl
mov
cmp
jnp
inc
pop
ret
xor
xor
pop
sbb
gs
mov
outsl
cmc
stos
cwtl
push
cltd
jbe
mulb
lret
xchg
insl
dec
or
pop
fstpt
ffreep
loopne
push
aam
jge
xchg
sub
pop
mov
pop
mov
and
icebp
fisubl
mov
push
jl
rcrl
dec
dec
fs
jecxz
push
lods
cmp
pusha
leave
loopne
cmp
adc
out
xchg
mov
cmp
fisubl
jnp
jmp
cltd
mov
add
fistl
inc
aam
jge
into
push
fwait
popa
lret
mov
add
or
mov
lret
xchg
xor
sbb
sbb
pop
sbb
adc
imul
cmp
cmpb
mov
int3
lahf
cmpsl
pop
xor
int3
inc
adc
pusha
xchg
jb
fwait
push
jo
outsl
adc
mov
lock
cld
xchg
lods
cmc
xchg
mov
xchg
inc
inc
mov
cli
in
adc
or
popa
jnp
icebp
and
and
inc
sahf
dec
cld
jl
test
ja
pop
mov
scas
sbb
jge
push
sub
or
dec
cmpsl
sbb
xor
cmp
pop
insl
ja
and
fwait
or
push
in
mov
les
shrl
ss
movsl
data16
pop
cli
pushf
aam
mov
fstpt
cli
mov
je
in
mov
and
bound
filds
roll
mov
mov
cmp
dec
push
cmp
sub
mov
cli
and
mov
jle
and
pop
xor
aad
add
popf
sbb
and
inc
jo
inc
lods
movsb
mov
sub
jno
dec
fdivrl
mov
int3
lret
mov
inc
xor
test
dec
adc
dec
fs
add
daa
fdivr
or
cltd
in
mov
fistl
push
fcmovnbe
rcll
xchg
scas
faddp
cwtl
mov
sbb
sub
jae
andb
push
add
shr
subps
popa
out
iret
leave
daa
mov
mov
mov
fistl
add
or
xchg
xchg
jecxz
lahf
cmpsl
mov
sub
out
pop
xchg
jbe
cli
mov
clc
or
outsb
data16
mov
xchg
icebp
xchg
or
adc
pop
push
sbb
adc
sub
sbb
das
scas
andb
jbe
movsl
xchg
ja
mov
icebp
or
dec
icebp
jnp
ficomps
push
mov
xor
add
scas
out
pop
dec
pop
cmp
lahf
adc
shll
dec
cmp
sbb
jmp
jl
test
nop
push
pushf
jns
xchg
les
cmp
mov
test
je
in
fs
movsl
sbb
insb
cs
cmp
cwtl
mov
push
mov
inc
jge
jns
imul
fwait
sti
xchg
lods
aas
rcrb
xor
jbe
and
xchg
and
inc
and
or
clc
adc
mov
mov
imul
jnp
nop
daa
push
mov
scas
jmp
xor
sub
jmp
loopne
loope
pop
popa
or
test
test
xor
mov
jge
pop
xchg
lock
fistpll
mov
ret
cmpsb
sub
jp
rcll
ja
xor
fwait
jmp
je
aad
dec
fdivl
in
cmp
pushf
sbb
mov
into
fmul
leave
xor
es
into
push
pop
ds
loope
cmp
push
mov
test
scas
ret
sub
push
mov
stc
loopne
adc
pop
scas
inc
mov
loopne
dec
daa
ljmp
jae
popf
jne
int
lret
mov
cmc
push
or
loope
ret
in
cmp
rcl
sbb
and
hlt
pop
xorl
cli
clc
jle
lret
sbb
jl
add
in
out
push
dec
lea
xchg
cs
imul
push
mov
mov
shl
ja
mov
cmovae
stos
inc
leave
pop
mov
ja
cwtl
insb
and
xchg
jg
lods
fistpl
or
mov
repz
rclb
push
adc
cltd
mov
mov
sbb
add
sub
sub
lret
hlt
shrl
sti
test
in
fstl
mov
dec
enter
rorb
lcall
cmp
adc
sub
cli
jae
andb
mov
data16
jmp
ret
lcall
adc
clc
add
loope
stos
pop
and
pop
ret
hlt
jle
cmc
das
mov
jl
cmpb
lock
mov
pop
or
mov
test
outsl
lret
out
cmc
xor
cmp
nop
lahf
push
cmp
cmp
pop
cmp
lret
jg
sub
push
push
orl
pusha
mov
imul
loope
dec
mov
stc
dec
ret
pop
repz
out
pushf
mull
dec
and
ja
jbe
ja
pushf
jge
or
iret
add
dec
dec
pand
adc
sub
or
mov
call
inc
xchg
repnz
xchg
push
add
or
daa
mov
dec
cli
pop
cmp
int
dec
sbb
out
inc
and
data16
xchg
rol
mov
pusha
jb
xchg
lods
cli
mov
mov
sub
push
mov
clc
rcr
outsl
add
xchg
push
mov
shll
dec
adc
jle
jnp
mov
cltd
test
pop
mov
insl
xor
hlt
cltd
enter
or
loop
adc
iret
popw
testb
daa
inc
jmp
mov
xchg
stc
int3
nop
pop
adcb
jb
adc
popa
jmp
fsubl
in
mov
sahf
adc
out
movsb
sbb
subl
out
sbb
mov
scas
sub
jecxz
enter
adcl
dec
pop
data16
in
lds
adc
aam
dec
pop
or
mov
push
xchg
mov
jg
mov
clc
adc
adc
cmc
inc
mov
out
mov
jmp
popf
out
jg
loop
dec
inc
dec
or
fcoms
cmp
jge
ds
fisubs
out
pop
xchg
jne
int3
repz
fcmovbe
out
mov
push
mov
stc
mov
dec
out
repz
sarb
mov
jno
jae
dec
pop
push
push
dec
pop
cmp
mov
and
dec
sbb
je
push
add
into
mov
pop
mov
decb
mov
push
pop
cmpsb
or
and
sti
daa
cmp
jns
push
popf
adc
cmpsb
sbb
mov
cmp
outsl
add
out
mov
pop
hlt
mov
imul
shl
jg
in
push
xchg
push
mov
gs
mov
outsb
aad
rorl
mov
popa
mov
out
fistl
xlat
jae
adcb
sbb
adc
mov
lret
xchg
andb
cwtl
insl
ds
jnp
adc
xor
xlat
ret
jecxz
aas
mull
insl
sbb
cmp
outsb
scas
enter
add
cmp
inc
push
sbb
mov
test
pop
cmp
das
push
aaa
fimull
sub
out
pop
jns
mov
ret
dec
push
and
outsb
fisttps
es
jb
push
adc
inc
jl
sbb
imul
mov
cld
cmp
testl
imul
ret
fisttpll
push
stos
jne
push
add
fadd
xor
add
bound
dec
pop
imul
inc
in
lds
js
nop
jnp
push
push
in
nop
xchg
dec
mov
ljmp
cltd
mov
pop
push
ljmp
mov
or
dec
pop
inc
push
sub
cmp
dec
inc
mov
popw
addr16
popf
movsb
subb
mov
jae
stc
lret
dec
movsb
cmp
pop
aas
ror
aaa
test
sub
pop
sub
add
cmc
in
dec
mov
lahf
cmc
pop
inc
xchg
mov
sahf
add
xor
cmp
outsl
outsl
jnp
dec
insb
rcr
xor
mov
ret
mov
sbb
adc
test
and
mov
cmp
shll
rcr
xchg
push
inc
jb
clc
mov
sbb
jbe
lahf
clc
inc
jbe
jae
sbbl
gs
mov
filds
mov
mov
fsub
adc
add
mov
sbb
into
mov
int
rcl
xchg
xor
jnp
fdivs
in
popf
jmp
sbbb
pop
jle
fnstsw
daa
fimull
and
mov
movsb
pushl
sbb
mov
shlb
jmp
or
mov
into
jmp
cmp
and
imul
inc
dec
lcall
pop
into
jbe
jnp
mov
jbe
push
cmpsl
lods
jno
arpl
inc
adc
pop
push
mov
scas
mov
push
mov
push
scas
mov
and
inc
outsl
cmpl
decb
ljmp
pop
push
je
mov
xchg
cmpsl
in
dec
adc
insl
lret
mov
shlb
jle
out
add
xchg
dec
repz
loope
sub
into
mov
popa
cmp
xchg
mov
fbstp
ret
nop
dec
cmpsb
dec
mov
out
cmp
jmp
test
inc
sahf
es
mov
popl
dec
movsl
fistpll
fldl
adc
int
lcall
push
test
aas
xor
in
xchg
cmp
xlat
popf
fidivs
rorb
lea
out
bound
out
jge
popf
insb
sub
aad
popa
and
clc
jp
stc
sbb
imul
icebp
inc
ja
loopne
aam
or
cmp
inc
or
mov
sbb
jb
inc
sub
enter
cwtl
push
jae
jae
inc
sub
les
lret
std
mov
ljmp
inc
fistl
iret
popa
call
das
lahf
ljmp
gs
pushf
cmc
je
mov
aam
sub
xchg
adc
cld
cmp
andb
sub
mov
cmp
shrl
xor
leave
ds
stos
popa
xor
mov
call
and
out
fcmovne
aas
std
cld
repnz
sbb
push
filds
shlb
dec
lea
mov
into
int3
arpl
fldenv
xchg
pop
stos
cmpsl
adcb
pop
arpl
int3
ljmp
push
push
jg
and
and
sbb
xor
inc
movsl
rcrl
mov
cmpl
inc
out
mov
pusha
popa
ja
mov
push
jne
cmp
pop
push
jo
cmpsb
dec
sarl
push
sub
lods
push
js
fcmovne
xor
inc
imul
repnz
sub
jp
add
ds
push
test
xlat
sub
arpl
dec
scas
mov
xlat
stos
jmp
cmp
push
out
pop
jge
mov
sub
rclb
mov
add
ficomps
fisttps
adc
lods
nop
idivb
subb
js
mov
stos
out
adc
loope
sbb
push
xor
push
js
mov
dec
adc
mov
push
andl
es
dec
jae
out
sub
pop
cmp
pop
jg
or
add
je
jb
sub
xchg
xchg
mov
cmpsl
ja
pop
dec
mov
mov
xchg
out
xlat
push
pushf
outsl
mov
cld
imul
hlt
sub
out
mov
add
lret
and
jae
or
mov
mov
call
push
jbe
or
xor
imul
popf
mov
inc
aam
in
imul
mov
jne
mov
sbb
inc
and
cli
fisubrl
mov
loop
shld
leave
sub
stc
popf
push
add
xchg
dec
mov
jmp
and
data16
mov
add
and
les
cmc
inc
rorl
or
roll
jbe
mull
fstps
mov
pop
adc
dec
mov
lds
xor
and
lea
pop
bound
leave
test
iret
mov
and
mov
inc
in
adc
sub
xchg
sbb
fprem1
sbb
xchg
hlt
imul
inc
adc
in
imul
leave
out
testb
push
popf
idivl
push
mov
and
rcl
lods
adc
or
and
push
out
int
ja
call
mov
test
xor
jo
vpslld
xor
test
mov
mov
repz
xchg
adc
dec
xlat
mov
pushl
xchg
inc
and
rorl
leave
fnstcw
insl
inc
cs
dec
das
push
push
test
and
sub
xor
mov
out
nop
or
inc
fmull
lcall
sbb
inc
cltd
mov
inc
push
das
sbb
cmp
sub
mov
cs
pop
mov
dec
mov
loope
push
mov
test
mov
pop
out
dec
call
mov
idiv
pop
scas
mov
lret
and
mov
jl
call
push
add
sub
not
fdivr
cmp
das
and
and
loope
cltd
adc
or
sbb
js
popf
bound
mov
or
xor
push
out
cmpsl
fidivl
js
jb
movsb
fiaddl
add
mov
loope
loope
mov
repnz
jo
add
fisttpll
bound
dec
pusha
or
cmp
pop
mov
sysret
sahf
inc
jle
ret
je
stos
lret
mov
fld1
add
sub
popf
pop
aas
daa
mov
sub
iret
inc
fwait
jne
mov
mov
pop
xchg
or
mov
inc
mov
adc
arpl
repz
or
divb
pop
cmp
les
not
pop
scas
aam
push
xchg
rcr
sarl
nop
lods
mov
mov
adc
add
sti
and
inc
cwtl
xchg
adc
sbb
test
addl
testb
cmp
mov
inc
in
push
fmull
popa
mov
repnz
mov
cmpsb
inc
cmp
sti
inc
or
fcompl
clc
xchg
fs
xchg
sub
andl
out
test
and
lcall
imul
je
mov
jge
shrl
in
pop
xchg
cmp
insl
lods
roll
mov
sahf
adc
out
lcall
sub
xor
stos
inc
or
pop
leave
add
and
sbb
mov
inc
sahf
call
inc
lea
enter
lock
xchg
pusha
das
pop
fisttpll
lds
mov
loop
and
add
ja
arpl
iret
jne
outsb
jae
int3
adc
pop
scas
or
iret
popf
xchg
rorl
xchg
and
sarb
push
test
test
add
mov
inc
fs
xchg
push
and
adc
stc
pop
jmp
cltd
dec
out
fldt
xor
mov
andb
jl
fildl
cli
pop
jl
lahf
test
mov
xor
xor
push
mov
mov
push
cmpsb
mov
adc
xor
push
pop
pusha
aaa
fstpt
sbb
fsubrs
cmp
xchg
shrb
or
cmp
inc
lock
dec
js
jge
js
psraw
mov
movsl
inc
push
push
inc
jo
shl
inc
scas
pop
bound
cmp
cmp
jns
cwtl
insb
fmulp
into
pushf
popa
sarb
adc
enter
or
adc
mov
cwtl
lock
pop
call
popf
sbb
hlt
xchg
pop
xor
rorl
fcmovb
mov
jb
in
inc
pop
mov
pop
sarl
fisttpll
enter
cmp
sub
jae
jnp
outsl
in
clc
inc
dec
inc
lret
and
ret
popf
bound
stos
mov
int
add
movsb
cli
dec
iret
push
lahf
mov
sbb
out
aad
int3
jno
mov
cmp
push
loope
pusha
and
jge
jle
sahf
dec
clc
xor
adc
push
pop
push
xor
add
mov
mov
iret
pop
cmp
mov
pop
xor
sbb
or
lcall
test
push
movsl
or
and
sub
nop
in
test
pop
mov
mov
call
pop
xchg
and
enter
ja
je
sbb
je
lock
mov
adc
push
sbb
jne
mov
out
cld
lcall
popf
sub
mov
fdivs
sub
xor
jns
fimull
out
or
mov
jmp
scas
jge
cmp
inc
stos
sarl
out
cmc
push
jno
repz
mov
pop
loop
loop
icebp
add
sbb
sbb
mov
mov
mov
and
pop
and
add
es
pop
les
popa
lods
fsubrl
jnp
int3
inc
fucomi
jnp
sbb
cmp
cmpsb
push
int3
stc
nop
cld
mov
popf
or
xor
popf
sub
pop
test
or
cmp
push
or
sub
xor
pop
adcb
pop
popa
lods
dec
fcoms
cmp
mov
outsl
scas
pop
xchg
jo
mov
sub
dec
dec
mov
notl
jle
sahf
aam
iret
and
xchg
out
lods
or
fmuls
push
jne
cmpsl
ds
test
inc
or
mov
cli
add
ret
adc
loopne
jecxz
mov
inc
fildll
lret
shll
jae
xlat
nopl
sti
push
mov
push
xchg
mov
dec
pop
popa
cmc
push
xor
sbb
fdivrl
mov
mov
fnstsw
add
inc
push
push
mov
cmpsl
stc
pop
cmpsl
mov
dec
ss
push
inc
aam
scas
pusha
mov
mov
ret
sub
xchg
iret
mov
movsb
dec
inc
fisttpl
ret
aad
dec
inc
or
aaa
out
push
adc
lock
mov
adc
adc
jne
fwait
test
pop
add
xor
mov
pop
cmp
data16
fs
jns
test
rcr
rclb
push
pop
sub
cmc
mov
negb
jo
ds
lds
fsubr
xor
arpl
sahf
jns
inc
fwait
jnp
sahf
call
icebp
js
in
sub
aaa
mov
stos
lock
or
scas
sub
push
jb
push
mov
sahf
sub
lods
xor
scas
xchg
adc
movsb
movsl
ret
stc
xchg
jmp
and
push
pop
add
inc
lods
and
xor
jnp
mov
pushf
jge
add
aad
movsb
enter
enter
sub
fs
xchg
vmovntps
shlb
dec
fsubrs
xchg
movsl
push
lcall
jae
pop
and
sub
inc
outsb
out
cmp
mov
das
pushf
pop
cmp
cmc
es
xor
cmpsb
jmp
xchg
loope,pn
xorb
push
sub
inc
cmp
arpl
in
jl
sub
lcall
or
out
scas
dec
jne
mov
sarb
and
xchg
adc
or
insb
and
dec
push
aas
cltd
xor
shrl
sub
outsb
ljmp
call
mov
aad
mov
add
push
repz
popa
in
mov
mov
pop
imul
sbb
mov
inc
adc
fildll
mov
adc
test
pop
xchg
iret
xchg
mov
jne
int
js
adc
fwait
inc
jnp
inc
inc
test
icebp
inc
xchg
in
and
dec
daa
hlt
int3
cmpsl
jmp
cmp
fwait
xor
sub
xor
mov
jb
sub
outsl
cmp
aaa
xchg
xchg
stos
jge
ja
dec
in
in
sbb
xchg
lea
mov
mov
adc
iret
fldt
sub
imul
movsb
push
cs
test
out
jnp
pop
jbe
pushf
push
pop
dec
repnz
insb
popf
xor
gs
out
sarb
imul
icebp
call
xlat
outsl
hlt
mov
pusha
cmp
test
sbb
fnstcw
ljmp
shl
jne
outsb
adcb
repnz
or
or
cltd
jmp
and
lock
sbb
adc
cs
leave
sub
insl
mov
mov
mov
push
pop
rclb
rol
xchg
xor
cpuid
pushf
out
fiaddl
stos
sub
aas
aad
pop
sbb
nop
leave
pop
insb
cmc
pop
add
jmp
mov
cs
outsl
aas
negb
loop
mov
add
or
stos
lret
sub
xchg
push
cwtl
mov
shll
pushf
pop
xchg
push
hlt
ret
jns
ds
leave
and
ljmp
fcmove
lds
cwtl
pop
aaa
xlat
ficoml
cltd
out
mov
jmp
cltd
pushf
out
and
cmp
xchg
sbb
imul
fwait
mov
subb
mov
xchg
ss
lcall
push
fwait
inc
sbb
jns
add
xchg
sub
xor
inc
adc
rcr
xor
stc
mov
cmp
test
in
mov
mov
jecxz
sbb
jno
pop
sub
jp
aaa
dec
cmp
shl
push
pop
and
cs
frstor
cmc
mov
cmp
jb
ds
aas
jecxz
lahf
mov
push
inc
cwtl
mov
repnz
xchg
push
sub
mov
aas
test
inc
sbb
imul
xor
push
daa
scas
push
mov
cmp
mov
lahf
shrb
js
lret
dec
dec
mov
inc
mov
les
mov
or
sbbb
add
lea
in
pop
sbb
cli
shll
dec
fstpl
icebp
sbbb
xchg
xor
and
mov
fimuls
adc
sbb
inc
shlb
idiv
aam
cmpsb
mov
mov
mov
out
faddl
cmp
inc
xchg
popa
push
push
cmp
movsb
daa
into
xor
push
mov
push
movsb
cmp
push
cmp
ret
movsb
push
out
insb
jle
inc
sub
cld
outsb
mov
and
dec
daa
mov
js
inc
js
adc
arpl
cmc
pusha
push
inc
and
mov
lret
xchg
sub
mov
mov
xor
push
sub
daa
pop
xor
imul
sbb
js
xchg
into
std
add
stos
xchg
out
sbb
mov
pushf
xor
push
int
mov
out
insl
push
pop
shlb
shl
fmull
and
cmpsl
scas
fsin
dec
test
cs
and
stos
sub
pop
jg
and
fnstcw
pop
sahf
pop
roll
mov
repz
jle
push
sub
cli
add
dec
pop
add
xorb
pop
pushf
lret
and
pop
add
icebp
push
aam
faddl
sub
inc
inc
fistps
xor
scas
popf
and
inc
repz
sti
xor
ss
pushf
add
jo
jnp
sub
fmuls
push
sub
xor
mov
outsb
add
out
mov
lcall
aad
mov
mov
inc
clc
or
lds
mov
sub
mov
jp
add
and
daa
out
inc
mov
jl
xor
mov
outsb
adc
jmp
fisttps
ret
shrl
push
mov
inc
adc
ja
mov
inc
and
je
jo
lret
and
push
fnstsw
in
mov
dec
add
js
cltd
xor
xchg
mov
into
inc
pop
or
mov
xchg
pop
adcl
mov
jns
adc
cmp
adc
jne
arpl
iret
bound
push
out
mov
into
xchg
scas
mov
loopne
mov
idivl
call
jbe
push
mov
bound
mov
push
outsb
out
mov
push
mov
fistps
scas
ret
nop
daa
mov
ljmp
int
mov
jo
daa
mov
call
xorl
lock
pop
adc
mov
addr16
mov
leave
sub
stos
fldl
and
adc
ljmp
fadds
dec
repz
inc
push
sub
mov
cmp
stc
and
and
or
pop
arpl
mov
mov
mov
cltd
aad
inc
fldcw
lret
jle
adc
push
mov
add
iret
ficoml
roll
insl
add
cltd
jecxz
add
scas
xchg
pop
pop
adc
mov
mov
in
mov
jb
ja
push
arpl
test
test
mov
hlt
addr16
pop
je
neg
cltd
xlat
pop
or
cmpsl
mov
fsubrl
pop
movsl
lds
xchg
jne
jp
cmpsl
in
movsb
pop
sahf
out
cmpb
and
popa
neg
stos
cmp
mov
mov
sub
dec
sbb
mov
xlat
mov
pushf
movsb
cmp
sbb
lahf
pop
cmp
xchg
es
fcom
insb
ret
arpl
stc
pop
rorl
sarb
push
xchg
cmpsl
out
call
daa
and
fwait
pop
sahf
dec
in
stc
movsb
inc
jmp
xor
popa
inc
ds
imul
mov
xchg
push
into
movsl
xchg
hlt
out
jle
aad
loop
add
push
ss
in
xchg
xchg
mov
shlb
imul
int3
lock
js
imul
adc
jno
fdivr
dec
mov
aas
and
jmp
inc
mov
add
insb
jmp
jecxz
inc
lea
movsb
out
push
push
jg
pop
push
mov
sub
mov
ret
idivl
jo
sbb
int
xchg
sub
mov
dec
testb
fisttpl
or
or
rol
and
out
dec
out
xchg
aas
aaa
and
mov
mov
imul
fwait
mov
fnstcw
sub
adc
clc
pushf
xor
mov
jae
int3
stc
push
xor
jp
rorb
cltd
jmp
into
insb
xchg
xchg
mov
pop
mov
cmpb
sti
in
adc
xchg
insb
xchg
std
pop
out
movsl
sbb
jnp
decl
lods
int
in
int
push
mov
jo
push
test
inc
ret
aas
testl
insb
out
imul
mov
or
dec
rclb
inc
cmp
mov
push
cltd
mov
and
push
adc
in
xchg
sbbl
jb
dec
push
aad
add
inc
cli
iret
fistl
xor
sbb
lds
xchg
fsin
mov
cli
mov
fistl
add
mov
dec
dec
cltd
std
adc
jo
idivb
sbb
lret
jle
fldcw
add
push
inc
in
cld
ja
mov
ljmp
and
sbb
xchg
test
pusha
pop
cs
fsts
jmp
fs
adc
fdivp
mov
adc
lds
bswap
fsts
push
notb
sbb
ja
jo
fidivrs
lds
push
outsl
mov
jo
sbb
mov
pop
pop
out
sti
fadd
lret
mov
in
inc
adc
movl
sar
and
mov
pop
push
js
cmp
dec
popa
pop
pushf
jg
addl
std
mov
test
pop
or
dec
sbb
ljmp
and
leave
outsl
loop
push
and
add
lret
lcall
movsl
pop
daa
jnp
pop
and
ret
mov
cltd
shrl
rcrb
test
hlt
pop
adc
ss
push
mov
lcall
jge
add
dec
movsb
mov
rorb
inc
push
push
sub
sub
add
in
sbb
aas
push
dec
iret
frstpm(287
sbb
call
sbb
dec
pop
sub
or
sub
mov
fidivl
clc
or
jne
test
push
movsl
xor
mov
mov
xchg
stc
xchg
sbb
shrl
cmp
arpl
divl
orl
adc
mov
lea
jg
in
scas
outsb
into
or
and
jecxz
int3
dec
popf
lock
pop
lock
lea
push
popa
sti
push
mov
and
jo
das
mov
sahf
adc
insl
or
mov
clc
lods
mov
sbb
dec
in
xchg
into
imul
add
mov
jns
ret
mov
adc
inc
push
aaa
mov
daa
dec
inc
push
in
hlt
mov
mov
test
mov
sbb
ret
xchg
xchg
push
inc
mov
xor
sub
dec
or
loop
mov
lock
mov
sub
bound
cmp
call
loopne
xchg
cmp
and
ret
addb
xlat
adc
dec
insl
push
jae
das
int3
int3
fistpll
fnstsw
scas
adc
jae
andb
pop
imul
lds
ds
fcmovnb
fdivp
inc
lds
cmpsl
daa
mov
dec
ret
jmp
je
stc
adc
mov
xchg
xchg
pop
fstps
pop
popa
sub
int
pop
jno
inc
mov
xchg
sub
jne
add
mov
sub
divb
rcrl
cmp
xchg
xor
repnz
mov
aaa
loop
jge
jno
mov
lods
push
pop
fdivl
sub
mov
sbb
or
jecxz
xor
dec
loopne
mov
das
call
mov
jle
stos
jns
repz
mov
mov
in
loop
cwtl
shlb
xchg
push
jae
sbb
aas
enter
push
mov
xchg
cmp
arpl
sahf
sub
add
leave
movsl
xor
and
adc
aam
mov
repz
push
or
ret
cmc
orb
dec
pop
or
dec
pusha
inc
mov
xor
loopne
jno
out
push
xchg
leave
cli
or
mov
daa
outsb
adc
test
mov
mov
daa
cld
jne
in
out
notl
and
push
add
test
addl
xchg
or
pop
daa
push
hlt
lcall
dec
icebp
pop
sub
push
sbb
xor
mov
jle
in
icebp
dec
cwtl
add
loope
outsb
mov
mov
mov
inc
ficomps
shr
mov
sub
insl
ret
sub
repz
xlat
xor
leave
xchg
mov
xor
enter
jno
es
add
dec
and
cmp
shrb
out
jno
pusha
sbb
adc
nop
andl
lock
push
rcrl
mov
xorl
test
push
stos
loopne
leave
into
pop
loopne
add
mov
pop
dec
in
mov
cmp
xchg
mov
mov
scas
inc
pushf
jp
dec
cmpsl
mov
pushf
out
cmp
xorb
ror
inc
xlat
daa
std
out
int
xchg
mov
adc
mov
daa
jle
xchg
dec
loopne
dec
fsubrl
shrb
js
jb
mov
leave
push
mov
cmc
pop
dec
pusha
cmpsl
shll
add
and
movsb
xchg
sub
sbb
and
cltd
push
and
scas
and
shrl
fs
pop
repz
adc
call
jo
sbb
fwait
adc
insb
cwtl
cmp
repz
jmp
imul
sub
imul
add
insb
jl
in
xchg
loope
leave
mov
mov
stc
je
sub
xchg
sbb
lret
in
std
pushf
push
stos
push
fisubl
jns
insb
pop
or
bound
jbe
lods
cmpsl
jne
dec
xor
cwtl
fcom
fucomi
mov
cwtl
jne
imul
imul
or
sub
cmp
cld
in
xchg
sbb
mov
in
fnstsw
add
cs
int3
aas
mov
test
mov
cli
mov
push
fadds
push
andb
outsb
insl
fcoml
divb
inc
fidivrs
stos
inc
icebp
or
push
inc
fsubp
push
dec
xor
push
pop
repnz
pop
inc
fstl
jns
push
sti
xchg
cs
inc
mov
fstp
ss
push
xor
push
push
ret
ja
sahf
sbbl
sub
lahf
xorb
mov
aam
insb
lds
cltd
test
inc
cmpsl
test
mov
and
fs
cmp
cld
pop
repnz
les
sub
dec
loope
mov
scas
call
ss
sahf
repz
sbb
add
xor
jge
or
push
dec
mov
push
mov
les
mov
ret
or
xor
jno
enter
mov
mov
mov
jo
cmp
add
push
daa
inc
sub
mov
js
pop
pop
fiadds
bound
inc
lahf
test
xchg
and
test
das
inc
push
enter
xor
scas
jmp
or
int
stc
stos
mov
cmpsb
daa
push
add
push
icebp
mov
dec
pop
sbb
pop
inc
xchg
cltd
insb
or
xchg
and
fidivrs
ret
jmp
adc
pop
sbb
mov
jae
bnd
bound
or
pop
mov
rcrl
adc
xorb
push
sbb
mov
in
test
xchg
inc
shlb
pop
fucomip
mov
sarl
rorl
mov
dec
aas
push
je
imul
cs
and
mov
icebp
mov
stos
xchg
stos
mov
jecxz
icebp
repz
mov
xor
push
popf
test
cmp
cltd
cmp
loop
pminsw
aas
jl
cmpsl
pop
icebp
adc
jns
sbb
jecxz
fimuls
xor
push
xchg
rcr
call
repnz
xor
test
out
cmp
ja
jbe
mov
aad
and
mov
mov
and
arpl
sbb
stos
xchg
mov
and
shlb
adc
les
dec
push
inc
jmp
outsl
push
push
fisttpll
jecxz
cli
mov
data16
shrl
lds
dec
jne
and
xor
std
data16
push
push
icebp
cmp
inc
mov
push
push
inc
adc
dec
mov
ds
jne
outsb
inc
mov
lea
lods
fwait
pop
sub
push
jo
les
aaa
cmpsb
mov
pushf
sbb
inc
cmp
xor
pop
popf
cld
push
mov
push
xchg
xchg
mov
ja
je
sub
adc
mov
xlat
outsb
xor
ffreep
jnp
add
mov
push
jecxz
fisubrl
add
fs
push
popl
jae
out
xchg
pop
push
ljmp
jb
xchg
sbb
and
fprem1
mov
xor
inc
in
xlat
xchg
daa
nop
fisttpll
orb
mov
jnp
cmpsb
movsl
rcr
add
mov
pop
pop
icebp
cmp
fldcw
push
mov
push
add
test
sarb
pop
call
cmc
lods
arpl
xchg
incl
push
dec
int3
shlb
jmp
cmp
in
add
adc
rcl
xor
mov
loop
mov
in
mov
dec
test
pop
sub
adc
cmp
cld
mov
ret
addl
push
ret
mov
cmpl
inc
inc
push
push
dec
and
imul
pop
scas
mov
push
sub
movsb
or
add
sbb
cmpsl
inc
xlat
mov
leave
loope
mov
idivl
push
fstps
push
adcb
pusha
js,pt
in
or
test
out
and
fwait
cli
xchg
pop
xor
and
notl
mov
loop
adc
testl
es
mov
jge
call
in
jb
pop
adc
pop
lock
sbb
ret
outsb
pop
mov
enter
test
mov
ja,pn
push
mov
jo
jmp
in
je
sbb
mov
push
cmpb
xor
lret
adc
xchg
sub
dec
out
cmp
mov
cwtl
pop
or
push
and
mov
scas
mov
dec
cwtl
push
fs
mov
add
xor
sete
inc
sub
les
dec
or
jns
pushf
out
sbb
shlb
lret
sti
sarb
mov
out
add
in
in
xchg
icebp
popf
push
test
add
mov
cli
xchg
stc
iret
outsl
jnp
scas
or
lds
jns
and
mov
cmp
in
hlt
sbb
andl
mov
cmpsl
ja
fcomps
xchg
sub
out
push
mov
imul
jp
rcrb
ljmp
xor
cmpsl
sub
xchg
mov
xchg
inc
ja
jae
fdivl
push
jno
pop
mov
pop
pop
mov
andl
jne
jg
ret
mov
jp
xchg
inc
fdivl
arpl
imul
mov
leave
test
inc
movsb
insl
xchg
cmp
xor
int3
imul
shlb
hlt
pop
shll
push
test
mov
lahf
loope
pop
out
lcall
mull
push
in
push
mov
or
fwait
iret
sub
add
mov
push
push
push
repnz
sbb
pusha
or
iret
sub
sti
movsb
test
cs
mov
mov
iret
movsl
mov
or
in
sbb
mov
pop
cmp
pusha
cmc
jl
jge
lahf
and
and
call
notl
adc
push
fistpl
adc
idivb
pop
cmpsb
cmp
stos
cmp
repnz
mov
incl
or
popf
inc
scas
xchg
add
push
in
in
sbb
xlat
ljmp
sarl
sbb
mov
jge
jbe
xchg
cmpsb
xor
std
mov
mov
lods
scas
js
inc
sub
ja
inc
arpl
es
ss
lods
inc
in
pusha
dec
dec
push
in
outsb
out
push
lcall
and
ret
xchg
movsl
add
paddsb
std
mull
movsl
inc
mov
sub
sbb
hlt
mov
xor
mov
mov
fs
sbb
dec
out
mov
adc
stos
mov
test
repnz
fnsave
xor
or
cmp
sub
aam
cmp
idivb
sub
cmpsl
mov
repz
daa
sbb
push
lds
mov
adc
inc
push
or
or
pop
add
pop
test
mov
lds
jmp
andb
xor
stc
xchg
sub
adc
aaa
orb
push
nop
jle,pn
and
dec
loope
mov
xlat
push
into
in
sub
aad
sarl
mov
jg
xor
sbb
jo
pop
mov
lock
out
xchg
push
in
or
es
in
push
xor
fstpt
adc
es
pop
test
add
jo
xor
jnp
aas
xchg
add
arpl
icebp
sub
mov
fcomps
mov
cmp
leave
adc
ljmp
push
dec
sbbb
icebp
push
xchg
mov
rcrb
ret
lods
inc
fldcw
sarb
nop
bound
cs
pop
out
inc
out
inc
lds
push
icebp
adc
jo
add
add
xor
jecxz
adcb
adc
je
pop
scas
mov
int3
arpl
xor
std
call
sar
ljmp
mov
lret
xor
and
lock
gs
cmpsl
imul
loope
fiadds
cmpsb
gs
cmc
xor
aad
pop
push
scas
into
inc
pop
repz
jne
sbb
jp
or
pop
outsb
cmp
add
roll
lea
subb
sbb
pushf
mov
push
jne
push
shrb
shrd
push
std
std
pop
out
bound
test
call
stos
inc
loop
outsl
push
aas
in
clc
insb
aam
sahf
cmp
dec
cld
adc
mov
adc
outsb
mov
jo
aad
adc
data16
xchg
add
mov
push
push
in
fbld
rorb
rcrl
pop
jmp
arpl
xor
mov
push
push
test
repz
lods
mov
pop
repnz
data16
pushf
xor
js
mov
pop
xchg
test
pop
cmp
fwait
push
dec
jp
ds
sbb
jb
mov
push
ljmp
repnz
xor
mov
pop
rclb
call
sbb
mov
inc
clc
add
sub
movsl
cwtl
popa
mov
pop
xchg
sub
dec
jp
xlat
pusha
loope
xchg
sub
jns
cmp
repnz
loope
nop
pop
andl
jo
icebp
or
xchg
test
ret
add
mov
xchg
fwait
in
dec
lock
add
inc
mov
std
or
inc
rep
pop
imul
cmp
stos
fs
mov
push
lret
jne
inc
or
push
jmp
push
sbb
push
sub
cltd
xor
aad
adc
lea
je
dec
push
add
outsl
aas
sbb
mov
orb
mov
in
loope
pusha
dec
push
sbb
not
aaa
push
hlt
movsb
lea
ja
and
in
jns
flds
xor
sbb
xchg
stos
sub
xchg
dec
jg
push
fwait
sub
int3
das
gs
add
enter
jp
loopne
loope
mov
cwtl
gs
push
jae
dec
arpl
outsb
adc
imul
lret
or
sbb
xor
sub
xchg
push
add
mov
icebp
mov
rol
ficomps
inc
pop
jle
push
icebp
int3
out
test
add
or
insb
add
cmpsb
cmp
in
mov
mov
sbb
and
or
fs
rcrb
into
or
sbb
outsb
add
mov
xchg
testb
lods
nop
aas
das
loope
sub
enter
in
mov
int3
ret
and
adc
data16
push
mov
jo
subb
adc
jno
dec
fdivrl
xchg
cmp
leave
test
push
je
add
inc
mov
pusha
cmp
xchg
int
dec
mov
pop
idivb
dec
dec
fiadds
rol
and
loope
sbb
sbb
inc
mov
in
daa
or
add
cmp
mov
inc
push
cwtl
shrl
pusha
incb
xor
mov
add
js
dec
fs
adc
mov
sub
ret
xorl
mov
bound
jmp
lods
xchg
out
popf
push
call
dec
lods
push
rcll
loop
jmp
in
adc
loope
pop
mov
cmpl
mov
fadds
fadds
shlb
cwtl
imul
out
lods
jo
sub
mov
ret
testl
in
xor
lahf
xchg
dec
aas
xor
and
push
fdivl
shr
enter
fmull
add
clc
xchg
push
adc
and
push
sbb
test
mov
inc
loop
insl
mov
mov
jle
sbb
mov
in
stos
aas
xor
add
or
inc
popf
sbb
test
out
mov
jbe
and
cs
nop
ret
cs
cmp
inc
negl
dec
out
mov
xchg
int3
in
cmp
test
cmpsb
sub
xchg
mov
sub
outsb
add
push
jae
jae
movsl
mov
push
mov
pop
in
push
pop
push
mov
jecxz
out
negb
fmul
mov
mov
loope,pn
pop
and
insb
clc
imul
dec
cmp
mov
adc
jle
inc
xor
lret
adc
sbb
jmp
fnsave
int3
pop
dec
data16
push
jmp
fmulp
insl
cmp
xchg
cli
mov
dec
push
mov
arpl
xorb
pop
mov
mov
add
fs
push
mov
fcomps
dec
stos
leave
lahf
fwait
in
gs
lods
popf
pusha
sbb
xor
pop
in
pop
out
ja
rorl
pop
and
in
inc
or
fmull
lods
mov
lds
push
pop
mov
cmovl
push
sbb
bound
cmp
mov
movsl
xchg
push
jl
pop
mov
or
out
push
sub
xor
push
xor
inc
outsb
in
inc
push
adc
add
mov
mov
or
mov
js
pfrcp
xor
jno
mov
in
xchg
std
or
fnstsw
out
push
ret
lea
xor
mov
push
std
fsubrp
jg
pop
and
dec
cmpsb
lods
cmp
decb
sub
add
fwait
out
aad
stc
xchg
jle
rcrl
fchs
adc
mov
insl
adcl
pop
cwtl
popa
xchg
jecxz
lods
in
test
push
jbe
jp
xor
loop
inc
iret
in
adc
jg
sub
mov
push
call
arpl
xchg
rcr
jo
idivb
jmp
or
cli
insl
addb
loopne
hlt
ficoml
push
jno
push
add
jmp
xchg
sub
cld
push
movsl
jns
push
inc
testb
nop
stos
inc
pop
adc
push
bound
icebp
mov
pop
outsl
jg
movhps
out
cmpsl
subb
xchg
mov
rcrb
inc
pusha
loop
ds
lret
and
lds
mov
jno
jns
mov
test
mov
jp
pop
test
pop
or
arpl
cmp
popf
pop
ljmp
xchg
pusha
test
insl
jle
push
les
pop
aas
cltd
inc
cmp
mov
pop
outsl
adc
cmp
dec
notb
pop
sbbl
push
push
popf
xchg
sub
das
int
mov
xlat
push
je
mov
and
mov
push
push
outsl
lea
scas
cmp
cmpsl
mov
ljmp
outsb
aad
pop
mov
pop
sti
mov
mov
stc
or
mov
mov
jecxz
into
cmp
mov
fsubs
add
leave
enter
xor
inc
or
xchg
mov
loopne
jge
dec
xlat
outsb
jle
addr16
push
insb
add
push
out
mov
pop
repz
xlat
jne
inc
xchg
inc
movsl
add
in
cltd
and
jae
insl
loop
xchg
mov
rorl
jnp
jmp
add
or
movsl
jle
lods
inc
sahf
push
test
xchg
pop
test
ret
push
or
mov
inc
es
mov
dec
stos
push
push
cs
adc
sub
arpl
sub
test
sub
adc
jecxz
movsb
adc
popa
sbb
ror
xor
fcmovnb
psraw
and
fwait
icebp
leave
sub
jae
arpl
cltd
popf
mov
cs
add
fsubr
push
ret
out
int3
or
or
jno
mov
sbb
pop
push
sub
mov
push
jb
push
aaa
lret
leave
jbe
fwait
test
mov
jae
and
pop
pop
adc
pop
jns
fisttpll
test
mov
ret
xchg
sub
lret
adc
cmp
push
mov
add
jbe
mov
lret
push
mov
cwtl
das
js
pop
rcll
cmp
jmp
fsub
out
loop
add
imul
adc
xchg
cmp
push
lods
adc
or
xor
fbld
inc
jmp
mov
subl
pop
push
je
push
insl
sti
fsubrs
mov
cmp
sbb
test
adc
iret
jp
dec
insl
insb
add
mov
int
pop
aad
iret
sub
lods
add
test
pusha
sti
dec
sbb
mov
inc
xchg
mov
adc
mov
shll
jbe
bound
jns
lcall
xor
in
xchg
adc
cwtl
stos
dec
xor
insb
push
fbstp
mov
dec
cmp
sahf
xor
enter
popf
jmp
mov
jmp
mov
jae
mov
stos
or
hlt
aaa
jmp
fmul
lret
leave
dec
cmpsb
lret
pop
loopne
shrl
jns
test
out
std
fbstp
inc
jg
adc
xor
push
inc
cmp
pop
stc
or
shll
test
andl
out
mov
bound
fsubrl
in
adc
push
xor
aaa
ffree
stos
inc
pushf
test
lcall
rorb
icebp
out
sub
cmp
xchg
and
fisubl
adc
cmp
xor
rolb
jb
xchg
pop
hlt
lahf
mov
jle
pop
mov
pop
cmp
pop
in
jmp
sbb
lcall
shrb
mov
inc
sub
imul
test
outsb
outsb
ret
push
adc
out
adc
mov
cmp
icebp
push
lds
out
out
shl
sahf
into
xchg
and
mov
push
sub
mov
dec
dec
mov
mov
mov
dec
jmp
iret
xchg
mov
or
mov
mov
fimull
xchg
ret
mov
push
lret
sbb
dec
aam
loope
gs
and
mov
mov
fnstenv
xchg
fstpl
fcomip
sahf
jecxz
adcl
mov
lret
dec
mov
cmpsb
mov
in
adc
xchg
cvtdq2ps
cltd
int3
rcrl
mov
loope
lcall
sub
in
push
xor
xchg
xlat
repz
negb
inc
popaw
fidivl
sub
lret
xchg
mov
fnstsw
jno
xor
movsl
fdivr
mov
out
movsb
mov
sarb
lcall
into
and
loope
cmpsl
and
into
lea
out
cmc
mov
mov
mov
xchg
test
and
ljmp
call
mov
pop
cmc
lret
flds
or
push
loop
mov
imul
popf
ret
sbb
roll
push
stos
insb
add
rcrb
jno
mov
jno
sub
pop
scas
addr16
mov
lock
int3
mov
xchg
push
mov
pop
shll
jle
cmp
mov
mov
and
ret
sbb
lods
mov
or
cmp
push
or
xor
cltd
mov
test
ficomps
mov
ss
mov
icebp
adc
jns
aaa
cs
pop
data16
jg
cmp
pop
sahf
lods
sarb
inc
enter
cmp
jecxz
jo
ss
iret
mov
int
mov
dec
pop
dec
in
je
cli
cmp
insb
jns
push
sbbl
call
mov
cmc
fsubl
xchg
std
add
pusha
add
arpl
add
add
push
filds
shlb
in
cmpsb
cmpb
cmp
sahf
mov
aam
push
or
add
add
ficoml
add
push
test
or
in
pop
out
xchg
push
rclb
inc
push
jmp
dec
inc
pusha
inc
xchg
jb
cmpl
adc
cwtl
sbb
mulb
cmp
cmp
cld
jnp
aam
ficompl
xchg
stc
jg
punpckhwd
or
pop
sub
adc
mov
dec
cmc
shlb
sbb
or
cmp
mov
xchg
dec
fcoms
adcb
lock
xor
xor
jg
adc
stos
inc
imul
idivb
shl
mov
sbb
movsb
mov
call
mov
add
sub
xor
cld
jno
divl
lret
add
pop
lcall
sbb
and
sub
test
xchg
fstl
in
mov
outsl
loop
popa
mov
dec
pop
adc
push
test
lret
icebp
xorl
aad
inc
pop
fists
fmuls
sbbb
dec
jmp
imul
mov
gs
xor
sahf
adc
scas
xchg
push
xor
jnp
push
sbb
das
pop
das
fsubrl
loopne
mov
popa
rol
iret
into
mov
jbe
rcrl
cmp
ds
pop
push
jbe
daa
mov
pop
data16
lcall
and
sub
out
ljmp
or
mov
jp
lock
rcl
addr16
mov
jnp
adc
push
lods
sbb
pop
repnz
ds
test
push
jmp
cmpsb
pop
icebp
push
out
pop
scas
test
pop
fucomp
adc
xor
pop
add
and
std
xchg
mov
cmp
gs
jecxz
out
pop
mulb
sub
mov
loopne
std
xchg
fwait
sahf
sub
push
sub
js
mov
dec
sub
or
and
push
pop
std
or
xchg
lods
roll
mov
int3
rcll
push
jno
loope
lods
mov
adcl
or
mov
testl
test
mov
mov
fistpll
mov
push
mov
lea
jae
mov
jbe
cmp
push
lret
pop
push
xchg
push
push
das
data16
sbb
movsl
mov
or
std
aam
outsl
dec
fsubs
lds
sub
xor
xor
pop
add
jo
dec
sbb
icebp
les
xchg
imul
mov
adc
jmp
repz
fadds
mov
daa
aam
icebp
sbb
adc
ja
movsl
add
xchg
sti
pop
sbbb
lahf
jge
fldl2t
sbb
push
jne
xor
arpl
xor
lea
mov
leave
pushf
add
das
jmp
xlat
repz
add
xor
cmp
xor
movsb
xchg
das
add
mov
or
xchg
jno
jno
inc
adc
nop
push
cmpsl
dec
pushf
mov
das
mov
fsubr
popf
push
mov
inc
imul
dec
fs
jg
insl
mov
fists
inc
insb
mov
sahf
popa
sbb
leave
push
mov
fimuls
bound
jae
in
inc
cltd
cld
aam
out
add
data16
inc
fldcw
and
outsb
sbb
dec
mov
dec
jle
xorb
sbb
fisubs
lcall
popa
jmp
aam
test
push
daa
data16
cmpsl
sbb
mov
sub
imul
or
inc
dec
stos
inc
cmp
push
data16
dec
popa
cmp
mulb
ret
imul
aaa
ljmp
in
in
es
push
mov
rol
cld
rclb
mov
ljmp
rcl
cmc
mov
outsl
shl
dec
out
adc
out
inc
dec
dec
data16
dec
pop
sti
jns
insl
ret
pop
es
mov
inc
fistpl
xlat
mov
adc
test
int
pop
loope
mov
sbb
lds
pop
call
sub
shlb
adc
enter
daa
sbb
fisttpll
xchg
add
scas
rorb
or
add
or
mov
cmp
neg
subb
ret
test
sbb
cs
dec
and
jl
adc
mov
mov
adc
add
sarl
dec
and
and
aaa
into
mov
popa
imul
mov
fadd
xor
enter
imul
or
sti
mov
cmp
mov
outsb
sub
cwtl
mov
ficomps
clc
pop
lahf
push
xchg
inc
xor
fstps
dec
cmpsb
xor
repz
out
fsts
sub
jge
jmp
or
or
in
mov
pop
out
jb
sbb
push
lods
ffree
mov
dec
in
icebp
cmpsl
ds
mov
jg
popa
lds
imul
push
mov
and
push
cli
pushf
or
scas
push
mov
dec
mov
imul
jnp
test
and
jne
out
cmpsl
mov
lea
cmp
cmc
mov
cmp
xchg
cmp
outsb
cmp
push
in
mov
insl
scas
repnz
into
loop
into
lahf
cmpsb
add
aad
imul
jmp
cs
push
xor
imul
sti
xor
shlb
mov
cli
xchg
cs
fcoml
data16
hlt
pusha
mov
mov
ljmp
jb
ficomps
xor
dec
rcrl
and
out
pushf
xor
test
mov
and
inc
pop
bswap
or
mov
and
fistps
mov
insl
add
scas
push
popf
mov
imul
inc
lret
sti
pop
popa
push
xchg
orb
in
xlat
out
adc
mov
sub
fucomi
test
sub
fs
fidivrl
pusha
inc
sub
popf
and
and
mov
not
jne
out
jnp
cld
xchg
rcll
aas
inc
dec
cmp
lret
insl
jo
jp
aad
xchg
jg
cmp
push
pop
test
xorl
cmp
ds
cwtl
jae
lret
sub
lret
cli
mov
loopne
dec
lods
cmp
mov
addr16
pusha
adc
ja
dec
push
sub
push
sub
icebp
pop
sub
jbe
es
decl
std
xchg
or
andb
arpl
lcall
scas
arpl
cmp
and
pop
mov
outsl
push
mov
sbb
dec
leave
repz
xor
sub
sahf
pop
fsubs
subb
arpl
push
pop
mov
jno
cmc
rclb
fildll
hlt
data16
xor
push
push
ja
xchg
adc
cmp
mov
adc
push
lret
xor
push
sub
int
inc
out
loop
push
in
inc
and
push
xor
push
repnz
sbbb
sub
mov
dec
dec
jne
ss
je
push
pushf
xor
and
fdivl
mov
mov
dec
pusha
es
test
xchg
pop
xchg
sahf
frstor
mov
add
std
xchg
mov
or
add
jp
dec
popa
cmp
jl
fisubs
pop
bound
mov
sbb
or
add
into
pop
in
push
or
jecxz
inc
aad
jmp
int3
sarl
out
sar
adc
jecxz
adc
imul
pop
fsubs
mov
xorps
inc
ljmp
jno
adc
cmp
pop
jno
fdivs
add
jb
fsubl
shl
stc
adc
inc
push
cmc
fcmovnu
out
fistpll
mov
mov
shll
loop
xchg
adc
rorb
cmc
mov
stos
test
stc
xchg
and
sbb
pop
inc
mov
mov
sbb
or
imul
mov
cwtl
sub
cmpsl
frstor
loop
cmpsl
test
xchg
adc
push
cmp
mov
inc
fs
and
mov
loopne
loopne
cld
ljmp
loop
pop
leave
fidivrs
fsubs
stos
outsb
inc
mov
xor
pop
mov
add
sti
mov
push
pop
shlb
push
call
stc
adc
or
xchg
adc
rep
lret
icebp
popa
adc
adc
push
xor
stos
inc
cwtl
cmp
fwait
fs
xor
or
xor
xchg
mov
pop
xor
cmpsl
sbb
push
ficoml
sub
mov
or
sub
mov
sub
dec
mov
in
in
mov
mov
sahf
xor
mov
mov
pop
mov
push
cld
popf
mov
leave
xchg
dec
xor
lods
mov
leave
push
aam
outsb
rolb
clc
sub
jg
jno
pop
mov
fcomi
ds
leave
loope
addr16
repz
mov
leave
ds
lahf
nop
fsubs
xlat
roll
pop
xor
mov
mov
xchg
xor
clc
adc
jl
leave
test
cmp
push
push
shrl
jne
dec
ss
mov
xchg
push
mov
insl
out
lds
xchg
dec
fsubrs
rcrl
aas
xchg
mov
push
inc
outsb
inc
in
cmpsb
lea
mov
mov
xchg
jge
adc
mov
cmpsl
faddl
add
cmp
and
sbbb
fst
in
push
sti
adc
arpl
aas
int
jo
adc
outsl
xchg
jp
into
push
jno
ss
push
lret
lcall
setb
inc
cmpl
or
or
mov
fnstsw
pop
jecxz
pop
jnp
mov
imul
js
push
or
mov
andl
dec
rcr
test
mov
clc
cld
call
insb
mov
mov
cltd
sbb
xor
stos
push
pop
cmp
inc
pop
jg
push
mov
dec
jmp
rorb
push
fsubrs
push
pop
pop
sub
cmp
and
mov
mov
call
jns
mov
push
push
je
js
jp
addr16
fldenv
sub
cltd
pop
inc
push
inc
lock
mov
inc
icebp
popf
lds
xchg
iret
push
fildll
inc
loop
andb
iret
fdivr
add
jno
fldcw
push
je
and
stc
jbe
jp
fwait
test
das
cmpsb
andl
and
push
xchg
mov
mov
dec
cmp
arpl
loop
mov
jne
cmp
lods
dec
js
repz
fiadds
cltd
stc
cmp
sarb
sub
mov
mov
popf
cs
sbb
test
loopne
outsl
mov
and
xor
jbe
fildll
xor
pop
push
mov
int3
jne
cmpsb
test
lock
stc
or
mov
add
test
adcb
ret
scas
inc
cmc
jecxz
cmp
movsl
aad
mov
aad
pop
fucomp
cmp
stos
mov
push
fdivl
push
imul
int
push
scas
sub
adc
dec
ss
sbb
and
jns
clc
or
and
cmc
ficompl
pusha
mov
shr
adc
outsl
push
or
push
sbb
cmpsl
pop
clc
sahf
jecxz
sahf
cltd
xchg
mov
clc
xor
inc
fs
testl
pop
mov
jae
sub
sbb
fnstenv
call
aaa
mov
mul
stos
and
sbb
popf
stos
and
test
and
mov
jle,pt
xor
xlat
testb
and
or
jns
xchg
sub
lods
imul
ret
jmp
xor
or
dec
aaa
out
xchg
mov
loopne
jb
subl
xor
sub
jbe
clc
xor
push
xlat
inc
stos
outsl
jae
sub
daa
imul
cmp
pop
rcl
and
push
push
insl
inc
sti
xlat
lds
jecxz
movsl
dec
insl
shrl
adc
clc
inc
inc
mov
jb
mov
adc
jl
imul
cwtl
mov
das
inc
pop
ret
repz
inc
dec
shll
fndisi(8087
fsubr
sbb
add
repz
pusha
imul
jge
adc
mov
fcoms
mov
xor
icebp
mov
cmc
mov
jg
in
mov
mov
ds
imul
leave
sub
ret
mov
in
fistpl
test
lock
xchg
mov
es
dec
sahf
test
adc
testl
jae
rcrl
sti
test
sahf
pop
lock
hlt
or
sub
push
xor
xchg
rclb
cli
sti
xor
mov
aad
movsb
push
push
fcompl
mov
jge
arpl
xor
movsb
jl
dec
pushf
cmp
aad
and
xchg
xchg
push
mov
xlat
jns
cmp
imull
mov
mov
fcmovnbe
pop
pop
out
jns
scas
jae
outsb
jo
xor
push
xchg
sub
add
jg
bound
insb
mov
out
jl
rcrb
adc
pop
mov
inc
fs
adc
inc
mov
jmp
fstl
test
neg
mov
push
fistl
das
pop
orb
add
mov
sub
and
adc
xchg
pop
imul
push
rorb
xchg
sub
outsl
outsl
xchg
rcrb
imul
call
es
mov
lods
push
jp
ret
insb
jne
xor
mov
repz
pop
je
mov
aad
rcrl
lret
leave
push
shll
xorb
fcmovnb
orb
push
outsl
lods
mov
ja
aam
cmpsl
sub
and
or
out
stos
or
pop
les
lods
mov
popa
gs
outsl
js
out
cld
ds
add
jmp
push
cmp
addr16
insl
and
sahf
pop
xchg
and
add
inc
mov
jg
jle
cmp
xchg
popf
mov
dec
xchg
jge
mov
rorl
push
repnz
xor
dec
dec
inc
jmp
mov
sub
add
sub
mov
imul
and
mov
mov
cmp
leave
sti
push
dec
pop
shlb
fiadds
iret
pop
cmp
fcompl
test
fldenv
outsb
cmovle
jne
in
outsl
xchg
xor
lods
aaa
inc
push
ret
fbstp
sbb
aas
int3
das
cmp
sbb
cwtl
mov
adc
in
xchg
bound
scas
test
push
pusha
inc
pop
sbb
sub
clc
push
mull
ret
jno
xchg
add
shrl
mov
in
push
mov
add
adc
out
out
xchg
test
pushf
movb
xchg
cmpsl
lods
mov
pop
shlb
mov
mov
popf
sbb
dec
mov
stos
dec
cmp
jmp
mov
out
or
pop
adc
fisttpll
shrb
mov
jg
fisubl
out
mov
sbb
mov
push
jbe
xchg
mov
xchg
pop
jno
xchg
push
enter
pushf
in
adc
fidivl
out
cmp
cmpsb
sbb
dec
repnz
stos
mov
fsubr
jns
sub
cmpsl
lds
sub
repz
lods
inc
push
in
cwtl
mov
ss
pop
idiv
xchg
sub
cmpsb
cmpsb
or
sub
ret
outsl
cmp
fldenv
fsubrs
lea
lods
test
mov
js
push
dec
fstpl
sbbl
insb
inc
stos
iret
sbb
cli
or
rclb
jmp
cmp
inc
jns
jg
nop
daa
sub
jg
fmul
scas
mov
push
add
shlb
sub
inc
clc
fcmovu
iret
cmpsb
cmp
sbb
ret
loope
adc
cmp
out
jmp
add
xchg
sahf
xor
sub
call
push
fdivl
xchg
call
jg
push
inc
fisubs
rcrl
jle
ljmp
pushf
mov
sbb
mov
dec
ss
notl
push
pop
mov
xchg
test
add
cmp
or
in
mov
fisttpll
dec
mov
test
xchg
push
sub
test
nop
stos
test
test
in
push
ljmp
icebp
cmp
int
xchg
mov
jmp
addr16
mov
sub
ret
mov
pop
into
push
loopne
pop
and
int3
inc
por
xchg
push
sbb
cmp
push
out
dec
push
and
cli
and
push
sbb
je
addr16
pop
pop
in
in
hlt
adc
shlb
mov
jns
xchg
imull
xchg
add
scas
or
xchg
cmpsl
les
pushf
lods
cmp
add
and
or
dec
jne
xor
cld
sbbl
or
and
mov
in
shlb
add
cmp
into
jmp
rcll
dec
fisubrs
xlat
sti
imul
cmpb
mov
push
mov
push
lods
std
lds
insb
sub
sahf
mov
jl
stos
lock
mov
in
int3
sti
pop
incb
xlat
pop
dec
aam
lock
cli
pop
mov
mov
daa
pusha
lods
faddp
int3
adc
mov
std
sbbb
or
pop
and
shl
xchg
add
lods
lods
call
or
mov
shrb
pop
out
push
mov
clc
pop
add
jl
xchg
cmp
jl
mov
loopne
dec
stos
cmp
popa
outsb
lret
in
jne
mov
xor
shr
or
cmp
push
fisubs
lret
xchg
call
push
frstor
push
repz
sub
aam
cmp
lock
gs
je
aam
mov
loopne
lahf
pushf
push
add
fwait
add
xor
mov
mov
mov
xlat
xchg
cld
xchg
pop
std
and
mov
sub
ljmp
push
cmp
daa
jl
fidivs
xchg
cs
cmpsb
jns
push
in
sub
movsl
aam
inc
jae
js
repz
and
fisttps
adc
jmp
sbb
mov
xor
fimull
es
cmc
push
pop
vmovd
xchg
mov
call
add
cmp
test
mov
test
xor
cmpsb
cmp
outsl
inc
fcomps
or
add
sub
pushf
decb
and
xlat
sti
mov
xchg
ret
insb
pusha
repnz
jo
xor
sahf
adc
push
cli
sub
daa
sub
and
cmp
fimuls
and
adc
int
leave
incb
xor
xchg
in
cmp
andb
or
push
add
mov
mov
test
xor
pop
push
and
jne
mov
cmp
add
test
xor
test
test
mov
mov
ja
mov
xchg
xchg
jmp
sbb
mov
cmp
push
rcr
mov
mov
gs
js
jmp
cmp
pop
mov
sahf
mov
es
ret
popa
sahf
pop
jb
push
jno
testl
decb
out
ljmp
cmp
sahf
ret
jecxz
mov
xor
push
outsl
cltd
mov
repnz
mov
inc
cs
icebp
jle
fists
addl
push
add
sbb
movsl
fnsave
mov
aam
inc
mov
stos
and
or
adc
mov
vfmadd132sd
xor
dec
xor
cld
jecxz
movlps
pop
pushf
jae
cmpsl
scas
aam
ja
int3
js
fisttps
or
lahf
cltd
xor
cltd
xor
mov
arpl
mov
pop
in
orb
mov
insl
add
pop
shr
dec
jl
jae
mov
mov
mov
test
test
daa
xchg
inc
das
jp
jnp
nop
pop
sahf
shrb
std
call
push
jg
shll
xchg
mov
add
addr16
or
cmp
sahf
mov
xor
enter
xchg
jmp
add
pop
int
pusha
cmpsb
jecxz
nop
lcall
mov
xchg
repz
sbbl
push
mov
nop
sub
test
cmp
test
shr
in
pushf
xor
fstp
push
int
gs
mov
sar
and
xor
push
xor
ja
fucomip
int3
push
pop
xor
and
fcompl
rcll
pusha
ljmp
sub
fildll
jg
push
jae
scas
mov
adc
jp
inc
cmp
jb
dec
sbb
test
and
jmp
cmpsb
jmp
push
test
push
or
iret
cmp
mul
mov
in
loop
imul
out
ja
push
and
add
ja
add
and
aad
shl
testb
add
out
mov
xchg
mov
aad
jno
sub
jne
cmp
aam
xchg
xor
not
jbe
outsl
scas
push
lret
mov
in
pushf
test
sub
mov
mov
pop
or
into
mov
int
imul
push
dec
mov
inc
inc
cmpsb
add
mov
fcomi
adc
jmp
in
jb
ljmp
add
popf
jmp
call
cmc
lods
in
add
dec
mov
inc
and
enter
stos
jmp
push
jge,pn
pusha
jg
push
jns
pop
loop
lcall
cltd
mov
repnz
xor
bound
lret
sahf
aas
jp
outsl
enter
mov
or
js
and
mov
iret
inc
cmp
push
in
mov
fsubs
adc
cmpsl
and
jb
adc
dec
xlat
frstor
sub
pop
imul
sub
mov
push
push
lcall
lds
icebp
data16
mov
sbb
loopne
test
inc
test
cmpsb
fs
sbb
mov
loope
dec
jle
enter
inc
dec
cltd
aam
lock
jmp
add
cmp
fdivl
mov
pushf
imul
insb
repz
sahf
and
pop
dec
test
and
push
dec
scas
test
push
dec
jecxz
mov
adc
icebp
mov
cmp
int
aaa
cmp
push
popf
rcrb
cmp
pop
xchg
ss
push
mov
mov
out
mov
sub
sarl
mov
pop
pushf
stos
jne
call
sub
lock
xor
rorl
dec
dec
push
bound
pushf
fs
pop
and
fwait
in
xor
cmpsb
in
adc
aaa
ret
out
pop
cmp
xchg
adc
nop
in
pop
out
sbb
out
pop
cmpsl
ds
jle
lds
mov
xor
or
out
into
and
pop
cmp
dec
fs
xchg
xchg
pop
icebp
subl
test
dec
and
inc
shr
jbe
int
hlt
inc
call
adc
sub
jl
mov
clc
xchg
xlat
mov
mov
test
dec
negl
fs
stos
adc
mov
in
cmc
int3
fldt
mov
clc
mov
add
inc
sbb
and
and
inc
movsb
in
add
lcall
in
push
xor
fisubl
dec
pop
imul
adc
push
outsb
xchg
out
xchg
xchg
shrb
sti
adc
mov
std
loop
lods
cmp
scas
xchg
les
pushf
jb
xchg
leave
cmp
shll
or
add
xchg
push
or
adc
inc
fwait
xor
mov
mov
inc
frstor
shl
mov
adcb
adc
mov
and
nop
adc
cs
and
out
cld
pop
mov
push
popf
std
xchg
sub
adc
and
into
xchg
dec
lds
pusha
int
xchg
das
mov
outsl
mov
mov
lea
push
sub
adc
xchg
pop
or
pop
jecxz
test
sbb
mov
mov
iret
arpl
sahf
test
popf
ds
test
or
or
fsubrs
ret
xor
shl
and
mov
dec
movsb
shll
or
enter
mov
push
dec
imul
or
jp
mov
push
sub
bound
stos
jmp
jns
data16
int
adc
test
clc
loopne
daa
add
push
data16
push
adc
cmc
xor
fisubl
imul
push
das
mov
popa
cmp
test
stc
shll
lcall
imul
rol
js
jecxz
arpl
push
inc
xor
rep
dec
lret
fwait
rorb
push
jno
xor
aad
repnz
gs
popa
shlb
xchg
dec
into
adc
mov
inc
pusha
daa
dec
sbb
loopne
arpl
dec
lods
mov
xchg
sti
jg
sub
push
xor
aam
push
pushf
add
cmp
mov
mov
jns
sub
in
call
movsl
out
sti
fisttps
test
in
jecxz
mov
add
mov
aam
scas
add
xchg
ss
out
sub
lods
pop
push
mov
push
pop
xor
loope
clc
sub
insl
push
lods
sahf
pop
mov
mov
xchg
xlat
push
sub
in
lret
inc
negl
add
mov
les
xor
dec
xor
repnz
test
fisttps
lret
add
iret
cmpsb
push
sub
repz
sub
aam
rclb
rol
push
lahf
lods
rcrb
arpl
les
cmp
ljmp
push
data16
fisubs
ret
xor
dec
dec
fstl
cmp
ficompl
out
push
stos
push
xlat
daa
scas
movsb
inc
or
or
add
es
xchg
mov
pop
mov
mov
out
mov
lahf
push
jge
mov
cli
xchg
sub
outsb
cmp
je
imul
stos
cmp
xchg
imul
lock
jae
fisubrs
jp
and
dec
dec
and
pop
pusha
mov
xchg
xlat
dec
sbb
mov
mov
cmp
adc
cli
les
sbb
repz
sbb
push
sahf
stos
sub
dec
repz
aaa
adc
and
fwait
xor
cwtl
inc
imul
mov
mov
leave
mov
mov
data16
stc
sbb
rorl
and
jbe
test
ret
hlt
xchg
enter
cmpsb
aam
jecxz
add
xor
fisttpll
popf
xchg
pushf
out
ja
push
xchg
sbb
nop
push
sub
mov
lods
rolb
ret
push
push
popf
js
jnp
mov
and
fisttps
repz
adc
shlb
mov
outsb
sarb
mov
inc
mov
jno
out
mov
rolb
sub
adc
scas
in
cmc
mov
in
and
inc
dec
out
pop
xor
pop
sarl
cmp
add
bound
and
scas
jl
sub
or
jae
mov
cmp
jecxz
ficoms
aaa
sbb
lods
es
in
gs
test
mov
inc
out
push
pop
loopne
dec
outsb
lahf
loopne
or
jae
cmp
sbb
aad
ss
or
and
scas
enter
stos
jmp
mov
dec
mov
lock
and
jne
add
mov
dec
mov
in
mov
push
or
js
mov
cwtl
and
test
rorb
add
lcall
fbstp
movmskps
fistpl
pop
sbb
shr
add
out
cmpsb
push
mov
imul
and
arpl
cwtl
icebp
cli
int
mov
shl
push
test
aad
das
sbb
xor
pop
add
push
or
and
mull
mov
mov
cmpsb
mov
in
je
inc
je
xchg
testb
ficoml
dec
shr
aam
and
nop
idiv
adc
jo
push
out
inc
roll
xchg
fdecstp
or
mov
or
sub
mov
cmp
and
jmp
fs
repz
mov
cmp
push
add
out
add
cmc
add
fdivl
or
pop
icebp
cmp
xlat
notb
mov
sbb
inc
jb
jle
hlt
xchg
lret
xor
sbb
cld
push
ja
xchg
cmp
neg
sbb
mov
jge
clc
xchg
negb
loopne
adc
cmp
lret
repz
into
das
ficompl
stos
xchg
jg
jb
cmc
popf
and
loopne
orb
testb
fsubs
pop
sbb
dec
daa
cmp
gs
push
andb
hlt
jecxz
inc
push
sbb
or
mov
divl
mov
xchg
scas
or
shlb
in
mov
mov
rcrb
xor
loope
imul
inc
fisubrl
arpl
testb
xchg
sub
es
rorl
test
in
xor
dec
or
inc
daa
insl
subl
das
repnz
or
jg
ljmp
loope
mov
dec
shld
imul
cmovns
loop
pop
int
dec
in
lock
mov
mov
jecxz
or
pop
or
subl
push
jmp
fimull
arpl
sti
loope
jg
xor
loope
enter
xchg
xor
or
xchg
jno
mov
pushf
mov
mov
aas
ret
mul
jne
push
cmp
gs
rcrb
in
add
mov
xchg
int
xchg
xchg
das
cmp
loop
fstps
and
imul
rcrb
shl
leave
or
ds
mov
dec
fprem1
cld
mov
lods
or
sub
aas
jb
in
xchg
sub
mov
mov
lock
outsb
xlat
xchg
dec
ret
or
cmp
dec
dec
dec
cli
or
mov
jo
out
jnp
inc
and
push
inc
lret
cmp
mov
fcomps
sbbb
rcll
dec
dec
int3
and
imul
adc
lret
jmp
mov
cmp
ds
adc
ss
adc
adc
mov
xor
in
push
out
jmp
outsl
sbb
sub
mov
flds
mov
xor
outsb
in
aam
aaa
stos
mov
push
sub
sbb
movl
pop
pop
xchg
sub
cld
xor
or
dec
aas
sar
ss
adc
pop
push
fcomps
out
into
mov
cld
mov
test
sbb
fnstcw
loope
out
es
xor
je
arpl
xchg
out
pop
dec
inc
fs
icebp
pop
subb
cmp
adc
sbb
xchg
dec
add
aam
sub
and
rcr
imul
sub
iret
pop
dec
pop
mov
inc
aam
aad
mov
sbb
sbb
lock
andb
xchg
sbb
fidivrl
insl
enter
lret
jae
xchg
add
mov
ret
insb
mov
les
pop
inc
jo
xorl
jle
shl
push
fcompl
sub
adc
dec
das
dec
ret
fucomip
icebp
cmp
and
pop
push
inc
sub
xchg
and
mov
fnstenv
pop
sbb
jae
repnz
adc
cs
das
pusha
mov
mov
mov
pop
icebp
inc
aam
imul
daa
std
xchg
pop
mov
inc
jmp
or
cmp
jge
add
inc
mov
jb
pop
movsb
inc
fst
data16
cwtl
or
or
jecxz
fcoml
out
adc
push
stos
inc
cmp
je
aaa
in
fldt
ljmp
mov
inc
fmul
or
sub
inc
ja
cmp
hlt
ljmp
test
cmpsl
out
pop
and
aas
push
repz
sti
jbe
cltd
jno
sbb
aam
jo
sub
push
pop
mov
sti
dec
mov
dec
pop
adc
fcomps
in
test
mov
cmc
clc
push
ljmp
and
adc
jbe
mov
or
shrl
push
ror
int
sbb
es
pop
repz
dec
jp
xor
mov
xor
sbb
mov
and
mov
xchg
and
sub
add
mov
xlat
rcrb
movsl
imul
movsl
std
out
stc
adc
lret
xorb
and
popf
fiaddl
dec
jns
cmp
rorb
push
mov
lods
fidivl
xor
and
sub
push
adc
lret
fidivrs
sbb
mov
lea
montmul
cmpsb
sbbl
mov
sbb
sbb
push
insb
cmpsb
xor
pop
xor
sahf
and
inc
or
cmp
xchg
add
xchg
xor
mov
ret
mov
scas
jge
pop
test
in
pop
pop
push
test
cmp
fisubrl
das
jg
cmpsl
popa
mov
fimull
mov
mov
jne
mov
sub
xor
lods
js
pop
lods
dec
add
hlt
scas
mov
or
aas
imul
je
or
shrl
jne
xchg
cmc
enter
rol
test
mov
shll
adc
inc
fstpl
jmp
jo
in
xor
mov
jecxz
repz
andb
lahf
lahf
insl
pop
gs
push
sbbb
xor
mov
or
mov
pop
dec
xchg
xchg
test
jmp
sbb
les
lods
test
xor
rcl
movsb
imul
mov
cmp
cmp
jecxz
xor
sbb
sbb
mov
movsl
insl
mov
aad
ss
ds
dec
mov
jge
cmp
je
sub
lret
pusha
arpl
xchg
or
mov
push
out
scas
pop
pop
mov
out
sarb
dec
cmp
fnstsw
fidivl
jl
add
mov
mov
lds
mov
jno
dec
adc
pop
dec
clc
push
dec
dec
fsubl
sub
add
jp
dec
lods
cmovo
roll
inc
jecxz
test
in
js
cmpsl
mov
sbb
aaa
dec
imul
in
lcall
lea
xchg
and
push
cmpsl
adc
roll
dec
loope
in
mov
lret
sti
leave
sbb
shl
ror
push
inc
push
cmp
mov
mov
xchg
pop
or
sub
push
mov
mov
cmp
mov
dec
lretw
insb
xchg
and
vminpd
inc
imul
xchg
push
mov
jb
xchg
mov
movl
jmp
in
xor
mov
dec
popa
ss
inc
mov
call
je
je
xchg
das
mov
add
mov
outsl
shlb
dec
dec
and
loope
orb
repnz
clc
sbb
mov
dec
andl
lods
jmp
inc
add
mov
push
mov
pop
sub
adc
push
mov
xor
sub
lea
and
je
test
inc
into
shrb
add
sub
gs
popa
imul
mov
mov
cmp
inc
jmp
sbb
dec
pusha
call
sbb
sahf
stos
mov
fcomi
add
out
mov
in
in
test
mov
add
push
inc
xchg
push
mov
xor
loop
inc
pop
fsts
les
cli
ja
es
pop
xor
mov
rol
xchg
adc
shrb
sub
rorb
jae
cmp
sub
mov
fwait
das
cld
xchg
clc
cmp
loop
movsb
lds
add
mov
adc
stc
inc
cs
imul
icebp
inc
xchg
add
std
jmp
out
orb
lods
mov
mov
mov
xchg
push
jle
icebp
cltd
fstp
pushl
ja
fsubrl
jns
cmpsl
mov
pop
mov
jg
mov
xchg
mov
jl
adc
mov
imul
cmp
or
ret
mov
out
mov
jmp
into
cltd
or
cmc
outsb
stc
push
pop
pop
adc
inc
mull
iret
pop
jo
jb
jnp
adc
rcll
mov
or
sarb
icebp
mov
frstor
jb
btr
mov
ret
mov
cmpsb
and
and
fistpl
mov
test
sahf
dec
push
loopne
dec
sti
push
mov
test
mov
gs
cli
push
xchg
inc
push
insb
dec
push
cmp
lods
pusha
and
xchg
movsl
sbb
dec
mov
mov
fsubrp
arpl
lds
push
mov
cmp
iret
inc
xchg
add
push
lods
mulb
adc
fiaddl
into
jmp
dec
int
inc
ljmp
dec
adc
xor
pop
imull
jmp
sbb
mov
jb
add
scas
and
sub
jnp
clc
loope
cmp
add
lods
testl
outsl
in
nop
dec
rcrb
loopne
in
cmc
inc
ficomps
mov
fwait
xor
lret
mov
lock
sahf
mov
iret
loop
xlat
leave
out
pop
lods
andl
xchg
hlt
nop
sub
cmp
push
cmc
inc
sbb
inc
lcall
push
aad
xchg
cmp
sub
insb
xor
lods
inc
and
xchg
adc
es
scas
jmp
ds
adc
xchg
mov
shr
inc
dec
mov
sbb
in
jns
cmp
pop
bound
adc
mov
dec
dec
dec
and
mov
sub
icebp
shlb
sahf
cltd
ja
pop
outsb
pushf
sahf
adc
jbe
insl
xor
mov
mov
add
xchg
lea
push
mov
jle
xchg
xchg
movsb
lret
mov
xor
inc
pop
dec
jecxz
in
in
repz
clc
insb
test
mov
or
inc
mov
ja
loopne
push
mov
add
rcrl
pop
xor
or
push
in
test
push
and
mov
jnp
dec
fbld
std
and
push
mov
inc
scas
jae
and
mov
adc
ljmp
jno
adc
outsl
mov
dec
mov
jno
xor
orb
mov
sahf
mov
inc
sbb
popa
sub
sbb
or
pop
xchg
mov
dec
hlt
inc
xlat
jmp
mov
mov
aam
decl
sub
movsl
es
test
pop
inc
or
dec
shlb
imul
pop
aam
push
or
outsl
sub
jecxz
xchg
mov
rcrb
jp
xchg
call
lea
pusha
shlb
and
cmpsl
jle
fstpl
je
adc
pop
ja
push
out
pop
repnz
lret
xchg
sub
sbb
mov
jbe
jl
movsb
sub
pop
ja
icebp
test
adc
and
iret
push
inc
mov
sbb
ret
imul
dec
lret
lret
ss
xchg
cli
insb
leave
sbb
inc
pop
imul
mov
mov
aas
fisubrl
ret
add
adc
jo
gs
gs
jg
or
or
pop
mov
movsl
xchg
inc
loopne
add
jbe
aad
imul
aam
mov
xor
mov
xchg
and
xor
adc
mov
jnp
leave
mov
add
cmp
mov
sti
add
ljmp
loopne
rcrb
inc
mov
mov
cmp
and
nop
fldl
sbb
scas
pop
out
xchg
rolb
mov
cli
mov
pop
ret
adc
pop
mov
or
pop
jnp
push
popa
les
inc
roll
out
fs
in
or
fnstsw
out
inc
lret
out
aam
cmc
fs
outsl
push
or
and
stos
lahf
sahf
test
lods
pop
adc
push
mov
mov
adc
mov
pop
mov
inc
mov
out
sahf
lahf
pop
leave
fistl
hlt
pushf
out
mov
mov
dec
jecxz
cli
fstps
pop
in
shl
and
or
data16
push
fs
xor
pushf
dec
cmp
pop
cmpsb
ds
cmp
bound
nop
or
dec
adc
scas
in
fwait
aaa
push
jmp
insb
test
jp
push
in
std
xchg
cmp
lods
cmpb
push
jmp
orl
test
pop
xchg
push
call
dec
and
lret
sub
push
out
test
mov
sbb
jne
sti
pop
add
lods
dec
pop
dec
dec
inc
fbstp
mov
adc
insb
cmc
inc
loopne
popf
add
or
sti
in
jg
mov
jle
cmp
popf
lods
or
dec
test
cmp
xchg
lahf
mov
fcomp
inc
mov
je
ja
add
lods
mov
sbbl
rolb
fdivp
add
mul
gs
sub
jp
test
or
cwtl
rclb
ss
loopne
inc
push
inc
lea
and
subb
xor
stos
sub
daa
mov
push
enter
call
jae
mov
pop
xchg
jl
leave
sub
mov
xchg
outsb
les
inc
int3
cmpsb
ds
popa
bound
xchg
or
xchg
mov
mov
jnp
repz
out
lock
push
fdivl
pushf
pop
addr16
and
in
ja
push
leave
sbb
xor
sbb
aad
mov
ja
in
mov
addr16
or
mov
in
cmp
enter
mov
test
shl
adc
shrl
ret
jae
fcoms
jae
xlat
mov
dec
stos
inc
and
jbe
xchg
push
sbbb
loopne
pop
sub
push
bound
fxch
or
mov
loopne
adc
xor
repnz
add
xor
dec
jno
mov
lds
dec
jbe
push
idiv
outsb
int
push
cwtl
xchg
mov
and
pop
insb
leave
jecxz
test
mov
enter
mov
or
mov
jne
imull
ret
sub
sarb
dec
mov
add
add
lret
js
dec
pop
int
xor
ljmp
adc
jne
subb
nop
lods
or
outsb
sub
cltd
fidivl
mov
cmc
mov
mov
mov
imul
sub
fs
inc
push
insl
dec
push
imul
or
ja
xchg
xchg
fs
shrl
sbb
sti
subl
sub
sbb
mov
dec
jae
add
jmp
or
sub
mov
and
cs
add
ds
enter
sbb
clc
inc
jnp
inc
sbb
fstl
push
aad
mov
xor
xchg
nop
mov
sbb
inc
pop
mov
cmpsl
nop
cmp
pop
mov
rcr
mulb
subb
imul
jo
or
cmpsl
out
test
mov
sub
sub
push
ss
jmp
gs
mov
and
push
xor
mov
call
adc
inc
out
adc
dec
cmp
addr16
xchg
sbb
fnstenv
lods
xchg
lret
out
mov
mov
insl
rcll
daa
mov
mov
clc
and
imul
clc
jge
nop
inc
push
and
jp
jge
test
inc
xchg
mov
or
pop
cmp
insl
iret
test
enter
push
inc
pop
shl
fwait
mov
cmp
push
bound
xor
inc
or
xchg
push
inc
fwait
mov
dec
flds
iret
mov
mov
aas
fwait
and
js
sbb
push
pusha
and
fldenv
xchg
jno
stos
ljmp
mov
inc
into
mov
test
iret
jp
leave
jge
fistpl
mov
jp
mov
and
mov
xchg
inc
add
sti
ret
icebp
mov
call
lret
mov
orl
mov
shlb
imul
mov
pop
ja
in
sbb
pop
ja
imul
jle
test
cmp
xchg
xchg
add
testl
xor
adc
and
mov
es
jae
push
mov
sbb
jo
jbe
stos
lret
ja
addr16
push
popf
push
push
inc
mov
or
mov
pop
icebp
add
test
mov
addl
adc
outsb
xor
pop
dec
dec
jmpw
aad
insl
or
cmp
movsl
push
out
popa
roll
das
mov
fcmovb
cltd
add
push
mov
dec
es
cwtl
ds
pop
testl
pop
enter
arpl
imul
adc
mov
dec
dec
xchg
xchg
shr
mov
sbb
add
sbbb
fimull
shl
xchg
enter
fsubs
jbe
notb
cli
inc
xchg
dec
inc
lahf
cltd
pop
add
inc
stos
jne
pop
dec
xor
push
ljmp
fidivrs
nop
jle
mov
lahf
stos
jl
and
push
sbb
mov
inc
push
enter
bound
aaa
mov
xor
sbb
repnz
push
jg
cmp
ja
mov
std
dec
scas
sbb
inc
stc
out
aaa
faddp
or
popa
subl
dec
add
xor
dec
or
dec
out
shlb
out
mov
mov
mov
dec
aas
mov
sarl
int3
ljmp
xchg
sbb
movsl
lds
mov
jno
mov
mov
cltd
sbb
inc
sbb
into
leave
in
mov
sbb
dec
shll
dec
es
inc
rol
cmp
xchg
jg
enter
push
and
lret
fld
cmpl
push
jge
mov
ds
out
push
in
push
pushw
das
adc
mov
dec
xchg
sub
popf
insl
sbb
call
inc
into
fwait
jmp
jb
mov
test
inc
sub
in
xchg
xor
and
ja
adc
sbb
scas
dec
je
mov
lret
add
adc
lea
ljmp
lret
adc
mov
in
leave
and
and
inc
push
call
cmpl
cmc
pop
sub
test
jb
pop
insl
inc
daa
push
sbb
xchg
pop
and
insl
fcmovu
mul
add
and
jg
in
adc
test
adc
xor
cli
fimull
stos
bound
aad
mov
inc
enter
scas
jmp
pop
xor
and
xlat
push
lcall
movsb
in
scas
sbbb
sub
xor
push
in
stos
nop
pop
rolb
popa
xor
push
lods
or
inc
stos
xor
shld
push
lods
jb
movsb
movb
adc
mov
test
clc
push
loope
jne
pop
dec
les
adc
xchg
test
pushf
fadds
mov
shl
aas
pop
divl
aad
and
mov
cli
inc
xchg
cmpsl
out
aad
push
jb
push
xchg
push
xor
push
les
mov
or
fs
push
or
jo
push
xchg
je
mov
sti
mov
insb
aaa
int3
ffreep
mov
push
stos
notb
add
test
aam
ret
or
jno
xchg
stos
fcomps
test
mov
cwtl
test
fnstcw
add
mov
push
xchg
outsb
adc
movsl
cmp
ret
jnp
mov
mov
bound
addl
cmpsl
push
lret
mov
mov
popf
cmc
inc
clc
cli
std
adc
xchg
inc
push
andb
add
das
je
aam
je
mov
sbb
dec
inc
push
jne
push
cmpsl
into
stos
xor
pusha
lock
sarl
mov
aas
pop
push
fstpt
dec
sub
fnsave
inc
lods
lret
sti
lret
and
inc
mov
push
imul
nop
sbb
jb
xchg
jp
fisubs
ljmp
xor
mov
stc
sub
stos
sti
push
push
stos
mov
movsb
int
ljmp
test
mov
jg
xchg
mov
adc
mov
fisttpl
sbb
xor
out
arpl
sbb
sahf
pusha
jge
hlt
rcrl
shlb
pusha
int
insl
mov
sbb
ret
dec
push
mov
inc
mov
shr
lods
and
sub
jno
jno
mov
dec
rcl
mov
inc
jmp
pop
dec
mov
and
stc
lea
clc
sahf
mov
nop
das
inc
pop
call
xchg
stc
mov
mov
add
pusha
cmp
into
jb
ds
pop
adc
cli
gs
imul
jbe
dec
inc
xor
jmp
cwtl
cltd
push
dec
add
pop
rclb
ds
lret
das
repnz
mov
mov
mov
movsb
add
test
test
ret
cmpsl
sbb
xor
adc
sahf
subl
cmp
pop
jecxz
pop
imul
cli
les
in
into
pop
pushw
sub
pop
imul
jnp
loop
sub
jno
jne
imul
lcall
gs
push
orb
jne
cmpsl
loopne
adc
filds
pop
dec
cs
pop
addb
aad
mov
repz
mov
jns
dec
lds
data16
and
je
pop
xchg
cltd
sub
lret
pop
es
mov
sub
add
fwait
jno
push
inc
pop
push
test
aas
fisubl
lahf
jge
xor
inc
adc
sbb
sub
insb
mov
pop
jns
cltd
popf
insl
les
stc
pop
iret
and
add
lahf
jnp
les
rcrl
stos
adc
dec
ret
xor
imull
pop
xchg
push
add
js
pop
cmp
pop
and
lock
xor
xchg
lcall
xor
xchg
jne
jp
cmp
xchg
int3
rcrl
pop
mov
fdivs
inc
push
loope
mov
sub
dec
sbb
push
sarl
mov
dec
pop
and
ret
lret
lret
repz
cltd
pushf
dec
das
mov
out
roll
shl
push
insb
jle
outsl
xor
notl
movsl
inc
out
or
cld
sub
xchg
mov
jge
sbb
add
in
int
pusha
loop
cmp
outsb
pop
add
test
stos
xchg
mov
xchg
sbb
add
mov
jge
pop
enter
cmc
into
fsubrl
pop
cmpsb
push
push
mov
adc
mov
mov
test
pop
stos
pop
push
notb
dec
aaa
stos
pop
lock
fsubl
outsb
fistpl
int
add
and
in
mov
testb
mov
out
cld
aas
push
pop
pop
aad
shll
or
pop
std
push
or
add
lea
unpckhps
das
push
xor
lret
and
lahf
push
cmc
mov
imul
call
and
pop
jl
cwtl
jo
xchg
pop
call
lea
inc
dec
mov
mov
popa
mov
xlat
jne
jo
jns
or
daa
jle
mov
adc
fldl
lods
loope
aaa
jbe
iret
data16
insb
ret
out
inc
mov
pop
and
lea
in
cld
in
lret
jns
data16
lret
lret
and
std
lea
add
mov
cltd
scas
jle
push
fisubrl
or
lds
xchg
mov
xor
ficoms
fidivl
sarl
inc
push
testl
lds
out
aad
std
arpl
aas
sbb
outsb
push
aaa
mov
adc
xchg
lcall
fcoms
jno
jg
mov
add
sbb
hlt
pop
jo
lds
fbld
mov
in
lods
jbe
mov
jp
in
nop
mov
nop
daa
push
xchg
es
add
loope
add
or
movsb
repnz
add
cmp
dec
loopne
pop
mov
inc
mov
ret
enter
aas
add
out
dec
shrb
sub
int
testl
jnp
ret
inc
js
inc
xlat
dec
mov
jne
inc
jge
jmp
sbb
sbbl
inc
popa
clc
mov
mov
push
xchg
in
fsubrs
adc
and
idivb
sub
mov
adc
adcl
pop
movsb
inc
push
icebp
int
sub
in
mov
push
fwait
xor
test
std
jo
lcall
and
fdivrl
inc
xlat
cmp
xchg
mov
xchg
jmp
and
incb
push
int
xchg
xor
ljmp
dec
jbe
xor
scas
jb
inc
mov
out
jno
push
pop
outsb
mov
push
cmp
jb
pop
sub
push
out
jo
push
sub
pop
mov
pop
fdivs
mov
je
push
icebp
xchg
push
cmp
cmpsb
cld
testl
jo
jno
into
push
push
in
pop
jo
or
lods
pop
or
cmpsl
inc
popf
fs
pusha
outsl
jge
jmp
out
pop
push
cmp
mov
xchg
push
pop
and
aaa
pop
sub
sub
lock
cld
scas
inc
sub
loope
xchg
sub
scas
inc
push
xchg
mov
cltd
lret
inc
xlat
mov
or
es
leave
xor
pusha
not
jb
inc
fmuls
test
in
ja
fimuls
dec
in
call
cmp
aam
stc
je
add
dec
jp
sbb
pop
mov
push
adc
xor
shr
add
mov
mov
lret
push
jp
fmull
cwtl
xor
pop
mov
enter
data16
mov
mov
xchg
sti
in
gs
fiadds
adcl
push
jae
int
loopne
in
les
or
pop
jl
aaa
into
fldl
sbbl
xor
outsb
add
mov
loopne
push
lea
or
test
mov
xchg
add
imul
ret
loop
cmp
dec
or
loope
testl
xor
in
sahf
xor
enter
xchg
jmp
es
mov
lds
test
cli
cltd
sub
or
outsl
push
cmp
push
jmp
sar
popf
xor
push
sub
inc
sub
popf
xor
subb
mov
mov
lds
jns
iret
stos
mov
push
out
push
in
stc
inc
mov
and
mov
stos
inc
mov
fbstp
cwtl
jns
lret
mov
inc
and
cmc
xchg
inc
fadd
sub
imulb
aaa
into
or
adc
sub
pop
lahf
xor
rcrb
mov
mov
push
addr16
mov
je
inc
rcrl
cld
xchg
xor
inc
out
jbe
push
ljmp
jno
mov
adc
sbb
out
xchg
adc
add
push
movsl
dec
mov
xchg
imul
xchg
test
ret
testl
adc
mov
lods
inc
pop
mov
lret
lret
pop
push
jmp
add
or
cmp
decb
sub
pop
jno
dec
push
fs
aas
push
mov
aam
xor
xchg
mov
mov
pop
fdivrs
addl
outsl
jl
shrb
into
pop
lock
out
xchg
or
ret
pop
dec
popa
mov
xchg
imul
inc
ljmp
negl
out
test
jle
mov
add
add
and
mov
stos
inc
dec
cmc
inc
xlat
es
leave
pusha
lahf
inc
pop
cmc
jne
xor
mov
fnsave
fs
jl
mov
mov
gs
cwtl
push
sbb
test
enter
xchg
mov
jl
outsb
mov
ds
imul
jge
jmp
mov
xor
aad
or
push
test
and
pushf
dec
sahf
xor
mov
ds
jo
fisubl
adc
stos
xlat
js
mov
jle
cmp
dec
fnstsw
sub
push
mov
cwtl
sub
int
xchg
sub
lock
fldenv
dec
outsb
add
cwtl
popf
xchg
sub
mov
test
sbb
or
xchg
mov
mov
cs
and
xor
and
test
dec
in
aam
repz
gs
shrl
mov
cmp
jmp
dec
mov
outsb
add
jno
testl
testb
jae
pop
sahf
push
mov
int
testl
mov
mov
daa
mov
je
pop
mov
sbbl
dec
and
inc
mov
inc
in
lods
inc
or
js
bound
or
in
iret
data16
adcb
and
xchg
mov
shl
xor
cmp
adc
lock
es
push
daa
fidivs
sbb
clc
and
mov
mov
mov
cli
adc
mov
pop
fsubs
or
sbb
dec
xor
pop
adc
add
mov
outsb
out
int
push
mov
enter
sahf
xor
and
out
test
sti
test
sub
adc
cs
mov
outsb
cli
lcall
std
insb
add
aas
jle
outsb
jmp
mov
cmp
ss
mov
shl
or
insb
out
xchg
push
rolb
adc
mov
ret
aad
jp
enter
sbb
dec
sub
out
test
rolb
add
jg
xor
inc
fiadds
int
adc
and
cmp
and
dec
jmp
or
or
push
inc
sbb
repnz
sbb
jne
add
or
mov
xchg
push
or
repnz
cltd
xor
and
pop
inc
roll
add
es
stc
stos
inc
sub
sbb
sti
pop
adc
push
inc
sbb
mov
add
sbbl
setno
ds
jbe
xacquire
and
xchg
sub
pop
xsha1
cmpsb
mov
dec
loopne
xchg
nop
mov
in
dec
jns
push
lods
enter
arpl
dec
dec
mov
stos
inc
mov
negl
ja
adc
sbb
xchg
push
aaa
dec
cmp
shr
mov
dec
cmp
jmp
mov
js
lret
cmpsl
nop
daa
fld1
jmp
out
add
cltd
xor
push
mov
inc
sbb
lds
or
nop
or
loopne
mov
mov
enter
pushf
xor
mov
movsl
loope
jp
xchg
cmp
leave
scas
inc
xlat
ficoms
leave
xchg
js
ret
cmpsb
and
orb
sahf
mov
jno
push
mov
test
clc
daa
pushf
clc
sar
sbb
test
outsb
add
call
sub
cmc
push
in
daa
pushf
inc
fcmovnbe
lcall
sub
cmc
add
xlat
add
xor
in
xchg
sub
lahf
dec
stc
gs
sub
jno
hlt
in
test
mov
mov
inc
jg
sub
dec
jge
xor
imul
inc
lock
gs
sub
mov
ljmp
roll
jb
xchg
sub
xchg
loop
leave
inc
popa
clc
jae
lds
xchg
mov
leave
cmp
xchg
push
pop
repnz
addr16
fildll
pusha
les
fdiv
pop
in
add
cmpl
imul
or
shrb
xor
cmp
push
jge
lds
int3
xor
stc
nop
mov
std
dec
loope
xor
jno
sbb
movl
incl
sub
inc
xchg
ss
lods
addr16
adc
mov
fcmovnbe
outsb
adc
dec
lea
movsl
mov
filds
mov
xlat
shr
or
xchg
and
aam
mov
repnz
in
add
jb
add
lds
pop
scas
loop
mov
int3
push
cli
xor
lcall
add
xor
xchg
lods
inc
movb
mov
jg
sub
xorl
loope
cmp
fdivs
mov
jge
fnstenv
mov
popf
xor
dec
push
movsl
jle
popa
clc
jecxz
sub
int
iret
outsw
out
dec
rcl
mov
xor
jmp
pop
fildl
pop
addr16
cmpsb
add
ret
hlt
aas
lahf
xchg
movsl
adc
push
cs
rorl
mov
in
jecxz
aam
lods
sarl
das
enter
insl
fdivrl
xor
jp
jns
lret
mov
mov
test
fdivrl
out
out
dec
mov
fcomi
das
nop
mov
add
mov
lock
aad
into
addr16
dec
inc
mov
stc
cmp
mov
add
movsl
out
negl
in
sbb
fstpt
jo
jg
add
jbe,pn
subb
fwait
int
or
imul
jae
stc
sub
adc
lret
push
lods
xchg
add
xchg
mov
or
das
sbb
and
outsl
shlb
dec
xor
jl
dec
mov
fwait
sbb
sbb
pop
ret
add
jnp
xlat
sbb
inc
xlat
pusha
outsl
sub
imul
lret
xor
filds
or
fwait
mov
lret
add
xchg
pop
mov
shll
sub
sub
imul
nop
lea
push
mov
or
cmpb
pop
adc
xor
jmp
pop
mov
scas
adc
hlt
stos
mov
pop
lahf
push
enter
pop
js
inc
ret
lds
out
xchg
loop,pn
orb
stos
outsb
jnp
cmp
adc
or
daa
fstps
jns
mov
sbb
xchg
psubusb
pusha
dec
mov
inc
frstor
icebp
cmp
mov
inc
faddl
pop
cmp
xchg
fisubrl
ret
push
mov
jp
dec
adc
xchg
pop
sub
sub
in
loopne
mov
cmc
in
add
in
inc
movb
pop
mov
cld
mov
lret
insl
cltd
ljmp
scas
repz
int3
pop
movsl
fcmovb
out
and
pop
ror
ret
loop
inc
fcmovnu
add
std
loopne
jb
lds
push
loope
shlb
ljmp
ret
lcall
clc
cwtl
das
iret
cmc
push
add
jmp
fnstsw
call
lods
andb
inc
test
xchg
loope
push
adc
sahf
xchg
shll
cli
pop
jns
insl
mov
ds
sub
imul
cmp
dec
lcall
xchg
cmc
jnp
mov
fsub
mov
inc
enter
inc
les
push
mov
call
or
cli
stos
fdivrl
in
lret
or
les
jecxz
ret
in
xor
imull
fistl
push
dec
gs
aaa
sarb
mov
lods
icebp
js
mov
cmp
add
mov
sbb
test
in
addl
push
lods
inc
in
mul
popa
mov
fabs
jbe
jae
movsl
ss
sti
xor
sbb
or
cmp
push
jecxz
mov
insb
mov
inc
in
cmpsl
gs
push
push
aad
dec
xchg
imul
adc
mov
gs
xchg
jb
and
dec
mov
ret
pop
lret
stc
mov
cmpsb
insb
fldl
inc
fcmove
nop
mov
ret
and
in
enter
cmpsb
das
roll
push
or
sti
ljmp
mov
sarl
dec
or
sub
sbb
dec
test
cld
ret
sub
pop
rcrl
xor
dec
das
loope
dec
in
adc
mov
bnd
call
or
stos
icebp
leave
aaa
xlat
out
mov
icebp
scas
test
mov
incl
cmpsb
mov
cmc
sbb
jl
stc
xchg
mov
jo
out
lret
aas
jmp
pop
int
test
jl
daa
fld
stc
push
sarl
sub
ret
add
rorb
clc
ljmp
fcmove
call
xor
jb
xchg
ds
sub
mov
sub
lea
rcll
cld
cwtl
iret
push
test
inc
lret
jne
lock
mov
ret
mov
in
push
mov
ret
cmp
fisttps
nop
mov
std
sbbb
mov
sti
and
push
lret
and
stos
inc
pop
pop
std
jo
jo
inc
adc
lods
inc
arpl
xor
xchg
push
stos
pushw
cmp
push
push
jecxz
pop
jne
dec
mov
ss
pop
cmp
bound
das
rcll
incb
inc
test
push
sbb
jno
pop
sub
fwait
insb
lcall
mov
cli
mov
cmpsb
test
call
jg
adc
gs
xchg
cmpsb
xor
push
int
jnp
out
icebp
cmp
fmul
fistl
int
xlat
jmp
mov
loopne
adc
or
pop
add
mov
hlt
sbb
out
aaa
cmpsb
popa
ja
add
icebp
xor
es
push
xchg
fstl
outsl
add
mov
push
dec
rcll
in
scas
mov
cmp
adc
out
inc
repz
pop
mov
or
sbb
xchg
ja
xchg
popf
xor
xorl
xor
daa
addr16
xchg
aam
push
into
xlat
mov
lds
loopne
les
hlt
aaa
fcmovnb
inc
es
das
repz
movsl
int3
mov
out
xchg
stc
lret
iret
sbb
icebp
mov
out
imul
lods
adcb
jae
lods
rcll
movsl
xchg
push
push
test
rcll
mov
dec
aad
test
cs
cmp
icebp
dec
push
loope
mov
out
mulb
or
js
or
fiadds
xor
js
sbb
adc
jns
xchg
mov
push
std
mov
and
push
inc
rorl
aas
push
clc
xor
cmp
xor
loop
jb
stc
dec
mov
std
cmp
adc
add
lret
addr16
sub
mov
pop
push
mov
add
lea
add
jne
cmp
rcll
sbb
inc
addr16
pop
cld
shrb
dec
in
mov
fcoml
pushf
cmp
pop
lcall
mov
fdivrl
mov
fcmovnu
push
lcall
and
shlb
jo
xchg
sub
rcrl
dec
ret
popf
fdivrl
rorb
sub
stos
or
push
fwait
jmp
cld
ss
cwtl
fidivrl
and
mov
pop
xchg
sti
adc
daa
fwait
inc
pxor
lret
xchg
adc
xor
mov
movsl
xor
out
sub
lods
test
sbb
lret
pusha
aas
adc
fbstp
inc
jmp
push
mov
cld
cmpsl
fnstsw
pop
ret
test
out
loop,pt
jo
aad
aad
or
pop
and
jo
add
pop
mov
adc
xor
pop
lcall
mov
fcoml
adc
ds
and
adc
test
jl
cli
lahf
jmp
and
jno
ret
jle
inc
cmp
mov
lea
sub
jle
xchg
ja
sub
xchg
test
pop
prefetchnta
dec
mov
mov
fisttpl
adc
sbbb
inc
subl
and
sub
xorl
jecxz
jae
jns
mov
pop
fwait
push
and
test
lahf
mov
mov
ljmp
push
fisubs
mov
dec
pushf
js
sbb
cmpsl
mov
int
stos
mov
cld
sub
repz
lds
push
or
or
sbb
xor
mov
xchg
icebp
nop
rolb
test
dec
inc
leave
inc
push
inc
dec
pop
pop
xchg
arpl
add
js
mov
adc
fwait
retw
hlt
pop
mov
mov
jle
mov
xor
mov
cmp
pop
popf
mov
mov
loopne
das
lds
xchg
test
rcll
adc
js
loop
mov
push
ficompl
mov
sbb
push
into
out
jno
xlat
dec
mov
sub
subb
cmp
outsl
dec
loop
cltd
inc
popf
push
pop
sub
mov
adc
sbbb
out
ret
loope
aas
out
testl
or
push
or
gs
push
add
dec
into
fnsave
or
pop
test
and
xor
mov
adc
add
xchg
fdivs
loopne
xor
pavgw
nop
in
ret
mov
xchg
sub
lea
jmp
mov
sgdtl
mov
aaa
push
xchg
mov
rclb
outsl
stos
or
xchg
movsl
testl
jmp
call
loopne
xor
or
push
inc
out
and
stc
daa
inc
pop
fdivl
inc
rorb
pop
stos
pop
xchg
sarl
push
mov
dec
inc
sub
mov
jbe
cwtl
adcl
sub
int
test
in
mov
shll
clc
push
aad
sub
jno
mov
movsl
out
cld
jnp
movsl
push
mov
inc
lret
lret
popa
jmp
mov
es
nop
mov
push
ss
mov
mov
repnz
push
loope
push
lret
xchg
jo
xchg
mov
icebp
mov
xchg
mov
mov
sbb
aad
mov
es
jo
or
cmp
test
test
push
jmp
mov
roll
das
loope
mov
mov
loopne
loop
cli
inc
mov
loopne
push
mov
ja
dec
std
mov
sahf
cltd
dec
sbb
push
cs
sub
pop
rorb
xor
rorl
psubb
lock
fsubl
xor
loop
int3
fs
add
test
stos
pusha
lahf
loop
mov
popf
roll
adc
jmp
push
sbb
bound
cmp
inc
jnp
mov
jg
dec
mov
pop
or
mov
mov
push
push
test
push
and
mov
jmp
into
gs
nopl
je
mov
xor
mov
std
push
xor
push
sbb
jle
imul
movsl
cmp
icebp
xchg
cmp
sub
inc
mov
int
push
pop
out
je
int3
jne
add
les
imulb
daa
pop
sbb
cmp
add
ret
dec
cli
mov
outsb
adc
cmc
sub
adc
mov
stc
inc
sub
cltd
xchg
cmp
outsb
sbb
adcl
dec
sarl
push
out
pop
dec
fwait
pop
aad
ljmp
or
adc
push
roll
inc
rcr
lock
fdivl
push
mov
xor
jae
mov
lcall
mov
out
pushf
nop
out
cs
jmp
cltd
mov
push
cmovge
dec
jno
fimuls
inc
lea
fwait
mov
sub
aaa
cmp
cwtl
fnstenv
dec
xchg
outsb
pop
mov
xchg
xchg
fs
and
mov
jbe
test
test
cmpsl
push
loope
xlat
mov
push
call
out
mov
sti
xor
push
xlat
rcll
loop
jno
xor
bound
xchg
je
pop
arpl
mov
push
xchg
xor
pop
js
sti
cmp
jno
sbb
sbb
aad
sahf
sti
and
jo
push
mov
mov
andl
loopne
out
jge
test
pop
lock
cmp
loopne
pusha
int
inc
push
sbb
cwtl
inc
xchg
imul
pop
push
call
adc
xchg
sti
and
adc
push
cmp
jle
pop
add
movsb
cs
sbb
and
inc
inc
xchg
pop
imul
inc
xchg
sub
mov
stc
fwait
xlat
ds
xchg
mov
jns
xor
jno
and
inc
dec
inc
push
mov
pop
mov
cmc
mov
jp
stos
stos
and
negb
dec
mov
cld
or
xchg
test
push
mov
bound
push
mov
ficoml
add
sbb
mov
sahf
sbb
sbb
mov
sbb
sub
imull
pop
icebp
imul
inc
into
dec
pusha
out
enter
mov
mov
int
in
add
pop
or
test
pop
cmpb
je
xor
xchg
jne
sub
cmpsb
mov
outsl
add
mov
cli
sbb
inc
inc
call
mov
bound
mov
adc
xchg
imul
xchg
pop
fwait
mov
das
jecxz
sbbb
mov
stc
or
mov
cli
cs
mov
fs
test
mov
sbbl
movsl
push
aad
ja
inc
jl
rcrb
push
in
ja
adc
fistl
icebp
inc
shlb
loop
and
shll
cmp
mov
loopne
jecxz
mov
cld
call
test
xchg
sub
aaa
daa
fnstenv
sub
sub
call
xor
and
testb
insl
mov
pop
aad
xchg
into
mov
lds
out
mov
push
or
call
push
pop
add
inc
iret
cmp
mov
insl
jnp
inc
inc
sub
cltd
js
cmp
pop
dec
or
js
loop
dec
cmp
push
xchg
and
lahf
xchg
scas
pop
repz
dec
mov
xor
jl
stc
test
add
sbb
out
and
cli
xchg
dec
call
xor
scas
cmp
pop
in
iret
push
aad
lods
xchg
xchg
scas
pop
adc
jp
or
imul
loop
adc
jecxz
movsl
lds
mov
jne
adc
cmp
jmp
sub
repnz
aam
cmpl
ljmp
fsubr
das
out
jno
mov
les
adc
mov
gs
mov
mov
jae
pop
jo
mov
xchg
je
sbb
dec
rcrl
pop
in
cmp
mov
mov
sbb
test
jl
adcl
ret
fidivs
xor
mull
leave
push
mov
bound
imul
add
xor
test
inc
into
and
xchg
xor
adc
addl
sub
jl
aas
jmp
das
pop
lock
add
xchg
out
mov
dec
or
push
sti
dec
loop
jae
lock
cmp
jle
repnz
in
es
inc
fisubrl
lret
in
push
sahf
mov
inc
xor
adc
ret
in
jmp
fucomip
xor
in
popf
mov
dec
loopne
mov
test
fwait
jg
pushf
test
and
popf
insb
xlat
inc
sbb
idivl
lret
and
xchg
mov
clc
test
cmc
cmp
ljmp
outsl
xchg
out
cmp
and
inc
pop
decb
pop
xchg
stos
push
lods
clc
sbb
inc
lods
mov
mov
mov
leave
aas
dec
lds
sbb
cmp
push
lods
dec
xor
lods
dec
or
xchg
mov
push
rorb
insb
stos
shlb
mov
out
jmp
enter
add
das
fdivrs
ljmp
mov
inc
mov
rcr
fs
in
and
pop
push
jnp
mov
cmp
jno
adc
into
inc
push
movsl
push
rcrl
les
xchg
sti
sub
pop
cmpsl
icebp
mov
jnp
add
push
into
in
jmp
xchg
lods
push
add
and
jbe
and
pusha
popf
call
xchg
sub
jnp
call
cmpsl
imul
stc
pusha
mov
xchg
mov
mov
and
xchg
dec
sub
lods
dec
xor
imul
pop
mov
adc
mov
xchg
lret
stos
add
ficompl
mov
add
adc
xchg
lock
ss
xchg
minps
jae
xor
pushf
push
sub
push
adc
sarb
inc
int
jecxz
push
or
mov
lds
mov
sub
mov
mov
xorb
loop
mov
pop
adc
fists
pushf
and
daa
xor
into
push
sub
leave
lods
mov
add
test
adc
fbld
xor
add
cmp
push
add
das
push
push
push
inc
das
mov
dec
xchg
lahf
ss
inc
shlb
push
push
sub
bound
dec
push
or
jae
nop
mov
xor
xchg
mov
test
iret
xlat
xor
xor
scas
jg
mov
mov
cmp
scas
jb
inc
repnz
cmpsb
mov
hlt
push
jmp
inc
pop
movsb
filds
fidivl
shll
pop
shr
and
cmp
fdivs
jl
and
popa
xor
adc
or
call
and
mov
outsb
sbb
sub
xchg
mov
pop
add
aas
add
push
cli
adcl
out
test
lret
mov
sti
cmp
enter
rcr
push
in
repnz
xor
pop
sub
pop
add
xchg
loope
call
repnz
shl
out
aam
cmp
jns
add
jae
mov
inc
xor
scas
pop
testl
pop
scas
push
jno
jl
jle
stos
das
roll
scas
pop
fmuls
fsubrl
jecxz,pt
andb
sbb
or
mov
or
in
sbb
fsubr
xor
loopne
loopne
loop
lock
call
in
and
cmpsl
mov
and
into
xor
xchg
ss
jmp
adc
callw
mov
scas
fwait
xchg
pop
adc
jecxz
mov
add
push
push
xchg
push
mov
fidivs
stos
dec
lret
shlb
imul
stos
pop
dec
pusha
orl
xchg
jb
sub
push
push
ret
xor
outsb
sub
sahf
xor
loope
push
addr16
inc
inc
jecxz
addr16
cmp
xor
jnp
and
push
sahf
xor
scas
bound
mov
push
insb
xor
popa
icebp
lea
sub
scas
jb
gs
aad
fstpt
into
and
xchg
xchg
push
cmp
pop
into
mulb
inc
fsts
daa
ljmp
and
adc
sub
test
mov
pop
in
mov
sbb
orl
ret
leave
inc
dec
xor
lret
mov
and
lock
insl
in
lret
xor
sbb
aaa
cmp
jl
lret
sub
mov
out
fneni(8087
mov
pop
hlt
cmpsb
ss
and
jnp
aaa
cmpb
mov
jle
icebp
mov
cmp
jmp
ja
xlat
clc
sub
in
push
fiadds
mov
lods
mov
jno
test
out
jno
pop
ret
sahf
xchg
add
jns
lahf
cmp
mov
cld
xchg
fs
cmp
lods
jg
and
jns
push
cwtl
lcall
enter
xor
xchg
rorl
xor
ficoml
insb
mov
cmp
stos
pop
xorb
popa
mov
stc
and
adc
aas
test
lret
lock
mov
mov
ja
fldenv
mov
sbb
movsl
or
fs
cmp
in
or
test
xor
leave
xor
out
push
sti
add
xchg
fsubs
adc
outsl
subps
sub
mov
jle
xor
cmpl
jnp
orl
pop
cmp
pop
in
imul
add
inc
ficoms
jmp
mov
movsb
subb
jmp
imul
push
cmp
clc
jl
lds
inc
sbb
flds
push
pop
fisttpll
push
dec
les
push
sub
outsl
loope
pushl
movsl
mov
xlat
lods
loop
and
arpl
dec
sarb
aam
cmc
sbb
fcomps
inc
push
mov
repz
inc
lcall
jno
mov
inc
and
bound
sti
adc
ret
dec
ret
mov
in
lahf
ss
dec
mov
inc
xlat
lods
retw
mov
or
orl
aas
imul
les
push
daa
mov
xor
das
adc
mov
adc
test
mov
mov
pop
and
shrb
and
pushf
push
jle
fstpl
mov
cmp
insb
push
imul
jbe
out
dec
and
mov
xor
or
test
cltd
js
in
pop
add
sub
cs
cltd
das
mov
out
aas
repz
into
fiadds
pop
or
cmp
aaa
into
dec
pop
sub
mov
in
mov
ret
hlt
std
data16
cs
xchg
sub
test
subl
cmp
mov
rclb
in
test
fidivs
arpl
mov
int
sub
out
sbb
cmp
iret
jno
data16
mov
test
fsubp
je
push
add
sbb
and
mov
fcmovb
push
int3
mov
shlb
mov
popf
loope
pop
lock
or
enter
inc
stos
inc
fcmovnu
inc
ficoms
mov
insl
add
or
jge
shrl
test
mov
dec
add
shlb
shl
bnd
test
das
add
add
sbbb
rcl
outsb
add
jbe
sbb
cmc
mov
jno
and
sub
lret
loop
idivb
call
inc
das
outsl
push
popa
addr16
negb
jno
adc
orb
mov
push
imul
out
and
jbe
jg
aam
jl
push
jmp
popf
repnz
roll
ja
shl
adc
clc
fsubp
push
or
add
out
dec
into
cmp
ljmp
push
push
sbb
iret
add
out
outsl
cmpsl
push
add
js
push
add
lds
rcrb
outsb
mov
mov
xchg
mov
cmp
into
call
movsb
fdivs
ss
ss
jle
gs
cli
iret
mov
es
daa
pushf
fucomi
lods
add
ds
dec
mov
nop
or
sub
popa
sub
jnp
in
pop
xchg
adc
in
repnz
and
sbb
mov
aam
lods
cmc
jne
mov
mov
xlat
xor
jge
and
sbb
adc
pop
outsl
cli
xor
inc
int
rcll
repnz
jl
test
ja
sbb
jge
mov
cmp
dec
dec
ffree
push
xor
and
leave
pop
fwait
jae
jl
loope
xchg
xchg
mov
adc
outsb
aad
es
jl
sub
orb
adc
mov
rep
or
and
in
jge
jmp
inc
inc
mov
movsl
bound
pop
push
add
mov
jp
pop
mov
rcll
sub
sbb
inc
jo
ja
lods
sub
adc
xor
das
mov
test
push
cld
leave
adc
into
push
push
mov
cmpsl
xchg
and
jae
rdmsr
xchg
cwtl
ds
subb
add
pusha
idiv
xor
dec
inc
pop
sbb
fwait
shlb
sub
int3
mov
push
cs
pop
jb
cmp
cmpsl
ds
mov
and
fcmovne
sbb
cs
sbb
ja
sti
aam
out
js
push
ss
jbe
or
sub
pushf
mov
mov
pusha
out
loope
mov
scas
mov
mov
and
jle
test
sub
mov
push
jmp
mov
add
dec
pop
movsl
mov
add
clc
pop
lods
sub
mov
imul
pop
add
sbb
lds
and
xor
sbb
mov
add
sub
mov
xlat
decl
sub
jmp
roll
andb
sbb
dec
loope
out
scas
cmp
ret
pop
ljmp
adc
mov
mov
dec
pop
cmc
cmp
jb
mov
in
adcl
dec
push
xchg
sub
xchg
sub
aad
fsubrs
jbe
sbb
orb
test
and
sub
sbb
cmp
fwait
xor
arpl
int3
ror
les
xor
sbb
jno
vmovupd
idiv
and
in
or
mov
push
and
popf
xchg
cltd
and
adcl
es
adcb
fsts
mov
mul
jmp
jg
inc
cmp
test
xor
cs
inc
sub
data16
mov
sub
popw
jge
dec
xchg
mov
pop
pop
push
add
inc
int3
mov
adc
mov
lods
in
ret
sub
mov
int
imul
dec
aad
push
mov
or
stos
sub
mov
stos
sbb
dec
mov
jp
inc
aad
xlat
push
cmp
imul
test
rolb
add
mov
in
lret
xchg
in
sub
mov
xchg
pop
mov
ffree
addr16
stos
push
xor
sbb
lret
push
jp
jnp
mov
lret
out
sub
xchg
cmp
daa
cmp
sub
insl
repz
add
xchg
mov
xchg
cmp
rclb
or
pusha
jno
jge
sarl
jo
fisubrs
lds
push
cmp
push
repnz
in
das
loop
pop
cmpb
cli
mov
jne
push
mov
xchg
cmp
mov
std
jmp
cld
jo
add
stos
push
jne
push
mov
adc
bound
std
divl
insl
and
lock
jl
push
cli
mov
stos
lds
inc
mov
push
clc
int3
outsb
in
movsb
sbb
mov
jle
jae
cmc
jo
rorl
outsl
bnd
dec
adc
imul
iret
xorl
int
scas
pop
add
mov
addr16
jne
test
test
mov
cli
inc
mov
mov
add
fiadds
and
xor
pop
mov
stos
and
xchg
mov
ss
add
test
shlb
mov
and
or
roll
mov
add
andl
mov
stos
xchg
cmpsl
push
sti
jl
aad
insb
imul
xchg
iret
mov
adc
dec
scas
sub
repz
clc
push
adc
push
lcall
cli
pop
xchg
push
inc
adc
int3
jl
cmp
movsl
and
rolb
pop
mov
jge
jnp
pushf
les
fldt
lods
shrb
xlat
mov
mov
mov
and
ds
sub
shlb
dec
or
adcb
sub
pop
fisubrs
in
or
cmpsl
pushl
int
or
iret
scas
push
sub
push
pop
lods
sub
jno
or
and
or
ljmp
das
cmp
stos
lea
pop
clc
push
jne
out
inc
or
xor
das
or
lahf
xor
stos
sbb
inc
lods
sub
mov
lret
jb
ss
dec
jle
ret
or
sub
jle
cs
addb
cmp
ds
mov
mov
xor
cli
cmp
addl
xchg
inc
out
inc
xor
sub
mov
or
push
pop
sti
xchg
or
dec
or
push
fidivrs
and
les
pop
testb
roll
aaa
and
jb
sub
negl
adc
push
fisubrs
repnz
pop
shlb
push
add
scas
in
or
pop
clc
xlat
push
xchg
inc
stc
or
pop
loopne
gs
jl
insb
aam
xorb
pushf
cmp
sub
pop
stc
dec
push
adc
insl
fs
jge
out
push
add
in
or
pop
clc
iret
push
xchg
inc
hlt
adc
pop
out
fs
jge
outsb
xlat
aad
xor
sub
jb
sbb
dec
dec
adc
adc
mov
inc
movsb
adc
push
jg
cmp
mov
adc
and
push
loop
pop
xchg
mov
loop
in
sub
aam
mov
mov
xor
cmp
popa
rol
push
add
mov
cli
pop
iret
stos
pop
mov
adc
mov
and
dec
jg
pusha
push
dec
push
push
addb
mov
pop
dec
sub
mov
xchg
dec
push
push
mov
cmp
pop
ror
mov
ret
mov
nop
mov
fcmove
xchg
or
popa
xchg
aam
fmul
xchg
push
mov
pop
add
mov
add
orl
add
in
stos
push
add
sbb
xchg
cmp
mov
popa
call
add
flds
fadds
mov
mov
cwtl
or
pop
jae
add
mov
push
aam
sub
inc
sbb
dec
adc
les
dec
adc
pop
mov
sbb
push
lcall
insl
mov
adc
ljmp
adc
lock
jo
mov
cwtl
mov
jecxz
fcmovne
dec
adc
mov
mov
inc
or
orb
mov
out
add
adc
loopne
fmull
rclb
cmp
xchg
lahf
cmp
aas
mov
into
rorl
mov
inc
push
icebp
pop
out
xchg
out
lahf
std
xor
and
out
jb
cmp
aad
pop
fldl
pinsrw
pop
cs
pop
cli
gs
jbe
cvttps2pi
push
lods
mov
subl
inc
jg
fistpl
inc
dec
enter
popf
fnstsw
push
iret
xchg
lcall
add
lods
jmp
add
pop
lret
in
and
mov
test
aam
cmp
leave
xchg
popa
sub
out
outsl
scas
mov
scas
ret
int3
lret
mov
push
sbbl
cmc
cli
out
shl
out
inc
push
jo
cmpsb
sub
popa
lock
lea
mov
jnp
cmpxchg
sub
push
cmp
mov
mov
out
push
aad
add
shrb
outsl
and
fwait
cmp
aas
mov
movsl
sub
fs
sar
into
mov
nop
cld
adc
xchg
inc
mov
cmp
inc
or
xor
out
imul
mov
push
int
xchg
inc
push
sbb
adc
dec
push
je
mov
jg
insl
decl
rcrb
xchg
mov
mov
shl
jo
dec
dec
or
aaa
cmp
addr16
jo
jle
ljmp
xchg
inc
sbb
pop
fadds
jne
sub
cmp
and
movsl
imul
adc
mov
shr
jp
jno
lret
gs
cs
cli
pop
jmp
clc
xchg
adc
pop
push
test
aas
push
out
pop
mov
test
nop
or
dec
aaa
push
imul
sub
pusha
adc
arpl
mov
jmp
adc
push
adcl
cwtl
aam
jb
lret
mov
mov
fsts
inc
or
dec
mov
dec
adc
jnp
sti
mov
test
pop
pushf
aas
xchg
out
fistl
es
pop
pop
cmp
stos
inc
mov
int3
aaa
xchg
mov
aaa
and
mov
and
adc
clc
push
faddl
jo
push
stos
sub
stos
ja
sbb
mov
mov
sti
pop
andl
jns
cmc
ret
mov
push
addl
jg
adc
jge
pop
sub
jge
cmp
lods
dec
rolb
sub
out
outsl
sarl
xor
push
xor
push
push
mov
shrb
test
hlt
fldcw
hlt
lock
push
jmp
je
lret
divb
sub
les
mov
lods
xor
daa
cmp
pop
ss
call
ret
lds
sbb
mov
cmp
xor
nop
lds
and
test
mov
push
repnz
mov
enter
jle
icebp
stos
cmp
leave
mov
add
xchg
sbb
jno
or
mov
shl
imul
xchg
outsb
add
test
fidivl
lcall
jb
dec
add
nop
xchg
pop
jne
fidivrl
outsl
mov
add
fidivs
test
xchg
in
insl
loopne
popf
ds
xchg
inc
mov
es
aam
leave
add
adc
or
lock
push
hlt
pop
push
lods
add
xchg
mov
push
setno
inc
fistpll
and
repnz
add
pop
sbb
aam
sbbb
std
mov
and
in
rol
cmp
pop
iret
adc
push
in
and
lea
push
cmp
outsb
dec
sub
mov
and
addr16
shr
lock
dec
add
xchg
xlat
loope
popf
mov
fcoml
repnz
push
call
and
les
add
in
out
push
adc
insb
repnz
xchg
data16
pop
push
mov
rclb
leave
add
xchg
aas
lcall
xchg
xchg
fdivrs
cmp
add
pop
ja
jge
aas
cltd
in
test
stc
sub
add
icebp
psraw
in
mov
test
lock
adc
add
inc
or
push
sub
shrl
negl
mov
sahf
inc
sarl
rclb
fdivrs
inc
mov
ret
ret
dec
test
jo
mov
mull
sub
sbb
mov
cli
push
sub
cmp
cmpsl
faddp
cs
dec
add
out
nop
xchg
cmp
mov
pusha
idivb
mov
ljmp
and
gs
xor
fsts
inc
mov
push
ljmp
mov
cmp
push
mov
scas
pop
add
mov
fucomp
je
or
inc
jno
adc
adc
jo
icebp
pop
pop
addr16
xor
out
mov
pop
add
gs
sahf
mov
neg
lods
sbb
std
cwtl
inc
std
pop
adc
pop
les
dec
adc
in
lret
mov
add
icebp
hlt
mov
xchg
push
ljmp
ret
push
outsb
push
cli
xchg
test
sub
ss
repnz
mov
filds
xor
mov
and
push
insl
dec
mov
dec
rclb
movsl
mov
movsb
push
push
repnz
adcb
or
sahf
add
xchg
pusha
leave
mov
enter
shll
lcall
mov
gs
icebp
das
sbb
adc
gs
mov
xchg
inc
jne
lcall
insl
rolb
or
or
dec
iret
int
jge
inc
sets
xchg
lds
add
mulb
pusha
inc
adc
xlat
fstpt
mov
xchg
aas
iret
in
pop
mov
pop
shl
sbb
pop
mov
mov
inc
ret
xchg
test
mov
test
dec
jg
addr16
lods
sub
cmp
adc
mov
push
ljmp
xchg
inc
xchg
jne
add
add
int
andb
lods
inc
xorb
cmpsb
aam
mov
mov
int3
into
jge
cwtl
adc
adc
pop
sub
jmp
rclb
pusha
fsubs
iret
fwait
or
xchg
mov
outsl
bnd
movsb
daa
cwtl
data16
ljmp
aad
faddl
inc
out
and
clc
rolb
pop
clc
inc
jl
call
mov
movsl
iret
mov
add
pop
insw
sub
adc
pop
cs
add
fadds
or
pop
cli
jno
ret
imul
push
add
add
cmp
adc
sub
xchg
jle
in
push
add
stc
xlat
orb
mov
pusha
and
jne
pop
ja
insl
adc
enter
in
mov
mov
add
rclb
mov
cmp
gs
sbb
insl
lods
ss
test
jp
hlt
pop
fwait
push
roll
aad
lock
loop
xchg
or
pop
aam
push
pop
inc
mov
cmp
pushf
jae
push
sbb
rolb
jecxz
lret
mov
stos
mov
mul
jae
xor
lods
inc
sbb
jl
cmp
mov
mov
enter
ret
mov
fcoms
scas
in
repz
xchg
dec
adc
mov
inc
push
fidivrs
pop
add
aad
jp
mov
faddl
call
xlat
ja
jne
fistpll
fistps
push
and
cmp
stc
pop
cmp
es
or
mov
jle
out
cli
push
add
repz
frstor
rorb
mov
stos
mov
testl
cmp
xchg
adc
scas
imul
lahf
aas
in
insl
jae
loop
cltd
imul
lahf
test
xor
cld
pop
aad
xchg
inc
jb
push
add
insl
mov
fisubl
les
mov
cmp
xor
inc
pop
jns
mov
pop
mov
lods
int
stc
cmpsb
sub
inc
in
mov
xchg
out
mov
push
mull
xor
inc
sbb
pop
pop
xchg
ja
adc
mov
test
dec
adc
and
and
xor
cmp
clc
mov
je
int
insl
repnz
sbb
push
xor
inc
or
inc
add
andb
mov
gs
or
and
xchg
inc
or
jmp
push
aaa
fdivrs
jne
push
movsb
pop
mov
nop
fsubrs
cmp
aad
in
dec
push
jl
and
mov
sarb
je
enter
outsb
sbb
clc
arpl
scas
test
out
in
jo
repz
push
lods
orb
mov
pop
neg
orl
movsb
leave
mov
pop
mov
cmp
loope
dec
add
scas
rolb
in
lea
add
pop
sbb
addr16
and
jnp
das
hlt
add
movsb
sub
xor
sahf
aad
cmp
add
xchg
adc
xchg
dec
shrl
xchg
cmp
nop
mov
sti
xchg
pop
in
dec
adc
jge,pt
cmp
cs
inc
xchg
ljmp
xchg
or
ret
das
mov
push
dec
paddd
call
aam
adc
sub
xor
mov
cld
in
ficomps
imul
push
sbb
enter
mov
data16
call
std
nop
cmp
pop
and
push
das
popf
aas
or
dec
adc
fbld
inc
jnp
mov
jb
in
xchg
aaa
lods
enter
mov
mov
dec
adc
and
rolb
pop
and
scas
xchg
push
push
dec
int3
mov
mov
xchg
data16
sub
cmp
mov
ja,pt
negb
fnsave
cmp
xor
xor
mov
adc
inc
dec
setge
lock
test
cmp
add
mov
cmpsl
push
cmp
xor
jl
jae
aaa
mov
dec
cmpsb
push
push
gs
xchg
inc
data16
mov
jnp
xlat
mov
mov
dec
or
gs
ds
out
fcoml
jb
pushf
sub
jns
inc
aas
pop
ret
cmpsl
xchg
push
sti
push
mov
dec
xlat
cmpb
stos
sbb
pop
loope
dec
adc
negl
mov
inc
push
insb
jmp
popf
lods
jnp
lods
sub
fs
mov
aas
xor
mov
mov
sub
and
stc
bound
shlb
int3
mov
lods
inc
adc
jae
xchg
fsub
inc
adc
pop
repz
stos
jg
fmull
scas
or
out
je
inc
mov
ficoms
enter
adc
cltd
enter
es
sti
pop
adc
enter
cltd
inc
add
push
orb
in
gs
jp
adc
sub
xchg
iret
mov
mov
cwtl
sbb
dec
or
jp
and
jae
jmp
dec
push
jl
loopne
cmpsb
insl
mov
inc
mov
sbb
xchg
xlat
js
sub
xlat
js
and
lcall
outsb
out
notl
mov
xor
and
fucom
xchg
cmp
or
jg
mov
mov
ret
xor
cs
inc
push
or
sahf
inc
nop
fnstcw
lahf
aas
pushf
aad
aad
icebp
adc
in
pop
sti
cmp
enter
adcl
push
sbb
subl
cmp
mov
mov
adc
jo
scas
or
cs
or
fidivrl
orl
push
loope
rclb
fiadds
daa
xchg
sahf
inc
fbstp
sub
mov
pop
cld
mov
movsb
mull
lcall
popf
loopne
fisttps
adc
xor
pushf
xor
push
sbb
push
and
pop
roll
sbbb
adc
mov
ds
lds
sahf
stos
adc
cwtl
xchg
inc
and
sbb
nop
add
jecxz
sbb
or
push
into
mov
jo
pushf
lea
mov
je
es
push
sub
jo
sti
pop
cmp
syscall
sub
pop
pop
arpl
mov
sbbl
push
out
push
inc
dec
out
adc
dec
sub
sahf
push
cmp
push
push
jle
push
mov
negb
mov
cmp
xor
inc
adcl
mov
data16
in
jne
adc
pop
scas
jno
leave
bound
or
inc
xor
sbb
push
repnz
insb
xchg
adcl
out
je
leave
inc
or
xchg
out
sub
les
int
jmp
jge
mov
mov
lahf
add
sbb
ja
pop
xchg
jo
push
fiaddl
and
fldl
les
rcll
mov
dec
add
cwtl
inc
mov
scas
out
mov
mov
xchg
mov
scas
ss
orb
xor
adc
stos
and
add
mov
ljmp
and
sub
push
imul
loop
je
loope
inc
jne
sub
lcall
scas
sub
lcall
inc
adc
inc
das
test
pop
fdivrs
popa
add
sbb
cwtl
cmp
mov
out
sub
bound
stos
sub
sub
pop
loop
dec
adc
test
pop
xor
cmpsb
xchg
and
mov
inc
cmpsb
in
jbe
xchg
orl
out
test
xorl
push
cmp
fiadds
adc
lret
xchg
push
inc
add
mov
pusha
andl
sbb
mov
push
out
insl
or
roll
mov
pusha
imull
lret
or
push
in
dec
adc
test
fdivl
adc
arpl
pop
imul
or
psadbw
cwtl
inc
mov
lods
push
cli
xor
sub
mov
push
sti
inc
cmpsb
in
jb
xchg
lds
xchg
outsl
out
rol
out
pusha
pop
or
pop
js
push
mov
lods
xor
xor
and
mov
jmp
push
mov
out
jo
movsl
mov
push
in
and
dec
fildl
lds
lea
cmp
stos
xor
xor
mov
or
mov
jmp
xor
xchg
mov
scas
mov
cltd
jecxz
mov
dec
jne
popa
mov
or
lods
jmp
mov
mov
lods
std
adc
or
out
mull
mov
fnstsw
aam
push
aad
out
xchg
mov
jo
jb
scas
in
lcall
pop
gs
mov
cmp
lahf
scas
call
pop
arpl
sbb
cmpsb
loope
xchg
and
sub
or
or
sbb
inc
enter
push
in
adc
inc
aaa
pushf
pop
fwait
daa
lods
jae
mov
lret
pavgb
xchg
mov
lods
fnstsw
in
sbb
cltd
inc
adcl
jmp
inc
or
jb
movsl
xor
imul
and
or
push
mov
lret
insl
loope
test
in
outsb
int
inc
pcmpgtw
jle
aas
jg
fstps
test
xchg
adcb
ljmp
lods
cmc
mov
das
cmp
lcall
inc
push
in
sub
xchg
add
pop
mov
cmpl
inc
or
cmp
mov
xor
lods
cli
sub
enter
enter
movsl
stc
adc
mov
cs
pushf
imul
pushf
mov
daa
lods
fmull
lods
ss
add
mov
in
jne
dec
inc
ljmp
outsb
in
jne
stos
lods
xor
push
push
xchg
aaa
cmpsb
xchg
xor
shll
sub
rcrl
push
cli
js
lahf
inc
out
insb
stos
mov
mov
mov
push
push
roll
inc
or
sub
cmp
mov
cmpsb
cmc
mov
dec
mov
push
cmp
popf
inc
add
insb
mov
int3
nop
test
add
push
mov
test
es
repnz
mov
cld
bound
loop
push
mov
jg
orl
mov
and
pop
adcb
xchg
inc
andb
lods
es
xlat
movsl
cmp
add
inc
sbb
mov
fwait
mov
out
lock
hlt
adc
data16
mov
jne
dec
push
mov
pop
stc
ljmp
or
push
jns
aam
mov
shl
aaa
sahf
sbb
xchg
aad
dec
adc
push
fiaddl
test
ret
mov
lret
fldl
sbb
dec
fdivr
jp
sbb
push
mov
mov
je
dec
mov
mov
test
xor
sbb
mov
or
xchg
jp
sub
push
add
xor
xchg
test
mov
repz
mov
sub
loopne
pop
cmp
rolb
dec
lret
in
xchg
fwait
xor
hlt
push
jmp
gs
adc
movb
fwait
xor
popa
out
and
cmp
adc
loopne
adc
lock
in
push
int3
xchg
adc
les
jmp
std
lahf
cs
jmp
mov
sbbb
mov
push
jns
enter
inc
adc
cltd
or
mov
xor
sub
cmp
scas
gs
stc
mov
fwait
xchg
out
xor
int
cltd
add
mov
das
inc
pop
iret
xchg
or
test
sbb
neg
inc
or
fidivrl
mov
scas
xor
fdivl
and
xchg
cmp
mov
cmp
ss
lret
xchg
xor
pop
add
or
xor
and
or
data16
jge
jg
push
loopne
dec
or
rcr
jle
adc
fwait
imul
lds
jmp
cmc
pop
aad
insb
call
pop
lds
cmc
xor
sub
test
in
push
sub
ror
or
daa
scas
or
pop
js
or
std
cmp
xor
and
dec
aad
pop
popf
je
das
mov
data16
outsb
jmp
scas
xchg
inc
add
pusha
jno
or
pop
out
mov
and
cmp
leave
and
fmul
aas
mov
scas
sbb
popf
mov
jnp
lds
push
push
dec
or
popa
nop
daa
xchg
in
pop
pop
out
xchg
cmp
clc
mov
xchg
mov
mov
xchg
shl
pop
mov
jo
sbb
test
and
pop
push
cmp
sub
jle
jg
cmpsb
mov
mov
sarb
pop
sbb
and
jns
sbb
ja
outsl
jmp
xor
sahf
pop
in
lea
sarb
and
daa
lock
mov
jmp
cmpsl
in
aam
xorb
push
cmp
jp
mov
mov
push
add
xchg
xchg
or
stos
or
test
mov
pop
scas
and
cwtl
inc
mov
push
sbb
inc
lcall
bound
cltd
push
int3
out
imul
sbb
pop
enter
cltd
push
jb
adc
lods
sub
dec
mov
jmp
lock
ljmp
fpatan
mov
inc
mov
sbb
dec
daa
scas
lock
pusha
inc
loop
pop
seta
test
pop
xchg
cmp
dec
lea
push
es
loop
popf
inc
dec
cmc
mov
mov
insb
cmp
js
xchg
inc
and
pop
and
push
add
mov
imul
call
in
lea
icebp
aad
inc
shrb
mov
repnz
fisubrl
xchg
inc
test
lods
sub
bound
sbb
mov
movsb
inc
push
cmp
mov
and
dec
and
cmc
gs
or
sahf
popw
cwtl
cmp
aaa
pop
stc
hlt
and
dec
daa
push
mov
mov
lea
xchg
inc
std
xchg
aam
call
mov
pop
loop
xchg
je
les
mov
pop
adc
mov
fbstp
in
pop
cli
addr16
sbb
xchg
lods
ds
mov
movsl
cmp
movsl
sbb
into
dec
movb
mov
mov
movsl
in
jae
adc
sbb
push
std
dec
into
xchg
jnp
mov
add
push
shrb
xchg
aaa
loopne
divb
stc
lret
mov
clc
pop
pop
xchg
mull
aad
or
pop
outsl
in
xor
loopne
pop
outsl
test
lea
insb
add
jmp
xchg
fdivrs
jmp
pop
sbb
sbb
inc
push
ja
pop
fwait
adcl
sbb
scas
xor
fidivl
push
add
or
cld
stos
aas
cwtl
fstpt
cmpsb
aam
jge
jno
cs
fidivl
scas
es
loope
std
lcall
pxor
data16
mov
stc
push
jns
cmp
cs
push
ficomps
lods
add
push
xchg
cmp
std
mov
dec
jg
enter
mov
xchg
aaa
inc
mov
xchg
cmp
add
mov
les
sub
xchg
mov
jmp
dec
gs
xor
psrlq
sub
insl
or
mov
jp
mov
inc
and
mov
xchg
out
jno
sbbb
leave
pusha
addr16
imul
in
int
sti
pop
xchg
push
jne
int
xor
fdivs
lahf
in
pop
mulb
idivb
popf
adc
movb
stos
clc
cmc
fs
mov
dec
xchg
sub
popf
inc
jg
xchg
int
bswap
repz
lret
enter
das
adc
sub
lea
lret
push
call
std
cwtl
inc
lds
xchg
inc
push
adc
in
insb
mov
mov
stc
pop
cmpsb
stos
cwtl
cmp
mov
mov
add
or
dec
pop
sbb
iret
scas
dec
adc
popf
jg
push
das
into
jg
pop
aas
push
std
inc
nop
insb
cmc
dec
xchg
xor
add
push
mov
pusha
lea
stos
cmp
lods
push
das
stos
ss
lods
and
scas
je
mov
mov
daa
cmpsl
pushf
add
fnstsw
sbb
mov
bswap
mov
pushl
jg
and
pop
std
xchg
out
jne
out
xchg
lds
mov
jp
cwtl
aaa
push
outsb
mov
hlt
mov
fldenv
stos
rolb
sub
and
mov
sub
stc
pop
adc
push
rcr
dec
test
adc
rolb
dec
mov
inc
adc
gs
sub
js
int3
fstpt
je
int
fnstsw
ja
and
mov
scas
nop
cmp
mov
mov
mov
mov
and
insb
dec
push
ss
in
outsl
outsl
and
into
in
outsb
repnz
lods
sub
xor
mov
sub
stos
adc
loope
inc
std
popa
xor
pop
add
sub
jge
push
add
mov
add
jmp
dec
out
lcall
fwait
les
cmp
pop
xchg
cmp
lods
popf
inc
mov
lods
mov
iret
cmc
ja
loope
loop
pop
in
sub
cmp
mov
or
add
fwait
inc
push
into
mov
pusha
lock
scas
mov
xor
inc
fcoms
repnz
adc
sub
stc
ss
inc
call
ja
shrb
mov
ljmp
enter
jge
jecxz
push
adc
or
dec
pop
idivb
xchg
sub
lahf
flds
or
jno
imul
pandn
cmp
add
mov
inc
adc
scas
fstpt
pop
es
imul
or
mov
aam
nop
inc
add
std
popf
fstpt
call
xor
pusha
scas
lret
mov
repnz
push
cmc
lock
mov
out
adcl
xor
fs
dec
or
mov
call
mov
fnstcw
mov
imul
add
pop
lea
je
movsb
aam
dec
mov
mov
inc
fstl
mov
or
lret
imul
add
jl
fistpll
out
test
or
cmpsl
dec
lahf
inc
sahf
mov
or
sar
gs
arpl
test
es
lods
inc
xor
dec
btr
out
xor
jp
lods
daa
das
mov
shlb
in
mov
shl
mov
lcall
iret
bound
push
in
scas
sub
jecxz
and
fnstcw
mov
cmp
mov
das
or
in
dec
adc
inc
sub
out
push
into
jns
mov
mov
mov
into
arpl
mov
fldl
movsl
mov
in
test
xor
pop
jg
add
add
scas
push
dec
push
mov
stos
xor
scas
lret
sub
jp
push
testl
dec
sahf
aas
sbb
sbb
mov
stos
xchg
aaa
jge
cmpsb
daa
or
in
sahf
pusha
in
mov
mov
outsb
add
cmp
cs
test
pop
lret
stos
mov
ss
sti
push
in
pusha
jmp
cltd
inc
cs
lea
push
xlat
fbstp
mov
ljmp
or
jmp
neg
xorl
aam
out
xor
imul
sub
rcrl
addr16
add
xchg
mov
test
mov
cli
sub
sub
pop
repz
dec
dec
fistpll
jp
push
data16
rorb
test
and
mov
adc
cmp
aam
fs
rclb
repnz
fsts
cmpsl
or
cld
xchg
jno
lds
mov
jge
jecxz
in
iret
adc
aaa
push
in
push
mov
jbe
cmp
push
lret
cld
das
mov
popa
sbb
into
gs
add
pop
ret
pop
mov
sub
mov
inc
jp
mov
cwtl
int3
inc
mov
gs
dec
or
xor
jo
sbb
ret
mov
insb
in
rclb
hlt
mov
imul
test
out
stos
xor
fisttpl
sbb
sub
dec
insb
add
mov
jbe
cmp
test
es
xchg
sub
mov
fistps
shrl
in
add
xchg
and
fcoms
sub
sub
pop
repz
ss
push
mov
sbb
fnsave
cmp
aam
bound
repnz
xlat
adc
jo
lds
sbb
lods
jecxz
rclb
push
add
push
out
and
mov
mov
fistl
pop
cli
cs
pusha
sbb
jp
or
cwtl
lahf
aam
test
rcrl
repnz
or
inc
jns
shrb
inc
fdivrp
mov
adc
sbb
cltd
xor
test
mov
ret
hlt
mov
insb
loop
rcrl
hlt
mov
push
adc
in
test
sbb
aas
cli
dec
in
popa
cmp
xchg
dec
insb
add
pop
out
in
mov
roll
test
and
xchg
sub
inc
pop
ja
mov
ficomps
shrl
in
add
test
and
xlat
nop
ds
clc
sub
sub
pop
repz
dec
loopne
xor
addr16
mov
sbb
fdivl
cmp
aam
popa
xchg
rcrl
repnz
adc
outsl
sub
lds
sbb
stos
loop
rclb
int
add
xor
out
and
or
jae
movsl
fsts
pop
stc
sub
dec
pop
sbb
jnp
jg
data16
add
add
and
push
adc
inc
ja
shrb
inc
fdivrp
mov
adc
sbb
dec
or
sbb
shlb
loope
rcrl
cmc
mov
fbstp
push
adc
jmp
xor
fmuls
mov
stc
dec
out
pop
cmp
nop
dec
insl
add
mov
out
loop
mov
rolb
ja
xor
push
xchg
sub
inc
pop
jbe
mov
fcoml
shrl
jmp
lcall
and
aad
aas
shl
ret
pop
hlt
adc
loopne
xor
adc
addr16
xchg
sbb
cmp
aad
pusha
xchg
rcrl
repz
aad
test
cmp
xchg
insl
daa
das
pop
mov
mov
jns
in
loopne
rclb
int3
imul
xor
arpl
mov
push
test
mov
test
movsb
xlat
xchg
sub
mov
clc
sub
jl
jge
scas
insb
add
add
or
inc
jne
shlb
inc
fdivrp
mov
adc
sbb
dec
or
sbb
mov
xlat
outsb
loopne
rcrl
testb
push
adc
test
xor
xlat
or
cmp
push
out
pop
cmp
mov
add
loopne
mov
iret
add
xor
stos
inc
and
sub
inc
enter
mov
ficoml
shrl
ljmp
cmpl
movsb
rorl
sub
and
inc
dec
loopne
xor
cltd
addr16
xchg
sbb
fidivrl
cmp
insl
pop
xchg
rcrl
hlt
mov
aam
test
imul
push
mov
mov
js
in
fidivrs
rorb
lret
insb
add
xor
popa
push
mov
push
xorb
jno
inc
mov
vdivsd
sub
jge
jnp
lods
imul
into
in
test
mov
or
inc
jae
shlb
fdivp
mov
adc
pop
data16
dec
pop
pushf
xor
imul
out
lods
fsubrs
xadd
add
mov
fbstp
push
adc
xchg
out
xor
or
cmp
push
call
mov
push
jnp
pop
out
ficomps
or
and
sub
cmpsb
mov
fcoms
shlb
ljmp
jg
and
rorl
sub
and
pop
notb
inc
dec
fbstp
jge
gs
data16
enter
mov
fidivrl
cmp
xlat
outsb
pop
nop
rclb
cmc
mov
aam
stos
add
es
push
mov
mov
js
out
fdivrl
iret
or
cs
in
pop
push
mov
push
xorb
stos
inc
mov
vmaxps
es
pop
sbb
jle
jns
gs
imul
mov
or
inc
jno
shlb
inc
fdivp
mov
adc
inc
push
popf
xor
test
cltd
pop
mov
cmp
lods
fnstenv
or
testl
xorl
aad
sbb
cmp
push
call
mov
push
jp
pop
out
fstpl
jbe
xor
stos
inc
and
sub
mov
xlat
xchg
out
xbegin
add
test
and
rorb
sub
and
pop
notb
inc
dec
fbstp
jge
fs
data16
movl
mov
cmp
xlat
outsb
pop
pop
push
sarl
mov
fidivs
rcll
stos
add
cld
xchg
push
mov
mov
ja
out
fstpt
iret
or
insl
add
sub
mov
dec
jg
or
rclb
pop
mulb
out
dec
js
gs
push
pushf
fwait
lret
in
cmp
and
dec
push
inc
fnstcw
jo
shlb
inc
fdivp
mov
adc
inc
add
test
cwtl
pop
mov
cmp
stos
fnstenv
or
pop
ds
testl
xorb
lret
sbb
aaa
cmc
push
call
mov
push
jns
pop
out
fcompl
jbe
das
out
stos
inc
and
sub
movsb
mov
xchg
out
not
addr16
add
test
and
iret
mov
mov
fistps
adc
fbstp
adc
xchg
data16
movb
sbb
mov
cmp
xlat
outsb
pop
mov
push
sarb
mov
fidivs
rclb
stos
add
xor
push
mov
mov
jbe
out
fidivrl
iret
or
insl
add
sub
in
pop
sbb
and
je
mov
stos
inc
mov
ret
enter
mov
push
push
out
dec
ja
gs
lret
cld
mov
or
outsl
sub
mov
roll
mov
adc
inc
add
xor
test
xchg
push
mov
cmp
stos
fnstenv
or
pop
cmp
pop
fbstp
push
adc
xchg
in
xor
roll
push
call
mov
push
js
pop
out
fistpl
jbe
cs
stos
inc
pop
push
xchg
sub
mov
out
addr16
add
test
mov
into
mov
mov
ficomps
cmovb
jae
jge
bound
xor
xlat
mov
cmp
outsb
pop
rclb
cmc
mov
rcll
stos
add
xchg
and
enter
mov
jne
out
fnstcw
iret
or
insl
add
sub
pop
sbb
scas
outsb
stos
inc
mov
ret
hlt
and
jle
jbe
gs
add
cmp
and
dec
or
fnstcw
pop
pusha
testl
adc
inc
add
sbb
mov
cmp
test
rcrl
testl
xorb
lret
sbb
xor
push
cmp
mov
push
ja
pop
out
ficompl
jbe
sub
dec
xchg
sub
mov
out
cmc
shlb
out
pushf
pop
dec
out
test
and
int
inc
fdivrs
fstpl
push
inc
dec
fbstp
jge
popa
xchg
data16
les
test
pop
mov
cmp
xlat
outsb
pop
mov
push
mov
jne
rclb
stos
add
cld
xchg
and
enter
mov
je
out
fdivrs
iret
or
insl
add
sub
pop
sbb
scas
insl
stos
inc
lahf
iret
xchg
sub
ror
repz
jle
jne
cmpsl
addr16
cmp
and
dec
or
cmp
sub
sahf
pop
pusha
testl
adc
inc
add
sbb
mov
cmp
test
jo
or
pop
cmp
testl
jg
std
xchg
loop
xor
roll
sbb
xor
push
call
xchg
jbe
pop
out
fsts
jbe
sub
stos
inc
sbb
ds
pusha
jo
mov
rcll
shlb
in
pushf
push
dec
out
test
and
int3
mov
mov
fcompl
or
jge,pn
pusha
xchg
data16
ret
sbbl
push
pop
cmp
outsb
pop
mov
push
mov
jne
iret
adc
and
enter
mov
jae
out
xlat
cmp
or
insl
add
sub
pop
sbb
lods
insb
stos
inc
sahf
into
xchg
sub
ror
repnz
jle
je
cmpsb
add
in
cmp
and
dec
or
cmp
popf
pop
pusha
testl
adc
inc
add
sbb
mov
jo
or
pop
cmp
testl
jle
std
xchg
loope
xor
rolb
sbb
xor
push
call
xchg
push
jne
pop
out
fcoms
jbe
sub
stos
inc
sbb
xchg
sub
leave
pusha
outsl
mov
out
ret
addr16
inc
out
test
and
lret
mov
mov
fistpl
or
dec
fbstp
jge
pop
xchg
data16
ret
xor
aam
push
push
aaa
mov
outsb
pop
mov
push
mov
fstp
jne
into
adc
bound
xor
push
sbbl
mov
push
out
aad
iret
push
lds
mull
push
in
pop
sbb
or
int3
xchg
sub
mov
mov
push
adc
jg
jb
data16
fs
popf
xchg
divl
or
dec
or
cmp
rcrl
dec
fucomip
lods
jg
fimuls
addr16
aas
lcall
sbb
push
mov
cmp
movsl
fnstenv
pop
ret
clc
testl
jl
xchg
loopne
xor
into
add
call
test
push
jae
pop
lock
xchg
lea
clc
ja
sub
stos
inc
sbb
jle
leave
pusha
insl
lahf
mov
rorl
shrl
loop
pushf
adc
xchg
and
lret
fdivs
fstps
or
dec
loopne
sub
pop
nop
addr16
jle
xor
sarb
cmp
xlat
outsb
push
mov
pop
mov
jbe
int3
adc
popa
push
xor
dec
sbbb
mov
push
out
aam
rolb
es
out
push
push
lea
js
or
imul
pusha
out
push
mov
push
psubsb
jno
addr16
popf
xchg
out
test
mov
mov
dec
push
inc
fidivl
imul
clc
mov
jg
fmull
popf
xor
pusha
xchg
xorb
jo
push
ret
pop
cmp
testl
jp
call
int3
add
mov
in
push
call
test
outsl
push
jno
pop
icebp
xchg
lea
idivl
sub
stos
inc
sbb
sub
imul
jle
icebp
shrb
loopne
pushf
adc
xchg
and
leave
test
mov
sub
sbb
pop
testb
dec
loope
sub
pop
vprotb
fwait
xor
sarb
cmp
xlat
outsb
push
mov
pop
mov
fneni(8087
ja
lret
sti
cs
xchg
pusha
sbb
leave
dec
sbbl
lahf
sarl
roll
outsb
add
push
adc
and
ja
or
cltd
lret
cld
mov
mov
dec
or
shrl
pusha
push
popf
xchg
ret
out
xchg
mov
mov
inc
add
fidivl
push
popa
clc
xchg
jg
fimull
add
sti
popf
xor
pusha
xchg
xchg
dec
mov
cmp
mov
les
hlt
testl
js
add
lret
mov
in
push
call
cmpl
push
jo
pop
icebp
aad
lea
idivb
sub
stos
inc
pop
dec
xchg
sub
push
mov
iret
mov
jle
lock
filds
xchg
and
enter
mov
sub
sbb
pop
testb
dec
loope
sub
pop
mov
mov
loopne
sbb
add
cmp
xlat
outsb
push
xchg
pop
mov
ja
leave
adc
pop
sbb
leave
dec
sbbb
insl
push
out
sarb
roll
shrb
and
out
push
adc
or
cwtl
leave
xchg
sub
mov
mov
dec
or
jg
outsl
shrl
pop
push
popf
nop
ret
hlt
mov
mov
inc
add
xor
sub
cwtl
push
popa
clc
xchg
jg
imul
sub
xchg
xchg
dec
mov
cmp
mov
les
repz
ja
add
leave
push
mov
jmp
call
cmpb
icebp
aam
lea
cmc
js
daa
in
inc
push
dec
xchg
sub
imul
imul
inc
lock
and
movl
pop
testb
dec
loope
daa
jge
pop
lea
mov
filds
push
add
movsb
cmp
xlat
outsb
push
xchg
pop
mov
fchs
ja
enter
sub
xchg
pop
sbb
leave
dec
jg
mov
insb
push
out
sarl
roll
mov
pop
out
push
adc
or
xchg
enter
mov
mov
dec
or
jg
outsb
shrl
pop
push
popf
pop
out
xchg
mov
mov
inc
add
xor
ret
xchg
push
popa
clc
test
jg
fmuls
imul
sub
push
nop
dec
mov
cmp
lahf
fnstenv
add
pop
repnz
jbe
add
enter
cs
cmpl
icebp
rorl
js
es
inc
adc
ss
pusha
push
mov
jle
out
shrb
fldl
xchg
mov
movb
ret
sbb
pop
testb
jge
pop
mov
mov
fiadds
push
pushl
movsb
cmp
fsubrs
test
pop
mov
testb
adc
clc
sub
xchg
pop
sbb
lret
sbb
scas
imul
iret
cmp
add
pop
out
push
adc
or
xchg
xchg
sub
mov
popa
jmp
or
cmpb
push
mov
and
movsl
inc
add
fs
xchg
push
stc
test
adcb
or
cmp
sahf
xor
mov
push
jge
movsl
cmp
sahf
fidivl
add
pop
xor
clc
and
jns
inc
push
lods
jne
add
sti
push
mov
jmp
cmp
jg
jo
insl
mov
mov
and
lods
inc
adc
xchg
sub
addr16
mov
lret
mov
jg
in
shrb
faddl
popf
or
cs
pop
xchg
push
movsl
les
sub
push
shll
add
dec
loope
and
push
xor
int3
mov
cmp
fnstenv
add
mov
testl
imull
xchg
pop
sbb
dec
jnp
mov
push
jmp
mov
pop
lock
jg
push
mov
les
out
mov
dec
or
cmpl
pop
or
out
lods
es
inc
incl
arpl
stc
xorb
pop
aad
push
cmp
sahf
xor
lea
push
jnp
cmpsb
cmp
into
add
pop
xor
clc
and
add
leave
xchg
insl
mov
call
and
test
ret
rcrl
arpl
mov
es
cmpsb
dec
jb
mov
pop
lea
test
out
outsl
lods
pop
xchg
shll
push
push
rorl
sub
lahf
xchg
sbb
ss
loopne
pop
mov
and
sub
stc
xchg
sbb
lds
pop
xor
sub
mov
in
adc
test
inc
outsb
push
jno
and
je
cwtl
imul
sbb
jns
jns
pop
loope
in
insb
shll
loop
pop
sub
push
rclb
lahf
sub
popa
ds
and
icebp
adc
nop
into
ljmp
mov
jp
shll
insl
out
push
xor
sub
sub
sbb
stos
in
mov
xchg
rorl
or
out
mov
ljmp
push
fcompp
mov
shrl
xchg
int
push
aad
lret
pop
mov
xor
ljmp
clc
and
cmp
push
dec
jne
or
icebp
or
stos
call
xchg
jl
in
aas
fsubl
daa
in
mov
js
add
or
xchg
pop
xchg
fwait
aas
and
or
pop
orl
dec
in
mov
scas
xor
push
out
fdivrs
int
xchg
adc
dec
jo
pop
inc
testl
bound
imul
das
inc
arpl
test
push
push
popa
xchg
dec
sub
psrld
fdivrl
xor
dec
fsubrl
push
sbb
or
sti
xor
je
or
cmp
dec
in
add
shlb
pop
sub
enter
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
pop
pop
cli
std
aaa
and
in
mov
jae
and
inc
fstl
mov
mov
inc
jno
sub
pop
cmp
sbb
call
mov
ljmp
fsts
outsb
nop
push
pusha
xchg
int3
sbb
in
jnp
bound
popf
in
lret
cmp
jp
inc
mov
lods
pop
jb
xor
cmp
cmc
push
nop
es
add
mov
loope
std
insb
jno
jg
mov
xchg
les
rclb
xchg
fldenv
test
popf
cmpsl
mov
mov
push
mov
loopne
mov
outsl
jbe
and
rcrb
test
in
js
mov
push
int
mov
adc
in
inc
cmp
repz
inc
pusha
xor
sbb
sahf
jecxz
dec
and
popa
lahf
out
aas
ss
jmp
ss
ss
add
rcll
aaa
and
dec
xor
pushf
jno
orb
test
andl
stos
push
adc
mov
repnz
lret
stos
daa
sub
sub
es
cmp
pop
inc
add
arpl
aas
lods
loope
es
xor
aad
insl
ds
dec
scas
or
mov
push
loope
cli
xchg
out
fstps
outsb
mov
sub
mov
add
xchg
lods
push
les
dec
fisttpll
sbb
fcoml
dec
jns
ja
adc
jns
cmovb
mov
xor
js
xchg
adc
mov
xor
mov
aam
into
in
mov
xor
push
stc
pop
sub
sub
mov
ja
cmpsl
xchg
cmp
loop
xorl
pop
icebp
sbb
lcall
mov
mov
popf
adc
std
dec
mov
push
and
testl
cld
jge
pop
cli
dec
jne
push
push
jp
pushf
cld
jae
push
mov
jne
and
xchg
push
test
shll
mov
add
push
and
fucompp
loope
mov
je
pop
cmc
ficoms
inc
lret
xchg
imul
std
iret
adcb
dec
sub
mov
aaa
bound
jne
int3
and
xchg
inc
xchg
aas
and
nop
ja
jno
jmp
call
lahf
mov
out
dec
js
cmc
xlat
mov
cmp
rcll
call
fsts
ficoml
ss
rorl
out
mov
aad
pop
aas
inc
bound
sub
rclb
and
pop
pop
sub
div
cmp
jb
call
xor
pop
push
mov
loopne
and
dec
int3
cmp
loopne
adc
mull
cmp
addl
mov
jnp
loope
xchg
cs
and
or
dec
mov
adc
mov
test
xchg
nop
xchg
sti
jae
jno
add
add
leave
fwait
or
push
ljmp
fidivl
scas
mov
cmp
test
xchg
pop
hlt
test
cmpsl
pop
fsubrl
push
xchg
jp
stos
test
or
push
stos
adc
mov
cmpsl
pop
mov
mov
int
mov
cmpsl
iret
xor
jbe
adc
sub
add
mov
loopne
pop
pop
leave
adc
push
enter
sti
aaa
lret
add
jns
in
and
js
and
cltd
addr16
ljmp
adc
pusha
add
add
sub
jecxz
lock
js
les
xor
into
test
shrb
jle
adc
mov
inc
mov
mov
out
fcmovnu
aad
pop
jg
cwtl
jnp
nop
cmpsl
pop
outsl
movl
in
sbb
mov
push
jl
cmc
dec
popa
pop
cmp
sub
pop
es
sub
cmpsl
in
mov
scas
insl
in
mov
inc
dec
mov
int3
lcall
push
sbb
out
jb
and
dec
push
gs
add
and
adc
jo
cmpsb
cs
fcomps
and
xchg
push
clc
shll
pop
cmp
xor
addb
clc
mov
jb
cmp
jecxz
mov
mov
jb
push
cmpl
push
inc
inc
stos
sbb
cmp
mov
lds
push
out
adc
lods
or
mov
lds
popa
out
xchg
insl
cmp
xchg
jecxz
lods
inc
sub
sub
inc
dec
cmpsb
jp
pop
fwait
mov
cmpsb
shlb
dec
lahf
cmpsb
xchg
repnz
pop
and
cli
jg
pop
or
or
lock
imul
mov
inc
sub
sub
mov
movsl
xchg
fmul
divl
pop
cmp
out
nop
sbb
pop
push
sbb
sub
dec
pop
or
rorb
mov
cmp
mov
scas
mov
dec
mov
daa
pushf
add
mov
inc
std
inc
dec
aas
ficomps
scas
xor
mov
test
popf
aas
mov
mov
and
push
mov
aad
jg
pop
pop
inc
fnstcw
jl
mov
mov
sbb
mov
sahf
mov
popa
mov
jge
cmc
jns
push
pop
mov
xchg
jno
mov
mov
in
adc
ret
in
add
push
mov
dec
lods
enter
xchg
imul
or
mov
sbb
and
outsb
adc
out
jnp
out
adc
jg
jns
dec
mov
std
adc
imul
mov
lcallw
cli
adc
out
jl
jg
add
outsl
cmp
jge
aam
fldl
jae
gs
jmp
decb
dec
mov
pop
mov
dec
stos
mov
fidivl
aad
add
fstps
aad
into
repz
jnp
outsb
and
pop
mov
ds
dec
push
cld
dec
imul
int3
in
inc
adc
jl
pop
stos
and
cmp
dec
dec
cmpsl
pop
mov
incl
dec
dec
movsl
pop
mov
std
add
dec
mov
push
dec
dec
mov
xor
push
iret
xor
xor
orb
add
imul
or
xchg
rcrl
dec
arpl
xchg
adc
loop
popf
xor
add
